sbb
add
mov
xchg
fdivrl
addr16
mov
pusha
cmpsb
lds
cmpsl
sti
fldt
cmp
jnp
mov
repz
mov
jge
mov
sbb
jae
jl
outsb
inc
jp
cmpsb
testb
adc
adc
add
jnp
mov
adc
mov
imul
test
jo
in
mov
pop
das
pop
addl
scas
mov
cli
add
jp
cmpsl
jecxz
out
imul
xchg
pop
mov
insb
xor
adc
imul
mov
ljmp
sbb
push
lds
test
adc
mov
jp
pop
ljmp
shr
ficoml
adcb
adc
mov
lea
lds
and
push
jecxz
push
jo
scas
add
adc
lods
inc
dec
xchg
outsl
mov
fisttpll
mov
xchg
push
das
rcrb
sub
dec
fscale
push
int
lret
fadd
jns
pop
cs
mov
mov
mov
test
jmp
or
arpl
in
xchg
xchg
addl
adc
ret
and
mov
cmp
mov
push
in
mov
sbb
cmp
mov
sub
out
popf
addb
enter
insb
iret
push
ret
jg
iret
or
sbb
push
pop
imul
addps
mov
lock
lea
dec
dec
adc
nop
fsubrs
add
pop
xchg
aam
lahf
cmpl
add
hlt
inc
fs
jmp
sub
mov
jbe
jmp
inc
jecxz
mov
xchg
xlat
rcrl
and
dec
sub
pusha
cli
das
adc
jg
fimull
xchg
pop
stos
loop
sti
cmp
ja
mov
push
out
nopl
push
sub
push
push
push
push
dec
push
and
push
sub
rcrb
fistpl
push
jmp
hlt
mov
add
mov
mov
lds
rol
mov
out
sbb
push
lret
xchg
dec
loope
ret
jbe
sarl
mov
fimuls
loope
lock
or
stc
push
adc
stos
push
add
jno
int3
stos
stc
sub
das
fistps
out
and
push
lcall
movsl
cld
test
je
cmp
mov
test
mov
cmp
jle
push
cmpsb
sbb
mov
gs
outsb
clc
mov
stos
out
add
push
aaa
mov
mov
sbb
jmp
jmp
push
fistpl
loope
ret
adc
xchg
push
jo
out
cltd
mov
mov
pop
adc
and
imul
sub
addr16
cmp
mov
in
dec
lret
jg
fistpll
out
xchg
dec
inc
xor
outsb
adc
popf
icebp
and
jns
es
pop
mov
in
cmc
adc
pop
xchg
mov
subl
add
lock
cmp
fisttpll
sub
push
fmull
dec
push
xchg
test
ljmp
adc
jg
push
test
out
lret
stos
and
out
and
movsl
pushf
hlt
jge
pop
mov
sbb
inc
push
stc
xlat
push
xchg
ljmp
insb
adc
sti
es
lcall
rcr
imul
notl
mov
or
shlb
pop
pop
aaa
addl
xchg
in
jo
mov
mov
jl
and
add
or
mov
cs
dec
adc
cmc
lods
stc
pop
popa
pop
je
push
insl
mov
mov
int3
addb
ret
inc
dec
hlt
xchg
jb
and
out
dec
add
dec
mov
inc
inc
mov
xchg
pushf
cmp
pop
add
mov
js
mov
movaps
mov
lods
outsb
repnz
and
and
push
leave
loop
js
cmpsl
cs
data16
and
adc
ja
lea
gs
mov
dec
and
jp
mov
loope
push
es
lea
mov
aad
mov
ja
shrb
pop
enter
cmp
out
test
jnp
sti
imul
vaddsubps
lods
stos
xchg
add
pop
in
cmp
xchg
rorl
and
xchg
stos
pop
cwtl
loop
mov
test
stc
incb
pop
mov
ret
cmp
mov
pusha
mov
mov
daa
in
xchg
push
mov
mov
fildll
mov
mov
push
jecxz
push
inc
jb
cmp
movsl
pop
cmp
ja
mov
lock
lahf
test
out
fmull
adc
out
es
pop
sub
jae
push
xor
mov
pop
sub
inc
mov
cmp
and
sub
add
and
xlat
jns
xchg
mov
scas
fbld
add
mov
sub
sub
or
adc
hlt
xorl
pop
dec
mov
mov
push
sbb
mov
cmpsb
fdivrp
rcl
mov
cmp
xchg
push
insl
xchg
into
pop
sbb
add
mov
ret
sbb
or
in
orb
xchg
inc
loop
cld
test
and
push
stos
or
cmp
inc
jg
sub
mov
stc
mov
rcrb
adc
and
jnp
dec
outsl
jbe
aaa
mov
cwtl
shl
add
add
pop
in
in
les
cmp
and
inc
push
add
jo
mov
test
and
xor
aaa
adc
repz
fistpll
cmp
cld
fimull
enter
mov
fdivs
inc
xchg
mov
stos
je
repz
enter
fs
call
sub
sub
or
stos
outsb
or
daa
or
lds
dec
pcmpgtw
shl
lods
repnz
xor
rol
test
fs
dec
mov
sub
loopne
ret
loopne
fsubr
sbb
mov
jle
jnp
dec
adc
lods
cmp
aam
sahf
mov
scas
cs
pop
add
call
inc
push
and
ja
je
pop
mov
xchg
fdivl
dec
mov
iret
mov
mov
mov
pop
repz
test
ret
loop
lods
ljmp
sub
push
lea
xor
outsb
js
inc
fldenv
rorl
dec
or
adc
mov
scas
repz
sub
mov
bnd
jmp
fsubrp
push
and
js
jbe
jae
inc
pop
push
hlt
xchg
fwait
cs
mov
rcr
rclb
pop
mov
adc
push
aaa
xchg
lcall
mov
and
sbb
arpl
out
jg
mov
mov
cmp
repz
dec
hlt
or
mov
daa
leave
mov
sarb
std
adc
add
mov
xchg
cmp
sub
cwtl
loop
sbb
jb
int
jecxz
aad
pop
cmpb
es
and
call
or
cmp
lret
adcl
int
data16
or
bound
cmp
xor
jl
mov
outsb
push
cmp
and
pop
mov
jns
and
lds
dec
bound
pop
enter
inc
adc
loope
xor
xchg
sbbb
inc
ficoml
pop
xor
sub
popl
in
push
ror
jno
stc
push
mov
pop
scas
mov
mov
mov
mov
adc
lock
push
lea
and
cmp
insl
jecxz
xchg
xor
push
jno
push
in
add
sub
push
mov
xchg
loope
sub
lods
pop
jo
and
loope
mov
lods
adc
jnp
std
mov
xchg
popfw
dec
fwait
cmp
mov
cmp
and
add
js
nop
or
cmp
scas
out
cmpsb
inc
aam
dec
cwtl
outsb
roll
cmpsb
jle
add
clc
inc
out
push
cmp
jge
pop
mov
cmp
iret
test
adc
mov
daa
lahf
aam
sbb
push
inc
repz
pop
stos
mov
fidivrs
lods
mov
cld
push
cwtl
mov
cmp
inc
pop
mov
xchg
inc
mov
decb
fisubrs
loop
jbe
push
cmp
or
push
sub
leave
test
cld
or
shl
push
jp
or
jmp
jae
ss
mov
and
xor
hlt
arpl
adc
sub
cld
andb
jmp
push
pop
sahf
lds
leave
jbe
inc
push
inc
fwait
ret
ds
add
mov
pop
and
mov
lods
mov
addl
repz
xchg
dec
das
sub
aaa
pmuludq
pop
xchg
xchg
mov
hlt
sbb
icebp
lcall
iret
jmp
inc
leave
mov
adc
mov
mov
and
gs
mov
push
hlt
fs
mov
hlt
push
ss
push
mov
jo
cld
xlat
shrl
mov
push
inc
jl
and
inc
xchg
insl
cld
jge
pop
and
call
scas
fucomip
sbb
mov
fimull
and
arpl
mov
jge
sahf
pusha
xchg
dec
ja
mov
cmpsl
add
pop
cmp
or
ret
hlt
ret
sub
sbb
jle
inc
divb
mov
aas
gs
add
sahf
gs
inc
sbb
lods
rol
mov
mov
shlb
and
jne
mov
test
sub
jne
lock
adc
adc
xor
mov
std
sbb
mov
mov
cmp
add
iret
mov
inc
push
hlt
dec
pop
mov
psraw
mov
jmp
push
in
lret
lcall
dec
cmp
push
addl
dec
jecxz
repnz
aaa
push
push
and
adc
inc
jno
jnp
ss
scas
out
jnp
push
imul
ret
add
dec
fsubrs
inc
fwait
aas
adc
cltd
pop
pop
or
mov
adc
lods
test
push
mov
shrb
pop
mov
in
xchg
pop
pop
cli
cmp
out
fs
lea
lds
jae
jo
jmp
inc
xchg
sub
loope
rorl
or
gs
insl
gs
and
add
xchg
inc
fisttpl
leave
loopne
cltd
push
cs
fidivs
fdivr
ja,pn
push
mov
cmpsb
dec
test
faddl
das
fsubs
test
mov
addb
mov
out
outsb
dec
jecxz
dec
cmpsb
inc
jne
fldcw
sub
test
shll
stos
adc
stos
mov
je
cmp
dec
adc
adc
adc
sub
push
or
nop
sbb
pop
in
xchg
or
jmp
cwtl
adc
aas
dec
mov
icebp
in
fildl
adc
aas
push
xchg
xlat
movsl
adc
push
jmp
and
cld
adc
cmc
lret
pop
int3
jb
mov
xor
inc
ja
lods
xlat
orb
mov
test
pop
les
push
divl
add
sti
test
jecxz
inc
pop
iret
es
stc
cwtl
xchg
pop
call
pop
lahf
sar
subl
pushl
out
xchg
mov
xchg
mov
sbb
mov
iret
mov
mov
mov
adc
xor
or
adc
sbb
cmpl
jl
xchg
jnp
jns
out
out
popf
inc
lret
sbb
xchg
iret
icebp
sub
movsl
jmp
inc
sub
mov
xchg
jge
sub
das
mov
test
xor
xor
pop
movsl
in
in
inc
test
and
dec
xor
sbb
mov
xor
lret
cs
push
jg
xchg
pop
jecxz
insb
cmpsb
add
into
data16
fucomi
xor
push
and
xchg
in
sub
pmullw
aaa
mov
mov
mov
leave
xor
aas
loope
mov
xchg
push
out
lea
jo
movsb
mov
push
mov
jne
popf
mov
inc
sub
popf
int3
out
cmpsb
push
push
ja
inc
nop
loopne
push
cmpsb
shll
pop
pop
sub
call
lret
sub
cmc
add
xchg
inc
mov
daa
stos
int3
shr
in
das
cwtl
pushf
ja
xchg
sbb
add
sbb
out
jp
daa
push
and
cmp
into
cmpsb
jno
inc
or
pop
out
ret
and
imul
pop
pushl
jnp
push
in
or
and
in
loopne
nop
mov
xchg
shrl
fcomps
adc
push
bound
mov
push
and
test
jo
or
mov
add
add
mov
shlb
and
jge
sbb
out
loope
push
outsb
jnp
cmp
jl
mov
pop
aas
add
fildll
scas
and
test
jnp
adc
pop
mulb
push
fxch
or
pop
or
int
adc
out
push
xchg
inc
jmp
les
imul
sbb
lret
popa
push
push
popf
insl
outsl
jnp
ret
jne
es
add
flds
jns
je
enter
add
mov
inc
sub
xor
daa
pop
and
out
pop
andb
int
int3
repz
inc
sub
cld
adc
pop
push
rol
and
pop
fldt
negl
adc
dec
loope
dec
movsb
push
push
add
out
loop
jne
cmp
sbb
ja
insl
repnz
daa
add
cwtl
cmp
inc
lcall
fmull
sbb
push
and
ljmp
and
roll
mov
mov
test
je
out
adcb
out
js
xor
dec
aad
mov
cmp
test
or
mov
stos
cmpsb
cmp
in
inc
loop
adc
sbb
or
push
fcmove
xlat
insb
mov
jmp
ja
or
or
enter
dec
xchg
aam
xor
and
rcrb
xor
ret
inc
mov
xor
jge
jg
and
fbstp
movsl
xchg
fwait
arpl
dec
fsubrl
and
je
cmpsb
jl
jge
shrb
xchg
outsl
xor
mov
push
daa
and
sarl
xchg
aaa
adc
mov
jo
mov
jnp
jnp
movsb
cmp
adc
es
popf
mov
std
mov
jne
add
test
push
sub
inc
out
inc
mov
and
add
jnp
popa
pop
ja
mov
cltd
mov
mov
insl
imul
cltd
leave
repnz
sub
mov
hlt
xor
sarl
jecxz
nop
sti
loop
repnz
sbb
arpl
stos
shll
push
mov
mov
xchg
push
xor
outsl
inc
jno
test
out
or
push
dec
leave
jnp
sti
mov
outsb
sub
sbb
xor
testb
call
adc
cmpsl
jae,pn
subl
hlt
mov
lret
cmpsb
popl
jl
xchg
xchg
rcll
out
mov
xor
outsb
push
xor
mov
pop
mov
xchg
add
repnz
jecxz
xor
ljmp
ficomps
mov
cmp
mov
mov
addr16
les
mov
or
inc
xor
in
loope
inc
call
mov
pop
je
or
jg
in
shlb
fwait
call
dec
cmp
rorb
popa
jecxz
inc
clc
jle
jmp
mov
loop
std
das
xchg
iret
mov
mov
sub
inc
scas
pop
pop
adc
into
pop
repz
and
repnz
sub
inc
aam
rolb
testb
xchg
add
in
mov
mov
stos
dec
aas
in
cmp
fistpll
stc
jne
xchg
xor
xchg
cmp
lret
shll
mov
push
outsl
gs
adcb
test
xor
bound
adc
adc
xor
pop
mov
int
dec
cs
xor
dec
rcl
cmp
adc
icebp
nop
stos
pop
test
jo
lret
sbb
test
sbb
jge
mov
push
sbb
push
mov
std
iret
iret
adc
ss
inc
mov
xchg
adcl
ljmp
enter
xchg
shlb
jo
mov
imul
jmp
addl
mov
or
or
insb
ret
cs
xor
push
cmc
pop
jae
lods
add
xchg
pop
jmp
leave
adc
loope
std
movsb
mov
imul
imul
mov
call
pusha
dec
xchg
mov
imul
mov
xchg
jecxz
xchg
and
dec
cmpsb
mov
mov
sub
mov
adc
sbbl
outsb
adc
add
mov
or
mov
gs
mov
pop
mov
outsl
fisttps
mov
push
js
cmp
test
dec
ret
inc
push
sbb
pop
cs
push
xchg
fistpl
xchg
pusha
scas
mov
lds
pop
lcall
and
pop
subb
fidivl
shlb
mov
jge
pop
or
enter
inc
lcall
xorb
test
xor
pop
pop
mov
in
ds
in
pop
leave
inc
leave
lahf
adc
fimuls
shll
push
sarl
inc
cmpsl
test
daa
lock
out
jecxz
jl
out
stos
and
mov
jo
shll
push
fwait
ds
mov
ret
cld
movsl
stc
xor
add
aam
mov
je
inc
jb
push
adc
mov
inc
aaa
sub
xchg
in
fdivrs
data16
pushf
push
cld
stos
xchg
loope
ds
out
sahf
xor
test
mov
stos
lods
xchg
jmp
daa
and
sub
sbb
es
insl
cltd
imul
sbb
jnp
in
fwait
dec
daa
in
xor
cmp
mov
mov
cmpsl
adc
out
pop
nop
pop
or
push
xchg
les
pusha
imul
sbb
mov
push
inc
cmc
dec
dec
adc
les
or
ficoml
repz
lcall
test
pop
jp
shlb
loope
cld
mov
aad
out
add
mov
xor
cmpsl
jecxz
inc
push
xchg
jo
dec
push
addb
inc
daa
add
jge
mov
cmpl
hlt
int3
in
inc
cmpsb
in
out
sbb
frstor
cwtl
data16
imul
mov
sbb
in
outsl
out
add
cs
mov
lock
and
shlb
in
aaa
imul
xor
mov
fwait
and
insl
popf
lcall
inc
sbb
push
pop
mov
jge
cmp
pop
pusha
imul
xor
or
flds
and
mov
inc
mov
mov
dec
mov
mov
test
jo
stos
outsb
pop
push
lds
adc
xor
or
push
push
lock
jb
mov
push
jge
or
aas
aad
mov
iret
test
sub
sbb
push
mov
repz
or
sub
out
stc
inc
xchg
jne
push
aaa
adc
cmp
sub
cmp
mov
pop
mov
dec
lds
xor
insl
jns
jg
in
adc
push
repz
icebp
inc
xchg
cmp
xchg
adc
arpl
lds
cmp
push
xchg
inc
sarb
xchg
popf
test
or
or
outsl
mov
inc
push
and
ss
push
inc
xchg
test
cltd
sbb
stc
shll
flds
dec
jno
mov
and
sub
ja
subb
sbb
lret
cmpsl
mov
rclb
stos
pop
clc
sub
jno
mul
adc
mov
imul
jnp
in
insb
inc
mov
movsl
lret
int3
xchg
push
and
jbe
out
cwtl
pop
std
rcll
sbb
cld
iret
mov
mov
sub
jl
sbb
shl
test
push
mov
hlt
pop
mov
and
out
fildl
repnz
outsb
outsl
ds
lods
push
inc
sbb
daa
mov
inc
add
mov
mov
dec
repz
mov
dec
fiaddl
std
mov
sub
sti
push
adc
jecxz
addr16
jmp
pushf
in
mov
xorb
pusha
xor
and
jge
mov
dec
dec
pop
add
ds
jb
add
mov
gs
sub
test
ret
cmp
cld
adc
xor
mov
push
jecxz
dec
mov
loop
xchg
fcoml
cmp
inc
outsb
loop
fcmovnb
sbb
shlb
ds
js
sbb
test
jl
in
cwtl
fdiv
xchg
adc
mov
inc
add
ret
movsl
or
icebp
lret
push
cmp
cmp
push
xor
imul
xchg
inc
stc
xor
cmpsl
int3
xchg
cmpsl
loop
push
fdivrs
adc
cmpsb
or
and
jbe
mov
dec
cltd
xchg
jmp
jo
lahf
inc
movsb
shl
arpl
mov
mulb
mov
mov
ljmp
test
sub
push
loop
cmc
popf
inc
adc
cld
adc
jae
dec
je
aad
cld
push
sub
pop
cmp
dec
iret
pop
js
mov
mov
xchg
jge
nopl
cld
xchg
test
dec
mov
adc
dec
cmpsb
imul
cmp
loop
dec
and
mov
mov
dec
sarb
ficoms
shl
cmc
jno
dec
pop
sbb
dec
mov
out
mov
mov
add
fidivs
rclb
mov
push
inc
int3
mov
and
in
adc
or
xchg
lret
lea
push
dec
je
mov
push
push
jns
js
xchg
or
mov
mov
movl
lahf
into
sbb
call
stc
lret
gs
mov
out
pop
ljmp
jne
ss
es
fsubrp
setp
add
mov
xchg
lds
stos
mov
xor
nop
mov
sub
cmp
mov
bnd
push
sbb
sub
mov
daa
mov
pop
mov
addr16
loopne
jb
add
add
nop
popa
add
out
fbld
cmpsb
rorb
and
push
je
js
fstl
sti
mov
sbb
outsl
and
aas
cmp
pop
bnd
jo
jg
scas
xchg
add
movsl
aas
mov
xchg
jle
loope
cmc
out
data16
sub
stc
jge
push
filds
xchg
mov
inc
stos
mov
fldenv
or
jo
aaa
rol
imul
imul
adc
mov
fxch
and
pop
cmpl
xor
fidivl
xchg
int
lock
pop
mov
xlat
in
or
jecxz
lahf
pop
fucom
cs
in
mov
and
jo
and
outsb
or
or
push
movsl
icebp
dec
jp
addl
leave
jle
or
cwtl
test
sbbl
push
jnp
mov
add
sahf
inc
sbb
sbb
push
or
and
push
mov
fldenv
dec
ljmp
loop
rcrl
clc
pop
inc
loopne
inc
push
idivb
aaa
das
int
pop
sti
cld
outsl
scas
dec
or
imul
dec
sbb
mov
push
out
dec
cld
xchg
test
jecxz
pusha
jl
rcrl
push
out
dec
bound
pop
jnp
cs
fistps
scas
pop
pop
mov
add
pop
cmp
sbb
and
jno
fsubp
xlat
test
jbe
fists
repnz
push
lds
xor
sub
jg
test
xchg
add
loopne
mov
in
lcall
mov
xchg
mov
xchg
data16
sub
jb
mov
xchg
rcrl
add
insb
mov
imul
ds
pop
jae
add
lea
sub
in
addb
cmc
movsl
enter
add
cs
mov
cmp
loopne
adc
inc
xlat
in
pop
fcompl
iret
shrl
movsb
fbstp
push
jp
xor
adcb
sti
out
adc
mov
fsubr
cmp
imul
push
int
mov
test
notl
lea
int3
popf
xadd
mov
push
or
pop
cmp
sbb
mov
and
fdivrs
das
data16
mov
stos
int
mov
inc
push
ret
sarb
pop
cwtl
jl
jns
fisttps
or
pop
jb
lret
push
mov
mov
aad
or
jbe
adc
pusha
cmp
jmp
popf
sbbl
lret
jno
fiaddl
fcomp
mov
into
sub
inc
pop
js
enter
idivb
loop
add
jmp
cmp
ret
aam
mov
push
pop
inc
in
mov
outsb
insb
cmp
lock
xchg
test
jno
outsb
ret
adc
fisttpl
sbb
lret
out
pop
fcomi
scas
jmp
push
ljmp
lcall
add
sub
test
imul
sub
mov
cbtw
sub
repnz
fmull
jno
imul
shll
cmp
cmp
mov
inc
and
xchg
jae
add
adc
in
or
push
cmp
sahf
xchg
into
push
repz
hlt
xchg
sbb
adc
pop
adc
mov
xchg
out
mov
jnp
dec
sub
jo
xchg
popa
or
add
mov
xchg
inc
fldt
sbb
pop
test
push
insb
ss
or
dec
pop
lods
mov
fstps
stos
dec
insb
inc
ds
movsl
outsl
lret
xor
inc
mov
cs
sub
dec
sbb
sarl
sub
and
imul
gs
jp
jns
add
std
std
add
cmp
sbb
adc
xchg
idivb
or
mov
jbe
xchg
fcmovu
movsb
enter
cld
or
xchg
push
out
imull
fistps
adc
or
iret
ret
and
and
add
xor
outsl
in
dec
xor
cmc
lock
ljmp
in
hlt
sbb
jne,pn
jno
xchg
les
arpl
mov
out
ret
mov
xor
add
xor
dec
pop
fcmovbe
stc
mov
pop
mov
cwtl
push
lret
imul
test
insl
popf
jno
adc
jno
adc
gs
cmp
test
es
orb
xor
insl
lcall
mov
push
lods
add
and
cmp
push
mov
fxch
pop
mov
cmp
enter
fcomps
rcll
sbb
imul
cmp
aaa
mov
testb
data16
aam
adc
pushf
out
or
leave
sub
dec
cmp
pop
cmp
sub
incl
test
and
pop
or
lcall
cs
jo
mov
or
add
sbb
mov
cmp
push
pushf
dec
jle
loopne
fsubl
stos
mov
inc
cmp
dec
popa
pop
and
clc
movsl
and
xchg
push
icebp
pushf
or
inc
jae
or
mov
jmp
aaa
cwtl
inc
enter
stos
daa
adc
add
cmp
pusha
cmp
mov
sbb
icebp
das
repnz
mov
in
imul
sub
push
add
push
adcb
loopne
xor
sub
push
loope
imul
test
mov
std
insb
push
xchg
cld
das
adc
addb
push
test
sbb
pop
out
shrb
shll
sbb
dec
mov
movsb
clc
mov
xchg
mov
lods
mov
inc
dec
je
sub
orb
sbb
xchg
xor
push
sbb
mov
push
push
enter
gs
int
or
cld
in
xchg
into
pop
adc
push
push
cs
sbb
std
xchg
gs
fwait
loope
fcomps
add
cltd
inc
push
inc
arpl
push
mov
repnz
or
data16
jp
dec
add
sbbb
test
rcll
lcall
stos
clc
shll
push
or
xor
mov
dec
pop
popa
stos
and
dec
inc
dec
and
sbb
inc
fcmovne
stos
lretw
or
mov
jns
xor
pop
jge
cwtl
xlat
xorl
or
pop
push
push
dec
stos
call
pop
inc
loop
faddl
sub
sbb
push
or
ja
into
pusha
inc
jecxz
push
xor
jno
mov
push
inc
adc
sbb
mov
inc
sbb
push
lret
outsb
dec
std
in
pop
rcr
mov
xor
cmp
ljmp
and
or
jmp
xchg
dec
dec
testb
mov
sub
stc
loopne
ds
pusha
adc
cli
jbe
cmp
stos
bound
push
or
lods
call
mov
fimull
jnp
movsl
mov
xorl
nop
xlat
movsb
sub
or
sbb
xor
negb
lock
repz
cltd
push
jg
mov
inc
movsl
and
cmpsb
xor
aam
insb
in
fcoml
sbb
int
sbbb
pop
cmp
mov
mov
pop
mov
mov
jecxz
clc
fsubrs
adc
mov
dec
pop
dec
adcb
aam
adc
jo
and
lahf
inc
in
jb
insl
xchg
push
inc
call
push
cld
addb
movsb
aas
mov
jns
movsb
aas
push
fs
push
in
inc
cmp
test
push
in
xor
cltd
rcrb
fistps
and
aam
loop
sub
mov
outsl
cmc
xchg
dec
push
sub
hlt
push
sub
int
leave
or
mov
inc
loope
jb
fidivs
ds
jb
ss
ds
xor
mov
jp
fistl
dec
adc
pop
repz
fsubrs
sti
sti
inc
jns
sbb
mov
add
add
rcll
mov
rorl
clc
data16
daa
push
fisttpll
and
outsl
cmpsb
iret
rcll
aad
mov
sbb
cmp
aad
cwtl
or
scas
add
sahf
addr16
dec
jmp
ss
into
jne
ret
jnp
sti
sbb
clc
enter
pop
and
sbb
mov
push
cwtl
xor
adc
pop
add
mov
mov
xor
in
cmp
incb
sub
pop
xor
cmpb
mov
popa
dec
mov
dec
xor
mov
imul
data16
shrl
cwtl
pop
xchg
pop
outsl
and
mov
lcall
or
mov
add
insl
repz
add
push
jle
sub
or
dec
mov
fildl
ret
lods
int
sbb
outsb
fcom
inc
inc
iret
jle
in
push
arpl
push
and
cs
mov
pop
xchg
push
jg
add
xchg
loope
or
ss
mov
stos
cmp
fwait
mov
cmp
xor
sarl
int3
fistpll
in
xchg
out
fstp
mov
int3
jb
cs
pop
add
pop
sub
cmp
xchg
adc
mov
jge
ficoms
enter
pusha
sahf
rcr
or
cli
cmpsb
sub
jne
cs
and
and
pusha
sbb
mov
inc
scas
xchg
xlat
and
sub
adc
enter
and
cmp
sub
push
dec
jne
aad
xor
ja
fsubl
test
mov
mov
into
and
mov
add
icebp
mov
sti
pop
paddsw
in
sbb
adc
andb
mov
cmpsb
ss
je
lods
mov
iret
shlb
cmpl
xchg
scas
cmp
scas
pop
mov
or
fidivrl
in
js
mov
xchg
or
adc
pop
push
mov
mov
rcrb
or
loop
lds
popa
stos
xchg
insb
xor
mov
inc
mov
insl
out
enter
mov
cmp
shl
mov
add
das
sbb
fisubrs
dec
jae
and
push
mov
pop
pop
or
out
xor
pop
cmpsb
xchg
pop
dec
push
adcl
arpl
shrl
fiaddl
icebp
lcall
xchg
rcll
inc
sub
mov
inc
decl
adc
or
pop
dec
mov
subb
push
fwait
xorb
addr16
mov
adc
repz
and
add
adcl
repnz
cmp
push
mov
mov
jbe
mov
sub
mov
stos
out
sub
pop
enter
dec
jno
sub
jg
cmovbe
push
jne
out
repz
mov
or
shl
leave
mov
cmp
add
pop
mov
lock
icebp
stc
fstps
dec
mov
sbb
jae
sbb
mov
ret
loope
call
inc
loopne
in
call
jmp
jns
gs
dec
jae
dec
xor
cmp
mov
lea
lret
mov
bound
adc
sbbl
sti
or
rclb
pop
jae
adc
fwait
jbe
cwtl
rcrb
rcll
call
jl
js
mov
sub
lcall
xchg
dec
orb
sbb
mov
xor
xchg
mov
ss
and
mov
loop
push
sbb
xlat
add
mov
orb
dec
and
and
insb
dec
xor
roll
mov
cmp
jle
xchg
jno
mov
in
cld
mov
ficoms
ja
or
fidivrs
bswap
mov
aas
sub
pop
pop
sbb
jp
jae
inc
loope
mov
jo
pop
je
icebp
xchg
sub
mov
insb
pop
push
in
adcb
leave
mov
inc
aam
xor
mov
or
pop
push
xor
ds
jge
push
mov
sbb
sub
mov
lock
dec
rcrb
mov
mov
lods
lret
lds
jo
add
and
mov
add
adc
jmp
fisttpll
in
jle
xchg
push
and
movsb
movsl
sbb
push
lcall
hlt
hlt
pop
loop
pop
push
icebp
pushf
xchg
out
cmpsl
mov
lcall
push
and
into
and
out
ds
inc
stos
cmpsl
fistps
jge
jae
test
xchg
push
insb
sub
or
sub
pop
mov
adc
lret
jmp
push
xchg
gs
lods
push
dec
or
mov
lods
cltd
mov
push
dec
lea
push
iret
lret
adc
dec
das
mov
inc
dec
cld
psrlq
ds
push
nop
fbstp
dec
inc
arpl
adc
or
imul
mov
lock
push
pop
ljmp
push
data16
outsb
stos
push
add
cmc
ja
jmp
jle
push
jo
dec
pop
dec
in
pop
js
int3
cwtl
add
notb
jns
cmpsl
shlb
pop
dec
mov
adc
mov
fwait
mov
call
xchg
ret
cmp
xor
and
incb
sti
mov
dec
xchg
enter
or
popa
sbb
adc
sub
sbb
add
div
sahf
push
test
sbb
outsl
inc
or
xchg
push
in
cmp
adc
mov
or
adcl
add
sub
movsb
scas
loopne
adcl
js
mov
shrb
sbb
xchg
cltd
mov
add
lahf
adc
xor
pop
pop
enter
adc
xchg
and
sub
mov
in
mov
call
mov
pusha
mov
add
xor
mov
xchg
movsb
jbe
sbb
loopne
mov
push
iret
jp
mov
sub
jnp
or
push
out
inc
lret
das
or
mov
stos
inc
sarl
arpl
sbb
fwait
inc
clc
jbe
add
pop
outsb
cltd
xor
jo
cld
stos
out
stos
mov
imul
xor
or
xor
test
jb
xlat
arpl
aad
xor
pop
insl
cmp
pop
add
hlt
pop
inc
jae
out
cmc
mov
pop
push
mov
dec
mov
movsb
jmp
push
imul
imul
stc
sub
sbb
sbb
xchg
xchg
adc
add
outsb
push
popf
fdiv
scas
out
pop
cwtl
out
subl
ficomps
arpl
mov
xchg
outsl
cwtl
adc
jmp
stc
dec
fcom
sahf
mov
sub
stos
push
mov
inc
lods
jae
cli
jg
mov
dec
les
mov
sti
add
xorl
xor
clc
negl
push
dec
bound
pop
std
ja
push
fwait
out
outsb
cmp
pushf
pop
sub
mov
ja
mov
add
cmp
inc
inc
out
pusha
iret
xor
leave
push
and
cwtl
jns
adc
rorl
mov
js
pop
mov
shlb
sti
push
mov
or
and
cmc
es
push
add
shr
sti
cmp
int3
mov
cwtl
add
fnstsw
sub
cmp
addr16
repz
int3
call
lods
scas
sub
inc
jmp
add
sbb
jp
in
fs
scas
in
movsb
pop
cmpsl
pop
adc
ljmp
lret
popa
popa
outsb
fs
stos
sub
hlt
xchg
lret
test
jb
push
clc
in
test
adcl
inc
pop
adcb
cmovg
xchg
fs
adc
and
in
and
fsubl
je
jp
and
popa
dec
sbb
add
mov
daa
lret
push
outsb
nop
jp
inc
ret
out
cmpsl
mov
stos
lea
pop
and
out
xlat
and
mov
fcoml
and
ret
into
out
jl
xorl
xlat
adc
lock
frstor
hlt
fmul
or
adc
and
fldt
cmp
add
sub
xchg
and
leave
mov
and
aam
xchg
ret
je
jl
pop
das
sbb
popa
leave
sub
dec
sti
and
test
stc
dec
mov
push
inc
rcrl
dec
sub
jg
popf
mov
adc
pop
mov
mov
pop
adc
dec
mov
mov
inc
outsb
mov
push
xchg
mov
sbb
mov
sub
push
cld
jmp
orl
fistps
sti
idivb
lods
loope
popa
das
xchg
cmp
pushf
shlb
push
dec
jnp
xor
call
sbb
mov
cmpsb
outsb
cld
pop
ret
lret
or
push
mov
notl
les
push
and
jae
inc
add
mov
or
and
jb
xlat
mov
jne
mov
push
stos
push
cmpsb
imul
jo
or
xlat
cld
xchg
add
and
jecxz
pop
sub
cwtl
sub
mov
inc
add
fwait
and
add
subb
add
mov
or
in
jmp
push
leave
scas
ffreep
sub
arpl
inc
shrb
push
mov
fisttps
cmpsb
or
push
enter
cmp
adc
sub
ljmp
icebp
sub
sbb
push
jmp
xchg
cmp
dec
xor
and
dec
and
loop
int3
nop
fimull
bound
sub
jle
movsl
std
daa
mov
fsubr
sbb
cmpsb
insb
or
es
test
and
mov
jns
or
lret
adc
mov
xor
mov
out
lcall
sbb
rclb
faddl
inc
add
gs
in
cld
out
mov
or
in
cltd
mov
mov
cmc
popf
xor
lds
jle
in
or
movsl
mov
insl
fildl
ret
aad
imul
xor
jg
adc
stos
pop
adc
outsb
mov
loopne
jge
in
mov
inc
mov
pop
imul
mull
lcall
dec
mov
dec
stos
dec
out
cmp
sub
js
ja
fucom
idivl
je
dec
fucomi
jb
lcall
test
mov
pop
mov
test
ds
sub
pop
inc
clc
mov
movsb
adc
daa
jle
lret
cs
fistpl
fcmovnb
sbb
arpl
ds
cmpsl
pop
mov
cmc
pop
and
or
lods
stos
mov
mov
aad
lea
jae
inc
pop
adc
sbb
roll
push
jge
pop
ss
fwait
push
stc
jae
enter
jmp
push
dec
shlb
xchg
das
jmp
dec
ret
es
sub
sbb
idivb
xchg
cmp
stos
shrl
test
jb
and
adc
xchg
cmp
xchg
mov
movsl
cmp
iret
cmc
cmp
adc
aas
jp
loopne
adc
ss
jl
mov
mov
loopne
xor
lock
pop
sahf
mov
push
adc
push
inc
je
lcall
add
mov
incb
mov
fdiv
sti
jp
nop
jge
std
inc
out
pusha
or
push
sbb
inc
cld
daa
shrb
stc
call
pop
imul
dec
mov
sarb
repnz
cmc
loopne
and
adc
mov
out
xchg
mov
xchg
mov
incl
xchg
fldenv
loop
ja
or
mov
push
rcll
xchg
loop
dec
fwait
adc
jg
xchg
clc
jbe
sbb
and
sub
adc
fstpl
fsubr
ja
out
stc
mov
outsb
es
push
shlb
mov
mov
mov
jnp
jne
cmpb
lcall
popa
iret
pusha
outsl
jnp
mov
mov
xlat
sub
mov
icebp
dec
push
arpl
push
push
gs
push
cmp
mov
movb
push
sub
sti
clc
fcomi
adc
cmc
rorl
shrb
stos
incb
sahf
push
jle
retw
ret
or
or
test
lods
outsl
outsb
and
aam
call
adc
data16
push
enter
add
pop
rorl
cmp
push
shl
cmpsb
jne
fisubl
imul
xchg
mov
stos
cmp
or
dec
and
rolb
mov
push
lcall
gs
or
das
lcall
in
sbb
sbb
in
andb
ljmp
adc
add
sub
repnz
sub
mov
imul
push
popf
mov
inc
push
in
xchg
jb
mov
mov
ja
sub
and
iret
sbb
sar
or
das
lcall
jg
pop
data16
sub
jb
jp
inc
add
orl
mov
push
xor
xor
rolb
push
subb
fists
push
sbb
xchg
movsb
rorb
jno
bnd
xchg
sbb
xlat
sbb
mov
sub
inc
dec
aad
mov
sbb
push
and
adc
inc
popf
push
testb
jg
inc
sti
cli
pop
inc
lcall
push
mov
rolb
movsb
adc
push
xchg
stc
out
pop
mov
pop
lods
sar
addr16
add
fists
mov
dec
sahf
and
mov
jg
movsl
cmc
lods
jp
and
rcrl
fwait
out
xchg
lret
mov
loope
lcall
imul
popf
xlat
test
mov
add
dec
arpl
mov
int3
lahf
mov
cs
rolb
sar
lret
add
dec
adc
mov
das
out
jae
jb
movsl
cmp
and
adc
fs
outsb
fcmovu
leave
sub
inc
mov
outsb
jb
inc
idiv
lods
andl
das
icebp
sti
es
aad
cmp
sub
or
adc
sub
dec
fsubp
sbb
cld
dec
icebp
icebp
jmp
adc
lds
shr
repnz
jae
ja
xchg
adc
dec
addb
sub
notl
push
insl
pop
ss
fst
lcall
popa
inc
sbb
xchg
repnz
dec
mov
in
pop
pop
movsb
mov
sbb
adc
xchg
mov
sbb
push
sub
xchg
push
and
or
inc
divb
stc
xlat
nop
push
push
fisubs
enter
jl
jnp
cmovo
xor
int
lds
dec
pop
adc
push
xchg
imul
pop
dec
xor
sti
fdivs
jno
pop
push
in
adc
test
nop
add
sub
inc
das
divl
jnp
out
leave
mov
jbe
mov
shlb
or
lret
mov
in
dec
aaa
loope
mov
addr16
pop
mov
add
hlt
pop
pusha
fucomi
sub
mov
dec
js
aas
cwtl
inc
xor
test
xor
dec
xchg
inc
sbb
xlat
or
push
inc
lret
jle
pop
aas
or
hlt
lods
adc
adc
fs
std
icebp
sahf
jmp
inc
aam
shr
sub
stc
or
cs
or
sti
les
inc
stos
sub
adc
cmp
xchg
push
sbb
adc
aas
xchg
mov
add
xor
xchg
jo
mov
inc
cmp
xorl
jns
xchg
push
sti
xlat
jl
outsb
outsl
pop
imul
iret
inc
filds
mov
xor
cs
shrl
les
data16
lock
push
flds
leave
sbb
test
sub
add
add
push
mov
scas
scas
cmp
lods
mov
insb
test
nop
push
cmp
enter
js
jb
insb
std
not
ret
iret
scas
lea
leave
test
insb
loopne
mov
enter
cmp
sbbb
mov
or
pushf
mov
and
fstpt
cmp
fdivr
sbb
jl
xchg
in
loopne
xor
inc
sub
jge
addr16
lods
insb
cmp
enter
pop
jge
xor
ds
aaa
scas
jns
xlat
int
in
movsb
inc
cld
push
mov
mov
jnp
xchg
adc
inc
or
out
jmp
scas
jns
mov
jle
insl
xchg
call
jl
jmp
jbe
lret
mov
mov
xchg
xlat
lds
fwait
orb
adc
cmpsl
pop
rol
or
xor
push
lods
data16
clc
rorl
sti
xor
cltd
mov
fcomps
cmpsb
pop
mov
fstpt
adc
push
mov
pop
and
stc
lds
mov
cmp
and
cmpsl
clc
clc
xor
cmp
sub
aaa
and
scas
cmp
pop
test
cmp
mov
inc
jo
sub
imull
and
inc
imul
out
lock
and
std
inc
lcall
scas
scas
jb
ss
and
sub
mov
sbb
mov
xor
pop
adc
jo
cltd
sub
cld
sbb
loopne
and
xchg
jbe
inc
push
push
or
cmc
je
sbb
or
jecxz
or
dec
imul
fldt
loop
or
mov
jle
lahf
or
popf
push
rdpmc
dec
mov
jbe
mov
dec
in
add
and
xor
cltd
out
notb
or
and
add
add
dec
jo
shlb
sub
fs
icebp
fcmove
push
pop
jbe
adc
xor
jb
hlt
fstpl
orb
pop
sub
mov
pushf
pop
mov
cld
ss
data16
push
nop
rcll
out
ja
fwait
inc
sub
mov
ret
cmp
repz
in
push
in
pop
scas
dec
mov
fstp
scas
mov
ret
sub
jb
stos
aas
jmp
dec
enter
jae
fdivl
fimuls
jne
pop
sub
lahf
xchg
dec
push
pushf
outsl
push
clc
sub
sub
xchg
stos
push
pusha
stc
mov
or
sahf
mov
mov
xor
subb
push
xchg
ds
mov
repz
sub
mov
fmuls
dec
scas
sub
orl
fs
lret
jp
sbbb
notb
mov
je
pop
scas
enter
dec
addr16
adc
aas
pusha
or
and
jne
addb
loopne
neg
mov
pop
daa
clc
outsb
call
mov
inc
out
jp
mov
mov
subl
psrlq
vandnps
push
mov
sub
pop
inc
jb
rep
xor
ss
hlt
adc
rcrl
xor
cwtl
dec
cltd
push
add
test
pop
dec
loop
sbb
mov
in
jge
das
lcall
sub
in
mov
cmc
int3
mov
scas
sahf
cmpsl
dec
mov
test
ljmp
mov
mov
sub
ret
or
leave
jp
adc
aas
ja
imul
loop
xlat
or
in
test
push
les
lar
outsl
push
nop
imul
popa
push
aad
xchg
mov
imulb
lret
pop
rolb
sub
movsb
lods
sbb
jnp
jno
enter
int3
mov
fildll
insl
rol
je
sbbb
dec
jle
or
imul
or
sub
shll
pop
lods
pop
fistl
iret
push
loopne
or
cmc
cwtl
in
lock
adc
loop
mov
push
test
pop
sub
lds
fwait
idivl
shrl
push
dec
mov
xchg
push
cmpl
mov
jl
in
popa
xlat
cs
dec
and
mov
into
mov
pop
int3
out
fwait
and
jp
out
fmuls
push
aad
xchg
xor
push
push
xor
xchg
adc
add
movl
movl
fmuls
cmpsl
mov
ror
mov
mov
jbe
adc
xor
arpl
out
mov
mov
jnp
dec
or
test
cli
rcr
subl
test
sti
push
leave
jno
lret
cmp
sub
cwtl
cmp
mov
cld
dec
and
mov
add
ficoml
mov
xchg
adc
icebp
or
push
loop
mov
pop
repnz
in
es
inc
cltd
outsb
inc
gs
and
imul
out
wrmsr
push
mov
push
inc
jbe
mov
iret
add
adc
sahf
cmp
xor
sbb
cmc
fisttpll
push
jno
sbb
lcall
repnz
mov
out
outsb
shlb
test
sbb
xchg
dec
jno
sub
scas
jnp
lret
addr16
inc
out
and
pop
gs
arpl
xlat
mov
add
lock
shll
fxch
test
jbe
rol
push
cltd
push
mov
ja
fs
mov
add
cmp
outsl
inc
pop
dec
sbbl
xchg
test
and
sub
cmpsb
and
mov
jnp
xchg
loop
fidivrs
aas
mov
mov
sub
adc
fs
xchg
xor
mov
or
mov
cmpsl
jl
push
loope
lret
cmp
push
scas
jg
outsb
mov
rcrb
rcrl
sbb
pushf
movsb
and
mov
cmp
push
and
mov
dec
scas
add
cmpl
push
loop
ror
inc
stos
inc
inc
or
cmpsb
xor
mov
daa
mov
dec
fucom
repz
lahf
push
shll
push
ret
add
ss
ds
test
jmp
sub
enter
xor
jnp
adc
adc
cmp
sbb
and
pop
aas
xchg
fs
and
fidivrs
mov
jmp
insl
xchg
cwtl
cmp
or
sub
sub
cs
sub
sahf
xchg
cmp
xchg
or
jle
mull
roll
cmpsb
jg
lods
fidivl
aas
testb
ds
sbb
mov
loop
popa
repz
fdivr
cmp
xchg
out
inc
mov
xchg
or
xchg
pop
aas
loopne
and
pop
gs
push
sub
push
rcrl
cmp
and
pop
dec
enter
sub
inc
and
loopne
fs
fdivl
xchg
mov
jnp
dec
imul
adc
xor
mov
push
jmp
movsl
push
and
aad
imul
cld
pushf
popf
cmp
movsb
mov
les
mov
sub
mov
sbb
cs
xor
call
or
mov
out
ljmp
jecxz
arpl
test
push
adc
adc
lcall
nop
mov
popf
jmp
lret
sbb
cld
clc
pop
std
repz
movsl
pop
test
lahf
add
push
jg
jmp
addr16
call
insl
add
mov
pop
das
test
and
fdivr
mov
inc
add
cmc
daa
and
mov
rcrl
shl
cmp
push
fisubl
xor
gs
jo
iret
lock
jnp
mov
cmp
mov
push
sub
add
sbb
loopne
xor
sub
and
push
mov
in
movsb
loopne
inc
and
mov
lret
sbb
hlt
aam
push
repnz
inc
xchg
mov
out
mul
lock
mov
in
xor
in
rcr
jecxz
jle
mov
out
ss
add
lds
pop
jnp
pop
mov
and
addr16
out
push
in
sub
inc
loopne
je
jnp
sbb
test
jmp
inc
sub
out
lcall
scas
cltd
xor
cmp
jb
jp
xchg
icebp
mov
mov
sbb
xor
insb
int3
mov
lock
cmp
push
insb
test
lret
and
fstp
jo
add
jnp
cmp
jmp
add
shrl
xchg
inc
push
or
std
jae
mov
mov
mov
enter
iret
orb
mov
scas
lds
clc
xchg
push
pop
add
ficompl
aaa
mov
das
mov
push
add
rep
dec
lret
sti
mov
out
dec
dec
add
push
mov
mov
adc
inc
sub
or
push
adc
gs
stos
sub
dec
add
xor
adc
insb
fmull
jnp
sub
jns
push
dec
nop
push
xchg
inc
imul
xchg
addr16
adc
and
loopne
cs
cld
mov
jno
sarl
loop
dec
dec
push
test
sbb
jne
sahf
push
mov
test
jp
mov
xchg
icebp
xlat
xor
dec
out
sahf
or
or
fldl
mov
pop
lret
lods
sbb
movsb
mov
sbb
xchg
lods
and
loop
mov
iretw
int
mov
cmp
test
xchg
push
pusha
jge
jl
dec
or
xchg
fldcw
push
cmp
out
sub
lahf
xchg
fwait
mov
frstor
jae
jmp
push
arpl
repz
repz
in
lea
lea
xor
fs
and
gs
mov
imul
dec
iret
jg
ucomiss
push
adc
lods
pop
lds
mov
pop
out
push
out
in
mov
jo
lcall
outsb
fmull
hlt
movsl
dec
sbb
rorl
dec
or
aam
xchg
jge
push
fcompl
inc
push
movsb
sbb
lahf
sbbl
imul
sahf
out
imul
adc
or
inc
stos
shlb
mov
and
mov
and
jle
fldenv
fiaddl
inc
sub
mov
cmp
lods
call
ror
sbb
movsl
test
lods
push
and
cmp
outsb
enter
stc
cld
into
push
icebp
and
mov
pop
scas
popl
imul
icebp
pusha
fcomps
sbb
mov
movntq
xchg
jnp
fists
inc
in
lcall
shll
hlt
dec
and
lock
push
out
divl
outsb
loope
sbb
stc
out
fucom
jnp
cwtl
loop
inc
push
pop
pop
mov
and
xor
and
sub
inc
adc
adc
xor
jns
xchg
mov
inc
cmp
gs
push
data16
mov
lahf
lret
imul
or
sub
ds
mov
in
repz
int
inc
out
sti
ror
xchg
add
jnp
int
pop
sub
and
or
push
test
dec
movsl
cmc
movsb
sbb
outsb
shrb
jno
inc
mov
repz
jge
aad
pop
cmp
cmp
fadds
and
push
pop
adc
xor
lret
rolb
or
mov
clc
push
push
cld
repnz
lds
and
es
in
sub
sub
testl
cld
push
inc
jge
sbb
cmpsb
inc
in
hlt
inc
pop
dec
mov
cmpsl
xor
xchg
adc
mov
and
daa
adc
adc
scas
adc
call
jmp
lods
pushl
sub
xor
out
mov
mov
dec
jne
sbb
sbb
mov
or
sbb
sub
mov
jo
adc
jp
pop
and
bound
push
cli
xor
push
mov
out
cltd
incl
inc
xchg
leave
rol
not
ds
push
loope
pop
pop
mov
or
push
jle
stos
insl
dec
movsl
ja
lea
adc
xchg
mov
sub
inc
enter
sub
ficoms
fs
out
int3
inc
arpl
inc
pop
pushf
xor
xacquire
dec
cmp
mov
mov
add
dec
loop
jnp
xchg
pop
add
cmp
mov
add
decl
call
xor
dec
adc
popa
hlt
hlt
in
sub
xlat
push
sub
sbb
lea
popf
mov
movsb
fwait
inc
fmul
out
pop
mov
mov
test
mov
jae
rcrb
adc
fstpl
stos
fistpll
out
stos
fwait
insb
mov
or
cmpsb
mov
in
in
cs
fs
mov
inc
test
or
sub
push
push
push
pop
imul
sbb
mov
mov
popf
xor
les
dec
pop
push
test
push
dec
sub
dec
or
mov
ret
add
or
cmp
sbb
pop
inc
hlt
xchg
cmc
sbb
rcll
js
fwait
cwtl
and
test
lret
xorl
cwtl
dec
adc
push
adc
mov
dec
inc
test
and
sub
int
lods
cmp
out
addl
mov
pop
mov
mov
sub
sarb
ds
jle
das
mov
add
cmp
aam
xchg
jl
std
jmp
dec
hlt
insb
scas
fsubrp
out
mov
sbb
fadds
or
mov
frstor
mov
adc
inc
cld
mov
arpl
push
imul
popf
xor
add
add
dec
pop
mov
dec
cmpsb
div
subb
in
shlb
jmp
mov
pop
dec
jbe
push
adc
leave
pop
cmp
je
das
repnz
test
push
aas
mov
in
push
push
dec
pop
ja
pusha
sbb
pusha
xchg
mov
xor
add
js
dec
xchg
int3
or
into
cmp
push
jmp
and
mov
adc
cmp
jnp
xchg
cmp
add
fwait
xor
not
arpl
les
jmp
or
dec
pop
cmpsl
xchg
ljmp
clc
out
sbb
and
mov
xchg
outsl
and
repz
adc
loopne
adc
push
cmp
lods
dec
cs
dec
subb
adc
shl
pushf
xchg
dec
pop
mov
fdivrl
call
xchg
pop
clc
inc
popf
lea
push
fimull
adc
cmp
jecxz
xor
movsl
daa
les
push
mov
int3
and
mov
mov
mov
pusha
mov
dec
in
cmp
dec
inc
push
ljmp
jb
inc
dec
inc
or
adc
inc
hlt
movsl
enter
mov
divl
cmp
je
cmp
xchg
mov
pop
push
lds
mov
dec
mov
jp
subb
jl
mov
mov
addr16
sub
xchg
fadd
inc
ret
cmc
dec
mov
fldl
loopne
aas
add
jbe
jle
push
out
out
push
dec
scas
std
scas
sub
stos
mov
add
jmp
aas
icebp
sbb
xchg
fs
inc
movsb
jns
int
dec
mov
pop
xchg
xchg
divl
adc
mov
fcoms
out
cmp
test
rcll
cmp
pop
push
leave
xor
mov
mov
and
shl
or
dec
cld
mov
dec
cmc
add
add
sub
push
cmc
sub
pop
xchg
sahf
gs
push
inc
arpl
xor
jl
in
imul
lods
gs
mov
sarl
adcb
jl
aad
hlt
pop
push
xchg
jl
inc
mov
xchg
test
add
aas
add
sub
daa
add
test
idivl
inc
into
cmpsl
sbb
mov
jae
sbbb
cwtl
inc
adc
xlat
push
jnp
inc
out
out
pop
dec
sbb
sub
and
out
mov
dec
inc
mov
push
jb
shlb
ja
aam
fucomp
jns
and
popf
mov
and
add
faddp
mov
or
cld
jo
sbb
stos
fdivrl
or
push
jmp
xchg
add
sbb
xchg
incl
insl
addb
jbe
push
inc
mov
xchg
pop
push
add
into
daa
icebp
out
inc
movsl
lahf
loop
xchg
sub
cmpsl
xor
xor
inc
sbb
mov
call
pop
inc
sahf
xchg
imul
add
fcomp
into
xchg
jo
mov
mov
sbb
clc
cwtl
call
inc
lret
inc
call
or
leave
sub
xchg
dec
fstps
inc
shll
rorl
insb
std
dec
sbb
iret
mov
cmpsl
lods
inc
leave
mov
lret
ds
mov
mov
enter
or
or
mov
shrl
lret
mov
push
xchg
push
aad
incl
adc
imul
and
sbb
push
push
adc
insl
or
pop
int3
clc
mov
enter
fnstenv
cmp
mov
ljmp
ja
push
mov
and
jmp
push
fstps
ds
test
push
js
dec
and
xlat
fdivrp
inc
imul
fadds
and
mov
imul
xchg
add
adc
fwait
mov
shll
dec
stos
push
aad
roll
pop
xorl
and
outsl
imul
push
clc
xlat
mov
pusha
push
pop
jmp
andl
cmc
js
std
lret
xor
daa
or
scas
xchg
mov
or
mov
fmull
adc
fmulp
stos
and
jae
sbb
daa
ss
sub
sar
in
ffreep
call
subb
jmp
loope
sti
add
and
repnz
jge
loope
enter
out
rolb
dec
fbstp
cltd
aaa
xchg
or
rcl
push
mov
jae
fldt
jge
inc
inc
sbb
add
jne
jae
pop
cmp
notl
inc
add
sub
clc
ror
sbb
int3
xchg
testb
jle
jmp
imul
call
dec
xchg
xchg
or
jae
or
sub
mov
push
push
repnz
sub
mov
mov
outsb
gs
out
ret
lret
insl
icebp
fisubl
nop
ret
xchg
xchg
cli
pop
std
pusha
aaa
lock
push
jnp
mov
sub
mov
mov
mov
sbb
xor
mov
sub
jnp
popf
and
int3
or
orb
mov
insb
iret
cmp
outsb
jne
js
roll
scas
popf
add
inc
cmp
dec
andl
xor
insb
mov
lods
arpl
shlb
push
in
mov
ds
test
sti
mov
andb
jmp
sbbl
xor
sub
in
je
es
shlb
ret
xchg
pusha
xchg
out
sub
push
push
mov
pusha
add
lea
lods
sub
sbb
and
adc
imul
pop
jnp
sub
gs
movsl
dec
pop
jno
cli
xchg
cmp
fwait
adc
clc
mov
xor
mov
cld
arpl
adc
adc
shrb
push
adc
mov
sub
je
xchg
and
jl
or
jae
mov
and
lods
loop
mov
jae
mov
out
mov
cwtl
fstl
test
pop
enter
dec
test
hlt
mov
inc
into
pop
ljmp
and
dec
rorb
cmp
in
mov
test
mov
mull
adc
outsl
mov
or
xor
out
stos
push
push
mov
out
mov
push
sbb
test
or
inc
lret
or
mov
lds
push
rorl
adc
loope
fwait
daa
sub
inc
or
pop
xor
fisttpl
pop
pop
in
push
xchg
outsl
jno
mov
aam
adc
push
lret
inc
jecxz
lds
nop
push
out
jmp
add
inc
int
inc
sub
call
daa
xchg
test
push
lods
out
xor
movb
enter
aad
addr16
insb
scas
jg
aam
loop
jmp
in
andl
pop
mov
adc
cmp
or
jb
cmp
popa
lock
shr
cli
lock
mull
jecxz
jb
imul
pop
sub
xchg
sub
mov
adc
cmpsb
pushf
out
pop
shll
fnsave
or
mov
jb
ja
pop
lcall
add
push
mov
imul
out
push
jge
cs
or
testl
cmp
mov
stos
outsl
mov
fisttpll
out
addr16
or
mov
push
vmwrite
inc
mov
inc
add
adc
jmp
mov
das
data16
popf
mov
mov
or
ss
jl
and
adc
sti
ds
iret
ret
mov
add
sbbb
mov
lcall
sbb
std
fsubrs
cmp
cmp
xor
and
jecxz
xchg
and
popf
fwait
data16
sbb
or
sbb
out
lret
dec
aas
xor
enter
sub
ds
fisubs
outsl
in
aam
cmc
cmp
cmp
popf
xchg
int3
or
inc
jg
xor
jp
jp
dec
mov
inc
cli
test
cs
dec
xor
fisttpll
jb
jbe
js
out
or
cmpsb
adc
pushf
xor
xchg
xor
add
out
push
pop
dec
inc
ss
shrl
bound
sbb
add
in
das
xor
pushf
ds
fldt
mov
lea
or
insb
push
out
sub
and
in
and
fisttpl
jbe
add
sub
pop
push
hlt
cs
mov
pop
adcl
ja,pn
sbb
dec
mov
cld
cltd
cmp
pop
xchg
loope
call
nop
gs
mov
mov
xor
xchg
scas
loopne
pop
lods
dec
xlat
movsl
push
mov
lods
ljmp
xor
jl
adc
loope
and
scas
adc
xlat
and
adc
lea
jbe
lret
pop
and
movsb
sub
enter
fstpl
jbe
test
cwtl
popa
jl
mov
sarw
mov
loop
bound
or
sahf
inc
dec
pop
cwtl
lods
daa
sbb
or
ret
mov
ss
xor
sti
inc
test
and
add
lret
insl
mov
xchg
out
xor
scas
mov
mov
mov
xor
loope
mov
dec
mov
add
stos
mov
hlt
aas
dec
pop
out
test
push
jo
inc
into
fcmovnb
push
into
sbb
addr16
jns
iret
dec
jecxz
outsb
mov
cmp
mov
jmp
sub
flds
xor
inc
gs
sub
aaa
dec
mov
out
cmc
inc
pop
es
bound
sarb
into
lds
add
cmpl
sub
xchg
mov
enter
cld
inc
loop
push
cmp
mov
jbe
mov
cmp
mov
popf
ror
inc
ret
xchg
add
shrb
jb
jge
popf
jne
mov
ljmp
addb
sub
inc
scas
pop
insb
inc
sti
cmpsb
cmpsb
mov
lahf
cmp
add
jl
out
xchg
cmc
aaa
cmpsl
lret
or
pop
sbb
jb
das
nop
adc
decl
push
adc
mov
lds
fsincos
or
sub
and
adc
call
sbb
inc
jno
add
int
fsubs
push
lock
inc
push
push
icebp
inc
sub
movb
bound
xchg
lcall
add
xor
xchg
and
inc
pop
js
push
pusha
inc
repnz
in
movsl
xchg
sahf
xlat
and
adc
xchg
jl
adc
push
negb
or
jge
loopne
mov
adc
add
add
mul
dec
inc
int3
sbb
lea
and
stc
std
xchg
incb
push
inc
andl
jp
clc
mov
adc
sub
in
cmc
mov
mov
lret
test
out
sub
data16
ss
cmovnp
lods
imul
push
inc
mov
xor
leave
movsb
fs
fnsave
pushf
ds
mov
std
mov
dec
jecxz
cmp
hlt
scas
sbb
sbb
enter
imul
pop
icebp
out
pop
fistpl
fnstenv
popf
cwtl
lret
test
xchg
rolb
out
sub
inc
repnz
adc
adc
mov
add
popf
out
push
mov
enter
inc
pushl
sbb
push
je
xchg
xchg
sub
aas
sbb
into
clc
xchg
mov
lcall
fmulp
es
pop
scas
loop
sub
mov
fs
addb
out
cmpsb
push
jmp
fcmovbe
add
imul
dec
aas
leave
push
das
in
loope
insl
and
das
fildll
xchg
outsb
dec
mov
add
push
movntps
xor
std
adcb
repnz
pop
xor
sub
jne
cld
arpl
addr16
and
mov
mov
sub
outsl
cmp
sub
sub
inc
sbb
imul
add
nop
xor
into
movb
dec
lods
inc
jne
mov
mov
in
addr16
push
sub
sub
add
gs
mov
xor
jb
in
int3
xlat
or
mov
ret
mov
pop
enterw
out
pop
pusha
int3
in
and
push
add
jle
and
mov
xchg
adc
ret
stos
mov
mov
mov
jo
in
or
mov
mov
mov
ja
fs
icebp
and
or
pop
sarl
loopne
mov
xor
xor
cmpsb
lret
sbb
push
enter
jmp
imul
je
and
sar
pop
inc
sbb
fwait
out
sub
cmp
leave
mov
xchg
mov
sbb
jns
sti
lea
int
lcall
cmp
adc
xor
mov
adc
jp
and
fwait
insb
dec
fucomip
pop
sub
addw
sbb
push
sub
pop
mov
in
mov
cld
pop
addr16
xchg
push
xchg
jo
fs
mov
and
adc
mov
inc
je
test
xchg
gs
sub
pop
insl
jnp
jg
pop
pop
movsb
jnp
je
xchg
push
addr16
xchg
out
jg
dec
push
out
in
fstp
sub
test
mov
xchg
mov
push
loope
push
aad
ror
adc
lods
loope
jnp
ss
and
test
or
mov
inc
cmp
push
pop
mov
pop
rcl
pop
fldenv
rcll
negl
sbb
jle
or
outsl
pop
pusha
repnz
cld
push
push
xchg
fldt
fwait
add
lahf
mov
in
ret
iret
bound
xor
dec
mov
mov
orb
pushf
xchg
cwtl
inc
add
insl
leave
filds
adc
push
js
mov
test
cmpsb
inc
clc
jnp
mov
shlb
les
jno
mov
jb
mov
cmp
int
add
sub
push
inc
rcrb
aam
popa
and
inc
lret
and
ss
scas
rcr
daa
and
add
mov
inc
mov
mov
shll
repnz
pusha
jg
dec
daa
xlat
xor
imul
sub
lods
xchg
pop
push
in
in
mov
inc
icebp
sbb
xor
mov
mov
pop
daa
push
mov
int
jge
aaa
in
movsl
xchg
sbb
ljmp
jl
cwtl
xchg
sub
out
or
xchg
test
and
xchg
or
js
push
inc
mov
push
push
xor
mov
pop
mov
push
fwait
adc
lret
rorl
xor
or
jge
in
inc
mov
push
mov
push
repnz
cltd
outsb
push
cmpl
fs
push
mov
dec
mov
cmp
insl
insb
mov
pushf
push
xor
xchg
sbb
dec
loope
ficoml
les
mov
sub
inc
push
pop
jno
adc
mov
aas
scas
mov
movsl
push
lret
push
fwait
test
add
notl
or
sub
aam
into
sbb
cltd
fiadds
shr
pop
cld
fsubs
je
les
dec
mov
mov
xor
xlat
insl
jne
lods
imul
xchg
dec
fildll
cmpsb
fs
mov
mov
pop
jmp
in
fsubr
xchg
scas
inc
mov
jle
mov
cmp
xchg
or
dec
nop
es
cs
aad
push
adc
adc
das
mov
inc
pop
jb
daa
add
mov
lods
pop
roll
roll
outsl
push
adcb
cmp
pop
fs
mov
xor
cmp
lock
ja
sub
faddl
fldt
imul
orb
push
clc
mov
loop
mov
frstor
repz
ret
jns
mov
cltd
pop
into
cli
push
add
mov
xor
sub
mov
mov
mov
ficomps
jp
mov
pop
pop
mov
stos
xlat
mov
cmp
lahf
dec
arpl
adc
out
jmp
ja
std
dec
je
sbb
dec
jne
ljmp
dec
cmp
cmpsl
pop
int3
cltd
adc
inc
cmpsl
mov
jle
mov
push
xchg
inc
call
pusha
nop
mov
mov
mov
call
sbb
add
lret
sub
cmp
cmp
mov
outsb
xchg
fistpll
aam
add
xor
mov
mov
scas
hlt
test
mov
cmp
xor
xor
bound
xchg
mov
repz
mov
xchg
jl
in
cmp
cmpsl
xor
push
push
lods
dec
test
cli
ror
inc
out
shlb
popf
xor
sub
lods
adc
push
repnz
mov
outsl
call
movsb
jmp
insl
out
mov
in
inc
ljmp
aad
and
sar
jle
stos
nop
popa
sar
cmpsb
imul
push
lret
inc
sbb
loop
and
xlat
mov
cmpsb
mov
mov
mov
mulb
push
jp
dec
stc
pop
insl
div
imul
push
in
cmp
and
inc
jp
xchg
stc
out
cmp
mov
lods
aaa
loop
adc
mov
mov
xor
fwait
gs
mov
test
sub
push
movsb
jecxz
xchg
pusha
cmp
sbb
push
push
cmpsl
mov
shlb
shll
mov
dec
aad
jl
data16
xor
sub
ja
repnz
push
dec
ds
inc
or
adc
sub
xchg
mov
movsl
mov
popf
adc
scas
xchg
nop
notb
and
popf
dec
lcall
jo
xchg
insb
lea
pusha
mov
pusha
push
loope
push
stos
test
jmp
sub
or
jecxz
repz
xor
daa
dec
push
das
xchg
ja
mov
data16
gs
mov
sub
test
popa
imull
stc
test
rcll
fimuls
mov
sbb
mov
or
addr16
jl
push
idivl
cli
sub
cmp
cmp
mov
ljmp
cld
mov
std
pop
xlat
ja
std
fisubs
orl
test
mov
es
xor
js
aad
mov
inc
mov
push
mov
mulb
jns
negb
lret
in
pop
test
inc
and
pop
xor
dec
sbb
out
imul
push
ljmp
or
mov
daa
xchg
cmp
xchg
add
adc
add
ss
mov
sti
lcall
pop
cmp
movsb
mov
cmpsb
in
adc
mov
cmpsb
subb
scas
jno
mov
orb
aad
test
pop
cli
add
jae
push
enter
push
push
and
movsl
or
ja
jne
xchg
dec
cltd
jno
or
fisttpl
cmp
push
mov
fsubrl
imul
inc
add
cmp
inc
loop
xchg
cmp
pop
jno
in
sti
sarl
pop
pop
pop
repz
adc
lret
or
push
fs
pushf
outsb
push
jo
pop
jne
shlb
or
shlb
push
lcall
cli
add
cmp
push
or
pop
cltd
mov
jmp
lock
mov
adc
loop
dec
testb
mov
dec
nop
icebp
sahf
lods
cld
addr16
addr16
mov
mov
adc
dec
imul
xchg
inc
push
out
xchg
cld
add
mov
adc
dec
mov
clc
dec
das
xor
cs
fs
lds
and
inc
in
mov
adc
mov
in
sub
stos
and
push
sbb
cwtl
enter
mov
cmpsl
sub
sub
mov
test
out
push
lahf
popf
mov
test
popa
fdivrl
xchg
loope
jg
sti
cmp
xchg
adc
jbe
jno
pusha
inc
icebp
cld
adc
xchg
ret
lea
sbbl
scas
ss
in
nop
add
mov
pop
mov
mov
leave
xor
jae
std
and
push
dec
add
dec
dec
mov
and
inc
dec
shlb
add
div
fwait
ljmp
mov
xchg
notb
mov
fs
xchg
xchg
mov
mov
test
xchg
stos
add
push
add
test
add
movsl
mov
jmp
adc
andl
lock
and
stos
pop
xchg
arpl
jns
mov
cmpsb
inc
jae
aas
dec
shlb
imul
insb
bound
movsl
jb
jge
xchg
mov
shll
sbb
pop
or
jns
jmp
jmp
xor
jb
inc
push
pusha
jle
out
jno
sbbl
ret
js
movsl
mov
sbb
neg
sar
mov
js
mov
dec
jmp
pop
ljmp
stc
cmp
jns
shll
xchg
outsb
mov
in
xor
inc
cli
movsl
or
sub
and
outsb
adcb
mov
mov
jae
mov
ljmp
sarl
sub
sbb
add
fstpl
idivb
mov
in
hlt
test
mov
stos
add
pushf
cmpsb
fsubrl
in
xor
lcall
and
lcall
xlat
pop
icebp
lds
jmp
pop
jnp
xchg
cmp
out
mov
mov
cmpsb
dec
and
or
out
xor
std
jmp
lds
imul
jle
stos
fidivrl
loope
pop
lods
jmp
aaa
mov
push
or
push
sub
leave
lods
test
pop
inc
lret
jnp
stc
loope
lret
jne
hlt
movsl
movsb
iret
je
push
repz
xchg
lcall
push
repz
sbb
fwait
inc
cmp
comiss
pop
add
scas
js
lods
mov
pop
push
xor
xchg
enter
pop
inc
push
out
shlb
fnsave
out
repnz
mov
sahf
xlat
adc
add
fisttpll
pop
xor
movsb
cmc
mov
push
and
mov
xchg
orb
gs
add
adc
mov
fdiv
scas
mov
xchg
call
imul
pop
leave
jmp
stc
adc
mov
xchg
push
aad
dec
jae
ret
inc
cld
xchg
cmpsl
jbe
xor
lret
inc
ljmp
ror
lods
sub
mov
jns
dec
cwtl
aam
arpl
mov
call
or
and
jl
pop
or
aam
inc
int
imul
ds
scas
jmp
adc
cmp
jmp
or
imulb
adc
faddl
sub
cli
push
lcall
leave
mov
inc
xor
adc
push
filds
jp
or
jo
mov
test
scas
data16
and
fnstenv
lea
aaa
xor
inc
stos
dec
movsb
ss
out
xor
imul
sub
jmp
leave
stos
call
imul
dec
std
jne
out
mov
adc
lcall
push
addr16
lahf
jge
popa
sbb
nop
out
cmp
adc
test
mov
push
inc
mov
popf
cwtl
push
mov
arpl
test
mov
mov
add
js
leave
test
inc
imul
inc
int3
add
cmp
test
inc
mov
ja
add
mov
mov
stos
cmp
pop
jl
shrl
xor
xchg
dec
mov
or
push
int3
adc
scas
lock
rcr
sub
sbb
leave
pusha
jne
push
pop
mov
and
icebp
mov
mov
lods
inc
push
or
sbb
sbb
and
lock
mov
outsl
std
jp
push
cmp
test
ja
mov
cmp
icebp
mov
loope
adc
mov
mov
sbb
bound
pop
or
iret
jnp
out
movsl
sbb
jno
fsubrl
lock
inc
rcrb
push
dec
cmp
ljmp
push
ficomps
xor
pop
fstpt
stc
dec
mov
into
jae
jecxz
into
iret
cmpl
fisubl
lret
outsl
lods
add
rolb
addr16
dec
pop
sub
mov
lods
in
jge
rclb
dec
add
pop
push
mov
xor
out
test
mov
cmp
mov
in
cmp
mov
lds
xchg
push
cli
jle
lret
and
dec
sub
cwtl
lret
aas
and
pop
mov
push
pop
shll
cmp
loop
enter
popw
lods
outsb
mov
and
sbb
jg
xor
mov
loope
sub
push
fldl
pop
mov
sbb
mov
cmp
push
ret
mov
stc
pop
imul
cmp
cmp
jbe
jbe
jmp
cwtl
cmp
lret
cmc
xor
pmulhuw
icebp
mov
mov
repz
xchg
int
mov
enter
mov
jo
xor
jne
sub
ficomps
or
dec
loop
dec
pop
add
cmp
daa
and
in
lret
sub
jp
dec
orl
inc
out
adc
mov
jle
loopne
dec
sub
pop
dec
insb
movsl
jecxz
out
xchg
call
shlb
inc
or
adc
and
dec
sbb
push
mov
mov
aaa
icebp
sbb
imul
sbb
lea
inc
lret
xor
out
xchg
xor
nop
testb
cli
rorl
sbb
mov
jmp
add
dec
call
jo
and
ds
pop
scas
out
sti
in
dec
test
adc
sbb
and
cwtl
push
arpl
xor
xchg
push
sub
loope
lea
inc
insl
xchg
pop
dec
adc
insl
lods
dec
pusha
xchg
sbb
loope
shll
ss
into
xor
xchg
inc
out
adc
fsubrs
xchg
mov
and
aad
aad
xbegin
and
xor
sbb
hlt
mov
xchg
aam
sub
mov
pop
fadds
mov
push
lds
fisubrl
mov
inc
mov
mov
sub
cmpsl
fnstcw
cmpsl
popa
and
test
je
aad
push
int
push
pop
mov
mov
or
movsb
or
and
mov
lods
inc
dec
mov
xchg
cmp
rcrb
lea
arpl
xor
fidivs
jmp
fs
xor
js
outsl
faddp
jl
add
xchg
neg
mov
imul
cmp
repz
mov
jne
fsubr
insl
xchg
sbb
xor
inc
ds
je
mov
pop
maxps
or
in
add
dec
lea
mov
mov
add
mov
adc
jnp
ss
fnstsw
xor
xor
shll
icebp
cmp
or
push
mov
sbb
jg
xchg
aaa
xor
jg
sti
push
insl
xor
icebp
or
inc
push
cmp
fsubl
pushf
repnz
mov
xorb
jp
pop
scas
movsb
popf
push
xor
push
jnp
outsb
nop
jge
call
sbb
rol
adc
int
mov
popf
inc
or
cltd
imul
dec
push
test
cwtl
arpl
test
lea
cmp
shlb
add
out
push
xchg
nop
insl
and
cli
cli
or
mov
aas
int
in
test
pop
or
ljmp
dec
xchg
cmp
mov
shll
popa
cltd
test
int3
movsl
rol
sub
fistpll
pop
mov
and
movsb
scas
lea
mov
mov
mov
add
jns
icebp
shll
test
mov
movl
jne
cli
ds
repnz
or
sub
jge
cmp
hlt
ficoms
jecxz
out
pop
push
clc
adc
xor
insb
call
pushf
test
ficomps
dec
repz
gs
adc
pop
and
lods
mov
dec
mull
cmp
fcomi
pop
mov
add
mov
jmp
test
jno
out
push
fnsave
mov
adc
pop
sti
cmc
inc
jp
fcmovb
cmp
dec
dec
and
mov
clc
and
sahf
dec
mov
cltd
lods
andl
push
iret
inc
loope
gs
in
and
ror
dec
test
aas
imul
cmpsb
mov
mov
dec
mov
jae
lods
and
xor
idivl
inc
sti
push
loop
jbe
arpl
or
es
add
fsubs
and
add
pop
pop
or
lea
add
inc
jecxz
enter
add
dec
xor
idivl
sub
and
sbb
cmpsl
hlt
cmp
lds
lods
test
cli
mov
sub
test
das
in
add
sub
jg
aad
cmp
or
mov
adc
xor
jecxz
inc
cs
or
out
adc
mov
popa
imul
orl
adc
xchg
gs
movsl
xchg
scas
xchg
push
dec
sub
mov
jp
fwait
mov
test
jp
ffree
ret
sub
repnz
mov
jge
pop
insl
sub
mov
add
cli
xchg
dec
or
push
cltd
lret
loopne
jnp
sub
jp
fiaddl
aad
lahf
scas
push
dec
ret
ret
cmp
xlat
sub
dec
in
sub
dec
sbb
sti
or
lods
shl
popf
mov
rclb
mov
push
lcall
les
pusha
fmuls
js
daa
add
mov
sbbl
sbbl
mov
scas
and
icebp
test
jae
lea
xchg
sbb
mov
cmpb
repnz
pop
push
inc
mov
sarl
pop
cs
push
jbe
or
addr16
or
adc
cmp
dec
dec
push
pop
mov
rcl
sbb
mov
push
add
int
cmp
jnp
testl
mov
je
fcomps
cmp
leave
imul
sbb
out
xor
andb
pop
outsl
shrl
and
popf
pop
dec
push
hlt
stc
cmpsl
jb
add
push
je
fcmovnbe
ret
adc
mov
sbb
test
pop
jg
jne
lods
pop
out
test
xchg
push
push
sub
es
addr16
adc
pop
push
ficoml
mov
cli
mov
jne
cmp
pop
popf
pop
sub
clc
xor
mov
mov
aas
inc
call
xchg
popa
xlat
fiaddl
cmc
cmp
outsl
xchg
lret
and
andb
inc
mov
dec
ljmp
cmp
cs
js
enter
jecxz
and
xlat
nop
mov
into
jnp
mov
orl
out
and
pop
mov
jl
jl
jecxz
arpl
sub
dec
lahf
sub
in
imul
out
aad
dec
dec
jno
cmp
loop
cs
inc
mov
sbb
jg
loop
adc
int3
adc
xor
push
outsb
nop
test
add
inc
sub
dec
aam
or
mov
add
mov
add
les
jae
cmp
fisttpll
inc
fwait
loop
jo
aaa
in
inc
mov
push
iret
das
mov
xor
or
add
clc
subb
mov
inc
jo
push
leave
scas
push
mov
pop
in
sbb
ret
fldt
fistpll
mov
mov
or
add
jmp
push
pusha
dec
stos
js
filds
push
jle
cmp
sahf
add
popf
inc
jle
push
lahf
sub
mov
push
or
xorl
rcll
jo
mov
sub
add
inc
or
call
xlat
arpl
stc
loopne
ret
cmp
mov
jo
shlb
push
xchg
ds
in
pop
xchg
call
bound
orl
xchg
mov
rorb
loope
push
pop
mov
in
push
ret
jge
dec
mov
adc
sbb
push
push
loope
xchg
jns
clc
jb
sub
cs
cmp
sub
jb
cmp
xchg
add
rcl
push
test
mov
jg
mov
mov
mov
cmp
call
dec
out
and
fstl
pop
mov
pop
aad
mov
int3
pop
enter
push
cmp
imul
inc
ljmp
repz
cmp
push
out
sti
arpl
jl
in
lods
add
sub
shlb
add
fcoms
push
in
adc
sbbl
xchg
pop
mov
sbb
or
mov
mov
push
shlb
aam
test
js
adc
xlat
addr16
das
loop
leave
int
push
in
das
xchg
cltd
mov
mov
sub
dec
imulb
call
ljmp
add
stos
cmpsl
mov
or
std
inc
adc
mov
or
adc
mov
inc
fisubs
cmc
je
adc
das
sbb
dec
mov
cmpsb
test
repz
pop
xchg
aad
movsl
xor
sbb
repnz
out
in
lods
pop
pop
outsb
bound
test
leave
mov
or
xchg
push
les
mov
je
inc
xor
or
std
cmp
mov
inc
add
insl
mov
lds
pop
into
inc
in
orl
js
mov
inc
and
or
add
pop
pop
insb
cmp
jnp
pop
jae
stc
sub
cvtdq2ps
int
shlb
inc
xor
dec
xorb
jno
aas
mov
addr16
pop
pushf
jnp
ret
ret
dec
aas
mov
fcmovnbe
xor
fnstenv
fs
sub
clc
sti
mov
lret
sub
out
sbb
sub
rep
mov
xlat
mov
testb
imul
adcl
cmp
adc
insb
inc
ja
popa
shl
aaa
mov
loop
cmpsl
enter
adc
out
sbb
adc
push
push
gs
jecxz
mov
sbb
and
lcall
rcl
stos
sub
or
pop
loop
and
push
enter
and
add
lods
cmp
std
sbb
mov
jecxz
arpl
push
add
inc
out
test
negl
jns
ret
sub
or
repz
fs
xor
popf
pop
push
or
dec
jb
cwtl
ljmp
imulb
stc
ret
pop
inc
xlat
lahf
push
ficomps
pop
mov
mov
or
sbb
enter
les
cli
testb
loopne
xchg
pop
sbb
and
in
enter
or
sub
out
add
push
data16
adc
gs
or
add
lahf
repnz
jle
jmp
inc
lock
xor
adc
aad
out
mov
sbb
mov
push
push
sub
or
jae
xor
imulb
addr16
lock
mov
sub
xchg
xor
jge
and
xchg
arpl
cmp
imul
mov
jp
pop
dec
lcall
xchg
gs
jmp
mov
pop
ret
pop
add
je
aas
inc
jle
mov
mov
push
imulb
or
sar
mov
and
pop
icebp
sahf
adcl
stos
neg
adc
mov
push
pop
push
or
lock
shll
stos
stc
lds
or
imul
xchg
push
adc
lods
xor
enter
and
push
shrb
in
sahf
or
mov
mov
scas
sets
mov
leave
mul
adc
sbb
jns
cmp
inc
stos
arpl
mov
adc
cmp
aam
jmp
out
cli
jle
insb
pusha
sbb
mov
cltd
push
lret
movsl
es
dec
ds
outsl
add
dec
test
int3
adc
cmp
in
rol
mov
jnp
jp
push
inc
cmp
leave
notb
xor
rorb
cld
pop
cltd
popa
lds
dec
mov
js
shlb
pop
or
mov
outsl
xor
loopne
push
xor
cmc
sbb
inc
adc
or
adc
jg
fstpt
mov
cli
sbb
int
sub
sarb
sbb
pusha
xor
sub
aad
adc
lcall
call
push
loope
lret
in
clc
test
enter
orb
sbbb
pop
mov
adc
fildl
movsb
je
xor
jle
mov
pop
xchg
stos
and
in
push
dec
or
dec
sub
addr16
xchg
inc
xchg
mov
loope
or
stos
std
sbb
add
xor
loop
jb
fs
mov
xor
fwait
adc
inc
shrl
mov
imul
jmp
jle
testb
sbbl
jbe
or
xor
aas
jl
shrb
lret
test
fsubrs
fcomps
and
data16
xchg
cmpl
dec
sub
aam
stos
dec
icebp
js
lds
lret
mov
jbe
mov
adc
dec
idivb
push
push
ds
sti
loop
rcrb
ljmp
ljmp
inc
and
imul
fistpl
call
fstpl
popa
test
or
jnp
pop
cmpsb
addr16
stos
fadds
insl
cmp
pop
and
xchg
adc
lret
or
xchg
jmp
jnp
mov
dec
outsb
add
inc
push
xchg
and
push
mov
jp
nop
jge
in
stos
jecxz
pop
xchg
mov
push
xchg
cmp
mov
hlt
sti
in
jmp
subb
pop
xchg
test
leave
loope
or
jae
inc
fsubr
xlat
test
pop
sub
xchg
dec
test
add
add
mov
cs
andb
mov
push
emms
iret
scas
in
jecxz
data16
addr16
hlt
or
mov
in
or
xchg
les
pop
pop
mov
adc
and
cs
dec
sti
and
into
jp
mov
sub
sti
inc
fcompl
push
setb
inc
inc
stos
dec
popf
into
andb
mov
popa
cltd
nop
sub
cmpsb
adc
out
nop
pop
mov
push
and
pop
push
adc
in
sbb
mov
pop
dec
mov
sbb
negb
inc
popf
adc
les
movsl
int3
cwtl
xchg
pop
nop
sub
push
pop
dec
jnp
sbb
in
pop
xlat
cmpsb
jge
cwtl
pop
ficoml
and
push
cmp
or
iret
sbb
pop
jne
lea
dec
pop
sub
pop
sarl
jl
mov
mov
jge
inc
iret
push
mov
sub
pop
sub
mov
mov
popf
imul
lcall
arpl
xor
lds
nop
int
xor
movsl
test
and
fwait
jnp
cmpb
pop
andl
mov
sarl
push
test
xor
jnp
dec
jle
cs
jbe
adc
cld
ret
xlat
dec
add
push
xchg
pop
mov
or
sub
cltd
mov
cmp
outsb
incb
movsb
mov
cmp
adc
aad
mov
mov
xchg
pop
cs
repz
test
rep
dec
insl
mov
add
shlb
test
cmp
leave
aas
das
add
push
popf
sbb
inc
loopne
shr
inc
mov
shl
shlb
add
cmp
add
stc
sbb
or
mov
add
lahf
mov
fistpl
aaa
out
scas
scas
insl
cmp
repnz
scas
imul
cld
test
xchg
jl
into
mov
fimull
enter
or
aam
cmp
shl
fsts
sub
fdivr
int
sub
or
nop
jb
dec
push
sub
bnd
xor
dec
cs
clc
push
bound
out
shlb
stos
es
dec
push
xchg
incb
ljmp
and
pop
out
jo
adc
sahf
rcrb
mov
sarl
aam
pop
adc
cs
fwait
sub
cmp
sbb
inc
stos
fcoms
cmp
fwait
das
cwtl
lock
fnstsw
incb
cli
jb
nop
js
pop
or
pop
xchg
and
loop
cwtl
notb
test
fcmovnb
inc
cltd
es
or
fisubrs
cmp
loope
test
inc
xor
sub
cmp
sbb
push
sahf
in
pop
pop
fmulp
pop
imul
lock
push
call
rcll
popa
lcall
xor
loop
mov
jbe
ss
jnp
jecxz
lods
xchg
jno
sahf
or
enter
scas
sub
cltd
lock
pop
aaa
jg
aam
mov
imul
push
xor
pop
inc
push
shrb
xchg
push
icebp
mov
out
mov
pusha
cmp
scas
ds
cmpsb
xor
xchg
inc
sub
out
jns
and
adcl
inc
push
popf
push
mov
mov
cmpsl
stc
jg
jno
sub
aaa
adc
mov
fldcw
sar
pop
inc
push
xlat
jl
enter
test
fildl
cmp
jle
fstl
aas
cmp
or
or
xchg
loope
mov
push
dec
bound
inc
xchg
ljmp
std
mov
jg
sbb
in
dec
adcl
cmpsl
call
je
jmp
mov
jmp
push
push
and
stos
sarl
aaa
mov
jbe
xchg
mov
pushf
inc
xor
sbb
daa
lds
inc
adc
cmpsl
fdivrl
or
pop
cltd
sub
lcall
push
jmp
sub
lods
push
test
jmp
lods
je
mov
mov
pop
mov
xlat
jp
rol
popf
mov
test
lret
lret
fbstp
pop
jl
mov
mov
xor
stos
and
mov
mov
fwait
pop
xor
fnsave
xchg
in
xchg
cmp
sub
jnp
std
push
repnz
in
dec
rorb
mov
add
inc
mov
repnz
in
jp
jae
imul
or
pop
jge
mov
push
repz
movsl
call
test
imul
sbb
dec
xor
inc
pop
and
and
lret
imul
filds
stc
cwtl
stos
in
ss
push
fwait
add
push
scas
bound
xlat
sub
sub
out
jne
xchg
mov
push
cli
lods
fld
js
xlat
insb
add
push
rcl
mov
xchg
jns
lea
push
mov
jg
xchg
mov
iret
dec
fisubl
lea
repz
adc
xor
outsl
cmp
push
mov
inc
pop
mov
add
movsl
pop
mov
or
cmp
aas
in
jns
cwtl
pop
iret
lcall
and
jo
lods
sub
xchg
call
inc
cs
insb
dec
pop
sti
shrb
lods
adc
sbbl
cmp
lods
cmpsl
xor
movsb
adc
enter
sbb
and
scas
pop
movsb
pop
pop
in
aaa
cltd
xor
iret
pop
rorb
and
aaa
ljmp
cltd
roll
mov
leave
sub
adc
jno
push
sub
mov
and
test
sarl
dec
data16
lret
lods
fcompl
nop
jecxz
lock
pop
dec
push
push
cmp
mov
fcomps
lock
or
jns
data16
push
adc
or
lds
jmp
insl
xor
and
mov
in
xchg
and
push
inc
fdivl
shll
adc
lods
daa
into
or
cmpl
imul
test
into
adc
cmpl
ss
icebp
les
mov
jecxz
inc
inc
push
out
push
push
shl
mov
cmp
push
push
add
dec
sub
aam
and
loopne
dec
fldcw
xchg
jbe
leave
pop
ret
add
pop
mov
add
jge
sti
rolb
mov
add
jne
fildll
mov
mov
and
add
xchg
cltd
leave
push
std
jo
mov
movsb
cld
in
pop
mov
jecxz
mov
push
cmp
jb
xor
jbe
int
ljmp
push
rcll
sub
cld
movaps
lea
pushf
adc
cmc
mov
xor
aaa
daa
push
push
xchg
repz
std
cwtl
loop
int3
popa
xchg
dec
mov
arpl
frstor
jnp
inc
lock
cli
pop
daa
loopne
rclb
push
or
lods
popa
mov
ds
sbb
jo
jecxz
icebp
push
xlat
sbb
arpl
cs
pop
adc
movsl
xchg
hlt
negb
cmpsl
dec
add
sar
fdivl
dec
fwait
bound
std
gs
ret
sub
loope
inc
aam
dec
mov
cmpl
idivl
jg
or
mov
xchg
adc
inc
dec
cmp
nop
push
lds
cwtl
in
adc
and
cmc
lret
repz
or
cmp
jmp
xor
cld
into
movl
mul
imul
adc
mov
fcomi
in
int
pop
push
push
das
jle
mov
mov
mov
add
inc
pop
lcall
cmpb
rolb
ljmp
mov
inc
add
push
mov
jp
pusha
fmull
mov
loopne
adc
and
in
lret
test
mov
dec
les
stc
cltd
cmpxchg
inc
inc
cmp
and
mov
cmp
hlt
jmp
fisttps
or
imul
icebp
lods
xor
mov
loop
cli
outsb
lret
shlb
aas
adc
mov
and
or
jb
xchg
dec
cmp
and
int3
stc
testl
sub
shl
jp
push
xor
movsl
inc
subl
pop
bound
addr16
jb
mov
pop
pop
loop
dec
dec
and
push
verw
inc
cmp
mov
cmpsl
xchg
cli
addb
pop
dec
sub
test
dec
fdivs
out
cmc
jae
fld
xchg
inc
shl
iret
mov
pop
cmp
pop
sub
cld
popa
in
cld
pop
aad
jbe
cwtl
sub
jnp
pop
inc
dec
mov
cwtl
movaps
hlt
push
add
jae
xor
ljmp
mov
or
aad
pop
imull
add
aaa
popa
mov
les
jecxz
ja
dec
pop
lods
fldt
adc
mov
repz
sarb
jbe
lret
mov
loope
mov
hlt
sbb
popa
test
pusha
fidivrs
jne
mov
pop
and
jae
mov
dec
cmc
pop
fsubs
bswap
sub
repnz
inc
and
hlt
push
pop
scas
add
movsl
mov
xor
loopne
jmp
sbb
mov
in
cmpsb
inc
mov
in
sub
std
int
shlb
loop
sti
in
es
cmp
adc
xchg
add
push
jmp
leave
inc
jb
dec
insl
loop
xchg
add
xchg
aam
loop
mov
insl
adcb
mov
in
pop
or
leave
sub
lods
lock
fistl
imulb
mov
das
cmp
shll
imul
jns
and
stos
pop
jno
pop
ret
sbb
xorl
rclb
loop
mov
adc
rolb
jnp
pop
rorl
sbb
lahf
cmp
xor
pop
mov
mov
test
mov
movsl
sahf
cmp
jns
mov
jmp
xchg
outsl
sub
jecxz
mov
lcall
xlat
xor
ds
scas
xor
mov
ret
jl
mov
add
lods
hlt
roll
and
or
push
imul
lret
mov
sub
push
xchg
mov
lret
jg
xor
adcb
pop
add
mov
rorb
pop
je
outsb
pushf
pop
push
or
sub
test
fisubl
ljmp
lock
mov
push
aam
and
stos
and
inc
test
movsb
testb
sti
push
and
xor
inc
adc
stos
test
or
mov
dec
popf
arpl
push
sbb
dec
ja
mov
xchg
adc
push
pop
add
imulb
ud0
xchg
jae
daa
int3
or
dec
setne
add
clc
push
push
popa
sub
adc
or
xor
adc
lods
stos
dec
and
mov
or
fistpll
pop
mov
or
das
mov
and
sbb
xchg
iret
ljmp
daa
jae
pop
and
insl
inc
jl
inc
loope
int3
sti
fdivl
sbb
pusha
js
xchg
xor
imul
ss
lds
cld
jmp
mov
xchg
dec
lea
xchg
sub
sbb
in
ja
jbe
movsb
adc
push
mov
jmp
ret
lret
mov
jbe
pop
inc
adc
inc
lock
inc
xor
fiadds
repnz
shrl
sbb
fnstcw
cmc
mov
inc
ljmp
outsb
imul
adc
pop
and
push
dec
mov
test
or
pushf
jns,pt
loopne
and
mov
loope
cs
test
repz
xor
in
in
jbe
mov
sub
push
mov
xchg
xchg
jo
mov
negb
lcall
jb
sub
cltd
loopne
cmp
cltd
gs
mov
mulb
sti
jns
out
negl
mov
dec
sbb
imul
int
push
mov
test
jmp
or
stos
mov
loopne
sub
push
push
xor
pop
push
xchg
in
push
iret
repnz
aad
int3
aas
sub
dec
dec
dec
cmp
jne
out
aam
xor
xchg
inc
arpl
rolb
int
mov
mov
js
faddl
pop
cmp
or
ret
jnp
in
divl
sub
test
pop
les
dec
sbb
mov
mov
adc
pop
xchg
inc
gs
out
lock
pop
dec
dec
sti
es
and
inc
scas
ljmp
pusha
dec
mov
outsl
mov
in
cmp
jb
sub
jo
adc
push
mov
pop
idivb
xchg
les
mov
icebp
notb
adc
ja
jb
pop
nop
jecxz
add
rolb
cli
mov
xchg
cwtl
icebp
adc
repz
pop
jmp
pushf
dec
xchg
js
push
addr16
mov
cmpb
pop
xor
push
imul
data16
pop
fiaddl
jbe
js
popf
mov
sub
mov
xchg
mov
ds
mov
add
orl
data16
push
stos
mov
pop
adc
in
in
fmul
test
jns
xchg
addr16
enter
fcmovu
sahf
jnp
repnz
aaa
cmp
cmp
mov
sbb
cmp
sub
in
jae
sbb
cmpsl
rcrb
pop
mov
aas
pop
mov
and
hlt
sub
sub
cmp
push
lret
or
call
adc
mov
repz
outsl
add
ja
test
nop
icebp
jl
in
jecxz
clc
inc
jne
mov
or
sarl
xor
xchg
popa
inc
adc
mov
int
insb
dec
insl
sub
adc
outsb
mov
xchg
negl
pop
loopne
mov
filds
out
sarl
jno
repnz
addr16
ds
and
je
sub
ljmp
dec
lds
and
faddl
xor
mov
xor
es
jmp
cld
mov
dec
hlt
pop
add
pop
outsl
inc
dec
je
in
mov
pop
pushf
inc
dec
cmp
sub
mov
je
xor
mov
rcrb
lahf
jno
fstl
popf
and
fsubrl
rcll
shll
jl
dec
icebp
and
xchg
or
rcll
xor
adc
push
sbb
dec
test
adc
lea
mov
dec
mov
jmp
int3
dec
xor
mov
xor
loopne
adc
sub
or
push
jmp
sub
add
mov
inc
pop
xchg
fiaddl
stos
aas
iret
into
xor
icebp
push
xor
jl
leave
out
pop
imul
mov
cmp
push
bound
das
adc
xor
mov
call
add
push
dec
add
jg
mov
dec
ds
push
icebp
js
sbb
out
std
inc
sbb
sbb
incb
mov
inc
sub
dec
cmp
and
push
fs
lret
xor
repnz
jl
ss
sbb
call
xchg
lds
fsubr
orl
out
fwait
xchg
cmp
lcall
sbb
stc
jns
inc
rcll
enter
ja
ret
mov
sti
into
lds
fidivs
cs
push
or
pusha
aas
dec
fildll
pop
mov
cs
mov
movsl
and
mov
iret
aam
dec
imul
dec
les
inc
jmp
xor
in
jnp
lds
pop
out
into
test
or
xor
test
ss
lea
dec
cmp
lock
fisubl
xor
in
dec
inc
fcmove
adc
add
pop
imul
fsubl
pop
imul
scas
lret
or
lahf
and
pop
out
push
mov
std
andl
push
mov
insl
sub
loope
cltd
mov
shl
mov
inc
pop
mov
mov
arpl
test
ret
mov
mov
hlt
test
inc
cwtl
rclb
pushf
ret
xchg
sub
jne
lret
mov
std
mov
cld
add
mov
and
dec
pop
mov
ds
fstpt
negl
in
cmp
mov
push
cmp
jae
cmp
xchg
pop
mov
push
add
cmp
mov
dec
or
fwait
call
sub
cli
clc
stc
or
popf
push
xchg
push
bound
push
jns
cmp
rcrb
push
mov
pop
mov
jno
jne
movsl
punpckhdq
or
sub
adc
xchg
push
into
sbb
xchg
pop
inc
or
sbb
in
out
lret
call
push
mov
sbbl
cmp
inc
sub
push
rcrb
pop
jp
push
sbb
shlb
pop
out
rclb
xchg
mov
fistpl
out
push
add
lahf
mov
jnp
stos
notb
dec
lods
out
xor
aad
popf
mov
mov
cwtl
shll
iret
test
xlat
mov
out
xor
stos
or
movsb
sub
mov
stc
push
test
repz
jge
aad
mov
xor
bound
stc
mov
test
sub
mov
test
cmpsl
dec
in
divb
sub
mov
jb
lcall
lahf
scas
add
fldcw
add
sub
sarb
cmp
add
mov
jae
nop
loop
cli
xlat
cmp
jmp
incl
add
ret
inc
mov
outsl
or
sbb
cmp
xchg
or
mov
mulb
scas
gs
mov
inc
jl
adc
negl
xchg
xchg
xchg
jmp
jecxz
xor
adc
inc
inc
out
int3
push
and
xchg
punpckhbw
or
mov
lds
call
add
fstps
xchg
int
fldt
lea
mov
sbb
xor
test
mov
cmpsl
movsb
adc
gs
pop
lret
jp
mov
cltd
dec
inc
out
xor
jp
mov
xchg
jno
and
pusha
inc
and
push
repnz
inc
sar
lret
xchg
mov
cmp
in
mov
adc
pop
inc
icebp
and
cmp
mov
ljmp
fdivrs
subl
mov
call
xchg
dec
jns
shl
stos
fldenv
and
xchg
dec
xlat
jp,pn
out
dec
sbb
in
imul
sti
add
sub
negl
mov
addr16
push
mov
cmpsb
push
pop
out
jg
in
test
jnp
push
dec
dec
popa
out
repz
pop
aam
jg
sbb
gs
les
push
and
iret
in
leave
out
je
lcall
fimuls
jbe
lret
mov
ret
pop
fs
popa
inc
rorb
mov
daa
sahf
into
enter
jmp
dec
orl
or
push
jae
jmp
mov
inc
popa
push
dec
pop
addr16
adc
in
inc
or
xor
push
scas
insl
cld
hlt
lcall
mov
js
mov
scas
jle
loope
mov
mov
mov
and
mov
inc
scas
scas
sbb
fsubrp
push
mov
jb
sub
out
stc
pop
out
inc
and
sub
push
xorb
or
clc
and
cmc
test
cmp
adc
data16
andl
ljmp
mov
dec
enter
es
add
xchg
add
xchg
test
jnp
cmp
popf
or
xchg
fisttps
pop
adc
mov
movsl
push
jno
lea
stos
rep
push
addr16
push
dec
pop
xchg
mov
fs
cmpsb
pop
adc
jnp
mov
jno
xchg
lods
mov
stos
mov
dec
xchg
test
shrl
mov
push
popa
adc
xchg
dec
push
xor
xchg
mov
data16
movsl
mov
xor
push
rcll
cmp
pop
in
ljmp
mov
outsb
repz
jecxz
es
leave
bound
cmpsl
out
loop
fldt
fisubl
inc
icebp
aas
hlt
fistpl
mov
xorl
imul
enter
mov
adc
sbb
xchg
dec
in
je
mov
sub
cmc
xchg
mov
inc
and
sti
test
sub
add
mov
je
js
iret
jg
ljmp
setns
or
data16
xchg
sbb
jmp
mov
jp
sub
nop
add
push
sbb
xor
jnp
adc
iret
repnz
push
out
push
scas
cmc
dec
int
ret
inc
leave
mov
and
scas
cmp
not
xchg
push
pusha
or
adc
daa
or
mov
push
pushf
dec
jns
aas
pop
and
mov
push
jl
inc
scas
sbb
rcrl
and
jbe
add
jl
cmc
loope
cmp
sbb
cmp
sub
dec
aad
rcrb
shlb
subb
fsubs
cld
flds
push
and
test
cltd
lret
popa
pop
cli
jecxz
nop
outsl
or
adc
repz
test
shl
imul
xor
xchg
lds
mov
cmp
int3
jmp
inc
dec
add
sahf
movsb
dec
ret
lcall
lcall
xchg
push
cmp
aam
fsubs
jg
xchg
jge
in
jl
add
dec
pop
xor
xor
inc
push
scas
xor
inc
sbb
mov
xchg
mov
insb
sub
cltd
shrb
icebp
mov
add
adc
pop
fimull
push
shl
add
test
dec
cmp
es
sub
inc
dec
stc
cwtl
loop
test
daa
mov
call
stos
cs
fucomip
ja
lcall
pop
pop
shl
mov
adc
mov
adc
movsb
int3
fs
add
cld
dec
imul
inc
add
stos
mov
mov
sbb
pop
bound
and
fwait
jo
pop
add
inc
into
lds
xor
nop
and
sub
sahf
movsb
push
out
and
sub
push
out
push
in
mov
jg
dec
and
mov
nop
push
mov
xor
stos
fidivs
imul
ds
hlt
lods
cs
jl
mov
daa
pop
mov
jns
test
pop
sub
movsb
mov
and
sbb
xchg
lods
xor
in
in
xchg
cld
cmpsl
or
adc
push
pop
gs
pop
inc
jo
jns
scas
imulb
xchg
stos
jb
pop
jg
gs
xadd
add
add
icebp
jge
mov
arpl
rorl
adc
scas
mulb
mov
leave
pop
mov
lret
int
dec
testb
xchg
pop
rcrl
inc
jp
and
jmp
hlt
inc
filds
add
push
insb
mov
fbstp
mov
popf
xlat
push
popf
mov
cltd
mov
cltd
test
jnp
pusha
rcll
insl
mov
sbb
inc
cmp
sub
in
push
push
pop
sbb
clc
ficoms
adc
sarl
pushf
rclb
xchg
mov
sbb
inc
pusha
lcall
pop
push
jo
mov
subb
adc
pusha
int
mov
dec
movsl
scas
mov
xor
pop
xorl
sarl
xor
lods
and
pop
ret
insb
arpl
shlb
cwtl
ja
jl
xchg
mov
jo
and
stc
xchg
sub
mov
xor
out
dec
call
push
adc
stc
jae
movsb
jmp
push
pop
adc
test
rcrb
mov
nop
lret
stos
push
orl
inc
and
mov
and
xchg
mov
inc
insl
dec
inc
fmuls
in
sub
or
xchg
ret
movsl
outsb
push
cwtl
mov
jae
cmpsl
mov
cmpsb
lods
cmp
mov
pop
add
pop
lods
les
dec
int3
push
test
add
cs
dec
stc
sbb
shlb
loop
push
push
fisttps
xor
push
sub
loope
and
jg
test
xchg
push
add
add
ja
cs
mov
ja
push
lcall
or
shll
jne
xor
jge
sub
cmp
pop
mov
mov
and
fstl
mov
cmp
add
mov
or
jae
fsub
lcall
mov
mov
jl
inc
imul
lods
in
hlt
or
push
inc
pop
push
movsl
pusha
inc
mov
mov
cmp
popf
sub
pop
fistpll
jne
ljmp
mov
negb
pmulhw
aas
cmp
movsl
in
mov
jp
mov
xor
push
fstp
movsb
xchg
dec
lods
out
cwtl
cli
and
imulb
inc
dec
xchg
lea
outsb
xchg
ret
loop
mov
mov
jmp
mov
insl
adc
jb
cmp
dec
in
repz
popa
leave
ds
sub
push
pusha
nop
repnz
mov
dec
add
add
inc
xor
bound
push
sbb
cmp
pop
test
lcall
and
push
push
adc
mov
ret
mov
inc
jmp
es
xchg
lea
movsb
cmpsl
fdiv
mov
or
dec
out
mov
std
xchg
mov
rol
push
jne
arpl
and
dec
push
cmpsb
or
leave
mov
call
xchg
jmp
insb
push
jp
fnstsw
mov
cmp
dec
test
bnd
ss
jp
add
and
sub
adc
lret
dec
cs
jp
pop
mov
stc
sti
cmp
cmc
mov
mov
adc
int3
les
scas
xchg
mov
mov
xchg
and
jg
xchg
pop
adc
les
mov
sbb
sub
add
sub
rdmsr
imul
inc
mov
add
in
dec
xchg
loope
push
mov
cmp
fildl
incb
lea
loop
xchg
loop
mov
xorb
mov
stc
cld
out
sarl
push
sbb
mov
clc
dec
test
sbb
clc
xchg
rcr
sub
mov
or
xor
mov
sarl
xchg
inc
rorb
add
shl
dec
sti
insb
sbb
pop
fnstsw
or
lods
sbb
jns
mov
test
xchg
pushf
pop
mov
or
xchg
xor
aaa
push
inc
nop
mov
and
jle
sbb
jp
or
les
mov
lods
mov
stos
mov
pop
cmpb
lods
into
cwtl
and
sbb
lret
jno
adc
push
jmp
gs
mov
sbb
sbb
sub
sub
in
sbb
enter
loope
ficompl
cmp
pop
jmp
push
mov
push
inc
mov
mov
divb
jecxz
daa
insb
out
repz
mov
jo
sub
sub
adc
and
jmp
adc
cmp
shrl
adc
xchg
push
mov
or
shll
or
add
adc
push
or
lret
aam
xchg
movsb
nop
cli
and
xchg
aaa
xchg
sub
pop
scas
insl
mov
dec
cwtl
xor
cltd
cld
repnz
xor
cmpb
xchg
je
in
pop
xor
iret
scas
pop
and
insb
aam
popf
outsb
add
mov
xor
mov
dec
push
mov
xchg
and
pop
ja
adc
ret
lret
pop
outsb
lret
into
xchg
movsb
out
adc
and
inc
sbb
scas
ret
mov
inc
push
xchg
xor
add
jecxz
jno
jne
mov
cli
jno
popa
out
pop
pop
mov
mov
test
insl
xor
pusha
in
jb
add
mov
cwtl
jbe
ss
jmp
mov
xchg
stc
repz
call
mov
dec
scas
pop
and
push
and
push
pop
sahf
out
imul
lret
pusha
fld
mov
shl
inc
adc
inc
addb
xchg
push
mov
adc
dec
push
add
push
movsb
xor
rorl
rorl
push
lcall
fnstenv
scas
loop
aaa
add
inc
fs
out
popa
mov
or
mov
xor
mov
mov
into
sbb
and
push
pop
int
lods
jmp
ret
pusha
mov
fdivrs
imul
sahf
mov
jle
movsl
and
jmp
mov
js
cmp
js
test
pop
jp
pop
sbb
adc
das
pushf
cmp
mov
mov
cmpsl
dec
lret
movsl
mov
addr16
pop
ja
inc
xor
or
xchg
call
adc
cli
in
sti
mov
pop
push
xchg
pop
pcmpeqb
lret
outsl
fs
stos
xchg
dec
and
pop
je
jp
jg
mov
lods
jl
das
in
in
mov
dec
sub
push
loope
dec
or
or
dec
call
pop
fstpl
inc
pusha
lods
xor
test
inc
dec
test
inc
cmc
int
aaa
fdivrs
pop
xchg
mov
imul
test
add
adcb
pop
mov
add
cmp
pop
mov
cmpsl
fcoms
sahf
mov
fcoml
arpl
push
or
mov
mov
roll
je
or
dec
sbb
iret
addr16
adc
push
sti
mov
mov
xorl
inc
xor
jb
sbbb
lods
jp
mov
mov
jnp
pop
mov
test
nop
xor
imul
fwait
sbb
pop
pop
add
andl
push
pop
xchg
pop
xchg
jnp
jnp
sete
repz
cmpl
push
int
out
lret
dec
pop
push
push
cmp
xor
xchg
adc
mov
vmovaps
fistpll
repnz
mov
dec
cld
xor
out
push
rcrb
or
jecxz
pop
adc
ss
xchg
addl
adc
inc
out
popa
inc
icebp
int3
inc
lahf
fwait
scas
loop
sti
testb
movsb
cld
ljmp
ss
push
jb
add
ljmp
enter
push
sbb
sbb
sub
out
outsl
fsubrl
mov
les
add
xor
mov
insb
inc
movsl
jo
xor
inc
scas
loop
pop
inc
adc
cmp
mov
jns
fcos
and
dec
out
pop
cmp
cmp
ret
popa
xchg
je
pop
test
mov
mov
shrl
xchg
out
negb
push
lahf
insl
adc
pop
aad
test
imull
bound
pop
xor
fs
mov
aad
gs
push
data16
mov
ljmp
pop
mov
pop
orb
sar
jns
dec
js
xor
loop
inc
lock
mov
out
fistpl
mov
pop
mov
shll
out
xorps
add
jecxz
cli
in
bound
push
int3
andl
pop
or
mov
jge
lahf
mov
mov
lds
add
mov
cmp
imul
cmp
cli
mov
mov
in
mov
fxch
xor
xor
int3
adc
ds
adc
sub
nop
dec
aaa
mov
imul
inc
sbbl
add
lea
push
hlt
jp
sub
divl
mov
loope
insl
push
xchg
xlat
out
ds
dec
sub
cmc
int
or
pop
int3
inc
sbb
add
mov
and
adc
pop
lret
pop
or
mov
sbb
xor
cmp
xlat
jbe
mov
cmpsb
shlb
mov
sub
aas
dec
clc
les
rorb
jbe
stos
sbb
or
lea
les
mov
mov
cmp
testl
sbb
ljmp
sarl
daa
dec
mov
pop
or
add
and
mov
jg
and
add
mov
sub
cmp
sahf
or
ljmp
loop
xchg
sbb
jb
dec
jnp
out
mov
xor
mov
mov
sub
mov
mov
and
aam
ljmp
push
cltd
into
mov
push
mov
in
scas
xchg
insb
roll
ss
push
das
sub
rorl
cmp
or
inc
bound
xchg
pop
ds
stc
or
dec
orl
popl
insl
fwait
ja
popa
add
gs
mov
ror
mov
mov
pop
mov
cmovnp
dec
mov
push
xchg
pop
ds
pop
sub
mov
mov
mov
int
pop
and
push
in
pop
mov
sbb
lds
cld
psadbw
jbe
cmp
sahf
mov
repz
inc
imul
aad
mov
add
popf
daa
ds
inc
xor
inc
mov
mov
rolb
dec
mov
fstl
push
jle
dec
pop
sub
cmp
int
cmp
mov
add
fsubrl
aad
insb
or
pop
mov
cmp
and
or
jle
loopne
push
add
sub
notb
iret
jecxz
aad
add
mov
xchg
es
or
jg
jo
das
icebp
adc
mov
jno
dec
mov
subb
loopw
mov
jle
mov
xchg
xchg
mov
insb
sbb
in
imul
mov
mov
clc
loopne
into
aam
xadd
cli
xor
add
and
bound
rolb
mov
ds
imul
xchg
cmpb
jo
or
mov
mov
and
inc
mov
and
mov
and
scas
inc
shrl
es
jb
imul
clc
aam
in
out
jp
cmc
add
and
cmpsl
add
fildl
pop
xchg
inc
dec
sar
daa
jge
adc
jmp
dec
inc
adcb
into
add
fcoml
decl
lods
std
je
cld
iret
adc
ds
sbb
push
push
clc
pop
and
loope
fsubs
xor
cmp
sub
aad
or
add
shlb
xor
pusha
xchg
xchg
pop
test
in
cmp
push
push
add
cmpsb
or
in
mov
add
lcall
and
jge
sbb
push
pop
ret
repz
and
loop
mov
xchg
xchg
and
or
fdivrp
push
leave
jg
rep
mov
adcl
fucomp
cwtl
sbb
jno
loop
cmovg
insl
filds
adc
sbb
js
push
fwait
in
jns
sub
dec
pop
jns
sub
ds
pop
adc
fsts
movsb
out
push
dec
push
cmp
sub
into
rcl
ret
aas
jp
add
bt
fcmovnb
add
mov
jo
inc
arpl
pop
and
jp
idivb
out
mov
out
mov
ret
repz
sub
insb
and
rcl
push
xchg
lock
push
js
adc
and
cltd
in
in
stos
aad
js
pop
mov
hlt
dec
mov
inc
cmp
or
movsb
mov
clc
pop
pop
xchg
jo
pop
js
push
rclb
or
or
pop
out
icebp
inc
addr16
fstpt
push
mov
push
push
sbb
inc
aas
loope
lods
pop
lods
xor
xlat
ljmp
add
xor
push
mov
jno
pop
xchg
pop
fnsave
lods
outsl
xchg
cmc
or
mov
adc
xchg
xchg
adc
fcoms
inc
retw
fwait
out
jnp
lods
call
push
pop
push
jmp
sbb
pop
jge
push
push
dec
push
movsb
push
push
push
nop
fldt
fs
mov
jbe
nop
nop
rcrl
icebp
cmp
push
xor
rcr
adc
stos
popf
imul
shll
add
xorb
push
iret
das
push
data16
push
sbb
and
insb
mov
xor
dec
ds
sbb
loopne
jae
popf
push
in
in
mov
push
mov
sub
xchg
dec
leave
xchg
and
jae
dec
lcall
sbb
sub
aad
inc
xchg
cmpsl
jb
mov
int
test
jbe
pop
jnp
sbbl
mov
mov
negl
xchg
dec
fisubrl
rorl
adc
xor
or
jbe
add
outsb
inc
mov
push
adc
loop
ret
or
mov
adc
pop
outsl
popa
pop
cli
lds
inc
mov
adc
xorb
mov
mov
negl
popf
stos
pop
push
inc
les
xchg
xor
in
popa
jle
insl
cmp
jecxz
dec
pushf
cmp
scas
add
inc
pop
lcall
ljmp
jg
mov
out
xlat
dec
push
adc
xchg
movsb
insw
pop
in
roll
mov
ja
adc
push
js
int
loop
pusha
call
push
and
add
mov
jns
add
jno
jle
xor
push
mov
lahf
orb
stos
cmp
arpl
shl
sub
xor
sbb
jl
ljmp
jl
mov
scas
fs
movl
cmp
cmp
mov
jl
popf
push
xor
mov
call
mov
push
push
and
in
pop
insl
xor
push
cltd
pop
test
inc
push
push
fistpl
add
fsts
ret
popl
jb
jge
movsb
movsl
mov
mov
jge
jae
out
mov
cltd
xor
sub
insl
pop
jno
jg
xchg
test
fcoml
pop
hlt
in
daa
sbb
mov
xchg
call
ja
imul
into
add
and
in
xchg
xchg
lea
xor
into
ret
adc
cmp
lret
pushf
addr16
and
sbb
leave
mov
xor
mov
xchg
jo
mov
hlt
aaa
out
mov
in
mov
push
mov
fldenv
cmp
fsub
xor
adc
adc
mov
ja
lea
push
pop
adc
scas
push
jge
fisttpll
fld
fs
and
outsl
aaa
and
lock
stc
loop
mov
loop
pop
dec
adc
lock
fsubr
xor
jp
push
pop
dec
pop
rcrb
popa
aas
jno
pop
test
xor
inc
or
cmp
cld
lds
mov
mulb
push
cmpsl
andl
jle
sub
mov
mov
popa
jbe,pn
and
or
dec
cmpsl
dec
add
lcall
mov
and
xor
and
dec
dec
xchg
pop
dec
shll
and
cmp
aaa
std
mov
fs
das
enter
inc
aam
aaa
xchg
jle
mov
lds
fildl
sbb
add
pop
or
mov
mov
pop
fnsave
int3
dec
mov
cltd
jbe
pop
outsb
sti
mov
xchg
jge
xor
sahf
out
comiss
or
sbb
jp
cmp
cwtl
and
orb
cmc
test
xchg
in
adc
mov
arpl
adc
dec
movsl
enter
roll
lretw
insl
mov
xor
and
movb
mov
dec
test
adc
test
pop
int
dec
jbe
inc
xchg
inc
push
cmp
pop
add
or
repz
cmpb
and
jl
pop
sahf
fsub
or
pop
test
pminsw
push
sbb
enter
in
xchg
lea
fs
and
dec
imul
xor
ret
aad
outsb
loope
add
jp
xor
out
les
lds
jg
mov
mov
arpl
adc
lods
and
push
fcoml
hlt
lahf
les
dec
adc
lahf
pusha
das
pop
sub
in
cld
jle
aaa
fsubl
or
movsb
push
loopne
xchg
jge
sub
inc
shl
sar
jecxz
mov
sub
pop
fadds
xor
inc
fbld
je
sbb
insl
push
and
pushf
ret
dec
mov
cld
cmc
xor
or
pop
mov
cmp
dec
imul
adc
add
int3
in
mov
push
mov
in
enter
pop
das
lods
test
jg
adc
jne
data16
mov
ja
pop
inc
or
out
test
repz
loop
jle
shlb
add
jns
cmp
repnz
outsb
adcb
jl
and
and
sarl
out
pop
mov
sbb
push
stc
cmpsl
sbb
outsb
clc
jno
hlt
xchg
shrl
jg
inc
and
sbb
stos
mov
sti
jo
mov
xchg
lods
push
xlat
pop
jae
adc
pop
int3
cmc
pop
mov
push
gs
push
jno
out
jge
mov
push
cmpsb
bound
pusha
imul
cmp
adc
cmp
dec
lds
sbb
clc
jae
sti
inc
fcomps
in
in
mov
pop
fdiv
fdiv
enter
lods
repz
popf
testb
add
fwait
in
imul
daa
push
hlt
add
pusha
mov
outsl
aad
into
lret
push
push
adc
push
in
nop
aaa
or
stos
sub
in
addb
jo
cmp
pop
aas
add
loop
cli
pop
push
repz
inc
clc
aas
pop
faddl
shlb
adc
mov
int
iret
mov
shll
mov
aad
jle,pt
shlb
lahf
lret
aaa
in
cltd
dec
les
shrb
dec
inc
fcomps
mov
leave
fdivl
pusha
xchg
cmp
cmc
rclb
jmp
cltd
pop
inc
inc
inc
in
sbb
shrb
int
js
out
out
sbb
test
or
shll
mov
fimuls
add
push
rcr
mov
outsb
xlat
jle
bound
cli
and
out
arpl
ficoml
pop
sbb
mov
mov
cmp
push
mov
sbb
lcall
sub
xchg
xor
insb
jbe
in
popa
movsb
push
mov
pop
loopne
out
mov
repz
push
lods
and
pop
out
cwtl
jl
add
sarb
adc
lret
push
fcomp
xor
loopne
leave
call
jmp
xchg
push
cmp
bound
mov
stc
sbb
mov
mov
imull
shlb
add
in
or
mov
mov
xor
dec
aad
bound
jo
push
jmp
shl
xor
mov
xchg
push
lods
ss
mov
mov
test
test
add
push
in
mov
add
scas
xchg
cmp
mov
icebp
icebp
sti
mov
test
stos
fwait
lcall
pop
mov
popa
xchg
lret
adc
addr16
dec
sbb
dec
loopne
nop
push
outsb
mov
add
mov
enter
cmc
jns
test
xchg
scas
push
ficoml
clc
shrl
pop
out
mov
loopne
test
jnp
push
mov
rclb
jp
adc
outsl
and
mov
jb
jbe
cs
shr
push
cmp
cwtl
bound
and
aam
xchg
arpl
or
sub
leave
or
inc
or
jb
mov
imul
jo
mov
inc
dec
xlat
repnz
stc
mov
xor
xchg
mov
out
sbb
decb
in
fs
lea
dec
ja
gs
adc
bound
pop
pop
cmpl
sub
stos
pop
push
sbb
rclb
jbe
repz
inc
inc
inc
pushf
sbb
xchg
xor
xchg
insb
adc
cmp
stc
mov
lahf
pushf
adc
clc
mov
iret
mov
je
ss
movsb
mov
mov
pop
xor
ret
pop
or
xchg
jge
in
mov
mov
rcr
rcrb
dec
clc
data16
int
in
adc
jle
daa
mov
loop
add
sbb
inc
dec
repz
stc
cmp
push
xchg
mov
decl
mov
and
cmp
fldcw
fmuls
cmp
mov
aam
lods
fnstenv
jg
fsubp
js
ret
aas
xorb
in
add
and
add
fnstenv
es
test
js
mov
sbb
inc
fdivp
and
lret
cs
push
cmp
xor
mov
clc
xchg
sbb
jne
jle
jae
xchg
jnp
lcall
mov
int
lea
inc
inc
popf
fistpl
dec
sub
test
out
je
imul
mov
aad
jbe
cmp
cmp
push
nop
pushw
and
es
pushf
cmp
jmp
lds
mov
xchg
and
pavgw
repz
enter
xor
push
pop
pusha
fidivrl
roll
mov
loope
mov
dec
sti
imul
jns
pop
mov
jno
leave
cs
mov
idivl
dec
jno
sahf
inc
leave
mov
inc
and
cmp
pop
jnp
inc
in
sbb
int
jae
fs
add
ret
push
cltd
sar
lret
push
hlt
popa
pop
cwtl
aaa
sub
add
test
mov
pop
cmp
gs
fdivr
loop
push
sub
xlat
int3
mov
mov
pop
push
pop
or
cli
push
cmp
out
cltd
sub
xchg
ss
aad
call
xor
scas
cli
push
xchg
or
mov
ljmp
loopne
and
dec
mov
push
les
and
int3
push
js
daa
sbb
movsl
push
xchg
stc
mov
add
xchg
filds
fcoml
daa
mov
es
fstpl
dec
test
mov
jle
pop
add
in
mov
mov
inc
pop
sbb
mov
xor
sbb
js
inc
int
into
cwtl
arpl
xlat
adcl
mov
pop
aas
inc
out
cli
or
icebp
lock
cmpsl
js
hlt
sbb
dec
add
inc
mov
xor
dec
dec
repnz
in
clc
leave
xor
mov
xor
xlat
jno
dec
push
push
bound
in
adc
mov
test
adc
mov
ja
pop
loope
lds
out
and
dec
pop
dec
sbb
aam
rorl
aas
adc
pop
hlt
cmp
fsubrl
repz
daa
inc
or
dec
ret
xor
cmc
rcll
popf
mov
push
adc
pop
and
sahf
inc
leave
or
inc
shlb
fs
pushl
lret
dec
outsb
cwtl
das
mov
jno
mov
mov
jmp
pop
mov
pop
int
lahf
mov
add
sti
jmp
xor
int
inc
adc
jecxz
in
scas
pop
int3
add
inc
pop
cmp
in
add
fstpl
or
jl
aad
jge
pop
mov
jle
sbb
cltd
orps
adc
bound
dec
and
call
or
pop
cmp
mov
jns
lods
js
leave
lret
outsl
pop
jne
or
pop
fldenv
data16
mov
stc
push
xchg
jmp
enterw
sbb
mov
mov
pop
stc
into
mov
lods
repnz
add
cmpsb
aam
rolb
dec
scas
or
sub
sbb
push
xchg
push
cmp
aam
frstor
mov
and
lcall
cmp
les
cmp
pop
addl
addr16
dec
lods
push
or
cld
ret
and
fs
repz
in
mov
loope
mov
lods
and
xor
clc
xchg
jbe
mov
popf
test
xchg
jno
gs
test
sub
pop
or
and
dec
push
in
inc
push
dec
enter
or
shrb
mov
jg
cmpb
mov
popf
cmpl
insl
and
ds
push
dec
mov
lret
dec
push
test
call
adc
and
cmp
dec
jb
mov
ljmp
pop
es
stc
jno
iret
or
pop
xchg
dec
inc
mov
testl
mov
fdivs
fistps
js
cwtl
mov
fnstenv
or
xchg
outsb
xchg
adc
sub
xor
xor
sbb
sub
pushf
loopne
cmp
cld
out
js
mov
pop
push
ds
fsin
sahf
imul
xor
xchg
mov
mov
loop
push
lods
repz
cmpsl
adc
lods
or
outsl
loop
and
sbb
decb
outsl
arpl
lods
pushf
sub
mov
xchg
std
or
outsl
insb
imul
fisubrs
pop
inc
jnp
dec
and
push
mov
pushf
xor
into
cmpl
adc
add
cmp
icebp
xchg
adc
mov
sbb
dec
test
negb
sbb
aad
aaa
ljmp
bound
gs
into
aad
pop
pusha
sar
push
out
into
push
cltd
push
pop
adc
sub
pop
and
adc
xchg
je
xor
pop
or
jle
adc
lods
fidivrl
pop
mov
and
inc
ret
out
fdivrl
les
call
sub
rcr
mov
fisttpll
pop
fmuls
popa
pop
push
mov
xchg
ds
rcr
adc
sub
pop
rcrb
mov
xchg
xor
pushf
adc
jbe
add
mov
pop
jg
idivl
das
pop
adc
jb
add
cld
adc
dec
push
dec
popa
mov
test
jp
ljmp
mov
enter
sub
pop
ss
fsubrl
repnz
dec
and
mov
mov
push
jecxz
jbe,pn
jb
push
aam
mov
es
hlt
adc
roll
pop
lock
sahf
inc
out
in
cld
in
test
gs
sub
mov
mov
jns
xchg
ret
push
adc
rcr
dec
imul
pop
cmpsb
pop
jp
fdivrs
stos
test
adc
and
inc
push
mov
xor
pop
popf
jae
sbb
jne
scas
shrb
cs
inc
out
sub
xchg
mov
cli
xchg
jg
lcall
pop
cmpsb
xchg
daa
cmp
rolb
jnp
ret
adc
imul
inc
aaa
mov
stos
or
xor
mov
cmp
jg
icebp
xchg
jb
push
inc
fndisi(8087
pusha
mov
pop
cli
dec
inc
add
hlt
xchg
aad
imul
out
add
adc
xchg
lods
fisttpl
repnz
push
xor
dec
ret
jb
lods
enter
sbb
or
cld
insb
push
mov
mov
push
sahf
push
sti
stc
adc
sub
jnp
fldcw
jns
xor
add
mov
insl
mov
jo
and
jb
xor
scas
xor
enter
pop
gs
sti
inc
mov
test
stos
mov
mov
mov
outsl
stc
sahf
out
mov
xor
dec
repnz
inc
mov
xchg
mov
add
aam
mov
cmp
sbb
pushf
fidivs
push
mov
xorl
lods
fnstsw
add
incb
sub
outsb
sub
aad
fwait
ja
and
arpl
fisubrl
cs
sbbl
jp
popf
cwtl
adc
xchg
sbb
mov
pop
lcall
mov
mov
cwtl
fbld
rol
or
cli
xor
pop
xchg
cmp
jne
sub
sbb
xor
mov
cs
push
mov
xlat
ret
std
shl
jo
fwait
mov
into
or
dec
jle
mov
dec
out
inc
cmpsl
in
test
or
pusha
lods
cwtl
xorl
adc
fidivrl
adc
dec
aad
cmp
mov
test
lds
sarl
sbb
int
xor
push
orb
mov
stc
mov
cmp
mov
in
shll
pop
idiv
arpl
ja
dec
daa
pop
xchg
jo
popa
and
xchg
add
cmpsl
sub
addb
jne
push
add
dec
fstpt
xchg
sub
mov
movsb
add
fstl
jns
fstpt
ret
leave
pop
fwait
jecxz
jae
xchg
xchg
fistpll
add
mov
or
out
sbb
test
jo
inc
loope
xor
sub
into
and
push
xchg
xchg
sbb
aas
stos
dec
adc
jg
adc
rcrb
pop
pop
stos
xchg
daa
int
pusha
std
rcrl
call
cmp
in
cmp
pushf
inc
sbbb
adc
arpl
jg
lods
pop
and
and
jl
das
xchg
cmp
xor
cs
aad
das
hlt
es
repnz
hlt
or
mov
mov
adc
xchg
adc
pop
push
adc
data16
sub
sbb
aas
mov
addr16
lahf
and
int3
xor
inc
push
or
and
arpl
sahf
in
cltd
cmp
loopne
aad
xchg
data16
sbb
fucom
rcrl
and
cmp
ret
adc
inc
jno
and
mov
mov
adc
gs
mov
xchg
and
mov
dec
add
sahf
loopne
stos
jns
fsubrl
sbb
imulb
xor
imul
pop
jge
cwtl
xchg
fldt
aad
dec
dec
mov
mov
call
jae
mov
ljmp
gs
stos
mov
and
jnp
xor
pop
int
xchg
sbb
mov
or
inc
mov
jae
mov
jnp
mov
xchg
fcomps
stos
js
xor
roll
cmp
sahf
dec
rcl
jge
cmp
mov
push
in
mov
cmp
jmp
shll
imull
hlt
in
mov
insl
or
outsl
notl
or
mov
push
mov
paddb
or
or
dec
das
fdivrs
stos
pushaw
addr16
ss
and
pop
pop
stos
repz
jle
lods
xor
and
fnstcw
pop
aas
jo
inc
mov
and
mov
pop
jb
pop
stos
xorb
sbb
adc
push
ret
gs
dec
stc
fdivp
mov
int3
outsb
stos
dec
or
xchg
xor
stos
call
cmp
jb
xor
clc
xor
lcall
sbb
pop
push
pop
out
push
adc
or
insl
mov
scas
xchg
cs
or
jo
jle
imul
and
sbb
xchg
mov
fbstp
mov
out
xor
dec
daa
mov
test
pop
lahf
outsb
xchg
loope
xchg
scas
in
pop
dec
aaa
hlt
mov
push
les
les
shlb
cmp
jb
test
mov
rcl
aas
sbb
filds
stc
cmp
jp
sub
mov
pop
jg
cli
mov
stos
sahf
jp
mov
enter
xlat
push
lods
lahf
imul
jbe
mov
cmp
loopne
pop
xchg
lods
out
inc
mov
pop
jmp
pop
lock
cmp
push
test
andb
cmp
sahf
jecxz
dec
scas
out
inc
dec
fdivr
hlt
ret
pop
jmp
inc
and
mov
jp
xchg
push
push
leave
test
mov
imul
jmp
mov
lods
arpl
leave
nop
jmp
mov
jecxz
jne
loope
ss
jp
xchg
mov
leave
jne
add
out
xchg
ror
fnstcw
and
cmp
or
pop
or
pop
add
mov
add
ss
sub
jg
dec
mov
cmp
sbbl
lods
repz
cmpsb
dec
dec
lea
cmp
ret
mov
xchg
cmpsl
ret
and
enter
xchg
add
lret
pop
shll
fidivs
loop
loop
sti
iret
inc
pop
lock
hlt
scas
mov
cmp
add
add
cli
xchg
jns
outsl
xor
ds
lods
test
xchg
xor
testl
jns
add
adc
frstpm(287
adc
mov
cmp
mov
movsb
test
mov
scas
mulb
push
imul
pop
inc
xlat
cmp
pop
enter
xor
cmpsb
in
pop
mov
add
std
or
arpl
mov
int
and
pop
repz
mov
sbb
ss
icebp
pop
dec
cmp
adc
sub
imul
and
and
jns
mov
sub
add
inc
sub
aad
scas
jmp
rorb
or
in
mov
push
and
push
xor
fs
jno
negb
fldlg2
outsb
adc
lock
test
aad
daa
and
repz
push
fwait
mov
push
push
loopne
inc
push
add
out
in
das
pop
mov
jnp
jmp
add
push
lods
movsb
push
sbb
inc
push
test
pop
mov
fsubs
fwait
dec
imul
push
loope
push
in
push
gs
mov
inc
cld
mov
pop
cli
lcall
repz
cmc
dec
xor
lret
enter
lret
dec
xor
mov
call
pop
mull
bound
addr16
ss
lahf
cmpsl
cmp
pop
daa
mov
xlat
pop
lods
xchg
frstor
cmp
clc
or
lds
mov
insl
pop
mov
pop
fldl
mov
xor
out
dec
ret
xchg
or
data16
fs
mov
pop
pop
jp
rolb
cld
xchg
mov
xchg
xor
movsb
push
dec
sbb
lcall
xchg
inc
lock
rcr
xlat
push
mov
xlat
jg
push
pop
icebp
jne
jp
mov
aam
xor
movsb
out
push
repnz
pop
mov
jl
cli
adc
jne
movsb
cmp
fcmovb
sub
mov
sub
pop
rorb
repnz
adc
pusha
outsb
jl
jge
sbb
cmpsb
adc
push
pushf
jg
or
mov
dec
sbb
scas
mov
insl
push
jnp
and
and
sbb
dec
outsb
or
pushf
enter
stos
dec
add
sbb
sub
mov
mov
mov
addr16
sbb
test
xchg
pop
adc
mov
xorb
adc
test
xor
sub
jbe
sbb
aas
mov
loope
mov
inc
clc
mov
enter
fisttps
jne
in
pop
out
and
nop
push
dec
std
push
push
iret
dec
lahf
stos
sbb
push
test
daa
jnp
aaa
stc
push
mov
pop
inc
inc
vmread
mulb
leave
mov
dec
fwait
sub
in
addr16
mov
loope
adc
iret
je
daa
mov
push
out
inc
data16
xor
lahf
pop
jbe
sbb
pop
ret
les
push
jnp
adc
nop
out
push
jne
push
jno
cmp
imul
jmp
lods
cmpsl
push
sbb
stc
inc
sub
cmpsl
jmp
xchg
xchg
shr
add
loop
aad
jo
dec
loop
push
addl
imull
push
sub
adc
pop
test
mov
sbb
mov
dec
js
lods
jg
add
test
dec
pop
mov
push
leave
dec
and
leave
mov
adc
cmp
sbb
sbb
lcall
icebp
or
jno
pop
outsb
fwait
js
sbb
inc
inc
mov
mov
iret
or
lds
and
adc
jmp
dec
out
mov
ds
mov
inc
or
mov
jge
adc
dec
fnsave
mov
roll
test
mov
imul
jmp
lahf
loopne
mov
adc
xchg
mov
stos
jl
rorb
icebp
ret
push
scas
iret
ljmp
inc
and
enter
mov
stos
cmp
fwait
mov
dec
mov
mov
out
sar
xor
sarb
mov
outsl
fcoml
cmp
pop
pop
icebp
xchg
xchg
repz
imul
inc
mov
lea
jge
out
cld
gs
cmp
sti
push
stos
xor
pop
cmp
xchg
pop
lods
sub
jg
cmp
in
dec
push
dec
add
or
popw
xor
adcb
shll
ds
fwait
cwtl
cmc
pop
iret
jge
push
dec
ret
sti
lcall
stos
ror
insl
or
bound
outsb
std
and
push
scas
icebp
mov
movsl
inc
add
pop
dec
js
inc
lock
pop
push
cmp
cmp
pop
add
stc
push
pusha
adc
outsb
jo
sahf
ret
xor
test
dec
inc
push
mov
jmp
xor
mov
rol
or
mov
adc
mov
das
pop
cmp
dec
add
jle
out
dec
push
ret
in
xor
sbb
enter
xor
and
daa
inc
stc
mov
fistl
lahf
out
cli
stos
xchg
xchg
pushf
dec
lea
mov
fs
mov
loopne
mov
and
adc
lods
mov
xor
cmp
pop
aas
inc
cmp
enter
rclb
out
movsb
nop
xchg
ret
es
mov
loope
outsl
jecxz
push
mov
add
xor
inc
arpl
and
mov
mov
push
shlb
mov
xchg
shll
sub
inc
xchg
mov
cmp
dec
repnz
lds
pop
imul
test
adc
or
dec
lret
jg
pop
in
sub
adc
push
add
mov
repnz
loope
jno
sbb
adc
cmp
aas
movsb
scas
leave
inc
sub
xchg
fwait
jmp
adc
pop
xor
dec
sahf
push
clc
adc
jb
outsb
pop
sub
mov
and
mov
fs
pop
fs
and
mov
push
dec
push
rcrl
out
mov
mov
mov
or
outsl
test
insb
adc
sbb
cmp
rolb
sub
imul
mov
stc
enter
fsub
push
sbb
pop
out
sub
push
adc
cmp
outsb
repz
dec
and
imul
inc
fldl
imul
lret
loop
lcall
mov
mov
xchg
shrb
lret
enter
adc
or
jecxz
mov
aas
fcomps
push
hlt
xor
arpl
push
mov
and
lock
dec
inc
push
popf
outsb
cwtl
inc
dec
gs
imul
imul
testl
ss
jp
icebp
pop
xor
test
inc
or
mov
mov
inc
and
enter
inc
js
xchg
nop
bnd
xchg
bound
popf
add
xor
fmull
addr16
sarb
stos
push
stos
pop
push
sbb
dec
push
cli
inc
dec
xchg
loopne
xchg
push
pop
mov
mov
aad
sub
jae
or
out
std
loope
mov
push
out
push
dec
in
pushf
stc
test
jmp
inc
lret
xchg
int
jecxz
pop
push
inc
and
jbe
pop
push
sbb
rcrl
paddusb
mov
loopne
rcrb
lret
mov
sbb
xchg
movsl
fsubr
mov
adc
dec
shrb
push
icebp
cmpsb
push
inc
test
adc
fisttpl
test
ret
sbb
movsl
das
cmp
jmp
movsb
mov
sahf
mov
mov
in
cli
pop
ljmp
and
inc
mov
and
loope
jb
inc
pushf
and
ret
shll
adc
outsb
movsb
gs
push
sbbl
sub
cmp
adcb
adc
das
adc
cld
dec
inc
push
push
fdivrs
pop
xor
xchg
mov
xchg
gs
movsl
in
repnz
xor
dec
in
insl
jge
cmp
xor
cmp
inc
inc
xchg
inc
adc
inc
push
out
pop
adc
xchg
mov
cmp
mov
push
pop
jp
ja
lret
pop
testb
xchg
std
add
frstor
ret
test
subl
fwait
add
dec
shll
fcom
and
loopne
cmp
clc
adc
icebp
fnstenv
pop
push
test
lock
mov
or
inc
loopne
addr16
mov
int3
rorl
es
dec
xchg
ljmp
mov
push
xchg
sbb
lret
pop
pop
cld
stc
inc
dec
lret
popa
jmp
shr
pusha
mov
cld
inc
xchg
cs
sub
jns
xor
js
nop
add
std
icebp
adc
push
ss
in
and
lahf
pushf
jg
xchg
imul
fsubl
pop
mov
fisubs
push
push
mov
jne
sub
mov
or
add
pop
push
int
push
mov
in
aam
mov
fstps
enter
ja
into
jbe
mov
pop
cmp
test
loope
sub
daa
sub
loope
pminub
insl
dec
repnz
insb
push
add
pop
adc
mov
lret
inc
dec
xor
cmp
data16
mov
fisttpl
mov
mov
sarl
jge
lds
mov
ss
lock
sbb
call
xor
mov
leave
and
mov
add
or
mov
cmp
pop
or
inc
movsb
cli
test
mov
mov
push
pop
in
fldt
shrl
xor
int3
sbb
pop
mov
xchg
cmp
cmpsb
add
or
sbb
adc
shl
mov
mov
jmp
test
leave
popa
cmp
mov
push
lret
jo
outsb
xchg
xor
mov
jg
mov
lods
mov
inc
push
bnd
xchg
push
mov
lods
dec
push
loope
sub
sub
adc
add
or
xchg
out
leave
stc
nop
aaa
mov
pop
mov
add
ja
test
xchg
int3
add
lods
dec
mov
xor
or
sub
push
test
push
xor
fidivs
mov
jns
das
mov
mov
psubsb
adc
outsl
das
pop
mov
jecxz
dec
pop
sub
rcl
subb
push
xor
mov
out
shll
lcall
subl
mov
pop
into
adc
pop
sahf
lahf
into
pop
and
les
jnp
cli
jns
sahf
and
xor
fidivs
std
out
test
pop
jl
mov
aad
jle
je
xchg
outsl
mov
sub
pop
jge
call
mov
push
jg
xlat
xor
ljmp
jo
push
add
ret
jne
pop
aas
xlat
in
lods
mov
lds
fidivl
imul
in
sbb
jecxz
popf
mov
shrl
push
and
movl
mov
adcl
fstps
mov
xchg
pop
shll
lea
das
mov
data16
out
jbe
outsb
add
sarl
scas
mov
mull
inc
mov
dec
and
pushf
loopne
test
ret
and
cmp
pushf
icebp
dec
and
xor
or
xchg
jo
popa
mov
push
or
inc
sub
not
xchg
loopne
adc
or
mov
insl
jbe
cmc
out
iret
shlb
xchg
addb
dec
in
addl
xchg
jecxz
sbb
cmp
cltd
adc
adc
push
hlt
mov
in
lcall
int
mov
mov
push
adcl
mov
xchg
cmp
pop
idivb
repz
dec
cmpsb
out
rcl
sbb
shll
out
mov
mov
and
clc
lods
out
in
mov
in
mov
scas
or
mov
cmp
push
xlat
repz
dec
pop
icebp
cmp
add
xor
icebp
inc
stos
mov
es
lcall
mov
pop
fdiv
rolb
jns
or
xchg
jo
shlb
or
icebp
inc
sub
push
xor
add
ret
imul
stos
sub
jae
test
mov
jecxz
jae
and
cmp
cmpsl
or
pop
sub
mov
pusha
and
adc
stos
inc
into
jbe
and
cmpl
out
push
mov
pushl
sub
adc
and
test
testb
inc
out
sti
dec
test
push
pop
pop
popa
sbb
jp
loop
aaa
loope,pt
mov
pop
sbb
xchg
lds
dec
xchg
mov
dec
jge
mul
mov
rorb
clc
ret
push
mov
mov
xorb
xor
mov
sub
mov
xlat
mov
mov
cld
mov
mov
mov
mov
dec
inc
fmulp
cmp
mov
mov
neg
jnp
push
dec
mov
imulb
nop
insl
add
xor
mov
cmpsl
adc
rorb
in
xor
xlat
test
jle
je
stos
mov
test
xchg
clc
arpl
xchg
stos
data16
xchg
inc
pushf
leave
mov
std
rcrl
test
rcrl
mov
xchg
cmp
xchg
jle
fsubrl
sbbl
push
enter
push
movsl
daa
push
cmp
mov
mov
pusha
xlat
push
jbe
lea
jecxz
jmp
inc
mov
lea
movsl
fists
cld
lock
inc
lret
mov
test
sub
sar
jp
popa
pop
and
mov
jmp
lock
popf
aaa
xchg
lods
daa
mov
fcoml
mov
xlat
mov
pop
call
add
sti
mov
stos
pop
mov
xchg
sbb
pop
fndisi(8087
and
jae
xchg
push
imul
dec
pusha
pop
dec
pop
test
push
es
out
scas
cld
fidivrs
push
in
loopne
xor
jg
ret
out
pop
mov
mov
stc
in
cs
aaa
sbb
sbb
and
inc
dec
aaa
push
leave
inc
jle
addl
lds
mov
inc
out
mov
in
outsl
cmp
repz
mov
jae
sub
aad
add
jle
xorb
cmp
add
cld
dec
mov
loope
cmp
cmp
leave
aas
add
rcr
push
mov
movsl
rclb
cwtl
jl
enter
cmp
ficoml
push
test
ljmp
inc
mov
shll
testb
adc
rcr
pop
arpl
fiaddl
jo
push
mov
mov
mov
xchg
mov
mov
in
sbb
push
add
ss
movsl
enter
in
pop
lods
pop
in
out
adc
repz
repnz
pop
dec
and
sahf
rorl
aam
lea
mov
pop
out
mov
adc
clc
adc
out
pop
xchg
push
sub
mov
fwait
jmp
sahf
inc
sub
lods
rorl
fldl
sbb
into
jo
xor
aas
in
pop
xor
push
cwtl
mov
jecxz
push
shrb
mov
push
shll
adc
daa
adc
adc
dec
je
or
push
in
enter
pusha
ds
pop
and
xor
and
jg
dec
cmpsb
lods
jecxz
movsb
andb
repz
fsub
fs
aas
push
scas
mov
das
bnd
in
in
imul
inc
jb
ja
out
push
rolb
sbb
arpl
lret
scas
scas
movsb
inc
fsubrs
cltd
fucompp
mov
dec
add
jae
out
lea
fisubs
mov
jo
leave
ljmp
dec
in
sub
xchg
js
loopew
mov
pusha
or
pusha
das
xor
jle
xchg
lea
cs
cld
sahf
popf
cs
es
and
jge
sbb
pop
jmp
push
inc
xlat
es
inc
mov
popf
call
out
add
bound
fwait
ds
mov
xor
outsb
dec
jl
and
inc
mov
cmc
or
sahf
imul
lock
addr16
enter
fs
dec
jbe
aam
sub
jbe
lds
mov
push
faddp
dec
dec
loope
sarb
clc
inc
les
pop
arpl
addb
or
adc
iret
lcall
out
push
aas
push
sub
lods
test
mov
stos
lea
enter
test
addr16
or
mov
jno
dec
jno
mov
mov
lret
inc
icebp
add
popa
fnstenv
gs
lods
sub
mov
xor
gs
xchg
jge
cmp
and
in
cs
cmpsb
jmp
inc
jo
fstpl
mov
mov
loop
ret
cmc
pushf
pusha
outsl
cmp
xor
scas
fcomps
inc
jecxz
dec
std
adc
imul
loopne
push
daa
mov
inc
pop
sbb
rolb
add
loopne
jns
fnstcw
dec
nop
int3
jge
stos
lcall
hlt
lret
es
jmp
lahf
data16
mov
push
or
fiadds
movsb
sub
divb
push
fsubrs
and
enter
cmc
lret
fistpl
daa
add
mov
pop
popa
mov
adc
gs
mov
jg
leave
xor
das
jge
cmp
stc
js
push
enter
icebp
mov
int3
jmp
dec
inc
mov
into
dec
popa
and
mov
adc
dec
ret
cmpsb
sqrtps
out
mov
sub
xor
test
dec
popa
rcrb
push
loope
test
imul
jb
sbb
mov
dec
or
jecxz
stos
ror
sub
cmp
inc
cmp
cmpsl
pop
lret
mov
and
mov
mov
mov
movsl
xchg
cmp
jl
push
pop
shl
divb
sahf
test
cwtl
add
movsb
pop
and
mov
dec
jle
or
xor
je
xchg
sbb
test
mov
mov
push
loop
lahf
jb
mov
ret
test
pop
xchg
pop
mov
ljmp
inc
icebp
or
xchg
push
sbb
pop
push
jns
sbb
mov
push
sbb
loope
scas
jne
xchg
cmp
pop
fdiv
mov
leave
int
sub
cmpsl
enter
addl
sar
cmpsb
nop
adc
fwait
and
insl
xchg
mov
loop
ljmp
sbb
mov
lret
push
mov
push
shll
scas
addl
nop
sub
push
sti
mov
fcompl
icebp
fbld
outsb
mov
idiv
jbe
adc
cmp
fs
testl
sbb
dec
mov
test
push
pop
cltd
out
subb
or
insb
cmp
and
cmpsl
test
ret
lea
repnz
loope
repz
cmp
out
xor
adc
dec
adc
xchg
lods
cmp
and
xchg
in
xchg
movsl
aam
adc
sub
js
xor
faddl
lock
js
xor
jecxz
loop
notl
test
std
add
arpl
sub
and
divb
inc
pop
inc
fsubs
ss
pop
out
out
pushf
mov
enter
lret
push
cmp
mov
scas
dec
xlat
mov
cli
cmp
sbb
iret
xchg
xor
rolb
rcrb
lds
sbb
dec
sbb
jl
push
push
mov
xor
inc
sub
leavew
mov
lds
xchg
mov
dec
and
rolb
mov
out
divb
fwait
arpl
and
pop
sbb
out
shrb
fstl
hlt
or
inc
xchg
lret
pop
loop
rcl
mov
dec
inc
jge
nop
adc
lds
push
push
sub
mov
mov
je
push
ja
push
insl
adc
arpl
call
xchg
outsb
xchg
mov
mov
testl
dec
addr16
mov
out
add
and
in
mov
or
addl
or
push
and
mov
or
in
popf
sti
popf
jge
push
sub
xor
xor
sahf
shrl
das
inc
cmp
and
lods
sub
mov
mov
and
or
inc
sbb
xchg
cmpsl
mov
lcall
jbe
sbb
das
jp
stos
jb
mov
or
fs
jae
sub
xor
jo,pt
addr16
incb
rorl
daa
xor
clc
xchg
sub
mov
pop
or
arpl
lcall
xchg
scas
fistl
jmp
sub
pop
popf
mov
scas
add
dec
sub
sahf
cmp
test
fiaddl
pop
mov
mov
addl
mov
fisubl
dec
mov
dec
push
fst
outsl
xor
ret
mov
jecxz
ja
test
loop
inc
inc
xchg
inc
jb
inc
decb
dec
lock
inc
xor
out
push
mov
pop
ret
jo
jge
rclb
jnp
bound
outsl
in
xchg
cli
inc
jp
repz
clc
mov
mov
push
mov
pop
xchg
aam
xchg
outsb
fwait
mov
test
add
mov
test
cltd
aas
push
sub
inc
jmp
add
je
outsl
pop
jmp
filds
rorl
xor
or
add
jge
or
sahf
mov
fs
pop
out
sub
xchg
loope
movsb
in
push
out
les
and
aad
and
cmp
pop
stos
lods
scas
mov
loope
scas
cmp
add
xchg
or
pushf
js
jns
loop
jg
mov
out
hlt
roll
movsb
xchg
push
adc
push
in
dec
add
xchg
jbe
dec
out
or
cmpsb
insl
cmpsb
or
jle
repnz
enter
xchg
mov
es
out
and
jbe
scas
inc
gs
push
int3
lcall
pushf
mov
in
gs
or
lea
cmpsl
jecxz
push
decl
jge
xchg
mov
incb
xchg
jp
jle
push
bound
push
add
lret
aas
xor
push
sbb
movsl
std
sti
jg
pop
xchg
pop
dec
inc
jle
aaa
xchg
and
add
js
pop
mov
adcl
fwait
ds
fwait
xor
jno
rclb
jg
sub
or
ljmp
mov
inc
insl
shll
outsl
pop
or
aam
jae
and
xor
fdivs
push
into
pop
or
dec
pusha
fwait
rcrl
aad
or
nop
je
sub
xchg
jecxz
mov
pop
mov
push
inc
sbbl
sbb
mov
pop
mov
mov
ja
push
outsl
dec
jle
add
mov
pop
pop
jno
adc
outsl
lods
insb
and
xorb
adc
or
mov
cmc
xchg
xor
mov
sub
pop
inc
out
xor
mov
js
push
inc
add
mov
sub
adc
cmc
xchg
and
addr16
add
jb
adc
pop
sahf
xor
mov
outsl
add
and
jno
inc
push
push
add
lcall
test
xchg
and
push
shll
dec
fwait
es
fisttpll
push
lret
sbb
sub
leave
xor
mov
stos
mov
jne
adc
mov
inc
pop
mov
pop
push
dec
addr16
in
jp
xor
mov
inc
pop
int3
mov
mov
bound
lcall
je
pop
filds
push
fucomp
mul
mov
addb
mov
mov
cmp
stos
sti
sub
or
xor
aaa
ljmp
mov
xchg
sub
icebp
in
shr
adc
cmp
movsl
sahf
int3
mov
adc
imull
inc
popa
push
pop
xchg
push
pop
jge
inc
mov
ficoms
aad
xor
jno
inc
and
hlt
daa
mov
inc
outsb
inc
sub
xchg
lahf
lods
add
xchg
test
pop
lret
ret
int3
mov
dec
lcall
iret
xchg
and
fwait
je
inc
dec
push
xchg
not
mov
mov
mov
inc
push
ret
cmp
pop
popf
pushf
pop
push
cld
inc
out
loope
mov
and
and
movsl
in
push
in
jl
cli
paddd
scas
stos
test
adc
sub
cld
rorb
mov
xor
dec
scas
dec
mov
pushf
mov
mov
repz
dec
loope
adc
imul
nop
dec
sbb
roll
rolb
ds
mov
cmpsl
sbb
jle
ds
xor
xor
inc
inc
jle
movsl
lahf
loop
inc
ss
pop
xchg
xor
sahf
ret
dec
ret
outsl
pushf
and
mov
es
xchg
adc
push
mov
mov
mov
adc
flds
mov
sbb
fisubl
xor
out
jg
or
call
movswl
push
mov
jo
push
xchg
sti
dec
inc
and
xchg
nop
xor
or
rcr
push
inc
push
jp
dec
stc
adc
cwtl
and
push
hlt
jae
sti
stos
rorl
jle
nop
outsl
scas
mov
xor
rolb
lret
xchg
xchg
addb
adc
and
aas
rcrb
decl
sbb
and
leave
iret
jmp
xor
cmc
inc
inc
pop
sbb
and
mov
sub
outsb
lods
adc
int
sub
in
rcr
add
xor
lods
pop
jbe
in
loopne
sub
push
popa
adc
imul
cmc
inc
xorl
inc
adc
repz
pushf
jns
cmp
movl
and
stos
cmpsl
fmull
jle
insl
add
or
cmp
jp
popf
inc
adc
mov
leave
fsubr
sbb
pop
leave
jl
jp
inc
in
inc
icebp
out
outsb
cmp
jo
xor
scas
push
lds
sub
outsb
es
ret
ret
xor
dec
daa
test
adc
aad
dec
mov
sbb
xor
pop
push
sub
and
push
push
mov
mov
fcomps
pop
sbb
mov
inc
mov
scas
inc
ljmp
pop
jecxz
scas
mov
icebp
jecxz
popfw
push
jp
int
movsl
mov
cld
dec
push
mov
pop
cmp
push
arpl
cmp
shll
les
cltd
or
lcall
loop
inc
lea
and
pop
shrb
jns
push
pop
ja
add
push
mov
jb
sbb
xor
pop
fidivrs
insb
pop
icebp
imul
aad
pop
sub
aaa
xchg
add
outsl
dec
pop
mov
and
in
fistps
jge
cltd
icebp
mov
pushf
orps
in
lea
cli
cmp
mov
jno
add
mov
add
xor
pop
xchg
or
popa
pop
jbe
das
mov
shl
into
or
inc
popa
adc
inc
rol
push
loope
dec
or
ja
mov
pop
movl
dec
jnp
pop
pushl
cli
dec
ret
jecxz,pt
iret
cmp
jae
std
xor
adc
dec
gs
add
add
mov
popl
fldl
mov
movl
add
cmc
cmpsl
adc
mov
lds
sahf
jbe
inc
div
or
arpl
jns
sbb
mov
xchg
es
sub
add
mov
test
mov
clc
bound
push
ret
push
shlb
stc
out
jnp
fisttpll
test
mov
and
lcall
push
mov
lret
fwait
insb
imull
shrl
fiaddl
inc
jae
ds
repnz
dec
push
mov
dec
and
add
xchg
lret
fs
cmp
mov
pop
sub
fstpl
xor
push
and
and
xorl
out
mov
pop
fists
mov
cmp
enter
cmpsb
sub
js
mov
pop
add
jl
dec
icebp
arpl
pop
and
jnp
fisubrs
dec
mov
xlat
cmp
jmp
xchg
and
sarl
sub
fiaddl
jo
sbb
cmc
repz
clc
inc
shrl
adc
out
xchg
jne,pt
cmpsb
pop
orl
gs
xchg
add
fsubrs
jne
or
popa
jg
pop
adc
add
loopne
push
mov
push
jge
nop
addr16
cmpsl
mov
cmpsl
cmp
ror
outsl
outsb
xchg
pop
mov
mov
fucomp
popf
les
cli
jae
fidivl
or
inc
sarb
daa
push
push
fsubr
scas
idivl
xchg
pop
jno
jle
push
pop
inc
mulb
cmp
and
lods
xchg
insl
popf
mov
add
dec
gs
popf
jb
jecxz
out
mov
fstl
push
lods
dec
test
mov
repz
cmpsl
xor
add
stos
test
inc
or
push
test
arpl
imul
fstpl
dec
cltd
test
adc
repnz
sti
jmp
repnz
or
fimull
jbe
pop
pushf
and
addr16
inc
in
div
int3
das
out
test
adc
stc
or
or
jg
and
add
push
xchg
lea
test
stos
addb
dec
xchg
shll
add
rclb
cmp
hlt
movsl
and
in
mov
pop
sub
sub
adc
outsb
js
jns
out
icebp
icebp
repz
push
shll
push
aas
mov
adc
or
fstps
or
dec
int3
mov
inc
cmp
dec
repnz
xchg
pop
int3
mov
push
xchg
insb
adcl
das
mov
bound
cmpsb
pusha
sub
mov
shll
jnp
movsb
pop
dec
jle
jg
sbb
push
mov
dec
testl
cmp
cmp
mov
lea
rol
xlat
gs
insb
and
in
or
rcll
xlat
or
rcll
xchg
out
or
sub
enter
push
push
jne
push
rolb
push
sub
shrb
scas
inc
mov
pop
pop
sar
pop
mov
ret
repnz
mov
xor
es
cmc
dec
mov
cmpb
pop
or
not
inc
pop
jae
cmpsl
test
js
loop
ja
or
test
daa
fiadds
mov
arpl
mov
dec
mov
popf
in
je
or
mov
pushl
pop
int3
xchg
out
pushf
data16
cwtl
xor
stos
inc
mov
add
mov
push
jne
lock
addr16
adc
mov
inc
jmp
imul
mov
adc
nop
mov
jnp
push
add
push
rorl
repz
lea
inc
lods
or
push
scas
bound
inc
xchg
lds
imul
add
and
and
mov
xchg
sub
sbb
jecxz
rcrl
xchg
jle
mov
aaa
jnp
fidivl
or
fwait
mov
inc
pop
das
sub
bound
pop
jb
pop
rorl
mov
push
jo
push
repnz
stos
repz
sbb
setnp
ss
int
shl
jp
test
add
add
enter
hlt
lds
mov
push
mov
jecxz
inc
cltd
bound
or
sbb
adc
call
push
jle
stc
dec
out
movl
and
inc
jp
es
addr16
jno
push
pop
lock
push
int
xchg
xor
adc
jnp
lock
push
pop
mov
loopne
sub
leave
add
fimuls
cld
pop
jns
scas
cwtl
pop
sbb
pop
dec
jnp
es
ds
xchg
imulb
push
jbe
xchg
outsl
xlat
mov
push
cli
mov
out
subl
popf
adc
xor
xchg
fwait
out
in
in
pop
inc
or
cmp
popf
repnz
hlt
ja
jne
jl
shrl
sub
inc
movsb
hlt
jno
scas
inc
xchg
xorl
fdivs
push
push
sbb
push
loop
jecxz
xchg
push
in
push
pop
mov
imul
xor
push
sbb
mov
ja
fnstenv
add
or
adc
rol
push
int3
mov
ljmp
roll
ret
and
mov
mov
repz
pop
imul
inc
adc
xchg
hlt
icebp
or
push
movsb
mov
cmp
into
int
jp
and
push
dec
into
dec
xchg
fiadds
push
addl
fisubl
dec
faddl
sarb
xlat
fmull
mov
or
or
outsb
out
add
sub
rol
mov
fldl
mov
dec
and
shlb
xor
xchg
mov
scas
es
mulb
xor
push
sub
movsl
mov
fcoms
sbb
cmp
imul
je
push
fnsetpm(287
mov
fistps
mov
push
test
in
mov
and
dec
add
frstor
adc
adc
aad
arpl
inc
sub
jns
repnz
call
repnz
cmpb
or
rorb
inc
inc
aad
leave
test
mov
jno
stc
fistps
push
or
cmpl
call
je
out
iret
inc
jno
insb
inc
and
xchg
inc
rorl
psraw
jle
lods
jnp
pop
fwait
push
fdivrs
mov
stos
leave
arpl
es
mov
xchg
sub
fidivl
add
sbb
pop
inc
in
and
dec
enter
cmc
lods
jecxz
push
adc
jo
sbb
in
sub
pushf
stos
pusha
cltd
loop
adc
rolb
inc
mov
ja
mov
int
stos
cmpsb
dec
pop
or
gs
dec
inc
in
cltd
cli
cld
movsb
outsl
xor
or
sub
add
mov
and
mov
sub
bnd
xchg
ja
mov
or
or
or
mov
or
shlb
fwait
and
and
pusha
or
shlb
fsubr
jg
ja
push
hlt
mov
adc
cmpsb
clc
loope
iret
mov
rorb
mov
xchg
out
inc
jge
mov
in
loopne
cld
dec
enter
inc
roll
repz
push
jno
or
popf
pop
fdivs
rcl
xor
les
inc
xchg
test
or
jecxz
adc
repz
mov
xchg
jo
xor
cld
adcb
jbe
in
mov
rcll
jnp
jb
xor
enter
cmc
push
dec
aaa
icebp
inc
adc
into
sbb
inc
jmp
nop
test
mov
mov
xchg
stc
pusha
andb
mov
pop
in
pusha
lahf
cwtl
rcrl
add
leave
roll
mov
sarb
mov
imul
shll
adcl
insb
imul
lea
das
sarl
test
push
and
xchg
sub
loopne
jp
cmp
rolb
or
fstps
mov
mov
inc
xchg
shll
test
fcompl
or
add
xchg
add
jb
mov
lret
push
inc
jecxz
and
test
inc
push
push
sub
daa
in
jnp
mov
cmp
int
dec
dec
fnsave
fadd
in
mov
pop
loopne
adc
sub
sub
dec
lods
loop
lock
fucomi
fldt
mov
dec
cld
push
jmp
pop
imul
inc
mov
popa
or
mov
mov
jmp
int3
rcrl
cld
or
testb
mov
dec
dec
jg
add
push
clc
mov
jl
pop
in
lahf
push
xchg
or
stos
xchg
cmp
insb
les
pusha
repz
out
jl
lods
dec
and
sahf
lods
movsb
mov
pop
adc
inc
imul
cld
push
jmp
sti
dec
sbb
pushf
add
jge
mov
cmp
and
pop
cltd
jb
test
pop
xchg
cltd
dec
ja
mov
inc
mov
arpl
adc
insl
das
inc
subl
mov
pushl
pop
and
adc
inc
jg
xchg
jl
cmpsl
xchg
mov
lcall
jo
add
xor
or
cwtl
jne
dec
mov
dec
insl
lock
frstor
dec
sbb
push
sti
xchg
test
mov
mov
test
and
outsl
dec
dec
inc
into
out
inc
fistpl
cmc
imul
lds
cmp
lods
xchg
mov
callw
dec
fs
pop
pushl
mov
mov
xor
jne
test
fimuls
pop
or
pop
das
push
dec
lea
xchg
cmpsb
das
xchg
cltd
imul
xchg
sub
lock
xlat
push
push
enter
lea
xor
icebp
nop
out
push
or
pop
ljmp
ljmp
sbb
das
jns
fnsave
adc
push
test
dec
out
or
shr
iret
test
cltd
adc
shll
mov
and
fs
jbe
jmp
clc
popf
in
sub
in
arpl
mov
mov
negb
ss
into
scas
sbb
sahf
pusha
enter
inc
xchg
mov
xchg
jg
fidivrs
jo
scas
ja
dec
xlat
jb,pt
push
sahf
push
xchg
pop
jb
fs
xor
sub
mov
mov
lret
scas
insl
cmp
cmp
sar
push
push
outsl
dec
outsb
movsb
xor
push
dec
xchg
out
mov
lea
repnz
cltd
aad
mov
adc
pop
or
icebp
ror
inc
sub
aam
inc
push
hlt
push
lock
out
mov
adc
repz
outsl
add
aaa
subl
jns
sub
bsr
push
push
pop
arpl
lea
lds
sub
inc
push
test
js
es
mov
in
pop
xchg
add
fcomp
xchg
cmp
jns
enter
pop
xor
aaa
pop
cmp
cmp
fnsave
inc
imul
mov
lldt
pop
adc
dec
cltd
xor
js
lret
test
in
mov
idiv
repz
fld
and
lods
mov
jo,pn
adc
xchg
idiv
ret
push
ret
xchg
repz
fbstp
or
test
fdivl
aaa
or
fidivrl
fs
mov
shlb
cmp
ja
mov
dec
mov
popf
pop
mov
pushf
jnp
mov
insl
push
imul
mov
std
lret
mov
repz
cmp
xchg
popf
jle
jno
add
jle
mov
adc
cmc
in
sarb
movsl
xchg
test
or
cmp
dec
jne
dec
xchg
sub
sub
inc
pop
insb
clc
daa
sbb
lds
add
fcmovnu
jge
mov
leave
push
cli
sahf
std
mov
jnp
sbb
fadd
hlt
mov
mov
mov
sub
mov
or
call
jmp
int3
cli
ficomps
jg
cmp
mov
push
fiaddl
lahf
push
push
jb
test
or
data16
jb
int
or
insl
sbb
mov
push
push
dec
xchg
ja
insb
loop
or
inc
push
lret
mov
mov
shll
xchg
jb
inc
imul
fimull
out
add
or
dec
push
jp
xor
push
lods
arpl
sub
out
mov
mov
pop
xchg
pop
jne
stos
xchg
int
sub
addb
inc
xor
in
mov
jbe
cmp
repz
pop
inc
lahf
enter
mov
pop
and
shrl
out
xor
mov
fdiv
dec
xlat
dec
adc
int
sbb
lods
xor
in
pop
in
xor
imul
inc
mov
lock
mov
sub
test
push
or
cltd
add
sahf
loope
fsubrs
add
sub
dec
cmp
push
add
data16
cli
icebp
pop
outsb
inc
jmp
xchg
movsb
push
fwait
lock
and
nop
push
insl
cmp
inc
data16
push
push
outsb
aas
jb
xor
push
mov
call
mov
pop
fsub
mov
add
ds
ljmp
dec
aas
cwtl
loop
mov
sar
repz
out
adc
cmp
push
imul
xor
jge
and
rolb
sti
inc
mov
mov
push
mov
mov
xchg
mov
sbb
cli
icebp
dec
add
addl
dec
push
shlb
cmpsb
popa
xor
aaa
push
add
cmp
mov
divl
mov
push
fs
mov
pop
int
scas
je,pt
dec
jns
pushf
call
xor
lret
mov
outsb
je
std
popa
shr
cmp
xor
adcl
mov
mov
mov
and
xchg
pop
pop
shll
stc
mov
push
cmpsl
mov
clc
lods
cmpsb
leave
pop
mov
dec
pop
movsb
int3
adc
in
push
int
out
fistpl
notl
xor
sbb
jbe
xor
roll
dec
idivl
jo
nop
xor
cmc
enter
in
out
cltd
and
aaa
or
push
jmp
jne
push
inc
inc
das
and
mov
inc
mov
push
adc
hlt
ficoml
jns
mov
ds
outsl
loopne
adc
and
incb
les
push
rcrb
add
mov
mov
ds
push
lcall
xchg
push
xchg
add
movsl
push
hlt
mov
xchg
jl
shrl
lods
ret
mov
aaa
leave
shrl
pusha
jg
dec
sub
sbb
loope
xchg
push
and
add
cli
push
scas
fwait
test
or
push
out
jb
cmp
lret
dec
mov
scas
fnsave
sub
sub
lret
rcrl
sti
out
dec
mov
jns
mov
imul
mov
xchg
dec
inc
std
mov
scas
mov
push
jno
cmpsl
mov
mov
out
cmp
adc
cmp
xchg
mov
cmp
pop
out
orl
imul
cli
lods
inc
dec
je
icebp
mov
add
repnz
pop
scas
das
push
mov
imul
push
mov
push
jmp
inc
divb
cs
cmp
aaa
mov
popa
mov
or
xchg
inc
fsubs
stos
jb
push
and
mov
and
adc
rorb
stos
repnz
push
dec
rorb
ja
sub
lock
xor
movb
inc
sbb
pop
popf
sbbl
addr16
int3
push
inc
sti
in
xor
sub
pop
jmp
push
push
adc
subl
ds
das
dec
xor
daa
cmp
mov
cs
inc
inc
push
jmp
sub
mov
addr16
mov
fnstenv
lahf
scas
out
pop
push
mov
pop
adc
outsb
mov
ret
pop
out
outsl
sbb
and
insb
ret
fistps
lcall
inc
and
negl
pop
rep
lods
je
xchg
lcall
je
jae
xor
lcall
loop
ret
mov
unpckhps
mov
pushf
ficoml
adc
leave
movsl
dec
xchg
or
cmpsb
in
and
pop
sbb
jb
xorl
lret
xor
lahf
pop
or
push
rcrb
jl
mov
fcompl
insb
rep
jmp
sbb
mov
xchg
jo
push
mov
mov
pop
fwait
arpl
adc
or
or
inc
ja
xchg
stos
push
xchg
adc
jo
pop
sbb
dec
xchg
js
clc
pushw
les
xchg
xorl
pop
and
mov
loope
movsb
int3
int
addr16
ljmp
ja
adc
lods
test
pop
push
je
push
lcall
scas
scas
test
sbb
inc
mov
inc
jmp
add
jae
jae
outsl
xchg
lock
push
divb
orl
cmpsl
ror
enter
xor
mov
arpl
cmp
inc
leave
jo
pop
pop
push
mov
enter
dec
mov
sbb
and
push
jno
js
stc
inc
jge
pushf
lret
fdivrs
or
hlt
leave
add
adc
js
and
scas
sub
pop
adcb
loope
mov
xchg
call
mov
mov
sar
jle
movsl
fst
outsb
scas
cwtl
push
pop
mov
dec
lods
ficomps
jnp
adc
and
fstl
imul
adcl
rorl
and
sbb
das
mov
repz
fisttps
popf
out
adc
xchg
mov
push
adc
hlt
cltd
push
in
test
mov
bound
rclb
sub
push
push
jne
test
xorb
add
jns
xor
jbe
mov
or
xor
loope
xchg
cs
repz
and
or
push
lods
addr16
adc
cltd
cwtl
lcall
hlt
jnp
mov
loopne
sub
mov
mov
mov
xchg
and
add
sarl
mov
adc
cmp
popa
outsb
rcrw
xor
inc
repz
mov
lds
push
sarl
lods
leave
leave
ds
mov
jbe
rclb
sbb
loop
adc
enter
gs
jb
punpckhwd
sub
pop
dec
mov
pop
jns
dec
loopne
clc
xor
sub
push
cmp
mov
enter
xor
mov
ret
in
pop
clc
dec
mov
mov
test
mov
fimuls
mov
in
mov
or
mov
pop
aad
xchg
or
cld
movsb
icebp
pop
mov
jo
push
imul
cmc
pop
mov
testb
pushf
aad
xchg
fisttpl
movsb
adc
icebp
iret
sahf
aas
jno
fnsave
stos
mov
xor
jnp
jae
out
sub
aaa
divb
imul
pushf
lods
xchg
xor
jmp
dec
xchg
repz
scas
inc
mov
pop
adc
lock
xorl
insb
loop
rcl
in
movl
add
or
bound
dec
adc
fcmovnu
stos
lret
arpl
dec
cmpsb
fmul
pusha
mov
mov
cmp
loopne
pop
jp
push
imul
cmpsl
loopne
int
je
idivl
je
rolb
and
ret
std
sbb
movsb
std
aad
and
and
sub
cld
test
aas
lods
mov
mov
popa
jnp
ficoms
stos
sub
push
push
cmp
int
pushf
loopne
pop
enter
lcallw
pop
aad
pushf
cmc
mov
mov
hlt
inc
lods
push
push
mov
push
or
and
dec
sbb
add
jle
mov
out
mov
jge
xor
mov
filds
int
das
mull
insl
shl
inc
popf
sbbl
sti
jmp
cmp
push
sbb
xchg
in
addr16
push
inc
mov
inc
rcrl
out
dec
sbb
mov
out
fsubrp
mov
incl
in
mov
add
pop
mov
adc
dec
cmp
cmp
mull
call
ss
aas
mov
jo
pop
movsb
je
fisttpll
lahf
shl
inc
in
int
cs
aad
and
mov
jg
xchg
add
pop
int3
or
adc
sbb
push
in
or
and
fwait
pop
lds
jle
xor
or
mov
mov
movsb
sbb
sahf
or
lret
je
sbb
fsubrp
aam
pop
inc
loop
add
jo
outsl
jb
unpcklps
jp
loope
les
arpl
xchg
inc
mov
out
movsl
cmp
jns
fmull
jle
insb
sbb
push
mov
js
pop
add
dec
xchg
add
es
and
movb
les
daa
mov
lahf
sahf
addb
sub
xorl
cwtl
and
lret
xorl
aad
popa
add
and
dec
push
push
dec
lret
push
mov
lods
push
enter
add
xchg
cli
pop
ret
and
lret
cmp
hlt
xor
mov
inc
out
fcoml
and
sti
lahf
sub
push
cmp
stc
mov
xchg
mov
mov
fisttpll
fcos
mov
sbb
xchg
or
and
shrb
test
fstpl
addl
add
xor
adc
inc
sarb
cmpsb
push
push
mov
into
or
shlb
push
inc
lahf
jp
pop
xor
sub
xchg
mov
lret
jbe
sub
push
testl
test
xchg
add
les
loopne
adc
mov
aad
call
lcall
xchg
inc
data16
dec
add
aam
cmp
and
ds
out
sbb
fld
jne
mov
push
pushf
jnp
jbe
scas
dec
addr16
cltd
xor
out
inc
mov
pop
popa
xor
lret
dec
cmpsl
pop
sbb
xor
xchg
push
push
push
out
inc
cld
aaa
mov
vmovss
dec
cltd
sbb
xor
daa
in
dec
push
push
cltd
xchg
test
dec
lret
mov
or
test
out
xchg
divl
unpckhps
jno
mov
and
pop
mov
mov
and
and
mov
mov
fiadds
je
push
pop
scas
testl
dec
repz
mov
ds
ss
dec
clc
push
jne
in
mov
test
and
test
cld
adcb
jb
jl
adc
pushf
pop
jns
add
push
adc
mov
xchg
jnp
insl
pop
cmp
fsubs
adc
hlt
push
fmuls
push
push
sub
daa
mov
cmp
clc
fiaddl
pop
ret
xchg
jl
ja
ja
out
movsb
fcompl
js
mov
insl
sub
decb
sub
mov
xchg
div
and
jbe
add
mov
jmp
push
pop
mov
mov
jne
xorb
adc
orl
or
push
andl
jne
mov
aas
ljmp
jns
xchg
or
jb
imul
mov
adc
inc
loop
push
scas
lock
out
xor
cmp
mov
cmc
ja
icebp
dec
out
push
nop
xchg
mov
ja
imul
mov
shrb
aas
leave
jp
ficoms
mov
mov
cmc
stc
push
jl
loop
dec
nop
add
mov
push
pop
sbb
je
stc
inc
and
stos
adc
out
inc
js
push
mov
in
or
mov
repnz
popf
mov
popa
inc
jno
daa
inc
ja
jb
mov
pop
mov
and
mov
inc
loop
jge
test
test
and
in
js
adc
push
shrb
out
xor
jae
mov
sub
cmp
xchg
addb
aam
iret
test
push
push
cmp
dec
jge
mov
mov
push
out
pop
outsb
cmpl
das
and
fcomip
add
xchg
sbb
ds
xchg
adc
mov
pop
adc
hlt
ror
dec
pop
das
mov
ret
arpl
mov
pop
popa
sbb
test
xchg
inc
sbb
imul
mov
das
clc
out
xor
ret
cmp
ss
jb
stos
in
pop
sbb
pop
fisubrl
mov
test
mov
fdivrl
or
jmp
adc
outsb
push
fisubs
push
cmp
in
push
movsb
aad
lret
ror
gs
ja
in
push
xchg
or
jmp
outsl
mov
jg
dec
fildll
mov
sbb
cmp
ds
sbb
push
inc
push
testl
or
pop
in
cltd
and
xchg
push
pop
sbb
mov
jb
ficoms
pop
loop
push
ja
adc
xor
pushf
inc
outsb
sub
cmp
test
push
iret
and
jae
mov
mov
xchg
mov
fcomps
sbb
dec
mov
stc
add
shll
mov
imul
jmp
mov
dec
jo
cmp
mov
shlb
dec
int
loope
into
and
and
cmp
hlt
and
out
lcall
iret
adc
cwtl
adc
pop
scas
or
xchg
jnp
sub
or
adc
out
call
aam
jmp
cwtl
push
xchg
jnp
pop
xor
xchg
stos
jmp
lods
test
sbb
mov
insl
test
jl
mov
sub
mov
outsl
movsl
push
sbb
mov
add
addr16
and
cld
push
mov
pop
leave
test
out
xchg
test
shrl
dec
jae
inc
repz
loope
mov
fnstenv
das
vdivss
xchg
ret
dec
sub
inc
bound
or
jg
dec
out
sbb
push
sarl
stos
bnd
ljmp
mov
lea
xor
xor
jp
add
dec
dec
test
aaa
pop
mov
add
mov
push
ret
les
rorl
daa
sbb
pushf
fisttpll
push
xor
mov
inc
sub
dec
xchg
add
test
pop
jl
test
lds
fldenv
addr16
ss
mov
fldl
xor
test
clc
xor
pop
gs
adc
sbb
fwait
rorb
in
icebp
jp
xchg
and
jns
iret
mov
cmpsl
xor
test
and
mov
mov
jp
lret
sub
outsb
rorb
dec
xor
ds
cmpb
mov
jg
push
and
push
loop
ss
push
push
mov
pop
ror
adc
xor
ja
jns
aaa
xchg
sub
pop
pop
stos
dec
add
xchg
pop
jae
ss
clc
je
pop
push
dec
sbb
fldl2e
addl
jle
cmp
fstpl
xchg
nop
push
cmpsl
subl
cmp
fisttps
mov
into
fcompl
dec
popl
adc
sub
pop
clc
mov
outsl
add
movsl
cmp
push
xchg
mov
and
cmp
and
and
subps
fnstcw
lret
dec
jb
xor
mov
xor
push
and
jb
pusha
gs
cmp
arpl
or
xchg
lock
push
arpl
pushf
mov
sbb
jne
sub
leave
in
xchg
in
mov
pop
out
push
xor
std
cwtl
movsb
addl
and
sbb
loopne
add
jmp
xchg
sbb
stos
mov
xor
int3
jg
xor
sub
mov
lds
movsl
mov
sahf
and
cli
xchg
divl
mov
xchg
jmp
sub
inc
mov
mov
stos
pop
call
pop
mov
add
dec
inc
jns
sub
addr16
inc
fsubrs
xor
andb
popa
fwait
bound
and
sub
testl
cltd
insb
decb
ss
jae
jge
mov
fdivl
inc
lcall
sbb
or
xchg
xor
fimuls
stos
xchg
pop
xchg
mov
sub
xor
or
and
sbb
jl
popf
ljmp
cld
int3
scas
loop
aas
test
and
cmp
cld
xchg
stc
loop
xchg
stos
mov
jns
out
stos
sbb
jmp
mov
pop
inc
nopl
or
mov
xor
loop
jl
jae
cmp
punpcklwd
int
xchg
mov
or
jl
mov
les
shll
sub
leave
or
or
scas
leave
xchg
sub
fstpl
mov
or
jp
adc
mov
sub
xchg
movsb
or
dec
xor
push
sub
sbb
pop
arpl
cmp
mov
mov
adc
ja
xchg
ds
cli
or
in
mov
rol
leave
sbb
add
xor
push
test
dec
xlat
fwait
jmp
int
mov
xchg
mov
add
in
test
lret
ss
addr16
or
aad
mov
jb
cli
mov
idivb
and
mov
out
or
mov
lock
daa
push
cmp
push
lds
xor
incl
test
jnp
lock
xchg
pop
and
mov
sahf
push
out
adc
mov
mov
xchg
fcomi
mov
push
inc
sti
mov
cli
or
xchg
pop
sbbl
mov
and
into
mov
mov
enter
push
mov
aad
inc
fucomi
movsl
jno
jnp
mov
popa
and
mov
int3
xchg
adc
je
mov
cld
mov
adc
ror
mov
inc
pop
repz
adc
nop
and
adc
daa
leave
and
mov
jmp
pushf
pop
cmpsl
popa
adc
pushf
inc
iret
mov
in
dec
hlt
fisubrl
adc
fnclex
push
mov
inc
les
imul
jns
pop
enter
add
or
mov
dec
adcb
iret
leave
fwait
add
mov
or
jbe
outsl
stos
adc
adc
jbe
add
fs
mov
sub
jle
repz
mov
call
jle
inc
testl
adc
adc
fdivrl
mov
push
jp
add
inc
inc
sbb
test
mov
cli
xor
inc
and
push
add
or
mov
fcoms
loopne
xchg
mov
add
xor
lds
push
jnp
jmp
inc
mov
shlb
inc
mov
into
mov
mov
dec
jp
inc
int
int3
fisubl
dec
js
mov
lcall
cmpsl
cmp
popa
lea
enter
inc
jge
div
fldt
cld
mov
lock
cmpsl
mov
sbb
test
pushf
stos
lock
sahf
and
rorl
jno
ret
out
lahf
aad
jg
and
ret
inc
ror
nop
jmp
aaa
jl
jae
aas
and
lods
adc
push
push
dec
imull
sbb
jno
pcmpeqw
sbb
insb
mov
in
mov
xchg
jne
and
xchg
inc
scas
lds
les
xchg
call
out
adc
mov
les
ss
sub
jge
enter
jne
push
push
push
or
shll
or
sbb
out
xchg
notb
stc
imul
inc
sbb
ret
cmc
xor
jae
ss
mov
cltd
sti
mov
or
or
push
mov
aas
mov
pop
jb
mov
sub
sbb
xlat
leave
ret
rorl
cmp
movsb
test
fsts
xchg
sub
jb
push
pop
xchg
adc
fst
sarl
adc
sarl
cmp
cmpsl
sub
push
adcl
ret
ret
loop
inc
adc
mov
jo
mov
dec
add
fstl
lds
cs
movsb
movsb
jno
aas
test
idiv
fsubrs
add
les
imul
xlat
jg
inc
gs
sbb
xchg
add
dec
icebp
js
inc
mov
fldenv
lea
addr16
push
xchg
sub
not
mulb
pop
test
mov
mov
cs
mov
std
and
xor
dec
lret
stos
jno
test
subl
lcall
mov
mov
and
xor
stc
adc
cli
cmp
pop
daa
shll
js
dec
and
in
enter
xchg
sbb
pop
xchg
add
cmp
mov
stos
mov
push
mov
imul
mov
cmp
adc
js
pop
pop
lock
loope
cmp
dec
adcl
fstl
fwait
sbb
push
out
push
fmuls
call
flds
loopne
or
adc
stos
out
aaa
repz
es
lret
inc
sbb
loope
in
rcrl
jmp
push
mov
inc
cld
mov
movsl
mov
or
sub
loopne
in
dec
addl
mov
cld
adc
mov
test
sub
jg
fidivl
fistps
mov
nop
push
shll
xchg
pusha
and
loopne
iret
adc
in
or
xchg
je
ja
cmp
out
push
mov
clc
in
mov
pop
push
add
lret
and
stos
push
push
mov
daa
push
adc
jg
shll
mov
or
outsb
inc
scas
add
lret
dec
mov
dec
nop
bound
fsubs
pop
push
mov
lahf
std
cmp
xchg
ds
add
fists
mov
es
pop
and
fsubrs
sbb
mov
cwtl
push
test
repnz
adc
xor
jno
adc
push
popa
add
push
pop
imul
andl
getsec
dec
test
lret
xchg
sbb
push
fistpll
mov
in
jp
mov
add
xor
mov
stos
jb
call
mov
adc
or
jnp
xchg
fs
xchg
push
xchg
stos
jne
mov
adc
or
mov
repnz
mov
add
rcrl
bound
xor
fldt
xor
mov
add
pop
js
aas
insl
fiadds
hlt
add
negl
add
mov
and
loopne
sahf
popa
cmp
sbb
xor
lods
pop
outsb
ret
xchg
insb
xchg
or
push
mov
sub
lret
mov
arpl
cmp
imulb
xor
sbb
jmp
cltd
pop
pop
mov
repnz
les
or
inc
or
mov
push
ss
mov
out
or
xchg
icebp
dec
shrl
cs
std
add
fstpt
addl
out
or
jl
and
stos
outsl
jp
aas
aas
fidivrl
mov
mov
cmc
jb
jmp
clc
daa
add
divb
dec
mov
pop
popa
adc
inc
aaa
subl
xor
lods
in
adc
push
pop
push
jns
pushf
ss
repz
mov
and
mov
mov
mov
sub
jns
test
pop
jmp
push
or
pop
loopne
int3
repnz
lcall
xlat
mov
xchg
pop
dec
xor
add
ds
cltd
std
es
insl
sbb
decb
cmp
dec
ficomps
adc
push
mov
fstpt
and
inc
adc
mov
fisubl
sarl
push
mov
gs
jo
inc
enter
iret
jne
mov
mov
cmp
repz
xorb
xor
mov
bound
enter
push
xor
push
test
jmp
cltd
data16
add
push
addr16
inc
mov
mov
pop
movsb
or
sbb
lea
push
or
outsb
cmp
scas
cmpsb
lcall
nop
xchg
gs
loop
cmc
shl
int
push
into
pop
insl
into
repnz
mov
loop
push
ljmp
mov
jae
and
mov
and
lret
aaa
cmpl
xchg
dec
ja
cs
jmp
pop
test
and
mov
int
xchg
bound
mov
imul
jge
pop
mov
in
jb
pop
popf
lea
push
cmp
jecxz
jmp
jns
jge
cmp
mov
stc
out
rclb
mov
adc
mov
push
add
pop
popf
scas
jno
push
and
dec
scas
jle
cmc
test
data16
pusha
rcl
or
and
cli
call
cmc
push
mov
dec
and
ds
xchg
pop
sarb
or
cmp
call
ret
in
into
mov
mov
adc
lahf
cmp
cmp
in
sbb
jne
aas
jo
int
inc
aad
xchg
or
jmp
inc
xor
test
dec
pop
lods
lds
and
seto
mov
xlat
xchg
fmull
aam
shl
sub
push
mov
adc
andl
sub
les
sub
sbb
dec
iret
sub
hlt
shrl
lahf
cmp
lods
aaa
repz
sub
pop
mov
jnp
dec
adc
arpl
orl
scas
xor
jecxz
pop
and
xchg
sub
in
pop
aas
popa
shrl
push
lods
cmc
push
jle
xor
enter
in
outsb
and
adc
mov
or
outsl
push
fcomps
test
out
mov
jbe
stc
xchg
jo
jg
sbb
dec
jmp
rol
sub
jg
movsb
adc
mov
les
outsb
cltd
xchg
push
sbb
pushl
mov
push
adc
xor
pop
lods
pushl
xchg
rclb
jle
pop
mov
pop
sub
push
and
shll
roll
cmp
fwait
outsb
cmp
mov
jns
xor
xchg
xchg
inc
test
jo
mov
and
push
aam
stos
lods
rol
sbb
xchg
in
stos
lahf
cmp
rorb
daa
cld
dec
cwtl
xchg
xchg
xlat
and
push
das
jb
cmp
sbb
mov
ret
xchg
xchg
js
mov
lcall
inc
sub
push
cs
xchg
sbb
dec
in
mov
lret
sbb
cmp
pop
xchg
test
leave
and
sub
or
xchg
mov
push
ss
clc
outsl
test
pusha
xchg
mov
add
je
addb
jge
dec
push
orl
adc
dec
ljmp
xor
fcoml
ljmp
pop
call
std
mov
mov
mov
and
xor
sub
cmpsb
ds
jmp
dec
inc
or
or
popa
mov
inc
adc
inc
jp
sub
cld
xchg
scas
fwait
ljmp
pushf
fsts
das
mov
mov
push
sbb
ljmp
sbb
mov
cmp
xor
jmp
cld
dec
dec
push
in
xchg
inc
sub
push
lea
lods
ljmp
popa
out
std
outsl
mov
repz
sbb
sub
arpl
idivl
lcall
fucom
pop
scas
and
push
add
push
inc
xor
mov
repnz
iret
insb
or
xchg
pusha
sbb
stos
test
lods
pop
cmp
ret
cmpsb
sbb
fistpll
sti
or
inc
fstps
scas
sub
push
cwtl
dec
dec
add
pop
rorb
xor
int
or
aam
sub
push
adc
pushf
dec
xor
mov
imul
mov
lea
jmp
roll
mov
sbb
aad
mov
pop
sub
iret
add
cs
in
loop
cwtl
lods
sbb
and
push
xor
or
and
sbb
sbb
inc
repz
cmc
pop
aam
and
mov
test
mov
sti
xchg
js
mov
out
mull
and
rolb
dec
dec
insl
data16
sub
fisttps
xor
or
push
pop
in
xor
jge
int3
mov
push
jnp
mov
test
ds
adc
or
scas
cwtl
sbbl
shll
gs
jg
scas
add
cmpsl
ret
imul
fidivs
aas
push
or
pop
shr
incb
dec
in
push
movsb
cmp
outsl
inc
int
cmpsb
icebp
stos
enter
push
ljmp
lds
test
mov
xchg
adc
inc
fwait
add
out
lret
ds
push
cmp
loopne
jle
cmp
and
sub
sbb
leave
outsb
jp
cltd
sbb
icebp
pop
leave
jge
icebp
lds
and
mov
add
ret
repnz
push
nop
mov
pop
lds
jne
pop
aam
aaa
or
xchg
jle
and
dec
out
cmp
mov
pop
sub
mov
pop
les
add
xchg
outsl
add
dec
mov
pop
xor
fmuls
and
mov
jo
dec
xor
lods
subl
sub
das
jg
mov
in
lds
fsubr
js
jb
adc
and
inc
push
sbb
sti
jle
sub
mov
sbb
xor
adc
xor
sub
xor
les
hlt
jnp
push
push
xchg
add
fstps
mov
mov
popf
inc
roll
push
int
mov
mov
int
mov
sub
push
repnz
in
subb
aas
test
push
shll
js
in
imul
scas
mov
mov
popf
jl
scas
gs
xchg
lds
subl
pop
push
enter
push
imulb
inc
push
adc
pop
mov
xchg
cmp
jno
scas
insl
mov
cs
enter
in
cmp
leave
and
int3
gs
or
xchg
lret
sbb
mov
call
xchg
cs
push
popa
mov
pop
imul
sbb
jecxz
cltd
dec
ja
and
in
ds
xchg
jmp
stos
adc
xchg
sarl
jge
xchg
xchg
mov
and
imul
enter
mov
sar
pusha
or
ret
stos
add
js
push
inc
add
mov
mov
pop
jb
xor
in
xor
lock
or
push
dec
rcrl
lcall
mov
divl
cld
jae
pop
xor
negb
sbb
fldcw
lret
pop
lcall
mov
or
jb
mov
jl
lea
lods
stc
jb
mov
sarl
pop
pop
push
bound
cmc
mov
pop
cmp
sbb
fs
aad
inc
pop
gs
scas
dec
mov
cmp
sbb
fwait
mov
mov
sub
inc
shr
add
movsb
icebp
xchg
cmp
fs
xchg
pushf
bound
cmpsl
xchg
xchg
aaa
mov
andb
bound
ror
dec
mov
xor
sbb
jge
add
pusha
add
xchg
rorl
pop
jno
mov
mov
outsb
jne
popf
pslld
imul
ds
add
std
test
sahf
lock
int3
int3
xchg
add
mov
pop
movsb
jle
popa
mov
push
jmp
adc
inc
push
push
into
and
call
out
test
inc
mov
stos
jp
xchg
cmpsl
mov
xor
orb
push
aad
inc
and
or
mov
sbb
sub
test
sub
mov
insb
xchg
cmp
repz
pushf
mov
sbb
in
shlb
rorb
testl
push
xlat
sti
ret
call
es
push
popa
mov
pusha
xchg
and
nop
arpl
push
or
cltd
sbb
fs
sub
jl
jne
jno
push
jbe
inc
cltd
push
ds
jbe
sti
hlt
and
mov
dec
dec
sti
leave
or
cmpsb
lods
push
mov
out
in
sub
xchg
inc
jns
test
push
mov
daa
mov
scas
push
fs
mov
mov
add
movsb
xchg
int
shlb
inc
sub
pusha
xchg
jge
test
aam
lahf
dec
or
mov
pop
ljmp
jno
stc
mov
push
rcl
bound
push
mov
repz
mov
jae
sbbb
addr16
pop
mov
adc
in
add
lahf
mov
iret
scas
pop
jo
test
sahf
scas
lock
outsl
sbb
jecxz
fisubs
push
add
mov
xchg
std
lds
fs
inc
icebp
imulb
adc
sub
xchg
dec
in
dec
and
repnz
cmp
ret
scas
sbb
jbe
mov
enter
popf
sahf
scas
xchg
lret
jno
dec
in
mov
pop
in
je
lret
xor
sub
xchg
and
adc
jecxz
mov
cmp
xchg
jmp
stc
jmp
mov
adc
inc
sbb
dec
or
push
mov
ljmp
std
adc
inc
fldcw
nop
mov
daa
push
inc
idiv
leave
adc
mov
clc
mov
rcrb
lret
jo
in
pushf
iret
scas
mov
loope
push
rolb
rep
lret
sarl
xchg
xchg
jns
jl
sub
outsl
mov
push
lret
or
xchg
loope
repz
pop
xor
daa
and
pop
mov
pop
and
rcl
adc
flds
lods
pop
sbb
sbb
jg
shrb
and
mov
mulb
insb
fistpl
das
jnp
lods
ret
pop
shr
repnz
mov
mov
enter
ds
test
scas
movl
jecxz
mov
push
out
sbb
fwait
push
mov
sub
lds
push
xchg
pop
std
cli
or
inc
test
jb
jns
cmp
push
add
inc
mov
imul
movsb
push
ret
and
push
lahf
xchg
adc
lds
inc
add
out
movsb
and
loope
aaa
and
scas
sbb
pop
mov
lcall
mov
jae
push
je
arpl
mov
push
fists
pop
outsl
sbb
or
scas
lds
sbb
mov
lret
cmc
pushf
test
cmpl
pop
jbe
scas
int
mov
out
roll
adc
or
xchg
ret
pop
jae
lods
pop
fcomps
fadds
cmp
aad
lret
jb
xchg
adc
jb
ficoms
adc
adc
fsub
inc
gs
fsts
rolb
hlt
int3
cli
pop
inc
jp
jbe
jae
ret
cld
cmp
movsl
test
iret
fdivl
and
jbe
mov
push
pop
xchg
pop
dec
test
fsubrl
ds
jne
imul
inc
push
es
aas
pop
ja
filds
mov
out
jecxz
ja
bound
inc
mov
ss
iret
xor
loop
mov
pop
aad
data16
cmp
xchg
imul
mov
sbb
sbb
rolb
and
jns
sbbb
fs
nop
inc
into
mov
mov
rclb
in
mov
bnd
cmpl
xor
iret
and
shl
or
dec
xor
incb
and
or
fimull
sbb
aas
mov
push
or
out
inc
dec
pop
pushf
dec
jl
imul
push
insl
aad
leave
pop
loop
stos
scas
inc
divb
adcb
in
inc
idivb
cld
loopne
xchg
mov
and
pusha
jp
nop
cmpsb
lods
cmc
stc
int3
jp
movsl
adc
dec
mov
jne
stos
push
lcall
enter
test
sub
sbb
shl
jno
fdivrl
jge
xchg
jmp
jne
pop
sub
and
pop
xchg
test
insb
cmp
sub
mov
mov
inc
mov
icebp
pop
pop
xchg
and
xor
rorl
hlt
lods
mov
data16
out
adc
ret
mov
jnp
add
test
aam
xchg
insb
mov
and
cmp
dec
out
out
in
dec
sahf
xchg
push
ss
pop
add
rclb
mov
icebp
adc
pop
mov
mov
loopne
mov
ljmp
shll
shl
mov
mov
mov
cmp
idiv
jmp
inc
push
xor
and
and
rolb
jne
mov
pop
inc
pop
push
popf
push
mov
hlt
push
sub
cmp
dec
imul
cmc
pushl
stc
mov
jmp
jns
jnp
lret
lock
mov
stos
xlat
lret
dec
mov
sbb
push
rcrb
mov
inc
jp
int
out
rcrl
lods
lods
out
and
outsb
or
xchg
fstps
test
sub
leave
aas
dec
lds
pop
jns
cwtl
movsl
divb
adc
xchg
jle
fnsave
lea
pop
sbb
adc
pop
ret
pop
push
psubq
int
adc
lcall
jecxz
mov
push
or
imull
imul
adc
mov
add
aas
mov
pop
mov
mov
test
clc
mov
push
xchg
inc
insb
daa
jo
mov
cmp
loop
xor
cmp
enter
movsl
out
daa
fstl
shll
xor
cmpsb
out
jnp
ret
stos
push
daa
insb
pusha
sub
lods
or
mov
mov
imull
mov
popa
push
xlat
or
jbe
mov
data16
mov
add
imul
cmp
add
mov
lret
sub
cmp
jp
sub
mov
lock
cmpsl
data16
jb
mov
push
cmpb
sbbb
pop
adc
movsl
xor
adc
mov
inc
cmpsb
rclb
popa
lds
addb
mov
addl
push
pop
xchg
shr
aam
dec
aaa
adcb
lods
mov
arpl
stos
jecxz
sarb
mov
adc
cmp
xchg
cli
pop
scas
dec
in
lret
xchg
js
mov
sbb
push
or
mov
push
pop
push
loop
dec
add
outsl
jae
dec
mov
sub
adc
divw
xor
cli
add
or
xchg
mov
movntq
jmp
in
or
imul
jb
mov
leave
data16
je
test
mov
dec
imul
sti
dec
shl
mov
or
push
inc
push
or
js
jo
adc
es
xor
std
imulb
jp
xor
sarl
hlt
loopne
inc
adc
movsb
bound
jno
mov
jne
scas
mov
mov
cld
test
repnz
jge
jle
mov
mov
lock
adcb
and
jp
cwtl
pop
jecxz
mov
pushf
adc
out
ss
nop
nop
leave
lds
xchg
out
adc
mov
jne
mov
or
es
and
xchg
mov
cmp
iret
push
scas
fildl
mov
bound
pop
ja
jge
scas
sbb
icebp
cli
jo
push
arpl
mov
xor
roll
mov
inc
mov
jno
mov
push
mov
rclb
jp
push
pop
aad
sar
fstl
iret
in
imul
in
test
jecxz
test
cmp
dec
bts
rclb
pop
je
dec
or
dec
cmpb
mov
imul
ss
fidivrl
cmp
lret
adc
mov
push
mov
push
jecxz
fisubrs
adc
dec
pop
xchg
aam
inc
negb
icebp
mov
xchg
dec
add
pusha
lods
mov
sub
xchg
and
pop
inc
std
cmpsb
arpl
sbb
adc
movb
pushf
or
inc
and
test
xchg
int3
insb
enter
adc
fiadds
outsl
jbe
adc
cld
test
iret
cld
cmc
add
loop
cmp
fisubrs
aad
cmpl
mov
pop
pushf
xchg
xor
call
cmp
rclb
xchg
sub
jecxz
or
inc
mov
push
jae
dec
imul
jp
lods
dec
aas
push
jp
push
ret
dec
pop
fidivl
roll
dec
mov
mov
aaa
adc
nop
popf
in
add
add
push
and
jge
inc
orb
mov
lock
notb
push
ds
push
pusha
cmp
adc
xchg
mov
or
rolb
mov
fisttpl
add
xchg
fisubrl
nop
push
mull
mov
sub
jl
or
pop
adc
fcomp
push
jmp
sub
jg
adc
popf
mov
popa
mov
mov
adc
pop
roll
daa
push
mov
mov
push
movsb
cs
mov
and
cmp
std
test
push
and
int3
mov
jno
inc
pop
fdivrp
mov
fwait
popf
or
in
pop
cmp
inc
jmp
mov
push
cmp
xor
enter
mov
and
push
int
mov
pop
and
mov
xchg
adc
outsb
xchg
cltd
adc
aaa
xchg
insb
or
and
inc
jne
fldl
add
testb
aaa
stc
xchg
push
mov
push
dec
and
test
mov
add
push
pusha
mov
cmp
flds
cs
lds
shlb
repnz
jg
sbb
loop
jg,pn
or
test
add
mov
out
or
hlt
add
xor
fsqrt
push
pop
jle
add
in
xor
lcall
aad
pop
and
sti
gs
std
sbb
andb
add
jae
pop
out
test
out
mov
addr16
scas
jmp
mov
mov
push
push
js
mov
das
xor
sbb
scas
fdivrs
scas
ret
inc
fidivrs
js
add
fdivrs
jno
cmp
push
or
add
push
sub
cmp
bound
jmp
sub
nop
andb
or
jbe
rcr
negl
nop
shlb
sub
lods
gs
xor
dec
shll
loop
cwtl
shlb
push
dec
int
scas
pop
dec
push
or
xor
and
xlat
mov
push
inc
and
inc
xchg
inc
loope
mov
jno
mov
sti
pop
mov
sub
adc
int3
and
adc
dec
xlat
jg
inc
mov
test
ja
push
jp
test
arpl
lcall
cmp
push
lret
add
test
scas
sarb
jge
or
xor
out
pop
add
lret
or
mulb
xchg
lcall
mov
insl
mov
cmp
xchg
mov
fisubrl
pop
cmp
aad
cmp
in
pop
iret
sbb
pop
add
push
imul
mov
xor
and
mov
incb
xchg
xorb
in
cmp
mov
or
popf
inc
inc
push
mul
ds
add
jecxz
stc
out
sbb
movaps
mov
push
loopne
pop
imul
mov
test
dec
rcrl
lcall
jno
jne
push
outsb
pop
mov
loop
dec
imul
arpl
xor
test
popa
je
les
sub
xchg
and
bound
mov
xchg
jb
and
outsb
jne
and
cwtl
mov
adc
xchg
insb
test
xor
jecxz
fidivrl
lea
out
sahf
lock
aas
rorl
sti
cmp
ds
mov
rcl
popf
rolb
inc
dec
int3
rcrl
hlt
mov
movb
mov
insb
cmp
ss
add
dec
mov
das
jp
mov
mov
mov
mov
fistpll
adc
in
mov
pop
aaa
jp
jl
pop
or
jle
mov
stos
stos
mov
jg
sbb
aad
inc
roll
iret
mov
pop
scas
imul
mov
fcmove
test
push
mov
aad
mov
sub
mov
repnz
rcrb
mov
shll
or
ror
cmp
inc
pop
mov
push
inc
insl
je
subl
pop
repnz
sub
hlt
mov
lock
leave
in
daa
add
xor
mov
or
fadds
mov
cmp
sbb
repnz
bound
lcall
es
sbb
lret
orl
ljmp
sbb
mov
push
cwtl
scas
cmp
adc
cmp
imul
adc
movsl
pop
mov
jae
inc
add
ret
mov
in
test
cmpb
jge
push
cmpsb
lods
fstl
sub
pop
popa
push
xchg
lcall
repz
xchg
lods
xchg
sbb
mov
mov
hlt
push
sti
out
int3
ja
push
stos
test
and
dec
addb
jno
mov
inc
jnp
das
cwtl
repz
pop
xchg
fisubrs
push
or
outsb
das
mov
ret
cmpsl
aas
mov
into
jp
in
stos
adc
jae
ret
and
dec
or
bound
sub
rorb
push
and
leave
pop
movl
xor
movsl
imul
or
and
lock
pop
aad
adcb
decb
xor
xor
jne
pop
filds
sub
pop
dec
xchg
sbb
dec
aas
adc
ficoms
xchg
inc
xchg
xchg
and
lcall
out
jns
inc
dec
ss
adc
in
lods
shlb
xor
fsts
or
test
mov
dec
push
ficoml
aad
jle
popf
popf
sbbb
pop
js
jmp
iret
jae
xor
mov
push
cmpsb
cmc
jl
stos
es
stc
adc
aam
sti
push
adc
or
cmp
push
mov
fs
or
orb
andl
jle
mov
xchg
mov
pop
sahf
add
movsl
or
pusha
pop
or
push
adc
inc
pop
mov
ds
stos
mov
add
shll
rcrb
sub
imul
xchg
adc
or
stc
add
mov
xor
mov
sub
pushf
mov
ss
xchg
adc
fidivrl
jo
cli
dec
and
pop
xor
scas
push
ret
inc
in
add
scas
xor
sbb
push
mov
sub
mov
std
mov
mov
jecxz
push
mov
imul
aas
dec
cld
adc
ljmp
int
mov
pop
mov
or
pusha
repnz
sbb
scas
jne
fldcw
xor
jge
mov
inc
gs
call
jle
xchg
push
xor
or
fs
nop
icebp
inc
in
jnp
lahf
and
cli
fwait
mov
push
jne
je
js
or
mov
std
pop
pop
fisttpl
jbe
stos
mov
and
dec
sbb
mov
pop
hlt
insl
out
filds
cmp
lcall
lahf
mov
mov
jno
mov
push
shlb
jecxz
nop
out
push
subl
lret
sbb
push
add
add
pop
jns
insl
jl
js
sti
xchg
xor
sbb
sti
lret
call
dec
or
out
dec
xchg
sbb
lret
inc
loope
gs
jbe
lods
mov
xchg
xchg
or
iret
into
dec
push
push
and
std
dec
aaa
jmp
mov
movb
pushl
cmp
sar
sbb
clc
adc
imul
scas
pop
sbb
lahf
fisubrs
cmp
dec
movb
roll
push
lcall
mov
imul
xor
sub
ss
dec
roll
push
sti
jnp
jp
leave
xchg
pop
and
daa
jb
aas
jmp
test
push
add
xchg
icebp
or
stc
test
sub
out
out
shrb
in
mov
xor
arpl
gs
add
out
roll
inc
add
adc
pop
mov
ds
dec
lret
jle
push
pop
xor
jmp
bound
roll
jle
ret
jns
int
outsl
jnp
std
pop
dec
pusha
loopne
jmp
mov
jp
sub
scas
insl
push
lret
fs
gs
scas
icebp
lods
adc
pop
adcl
mov
cmp
loopne
xchg
mov
mov
inc
xchg
mov
sub
inc
mov
gs
ds
test
or
es
or
xor
inc
addr16
aaa
rcrb
xor
insb
cmp
mov
fiaddl
clc
jle
nop
hlt
mov
mov
sarl
aaa
jmp
ret
cmp
mov
mov
jmp
adc
stos
arpl
ljmp
xor
mov
outsl
add
adcb
push
jmp
bound
cld
xor
les
xchg
sbb
push
test
inc
test
loope
pop
mov
push
mov
outsb
sbb
int3
push
lock
pop
mov
cmp
out
and
push
inc
lret
adc
cltd
fstpt
mov
inc
add
jae
aad
aaa
and
sub
pusha
daa
jle
dec
adc
test
leave
jo
aaa
lahf
pusha
sbb
dec
js
add
bound
int
adc
jmp
test
aad
js
xor
inc
mov
icebp
or
scas
out
inc
mov
lcall
xor
and
adc
fisttps
pavgw
call
repnz
rcrb
and
xchg
ljmp
mov
cmp
mov
ja
mov
rcrl
xchg
mov
lahf
and
inc
cld
mov
inc
int
mov
lock
xchg
xor
in
dec
stos
inc
ss
rcrl
mov
jge
xchg
lcall
pop
repnz
jb
inc
stc
int3
xorb
jg
adc
in
pusha
mov
nop
imul
adc
ret
or
and
and
mov
jno
inc
cwtl
pop
repz
pop
leave
enter
sub
sbb
sub
mov
and
push
pop
rol
mov
stos
sbb
push
js
push
mov
sbb
xlat
lds
jbe
cmp
mov
movsb
jo
pop
rol
mov
aam
mov
sbb
pop
add
jg
insb
loop
sbb
mov
and
mov
mov
das
mov
loopne
shll
adc
je
jmp
aas
mov
jmp
add
mov
in
xor
mov
mov
hlt
adc
lds
add
rep
sar
cwtl
and
xor
aam
mov
mov
call
mov
lret
fildll
dec
lods
sbb
loop
orl
mov
xchg
jnp
shrb
mov
jne
ja
test
std
xchg
movsb
push
and
int3
pop
xor
pop
xor
add
mov
leave
dec
push
dec
mov
add
fsubrs
pop
fadds
in
jo
lea
adc
ss
cmp
jno
ret
sbb
xor
cmp
std
je
or
adc
mov
sbb
fidivs
jmp
push
add
and
lods
insb
pop
aas
inc
ds
rcr
jmp
xor
jnp
jne
imul
loopne
cmp
jnp
adcb
iret
dec
pop
xlat
cmpsb
int3
push
jo
jle
add
pusha
popa
mov
mov
mov
sbbl
push
xorl
insl
mov
cmc
lods
cs
into
lock
and
out
sub
sub
xor
in
mull
movsl
stos
addr16
push
out
jmp
outsl
push
inc
adc
pop
push
repz
sub
fwait
inc
je
cmp
push
xchg
loope
push
js
insb
mov
xlat
dec
movsl
rol
pop
lret
pop
xor
and
pop
cmpsb
shrb
inc
popf
mov
jbe
add
inc
inc
call
cmp
sub
stc
das
ljmp
je
imul
test
mov
dec
test
push
frstor
les
inc
in
inc
pop
adc
inc
mov
movsb
xchg
aad
jnp
aad
sub
and
xor
adc
test
bnd
leave
add
push
test
dec
xchg
pop
dec
dec
and
int
push
xor
sbb
pushf
and
js
aaa
pop
xchg
pop
jno
movsb
or
cmc
pop
xchg
rorb
and
fcoml
and
sbb
outsb
sbb
in
push
jg
sbbb
add
push
sub
mov
lahf
loop
mov
mov
mov
sbb
push
push
inc
xchg
enter
ret
in
in
shl
outsl
cli
cmc
and
cli
les
jmp
mov
cmp
or
inc
xchg
mov
in
call
das
inc
sub
inc
popa
rcrl
movsb
pushf
xor
inc
fstpt
lret
inc
mov
cmp
jg
cltd
push
inc
push
in
in
insl
mov
dec
dec
pushf
inc
dec
lcall
cmp
jb
push
add
push
jb
test
jnp
loop
cmpsb
mov
mov
sub
xchg
pop
lcall
cmpsl
pop
pop
pop
iret
xchg
packsswb
mov
jmp
jp
sub
mov
sbb
in
jb
push
pop
in
xor
pop
fs
dec
jl
dec
dec
leave
lods
jb
cld
jl
push
cmp
add
jg
loopne
out
notl
sub
jge
pop
adc
mov
sub
jo
sbb
mov
insb
lea
xchg
lock
push
loope
cbtw
mov
dec
hlt
aas
pop
into
int3
add
shll
adc
stos
push
or
mov
sahf
inc
loope
repz
pop
dec
cmp
and
fildll
sti
jb
mov
aas
aas
dec
jo
and
sbb
test
loop
dec
mov
xchg
fyl2xp1
add
push
jbe
rcr
rcrl
test
cmp
fisttps
pop
mov
adc
push
dec
mov
pop
out
ret
sub
cmp
and
mov
sbb
dec
jl
and
jp
lret
popa
or
sarb
xor
lret
add
fnop
testl
test
pop
scas
out
outsb
adc
stos
add
mov
add
shll
sti
ret
cs
lret
push
or
leave
aad
mov
ss
rorb
add
fisttpl
jle
iret
adc
lret
and
cmpsb
sbb
push
cmp
add
add
add
pop
int3
addl
jo
std
enter
sti
lods
push
cld
pop
imul
cmp
xor
cmpb
or
sub
adc
cs
push
jno
inc
push
outsl
roll
sbb
das
out
add
test
push
popf
out
fsubr
xor
sbb
mov
pusha
sbb
shrl
loop
sub
or
cmp
cltd
lret
mov
mov
lods
sbb
pop
nop
or
cmp
addr16
fdivrl
sub
fwait
popf
jg
inc
ret
push
push
loopne
inc
jg
xor
mov
lods
add
mov
jmp
or
and
sti
icebp
lea
and
negl
fcompl
loopne
inc
aam
pop
mov
xchg
jge
fadd
cmpsb
cmp
add
mov
dec
mov
push
jle
mov
adc
jecxz,pt
inc
inc
fcoms
leave
inc
cmp
push
mov
lret
sarl
out
into
cmpb
or
jns
push
cmpb
fsub
adc
cltd
movsl
xchg
mov
jl
inc
jne
cmc
mov
mov
inc
push
sub
and
dec
or
and
add
clc
roll
sub
sbb
inc
aam
cmp
rolb
lahf
push
loop
stc
push
adc
lock
sub
or
lea
pop
sub
fcoml
loope
adcl
daa
adc
aam
loope
inc
ficompl
push
inc
xchg
cmpsb
test
enter
mov
lret
jae
ja
push
mov
js
sbb
or
jecxz
adc
xor
jmp
sub
mov
adc
inc
adc
popa
jbe
insb
pop
jnp
bound
ret
mov
pop
mov
mov
pop
cmp
dec
push
out
cmp
mov
add
inc
pop
rclb
clc
fwait
mov
leave
sub
ret
sahf
mov
cmp
push
test
push
jg
xchg
inc
or
push
push
sub
test
in
imul
xor
frstor
inc
lea
ljmp
push
lods
pop
imul
pop
push
leave
mov
es
das
repnz
sbb
lahf
dec
pop
xorl
xor
popa
mov
arpl
mov
jnp
jl
pop
mov
sahf
arpl
sahf
js
inc
int
pop
fiaddl
mov
sub
pushf
mov
mov
dec
fsubp
xor
sub
addr16
rclb
popa
sub
jo
rorb
pop
xchg
mov
shlb
and
mov
add
insl
push
cs
jl
cmp
xor
adc
and
fnstsw
fstl
nop
and
lahf
fs
mov
sub
testl
lret
insb
aas
pushl
sbb
out
imul
pop
push
jbe
lea
dec
stos
mov
gs
adcb
and
ss
aaa
xor
sbb
cltd
xor
inc
rorl
add
dec
jmp
add
cmp
out
pop
adc
out
std
inc
movsb
push
mov
xor
aad
dec
lcall
mov
cmp
push
xchg
dec
lcall
push
or
shlb
or
mov
adc
test
shlb
into
push
push
xchg
icebp
mov
add
scas
in
mov
ja
cmpsb
sub
xchg
daa
and
push
inc
repz
sub
ds
mov
gs
pop
inc
lock
xchg
mov
mov
cmp
adc
add
fisubs
dec
pop
inc
mov
out
cmp
cld
hlt
out
pop
adc
in
mov
fsubl
xchg
loopne
jo
push
int3
std
das
inc
lea
jg
mov
mov
jmp
and
pop
add
scas
and
fs
mov
andl
or
test
lret
mov
push
ret
push
popf
into
sahf
mov
cs
out
scas
xor
dec
ljmp
pop
push
cmp
es
cmp
cld
std
repz
push
loopne
add
or
inc
sti
mov
repnz
dec
cmc
repz
sarb
sbb
cmp
jbe
fidivrs
xor
dec
sbb
shl
loope
mov
lcall
sub
icebp
xor
js
mov
xor
movsl
push
pop
inc
dec
inc
jb,pt
mov
mov
xchg
sahf
xor
sbb
mov
mov
mov
mov
rorb
push
mov
or
stos
push
push
cmpsb
cmc
cmp
inc
and
loope
cmp
and
push
jl
repz
xor
shlb
sbb
lods
frstor
cmc
pop
jg
push
push
lock
cmpsl
cmp
pop
push
push
pushf
and
aam
jge
rorb
mov
ljmp
fs
mov
jns
mov
sarb
jmp
in
ljmp
sub
pusha
jl
out
imul
hlt
mov
lods
fsubrs
mov
fildll
cmp
sub
push
dec
push
jp
ror
adc
lret
pop
sar
mov
sti
and
fs
mov
inc
sub
sarl
and
jl
je
cmp
mov
dec
imul
push
shlb
pop
insl
add
adc
xchg
pusha
inc
cmp
xchg
or
mov
mov
mov
ja
or
pop
pop
mov
add
adc
fisubs
lock
mov
mov
cmp
or
push
inc
test
mov
mov
test
out
test
insl
lahf
cli
popf
in
and
rclb
lods
popw
pushf
jns
inc
pop
pop
and
fsubrs
sub
sbb
or
iret
leave
jo
sbb
and
xlat
movsl
stos
add
lcall
lea
gs
imull
or
insb
aam
loopne
fsub
repnz
fcoms
inc
dec
pushf
mov
call
insl
push
and
jle
test
int
mov
adc
cltd
stos
dec
cmpsb
divb
jecxz
mov
cmc
jle
inc
mov
hlt
fsubrp
bound
and
push
bound
sti
mov
inc
sub
icebp
shll
daa
push
sbb
xchg
jp
les
das
lods
xchg
mov
ret
lods
addl
push
insl
push
mov
stos
xor
enter
and
xchg
repnz
les
push
mov
shl
dec
dec
cwtl
push
movd
cltd
shrl
mov
ljmp
std
ss
hlt
mov
cmpsl
mov
repz
std
xchg
jge
add
fistpll
inc
xor
inc
jge
jb
inc
fs
aam
sub
out
iret
dec
mov
aad
and
pusha
adc
js
pop
out
loopne
fldt
mov
mov
cmp
jl
ds
mov
jge
or
jmp
cmc
sti
pop
adc
pop
xchg
and
xlat
loope
loop
loope
ja
pop
cwtl
jmp
in
aaa
sub
xchg
sbb
cli
dec
adc
inc
iret
xchg
pop
or
cmp
mov
cld
jp
ds
pushf
pop
jne
and
clc
jp
fsubl
cltd
pop
add
mov
mov
js
das
std
pop
mov
arpl
sub
mov
nop
mov
mov
mov
sar
cmpsl
int3
add
push
push
cltd
or
sub
imul
dec
and
lahf
mov
ja
cmp
dec
xor
icebp
mov
lret
scas
das
enter
fldcw
pop
into
push
cmc
cli
rolb
mov
add
add
jne
pop
std
shrl
rolb
lahf
push
sbb
jnp
cld
lods
add
popf
stc
rorb
jecxz
sbb
rcr
mov
mov
xor
fs
movsl
cmpsb
sbb
add
push
cli
jle
adc
sbb
sub
imulb
fsubl
jno
dec
jge
outsl
daa
hlt
fs
insl
fdivl
mov
pop
in
gs
repnz
push
mov
mov
push
pop
pop
or
inc
repz
or
notb
jecxz
jbe
pop
dec
mov
jp
or
add
pop
out
jae
xchg
adc
xor
mov
mov
push
loop
iret
xchg
dec
gs
lret
ds
mov
ljmp
cmpsl
punpckldq
mov
or
lret
pop
cli
jb
je
or
cli
mov
push
mov
hlt
pop
ret
rcrb
movsb
clc
shrb
fidivl
das
loopne
sub
jo
xchg
sarl
int
arpl
pop
jo
push
and
and
es
scas
and
sahf
into
xor
cmp
sbbb
lds
pop
popa
xor
add
mov
imul
or
aas
sbb
mov
xlat
pop
xchg
push
sub
lods
jae
push
out
sbb
and
lret
shrl
mov
sbb
sub
and
add
insb
pop
mov
lods
into
mov
xor
test
or
mov
push
adc
in
subb
arpl
or
mov
repnz
sarl
inc
mov
push
dec
and
cmp
push
or
jbe
mov
aas
lods
adc
lahf
xchg
xchg
mov
xchg
sub
daa
fistl
mov
loope
xchg
test
fs
mov
xor
in
pop
leave
loopne
scas
inc
cmp
call
jl,pt
pop
jge
xchg
mov
ss
dec
imul
add
mov
lahf
bound
ret
test
sbb
jl
in
popa
repnz
jne
in
mov
stc
out
clc
jp
add
icebp
cli
fldl
daa
jnp
or
push
inc
lret
push
mov
popf
enter
outsb
lods
sbb
arpl
xor
jno
and
dec
std
ds
movsb
jecxz
pinsrw
mov
sub
loopne
mov
je
movsb
insb
test
shlb
in
cld
xchg
sub
jb
push
je
push
xor
sbb
call
lods
xchg
mov
pop
push
loope
fisttpll
pop
jae
orb
or
cld
gs
pop
fs
stos
popf
mov
das
mov
pop
nop
xor
dec
clc
xchg
xor
and
lahf
and
sbb
lods
and
mov
aas
das
dec
mov
mov
cmpsl
rorl
and
movsl
cmp
hlt
popa
sbb
cmp
mov
shll
out
shr
lret
adc
out
dec
sub
push
mov
push
fwait
ret
fnsave
sbb
testb
adc
or
sar
fwait
or
mov
aas
add
fcmove
pop
sbb
add
inc
out
ret
xchg
or
fisttps
or
ffree
pushf
mov
loop
fwait
or
movb
shrl
repnz
and
pop
jns
in
ljmp
ds
cmp
enter
ss
push
pop
fcompp
xchg
adc
out
sub
in
mov
jg
clc
enter
adc
and
push
or
lea
mov
xchg
mov
mov
lahf
xor
push
jns
cmpsl
lea
inc
scas
gs
ret
mov
shll
inc
call
add
daa
adc
icebp
data16
cmp
push
addr16
lods
ljmp
or
mov
mov
jbe
rorl
insb
push
ja
es
dec
in
mov
mov
je
hlt
jns
mov
jnp
repnz
inc
push
adc
fbld
lcall
mov
xor
cmp
xor
shrl
inc
movsb
out
cmc
ljmp
jle
out
cwtl
daa
gs
adc
mov
or
cs
sub
xchg
push
jecxz
addl
dec
repz
out
lods
xchg
shlb
mov
push
aad
and
rol
pusha
or
mov
jns
fbstp
mov
orb
ljmpw
test
jbe
and
mov
and
shrb
and
les
jle
cmc
cmpl
insb
in
rcl
xchg
pop
jmp
cmp
ret
add
in
and
sbb
jecxz
lds
sbb
push
out
frstor
xor
and
cmp
xor
fucom
mov
dec
es
aaa
dec
add
ja
addl
fldcw
hlt
pop
call
xchg
or
add
pop
xor
shll
cmp
iret
pop
lods
mov
icebp
push
sbb
cmp
fcomp
xchg
mov
xor
ret
lds
xor
lret
cmp
cli
xchg
gs
std
mov
ja
inc
mov
jno
sarl
jmp
cld
cmp
sbb
sub
je
fidivrl
dec
mov
xlat
fimull
xchg
test
mov
inc
mov
aad
test
icebp
shl
mov
subb
pop
mov
rorb
lcall
cli
cmp
xchg
shll
or
arpl
adc
adc
clc
mov
popf
inc
xchg
repnz
or
push
push
jl
pushf
roll
lods
repz
cmp
stc
jne
adc
mov
jmp
repnz
mov
loopne
and
cmp
test
mov
out
mov
hlt
adc
xchg
fisttps
dec
test
jae
xchg
or
loope
cld
mov
jbe
xor
pushf
mov
dec
std
lret
out
ret
pop
push
mov
jg
or
mov
adc
lods
mov
fs
jb
mov
mov
add
rol
out
push
shll
and
push
imull
lds
cmp
push
adc
push
xchg
ret
cld
sub
fadd
xor
aam
ds
mov
out
lods
sbb
int
scas
test
pop
das
mov
jbe
rcrl
adc
xor
mov
mov
cld
pop
aaa
cmp
mov
lock
sbb
lds
adc
push
or
sbb
and
xchg
dec
divb
adc
sbb
imul
mov
mov
xchg
inc
loope
imul
lret
jp
mov
sub
push
mov
sbb
sub
test
popf
push
xchg
testl
iret
js
inc
daa
cmp
dec
xchg
insb
pop
cwtl
test
es
sbbb
imul
enter
cmc
push
fstpt
fimuls
jge
adc
lcall
mov
repnz
jle
inc
test
roll
cld
inc
cmp
cmp
insb
xor
mov
jns
inc
rol
out
dec
push
pop
cld
rcll
inc
mov
aaa
xor
pop
leave
cmpsl
sbbl
jnp
adc
mov
loopne
fstpl
outsb
leave
xchg
mov
xor
mov
push
call
frstor
imul
sbb
mov
add
call
dec
ret
xchg
rep
mov
fisubl
out
lret
mov
daa
movsb
mov
cmpsl
xorl
in
xchg
rep
push
fcomps
pop
xchg
push
push
and
ficomps
jnp
sar
mov
aaa
add
jl
aas
cmp
out
std
adc
pop
mov
lea
dec
aad
xor
call
jge
jle
pop
int3
and
jmp
loope
pop
sub
leave
cmc
jo
or
or
aaa
xchg
shlb
adc
test
lods
scas
inc
sahf
loopne
loope
out
stc
mov
jbe
icebp
mov
xor
jmp
push
lret
sbb
cmc
dec
aad
mov
es
jo
push
test
jmp
add
push
xchg
mov
lods
jle
fdivr
push
push
fisubl
ja
cmpsl
jns
adcl
into
cmp
mov
repz
inc
daa
and
les
sbb
popa
rcl
bound
or
mov
and
cmc
and
in
popa
scas
mov
mov
push
adc
sub
lcall
cli
inc
outsb
shl
xor
enter
mov
repz
xchg
push
mov
stos
movsl
subb
cwtl
sbb
xor
mov
scas
adc
pop
xchg
pusha
push
dec
cmp
inc
test
xor
pop
adc
lods
fldt
add
sti
loop
movsb
lret
push
mov
or
xor
push
shrd
sub
rclb
movsl
push
scas
xchg
cmp
fimull
aad
mov
mov
mov
xor
or
and
scas
repnz
mov
push
pop
lock
repnz
xor
cli
jns
aad
in
cmp
or
ds
sbb
insl
jg
cmpsb
flds
inc
call
sub
aas
add
sarl
aad
push
sub
fcmovnbe
mov
jl
mov
add
out
negl
das
mov
movsl
jp
or
or
jnp
and
leave
lcall
cmpsb
dec
leave
pop
jno
dec
ja
push
sub
fists
out
xchg
popf
mov
adc
rcll
dec
adc
in
inc
test
mov
fists
imul
pop
test
push
fdivrl
in
je
fs
test
cmp
int
fldl
stos
call
xchg
jo
out
fsts
add
jns
jns
dec
mov
xchg
and
jmp
push
insl
cmp
sbb
mov
adc
pop
mov
lock
pop
into
mov
mov
add
in
mov
fsubl
pop
ret
inc
mov
cmp
sub
les
icebp
mov
imul
xchg
sbb
and
push
pop
imul
mov
pop
or
dec
inc
pusha
sbbl
into
stos
jne
cmp
and
jno
mov
jmp
les
xor
icebp
jg
test
loopne
cmp
cmpsl
and
xor
lock
mov
cltd
jl
sub
pop
test
mov
stc
repnz
cmpsb
test
xorps
jbe
ljmp
dec
outsl
in
imul
or
jmp
xor
xchg
jb
jb
outsl
mov
add
and
or
or
test
test
fiaddl
scas
arpl
scas
outsb
sbb
loope
out
cmc
cltd
insb
and
into
cmc
push
push
lcall
and
inc
popa
mov
inc
ja
and
xchg
push
je
fcmovbe
push
cmpsl
iret
dec
lock
in
data16
in
mov
inc
or
or
add
push
insl
mov
xchg
push
xchg
xchg
pop
mov
frstor
or
call
adc
sbb
lea
dec
popl
sub
popf
rcrl
scas
sbbb
jae
or
scas
dec
cli
ss
and
mov
push
imul
mov
jae
test
dec
cmp
clc
dec
js
mov
divl
lock
xor
ret
cwtl
andb
push
adc
sub
xorb
xchg
mov
sbb
mov
push
push
sub
test
xchg
inc
mull
leave
push
or
imull
addl
out
popa
inc
adc
cmp
cmp
push
clc
flds
es
and
sti
sub
xorb
sbb
sub
push
imul
fwait
push
ljmp
jne
test
push
or
sub
gs
shll
xor
adc
fstps
sbb
mov
and
or
sub
pusha
movsb
inc
pop
cmc
arpl
sahf
jne
jp
out
or
filds
loop
outsl
jns
push
arpl
nop
or
das
xchg
fwait
xor
adc
into
mov
pop
mov
in
fs
push
rorb
jbe
fld
mov
mov
and
popa
push
xor
cmp
mov
orl
mov
dec
mov
shrb
mov
xor
outsl
add
xor
fldpi
push
int
cs
pop
cmpsb
sub
jno
outsl
add
test
fimuls
xor
mov
dec
bound
je
or
jno
fwait
cli
xchg
dec
xchg
xchg
sub
ss
inc
sub
int
push
cmp
out
xchg
cmp
push
dec
push
sbb
mov
and
dec
or
mov
pop
push
jge
jmp
rclb
mov
aam
adc
leave
sbb
sub
loopne
pop
jo
popf
add
adcb
nop
cmpsb
pop
add
test
roll
icebp
pop
into
loop
and
cmpsl
aad
insb
dec
push
sub
mov
pop
imul
mov
mov
xchg
mov
push
mov
push
stc
pop
subl
into
daa
jns
cwtl
push
and
pop
sub
out
xor
sbb
xor
jnp
inc
xor
mov
mov
or
mov
mov
lods
xor
jecxz
sbb
mov
push
mov
sbb
mov
enter
popf
xor
scas
nop
xchg
loopne
dec
cmp
cmp
xchg
sub
cwtl
lret
adc
pushf
popf
loope
xchg
sub
jg
mov
lods
movsl
lahf
adc
cwtl
js
icebp
sub
xchg
fstps
dec
xchg
enter
nop
dec
in
pop
mov
and
call
xor
or
mov
lea
jbe
inc
cmc
adc
xchg
aas
cmpsb
add
repz
mov
in
push
dec
add
pop
dec
dec
or
je
add
jnp
aam
stos
add
inc
lds
test
push
adc
les
push
ficompl
pusha
mov
jmp
inc
fnstsw
test
bound
xchg
add
fs
jge
push
dec
adc
xchg
les
pop
sub
inc
aam
xor
pop
pop
arpl
xchg
add
jbe
mov
mov
cmp
cmc
fsubl
sub
mov
or
shrl
add
dec
mov
pusha
push
incb
push
mov
lds
imul
dec
adc
add
loopne
push
repz
xchg
mov
pusha
fs
xchg
sub
sahf
rorl
das
test
xchg
les
rolb
imul
and
je
loopne
pop
push
cmp
pop
sbb
ja
ljmp
add
xchg
clc
adc
ja
cwtl
sbb
add
fbstp
test
sub
aaa
sbb
int3
js
inc
cmp
in
mov
inc
outsl
idivb
int3
into
sub
adc
cmpsb
push
loopne
push
cmp
pop
pop
push
push
xchg
imul
into
imul
rolb
mov
pop
and
adc
jg
imul
push
outsl
jb
out
add
push
mov
xor
in
insl
or
mov
pop
cwtl
fcmovne
out
cmp
jnp
push
repnz
mov
enter
dec
mov
bnd
or
push
loopne
push
call
pop
cli
cltd
outsb
sub
xchg
repz
cmp
loop
jp
mov
jmp
inc
loope
loop
push
push
test
out
rcr
stos
gs
or
fucomip
xchg
out
sub
testl
mov
popa
rcll
lods
or
lods
sbb
nop
add
icebp
mov
scas
arpl
mov
adc
aad
xchg
scas
in
xor
or
popa
cwtl
mov
ds
pop
dec
daa
push
stc
add
leave
push
jo
xchg
adc
fisttpl
inc
dec
daa
adc
js
packsswb
lock
out
lret
arpl
add
jmp
xchg
in
cmpsb
aas
cmpsb
cmp
and
lcall
inc
add
xchg
or
out
inc
sub
sub
sub
out
xchg
aas
mov
sbb
outsb
hlt
adc
sti
mov
inc
xchg
dec
test
and
pop
jg
fdivs
lahf
out
push
clc
in
shrl
mov
fbld
jns
arpl
push
xchg
xchg
sahf
lahf
pushf
dec
jle
cmpsb
ds
sbb
mov
aaa
add
nop
loope
les
mov
xor
popf
sbb
mov
mull
xchg
adc
adc
xchg
inc
add
xor
jns
cmpsl
mov
push
addb
sub
mov
jnp
cmpsb
call
sub
dec
andl
dec
jae
and
pushf
popa
bound
mov
cmpsl
pusha
mov
add
js
jnp
xchg
sbb
sub
std
dec
xchg
cmpsb
test
loopne
mov
add
shlb
xchg
mov
sub
shll
stos
stc
cs
jmp
push
jecxz
test
mov
inc
shrb
mov
push
dec
mov
xor
das
scas
in
enter
out
and
dec
mov
xor
cmp
mov
pop
out
loopne
pop
insb
les
out
sub
pushf
mov
cmpsb
jb
out
out
xor
pop
lods
hlt
fmuls
mov
or
push
mov
pop
dec
inc
and
mov
or
popa
mov
enter
sahf
xchg
jg
dec
mov
and
cmp
roll
adc
js
in
popa
jne
loope
adc
leave
call
sub
adc
mov
das
sub
mov
adc
ljmp
ds
leave
sbb
adc
dec
xchg
mov
jmp
fidivrl
jae
nop
cmp
imul
lods
andps
lds
test
sbb
data16
jl
or
xor
cmpsl
popa
rolb
sbb
das
jg
jl
arpl
push
mov
inc
je
icebp
inc
imul
fbld
movsl
jb
jecxz
inc
mov
cmp
jbe
leave
sub
fs
and
pop
sub
push
dec
idivb
xchg
scas
and
fmuls
test
out
xor
push
cmp
and
fmuls
jb
jle
and
cmp
je
or
mov
jg
in
loopne
xchg
pushf
aaa
add
lds
loopne
outsl
movsl
jmp
mov
jl
mov
cmc
xor
jle
jns
adc
cmp
test
sub
lahf
cmp
rcr
and
int
inc
loopne
in
stc
stc
mov
push
scas
sahf
insl
mov
xor
mov
mov
test
or
daa
mov
fwait
xor
jne
adc
sub
or
mov
mov
sub
xchg
fcoms
clc
lahf
sbb
pusha
ss
cmpsb
jno
sbb
sbb
setle
div
mov
inc
push
jno
add
and
or
xchg
push
pop
or
xchg
into
mov
repz
incl
pop
sbb
call
fcoml
sub
lods
jle
pop
stc
hlt
nop
mov
cmpsl
cld
ret
ror
pop
xor
mov
xchg
dec
in
lret
mov
repnz
cld
lahf
add
insl
xchg
mov
shrl
mov
popf
xchg
push
xchg
nop
mov
jmp
enter
mov
cld
cmp
movl
mov
iret
jns
hlt
pusha
lahf
inc
gs
pop
in
push
inc
inc
dec
lcall
pusha
and
dec
lcall
xlat
rorb
mov
ljmp
bound
in
dec
mov
outsl
insb
sbb
fisttpll
shlb
stos
mov
fimuls
adc
scas
mov
adc
mov
subl
lds
fldcw
ds
inc
cmp
xor
and
push
dec
dec
pop
sbb
jns
leave
lock
push
or
stos
sti
aad
and
jl
adcb
pop
or
cmp
sahf
inc
cmpsl
cmp
fsubr
inc
inc
in
push
out
dec
add
mov
add
mov
mov
lods
jge
or
mov
inc
sbb
inc
xchg
je
sub
xchg
pop
inc
movsl
inc
loop
in
cld
or
inc
subl
or
test
mov
and
ret
stos
jb
mov
xchg
push
fwait
cmc
shlb
int3
mov
aas
inc
gs
cwtl
outsb
push
aas
negl
cmpsl
rclb
add
jl
inc
jb
mov
lock
in
stos
adc
insb
inc
int3
dec
jb
or
add
aas
mov
btr
pop
inc
nop
gs
and
popf
mov
pop
enter
loop
add
xor
push
rolb
scas
cmpsl
mov
mov
cwtl
int
lret
arpl
mov
pop
shlb
pop
dec
pop
cmp
fwait
iret
or
popf
mov
cld
ljmp
or
adc
sub
rcll
cltd
xorl
out
jg
jae
xchg
jecxz
xor
insb
jne
fnstcw
add
clc
cld
fiadds
cmpsl
ret
mov
mov
xchg
bnd
add
int
pusha
sub
lds
sar
ret
imul
push
pop
xorb
insb
cs
dec
jae
lret
pop
cmpsl
xor
pop
jbe
sti
andb
out
mov
divl
mov
xor
xor
mov
cltd
push
mov
call
sbb
mov
fcomi
xor
mov
lds
sbb
addr16
mov
je
and
in
ja
mov
mov
shrl
rorb
arpl
mov
rcl
push
js
jecxz
sub
mov
sub
xor
jge
inc
rorb
addl
jmp
add
jb
bswap
push
rorb
or
gs
jp
imul
jb
arpl
dec
les
fists
fldenv
or
dec
jo
xchg
xorl
lret
push
pop
bound
fwait
gs
mov
sub
dec
repz
pop
pop
enter
rclb
test
sbb
and
mov
push
lahf
adc
adc
mov
cmp
movsl
in
std
cmp
movb
inc
cld
mov
addb
ret
fwait
sub
scas
jge
sarb
std
cmp
mov
fwait
pop
adc
add
push
lea
add
loope
pop
popf
cmp
sub
jg
out
push
or
xor
daa
push
push
int3
leave
stc
or
or
jae
mov
stos
popf
cmp
outsb
inc
sub
sub
in
and
movl
xchg
ret
mov
cltd
ficoml
xchg
sbb
xor
sub
stos
xor
repz
mov
mov
or
pop
lret
aam
les
outsl
and
out
and
js
jbe
comiss
pushf
les
out
sbb
ror
test
and
mov
les
jns
js
icebp
cli
sti
in
pop
roll
mov
test
out
sub
ret
int
ficoml
jns
stos
and
mov
pop
sbb
dec
push
stos
shl
aaa
dec
push
fistps
mov
mov
push
or
mov
test
shrl
hlt
imul
iret
lret
mov
mov
je
std
loopne
xchg
insl
fldt
and
scas
out
aaa
pushf
in
cmc
cli
xor
aas
inc
fisubs
push
sub
push
push
rclb
or
push
or
js
inc
mov
das
mov
jg
and
add
pop
pop
dec
lret
imul
add
add
mov
hlt
mov
xor
or
pop
cld
in
or
mov
cmp
sub
xchg
add
imul
or
sub
lcall
dec
imull
mov
jp
sbb
pop
enter
inc
movsb
pop
cmpsb
into
sti
rcr
int3
xchg
inc
in
inc
rcl
mov
arpl
sub
sub
mov
fistl
mov
inc
in
cli
inc
mov
sub
in
in
push
inc
sbb
fwait
dec
mov
jl
popa
sub
ss
xor
inc
ret
push
and
sub
in
aas
mov
or
or
js
mov
arpl
out
xor
fimull
xchg
mov
adc
mov
pop
movsl
and
pop
mov
or
out
out
call
mov
cmpsl
sub
in
sbb
xchg
aaa
repz
lret
and
divl
ret
pop
xor
adc
adc
mov
scas
int
push
mov
cs
sub
int3
cmp
inc
repnz
sbb
and
sahf
sub
mov
push
faddl
or
pop
cmp
imul
shrl
hlt
pop
cld
push
push
pop
jo
jmp
pop
pop
out
push
jbe
push
cmp
das
pop
stos
jo
cmp
test
pop
mov
in
or
or
sti
in
aas
jbe
sub
stos
xchg
shrl
mul
mov
fsub
pop
push
ret
ja
xchg
mov
ljmp
xor
mov
jno
mov
in
js
andb
stc
fs
pop
stos
aad
mov
outsb
jae
in
in
popf
sbb
add
std
lods
arpl
jae
mov
in
mov
mov
repnz
sahf
xchg
mov
lds
rolb
mov
jp
mov
lds
xchg
cmp
mov
enter
inc
xorl
jle
mov
xchg
imul
scas
mov
jmp
push
inc
add
aad
jo
inc
lea
inc
jns
cmpsl
xchg
and
inc
cmpsl
lahf
inc
into
das
sub
stc
shlb
pop
je
insl
sub
push
pop
imul
stc
or
push
cs
mov
jl
sti
and
bound
ret
push
movsl
push
jbe
ljmp
in
mov
dec
pop
push
rcll
xor
mov
mov
pop
fmul
dec
jmp
pop
adc
push
ja
pop
pop
inc
rorb
sub
mov
mov
bound
xchg
push
push
dec
jae
sahf
push
testb
and
cmp
mov
push
insl
test
rcr
fstl
popf
adc
sbb
nop
add
jl
pop
je
test
in
sbb
push
orl
mov
fucom
jmp
and
fldt
mov
xor
or
add
mov
pop
jnp
dec
stos
inc
push
dec
incb
enter
cmp
dec
aaa
sbb
in
or
and
jmp
cwtl
loopne
rcll
cmc
dec
call
cmpb
les
push
ret
cli
push
jo
jle
and
and
test
xchg
cmp
stos
mov
cld
iret
mov
or
push
or
push
sbb
iret
sub
pop
bndldx
daa
aad
pop
rcll
ficompl
xlat
icebp
js
pop
dec
push
inc
xchg
dec
xchg
cltd
ss
push
add
and
imul
and
sti
das
or
iret
aaa
es
fcmovu
movsl
mov
int3
out
lahf
adc
cmp
mov
adcl
and
push
mov
mov
daa
pop
cmpsl
sbb
and
in
imul
das
push
ficomps
imul
into
inc
xchg
mov
pop
lods
jo
fcmovnu
in
add
rclb
inc
sbb
xchg
jmp
shll
das
cld
cmpsb
ss
jnp
insl
mov
adc
stc
popa
js
stos
pop
pop
enter
push
mov
xor
adc
jne
push
repz
lea
sub
push
cmc
jae
je
out
push
or
adc
sub
xchg
pop
test
popf
lahf
jbe
stc
mov
loope
mov
mov
jns
jmp
mov
out
vmovupd
jae
mov
xchg
ds
add
outsl
mov
cmp
pop
adc
ljmp
gs
dec
ja
sbb
push
icebp
dec
push
inc
test
xchg
mov
out
and
push
mov
sub
test
dec
fnstsw
mov
jecxz
pop
cli
fisubrs
jecxz
mov
push
xchg
add
call
in
dec
lds
dec
mov
pop
dec
icebp
int
mov
inc
sub
jmp
pop
std
stos
aad
lahf
es
adc
mov
inc
dec
sub
jne
adc
pop
fbld
xchg
lea
inc
cmpl
dec
xorl
cmp
pop
push
add
push
test
jl
or
cmp
jg
xchg
and
test
mov
inc
rcrb
add
out
cmp
lahf
scas
xchg
jns
pop
fldenv
mov
cltd
lods
jmp
in
aas
jl
cmp
sub
pop
movsb
pop
lods
and
movsl
cmp
cltd
pop
cmp
ret
call
negb
and
cmpsl
sub
les
and
push
out
jle
lahf
movsb
cmpl
or
ficoml
scas
mov
cmp
subb
addb
stos
scas
fbstp
movl
popa
push
mov
adc
xlat
test
jl
mov
fidivs
mov
hlt
in
sbb
cmovbe
imul
lods
xchg
fwait
orb
outsb
mov
lock
lods
pop
pushf
jecxz
aad
dec
mov
sub
je
and
inc
test
push
inc
and
lret
les
pusha
shr
leave
lea
adc
loop
ss
xor
mov
adcl
mov
wbinvd
addr16
jmp
xchg
repnz
pusha
sbb
sbb
repz
pop
out
sti
or
jae
cld
rorl
sub
mov
xchg
stc
mov
inc
out
lods
aad
rorl
icebp
sbb
lahf
xor
add
or
mov
in
insb
incb
jae
nop
out
mov
repz
out
push
out
dec
inc
or
hlt
repnz
jl
pop
das
jnp
ret
or
inc
jnp
or
shr
cli
loope
push
pushf
sbb
mov
loopne
sub
adc
fdivrs
and
mov
ja
sub
jle
les
test
add
lods
lods
inc
lds
jg
pop
xchg
pusha
loope
mov
scas
push
arpl
mov
or
mulb
xchg
rcrb
push
enter
and
clc
insl
xchg
popa
jnp
mov
cmp
in
ljmp
rcrl
sbb
pop
xor
pop
pop
gs
int3
ljmp
je
xlat
dec
mov
jle
jae
or
or
mov
popf
jae
adc
arpl
xor
mov
dec
ret
push
and
fs
out
cltd
aam
dec
cwtl
in
cmc
xchg
fisubs
or
xor
sti
and
xor
gs
dec
leave
inc
dec
adc
ja
stos
scas
cmp
pop
inc
jg
call
sub
lea
into
mov
call
cmp
or
sahf
fwait
cmc
fadds
pop
and
and
cwtl
call
call
data16
push
push
imul
fldt
sbb
cmp
scas
jae
pop
xor
push
adc
mov
and
dec
outsl
dec
lea
pop
inc
cmp
scas
subb
aaa
lcall
scas
notb
inc
notl
sub
ss
cltd
cmp
and
cmpsl
add
std
aaa
arpl
rolb
add
xlat
mov
jb
add
pop
adc
cmp
jne
lock
int
push
lahf
mov
shl
fistpl
dec
stos
call
rolb
shll
xchg
fwait
jp
fidivl
push
xchg
pop
repz
mov
pop
dec
add
sahf
es
lcall
cs
add
fmull
jo
mov
or
mov
rcll
sbb
mov
and
loope
into
movsl
loope
ljmp
mov
pop
push
mov
mov
es
mov
ljmp
jle
sbb
dec
lret
out
cwtl
xor
xor
cmpxchg
adc
shl
ljmp
arpl
hlt
or
xlat
ret
jbe
mov
mov
out
xor
hlt
add
leave
dec
and
inc
stos
jg
call
icebp
adc
leave
pop
loope
enter
mov
dec
cmp
daa
mov
je
ficoms
cmp
xor
repnz
inc
push
mov
xchg
add
sahf
les
cmpsb
lret
mov
jnp
mov
into
cli
adc
xor
repz
ja
std
pop
xor
cmpsl
push
dec
add
cld
adc
inc
mov
adc
std
sarb
add
cltd
lds
cli
pop
xchg
fmuls
lret
cmp
insl
lds
hlt
ja,pt
push
les
cmp
shrl
loope
dec
and
stc
or
lea
push
cmp
data16
fsubrl
fisubrs
mov
mov
sbb
dec
iret
clc
mov
les
add
ja
lret
and
sub
or
popa
push
je
popf
inc
imul
jnp
int3
pop
out
pop
jle
in
pop
dec
shll
sbb
sub
cmp
mov
xor
ss
sbb
mov
scas
sub
inc
fs
pop
imul
cmp
add
pop
mov
outsl
out
inc
and
push
xor
out
xchg
pop
ljmp
faddl
repnz
repnz
fcoms
cmpl
add
movsb
je
push
outsb
je
sarb
or
mov
or
or
sbbw
fidivrs
scas
lret
roll
stos
imull
mov
mov
lods
xchg
pop
push
xlat
sub
out
in
mov
jne,pn
dec
aaa
sbbb
fmul
adc
dec
jns
test
arpl
out
jle
add
mov
movsb
or
pushf
sub
aaa
sbb
push
cmp
and
dec
cmp
inc
jbe
pushf
jne
xchg
inc
mov
leave
xchg
mov
cmp
cvtpi2ps
push
pushf
inc
into
fwait
or
int3
call
xchg
xor
sbb
xchg
mov
and
or
mov
pop
add
cmp
mov
scas
xchg
fsub
jge
cmc
adc
ds
ficoml
std
or
ret
push
mov
ja
sbb
fldl
xchg
mov
or
out
jp
push
mov
sbb
push
or
popa
pop
add
mov
loope
mov
test
call
ljmp
add
js
inc
jp
mov
mov
scas
inc
sub
xchg
adc
lea
sub
push
scas
pop
test
int
mov
daa
daa
mov
sbb
sbb
pop
sbb
pop
mov
mov
lea
rorl
insl
adc
mov
jp
mov
pop
ja
popf
push
out
cli
lea
enter
dec
jb
push
sti
push
push
fs
xchg
sub
test
inc
mov
fmull
cmpsb
outsl
std
pop
adc
ret
dec
sbb
cmp
loope
fldcw
or
sbb
imulb
pop
adc
mov
test
js
or
mov
inc
sti
and
push
jnp
lods
pop
aas
jb
cmpsb
add
out
ss
sbb
popa
xlat
in
dec
inc
js
pop
rcrb
mov
lea
adc
das
inc
xchg
jecxz
inc
xor
ret
sti
pop
adc
mov
lcall
out
and
sbb
mov
rcll
mov
push
es
pop
sub
pushf
dec
rorb
cwtl
push
inc
and
ss
dec
mov
adc
cmc
or
jp
xor
mov
jg
mov
js
pop
xchg
jecxz
inc
jo
mov
loope
mov
std
jne
jo
sahf
les
dec
mov
negl
scas
xchg
add
jb
mov
push
lock
out
jg
dec
in
fisttps
or
or
repz
cmpb
aad
into
test
icebp
xor
enter
inc
push
push
mov
lock
pop
jge,pt
or
cld
das
dec
and
inc
lds
xchg
repnz
dec
or
xchg
mov
jbe
or
xchg
or
or
insl
cltd
andps
cmp
add
ror
cmp
sub
jno
repz
outsl
aas
mov
jb
hlt
dec
push
pop
dec
or
mov
jns
mov
mov
xor
adc
inc
daa
jb
jno
or
or
or
clc
inc
fistpll
aam
add
mov
les
test
inc
cld
pusha
mov
mov
sub
loopne
sbb
pushf
inc
fcoms
xchg
outsl
mov
shr
sbb
imul
movsb
mov
jae
mov
in
clc
pop
shr
and
inc
jbe
into
js
leave
lock
cli
cld
addl
mov
jnp
out
or
lret
pop
xlat
add
addr16
mov
jl
add
sbb
adc
cs
mov
lahf
jg
icebp
xchg
xor
mov
xchg
lret
xor
popf
jmp
jmp
aam
and
jmp
into
ds
push
inc
xor
or
dec
pop
cmp
cmpsb
jb
adc
pop
addr16
fwait
mov
pop
cltd
out
test
mov
popa
xchg
inc
jns
mov
push
push
in
fimuls
sbb
pop
inc
inc
pop
cmpb
pop
fucomp
dec
outsl
add
icebp
fcompl
aaa
sub
in
and
cs
xchg
loop
vmptrst
dec
inc
push
daa
pop
xlat
dec
pop
pop
mov
arpl
xor
mov
add
loop
pop
sub
inc
bound
mov
push
insl
pop
dec
jbe
sbb
add
in
mov
add
clc
in
call
push
xchg
stos
cmp
test
mov
add
leave
jecxz
or
pushf
push
inc
mov
xchg
dec
rcrb
xlat
fnstenv
jns
idiv
or
popa
mov
js
xor
out
jle
fwait
dec
lods
push
cmp
das
jecxz
aaa
test
xor
push
scas
shl
sti
std
orb
xchg
push
cmp
sbb
rcl
pop
lret
inc
sti
push
rolb
push
or
pop
jb
popa
add
out
jecxz
inc
adc
lock
xchg
imul
sbb
leave
dec
cmp
out
cmc
scas
jb
lock
inc
outsl
idivb
fcomip
inc
ds
lds
dec
mov
fcmovnu
repnz
xchg
faddl
rclb
shll
and
sub
testl
ljmp
das
mov
mov
pop
pop
int3
lds
jae
inc
dec
out
js
adcb
aam
imul
dec
cmp
add
lods
pop
mov
mov
inc
adc
xchg
ret
jge
shr
and
negl
xor
mov
xor
std
out
aas
or
sahf
push
inc
andb
mov
test
pop
cmpsl
dec
push
dec
aaa
xlat
jp
and
adc
and
clc
stos
decl
insb
sub
out
shrb
fimull
adc
ds
add
and
mov
out
test
mov
insb
add
sub
lret
and
add
pusha
jg
hlt
insb
push
fwait
xor
cmp
dec
mul
stc
xchg
shll
add
and
lods
outsl
sbb
or
stc
dec
push
das
mov
shlb
xor
add
sbb
inc
addl
arpl
sub
sub
push
and
movsb
repz
xlat
pop
dec
sub
icebp
test
iret
or
mov
in
xor
inc
pop
xorl
aad
adc
dec
out
jb
inc
mov
cmc
dec
lock
ficoml
incb
mov
aas
pop
out
fildl
ljmp
lods
and
cmp
jbe
push
add
int
adc
fmull
mov
std
cli
xchg
ljmp
into
push
negb
negb
mov
out
fwait
sub
loopne
cmp
pop
dec
xor
andb
jo
pop
jge
outsl
enter
les
cmc
shlb
mov
sahf
jmp
and
dec
sub
adc
xor
adc
mov
movsl
mov
jge
or
in
stc
mov
mov
xorl
enter
jecxz
add
mov
pusha
sbb
jbe
mov
xchg
xor
mov
outsl
fimull
add
add
outsl
inc
xchg
adcl
or
mov
add
mov
andb
mov
cs
lahf
lods
mov
insb
adc
rcrb
dec
push
cltd
es
in
stos
jmp
sbbl
xor
dec
pushf
ljmp
push
std
cmc
xor
sbb
or
cwtl
sbb
fdiv
jae
adc
pusha
mov
cmpsb
mov
insl
mov
arpl
jo
ret
or
jno
lret
and
mov
jge
pop
sbb
out
and
mov
mov
jl
data16
sahf
mov
push
rcll
mov
addr16
xorl
and
out
sub
mov
pop
cs
sub
cs
dec
xchg
and
aam
cmpsb
ss
les
or
insb
and
add
es
imul
push
dec
push
mov
clc
outsl
mov
inc
mov
push
loope
pop
sbb
addr16
stos
pop
jns
xchg
cmpsl
fnstenv
mov
andl
xchg
in
xchg
dec
lds
shll
xchg
lock
hlt
nop
dec
sahf
pop
add
aam
jmp
hlt
scas
ja
pop
sbb
pop
into
cwtl
mov
aad
jp
mov
aaa
jp
jp
jmp
mov
ud0
repnz
pop
mov
and
fidivrs
dec
push
ss
ds
mov
shll
fldenv
or
les
xchg
enter
mov
out
sbb
pop
ret
xor
or
aaa
and
dec
mov
loopne
push
mov
or
mov
inc
xor
icebp
iret
loopne
pop
cmpsl
fbstp
idivl
cs
out
cmp
pop
ret
sub
lods
sub
dec
dec
aaa
negl
push
bound
clc
xchg
incl
sbb
push
or
xchg
cmp
jp
sub
jns
ja
pop
icebp
sub
faddl
jb
ja
insl
fcoms
out
pop
int
std
push
out
xchg
cltd
test
pcmpgtw
sti
test
xor
outsb
add
nop
mov
stc
sbb
sbb
xchg
inc
imul
leave
dec
push
jp
mov
jns
repz
fwait
stos
xchg
rcl
leave
cmp
dec
push
pop
stos
lds
cmc
xlat
fisubrl
and
in
movsl
jnp
lahf
push
push
sub
mov
jae
ja
aaa
loopne
sbb
js
cmp
inc
or
add
cld
rep
sub
ds
sbb
xor
mov
shr
mov
js
fldenv
sarl
jo
cwtl
outsl
fsubrs
loope
test
mov
daa
xor
pushf
les
rcl
xor
add
pinsrw
mov
mov
das
adc
int
mov
jno
lock
out
rcrb
or
xchg
xchg
add
inc
xchg
sbb
dec
and
mov
addl
mov
fwait
jb
push
inc
insb
cmp
loopne
popf
cmp
sbb
jg
stos
ret
cmpb
xchg
inc
orl
testb
enter
sbb
das
ljmp
push
jae
push
aaa
stos
xchg
and
and
pusha
or
dec
xchg
js
xor
mov
stos
dec
mov
pop
jno
xchg
or
mov
imul
mov
cld
inc
push
cld
int
daa
sub
out
xchg
in
mov
pushf
sahf
nop
add
div
sbb
add
jp
dec
push
pop
mov
push
sub
jle
ret
push
bswap
pop
iret
sbb
in
arpl
lods
lret
xor
pop
incl
ja
cmpl
jb
nop
out
ljmp
mov
repz
call
in
call
sarl
out
daa
fisttps
xor
in
jp
inc
ret
jl
dec
or
push
cmp
fdiv
pop
mov
iret
and
push
ljmp
fsubr
in
nop
movsl
xchg
dec
repz
xchg
rorl
fistpll
sarl
notl
lds
sub
cli
mov
in
rol
pusha
and
sbb
cmc
jg
stos
subl
xlat
sarl
jmp
jge
test
mov
push
push
data16
mov
out
lods
dec
fistps
xchg
or
mov
dec
icebp
test
sub
shl
xlat
cmp
lock
ja
jle
cmp
data16
sbb
mov
mov
xchg
in
test
movsl
mov
iret
dec
dec
jns
sub
sbb
aad
jmp
jmp
xor
dec
clc
push
lret
mov
pop
pop
out
and
dec
div
pushf
push
out
xor
adc
xor
ss
mov
sub
mov
shrb
jge
jge
outsl
iret
inc
notl
or
push
mulb
dec
ds
in
mov
sarl
xchg
dec
cld
mov
mov
xchg
dec
and
bound
mov
cmpsl
jbe
es
notl
adc
sub
ss
out
cli
loope
xor
jmp
ret
bswap
mov
pushf
pop
adc
xchg
fisubrl
les
js
xchg
mov
rorl
xchg
mov
mov
arpl
add
daa
pop
dec
outsb
lock
loop
int
sub
xchg
scas
or
cltd
enter
pop
pshufw
and
adc
and
hlt
inc
cmp
lods
sbb
mov
add
fildll
adc
push
sbb
or
int
push
xor
imul
jmp
lahf
sbb
and
xor
ds
ja
mov
daa
pusha
push
sub
pop
and
sub
or
pop
mov
lods
arpl
daa
rorl
or
movsl
rclb
int3
out
push
pop
xor
xchg
mov
stos
lds
icebp
lds
lods
xchg
mov
sub
mov
xor
daa
pop
js
ss
xchg
push
mov
lcall
mov
or
or
in
jnp
add
and
ret
xchg
inc
dec
sub
stos
enter
cwtl
loop
pushf
dec
pop
adc
idivb
rcll
jne
push
and
xchg
jae
in
stos
xor
dec
cmp
dec
or
sub
adc
movsl
mov
popa
pop
test
pop
push
xor
iret
in
ret
sub
daa
and
into
xor
icebp
mov
loopne
inc
and
and
shl
fs
xor
pop
subl
xchg
jge
jne
add
cmc
cmp
cmpsb
mov
sub
fcompl
cmpsb
mov
aas
cwtl
out
gs
clc
push
jl
xchg
or
test
or
mov
aad
or
xchg
jb
fldcw
jl
mov
popf
sub
pop
jg
testb
push
add
mov
pop
and
mov
adc
jns
decb
mov
add
push
pop
sti
jecxz
lahf
or
dec
pop
repnz
cmp
push
aas
pop
jno
xchg
xor
jns
adc
jae
cld
or
insb
cmpsl
mov
jecxz
data16
out
xor
jns
xor
std
and
dec
jecxz
pop
cmp
adc
jge
test
and
pop
mov
and
push
cltd
repz
and
dec
shll
test
ja
out
mov
xchg
insl
test
sbb
or
outsb
in
mov
xchg
push
je
rcl
or
and
sub
pop
or
lret
rcr
arpl
je
inc
push
pop
cmp
cmc
ja
push
and
add
cmp
test
jl
bound
xchg
adc
push
repnz
js
xor
enter
push
out
and
push
mov
sbb
daa
test
roll
loopne
fs
inc
adc
push
adc
mov
mov
sub
jmp
adc
aaa
xchg
mov
push
stos
inc
inc
in
inc
sbb
mov
lcall
or
call
cmc
mov
jns
pushf
out
jne
xor
mov
clc
sub
rcl
fsubl
cld
or
aaa
lahf
pop
jmp
or
push
jbe
rcrb
les
jmp
and
cmp
dec
dec
int3
icebp
subb
jg
rcr
pop
subl
shrb
and
lds
xchg
dec
mov
pop
add
addr16
adc
into
test
adc
inc
repz
push
les
test
push
popf
bound
inc
lcall
cmp
in
outsb
lock
sarb
icebp
bound
mov
stc
push
cmpsb
fiaddl
mov
outsb
rclb
mov
hlt
sub
popa
dec
cmp
jnp
xchg
mov
pop
mov
adc
push
gs
cmp
mov
les
sbb
dec
jg
aaa
push
jmp
into
dec
repnz
dec
mov
dec
fbstp
addr16
xchg
mov
lcall
push
ret
xchg
dec
mov
fdivrl
imulb
scas
mov
mov
add
mov
xor
push
leave
ja
vshufps
pop
cmp
push
inc
imul
cmp
pop
push
xchg
scas
lds
dec
dec
dec
or
jle
mov
dec
mov
adc
jbe
xor
das
mov
push
add
popl
or
fists
push
inc
mov
mov
push
jle
movsb
push
pop
jmp
xchg
lahf
fiadds
loopne
xor
in
cmc
cmpsb
sbbl
fyl2x
aaa
loopne
jl
divb
jne
lret
cmp
mov
stos
nop
test
pop
pop
pop
movb
pop
js
mov
das
inc
cltd
lcall
repz
jge
sub
scas
insl
sub
and
xorl
or
ds
push
loop
sub
gs
cli
xchg
fcomp
scas
mov
add
testb
mov
add
xor
jns
test
pushf
in
xor
rorb
out
inc
mov
jge
and
test
sub
clc
in
xor
lret
mov
push
mov
enter
int3
xor
jbe
cmp
out
push
fdivp
ror
sub
cmp
mov
xor
nop
cmpsl
cmpsb
pop
call
mov
int
push
test
inc
in
jmp
popf
cwtl
fstl
int3
js
sub
int3
add
add
mov
mov
sbb
or
jg
pop
inc
xchg
shll
adc
ja
or
dec
mov
lock
into
jnp
push
mov
jge
inc
dec
add
or
iret
mov
lds
adc
mul
nop
xchg
sbb
shlb
push
push
ret
add
jl
or
mov
xor
fdivr
mov
mov
decl
sub
push
stc
inc
jnp
les
xor
push
push
fstpl
sbb
push
add
insb
testb
pop
and
mov
jle
leave
push
out
cmpl
rolb
movsl
imul
mov
sbbb
sar
adc
sub
rclb
fs
in
xchg
jmp
lahf
cmp
in
xchg
popa
into
mov
ds
int
xor
inc
and
pop
push
sti
inc
aam
loope
roll
das
pop
imul
mov
inc
jnp
fwait
pop
sub
mov
lods
loop
scas
in
push
jnp
pop
test
jge
or
mov
cld
cmp
ss
mov
adc
stos
lcall
fs
and
lcall
pushf
xor
jecxz
stos
pop
mov
mov
cmp
orb
dec
lahf
fiadds
cmp
jl
movsb
or
arpl
inc
push
xchg
push
lea
and
jno
cmp
outsl
sub
and
jnp
pop
add
fsub
sbb
inc
std
sti
add
rol
inc
das
cwtl
icebp
fisubrs
mov
mov
jbe
add
movsb
inc
mov
data16
lret
outsb
lcall
adc
adc
rcll
cmp
dec
iret
sub
push
jb
mov
enter
xchg
and
pop
addr16
cmp
xor
lods
iret
sub
lret
cmpsl
mov
add
pop
rclb
xor
mov
mov
push
int3
mov
std
cmp
sub
dec
imul
push
mov
aad
xchg
push
push
mov
jb
divl
push
lds
bound
mov
test
in
lods
sarb
test
jns
int
aas
add
repz
shl
int
and
mov
lret
fwait
lea
out
sbbb
sahf
pusha
or
inc
cmpsb
sub
jge
out
jnp
fstl
fwait
sarl
jbe
pop
popa
divb
test
xchg
fwait
lcall
daa
lret
jecxz
sar
cmc
sub
pusha
sub
fbld
scas
rolb
movsl
and
lret
lea
push
into
mov
xchg
lods
test
push
mov
push
mov
xor
or
outsl
cli
cmp
push
inc
lea
test
cmpsb
jbe
pop
ljmp
lds
push
cwtl
sbb
cmpsb
clc
fcoml
pop
add
mov
lret
inc
push
lods
mov
aas
jnp
cmp
testb
xor
add
xchg
out
jne
roll
adc
push
sub
out
xor
cmpsb
sbb
xor
inc
jb
xor
cmp
maxps
dec
xchg
adc
call
cmp
push
mov
lock
xchg
fwait
outsl
adc
push
mov
out
loop
xchg
jae
mov
xchg
push
scas
decl
sub
stos
testb
mov
js
fs
inc
push
push
imul
in
sbb
lcall
inc
mov
mov
sti
pop
lret
icebp
cmp
iret
arpl
dec
and
enter
repz
pushf
mov
mov
inc
mov
push
fsubs
cwtl
mov
xor
pushf
aaa
xchg
jae
div
sub
dec
jl
push
je
inc
fsubs
cmpsl
cli
push
mov
lods
popf
jecxz
push
into
mov
lret
cmp
mov
mov
std
daa
pop
ret
jne
add
inc
leave
push
int3
add
dec
arpl
outsb
in
add
mov
mov
repnz
and
scas
mov
loope
daa
les
cltd
ja
shrl
add
sub
sbb
add
cmpps
test
daa
sti
mov
push
popa
sub
ja
in
je
and
jle
push
xchg
adc
outsl
cmp
fdivs
xchg
lret
ss
loopne
xchg
and
cmpsb
movsb
pop
cmp
sbb
faddl
cmpsb
shll
out
fiadds
adc
movsb
jnp
arpl
orps
pusha
shrb
stc
xchg
in
lea
inc
nop
cld
fldt
jmp
dec
pop
iret
xchg
push
lcall
mov
sar
stos
mov
sbb
push
cs
jmp
push
aad
daa
xor
push
adc
push
test
sbb
mov
xchg
cli
xchg
add
test
jne
ficoml
mov
and
jg
test
xchg
iret
jns
sbb
adc
test
push
inc
jnp
fucompp
inc
test
leave
pop
xchg
jb
push
adc
cmp
jns
ss
inc
lahf
aaa
push
xor
imul
es
mov
pop
add
dec
sbb
test
jle
mov
gs
out
aas
and
sbb
jns
adc
gs
pop
fcmovnbe
call
cmp
jno
icebp
xchg
inc
aam
jno
cmp
icebp
inc
push
enter
idivl
test
inc
int
xor
push
ss
out
adc
loopne
xor
xor
lods
fdecstp
push
and
push
xor
fwait
sub
lds
jl
test
daa
sbb
negl
sbb
push
and
dec
dec
ret
ljmp
lahf
mov
or
mov
jp
pop
adc
ss
insl
cmp
cmp
call
dec
xor
mov
and
dec
mov
stc
inc
clc
mov
sub
nop
int3
mov
loopne
pop
inc
sbbl
insb
xchg
inc
shlb
sub
mov
movsl
push
mov
inc
lret
stos
inc
jmp
jns
dec
xor
jns
sbb
lea
or
aaa
inc
jae
sub
mov
repz
push
push
cmp
pop
aad
int
out
xor
jecxz
pop
dec
mov
fdivp
test
and
int
fs
jbe
xor
mov
dec
mov
stc
loop
xor
pop
std
ds
fcom
mov
out
dec
and
dec
jp
mov
jno
adc
inc
enter
mov
aas
inc
xchg
clc
jg
or
mov
stc
sbb
add
fstps
fsts
pop
bound
inc
cld
sarl
lahf
push
shll
je
xchg
add
jbe
fsubrl
std
mov
shrl
cwtl
xor
jb
and
stos
mov
mov
enter
imul
pop
inc
or
jp
scas
outsb
push
or
or
mov
sbb
mov
roll
shlb
setae
not
int3
std
test
scas
test
nop
movsl
aad
mov
outsl
loop
fisttps
xchg
ret
mov
mov
adcb
jge
movsl
mov
pop
add
sti
repz
xchg
xor
cld
fimull
mov
dec
dec
iret
cs
test
mov
xor
lds
cmp
movsb
mov
mov
test
fs
sbb
xchg
lods
lcall
sub
inc
adc
in
cmp
in
jno
fsubs
jl
add
pop
pop
adc
subl
sub
xchg
jl
jp
repz
xchg
sbb
lds
sbb
ljmp
adc
jno
push
sahf
pop
sub
dec
mov
jne
in
push
cmp
fnsave
xlat
in
inc
cmp
mov
or
mov
lock
mov
pop
jecxz
mov
inc
or
add
mov
fbld
cmpsl
cmp
cmp
sub
sbb
mov
das
and
testb
cld
dec
popf
sbb
jge
mov
in
add
cmp
jbe
inc
and
test
inc
add
fists
jnp
jb
pop
shrl
gs
loop
aad
inc
sbb
adc
xor
mov
sar
or
xor
inc
jnp
movsb
jae
inc
cmp
aad
sub
fdiv
add
sub
cld
loope
loop
push
or
jecxz
add
dec
push
addl
lods
mov
bound
daa
inc
mov
jne
or
das
enter
cmp
xchg
or
nop
loopne
mov
jb
out
scas
cld
scas
and
sub
and
push
inc
adc
xchg
mov
iret
dec
mov
in
dec
fidivrs
clc
mov
das
addr16
outsl
sbb
inc
insl
mov
xchg
mov
xchg
or
push
insb
enter
int3
jae
out
hlt
add
sub
cmp
test
call
test
mov
or
mov
mov
xchg
pusha
sub
mov
cli
popf
inc
rcr
gs
or
pop
cmpsb
sahf
mov
pop
aaa
push
push
aaa
pop
push
ficomps
push
mov
rorl
mov
sbb
mov
andl
movsl
jo
dec
jnp
mov
repnz
mov
arpl
faddp
xor
dec
mov
cli
sbb
xchg
pusha
insl
jns
add
push
or
push
push
jb
arpl
mov
pop
pushf
lret
arpl
mov
leave
add
dec
sbb
adc
mov
cmp
mov
dec
push
cmp
sub
sbb
sbb
ret
or
push
mov
stos
popf
and
mov
or
popa
cmp
pop
and
roll
and
xchg
mov
mov
cmc
stos
mov
rcrb
cmc
adc
xor
jbe
adcb
mov
sub
xchg
and
stc
ds
leave
inc
xor
aad
adc
js
nop
push
xchg
fprem
cli
es
fmuls
frstor
das
test
lds
pop
mov
bswap
in
mov
sarb
jmp
js
mov
shll
cmp
pop
sub
mov
cld
mov
lret
jl
test
pop
jl
push
add
std
inc
inc
dec
bound
inc
loop
xor
and
sti
push
mov
dec
and
dec
sub
stos
vhaddpd
fwait
or
ss
jmp
leave
pop
cmpsb
stos
add
adcb
jl
or
lea
aad
mov
xor
mov
pop
and
pop
outsl
lahf
jge
icebp
fadds
inc
aas
inc
inc
faddl
jle
jg
mov
ja
inc
cwtl
push
aam
stos
jne
mov
mov
pop
in
sbb
jo
dec
fisubrs
cmpsb
push
arpl
cmp
mov
clc
xor
sbb
fadd
push
stos
or
cmpl
mov
in
mov
js
dec
xchg
jmp
cvtdq2ps
sub
cld
xchg
jp
jbe
xchg
xor
push
mov
adc
sub
or
mov
jo
sbb
mov
rorl
xchg
and
repnz
pop
cmp
outsl
stos
mov
aas
dec
pop
fstpt
and
sub
es
cmpsb
test
gs
std
pop
mov
mov
and
and
fisttpl
xchg
sbb
inc
jns
dec
bound
xor
jb
repz
stc
add
das
add
notb
xor
and
push
xor
cmpb
mov
pop
cmp
push
das
push
lcall
dec
insl
inc
mov
mov
dec
add
push
shrl
dec
rcr
xor
pop
int3
inc
pop
adc
xlat
dec
cmovne
push
cmp
inc
leave
ret
sub
pop
les
test
out
jno
or
mov
or
push
cwtl
pop
sub
push
mov
mov
addl
mov
push
push
jecxz
icebp
fsubs
push
pop
or
mov
sahf
pop
arpl
dec
add
into
outsl
jecxz
lahf
repnz
daa
mov
jae
movsl
mov
lret
jmp
xchg
pop
and
sbb
std
fsubrl
cwtl
lahf
movsl
push
loopne
adc
lds
xor
xchg
xchg
test
sti
test
jmp
sub
adc
xor
jmp
and
inc
adc
test
decb
mov
mull
int3
stos
cmpsl
scas
js
daa
xchg
xor
dec
out
in
inc
adc
xchg
push
and
ja
sub
aas
xchg
ss
pop
enter
lock
sub
mov
xchg
testb
imulb
cwtl
fcoms
add
mov
push
jbe
and
mov
in
push
js
sub
xchg
sbb
lret
mov
sub
dec
mulb
es
jg
imul
cld
jecxz
cwtl
leave
add
or
fisubrl
pop
cld
dec
sbb
mov
xchg
iret
cmc
and
push
jns
in
adc
push
test
pop
call
imul
mov
cmp
add
clc
adc
mov
add
pop
sub
out
pop
cltd
mov
xor
cwtl
push
jl
mov
pop
test
add
push
movsb
lcall
mov
cwtl
popa
sahf
decb
aaa
popf
sbb
mov
fnstcw
add
in
fsubs
sti
or
lds
lret
sbb
jbe
mov
mov
pop
add
inc
sahf
sub
sahf
push
adc
pop
stos
mov
loope
inc
mov
out
jmp
jle
or
xorl
cwtl
sbb
es
out
adc
xchg
iret
push
jle
mov
inc
sti
nop
push
and
pop
inc
inc
push
into
mov
pop
cltd
mov
inc
cmp
fnstenv
dec
pusha
jg
lahf
loope
adc
xor
scas
stc
jo
test
stc
ss
lods
mov
sbb
aad
mov
cmc
mov
xchg
add
aam
add
and
mov
add
fs
test
jl
lcall
and
aaa
rcr
or
sbb
add
mov
enter
xchg
data16
pop
mov
and
sub
fnstenv
scas
ret
nop
and
xchg
je
mov
sar
std
or
iret
sub
into
test
fmuls
fldcw
cwtl
pop
testb
gs
ret
lods
lods
test
jmp
jg
mov
push
mov
adc
mov
sub
jge
out
rorl
pop
test
mov
sbb
mov
mov
cmp
nop
mov
mov
add
mov
jns
mov
faddp
mov
sub
xor
mov
xchg
xor
dec
mov
dec
jns
repnz
pop
rorb
cltd
lock
out
aaa
xchg
adc
popl
or
call
in
das
shll
push
sbb
pop
jbe
call
fisttps
mov
sbbb
mov
jg
ror
out
dec
fidivs
xchg
popa
or
std
mov
jnp
dec
imul
jne
imul
and
dec
sub
mov
push
mov
adc
addr16
or
and
insb
mov
push
cmp
stc
xor
call
xchg
jnp
fcoml
das
add
mov
fs
push
adc
pop
cmp
pop
scas
call
inc
fdivr
and
mov
jbe
fstl
imul
add
mov
xchg
dec
cmovno
dec
negb
fadds
imul
loopne
dec
out
pop
mov
fiadds
inc
sub
or
fucomp
add
mov
cltd
es
addr16
mov
sti
adc
or
and
jl
ss
pop
push
mov
addr16
adcb
lods
adc
ret
iret
xor
xlat
jecxz
sbb
jns
gs
push
push
imul
ret
xchg
mov
sahf
lcall
shlb
sub
add
jo
ds
adc
xchg
sbb
aaa
repnz
test
sub
loop
xor
or
adc
fcomip
mov
or
jecxz
mov
push
and
jbe
jnp
fwait
inc
bound
jo
add
loope
popf
sarb
addr16
jns
jne
xchg
ret
add
cmp
xlat
push
cwtl
ret
test
daa
lds
in
or
jbe
dec
test
daa
insb
cs
inc
xor
dec
add
jno
push
push
rolb
pop
insb
mov
dec
xchg
lahf
xchg
mov
lea
ds
adc
imul
inc
roll
shll
dec
int3
outsl
or
test
hlt
inc
outsb
les
bound
ret
mov
cmp
je
push
add
adc
pop
daa
mov
icebp
insb
pop
push
mov
push
sbb
in
pop
dec
inc
xor
push
bound
scas
mov
push
stc
pushf
pop
fwait
mov
fnstenv
cmpsb
mov
cmp
std
jbe
cmpsb
xchg
sub
lret
lds
mov
arpl
xchg
inc
insb
les
xor
mov
pop
sbb
cmc
sub
push
cli
mov
sbb
in
sub
inc
mov
jns
jns
lret
sahf
add
dec
add
stc
cld
mov
stos
sub
ss
aas
cmp
dec
jo
add
adc
and
xchg
push
imul
push
push
or
add
or
mov
or
lock
mov
mov
test
or
xchg
jbe
cmp
stos
xor
bound
dec
stos
pop
pop
hlt
in
rcrb
int
add
in
sub
xor
push
xchg
inc
mov
mov
imul
leave
fidivs
inc
enter
mov
mov
repnz
cmp
xchg
pushf
cltd
fimull
add
mov
jmp
divb
jbe
inc
mov
andb
in
inc
inc
sub
cwtl
mov
mov
sbb
popf
jno
pop
repz
std
jns
or
movsb
scas
cmpl
inc
das
leave
std
cmp
mov
sub
mov
xor
mov
mov
sbb
jns
and
sbb
pop
pusha
movsl
sub
hlt
push
mov
out
and
fcompl
popf
inc
inc
mov
xchg
insb
pop
mov
jbe
or
call
pop
jp
inc
inc
lds
xchg
and
in
mov
push
jp
and
sub
mov
or
insl
inc
lret
add
test
imul
adc
pop
xor
inc
mov
stc
orb
fdivl
fstps
push
lea
insw
insb
pop
leave
divl
xchg
repz
aam
test
pop
js
popa
push
insl
imul
ss
add
testl
int3
js
cmp
push
fisubs
int
mov
movsl
das
loopne
imul
inc
inc
inc
aas
jl
mov
leave
jnp
std
xchg
cmp
test
add
jmp
in
pop
pop
outsl
out
sahf
nop
mov
fnstenv
xor
fidivl
movsb
cld
push
pop
mov
out
jle
sub
xor
mov
ljmp
scas
sarb
dec
sub
jl
hlt
or
push
pop
je
push
jno
jle
sub
imul
or
xor
adc
pop
sub
push
sbb
adc
cmpsl
pushw
cli
xchg
lcall
push
mov
aad
pop
push
jae
fisttpll
nop
xchg
jnp
in
scas
fisubs
aas
add
jmp
dec
add
cmpsl
jb
push
popf
xor
pop
iret
pop
xchg
aad
push
dec
or
push
cmp
push
jl
mov
push
loop
xorb
jecxz
sbb
and
rcrl
sbb
inc
fists
mov
imul
movsl
xchg
or
xchg
inc
lret
mov
lcall
mov
or
sbb
ret
mov
push
lret
mov
xchg
jl
sub
mov
push
std
xchg
inc
or
xor
mov
data16
and
rorb
dec
mov
push
mov
mov
pop
pushf
ret
scas
fnstsw
dec
les
sti
js
mov
dec
and
sbb
jg
lahf
in
xchg
and
sub
js
cltd
fnstsw
cli
pop
or
in
stos
dec
sar
das
or
jbe
es
xor
gs
sbb
faddl
outsl
das
mov
push
xlat
ret
push
test
outsl
xchg
rcl
lock
nop
andl
decl
mov
adc
in
mov
jb
ss
mov
scas
adcl
testl
mov
mov
fidivrl
dec
cmp
aaa
cmp
dec
push
sbb
dec
dec
push
jbe
ljmp
inc
xor
xchg
cmp
mov
bound
sub
mov
addr16
popf
aas
popa
test
pop
dec
mov
jecxz
cmpl
lea
test
pop
jne
push
sub
repz
mov
ja
mov
mov
inc
ret
and
fwait
das
nop
push
inc
or
loope
cld
lock
sbb
dec
cmp
mov
hlt
pop
pusha
dec
sub
jbe
add
and
xchg
sub
dec
fxch
out
push
lods
addr16
or
adc
sub
pop
adc
mov
sbb
pop
fs
data16
mov
cmp
push
push
aaa
jno
push
test
mov
jnp
leave
mov
ljmp
or
mov
jecxz
ja
push
outsl
out
sbb
leave
into
inc
inc
push
adc
and
pushf
js
mov
hlt
scas
jl
adc
push
mov
out
sub
jnp
sbb
jmp
shrb
sahf
mov
pop
dec
sti
in
les
popf
or
pop
inc
cmpsl
repz
mov
add
sarl
pop
stos
add
jmp
lods
cmp
leave
fadds
xchg
js
mov
subb
ds
hlt
fmuls
inc
or
scas
aas
mov
or
rolb
inc
aad
push
xchg
arpl
pop
sub
xor
scas
jl
xchg
inc
and
popa
out
push
scas
mov
push
mov
jae
lock
sbb
int
or
rorl
insl
popf
mov
mov
call
pop
jg
std
jmp
aaa
dec
fwait
add
pop
sbb
dec
dec
insl
dec
decb
adc
loopne
js
jae
outsb
or
aaa
fmul
int3
pop
rorb
xor
mov
shll
dec
stos
mov
pop
es
ror
mov
cmp
sti
mov
jo
mov
mov
inc
push
xchg
xchg
or
enter
fildll
add
push
inc
sbb
ss
sub
into
aas
int3
sub
mov
pushf
nop
pop
in
mov
adc
xchg
aaa
xchg
iret
jo
dec
jno
mov
shll
arpl
and
jns
xor
stos
push
mov
out
mov
pop
mov
adc
insb
or
xor
sti
mov
push
mov
mov
adc
inc
cmp
enter
and
jmp
scas
push
lods
hlt
push
arpl
ret
iret
loope
mov
sarl
hlt
int3
dec
sub
lock
mov
aaa
jp
pop
leave
lods
loop
pop
jne
add
dec
adc
sti
sbb
icebp
cmc
mov
sahf
jnp
faddl
jle
movsb
pop
sub
cmc
lods
dec
into
fdivl
cmp
imul
xchg
inc
test
inc
mov
adc
add
lods
mov
popa
stos
movl
adcb
fs
xor
xor
inc
xor
jecxz
and
mov
mov
rorl
and
push
or
and
mov
shrl
xchg
inc
fmul
sub
pop
pop
pop
sub
aam
movsl
in
test
lock
jmp
cmp
lds
jp
in
in
stc
fs
lods
inc
lcall
sub
scas
imul
inc
dec
or
lods
inc
mov
inc
push
cmpsl
jmp
cmp
lods
std
packuswb
push
pop
stos
and
push
cmp
cmp
adc
pop
mov
aas
icebp
fmuls
xor
stos
lods
insl
cwtl
mov
scas
xchg
rolb
add
fcmovu
add
jmp
push
rolb
xchg
imul
mov
vandps
xchg
ds
or
xchg
mov
in
rorl
lds
xorl
and
or
sub
and
jg
mov
int
scas
and
pop
jns
lods
rorl
aad
jo
jns
jae
fists
xor
sarb
dec
dec
jae
push
in
cmp
into
push
test
fadds
cmp
insl
aas
jmp
mov
add
mov
ds
js
sbb
mov
out
jp
mov
cmpb
movsl
daa
orb
arpl
lret
addr16
and
andl
test
jne
add
push
aam
or
dec
es
insl
jp
nop
aaa
push
sub
mov
test
jne
popf
xchg
je
mov
and
movsl
in
mov
fsubr
lcall
xchg
cld
rclb
inc
pop
inc
mov
enter
les
repz
xlat
sbb
les
sahf
cli
mov
adc
jmp
sbb
je
dec
jp
outsb
or
rcrl
jne
cmp
shll
into
mov
adc
iret
out
div
rcr
sbb
jmp
jae
mov
sbb
std
addr16
jae
xchg
outsl
jge
scas
push
scas
das
and
xor
in
call
cmp
push
push
fbstp
mov
push
sbb
push
dec
mov
dec
pushf
xor
xchg
xchg
fistps
xor
sbb
mov
ds
roll
inc
and
or
pop
ss
mov
lea
ljmp
outsb
inc
jle
aas
sbb
aas
xor
int
cltd
into
dec
call
xchg
xor
jg
insb
xor
xchg
cmp
cmp
xchg
mov
out
push
pop
popa
filds
mov
int
fnstcw
sbb
jne
div
mov
cltd
loop
arpl
fnstcw
jno
loop
shlb
stos
mov
add
je
mov
sbb
js
das
or
test
or
mull
in
xor
xchg
sti
lahf
xor
mov
in
int3
inc
mov
cmp
test
adc
shlb
fs
inc
inc
popa
ret
insb
dec
push
pop
aam
jbe
cmpsl
push
icebp
mov
lcall
pop
insb
mov
mov
sbb
add
dec
xor
test
loope
mov
push
out
adc
push
ja
adc
sub
jmp
movsb
jg
incb
and
cltd
stos
mov
insb
push
pusha
mov
movl
xor
sub
es
xchg
hlt
xor
jo
xlat
loopne
shlb
xor
mov
adc
dec
mov
clc
mov
jae
ja
psubd
pop
inc
adc
in
ljmp
cld
popl
cmc
cmpsl
push
movsb
ret
test
push
lock
pop
stc
je
mov
stc
add
xchg
icebp
adc
xor
adc
nop
jp
sbb
or
aaa
test
mov
imul
ror
jmp
xchg
xchg
sub
int3
hlt
push
cmp
testb
sub
aad
insl
jmp
and
clc
jbe
movsb
adc
popa
out
mov
fwait
mov
jl
push
jle
cmpsb
pop
jmp
mov
cmpsb
cmp
pop
ret
cld
xchg
and
out
imul
outsb
stos
add
jl
dec
or
std
lea
xor
test
inc
xor
js
imul
cmpsb
push
jnp
mov
push
xor
in
cmp
fisubrs
es
loop
loop
jnp
test
push
in
jmp
adc
leave
ja
scas
sarl
aad
sbb
adc
cmp
pop
scas
and
sahf
aam
push
xchg
iret
outsb
dec
ds
xchg
xor
popf
pop
xchg
jge
pop
jp
pop
cmp
inc
lret
test
xor
insb
lock
xchg
jmp
adc
or
aas
mov
jg
dec
xchg
clc
mov
data16
dec
push
add
ljmp
rorb
mov
sbb
in
aaa
sbb
nop
repz
fwait
idivl
pop
clc
lret
pop
push
hlt
dec
ss
stos
jmp
outsb
es
ficoms
pop
movsl
add
dec
aaa
jmp
push
jnp
outsb
dec
mov
push
ret
pop
pop
iret
into
out
inc
pop
scas
push
mov
imul
rorl
xor
test
iret
sti
mov
testb
test
add
ds
hlt
push
out
imul
xchg
mov
sbbl
pop
or
fsubrs
adc
in
cli
xchg
sbb
push
mov
dec
dec
sub
pusha
mov
mov
out
add
rorl
call
ja
xlat
sub
inc
mov
and
cmp
int3
pusha
push
pop
shl
jecxz
cld
lcall
lcall
mov
outsl
mov
outsb
mov
stc
xor
lods
data16
jg
sti
mov
in
push
lock
fwait
xor
int3
pop
and
in
mov
mov
mov
xchg
stos
add
outsl
rorb
add
jne
insb
pop
mov
imul
and
aaa
push
outsb
jbe
or
push
mov
rcr
mov
je
mov
das
movl
push
cmc
jo
lret
mov
test
lahf
pop
or
stos
scas
push
xchg
sbb
lods
add
inc
in
jb
inc
gs
test
sbb
jl
jae
test
xchg
xchg
fidivl
adc
dec
jle
arpl
lret
mov
xor
cmpb
insl
mov
dec
jmp
sub
lret
lods
mov
mov
popa
mov
mov
adc
popl
fdivrp
sbb
cld
xchg
push
sbb
das
dec
std
pop
and
inc
sbbb
dec
lock
scas
out
pop
and
xchg
cwtl
sub
pop
repnz
pushf
fistl
out
aad
push
pop
xor
icebp
fiaddl
mov
jo
les
mov
jo
repnz
or
lods
stos
sbb
jo
es
lcall
jge
mov
ret
in
push
pop
add
push
aam
popa
jns
std
sbb
lret
insl
jg
sahf
enter
sbb
xlat
imul
push
mov
sub
xor
push
rclb
or
push
jb
les
nop
andb
mov
lret
adc
test
mov
call
inc
mov
push
mov
push
mov
rclb
bound
dec
dec
shl
adc
sub
subl
mov
mov
jnp
inc
and
lret
fists
sbb
incb
xchg
test
int
subb
shr
mov
out
test
and
xchg
fildl
xor
adc
cli
ret
stc
and
pop
lea
cmp
test
mov
shlb
xor
adc
and
sbbb
call
mov
dec
push
pop
adcl
mov
lods
fsubrl
jmp
mov
adc
mov
xor
lret
mov
ja
jmp
test
lods
cmpsl
dec
btrl
das
push
cmp
jb
iret
sbbb
clc
in
mov
scas
xor
add
or
or
adc
push
outsl
mov
cmp
adc
or
ret
sbb
mov
inc
enter
ljmp
pop
sbbl
movsl
xchg
hlt
inc
dec
pop
inc
gs
pushf
out
or
mov
push
movsl
sbb
xchg
ror
cmpl
out
cmp
inc
loop
outsb
cli
dec
int
pop
scas
xchg
cwtl
mov
test
xchg
mov
mov
daa
jg
mov
les
jne
mov
icebp
pop
jae
jno
sti
in
mov
outsl
in
jno
push
jecxz
mov
addl
or
lea
adc
jmp
xlat
adc
jmp
iret
gs
ret
cli
sub
xor
jge
xor
adc
lods
adc
hlt
ja
xor
add
push
scas
in
or
jne
enter
in
inc
mov
mov
test
std
jg
dec
sbb
cmp
aad
lds
jp
cmp
and
add
outsb
or
push
push
ror
leave
aas
mov
dec
fmuls
add
cli
mov
xchg
pop
mov
roll
pop
push
mov
lret
les
shrl
popf
call
jbe
les
filds
outsb
bound
cmpl
scas
shll
mov
inc
xor
adc
rep
mov
ds
imul
and
fdivl
dec
or
jmp
and
mov
popf
loopne
and
adc
jnp
shrl
push
pop
add
xor
mov
cmpsb
mov
mov
cmpsl
gs
jg
jle
outsb
inc
xor
and
xchg
sub
add
xchg
inc
sub
adc
clc
leave
cwtl
fnstcw
xchg
sahf
inc
and
js
add
xor
jge
icebp
or
mov
jb
mov
or
xlat
sub
sbb
cmp
out
test
rolb
sub
sub
rcrb
jns
ret
lods
sbb
filds
mov
leave
jmp
ja
xlat
test
sbb
add
into
stos
cmp
add
aad
ljmp
outsl
mov
mov
sbb
dec
pop
mov
cmpb
test
cld
enter
lret
sbb
mov
or
inc
xor
icebp
mov
mov
pop
xchg
dec
mov
xchg
jecxz
lcall
mov
lahf
inc
ljmp
jne
pop
mov
xorb
dec
mov
into
push
xor
test
pop
jno
jg
jno
aad
pop
adc
xchg
push
mov
out
push
stc
icebp
in
mov
lods
mov
mov
inc
test
movsb
mov
addr16
pop
adc
cmpsl
push
push
lret
movsl
loope
and
xchg
fidivs
adc
or
jp
jecxz
jl
inc
xchg
iret
sbb
mov
jns
adcl
xchg
or
andl
or
subb
divl
cmpsl
out
loope
mov
mov
das
ret
std
cltd
loopne
arpl
jne
andnps
mov
std
fmuls
sbbl
and
scas
sarl
push
sub
or
lds
out
mov
int
mov
ret
ss
mov
inc
scas
fdivr
cmp
dec
or
mov
sub
into
call
pop
scas
push
fidivl
fs
add
sti
adc
sbb
jp
je
mov
jo
sarl
shrl
mov
dec
sbb
fimull
dec
push
adc
js
jae
adc
rorb
and
lds
sub
adc
mov
pop
or
jmp
fs
lds
push
mov
mov
xor
cmpsl
std
pop
mov
out
lcall
xlat
sub
or
sbb
int
stos
cmp
push
ret
je
xchg
leave
mov
cmp
mov
hlt
lahf
push
inc
insb
mov
mov
imul
dec
add
sub
insb
dec
loop
cmp
dec
mov
or
hlt
fimull
mov
inc
imul
push
into
test
loope
cld
aam
push
mov
pop
jl
push
inc
loopne
adc
cltd
jo
scas
mov
mov
sbbl
jmp
out
mov
aaa
inc
mov
sbb
in
mov
aaa
ljmp
pusha
cltd
jl
jge
mov
enter
push
fwait
sub
mov
cwtl
ret
and
in
mov
fwait
cli
xchg
test
mov
adc
mov
xchg
es
daa
jge
mov
mov
lret
mov
inc
push
or
lcall
sti
jp
mov
nop
enter
ret
adc
mov
pop
mov
leave
mov
mov
ficomps
les
add
jbe
daa
daa
pop
mov
outsb
pushf
lds
loope
mov
pop
dec
pop
cwtl
pusha
orl
dec
cmpsb
mov
jae
std
dec
icebp
sub
mov
dec
xchg
mov
xlat
jle
mov
cld
into
sub
out
pop
cmp
cs
and
in
bound
lcall
movsb
or
out
fsts
outsl
mov
stos
push
je
clc
inc
pop
adc
hlt
stos
add
scas
push
je
inc
pop
jo
jne
ss
adc
int3
xchg
pusha
add
dec
mov
mov
adc
sahf
xchg
fistpll
ret
or
pusha
shll
or
xor
lret
sti
sub
jge
inc
or
jo
mov
js
out
adc
enter
pop
pop
pushf
xchg
mov
sub
pusha
aas
hlt
iret
pop
and
ss
adc
adc
inc
fcom
in
fistpll
and
lret
xchg
xchg
gs
cltd
add
shll
and
cmpsb
es
sysexit
scas
pop
jmp
ds
pushf
fisubrl
cwtl
jecxz
sarb
add
adcl
sbb
mov
ds
out
fwait
or
repz
jae
inc
xor
sbb
adc
inc
jbe
pop
jge
inc
mov
mov
cwtl
dec
and
div
aad
shll
lcall
flds
mov
inc
scas
sahf
jo
cld
scas
mov
incb
lret
aas
cmp
xchg
mov
rclb
popa
inc
pop
pop
mov
add
or
imul
mov
out
ficoms
adcl
js
pop
xor
aaa
mov
jg
mov
mov
pop
out
insb
stos
cwtl
pop
push
adc
mov
mov
maskmovq
shl
lods
cmp
mov
inc
lds
xlat
jns
pop
mov
pop
mov
lret
jae
cmp
lcall
xchg
xor
outsl
out
sbb
scas
inc
pop
and
mov
pop
xor
clc
xor
mov
and
push
vshufps
pop
imull
int
xchg
test
pop
aad
xchg
push
inc
xchg
pop
shll
xor
mov
jmp
inc
sbb
and
fbstp
or
mov
or
sbb
repz
cld
dec
push
out
cmp
ds
inc
xchg
xlat
fwait
xchg
inc
cs
xchg
mov
sarb
icebp
jge
mov
fiadds
add
pusha
xchg
scas
sbb
daa
xchg
js
jle
pop
jne
outsl
lret
ret
push
jbe
mov
jb
pop
lret
add
inc
mov
dec
xchg
xor
lock
mov
xor
arpl
rcrb
jno
adc
arpl
sbb
add
push
test
out
mov
adcb
or
dec
fcmovb
xchg
xchg
mov
pop
jp
int3
repz
iret
and
int3
adc
add
popl
fisubrl
ss
leave
xor
outsl
adc
mov
jl
adc
push
sarb
stos
sub
pop
sub
and
cwtl
and
pop
xchg
pop
lods
into
cltd
pushf
jb
fstl
cltd
push
fcoms
mov
xchg
adcl
popl
icebp
fistl
sbb
pop
arpl
xlat
aad
repz
fnstenv
mov
jle
sarl
in
addr16
test
cmovg
sbb
scas
add
and
dec
lret
jl
add
stc
sbb
inc
sub
lahf
shlb
nop
pop
push
mov
and
repz
adc
outsl
add
mov
flds
fcmovnu
pop
mov
cwtl
test
loope
fwait
cld
in
jecxz
pushf
outsb
push
enter
pop
xchg
dec
ss
dec
xchg
mov
mov
insl
cmp
test
xchg
jnp
add
lods
cmp
mov
mov
dec
fisttps
pop
stc
xchg
inc
notl
push
add
cli
call
aam
mov
cmp
adc
xchg
shl
pop
cmp
insb
andb
mov
sub
repz
lods
pusha
movsl
fucomp
stos
ja
cmp
mov
into
inc
test
in
jnp
jge
outsl
pop
in
adc
cmp
cmpsl
popf
push
dec
aaa
pop
mov
clc
popa
adc
js
xcrypt-ctr
cmpsl
lcall
xchg
movsb
inc
out
insl
dec
out
cld
xor
mov
inc
inc
rorl
or
and
jmp
out
cmpsb
xor
jl
inc
popa
into
cwtl
lock
aad
xor
insb
fistpll
jg
add
sarl
lock
inc
test
jnp
and
push
jecxz
dec
lahf
xor
lods
add
fsubl
mov
mov
aas
outsb
hlt
mov
xchg
sbb
mov
mov
in
into
fld
xchg
repz
mov
dec
mov
fbld
jbe
sbb
ljmp
fistps
into
test
shrb
lahf
ret
jbe
push
xor
jb
fwait
pop
fs
ss
pop
and
pop
cmpsl
rol
lcall
jbe
fdivl
xor
push
xor
xchg
pop
xor
mov
iret
iret
fisttpl
int3
mov
or
repnz
es
inc
aam
orl
cmp
xor
pop
cmp
jle
rcrl
mov
sbb
fs
nop
pop
cmp
ljmp
outsl
xchg
and
stos
or
cmp
adc
ret
imul
sbb
mov
pop
sahf
cmc
fdivs
dec
scas
jo
scas
pop
sub
out
push
add
jae
rep
sub
pusha
pop
insl
sbb
mov
insb
outsb
js
pop
rorl
push
popf
pop
cmp
insl
inc
mov
jne
pop
insb
mov
rcr
test
push
pop
loopne
je
clc
in
ret
outsl
fadds
mov
push
xchg
jb,pn
rorb
mov
repnz
push
push
xchg
enter
aad
jbe
filds
cmp
inc
cmpsl
std
fiaddl
rorl
fs
adc
jnp
dec
addr16
lods
xchg
repnz
sub
xor
push
into
mov
inc
add
into
popf
mov
cmpsl
ret
ds
sub
xchg
add
pop
or
pop
and
mov
mov
mov
arpl
push
mov
lds
sbb
adc
adc
int3
cmp
jle
push
mov
pop
loope
and
fsubr
mov
jp
jle
push
fwait
push
int
sub
push
pop
aas
into
mov
sti
push
enter
enter
loope
in
scas
scas
lods
xchg
jbe
ret
adc
mov
aaa
arpl
dec
cmp
mov
cmpsl
push
push
test
inc
lea
fisubs
mov
cmpsl
out
push
das
cmp
or
loope
mov
cmp
xor
and
scas
cltd
inc
sbb
les
ficompl
sbb
fdiv
repnz
inc
lods
cmp
lret
sub
mov
dec
clc
or
pusha
jo
xchg
jb
cmpsb
jne
dec
clc
addl
test
sub
sub
xchg
stos
sbb
dec
sub
out
pusha
arpl
lods
testb
subb
testb
sbb
shrb
test
cltd
pop
add
xchg
data16
dec
lret
out
push
mov
mov
add
fwait
scas
mov
aaa
and
stos
lret
arpl
ljmp
lods
stc
movsb
sbb
ss
mov
jg
xchg
rol
stos
mov
repz
pop
push
mov
out
int
sahf
and
clc
loope
push
fimull
xchg
cmpsb
xor
and
sbb
andl
cwtl
cmp
pop
inc
outsb
cld
and
dec
jp
gs
data16
aad
scas
pop
pop
inc
jae
pop
and
or
ret
jbe
lret
cmpsb
lds
mov
jae
outsb
shlb
das
inc
mov
or
add
cmp
lahf
jl
ljmp
cmpsl
sahf
mov
sbb
out
mov
mov
push
inc
pop
xchg
push
push
inc
inc
icebp
sub
mov
mov
cmp
lahf
dec
ljmp
mov
dec
cld
clc
je
inc
dec
xchg
cmp
push
xor
add
push
fnstcw
add
popf
dec
mov
mov
add
stos
push
add
pushf
mov
mov
jge
or
in
lea
test
in
and
pop
shrb
mov
lea
adc
out
mov
xlat
cmp
xchg
sbb
aad
orl
int
inc
fsts
xor
bound
aad
dec
ja
negl
js
pop
jp
mov
or
lds
jo
sbb
popa
ss
jle
js
aam
lds
fisubrs
xlat
sti
xchg
xchg
call
notl
mov
adc
pop
sub
int3
icebp
push
cmpsb
adc
push
pop
push
ljmp
xor
lods
push
in
and
aam
pushf
sub
pop
adc
fists
push
sub
orb
push
in
das
push
stos
mov
ret
push
lock
cmpsb
cmc
dec
sub
imul
ljmp
stos
jecxz
push
fdiv
push
cld
inc
add
add
sbbb
test
leave
mov
js
mov
push
sarl
mov
repnz
cltd
test
fdivl
out
inc
xor
leave
hlt
fwait
mov
dec
cmp
mov
and
out
sub
jae
jbe
mov
js
dec
lods
popa
iret
sbb
dec
cmc
or
pop
inc
or
cltd
adc
push
jbe
cmp
dec
sahf
outsl
inc
stos
int
int
cltd
std
ljmp
mov
inc
mov
inc
cwtl
push
ss
cmp
shll
push
xor
std
out
rcll
pushf
cmp
sub
in
mov
xchg
and
add
push
xchg
mov
and
imul
fdivrl
aas
adc
cmp
mov
or
mov
stos
jns
not
pop
push
je
sti
pop
cmp
dec
mov
inc
dec
js
cmp
add
dec
mov
xchg
dec
pop
and
adc
add
adc
hlt
lods
jge
xchg
shrl
gs
lods
pop
bound
aam
out
sbb
push
jnp
imull
test
dec
das
es
jnp
fdivrl
push
ljmp
pushf
out
mov
cmpsl
pop
jg
jp
and
pop
ret
repnz
cmp
sahf
mov
outsb
clc
push
mov
popf
or
xchg
mov
jb
adc
adc
pop
leave
xor
add
mov
push
pop
push
cs
out
mov
pusha
mov
xchg
dec
push
and
mov
cmp
ja
test
cmp
lahf
rcll
stos
cwtl
cmp
fildl
sbb
hlt
cmp
mov
adc
sub
mov
iret
ljmp
bound
leave
xlat
fwait
adc
inc
inc
mov
xor
into
dec
adc
lcall
jo
sti
sub
popl
jl
adc
or
and
mov
jl
nop
cli
cli
mov
sub
rcl
or
lea
push
cmp
mov
xchg
adc
mov
push
pop
pop
pusha
dec
mov
push
dec
fdivrp
popf
outsb
ljmp
scas
xor
push
loopne
sub
fistps
jg
xchg
or
xor
pop
adc
pop
scas
jbe
inc
xchg
lret
mov
mov
cs
jmp
jmp
inc
mov
into
cmp
sub
fnsave
xchg
mov
adc
dec
ror
sub
rcrl
sbb
in
or
clc
add
hlt
mulb
sti
xor
xchg
fidivrl
and
cmp
mul
mov
orl
push
mov
sbb
inc
je
pop
dec
ret
subl
into
aad
xchg
sti
out
or
js
fwait
inc
pusha
lret
repnz
add
inc
jg
adc
arpl
cwtl
adc
fs
mov
loopne
xor
lret
inc
jns
push
aas
std
dec
add
jmp
aas
cltd
leave
call
ret
add
sti
ss
jne
mov
xchg
imul
adc
negl
iret
jae
adc
mov
xlat
imul
bound
pusha
mov
mov
enter
sbb
outsb
rcll
fdivr
sbb
mov
inc
inc
dec
cs
mov
lahf
leave
xor
xor
enter
mov
fildl
sbb
movsl
jnp
lcall
mov
test
mov
mov
hlt
or
jae
popf
cmp
nop
push
inc
addr16
int
icebp
xchg
push
and
add
add
cmp
insb
mov
cwtl
outsl
push
push
or
mov
repnz
es
pop
cmp
dec
and
jmp
loop
scas
dec
test
sbb
test
imulb
data16
test
sbb
ret
cs
xor
popa
lock
xchg
pop
jo
lret
jnp
jecxz
test
adc
jo
adc
idivb
loope
ds
call
and
incl
inc
sbb
add
aaa
cmp
lahf
leave
add
pop
shlb
arpl
adc
inc
sub
insb
or
pop
es
mov
mov
idivl
push
and
aad
into
jmp
lock
popa
dec
mov
in
stos
neg
fwait
dec
push
stos
pop
cltd
sub
push
aaa
cmp
es
insl
out
jmp
mov
out
push
push
push
xor
mov
outsl
je
orl
dec
sar
in
inc
mov
repz
loopne
push
stc
xor
push
stos
jecxz
mov
cltd
xchg
fbstp
jge
notb
dec
add
cli
lock
jecxz
cmpsl
movsb
mov
pop
cmpsb
mov
add
mov
nop
cmp
mov
mov
sarl
push
insl
fwait
inc
lods
int3
out
jge
push
mov
pusha
ljmp
inc
add
mov
and
movsl
popf
xchg
xlat
inc
lds
mov
xor
add
or
and
or
daa
orb
testl
aaa
inc
adcl
lret
call
cli
jmp
out
addr16
push
fcmove
fs
popa
adc
std
loope
rolb
pop
mov
push
xor
shlb
xchg
and
in
lahf
int
pop
test
stos
lods
test
outsl
test
mov
ljmp
lds
fsubrp
push
daa
dec
xchg
push
add
fmul
xor
insl
jb
cmp
xor
add
int3
adc
pop
pushf
iret
dec
dec
je
cmp
insl
hlt
adc
mul
not
loope
out
sbb
in
jnp
cli
ret
push
xchg
mov
push
lock
mov
int
xchg
xor
jl
cmc
mov
add
dec
jne
imul
repnz
mov
xorl
jne
negl
or
push
lds
add
adc
and
jns
out
xor
jle
sub
lods
pop
inc
inc
inc
inc
or
int
aas
dec
or
popa
fcompl
shll
cmpsl
cli
filds
outsl
jns
jmp
mov
daa
int
sbb
fnstcw
bound
out
cli
in
lahf
inc
pop
mov
or
popa
sar
pop
dec
push
mov
xchg
mov
ret
or
scas
cmp
call
jnp
insl
mov
les
lds
xor
ss
dec
outsb
negl
dec
leave
insl
jge
sbb
mov
pop
scas
popa
cmp
out
or
sbb
mov
cli
or
jo
addr16
leave
xchg
xchg
mov
lock
outsl
lahf
pop
sysexit
adcb
sti
fcomps
popf
add
jl
mov
xchg
xlat
and
mov
and
push
jne
dec
mov
mov
or
push
or
mov
xchg
xchg
sahf
xlat
fidivrl
daa
outsb
cmp
es
pop
pop
enter
shlb
xor
jo
jb
jns
test
push
iret
test
and
mov
dec
shrl
int
mov
dec
jmp
aas
xchg
lret
jmp
mov
jne
push
sub
dec
lret
or
jp
xor
inc
and
xchg
jp
addr16
scas
pop
mov
sbb
bound
nop
mov
cmp
jne
fmuls
gs
inc
enter
aaa
adc
hlt
xchg
pop
jle
int3
sti
add
mov
aad
inc
lods
in
add
adc
pop
jo
adc
adc
mov
lcall
pop
int3
add
pop
pop
pop
fsubs
call
jb
dec
rolb
pop
frstor
imull
fucomip
js
imul
sbb
push
push
scas
xlat
mov
xor
mov
ret
jge
fmuls
push
jns
or
scas
mov
xchg
andl
or
in
call
stos
loopne
imul
leave
rcrb
sahf
test
push
mov
aam
mov
loopnew
fistps
daa
mov
mov
push
pop
xchg
call
test
sbb
fdivs
cmp
test
push
adc
inc
mov
pusha
add
inc
hlt
sbb
jmp
rcrb
shrl
mov
xor
ret
mov
mov
push
cltd
insl
sbb
cld
fisttps
std
xor
sbb
xchg
mov
hlt
jne
popa
loop
das
cmp
test
ja
into
out
sbb
pushf
aaa
cmpsb
rclb
inc
or
cmpb
js
fldl2e
pop
push
mov
movb
cmpsb
inc
mov
mov
and
add
pop
push
add
mov
fisubl
jmp
imul
jmp
mov
pop
cmpsl
les
add
xlat
xchg
xchg
in
mov
icebp
shrb
out
mov
test
pop
pop
gs
sti
and
ficompl
lds
mov
xchg
iret
pop
or
in
repnz
mov
mov
nop
mov
xchg
jl
push
enter
outsl
loopne
jno
inc
xchg
lock
pop
jnp
pushf
push
push
lret
adc
sub
push
jne
das
cmc
sbb
scas
cmpsb
mov
dec
movsb
jb
imulb
fildl
sub
fistl
je
xchg
inc
mov
mov
das
mov
incb
pop
dec
std
pop
xor
notl
pop
sub
add
lahf
push
jmp
cmpsb
mov
dec
push
mov
sub
int3
insb
rclb
push
mov
loopne
lods
lock
data16
mov
ds
add
or
in
lods
adc
test
hlt
mov
sub
rcll
jg
xchg
scas
jb
xchg
mov
arpl
mov
movsl
dec
mov
push
fwait
popa
and
outsb
arpl
test
sub
and
int3
out
mov
cmp
or
mov
jle
inc
jnp
scas
ss
cwtl
and
ret
mov
push
faddl
pop
push
rolb
adc
and
jae
jecxz
out
enter
mov
pop
dec
push
daa
mov
repz
shrl
or
sub
mov
cs
imul
jge
cs
test
cmp
mov
out
aaa
fs
dec
loopne
icebp
push
xchg
lds
dec
add
adc
push
int
cmp
push
fsts
inc
push
push
pop
in
fcmovnb
dec
pop
push
loope
test
fwait
xor
and
stc
in
rorb
sbbb
aaa
sbb
popf
sub
jns
dec
inc
popf
fldcw
sti
mov
xchg
iret
cs
dec
cmc
pop
dec
test
xchg
mov
xor
xchg
call
inc
sbb
xor
mov
lock
sbb
mov
sbb
push
add
subl
and
inc
mov
sbb
pusha
mov
push
pop
fcoml
xchg
or
lods
add
in
push
xchg
cwtl
sub
shll
test
test
pop
mov
clc
and
lret
sahf
mov
mov
subl
inc
adc
cs
mov
test
xchg
stc
arpl
and
mov
mov
sahf
test
pop
dec
mov
inc
jns
adc
and
xlat
inc
cltd
loope
lret
pop
xor
pop
xchg
lahf
aam
mov
adc
insb
fistps
adc
cltd
jno
repz
add
push
sbb
stc
scas
pop
pop
push
movsl
into
fsubp
xchg
xor
jae
rolb
add
popa
lea
xor
out
js
add
ficomps
shrl
xchg
add
adc
cmp
sub
adc
push
add
mov
fistpll
mov
xor
sub
jge
jb
test
inc
or
bnd
xor
pmaxub
or
pop
and
xor
adc
daa
push
jg
fstpt
pop
scas
into
mov
mov
test
xchg
jno
lods
sub
fistpll
and
sub
stos
outsb
lock
add
int
xlat
aas
sbb
add
cltd
inc
cmpsb
mov
inc
rep
cmp
pop
and
scas
loopne
ss
sti
movhps
imul
cmp
adc
jo
faddl
je
xorb
adc
std
lahf
pushf
in
rcll
out
lods
push
cmp
cmpsl
mov
shr
or
cld
or
rolb
dec
aaa
mov
push
clc
jnp
push
repz
mov
js
add
imul
dec
clc
sub
mov
inc
sub
shrb
das
sub
jne
clc
sbb
dec
pop
or
pushf
jl
daa
mov
scas
cltd
sahf
add
or
pop
aad
ds
xchg
jbe
jle
jecxz
dec
fiaddl
rcrb
adc
iret
icebp
rorl
sub
sbb
xchg
mov
mov
fidivrl
mov
clc
pop
push
mov
cs
mov
adc
scas
scas
sbb
mov
xchg
ljmp
mov
and
xor
cmp
fcoml
sub
mov
subl
fdivrp
push
inc
pop
cmp
pop
mov
fists
and
jb
add
sub
xchg
popf
mov
xchg
xor
inc
je
adc
inc
cmc
dec
pop
mov
dec
cwtl
sbb
xor
inc
lods
mov
fs
inc
jbe
inc
shlb
add
mov
pop
lcall
bound
xchg
clc
push
movd
add
xchg
fwait
sahf
pop
adc
nop
or
cmpsb
xchg
mov
sbb
pop
clc
mov
cmp
cmp
pushf
jg
imul
fmull
and
into
fisubrs
or
jp
mov
jbe
add
int
cmpsb
xor
leave
dec
repz
xchg
cmpsb
push
push
fisttpl
cmp
insl
mov
sbb
xor
repz
mov
sbb
mov
cwtl
adc
test
test
std
add
sti
enter
sbb
ds
inc
mov
mov
mov
add
mov
dec
int3
mov
enter
mov
divb
and
sarb
cltd
mov
dec
fwait
into
xor
popf
xchg
sbb
and
scas
inc
clc
adc
fwait
inc
jne
int3
fxch
fimuls
inc
sbb
jle
lods
cmp
arpl
push
push
lock
pop
xchg
in
adc
inc
dec
cmp
cmpsl
mov
ffreep
or
mov
out
mov
ljmp
sar
xor
jae
icebp
es
fsubrs
ja
push
in
dec
push
pushf
mov
cmpl
add
push
lahf
popf
mov
jae
in
pop
jne
rolb
jns
insb
mov
xor
into
rcrl
cmpsl
out
psubb
mov
add
ja
cmc
xchg
test
scas
lret
push
dec
add
movsl
push
je
notb
add
pushf
leave
bound
or
push
push
inc
mov
xchg
stos
jge
inc
add
adcb
stos
clc
xchg
pop
xchg
mov
adc
je
push
jae
pop
fadd
inc
es
pop
pop
xchg
or
add
ret
add
ss
mov
push
jae
test
pusha
jbe
xchg
imul
and
lods
pop
jne
shlb
pop
insb
ficomps
fs
adc
dec
mov
add
in
in
dec
pop
mov
inc
std
daa
pop
push
fcomps
test
push
push
psubusb
outsl
add
cmp
aas
rcrb
and
ljmp
sbb
loopne
lret
test
pop
outsl
imul
ds
mov
inc
ret
test
ficoms
ret
and
inc
imul
or
mov
enter
mov
repz
sub
mov
out
rorb
mov
pop
push
sbb
lret
pop
fsubl
xor
and
sub
test
pop
or
cmp
pop
push
cmc
addr16
pop
iret
dec
in
xchg
ja
lock
and
imul
ret
xchg
int
mov
xor
out
lcall
xlat
inc
mov
jnp
push
inc
adc
cmp
cs
add
test
dec
stc
std
mov
imul
outsl
push
dec
scas
xchg
xchg
in
push
and
jmp
sbb
stc
inc
sub
cwtl
arpl
pusha
iret
adc
cmp
iret
fnstcw
ret
test
xor
inc
and
pop
pop
pop
mov
cwtl
into
rclb
mov
into
inc
xor
pop
push
mov
pop
jae
add
mov
out
cmp
imul
jmp
aad
xor
scas
in
out
push
xor
jns
xchg
add
outsb
ret
fistpll
dec
loope
sarl
jmp
roll
cmpsb
sub
int
and
call
push
loope
faddl
push
sub
insl
mov
scas
ljmp
mov
addb
mov
dec
cwtl
xchg
bound
pop
mov
jne
andl
inc
sahf
xchg
sub
lahf
addr16
jns
lret
and
fs
outsl
xchg
add
adc
lahf
aaa
sbb
lcall
mov
mov
jge
aam
xor
inc
call
fistl
adc
rolb
sub
outsl
mov
ja
and
arpl
cmp
in
test
sbb
pop
shrl
adc
cs
xchg
int
or
hlt
ds
outsl
push
adc
enter
inc
call
mov
mov
jns
pusha
inc
cmp
xchg
fadds
xor
insl
and
adc
flds
fldt
pop
sub
dec
cs
popa
sub
scas
aam
add
or
inc
out
inc
cmp
sbb
pop
sub
movsb
sub
leave
inc
fists
cwtl
pop
push
test
jne
sbb
sub
xor
movsl
cmpsb
out
and
pop
cmp
mov
mov
out
fists
rcrl
jne
dec
push
mov
cmc
mov
pop
iret
nop
int
lock
mov
rcrb
jb
mov
nop
sub
cmp
dec
inc
add
jl
cmp
adc
jo
sbb
jnp
repnz
pop
scas
and
cmp
mov
sub
xchg
dec
out
repz
cmpsl
add
test
and
add
inc
mov
mov
mov
shr
out
sub
fldl
xor
xor
mov
xchg
inc
ret
add
pop
out
jmp
sbb
ficomps
int3
xchg
and
dec
scas
pushf
mov
push
or
inc
or
xor
sbb
add
insb
decl
sub
mov
stos
lock
adc
sbb
add
cmp
dec
and
push
pusha
or
sbb
mov
arpl
cmp
sub
xchg
pop
iret
pop
xchg
imul
pop
cli
mov
pop
mov
sbb
cmpsl
push
jg
pop
mov
ja
xor
fsts
jle
sub
jmp
mov
lock
mov
add
xchg
adc
sub
sahf
or
sub
ja
popa
jnp
cmp
out
fwait
in
andb
test
fiaddl
mov
xchg
ficompl
test
movsl
push
cld
adc
adc
mov
xor
pushf
sti
outsb
inc
adc
sub
pop
lret
test
stos
inc
cli
cmc
outsb
fstpt
jns
call
sbb
add
mov
xor
fcmovnu
dec
jge
mov
dec
jb
scas
dec
lock
jp
mov
or
xchg
out
ret
ficoml
in
sar
or
addr16
pushf
mov
aad
fs
dec
rcr
or
ret
dec
and
jno
sbb
xor
push
jnp
in
push
std
xor
jge
gs
int
sbb
pop
jle
les
xor
bound
imul
repnz
mov
adc
xchg
out
inc
into
and
ljmp
jnp
dec
push
and
call
repnz
out
into
test
stos
scas
xchg
sti
cmp
jge
mov
mov
rorb
je
mulb
lcall
lea
dec
inc
mov
rorl
nop
pop
je
scas
jg
icebp
mov
gs
stos
call
mov
jbe,pt
fcompl
in
cvtps2pi
repz
dec
mov
pop
popf
inc
lods
cmp
dec
jns
sahf
push
inc
push
fsubs
mov
lret
loope
test
outsl
icebp
mov
mov
sub
shll
mov
clc
arpl
fdivrp
lret
test
adc
aas
pop
lahf
shl
or
into
int
mov
and
xchg
pop
pushf
pop
pushl
sbb
add
sbb
mov
sbb
dec
out
push
cmp
ret
cltd
sub
loop
sti
shl
and
xchg
jns
jns
jg
jnp
lock
lret
lcall
lock
sbb
dec
outsl
das
sub
pop
add
loope
pop
or
dec
test
mov
xor
lea
push
out
add
mov
cmp
ret
pusha
jecxz
mov
pop
fwait
cmpsl
arpl
outsl
mov
ret
or
pop
xor
lcall
das
lds
imul
les
sbb
mov
push
cli
pop
bswap
jg,pt
mov
enter
jns
inc
mov
jo
rol
mov
fs
xor
fs
sub
xchg
pop
ja
jp
push
cmp
les
add
mov
sub
cmpsb
pop
jno
shl
xchg
xchg
popf
xchg
ljmp
stos
inc
xor
enter
js
aad
imul
dec
cltd
sbb
pop
adc
fidivl
mov
hlt
mulb
jecxz
pop
inc
dec
xchg
pop
repnz
mov
movsb
push
ret
sahf
jmp
iret
xchg
lahf
inc
fistl
sub
daa
loope
ljmp
inc
xlat
push
popf
add
jbe
dec
nop
les
xor
xchg
test
loop
mov
idivb
addr16
bound
int
sbb
dec
fnstenv
and
int3
sbb
or
mov
mov
movsb
jmp
pop
jbe
lret
xor
cmp
and
rorb
mov
aam
repz
xor
adc
hlt
imulb
test
jmp
inc
jbe
fcoms
leave
int3
sbbl
add
push
xchg
adc
xchg
stc
aaa
add
mov
xor
in
jno
hlt
jp
cmp
inc
out
mov
pop
into
or
and
pop
das
inc
hlt
add
pop
bound
xor
ds
adc
pop
lea
mov
mov
out
xor
dec
sub
adc
mov
divb
inc
mov
sti
ja
push
mov
xor
push
and
std
popl
cld
out
cld
mov
xchg
lock
inc
sti
dec
mov
adc
ret
out
adc
push
pop
in
add
popa
cmpsl
add
lcall
mov
imul
lock
add
pop
pop
pushf
ljmp
int3
je
fcoms
insb
aam
scas
sbb
xchg
int3
loope
ljmp
jmp
in
lods
les
xor
dec
inc
loope
sub
jne
insl
addr16
jmp
insl
bound
mov
sbb
xor
jge
cmpsl
dec
stos
pop
mov
inc
gs
bound
or
push
cmp
adc
test
je
in
fistpl
es
dec
mov
sub
sub
xor
pop
mov
cltd
hlt
pop
jo
and
dec
lret
lds
dec
outsb
cmp
pop
repnz
fisubrs
pop
push
dec
mov
sbb
pop
loope
int
mov
mov
scas
or
mov
cmc
rolb
fidivrs
int3
xchg
cmpsl
sbb
push
in
pop
cld
fnsave
add
add
ret
inc
push
inc
jmp
subb
scas
push
sbb
insb
sbb
push
out
rcll
repnz
adc
mov
lahf
ss
cwtl
pop
stos
add
mov
xchg
pop
mov
pop
mov
aad
out
mov
add
inc
outsb
stos
out
mov
mov
dec
fwait
iret
add
dec
and
repnz
mov
and
mov
out
pushf
jno
call
mov
sbb
adc
ret
xchg
cmp
add
lret
dec
jp
dec
ds
mov
mov
sahf
cs
gs
mov
add
fnstsw
andl
sbb
mov
inc
aam
cld
jecxz
hlt
add
mov
lcall
cmp
cmc
iret
in
dec
xor
mov
mov
ljmp
lods
cmp
adc
xchg
rorb
int
and
adc
gs
push
mov
idivl
repz
lea
sub
jbe
dec
xchg
inc
aad
mov
roll
or
and
dec
daa
shll
dec
add
mov
lahf
pop
cli
adc
into
or
cmpsl
mov
cli
pop
loopne
mov
and
xchg
ss
mov
ljmp
push
fsubrl
dec
aam
lret
or
mov
lret
adc
pop
sub
stos
mov
adcb
mov
mov
fidivrl
add
add
stos
in
sbb
xchg
sub
mov
mov
js
jmp
lret
sti
mov
push
insb
icebp
aam
sbb
or
gs
ss
or
nop
subl
pop
jne
add
idivb
cmc
iret
loope
push
ret
add
clc
repz
and
lret
xlat
push
jl
and
mov
jmp
rcll
inc
in
push
cld
call
push
or
adcb
lret
pop
sbb
inc
jnp
mov
ret
loope
push
cmp
ljmp
pop
jo
jae
scas
in
rolb
mov
int3
push
leave
mov
or
leave
inc
lods
js
outsb
ja
xchg
mov
imulb
or
xorl
icebp
dec
dec
mov
pushf
cmpsl
in
and
rcrl
daa
notb
push
jecxz
aaa
pop
ljmp
or
pushf
rcll
lods
push
daa
sub
sub
mov
fnstcw
loopne
pushw
ret
mov
js
xor
imul
adc
xchg
xchg
mov
add
or
test
cmc
push
movsl
insb
addr16
lcall
mov
dec
cmp
das
pop
fsubrs
in
xor
in
xor
stos
pop
sub
fnsave
push
lods
jl
and
mov
jne
cmp
fdivrl
clc
mov
ljmp
sbb
sbb
out
jmp
dec
pop
aam
and
push
jmp
or
hlt
ds
mov
jle
xchg
dec
jmp
sbb
imul
repz
or
or
rcrl
push
jne
add
aam
pop
aam
cli
sub
pop
mov
sbb
xchg
xor
mov
push
in
xchg
aas
xchg
call
ret
mov
in
jb
xorb
jb
insl
push
pushf
pop
icebp
insl
dec
push
sub
cmpsb
in
xlat
sarb
cmp
xchg
cmp
lahf
push
mov
movsw
gs
sbb
jae
or
jns
mov
nop
aam
xchg
or
insb
ficompl
stos
arpl
hlt
iret
insb
sbb
xor
adc
js
dec
pop
hlt
cs
add
add
pop
adc
testb
sbb
push
and
pop
mov
pop
and
sbb
test
push
xor
mov
es
xchg
and
out
int3
add
add
inc
push
push
mov
fstpt
pushw
xchg
or
into
adc
and
and
push
std
and
dec
pop
mov
jge
insb
push
adc
xchg
faddl
pop
fwait
aas
in
roll
lahf
cmpsb
pop
and
push
out
outsb
sub
ds
loope
mov
inc
mov
arpl
out
cmp
pop
adc
iret
push
out
aas
inc
aam
inc
bound
push
shlb
mov
mulb
mov
out
out
insl
mov
and
cmp
iret
std
dec
jno
or
je
test
clc
and
rclb
inc
loop
jg
sub
xchg
inc
cmpsb
mov
push
imulb
call
pop
jne
mov
or
outsl
mov
lods
inc
mov
lahf
outsb
imul
mov
cmp
gs
mov
add
lcall
in
push
jge
and
xchg
dec
mov
cli
andl
out
ss
int
or
xor
jne
xor
mov
cli
mov
mov
out
aaa
cmp
stos
leave
aaa
clc
pop
stos
gs
orl
sub
jbe
call
dec
mov
and
jle
je
shlb
nop
push
mov
mov
adc
cmp
push
scas
cmp
out
cmp
ficoml
sub
loopne
stc
sub
ss
xor
out
dec
iret
jne
faddl
out
adc
inc
call
test
sbb
nop
push
lods
inc
bound
mov
es
fs
fcomps
in
fstl
fimull
xor
cmp
sbb
dec
inc
mov
xor
inc
daa
out
adc
pushf
jl
sbb
mov
push
in
out
lret
insl
movsl
gs
ljmp
cmp
jne
pop
mov
cmpsb
xchg
jecxz
cli
mulb
nop
mov
jno
pushf
in
dec
ss
pop
cmp
mov
adc
and
push
test
bound
cld
inc
jb
push
xchg
cs
rorl
insl
movl
subb
jp
inc
push
in
xlat
fnstenv
cmp
dec
loopne
xor
jl
fs
inc
in
sbb
icebp
or
inc
push
outsb
fisttps
in
jbe
outsb
insb
in
xchg
repz
pop
sbb
icebp
filds
or
dec
dec
xchg
je
sbb
es
push
push
insl
dec
les
push
jno
jl
popf
cld
xchg
mov
xchg
lret
or
jno
xchg
ljmp
iret
lahf
ljmp
pop
outsb
jg
xor
enter
les
sbb
enter
pop
inc
inc
shrl
test
jmp
or
test
shl
push
dec
mov
js
push
rcrb
xchg
shlb
mov
dec
add
xor
pop
std
or
insb
adc
push
xchg
push
test
in
lods
inc
mov
mov
xor
movsl
stos
test
add
int
std
inc
push
add
adc
pop
xor
hlt
jle
and
and
loope
out
imul
cmp
out
inc
orb
out
xchg
cmp
mov
aaa
and
aam
jl
mov
rorl
push
in
sbb
out
sti
push
mov
enter
push
sub
cmc
fs
sub
jo
loope
sbbl
je
mov
mov
mov
dec
aam
fimuls
out
add
sub
or
lock
mov
sbb
rcrb
pop
test
inc
sub
fs
mov
sbbl
dec
cmp
daa
das
cs
ja
pop
cmpsl
inc
sbb
test
sbb
call
or
lds
rcll
test
pop
imul
sub
inc
mov
icebp
fldenv
in
rolb
mov
es
push
test
in
lock
adc
pop
inc
push
daa
rol
clc
push
mov
lock
or
fidivrl
or
call
lahf
jo
cld
and
xor
popf
push
test
stc
sbb
into
sub
insb
mov
das
addr16
mov
xor
in
sbb
imulb
or
xchg
cwtl
sub
sub
xor
pop
in
out
pop
mov
test
icebp
shll
sbb
dec
pop
nop
je
jecxz
pusha
popl
jb
inc
daa
or
dec
and
test
outsl
sbb
adc
inc
dec
cmp
cltd
repnz
cmc
bound
jp
sbb
and
ja
add
xchg
ds
movntq
or
jo
xchg
cwtl
outsl
lock
add
jb
stos
fdivl
cmpsl
add
mov
mov
jnp
xchg
mov
push
loopne
pop
push
fwait
outsl
lret
pop
das
pop
sub
scas
pop
sahf
cmp
mov
fcmove
dec
add
lcall
clc
js
inc
je
pop
pop
aam
ljmp
aam
dec
cmp
pop
pop
xor
mov
call
adc
and
pop
and
cmp
test
cld
movsl
repnz
lret
pop
ds
sti
into
lcall
enter
aam
push
add
fcmovne
stos
imul
in
leave
push
mov
mov
loopne
jl
sub
cmc
subb
and
ds
and
jns
mov
and
push
subb
xor
test
shrd
xor
scas
popa
icebp
je
out
xchg
test
pop
imul
and
dec
fldl
and
push
lret
fisubrl
push
add
cld
lcall
pop
aaa
das
scas
inc
mov
call
outsl
fwait
repz
cmp
fidivrl
mov
popf
xchg
hlt
cmp
mov
nop
je
fcmovu
sbb
xor
imul
mov
insl
or
cld
and
scas
je
push
sub
push
mov
stos
jae
int
aam
push
mov
pop
jmp
xchg
mov
jo
xor
cltd
push
pop
scas
jg
lock
ss
fidivl
mov
mov
scas
push
loop
adc
call
mov
pop
adcl
je
push
or
ja
mov
inc
enter
rcrl
aaa
xor
mov
mov
mov
pop
popf
mov
push
and
pop
jno
mov
or
fcmovne
outsb
cwtl
clc
lret
lcall
aaa
nop
mov
jns
mov
push
add
popa
leave
xor
xor
test
pop
ret
movntq
rcll
mov
mov
mov
lret
xchg
cmp
dec
daa
das
std
in
loop
cmp
adc
les
dec
imul
pop
add
mov
sub
xchg
sbb
cwtl
cld
push
add
in
in
mov
cli
es
mov
jne
insb
jns
pop
jge
jnp
xor
xor
push
test
xchg
in
call
rcl
xlat
pop
mov
insl
sbb
imul
cmp
cmp
xor
adc
rcrb
sbb
push
in
push
rcr
imul
xchg
push
pop
gs
pusha
dec
or
xchg
mov
lahf
mov
scas
add
fwait
or
loope
sti
sbb
push
sbb
out
insb
jge
mov
clc
push
test
xchg
iret
lds
cmpsb
test
in
lock
push
adcb
or
subl
fisubl
call
mov
sbb
ficoms
sbb
lcall
push
sbb
xchg
repz
fs
jae
test
int3
outsb
test
insb
jecxz
pop
int
adc
adcl
je
movsb
mov
sub
std
inc
nop
out
mov
sahf
jecxz
cs
js
jne
jmp
mov
jne
fisubl
aas
ss
sbb
shrl
gs
cmovno
fcoms
lock
xor
and
ljmp
mov
sbb
push
mov
cwtl
mov
jne
std
cltd
shr
dec
push
arpl
rolb
popa
pop
and
stos
lret
loop
push
ds
jecxz
insl
mov
dec
fneni(8087
vmovmskps
mov
jp
jl
adc
outsb
jl
mov
ja
adc
xchg
jle
movb
cwtl
jge
pusha
push
xchg
cwtl
paddsw
ljmp
mov
ss
pop
xorb
stos
in
gs
pusha
in
xchg
xor
fdivl
imulb
aam
and
xchg
mov
adc
and
mov
jge
mov
dec
dec
mov
in
scas
fisubrs
icebp
lret
dec
cmp
scas
sahf
pop
xorl
cmp
aas
push
push
mov
imul
ss
dec
sbb
lods
push
xor
dec
movsl
mov
push
mov
cs
xchg
sub
nop
dec
fisubs
pusha
push
pop
mov
out
pop
mov
or
add
dec
sbb
pop
cs
mov
and
loop
sub
pop
or
aas
aas
test
pop
push
dec
add
cmc
ja
cmpsl
fdivrs
adc
lret
add
aaa
into
je
insb
enter
negl
das
push
orl
aam
mov
fld1
mov
dec
xor
xchg
xor
mov
mov
ds
clc
mov
pop
xor
sub
pop
mov
sbb
lahf
ficomps
adc
insl
cmpb
push
divb
shll
push
stos
out
es
or
dec
adc
and
repz
fucomip
sti
jle
pop
fstl
mov
scas
inc
insl
xchg
loope
and
pop
mov
dec
xchg
xchg
lods
add
pop
xor
faddl
lods
pop
pop
lods
sti
stos
leave
jne
in
test
call
jno
inc
dec
add
push
es
jmp
js
bnd
mov
jno
lods
fdivrs
stc
gs
loopne
fiaddl
xchg
cmp
test
cltd
mov
jns
rcr
inc
and
push
mov
lea
cld
dec
fdivrs
cmp
pusha
jne
or
pop
and
shl
cltd
jae
adc
sub
jo
sbbl
into
push
int3
imul
xor
sub
mov
pop
inc
movsb
or
fsubrl
stos
cmp
cmpsl
lea
dec
add
bound
mov
dec
inc
push
add
neg
std
out
das
jne
adc
out
sbb
out
fwait
call
or
out
adc
and
daa
adc
sub
adc
jp
xor
or
lods
cmp
xor
mov
adc
lcall
or
jecxz
rcll
xchg
jbe
push
adc
testb
cmp
mov
xorl
int3
aam
mov
repnz
scas
and
or
cmp
out
mov
es
adc
aas
mov
lods
stos
inc
into
loope
sti
iret
push
lret
fstpt
cwtl
test
push
into
imul
imull
gs
adc
cld
xchg
push
and
imul
and
movsb
stc
push
bndstx
outsl
sbb
fsts
pop
and
mov
sbb
xchg
out
xchg
cmpsl
add
enter
mov
orb
shlb
lods
outsb
push
shll
pop
mov
dec
hlt
sub
sbb
dec
xchg
mov
or
mov
insb
std
mov
scas
push
cmpsb
inc
inc
add
pop
inc
das
push
std
xor
pop
scas
dec
in
push
or
sub
jb
into
mov
mov
xchg
cli
inc
stos
fdiv
sbb
pop
dec
mov
mov
test
push
fmulp
inc
xchg
or
loopne
or
addr16
pop
dec
add
fs
mov
je
xchg
fistps
or
mov
lods
jge
pop
sbb
or
popa
lahf
push
gs
fisubrl
rcll
fidivl
sub
or
ds
test
mov
shr
test
cwtl
addr16
movsb
xor
jno
pop
mov
add
lods
push
rcll
mov
dec
xlat
and
dec
and
adc
sub
call
in
push
mov
push
loope
jne
test
or
out
mov
lcall
shll
or
pop
rclb
jmp
dec
mov
lret
dec
cli
xlat
int3
in
mov
mov
fists
cmp
lcall
adc
enter
fnstsw
out
xchg
mov
mov
fdivr
adc
mov
ja
in
push
jg
repz
or
mov
pop
cwtd
inc
dec
cs
loopne
pop
mov
shrl
lret
mov
or
cld
or
mov
dec
add
cwtl
aaa
fnstsw
xor
pusha
popf
sub
mov
cmpsb
jl
jge
hlt
sbb
das
dec
and
mov
jns
sbb
jbe
cmpl
xchg
dec
inc
jle
push
pushf
jecxz
lret
sbb
lods
or
adcb
in
inc
xchg
xchg
sbb
and
fsubp
inc
push
push
insl
mov
stos
pop
mov
mov
pop
push
ret
adc
push
shl
test
fsubr
jecxz
in
mov
adc
dec
lock
jo
sub
outsl
andb
out
std
scas
mov
sub
in
dec
cwtl
dec
or
stc
pop
mov
mov
adc
stos
fldcw
xchg
ljmp
jne
mov
cs
mov
pop
in
data16
leave
int
push
nop
lods
add
jmp
jp
test
in
incl
stos
mov
les
mov
sbb
push
jl
lahf
pop
and
addr16
push
pop
clc
pushf
and
mov
adc
sub
jb
cwtl
inc
dec
and
jge
cmp
lods
inc
add
jnp
jnp
gs
mov
int
mov
lods
inc
jnp
dec
lods
loopne
mov
xor
mov
pop
sbb
scas
loope
adc
push
out
mov
les
pushf
addl
pushf
movsl
jae
cmc
xor
ds
mov
xor
add
push
stos
ljmp
push
jl
outsb
mov
addr16
adc
cmp
push
call
or
dec
pop
loop
lret
test
cmp
fucomp
and
mov
xchg
jg
scas
aam
push
or
sub
cmc
mov
jl
cmc
call
stos
mov
cmpl
adc
fistl
cmp
loop
scas
aam
cmpsl
cmp
daa
lcall
cmc
add
lock
xor
repnz
stc
dec
mov
inc
pop
sbb
cmp
hlt
insb
pop
out
sbb
test
insl
or
in
imul
xchg
lret
lea
lahf
push
stc
arpl
les
jg
popa
mov
in
jne
hlt
ljmp
cwtl
add
jne
negb
stos
adc
in
nop
aam
lahf
push
mov
repnz
xchg
out
inc
push
sbb
sbb
ret
inc
addr16
jns
aam
xorl
jp
stos
dec
mov
rol
call
sub
jl
xchg
in
aas
xor
pop
das
adc
and
dec
out
data16
xchg
push
rcll
jp
in
repz
popa
iret
inc
jg
call
ds
push
or
or
fdivr
mov
or
int3
push
outsl
aam
lds
in
or
mov
outsb
mov
lahf
sahf
sub
pop
or
inc
xchg
stc
sbb
into
rorl
sub
in
mov
push
mov
adc
mov
push
dec
std
jmp
mov
mov
push
add
lods
push
or
mov
mov
xchg
xchg
out
movsb
pop
bound
dec
xchg
ljmp
fiadds
dec
jno
sbb
or
mov
icebp
mov
dec
rcrw
inc
in
or
mov
movsl
lret
ja
jmp
pop
pop
mov
imul
filds
push
out
push
inc
or
xchg
cltd
test
push
pushf
xor
cmp
mov
roll
stos
mov
sub
test
hlt
or
inc
cmp
lret
inc
in
cmpsl
test
jbe
loope
push
sbb
sbb
or
xchg
jl
stos
cmp
or
int
enter
jle
dec
inc
cmpsl
adc
push
mov
or
jge
div
jl
ret
mov
jp
sub
xchg
fsubp
cmp
jbe
scas
cmp
cmp
aam
mov
rorb
sbb
das
stos
test
lcall
jno
jmp
mov
test
fistpll
cs
add
add
movsb
dec
gs
mov
aaa
movsb
adc
sar
ja
jl
xor
or
pushf
int
orl
adc
xor
cmp
push
out
std
fcoml
rclb
xchg
mov
out
jl
pop
in
jge
jne
adc
and
pop
or
mov
dec
sbb
mov
xor
pushf
in
pop
pusha
push
or
xchg
test
cmp
daa
add
jns
pop
jnp
inc
jnp
add
mov
insl
in
sbb
in
inc
out
push
xor
cmp
mov
push
mov
push
mov
int3
sub
sbb
icebp
adc
jo
xchg
and
clc
sub
ja
aas
fldt
push
lea
jp
jnp
cmp
pop
xchg
sbb
sbb
scas
fldcw
inc
je
and
and
leave
pop
xchg
ret
movsb
popa
je
das
dec
jmp
pop
fptan
ja
and
sub
xor
movzbl
in
and
pop
cmp
and
addb
and
cmp
mov
xlat
cmp
in
lods
call
sub
ret
ret
shrb
sub
ja
pop
mov
testb
in
xchg
xchg
mov
push
adc
movsb
pop
aaa
adc
xor
sbb
add
outsb
fsubrl
add
add
out
mov
arpl
arpl
fsubs
mov
sbb
jb
xchg
xor
mov
sbb
fidivrs
in
xchg
sub
insl
movsb
and
leave
sbb
xor
push
or
movsl
xchg
lahf
cmpsb
dec
aam
sahf
stos
lcall
dec
test
mov
xor
push
ja
movsb
jns
imul
loope
shl
and
bound
adc
fdivs
mov
inc
jne
push
repnz
xchg
cmp
lret
insl
inc
pusha
xchg
fistpl
outsl
fxch
fstps
push
push
cmp
xchg
roll
out
ret
daa
fs
int3
out
xor
sbb
mov
cltd
ja
xchg
clc
sub
sbb
dec
or
fcmovb
mov
hlt
aaa
sub
fcmovu
jns
cmp
flds
movb
sbb
mov
imul
inc
aaa
push
adc
lock
jmp
cmp
jle,pt
in
loop
inc
lea
inc
jns
mov
xor
je
cmc
pop
gs
inc
inc
testb
ss
lea
mov
movsb
mov
pop
push
sbb
and
add
scas
xchg
push
xchg
mov
mov
in
mov
outsb
mov
fwait
lock
lret
mov
push
push
cmpsl
cwtl
incl
xlat
xchg
jns
push
mov
jmp
dec
std
add
stos
js
in
aam
sub
inc
and
jo
pop
enter
jmp
sbb
test
adc
adcb
mov
xor
jp
leave
int
fcmovbe
add
aam
cltd
jl
insl
fcomps
mov
mov
je
aas
cli
loope
add
xlat
fwait
sub
popf
dec
sub
mov
rcl
pop
call
sti
in
scas
add
mov
jge
adc
jl
mov
mov
and
xchg
std
or
xchg
aaa
fdivr
fwait
lret
out
dec
cmpsb
jne
lock
inc
push
shl
movsb
xchg
test
mov
xor
inc
xlat
pop
mov
js
into
xorb
inc
dec
pop
pop
dec
push
cmp
push
aam
jbe
inc
scas
sbb
ret
push
loop
and
dec
pop
adc
sub
nop
push
jg
imul
mov
stos
mov
jmp
inc
lret
xchg
adc
inc
js
dec
nop
jg
loop
js
jnp
into
inc
decb
test
push
pop
xlat
pop
xchg
push
cmpb
xchg
push
add
cli
pop
out
sub
lods
xor
dec
push
or
lods
clc
sub
dec
cmp
inc
lret
inc
aad
cmpsb
xchg
push
lret
mov
add
add
xchg
xchg
mov
mov
mov
int3
pop
fisubs
mulb
clc
mov
imulb
or
js
cmpl
inc
fucomi
jp
sbb
fdivp
push
test
push
outsb
popa
in
out
pushf
movsb
jb,pn
stos
xor
pushf
and
test
or
fimuls
adc
inc
mov
or
xor
sarl
test
dec
mov
pop
and
movsl
les
out
popa
into
pop
out
incl
aaa
push
fwait
insb
adc
jmp
push
movsb
ja
inc
cli
and
inc
jge
cwtl
ljmp
lret
push
out
mov
popa
and
into
jg
adc
mov
into
sub
jno
imul
es
pop
mov
ret
mov
dec
jb
test
ds
jae
mov
cltd
hlt
jge
lock
push
test
movsb
and
or
es
test
or
addr16
or
jecxz
psubw
outsl
push
jae
pop
pop
push
mov
jmp
outsl
pop
cmpsb
rolb
cmpb
cld
adc
inc
mov
mov
push
loope
loopne
in
scas
push
shlb
xchg
ds
cmpsl
cmpsb
push
sub
daa
fldl
add
js
mov
jns
gs
mov
stc
xchg
xor
fadd
ljmp
jo
jmp
std
and
mov
xchg
xchg
sub
xor
dec
shll
sbb
jmp
push
or
repnz
inc
cltd
xor
pop
jbe
pop
mov
lret
loope
inc
stos
daa
fadds
nop
mov
xchg
lds
jnp
hlt
cmpsb
stc
fwait
or
xchg
addl
sbbb
mov
dec
gs
pushf
leave
movsb
shrb
push
test
sub
mov
add
es
aaa
cli
xor
repnz
adc
dec
add
adc
cmp
jecxz
pop
rorb
xlat
data16
leave
das
push
cmp
cmpsb
xor
xchg
mov
sub
out
test
and
cmp
jp
and
test
outsb
cmp
push
mov
mov
push
push
lods
xchg
inc
adc
and
sarb
outsb
jno
insb
push
ja
cli
stos
cltd
pop
inc
xor
setnp
or
mov
push
rorl
in
jo
push
les
ret
mov
mov
out
negl
aad
aas
push
mov
outsl
frstor
pop
jmp
sub
lea
popf
pop
sub
insb
in
les
outsb
aas
pop
lods
dec
sbb
sbb
outsl
xchg
xchg
lods
cmc
sti
mov
mov
pop
mov
ficoml
adc
mov
xchg
leave
xchg
stos
outsb
das
xsavec
icebp
insl
sarl
sbbb
pop
inc
stc
or
stc
dec
sub
testb
xchg
enter
out
pop
add
jl
scas
adc
sub
and
and
out
xchg
cmpb
out
dec
mov
mov
xchg
test
xor
adc
pop
pop
imul
adc
jae
enter
mov
stos
jb
cltd
push
and
mov
jecxz
adc
shlb
sbb
pop
ja
cmpsb
jle
rcrl
cltd
lret
test
stos
in
into
jns
push
jo
mov
pop
mov
in
arpl
aad
sub
xchg
rolb
out
mov
adc
add
adc
enter
hlt
jns
jae
fsubs
movsl
mov
scas
call
movsb
mov
push
icebp
xchg
jnp
icebp
outsl
dec
push
js
fldl2t
pop
in
sub
stc
mov
adc
push
adc
test
add
test
insb
insb
ret
in
cmpsl
mov
ss
jnp
popf
cld
ljmp
outsb
call
shl
xchg
mov
inc
push
xchg
shrb
arpl
jecxz
stos
ljmp
iret
movsl
push
adc
and
sti
lods
rolb
cmp
rclb
arpl
jae
sbb
filds
nop
lret
stos
cmp
les
mov
ret
test
fildll
outsl
dec
push
leave
mov
popf
sahf
jae
dec
subl
in
lods
add
lods
mov
lea
scas
outsl
push
add
leave
call
mov
inc
or
pop
mov
mov
push
pop
je
mov
inc
rol
jge
inc
dec
ljmp
mov
lcall
cmp
sbb
inc
bnd
mov
dec
stos
cmp
jb
imul
mov
sub
pop
adc
mov
sbb
in
push
into
pop
jp
xchg
psrad
pop
inc
push
out
jns
andl
loop
aaa
hlt
jecxz
movsb
inc
sub
dec
xchg
or
pop
jmp
nop
lea
add
fildll
je
sbb
fcomip
xor
add
pop
push
mov
xchg
mov
std
pop
fiadds
xor
mov
test
cmp
xchg
insb
sub
or
mov
pop
cltd
push
js
add
dec
push
xlat
pop
push
push
icebp
fwait
push
push
push
xchg
push
push
aam
or
int
outsl
jmp
sbb
arpl
add
movsl
enter
add
add
in
xor
push
cmpsb
cmp
ret
mov
into
cmp
adc
cs
mov
jne
inc
cmp
cmp
jg
jle
or
mov
or
add
and
orb
sbb
es
push
call
shlb
sbb
popl
test
xchg
ss
fldt
insl
pop
pop
cmp
cmp
loop
xor
xchg
cmp
sbb
mov
dec
test
xchg
and
lock
clc
out
bound
lds
jp
and
pop
and
out
sti
push
arpl
and
cli
call
xchg
cltd
dec
je
cwtl
arpl
jne
and
xchg
mov
push
mov
imul
in
and
mov
sub
loop
pop
add
xor
adc
rcl
sub
xor
sbb
mov
in
mov
push
mov
mov
ljmp
and
in
pop
cmp
pop
rorb
cmpsb
add
cmpsl
test
stos
sub
xor
shll
mov
shlb
call
ficompl
sub
jb
lcall
popf
lret
xchg
cwtl
fs
sti
cmp
cltd
fwait
jne
stos
inc
xor
cmp
into
shlb
sbb
leave
adc
filds
fwait
xchg
add
add
fsub
cmpsl
fildl
cmpsl
xor
xchg
mov
in
mov
dec
je
lret
mov
adc
jo
push
lea
lret
xorl
sub
push
adc
xor
mov
jl
sbb
stos
push
aas
les
clc
adc
notl
or
add
xor
test
iret
mov
in
and
push
clc
jecxz
xlat
iret
xchg
jge
mov
shrl
addr16
pop
push
popf
in
or
push
ret
and
adc
enter
sbb
subl
js
pop
pop
jge
sub
popa
movsl
pop
sub
push
in
xchg
hlt
fmulp
adc
pop
aas
and
sub
xor
gs
adc
cmp
and
pop
xorb
aaa
xchg
out
and
sti
les
js
sbb
mov
xor
adc
sti
hlt
shlb
popf
ss
lret
mov
fildll
xorb
mov
cmp
and
mov
aad
cmp
add
fdecstp
cmpb
or
mov
mov
fwait
cmc
pop
cmpsb
mov
jmp
cmpb
pop
and
fwait
xchg
insb
shll
test
ss
jecxz
iret
ja
pop
jecxz
aam
cmpsb
cmpsb
mov
adc
sub
mov
dec
xor
aaa
in
aam
fidivrl
inc
sbb
pop
jecxz
mov
mov
nop
lods
daa
loopne
push
xor
fcompl
int3
mov
ja
std
xlat
dec
xor
lds
rol
mov
fidivl
outsb
lea
adc
mov
aas
sbb
fs
int
dec
hlt
lahf
mov
mov
std
cmp
subb
sub
aad
sub
xchg
enter
sub
aaa
sbb
out
mov
je
jp
repz
outsb
test
xchg
dec
and
push
int
mov
shlb
lahf
jne
inc
push
int
in
mov
sbb
test
aas
into
iret
in
cmpsl
xchg
movsb
add
cwtl
cwtl
cwtl
lahf
sub
ret
inc
lods
rcr
mov
into
movsb
jl
sahf
ror
xchg
add
dec
push
sub
push
aaa
pop
cmc
inc
jmp
std
mov
mov
push
jg
jp
outsl
leave
cmp
dec
idivb
sub
adc
dec
hlt
pop
cmpsb
cmp
push
jle
sub
imul
jne
push
pop
into
sbb
dec
sbb
mov
fnsave
mov
scas
iret
pushf
outsl
mov
mov
ss
mov
test
arpl
mulb
loop
cmpsb
sub
stc
sub
adc
fbstp
xchg
and
adc
out
sub
mov
push
adc
sbb
push
pop
negl
lret
inc
and
into
sti
out
clc
test
pusha
adc
out
lock
in
aaa
std
dec
or
sub
jge
ret
frstor
pop
add
cmpsb
out
loop
sahf
jl
sbb
pusha
xor
outsb
je
nop
notb
imul
iret
lods
loop
lods
incl
daa
ret
push
adc
xor
add
dec
xchg
adc
dec
mov
mov
lcall
cmp
es
and
aas
popa
push
jb
pop
mov
sbb
xor
ret
push
stc
flds
fildl
into
es
push
jecxz
or
scas
xchg
mov
cmc
or
sub
ret
or
iret
rorb
xchg
fimuls
lods
test
out
pop
mov
insb
clc
adc
pop
fsubrs
lea
in
lea
rcl
popf
jnp,pn
push
pop
inc
push
jo
sbb
add
in
cmp
jp
ljmp
jns
mov
mov
or
cmp
or
add
dec
hlt
sub
test
jne
mov
loopne
lret
or
cwtl
xlat
or
inc
xchg
mov
push
add
jge
in
push
iret
mov
xor
inc
or
sub
and
imul
sub
mov
cmp
dec
sbb
outsl
in
pop
push
and
sahf
mov
cmc
test
jmp
outsb
xor
mov
and
daa
js
insl
into
inc
jecxz
mov
aam
dec
xor
insl
jo
sub
idivb
test
divl
pusha
or
jne
xchg
fadds
or
xchg
adc
fistps
testb
mov
xor
hlt
adcb
dec
mov
lret
sbb
pop
in
xor
adc
dec
mov
jmp
push
pop
call
xchg
sbb
cmp
out
mov
adcl
cmp
in
loopne
and
jo
mov
xchg
push
sti
mov
or
addb
ret
xlat
bnd
cmpsb
inc
pop
mov
cmp
test
imul
mov
inc
std
lea
cmp
fadd
stos
mov
mov
push
imul
in
test
xor
pop
aaa
jne
ja
inc
out
mov
adc
dec
aaa
dec
in
mov
mov
xor
mov
lea
lea
lret
mov
ret
daa
loop
cltd
fmuls
dec
xchg
js
mov
mov
mov
lods
lock
mov
gs
jp
cmp
cmp
ror
mulb
loopne
push
scas
enter
xor
out
sub
adc
jge
dec
lods
xchg
xchg
mov
scas
icebp
adc
roll
push
iret
out
inc
jae
jns
or
mov
adc
dec
xor
mov
int3
pop
adc
xchg
cmc
fsts
call
addr16
jne
push
inc
mulb
dec
jnp
leave
push
jecxz
sbb
fwait
insb
and
lds
push
pop
cmpsl
adc
or
pop
scas
jbe
ret
sarl
add
outsw
lods
faddl
pop
lods
mov
jbe
adc
mov
stc
lcall
mov
data16
cmp
push
outsb
daa
and
dec
rcrl
popa
outsb
jle
test
jne
push
xchg
js
fwait
xor
jle
stos
out
imul
into
lcall
test
or
cli
cmp
xor
cmp
pop
orb
add
pop
or
mov
mov
xor
cmpsl
or
aad
xchg
aam
lcall
push
aam
call
mov
jmp
mov
or
jmp
scas
mov
jne
jge
call
fnstsw
mov
pusha
cmc
enter
or
jae
xchg
in
pop
mov
xor
cs
or
pop
loop
adc
mov
lahf
inc
les
jae
repz
and
jbe
mov
sbb
mov
stos
pop
gs
and
push
lahf
rorl
lahf
push
or
push
inc
sbb
nop
inc
pusha
add
cwtl
movsl
xchg
push
lret
cmpsb
pop
aas
fwait
xor
int3
cli
adc
jne
loope
fsubr
int3
stos
jecxz
in
xor
push
jecxz
iret
adc
add
lret
cmp
decl
int
or
pop
or
imul
cmp
lea
call
andb
mov
pusha
adc
shlb
sahf
aam
imul
rcl
lret
inc
push
push
outsb
rolb
mov
lret
mov
xchg
mull
push
data16
jge
addr16
repz
xlat
lods
stc
lock
test
jnp
outsb
scas
lock
sub
pop
aaa
dec
and
mov
add
or
adc
add
aad
lret
xor
dec
add
adc
clc
dec
mov
jo
cmp
int
inc
dec
fs
jno
mov
addr16
mov
dec
lret
fmull
mov
mov
ljmp
jo
rcrb
cmp
cltd
push
sub
mov
jmp
in
js
mov
add
jge
das
xor
cli
sarl
or
jno
in
aam
and
adc
es
or
sub
movsl
sti
fisubrs
or
jno
popa
sbb
ret
sbb
pop
aas
push
sub
pop
pop
lods
aaa
addr16
stc
jp
push
mov
push
frstor
cs
add
lods
mov
mov
add
lcall
adc
mov
fisubrl
mov
nop
or
xor
cmc
mov
push
add
lahf
mov
jg
sub
mov
and
movsb
test
xchg
rclb
jecxz
xor
aad
shl
push
popf
jmp
mov
bound
mov
shl
xchg
jbe
mov
and
orb
cs
xor
pop
and
insl
loopne
inc
mov
or
mov
fidivrs
dec
push
mov
mov
and
imul
or
movsb
sahf
addr16
pop
and
femms
mov
bound
mov
adc
dec
cmpsb
mov
inc
fcomip
push
pop
movsb
xor
and
cld
dec
push
int
mov
insb
mov
sbb
iret
popa
mov
repz
je
and
hlt
shrl
fimull
bound
and
jb
add
pushf
sub
jnp
test
popf
jo
sti
popa
sbb
adc
inc
xchg
neg
cmpsb
aaa
into
pop
pop
mov
mov
repnz
pusha
mov
out
cmp
adc
jmp
rcr
inc
mov
pop
insb
lahf
sub
xchg
jbe
movb
out
dec
hlt
push
lods
xor
inc
pop
adc
sar
addr16
mov
mov
mov
jg
dec
inc
cld
testl
and
cmp
sub
adc
mov
fsubrs
xlat
cmpsb
jecxz
js
bnd
sbb
inc
fcoms
lods
sub
jns
cmpsb
outsb
lcall
movsl
std
stos
fcoml
xor
fisubrl
addr16
rclb
jne
sbb
jecxz
adc
dec
cmp
mov
sbb
in
ret
lcall
add
in
scas
xor
fwait
pop
out
fs
mov
dec
xchg
dec
cmp
leave
mov
je
arpl
popa
decb
cld
in
aam
adc
mov
dec
and
add
xchg
pop
cld
test
ja
insb
dec
xlat
xchg
test
cmp
inc
cmc
clc
push
mov
sbb
leave
arpl
test
inc
out
or
adc
cmpsl
and
xlat
xchg
sete
sbb
cmp
inc
sar
idivl
add
sub
cmpsl
shll
xor
movsb
inc
repnz
pop
aam
insb
outsl
sub
aad
adc
adc
pop
add
sub
ljmp
mov
jo
in
and
sarb
test
mov
pop
push
out
xor
out
lods
mov
inc
inc
aas
fcmovu
mov
mov
sub
repnz
add
add
adc
sbb
ds
cmp
aad
xchg
out
sarl
popf
lods
cld
push
xchg
fadds
aam
mov
inc
int
dec
xchg
rorl
lcall
bound
jb
mov
ds
lods
sbb
insb
sub
pop
add
or
fdiv
gs
fwait
push
cmc
jge
and
mov
jbe
xchg
and
sub
mov
pop
fistpl
imul
testl
out
mov
mov
push
xchg
xlat
mov
ret
loop
and
je
sbb
and
negb
jecxz
push
xchg
jl
imul
jge
xchg
push
insb
mov
nop
inc
jns
cmc
jecxz
sub
xor
xor
out
add
ds
stos
insb
mov
sub
xor
shll
loop
inc
jne
clc
mov
pop
aam
sbb
loopne
test
imul
cld
nop
mov
popf
mov
data16
jge
outsl
mov
test
mov
lret
into
in
xlat
xor
mov
push
mov
add
add
cltd
and
shl
pushf
or
lcall
fnsave
andb
in
sub
pop
leave
in
sbb
ror
aas
xchg
mov
xor
aad
cmovle
or
mov
jno
insl
bound
aas
mov
add
xor
ss
xor
push
dec
loop
dec
mov
xchg
cmp
xchg
push
dec
outsb
rep
cmp
loopne
popf
movsl
sub
and
jae
sti
push
test
lds
scas
cmpsl
out
ss
ret
adc
incl
out
xchg
jo
int3
ljmp
lods
test
fstpl
dec
leave
mov
mov
sbb
fcoml
nop
js
fildl
and
repz
sbb
repz
xchg
in
and
xchg
or
dec
loop
jp
xchg
cmp
push
push
pop
out
sub
js
ds
dec
xlat
adc
pop
pop
mov
pop
movsb
repnz
xor
add
cmp
cmp
mov
aaa
push
cmp
rclb
out
mov
aam
pop
lahf
popf
mov
ret
pop
jg
sti
leave
and
mov
mov
ds
cmpsb
dec
push
lods
xchg
out
lahf
add
stos
int
lea
xchg
push
idivb
lcall
aam
dec
rclb
fs
fwait
jno
lcall
mov
jle
push
xor
xchg
or
pushf
repz
shrb
or
sbb
sbb
fwait
outsl
fs
and
dec
aam
shrb
mov
mov
xchg
fsubs
mov
lock
push
rclb
mov
jge
mov
jb
push
push
mov
xchg
xor
movsb
insl
mov
pop
sub
andb
sub
mov
pop
std
add
adc
sarb
push
sbb
xchg
pop
scas
mov
mov
jmp
cmp
sub
xchg
cmp
aam
int3
sbb
stos
sub
mov
shr
lea
in
stc
stos
jg
cmc
xor
stos
insb
movsl
jae
dec
xchg
push
enter
pop
sub
sbb
daa
jl
xchg
jns
loope
sbb
mov
pop
mov
push
push
pop
in
cmp
scas
inc
add
push
sahf
aas
fldl
sahf
aaa
dec
loopne
and
inc
es
cwtl
push
int
ja
fistpl
dec
push
divb
insb
mov
out
mov
xchg
aam
mov
jnp
sarb
cmp
pop
in
pop
mov
fidivs
lahf
int3
stos
ljmp
iret
fcomps
std
push
lahf
lahf
out
daa
gs
inc
pop
push
cmp
pop
das
mov
xchg
push
fimuls
mov
and
popa
cmp
lcallw
mov
ds
pusha
aaa
lcall
je
out
and
and
repnz
int3
loopne
loope
mov
lret
jl
shrl
and
cmp
lea
xchg
inc
xchg
nop
shl
or
lret
jae
mov
cmp
or
dec
pop
sbb
dec
loope
cmp
xlat
inc
mov
mov
push
mov
adc
outsb
fcoms
decb
nop
call
mov
add
insb
fnstcw
push
imul
flds
popf
and
pusha
and
leave
rcrl
push
ffree
mov
xchg
xor
movsl
xor
gs
in
enter
xchg
cmp
int
inc
gs
clc
popf
mov
scas
cmpsl
addr16
jle
sub
aaa
or
call
inc
daa
pop
imul
jns
pop
cmp
jge
adc
scas
jb
sub
sbb
insl
mov
fs
movsb
stc
daa
xor
xchg
jnp
mov
rcr
arpl
push
fucomp
xor
inc
lcall
dec
sub
lds
jg
pop
std
inc
and
push
xchg
out
sub
lahf
dec
ret
pop
out
mov
fmul
sbb
outsb
jne
lods
sbb
or
push
push
shr
mov
jecxz
add
js
xchg
cmc
lock
sbb
cs
xchg
jl
push
in
in
xchg
xchg
in
pop
iret
mov
sbb
and
pop
cmp
in
stos
into
cmp
pop
mov
xor
pop
ja
frstor
clc
es
popf
mov
add
dec
cmp
jno
sbb
inc
or
jmp
mov
lret
inc
mov
and
cmp
inc
lds
and
inc
jecxz
xchg
pop
adc
mov
or
sub
loope
cmpsl
dec
mov
push
out
cltd
fidivrl
mov
adc
cmp
rcrb
fstl
ja
sub
icebp
dec
imul
inc
inc
popf
cmp
bnd
mov
ror
cmp
push
cli
lock
and
push
add
lahf
aad
jno
ret
push
fcoms
rcrl
dec
test
int3
xor
clc
mov
push
out
je
mov
push
pop
jmp
fisttpll
mov
xchg
sahf
or
in
and
push
fcomp
adc
dec
push
stos
jmp
xor
sub
loopne
outsb
scas
hlt
out
into
or
shll
mov
addb
dec
fidivrl
adc
jnp
enter
cs
xor
push
loop
ret
dec
stc
mov
cwtl
mov
cmc
inc
scas
dec
xchg
cmc
pop
inc
jne
aas
push
enter
idiv
in
test
mov
fs
jecxz
push
mov
shl
adc
inc
lea
ret
sbb
aam
pop
ret
ret
xor
xor
sbb
lret
lods
scas
shl
imul
jo
outsb
cli
arpl
cmc
je
push
mov
movsb
cs
mov
scas
jg
mov
sarb
mov
shrl
frstor
mov
mov
pop
pop
push
mov
sub
imulb
or
mov
cmp
jns
mov
xchg
mov
and
stos
aam
js
pop
push
mov
and
js
adc
lret
fwait
lea
mov
adc
push
cli
push
imul
hlt
ljmp
sahf
cmp
idivb
add
push
or
lea
sub
daa
mov
cmp
bound
das
ja
nop
mov
mov
ja
dec
mov
or
out
or
clc
in
mov
movsb
pusha
mov
addr16
stos
cmpsb
mov
mov
lds
mov
or
sbb
jp
jmp
xor
mov
out
jbe
sbbl
pop
xor
push
into
sub
hlt
gs
dec
push
xor
pop
shr
mov
xchg
dec
push
mov
in
lea
bound
jno
aam
push
popa
shll
bound
add
mov
xchg
push
jae
insl
mov
adc
cmp
outsb
sbb
fstpt
loopne
push
lret
push
je
into
out
push
jecxz
outsb
mov
sub
out
ja
or
push
sbbb
stos
js
jne
and
cmp
mov
popf
sahf
add
jmp
jp
into
sub
add
into
into
in
or
insb
or
jge
out
sub
arpl
jo
ja
lds
clc
add
sub
imul
push
mov
cmp
fcomps
push
es
mov
test
inc
adc
shll
mov
out
fadds
popa
int3
mov
cwtl
mov
mov
jo
sbb
into
fwait
lock
add
mov
lret
mov
enter
rclb
ds
outsb
stc
xchg
cmpsl
das
push
xor
das
int3
in
push
ret
mov
push
inc
mov
push
or
popa
jmp
xchg
insl
gs
inc
sbb
jg
pop
dec
loope
dec
jmp
push
pop
mov
pop
adc
lock
sub
gs
fbstp
mov
mov
inc
arpl
popf
inc
lea
or
into
insl
outsb
in
outsl
inc
in
stos
loopne
lret
jg
sbb
pop
jle
mov
mov
call
stos
mov
mov
push
lock
xchg
add
sub
cmpl
inc
fsubrs
repnz
fldcw
mov
outsl
aad
jg
fsubrs
cmp
or
mov
outsb
fistl
shlb
xchg
mov
sahf
int
cmpsb
pop
or
mov
cmp
fistl
nop
outsl
sbb
or
movsb
and
or
fsubrl
lret
xchg
imul
in
cwtl
jo
shr
dec
xchg
repz
or
lahf
fists
fisubl
or
xchg
in
xorl
add
punpckhbw
adc
mov
push
lret
jl
pop
pop
or
xchg
jecxz
dec
lahf
into
and
cltd
and
mov
push
je
mov
dec
imul
mov
pop
xchg
repnz
jbe
push
mov
out
dec
xchg
xchg
lock
pop
add
mov
push
and
js
testb
push
test
push
out
xchg
faddp
jne
ljmp
int3
pop
pushf
out
inc
fucomip
or
stc
sbbl
ljmp
adc
out
adc
sbb
sarl
push
and
mov
test
ja
enter
in
pop
lret
push
std
imul
mov
cmp
adc
mov
mov
rclw
jbe
mov
test
mov
addr16
fwait
out
int
ficomps
cmp
xchg
mov
pop
int
pusha
inc
aaa
das
and
pop
rcrl
pop
into
out
xchg
std
loop
lds
xchg
mov
mov
insl
fistl
and
popf
scas
aad
xor
jno
mov
xchg
daa
sub
sti
movsb
xor
loopne
sbb
jg
dec
xor
mov
sbb
mov
mov
xlat
add
cmp
call
jae
sahf
jl
inc
call
icebp
arpl
into
xor
xchg
cmp
push
jp
insl
insl
jmp
sbb
mov
push
add
xor
and
push
or
xor
ds
addr16
dec
sub
scas
xor
or
ret
adc
out
cwtl
mov
fwait
adc
sbb
push
outsb
je
pusha
nop
in
push
test
mov
aad
jns
into
sar
adc
mov
sub
jmp
xor
sti
xchg
getsec
add
cmp
xchg
add
xchg
mov
sub
sub
dec
xor
std
mov
test
subb
mov
jb
jns
data16
loop
dec
dec
mov
popa
cmovno
sub
nop
loopne
pop
mov
fstl
push
pcmpgtd
sbb
cltd
push
rcrb
jno
sbb
ret
or
dec
sbb
jecxz
imul
outsl
cmp
mov
mov
adc
mov
adc
outsb
mov
push
mov
sub
inc
je
out
dec
sbb
add
cmp
xor
cmp
xchg
je
in
iret
sub
sbb
popf
outsb
or
inc
dec
sbb
or
outsl
push
pushf
dec
popa
lret
lret
insb
lcall
decl
enter
sbb
pop
out
lret
stos
cmp
inc
lcall
mov
and
movsl
xor
jns
mov
iret
jbe
dec
in
fidivl
mov
xchg
xchg
push
or
pop
and
notb
xchg
iret
jnp
xchg
sbb
cmp
jp
dec
or
fnstsw
rorl
cmp
jecxz
cwtl
pop
lds
xor
dec
mov
cld
fdivl
jp
imul
mov
cmp
or
dec
cwtl
mov
xor
pop
cmpsb
fs
cmp
notb
cmpsb
aam
mov
xor
xchg
test
int
test
aam
xor
add
xor
aad
lods
push
sbb
int
shlb
je
arpl
mov
push
cmpsl
cs
call
test
pop
pop
adc
push
add
cmp
and
pop
movsl
fsubrl
popa
pop
add
jmp
jl
push
popa
mov
repz
pushf
push
adc
mov
jae
adc
dec
and
xchg
cmc
rolb
mov
pop
addl
aam
lret
nop
loope
test
repnz
loope
cli
or
loopne
cltd
xchg
addr16
lahf
jmp
push
aaa
or
cmp
xor
or
sbb
stc
push
popf
popf
and
adc
jle
sub
in
sub
xchg
jae
push
pusha
fsubr
outsl
mov
fwait
and
jmp
insb
push
pop
push
mov
neg
movsb
stos
pop
lock
aas
and
cmp
adc
test
popa
jle
inc
cmp
and
mov
mov
jnp
xchg
lds
mov
popf
std
cltd
outsb
popf
inc
add
and
jmp
mov
and
loop
mov
fstps
mov
xorl
cmp
xor
dec
adc
xchg
inc
adc
jecxz
jle
in
mov
xorb
xor
mov
sbbl
cwtl
inc
add
and
inc
in
es
lcall
out
push
mov
push
mov
call
inc
daa
mov
mov
repnz
icebp
cs
cmp
mov
loop
std
inc
aad
dec
scas
shll
testb
dec
push
daa
mov
mov
adc
cltd
push
mov
xchg
cmc
push
mov
out
and
sahf
ds
hlt
or
aaa
xchg
jg
pop
add
mov
lock
movsb
daa
or
mov
lret
push
inc
call
jge
jmp
or
adc
es
ret
repnz
xor
jmp
dec
jge
mov
sbb
mov
loope
shrb
inc
xor
sub
arpl
mov
push
xor
das
std
cs
aas
sbb
scas
xchg
dec
aas
xor
shl
mov
jg
dec
inc
loopne
lret
or
mov
sbb
mov
xchg
aad
std
xor
dec
int
adc
xor
js
pop
leave
ficomps
mov
out
mov
mov
add
test
adc
test
or
dec
mov
xchg
sub
testb
lock
inc
inc
mov
imul
sub
adc
icebp
ds
les
repnz
mov
lcall
rorb
dec
test
jl
or
xchg
out
lock
mov
int
ljmp
pop
fistl
adc
pop
loope
adc
dec
adc
cld
xlat
cmpl
and
icebp
in
fwait
cmp
iret
cmp
and
adc
sub
je
imul
mov
lret
adc
jecxz
sub
std
ljmp
push
xchg
or
cltd
hlt
sub
idivl
xchg
stc
sar
add
mov
cltd
push
mov
jl
mov
add
cmp
fwait
scas
aas
lock
mov
stos
nop
into
mov
sbbl
sbbb
out
jbe
push
or
in
xchg
sub
cltd
push
mov
xorb
ret
repnz
scas
outsb
fnsave
aas
lret
mov
add
aaa
call
cli
xor
ds
insb
cmp
add
popf
xchg
adc
in
test
jmp
mov
ds
cltd
add
or
push
mov
stos
sbb
outsb
les
inc
aad
jnp
xchg
fisubrs
test
adc
sti
pop
fstps
imul
mov
sbb
sbb
stos
insl
xchg
je
inc
cmp
js
mov
je
inc
sarb
xor
and
outsl
ret
in
daa
sbb
dec
mov
xchg
add
mov
popf
pop
iret
enter
mov
push
lock
loop
jl
hlt
jno
mov
push
pusha
in
xor
mov
mov
push
loope
push
add
cld
std
je
lods
or
jb
mov
nop
orb
xor
cmp
mov
rcrl
pop
adcb
aam
xor
popf
mov
iret
push
jp
ja
repnz
sub
movb
bound
in
out
ljmp
dec
sbb
inc
in
adc
scas
rclb
ja
and
fs
xor
push
shr
add
aaa
mov
fdivrl
aaa
or
add
in
std
fsubs
clc
pop
aad
cli
lods
out
cmc
enter
insb
stos
inc
gs
and
sahf
loope
mov
shll
xchg
xlat
enter
inc
cmp
push
fstl
lods
xchg
es
icebp
jge
pop
inc
cmp
cmp
stc
daa
sub
xor
inc
daa
in
test
into
xchg
jl
jg
popa
xchg
fcompp
fildll
sub
xlat
dec
xchg
push
or
cli
mov
test
add
in
imul
imul
xchg
out
and
push
shll
mov
add
jecxz
xorb
mov
and
sbb
jmp
cmp
aaa
clc
lock
test
jp
push
divb
loopne
test
cltd
xchg
call
cli
adcl
cmc
test
int3
decl
imul
sub
or
stos
jae
jp
mov
imul
push
loop
xchg
jmp
in
adc
mov
inc
cmpsb
jmp
sbb
stos
sbb
ja
outsl
push
lods
jle
inc
pusha
fildl
nop
iret
loopne
pusha
sbbl
add
mov
cltd
loope
or
jle
iret
xchg
cmpsl
lock
cld
cli
inc
sbb
mov
jb
and
nop
pop
shrb
out
jmp
xchg
mov
xchg
aad
push
fisttpl
dec
ret
xchg
mov
dec
inc
sub
pop
ljmp
jmp
sbb
mov
sti
add
mov
insl
or
and
mov
es
rol
mov
int3
mov
dec
lods
hlt
pop
dec
lcall
inc
xor
enter
inc
pop
and
cmc
aaa
mov
sbb
int
dec
div
xlat
push
xor
lods
push
cmp
sub
in
shl
int
hlt
and
push
xchg
inc
adc
push
xor
mov
push
or
mov
sub
push
jnp
or
push
xchg
pop
inc
sub
push
pusha
cmp
mov
in
es
lret
pop
test
pop
or
icebp
push
das
iret
dec
inc
sbb
and
shrb
lret
xchg
jo
mov
inc
mov
pop
and
fwait
dec
jmp
fisubl
jp
push
scas
arpl
jl
mov
rolb
xor
lods
jo
push
data16
ss
sarb
popa
fmul
dec
adc
scas
lret
or
js
jne
es
or
lods
push
mov
cli
ljmp
jmp
push
cltd
subb
in
out
mov
lea
add
push
inc
movsb
and
int3
adc
xchg
mov
out
popf
lret
push
rolb
rorb
lea
js
aam
ljmp
ret
imul
mov
rcrl
dec
int3
outsb
aad
push
pop
inc
movsb
in
stos
mov
mov
addr16
popa
dec
sbb
sbb
sub
call
jmp
ljmp
je
jo
pusha
popa
cmp
dec
and
inc
push
mov
sbb
daa
ss
xorl
mov
pop
sub
mov
or
call
lods
mov
pop
fdivr
add
fs
add
push
fsubs
or
mov
cmp
sahf
pop
dec
pop
daa
cmp
adc
shll
or
jg
jno
or
leave
loopne
inc
xor
cld
cwtd
faddp
or
fwait
sbb
mov
das
out
inc
test
scas
lret
fcompl
xor
dec
insl
lea
loopne
rcr
mov
js
je
call
pop
or
shlb
xchg
jo
sub
mov
aaa
fistps
outsb
stc
mov
sbb
pop
inc
mov
aad
stc
in
xchg
dec
pop
mov
sub
dec
mov
test
pop
shll
jmp
push
inc
inc
jg
and
fbld
jbe
pusha
scas
cmpsl
test
push
push
in
sbb
push
enter
mov
jl
fsubs
adc
mov
mov
aam
aaa
cmp
pusha
stc
mov
xchg
int3
push
ljmp
mov
adc
push
cmp
mov
cmp
adc
stos
insb
mov
and
divl
mov
stos
sbb
or
dec
fistps
pop
jne
xchg
movsb
mov
push
adc
cltd
dec
popf
scas
test
stos
daa
push
or
mov
xlat
adc
sbb
dec
sbb
pop
addl
out
pop
inc
in
inc
in
repz
fidivrl
inc
mov
out
aad
imul
mov
icebp
outsl
fldcw
fs
mov
xchg
mov
ljmp
pop
outsl
pop
or
mov
xor
cltd
jg
sti
movntq
fnsetpm(287
je
adc
stos
inc
aas
inc
int3
test
pop
ds
test
cpuid
adcb
adc
cli
mov
int
aad
enter
pushf
pushf
push
test
push
sub
jno
hlt
adc
iret
stc
mov
lahf
sub
mov
popa
negl
jmp
dec
xchg
mov
jl
add
sti
mov
test
adc
sbbl
stos
test
cmp
sarb
push
insl
in
or
lods
sub
fildll
loopne
daa
imul
jp
fldcw
and
faddl
and
shlb
in
xchg
scas
out
mov
ljmp
cmp
jge
push
pop
daa
inc
aaa
sub
pop
sbb
jge
repz
push
jnp,pn
inc
sub
inc
shll
sbb
or
rcrl
js
in
cld
das
in
cli
lea
loope
xlat
xor
jnp
pop
lds
stc
jle
fistpl
push
sbb
int3
call
not
xchg
test
fwait
xchg
in
test
mov
push
cwtl
inc
jmp
ljmp
sub
cmpsl
inc
mov
jle
icebp
jns
inc
addr16
mov
loopne
icebp
outsl
sub
and
in
cmp
adc
loope
jbe
adc
xor
int3
mov
pop
jbe
pop
or
dec
popf
pop
or
pop
xchg
cmp
jbe
mov
fwait
xchg
lahf
jmp
out
inc
mov
scas
mov
mov
xchg
mov
scas
sbb
sar
arpl
push
movsl
adc
mov
or
divb
daa
stos
into
add
cli
int3
cmp
lods
inc
mov
sbb
and
cmpsb
insb
and
pop
push
xor
test
inc
ret
subl
mov
inc
pop
xor
ds
sbb
inc
pusha
sub
cmp
mov
push
push
sbb
or
mov
mov
jl
addr16
fcoml
cmp
hlt
enter
dec
cli
xchg
outsb
adc
mov
dec
js
loopne
xor
fidivrl
imul
push
xlat
rcrl
inc
adc
xchg
sub
mov
xchg
bound
or
std
loope
in
lds
jmp
dec
xchg
jmp
push
cli
mov
mov
push
or
into
ret
cltd
push
sub
xor
dec
jnp
adc
sbbb
cmp
sub
mov
xor
cli
jl
cmc
movb
push
enter
dec
imul
mov
add
mov
fmul
mov
daa
sbb
fildll
pushf
imull
push
daa
dec
fmulp
stc
sub
int3
or
jecxz
pusha
das
test
mov
int3
jns
test
test
shrb
dec
inc
add
ja
dec
mov
jno
adc
dec
hlt
dec
lret
jecxz
leave
out
jecxz
repz
inc
or
or
pop
inc
mov
sub
push
sub
mov
add
sarl
dec
jno
leave
sub
stos
testb
adc
int3
lods
enter
or
mov
leave
shlb
sbb
test
ljmp
dec
ss
inc
and
mov
push
mov
loope
push
icebp
xchg
cmpsb
arpl
fists
je
dec
fwait
mov
mov
sbb
out
inc
loope
mov
ds
fidivrl
and
call
stc
cmp
adc
jb
mov
cmpl
cltd
mov
movsl
lea
loope
xor
push
mov
push
notb
sahf
pop
loopne
mulb
dec
fisubl
rorb
daa
or
sub
popa
jge
std
cmpsb
jmp
out
ret
cmpsl
mov
mov
sub
mov
out
pushl
cmpsl
push
lods
rclb
arpl
jno
push
stos
or
movsb
leave
fldl
lock
notl
lods
data16
rclb
or
cltd
dec
out
pop
pop
cmp
imul
aas
mov
push
stos
cmp
xor
jmp
xchg
dec
flds
inc
mov
or
or
or
pushf
cltd
jbe,pn
gs
out
ljmp
mov
fsubr
loopne
sub
adc
imul
mov
push
jg
xchg
imul
mov
adc
sub
popf
jb
jg
push
dec
adc
cli
cwtl
aad
mov
popf
xor
xor
rolb
test
idiv
xchg
or
fs
and
add
pushf
xor
lods
inc
sets
inc
dec
sub
jge
pop
imul
lcall
mov
dec
xor
pop
mov
int
cmc
js
sub
or
mov
test
insb
hlt
xchg
xchg
bound
jbe
loop
inc
xchg
mov
jle
mov
shr
and
push
jl
fdivrl
mov
imul
ljmp
mov
andb
and
and
aad
popa
sub
std
xchg
jns
dec
push
jne
bound
push
enterw
scas
sub
vrcpps
andl
mov
cmp
enter
mov
xor
xchg
add
enter
out
sub
push
ret
or
lret
lcall
stos
clc
jno
js
fimuls
ret
push
mov
pop
imul
adc
loope
pusha
add
movsb
fmuls
pop
inc
imul
sub
mov
pop
dec
and
cltd
nop
jge
xor
cli
aas
std
and
xchg
mov
dec
ja
mov
shlb
into
dec
dec
lods
jbe
lds
andl
inc
mov
pop
inc
lret
adc
fdiv
sbb
cltd
xchg
dec
xchg
fucomi
xchg
dec
lahf
aas
push
adc
lret
mov
pop
mov
adc
out
jns
scas
sub
push
push
icebp
pop
push
roll
int
xor
cmp
test
pop
scas
into
das
mov
loope
push
mov
fsubs
cltd
enter
pop
xchg
in
xchg
cmp
mov
into
scas
ret
cld
call
pop
cli
sti
fadd
scas
cmp
inc
xor
and
or
mov
int3
mov
and
adc
inc
and
pop
sbbl
adc
xor
jne
mov
dec
out
fstpl
icebp
test
cmp
pop
xchg
adc
and
sbb
pop
repnz
jg
push
repnz
or
jle
aas
sbb
stos
push
jg
jle
and
stos
inc
fdiv
jae
mov
stos
clc
imul
cwtl
jns
dec
test
hlt
add
fwait
sub
dec
pop
push
stc
xor
inc
stos
sahf
fldcw
xlat
daa
cli
fsubrs
fucomp
or
xchg
mov
jno
push
daa
mov
mov
push
push
pop
cwtl
fsubr
aaa
push
adc
xchg
inc
mov
aad
mov
cmp
push
xlat
fsubrl
dec
int3
xlat
es
push
repz
jbe
add
pop
lods
add
loope
mov
sbb
imul
cwtl
xchg
mov
push
and
adc
out
jns
test
mov
inc
or
iret
loop
add
sbb
jecxz
push
or
loop
push
out
and
pop
push
inc
leave
mov
add
push
xor
mov
test
es
xor
lret
push
xchg
jns
sbb
mov
icebp
inc
dec
xor
dec
dec
jno
jno
mov
push
addl
frstpm(287
sbb
ret
roll
ficompl
aam
lods
icebp
inc
fsubl
std
xchg
test
pushf
es
xchg
jp
movsb
stos
pop
inc
pop
fldl
fistps
and
jmp
bnd
fwait
mov
push
xor
or
pop
jmp
insb
outsl
or
jl
sub
popf
cmp
adc
addr16
jge
mov
scas
pop
jg
lds
xlat
test
push
inc
sbb
push
mov
dec
cmpsl
xchg
repz
test
sub
imul
jnp
data16
xchg
mov
inc
stc
lret
movsb
insl
add
aas
xlat
roll
test
xchg
jbe
sub
scas
scas
xor
mov
mov
roll
loop
addr16
sub
sub
orb
stc
add
mov
xlat
push
test
pop
push
lea
xor
jge
adc
fisttps
push
dec
call
jnp
test
scas
sti
jl
push
inc
es
es
xchg
rclb
into
repnz
lds
pusha
or
cmp
dec
mov
fadds
jnp
push
cmp
mov
aas
fistps
push
sbb
lods
jl
repz
pop
add
sbbb
sarl
faddp
cwtl
lock
or
fs
shlb
mov
pop
data16
inc
mov
popf
mov
cmp
lds
cmpsl
lods
fldt
mov
scas
or
pop
iret
imul
aaa
mov
leave
jmp
iret
mov
cmc
jl
seto
cmpsl
enter
push
xor
add
test
test
xlat
cmp
test
imul
mov
mov
movsl
adc
mov
cmpsl
fcmovbe
push
test
stos
xor
movsl
ljmp
mov
push
mov
and
arpl
push
aas
bound
imulb
sub
inc
fs
repz
lret
mov
neg
pop
sahf
mov
fwait
push
fwait
inc
stc
shl
push
std
test
jecxz
sbb
fcoms
dec
ljmp
xchg
cmp
lock
sub
int
jmp
cmp
insb
stc
scas
xor
jne
add
push
subl
pop
xor
shl
jg
inc
xorl
lds
pop
or
mull
mov
mov
jnp
lock
dec
add
pop
mov
mov
push
ficompl
aam
cs
aaa
pop
lea
xchg
mov
insb
mov
aad
pop
dec
push
dec
pushf
je
dec
fisttps
cmp
or
jnp
and
sti
sti
mov
jns
dec
daa
sbb
sbb
sbb
pop
in
in
stos
sbb
pop
mov
stos
movsb
dec
lret
xor
cmp
mov
jne
lcall
mov
sbbl
mov
pop
les
or
cmp
push
mov
cwtl
mov
adc
rcll
jge
cmpsb
sbb
or
lock
lahf
mov
jge
dec
jno
lret
jg
or
mov
sub
and
sbbb
sahf
mov
jg
ss
inc
scas
les
repnz
pop
insb
jns
out
fwait
hlt
addr16
xchg
mov
add
neg
push
in
mov
clc
leave
insb
mov
cli
rcll
fsubr
mov
adc
add
inc
pop
fchs
add
subb
add
or
cmp
inc
std
loop
into
repz
jbe
pop
lcall
loopne
pop
hlt
icebp
popa
mov
lcall
aaa
push
sar
jnp
cmp
icebp
or
cmp
and
imul
jae
and
mov
mov
scas
out
mov
lcall
push
test
lock
loop
push
sbb
sahf
jno
out
mov
or
hlt
mov
cmp
dec
arpl
sub
lret
pop
lock
jl
dec
mov
movsb
outsb
aaa
in
call
dec
mov
or
fcomps
dec
stos
mov
adc
pushf
scas
xor
push
mov
mov
popf
jae
lret
dec
pop
imul
dec
int
rcl
popf
push
jbe
inc
dec
jl
xor
out
icebp
mov
mov
mov
adc
sbb
dec
adc
sub
sub
aaa
inc
or
add
fstps
loope
or
mov
sarb
jo
jns
xor
push
das
dec
cmp
jge
mov
inc
adc
sub
lods
jle
incb
pop
sub
cli
sub
imul
aad
mov
dec
add
cmpsb
xchg
jp
xchg
xchg
push
cwtl
enter
and
std
sbbb
lret
popf
xchg
repz
test
cmpsb
xchg
push
scas
push
pop
popa
fnstsw
pop
clc
sub
sbb
repnz
dec
imul
test
dec
inc
fsubs
inc
lret
mov
test
scas
push
movsb
lea
shrb
xchg
stc
mov
mov
fs
add
inc
call
sub
xor
ret
loop
stc
call
test
subl
imul
inc
xor
xchg
jb
push
lret
and
mov
lea
aam
addr16
ljmp
jnp
sahf
lods
les
cmp
jb
lods
dec
dec
jne
fs
loope
xchg
jl
sub
imul
jns
pop
mov
shlb
sub
jae
pop
loope
ja
outsb
std
cmp
sub
fildl
fnsave
mov
orb
and
cwtl
call
test
out
fisttpl
outsl
ljmp
xchg
jbe
mov
pop
gs
xor
test
xor
push
jb
adc
leave
inc
xchg
push
mov
lret
and
ret
hlt
or
lret
inc
xor
pop
int
addr16
fstpl
push
add
push
cld
hlt
cltd
sbb
sub
into
repz
loope
dec
dec
imul
test
cmpsb
in
dec
jp
dec
push
xor
and
cmp
movsb
test
bound
jl
mov
scas
push
mov
insb
xchg
sahf
fisubl
mov
jae
cmp
cli
aas
shll
jge
decl
rolb
adc
test
pop
andb
ljmp
push
ljmp
out
hlt
push
dec
pop
sbbl
inc
jbe
fisttps
jl
div
cmp
add
sarl
out
inc
sbb
shl
lds
and
iret
jno
sub
push
fisubs
subb
pop
mov
mov
loop
outsl
lods
push
xor
xor
imul
jl
inc
lods
loope
inc
inc
inc
push
xchg
sbb
add
lds
movsl
test
into
jp
mov
mov
je
cmpsl
fidivl
repz
out
mov
mov
ret
xchg
pop
push
mov
outsl
orb
dec
sahf
or
and
xor
popa
vmptrld
popa
jp
fucomi
cs
and
mov
pop
mov
ss
sub
push
addr16
dec
lahf
jb
popf
lret
shll
scas
sub
push
aam
rcrl
sub
fmul
xchg
loop
xchg
inc
jp
les
mov
adc
jl
cmp
and
jl
sbb
or
sbbb
xchg
xchg
dec
pop
lret
sbb
sbb
inc
jno
repz
mov
mov
and
xor
mov
xchg
sbb
or
push
in
cmp
sbb
lea
ret
push
jno
movsl
call
stc
add
mov
fs
push
pop
sub
daa
xchg
hlt
mov
push
cmp
jg,pn
jle
mov
or
cmc
lret
or
push
push
or
or
decl
pop
xor
dec
mov
movsb
mov
aaa
fdivp
int
das
rol
mov
fistpll
adc
in
jp
jae
mov
pop
jmp
test
loope
dec
call
pop
js
stc
hlt
in
outsb
lahf
scas
jecxz
insl
pop
push
or
or
in
mov
mov
pusha
sub
loope
cs
test
iret
imul
mov
jp
mov
pushf
xchg
mov
xchg
mov
lcall
dec
sbb
pushf
pop
xchg
out
int3
scas
push
aad
pop
daa
inc
loop
shlb
xor
sti
popf
push
mov
jle
xor
lcall
fs
enter
adc
inc
xcrypt-ctr
cmpsl
sbb
rorl
imul
inc
bound
mov
push
aam
jno
adc
pop
dec
sar
pop
dec
lea
sbbb
mov
in
jg
jl
in
ret
add
std
mov
out
in
lret
mov
ss
and
mov
stos
popf
loop
cmpsb
out
mov
mov
repnz
icebp
jle
dec
das
mov
inc
sbb
jp
inc
dec
mov
xlat
mov
push
fldenv
ret
stc
mov
ret
and
xchg
dec
lock
imul
jns
and
sub
aam
xchg
dec
and
push
cmpsl
cltd
jmp
cmp
js
imul
jb
push
sbb
out
sbb
push
mov
into
lds
mov
lcall
cmp
fxch
cli
jp
mov
in
lods
sti
xor
xchg
adc
loopne
xchg
mov
and
fcoms
pop
hlt
cmpsl
and
adc
xchg
and
iret
jns
shrl
mov
inc
into
cli
jae
mov
push
daa
mov
mov
clc
jae
add
push
xchg
mov
xlat
dec
out
sub
in
xchg
xchg
in
or
jo
clc
jle
push
jle
bound
loop
adcl
pop
and
and
fs
cltd
stos
ret
daa
jb
ljmp
iret
push
or
movsl
or
jae
and
xor
mov
cmpsb
xor
dec
iret
testb
adc
or
jg
push
outsl
add
mov
mov
mov
testb
inc
sbb
add
movsb
fistpl
aas
adc
dec
jb
push
mov
pop
sub
setbe
jge
loopne
cmp
lods
push
adc
jl
lods
sbb
dec
or
jp
jge
mov
or
jmp
cmc
sti
mov
cmpsl
test
push
call
test
in
adc
dec
filds
into
dec
pusha
andb
dec
cwtl
or
insb
cwtl
orl
mov
lods
dec
sbb
jns
and
scas
test
loopne
inc
rcrb
ljmp
test
mov
ret
mov
imul
xlat
sbb
xlat
xchg
sti
test
dec
imul
fcomip
add
mov
decb
xor
dec
and
imul
and
loopne
shll
popf
push
sahf
and
xor
dec
xor
fnstcw
push
cmp
notl
or
arpl
cmp
mov
enter
mov
adc
mov
jge
popa
jle
pop
fists
ret
jg
cs
cmpsb
fistl
jmp
xchg
pop
jmp
stc
xchg
sub
mov
insb
ror
cmc
bound
icebp
mov
mov
adc
adc
jae
loop
sbb
lret
in
add
addr16
xor
cld
cmp
ret
or
cmp
and
mov
jp
mov
jns
mov
pop
xor
insb
lahf
add
pop
and
jecxz
ds
adc
test
lock
insl
jb
pop
jno
aad
popf
pop
push
ds
pop
xor
rcr
std
jnp
adc
outsb
and
idivl
cmp
stc
adc
xor
das
jae
mov
mov
push
fxch
mov
mov
imul
pusha
sub
js
add
pop
sarl
dec
push
dec
push
sbb
fdivr
cmp
push
pop
xchg
cwtl
loope
sahf
mov
adc
dec
ja
sbb
rorb
pop
or
cmp
test
push
xchg
mov
xchg
scas
jae
fmuls
push
xchg
inc
lock
and
jmp
push
inc
iret
pop
inc
scas
rorl
fidivl
mov
stc
pushl
cwtl
and
xchg
mov
and
jae
dec
les
lcall
push
lods
unpcklps
aad
iret
sbb
hlt
das
xchg
xor
push
mov
adc
cmp
cmp
mov
sbb
or
mov
cld
jge
jecxz
and
jae
sar
in
inc
push
lcall
sar
leave
stos
rcrl
cmc
in
sbb
in
mov
push
sbb
outsb
inc
int
and
stos
out
cmc
jns
jne
xchg
pop
dec
mov
in
iret
or
jae
dec
xchg
mov
jne
xor
lcall
insb
ljmp
mov
shrb
adc
mov
inc
pop
pop
xor
cmc
shrl
adc
test
adc
adc
test
jns
test
cmp
pop
roll
leave
xor
xchg
in
jl
push
mov
pop
pop
mov
add
stc
loope
gs
or
repnz
inc
dec
scas
mov
cmc
pop
mov
mov
lahf
jae
mov
repnz
xchg
vpaddusw
ffree
pop
in
push
dec
cmc
and
bound
fisubrs
mov
pop
xchg
sub
fiaddl
repnz
cmp
mov
xor
xor
pop
outsb
je
xor
add
xchg
shll
jns
mov
pop
xchg
popf
xor
dec
das
sahf
sbb
loopne
scas
add
loop
mov
sahf
insb
movsl
lret
movsl
jl
insb
int3
pop
ljmp
add
fnstsw
push
pop
push
mov
jmp
fidivl
cmp
in
les
or
movsl
sbb
in
lret
xlat
xor
xor
movsl
mov
mov
jnp
jmp
and
lods
adcl
out
xor
push
fwait
or
mov
xchg
imul
mov
cmp
or
stos
or
test
sarb
minps
arpl
and
je
mov
push
addb
cmp
mov
pop
jne
cmpsb
lret
add
xor
jns
lods
cmp
push
push
or
movsb
popa
cmp
xor
xchg
int3
lods
cmpb
outsb
shll
fs
pop
jl
pop
inc
push
sub
aaa
imul
or
xor
nop
adc
call
sub
fldl
popa
adc
and
js
jecxz
sub
sti
test
into
repnz
jp
add
pop
adc
adc
jg
sub
mov
out
xchg
cli
rorb
fildll
rcrb
leave
test
jmp
data16
pop
mov
outsb
stc
pop
pop
adc
push
les
push
lret
subb
mov
add
xchg
sub
cmpb
leave
dec
std
push
jle
ret
mov
mov
sbb
lods
ret
ja
pop
notl
mov
sbbl
in
fsub
notb
sbb
andb
dec
jle
mov
fsubrs
cs
mov
inc
sub
lahf
xchg
movsl
sbb
mov
pop
mov
ss
adc
shll
or
mov
dec
push
mov
cwtl
in
jbe
int3
xlat
push
call
mov
dec
ljmp
pop
mov
lea
daa
imul
and
inc
jg
int3
and
js
pop
pop
sub
xor
mov
add
jne
xchg
inc
clc
pop
cwtl
sub
test
cli
scas
inc
and
adc
pusha
lods
test
repz
jle
fst
and
ja
xchg
and
jp
lea
xchg
xchg
loope
jo
jne
jge
movsl
ds
push
clc
pop
push
dec
rclb
sbb
mov
or
jp
mov
scas
add
je
cmp
js
jo
into
cmp
sbb
adc
in
dec
xor
adc
xlat
fisubl
sub
movsl
cmpsb
out
cmp
cwtl
fsts
jecxz
dec
xchg
pop
sub
pop
in
adc
push
xchg
jo
xchg
outsb
inc
loopne
cmp
jge
jo
inc
outsb
jo
push
xchg
mov
inc
std
sbb
sbb
out
push
mov
push
push
cwtl
nop
xor
arpl
push
idivl
cmp
iret
out
pop
push
cmc
enter
fs
jo
inc
fwait
aam
lcall
add
fstpt
xchg
mov
mov
clc
push
es
cmp
icebp
andb
ds
mulb
dec
sub
aas
fadds
dec
fnstenv
xor
stos
jnp
loopne
or
std
and
std
inc
call
fmuls
fisubl
mov
arpl
out
xchg
aad
dec
ja
sub
jg
mov
pop
and
xchg
lods
cltd
xchg
xchg
addr16
dec
pop
aam
mov
test
cmp
sub
jnp
fcomps
fdivl
clc
xor
xchg
or
sub
mov
or
adc
stos
into
fldenv
mov
shl
sbb
fwait
sub
sahf
sbb
fisttps
xor
and
add
mov
mov
outsb
loope
in
add
int
repnz
lock
xor
lock
push
xchg
pop
xchg
push
cli
cmp
scas
sub
sub
imul
bnd
rclb
and
jne
addr16
inc
out
into
mov
jno
cmp
sub
push
xchg
lahf
xchg
rorl
scas
mov
insb
xchg
hlt
cld
sbb
out
test
shlb
mov
push
cmp
mul
sbb
popa
dec
or
xchg
cmc
mull
sub
sti
xor
mov
sahf
neg
xchg
mov
int
fs
jbe
xor
js
mov
rcll
dec
fdivrl
test
insl
xorl
invd
les
lods
jmp
sbb
cmpsl
push
test
jecxz
mov
mov
test
add
repz
jb
cs
rclb
cmc
cmp
xchg
adc
or
scas
adc
nop
dec
push
xor
stc
dec
pusha
sarb
fcoml
lahf
clc
lcall
shlb
inc
roll
mov
add
test
mov
les
sbb
push
shrb
push
jae
leave
idivb
das
add
add
cmpsl
insb
sbb
mov
cli
xor
mov
add
mov
fsincos
jecxz
dec
in
sbb
dec
insl
pop
in
fldenv
mov
pop
push
xchg
xlat
xchg
sti
jns
loop
inc
enter
testb
clc
or
inc
dec
sti
cmp
mov
sbb
xchg
test
xchg
shrb
stc
mov
lcall
rcll
call
pop
ret
adc
popf
fdivl
loop
mov
mov
or
mov
push
sbb
hlt
or
daa
xor
xorb
jo
aad
xchg
pop
in
and
add
cmp
ljmp
jmp
rcll
push
call
mov
fstl
cmp
add
mov
jae
dec
inc
add
sub
mov
dec
iret
inc
shlb
rcr
mov
cmpsl
mov
test
sub
sbb
clc
xor
sbb
sbb
lret
adc
mov
sbb
shrl
std
pop
adc
push
push
loop
xchg
int3
and
shlb
inc
gs
add
jne
push
and
mov
decb
insb
dec
rclb
push
inc
mov
out
push
jl
sbb
rolb
adc
jne
cmp
jnp
mov
clc
movsl
mov
xchg
and
mov
pop
test
xor
fmuls
fs
outsb
or
cli
adc
and
fisttpl
fbstp
xchg
mov
fwait
jp
ljmp
mov
dec
aad
and
mov
dec
push
rcll
ret
lcall
sub
hlt
notl
filds
xor
xor
test
in
div
mov
je
and
lret
dec
scas
das
xorb
xchg
inc
jecxz
bound
je
lods
mov
dec
xor
pop
mov
mov
test
sbbl
pop
sbb
mov
sbb
lret
outsb
sbb
out
scas
adc
rcll
dec
mov
outsl
call
loope
adc
push
loopne
cmpsb
xchg
mov
cmp
and
outsl
inc
out
xor
in
enter
cmpsl
xchg
sti
cmpsl
inc
sub
ficoml
loope
push
fnsave
clc
mov
negl
das
leave
imul
mov
out
jcxz
lret
sbb
je
pop
cmovnp
lahf
repnz
jge
jbe
aam
loop
pop
into
xchg
add
push
shll
xchg
repz
mov
aam
cmovae
stos
cmpsb
das
shlb
clc
sbbl
or
lcall
orb
insl
aas
out
pusha
pop
rorb
sub
and
imul
test
lahf
mov
xor
imul
cmpsb
pusha
test
jp
ret
mov
inc
dec
lahf
movsb
xor
arpl
addr16
xadd
mov
cld
mov
and
mov
xchg
cmp
jbe
and
push
test
lret
in
dec
scas
mov
out
mov
int3
idivl
in
sub
cmp
mov
or
sub
scas
pop
fidivs
insb
adc
adc
sub
popf
adc
sub
push
sarl
add
adc
shrl
sbbl
and
dec
int3
repz
or
lret
stos
push
jle
dec
mov
dec
out
pop
shrb
push
ljmp
adc
das
movsb
mov
aaa
les
xor
movsb
jno
out
and
push
xor
pushf
xchg
arpl
call
jle
call
mov
mov
mov
jmp
les
xchg
mov
lret
and
push
pop
xchg
andl
dec
and
adc
mov
inc
mov
xchg
add
outsb
jecxz
cmp
lcall
shr
lock
ss
fcom
pop
ljmp
jge
adc
sbb
xchg
sub
adc
subl
call
sub
jl
and
push
test
out
xchg
sbb
cmpb
jns
adc
mov
or
and
mov
mov
cli
mov
mov
xor
fdivl
in
lret
pop
into
xor
fbstp
ret
std
out
jns
add
mov
mov
sti
insb
lods
xor
rolb
inc
jb
xchg
jp
lcall
int
jae
lds
push
add
pop
stos
push
inc
dec
lret
adc
push
xor
nop
inc
xchg
xchg
xchg
int
adc
loop
dec
out
jle
mov
add
add
jl
iret
pop
mov
push
sbb
bound
dec
push
std
cmp
cmp
and
lds
lods
jmp
cmp
xor
xor
leave
insl
inc
test
jne
icebp
cld
push
push
push
pop
mul
add
cmpsl
push
loopne
cmp
xchg
pop
mov
push
pop
lods
dec
xchg
sub
js
nop
bound
std
sbb
add
xor
iret
mov
test
mov
leave
ret
add
call
movsl
cmp
push
cli
fistpl
out
dec
aam
or
push
adc
and
xlat
adc
dec
roll
insb
pop
in
addr16
cmp
sub
das
xlat
repnz
dec
pushf
xchg
sarl
insb
jnp
xchg
loope
mov
mov
js
jle
and
test
jmp
pop
xor
stos
bound
xchg
jmp
mov
repnz
xor
enter
fisttpl
mov
into
xor
cld
repz
fsubs
setbe
aam
pop
insl
outsb
mov
daa
aam
lods
add
fstpl
dec
xchg
sbb
inc
cmp
xchg
ror
das
daa
popa
fs
xorb
ficompl
idivl
cmp
push
ja
cmc
and
adc
mov
xchg
inc
addb
rclb
mov
mov
add
cmp
es
stc
lock
insl
xor
out
sub
pop
jne
mov
imul
xorb
movsl
subl
xor
outsl
dec
xor
add
ret
imul
lods
dec
mov
ljmp
sub
aas
sub
adc
movsb
addl
lock
outsb
sub
cmpsb
enter
sbb
ja
xor
pushf
xor
outsl
pusha
cmpsl
mov
stc
lcall
daa
cmc
arpl
fstp
faddl
test
data16
add
push
loope
jp
lock
outsl
in
les
pop
ja
push
mov
bound
mov
clc
xchg
pop
push
in
jo
testb
iret
mov
sub
push
mov
imul
xor
cs
jnp
cmpsl
adc
iret
addb
into
pop
outsb
cmp
xchg
movsl
mov
xor
pop
add
mov
adc
xchg
xor
jge
adcb
cmpsw
sti
push
and
int
push
mov
mov
mov
jp
loopne
xor
rcl
arpl
cld
in
repnz
push
pusha
arpl
jl
imul
das
xchg
insb
add
jae
scas
int3
sahf
ret
jnp
daa
xlat
lods
stc
aam
push
jmp
int
inc
or
aaa
add
push
pop
repnz
test
in
in
push
cmpsl
push
jb
out
enter
repz
aam
or
aas
mov
mov
imull
bound
je
ss
add
repz
sbb
jmp
movsb
cmp
psrlw
test
in
arpl
test
sahf
sti
sub
hlt
mov
jns
orl
lahf
xchg
inc
xchg
lods
jg
iret
lds
xor
std
fdivl
push
mov
ljmp
add
and
in
dec
xchg
cltd
and
sub
pop
mov
xchg
cmpsl
sahf
stc
fistps
sbb
movsb
push
or
out
fcom
lahf
add
jl
xorl
aad
xor
dec
test
adc
stos
lret
sub
aaa
jne
fsubrl
lds
push
lret
adc
jno
loopne
mov
jle
pop
xchg
pushf
adc
imul
arpl
pop
xor
mov
sahf
or
mov
loop
xchg
inc
jmp
and
lods
mov
fwait
mov
pop
aaa
js
test
jg
cltd
sbb
xor
sub
xchg
repz
and
jg
and
mov
jmp
pop
push
sub
adc
cmc
loop
cmp
dec
outsb
mov
push
out
jecxz
mov
imul
ret
push
or
mov
jae
lods
in
jo
mov
jne
mov
adcl
hlt
mov
loopne
test
lahf
sbb
inc
lahf
aam
ljmp
push
add
sbb
pop
scas
call
shl
fs
xchg
imul
out
pusha
cli
rclb
div
pusha
std
sub
jecxz
jns
sbb
lcall
insb
fistpll
dec
jo
adc
push
inc
and
cld
mov
mov
data16
pop
cld
notb
mov
les
jo
ds
les
test
movsl
out
mov
add
scas
sbb
je
jae
insb
jo
mov
repz
loop
push
dec
add
dec
js
out
and
in
shrb
lret
mov
enter
jno
xchg
pop
pusha
outsl
addl
lods
sub
push
stos
mov
jno
arpl
xor
dec
add
aas
outsl
cmp
shlb
add
cmp
xchg
cmpsb
mov
lea
cmc
leave
and
push
test
inc
xor
inc
sbb
cwtl
negb
lret
adc
js
lock
push
orb
stos
lock
pop
and
test
pusha
add
inc
add
fadd
xchg
mov
mov
iret
add
shrl
mov
pop
add
into
dec
pop
jb
pushf
jecxz
out
pusha
fldcw
cmp
lods
xchg
sbb
mov
aaa
jmp
cmp
loopne
repz
mov
hlt
xor
mov
sub
int3
mov
cld
mov
mov
push
add
mov
sbb
cmp
ljmp
clc
push
adc
pop
add
fists
pop
lcall
ret
xchg
iret
pop
cmc
fldl
or
movsb
dec
push
inc
push
jmp
jp
xchg
mov
cmp
loopne
add
das
test
mov
jno
add
repz
es
xchg
sbb
jne
scas
mov
sbb
in
dec
bound
scas
push
or
add
movsl
int
mov
imul
ja
mov
or
xlat
into
out
js
xlat
cmp
fwait
adc
xorl
bound
mov
dec
aad
add
imull
xor
repz
loope
fucomi
mov
lods
push
xchg
clc
mov
movsl
cs
or
xchg
addr16
mov
jecxz
xchg
dec
jg
or
call
push
movl
jle
add
out
cld
jb
jo
repnz
and
addr16
mov
inc
push
lods
movsl
xor
aad
js
and
popl
outsb
in
fidivrs
daa
and
pop
rcl
or
enter
outsb
cmp
jns
or
push
je
cmp
shl
btr
lods
and
jmp
test
xchg
sbb
push
cmp
lods
and
sbb
xchg
fsubr
mov
mov
dec
dec
jae
and
jg
sbb
pop
push
pop
dec
iret
insl
pop
aaa
dec
movsb
and
paddw
push
sub
xchg
into
addr16
mov
sub
mov
push
aam
jg
imul
jne
adc
les
adc
out
gs
idivl
inc
ret
addr16
dec
sbb
lock
jbe
faddp
lods
loope
jecxz
jne
xchg
xchg
shll
cmp
adc
xchg
push
adc
xchg
mov
gs
lret
pop
shr
and
repz
pop
int
repz
stc
shlb
jecxz
push
repz
bound
insl
shrb
ja
jb
sub
out
cwtl
dec
scas
ficoml
cmp
and
addl
scas
lret
jnp
xchg
cmp
mov
and
mov
add
imul
and
arpl
fs
xor
sti
into
hlt
jbe
adc
inc
jl
repnz
mov
in
sbb
inc
xor
pop
or
xor
adc
in
int
xchg
aad
xchg
call
in
sarl
dec
jmp
and
mov
pusha
sub
sbb
mov
lods
mov
outsl
scas
sub
iret
lods
or
shrl
mov
into
xor
mov
adc
pusha
cmp
mov
addr16
aam
in
out
push
adcl
inc
nop
push
mov
sbb
ljmp
xor
jb
push
sbb
rorb
mov
out
mov
pop
sub
jg
or
ret
gs
dec
jne
loopne
int
out
jg
mov
mov
lea
adc
bound
pop
sti
xor
scas
icebp
loope
leave
and
fiadds
sub
outsl
adc
stc
xor
je
dec
mov
clc
dec
push
inc
or
mov
into
andb
or
ss
add
xor
or
test
loopne
adc
mov
jo
ss
mov
movsl
add
lret
mov
dec
dec
loop
add
clc
jno
or
cmpsl
jecxz
or
push
mov
fistl
mov
pop
repz
aaa
jle
sub
or
sub
inc
outsb
jg
xor
cmp
je
hlt
mov
mov
sub
iret
sahf
cmp
lret
imul
cmc
and
dec
insb
iret
sbb
insb
shlb
and
inc
shlb
mov
pop
test
js
ljmp
adcb
cmp
push
jae
jnp
sbb
xor
and
and
push
or
adc
mov
daa
leave
xchg
icebp
adc
dec
or
pop
imul
add
sti
ljmp
jecxz
mov
cmp
push
cmp
arpl
pop
cmp
icebp
xchg
mov
testb
addr16
loopne
cmc
scas
fldl
push
into
sbb
push
mov
shll
clc
xchg
mov
mov
jge
bound
cmp
cmp
add
sub
int
sbb
cmpsl
inc
mov
add
mov
scas
and
mov
jae
jecxz
insl
out
test
std
xlat
ds
ljmp
or
sahf
in
mov
xchg
pop
pop
test
out
push
cltd
cmpl
mov
nop
dec
or
and
pop
sub
sbb
lds
cmpsb
adc
push
outsb
push
std
sub
fabs
ljmp
test
mov
in
push
dec
dec
sar
dec
idivb
jns
xchg
mov
push
mov
repz
mov
insl
xor
call
fldt
mov
sbb
mov
dec
lea
push
fsin
cmpb
ljmp
adc
cmovae
sub
test
movsl
ret
sarb
jns
mov
ud1
test
jecxz
pop
sbb
gs
popa
add
lahf
das
movsb
mov
or
ret
mov
adc
test
jp
loop
sub
adc
loope
push
cmp
in
sahf
bound
mov
das
leave
mov
and
jp,pt
xlat
xlat
jb
jbe
jo
dec
lods
cmovg
cld
adc
jb
clc
and
jae
enter
ja
cmp
xchg
xchg
mov
mov
inc
inc
fstps
daa
imul
xor
adc
data16
push
mov
fildl
scas
pop
fdiv
pop
jno
cs
dec
sub
push
add
insb
xor
adc
mov
pop
lds
pop
sub
xorb
in
mov
jae
mov
leave
int3
pop
pop
sar
adc
mov
aam
aad
inc
sbb
pop
clc
mov
scas
pop
pop
jnp
call
enter
mov
addl
fs
out
or
xchg
jno
loop
mov
sub
or
mov
movsb
fbld
mov
andb
mov
and
aaa
into
loopne
fidivl
nop
lahf
inc
jl
mov
imul
pop
movups
sbb
cwtl
and
xchg
out
rorb
and
sti
jno
mov
dec
xor
hlt
mov
adc
adc
pop
out
data16
mov
cmp
mov
push
push
jp
test
xlat
mov
pop
pop
mov
mov
jle
fsubrs
aam
xchg
mov
mov
mov
js
xor
mov
jmp
js
or
lcall
rorl
fcmovb
add
cmp
fisttpll
aad
lods
rorl
mov
adcb
jl
call
xor
push
jge
sub
outsb
pop
idivl
aad
imul
xor
pop
popf
sub
mov
in
add
add
dec
mov
jp
jno
add
cmp
lcall
pusha
mov
aas
mov
les
in
test
inc
out
pusha
xor
mov
dec
or
in
je
add
testl
arpl
cli
cltd
pop
push
jo
xor
inc
adc
sbb
test
sar
lfs
adc
int3
xor
dec
call
sbb
js
jg
neg
cltd
pop
mov
sub
out
repz
or
sbb
push
jg
lock
sbb
rcrl
scas
aad
data16
and
insl
pop
pusha
out
ret
fidivs
mov
arpl
arpl
jnp
fcomps
arpl
mov
in
push
divb
rcll
and
pop
add
icebp
mov
out
jg
jnp
add
cmpsb
push
cmp
and
fstpl
lds
enter
hlt
dec
adc
dec
mull
xchg
mov
pop
jmp
mov
out
mov
mov
aad
lock
adc
scas
ret
fiadds
imul
dec
xchg
cmpsb
ror
mov
aas
xchg
sahf
notb
cmc
xor
jb
scas
mov
adc
mov
popa
hlt
lods
divl
fcoms
mov
ds
cmp
test
xlat
sbb
pop
imul
hlt
mov
mov
addr16
outsb
dec
sbb
sbb
fidivl
add
and
mov
adc
jmp
out
push
mov
pusha
mov
push
pop
fnstcw
pop
adc
lret
daa
loop
push
and
in
jnp
mov
lods
mov
adc
outsb
inc
inc
bound
negl
dec
out
jnp
add
mov
pop
dec
mov
ror
mov
inc
inc
add
fsub
add
and
roll
es
or
lahf
stos
mov
mov
das
add
xchg
push
push
adc
leave
and
leave
fnstenv
cmp
cmp
or
push
add
stc
fwait
pop
xor
cmp
lds
sub
dec
sbb
inc
inc
push
cmc
sub
pusha
pop
inc
mov
mov
pop
cwtl
add
xchg
test
ret
aam
test
adc
fisubl
push
dec
jge
stos
jnp
popf
mov
inc
jp
jno
or
imul
sub
jp
clc
movsb
fadds
inc
adc
push
outsl
fwait
jne
xchg
xlat
mov
dec
jb
stos
xlat
mov
or
sub
aad
cli
cmpsl
push
cmp
jg
push
pop
lret
xor
jno
stos
mov
mov
push
pop
pusha
std
loope
mov
shl
filds
sbb
jl
mov
adc
test
outsl
nop
inc
insl
ja
pushf
mov
adc
fwait
sbb
lock
and
sub
mov
adcl
test
jecxz
or
ljmp
push
ret
adc
bound
mov
mov
sub
stos
jae
jg
adc
push
jp
sahf
aam
int3
aad
subb
inc
inc
pop
pminsw
rclb
push
mov
ret
lahf
fcom
fmul
insb
push
xor
in
inc
add
mov
pop
fmulp
add
push
mov
inc
add
or
pop
dec
jae
rcll
and
fbld
pop
cs
cs
stos
test
jmp
sub
mov
fsts
mov
dec
je
shrl
xchg
pusha
cli
mov
inc
xor
rcrl
cmpsl
xchg
pop
sahf
lock
cmp
icebp
jo
ret
mov
adc
test
xlat
inc
pop
mov
roll
pop
ja
cwtl
inc
adc
out
push
adc
clc
imul
add
adc
mov
xchg
mov
add
mov
ret
stos
in
into
ljmp
aas
pop
dec
mov
mov
imul
pop
adc
push
jbe
jbe
push
add
mov
sub
mov
add
lods
pop
insl
jne
gs
cmp
jecxz
pop
and
fs
mov
sbb
jp
enter
lea
mov
push
mov
and
jns
inc
add
pop
inc
in
inc
inc
push
mov
mov
or
lea
aam
dec
pop
sbbl
clc
add
addl
dec
mov
pushf
subb
sub
jbe
lds
dec
into
sbb
jne
js
jbe
push
xchg
out
sub
push
jne
call
ja
rorb
ret
push
adc
inc
sub
push
rep
loopne
jnp
mov
sub
std
cmp
push
ficoms
push
fsubl
push
xchg
rcll
gs
lahf
popa
jle
sbb
inc
cmpl
leave
lods
fsubrs
dec
sti
inc
cmc
mov
and
mov
and
add
push
jbe
jecxz
js
cmp
or
push
sahf
cmpsl
mov
aas
fdivrs
es
test
push
int3
lea
adc
popf
jbe
xor
jb
repnz
push
cmp
int3
fucomi
imul
leave
pop
bound
adc
gs
or
cld
outsl
nop
orl
jmp
shlb
cli
lods
incl
sub
xor
and
aam
adc
adc
sub
push
jns
xchg
or
les
or
jbe
mov
xchg
sub
lahf
in
loop
dec
dec
sahf
and
arpl
adc
pop
mov
iret
sub
inc
lods
aaa
mov
mov
mov
and
test
sbb
and
fdivl
mov
xchg
cmp
pusha
leave
pop
insb
daa
push
daa
and
repnz
lea
xchg
sub
sub
rorb
arpl
das
adc
dec
and
idiv
sahf
jle
inc
fisttps
push
push
push
aaa
pop
xor
jle
pop
xchg
and
shrl
lret
lods
jmp
andl
fcoml
dec
lcall
cmp
das
push
test
sbb
adc
add
cmpsl
sub
jecxz
cmpsb
cld
add
loopne
icebp
sar
push
arpl
mov
mov
and
out
sbb
jo
xor
xchg
stos
mov
aas
cmp
in
jo
cmp
adc
lods
dec
nop
dec
test
fwait
pop
popf
ss
push
pushf
cli
mov
sub
sub
cmp
cld
out
scas
pusha
cmpsb
pop
xor
push
inc
sbb
lahf
dec
or
jae
test
push
pushf
imul
shrb
mov
xchg
pop
push
or
les
mov
pop
add
test
xchg
xor
or
dec
xchg
cwtl
in
cwtd
stos
cmp
jb
mov
jae
int3
mov
jge
or
or
lahf
stos
ljmp
and
testl
adc
fistpl
add
mov
cld
fisttpl
pop
push
std
scas
enter
and
mov
pop
pop
inc
or
and
stos
add
out
jg
mov
xor
jecxz
arpl
push
and
hlt
adcl
push
mov
cmpl
push
repnz
repz
les
aaa
ret
sbb
xchg
mov
jnp
lods
rcrl
sub
pop
sub
fistps
xchg
fistps
pop
mov
loopne
sahf
xchg
xor
xchg
test
cmp
xor
idivl
adc
sub
or
icebp
mov
push
aad
out
leave
lock
mov
mov
inc
out
add
jl
fmulp
dec
cltd
jecxz
sbb
stc
cmp
pushf
fisttpl
nop
aas
add
clc
jecxz
mov
xchg
adc
mov
push
ret
aas
push
shrb
call
mov
push
leave
int
loope
push
dec
popf
int
jg
lret
adc
fistpl
ss
in
pop
dec
inc
insl
outsl
sbb
es
mov
xchg
mov
and
in
jmp
in
cmp
mov
dec
mov
negb
xchg
inc
jno
shrb
mov
pushf
loopne
daa
addr16
int
xchg
mull
xchg
add
jnp
cmpsb
jmp
fsubrl
imul
push
movsl
mov
stc
leave
jb
add
cli
ret
test
adc
ss
icebp
jg
lret
aas
mov
gs
in
sarl
dec
inc
into
sub
imul
cltd
lret
cli
pop
cmp
fbld
xor
jnp
out
test
pop
inc
mov
cltd
mov
jg
fnsave
lahf
dec
lods
sub
adc
pusha
xor
sub
idiv
dec
push
xor
insb
jo
or
test
sbb
cwtl
rcrb
pop
outsl
push
xchg
pop
test
or
shlb
cmpsl
cmp
or
dec
sti
mov
mov
push
mov
pop
scas
xchg
outsl
insb
lock
inc
iret
popa
pusha
mov
fmul
fistps
out
xchg
and
mov
jb
int
sti
jae
xor
subb
push
mov
xor
das
cld
and
dec
or
js
jne
mov
pusha
and
mov
dec
fcoml
jbe
test
mov
rclb
sarl
cmc
shll
or
push
test
ret
out
lret
enter
push
xor
mov
repz
jle
repz
cmpsb
in
pop
adc
bound
outsb
mov
in
cli
cmp
les
cmp
mov
fs
scas
xchg
xor
sbb
push
sub
pop
adc
mov
xchg
mov
sub
lock
xor
into
ds
dec
stos
es
pop
inc
xchg
mov
aam
and
mov
movsb
push
les
sub
js
pop
sbb
sbb
dec
jle
and
push
push
imul
outsb
mov
sub
data16
dec
xor
and
nop
push
mov
or
mov
lods
mov
xchg
sbb
aaa
dec
adc
xchg
ja
orb
jno
jns
dec
lret
dec
cs
mov
push
bound
mov
rcl
loope
ret
int3
cvtps2pd
gs
cwtl
mov
xchg
jns
jle
bound
adc
mov
mov
mov
inc
stos
ss
lcall
dec
into
jge
mov
sub
roll
dec
jmp
lock
ljmp
popf
inc
mov
push
dec
push
and
pop
and
mov
jg
repz
mov
sbb
mov
pop
mov
cltd
jp
clc
inc
test
das
mov
rcrl
or
dec
inc
jg
mov
cwtl
push
pop
lock
enter
dec
int3
dec
stos
jge
fwait
lret
mov
or
cmc
sub
xor
dec
imul
sbb
xchg
notl
leave
mov
cmpl
lods
test
xchg
and
push
roll
xor
loopne
sub
emms
stc
fimuls
dec
lds
and
int
and
sub
dec
test
and
mov
mov
lds
lcall
movsb
jg
push
out
xor
rcl
xchg
ss
or
xchg
cmpsb
idivl
imul
inc
inc
stos
dec
aad
aad
shr
push
loopne
cmp
cwtl
mov
adc
insl
xor
pop
lock
aas
pop
pop
mov
call
fisttpl
repnz
sarl
scas
add
ljmp
gs
les
pop
jl
cmp
sbb
daa
call
aam
mov
add
in
in
lods
ficoml
iret
imul
fsqrt
sbb
call
xchg
fidivrs
pop
push
cwtl
call
stc
aaa
pusha
push
pusha
xor
pop
xor
enter
cwtl
lret
fisttpl
sbbb
cmp
push
mov
mov
cli
pop
lock
cli
inc
sub
insl
or
movsb
push
push
add
scas
test
pop
mov
add
jl
and
add
ret
xor
push
test
jbe
lds
adc
and
jl
ret
out
push
add
repz
xchg
fcomp
insb
dec
mov
or
sub
repnz
mov
add
add
fisttps
cmp
lea
push
stos
add
cwtl
push
mov
or
ret
xchg
sub
test
adc
dec
mov
jecxz
jnp
int
loop
popa
insl
hlt
or
sub
fimull
movsl
cltd
mov
cwtl
cmpsl
inc
fists
or
or
jae
pop
push
leave
push
adc
cmp
cmp
rcll
ljmp
mov
jmp
inc
repnz
dec
pushf
lds
test
imul
sbb
out
jne
jne
in
shrb
jne
mov
adc
aaa
repnz
aaa
pop
dec
arpl
in
pavgw
punpcklwd
or
and
pop
xchg
lods
dec
scas
stos
sahf
fsubr
sarb
fiaddl
aas
xor
sbb
add
inc
ds
xchg
adc
jle
push
inc
push
shl
push
inc
imul
pop
mov
xchg
test
repz
fistl
jno
mov
ffree
scas
lods
mov
or
sbb
test
aad
lret
ret
nop
or
cmp
mov
gs
mov
xchg
push
adc
cmp
call
dec
or
and
bnd
mov
jecxz
fdiv
shld
or
lretw
xchg
adc
ds
mov
pop
pop
bound
mov
dec
mov
sbb
and
jnp
inc
clc
xchg
inc
cwtl
outsb
mov
sbb
push
sub
out
push
and
into
sub
repnz
lcall
shlb
call
sub
add
jecxz
sub
pop
in
lcall
and
add
aas
push
and
adc
rcrb
add
adc
add
sar
sbbb
jb
jnp
addl
mov
push
mov
sub
ljmp
ficoms
cmpb
leave
mov
adc
lods
lret
mov
sti
lcall
add
in
pop
cmc
daa
ficompl
jge
push
out
or
leave
iret
push
push
sbb
or
into
jns
outsb
xor
popa
push
jmp
inc
pushf
add
inc
sbb
in
inc
test
jmp
cltd
sahf
jp
jns
sti
adc
cmpsb
addl
mov
xor
cmp
mov
aaa
and
inc
out
rol
jnp
aas
iret
daa
cli
push
les
iret
lret
aad
jnp
in
xor
mov
popa
vmwrite
fidivrl
mov
rolb
jne
sub
inc
aad
in
mov
loopne
xor
mov
adc
or
pop
or
mov
mov
sbb
aad
xchg
shr
cmpsb
cwtl
cs
adc
xor
lock
imul
mov
mov
sub
test
fidivs
fildll
in
ret
push
je
add
call
pop
or
xlat
out
cs
lcall
mov
insl
subl
pop
fadd
mov
addr16
cmp
add
xchg
clc
insb
mov
dec
lcall
es
xlat
pop
mov
pop
sub
add
aaa
jecxz
mov
xchg
xchg
insl
bound
and
insl
push
stc
mov
sub
cwtl
mov
and
inc
shll
popa
out
xor
pop
ret
scas
mov
sbb
repnz
mov
xlat
lahf
xchg
pop
jecxz
pop
les
cmp
in
popa
stc
pop
js
les
cld
or
xchg
ss
ret
pop
jnp
add
sarb
arpl
std
aam
jg
repz
push
sbb
xchg
les
bound
xchg
add
cmp
sub
stc
mov
push
sub
pop
out
xchg
push
mov
pop
xchg
inc
jl
cmpsb
imulb
loope
push
or
aaa
imul
push
inc
or
sub
pop
mov
jmp
sub
scas
xor
lds
imul
sbb
pushf
lods
leave
mov
cli
jne
repnz
dec
pop
sti
in
mov
or
loope
pop
xchg
adc
jg
sub
sub
xor
fs
jne
fisubrs
or
jnp
test
push
out
rclb
xchg
mov
inc
insb
sub
mov
push
leave
mov
fidivs
xchg
hlt
fwait
mov
add
mov
cld
nop
jecxz
ds
jbe
nop
notl
pusha
insb
lret
xchg
mov
mov
adc
dec
cmp
or
std
repnz
add
lahf
in
mov
and
enter
push
mov
dec
and
mov
sub
lods
push
cltd
or
or
sub
or
xchg
dec
adc
pop
nop
shll
xchg
jge
xchg
andl
mov
aam
popa
jbe
daa
clc
sbb
jo
and
mov
jo
xlat
push
xlat
iret
das
cwtl
cwtl
xchg
out
sub
sbb
pop
sbb
or
hlt
adc
movsl
xor
pop
mov
push
ds
mov
addl
mov
out
stc
push
jo
stos
xchg
xor
and
pop
stos
pop
xchg
sbb
lcall
add
jb
je
push
les
aaa
push
test
jo
cmp
enter
inc
in
jmp
jbe
push
fwait
push
or
xor
test
ret
cmp
lods
xor
shlb
sub
or
ds
lods
mov
cld
inc
lds
mov
loopne
cmpl
pop
inc
popa
arpl
inc
pop
xor
repz
cwtl
ja
sahf
jl
nop
xchg
jl
lds
pop
pop
aam
or
pushf
xchg
test
and
sahf
cmpb
scas
out
into
lock
dec
or
rorl
cmp
jg
clc
cld
in
mov
sarl
loope
xchg
divl
dec
xlat
add
aas
and
jecxz
cltd
rcll
xchg
es
pop
aam
rclb
inc
push
stos
aam
jnp
out
jmp
and
lock
dec
and
push
cmpsl
sub
mov
lods
push
ja
cmc
cltd
and
add
and
or
cwtl
lret
roll
jle
mov
push
insb
jl
ret
out
daa
mov
mov
movsl
inc
push
fs
dec
inc
in
lea
push
pextrw
and
icebp
or
push
dec
popf
cmp
stc
cli
mov
or
or
aas
jmp
frstor
push
fs
rcll
jo
ficoml
cmp
xchg
ss
lods
xchg
mov
ja
pop
das
cmp
push
mov
data16
cmp
mov
shl
pop
push
out
hlt
jbe
jne
sub
shrb
push
in
adc
xor
mov
mov
lea
dec
add
sub
pop
adc
pop
push
aaa
sub
sahf
xchg
scas
aam
and
outsl
pop
jmp
in
ljmp
adc
or
mov
jb
addr16
lret
pop
dec
mov
hlt
pop
stos
add
test
mov
mov
cmp
mov
jno
jo
inc
pop
mov
mov
xchg
or
test
jns
xchg
cmp
pop
ss
mov
rorl
in
inc
xchg
ret
ret
jmp
mov
mov
jnp
mov
add
roll
dec
lret
insl
int3
scas
dec
push
add
movsb
stos
cmp
push
subb
mov
stc
sar
sbb
outsb
jmp
jbe
sarb
dec
out
into
pop
mov
add
lret
pushf
xor
enter
dec
and
jb
out
mov
xchg
xorb
stos
into
xor
push
shrb
inc
sub
adc
cmp
in
test
xchg
add
cmp
lods
lcall
aas
jl
and
lcall
jne
imul
cmpsl
ds
movsb
dec
adc
xchg
pop
push
sub
cmp
rorb
in
cmpsb
adc
jnp
xchg
negl
sti
xchg
add
call
in
hlt
push
pusha
repz
push
sbb
aas
add
push
inc
imul
xchg
xchg
cld
stos
arpl
adc
adc
ljmp
outsb
aaa
bnd
and
lods
inc
cmp
push
adc
jmp
pop
cltd
enter
mov
push
cld
pop
rcrl
aam
sub
xchg
sub
push
xchg
cmp
mov
sub
push
jnp
insl
mov
and
aaa
movsl
inc
filds
cmc
insb
cmp
rorb
out
pop
jb
std
xor
mov
adc
xchg
jae
incl
mov
pop
scas
inc
xchg
fiadds
loope
lahf
mov
mov
pop
dec
adc
cmp
add
push
pusha
lret
stc
dec
dec
pop
loope
and
cli
outsb
loope
ds
pop
mov
or
fstpt
push
loope
push
mov
lret
aam
lahf
inc
inc
pushl
out
loopne
mov
out
or
sub
cmpsb
pop
lahf
dec
lock
fcoml
push
ret
sub
pop
and
or
jge
mov
dec
mov
sahf
mov
out
sub
jo
hlt
xor
mov
and
clc
or
outsb
lods
mov
jbe
outsl
xchg
mov
push
jmp
ds
shr
mov
in
inc
push
stos
mov
mov
divb
roll
in
jg
xchg
lret
cmp
xchg
fisubs
dec
notb
adc
and
sbb
movsl
ret
dec
xor
jp
xchg
or
sub
inc
cmp
int3
mov
repz
scas
xor
push
xchg
cmp
cmc
pop
xor
xlat
cmp
or
jns
lahf
mov
test
arpl
push
paddq
enter
mov
and
push
mov
dec
loopne
cmp
scas
dec
dec
add
push
shrl
loope
sub
cmp
enter
jmp
aaa
mov
sbb
adc
jecxz,pn
mov
nop
xchg
mov
lret
mov
mov
dec
pop
mov
push
mov
data16
lds
add
sub
repz
outsl
lods
stos
jbe
das
inc
ret
inc
data16
jne
mov
aam
mov
mov
xchg
push
pop
int3
sub
xchg
out
popf
or
mov
mov
icebp
mov
or
pushw
and
lcall
mov
xchg
xchg
adc
add
scas
xor
inc
ret
sbb
push
mov
cltd
sti
dec
addr16
icebp
ljmp
adc
jl
lock
cmc
inc
out
bound
cmp
sub
sbb
xchg
cmp
lret
dec
repz
imul
in
xorb
push
mov
push
sahf
dec
imull
pop
xchg
cmp
mov
out
scas
imul
mov
stc
out
loop
movsb
outsl
imul
js
mov
dec
ret
roll
dec
adc
xor
push
lcall
jmp
inc
jnp
dec
cmpsl
call
jge
imul
nop
or
mov
mov
xchg
jbe
mov
and
cmp
cmp
pop
call
xlat
enter
orl
mov
jmp
push
sbb
jae
pop
divl
pop
mov
outsl
add
xor
mov
xlat
ja
sub
outsl
or
test
insl
into
mov
sub
xchg
ss
shlb
mov
stos
std
dec
add
les
mov
xchg
js
push
cmpsb
bound
xor
jge
jae
stos
ficompl
inc
pushf
sbb
jb
adcb
insl
adc
xchg
add
movsb
outsl
outsb
pop
adc
iret
add
lret
cld
les
inc
inc
enter
adc
lret
imul
xchg
dec
or
fimull
jnp
and
fcom
leave
data16
rcll
sub
idivb
xchg
mov
cld
lcall
lea
aaa
xchg
cltd
mov
dec
loopne
xor
sarl
fildl
xor
pop
xor
stos
or
insb
sbb
xchg
shrb
jae,pn
adc
xlat
xchg
xor
jbe
mov
jp
dec
or
loopne
xchg
vpmaxsw
aad
or
int
ja
flds
inc
inc
add
push
and
mov
cmpsb
lods
scas
divl
aas
xor
inc
push
fcoml
jno
push
shr
jne
mov
inc
dec
mov
jmp
loop
stc
fstl
adc
push
push
rcll
adc
inc
cmp
mov
pop
and
addr16
push
dec
jmp
filds
lret
mov
bnd
lahf
cmpsl
mull
cltd
mov
cli
cld
sub
xor
mov
adc
in
xchg
mov
add
int3
push
js
stos
jno
mov
sub
cmp
sub
daa
inc
push
sub
inc
hlt
in
cltd
push
cld
jne
enter
mov
jle
adc
jbe
mov
addr16
sbb
lret
in
mov
shlb
and
cmpsl
rol
loop
and
cmc
call
push
adc
or
or
int3
stos
or
sti
add
movb
jge
pop
repz
cmp
rorl
add
adc
movsl
xor
adc
jle
dec
arpl
push
push
inc
lret
and
pop
icebp
pop
lods
or
mov
fstl
cmovge
push
test
xor
not
mov
xchg
and
in
in
int3
data16
das
pop
imul
jae
test
aad
push
ror
mov
push
jne
shlb
aaa
sahf
dec
cmp
lods
lahf
mov
into
xchg
sti
and
jp
insb
cmp
dec
inc
mov
insb
out
rcr
mov
imul
cli
sub
inc
rorl
xorl
pop
pop
cs
and
fsub
cmp
pop
fnstsw
push
sub
loope
push
scas
cmc
mov
add
jp
lds
dec
or
andl
push
mov
ljmp
xchg
rclb
cmc
add
push
mov
aam
add
jno
jl
fidivrs
clc
push
dec
js
call
inc
fwait
add
mov
fldl
sbb
dec
jo
mov
outsb
psllq
rcll
and
mov
test
ret
outsb
icebp
cmp
jp
pushf
xlat
rol
mov
ds
mov
adc
mov
daa
in
fdivr
xchg
imul
call
and
mov
jl
push
adc
xchg
das
xchg
fmulp
in
push
push
cltd
dec
jle
fistpll
std
jmp
push
xor
xchg
pushf
ss
xchg
push
mov
push
cld
ds
or
cld
pop
cs
mov
negl
add
sub
fstpl
scas
sbb
fnsave
test
daa
sub
mov
xor
inc
jg
data16
xchg
push
cmp
add
mov
jecxz
dec
in
mov
mov
jge
sbb
jae
push
lds
rcll
cld
fwait
push
repnz
dec
les
xchg
push
pop
adc
imul
mov
and
cmp
mov
cmp
popf
cs
mov
ret
sub
movsb
sub
jno
iret
mov
nop
lahf
push
push
mov
pop
int
inc
rcrl
insb
jbe
and
lods
imul
sarb
inc
mov
mov
dec
pop
out
mov
cmpsb
arpl
cmpsl
int3
sti
lods
mov
mov
push
pop
pop
add
test
std
cmp
gs
hlt
mov
mov
mov
xchg
and
sbb
sub
mov
fcmovbe
pop
xchg
test
push
adc
fimuls
xchg
rclb
aas
lret
jle
inc
loope
mov
xchg
out
jl
push
sbb
push
cld
jo
and
lret
fidivs
mov
cmp
out
movsb
inc
jb
pusha
add
shlb
sub
xchg
arpl
push
cmpsl
dec
test
sar
repz
mov
imul
jmp
xchg
sub
jle
fistpll
cmpsl
mov
inc
cltd
bound
stos
dec
imul
inc
and
adc
sbb
and
inc
mov
cmc
mov
cld
fldt
pop
pop
xchg
cmp
push
repnz
out
repz
repz
das
or
mov
pusha
and
mov
lret
ficoml
mov
xor
cmp
mov
adc
mov
push
ds
inc
lea
icebp
or
xor
xchg
lods
addr16
sub
sbb
rol
lods
out
adc
subb
testb
ficoml
jne
fdivl
mulb
and
repnz
or
sub
xchg
aaa
inc
push
jno
push
loopne
in
mov
cs
sbb
je
stos
xlat
inc
outsl
lea
add
dec
rol
es
ja
push
sub
repz
dec
cmp
into
push
push
mov
mov
inc
mov
test
stc
fdivrl
cld
sub
shrb
int3
adc
lahf
sbb
or
push
adcl
daa
push
inc
dec
pop
cs
mov
scas
dec
movsb
fs
inc
mov
pop
sub
or
inc
mov
shlb
dec
xorl
xor
push
leave
and
cli
xor
jns
mov
fiaddl
movsl
and
imul
ror
arpl
pop
test
jge
push
adcb
mov
adc
jnp
mov
lock
mov
cmp
lods
sbb
out
jmp
sub
inc
stos
ret
jecxz
and
rclb
pop
call
xchg
inc
ss
gs
mov
mov
pop
pop
imul
insl
or
cmp
pop
movsl
sbb
mov
xor
mov
insl
or
adc
mov
xor
movsb
repnz
add
mov
aam
lock
sahf
cli
cmp
xorb
fnstenv
cmp
subb
loopne
fmulp
mov
dec
insb
adc
sbb
dec
loope
mov
xor
in
xor
mov
ret
push
repz
aas
xchg
xchg
jb
fimuls
push
and
sub
sbb
mov
sbb
rcrb
adc
sbb
fbld
xchg
adc
je
add
jmp
lret
or
repz
push
orl
rol
mov
inc
bound
iret
and
dec
jns
stos
rclb
add
xorl
out
push
sub
and
dec
ss
jnp
or
adc
fxch
xor
jns
lock
adc
cs
inc
imul
xchg
mov
mov
lea
mov
dec
pusha
cmp
hlt
sbbb
inc
test
pop
jge
jmp
pop
jnp
xor
add
sti
and
jmp
imul
addl
jcxz
push
rorl
fldenv
imul
out
jae,pn
xchg
out
jmp
mov
lret
xchg
gs
jecxz
sbb
movsb
xlat
rolb
stc
in
mov
cmpsl
loopne
jl
mov
mov
inc
je
stc
xor
mov
jnp
add
mov
fld1
jnp
mov
into
xlat
mov
mov
lret
xchg
pop
pop
std
icebp
xchg
add
int
or
enter
lret
adc
xor
or
push
cli
pusha
fs
in
xchg
push
add
mov
nop
repnz
jne
cmp
push
inc
gs
out
fisubs
popf
mov
notl
or
or
mov
push
arpl
test
ss
test
jo
push
inc
out
dec
add
adc
aam
sbb
sbb
in
int3
jbe
or
jnp
enter
push
add
dec
sub
cmp
fdivrp
xlat
in
test
pusha
push
sbb
or
push
les
jae
not
xor
push
fisubrs
sbb
repnz
out
lret
icebp
test
fidivs
sbb
pop
inc
lods
xor
cwtl
jp
jo
xor
or
mov
stc
pop
gs
popf
xor
nop
and
cmpsl
nop
mov
mov
and
fisubrl
neg
mov
sti
imul
fxch
je
pop
ja
cltd
cmc
push
fwait
mov
stc
sub
inc
sbb
adc
loop
cltd
or
sahf
lret
push
xchg
adc
jg
adc
repz
xor
jae
and
repnz
push
xchg
pushf
jbe
imul
dec
dec
out
mov
xor
or
cs
sbb
jp
lods
movsb
inc
in
out
sub
daa
inc
or
out
xor
ret
mov
cld
add
fwait
jb
in
movsb
xchg
pop
dec
sub
shl
in
cs
sub
aam
fwait
cmpl
lods
or
mov
aam
dec
sbb
mov
fdivs
jge
or
repz
adc
repz
jo
ja,pt
xchg
dec
inc
sbb
mov
mov
lods
pushf
mov
cmp
lods
ss
gs
aas
adc
xor
es
mov
repnz
movsl
cmp
les
dec
lahf
imul
ret
mov
scas
sbb
pop
mov
push
stos
mov
addr16
xlat
push
cs
add
mov
adc
popf
xor
call
loope
dec
and
push
add
jge
jmp
jmp
mov
cmp
lret
add
xchg
and
je
pop
jecxz
lahf
lods
mov
in
mov
jbe
or
dec
cmp
push
bound
cmpsl
jle
xor
or
incl
mov
add
loop
add
test
fmuls
and
iret
into
or
pop
jl
lock
mov
mov
nop
add
push
enter
aas
mov
ja
fcompl
ljmp
dec
push
shll
or
cmc
sbb
xor
dec
pop
popf
fistpll
lret
xchg
pop
ret
push
jne
dec
xor
xlat
test
jb
mov
mov
in
inc
push
lahf
call
sub
xor
jecxz
mov
icebp
xor
jbe
test
shll
fsts
pop
xor
paddsb
inc
pop
sti
xlat
hlt
push
imul
or
dec
call
outsl
outsb
adc
sbb
pop
sbb
outsb
fwait
cmp
iret
sub
add
dec
add
adc
add
lret
push
cmp
pop
push
out
mov
addr16
insb
outsb
pop
and
or
add
push
adc
mov
lcall
jb
lea
mov
adc
mov
sub
fcomp
dec
enter
fdivrl
dec
cmpb
mov
movsl
jbe
jne
cwtl
fs
movsl
in
xorl
addr16
mov
cmp
jge
xor
stos
pop
xchg
lea
test
stc
dec
jp
in
and
lret
push
std
insl
imul
or
cmp
add
pop
shll
inc
insb
or
ljmp
pop
push
popf
hlt
xor
push
les
sbb
lret
popl
inc
adc
ror
test
repnz
and
cli
outsb
cmpsl
pop
jne
xchg
stc
inc
outsb
std
dec
xlat
xchg
pop
ret
dec
xchg
dec
cld
inc
jmp
xchg
pop
in
xor
sbb
loope
push
pop
popf
mov
mov
pop
stos
arpl
loop
and
dec
adc
orl
add
mov
scas
js
inc
jle
das
subl
loop
fsubl
lds
xor
roll
pop
repz
in
jge
sbb
iret
fisttps
lods
sub
clc
cmpsl
cmpsl
add
fwait
mov
add
je
mov
and
rcrl
adc
pop
dec
mov
jne
mov
sbb
dec
mov
mov
pop
shl
push
cmp
cmc
cmp
mov
or
jge
and
int3
mov
xchg
jl
inc
rorb
jo
loopne
and
bswap
sbb
or
cmc
mov
mov
icebp
push
dec
sbb
ret
icebp
adc
imul
mov
xorb
stos
imul
xor
adc
in
push
push
out
inc
rcr
inc
xchg
repz
lods
dec
adc
out
subl
sub
pop
cmp
sub
aam
gs
and
cmp
add
out
cmpsl
xor
out
loop
xor
adc
jns
jl
sub
loope
sub
ja
adcl
jne
iret
pop
lret
repnz
lcall
in
ret
fnstcw
push
jnp
sbb
inc
mulb
cvtps2pd
loop
test
pop
std
mov
mov
mov
out
or
aad
into
outsb
data16
xchg
add
jns
stc
sub
jns
mov
cmp
and
pop
pop
xlat
add
into
aaa
out
in
pop
push
cmpsb
jo
fldl
out
push
sbb
xor
push
push
inc
movsb
fildl
aad
out
xchg
pushf
pop
aam
pop
test
lock
sti
mov
cmp
pusha
sbb
aaa
mov
je
sub
add
jmp
fcmovu
adc
dec
add
or
push
add
lock
push
insb
adc
push
hlt
push
popa
xor
jnp
repnz
xor
test
scas
insb
bswap
mov
mov
lea
sub
xor
xchg
pop
mov
mov
pop
push
ljmp
mov
aaa
into
mov
xchg
es
mov
sbb
or
mov
mov
and
sub
sbb
out
add
xor
dec
dec
int3
lods
fldcw
dec
loopne
add
mov
aam
jecxz
dec
cmc
xchg
fisttpll
xchg
rorl
out
pop
iret
mov
adc
xchg
sbb
xchg
cmpsl
mov
push
sbb
test
xor
cmp
mov
jg
es
mov
push
mov
flds
mov
popf
fadds
adc
loope
into
mov
xor
push
and
test
mov
sbb
sub
adc
ret
add
push
out
and
add
inc
pop
pop
cld
in
push
add
sbb
or
xchg
fmull
pop
leave
mov
mov
jne
push
pusha
aas
jne
repz
jl
outsl
sub
adc
fidivrl
pop
xor
add
cli
mov
push
pop
mov
imul
pop
js
add
cmp
jne
test
push
nop
xchg
dec
scas
fadds
jle
and
jne
mov
sbb
sbb
fldl
rcr
xchg
cs
scas
or
inc
adc
or
ss
jae
enter
pop
mov
push
mov
js
fisubs
imul
pop
cmp
pop
jecxz
sub
add
mov
popa
cmp
push
and
fs
stos
sub
adc
jge
test
mov
arpl
bound
in
adcl
mov
mov
pop
push
jle
sahf
push
outsl
rorb
add
jmp
sbb
push
repnz
ret
mov
or
cmp
pop
jmp
adc
xchg
test
cmpsl
aam
jmp
jb
stc
pop
add
ljmp
dec
xor
cmp
xchg
pop
lcall
pop
loopne
inc
insb
mov
pop
lock
cmp
and
pop
mov
arpl
outsl
lea
or
rclb
sbb
and
add
cmp
cmpb
mov
mov
mov
fldl2e
out
xchg
sbb
das
adc
add
movsb
jno,pn
push
jle
ja
add
cmp
pop
xchg
dec
xor
test
frstor
jne
dec
iret
add
xchg
sbb
rolb
insb
int
cld
inc
jp
mov
faddp
popa
lret
cmc
pop
sub
and
lock
orb
mov
add
push
mov
sbb
es
fisubs
int3
lock
add
stos
mov
out
cmpl
rclb
add
sbb
std
pop
jmp
addr16
fbld
add
popf
mov
pop
mov
jbe
xchg
leave
rol
fwait
jmp
addr16
fs
jb
sarb
add
mov
out
cld
fcmovnbe
nop
rolb
mov
cmp
mov
mov
cmpsb
jo
lds
adc
push
or
shrl
xchg
dec
adc
popf
jge
pop
jl
mov
daa
dec
or
dec
and
jne
sbb
push
ljmp
int
lds
cmp
xor
sbb
in
roll
jg
fidivs
psllw
xchg
push
inc
pop
rclb
outsb
jno
fs
lds
push
int3
decl
jo
or
loopne
mov
jae
push
jno
addr16
xchg
test
sti
and
dec
mov
and
lods
rol
adcb
mov
jle
in
out
and
lods
neg
js
adc
rcl
pop
push
test
and
sbb
push
jnp,pn
mov
into
sbb
dec
or
js
ja
psrad
je
cmp
push
pop
push
aas
stc
mov
js
out
sahf
leave
movsl
imul
sarl
repnz
or
cltd
adc
loop
mov
lret
dec
push
add
push
jne
les
jmp
adc
inc
pop
loop
loopne
and
pop
cwtl
out
sbb
dec
leave
fisubrs
add
cltd
je
inc
jnp
pop
lcall
dec
mov
inc
fiaddl
add
faddl
fnstenv
test
arpl
in
mov
aad
inc
dec
push
adc
movsl
je
or
iret
xor
sbb
mov
arpl
adc
andl
int3
push
xor
mov
sti
jge
faddl
test
dec
lret
pop
fcomps
pushf
jg
and
sti
push
loop
fs
mov
insb
data16
mov
inc
in
int3
adc
cmpsl
call
pushf
ja
out
rorl
nop
pop
ja
xchg
add
mov
adc
leave
out
cmp
push
mov
lcall
jns,pt
push
sbbl
adc
int3
xor
mov
sbbb
cmp
push
into
push
mov
fisttps
aaa
sub
mov
shlb
ljmp
push
sbb
cmp
pushf
jl
mov
xchg
ljmp
rorl
mov
std
fadds
repz
lods
push
jg
nop
lret
inc
das
jne
cld
fcmovne
xchg
pop
sbb
lock
aam
stos
mov
inc
mov
push
mov
pop
jne
adc
cli
mov
xchg
jae
mov
inc
jle
push
sbb
mov
mov
aaa
cmp
push
dec
dec
cmp
push
jl
int
pop
jb
ljmp
jmp
mov
xchg
pop
in
push
dec
fistl
add
mov
aam
sub
inc
cmc
orl
mov
or
sub
adc
add
sti
inc
push
xchg
push
or
arpl
sub
xchg
scas
sub
aam
xchg
aaa
dec
xchg
pop
jl
pop
push
loope
cmp
hlt
sbb
add
les
int3
fnsave
mov
ret
int3
xchg
or
leave
mov
inc
mov
push
scas
xchg
or
mov
mov
fcoml
dec
dec
push
mov
push
pop
push
divb
sbb
lds
out
jo
adc
xchg
repz
outsl
xchg
inc
into
add
and
shll
rol
insl
in
pop
push
fs
call
int3
cs
fcomps
in
jle
pushl
or
jge
xchg
cmp
inc
and
push
and
mov
cmpsl
mov
pop
jno
rorb
cmp
fbstp
mov
movsb
push
mov
mov
push
pop
pop
sahf
stc
test
stc
pop
mov
lock
mov
rcr
or
movsb
mov
jg
mov
test
sub
test
movsb
in
leave
enter
mov
mov
cmp
popa
and
mov
or
jecxz
in
jp
les
rcll
jbe
push
nop
scas
gs
scas
and
mov
and
add
lds
sbb
imulb
xor
or
mov
jb
add
call
shll
xor
jle
dec
inc
fldln2
lods
cmpsb
inc
pop
aam
sub
cmpsb
aaa
add
add
push
sub
inc
out
push
dec
das
int
mov
ret
xor
lods
je
sub
daa
test
mov
and
pop
add
sub
cli
mov
pop
fmul
rolb
mov
pop
cmpsl
js
sub
sub
clc
pop
rcrb
aam
cltd
adc
cmpsb
jno
test
insl
imul
andl
dec
icebp
cwtl
movb
inc
scas
jge
jno
add
lcall
sbb
cmc
and
mov
pop
and
sahf
mov
push
int
and
dec
xchg
or
ljmp
in
mov
sub
inc
inc
dec
inc
push
cmpb
test
add
add
cld
inc
subl
mov
push
mov
push
out
pusha
xor
fsubl
adc
jns
out
and
out
iret
mov
imul
insb
add
pop
mov
rcl
push
inc
add
call
add
mov
xchg
out
fsubrs
or
cmp
dec
aad
fistps
sub
out
pop
leave
fcoms
or
adcb
jge
idiv
push
jecxz
dec
xchg
lret
loop
mov
push
dec
aam
shl
xor
in
flds
jecxz
dec
lock
ret
out
jo
xchg
xchg
xor
rcr
sti
push
inc
and
xchg
cmp
dec
xchg
lods
xor
xorb
cmpsl
insl
lods
adc
adc
add
or
push
lock
push
pop
loop
lcall
and
out
sub
rolb
push
outsl
mov
ss
xchg
leave
mov
orl
mov
pop
sti
jl
mov
in
sarb
fimuls
dec
jg
sbb
push
jne
cmp
rcll
xor
outsb
jno
mov
xorb
xorb
andl
int3
jp
xor
dec
fildl
mov
xchg
shl
sar
lcall
push
cmp
das
push
mov
decb
dec
adc
xchg
js
push
xchg
dec
sbb
xor
add
cmpsl
jno
in
inc
xor
shr
sub
jg
in
push
mov
loopne
jo
inc
ja
test
scas
cs
arpl
push
popf
and
fnsave
add
or
cli
sub
sub
lcall
hlt
jo
pop
mov
inc
pop
out
jo
mov
iret
mov
cmp
push
es
scas
stc
shll
sbb
adc
add
notl
mov
hlt
aaa
jg
aad
mov
mov
mov
rcll
xchg
insb
pop
or
or
stos
sbb
fwait
lret
mov
sub
or
lcall
mov
arpl
pop
imul
dec
cmp
in
fmull
stos
pop
cmpsl
xchg
mov
dec
movsl
clc
mov
clc
movsb
dec
in
fsubrl
fidivrl
mov
add
or
jl
pushf
imul
or
imul
cltd
imul
xor
das
ljmp
fsubl
push
pushf
jecxz
inc
hlt
jmp
jmp
inc
cmpsb
pop
and
fldenv
icebp
adc
dec
cmp
inc
jmp
sbb
test
sub
mov
std
pop
hlt
xchg
adc
sbb
mov
mov
out
xchg
imul
mov
ja
sbb
cmp
xchg
inc
xor
xor
xchg
test
and
or
fistps
imulb
mov
sbb
or
loop
flds
sti
bound
loop
icebp
dec
in
xor
es
ficoms
mov
mov
and
xor
or
add
sbb
or
loopne
test
cmp
adc
loop,pn
xor
jl
ss
int3
ficomps
lds
add
shl
imul
xor
pop
fs
scas
scas
stc
cmp
jb
mov
and
rol
cmc
fmull
sub
adc
outsb
dec
pop
cmp
xchg
and
pop
pop
mov
push
cmp
push
sub
xor
push
lret
adc
xchg
repnz
out
pushf
arpl
ftst
mov
pop
mov
cmp
sbb
cmpsl
push
or
jae
lcall
dec
in
sbb
pop
test
insb
ljmp
push
fcmovb
or
jge
ds
lock
xchg
xchg
notl
sub
xlat
int
push
gs
loope
and
incl
push
mov
sub
je
andl
jg
xchg
das
int
push
mov
inc
sub
or
inc
fld
test
sub
inc
push
shlb
jbe
xchg
jo
pop
xlat
adc
jns
lret
fildl
add
jo
dec
pop
movsl
or
loope
mov
ret
daa
add
mov
fbstp
outsb
push
cmc
inc
sub
jg
or
aad
sub
xchg
jbe
movsb
pop
adc
cmpsb
sbb
sbb
leave
or
ja
or
cmpsl
jmp
notb
scas
pop
out
cmpsl
lock
inc
push
mov
cmc
inc
dec
mov
repz
ret
adc
rorb
pop
xchg
mov
pop
adc
sub
mov
js
mov
jb
bound
push
pushw
mov
add
rcr
push
dec
dec
fistps
ret
xor
lods
sarl
sub
push
inc
sarb
cltd
inc
add
arpl
jmp
xchg
mov
jecxz
dec
enter
adc
xor
adc
lret
ret
fs
rcrb
cmp
pop
stos
testl
jg
mov
mov
cmp
inc
push
push
rolb
cli
jbe
dec
out
sarl
lods
lret
push
cmp
xchg
es
sbb
rolb
shrl
es
enter
push
ret
cmpsb
mov
stos
lods
pop
push
pusha
adc
and
mov
ja
out
outsb
scas
out
dec
cmp
aam
stos
sbb
cmp
aam
je
jns
into
or
xchg
or
cmp
add
imul
fisttps
cmp
mov
jmp
adc
sar
mov
movsb
push
sub
jge
jo
cmc
mov
int3
xchg
push
adc
mov
sub
into
repz
les
cmp
and
test
scas
add
pop
pop
dec
js
jmp
mov
jmp
rorb
mov
pop
xrelease
lods
xchg
inc
hlt
jmp
mov
aaa
push
sbb
sub
arpl
scas
inc
dec
out
jl
pextrw
outsl
repnz
das
sbb
sub
push
imul
test
xchg
gs
xchg
cwtl
cmp
xor
mov
or
push
add
fnsave
rcrb
cmp
xor
int3
flds
sub
fstps
out
jns
mov
mov
pop
addr16
xchg
addl
pusha
sub
insb
gs
lret
and
shll
sti
in
fidivrl
imul
xor
repnz
jnp
mov
dec
scas
sbb
mov
add
rclb
mov
or
mov
sbb
sub
mov
mov
sub
sbb
sbb
cli
adc
ljmp
sbb
les
imul
movsb
jmp
jmp
in
jb
into
shll
cmpsl
and
mov
mov
ret
mov
lods
jne
out
cmpb
stc
aam
mov
sub
mov
lret
and
jge
inc
xor
nop
into
hlt
push
rcll
test
lods
pop
enter
lret
imul
mov
pop
or
outsl
jno
and
mov
sbb
or
hlt
std
sbb
sti
jb
popf
das
std
stos
gs
push
stos
jno
ret
orb
xchg
imul
cld
cmp
pop
test
popf
enter
mov
adc
jecxz
inc
pop
mov
and
jb
iret
das
scas
scas
cwtl
sbb
sub
in
pop
scas
sub
cwtl
xor
adc
movsl
cmc
xor
je
push
mov
adcb
dec
mov
cmp
mov
and
fsubr
inc
jne
xchg
ror
jg
ljmp
cwtl
inc
int
pusha
pop
cmp
mov
cmp
movsl
pop
ss
xchg
add
pushf
push
jmp
push
scas
insb
sub
std
pop
cltd
mov
movsb
push
jne
daa
cltd
sarl
mov
push
mov
pop
inc
iret
out
jae
test
xchg
push
mov
mov
mov
cwtl
push
mov
scas
mov
ds
mov
mov
jae
call
stos
dec
es
jns
inc
add
test
fisubs
cmp
add
ja
push
push
ret
cmp
std
arpl
xor
or
mov
jbe
jg
addr16
ficompl
adc
add
mov
sbb
rcrl
jp
mov
cmp
mov
orb
sbbl
movsb
push
jl
mov
mov
fmull
cld
xchg
pop
add
inc
xlat
stos
ror
pop
dec
push
clc
cmp
and
outsb
nop
jo
negl
push
mov
push
lahf
adc
nop
das
jg
data16
outsb
dec
sbb
cli
add
mov
xchg
scas
lret
pop
test
xlat
iret
push
addl
cmpsl
test
add
sbb
xchg
pop
cmc
rorl
scas
jb
hlt
xchg
test
jp
arpl
xchg
add
adc
inc
adc
sub
test
int
cmp
shrl
sti
sub
xchg
jge
mov
je
aam
stos
flds
or
mov
call
mov
sub
rcrl
push
mov
mov
jbe
push
add
mov
cmp
and
call
add
popa
cmp
lcall
or
mov
pusha
insl
push
xchg
mov
xchg
xor
jmp
mov
loop
and
dec
and
jp
fdivrp
test
addb
sub
dec
cmp
inc
and
mov
out
push
xor
aaa
mov
repz
xlat
jecxz
sbb
mov
xchg
test
xchg
push
cmp
insb
jb
mov
test
lock
rorb
inc
repnz
lods
xor
ja
cld
fmul
push
adc
adc
arpl
cmp
inc
insl
cmp
sub
xor
scas
sbb
sub
popa
scas
les
nop
mov
jo
lahf
lods
in
xor
jl
and
dec
mov
sub
fs
adc
cmc
rcr
mov
mov
ja
call
ss
addr16
data16
inc
or
sub
cmp
les
mov
jae
loopne
and
cmpsl
mov
ret
loopne
mov
leave
scas
int3
and
mov
jg
cs
or
adcb
out
sub
movb
sbb
xor
sub
sbb
push
insb
adc
mov
add
out
mov
push
iret
cmovle
inc
jae
imul
aaa
fildll
test
dec
push
call
xor
lcall
and
sbb
push
add
inc
shlb
and
mov
xchg
pop
push
mov
xlat
xor
push
mov
jl
std
lock
add
rorl
loope
jno
mov
dec
jg
cmpb
xchg
test
mov
pop
xor
nop
inc
mov
sub
inc
sbb
push
add
dec
hlt
push
addr16
or
jp
pop
lret
outsl
fwait
sahf
push
mov
dec
jne
sbb
inc
adc
inc
inc
test
scas
xchg
cmpsb
push
dec
xchg
fisttps
inc
outsb
fs
lret
lcall
sub
aaa
pop
movsb
xchg
lahf
icebp
repnz
push
lcall
addr16
dec
les
repnz
inc
stos
inc
jecxz
mov
bound
jae
gs
imul
loop
pop
xor
imul
fcoml
out
sub
xchg
add
frstor
mov
xchg
ja
sbb
xchg
or
push
mov
sti
sbb
fwait
cmpsl
test
lahf
es
out
push
xchg
ret
add
icebp
movsl
jb
sub
rol
fsubrs
mov
sbb
loopne
pop
or
andl
ljmp
cwtl
adc
cli
stc
mul
div
xchg
sbb
xchg
call
outsl
cwtl
scas
dec
dec
add
idivl
xchg
sbb
jae
push
dec
jecxz,pt
nop
loopne
lret
xlat
das
lcall
roll
and
sub
lds
push
mov
dec
fisttpl
inc
imul
push
cli
sub
jecxz
je
into
cld
or
enter
in
bound
aaa
mov
or
or
adc
pop
mov
pop
or
jge
mov
scas
mov
or
outsb
enter
outsb
pushf
ja
out
cmp
lcall
insb
inc
nop
sub
jmp
out
and
mov
cltd
loope
xor
ret
nop
jle
divl
push
add
pop
icebp
addr16
mov
inc
sti
out
mov
mov
jns
jl
ret
add
cli
mov
movsb
pusha
xchg
daa
aad
mov
jle
mov
enter
sbb
adc
jecxz
mov
pop
push
in
pop
arpl
xor
imul
imul
dec
push
xor
lock
js
mov
mov
shr
add
sbb
xor
pop
cwtl
inc
dec
cmc
ljmp
and
int
jg
movsb
jns
push
mov
fdivr
imul
cli
mov
lret
jo
sbb
dec
inc
mov
inc
inc
jno
dec
add
or
idivb
scas
cmova
lret
ds
sbb
insb
repnz
sbb
xchg
pop
shl
sarb
popf
aad
add
out
add
mov
sbb
add
push
bound
cs
sub
mov
cmp
add
xchg
aam
testl
rcll
arpl
mov
cli
jg
out
fistps
imul
lahf
dec
xor
xchg
mov
mov
icebp
stos
inc
and
mov
jmp
stc
add
fwait
xchg
mov
insl
in
jle
jnp
push
clc
push
iret
mov
jmp
pop
sbb
mov
mov
mov
mov
hlt
mov
pusha
push
push
adc
xchg
jmp
enter
mov
push
jg
dec
or
mov
test
imul
xor
pop
sub
lcall
and
xor
stos
loop
xchg
xor
cmc
dec
and
sbb
js
adc
sti
pop
out
push
xchg
sub
jg
insb
sbb
mov
xchg
repz
aam
es
out
and
fdivr
insl
daa
sub
pop
adc
add
imul
dec
mov
cmpsb
jl
insl
inc
pop
adc
rcrb
or
popf
jbe
push
jle
push
cmp
cmpl
pop
out
pop
pushf
mov
shlb
je
jns
loope
movaps
bound
mov
mov
mov
jnp
jp
adc
ret
jp
sbb
sti
mov
inc
jmp
dec
push
add
inc
test
and
add
insb
lret
xchg
ja
fdivl
int3
adc
add
add
sbb
pop
xchg
and
iret
out
addr16
ss
mov
fsts
and
jl
pop
pop
sti
jle
movsb
fistpl
pusha
push
cmp
hlt
js
push
rcr
push
xlat
xor
inc
in
stos
push
es
mov
add
test
dec
push
stc
xorl
mov
mov
negl
hlt
push
cmp
ja
xor
jge
mov
xchg
test
sub
jae
fcmovnb
je
aam
mov
stos
pushf
inc
insb
negl
pop
pop
test
int3
adc
inc
mov
outsl
sub
pop
loop
ja
les
jb
mov
jge
cli
mov
mov
jmp
dec
or
sbb
push
std
or
inc
fcoml
cmc
inc
cwtl
lds
inc
sbb
mov
pop
test
mov
lds
sti
pop
xor
decl
insb
jge
movsb
adc
mov
or
add
add
iret
mov
popf
lods
rcr
xor
inc
fs
pushl
xchg
dec
push
cmp
xor
ror
cld
out
aam
outsl
mov
pop
gs
mov
xchg
jne
insb
movsb
shlb
iret
rdtsc
sub
addr16
es
ljmp
mov
rcrl
mov
mov
xchg
push
repz
inc
pop
mov
or
push
out
cmp
mov
and
scas
out
rorb
lds
lcall
aad
shlb
orb
sub
xor
pop
in
out
and
in
xor
aaa
test
lret
lret
pop
fsubs
mov
popa
dec
lods
mov
push
cwtl
sbb
jnp
dec
pop
inc
jbe
call
cmp
inc
imul
jbe
lock
xchg
xchg
mov
lods
pop
test
push
iret
rorb
push
repnz
rcrb
push
arpl
xchg
jae
jae
test
frstor
iret
out
adc
enter
test
xor
fcoml
mov
jmp
lret
sbb
dec
rolb
mov
sbb
ja
pushf
cli
iret
cmp
mov
and
ret
mov
pushf
dec
mov
mov
scas
jno
ljmp
and
rcl
orb
scas
pop
fnsave
rcrb
popa
lods
fisubrl
aaa
pop
push
sti
or
lods
and
pop
loop
test
pusha
fidivrl
fwait
sub
sub
mov
pop
test
push
add
mov
movsl
cmpsb
lcall
lock
adc
imul
out
je
movb
mov
mov
push
cmp
or
jmp
lahf
dec
dec
popf
mov
cmp
ljmp
cmp
cs
das
xor
mov
xchg
aaa
sbb
mov
or
sbb
fwait
lock
insl
and
imul
lods
loopne
adc
xchg
mov
or
lods
popa
inc
push
fstpt
int
arpl
jo
mov
xchg
ret
jmp
and
jp
shl
lret
sub
ja
test
gs
push
repnz
push
stos
ljmp
stos
adc
pusha
inc
movsl
test
aam
sarl
or
xchg
push
mov
loopne
jno
push
xchg
pusha
sbb
ss
pop
or
pop
mov
inc
jmp
jge
pop
mov
pop
int
push
ficomps
push
sbb
dec
out
adc
roll
sti
and
adc
aas
ss
inc
mov
dec
out
xor
cld
sub
mov
sbb
push
inc
std
repnz
add
add
sub
clc
mov
push
jno
mov
fdivrs
mull
pop
mov
mov
inc
sub
sub
add
in
mov
jle
mov
out
outsb
add
out
imul
ret
fdivl
jp
push
pop
loop
fcmovbe
jo
push
in
jno
rolb
xchg
jbe
inc
adc
test
jle
jb
into
push
es
lahf
inc
sbb
std
or
inc
ja
aaa
inc
mov
dec
bound
sbb
jg
imul
ljmp
roll
clc
sbb
jecxz
in
mov
mov
mov
jns
pushf
fdivs
enter
jl
jg
lods
test
scas
sarl
mov
aam
out
cmp
shr
adc
mov
xchg
add
int
ja
xor
leave
inc
and
pmaddwd
test
loopne
push
stc
xchg
cmp
xchg
fnsave
sbb
mov
inc
xchg
and
movsb
pop
mov
out
cmpsl
fldpi
pop
inc
pop
in
and
sub
fistpll
mov
pop
dec
iret
insl
xor
lcall
fdiv
outsl
jne
enter
divl
jge
mov
jne
loopne
imul
pop
mov
or
dec
inc
out
sbb
imul
js
push
ds
adc
sahf
loopne
frstor
push
ss
mov
push
cmp
dec
ret
mov
outsb
mov
icebp
inc
dec
adc
lods
push
sbbb
outsl
xchg
adcl
jo
pusha
mov
xor
stos
movsb
mov
push
inc
or
add
stos
cwtl
je
mov
xchg
add
sti
out
pop
jmp
pop
mov
pop
ds
jl
dec
fnstcw
mov
xor
cld
add
int3
in
lods
jge
ss
xor
mov
xchg
push
xchg
cmpsb
ret
or
notl
ficomps
mov
clc
insl
subb
jns
jecxz,pt
loop
popf
leave
lret
movsb
in
cmpsb
mov
xchg
xchg
mov
mov
jp
mov
lahf
cmp
mov
sbb
mov
ret
mov
in
cld
cmpsl
cld
pop
mov
cmp
push
idiv
in
les
cmp
adc
je
mov
and
push
mov
pop
sub
mov
sub
fldenv
or
imul
inc
aam
xlat
push
dec
adc
push
mov
out
cmc
xchg
mov
dec
into
fdivrs
sub
push
cmp
popf
and
rclb
mov
jecxz
roll
mov
lock
movsl
fwait
push
lret
lea
test
lods
enter
in
clc
sbb
cs
scas
sub
mov
inc
ja
dec
clc
push
fimuls
subl
test
mov
dec
or
clc
std
mov
andl
out
dec
loope
fsts
pop
loop
loope
cmpsb
inc
jo
data16
add
test
movsl
cwtl
icebp
addr16
cltd
push
out
cld
dec
mov
stos
lcall
mov
or
adcl
repnz
xor
xor
leave
test
int
cwtl
pop
pop
daa
lods
in
aas
jno
jb
cli
aad
pop
sub
inc
imul
xchg
lds
mov
arpl
mov
mov
push
jge
and
jle
and
sarl
loope
in
jno
dec
cmp
mov
ds
push
and
pop
data16
movsb
adc
inc
sbb
or
mov
mov
fs
pop
in
das
jecxz
fists
imul
mov
test
xor
fucom
inc
leave
out
inc
fisubrs
addr16
out
test
lock
mov
bound
out
sub
jmp
das
jno
jo
or
mov
adc
rcrb
fidivs
cmp
fsubr
int
pop
sbb
test
inc
dec
bswap
cmp
data16
sbb
push
push
loope
mov
nop
jno
sarl
call
cmp
xor
sub
dec
sub
test
lods
ret
adcb
xchg
mov
add
es
scas
scas
or
inc
clc
mov
mov
mov
repnz
lahf
adc
arpl
jmp
nop
jno
or
loop
mov
cld
adcl
inc
flds
out
stc
mov
test
mov
and
int
push
fldenv
shlb
pop
jp
or
adc
mov
xchg
or
adc
inc
cs
insl
push
mov
add
ret
xorb
xchg
mov
mov
push
push
push
out
cltd
push
mov
xchg
sti
sbb
xchg
enter
clc
xor
push
clc
cs
mov
cmp
stos
xchg
call
sbb
adc
mov
xor
dec
loop
push
or
scas
insb
andl
sbb
outsb
xor
jbe
xlat
add
dec
mov
sbb
add
mov
jge
lret
mov
fmull
sub
sbb
cmp
loope
repz
or
lahf
mov
sbb
xchg
xor
gs
mov
aad
or
mov
adc
test
mov
and
xchg
jno
jl
hlt
mov
and
push
imul
jno
mov
fiaddl
xchg
xchg
xor
shrb
jb
xchg
xchg
xor
stos
xlat
mov
dec
loopne
pop
jge
add
int3
aad
sbb
daa
aam
or
and
xchg
and
inc
and
xlat
scas
push
faddl
idiv
sbb
xchg
jge
pop
pop
pop
insl
sub
xchg
std
dec
ss
lret
dec
in
lcall
das
adc
or
inc
xlat
scas
sub
and
or
pop
ds
jo
ficoms
popf
cmpsl
es
fists
lock
xchg
xor
arpl
push
pop
sub
movsl
jns
cmc
mov
jnp
push
loopne
add
loopne
test
and
enter
or
xchg
int3
pop
lods
pop
loopne
fsubr
and
ja
ja
js
sub
sbb
in
add
mov
push
leave
mov
in
and
and
in
lods
sub
das
or
decl
rorb
inc
cltd
pop
cmp
push
out
movsl
inc
xchg
incl
fwait
or
test
xchg
lret
lahf
in
fisttpl
pop
dec
jle
sub
cmp
xchg
adc
pop
les
rcrl
jns
mov
mov
mov
pop
dec
cmpl
aaa
inc
jg
inc
cmp
outsl
imul
pop
fnstenv
and
cmp
push
mov
ror
xor
ficomps
in
sbb
ret
cmpsl
js
and
fsubl
mov
pop
xchg
ds
icebp
adc
test
inc
enter
mov
jmp
pop
pop
insl
pop
add
adc
inc
sub
cmp
dec
test
movsl
subb
sbb
mov
testl
fwait
xor
out
xchg
mov
sbb
dec
inc
mov
adc
insb
sub
mov
pop
loope
mov
xchg
xchg
lods
cmpsb
lahf
rolb
adc
or
sbb
and
inc
mov
lahf
les
push
xchg
mov
dec
and
pop
std
mov
sbb
mov
test
xor
cmp
sbb
lret
jb
or
push
cmc
dec
inc
or
shrb
mov
mov
cmp
mov
pop
lahf
mov
add
stos
testl
loopne
add
sub
outsb
push
idivl
jno
subb
jl
mov
leave
jl
inc
add
xorl
popa
lock
fnsave
pusha
push
mov
jp
lds
leave
push
pop
dec
mov
mov
cltd
push
add
ror
insb
cmpsb
out
roll
cld
dec
mov
push
inc
lock
add
pop
icebp
mul
pop
fldenv
es
pushf
lret
mov
stos
push
push
movsb
lcall
inc
jnp
dec
ficoms
lahf
rorb
xor
cmpsl
dec
mov
mov
push
mov
cmp
jmp
mov
add
mov
inc
jae
repnz
lods
push
dec
mov
jle
les
das
xchg
jle
or
arpl
mov
xchg
mov
dec
mov
inc
mov
or
imul
rclb
ss
pusha
adc
dec
lea
mov
mov
jge
pop
cltd
jecxz
xchg
pop
mov
test
insb
ja
jae
ds
aas
or
and
adc
sti
push
mov
fidivrs
fs
xor
push
xchg
mov
rorl
lods
mov
add
add
leave
das
fwait
or
repnz
ljmp
in
imul
push
adcb
rcrb
mov
mov
lret
inc
imul
pop
push
adc
aad
jns
xchg
jae
cli
xchg
xor
mov
cmp
into
repz
daa
xchg
fisttpl
add
push
pusha
add
nop
fs
out
insl
pusha
dec
sarl
adcb
mov
inc
stos
jnp
jo
ja
fdivl
filds
dec
mov
shl
mov
cmp
cmp
adc
ljmp
pop
sub
mov
daa
out
ja
or
sbb
push
out
std
push
fucomi
and
lods
mov
jle
loop
daa
les
ret
or
push
sti
shrl
sub
jnp
arpl
insb
lret
mov
cmp
mov
mov
sub
shlb
jns
dec
adc
sbb
fsubs
jle
mov
sub
push
pop
push
jmp
ror
pop
mov
cs
push
into
sbb
jl
ds
cmc
lea
xchg
rcr
inc
das
mov
adc
mov
dec
jne
fstps
and
pop
in
mov
lahf
je
aas
call
sub
dec
neg
push
and
test
xchg
push
rol
mov
cmp
inc
sbb
jo
xlat
push
fisubs
xor
or
mov
inc
mov
arpl
testl
rolb
out
out
mov
insl
jns
sub
mov
sbbl
pop
js
test
bt
cs
loopne
sahf
lds
loopne
mov
fucomip
inc
pushf
je
insl
xor
dec
out
pop
cmp
fimull
into
icebp
cmpl
jo
addr16
adc
push
inc
icebp
mov
pop
gs
add
jge
cwtl
jne
or
test
ret
push
push
mov
sub
arpl
in
and
imul
outsl
mov
movsb
and
xchg
jecxz
lcall
mov
xchg
ja
adcl
in
sub
aaa
aam
lret
icebp
jge
enter
cmp
adc
nop
clc
mov
jb
lahf
mov
cmp
cmp
jmp
add
mov
mov
cmpsb
cmp
in
cmpsb
fstl
fbld
xchg
jecxz
repz
mov
mov
ret
push
ret
lds
xor
sub
sbb
dec
dec
cwtl
cltd
mov
sbb
mov
dec
js
mov
xchg
subb
fists
inc
push
cmp
ljmp
mov
cmp
push
fs
push
xchg
push
cmp
jb
adc
push
or
cli
js
aam
idivl
test
pusha
test
add
imul
or
mov
notb
ljmp
cltd
sbb
aam
xchg
mov
js
mov
jl
lock
fs
pop
xor
cltd
push
test
cmp
mov
jns
adc
imulb
dec
sub
cs
jp
gs
lret
std
sbb
mov
fisttpll
movsl
and
lret
out
das
mov
push
movsb
adc
sub
cmc
stos
dec
mov
dec
dec
insb
cs
or
stos
jnp
dec
stc
pop
pop
aaa
imul
add
xor
and
popf
xor
push
mov
arpl
and
and
xor
popa
scas
push
notb
or
in
loopne
cmp
push
loope
das
imul
es
jns
dec
mov
jnp
loope
jne
and
jns
ret
dec
xchg
sbb
je
test
lea
out
add
jmp
and
cmp
out
mov
xor
push
push
jmp
testb
push
cmp
nop
cmpsb
jg
enter
leave
mov
imul
jg
mov
jbe
mov
icebp
je
imul
inc
test
pop
adc
outsb
popa
xchg
es
pusha
out
cmpsw
cmpsb
sbb
mov
mov
cwtl
mov
lds
jmp
test
mov
pop
mov
and
testb
jb
fmuls
out
sub
fwait
mov
cmp
int
fmuls
dec
sar
cmp
out
inc
andb
orl
into
inc
add
movsl
inc
jae
adc
outsb
vshufps
xlat
stos
shll
faddl
pushl
pop
or
xchg
pusha
pop
mov
sbb
call
and
cmp
mov
fwait
or
sub
arpl
sub
push
loop
out
xchg
ljmp
pop
loopne
movsl
leave
pop
push
lea
pop
fists
mov
rol
cltd
push
lds
in
popf
loop
dec
je
idiv
repnz
add
ds
test
xchg
add
jge
mov
aaa
push
lods
jecxz
xor
in
dec
std
loopne
or
clc
and
mov
sub
cmpsl
jmp
jne
notl
jno
mov
popa
rcrl
pop
lcall
adc
cmp
cmp
and
adc
ss
leave
jb
sbb
je
dec
movsl
xchg
jbe
aas
mov
cmp
inc
mov
roll
and
mov
test
adc
mov
and
fucom
pop
pop
cmc
jecxz
pop
push
add
and
std
rcll
sub
in
dec
js
and
sub
ret
xor
sbbl
and
mov
inc
outsb
fidivrl
cmpb
pushf
repz
sub
test
xchg
sahf
and
xlat
lea
mov
pop
push
test
out
cwtl
ds
std
mov
jge
and
js
cmc
cltd
xor
fisttpl
jo
scas
sbb
lret
sbb
pop
push
clc
xchg
rclb
add
jno
shlb
lea
out
ljmp
add
and
out
dec
fstl
jns
pop
pop
xor
mov
inc
sub
sub
sahf
mov
iret
add
stc
testb
repz
mov
stos
orl
jmp
jno
not
xor
sbbb
mov
jg
subb
cmp
sbb
aam
mov
lds
cltd
add
flds
nop
xchg
movsl
js
mov
xor
xchg
lret
cmp
sub
pop
sbb
add
mov
mov
filds
jae
leave
cmp
cld
pop
inc
shrl
aad
or
addb
lcall
bound
xor
sbb
jge
sbb
and
mov
mov
add
insl
and
pushf
int
movsb
xchg
mov
inc
out
loopne
movb
inc
mov
stos
dec
inc
add
fwait
jle
cmc
rclb
pop
rol
and
out
sahf
xchg
int3
inc
xchg
mov
stos
sbb
cmp
xchg
sbb
cmp
ret
push
popa
sti
adc
pop
or
gs
sbb
or
loope
jge
mov
mov
filds
sbb
shlb
cld
pop
or
dec
adc
cld
xchg
je
enter
or
mov
jle
mov
daa
aam
insb
or
or
dec
leave
mov
cmp
inc
es
jo
insb
jo
sub
adc
xchg
sbb
mov
xor
rcl
adc
dec
pusha
fs
dec
scas
andb
sub
push
mov
or
lock
aam
das
mov
pop
xchg
dec
cld
xchg
sbb
ds
stc
out
cmp
xor
lret
jne
or
mov
jecxz
lret
stc
mov
jg
les
mov
fildll
pop
cmpb
fcoml
mov
mov
enter
add
das
mov
xchg
ficoms
cwtl
leave
rcll
mov
xor
jmp
sub
mov
xorl
dec
fadds
push
cmpsl
mov
cmpsb
mov
das
into
ss
repnz
cmp
sub
repnz
inc
lahf
pushf
movsb
or
into
in
jne
pop
imul
jmp
pop
pop
aam
daa
adc
js
add
ret
stos
and
shll
pop
dec
repz
mov
sub
or
cmp
faddl
mov
insb
flds
int3
cld
das
sub
and
push
xchg
jmp
loopne
adc
std
and
cmpsb
mov
shlb
clc
cmpsb
sbb
cli
dec
jmp
push
fisttpll
rorl
pop
subl
hlt
lock
and
jle
jmp
stos
clc
aaa
sub
mov
sub
adc
js
jecxz
jecxz
es
loop
dec
push
push
xchg
xor
mov
lret
dec
pop
and
int
add
and
and
sub
outsl
stos
pop
test
mov
stos
data16
fcomi
mov
sbb
fs
lret
cwtl
lahf
mov
jns
cmp
mov
jmp
lds
cltd
fs
jl
pop
sbb
cld
xchg
mov
int
sub
out
sbbl
testb
or
mov
add
xchg
mov
jle
js
cld
lea
fucomi
lea
jmp
ljmp
add
mov
push
rcrb
test
scas
xchg
call
sbb
pop
clc
add
push
push
mov
pop
cmp
lcall
push
sbb
mov
in
cltd
pop
call
mov
sahf
bound
jecxz
sbb
mov
fisubl
fwait
iret
outsl
inc
jg
out
jo
mov
nop
hlt
jle
or
xor
fistpll
out
int
jno
and
sbb
fldenv
push
cmp
nop
pop
int3
dec
lods
jae
fcmovnu
push
call
sub
rorb
scas
xchg
test
sti
fadds
out
inc
pushf
mov
lods
xor
add
pop
pop
lcall
mov
lret
or
or
in
jb
data16
out
ja
xor
imul
fs
push
jns
stos
adc
dec
leave
pop
sti
or
sbb
test
cld
adc
xlat
into
cmp
xor
xor
loopne
clc
inc
pop
mov
mov
cmpsb
test
adc
daa
push
lods
call
jmp
sub
hlt
add
popa
out
mov
dec
shrb
les
shl
mov
mov
rcrb
pop
hlt
and
outsb
push
mov
push
fs
insl
jne
inc
and
clc
fnstcw
push
mov
jb
out
jo
adc
mov
rorl
addb
jb
loope
xchg
lock
mov
ret
int3
dec
mov
lds
call
inc
test
enter
or
cmp
xchg
jae
mov
jb
mov
sbb
push
mov
addl
pusha
fisttps
mov
xchg
dec
clc
inc
repnz
and
aaa
iret
lods
mov
test
push
cmp
popa
xchg
xchg
test
cmp
fldenv
xchg
dec
or
in
adc
mov
fsubl
sti
lret
mov
mov
cmpb
xor
cltd
outsb
adc
fs
test
xchg
insl
ss
in
out
out
inc
ja
or
cs
and
xchg
xchg
hlt
mov
sbb
fucomi
dec
mov
jns
test
mov
mov
push
xsave
or
jne
mov
or
inc
adc
in
loope
push
les
stc
sub
mov
loope
fisubrs
dec
sbb
int3
add
lock
pop
fwait
iret
or
add
add
mov
xor
jbe
push
inc
sbb
pop
xchg
test
shrb
adc
pop
mov
movsl
push
xchg
movsl
rolb
sbbl
fsubp
jno
out
mov
cmp
int3
add
int3
and
orl
pop
aas
inc
cmp
jne
sub
loop
pop
jo,pt
ret
fldenv
aam
das
jo
in
push
stos
in
out
push
push
dec
pop
pop
aas
xor
jae
leave
fisttpl
ljmp
mov
jp
jle
sbbb
iret
cs
and
ds
lods
fwait
lds
mov
xorl
clc
gs
push
test
lods
jl
dec
or
sub
out
pop
mov
jecxz
mov
fcompl
xor
pop
cs
outsl
mov
cmp
fcoml
pushf
fsubs
cmp
dec
cwtl
stos
test
mov
inc
adc
or
leave
std
pop
mov
into
cmpsl
sti
out
xor
pop
cld
jne
cmpsb
loopne
xchg
cltd
popf
dec
jp
sbb
xchg
fimuls
xor
or
sub
and
pusha
cwtl
rclb
jo
cwtl
xchg
or
iret
sbb
cwtl
adc
sbb
mov
inc
pop
inc
or
fs
xor
in
pusha
xchg
aad
movd
fists
pusha
and
fiaddl
repnz
lcall
pop
xor
or
cli
xchg
ret
loop
ret
loopne
push
push
aad
jnp
mov
inc
hlt
ljmp
mov
adc
call
leave
add
int
mov
repz
jb
xchg
or
into
out
add
inc
mov
stos
test
data16
mov
fcompl
push
cmp
std
or
andb
cmp
sbb
xchg
push
clc
and
repz
push
test
mov
fs
pop
scas
hlt
sbb
in
push
call
mov
jg
data16
jb
cmp
jl
lods
dec
add
stos
shlb
mov
xchg
push
mov
in
into
jl
stos
mov
mov
icebp
sbb
push
and
pop
xchg
ret
xchg
sbbb
inc
jns
xlat
ss
cmp
cmp
rcrl
clc
inc
dec
in
pop
and
in
sbb
sbb
pop
mov
xor
ficoml
cltd
jg
enter
inc
add
or
imul
cmp
mov
sbb
mov
cmpsb
je
xlat
ja
mov
adc
adc
stos
fisttpl
test
adc
cs
and
push
mov
aaa
dec
fmuls
lds
popf
push
or
movsl
decb
inc
jecxz
loopne
inc
xor
jae
addr16
add
js
mov
daa
lret
add
out
cmp
ficompl
les
fldenv
xlat
mov
popa
gs
jge
xor
fstpl
sarb
outsl
and
jg
lcall
ds
mov
icebp
jmp
fcom
fmull
dec
sbb
mov
lahf
fdivl
sub
arpl
nop
aam
push
jecxz
cmp
pop
xor
jmp
and
cs
repz
mov
pop
pop
cmp
popa
imul
lret
sti
loop
sbb
xor
pop
popf
notb
cltd
mov
mov
cmp
pop
dec
sbb
fpatan
push
xor
xor
push
jecxz
cmp
addr16
shlb
inc
mov
fldlg2
push
mov
and
mov
loope
pop
test
addr16
mov
dec
jmp
mov
dec
adc
vxorpd
dec
ffreep
push
out
push
out
cmp
jle
mov
jbe
out
push
dec
push
ljmp
into
cltd
and
jae
lock
and
mov
xor
sub
dec
data16
insb
shlb
out
dec
daa
jne
or
insl
fcoml
mov
int3
aad
jge
nop
pop
test
stos
sub
lahf
icebp
mov
fsubr
stc
inc
mov
push
imul
lods
mov
cwtl
xor
xlat
in
pop
rcrb
orl
neg
aas
scas
push
dec
sbb
jmp
sub
jbe
sub
mov
fists
xchg
out
movsl
push
sbb
mov
out
mov
pop
sbb
idivb
sbb
sbb
lods
and
test
mov
xchg
inc
stos
pop
fsubrl
push
jmp
and
sbb
stos
push
into
in
mov
xchg
scas
shlb
push
subb
lcall
pop
cli
test
dec
fistpll
jecxz
out
push
inc
sub
lock
int3
pop
into
jbe
mov
mov
into
cmp
scas
pop
ret
rolb
mov
push
and
and
mov
inc
mov
mov
or
sbb
frstor
icebp
dec
iret
xchg
fsubp
or
sbb
add
mov
push
ljmp
lods
test
lret
out
testl
xor
push
xor
loop
insb
loope
pop
mov
inc
addb
or
loop
push
inc
enter
pusha
push
inc
and
in
fs
add
adc
loop
test
aad
mov
dec
mov
dec
lahf
mov
es
adc
mov
xchg
push
add
popf
int
std
nop
hlt
orl
xchg
rcll
and
dec
mov
movsl
sbb
sub
mov
sub
lcall
ja
adc
imul
adc
lds
sbb
bound
add
in
xlat
push
sbb
lea
jnp
jge
jbe
dec
pop
arpl
push
push
or
mov
xchg
mov
or
mov
shl
add
mov
mov
inc
out
pushf
mov
mov
jae
xor
mov
push
xchg
dec
add
outsb
cwtl
lods
pushf
stos
shll
enter
push
fstps
add
sbb
pop
mov
cld
push
jns
inc
mov
xchg
jnp
mov
pcmpeqd
xor
imul
std
inc
or
cmp
mov
mov
fisubl
call
xor
hlt
xorps
and
lock
cwtl
xchg
mov
shl
stc
or
pop
je
lahf
jno
cmp
xor
push
mov
sub
aad
cltd
dec
std
mov
pop
mov
mov
setg
and
push
pop
es
xor
in
cmp
pop
and
mov
repnz
mov
arpl
sub
adc
add
subl
cmp
xchg
push
popf
push
sahf
pop
mov
out
imul
xor
or
stc
pop
pop
lret
pop
mov
in
lods
mov
data16
cltd
adc
cmp
cmp
or
push
pop
adc
push
ficompl
pop
dec
test
xchg
pop
mov
insb
cmp
sub
mov
fwait
cltd
xchg
jl
cltd
shlb
mov
negl
js
xlat
push
jns
sbb
mulb
inc
cmp
aas
and
xor
push
aaa
xor
clc
loop
and
sub
jne
sbb
xor
lahf
test
push
repnz
shl
cmp
cld
pop
mov
sarb
push
stos
std
pop
test
es
ret
pop
pusha
add
imul
fbld
cmp
call
mov
insl
out
repnz
or
pop
push
popf
add
dec
mov
rol
mov
mov
mov
or
push
or
jnp
aam
pop
sahf
or
push
fisubrs
mov
scas
in
push
pop
push
sub
inc
rcll
xor
das
mov
push
dec
andb
pusha
mov
shl
enter
cmpl
test
inc
xor
mov
bound
out
lret
sar
inc
jne
shrb
inc
shl
paddsw
hlt
push
cltd
fst
test
cld
es
adc
call
mov
mov
mov
das
pop
add
data16
push
push
mov
sbb
sbb
mul
daa
lret
imul
mov
int
mov
inc
pop
fwait
mov
enter
cmp
mov
adc
dec
in
les
mov
es
and
popa
aaa
out
and
adc
shlb
xchg
in
push
push
dec
adc
or
dec
push
pop
sahf
push
inc
sbb
mov
fstp
pop
inc
add
and
pop
jne
cwtl
adc
or
cltd
cmp
mov
sbb
pop
in
push
push
inc
adc
mov
movsl
hlt
in
push
ret
or
mov
aas
push
pop
sbb
icebp
add
test
jnp
hlt
ljmp
iret
sub
cs
mov
sub
fsubrs
scas
pop
clc
mov
jmp
sbb
aaa
cmc
fwait
push
js
mov
imul
mov
loop
int3
ljmp
out
lret
imul
lods
test
aad
movsb
sahf
mulb
ljmp
mov
cld
out
lods
mov
enter
inc
shll
inc
xchg
mov
jae
pusha
mov
and
add
pop
pop
inc
lods
popf
dec
mov
sub
bound
pop
push
jne
scas
sub
mov
pop
pop
add
dec
and
int3
or
push
xor
lahf
lock
sbb
xchg
into
fnsave
inc
mov
sarl
dec
enter
mov
hlt
mov
stc
sbb
inc
cld
and
lret
lods
xchg
dec
sub
inc
call
push
adc
or
lods
sub
mov
inc
push
mov
jno
xor
pop
gs
lahf
dec
fisubrl
cld
mov
mov
mov
fdivr
repz
inc
mov
gs
pop
clc
cli
sub
pop
sub
mov
xchg
xchg
cmp
cs
pushf
sub
lret
pop
pop
pushf
dec
inc
insb
enter
ljmp
scas
sti
pop
push
dec
dec
mov
xchg
les
adc
pusha
je
xchg
sub
xchg
push
adc
mov
leave
inc
shrb
or
pop
jmp
je
lahf
lods
test
mov
fwait
mov
ret
adc
and
or
test
jns
scas
mov
mov
inc
nop
jle
loop
repnz
test
cmp
push
popf
mov
pop
into
mov
stc
pop
vcvttps2dq
sub
imul
sbb
pop
sbb
add
sarb
sub
rorl
stos
outsb
sahf
cmp
push
or
in
push
popf
push
fcoml
xor
push
pushf
xor
cmpsb
xor
das
int
adc
xchg
jno
in
aaa
add
fsubr
rcrb
in
push
jae
push
fsubs
std
mov
jp
iret
clc
push
stc
jl
imul
mov
outsl
sbb
mov
data16
imul
out
pop
sbb
push
aad
xlat
test
popf
jbe
add
jl
pop
push
sub
aad
fucomi
mov
mov
push
outsb
test
jg
ret
fstpl
mov
add
loopne
and
into
fwait
sub
das
mov
push
je
js
pop
xor
and
xchg
pushf
shll
fldcw
pop
jne
inc
test
aaa
mov
enter
rcrl
mov
mov
cltd
insl
mov
movsb
push
jle
cmp
mov
loope
test
cwtl
imul
pop
mov
pop
jns
add
jl
ja
xchg
push
sub
rcrb
add
lcall
mov
outsl
and
es
lods
sbb
test
jl
fisubrl
jo
loope
or
lock
cs
xor
xor
sub
dec
lcall
sarl
std
jp
dec
call
or
xchg
ljmp
or
sub
mul
jns
aad
dec
adcb
les
insl
in
mov
ret
int
push
push
mov
out
xchg
jl
notl
hlt
mov
lods
test
inc
inc
pop
inc
pop
stc
js
adc
inc
pop
cmpsl
mov
adc
mov
movsl
aas
xbegin
push
iret
stos
mov
mov
sbb
sub
rdtsc
sbb
mov
push
test
mov
gs
and
pop
mov
inc
pop
arpl
adc
ret
mov
mov
push
jae
insl
sahf
inc
pop
ret
mov
pop
nop
inc
out
fmul
pushf
mov
pop
sub
add
and
clc
aaa
rclb
mov
hlt
or
inc
jno
inc
push
lock
sbb
xor
jne
sbb
into
rcll
call
adc
lret
sub
mov
sbb
pop
out
mov
push
push
popf
notl
fwait
add
xchg
push
add
fdivl
iret
push
insl
int
dec
stc
xor
sbb
testb
rorl
ret
add
or
mov
dec
push
test
shll
iret
add
lcall
movsl
add
xor
mov
mov
movsb
pop
inc
into
fadds
repnz
dec
pop
faddp
push
push
movsl
fidivs
jb
ja
sbb
enter
or
mov
or
ffreep
push
call
xchg
jb
idivl
sbb
inc
inc
jl
fadd
or
xlat
add
repz
loope
or
cmpsb
cmp
cmpsb
xor
dec
adc
mov
and
add
les
ss
xor
sti
push
dec
cs
jg
pop
cmpsl
cs
outsb
into
arpl
and
je
jecxz
and
and
repnz
xchg
xor
into
scas
bound
jl
xchg
vpsadbw
hlt
nop
sub
aas
xchg
jb
stos
dec
pushf
bound
cmp
sub
cmc
out
jl
jmp
in
into
mov
push
mov
lret
mov
data16
add
dec
movsb
cmp
jno
jnp
adc
stos
lea
cmpsl
dec
stos
ret
repnz
jbe
xchg
divl
ljmp
jp
test
stos
sar
orl
xchg
in
and
arpl
sbb
pop
aaa
into
insl
pop
ret
outsl
pop
fst
push
mov
addr16
jae
loop
dec
ds
xlat
adc
mov
or
fisubrs
jae
ret
rclb
outsb
fildll
jl
fbld
out
mov
xor
jle
xor
pop
adc
adc
bnd
into
xchg
jns
pop
nop
mov
sbb
push
repz
mov
or
mov
cmp
push
gs
sub
push
out
les
mov
bound
inc
push
jnp
les
dec
mov
out
ljmp
or
repz
test
cmp
jbe
bound
rclb
mov
jb
arpl
pop
xor
sbb
sbb
xlat
jns
inc
push
insl
push
xchg
pop
cmp
jl
in
out
or
outsb
xchg
pushf
sub
pop
dec
loopne
and
outsl
in
les
or
es
arpl
sub
jns
decl
test
cmp
mov
mov
push
and
xor
xchg
xchg
jno
dec
pop
pop
jmp
jmp
out
push
shlb
sub
lods
mov
pop
cmpsl
outsl
daa
cmp
jmp
fcompl
int
sub
mov
shl
popf
stos
or
mov
jmp
fdivrl
lock
scas
fildll
enter
dec
sarl
shlb
std
dec
push
pop
repz
inc
scas
dec
loopne,pn
rclb
int
adc
cs
addb
mov
out
pop
arpl
xchg
mov
push
arpl
and
clc
adcl
push
or
sub
mov
sbb
sub
aas
sub
ss
dec
and
test
sub
fdivl
arpl
xor
lcall
push
mov
fcomps
bound
js
jg
xchg
xor
into
test
out
and
adc
pusha
sbb
inc
test
cwtl
cmpsl
mov
or
jge
movsb
int3
pushf
xchg
fildll
push
mov
add
cltd
xor
mov
mov
inc
add
xor
push
cmp
dec
dec
jge
mov
mov
mov
mov
cwtl
bound
xor
inc
and
in
inc
push
test
jo
fninit
inc
call
jnp
pop
and
ja
test
adc
mov
mov
sbb
add
adc
jp
lahf
inc
int
add
add
stos
xor
or
mov
adc
or
pop
rclb
movsl
mov
lret
mov
inc
loop
out
cmpl
jl
xor
lcall
and
movsl
mov
mov
push
mov
xchg
popa
lea
movsl
push
ljmp
cmp
lods
mov
repz
lods
repnz
xchg
jno
shlb
fisubs
loop
ficoml
xor
or
inc
test
sbb
ja
mov
sbb
adc
dec
addr16
mov
and
cmp
cli
lea
ror
add
pusha
push
sub
or
test
es
jns
ss
xchg
add
add
lock
cmp
fnstenv
pop
ret
sub
pop
jb
js
pop
outsl
cmp
aas
cmc
sti
mov
jno
lock
lds
push
ret
inc
iretw
outsb
lods
mov
mov
lods
pushf
paddsb
add
mov
jb
mov
lahf
popl
fs
scas
mov
ret
out
shll
jl
pop
loope
mov
push
adc
push
adc
popw
sbb
bound
mov
adc
scas
cmc
adc
fistpll
pop
inc
in
stos
push
std
and
rolb
push
pop
push
imul
sub
out
jp
inc
lods
jmp
sbb
mov
negl
inc
dec
jo
lcall
idivb
xor
adcb
xchg
pop
hlt
stc
mov
mov
adc
test
nop
repnz
inc
jae
imul
add
dec
popa
mov
lret
call
fs
or
call
jecxz
adc
cmpsl
or
fdivl
dec
push
icebp
leave
inc
or
in
or
adc
fsubs
xlat
add
pop
repnz
xor
cmpsb
dec
ret
iret
xchg
out
pushf
sahf
adc
sub
cli
sub
lods
xchg
jge
repz
push
jle
pushl
out
xor
lahf
dec
and
imul
add
cld
push
push
xorl
aaa
gs
addr16
int
pop
call
inc
jp
pop
push
fsub
push
clc
fcomps
inc
repnz
jns
sub
imul
lea
mov
outsb
mov
and
fmuls
dec
lock
enter
cmp
notb
rcr
add
inc
xor
popf
psrld
and
add
xchg
ret
xor
lods
dec
mov
xor
lret
imul
xor
jl
negl
adc
div
jge
das
and
pusha
xchg
push
cwtl
testb
dec
aas
mov
lret
stos
sbb
and
mov
mov
mov
dec
sbb
imul
mov
pusha
jmp
cli
mov
inc
cmp
hlt
shl
xor
test
pop
pop
in
add
cld
test
or
add
jmp
fdivp
fsubrl
pop
jecxz
mov
popf
lods
adc
loopne
sbb
lcall
clc
inc
jbe
out
lahf
sti
andps
push
fwait
daa
repz
les
and
jne
dec
xchg
dec
notl
jp
mov
push
cli
and
dec
iret
add
out
lret
xchg
adc
xor
sahf
rclb
adc
or
xorps
stos
push
push
icebp
xor
and
sub
xor
fs
mov
insl
or
lods
fstpt
pop
in
xlat
mov
dec
mulb
clc
ljmp
jns
call
jns
sub
cmp
icebp
xchg
add
ret
xor
mov
mov
aad
popf
jo
and
in
add
jne
mov
aaa
jns
ds
inc
fstpl
aas
jg
cmp
fisubl
fistps
stc
pop
inc
mov
push
das
pop
inc
dec
or
or
dec
cmp
scas
out
lds
push
iret
mov
and
sub
push
xor
dec
les
shrb
fucomp
inc
mov
mov
in
stc
lret
shl
mov
xchg
pop
movsl
pop
mov
scas
leave
fidivrs
test
popf
scas
adc
cmp
pushf
dec
jnp
jae
rcll
aad
int
cmp
pop
sahf
scas
and
cwtl
movsl
or
loopne
sbb
xor
push
add
lods
fs
or
inc
inc
pop
idiv
cmp
pcmpeqd
jle
data16
sbb
mov
mov
in
out
and
and
call
cmpb
push
fs
push
pusha
mov
mov
stos
dec
arpl
pushf
inc
pop
std
not
fs
sbb
sub
push
add
push
add
jnp
dec
cmp
inc
addr16
adc
cmc
add
pop
sbb
mov
push
popa
push
in
scas
mov
mov
bound
cmp
jae
push
push
and
mov
add
sbb
fisubl
lods
and
scas
cld
jle
cmp
test
sub
test
rcrb
xlat
push
lea
adc
jle
aas
flds
dec
out
and
sahf
push
xchg
call
sub
mov
cmc
or
adc
adc
sub
mov
pop
ficomps
push
es
test
add
and
and
sti
sub
mov
dec
nop
loope
lea
pusha
push
fadd
roll
xchg
cmpsb
test
lock
sub
insl
rolb
push
dec
mov
mov
mov
adc
and
pop
ss
pop
imul
fistpll
sub
lods
pshufw
repnz
cmpsb
fldl
je
in
fsts
pop
test
sarb
add
and
rolb
arpl
leave
mov
lahf
jge
jg
push
loopne
sti
or
ret
jmp
add
mov
xchg
dec
or
nop
cld
aam
adc
mov
in
sub
in
cmp
mov
adc
ljmp
adc
push
pop
sbb
mov
lock
xor
cmp
mov
orb
xor
push
xor
aaa
out
jge
jmp
xor
ljmp
stos
xchg
jg
loopne
les
jecxz
jbe
lcall
or
fistpll
clc
cli
stc
sub
ja
into
lods
mov
cmc
and
dec
pop
loop
sub
or
cmp
mov
cltd
std
sbb
repnz
dec
xchg
ja
inc
ss
movsb
jl
or
leave
add
inc
jne
mov
ret
push
adc
pop
call
sub
je
inc
xorb
inc
mov
add
shrb
sbb
subb
pop
xor
ret
jns
mov
jae
clc
cli
and
and
sub
pop
adc
xor
in
bound
jne
or
test
pop
les
mov
xor
out
pop
xchg
push
mov
mov
pop
popa
insb
add
push
sbb
lods
jne
fldcw
mov
popa
jle
jg
popa
add
pop
sub
into
xor
push
adc
mov
shlb
mov
mov
jb
test
adcl
cmp
leave
push
div
mov
jne
mov
rcr
mov
and
scas
inc
adc
scas
out
lahf
std
repz
cmc
xor
or
enter
stc
push
mov
inc
pop
add
pop
mov
jp
adc
mov
cli
xchg
cs
sbb
int
imul
ljmp
movsl
mov
add
cld
mov
je
fwait
cmc
xchg
fadds
inc
mov
lret
xor
or
movsb
enter
leave
jno
sbb
cmpl
add
cld
dec
pop
aas
and
addl
xchg
adc
add
lret
call
sbb
adc
dec
lret
add
aad
pop
xchg
js
jns
lea
jp
aad
add
cli
into
push
leave
int3
mov
sti
insl
call
adc
xor
mov
in
imul
frstor
xor
test
mov
stc
fldl
ret
rorl
ret
cmp
scas
cmp
mov
scas
inc
or
fnsave
jns
lcall
andl
pop
jge
pop
or
jno
add
ret
sub
mov
mov
fistps
push
mov
adc
stc
stos
arpl
int
dec
pop
into
add
incb
cmp
cmp
clc
vpmacssdd
lds
lock
inc
lock
adc
xlat
xchg
dec
push
divl
push
dec
dec
lahf
jnp
pop
or
xor
xor
xorb
jnp
lods
mov
shr
je
ret
mov
xchg
sub
popf
cld
iret
outsb
mov
cld
push
test
in
and
faddl
pop
fistpll
pop
xchg
std
out
or
push
cmp
lahf
dec
cli
pushf
pmaxub
jg
stos
jb
imul
or
jg
sbb
cmp
lods
cmp
std
sets
dec
adc
or
mov
mov
dec
out
scas
jbe
jle
mov
lds
out
subl
outsl
dec
dec
and
adc
in
inc
xor
jecxz
lcall
mov
rcrb
aaa
mov
add
movsb
js
fnstsw
fprem
cmp
dec
rcrl
mov
xor
mov
mov
lea
rcrl
jmp
push
imul
and
push
push
xchg
xor
push
mov
in
cltd
inc
popa
lcall
jne
fsubr
shl
xchg
sub
outsl
popa
mov
push
adc
dec
leave
xchg
je
sub
js
cmp
les
sub
cltd
push
je
mov
shlb
adc
into
lahf
lcall
into
mov
stos
or
lret
sbb
shll
and
xor
dec
pop
aas
ja
dec
lods
push
push
fnstenv
fsubr
dec
xor
loope
out
sub
jb
rorl
arpl
loopne
xor
stos
fidivrl
adc
xlat
fxtract
fsubrl
sbb
or
mov
dec
mov
pusha
or
xor
lock
sub
arpl
adc
mov
hlt
scas
sbb
clc
jb
orb
fsubp
in
addr16
loop
leave
test
xchg
clc
iret
outsl
dec
int3
stos
dec
jb
xchg
inc
sub
ja
push
sbbl
add
push
pop
aas
cwtl
push
loope
and
repnz
push
pop
jae
mov
adcl
lcall
mov
test
aas
cmpl
in
cs
gs
mov
gs
add
mov
add
jns
mov
push
shll
jb
test
sub
push
lcall
ljmp
test
jb
inc
xor
js
xor
popa
sub
pop
test
cmp
xor
push
cmp
dec
xor
xor
pop
lds
enter
or
fcompl
aad
add
mov
std
ja
rcpps
or
stc
and
sub
or
add
faddl
nop
mov
xor
mov
out
test
mov
xor
push
clc
out
shll
in
mov
stos
lea
loop
jne
into
inc
aad
push
shl
ss
jnp
sub
fildll
mov
xchg
outsl
push
sub
jno
sbb
dec
jl
add
add
int3
negl
dec
and
imul
cs
adc
mov
into
jmp
sti
sub
push
pop
orl
dec
adc
push
stc
fadds
arpl
push
cmpl
adc
adc
jmp
mov
dec
insb
add
sub
loopw
push
movsb
insl
xchg
scas
xor
fistpll
jno
adc
decl
adc
or
jmp
xchg
or
mov
outsb
repnz
pop
loop
fwait
mov
mov
in
sbb
pop
mov
stos
repz
popf
or
adc
into
jae
jb
arpl
imul
push
es
xchg
and
jo
or
push
jl
xor
add
mov
adc
sub
dec
aas
sbb
dec
insb
rcll
outsb
push
xor
enter
jb
inc
sub
push
or
add
pop
gs
xor
fstl
jnp
xlat
dec
pusha
in
dec
jge
mov
insl
jle
out
and
outsl
out
mov
dec
xlat
rol
push
add
fsubrl
sbb
cwtl
push
sbb
pushf
jmp
movsb
mov
adc
mov
or
push
inc
xorl
and
test
mov
arpl
daa
cmc
and
stc
cwtl
mov
push
out
sub
mov
xchg
in
inc
mov
adc
or
cltd
mov
xchg
inc
mov
daa
ss
sbbl
clc
lods
mov
lock
jo
push
cwtl
sbb
pop
movsl
push
movsb
sbb
inc
cmp
cli
xchg
aaa
mov
iret
mov
std
jmp
fdivrl
dec
test
cld
sbb
and
jbe
jmp
nop
xorb
test
add
in
out
int
popl
pop
add
mov
cmc
out
aad
jb
fists
stos
nop
mov
aas
lds
xor
ljmp
push
sbb
cmc
out
sbb
pop
jecxz
shll
mov
repz
inc
les
lcall
idivl
sbb
test
mov
out
dec
mov
loopne
inc
sbb
push
iret
popf
sarl
stc
xchg
or
mov
ljmp
subl
inc
cmp
mov
xchg
pop
in
mov
rep
push
out
push
dec
push
mov
push
stos
sbb
dec
in
xchg
aam
leave
pop
dec
fdivs
repz
imul
idivb
sub
sub
ja
lret
nop
mov
arpl
cmpsb
xchg
adc
xor
std
lea
shr
pop
inc
or
int3
mov
mov
mov
aam
sbb
push
ret
in
pop
adc
or
std
mov
add
push
mov
jl
mov
mov
push
stos
call
xchg
xor
pop
dec
sbb
jne
movsl
and
adc
jle
sbb
sbb
arpl
hlt
mov
adc
in
fdivl
xchg
cmpsl
mov
sahf
scas
push
mov
lret
stos
push
sbb
add
mov
cwtl
sub
xchg
dec
and
mov
mov
adc
popa
stos
insb
sti
mov
faddl
jge
inc
mov
das
lds
ds
mov
pop
popa
sbb
into
insb
in
sbb
lea
mov
in
push
or
inc
sbb
pop
repz
lcall
ret
aam
inc
loop
cmpsb
mov
fdivrs
js
ljmp
aaa
sarl
dec
mov
rorb
shll
stos
cli
test
insb
in
les
in
fcomp
sub
push
xor
pop
jne
inc
arpl
fidivl
arpl
cmp
daa
fnstsw
std
dec
inc
je
inc
mov
gs
inc
sbb
cmp
dec
ljmp
mov
mov
or
mov
cld
scas
pop
mov
in
ljmp
cmp
arpl
icebp
or
mov
rclb
inc
push
mov
dec
lods
fistps
fsub
fld
mov
fbld
pop
mov
shrl
je,pt
addr16
or
and
jb
scas
in
lea
push
push
add
cld
dec
jo
lods
sub
in
or
lret
xchg
arpl
pop
jmp
lods
mov
fdivrp
pop
lahf
mov
lret
sbb
mov
adc
mov
adc
dec
jecxz
mov
mov
repnz
loopne
call
adc
sbb
rcrb
loope
mov
int3
int3
jecxz
or
insl
pop
outsl
inc
js
add
dec
and
lods
jns
jg
ret
xor
and
jle
jnp
mov
mov
sbb
pop
cmp
sarb
jne
pop
cmpsl
or
fsubrp
test
xchg
cmpsb
outsl
fiaddl
jnp
adcb
insb
mov
in
out
loop
fdivr
arpl
lock
pop
mov
pop
pop
sub
xor
repnz
inc
pop
outsb
and
or
add
dec
sub
mov
mov
mov
fmuls
lcall
ds
jns
cwtl
push
popf
faddl
dec
bound
cmp
test
in
inc
jnp
mov
mov
adc
inc
inc
inc
cmpsb
pop
jp
daa
xor
shrl
insb
xchg
mov
fst
into
lahf
out
cvtpi2ps
mov
pop
in
test
jge
inc
imull
push
mov
cld
push
mov
stos
loopne
xor
push
mov
xor
fdivrl
lods
mov
xchg
dec
les
cmp
hlt
fists
and
bnd
dec
rcrb
mov
mov
or
fwait
lret
test
test
jb
shlb
pusha
pop
pop
add
cli
and
scas
jecxz
inc
mov
jnp
sbb
mov
mov
shll
call
mov
iret
mov
shll
fisubrl
xor
fimuls
xchg
push
add
icebp
scas
insl
fs
mov
mov
mov
sbb
mov
les
push
sub
cs
cs
daa
mov
inc
push
outsl
mov
hlt
ret
sub
loop
xor
xor
cli
bound
lods
dec
lds
jg
mov
stos
mov
jo
sbb
ret
inc
mov
mov
call
mov
aam
stc
stc
jne
jl
js
call
cltd
xchg
mov
xchg
pop
dec
fstpt
push
mov
jecxz
fsubrl
sbb
bound
add
mov
or
imul
sbb
mov
fisubrs
lcall
add
or
loopne
adcb
cmp
pusha
jg
sahf
lret
movsl
dec
icebp
int
test
lahf
clc
gs
pop
ds
sub
xchg
xor
dec
jge
xchg
push
shrb
mov
cs
add
addb
std
addr16
sbbl
mov
scas
sti
nop
enter
dec
pop
sub
pop
sub
scas
pop
sub
ret
jp
lahf
xchg
push
stos
mov
aaa
cltd
inc
xchg
stos
cltd
inc
xor
adc
xor
sarl
xchg
pushf
insl
insl
fnstsw
aaa
clc
cli
xchg
stos
test
test
xchg
cmp
pop
dec
and
addl
mov
jl
push
dec
ds
out
cmp
mov
fcomip
adc
fldl
das
fldcw
fidivs
xor
mov
adc
loope,pt
push
jp
mov
nop
jae
lods
or
das
aaa
lea
repz
push
in
fmull
and
fsubl
push
xlat
adc
lods
mov
notl
sub
cmc
out
lods
push
push
shlb
xor
push
pop
mov
int
mov
pop
insb
enter
mov
pop
adc
pop
aas
cltd
dec
push
addb
push
sti
sbb
scas
out
push
mov
leave
aaa
sub
pop
jmp
int3
repz
gs
es
fdivr
and
xor
in
mov
xor
fwait
movsb
lret
add
sbb
xor
sbb
mov
push
cmp
mov
out
gs
in
je
call
popf
cmp
sbb
fwait
sarb
pusha
repz
sub
aaa
mov
pop
outsl
jns
arpl
and
xlat
sti
xchg
jb
mov
dec
int3
popa
test
and
jo
mov
adc
mov
or
repnz
sti
dec
mov
ficomps
sub
push
in
or
sbb
or
mov
ret
aaa
cmp
cli
push
sbb
loope
xchg
inc
clc
sub
stos
dec
in
mov
lods
or
negb
icebp
mov
mov
cmp
andl
and
sub
jmp
mov
fistpl
and
out
inc
mov
mov
add
scas
jne
mov
mov
and
jmp
sbb
das
roll
pop
fst
bnd
lcall
popf
xchg
into
fimull
jnp
jae
xor
xlat
push
cmc
mov
mov
xor
sub
rcl
imul
out
mov
push
cld
xchg
jmp
jne
insl
icebp
mov
lret
fsubl
mov
daa
clc
push
imulb
and
mov
sub
fst
mov
and
jae
addl
jp
les
rcll
lea
sub
cmpsl
xor
dec
popa
mov
scas
cmp
jno
fistl
pushf
dec
movq
fs
mov
ja
push
inc
jmp
sbb
shr
and
jl
icebp
inc
fadds
lahf
push
ljmp
cltd
mov
inc
fisubrs
mov
loop
popf
aam
push
imul
std
jecxz
out
sub
mov
mov
jle
clc
xor
idivb
sbb
and
mov
pop
ljmp
pop
pop
mov
mov
xchg
pop
cmpsb
sbb
pop
arpl
shrl
stos
arpl
jp
in
xchg
sub
xorb
jmp
filds
inc
jae
dec
dec
test
outsb
mov
mov
aam
pop
ja
shl
mov
into
sbb
movb
sahf
aaa
mov
clc
xor
fidivrs
cs
mov
loope
push
nop
mov
testl
dec
out
pushf
adc
loopne
movsb
mov
adc
sarl
les
push
xchg
mov
stc
push
xor
add
jno
outsb
test
mov
cs
cwtl
pop
jle
fwait
mov
mov
pusha
xlat
fs
rcll
das
sbb
add
or
cmp
cli
bound
push
push
aam
and
scas
mov
stos
pop
fwait
xorb
dec
shrb
mov
stos
mov
cld
inc
out
add
lods
xor
sti
pop
out
jns
sbb
es
add
jns
rcr
in
stos
shll
into
sub
call
xor
shrb
cmp
mov
lahf
push
and
adc
mov
xchg
and
inc
hlt
sub
xchg
lret
test
ret
in
test
push
bnd
xchg
inc
mov
inc
add
fcomip
inc
insl
daa
in
cmpsb
insl
mov
pop
jmp
insb
jae
lcall
andnps
dec
pusha
pop
into
xor
pop
outsl
lahf
xchg
ja
lods
lahf
sub
shrb
mov
loop
int3
push
dec
cmp
fldenv
iret
lock
ss
xor
addr16
jnp
sahf
push
insl
ja
cmc
or
imul
sub
jecxz
xchg
pop
pop
mull
loop
movsb
inc
push
enter
inc
lock
mov
sub
mov
popf
scas
repnz
ds
mov
sbb
pop
and
lret
xor
testl
out
loop
and
and
inc
cmp
sbb
push
shl
ret
pushf
adc
sub
inc
dec
insb
iret
imul
scas
adc
push
xor
mov
xor
mov
jecxz
test
fldt
mov
mov
xchg
mov
lret
aas
out
imul
mov
xchg
xchg
and
push
jp
xchg
sub
sbb
inc
cwtl
dec
or
inc
movsb
call
xor
and
out
aad
cs
mov
out
loop
add
ret
negl
mov
or
ficomps
pop
or
cltd
fisubs
out
push
mov
sarb
sarb
and
fildll
shl
int
ja
mov
test
iret
loop
jns
inc
lret
jbe
adc
scas
inc
loopne
ja
lods
shrl
test
sti
cmp
mov
cmpb
cmp
mov
jmp
loop
cmpsb
mov
jge
xchg
repz
movsl
or
test
jp
pop
inc
ds
loope
sbb
roll
call
dec
xor
xor
jge
shrb
jnp
cmpsb
or
jle
fnsave
or
mov
add
jb
xor
insl
push
call
pushf
popa
insl
aas
mov
or
and
sub
fstps
add
xchg
xchg
icebp
dec
adc
jecxz
mov
sub
repnz
sub
ljmp
cld
or
nop
mov
out
sbb
std
pushf
mov
jge
jno
mov
or
mov
cmp
mov
or
or
movsl
adc
fadds
fcoml
mov
inc
mov
adc
xchg
pop
jg
enter
adc
mov
ret
xlat
stos
icebp
dec
jecxz
outsl
mov
or
push
add
pop
cmp
test
sub
mov
sbb
rolb
sbb
nop
out
out
jl
test
cmp
in
lret
adc
ror
pop
push
cmp
jne
or
ror
lret
aam
sub
dec
in
rol
ret
mov
out
push
jmp
std
cmp
sbb
mov
push
inc
test
loop
xchg
rclb
jo
jmp
inc
leave
mov
loope
js
push
adc
scas
adc
pop
imul
sub
jb
loop
mov
mov
cmpl
jmp
sbb
xor
jg
push
cli
dec
inc
jne
mov
mov
loopne
dec
dec
add
inc
jo
pop
std
add
push
xchg
pusha
mov
pop
inc
mov
lds
in
aas
push
lret
hlt
xchg
adcl
push
ret
dec
sbb
mov
aas
bound
ret
pop
aam
leave
xor
cmc
negb
cmp
imul
addr16
hlt
push
xchg
ss
stos
stos
adc
ljmp
sub
repnz
and
push
mov
xchg
push
imul
inc
in
mov
mov
clc
jg
jb
fsubrs
cld
jbe
pusha
in
test
or
sarl
cli
in
sbb
out
sub
repnz
inc
inc
rorb
lods
stos
jg
pop
sub
xor
loopne
cmpsl
mov
add
dec
test
mov
and
cmp
jno
pop
mov
inc
ja
mov
mov
adc
cwtl
int3
ds
lea
inc
lret
jl
mov
sahf
or
loop
sahf
addr16
loopne
xor
inc
inc
and
sbb
lds
test
popa
cs
pop
rcl
jle
int3
add
out
std
mov
mov
lcall
cmp
hlt
cld
add
sahf
push
subl
pop
cld
xorb
movsl
mov
xor
int3
sub
mov
outsl
xchg
jb
mov
repnz
cmp
pop
test
aas
mov
into
in
lahf
dec
rcrl
push
xlat
add
mov
mov
js
std
pop
outsb
inc
cmp
movsl
shrb
orb
jno
lahf
call
and
or
sbb
fs
inc
jno
cmp
push
int3
xchg
cmpsb
cmp
lret
scas
movl
lahf
mov
push
and
in
je
push
lahf
xchg
scas
cmpsl
jecxz
lods
jge
clc
xchg
pop
loopne
cltd
inc
test
xlat
xor
dec
or
lahf
sbb
xchg
adc
pushf
jmp
pop
stos
sbb
jl
mov
fisttpll
adc
clc
lods
hlt
sub
fldt
adc
icebp
fbld
leave
popf
and
xor
rorl
in
pop
mov
cwtl
pop
jmp
sbb
cmp
xchg
mov
std
rorb
shrl
or
jmp
mov
out
lret
cmp
xchg
and
repnz
inc
imul
push
cmpsb
stos
test
imul
push
cmp
je
mov
pushf
je
into
popf
sbb
cmpsl
into
lret
pushf
imul
shl
pusha
pop
pop
adc
int
push
or
fsincos
out
pop
enter
enter
imul
std
mov
xor
cli
mov
les
mov
shrl
sub
loop
pushf
pop
pop
aaa
jle
cs
stc
frstor
push
cltd
mov
outsl
mov
or
decl
out
test
loop
pop
adc
add
or
lcall
or
sarl
insb
or
cmp
mov
arpl
xlat
call
cmpsb
mov
lods
mov
cmp
mov
aaa
push
lds
push
movsb
mov
lret
push
ret
vcvtpd2dq
in
fdivp
bound
sbb
sub
out
dec
inc
call
xor
xchg
cmp
mov
or
aam
xchg
fmuls
movsb
sub
dec
adc
out
inc
and
ds
sub
mov
dec
daa
mov
enter
mov
insl
add
dec
jo
js
xor
sti
mov
stos
mov
loope
xlat
mov
sti
orl
push
adc
setnp
mov
bound
xchg
test
xlat
sub
jg
sbb
pop
mov
push
add
mov
push
mov
mov
insb
mov
fildl
pushl
fs
add
les
sub
cld
cmpsl
or
ss
sub
cli
je
popa
scas
inc
fstpl
fwait
mov
pop
xlat
leave
cmp
or
fwait
mov
sub
pop
sarb
and
or
test
test
mov
lods
adc
out
sbb
lea
fs
mov
sbb
ja
xchg
insb
cmp
ljmp
stos
jo
addr16
pop
mov
iret
xor
cmpl
mov
sub
adc
dec
xchg
fists
add
xor
xor
call
push
fisttpl
movsb
cmpsb
or
filds
icebp
adc
pop
je
out
das
pop
push
pushf
jl
andl
add
push
xlat
mov
pop
leave
movsb
addl
out
dec
imul
sahf
cmpsb
cmpsl
icebp
loop
sbb
int3
mov
shll
hlt
mov
xchg
mov
test
adcb
jecxz
movsl
xor
fmull
and
scas
jl
insb
lcall
loop
lret
mov
inc
mov
test
jmp
xor
fldl
clc
lcall
add
xor
sti
in
and
test
dec
sbb
cmpsl
popl
adc
popa
ret
pushaw
xchg
int3
andb
dec
mov
data16
or
xor
shll
into
hlt
pop
lea
lods
in
rolb
push
cs
inc
mov
mov
ljmp
jae
push
sub
rolb
dec
repz
stos
xor
lahf
rolb
popa
sub
and
pop
jg
jge
or
mov
push
push
into
jae
cmp
mov
dec
leave
bound
in
pop
pop
popf
fidivrs
fmull
jl
shll
fadds
out
add
xlat
int3
sbb
cmp
dec
pop
inc
and
ret
mov
cld
imul
mov
mov
in
imul
push
data16
xchg
cmp
loop,pt
pushf
lods
sbb
out
cmp
dec
pop
inc
loope
test
or
idivl
dec
aam
mov
inc
mov
out
in
popa
aam
jl
into
mov
jnp
mov
or
out
lods
test
push
cs
jg
insl
fwait
push
lret
adcb
or
sahf
mov
xor
pop
pop
pop
inc
pop
arpl
add
mov
rcrl
xchg
inc
xor
xchg
adc
outsb
inc
rcl
repz
cmpsl
test
pop
ffreep
daa
push
or
sub
pop
push
mov
mov
sub
ljmp
mov
data16
cmpsl
add
jle
sarl
fwait
dec
stos
jecxz
sub
les
fs
mov
mov
in
cmpsl
ljmp
test
pushf
or
scas
cmpsl
in
mov
push
inc
adc
add
jge
dec
std
sbb
sti
mov
lods
sub
mov
popf
xor
jecxz
ficoml
xorb
popf
pop
stc
call
cld
push
mov
add
clc
addb
sbb
cmc
fidivl
ljmp
mov
or
jle
push
mov
sbb
in
cmp
sbb
or
pop
xorb
jo
fwait
mov
cmpl
jmp
adc
mov
test
stos
pop
ss
test
icebp
es
pushf
xchg
loope
gs
dec
or
shrb
push
rolb
mov
mov
cmc
cmpsb
lods
jns
jne
mov
imul
sbb
inc
hlt
xor
jp
sub
and
out
adc
mov
out
sbb
gs
std
inc
ja
out
push
lods
mov
popa
in
sbb
fdivrs
or
pop
lds
sub
insb
sahf
cmp
imul
push
mov
lret
push
mov
sbb
je
inc
lods
or
mov
adc
enter
jae
fdiv
movsb
les
dec
pop
setne
mov
fmul
jg
jp
das
mov
push
lock
imul
xor
add
cmp
xchg
sub
inc
pop
loope
clc
addr16
inc
add
sbb
loope
outsl
movsl
daa
adc
pop
and
scas
push
stc
dec
jne
test
lret
cld
gs
mov
mov
adc
les
dec
jns
dec
mov
repz
dec
mov
pop
add
data16
mov
adc
lahf
jp
lahf
nop
mov
sbb
lahf
cmpsl
dec
lahf
orb
ficoms
xchg
rcr
lods
xchg
shl
and
sbb
stc
jbe
stos
jb
push
dec
adc
mov
mov
test
mov
fildll
sub
mov
mov
cmpsl
mov
push
cwtl
or
int
aad
mov
js
pusha
lret
mov
imull
pusha
xchg
push
ljmp
ret
mov
adc
pop
mov
sarl
inc
or
lret
mov
xor
lret
pop
sub
mov
jo
fdivrl
fucompp
fisttps
outsl
sbb
mov
mov
push
ret
mov
sbb
je
adcl
xor
sbb
xlat
push
xchg
pop
mov
mov
push
xor
mov
stos
or
push
jb
das
sbb
sub
addb
subb
aaa
adc
fmul
loop
mov
scas
movsb
repnz
repz
icebp
mov
xchg
and
push
cmpsl
mov
outsl
or
mov
mov
cmp
divl
cmp
loopne
aaa
lods
xchg
and
dec
in
js
repnz
stc
addr16
sti
sub
pop
lcall
and
jbe
fcoml
and
push
push
fimull
fs
xor
bound
lcall
sub
clc
fsubl
xorb
push
cwtl
lahf
sub
in
scas
mov
lret
lods
idivb
fsubl
mov
sbb
push
add
cmp
test
jecxz
adc
fstps
and
xchg
stc
jge
lods
cmp
mov
cmp
mov
inc
dec
push
sub
mov
mov
add
pusha
fcmovbe
rolb
das
stos
mov
je
jmp
cltd
jno
and
pop
je
sub
mov
jne
adc
jae
shrl
mov
jo
dec
pop
cmpsl
jo
stos
out
cmc
movsl
inc
inc
mov
roll
push
adc
dec
inc
inc
clc
outsl
leave
push
sub
pop
pusha
mov
or
ljmp
loop
add
or
xchg
or
jne
mov
or
inc
test
stos
int3
xor
adc
dec
pop
aas
ljmp
push
arpl
add
xchg
clc
sbb
add
or
push
sti
adc
sbb
sahf
dec
push
sbb
ret
sub
test
inc
push
inc
lods
sahf
inc
xchg
inc
inc
lea
out
push
or
mov
test
fistpll
xchg
or
int3
xor
loopne
data16
mov
dec
dec
cmp
daa
outsl
ret
sbb
cld
imul
lock
stc
or
enter
inc
mov
in
lahf
pushf
psubsb
lods
lds
mov
idiv
adc
inc
in
pop
xchg
mov
iret
jmp
subl
mov
or
xor
aad
add
push
mov
sbb
jl
inc
addb
jle
js
fs
push
mov
icebp
icebp
imul
push
jg
push
or
xchg
pop
sub
cmp
mov
popl
test
inc
loope
mov
rcl
and
sbb
lds
push
sub
mov
or
jo
pop
js
mov
xchg
push
add
push
bndldx
fstpl
icebp
mov
sub
lods
push
dec
nop
js
cmpb
aad
testb
pop
and
clc
push
fs
insb
adc
cs
xchg
adc
cmp
loop
adc
popf
xchg
jb
jge
insl
mov
and
push
scas
push
imull
xchg
ja
jp
jg
lods
pop
insl
xchg
in
sbb
data16
popa
inc
cmp
insl
cmp
and
push
dec
mov
movsb
pop
xchg
xchg
pusha
and
ljmp
pop
aas
dec
mov
scas
xor
pop
add
fwait
bnd
loopne
push
nop
or
fdivl
lcall
cmc
cmp
popa
or
imul
mov
push
loope
xlat
pushf
int
pop
push
mov
dec
in
adc
jns
ja
ret
sub
lods
or
add
xlat
sbb
cmp
aas
cltd
pop
or
cltd
mov
mov
cmp
dec
jmp
cld
gs
in
lds
jns
rcr
cs
xchg
stc
pushf
push
jb
ror
fbstp
sbb
adc
xchg
daa
or
pop
scas
sarb
pop
mov
bound
dec
and
fmuls
inc
popa
std
stos
add
repz
mov
sahf
push
dec
mov
adc
mov
push
js
push
ljmp
mov
sbb
dec
inc
pop
mov
in
pop
fbstp
xor
xor
xchg
call
add
pop
stc
aaa
jle
popf
mov
sbb
test
aaa
cmpsb
mov
mov
push
mov
stos
flds
add
sub
sub
and
push
movsb
inc
ljmp
xor
inc
out
cmpsl
or
mov
cmpsb
jp
mov
pop
or
out
test
push
inc
or
lahf
movsl
mov
or
sbb
fs
out
cld
int
sti
adc
sbb
fldcw
jb
or
xchg
dec
out
scas
movsb
mov
popf
out
enter
test
push
bnd
test
daa
fchs
xor
mov
jnp
out
mov
mov
add
xor
into
mov
xchg
inc
pusha
test
out
es
cmovno
ja
cltd
iret
out
cmpsl
mov
int
cld
nop
fnstenv
jno
andl
jb
sub
out
mov
lods
aas
cmp
in
sbb
movsb
pusha
fidivrl
and
ss
rorl
lods
loop
fcoms
sub
mov
push
ret
outsb
adc
pop
testl
out
out
lret
ja
dec
loopne
jg
fcmovne
pop
pusha
inc
cmp
mov
cmp
push
jge
cmp
mov
dec
xor
ficoml
jle
jp
dec
lcall
aam
or
call
scas
add
cmc
inc
cmp
nop
xchg
out
and
aam
popf
clc
inc
sahf
jmp
sub
ret
test
int3
pop
pop
ja
add
pop
or
sbb
mov
scas
fwait
adc
shrb
test
in
jecxz
push
push
sub
outsl
test
adc
add
sbb
or
lods
add
scas
or
es
les
or
inc
out
push
mov
jmp
xor
fs
lods
imul
and
int
xchg
stc
cmp
out
xor
fbld
dec
push
leave
aas
jg
fnstcw
cmp
nop
add
pop
jae
lock
and
enter
cmc
mov
xchg
mov
pop
mov
lcall
test
imul
dec
lret
dec
cmp
adc
rclb
jnp
sti
dec
push
mov
leave
xchg
mov
lret
rorb
repz
cmp
ds
fs
cmp
popf
addr16
loop
lret
dec
and
mov
jns
outsb
idivb
push
push
sbb
push
leave
dec
lods
sbb
push
cmp
and
push
adc
test
pushfw
xchg
lret
mov
inc
dec
cmp
arpl
xchg
add
es
mov
int
xchg
xchg
fbstp
jbe
fmul
loopne
test
xor
dec
test
fstl
loop
gs
xchg
in
in
jl
pop
aas
push
pop
and
loop
hlt
leave
leave
push
stos
data16
repnz
leave
sub
push
pop
stc
arpl
or
jle
fs
call
lcall
or
aad
sub
sbb
push
adc
loop
inc
and
lret
dec
or
sbb
aaa
pop
jg
xchg
insb
pop
or
xchg
roll
leave
es
lea
dec
push
stos
sahf
or
pop
flds
mov
roll
jge
add
mov
loop
jne
mov
sarl
ljmp
push
in
je
aad
lds
popa
ret
cmc
dec
xor
or
fwait
mov
jno
fisubrs
fcompl
cwtl
dec
cmp
cltd
cld
sbb
dec
int
xlat
out
repnz
pop
cmpsl
stos
sub
inc
test
push
xlat
xor
dec
out
inc
loopne
jbe
add
loop
push
pop
xchg
jo
leave
cmp
xor
out
sub
mov
mov
data16
dec
cmc
cmp
in
pop
mov
and
fwait
adc
and
arpl
hlt
subl
int
out
mov
in
xor
into
mov
sub
imul
pushf
movb
pop
push
cli
and
cmp
lock
sub
push
adc
mov
lods
loopne
arpl
add
aam
movsl
add
xor
lea
adcb
add
mov
mov
aas
enter
inc
addr16
mov
into
enter
bound
and
nop
mov
sbb
nop
fstl
adc
loop
or
push
jecxz
bound
adc
test
push
outsl
jg
sbb
and
pop
jecxz
jno
xchg
xchg
cmp
add
dec
call
aaa
sarb
add
pop
xchg
fidivs
clc
mov
cltd
dec
sbb
mov
int3
lret
mov
mov
loopne
insl
icebp
sub
add
inc
mulb
pop
inc
xor
fmul
adcl
cmp
stc
push
frstor
add
push
test
pop
add
add
iret
push
repz
scas
and
push
jp
daa
sbb
shrl
adc
les
dec
pushf
into
iret
les
lea
and
movl
sbb
test
pxor
bound
cmpb
mov
call
dec
vmovntdq
push
adc
jno
mov
xchg
movsl
push
push
dec
push
cld
fisubrs
adc
std
jns
add
stc
pop
movsb
gs
fnstsw
ss
push
ljmp
add
sbb
jle
sbb
mov
neg
daa
dec
pop
dec
or
sbb
lds
hlt
lods
mov
add
out
jmp
cmp
xor
pushf
call
push
add
push
xchg
imul
xchg
mov
test
inc
xchg
mov
add
cs
xor
leave
repnz
xor
sarl
test
push
or
or
cmc
dec
ja
gs
jge
cmp
add
inc
call
enter
repnz
aad
shrl
ret
fnstcw
les
cmpsb
rcrl
push
mov
sbb
and
jae
sbb
sub
add
inc
flds
mov
test
ficoms
mov
test
pop
lds
xlat
ss
sbb
inc
in
int3
pushf
pop
jecxz
push
in
jp
mov
adc
dec
movsb
adc
or
insb
or
dec
dec
in
jmp
dec
pop
pop
ret
enter
ss
sahf
adc
or
cmp
popa
cmp
call
gs
xor
jl
jbe
cmp
loope
imulb
cmpb
xchg
not
insb
dec
lcall
call
jl
and
shl
xor
push
ds
sbbl
sarb
mov
jno
adcb
cli
adc
dec
nop
pop
popf
pop
or
xor
sub
mov
fwait
mov
jecxz
data16
mov
mov
mov
lahf
sbb
pmullw
pop
pop
hlt
jge
fidivrl
daa
adc
sahf
or
push
mov
mov
add
adc
mov
mov
mov
mov
inc
push
negb
nop
xor
fnstcw
repnz
adc
dec
sbb
dec
les
push
dec
into
mov
add
mov
sahf
out
sub
dec
test
lea
movsl
or
or
sub
sub
or
and
pop
lods
dec
mov
push
mov
jp
mov
jno
jo
cmp
insb
imul
sti
subb
push
repz
lds
jle
or
sub
xchg
arpl
pop
and
mov
inc
cmpsl
pop
and
xchg
loop
or
mov
fstl
xchg
add
sub
pop
xorl
rorb
jmp
sub
push
xor
push
enter
pop
add
ja
mov
sbb
ficomps
fdivrs
fwait
out
sbbb
inc
mov
add
push
fsubrs
push
adc
scas
mov
lcall
xchg
pop
insb
sub
sahf
mov
and
stos
cmp
cmp
sub
mov
cs
dec
xchg
pushf
outsb
mov
imulb
adc
jo
push
cs
outsb
movsb
movsl
nop
lods
shlb
lcall
mov
shrb
jae
jne
iret
das
mov
loopne
ficoms
lock
mov
mov
outsb
into
ficomps
insl
cmp
sub
xor
nop
sub
xor
xchg
sub
scas
les
sub
pusha
dec
fdivs
sarb
mov
fmulp
shlb
rcrb
mov
sbb
sub
and
jmp
push
mov
lods
add
test
dec
push
dec
clc
aad
xor
lods
push
mov
ja
xchg
cmp
inc
push
imul
imul
pop
sub
pop
sti
mov
xor
adc
insl
jb,pn
popf
in
jge
int
jg
jbe
aam
sub
fcmovnb
notl
sbb
pop
push
lahf
popf
hlt
cmp
pop
mov
pop
and
mov
nop
fimuls
das
ret
sbb
ljmp
repz
imul
add
xor
push
add
push
fdivrp
aam
mul
or
notl
lea
xchg
or
push
sbb
insl
in
inc
in
ret
loope
call
and
cli
mov
mov
cwtl
sbb
fsubrp
ljmp
lds
pop
insl
push
or
ljmp
mov
into
cld
dec
je
in
cli
sbb
ja
mov
adc
sbb
inc
and
sub
inc
add
cmpsl
dec
and
orb
add
cmp
stos
lcall
dec
aam
fmull
pop
out
and
out
ret
push
or
dec
iret
mov
add
jl
cmp
mov
cmp
cltd
mov
ljmp
push
xchg
fs
leave
insb
stc
je
add
ljmp
xchg
fwait
jno
stos
fimuls
icebp
mov
xchg
ja
xor
mov
inc
sub
add
adc
lock
sub
mov
bound
sbb
push
sarl
fwait
aad
in
mov
jl
aas
cmp
negb
cli
push
es
int
cltd
push
mov
popa
adc
xchg
cmp
aas
scas
or
mov
sarb
pop
mov
xchg
add
call
outsb
pop
aam
inc
repz
and
add
test
jo
lret
call
push
mov
cmp
mov
jno
addr16
jo
pop
sub
sub
and
inc
push
push
cmc
not
leave
push
or
cmp
lods
jne
and
scas
hlt
hlt
mov
stos
test
out
or
xchg
ficomps
inc
outsb
sbb
lds
clc
xchg
adc
xchg
or
xor
nop
test
dec
or
xor
push
and
ss
mov
arpl
ficoms
out
sbb
pushf
test
and
sahf
push
jmp
adc
pop
jns
inc
add
leave
mov
jbe
or
test
js
inc
sti
repnz
pop
sub
call
rolb
mov
cs
cmp
sub
fwait
pop
inc
push
xchg
xor
cmp
std
mov
push
sbb
lods
es
in
add
push
bound
mov
scas
int3
lret
incl
mov
test
mov
cli
lcall
mov
lret
mov
xor
push
fcompl
popa
ret
lcall
sti
cmp
push
inc
pop
sub
mov
mov
sbbb
inc
sti
push
fisttpl
add
adc
insl
add
xor
add
rolb
movzwl
cmp
adc
mov
adc
mov
dec
enter
push
cmpsb
iret
and
jns
aaa
xchg
mov
pushf
mov
sbb
fidivl
sti
mov
cmp
cltd
push
fists
call
je
sub
ja
xchg
push
fst
sub
andl
jp
push
test
jo
in
js
pop
repz
decl
and
in
fnstsw
out
add
xor
sti
lcall
xchg
cmp
in
in
ss
imul
or
inc
dec
repnz
or
cwtl
jge
and
jns
lea
iret
es
xchg
loopne
ds
nop
push
mov
lret
out
pop
push
pop
mov
xor
push
insl
pop
cmpsb
sbb
nop
mov
and
leave
testb
adc
add
outsl
insl
in
into
jae
push
test
leave
out
lcall
pop
in
mov
cmp
mov
mov
movsl
and
and
push
mov
inc
test
lret
je
adc
xchg
inc
or
and
adc
inc
add
sub
in
aam
fistl
aaa
fyl2xp1
jge
inc
mov
push
lret
cli
adc
test
xchg
xchg
rolb
lods
aas
loope
add
sub
inc
adc
ds
mov
fldl2e
loop
jecxz
inc
pushf
test
pop
adc
test
cli
into
imul
cmp
jns
dec
sahf
inc
mov
icebp
loope
cmp
add
jge
movsl
fcmovne
sub
adc
mov
push
pop
iret
xor
je
push
fidivrl
psrlw
xchg
pop
and
inc
mov
inc
dec
lods
loope
xchg
add
cmp
mov
or
ljmp
mov
jno
push
aam
sbb
inc
or
outsl
lahf
xor
das
or
adc
test
jp
lock
adc
adc
int
in
ficomps
insb
bound
ss
mov
and
decl
adc
mov
int
fidivrs
out
pop
sub
mov
sahf
inc
imul
mov
sti
mov
ja
gs
bswap
push
stos
push
jno
in
and
jb
nop
rorb
pushw
xor
push
cmpsb
std
scas
and
sahf
jge
aaa
fstpl
ret
loope
pop
call
bound
xchg
daa
sbb
mov
sti
mov
mov
test
sub
sbb
in
in
int3
pushf
adc
pop
mov
inc
arpl
mov
inc
syscall
and
lock
xor
mov
leave
pop
xor
fwait
add
inc
addr16
arpl
jnp
mov
jne
and
test
jbe
or
cmp
inc
mov
mov
push
push
push
or
adc
xor
ljmp
lods
addb
jmp
mov
push
dec
dec
gs
cmp
sub
jg
jge
sub
popa
push
xor
aaa
sub
pop
dec
sbb
xchg
setle
pop
in
lea
push
pop
repz
push
mov
jnp
or
loope
stos
fldt
mov
jl
test
loopne
jmp
pop
jecxz
xchg
jle
iret
mov
xchg
push
mov
or
and
push
sbb
loope
xchg
sbb
lods
mov
xor
xor
xchg
cld
pop
add
sbb
push
in
das
lret
sbb
cs
sti
fmuls
mov
xor
adc
das
pop
popa
les
cmp
mov
dec
dec
loope
add
lods
pop
inc
cs
mov
push
cli
mov
rclb
gs
fdiv
sub
cmp
lods
mov
outsb
add
or
int3
fstpl
aas
data16
fstl
xchg
outsl
and
inc
adc
cmpsb
push
inc
in
repnz
aas
inc
jnp
cli
sub
lds
jle
mov
js
aam
in
lods
clc
mov
inc
pop
xchg
jp
hlt
inc
test
jmp
fstps
sub
rorb
dec
loopne
in
dec
cmp
nop
shr
aam
adc
pop
mov
sahf
cmp
in
mov
out
fdiv
dec
into
cltd
pop
pop
adc
push
jmp
call
andb
sub
repz
push
lcall
xor
hlt
shrl
shlb
lds
mov
cmp
scas
xor
cmp
mov
arpl
push
jecxz
loope
sub
push
outsb
dec
jecxz
jl
sub
add
add
stc
cs
cmpsb
mov
mov
dec
xchg
outsl
jb
cld
ljmp
movsb
div
int
add
push
ret
jl
imul
xchg
mov
mov
fwait
jp
jmp
jge
jle
cwtl
insb
outsb
or
ret
mov
lcall
fs
notl
test
xlat
shlb
cltd
out
fstl
movsl
loopne
xchg
pop
sub
jae
std
inc
sub
sarb
je
or
cmp
test
stos
adc
pop
pop
aam
inc
sbb
faddp
lea
fsubr
ficoms
sar
dec
in
mov
shll
mov
jo
adc
psubq
and
subl
or
dec
fldenv
arpl
paddsw
dec
mov
cs
out
cmp
imull
in
or
cmpb
push
pushl
loope
adc
pop
mov
iret
insl
icebp
das
cmc
and
push
mov
clc
jns
mov
testl
pushf
adcb
mov
xorb
xchg
pop
outsb
pop
sbb
push
stos
stos
sub
mov
ljmp
cli
adc
pop
repnz
cli
adc
cmpsb
push
cmp
adcb
mov
je
xor
and
push
aam
sbb
adc
stos
lahf
inc
pop
pop
sbb
inc
jns
pop
mov
jp
xchg
xchg
mov
cs
xlat
lock
add
mov
sub
push
push
dec
imul
stc
pushf
cltd
mov
adc
sub
lock
lahf
shll
sbb
jle
jb
jg
mov
fcoms
mov
mov
add
xchg
mov
aas
push
mov
fwait
iret
sbb
push
push
cld
ljmp
adc
dec
aas
fldln2
mov
jae
ret
pop
dec
fcom
cmp
mov
sti
push
mov
adc
mov
push
or
add
movsl
test
lock
and
mov
loopne
cld
rol
and
lret
jbe
test
cmp
scas
mov
fmull
or
sbb
imul
xchg
mov
loopne
cmp
aas
mov
les
int3
mov
mov
push
shll
mov
xor
bsf
or
push
lret
xor
cmpsb
mov
cmpps
ret
mov
inc
sarb
xchg
add
xor
mov
mov
out
xorl
adc
mov
repz
stos
push
clc
mov
pop
roll
push
add
mulb
jle
ss
pop
add
adc
mov
mov
dec
cwtl
and
sub
add
mov
jmp
fidivrl
jle
push
push
in
and
pop
and
sbb
repz
enter
add
testb
or
shll
sbb
in
jns
sub
xchg
aad
sub
repz
jne
stc
xor
pop
sub
out
fdivl
xchg
dec
test
push
mov
or
xchg
push
dec
and
pop
loope
cmp
push
pushf
pop
sub
mov
lret
xchg
xor
fnsave
movsb
arpl
lahf
call
cmp
hlt
jo
and
adc
fsubrl
add
dec
add
aas
test
adc
or
mov
jl
dec
lcall
or
into
mov
ret
mov
pop
cwtl
dec
sbb
push
push
xchg
or
out
aam
xor
stc
shlb
sub
sub
pop
popf
mov
pop
ljmp
jae
inc
dec
or
lret
dec
js
mov
and
pop
or
pop
lds
xchg
iret
sarl
xchg
or
push
mov
or
push
in
rcrb
sbb
fsts
xchg
repnz
scas
jp
nop
jno
pop
ss
repz
in
sti
mov
addr16
adc
sbb
pushf
xor
jle
push
clc
push
out
dec
dec
int
in
test
dec
mov
stos
ficomps
cmpsl
test
pop
jl
mov
mov
xchg
jge
imul
iret
scas
into
dec
jp
cmovb
add
iret
and
xchg
push
ficoms
dec
push
mov
insb
add
cmc
negb
xchg
fadds
outsb
rorl
cltd
in
dec
push
cld
cwtl
mov
dec
mov
rolb
inc
cmp
jmp
imul
xor
fsubrp
addr16
out
nop
xlat
cltd
jne
daa
xchg
inc
jl
in
rolb
cwtl
xorb
cmp
mov
add
adc
iret
sti
jle
gs
cwtl
mov
push
mov
mov
pop
pop
rorb
js
xchg
jae
xor
pop
cmpsb
ljmp
out
and
repz
mov
mov
push
add
dec
arpl
aad
push
mov
jmp
jecxz
rcrl
mov
inc
nop
sub
adc
sbb
cmp
mov
dec
outsb
push
repz
and
sbbb
clc
cmp
jle
and
insl
mov
les
add
sbb
ret
adc
jg
les
nop
ficompl
jne
mov
inc
and
xor
push
mov
in
neg
pop
xchg
scas
sub
in
inc
xchg
fmull
cmpsl
mov
pop
adc
pop
in
xchg
aad
push
imul
adc
or
pop
push
sub
sbb
mov
test
dec
movsb
mov
sub
dec
arpl
cmp
je
into
mov
mov
leave
lods
xor
cwtl
fwait
inc
cmp
in
int3
mov
nop
push
or
cltd
in
dec
xchg
xchg
je
leave
sarb
int
cmpsb
xor
lock
daa
dec
push
adc
int
mov
arpl
imul
xor
mov
cs
out
xor
movsl
push
sbb
inc
or
sahf
jno
popf
mov
das
xchg
pop
cli
sbb
ljmp
cmpsb
sbb
outsb
mov
in
adc
mov
sbb
mov
or
fildl
repnz
shr
cmc
or
cld
jb
insl
xor
loope
pushf
ds
mov
fisubs
mov
cltd
lock
popf
hlt
ljmp
sbb
fmull
mov
add
adc
in
jp
je
mov
xor
xchg
jmp
lods
xchg
test
lret
sbb
movsb
arpl
imul
mov
adc
pusha
arpl
sbb
fsts
jl
lahf
push
cmpsb
sub
xchg
push
add
pop
lret
neg
loopne
ret
stos
cmc
mov
sbb
sbb
xchg
sbb
pusha
loop
mov
fcomps
shr
lahf
cmpsl
cmp
mov
jecxz
xchg
adc
pushf
cmp
pusha
push
push
das
jnp
fidivrl
cmpsb
mov
hlt
mov
in
and
push
jl
push
cli
and
ret
stc
cs
sbb
mov
insb
int
jmp
lock
mov
mov
and
pop
push
cmp
into
push
cmp
inc
and
and
ret
mov
cwtl
imulb
pop
inc
sbb
loope
adc
shl
adc
mov
jno
or
and
push
inc
mov
lahf
test
repz
or
je
pop
shrl
orl
addl
iret
cmp
cmp
cld
mov
into
pop
aaa
add
fsubrp
and
and
sti
or
cld
dec
loop
pop
aad
test
bound
mov
add
iret
or
inc
out
ss
ret
cs
push
mov
push
pop
sub
ljmp
push
aaa
xor
or
insb
and
xor
dec
enter
scas
mov
shrb
push
jne
jbe
mov
inc
les
clc
rclb
push
scas
mov
lock
adcl
adc
test
mov
leave
insl
stos
jp
movsl
mov
cmp
sub
xor
cmc
sub
inc
pop
insb
or
leave
cmp
mov
movsl
and
cs
test
mov
adc
dec
mov
ss
xchg
jo
fmulp
push
xor
xchg
lret
jecxz
fwait
mov
jg
sub
jl
call
cmpsl
and
pop
add
in
push
mov
icebp
sti
inc
jmp
pop
inc
ret
xchg
or
repnz
jecxz
xor
test
xchg
sti
sbb
cmpsl
je
pop
xor
fsts
test
cltd
push
out
bound
xchg
jp
icebp
imul
dec
lret
imul
mov
mov
jns
adc
push
scas
pop
dec
test
mov
and
jb
mov
push
sbb
test
dec
pop
gs
and
cmc
inc
repnz
xor
test
lods
and
xor
add
dec
dec
mov
das
lock
fcoml
cmp
jecxz
push
lret
jg
mov
pop
push
pop
ret
adc
std
mov
dec
inc
lock
data16
aad
xor
push
jnp
adc
or
decl
jmp
hlt
xchg
fcomi
aam
mov
push
daa
cmp
mov
lret
andb
mov
test
xor
push
popa
lcall
jno
xchg
push
into
scas
sbb
mov
ret
inc
jae
push
jae
test
ja
loopne
dec
ret
iret
add
aad
in
push
mov
mov
outsl
cmp
inc
sti
icebp
jmp
mov
shrl
add
mov
push
int3
movsl
aad
push
fs
repnz
test
in
stos
xor
pop
out
std
loopne
daa
int3
adc
mov
push
sahf
ja
jmp
les
xchg
stc
rcl
jg
call
mov
jecxz
mov
adc
mov
cmp
addr16
inc
push
aad
mov
jno
and
jmp
sub
inc
mov
subb
mov
cld
je
mov
ficompl
xchg
daa
cli
xorl
cli
and
pop
xchg
cs
stos
or
xlat
mov
push
inc
fstps
inc
and
ret
lock
sub
mov
jl
push
iret
inc
pop
cmp
xor
pop
mov
cmp
sahf
inc
hlt
mov
pop
mov
scas
pop
rorb
cmp
out
dec
adc
mov
outsb
nop
dec
es
adc
sbb
mov
xor
xchg
fisttpll
sbb
push
in
mov
stos
jno
pop
jne
lcall
insb
jmp
fnstcw
mov
lea
enter
inc
pop
bound
cli
adc
popf
aaa
dec
enter
xchg
negb
xor
adc
rcrl
ret
fimull
int3
leave
cwtl
sti
hlt
ljmp
pusha
mov
inc
xchg
cmp
mov
cmp
push
jge
addl
mov
leave
in
add
dec
dec
xchg
jbe
fcmovnb
les
cli
mov
inc
dec
cmp
or
or
lea
xor
push
push
xchg
test
mov
lods
fiadds
int
dec
icebp
dec
ret
lds
jge
adc
mov
sbb
inc
mov
mov
mov
push
and
popf
sbb
notb
imul
inc
push
hlt
mov
mov
xor
shrl
fs
cs
and
daa
push
mul
mov
in
stos
pop
sub
push
scas
fsubrl
loop
hlt
xor
mov
imul
add
mov
shrl
add
fcmovbe
es
xor
adc
cmp
xchg
pop
repz
out
enter
push
imul
pop
adc
jle
sub
cltd
inc
loope
sbb
in
push
cmpsl
out
jg
test
pop
cmp
push
inc
pusha
repz
pop
movsl
int3
aas
insb
mov
mov
inc
loope
repnz
test
push
sbb
pushf
and
fstpl
das
cmc
cli
fistl
sbbb
dec
std
or
insb
push
or
std
sti
mov
cld
cs
stos
xchg
or
or
mov
sbb
cmp
addr16
xchg
or
jae
push
cltd
xor
int3
mov
mov
sub
arpl
push
xor
js
jmp
xchg
out
xor
jle
cs
lcall
dec
sahf
ror
xor
out
and
cmpsl
push
fcmove
sbb
or
xor
inc
pop
lahf
xchg
pop
mov
adc
or
push
mov
add
lock
dec
mov
xor
pop
add
jmp
call
mov
repz
out
jmp
dec
jae
pop
mov
outsl
xor
sub
shr
test
sub
je
aaa
or
loope
test
mov
lcall
xor
cs
xchg
cwtl
pusha
sbb
mov
pop
and
mov
mov
mov
cmp
mov
shlb
xor
adc
xor
ret
sub
adc
adc
fildll
push
out
or
std
push
adc
sub
stos
out
cmp
cs
mov
push
and
sbb
jns
jb
test
or
pop
sahf
hlt
mov
pop
cs
insb
jnp
popa
jg
movsb
imul
js
or
mov
cmpsl
xchg
sbb
cld
xor
scas
lcall
dec
rcrb
jecxz
xor
fwait
push
pop
andl
adc
or
and
mov
sti
adc
pop
outsl
repz
pop
icebp
jge
push
iret
sub
jnp
adc
adc
icebp
ds
push
lock
fdiv
jmp
mov
or
divb
lret
dec
xchg
repz
je
sbb
mov
pop
jmp
out
add
mov
mov
outsw
cs
enter
icebp
loope
out
ja
or
xchg
test
cmp
je
inc
xchg
mov
sbb
sahf
mov
not
and
jae
iret
std
and
sub
ret
mov
push
lea
fs
sub
rolb
mov
push
dec
sub
dec
push
push
mov
dec
inc
push
jge
sub
aas
xchg
mov
or
bound
stos
stos
push
inc
inc
bound
imul
pop
leave
popa
ss
xchg
lds
aaa
xor
insl
in
pop
push
mov
jecxz
xchg
xor
push
hlt
cmpsb
fsubl
in
cmpsl
and
test
mov
lds
and
cld
mov
cmp
dec
dec
push
mov
fnstcw
push
pop
and
enter
das
ds
fwait
xchg
pop
stos
inc
inc
fst
cli
pop
iret
ficompl
hlt
adc
push
xor
mov
jg
mov
jge
pushf
cmp
mov
lods
adc
xor
adc
jo
or
add
mov
jl
lock
cltd
push
aam
js
cli
cmp
shrl
sbb
fisttpll
xorb
pop
adc
fimuls
mov
imul
inc
in
or
cld
sub
adc
test
push
cmp
jl
mov
xor
and
inc
jne
out
in
sub
cs
mov
mov
mull
mov
mov
cmc
mov
push
in
movswl
mov
pop
addl
and
push
push
popa
mov
inc
fidivl
pop
dec
and
mov
xlat
call
xor
mov
mov
cld
ret
sahf
jae
stos
pop
fldcw
fwait
mov
mov
in
rclb
scas
mov
ret
push
je
sarl
hlt
xlat
jmp
out
pop
mov
shll
lock
in
mov
xchg
pop
cmp
xchg
cmp
fsubl
jno
dec
lret
sub
pop
cmp
gs
mov
es
add
or
lahf
std
pop
fwait
lret
out
adc
jns
cmp
inc
sbb
imul
dec
xchg
addr16
and
and
pop
ljmp
in
adc
inc
lahf
test
insl
mov
mov
xor
pause
or
mov
or
jbe
inc
xor
cmp
sahf
mov
repz
push
aad
inc
in
int3
popf
adcl
xlat
sahf
cmp
dec
xchg
jnp
int
sbb
aas
cwtl
adc
inc
jno
cmp
jno
inc
jns
and
fdivrl
inc
jge
jle
inc
or
stc
imul
pop
decl
fisttps
in
rorl
ja
and
push
mov
sarw
pop
rorb
cmpb
aad
push
loopne
enter
jl
stos
jmp
dec
std
icebp
mov
bound
fistl
fimull
cmpsl
push
sub
fists
mov
aaa
mov
pop
fimull
imul
data16
jnp
xchg
clc
mov
sbb
stos
inc
sub
loopne
int3
inc
jle
hlt
mov
and
push
das
popa
mov
aam
mov
cmp
movsl
jae
pusha
outsb
and
std
jle
outsl
sub
pop
movsb
enter
fs
pop
scas
mov
adc
mov
testl
cmp
push
xlat
jnp
dec
xchg
dec
out
xchg
stc
jb
in
test
cmp
stos
sbb
ds
rorl
fs
sub
jb
add
or
fsubs
and
mov
repnz
push
xlat
sbb
testl
daa
es
nop
cmp
pop
push
stos
mov
inc
and
mov
xchg
repnz
iret
test
jnp
repnz
pop
popf
fisubrl
dec
jle
push
pop
iret
push
repnz
xchg
icebp
push
mov
xor
mov
xchg
pop
jo
bound
into
fsubrs
push
imul
add
scas
call
cmp
adc
das
xlat
out
aas
or
dec
int
repz
aaa
cmp
xchg
dec
sbb
out
inc
add
and
pop
jmp
divl
add
push
cmpsl
or
pop
pusha
ja
fldcw
int
adc
or
loop
aaa
pop
je
in
in
nop
popf
mov
or
mov
inc
aas
dec
jae
mov
cmp
jecxz
nop
sub
and
outsb
add
movsl
loop
pop
sar
rolb
mov
nop
aas
xor
mov
das
xchg
and
inc
fs
bound
mov
shll
fdiv
lret
inc
enter
jl
mov
gs
icebp
dec
lcall
push
xchg
mov
inc
cmpsl
jl
outsb
aam
test
cmp
sub
mov
jo
jge
icebp
imul
aad
outsl
test
sbb
ret
push
mov
push
incb
dec
addr16
lods
shr
mov
pop
or
sub
mov
lcall
xchg
inc
ljmp
scas
add
psubusw
push
inc
mov
data16
pop
sub
test
repz
inc
aas
leave
jno
fsubl
shrb
mov
dec
sahf
pop
jns
addr16
xchg
mov
pop
push
pop
rcrl
add
sarb
int3
xchg
sbb
pop
gs
mov
pop
lcall
cmpsb
pushf
decl
fisttpl
xchg
cmpsl
stos
daa
pop
nop
adc
add
cmpsb
adc
inc
fwait
xchg
sbb
push
mov
sbb
test
insb
and
imul
xchg
rcll
push
out
lahf
add
add
sub
icebp
leave
mov
dec
enter
mov
adc
or
fdivrl
sub
lea
sub
mov
mov
pop
in
out
mov
sub
icebp
xchg
mov
mov
mov
sbb
sbb
or
mov
pop
inc
or
mov
out
arpl
pop
xchg
inc
adc
xchg
mov
xor
pop
sarb
add
pop
mov
push
xchg
add
pop
inc
repnz
int
movsl
mov
rorl
aaa
sub
jne
xchg
mov
adc
cmp
mov
sub
fwait
orl
jae
je
dec
mov
hlt
lods
int3
mov
lds
sub
cwtl
pop
cld
xor
jge
sub
aaa
sbb
dec
sub
xor
cmc
and
scas
cwtl
aaa
cmp
ljmp
icebp
je
sbb
mov
sub
adc
dec
sbb
inc
lods
pop
mov
into
sbb
into
movsl
mov
sub
pop
and
jmp
and
mov
push
sub
pusha
or
or
negb
jbe
mov
js
das
imul
cmpsl
hlt
cmp
cs
mov
mov
mov
and
imul
and
aam
push
cwtl
sbb
xchg
rcrb
and
mov
jecxz
leave
inc
cmp
jno
sbb
xor
sbb
stos
push
push
lods
aam
mov
sbb
clc
cli
pusha
xchg
xchg
cmp
aam
xchg
mov
fldl
mov
idiv
mulb
jae
push
xor
in
jnp
inc
test
sub
pusha
mov
lods
inc
rol
xchg
fistpl
std
mov
mov
push
pop
jne
jnp
mov
icebp
loope
popf
test
mov
inc
in
inc
mov
and
add
ss
pop
shlb
stos
pop
js
sbb
rol
in
pusha
xchg
ret
out
mov
mov
sub
dec
lcall
or
mov
icebp
inc
in
fidivrl
shlb
ret
cltd
jae
pop
lret
out
sub
add
je
fildl
mov
sbb
sub
cli
sbb
mov
outsb
pop
mov
mov
aas
in
notb
mov
add
mov
cmp
clc
push
jae
dec
pop
and
cmc
push
scas
ss
fwait
std
add
fists
jo
pop
xor
cld
xchg
push
jbe
scas
pusha
cmpsb
jae
lods
imul
inc
ret
pop
fisubs
fcoml
fcoml
roll
push
mov
loope
sbb
mov
cmp
pop
outsl
insb
stos
repz
fsubs
popf
push
pop
lods
fbstp
cld
mov
and
xchg
inc
leave
cs
xor
sbb
roll
lret
inc
addr16
cltd
jbe
cltd
fidivrs
push
jno
ret
jp
iret
arpl
out
or
cli
or
mov
icebp
add
mov
popa
ljmp
xlat
mov
sbb
in
pushf
cmp
lret
jno
add
inc
lds
mov
pop
add
cwtl
or
daa
outsb
sub
add
fadds
cmpsl
mov
sbbl
push
nop
ja
pop
or
fisubrs
mov
lock
arpl
cwtl
movsl
ds
testl
mov
mov
cmp
adc
sbb
or
fildll
push
push
test
push
dec
dec
std
xor
cmp
ds
jecxz
shll
jge
pop
fs
lods
in
mov
cmpsb
push
adc
rol
in
cmp
lods
cli
pop
jne
cmpsl
inc
loopne
fwait
mov
shl
mov
cld
xlat
xor
and
dec
or
or
aad
xchg
fistps
push
push
cli
invd
fdivp
and
xchg
pop
loope
cmp
sbb
cmpsl
je
dec
insl
clc
shl
ret
dec
repnz
cmp
pop
sbb
test
fildl
sub
push
adc
or
lds
js
int
adc
pushf
aam
cmp
loop
add
dec
dec
sbb
sub
stos
push
ljmp
mov
mov
std
add
call
cmp
shrb
push
sarb
lret
vpunpckhqdq
push
push
xor
out
inc
dec
sti
jne
lret
fstps
sub
stc
into
pop
dec
push
ret
add
aaa
mov
lcall
pop
ds
inc
std
mov
push
test
jo
inc
mov
out
jecxz
jp
xchg
adc
popf
pop
lret
push
in
call
pop
jo
jbe
mov
adc
ret
shr
filds
pop
stc
daa
fdivl
fldt
fs
xchg
dec
pusha
mov
test
push
pusha
lret
jecxz
push
pusha
call
loope
hlt
add
jno
mov
mov
sarl
out
lret
cs
and
push
fisubrl
push
inc
lret
jecxz
pop
mov
outsb
movsb
loopne
mov
inc
adc
movsb
xorb
xchg
cmc
test
pop
mov
xchg
mov
push
or
sbb
in
inc
je
lret
jecxz
loope
and
aas
mov
cmp
mov
push
stos
or
pop
inc
pop
test
sbb
push
or
lds
scas
jecxz
cmpsb
mov
jecxz
fistl
ja
mov
mov
mov
ss
shlb
pop
lea
ljmp
pop
adc
dec
mov
mov
mov
cmp
cs
insl
jp
fdivrl
cmp
cli
in
ljmp
cld
push
pop
aaa
arpl
cld
sub
mov
jg
scas
cld
js,pn
repnz
sbb
dec
adc
int3
cmp
cmpsb
popa
ror
sbb
mov
adcb
dec
pusha
int
sbb
out
jge
subb
sbb
jge
pushf
sbb
inc
arpl
pop
pop
pop
sub
idiv
in
call
iret
mov
aam
push
ds
pop
inc
dec
add
push
les
int3
jne
mov
push
cli
daa
and
hlt
sti
pop
mov
cmp
daa
lret
sbb
sub
lahf
push
mov
xchg
inc
addr16
int3
pop
jb
push
inc
aas
adc
popa
fwait
xchg
push
shlb
pop
iret
cmp
std
test
fnstenv
fistpl
rolb
icebp
push
jnp
dec
pushl
add
sbb
stc
leave
sti
pop
mov
outsb
add
xchg
sbb
inc
dec
into
adc
or
in
daa
mov
jnp
inc
pop
pop
or
xlat
jge
mov
rolb
pusha
ret
ds
push
int
or
pushl
into
imul
daa
lea
cmc
sahf
xchg
cltd
push
aaa
imul
adcb
and
mov
pop
adc
xchg
add
and
nop
clc
jns
xlat
int3
mov
sub
and
pop
mov
sub
xchg
in
add
mov
insl
loop
scas
xchg
add
add
dec
pop
inc
lds
xorl
and
pop
dec
sbb
xor
mov
adc
push
push
add
outsb
pop
adc
gs
arpl
fisubl
cmp
add
repnz
movsb
xchg
fisubl
data16
lock
jg
dec
add
out
rclb
xchg
ret
xchg
or
xor
mov
scas
cld
and
sahf
das
adc
xor
mov
mov
mov
add
inc
cmpsb
adc
inc
add
pop
cs
call
cld
fsts
and
push
push
incl
pop
out
pop
repz
mov
mov
xchg
push
insb
add
dec
jno
fdivrs
insl
push
or
jg
les
inc
xchg
jge
and
push
repz
and
sbb
fsubrs
xchg
stos
ret
push
sbb
pop
sbb
stos
sbb
adc
dec
inc
dec
ficomps
adc
stc
mov
cmpl
imul
les
out
orb
sub
push
call
ljmp
cld
rolw
andb
push
js
icebp
sub
cmp
inc
rcrb
aam
aad
inc
cmp
or
test
add
jb
dec
lahf
pop
pop
lods
and
in
flds
out
loop
aam
or
ret
inc
pop
add
push
jns
mov
sub
mov
or
mov
lcall
dec
imul
hlt
pop
push
or
imul
mov
fsubr
icebp
cld
repnz
sub
sti
movsb
mov
xchg
shl
inc
fcoml
sets
ret
fisttps
notb
adc
jle
daa
loop
add
or
std
push
pop
dec
cmc
fisubrl
fwait
sarb
enter
adc
lea
dec
jge
xchg
jae,pn
xor
in
add
jno
push
lret
cmp
jecxz
nop
and
insl
dec
inc
lcall
mov
jge
mov
repz
jle
movsb
gs
ret
xor
ret
ror
and
sub
andl
cmpsb
mov
xorl
pop
dec
cmp
movsb
xchg
cmp
mov
adc
rcrb
cmp
in
push
in
sbb
xor
mov
sbb
outsb
push
scas
decl
xchg
and
push
test
fdivs
xchg
xlat
push
std
es
jae
icebp
xchg
out
std
cltd
cwtl
fnstsw
icebp
sbb
mov
lret
lods
push
sbb
dec
mov
jns
fnstsw
rorl
inc
outsl
in
and
cmpl
fidivl
mov
push
lret
inc
lods
mov
pop
mov
mov
inc
movb
cmc
jno
fdivrl
incb
jle
ret
mov
mov
mov
mov
dec
imul
aad
ss
jmp
adc
cmp
lcall
sarl
adc
enter
xor
repnz
jecxz
sarb
cmp
xchg
into
lret
sahf
xor
movsl
pop
mov
in
xchg
lock
fisubl
push
adc
mov
mov
lret
test
cli
iret
and
lcall
inc
pop
mov
stc
jecxz
adc
in
ss
movsb
dec
sub
dec
int
dec
lods
fnsave
pop
mov
sub
inc
test
and
cmpsb
call
push
sbb
ds
jnp
cmp
imul
std
xor
loopne
popa
mov
dec
jno
dec
adcb
jnp
test
and
jle
into
dec
stos
or
push
push
add
inc
cld
xchg
lods
rcll
rolb
xchg
scas
inc
xor
test
adc
xchg
and
outsl
or
pop
lods
test
fisubl
or
loopne
sbb
jnp
lods
stos
push
and
pop
out
add
pop
cmpsl
lds
mov
mov
mov
and
pop
iret
pop
sub
test
xchg
stc
push
push
cmpsb
jo
inc
jmp
adc
lret
ds
mov
mov
clc
loope
xlat
and
addl
aam
shll
jne
pop
ja
cwtl
call
lods
pop
push
mov
xrelease
dec
popa
mov
jge
cmp
aam
pop
out
daa
inc
in
mov
leave
xchg
mov
jbe
test
lods
shlb
jg
ret
insb
cmpsl
xchg
mov
or
lea
sbb
loope
loopne
and
cs
adc
mov
lcall
das
popf
xchg
clc
push
das
cmc
ljmp
adc
insb
inc
jecxz
push
jmp
outsb
xor
clc
push
push
mov
sti
mov
and
and
add
int
leave
icebp
loop
dec
mulb
aad
mov
xchg
fwait
mov
decb
je
outsb
fld
mov
negl
xchg
inc
sbb
jns
jno
xlat
inc
leave
inc
adc
hlt
xchg
sbb
cmp
mov
xchg
mov
jb
push
sbb
push
sub
mov
xchg
adcl
add
rorl
aaa
cmpsl
bound
in
fs
scas
das
loopne
mov
mov
das
adc
push
adc
jl
xlat
jl
mov
push
test
dec
add
outsb
mov
lea
aas
ljmp
iret
outsb
imull
int
movsb
dec
shr
jmp
jecxz
loop
insb
xor
icebp
push
inc
fists
test
push
xchg
cmp
xchg
mov
lret
repz
arpl
dec
mov
outsl
mov
fsubrl
mov
mov
mov
push
cmp
push
sbb
imul
mov
clc
add
and
lret
sbb
cmp
outsb
push
adc
lock
gs
mov
divl
push
sar
xchg
xchg
movsb
or
cmp
int
add
dec
in
jns
sbb
fidivl
test
leave
leave
notb
out
jp
out
mov
aam
repz
inc
xchg
adc
scas
scas
insl
sbb
pop
jns
int
int3
xor
dec
cmp
ds
inc
fmul
xchg
jge
dec
cmp
into
push
fidivs
inc
push
and
sbb
add
lods
shr
pop
cwtl
aas
cmpsl
movsb
mov
mov
push
push
adc
bnd
lea
shr
adc
mov
dec
add
dec
mov
icebp
sti
or
dec
mov
and
into
daa
das
mov
orb
push
pop
fnstenv
repz
mulb
mov
push
ret
mov
rorb
outsb
and
cmpsl
hlt
jp
pusha
jp
jge
call
dec
or
jge
je
push
xor
inc
inc
xor
addr16
mov
adc
fldcw
movsb
mov
sbb
lcall
shll
push
dec
jl
je
lods
push
jl
sarb
cmp
stc
sbb
in
xchg
in
out
jnp
add
ret
xor
loop
adc
xor
xor
shlb
push
iret
into
shl
movsb
jp
out
fiaddl
ret
mov
xor
nop
lret
jns
cmp
dec
int
aad
int
lods
pop
in
outsb
roll
repnz
jp
mov
mov
jns
and
xchg
sbb
nop
mov
test
out
jge
add
ficompl
push
cmp
mov
cmp
adc
inc
out
mov
sub
mov
ds
inc
mov
jne
cwtl
mov
shl
push
jg
mov
mov
ret
jg
mov
shr
lock
aam
mov
and
add
aam
cltd
pusha
xchg
mov
dec
lret
adc
mov
mov
inc
cmp
jae
pop
inc
lret
cmp
add
mov
sbb
or
push
dec
inc
or
stos
jge
lods
mov
ljmp
mov
jmp
cmpsl
out
jno
stos
out
aad
pop
sub
in
pop
leave
mulb
mov
jb
clc
test
xor
andb
xchg
ret
pop
pop
sub
cmp
daa
test
mov
sbb
jecxz
arpl
addb
push
sbb
mov
enter
jmp
mov
cmp
addr16
lods
dec
test
jns
push
leave
adc
ds
stos
jl
sti
rcrb
or
add
cmc
fsubrl
repz
lods
pop
mov
sahf
ret
xor
mov
int
and
xor
aam
xchg
data16
in
ss
sbb
scas
and
sub
dec
inc
std
jns
add
stos
cmp
dec
xor
jmp
or
xor
push
push
aas
add
jmp
or
dec
mov
pop
push
push
or
pop
out
enter
cmp
mov
pop
clc
fwait
loop
jne
shr
icebp
push
jo
shl
and
jmp
fidivrl
into
lds
sbb
inc
call
ficoml
xchg
lret
movsb
rorl
sub
lds
dec
pop
ja
lcall
test
int3
add
shl
daa
xor
xorb
cltd
fwait
xchg
xchg
les
pushf
sbb
clc
mov
or
dec
out
add
jb
fcmovbe
sahf
aad
ret
sub
dec
outsl
mov
mov
dec
mov
in
xchg
daa
sbb
adc
mov
and
repnz
pop
lcall
and
stc
and
pop
sbb
imul
fs
push
mov
adc
push
lahf
movsl
inc
xor
sbb
inc
ds
sub
lcall
or
outsb
out
clc
pusha
jnp
pop
sub
push
aas
mov
mov
jo
dec
incb
pop
shlb
ret
mul
mov
jl
mov
clc
sub
cmp
xchg
js
sbb
rclb
out
shrb
cmpsl
inc
xchg
jle
pop
jl
arpl
push
or
mov
iret
jmp
iret
addr16
popf
and
cmovs
loope
fs
cmp
or
or
push
ljmp
push
push
insl
shrb
jmp
xchg
cld
dec
xchg
ss
jno
push
jb
out
fwait
cli
jno
adc
and
imul
rcll
ss
and
pop
cmp
out
ljmp
andb
lock
jo
loopne
cmpb
lds
adc
cwtl
dec
and
jge
mov
ds
stos
push
cltd
or
pop
cltd
cmp
loop
leave
and
sbb
mov
fsubl
andl
cwtl
xchg
movsl
lret
push
outsb
mov
inc
fistpl
sbb
sub
mov
fxsave
in
std
mov
jp
into
mov
fadd
dec
movsb
adc
lret
imul
repz
mov
jb
pusha
stc
int3
jl
mov
icebp
cld
dec
fs
jae
inc
adc
and
mov
movsb
cld
add
sbb
fldt
lret
je
stc
cmp
pop
lods
jmp
dec
push
cli
xchg
mov
jecxz
inc
sbb
cmp
testb
stos
sub
shr
dec
or
xor
push
pop
lcall
inc
inc
outsb
sarb
jle
call
negl
sub
pop
js
jne
jmp
outsb
arpl
call
mov
adc
ja
mov
fs
jl
in
and
push
mov
sahf
jle
dec
gs
aaa
jne
movsl
in
sbb
and
jge
sbb
mov
rol
in
cmpl
jg
addr16
arpl
jge
cmpb
mov
mov
pop
push
pop
or
jmp
pop
xor
inc
fildl
cwtl
push
mov
xchg
into
push
xor
fcmovbe
scas
xorb
aaa
xor
mov
int
movsl
cmp
inc
xor
xchg
mov
mov
adc
sahf
inc
in
pop
popf
and
jmp
jg
jb
push
lds
add
scas
xchg
and
mov
call
stos
enter
jge
fidivl
aam
std
idiv
ret
cmp
or
pusha
sub
xchg
in
cli
adc
jne
xlat
push
leave
push
lret
dec
aas
ret
mov
sbb
mov
push
xlat
mov
mov
int3
aaa
jno
mov
jmp
jge
lock
jo
push
mov
sub
mov
fcmovbe
mov
sbb
jns
cmp
mov
xor
lds
sti
xchg
cwtl
and
pushw
cltd
add
ret
test
fbstp
cmc
lret
jp
ds
gs
adc
mov
adc
push
sahf
data16
enter
rorb
or
test
cs
pusha
ret
or
test
repz
test
adc
dec
push
loopne
and
and
icebp
jnp
cwtl
mov
push
pusha
lock
push
jle
mov
dec
xchg
push
mov
xchg
cmc
dec
cli
test
xor
xor
and
mov
jae
ds
mov
mov
rolb
lahf
jo
mov
fldpi
mov
mov
or
cmc
sbb
dec
leave
push
pop
cld
cld
or
pop
pushf
ficoml
pop
inc
dec
nop
sbb
push
mov
fcmovnbe
daa
or
xor
and
mov
push
and
rolb
testb
mov
mov
test
jmp
fsubl
pushf
movl
mov
fwait
ljmp
sbbb
and
popf
out
and
mov
pop
xor
mov
sti
xchg
push
adc
and
test
sbb
sub
sahf
jecxz
lret
or
lods
push
outsl
push
push
jge
out
xor
push
jae
dec
shll
dec
mov
dec
push
bound
repz
lods
xor
adc
call
or
sub
cmp
sbb
inc
test
shll
in
pop
dec
xchg
jecxz
xlat
mov
adc
pusha
rcrb
pop
jge
aam
xor
jnp
cmp
js
cwtl
cltd
sahf
xchg
and
cwtl
push
push
enter
aaa
pop
out
jne
xchg
add
pop
imul
pushf
cltd
jl
fiaddl
mov
cmp
xchg
call
push
xchg
mov
insl
push
je
add
insb
imulb
jb
test
shl
cmp
lds
push
or
cmp
out
pop
addb
jge
inc
sub
dec
cltd
sbb
pop
jmp
cmp
lcall
dec
sub
loop
lcall
push
mov
stos
enter
inc
and
shl
scas
and
movsb
cmp
js
lcall
iret
adcl
shl
popf
inc
xchg
xor
add
xor
divb
and
std
sbb
aaa
lret
jmp
mov
iret
arpl
cmp
xchg
sti
jns
ret
aas
and
push
pop
adc
gs
and
fcomps
adc
xchg
sub
xchg
int
or
pop
xlat
xor
insb
sbb
fcomps
push
lock
ss
lcall
in
scas
sub
xor
fildl
mov
jbe
bound
push
xor
movsb
addr16
xchg
popf
fwait
ret
add
xor
int
popl
adc
in
sbb
je
stc
jmp
cmp
loopne
outsl
cltd
xchg
jbe
aam
loop
add
in
push
jns,pt
rcrb
cmpsl
inc
sbb
mov
xchg
sbb
mov
jl
mov
jb
xchg
enter
inc
and
jle
inc
jge
xchg
clc
inc
fisttpll
cmpsb
fdivrl
aas
xchg
jno
outsl
daa
jp
enter
jbe
das
pusha
cmp
mov
jp
pop
dec
enter
mov
push
xchg
mov
sub
xlat
xchg
imul
fisubs
call
cld
adc
rolb
scas
int3
lea
rclb
test
insb
stos
mov
and
mov
xor
inc
je
jecxz
mov
jecxz
test
fstpt
xchg
fwait
add
xor
adc
sbb
cwtl
jmp
adc
fisubs
and
dec
outsb
push
pop
loope
and
mov
fs
clc
push
mov
aas
call
andb
adc
mov
pop
leave
movsl
out
mov
das
in
in
lea
mov
jns
pusha
and
xor
divb
xchg
push
orl
mov
les
and
cmpsl
jno
dec
call
jno
les
iret
push
pop
inc
adc
popf
jne
lock
dec
fcmovb
mov
xchg
shll
and
jecxz
aas
push
mov
dec
pop
pop
pop
lods
jo
cmp
add
add
pop
pop
outsl
ret
test
roll
fchs
loopne
or
pushf
xor
cmp
jbe
cltd
lret
inc
psubb
sbb
mov
mov
cmp
mov
xor
xchg
repnz
pop
es
in
roll
imul
imul
xor
mov
icebp
test
sub
ss
loop
dec
sbbl
daa
cs
and
js
lds
ds
pusha
jecxz
pushf
push
adc
dec
mov
cmp
mov
loopne
int
jecxz
dec
xchg
out
push
xchg
lcall
jns
cmp
jns
dec
inc
lock
pop
adc
inc
jnp
out
mov
inc
add
cltd
jae
or
out
outsb
inc
dec
shl
sub
jb
pop
sbb
gs
imul
cmp
ja
cli
std
pop
int
ret
arpl
in
jp
cld
adc
push
pop
dec
in
int
pop
add
or
loope
js
leave
lahf
mov
movsl
lods
pushl
hlt
mov
movsb
mov
repnz
sbb
icebp
and
and
sbb
sub
jno
dec
les
cli
frndint
data16
lret
mov
lods
cmpsb
pop
pop
push
sub
test
shr
cwtl
cltd
repnz
mov
xor
xchg
cld
cmp
fnstenv
lret
sbb
lahf
pushf
xchg
out
dec
out
jp
popl
or
pop
sub
pop
jl
mov
mov
shl
pop
iret
mov
lock
fwait
lcall
mov
cmp
test
into
gs
inc
in
lea
pop
mov
cmp
lods
pop
mov
mov
sub
cmp
popa
pop
and
pop
push
inc
jo
aaa
shl
adc
into
sbb
sbb
inc
sub
xor
jne
pop
cmp
clc
adc
es
les
cmp
aas
rsqrtps
subl
cmc
icebp
sub
jge
lock
lret
scas
mov
cmp
lret
repnz
mov
out
cmp
adc
or
lcall
mov
mov
mov
pop
int3
subb
jl
test
aas
pop
aas
je
ret
cs
sub
sub
pop
fisubl
inc
pop
mov
jae
inc
push
or
jno
and
sbb
cltd
test
xor
addr16
bound
stos
mov
jecxz
sarl
out
push
les
push
pusha
jmp
xlat
lret
pusha
test
aaa
fsubrs
inc
sub
pop
add
mov
lds
push
xchg
mov
je
or
std
mov
mov
and
aad
outsl
movsl
je
ds
clc
sbbb
push
icebp
jo
and
xor
jb
xchg
add
mov
xor
stos
jecxz
mov
inc
adc
fwait
mov
mov
cltd
rorl
jmp
xchg
mov
cld
inc
adc
mov
or
mov
pop
adc
movsb
sub
xchg
test
outsb
dec
add
sti
push
lods
cli
cltd
xor
xor
sarl
movsl
adc
aam
scas
call
mov
adc
and
ds
gs
cmpl
dec
das
lods
das
in
and
xchg
lods
cld
es
sub
popf
pop
pop
scas
pop
fcompp
fadds
xchg
clc
inc
jo
inc
test
cli
mov
je
sahf
xor
dec
jle
push
scas
ss
pop
stos
lea
outsl
mov
sbb
inc
or
add
jns
sahf
ficoms
fmull
inc
in
cs
add
rorb
mov
or
gs
add
lahf
mov
xor
femms
pop
sbb
push
cmpb
mov
pop
testl
ds
fwait
jae
aaa
fstps
adc
cltd
shl
pushf
repnz
mov
test
imul
in
mov
ja
test
arpl
int3
rorl
arpl
jecxz
jle
lret
rorl
sub
dec
mov
push
or
mov
test
cmpsl
imulb
jbe
daa
orb
lds
int
xchg
adc
xchg
pushf
jg
mov
fistpl
nop
lock
call
cmp
mov
movsl
and
mov
jno
and
ss
mov
mov
push
pushf
sub
xchg
cmp
push
push
inc
adc
inc
xchg
xchg
adc
mov
mov
inc
lret
adc
loop
sub
mov
cmpsb
dec
jbe
dec
xchg
push
push
pop
cwtl
xor
out
bound
mov
rcrb
ror
out
mov
xchg
cmp
xchg
cli
sti
add
ror
addr16
or
cmp
xchg
jg
mov
shlb
mov
adc
pop
adc
inc
lods
sbb
rorb
ljmp
mov
cmp
int3
inc
pop
sub
push
dec
imul
sub
fisttps
sahf
imul
xor
adc
pop
pop
lcall
imul
ss
call
push
sbb
pusha
add
cmp
cwtl
shlb
and
and
pop
stos
dec
add
pop
mov
pop
divl
xchg
add
or
lea
orl
mov
push
in
ror
adc
cld
sarl
fadds
cmp
aam
test
rcrb
psubusw
movsb
jo
ret
loopne
stc
cmp
lds
ds
adc
in
int3
mov
mov
call
imul
xor
push
fs
add
mov
ret
stos
addr16
aad
adc
add
lret
mov
les
inc
test
mov
dec
stos
or
mov
mov
xlat
and
dec
cwtl
dec
insb
push
mov
repz
ss
fcomi
pop
cs
shrb
ds
and
push
mov
gs
nop
push
mov
js
mov
aad
std
cwtl
popf
mov
mov
push
inc
add
and
push
jg
je
inc
pop
popf
xor
xlat
mov
lret
setnp
sahf
push
mov
fisubs
push
jecxz
dec
jb
mov
ja
test
jae
mov
aam
lock
add
pop
or
xor
icebp
iret
xlat
fidivl
mov
fists
and
test
sbb
inc
sub
lods
icebp
sub
jle
mov
popf
scas
loope
enter
mov
cmc
lods
or
bound
pop
popf
lahf
and
shll
repnz
insl
push
inc
lahf
pop
repz
mov
addr16
jg
jmp
or
adc
test
push
and
mov
pop
xchg
inc
lock
cmp
fistl
dec
lock
jp
sahf
xchg
inc
ss
sub
push
sbb
pop
clc
pop
repnz
test
nop
ljmp
arpl
and
std
mov
push
inc
lds
cmp
mov
cmp
mov
ror
push
push
fcompl
dec
jmp
std
mov
das
xchg
jmp
lcall
mov
mov
add
jb
roll
stc
testb
adc
fwait
sbb
mov
dec
je
jmp
cmp
jbe
jne
sub
jbe
pop
push
or
out
sub
cs
pop
inc
xchg
in
pushf
add
xor
daa
ret
mov
cwtl
in
cs
add
adc
xchg
test
jge
pop
xchg
ljmp
pop
add
fnstsw
sahf
push
pop
imul
imul
rcrb
cmpsl
mov
das
xchg
out
js
jbe
in
int
jp
push
jmp
outsl
gs
push
cmc
adc
scas
inc
lret
push
cmpsb
inc
mov
pop
push
xor
fsubrl
xor
dec
es
rorb
add
jne
jbe
lea
jmp
dec
push
int
dec
mov
test
xor
pop
and
cli
push
data16
movsl
daa
sbb
popf
cmpsl
cs
aaa
mov
sarb
push
adc
aam
imul
sahf
cmc
aaa
sub
mov
fiadds
xchg
out
sbb
jle
fstpt
jmp
mov
ljmp
pusha
xchg
add
les
cltd
imul
pop
sub
and
push
cmp
loop
stos
fisubl
inc
sbb
ljmp
or
jle
lods
enter
adc
and
fwait
cmpsb
xor
ret
andb
mov
dec
mov
pop
add
sti
or
and
imul
mov
xchg
adc
repz
ret
cs
add
movsb
mov
or
jge
imul
pop
gs
clc
cld
jl
mov
push
adc
ret
fistps
push
ficoms
inc
sub
and
outsl
bound
popa
sti
dec
add
pop
outsl
add
ror
mov
push
jbe
xor
inc
adc
mov
scas
loop
cwtl
cmc
and
stos
out
fnstcw
rol
jno
orb
add
fwait
int3
jae
and
aam
sub
nop
xor
addr16
jns
in
stos
mov
outsb
push
pop
call
push
sbb
or
pusha
pop
lods
xor
stc
iret
sub
stos
shlb
test
adcb
mov
loopne
sub
adcl
mov
mov
in
add
mov
sbb
pop
push
outsb
mov
nop
insl
popf
adc
dec
icebp
test
loopne
cmp
and
mov
fs
fisttps
jl
xor
jnp
mov
jbe
lret
mov
dec
lods
pop
popf
mov
data16
jne
or
out
cmp
imul
daa
pop
push
loop
jns
mov
sub
push
insl
mov
cwtl
dec
mov
dec
push
fcmovu
push
mov
push
cli
stos
jno
xor
jae
jae
clc
mov
mov
inc
or
jg
mov
xchg
cwtl
hlt
pop
xchg
push
or
sub
icebp
mov
dec
leave
lea
push
sbb
outsl
mov
xchg
dec
ret
and
inc
pop
rcrb
imul
mov
mov
mov
insb
sub
mov
lods
or
mov
mov
sbb
mov
subb
add
imul
dec
insl
xchg
inc
dec
mov
data16
icebp
aad
cmpsb
add
in
sti
mov
bound
jecxz
leave
incl
push
xchg
and
pop
mov
cmp
frstor
mov
inc
adc
jecxz
in
jl
repz
js
ficoml
jb,pt
jnp
pusha
inc
stos
mov
dec
fldt
rcl
mov
add
xor
or
fstpt
and
cmpsl
ljmp
shlb
and
sub
fistpl
pop
sbb
leave
inc
or
repz
pop
out
xchg
xchg
cmpsl
icebp
mov
in
cmp
pop
jbe
insl
sti
in
int3
xlat
or
cltd
add
notl
pop
dec
mov
mov
xor
adcl
lcall
push
inc
bound
cmp
xchg
jae
lcall
and
inc
dec
mov
std
jp
loopne
dec
aaa
movsb
xor
hlt
pop
outsl
push
bound
sbb
xchg
jne
add
dec
repz
push
pop
mov
dec
adc
dec
push
psrlq
enter
or
test
testl
cmpl
scas
in
imull
dec
shrl
fwait
scas
push
imul
in
adc
xor
cmp
xchg
pop
mov
add
in
push
xchg
shl
inc
lds
clc
idivl
shr
call
lods
or
xlat
sbb
push
mov
decl
push
test
out
js
sub
cmp
ss
push
lock
add
icebp
rcr
outsb
adcl
sub
adcl
mov
insb
xchg
in
daa
xchg
stos
movsl
ret
sub
nop
and
daa
sahf
xor
data16
dec
push
test
fucomi
addl
pop
push
lea
cmp
sub
int
mov
mov
addr16
mov
mov
xchg
and
push
push
sahf
imul
hlt
fidivrl
sahf
test
testl
mov
jle
clc
std
rclb
inc
add
or
or
xor
push
mov
inc
inc
cmp
adcl
adc
sbb
addr16
outsb
add
inc
push
cmp
imul
test
test
mov
insl
inc
ret
mov
fsts
push
sti
sub
ljmp
adc
ss
dec
push
mov
push
scas
or
xchg
mov
mov
inc
fwait
sbb
xor
out
aad
and
std
push
mov
test
cwtl
test
fldl
stos
inc
sub
sbb
jno
xchg
jae
mov
xchg
mov
adc
rorl
nop
add
jbe
imul
or
in
bound
sbb
adcb
fsubs
pop
jg
lret
femms
fld
mov
cltd
jno
rcrb
lds
inc
add
push
lock
and
pop
xchg
mov
pusha
js
pop
jl
mov
dec
dec
test
outsl
and
cmp
add
int
out
jge
rcr
add
sbb
js
dec
fisttpl
lret
and
sbb
outsl
repz
or
lods
daa
lret
add
movsb
or
stc
mov
or
std
sbb
mov
stos
cmp
out
lods
pop
ds
and
add
insl
lea
mov
gs
cmp
aam
sub
in
insl
push
push
push
mov
loopne
lods
dec
jns
cmp
pusha
sbb
ds
rcl
loopne
and
add
jge
je
in
and
imul
lahf
sti
cwtl
xchg
adc
push
mov
sub
outsl
leave
pushf
mov
jo
and
mov
push
xchg
cmp
push
sbb
aam
popf
movsl
cs
jo
adc
xchg
push
inc
sti
push
sub
inc
cmpsl
call
xchg
lret
pop
mov
xor
ret
pop
pop
arpl
scas
js
int
cli
push
jge
imul
shr
lds
pop
dec
imul
gs
and
int
mov
and
mov
jmp
les
adc
enter
not
push
push
xor
or
jmp
in
loope
movsl
sub
mov
stos
push
rcr
push
mov
das
jns
mov
mov
sbb
rorb
jmp
xchg
jbe
jle
or
sbb
cmp
icebp
fsubl
call
repnz
xlat
and
pop
test
fwait
decb
push
testl
add
cmpsb
iret
leave
lahf
add
pop
inc
loopne
cmp
shll
jge
jae
icebp
loop
jnp
jo
adc
icebp
mov
mov
adc
out
aam
inc
push
adc
adcb
nop
push
inc
decl
add
into
mov
jbe
fcom
daa
xchg
and
pusha
in
dec
xchg
roll
adc
jo
push
inc
mov
add
ds
and
xorl
push
bound
in
int
negb
xor
mov
push
xor
adc
adc
les
lret
repz
push
ljmp
ss
xor
adc
cmpsl
das
ljmp
ljmp
aad
test
adc
clc
imul
jmp
pop
xchg
add
mov
lea
shlb
or
inc
adc
pop
push
loopne
nop
cmp
xor
dec
rcrl
movsl
andps
sub
inc
pop
cmp
push
in
xchg
adc
test
mov
ja
dec
cmpsl
jge
loopne
mov
cmc
push
aam
ret
push
movsl
icebp
or
jne
and
mov
popa
jecxz
and
mov
fmull
xchg
das
jmp
inc
data16
mov
xor
sbb
pop
test
xchg
xchg
in
enter
aaa
das
fldenv
pop
es
leave
popa
sub
insb
stc
addb
int3
xchg
scas
jl
popf
rcrl
pushf
or
sub
cld
adc
cmp
push
les
adc
dec
and
cmp
mov
cmpsl
js
mov
das
mov
sub
pop
xchg
leave
inc
and
and
int
enter
pop
cmp
add
fidivrl
inc
mov
xor
mov
test
pop
xchg
sbb
push
imul
ja
add
add
jmp
mov
in
imul
xor
lret
push
pop
dec
and
sbb
aad
adc
lods
xor
add
sub
xor
mov
test
mov
or
in
push
pop
and
or
mov
and
jle
fildll
push
and
push
mov
inc
pusha
ja
enter
dec
inc
push
std
shrl
fldcw
jp
aaa
sub
and
dec
push
xchg
jbe
pop
mov
xchg
roll
pop
jne
ja
jae
and
mov
mov
and
pop
lret
loope
cwtl
rcrl
int
and
lcall
inc
jmp
inc
nop
sbb
pop
ljmp
out
jno
sbb
sahf
add
add
int
lods
add
adc
hlt
add
cwtl
or
mov
je
out
xor
js
movsb
imul
and
dec
scas
stos
fildll
js
mov
jl
faddl
pop
push
xchg
mov
mov
or
dec
sar
icebp
pop
push
out
mov
and
mov
mov
adc
push
rorl
and
call
adc
in
cmpsl
mov
sbb
cmpsl
cmpsl
push
fisubs
jecxz
add
test
inc
repnz
add
xchg
xor
xor
xchg
sbb
fcomps
push
cld
fdivrs
icebp
push
mov
or
popf
lahf
add
sbb
push
or
jns
cwtl
adc
in
je
call
inc
pop
sbbl
ret
in
inc
stos
inc
iret
ret
push
rcll
xchg
setl
dec
mov
mov
xlat
sub
mov
shlb
inc
jne
cs
jno
push
xchg
popf
mov
inc
gs
jecxz
outsb
imul
lods
mov
out
cmp
jno
sbb
int
cmpsb
cwtl
sbb
mov
sarb
cmp
mov
lcall
add
aas
xor
rcrb
ret
lret
addl
gs
ret
pop
mov
in
dec
jae
in
xor
mov
jg
sbb
rcrl
jl
mov
add
shll
mov
je
xchg
pop
and
test
ljmp
push
sarl
jle
pop
outsb
xor
aad
mov
mov
aam
test
les
adc
icebp
sub
dec
push
in
out
aad
daa
dec
lret
pop
lods
add
pop
arpl
or
nop
adc
adc
or
aaa
xor
shrl
scas
scas
and
int
and
push
fs
push
jge
push
xchg
dec
mov
mov
jmp
jb
jle
lds
mov
rcrl
add
cmpl
rclb
iret
imul
aaa
stos
or
xchg
shrb
inc
outsl
lret
jl
inc
cld
outsb
leave
pop
insb
jle
pop
hlt
sbb
ss
sub
loopne
xchg
test
movl
dec
repnz
cwtl
or
or
lahf
lods
sbb
bound
imulb
lock
push
or
mov
dec
lret
arpl
pusha
ds
lret
and
out
mov
mov
mov
nop
adc
bound
pop
mov
jg
imul
cwtl
dec
mov
pop
add
lret
xchg
xor
xor
ficomps
shll
push
or
imul
int3
adc
adc
scas
bound
int3
loopne
lods
popl
pop
xor
rcr
inc
and
xor
and
cli
cld
jo
mov
mov
xlat
bound
sbb
jl
pop
cwtl
or
cmc
sti
pop
mov
sbb
push
mov
sub
int3
jecxz
xchg
outsl
or
xchg
mov
paddsw
loopne
pop
divps
mov
and
test
mov
cmp
or
dec
cmp
and
pop
andb
sarl
push
cmp
cs
int
sbb
adc
ja
mov
scas
lds
jp
pop
pop
lods
iret
mov
mov
leave
sub
and
out
add
cmpsb
mov
add
ljmp
dec
pop
bsf
push
push
fnsave
int3
mov
xor
popa
loopne
cwtl
cli
push
aaa
test
outsl
fstps
pop
repnz
add
jge
repnz
test
ds
mov
mov
enter
push
xor
out
ffreep
pop
or
js
ret
inc
shll
pop
xor
adc
dec
jecxz
insb
mov
ljmp
repz
lcall
or
cli
and
or
dec
decl
roll
imul
dec
insl
into
lods
push
push
cmp
mov
mov
dec
mov
ret
sub
add
arpl
push
add
inc
jg
jge
sbb
pop
dec
add
sbb
aad
inc
cmp
inc
mov
sarb
and
fcmovnbe
clc
mov
sbb
xchg
mov
and
cmc
iret
mov
inc
or
orl
and
jg
jo
js
push
insl
add
mov
adc
loop
inc
je
inc
jge
lea
fisttpll
mov
insb
push
mov
fsts
in
adc
mov
inc
std
and
cmp
jbe
mov
les
jg
pushf
gs
pushf
push
sti
adc
stos
in
xor
sti
cltd
mov
sub
movsw
jle
sub
push
pushf
push
xlat
sub
add
cwtl
or
mov
mov
or
iret
inc
lret
mov
popf
push
int
push
lcall
test
sub
mov
push
push
xchg
pop
push
lea
push
jb
adc
out
xchg
lret
insb
push
sbbb
pop
pop
lret
scas
mov
jg
push
sub
test
jb
push
scas
adc
add
sahf
xor
test
mov
push
stc
cltd
mov
xchg
jbe
movsl
add
push
jae
lock
add
jns
je
mov
sub
cs
pop
mov
stc
xchg
pop
and
lret
mov
mov
nop
aas
cmp
jecxz
jl
insb
inc
mov
iret
rolb
stc
jle
lods
pop
cmp
xchg
pop
std
mov
pop
notl
nop
mov
ljmp
inc
dec
insb
cltd
cli
mov
ss
ljmp
pop
test
dec
adc
cmpsl
jl
pop
push
inc
xchg
adc
fisubs
mov
xchg
xchg
mov
out
bound
jae
jnp
add
mov
shl
ljmp
loope
ljmp
pop
leave
std
es
pushf
les
pop
pop
and
xchg
jns
repnz
mov
xor
mov
mov
xchg
cmp
pop
clc
push
outsb
clc
push
aam
push
rep
arpl
lret
fiaddl
leave
jmp
cmpsl
out
cld
in
mov
sahf
loope
push
cs
xorl
mov
mov
or
adc
jge
rorl
pop
in
test
or
sbb
inc
add
mov
neg
shlb
push
in
push
dec
sbb
fadds
nop
iret
xor
lock
stos
das
mov
in
sub
jl
mov
jge
ja
cmpsl
andb
pop
dec
xlat
xor
cli
imul
stc
test
jg
mov
scas
test
test
lret
cmp
push
or
fnsave
jecxz
gs
dec
sub
mov
imul
mov
gs
int
pop
in
nop
push
sbb
lea
call
mov
push
sbb
rorl
mov
rcll
sarb
xchg
mov
pop
nop
and
aad
jno
in
add
in
mov
into
xor
lret
lock
fwait
lret
add
inc
mov
jmp
jl
push
iret
mov
outsl
sub
mov
jg
xchg
mov
sbb
ror
test
lods
mov
jbe
sarl
cltd
mov
jo
adc
lahf
push
push
adc
aad
inc
cmp
cmpsb
repnz
pop
or
pop
adc
and
fstl
adc
xchg
test
xlat
fwait
sahf
ljmp
bound
jl
push
dec
jbe
testl
sub
pop
sub
and
or
adc
adc
ja
lea
inc
or
push
push
sbb
cld
repz
inc
adc
jne
mov
adc
es
pop
xchg
outsb
ret
ljmp
push
mov
mov
xchg
sub
loope
idivl
shlb
outsb
push
fistpll
push
imul
xor
pause
sahf
mov
xchg
sub
fs
jno
call
push
pusha
enter
inc
shl
add
ja
and
arpl
inc
sbb
mov
out
fwait
xlat
sub
iret
or
fwait
jo
xchg
sbb
xchg
inc
and
fadd
mov
test
scas
js
cwtl
testl
iret
out
aaa
adc
xor
jg
test
lods
and
xchg
dec
sbb
outsb
es
std
loope
lret
pop
je
repnz
das
enter
add
inc
ret
test
push
jecxz
fldcw
aas
push
int
dec
xchg
loope
adc
cs
dec
dec
mov
std
and
mov
popa
mov
nop
fmulp
mov
pop
repz
movsl
loop
pop
dec
mov
imul
push
inc
mov
or
jl
daa
inc
or
into
xchg
movzwl
sbb
inc
push
lds
mov
roll
hlt
hlt
adc
jmp
mov
xchg
icebp
sub
xlat
lods
push
rcrl
scas
mov
inc
and
stc
mov
and
add
loope
fwait
rcl
pop
jmp
mov
gs
push
mov
loopne
aaa
mov
push
pop
ja
jmp
shlb
mov
pop
fwait
aad
sbbl
jmp
sahf
popl
ds
mov
por
mov
cmp
cmpsl
sub
cmp
push
inc
jns
pop
fs
in
test
bound
into
js
sbb
orl
lock
or
jl
push
dec
push
int
hlt
cmp
cmc
repz
cli
daa
fisubl
fldcw
mov
das
xchg
pop
mov
aad
push
cmp
jmp
jns
fs
and
mov
mov
lcall
pusha
mov
aad
pop
or
gs
outsb
xor
cmpsb
incb
lret
xchg
or
stos
inc
rorb
imul
call
out
xchg
jnp
inc
dec
mov
adcl
mov
cld
movsb
jae
imul
mov
push
push
cli
adc
cli
mov
pop
pusha
jg
arpl
xlat
inc
jbe
clc
jl
jns
shll
mov
cltd
lahf
dec
fisubrl
idivl
das
and
adc
inc
inc
fdivrs
outsl
lcall
xor
inc
mov
sbb
or
mov
ffreep
loope
jo
sbb
jg
call
daa
leave
scas
mov
scas
in
hlt
and
in
test
cli
cld
adc
lahf
cmpsl
movsl
loopne
ja
xor
inc
cltd
stos
or
xlat
aam
push
leave
fwait
add
pop
adc
out
xchg
enter
xchg
test
aaa
cmc
jmp
jno
lds
int
std
imul
aam
movsb
cmp
cmpsl
dec
pop
cpuid
shrl
pop
ret
mov
subl
mov
fiadds
in
xchg
lret
dec
or
mov
sub
add
dec
pop
lods
and
not
es
inc
pop
ret
out
push
jl
insb
dec
sahf
or
subb
ja
xchg
test
xlat
mov
subl
xchg
cmc
and
push
mov
xchg
loope
xchg
mov
and
pop
es
jecxz
addr16
int
or
inc
push
add
jl
out
push
clc
push
jg
xchg
mov
xchg
inc
mov
sbb
inc
adc
pop
push
imul
lret
mov
mov
std
sbb
pop
inc
sti
inc
jg
lds
addb
test
out
cmp
scas
push
mov
fisttps
sbbb
jl
jno
icebp
pop
jae
pusha
pop
add
dec
cmpsl
iret
loopne
idivl
jo
xchg
js
loopne
rorl
xchg
ret
dec
jecxz
and
sti
sub
lret
int3
cmp
adc
into
push
push
jbe
jae
pop
and
add
cmp
sub
in
mov
movsb
fidivrl
jmp
add
push
xlat
retw
cli
inc
outsl
ret
sub
xor
test
cmp
mull
fs
pop
jae
dec
ret
add
daa
or
rol
out
push
push
push
outsl
femms
insl
cmpsb
inc
sbb
mov
into
xchg
daa
jp
mov
rcll
add
std
rclb
pop
rorl
loop
movsb
outsl
dec
jo
mov
subl
lret
cmp
test
lds
shrb
test
pusha
jl
sbb
ret
idiv
pushf
jo
lahf
rcrb
mov
xor
loop
fistpl
inc
jl
sahf
cmp
orb
inc
mov
mov
outsb
or
loop
scas
mov
cmc
pop
lret
rcl
aam
fcomi
jnp
es
loop
testl
fwait
inc
lods
sbb
mov
outsb
or
adc
mov
and
inc
jp
jecxz
clc
lret
jmp
out
ss
inc
lret
mov
ss
loopne
push
push
repnz
lret
sub
dec
jge,pt
lea
daa
sarl
imul
dec
or
xlat
jo
pop
or
mov
in
ljmp
sti
xchg
add
ror
ss
nop
or
lods
negl
repnz
popf
int3
inc
xchg
pop
cmp
std
lahf
pushf
xchg
adc
dec
push
xor
scas
mov
jno
scas
fs
icebp
pop
and
insb
iret
inc
dec
push
push
and
and
jns,pt
test
mov
test
dec
lods
gs
lahf
scas
mov
jmp
insb
repz
shrl
aas
in
imul
or
inc
or
pop
in
and
sar
push
xchg
xchg
repz
ja
cli
lret
stos
sub
shrl
lret
jle
lea
rorb
lret
xorl
lods
popf
pop
cmc
xor
and
inc
dec
push
dec
lods
fnstcw
sbb
in
scas
add
scas
iret
push
lea
outsb
gs
loopne
mov
negl
push
add
clc
shll
push
daa
punpcklwd
or
sub
fisubs
pop
lret
or
bt
fiadds
sub
notl
mov
sub
aas
xchg
or
cmp
mov
push
mov
sub
or
out
daa
mov
mov
sbb
pop
test
inc
arpl
cld
lds
push
adc
outsb
out
mov
mov
adc
xor
cmp
xor
and
mov
pmulhw
mov
mov
movsb
cmp
rcrb
add
mov
xchg
testb
push
fimuls
add
mov
iret
rolb
fcoml
and
adc
and
fisubl
loop
scas
pcmpgtw
int3
jge
jp
loop
add
sub
push
cmp
imul
mov
in
sub
into
sub
fidivrl
sti
fsubrs
add
sbb
lods
dec
in
call
aad
fildll
xor
lcall
or
fs
lock
add
int
mov
negb
cld
jbe
mov
je
fistps
ss
ljmp
mov
inc
push
inc
adc
xchg
add
mov
cmp
xor
mov
lret
cmp
outsb
dec
jle
cmp
fs
push
or
dec
fadds
mov
out
hlt
xor
mov
pop
flds
stos
or
pushf
cmp
push
divl
outsb
jp
rcrb
sbb
loopne
push
sub
pop
cmpl
cli
cltd
cmp
dec
aas
sbb
movsl
xchg
push
sbb
aam
pushf
ret
xor
ss
inc
int3
mov
out
in
xchg
repz
push
push
push
xor
sub
lods
xchg
xchg
pop
je
nop
aaa
movsl
mov
test
xor
ljmp
idivl
push
xchg
sbb
xchg
push
xor
mull
cltd
rorl
or
sbb
lds
mov
pop
cmp
jg
push
fimuls
div
dec
cmp
sbb
mov
inc
repnz
jno
xor
and
jle
mov
shrl
mov
stos
sbb
xor
xchg
lret
mov
and
push
mov
fs
xor
cld
mov
pop
je
cmp
sbb
aas
xchg
or
mov
stos
jnp
inc
adc
test
mov
fnstsw
sbb
movsl
sbb
xor
outsl
adc
shll
pop
popf
sub
stos
push
cld
and
or
xor
in
xorb
sub
arpl
scas
xchg
fdivrl
mov
sahf
cmp
out
pop
icebp
mov
inc
pop
lea
or
repnz
inc
pop
sbb
or
push
mov
inc
loope
mov
stos
adc
loopne
adc
pop
in
xchg
inc
bound
in
add
test
fxtract
ss
mov
dec
jo
dec
sub
inc
xchg
mov
jns
inc
out
test
mov
xor
addr16
jle
mov
mov
adc
scas
xchg
mov
jno
inc
mov
shll
xchg
idivl
in
cmp
push
jle
clc
pop
sbb
mov
sbb
mov
lods
ljmp
mov
xchg
inc
lods
lret
pop
test
or
cmp
and
lcall
test
cmp
mov
sbb
xor
nop
movsb
les
lds
iret
xchg
js
ds
outsb
jge
gs
popa
jmp
sub
jno
jle
pop
jecxz
dec
loope
sub
sbb
das
add
hlt
and
pop
pop
cmp
xchg
sbb
les
loope
mull
loope
ret
inc
inc
cmpsb
outsb
mov
and
jge
arpl
mov
cmp
and
pop
std
pop
and
sahf
push
pushw
or
jl
jno
lret
test
cmp
dec
lods
lret
mov
out
pop
and
fs
testb
mov
jns
orl
int
xchg
ret
pop
js
inc
mov
jo
sub
mov
mov
inc
popf
mov
fstp
int3
dec
sbb
xchg
adc
mov
dec
sub
sahf
fsubs
add
jmp
lar
push
in
mov
ljmp
cmp
ja
cmpl
mov
mov
in
or
divb
bound
sahf
xor
jmp
movsl
and
lret
outsl
inc
psubsw
out
or
test
sahf
shlb
in
push
adcb
arpl
movsl
cmp
les
push
incl
adc
and
xor
gs
inc
mov
popa
mov
in
or
push
adc
test
pop
push
pop
and
loopne
arpl
cltd
xchg
lds
mov
out
stos
adc
jg
dec
mov
pop
xor
dec
in
mov
xchg
push
push
pop
adc
jecxz
clc
into
ja
lds
or
inc
stos
cmpsl
or
jo
adc
and
sbb
pushf
mov
fisttps
dec
mov
xchg
mov
and
lcall
std
stc
das
push
jne
arpl
jl
test
imul
jge
sahf
jo
xor
std
push
and
enter
xlat
or
jl
bt
je
repz
or
cmp
cltd
jb
push
clc
aas
js
and
xor
ret
mov
mov
out
mov
cmpsb
xor
push
mov
cmpl
subb
nop
cli
mov
ficompl
outsb
dec
xchg
sbb
sbb
es
sbb
sti
lods
mov
es
ljmp
ret
fldenv
inc
inc
jmp
mov
fwait
addb
aam
pop
push
es
aaa
dec
daa
inc
bound
xchg
nop
negb
lahf
sbbl
addr16
push
cmp
gs
fwait
pop
jg
call
jle
ficoml
adc
jmp
inc
stos
sub
cwtl
xchg
fimuls
test
cmc
out
imul
push
lea
mov
pusha
orb
es
pop
inc
sub
jge
std
push
sti
and
cmpsl
dec
addr16
xchg
movsb
stos
mov
test
cs
or
jne
jg
movsl
test
test
xlat
test
ret
and
out
mov
int3
jmp
sti
jge
mov
das
enter
shll
sbb
mov
add
mov
inc
jns
cmp
inc
aam
mov
leave
jne
or
adc
stos
inc
scas
jecxz
mov
sbb
sbb
adc
mov
lcall
movsb
fistl
pop
subb
mov
insl
dec
push
sti
loop
inc
lahf
pop
imul
push
fisttpll
pop
mov
int3
hlt
mov
push
jnp
dec
cli
popf
daa
sbb
cltd
loopne
jbe
aam
sbb
fildll
bound
ds
mov
jle
inc
jge
popa
or
inc
mov
pop
pop
fildll
cmc
mov
les
shlb
pusha
negb
div
mov
daa
jno
jne
loop
xor
xchg
fadd
mov
pop
sarb
fiadds
jnp
fldl
mov
daa
push
cmp
fwait
repz
rcl
je
loope
lock
cmp
lret
insl
jb
sarl
insl
jns
subl
clc
dec
ret
pop
sbb
pusha
out
mov
xchg
jnp
jnp
mov
movsb
push
mov
sub
js
adc
es
mov
lock
or
add
or
mov
xchg
cmp
iret
push
push
mov
lods
mov
rcrb
jnp
stos
inc
or
cmc
push
cwtl
mov
ds
dec
add
loop
mov
jno
pop
sub
xchg
mov
xchg
cmp
jg
je
xlat
lods
loop
test
imul
lahf
inc
dec
and
loop
aam
test
loopne
pushf
push
sbb
add
inc
cmc
int3
pop
xchg
xchg
sub
cli
popa
push
das
inc
xor
pop
push
push
xchg
adcb
fidivs
imul
cmp
addr16
cs
into
push
cmc
popl
stc
inc
test
pop
jo
sub
lret
cmp
inc
add
hlt
out
lods
popf
cli
or
jno
push
push
aas
xchg
push
lods
ss
das
bound
ja
cmp
mov
push
repnz
dec
xor
pop
sub
movsw
repz
lods
out
jbe
ja
and
fistpll
rcll
xchg
cmp
in
cmp
xor
jecxz
ss
aas
ror
ret
insl
lcall
jno
fisttpll
lret
add
fldcw
mov
sub
xor
pop
cmpsb
cs
jecxz
movsl
adc
add
mov
in
loope
jo
insl
pop
and
or
inc
sarl
mov
test
mov
movsb
jp
rep
or
fadd
pop
mov
inc
ja
popf
mov
jb
mov
std
xchg
fcomps
lcall
popf
pop
into
and
lcall
addl
mov
sbb
pop
in
roll
push
inc
sub
into
nop
jae
inc
dec
push
sbb
add
sbb
lock
out
lock
jbe
clc
insl
arpl
movsl
xor
mov
adc
fistps
ret
xchg
rcl
mov
fisttps
pusha
cmp
hlt
imul
cmp
xchg
mov
push
les
sub
call
add
aas
inc
jo
mov
push
test
xchg
jns
int
out
rcll
enter
insb
push
sub
inc
ret
scas
ret
mov
dec
mov
pusha
ljmp
jae
insl
aaa
lret
xor
aam
fistpll
sub
mov
cld
enter
dec
xchg
inc
dec
inc
es
add
into
push
jbe
xor
pop
dec
cltd
adc
mov
push
in
arpl
dec
mov
and
in
mov
sub
loope
jbe
xor
aaa
cmp
dec
testb
in
aas
xchg
loop
lock
adc
cmp
mov
push
shrb
push
lea
xchg
test
cmp
dec
mov
icebp
inc
nop
cmpw
pusha
inc
lea
jb
xchg
jle
and
mov
in
jg
roll
in
das
mov
dec
cmp
push
push
fildll
xor
or
lods
loopne
cs
lret
scas
xchg
es
xchg
incb
insl
inc
add
pop
out
and
xchg
push
mov
and
out
test
push
mov
mov
int3
pop
cmc
sbb
and
pop
loope
daa
mov
out
aaa
xchg
sub
repz
jp
jmp
inc
jno
xchg
sub
in
sbb
add
test
leave
repnz
pop
test
stc
xlat
ja
add
nop
lahf
inc
cmp
add
bound
or
movsl
xor
fdivl
jae
js
loop
xchg
mov
xchg
cmp
cs
pop
cmpsl
inc
jecxz
mov
sbb
stos
push
or
adc
mov
dec
aaa
push
and
mov
mov
mov
shlb
lcall
insl
jno
mov
out
jle
inc
push
mov
imul
push
inc
mov
jnp
cmc
pop
push
test
xor
push
out
rcrl
call
flds
int3
inc
sahf
rolb
pop
dec
sub
mov
ret
mov
dec
add
psrlq
jb
lods
cmpsl
das
push
sti
bound
or
sbb
sub
rclb
add
or
daa
into
mov
repnz
jns
xor
cmpsb
movsl
aas
push
cmp
sti
scas
test
loopne
iret
adc
das
ret
arpl
fimull
out
lret
mov
jg
ret
movsb
xchg
out
icebp
add
push
push
or
ljmp
ljmp
pop
inc
cwtl
int3
dec
adc
data16
aam
jae
arpl
dec
fistpll
cmp
es
jae
xchg
xchg
movsb
jl
xlat
pop
cwtl
bound
xor
aaa
arpl
mov
lods
clc
xchg
push
insb
mov
cmp
jo
inc
or
aaa
mov
add
mov
mov
aaa
dec
leave
inc
jmp
fcomps
sub
inc
loope
bound
not
xchg
sub
jl
pop
xor
jns
sub
jg
stc
popa
push
add
sti
cmp
push
ljmp
das
je
fstps
stos
scas
in
in
clc
mov
hlt
or
cli
inc
push
fidivrs
or
mov
out
push
mov
add
adc
test
fiaddl
mov
pop
inc
sub
fiadds
loope
cwtl
adcb
int
and
aas
pop
push
adc
or
sar
cmp
mov
jno
dec
cli
stc
or
xor
mov
shr
pushw
jge
out
outsl
cli
sbb
aad
fimull
ret
iret
pusha
push
aas
or
mov
mov
sbb
add
lods
cltd
mov
cmp
sysret
imull
sti
push
jmp
fucomp
test
insl
cmp
mov
lods
enter
fs
repz
iret
mov
stos
leave
out
sahf
cmp
adc
iret
insb
mov
adcb
es
jg
pop
push
and
cmpb
in
cli
xchg
call
sub
xchg
and
mov
rclb
aas
xchg
push
into
mov
fwait
dec
pop
adc
out
sbb
lods
push
lret
scas
mov
or
out
popa
outsb
push
push
fnsave
pusha
cmpsl
mov
fldt
aaa
mov
push
loop
ljmp
sbb
push
jecxz
jb
dec
and
test
movl
mov
adc
loop
idivl
xor
pop
inc
pusha
out
pop
rcrl
jle
xchg
in
push
mov
int3
cmpsl
loope
adc
adcb
scas
or
cwtl
add
mov
lret
dec
ljmp
jns
fisubrs
test
sub
cmp
sbb
mov
movb
push
jb
ss
fmuls
daa
cmpsl
xchg
imul
cmc
push
ds
sbb
mov
xchg
mulb
lcall
cmpsb
add
push
mov
rcrl
mov
mov
and
dec
push
sahf
inc
mov
jbe
adc
push
mov
cmpsl
fsts
ja
mov
icebp
movsl
sub
int
pop
pop
bound
shll
add
daa
or
ficoml
xchg
and
mov
mov
ss
or
ret
mov
insl
lahf
sbb
sub
xchg
loope
adc
jmp
mov
jne
mov
ret
mov
ljmp
push
sbb
out
jp
sub
dec
add
mov
cwtl
fistl
adc
dec
subb
cmp
xchg
dec
push
mov
xchg
aad
mov
lods
mov
mov
cmpsl
pop
jae
push
dec
mov
out
sbb
adc
cmpsl
mov
aad
push
mov
cmc
out
out
inc
sub
add
in
pop
push
xchg
rcr
clc
cld
pusha
xchg
addr16
es
push
mov
fwait
movsb
fucomp
dec
cmc
pop
fsubrl
ss
insl
inc
bound
icebp
push
and
addl
fisubl
out
push
lcall
sti
lcall
repz
sahf
pop
aas
mov
jmp
and
cld
or
dec
sub
outsb
test
clc
iret
movsl
sti
inc
jns
push
jmp
pop
pop
popf
adc
dec
push
jo
out
xchg
loope
jb
jae
lret
repz
mov
nop
es
add
sub
stc
outsb
scas
add
jae
stc
iret
shll
jle
cmp
gs
push
test
fidivrs
mov
popf
dec
cmp
inc
in
outsl
jecxz
test
imul
adc
mov
shll
into
lret
repz
cmp
ret
jge
lock
mov
imul
popf
sub
mulb
mov
fistps
adc
scas
inc
mov
and
test
aaa
add
sahf
sti
sti
fdivl
addb
pop
fst
lock
push
inc
mov
inc
fiadds
negb
cmp
jp
loop
lds
and
fcomps
mov
jne
sub
mov
jecxz
in
pandn
push
out
repnz
clc
in
je
andl
xor
popa
rorl
push
adc
aas
sub
stos
lea
and
lea
into
xor
sub
pop
pop
data16
aaa
addr16
mov
mov
fsubrs
jbe
in
outsl
jecxz
mov
dec
fs
outsb
add
loop
test
les
jecxz
into
cmc
out
ja
cmpsl
jmp
xchg
cmpsb
sub
mov
mov
stos
push
aas
xor
repnz
jb
push
dec
pop
dec
movsl
jmp
pop
lret
ja
nop
jae
or
aad
js
inc
sti
cld
aam
cld
pushf
sbb
sti
xor
call
cs
dec
push
repz
lock
push
xchg
ja
inc
xor
fadds
mov
lods
or
stos
adc
arpl
iret
mov
arpl
filds
sub
lcall
cs
inc
and
shrl
stos
pop
and
and
push
xchg
popa
insl
lock
lret
out
fmuls
call
xchg
push
nop
sbb
adcb
mov
les
lret
rcrl
loopne
xor
sbb
stos
and
add
jp
mov
cmp
cld
cmp
hlt
mov
jecxz
jae,pt
push
movsl
bnd
mov
push
jnp
sahf
adc
inc
sub
mov
sbb
pop
cwtl
cli
cmp
ss
cmpsl
sarb
inc
inc
push
je
loopne
xor
loope
mov
cld
ficoml
addr16
repnz
out
mov
test
test
mov
xor
cmpl
cmp
xor
adc
push
ficoml
jl
out
mov
xor
sbb
sti
outsl
or
add
test
addr16
cmp
push
mov
sbb
mov
dec
repnz
in
js
lahf
in
mov
sub
xor
mov
xor
aam
lret
push
jae
inc
cmc
push
jne
sbb
call
mov
and
fbld
ljmp
mov
sti
repz
fdivl
js
sub
dec
std
xchg
insl
lods
mov
jg
push
arpl
or
fs
sbb
mov
das
popf
inc
add
scas
and
js
pop
enter
sub
sub
mov
ja
mov
adc
aam
jbe
cwtl
sub
out
lds
mov
pop
lds
inc
mov
mov
stc
pushf
lahf
in
sub
or
inc
pop
sahf
adc
push
out
cmpxchg
xchg
adc
idivl
scas
pushf
jb
xchg
ss
rclb
and
lret
js
xchg
xchg
pop
or
sbb
fwait
mov
ret
dec
cmpsb
ret
sbb
fcompl
jnp
adc
cmp
inc
lcall
leave
sub
mov
sbb
lods
jg
push
or
sub
pop
cltd
loopne
adcb
mov
lret
push
dec
aaa
push
push
fists
gs
into
pop
aaa
int3
mov
sti
jmp
mov
mov
jp
mov
mov
out
fadd
pmulhuw
push
jne,pn
adc
xor
out
out
xchg
cwtl
icebp
je
repz
loope
cld
jle
xor
cmpsl
movsl
aam
dec
mov
mov
loope
out
mov
lock
mov
mov
icebp
mov
pop
push
mov
out
out
adcl
das
lahf
and
cs
aas
xlat
mov
add
mov
xchg
xor
adc
jle
in
xchg
loop
xchg
inc
shlb
in
rcll
popf
inc
in
xchg
rcrb
pop
fidivl
jl
sub
imul
cmp
enter
push
imul
pushf
xchg
mov
popa
sahf
inc
out
mov
add
aam
mov
int3
out
movsl
jle
int3
cs
jo
or
fsubp
out
subl
ja
push
les
sarl
sub
push
inc
js
clc
sub
xchg
pop
sbb
pop
ds
adc
imul
xor
dec
pop
shl
outsb
mov
or
jge
add
lock
ffree
lahf
pop
pusha
xchg
push
pop
and
dec
scas
sbb
int3
jno
inc
xchg
js
sub
cmp
cmp
cmp
pop
sbb
es
xchg
ljmp
adc
out
dec
inc
fistl
lret
loope
push
dec
lods
cmp
add
out
xchg
ljmp
cld
mov
inc
sbb
jno
adc
dec
fstps
inc
hlt
imul
jo
inc
nop
cmp
pop
jo
sub
mov
add
or
mov
out
push
shrl
mov
mov
cld
fsub
mov
inc
mov
push
pop
out
mov
orl
pop
js
jp
ljmp
cmc
das
ljmp
lahf
js
and
inc
pop
int
pop
add
xchg
ret
lahf
aaa
into
cmpsl
daa
imul
xor
iret
add
outsb
pusha
pushf
subl
mov
pusha
jo
push
scas
loope
aad
repz
pop
xor
dec
jne
dec
or
dec
push
pop
out
xchg
addb
int3
sarb
ljmp
lret
cld
in
mov
cld
jmp
in
lods
out
pop
rolb
cmpsl
je
popf
mov
jp
icebp
dec
cmpsl
add
bswap
lret
mov
clc
inc
adc
xor
and
fnstsw
adc
aaa
dec
cmp
jge
cs
mov
ror
mov
add
test
inc
ret
int
enter
fs
xchg
testl
jecxz
push
test
pop
push
aam
scas
push
lret
in
stos
and
mov
shlb
mov
xchg
jb
js
xchg
insl
outsb
mov
mov
cmp
jmp
xor
movl
jp
mov
inc
call
sub
ljmp
hlt
pop
and
int3
sub
stos
dec
dec
add
ret
mov
repnz
pop
xchg
add
mov
test
ret
fadd
mov
movsb
or
add
or
xor
sahf
imul
sub
aam
push
sub
xchg
jmp
push
push
insb
jecxz
xchg
sbb
push
xlat
fildl
and
push
daa
mov
enter
iret
ret
sub
or
mov
mov
mov
mov
loope
cld
and
ret
test
rol
pop
popf
push
rolb
jo
xchg
push
aad
jl
leave
scas
sub
jae
stos
int3
push
and
loop
sarl
push
dec
jbe
pop
mov
mov
cmp
jp
mov
les
pop
or
xchg
mov
aaa
fistps
arpl
or
je
es
shrb
ret
pop
aas
sub
stc
shlb
cmp
jo
inc
cmp
femms
mov
js
pusha
or
xchg
scas
mov
and
pop
ret
xor
je
inc
mov
bnd
add
rorl
sbb
scas
push
out
lods
in
mov
mov
rcr
xchg
add
and
mov
lcall
out
imul
js
cmp
mov
pushf
push
adcb
iret
nop
in
enter
les
repnz
add
insb
lret
xchg
les
mov
inc
xor
lret
adc
lock
inc
lretw
pop
lods
jmp
add
cwtl
mov
test
mov
sub
xchg
lret
imul
gs
cmpl
hlt
or
or
dec
ret
pop
and
sarl
ja
into
iret
fbld
test
int3
and
sbb
fbld
arpl
scas
in
mov
fiadds
sub
int3
loop
jne
int
xchg
fistpl
mov
lahf
stos
jge
jo
das
lret
rol
cli
dec
jge
adc
sub
mov
add
cld
lret
sahf
jle
std
push
and
push
scas
pushf
mov
clc
lds
scas
cli
gs
pushf
pop
subl
fdivrl
cmpsb
mov
subl
sub
pop
adc
lods
loope
mov
repnz
push
movsb
in
mov
cmp
mov
out
daa
mov
int3
lock
iret
sub
popf
mov
ja
call
xor
jmp
push
imul
mov
jnp
and
xchg
push
aam
jmp
adcb
stos
jns
aad
cwtl
xor
insl
ret
push
subl
cmp
push
xchg
fs
shll
jae
mov
fdivrp
shlb
push
ror
push
dec
in
lret
outsb
xchg
cmp
xor
mov
in
and
fdivl
imul
das
dec
test
in
mov
jb
fs
fiaddl
daa
sub
mov
mov
add
xlat
roll
stos
hlt
bnd
loopne
push
push
shl
xchg
dec
lods
add
inc
loop
push
inc
je
mov
lds
jl
test
mov
sbb
mov
cmp
nop
mov
neg
arpl
mov
pop
aad
cmpsb
pushw
sub
sahf
aad
mov
or
mov
pop
jmp
inc
jp
cli
pushl
sub
imul
in
in
jl
fs
mov
jbe
gs
sub
clc
xchg
inc
lea
fwait
dec
fisttps
ljmp
push
xchg
into
mov
or
dec
outsl
cmp
push
xor
sbb
xchg
mov
adc
dec
out
lahf
je
cmp
pop
pop
into
xchg
out
gs
add
pusha
aad
sbb
and
and
pop
mov
xchg
fstpt
pop
sub
leave
pop
pop
adc
in
daa
and
es
lret
cmpsl
stos
popf
outsb
jbe
jne
adc
imul
fisttpll
ror
cmpsl
mov
lret
jl
pop
mov
mov
shrl
sub
mov
mov
mov
sub
shlb
call
mov
mov
movl
pop
es
adc
jns
pop
aaa
and
outsl
fsubrs
negb
in
test
mov
shrb
lods
xlat
jl
mov
dec
cmp
xor
das
jge
in
out
addr16
jp
ret
inc
inc
and
adc
pop
push
jbe
fsubrl
in
fs
aaa
addr16
mov
pop
fs
jmp
int
xchg
push
testb
pop
sub
jne
fldt
add
mov
lret
xchg
jmp
aam
inc
fs
lcall
and
stc
inc
out
fistpll
ds
jo
push
adc
mov
clc
and
addr16
test
dec
cltd
cmpb
and
cmc
test
pop
mov
sahf
jnp
mov
ds
push
int3
sahf
mov
mov
ljmp
pop
mov
rsm
push
add
xchg
xor
pop
xchg
scas
and
mov
adc
push
and
leave
cmp
cmpsl
fisubl
inc
stc
cltd
push
cmp
cmp
push
fisttps
lds
in
je
mov
fmull
fwait
push
cmpsb
shrl
inc
xchg
mov
add
and
pop
add
aas
fwait
dec
sub
inc
fcoms
imul
inc
popf
sub
fdivrl
sub
je
in
into
inc
mov
clc
add
pusha
xchg
cmc
repz
mov
inc
pop
sbb
pop
mov
pop
xchg
ljmp
loop
fwait
pushf
pop
push
inc
aam
xchg
testb
das
unpckhps
out
push
fdivs
push
arpl
aas
push
add
aaa
loope
divl
jne
out
adc
xchg
dec
test
test
repnz
sbb
ret
jae
xor
aas
sarb
adc
out
push
inc
pop
hlt
popa
sub
mov
mov
and
xor
mov
mov
in
cmp
mov
xor
pusha
cmp
dec
frstor
dec
ljmp
lret
inc
andb
arpl
js
or
push
nop
dec
out
inc
inc
test
sub
push
popa
mov
inc
add
cld
es
movsl
jo
mov
or
dec
inc
jle
push
mov
movsl
enter
lds
add
jo
lret
and
aam
popa
fistl
popa
divl
jmp
lods
pop
arpl
mov
insl
hlt
rorb
pop
cmp
mov
repz
pop
pop
movsb
cmp
rclb
or
xor
cld
cld
adcb
dec
jns
jge
das
and
rorl
push
mov
pop
sahf
int
jecxz
lock
cmpsb
out
adc
loope
xchg
add
or
xor
fidivl
icebp
scas
xsaves
loop
cmc
push
mov
subb
mov
or
stc
or
scas
ficompl
adc
shlb
cltd
inc
inc
jne
push
std
out
dec
and
repnz
add
jmp
sub
jecxz
scas
sbb
lcall
les
push
xchg
pop
sub
lret
cmp
add
sub
jle
shlb
sub
hlt
sbb
xor
cmp
push
test
sub
ret
in
daa
testb
loope
dec
test
nop
loopne
jb
sbb
stc
loopne
test
sub
mov
xchg
adc
jle
lret
xchg
outsl
xor
testb
dec
fcomps
push
ds
cmp
lret
sbbb
xlat
xor
mulb
xorl
push
mov
mov
jmp
sub
test
sub
imul
mov
fsubrs
adc
or
or
lcall
fwait
out
fcomi
gs
pop
sub
cmc
outsb
inc
pop
jbe
scas
in
cwtl
rorb
xchg
xchg
xor
xchg
mov
hlt
lret
push
xor
push
xchg
push
lods
mov
or
sbb
jb
js
pop
add
addr16
or
rcrl
movsl
daa
adcb
addr16
dec
movsb
jg
push
sub
push
nop
jae
mov
fs
pop
mov
iret
and
push
data16
cmp
pop
out
mov
pop
inc
xchg
mov
adc
jno
addr16
sbb
xchg
cmp
and
outsb
shlb
les
xchg
idivl
popf
mov
stos
jb
sbb
push
ljmp
orb
inc
jo
jo
nop
gs
outsb
arpl
cs
data16
rol
stc
inc
iret
xchg
jl
fimull
mov
loope
sub
sub
xor
inc
jle
mov
jl
mov
inc
adc
jns
mov
push
arpl
jecxz
mov
out
test
out
mov
fstpl
mov
imul
mov
in
inc
inc
scas
sbbl
push
xor
jp
rclb
cmp
jl
cmpsb
and
daa
add
stc
mov
jne
cmp
pop
and
ret
in
add
sbb
lds
and
xchg
and
shrb
push
nop
or
in
call
mov
add
loopne
dec
mov
add
cmpsb
mov
adcb
shlb
mov
mov
es
cs
push
and
lea
andb
mov
fldenv
test
pop
push
mov
xchg
frstor
stos
in
push
test
data16
andl
lock
fs
rorl
mov
jge
dec
loop
adc
xchg
inc
mov
xlat
in
lock
out
test
dec
shrb
add
repnz
and
call
mov
lahf
lcall
call
mov
jns
test
imulb
adc
jge
inc
aam
pop
xor
mov
fnstcw
in
dec
out
mov
lock
stos
cli
pop
ret
inc
fnstsw
insl
out
stos
mov
and
fimuls
popf
or
xor
push
sub
ret
int3
cmp
add
bound
cmp
ds
int3
in
xchg
or
push
data16
cld
mov
mov
mov
ja
sbb
dec
sub
test
cmp
fmull
push
push
pop
ret
mov
lcall
pop
int3
fdiv
mov
arpl
or
mov
mov
cmp
jne
ja
add
fcomi
push
ret
test
stos
out
loop
xor
jl
test
adc
popf
cmp
iret
fbstp
popa
xor
jge
and
scas
xchg
fwait
test
sti
iret
rorl
js
scas
test
jbe
pop
xor
xchg
mov
icebp
pop
jp
jp
cwtl
movsb
inc
scas
xchg
push
iret
insb
out
xchg
jge
jnp
mov
jecxz
in
mov
adc
js
and
std
inc
mov
xchg
cmc
dec
sub
jp
in
iret
cmpsb
and
dec
das
mov
daa
mov
sbb
mov
mov
stos
jae
and
pop
and
jle
mov
mov
xor
sahf
dec
add
add
mov
cmp
push
pop
pop
inc
hlt
lea
adc
bound
jae
mov
cltd
pop
xor
bound
add
sub
test
mov
mov
aaa
mov
rolb
mov
cltd
into
sub
cmp
pop
xor
scas
and
sarl
xchg
jns
mov
fidivs
mov
dec
imul
dec
test
nop
repnz
sub
bnd
lea
or
fwait
shrb
cmp
stc
add
fwait
js
xor
cmp
orb
mov
dec
aas
mul
and
and
jns
mov
jg
repz
pop
mov
ret
mov
cld
xlat
sbb
stc
cmpb
popf
push
aaa
push
shr
cmp
push
dec
xor
ret
cmp
mov
and
repz
mov
stc
xor
mov
clc
lds
or
adc
inc
mov
or
cmp
out
push
pusha
scas
insl
imul
add
jno
dec
into
loope
scas
popf
push
lock
in
pusha
pop
add
cmp
fcoml
or
or
out
je
mov
aaa
lret
sub
pusha
mov
gs
or
imul
enter
pop
andl
mov
data16
fsubrl
xlat
push
xchg
pop
in
lods
in
out
enter
mov
mov
rcll
shl
cmc
jae
jne
nopl
adc
pop
dec
stc
cmp
test
in
lock
mov
mov
addr16
in
movsb
jnp
cmc
loope
xchg
jmp
dec
mov
iret
lea
je
pop
mov
dec
pop
adc
cmp
adc
push
jl
mov
loopne
pop
idivb
stc
in
adc
stos
xor
add
mov
sub
shl
ljmp
rcrb
or
jnp
push
adc
jmp
mov
iret
or
call
ret
fbld
es
sbb
jno
fs
mov
xchg
cmpsl
ficoms
sbb
and
mov
neg
push
mov
push
vmovlpd
adc
fdivl
sbb
and
jnp
jb
mov
enter
adc
ja
jmp
outsl
dec
iret
jecxz
je
out
test
ret
jnp
push
dec
jg
inc
pop
push
jo
mov
or
movsb
divl
mov
aas
xlat
jmp
sub
daa
sbb
in
mov
inc
xor
scas
imul
and
jp
inc
cmp
je
sub
rcll
mov
mov
xchg
ret
in
sbb
jl
xor
loope
dec
sub
outsl
pop
and
leave
sub
es
add
daa
sbb
jbe
push
or
inc
or
mov
push
mov
sarb
flds
insl
sti
test
test
and
in
push
add
xchg
dec
xchg
in
je
jae
mov
pop
pop
push
imull
sbb
inc
testb
inc
xchg
test
repz
or
dec
mov
sbb
sub
sub
pop
dec
xlat
aaa
loopne
out
lret
cmp
addr16
sub
mov
clc
add
dec
cmpsl
roll
sbb
push
inc
xchg
pop
ljmp
mov
add
mov
aad
add
jg
out
jp
sub
mov
mov
in
pop
mov
jb
mov
sbb
xor
xor
pop
push
cwtl
dec
push
cmc
aas
jle
dec
mov
mov
sbb
jecxz
out
sub
insl
jae
jl
jnp
xchg
xor
mov
pushf
movsl
in
xlat
in
call
mov
imul
fcomps
cmpsb
xchg
in
mov
push
test
in
shl
test
shlb
xor
pop
imul
add
mov
pop
jmp
movsl
mov
fcompp
fs
adc
lods
in
inc
push
mov
or
shll
xchg
scas
call
fdivrs
out
mov
xchg
xor
shlb
inc
adc
mov
mov
scas
and
imul
fsincos
iret
rorb
xorl
sub
or
xlat
fistps
shll
aas
pop
sbbl
add
fnstsw
push
push
outsl
dec
dec
mov
repz
mov
dec
xchg
and
enter
cmp
les
pushf
test
jne
in
xchg
dec
mov
test
cld
ljmp
and
and
movsl
pop
dec
es
addl
cmp
sub
jp
and
or
xor
push
hlt
xchg
movl
movsl
outsl
pop
movb
test
push
mov
sub
iret
ret
jmp
cwtl
inc
sbb
push
cmp
adc
pop
test
outsl
movsl
cs
adc
mov
mov
and
push
xor
pop
push
sbb
mov
lea
sub
xchg
dec
push
mov
test
push
mov
dec
pop
mov
cmp
push
add
adc
jns
pop
jge
sbb
pop
insl
pop
dec
clc
int
in
ds
cli
dec
mov
mov
jg
push
dec
pop
pop
js
mov
inc
add
test
inc
pop
iret
sbb
aas
out
icebp
push
cmp
push
in
sbb
cmp
cmp
mov
adc
jns
jecxz
mov
inc
mov
add
fcmovnu
in
add
xchg
ret
dec
dec
jne
lock
stc
or
nop
not
push
shlb
sub
jo
mov
pusha
dec
jno
lcall
daa
sub
cmp
aas
mov
lret
int3
stos
or
cmpsl
dec
fsubrs
testb
xchg
mov
cs
daa
imul
xor
popf
jo
or
pop
mov
lahf
sbb
lods
in
clc
add
mov
data16
out
push
repz
cmp
fnstsw
mov
decl
mov
dec
lds
fisttpll
aad
xchg
or
mov
or
xchg
rcll
repnz
mov
ljmp
mov
jne
and
dec
aad
xchg
inc
popf
lock
lahf
or
push
cmp
xor
dec
test
push
inc
dec
push
dec
dec
orl
jg
jg
xchg
mov
jo
lret
and
xlat
mov
mov
fnstenv
adc
insl
jns
push
and
xor
cmp
arpl
mov
add
mov
add
fwait
mov
adc
imul
xchg
jge
js
jbe
in
ds
pop
popa
dec
stos
or
jp
xchg
mov
add
imul
lret
dec
adc
pusha
xor
dec
and
cmpsl
pusha
data16
call
xor
daa
jmp
daa
nop
add
pop
addr16
dec
adc
mov
jge
mov
fsubrs
lea
cmp
pushf
jo
or
iret
hlt
test
in
sub
shl
mov
adc
scas
mov
sbb
mov
ljmp
aas
jecxz
movhps
or
mov
xchg
loopne
adc
loop
xor
mov
cmp
inc
out
and
iret
clc
lods
xlat
aam
in
imul
add
mov
inc
lock
pop
movsb
jg
in
xor
mov
xchg
stc
mov
adc
cwtl
loopne
cmpsb
je
push
adc
jmp
cmp
decl
inc
sbbb
jb
ficompl
add
mov
sbb
arpl
or
xor
dec
xchg
adc
nop
fs
push
out
jecxz
cmp
addb
jge
xchg
push
xchg
insl
dec
and
aaa
std
ljmp
lods
dec
popf
stos
push
xchg
and
sub
push
lret
andb
mov
mull
decl
jno
outsb
aad
inc
in
popf
jl
mov
test
bound
aam
test
ss
push
add
inc
into
add
shrl
inc
mov
add
mov
pop
push
mov
xchg
or
dec
cli
repz
xor
std
je
cmpsb
sub
sarb
movsb
xor
out
xor
cmpb
shl
jmp
xchg
adc
fstpl
pop
lods
repnz
and
mov
stos
lea
mov
pop
xor
xor
fsubl
jle
leave
push
stc
ja
and
std
pop
jmp
jl
fildl
pop
or
adc
jb
out
aad
adc
and
jns
jmp
xchg
mov
mov
jb,pt
addb
std
pushf
push
push
rorb
jge
jl
test
int3
icebp
rclb
gs
push
insb
mov
dec
enter
xor
sub
xor
dec
sub
ljmp
das
adc
stos
test
xchg
jmp
inc
in
sbb
jbe
aas
int3
mov
adc
orl
lea
ret
stos
xchg
add
and
les
sbb
sub
aas
push
mov
sahf
and
mov
xchg
or
adc
loopne
xchg
cmc
shll
adc
mov
lahf
pop
push
es
xchg
imul
mov
mov
jecxz
dec
pop
jne
cmp
inc
aas
or
dec
cltd
lock
or
fidivs
cmp
jns
or
test
cmp
cmpsl
mov
xchg
stos
out
js
cmp
test
mulb
xchg
testl
push
jl
push
fs
pop
imul
and
clc
xor
repnz
ss
or
add
inc
or
sahf
dec
and
jmp
mov
jecxz
jbe
xchg
push
add
mov
test
cmp
lock
mov
movl
dec
lock
or
roll
sub
ja
push
jno
mov
and
nop
adc
call
mov
testb
fidivs
insb
xor
aad
mov
and
lcall
mov
movsb
mov
fwait
or
push
js
sub
fsubrp
or
mov
inc
mov
jle
aam
cld
fmuls
mov
inc
scas
and
mov
sbbb
or
adc
pusha
sub
pop
push
cmp
xchg
add
dec
xchg
and
jmp
test
nop
mov
outsb
pusha
or
pop
addr16
xchg
push
lock
pop
outsb
sahf
jp
fwait
inc
cmp
mov
shlb
cltd
cwtl
fs
xchg
pop
jns
stc
cmp
call
data16
or
pop
inc
mov
sbb
jmp
push
clc
cmpsb
push
ja
xchg
ljmp
cld
dec
dec
jmp
add
xchg
xor
push
push
push
loope
into
pop
xchg
aad
sub
lods
adc
push
dec
mov
addr16
testl
inc
push
xchg
or
fwait
data16
in
ret
ret
jp
loop
mov
shlb
mov
arpl
cmp
popl
insl
xor
dec
add
pop
rorl
testb
mov
sahf
add
loopne
cmp
jb
mov
or
lock
dec
cmp
fildll
xor
hlt
jae
popa
mov
sbb
add
and
mov
cmp
mov
push
fsubs
cmp
add
lods
dec
jo
push
lods
loope
mov
lods
hlt
insb
xor
test
mov
mov
or
mov
adcl
cwtl
orl
pop
rorb
orl
ja
xchg
cmp
pop
es
jmp
popa
in
and
lret
fwait
cmc
daa
push
fbld
pop
fists
mov
sub
ljmp
mov
sbb
aas
pop
bswap
adc
lcall
cmp
arpl
or
sub
sahf
lret
sub
push
fsts
xlat
out
jo
sbb
pop
mov
je
jg
or
mov
pop
push
and
fisttpl
adc
dec
xchg
aaa
mov
jecxz
push
lods
inc
xchg
mov
mov
mov
inc
cmp
mov
pop
lret
pop
mov
stos
mov
lcall
mov
je
js
jge
or
js
dec
jns
ficomps
sbb
lds
lret
out
imul
jne
shl
lahf
icebp
pop
inc
mov
mov
test
xchg
sbb
in
movsl
pop
pop
and
repnz
jo
arpl
adc
cmpsb
push
call
push
sarb
lret
push
dec
insl
dec
dec
xor
mov
or
dec
add
in
mov
out
repnz
mov
in
repnz
insl
mov
pop
jbe
outsl
mov
loope
xor
fpatan
dec
pop
sbb
ficoms
inc
int3
or
aaa
negb
xlat
rolb
cmp
aam
dec
jmp
stc
cltd
iret
pusha
adc
in
sub
push
jmp
shrb
jmp
cmp
arpl
push
out
jnp
pop
shlb
pop
push
pop
add
fwait
stc
das
cmp
push
dec
out
mul
sub
dec
push
outsb
rolb
xchg
mov
ljmp
cwtl
adc
mov
daa
jecxz
repz
stc
cmp
shlb
pop
ja,pt
je
mov
mov
pop
inc
unpcklps
dec
rcrb
sbb
cmp
arpl
dec
xchg
push
inc
add
cmc
dec
nop
xchg
sbb
push
pusha
push
push
add
sub
mov
lds
sbb
cmpl
in
in
pusha
es
testb
or
push
fwait
test
lods
inc
or
sub
adc
arpl
scas
jne
jl
or
pop
daa
in
insb
mov
sahf
add
loope
pop
aam
push
jb
dec
add
mov
xlat
popf
jg
pop
xchg
xor
fldt
cmp
and
jne
cmp
mov
lock
mov
fsubp
jg
mov
mov
sahf
push
cltd
nop
bound
pop
mov
js
add
pop
es
inc
imul
es
incb
push
inc
jle
fs
jle
xchg
ja
adc
clc
popa
xor
dec
mov
xchg
cwtl
adc
pop
mov
mov
cmc
pop
aad
inc
xorl
push
adc
and
add
jbe
mov
jmp
cwtl
jno
fdivl
pusha
jo
add
fisttps
cmpsl
in
mov
icebp
ljmp
pop
out
lcall
adc
neg
movsb
lret
rcrl
cwtl
dec
mov
scas
sub
int3
push
hlt
cld
in
or
mov
fistl
fildl
mov
mov
dec
xchg
mov
xchg
and
jle
xor
and
cmc
cld
inc
out
sub
push
mov
dec
in
pop
ljmp
push
push
cmpsl
fwait
dec
es
dec
jo
cmp
pop
negb
push
rcl
loope
and
cmp
cmp
fcoms
insb
stos
sbb
xor
lret
loopne
mov
dec
rorb
pop
je
sub
jmp
ficompl
cwtl
insl
int3
mov
cmc
mov
sub
xor
or
sub
push
jb
push
shl
loop
jns
push
ljmp
xchg
push
mov
insl
dec
xchg
scas
inc
dec
xor
popf
mov
nop
push
repz
mov
test
jbe
filds
iret
sbb
adc
mov
movsl
xor
in
mov
bswap
cli
rorb
push
in
pop
sub
inc
cmp
sub
mov
sub
pop
mov
leave
mov
aam
jge
adc
fwait
adc
fisttpll
jno
push
inc
dec
adc
sbb
ljmp
orl
out
cmc
lods
jle
xor
popa
mov
adc
mov
sub
fs
push
jb
add
daa
test
mov
scas
mov
jns
inc
sbb
add
jmp
ja
or
mov
loopne
or
cmpsb
repz
mov
dec
addr16
jg
push
mov
cli
xchg
xchg
enter
mov
sarb
repnz
insl
pop
adc
loop
inc
scas
inc
int
into
xlat
jbe
aam
sub
outsl
add
enter
scas
out
je
adc
cmc
dec
iret
add
xchg
outsl
repnz
andb
cwtl
sbb
call
sbb
out
jmp
and
cli
das
jp
xchg
push
push
ss
dec
mov
iret
mov
divb
sub
enter
mov
into
cmp
jl
cwtl
cmpsl
daa
or
xchg
movsl
daa
in
ja
push
dec
leave
pop
add
iret
jecxz
repnz
test
mulb
gs
out
imulb
dec
cwtl
jg
stos
jo
xor
hlt
dec
or
push
ds
out
pusha
fwait
iret
mov
scas
xor
sbb
ja
cs
jbe
inc
out
popa
jnp
sbb
test
mov
jne
jp
jnp
stos
outsl
inc
pop
mov
cld
mov
incb
sahf
cmp
mov
aad
add
ja
imul
inc
dec
repnz
mov
stc
push
xlat
ret
dec
fimull
incl
pop
pop
and
mov
xchg
sbb
testb
popf
or
fdivr
repnz
push
jnp
mov
insb
cltd
push
stc
int3
hlt
mov
xchg
lcall
loop
push
push
bnd
push
mov
outsl
dec
bound
sbb
pop
fs
incb
jmp
jmp
rcll
xor
jnp
dec
cmpsb
dec
in
sbb
popa
lcall
sbb
popa
std
imul
fcomps
mov
cmp
fs
repnz
adc
mov
cmp
mov
mov
mov
mov
mov
push
scas
shll
xor
insl
iret
dec
mov
mov
pop
sbb
pop
sbb
popf
pop
pusha
mov
mov
fwait
sbb
sti
enter
call
pop
sarl
jne
inc
jmp
sbb
negl
push
sti
call
cmp
xchg
pop
sub
or
imul
frstor
nop
pop
into
test
or
and
and
loope
xchg
lock
xchg
pop
xlat
add
xchg
dec
cmp
int
aam
in
test
sub
adc
adc
mov
sbb
pushf
xchg
mov
add
inc
std
cmc
jne
mov
dec
push
bound
push
ret
test
xor
lahf
daa
aam
imul
xchg
add
jle
mov
add
or
cs
sahf
add
sub
stos
sbb
js
push
push
shll
add
xchg
push
movsb
popf
aaa
scas
dec
mov
loopne
scas
push
les
repz
inc
sub
fsubp
jge
aam
shrb
and
pop
dec
push
cmpsb
movsl
aaa
mov
pop
sbb
in
pop
and
lods
inc
dec
inc
mov
cmp
push
push
push
subb
and
repz
cmp
or
adc
test
push
dec
dec
xchg
fs
ss
add
sub
cld
pop
inc
sbb
imul
adc
cmc
mov
xchg
xor
das
insb
stos
aam
rcrl
ja
mov
pop
dec
jle
fdivs
jne
mov
cmp
into
fiadds
subb
push
rclb
mov
insl
jo
add
lcall
inc
pavgb
pop
inc
or
pop
out
or
sub
xor
dec
jp
repz
and
cs
dec
mov
imul
in
add
stos
jecxz
lds
jp
addl
jle
jbe
xchg
orb
fmull
nop
xor
and
movsl
ror
pop
call
push
sbb
mov
cmp
mov
xor
sub
cmp
jbe
aas
outsb
push
pop
mov
fwait
push
stos
int3
aas
mov
adc
cmp
pop
sbb
mov
cs
xchg
inc
inc
xor
adc
mov
and
sub
pushf
push
and
mov
sbb
sub
pop
fsubr
fdivrl
mov
out
es
clc
jo
das
cmp
and
add
lret
lcall
test
or
push
leave
pop
xchg
inc
jecxz
or
enter
je
xchg
inc
into
das
mov
inc
fadds
and
test
pop
or
and
test
fnsave
in
xor
push
dec
into
nop
bound
and
xchg
xor
ja
mov
ret
cmp
mov
push
or
mov
cmpsb
xorb
and
add
push
mov
jbe
outsb
fdivr
sti
dec
jmp
scas
call
adc
sahf
stc
xor
adc
add
jae
jecxz
lret
lcall
call
sub
inc
cmp
test
xor
sbb
insb
xchg
addr16
popf
sbb
mov
bound
fsubrp
cltd
int
add
cmp
jne
jb
fs
or
pop
adc
push
or
imul
lods
xor
xchg
add
cmpl
adc
xchg
push
lds
rcrl
cmpsb
mov
and
sub
lea
cmpsl
adc
clc
hlt
mov
mov
xchg
iret
inc
dec
fstpl
mov
xor
loopne
push
add
orl
sti
jns
jne
pop
inc
and
repnz
pushf
andl
inc
jp
adc
mov
mov
std
sbb
ret
lret
dec
popf
mov
pop
lods
ja,pt
push
xchg
enter
sub
roll
xor
add
insb
sub
jmp
jmp
cmp
jo
xchg
push
aas
cli
cs
pushf
push
xchg
test
dec
dec
jno
rorb
adc
mov
cmp
pushf
fidivl
repnz
dec
dec
lods
mov
cmp
test
sbb
in
hlt
inc
rclb
mov
xchg
imul
push
ljmp
mov
aas
notb
jb
fabs
enter
push
ljmpw
adc
pop
push
mov
std
pop
inc
mov
jg
out
nop
add
push
pushl
loop
push
jmp
xchg
popf
mov
cli
and
cmp
sahf
loope
icebp
pop
jbe
loopne
mov
or
mov
mov
mov
mov
sub
mov
adc
mov
in
data16
xor
inc
movsb
push
test
push
hlt
xchg
mov
jle
in
pop
scas
ss
adc
mov
daa
sbb
addr16
adc
mov
mov
push
fisttpl
lcall
xor
cmp
test
mull
and
addr16
cmc
ficoml
gs
out
xor
daa
aam
mov
fildll
fisttpll
push
cld
daa
ret
add
xchg
fmuls
loop
mov
outsl
jg
scas
sbb
ss
test
jle
dec
stos
sub
adcl
mov
lcall
stos
cmpb
addb
fldl
mov
mov
loope
mov
add
adc
push
fidivl
ja
jle
pop
fnsave
xor
sub
and
pusha
out
mov
mov
fimull
bound
scas
ss
fcomps
sarb
adc
xchg
mov
test
ja
stos
ds
loope
stc
cmc
cli
shrd
imull
rcrb
aaa
aam
les
out
outsl
sbb
adc
push
sbb
into
in
pushf
pop
sbb
int3
loopne
push
stos
ljmp
mov
lock
faddl
dec
add
jne
push
push
xor
popf
imul
inc
mov
mov
xchg
xchg
mov
jne
mov
add
lret
mov
or
fisttpl
xor
add
nop
ret
insl
mov
cwtl
jno
rdpmc
cs
sbb
adc
push
popf
push
cmp
cmp
enter
xor
inc
mov
mov
repz
push
pusha
inc
jno
aas
cmpsl
out
xchg
test
jno
sbbl
les
ret
fisubl
mov
stc
std
repz
fmull
adc
mov
jns
mov
mov
sub
in
jl
add
and
ficoms
cmp
mov
sti
mov
rcr
sbb
arpl
inc
aam
insl
mov
loop
mov
mov
dec
push
lret
push
cmpsl
push
and
push
lahf
sti
leave
mov
fadds
cltd
int
orl
pop
arpl
mov
ficoms
push
cld
or
outsb
xchg
pop
xchg
pop
mov
or
mov
jle
rcrb
decl
adc
cmpsl
rcl
mov
inc
mov
jp
jno
fbstp
jns
sub
jo
lcall
inc
pop
pop
cmp
mov
outsb
adc
mov
popa
jl
push
dec
mov
inc
notb
leave
cmp
xchg
sahf
push
fsubl
jae
movsb
cmp
cmpsb
scas
in
mov
daa
mov
cmp
adc
adc
int
mov
jo
aam
inc
xor
test
push
sbb
sarl
rclb
rcll
outsb
mov
les
ss
xor
adc
sbb
les
movsb
dec
shll
mov
add
ljmp
pavgw
mov
or
xchg
jmp
iret
push
inc
loop
lea
mov
mov
push
in
jns
popa
subl
std
jb
clc
jmp
pop
out
aas
sub
dec
inc
jnp
dec
jns
mov
out
cmp
into
xchg
hlt
fcoml
dec
divb
loopne
mov
pusha
test
fmuls
xor
daa
xor
not
push
push
movsl
adc
pop
pop
call
inc
mov
jbe
ret
sbb
mov
icebp
out
xor
xor
es
addl
push
and
xor
or
mov
fisubrl
xlat
pop
repnz
xor
sub
mov
xor
or
jmp
adc
jne
or
sbbl
out
lock
cld
dec
daa
mov
add
in
leave
or
cmpsl
xor
es
push
clc
sbb
jle
in
aam
ss
dec
arpl
scas
mov
int3
inc
and
rclb
pop
cmp
lock
ljmp
sbb
addl
jo
adc
in
lea
xchg
xchg
mov
aas
shrl
inc
xor
dec
aas
aaa
shr
and
xchg
inc
aam
andl
adc
fldenv
inc
test
pop
jge
xchg
inc
xchg
dec
das
sbb
sub
pop
xchg
rcrl
out
dec
mov
ja
lret
mov
xchg
lds
cmp
push
push
lock
and
in
ja
jl
push
sbb
lds
pusha
sub
ss
outsl
fnsave
sti
out
xorb
xchg
push
popa
fdivp
ret
aaa
in
std
je
mov
push
mov
cmp
jge
imul
cmp
mov
aam
cmpsb
jno
push
jecxz
adc
arpl
loop
xchg
pop
sub
loope
jnp
cld
pop
mov
popf
out
mov
in
insl
cmp
cmp
lods
fdivl
ljmp
aad
xchg
adc
jmp
cli
push
pop
dec
cmpsl
in
into
dec
jg
stos
imul
aaa
icebp
daa
push
aam
cmp
ljmp
cmpl
mov
cwtl
push
and
mov
lds
push
pop
je
and
into
or
mov
sub
mov
out
test
jns
or
in
inc
das
dec
imul
mov
cmp
cmc
in
aad
fwait
adc
in
mov
add
push
fs
cmp
mov
in
aam
and
pop
rorb
stos
and
jnp
int
cmpsb
or
bndldx
mov
adc
incl
les
addr16
mov
push
adc
add
aad
sbb
xor
and
inc
rcll
and
stos
gs
add
mov
and
mov
push
outsl
imul
xor
push
or
out
fistpll
into
negl
aad
jge
jge
rolb
sub
pusha
cmp
fadd
jo
movsb
pusha
fsubl
aaa
je
xchg
in
scas
ljmp
int
pop
clc
pop
sahf
je
xor
int3
mov
push
lds
pop
xchg
sarl
dec
jo
inc
or
mov
xchg
push
mov
and
lods
sub
sbb
cmpsb
mov
inc
js
jmp
outsl
pop
add
or
push
add
test
mov
or
mov
pop
pop
push
test
xor
stc
push
sti
fcmovne
mov
sbb
ja
into
add
jmp
or
clc
aad
clc
cmpsl
xchg
push
mov
mov
cmp
sti
mov
outsl
pop
xchg
sub
sti
das
mov
push
mov
lods
hlt
xor
xor
arpl
jge
idivl
and
xchg
push
imul
int3
imul
xchg
pop
pop
fs
cwtl
iret
add
inc
js
or
mov
lahf
fnsave
pop
cmp
pop
mov
adc
push
adc
pushf
sub
jg
mov
fsubrl
cltd
dec
or
mov
add
xor
scas
ljmp
cltd
push
pop
fildl
push
pop
lcall
jg
shlb
and
sub
fiaddl
pop
adc
aaa
mov
mov
adc
inc
dec
adc
lock
andl
mov
dec
push
inc
test
iret
cmp
and
lods
movsb
mov
pop
push
movsb
fnstcw
add
ja
into
pusha
inc
pop
pop
jp
addl
cmp
sti
push
addr16
push
cli
pop
test
loope
cmp
sbb
rolb
dec
inc
xor
jl
xchg
lret
and
loop
rorl
andl
and
cli
pop
fdiv
test
lock
insl
aas
sub
dec
jg
bound
jb
mov
jg
je
clc
cmp
mov
es
inc
and
int3
je
jecxz
inc
daa
aaa
pop
mov
cmpl
cmpsl
in
std
rolb
mov
sub
pop
jle
mov
sar
loop
inc
call
mov
xchg
dec
enter
daa
repz
in
fdiv
jecxz
adc
jmp
and
test
xchg
inc
jge
stc
cmpsl
sbb
clc
fcompl
dec
in
pinsrw
cmp
stos
in
and
ret
lea
int3
mov
push
inc
clc
push
or
fisttps
mov
xlat
xchg
mov
loopne
mov
and
cli
xor
in
cli
mov
push
pusha
adc
imul
out
lcall
pop
pop
insl
mov
pop
or
mov
ret
sbb
xor
les
xor
into
adc
ljmp
add
addr16
ljmp
or
into
pop
data16
xlat
cmp
jecxz
and
aam
ret
sarb
insl
sar
mov
lret
ds
dec
movsl
cmpsb
repz
or
cmpsl
mov
xchg
pop
sub
and
mov
add
jmp
iret
js
xchg
add
xor
repnz
data16
jmp
ja
das
insl
add
and
ljmp
mov
stos
leave
aaa
iret
xor
sub
and
jnp
push
iret
rcrl
add
in
lahf
push
pop
icebp
scas
jg
pop
mov
dec
mov
or
inc
xor
sbb
and
aam
fldenv
dec
mov
pand
push
ss
xchg
mov
sahf
incl
fwait
aas
outsb
push
and
push
jno
mov
add
pop
vpaddusb
cmpl
enter
popa
xchg
dec
test
push
push
push
sub
push
inc
xor
out
clc
ret
repnz
int
mov
cmp
jae
and
pop
mov
pop
push
stos
lods
lock
lds
repnz
xor
xlat
rcll
mov
inc
test
daa
mov
clc
sub
loopne
subl
bound
test
xchg
mov
mov
sbb
xchg
into
js
lret
push
xlat
mov
mov
add
addr16
rcl
dec
inc
push
mov
mulb
sub
sub
jmp
repnz
iret
or
jp
outsl
fdivs
xchg
pop
lods
filds
push
outsl
je
mov
int3
pop
lds
mov
lods
mov
rcr
or
fprem1
pop
shld
mov
clc
push
sub
pop
lret
dec
stos
out
or
pop
inc
cmpsl
roll
popf
cld
into
xchg
sbb
sti
xchg
xor
add
dec
fistl
mov
repz
stos
fimull
pop
std
mov
movsl
jecxz
aas
aas
sti
lods
repz
mov
das
mov
add
and
aaa
iret
insl
jbe
hlt
shlb
or
sbbl
xchg
jb
inc
adc
mov
jns
xor
test
fs
pusha
add
movsb
shl
push
out
mov
lods
push
push
cmc
in
add
lret
and
xor
out
pusha
adc
adc
clc
ret
push
pop
mov
cmp
arpl
mov
out
fsub
jmp
fnstsw
xchg
or
push
stc
fimull
pusha
jmp
stc
jg
push
and
imul
jl
xor
and
decl
fcoms
push
ret
sti
stos
mov
xchg
dec
inc
stos
sbb
sbb
mov
mov
mov
mov
add
inc
jns
std
push
push
enter
inc
push
popa
mov
sbb
fstpl
and
iret
out
mov
mov
out
movsb
xchg
inc
xchg
adc
ja
mov
jnp
bound
repnz
fadds
daa
sbb
fdivrp
gs
int
fs
adc
cmpl
aaa
xor
daa
xchg
lret
adcb
mov
cwtl
pop
sbb
mov
bound
push
lahf
and
dec
rclb
mov
popf
mov
push
or
mov
push
mov
pop
lds
lahf
push
pusha
xchg
enter
xchg
popf
icebp
mov
nop
js
xchg
mov
or
inc
push
mov
mov
push
and
divl
xor
xchg
movb
inc
jns
push
aam
lcall
stos
enter
add
popa
dec
out
aas
jle
pop
pop
lcall
mov
dec
push
stos
mov
push
cmp
dec
and
jge
xor
cmp
push
jle
cmpsl
cmp
das
cld
adc
cmpsb
cmp
cld
and
repz
je
pop
mov
cmc
inc
inc
test
jecxz
pop
pusha
mov
add
add
or
xor
mov
and
cltd
sub
insb
stos
xchg
jle
es
loop
pop
pop
scas
jle
dec
push
push
cmc
sbb
fnstsw
ret
int3
mov
mov
cmpsb
lods
pop
mov
scas
xchg
add
mov
cmp
add
or
push
lretw
jbe
les
test
lods
mov
mov
sarl
movsb
sub
pop
mov
std
aas
xchg
ret
sub
cmpsb
fsts
or
push
jmp
pop
out
inc
jns
cli
jg
jle
jns
aam
add
or
mov
mov
push
pop
divb
lock
push
jmp
mov
je
hlt
lret
or
icebp
pop
cwtl
cli
dec
lcall
and
jg
insl
push
sbb
mov
pop
daa
out
mov
shlb
nop
jmp
adc
inc
inc
cwtl
dec
cmc
lods
stos
dec
outsb
ss
push
inc
inc
or
pop
outsb
inc
loopne
mov
cmp
xchg
xchg
mov
jmp
add
xor
pop
cmp
xchg
cmp
xchg
dec
and
inc
bound
pusha
stc
mov
test
cmp
cmpsb
pop
xor
add
adcl
in
mov
and
imul
jmp
mov
out
scas
shll
push
in
repz
jecxz
xchg
cmc
xchg
sbb
ret
cmp
mov
and
pop
sub
xchg
sub
roll
inc
xor
pop
pop
insl
mov
pop
inc
dec
imul
popf
jae
cs
jg
jno
and
loopne
fs
scas
adc
call
sbb
xchg
pop
mov
jno
jae
mov
out
cli
mov
cmpsb
ja
into
scas
sti
ret
fiadds
xchg
xor
mov
xlat
xchg
pop
ret
push
dec
mov
addr16
pushf
aad
add
ds
enter
inc
jle
dec
jb
fidivrl
call
enter
sbb
in
insb
or
jge
shrb
imul
adc
push
xchg
and
stc
mov
gs
ljmp
imul
adc
out
test
scas
movsl
into
aaa
sbb
xor
push
imul
dec
cmp
dec
sub
jmp
test
xchg
dec
mov
add
int
leave
dec
int
cmp
jo
popa
xchg
cmpsb
insb
pop
loopne
aad
fmuls
mov
xor
dec
jecxz
push
pop
shlw
ljmp
dec
pop
sub
cs
sub
push
cs
gs
scas
mov
jae
mov
mov
cmp
ret
shlb
pop
clc
imul
outsl
mov
sbb
jmp
xor
mov
shufps
push
ljmp
rorl
inc
inc
out
cmp
sub
mov
loop
pop
out
or
inc
pop
lds
imul
rsm
push
test
push
mov
mov
inc
add
sti
and
sbb
mov
cli
sbb
hlt
nop
je
sub
xor
mov
xchg
sbb
sahf
fnstsw
and
pop
in
adc
or
mov
and
inc
insl
stc
loope
fwait
mov
insl
fidivrl
leave
dec
ljmp
cwtl
into
pop
inc
pop
pop
idivb
and
or
cmc
jns
pop
std
or
arpl
push
les
and
fnstsw
addr16
xor
jmp
loop
pop
mov
adc
lods
and
jmp
loope
push
inc
or
je
adc
stos
xor
les
inc
sbb
xor
mov
inc
aaa
addl
repnz
mov
ss
out
push
adc
and
inc
cmp
sbb
push
lret
cwtl
insb
mov
dec
push
jle
and
enter
pop
lahf
push
jne
xorl
dec
jmp
lods
add
cmpsl
shrl
out
or
insl
test
sahf
xlat
sbb
fdivrl
cwtl
push
or
pop
and
call
mov
sbb
in
lds
dec
mov
lods
cmp
mov
sub
aam
xchg
std
popa
and
jb
and
and
fwait
aam
jns
in
jl
mov
inc
movsl
iret
mov
cmp
insl
cli
dec
insl
and
xor
lahf
jp
cwtl
and
test
cltd
mov
sbb
in
bound
ret
sub
dec
mov
lods
xlat
lret
inc
pop
xor
lret
in
and
or
out
test
cs
scas
std
ljmp
lods
xor
push
ret
outsb
aas
mov
out
inc
mov
insl
movsl
aaa
jecxz
cmp
mov
fsubrl
int3
jl
xor
je
dec
cld
je
test
sti
xor
mov
cmp
frstpm(287
push
out
mov
jge
ret
mov
loop
hlt
or
sahf
or
pop
pop
sbb
mov
fsubr
dec
jb
jl
mov
pop
xor
lds
dec
pop
push
push
das
rorl
test
mov
add
jecxz
hlt
mov
push
sbb
cmp
sbb
push
dec
sbb
and
icebp
std
xor
mov
cmp
lods
bnd
inc
push
dec
xchg
and
aaa
pop
or
mov
sbb
repnz
pop
and
outsb
popf
jo
lods
test
pop
mov
inc
stos
mov
dec
inc
sbb
jmp
je
mov
clc
aad
rcrl
add
xchg
inc
cmpsb
lods
subb
cmpsl
mov
in
dec
or
jg
pop
mov
ljmp
adc
jne
cld
sub
inc
popa
jo
xorl
jp
loop
dec
dec
mov
fstl
dec
adc
scas
add
add
inc
fsts
or
push
xchg
mov
sbb
movsl
mov
add
loopne
lea
xlat
pop
add
or
dec
xchg
out
mov
inc
ljmp
lds
outsl
xchg
jge,pt
addl
inc
pop
dec
mov
push
negl
addb
dec
ljmpw
adc
jl
cltd
cmp
ret
into
daa
rcll
jecxz
jae
and
xor
cld
inc
pop
pushf
xor
xor
push
jnp
dec
mov
aas
pop
in
popf
in
outsb
addl
int3
ja
popf
lods
jne
jmp
ss
or
ret
add
push
push
pop
in
fwait
cs
enter
adc
out
mov
mov
xor
cwtl
mov
bound
test
sar
aad
sub
mov
mov
sbb
insl
mov
mov
popl
mov
or
push
lcall
pop
ss
mov
repz
dec
xor
test
sub
seta
jb
popf
cmp
push
sbb
mov
cmp
nop
repz
dec
ret
mov
dec
push
clc
sub
int3
call
loop
pop
xlat
movsb
js
dec
sbb
pushf
mov
out
ficompl
pop
mov
xor
adc
xchg
xlat
jns
call
xlat
xchg
dec
push
and
xorb
push
icebp
inc
ss
jge
jo
rclb
mov
push
ds
scas
xor
adc
cmp
lea
xchg
and
add
mov
roll
mov
xor
shll
in
test
std
add
jno
or
xchg
inc
xor
pushf
stos
sbb
repz
inc
test
fistps
loope
pop
inc
sbb
xchg
lcall
imul
rol
shrb
jge
jno
aas
cmp
imul
lea
pop
rcll
xchg
pop
or
aas
dec
aaa
jmp
and
inc
pop
cmc
xchg
sub
pushf
rcll
mov
jl
fimull
xor
or
cld
or
mov
pop
loopne
cwtl
stc
xor
orb
pop
xor
xlat
imul
outsl
sub
mov
jnp,pt
es
jecxz
jp
mov
fadds
sbb
das
or
push
pop
pop
adc
lea
cmp
lds
push
mov
jp
and
jo
sub
add
sbbl
mov
pop
gs
cmpl
pop
lahf
mov
mov
or
loopne
xlat
fcmovnb
add
aad
jmp
mov
notl
gs
stc
pop
std
xchg
movsb
into
in
shrl
fcoms
repz
pop
sar
inc
test
in
loopew
in
cld
pop
add
mov
push
dec
aaa
pop
push
adc
lods
ficompl
leave
cmpsl
call
loopne
sarl
push
and
stc
cmpsl
jb
cs
or
rcrl
or
int
sbb
subl
test
dec
jb
repz
aad
jmp
sbb
je
inc
jecxz
lods
mov
mov
mov
pop
fld
jp
pop
dec
pop
call
xlat
mov
bound
pop
je
ret
clc
test
insb
cmp
push
mov
outsb
les
popf
xchg
lcall
mov
fisttps
insb
xor
pop
xor
cmp
or
xor
ficompl
loope
arpl
sbb
mov
in
cmp
stc
mov
test
xor
lock
es
and
jns
jns
clc
lret
stos
mov
mov
mov
inc
add
mov
mov
mov
in
xchg
repz
loop
mov
out
aaa
cmp
push
push
fnsave
aad
ds
test
scas
xchg
lea
pop
pushf
sbb
das
in
and
sub
adc
mov
jmp
subl
lods
lret
ret
sub
jo
mov
andl
or
cwtl
mov
push
mov
arpl
add
dec
lea
xlat
dec
mov
int
xor
sbb
scas
repz
pop
lcall
sub
das
cmp
push
jge
je
loope
xchg
loopne
mov
cs
in
inc
pop
stos
sub
mov
fisttpl
out
in
mov
mov
mov
popl
aas
cmp
loop
push
xchg
loop
push
std
xor
cmp
push
adc
adc
js
sub
inc
je
aas
push
bound
inc
mov
mov
inc
sbb
xor
xor
pop
dec
adcb
daa
popa
gs
fcomip
and
sti
add
orl
cltd
ljmp
movl
jg
lret
test
gs
mov
xchg
jg
fsubrl
jae
mov
or
aas
cmp
fsubr
or
push
stc
lcall
adc
scas
js
push
das
push
inc
dec
xlat
add
mov
icebp
or
lret
mov
dec
lods
jl
mov
aaa
dec
out
cmp
mov
lret
sub
sub
and
std
sahf
fists
xor
dec
rclb
jae
imul
xor
out
xchg
jns
jp
addb
mov
xchg
out
pop
test
mov
sbb
scas
cwtl
and
mov
mov
jbe
dec
fisubrs
test
push
jl
subb
pop
sbb
iret
in
and
fsubl
xchg
int
orl
mov
movsb
data16
fwait
orb
lea
jmp
sub
xchg
popa
inc
outsb
cld
pop
sbb
push
fldl
popl
pop
push
push
xchg
adc
call
out
mov
dec
out
hlt
and
test
cmp
imul
add
subb
mov
add
fisubrl
das
mov
mov
dec
mov
dec
insb
mov
testb
sbb
lahf
stos
mov
pop
add
xor
lahf
lds
fwait
in
jecxz
and
cmp
push
sbb
shlb
sub
out
in
and
jns
mov
adc
adc
mov
insl
pop
dec
xor
jmp
mov
sbb
pop
jb
mov
mov
xor
mov
sbb
jno
insl
add
shlb
rorl
stos
icebp
mov
test
mov
rcl
jo
xor
push
test
fnstsw
dec
repnz
int3
sub
rorl
ja
push
gs
inc
jbe
popl
cmpsl
out
aad
or
pop
movsl
movsl
xor
pusha
div
cmp
pop
dec
iret
cmp
xchg
sbb
pop
mov
es
lods
cmpsl
addr16
push
lock
flds
rcll
test
insb
mov
mov
jmp
popf
addr16
push
cmp
jmp
sarb
push
clc
hlt
jmp
int
cltd
mov
push
loope
outsb
dec
les
dec
adc
aaa
testl
mov
mov
inc
movsl
das
push
mov
xchg
pop
pushf
les
sbb
je
mov
cmc
cwtl
cmp
fdivrs
fcomps
idivl
popf
mov
lock
mov
decb
fisttpl
movq
xor
out
mov
call
ss
iret
pop
mov
dec
lods
bound
scas
out
xchg
mov
rolb
outsb
out
adc
lahf
fildll
jb
lret
fsubrl
pop
test
mov
fsub
and
pop
jl
inc
loope
jne
dec
and
ds
in
clc
scas
call
in
stc
paddusb
xor
mov
inc
lods
mov
inc
cmpsl
jp
sub
cwtl
sbb
and
add
xchg
jge
leave
push
fs
scas
movb
sub
fistpll
cld
icebp
sub
mov
sti
push
jo
jp
insb
add
roll
movsl
ja
or
xchg
mov
adc
pop
push
cli
and
and
push
mov
jmp
dec
enter
scas
xchg
hlt
data16
push
sub
pushf
mov
les
xor
dec
fiadds
aas
pushf
fildl
or
sti
mov
incb
test
out
into
lea
sbb
push
pop
dec
repz
jp
fcmovnu
and
lret
imul
and
fsubrl
imul
insb
inc
lock
sub
jbe
mov
ds
pop
bound
fwait
dec
mov
fsubrl
inc
push
loope
lret
sub
addl
bound
push
jnp
cmp
stc
xor
inc
push
inc
mov
push
pop
aaa
mov
mul
pop
adc
leave
cli
dec
sbb
clc
inc
xchg
scas
dec
mov
test
in
mov
add
cmc
stos
inc
subb
sbb
mov
and
mov
cmp
sbb
movsb
push
xlat
testb
mov
push
cwtl
add
or
cmpsb
xchg
movsl
nop
sahf
ret
scas
pushf
sti
ret
in
jo
stos
push
and
adc
push
insb
addr16
clc
adc
mov
and
cld
mov
cwtl
daa
mov
and
mov
mov
mov
imul
enter
out
insl
fildll
sub
fstps
xor
gs
scas
andb
stos
mov
cmpsl
push
xor
fildl
push
fidivrl
cvtdq2ps
ret
adc
sub
mov
cmpb
mov
cwtl
in
dec
jnp
inc
add
je
and
scas
cmpsb
mov
imul
enter
lahf
fmull
dec
dec
jmp
and
ret
adcb
repz
shl
xchg
lcall
sbb
jb
fdivrp
adc
pop
sbb
jnp
push
mov
clc
jns
mov
mov
xchg
mull
adc
in
sbb
int3
jge
and
adc
call
es
ret
ret
mov
fstpt
dec
xchg
mov
jne
out
mov
loopne
mov
pop
in
out
jb
es
hlt
push
mov
cmp
pop
sub
jbe
dec
mov
push
jbe
cmp
jbe
pop
icebp
sub
movsb
sbb
popa
test
repnz
sbb
cli
ljmp
leave
cmp
aad
inc
add
or
popf
pop
push
movsl
sbb
leave
cwtl
sbb
es
sbb
iret
mov
sub
outsl
sbbb
push
jbe
mov
jmp
push
mov
mov
out
inc
cld
mov
xchg
jnp
xchg
mov
jmp
jmp
daa
sti
jne
push
lahf
push
out
pop
addl
inc
push
add
sbb
rol
mov
or
sub
dec
outsb
dec
push
push
aad
inc
adc
add
jmp
imul
arpl
leave
test
xchg
mov
ret
xchg
lods
daa
movsb
mov
xor
dec
scas
jp
mov
jl
std
fimuls
pop
dec
push
adc
sbb
pop
int
mov
sbb
and
and
pop
fisubs
mov
dec
test
push
and
bound
jmp
popf
pop
sahf
cmp
jne
shlb
adc
pop
test
xchg
aaa
js
std
fs
xchg
sbb
shll
push
add
xor
repnz
and
mov
inc
inc
add
jle
inc
sub
mov
xor
adc
test
pop
mov
arpl
mov
pop
and
fists
and
mov
push
sbb
push
mov
repz
lahf
mull
outsl
das
ficoml
inc
xor
loop
stos
mov
inc
pusha
test
and
addl
dec
jnp,pt
testl
rclb
das
in
jae
pusha
dec
cmp
pushf
and
cmp
pop
push
add
mov
mov
and
outsl
loop
or
push
das
push
adc
test
je
mov
cmp
dec
dec
dec
cld
cmp
pop
bound
icebp
lret
fwait
dec
aad
lahf
lret
imul
xchg
enter
xor
mov
mov
in
mov
call
mov
ret
xchg
aas
mov
out
lcall
orl
into
mov
pop
sbb
stos
lcall
dec
add
fwait
sub
pop
loop
adc
idivb
jmp
mov
int3
sub
popf
insl
mov
aas
shrl
dec
outsb
outsb
mov
ret
jo
sti
in
mov
loopne
dec
out
movsb
hlt
xchg
mov
xchg
xor
pop
jle
sub
enter
cltd
inc
cld
sub
test
cwtl
cmpsl
icebp
hlt
test
outsl
mov
mov
dec
shr
cmp
mov
xor
arpl
jnp
ror
mov
rcr
cmpsb
push
sub
gs
xor
push
fsubrs
dec
xor
and
mov
push
xchg
out
fisubrl
jmp
jp
xlat
push
pop
scas
loop
xchg
sar
lcall
mov
sub
add
xchg
int3
dec
arpl
cmpsb
sbb
jns
add
pop
loop
ret
out
mov
outsl
add
in
inc
inc
adc
iret
sbbb
jo
dec
daa
out
lret
gs
rolb
xchg
imul
cmp
dec
fdivrs
mov
and
mov
rcrb
and
mov
xchg
adc
xor
cmc
inc
xor
addr16
pop
sub
and
push
out
lret
imul
add
mov
adc
loope
add
xor
andb
mov
mov
adc
cmp
push
in
and
pop
and
adc
push
enter
xchg
fwait
pop
add
movsb
lcall
cmp
fwait
jg
and
xchg
jb
sub
dec
pop
in
cli
out
cmpsb
outsb
mov
movzwl
aad
ds
dec
pop
fs
sbb
cltd
jmp
mov
jmp
test
shll
sub
jo
add
roll
je
int
out
mov
sub
rcll
ficoml
pop
jb
mov
stc
std
sbb
rcrb
sub
pop
push
sbb
fbstp
add
and
and
mov
addr16
fidivl
or
push
sub
xlat
gs
cmp
js
sbb
loopne
mov
sbb
out
pop
test
testl
push
jnp
jg
les
jb
aas
add
mov
push
jno
sbb
and
test
mov
aaa
adc
aam
push
pushf
sbb
jp
fisubl
push
mov
je
enter
xor
push
mov
xor
adc
add
sub
repnz
jg
inc
mov
dec
mov
push
mov
repnz
repz
icebp
xchg
mov
dec
inc
int3
flds
js
cld
hlt
mov
int
inc
add
das
scas
and
insb
lea
or
das
jmp
out
add
push
push
mov
jge
mov
sbb
sub
fidivrs
and
popa
movsl
adc
jg
add
xor
mov
ja
cs
jp
add
in
xchg
cld
or
stos
mov
push
or
sahf
cmpsl
jle
sub
daa
cmp
ds
mov
and
and
and
cmpsb
cmpsl
or
mov
sub
cltd
rorl
xor
mov
inc
xchg
push
pop
jne
arpl
inc
sar
add
dec
jmp
mov
out
pop
ret
test
mov
push
cmpsb
fwait
push
cmovg
dec
clc
add
lea
sub
inc
in
pop
bound
test
mov
inc
pop
call
test
addr16
data16
ljmp
jecxz
pop
push
xor
push
pop
cmc
shrb
arpl
mov
cmp
push
scas
sbb
jl
std
sub
jo
push
mull
jecxz
dec
xor
pop
mov
das
insb
les
push
pop
push
loope
inc
loopne
js
mov
and
push
xlat
lcall
daa
sub
jmp
mov
pop
loopne
cmp
cmp
inc
dec
jo
mov
or
push
stos
push
or
call
jp
pop
push
push
xor
lea
mov
xchg
movsl
outsb
scas
cmp
push
cwtl
dec
gs
pop
lret
ljmp
outsb
cmc
loop
cld
sbb
mov
sub
jne
aas
add
jbe
sarb
fs
add
mov
scas
xor
lods
mov
add
push
sbb
mov
cld
or
nop
jl
inc
rcr
sbb
mov
push
sbb
jge
arpl
mov
push
lret
lret
pusha
sub
les
xchg
int
frstor
xor
in
inc
dec
mov
popa
sbb
mov
mov
outsl
lds
and
xchg
lret
sbb
pop
add
imul
xor
xchg
out
out
and
addr16
inc
jg
imul
dec
aam
fcomi
inc
xchg
cltd
daa
push
pushf
sub
dec
sbb
cmp
sub
ds
or
or
test
mov
sbb
push
jg
mov
pushl
pop
cli
rcll
add
scas
dec
test
push
jmp
cli
dec
or
pop
mov
mov
pop
dec
push
fidivs
dec
cmpsl
rcrb
jmp
aaa
icebp
enter
push
pop
sub
shrb
mov
push
sbb
push
push
scas
ds
and
and
dec
xor
leave
and
xor
out
stos
test
inc
adc
and
int
xchg
shl
sbb
fisttps
fiadds
mov
stos
inc
jg
dec
ficompl
inc
ret
and
mov
jne
jp
or
enter
cltd
in
scas
mov
gs
xor
pushf
push
push
into
mov
lods
or
and
lcall
loopne
add
popf
push
shlb
jns
push
je
in
dec
lods
sub
sbb
mov
lds
cmpsb
xchg
or
bound
pop
or
test
into
xor
sbb
mov
sbb
inc
push
shl
push
ret
or
pop
out
sbb
or
jnp
ret
decb
test
add
xchg
and
hlt
loop
fldt
cwtl
pushf
loopne
test
popa
cmpsb
xchg
mov
push
fucomi
imulb
ficoms
rcll
inc
mov
ficoms
outsl
cmp
mov
cmpsl
adc
mov
and
mov
xchg
es
test
adc
mov
insl
loope
cs
aam
arpl
inc
enter
lds
test
lahf
xor
xchg
add
mov
cmp
cmpsl
mov
cmp
imul
dec
cli
xor
jnp
cmp
push
cwtl
imul
pop
enter
sub
ds
nop
mov
stos
or
adc
pop
xor
cmp
arpl
fs
dec
data16
stc
leave
adc
add
sbb
inc
mov
cwtl
push
addr16
in
pop
or
sub
clc
fs
ficoml
add
out
cmpsb
jl
std
ljmp
pop
hlt
adc
fistl
fnstsw
leave
or
stos
movsl
popf
mov
lods
cmp
ficompl
mov
popf
add
jns
sbbl
push
je
scas
sub
pusha
lock
icebp
mov
adc
sub
or
pusha
sub
xchg
xchg
xchg
sbb
arpl
js
mov
movsl
pop
cmpsl
shll
leave
in
xor
cltd
scas
add
mov
in
lods
mov
cmp
outsl
into
dec
dec
xor
and
enter
xorl
std
mov
ficoms
lret
in
stos
dec
mov
xor
daa
fidivs
and
adc
mov
pop
push
and
mov
aaa
cmp
arpl
mov
dec
fdivr
xchg
shrl
mov
leave
push
or
mov
mov
loopne
pop
mov
xchg
inc
jns
or
pop
mov
ljmp
cmp
mov
fldl
bound
xor
mov
jno
mov
and
popa
cli
mov
fisttps
jbe
mov
mov
mov
push
arpl
or
cmc
xor
push
test
les
inc
xchg
or
aas
jmp
xchg
lock
in
cmc
push
adc
mov
movsl
cld
sbbl
rcr
or
sub
leave
cs
shlb
push
outsb
xor
push
inc
xlat
pop
adc
cmp
jmp
pop
rorb
lcall
testl
ljmp
aas
mov
fsubr
int
hlt
test
leave
imul
lret
out
xor
repz
cmpsl
les
or
shl
out
adcb
push
stc
sbb
je
or
mov
mov
je
in
xlat
jae
ret
jg
pop
jb
and
push
mov
inc
or
test
jge
sub
pop
sub
js
fdiv
lods
adc
rol
xchg
je
call
cmp
jp
sub
or
cmp
in
cmpl
adc
pop
jae
inc
fucom
inc
xor
xor
insl
mov
mov
pop
mov
cli
jnp
subb
pop
xchg
xchg
fcmovu
mov
mov
pop
sbb
sub
pop
hlt
scas
adc
mov
insl
cmp
mov
scas
mov
pop
in
ffree
test
push
jl
mov
jne
cwtl
and
push
xor
and
dec
xlat
imul
sar
fdivrl
das
or
pop
pop
out
mov
xchg
or
and
ja
ljmp
fmul
xor
bnd
incl
setge
movsb
pushl
lods
push
add
sbb
push
out
lea
mov
enter
ja
rorl
mov
add
xor
xor
push
push
das
dec
imul
fwait
arpl
lret
push
outsb
inc
aaa
push
mov
pop
cs
scas
ret
push
cmpsl
cmpsl
jl
sbb
jnp
push
stos
cmp
xlat
inc
xchg
xor
xchg
dec
sahf
and
movsl
negl
add
add
out
outsl
xchg
rorl
pop
push
inc
loope
hlt
repz
int
inc
and
mov
insb
push
add
xor
cmpsb
stos
xor
outsb
rcrl
pop
inc
cmp
mov
push
shlb
lods
ror
shlb
stc
lahf
mov
jmp
out
out
and
and
jp
mov
jmp
dec
cmp
gs
test
mov
mov
mov
mov
data16
or
sti
shl
inc
stos
loopne
out
idivb
add
lock
fdivrs
mov
cli
push
cmpsl
or
jb
es
mov
adc
adc
or
adc
mov
test
imul
test
sbb
adc
mov
cmp
in
inc
movsb
sub
aad
pusha
cs
aad
cmp
lea
add
mov
sar
cmp
iret
inc
cld
cwtl
imulb
leave
das
dec
cld
adc
in
aaa
cs
cmpsl
sahf
jo
or
inc
loope
insl
inc
sbb
stos
lods
mov
pop
dec
dec
pop
rorl
inc
andb
mov
mov
dec
aaa
mull
lods
jbe
std
js
pop
cmp
mov
gs
push
sbb
fidivrl
sub
sarl
inc
cmpsl
loope
lret
test
add
out
sub
in
fstpl
sub
mov
mov
mov
mov
jnp
dec
push
adc
push
mov
inc
lock
leave
cmpsl
cs
and
faddl
test
push
popf
aad
mov
out
mov
test
xchg
test
shlb
enter
add
inc
negb
cmp
leave
addr16
mov
xlat
pop
and
push
out
inc
testb
es
ss
in
fcompl
mov
jnp
fcoml
sahf
popa
push
xor
in
pushf
ficoml
add
insl
pop
cmp
mov
outsl
cmpsb
mov
jg
add
cmpsb
pop
dec
adc
adc
pop
mov
or
shll
xchg
inc
push
xlat
lahf
fdivrs
sti
pop
mov
fwait
stos
xor
pushf
xor
sbb
sub
repz
sub
inc
pop
and
sbb
arpl
aam
test
inc
pop
ret
push
add
mov
repnz
mov
mov
clc
lahf
mov
arpl
or
ror
lods
jnp
dec
test
and
mov
das
popf
mov
jne
pop
into
add
xor
jno
enter
sub
rol
sub
aad
sub
in
and
mov
pop
sbb
xchg
cmpsl
add
inc
cmp
inc
add
jbe
mov
xchg
notb
int3
sbb
adc
sbb
sub
xchg
or
lret
mov
push
cld
jg
pop
add
je
imul
pop
rorb
fnstcw
fbld
sbb
cli
sbb
nop
sbb
inc
add
lods
and
movsl
and
sbb
or
popl
pushf
and
iret
aad
and
xor
xchg
jnp
mov
ljmp
push
stos
pop
test
inc
pop
mov
xlat
cmpl
popf
ret
sti
mov
sar
fdivrl
mov
mov
mov
call
pop
daa
sahf
stos
nop
ljmp
or
jb
inc
clc
xlat
ret
push
fstl
xor
inc
fiaddl
dec
jns
cltd
les
cmc
out
xor
ret
cmp
xor
mov
pop
fmuls
sbb
insb
push
daa
inc
punpckhbw
add
test
in
or
inc
sbb
mov
aaa
movsb
pop
cmp
in
lock
daa
pop
out
mov
jge
jbe
fwait
insl
ds
adc
xchg
xlat
scas
mov
add
notb
mov
sub
xor
push
mov
cmp
scas
add
and
outsb
mov
xlat
fs
lods
and
cmc
fistps
int3
ljmp
data16
and
mov
out
pop
inc
roll
sbb
mov
ljmp
jecxz
movsl
mov
arpl
jb
iret
mov
inc
sub
sub
push
test
clc
mov
xor
sub
sub
dec
repz
dec
cld
jmp
xchg
xorl
jle
js
test
add
test
test
subl
mov
stos
ror
test
mov
clc
cltd
mov
ret
clc
testb
mov
enter
xchg
cld
push
xchg
gs
ret
fldcw
imul
pusha
inc
imul
mov
mov
into
repz
cmp
in
pop
xchg
mov
loop
fidivrs
mov
jno
xchg
push
jne
mov
inc
or
or
outsb
testb
sbb
in
popf
pop
jns
adc
flds
cmc
mov
pop
cmp
sbb
sbb
movsl
daa
jle
mov
repz
int
hlt
xchg
dec
cmp
mov
jnp
addr16
cmpb
aad
aaa
ret
cmpsb
flds
loopne
sub
mov
adc
cmpsl
dec
jmp
fisubrs
mov
push
pop
ljmp
hlt
shl
mov
fistpl
mov
cmp
and
aad
mov
movsb
jb
jno
mov
insl
les
cmp
out
addr16
mov
nop
jle
idivb
or
jp
jne
cltd
jbe
pop
cmp
ja
rcrl
or
jnp
pop
dec
sbb
shl
pushf
inc
jmp
jle
dec
repz
xor
pusha
push
test
dec
sub
inc
test
ds
es
mov
outsl
enter
sub
lcall
mov
lods
mov
rcl
adc
cwtl
aam
xor
fldt
mov
xor
outsb
sub
jno
lds
icebp
sbb
fbld
mov
test
in
lahf
shr
mov
loopne
inc
add
mov
stos
mov
ds
cmp
sub
mov
mov
fs
xchg
mov
hlt
jbe
outsb
dec
sbb
ficoml
mov
decl
test
aaa
sbb
mov
mov
pop
mov
mov
mov
into
movsb
cmp
clc
cmp
mov
mov
adc
ror
loope
inc
dec
xor
outsl
jae
push
movsl
scas
lret
out
rorb
mov
hlt
mul
xor
gs
inc
and
es
jo
and
dec
jno
mov
js
cltd
aas
push
pop
mov
das
andl
pop
mov
dec
push
cmp
das
and
sub
shrb
pop
cmpsb
int3
ds
cltd
add
fsubl
fwait
repz
hlt
ja
fisubrl
test
mov
mov
sub
cmc
leave
aad
sbb
dec
int
andb
pop
sbb
mov
cwtl
push
inc
sub
xor
mov
jmp
and
stos
mov
dec
scas
popa
push
add
sub
js
stos
add
mov
sahf
arpl
sti
inc
aaa
and
mov
add
cmp
or
aad
mov
aas
jae
mov
loope
cmp
cmp
loopne
dec
jp
das
mov
or
sti
cmp
adc
mov
test
loope
add
nop
push
cmpl
in
xchg
adc
push
and
adc
test
fwait
mov
or
nop
rorl
xchg
sub
or
stos
mov
fmul
or
les
inc
xchg
dec
repz
imul
xlat
cmc
mov
sti
lret
iret
ret
shrl
jb
cmp
out
jl
pop
push
xchg
retw
pop
addr16
rorl
ret
xchg
outsb
insl
mov
adc
cmpsb
std
mov
and
inc
sub
dec
cltd
cmp
add
ficoms
lds
xchg
mov
pop
push
shll
lret
add
nop
arpl
je
cmp
dec
test
mov
ja
das
mov
sti
fisubs
stos
call
fdivp
in
in
xchg
mov
es
fdiv
int
push
sbb
sub
push
iret
mov
out
hlt
lcall
push
stc
push
cmp
xchg
push
das
loop
fildl
mov
mull
mov
loop
cmp
mov
pop
into
sahf
jg
mov
sub
mov
mov
pushf
sbb
call
lea
test
repz
popf
out
dec
add
mov
ja
repnz
and
inc
nop
and
jb
adc
push
mov
aas
mov
popf
ds
xlat
mov
not
xor
insl
inc
pop
and
mov
pop
dec
push
popl
mov
in
jle
mov
dec
xchg
push
lcall
repnz
pop
cmp
xor
sbb
jmp
sti
push
pop
leave
icebp
bnd
xlat
loopne
add
adc
xor
xchg
loopne
rcrl
shrb
cs
imul
inc
fsubrs
dec
add
lret
mov
ret
imull
sub
into
outsl
cmpsb
mov
inc
or
in
cld
jne
xlat
mov
movsl
movsb
xchg
scas
lds
in
popa
rol
or
cmpsl
sbb
fcmovnbe
push
ljmp
jnp
lods
rorl
mulb
pusha
imul
iret
lcall
int3
repz
mov
xlat
and
aaa
xchg
outsb
shll
mov
or
add
mov
sub
or
shll
ret
cmp
outsb
jge
jae
adc
pop
icebp
js
xchg
add
ret
xchg
jl
cmpsl
js
xor
xor
test
cmpsl
test
test
xchg
dec
adc
lea
adc
sub
xlat
push
mov
ret
cmp
cmp
lcall
and
xlat
imul
push
cld
mov
dec
lcall
pushf
adc
mov
inc
inc
jno
sbbl
clc
push
aad
pop
mov
jecxz
jmp
add
je
xor
inc
scas
not
mov
adc
out
xchg
push
xchg
out
add
adc
dec
cld
inc
sub
ficoms
aam
in
mov
add
loop
fwait
into
add
pop
cmpsb
xor
addr16
fwait
or
inc
repz
stc
inc
add
cmp
jo
xlat
lahf
mov
daa
sub
repnz
push
and
pop
xchg
push
xchg
je
xchg
mov
push
lahf
jae
inc
shr
adc
mov
xlat
xchg
and
cmpb
out
mov
gs
push
mov
ret
clc
testb
ljmp
xor
cmp
jb
dec
fcoml
or
cmc
inc
les
stos
mov
adc
ja
gs
aad
data16
adc
push
fisubl
pop
nop
xchg
cmp
loop
fwait
subl
dec
int3
pop
xor
or
out
push
inc
insl
popf
iret
push
sub
out
inc
cmp
out
jns
subl
inc
xor
mov
ja
mov
repnz
pop
insb
arpl
xor
dec
pushf
outsb
jmp
lret
fbstp
les
jo
xor
xchg
or
pushf
gs
lret
and
jecxz
mov
stc
xlat
mov
fdiv
cmp
daa
inc
mov
lcall
pop
mov
sbb
mov
adc
test
pop
stos
inc
scas
xor
rorb
mov
es
sub
cld
push
andl
fsubrl
cmp
loopne
mov
pop
cli
lret
inc
xor
mov
add
fdivl
iret
cmp
loop
inc
sbb
jnp
lods
push
adc
adc
leave
and
jb
sub
inc
in
push
cmp
cmc
out
cmpsl
dec
insb
push
pop
ret
mov
rcl
mov
mov
or
int
add
icebp
and
fstpl
addb
mov
mov
lds
adc
or
sbb
arpl
andb
mov
frstor
out
jp
ret
pushf
sbb
mov
pushf
mov
jb
push
adc
and
xorl
and
mov
mov
inc
xchg
fmuls
adc
xchg
add
fstp
stc
hlt
ret
dec
cmpsb
in
jle
aad
aad
or
mov
or
cli
movsl
mov
cmp
adc
outsb
jo
mov
imul
mov
mov
xor
test
lcall
jo
jnp
and
lods
aaa
lcall
sub
sub
xlat
adc
cmpsl
mov
loope
sbb
pop
xchg
das
ds
dec
inc
ret
aad
subl
imulb
add
mov
sbb
add
push
js
dec
stos
fdivrl
inc
mov
sub
lock
mov
addr16
xchg
rclb
lret
test
push
pop
sub
movsb
popa
inc
jbe
push
dec
fstp
sbb
hlt
les
and
jbe
bnd
pop
dec
mov
sbb
icebp
xor
scas
ljmp
cmp
jg
popa
lods
or
dec
sub
cwtl
lea
sbb
addr16
faddl
or
pop
hlt
cwtl
fdivs
enter
jae
jmp
clc
jae
pop
lret
pop
cmp
xchg
mov
and
sbb
xor
ret
bound
mov
inc
mov
xchg
sbbb
lea
fs
shr
inc
loopne
xchg
jae
les
adc
and
ret
adc
ja
pop
cmpsb
lods
ds
js
pop
inc
inc
fdivrl
lea
test
cmpsl
insb
xchg
push
cmp
stc
adc
fsubs
sub
adc
adc
sahf
push
lcall
or
mov
ja
adc
xchg
out
outsl
clc
inc
enter
push
adc
pop
int
adc
int3
sar
mov
mov
ja
xchg
aaa
cltd
inc
popa
inc
push
sbb
pop
sarl
push
lret
xlat
pop
adc
jbe
xor
negl
ret
inc
rcrl
jg
add
mov
stc
outsl
mov
xor
ja
cmp
aad
mul
aad
ror
xchg
xor
fcmovnu
push
shrb
outsl
int
repnz
outsb
lret
idivl
cld
imul
push
xchg
jb
adc
sub
das
xchg
inc
xor
or
push
xchg
and
xchg
push
mov
aaa
pop
add
and
or
mov
push
icebp
mov
xchg
fdivl
jae
enter
mov
cs
movb
push
mov
bound
and
xchg
repz
popf
outsl
inc
push
mov
or
or
outsb
xchg
or
jbe
jns
mov
fistl
adc
shlb
cmc
xlat
cmpsb
cmp
push
sbb
aaa
push
or
out
lea
inc
inc
inc
cld
in
sbb
fiadds
hlt
dec
lods
pushf
ljmp
sahf
jo
mov
xchg
adc
addr16
pop
jl
fcmovb
and
sub
pop
ret
dec
mov
fwait
lods
xbegin
mov
pop
movsl
cmp
fwait
and
cmp
mov
mov
mov
xchg
push
add
sbb
scas
mov
mov
stc
adcb
imul
repnz
or
pop
mov
cld
punpckhbw
xchg
sti
mov
rcrb
mov
push
ds
push
sbb
arpl
push
mov
inc
sub
stc
xor
push
push
mov
xor
dec
aam
mov
push
inc
or
cmp
cmpsl
cmp
push
pop
add
sti
decl
int3
fiadds
lea
xchg
jle
call
out
jo
mov
adcb
push
cltd
popl
sarb
sbb
test
jmp
lods
adc
test
or
dec
add
mov
call
test
je
pushf
mov
outsl
dec
mov
subb
mov
fbld
pop
dec
sbb
int3
in
fldl
ljmp
sarl
fiaddl
cld
jg
mov
xchg
adc
jnp
and
mov
lods
xor
xor
imul
mov
push
aaa
add
les
add
mov
adc
sbb
imul
iret
sub
fiadds
dec
loope
or
dec
in
jecxz
sub
daa
inc
push
test
pop
xchg
test
out
lret
lret
sbb
lahf
push
popf
les
stc
ret
dec
jnp
fmuls
jno
xor
mov
push
lcall
scas
jbe
in
out
pop
add
inc
rorl
lea
adc
mov
ret
aam
ret
jecxz
push
std
push
mov
adc
cmp
insb
ret
nop
pop
sbb
scas
and
js
xorps
lcall
es
xor
movsb
mov
jmp
xchg
mov
push
arpl
test
testb
cmp
and
leave
mov
loope
cmpsb
ss
or
jnp
call
push
jns
lcall
jb
add
mov
or
test
mov
mov
repz
mov
mov
loop
push
iret
lods
fmul
add
push
push
outsl
pusha
aam
jmp
xchg
ljmp
sbb
in
mov
ds
sbb
or
jae
loop
out
inc
pop
fdivr
testb
pop
push
ficomps
popa
out
mov
lahf
jo
add
mov
sti
mov
imul
mov
push
stos
cmc
mov
movsb
push
sub
hlt
lret
cs
pop
jnp
pop
sub
cmc
sbb
dec
add
and
out
inc
adc
sbb
jg
pop
fcmovbe
dec
fdivs
push
cmp
and
std
mov
in
jo
mov
stos
cs
rorl
adc
jo
adc
xchg
push
dec
aaa
out
daa
xchg
inc
or
inc
mov
xchg
or
jae
adcl
or
push
jo
and
xchg
aas
cltd
cmp
popa
sbb
ds
jo
shl
decl
xchg
jae
push
mov
push
bndstx
movsb
push
lahf
mov
repnz
out
pop
cmp
sub
xlat
outsb
adc
mov
pop
push
mov
and
lods
or
call
dec
mov
in
xlat
adc
jl
or
inc
in
mov
cmc
ret
push
cmpsb
and
aas
decl
cltd
inc
loopne
xor
ret
pop
push
jge
aad
pop
out
jmp
dec
out
xor
ret
xor
adcl
push
flds
jecxz
jnp
shrl
mov
js
cs
call
xchg
xchg
or
push
mov
test
push
mov
xchg
or
and
jae
std
pop
add
ret
inc
cmc
clc
hlt
out
mov
cmpsb
out
cli
cwtl
ja
xchg
lods
movsl
pop
mov
pop
ret
test
clc
push
mov
fmuls
jecxz
inc
inc
rorl
daa
push
addb
outsl
push
sahf
push
mov
cmp
mov
cmp
xchg
cmpsl
add
daa
cld
fwait
mov
cmpsb
mov
fidivs
dec
xor
or
mov
mov
addl
loop
sbb
jnp
pusha
xchg
mov
pop
test
pop
enter
cltd
cld
jo
je
and
insb
jle
dec
test
sbb
in
mov
add
clc
lods
inc
mov
dec
cmpsb
pop
outsb
mov
inc
mov
inc
pop
dec
lret
aad
mov
mov
into
push
rcll
adc
aam
mov
int3
sbb
gs
insb
lcall
fwait
in
xorb
repnz
into
shlb
mov
addl
push
adc
adc
inc
xchg
loopne
mov
sti
adc
test
sbb
mov
cmp
dec
cs
pop
dec
test
lock
mov
dec
sti
xor
icebp
imul
aam
pop
sub
xchg
icebp
jge
shl
test
add
xor
dec
or
insl
idivb
xchg
movsb
ret
in
xor
xchg
push
mov
out
je
jge
sbb
sbb
jns
cltd
andl
inc
inc
add
sahf
mov
arpl
arpl
outsb
jg
jns
adc
shrl
sub
in
in
adc
push
les
push
fisubl
lods
xor
sbb
jbe
in
xchg
pop
jns
xchg
fmull
sbb
inc
pop
jecxz
jne
push
es
xor
inc
cmpsb
sub
xlat
enter
shrl
dec
pop
or
push
iret
lods
mov
mov
mov
stos
repz
pop
sbb
push
dec
cmpsl
popf
sets
outsl
aad
ret
xor
cld
scas
and
movb
stos
jle
or
mov
std
xchg
mov
out
dec
jl
rorl
dec
das
pop
lahf
inc
push
jo
xchg
pop
inc
cli
dec
daa
out
mov
dec
movsl
into
dec
into
fmuls
jle
orl
sbb
fsubrs
push
mov
repnz
xor
adc
test
and
dec
or
add
arpl
jp
push
fs
pop
orl
stos
mov
push
repnz
insb
jne
jl
jmp
pop
fstpl
push
pop
arpl
sbb
mov
enter
cmp
cs
out
ret
jbe
push
inc
in
pop
loope
inc
sub
mov
lret
xchg
cmp
push
inc
lds
xchg
inc
imull
adc
dec
daa
test
lret
jnp
iret
push
in
jl
pop
xchg
adc
mov
push
mov
leave
imul
in
ret
loope
stc
mov
pop
loopne
fmul
mov
cmp
es
negl
push
movnti
jmp
div
cld
jo
lds
das
aad
lods
mov
idivl
mov
in
or
orl
pop
repz
dec
inc
ret
int
test
xor
inc
jbe
or
fincstp
packsswb
mov
sbb
ds
lea
sbb
lds
lretw
and
xchg
sub
and
filds
stos
cmp
sbb
or
aad
es
dec
inc
call
mov
xor
sbb
fidivrs
sbb
out
jg
jmp
fisubl
fcoml
dec
mov
mov
mov
fwait
xchg
lods
js
sub
mov
pop
mov
jo
sbb
das
mov
fcoml
nop
adc
test
xor
jbe
ja
cmc
lret
int3
pusha
mov
lcall
stos
fcomps
out
fadd
mov
jne
adc
arpl
mov
push
add
loop
xchg
pop
enter
mov
jg
xchg
in
pop
sub
out
loopne
loope
or
dec
xcrypt-cbc
cmpsl
push
stos
jmp
bound
fbld
lea
getsec
or
dec
cmp
in
fwait
xchg
mov
pop
push
dec
int
imul
pop
addr16
adc
pop
xor
stos
xchg
imul
push
cmp
adc
cmp
idivl
imul
xchg
jg
push
mov
dec
arpl
testl
pop
cltd
stos
sub
sub
dec
and
jmp
lods
xchg
ss
cmp
push
gs
lcall
insb
js
xchg
add
jae
sub
xchg
mov
out
jmp
pop
add
in
inc
xor
jns
fadds
mov
pop
out
test
mov
jge
and
popf
jmp
pop
xorl
out
mov
dec
lods
pusha
imul
call
daa
shrl
fwait
and
xor
adc
scas
dec
test
jmp
stc
loopnew
fcoms
xchg
arpl
testb
bound
push
pop
push
test
jae
or
arpl
sub
adcb
mov
inc
or
xor
push
ret
and
int
mov
and
and
cli
cmpsb
rorl
lea
sub
adc
xchg
inc
jns
pop
gs
dec
sub
ss
in
cmp
cmpsb
cmp
dec
mov
jne
mov
push
mov
mov
mov
ss
les
rcrb
insb
push
rorl
pop
cmp
xchg
mov
cmp
mov
sub
sub
push
mov
push
cmp
pop
int
inc
mov
stos
push
xor
push
cmp
xchg
push
test
xchg
pop
fcomps
mov
inc
push
addr16
or
movsl
int
xor
sbb
lret
in
xor
ds
push
jbe
out
push
cmp
and
xor
xchg
pop
out
cmp
les
jne
sbb
or
xchg
sub
mov
fcomps
cmp
and
lret
sub
mov
pop
add
xchg
dec
cmp
and
sbbb
cmp
mov
cmp
hlt
lretw
mov
outsl
pop
dec
mov
das
mov
fiaddl
test
fidivl
mov
cmp
jecxz
fcompl
pop
lret
in
push
sbb
stc
push
lods
or
in
call
sahf
pusha
cmp
sahf
jge
adc
adc
test
mov
or
pop
rclb
lret
cwtl
xchg
sbb
inc
mov
xor
and
jae
cmp
xchg
xchg
jno
and
cli
mov
mov
mov
mov
add
cmpl
cmp
and
sahf
dec
nop
jnp
inc
in
fisttpll
cmpsl
testl
cmpsb
addr16
outsw
mov
jne
mov
jae
cwtl
inc
scas
xchg
inc
js
daa
call
jle
lahf
ret
mov
sbb
jnp
fnsave
jmp
adc
cmpsb
sub
pop
es
in
cmpsb
call
push
push
push
pop
lock
addr16
ja
and
test
sarb
fwait
int3
cmpsb
mov
pop
xchg
enter
pop
adc
hlt
es
lds
mov
mov
dec
jg
sbb
xor
push
sub
adc
mov
adc
test
add
stos
js
orl
inc
cmp
imul
and
aas
add
push
cmp
mov
adc
lock
arpl
dec
inc
orb
pause
popf
loope
push
or
push
dec
lea
int
movsb
dec
daa
pop
sbb
mov
and
mov
inc
dec
dec
cld
stc
and
hlt
outsl
sub
xchg
pusha
dec
fsts
lods
fbld
push
inc
pusha
jae
scas
xchg
out
ds
dec
mov
gs
test
xlat
dec
sbb
fdiv
push
int
pushf
shrl
lods
or
popa
jle
or
test
rorl
xchg
xor
in
push
fdivs
test
cmp
adc
sti
jns
jmp
ret
push
andb
inc
cmpsl
movsl
xor
clc
push
mov
in
arpl
arpl
stos
mov
inc
mov
imul
es
pop
pop
push
push
mov
es
cmp
fmull
test
mov
sub
mov
adc
xchg
sub
pop
shl
and
mov
jae
push
std
sub
inc
pop
pop
cli
leave
sub
aaa
repz
es
jns
stos
ds
ljmp
arpl
cmpsl
gs
sub
pop
pop
pop
cmpsl
add
rcrb
stc
push
adc
lcall
mov
bound
popl
jl
jns
sub
jno
jbe
loop
cli
stos
mov
dec
movsl
xchg
inc
fadd
jmp
dec
adc
pop
aaa
fistpll
and
movsl
data16
sbb
jg
push
fs
testl
push
out
mov
push
cwtl
sbb
ret
gs
adc
dec
icebp
cmp
mov
leave
lret
mov
adc
aam
mov
cmp
int
nop
rcl
test
inc
arpl
fcoml
int
sarl
xor
sbb
pusha
and
jp
push
inc
jg
jg
or
dec
fiaddl
or
push
and
popf
out
push
push
add
sarb
icebp
sbb
cmc
fmulp
jecxz
mov
mov
pop
mov
testl
xor
and
xchg
jno
int
repnz
push
inc
push
test
ret
inc
test
push
xchg
repz
in
sbb
js
lahf
push
mov
and
jmp
addr16
xchg
jp
xorl
cmp
dec
sbb
sbb
mov
jmp
shll
test
je
lcall
pop
mov
outsb
pusha
and
out
mov
jbe
sahf
push
test
jne
in
lahf
add
xchg
inc
adc
pop
sti
in
es
es
pop
in
iret
divl
sbb
sub
dec
es
cld
and
std
xor
es
fcomi
ljmp
sbb
jnp
lods
js
add
frstor
sbb
pusha
jnp
das
or
shrb
cmpsl
pop
cmpsb
sub
dec
mov
mov
jp
fs
roll
inc
dec
pop
and
shl
jb
dec
lock
push
in
leave
ret
ss
add
jmp
ret
cs
cmpb
lret
mov
pop
popf
mov
test
jo
dec
cwtl
cs
jg
fsubs
aas
push
cmp
loop
cmc
lods
inc
scas
adc
sbb
mov
cmpsb
fdecstp
xchg
andb
insb
aaa
jo
fwait
and
cmp
or
enter
jbe
or
xchg
hlt
cmp
mov
push
test
addr16
popa
mov
and
add
jecxz
sub
mov
ds
pop
mov
mov
fs
clc
jns
aam
mov
sbb
lret
in
lods
scas
and
sub
push
scas
jg
stos
xor
xchg
sti
int
pop
daa
shrl
mov
push
mov
ret
enter
fs
jg
fnsave
mov
call
repnz
mov
pusha
add
mov
dec
mov
inc
push
cmp
jno
add
dec
add
mov
outsl
shll
shr
and
xchg
xor
movsl
bound
mov
push
mov
or
pushf
aam
push
cmp
mov
insb
iret
jecxz
jp
pop
xchg
in
ja
pop
xchg
cmpl
loope
jno
add
jle
sbb
sub
in
push
inc
into
repz
call
mov
int3
shlb
loop
enter
mov
and
movlhps
add
inc
xor
sbb
repnz
xor
ss
push
cltd
aaa
mov
mov
adc
cwtl
inc
xor
add
je
ja
into
adc
dec
ja
mov
leave
rcrb
mul
imul
lea
les
xor
loopne
and
dec
pusha
imul
add
imul
dec
es
cs
gs
sbb
das
push
sahf
cmp
and
mov
lahf
sbb
mov
push
vpmulhw
outsb
push
dec
test
cmc
adcb
in
xchg
dec
sub
inc
dec
jo
xchg
and
ret
cmc
push
mov
xor
into
movsl
inc
stos
iret
jno
insl
inc
mov
dec
sub
pop
pop
aam
ret
aaa
ja
mov
jmp
ja
add
mov
or
clc
mov
sbb
dec
popa
adc
mov
mov
data16
shrb
push
dec
jge
aam
pop
in
dec
mov
ss
or
sbb
push
cmp
jecxz
mov
leave
dec
cmp
pop
mov
pushf
lret
scas
shlb
mov
mov
out
lahf
or
out
mov
ja
cmp
cmpsl
and
lds
inc
jno
push
lret
ljmp
popa
inc
stos
mov
pushf
pop
adc
popf
ja
roll
fdivr
jecxz
andl
sbb
fildl
les
les
jmp
fistps
pop
xor
out
cmc
rorl
cmp
mov
adcl
jo
ret
fs
iret
mov
dec
jnp
test
insl
pop
out
addr16
push
movsl
ja
test
pushf
loopne
ret
xchg
xchg
mov
and
mov
pushf
push
mov
iret
imul
shll
repz
das
push
dec
movb
call
xchg
repz
out
mov
insl
pop
jmp
iret
sub
jp
stos
pop
jp
inc
mov
lods
icebp
loopne
das
shlb
mov
push
mov
mov
les
push
sub
pop
add
das
hlt
movsl
into
mov
into
pusha
jno
cmp
cmpsb
popf
div
push
andb
inc
fsubrl
leave
ljmp
sbb
push
lock
dec
loop
scas
add
mov
fmull
fmuls
sti
lret
inc
test
add
dec
or
and
jle
movsb
sub
les
add
or
movsb
movsb
es
aaa
popf
insl
xchg
mov
rol
mov
pop
xlat
push
inc
cli
subb
lods
rorb
add
jmp
lret
jb
cmp
jle
dec
sti
into
data16
dec
jge
mov
xor
mov
cmpsl
test
mov
rcrl
fisubs
mov
pop
cli
decb
sbb
ja
pop
pop
rorl
hlt
push
ja
nop
ds
in
add
jmp
cld
lahf
and
cmp
jle
push
push
sbb
mov
aaa
mov
stc
mov
mov
lea
test
adc
mov
stos
xor
sbb
pusha
setle
inc
mov
stos
fistpl
fwait
scas
sbb
aaa
jg
cmpsb
shlb
mov
test
orl
gs
ljmp
shlb
cltd
or
cmp
xchg
out
pop
or
adc
xchg
cmp
push
mov
mov
mov
and
cmpsl
sar
jne
inc
ret
out
mov
push
clc
adc
notl
mov
out
lret
sub
push
cwtl
and
scas
jge
repnz
fidivl
cmpb
jne
cmp
inc
mov
out
xor
aas
fiaddl
push
cmc
fwait
xchg
not
andb
orb
mov
cmp
add
into
cli
rorl
xor
das
fs
ja
cwtl
daa
mov
inc
jle
xor
sarb
mov
mov
lcall
cmpsl
cld
ljmp
xor
nop
std
xchg
rcl
mov
adc
push
mov
xchg
scas
push
adc
lock
decb
cmc
shlb
mov
fidivrs
loop
outsl
cmpsb
in
xchg
push
mov
movsl
add
mov
adc
jae
push
dec
out
pop
pop
xlat
add
mov
pop
inc
inc
and
mov
cli
add
push
and
and
dec
sti
outsb
xchg
mov
cmc
xchg
jb,pt
repnz
setp
and
or
mov
jns
ret
mov
pop
aad
iret
enter
out
and
or
mov
mov
mov
insb
push
push
sahf
xchg
lret
cmp
das
mov
pop
adc
sub
insl
mov
test
sub
cli
pop
cmp
dec
lret
in
push
xchg
jno
nop
jp
fiadds
repz
adc
dec
test
scas
xchg
pop
push
dec
lock
lret
es
stc
mov
jp
inc
negl
push
xor
dec
inc
dec
or
sub
aaa
or
lret
push
andb
cmp
mov
jo
mov
andb
call
sti
mov
or
or
jb
jne
outsl
xlat
fstpt
outsl
addb
mov
ret
mov
and
mov
ds
idiv
or
mov
enter
sub
pop
jmp
xchg
repnz
cmpsl
add
push
or
mov
aas
out
push
mov
or
aaa
sbb
mov
dec
mov
mov
xchg
mov
out
xlat
fiadds
pop
lret
mov
in
ja
adc
pop
fs
or
shll
pslld
test
adc
cmc
dec
push
popf
shrl
pop
add
fwait
xor
ss
cmp
sbb
sub
shlb
shrl
push
xor
xchg
cmp
std
movb
mov
cmp
dec
into
push
js
fcoml
pushf
mov
fdivrl
in
jge
push
ja
rcll
iret
imul
loopne
out
inc
pop
rorl
inc
pop
ja
in
ljmp
xchg
xor
mov
cli
ja
cmp
sbb
mov
test
fnstsw
push
push
cmp
popf
fisubs
fidivl
inc
add
cmp
ljmp
jb
leave
jp
dec
int3
js
jmp
sub
insb
lret
popf
popf
inc
scas
mov
mov
int3
ret
test
push
out
lea
ret
xchg
xchg
cwtl
enter
out
das
jecxz
dec
addr16
mov
imul
incl
xchg
push
lahf
cmp
divl
mov
divb
aam
lods
shlb
sub
sahf
xchg
jge
cmp
mov
imul
out
jle
int3
mov
inc
out
sbb
mov
jmp
jnp
adc
mov
jge
cmp
hlt
fstpl
ffree
sahf
pop
push
clc
pop
mov
mov
gs
add
mov
cmpsb
aam
test
call
sbb
imul
or
add
cmp
or
clc
cmp
mov
mov
cmpsb
inc
test
jo
inc
aam
out
mov
pop
cmp
pop
movsl
lahf
push
adcb
dec
xlat
xchg
sbb
nopl
cmpsb
fcomip
pshufw
adc
or
lods
push
and
pop
adcl
shll
icebp
jl
xchg
adc
outsl
dec
xor
push
jecxz
inc
mov
or
hlt
add
or
movsb
cli
dec
jno
jmp
ss
ficoms
mov
cltd
xchg
jecxz
aaa
cld
xchg
loopne
inc
sub
fs
mov
adc
add
sub
push
xchg
push
cwtl
mov
out
rcrb
pop
jo
out
jo
sbb
pop
sbb
stos
lods
mov
lock
movsl
xor
or
sti
popf
les
dec
push
sahf
arpl
rcrb
mov
mov
test
add
gs
inc
out
pushf
shrb
sti
test
fisubrs
jae
cmp
sub
out
mov
push
push
mov
mov
or
and
popa
or
call
int
push
scas
in
jmp
push
pop
and
data16
lods
jge
jle
inc
inc
mov
icebp
ss
pop
cmpsb
mov
subl
popa
in
imulb
mov
lods
out
jle
jae
jmp
lock
addb
pop
xor
call
lods
shlb
out
or
adc
subb
test
out
adc
xchg
or
imul
sbb
push
inc
jns
arpl
cli
or
cs
out
dec
pop
mov
inc
into
and
punpckhdq
ret
repz
cltd
cmp
lret
ljmp
stos
adcl
lods
add
scas
add
cwtl
loop
fwait
cwtl
lcall
sbb
movsb
jb
jo
cmp
repnz
mov
movsl
rol
imul
mov
lods
xor
cli
jno
lret
mov
lds
cmp
ficomps
mov
stos
jecxz
sbb
jb
cmp
adc
pusha
leave
xor
test
or
mov
sub
xchg
xor
aas
or
jne
fstps
mov
add
jns
sbb
pop
ja
out
iret
xchg
fildll
pushf
ja
push
xorb
mov
or
daa
in
leave
xor
ss
cmpsb
add
xor
int
rcll
inc
cltd
sbb
add
dec
fcmovb
ret
pop
xchg
adc
pop
and
sbb
hlt
add
movsb
sub
push
subl
adc
enter
mov
cmp
inc
pusha
rorb
outsb
xor
push
mov
mov
mov
push
jg
sub
jl
jo
sub
pop
movsb
cmp
xor
xchg
ret
adc
inc
mov
js
icebp
push
mov
pop
mov
jmp
sbb
das
mov
xchg
mov
xchg
add
rclb
sbb
pop
inc
pop
mov
mov
add
fdivrs
sbb
adc
pop
aad
and
xchg
scas
out
inc
sti
popa
cmp
or
insl
int3
in
xchg
mov
push
sub
dec
push
cli
xor
or
ret
push
in
xchg
xor
cmc
jg
dec
mov
cltd
fdivrs
pop
stos
add
push
push
sbb
add
add
pop
mov
add
int
jnp
gs
lcall
incb
add
and
icebp
inc
push
sub
and
add
shr
out
cmp
iret
orb
xchg
jbe
push
sub
mov
pop
ja
sbb
iret
xor
hlt
cmp
and
mov
cs
mov
ss
or
mov
xchg
aad
int3
add
jecxz
sti
cli
push
jl
cmpsb
add
fsubl
xlat
lock
mov
mov
inc
ja
es
add
mov
or
mov
cmp
sbb
lods
stos
adc
inc
xor
arpl
push
mov
rcrl
adc
sbb
cmp
imul
sub
pop
fdivp
cmpb
xor
ret
pop
and
arpl
jp
add
mov
js
dec
cmp
inc
hlt
je
xchg
inc
dec
sub
movsb
xchg
cltd
pop
ret
lds
xchg
fcomi
dec
inc
loop
pop
inc
add
lock
je
fwait
cmpsl
inc
fisttpll
cmp
daa
xor
dec
jnp
push
popa
adc
xchg
lahf
clc
aad
add
cmpsl
jnp
inc
jl
mov
xchg
sahf
jp
dec
outsl
and
push
cld
ds
cwtl
aas
or
stos
pop
dec
sub
cmp
mov
xlat
pushf
and
dec
mov
cmp
mov
xor
ror
or
jge
loopne
cmp
repnz
xchg
inc
push
bound
push
xchg
xor
jns
jae
or
and
jmp
lds
movsb
cmp
or
mov
mov
fnstcw
je
pop
lret
pmulhw
js
fistpl
lea
stos
movsb
sbb
dec
ret
xchg
stos
xchg
xor
cmp
fstps
mov
inc
jno
adc
div
gs
enter
nop
popa
xchg
dec
xor
jp
lcall
sbb
cmp
mov
xchg
cmp
outsl
loopne
loopne
cmp
ja
mov
push
dec
add
cmp
adcb
cmp
and
js
aad
pop
dec
and
les
sub
stos
push
xchg
mov
addb
inc
xchg
xchg
xchg
sub
stos
sarl
push
sub
add
xchg
imull
iret
sbb
push
fidivl
adc
add
mov
dec
and
jg
test
xchg
or
movl
daa
je
mov
mov
popf
inc
xor
ret
fidivl
fcomi
pop
jne
mov
aaa
and
push
outsb
pop
rcrl
cmp
sub
int
fcomps
mov
push
inc
mov
mov
push
inc
fisubrl
sbbl
mov
lret
adc
xchg
rcll
cld
mov
and
ds
cltd
inc
enter
shr
popf
jbe
xchg
sahf
sub
fcomp
dec
jne
lret
pop
shrl
enter
mov
shlb
push
movsb
leave
add
add
jnp
mov
xchg
pop
mov
jg
adc
adc
xchg
fisubs
add
adc
dec
test
cmp
xor
ret
lret
lds
clc
in
jo
jle
daa
or
bnd
xor
jecxz
mov
je
mov
inc
lods
or
fcompl
cmpsl
shlb
mov
mov
out
lret
inc
dec
in
xchg
es
sub
push
insl
cli
stc
adc
aad
xchg
xor
lret
aad
std
popa
jae
sub
arpl
adc
mov
clc
add
repnz
adc
lods
jo
push
add
clc
data16
aam
jb
leave
psadbw
movsl
and
xorl
ljmp
in
js
push
mov
inc
xchg
lods
cwtl
stos
cmpsb
mov
cltd
and
pop
movsb
std
mov
cmpsl
adc
gs
xchg
adc
add
inc
adc
arpl
test
sarl
sarb
xor
mov
mov
inc
add
xor
imul
sub
mov
push
sub
jmp
lock
loope
xchg
sar
fcmove
aas
mov
leave
xchg
loopne
mov
mov
jp
inc
mov
repnz
mov
add
ret
fistpll
mov
cmovnp
cs
mov
xchg
sub
cld
or
fdivl
pusha
stc
inc
int
imul
fistl
add
pushf
xor
adc
mov
ljmp
xchg
loopne
lock
mov
jg
pop
pop
mov
fcmovnb
pushf
xor
sub
mov
sub
jmp
clc
xlat
cmp
sahf
sbbl
jnp
mov
cltd
repz
aam
jg
jnp
aam
loope
aas
orb
or
xor
or
push
mov
xchg
imul
into
xchg
out
add
jne
outsb
mov
xor
cs
shrl
and
fwait
mov
cmp
push
mov
loopne
das
icebp
inc
stc
jo
aaa
aad
in
hlt
add
call
cltd
in
sbbl
push
cltd
loopne
int3
adc
jmp
jp
loop
sbb
push
std
iret
fwait
mov
pop
push
jb
and
repnz
xor
pop
outsb
cltd
push
fdivrs
test
fidivrl
push
cmp
sub
jne
cmpl
sub
sbb
add
lret
mov
and
imul
test
test
and
jmp
out
adc
mov
in
les
push
add
inc
leave
and
iret
std
sub
repnz
mov
insl
pop
popf
pusha
rclb
jb
ljmp
sub
inc
inc
sti
int3
jge
sbb
mov
std
sbb
ljmp
es
cmp
fadd
pop
mov
fmul
sub
out
adc
sub
xor
lcall
mov
pop
stos
dec
inc
je
jmp
xchg
stc
ja
mov
arpl
mov
fistpll
test
std
push
xor
shlb
shrl
testl
ss
or
cld
stc
ficompl
ds
mov
dec
push
mov
repnz
adc
fdiv
push
push
insl
push
lret
inc
push
andl
jne
pop
scas
sbb
negl
lcall
ljmp
inc
jg
aad
mov
xadd
inc
sub
es
ficomps
mov
jo
mov
int
ja
jae
mov
fs
rcrl
add
int
mov
sbb
push
jmp
jg
sbb
push
lock
jbe
mov
or
fcomp
mov
or
and
mov
insl
sub
sarl
sub
test
mov
in
mov
or
outsl
cltd
inc
mov
pop
xor
rorb
test
or
jne
sbb
cmp
mov
inc
scas
or
imul
inc
fimuls
or
mov
xchg
pop
mov
xor
test
adc
fmuls
jbe
adc
mov
sbb
ljmp
xor
add
sbb
inc
xor
push
xchg
mov
insb
push
push
gs
mov
mov
fs
lahf
push
cwtl
in
mov
scas
rorb
jo
cmpsb
mov
xchg
and
mov
imul
pusha
imul
mov
lods
int
gs
sub
stos
test
shlb
lds
mov
outsl
push
add
push
int3
je
dec
js
pop
not
inc
push
mov
fdivs
inc
mov
jb
cmp
fwait
cmp
cmpsl
jecxz
in
inc
cmp
mov
sti
sahf
push
mov
push
mov
les
lds
outsl
aas
mov
mov
insb
jae
push
mov
fidivrl
sbb
xchg
imul
pushf
cmp
sbb
inc
ja
repz
dec
xchg
sti
and
dec
loope
mov
cmp
adc
adc
pop
push
mov
mov
sbb
pop
adc
mov
addr16
pop
sarl
jmp
popa
loope
jno
gs
or
inc
ret
mov
cmpsb
inc
inc
out
sbb
movsb
mov
js
xchg
sub
aam
jns
imul
cmp
dec
movsb
xlat
gs
inc
stos
and
test
jp
dec
into
adc
popf
aas
inc
jns
adc
adc
inc
clc
inc
xchg
in
in
pop
push
xor
add
aas
xchg
insb
rclb
dec
in
pop
xchg
sub
vpand
jb
sub
sti
push
jmp
mov
fwait
sub
pop
push
cli
icebp
ficoml
adc
xchg
outsl
push
out
add
sahf
pop
xchg
xor
aad
xor
sub
shl
es
pop
rcrb
stos
sub
xor
stos
in
xchg
lret
aas
push
lock
sbb
pop
stos
add
lock
in
push
fcmovnbe
cmpsl
mov
sub
pusha
sbb
sahf
mov
mov
cmpsb
aad
push
mov
add
lret
loopne
mov
leave
in
inc
les
or
and
icebp
jb
dec
xor
les
cmp
movsl
call
jb
loopne
popa
nop
aad
xlat
xorb
pushf
rorl
xchg
jo
leave
pop
push
ljmp
adcl
inc
stc
pop
insb
fistpll
aaa
fdivp
test
mov
popf
loope
push
jecxz
mov
movsb
and
sbb
mov
dec
mov
imul
icebp
call
xorb
jns
bound
mov
aaa
daa
sbb
mov
push
rcr
in
push
nop
cld
xchg
outsl
dec
fcomps
aaa
mov
adc
dec
add
lahf
mov
scas
add
jns
and
loop
les
arpl
xor
cmp
push
stos
pop
pop
js
dec
aas
hlt
dec
xor
stos
jle
incl
imul
loope
daa
ret
incb
pushf
sub
into
leave
push
push
cmp
jl
out
into
ss
push
pushf
push
jae
fldt
lret
dec
neg
lods
in
fcoms
andl
aam
cmc
pop
aas
in
out
jg
scas
push
cli
cs
push
mov
xorl
and
jl
andb
pcmpgtb
sub
movl
fsub
push
jb
incb
cmp
das
dec
xchg
lods
xor
adc
hlt
mov
mov
xor
fdiv
hlt
sbb
fildll
jecxz
dec
xchg
pop
mov
xor
movsl
decb
pop
mov
adc
inc
xor
xchg
repz
or
in
add
adc
mov
add
mov
out
repnz
sbb
inc
cld
xor
jl
ficomps
icebp
pop
push
xchg
aaa
gs
dec
addb
and
push
xor
or
inc
pop
jecxz
dec
insb
pop
mov
dec
aas
fstps
xchg
inc
iret
or
mov
adc
adc
in
jle
dec
add
je
idivb
fisubs
add
jecxz
in
sbb
cli
hlt
dec
xchg
mov
mov
movsb
or
scas
mov
data16
mov
lock
sub
shl
add
add
dec
mov
stos
pop
std
jmp
mov
mov
lahf
ljmp
xchg
adc
jecxz
movsl
jo
and
dec
cmpsl
fs
stc
cwtl
add
out
cmc
add
int3
adc
xor
fdivp
and
pusha
push
addr16
or
lahf
push
out
rol
sub
pusha
and
mov
shr
cmp
push
cmp
enter
push
add
mov
mov
bound
imulb
mov
or
ficomps
ja
cmp
bound
inc
sbb
mov
stos
in
sbb
dec
test
pushl
loope
ja
outsb
div
jmp
xchg
or
sbb
xchg
push
dec
xor
sub
jecxz
cwtl
cs
dec
loopne
mov
aaa
repnz
adc
popf
xchg
push
repnz
outsl
mov
cmc
xchg
lea
fs
ret
inc
std
mov
mov
pop
xlat
loop
into
adc
icebp
ljmp
into
lcall
call
xlat
dec
nop
push
dec
out
addr16
mov
sbb
jle
pop
scas
cmpsb
jb
jne
or
pushf
ds
pop
pop
sbb
sub
pop
or
roll
or
mov
bswap
pop
iret
cli
and
mov
push
call
sti
into
xor
fs
add
ffree
stos
jae
jp
popf
inc
loopne
rcrl
out
push
pushf
xchg
sub
test
cmpsl
push
add
jbe
pop
inc
adc
shl
rcr
push
pop
dec
jle
lahf
cwtl
cmpsl
repz
in
loop
xchg
stos
lds
or
or
or
imul
inc
dec
mov
pop
imul
jae
lahf
lret
repz
mov
insl
mov
or
push
mov
jo
mov
sbb
and
fs
in
jg
pop
jno
push
mov
mov
dec
cwtl
std
sahf
cmc
push
cs
and
push
imul
jle
daa
fsts
je
inc
mov
push
daa
std
aaa
or
ljmp
sbb
into
into
pop
mov
roll
jns
filds
stc
jo
movsb
cmp
repz
or
fistpll
xchg
int
icebp
inc
fmull
lret
ret
arpl
pop
pop
adc
push
mov
or
stos
iret
arpl
and
xor
sub
mov
movsl
push
sahf
xchg
lods
xchg
jmp
mov
cmpsl
test
cmp
ds
popf
mov
cwtl
mov
mov
idivl
mov
arpl
xor
push
jge
mov
rcrb
mov
lea
jne
jle
cmp
pop
pop
inc
insl
ja
push
jecxz
icebp
loope
inc
insl
inc
popa
ja
int
cli
or
jecxz,pt
roll
mov
adc
jae
mov
daa
mov
push
icebp
push
jecxz
adc
dec
jmp
fildl
fiadds
mov
fimull
ret
test
insb
sbb
out
fwait
shlb
mov
mov
push
dec
and
insb
mov
add
into
and
rolb
jne
ljmp
rorl
repnz
sub
popf
test
clc
out
out
push
loopne
sahf
fistl
jne
cmp
imul
push
imul
rcll
push
je
xor
mov
sub
pop
lods
aam
add
push
xor
xor
cwtl
mov
je
sbb
mov
jnp
mov
int
nop
jecxz
lret
repnz
sarb
lahf
pop
pop
sarb
cmpsl
jno
test
mov
popa
sub
mov
add
rorl
fistl
push
jae
inc
sbb
mov
cmc
ja
mov
push
lock
in
and
popf
jbe
pop
sub
xchg
dec
pushl
mov
add
repz
je
and
push
pop
out
and
dec
jg
arpl
fnstenv
and
out
ret
pop
dec
xchg
in
js
sahf
jae
stc
push
xchg
xchg
aas
add
jecxz
imul
pushl
mov
popf
into
mov
fwait
adc
ja
jle
mov
sub
repz
cmp
pop
add
test
adc
pop
sub
int3
pop
push
popa
jae
mov
ljmp
add
jb
adc
pop
xchg
sbb
pop
movsl
push
mov
push
add
in
mov
je
inc
mov
aad
leave
mov
sarb
test
movsb
xchg
dec
dec
sub
aad
mov
push
push
push
or
pop
rclb
cld
add
pop
lock
out
iret
cmpsb
aaa
ror
pop
imul
nop
or
inc
test
sbb
dec
shr
cld
xor
mov
in
pusha
cmpsb
imul
jne
aas
lret
jb
cld
andb
out
jbe
cmp
sbb
ljmp
insl
sbb
pop
add
mov
out
mov
outsl
dec
enter
into
loope
mov
fucomp
call
stc
pop
jno
xchg
shl
sub
jecxz
and
sahf
daa
clc
movl
push
add
mov
cmp
mov
xchg
cs
outsb
mov
sbb
jnp
ja
lods
hlt
test
rcl
movsb
dec
or
adc
sbbl
out
in
cmp
mov
dec
jl
xor
mov
push
and
cli
cli
test
xchg
mov
add
rcrb
iret
adc
insb
sbb
jo
dec
cwtl
int
shr
je
pop
out
rcll
out
mov
imul
mov
sarb
movsl
cmp
add
xor
into
stc
pop
jns
add
loope
testb
push
or
mov
movsb
or
shrb
adc
and
xor
inc
scas
jns
lret
call
mov
in
adc
pop
inc
inc
out
sub
mov
test
sbb
mov
lcall
or
jno
dec
mov
dec
sub
push
add
pop
addr16
clc
enter
hlt
jae
out
pop
lahf
jle
cmp
adc
inc
ficompl
out
shrb
std
sbb
push
mov
cmp
iret
inc
lahf
cmpsl
lret
int3
aam
out
adc
pop
sti
arpl
cmp
in
fimull
sub
outsl
fimull
pop
and
fwait
lods
xchg
xchg
std
test
ret
addr16
mov
dec
sbb
stos
in
aad
bound
popl
jge
fs
loopne
pmuludq
lea
inc
jmp
xlat
out
pop
js
cmc
movsl
aam
insb
xor
ljmp
addr16
xor
xchg
shlb
clc
out
loope
out
imul
pop
stos
cmp
dec
jle
jns
arpl
xchg
cmove
or
fistpl
popa
push
lahf
dec
jg
mov
inc
mov
or
mov
sbb
and
pusha
fstl
adc
push
data16
test
jbe
arpl
mov
rcl
fdiv
dec
and
cli
repnz
lods
mov
sub
test
mov
dec
arpl
mov
dec
rcl
aam
push
jl
mov
sbb
lea
dec
rcrb
les
mov
cmpsb
inc
out
loop
mov
sti
daa
das
lret
stos
iret
or
fisubrs
sti
pop
cmovns
test
ret
addr16
jae
and
mov
mov
pop
loope
sbb
orb
test
mov
daa
jmp
xchg
hlt
add
mov
dec
cmp
cmp
mov
jle
lahf
adc
dec
dec
arpl
mov
movsl
xchg
imul
lods
int
adc
std
dec
sub
mov
or
rcrl
xchg
fdivr
or
sti
flds
and
sbb
pop
mov
sub
push
mov
dec
and
adc
out
mov
aam
sub
mov
sbb
fdivr
jo
jge
fwait
pop
cwtl
sbb
lcall
iret
lret
aaa
into
addr16
and
mov
mov
mov
test
cmp
mov
jg
dec
adc
psrlq
push
mov
inc
dec
bound
xchg
cmp
in
xor
stos
mov
sub
stc
scas
test
addl
dec
leave
mov
inc
out
jno
sbb
sbb
inc
cltd
das
cmp
lret
es
sub
test
loope
pushf
out
mov
add
popf
adc
imul
popa
push
xchg
push
out
pusha
inc
pop
or
cmp
or
leave
xor
jns
pop
lret
jo
sahf
out
shll
test
or
push
bound
mov
xchg
and
mov
mov
insb
fidivrs
ljmp
ds
ljmp
dec
mov
dec
fmull
sbb
push
pop
dec
push
push
inc
ror
add
push
add
and
adc
mov
sahf
xor
jp
push
xchg
aad
lds
and
or
or
push
mull
mov
and
push
stos
insb
push
xchg
push
repz
out
pop
xchg
pop
xor
ja
cmc
les
xlat
mov
sub
ljmp
or
mov
iret
sbb
xor
fdivr
call
add
fcmovbe
xchg
daa
lret
cld
xchg
in
cwtl
andl
or
jnp
add
data16
lds
cmpsb
add
dec
xor
fst
hlt
ja
scas
pop
push
xchg
xor
jge
or
add
cmc
pushf
stos
xchg
cmpsl
adc
psubsw
dec
mov
pusha
in
js
xor
sti
data16
adcl
dec
push
in
push
aad
or
les
cmpsl
fs
add
dec
mov
int3
dec
frstor
mul
fmul
stos
lods
push
mov
pusha
push
xorb
xchg
das
cli
test
lods
mov
lcall
mov
dec
mov
xchg
out
into
push
push
fnstsw
rclb
fwait
xchg
test
enter
push
cwtl
in
loop
or
mov
sub
cmp
leave
test
cwtl
hlt
je
cmc
cmp
ret
imul
adc
mov
jecxz
outsl
enter
ss
cli
push
or
inc
fiaddl
mov
cmp
push
mov
jno
xchg
pop
jno
xchg
push
cli
jae
inc
popf
pushf
push
adc
int3
dec
xor
sahf
arpl
mov
inc
lcall
out
mov
pusha
outsl
xchg
js
and
rcl
out
xor
hlt
stos
cli
and
xor
xor
rcll
stos
das
icebp
popf
cmp
cmp
ja
sbb
stos
lret
jecxz
adc
outsl
outsl
or
neg
rcrl
nop
mov
outsb
outsb
xchg
test
lahf
pop
imul
sub
imul
push
or
fidivrl
movsb
mov
and
xchg
sbbb
dec
jp
add
adc
shlb
xchg
into
pop
jnp
or
xchg
mov
lret
jae
sub
push
insl
enter
dec
mov
inc
in
dec
hlt
lea
shrl
popa
test
shrb
jp
jp
push
pop
aaa
or
jns
or
adc
je
bound
jle
pop
xchg
stc
pop
les
stos
test
pop
int3
ret
or
repz
mov
flds
repz
iret
aas
lds
sbb
mov
aaa
sbb
imul
ret
xor
in
add
rol
mov
icebp
jle
jnp
adc
and
loope
add
jb
add
add
mov
loop
outsl
shr
loope
shlb
dec
pop
and
push
mov
push
add
jg
popf
outsb
jo
int
dec
icebp
dec
fsubs
pushf
dec
mov
mov
jle
xchg
in
dec
fwait
daa
xchg
rcrl
stos
ss
sar
cmp
imul
daa
adcb
cli
test
sbb
call
mov
mov
add
lret
xchg
int
outsb
int3
sti
add
stc
dec
sahf
pop
mov
test
cld
fs
aam
jae
adc
inc
es
mov
mov
loop
inc
or
dec
movsb
stos
mov
bswap
popf
outsb
jmp
icebp
loopne
mov
inc
push
jne
mov
mov
add
jg
push
imul
jmp
or
cmpsb
jno
imul
out
adc
test
inc
int3
movsl
cmp
testb
cmp
out
icebp
repnz
mov
mov
repnz
rcl
in
imull
sub
jno
cmc
pop
mov
or
adc
dec
adc
int
sbb
jb
cmpsw
sbb
sub
add
lret
pop
cmp
lods
movsl
xchg
std
cltd
and
test
ja
push
and
arpl
and
pop
jg
movsl
stos
mov
cmc
mov
mov
inc
pop
push
jle
daa
fwait
add
sub
js
pop
add
xchg
pop
or
dec
mov
dec
pop
mov
je
ret
and
sti
fucomp
scas
cmpsl
mov
cmp
sub
cwtl
adc
or
lods
add
mov
adc
addl
mov
mov
mov
inc
in
jne
imul
fdivrl
mov
imul
out
and
sbb
cmp
fldenv
fs
icebp
dec
cmp
lahf
loope
mov
decb
xchg
pop
pop
jl
mov
imul
inc
aas
leave
mov
lahf
xchg
and
pop
adcb
out
pop
push
pcmpeqw
out
jb
hlt
mov
adc
std
ljmp
and
stos
scas
pop
inc
jle
call
gs
xchg
mov
fistpl
ss
dec
adc
pop
fsubs
xor
ds
popa
shl
sub
inc
dec
nop
leave
sbb
pop
pop
repz
xchg
sti
cmp
dec
mov
push
rclb
xchg
sbb
add
mov
fcmovnbe
loope
mov
xchg
cmp
das
or
cs
in
mov
push
cmp
shl
jle
outsb
into
adc
icebp
add
push
and
subb
ret
test
daa
call
push
bound
mov
sbb
inc
orb
xchg
sbb
sbb
hlt
ret
mov
jle
sbb
mov
or
jns
das
icebp
test
pop
leave
xchg
divl
stos
add
jbe
jnp
push
pop
in
popf
stos
sbb
inc
add
jno
test
shll
fildl
out
mov
sub
cmp
faddl
inc
adc
or
sbb
push
mov
mov
and
mov
fistps
cmpsl
fwait
or
inc
mov
shll
jnp
add
hlt
xchg
sbb
and
in
sbb
push
mov
sub
cmp
outsb
pop
xchg
aad
sbbb
jb
fistpl
jbe
and
add
pop
and
insl
sbbb
and
fnstsw
mov
mov
inc
pop
push
aaa
mov
mov
fs
jmp
sbb
fwait
divl
daa
cmp
cmp
int3
loop
dec
xchg
fistpll
mov
adc
inc
aas
inc
popa
xchg
scas
push
pop
jle
test
aam
or
mov
stc
xlat
fs
add
mov
hlt
xor
jno
xor
mov
fnstcw
fs
mov
pop
outsl
xor
xchg
pop
push
orl
xchg
and
xchg
mov
inc
fiadds
in
stos
xchg
mov
push
xchg
ds
mov
test
int3
std
xorb
and
aas
mov
jg
and
sar
adc
fimuls
es
mov
xchg
je
or
scas
push
filds
inc
arpl
adc
xchg
stos
fwait
scas
outsb
jp
xor
xor
lods
mov
and
pop
loop
and
in
pop
inc
clc
int3
std
int
std
or
sar
sbb
test
cmp
les
fisttpl
and
add
xchg
cwtl
movsb
or
out
or
pop
in
xchg
jmp
das
push
pop
loop
jns
cmp
or
jecxz
push
jecxz
shlb
or
adc
pop
lods
cmp
dec
fdivrs
cwtl
cmp
arpl
dec
insl
xchg
jns
dec
push
mov
mov
mov
mov
out
push
mov
mov
fisubrs
mov
pop
sahf
mov
aaa
xor
mov
sub
sub
xor
adc
cwtl
xchg
jmp
in
and
and
or
ss
enter
mov
iret
xchg
ja
dec
imull
fdecstp
or
mov
mov
cmp
popf
test
mov
daa
sbb
jp
sbb
test
arpl
push
lahf
dec
int3
cmpsb
mov
dec
bound
sbb
sbb
cmp
das
add
xchg
loop
push
loop
sbb
or
xchg
negb
mov
cmc
adc
mov
repnz
xchg
lock
or
mov
movsl
aam
xorb
inc
rcrl
rcrb
mov
sbbb
or
mov
iret
test
aad
pop
push
inc
aad
jmp
dec
cmc
xor
push
sbb
inc
or
setp
ja
fisttpll
push
push
arpl
aad
pop
xchg
into
xchg
rcrb
fnstsw
adc
cld
and
mov
inc
ret
das
pop
and
test
aaa
dec
imul
push
cli
mov
mov
xchg
testl
outsl
clc
push
ffree
fstpt
push
mov
lcall
orl
andb
pop
pop
idivb
lds
int3
rolb
inc
scas
mov
lret
test
aas
mov
gs
out
jne
dec
sbb
xchg
imul
or
adc
mov
and
cwtl
cli
out
mov
mov
cmp
pop
xchg
sti
jmp
pop
xor
mov
scas
fidivrs
into
and
out
cmp
jae
mov
out
mov
cmp
jnp
aas
xchg
cmpsl
lea
call
push
insl
test
rorl
fimuls
adc
push
or
std
ret
cmpb
xor
pop
mov
jp
das
mov
dec
xor
dec
jle
lret
pop
push
test
jne
adc
lret
mov
or
ret
popa
rcrb
leave
add
cld
push
push
sub
pusha
outsb
dec
es
push
mov
inc
iret
rcll
shlb
aaa
xchg
fnstenv
out
adc
sub
cs
sub
cld
bound
fnsave
fwait
cs
call
cmp
in
movsb
and
xchg
add
test
ss
leave
mov
mov
bound
idiv
ljmp
ja
fwait
lock
int
fiadds
shr
pop
dec
mov
add
jne
ret
loopne
jmp
xlat
gs
mov
xchg
shlb
dec
sub
int
pop
mov
mov
or
jae
dec
test
cmp
adc
inc
xchg
inc
or
dec
in
push
pop
fstpl
les
pop
jg
xchg
mov
mov
cmp
mov
jge
cld
scas
outsl
pop
jecxz
adcl
dec
cmp
in
jmp
gs
mov
adc
push
add
sbb
mov
cs
or
aam
daa
sub
or
jbe
push
add
mov
inc
fsubrs
pop
dec
jecxz
stos
aaa
or
dec
int
mov
push
shll
add
scas
addl
xchg
dec
cmp
pop
lods
shlb
cmpsl
push
loop
pop
lahf
mov
inc
mov
push
xchg
fnstenv
out
mov
inc
adc
adc
test
and
pop
jne
jb
out
and
adc
dec
rcr
enter
adc
sub
xorb
xor
out
loopne
shll
les
mov
pop
movsb
scas
aaa
ds
push
mov
in
into
cmp
inc
bound
sbb
test
sarl
bound
fidivrl
orb
out
jecxz
pop
fbld
pushf
popf
lret
in
or
xor
pushf
xchg
icebp
mov
xor
xchg
repnz
cltd
subb
sbb
jnp
inc
push
daa
mov
inc
xchg
insb
cs
movsl
lret
ffree
inc
push
rclb
data16
xchg
mov
cmp
std
cli
jns
js
call
clc
ja
push
adc
gs
mov
sbb
ret
imul
sahf
push
icebp
imul
ret
mov
cmpsb
push
sbb
sbb
inc
lods
cmpsb
adc
sarb
subl
rorb
mov
pushl
shll
sub
inc
inc
aas
in
pushl
pop
insl
add
in
aaa
imul
adc
das
xor
enter
scas
shr
sub
xchg
jae
xchg
loopne
cld
dec
fcom
or
mov
cmc
jnp
inc
divb
mov
and
cltd
js
sub
sbb
paddw
and
dec
mov
and
push
cmp
sbbb
push
out
es
pop
push
lods
in
shr
in
out
std
fdivl
mov
dec
insb
cmp
fiadds
sti
ljmp
rcrl
dec
aam
leave
fdivs
inc
popa
jne
enter
filds
fistpll
adc
divl
out
cwtl
fldenv
cmp
fisubl
push
xor
xchg
jg
push
mov
push
mov
pop
push
popa
mov
jns
inc
aaa
xor
push
dec
inc
cmp
icebp
xor
mov
loope
mov
jb
xchg
movsb
shll
cmp
sub
mov
and
lds
push
flds
je
dec
adc
and
in
jge
inc
outsb
sub
fs
mov
test
clc
pop
dec
mov
jae
aaa
jle
dec
insb
fwait
and
out
fs
pushf
inc
inc
or
out
fists
lret
xor
rorb
bswap
xchg
adcb
push
push
scas
lea
push
dec
sbb
shl
mov
cld
fsubp
cmp
push
dec
push
jb
mov
sub
push
xchg
ror
ret
lods
sub
int3
in
pushf
push
mov
adc
jns
aaa
add
xchg
xor
inc
mov
xorb
jbe
into
das
dec
outsl
icebp
push
or
push
dec
add
sti
scas
inc
int3
jmp
sti
jmp
lods
jecxz
fwait
fs
xchg
cmp
cmp
arpl
fidivrl
loop
test
in
insl
popa
mov
lods
fdivrl
dec
imul
mov
lds
sbb
decb
sbb
data16
scas
add
sub
push
imul
stos
push
stc
or
aad
xor
test
aaa
repz
loope
pop
cs
mov
push
push
and
pusha
dec
mov
ja
stos
adc
jl
mov
jns
mov
push
adc
adc
xchg
es
test
aad
cwtl
mov
loopne,pn
xor
outsl
fld
add
aaa
adc
aad
adc
xchg
xor
mov
push
mov
or
loope
ret
std
imull
das
pop
repz
pushf
or
jp
mov
stos
xchg
inc
push
popf
sahf
dec
pop
test
mov
mov
das
sbb
and
or
loop
adc
jne
sub
inc
mov
xchg
popf
or
insl
loopne
addr16
cmpsb
sbb
push
sti
inc
pushf
bound
je
mov
mov
pop
or
into
xchg
repz
clc
sub
sub
sub
into
jnp
sub
dec
sti
sub
ja
jg
or
ss
hlt
arpl
sti
xchg
loop
jg
pop
cmp
jnp
stc
pop
aas
inc
dec
rolb
mov
ret
pushf
xchg
xor
push
mov
nop
inc
xchg
adc
int
jp
cld
pop
inc
jmp
pushl
sarb
pop
loope
sbb
orb
jge
add
mov
push
pop
xchg
sbb
push
push
fldpi
lret
sbb
add
jmp
adc
sbb
cmp
fs
sub
out
push
mov
and
jo
lock
adc
xor
lds
out
sub
mov
mov
das
es
xor
and
mov
add
mov
push
pop
adc
jo
sarb
mov
xchg
pop
dec
xchg
push
and
adc
dec
xchg
adc
popf
andl
out
push
fisttpll
ljmp
mov
out
pop
mov
lods
mov
sahf
insb
icebp
jecxz
lret
mov
sbb
movb
mov
push
mov
rcrb
and
ss
pop
jle
jno
jbe
shlb
mov
arpl
pop
out
pop
outsb
cwtl
pop
mov
xchg
xor
jmp
loopne
xchg
fdivrs
jno
sbb
pop
pop
or
pop
fdivs
rorb
jmp
mov
jge
mov
add
test
lods
fs
daa
jg
arpl
sbb
outsl
imul
movsl
dec
repnz
jns
in
inc
jp
popf
out
cld
ja
adc
int3
push
sub
loope
mov
pop
sbb
popf
ret
test
sahf
mov
aad
es
sti
xchg
dec
push
jg
cmp
mov
or
inc
xchg
ja
mov
pop
stos
lcall
sbb
jmp
fsub
stc
ffreep
cmp
jbe
adc
clc
mov
icebp
lods
test
lret
add
mov
out
cmp
jnp
add
aam
lods
repz
pop
push
andb
fbstp
mov
ss
inc
icebp
cs
add
stos
jle
int
pop
jnp
ja
pop
jmp
test
fists
xchg
testl
inc
imul
in
ficoml
or
lret
cmp
stc
adc
ljmp
std
add
or
sbbl
cmp
mov
and
aad
mov
xchg
and
ja
ss
dec
idivb
cmpb
cmc
outsb
pop
lea
cwtl
les
popf
pop
mov
xorl
push
dec
cmp
rol
xor
std
mov
add
mov
gs
mov
mov
sbb
hlt
push
jbe
lods
insb
cli
test
jne
jns
loope
invd
add
bound
inc
test
adc
testl
shr
notb
pusha
outsb
sbb
dec
cs
or
jbe
lea
data16
pop
gs
pop
or
sbb
pop
popa
roll
jp
mov
jg
jnp
push
outsb
repnz
out
sbb
mov
cmpsl
mov
ficomps
xor
shll
das
insl
mov
push
xchg
roll
dec
mov
mov
fildl
mov
lods
jnp
cld
adc
mov
and
adc
or
push
xchg
andl
mov
jae
incb
mov
mov
sbb
mov
in
clc
cmp
imul
jp
addr16
cwtl
sbb
jno
popf
dec
xchg
add
rol
jmp
lea
nop
jmp
push
pop
lret
incl
insl
cmp
push
cltd
push
movb
stc
stos
enter
bound
inc
mov
popf
add
jmp
shrb
repnz
lahf
pop
adc
dec
dec
repnz
aaa
cli
addr16
add
lds
xchg
sbbl
icebp
sbb
push
fiaddl
sub
jp
or
pop
xchg
pushf
out
cmpsl
push
dec
add
sbb
pop
enter
sub
popf
mov
repnz
pushf
enter
fisubrs
mov
pop
sti
out
jbe
aas
repz
xor
mulb
scas
pop
test
movsl
shll
push
stos
cli
shrb
or
push
popfw
jns
dec
fldl2t
cmp
cmp
or
es
leave
lods
dec
sub
push
inc
sbb
cmp
jns
or
ficomps
xchg
xor
pop
cmp
jb
in
dec
mov
pop
mov
xchg
test
jl
clc
jg
je
xchg
dec
cmp
add
dec
add
lcall
icebp
and
pushf
nop
jmp
sets
mov
mov
jmp
stos
ljmp
repz
movsl
inc
adc
push
dec
or
int3
cmp
adc
push
sub
push
jg
mov
push
fldt
das
out
pusha
xor
adc
push
dec
daa
ds
sbb
stos
mov
sub
pop
sbb
dec
cltd
push
shll
daa
push
lcall
inc
ret
mov
mov
cld
sbb
pop
cmpsl
daa
iret
js
insb
push
fisubrs
sbbb
hlt
mov
icebp
stos
mov
je
lret
insl
adc
lret
loop
mov
imul
in
xchg
sbb
inc
outsb
push
icebp
testb
cs
lock
pop
adc
ds
xchg
orl
inc
mov
fldl
cli
or
sub
push
pop
xlat
xor
lea
and
mov
ljmp
mov
loopne
out
cmp
loope
push
inc
fs
rolb
xlat
xor
push
movl
ss
stos
shrb
and
push
sbb
jg
mov
imul
imul
jno
inc
mov
pop
cs
das
xor
dec
lds
jbe
ret
ror
stos
jmp
lock
cltd
dec
lret
push
sub
mov
fdivl
adc
loope
xchg
xchg
loopne
cmp
in
add
sbb
adcb
or
add
mov
int
xchg
scas
sub
adc
pop
dec
sub
imul
mov
sbb
xor
jo
out
push
in
sub
into
insb
mov
aad
cmpsl
ret
mov
aas
inc
xlat
rcr
sbb
imul
hlt
ret
push
mov
mov
ljmp
sahf
test
push
out
popf
mov
xchg
xor
fistpll
aaa
cmp
inc
popa
xchg
xchg
andb
je
jnp
cwtl
out
sub
or
std
jg
xchg
setp
sub
ret
mov
or
scas
test
inc
xchg
mov
das
xor
lahf
mov
push
ss
xor
bound
outsb
cmp
jmp
jp
push
inc
cmp
loopne
push
inc
inc
mov
nop
xor
xchg
and
pop
xchg
xor
lock
pushf
shll
std
xor
enter
dec
repnz
or
fwait
pop
nop
bound
sub
lret
lea
sbb
cmp
ss
notl
aaa
repnz
aaa
mov
lahf
or
xlat
shll
mull
andb
imul
xor
mov
movb
in
pop
lahf
mov
int3
lods
into
fnstsw
je
fdivl
ret
sbb
popa
sar
outsl
xchg
cmpsl
push
aaa
pop
sbb
ret
test
test
and
jne
xchg
xor
adc
mov
je
pusha
xor
ret
mov
sub
popa
add
sub
adc
ja
loopne
xchg
cmpsb
fucomp
das
pushf
pop
cltd
xor
xchg
push
mov
out
mov
addr16
or
pop
lahf
loope
lock
or
lret
mull
les
jns
popf
xchg
ljmp
dec
add
scas
int3
jle
faddp
sbb
rcrb
xor
sbb
iret
lods
jecxz
push
daa
enter
mov
aad
mov
in
aam
in
shlb
xchg
shll
jp
jp
push
cmpsl
bound
in
icebp
push
xlat
scas
aam
rolb
inc
test
movsl
sbb
sbb
in
lock
daa
xor
pop
sbb
test
aad
mov
cmpsl
push
mov
mov
xor
adcb
test
xlat
mov
pop
push
inc
out
mov
mov
sub
lock
xchg
ret
xchg
pushf
xor
movsb
testl
inc
sub
stos
xor
add
shl
lret
xchg
mov
mov
mov
test
cmp
out
scas
cltd
inc
sbb
aas
mov
pop
push
insb
push
inc
inc
pusha
jnp
xchg
cmp
addr16
pop
pop
test
repz
test
ljmp
scas
insl
enter
xor
pusha
jmp
cmpsl
int
pop
pop
and
mov
fadd
adc
dec
aam
pop
insb
pop
xchg
into
aad
xor
mov
mov
mov
jmp
mov
mov
jns
fdivr
jg
rorl
scas
mov
aas
sbb
dec
cwtl
into
push
sarb
sbb
rcll
into
xor
test
sub
mov
imul
loopne
cld
stos
jge
mov
je
push
sub
push
shll
sahf
push
add
xchg
sbb
ss
jbe
add
or
test
sahf
sub
popa
int
imul
cmp
jns
hlt
mov
mov
push
xchg
xchg
daa
mov
jno
stc
xchg
out
cmp
test
test
daa
xchg
xor
sbb
mov
movzwl
les
pop
mov
ljmp
inc
rolb
cltd
das
ds
ror
add
or
push
ds
mov
push
jp
xchg
ret
sbb
or
bound
pop
clc
adc
scas
pop
and
sub
mov
mov
xor
lret
and
sbb
std
pop
xchg
cld
iret
pushf
xchg
mov
insb
movsb
mov
bound
inc
adc
jae
in
mov
xchg
mov
add
push
jle
jmp
xorl
imul
dec
inc
fists
sbb
mov
add
out
adc
push
push
mov
out
out
fs
mov
push
mov
dec
or
sbb
xchg
fwait
cmp
xchg
lahf
iret
or
push
filds
lret
dec
mov
jbe
jae
xor
in
pop
push
cmp
jbe
xor
out
cs
xchg
mov
not
push
jmp
fstpl
popa
nop
jmp
cmp
fwait
addr16
jbe
push
push
int
sti
addb
subb
outsb
out
push
jne
fidivs
jns
jns
fldenv
enter
ret
loopne
inc
jmp
add
dec
cs
sbb
push
dec
dec
or
push
scas
stos
in
mov
mul
or
sbb
mov
pop
mov
clc
mov
mov
jae
mov
arpl
call
scas
icebp
xchg
cmpsl
inc
sbb
loop
push
jge
push
bound
mov
mov
icebp
test
xchg
jns
mov
in
hlt
adc
scas
mov
dec
xchg
adc
imul
and
jp
push
sub
mov
cltd
repz
and
jecxz
add
fs
sbb
push
stc
lock
scas
xor
mulb
dec
push
and
pop
pop
jmp
xchg
add
sbb
sbb
mov
test
pop
f2xm1
dec
jp
ret
ds
inc
xchg
sub
jl
jmp
cmpsl
push
xchg
inc
cmpsl
mov
push
lods
mull
and
mov
adc
mov
xchg
pop
mov
sub
loope
push
in
sti
dec
nop
jle
inc
shll
jns
push
fcmovnb
ret
popa
in
cmc
inc
sub
dec
test
sub
pop
mov
mov
xlat
and
int
jle
xor
loopne
xor
add
ja
ret
inc
jge
add
popa
or
pop
lcall
loopne
dec
clc
mov
lods
and
jmp
fimull
xor
mov
cmp
outsb
jo
das
outsl
mov
cmp
mov
lea
push
mov
pop
das
mov
xchg
cmpsb
adc
mov
jae
mov
inc
pop
movsb
add
add
imul
dec
xor
pop
xchg
mov
push
sub
xor
shll
insl
inc
fidivrl
inc
cmc
push
jl
fwait
mov
in
ret
outsl
xchg
jb
cs
pop
xchg
lret
loopne
or
nop
outsl
pushf
loop
fdivl
mov
or
push
mov
cs
rolb
sub
cmpsl
dec
clc
or
pop
inc
lock
in
add
sbb
lods
mov
ftst
inc
aam
out
dec
imul
xchg
in
xchg
stos
ss
sbb
and
loop
addr16
jb
mov
jns
cmc
mov
mov
adcl
adcl
hlt
jle
pop
adc
adc
jge
ds
out
mov
inc
sbb
andl
jno
mov
push
add
sub
mov
cwtl
cmc
imul
hlt
loopne
sub
loope
movsl
in
cmp
fwait
sub
gs
imul
add
mov
inc
mov
pop
inc
sub
and
lods
or
mov
in
fimuls
mov
call
push
test
xor
test
clc
scas
in
mov
push
scas
push
fisttpll
movsb
ljmp
dec
dec
testl
mov
sbb
sub
arpl
insl
jmp
ljmp
or
xchg
push
fidivs
sub
js
dec
int3
imul
adc
fsubs
dec
adc
movsl
inc
or
pop
cs
in
inc
insb
arpl
pop
out
mov
mov
dec
mov
lds
mov
loop
sub
sbb
jecxz
addb
jmp
or
loope
push
xchg
in
xor
push
add
rcll
mov
cmp
scas
or
or
sub
test
sbb
push
mov
in
sti
jg
inc
cld
insl
lret
out
mov
jnp
push
sub
sbb
daa
out
ret
loope
dec
es
push
mov
je
pop
popa
cmp
jno
jle
aam
ror
mov
sub
aam
loopne
mov
test
mov
sub
rcrb
xor
pop
mov
sti
hlt
mov
bound
pop
movsl
inc
nop
loope
jmp
pushf
out
test
stc
pop
and
xchg
repnz
fbstp
fst
push
pushf
adc
and
data16
add
xchg
shl
enter
in
mov
dec
push
fstpl
push
and
lea
repnz
sub
mov
in
test
xlat
push
es
movsb
or
and
push
and
aaa
cmp
jnp
shll
idivl
cmp
push
pusha
in
scas
cmpsl
adc
nop
or
pop
cs
lds
bound
xchg
pop
mov
add
xor
mov
cmp
out
mov
cmp
fisubs
xor
inc
lcall
cld
add
fsubr
je
popf
dec
push
jae
inc
dec
mov
add
jo
jmp
sbb
jge
cmp
or
and
mov
push
lea
sub
sbb
sbb
cmpsl
pop
cmp
mov
sbb
sub
jne
cmp
test
mov
sbb
sub
negl
iret
sti
jmp
ret
push
pop
xchg
push
lahf
push
insl
xchg
mov
inc
in
xchg
sbb
sbb
mov
jno
lods
in
test
movsl
and
sar
jecxz
jo
ss
pop
jae
int
push
stos
push
or
push
lret
sub
clc
mov
insb
outsl
cmp
jae
add
or
jno
into
jle
jmp
fwait
pop
arpl
inc
imul
lock
lret
push
daa
jns
stc
push
lahf
aaa
mov
xor
cmp
adc
ss
popf
mov
cltd
mov
out
outsb
inc
add
sbb
data16
call
ficoms
cld
xchg
dec
shr
add
into
rcrl
test
lods
pop
cwtl
xchg
pop
pop
lods
mov
sbb
sbb
jecxz
repz
push
jne
hlt
xor
orb
clc
cmc
sbbl
cmpb
mov
gs
cld
in
mov
js
pop
mov
sbb
dec
addr16
out
out
hlt
out
hlt
aas
movsb
mov
pop
cmp
and
sub
mov
mov
mov
jbe
or
lahf
inc
or
mov
fucomip
sbb
mov
or
xchg
xchg
sbb
push
ds
loope
adcb
addr16
adc
or
sbb
push
mov
insb
std
push
test
pop
pop
dec
mov
xchg
and
fcmovb
dec
imul
mov
int3
insl
jge
and
stc
cs
clc
or
dec
lcall
orl
lret
mov
xor
sub
cmp
repz
jecxz
adc
sub
mov
sbb
or
push
mov
mov
push
mov
divb
mov
inc
or
dec
ss
ret
movzwl
or
loop
xorb
push
ds
jp
fwait
aaa
mov
adc
push
xlat
lock
sub
add
scas
clc
das
stos
pop
bound
idivl
mov
jmp
xchg
cmpsb
call
add
out
xchg
aas
push
cmpsl
out
rorl
inc
icebp
sahf
adcw
or
leave
xchg
jle
mov
jno
ret
popf
or
sbb
lods
cs
jg
imul
dec
adc
mov
push
aas
xor
call
imul
mov
or
test
xchg
inc
xor
add
add
daa
xor
jp
xchg
xchg
mov
dec
adc
adc
and
iret
dec
js
sbb
sidtl
imul
sbb
cmpsl
adc
add
pusha
aam
lahf
adc
out
jmp
adc
mov
mov
inc
repz
inc
and
mov
out
push
gs
sbb
cmpsb
pop
push
fisttpl
loopne
ljmp
sub
out
fistps
cmpsl
xchg
and
fbld
popa
mov
cld
aad
xor
xchg
loope
xchg
out
inc
push
notl
jmp
loope
or
pop
shll
or
inc
jmp
ret
cld
inc
jge
add
movsb
mov
mov
sub
in
out
pop
ffree
loopne
sub
repz
arpl
aas
fcoms
mov
xorl
lret
mov
xchg
push
paddd
test
outsb
ja
mov
mov
pop
mov
orl
rorb
dec
ljmp
jo
lods
push
pop
lock
into
mov
push
gs
ljmp
add
stc
pop
dec
in
add
cmp
aas
sbb
push
and
icebp
push
lock
xorb
sti
xchg
fidivs
sbb
je
and
mov
push
adc
retw
fistl
subl
xchg
cwtl
fsubs
sub
loope
add
arpl
dec
adc
out
sbb
stos
cmp
pop
adc
mov
xor
mov
js
jnp
mov
cltd
andb
sbb
mov
repz
js
dec
rcl
add
mov
mov
xchg
int
inc
cltd
sarb
cs
adc
lock
insb
fisubrl
mov
jmp
xor
mov
mov
shr
test
xlat
clc
mov
mov
dec
mov
mov
cli
testb
jns
outsl
xlat
mov
lock
dec
repnz
movsb
out
lods
stc
mov
mov
push
and
movsb
sti
dec
jbe
jmp
arpl
out
pcmpgtd
leave
rorl
shl
sub
sbb
clc
lcall
shlb
aaa
cmp
mov
sbb
andl
aaa
insb
pop
outsb
xchg
loopne
outsb
jns
outsb
xor
test
lcall
mov
cmc
in
mov
out
cmp
out
jb
negb
xchg
in
adc
sti
xor
mov
clc
mulb
and
scas
push
cmp
push
sub
sbb
loope
fmull
fcoms
out
bound
arpl
mov
into
sahf
sub
and
and
xchg
aam
push
and
sub
sub
nop
push
mov
adcb
mov
inc
pop
stc
mov
sbb
xchg
jmp
and
cmp
shl
jge
test
test
shlb
popa
test
pop
mov
pop
cmp
push
sbb
jns
lahf
shlb
and
add
test
icebp
ror
jne
in
adc
pop
cld
sbb
lock
aaa
sbb
jg
mov
je
adc
test
movb
push
mov
je
adc
loope
add
bnd
pop
jae
pop
jne
sbb
cmp
out
jae
clc
mov
jae
mov
xchg
add
add
in
mov
xor
and
and
sub
push
stc
repz
inc
cwtl
jg
or
add
lock
push
push
push
out
and
cmp
xlat
lcall
mov
jecxz
imul
adc
pop
enter
push
push
mov
sbb
inc
scas
loopne
adc
push
dec
addr16
push
inc
and
and
cmc
orl
ret
jb
fisubl
das
lret
xchg
je
movsb
sbb
sarb
outsl
xchg
lahf
movsb
xor
mov
push
sub
loop
cmp
fwait
jno
ret
daa
inc
xor
dec
adc
cmp
std
mov
mov
pop
or
fdivs
cmc
adc
xor
inc
lods
lret
and
out
loop
push
icebp
ret
ss
movsl
mov
in
lock
int
movsb
jle
adc
xor
mov
leave
int
fs
or
pop
pop
mov
pop
mov
adc
ja
mov
add
outsl
repnz
push
jl
es
mov
xor
test
int3
popa
hlt
in
sbb
pop
pop
enter
jns
and
mov
sub
inc
jge
scas
jns
and
or
xlat
ja
loope
sbb
adc
cwtl
shrl
scas
hlt
jnp
mov
sbb
jne
push
pop
shlb
int
outsl
mov
lret
push
cmp
or
cmpsl
lods
sbb
cmpsl
jp
dec
jno
lods
ficompl
divl
stc
stos
inc
push
incb
lods
lahf
adc
fnstcw
mov
jg
cltd
nop
or
mul
cltd
repnz
andb
xor
xchg
mov
cmp
lret
lods
jmp
or
hlt
test
lds
fnstsw
sahf
insb
mov
rclb
lcall
xchg
mov
cmp
lahf
pusha
scas
loope
inc
decl
in
pop
sub
cmpsl
mov
aad
scas
cmp
dec
lret
shlb
mov
arpl
push
sar
or
jns
dec
movmskps
out
in
jae
sahf
fists
cmp
jne
xchg
sub
push
orl
xor
iret
inc
cmp
fs
inc
mov
and
dec
jp
adc
jnp
notl
cmp
dec
xchg
iret
in
jge
out
pop
or
shl
push
sbb
mov
xor
inc
jb
inc
ja
cmp
push
xor
loop
sub
call
sahf
fnstsw
mov
movsl
fs
pop
lea
out
in
mov
gs
and
add
mov
push
jle
add
mov
loopne
xor
fwait
mov
push
cwtl
lahf
fs
xchg
add
fldt
cmpsl
mov
jns
enter
addr16
mov
pop
push
mov
pop
mov
insl
orl
das
or
pop
loopne
adc
enter
xchg
xor
nop
in
lea
rcl
fistl
push
scas
loopne
push
lods
fwait
daa
aam
add
cmpsb
clc
jp
pop
jae
iret
mov
cmpsb
lahf
movsb
ja
cmp
leave
addr16
mov
insb
xor
jmp
jo
insl
adc
decl
fstps
shrl
or
in
adc
xlat
test
sahf
bound
stos
dec
jmp
jns
sbb
cmp
sbbb
push
adc
sub
sub
push
scas
xor
lock
pushf
sbb
inc
lods
and
out
or
imul
push
fiadds
aad
sub
out
lock
add
cltd
aas
stos
out
pop
push
mov
cmp
jl,pn
jg
add
xchg
inc
mov
jg
push
cwtl
add
push
jle
sub
cmpsb
pop
sub
or
jb
call
adc
lret
xchg
mov
xchg
test
jg
xor
pop
pop
cltd
mov
pop
setb
js
pop
mov
popf
cmp
ja
mov
loope
cld
enter
mov
test
popf
pushf
scas
stos
adc
or
iret
mov
xchg
dec
cltd
stc
int
add
push
imul
fists
xchg
jne
pop
das
and
shrb
jmp
mov
arpl
out
or
cld
test
fs
pusha
sbb
scas
xchg
mov
cwtl
fsubl
xlat
jnp
fdivrl
insb
add
add
rcrl
xchg
repnz
scas
sbb
pusha
sbb
shl
cs
pop
mov
sub
das
subl
or
mov
push
xor
andl
outsb
jmp
xlat
jno
and
push
imul
sub
mov
mov
cwtl
out
or
dec
jl
sbb
cmc
roll
pop
mov
mov
jge
jnp
push
adc
bound
pop
repz
push
sub
lods
mov
movsb
mov
decl
imul
xor
xchg
loope
nop
pop
jo
or
leave
add
jp
mulb
mov
movsb
faddl
sub
cwtl
ds
push
push
mov
add
inc
mov
sub
adc
shr
stos
mov
add
pop
dec
repz
std
adc
out
int3
cmp
xor
xchg
adc
push
sar
enter
pop
xor
aas
movsb
lcall
addb
sti
push
test
mov
and
cs
jo
mov
lret
or
cmp
enter
add
pop
mov
jp
lret
mov
xchg
movsl
shl
dec
lcall
stos
sahf
data16
xor
rcl
cli
xchg
mov
outsb
mov
sarb
hlt
fcompl
scas
and
xchg
lds
lret
scas
cli
cmpsl
xor
dec
movsl
mov
test
pop
inc
sbb
repnz
insb
xlat
hlt
in
aas
orl
mov
dec
das
adc
imul
orl
pop
scas
clc
clc
mov
lock
cli
sbb
add
and
test
add
call
lahf
mov
mov
push
xor
cltd
cltd
jecxz
jecxz
je
aam
in
mov
jl
movsl
xor
lock
js
jmp
xchg
pop
mov
and
dec
and
push
imul
ud2
or
dec
add
push
dec
xchg
out
inc
add
js
js
push
iret
or
sti
push
and
stos
mov
fidivrl
mov
call
mov
and
cmp
sbbb
in
add
jae
fisttpl
lea
push
shl
pop
insl
jg
popf
neg
xor
fnstsw
add
jmp
or
ss
insl
cs
loopne
aad
je
mov
sarb
mov
inc
sbb
stc
into
or
iret
inc
push
xchg
dec
xchg
scas
xor
xchg
pop
xchg
and
sbb
or
jne
lea
or
jg
or
imul
or
in
in
fdivl
imul
aas
add
adc
jle
adc
out
push
xchg
mov
ficoml
cmp
imul
and
xchg
nop
mov
dec
xor
pop
mov
addr16
gs
popa
outsb
pop
test
lcall
popf
fstp
xchg
xchg
sti
out
sub
push
out
scas
sahf
cli
mov
sub
dec
sar
jge
mov
mov
sub
jo
mov
fistpl
mov
clc
test
xchg
iret
sub
cmp
push
push
lahf
mov
push
les
sub
push
jo
xor
sub
ljmp
sbb
repz
daa
ficoms
fsubrl
ficomps
and
out
sbb
jne
pop
lods
loope
lods
divl
ja
or
mov
xor
add
mov
idivl
sbb
iret
push
or
xchg
cmp
pop
and
xchg
ljmp
xor
xor
in
fstl
arpl
xor
cmpsb
or
sar
ret
push
aas
mov
mov
dec
arpl
jbe
stos
xchg
aam
inc
sahf
push
xor
dec
inc
std
or
add
fisubl
lods
jb
mov
inc
in
nop
test
add
mov
dec
mov
ljmp
push
ret
sbb
das
jb
je
pusha
stos
xchg
adc
push
mov
pusha
aam
and
divl
es
es
aam
outsb
jle
stos
add
xor
outsl
loope
mov
mov
lods
mov
imul
clc
mov
aad
push
mov
insb
cltd
stc
xchg
jmp
xchg
repz
push
add
or
push
add
inc
sub
push
insb
js
or
adc
adc
add
pop
filds
push
add
outsb
or
fnsave
fwait
cli
pop
arpl
mov
cmp
mov
fstps
sbb
xchg
gs
lock
fldcw
out
out
mov
mov
sub
ljmp
addr16
cld
or
push
add
push
lds
stos
insb
clc
inc
stos
lods
dec
jmp
add
cld
addl
mov
lahf
fdivr
push
xchg
xchg
movsb
aam
scas
loope
mov
cwtl
push
into
inc
xor
cmpb
je
outsl
or
push
sbbb
cld
pusha
imul
xlat
in
divb
insb
lcall
xchg
or
sahf
cmpsb
add
shrb
mov
aaa
sbbl
ss
ljmp
push
pop
pop
out
push
sub
scas
inc
add
pop
call
mov
sti
cld
call
icebp
mov
dec
jg
fwait
test
sub
rolb
jl
negb
inc
sub
ljmp
adc
sub
inc
lea
aam
repz
les
outsl
in
hlt
ja
shlb
mov
daa
pop
add
adc
pushl
fs
push
adc
loope
iret
sti
cmp
dec
xlat
push
xchg
push
arpl
lret
imul
add
pop
mov
mov
cmp
mov
dec
fistl
lret
mov
push
lds
mov
dec
pop
cmp
cwtl
sbb
jle
pop
push
lds
lret
dec
jl
cmp
mov
adc
push
dec
xor
mov
call
jmp
das
sti
in
mov
cmp
cli
dec
push
nop
adc
sub
fmuls
out
into
or
mov
popa
pop
or
std
or
mov
and
fimuls
dec
and
fldt
push
push
es
out
out
add
push
inc
jae
fsubs
xchg
add
adc
cmp
shr
je
sarl
in
fwait
inc
mov
xor
add
js
aam
ffree
addl
mov
lret
pop
out
xor
pushf
notb
cs
or
daa
cmpsb
pop
or
or
xor
test
dec
fnstcw
dec
pop
sbb
lahf
lods
push
imul
sub
cmp
push
loope
inc
cmp
fbld
rolb
sub
jecxz
xchg
push
xor
je
add
in
adcl
inc
inc
pusha
xor
pop
loopne
repz
jge
fisttpl
testb
mov
imul
xchg
test
sbbb
ljmp
cld
fstpl
mov
mull
xchg
and
mov
adc
icebp
sbb
fwait
movsb
loopne
out
sti
add
adc
std
mov
nop
inc
subl
in
loopne
js
push
lods
jns
mov
add
movsl
sub
pop
and
lock
or
pop
pop
inc
xor
je
in
dec
cmpsb
xchg
cmp
dec
dec
dec
adc
and
je
nop
inc
push
fistps
enter
shl
cmc
js
mov
inc
call
mov
sarb
lahf
outsb
das
and
insb
cmp
pop
jecxz
or
and
or
testb
adc
cmp
mov
cltd
bound
xchg
push
mov
mov
mov
jb
test
sarl
mov
sarb
incb
add
push
repnz
pop
and
popf
cmpsb
popa
and
cmp
xchg
mov
jge
insl
dec
je
lret
push
mov
cmp
fwait
call
aam
fwait
xor
and
stos
xlat
push
jae
pop
gs
cmp
stc
xchg
or
into
cli
nop
dec
mov
and
inc
pusha
push
xchg
aas
or
push
add
add
jnp
test
pop
sbbb
inc
add
add
outsl
push
sub
pop
lea
sbb
iret
fistl
stos
xor
push
aas
mov
cmp
jp
mov
xchg
jbe
out
and
lret
or
mov
mov
mov
ja
push
pop
inc
xor
sti
jns
fimuls
inc
push
jle
ds
lods
mov
rcr
cmpl
push
loope
imul
aas
mov
iret
add
sbb
cmpb
inc
inc
or
aam
cltd
jbe
adc
popf
test
test
scas
jecxz
sub
fistpl
xchg
jnp
aaa
ficompl
fwait
stc
adc
mov
add
addr16
test
rcll
push
or
sbb
shrl
push
push
cmpsb
insb
mov
add
jmp
pop
push
adc
mov
enter
pop
jg
pop
ljmp
mov
shl
stos
popaw
adc
mov
mov
add
push
sbb
dec
ret
nop
movsb
jle
cmpsb
adc
sbb
xor
sub
pushf
jnp
inc
push
data16
jb
and
or
push
pop
dec
ffree
enter
enter
test
jae
aas
push
add
sub
jge
jecxz
inc
clc
and
aad
add
mov
sarl
sbb
mov
inc
inc
jmp
lret
push
fisttpl
push
add
cmp
mov
aaa
aas
cmpsb
mov
lahf
add
jmp
les
jl
mov
sbb
decl
and
or
xor
sbb
test
rorl
dec
push
sahf
fidivrl
and
gs
mov
fdivl
jg
jne
inc
call
inc
cmpsl
sbb
fidivl
das
movsb
ljmp
rclb
sub
add
mov
sub
xchg
mov
push
out
addl
inc
sarl
pop
fwait
mov
outsl
dec
or
scas
je
pop
jae
push
add
xchg
xor
jb
popf
add
clc
jae
add
sub
sbb
aaa
mov
ficompl
jno
mov
lods
dec
icebp
sub
xchg
pop
in
dec
inc
xor
and
inc
sbb
lret
lock
jbe
sbbb
xchg
pop
hlt
stos
pushf
lods
xchg
sub
mov
mov
adc
mov
push
cmpsl
inc
cwtl
jae
xchg
outsl
imul
sbb
jae
push
daa
add
cmp
dec
and
mov
insl
inc
int
push
movsl
jae
mov
lods
or
pop
test
pop
iret
pop
and
ret
repnz
sbb
mov
jo
pushf
sbb
shll
push
ret
pusha
cmp
test
rclb
adc
out
pop
int3
popf
mov
sbb
enter
cmpsl
movsb
fs
jmp
or
mov
in
dec
mov
rcl
jno
movsb
ljmp
sahf
pushf
cmpl
xchg
jb
cmp
test
mov
test
adc
lods
pop
push
or
xchg
or
inc
loop
inc
in
test
and
pop
stc
cs
push
xlat
ljmp
aad
call
loopne
push
add
pop
xor
dec
mov
adc
scas
in
add
bound
scas
es
xor
das
jno
mov
fnstcw
pop
hlt
jo
clc
pop
mov
mov
adc
iret
aas
adc
mov
int
dec
xchg
imul
jl
dec
lock
nop
push
aaa
lret
xchg
inc
jno
dec
inc
stc
adc
jge
lret
xor
test
in
mov
rclb
adc
mov
or
in
pop
dec
jecxz
mov
sahf
add
sbb
subb
fbstp
insl
mov
out
cld
lret
fstpl
inc
xchg
mov
mov
mov
lahf
or
add
dec
iret
adc
lret
push
xor
push
sub
push
jbe
sbb
jmp
fwait
loopne
push
in
fmuls
mov
mov
int3
jp
stc
xchg
mov
jb
adc
shrl
dec
push
add
lcall
stc
cmpsl
adc
mov
ss
add
cltd
test
push
add
mov
lea
imul
jle
dec
int3
jp
and
es
movsl
push
add
mov
lods
or
mov
clc
out
pop
pop
shll
xor
adc
or
push
das
or
cmp
loop
xchg
lds
lds
xor
into
out
syscall
test
mov
add
or
sub
movsl
or
lods
lds
cmp
std
jne
fidivrs
fsubr
fwait
cmc
adc
xor
mov
mov
out
mov
ss
mov
std
sbb
shlb
popl
pop
cld
cld
call
enter
sti
shlb
fsubs
push
stos
jl
mov
mov
mov
repnz
sbb
fwait
mov
scas
mov
call
aas
fimuls
lcall
je
loop
push
add
add
das
lret
lds
xchg
mov
xor
in
lock
inc
fldenv
push
lret
int3
mov
push
imul
xchg
jl
sub
pusha
push
adc
nop
and
clc
mov
dec
add
or
iret
pop
sub
cmc
sahf
cmpsb
sub
xchg
adc
sbb
pop
jecxz
out
or
mov
inc
je
sub
fcoml
cmp
jae
and
test
andb
mov
ja
shr
lahf
enter
inc
xor
dec
xor
mov
jge
stc
sbb
fnstenv
xchg
lods
jge
mov
push
mov
mov
push
mov
inc
sub
xor
mov
pop
js
test
in
push
aas
sub
stc
int
xchg
aas
mov
sub
jb
sbb
push
jl
and
or
mov
outsl
mov
xor
fxtract
mov
adcb
lea
negl
cmpsl
or
repnz
xchg
stc
or
movsb
mov
test
icebp
sub
nop
cmpsb
addb
jnp
gs
imul
fistl
fcomip
jle
inc
mov
sbb
mov
in
jne
add
cwtl
inc
adc
push
mov
movsl
jbe
inc
ret
arpl
cmp
lea
sub
iret
pop
and
inc
cmp
pop
sub
dec
jecxz
adc
xor
popf
outsb
and
add
xor
xchg
fisttpl
les
sbbb
lods
sahf
out
sub
mov
sub
fdiv
mov
mov
jnp
lods
jl
lea
mov
repz
and
xor
pop
inc
mov
lahf
add
fldcw
insl
scas
mov
fidivrl
fdiv
int
xchg
xchg
add
out
add
ljmp
sub
neg
dec
xchg
inc
mov
outsb
adc
xchg
lock
cli
push
sahf
ja
pop
mov
mov
scas
imull
ror
xchg
int
xchg
lret
push
mov
adc
fs
adc
jmp
and
fists
jle
iret
pop
das
jecxz
mov
xchg
daa
xor
push
inc
jo
jo
imul
stos
repnz
pop
rcl
sbb
jp
out
cmpsb
stos
dec
shll
dec
jbe
adc
inc
aaa
and
pop
fistl
lock
push
jbe
mov
or
dec
jnp
mov
stc
add
push
jbe
lcall
and
scas
out
sbb
lds
mov
test
es
mov
pop
push
mov
ret
ds
pop
mov
aas
inc
push
pop
in
cmp
mov
jns
clc
xlat
adc
nop
mov
sub
fldt
mov
sub
es
sti
pop
int
push
cmp
xlat
inc
mov
repnz
jl
test
ljmp
sbb
xor
lods
je
daa
notl
in
cmp
sub
addr16
add
mov
test
pop
add
jb
call
je
jmp
push
push
jge
nop
cmp
das
push
jg
stc
add
test
call
push
adc
sbb
cmp
push
mov
jnp
cltd
xor
sbb
dec
jmp
sub
cwtl
sub
subl
ljmp
sbb
mov
mov
sbb
test
xor
in
iret
popa
lret
mov
scas
xchg
int
cmp
dec
mov
mov
add
clc
ss
cmpb
sbb
fmuls
fdivl
xchg
add
pop
mov
insl
dec
arpl
push
adc
add
jg
mov
pop
shlb
pop
lods
mov
add
cmp
xchg
inc
fstps
jae
pop
lcall
mov
lods
mov
pushl
out
inc
mov
and
adc
pop
push
scas
push
leave
gs
gs
addb
fmulp
jo
shr
xlat
mov
push
push
lods
in
imul
mov
outsb
clc
jmp
cmp
pop
cld
adcl
out
ret
push
gs
dec
jl
popf
sahf
jle
sbb
push
out
inc
test
xor
mov
cmp
sub
popf
jbe
adc
lods
imul
xor
js
ret
mov
arpl
cmp
mov
mov
mov
lcall
mov
hlt
pop
fdivs
notb
shl
lds
pop
fwait
call
mov
or
sbb
andb
outsl
inc
push
mov
pushf
cmp
dec
imul
movsl
xchg
pop
dec
loope
jae
cld
mov
mov
leave
adc
sbb
js
fmul
daa
or
test
scas
insb
jnp
xchg
xorb
fisttpll
aad
push
lret
enter
in
xor
mov
dec
lods
or
es
cwtl
lds
push
or
in
adc
fdivrl
adc
xchg
roll
xor
fldcw
mov
push
sub
add
cwtl
lret
and
iret
stos
xchg
cmp
adc
js
sub
and
repnz
cmc
mov
xor
add
cmp
push
mov
inc
xor
insb
movsl
aam
pop
cmp
mov
inc
lock
dec
in
lods
xchg
sub
mov
pop
pop
pop
mov
fstpl
jo
mov
shlb
pop
jge
push
mov
pop
out
hlt
std
jp
arpl
cli
jle
lahf
addb
sub
push
mov
dec
ds
or
int
dec
sbb
rcr
jl
outsb
mov
jg
lea
shlb
lea
rclb
dec
pop
or
rcll
enter
and
mov
jo
xor
dec
mov
icebp
jns
xchg
clc
cli
cmp
and
push
rcrl
push
lods
scas
or
and
shll
push
sub
cmp
jb
mov
pop
scas
xchg
or
xorb
lods
pop
repz
cwtl
or
stc
push
xlat
movsl
inc
addl
fs
cs
mov
jge
lods
or
popf
int3
push
or
push
push
add
adc
push
repnz
aam
cmp
xchg
xchg
sbb
adc
cmp
stos
inc
cs
aam
pop
xlat
dec
imul
adc
icebp
sub
cmpsl
in
jle
aas
data16
gs
inc
daa
cmovne
test
ja
ja
add
mov
movsb
std
mov
aam
or
les
pushf
inc
xlat
mov
and
xorb
or
sbb
popa
or
jbe
cmp
andb
mov
jnp
xchg
ret
jne
stc
popa
push
fmuls
jmp
aaa
mov
jg
cs
ret
das
or
fldl
push
loop
push
push
cwtl
or
pslld
sub
pop
in
mov
xchg
mov
fstpt
lods
cli
outsl
push
repnz
pop
xchg
mov
leave
std
mov
into
outsb
lret
stos
lcall
outsl
outsb
xor
and
mov
mov
mov
repz
adc
inc
mov
xchg
sbb
insb
in
pop
pop
cmc
sub
cmovg
jg
xchg
cmpsb
out
loopne
scas
push
and
arpl
mov
jp
fisttps
inc
jnp
stc
xchg
divl
push
outsb
cmp
popf
xor
cmp
mov
adc
xlat
and
sahf
addr16
xchg
popa
icebp
in
mov
inc
mov
adc
dec
inc
cmp
push
push
inc
rorl
jge
test
inc
push
push
sahf
mov
cli
aaa
js
js
jmp
cmp
inc
add
std
in
fwait
mov
ds
mov
or
popa
enter
jb
in
mov
mov
lahf
mov
incb
add
pop
mov
fs
xchg
sub
stos
orl
es
arpl
call
data16
jbe
xorl
into
mov
xchg
inc
enter
insl
test
adc
scas
mov
ret
loope
sbb
pushf
insb
dec
cli
lods
push
cs
lret
lret
mov
daa
adc
mov
mov
arpl
sub
cmp
cmp
cmp
push
xor
pop
and
sub
lcall
scas
jl
mov
stos
stos
mov
cmpsb
xchg
pop
loope
test
cmp
cld
fimull
jle
sub
inc
add
sub
lret
dec
hlt
std
sbb
push
sbb
cld
cmp
jns
or
daa
xor
pop
std
arpl
adc
mov
aam
sub
cld
mov
or
sub
xor
jmp
jb
fiadds
xchg
divl
stos
test
xor
and
pop
popa
fs
stos
push
cmpsl
ljmp
sub
and
pop
or
mov
inc
xor
mov
stos
xchg
out
js
adc
rolb
xor
cmpsl
loopne
rclb
mov
test
dec
xor
aam
or
adc
outsb
xchg
outsl
cmc
cmp
jge
add
pop
popa
dec
in
add
clc
into
popa
negb
sub
out
popa
loop
aam
test
fwait
rcrb
push
sub
nop
push
mov
sub
mov
loop
je
push
or
sbb
sarl
mov
jecxz
mov
and
cmpsb
jl
in
rcl
pop
push
imul
and
ss
mov
cmc
mov
shr
loop
out
adc
rcrb
out
mov
mov
add
fldt
jecxz
and
movsl
add
shlb
es
xchg
lock
es
das
lods
dec
fs
pushf
pop
stos
mov
cli
pop
test
pushf
jae
insl
push
repz
popa
sahf
cmp
pop
cmpsb
sti
lret
jle
es
lock
or
repz
xor
std
inc
and
fwait
mov
inc
jecxz
cltd
push
js
in
mov
lcall
push
in
ror
and
adc
jbe
fstpt
inc
mov
mov
leave
jo
mov
inc
add
pop
push
push
ret
xor
ljmp
add
rorb
test
mov
fidivrl
pop
mov
inc
jge
subb
sarl
xchg
es
faddp
cmp
or
gs
xchg
ljmp
xor
dec
es
push
push
rcrl
andb
cmp
lock
mov
xorl
mov
rolb
hlt
mull
add
out
mov
sahf
scas
mov
pop
inc
mov
jp
test
mov
pop
iret
xchg
adc
imul
mov
test
sar
testb
pop
aam
adc
sbb
mov
lds
scas
lock
sub
ret
xor
into
mov
push
adcl
call
repnz
lahf
mov
lcall
cmp
loope
xchg
int3
rorl
mov
push
xchg
fcmovnbe
add
mov
or
ret
ja
sti
scas
push
adc
inc
scas
cmp
add
jno
inc
pop
inc
push
ds
loopne
xor
jo
aad
dec
data16
sub
xchg
ss
push
loopne
insb
jecxz
lock
in
rcrl
cld
dec
test
insb
das
scas
pop
xor
sub
jmp
ja
sbb
jg
mov
cmp
xchg
push
jbe
push
pop
or
sbb
test
inc
and
imul
push
push
sub
insb
mov
pop
push
es
das
test
mov
pop
push
into
out
jg,pn
ja
sub
daa
std
push
sti
lea
mov
leave
mov
test
or
jmp
sub
jo
jge
fwait
test
or
aaa
inc
into
sub
sub
adc
push
fsub
stos
pop
mov
dec
in
rolb
or
repz
aas
and
mov
mov
cmovbe
pop
test
cmp
xor
call
xor
mov
sahf
loop
cmp
cmp
cmpsb
dec
test
inc
sbb
adcb
mov
mov
or
sbb
jle
and
push
outsl
dec
lret
pop
and
dec
or
adc
fsubs
mov
das
subl
mov
mov
pop
mov
ret
add
cltd
mov
xor
jne
and
cmp
push
aam
inc
hlt
shrl
sub
xchg
and
inc
mov
cmpsb
test
mov
xchg
jne
outsl
and
cwtl
sbb
iret
arpl
cltd
push
js
into
in
frstpm(287
inc
cmp
subb
mov
in
pushf
cltd
push
mov
data16
pushf
jno
sbb
pop
mov
inc
cmpsl
in
adc
in
das
out
xchg
mov
in
loope
test
scas
sbb
sbb
push
cmp
mov
jl
fisubrs
in
or
pusha
xchg
mov
pusha
fdivp
arpl
mov
dec
add
cmpsb
stos
stos
addr16
dec
mov
popa
pusha
inc
rcr
mov
insl
loopne
push
andl
push
pop
leave
mov
push
mov
iret
orb
xchg
mov
je
fsubl
jne
and
pop
outsb
xor
cmc
push
inc
xor
outsl
sub
loopne
loope
daa
add
imul
push
fmul
add
out
add
push
insl
push
cld
stos
scas
pusha
and
jns
dec
ds
push
int
jp
je
je
sub
pop
mov
add
lea
pop
push
xchg
es
cmpsb
in
mov
ret
stc
arpl
int3
mov
daa
add
sti
clc
pop
sbb
jae
ret
add
js
stc
push
lahf
pop
mov
ds
jo
mov
js
shrb
jecxz
dec
and
push
cmp
lds
inc
ret
pusha
mov
fbld
cmp
dec
cmpsl
sahf
dec
stc
push
adc
pop
push
jne
in
ficomps
xor
in
mov
mov
sti
jbe
lock
cltd
dec
mov
fbld
push
adc
adc
sbb
loope
adc
adc
dec
cmp
sbb
dec
add
imul
dec
xor
push
icebp
idivb
pop
pop
add
push
fmuls
mov
dec
lret
ss
adc
jo
dec
push
stc
mov
aam
xor
cmp
stos
sbbl
test
sahf
cmp
faddl
nop
xchg
std
xlat
mov
arpl
inc
mov
cmpsl
in
or
sub
cmp
push
dec
inc
xor
xlat
adc
push
jae
je
sti
scas
xlat
or
sti
mulb
imul
shrb
pop
push
outsl
or
dec
data16
pop
xchg
pusha
or
test
ret
insb
lock
sbb
jge
loopne
dec
lret
in
and
in
jb
or
ret
mov
orb
mov
adc
pop
jo
stc
dec
cs
fistpll
mov
mov
lea
out
pusha
adc
sti
xchg
xor
push
cmpsl
loopne
push
pop
push
xchg
xchg
or
fistps
repz
inc
lcall
adc
inc
push
ds
js
nop
mull
cmp
ljmp
fildll
lods
nop
stos
cmp
fldl
sbb
lods
sbb
mov
sbb
popf
mov
mov
out
push
jecxz
loope,pn
je
or
push
push
and
cmp
movsl
lea
loope
xchg
or
pop
rcrl
pop
aas
mov
pop
sbb
ja
fistps
mov
adcb
shll
push
and
dec
mov
repnz
add
leave
aam
fldl
rorb
dec
push
jg
ja
fstps
sub
lock
enter
fcmovbe
in
xlat
js
sub
fwait
pop
out
xor
sti
mov
in
mov
add
and
mov
mov
dec
lret
sbb
andb
or
arpl
push
rcl
cmp
push
xchg
pop
push
pop
popa
mov
adcb
and
mov
jg
fstl
pop
ja
push
fldcw
pop
push
and
add
pop
ret
push
jae
push
mov
aas
data16
inc
icebp
pop
mov
cwtl
je
xor
das
stc
rcl
or
adc
cmpsl
cmpsl
sub
fsubrs
xchg
nop
mov
movsl
xchg
jo
bound
popf
loop
mov
je
int3
mov
dec
push
out
push
sbb
fcoml
fdivrl
push
cmp
adc
cmpb
test
jb
loop
iret
lahf
in
shlb
pop
push
inc
cmp
in
sbbb
outsl
cs
jecxz
out
sbb
hlt
mov
dec
test
addb
add
xchg
xchg
adc
mov
xchg
dec
mov
addr16
mov
dec
inc
dec
jle
arpl
outsl
call
jns
cltd
xchg
repnz
ja
insb
xor
dec
cli
jb
pusha
or
mov
test
out
enter
xorl
iret
push
aaa
mov
jl
pop
mov
and
jp
xor
mov
ret
js
dec
add
cld
mov
iret
adc
mov
pop
sbb
outsl
jmp
jb
xor
or
xchg
ret
pop
jmp
jno
cmp
sub
sub
loopne
aaa
cmp
xchg
test
jae
fcoms
mov
frstor
cmpsl
imul
push
pop
push
ja
test
scas
cmp
mov
mov
stos
jmp
iret
lods
mov
inc
lret
adc
popa
in
cmc
mov
and
pushf
movsb
aas
jae
and
xor
pop
pop
jb
inc
loope
jo
jmp
divl
adc
ljmp
loopne
adc
shl
icebp
iret
jle
xchg
and
sub
in
stc
idivb
insl
inc
jmp
fdecstp
inc
jbe
mov
stos
mov
es
mov
cmp
or
sbb
mov
lea
or
shl
jmp
add
adc
outsl
leave
addr16
cmp
rcll
nop
sbb
test
lret
stos
in
sbb
out
imul
in
incl
mov
fmuls
inc
lods
adc
imul
out
rcll
xchg
in
push
cmp
xchg
jbe
or
insb
xchg
mov
adc
cwtl
sahf
mov
push
in
pop
mov
dec
push
pop
fcomi
sub
pop
jbe
jge
fstpt
add
movl
mov
pop
int
imul
dec
lock
or
mov
outsl
lcall
loop
mov
jg
dec
push
jne
inc
sbb
xor
sub
add
mov
sbb
cmp
rcll
mov
xchg
cmp
out
xchg
jmp
fstl
fwait
aam
jge
cltd
leave
and
es
lea
push
jbe
scas
mov
add
notb
jnp
leave
adc
sbb
jae
pop
ret
ret
js
dec
lret
dec
mov
xlat
and
int3
in
addr16
incl
adc
push
cmpsb
jg
aaa
clc
xor
imul
inc
push
fdivrl
push
adc
pop
adc
cli
or
jnp
out
mov
mov
call
mov
xor
shlb
sub
adc
imul
pushf
add
pop
mov
rorl
inc
pop
add
in
sub
dec
movsb
mov
push
data16
cmc
ds
outsl
xor
sbb
arpl
lds
or
std
xchg
or
rcrl
sbb
xor
jle
inc
fsubp
lds
mov
imul
pop
xchg
scas
cmpsl
xor
mov
out
cld
fistps
mov
inc
dec
lods
mov
fdivrs
adc
adc
sbb
xchg
pop
outsw
sbb
sti
pop
int3
xchg
mov
xorb
arpl
ja
pushf
in
adc
loope
call
mov
mov
je
bound
mov
push
aad
nop
mulb
sbb
mov
sbb
call
jnp
popf
lock
std
scas
insb
sbb
insb
andb
ret
lods
imul
pop
mov
add
xor
out
addr16
mov
cmp
pop
test
stos
push
jmp
ss
test
fidivrl
std
cmp
es
cmp
mov
sub
int3
add
inc
imul
lea
aad
cli
movsb
jne
push
mov
lret
nop
adc
in
xchg
inc
ljmp
insl
dec
pop
rorl
push
jge
dec
orb
les
push
xor
mov
dec
es
jge
stos
movsb
push
subb
outsb
adc
adc
sti
or
vandnps
push
aas
out
mov
ljmp
mov
inc
sub
sub
mov
and
mov
push
mov
iret
outsb
push
popf
and
fwait
push
loopne
and
sahf
xlat
cli
je
push
jg
in
push
xchg
lods
xor
jbe
dec
mov
stos
dec
lcall
mov
push
lock
mov
iret
or
scas
aam
push
jle
js
mov
push
jl
popa
aam
jle
subl
jnp
mov
icebp
jo
daa
xor
mov
addr16
or
or
sbb
rorb
and
aad
mov
out
mov
ds
cmp
loop
mov
iret
mov
int3
ljmp
scas
lock
shl
mov
cs
mov
adc
adc
fsubrs
test
orb
cmp
push
fwait
and
fdivrl
test
xchg
mov
inc
cmp
jo
xor
sub
mov
fisubrl
inc
stos
mov
and
cmpsb
xor
sub
nop
lcall
sbb
mov
pusha
push
jle
or
push
movl
mov
ljmp
jecxz
bound
push
dec
pop
push
call
icebp
int
mov
push
clc
mov
data16
mov
ret
jns
lock
fs
jp
dec
jg
xor
cmp
arpl
imul
aas
pushf
fsubs
sti
lock
ljmp
mov
jno
jnp
mov
mov
cmp
dec
mov
push
push
int3
inc
popa
mov
pop
and
cmp
xor
dec
push
jnp
dec
xchg
dec
les
and
jl
pop
stos
jnp
ret
call
cmp
lods
xchg
and
mov
js
dec
xchg
and
enter
inc
add
loop
lret
push
aas
notl
lahf
and
jnp
sbb
insb
sti
adc
pusha
popa
push
adcl
pop
or
aam
pusha
ljmp
cmp
sbb
sbb
stc
sbb
jno
or
rolb
mov
inc
int3
jae
dec
les
ret
pop
adc
cmpb
das
ret
mov
lock
repz
ljmp
and
std
mov
push
clc
adc
ja
sbb
adc
add
int
sub
iret
mov
cmp
mov
push
out
cmpl
inc
inc
mov
mov
aaa
out
scas
dec
mov
in
shlb
repnz
std
lret
jns
cmp
dec
xchg
lahf
mull
adc
in
js
fs
add
aad
push
stos
rol
repnz
mov
aam
dec
sub
out
cmpsb
notb
mov
push
int
popa
inc
or
stos
jmp
mov
inc
sbb
xor
xchg
mov
xlat
rolb
push
imul
repnz
inc
pop
hlt
cmp
lock
out
inc
clc
mov
out
scas
push
cmpl
mov
inc
iret
sbb
adc
xor
icebp
rorl
cmpsb
pop
sbb
out
pop
sub
aaa
xor
dec
vpaddw
aad
push
test
scas
gs
lds
es
mov
xchg
push
or
push
jne
sub
jl
xchg
mov
lods
stc
mov
inc
xchg
fdivrl
or
jecxz
jbe
dec
sarl
sub
data16
sti
adc
lcall
mov
add
sti
xchg
and
insb
sti
data16
outsb
mov
movsb
cmp
or
iret
daa
pop
mov
lret
rcll
inc
jo
xchg
xor
pop
or
dec
incb
xor
mov
popf
nop
adc
mov
add
aam
sbbb
inc
aad
and
push
xlat
dec
jno
je
dec
xchg
sbb
mov
add
lahf
cltd
int3
divl
and
cmp
push
aas
push
imul
enter
movsb
or
lods
clc
sub
out
loop
mov
jae
pop
sbb
out
sub
mov
loope
ror
xor
or
sub
xor
popa
enter
nopl
inc
popf
pusha
sub
das
push
in
pop
fld1
mov
aaa
sub
mov
ror
cmp
clc
aaa
out
scas
jnp
mov
add
jns
or
lahf
mov
or
push
sbb
es
mov
sbb
mov
push
clc
push
outsl
dec
mov
fistl
popa
lret
loopne
loope
mov
cmp
mov
test
pop
mov
test
out
mov
ret
dec
add
inc
jo
xchg
out
out
pushf
std
aam
inc
push
cmp
sub
add
mov
sub
out
subb
into
inc
mov
push
adc
fsubl
icebp
aaa
popa
insb
bound
ret
shr
pop
sbb
repz
movsl
add
daa
mov
arpl
jno
push
aaa
and
sarb
and
push
mov
neg
shrl
fwait
xor
movsl
inc
mov
jae
testb
les
cmp
push
in
mov
repz
int3
test
fcoms
enter
js
lcall
pop
test
test
sbb
mov
pop
or
and
push
xor
pusha
movsl
pop
in
and
mov
xor
inc
pop
mov
mov
lret
outsl
cli
cmp
insl
push
insl
pop
add
and
dec
adc
mov
xchg
test
ljmp
std
pop
lahf
stos
mov
and
int3
adc
inc
or
sub
testl
mov
mov
mov
add
test
jge
cltd
xchg
out
cmp
xor
mov
and
movsl
out
dec
fcompl
or
adc
outsl
out
insb
mov
ja
popf
into
dec
cltd
and
shlb
cmp
repz
inc
lds
adc
rol
cmp
repnz
testb
lea
cmp
pop
lret
rcrl
sub
enter
sahf
icebp
insb
aaa
lods
outsl
inc
cmp
and
mov
lret
jg
sbb
je
and
lahf
pop
outsb
push
out
repz
mov
xchg
stos
push
popa
in
push
cltd
js
pop
pop
xlat
xor
test
sbb
aam
sahf
lods
pop
test
arpl
xchg
cmp
adc
nop
adc
push
test
icebp
stos
nop
movsb
in
xchg
mov
out
movsb
inc
mov
incb
js
arpl
lods
mov
sub
insb
mov
jb
push
add
bound
xor
pusha
xor
insl
fmul
test
push
xlat
cld
adc
leave
stos
mov
aas
push
inc
fcoms
arpl
lds
pop
lcall
mov
sub
sbb
mov
divb
mov
inc
jo
sub
mov
iret
jb
and
jb
or
pop
imul
stos
sahf
cld
xor
ret
mov
and
mov
push
fadds
ss
gs
insb
test
leave
cmp
sub
jne
outsb
loop
inc
fxch
movsl
mov
push
pop
jo
sbb
push
addr16
push
adc
out
push
push
ss
or
sub
adc
rcrl
imul
fidivrs
push
jbe
shl
push
adc
aas
xorb
push
sahf
mov
sbb
cmpb
shll
inc
adc
pusha
ds
cmp
ror
mov
inc
xor
std
into
imul
cmp
pop
and
xor
repz
pop
lods
jne
sub
cmp
mov
cltd
rclb
push
mov
cmp
xchg
jb
mov
ret
mov
daa
js
out
arpl
pop
imul
dec
lcall
ljmp
jmp
add
fistps
push
and
push
ljmp
loope
push
sbb
push
movsl
adc
push
mov
loopne
push
dec
push
test
ljmp
xor
push
push
fcmovne
shlb
fs
sub
mov
or
or
fidivrs
jns
pop
sub
es
inc
lret
out
lret
push
xor
sbb
or
arpl
fdivr
xor
mov
scas
adc
xchg
sbb
stc
aaa
lcall
xchg
leave
or
sub
lds
push
sbb
jle
out
mov
dec
add
nop
push
and
sbb
push
lds
jbe
push
aaa
jb
add
pushf
xchg
jns
jns
sub
pop
or
adc
pop
push
arpl
fmulp
test
dec
scas
mov
mov
scas
mov
dec
cmp
jno
sbb
push
enter
mov
cmpsb
jo
sbb
xchg
jns
daa
sahf
mov
add
pop
out
mov
addb
dec
shrl
mov
and
xchg
mov
mov
pop
push
and
inc
mov
icebp
mov
cmp
mov
jns
xchg
fadd
orb
inc
xorl
sti
jecxz
cmpsb
jle
aad
pop
sbb
test
dec
es
push
adcb
movsl
mov
jae
sub
aad
adc
xchg
outsl
hlt
in
add
and
pop
mov
movsl
aad
in
jecxz
or
into
ds
iret
mov
dec
sub
rorl
fisubrl
ret
dec
outsb
bound
loopne
dec
ja
cmp
lret
femms
sbb
lock
sahf
out
sub
jae
adc
push
test
std
jg
xor
int
add
pop
mov
inc
sbb
testl
stos
sub
push
add
inc
arpl
xchg
and
add
inc
fnstcw
xchg
clc
push
sarb
stos
out
test
out
imul
mov
jns
and
push
lea
aad
adcb
push
lods
push
movb
enter
in
in
jp
cltd
pop
jmp
gs
mov
mov
icebp
pop
movsl
mov
stos
push
pop
mov
movsb
dec
inc
lahf
jns
leave
and
js
clc
mov
mov
call
divl
mov
setnp
cmp
test
xchg
xchg
mov
cmp
and
mov
xor
push
and
dec
jp
dec
rcrb
js
lcall
lods
sub
stos
jnp
or
cld
adcl
repnz
jle
fsts
jno
outsb
mov
xor
jne
mov
pop
nop
jecxz
mov
test
faddl
inc
jl
popf
loope
dec
add
loop
xor
fildll
in
sbb
outsl
mov
lods
xchg
int3
mov
mov
jge
pop
mov
mov
repz
cmp
xchg
movsl
clc
push
ja
daa
mov
add
xchg
pop
push
cmpsb
pop
outsl
loope
jno
leave
testb
jg,pn
lds
add
fcoms
cmp
jo
xchg
or
dec
xor
jne
js
mov
scas
pop
sub
xor
icebp
sbbl
rorl
icebp
movsb
sbbb
nop
stc
xchg
stc
testl
repz
dec
adc
clc
lock
mov
lcall
push
jle
ds
outsl
bound
jecxz
and
mov
add
sub
xchg
mov
xchg
clc
loopne
cmpsl
add
adc
cli
jo
mov
scas
rcr
cs
sti
movsl
lret
js
lahf
mov
mov
xchg
cmp
aaa
sub
mov
push
cld
sbb
jle
push
aas
nop
lahf
outsl
movsl
push
dec
mov
push
and
sbb
dec
into
fidivl
ret
stos
in
out
rcl
rcrl
lds
dec
sbb
dec
push
fcomps
jnp
ret
bound
mov
andb
jge
mov
cli
inc
pop
into
ja
mov
pushf
stos
movsl
lods
lods
or
cmpsl
adc
leave
out
scas
dec
ja
scas
mov
xor
lods
pop
jmp
pushf
jp
sub
hlt
inc
push
and
cmp
or
jmp
hlt
aas
shll
cmp
es
push
enter
jecxz
fcoms
dec
cmp
push
out
xor
hlt
cld
pop
xchg
fcmovne
adc
iret
pop
pop
jp
add
imul
out
jecxz
cmpsb
hlt
js
outsl
mov
lods
pop
xchg
adc
adc
sub
stos
mov
and
or
jp
lods
adc
xchg
sub
jecxz
iret
inc
in
push
push
xchg
and
int
stos
xor
mov
pop
fwait
cmp
push
aam
imul
inc
or
rcl
jmp
outsb
lock
jge
mov
mov
sub
icebp
pop
push
and
nop
jmp
aam
in
jae
mov
aam
scas
lods
test
pop
sub
into
aaa
test
roll
mov
imul
enter
pop
sahf
lret
or
stos
adc
inc
mov
mov
push
xchg
stos
daa
dec
pop
jns
shlb
aad
out
add
xchg
xchg
cli
adc
dec
xchg
inc
pop
cwtl
sbb
out
cmpsb
imull
inc
enter
icebp
push
xchg
out
jmp
jg
ret
xchg
in
insl
loop
or
sub
add
stos
sbb
dec
and
mov
adc
cwtl
push
les
cmpsb
pop
mul
popa
add
sti
mov
nop
cmp
or
push
sbb
xchg
xchg
add
pop
jmp
movsl
fdivl
test
data16
mov
adc
ret
push
mov
xor
sarl
mov
adc
jp
dec
call
ret
ret
cs
mov
popf
addr16
push
hlt
adc
xor
idivb
pushf
cwtl
lods
cmc
outsb
ja
lods
xor
dec
inc
jge
jbe
subl
aas
sub
pushf
push
ror
xchg
sbb
dec
popf
push
mov
aaa
repz
adc
sbb
into
mov
in
neg
pop
sub
rorl
cmpsl
or
inc
inc
and
dec
jp
inc
les
fistps
fcompl
inc
mov
pop
jo
aaa
adc
mov
pop
pop
inc
adcl
test
pop
jl
cmp
xor
movsl
mov
bound
bound
pop
into
fsubl
into
jge
jmp
xor
pop
mov
jne
leave
and
jmp
pop
clc
jo
pusha
and
xchg
mov
sti
push
xor
cmp
sarb
push
xchg
fisttpl
adc
sbbb
ja
sahf
das
jbe
pop
adc
dec
test
and
push
jl
and
jo
inc
jmp
je
lock
mov
outsb
roll
mull
mull
enter
mov
jnp
add
or
data16
icebp
adc
andl
imul
sbb
dec
divl
jno
inc
or
outsl
aas
out
dec
test
movsb
test
sub
subb
dec
xor
int3
nop
sbb
fs
popf
fadds
insb
sub
xchg
dec
leave
int3
mov
stc
fs
pop
lret
jb
je
jae
call
mov
ret
addr16
sahf
dec
mov
dec
sub
repnz
addr16
and
lods
ja
loope
fwait
mov
jo
iret
sub
inc
dec
push
ficompl
xchg
mov
and
outsl
push
fucomi
cmp
ja
jp
hlt
sbb
das
jl
inc
out
cmc
loopne
mov
lahf
gs
xor
hlt
mov
inc
sub
jb
xor
mov
xchg
dec
mov
or
in
imul
mov
out
es
mov
out
push
push
jnp
push
insb
and
shrl
mov
adc
rclb
pop
nop
push
cmp
andl
pop
cmpsl
data16
push
dec
movsb
clc
test
idivl
lods
les
xor
cmpsb
push
add
into
cmp
xchg
mov
sbb
xchg
test
inc
dec
nop
pop
sub
aam
pushf
repnz
ljmp
lahf
lahf
nop
in
je
jecxz
les
and
rcrb
fistl
addr16
jge
cmp
dec
xchg
add
test
repz
outsl
jbe
into
pop
daa
cmpb
cli
mov
aas
hlt
aam
add
pop
mov
or
scas
in
outsb
cs
sub
push
mov
iret
and
aas
scas
push
pop
mov
jno
mov
sahf
ja
pop
les
stos
adc
mov
inc
mov
and
enter
icebp
or
rcll
sbb
push
lock
sbb
lcall
jg
sbb
inc
test
add
les
icebp
dec
repnz
push
xchg
in
dec
test
hlt
sbb
adc
cld
pop
pusha
sub
int
jnp
cmp
or
lahf
pop
and
out
jge
fdivl
rorl
sbb
dec
fdiv
ljmp
clc
adc
fnstcw
lahf
push
aad
insb
and
mov
jns
pop
test
loope
push
xlat
fdivs
xchg
jnp
mov
xchg
outsl
icebp
jecxz
mov
mov
mov
or
jle
imul
cmp
icebp
dec
stos
pop
scas
cs
inc
aas
out
mov
repnz
mov
lret
rcl
lods
push
call
mov
ljmp
add
daa
mov
bound
xchg
jae
addr16
mov
loope
mov
jg
add
fists
repnz
pop
sbb
mov
ret
ljmp
sbb
pop
dec
cld
cmpsl
inc
cmpl
fs
push
dec
out
sahf
sbb
mov
cmc
dec
and
clc
ds
fdivrl
int3
pop
in
scas
sarb
aam
fists
mov
add
arpl
arpl
out
push
daa
jnp
mov
imul
sbb
lods
mov
xor
and
adc
inc
addl
and
pop
cmovp
imul
mov
jmp
das
call
pusha
imul
mov
dec
data16
push
sub
xor
ds
push
cmp
adc
movb
jae
pop
lcall
cmp
xchg
jne
xchg
popa
push
test
int
pop
scas
das
scas
into
xchg
jp
xchg
mov
popf
leave
int3
adc
adc
cmp
stos
lds
popf
pop
bnd
push
jl
or
shll
xchg
jae
fadds
in
inc
inc
pop
mov
loop
imul
jle
data16
sbb
fildl
nop
add
cmpsb
jnp
push
fisttpll
pushf
xchg
fnstcw
insb
mov
mov
push
jbe
push
leave
cmpsl
xchg
xchg
sbb
add
leave
popf
movsl
fcompl
jnp,pt
jge
pop
and
cmpsl
pop
dec
mov
inc
cs
push
xor
fldlg2
adc
or
jno
gs
enter
xchg
fdivrp
cmc
dec
add
push
jecxz
dec
mov
adc
out
out
jge
ljmp
xor
test
mov
aad
pop
jmp
lahf
repz
push
sub
dec
cmp
jo
and
sbb
sub
stos
adc
dec
and
push
lock
int3
jmp
and
mov
push
xchg
and
sub
xor
and
mov
in
out
xor
pop
cmp
test
dec
sbbb
push
cli
sbb
mov
mov
mov
ss
jne
cltd
ss
fs
loopne
pusha
sub
pop
les
shl
xor
fists
ljmp
es
loopne
adc
adc
addb
rcrl
repz
mov
stos
inc
xor
dec
xchg
push
push
add
subb
sbb
ss
jo
dec
test
shll
andb
fwait
loopne
scas
lcall
jns
cmpsb
stc
insl
in
popa
dec
icebp
in
fsubrl
ss
in
je
mov
in
or
ljmp
shlb
mov
jmp
or
jmp
cld
inc
into
insl
cmpsb
pop
add
in
sbb
adc
test
adc
in
adc
sub
daa
in
lahf
and
lods
int
fldcw
lods
int
cmovne
nop
adc
push
out
in
xchg
mov
push
in
push
insl
shrl
loope
dec
aaa
pop
test
adc
add
and
xchg
xor
mov
adc
mov
movsb
xchg
clc
sub
dec
mov
jno
fisttpll
cmp
cmpl
mov
insl
add
cli
clc
call
mov
aam
not
adc
iret
cmc
cltd
lcall
xor
and
and
jae
push
cmp
pop
ret
out
mov
cmpsb
xchg
testl
idiv
lret
sbb
cmp
xchg
enter
mov
dec
cmp
mov
sub
mov
sbb
pop
pop
or
int3
filds
xchg
mov
sbb
popw
aaa
xchg
xchg
mov
cmp
out
movsl
addr16
mov
test
out
or
dec
loop
pop
aam
sub
and
push
sub
pop
outsl
in
addb
stos
ret
mov
cmp
cmc
pop
jbe
aam
or
add
cmpsl
mov
adc
inc
add
enter
sbb
aam
jecxz
loopne
enter
pop
stos
ret
inc
xchg
push
jle
dec
outsl
add
mov
xchg
ljmp
inc
xchg
test
jb
insl
outsb
cmpsb
or
outsb
bound
jb
cmc
jmp
out
push
aad
add
xchg
test
or
add
popf
dec
nop
dec
xchg
imul
adc
pop
and
inc
leave
movsl
inc
jle
popa
repnz
sub
inc
shr
insb
incl
and
xor
pop
cwtl
dec
fmull
inc
inc
jb
lcall
jo
repnz
sbb
push
sbb
dec
dec
cs
push
pop
or
xorb
jmp
in
in
jo
ret
sub
add
out
cli
cmp
insb
ljmp
xor
test
idivb
jmp
mov
mov
pop
fmulp
repnz
in
out
xchg
ret
pushf
nop
xchg
pop
mov
push
xor
mov
addr16
icebp
dec
push
adc
shlb
mov
xorl
adc
cmpsl
outsb
lods
sbb
jo,pn
fucomip
jb
test
lock
sbb
lcall
sbb
lret
pop
insb
movsb
inc
push
and
jo
mov
mov
push
jne
xor
adc
lods
rorb
test
fs
pop
mov
stos
push
loope
jle
sbb
fwait
adc
lock
ret
fistl
sbb
fcmove
dec
push
js
ja
dec
fstl
pop
xchg
dec
pop
sub
in
out
imul
pop
aad
xchg
cs
or
jmp
stc
jmp
adc
sub
dec
repz
shll
adc
push
test
cmp
inc
cmp
xchg
ss
in
sbb
loop
xchg
outsb
flds
push
jg
inc
inc
push
inc
or
das
addr16
push
dec
push
dec
xchg
cs
xlat
stos
push
pop
cs
lods
int
outsb
jle
lahf
push
lea
mov
gs
jnp
sti
pusha
sti
mov
movsl
gs
or
mov
outsl
add
mov
std
mov
cmpsb
mov
rol
les
test
jnp
loop
pop
loope
loop
xchg
add
prefetchw
sub
out
outsb
mov
add
mov
xlat
fs
or
loop
cmp
pop
int3
mov
adc
out
pop
lea
stos
lahf
mov
gs
pop
test
cmpsb
dec
xor
push
jge
sub
fs
mov
add
mov
push
sbb
test
dec
inc
push
xlat
dec
push
pop
mov
add
cmp
mov
in
fstpt
in
adc
lret
xor
or
int
fnstenv
lret
adc
std
xchg
cld
lods
lods
int3
daa
mov
ljmp
fildll
or
in
lds
orb
cmpsb
push
push
arpl
pop
xor
rclb
sbb
cmp
xor
lods
push
mov
inc
inc
xor
ret
push
pusha
int3
loop
and
push
mov
pop
test
loope
inc
lcall
jnp
out
nop
pop
and
lock
pop
aaa
std
xorb
or
ljmp
jb
xor
ret
ljmp
icebp
sbb
mov
push
inc
mov
mov
outsb
stos
ret
popa
leave
fiaddl
and
dec
imul
xlat
stos
jge
mov
jno
in
xor
rcr
pop
hlt
arpl
cmp
xchg
mov
mov
cltd
pushf
push
xchg
loope
leave
xor
repz
adc
and
test
loop
int3
icebp
inc
repz
pop
outsl
sub
ret
enter
aad
mov
dec
cld
rorl
fiadds
push
xor
rcll
pop
xor
jl
fstpt
jecxz
mov
push
lcall
dec
mov
mov
sub
mov
daa
andl
fidivrs
inc
mov
js
std
or
xlat
dec
fists
mov
jecxz
imul
add
jecxz
add
push
movsb
add
xor
add
fwait
call
lock
mov
cmp
addl
adc
and
sbb
cwtl
out
repz
loopne
xchg
dec
imul
ret
xor
xor
add
pop
and
jno
fldt
fcmovbe
dec
jl
lcall
cli
mov
or
sbb
subb
scas
xor
repz
sub
mov
lock
in
sub
inc
in
xchg
sbb
sarl
imul
mov
movsl
or
dec
jnp
lret
test
pop
add
cmp
dec
xchg
pushf
aad
fcomps
enter
test
mov
test
xor
jo
daa
jno
lods
repnz
in
out
loope
jbe
pop
shr
sar
lahf
pop
push
and
ret
sti
mov
cmpsb
ljmp
data16
jno
push
fidivs
push
cmp
lea
addr16
repnz
mov
and
push
int
pop
inc
pop
pushl
jecxz
mov
loopne
ret
mov
add
out
pop
paddd
push
scas
ja
mov
dec
icebp
pop
or
pop
aad
pop
imul
sahf
sbb
int3
dec
jns
addr16
mov
pop
mov
rclb
inc
sub
push
add
test
test
xchg
dec
and
fnstcw
cmp
mov
aaa
fiaddl
push
mov
xchg
sub
sub
sbb
mov
pushf
xchg
fucomip
test
push
sarl
scas
pop
cmpsl
push
int3
repz
add
push
cmc
jge
mov
mov
psubusw
out
jne
lret
cmp
push
lods
push
jb
lods
fists
mov
enter
cwtl
addr16
stc
scas
std
inc
xchg
xchg
aam
cmp
mov
loop
mov
mov
push
xchg
xor
js
add
jno
jns
inc
rcrl
imul
xchg
repz
xchg
cmp
dec
aam
inc
sub
cltd
lods
xchg
jo
dec
add
fcom
mov
pusha
mov
lods
add
pusha
test
mov
popa
add
or
jge
fsubrl
ss
mov
addl
adc
shr
cmp
test
loop
cwtl
add
mov
pop
add
xchg
call
xchg
popa
xchg
cmpsb
xor
mov
pushf
or
jg
xchg
aaa
xchg
mov
cmpsb
int3
hlt
or
xor
add
or
int3
iret
les
jp
adcl
xor
mov
jne
je
test
out
mov
insl
bound
add
hlt
dec
mov
pop
jg
loope
loope
dec
div
lods
push
stos
es
mov
push
and
jnp
mov
ljmp
aam
out
int3
fsts
mov
mov
and
std
repnz
ret
fisttpll
add
lahf
cmp
stc
sub
outsb
dec
loopne
ret
loopne
xor
and
push
mov
out
adc
repnz
sbb
daa
add
ret
rorb
pop
mov
push
movsl
or
lods
inc
xchg
nop
adc
jl
jp
out
sbb
inc
jp
sbbb
pop
mov
jmp
insb
inc
push
push
mov
jne
dec
dec
andb
add
ss
adc
adc
dec
out
mov
dec
xchg
in
push
sbb
fadd
dec
sub
xchg
push
dec
or
ljmp
lds
dec
test
cmc
std
adc
or
add
inc
jae
dec
add
sbb
enter
data16
insl
cld
sbb
movsb
outsl
mov
rorl
sub
gs
mov
imul
jb
mov
or
insl
in
push
imul
push
adc
ljmp
and
sbb
aad
rorl
scas
out
jnp
loope
stos
xchg
mov
jg
lods
adc
movsb
aam
jmp
dec
jecxz
mov
inc
outsb
mov
xor
xor
je
into
imul
cmp
push
ss
pusha
jns
sub
bound
fdivrs
sbb
xor
loopne
scas
iret
imul
gs
or
lret
sub
mov
cli
mov
or
enter
sub
stos
cmp
cmp
in
sub
std
pop
xchg
dec
mov
repz
cmc
cmp
xchg
add
leave
push
ret
cld
jecxz
mov
cwtl
icebp
lcall
aad
sbb
mov
cld
mov
jne
mov
sbb
data16
in
scas
push
jns,pn
inc
jmp
cmc
pop
dec
pop
or
sub
int3
adc
add
pop
add
add
mull
and
std
cmp
dec
xchg
arpl
push
rcr
push
testb
or
adc
inc
adc
xor
into
clc
lret
mov
mov
movsb
out
sub
cld
jecxz
xor
aam
mov
fadds
pop
adc
jge
xor
sub
fsubrl
fildll
mov
or
dec
out
test
sbb
in
std
std
add
imul
xchg
enter
xchg
pop
scas
pop
xchg
fldenv
sti
testb
xchg
sub
int3
dec
in
jmp
int
mov
ds
xor
idivl
sarl
xor
test
mov
scas
sti
jb
push
sub
out
push
cs
jnp
add
cmp
jnp
jg
mov
inc
loop
sbb
sbb
popa
adc
ja
data16
xchg
fdivs
bound
out
fidivrl
and
mov
pop
add
or
idivl
sub
mov
mov
mov
push
fistps
sbb
out
xchg
xor
lret
cmp
sbb
and
test
xchg
cmpsl
fadds
xchg
xchg
or
xor
inc
fisttps
xor
loopne
jg
mov
cwtl
adc
and
sub
xor
fistl
add
xchg
mov
push
push
xchg
lods
stos
mov
xchg
mov
scas
jg
test
inc
cltd
mov
mov
cwtl
rcl
loope
into
fisttpl
push
push
add
out
into
mov
mov
shl
bound
jge
mov
push
mov
add
xorb
pop
cmp
push
cmp
push
test
jnp
dec
mov
jecxz
jle
dec
fs
into
xlat
incb
sti
call
mov
pushf
aam
faddl
bound
pop
test
insl
mov
jl
mov
sbbb
sub
daa
push
stos
lret
cld
add
inc
cmp
sarb
test
xchg
push
addl
movsb
add
enter
loopne
push
sbb
pushf
xorb
and
mov
inc
jb
mov
addr16
mov
lcall
mov
jmp
mov
insb
add
rorb
in
jmp
aas
mov
arpl
pusha
ds
lahf
imul
or
mov
lahf
out
adc
pop
xor
xchg
loope
xchg
add
lods
cmc
mov
scas
aam
aam
lods
push
and
adc
push
push
xor
xchg
repz
stos
fcmovne
lock
loope
pushf
mov
pop
xchg
aam
push
and
dec
std
shlb
and
xchg
ss
mov
in
jne
or
sbb
inc
adc
adc
jecxz
mov
dec
or
movsb
outsb
mov
pop
xchg
arpl
stc
cmc
add
test
xor
inc
fucomip
jle
sarb
hlt
xchg
in
fisttpll
push
ret
push
sub
cli
xor
dec
imul
lret
dec
dec
loope
repz
lahf
jecxz
mov
xor
lret
pop
divb
or
inc
or
push
mov
cmp
mov
add
pop
shlb
mov
ficomps
xchg
popa
sbb
or
mov
and
fcoms
mov
rcll
sub
adc
es
mov
stos
fists
stos
icebp
add
pop
sbb
outsl
cmp
lock
test
push
dec
adc
adc
mov
pushf
or
int
adc
out
sbb
jae
aam
adc
das
iret
jo
sub
sbb
sub
push
xchg
sub
outsl
xchg
ljmp
mov
in
mov
mov
pop
xor
out
and
hlt
lcall
sarb
jns
lock
jmp
movl
cltd
adcl
add
xor
xor
int3
rolb
jmp
jnp
push
shufps
std
lock
and
into
inc
clc
mov
xor
pop
pop
add
cli
sahf
push
fs
adc
pop
and
mov
pop
mov
les
pop
loopne
lock
ret
shlb
test
rcll
leave
cmp
mov
lock
mov
xor
out
dec
imul
shl
pop
cmpsb
adc
hlt
cmpl
inc
idivl
or
mov
fbld
sahf
out
dec
insl
in
push
inc
sub
icebp
jmp
call
and
cmp
je
fst
insb
bound
popf
add
xor
adc
xor
mov
jnp
popa
fcomps
inc
cmp
scas
lods
mov
jb
mov
jge
loop
es
out
sub
jbe
leave
int
daa
push
fcompl
cmpsb
imul
mov
dec
adc
sbb
std
and
divl
mov
xchg
xor
adc
loopne
stos
ret
xlat
std
mov
inc
pop
outsb
fbld
int3
cmp
in
and
dec
and
inc
daa
mov
xchg
inc
dec
incb
ja
outsl
adcb
and
lods
call
push
dec
mov
mov
pushf
push
and
adc
pop
mulb
ljmp
icebp
hlt
fcmovnb
adc
push
cmpsb
jmp
or
xchg
cmc
cmp
cmpsl
aas
xor
jp
inc
xchg
inc
fs
push
jmp
push
and
shr
push
lods
or
xor
sbb
xchg
mov
out
xchg
dec
mov
cmpsb
bound
and
fsubs
push
cwtl
enter
jge
lret
bound
xchg
dec
loope
arpl
jmp
cmp
xchg
loopne
mov
mov
jnp
cmp
mov
dec
int3
mov
rcrl
pop
mov
pop
sbb
mov
inc
in
xchg
and
xchg
dec
call
jl
jl
arpl
shll
jae
loopne
shr
inc
xchg
xchg
fsubr
fldenv
out
enter
stc
cmp
add
dec
or
leave
pop
adc
mov
data16
xor
jb
add
cmp
mov
cmpb
les
out
push
cmpsb
push
aaa
dec
jmp
xor
push
cmpb
and
test
jle
mov
pop
test
add
push
push
dec
adc
test
push
andb
scas
inc
jmp
xorl
xor
mov
cmp
stos
add
jp
adc
cs
push
in
pushf
pop
imul
addb
inc
pusha
outsl
cld
push
add
sub
scas
imul
mov
int
fists
enter
arpl
xor
mov
mov
scas
std
push
cmp
jno
pop
cmpb
lds
dec
add
lahf
es
jl
jb,pt
daa
and
and
xor
push
lahf
movsl
and
cmp
jb
ret
pop
lea
inc
sub
ja
pop
mov
aad
imul
cmc
sti
dec
negl
pop
xchg
jne
mov
addr16
iret
add
test
cmpsl
sub
or
add
ds
mov
icebp
fsubrl
test
ss
dec
sub
sbb
inc
out
ds
jp
fs
mov
lods
adc
aam
mov
sub
mov
test
push
xor
shlb
xor
cmp
jecxz
pop
add
push
jecxz
adcb
push
mov
pop
test
jle
push
sbb
mov
jne
fidivl
pop
pop
and
sub
inc
dec
xchg
rep
cli
mov
pop
shll
and
mov
das
xchg
fsubs
and
movsl
jle
cmp
jne
sbb
jbe
push
into
mov
mov
and
cmp
push
sub
movsb
sbb
shlb
sub
sbb
dec
sub
mov
enter
stos
jp
push
push
jne
dec
ret
push
mov
scas
adc
mov
aas
js
push
and
idiv
data16
repz
push
leave
jno
cmpsb
mov
push
rclb
add
popf
fs
pop
pop
aaa
pop
or
imul
mov
test
loopne
leave
test
jne
lock
sbb
xchg
sub
lods
mov
stc
addr16
xor
xchg
mov
outsb
sub
and
cltd
add
sahf
pushf
movsl
lret
mov
fwait
mov
mov
sub
cwtl
pop
or
xchg
movsb
dec
rcrl
or
and
xor
int3
xlat
push
mov
sti
add
dec
mov
pop
mov
push
ret
pop
add
cmp
add
dec
outsl
and
shll
dec
mov
sbb
sahf
data16
out
imul
aas
shll
sarb
in
and
arpl
sub
test
sbb
mov
negb
pop
sbb
mov
pop
filds
xor
addl
push
out
xor
dec
jmp
ljmp
mov
or
in
xor
mov
subl
mov
xchg
insb
jg
push
loopne
push
out
outsl
icebp
cmp
leave
xchg
pop
fisttpl
and
out
jbe
mov
push
mov
loope
pop
xor
mov
sub
jecxz
xor
pop
jns
dec
std
mov
add
out
cli
sbb
jb
cmp
pushf
cmp
in
and
cmpl
cmp
sbb
add
xchg
mov
int
push
or
pop
sbb
test
and
out
xchg
mov
mov
or
or
mov
sub
mov
leave
insb
sbb
testb
clc
imul
cld
or
add
add
test
pop
mov
imulb
icebp
sti
jbe
cwtl
test
xor
adc
inc
addr16
int
arpl
sbb
dec
cmp
xor
xchg
xchg
mov
fs
or
mov
clc
arpl
or
xchg
lea
cmp
lea
and
popf
cmp
or
xor
sbb
aad
inc
lock
aas
pushf
mull
enter
std
cmpsb
repz
adc
push
mov
pop
repnz
xor
mov
mov
cld
and
jno
into
or
ljmp
js
xchg
addr16
mov
push
cmp
leave
adc
xchg
sbb
push
ss
push
add
or
lret
jns
imul
addb
sub
pop
sar
test
pop
mov
sahf
stos
std
fcompl
sbb
outsb
xor
sub
mov
pop
shll
imul
add
aam
test
insl
jmp
pushf
fstp
repnz
popf
idivl
or
negb
push
mov
inc
cld
ss
pushf
adc
inc
icebp
dec
xchg
adc
adcb
fcompl
inc
je
xlat
nop
daa
and
movsb
dec
mov
jo
test
into
jns
repz
mov
jns
or
jecxz
lods
orl
jl
fnstcw
jns
and
dec
mov
inc
jno
scas
push
or
fsubrs
pop
mov
sbb
out
insb
inc
ret
push
test
fmul
aam
jge
into
test
mov
cmp
or
call
cmc
call
in
dec
shll
sti
lods
js
pop
test
ljmp
mov
clc
stos
and
stc
std
jne
int3
fidivs
mov
fidivs
dec
sbb
push
stos
jne
jge
dec
call
imul
jmp
cs
and
xor
fnsave
push
inc
jp
ds
pop
cs
push
and
ds
xchg
sub
lods
and
insl
iret
ljmp
mov
mov
cli
push
and
cld
jmp
in
xchg
or
add
std
in
popf
loopne
in
pop
flds
and
jno
in
movsb
inc
out
addr16
es
push
dec
add
push
mov
mov
xorb
shll
add
add
fiaddl
sub
inc
stc
shlb
test
or
lea
xor
cmp
rcll
std
pop
fidivrl
jmp
je
push
push
cli
mov
xor
inc
or
sar
test
aad
call
gs
cmpsb
repnz
lock
jge
stos
gs
cld
push
adcl
jns
inc
cwtl
movsb
loope
xchg
testb
xchg
xor
jbe
mov
aaa
jbe
jge
sub
adcb
mov
movsl
add
lahf
xor
xor
pop
mov
push
rcll
mov
scas
xchg
or
pop
stc
or
je
loopne
xor
aad
stos
mov
cmp
jae
js
cmpsb
cmp
mov
push
inc
jns
jg
mov
outsb
loopne
jb
push
add
insl
add
lods
mov
inc
loope
lret
mov
out
insb
adc
out
popf
push
xor
int
mov
call
out
orb
jbe
sub
xor
bound
adcb
cmp
leave
inc
dec
fldcw
xchg
cmc
mov
dec
leave
jmp
in
outsb
xchg
out
repz
jg
rcrl
outsl
mov
xchg
cmp
mov
jle
aam
movsl
mov
sbb
or
mov
in
jns
lods
jle
push
fistl
mov
jmp
dec
in
cmp
daa
adc
cltd
sbb
mov
cltd
arpl
loope
test
pop
add
jg
test
outsb
inc
xchg
pop
jp
push
inc
sbb
int3
mov
cwtl
inc
adc
add
xchg
ret
mov
mov
push
push
jmp
mov
or
inc
jg
xchg
adc
mov
mov
loop
das
mov
push
sbb
fs
and
mov
push
and
ds
mov
mov
jl
add
pushf
xchg
cld
push
jp
in
xlat
xorb
push
mov
lock
aas
pop
pop
sbb
pop
sbb
imul
mov
int
fcoml
insl
gs
cld
mov
and
push
push
addr16
enter
pop
xchg
mov
sub
lret
fdivs
ficoml
mov
lods
stos
mov
fiadds
faddl
fs
dec
bound
jg
loop
loop
stos
ljmp
jl
cs
loope
fdivrs
imul
lret
lcall
and
adc
pop
jb
push
das
mov
test
push
dec
pop
testl
mov
aad
aas
push
or
push
stos
in
sub
sbb
mov
lahf
adc
mov
addr16
aaa
jge
adc
movsb
sub
jle
push
mov
jmp
inc
mov
stos
mov
jns
das
xchg
pop
sti
cmp
scas
out
mov
mov
movsb
sub
pop
or
or
jmp
mov
pop
sbb
fisubs
jne
daa
inc
mov
or
stos
and
icebp
bound
mov
mov
mov
aaa
inc
mov
inc
jnp
pop
cmp
and
jle
mov
mov
in
sbbl
xchg
clc
sbb
aaa
int
mov
and
pop
fisttps
popa
pushf
xchg
lcall
lds
mov
retw
mov
notb
lret
jecxz
inc
std
loope
dec
cmp
jo
fadds
decb
lahf
loope
aad
je
push
andl
ficompl
add
cli
jp,pn
addr16
mov
cmp
cmp
in
and
aas
or
cmc
fcmovb
outsb
movsb
mov
mov
arpl
jmp
or
jle
xor
and
push
dec
adc
int3
sub
aad
out
filds
dec
in
jecxz
mov
xor
mov
popf
add
jp
jnp
xchg
dec
mov
mov
rclb
jmp
push
cmp
js
js
inc
insl
in
jecxz
cwtl
outsb
pop
fucom
pop
movsb
mov
stc
mov
fldt
and
test
sbb
ret
leave
push
inc
shlb
push
outsb
or
lods
movl
xchg
add
and
xchg
dec
stos
mov
pop
and
pop
sub
add
dec
jae
push
stos
sub
push
inc
jns
and
rcrb
jns
shll
pop
xchg
sarb
sbb
dec
mov
jge
lock
jl
and
mov
pop
xchg
cmp
dec
add
bound
inc
movsl
lret
mov
adcb
in
lock
fimuls
adc
lods
push
xchg
lock
add
js
adc
mov
and
jl
rcr
in
fdivrl
jnp
push
ds
lret
cwtl
cmp
xchg
xchg
dec
bound
cmpsb
jbe
cwtl
and
cwtl
mov
pop
add
mov
and
push
fcomps
out
xlat
dec
jmp
sub
pop
adc
sbb
xor
and
pop
push
test
mov
jge
push
outsb
push
fnsave
sbb
push
or
dec
push
mov
arpl
jmp
stos
mov
outsb
sarl
test
push
jo
lahf
adc
in
inc
jg
inc
stc
sbb
pop
mov
test
mov
rcrl
movsb
loopne
add
test
adc
pop
insl
loopne
ret
test
jns
add
mov
inc
dec
jmp
test
jmp
icebp
lock
mov
xchg
dec
push
test
push
ficoms
pop
movsl
lock
std
xchg
cltd
adc
orb
cmp
mov
testl
xchg
xchg
or
mov
mov
mov
popa
enter
sar
sub
xor
jge
jmp
into
ds
mov
mov
sbb
xlat
adc
mov
js
loope
lea
mov
fnsave
xchg
dec
fstl
dec
pop
cmpsb
dec
icebp
jp
jmp
lods
mov
stc
add
dec
aad
cmc
jnp
in
aad
push
jae
sub
xchg
aam
adc
or
jb
push
sbb
lea
into
mov
repz
dec
outsb
popa
cwtl
inc
add
rclb
dec
xchg
outsb
std
cmp
jmp
ljmp
pop
push
fisttpl
jno
xorb
nop
or
scas
call
sti
push
push
mov
outsb
jb
mov
insb
adcl
push
shlb
data16
lret
repz
push
jb
push
push
push
popa
dec
push
xchg
mov
mov
je
addl
dec
mov
push
cmpsb
adc
in
dec
outsb
stc
push
jl
ret
sbb
iret
mov
or
pusha
add
fpatan
std
mov
fsubl
in
frstpm(287
movsl
imul
arpl
push
pop
push
mov
arpl
cmp
push
jge
movaps
dec
js
inc
cmpl
add
and
jl
in
aad
fidivrl
test
mov
or
push
int
in
lock
xchg
xor
scas
imul
cmp
lods
pushf
ret
dec
jae
cmp
jg
out
xchg
jnp
xchg
rclb
loopne
push
push
loope
pop
adc
inc
jo
pop
sbb
leave
stos
dec
loopne
imulb
std
xchg
adc
mov
or
test
push
mov
mov
fucom
pop
outsl
mov
sbb
jmp
sub
scas
mov
clc
dec
repnz
xchg
ljmp
push
mov
outsb
jecxz
movsl
or
pop
pop
leave
mov
lods
or
lcall
jno
inc
sbb
fimull
xor
outsb
adc
ftst
add
jns
add
inc
addl
dec
xchg
dec
int
pop
sbb
stos
mov
jg
scas
movsl
test
push
cmp
mov
sahf
xchg
xor
xor
sub
jmp
lea
or
sub
cli
push
dec
push
cmc
cli
and
gs
jns
push
sbb
cmc
adc
outsb
inc
out
fistpl
ret
add
xlat
mov
jns
add
and
adc
cmp
hlt
loop
mov
sub
cmc
push
out
aam
loopne
movsl
mov
cmpsb
or
sbb
mov
inc
enter
mov
xor
inc
jp
dec
mov
leave
sbb
dec
rcrl
or
push
jne
clc
js
lcall
push
pop
mov
pop
xor
mov
ltr
jge
loopne
xchg
xchg
sahf
push
add
mov
inc
mov
jecxz
jae
sbb
in
adc
sub
pusha
adc
jl
add
cmp
int
dec
adc
int
inc
xchg
cmp
mov
jmp
fs
add
or
jge
ror
ficoml
push
mov
xchg
sub
adc
xchg
insl
cld
jmp
sahf
js
test
daa
imul
inc
iret
adcb
stc
andb
out
sti
pop
dec
scas
int3
stc
dec
sti
mov
into
sti
jne
popa
repnz
int3
outsb
sub
leave
das
gs
jae
shll
inc
pop
mov
movsb
std
ret
rcr
in
stc
pop
add
mov
in
inc
cs
mov
testb
jno
add
ffreep
out
mov
call
sti
cli
and
xor
adc
sub
cmp
int
scas
mov
pop
lods
mov
add
adc
cmp
push
xor
jae
xchg
mov
inc
xor
push
scas
push
xchg
and
xchg
in
push
outsl
cmc
scas
push
in
movsl
mov
scas
jmp
xor
test
sub
inc
pushf
adcl
inc
mov
cmp
push
xor
lock
push
shll
pop
lret
mov
and
out
pushf
xor
xchg
mov
arpl
mov
rorb
inc
cmp
lret
jg
mov
sbb
lds
xchg
in
inc
lret
and
mov
push
sbb
sub
push
sub
fsubr
push
xchg
das
stc
push
sbb
inc
jmp
ja
jg
jnp
stc
or
mov
sti
arpl
add
gs
sbb
roll
clc
mov
mov
cltd
xor
adc
rolb
push
fmull
mov
dec
push
scas
bound
mov
rorl
sub
or
mov
and
sbb
push
aad
dec
dec
inc
fs
push
test
push
and
imul
pop
test
ja
sub
or
and
sbb
mov
lcall
mov
pop
imul
adc
jo
out
in
outsl
jmp
or
insl
push
fdivr
movsb
sahf
cld
push
leave
clc
pushf
rcrb
mov
ret
and
out
jnp
sub
pusha
in
push
xor
pop
leave
ds
iret
fidivrs
xchg
enter
and
lea
data16
in
xor
int3
insl
xchg
xor
inc
inc
sbb
popf
adc
mov
xlat
das
clc
sbbb
in
int3
jne
imul
arpl
dec
xchg
pop
xor
add
cwtl
inc
jmp
push
or
sub
inc
add
das
repz
sub
popf
cmpsb
dec
ja
cmpsl
cmpsb
dec
es
clc
push
xor
jno,pt
sbb
aaa
or
out
int3
push
mov
ret
js
adc
cs
stos
jns
fbstp
xor
dec
aad
stos
fisttps
sub
sbb
pop
stc
push
pop
int3
aaa
mov
adc
scas
and
xchg
fxam
sbb
jnp
xorb
jmp
or
dec
cmp
inc
ret
push
sub
lcall
iret
insl
add
sbb
in
ss
subl
loope
cmc
mov
push
std
mov
sbb
pop
lods
outsl
lret
outsl
and
jle
fmulp
data16
cmpb
adc
dec
push
push
les
scas
jmp
nop
hlt
mov
shl
icebp
xchg
push
jecxz
and
rorb
stos
inc
shrd
mov
xor
outsl
scas
movsb
movsl
sub
js
lret
lcall
iret
je
adc
daa
xor
add
jno
inc
clc
lcall
ljmp
mov
pop
mov
rcrb
test
inc
mov
addr16
xchg
int
adc
push
or
popf
scas
iret
fcoml
lcall
and
pop
and
roll
shrb
dec
addr16
dec
mov
xchg
adc
adc
adc
adc
mov
xor
iret
and
in
sbb
jp
and
mov
fdiv
popf
dec
add
nop
out
push
adc
shrl
sbb
in
repz
push
rcll
cmpsb
mov
in
adc
mov
xchg
scas
addr16
ret
xchg
xchg
shl
push
mov
fsubs
ljmp
dec
cmp
mov
repnz
push
cmp
pop
ror
incb
dec
in
pop
shl
xchg
std
test
je
mov
mov
popf
cmpsb
fwait
aam
inc
idivb
cli
pop
and
loop
xchg
and
cmpsb
push
push
stos
fmull
and
jp
mov
push
sub
scas
lods
push
fxam
jno
mov
sbb
pop
cli
add
std
std
addr16
leave
xlat
inc
ret
mov
lret
in
push
xchg
dec
dec
fcomp
pop
inc
ret
in
jns
dec
imul
in
cmp
mov
mov
js
fidivrs
mov
jg
into
out
hlt
and
imul
sahf
mov
lahf
scas
mov
out
loopne
sbb
movsl
push
ficoml
push
fimuls
test
or
push
enter
and
jp
or
sub
xchg
clc
ja
inc
cmp
jle
cs
mov
pop
pop
call
pop
fs
sub
and
fs
pshufw
or
xchg
or
cmpsl
add
mov
test
adc
pop
xchg
cmp
rsm
inc
mov
xor
punpcklbw
std
stos
test
add
imul
movsl
test
enter
xorb
and
lcall
mov
mov
mov
mov
sub
dec
mov
cld
lock
cmpsl
out
jle
add
popf
lds
jecxz
sahf
addr16
dec
xlat
les
pop
cmpsb
aam
repz
iret
lahf
lret
lcall
push
add
or
mov
push
push
pop
cmp
pop
mov
neg
dec
pop
add
outsl
stos
subl
cmp
mov
sahf
add
xor
cld
add
add
clc
pop
jnp
ret
sarl
insl
cmp
out
aas
dec
mov
fldenv
sahf
icebp
xor
add
cmp
ljmp
lods
mov
and
or
add
int3
out
fwait
mov
dec
xchg
enter
test
fldcw
adc
xchg
movsl
es
dec
aam
int
mov
push
stos
addr16
outsl
inc
mov
push
pop
popf
xchg
std
iret
jl
cmp
xor
sub
mov
pop
xchg
scas
or
shll
in
or
adc
dec
and
push
mov
xchg
nop
fcoml
xchg
xchg
jno
mov
in
pushf
iret
dec
fiadds
mov
push
mov
inc
lods
pop
movsl
out
sub
mov
sahf
inc
notl
fisubrl
mov
orl
mov
push
adc
mov
fs
jae
cmp
loopne
lods
out
fsubrs
push
ret
iret
popa
addl
dec
pop
jp
inc
cmp
lahf
hlt
das
and
dec
es
popf
cld
adc
push
fbstp
sub
push
cmpsl
add
pop
popf
int3
cmp
les
inc
pop
fisttpl
mov
add
hlt
pop
std
xchg
add
testb
rcll
cld
mov
sbb
adc
ljmp
or
movsb
and
popf
cwtl
movsb
cmp
aas
in
and
mov
lahf
pop
scas
xchg
mov
js
leave
dec
cltd
scas
popa
ret
aaa
push
out
add
push
lods
inc
and
movsl
jae
pop
sub
cmp
add
mov
sbb
ret
loopne
stos
sub
aas
and
or
clc
mov
or
push
testb
dec
pop
pushf
or
pop
mov
mov
int3
add
mov
dec
mov
scas
cmpsl
cwtl
ret
mov
popa
jg
aam
ljmp
aad
add
xchg
add
fld
cmpsl
test
mov
add
push
sub
and
dec
popl
cmp
rorb
out
mov
sahf
cmp
fcompl
jne
insl
lock
cltd
jl
mov
cltd
shll
ret
addr16
push
clc
mov
pop
hlt
mov
xchg
dec
scas
test
mov
adc
in
sar
push
mov
subl
or
mov
sbb
mov
sub
imul
test
xchg
fdivrl
arpl
fcmovnu
inc
sbb
adc
mov
dec
call
push
mov
pop
jmp
xchg
movsb
jae
sahf
dec
idiv
divl
rcl
mov
in
leave
mov
adc
pushf
push
sbb
adc
out
out
jae
lcall
popa
dec
imull
data16
lea
dec
mov
pusha
lock
dec
cmp
test
xorb
push
nop
outsb
in
cmp
sbb
ljmp
daa
jno
pop
mov
mov
inc
xchg
nop
mov
adcl
jl
rorl
cs
sbb
mov
scas
gs
je
mul
jb
shll
xor
stos
mov
push
or
xchg
xchg
xor
cmp
testl
movsb
xchg
xchg
stos
sub
mov
data16
inc
pop
xchg
dec
or
xor
and
negb
lock
fwait
shll
jmp
push
in
dec
and
inc
mov
stos
push
jae
add
inc
push
stos
push
push
out
repz
lcall
xchg
stos
movl
je
lahf
cmp
cwtl
jo
jnp
mov
xor
mov
add
fldt
or
sbb
adc
push
fiaddl
sub
xchg
mov
test
roll
test
or
inc
fimull
dec
jecxz
mov
das
cmp
xchg
cmp
jg
cwtl
out
lcall
pop
pop
jmp
xchg
mov
or
shr
dec
das
loop
cmp
inc
xchg
cmp
mov
daa
fcmovb
push
pop
shlb
xlat
and
add
int
jbe
and
mov
dec
loope
in
inc
cmp
mov
mov
mov
dec
fisubl
cli
lahf
ljmp
and
push
testl
stc
in
mov
addr16
imul
and
mov
mov
xchg
mov
mov
shrl
push
cmpsl
stos
out
dec
fs
adc
js
adc
pushf
int3
out
or
insl
dec
cmp
fcmovnb
out
jp
in
popa
ja
pop
push
push
mov
mov
lods
and
out
inc
sbb
and
call
icebp
shll
mov
popa
movsb
and
aas
pop
sub
data16
mov
sbb
lds
push
test
pop
dec
push
jb
enter
xor
xor
out
xlat
cli
dec
pop
xchg
push
sub
mov
loopne
les
leave
bound
xchg
sbb
dec
dec
inc
mov
stc
rclb
mov
ljmp
sbb
lods
lds
inc
movsl
jp
dec
lgs
sbb
cmc
in
jnp,pt
dec
stos
out
adc
pop
imul
sbb
mov
inc
or
cmp
push
push
nop
stc
inc
rorb
adc
sarl
cwtl
es
mov
or
in
popa
mov
or
pop
and
adc
mov
scas
adc
aam
and
jnp
jle
aad
cli
clc
fisubs
mov
cmpb
into
out
loopne
in
aas
dec
in
mov
xchg
adc
rcl
je
int3
add
test
in
filds
rcr
and
adc
push
pushf
mov
das
xor
sbb
clts
xchg
pop
mov
hlt
jo
aam
cmp
daa
orb
push
mov
jl
ret
sbb
jmp
xchg
mov
or
iret
hlt
sbb
mov
je
pop
xchg
dec
rcr
mov
in
je
mulb
or
xlat
out
xchg
mov
stos
aas
call
adc
inc
push
inc
int
sub
cmp
xchg
fisubrl
in
pop
hlt
sub
inc
outsb
and
push
inc
xchg
andb
cmpsl
dec
cmpsl
jns
adc
aaa
std
push
cmp
idiv
js
xchg
xchg
data16
or
add
cs
sub
aam
arpl
adc
or
cmc
in
cmpsb
xor
cmp
aas
mov
shl
fdivl
cwtl
leave
pop
loope
mov
ret
imul
rorl
cltd
imul
adc
dec
cli
in
jmp
cmovp
in
iret
call
push
pop
push
adc
xor
push
bound
pop
cli
aas
mov
cmc
jns
jb
adc
subl
push
shlb
jg
out
test
or
ror
inc
outsb
dec
xchg
sbb
sti
in
sub
cld
jp
shrb
lahf
jne
jns
inc
stos
lret
dec
cld
out
cs
shr
adc
vmovaps
dec
xchg
adc
mov
mov
in
push
aaa
shlb
dec
inc
insb
pop
repnz
mov
enter
je
or
in
add
std
xchg
stos
mov
mov
out
sub
outsb
cmp
sub
imul
loopne
test
dec
mov
push
aaa
out
scas
fisttps
lret
add
je
mov
adc
iret
adc
mov
mov
dec
mov
repz
lret
pop
jne
daa
lds
mov
scas
sub
mov
shlb
xchg
cmp
mov
shrb
jae
sti
pushf
mov
addr16
repnz
adc
pusha
ljmp
adc
test
or
mov
cmpb
pushf
pop
je
xchg
in
lahf
fnstenv
pop
add
fs
cltd
mov
or
adcb
inc
xchg
and
mov
xlat
aas
filds
adc
mov
scas
hlt
mov
stos
ljmp
sbb
jmp
in
cmpsl
pop
test
pop
mov
shll
cmp
and
pop
adc
push
lods
cwtl
insb
inc
out
faddl
lcall
sbbl
mov
push
cld
dec
out
mov
lds
cmpb
arpl
add
ret
lret
sbb
daa
jb
es
mov
inc
jbe
xor
push
repnz
sub
movsb
jmp
mov
fdivp
fwait
sbb
clc
sub
repnz
sub
adc
fbld
outsb
xor
pop
test
hlt
outsb
add
lods
sbb
cmpsb
mov
repnz
je
push
sub
mov
and
push
scas
jl
lret
in
jp
std
lea
pop
ja
push
fistpll
adc
test
sahf
mov
gs
lods
int3
mov
xchg
mov
and
cs
dec
flds
mov
jns
cmp
xchg
sti
jns
gs
data16
adc
cli
int3
idivb
xor
jp
mul
mov
daa
and
and
movsb
dec
sar
fidivrl
mov
in
mov
data16
mov
repnz
gs
es
mov
dec
xchg
mov
in
movsb
sub
icebp
daa
fisttpl
jmp
cmpsb
popa
aas
xchg
xadd
scas
rorl
inc
icebp
xchg
jge
test
or
lds
or
outsb
pushf
jno
fucomi
mov
incl
mov
lahf
pop
popa
cmp
cmp
mov
sarb
sbb
dec
fldt
pop
mov
jo
push
iret
mov
cltd
dec
out
sbb
test
subb
sbb
and
fisubrl
sahf
lret
test
and
addr16
jnp
ljmp
sub
adcl
nop
inc
pop
mov
pop
and
mov
scas
hlt
lds
popf
sub
dec
mov
stc
sbb
inc
repz
out
hlt
mov
call
mov
mov
push
cmp
cmp
pop
les
cmpsl
fptan
mov
xchg
push
fadds
ds
repz
mov
cltd
repz
scas
mov
push
lea
hlt
jno
mov
int
xor
add
sbb
mov
cwtl
xsave
cwtl
and
or
xor
dec
mulb
ljmp
rorl
cmp
ss
shrl
cmp
add
lahf
insb
leave
lods
js
aaa
enter
lcall
mov
xchg
push
fwait
hlt
ret
mov
and
mov
lcall
mov
shrl
ja
push
mov
sbb
adc
adc
pop
mov
out
lret
fsubl
adc
aad
mov
sbb
pop
outsl
arpl
test
mov
sbb
push
xor
mov
dec
es
cmp
movsb
and
gs
xlat
test
sbb
inc
pop
stos
imul
in
iret
dec
push
inc
subb
xchg
xor
out
subl
xor
sub
sahf
dec
or
jne
scas
aaa
or
aad
sbb
jae
xchg
mov
je
scas
mov
push
inc
jb
stos
sahf
aad
mov
add
push
jne
pop
push
mov
xor
sti
sbb
xchg
and
mov
add
sub
fnstcw
or
jae
sahf
mov
xor
mov
xchg
loop
adc
mov
or
cmpsb
sub
cmp
call
push
shrl
into
mov
leave
cmp
push
mov
je
add
mov
or
inc
sub
jecxz
jge
subl
lret
push
pop
fistpl
mov
adc
jae
mov
adc
pop
popa
int3
jp
cmp
jecxz
loopne
stos
outsb
rep
inc
adc
mov
lods
mov
stc
sahf
and
cmpsl
into
mov
inc
push
vpacksswb
in
out
xchg
xor
mov
fs
in
jns
outsl
dec
in
in
cli
pop
xor
cmp
pop
stc
into
xchg
cmp
xor
ds
mov
in
add
sbb
ficoml
fdivrs
jl
dec
mov
pop
adc
ret
pop
ss
or
add
push
xchg
mov
inc
pop
mov
shll
push
mull
sub
repnz
mov
pushl
and
inc
mov
push
jnp
xchg
out
ds
fs
outsl
scas
cmc
aad
cmp
nop
jae
fucom
pushf
push
lret
cmp
gs
mov
mov
push
aas
mov
ja
mov
xor
xchg
inc
jl
lret
push
push
test
or
adc
gs
sub
push
dec
xchg
addr16
cld
push
jbe
pop
lahf
outsb
test
test
loop
mov
decb
and
adc
cmpsl
mov
or
sbb
xchg
ret
lea
loope
or
push
ss
push
adc
dec
lea
xchg
sub
loope
scas
pop
adc
dec
in
faddl
es
sub
imul
inc
repz
bound
or
loop
adc
pop
fsubs
out
push
cld
and
lods
jo
dec
inc
cmpsl
out
push
aas
negl
outsb
lds
popf
cmpsb
mov
das
std
in
lock
and
xor
jl
pop
int
push
lds
fwait
and
rolb
mov
add
ljmp
inc
ja
push
orl
arpl
add
loopne
ret
mov
in
push
sbb
shl
sbb
or
dec
xchg
jno
dec
jecxz
loope
or
jecxz
insl
push
ret
test
or
aam
cs
test
adc
xchg
adc
lea
aad
popf
lods
xchg
sbb
add
es
loop
xchg
jb
shll
cmp
sub
xorb
stos
jg
icebp
in
mov
mov
mov
jge
divl
inc
dec
div
or
jp,pt
imul
and
test
xchg
mov
cmpl
inc
sbb
call
movsl
outsl
sub
pop
mov
int
pop
sub
sub
inc
and
mov
ffreep
push
adc
and
out
in
les
dec
daa
cld
push
xor
dec
rol
and
cmp
in
jnp
inc
and
dec
xchg
xchg
insb
das
das
dec
sbb
xor
cltd
mov
outsb
or
movsl
repz
lea
jne
out
inc
jae
inc
orb
roll
sub
pop
dec
jb
lock
aam
mov
pushw
jl
mov
cs
je
insb
lret
popf
cmp
arpl
push
cmp
in
ds
pop
add
sub
outsb
sbb
gs
jl
pop
mov
lods
add
adc
xchg
icebp
pop
enter
pusha
movsl
clc
enter
jmp
popf
ret
mov
fmull
xchg
or
sub
in
out
mov
cltd
outsb
sub
and
cld
ljmp
mov
mov
xchg
add
mov
ss
mov
test
decl
dec
popf
hlt
jae
dec
sbb
in
jnp
xchg
lods
dec
inc
jge
mov
jae
ret
bound
ja
lods
fcoml
xor
dec
or
aaa
aaa
cmp
push
enter
pop
out
mov
sbb
mov
stc
js
sub
xor
push
mov
in
leave
push
aam
push
add
add
loope
repz
bound
fildll
adc
sbb
push
inc
dec
in
mov
int3
and
ret
mov
mov
sbb
xchg
sbb
pop
mov
add
repnz
rolb
pop
gs
out
inc
lahf
cmp
fldcw
mov
push
insl
cmp
dec
adc
pop
or
cmp
xor
xchg
push
xor
scas
sbbb
jmp
imul
andl
adc
pusha
xor
lods
aam
jge
push
xor
movsl
fwait
jp
mov
or
cmp
sbb
in
daa
inc
test
xor
dec
scas
pop
ret
sti
sbb
mov
xchg
mov
js
cwtl
jo
mov
pop
or
ljmp
in
scas
aas
pop
mov
push
rolb
fstpt
ret
pop
loope
and
sbb
sub
sbb
pop
mov
shl
sub
daa
test
push
inc
adc
xchg
fbstp
imul
outsl
stc
ds
stc
int
mov
out
pop
sti
mov
pop
xor
inc
sbb
jl
inc
repnz
into
enter
jle
fimuls
mov
dec
inc
insl
jmp
adc
add
sbb
mov
fnstcw
xchg
push
enter
ret
or
out
mov
mov
rcrb
data16
out
movsb
adc
fdivrs
ret
adc
mov
outsb
loope
cmpsl
xchg
lods
or
scas
cmp
cmp
sub
sti
or
sbb
xchg
hlt
inc
fadds
in
mov
test
jg
fisubl
cmp
mov
add
xchg
cs
sbb
pop
adc
test
cs
popf
pop
cltd
push
test
mov
dec
xchg
jbe
lcall
lods
xor
sti
add
movsb
aaa
mov
call
cmpsl
ret
js
arpl
add
pop
std
sti
stos
mov
mov
faddl
cld
inc
cmp
mov
jnp
sahf
jmp
cmp
pop
mov
xor
xor
mov
push
jge
cwtl
xchg
lods
nop
js
cld
sarb
arpl
lcall
pop
push
movsl
jp
pop
repz
and
pop
cli
xor
pop
inc
dec
mov
add
sbb
xor
or
push
push
inc
cli
and
mov
mov
loopne
je
push
in
fisttps
mov
or
shlb
pusha
push
pop
popf
fdiv
cmp
shll
outsl
xor
pop
adc
in
mov
mov
fnstenv
lcall
and
leave
loopne
dec
cmc
mov
cmp
push
sub
out
pop
inc
and
in
xchg
movsl
sub
inc
lods
or
test
and
ja
xor
in
xor
push
mov
inc
int3
add
cmp
adc
mov
popa
stos
pop
cmp
xor
mov
jne
call
jp
push
andl
mov
lock
in
jno
cltd
leave
into
adc
xorps
outsl
int
mov
fistps
ja
xchg
xchg
mov
push
je
pop
iret
adc
mov
jnp
xor
imul
lods
adc
fdivl
or
movsl
in
les
pop
inc
xchg
cli
xor
in
and
repz
sbb
mov
push
pop
into
pop
and
inc
dec
cmp
iret
cmp
jp
push
push
mov
out
int
and
das
fistpll
rorb
mov
mov
jmp
aas
mov
push
push
or
mov
popa
push
out
popa
ljmp
stc
push
jg
push
dec
push
sub
and
inc
fbld
fisubrs
gs
inc
pop
fdivl
inc
jns
cmpsl
or
clc
mov
daa
jg
sub
mov
xchg
sti
sahf
fildll
mov
add
in
ret
xchg
sti
clc
movsb
dec
lods
and
pop
xor
int
mov
xchg
adc
fisttpll
push
adc
pop
push
xchg
das
scas
mov
cmpsl
fsubp
fldcw
xor
lods
xchg
in
sbb
xchg
out
pop
shl
cwtl
subb
pop
outsb
mov
sub
ret
and
iret
jbe
fwait
push
push
jg
inc
ds
insl
repz
adc
fnstenv
popa
cmc
sub
int3
test
icebp
dec
or
add
cwtl
push
ss
mov
mov
push
repnz
mov
loopne
pusha
jae
enter
aaa
incl
jo
mov
scas
loop
dec
jmp
cwtl
sti
loop
loopne
inc
nop
inc
push
sbb
sbb
fists
inc
push
and
xchg
ljmp
jo
out
push
pop
int
or
aaa
adc
rcll
hlt
xor
mov
aaa
pop
mov
mov
stos
xor
sub
fisubl
arpl
bound
sbb
sbb
aad
mov
rolb
mov
adc
mov
shrl
mov
icebp
aaa
adc
xchg
sbbl
jmp
aad
sub
adc
js
pop
sbb
enter
push
jo
sbb
xor
lods
icebp
jle
jl
hlt
mov
add
xor
imul
or
lds
nop
xor
test
das
rolb
shll
fnsave
in
push
push
push
mov
sti
movsl
bound
push
stc
jmp
or
mov
pop
pop
push
pop
daa
inc
pusha
fdivrs
pop
dec
jmp
call
sbb
popa
or
inc
inc
into
xchg
loope
inc
mov
xor
loopne
xor
jle
jb
xchg
push
inc
jle
add
ljmp
sbb
jg
add
dec
lea
test
push
push
inc
cwtl
js
xor
pop
sbb
loope
fistps
jg
cmp
loope
mov
ljmp
fsubl
out
lock
pop
add
cmp
aaa
repz
out
out
notl
aad
sub
inc
jmp
sarb
xchg
and
andb
in
mov
push
icebp
mov
sub
pusha
mov
xor
sub
or
mov
xchg
adc
push
insl
cmpsb
les
and
sti
jbe
mov
sub
test
int
xchg
jb
loop
sahf
stos
dec
pop
in
arpl
aaa
mov
cmp
cmp
sbb
and
mov
lods
addr16
or
mov
jb
cmp
test
fistpl
jbe
jmp
mov
mov
int3
add
nop
sub
iret
scas
in
jmp
jns
add
fldenv
sbb
shl
cmp
repz
or
ret
outsb
lret
mov
in
test
in
jg
fistpll
xor
pop
in
and
dec
outsb
push
add
shlb
rclb
bound
or
jo
jbe
xchg
cli
shlb
sti
roll
ficoml
mov
out
nop
in
jmp
inc
rcrb
mov
jo
sbb
mov
and
cmc
mov
add
pop
adc
xor
inc
stos
mov
ficoms
int3
arpl
es
mov
sbb
pop
xchg
sub
cmpsb
or
dec
mov
push
pop
jae
in
pop
mov
ds
mov
jae
loop,pt
pop
push
jb
push
lods
sub
mov
mov
jmp
test
push
adc
callw
jnp
sbb
lcall
into
cwtl
cmp
add
ljmp
jp
bound
add
pop
lret
cmp
sbb
call
fwait
sbb
mov
jb
mull
sbb
xor
outsl
jle
add
enter
or
hlt
aam
sarb
lcall
mov
jo
jns
ja
inc
lds
jecxz
jge
pop
lea
fdivr
popf
mov
mov
or
rolb
stos
or
lods
into
mov
adc
sbb
jbe
xlat
sbb
xchg
in
mov
mov
shr
cmp
mov
fldcw
test
jno
shll
push
call
dec
jb
daa
test
outsl
xchg
jl
popf
inc
sbb
lock
mov
xchg
mov
std
push
xchg
ss
pop
test
ljmp
fucomp
push
mov
cmp
pushf
or
sub
rcll
pop
negb
out
xchg
hlt
aas
push
sbb
fld
mov
bound
jnp
push
fcmovbe
sub
negl
ss
loopne
stos
bound
loopne
subb
out
nop
or
stos
jbe
xor
pop
adc
adc
xchg
xor
cwtl
mov
add
or
dec
inc
int3
cmp
loope
mov
or
into
outsl
inc
idivl
inc
cli
loop
fwait
adc
mov
rol
loopne
xchg
sub
scas
ds
mov
lds
leave
pop
mov
lcall
and
adc
cmp
ficoml
cwtl
sbb
xchg
xor
cmp
cwtl
jmp
lock
xchg
and
lods
push
aaa
inc
adcb
dec
dec
xor
insb
mov
push
in
mov
popf
xchg
jge,pt
movsb
sub
hlt
pop
sbb
test
sub
cmp
clc
sti
orb
imul
popa
and
and
icebp
call
mov
and
xchg
jne
and
inc
repnz
xor
test
fnstcw
leave
push
idivb
adc
and
pop
inc
cmp
jecxz
or
mov
out
test
push
inc
das
lret
lods
lods
test
cli
mov
mov
mov
out
movsl
dec
xchg
lcall
or
jbe
dec
aam
imul
adc
dec
fists
dec
or
aaa
out
sub
clc
mov
repnz
jecxz
testb
es
pop
shll
test
ss
mov
pushf
inc
cmp
sub
fists
mov
pop
push
xchg
outsb
lods
add
rolb
ljmp
ljmp
shlb
xlat
out
jns
dec
loop
push
out
inc
lcall
popf
or
rcrl
insl
xorl
call
pushf
xchg
test
or
inc
jp
pop
pop
outsb
inc
in
push
repnz
mov
dec
cmp
stc
or
ret
mov
faddl
arpl
cli
scas
loope
ret
xchg
rorl
jno
adc
in
lds
outsl
addb
int
mov
cmp
adc
loopne
loop
dec
adc
xor
cmpsb
sbb
lods
ljmp
gs
pop
call
sbb
out
push
and
sti
clc
xchg
enter
lea
mov
mov
hlt
aam
cld
xor
xor
xchg
cmpsb
call
ficoms
popfw
xchg
jne
sub
push
push
lret
mov
popa
call
and
pop
pop
divb
out
stc
pop
in
jbe
out
pop
inc
das
scas
push
cld
js
test
and
or
addr16
push
mov
dec
cld
mov
add
inc
and
sub
leave
fwait
xor
cmc
jl
push
es
fs
mov
ja
xlat
inc
sub
mov
cwtl
sbb
xchg
bound
xchg
arpl
icebp
sbb
jle
loop
mov
jns
int3
icebp
repz
or
or
sbb
sub
jnp
fdiv
add
outsb
mov
test
arpl
inc
inc
pop
cs
cmp
push
in
shr
inc
push
inc
lock
inc
rclb
xchg
inc
lcall
pop
fwait
pop
in
xchg
fsub
mov
or
data16
xchg
fbstp
or
push
shlb
sub
add
dec
dec
subl
std
sub
out
add
js
je
add
xchg
xlat
add
lods
mov
cld
jecxz
add
jne
lret
fcoml
sub
push
cs
mov
nop
pop
sub
cmp
ss
repnz
jno
jb
push
dec
mov
std
je
pop
movsl
sbb
add
cmp
xchg
add
hlt
or
cmpl
xor
adc
fadd
or
dec
scas
xchg
pusha
xchg
dec
mov
push
or
scas
stc
push
cmp
leave
push
faddl
repnz
fcoms
hlt
or
icebp
adc
nopl
mov
mov
ljmp
in
jae
js
add
inc
mull
mov
cmp
cmp
adc
xchg
stc
pop
adc
aaa
cltd
push
scas
sbb
movsb
ja
movb
stc
jecxz
shrb
enter
pop
dec
dec
imul
jae
sarb
test
adc
sub
mov
cmc
add
int3
and
jbe
ss
rolb
sbb
hlt
fisubrs
pslld
aad
scas
mov
call
rclb
lds
scas
sbb
inc
in
mov
mov
mov
inc
mov
push
imul
push
cmp
and
stc
aad
lods
pop
mov
dec
mov
or
cmpl
xchg
cmpsl
fcompl
sbb
ret
in
in
lea
dec
cmpsl
scas
mov
pushf
testl
les
shr
test
pop
mov
mov
mov
scas
pop
stos
lds
jle
xor
xchg
and
hlt
arpl
test
pop
aaa
in
jnp
sbb
jnp
popa
rcr
mov
fld
lds
cmp
movsl
idivb
xchg
mov
or
lods
test
div
pop
ret
decb
mov
out
dec
cmp
xchg
imul
mov
fsubrs
sub
jbe
repnz
ficomps
mov
jle
xchg
xor
jae
fcom
daa
dec
lret
pop
lock
fiadds
mov
xor
sbb
jmp
cli
icebp
mov
fistpll
lock
shlb
pop
fistl
cmp
test
sub
test
ja
sub
shr
call
inc
lods
aam
out
cmpb
and
or
sub
push
sahf
es
inc
sbb
pop
lods
jbe
xor
idiv
aaa
fchs
int
add
inc
push
shlb
jns
mov
pop
jbe
fsubrp
dec
loop
notl
rcll
popl
daa
mov
subb
fstpl
mov
or
nop
push
jbe
fdivs
xchg
jns
addr16
iret
aam
pop
jge
shrb
fistpll
jmp
mov
rorl
fstps
dec
dec
inc
push
mov
cltd
add
and
xchg
jbe
cmp
lods
test
jl
add
xchg
mov
cmp
in
fisubs
int
and
cmpsb
insl
and
xchg
ds
and
fcomi
out
inc
pop
std
sbb
jle
xchg
push
out
mov
push
mov
gs
mov
add
ds
dec
fiadds
insb
movsb
int3
sti
divb
inc
dec
leave
sbb
jns
cmp
aas
enter
sar
push
jb
or
sbb
and
int
cmp
mov
popa
dec
and
rclb
add
out
pop
ss
pop
js
mov
mov
mov
lods
cltd
jne
fmuls
mov
fdivs
jecxz
add
pop
cwtl
scas
adc
fstps
lret
pop
jg
pop
scas
int
push
xor
movb
loopne
push
arpl
jge
pushf
rcll
push
push
inc
ljmp
ret
std
sub
inc
pop
and
mov
pop
clc
imul
add
mov
cmp
lock
push
cmp
push
mov
daa
lea
xor
add
imul
pop
pop
mov
jne
call
stos
iret
mov
fcmovnbe
sub
and
inc
mov
scas
xor
mov
ja
loopne
mov
jmp
mov
shlb
push
scas
push
add
test
xchg
jne
fcoms
inc
sbb
aam
adc
movb
loope
inc
shl
faddp
out
add
out
push
int3
push
in
ja
and
add
nop
add
insb
leave
add
les
outsl
push
cwtl
imul
in
jge
rol
ret
xor
lcall
push
pop
cmpsl
and
pop
pop
mov
pop
or
add
inc
insl
adc
cmp
fistpl
js
and
pop
adc
pop
pop
mov
mov
shll
in
adc
and
leave
cmp
mov
cmp
int
lret
test
mov
test
lret
fisttpll
fsubr
jmp
push
stos
jns
in
loopne
xor
in
popa
inc
mov
jb
xor
mov
mov
xor
adc
in
mov
ss
notl
and
addl
add
mov
shll
inc
rol
imul
cmc
xor
sarl
xor
pop
jne
movsb
push
pop
ds
push
out
adc
mov
notl
rcrb
stc
pop
pop
ja
stos
sahf
dec
ljmp
cmpsl
push
data16
ret
sbb
aam
push
mov
dec
loope
xchg
and
inc
cmp
cwtl
subl
in
outsl
mull
inc
dec
cmp
xor
fiaddl
loope
cmp
ret
mov
adc
imul
adc
mov
xchg
mov
jmp
pop
and
sbb
repnz
je
stos
scas
sbb
orb
mov
rcr
loop
stc
out
or
pop
and
lea
dec
cmpsl
in
aas
jp
jg
add
mov
hlt
adc
test
pusha
or
test
mov
pop
mov
ret
ss
pop
nop
inc
push
orl
pop
jg
mov
js
adc
cs
adc
adc
mov
outsl
push
fwait
or
or
jbe
add
enter
mov
pop
nopl
jae
or
jg
push
aam
sarb
dec
mov
jae
inc
stc
jl
mov
test
in
sti
movsl
imul
mov
jge
into
push
xor
adc
mov
aam
stos
negl
adc
cmpsb
or
jp
stc
cmc
pop
aas
in
pop
insb
dec
or
xor
lcall
lock
sub
sarl
fdivp
sub
out
lods
imulb
and
mov
cmp
jnp
jle
lods
rcrb
in
iret
lret
cmp
xchg
mov
sbb
pusha
mov
lods
movsb
ret
out
xor
cwtl
push
ss
scas
pop
dec
inc
jge
jae
pop
loop
in
ja
inc
xchg
sahf
xchg
div
jb
out
shlb
inc
cmp
imul
pop
mov
stc
rclb
cmpsb
cld
inc
out
mov
cmp
pop
test
icebp
pop
mov
ds
mov
insl
cltd
cs
pop
lret
cwtl
fsubrl
lock
and
mov
adc
xchg
push
add
cmp
movsb
cld
mov
in
cltd
jle
lods
sub
xchg
fdivl
pop
lret
mov
add
fs
repz
cmpsb
roll
rorl
jge
and
pop
fxam
jl
cmp
in
popa
push
bound
data16
cmpb
je
push
gs
ret
xor
and
jecxz
xor
shr
pop
pushf
js
icebp
cmp
call
outsl
cmpsl
stos
pop
sbb
xchg
std
ret
fdivl
xorl
inc
js
aas
sub
and
stos
mov
icebp
mov
pushf
or
push
es
and
jne
mov
fimuls
daa
add
into
out
inc
filds
rorb
mov
call
pop
cmc
stos
xchg
push
add
test
jb
add
andl
jle
sbb
cmpsl
fucomi
je
cmp
dec
jg
and
xchg
add
mov
pop
mov
lea
popf
fisubrs
aam
and
mull
jg
dec
shlb
das
jge
test
js
sub
mov
mov
dec
xchg
adc
stos
adc
shlb
sbb
pop
add
imul
adc
iret
fwait
mov
mov
mov
mov
pop
cmpsl
gs
mov
sbb
cmp
test
lods
ret
test
test
mov
std
enter
push
cmp
xchg
and
and
xor
xor
js
nop
mov
or
push
clc
pop
mov
cltd
cmp
shl
sub
enter
pop
mov
lods
testl
fxrstor
inc
inc
lods
daa
cmpsb
xchg
lret
or
xchg
push
or
icebp
jnp
loope
mov
bound
inc
cmp
aas
aas
ret
xor
push
push
xor
call
out
or
ss
int
mov
and
iret
dec
mov
lods
inc
push
xor
pop
in
les
loop
cs
pop
dec
mov
cmp
test
orb
xchg
int3
push
and
ficoml
pop
add
sbb
jbe
lcall
test
frstor
aam
cmc
cmp
xlat
sub
jne
jmp
into
cltd
nop
jae
fisttpl
adc
add
push
inc
int
sub
mov
decb
test
out
jecxz
mov
aas
jmp
test
mul
pop
jb
ret
dec
xchg
or
jmp
loop
iret
or
dec
sub
outsl
pop
sub
dec
lret
aaa
pop
addr16
mov
lcall
mov
pop
adc
ds
jge
in
in
pop
popf
sbb
push
inc
outsb
loop
xchg
test
enter
xlat
xchg
dec
jae
into
mov
mov
movsl
mov
aas
mov
pop
cmpsl
jle
cwtl
dec
cmp
inc
dec
push
or
xchg
std
push
pop
ficoml
imul
lret
xlat
pop
sbb
je
sarl
pop
mov
sub
fdivr
mov
into
sub
pop
into
fbstp
add
into
aaa
stos
mov
loope
stc
and
cmp
jp
pop
dec
rcrb
jp
jle
icebp
or
in
lret
imul
cmpsl
adc
mov
ret
pop
je
sbb
push
mov
mov
or
mov
adcl
cmp
outsl
sub
or
pop
fisttps
iret
rolb
jns
sub
loop
push
cmp
mov
xchg
test
roll
and
pop
outsl
gs
jg
pop
outsb
mov
push
fcomps
icebp
add
inc
jno
fsubl
call
call
psrlq
cmpl
xchg
fs
adc
sti
popa
sahf
pop
cltd
jae
leave
fidivl
rolb
push
add
aad
sti
dec
and
inc
jmp
in
rclb
scas
push
xchg
sbb
rolb
mov
mov
add
adcl
push
rolb
and
mov
mov
cmp
lret
add
testl
inc
lods
xchg
lods
int
das
mov
lcall
xchg
movsl
add
mov
adc
jb
xchg
sbb
push
cs
std
lret
push
fs
iret
xchg
js
jge
mov
shl
mov
sbb
scas
inc
pusha
jge
adc
leave
inc
push
jle
xor
test
inc
stos
lods
jmp
mov
mov
imul
jae
lea
xor
loop
sti
add
sub
mov
loope
pushf
cmpl
lds
pop
sub
sahf
mov
ret
in
into
pop
pop
lret
sbb
ja
cmpsb
cmp
subl
nop
in
xchg
ret
mov
mov
mov
sti
popa
xor
decl
sub
fsubp
jg
xchg
or
and
mov
inc
mov
or
fnstcw
or
rcrl
notl
subl
aas
and
xor
loope
fs
out
sub
add
adc
stc
pop
cmc
inc
mov
xor
sub
sub
call
dec
shlb
xchg
out
lahf
inc
cld
mov
lods
jae
or
movsb
xor
inc
insl
scas
mov
mov
add
and
and
dec
or
test
fs
cmp
push
push
or
cltd
pop
cmp
imul
pop
gs
ljmp
movsl
jnp
xor
rcl
pop
in
xor
aas
fs
add
and
push
ljmp
mov
mov
sbbl
outsb
cmp
cmp
cld
and
adc
push
nop
scas
jnp
add
scas
fwait
mov
mov
jmp
lods
filds
mull
sbb
ja
mov
stos
xchg
mov
das
add
out
cli
cmpsb
roll
clc
mov
push
popf
jg
mov
stc
jp
loope
shlb
js
es
clc
incb
repnz
into
iret
jg
test
jae
test
cmp
mov
in
clc
arpl
std
and
jge
mov
ficoms
sbb
lcall
popl
lods
daa
dec
rcrl
test
je
push
adc
sub
into
scas
call
push
or
lret
rcrb
mov
or
mov
xor
inc
xor
sub
outsl
mov
scas
xchg
insl
inc
pop
jmp
sub
mov
jp
push
ss
and
xor
lods
cmp
nop
add
or
pop
dec
ljmp
xor
push
ret
decl
adc
pop
add
fnsave
pop
sbb
pop
xor
dec
ja
dec
test
xorb
cmp
xchg
cmp
inc
fstpt
call
inc
jl
mov
insb
adc
insb
cli
es
leave
movl
js
into
push
icebp
adc
inc
push
xor
mov
and
adc
cmpsl
cs
hlt
push
fs
xchg
inc
mov
fmull
or
addr16
xor
push
add
cld
imul
push
mov
push
push
outsl
adc
loop
dec
aaa
xchg
movsb
sbb
jp
dec
xor
mov
fdivr
sub
jg
js
icebp
std
push
jmp
inc
inc
lods
rdmsr
iret
dec
sti
jecxz
out
jbe
fwait
pop
xchg
cs
xchg
jno
stos
pop
cmp
and
test
push
fcoms
xor
ret
in
mov
daa
ljmp
lahf
out
dec
pop
test
push
fsubl
xchg
arpl
mov
aas
rcll
out
push
dec
cld
and
cmp
and
pop
inc
cltd
loopne
adc
dec
sub
pop
xchg
mov
and
imul
jo
push
je
inc
fsubrp
add
dec
and
lock
scas
xor
pop
in
inc
sti
add
sub
outsb
xor
jp
mov
jbe
divb
add
test
inc
mov
jae
pop
loop
ljmp
cmpsb
test
add
and
sub
cmpsl
in
mov
test
mov
notb
inc
cwtl
xchg
repnz
pusha
cvtps2pd
push
adc
xchg
pop
out
push
out
fisubs
dec
into
dec
mov
sarl
cmp
dec
dec
dec
add
arpl
fimull
bound
add
push
mov
add
daa
mov
or
cvtps2pd
or
lds
in
pop
jmp
xor
in
mov
push
mov
push
flds
push
push
and
cmp
pop
and
outsb
aad
stc
ror
int
scas
jne
das
insb
sub
pop
sub
inc
mov
lods
lret
fiadds
shlb
dec
pop
jl
pop
lds
in
mov
rcrl
mov
test
bnd
nop
push
mov
sbb
daa
mov
mov
pop
or
jge
push
mov
mov
std
cwtl
loop
and
xor
jmp
xor
adcl
les
addr16
xchg
cmp
cltd
bound
push
cli
sbb
sub
int
sbbb
hlt
inc
in
insl
fsubs
jmp
xchg
out
mov
xchg
in
sbb
push
adc
frstor
jp
cmp
xor
mov
dec
fildl
and
pop
and
jle
fistps
sub
hlt
mov
aaa
sbb
pop
mov
pop
xchg
mov
and
xchg
fdivrs
jae
push
dec
sub
movb
ds
cmp
aas
pushf
jecxz
and
out
sub
cwtl
inc
and
fs
xchg
sti
xchg
jmp
xchg
icebp
aaa
mov
and
filds
mov
jb
movb
in
xor
pop
cmp
pop
js
adc
std
pop
jns
add
out
xchg
fdivl
sbb
into
pop
test
lods
xor
das
push
mov
cli
push
mov
mov
leave
insb
std
push
pop
cmp
test
jl
daa
add
loop
es
hlt
cmp
sub
and
sarb
fildl
sahf
pop
mov
cmp
mov
fstp
movl
loop
pop
and
lret
call
out
daa
outsl
in
in
pop
jns
xchg
aad
jmp
fimuls
inc
enter
cmpl
insl
aaa
pop
cli
das
adc
clc
mov
clc
lcall
mov
adc
xchg
jge
jmp
pop
mov
outsb
xor
push
lret
mov
sbb
dec
lret
push
movsl
test
jnp
xchg
pop
mov
lods
cwtl
movsl
sarl
lahf
jl
mov
adc
push
sbb
cmp
and
nop
push
mov
popf
loop
xchg
or
sub
inc
scas
pushf
xor
jne
pop
into
add
and
ret
adc
pop
scas
lret
out
ss
clc
push
inc
aas
out
push
sbb
leave
jb
mov
add
push
jae
cmp
add
loope
or
pop
cs
sbb
mov
outsl
dec
and
cli
dec
mov
mov
sub
jg
add
iret
adc
test
imul
jge,pn
arpl
pop
jo
xor
pop
dec
ds
sbb
mov
xchg
adc
ja
lret
cli
and
pop
mov
lret
bound
cmp
rclb
or
lcall
and
inc
call
es
jae
mov
aas
push
popa
adc
mov
daa
fidivrl
xchg
data16
mov
add
mov
movsb
adc
loope
fucom
cmp
mov
mov
mov
inc
arpl
dec
rcll
aam
pop
xchg
jp
and
push
clc
stc
stc
xor
in
xchg
dec
lret
inc
in
jp
scas
or
leave
rcrb
xor
xchg
dec
adc
orl
mov
sub
mov
cltd
or
pop
daa
les
shll
pop
je
push
or
pop
in
scas
push
pop
orl
push
aad
jecxz
imul
pop
imul
mov
mov
repnz
sbb
lock
mov
loope
mov
cltd
out
mov
outsw
xchg
sub
xchg
imul
imulb
mov
popf
and
add
loop
daa
lret
cs
sti
pop
cmp
jns
ret
and
mov
push
pop
lahf
xor
mov
push
jl
pop
xor
out
imul
push
push
imul
cwtl
or
iret
ds
add
aaa
adc
in
div
lea
arpl
out
xchg
push
test
ja
orl
test
fs
lods
xor
cmpsb
jmp
xchg
mov
bound
add
call
iret
or
pusha
xor
loopne
and
roll
fdivr
ja
jmp
lods
dec
ljmp
jecxz
cwtl
in
cwtl
lcall
les
sbb
shr
mov
cltd
jo
in
cmp
js
adc
into
sbb
repz
mov
jb
xorl
je
aas
sbb
adc
xchg
cltd
test
out
iret
inc
push
sbb
dec
jp
push
sbb
adc
dec
icebp
loope
push
js
jns
push
lret
jmp
loopne
out
push
mov
xchg
inc
je
cmp
xor
sahf
std
pop
xchg
jmp
ja
call
mov
add
add
pop
les
adc
push
sbb
push
xor
xorb
rolb
cmp
jp
lods
push
cs
sub
mov
mov
ljmp
xlat
stos
outsb
aam
movsl
sahf
ljmp
ds
pop
jns
pop
xchg
cmc
movsl
repz
mov
outsb
stos
jae
mov
push
fimuls
psllq
adc
jge
mov
mov
inc
inc
test
aaa
dec
xchg
cli
fwait
orb
das
shl
mov
sarl
adc
dec
insb
gs
xor
mov
js
scas
push
sbb
xchg
inc
ret
cwtl
mov
xchg
push
adc
sbb
lock
adc
rclb
mov
mov
pop
push
cltd
std
bsr
sahf
ja
hlt
and
aad
ja
popf
sbbb
add
bound
adc
jmp
movsb
andl
cmp
or
inc
or
push
and
jae
les
xor
test
je
mov
test
mov
jp
sbb
mov
push
add
cltd
adc
repnz
nop
es
repnz
cmp
jge
ret
aas
pushf
pop
xchg
lret
mov
lret
hlt
mov
dec
mov
sti
es
push
or
xchg
mov
out
fisubl
xor
dec
insb
scas
pop
push
mov
pusha
jbe
jle
inc
or
ret
cmpsb
scas
cmp
cmpb
rorl
sbb
movsl
sti
jmp
push
or
rclb
xchg
mov
add
mov
lock
sub
pop
ret
cmp
xchg
cli
lcall
cmpsb
pusha
dec
mov
sahf
and
xchg
dec
call
cld
nop
int3
adc
gs
and
push
pop
icebp
popf
fs
les
cmp
mov
push
pop
arpl
rcll
push
adc
out
bound
iret
cmp
push
add
mov
mov
xchg
inc
aas
out
xlat
adc
dec
or
ljmp
add
inc
mov
dec
mov
test
cmp
push
inc
sbb
lea
pop
and
cwtl
xor
sti
repz
sbb
cwtl
les
add
xchg
ja
pusha
cmpsb
test
into
enter
mov
fimuls
push
push
jmp
cwtl
lcall
push
test
push
inc
hlt
or
outsb
stos
imul
hlt
sub
mov
out
arpl
clc
ds
lock
xor
pop
in
and
push
adc
or
and
adcl
jge
cmpsb
mov
cld
in
out
jne
lret
xchg
inc
add
adc
mov
jmp
add
dec
pushf
xor
push
sarb
hlt
test
pushf
sbb
jp
enter
lret
pop
shlb
ret
mov
pop
and
test
mulb
mov
addb
rol
aaa
jecxz
mov
cmp
fwait
popf
int
stc
movsb
mov
jns
loope
insb
lods
negb
test
xchg
mov
mov
insl
sbb
jle
fimull
pop
outsl
or
mov
push
mov
jg
pushw
insb
or
arpl
and
les
addb
pushl
pop
sbb
cmpb
mov
mov
add
fsubr
mov
je
mov
in
or
pop
imul
adc
xchg
out
or
xchg
mulb
mov
rcr
jle
sahf
fwait
adc
cmp
pop
xchg
lret
sti
inc
jnp
xor
aaa
jge
test
jle
movsl
jmp
xor
jns
cmpsl
inc
mov
mov
lds
in
jne
push
xchg
fincstp
dec
push
dec
sarb
mov
pop
adcl
test
pop
nop
jmp
jecxz
loop
js
pop
adc
icebp
push
mov
js
lcall
lret
ret
sub
push
outsl
and
mov
mov
jp
push
daa
and
xchg
jle
ss
decb
mov
pop
push
lea
lcall
push
adc
or
sbb
inc
adc
xchg
jp
cmc
inc
lret
push
mov
cli
inc
cmpsb
add
dec
pop
cltd
aad
and
sbb
js
jmp
push
hlt
mov
and
stos
and
and
lea
std
dec
mov
mov
ss
push
sarb
sbb
dec
mov
shl
sbb
je
in
aas
in
std
in
cmc
dec
adc
addl
inc
jecxz
dec
movsb
ja
xchg
xchg
sbb
mov
sub
aas
lahf
jmp
pop
insb
ja
cmovle
add
sub
insl
sub
mov
aas
aad
ja
push
sti
cwtl
ret
push
add
inc
xchg
dec
aaa
insb
mov
lcall
inc
mov
cld
out
xchg
pop
lods
movsl
orb
loopne
test
inc
loop
cmp
sti
js
dec
test
sbb
add
cltd
lcall
push
push
es
xchg
xchg
xlat
repz
xor
adc
test
cwtl
pop
cwtl
fmull
das
inc
call
adc
test
sbb
out
or
jo
jmp
not
sub
xlat
jns
or
aaa
nop
pop
imul
mov
cmp
adc
sbb
xchg
xchg
jae
mov
push
das
or
scas
mov
arpl
daa
inc
mov
lret
and
mov
aam
das
hlt
or
pop
pusha
mov
inc
ja
pop
push
push
shrl
sahf
mov
adc
adc
adc
jle
sub
push
mov
push
mov
push
fwait
jns
aad
mov
pop
mov
les
fwait
add
stos
and
pop
mov
mov
dec
nop
xchg
lret
fmuls
bound
lods
test
rcl
adc
movsb
mov
lds
loope
imul
and
mov
ds
es
adc
or
cmp
xlat
adc
adc
adc
sub
sti
add
aam
aaa
inc
sub
lcall
popa
stos
push
xor
std
push
pop
xchg
aas
sbb
sub
shrb
out
push
test
pop
jmp
shlb
test
gs
push
movsb
jle
inc
pop
leave
in
mov
add
mov
push
subb
ret
jnp
xchg
xchg
inc
mov
mov
insl
and
popf
nop
ja
fmuls
sub
mov
inc
mov
movsb
jbe
xorb
mov
mov
fists
xchg
mov
sbb
stc
sbb
add
js
std
loope
xchg
shll
dec
addr16
mov
inc
xor
jl
xor
xchg
xor
popl
jg
mov
push
jl
cmp
stos
push
xchg
lods
lock
mov
mov
add
and
push
into
jge
cltd
sbb
pushf
jb
mov
jle
cmc
cmp
loop
repnz
xor
mov
add
lods
xchg
shll
pusha
pop
cmp
jns
aam
test
pop
ret
jae
aas
sahf
ficoms
std
arpl
jb
xor
mov
inc
pop
xor
lods
fildl
loope
xor
sbb
out
xor
add
int3
pop
movsl
cli
dec
push
dec
xchg
mov
or
mov
loop,pn
scas
sbb
cmpsl
or
and
or
sub
leave
arpl
push
pop
stc
icebp
lcall
xchg
sub
mov
jg
pop
mov
xchg
pop
add
mov
push
sub
arpl
movsl
pop
mov
mov
add
call
cli
or
xchg
lret
ss
loop
mov
lcall
jnp
cmpsb
idiv
ret
mov
jmp
insl
mov
adc
enter
add
rolb
cmpsb
outsl
dec
mov
cmp
inc
cli
pop
and
jno
or
push
dec
rcrb
fisubl
mov
shrl
lahf
int
cmp
or
sti
mov
out
ja
jb
mov
cmp
push
mov
aad
in
loop
pop
cmpsb
push
out
loop
mov
and
aaa
scas
jno
inc
mov
loope
mov
loop
and
mov
in
xchg
jo
sbb
jmp
sti
imul
popf
nop
gs
into
sahf
jle
out
lcall
aad
mov
rolb
dec
cld
cmpsb
mov
push
sbb
jno
aad
addl
cmp
pop
mov
jbe
xor
inc
nop
xlat
jns
es
pop
and
insb
xchg
lret
jno
ret
push
xor
cmp
lods
xor
andw
xchg
mov
jp
dec
insb
mov
dec
sub
xor
xchg
mov
jge
lret
outsb
mov
das
nop
cmpsl
pop
cmp
inc
popf
and
pop
xchg
shl
cmc
push
sbbl
adc
fwait
rcrb
jl
xor
dec
jns
nop
jg
lods
ja
lcall
cmp
in
mov
jns
addr16
pop
jmp
xor
and
dec
pop
popf
mov
add
addr16
and
inc
pop
inc
inc
push
popf
xchg
cmp
nop
xchg
fs
jae
jp
and
dec
stos
cwtl
xchg
imul
test
pop
add
adc
scas
inc
cwtl
mov
and
dec
orb
insb
scas
or
test
pop
cli
mov
xchg
cmp
mov
std
aad
leave
ljmp
inc
adc
sub
lock
lahf
hlt
lret
pop
xor
iret
inc
ljmp
scas
mov
cmp
pop
mov
cmpsl
aaa
and
nop
and
xchg
cmp
xlat
jl
out
jp
ljmp
push
inc
cwtl
scas
mov
addr16
inc
or
pop
xor
xor
jecxz
scas
cld
fcmovu
adc
ljmp
roll
push
scas
stos
scas
xor
cmp
cli
pop
push
test
jnp
cmp
dec
subb
enter
sbb
push
cmp
insl
fsub
mov
cmp
mov
insl
dec
push
dec
sub
fs
movsl
xor
jbe
push
hlt
push
lcall
int3
add
iret
outsl
mov
rcr
js
xchg
insb
mov
stos
loopne
fld
mov
dec
pop
xor
jb
jmp
mov
sub
mov
jp
and
push
popa
loope
subb
lea
ja
dec
cwtl
btrl
sub
sbb
and
sub
or
rorl
fsubrl
xor
sti
dec
push
mov
pop
pop
dec
mov
and
dec
push
inc
nop
inc
stos
mov
fiaddl
mov
lahf
inc
sub
clc
stos
cld
inc
cmp
push
xchg
loopne
shrb
ljmp
push
mov
and
mulb
test
xor
test
or
test
mov
mov
daa
cmp
fs
filds
das
aaa
std
clc
inc
sbb
push
jmp
icebp
adc
jb
data16
xchg
mov
mov
xchg
sahf
outsb
insl
sbb
xchg
inc
jmp
lret
cmpsl
es
xchg
push
sub
and
pop
lods
pop
xchg
push
aas
mov
std
push
sub
sub
popf
dec
jp
cmp
sub
orb
or
mov
jle
jl
add
fwait
add
outsb
in
adc
xchg
cmc
cli
popf
test
add
push
cs
mov
lds
adc
iret
hlt
daa
sarb
jne
nop
sbb
mov
cltd
ret
jmp
loop
jae
push
cmp
testl
push
pop
stos
ds
mov
inc
inc
lret
int3
push
push
into
mov
orl
cmpsl
aam
cs
mov
cmp
cwtl
loopne
outsb
mov
jno
fs
imul
xchg
fwait
jo
insl
mov
dec
das
popa
mov
scas
dec
jb
mov
sub
lds
push
pop
cmpsb
jecxz
xchg
sub
pop
out
fistpll
fldenv
rcl
push
mov
push
dec
push
clc
xor
jno
sub
or
push
je
cmp
mov
add
mov
stc
mov
jl
xor
loopne
cmpl
mov
rolb
sub
xlat
hlt
ja
in
aas
rclb
call
jnp
xor
or
pop
cmp
xor
add
pop
cli
lods
in
hlt
int3
xchg
mov
in
popa
ja
jmp
pop
ret
add
push
insb
insb
mov
adc
test
mov
ss
add
and
jmp
cmp
or
inc
adc
or
pop
test
pop
out
outsl
in
mov
xchg
addl
mov
hlt
push
inc
cs
rorl
jne
add
push
add
jmp
mov
loop
popa
cmp
sbb
inc
adc
inc
jecxz
fprem
xor
sub
lcall
pushf
lds
popa
dec
in
jnp
shlb
insw
add
jl
and
arpl
shrb
cs
data16
icebp
pop
and
dec
push
lcall
ds
das
jge
xchg
push
insl
rolb
clc
repz
mov
rcr
leave
call
push
loope
call
inc
xor
xchg
jo
bnd
fisttps
mov
lret
xchg
iret
xchg
cmpsl
into
inc
leave
and
jbe
pusha
jge
adc
cmpsl
jge,pt
pop
ret
shrl
or
inc
test
clc
sbb
mov
mov
rcrw
in
cli
ljmp
jns
inc
cltd
pop
lea
mov
imul
xchg
out
mov
cmp
in
push
pop
add
sbb
loope
cmp
stos
add
pop
loopne
sbb
mov
sub
addr16
jo
pop
xchg
dec
mov
sub
lret
xchg
int3
xor
ljmp
mov
push
xchg
movsl
lds
inc
lret
mov
and
ret
mov
ljmp
clc
call
dec
mov
nop
and
sub
jb
xchg
lock
sub
xor
movsl
mov
dec
mov
imulb
or
fsubrl
lea
xor
cld
jns
push
clc
add
rorb
sbb
sbbl
cli
loope
mov
outsl
imul
fsts
out
inc
scas
push
pop
push
mov
repnz
loopne
icebp
and
test
pop
push
adc
mov
mov
stc
xchg
fistl
arpl
inc
sub
cltd
pop
loopne
inc
fnsave
add
xchg
aad
rcrl
fcomps
mov
divl
popf
ret
push
mov
ljmp
adc
push
mov
addr16
jne
push
cltd
testb
fildl
lret
dec
fistl
jae
cmpsb
lea
popf
push
mov
mov
or
ljmp
pop
lret
xchg
or
icebp
jmp
lods
pop
out
push
lcall
nop
pusha
lret
shr
in
xor
xor
mov
sbb
pusha
out
lahf
setns
test
hlt
dec
shll
ljmp
icebp
pushf
push
into
mov
and
pop
push
pop
ret
mov
or
das
sbb
pop
pop
jb
faddp
inc
repz
int
aaa
in
jl
jge
stc
dec
pop
lret
cmp
push
cs
les
sbb
icebp
and
data16
adc
aaa
lods
mov
jmp
ss
sub
leave
sbb
add
pop
outsb
out
inc
xor
dec
aaa
push
dec
pop
faddl
jae
sbb
pop
movsl
jnp
sbb
js
in
add
mov
sbb
lods
data16
fists
xchg
ret
jl
shr
and
in
in
push
sub
stos
mov
cmp
sub
ja
ss
sbb
jae
lock
call
jmp
addr16
mov
push
mov
leavew
cmp
orb
mov
aam
inc
push
mov
mov
scas
rclb
fdivr
add
adc
mov
dec
mov
inc
or
xchg
mov
pop
loop
sbb
add
sbb
jo
stos
mov
sti
repnz
in
lahf
cmpsb
call
repz
jne
sbb
pop
push
xchg
out
mov
sub
xchg
out
adc
or
xchg
inc
and
pushf
cmp
cmp
push
pop
mov
imul
test
add
fmul
into
out
add
xor
or
mov
xchg
mov
call
fcoms
in
outsb
cli
jno
jmp
jle
or
and
sti
push
movsb
enter
dec
pop
push
cmp
dec
pop
mov
cmp
imul
neg
add
push
push
push
leave
sar
pop
cli
dec
inc
sbb
loopne
sub
scas
cld
and
arpl
push
push
adc
cmp
push
icebp
and
test
insl
scas
cmp
test
out
inc
or
rcrb
pop
leave
in
adc
inc
sub
bnd
loop
pop
push
es
mov
pop
mov
dec
arpl
aaa
mov
imul
shl
imul
dec
add
sahf
mov
pop
loopne
jg
xchg
cmp
add
pop
mov
es
test
stos
add
dec
cmpl
sub
mov
sahf
add
jnp
lahf
or
hlt
loopne,pt
stos
adc
pminsw
adc
adc
xor
push
add
loop
jae
mov
mov
xor
mov
jns
xor
mov
aad
xchg
push
sub
push
xchg
and
fwait
ret
sahf
jge
xchg
xor
out
lahf
in
mov
sub
push
cmp
jnp
adc
scas
jne
cld
xchg
cmp
popf
mov
pushf
ljmp
sahf
add
pop
mov
insb
add
pop
dec
bnd
popf
testl
std
shl
push
cmc
mov
nop
jg
fcoms
add
and
sub
out
and
jae
jno
jns
ret
fiadds
arpl
pop
dec
xchg
or
push
dec
shl
nop
iret
cmpl
mov
dec
adc
rcrb
xchg
sbb
sub
dec
push
in
mov
adc
push
dec
dec
or
stos
jns
sub
pushf
push
cmp
pop
cmpsb
jl
lret
movsl
test
fwait
inc
js
sbb
ja
lret
cwtl
mov
int
pop
mov
pop
sti
imul
inc
out
lret
insl
adc
jg
dec
leave
cmp
or
lods
push
add
movsb
push
jecxz
cli
or
pushf
sahf
add
pop
jmp
or
mov
jmp
push
loopne,pt
add
ficompl
fnstenv
sbb
pop
pop
cmc
jo
pop
leave
in
and
rolb
mov
xchg
xor
mov
xchg
rcrb
xchg
fs
pop
jne
movsl
in
inc
jge
cmp
push
daa
cmp
push
addr16
icebp
mov
mov
iret
les
mov
push
shlb
iret
or
fisttpll
push
ss
lret
test
int
sub
and
gs
inc
loope
shlb
fcomps
and
mov
xchg
popa
sub
test
sbb
repz
cmp
mov
mov
js
fistpl
push
push
pop
mov
icebp
adc
jb
in
aas
dec
out
shll
outsb
xor
sti
clc
xchg
leave
sub
xchg
xchg
adc
jmp
push
pop
nop
jle
cmp
outsb
cltd
cmpsb
mov
mov
or
xor
add
ret
or
int3
jb
xchg
and
imul
mov
scas
out
jnp
test
push
jnp
outsb
add
or
mov
or
xor
xchg
xor
pop
ret
push
or
movzbl
jb
pop
lock
sbb
aaa
and
jecxz
sarb
sub
inc
pop
mov
cwtl
push
addb
nop
xor
or
adc
cli
pop
aam
stos
enter
xor
sbb
jbe
mov
jo
loope
and
divl
aad
nop
mov
repnz
bound
sbb
add
ljmp
fsubrl
add
or
dec
pop
push
scas
jbe
imul
scas
stos
mov
mov
jp
lgs
lret
inc
dec
in
stc
int3
pop
loopne
add
push
rep
sti
scas
cli
jbe
subb
scas
dec
xchg
xchg
jge
adc
cwtl
les
out
jecxz
shr
add
cmp
movl
push
pop
mov
jae
das
dec
add
or
verr
push
sahf
xor
cmpsl
cmc
test
es
jecxz
repz
mov
ja
and
repz
mov
sub
sub
or
pop
adc
xchg
mov
mov
das
ss
push
pop
movsb
call
repz
mov
xor
dec
sub
es
inc
dec
mov
push
icebp
ficompl
mov
or
jne
fmuls
call
add
insb
dec
inc
and
push
jno
push
in
lods
jo
cmp
dec
rcrb
fildll
cli
mov
mov
popf
jmp
subl
sub
jbe
cmc
add
mov
hlt
cmpsl
test
inc
ror
insb
jb
and
sbbl
xor
mov
orb
outsl
out
or
mov
mov
push
leave
mov
adc
mov
in
fs
mov
cmp
and
pop
push
scas
lods
adc
xorb
xlat
imul
ret
xchg
hlt
imulb
mov
fidivrs
push
daa
das
dec
dec
pop
or
pop
dec
jo
jg
lahf
shll
stos
movsl
push
sbb
and
int3
shl
mov
jnp
out
inc
cli
mov
inc
mov
fmul
xchg
add
mov
xor
pusha
outsb
insb
cmp
loopne
imul
bt
xchg
pop
cltd
jnp
movsl
fnsave
aam
leave
cltd
data16
imul
jns
sub
insb
sub
and
xor
or
pop
lods
test
mov
xchg
mov
push
mov
leave
rorl
nop
push
cmpsl
sbb
test
add
inc
cmp
jle
fbld
dec
lret
xchg
xlat
adc
out
jecxz
arpl
mov
pop
push
jg
outsb
inc
imul
push
sbb
lret
mov
sbb
sbbl
cwtl
sti
out
xchg
out
xchg
int3
lret
fists
add
jg
xor
jne,pn
fmuls
xchg
ja
sbb
imul
sbb
inc
mov
out
ja
xchg
cmp
stos
cmp
push
jg
in
lods
inc
in
push
sbb
sub
out
loopne
cwtl
dec
adc
mov
xchg
inc
js
shlb
mov
frstor
cmpsb
xchg
xchg
sbb
cmp
fsts
mov
sbb
test
je
mov
inc
xchg
or
mov
sbb
aad
adc
add
iret
sub
push
das
fsubl
fstl
lcall
stos
or
aas
mov
int3
imul
push
push
sub
sub
xchg
adc
iret
dec
data16
or
xchg
dec
pop
aaa
cmpsb
call
cmpsb
out
in
mov
notl
subb
loop
push
outsl
sub
ret
andb
aad
les
mov
push
push
andb
ljmp
cmpl
das
xchg
inc
rolb
push
ja
mov
mull
jb
or
aam
bound
test
cmpsl
cmpb
inc
popf
add
pop
mov
movsb
test
lcall
xchg
mov
push
push
mov
sbb
sub
pop
cmp
shlb
cmp
movups
xchg
leave
and
jbe
xchg
inc
es
pushf
dec
cltd
ja
jg
push
xchg
movsl
lahf
cmp
aaa
push
or
data16
pop
cmp
ret
daa
mov
push
sbb
rolb
stos
and
cli
mov
add
rol
mov
dec
adc
push
mov
loopne
xor
out
jne
movsl
mov
out
xchg
shll
cmp
out
movsl
stos
inc
outsb
js
les
rolb
pop
pop
aam
cmp
sbb
pusha
outsb
jbe
roll
lret
cltd
dec
xchg
push
mov
movsb
sbb
lock
push
stos
jg
je
psadbw
pushf
mov
aaa
pushf
jmp
cmp
mov
inc
push
jge
xchg
pushf
out
xchg
pop
test
mov
adc
sti
or
pop
in
and
jbe
mov
sub
int
aam
xor
pop
shll
fwait
adc
fcomi
shll
or
ja
add
rcrl
icebp
mov
jecxz
dec
lahf
loop
in
and
loop
iret
xor
in
pop
insl
int3
adc
je
repz
jg
insb
push
inc
cmpsl
ficompl
push
mov
inc
and
jo,pt
movsl
mov
inc
sbb
fmull
inc
pusha
gs
dec
mov
pop
repz
xchg
xor
mov
dec
lret
pop
adc
popf
mov
jmp
jae
xchg
push
out
std
aas
dec
xor
sub
xchg
dec
arpl
daa
imul
aad
ror
adc
pop
lret
fnclex
fmul
or
bound
loop
out
nop
or
mov
in
pusha
sub
das
ds
add
hlt
xchg
test
pop
rcl
int3
dec
stc
add
xchg
dec
inc
xor
sbb
stos
or
in
mov
lret
in
add
inc
icebp
imul
mov
jnp
ficompl
push
test
repnz
pusha
sbb
lods
fwait
bound
fwait
shr
adcb
je
pop
and
enter
js
aaa
dec
aam
push
test
rcl
outsb
in
push
out
jb
sbb
arpl
mov
or
les
xchg
sub
dec
add
dec
js
loopne
jnp
inc
lcall
xlat
sub
ret
stos
mov
mov
and
adc
pop
and
cld
loop
inc
push
movsl
stos
es
mov
testb
cmpsl
pop
xchg
cmpsl
ja
sbb
ret
rol
sbbb
nop
hlt
ret
sub
mov
sbb
xor
push
mov
cmp
leave
xor
pop
xor
mov
loope
sbb
fcoms
cmpsl
nop
xchg
add
es
call
test
mov
mov
filds
clc
mov
sub
sub
pushf
hlt
mov
mov
dec
xchg
jno
push
add
jle
in
pop
aad
aas
push
cmpsb
and
sarl
stos
test
mov
js
sub
inc
out
sbb
fdivr
movsb
lahf
xchg
sub
loop
lcall
ret
scas
das
addr16
sti
or
shll
sub
pop
jne
mov
push
daa
or
rorb
in
gs
inc
inc
stos
pop
xchg
out
push
push
push
adc
jae
in
outsb
loop
sub
popa
mov
aas
push
push
inc
in
jle
pop
push
jl
jle
jo
sub
sub
mov
cwtl
lock
fdivrs
in
rolb
cli
out
nop
xchg
daa
lods
repnz
pop
pop
inc
push
mov
mov
test
push
hlt
ljmp
mov
repz
or
fadd
pop
cmp
cs
fsubs
mov
cmpb
inc
stc
xor
push
loope
push
rcll
arpl
lahf
pushl
ljmp
pop
repnz
push
call
outsb
push
and
in
iret
out
shl
loope
jno
jecxz
mov
mov
push
mov
scas
add
stc
and
xchg
sbb
fwait
rol
sub
rolb
mov
jb
add
sbb
jnp
sbb
pop
sahf
insb
push
adc
cmpsb
fwait
aaa
enter
mov
into
push
filds
dec
imul
sub
mov
cmp
fisubrl
xchg
idiv
sub
pop
les
inc
dec
cmp
lcall
adc
popa
jae
mov
mov
notl
pop
pop
bnd
lcall
icebp
mov
icebp
jge
popa
xchg
popa
cmp
test
fistpl
loopne
add
xchg
or
sarl
cmp
mov
and
cmp
popa
je
push
jae
inc
mov
mov
pop
dec
les
shr
imul
mov
imul
jmp
ret
push
xor
sti
out
mov
int
ret
xchg
push
jae
dec
dec
adcb
jl
scas
dec
rcl
jnp
je
fists
jle
sahf
sub
into
pushf
pop
pop
and
pop
push
cmp
mov
push
ret
pusha
rclb
cltd
add
inc
jo
add
movsb
das
inc
mov
lret
pop
and
adc
cs
stos
into
fldt
mov
jecxz
stos
xchg
sbb
xchg
adc
push
and
mov
cltd
push
out
push
adc
mov
adc
imul
lret
and
ja
jbe
pop
mov
mov
xchg
aad
jnp
imull
mov
pop
sti
cli
fcoml
inc
stc
xchg
dec
out
pop
adcb
les
lds
fidivrl
push
sbb
jmp
push
add
pop
and
in
and
stc
jecxz
xlat
push
mov
sbb
xchg
mov
xor
stos
mov
cmp
jbe
fsubrs
ja
and
lods
dec
xchg
icebp
mov
fiadds
push
jno
and
and
in
movsb
lock
sbb
ret
pop
int3
int
ds
stc
pushf
mov
fstl
pop
push
sub
inc
fwait
addr16
ret
push
loope
cwtl
daa
pop
xchg
arpl
inc
aaa
fdivrs
std
or
ret
push
pop
stos
mov
and
mov
pop
push
pop
jecxz
xchg
outsb
xor
stc
bound
sub
std
push
lret
push
in
pop
decb
sbb
xchg
in
addl
push
mov
lock
jno
xchg
cmp
xchg
push
pop
jno
jne
addr16
cwtl
jge
cmp
shll
jmp
xchg
mov
cwtl
push
dec
add
pop
stos
xchg
roll
fldenv
jo
sub
xchg
cmp
in
jle
notb
sti
xor
bnd
inc
xchg
mov
icebp
or
and
in
sar
bound
jmp
bound
xor
adc
pop
push
mov
daa
pop
xchg
cmp
aam
jp
scas
xor
adc
jns
jo
sahf
inc
dec
mov
in
std
shlb
pop
div
mov
roll
or
push
jp
add
cmovo
je
push
sahf
pop
add
ss
addr16
lds
adc
sub
pop
clc
xor
mov
jo
fidivrs
sti
cmp
pop
fstl
popa
shrb
loope
jns
mov
cltd
jo
sub
pushf
jg
enter
std
loope
or
jno
dec
sbbl
movsb
jns
cld
adc
dec
sub
xor
iret
mov
fldt
mov
adc
out
mov
mov
and
add
test
jge
dec
mov
mov
imul
xor
cs
pusha
mov
adc
iret
pop
loope
subb
jmp
stos
bound
je
scas
xchg
sahf
adc
mov
mov
sbb
in
jmp
and
test
lods
pop
jo
and
lods
dec
jne
out
xchg
cmpsl
mov
into
leave
dec
aam
out
xchg
inc
add
out
lahf
popf
push
lods
xchg
lods
push
mov
sub
stc
pushf
lock
sub
outsb
adc
pop
int
dec
push
dec
sbb
adc
lock
cmpsl
inc
inc
jmp
cmp
xchg
xchg
cld
sub
jb
pop
mov
mov
inc
cs
out
leave
mov
pop
mov
inc
jl
rcrb
push
sti
cwtl
inc
in
push
insb
enter
and
fildl
jae
xchg
inc
maxps
push
push
jbe
xor
mov
xchg
cmp
das
cmp
outsb
les
xchg
aas
rclb
int
fs
mov
add
pop
jns
sbb
clc
testl
sbb
sahf
sub
add
enter
cltd
jmp
or
jg
fcompl
cwtl
sbb
or
fldenv
pop
push
xchg
sbb
std
or
sti
push
in
out
cli
cmp
or
sub
mov
pop
enter
sub
push
test
and
push
xlat
stos
lret
sub
mov
scas
stos
test
sbb
out
sub
leave
jle
cld
push
xchg
push
rcrl
nop
push
inc
xchg
icebp
cs
shlb
lock
push
sbb
push
mov
aas
mov
mov
adc
mov
int3
cmp
ret
gs
in
sti
push
out
dec
xchg
loope
adcl
mov
fs
test
inc
mov
cmp
outsl
inc
roll
rclb
insb
or
xchg
xchg
ds
ret
shll
push
jle
xor
pop
sub
xchg
icebp
or
pop
cli
daa
mulb
xor
les
push
jecxz
cltd
out
adc
lds
rcll
decb
outsl
mov
fisubrl
dec
mov
jecxz
and
stc
shrb
add
mov
aaa
ret
rcll
rorb
pop
pop
movzwl
mov
popa
fstpt
sbb
dec
mov
sub
jae
cmpsl
popa
inc
sbb
movsl
add
sbb
gs
aad
jo
xor
mov
ret
adc
nop
lods
mov
repz
push
in
adc
out
and
inc
xchg
call
and
push
jno
mov
jmp
loop
leave
in
add
xchg
xchg
and
jp
lods
rorl
fisttps
mov
call
pop
jae
stos
sub
rorb
xor
icebp
and
mov
cmpsl
outsl
dec
jmp
cmp
rorb
mov
les
mov
popa
lret
mov
insb
or
mov
cmp
lds
push
xchg
add
sub
repz
out
adc
shlb
push
jge
adc
aas
mov
pop
mov
dec
les
cmp
ds
in
pop
xor
insl
cli
dec
mov
hlt
jno
sbb
jmp
inc
inc
mov
cmp
mov
xlat
leave
sti
scas
push
popf
cmp
std
fisttpll
int3
cmp
cmc
push
sbb
repnz
sub
mov
scas
mov
dec
incb
push
dec
add
mov
and
ret
stos
push
mov
jno
into
pmaddwd
sbb
loope
orb
fwait
insb
pushf
add
cmp
not
mov
jmp
mov
or
pop
cmp
pop
lds
ret
arpl
out
jle
mov
cmc
aaa
fistpll
cmp
mov
into
test
les
sbb
pusha
inc
mov
out
jns
xor
or
cmpsb
sbb
dec
stc
dec
sub
cwtl
xchg
sub
in
nop
imul
cld
add
rorb
test
sbb
popa
mov
mov
imul
ficompl
xor
pop
sub
mov
shlb
sbb
xor
pop
jmp
gs
insb
fsubr
sbb
sub
pusha
test
sub
push
fwait
inc
cmpsl
mov
mov
fisubrl
xchg
popa
in
jle
aas
sub
jo
sbb
mov
jecxz
lock
pop
je
out
mov
popa
mov
aas
ss
fdivr
xchg
icebp
cmp
or
and
cs
dec
out
stos
push
adc
pop
jg
dec
bound
aad
xchg
mov
pop
pop
add
out
loopne
in
cmp
xchg
pop
arpl
jecxz
add
jle
xchg
clc
movb
adc
xchg
movsb
and
pop
add
mov
jmp
test
fstpt
sbb
jg
test
icebp
xchg
xlat
imul
push
or
cwtl
inc
neg
jne
sub
rcrb
nop
mov
mov
arpl
pusha
pop
mov
popfw
int3
cmpsl
aad
or
cmp
sbb
inc
or
sub
dec
xchg
push
sub
add
out
loop
bound
ljmp
ret
popa
mov
movsl
loope
add
dec
and
andb
add
jg
cs
sbb
push
ffree
xlat
sbb
xorb
bound
mov
sbb
clc
push
mul
addl
inc
add
addl
jnp
jmp
cmp
dec
mov
psubq
pop
push
and
je
jne
insl
pusha
sbb
insb
xor
in
push
mov
insb
cmc
fs
mov
nopl
and
loopne
into
add
fdiv
sbb
rorl
jno
mov
test
jecxz
out
inc
lods
loop
mov
mov
xchg
cli
je
sub
outsb
push
push
or
inc
sub
aam
jo
adc
into
lcall
cld
or
cmp
mov
mov
xor
sbb
mov
xchg
cli
lods
push
jno
sti
cmp
popa
xchg
sub
fldcw
loopne
addb
pop
adc
aaa
aad
fwait
loop
das
and
sbb
and
mov
outsb
lock
cmpsl
and
lahf
pop
rcrl
ss
aad
jno
in
enter
jmp
sub
jne
fwait
lods
push
lcall
push
aaa
jle
push
inc
add
in
xor
popl
notl
call
icebp
aam
call
out
mov
lcall
fsubl
shll
icebp
dec
push
xlat
flds
ret
out
xchg
lret
and
add
inc
mov
mov
xlat
mov
mov
pop
shr
sub
pop
xlat
test
sub
loopne
cltd
movsb
in
pop
lds
and
xchg
std
push
mov
push
and
xor
pop
insw
add
ljmpw
sarb
ss
fcom
aaa
inc
in
xor
push
nop
add
mov
mov
cmpsb
dec
push
jne
mov
int
rolb
clc
movb
pushf
je
and
inc
lret
push
pushf
inc
rcrb
mov
and
in
or
mov
adc
sub
imulb
mov
and
xchg
shlb
and
lock
jb
mov
xor
in
cmp
mov
adc
out
xor
push
test
and
pop
pop
das
dec
dec
ljmp
in
out
scas
int3
cmpsb
aad
cmpsb
mov
repz
mov
mov
xor
and
or
or
jno
add
jbe
gs
sbb
fildll
outsl
jb
mov
dec
xor
lcall
pop
jns
mov
and
or
and
jno
in
mov
xor
mov
mov
cmpl
js
add
xchg
xchg
stos
iret
cmp
in
dec
lcall
cmp
and
ljmp
fbld
xchg
sti
lcall
loop
inc
jno
outsb
lahf
and
pusha
push
jle
dec
mov
sub
lcall
lods
aas
imul
loop
outsb
jle
movsl
fs
arpl
add
scas
nop
push
adcl
dec
aad
sub
int
test
sbb
xchg
lcall
into
sub
add
mov
and
je
loopne
outsb
sbb
jbe
in
outsl
sub
jg
xlat
xor
or
mov
mov
adc
cmp
mov
pop
outsl
arpl
out
insb
rcl
icebp
sbb
push
pop
sbb
inc
xchg
mov
fbstp
icebp
lock
gs
dec
pop
cmpl
mov
sub
rcr
fimull
fcoms
or
sti
lods
xor
in
lret
jmp
mov
cmp
in
jbe
nop
and
xchg
sbb
inc
out
push
push
mov
xchg
es
mov
outsl
jl
xor
mov
imul
jo
jmp
addr16
clc
pop
cmp
dec
jne
mov
dec
fnstsw
sub
pop
adc
push
xor
sbb
pusha
jne
sbb
dec
inc
bound
lcall
std
sbb
ja
popf
int3
cld
add
loopne
sub
cli
cmp
dec
pusha
cwtl
cmp
mov
bound
cmp
int3
mov
jle
inc
jae
push
test
fxch
mov
ljmp
out
mov
sbb
lcall
mov
fnstsw
mov
test
rcrb
mov
push
mov
push
gs
mov
push
mov
std
jbe
scas
pop
shrb
bound
sbb
mov
mov
push
ds
lcall
mov
mov
xchg
into
lret
mov
out
sbb
inc
aaa
xchg
scas
stos
leave
mov
cltd
sahf
xor
js
sub
out
cmp
inc
pushf
mov
dec
insl
sbb
mov
leave
in
aas
push
xchg
ret
cltd
mov
pop
ja
in
pushf
add
loop
cmp
iret
sub
pop
test
shr
scas
hlt
xchg
xchg
xchg
xlat
xchg
dec
fdivs
mov
fcoms
sub
scas
pushf
jnp
or
in
and
fsub
dec
adc
insb
adc
jb
fwait
movl
fdivp
rolb
insl
ja
inc
std
pop
push
pop
mov
shll
pop
cli
add
fdivrs
arpl
jecxz
jle
fcmovbe
hlt
cmpsl
jbe
test
pop
cmp
or
xchg
out
jno
loop
pop
xor
in
and
or
inc
pop
mov
movb
mov
dec
mov
mov
jge
rcrb
add
sub
sbb
adc
pop
repz
sub
shrb
orl
push
test
test
call
jo
push
sub
out
int3
fbstp
pop
sbb
jge
out
out
mov
cmp
mov
sbb
sub
sbb
das
daa
xor
mov
xchg
pop
jg
int
mov
mov
test
mov
mov
cs
mov
movsl
inc
fsts
mov
cwtl
mov
pop
es
lods
out
inc
nop
xchg
adc
mov
adc
movsb
out
out
dec
mov
out
test
call
shl
addr16
jns
mov
out
mov
jbe
xchg
pop
es
pop
into
cmpl
adc
insl
addr16
ret
xor
movsl
xor
mov
jl
loop
leave
ljmp
js
loop
lret
orl
mov
mov
xor
mov
push
dec
lret
inc
mov
dec
scas
or
rorb
cmp
loop
sti
push
xchg
scas
cmpsl
mov
jnp
push
inc
adc
jo
push
mov
arpl
cwtl
xorb
adc
add
jne
pop
ss
in
push
shrb
and
push
repnz
leave
icebp
inc
into
mov
stos
in
in
scas
test
sahf
jnp
andb
cmp
cpuid
push
jns
int3
test
sbb
inc
mov
xchg
inc
lock
loope
adc
js
xchg
mov
inc
rol
and
sahf
cmpsl
fnstsw
jnp
das
jmp
insb
pop
xor
add
xor
or
pushf
jno
xor
mov
nop
inc
sub
les
scas
mov
gs
and
jae
arpl
es
pop
or
pop
mul
imul
and
push
or
cwtl
lock
mov
push
dec
xlat
sub
xchg
adc
insl
shrb
sbb
xchg
cmpsl
jmp
ret
xor
adc
orb
fsubrl
mov
inc
loope
mov
mov
pop
js
sahf
mov
push
push
lds
cmpsl
push
inc
lods
xor
dec
mov
dec
insl
xlat
js
and
pushf
iret
les
fidivrs
or
iret
es
enter
or
lcall
out
push
cmpsl
pusha
or
dec
test
cwtl
daa
lahf
or
call
sub
ljmp
clc
dec
idivl
jl
ficoml
jecxz
add
sub
lock
inc
repz
mov
rorl
sbb
adcb
jmp
lcall
xchg
mov
in
in
mov
fsubs
mov
dec
add
push
add
into
arpl
mov
mov
pop
and
sarb
sbb
pop
mov
push
dec
push
inc
lahf
and
cmp
push
outsb
and
push
cs
jg
hlt
xor
mov
cmp
cwtl
cwtl
jo
pusha
gs
fwait
add
mov
cmc
pop
pop
loopne
enter
dec
test
call
aaa
mov
push
hlt
push
xchg
xor
xor
test
cltd
fxch
jmp
pop
or
xor
iret
xchg
mov
lods
adc
dec
or
cwtl
xchg
jnp
loope
in
xchg
scas
popf
inc
jnp
mov
add
jmp
or
rclb
nop
mov
mov
pop
mov
xchg
pusha
pop
mov
test
pop
jp
adcl
rolb
sti
movsb
inc
xor
push
dec
bound
test
add
pushf
mov
fsubrs
sti
daa
outsl
jae
xchg
es
inc
sbb
push
adc
push
repnz
data16
push
ljmp
stos
loop
test
xor
pop
xchg
jb
mov
push
lret
pop
aad
sub
mov
movsl
inc
mov
sbb
or
fildll
pop
push
adc
xorb
jp
mull
hlt
lods
xor
push
daa
ds
xchg
fucom
and
gs
jl
pop
fldt
mov
adc
add
cwtl
add
jmp
mov
dec
int
pushf
inc
scas
pop
iret
jns
aad
aam
xor
iret
filds
push
nop
mov
pop
lock
xchg
push
mov
lret
jnp
mov
idiv
cwtl
xchg
js
imul
pop
test
les
mov
xor
xchg
xor
sbb
mov
popf
lods
aam
loope
push
add
andl
jecxz
and
mov
aam
sub
xchg
cmp
loope
incl
mov
jae
pop
adc
push
inc
andb
inc
or
repz
stc
pop
sub
dec
mov
fwait
idivl
and
inc
add
pop
jmp
push
pop
ljmp
xchg
mov
and
in
fs
add
cmp
add
sbb
mov
pop
jb
in
addr16
push
int3
add
cmp
loop
xchg
das
es
pop
sarb
lds
mov
data16
jne
mov
inc
xchg
inc
loop
jge
popa
imul
insb
aaa
adc
sbb
push
and
pop
pop
and
rolb
je
sbb
cmp
bound
and
sub
movb
imul
add
test
out
dec
lock
pop
dec
ss
jne
xchg
cmc
sub
sbb
incl
xor
movsb
mov
add
pusha
push
std
stc
add
pop
mov
or
into
xchg
lahf
inc
notl
push
xchg
lcall
test
dec
push
add
cmp
add
aas
jne
popf
lcall
mov
repnz
shrb
loop
pop
pushf
cmpsb
lret
xchg
shl
clc
jae
xor
mov
insb
shlb
les
fwait
or
or
popf
rol
xlat
and
mov
cmc
inc
mov
rcll
repz
gs
sub
mov
sbb
iret
cmp
test
iret
pop
inc
test
rcrl
push
sub
insb
ret
addr16
imul
jo
jmp
roll
cltd
xor
xor
jne
mov
sahf
inc
sub
repnz
dec
into
icebp
idiv
sbb
outsb
cli
sub
and
push
pop
call
mov
arpl
int3
movsl
add
test
push
adc
ljmp
mov
sub
fsts
mov
fcmovnu
push
stos
addr16
inc
les
in
jnp
mov
pop
sub
jle
add
xchg
arpl
out
and
insl
outsl
add
jno
mov
jne
sahf
outsb
mov
or
push
orl
cmc
jl
lock
outsl
roll
loope
sbb
jmp
mov
adc
cld
int
test
loope
rolb
jae
push
mov
and
fstl
jns
cltd
into
divl
lock
inc
and
xor
sub
dec
les
add
lret
out
loopne
dec
scas
xchg
mov
xor
insb
pop
sbb
int
add
sub
stos
inc
push
fcmovnbe
sahf
fsubrs
pop
sbb
pop
sub
popa
ret
xchg
addb
pusha
cmpsl
orb
cwtl
fcomi
ljmp
aaa
dec
aam
inc
je
enter
jo
scas
mov
iret
pop
je
notl
dec
xchg
lock
dec
outsb
sub
insb
lret
pop
pmuludq
cmp
push
scas
aam
pop
pop
sub
cmc
pop
add
hlt
pop
mov
iret
popf
pop
lods
xchg
push
dec
adc
pop
or
cmp
hlt
arpl
ficoml
and
xchg
pop
fildl
sub
sbb
sbb
lods
cmc
adc
sub
or
rorb
adc
fisubs
mov
jb
or
lret
xor
in
xor
lods
xor
dec
out
xchg
jmp
adc
push
dec
lods
dec
or
ret
cmp
inc
sub
ss
mov
fbstp
push
gs
mov
pop
daa
negl
jmp
mov
mov
pop
push
loop
xchg
insl
dec
sarl
cli
ss
and
sub
leave
mov
imul
pusha
mov
sbb
mov
rcrb
jecxz
pushf
adc
repnz
pop
sarb
loopne
lods
icebp
and
jp
iret
int
divb
or
sbb
aam
scas
push
inc
lods
test
add
mov
mov
mov
popa
inc
movsb
lds
sub
mov
push
jmp
cli
xchg
pop
cmp
add
scas
xchg
jle
cmp
lahf
xchg
mov
js
jns
or
and
popf
mov
cmc
mov
shlb
sub
cmp
pop
mov
pushw
pop
pop
mov
popf
iret
sbb
mov
push
adc
and
mov
mov
iret
daa
insb
sub
pushf
les
lcall
push
pop
je
bound
pshufw
sbb
inc
and
jmp
popf
in
cs
xor
idiv
dec
push
adc
jnp
adc
dec
rcll
jmp
into
ja
xchg
cltd
pop
inc
iret
stc
add
mov
sub
dec
cmp
cmp
pop
jge
leave
xchg
in
push
repnz
ret
adc
dec
scas
ljmp
sbb
push
sub
les
pop
imull
push
pop
xor
adc
push
or
pop
xor
jno
fildll
in
imul
push
jae
std
cmc
idivl
into
mov
push
push
mov
in
push
fcoms
mov
xchg
dec
sbb
xor
gs
mov
dec
ja
cmpl
adc
jo
outsl
dec
inc
andb
test
es
or
in
addr16
jmp
mov
adc
pusha
adc
mov
lret
arpl
mov
add
mov
or
sbb
inc
mov
lock
scas
or
push
sbb
bound
hlt
mov
inc
mov
test
jmp
ss
xchg
shr
jg
ret
nop
and
cmc
cmp
jle
push
adc
pop
or
sahf
movsl
in
pop
subl
and
dec
dec
xchg
and
push
cmp
je
bound
pop
mov
jae
sbb
cmp
aad
sub
mov
movsb
cwtl
aam
dec
pop
pop
jp
loopne
cmp
jns
int3
enter
int
inc
push
movsl
mov
sub
lock
pop
shrl
out
inc
inc
adc
push
jmp
mov
add
hlt
cltd
ljmp
ret
dec
dec
aas
sub
jmp
inc
jle
mov
imul
inc
lahf
and
dec
ret
pop
dec
cmp
sub
dec
mov
sbb
sub
orb
or
pop
jno
jb
pushf
stc
cltd
repnz
into
leavew
cld
pop
mov
stc
add
out
lret
insl
mov
insb
ss
fldenv
pushf
sbb
jae
pop
int
mov
mov
dec
jge
or
in
sahf
lock
inc
nop
fistps
out
lods
inc
dec
or
int3
call
and
aam
arpl
inc
mov
add
inc
add
push
sbb
data16
push
add
enter
xor
out
popf
cli
mov
and
lea
je
fisttpll
jae
or
in
mov
enter
add
mov
inc
in
cmp
pushf
shrl
lea
jne
sbb
ret
xor
mov
fxch
jb
aad
daa
jg
xlat
add
lret
add
pop
popl
mov
adc
stc
fsubrl
dec
in
stos
into
mov
imul
sbb
test
pushf
sub
push
in
pop
daa
fisubl
les
not
fsts
sub
add
add
imul
mov
lcall
jo
stc
and
add
ficompl
pop
gs
xchg
jno
ret
pop
pop
adc
push
adc
pop
xchg
ss
xor
jbe
inc
in
int
xor
dec
das
push
cli
inc
xchg
mov
imul
lret
sbbb
jp
xchg
js
push
xor
lea
roll
addb
push
dec
sahf
imul
push
hlt
pop
sub
sub
push
std
icebp
loope
cs
outsl
mov
add
adc
shll
mov
xchg
add
push
loope
inc
xor
fildll
xchg
in
xor
in
icebp
adc
mov
xchg
mov
and
mov
hlt
add
adc
int3
xchg
xchg
std
adc
movsb
popf
fstps
es
pop
sti
cmc
in
cmp
dec
mov
or
fsubrl
clc
cmp
addps
les
mov
outsb
or
or
ja
add
sbb
xchg
jno
push
aam
in
sarl
hlt
mov
add
fldl
inc
add
aas
cmpsl
mov
aas
cmp
or
add
ljmp
sub
into
inc
push
mov
jnp
and
adc
or
out
loopne
xor
fdivp
sahf
or
cmp
addr16
sbb
xor
int
jge
js
and
out
mov
jmp
xor
lret
xor
push
mov
daa
or
mov
fbstp
mov
loopne
je
inc
xchg
mov
test
mov
inc
scas
ja
push
pop
mov
shr
dec
mov
adc
pop
shlb
insl
or
lods
or
stos
mov
repz
jbe
pop
cmp
imul
inc
cmp
and
clc
and
lods
mov
in
repz
cli
mov
push
pusha
cmp
lods
sub
pop
shl
rcr
sbb
mov
ss
fcmovnbe
push
xor
call
sub
cltd
fs
pop
pop
inc
pop
shlb
mov
sub
mov
bound
sbbb
mov
lahf
in
or
rol
addb
fisubrs
mov
scas
push
cli
and
int3
ret
jl
popa
push
imul
adc
lret
gs
cltd
ud0
inc
cmc
push
mov
shll
add
loop
push
cmp
aas
sbb
pop
lods
jle
mov
mov
bound
mov
or
mov
test
arpl
ficoml
es
fldcw
mov
mov
adc
cmp
inc
aaa
icebp
fdivp
loope
bound
and
dec
xor
loop
adc
and
and
repnz
push
aad
push
test
jns
cltd
pop
adc
xor
cltd
out
lret
outsl
pop
push
mov
fiaddl
xchg
lret
push
pop
mov
xchg
mov
push
hlt
loope
pop
testb
fwait
shlb
dec
mov
or
push
xchg
enter
cmp
pop
push
dec
scas
and
leave
jg
and
mov
jnp
mov
cmpsb
test
mov
insl
stc
adc
movsl
mov
jge
aad
out
dec
mov
jne
and
lods
and
mov
mov
sbb
mov
adc
mov
or
jmp
jno
push
cmpsl
add
or
or
xchg
scas
hlt
pusha
aam
shlb
daa
in
mov
cltd
xchg
and
es
sbb
xchg
lds
addr16
sbb
pusha
in
decb
sub
mov
cwtl
or
loopne
gs
sti
test
add
cmpl
jg
in
sub
lods
cmc
out
stos
push
loope
pushf
mov
adc
inc
inc
cltd
push
push
repnz
in
jns
in
movsl
dec
int3
cmp
mov
dec
scas
jmp
mov
loope
xchg
mov
incl
daa
shlb
je
stc
xchg
push
bound
jbe
jecxz
mov
std
enter
loop
in
std
enter
xchg
jae
hlt
pop
sahf
pop
sub
xchg
insb
repz
inc
test
add
pop
ret
sbb
gs
lock
push
enter
das
mov
test
mov
jg
push
add
repz
and
bound
sub
enter
xchg
pop
pop
mov
inc
xor
xor
bound
outsb
cmp
mov
js
stos
xchg
pop
jns
in
inc
push
mov
pushf
pop
xlat
dec
int
inc
sub
jl
mov
push
pop
sub
dec
inc
ror
into
loopne
inc
mov
aam
dec
inc
in
jae
scas
popf
cltd
adc
jmp
add
and
jbe
adcb
and
xor
pop
mov
dec
sbb
lret
inc
or
mov
or
fidivl
andb
push
add
dec
in
les
mov
sbb
fwait
in
cmp
sbb
dec
jmp
or
popf
pop
out
in
mov
jnp
push
dec
nop
mov
leave
mov
pop
push
outsl
add
mov
xor
inc
rorb
jle
inc
clc
sbb
popf
scas
sbb
movsb
adc
jle
pop
push
ds
push
cmpsb
outsb
dec
mov
sub
jmp
jne
fwait
push
inc
or
jl
mov
sub
aad
mov
adc
test
std
mov
jmp
mov
add
int3
mull
mov
push
pop
shlb
inc
js
xchg
lods
movsb
lds
loopne
dec
xchg
xor
jo
sbb
jno
lds
mov
in
push
das
mov
pop
insl
cmp
lret
loop
scas
mov
jmp
sarb
inc
outsl
ficompl
arpl
mov
lock
stos
adc
nop
sbb
arpl
ss
push
mov
stc
loopne
jecxz
and
dec
adc
sbb
popa
xor
or
inc
sbb
pop
mov
clc
and
fisubl
sbb
dec
xor
addb
aam
in
cmpb
and
cmp
inc
aad
jle
fimuls
stc
inc
mov
ljmp
pop
jge
scas
arpl
test
jmp
out
add
cld
sti
aad
mov
mov
mov
inc
pop
jecxz
sbb
pusha
inc
xor
cs
xor
fcmovne
jns
pushl
cli
xchg
pop
sub
inc
addr16
testb
push
cmp
push
mov
push
test
jp
mov
adc
push
in
jb
in
push
js
popa
test
mov
or
jl
mov
outsl
fisubl
mov
outsl
ret
in
loope
dec
pop
popa
pop
ret
or
jmp
inc
cmp
gs
lmsw
mov
sbb
les
jo
inc
fbld
rorl
arpl
mov
imul
xchg
inc
jbe
adc
add
xchg
outsl
shll
fsubrl
mov
adc
xchg
out
daa
outsb
lods
and
or
ss
fstpt
ja
xor
push
mov
repnz
push
das
int
aam
adc
pushf
imul
fildl
lret
and
hlt
inc
sbb
popf
outsl
popf
outsl
repz
scas
dec
dec
dec
or
cmp
repz
in
repnz
dec
and
setns
pusha
and
js
xchg
and
rcrl
repnz
mov
pop
movsl
fsubrl
insl
aaa
int3
insl
ret
and
jbe
mov
pushf
xchg
out
jo
add
add
mov
fwait
stc
imul
dec
dec
mov
push
push
pushf
xchg
adc
dec
lock
sahf
cld
pop
mov
push
mov
xor
adc
inc
cmpsl
pop
rcl
push
sahf
lods
cmp
jo
fsts
adc
or
lods
imul
hlt
jae
sbb
loopne
test
cmpsb
sbb
stc
cmpb
jmp
inc
inc
jbe
sti
push
out
imul
add
and
test
fs
mov
or
mov
sbb
sti
mov
jmp
sub
push
mov
ds
in
pop
scas
sub
outsl
fmulp
mov
xchg
ret
movsl
scas
into
cmpb
xchg
aaa
outsb
inc
xchg
loope
jo
cmc
leave
or
xchg
insl
stc
sub
jne
xchg
inc
pop
mov
xor
fidivs
fstpt
test
rcrl
dec
mov
push
pop
cld
scas
sub
lahf
sub
loope
jecxz
adc
cmc
subl
mov
or
adc
inc
lcall
xor
lret
inc
add
pop
out
jne
inc
add
cwtl
ss
cltd
cmp
stos
push
enter
push
dec
pop
push
mov
scas
lods
jbe
je
cli
leave
push
dec
test
loopne
dec
mov
arpl
jmp
jae
loope
dec
gs
ret
shrb
ret
pop
cmpsb
or
jp
pop
add
idivl
out
aad
testb
ror
mov
mov
addr16
cs
xor
cmc
xchg
sti
inc
xchg
fcmovnu
pushf
mov
subl
aam
call
insl
jns
cmp
xor
out
or
pop
stc
jae
outsb
and
les
lds
jae
sti
jb
rol
xor
add
sub
cmp
leave
push
mov
mov
sarb
pop
mov
rorb
adc
jp
es
pop
rcrb
bound
pop
scas
adc
lods
adc
lds
dec
push
xor
jle
cwtl
inc
and
xchg
inc
dec
cmp
pushf
mov
lahf
imul
int3
shll
sbb
mov
inc
or
add
clc
hlt
ds
je
xchg
add
jmp
mov
cmc
clc
lock
add
test
inc
stos
shlb
ret
lods
mov
pop
inc
and
push
ljmp
pop
sti
int3
fcomp
loopne
xlat
push
aas
mov
je
sbb
cmp
imul
dec
jno
pushf
testl
cmc
mov
pop
mov
xchg
jle
lods
fwait
or
dec
and
fldt
test
mov
fldcw
jb
mov
pop
dec
inc
mov
test
add
xchg
pop
push
es
ljmp
xor
pslld
xchg
jns
insl
or
fldt
adc
aas
add
mov
aam
sub
mov
cltd
bound
adc
out
add
jge
mov
sub
adc
lahf
shr
jne
pop
adc
xchg
sub
xor
sub
push
daa
dec
test
mov
shr
cmp
test
mov
test
jle
out
mov
push
push
sbb
inc
xchg
mov
out
mov
or
imul
sbb
push
jmp
in
pop
and
push
cli
sti
pushf
jne
xchg
mov
cli
jmp
cmp
inc
or
insb
mov
lahf
mov
popa
int3
shl
cs
add
inc
sub
stc
inc
je
in
jbe
mov
or
xchg
lret
ss
inc
mov
sti
cwtl
mov
adc
adc
repz
lret
jbe
aam
xor
stos
add
mov
jl
mov
fsubs
out
pop
fisubl
fld
dec
sbb
decl
fidivrl
jle
jae
stos
fcompl
fidivs
dec
test
shll
dec
mov
dec
fdivp
repz
or
cmp
add
sarb
or
jnp
dec
cmp
cmc
xor
jp
clc
out
lods
test
js
ds
dec
cmc
xchg
stc
cltd
dec
xchg
push
call
xor
add
in
cs
mov
and
orb
shrb
cld
jae
ret
cld
outsb
sub
cmc
das
jbe
mov
mov
mov
jmp
adc
js
clc
push
mov
cli
mov
mov
xchg
addb
push
or
cmp
orb
xchg
aad
adc
fdivrs
insb
fwait
lock
nop
loopne
pushf
mov
and
loop
lahf
cmp
lds
imul
add
out
stos
jmp
cmpsl
dec
xchg
scas
adc
jge
int3
sbb
xor
push
xchg
jmp
dec
jecxz
jmp
cltd
ret
and
ret
push
xchg
test
xchg
or
xchg
je
xor
xor
jbe
adc
dec
out
mov
lret
shrb
in
pop
addr16
mov
fucom
inc
jne
mov
push
adcb
fcmovnb
jmp
inc
sub
sub
imul
arpl
jecxz
xor
aad
leave
fs
mov
mov
and
outsl
xor
push
or
push
loopne
lock
push
adc
es
adc
sbb
pop
daa
push
push
pop
pop
outsb
jo
push
fcmovnb
sbb
sti
loopne
xchg
mov
div
lods
add
dec
cmp
xor
addr16
scas
push
cmpsb
outsl
sbb
mulb
push
enter
movsb
int3
ds
add
sbbl
xor
neg
fsubr
inc
popf
sub
insl
test
rcrl
jae
and
call
out
pushf
inc
mov
jb
daa
bound
jp
es
pop
out
in
js
vpunpckhbw
xchg
cmc
pop
jnp
xchg
mov
add
test
adc
xchg
je
pop
cld
insl
ja
mov
fcomip
jne
test
xchg
rcll
mov
data16
jne
sbb
xchg
sbb
pop
mov
push
nop
in
jp
jl
push
or
adc
scas
pop
loope
cltd
lcall
xor
mov
push
mov
adcb
lds
xchg
ss
mov
pop
enter
int
push
xchg
ja
lret
xor
add
fisubl
pop
dec
and
test
sub
leave
pop
mov
pop
mov
or
adc
das
and
jmp
out
lods
cltd
jae
adc
jecxz
pushf
fnstenv
mov
cmpsb
pop
shl
xor
dec
imul
jo
int3
push
jl
lahf
hlt
aam
call
pop
stos
test
inc
inc
pop
push
cwtl
mov
sub
sub
dec
sbbl
ss
cmpsl
jl
int3
in
in
fdivs
pextrw
add
jb
hlt
call
push
outsb
test
jle
outsl
loope
test
andb
cmpsb
push
jo
sbb
mov
ss
ss
sti
dec
testb
dec
jle
jbe
popf
call
pop
lret
aad
pop
xor
sti
call
mov
xor
pop
cmpsb
cli
jmp
out
dec
mov
in
mov
xor
sbb
in
mov
aaa
xor
push
sub
ds
es
sub
gs
cmpsb
lret
or
in
jne
fisubrs
pop
inc
outsb
and
in
mov
subl
hlt
lret
lret
mov
mov
sbb
mov
jb
out
rcrl
mov
bnd
lods
fildl
idivl
addr16
fisubs
je
cmc
js
popf
scas
or
jno
fs
mov
loop
dec
pop
or
addb
insb
stos
push
or
inc
mov
and
inc
lret
mov
ret
pop
movsl
jbe
lcall
std
negb
nop
mov
ja
icebp
sub
pop
pusha
xor
cmp
jp
or
cmp
ror
sbb
mov
in
mov
aas
ret
mov
loop
pop
sti
imull
xor
stos
and
loopne
push
xchg
adc
mov
stc
pusha
repz
loopne
lods
fs
mov
xlat
fdivrl
insl
and
dec
jbe
sbb
mov
sub
idiv
pop
enter
inc
or
jnp
scas
rcrb
dec
rcll
dec
inc
or
int
imul
push
stos
mov
cmp
add
xchg
jecxz
jo
bound
pop
fsubl
xchg
dec
rclb
mov
repz
cmp
into
ficoml
jle
push
adc
sub
jno
stc
and
mov
cmc
fisttps
mov
mov
icebp
add
fwait
gs
aaa
pop
and
js
clc
add
das
mov
or
and
inc
push
mov
push
test
push
aam
lfs
negl
pop
gs
movsb
mov
cwtl
jecxz
sbb
icebp
nop
adc
arpl
fs
daa
mov
fidivs
sbb
jle
jge
jp
inc
cltd
mov
repnz
push
mov
sub
sar
adc
add
fiadds
call
jo
dec
inc
mov
out
or
jb
icebp
mov
mov
inc
add
lods
xor
jmp
push
fstps
arpl
aaa
addl
inc
movnti
and
gs
das
cmpsb
push
stos
into
sub
fcmove
push
imul
shlb
insb
or
inc
loop
xchg
or
pop
xor
cmp
repz
cmp
add
stos
sahf
cmpsl
jne
lock
ficoml
ficompl
int
cli
cmpsb
xor
sbb
and
mov
dec
push
aad
mov
sldt
inc
xchg
dec
mov
mov
mov
les
jb
push
push
jmp
aad
cmpsl
fldt
push
push
add
mov
jle
daa
cmp
adc
xchg
jecxz
xchg
mov
mov
aas
imul
lcall
or
inc
jnp
loop
data16
pop
xchg
rorl
clc
sti
add
dec
imul
mov
xor
addr16
lock
and
sbb
idivl
filds
adc
dec
dec
jne
es
xchg
out
pop
mov
mov
movsl
xchg
xor
sbb
xchg
jns
xchg
push
aam
cwtl
jae
popf
aad
dec
inc
outsl
lds
stos
mov
bound
rolb
aam
pop
pop
outsl
sub
movsb
push
inc
add
ret
or
push
outsl
mov
lcall
gs
cmp
pop
out
pusha
jp
mov
add
adc
jle
pop
cmp
stos
or
cmp
sbb
mov
or
xchg
leave
inc
cs
jecxz
add
push
imul
icebp
adc
ret
cmp
adc
imul
xchg
add
dec
lret
pusha
roll
ljmp
xor
cmpsb
push
dec
scas
adc
mov
adc
or
ljmp
push
sbb
rorl
dec
test
ja
sbb
imul
mov
and
je
push
js
call
push
out
jge
shrl
push
mov
aas
pop
int
jmp
mov
push
lock
int3
push
sub
inc
cltd
repz
dec
push
fwait
jl
outsl
add
ljmp
stc
cmp
scas
loope
inc
movsb
sahf
xor
mov
popf
movsl
push
in
sub
pop
inc
cld
enter
pop
sbb
sbb
insl
popf
push
repnz
pusha
lret
fwait
or
stc
mov
lahf
push
dec
or
jp
dec
in
mov
stc
and
adc
dec
jb
ret
jnp
repz
pop
iret
pop
clc
outsb
popf
dec
inc
imul
jp
mov
out
jle
arpl
jae
xchg
pushf
inc
cmp
stc
add
imul
jl
imul
mov
mov
loop
fs
inc
insl
mov
inc
repnz
ja
outsl
pop
outsl
jno
jl
sbb
orb
shld
psraw
outsb
adc
scas
imul
add
sti
fcmovb
in
inc
bound
sub
insl
inc
and
sbb
adc
mov
int3
js
cmp
cmp
cltd
sub
push
mov
mov
bound
mov
mov
xchg
push
subb
int
addr16
daa
inc
stos
loope
pop
ror
push
rcrl
cmp
push
pushf
das
or
lock
jp
stc
fprem1
in
adc
test
jle
push
popa
cltd
dec
cwtl
jne
iret
int3
mov
inc
aam
and
shl
push
aaa
mov
int
inc
mov
mov
push
outsb
sbb
cmp
fsubrs
adc
and
les
jbe
lahf
cli
mov
push
push
ret
fidivs
aad
sub
xchg
imul
ja
decb
sahf
imul
jmp
fwait
cmpsb
mov
sub
out
adc
or
data16
repz
test
xchg
scas
jl
lock
push
fcomps
ljmp
push
shl
cmp
pop
sbbb
popf
cmc
in
fmulp
sbb
test
lret
add
xchg
fwait
add
imul
test
or
in
adc
mov
addr16
adc
decl
icebp
sub
xchg
lcall
mov
es
and
jge
lahf
cmp
mov
cld
sbb
test
lds
addb
sbb
outsb
fsubs
arpl
sti
loop
lea
fiadds
cmp
or
dec
lret
push
jp
ret
push
push
fwait
popf
mulb
ljmp
xchg
jg
imull
jae
pop
out
pop
lds
inc
lea
aas
mov
loopne
in
ljmp
xchg
jns
ret
xchg
adc
test
sub
in
mov
lods
xchg
nop
sahf
hlt
cmp
inc
nop
add
xchg
adc
clc
icebp
cmp
xrelease
add
pusha
or
call
stos
repnz
xchg
js
jp
out
in
in
pop
cmp
aad
adc
xchg
imul
inc
fldcw
sahf
fistpl
scas
cltd
or
and
add
push
sti
movsb
push
jmp
xchg
lret
sub
add
stos
pop
movsl
or
adc
mov
xchg
das
push
je
and
popf
dec
cmpsb
and
push
movsb
cmp
sub
xor
xor
inc
xchg
jne
xor
test
and
xor
xor
mov
daa
pop
sbb
add
adc
jns
xlat
dec
xchg
push
daa
imul
sahf
mov
dec
pop
lret
push
test
add
enter
and
jmp
adc
pop
lcall
lret
push
and
lock
xor
mov
cmpsb
test
lock
and
ljmp
mov
cmp
aam
gs
and
cmpsl
push
sbb
fnstenv
mov
jg
mov
jmp
fs
sbb
cmp
and
pop
xor
xor
es
jo
sbb
call
dec
fwait
push
mov
push
sbb
decb
in
lods
in
lcall
jo
mov
xchg
pop
ror
add
or
jp,pt
enter
leave
arpl
or
pop
test
xor
mov
aad
into
inc
sbb
and
insb
pop
sbb
je
cmpb
in
test
adc
adc
inc
xchg
sbb
cltd
add
in
in
sarl
addr16
in
popf
out
mov
sub
loopne
jo
int3
mov
cmpsl
pop
mov
xchg
xor
repnz
cmc
pusha
nop
push
lcall
pop
dec
std
xor
daa
mov
jns
ljmp
or
nop
adc
jno
int3
es
mov
dec
cmp
add
pop
lock
jns
shrb
sbb
inc
out
in
inc
rolb
push
mov
pushl
cmpsb
mov
xchg
pop
sbb
cld
add
fwait
jmp
dec
stc
call
insl
mov
jle
jmp
jb
ss
push
sbb
push
sbb
sbb
pushf
push
xchg
divl
stos
ret
mov
sub
adc
lret
mov
mov
jo
push
jg
cmp
outsb
or
mov
je
adc
xchg
out
out
lods
cmp
loope
cltd
xor
jmp
insb
gs
mov
fimull
loopne
xchg
sub
lods
push
gs
cmpsl
jl
jmp
lea
jmp
ljmp
xlat
loopne
xchg
add
add
rcrb
sub
cmp
test
aam
icebp
loop
enter
sbb
in
les
mov
push
movsl
sub
cltd
cwtl
lret
aaa
pop
mov
sbbl
iret
sbb
cmp
push
das
mov
div
push
std
lock
push
fimuls
sub
xlat
mov
xchg
adcl
popf
imul
sbb
sub
fsubl
loope
push
push
cmp
xlat
and
xor
lods
mov
mov
test
cmc
cmp
out
xchg
sbb
xlat
cmp
ljmp
pop
popf
push
mov
mov
lcall
cmp
stos
xchg
sahf
rcll
xor
cmp
addr16
xchg
xor
mov
in
fdivrl
dec
mov
xor
xor
mov
pop
jge
xchg
int
stos
pop
cmpsb
cmp
mov
mov
pop
daa
in
inc
push
imul
and
fildll
sbb
adc
pop
fmuls
dec
std
push
mov
push
lret
or
insb
movsb
lock
rcl
sbb
in
push
outsl
je
iret
pushw
lods
lea
int
fbld
lea
dec
test
xor
mov
sub
push
fwait
push
dec
fwait
dec
mov
lret
dec
lea
pop
add
xchg
adc
adc
jmp
pop
jns
es
xor
adc
xorl
xchg
sub
iret
jbe
mulb
int3
mov
lret
dec
xor
fxch
or
xor
cwtl
in
push
mov
dec
shl
call
cld
mov
ja
cwtl
mov
test
mov
and
ss
aad
loopne
lods
mov
pop
push
test
sbb
movsl
inc
jecxz
sbb
rcll
inc
jae
outsl
mov
sub
lea
pop
minps
add
push
xor
mov
push
and
imulb
cltd
mov
pop
fwait
or
in
daa
scas
sbb
aaa
ljmp
xchg
mov
and
cmp
mov
cmc
imul
fisubrl
outsb
lock
pop
add
jg
rclb
ljmp
push
mov
jb
inc
sub
inc
mull
and
icebp
stos
popa
xchg
pop
icebp
push
shrl
pop
loope
mov
pop
xchg
daa
dec
daa
sbb
fldl2t
mov
andl
push
push
push
call
pushf
fldcw
inc
add
iret
sub
jo
and
out
inc
cmpsl
add
dec
dec
add
jo
bound
int3
and
out
nop
ret
lcall
xchg
das
sbb
jecxz
or
in
xor
shlb
cmpxchg
add
loop
and
push
pop
cwtl
icebp
push
inc
mov
pop
mov
xchg
jecxz
repz
push
scas
cmp
lock
jnp
cld
lcall
mov
push
add
lea
jae
insl
mov
jle
jge
idivb
cmp
fnstenv
out
gs
cmp
in
stos
mov
mov
inc
loopne
and
push
aaa
cmp
or
cli
jle
jnp
cmpsl
mov
in
sub
lcall
flds
pop
aad
cwtl
lahf
push
dec
nop
fildll
pop
sub
pop
mov
sub
in
test
rcr
mov
xchg
push
out
fisubrs
loope
push
sub
fidivrs
add
std
cmp
jns
int
inc
outsb
cmc
out
adc
lret
mov
stc
aaa
mov
xor
dec
sub
ret
xor
and
xchg
aas
cwtl
dec
adc
fisubl
cmp
sub
shrl
fstp
lcall
mov
mov
rorb
mov
sbb
lea
je
ret
jmp
jp
lods
inc
sti
add
shrl
loopne
movsb
in
sub
jge
dec
fldcw
insb
cmp
lds
jb
mov
gs
fstps
sbb
xor
sub
cmp
and
aam
push
jmp
mov
mov
stos
stos
je
push
add
jg
jno
sub
push
xchg
add
adc
sub
jge
lods
inc
jnp
aad
div
mov
add
mov
xchg
enter
xor
cmp
rorl
in
dec
mov
fadd
mov
in
call
enter
aam
add
subb
and
mov
lcall
insl
pushf
mov
mov
adc
into
lds
jae
fnstenv
pop
movsl
pop
mov
call
sub
jae
mov
mov
or
into
xlat
test
rclb
aad
inc
clc
movlps
call
mov
jae
mov
push
repnz
loopne
xorb
shlb
push
cli
lock
out
lret
jbe
sub
daa
or
mov
call
enter
xor
xchg
outsb
es
cmc
jo
xor
mulb
pusha
pop
scas
fwait
inc
inc
jno
es
fcmove
test
sar
leave
sbb
fst
lods
test
pushf
push
jne
dec
data16
js
sub
mov
test
xor
lahf
hlt
test
push
rorb
idivb
lcall
jno
add
sub
sbb
icebp
add
dec
mov
push
bound
ret
rclb
aas
xor
pop
push
sti
das
inc
mov
mov
sbb
xchg
sub
pop
push
xchg
fsubl
xchg
sbb
pusha
enter
push
lock
mov
push
cld
push
or
add
out
sbb
sbbb
movsb
iret
ret
rclb
xchg
sbb
push
jb
mov
aad
in
pop
push
and
jnp
push
in
dec
push
and
pop
push
sbb
fs
in
sahf
xor
movsl
add
xchg
pop
je
adc
stc
add
in
sbb
rclb
inc
mov
les
mov
jnp
fildl
div
scas
movsb
pop
repnz
xor
sub
cs
jecxz
mov
out
and
adc
add
mov
or
lret
push
mov
adc
testb
shrb
inc
inc
jnp
call
cltd
fisubl
test
cmp
xchg
out
mov
pushf
hlt
push
int
dec
mov
rorb
cltd
pop
sbb
int3
and
mov
in
xchg
mov
imul
inc
jo
aaa
sub
sub
mov
jg
inc
lods
test
add
or
jmp
js
test
sahf
mov
and
popf
mov
jg
pop
mov
aas
pop
or
mov
jae
jecxz
les
mov
movsb
xor
int3
sbb
or
pushf
and
cmp
je
movsl
lret
inc
stc
fdivl
fldl
mov
dec
out
ret
popa
outsl
mov
cld
fwait
xor
adc
xor
dec
cmp
pusha
xchg
loopne
in
sbb
or
xchg
scas
add
into
or
dec
aaa
xchg
bound
test
mov
mov
fstpt
dec
in
mov
pop
pop
push
pusha
enter
xchg
pushf
cmp
inc
and
mov
mov
ret
in
sub
aad
add
test
scas
je
popf
cmp
subb
xor
inc
push
cld
cmp
add
mov
in
jb
cmp
lods
mov
mov
cli
cmp
mov
mov
scas
cli
sub
jnp
int
adc
xchg
and
adc
hlt
push
test
mov
and
clc
std
mov
adc
mov
insb
ds
push
out
lret
push
push
insl
test
lea
fistps
mov
pop
add
daa
add
in
in
andl
and
add
mov
mov
icebp
mov
mov
sbb
xor
addb
add
pop
clc
ficomps
adc
clc
mov
mov
push
mov
mov
xor
mov
cmc
stos
shlb
pop
fisttpll
mov
shlb
jmp
mov
mov
mov
das
mov
ret
les
sub
inc
xchg
cmp
stos
lods
daa
sbb
xlat
jnp
jmp
add
clc
lock
adcl
cli
or
mov
mov
inc
shll
lahf
mov
jmp
lods
cmp
vpmacssdd
into
push
pop
add
pushf
sub
push
jmp
loopne
bound
sbb
dec
add
movsb
mov
push
in
out
lods
jecxz
dec
aas
cld
pop
cwtl
sbb
out
mov
je
mov
loopne
jns
mov
push
cmp
sbb
test
movsl
jp
add
decb
popa
imul
mov
shl
aaa
rorl
scas
add
sbb
loop
leave
jns
cmc
push
scas
adc
in
daa
sbb
xchg
jno
add
adc
jmp
sub
out
mov
add
xchg
in
rcll
lea
xor
sbb
mov
pushf
aad
dec
pop
mov
mov
iret
adc
sub
rcrl
dec
xor
mov
inc
stos
fiaddl
xor
insb
aam
or
lods
mov
sbb
pop
pop
jecxz
xor
lret
jmp
mov
push
js
fs
out
xor
dec
loope
xor
pop
sub
das
loop
jecxz
adc
out
mov
mov
sbb
cwtl
aad
fsubl
fwait
mov
cmpl
outsb
jl
add
sbb
xchg
cs
or
xchg
les
cmpsb
mov
aad
inc
pop
fiadds
rcrl
ds
inc
leave
in
cmc
ret
imul
inc
outsl
stos
or
in
sub
mov
lret
and
add
cmpsl
pop
xchg
add
out
jae
lahf
je
pop
mov
xor
je
call
mov
jae
or
inc
out
lds
jecxz
shll
stos
sub
cmp
cmp
sbb
jns
and
mov
mov
or
jb
sti
mov
pop
add
stos
pop
dec
stos
popa
dec
scas
pop
jnp
iret
loopne
push
fisubl
or
js
mov
and
sub
xchg
int
mov
test
roll
mov
aas
cmp
adc
pop
out
adc
inc
xchg
inc
rcl
fstps
sub
pop
js
cltd
mov
sbb
push
jne
push
jo
fnsave
incb
xchg
pop
sbb
sbb
leave
pop
mov
inc
adc
and
adc
outsb
ret
into
and
mov
int
inc
sarb
fxtract
dec
jae
insb
cmc
in
adc
push
xchg
mov
mov
mov
and
lock
sub
fidivrl
ficomps
out
out
loop
add
xchg
sub
or
cmc
jge
lock
lcall
push
or
push
mov
mov
xor
ja
mov
iret
das
test
or
xchg
jae
arpl
jle
es
xchg
pop
mov
repz
pop
and
pop
jo
out
or
push
sbb
cmp
cmpsb
pop
cmp
call
jno
orb
add
hlt
jno
int3
adc
sbb
inc
inc
lcall
leave
je
mov
shlb
addr16
inc
fwait
sbb
jns
inc
pop
add
mov
fsub
imul
inc
xor
imul
stos
ficoml
adc
mov
and
or
ret
xchg
sbb
mov
popf
lods
std
adc
or
sbb
std
xor
je
sahf
loop
and
popa
adc
or
lock
sbb
addb
repnz
rol
lret
xor
jmp
adc
push
jmp
jecxz
cmp
xchg
repnz
cld
clc
sub
add
sbb
das
xchg
ficompl
fiaddl
dec
imul
xchg
rclb
push
and
shrl
push
or
mov
std
or
mov
lahf
push
out
imul
fcmovnbe
or
cli
clc
jo
inc
and
lock
xchg
cmpsl
popf
add
push
fcmovb
mov
dec
incb
gs
push
sbb
push
mov
stos
ljmp
mov
jnp
inc
adc
xchg
decb
sahf
dec
xchg
jge
lcall
push
dec
inc
inc
mulb
sbb
scas
mov
xor
lods
loope
inc
pushf
cmp
clc
xchg
mov
lcall
outsb
mov
out
mov
add
cmp
mov
cmp
mov
aam
and
or
push
cmpsb
stos
leave
mov
test
lahf
loopne
test
inc
dec
cmp
mov
cld
outsl
and
mov
sbb
mov
in
cmp
int3
std
imul
inc
push
cli
popf
cs
icebp
adc
jne
and
xchg
stos
stos
dec
xchg
aad
push
mov
xor
mov
push
cmc
pop
sbbb
les
aaa
push
idivb
xchg
fwait
scas
aad
clc
mov
mov
in
movsl
rorb
xor
bound
xor
pop
clc
lret
add
pop
push
iret
xor
adc
sub
into
push
and
in
enter
mov
xchg
filds
ret
jp
scas
dec
lcall
xchg
adc
in
xor
pop
adc
xchg
divb
and
sbbb
loopne
inc
repz
jae
sub
in
cmp
cmpsb
repz
cltd
push
sarl
add
xchg
out
xor
xchg
fistps
shrb
sbb
push
sbb
xchg
or
sub
loop
cmc
mov
scas
push
jb
outsb
inc
insl
xchg
sbbl
dec
lret
outsl
jns
mov
pop
adc
xchg
out
add
push
mov
inc
js
fwait
mov
fwait
cld
dec
jl
push
lahf
mov
mov
lods
stos
cmp
jp
inc
scas
les
fsub
in
pop
inc
sub
lret
daa
jb
xchg
sbb
add
jae
fwait
loop
push
or
dec
cs
add
mov
sub
pop
out
stos
mov
mov
pop
mov
jp
cli
fwait
or
mov
cmp
ret
xchg
push
int3
pop
popa
jne
clc
pop
int
mov
lret
pop
sbb
mov
or
add
in
imul
push
lods
sbb
dec
push
dec
pop
in
das
ret
test
sahf
dec
jnp
xchg
mov
ja
pop
adcl
push
mov
jo
test
hlt
outsb
push
or
lret
pop
out
out
push
dec
xchg
les
repnz
pop
adc
push
add
inc
mov
insl
mov
sub
cld
pop
or
xor
cltd
add
aad
xchg
imul
mov
jp
and
xchg
loope
add
repnz
add
inc
cmp
movsb
popf
mov
shlb
into
insl
xchg
jmp
lds
mov
addr16
js
xorb
test
mov
leave
mov
aad
ret
fsubrl
daa
xchg
add
push
pop
xlat
jnp
cli
push
sbb
lret
mov
testb
cmp
adc
sub
xchg
fdivrl
ffreep
out
jl
cs
mov
mov
mov
xor
xor
xor
or
lods
xlat
or
adc
dec
scas
mov
xchg
xchg
adc
mov
stc
aam
adc
jns
data16
xor
adc
jp
shll
aad
push
roll
lret
outsl
iret
inc
call
filds
sub
inc
mov
iret
out
mov
pop
xchg
pusha
fcmovnu
mov
test
outsl
pop
ret
jo
mov
in
dec
cmpsl
in
jae
leave
dec
adc
mull
jns
push
inc
in
ds
test
fdivs
lcall
outsb
mov
arpl
push
cmp
mov
jae
and
xchg
lock
clc
shrb
pop
mov
stos
stos
pop
mov
mov
bound
push
rep
pop
xor
jp
fidivs
stc
sahf
and
fiaddl
rcrb
repz
fisubs
enter
add
enter
xlat
cwtl
dec
ss
sar
xor
mov
pop
ljmp
sahf
and
sub
jg
add
mov
stos
hlt
cmp
mov
jmp
inc
lock
mov
and
idivb
mov
mov
stc
and
cmp
jge
ds
inc
arpl
jle
cmp
int
xchg
jecxz
push
movsb
mov
push
adc
and
icebp
sbb
mov
jmp
repz
scas
or
xor
mov
xor
mov
xchg
std
jecxz
cmp
call
mov
jb
mov
sbb
xor
in
bound
cld
stos
pop
gs
dec
pop
lret
repz
push
test
mov
push
or
jnp
xlat
aam
sbb
xor
push
jno
cmp
mov
pop
ds
mov
inc
cmp
addr16
cmp
rcll
cmp
add
rorb
xor
mov
cli
into
es
and
data16
jp
fnstenv
addr16
push
std
mov
mov
sub
add
xchg
mov
mov
out
and
jb
js
scas
jp
cmpsl
adc
repnz
enter
dec
fs
out
mov
adc
jnp
mov
shlb
mov
lret
xor
xor
lret
sbb
or
inc
mov
js
add
dec
mov
xchg
call
push
mov
or
test
jp
loopne
dec
push
sbb
mov
pop
enter
cmc
arpl
pop
lods
js
out
adc
lahf
test
jecxz
lods
push
cmp
jp
arpl
jns
push
shlb
int
and
ss
sub
cmp
push
mov
dec
sub
bnd
scas
xlat
mov
push
cmp
adc
ss
xor
sbb
xchg
je
sbb
cmpsb
enter
test
out
test
pop
push
pusha
hlt
sub
sub
je
xchg
xor
jne
mov
jne
sar
rclb
xor
pop
push
mov
mov
stc
mov
mov
xchg
call
push
int3
cmp
sub
lods
cmp
xor
xchg
inc
pop
adc
jne
mov
addb
mov
dec
sti
imul
test
dec
adc
xchg
dec
jge
adcl
pop
fisttpll
bound
add
mov
gs
mov
xor
outsb
dec
addl
dec
jle
push
sbb
insl
adc
jge
or
push
cmp
leave
into
lcall
mov
mov
nop
aad
mov
mov
mov
push
and
ljmp
ret
fisttps
pop
test
outsl
shll
push
cmp
jg
fsubl
movsb
shrb
sub
jb
mov
xchg
xlat
or
imul
or
xor
imul
jb
lea
adc
and
xor
dec
sti
push
adc
gs
inc
andps
and
jbe
jg
cmp
repz
gs
imul
push
cmp
inc
outsb
shrl
negb
notb
inc
lds
push
xchg
mov
sti
cs
dec
jnp
gs
test
fisubrl
adcl
dec
shlb
mov
sbb
mov
push
inc
das
and
dec
test
pmovmskb
shll
inc
add
push
sbb
hlt
dec
or
nop
xor
xchg
mov
cwtl
xor
test
mov
jb
es
ret
fisubrs
pop
push
sub
sti
stos
in
push
je
into
lods
decl
shlb
jmp
sti
cmp
inc
test
leave
inc
xor
shl
out
filds
std
fxch
sub
stos
sbb
or
in
cmp
cwtl
mov
and
aas
pusha
or
hlt
inc
imul
imulb
push
inc
mov
lock
nop
sti
cld
aaa
pop
fsubs
inc
add
mov
and
loope
sub
loopne
sbb
xorl
adc
xor
adc
popf
mov
xchg
inc
jmp
test
cmpsl
stos
push
jns
mov
insl
push
sti
mov
dec
dec
mov
in
insl
mov
sbb
and
mov
cmp
hlt
fsubs
cmc
lock
xchg
fldln2
aam
mov
and
cmp
movsb
push
iret
dec
fistps
or
movsl
sub
data16
xor
outsl
int
inc
pop
jle
cltd
idivb
inc
in
sarb
push
jge
mov
cmp
popf
mov
cmp
test
negl
imul
jnp
sbb
sub
in
aam
push
xor
xlat
cwtl
mov
mov
shll
in
repnz
dec
pop
js
or
mov
sbb
sub
adc
fsubp
cmp
push
mov
sbb
dec
and
push
cmp
ds
jl
faddl
cld
out
sbb
mov
shll
into
mov
jp
pop
xlat
cli
or
jmp
mov
int
mov
push
ret
mov
mov
repnz
add
or
movsb
cmc
loopne
cmp
push
xor
sub
fbstp
and
fnstcw
je
je
inc
or
or
ret
cmpsl
push
and
xor
pop
jecxz
mov
cmp
inc
decl
mov
or
push
scas
ja
xor
mov
rcl
pop
dec
sbb
xor
dec
into
push
add
fidivrs
and
xlat
bound
mov
xor
mov
inc
fdiv
xlat
out
add
movsl
pop
gs
push
out
nop
aad
in
das
jae
jns
push
mov
push
xchg
addl
push
pusha
sbb
and
cmc
ret
movsl
xchg
add
xchg
dec
arpl
push
daa
mov
adc
mov
and
dec
mov
and
shrl
imul
fwait
mov
sbb
ja
aam
xchg
sub
fnstcw
cmp
or
sbb
jg
and
insb
cmc
leave
xchg
roll
push
adc
jb
pushf
jb
ljmp
nop
movsb
sub
popa
pop
add
mul
in
pop
mov
mov
mov
aam
sbb
mov
xchg
push
jnp
mov
dec
mov
jns
pop
jl
iret
jge
and
or
lret
int
hlt
lret
sahf
pop
mov
dec
roll
popf
insb
inc
mov
test
xor
push
add
jmp
push
mov
xchg
test
jle
out
and
cmpsl
xor
dec
aad
inc
jmp
adc
pop
adc
mov
jecxz
inc
mov
push
inc
outsb
lret
movsb
test
dec
pop
andb
cwtl
push
insl
cmp
out
cmpsl
mov
fsubrs
lahf
int
cmpsb
popa
pop
mov
out
mov
mov
mov
sub
push
mov
jne
mov
in
push
jmp
sti
fyl2x
and
out
jnp
xor
enter
cmp
ficomps
call
pop
in
popf
jmp
jnp
mov
xor
jg
adc
gs
lcall
sbb
pushf
xchg
mov
ss
mov
ret
xchg
test
leave
movsl
cmp
inc
xchg
sbb
scas
jge
les
mov
mov
fs
lea
dec
push
push
leave
cmp
test
sbb
outsl
or
jle
xor
fucomip
dec
xchg
lcall
scas
jmp
loop
fdivl
shl
or
sbb
pusha
xchg
mov
dec
loop
enter
das
or
ja
cmp
aam
xor
fwait
mov
imul
jne
fs
or
push
inc
inc
inc
xchg
or
loopne
xor
inc
adc
mov
mov
mov
and
sub
stos
rorb
xor
adc
dec
imul
negb
push
fdivs
push
add
adc
jge
clc
jmp
xchg
add
dec
popa
lds
loope
call
push
rolb
add
pop
lds
loope
push
and
imul
adc
dec
int3
pop
jb
in
mov
clc
inc
fidivl
mov
mov
test
jb
pushf
sti
inc
jle
clc
testl
mov
cmp
icebp
leave
dec
or
mov
addr16
lea
insb
pop
loop
mov
fsubrl
aam
pop
sbb
ds
arpl
in
xchg
push
and
loop
sbb
int3
ret
inc
testl
push
jo
iret
xchg
pop
call
jecxz
popf
sbb
shrl
mov
adc
scas
mov
loop
sbb
xor
aas
je
clc
mov
aas
add
loop
add
or
push
ret
cmpl
push
xor
cli
push
xchg
fiadds
out
pop
jecxz
insl
cmp
xchg
lea
cmp
jle
mov
js
mov
mov
in
cmp
mov
test
popf
mov
mov
scas
cmpl
stos
ret
cmp
adc
in
xor
cmp
lock
push
imul
adc
movsl
fists
sub
je
xchg
sti
shrl
or
pop
xchg
pop
sub
xchg
push
mov
fisubs
jmp
std
movsl
repnz
insb
xor
pop
out
imull
sub
mov
in
fisttpl
sub
ficomps
jo
iret
out
adc
fistpl
jb
pop
or
jmp
lods
lret
or
in
nop
ljmp
sub
test
rcrb
push
sbb
iret
lahf
pop
cltd
mov
data16
xchg
jmp
push
add
jae
repnz
mov
push
inc
pop
push
dec
cmc
xchg
test
jne
adc
mov
pop
jno
xor
lds
dec
lea
imul
mov
imul
lret
test
repnz
lods
push
jle
inc
jl
xchg
inc
mov
dec
dec
xor
fwait
cmpsl
dec
mov
or
jno
subb
push
mov
dec
cmpl
das
dec
divb
ss
bnd
shlb
sub
inc
mov
mov
clc
inc
mov
xor
xchg
jecxz
ja
ljmp
idivl
xchg
inc
add
ret
lcall
and
sarb
inc
pop
mov
mulb
xchg
sub
je
mov
sbb
add
xchg
aad
loop
sbb
pusha
add
fildll
icebp
jge
test
bextr
jge
cmp
dec
cmp
jmp
xchg
aam
cmpsl
sarb
pop
loop
ficompl
lret
fcmovb
cwtl
cs
imul
xor
xchg
outsb
out
lret
aam
rcrb
xor
sbb
icebp
push
scas
inc
stos
jae
jle
sar
pusha
add
sbb
and
mov
cltd
jno
rorb
and
insb
addr16
bound
pop
sbb
jno
in
mov
xchg
aas
jno
das
ja
add
pop
icebp
mov
in
cld
inc
fs
jbe
cmc
xchg
jo
adc
aaa
bswap
movsb
cmp
inc
jno
fistpll
push
push
cmp
dec
mov
or
push
lfence
fldt
sbbl
push
sub
daa
mov
repnz
mov
pop
mov
cs
cwtl
adc
jae
jb
add
test
fcmovnbe
or
add
imul
xor
rorb
and
mul
out
sub
jae
nop
fists
stos
mov
pop
andb
inc
pop
mov
ja
shll
xchg
jno
test
scas
aas
outsb
pushf
es
xlat
out
add
inc
sbb
dec
dec
pop
mov
mov
mov
mov
fisubrs
sbb
or
jbe
loopne
cmc
or
xchg
mov
mov
sub
push
mov
add
jb
xchg
fdivrs
not
or
aaa
push
xchg
repz
inc
push
addl
push
sar
in
xchg
out
sarl
aam
jmp
rolb
or
divl
and
sbb
ds
xchg
dec
fwait
mov
stc
push
xlat
mov
mov
xchg
pusha
les
cmp
sub
adc
sub
gs
into
fisttpll
popa
pop
lret
mov
push
fsubl
mov
push
mov
mov
aad
testb
stos
call
incb
inc
xor
push
addl
rcll
mov
lret
xor
aas
gs
pop
in
or
dec
icebp
lret
sub
xor
ja
ss
movsl
add
rep
cmp
jl
add
jns
lods
mov
cwtl
pop
dec
aaa
and
testb
lds
sbb
lea
jae
mov
rclb
jmp
add
roll
mov
jnp
add
xchg
je
xor
fsubl
lcall
jns
shll
in
xor
sbb
ds
dec
push
pop
data16
cld
ja
in
mov
inc
xor
mov
das
push
adc
or
jg
mov
sarb
mov
outsl
mov
in
mov
leave
and
cli
mov
pop
add
mov
xor
fsubrl
cmpsl
lock
nop
outsl
inc
addr16
loopne
mov
rcrl
push
jge
mov
pop
pop
leave
sbb
pop
pushf
sbb
filds
cmpsb
insb
ret
adc
mov
cld
int3
inc
adc
je
aas
sarl
sub
mov
gs
push
dec
rorb
mov
aaa
in
cwtl
push
cmp
sbb
pop
scas
dec
outsl
pop
jecxz
int
or
cmp
lods
adc
pop
pop
loope
xchg
sbb
popf
movsl
call
inc
sbb
jno
cmpb
js
and
fwait
jo
jg
xor
add
aad
scas
test
stos
pop
inc
cmpsb
testb
stc
repnz
orb
lret
pushf
xor
xor
popf
or
call
push
mov
push
mov
inc
sub
test
xchg
sbb
mov
lahf
in
xchg
push
mov
js
popa
gs
xor
stos
mov
xchg
xor
mov
sbb
xor
mov
xor
stc
out
imul
xor
mov
cmp
xchg
cli
repz
and
daa
sub
rcrb
icebp
in
mov
mov
pop
mov
adc
jb
or
push
mov
mov
cwtl
sub
mov
stos
xchg
loop
subb
andb
adc
dec
arpl
and
mov
je
cli
or
scas
out
adc
add
pop
push
cmp
mov
daa
mov
mov
test
inc
mov
add
stos
fmul
scas
and
push
mov
jg
not
loope
push
mov
xchg
or
jp
xchg
daa
test
cmp
pushf
pop
mov
or
pop
or
ficomps
in
xchg
push
notl
adc
pop
in
jp
imul
pop
cmc
stc
outsw
popf
das
pop
orb
sub
jge
sub
xchg
jne
xchg
add
jge
insb
repz
and
push
out
lods
repnz
shll
pushf
mov
jns
test
mov
cmp
mov
jne
je
xchg
add
mov
clc
pop
gs
cmpsb
mov
sbb
mov
dec
xlat
rorl
sbb
pop
mov
xor
mov
fbstp
stos
pop
jle
adcl
mov
push
push
test
mov
stos
jnp
rorl
pop
xor
push
or
idivl
cmpsl
xchg
aas
xchg
cwtl
push
imul
lret
or
cmp
xchg
stos
ss
dec
in
iret
adc
mov
loopne
jecxz
iret
negb
mov
repz
inc
mov
scas
push
repnz
shlb
inc
fs
jle
push
pop
fs
mov
push
inc
dec
int3
dec
test
push
xchg
push
insb
and
lods
and
sbb
jg
pushf
mov
push
mov
ss
aas
adc
mov
cmc
xchg
xor
stos
int3
push
dec
cmp
sub
rcr
push
xchg
add
push
icebp
shlb
dec
into
test
mov
cmpsb
xor
or
daa
and
jg
shlb
testl
lds
sbb
movsl
push
out
push
lretw
ficompl
sbb
shll
and
or
inc
mov
sbbb
push
push
jae
lcall
cld
lcall
ds
sub
adc
call
fmull
mov
xlat
cmp
je
mov
rcrl
stos
xor
sub
sarl
xor
or
bnd
into
insb
out
addl
push
flds
ficoms
push
lahf
push
mull
mov
ret
adc
lods
cwtl
pop
adc
add
add
cmpsb
sbb
mov
fistps
mov
sbb
filds
sub
ljmp
es
fistpll
fucomip
inc
rcrl
lret
inc
cs
repz
sub
jb
js
jbe
gs
jo
pop
ret
je
in
scas
jg
mov
pop
and
stos
repz
lock
das
adc
cmpl
fistpll
add
push
push
mov
sub
and
ret
dec
es
sbb
out
push
or
xor
cld
jbe
shrb
cld
and
push
cwtl
imul
dec
outsb
jae
ret
or
in
xchg
mov
je
fadds
xor
cmp
adc
pushl
out
mov
add
or
inc
shl
xchg
jg
pop
jns
test
aad
pop
push
push
out
cmp
loop
fs
shrb
or
fcmovb
xchg
mov
cwtl
mov
ss
stc
fmuls
and
jecxz
mov
dec
push
popf
push
ss
and
cmp
mov
comiss
mov
fmull
addr16
incb
mov
repz
sub
sub
pop
lock
mov
ljmp
jae
testl
or
insb
int
pop
push
push
dec
cmp
add
pushf
lea
xchg
pop
fnsetpm(287
pushf
push
cmp
sbb
dec
repz
int3
push
and
clts
jge
add
mov
xchg
fadd
add
cmp
imul
test
ss
cwtl
add
sbb
adc
jo
insl
int
subl
sbb
into
xor
cmp
or
imul
mov
or
pop
push
push
push
and
push
push
push
add
dec
out
sub
cmc
aaa
test
dec
add
mov
xchg
imul
adc
daa
aas
inc
sub
fisubrs
push
xor
nop
xchg
sar
adc
add
shlb
mov
sti
sbb
sbb
cwtl
cmp
xchg
adc
add
mov
mov
pop
mov
cld
inc
roll
sub
push
rcl
leave
repz
push
pop
outsl
incl
iret
mov
dec
int
adc
sahf
dec
jb
lret
scas
dec
jge
int3
loope
repz
add
sbb
stos
push
inc
mov
sbb
cwtl
mov
out
invd
ja
inc
fadds
mov
popf
ss
dec
sbb
jae
sarb
or
mov
jg
out
sbb
daa
xlat
lahf
lahf
sbb
jb
dec
sub
and
lcall
nop
clc
mov
pop
adc
mov
cmp
fadd
out
jmp
js
cld
jge
jecxz,pt
jb
push
pop
jne
sbb
pop
out
sub
jne
jecxz
adc
and
je
jbe
sub
xchg
insb
pusha
cmp
mov
ret
and
xor
gs
scas
sbb
and
divl
xchg
test
nop
pop
test
sbb
popa
lock
iret
jns
mov
push
outsl
cmp
add
addr16
jb
rorl
out
stos
cmp
movsb
cmp
js
insl
out
ds
sarl
shrb
inc
and
hlt
push
mov
cld
mov
fdivrl
or
hlt
fmul
cwtl
cmpsb
sbbl
xchg
test
xorb
xor
subl
ficoms
pop
dec
dec
jle
mov
mov
idivb
dec
and
bound
lret
pop
sbb
mov
sbb
jge
stos
pop
and
fwait
pop
jno
mov
mov
add
mov
xor
sbb
test
add
insb
mov
int3
je
xchg
lret
ficomps
pop
stc
aaa
nop
mov
fs
enter
jl
dec
btc
out
sbb
xor
std
sub
or
out
call
adc
mov
loope
aaa
negl
xor
mov
ret
sbb
push
ret
mov
xor
xor
mov
mov
scas
cmp
ds
mov
ret
dec
cmpsb
add
stc
xlat
cmp
fmuls
adc
rolb
pusha
sbb
in
fnsave
push
push
push
fwait
loop
fidivrs
xchg
dec
subb
rolb
test
clc
push
xor
xor
adc
loop
jno
jg
repz
sub
adc
in
sarl
insl
lea
xchg
psubusw
sbb
pushf
aam
xor
imul
aaa
call
sbb
cmp
test
orl
pop
inc
mov
cmp
les
imul
bound
inc
rcrb
xor
daa
xor
dec
mov
xchg
sarb
retw
aam
arpl
ret
cmp
test
sbb
sub
movsl
push
daa
jle
fistpll
mov
adcb
jno,pt
adc
iret
push
imul
push
dec
add
out
push
stos
out
adc
mov
cmc
push
dec
dec
iret
mov
call
add
jle
mov
mov
loop
cmpsl
xor
or
daa
nop
push
pop
sub
loope
sub
xchg
xchg
lods
dec
fs
gs
int
jne
inc
outsb
and
dec
mov
jne
int3
xchg
jns
jo
test
mov
jb
mov
or
mov
shll
call
inc
xor
incb
adc
cmpsl
imul
mov
and
ss
or
mov
push
push
cmp
jmp
les
add
add
cmpsl
push
xor
lods
incb
cmp
je
icebp
xchg
xchg
hlt
aad
pop
mov
les
jno
sub
aaa
adc
dec
and
dec
scas
iret
mov
fcmovbe
pop
cmp
mov
push
cmpsl
icebp
rorl
xchg
lret
add
pusha
test
mov
mov
cld
mov
add
and
test
add
inc
popa
add
test
sub
repz
sbb
fs
fwait
xor
xor
mov
sub
enter
lret
mov
inc
mov
notb
add
arpl
in
fisttps
xor
lcall
cs
adc
xchg
cmpsl
and
push
mov
icebp
sar
das
and
test
jmp
adc
push
push
negl
dec
mov
stc
cmp
shl
sub
jge
dec
flds
pop
xor
sbb
insb
pop
enter
mov
mov
xchg
mov
mov
pop
push
xor
cmp
mov
out
fiadds
je
sub
lods
sahf
subb
shrb
movsl
inc
inc
xchg
cltd
loopne
jmp
jne
pusha
fldl
aas
mov
pop
loop
ja
popa
arpl
xor
xchg
sbb
xchg
mov
sub
gs
adc
xchg
pushf
bound
leave
push
test
jne
push
clc
jge
sbb
jnp
aas
cmp
imul
jae
mov
lcall
add
xchg
push
mov
in
sbb
add
pop
aad
idivb
lcall
xor
int
xor
ret
cmp
add
or
push
adc
add
sar
sbb
cli
pusha
xor
cmpsw
dec
lret
shrb
pop
or
push
sub
pop
je
cmp
xor
lea
inc
shrb
mov
mov
xchg
cld
adc
ret
movsl
ret
mov
mov
pop
fldt
xchg
shlb
jl
sar
push
xchg
push
mov
imul
addr16
fdiv
push
cs
sub
sbb
and
sarb
outsl
dec
imull
mov
push
adc
dec
sbb
fcmovnu
lahf
cmp
out
cwtl
pop
xbegin
sti
xor
test
sub
pop
lahf
leave
shr
jg
pusha
sbb
cmp
int3
jle
and
jp
cld
pop
inc
sbb
mov
jecxz
mov
ret
push
push
add
mov
inc
imul
dec
fsubs
add
fists
dec
jns
inc
ficoms
pop
mov
and
fwait
pop
aam
push
out
jp
adc
sub
test
sub
or
pop
fs
ljmp
dec
cmpsb
cmp
jg
insb
jno
jnp
cwtl
lods
dec
lcall
and
pop
lret
cmp
mov
mov
xchg
dec
mov
or
and
ljmp
inc
or
mov
adc
cmp
xor
xor
dec
stos
ret
fs
mov
jge
xchg
bnd
lret
popf
nop
fcmovnu
mov
cli
adc
push
call
iret
cmp
or
in
lcall
or
sbb
adc
icebp
and
fnstcw
sub
adcl
cmp
sahf
xor
push
jl
dec
sbb
and
jg
ret
repnz
hlt
outsb
int3
lock
repz
add
mov
pop
mov
push
aad
int
sar
arpl
aad
sbb
aas
push
rcrb
add
cmc
hlt
push
push
addb
jno
push
and
cmpsl
inc
adc
xchg
mov
cmc
and
fldl
lcall
or
and
aas
push
cmp
fistpll
mov
sahf
outsb
fisubrl
cwtl
pushf
sbb
add
sbb
inc
xor
js
sbb
push
xchg
sbb
cmp
xlat
cmp
out
inc
aad
sarl
imul
std
mov
insb
mov
leave
int3
inc
stos
xchg
mov
roll
lods
jge
cmpsl
add
rol
pop
xchg
jle
sbb
mov
mov
push
inc
xchg
and
fs
iret
clc
jae
fstpt
loope
and
sarl
test
les
fimuls
and
sbb
lds
cmp
shl
repnz
jae
jl
stos
cmp
and
aad
imul
fsts
add
add
mov
jle
dec
stc
adc
adc
adc
push
ss
jnp
push
push
cmp
or
lahf
inc
fmul
mov
cli
jo
je
sub
add
addr16
push
xor
dec
push
enter
mov
ds
imul
ljmp
jg
divb
mov
test
fidivrl
inc
and
xor
jg
loope
mov
movsb
int
in
or
mov
lods
mov
leave
add
or
das
inc
inc
push
dec
clc
ret
push
gs
test
cmpsl
popf
mov
inc
pop
js
xor
lds
out
shll
xor
loope
pop
aam
iret
roll
in
fildll
das
mov
in
push
dec
adcb
fstpl
xchg
xorb
sbb
test
push
decb
in
shlb
mov
jbe
shll
pop
in
push
jp
ret
mov
repnz
cltd
mov
rol
in
fists
jnp
cmp
aas
and
int
pushf
adc
into
cmc
or
mov
fwait
pop
pop
xor
push
jle
mov
sahf
add
lods
inc
iret
shl
ja
pop
push
aad
and
lret
cltd
cltd
sbb
mov
pop
out
and
lret
mov
xor
test
mov
pusha
inc
int3
mov
push
push
sub
dec
lcall
repnz
sti
xchg
test
adc
mov
out
cmp
xchg
mov
nop
mov
push
gs
sbb
adc
cwtl
and
cld
add
and
lahf
and
arpl
xchg
into
faddl
xor
ss
mov
jecxz
xchg
cmp
not
jbe
and
sbbl
cmp
stc
mov
insl
push
pop
lods
or
mov
push
mov
mov
and
out
outsl
stos
push
daa
inc
lret
test
mov
adc
mov
hlt
jp
mov
mov
mov
and
mov
push
ret
rorb
addl
add
addr16
addb
cmp
stos
rorb
adcb
gs
lock
mov
lea
outsb
jge
mov
xchg
mov
add
push
das
aaa
cmpsl
and
aas
push
mov
mov
adc
push
outsb
stos
xlat
sub
lods
cmpb
xlat
ds
jno
jecxz
mov
push
sub
sub
rol
mov
sbb
orl
sub
scas
cmp
jmp
cli
mov
repz
xchg
inc
scas
sbb
stc
out
jo
sbb
push
cli
xor
and
add
sbb
and
rcll
lods
mov
jl
pop
jne
xor
lret
and
cmp
jmp
in
add
dec
sarl
sub
cmp
clc
lret
xadd
xchg
cmpsl
xchg
notb
lods
mov
adc
lret
out
dec
mov
mov
scas
lea
rorb
jecxz
sbb
and
lcall
push
pop
xchg
cmpb
int3
shrb
ret
xor
int3
mov
std
push
dec
push
pusha
push
jp
cmp
in
xlat
lahf
push
je
fwait
xchg
jns
cmpsb
push
mov
pop
add
imul
scas
mov
dec
jne
push
adc
fstpl
push
ja
lcall
jp
adc
adc
sub
andb
shl
sub
stos
cld
pop
pop
mov
sahf
and
pop
outsb
aam
mov
cmpsl
leave
stos
pushf
or
xor
inc
lcall
subl
push
es
lods
xor
dec
jae
inc
jle
inc
nop
cmp
out
mov
dec
pop
xchg
out
sub
jle
push
pop
lock
sbb
fwait
push
dec
stos
add
insl
adc
or
loope
push
jg
xor
xor
pop
adc
pop
in
add
rclb
mov
sub
loop
std
push
data16
aas
mov
adc
push
iret
and
sub
jp
mov
pushf
insb
sub
mov
jns
push
jmp
je
sub
sub
cmovl
sbb
push
fisubrs
and
fcoml
in
inc
hlt
int3
adc
movsb
push
popf
stos
dec
jecxz
push
cltd
xchg
jae
dec
sbb
js
cmc
mov
mov
jecxz
pop
ret
cmp
and
fcomps
js
in
stc
mov
pop
and
adc
gs
push
fildl
xchg
aas
iret
out
enter
lds
pop
es
imul
nop
pop
mov
or
rcrb
ret
nop
mov
ss
and
sbb
push
sbb
aam
push
mull
xlat
cmp
inc
xchg
jb
outsl
ret
fcoms
popf
int
cmp
inc
icebp
mov
push
xchg
cmc
sbb
xor
inc
mov
js
test
nop
lods
mov
inc
mov
cs
mov
das
xchg
popa
scas
xor
cmp
sub
addr16
in
or
lods
stc
out
ja
mov
sahf
jp
hlt
sbb
insb
sbb
cmpsl
inc
dec
ret
mov
imul
mov
call
nop
in
or
nop
cmp
jg
pusha
cld
mov
pop
ss
mov
aaa
movsb
insb
fs
inc
aaa
mov
std
fdivr
adc
mov
or
pop
push
mov
push
pop
iret
lcall
ffree
dec
imul
push
outsb
lret
jno
jg
enter
or
sub
lods
cmp
movsb
incb
inc
jg
cmp
ficoml
test
mov
jne
fnstenv
mov
shlb
xor
inc
pop
adcb
xor
or
fcomps
xchg
mov
ret
lret
mov
mov
pop
addr16
outsb
inc
leave
or
inc
sbb
add
sarb
imul
xor
loope
mov
mov
and
and
call
mov
jle
test
dec
xchg
sub
push
push
das
mov
fldcw
and
xlat
hlt
sahf
fwait
rolb
adc
testb
shlb
fnstcw
lods
scas
loop
sbbb
out
pusha
mov
rol
and
icebp
inc
sbb
stc
int
jge
arpl
sbb
and
test
adc
faddl
push
sub
pop
jmp
test
inc
jno
sti
fcoms
cmp
shlb
test
mov
test
clc
outsl
and
sbb
ficomps
rcrl
mov
pop
xor
dec
clc
pop
fisubl
vaddsd
subb
dec
lret
or
adc
scas
leave
aad
xchg
xor
fdiv
mov
test
ljmp
movsl
inc
ljmp
dec
dec
mov
insl
andl
inc
mov
sub
int
adc
jecxz
push
clc
xchg
mov
push
imul
nop
fcomps
out
sbb
cmp
sbb
cmp
pop
xor
out
jecxz
out
cmp
inc
int
push
lahf
outsb
jb
push
in
lods
jp
jno
lret
lds
sbb
mov
mov
aaa
mov
andl
inc
jle
insl
push
dec
cmp
and
je
pop
hlt
cld
imul
and
push
ss
inc
imul
es
mov
rclb
movsl
xchg
cmp
ja
std
xor
int3
jmp
jae
jge
aam
lahf
fcompl
mov
mov
pop
jne
pop
mov
mov
enter
dec
sahf
pop
sbb
orb
xchg
addr16
imull
sub
hlt
movsb
or
loopne
add
fisubrs
ja
adc
dec
vpaddw
pusha
sub
ds
jp
mov
xor
incl
mov
push
lds
cmpsb
pop
andl
adc
iret
ja
ja
mov
stc
xor
mov
inc
mov
xchg
in
enter
sbb
fbstp
jg
movsl
out
andb
xor
mov
jne
cmc
fmull
fcoml
sahf
test
es
nop
inc
movsb
inc
mov
int
xor
ss
jae
je
xchg
aad
xchg
movsl
pop
add
push
lret
add
sahf
mov
loope
mov
mov
push
xor
xchg
push
mov
out
push
pusha
scas
loopne
fnstcw
push
outsb
loope
mov
cwtl
inc
inc
jg
fnstcw
adc
shrb
fstl
das
mov
xor
push
popf
dec
scas
sbb
test
add
ljmp
push
xor
lock
icebp
dec
sub
fs
sub
mov
lret
dec
out
out
inc
sbb
ja
insb
or
imul
push
xor
xchg
xchg
push
stos
in
test
scas
xchg
dec
fisttpll
das
fsubl
in
mov
cmp
and
jecxz
push
cwtl
ss
cmpsb
xchg
mov
pop
cmp
dec
dec
mov
mov
std
sbb
out
in
scas
gs
lahf
sbb
push
pop
ljmp
repnz
push
daa
push
mov
cs
fcmovb
push
mov
jns
outsb
pop
inc
insl
stos
push
nop
shlb
fstl
lea
mov
adc
sbb
add
insb
loopne
xor
mov
pop
cmp
lahf
cs
xorb
std
mov
rcl
test
sub
in
fisubl
or
aam
adc
inc
sbb
push
movl
xor
insl
adc
push
repz
sub
push
xor
jns
mov
dec
pop
enter
enter
push
sbb
sub
jmp
leave
adc
test
mov
xchg
jne
inc
push
out
inc
subl
mov
mov
jno
pop
daa
mov
out
mov
push
movsb
icebp
sub
inc
jle
test
imul
inc
ja
fcmovnu
mov
cmc
push
cmpsb
adc
adc
pop
adc
mov
fnstsw
pop
orl
arpl
js
js
js
adc
outsb
sbb
cmpsl
fsubrs
xchg
mov
xchg
call
stos
idiv
aas
push
cmp
gs
pop
out
stc
repz
jmp
and
mov
nop
imul
arpl
jg
dec
xor
les
pop
mov
cs
push
in
mov
inc
xlat
push
fisttpll
imul
lea
jo
insl
popa
scas
mov
lcall
into
mov
pop
add
inc
aas
inc
mov
les
bound
sub
inc
das
inc
sub
jns
cmp
mov
mov
cmp
aad
enter
mov
mov
ss
sub
into
mov
cltd
dec
cltd
andb
pop
sub
in
out
icebp
cmp
and
shll
das
or
dec
fnstcw
lock
fadd
dec
add
test
jo
mov
mov
pushf
repz
call
outsb
cmp
sbb
pop
adc
test
sbbb
jo
lret
jns
test
adc
sub
inc
sahf
sub
pushfw
ljmp
cltd
sti
inc
addr16
cmc
lock
pusha
or
adcb
mov
xor
xchg
mov
inc
pop
xor
gs
mov
add
rcl
sahf
es
out
popa
pop
pop
jo
enter
daa
xchg
es
lahf
mov
jo
outsb
push
add
fcomip
inc
jbe
pop
xor
mov
aam
jmp
out
loopne
insl
mov
lcall
inc
add
push
mov
and
adc
dec
popa
jno
dec
fldl
je
jge
into
pop
scas
fsubrs
sbb
andb
add
aas
and
in
loop
cmp
add
fimull
push
addr16
ds
inc
mov
xor
cmp
mov
out
adc
and
fnstenv
pop
xor
rcrb
or
outsl
and
loope
arpl
xchg
lods
jl
ficoms
lahf
pop
jno
pop
imul
repz
jno
adc
fisubrl
cmp
repz
nop
je
leave
mov
aaa
inc
jg
and
inc
mov
ja
cmpl
jae
sarb
addr16
dec
jne
pop
clc
add
in
push
and
mov
ljmp
adc
mov
cmp
loopne
outsl
out
jp
negl
bound
cmpl
data16
adc
out
or
dec
test
pop
shrl
repz
out
ficomps
cld
cmp
sub
shrb
push
adc
pop
mov
icebp
cmp
stos
aaa
push
cmp
in
scas
jne
inc
fsubl
fdivrs
cmp
or
mov
and
aas
cltd
and
mov
into
jne
mov
mov
enter
nop
loope
roll
mulb
pop
jp
add
dec
loopne
and
cmp
adc
loopne
in
mov
pushf
cmp
or
cmp
cmp
jl
jmp
hlt
loope
push
sub
mov
push
push
cmp
pop
adc
es
ja
xchg
iret
addb
mov
cli
mov
and
inc
pop
mov
pop
xor
out
xor
je
push
xor
mov
push
cmp
push
mov
xchg
icebp
das
pop
sbb
mov
xchg
lods
test
adc
cmc
xchg
repz
cmp
mov
sub
push
mov
cmc
or
rclb
clc
test
loopne
arpl
stc
pminsw
dec
arpl
mov
cmp
std
fdiv
cld
lods
and
dec
jmp
sbbl
lcall
pop
rorl
ds
xchg
jle
repnz
fsubs
sbb
xchg
lret
cmp
push
in
sub
push
loope
pop
ffreep
fbld
aam
sub
push
inc
push
repz
mov
nop
in
xlat
mov
jo
mov
fs
pop
and
xor
dec
dec
stc
orl
mov
pop
sub
bound
lea
sbb
fucomp
jb
sub
cmp
cli
mov
stc
jns
push
lea
leave
test
pop
leave
js
inc
mov
pop
cmp
out
fwait
int
pop
cmc
neg
jmp
insb
dec
xor
pop
imul
adc
movsb
testl
adc
jecxz
mov
dec
xchg
in
sub
fs
push
roll
aad
out
lret
outsl
lea
repnz
pop
xchg
xor
out
push
fstp
add
push
adc
cli
mov
sbb
mov
mov
add
rcrb
or
sahf
das
cmp
dec
subl
les
add
mov
rclb
lcall
push
loop
lret
xor
popa
nop
test
out
sbb
rcrl
mov
sub
shrl
aaa
sub
dec
mov
shrl
aam
outsl
loopne
push
sarb
inc
test
push
lret
aaa
mov
xor
fmul
dec
sbb
daa
xlat
or
int
xchg
pop
dec
fsubs
fs
cmpl
imul
dec
aad
xor
pushf
lods
mov
sub
mov
xor
test
mov
mov
daa
mov
data16
dec
sbb
push
or
or
add
fistl
gs
sti
dec
inc
es
mov
sub
sahf
pop
add
fwait
push
dec
push
je
dec
popa
xchg
push
push
dec
mov
inc
jae
sub
jl
xchg
stos
xor
jnp
jnp
cwtl
xor
jmp
imul
scas
mov
mov
loopne
or
scas
inc
jp
xor
jg
hlt
push
cmc
in
cs
das
inc
popf
and
ljmp
pusha
inc
jae
push
repz
fldlg2
lret
dec
into
repnz
imul
add
mov
not
dec
add
movsl
inc
xchg
sbb
cmp
mov
test
dec
loop
das
divb
loop
loopne
and
mov
pop
push
movsl
in
out
inc
aam
imul
push
arpl
cltd
ret
xor
addr16
mov
loope
cmp
inc
cmp
pop
cmpsb
daa
and
shll
xchg
lea
sbb
sub
das
ds
cmpb
stos
xchg
pop
xor
xlat
jne
mov
xor
mov
lds
mov
mov
aas
sti
cmp
push
push
js
fisttpll
jge
ljmp
out
sub
lret
jb
fs
jmp
test
ja
adc
loop
out
xchg
xor
cltd
not
lret
adc
adc
outsb
jp
jbe
mov
jl
inc
pop
xchg
leave
xor
and
jg
fbld
fidivl
mov
sub
stos
lock
es
lahf
pop
imul
mov
or
cmp
fwait
mov
and
xlat
outsb
sub
movsl
inc
cltd
mov
pop
push
in
sarb
pop
cmp
cmp
test
std
test
fcmovbe
adc
cmp
mov
mov
imul
and
lock
xlat
ret
hlt
inc
jecxz
std
adc
das
push
mov
mov
in
mov
dec
xor
xchg
repz
and
push
adc
inc
adc
xor
outsl
add
int
inc
ret
jecxz
mov
jg
cs
adc
movsl
mov
lock
fcos
cs
fadds
push
inc
mov
rcrl
cmp
inc
sub
cmp
cmp
loopne
and
clc
inc
out
sbb
call
sbb
xchg
cli
data16
xchg
test
adc
mov
nop
aaa
sbb
leave
mov
outsb
xchg
xchg
ret
push
cmp
dec
mov
fldenv
scas
mov
and
sub
mov
pop
push
sbb
dec
ljmp
mov
fwait
cmpsb
dec
push
insb
ret
pop
push
mov
push
ljmp
rorl
dec
mov
dec
cmp
pop
jle
xlat
push
test
ficoms
std
sbb
notb
mov
mov
pop
addb
test
sub
add
jge
jb
fiaddl
repnz
in
out
sbb
mov
add
in
xchg
xchg
cwtl
pop
jmp
or
inc
subb
movsb
mov
movsl
imul
add
pop
stos
imul
mov
mov
pop
push
adc
int3
pop
add
popa
rolb
jecxz
imul
push
cli
pop
stc
adc
adc
ja
inc
fisubl
xor
xor
das
out
daa
mov
ss
mov
inc
jge
pop
mov
or
jns
addr16
xchg
push
jle
jbe
fistpll
push
adc
jge
dec
pusha
loopne
fdivs
sub
test
cmp
adc
outsb
sbb
jle
cli
and
jns
cltd
shl
dec
nop
repz
mov
add
cld
cltd
iret
das
loope
and
rclb
orl
sahf
pop
jg
lds
fdivrl
push
push
xchg
aad
push
arpl
jno
xchg
push
insl
mov
xchg
pop
inc
in
mov
or
lods
mov
dec
or
icebp
outsl
xchg
in
hlt
mov
jecxz
add
cmp
leave
dec
idiv
mov
and
cmp
fisttpll
jmp
pop
jns
xor
pop
hlt
lods
imul
cli
int3
push
outsl
rcl
mov
sub
mov
test
or
es
add
pop
mov
sahf
lahf
dec
and
push
lret
imul
mov
pop
pop
jecxz
push
ficompl
push
cmc
dec
mov
cmp
pop
jbe
in
outsl
xchg
fcmovnbe
fisubrl
mov
jnp
mov
or
inc
repnz
andl
loopne
mov
adc
ja
mov
addl
jae
push
mov
dec
xchg
icebp
nop
inc
or
pop
movb
aaa
aas
les
jle
dec
and
xchg
stos
sbb
dec
jle
dec
adc
cmp
sahf
ss
adc
xchg
mov
mov
add
aas
insl
fs
cmpb
push
lods
dec
jmp
inc
dec
mov
shrb
adc
or
hlt
xchg
or
call
mov
inc
mov
and
xchg
inc
xor
push
mov
jbe
imul
cmp
adc
or
packssdw
inc
jg
repz
in
inc
dec
pop
mov
mov
adc
jns
or
pusha
mov
push
xchg
add
lcall
sub
jns
out
inc
push
push
mov
leave
orl
xor
xor
fisubrs
mov
dec
add
add
sub
shlb
stc
cmp
fucomi
scas
lret
faddl
flds
lret
xor
or
dec
lods
jmp
insl
xchg
add
push
ret
stc
mov
and
cmp
mov
inc
push
lahf
ja
pop
lret
jae
dec
mulb
mov
leave
adc
enter
and
xchg
data16
fldl
int
imul
icebp
out
sbb
cmc
out
fincstp
mov
jbe
jno
js
lahf
leave
cli
rcll
out
repnz
das
add
jl
jge
xor
adc
push
jg
jmp
jl
xchg
out
sbb
sahf
push
ljmp
push
adc
mov
ret
in
loope
dec
push
push
movb
xor
push
sub
adc
jecxz
inc
fdivs
mov
fisttpll
jmp
xchg
jnp
inc
loopne
cmpsb
shll
jge
adc
push
hlt
mov
mov
cmp
cmp
push
fwait
call
in
xchg
mov
icebp
and
xchg
adc
xlat
mov
cld
mov
sub
jge
or
adc
frstor
dec
dec
imul
push
pushf
outsl
push
outsb
and
jnp
pop
loope
scas
xor
xor
inc
jne
mov
dec
sub
lcall
lahf
iret
clc
sub
mov
aas
lock
aaa
or
mov
popf
popa
rcrb
filds
loop
stos
or
mov
cmpsb
cltd
arpl
scas
stos
ljmp
pop
inc
sub
mov
inc
push
xchg
ret
push
call
dec
xor
stos
mov
js
dec
daa
jmp
xor
mov
cmp
in
push
adc
mov
daa
fs
nop
add
fwait
cmc
loope
push
mov
lret
mov
out
cmpsb
mov
out
out
xchg
cmpl
aam
mov
lcall
mov
jle
shll
xor
xlat
subl
pop
hlt
lret
bound
and
dec
push
int
inc
push
jp
scas
clc
adc
or
lea
mov
pushf
mov
in
ljmp
dec
xchg
pop
test
repz
xchg
data16
mov
lods
repz
sub
sbb
inc
jecxz
xor
sub
inc
push
xor
add
pop
mov
push
mov
shl
add
lock
insb
push
je
nop
scas
jmp
lds
cmp
int3
or
icebp
cs
jne
in
insb
jb
pop
sbb
sub
or
inc
insl
or
aaa
fs
cmp
lock
pop
xchg
cmp
nop
push
xchg
jle
cmp
fidivrs
orb
xor
add
xchg
lds
lods
mov
and
dec
data16
loopne
shlb
inc
cmc
adc
insl
hlt
jge
fistpll
aad
mov
test
mov
dec
sub
jle
push
and
aam
cmpl
push
add
out
lret
mov
fsubr
mov
in
fs
xchg
out
xlat
stos
mov
into
lret
sbb
push
jle
orb
pop
cmc
idiv
lahf
insl
sarb
xchg
loopne
push
out
test
sbb
cmc
dec
mov
cltd
fiaddl
pop
or
or
sbb
jmp
out
sbb
dec
stos
lret
pop
aaa
leave
mov
xor
pushf
cmp
add
fnstcw
xor
sub
das
cwtl
dec
fs
jle
cmp
mov
out
repnz
sub
xor
std
sbb
mov
fsubrl
jecxz
jns
mov
loope
jp
and
in
out
mov
jae
cltd
sbb
mov
xlat
dec
mov
mov
fists
lret
je
push
lds
cmp
jl
test
das
push
clc
inc
loop
jg
je
mov
push
data16
inc
loop
or
jl
lock
xchg
fs
cmp
cvtps2pd
ss
jge
adc
sub
iret
sub
jge
mov
xor
mov
repz
out
cli
aaa
cmp
push
xor
scas
jnp
xchg
add
adc
fdivrl
rol
and
and
ret
cs
lods
dec
jg
lcall
add
mov
xchg
cmpsb
pop
cmovle
std
adc
xor
jno
or
adc
ds
imul
jbe
scas
repnz
or
cmp
mov
leave
in
or
cmp
mov
push
push
jae
cmp
or
or
xlat
pop
xchg
mov
xlat
inc
dec
subb
int
push
data16
ss
and
mov
dec
mov
mov
ljmp
pop
mov
push
cltd
ljmp
mov
test
fs
dec
mov
sbb
xchg
lods
dec
shll
scas
subl
xchg
mov
cltd
or
sub
mov
decb
jg
shrb
ds
ljmp
jo
mov
scas
jbe
cld
fcmovnu
adc
push
jl
scas
mov
stos
pop
out
in
inc
cmp
lods
inc
mov
jb
fdivrl
shl
jle
or
xchg
jb
xorb
sub
aad
jno
and
mov
lret
scas
mov
mov
hlt
adc
mov
clc
push
int
cmp
test
popf
xor
push
mov
iret
sti
xor
jnp
push
inc
xor
sub
jns
sbb
dec
sbb
mov
pop
loope
lods
inc
lods
lcall
mov
adc
cmc
xor
bound
jb
fldlg2
mov
xor
mov
and
scas
mov
gs
test
filds
xchg
and
cmpsb
xchg
xchg
es
pop
xchg
int
xor
inc
sub
jno
pop
aad
dec
xchg
dec
dec
fidivrs
jns
fmul
ds
test
ss
loop
out
push
jno
inc
mov
je
rorb
ljmp
dec
push
mov
push
lea
push
pushf
or
inc
movsb
mov
cwtl
mov
add
clc
ss
cmpb
lods
inc
xor
in
jmp
dec
int
and
jmp
mov
into
or
mov
or
rorl
xchg
push
jno
pop
pop
cwtl
loope
fiadds
xchg
mov
popa
sahf
je
dec
mov
stc
loopne
icebp
adc
adc
jg
ljmp
sub
or
mov
ja
lds
repz
je
icebp
repnz
lods
ds
mov
jns
cmc
popf
lds
clc
or
mov
pop
jg
jo
sub
jne
call
adc
push
mov
loopne
repz
push
ljmp
and
cmc
jne
iret
leave
js
cli
mov
lret
scas
cmpsl
add
jnp
add
stos
push
and
shll
aas
mov
repnz
jns
adc
cmpsl
sub
pop
ja
test
inc
and
jo
mov
sbb
adc
testl
jl
sbb
push
push
imul
dec
mov
jle
gs
jne
popf
cs
jne
sub
enter
inc
andl
sub
out
lcall
mov
and
subl
jbe
add
dec
insl
cmp
lods
mov
mov
push
mov
xchg
pop
cmp
mov
cmp
into
xlat
jecxz
mov
inc
jno
mov
mov
mov
mov
xor
pop
pop
aad
dec
push
rcrl
dec
ficoms
lea
test
mov
cmpsb
test
mov
les
mov
fdivrp
adcl
jg
jnp
sub
pop
daa
pop
cmpsl
jae
fmul
xchg
dec
mov
daa
or
xchg
out
xchg
in
sbb
dec
daa
sbb
lahf
xor
js
enter
rclb
sub
into
xor
jmp
fwait
dec
mov
inc
test
fnsave
lret
daa
add
imul
rorl
add
inc
mov
jle
jg
pop
xor
and
movsb
or
cmp
mov
push
repz
cltd
fiadds
xor
hlt
testb
cli
fwait
and
push
aad
fildl
loopne
cmp
rcrl
popl
push
fisttps
and
cmpsb
cmpb
cwtl
je
push
popf
addr16
imul
repnz
pop
enter
mov
and
call
mov
push
push
adc
inc
call
jecxz
icebp
add
cmpsb
push
cmpsl
sub
inc
ret
mov
mov
orl
paddb
test
inc
movq
xor
xor
test
lds
xor
push
pop
inc
pop
and
sbb
and
fcmovb
stos
sub
push
fdivs
cld
les
pop
mov
out
mov
jp
jno
repz
pop
inc
inc
adc
shrl
in
sbb
stos
ds
fwait
lret
mov
push
rcrb
int3
outsb
call
lods
fcompl
xchg
adcl
dec
mov
xor
ss
btc
pop
inc
mov
push
imul
lods
ret
adc
jp
pusha
adc
mov
dec
lahf
addr16
int3
jns
das
mov
divl
cwtl
push
popa
int
testb
cmp
decl
ret
sub
dec
sti
ret
jo
and
xchg
stc
dec
stos
das
mov
les
cli
mov
aam
rcrb
movsl
cmp
in
adc
insb
les
in
pusha
out
out
and
and
jecxz
and
fnstenv
jne
jp
cmpsb
data16
in
out
stc
push
push
cli
lea
push
adc
lea
into
pop
mov
jns
and
cltd
ljmp
stos
xorl
ja
dec
popf
in
sub
push
je
loopne
orl
sbb
add
rcrl
and
cli
addr16
dec
or
inc
pop
stos
sahf
mov
and
xor
mov
fistl
sub
xor
shlb
adc
xchg
mov
add
cmpsl
xorl
addr16
cmp
in
out
xor
test
lahf
inc
test
and
sarb
and
xlat
adc
mov
stos
out
mov
push
es
add
les
cmp
icebp
shl
es
push
jnp
jp
pusha
sub
outsl
addl
repz
fsts
inc
dec
lret
mov
cwtl
ror
lods
add
mov
movb
xchg
stos
lcall
cld
xor
je
js
imul
test
xchg
ja
aad
sbb
lock
jl
cli
xchg
jle
out
sbb
jnp
mov
loopne
and
in
and
sub
and
push
mov
sub
push
daa
mov
sbb
gs
adcb
mov
stos
scas
push
aaa
mov
out
popa
lahf
ret
sbb
and
adc
pmullw
shlb
adc
and
lret
pop
into
mov
nop
xchg
dec
sti
ss
sbb
dec
dec
jb
insb
mov
in
push
sbb
fdivr
out
push
and
lret
pushl
mov
out
or
popa
and
cmp
jmp
jb
js
mov
push
test
pop
ds
inc
push
cmpsb
dec
out
inc
add
mov
sub
inc
add
mov
mov
adc
jle
ret
gs
in
push
sbb
int
insb
ficompl
xchg
leave
pop
and
data16
ja
lea
cld
out
imul
lods
cmp
push
pop
push
call
sarb
pusha
test
test
inc
push
dec
stc
call
adc
rcll
test
aaa
enter
sbb
jns
mov
mov
inc
sbb
aaa
add
and
daa
dec
add
icebp
lods
xor
pop
mov
lcall
pop
jnp
enter
cmp
imul
rol
std
push
icebp
call
movb
pop
lea
xchg
jge
repnz
lds
addr16
in
test
jl
jo
into
mov
sub
xor
shlb
fnstenv
mov
xchg
call
mov
stos
cltd
push
cli
push
insb
lea
fimull
fcom
push
call
xor
in
icebp
inc
mov
ja
inc
push
int3
nop
cwtl
pop
mov
sub
jmp
sub
je
or
andl
stc
enter
add
mov
cmovge
adc
ja
inc
mov
aad
clc
jge
mov
sar
mov
xor
ds
push
xchg
ret
out
sub
out
scas
ljmp
and
adc
xor
loopne
das
insl
mov
js
mov
xchg
dec
sbb
mov
fbld
out
and
dec
pop
adc
ret
or
in
test
and
inc
cwtl
sub
push
push
in
adc
call
mov
jne
jle
lea
or
mov
test
adc
stc
loop
jmp
pushl
inc
mov
push
lods
cmc
ja
out
outsb
jne
jp
test
mov
xor
clc
jp
pop
das
std
jmp
mov
xor
sub
xchg
cmp
jg
sbb
movsb
sbb
mov
jno
loopne
jno
sbb
lret
inc
leave
push
jnp
into
pop
ljmp
inc
sbb
pop
fsubrs
repz
sarl
pop
fistpl
sbb
lea
sbb
loope
jecxz,pn
mov
cmp
sub
pop
xor
outsl
stos
lcall
fsubrl
hlt
scas
mov
cmp
roll
xorl
aad
xchg
call
or
jnp
pop
jmp
or
xor
negb
mov
into
inc
push
xor
fdivrp
or
mov
xor
pop
cmpsl
out
jmp
dec
inc
xor
mov
xchg
cmp
jmp
jno
xchg
fmull
repz
pop
arpl
jbe
in
iret
mov
mov
sbb
push
fsubrs
movsb
repnz
movsb
testb
push
std
inc
cmp
cld
imul
mov
sbb
stos
in
adc
sub
mov
mov
outsb
rcrb
jge
test
jne
out
fwait
aaa
jecxz
idivl
ds
movsb
popa
cmpsb
xchg
stos
jecxz
inc
cwtl
inc
lcall
sbb
xchg
scas
add
jno
pop
push
in
test
js
sti
std
lret
push
in
adc
aam
add
adc
aad
push
inc
test
mov
inc
or
lcall
hlt
ja
mov
inc
int
test
push
adc
mov
mov
std
int3
cli
xchg
stos
enter
jp
jmp
pop
les
add
dec
jmp
sbb
jb
scas
fldenv
dec
mov
add
addb
jo
or
mov
jge
adc
mulb
inc
shlb
jge
rcll
mov
pop
in
push
xor
cwtl
xor
jbe
js
test
adc
aam
lods
add
pop
jl
or
adc
call
push
xchg
stc
lods
test
cmp
aad
inc
cmc
jle
mov
enter
push
lods
jp
pop
movsb
xchg
into
cld
out
pop
mov
inc
scas
jno
push
jecxz
add
push
iret
mov
mov
or
mov
negl
mov
stos
pop
adc
xor
mov
adc
insb
and
and
sbb
stos
push
and
in
pushf
clc
xchg
mov
mov
aas
jg
ds
pop
mov
or
or
dec
ds
insb
mov
jno
sub
xchg
dec
mov
pop
inc
push
fucomp
jge,pt
leave
adc
sbb
push
test
jb
jo
ljmp
mov
cmp
daa
fwait
decb
sub
xor
push
push
add
or
out
jecxz
loope
sub
pop
sub
clc
pop
pop
fsubp
adc
leave
cld
mov
outsb
leave
les
test
push
dec
xchg
adc
and
leave
mov
push
outsl
hlt
and
call
mov
std
mov
out
cmp
xlat
outsl
pop
and
mov
jno
cli
ss
daa
and
sahf
mov
cli
add
mov
adc
aaa
sahf
in
out
jae
mov
fcom
loope
and
popa
stc
push
push
pop
clc
movsl
test
mov
lock
testb
pop
stc
loop
push
xchg
sbb
testl
out
sbb
inc
popf
mov
jno
cmp
adc
cmp
fcmovnu
scas
cmc
cmpsl
xchg
outsb
aaa
sahf
in
sti
ret
cmpsb
and
test
xor
jne
mov
dec
add
pop
xor
xchg
dec
xchg
sbb
andl
xlat
dec
fmull
mov
lds
lods
sub
insl
mov
nop
mov
mov
cld
arpl
push
xor
lods
ss
repz
cmp
or
mov
xchg
lahf
push
xor
in
pop
lret
xchg
rcll
sub
cli
nop
jnp
sub
add
test
xor
pop
pop
lsl
addr16
pop
test
js
int
into
mov
push
pop
mov
cmp
in
loope
cmp
cs
fadds
cmp
imul
stc
pop
mov
or
mov
xchg
sub
pop
sub
sbb
sbb
imul
neg
pop
inc
xor
cmp
data16
adc
cld
push
cwtl
jo
in
lods
repz
inc
jns
push
jnp
inc
dec
cmp
repz
out
call
mov
inc
mov
icebp
push
jge
xor
adc
jno
lods
pusha
leave
aaa
mov
lret
adc
push
cmp
xchg
sub
popf
imul
fwait
stc
xlat
push
jo
pop
enter
cwtl
add
and
xchg
mov
dec
sub
pop
fcomip
or
arpl
into
rolb
stos
mov
lcall
dec
mov
ja
xchg
dec
and
dec
dec
out
les
cmp
ljmp
inc
scas
mov
jecxz
and
aad
mov
clc
jecxz
inc
pushf
repnz
lds
mov
adc
mov
sub
popa
cmp
outsl
cmpsl
pop
jne
and
xor
aas
nop
iret
xchg
out
xchg
inc
inc
cmpsb
pop
push
testb
xor
pop
adc
lcall
shl
add
outsl
mov
or
test
adc
dec
add
push
das
mov
call
adcl
xor
lds
shl
fwait
clc
test
dec
cmpsl
stos
jnp
cmp
jle
mov
mov
cltd
dec
lret
testl
daa
mov
popa
repnz
sub
mov
movsb
mov
hlt
lret
dec
push
iret
xorb
daa
add
dec
inc
outsl
dec
push
sahf
enter
push
cmpsl
test
jmp
fnsave
pop
and
adc
pop
lock
rol
dec
cmp
sarl
and
out
popf
cld
pushf
aam
jno
inc
pop
mov
mov
mov
icebp
mov
lcall
dec
push
dec
je
dec
ljmp
je,pn
mov
mov
cli
mov
rcrb
fnsave
dec
div
out
push
xor
fistpll
int
mov
or
movsb
js
add
mov
add
lcall
add
roll
mov
je
sbb
push
pop
or
das
push
push
cmp
jmp
mov
inc
cmc
lods
cmp
rclb
sub
lret
rclb
mov
repnz
or
out
xchg
stos
out
movl
xchg
adc
lods
stc
mov
test
test
mov
scas
xor
test
jle
fstp
lods
mov
inc
les
jbe
xor
jle
test
enter
iret
imul
movsb
xchg
sub
jmp
in
notl
sbb
sbb
sti
push
mov
jne
mov
mov
sbb
mov
decl
sub
sbb
pushf
fs
or
adc
dec
shrl
hlt
out
jae
xchg
ror
inc
data16
jl
out
adc
and
fistpll
int3
in
mov
add
dec
pop
sub
repnz
dec
jne
adc
stos
inc
mov
or
arpl
and
and
ss
icebp
in
lods
inc
pop
jno
cltd
dec
jmp
icebp
jnp
loopne
gs
adc
mov
cli
xchg
pop
es
hlt
jae
pop
or
out
sub
inc
sbb
stos
ss
ret
ja
stos
out
je
sbbb
mov
pop
in
popf
mov
fisttpll
arpl
movsb
sar
aam
cmp
repz
aas
in
movsb
xchg
shlb
add
xchg
sahf
mov
in
xchg
or
fwait
pop
out
aad
dec
adc
dec
clc
std
mov
test
loope
sub
dec
movsb
mov
pop
cwtl
jno
mov
xchg
dec
xchg
lret
in
enter
loop
sbb
cmpsl
or
outsl
jecxz
je
or
in
rorl
je
xlat
jo
lcall
notl
pop
add
sub
div
pop
pop
adcb
repnz
icebp
in
inc
mov
mov
push
fistpl
sub
fcompl
mov
jo
mov
enter
cwtl
dec
lds
lcall
in
mov
mov
clc
pop
cmp
in
mov
pop
mov
mov
adc
pushf
mov
add
mov
mov
sti
pop
std
cmpsb
popf
imul
je
sub
xchg
movsb
pop
pusha
sbb
pop
sub
inc
stos
jae
es
bound
bound
mov
inc
jno
sub
rol
inc
lods
push
out
test
test
pop
test
inc
jae
push
aam
jbe
loop
in
add
add
mov
jbe
xchg
gs
not
jbe
or
ficomps
jb
jae
imul
mov
xchg
int
and
mov
leave
jle
xchg
mov
les
mov
rol
jl
jne
cmp
xchg
iret
lea
into
pop
ss
mov
push
push
nop
and
test
lcall
xlat
pop
dec
or
incb
inc
adc
xorb
in
roll
add
mov
or
mov
push
iret
in
mov
mov
iret
fisttps
cmpsb
arpl
push
test
mov
test
pop
int
ljmp
pop
dec
out
xor
dec
insl
pop
fs
lret
add
daa
fidivrl
push
lcall
jae
ficomps
push
test
in
adc
jo
mov
sub
adc
orl
inc
xchg
lds
mov
mov
mov
add
push
ret
jae
mov
mov
inc
fildll
iret
push
inc
das
and
pushf
mov
enter
cmp
in
movsb
jecxz
fs
mov
dec
rcr
bound
ficompl
mov
xchg
icebp
jb
in
adc
or
jno
mov
arpl
rclb
ja
sbb
test
jb
sbb
and
dec
in
je
arpl
xchg
cs
push
insl
arpl
inc
push
addb
lods
xchg
loop
in
adc
lret
fcomps
mov
dec
sbb
idivl
cld
fbstp
push
jno
rolb
daa
icebp
out
dec
xchg
xchg
adc
inc
repz
test
lret
call
jecxz
es
mov
xchg
fdivs
lds
and
lods
inc
sbb
jecxz
inc
popl
roll
dec
and
imul
test
mov
repnz
jge
add
mov
xchg
adc
add
cmp
adc
jo
jo
lods
push
in
push
out
pop
ljmp
out
push
push
aas
leave
rorl
insb
jnp
stc
out
sub
mov
stos
rcrl
lcall
push
sbb
lods
dec
and
sbb
mov
cmpsb
or
sub
loopne
xchg
or
movsb
cmp
cmp
xchg
fcomps
inc
inc
hlt
fisubl
jge
inc
enter
add
mov
idiv
fnstenv
enter
xchg
movsb
loopne
sbb
es
int
out
add
imul
stos
xor
adc
jge
lret
mov
fwait
mov
cmc
loop
loope
jp
fbstp
cltd
push
rorb
pop
adcl
push
or
aaa
xchg
addr16
stos
mov
cmpl
jae
sbb
call
scas
nop
pusha
movsl
sbb
jle
das
in
xchg
jno
loope
jmp
arpl
iret
imul
sbb
fcomi
fmul
in
ds
out
outsb
scas
sbb
pop
faddl
fldcw
popa
jns
adc
dec
adc
jb,pt
mov
shlb
push
adc
sbb
ret
jle
cld
hlt
mov
jno,pt
dec
mov
push
adc
int
inc
mov
imul
dec
mov
pushf
mov
push
mov
adc
inc
paddsb
aaa
xor
mov
aaa
dec
sbb
mov
sbb
loopne
mov
jecxz
push
aaa
inc
and
pop
fdivrl
adc
cmp
movsl
popf
push
das
sub
jmp
in
clc
lahf
pop
gs
jns
sub
mov
outsl
cmp
gs
sub
imul
stc
arpl
fwait
data16
adc
dec
mov
mov
lret
mov
fs
shl
mov
popf
sub
repz
mov
jnp
sub
test
aas
dec
dec
xchg
push
sbb
in
jne
cld
adc
pop
imul
jne
aad
out
dec
jnp
jae
push
stc
dec
inc
pushf
repz
negl
adc
mov
mov
jo
ljmp
pop
rolb
jmp
out
mov
ss
fnsave
mov
imul
sbb
and
jno
out
out
xchg
das
sbb
in
test
or
imul
xchg
lods
mov
jp
inc
stc
pop
xchg
xchg
cld
adc
addr16
jle
sahf
daa
xor
jnp
shlb
mov
rorb
int3
mov
adc
cmp
sub
push
daa
inc
sub
ret
dec
out
dec
push
mov
movsb
push
gs
mov
mov
das
sbb
inc
in
addr16
loop
mov
mov
ret
es
jle
andb
movsl
jge
add
jb
push
rcrb
outsl
mov
push
ja
cmp
pop
fstps
xor
xor
dec
adc
outsl
movsl
cmp
or
std
push
ret
inc
add
dec
add
cmpsl
xor
push
or
or
test
add
int3
jecxz
jmp
dec
aam
jge
daa
shll
rcll
sbb
add
fidivrs
mov
jmp
dec
test
das
xchg
cwtl
xchg
fsubrs
mov
xor
addr16
ret
push
cmp
movsl
pop
aam
pop
shrd
mov
sbb
stc
test
sbb
xchg
fadds
sub
outsb
sub
cwtl
push
adc
outsl
aaa
mov
aam
and
xor
cs
cmpsl
or
imull
mov
pop
fdivs
add
push
outsl
sub
adc
lret
repz
pop
ficomps
std
das
add
push
arpl
dec
or
jae
mov
jbe
sbb
test
pop
fwait
inc
ret
push
rcr
mov
jb
jb
add
push
cmc
mov
xchg
adc
shlb
ficoms
test
xchg
sbb
dec
shll
stos
lods
xchg
pop
call
sbb
es
push
shl
jp
test
jno
sub
pop
sti
dec
pop
jle
jp
lahf
and
into
sbb
mov
and
push
mov
icebp
ret
dec
sbb
push
stos
stos
scas
inc
std
leave
inc
push
pop
jbe
repnz
ljmp
jmp
xchg
push
mov
es
and
cmpsl
mov
icebp
js
shl
sbb
shll
mov
dec
sbb
mov
or
lcall
pop
movsb
sbb
mov
push
sub
jnp
scas
mov
shlb
add
aad
ret
pop
jecxz
push
test
pop
lcall
mov
std
sub
cmp
aad
arpl
and
xchg
jg
adc
sub
mul
jbe
imul
shlb
das
xchg
and
cmpsb
enter
jg
xor
adc
fs
cmp
dec
out
es
sar
cmp
loopne
int
outsl
cs
and
outsl
lds
push
xchg
into
jnp
dec
das
sbb
mov
cmp
sti
push
jno
sahf
lret
pop
addr16
push
push
orl
adc
jns
sub
push
mov
shr
stc
jno
imull
xor
sub
test
loop
xor
mov
ljmp
fwait
scas
inc
sbb
shll
loopne
fdivrs
cld
vunpckhps
push
sbb
shll
and
mov
outsl
pop
add
orb
cltd
pop
xchg
jne
out
inc
rcrb
lods
pop
mov
xchg
icebp
pop
call
shrb
mov
fiaddl
sbb
std
jnp
in
xor
insb
pushf
mov
aas
mov
sbb
fistpl
push
insb
jp
dec
ret
inc
cmp
adc
ja
push
aas
push
inc
cltd
jae
add
sub
mov
nop
test
fcomip
sahf
movsb
stc
xchg
mov
nop
jne
jo
or
add
push
call
sbb
rcrl
push
shlb
mov
add
leave
xor
mov
test
lea
dec
sub
pop
dec
dec
out
fstpt
and
pop
loopne
daa
bound
pop
fidivrs
push
cmp
push
and
fists
jmp
adc
cmpsl
sbb
ja
xchg
add
ret
mov
leave
push
cmc
jmp
pop
mov
cmc
inc
xchg
mov
jle
bound
fsub
int3
jns
add
xor
mov
xor
out
les
dec
mov
les
inc
shll
fildl
mov
in
xchg
orb
mov
lret
jp
or
jo
mov
movsb
test
fistpl
push
push
or
cld
pop
xchg
push
ss
lret
adc
enter
rcrb
mov
stc
add
adc
scas
popa
mov
lret
js
clc
or
pop
hlt
aaa
sahf
js,pt
lods
xchg
dec
cmpsl
push
sbb
sub
stos
jbe
mov
ret
pop
inc
loopne
push
jbe
insb
jg
jo
lea
inc
in
add
mov
pop
scas
das
mov
cli
hlt
ss
xchg
shr
ret
cmp
push
push
xchg
cld
jb
dec
pop
sub
insl
inc
push
cltd
in
push
fnstcw
adc
sbb
lcall
daa
pop
fld
mul
sbb
push
mov
lock
adc
push
imul
popf
nop
push
mov
add
ljmp
sysret
je
mov
aad
push
sti
or
xor
data16
inc
mov
test
add
jo
cltd
stos
ret
or
loop
subl
insb
dec
pop
xchg
mov
gs
clc
and
jge
cmp
lahf
mov
mov
imul
test
pop
cmpsb
lds
sub
sub
mov
add
xchg
popf
mov
in
jle
fs
pusha
jl
pop
inc
inc
jno
in
jle
xor
inc
sub
sub
fidivs
loopne
outsl
fcomp
sub
daa
in
xchg
push
lods
addr16
mov
inc
push
push
sahf
and
test
rorl
and
jmp
pop
leave
xchg
dec
mov
lods
xor
inc
adc
sbb
sub
cmpl
dec
xchg
js
or
push
and
pop
out
jmp
sub
mov
js
jb
or
stos
push
ja
sbb
arpl
cmp
imul
mov
mov
push
stos
inc
lea
jbe
xchg
loope
repz
add
sbb
mov
jle
mov
stos
mov
xchg
jl
repnz
inc
ljmp
sbb
out
test
loope
sub
mov
in
lds
push
fists
push
cmp
outsb
lret
xchg
xlat
gs
push
insb
jge
inc
or
xor
sub
call
inc
div
jbe
pop
jge
push
in
rcrb
ja
sbb
addr16
das
push
enter
pushf
call
push
inc
in
xor
insl
ret
adc
ljmp
sbb
pop
or
add
imul
dec
popf
outsb
addr16
adc
mov
frstor
call
push
test
jo
sub
xor
pop
jns
pop
jl
mov
bound
cli
inc
xor
call
push
or
xchg
sub
mov
add
lods
test
adc
dec
xor
xchg
pop
and
in
mov
add
jp
sub
pop
repz
or
push
add
shrl
sarb
mov
lods
mov
dec
lahf
inc
cmpsl
enter
sbb
rolb
insl
xor
rcll
mov
rorb
test
pop
jl
aam
xchg
repz
sbb
and
je
mov
inc
cmp
movsb
pushf
sub
fdivr
test
pop
push
mov
idivb
adc
mov
ljmp
aaa
sbb
inc
stos
pop
push
test
dec
push
dec
cmpsb
and
push
mov
adc
out
scas
bound
fs
mov
loopne
sbb
addr16
mov
out
and
ja
test
dec
push
js
addb
mov
insl
dec
or
jae
bound
adc
bound
nop
test
mov
mov
jns
pop
pop
fimull
nop
xchg
cwtl
outsl
es
mov
jmp
sub
ret
std
jno
inc
inc
scas
sbb
aam
inc
adc
mov
fstps
dec
es
jge
mov
mov
out
cmp
mov
inc
loopne
fsubrs
je
pop
hlt
mov
sub
cmpl
adc
verr
pop
cmp
and
pop
jno
jge
sbb
outsl
xor
imul
test
orb
fidivs
std
dec
std
or
aad
gs
mov
shrl
enter
adc
test
adc
cli
jno
push
scas
ficompl
lcall
sub
cmp
imul
ret
inc
es
test
inc
loope
jg
fdivrs
xchg
addr16
fbld
call
ds
xchg
dec
push
fwait
cmc
icebp
push
rcrl
bound
sub
xor
fisubs
jbe
xor
xor
and
int3
rclb
daa
ret
xchg
mov
in
dec
cmp
cld
outsb
mov
push
adcl
sbb
clc
loopne
fisubrs
cmp
push
pop
sbb
mov
movsl
add
xor
lods
jge
adc
jne
int3
int3
pop
ret
pop
in
and
shlb
daa
sub
cwtl
out
cwtl
test
cli
sbb
mov
in
mov
scas
loope
xchg
xlat
sub
sbb
fsubs
ds
mov
rclb
dec
cmp
sbb
or
push
sub
mov
cs
lods
and
mov
mov
inc
out
in
fcompl
sbb
pop
push
add
stos
sub
int3
cmp
in
test
mov
orl
clc
jae
std
lret
mov
xchg
addr16
les
je
pop
and
mov
shlb
and
repz
enter
cmp
pop
pinsrw
stc
jb
fsts
mov
sbb
push
or
fs
cmp
jmp
mov
or
mov
mov
dec
mov
int
roll
addr16
lret
arpl
roll
mov
or
inc
lret
out
popa
sub
clc
mov
stos
xor
push
iret
scas
pushw
or
pop
sub
pushf
jl
int
pop
push
add
rclb
fsubs
and
bnd
pop
xor
and
mov
hlt
aad
mov
adc
roll
or
test
inc
mov
pop
xchg
cs
dec
cmpsl
push
lods
dec
jmp
cltd
out
pushf
xchg
mov
cmp
add
cmpsb
inc
jge
lret
outsl
mov
enter
mov
clc
pushf
cmovge
push
push
mov
cmpl
outsb
fsubrp
inc
outsl
addr16
jo
push
push
or
mov
fadd
addr16
shll
pop
call
fistl
adc
pop
sub
pop
jae
scas
dec
sub
sub
and
jg
call
fs
js
sbb
xor
ss
add
lret
sub
aaa
imul
pop
pop
cltd
lea
es
push
pop
adc
xor
jne
inc
xchg
fmul
fimuls
sub
fcompl
cmp
ja
add
loopne
pop
loope
inc
pop
cmpsb
push
inc
xor
aad
divl
mov
xlat
push
in
lds
test
cmpsl
and
jns
pop
push
adc
mov
idivb
out
mov
test
dec
adc
std
mov
fsubl
cltd
ficoml
loope
fsubr
jmp
mov
aaa
xlat
dec
jae
pop
push
test
pusha
push
adc
xchg
jno
push
fistpl
aaa
jg
xchg
loopne
shlb
adc
test
iret
cltd
dec
clc
lds
push
inc
in
repz
jecxz
dec
pop
push
sahf
ljmp
or
dec
mov
and
aaa
das
mov
inc
and
pop
mov
mov
sbb
dec
loopne
sbb
int3
push
add
dec
sbb
jecxz
mov
xor
fists
cmp
popf
mov
popa
or
xorl
mov
shr
ds
imul
fsubr
mov
pop
dec
popa
mov
fdivrs
les
icebp
int
mov
shlb
push
mov
jp
adc
mov
fwait
dec
in
out
testb
out
xchg
cmp
or
inc
shl
ret
hlt
xchg
xlat
jp
sbb
loope
cmp
adc
jge
mov
pop
int
mov
popa
lods
shl
mov
add
add
sbb
push
int3
lahf
insb
je
repz
iret
leave
pushf
fs
jo
cmp
adc
xlat
add
aaa
shrb
push
push
ljmp
fists
mov
lret
cli
jne
leave
sti
pop
arpl
xlat
ret
out
adc
xchg
mov
push
pop
lret
push
test
popf
sub
mov
sub
lcall
lret
aaa
ljmp
and
push
out
aad
or
jae
jns
pand
ret
sbb
clc
imul
adc
xlat
add
stos
and
fmull
popa
mov
inc
dec
push
or
cmp
xor
out
push
fldt
cmp
dec
add
sbb
in
hlt
js
add
sbb
mov
es
push
or
mov
push
jbe
dec
dec
xchg
daa
inc
inc
aaa
xor
cld
lea
mov
or
push
add
sarb
inc
xlat
in
or
lds
stos
ficompl
ud2
insl
clc
jge
pop
psubw
cmp
sbb
stos
mov
sarl
lods
adc
popf
iret
movl
sbb
shlb
dec
xchg
cmp
jbe
pop
add
and
inc
dec
jmp
shl
mov
call
mov
test
jb
lret
pop
loop
and
imulb
dec
mov
pop
jmp
lret
inc
stos
jne
adc
jge
xchg
int
xchg
sub
aam
cmp
enter
jp
mov
and
sahf
mov
sub
es
loopne
or
add
sti
mov
push
fisubrl
add
sbb
insl
popa
psubsw
cmp
aas
clc
mov
stc
pop
cmp
push
stos
movsl
mov
insb
cmpsb
or
inc
mov
xchg
mov
sbb
mov
subl
mov
cmp
mov
daa
outsb
stos
sub
cmpsl
pop
mulb
lods
push
fidivl
jp
je
mov
xchg
ja
sbb
pop
inc
into
adc
pusha
jns
mov
into
jo
adc
jbe
movsb
cmp
jmp
cs
mov
sub
outsl
xor
fnstsw
cwtl
jno
adc
paddw
adc
inc
push
lret
pop
adc
cmc
jg,pn
mov
xchg
cltd
rcl
sbb
cmp
push
cmp
call
mov
cmp
cld
add
inc
and
adc
adc
and
and
sub
pop
stos
adc
lock
push
and
push
and
popa
es
pop
add
xchg
mov
fsubs
test
dec
inc
adc
mov
add
push
jnp
ja
push
push
and
xchg
inc
in
cmp
test
sbb
inc
mov
jl
loop
clc
dec
pop
push
imul
fs
sbb
sub
sub
cli
scas
loopne
sti
jo
popf
xchg
cmp
jo
sbb
push
pop
sahf
imul
jnp
inc
jnp
dec
jne
in
movsl
outsb
cmp
sbb
lret
xlat
push
xor
les
push
jb
mov
loop
stos
stos
jae
movsl
jle
and
add
add
cwtl
test
loopne
les
dec
subl
clc
mov
je
mov
pop
test
jo
push
into
not
push
loope
popf
fisubrs
fnsave
inc
ficomps
xor
popa
jl
aas
sbbl
and
mov
and
or
ud0
or
sub
aas
fdiv
xor
xchg
inc
push
dec
cmp
pushf
sbbl
xor
mov
and
pop
mov
idivl
sub
cltd
fcmovu
out
mov
push
scas
push
adc
and
cli
call
mov
pop
lock
adc
jp
arpl
cmpsl
fldt
xorb
gs
mov
lea
pop
pop
aam
dec
into
sarb
decl
lret
pop
cld
aad
shl
or
es
sub
mov
fistpll
and
movsb
jae
arpl
movsb
lret
push
insl
enter
xchg
outsb
xchg
iret
xchg
out
fnstcw
lds
in
sub
movsb
mov
add
add
mov
sahf
les
sub
rolb
sub
push
lock
pop
fiadds
push
xchg
sbb
es
scas
js
jb
or
or
or
mov
dec
jnp
inc
xor
adc
lods
add
add
pop
cmp
vmulsd
jecxz
cmp
jbe
aas
out
or
cli
push
enter
dec
sbb
hlt
cmpsl
test
clc
push
pop
mov
sub
cmc
pushf
out
jle
jb
xor
popf
sbb
mov
loope
icebp
and
imul
shll
rorb
iret
xchg
loop
je
stc
adc
mov
dec
and
lods
xlat
push
insl
push
jmp
aam
out
xor
adc
ret
insb
std
sbb
and
inc
out
mov
mov
outsb
or
mov
mov
ds
fs
xor
push
lods
or
dec
pop
add
fcmove
enter
cmpsb
ja
orb
xchg
xorb
lret
xor
jle
inc
cwtl
mov
inc
pop
xchg
xlat
daa
dec
test
jle
roll
push
out
mov
test
mov
sub
loop
inc
mov
sub
jmp
popf
jmp
or
and
dec
push
add
jno
adc
stos
jbe
insl
xor
inc
jno
mov
icebp
dec
xor
rcll
mov
test
clc
js
orl
mov
jp
stc
jl
xchg
xchg
push
sti
pop
xchg
inc
cmpsb
push
dec
shlb
lret
and
jb
arpl
xlat
out
fbld
outsb
push
or
sbb
je
pop
inc
gs
dec
dec
movsb
data16
in
add
lds
les
int3
mov
int
and
jecxz
sub
test
aas
push
movsl
mov
shrb
ret
sbb
out
xchg
test
mov
out
xchg
xchg
movsl
jno
push
iret
adc
xchg
aam
dec
adc
mov
and
call
sbb
push
jg
in
test
iret
pop
hlt
aaa
lock
outsl
call
call
outsl
test
and
sbb
mov
out
movsb
fcomps
push
jae
test
push
dec
ja
ds
mov
xor
daa
sub
dec
push
inc
cmp
jmp
fcomps
cmp
aam
aam
mov
lds
pushf
lret
in
fcomps
pop
loopne
dec
stc
cs
test
push
leave
pop
adc
xor
or
ret
xchg
imul
push
sub
arpl
hlt
sahf
jge
ret
and
enter
das
or
loope
pmovmskb
and
outsl
xchg
cli
inc
sbb
lcall
cld
add
stos
xchg
aaa
bound
lea
mov
test
jecxz
sahf
outsl
repnz
or
cmp
mov
jae
mov
scas
in
or
cmp
jb
scas
and
jle
jg
sub
and
mov
pop
or
xor
xlat
cmpsl
insl
mov
mov
push
inc
cmpsl
popa
xchg
popf
popf
lea
cmpsl
adc
sbb
xor
or
or
xchg
cs
jecxz
cwtl
mov
repnz
into
aam
mov
sti
push
or
inc
int
inc
lcall
loop
and
dec
xor
xlat
push
mov
cmp
mov
jp
push
scas
add
mov
mov
sbb
xchg
push
cmp
inc
popa
add
pop
shll
jb
jo
xor
jecxz
stc
lret
mov
call
hlt
cmc
repnz
andb
adc
and
lods
push
mov
nop
sbb
add
jne
mov
add
inc
out
ficomps
popf
fsts
ss
push
pop
int
adc
xor
pop
stc
lods
cmpsb
sub
or
lcall
dec
test
and
leave
jb
mov
ds
test
sbb
push
rcl
mov
push
lock
loope
push
sbb
mov
jne
outsl
das
jo
loope
sahf
xchg
pop
cmc
lods
int
mov
jge
enter
fidivrs
sti
enter
sbbl
iret
jno
mov
insb
cltd
shl
dec
dec
popa
dec
or
push
inc
lahf
dec
cmp
xchg
inc
les
pop
test
pop
or
mov
enter
sbb
sbb
jns
arpl
xchg
decl
fisubl
mov
mov
dec
mov
sub
fwait
mov
xchg
sahf
xor
insb
dec
mov
inc
add
ficompl
mov
filds
clc
mov
cmp
sub
lock
test
mov
inc
add
das
ljmp
cmp
and
inc
jae
fisttpl
dec
popf
and
inc
jbe
or
sub
mov
sub
add
mov
repnz
mov
mov
call
lds
mov
add
pop
inc
loop
push
ljmp
out
dec
pop
xchg
or
sbb
shlb
fdivl
outsl
inc
ja
inc
adc
cmpsl
sub
ret
push
nop
outsb
stc
mov
cld
jmp
iret
pop
add
icebp
aas
sbb
test
xor
inc
push
xor
sbb
jmp
sbb
mov
push
xlat
adc
out
add
das
cs
inc
popl
add
out
adc
inc
jmp
sarl
sub
cltd
ja
mov
insl
add
leave
inc
ret
or
insb
push
test
dec
push
or
cmp
cli
lods
data16
lahf
pop
jle
aaa
adc
pop
lea
lds
ss
or
jle
test
ret
xor
xchg
ss
in
mov
je
sti
lods
out
pop
in
adc
pop
xor
ret
in
xchg
adc
hlt
adc
iret
mov
xchg
leave
sub
or
sub
out
repz
push
xor
mov
lcall
push
mov
add
add
pop
repz
dec
repnz
dec
sub
das
test
mov
setge
cmp
fs
xchg
jmp
aas
mov
lcall
pusha
xor
sub
inc
mov
sub
bound
test
pushf
mov
mov
mov
push
push
xchg
mov
test
adc
lods
test
mov
adc
push
jecxz
push
gs
mov
add
addr16
aad
lea
push
ret
and
push
jnp
out
adc
inc
xchg
pop
sarb
pop
mov
mov
mov
mov
stos
std
dec
xchg
adc
mov
sbb
test
daa
fidivrs
call
call
or
dec
jae
sbb
ljmp
jl
scas
mov
leave
push
out
lods
dec
mov
inc
and
in
mov
stc
or
mov
jns
dec
addr16
ljmp
in
mov
lret
sub
test
sub
mov
testb
fildll
subl
cmp
mov
fisttps
xchg
push
out
jge
adc
sbb
jns
repnz
daa
push
push
and
or
popf
nop
andb
sub
loope
loopne
push
or
lds
push
jmp
xor
xchg
mov
jae
test
sbbl
outsb
inc
ljmp
test
scas
lcall
mov
xchg
xchg
dec
lock
scas
lcall
jmp
xchg
or
lahf
ss
sub
ss
cmp
add
jb
lods
dec
in
pushf
or
lret
and
fsubr
test
fcomip
cmp
repnz
jno
dec
outsl
mov
add
sar
imul
jno
add
ret
push
movsb
lret
mov
daa
loope
ret
movsb
stos
xchg
int3
and
pop
dec
push
popf
or
test
or
iret
out
inc
imul
icebp
ret
push
cmpsb
mov
cmpl
mov
pop
ljmp
jno
dec
cmpsb
push
jno
mov
stc
loope
sub
lods
mov
ljmp
dec
das
cmp
mov
mov
repnz
rcrl
jg
shlb
fistl
adc
test
stc
mov
mov
push
in
pop
mov
push
xchg
pop
xor
xor
addl
seta
sbbb
int
xor
in
out
push
dec
pop
cld
je
stos
cmp
roll
cld
pushf
and
test
in
aas
jg
pop
xor
in
into
cmp
lret
pop
lock
imul
pop
int3
fadds
inc
mov
xor
push
inc
sub
loopne
mov
xor
or
outsb
adc
out
ljmp
adc
lret
adc
test
pop
adc
imul
cmc
loope
aam
addr16
lods
mov
mov
add
fisttpl
and
xor
icebp
cmpsl
cld
inc
mov
cmp
inc
movsl
inc
jle
ss
cmc
movsb
jae
and
dec
lcall
jmp
push
lret
xchg
popf
lret
pushf
decb
aam
or
imul
test
xchg
loopne
mov
test
call
mov
movsl
aad
negb
ja
ss
and
fcmovnb
xor
jnp
fwait
imul
xchg
push
ljmp
in
sahf
xlat
addb
jmp
jae
movsl
std
js
cmpsb
shrl
jmp
xchg
mov
and
and
pop
cmpsl
mov
mov
lret
add
sbb
mov
les
xor
les
dec
cltd
pop
inc
dec
cmc
push
and
les
scas
pop
mov
inc
mov
mov
pop
lahf
cmp
and
cmp
xchg
fisttps
cmp
inc
xor
rorb
mov
idiv
jbe
fs
adc
loopne
and
inc
add
enter
and
xchg
lods
push
test
insb
pop
fdivr
dec
ja
ljmp
dec
clc
jnp
data16
notb
ss
xchg
out
js
push
adc
insl
insb
daa
sti
xchg
add
xor
cmp
ret
sbb
cmp
test
scas
cmp
sbb
add
xchg
cmpsl
push
sysexit
sbb
cmc
jmp
pop
rcl
pop
scas
pop
in
cmpsb
sahf
cmp
rorb
cmp
adc
push
sbb
out
add
sub
shrl
rcl
and
popf
lock
mov
adc
sti
cmp
jg
xchg
xchg
je
in
lods
sub
sub
push
or
aad
xchg
pop
stos
sub
xor
or
mov
lds
adcl
add
xor
cmc
dec
mov
add
icebp
cmc
lret
lds
scas
outsl
pop
mov
sbb
inc
or
xor
jae
push
mov
pushf
loop
fsubs
nop
lret
int3
out
out
xchg
loop
cmp
scas
loope
call
pop
hlt
movsb
pop
nop
pop
lock
stos
inc
mov
and
aaa
inc
int3
add
dec
mov
andb
mov
mov
mov
sub
lock
mov
and
adc
out
jp
fildll
xchg
mov
stc
pop
push
mov
jle
push
enter
scas
or
int3
xor
stos
mov
aaa
mov
mov
enter
xchg
ss
mov
and
mov
gs
outsl
icebp
jbe
sbb
cmp
mov
ret
sti
jecxz
shrb
or
leave
test
sbb
adc
mov
cmc
and
xchg
in
mov
jne
ss
out
cmp
push
fistps
cmp
ret
decb
adc
mov
loope
pop
rcr
fistpll
mov
lcall
daa
sahf
add
sti
jmp
jne
cld
mov
xor
subl
inc
pop
shll
int3
xor
pop
loopne
ret
xchg
cltd
inc
push
jb
les
mov
push
xor
push
push
sbb
jmp
cmpsb
inc
ret
mov
std
pop
mov
pop
pop
jecxz
testb
loop
ja
movsl
inc
lods
xchg
mov
scas
stos
imul
cmp
mov
arpl
sar
dec
mov
add
pop
mov
add
fisubs
and
je
adc
jb
je
inc
les
or
add
xchg
jnp
inc
adc
xor
dec
fwait
data16
test
loopne
push
imul
aas
hlt
pop
push
lret
cmpsl
loope
incb
mov
push
pop
bound
pusha
fwait
mov
das
jbe
jp
out
fsubr
xor
mov
xor
fsubrs
out
push
push
mov
sbb
daa
add
jmp
fsubrs
ss
mov
les
fcomps
enter
ret
mov
jmp
pop
icebp
aam
out
sub
xor
mov
lds
sbb
cs
loope
mov
mov
pop
sub
ja
lret
jge
jle
lcall
orl
call
push
adc
jle
mov
jbe
push
add
mov
and
mov
filds
je
pop
jne
das
cmp
bound
xchg
aaa
in
pushf
xor
mov
mov
push
mov
lahf
idivb
add
cs
dec
jmp
xchg
arpl
add
test
cld
stc
cmp
clc
in
adc
adc
pop
xor
sbb
mov
popa
stos
ja
dec
shll
xor
mov
nop
notl
in
push
mov
shlb
sahf
out
adc
fsubrs
push
jl
cmc
fbld
ds
into
les
sub
adc
adc
sbb
push
and
fsubp
test
and
movl
push
mov
sub
movsl
lcall
fwait
push
aaa
adc
rcrb
sbb
mov
mov
xor
into
push
iret
jbe
int3
nop
insb
stos
sbb
or
sub
mov
xor
add
mov
cltd
cmpsb
push
sub
inc
shll
sti
mov
push
jp
cmp
jg
inc
ss
into
jmp
jecxz,pn
cltd
push
rorb
icebp
shlb
add
mov
add
and
cwtl
aas
int3
push
jmp
xchg
jns
mov
lods
aad
loop
xchg
rclb
sub
or
shrl
cmpsl
imul
popa
add
fcoml
adcb
xchg
and
inc
testl
iret
cmp
sbb
mov
dec
mov
mov
add
mov
arpl
mov
dec
shlb
xchg
pop
lds
cmpsb
int3
subb
mov
sbb
adcl
lret
adc
push
jp
pop
pop
das
das
or
mov
pop
or
xor
sub
sub
xlat
fadd
mov
xchg
sbb
es
aam
mov
ret
xchg
mov
mov
mov
arpl
imul
inc
dec
lcall
xchg
addr16
aad
int
mov
cmpsb
jo
cld
outsb
xchg
andl
jne
imul
jo
xor
jns
xor
sbb
mov
aad
push
test
in
sbb
mov
orb
negb
lahf
lea
ret
mov
fwait
fwait
sbb
dec
jg
ljmp
jge
jno
cmp
hlt
imulb
les
pop
mov
subl
out
push
mov
mov
dec
iret
ljmp
pop
pusha
pushf
jecxz
lock
cmc
repnz
stos
rcr
jmp
js
aad
inc
sub
adc
adc
jecxz
mov
mov
lock
rolb
in
inc
repnz
ret
aas
xor
sbb
fcmove
adcb
and
repz
sub
fcompl
mov
xor
xor
sbb
mov
mov
jne
nop
push
xor
lds
and
icebp
imul
das
testb
mov
push
filds
roll
test
adcl
cltd
push
enter
in
orl
in
mov
scas
test
or
in
inc
dec
push
stos
imul
dec
addl
xchg
sbb
sub
push
sarl
mov
or
test
fidivl
cmc
cmp
dec
mov
xor
adc
adc
fcmovbe
sbb
adc
sub
out
xor
xor
cwtl
adc
mov
sub
jbe
js
mov
or
sub
enter
or
jecxz
loopne
data16
fidivrs
dec
add
test
mov
or
or
out
mov
or
jbe
dec
mov
daa
movl
mov
dec
insb
lds
adc
movsb
push
adc
or
xchg
sub
xlat
or
in
xchg
mov
adc
or
dec
adc
aad
test
cmp
cmc
aaa
or
pop
imull
ret
cli
jmp
mov
imul
adc
dec
imul
mov
cwtl
xchg
push
add
push
dec
in
fs
cld
dec
lds
in
iret
test
jae
aas
xor
out
cli
xchg
ret
fsubl
jmp
or
imul
mov
jge
repz
mov
and
sbb
pop
add
lds
addr16
add
insl
adc
cmp
call
loope
push
jnp
or
dec
adc
repnz
mov
call
pusha
and
fcmovu
aaa
adc
jmp
lods
sub
and
lcall
sbbb
popf
add
popa
cs
out
test
pop
pop
cli
dec
add
orb
cmp
rcr
in
inc
jo
fwait
xchg
lahf
ja
sbb
sub
inc
stos
dec
push
jbe
push
aaa
mov
fildll
jge
pop
inc
sahf
sub
ja
inc
es
out
lods
nop
cmpsl
out
lea
cmp
out
or
xor
clc
xchg
fimull
dec
es
inc
fnstsw
ret
pop
out
gs
daa
pop
in
std
xchg
adc
adc
test
dec
xchg
test
popf
movsb
xchg
sub
xchg
aas
pop
and
fwait
lods
cwtl
mov
jnp
loop
xor
lahf
rol
lahf
fcompl
js
rolb
adc
jno
shrb
cmpb
push
adc
sbb
and
cmpxchg
mov
inc
aam
aas
jge
pop
xchg
and
clc
movsl
daa
fwait
fwait
iret
cmp
repnz
mov
divb
lock
outsb
lds
mov
sbb
mov
les
je
in
push
pop
jb
mov
adcl
fdivs
adc
sbb
push
das
or
aas
push
mov
lret
popa
stos
stos
rsqrtps
mov
test
punpckhwd
rcrb
test
sbb
pusha
fsts
mov
and
movsb
lock
into
mov
pop
clc
push
mov
or
ds
ficomps
xchg
stos
fucom
mov
test
jb
pop
arpl
mov
lods
xorb
sub
xor
push
mov
divb
dec
jne
and
or
outsb
movsb
sbb
loopne
or
insb
iret
shlb
cltd
jne
pusha
sub
jbe
pop
and
dec
aam
std
cld
and
lahf
inc
add
cli
xchg
or
imul
sbb
sub
iret
jnp
sub
out
aas
adc
fbstp
push
xchg
push
jne
scas
enter
inc
das
sbbl
or
xchg
inc
fnstcw
outsb
or
test
pop
push
mov
rorl
mov
and
ffreep
cmc
adc
lea
fwait
dec
lret
jle
mov
pushf
stos
popf
popf
push
sbb
and
sbb
test
bound
ljmp
jne
insl
mov
dec
mov
call
pusha
mov
pop
or
dec
jns
dec
out
leave
xorb
xor
rolb
les
push
imul
mov
out
xchg
lcall
and
jnp
xchg
orl
outsl
and
jg
cwtl
inc
pop
insl
mov
mov
add
push
arpl
jl
cwtl
fnstenv
and
xchg
mov
les
jae
gs
shl
arpl
add
pop
rorl
popa
stos
lret
xor
daa
lret
push
out
mov
call
inc
jl
or
mov
mov
pop
sahf
test
jecxz
shr
loope
pop
repnz
mov
push
cmp
repz
les
pop
sti
mov
and
cmp
xchg
js
mov
out
push
xchg
sub
and
daa
xor
add
xlat
ret
and
adc
repnz
lods
push
and
pop
pop
ret
sbb
js
gs
leave
push
dec
and
lock
fsubs
int
and
xchg
ljmp
sti
test
mov
cmp
movsl
add
sbb
pop
inc
repnz
sahf
addb
outsl
fdivrp
fstpl
cmp
xor
xor
pop
lahf
test
insb
sarl
imul
add
push
imul
iret
in
xchg
xchg
es
lock
in
and
add
imul
xchg
xor
lods
out
roll
icebp
sub
pop
ret
dec
sahf
and
shlb
stos
out
xchg
mov
out
jle
sbb
jp
sub
sbb
mov
add
aam
xchg
fsts
and
sub
or
jbe
negb
xchg
int3
stc
pushf
lret
imul
push
inc
push
add
subl
dec
jne
xchg
mov
cmpb
xchg
incb
push
fisubrs
inc
mov
mov
push
cmp
out
ds
aas
xor
xchg
lds
or
popf
xchg
jle
loopne
iret
stos
xchg
imul
subl
hlt
cli
nop
xadd
daa
stos
mov
in
xchg
repz
outsl
xchg
cwtl
addr16
sbb
popa
sti
popf
pop
sub
arpl
jle
xchg
call
pushf
loop
loopne
jno
pop
mov
imul
mov
mov
stos
lods
push
aaa
arpl
cmp
cmp
pop
movsb
add
and
mov
insl
scas
xor
xchg
xchg
cmp
jb
in
dec
or
mov
mov
inc
push
adc
jae
icebp
shr
addr16
int3
push
cld
sbb
inc
dec
dec
sahf
dec
enter
inc
and
imul
jg
mov
pushf
outsl
in
push
inc
rorl
sub
outsb
pop
add
jmp
aam
pop
adcb
jecxz
fcompl
dec
stc
out
dec
inc
pop
xchg
hlt
inc
or
clc
loop
iret
inc
out
xor
jl
je
insl
xchg
lods
lods
iret
jp
jae
int
mov
dec
dec
pushf
adc
inc
or
add
xchg
cmp
mov
ljmp
jle
mov
inc
xchg
pop
xchg
fistl
fisttps
loop
out
cmp
cmp
sbb
ss
out
imul
lods
ljmp
xchg
jp
sub
pop
jp
test
cmp
out
imul
jl
mov
scas
andl
loop
fsubrp
xchg
pop
and
int3
lcall
lcall
out
fcoml
js
mov
fdivl
inc
mov
aam
bound
and
stc
push
xchg
jmp
or
cs
fldenv
or
pop
ret
ds
pop
fcmovne
and
jae
mov
xor
lock
scas
mov
mov
jns
push
fs
adcl
cmp
movsl
cwtl
cmp
inc
xor
mov
jae
and
xchg
and
jg
cmp
sarb
fiaddl
iret
push
notl
cmp
pop
push
dec
sbb
fimull
lahf
push
mov
icebp
aad
jbe
js
in
xlat
imul
cmp
lea
addr16
mov
push
jnp
jns
dec
sub
mul
pop
fnstenv
in
jb
pop
jp
es
pop
jbe
rolb
pop
sahf
mov
in
jno
rorl
pushf
pop
sbb
test
leave
loop
mov
icebp
adc
mov
out
les
jne
dec
pop
aad
pop
mov
fists
hlt
movsl
out
mov
cwtl
scas
shlb
adc
lods
pop
xchg
gs
mov
mull
xor
sub
scas
cltd
faddl
or
mov
fcmovnb
incl
decl
arpl
sbb
xchg
add
sub
sub
xchg
xchg
pop
cmc
cwtl
xor
adc
out
jne
dec
dec
mov
or
jo
or
jb
shr
das
mov
inc
jg
cmc
pop
cmp
ss
in
jle
nop
fwait
jne
faddp
ljmp
scas
je
movb
inc
push
mov
inc
xchg
stos
sub
mov
xorb
pop
jmp
push
mov
mov
cmp
icebp
and
pushf
cmovge
daa
xor
outsb
xchg
int3
testl
mov
xchg
pushf
arpl
pop
sbb
xor
std
jl
shl
das
xchg
es
jne
dec
and
xlat
dec
int3
add
sub
push
std
ja
pop
pushl
aad
test
inc
or
push
and
inc
icebp
dec
cmp
jns
scas
mov
xchg
shll
mov
cmp
dec
test
idivb
push
pop
push
sub
jo
mov
or
andb
rclb
pop
scas
xor
mov
xor
adc
sbb
push
sub
pop
aas
ret
push
in
iret
std
sub
cmpl
repz
sub
push
shll
sub
mov
pop
aaa
popa
test
or
xchg
aad
pop
lock
add
inc
mov
push
adc
sub
xchg
cmp
cli
dec
fiadds
stos
mov
xchg
xchg
or
stos
into
cmp
lret
dec
mov
jl
shl
clc
sbb
fwait
pop
pop
cld
ja
cmp
sbb
adc
pop
add
xchg
mov
decl
xchg
shr
mov
mov
jmp
in
les
movhps
cmp
lret
lcall
repz
pop
leave
pusha
daa
adc
mov
inc
push
add
jmp
into
xchg
mov
cmpsl
outsb
add
jo
mov
add
jb
xchg
cmp
call
leave
das
mov
push
stc
and
out
jl
shll
sahf
aam
xor
dec
jle
aad
push
mov
sub
cmpsl
push
and
movl
and
insl
or
adc
fsubr
into
jl
push
outsl
out
ja
shlb
fcom
mov
mov
daa
xchg
xchg
adc
jnp
inc
in
and
sub
int3
pop
iret
xor
out
jp
cld
and
outsb
push
fdivs
pop
cltd
std
and
sbb
mov
or
clc
push
stos
popf
lds
xchg
xor
and
xchg
cmpsb
dec
cs
in
mov
arpl
cmp
arpl
jne
cltd
imul
mov
push
movsl
or
inc
add
mov
or
nop
jns
in
lret
cmpsl
pop
rorb
sub
ss
fnstenv
cmpsb
pop
pop
cmp
into
push
mov
sti
dec
scas
pop
mov
fimuls
jge
cli
popa
push
daa
imul
clc
jmp
dec
fidivs
outsb
mov
fstl
inc
cwtl
push
scas
cli
mov
adc
out
out
fmulp
jecxz
cmpsb
sar
push
dec
dec
int
imul
jge
outsl
insb
pop
dec
movsb
or
cld
sub
test
mov
int
jle
adc
mov
xor
rcll
sub
pusha
xchg
jbe
jns
imul
lahf
fidivrl
lods
outsb
out
and
cmp
in
ret
lcall
inc
out
sbb
ret
cmp
and
dec
dec
sbb
fwait
sbb
es
sar
in
jae
sbb
and
inc
in
add
xor
loope
sbb
push
mov
jno
jecxz
shll
cmp
das
mov
jle
test
pop
std
pop
mov
insb
xor
je
outsl
or
movsb
frstor
dec
and
movsl
xor
test
out
xchg
test
mov
jbe
aam
stos
aas
sbb
jecxz
pop
dec
push
lret
cwtl
cmp
dec
jp
imul
push
push
push
jno
push
jecxz
mov
add
jecxz
mov
jecxz
cs
xorb
flds
xor
xor
mov
adc
sub
das
cli
pop
ds
popa
lret
das
inc
in
stos
lret
cmp
adc
cmp
mov
lock
mov
and
sbb
mov
and
add
cltd
mov
shll
sub
in
in
clc
test
cld
xchg
xor
pop
pop
cmpl
sub
pop
ja
adc
add
jo
xchg
cmp
dec
mov
mov
add
mov
mov
cmp
jg
faddp
sbb
shll
cmp
loop
outsl
mov
pop
xchg
dec
jecxz
cltd
push
repnz
fwait
push
mov
cmp
out
jb
aaa
lods
pop
mov
adc
add
push
jp
inc
ds
lcall
shr
push
test
mov
mov
mov
xlat
lods
xchg
cmp
mov
stos
jmp
ds
lret
xchg
push
aaa
imul
pop
mov
lock
or
jnp
addr16
pop
ror
sub
and
fiaddl
inc
das
add
add
inc
std
popf
sbb
aas
adc
jbe
inc
push
nop
adc
mov
push
pop
xchg
outsb
xchg
fsubrl
sub
mov
jle
lods
insl
sub
scas
std
mov
xchg
push
inc
xchg
in
frstor
jl
lds
and
in
add
out
push
mov
mov
dec
cwtl
pop
cmp
inc
pop
and
test
ljmp
mov
insl
fldt
sub
fisubs
xor
xchg
mov
add
or
mov
jge
add
mov
pushl
xchg
inc
in
mov
xlat
hlt
jno
jmp
jge
mov
insb
nop
lret
loope
inc
mov
add
or
scas
loope
notl
stos
jge
mov
popl
sbb
push
and
dec
and
lcall
lods
scas
pop
pop
imul
mov
test
fs
push
jae
mov
xchg
cmpsl
or
repz
out
aas
mov
jp
fisttpll
ret
test
std
fcoms
imul
stc
loopne
sarb
jle
rcl
ja
loopne
cld
add
jge
lods
addb
and
pop
in
push
int
or
xchg
pop
insb
jmp
or
xorl
fildl
aas
xchg
adc
mov
mov
in
or
sbb
aad
cmp
push
inc
call
fimull
push
add
pushf
out
sub
in
shl
cmp
mov
adc
inc
mov
push
pop
ljmp
mov
aaa
mov
stos
push
into
xchg
adc
iret
pop
out
mov
sbb
insb
xchg
rcr
dec
jb
fcomps
outsl
mov
dec
jo
in
les
pop
data16
and
bnd
js
push
sti
int
das
sub
sbb
inc
cmp
xchg
jge
jae
loopne
mov
arpl
lods
mov
mov
xchg
scas
aad
jl
add
sbb
jle
lahf
popf
cltd
cld
movsb
xchg
dec
into
cmp
inc
daa
mov
pop
test
cmp
cmp
popa
fiaddl
mov
lcall
dec
lock
aad
data16
shl
pop
cmc
pusha
xor
or
mov
stc
int
arpl
cltd
add
test
ja
add
fwait
icebp
or
dec
aaa
jae
rorb
loop
test
push
pop
inc
cmpsb
mov
lahf
aaa
mov
enter
add
leave
shrb
jnp
mov
adc
adcb
imul
and
sub
test
clc
mov
les
adc
dec
mov
testl
and
popf
push
sub
testl
insl
icebp
test
outsl
xchg
test
inc
js
dec
or
fs
push
mov
mov
xor
push
xchg
xor
jno
push
stc
adc
or
out
and
xchg
leave
pop
inc
pop
pushf
push
mov
aas
cmp
lcall
pop
mov
dec
outsb
movsb
push
cmp
xchg
aad
adc
sub
jbe
mov
pop
mov
aas
std
scas
mov
ss
push
mov
pop
test
out
int
outsl
jmp
cmp
cmp
or
pop
jmp
jae
scas
push
add
incb
iret
je
scas
aaa
or
mov
sahf
int3
bound
test
rcr
in
cmpsb
sbb
jge
mov
xor
xchg
popa
xlat
lock
push
xlat
mov
jge
add
out
dec
cmp
sbb
pop
or
add
hlt
adc
sbb
inc
or
mov
sti
xchg
in
jge
rcr
pushf
out
loopne
cmp
movsl
push
clc
loopne
mov
fdivrs
or
jne
mov
lahf
pop
mov
xor
pushf
lods
xor
fdivrs
xchg
xbegin
xchg
out
loope
push
mov
cs
lret
cmpl
shlb
out
loope
int3
aad
repnz
cltd
push
sti
gs
ss
sti
dec
insb
fiadds
dec
or
icebp
mov
inc
icebp
ss
in
mov
call
mov
lods
dec
lahf
jp
push
in
out
and
mov
mov
into
dec
pop
lahf
pop
stos
pushf
pop
jecxz
das
aam
sbb
xchg
mov
mov
lcall
shlb
insl
sub
lret
lret
adc
push
and
sub
mov
movsl
std
sub
dec
stc
dec
jle
sar
cwtl
mov
adc
jb
or
clc
hlt
shll
xchg
movsb
sbb
pop
sahf
ja
lods
xor
mov
outsl
out
out
pop
arpl
mov
arpl
xchg
xchg
fisubrs
gs
les
push
jae
in
vminss
add
add
xor
mov
jb
add
push
std
add
add
mov
jmp
mov
push
pop
mov
add
cli
inc
mov
stos
jge
mov
ret
mov
push
insl
cmp
adc
mov
cmpsl
pop
scas
inc
mov
cmp
mov
mov
les
push
sub
in
jp
push
out
pop
imull
test
inc
fld
dec
or
or
cltd
fdivs
inc
mov
dec
xor
decl
insl
lret
and
push
loope
aaa
mov
scas
pushf
sti
push
stos
ss
inc
pusha
sahf
push
xchg
xchg
rcll
int3
push
outsl
and
lock
bound
sub
into
adc
ret
adc
xor
int3
daa
inc
dec
fsubr
mov
mov
sahf
stos
int
cmp
ficoml
nop
aaa
das
dec
rcl
mov
adc
sbb
xor
aad
xor
and
fldenv
inc
in
mov
xorps
mov
leave
or
scas
xor
jmp
stc
cmp
pop
pop
pop
jae
dec
lock
icebp
ja
mov
ljmp
mov
add
aaa
inc
or
shll
add
adc
mov
or
and
dec
repnz
adc
and
or
xchg
cmp
int
das
sbb
sahf
stc
mov
jecxz
cmp
outsb
rorl
fstl
pusha
je
sbb
dec
stos
rclb
int
fwait
mov
popa
add
sbb
push
daa
pop
test
iret
jg
add
inc
lods
pop
xor
insb
lds
pusha
rcr
mov
rclb
out
cmp
add
cmc
dec
xchg
push
fnstcw
hlt
lock
test
push
movsl
xchg
ss
ljmp
aam
leave
test
out
fdivrl
sbb
mov
adc
xchg
xchg
das
daa
sub
mov
sti
add
sub
mov
dec
ret
pop
jae
xchg
and
leave
mov
dec
repz
mov
jp
int
mov
cli
hlt
xor
ret
scas
mov
gs
push
push
mov
mov
test
sar
pop
mov
repnz
ret
scas
jg
sub
sub
sbb
push
cmp
rcl
sub
jnp
out
daa
incb
xor
inc
pushf
out
aaa
xor
or
repnz
sbb
pop
imul
jecxz
mov
lahf
out
lret
pop
out
sbb
adc
xchg
pusha
push
mov
es
mov
mov
jbe
xor
in
push
in
mov
popf
enter
mov
push
xchg
xor
ljmp
inc
jecxz
jp
inc
rcl
int3
mov
loope
xor
cmp
ficomps
ret
xor
mov
add
cli
pop
push
inc
imul
cmp
fs
mov
addr16
inc
xor
xchg
mov
cmpsb
pushw
mov
jne
or
dec
adc
mov
popl
pop
fnstsw
push
clc
rcrl
pop
xchg
cmp
out
xor
lods
dec
xor
insl
aas
in
fistps
imul
adc
mov
mov
xchg
inc
mov
dec
mov
cli
es
push
inc
mov
in
test
test
movsl
jmp
pop
les
insb
into
outsl
cmp
nop
inc
xchg
fbstp
jg
dec
ret
and
fneni(8087
adc
push
call
enter
inc
xor
add
jae
test
sbb
sub
add
xchg
sub
loopne
shrb
xor
dec
das
sub
aaa
jbe
xchg
pop
pop
sub
dec
cwtl
mov
push
pushf
lds
scas
out
inc
mov
pop
sbb
aaa
stos
mov
mov
addr16
jne
pop
sbb
jnp
rolb
popa
mov
outsb
inc
sbb
nop
out
mov
jle
sbb
cmp
mov
lds
lods
filds
and
daa
ficomps
dec
mov
sbb
inc
enter
cmp
sti
test
sbb
mov
sbb
rclb
sbb
sbb
in
mov
jecxz
cmpsb
into
ss
mov
xchg
fildll
test
dec
lret
mov
gs
lods
and
jo
mov
rorl
arpl
xlat
scas
mov
jnp
mov
jne
pushf
mov
orb
test
repnz
shrb
mov
sub
into
push
adc
nop
push
es
mov
xchg
fsts
js
xchg
aaa
add
hlt
arpl
mov
push
jo
rcll
les
xor
push
dec
orb
xchg
std
xor
stc
adc
andb
int3
lds
movsb
dec
mov
add
dec
xchg
dec
data16
mov
mov
mov
pop
and
mov
rcl
adc
stos
fisttpl
sarl
xchg
push
jmp
mov
add
mov
popa
push
out
popl
inc
mov
fs
jle
sbb
std
ret
cmp
cwtl
pop
movsb
sbb
inc
fistps
adc
jbe
xchg
xor
cwtl
imul
in
inc
cmpsl
iret
aas
mov
or
xor
es
filds
nop
clc
push
arpl
jns
push
cld
jmp
stos
test
js
cltd
adc
repnz
stos
mov
mov
icebp
cmp
stos
sub
or
lcall
push
sub
jmp
jmp
fildl
movb
iret
divl
mov
cmpsl
cmp
mov
movsb
out
lret
xor
jb
pop
ljmp
stc
pushf
and
add
fucomi
xor
jns
lahf
push
add
xlat
rorl
xorl
nop
pop
dec
jo
fwait
mov
dec
inc
or
adc
stc
js
adc
dec
cltd
daa
bound
inc
jns
inc
insl
and
nopl
icebp
mov
dec
test
sbb
fcmovbe
pop
rcrl
cltd
js
sarb
cmp
xlat
insb
roll
repz
inc
filds
push
pop
sub
js
sub
xlat
push
cs
dec
pushf
add
sub
cli
test
xchg
mov
mov
lret
jle
lret
sub
pop
dec
push
mov
mov
adc
pushf
rol
push
push
cmp
mov
dec
ret
cltd
das
sub
dec
mov
bound
loopne
shl
ja
test
sbb
or
mov
push
and
leave
push
add
in
inc
sbb
sbb
fnstcw
dec
dec
add
lret
mov
aam
shlb
jbe
or
out
cmp
stc
in
mov
ljmp
movl
xor
pop
jge
and
xor
in
mov
dec
addl
push
aaa
dec
stos
jne
test
test
bound
loop
pop
inc
jl
pop
stos
sbb
sbb
mov
jnp
mov
or
add
jecxz
bound
cmp
adc
lahf
push
mov
mov
mov
dec
pop
aaa
lods
mov
jge
fmuls
data16
out
mov
push
inc
inc
jnp
scas
adc
cmp
sub
dec
fldenv
call
icebp
out
pop
jg
cltd
inc
dec
out
adc
jge
cmp
call
rorl
mov
subb
leave
mov
ljmp
in
ljmp
mov
jmp
pop
call
pop
cmp
leave
xor
cltd
pop
xchg
aaa
test
dec
push
cmp
std
loopne
ds
sub
ljmp
mov
test
pusha
mov
ja
adc
mov
enter
xchg
cld
sub
jp
lea
addb
insl
stos
push
pop
push
fwait
mov
ljmp
adc
stc
xchg
sub
orb
movsb
cmp
inc
dec
add
push
rcr
inc
jnp
mov
call
stc
pop
int3
xchg
xchg
mov
cmp
sub
sub
test
mov
push
sub
jnp
mov
jo
out
inc
cwtl
insl
cmp
xor
mov
mov
pushf
int
add
js
mov
inc
inc
pop
sbb
add
scas
cli
xor
xchg
scas
add
data16
mov
dec
xchg
sbb
loope
in
jecxz
pop
ja
arpl
scas
lea
cmp
sub
mov
push
jp
fistl
lret
mov
or
pusha
loope
shl
insb
jno
loope
test
add
xchg
imul
sti
adc
add
idiv
fdivs
iret
fwait
and
push
stos
pop
cwtl
cs
mov
push
popf
sahf
ds
mov
ds
adc
add
xchg
lock
data16
out
xor
imul
pop
pop
or
push
mov
xor
inc
pop
xchg
inc
movsl
inc
aam
loope,pt
adc
adc
mov
clc
pop
xchg
and
push
rcl
cwtl
xchg
sub
or
outsb
dec
cli
jbe
orb
movsl
shlb
mov
ret
icebp
push
or
jae
mov
test
call
cmp
mov
cwtl
jmp
mov
popf
adc
push
jl
pop
and
rol
stos
movsb
test
fstpt
sbb
mov
jecxz
enter
std
int
pop
cmp
xor
dec
in
fmull
ja
mov
sbb
and
inc
mov
push
imul
in
enter
cmp
jmp
or
lock
lods
xor
out
lret
popf
in
aaa
rcrl
jne
fcompl
fdivrl
pop
fs
xchg
pusha
mov
mov
outsb
insb
pop
gs
inc
cmp
mov
and
mov
dec
jbe
jnp
insb
mov
sbb
mov
int3
fiadds
fxtract
daa
or
sbb
mov
int
int3
leave
aas
out
pop
lret
sub
idivb
xorb
inc
mov
out
adc
adc
push
dec
lods
lret
lds
cmpl
mov
pop
xchg
in
xor
in
ds
pushf
or
push
push
sbb
mov
jmp
xor
loopne
ljmp
call
imul
jg
add
inc
fs
sub
ror
mov
lea
cmp
xor
mov
out
lds
jge
push
cmp
cmp
jle
xchg
jecxz
or
pop
dec
lds
jae
aas
call
mov
lcall
jbe
int
iret
mov
jno
loop
inc
inc
pop
xor
out
sbb
cmc
xchg
icebp
je
xor
push
imul
push
cmp
or
pop
mov
cmp
mov
jmp
push
adc
sub
fwait
sub
outsb
not
mov
xor
add
sub
and
xor
call
cmpsl
incl
movl
add
sub
sti
les
idivb
movsl
js
jmp
inc
and
cwtl
dec
int3
sbb
call
fidivrs
jge
adc
jne
lret
adc
sub
inc
inc
into
rcrl
mov
popa
mov
iret
cmpsb
mov
shll
xchg
pop
sti
mov
testl
cmpl
xchg
testl
sub
push
inc
int3
mov
add
push
add
pop
ss
add
or
int
pop
dec
outsl
icebp
es
roll
mov
lods
pushf
cltd
pop
aaa
lods
sbb
leave
adc
fsubl
pushf
lods
pop
test
fs
sub
xchg
jbe
pop
mov
pop
dec
mov
dec
fdivl
rolb
dec
dec
push
mov
push
mov
sub
jmp
outsb
sub
lock
adc
and
data16
ja
mov
rorb
inc
dec
add
jns
rorl
outsl
add
outsb
sub
repz
ljmp
jle
mov
lret
test
fwait
test
loop
add
cmc
xor
mov
push
fwait
cmp
jle
pop
insb
or
jp
sbb
pushf
mov
add
cwtl
pop
arpl
sar
jae
sbb
mov
jg
xchg
aas
mov
repz
cmp
pop
in
cltd
push
inc
xchg
pushf
inc
xor
pop
loope
jg
or
jne
lret
push
fwait
leave
xor
xchg
mov
imul
xchg
fsts
push
lahf
push
orb
mov
rcrb
sbb
daa
sbb
lahf
xchg
inc
jns
in
or
inc
daa
push
mov
push
out
clc
pop
jmp
testl
add
pusha
and
fcmovb
jge
std
pop
ja
dec
ret
cmpsb
dec
push
push
pop
mov
dec
scas
jmp
ja
sarb
adc
popf
inc
adc
adc
fiadds
add
sub
and
enter
or
ss
jbe
xlat
add
add
sub
push
push
or
pop
cltd
adc
aad
popa
scas
mov
lea
out
mov
or
inc
mov
dec
mov
xor
fisubrl
pop
sbb
arpl
cmp
mov
fidivrl
movsl
mov
mov
inc
dec
fnsave
into
repz
lds
nop
mov
dec
xor
scas
in
sbb
lcall
push
inc
jecxz
adc
in
mov
rorl
movsb
mov
mov
nop
adc
mov
adc
aam
add
repz
and
push
sub
adc
cwtl
into
mov
pop
sub
xor
dec
jbe
pop
int3
div
cli
cmpsl
push
dec
jnp
pop
add
jno
iret
mov
out
repz
mov
sbb
stos
lret
lock
test
inc
pop
push
push
xchg
pop
es
push
movsl
push
push
xchg
mov
jne
pop
clc
xchg
push
inc
xchg
sub
push
pop
add
jnp
imul
xchg
mov
inc
notl
or
sar
mov
jg
out
inc
mov
and
push
push
xor
or
movsb
mov
xchg
add
jo
jmp
adc
push
xlat
or
in
jne
loope
adc
pop
jg
mov
test
mov
dec
sub
and
lods
daa
mov
dec
scas
fdivrl
cmp
adc
call
cmp
inc
add
mov
sbb
das
movsl
jb
sbb
ret
pop
movsb
lret
adc
lds
dec
shll
pop
scas
in
pop
cmp
cltd
push
xor
or
cmp
and
orl
in
out
jmp
pop
imul
pop
insl
dec
jb
sbb
cs
je
push
addr16
push
out
sahf
pop
ret
jle
and
pop
jne
sub
pop
mov
nop
mov
jmp
lods
mov
dec
xchg
xchg
xor
bound
and
insl
inc
cmc
pop
fucomi
cmp
mov
or
out
call
sbb
pop
dec
mov
ret
dec
repnz
sar
xor
das
lds
stos
mov
mov
xchg
subb
das
add
xchg
jge
xchg
andl
adc
lock
xchg
sbb
fisttps
xor
out
idivb
adc
movsb
pushf
push
cmp
sti
jle
adc
or
mov
pop
and
adc
js
xor
mov
push
test
pop
out
inc
and
mov
hlt
fisttpl
sub
dec
ret
cmp
popf
repz
in
ss
sbb
les
adc
xor
les
mov
push
and
dec
sahf
add
adc
gs
cmp
imul
out
push
cmp
sub
clc
push
popa
xor
add
inc
xlat
add
inc
ss
in
mov
jb
movsb
fstpt
fnstenv
dec
leave
inc
ficomps
xchg
fcmovne
mov
sarb
push
fstps
push
hlt
mov
scas
push
inc
cld
or
shlb
dec
xchg
cmp
leave
stos
stc
popf
mov
cmp
xchg
xchg
das
cmp
and
sub
es
fisubs
lcall
push
adc
adc
pop
jl
cmp
cmpsl
or
popf
fidivrs
cli
push
in
iret
pop
and
jbe
and
add
mov
das
and
data16
xor
jae
mov
test
movsb
mov
testl
loop
shll
pusha
das
cs
outsb
cld
lret
out
and
sbb
mov
xor
decl
pushf
push
into
dec
mov
sub
adc
and
mov
maxps
fsts
ret
xchg
mov
cmpsb
hlt
pop
add
ljmp
adc
shl
mov
inc
adc
adc
push
jecxz
push
cwtl
scas
out
lret
call
mov
adc
mov
mov
jno
mov
ljmp
addr16
sahf
and
out
jb
cmp
iret
and
ss
inc
push
xchg
xor
test
push
pop
repz
sbb
aas
aas
loopne
pop
fcmovbe
sub
dec
adc
movb
hlt
jp
ja
dec
inc
shll
iret
xchg
pop
aas
pop
pop
or
shrl
roll
movsb
add
movsl
loope
in
flds
fistpll
sbb
addr16
cmp
mov
inc
jg
cld
mov
pop
pop
or
rcll
mov
xor
cmp
loope
stos
xchg
and
jle
repnz
sti
mov
aaa
jbe
lahf
sub
mov
xchg
pop
add
cmp
jnp
mov
sbb
mov
jo
in
addl
scas
fucomi
sub
jo
fsubrs
adc
mov
stos
mov
into
lods
and
cli
out
out
mov
dec
ret
fdivr
push
sbb
test
ja
testb
aas
test
xchg
out
bound
data16
cmp
lret
mov
je
pop
cli
add
or
test
movsb
pop
loope
inc
mov
sub
mov
mov
push
sbb
enter
fdiv
xor
fidivl
movsl
arpl
sub
cltd
push
push
xchg
andb
decb
push
jae
sbb
das
insb
dec
add
loop
repnz
shlb
mov
and
dec
xor
push
mov
push
mov
into
sbbb
xchg
mov
fwait
or
mov
sub
mov
xor
cmp
sbb
mov
jmp
outsb
aaa
out
push
sbb
rcll
popf
mov
cmp
mov
xchg
in
test
sub
addr16
maxps
clc
fwait
ja
daa
or
jbe
xchg
mov
pop
inc
push
pop
rclb
andb
xor
mov
stos
aas
mov
test
inc
idiv
mov
and
aam
mov
dec
jo
sar
ds
mov
ret
or
incb
cmp
pusha
lret
mov
xor
movsl
loope
cld
xchg
int
filds
jg
mov
sahf
and
xor
mov
jmp
hlt
negb
insl
jns
stc
movsb
xchg
xorl
push
dec
add
pop
mov
in
ret
jo
pushf
and
mov
imulb
lods
pop
fsts
dec
adc
imull
ja
ss
stc
xchg
in
mov
daa
jnp
xor
ror
lahf
loopne
jp
sbb
divl
lret
mov
sub
fucomip
push
nop
or
pop
add
sarl
xor
add
and
call
mov
orl
push
mov
pop
cmp
out
test
push
fistl
mov
pop
lret
ss
outsl
push
out
pop
les
sub
mov
sarl
pusha
je
dec
data16
aam
mov
jnp
dec
lods
ja
fdivrl
cmp
mov
xchg
add
shl
lcall
sub
aaa
inc
scas
pop
ss
mov
jns
shll
adc
ja
jecxz
int
jno
cmp
aad
mov
pop
pop
jno
mov
adc
sbb
scas
and
je
fdiv
shrl
xchg
jmp
cli
scas
mov
leave
mov
and
mov
sub
jae
lea
jle
dec
dec
mov
test
inc
push
stos
pop
pushf
lret
pop
mov
and
das
rolb
dec
in
pop
fistps
mov
popf
into
or
cmp
daa
mov
fstpl
aas
cli
jne
sub
scas
ds
push
fs
mov
loope
stos
lret
inc
mov
je
in
sub
add
inc
loop
pop
mov
dec
mov
ljmp
lds
seto
jecxz
pop
jl
push
push
inc
fisubs
mov
inc
jl
cmpsb
and
xchg
cmp
shrb
pushf
mov
cmpsl
hlt
inc
pop
and
popf
sar
mov
xor
mov
aas
arpl
jns
jbe
inc
and
ss
mov
outsb
cmp
sub
jmp
inc
push
xchg
or
clc
cmpsb
pop
insb
aas
dec
inc
pusha
test
fisttps
push
lret
push
insb
sub
mov
push
ret
scas
and
gs
fstpt
xor
cli
mov
subl
data16
mov
mov
lret
movsl
adc
or
mov
push
andl
sub
sub
sti
add
insl
push
push
loopne
xchg
ljmp
mov
lcall
inc
rorl
cmp
stc
stc
into
mov
fcoml
repz
ss
cmpsb
and
stos
sbbb
sub
adcl
pop
push
sbb
pop
arpl
out
mov
addl
aam
repnz
xchg
les
adc
xor
inc
ret
xchg
push
mov
insl
inc
cli
pop
frstor
aad
outsb
push
xchg
out
jle
lahf
push
leave
mov
and
dec
add
aaa
cmp
push
lds
jnp
stos
aaa
cli
pop
cmp
cmpsl
fcmovnbe
jbe
pop
xchg
jne
iret
arpl
xchg
xchg
popa
std
inc
adc
dec
into
dec
sub
dec
hlt
jle
or
mov
ja
mov
pop
xchg
ret
cmc
loop
enter
sti
inc
dec
fwait
sahf
jb
inc
mov
test
xchg
ret
cmp
repnz
scas
pxor
mov
out
ret
adc
add
mov
outsl
push
sub
push
and
je
arpl
fadds
xor
loop
sub
lret
icebp
cmp
and
sub
mov
into
cmc
xchg
push
xor
imul
es
xchg
retw
mov
frstor
xor
movsl
adc
cmp
nop
or
out
xchg
test
adc
test
inc
test
leave
jmp
sbb
fistl
jns
mov
test
dec
cmpsb
call
dec
aas
mov
ds
mov
scas
xor
outsb
fidivl
jmp
jno
mov
or
aad
adc
or
ret
popf
jle
movsb
test
and
negb
pop
dec
or
cmp
aaa
or
jge
leave
cmp
dec
mov
sub
jb
push
and
jo
sahf
arpl
popf
int3
sbb
gs
mov
test
jmp
dec
mov
bound
jbe
sbbb
jo
xchg
ss
jmp
sub
stos
pushf
mov
sbb
arpl
lret
mov
jbe
pop
push
fistl
leave
mov
fld
sti
in
push
sbb
jne
sub
sahf
popf
jg
dec
or
mov
adc
dec
mov
jmp
lods
cltd
xor
int3
mov
and
push
inc
pop
pop
inc
jge
mov
xchg
mov
test
fstpl
jl
std
mov
sbb
xor
jmp
and
imul
les
or
mov
stos
sar
sarl
sbb
fs
or
or
pop
mov
jle
out
sub
out
mov
bound
sbb
adc
mov
cmp
fldl
fwait
test
mov
mov
fistl
mov
jb
jno
push
insl
es
pop
cmp
leave
out
aam
outsb
bound
jle
sbb
adc
xor
jb
cmpl
mov
sbb
fiaddl
stos
insl
lcall
push
push
sbb
fs
cld
pop
lret
push
lcall
bound
cli
pusha
add
lcall
mov
cld
aas
inc
loopne
mov
jnp
lds
dec
sbb
test
jle
data16
adc
nop
shlb
add
mov
pusha
sub
dec
cld
mov
in
push
roll
mov
push
cmp
fsts
push
xchg
xorb
add
lea
jmp
adc
jo
push
push
jg
pushf
test
inc
dec
dec
je
nop
sti
lret
les
push
test
push
fwait
jo
lods
ficoml
inc
pop
fwait
push
adc
daa
cld
push
sbb
or
scas
xor
mov
mov
loope
mov
je
lock
inc
push
and
mov
sbb
push
in
mov
jmp
jnp
adc
lock
sub
and
lds
divb
and
mov
ret
inc
sbb
and
fbstp
imul
movsb
int
fbld
push
jae
xor
in
cmpsl
xor
inc
add
add
lock
inc
bound
rcrb
mov
mov
mov
inc
mov
sahf
lret
and
pop
and
sub
jns
sub
inc
std
and
xchg
jno
adcl
pushf
xor
in
and
arpl
roll
mov
pop
lock
xor
nop
and
push
pop
xorl
jne
inc
add
cmpsb
lea
sbb
daa
movsb
dec
pop
jge
inc
jle
adc
xor
and
jmp
jns
pop
pop
addb
xchg
fsubrs
loopne
inc
inc
scas
test
iret
pop
dec
mov
or
testl
adc
pop
xor
dec
add
in
lods
dec
ret
dec
stos
test
loopne
lea
push
pop
jecxz
mov
pop
adc
inc
andl
shrl
cmpsb
pop
pushf
jne
pusha
es
popa
ret
mov
stos
rcr
pop
dec
lahf
int
es
dec
imul
divb
add
xchg
jns
jp
subl
roll
fnsave
sub
lds
xor
push
lock
out
pusha
lcall
mov
int
nop
js
sub
and
fs
push
or
pop
sbb
jbe
popa
icebp
sub
and
or
cwtl
out
xlat
js
in
jo
es
sbb
addl
je
jne
pop
mov
pop
mov
and
add
rcrl
cmp
sbb
lock
dec
movsb
dec
add
dec
pusha
and
sub
arpl
inc
rclb
mov
cmp
into
into
inc
out
sub
les
jle
sub
data16
inc
stc
fs
data16
push
cmpsb
cmp
fidivs
mov
adc
sahf
xchg
rolb
in
jnp
dec
into
add
leave
and
xchg
stos
adc
pop
mov
into
hlt
insb
mov
loopne
and
insl
mov
xchg
pop
lods
fnstsw
insl
nop
cmpsl
jae
add
inc
lods
in
repnz
sub
xor
dec
sub
xor
sub
cmp
js
jne
xchg
dec
mov
nop
fwait
or
lods
scas
mov
je
inc
mov
or
fs
xchg
xchg
and
test
sub
test
push
push
dec
in
and
mov
std
jo
enter
leave
outsl
or
in
fildl
add
jecxz
lahf
orl
and
push
loop
fsubr
push
dec
iret
imul
mov
dec
push
movsb
lods
cmp
adc
mov
xchg
adc
loope
hlt
push
cmpsb
mov
lea
outsb
add
pop
arpl
or
jl
popa
pusha
push
fsubrs
cmovle
mov
xchg
hlt
xor
jo
movsl
sub
inc
clc
lcall
lahf
fstpt
mov
cs
sub
mov
xchg
dec
jbe
fidivrs
cwtl
into
lods
imul
push
mov
and
pop
icebp
sub
insl
jg
cmp
push
fwait
adc
and
xchg
btr
xor
sbb
call
ja
repnz
adc
pop
pop
pop
jg
out
cmpsl
add
xor
inc
rorl
fdivrs
fs
sub
add
divb
stc
cltd
enter
mov
xor
mov
ss
lds
lret
stos
or
es
int3
aam
pop
xchg
js
imul
fbld
shll
nop
xchg
aaa
xchg
jmp
pop
jg
movb
negb
in
dec
test
xor
aas
jnp
pusha
cmpsl
adc
pop
push
mov
data16
les
mov
or
popl
push
out
movsb
rcr
pop
fadds
popa
mov
cld
jmp
adc
data16
aas
sub
das
dec
xchg
xchg
test
movsl
arpl
lret
ret
push
jmp
cld
ljmp
jbe
ljmp
clc
xor
sbb
or
xchg
outsb
xor
sbb
dec
into
dec
lret
cmp
scas
jb
push
stos
int
jbe
mov
cli
inc
or
push
xchg
in
test
mov
imul
xchg
jo
add
les
or
xor
dec
call
out
mov
xor
mov
dec
add
mov
movsb
jns
xor
sub
sbb
in
add
jg
icebp
les
or
xchg
fcoms
addr16
mov
enter
fisubrl
outsl
cmpsl
testb
mov
hlt
inc
mov
cmpl
mov
or
or
call
int
rorl
clc
lahf
jg
andl
in
mov
orl
push
xor
movsl
stos
cmpsl
aad
loop
cmp
mov
sub
insl
cmp
pop
cltd
mov
pop
xchg
xorl
push
jne
pop
lcall
out
pushf
cmc
stc
cmp
sub
scas
sub
mov
icebp
in
pop
sub
jnp
mov
mov
scas
loop
inc
daa
ficomps
xchg
mov
jae
inc
cmp
sahf
push
dec
sahf
jae
dec
add
xchg
add
pop
insb
sub
and
cmp
cli
and
jl
jb
jbe
push
out
dec
xchg
jnp
jle
pop
lahf
mov
cmp
bound
popa
rolb
shl
cltd
sbb
mov
fsub
mov
ret
inc
lret
shl
add
and
imul
outsb
push
incb
lea
pop
cmp
inc
aad
cli
data16
popa
mov
lods
btr
sub
nop
fisttps
inc
in
xlat
push
mov
adc
mov
jnp
lahf
adc
mov
daa
std
xchg
xor
jecxz
hlt
nop
xor
push
and
rorl
mov
push
adc
xor
fnstenv
dec
sbb
gs
jno
out
push
or
aas
in
loop
jne
or
adcl
mov
push
outsb
dec
ds
sub
aam
pop
sbb
adc
scas
ret
xor
push
mov
pop
xchg
pushf
mov
adcb
aas
mov
mov
add
jbe
adc
add
xlat
xchg
jno
mov
xchg
pop
cmpsl
push
stc
adc
fsts
mov
lretw
rcrl
gs
or
inc
fldt
or
push
push
dec
push
xchg
and
movsb
push
add
and
add
movsl
aaa
fisubl
pop
mov
js
push
bound
cmp
xor
push
pop
xor
mov
inc
add
mov
femms
add
in
stos
push
xchg
stos
and
adc
inc
pop
movsb
pop
into
lret
xor
jle
pop
imul
pop
xor
imul
mov
shlb
icebp
arpl
in
xor
adc
ret
sub
xchg
insl
xor
popf
dec
and
sub
call
pop
dec
sbb
sbb
xchg
ljmp
stos
mov
push
cbtw
xor
push
xor
push
mov
xchg
and
mov
sarb
insb
mov
rcpps
call
subb
aaa
aaa
dec
pop
idivb
imul
fstps
cltd
fisttps
xor
dec
jmp
imul
xchg
adc
in
sbb
int
ljmp
cmp
sbb
mov
outsl
hlt
js
scas
push
sbb
stc
lock
mov
ljmp
jnp
cld
imul
or
loop
icebp
sbb
xchg
push
out
pushf
adc
xor
cmp
pop
push
mov
scas
in
pop
fs
inc
ds
or
lcall
push
push
repnz
loop
std
xchg
adc
dec
jns
inc
movsl
pop
sahf
lock
movsl
ljmp
sub
scas
cmp
dec
xor
and
pop
cmc
pop
scas
test
lcall
aas
jo
xor
mov
jnp
cld
inc
repnz
mov
stos
xlat
pop
aam
loope
scas
nop
xor
pop
sub
nop
insl
and
test
es
inc
mov
mov
adc
data16
dec
jecxz
popf
stc
mov
mov
or
xor
fildll
xlat
sub
aas
cmp
or
lret
mov
pop
cmp
nop
mov
ret
jecxz
shr
rcll
adc
sahf
lret
cmp
scas
sbb
pop
push
sbb
xor
mov
xorl
xchg
int3
dec
or
sbb
dec
and
icebp
cmp
sti
adc
sub
xchg
pop
daa
mov
jbe
ds
movsb
jbe
outsl
lret
outsb
ja
jo
popf
sti
pop
daa
xor
ficoms
aam
mov
fsubrp
test
mov
jnp
dec
push
inc
push
sti
stos
mov
enter
aaa
inc
mov
movsl
loope
int
add
dec
pop
dec
xchg
cltd
mov
mov
cmp
out
andb
stos
add
xchg
or
fld
aaa
and
dec
sub
jmp
pop
insl
mull
and
fldl
mov
push
aam
pop
push
inc
mov
pushf
jb
lods
dec
mov
jb
and
jmp
jmp
pop
lret
popa
dec
jmp
or
loopne
jecxz
pop
push
or
sbb
jo,pt
insb
cmp
xorl
mov
jb
in
dec
pushf
arpl
push
rol
scas
mov
sbb
pop
pusha
sub
xchg
into
sti
in
pop
daa
jmp
aam
insl
sbb
xor
add
call
ss
mov
loopne
jge
test
lock
jecxz
neg
mov
sbb
mov
add
jae
jle
add
ljmp
cmp
fcomps
xor
pop
and
xchg
popa
es
inc
aaa
jmp
insb
xor
adc
push
pop
imul
adc
mov
dec
jno
pop
pop
and
andl
jecxz
pop
fistpl
clc
sub
sbb
mov
mov
inc
std
popa
rolb
jno
fwait
jmp
push
scas
fbld
sarb
and
and
aas
pop
mov
push
jmp
fsts
fisubrl
jg
push
addr16
jecxz
jnp
sbb
lea
in
insl
add
and
iret
subl
and
pop
dec
shlb
popf
adc
mov
adc
pop
bound
xchg
ja
out
ret
inc
mov
adc
push
or
push
xor
adc
pop
jne
repnz
jb
dec
stc
lcall
adc
push
adc
cmp
mov
shll
and
mov
imul
int
cli
pop
cwtl
mov
jns
sahf
xlat
bound
fisttps
ds
ja
out
mov
mov
notb
in
lock
cli
inc
dec
dec
xor
sbb
push
iret
outsb
imulb
jne
pop
adc
insb
xlat
mov
lods
cmp
xchg
adc
pop
icebp
fadd
jge
push
pop
jecxz
sbb
gs
ret
add
jo
dec
xchg
mov
xor
out
inc
sbb
or
cmp
mov
repz
mov
icebp
ret
mov
mov
lcall
dec
shrl
icebp
sbb
or
stc
sub
int
insb
lds
push
mov
jl
adc
js
inc
cltd
movsb
stos
push
es
mov
add
mov
test
push
jae
push
fbstp
adc
mov
add
and
mov
sub
and
stc
mov
xorl
or
add
xlat
mov
jp
pop
mov
sti
mov
mov
mov
outsl
outsl
adc
push
mov
push
clc
imul
out
fidivl
inc
out
add
shl
leave
or
shll
jbe
lods
sub
sbb
push
push
push
or
arpl
sub
lds
add
shll
mov
imul
sbb
push
call
pushf
adc
and
std
sub
pop
jae
add
push
mov
adc
push
mov
incl
stc
loop
fistpll
mov
or
pop
add
push
scas
mov
lret
movsl
jle
mov
jae
and
mov
jle
cmp
in
xchg
jl
xor
adc
arpl
sarl
fcom
mov
or
and
xorl
movb
pop
cmp
xchg
push
sub
fst
lret
adc
add
pop
push
lcall
cmpsb
aas
cmp
add
dec
fdiv
xlat
mov
call
mov
mov
aad
adc
mov
popa
das
sub
and
sbb
sub
xchg
xchg
xchg
mov
rcll
add
nop
or
add
aam
test
fwait
sbbb
xchg
cmp
jo
adc
fwait
xchg
pop
outsb
push
dec
lds
cltd
cmp
pop
sub
lock
hlt
call
loope
leave
lret
mov
fnstenv
push
xchg
fwait
sub
negl
add
xor
imul
xchg
lahf
xchg
iret
lcall
push
push
sarl
fwait
int
outsb
repnz
jp
sub
aam
pop
orb
clc
jo
icebp
add
pushf
lahf
inc
push
cwtl
mov
sub
mov
push
insl
mov
jg
ds
or
les
es
inc
lea
icebp
ja
adc
cmpsb
jbe
dec
or
mov
inc
rcrl
sbb
mov
sahf
loop
adc
lods
add
mov
inc
and
pop
idivl
in
rcll
cli
adc
dec
sahf
add
xchg
ret
push
mov
push
adcb
mov
adc
popf
mov
lods
adc
xor
out
xor
or
sbb
add
jns
mov
push
dec
stos
ss
repnz
lea
sub
add
and
movsb
pushf
push
test
xlat
repz
fs
or
jg
mov
shlb
push
jl
popf
sub
popf
addr16
outsl
add
push
mov
pop
push
out
or
push
push
add
std
mov
cwtl
ds
mov
test
ja
imul
xor
and
adcb
dec
cmpsb
or
lret
push
xor
rclb
mov
loopne
push
in
sti
stos
adc
jp
mov
cwtl
stos
fists
test
adc
inc
cmp
xchg
sbb
mov
and
pushf
push
pop
pop
stc
pushf
es
inc
jg
inc
stos
push
fadds
inc
and
imul
pop
gs
push
cli
cmc
ljmp
out
ret
notb
addb
jno
and
cld
sbb
lods
lods
addr16
mov
das
cld
jge
xchg
sbb
fcomps
jo
inc
rclb
and
sub
dec
fstps
imul
test
mov
jno
aaa
call
inc
lcall
dec
mul
adc
cmp
lds
xchg
decl
add
icebp
add
lods
rcrb
sub
adc
mov
sbb
inc
jge
add
daa
pop
fsub
adc
movsl
add
xor
or
dec
imul
dec
mov
sbb
lahf
jo
scas
xor
movsb
mov
mov
jne
sub
and
mov
lret
test
sbb
mov
ffreep
inc
pop
xchg
ja
lods
pop
xchg
stc
ficoms
shrb
sub
mov
pop
leave
in
cmp
mov
sub
sub
popa
fcomps
dec
ds
call
loope
repz
ja
sub
mov
stos
xchg
shlb
test
test
push
es
in
or
mov
inc
nop
jl
lcall
cli
out
adc
cmpb
xchg
fsts
ffree
cmp
outsb
jne
fucomi
lock
inc
fsub
imul
lock
xor
negl
rorl
add
insl
mov
cmp
push
push
push
mov
dec
fnsave
add
add
sti
cmpb
lock
adc
mov
pop
mov
shrb
sub
push
dec
aam
filds
dec
lods
idiv
sarb
addb
sub
jl
or
mov
js
lea
call
jo
div
inc
negl
push
inc
pop
and
adc
xor
or
cltd
pushf
rcl
mov
lret
dec
repnz
cli
repz
lods
sbb
fimuls
pop
push
imul
int3
add
pop
dec
cmp
or
sbb
jmp
addr16
flds
push
push
pop
sbb
mov
xor
jb
dec
lds
mov
aam
or
sub
shrl
pop
leave
push
repnz
out
push
push
mov
push
jmp
mov
xchg
inc
loope
mov
cltd
and
ja
movsb
add
mov
leave
test
cmp
and
int
or
pop
pop
in
push
dec
scas
push
in
jmp
test
dec
shl
fmull
sahf
ja
imul
loope
sti
sbb
push
xor
shr
lods
inc
jnp
mov
jmp
in
mov
pop
out
xchg
xor
pop
mov
mov
loopne
xor
jge
lcall
or
ljmp
xor
pushf
jl
inc
aas
sbb
dec
loop
push
sbb
into
lcall
pushf
jne
popf
cmpsb
or
push
adc
jg
xlat
inc
jle
dec
add
push
sbb
scas
adc
fnsave
inc
pop
xchg
dec
lret
ss
fisubrs
sbb
mov
inc
mov
xchg
or
or
inc
push
cmc
es
ret
add
sbb
jmp
lret
loopne
shrb
pop
ds
cld
adc
cwtl
lds
xlat
add
xor
insl
test
dec
enter
fwait
es
push
and
movsl
mov
pop
loopne
mov
sub
add
call
je
dec
mov
xor
sub
pusha
or
jnp
bound
test
sub
jnp
mov
jle
std
sbb
or
out
cmp
insb
fwait
xor
repz
sbb
out
loopne
scas
xchg
mov
fcmovbe
jbe
push
inc
hlt
pop
je
add
jge
insl
inc
scas
int
add
sti
xorl
or
incl
mov
sub
cli
aam
fs
xchg
sub
in
mov
sub
lcall
xor
movmskps
mul
in
and
adc
cwtl
insl
mov
std
sbb
mov
stc
arpl
and
sub
dec
loopne
ja
pop
in
repz
lock
in
gs
ret
out
xlat
jnp
push
or
cmp
xor
jo
adc
adc
or
pushf
jg
xchg
pusha
sub
fs
cmpsl
fcmovu
push
or
adc
sahf
in
or
push
movsb
int3
pop
jnp
pop
sbb
mov
call
stos
cmp
hlt
cs
test
push
sub
lahf
mov
xchg
popa
cmp
into
ljmp
das
and
or
gs
insl
mov
xlat
sbb
push
in
sahf
push
or
lods
dec
insb
mov
or
adc
movsl
faddl
out
insb
mov
mov
xor
jmp
cs
xchg
shrb
and
dec
std
mov
push
sbb
mov
push
shll
into
out
lods
xchg
icebp
nop
xchg
nop
and
dec
mov
xor
mov
push
movsb
movntps
pop
sbb
outsb
out
fisttps
xor
mov
jge
pop
filds
mov
out
stc
inc
sti
out
std
jge
jmp
into
push
fucom
mov
pop
adc
testb
add
ja
push
js
cmp
sbb
cmp
or
retw
cmp
mov
in
into
mov
insl
dec
shrl
enter
rcrl
xchg
xor
fcoml
mov
and
jge
add
cmp
pop
inc
outsb
xchg
sbb
loope
pop
js
ficompl
add
push
mov
pushf
cmc
xchg
push
and
repz
dec
movsb
pushf
test
in
xor
das
scas
push
inc
fcomp
clc
pop
push
aam
scas
pushf
pop
ficomps
inc
sbb
in
sbb
or
rcr
sub
lret
adc
sub
out
arpl
push
sub
icebp
dec
andb
lds
cmpsb
rclb
arpl
outsl
xchg
jnp
movsb
aaa
dec
dec
sbb
das
out
add
loopne
cmp
push
jnp
xor
mov
push
mov
xor
and
and
xor
loopne
daa
sub
sbb
jns
mov
lahf
loopne
jp
icebp
push
dec
adc
jb
jbe
push
mov
movsb
lock
xchg
jecxz
sub
rcll
sub
jae
dec
daa
jb
in
mov
inc
insl
stos
cmp
push
iret
xlat
iret
insb
je
popa
mov
loope
subl
mov
dec
jle
or
pop
sbb
sub
sbb
mov
insb
push
sbb
movsb
mov
shlb
or
mov
out
xchg
int3
adc
push
fidivrs
jns
jns
dec
xchg
lds
push
lcall
les
stc
or
inc
in
mov
jle
nop
xor
add
mov
jne
fwait
mov
jmp
lock
xor
rol
outsb
clc
and
scas
fdivs
scas
jno
mov
push
or
or
lods
into
icebp
out
xor
test
mov
in
out
jmp
outsl
cmp
test
lret
mov
fnstenv
push
rolb
xor
mov
hlt
push
push
inc
xor
pop
or
insb
inc
shl
inc
xchg
js
and
shrl
jae
xorl
call
rcrl
inc
hlt
dec
mov
pop
ss
ffreep
add
test
pusha
addr16
pushf
sbb
push
or
into
add
xor
imul
inc
shlb
xchg
icebp
pushf
or
in
xlat
mov
push
aad
ficomps
mov
cmp
add
mov
dec
xchg
add
outsb
push
xor
xchg
rol
dec
outsb
out
pop
aaa
in
add
cmp
ret
xor
out
xchg
stos
adc
and
sub
sahf
cmp
pusha
aad
inc
and
sub
or
lahf
mov
lret
and
push
or
mov
dec
out
out
adc
sub
lcall
addr16
mov
jge
pop
repz
aad
sbb
ret
addb
xor
mov
sarb
mov
shl
ret
fisttpl
mov
out
or
data16
adc
mov
jecxz
mov
cmp
pop
jmp
sub
lahf
rcr
mov
xlat
lahf
push
fdivr
fcmovbe
adc
es
scas
adc
sbb
repz
jbe
or
cmc
fisttpl
das
mov
sahf
add
or
mov
cmp
sbb
pop
xlat
lret
int
jbe
test
addr16
adc
mov
test
ret
pushf
mov
jo
add
push
xor
push
adc
pop
sbb
inc
lods
mov
xor
je
fsubrp
test
sbb
mov
mov
add
stos
fildll
sub
jle
xchg
stos
xor
test
cmp
insb
fwait
rolb
pop
stos
xchg
add
sbb
xlat
subb
sbb
xchg
mov
mov
pop
not
or
scas
xchg
aas
das
xor
ffreep
fiaddl
mov
inc
or
jmp
and
xchg
push
popf
cwtl
xor
cli
dec
or
mov
sub
dec
mov
push
addb
jmp
push
jge
aad
js
jbe
jp
dec
inc
xor
push
mov
aaa
xor
fld
cmc
mov
push
not
pop
fcmovnu
push
dec
jno
xchg
pop
out
cmpsl
push
jbe
in
mov
mov
jb
mov
jns
jl
inc
mov
iret
xchg
xchg
dec
and
pop
cwtl
sbb
mov
adc
push
sbb
or
sub
popa
dec
mov
test
pusha
fadd
xchg
shl
xor
and
fcompl
loope
icebp
mov
imul
sbb
loopne
pop
adc
adc
push
mov
adc
pop
dec
adc
and
es
div
jge
mov
pop
sti
stos
shl
and
mov
das
push
test
sbb
mov
icebp
mov
cld
jge
cmp
cmp
pop
cmpsb
lret
dec
stos
clc
jo
cmp
xchg
lock
mov
sbb
repnz
xchg
das
jmp
shlb
pop
adc
pop
add
mov
xor
lahf
gs
jp
ror
pop
cmp
ljmp
xor
lret
ret
or
decl
ret
jns
jle
movsb
xchg
hlt
incb
fsubrs
lret
cld
je
adc
jecxz
sti
ljmp
test
dec
je
int3
mov
inc
pop
xlat
jmp
fcmovu
push
inc
dec
insb
xlat
sbbl
shll
and
test
cld
or
mov
les
sbb
add
xorb
sbb
decl
jae
iret
jb
out
pop
or
pop
daa
inc
cld
into
and
ja
popa
jle
push
dec
lds
sub
push
shrl
push
mov
lahf
je
neg
cmp
sub
cmp
cld
add
stos
push
cmp
pop
lret
jmp
adc
movsl
es
incl
xor
and
xchg
aas
sbb
push
sarb
rcrl
mov
js
sbb
xchg
test
shrl
inc
mov
test
dec
std
shrb
mov
jns
xor
jb
cmp
sbbl
lcall
jno
fiadds
cmp
sub
xchg
or
fs
pop
xchg
push
pushf
add
pushf
test
int
cmp
push
pop
pushf
xchg
je
dec
icebp
fldcw
xchg
cs
daa
xchg
mov
xchg
xchg
sbb
scas
pop
clc
jnp
shlb
data16
sti
push
aaa
test
mov
lret
shr
jecxz
andb
ficoms
lret
inc
adc
add
cmp
xchg
sti
cmp
pop
inc
ljmp
dec
das
cmp
pop
adc
push
adc
loop
push
in
fldl
add
or
hlt
outsb
sub
enter
push
sahf
inc
mov
adc
aam
inc
dec
mov
nop
sti
pop
mov
das
mul
scas
fstsw
es
mov
jg
scas
fdivl
cmc
jge
jnp
inc
hlt
inc
cltd
mov
imul
ret
jns
lea
lea
test
popa
es
fisttps
sbbb
jb
pushl
mov
cwtl
jl
jb
sub
xchg
aam
pop
sbb
mul
rclb
test
pop
icebp
ds
test
clc
xor
pop
adc
add
lcall
jmp
pusha
adc
or
pop
mov
pop
xor
je
testb
or
xchg
ds
popa
push
or
xor
xorb
aad
push
or
out
push
inc
push
cwtl
cwtl
jbe
insl
cltd
pusha
mov
add
mov
mov
test
pop
das
leave
cmp
and
mov
mov
inc
xor
dec
and
sbb
cmp
mov
inc
xor
cwtl
notl
xchg
xor
xorl
popa
fildll
stos
mov
jl
test
sbb
pop
jnp
mov
jb
addr16
jge
inc
xor
inc
scas
adc
push
push
cmp
fisubrl
sahf
mov
add
movsb
sbb
js
inc
pop
mov
sub
mov
fldl
fidivrs
dec
data16
push
fildll
sbb
ror
xchg
pop
movsl
aas
cld
out
loopne
stos
jle
fistpl
scas
imul
cltd
rorl
xchg
mov
xor
ret
cmp
shll
or
xor
les
pop
adc
cmp
repnz
cld
sub
outsb
push
mov
dec
pop
sbb
mov
out
lcall
adc
in
sar
iret
repz
or
js
aam
or
test
or
orb
mov
and
in
call
push
insl
cmp
sub
push
popf
test
inc
push
aaa
lods
sub
mov
mov
ljmp
data16
orb
push
sahf
jnp
jae
mov
adc
adc
mov
int
es
in
out
aas
pop
idivl
lret
cmp
jnp
jno
inc
sbb
stos
int3
mov
cld
mov
fisubrl
mov
mov
fisttpl
scas
adc
fdivs
and
js
mov
fstl
and
mov
shl
jp
sub
add
rcrb
cli
test
aaa
ja
addb
and
adc
inc
jp
loope
pop
jo
adc
and
scas
pop
mov
jbe
js
out
cltd
ret
das
or
dec
inc
dec
lret
xchg
aad
stc
movb
ret
sub
mov
das
jmp
pop
mov
xor
push
in
fwait
into
or
outsb
addb
setp
sar
xor
sub
pop
and
pop
cmpl
mov
test
xchg
inc
imulb
pop
std
movsb
mov
cmp
add
sti
in
mov
mov
xchg
lcall
int3
mov
inc
nop
stos
sub
andb
rolb
inc
cmp
jo
cmp
jb
dec
sub
das
mov
mov
xor
pop
or
xlat
inc
xorl
xchg
jl
dec
imul
sti
das
xchg
outsb
cs
jno
orb
jg
movsb
xchg
inc
pop
bound
stos
adc
cmp
mov
shlb
outsl
mov
fisubs
jmp
xchg
and
push
es
cltd
xchg
insl
stos
add
repz
xor
mov
mov
fidivl
sbb
dec
add
xchg
ds
outsb
xchg
scas
mov
sti
cmp
jge
aam
sbbl
ss
aam
push
inc
cmpsb
in
dec
mov
cli
int3
subl
xchg
jne
adc
mov
cltd
sbb
testl
ud1
clc
mov
cld
cmpsb
lcall
arpl
repnz
stos
pop
lret
aaa
pop
inc
fsubl
and
cmpsb
lret
rclb
pop
jge
movsl
inc
lret
xorl
or
jg
rorb
sbb
jns
popa
test
bndstx
lea
mov
xlat
pop
xchg
push
mov
cs
xor
cli
push
mov
or
aaa
shl
bound
mov
fldt
movsb
in
sbb
xor
data16
pop
lahf
cmp
cmc
dec
call
pop
dec
inc
sbb
cs
divl
xorl
xor
out
pushf
pushf
pop
data16
jne
decb
fcmovu
arpl
cltd
adc
insb
sub
jnp
mov
add
popa
dec
adc
xor
es
inc
sbb
sub
xchg
or
sub
jno
jp
mov
fldl
mov
pop
sbb
leave
sbb
call
sbb
pusha
add
lea
jle
cmp
lret
pop
mov
push
mov
sbb
mov
out
adc
fistl
lret
loop
das
ljmp
mov
mov
xchg
cmpsl
popa
dec
stos
pop
push
std
push
lds
rolb
fmul
lret
cmp
in
hlt
loopne
mov
push
inc
ss
in
shll
mov
cmpsl
mov
push
fistps
and
gs
popa
sbb
pop
mov
mov
cmp
cmpsl
aas
mov
inc
sbb
in
add
ss
sar
test
mov
ss
sub
mov
mov
cmp
adc
xor
mov
adc
cli
enter
cwtl
inc
callw
inc
clc
or
lods
pop
or
imul
xchg
arpl
xchg
mov
aaa
dec
out
cmpsl
test
jecxz
jmp
scas
lahf
mov
mov
das
sub
pop
lret
push
add
fbstp
cwtl
push
cmp
dec
pop
stc
mov
adc
in
xor
pop
mov
scas
ljmp
cmp
mov
push
mov
mov
shr
sbb
pop
inc
push
loop
pop
xchg
nop
lods
imul
sahf
jmp
mov
mov
mov
imul
stos
mov
pop
cwtl
ret
xchg
es
rcll
mov
sbb
push
mov
je
or
inc
inc
lock
mov
movsl
xor
scas
popa
leave
jae
mov
addr16
dec
lods
jmp
adc
pop
cmp
out
mov
negl
iret
ret
lods
dec
pop
dec
pop
lret
repnz
leave
lods
adc
lret
pop
push
imul
pop
pusha
leave
ss
enter
sbb
orl
jbe
scas
lret
xchg
nop
or
fnstsw
cmp
sub
dec
push
or
xchg
insb
roll
jp
mov
mov
js
pop
pop
data16
divl
mov
jnp
adc
jle
mov
out
aas
cmpsb
dec
stc
mov
xchg
iret
mov
addr16
inc
or
xor
movsb
sub
mov
mov
sahf
pop
fbstp
mov
out
repz
dec
adcb
sti
lret
inc
push
xchg
addr16
mov
add
lcall
popf
jge
aas
cs
fsts
sbb
and
push
js
mov
push
repz
push
or
movsl
mov
in
xor
xlat
scas
daa
mov
movsl
sbb
test
das
xchg
xor
mov
push
hlt
outsl
dec
adc
out
pop
imul
lea
rol
insl
cmp
xchg
jl
repz
fisubs
leave
or
dec
sub
loop
lcall
cmp
add
loopne
rclb
lret
iret
inc
test
test
dec
xchg
jo
mov
mov
push
xchg
xor
insl
push
pop
mov
xchg
mov
mov
add
ljmp
sub
int3
xchg
mov
dec
and
in
cmp
lods
dec
in
movsl
cwtl
ljmp
jmp
cs
jle
repnz
in
mov
addb
dec
adc
add
mov
pop
lds
mov
repz
mov
iret
mov
and
out
int
push
push
clc
and
int
mov
lods
mov
daa
imul
clc
jl
dec
adc
dec
fcompl
hlt
cmp
sbb
addr16
mov
cmp
cwtl
xchg
fstpl
call
fwait
push
add
sbb
adc
xor
mov
and
mov
inc
scas
jmp
push
xchg
cmp
push
enter
stos
jl
insb
mov
addr16
mov
ljmp
push
fs
je
or
sub
push
mov
movsb
jmp
push
pop
and
scas
sti
pop
in
pushf
push
clc
sbb
lret
jl
imul
and
jmp
xchg
outsl
mov
test
dec
cmp
fistl
mov
push
sahf
jbe
adc
cmp
xchg
mov
dec
sahf
sbb
add
mov
loop
dec
adc
xchg
ror
push
and
dec
fsts
add
ret
mov
outsl
sbb
adc
pop
fwait
mov
adc
mov
add
mov
test
inc
inc
ja
inc
pop
rcll
lret
jbe
ds
in
std
lcall
test
cmp
inc
test
fbld
add
fnstsw
fs
xchg
dec
jecxz
adc
stos
mov
sbb
push
loope
push
mov
fiaddl
les
cvtpi2ps
lahf
push
push
mov
mov
in
adc
pop
ret
or
cmp
jae
xchg
xor
mov
in
ja
lret
out
and
lods
loope
rorl
xor
adc
shl
mov
lock
addl
xchg
imul
fsubrs
dec
int3
in
insl
les
and
inc
mov
rorb
push
inc
outsl
lds
lret
loopne
push
jb
and
xchg
mov
outsl
in
movsb
pop
push
xchg
sahf
idivl
sbb
pushf
fmul
out
and
out
cmp
xchg
and
aad
je
dec
clc
mov
pop
inc
jle
lret
xchg
int
ss
outsb
mov
or
xor
incl
cli
dec
clc
cli
ds
paddb
dec
mov
iret
enter
inc
cltd
negb
xor
into
sub
inc
mov
add
adc
mov
aas
push
mov
pop
mov
sbb
mov
mov
lods
mov
stos
popf
mov
cld
xlat
jecxz
pop
orb
xchg
shlb
lret
xchg
vmaxss
and
mov
pop
call
and
loopne
loope
data16
iret
lea
mov
add
or
mov
dec
adc
mov
sti
dec
addb
ret
cmpsb
cmpsb
push
pop
addr16
mov
lods
aad
pop
or
cmp
push
js
inc
jb
movsl
dec
xor
lods
jo
imul
gs
sub
xor
mov
repnz
push
into
repnz
roll
adc
jmp
stos
sarl
lds
xlat
jb
mov
stos
dec
jmp
inc
cmpsb
clc
out
mov
pop
xchg
sub
lods
xchg
dec
scas
and
dec
rcll
xorl
cmc
or
push
shlb
inc
lcall
out
jb
mov
jne
sbbb
and
and
mov
jle
sbb
mov
push
shll
sbb
fmull
mov
xorl
loopne
sub
mov
aaa
in
rorl
cmp
das
and
repz
jb
aam
jae
movsb
je
jle
jecxz
mov
cmp
lods
cmpsb
repnz
repz
sub
inc
in
stos
pushf
xor
fs
fidivrs
shrb
sub
push
lock
fistl
es
xchg
jge
add
cli
out
jge
push
xchg
sbb
mov
cs
cld
dec
adc
cmp
inc
xchg
adc
push
ljmp
inc
xchg
int
mov
sub
outsl
je
rclb
mov
in
fdivs
push
cmc
dec
in
or
cmp
test
xchg
gs
popf
pusha
xchg
jp
and
es
lahf
aad
loope
mov
mov
movsl
cmp
in
into
ja
clc
add
jecxz
xlat
push
out
loope
fiaddl
jbe
add
inc
lahf
enter
aad
add
fists
mov
sets
xor
std
test
jo
adc
aad
jecxz
or
or
pop
adc
adc
cmpsl
xor
jno
add
fisubs
fneni(8087
mov
fsubrs
fldt
ss
pop
test
roll
sti
lods
push
mov
mov
daa
sbb
bound
xor
insb
call
mov
inc
pop
adc
add
cmpsl
leave
dec
es
mov
dec
and
popf
mov
fwait
cs
pop
les
inc
xchg
mov
cli
mov
in
shl
mov
cltd
out
fs
mov
mov
mov
cmp
cmpsb
adc
mov
in
into
or
or
rol
lds
cmp
lret
pop
mov
pop
cltd
xorb
add
fwait
sbb
insl
pop
arpl
add
pop
and
movsl
jns
orl
lret
push
push
fists
xor
ror
mov
ja
mov
outsl
cmp
and
push
enter
popf
mov
pop
dec
insl
mov
loop
dec
add
mov
cmp
cmp
cmp
xchg
adc
jb
loope
imul
sahf
mov
and
shlb
pop
pop
xchg
sub
bound
test
fcomps
in
ja
shr
test
lock
xorl
jnp
add
sbb
fiadds
push
xor
outsb
xlat
jg
ret
mov
jbe
and
std
popf
cmp
mov
inc
jae
imul
inc
pop
cmp
xchg
add
xchg
nop
xor
into
add
jp
in
insl
xchg
inc
push
dec
or
inc
ss
fwait
dec
imul
pop
loop
cmp
mov
mov
mov
xor
fiadds
das
jns
ljmp
into
daa
sahf
jbe
lcall
cmp
or
shll
fs
movb
sbb
and
movsl
mov
clc
inc
call
lret
mov
insl
jns
mov
sub
mov
xor
mov
orl
in
add
push
and
xchg
in
or
jmp
cmp
scas
xchg
jnp
jg
outsl
data16
mov
test
movsl
xor
push
lock
scas
add
cmp
xchg
cs
addr16
jge
or
int
aaa
push
mov
je
iret
out
mov
leave
sarb
inc
or
popa
out
aad
mov
xchg
rcl
jb
stc
xor
xchg
sbb
push
xor
lcall
clc
mov
out
jle
adc
outsl
xchg
inc
adc
and
xorl
xchg
adc
mov
pop
into
push
aad
jnp
and
faddl
daa
nop
cmp
pusha
insl
ret
push
or
dec
mov
cmc
mov
iret
in
bound
push
jp
int
jg
xchg
jo
jmp
jae
jnp
xlat
aad
pop
mov
push
push
or
call
sub
adc
sbb
ds
flds
pop
xchg
xor
adc
pop
sarb
push
cmp
mov
and
cmpsb
pop
imul
mov
rolb
lahf
push
lock
pop
in
loopne
mov
add
xor
adc
cs
icebp
imul
negl
or
lods
in
cmp
les
pushf
int3
mov
add
bnd
fmulp
sbb
mov
add
out
add
jmp
loope
stc
aam
pop
xor
cmp
jmp
xor
in
push
dec
cmp
aad
xchg
aam
add
or
dec
and
dec
pop
mov
dec
aam
daa
out
in
test
add
push
nop
xchg
cs
hlt
add
jno
bound
lods
test
cli
mov
xchg
into
lock
jae
inc
jne
adc
add
call
dec
lahf
or
jge
jge
xchg
mov
xor
push
mov
xchg
pop
out
int3
ja
add
sub
lods
jle
fsubrl
stos
pop
jnp
dec
rorb
mov
xor
mov
push
stos
rcll
xchg
xchg
xchg
cmc
js
movsb
arpl
repz
rcrb
push
mov
and
mov
int3
and
lcall
test
test
lods
xchg
and
push
jb
push
popf
pop
fstpt
sub
mov
das
pop
mov
in
cld
repnz
cmp
push
dec
shrb
sub
adc
dec
out
in
xor
inc
jb
cli
ja
cmpsb
lahf
stos
test
and
jae
lcall
inc
aaa
dec
inc
mov
loopne
push
ljmp
mov
repnz
mov
clc
idivl
xor
divl
jo
aaa
rcr
and
loop
mov
mov
das
cmp
adc
lods
insl
in
push
sbb
xchg
mov
and
pop
xlat
xlat
mov
add
inc
sbb
in
call
loopne
cmp
push
adc
pop
and
adc
sub
pop
push
pop
repnz
movsb
mov
clc
jge
imul
or
sub
jmp
push
push
mov
lds
cmp
scas
movl
dec
mov
jae
pop
pop
pop
add
push
dec
sbb
push
call
fmul
mov
icebp
xchg
cmp
jns
mov
xchg
jp
push
cwtl
pushf
add
sub
sbb
test
pop
mov
or
xchg
dec
sbb
xchg
add
inc
lahf
pushf
mov
pop
fldcw
sub
fsubrl
jnp
or
std
mov
jecxz
js
adc
inc
inc
ds
inc
out
es
and
mov
clc
aas
mov
jp
mov
lahf
daa
pop
stc
mov
xchg
mov
int3
pop
xorl
push
pop
roll
ljmp
lcall
bound
out
inc
je
les
jp
mov
stos
push
mov
or
xor
ss
cli
and
mov
mov
rcrb
dec
jmp
jno
subb
in
std
mov
ror
iret
inc
add
iret
and
dec
mov
outsl
and
hlt
xchg
adc
cmpl
mov
ret
dec
cwtl
pop
test
ljmp
lock
or
cmp
pop
xor
popf
call
roll
in
out
test
fisttps
scas
xchg
icebp
add
cld
cmc
movsb
testl
rcrl
pop
stos
jmp
stc
pusha
out
out
fsubrl
jo
xchg
bound
jp
and
mov
sbb
fcomip
lret
inc
mov
sub
xchg
xchg
sahf
notb
mov
jecxz
cmc
insl
or
stc
xor
add
xlat
shrb
iret
or
sbb
lea
jb
ret
cs
scas
cmpsb
jg
or
inc
dec
push
dec
and
movsb
mov
adc
mov
cmp
loope
cmp
out
pop
mov
push
test
cmp
cmp
inc
push
popf
out
insb
loop
add
iret
mov
jecxz
xor
push
out
adc
adc
mov
or
stos
mov
adc
xchg
xchg
jecxz
xlat
sbb
mov
cmp
push
repnz
inc
or
out
cmpb
mov
xchg
iret
pop
fcomps
or
adc
loopne
push
dec
push
js
and
add
rcll
mov
jge
push
inc
sub
arpl
sti
mov
pop
xchg
aaa
aam
sbb
mov
mov
sub
and
pop
jae
xchg
in
cmp
fsubrl
dec
jmp
pop
inc
jcxz
lea
adc
dec
mov
mov
pop
dec
jp
or
inc
cwtl
outsl
stos
mov
scas
and
cld
insb
ljmp
mov
push
lods
sbb
gs
adc
cmp
sub
movsl
cmp
clc
or
dec
std
fimull
xor
inc
jmp
inc
iret
push
jne
cmp
xor
ficompl
cmp
sub
ret
or
into
mov
inc
ret
pop
push
pusha
xor
mov
mov
cmp
js
jne
dec
add
loop
jbe
sets
iret
cmp
pop
mov
add
xchg
inc
push
inc
push
push
inc
and
jmp
mov
and
push
addr16
or
out
andb
jle
shrl
pop
mov
ret
and
sarl
ret
ds
add
mov
inc
push
cmp
out
out
inc
adc
repz
or
dec
push
int3
xchg
aaa
in
int3
lods
xor
jle
or
cs
or
xchg
idivb
sbb
xor
add
push
mov
add
pop
mov
je
mov
ss
lret
test
mov
fstl
and
xor
enter
or
add
add
inc
or
jne
xlat
xor
sbb
mov
push
jecxz
or
cwtl
cmp
fsin
aad
scas
dec
or
test
inc
jne
pusha
dec
add
add
push
fsub
out
repz
pop
into
imul
inc
fistpl
add
or
sahf
mov
sub
jnp
cmp
xchg
dec
cmp
and
pop
fnop
xor
inc
shll
leave
fabs
jnp
movsb
cmp
arpl
jmp
xchg
mov
nop
repnz
repnz
adc
inc
mov
loope
cmp
adc
and
add
and
fcmovu
imul
pop
hlt
jg
daa
xor
jmp
out
aaa
or
pop
scas
pop
cld
and
les
pushw
sbbb
dec
stos
pop
shlb
xor
jle
call
or
lock
jp
sarb
test
lods
add
mov
outsl
data16
adc
out
scas
in
or
nop
mov
and
mov
xor
inc
clc
push
das
adc
cmp
sub
in
fwait
movsl
dec
hlt
fldlg2
aas
adc
out
pop
fdiv
enter
cmp
lock
iret
add
mov
pop
in
mov
xchg
dec
mov
cwtl
inc
arpl
sbb
js
inc
call
fwait
or
push
dec
scas
xor
dec
movsb
jbe
loope
filds
sub
push
sti
shlb
outsb
in
xor
mov
xor
rorl
leave
icebp
enter
cmpsl
dec
popf
adc
mov
mov
out
enter
inc
xor
mov
fiaddl
cmp
into
add
push
xchg
mov
xchg
xchg
pusha
test
xchg
mov
inc
push
sbbb
adc
jge
ret
popf
and
jb
popa
pop
mov
push
xchg
add
or
loopne
jo
xorl
sbb
mov
mov
test
popa
cmpsb
xlat
popl
enter
pop
test
ror
call
pop
xor
mov
out
mov
jbe
mov
or
arpl
mov
aaa
pop
xor
mov
arpl
pop
shll
cld
in
aas
in
adc
negl
lcall
lret
das
pop
pusha
loope
or
pop
lods
mov
pop
lods
dec
jbe
xor
cli
les
dec
scas
sarl
ljmp
imul
out
inc
cli
daa
mov
pushf
lods
scas
fdivp
call
fcoml
ret
push
xchg
test
sbb
and
repz
and
loope,pn
xchg
gs
or
push
add
xlat
imul
lea
aad
sub
imull
sahf
ja
and
js
sahf
inc
popl
and
inc
inc
inc
pop
inc
ret
jge
lret
test
cmp
cld
movsb
lods
jb
adc
mov
aam
fdivrl
faddp
cmpsl
inc
fmull
cmp
inc
cs
inc
jecxz
pop
push
xchg
dec
fcmovb
pop
pushf
jl
cwtl
std
jecxz
int3
ret
pushf
imul
and
aad
repnz
int
adc
mov
bound
or
adc
mov
sub
add
adcl
bound
jns
adc
inc
push
add
add
xchg
gs
sbb
fcoml
mov
dec
adc
aad
ds
negb
rorb
jbe
or
mov
xor
insb
inc
and
in
das
jo
in
mov
testl
mov
push
xor
into
iret
mov
outsl
test
ja
jne
xor
push
adc
pop
add
adc
int3
lcall
loop
mov
cli
loopne
pusha
sub
adc
pushf
loopew
aam
add
sub
popa
xchg
test
and
or
ss
cmp
shrl
sub
push
into
inc
dec
dec
outsl
push
lret
test
es
inc
sbb
outsl
dec
ss
jno
test
push
push
pop
inc
cwtl
lea
cld
jbe
popa
push
popa
add
movsl
sbbb
cmc
outsb
push
cmpl
push
cwtl
dec
mov
in
xor
mov
xor
fdivl
nop
ds
in
add
push
popa
stc
clc
mov
nop
popa
out
mov
pop
or
jmp
popf
mov
cltd
inc
scas
inc
lods
mov
jecxz
shrl
push
jmp
jb
adc
dec
cmpsl
test
lods
fbstp
mov
fstl
xlat
jge
adc
cli
sbb
popf
jecxz
dec
cs
sbb
or
xchg
mov
lret
js
sub
in
or
mov
in
out
add
cmp
xor
stc
sub
sub
jo
imul
cltd
fs
dec
add
jmp
xchg
in
std
cmc
or
or
fisubs
cwtl
das
or
es
es
sbb
adc
pushf
mov
jp
das
push
jb
fs
pop
sub
inc
loopne
enter
iret
cmp
push
popa
ds
mov
stc
mov
enter
popa
cli
mov
lock
aaa
pusha
pop
gs
sub
inc
aam
rcrb
jg
inc
push
or
outsb
hlt
mov
inc
and
loope
adc
xlat
imul
mov
mov
ffreep
jns
gs
ja
add
lret
sub
cltd
or
xchg
vpaddq
test
pop
clc
jge
mov
aas
mov
pusha
fadds
insb
adc
pop
daa
int
jbe
adc
loope
push
addr16
push
cmp
orb
inc
outsb
push
push
lock
mov
sub
lret
jno
xor
std
jno
ret
dec
mov
into
and
sbb
cwtl
xchg
ja
mov
jae
inc
and
sbb
inc
and
in
fwait
or
adc
pop
mov
rorl
leave
inc
cmp
popf
push
cmp
xor
in
in
mov
mov
lds
xchg
cli
outsb
lods
ret
or
imul
rep
or
decb
jg
ja
jo
add
dec
jge
xchg
add
jge
fsubp
and
xor
fidivrl
mov
sub
mov
scas
jno
cmp
pop
sub
push
in
add
pop
jl
inc
jae
add
xlat
mov
xchg
loop
or
fdivs
out
mov
xor
int
cs
insb
and
loope
mov
lods
and
and
inc
and
and
push
mov
jno
lods
fs
shlb
pop
cmp
movsb
leave
stc
push
loope
pop
xchg
xchg
addr16
pushf
fidivrs
sub
push
push
mov
push
jo
sub
imul
xchg
sbb
sub
stos
clc
push
xor
out
lcall
jecxz
or
push
dec
pop
loope
dec
gs
jp
fisttpll
sbb
adc
pusha
sahf
or
or
or
stos
mov
and
ja
test
gs
rcrl
scas
dec
mov
repz
jl
loop
mov
das
sub
sahf
movsb
test
std
pop
notl
fidivs
inc
iret
adc
loopne
fwait
pop
bound
popf
fsubrs
adc
mov
jmp
cli
sahf
inc
lret
les
jecxz
fsts
sbb
sbb
filds
aad
add
xchg
sbb
lods
sahf
rep
movsl
jp
mov
mov
xchg
xlat
div
add
mov
pop
insl
push
jge
jbe
mov
sub
push
lahf
pop
jbe
bound
fadds
test
pop
xor
xchg
addr16
pop
xchg
test
mov
jbe
xor
push
sbb
mov
pop
mov
xchg
mov
rcl
sbb
fdivs
lods
mov
mov
movsb
jge
cli
fwait
inc
inc
xchg
mov
push
push
inc
xor
pop
aaa
insb
lods
mov
bound
popa
imul
lods
out
cmp
fcoms
xor
cmp
clc
push
scas
movsl
xchg
aad
sbb
ljmp
js
pmulhuw
mov
das
std
xor
out
and
cmp
shr
lock
cmp
out
or
sahf
in
sbb
insb
push
stos
adc
popa
xchg
iret
add
sub
adc
push
cmp
jle
aas
daa
dec
adc
ds
lods
jne
or
enter
add
out
ljmp
push
jno
imul
add
and
or
shll
lods
jae
pop
sbb
cmpsl
scas
cmp
xchg
rol
add
dec
out
pop
sub
dec
in
inc
push
jne
les
lret
rcll
repz
ror
jge
cmpsb
rcll
adc
jge
adc
jo
inc
xchg
lret
mov
sbb
xor
sub
dec
cmp
xchg
fcomps
loop
loop
out
cwtl
sub
clc
push
out
jge
sub
push
xlat
call
sub
mov
jmp
shr
fsts
xchg
mov
sbb
jle
dec
outsl
mov
add
ja
sub
arpl
sub
sbb
mov
sub
add
sbb
mov
pop
mov
ret
add
add
sub
int3
popf
imul
daa
sub
in
and
mov
ficoml
jl
cs
jns
xchg
xchg
push
xlat
sub
xchg
pop
gs
out
add
fwait
sub
sbb
add
call
mov
pop
ljmp
arpl
popa
pop
mov
dec
or
inc
mov
decl
test
push
sbb
pop
mov
lcall
adc
imul
jl
hlt
pop
or
xchg
adc
jb
daa
push
faddl
jnp,pt
mov
push
outsb
and
and
lds
add
ret
das
mov
push
jp
and
xchg
cwtl
mov
mov
ret
inc
fimull
jg
pop
sub
xor
pop
imul
inc
jge
sbb
jle
fwait
into
insb
outsl
in
cli
or
jl
jbe
mov
mov
into
cli
sbb
rcl
mov
lds
mov
sub
loope
fs
mov
pop
cmp
xor
in
pop
or
in
jbe
xchg
mov
push
cmp
test
cmp
sahf
rcll
jmp
call
in
jb
push
fdivp
sub
in
clc
xchg
dec
mov
adc
ret
jns
lcall
xlat
mov
mov
mov
rorl
mov
add
movsl
pop
or
bound
fnstenv
insb
pushf
nop
orb
addr16
pop
xor
pushf
inc
rcrb
aad
ret
push
push
aas
cmpsl
iret
xchg
aaa
cmp
and
andb
shll
xchg
nop
xchg
mov
fsubr
cmp
jmp
shll
or
fiadds
fwait
jge
test
call
add
xchg
incl
pop
sbb
jae
mov
sbb
outsb
cmp
std
repnz
call
mov
out
lea
adc
jmp
clc
xchg
dec
in
lds
in
xor
add
adc
mov
aaa
mov
sbb
adc
mov
mov
sbb
fisubl
dec
mov
punpckhbw
or
fcoml
cmp
movsb
sahf
and
outsb
rcl
mov
pusha
das
push
ljmp
mov
push
aam
or
fdivrs
std
in
mov
hlt
sbb
imul
jae
lods
mov
jle
inc
jmp
lock
scas
dec
pop
in
cltd
adc
and
mov
or
ja
mov
fldl
popa
ret
dec
in
add
lock
mov
add
lahf
mov
jo
rcrl
mov
pop
mov
jg
add
mov
jp
imull
pop
or
and
mov
lahf
fsubp
repz
hlt
sbb
inc
xor
int3
hlt
leave
repz
js
adc
mov
in
mov
sub
loope
mov
lret
mov
loopne
adc
and
loopne
clc
scas
mov
xor
push
stc
pop
addr16
jns
sahf
jne
aad
jp
push
jne
sub
mov
imul
in
cld
out
cmp
mov
test
xor
leave
fsubrs
mov
cmp
ds
sahf
enter
shrb
pop
stc
scas
lahf
lods
js
mov
int3
cmp
pop
xor
adc
repz
inc
aam
imul
mov
popa
fisubl
xlat
sub
xchg
nop
pushf
mov
repz
push
mov
add
mov
arpl
lret
pop
cmp
aas
mov
sarb
mov
add
pop
addb
inc
jo
cmp
push
mov
scas
sub
pop
xchg
and
insl
push
pop
xchg
adc
scas
repz
push
ret
pop
xor
jae
in
jae
mov
ret
insl
test
mov
mov
push
dec
push
push
fimull
or
sub
jl
dec
mov
dec
rcrb
inc
outsb
outsl
push
sub
pop
cld
pop
xor
xchg
lods
mov
xor
in
mov
sub
pop
insb
or
jp
add
sahf
inc
and
jmp
pop
ja
lret
int
and
test
mov
pop
insb
inc
loope
and
mov
mov
add
icebp
mov
out
xchg
ret
push
cmc
push
cmc
icebp
adc
sbb
or
jae
or
jns
or
fldt
cmc
pop
bound
int3
popf
in
hlt
out
inc
adc
jne
popa
mov
ja
jb
push
mov
mov
pop
mov
push
adc
add
cmovge
push
mulb
adc
test
cmp
out
jo
mov
xor
enter
ret
mov
repnz
iret
xorl
inc
shr
scas
pop
insl
setle
sbb
adc
cmp
adc
lds
inc
sub
or
jns
or
hlt
enter
mov
mov
jno
aas
and
dec
int
into
fs
jno
jne
mov
adc
ret
fld
push
or
push
dec
xchg
cli
jle
mov
icebp
adcb
mov
cmp
cmp
jle
lret
repz
xchg
mov
fwait
clc
fcompl
adc
popa
and
cmpsl
rcl
jp
xchg
pop
mov
bndstx
mov
push
mov
adc
xchg
aam
call
cwtl
popf
xchg
movsl
lret
sub
sub
xchg
in
fisubrl
mov
pop
pop
stos
enter
and
mov
push
jae
jns
push
jl
sahf
xor
test
push
inc
push
cmpl
std
mov
or
fs
fs
sar
sub
scas
stos
icebp
xor
icebp
xlat
fnstsw
xchg
mov
loop
fdivrs
cld
mull
inc
jle
sbb
icebp
add
push
ds
cmp
and
cmp
ficompl
enter
adc
in
mov
std
add
repz
je
dec
movl
loopne
fwait
mov
lods
and
pushf
daa
or
rcl
scas
pop
out
int3
in
or
pop
stc
mov
push
int
imul
out
cli
aad
mov
jmp
and
and
and
or
das
add
or
cmpb
xchg
pop
lods
mov
xor
mov
xlat
sysexit
fmull
dec
pop
jnp
mov
stos
ja
cmpsl
fists
addr16
out
mov
mov
xchg
xor
jl
call
ljmp
cltd
jne
cmc
pop
add
and
jecxz
mov
rcr
inc
aad
cmovnp
mov
in
dec
pop
stc
in
mov
mov
cmpsb
push
sbb
xor
lret
pop
clc
sub
popa
add
xor
loopne
mov
add
inc
std
mov
jno
aaa
cs
dec
push
xor
sub
push
scas
xorl
out
mov
inc
arpl
shl
mov
jae
sub
cld
pop
test
sub
out
pusha
aas
jno
and
push
push
jle
push
xchg
add
test
aad
aas
push
cld
out
and
push
sub
lahf
xchg
cmpsl
inc
nop
sbb
subl
push
mov
or
mov
lea
or
rcl
add
mov
lods
out
mov
daa
adc
cmp
lds
cmp
cmpsb
push
inc
movsb
test
xchg
fnstsw
inc
ret
push
jno
addr16
cmpl
and
cmp
or
xor
or
inc
in
out
enter
dec
sbb
jo
mov
xchg
rolb
push
sti
lret
pusha
pop
jecxz
testb
sbb
outsl
dec
mull
push
or
test
pop
cld
and
fadds
ret
inc
xlat
cmp
cld
jne
pop
mov
popf
push
aaa
push
push
aaa
sub
pop
add
pop
pop
xchg
add
or
outsb
movsb
push
int
hlt
faddl
imul
loopne
xor
into
shl
ficomps
aam
mov
sub
pop
stos
das
inc
jg
inc
push
or
sahf
or
mov
in
cli
cli
mov
fcomps
jne
lea
mov
mov
fcomp
xlat
stos
sbb
rorb
pop
imul
push
nop
add
sub
jb
insb
cmp
xor
lahf
sbb
sbb
push
mov
xchg
dec
cli
push
das
xlat
test
inc
xchg
xchg
std
mov
mov
pop
pmaxub
pop
js
flds
jg
dec
inc
mov
ja
push
shrl
cltd
int
add
xor
outsb
jmp
test
roll
cmpsb
das
inc
lahf
or
daa
inc
lods
pop
lret
mov
sub
mov
and
int3
ljmp
jp
xchg
enter
lret
xchg
xchg
mov
sub
orl
sarl
mov
out
repz
jb
mov
jb
and
jae
fwait
mov
mov
outsb
cmp
or
cltd
inc
add
int
addl
int3
test
shrl
jl
movb
mov
mov
andl
mov
pushf
ds
mov
lcall
jecxz
add
cmpsb
add
mov
mov
lds
cmc
aam
pushf
stos
mov
scas
fcomip
adc
in
ja
loopne
js
aaa
xor
mov
mov
shrl
insb
add
cmp
jp
clc
pushw
sub
int3
sahf
cmp
outsl
cmpsl
cld
pop
mov
jmp
push
jne
push
mov
adc
xchg
rcrl
push
inc
rcll
mov
out
lods
shll
xchg
mov
xlat
int
inc
rorl
test
sbb
movsb
push
es
fadd
fxch
jl
mov
jp
insl
inc
aam
gs
ja
mov
cmove
loop
xchg
jbe
adc
inc
mov
dec
mov
jg
les
pop
ljmp
add
out
pop
mov
test
and
xchg
int3
rolb
sarl
scas
test
dec
dec
jno
inc
sub
ds
or
cli
mov
add
je
cmp
shrl
int
push
in
movsl
cmp
movsb
sahf
into
cmc
insl
dec
inc
pop
arpl
sub
scas
inc
sub
mov
inc
lahf
jecxz
push
inc
lahf
xor
cmpsb
mov
roll
dec
loopne
xchg
fwait
out
pop
add
dec
es
push
mov
stos
mov
inc
iret
shll
and
xor
jp
popf
and
out
scas
loope,pt
test
xor
pop
rcl
push
pop
adc
scas
cmp
add
pop
pop
dec
dec
hlt
jmp
addr16
jns
cmp
insl
loop
jle
xor
js
add
mov
hlt
inc
inc
outsl
lods
mov
sbbb
mov
mov
cmp
sahf
push
push
in
sahf
or
dec
cmp
dec
in
push
jl
out
insb
gs
int3
sub
jle
fidivl
sbb
sbb
mov
fwait
adc
add
push
fdivs
cmpl
mov
fnstcw
pop
mov
scas
lods
add
pop
sbb
mov
enter
cs
arpl
pop
cmp
mov
aaa
fisttpl
jo
xchg
pop
fwait
sti
push
lahf
jmp
test
imul
es
pop
scas
inc
mov
repz
jge
pop
cmpsl
sahf
sbb
pop
jno
call
cmp
pop
lods
scas
mov
xchg
adc
aad
inc
clc
test
adcb
jp
mov
push
mov
mov
jl
and
ds
in
jg
enter
xor
push
cmp
add
jb
fldenv
pop
out
or
add
pop
pop
and
in
jns
cmp
sub
push
sbb
push
add
mov
hlt
cmp
inc
or
pshufw
lods
push
lcall
fs
test
ret
das
xchg
insl
das
inc
movsb
mov
imul
pop
imul
pop
sbb
mov
lahf
pop
fsubrs
xchg
ficomps
sub
sub
mov
sub
movsb
xor
pop
pop
scas
cmp
push
scas
or
xchg
jl
ret
jle
cs
mov
jnp
shl
imul
mov
stos
sbb
js
xor
push
mov
lahf
mov
add
xor
mov
xchg
adc
cltd
fsts
ret
add
lock
xchg
mov
and
loopne
adcb
jo
out
rcll
out
fisttps
insl
xor
push
loop
jae
pusha
std
fnstenv
inc
mov
lret
decb
push
sahf
mov
inc
dec
mov
dec
cmp
jmp
lret
inc
mov
in
sbb
push
xchg
pusha
daa
pop
stc
push
xchg
mov
inc
jg
or
scas
leave
dec
ja
mov
xchg
jo
add
add
leave
pop
add
out
add
mov
push
loopne
push
xor
and
hlt
push
jmp
out
leave
roll
test
adc
int
arpl
xor
push
std
out
push
push
gs
mov
mov
cmp
sar
inc
jmp
jne
adc
mov
inc
mov
movsb
xchg
jae
or
and
push
in
add
aad
cmpsb
jbe
test
xchg
inc
repnz
rdpmc
dec
jb
cmp
outsl
inc
insl
push
jp
xchg
out
mov
out
cli
fsubrs
or
dec
imul
ficoms
mov
adc
dec
loope
inc
stc
out
movsb
cmpsl
clc
cmp
mov
dec
jns
sarb
std
xlat
jae
call
cmp
loop
shlb
imulb
scas
xor
ja
sar
jg
movsl
push
repz
cwtl
jo
mov
movsl
inc
mov
cmpl
lods
push
loope
in
inc
bound
push
lds
shll
cmp
cmp
pop
scas
mov
in
push
js
inc
test
lcall
aad
sbb
jecxz
xor
lods
xor
loop
pop
dec
mov
shll
dec
enterw
dec
out
outsb
pop
push
lcall
mov
addr16
jl
popa
xor
pop
data16
in
lcall
sbb
push
inc
gs
rcl
lods
mov
inc
clc
inc
pop
popa
adc
and
sahf
push
dec
lds
mov
jo
sub
loope
jmp
in
out
cmp
xchg
incb
push
aad
cmp
dec
testb
xchg
and
fisttpl
sub
mov
jnp
imulb
sub
out
cmp
cmp
rol
dec
xchg
cmp
push
out
fisttpl
sbb
imul
ret
and
sbb
push
sub
mov
arpl
pop
sbb
jo
ljmp
movsb
mov
or
push
sbb
mov
mov
or
andb
cmpsl
mov
push
xor
shr
adc
jno
sub
fadds
shlb
push
dec
inc
xor
fptan
jns
jp
scas
rolb
js
sub
sub
dec
jno
jno
mov
sbb
xchg
jns
sbb
inc
jecxz
jmp
mov
into
sub
fxch
pop
lret
lret
movsl
jge
cli
xchg
pop
inc
add
and
imul
sub
stos
add
aam
dec
sub
loop
xor
mov
mov
insl
addr16
shll
mov
sub
ds
and
fists
cmc
or
jmp
push
push
mov
and
xlat
ror
cmc
or
sbb
mov
ja
push
fs
int
jae
cmp
fsubs
xchg
rcr
sub
xor
mov
jg
fs
push
mov
leave
repnz
js
push
push
int
cs
pop
sbb
cmpsl
adc
dec
sbb
push
jo
mul
movsb
mov
sub
dec
jmp
push
mov
lret
sbb
jle
pop
sahf
xor
into
ret
pop
in
out
mov
sub
mov
sub
mov
rcrl
das
idivl
or
mov
jle
or
jo
jmp
sar
js
mov
sub
pop
push
mov
push
mov
pushf
jg
mov
xchg
scas
adc
mov
movsb
rorb
ds
test
sbb
movsbl
cmp
inc
lahf
sbb
sbb
push
xor
cmp
jecxz
daa
or
or
cmp
sub
ljmp
xor
ret
dec
mov
pop
repnz
loop
movsb
repz
mov
xor
mov
stos
mov
push
adc
sub
xchg
daa
fisubs
cmp
addr16
popf
out
sbb
jbe
std
mul
jae
xor
jns
lock
testl
pop
jno
test
jae
xchg
push
mov
dec
lret
cwtl
popw
ret
pop
dec
in
mov
push
adc
addr16
mov
addr16
jns
repz
scas
inc
push
out
dec
test
or
in
imul
iret
popa
adc
loopne
in
ljmp
push
lods
lock
cmpsl
pop
mov
lea
mov
aas
pusha
dec
cmp
mov
cmpsb
leave
sub
dec
ss
daa
inc
mov
and
cmpsl
push
sub
ss
or
stos
lahf
into
push
mov
xchg
dec
hlt
adc
mov
mov
mov
test
mov
aaa
movsl
ret
and
ss
popf
cmp
ds
and
push
cltd
dec
push
insl
mov
sbb
cmp
jge
movsl
inc
lea
inc
mov
xchg
dec
js
fsubr
dec
repz
test
xor
xor
aas
adc
mov
repz
and
shll
jnp
push
hlt
mov
push
mov
or
sbb
int
stos
xchg
pop
repz
jl
loope
test
subb
cld
mov
pushf
jp
lds
cs
cs
ficomps
cs
js
push
ja
imul
mov
xchg
push
mov
pop
outsl
cli
cmp
push
cmp
fcmovnu
lret
filds
xchg
xor
stos
neg
test
push
push
mov
dec
aad
xlat
pop
xchg
inc
movsb
nop
jmp
jl
ljmp
vmovlps
pop
mov
lahf
sub
xchg
das
pop
cmpl
outsb
mov
rcll
dec
les
add
lock
mov
loop
mov
out
jns
inc
or
pop
adc
push
xor
push
or
and
in
mov
jge
mov
jo
and
popl
lock
out
enter
adc
ljmp
or
add
in
repnz
cmpsb
jae
insl
sbb
sbb
out
repnz
sbb
lea
adc
or
pop
mov
repnz
int
stc
push
pusha
xchg
fisttps
push
sbb
fnstenv
sub
in
arpl
fists
imul
stos
test
mov
adc
in
sbb
faddl
aam
jmp
hlt
loope
inc
cltd
sub
or
push
lds
jge
ret
dec
xchg
mov
enter
loope
jp
sbb
sub
loope
dec
adc
mov
scas
pop
xorb
loope
jl
loop
aam
stc
clc
addr16
and
xor
xchg
inc
ljmp
mov
jle
incl
and
ljmp
xchg
movsb
pop
aad
xchg
js
mov
pop
push
insl
scas
jle
je
addr16
mov
test
push
push
and
popa
mov
cltd
gs
mov
xor
xorb
xchg
sahf
sub
jmp
pop
mov
nop
lahf
ret
data16
jmp
cmc
jecxz
popf
cmc
jp
cmp
fucom
out
add
mov
xchg
mov
inc
mov
or
les
jbe
sub
out
arpl
pop
xchg
in
sub
std
das
jmp
mov
jge
lea
jmp
mov
adc
icebp
test
and
pop
jmp
xchg
inc
sub
inc
in
sar
movsl
push
cmp
loope
in
jae
loopne
inc
jecxz
push
lea
out
loope
negl
mov
gs
or
test
xchg
mov
push
aam
std
or
jbe
out
scas
fdivrp
mov
sub
out
add
dec
push
lret
xor
call
push
idivb
jmp
mov
sar
cmpl
mov
push
xor
push
sbb
gs
jbe
pop
aad
push
sub
iret
sbb
add
test
hlt
cmp
pop
mov
inc
sbb
sbb
push
jl
pop
sbb
adc
int3
push
decb
lcall
cmp
mov
inc
jle
insl
push
inc
push
xchg
jne
mov
dec
arpl
mov
xor
pop
aam
jle
into
fs
and
adc
inc
rorb
mov
sub
orl
out
dec
sarb
gs
mov
xchg
aam
jge
daa
dec
sbb
lods
jno
and
scas
lds
popf
shll
pop
mov
pushl
jno
bound
gs
cmp
sbb
push
fstp
aas
pushf
cmp
iret
lea
hlt
popf
xchg
mov
sub
lret
loope
fldl
xchg
in
or
loopne
clc
jb
adcb
xchg
les
sub
into
and
in
daa
iret
push
jle
popa
adc
mov
js
mov
or
push
dec
cmpsl
inc
push
fmuls
stos
mov
add
cmpsb
lods
pop
addl
jle
adc
movsb
cmc
xchg
dec
ja
sub
dec
and
dec
pop
lret
cmp
rol
call
outsb
dec
aas
shrl
aas
pop
popf
mul
subb
aam
int3
mov
mov
add
call
push
jo
mov
lock
inc
mov
out
sbb
es
pop
dec
xchg
cltd
and
xor
insl
dec
adc
into
mov
sar
jge
xor
js
mov
xchg
data16
jmp
mov
mov
mov
testl
or
lret
pushf
imul
out
dec
jge
je
ja
mov
sar
pop
push
out
sti
stc
sarl
and
out
and
sti
orl
add
mov
sub
roll
xchg
fsubr
jb
sbb
mov
test
dec
fs
or
orb
insl
lods
push
adc
cmp
inc
ret
aad
scas
cmp
lods
inc
insl
bound
sti
lahf
fcmovb
ficoms
loop
jae
pop
add
test
inc
inc
dec
inc
xchg
mov
add
call
test
and
out
pavgb
lea
negl
xor
xor
or
fldenv
nop
fstl
movsb
dec
into
cld
incl
cmp
push
lods
fidivrs
sub
xor
daa
ds
push
jle
cmpb
adcb
in
jmp
rep
xchg
mov
pop
gs
pop
insl
jle
and
inc
dec
ja
and
lcall
or
stc
add
jno
test
xor
adc
mov
aam
stos
scas
arpl
not
push
fisttpll
xchg
cmpsl
in
cmp
jo
xlat
cmpsb
push
or
mov
mov
xor
pop
outsb
pop
cmp
in
insb
fsubl
xchg
lds
sbb
mov
push
add
test
cmpsl
out
shlb
mov
inc
jg
add
inc
cmp
lods
repz
cs
dec
pop
mov
stc
jge
mov
or
mov
sub
daa
dec
int
test
xchg
dec
or
lcall
data16
sbb
add
inc
and
out
imul
and
jbe
xchg
leave
xchg
push
outsb
sbb
push
push
ds
xchg
roll
xor
add
out
push
jle
lret
pop
cmpsl
lcall
inc
fnstcw
cmp
xlat
inc
sbb
inc
dec
and
mov
mov
fidivs
xor
sbb
out
xchg
dec
fndisi(8087
xor
lods
dec
sbb
adc
jmp
test
xchg
clc
lea
mov
or
mov
jae
sbb
mov
movsb
and
rol
testb
into
imul
cmp
movsb
insl
ljmp
cmp
cmp
es
aaa
fs
out
sub
fmull
daa
and
cmp
int
inc
rep
xchg
cmp
xchg
mov
inc
fisubl
push
test
and
sbb
mov
adc
in
add
in
pop
inc
aaa
shlb
pop
push
lcall
shll
cmp
out
xor
jp
cmc
lahf
stc
mov
push
and
mov
inc
push
xor
jnp
xor
mov
sbb
pop
gs
xor
mov
rcr
and
xor
mov
out
jp
test
aad
inc
mov
fldl
mov
dec
aaa
mov
dec
inc
imul
scas
cltd
arpl
pop
xchg
xchg
and
cmpl
loop
jl
jne
mov
ljmp
dec
in
add
mov
ret
add
sbb
in
rorl
out
arpl
mov
adc
jbe
add
test
cmp
pusha
add
loopne
jmp
lcall
mov
js
xchg
aaa
jl
fucomip
icebp
push
xor
sti
imul
aad
cmp
add
push
mov
cmp
sbb
inc
cmpsb
jns
push
mov
cmp
cmpl
push
int
mov
xor
add
sbb
orb
leave
jne
divb
mov
cmpsl
adc
dec
pop
lret
xor
shlb
sbb
push
jae
js
cli
mov
test
les
inc
jmp
les
push
xchg
dec
push
fildl
lods
test
add
xor
ret
mov
xchg
popa
mov
mov
int3
jl
mov
or
repz
std
test
jbe
and
dec
in
sub
jbe
cmp
enter
loope
push
xchg
int3
sbb
adc
shlb
jno
adc
enter
mov
clc
xor
call
out
sbb
sarl
in
xchg
repz
or
or
or
xor
mov
and
fdivrl
fisubs
cli
push
push
cmp
and
xchg
fcompl
fsubr
xor
fndisi(8087
pop
ret
jae
out
pop
fs
dec
mov
mov
inc
adc
stc
rclb
ficomps
xor
cmpsb
and
hlt
js
push
rcl
scas
out
mov
lods
aad
cmpl
lret
leave
loopne
loopne
nop
das
xor
dec
pushf
inc
into
daa
jge
sub
fidivrl
push
hlt
xchg
js
aas
leave
shr
testl
fucomi
shlb
shlb
xor
out
adc
xchg
cmc
loop
scas
into
mov
add
jmp
xlat
mov
add
jmp
mov
enter
jb
into
mov
cltd
push
pop
jnp
jns
rcll
ljmp
into
push
xor
cli
je
lods
cmp
mov
cmc
aad
cld
data16
and
imul
aaa
mov
ret
out
jg
adc
mov
lods
xchg
dec
shl
jbe
cs
lret
adc
aam
sub
bound
popa
imul
pop
cltd
cmp
das
sarl
inc
jle
pusha
rorb
shrb
arpl
jnp
cmp
jge
push
sbb
ds
xchg
std
pop
js
inc
cmpsb
or
scas
lds
and
std
js
mov
movsb
out
andb
inc
cltd
lahf
mov
nop
sub
popa
mov
sbb
call
jp
test
int3
sub
mov
push
xor
insl
fwait
inc
pop
enter
mov
or
addr16
cmp
pushf
test
in
aam
sub
mov
fcoml
shl
daa
cld
mov
xor
mov
fildl
push
outsl
loopne
fnstenv
stos
mov
clc
pusha
push
mov
mov
xor
pop
inc
mov
mov
sbb
jb
push
cmp
push
loopne
mov
push
cli
ret
mov
aad
icebp
pop
rcrb
iret
push
push
xor
or
jmp
cmp
mov
sti
adc
loopne
add
test
xor
cmpsb
pop
jne
mov
push
stos
mov
mov
je
adc
sub
test
pop
inc
cs
mov
aaa
xor
into
lahf
pop
sahf
push
xchg
gs
xchg
fcmove
filds
lds
std
pop
ljmp
ror
inc
sub
sbb
loopne
mov
jl
rcll
mov
repnz
inc
out
jg
pop
jmp
notb
daa
pop
inc
out
jge
xchg
xchg
dec
fs
cmp
jbe
pop
xor
and
sahf
repz
out
sub
and
iret
cmp
and
cli
popa
call
lret
mov
dec
movsb
rcr
fistps
movb
movsb
mov
scas
push
add
dec
jb
cmp
test
push
xor
add
movsb
mov
aad
inc
mov
pusha
ds
mov
push
ficoml
mov
jnp
inc
es
repnz
jae
sbb
cmp
scas
fcoml
sub
adc
test
scas
mov
pop
cltd
fdivs
mov
cltd
push
repnz
into
es
inc
movsl
jne
fwait
daa
jmp
or
and
cmp
das
and
aad
icebp
and
xor
test
or
jg
or
inc
rorl
xchg
xchg
lcall
dec
mov
jnp,pt
jle
inc
in
sbb
dec
aam
cmc
cli
arpl
andb
jb
pop
fs
dec
push
push
lods
mov
js
dec
addr16
jns
in
xchg
xor
dec
int3
fidivrl
or
scas
and
dec
shll
loope
pop
mov
mov
cmp
in
lcall
dec
pop
int3
mov
mov
jnp
mov
out
aas
les
cli
pop
insb
dec
sbb
jmp
jnp
or
insb
mov
or
sub
daa
lea
repnz
push
loope
xlat
and
incl
push
push
cmp
scas
xchg
arpl
outsl
mov
mov
out
aam
xor
inc
stos
clc
shll
test
dec
outsl
push
or
mov
sahf
fsubs
adc
mov
std
in
faddp
cld
in
inc
push
and
rolb
out
ret
stc
int
pop
call
xchg
loop
fwait
jo
ds
imul
and
mov
xchg
pop
mov
add
or
in
cmp
imul
int
lds
rorb
mov
add
icebp
stos
dec
sbb
and
jb
mov
cmp
fs
push
sarl
or
sbb
movsl
inc
pop
push
lods
loop
ror
cmp
repnz
pop
push
fwait
add
lret
ret
vandnps
out
cwtl
cs
pop
mov
jae
push
popa
jecxz
add
rcrl
mov
fwait
jg
cmp
test
mov
or
pop
mov
fcomps
arpl
lods
dec
and
ret
scas
lds
inc
sbb
sub
out
cmp
mov
shl
icebp
xchg
outsl
out
jle
jbe
mov
add
and
push
cwtl
out
sub
pop
fldcw
mov
jp
xchg
adc
shr
insl
outsl
xchg
sbb
push
xlat
dec
jno
jge
mov
add
mov
push
mov
sub
sub
ds
pop
cmp
cmp
shll
adc
mov
push
test
dec
lcall
jle
mov
or
sti
pop
testl
add
jge
rcr
xchg
push
fcmovne
mov
stc
jmp
push
iret
sbb
xchg
pop
or
pop
push
adc
lea
xchg
inc
not
pop
je
push
nop
sbb
sub
lock
xorl
cli
sbb
dec
push
xchg
push
incb
mov
inc
jp
outsb
and
and
hlt
in
sub
mov
jno
cltd
imul
add
enter
or
ret
bound
jp
adc
inc
arpl
aam
and
repnz
fsubl
xor
pop
cmp
mov
add
in
push
pop
add
hlt
ret
repnz
and
cli
pop
or
dec
sub
stos
rolb
push
and
sbb
jmp
movsbl
mov
fmull
clc
or
pop
in
sbbl
gs
lret
pop
push
arpl
sub
pop
lret
mov
push
enter
cltd
out
sbb
cli
add
les
sub
shlb
sbb
cmp
xchg
mov
add
je
sbb
lret
arpl
lcall
pushf
loopne
pusha
addr16
push
xor
add
xchg
rcl
movsb
xchg
aas
xchg
adc
aas
movl
add
outsl
jns
lds
fbstp
insb
ss
jo
stos
push
push
pop
scas
inc
push
inc
loope
jge
push
outsb
mov
jns
les
sub
mov
mov
mov
fs
aad
mov
mov
lret
cli
lret
fnstenv
ljmp
lret
mov
cltd
stc
add
mov
sbb
sbb
addl
mov
or
dec
in
xchg
mov
rcll
sbb
inc
ja
hlt
sub
shrl
cltd
add
scas
pop
push
fistps
out
xchg
mov
sbb
popa
jb
fisubs
int3
iret
cli
aaa
cwtl
inc
stc
mov
enter
adc
push
and
xchg
imulb
or
adc
inc
jle
jecxz
sbb
and
aaa
fisubrl
dec
xchg
fadds
nop
mov
dec
bswap
outsb
popa
movsb
in
mov
cltd
gs
hlt
nop
out
rorl
mov
add
dec
std
xchg
les
mov
sbb
aam
dec
jp
jle
outsb
bound
push
mov
rep
lock
xlat
xchg
dec
xchg
push
scas
adc
and
arpl
add
call
imul
jns
pop
dec
enter
iret
cld
pop
xchg
icebp
jecxz
gs
inc
rorb
cmpsb
adc
pop
pop
jp
or
xchg
jecxz
push
pop
lock
insb
ljmp
lods
popf
arpl
push
xor
mov
mov
cmpsl
daa
xchg
nop
pushl
cld
add
movsb
cmc
cs
inc
test
ret
les
push
das
fcomp
mov
test
inc
mov
aaa
push
lock
or
pushf
pop
push
inc
xchg
dec
xor
clc
xor
or
push
adc
ja
jo
nop
cwtl
popa
out
leave
push
xor
push
adc
xor
jae
hlt
roll
je
push
or
imul
nop
cmpsb
mov
mov
cwtl
insb
filds
mov
lock
xor
sahf
xor
out
psubb
sbb
push
aaa
adc
sbb
mov
and
add
ljmp
and
dec
pop
sub
mov
sub
sbb
out
shrb
ror
inc
xchg
cmp
in
sbb
shlb
xor
in
dec
sub
sub
push
cwtl
pop
notb
or
int
xchg
rclb
iret
adc
or
arpl
dec
fcoms
and
adc
mov
loop
es
aaa
cmc
pop
fnstcw
icebp
sub
ja
mov
mov
xchg
sarl
insb
push
mov
dec
nop
sar
or
sti
or
sbb
cmp
add
sub
cmp
inc
fbstp
clc
pop
push
mov
incb
test
jns
jge
js
mov
xchg
sub
out
push
mov
je
pusha
pop
inc
arpl
dec
push
xchg
mov
je
jge
cmpsl
sub
out
jns
ja
lea
div
data16
cmc
dec
popa
mov
pop
dec
sbb
out
cmc
mov
je
xchg
cld
lds
lods
and
xchg
push
mov
xlat
sub
out
cmp
push
fs
xor
push
mov
push
mulb
dec
inc
ret
xchg
insl
popa
sbb
push
cli
pop
shrl
push
mov
jecxz
pop
sub
in
xchg
add
and
mov
and
mov
mul
pop
pop
lods
out
dec
int
sbb
outsb
repz
hlt
dec
dec
test
stc
mov
xor
adc
mov
sub
mov
test
cmc
out
in
scas
sarl
rcll
inc
pop
push
es
je
xor
or
xchg
stos
jecxz
xchg
out
push
pop
fs
repz
fiaddl
xor
lea
xchg
mov
adc
loope,pn
in
push
mov
cmp
adc
test
push
daa
pop
push
and
mov
rcl
xchg
jge
nop
or
cmp
xchg
mov
pop
and
popf
xchg
adc
inc
rclb
loopne
push
xchg
pop
push
and
push
in
call
js
insb
ds
pop
outsl
mov
push
mov
dec
out
or
and
sub
pusha
dec
adc
in
mov
mov
push
adc
lods
stc
mov
pusha
rcll
rolb
pushf
test
add
gs
mov
lea
rclb
cli
push
cwtl
and
int3
mov
dec
in
pushf
or
aas
rolb
pusha
adc
xchg
fsub
push
shrb
xchg
mov
cmpsl
out
insl
addl
push
adc
leave
int
jle
mov
and
push
adc
adc
inc
mov
push
sbb
dec
aad
shrl
inc
sti
stos
pop
adc
fsubs
sbb
aam
adc
push
loope
jg
sub
insb
js
and
loopne
leave
cltd
jmp
and
lods
pop
and
mul
add
mov
mov
ret
mov
popf
cli
xor
ret
out
arpl
cwtl
cwtl
jl
push
mov
mov
mov
push
xchg
movsl
sub
cmp
jge
adc
je
push
adc
inc
cmp
es
mov
mull
loop
pop
js
add
jg
push
int3
mov
into
int
adc
lods
jmp
sbb
idivl
xlat
inc
sub
jo
outsl
xchg
push
addb
flds
xchg
push
ret
dec
loopne
lahf
pop
incl
mov
and
mov
in
push
sbbb
inc
sub
pusha
sbb
test
nop
out
adc
daa
es
int
jbe
dec
cli
aam
mov
pop
add
pop
lahf
mov
test
jmp
addl
testb
aad
sub
xor
sbb
repnz
cmp
cmc
inc
cmp
xchg
xchg
xor
cmp
pushf
into
mov
call
fcoml
pop
and
stos
dec
mov
mov
pop
push
mov
cli
test
sub
jne
or
inc
cmp
cltd
ret
test
sahf
cmc
and
adc
mov
lea
jmp
jmp
test
inc
mov
into
inc
es
mov
out
insb
stos
dec
rorb
out
decb
pop
fsubr
test
aas
loope
enter
cmp
test
ja,pn
mov
sub
out
test
dec
or
daa
sti
bnd
test
jecxz
aas
call
enter
xchg
sub
idiv
inc
popa
dec
pushf
test
cmp
icebp
jle
fxch
imul
push
dec
sbb
sub
mov
or
and
rorl
jns
xor
push
pusha
loopne
and
mov
mov
xor
shll
scas
inc
cli
xchg
das
dec
sub
ret
pop
mov
dec
jno
push
les
inc
push
mov
ret
xchg
push
iret
inc
push
add
mov
cmp
jnp
sar
and
es
push
jl
sub
out
xor
outsl
imulb
shll
lcall
aaa
mov
or
in
push
pop
cs
cmp
shl
inc
jns
rcrb
sarl
cmpsb
scas
push
lea
and
xchg
pop
out
jle
std
cmp
lret
sarb
mov
popa
leave
mov
xor
inc
add
pop
sbb
adc
clc
inc
dec
inc
in
mov
test
or
hlt
push
fldcw
xor
test
mov
mov
pushl
mov
insb
add
fdivrs
pop
xor
jbe
pop
sbbb
fwait
or
inc
lods
leave
enter
fsubr
shll
fimuls
xchg
leave
xor
les
mov
sbbl
incl
icebp
and
pop
add
push
inc
sbb
jnp
mov
mov
push
inc
add
fldcw
test
mov
mov
mov
out
sahf
stc
cmp
lret
xchg
sub
dec
push
mov
scas
dec
iret
ret
xor
dec
aas
int3
icebp
push
test
push
mov
lret
shll
cmpb
shl
inc
test
shlb
cmp
xor
xor
xor
mov
sbb
jnp
xchg
or
mov
mov
mov
mov
insl
outsb
pop
arpl
fcomps
mov
fwait
je
scas
insb
movsl
rorl
push
mov
in
mov
pop
and
fadd
push
xor
lret
lds
cmp
xchg
mov
cmp
enter
sbb
bound
ds
je
sub
loope
mov
xchg
sbb
add
int3
f2xm1
adc
repz
cwtl
enter
das
pop
dec
cmp
roll
movsb
roll
or
cmpsb
fincstp
sbb
out
add
sub
xor
clc
je
pop
sahf
jbe
rcr
pop
jb
xchg
pop
sahf
and
addl
enter
cmp
scas
ficompl
iret
das
pop
mov
clc
mov
lret
xor
ror
pop
out
popa
stc
push
mov
jmp
adc
scas
mov
leave
mov
test
outsb
jne
dec
stos
pop
bound
xchg
xchg
jne
insb
inc
pop
xor
dec
loope
pop
cld
out
clc
or
in
mov
addr16
xchg
call
mov
outsl
out
jp
lahf
scas
movhps
jge
or
icebp
xchg
inc
inc
rorb
xor
pop
adc
loopne
pushf
or
adc
cmp
in
add
iret
sub
divl
lods
daa
clc
mov
jb
std
popa
cmp
test
cmp
push
jl
sbb
dec
jp
jl
xchg
loop
roll
adc
popf
add
and
dec
push
lret
mov
adc
or
jb
fs
fcoms
stc
leave
std
jne
lea
jbe
test
adc
icebp
out
mov
adc
inc
dec
xchg
cmpsl
cwtl
imul
mov
sub
xchg
call
dec
pop
lds
lcall
mov
xchg
and
stc
mov
pop
imul
call
fnsave
lods
loope
lret
or
int3
repz
movsl
sbb
cmp
sub
lds
mov
sub
mov
aaa
outsb
mov
push
ret
lea
mov
mov
lods
das
mulb
inc
inc
jns
xchg
jmpw
or
test
rorw
sbb
push
cltd
cltd
mov
dec
push
aaa
inc
xor
add
jecxz
test
loop
fs
pop
dec
jle
mov
call
mov
sub
mov
pop
xor
dec
movb
cltd
sahf
dec
xchg
jmp
jns
sti
pop
bound
fwait
int
adc
mov
and
adc
sbb
push
int3
testb
fs
andl
inc
aam
jmp
sub
xchg
lds
call
fcoml
push
cs
pop
push
data16
shrb
movsb
je
lds
sub
in
mov
push
mov
push
mov
xchg
push
outsb
imul
pop
lea
out
mov
fnstcw
aas
int
sbb
repnz
add
jge
jmp
or
cmp
or
repz
stc
addb
and
push
int
clc
dec
fs
sbb
adc
sbb
cmpsb
in
aas
lret
mov
xchg
popa
and
loope
hlt
pusha
rcrb
repnz
xchg
mov
pop
imull
movsl
pushf
pop
sub
out
cld
rcl
cmpsb
jno
jb
movb
sbb
testb
ljmp
mov
data16
cmpsb
push
push
lret
dec
inc
jmp
push
cld
jle
outsb
out
adc
lahf
mov
pop
and
ret
out
in
out
ja
mov
fsubrl
stc
fstpl
cmpb
popf
sbb
outsl
jo
gs
mov
out
fisubrs
push
iret
and
mov
or
mov
or
push
inc
xlat
mov
adc
into
int3
push
sti
push
sub
sahf
mov
dec
jmp
pop
aas
or
pushf
and
in
jb
leave
jo
cmp
dec
shl
push
jmp
and
lea
out
push
ss
shll
pop
out
mov
jg
mov
sub
hlt
mov
imul
mov
or
daa
notl
bound
and
dec
in
jo
addr16
aas
sub
adc
cli
cmpsb
mov
and
cmpsb
insl
xchg
push
pop
mov
cwtl
adc
inc
xor
in
leave
push
into
adc
aaa
or
xchg
dec
adc
adc
add
jle
dec
adc
cltd
ss
jno
jge
mov
sbb
scas
xchg
add
je
inc
cmpsb
dec
xchg
shll
mov
pop
imul
sub
movsl
xchg
in
adc
mov
das
pop
int
and
rcl
pushf
pop
sbb
aad
mov
mov
mov
insl
and
popf
leave
push
popf
maskmovq
notl
or
outsl
and
xchg
imul
mov
mov
loope
adc
mov
loopne
movsl
das
test
ret
or
mov
mov
mov
mov
sahf
test
pop
sub
sbb
movsb
or
pop
stos
sbb
repnz
sub
push
in
cmp
icebp
negb
mov
push
ljmp
mov
cs
insl
das
cs
inc
lds
test
cmp
fs
add
lahf
stos
pop
pop
ret
ficoms
fbstp
pushf
push
or
lods
ja
jmp
xchg
xor
orl
out
ljmp
dec
dec
enter
dec
aam
cmp
mov
mov
popf
adc
mov
inc
cli
pop
idivl
insl
cmc
dec
xchg
sub
cmp
push
dec
imul
cmp
push
inc
loopne
xchg
push
mov
mov
fnsave
xlat
scas
rcl
inc
rcll
mov
sbb
xchg
xchg
mulb
and
iret
sub
jns
xor
push
call
xchg
inc
out
je
pop
int
data16
mov
pushf
mov
xchg
lcall
hlt
adc
sub
cli
cli
aaa
mov
adc
jp
dec
pop
xor
add
cmp
and
daa
mov
arpl
jl
test
test
dec
out
jbe
mov
andl
clc
iret
gs
mov
jnp
sub
push
jge
cmpsl
iret
lea
xor
dec
xorl
out
and
in
outsb
jecxz
push
fdivrl
outsb
les
xchg
daa
cltd
pusha
aad
xchg
scas
mov
rolb
cwtl
imul
pop
sub
rclb
subl
xor
dec
fld
sbb
cmp
lret
int
lahf
and
pop
into
mov
sar
xchg
imul
idiv
std
push
jecxz
stos
out
cmp
aam
rcrb
fisubrs
sbb
outsl
mov
sbb
repz
push
inc
or
movsl
scas
push
xor
psubw
add
jecxz
or
cmpsb
into
and
dec
clc
ljmp
and
jmp
xchg
jae
xchg
pop
mov
ret
out
mov
or
pop
subb
loop
sub
jae
sbb
pushl
pusha
pop
test
lcall
iret
in
jmp
push
adc
stos
js
lods
cld
xor
fdivrp
mov
leave
outsl
loop
sub
sti
jecxz
test
enter
lods
push
subl
je
jmp
ss
push
aad
mov
cmpb
push
cmpsb
iret
sahf
push
movsl
es
jecxz
test
cltd
xchg
outsl
mov
mov
adc
cmc
loope
repz
mov
in
mov
jae
lds
xor
stc
cmp
aas
xchg
das
daa
es
aaa
xchg
js
loope
mov
add
loop
sbb
jnp
ljmp
cmc
adc
sub
ficompl
cmp
sub
push
jb
dec
imul
xor
cmp
add
into
push
sub
fmuls
dec
xor
fists
decb
dec
rcrl
add
xchg
das
pop
mov
xchg
mov
insl
cltd
push
int3
and
xchg
insl
mov
pop
gs
mov
xor
and
ret
loop
dec
je
and
outsb
pushf
sti
mov
and
push
mov
jge
aaa
bound
adcl
lret
lods
adc
cs
cli
ret
inc
out
push
pop
lret
cmp
test
sub
cmp
test
dec
push
jae
gs
mov
xor
stos
push
cmpsl
jns
cld
or
cmp
not
or
dec
clc
sub
xchg
stos
lcall
adc
int3
orb
imull
add
pop
jns
inc
pop
dec
pop
imul
adc
sub
xchg
dec
jbe
shlb
adc
les
mov
cltd
je
mov
testw
push
and
dec
xchg
lret
fs
push
outsb
inc
push
dec
adc
cmc
ss
cltd
call
fidivs
jno
adc
ljmp
icebp
mov
jmp
repnz
pusha
ss
push
sbb
lret
push
mov
lods
mov
call
ret
insb
cmpsb
inc
stos
lret
ss
das
mov
fnstsw
sbb
push
daa
rol
in
vmovntps
in
add
ds
xorb
nop
mov
xchg
fistps
mov
dec
call
xchg
mov
jg
xchg
pop
adc
outsl
leave
lods
adc
addr16
bound
pop
mov
jae
fadds
jbe
xchg
sbb
int3
cmp
xchg
xlat
pop
inc
mov
mov
push
pop
outsl
add
fwait
adc
shr
or
jle
lods
icebp
cmp
filds
in
imul
xchg
aaa
bound
sub
push
sbb
or
hlt
cmp
adc
lea
dec
clc
dec
out
dec
inc
cli
sahf
cmp
mov
aas
adc
mov
loop
fildll
sub
xchg
mov
mov
push
adc
push
test
pop
xchg
or
out
ds
cwtl
cmp
imul
adcl
lret
xor
jmp
inc
lock
dec
test
xor
xchg
adc
pop
dec
outsb
push
cmp
sub
and
call
lock
add
je
rcll
sahf
mov
push
test
into
jmp
es
xor
dec
jmp
mov
pop
add
mov
stos
pop
popa
filds
das
rorl
push
adc
cmpb
jnp
adc
fnsave
jmp
dec
inc
sbb
mov
out
aad
les
pop
jmp
dec
sti
mov
fs
daa
xchg
xor
mov
ret
dec
mov
jmp
bound
imul
xor
loop
inc
pop
or
call
mov
or
stos
mov
cmc
out
dec
out
dec
fwait
ss
rorb
rolb
out
add
mov
cmc
into
and
ss
xlat
jb
test
call
test
adc
pop
adc
add
sbb
inc
inc
fwait
rclb
sahf
daa
xchg
or
leave
aas
adc
jle
xchg
push
rcrb
imul
mov
jne
and
mov
mov
mov
jno
into
or
aad
pop
gs
fisttpl
lds
push
mov
jno
mov
jp
or
cmp
mov
mov
bndldx
lods
mov
test
mov
fidivs
movsb
fwait
mov
fcmovb
add
mov
lock
lds
out
hlt
xor
lods
mov
sub
sub
and
sbb
lcall
lods
adc
pusha
push
adcl
sub
call
jb
and
addl
mov
mov
sbb
add
xchg
xor
pop
and
xor
pusha
mov
pusha
lods
dec
inc
mov
or
pushf
les
xlat
lds
arpl
adc
cmp
arpl
xchg
imul
adc
sub
lock
mov
pop
lret
or
sub
out
add
inc
dec
inc
lea
and
cwtl
mov
ja
pusha
lcall
loopne
ss
lock
test
xchg
lahf
add
jg
dec
mov
push
push
mov
std
mov
aas
ds
xor
add
adc
fldt
jl
loopne
mov
inc
jb
scas
movsl
push
mov
jg
pop
pop
mov
enter
ret
jnp
cmp
shll
sub
inc
into
aam
outsb
xchg
cli
xorb
mov
mov
lret
adc
lea
push
jo
xchg
out
mov
mov
and
jns
dec
sti
out
push
push
out
lcall
rorb
testl
sar
push
jb
ret
out
add
or
and
jno
popf
inc
nop
mov
sbb
les
inc
push
mov
xchg
sbb
mov
add
ss
cmpsb
mov
cmp
stos
xor
push
sbb
push
jo
xor
cmp
stc
pop
popl
aas
mov
jmp
test
lock
push
mov
mov
mov
mov
iret
xor
adc
jbe
inc
and
rep
mov
punpckldq
pusha
pop
mov
adc
lock
repz
or
cld
xlat
dec
pop
popf
adc
clc
push
xorps
daa
in
cmp
test
ss
icebp
cmp
adc
cmc
xchg
nop
pushf
cwtl
mov
add
mov
dec
decb
out
lret
push
push
mov
lea
sbb
mov
jo
sub
test
mov
mov
mov
add
in
xor
scas
mov
js
clc
ljmp
popa
rcrl
push
adc
jp
mov
sbb
shl
into
sbb
arpl
arpl
fisttpl
push
jl
xor
mov
push
movsb
sbb
push
push
clc
or
mov
fdivrl
lods
loope
stc
mov
mov
xor
jecxz
mov
pop
aad
loope
mov
xchg
inc
test
outsl
mov
inc
stos
shr
scas
andl
pop
repnz
xor
mov
cwtl
add
jno
add
jle
jl
jmp
insb
xor
inc
xor
and
pop
xor
or
pusha
push
jb
popf
incl
sbb
shrb
and
fs
out
movsl
mov
str
cld
cmpsb
aaa
inc
cmp
adc
repnz
fcoms
stos
fistpl
fxch
or
push
addl
sub
dec
iret
push
sbb
dec
int
sti
into
gs
add
mov
lret
sub
mov
adc
stos
fwait
cmc
stc
enter
loop
and
ret
and
mov
mov
and
int
cmp
cmp
ds
ljmp
outsl
jnp
lret
xchg
inc
dec
or
das
or
aam
repz
cmp
imul
dec
push
push
scas
and
cmp
and
sbb
xchg
cmpsb
xlat
shrl
cs
aam
xchg
inc
cld
push
popf
je
imul
repnz
stc
into
repnz
dec
mov
lret
nop
inc
lds
mov
jmp
les
jae
test
mov
jg
mov
out
sub
lock
popa
rclb
add
pop
xchg
outsl
test
pop
pop
imul
jmp
aas
pop
pushf
or
dec
scas
divb
arpl
sub
outsb
gs
addr16
fwait
sti
push
cmp
mov
mov
fnstcw
cltd
mov
mov
xor
lahf
mov
sbb
ret
iret
sub
out
and
cmp
shll
mov
mov
sub
sbb
mov
in
push
push
pop
into
fmuls
mov
fadds
insl
test
and
fcmovu
lcall
fsubr
sub
inc
adc
mov
xchg
mov
sub
scas
inc
jl
push
aaa
mov
cmp
cmp
xchg
leave
and
sarl
jge
mov
jp
mov
aas
sub
jp
dec
add
cmc
mov
cmp
cmp
dec
fidivl
rcrl
notb
arpl
sbb
lods
sub
push
lret
cmp
out
lods
leave
mov
jae
es
stos
sub
xor
pop
stos
fildll
xchg
sarl
sub
iret
xor
cmp
mov
imul
cmc
or
push
mov
fsubrl
lahf
iret
xor
sub
scas
ret
es
mov
dec
push
jb
mov
sbb
stos
push
icebp
les
push
stc
cs
out
fwait
cltd
scas
xor
sub
repnz
inc
pop
cmp
aas
addb
es
hlt
or
lret
fnsave
inc
xor
mov
pop
mov
int
outsl
xchg
aam
stos
lock
ret
sti
in
js
push
pop
adc
shlb
lea
and
data16
shlb
das
mov
dec
xchg
push
arpl
or
lcall
jae
dec
fs
dec
push
cmp
jo
into
lcall
mov
adc
pmulhw
xchg
xchg
jnp
movsl
das
pop
xchg
xchg
sbb
mov
and
cmp
jl
test
jecxz
xchg
ret
in
push
sarb
mov
mov
jmp
pop
mov
pushf
lds
sarb
xchg
jge
loop
lods
jle
mov
cmp
cmp
cli
lock
add
xor
pop
js
les
in
div
insb
cmpsb
cli
lds
ss
jl
jne
dec
lea
and
cmpsl
xchg
dec
or
js
orl
stos
adc
lods
add
lock
push
pop
ret
xor
xor
xor
xchg
sti
in
inc
jle
add
jle
xor
pop
push
mov
enter
ror
mov
mov
push
cmp
xchg
orl
daa
outsl
or
pop
cmp
cmp
ljmp
out
in
mov
xchg
xchg
push
repnz
push
shl
cmp
cltd
cwtl
repnz
fnstcw
cmp
xchg
test
clc
inc
clc
mov
mov
push
fstpl
cli
lahf
push
mov
aam
xchg
in
adc
xor
sbb
shrl
dec
and
lret
std
pop
sub
jmp
push
push
es
or
mov
add
add
popa
mov
pop
push
popf
pop
nop
xor
loop
loop
neg
imul
bound
gs
dec
sbbl
jl
loop
fs
add
sub
mov
mov
push
cmp
mov
adc
or
or
jge
mov
push
push
test
and
mov
adc
call
in
sbb
cmp
lcall
cmp
or
mov
popf
fstps
mov
xor
adc
jecxz
mov
and
mov
xchg
jb
sub
sbb
or
rep
xchg
lret
push
pop
inc
dec
in
add
xor
dec
sub
cmp
pop
push
dec
xchg
mov
mov
jge
mov
loope
push
loope
mov
ss
xchg
dec
xor
rclb
and
pop
xor
scas
out
cmp
xchg
popa
in
std
push
push
aas
jge
push
mov
fidivrs
adcl
mov
push
xor
imul
inc
mov
mov
and
shrl
and
je
push
fcomps
das
xchg
xor
mov
lock
mov
sarl
and
inc
repz
push
or
fcom
icebp
ds
out
faddl
or
push
lods
pop
and
push
int3
imul
or
movsl
mov
and
jo
cmc
cld
jne
mov
dec
cmp
mov
mov
and
jl
mov
xchg
fidivl
adc
xchg
push
fistl
and
adc
and
pop
cli
pop
or
cld
repz
add
scas
add
scas
ds
xor
mov
xor
jnp
js
lret
gs
push
cwtl
decl
inc
nop
mov
sub
aaa
inc
inc
push
mov
lcall
sub
inc
imul
lea
addb
xchg
mov
cwtl
repz
lods
sbb
ret
jle
push
pop
inc
pop
inc
and
lcall
adc
outsl
rorb
xor
icebp
cmp
mov
faddl
mov
test
je
shlb
loop
xor
js
test
and
and
pop
xor
pop
mov
loope
dec
adc
lahf
jmp
dec
in
pop
ljmp
iret
shl
out
test
mov
test
adc
mov
faddl
pop
lret
dec
sbb
in
nop
in
dec
loop
pusha
push
or
pop
add
mov
popf
mov
push
pushf
push
xor
adc
push
xchg
mov
jo
inc
scas
test
test
push
cwtl
or
fcom
movsb
pop
mov
mov
dec
jns
and
negb
lods
sub
jge
xor
in
dec
pop
das
pop
mov
inc
mov
out
and
adc
lcall
xchg
leave
jle
jge
mov
pop
push
mov
les
jae
shrl
cmpsl
test
mov
dec
jl
ret
sti
ss
pop
fwait
outsl
mov
sbb
fstl
repz
pop
rcrb
shrl
pop
cmp
loope
lcall
dec
mov
lahf
out
xchg
xor
adc
stos
test
jno
sbb
adc
and
jne
dec
fidivrl
cmp
cmp
outsl
jmp
in
popf
mov
push
cld
fwait
xchg
insb
pop
test
loope
cltd
push
loope
aad
ds
pop
in
call
mov
cmp
test
mov
das
mov
fidivl
es
mov
add
add
mov
pop
iret
and
test
adc
adc
sub
cld
in
std
mov
rorl
notl
pop
mov
ud2
fidivs
fidivrs
clc
xchg
pop
jbe
jo
xor
jecxz
and
push
cmp
push
mov
popf
pop
xchg
push
sbb
lret
push
cltd
sub
ret
push
push
enter
shlb
adc
inc
arpl
inc
cmp
enter
lea
imul
inc
mov
mov
sub
insl
jbe
mov
push
outsl
andl
push
jle
sbb
dec
add
cmp
push
xor
jns
mov
xorl
mov
jp
enter
inc
push
mov
lcall
sub
clc
aam
mov
jecxz
in
ljmp
popa
insb
push
jns
iret
inc
cmpsl
pushf
mov
pop
add
cmp
xor
mov
movsb
sub
adcl
sub
dec
add
fmul
add
mov
and
jecxz
push
loope
mov
push
dec
fdivs
in
cmc
dec
mov
xchg
daa
mov
and
cmpsb
mov
sub
mov
push
aad
ret
cwtl
fistpll
push
sbb
pop
ret
jno
inc
aad
repnz
aaa
add
sbb
pop
pop
loop
mov
sub
jg
jnp
int
notb
int3
dec
mov
stos
mov
mov
push
int
pushf
mov
xabort
and
jno
xlat
push
leave
test
adc
xchg
bnd
icebp
pop
pop
dec
inc
lcall
sbb
pushf
adc
leave
in
mov
int3
aam
and
mov
jecxz
or
cmp
pop
cwtl
insl
inc
inc
add
in
inc
mov
mov
iret
in
cli
inc
aad
mov
outsb
aas
push
in
int
out
xchg
outsl
outsl
sub
popa
popf
popf
jle
je
mov
pop
push
mov
fwait
cmp
insb
mov
and
in
sbb
lods
sub
iret
push
movsb
xor
fiaddl
int3
scas
pop
cmpsl
push
xor
jecxz
icebp
xlat
cmp
nop
icebp
lahf
aas
mov
xchg
xchg
out
pop
jo
or
jle
mov
xor
scas
lea
cli
jb
fsubs
aad
arpl
sub
lret
imul
dec
jle
fwait
xchg
mov
mov
lcall
mov
dec
es
fs
xlat
or
sbb
sbb
and
add
and
inc
or
es
push
dec
push
mov
mov
xor
lods
mov
dec
push
jmp
adcb
lret
rcll
cmp
ficomps
cmp
pop
loope
push
xchg
dec
test
jae
test
and
addr16
xchg
test
jmp
mov
ror
mov
mov
adc
pop
movsb
or
push
mov
mov
or
dec
dec
lahf
test
ljmp
dec
jmp
mov
lods
add
mov
cmp
pop
ds
mov
outsl
incl
inc
loope
pop
jae
adc
mov
leave
mov
sbb
call
inc
stos
xor
sarb
xchg
out
sub
das
push
jmp
jmp
mov
loop
hlt
push
xchg
push
lock
lsl
xor
and
cwtl
inc
push
shlb
iret
mov
sub
lret
pop
andps
push
cmp
xorl
subl
and
jl
or
sbb
outsl
and
xor
popw
and
add
cmc
cltd
xchg
add
adc
lds
lock
addr16
mov
loopew
dec
loop
jno
sbbl
pop
popa
pop
ja
stc
mov
ljmp
pushf
jbe
in
xor
cwtl
stos
repz
mov
popa
sarb
fnstsw
pop
or
jl
push
repnz
push
fbstp
adc
inc
loopne
cmp
mov
sti
aas
call
jno
pop
rcrb
xor
fisubs
or
mov
mov
lea
inc
and
mov
and
jmp
dec
pop
cmp
insl
adc
aam
or
into
push
cmp
dec
mov
or
jnp
mov
adc
mov
pushw
jnp
dec
xor
sub
mov
loop
dec
aad
xlat
rcrb
or
push
sub
mov
mov
jne
enter
xchg
jnp
sub
jne
xchg
es
mov
cmp
inc
jle
pop
test
mov
dec
jnp
fidivrs
sbb
rcrl
lret
test
fisubs
mov
ss
test
mov
jle
cmpsl
jl
push
xor
mov
dec
pushf
lcall
js
fcoml
cmp
pusha
pop
cmp
in
cmp
push
pop
fbld
cmp
xorl
xchg
fucomi
leave
mov
xor
int3
inc
cmp
pop
adc
leave
notb
insb
mov
dec
xchg
das
add
mov
cmpsb
adc
cltd
cmp
xor
xchg
cmpsb
std
cmp
fimull
hlt
jns
in
fnstenv
mov
sahf
not
adc
fnstenv
adc
mov
sti
movsl
inc
jge
or
dec
jge
adc
mov
sub
sub
inc
xchg
jnp
jne
jecxz
lcall
filds
adc
ret
jg
push
shlb
lahf
cmp
sbb
test
pop
aaa
cwtl
pop
xchg
loope
mov
add
jne
mov
jbe
sub
outsl
xchg
test
sub
sarl
js
scas
mov
and
mov
into
jle
scas
fwait
icebp
sub
in
lds
jge
call
push
mov
aad
ss
movsl
push
test
punpcklwd
hlt
mov
mov
push
jnp
in
jns
or
or
sbb
push
jae
sub
nop
pop
bound
xchg
repnz
test
sub
mov
mov
adc
inc
jmp
push
mov
mov
xlat
jl
ljmp
in
icebp
sbb
mov
out
mov
out
push
scas
mov
xchg
push
inc
push
jle
cmp
je
pop
jo
sbb
adc
int
inc
sbb
xor
out
mov
arpl
mov
in
xchg
mov
cmc
add
fs
push
push
scas
push
repz
sbb
xor
scas
mov
lock
outsb
shrb
xchg
icebp
into
imul
aas
mov
and
subb
lods
ret
jl
mov
push
sbb
test
stos
jg
dec
mov
jnp
push
das
cs
xchg
mov
cmp
fisttps
dec
mov
mov
lret
xchg
pop
or
daa
rcrb
inc
xlat
jg
mov
daa
and
xchg
cld
in
lret
arpl
adc
loope
cmpsl
sub
pop
pop
inc
shll
adcl
aam
fadds
popa
mov
sbb
movsb
mov
xchg
sbb
leave
into
stos
mov
iret
or
inc
adc
inc
mov
cmp
scas
shll
and
push
insb
or
out
mov
ret
add
lods
cmpsl
clc
jns
imul
add
fs
push
pop
or
sub
mov
sbb
fdivl
mov
add
or
mov
dec
push
or
xor
repnz
pusha
cmpsl
and
stos
dec
mov
add
les
mov
cmp
lods
xchg
xchg
jbe
or
lcall
mov
adc
rcr
mov
inc
fwait
xor
rcl
push
out
outsb
clc
in
test
std
shlb
repz
push
jmp
adc
jmp
stos
and
inc
and
cltd
fs
lahf
es
sbb
call
movsb
jo
fwait
xlat
andl
enter
dec
jo
pop
cmp
push
add
pop
adc
int3
pusha
jo
push
add
dec
in
cwtl
mov
add
xacquire
loop
sbb
ja
adc
push
jne
fdivs
xchg
sub
movsb
and
aam
push
mov
fdiv
out
xchg
mov
imul
out
xor
adc
ja
jbe
adc
dec
push
push
add
rcr
aam
sub
leave
push
aas
or
inc
push
loopne
repnz
inc
mov
lds
loopne
cmp
pusha
mov
xchg
outsb
xchg
call
inc
popa
or
mov
jmp
test
cmpl
insb
or
aaa
xchg
xor
push
pop
fcmovnbe
insl
cmpsb
ds
aaa
push
and
xor
sub
push
aam
call
les
aas
dec
xchg
adc
sbb
nop
xchg
decl
out
push
outsl
jg
add
iret
jecxz
sbb
dec
pop
pop
sub
shl
xchg
or
add
mov
cwtl
and
mov
or
dec
loope
cmp
sub
paddsb
mov
jnp
mov
jg
dec
jg
out
mov
ss
adc
and
xor
shl
repz
int3
cmpsl
adc
inc
inc
mov
mov
cld
scas
mov
mov
xchg
shl
js
ja
pop
sbb
mov
mul
test
and
stos
lahf
xor
mov
push
pop
pop
push
mov
imul
mov
pop
rcr
int3
scas
pop
insl
nop
cmpsl
mov
lret
cmp
mov
sbb
das
cmp
lret
sar
stos
push
sti
das
pcmpeqd
inc
pop
xchg
int3
dec
mov
inc
scas
lcall
jp
hlt
xchg
add
pop
sbb
fisubrs
test
pop
xchg
or
das
inc
cmp
sub
inc
int3
ret
out
popa
mov
push
int
cmc
ljmp
pusha
and
mov
sbb
jmp
das
pop
scas
xchg
loope
les
lock
lahf
jmp
add
or
mov
push
fwait
add
inc
clc
outsl
push
inc
into
adcb
mov
mov
cmp
push
das
movsb
adc
aad
jp
ljmp
clc
aad
mov
adc
pusha
aam
mov
jl
xor
jl
xor
sarl
mov
add
inc
xchg
xchg
aad
pop
mov
mov
das
in
loopne
mov
test
push
add
std
pop
imul
push
cmpsb
push
push
push
cwtl
jno
dec
mov
xor
dec
mov
mov
std
outsl
adc
push
mov
sub
stos
cmp
retw
adc
pop
hlt
and
add
or
mov
scas
xchg
mov
sub
mov
aad
push
pop
scas
ja
iret
mov
movsl
imul
nop
popa
arpl
mov
clc
xchg
add
mov
pop
cwtl
insb
jle
push
cmp
sbb
push
movsb
mov
stc
mov
xor
lock
lahf
mov
or
faddl
ret
lret
mov
dec
add
insb
call
adc
push
fidivrs
mov
push
imul
in
jge
pop
add
lods
lea
scas
xchg
lcall
xlat
mov
push
pop
shrl
or
clc
inc
test
adc
in
cmp
loop
pop
mov
in
adc
outsl
icebp
push
xchg
js
mov
push
loopne
shl
out
shrb
mov
and
test
dec
mov
iret
gs
stos
dec
insl
cmp
scas
gs
mov
xchg
js
rorb
fldcw
xor
jb
mov
test
adc
xor
dec
sub
imul
mov
mov
mov
call
mov
sti
pop
pop
dec
and
stc
sbbb
mov
or
xchg
or
aaa
and
mov
ret
pop
jge
pop
rcl
sub
fcoml
dec
cmp
pushf
rclw
inc
sub
mov
add
mov
mov
shll
pushf
std
add
sbb
fidivs
pushf
aam
jns
push
cmp
mov
jo
and
and
jmp
enter
ss
jne
push
lock
jmp
das
cltd
mov
scas
pop
out
pop
cmp
xchg
xor
imul
loop
lret
outsl
adc
or
jne
popa
fwait
adc
push
scas
fistpll
lods
fidivrl
aam
outsb
rolb
div
mov
stos
sub
jecxz
insl
in
or
popf
xchg
push
cmp
js
push
adc
lret
mov
hlt
sbb
lahf
push
sub
cmp
stc
movsb
xchg
in
adc
mov
cmp
inc
popf
push
sbb
jecxz
or
iret
inc
test
rcrl
sbb
dec
loope
cmpsb
or
aad
and
rcr
mov
fmull
lret
and
stos
sahf
fwait
sub
stos
aad
adc
mov
jmp
aaa
sbb
jge
stos
lods
sbb
or
adc
and
mov
outsl
mov
in
jb
imul
test
iret
iret
ds
xor
insb
lret
jp
mov
jl
lods
and
cmp
leave
sti
lods
testb
dec
stc
mov
addl
aaa
leavew
add
mov
addr16
iret
loopne
test
and
jns
in
pop
inc
lea
push
fs
test
imul
mov
xchg
imul
dec
in
sbb
inc
and
push
mov
push
xor
sbb
and
loopne
aam
pop
push
out
fwait
cmpsb
or
mov
adc
adc
xchg
scas
xor
xor
push
jge
loope
jg
mov
xchg
push
inc
add
or
xchg
sbbb
inc
sub
aas
out
mov
mov
int
push
fs
dec
jbe
inc
fisubrl
pop
aas
outsl
mov
mov
sbb
mov
repnz
andl
out
push
fs
test
cmp
mov
dec
jmp
add
push
mov
mov
aad
adc
mov
cmpsb
mov
xchg
shrl
jae
adc
xchg
or
movsl
aad
pop
mov
lds
out
push
aad
jle
outsl
mov
add
cmp
pop
test
add
in
or
aam
jns
mov
inc
xor
les
pusha
adc
or
ja
sub
cli
cmp
xchg
mov
scas
pop
xor
loope
xor
adc
xchg
push
inc
aas
or
inc
fdivrl
out
xchg
mov
pusha
imul
pop
mov
movsl
fisttpll
outsl
xor
adc
pop
fdivp
jmp
mov
and
push
push
ljmp
or
pop
test
push
adc
arpl
push
dec
mov
ja
int3
jne
mov
add
jb
sub
test
xor
push
into
mov
mov
mov
mov
loop
inc
into
jg
data16
fdivr
imul
scas
mov
mov
xchg
loop
mov
xchg
movsl
cmpsb
jo
pop
gs
insb
sbb
jo
mov
inc
out
dec
lret
and
and
dec
sahf
cmova
jmp
add
lock
sti
push
push
mov
push
pop
jb
add
aas
and
das
test
xor
push
mov
adc
mov
pusha
lock
pop
inc
call
cmpsb
ljmp
push
add
rolb
dec
out
js
mov
push
js
adc
in
loopne
lods
mov
stos
movsb
xor
mov
dec
in
jle
in
divl
fidivs
jnp
andl
sub
mov
mov
and
out
out
sub
xchg
lods
dec
out
mov
xor
bound
mov
leave
adc
xchg
bound
out
sub
int
pop
pop
adc
xchg
and
popf
xor
lcall
roll
sahf
bound
insl
cmpsl
push
adc
lret
insl
sub
movsb
cmpsb
inc
dec
aas
movsb
jae
and
dec
jns
mov
dec
cmp
nop
push
les
mov
pop
and
hlt
mov
mov
mov
inc
mov
jo
dec
jge
adc
dec
push
in
push
movsl
mov
push
loopne
mov
fimuls
stos
popf
jae
int
xchg
fmulp
rcll
inc
dec
xor
ret
mov
push
nop
int
mov
mov
mov
insl
sub
gs
jb
insb
adc
push
ficoms
fcoms
xchg
fstl
out
mov
js
mov
mov
das
jmp
lods
imul
lock
dec
mov
push
and
mov
pop
hlt
sbb
enter
sub
rclb
fwait
jg
pop
out
push
sub
sbbl
mov
rcll
lods
lds
int
adcb
lcallw
or
add
sbb
in
add
imul
scas
test
mov
sbb
sub
mov
sbb
and
sub
icebp
movsb
mov
imul
push
lods
and
cmp
push
add
mov
cmp
dec
adc
jnp
jp
mov
push
mov
pushf
xchg
lret
xchg
mov
jne,pt
push
cmp
inc
pushf
xchg
lea
into
rcrl
mov
scas
sub
int3
xchg
inc
jg
mov
cmp
cmpsb
movsl
call
outsl
add
push
dec
pop
mov
repz
ds
fcomps
dec
push
xor
or
push
movsb
into
aad
imulb
in
lcall
sub
jle
cld
icebp
sbbl
mov
jo
cmp
sbb
rorl
sti
enter
sbb
jb
mov
or
stc
mov
or
loope
inc
inc
outsl
shrl
repz
movsl
xor
std
or
cwtl
mov
mov
mov
shlb
fs
and
and
in
test
push
sbb
xor
scas
insl
pusha
sub
xchg
ror
out
and
outsl
pushf
push
stc
pop
or
movsb
push
and
aas
pop
movsl
mov
scas
jmp
dec
xor
aam
pop
std
lcall
xor
mov
pop
inc
and
cmp
pop
sbb
ljmp
xchg
inc
repnz
pop
fs
sbb
popf
gs
movsl
mov
xchg
test
in
lcall
inc
sahf
add
imul
or
subb
push
shrb
fwait
add
pop
inc
in
lea
mov
fisttpll
lret
les
sbb
mov
or
sub
pushf
jnp
roll
sbbb
pop
daa
lock
sbb
int
in
pop
xchg
mov
paddb
in
icebp
jmp
ret
pop
jo
and
inc
mov
mov
arpl
push
out
pusha
lods
aad
inc
sbb
mov
pop
jle
xchg
adc
xor
and
push
mov
es
pop
mov
adc
cmp
cmp
cmc
adc
mov
dec
dec
mov
rorl
mov
jmp
jge
imulb
adc
xor
cmpsl
xor
push
mov
push
loopne
and
es
lcall
shll
loop
aam
int3
sub
mov
add
ret
push
or
sarb
pop
dec
mov
fstl
and
hlt
adc
sub
dec
stos
lods
popf
push
cmpsb
rorb
mov
dec
repnz
lret
xor
adc
mov
dec
pop
ror
pop
xchg
xchg
rorb
sbb
or
es
mov
dec
fsubs
fsubr
mov
shr
lea
sbb
jne
imul
xor
dec
or
sub
adc
call
xlat
fs
fucom
popa
stos
lahf
out
mov
nop
in
push
andl
xchg
mov
divl
pushf
test
int3
ja
add
push
mov
sub
int
pop
cltd
jne
pop
pop
test
idivb
out
xor
das
xchg
test
imul
ror
popf
lea
xchg
and
xor
gs
pusha
xchg
xchg
ret
arpl
addl
aad
pop
cmp
or
es
dec
dec
lods
push
and
fmulp
popf
xor
inc
jae
decb
data16
mov
mov
insb
push
std
and
sbb
in
jmp
cwtl
fistps
jns
addb
xchg
out
or
xchg
ret
insl
scas
inc
mov
mov
push
add
addr16
sbb
les
and
call
outsb
push
fnstcw
adc
inc
mov
push
dec
fstps
inc
mov
jmp
xchg
sbb
int3
call
and
shr
sbb
pushf
push
mov
mov
xlat
pusha
in
push
lret
int
pop
push
dec
push
jle
push
aas
xor
jb
mov
fcoms
cmpsb
pop
xchg
sbb
and
jp
jae
xchg
pop
jp
mov
sbb
and
repnz
iret
push
push
xchg
ret
imul
addr16
pop
mov
testl
sahf
inc
dec
inc
adc
push
loopne
fld
dec
lods
mov
mov
aam
push
scas
xor
inc
in
inc
popf
or
jmp
pop
push
cmc
gs
cs
mov
xchg
popa
ds
pushf
push
movsl
and
mov
std
mov
sbbl
lds
jb
mov
test
in
das
add
mov
cmc
mov
sbb
and
lcall
cltd
mov
sbb
and
jle
test
jmp
mov
lret
xchg
mov
add
pop
and
cmp
fadds
std
ja
nop
loope
popa
std
mov
ror
or
mov
mov
das
push
jo
aas
cmp
pop
adc
mov
shl
pop
addr16
int3
dec
xor
xor
push
mov
daa
popa
imul
cmp
or
cmp
push
test
les
in
xchg
scas
jae
test
imul
call
mov
adcb
pop
dec
inc
lahf
je
inc
xchg
pusha
adc
cmp
push
inc
adc
aam
pusha
out
es
divl
mov
rcll
scas
aad
sbb
jae
les
adcl
fmull
push
pop
fstl
push
in
mov
popf
push
aaa
sti
lret
mov
ss
and
lods
fimuls
repz
pop
mov
or
jmp
lds
inc
sub
sahf
inc
iret
test
xor
mov
mov
popa
sahf
es
in
insb
fidivrs
dec
dec
sbb
xor
lret
rorb
and
push
mov
gs
aad
xor
xchg
dec
sub
xor
popa
clc
push
ljmp
fucom
add
subb
mov
ss
xchg
rorb
iret
roll
subl
push
jb
js
push
aas
jb
jmp
std
mov
dec
shlb
arpl
adc
xchg
jns
aad
enter
xchg
mov
rcrb
xchg
adc
inc
clc
fidivl
dec
and
rcrb
stos
cmp
cmpb
testb
sbbl
mov
cmp
shll
cld
daa
xchg
inc
sbb
sbb
test
test
test
int
loop
cmp
std
jne
int3
fnstenv
imul
adc
push
adc
nop
jecxz
cmp
shll
into
cmp
sbb
movsl
cmp
mov
sbb
ljmp
sbb
loope
shr
jle
and
out
xor
leave
repz
and
push
mov
fstps
inc
and
or
mov
or
hlt
adc
scas
iret
mov
pusha
shlb
repnz
inc
and
jle
ficomps
fld
push
imul
dec
loopne
in
ds
cwtl
stc
scas
adc
loope
loop
les
jnp
mov
lea
mov
xchg
and
lock
or
sub
sahf
or
addr16
popf
stc
mov
xchg
into
add
minps
sbb
sub
cltd
xor
in
add
xor
daa
in
rorl
or
clc
xor
cmp
jno
lret
stos
fstpl
outsb
into
inc
test
out
or
sub
push
xchg
xchg
adc
and
sub
or
jge
mov
mov
pop
aad
cmp
pop
xor
mov
imul
adcl
jmp
and
xor
jno
sbb
je
inc
or
xor
jnp
addb
movl
mov
aaa
and
sar
pop
xchg
out
jp
sbb
or
push
pusha
shrb
xlat
pop
mov
fidivrl
mov
xlat
jge
idiv
sbb
and
jae
mov
add
leave
mov
adc
pop
stos
or
pop
addr16
dec
lret
test
dec
pop
flds
ret
fwait
lahf
sub
xchg
dec
daa
cld
pop
aaa
call
lret
in
lea
xchg
jecxz
sbb
mov
shll
mov
aas
cmp
add
mov
je
cltd
stc
nop
cmp
jnp
add
stc
xchg
rcl
jns
xor
sub
sub
sbb
inc
inc
dec
mov
xchg
adc
mov
mov
test
mov
gs
testl
mov
sbb
ds
mov
sub
dec
movsl
test
rclb
jo
dec
pop
xchg
inc
sahf
fisubrl
aas
cmp
iret
in
mov
fnstcw
sub
out
adc
loope
iret
test
test
add
dec
dec
mov
jmp
cmp
test
jg
mov
xor
test
push
xor
push
add
les
sub
or
mov
push
aaa
mov
dec
repz
mov
sbb
daa
cmp
je
mov
mov
mov
loope
mov
dec
stos
dec
scas
pop
sbb
notl
clc
add
loop
add
pop
dec
xor
test
outsl
inc
sbb
mov
dec
push
outsb
xchg
sarl
pop
test
pop
repz
sub
jg
jle
add
jmp
outsb
inc
fimull
cmp
and
mov
push
adcb
cld
out
les
nop
mov
inc
add
mov
mov
ret
sub
lea
pop
sbb
movsb
loopne
ret
and
arpl
in
aam
pop
lea
dec
andl
imulb
in
xchg
push
lcall
mov
add
inc
aas
jge
push
mov
cld
mov
jecxz
ss
xor
sti
popf
ret
imul
ljmp
mov
dec
inc
stos
or
adc
push
push
pop
lods
sarb
repnz
fst
or
enter
stos
ret
leave
ss
xor
stc
pushf
jp
push
fiaddl
lret
inc
fs
cmpsl
jnp
aaa
fadds
pop
ds
mov
add
push
cmc
jae
lcall
xchg
imul
pop
push
iret
loopne
repz
xor
jg
pop
lret
in
repz
sub
cmp
xchg
out
out
jg
pop
adc
fldcw
stc
mov
fadds
das
cmc
cmc
add
adc
shl
jp
fcoml
jle
mov
mov
dec
add
fwait
mov
cmp
test
cmp
lahf
insl
sbb
adc
inc
or
dec
test
in
pop
mov
xchg
mov
lea
push
or
arpl
pushf
push
bound
lods
or
add
mov
and
repz
xchg
fsub
mov
xchg
mov
xor
mov
sub
push
je
int3
subl
lods
outsb
js
loope
cmpsl
cmpsb
jp
cmpsl
int
lcall
and
popa
add
testl
sub
stos
sti
cli
xchg
aas
mov
jbe
aaa
mov
push
call
dec
fnstcw
mov
dec
int3
scas
shlb
xlat
ss
mov
pop
pushf
xchg
hlt
ja
lds
cmp
stos
add
jg
mov
sbb
fistpll
mov
push
mov
and
out
imull
pop
xor
sub
jl
mov
jmp
pop
lcall
sbb
repnz
push
jmp
mov
jmp
das
pop
in
movsb
push
cld
outsl
and
push
xlat
fldenv
lea
leave
pop
push
jmp
mov
or
pop
jo
lods
out
adc
pusha
jns
test
cli
xor
ret
jo
push
addr16
mov
repnz
lea
arpl
call
xchg
xchg
lahf
jle
je
mov
push
aas
ss
mov
or
mov
rcrl
stos
and
add
dec
mov
ret
dec
inc
idivb
sbbb
std
cltd
jne
cmp
dec
push
or
mov
dec
outsl
mov
pop
mov
out
mov
aaa
int3
imul
jge
add
out
cmpsb
xchg
lahf
cmp
rcrb
orl
pop
inc
aam
push
jle
lods
xchg
jns
mov
cmp
js
roll
dec
cmp
mov
mov
dec
loopne
adc
aam
add
fidivl
inc
cmp
pop
sahf
into
cltd
xor
dec
mov
arpl
jmp
jp
sbb
and
nop
outsl
sahf
xchg
ficomps
popf
shlb
push
je
xor
push
inc
and
aad
push
std
push
dec
pop
gs
add
ror
lcall
mov
cltd
mov
mov
or
idivb
test
stc
pop
in
jae
subl
pop
call
cmp
dec
pop
add
jmp
mov
push
es
stos
sti
jae
rcrl
jo
jmp
nop
es
push
aam
and
mov
shrb
aaa
addr16
icebp
in
shll
inc
js
adc
adc
clc
jae
sti
stos
inc
sarb
test
pusha
cld
je
outsb
mov
adc
xchg
mov
orb
nop
jl
push
ficoms
je
mull
aad
rclb
inc
xor
out
aas
cmp
or
cs
pusha
pop
cld
jecxz
xchg
lods
lret
lret
rorl
sbb
rolb
outsb
lds
and
test
shll
inc
sbb
shl
inc
das
mov
dec
shlb
dec
and
xor
arpl
outsb
xchg
pop
lds
ljmp
mov
outsb
cwtl
les
and
pop
pop
add
mov
push
cli
aaa
loop
push
movsl
pop
push
push
sub
lret
jecxz
andb
push
mov
sub
jb
cld
jmp
pop
test
push
mov
mov
xor
cmp
pop
jne
into
pusha
add
test
shrb
xor
lret
repz
cmp
stc
movl
lret
aam
into
leave
out
jmp
aas
aad
fsubr
mov
out
adc
lahf
mov
loopne
sbbb
mov
xchg
jbe
ljmp
imul
lods
inc
xchg
mov
push
call
mov
loopne
mov
jbe
cli
mov
into
divl
and
jbe
repnz
pusha
xchg
and
sbb
xchg
mov
inc
inc
addr16
les
subb
std
les
jmp
shll
popf
ljmp
jns
xor
loop
mov
test
out
push
xchg
lods
sbb
fidivrs
xchg
inc
jne
inc
mov
das
fnstcw
adc
cwtl
cmp
and
cmc
mov
movb
jnp
xlat
dec
js
rcrb
cmp
nop
cmp
ret
loop
call
jb
mov
push
test
iret
cmpl
fimull
sahf
xchg
in
jbe
mov
stos
pop
jo
mov
jg
shrl
mov
sbb
rorl
out
sbb
pop
stos
pop
repz
stc
mov
dec
sbb
das
mov
push
pop
cs
insb
int
mov
std
jne
xchg
scas
push
outsl
mov
push
test
mov
aam
fsub
jns
mov
or
or
aas
pop
ret
out
sbb
or
popa
imul
pslld
fwait
mov
mov
add
mov
loop
pop
adc
ret
mov
fsubrs
ficompl
xchg
mov
movsl
push
out
loop
push
cmp
data16
pop
in
fldt
jle
loope
inc
scas
cltd
adc
mov
jmp
mov
mov
aad
sub
stc
shlb
and
scas
mov
jmp
mov
adc
shrl
xor
inc
call
cwtl
push
adc
negl
pop
in
popa
and
jns
sarl
xchg
jmp
or
add
mov
sahf
push
or
fimull
cmp
jno
mov
push
ret
jnp
je
mov
mov
gs
cmpsl
lcall
sbb
mov
mov
xor
dec
xor
pop
es
push
rolb
fcomps
xlat
mov
shufps
xchg
push
xchg
out
fs
push
xor
pop
jecxz
push
clc
popf
or
scas
imul
xor
jns
mov
inc
mov
push
and
lcall
clc
aad
mov
lcall
and
mov
mov
or
sub
ja
jo
sbb
out
sub
dec
into
stc
mov
clc
imul
mov
into
and
pop
cld
sub
fistpll
sbb
inc
xor
xor
push
sahf
ds
je
mov
mov
xor
fdivrs
add
mov
repnz
fcmovb
jbe
xchg
test
fcmovnu
gs
lcall
in
repz
pop
in
lods
dec
das
dec
call
addr16
mov
outsb
cmp
mov
and
adcb
mov
mov
and
lcall
sub
mov
in
xchg
imul
stc
dec
cmp
cli
repz
sbbl
mov
sahf
dec
std
shlb
aad
aas
repnz
cmp
cmpsb
loope
dec
inc
xchg
imul
adc
cli
inc
sub
das
push
arpl
inc
scas
jnp
xor
faddp
orl
cmp
imul
cmpsl
popf
jecxz
dec
inc
sub
mov
mov
call
push
std
inc
cltd
or
jg
inc
xor
fimull
in
pushf
subl
mov
idivl
xchg
push
add
lods
jl
jbe
jl
fwait
je
or
push
movsb
and
push
in
test
jge
fwait
adc
popa
lds
out
xchg
inc
push
mov
jl
jg
fsubrl
fsubl
inc
dec
or
mov
ja
test
and
nop
add
mov
fdivr
push
icebp
sbb
or
cvtdq2ps
roll
orl
loope
repnz
cli
lods
cwtl
push
out
insb
rorb
lahf
push
sarb
inc
mov
adc
cmp
mov
xor
loopne
shll
call
adc
aam
shlb
into
in
jg
clc
jecxz
or
jno
test
insb
xor
mov
cmp
inc
das
addb
std
pop
cmpl
scas
aas
and
adc
push
shll
or
push
and
cli
inc
mov
jle
aad
push
andb
cltd
xlat
mov
mov
outsl
cmp
mov
xchg
jl
rcrl
cmp
push
xor
lret
adc
movsl
testl
mov
adc
mov
push
mov
clc
cmp
or
push
jle
cltd
into
gs
dec
lea
fidivl
xor
fldenv
cltd
or
int3
sub
adc
or
sub
jle
mov
inc
insl
xor
ljmp
jne
mov
mov
mov
lods
mov
stos
dec
jmp
pushf
sbb
lods
pop
inc
mov
gs
pop
add
push
mov
xor
popa
in
fsub
shrl
movsl
cmp
ficoms
mov
xlat
dec
enter
fldcw
ss
push
mov
lds
xchg
jmp
sub
mov
stc
lcall
jnp
cmp
or
push
xor
xor
loop
mov
cmp
sbb
inc
and
fwait
push
add
inc
cmpsl
leave
xchg
dec
jmp
add
in
mov
push
and
mov
mov
xchg
pop
imul
xchg
jp
jns
rorl
sbb
xorl
or
out
xchg
leave
pushf
sbb
fists
mov
mov
xchg
sub
push
shll
xchg
sarl
les
sbb
pop
and
sub
pop
xchg
repnz
pop
outsb
push
pop
cmpl
pop
cwtl
pop
xlat
pop
daa
sbbb
mov
test
sahf
je
loop
int
stos
cli
in
push
jmp
jl
cmpsb
push
cltd
xchg
call
out
pop
fistl
cmp
clc
push
xlat
call
loope
xor
xor
out
movmskps
aas
adc
mov
in
clc
and
mov
inc
call
lret
sbb
pop
sahf
aaa
test
or
rol
xor
nop
icebp
adc
sub
loope
std
cmp
add
pusha
jnp
xchg
mov
sbb
mov
or
stos
jp
add
mov
push
out
fcmovbe
je
scas
cmpsb
mov
or
cltd
xchg
stos
orb
ret
sbb
test
je
int3
out
dec
push
or
repz
xchg
sbb
or
cmpb
mov
pushf
sub
inc
adcb
and
pop
cli
pop
sub
mov
xor
hlt
lahf
sbb
nop
out
jl
or
pop
dec
or
stc
mov
pop
imul
cmp
xor
dec
nop
add
and
in
or
popa
pop
mov
xchg
fst
pop
imul
aam
gs
test
jb
xor
insb
pop
pusha
cmc
sub
mov
or
sbb
sub
lahf
aam
hlt
shlb
iret
aam
gs
clc
nop
nop
push
outsl
mov
and
test
or
lret
sbb
sti
add
xchg
add
movsl
mov
add
divb
mov
std
mov
loop
incl
and
xchg
jl
mov
movsb
xchg
jo
js
inc
and
mov
out
push
lcall
in
or
inc
fnstcw
inc
mov
fcom
xchg
fsubrl
mov
mov
outsl
mov
in
xor
and
rorb
add
hlt
jecxz
loopne
fsubp
fdivr
xor
mov
jl
orb
outsb
xchg
cmp
mov
outsl
sub
add
enter
mov
push
aad
mov
sbb
ficoms
dec
sbb
xchg
mov
inc
mov
test
dec
ret
push
aam
push
scas
rcr
jmp
xor
dec
add
mov
cmp
xor
cmp
lahf
pop
lcall
test
cmp
adc
nop
ja,pt
jne
in
sahf
outsl
mov
cmpsl
jno
scas
pop
xor
testb
and
test
mov
sub
pop
xlat
mov
imul
movsl
fiaddl
lea
adc
sti
mov
ret
cmp
lcall
mov
and
inc
fisubrl
jb
fwait
outsb
and
movsl
in
mov
adc
mov
imul
cli
jg
dec
ja
jecxz
and
fs
int3
out
xor
mov
clc
nop
leave
in
out
stos
dec
cmp
jmp
jp
jno
push
and
mov
cmp
imulb
push
jae
and
push
xor
js
and
sub
or
test
push
xchg
mov
pop
push
inc
mov
movsb
cmp
cmp
sub
icebp
adc
ds
mov
repnz
pop
and
fmuls
mov
fcoml
bound
sub
inc
repz
jg
cmp
xor
sbb
jg
leave
fnstsw
in
mov
dec
test
neg
outsb
outsl
dec
cmp
addr16
jp
pop
sti
or
dec
repnz
outsb
dec
popa
cmp
lahf
sbbl
mov
inc
lods
xchg
adc
and
pop
sbb
jmp
in
push
daa
jg
mov
lret
mov
sahf
or
mov
outsl
xor
adc
sub
stos
pushf
int
pusha
sarb
push
in
inc
ss
int3
test
pop
add
fs
adc
cltd
int3
nop
insb
xchg
xchg
sbb
cmp
push
int
or
pop
sahf
scas
sti
lret
xorl
test
mov
sbb
cmpsl
and
and
outsl
ret
ret
pop
outsb
push
iret
xchg
imul
ficoms
lock
xor
push
or
loopne
rcrl
mov
dec
adc
les
adc
and
xor
sub
loop
data16
mov
and
lock
mov
shll
mov
dec
xchg
cmp
iret
xor
lock
mov
sahf
ljmp
cmp
movsb
sub
adc
sub
mov
push
sahf
adc
or
cmp
jns
cmp
std
sbb
stos
aas
inc
mov
arpl
cmp
mov
ja
or
push
lock
cmpsb
jg
add
mov
dec
cltd
push
sarb
in
imulb
xlat
in
or
ret
and
jns
jecxz
cmp
jb
push
jp
push
out
dec
ret
faddl
inc
out
add
dec
jmp
or
ss
out
call
add
nop
scas
aam
insl
cmp
inc
daa
lds
adc
div
inc
outsl
push
pop
xor
add
xlat
and
imul
xchg
pusha
mov
sub
pusha
mov
mov
imul
mov
sti
dec
sub
or
xchg
into
add
in
notl
enter
and
xlat
adc
jle
dec
or
je
ficomps
out
cmpb
sbb
cli
mov
xchg
stos
repz
leave
testb
mov
or
lea
popf
ret
cmc
xchg
or
xor
hlt
inc
push
in
mov
inc
outsb
mov
sbb
pop
shlb
mov
sahf
mov
mov
int3
dec
push
cld
pop
shrl
sbb
loope
and
lcall
cmpsl
sbb
xor
cltd
xchg
xchg
loope
cmp
sbb
inc
xchg
cli
loopne
xchg
mov
popa
std
mov
xor
jg
jecxz
jg
aam
ret
mov
mov
daa
pop
andl
jle
jmp
jmp
mov
lret
jl
mov
test
and
pop
add
pop
pop
fisubrl
adc
jg
sahf
incb
shll
jb
push
clc
nop
mov
das
push
xor
xchg
subl
lret
in
sub
cmpsb
das
aad
insb
xchg
stos
jecxz
pop
cld
fsubrs
push
cwtl
and
mov
pop
mov
imul
or
mov
sub
js
jb
jo
pop
mov
filds
mov
xchg
inc
sub
nop
iret
lahf
add
andb
push
xor
test
mov
les
jg
cvtps2pd
mov
push
jae
push
cmpsb
or
gs
inc
mov
xchg
repz
push
leave
jne
push
sub
sahf
pop
lds
clc
fsubl
mov
sbb
lret
inc
cltd
jae
dec
shrb
mov
mov
pop
outsl
aam
inc
dec
lods
clc
mov
mov
sbb
test
sbb
xor
ret
fistpll
sbb
push
adc
dec
les
pushf
and
int3
mov
test
inc
dec
push
xor
inc
aas
adc
mov
outsl
xor
out
cmp
lea
add
aaa
add
mov
stos
adc
in
lret
mov
pop
sbb
cmc
xlat
pop
pop
filds
jecxz
push
aas
pop
and
push
lcall
jae
or
lea
jp
rol
push
mov
xchg
and
lret
fisubrs
das
cmc
stos
mov
les
je
push
mov
movl
dec
out
pushf
popf
jbe
lds
aaa
int
adc
jo
xchg
stos
imul
into
push
mov
mov
jp
jp
and
pop
aam
cmpsl
push
fdivrl
sbb
test
cmpsb
push
push
addr16
add
call
negl
aam
or
jecxz
adc
pop
leave
in
pop
mov
xor
outsl
les
das
imul
adc
sbb
lcall
aaa
stos
dec
fcoml
pop
fincstp
arpl
pop
testl
nop
jbe
inc
sbb
jno
lcall
push
in
sub
ret
scas
adc
cli
adc
xor
mov
sbb
jne
lods
cmp
push
cmc
dec
js
cwtl
into
dec
jbe
and
sbb
dec
insl
push
imul
icebp
insb
dec
inc
cmp
cmp
or
jno
les
sub
insl
lcall
inc
lods
in
cmovl
jmp
ret
cmp
xchg
add
loop
test
or
cwtl
lret
xor
mov
scas
rcrb
imul
jbe
pusha
nop
push
roll
imul
pop
out
nop
fcmovb
inc
pop
dec
pop
add
mov
sbbb
xor
cwtl
inc
enter
mov
fists
pushf
xorl
jnp
sub
ficoml
adc
mov
out
out
mov
out
popa
push
jmp
sbb
adc
mov
scas
inc
or
scas
fnstcw
push
jecxz
flds
sub
pop
mov
fiadds
iret
lds
mov
or
inc
dec
daa
push
call
lods
mov
mov
mov
je
ret
addr16
pop
jbe
mov
adc
jb
cmp
jge
mov
jl
push
aad
inc
lcall
test
jle
mov
testl
push
push
mov
test
mov
inc
lods
sbb
mov
xchg
aad
fstpl
mov
and
mov
inc
mov
jmp
fstpl
push
inc
insl
notb
lods
imulb
roll
test
daa
test
mov
out
sub
scas
mov
mov
clc
sbb
sahf
mov
push
add
or
inc
jmp
cmpsb
sbb
rclb
fdivrl
scas
cmpsl
inc
sarl
or
push
ret
add
adc
cwtl
pop
xchg
loopne
dec
jl
inc
mov
cmp
and
push
push
je
cmp
add
inc
push
mov
aas
daa
push
nop
cltd
pop
xor
arpl
dec
push
jne
idivl
jmp
addr16
into
aaa
cmc
xlat
je
fdivrl
pop
inc
shrb
pop
add
mov
pop
mov
mov
xchg
fnstenv
inc
bound
mov
sub
mov
xchg
sbb
aaa
test
adcl
arpl
in
test
xor
loopne
mov
jg
xlat
repz
sarb
imul
mov
mov
test
inc
sbbb
fwait
mov
int
arpl
in
inc
add
push
imull
adc
iret
or
int
enter
push
cwtl
lods
add
mov
dec
inc
cmc
mov
test
andl
cmpsl
das
or
hlt
mov
cli
and
jns
call
jb
ds
xchg
sub
xchg
xor
in
pop
sbb
pop
sbb
mov
mov
shl
pop
xchg
aas
lock
mov
xor
sarl
scas
es
mov
pop
sub
in
ss
inc
mov
dec
sbb
xlat
add
hlt
push
es
leave
push
adc
scas
lock
popf
in
aaa
pop
xchg
ficoml
out
mov
iret
icebp
push
pop
fstpt
xchg
adc
lcall
test
pop
mov
lcall
lods
pop
push
jecxz
dec
sub
xor
hlt
mov
rcl
sar
iret
cmovge
ja
xchg
std
jae
popf
test
pop
lret
push
pop
xor
insl
shlb
cmpsb
popa
aaa
lock
insb
daa
es
shll
repnz
pop
aad
push
ss
dec
dec
repz
push
cld
cmpsb
inc
xchg
push
js
std
sbb
sub
cmpsl
je
push
push
mov
mov
adc
test
push
iret
roll
pop
jnp
cmp
xchg
or
sbb
cmp
cs
gs
jae
cmpsl
cli
inc
or
sub
mov
cmp
cmp
imul
jecxz
cmpsb
sbbb
push
dec
jno,pt
or
int
pop
call
inc
inc
fwait
rcll
and
cmp
iret
lods
dec
pusha
dec
outsb
outsb
mov
or
loop
mov
xor
pop
add
rorl
fwait
insb
es
shll
adc
pop
lret
sbb
pop
adc
xor
cmp
jecxz
jnp
in
rclb
daa
jmp
rolb
mov
in
push
jno
jno
mov
daa
pop
xor
insb
mov
mov
and
aas
test
ffreep
ss
movsb
outsl
xchg
mov
outsb
jle
and
mov
test
mov
imulb
jp
sub
push
shl
push
add
adc
adc
push
add
in
jo
and
pop
mov
pop
mov
sbb
pop
cmp
mov
rcrb
xor
add
jo
mov
push
push
mov
sbb
cltd
jp
xor
adc
jne
cwtl
cmp
mov
mov
fmull
fiadds
jl
pop
int3
inc
rcll
cwtl
lret
out
add
outsl
shll
mov
cmpsl
stos
aam
and
in
and
hlt
dec
aad
int3
and
icebp
push
jge
jae
jmp
jnp
loop
lret
shll
xchg
mov
cli
and
mov
inc
push
push
andl
arpl
in
jle
push
cmpsl
ja
outsl
or
mov
or
sbb
std
fdivr
ret
sub
jge
cmc
and
pop
sub
jo
and
inc
lods
sbb
ret
bound
pop
mov
mov
ss
aaa
sbb
xor
push
mov
add
cmp
or
xchg
cld
pop
cld
push
flds
fnsave
fdivrl
arpl
xor
addr16
push
subl
fdivrl
adc
fcoms
popa
cmp
xchg
leave
inc
lods
adc
fistpll
loope
xchg
sub
mov
rcll
ja
xor
mov
xchg
xor
mul
dec
jge
andb
mov
push
jl
inc
push
mov
sbb
dec
aas
gs
movsl
xchg
in
movsl
xchg
outsl
scas
insl
sti
pop
clc
xchg
adc
xor
mov
sbb
adc
ljmp
push
fs
test
jo
xor
popa
fwait
dec
fdivrs
sarl
xor
inc
pop
inc
xor
cltd
in
jbe
sub
incl
dec
mov
pushf
jo
aam
ret
jne
sbb
pop
sub
shl
fidivrl
enter
sub
mov
lahf
movsb
scas
mov
push
int3
sti
cmpsl
daa
dec
fldl
ss
jbe
mov
ret
adc
repz
in
shrb
lea
nop
push
loop
push
mov
xchg
stos
fldt
xor
dec
test
add
lods
sahf
movsb
push
mov
into
xchg
mov
in
repnz
xchg
cli
jmp
pushf
into
mov
pop
sbb
sub
insl
and
loope
xchg
push
rcrl
loop
adc
stc
xchg
add
popa
arpl
hlt
mov
and
or
mov
ja
lret
lds
int
mov
mov
loop
insb
mov
fwait
push
sahf
loop
inc
sub
push
mov
mov
sbb
out
xchg
je
aas
mov
jae
icebp
sub
add
out
loope
and
mov
sbb
pop
add
mov
rolb
xchg
sbb
jl
enter
std
cmp
or
jns
fimull
outsl
iret
cmp
sub
pop
adc
lea
mov
and
aad
cmpsl
dec
hlt
mov
mov
jnp
xchg
inc
pop
adc
shl
adc
cmc
or
insl
ja
xlat
sarl
mov
ret
into
sub
lods
mov
jmp
lahf
mov
jg
pop
xchg
xchg
push
inc
adc
and
pop
loope
pop
sub
mov
jg
dec
inc
es
mov
xchg
sbb
call
xor
or
pop
jae
hlt
aad
clc
fs
insl
leave
adc
and
nop
das
push
fsubrs
jb
in
test
in
movsb
sbb
inc
push
dec
out
mov
pop
call
call
lds
lahf
jmp
dec
xchg
jno
popf
inc
test
sahf
mov
dec
push
test
jne
inc
aad
adc
cs
and
clc
cli
std
sbb
adc
jbe
inc
int3
pop
bound
adc
out
inc
cmp
lea
pusha
mov
jge
jmp
pop
jg
cmpsl
icebp
cmp
das
xchg
in
out
adc
clc
out
cmp
enter
repnz
mov
sarb
rcrb
addl
hlt
add
xchg
loope
ja
pop
fistps
jmp
cmp
je
inc
in
ficoms
or
movsl
repz
addr16
push
sub
das
lahf
movsb
mov
mov
push
popa
push
jl
pop
pop
fwait
dec
nop
xchg
rolb
jp
pop
or
or
adc
popf
sub
cmp
xchg
xor
push
sti
sti
flds
add
xchg
mov
push
cmp
cmp
jb
fisubs
arpl
leave
fs
push
jecxz
jl
aas
bound
dec
hlt
fadd
rcrl
shll
sbbb
shrb
in
jge
dec
xlat
movsl
call
sbb
std
repnz
sbb
and
icebp
inc
mov
loopne
stc
ret
mov
aam
jle
mov
stos
mov
mov
pop
add
or
add
adc
out
gs
xlat
sbb
fbld
je
add
femms
adc
xchg
test
fidivl
sub
int
mov
jmp
fwait
sub
popf
scas
sub
mov
push
inc
adc
dec
jl
out
add
cmc
xchg
push
hlt
ficomps
loop
pop
cli
dec
enter
mov
jge
popa
test
lcall
pop
movsl
and
cmp
shrb
cld
push
dec
testb
dec
scas
mov
cs
gs
stc
xchg
push
mov
mov
inc
mov
jl
dec
aaa
in
and
stc
movhps
aas
iret
mov
lea
inc
xlat
push
jo
xchg
gs
test
js
jl
and
or
pop
pop
test
int
add
inc
cltd
push
popa
into
adc
jmp
sub
cmp
inc
test
je
sbb
pusha
clc
ljmp
imul
sub
push
inc
rorb
cwtl
jne
outsb
iret
imul
sbbl
xlat
dec
lds
sub
mov
and
fcoml
add
mov
notl
test
jecxz
push
push
inc
out
cmc
or
das
or
lcall
aam
xbegin
ljmp
cmp
add
and
sbb
out
xchg
sbb
popf
mov
clc
dec
xchg
popf
fsubl
scas
jo
and
imul
fwait
push
pop
fsubrl
push
and
cmp
dec
push
xchg
iret
adc
push
mov
add
in
cmpb
mov
cli
in
pop
stos
dec
push
loope
inc
mov
and
cmp
push
jno
fsubp
pop
xchg
pop
testb
push
scas
pop
iret
xor
sbb
inc
mov
das
ja
lods
sub
cmp
leave
lds
mov
icebp
xchg
js
and
mov
xchg
movsl
cmpsl
sub
mov
adc
es
xchg
push
xor
push
lret
or
inc
adc
push
or
xchg
imul
sub
mov
mov
push
push
sarl
cmp
out
xchg
xchg
out
sub
cld
dec
and
mov
sar
scas
ljmp
leave
and
xor
das
bnd
mov
sub
dec
rclb
push
xchg
sub
mov
pop
xchg
lea
cmp
movsl
add
sbb
les
mov
mov
pushf
mov
or
adc
rorl
dec
fbld
sbb
dec
je
call
pop
test
push
lcall
js
fwait
or
pop
pop
fwait
jno
pusha
data16
into
sbb
or
add
iret
divb
das
mov
adc
sbb
mov
cwtl
test
adc
pop
hlt
out
mov
xchg
lret
inc
cmp
xchg
sbb
mov
jno
adc
fcompl
xor
adc
and
pop
imul
dec
sbbb
xchg
mov
or
lods
clc
mov
inc
out
mov
pop
dec
jl
cmp
call
add
fidivrs
icebp
dec
jae
aas
repz
movsl
xor
rcrl
xchg
sub
fwait
jno
xorb
in
loop
test
mov
std
out
cmp
leave
jo
lahf
leave
add
push
mov
sti
ljmp
scas
andl
jmp
in
std
pop
pop
mov
mov
push
xchg
mov
or
sub
outsl
das
outsl
cmp
adc
dec
jmp
cmp
pop
out
cmpl
sub
fisubrs
pop
mov
xlat
pop
clc
sub
jne
mov
sbb
out
mov
xchg
mov
lret
push
movsl
push
imul
xor
inc
mov
sbb
clc
inc
jae
idivl
pop
xor
pop
out
mov
fstps
rcr
mov
push
inc
add
mov
mov
xor
insb
bound
cltd
inc
xor
cld
xchg
cmc
sti
mov
loop
pop
imul
or
sbb
sub
xchg
inc
or
scas
and
popa
lahf
jae
sub
in
ret
mov
adc
sub
xorl
lds
dec
inc
add
xor
xchg
nop
mov
xlat
in
push
out
addb
mov
inc
decl
lea
add
call
int3
adc
xchg
add
cmp
fildl
popa
into
cmp
inc
pop
aas
inc
add
fs
ret
lock
cltd
jnp
or
in
xchg
lret
inc
inc
ret
aaa
in
scas
aam
inc
sub
and
pushf
hlt
xor
jle
mov
adc
popa
adc
xor
iret
pop
int3
sub
mov
mov
sub
out
mov
mov
xor
mov
out
cmp
mov
fdivs
ljmp
mov
sarl
js
cmpsb
aam
cmp
filds
stos
pushf
mov
insl
loopne
pop
cmpsb
shl
hlt
sub
mov
fisubl
dec
pop
mov
push
pop
repnz
out
dec
mov
xlat
mov
jno
outsb
jno
sbb
adc
lods
xchg
jb
mov
movsb
out
lods
adc
xchg
movsl
inc
and
stos
inc
mov
cs
pop
mov
mov
push
sti
cltd
repz
inc
aad
xchg
cltd
dec
je
cmpsl
jp
dec
cmp
jnp
pop
fstpl
andl
cli
aaa
inc
pushf
dec
inc
mov
mov
cmp
loopne
dec
lds
mov
or
fwait
iret
int3
lea
scas
fidivrs
icebp
repz
mov
inc
add
faddl
and
das
jge
push
loopne
scas
dec
ss
sarb
notb
aaa
sub
jo
setns
dec
movsb
stos
push
mov
mov
push
push
rep
ficoms
add
sahf
inc
fbld
jne
or
pop
push
push
push
add
loope
pop
cmp
push
and
mov
dec
push
push
movsl
mov
aam
xor
xchg
ret
pop
inc
sub
mov
mov
mov
adc
stc
cmp
cmpb
mov
sub
cmpsb
jbe
in
fdivrl
mov
mov
lahf
sbb
gs
enter
adc
into
lcall
repz
out
jmp
ret
xlat
sbb
ret
in
xor
sub
mov
notb
repz
adc
add
or
xchg
sbb
imul
divl
xchg
cmp
dec
mov
lods
adc
imul
imul
jle
cli
mov
jb
sbb
and
jns
push
int
mov
gs
inc
into
pop
test
loopne
add
sub
mov
enter
cmpb
xchg
adc
mov
sbb
iret
rorb
mov
xchg
dec
xor
jge
cmp
push
xchg
cmpsl
call
or
adc
mov
test
jl
fsubl
sbb
imul
sbb
and
push
lods
pop
cwtl
movsl
sub
aam
jmp
es
mov
sub
fidivrl
mov
dec
in
push
mov
leave
lret
push
scas
inc
scas
pop
and
mov
mov
in
leave
or
xchg
stc
aam
addb
sar
sbb
repnz
popa
or
xchg
js
or
jp
push
fwait
ret
pushl
mov
and
xor
add
mov
loop
popa
jae
jl
rcll
inc
cmp
jae
push
fprem1
inc
lods
xlat
stc
xchg
cmp
push
imul
in
popa
inc
out
movsl
adc
add
imul
lock
adc
mov
sbb
jecxz
mov
sub
sbb
pop
jno
jge
stc
pop
dec
jge
adcl
stos
mov
stc
adc
jmp
jp
imul
sbb
xchg
icebp
adc
lea
mov
pop
fsubs
dec
jge
in
mov
inc
cwtl
adc
repnz
pop
cmp
js
dec
mov
es
inc
ss
rorb
popa
stc
lret
testb
iret
mov
pop
ja
arpl
or
sbb
cld
xor
and
jge
cwtl
mov
jmp
shrl
fisttps
pop
in
fbstp
and
fisttpl
sbb
push
sub
out
push
test
aaa
int
adc
sub
jp
or
gs
fcoms
inc
nop
int
movsl
dec
pop
push
lods
adc
lds
lret
lods
in
mov
mov
xor
or
push
inc
pop
lcall
scas
jo
in
inc
cld
addr16
sahf
icebp
adc
fs
lahf
jns
jns
or
std
test
stc
fs
loope,pt
out
dec
cmp
push
popa
inc
shlb
mov
and
scas
aad
push
cmpsl
pop
repz
aaa
into
lcall
mov
sbb
push
rcl
stc
stos
push
lock
out
leave
call
dec
adc
mov
xor
push
lock
mov
bound
push
ffreep
xor
or
in
inc
lret
xlat
adc
and
or
lock
imul
add
pop
push
addr16
mov
lahf
mov
stos
clc
adc
push
xchg
pop
mov
stc
fsubr
push
popa
mov
dec
fimull
sbbl
and
lret
orb
test
push
fadds
das
les
mov
out
lods
repnz
aad
mov
loop
pop
scas
pop
ljmp
cmpb
mov
mov
mov
add
rorl
aam
xor
aaa
outsl
in
mov
mov
xchg
cmc
cmp
sbb
hlt
pusha
jb
jbe
fstpt
cmp
jp
push
into
imul
ja
mov
mov
scas
xchg
cmp
push
adc
adc
adc
inc
loope
popf
pop
je
nop
push
orb
and
stos
push
pop
stc
cwtl
test
jge
sbb
out
rcr
mov
push
mov
fadds
not
icebp
clc
mov
push
data16
clc
mov
test
rorb
adc
ds
sarl
pop
sub
loop
out
sbb
jmp
and
push
pushf
or
into
mov
pop
jnp
mov
int3
or
loope
inc
iret
xchg
fadds
pop
jge
fidivl
push
repz
sahf
shrl
mov
imul
pop
fisubl
gs
sub
ss
push
out
je
pop
xorl
lods
stos
inc
imulb
dec
sbbl
mov
mov
push
jmp
ljmp
int
pop
decl
test
mulb
adc
fnstenv
push
or
in
add
rcll
jmp
jle
jp
push
xchg
cmp
or
shll
into
pushf
lock
mov
fs
int3
inc
jmp
outsl
mov
sbb
push
mov
sub
adc
das
xor
add
movsb
push
ret
into
jne
arpl
pusha
cmp
or
cmp
inc
call
and
push
push
mov
out
fildl
outsb
out
mov
sbb
iret
hlt
gs
roll
inc
xor
imul
adc
and
adc
hlt
and
fdivp
inc
bnd
ret
sbb
scas
dec
imul
ja
mov
jbe
bnd
xchg
lods
lcall
inc
test
jne
out
cmc
cmpsb
dec
dec
inc
push
mov
dec
adc
mov
clc
por
imul
dec
loop
mov
xchg
cmc
mov
dec
leave
in
repnz
inc
ljmp
sbb
add
test
push
inc
jo
clc
or
cmp
jnp
push
incl
xlat
xchg
push
icebp
rorb
mov
add
mov
and
adc
lcall
decl
int3
mulb
dec
xchg
push
and
outsl
stos
add
or
jl
lret
movsb
gs
fisubrl
jb
sbb
nop
pushf
mov
dec
in
shlb
cmp
repnz
decb
push
hlt
pop
neg
inc
std
in
push
hlt
or
mov
xor
jl
jae
fmuls
push
adc
in
fldt
mov
jge
xor
push
dec
loop
mov
cmp
xchg
or
in
imulb
pop
mov
repnz
dec
mov
pushf
or
inc
push
adc
mov
sub
in
push
xor
mov
add
sbb
dec
arpl
popf
sub
push
cmp
push
movsb
lret
push
dec
imul
cmp
dec
clc
jmp
sbb
aam
negl
scas
cwtl
stos
fmull
scas
adc
sti
adc
push
cmp
cs
rclb
les
imul
xor
xor
xchg
faddl
in
push
and
mov
leave
mov
test
lcall
mov
or
xchg
push
mov
pushf
stos
addr16
std
inc
int
rorb
pop
insb
add
add
fldenv
cmpsl
mov
orl
xchg
rcrb
jno
cmp
test
jmp
movsb
xor
sahf
push
fwait
cmc
cs
mov
icebp
xlat
lahf
mul
ficompl
push
es
neg
aas
and
dec
fistl
cmp
or
sbb
loop
repnz
add
xor
mov
xor
jge
call
movsl
mov
mov
add
add
sub
test
jg
popa
mov
sti
mov
sarb
or
pop
push
and
mov
or
stos
dec
and
and
cltd
and
adc
lods
test
insb
jnp
push
sbb
gs
mov
inc
cmp
daa
scas
mov
jns
lea
xor
imul
insb
mov
test
and
mov
mov
adc
movsl
pop
dec
pushf
sti
in
push
int3
out
mov
daa
loope
fdivs
pop
mov
aaa
imul
add
std
je
inc
gs
fidivrl
rclb
fdivr
ja
movsb
pop
sbbl
loope
shlb
scas
fistps
jecxz
repz
dec
mov
cmpsl
andb
inc
ret
xor
and
ror
sub
pop
xchg
insb
in
cmp
repnz
push
mov
push
sbb
fs
inc
mov
lock
mov
popa
ds
mov
sub
pop
imul
jecxz
lret
pop
out
subb
and
xchg
fst
pusha
or
lods
jle
cmp
add
and
push
insl
dec
scas
sub
sahf
sbb
jbe
adc
mov
or
fisubs
pop
cmpsl
and
push
aaa
adc
iret
add
mov
call
mov
mov
pop
fiadds
mov
popa
int
fimull
enter
ss
scas
je
push
pop
add
int
xor
jmp
aas
mulb
pop
sti
xchg
inc
ficompl
outsb
sub
sbb
lcall
cmpsb
push
lret
xchg
scas
rorb
lret
mov
add
nop
pop
int3
out
lods
or
lcall
pop
stos
xchg
dec
data16
jno
das
add
add
pusha
je,pn
add
loopne
cmp
jb
int
sub
cltd
jle
and
clc
pop
dec
mov
jge
fldt
aad
aas
cmpsb
daa
add
xchg
inc
outsb
push
jge
aas
std
leave
mov
popf
sbb
jno
sahf
pop
insb
add
push
and
jbe
int
dec
out
loopne
mov
mov
into
pop
outsb
and
lcall
mov
cmpsb
xor
popa
mov
fildl
inc
inc
repnz
int
jnp
mov
adc
jb
push
loop
adc
dec
pop
inc
xor
in
popf
or
xor
cmp
or
adc
je
xlat
jb
inc
inc
insb
mov
jns
addr16
out
inc
outsl
aad
repnz
jle
idiv
mov
push
test
and
mov
movsl
lods
mov
sub
test
out
in
and
jg
lret
xchg
lds
addr16
jp
add
sub
mov
movsl
pop
and
scas
inc
push
repz
inc
pop
dec
sti
lret
mov
pop
js
or
and
cs
inc
popa
jge
xchg
jnp
enter
pop
decb
std
popf
push
ror
mov
fsts
xchg
lret
enter
leave
sub
mov
add
and
outsb
imul
mov
mov
jge
clc
pop
ret
sub
pusha
and
adc
inc
fcomps
sbb
inc
xchg
jne
jge
cmpb
and
notl
fwait
imul
or
dec
mov
xor
xor
jg
imul
pop
popa
shlb
dec
and
inc
xchg
push
frstor
into
xchg
jb
shl
cmp
pop
jmp
cmpsb
dec
insb
popf
data16
sub
fistl
jbe
mov
out
and
into
imul
fstp
xchg
das
lcall
or
in
testl
imul
adc
mov
inc
or
lret
fwait
into
stc
adc
fsubrs
add
mov
hlt
or
xchg
stos
inc
add
cmpl
cmpsb
push
dec
addr16
insl
add
loope
int3
test
leave
popa
in
sahf
aam
or
stc
sti
adc
pop
leave
mov
in
cld
in
lods
out
dec
pop
les
pusha
cmc
pop
xchg
pop
pop
adc
icebp
imul
pusha
pop
mov
add
push
test
cmp
inc
ret
shlb
nop
mov
lock
addr16
in
cmp
popa
out
sub
in
rorl
mov
push
rclb
push
push
test
cmpsb
addl
cld
and
push
mov
jno
sub
mov
sub
mov
or
imul
mov
mov
push
mov
xchg
xchg
leave
cmp
sbb
je
sti
adc
xchg
je
cli
scas
fnstsw
inc
std
leave
ja
mov
push
sub
data16
mov
jb
mov
xchg
pop
outsl
xlat
in
xor
in
aam
daa
mov
les
xchg
mov
stos
std
push
add
popa
or
xchg
and
sbb
ljmp
xor
into
js
xor
push
push
add
fistpll
fmull
pushl
aaa
orb
xor
cmpsl
ljmp
adc
xchg
fcomps
cmc
jns
sbb
fistpl
pop
mov
hlt
cmp
adc
lret
popa
lret
jge,pt
icebp
bound
or
push
das
out
xchg
inc
mov
pop
push
ss
mov
mov
add
rorl
pop
sarl
test
in
lds
or
jbe
adcb
fidivrl
call
hlt
pushl
adc
jb
dec
mov
shlb
mov
adcl
mov
int3
incb
xchg
push
fimuls
int
xor
xchg
les
push
sub
cmp
cmp
arpl
mov
shrb
insl
cli
mov
pop
enter
dec
ret
xchg
dec
sti
scas
or
add
lcall
xchg
pop
das
sub
popf
inc
dec
jo
stos
repnz
sahf
enter
icebp
mov
sub
mov
dec
and
adc
dec
pop
repnz
adc
mov
mov
inc
sar
insb
and
or
js
sub
lds
sbb
stc
inc
mov
push
mov
cmp
cmpsl
imul
adc
rolb
add
cmc
stc
enter
add
aam
dec
adc
mov
xchg
push
clc
lahf
std
testl
and
cmp
xchg
scas
sbb
aad
les
add
loop
test
xor
mov
add
xor
jge
cmp
icebp
sbb
iret
lret
icebp
mov
xchg
adc
and
dec
nop
mov
into
lret
dec
shlb
or
push
push
dec
cmpsl
pop
mov
stc
mov
sbb
gs
pop
pop
xchg
mov
nop
pushf
cld
fwait
aaa
sbb
and
jbe
cmp
or
daa
pop
rorl
outsl
dec
dec
xchg
mov
cmpl
lods
pop
sbb
aas
mov
cmp
lock
xor
loope
xorl
cmp
jmp
mov
mov
sbb
in
jmp
adc
push
jne
add
repnz
cmp
out
or
jo
stos
xchg
loope
xor
pop
scas
xchg
jmp
adc
aad
adc
xchg
fidivl
lods
jno
loopne
in
insb
sbb
int3
mov
je
cwtl
sbb
arpl
cli
fdivr
jno
jl
ja
mov
sbb
rcll
cli
sub
mov
xchg
int3
andl
pop
and
mov
ss
jo
repnz
mov
cld
ds
ror
shl
and
sbb
or
test
xor
add
andl
xor
cmp
std
hlt
loopne
cmpsb
xor
fs
mov
jle
popa
insb
sbb
push
icebp
cltd
loop
cs
add
push
mov
push
ds
jecxz
hlt
add
inc
push
fistpl
lods
sub
dec
adcl
repz
int3
loop
cld
mov
and
fs
cmp
lret
lods
jne
cmpsb
pop
xchg
insl
adc
mov
pop
scas
lods
jne
cmp
cwtl
outsl
fbld
pusha
pop
mov
dec
lret
push
push
or
divl
lahf
mov
mov
dec
negl
insb
sbb
cmp
jb
js
ret
push
pop
leave
push
mov
arpl
scas
out
cmpsl
push
ret
jbe
inc
mov
jno
lds
test
xchg
aad
or
faddl
scas
dec
sbb
js
inc
jge
scas
dec
movsb
fs
stc
push
mov
pop
fbld
inc
loopne
sti
push
sub
das
sub
ret
mov
jl
leave
lcall
dec
inc
aad
in
rcll
leave
cmp
nop
sbb
outsl
inc
cmp
pop
iret
inc
sub
adc
lods
sub
pushf
pop
stos
aad
fxtract
cmp
mov
lahf
iret
add
fs
mov
pop
movsb
sbb
out
sarl
cmp
shlb
iret
mov
push
mov
test
pop
enter
mov
fwait
inc
push
sbb
cwtl
push
sti
add
testb
ja
pusha
pop
inc
cmpl
xchg
push
push
push
inc
mov
stc
push
dec
cmc
xlat
call
cmp
push
pop
push
jno
lods
cli
sbb
cmp
add
jbe
fidivl
loop
push
cmp
into
data16
mov
clc
dec
jg
clc
push
xor
mov
aam
ret
mov
mov
jb
xchg
jbe
jo
jnp
aaa
mov
lds
mov
mov
cmp
inc
push
fsubr
es
and
jle
push
fs
lock
xchg
mov
mov
sti
in
sub
aas
xchg
pop
rcrl
aam
stc
and
ret
jnp
jbe
push
push
mov
push
xchg
sub
stos
pop
sbb
push
ret
xchg
pop
xchg
stc
cltd
ret
pop
and
sbbl
imul
and
testb
push
mov
mov
out
cmp
mov
sbb
jle
std
lea
xchg
fadd
lds
arpl
jnp
in
loope
mov
inc
mov
inc
or
sbb
aad
imul
call
mov
lods
jge
sub
imul
leave
ja
and
xor
lods
imul
icebp
int
and
dec
subb
adc
pusha
jne
and
mov
in
outsl
push
jg
adc
add
in
nop
or
pop
lods
fcoms
imulb
push
ss
fs
cmp
imulb
jo
sub
je
pop
jbe
push
cmp
and
aas
enter
inc
push
pop
sub
adc
dec
icebp
mov
sarl
enter
sbb
mov
sub
mov
push
sub
mov
stos
and
aam
dec
fisttpll
pop
cmp
pop
fildl
insl
repz
decb
into
pop
cmp
loopne
push
mov
or
pop
cmp
pop
jmp
ss
ja
dec
insl
scas
divb
nop
sahf
or
xor
test
adc
fists
mov
inc
inc
addr16
xchg
movsw
push
adc
mulb
dec
xchg
dec
ficoms
gs
aas
inc
int
mov
xchg
fldenv
in
pushf
in
push
cmp
ror
loope
dec
aam
cwtl
inc
sbb
aad
xchg
movsl
cmpsl
pusha
jns
fwait
and
sbb
mov
xchg
fstps
jb
mov
mov
ret
cmp
mov
sub
jo
dec
or
fwait
sbb
inc
sub
pop
cmp
jle
int3
push
loop
mov
in
cld
sub
push
nop
jmp
cmp
mov
mov
mov
push
lods
adc
sbb
orl
movsl
in
mov
inc
insl
in
xchg
pop
adc
dec
or
sub
test
cmp
cltd
movsl
rcll
push
ja
int3
dec
push
inc
push
sub
add
cmp
decl
and
cmp
inc
push
adc
jecxz
xor
call
insb
fnstsw
outsl
add
ja
jns
mov
add
cmp
shlb
subb
sub
push
jl
insb
movsb
dec
es
addb
dec
add
pop
sub
push
divl
std
pop
scas
rorl
and
insl
fisubl
insb
inc
push
pop
lds
fcmovb
jb
hlt
inc
mov
aaa
out
stc
test
xchg
dec
pop
xorps
insl
popa
jle
pop
cwtl
pop
jb
pop
cltd
out
jb
std
mov
sarl
xchg
pushf
sub
pop
xlat
into
sbb
fsubrl
sbb
rclb
cltd
xor
pop
push
xchg
inc
pop
push
test
fisubrl
inc
pop
pusha
insl
cmp
jnp
loopne
pop
xchg
mov
xacquire
and
ret
fmull
dec
mov
pop
ret
mov
loopne
push
sbb
add
push
int
das
xchg
xchg
sub
pop
jne
inc
push
out
inc
mov
das
ffreep
ljmp
pop
dec
inc
pop
popa
jno
sbb
out
in
dec
sub
sbb
push
lods
mov
or
jge
outsl
mov
sbb
xlat
xor
pop
cmp
mov
shlb
imul
cmc
dec
mov
sub
stos
andnps
cmpsb
in
cmp
sub
testb
sbb
mov
testl
jmp
mov
ja
mov
xchg
xor
fsts
xchg
jns
adc
push
bound
ret
jns
gs
and
sbb
cmp
or
inc
in
jmp
sub
fs
cmp
push
mov
push
les
lret
lds
and
ljmp
xchg
xor
inc
lods
adc
repz
stc
mov
mov
cmpsb
or
jb
andb
lret
lret
push
xor
pop
outsl
sub
and
push
mov
pop
dec
lods
xchg
pop
dec
in
sarb
and
fldt
jne
imulb
std
ljmp
xorl
xchg
cmovnp
ja
xchg
sub
mov
xchg
out
out
sub
in
or
mov
jle
repnz
loope
xor
ret
pop
shrb
sbb
fisttpll
shlb
pop
cmpl
inc
mov
jmp
ja
cmpsb
jo
repnz
xor
pop
sbbl
pop
and
ljmp
pop
xchg
xchg
xchg
push
mulb
jns
cmp
iret
call
add
int
or
in
popa
imulb
repnz
sub
mov
int3
xchg
je
xor
push
mov
mov
mov
jne
hlt
call
pop
xchg
lret
adc
imul
cmp
xor
jo
into
mov
jno
std
adc
adc
sbb
fwait
je
pop
daa
sub
mov
icebp
xchg
mov
fincstp
out
or
out
ret
call
xlat
mov
loopne
pop
xchg
cld
mov
pop
pop
iret
js
add
das
mov
xchg
sahf
adc
std
loope
push
sbb
sub
and
sbb
aaa
mov
sub
xchg
pop
inc
ss
fmulp
push
enter
imul
jle
jae
add
in
inc
push
or
mov
shlb
in
pop
cmp
fisubl
les
sti
add
popf
inc
pop
inc
fstps
ss
addr16
push
jecxz
outsl
stos
lahf
xchg
xor
cs
sub
imul
sahf
xor
xchg
push
pop
mov
add
dec
xor
sub
rorb
je
pop
adc
stc
jae
pushf
xchg
jmp
mov
icebp
mov
fs
cmp
std
sbb
or
xchg
pop
or
jns
repz
pop
std
in
mov
mov
outsb
popf
push
or
mov
inc
mov
pop
addb
cmpsb
arpl
cmpsb
xchg
insl
mov
sbb
cmp
sbb
leave
or
push
lds
std
popa
aam
shll
cmp
repnz
fisttpl
lret
inc
call
insl
jp
xor
adc
roll
lods
cld
dec
sbb
adc
add
dec
in
xchg
ja
call
dec
ja
sub
stc
sub
subl
in
adc
inc
jo
jmp
push
pusha
push
xorb
es
icebp
lock
mov
sub
lock
xchg
xor
addr16
adc
cmpb
xlat
and
xor
in
stc
inc
ljmp
jge
imul
inc
xchg
sub
and
repnz
rcrl
les
jne
jo
mov
imul
test
mov
push
dec
jnp
sbb
or
pusha
add
mov
dec
push
and
sub
mov
xor
and
adc
push
call
cmp
jl
bound
cld
imul
push
cli
je
push
mov
mov
dec
push
cmp
cltd
dec
int3
and
xor
int
scas
mov
adc
inc
jbe
aam
ficoms
jbe
push
ret
push
fadds
les
push
int
mov
sahf
mov
aaa
add
mov
lds
cltd
iret
mov
xchg
or
sbb
xor
bound
pushf
lcall
ret
scas
pop
ficoml
push
pop
mov
leave
addps
rcl
and
ds
cmp
pop
daa
or
mov
jge
dec
mov
mov
or
aam
test
addb
flds
imul
lcall
pop
cmp
dec
inc
push
or
das
iret
push
insl
jmp
aas
sbb
push
mov
push
aam
cmp
push
add
test
cld
push
lret
xchg
push
mov
jbe
push
jns
mov
adc
xor
jo
aaa
cmp
mov
out
or
dec
pop
inc
add
leave
mov
add
repnz
fmulp
out
jns
roll
jnp
subb
xor
mov
mov
test
jmp
aam
sahf
sub
xchg
outsl
popf
pop
movsb
lock
out
push
jmp
ja
pop
mov
in
dec
mov
inc
lds
cs
adc
iret
fnstcw
clc
cmp
mov
lock
sbbb
ss
xor
pop
adc
cmpsb
mov
jecxz
mov
movsl
ss
xor
pop
cltd
inc
lods
pop
out
sahf
stos
cltd
std
js
sbb
aas
ret
fildll
xchg
daa
mov
pop
out
mov
pushfw
lods
mov
pop
jge
mov
shll
push
jg
mov
xchg
fldt
aaa
popa
mov
sub
cmpsb
xor
pop
cwtl
js
push
push
in
jecxz
mov
inc
pushf
adc
lods
mov
push
repz
cmp
inc
outsb
jns
mov
jae
ret
mov
ljmp
test
dec
cwtl
push
int
dec
pop
jno
jns
addr16
shrb
dec
mov
sbb
in
jg
mov
stc
arpl
add
popf
sahf
cld
lods
or
test
jl
add
jmp
ret
mov
and
cmpsl
jmp
cmp
into
or
mov
cs
sti
sbbb
sbb
and
and
cmp
add
cmp
imul
mov
call
divl
push
xor
or
daa
jne
push
mov
push
cmp
pop
and
das
pop
test
xor
mov
stos
sahf
inc
and
ret
and
pop
mov
ds
popf
mov
dec
sarb
pop
fildl
bound
mov
xchg
xor
push
dec
lahf
pusha
jns
sbb
roll
xchg
test
icebp
popa
cmpsb
or
pop
cmpsb
test
nop
sbb
int
pop
xor
loop
addl
adcb
sub
scas
inc
stc
call
outsb
mov
jbe
add
shl
addr16
add
out
pop
jp
outsb
push
or
sub
xorb
mov
add
ja
xor
mov
adc
inc
cmp
adc
lret
rcrl
push
out
or
inc
pop
jo
scas
rclb
scas
cmp
push
in
imul
jnp
pop
pop
notb
xor
movsl
or
push
xor
mov
or
pop
out
out
js
xor
jnp
lret
inc
sahf
mov
add
aas
add
cmp
repnz
pop
xchg
rorl
pop
scas
out
cltd
mov
jb
push
dec
repz
das
inc
dec
aas
int
scas
insb
fdivrl
mov
daa
inc
sbb
xchg
mov
addr16
iret
mov
into
pop
imul
fstpl
pop
loop
mov
out
mov
inc
jbe
pop
and
push
cmpsl
pop
lods
push
rclb
sub
idivl
cmp
push
sbb
stos
sbb
mov
arpl
fsubrl
mov
movsl
sbbb
cmpsb
ror
fwait
clc
ret
xlat
cmp
push
mov
xor
xchg
daa
gs
push
mov
ss
mov
or
push
lods
sahf
or
add
fld1
lock
or
nop
lcall
test
lea
mov
push
add
dec
push
xor
arpl
lods
dec
lods
xchg
orl
dec
pop
mov
movsb
cmp
sub
sbbb
mov
outsl
and
cmp
pop
xchg
lods
mov
loope
jo
mov
test
out
es
push
mov
dec
inc
pushf
jo
dec
cmp
xor
push
xor
gs
xchg
dec
jl
sub
cltd
pop
jnp
jle
lret
pop
add
les
fldcw
es
cmp
inc
xchg
rcll
repnz
je
cs
pop
pushf
loopne
mov
cmp
stos
enter
cltd
les
je
into
push
jmp
cmpsl
subb
dec
sbb
sbb
add
pop
dec
mov
lret
shrb
pusha
adc
icebp
cld
or
fxch
cld
inc
notl
ret
cmc
test
xor
negb
pop
test
sarb
pop
and
int
mov
inc
lea
leave
addb
fdivl
sbb
cs
cmp
scas
scas
jmp
ljmp
mov
xlat
gs
adc
daa
push
sub
adc
xor
cs
jg
test
sbb
mov
call
jmp
insb
pop
add
stos
lds
xchg
cmp
or
sti
repnz
xchg
mov
push
xchg
outsb
push
mov
insb
jecxz
lret
or
es
sbb
jg
push
test
or
or
mov
lods
cwtl
mov
aas
in
loope,pt
add
lods
and
mov
insb
mov
inc
xchg
call
mov
in
cltd
dec
xchg
mov
xchg
test
sbb
jnp
aam
sbb
mov
mov
or
addl
and
mov
mov
shlb
dec
cmp
xor
push
pop
inc
mov
repnz
into
xor
outsb
xor
cmpsb
test
hlt
inc
divb
inc
cltd
sbb
and
nop
mov
inc
push
dec
push
inc
adc
ljmp
mov
cmpsl
cmpsb
push
mov
lahf
cmp
loop
jp
add
insb
ds
arpl
les
mov
repz
xchg
mov
out
scas
xlat
lcall
outsl
addb
sub
fidivs
mov
fsubl
or
rcrb
fcmovnb
lods
inc
pop
mov
lea
or
mov
sub
aas
out
dec
fsts
add
and
sub
cmpsb
lods
repz
push
divl
int3
cld
xor
mov
or
cmp
js
stos
pop
out
sbb
insl
fldenv
mov
add
push
sub
pop
xchg
test
add
out
mov
sub
cmpsl
jge
lcall
das
lds
mov
adc
scas
xchg
mov
adc
add
xchg
loop
inc
in
call
xchg
push
insl
cltd
or
add
jp
xor
xor
xchg
leave
mov
jle
int3
jmp
orb
inc
sbb
out
mov
or
pop
xor
or
mov
jno
add
es
add
jge
or
ss
mov
in
fs
jns
inc
test
aaa
or
lcall
das
movsl
arpl
sub
loopne
mov
xchg
loopne
cmp
and
fimull
mov
stos
pusha
inc
aaa
and
sbb
push
and
insb
mov
sarb
loope
xor
mov
dec
mov
leave
test
cltd
loope
dec
ret
push
loopne
inc
aaa
add
mov
shr
insb
dec
aad
into
mov
je
cmp
push
adc
push
inc
jbe
pushf
cmpl
sub
cmpb
sbb
movsb
sbb
outsl
push
dec
adc
aam
sbb
adc
jp
rol
sub
jae
outsb
mov
inc
pop
jnp
imul
or
outsb
xor
mov
iret
in
pop
xor
sub
jle
jbe
lds
sbb
and
lods
dec
push
scas
mov
daa
ret
mov
jmp
cmp
data16
imul
aaa
andl
not
repnz
dec
and
ljmp
dec
jge
pop
jbe
imul
pop
imul
push
sbb
sti
shll
sub
sub
mov
mov
cwtl
cmp
push
pop
out
add
test
imull
jno
adcb
jle
xchg
push
scas
mov
negb
lretw
inc
stos
jmp
inc
loopne
or
test
cmp
hlt
adc
fldl2e
ret
rorb
mov
xchg
ret
and
adc
mov
push
and
js
jnp
fldl
sbb
scas
push
mov
jge
push
rcr
inc
lcall
push
fcoms
ret
jb
aad
aas
cmpl
imul
jl
inc
loope
jae
mov
push
xor
push
cmp
outsb
sub
cmp
sbb
hlt
dec
sbb
dec
mov
lret
and
sub
jmp
pop
inc
fldl
je
xchg
jecxz
mov
outsl
dec
xor
in
dec
pusha
push
dec
add
loop
nop
lods
mov
push
or
fldl
sarb
push
adc
jge
fnstcw
sahf
mov
sbbl
xchg
mov
rcl
sbb
cltd
jmp
arpl
pop
sbb
sub
add
dec
mov
push
dec
jmp
mov
in
adc
std
dec
pop
lea
pop
outsb
sub
dec
stc
aas
dec
fnstsw
stos
add
lcall
xlat
stc
jmp
jmp
scas
jmp
int3
inc
xor
push
lahf
iret
push
cmp
jno
icebp
lret
jno
shrl
push
inc
mov
adcl
out
adc
popa
in
jge
sub
rcll
push
stos
dec
adc
sahf
inc
inc
xor
dec
push
inc
inc
outsl
sub
dec
mov
hlt
fistps
sub
mov
mov
or
mov
fwait
inc
pop
jnp
scas
mov
mov
andl
jbe
lcall
dec
repz
insl
mov
xor
into
mov
dec
inc
icebp
or
stc
movsb
lahf
insl
push
pop
bound
inc
popa
sbb
movsb
out
je
sbb
stos
jnp
and
pop
shl
cmovo
rolb
mov
enter
dec
sbb
ror
stc
lock
jb
iret
or
js
pushf
add
pop
aas
pop
bound
aaa
mov
ret
jmp
movsl
mov
imul
cmp
rol
push
nop
cmpsl
repz
shrl
sbb
lock
sub
mov
xchg
or
dec
xlat
stos
ffree
xor
cmpsl
fisubl
pushf
data16
pop
fiadds
inc
inc
xlat
push
repz
mov
xlat
adc
cmp
pusha
rorl
das
dec
jmp
dec
mov
imul
push
bound
int3
add
push
sub
pusha
xchg
jae
test
insb
mov
jne
push
gs
cmpsb
std
cs
push
lea
out
mov
fmuls
test
mov
jae
cmp
or
test
frstor
lret
dec
sti
mov
icebp
lods
sbb
sbb
jmp
dec
test
iret
gs
adc
lret
mov
addb
xchg
sbb
or
sahf
sub
jo
or
clc
push
loopew
xchg
scas
pop
mov
lds
pop
das
jg
mov
ljmp
shlb
loopne
mov
jb
and
inc
fwait
or
ljmp
dec
cmc
ss
dec
loop
fdivrs
ret
shlb
mov
add
es
sbb
mov
ja
addr16
jecxz
negb
loopne
in
jo,pt
xor
test
jno
jo
cli
pop
mov
inc
imul
jae
pop
shl
sbb
negl
iret
hlt
mov
sbb
mov
rol
fisubrs
jns
shl
hlt
icebp
sub
push
push
lahf
pop
inc
sahf
dec
xchg
aam
bound
rdpmc
sub
sub
test
mov
stos
mov
insl
adc
xchg
popa
xlat
sub
jae
mov
shrb
mov
int3
movsl
or
mov
add
rorl
movsl
test
clc
cli
cmp
adc
sub
fmull
pop
jge
or
int
or
jecxz
js
xchg
cmp
pusha
mov
imul
call
mov
das
push
rorb
jge
mov
inc
call
ja
jmp
rorl
out
cmp
jb
push
fdivl
mov
or
loopne
mov
jbe
jl
movsb
into
or
mov
xor
push
pop
sub
xor
sub
mov
xchg
rolb
pop
and
negl
push
pop
and
shrb
out
or
push
bound
mov
fisubs
lds
les
popa
cmp
jmp
jno
test
sbb
adc
cmc
shrl
shl
rcrl
adc
in
neg
mov
fidivs
adc
mov
je
fwait
dec
popf
cmp
xor
scas
xor
roll
push
add
inc
pop
jmp
xor
sub
incl
xchg
jb
stc
loope
jmp
inc
xor
push
cmp
outsl
mov
in
cli
add
cmp
out
sbb
push
cli
bnd
pop
cwtl
leave
xchg
out
nop
inc
lods
insl
adc
stos
jno
fdivrl
or
and
inc
push
pop
xchg
cmp
mov
leave
pusha
cwtl
jle,pt
or
rorl
out
in
outsb
sub
xor
cmp
cmpsb
adc
inc
xchg
into
rolb
inc
mov
fistl
in
cmp
dec
mov
pop
sahf
mov
and
push
sbb
fisubl
jno
pop
sbb
xlat
or
xchg
cld
jge
rcr
jl
call
or
in
inc
push
jae
gs
ret
pusha
rorb
add
testb
pop
mov
test
into
mov
jge
into
cmp
test
test
pop
subl
aam
ret
std
inc
dec
jecxz
call
mov
mov
pop
fstpt
adc
call
fldl
xchg
test
and
or
or
adc
mov
mov
push
sub
sub
rcr
sub
fisubrl
insl
xchg
lds
test
iret
hlt
icebp
inc
inc
sbb
mov
adc
xchg
pushf
or
cld
pop
push
jecxz
cld
xchg
push
cmp
and
xor
cmp
outsb
cwtd
sbb
push
sbb
sub
popf
adc
add
sub
pop
dec
andb
lahf
pop
sbb
and
push
xchg
adc
inc
pop
es
cmpsb
je,pn
jb
mov
mov
lcall
psubw
sbb
sti
mov
insb
mov
lods
cltd
int
push
shll
mov
pop
xchg
lea
mov
decb
pop
mov
jmp
ffree
pop
stos
cmp
sub
cli
jne
xchg
mov
cld
xor
dec
and
aad
hlt
push
jge
mov
push
cmp
sar
pop
nop
lcall
lcall
ja
sub
push
enter
pop
xchg
es
out
push
mov
loopne
aaa
dec
shrb
mov
mov
mov
sbb
mov
pop
dec
lcall
and
or
test
sub
pop
xchg
mov
jp
cmp
mov
aaa
xor
cmc
adc
sbb
xchg
in
inc
push
jnp
xchg
jbe
or
iret
mov
inc
in
rorl
fucom
pop
insl
iret
mov
std
lahf
dec
loope
imul
or
cmp
mov
inc
mov
data16
hlt
inc
daa
iret
jecxz
jp
ss
sbb
sub
pop
stc
scas
jbe
and
pop
cld
aas
mov
cld
adc
ja
add
movsb
jnp
rcl
shll
xor
xchg
push
sub
clc
mov
ds
in
cmp
inc
sub
mulb
aam
dec
mov
jae
jnp
sbb
lods
mov
hlt
cmp
es
mov
ret
push
fsubrs
jmp
fistpll
cs
jno
int3
and
mov
cmp
push
xor
sbb
stc
add
pushaw
mov
adc
push
leave
xor
push
mov
pop
or
sbb
cltd
emms
hlt
in
mov
imul
frstor
jmp
push
xor
push
jns
or
pop
jno
jl
sub
pop
clc
lahf
xor
pop
fmulp
push
sub
enter
pop
push
shll
xchg
sbb
sub
xor
pop
shrb
mov
ret
cltd
mov
mov
les
in
enter
adc
movsb
xor
or
addr16
mov
movl
loope
sub
cli
dec
inc
mov
ss
pop
xchg
push
fnstcw
push
bound
sbb
stos
or
cli
pop
dec
mov
fnstsw
mov
mov
adc
push
sbb
negl
xor
and
ljmp
mov
mov
push
jnp
outsl
dec
lods
jmp
fstps
lret
arpl
cs
adc
xchg
mov
lods
jl,pn
push
xor
or
clc
pop
cmp
repz
les
jl
mov
outsl
cli
mov
pop
xchg
out
fmull
mov
outsb
inc
adc
jmp
push
mov
enter
test
mov
xchg
out
loopne
fsubr
inc
jo
leave
cmp
adcl
cmc
out
xor
fwait
add
lea
in
xor
push
push
test
inc
fwait
adc
adc
mov
mov
jl
or
arpl
sub
push
cmc
add
cs
jnp
push
cwtl
insb
cmp
xchg
lds
xchg
cli
push
sub
xor
scas
rol
mov
lock
enter
inc
inc
scas
movsl
add
dec
pop
out
bound
adc
fisubrs
sub
or
mov
xor
pop
jp
ret
in
lret
dec
pop
mov
dec
adc
cli
add
jne
dec
ljmp
cmpb
outsl
insl
push
repnz
adc
lcall
inc
dec
push
xchg
sub
clc
inc
mov
sbb
jne
rcrb
or
or
sub
jbe
pop
out
dec
lretw
scas
das
mov
test
gs
push
dec
pop
add
mov
pop
in
push
cmp
in
hlt
pop
icebp
pop
leave
or
adc
xor
or
pop
push
pop
sbb
xorb
bound
cmp
pop
mov
js
add
pushf
mov
add
push
push
pop
insb
divb
fs
adc
jnp
dec
xlat
lods
shlb
lds
sub
dec
sub
mov
jmp
push
into
sub
jp
push
cmpsl
cmp
cltd
jecxz
outsl
test
dec
rcrl
mov
and
sub
mov
sbb
push
sub
or
andb
xchg
fidivrl
loopne
mov
jbe
xor
xor
sbb
mov
into
xchg
add
pop
sahf
aaa
fldt
mov
pop
subb
call
sahf
dec
xor
fldt
in
xchg
xchg
mov
and
jmp
push
arpl
adcb
jl
add
and
test
or
xor
je
sbb
mov
add
adc
div
inc
js
push
daa
adc
gs
lahf
or
mov
xor
filds
adc
testl
add
mov
mov
sbb
xchg
mov
jne
lock
or
and
into
pop
push
xchg
ds
push
popf
das
mov
xchg
sbb
decb
into
rcll
push
out
sub
test
jno
and
in
dec
push
cmc
push
dec
dec
sbb
or
shlb
inc
es
sbb
xchg
in
fdiv
gs
inc
inc
mov
cs
clc
pop
or
and
ret
xchg
jno
test
rolb
test
xor
push
or
sbb
mov
ja
jle
or
arpl
aaa
test
or
xor
mov
cmp
inc
jmp
in
or
enter
or
adc
cmovae
fidivs
outsb
pop
and
movsb
xchg
push
out
lds
mov
jb
cmp
jecxz
cmpsl
js
out
cmp
push
xor
movsb
xchg
push
adcl
jp
dec
stos
push
push
jge
cmp
add
mov
mov
dec
aas
imul
imul
out
and
insb
es
pushf
scas
orl
sbbb
push
icebp
mov
push
mov
jb
popl
xlat
dec
inc
rcr
jle
and
xchg
xchg
push
ja
sbb
sahf
rolb
adc
scas
add
repnz
dec
pop
or
dec
pop
push
into
mov
icebp
jb
push
pop
xchg
jle
jge
sbb
gs
inc
jns
jmp
xor
pop
mov
scas
inc
bnd
jecxz
mov
test
pop
adc
push
xchg
fmul
xchg
insl
xchg
icebp
mov
inc
xchg
pushf
in
add
cli
repz
in
fidivl
mov
in
test
add
inc
test
pusha
pop
lcall
orb
or
mov
mov
loop
jp
daa
dec
icebp
test
pop
in
sub
mov
ret
int3
cmp
in
pop
cmpsb
pop
jnp
mov
sbb
loope
mov
int
negb
testb
shl
cli
dec
test
dec
lret
cmc
out
daa
das
adc
pop
pop
mov
push
rorb
out
iret
jb
xor
dec
int3
out
outsb
sub
push
adc
stos
adc
movsl
out
daa
mov
add
stc
mov
data16
ret
jno
mov
cmpsb
push
rolb
xor
das
sub
add
sbb
sub
push
mov
or
mov
pop
lea
adc
into
or
xor
jmp
sub
mov
jae
loope
popf
ficoms
mov
xchg
jmp
filds
je
sub
xlat
and
arpl
push
iret
or
les
xchg
push
fldenv
lds
xor
outsl
cld
call
inc
pop
rcrl
xor
test
jl
pop
xchg
dec
cmp
push
ljmp
dec
push
adc
lret
movsb
call
push
outsb
sub
in
int3
les
test
fstl
into
or
dec
cltd
cld
pop
sbb
inc
xor
nop
push
and
stos
or
out
xchg
je
sub
test
outsb
jnp
daa
cmp
cmc
xor
sbb
bound
or
out
xchg
mov
cmp
mov
mov
int
imul
icebp
push
incl
aam
hlt
push
shlb
fwait
shlb
scas
push
mov
fidivrs
pop
jns
lret
adc
sub
dec
cmp
rolb
cmp
xchg
mov
ss
or
jecxz
shrl
movsl
cmpsb
outsb
iret
nop
push
sub
lds
jecxz
test
pop
or
or
cmp
arpl
add
sbb
int
lods
test
popf
into
mov
ficoml
rorl
stc
pop
mov
or
popf
push
lods
dec
sti
add
lea
outsl
pop
fstpl
mov
xchg
shr
mov
xchg
cmp
push
cmp
fnstsw
call
push
inc
mov
dec
lahf
push
jnp
psubd
mov
xchg
std
sahf
mov
push
rcr
jg
pop
add
in
pop
pop
bound
outsl
sbb
int
ss
add
cmp
in
pop
jne
into
xor
xor
jns
cmovle
fwait
and
imulb
in
ds
icebp
inc
cltd
incl
out
push
inc
or
repnz
dec
jmp
inc
jg
and
lea
lcall
shl
push
mov
rcrl
movnti
shlb
xor
stc
pop
xchg
xor
inc
in
sub
rclb
notb
inc
jge
arpl
fadd
sahf
xchg
inc
inc
xchg
loope
mov
and
fsubrs
inc
lds
push
clc
sub
js
pop
sbb
lret
cmp
fld
ret
lahf
sahf
adc
out
and
sti
inc
fidivrl
movsl
ffreep
push
xchg
loop
pop
leave
or
and
mov
decl
loope
fcomps
adc
fxam
push
pop
inc
push
adc
lods
imul
push
add
push
xchg
leave
sub
scas
mov
pop
mov
and
cmpsl
aas
stos
repnz
xor
add
bound
lock
pop
sub
xor
addr16
mov
xchg
cmpl
xchg
in
xlat
add
dec
test
movsl
pop
ds
es
stos
ud1
aaa
jp
push
fisttps
sub
pop
insl
jb
out
pop
mov
sbb
lret
pusha
jbe
cmpsl
jo
imul
add
lods
enter
enter
test
test
lock
and
mov
mov
adc
sbb
shrb
aad
nop
enter
aaa
lcall
dec
jne
pop
in
lods
jae
pop
pop
adc
dec
sbb
mov
push
dec
movsb
notb
add
lcall
dec
scas
mov
mov
sbb
cli
mov
bnd
in
stos
cmpl
mov
fsubrs
pop
stos
ja
icebp
xor
in
lock
add
lds
inc
ret
pop
test
push
jge
fs
dec
jno
mov
inc
pop
push
and
jo
gs
lea
push
int3
push
cli
jp
add
mov
pop
add
cmp
or
cmpsl
mov
jbe
fbstp
dec
mov
bound
orl
push
sub
mov
dec
rorl
mov
dec
es
sbb
inc
xor
in
xor
xchg
sbb
fdivs
sub
jns
pop
xchg
enter
jl
dec
ds
hlt
test
lret
xchg
cmc
jmp
clc
xchg
and
rcrl
xor
mov
shll
js
lcall
ds
xchg
sbb
and
bound
pop
ftst
loopne
fldt
jmp
jae
jl
test
sbb
enter
cmp
jbe
xchg
ss
out
aas
xchg
push
mov
cmpsl
xchg
mov
xchg
xchg
cwtl
stos
into
mov
arpl
jno
call
stos
sti
pop
insb
jns
add
notl
jne
rcrb
push
data16
xchg
sbb
ja
pop
jne
nop
mov
xor
addl
adc
mov
jecxz
cs
mov
cmp
jge
test
cld
std
cltd
test
sbb
sbb
aaa
mov
pushf
cmp
inc
scas
ja
rorb
inc
jo
aam
inc
add
mov
mov
pop
enter
xor
andl
pop
arpl
mov
mov
sbb
sub
out
lock
sub
dec
repnz
push
stos
and
mov
je
call
lcall
fwait
jle
pop
ret
inc
scas
sbb
clc
or
mov
lea
xchg
loopne
xor
fadds
add
rorb
ret
jne
pop
lods
clc
push
pop
loop
out
mov
jbe
lret
cmp
and
mov
test
inc
dec
mov
mov
lds
in
sti
subl
and
inc
mov
subl
popa
int3
in
adc
ss
pause
sti
movsb
pop
cmp
dec
and
xor
xchg
pop
addr16
inc
xor
fimuls
mov
jp
mov
dec
mov
inc
lahf
xchg
fsubs
in
add
and
aad
addl
insb
arpl
mov
subb
inc
std
xchg
mov
sub
loopne
jns
ja
mov
test
fwait
push
in
adc
dec
adc
adc
leave
outsb
and
jns
and
ss
add
inc
test
add
subb
dec
push
cmpsl
jne
xchg
xchg
dec
lods
mov
subl
bound
aam
add
int3
dec
aad
jno
or
insb
mov
rclb
pop
aad
xor
lock
jnp
cld
sbb
dec
mov
movb
lret
pop
lahf
cmp
pop
or
fxch
inc
out
sub
pop
mov
add
pop
push
push
sti
dec
roll
enter
cmpsb
in
and
adc
xor
int3
test
jge
jno
mov
les
iret
cmp
push
xchg
push
arpl
insb
pop
int
adc
xor
rorb
add
aaa
push
in
and
imul
pop
cmpsl
out
lret
add
cmpsb
pushl
inc
test
push
cmp
jno
mov
or
xor
gs
push
mov
shll
push
mov
leave
aas
or
cli
jecxz
test
sub
mov
test
cmpl
xor
cmp
cmp
jmp
test
xchg
mov
test
into
ret
add
imul
scas
movsl
sahf
cmp
xchg
in
inc
imul
out
push
shl
cmp
push
push
imulb
mov
mov
jg
scas
push
test
je
stos
imul
push
in
dec
in
add
movsl
daa
lahf
cmp
jmp
mov
ljmp
add
mov
mov
enter
popf
stos
mov
fs
movsb
and
mov
or
shll
inc
pushf
addr16
jg
inc
mov
cwtl
outsb
xor
jmp
lds
adc
cwtl
aad
lret
out
xchg
ds
fisttpl
pop
push
imul
jecxz
test
data16
push
mov
fwait
jp
sbb
sub
test
loopne
xor
shll
fs
cwtl
in
jne
int
pop
mov
cld
push
idivw
adc
scas
inc
mov
xor
outsb
loope
fdivs
jno
int3
xor
add
or
add
pop
add
stos
jnp
or
cmpsb
dec
jmp
jmp
push
jecxz
push
inc
loopne
loope
loopne
ss
xchg
imul
in
jle
mov
nop
sti
xor
inc
sarl
cmp
adc
xlat
fnstsw
fisttpll
scas
arpl
cld
pop
add
pop
inc
lret
fcomps
repnz
imul
test
mov
cmp
ss
fisttpll
sub
outsl
inc
mov
lret
pop
iret
lods
mov
or
xor
jmp
in
divb
hlt
fisubrl
repz
and
sbb
dec
jmp
cmp
sbb
inc
stos
cmpsb
testl
cli
repnz
insb
mov
hlt
mov
movsb
aad
adc
push
dec
lcall
jne
mov
xchg
ljmp
sub
mov
push
fistpl
jne
mov
xor
xchg
or
lret
enter
xlat
inc
ljmp
insb
hlt
jb
or
push
jbe
int3
jg
fidivrs
dec
int3
sbb
out
ja
pop
dec
call
sbb
mov
adc
push
adc
cli
imul
out
mov
dec
cmp
xor
adc
pop
mov
dec
jle
mov
add
cmp
ja
pop
pop
or
rclb
dec
das
push
xchg
sahf
jns
adc
cmp
iret
icebp
popf
lods
dec
cld
adc
shrd
mov
xchg
cltd
cmpsb
jne
xchg
in
hlt
inc
jl
addr16
lea
outsb
dec
jge
in
xchg
imul
pop
lock
xor
sbb
push
inc
and
ss
xor
xchg
data16
push
inc
into
daa
daa
ljmp
and
pop
xchg
scas
mov
cwtl
cmp
js
pop
cmp
or
call
repnz
hlt
stc
pop
call
adc
das
pop
in
arpl
stc
xor
lods
repnz
xchg
sub
push
dec
sahf
scas
push
mov
repnz
xchg
add
jne
cmp
and
mov
pushf
inc
nop
sbb
jle
orl
hlt
jnp
mov
repz
adc
out
and
cmp
jno
jge
mov
movsb
dec
mov
add
dec
mov
mov
inc
push
pop
xchg
adc
repnz
loop
sti
xor
or
lret
or
imul
add
popf
xchg
sub
aas
call
aas
xchg
fwait
cmpl
cmp
add
push
sub
test
mov
movsl
shlb
or
jmp
loop
fwait
out
aam
bound
test
ret
mov
and
repnz
out
aaa
mov
cmp
xor
sbb
sti
jle
pop
movsl
pop
xchg
pop
sub
mov
mov
xor
xor
inc
inc
les
sub
add
add
and
test
cmp
lret
cmc
dec
test
lods
dec
dec
xchg
dec
out
movsl
dec
mov
clc
add
cmp
popf
data16
fs
mov
cmp
mov
iret
pop
push
cmp
stos
test
out
mov
cmp
cmp
jae
adc
fidivrl
loope
aam
or
icebp
imul
jg
xor
ret
inc
dec
push
xchg
adc
rclb
cmp
inc
icebp
ljmp
gs
sub
lods
cmp
xor
mov
cmp
and
fsubl
and
or
push
fisubrl
cmpsb
push
gs
bound
enter
jbe
pop
fs
repnz
ds
loop
push
jns
call
pop
leave
sub
notb
lock
push
sar
and
cmp
in
inc
cmc
outsl
mov
bound
cs
push
sbb
pusha
sahf
movsb
adc
jbe
add
xchg
push
test
cmp
push
dec
clc
pop
incb
mov
pop
movsb
pusha
scas
jae
sti
lret
loop
fsubr
idiv
popf
shl
mov
push
psubsw
in
sub
out
xor
lahf
push
cmpsl
or
fnsave
mov
test
or
sbb
mov
cs
lods
enter
xor
push
sbb
aam
cmp
push
mov
jmp
and
push
bound
adcb
push
mov
lods
mov
packsswb
cmc
mov
popa
mov
xlat
fisubl
popf
mov
cltd
push
sbb
mov
add
pop
bound
push
add
jae
arpl
shl
sahf
jmp
push
shll
loopne
fmul
dec
in
push
sbb
lret
dec
lahf
jns
inc
sahf
pop
shlb
add
jmp
cmp
icebp
sbb
ljmp
push
call
leave
sbb
add
arpl
out
lds
dec
xor
imulb
mov
test
lock
hlt
popf
je
andb
sbb
adc
mov
jb
iret
lret
in
shr
dec
out
xor
jp
adc
sub
xchg
iret
pop
scas
mov
sbbl
mov
in
test
rcr
test
xchg
mov
dec
out
pop
xor
in
out
cmp
out
sub
insl
jbe
aas
stos
sbb
push
jae
divl
repz
mov
or
and
inc
fists
sbb
hlt
or
inc
jae
data16
in
fs
jmp
mov
pop
push
call
adc
test
lea
nop
jae
sub
movsl
xlat
lahf
fcoms
pop
loope
fidivl
inc
xlat
or
ret
and
lea
push
lcall
xor
fstpl
mov
xor
mov
mov
sub
add
fdiv
clc
dec
imul
mov
xlat
enter
std
mov
dec
test
movsl
popl
mov
cmp
scas
das
out
mov
idiv
orl
pushf
aas
xor
mov
mov
fists
adc
insb
adc
mov
ja
sbb
shlb
fwait
inc
xor
fnstcw
or
lds
lods
lea
sub
cld
push
mov
jb
sbb
pushf
dec
clc
jle
sbb
out
int3
movsb
sub
push
out
fwait
pop
inc
adc
cmp
repz
cmp
fisttps
shl
dec
cmp
mov
aam
subb
scas
xor
lock
dec
sub
jno
jg
dec
imul
pop
in
fidivrl
out
in
fld
push
fisubrl
pop
mov
aaa
cwtl
fstpl
daa
mov
repz
js
stos
and
and
jns
mov
cld
es
cwtl
cmpl
xchg
adc
mov
jb
mov
xlat
pop
lcall
add
xchg
dec
shr
add
cld
lahf
jne
cmc
adc
sbb
shl
jle
lret
jp
xlat
movsl
fstps
sbb
sub
idivl
jae
push
xlat
bound
fisubrs
jg
cmp
push
test
xchg
mov
ljmp
mov
xor
fistpll
lahf
mov
mov
aaa
orb
dec
sahf
pop
sbb
loopne
pop
sbb
sub
pop
jne
mov
mov
into
jno
jbe
repnz
and
jl
add
xor
and
hlt
mov
push
add
data16
and
pop
xchg
subl
xchg
lahf
subl
mov
cli
out
push
loope
jl
loop
adcb
loopne
pop
lahf
pop
add
movsb
shrb
loop
inc
xchg
int3
xchg
mov
and
movsb
fbstp
jns
int3
inc
mov
movb
imul
inc
repnz
pop
fidivs
push
cld
xor
test
js
popf
add
mov
insb
and
pop
jns
sub
or
scas
add
lret
incb
pop
cmp
jns
push
rclb
outsl
imul
and
xor
cmpsb
push
cmpsb
mov
in
outsl
gs
sub
xchg
inc
jb
xchg
sub
fwait
outsb
mov
pop
jnp
enter
fidivrs
lret
lret
add
aad
ret
lock
pop
mov
inc
jbe
push
and
add
ljmp
or
mov
ss
xchg
fcmovbe
aam
mov
or
popf
dec
test
inc
push
dec
sub
jle
cmp
lods
cmp
mov
or
add
outsb
pop
xor
jp
lea
and
mov
and
add
mov
pop
mov
sbb
dec
mov
out
fwait
shr
jl
sub
test
push
mov
mul
sub
orw
movsl
mov
adc
xor
jp
add
gs
fidivrs
adc
ja
imul
push
or
pop
loop
push
repnz
mov
sbb
pop
jp
addb
mov
scas
pop
push
jne
hlt
jecxz
subb
test
dec
jecxz
xor
fdivl
cmp
cmp
fwait
pop
sbb
movb
repz
mov
dec
sbb
sub
push
clc
test
jns
and
leave
jmp
scas
pop
xor
aam
xchg
jg
and
pop
jmp
inc
cmpsl
pusha
stc
cltd
and
out
mov
imul
bound
lret
rorl
push
fidivrs
adc
lea
jbe
xchg
imul
xor
dec
aaa
jns
push
mov
inc
sub
sbb
es
push
jp
cmc
xor
pop
pop
lret
test
in
sbb
sarb
fistps
ds
inc
cmp
stos
mov
jmp
xchg
jp
inc
mov
cs
aaa
xchg
shlb
and
jns
loop
sbb
sub
fildll
sub
jbe
mov
cmp
mov
cld
dec
mov
lods
enter
fldcw
sbb
lret
inc
dec
dec
aas
mov
orl
xchg
mov
loope
andb
std
imul
dec
add
adc
jmp
mov
lods
popf
cmp
loopne
jne
std
std
jle
xchg
xor
sub
pop
popf
and
in
fnstcw
scas
mov
adc
sub
jmp
mov
adc
aam
sub
jmp
sub
jl
or
or
and
addr16
cwtl
and
cmpsb
push
lcall
add
pop
cpuid
push
push
and
cmp
clc
xor
inc
sarl
fldl
fwait
aaa
in
mov
inc
stos
sub
mov
mov
inc
movsb
int3
movsl
sti
or
leave
mov
ljmp
cmp
or
jo
pop
xor
mov
aaa
loop
movsl
dec
aaa
lea
adcl
xchg
lahf
inc
jne
dec
lods
loopne
inc
push
cmp
iret
das
cltd
mov
and
mov
adc
mov
and
dec
popa
bound
pop
mull
jge
jg
sub
xor
sub
es
addr16
pop
push
push
and
leave
push
ds
jmp
inc
cmp
scas
repnz
test
or
imul
sub
sti
cld
jne
enter
push
jp
mov
mov
jno
or
inc
push
dec
adc
rorl
pop
xorb
xor
popa
insb
mov
or
push
jecxz
sbb
inc
mov
ror
sarb
or
insb
mov
mov
ret
fdivr
clc
mov
mov
add
cwtl
jg
stos
dec
fbld
je
adcl
shl
mov
pusha
mov
fdivrp
nop
aaa
add
fsubr
mov
mov
ret
clc
ss
jae
imul
test
mov
in
jbe
sub
pusha
shrb
xor
xchg
shrl
or
lahf
outsb
fwait
pushf
test
lea
ret
sti
xchg
pop
xchg
mov
popa
cmp
jo
adc
mov
call
shl
inc
xor
dec
adc
rorb
divl
cmc
test
aaa
shrl
dec
pop
popa
mov
and
mov
frstor
mov
fwait
xor
enter
fdivl
cltd
push
dec
iret
ss
aaa
dec
mov
mov
fwait
xor
dec
xchg
fs
mov
dec
or
dec
rcrl
shlb
adc
mov
mull
imul
add
mov
fstpl
ficoms
push
inc
inc
cmp
movsl
ud1
mov
or
xor
pop
sub
push
sub
test
add
mov
loope
sar
xlat
sbb
jae
sub
shlb
cmp
jbe
ljmp
out
lahf
jne
pop
and
subb
dec
or
pushl
mov
fidivs
roll
xchg
xchg
int3
shlb
mov
pop
add
jnp
jl
push
dec
jb
mov
outsl
mov
daa
lock
icebp
fcomip
jns
adc
das
xchg
adc
jg
shrb
out
push
mov
fadds
enter
fnsave
pop
stc
mov
xor
daa
push
std
or
insb
and
xchg
pop
dec
das
dec
fs
lock
lods
xor
jae
je
insb
je
lds
cwtl
mov
pop
outsb
xlat
movsl
or
jnp
addr16
mov
lret
adc
es
mov
iret
movsb
mov
mov
mull
adc
sub
xchg
cmp
pop
and
xor
fiaddl
push
cmp
ss
lahf
in
cld
lret
cmp
pop
adc
loope
ss
movsb
repnz
push
lods
pop
in
jno
out
and
aad
cwtl
sbb
push
dec
jg
sbb
inc
cmpsb
stc
mov
ljmp
repnz
lcall
jmp
shlb
push
jecxz
pop
jno
inc
mov
push
int3
cmp
fnstenv
push
jnp
inc
fildl
mov
mov
sti
clc
test
jns
mov
cli
bound
in
call
aas
int
mov
mov
dec
loop
mov
aaa
jb
inc
pop
pop
inc
push
pop
dec
jno
fwait
icebp
mov
mov
mov
out
mov
adc
jno
aad
or
dec
mov
bound
std
adc
loope
jge
test
lods
lea
fwait
dec
push
arpl
mov
adc
imul
stc
ror
pop
mov
imul
cwtl
push
adc
pop
jno
shl
fdivs
pusha
and
jl
mov
popa
mov
or
inc
inc
js
adc
inc
cli
sub
test
and
sahf
daa
in
jne
aad
fdivs
cmp
pop
in
aad
mov
adc
and
ret
xor
or
add
adc
sub
sbb
lds
adc
sahf
fdivp
pop
xor
shll
popa
loope
in
push
adc
jp
pop
cli
add
out
shl
dec
sub
lock
int3
movsl
bound
sbb
fildll
lcall
lret
shlb
aaa
pushf
jmp
xor
aam
stc
mov
shll
jl
and
fxch
movsb
push
cmp
sbb
sub
fnstsw
ljmp
fs
jle
js
je
insb
pop
push
sbb
shlb
data16
lcall
je
aas
mov
popa
or
mulb
gs
in
lock
pop
test
sub
sbb
fiaddl
dec
das
or
push
xchg
mov
dec
and
mov
enter
dec
in
test
mov
loop
pop
push
adc
and
test
pop
cmpsb
in
mov
ret
push
jb
aam
mov
push
dec
shll
and
shl
enter
cmpsl
outsb
stos
mov
ss
jle
push
fcmove
cmp
lcall
lcall
outsb
pop
test
fnsave
aas
stos
xor
imul
in
or
sub
outsl
add
xchg
add
sbb
add
or
cltd
push
das
cmp
repnz
mov
dec
xchg
push
xor
mov
popf
int
cmovl
cs
enter
sti
xchg
jno
scas
dec
data16
subl
jle
idiv
cmc
and
rclb
jo
add
stc
imul
in
xor
cmp
push
ljmp
mov
pop
or
mov
pop
arpl
xchg
ja
fs
icebp
popf
adc
shlb
ljmp
or
adc
xlat
jnp
sub
stos
fwait
lods
ficompl
movsb
shll
std
or
mov
int3
fildl
repz
xchg
mov
iret
dec
vcvttsd2si
aam
aas
or
xchg
jbe
jp
outsl
sub
mov
push
jmp
sub
cmp
jae
sub
rcrb
aas
call
std
aam
pushf
movl
lahf
add
loopne
gs
adc
enter
das
adc
call
dec
roll
clc
lea
xor
jae
mov
pop
xor
sbb
aas
cli
push
cwtl
mov
test
into
shrd
sub
lds
hlt
popf
test
push
inc
pop
xchg
pop
hlt
adc
push
cmp
mov
inc
xchg
jle
pop
clc
or
mov
addl
mov
jb
in
jno
sub
out
and
imul
mov
xor
ret
outsl
in
xor
out
int
or
pop
repz
or
inc
aad
shl
popl
pusha
mov
out
and
mov
mov
scas
jb
enter
dec
lock
inc
fidivl
cmp
mov
cmp
jns
addr16
add
inc
xor
lock
gs
lahf
xor
pusha
mov
xlat
loop
stos
push
lds
das
into
lcall
enter
push
mov
mov
das
insb
shrl
sbb
imul
hlt
adc
das
cmp
sbb
jmp
sub
sbb
daa
fnstenv
jp
mov
jp
ret
cmp
jecxz
push
sub
stc
jl
repnz
in
xlat
adc
sbb
dec
idivb
js
pushl
add
xor
xor
test
call
test
test
insb
cltd
adc
repz
xor
add
xlat
jl
dec
cli
and
add
ss
add
add
push
dec
inc
and
or
xor
push
adc
dec
jge
push
mov
adc
adc
add
xor
mov
aas
aad
mov
pop
inc
inc
sbb
mov
out
sbb
imul
adc
inc
into
iret
add
call
loop
jno
sub
mov
ficoms
hlt
push
leave
push
mov
cmp
jne
test
fstps
icebp
mov
pusha
inc
xchg
add
dec
popa
sti
xor
insb
movsb
outsl
fmuls
xor
test
lret
adcb
dec
ljmp
add
imul
lock
pop
lahf
test
repz
jb
ret
dec
adc
cmp
rcr
pop
imul
mov
repz
arpl
mov
pop
lahf
scas
rcll
pop
outsl
and
jae
xchg
cwtl
fnstenv
xor
enter
fldenv
rcrl
jbe
shlb
jle
mov
idiv
pop
xor
dec
mov
xor
or
out
xlat
das
push
dec
jmp
pcmpgtb
fs
mov
std
mov
dec
add
fs
cltd
sub
sub
dec
or
icebp
adc
xor
movsl
adc
sti
scas
repz
cmpsb
aaa
jl
shl
loope
xchg
aas
mov
daa
andl
sbb
adc
inc
dec
aas
cmp
mov
ror
jl
sbb
inc
sbb
inc
mov
nop
adc
adcb
cmp
pop
aaa
jne
inc
xchg
pop
sub
inc
pop
or
data16
imul
insb
xor
addr16
das
push
fwait
cmp
rcrb
sub
movl
cmc
fadd
ds
mov
jl
pop
aaa
les
and
out
pop
pop
cmp
mov
cmp
sub
addr16
icebp
mov
lock
movsb
mov
cs
jo
xchg
cmp
xor
jg
sbb
mov
popa
out
in
jmp
xchg
rcrb
lea
mov
ds
data16
xor
fimuls
push
cmp
mov
stc
mov
leave
sbb
mov
negl
in
out
lods
mov
xchg
sbb
in
jbe
out
xor
je
loope
or
and
mov
adc
fisubrs
jb
loopne
pop
mov
adc
mov
out
test
xor
mov
adcl
sbb
fsubrs
subb
adc
in
mov
jecxz
cmc
and
repnz
in
cld
orb
cmpsl
in
dec
jno
sbb
ljmp
or
mov
into
test
out
call
loop
push
insl
shrl
jo
sub
js
add
and
xchg
nop
xchg
cmp
or
add
add
mov
xchg
fwait
mull
push
dec
add
xchg
cmp
inc
das
hlt
insb
movsl
lret
aaa
cmpsb
xchg
sahf
xchg
xchg
mov
dec
push
or
lods
lret
mov
sub
std
xor
ljmp
add
movsb
xor
sbb
pop
ds
cli
add
adcb
cld
sahf
sbb
mov
mov
sbb
aas
jmp
jecxz
xchg
cmpsb
cmp
sub
in
and
in
aaa
push
mov
in
mov
int
in
loopne
xor
dec
scas
aad
jge
ret
loop
das
xchg
add
daa
mov
lock
stos
scas
enter
jne
xchg
sbb
sbb
pop
jae
outsb
dec
out
adc
aaa
cs
testb
notl
adc
add
jo
stos
lcall
cmp
xchg
adc
mov
gs
pop
adc
add
xchg
xchg
mov
xchg
xchg
lret
imul
sbb
xchg
outsb
dec
pusha
movb
pop
andl
orl
lds
dec
repnz
mov
push
cmpsb
jae
sub
fiaddl
stos
inc
inc
cmpsl
jno
or
rorb
jae
or
insb
mov
xchg
push
sub
inc
clc
cli
mov
push
jnp
push
jmp
arpl
idivb
insl
mov
adc
mov
int3
jmp
cmp
aad
inc
aam
xor
shrb
push
movsl
xor
nop
dec
popf
stos
push
mov
mov
arpl
jbe
imul
inc
push
cmp
fwait
in
push
dec
fsubl
pop
and
push
adc
mov
add
int
rcrl
int
pop
and
push
dec
shlb
jecxz
jno
cli
cmp
add
pop
popf
push
aam
or
mov
jle
popa
push
lret
mov
add
mov
jne
mov
fldl
jne
cwtl
loopne
inc
mov
out
mov
add
sub
push
or
rorl
movsb
xchg
add
je
fistps
imul
jno
js
lock
jno
fldl
enter
mov
pop
mov
pushf
adc
int3
push
lea
xchg
iret
inc
add
or
mov
or
in
push
mov
jecxz
rorb
or
cmp
mov
mov
test
or
xchg
xor
sti
mov
xchg
xchg
aaa
fwait
dec
mov
outsb
add
loope
mov
and
xchg
sub
xor
call
jmp
fistl
int3
xchg
pop
dec
addr16
adc
sarl
fcmovnu
and
enter
cmp
test
ret
mov
dec
push
xor
dec
aad
mov
int3
sbb
jmp
jne
cmp
decb
xor
xlat
xor
sub
out
nop
loop
mov
mov
daa
daa
push
rcll
ficomps
xchg
and
ljmp
stos
repz
dec
dec
lock
int3
popa
pushf
repnz
cmp
daa
mov
sub
stos
push
and
push
jg
fcmovnbe
mov
dec
stc
and
and
pushf
in
cmp
sub
ds
outsl
in
aad
inc
push
cmp
jno
cmp
mov
pushf
sub
xor
cmp
aam
lret
xchg
sub
mov
cmpsl
push
fidivs
jg
xchg
jle
push
pop
or
mov
add
int
mov
pop
clc
jecxz
loope
aad
push
jbe
push
sbb
divb
mov
cmovnp
outsb
adc
and
inc
and
or
push
push
scas
scas
cmc
fnstcw
movsb
xchg
and
mov
test
incb
scas
add
push
hlt
add
or
rorb
stos
imul
imul
adc
jne
push
push
adc
or
jne
scas
je
mov
mov
fxch
out
shr
xchg
addl
daa
inc
xor
jo
insb
push
and
fwait
addr16
divw
mov
sub
ret
mov
test
mov
pop
nop
sub
jmp
dec
mov
pop
push
or
pusha
add
repz
mov
mov
push
jo
orl
jecxz
sbb
ret
pop
sbb
jns
mov
push
aas
mov
adc
push
rcl
popf
pop
push
jnp
push
test
idivl
pop
inc
mov
xor
dec
or
jb
mov
mov
ss
push
pusha
adc
ret
pop
fwait
notl
mov
fstpt
mov
mov
add
xor
iret
int3
out
call
bound
data16
clc
fsubrp
xlat
hlt
cmp
clc
in
pop
out
pop
out
sahf
or
fidivrl
ret
or
scas
xor
push
pop
das
mov
icebp
loop
je
xor
sub
sub
and
cltd
mov
hlt
ficomps
mov
fs
sahf
inc
xor
mov
xchg
repz
adc
jle
jle
sti
mov
ss
popa
mov
push
test
movsl
repnz
add
ret
push
out
ss
jge
cld
repz
jnp
sbb
pop
cmpsb
je
jp
insl
js
add
cmp
mul
shlb
es
push
pushl
dec
in
sbb
adc
outsl
pop
sar
xchg
dec
cmp
cld
cmp
push
sahf
and
jbe
stos
clc
lret
or
adc
add
push
popf
push
sar
orl
in
adcl
push
shlb
mov
and
hlt
fnstcw
dec
cmp
rcl
xor
fstp
cltd
cmp
xor
outsl
sahf
faddl
fsts
mov
mov
aam
into
sub
sub
ss
dec
test
xor
js
push
pop
dec
mov
shrb
sub
aam
in
shlb
mov
push
inc
repz
lea
cmp
aas
aad
stc
fstpt
push
cmp
or
and
rcr
jbe
lods
sbbb
mov
pop
xchg
sbb
mov
xchg
sahf
sahf
nop
call
adc
inc
cmc
cs
rclb
xchg
sbb
push
mov
jmp
sub
and
jge
and
out
cli
mov
xor
fdivp
mov
leave
aaa
add
rol
add
xchg
clc
icebp
mov
dec
mov
xchg
das
push
fisttps
arpl
and
lea
iret
jnp
lods
pop
push
lock
inc
jl
je
jo
in
push
sar
insl
xor
hlt
and
in
xor
sbb
test
aad
mov
inc
aaa
lods
shll
cmpsl
call
push
or
dec
lahf
xchg
sbb
orl
shrl
mov
shrb
mov
hlt
mov
movsb
scas
dec
mov
jb
out
jno
adc
shrb
adc
fdivl
cmpsl
push
imul
lret
decb
aaa
sbb
scas
push
in
divb
xor
jno
pop
xchg
bound
pushf
add
mov
clc
jno
jnp
sub
mov
pop
inc
jno
fdivrl
push
inc
mov
jb
adc
lock
sub
test
sbb
push
or
gs
adc
and
cld
lcall
xor
je
push
insb
mov
mov
int
add
xor
hlt
xor
cmp
mov
or
jle
lods
ljmp
fs
lret
add
outsb
out
daa
and
jnp
push
sbb
pop
jns
push
mov
movsl
jne
test
inc
cmc
and
sub
movsl
rolb
std
sub
test
lret
loope
andb
dec
js
jo
lret
insl
xchg
push
ds
je
out
sbb
mov
stc
add
enter
sbb
dec
xor
add
pop
out
dec
pop
enter
fcomps
out
bound
xor
dec
popa
mov
jae
ljmp
cltd
jae,pn
inc
lods
push
loope
outsl
repnz
test
test
jno
aas
and
or
out
nop
aas
pop
and
jmp
push
jl
mov
arpl
pop
dec
enter
mov
and
xor
pop
cmp
es
dec
cld
fsubrs
mov
roll
xor
sbb
dec
adc
push
out
sahf
sub
cli
mov
mov
ret
inc
fiadds
dec
les
dec
jle
jo
mov
pop
inc
sbb
push
xchg
in
leave
popl
sar
shl
xchg
in
xchg
xor
mov
mov
sub
ret
cmp
adc
lea
aam
mov
mov
add
mov
pop
mov
inc
mov
ljmp
xchg
or
add
add
push
jno
and
les
jge
push
aam
push
xchg
lret
movsb
mov
aam
jmp
add
pop
mov
lahf
int
loopne
jl
inc
jns
mov
call
std
jo
inc
cli
xlat
xlat
outsb
or
mov
and
cmpsb
add
dec
mov
jle
clc
repz
cwtl
lcall
jmp
dec
dec
xor
out
adc
orb
insb
inc
sbb
jne
mov
dec
sub
and
push
rolb
xchg
fldt
inc
ljmp
sar
adc
or
jnp
pop
int
insl
mov
push
push
push
sub
mov
cld
mov
mov
fcoml
jae
in
push
jns
push
push
mov
adc
mov
insb
nop
jg
mov
lret
imul
xor
jg
leave
sub
cld
mov
xorb
or
cmp
sub
mov
xor
enter
cmp
jns
mov
jns
mov
test
cli
mov
call
mov
or
shll
sub
xchg
pop
sbb
push
pop
out
adcl
popa
jp
repz
imul
dec
loop
inc
cli
cmc
in
ljmp
in
jle
icebp
xor
js
mov
lods
cli
pop
lret
inc
jmp
lock
sahf
or
cmp
xchg
adc
xor
js
nop
xor
cmc
jl
aad
mov
je
push
xor
add
movsb
cltd
insl
in
icebp
imul
cmp
fldt
inc
mov
inc
mov
and
inc
pop
andb
test
rorl
leave
fsubrp
fldcw
mov
jnp
add
and
dec
fs
xor
dec
clc
cmpsl
lcall
pop
push
inc
lcall
jmp
fimull
gs
pop
es
test
dec
in
data16
inc
xchg
test
iret
fwait
lods
jo
insb
inc
xchg
fimull
or
mov
idiv
xchg
mov
insb
inc
cmp
sbb
jge
popa
mov
ret
sbb
inc
mov
jae
fbstp
pop
int3
and
cmp
sub
add
push
push
in
cmp
push
or
jmp
hlt
cmp
inc
sbb
xor
lret
inc
and
cmp
rcrb
mov
gs
rcll
xchg
or
sub
or
mov
xlat
push
sub
lret
xlat
jbe
xlat
and
gs
imulb
pop
push
sbbb
lahf
cmp
mov
jno
push
arpl
or
jmp
int
pop
je
addb
xchg
sub
and
cmp
call
fstl
sub
mov
and
ret
lods
sbb
test
or
das
mov
arpl
js
cmp
cmp
lret
pop
xchg
insb
cmc
mov
jae
xchg
pop
fst
or
mov
cmp
test
push
std
sub
jp
dec
int3
cld
dec
cmp
sub
xchg
in
pop
jecxz
cmp
mov
add
xchg
inc
je
movl
lahf
push
test
loop
fisubs
leave
mov
pop
mov
cmp
scas
int3
jae,pn
add
lods
nop
sub
push
push
and
movsb
aad
in
mov
aam
fistpll
add
sub
mov
sbbb
dec
jne
fnstcw
mov
or
call
insb
cld
int3
push
rorl
push
mov
mov
repnz
fxch
mov
sub
jbe
rcl
inc
or
sub
or
sub
pushf
and
repz
mov
jb
into
repz
into
outsl
insl
pushf
fcoml
sbb
popf
inc
sub
adc
es
mov
sbb
negl
loop
in
lock
ret
xor
jle
adc
andl
cmp
adc
inc
add
icebp
repnz
or
lock
mov
mov
sub
jmp
dec
sub
push
and
lret
jae
stos
mov
sbb
xor
push
adc
cmc
add
lock
jp
lea
sbb
ja
mov
cmp
jo
sbbl
or
mov
inc
inc
stc
mov
inc
scas
add
xor
mov
push
cmp
jo
mov
inc
sarb
testb
and
jl
gs
dec
add
or
repnz
enter
inc
add
int
jnp
repz
dec
std
add
fsubs
pushf
dec
inc
outsl
gs
in
cmc
je
mov
xor
ss
sub
push
or
iret
pop
ss
pop
cmpsb
fwait
je
aad
mov
mov
jp
dec
loop
test
cltd
rcrl
xchg
mov
pop
inc
push
xor
pop
aas
xor
xchg
shrl
or
fstl
ja
iret
es
sub
icebp
int3
movsl
dec
mov
inc
xchg
dec
fdivrl
mov
mov
jg
imul
aam
xchg
loop
std
out
fadd
mov
rcl
fnsave
xor
sub
rorb
sbb
fs
clc
ret
xlat
hlt
adc
pop
hlt
std
cwtl
ret
or
addl
sbb
jnp
movsl
xlat
out
mov
test
dec
sub
lret
testb
sbb
les
sub
ja
fsubrs
mov
roll
and
pop
enter
and
sbb
or
and
jle
daa
stc
movsb
pushf
jge
aam
dec
inc
icebp
or
call
stos
dec
das
mov
aas
jno
mov
lret
cli
out
test
lds
or
cmc
xchg
adc
cld
stc
out
mov
or
push
ja
rclb
mov
sbb
pop
aad
ss
nop
sub
repz
jae
mov
mov
pop
scas
xchg
scas
jmp
popa
mov
bound
test
dec
ret
outsb
decb
testb
ljmp
mov
dec
add
je
je
cmc
jl
arpl
ficoml
fisubrs
lds
out
fcomp
push
and
mov
inc
cltd
int3
push
pop
lahf
xchg
clc
xlat
nop
ret
mov
bound
shlb
movsb
pop
cmp
loop
inc
mov
dec
pop
push
push
inc
pop
imul
xor
imul
jmp
push
nop
mov
xchg
sbb
jmp
shll
push
add
pop
outsl
inc
dec
aas
inc
mov
scas
mov
test
stos
xor
and
test
sti
movsb
pop
cmp
inc
movsb
dec
lret
cmc
ss
cltd
insl
pusha
adc
dec
imul
jg
fnstenv
add
mov
repnz
scas
sbb
add
iret
push
dec
pop
push
lods
sbb
or
sbb
cmpsl
inc
das
inc
lock
cmpb
outsl
int
call
bound
and
test
popa
sbbl
sub
sub
sbb
repnz
jno
cmp
sbb
mov
xor
or
cmc
mov
iret
bound
scas
push
lock
ljmp
out
mov
je
or
mov
jp
mov
xor
jnp
lods
aaa
xor
cmp
insb
decl
xchg
inc
ret
ret
sbb
into
jno
testl
pop
add
inc
pop
out
or
ret
loope
jne
adc
cmp
jo
push
pusha
and
pop
lret
leave
push
lret
and
out
sbb
stc
mov
lods
jmp
clc
aas
std
out
cmp
push
jle
adc
lods
dec
wrmsr
xor
add
mov
jae
mov
jno
scas
push
dec
mov
cwtl
sbb
in
dec
xchg
xchg
cmpsb
jne
and
imul
insl
inc
enter
mov
filds
add
jmp
or
pop
xchg
mov
jle
mov
loope
dec
mov
notb
loopne
pusha
sti
sbb
fbstp
rcll
adc
fistps
pop
mov
lea
scas
cld
xchg
addb
cmp
mov
jno
xchg
arpl
stc
cmc
mov
sahf
ficompl
mov
jp
and
arpl
out
stos
std
sahf
add
xorl
dec
jbe
sbb
call
nop
xchg
mov
pop
je
test
loopne
xlat
out
pushf
dec
imul
jnp
nop
int3
movsb
inc
sub
sub
pusha
or
ror
faddl
pushw
mov
inc
leave
repz
je
xor
mov
inc
mov
int
stc
insl
cmp
shl
pop
dec
ret
arpl
stc
pop
lret
out
mov
jmp
loop
jb
push
divb
sbb
or
push
test
add
stos
sbb
aaa
addr16
jns
es
jp
or
sbb
jbe
mov
mov
push
popa
push
dec
ja
push
dec
sbb
mov
xor
test
mov
jo
cli
or
or
inc
mov
shl
pop
notl
loope
adc
ss
sbb
js
mov
cmp
cld
lods
inc
scas
xchg
adc
test
push
inc
mov
add
jo
out
xor
ficomps
or
xchg
rcrl
sub
inc
je
loope
push
mov
out
push
xchg
nop
mov
mov
dec
mov
push
jecxz
into
adc
mov
cmp
dec
int3
add
loop
inc
insb
fsubl
adc
into
lret
mov
fidivrl
jle
push
dec
sarb
lea
cmp
add
incl
fwait
mov
jbe
cmp
xor
pop
movb
roll
rcll
cmpsb
xchg
insl
and
adc
daa
addr16
lahf
daa
xchg
fsubs
push
xor
add
or
bsf
push
push
or
and
pop
shl
dec
imul
xor
xchg
pop
sub
adc
and
xlat
xlat
pushf
fcmovnb
inc
data16
mov
aas
xor
and
fistl
cmp
scas
loope
mov
aam
lock
cmp
imul
imul
xchg
mov
stos
pop
rclb
outsl
push
out
in
les
push
out
fsubs
pop
insl
pop
add
aam
cld
sbb
push
sahf
pusha
insb
or
insb
outsl
repz
dec
mov
subl
xchg
mov
fwait
in
or
cmp
push
lock
sbb
push
stos
int
sub
push
in
fsubrs
adc
test
lods
hlt
jb
ficoms
into
jo
pop
jmp
xchg
push
fadds
dec
clc
jle
add
push
aad
pusha
dec
test
cmp
inc
add
bound
lods
push
jno
cmp
mov
loopnew
pop
mov
sbb
push
sbb
and
in
mov
dec
aas
mov
rclb
inc
adc
sub
scas
inc
aad
lods
or
and
pop
test
xor
faddp
ja
dec
or
xor
out
inc
mov
xor
push
outsl
cmpb
push
cmp
ret
or
inc
repz
loope
fadd
inc
icebp
sub
mov
outsb
mov
jmp
sbb
ret
inc
imul
fcmovb
xlat
jl
xchg
pushf
push
mov
lcall
outsl
mov
cmp
push
lret
add
adc
mov
dec
ret
js
testb
repz
inc
add
cmp
xlat
arpl
cmp
js
dec
cmp
test
mov
sbb
ja
mov
jl
add
or
ss
insl
jb
add
and
shlb
imul
cli
or
pop
or
shlb
mov
aad
mov
fwait
pop
or
push
push
push
mov
xor
stos
push
lcall
push
shlb
push
mov
mulb
lods
jmp
icebp
push
mov
cld
int
push
mov
and
and
mov
mov
mov
jle
leave
push
inc
ljmp
adc
adc
mov
mov
clc
int
and
and
cmp
xchg
imul
mov
pop
mov
push
ret
sub
in
cmp
cmp
repz
sbb
lret
sbb
cmpsl
mov
test
clc
inc
negb
popf
adc
ret
scas
dec
push
cmp
inc
stos
and
in
cmp
repnz
jae
aas
insl
xor
mov
sub
dec
ret
dec
and
cmp
and
repnz
add
out
mov
cli
jl
xor
jmp
std
ljmp
xor
cmp
lock
movsl
outsb
sub
xor
lock
and
xor
add
mov
icebp
push
xor
sahf
int
call
incl
aad
mov
mov
mov
mov
nop
test
push
fcoms
push
lds
mov
rcl
pusha
and
sahf
jecxz
jb
sbb
pop
inc
int
insb
jl
imul
xchg
push
es
sbb
repz
push
scas
xlat
mov
jge
bound
pop
stos
push
xor
es
mov
clc
out
add
xchg
and
fs
ror
sub
and
add
jmp
push
jnp
into
in
mov
jl
sbb
nop
xchg
icebp
test
adc
pop
jl
xor
xchg
int
sub
imul
sub
enter
sub
lret
stc
cmp
mov
xchg
jne
sub
mov
dec
in
xor
or
mov
mov
xchg
pop
je
in
push
and
gs
stos
mov
fdivrl
fstp
std
mov
in
out
enter
mov
xchg
xchg
cmpsl
inc
cmp
inc
loopne
in
xchg
mov
jne
inc
mov
loope
mov
push
lods
imul
movsl
outsl
je
repnz
inc
es
and
addr16
movsl
jmp
add
mov
push
daa
insl
insb
dec
mov
and
daa
sbb
pop
xchg
push
aad
arpl
adc
js
ret
and
pop
lret
insb
cmpsb
ja
and
pop
mov
loope
fcomi
stos
cmp
repnz
dec
jbe
mov
xor
fsubrs
jl
cs
lock
jb
cmp
popf
bound
inc
into
add
div
cmp
mov
dec
hlt
das
lods
icebp
ja
les
pusha
mov
add
push
and
mov
gs
cltd
mov
mov
mov
cmp
in
cwtl
pop
dec
aaa
daa
push
jle
call
pop
add
xchg
mov
add
push
pop
outsb
mov
sbb
pop
mov
sbb
mov
xchg
push
movsl
mov
adc
inc
repnz
fstp
stos
mov
mov
mov
dec
mov
cltd
xchg
adc
add
mov
inc
mov
and
add
push
jmp
icebp
lret
xchg
push
sti
jp
adc
pushf
mov
xchg
mov
add
sbb
sti
push
imul
sbb
pop
frstor
dec
pop
test
repnz
mov
xchg
fcomps
shrl
fnsave
xor
fwait
xchg
clc
pop
imull
cmpsb
jle
sti
xor
cld
fucom
xor
xchg
lock
fisubrs
es
push
pop
mov
sub
shlb
push
testb
add
xor
popa
push
add
pushf
jo
push
iret
popa
inc
jge
pop
xchg
es
sub
xchg
int
xor
pop
jbe
sbb
add
mov
rcll
push
cmpsl
dec
jne
ret
cwtl
out
imul
loop
aaa
sub
and
shufps
idivl
test
ljmp
mov
lret
xchg
add
jmp
stc
mov
rcl
mov
mov
fildll
inc
mov
add
lods
sub
cmp
xor
mov
and
xchg
xor
inc
inc
push
cmpb
mov
adc
and
testl
add
daa
mov
lock
xchg
lods
push
idivb
push
sbb
pop
cli
test
pop
push
repnz
shlb
sbb
mov
add
cltd
scas
shll
cltd
pop
lret
in
dec
mov
mov
dec
push
hlt
movsl
lcall
inc
dec
ss
jle
vmwrite
ss
ret
push
add
bound
mov
push
in
das
out
dec
pop
xor
imul
cmpsl
xor
out
xor
jnp
test
mov
push
mov
sub
jmp
call
ret
lock
movsl
xchg
outsb
js
pop
pop
xchg
mov
dec
test
sbb
adc
ficoms
stc
mov
mov
aaa
ljmp
inc
mov
test
mov
fiadds
jp
sbb
pop
add
or
ds
inc
cmp
sub
and
mov
add
add
add
xlat
insl
mov
cmpsb
xchg
mov
addr16
xor
aam
rcll
xchg
xchg
inc
jbe
xchg
out
pop
iret
stos
mov
xor
loopne
mov
and
aaa
test
pshufw
jo
pop
lret
inc
push
fsubrs
js
imul
mov
bound
fsubp
cmpsb
js
add
or
out
or
test
push
sub
inc
lock
and
push
test
sub
mov
xor
mov
pop
gs
repz
cwtl
xor
mov
and
mov
mov
mov
push
dec
jb
ret
popf
and
mov
mov
inc
ret
test
repnz
cmc
mov
pop
push
mov
lret
lahf
dec
arpl
lret
aaa
int3
ret
pop
push
adc
cmpsl
sub
add
pop
daa
divl
dec
or
leave
xor
in
inc
sub
lock
nop
mov
loopne
dec
sub
xchg
nop
cmp
or
stos
jno
leave
mov
push
out
add
ds
test
mov
sub
sbb
push
in
les
or
arpl
rolb
data16
xor
jnp
out
xchg
stc
les
jnp
fimuls
mov
out
mov
jg
in
fcoml
xchg
push
out
adc
sbb
xlat
lahf
mov
sub
sahf
outsb
lds
add
cltd
dec
add
jl
jge
xchg
pop
in
add
xchg
in
mov
pop
into
dec
sub
mov
idiv
mov
pop
xchg
cmpsl
and
or
and
cmp
fs
loope
add
ret
pop
shrb
out
test
outsb
testl
loope
gs
mov
sub
icebp
sbb
pop
fidivs
les
mov
or
push
xchg
push
int3
xchg
ret
gs
xor
hlt
mov
inc
mov
cmp
jne
mov
fnstsw
mov
movl
lahf
push
mulb
xor
mov
pop
xchg
rcll
pop
call
lcall
adc
mov
mov
repnz
mov
rolb
in
fcomi
dec
and
xchg
pop
xchg
and
mov
xchg
sbb
mov
sub
inc
push
ret
mov
cmp
cmp
das
aad
out
sbb
add
data16
pop
insl
loop
push
push
sub
xchg
loope
aad
adc
push
repz
mov
and
push
lods
cmp
adc
shll
dec
scas
adc
inc
insb
in
jmp
jg
pop
mov
add
in
mov
ds
int
inc
repz
in
test
ret
punpcklwd
fwait
pop
pop
rolb
shrb
sbbb
xor
js
mov
in
int3
inc
mov
aam
lahf
xor
push
xor
xor
cmp
fnsave
fdivrs
cmp
pop
loopne
leave
and
and
or
sub
sub
hlt
repnz
lret
mov
aam
pop
push
sub
cli
lds
pop
cmp
inc
or
std
dec
clc
mov
push
sbb
jo
inc
cltd
xchg
mov
leave
lret
mov
imul
loopne
inc
mov
mov
out
jno
pushf
fstl
mov
mov
dec
pop
pop
mov
add
aas
inc
call
sbb
aam
ficompl
dec
mov
aam
fldenv
cmp
or
push
xor
jge
add
add
aas
jbe
fisttpll
cs
movsb
aad
inc
cmp
out
push
xchg
adc
iret
fsubrs
sahf
cmc
cmp
mov
push
pop
push
mov
shlb
fsts
push
cmpsb
dec
mov
dec
mov
pop
pop
cld
mov
push
test
aad
and
xlat
shl
cltd
fisttps
or
mov
sbb
jmp
xchg
aaa
pop
cmp
cmp
sub
hlt
adc
ja
shrl
push
fdivrp
mov
xchg
jmp
bound
dec
mov
push
call
out
add
gs
ror
dec
or
xor
in
adc
loopne
add
jle
fst
testb
fistps
lea
xchg
and
mov
insb
and
out
addr16
movsb
daa
sub
mov
out
mov
pop
outsl
jnp
sbb
cmpsl
xor
xchg
add
mov
xorl
mov
cmp
icebp
shlb
and
sbb
imul
stos
adc
adc
inc
fs
jl
mov
out
ljmp
out
sub
insl
out
nop
and
cmc
aas
nop
add
sub
pop
in
dec
fmuls
and
jge
mov
lods
push
fwait
arpl
jmp
into
sub
add
inc
mov
add
in
mov
ds
popf
js
and
leave
sub
sahf
dec
adc
jae
mov
xchg
mov
and
xchg
mov
ss
dec
jp
cs
in
in
mov
inc
fidivrs
xchg
xor
sub
dec
inc
mov
data16
push
fildll
and
jbe
cmpsw
out
mov
xchg
xchg
sbb
sbb
imul
or
fwait
test
or
dec
fwait
jnp
icebp
test
sub
ljmp
into
mov
leave
inc
lea
popa
mov
jbe
call
fdivs
mov
test
jp
jbe
imul
cmp
mov
popf
cld
iret
mov
push
popf
mov
push
repnz
mov
or
insl
hlt
aas
or
sbb
cmp
lret
test
mov
fiaddl
fstps
das
loope
pushf
push
jmp
repz
pushf
fisttps
lea
mov
call
sbb
adc
jmp
xor
repnz
leave
in
pusha
shll
inc
sub
xchg
out
enter
les
pop
mov
ds
mov
jnp
and
je
test
lahf
push
sbb
movsl
repz
cs
xchg
sti
adc
mov
mov
cltd
out
sbb
adc
and
int
enter
add
js
xchg
and
pop
mov
pop
stc
or
xor
xchg
xchg
pop
sbb
mov
clc
popf
jecxz
out
push
and
nop
xchg
js
inc
cltd
sub
mov
xchg
xchg
xor
pop
jbe
dec
leave
and
or
sub
unpcklps
sar
dec
dec
int3
xchg
aas
out
mov
outsl
lahf
mov
jne
or
cmp
pop
jae
shll
clc
sbb
mov
push
shrl
dec
push
into
jbe
pop
outsb
adc
movsl
testb
lret
call
ficomps
push
push
or
cmp
je
pop
fnsave
jmp
fmul
aad
lock
cmp
mov
inc
cld
push
adc
mov
and
push
xlat
inc
push
sbb
ret
cmc
enter
arpl
cld
sarb
adc
add
push
sub
xor
imul
adc
and
mov
lcall
inc
fwait
mov
mov
pop
gs
push
or
imul
add
loopne
or
sbb
pop
mov
imul
mov
shrb
out
push
mov
outsb
dec
out
dec
je
or
dec
sarb
push
das
inc
jno
fiaddl
sarl
out
push
lods
and
repz
sar
loop
fsts
dec
jecxz
pop
js
mov
push
lret
fwait
adc
inc
fwait
pushf
sti
or
sbb
ds
lcall
pop
mov
ret
xchg
push
jnp
out
stos
push
dec
mov
jno
cmc
add
jmp
jo
sub
loopne
rcrb
mov
adc
pop
lods
mov
pop
pop
xchg
int3
add
inc
cmp
arpl
mov
add
in
int
xchg
pop
mov
sbb
sbb
push
clc
out
jl
lea
in
fiaddl
mov
repz
in
and
xchg
cmp
pushf
fistl
aad
stos
out
lret
sbb
push
neg
enter
or
cs
xchg
pop
loope
pop
mov
stos
cmp
clc
cmp
adc
sbb
xchg
pop
xor
mov
mov
sub
push
mov
mov
inc
and
lahf
rcll
mov
push
and
ficompl
cmp
scas
cmp
dec
push
jne
inc
inc
cmpsb
inc
in
add
xchg
popf
mov
call
cwtl
lods
sub
out
cmpsb
popf
pop
inc
push
ljmp
jae
sub
mov
jbe
mov
cmpsb
inc
in
cmp
xor
add
loop
or
cld
jno
cmc
arpl
or
inc
and
scas
adc
lret
inc
mov
popa
cmp
adc
pop
pop
inc
xor
pop
clc
lock
daa
aad
test
movl
mov
in
cmp
fdivrs
push
in
imul
xor
test
lahf
gs
into
jge
mov
jbe
or
dec
ljmp
xchg
or
inc
mov
es
cld
loope
push
cmp
idivb
nop
lret
mov
fucomip
orl
pop
or
pop
sub
icebp
into
hlt
cmp
pop
cld
int3
ss
sub
push
cs
xchg
sbb
xchg
inc
cmp
movsl
cwtl
les
mov
sbb
cmpsb
jle
and
xchg
popf
out
mov
bnd
dec
arpl
pop
cmc
pop
std
push
rclb
dec
scas
xchg
pop
dec
push
ret
and
xchg
loope
dec
inc
pop
mov
ds
addl
cs
cld
pusha
inc
je
ret
push
adc
jle
lods
add
nop
pop
cmp
shrl
scas
inc
dec
loopne
dec
repnz
sub
pop
add
xchg
mov
fwait
insl
popa
enter
cwtl
pusha
ss
sbb
mov
push
push
push
mov
fbld
fidivrs
jmp
nop
fildll
movsb
test
arpl
sbb
dec
mov
pushf
xchg
je
sub
imul
in
pop
outsl
pusha
sarl
adcl
xchg
lods
and
out
or
pop
dec
mov
in
cs
test
hlt
cmp
jp
sbb
fwait
inc
roll
inc
adc
nop
hlt
adc
sbb
sbb
es
inc
bound
cmp
mov
ljmp
or
ljmp
cmp
push
sub
or
adc
leave
cmc
mov
repz
pushf
movsb
jb
fnstsw
outsb
loope
mov
pop
cltd
stc
inc
stos
popa
jp
js
clc
fsubrl
xchg
out
add
push
jle
loopne
cld
pop
movsb
inc
out
pop
xor
rcrb
cmpsb
les
enter
dec
xchg
pop
incl
jle
mov
mov
pop
in
xorb
xchg
dec
xchg
add
xchg
xchg
sbb
pop
gs
inc
mov
xchg
mov
mov
inc
cld
fldenv
jmp
xor
lret
add
dec
repnz
pop
les
xlat
mov
xchg
out
je
mov
mov
bound
fisttpll
popf
mov
jae
clc
dec
subb
push
repz
cmp
push
gs
or
add
ret
adc
xlat
out
and
roll
pop
insl
or
icebp
es
push
xchg
mov
adc
loop
mov
pop
push
add
into
dec
insb
insb
and
repz
lds
adc
in
pop
jbe
out
cmp
xchg
dec
or
sub
mov
dec
sub
add
int
pop
xor
lods
subl
mov
rcl
sti
gs
outsb
cmc
shll
adc
mov
in
arpl
push
in
cmpb
fdivrp
sub
inc
jmp
add
ljmp
fsts
push
push
adc
or
ss
ljmp
pop
shll
enter
add
jo
shl
mov
dec
cld
stos
mov
or
xchg
and
imulb
mov
jle
cmp
push
cmp
popa
cmpsb
out
faddl
add
fstpl
aad
mov
out
js
lcall
flds
cltd
push
ds
stos
push
sbb
test
jge
ret
cmp
mov
pop
insb
jl
add
push
jmp
add
fstpl
cs
divb
insl
testl
jge
sbb
dec
xor
jmp
dec
popf
jg
lds
aam
imul
aaa
inc
pop
jle
inc
scas
pop
mov
popa
push
cmpsl
fwait
pop
jecxz
std
inc
shlb
mov
out
iret
aam
mov
pop
gs
add
adc
stos
pop
jno
xor
cltd
cld
and
adc
inc
scas
xlat
adcb
mov
loopne
test
aam
jecxz
clc
imul
lea
pop
addr16
out
xchg
pop
mov
rcr
dec
xor
mov
sbb
mov
rolb
cld
cmpsb
jno
mov
jae
ret
and
or
jae
inc
gs
js
das
shr
popa
adc
push
fstps
pop
inc
push
int
cmpsb
jns
mov
mov
pop
mov
out
orb
pop
fdivp
cld
lods
or
or
mov
inc
roll
repz
push
decl
bound
adc
xchg
xor
dec
xchg
into
dec
or
andl
dec
sub
cld
subl
fcompl
jne
push
sub
orl
addr16
xchg
pop
jmp
test
int
sub
lods
imul
push
dec
pop
mov
xor
push
ss
jg
mov
test
inc
mov
addr16
aaa
jno
mov
scas
xchg
test
sub
mov
sub
rorl
loope
mov
dec
subl
sbb
aas
add
and
mov
and
mov
cmp
bound
jmp
lea
mov
dec
mov
pop
stos
sbb
jmp
mov
sbb
and
xchg
xor
cltd
sbb
lahf
sbb
sub
mov
pop
sbb
pusha
ret
xor
mov
sahf
out
lods
mov
pop
adc
or
sahf
cmpl
call
xchg
lds
popf
jb
lret
sbb
mov
adc
scas
or
mov
out
clc
pop
out
clc
ja
sub
xchg
les
psubq
pop
dec
and
cs
int3
movsb
jns
sti
mov
and
and
push
adc
jp
xchg
faddl
push
pop
sbb
out
dec
imul
sub
jb
je
popf
dec
scas
or
add
push
pop
rcr
iret
jg,pt
js
adc
mov
pop
out
mov
out
push
int
inc
mov
in
pusha
and
mov
pop
pop
scas
repz
movsb
add
stos
nop
jb
data16
inc
sbb
dec
and
rcrb
decb
inc
out
pop
mov
or
sti
push
mov
xor
popaw
pop
addr16
mov
cmpsl
mov
add
in
sbb
aas
das
cmp
adc
dec
jmp
and
xor
jb
sti
icebp
add
jae
sarb
mov
mov
outsb
sahf
inc
dec
fcoms
jecxz
scas
dec
ja
mov
adc
cld
xor
inc
mov
adc
xor
xchg
pmaxsw
cmp
xor
fstl
addb
data16
rcr
jg
and
pop
das
enter
test
and
add
in
add
outsb
or
outsb
xchg
add
pop
test
xor
mov
cmp
dec
and
jno
fisubs
pop
outsb
pop
paddd
iret
scas
mov
push
mov
adc
faddl
test
mov
icebp
lea
mov
mov
push
clc
lret
push
loop
loope
cmp
arpl
push
out
mov
dec
repz
fbld
sbb
jnp
out
add
pop
test
sahf
fidivrs
jae
fdivs
xor
jge
xchg
jle
pop
mov
push
mov
add
lds
jl
cld
pop
sub
stc
or
fsubrs
mov
pop
cmp
stc
stos
push
push
fs
pop
mov
add
loopne
pop
pop
sti
cmp
lds
out
add
aam
icebp
rcr
imul
pop
daa
jb
mov
mov
xchg
xchg
outsb
mov
push
or
and
ret
repnz
bnd
mov
and
xchg
or
dec
xchg
lahf
push
and
dec
cltd
test
cmp
cwtl
ja
mov
cwtl
cmp
xchg
and
mov
mov
fldl
ret
and
sarb
jne
mov
add
loope
mov
data16
pop
cmpsl
xor
xchg
mov
repz
and
aam
jne
stc
xor
adc
mov
in
stc
popa
ret
nop
adcb
fwait
jae
stc
xor
mov
dec
aam
push
inc
movsb
lret
sbb
adc
jle
mov
test
out
in
inc
add
add
xor
idivl
ret
mov
fsubrs
pop
inc
aaa
mov
cs
mov
shl
add
fs
pushf
mov
inc
ss
stos
mov
in
sbb
mov
daa
int3
in
mov
sub
adc
push
jne
leave
sub
jbe
popa
mov
add
test
adc
mov
loopne
into
movsb
leave
int
ja
jne
and
adc
in
push
lea
mov
dec
js
xlat
mov
push
lods
sbb
mov
out
mov
pushf
inc
add
daa
dec
xor
xchg
fldcw
mov
push
pop
das
add
mov
dec
xchg
dec
and
jmp
adc
ss
cmpb
xor
or
pusha
mov
hlt
cmpsl
lea
and
mov
jbe
loope
out
mov
jecxz,pt
pop
loope
push
iret
push
add
test
stos
jge
mov
add
enter
scas
xchg
xlat
dec
cs
imul
cmp
lret
and
cmpsl
xchg
adc
cwtl
lock
sbb
mov
and
adc
repz
dec
cltd
fwait
add
and
std
and
add
cmp
mov
jb
xchg
imul
mov
orl
mov
fsubrl
cmp
shrb
mov
inc
xor
jb
sub
xchg
push
ffree
in
mov
push
scas
les
sbb
xchg
movl
call
subl
cmp
out
test
push
cmc
or
cmp
mov
cmp
jno
cli
fisubrs
sti
scas
mov
mov
sti
push
test
add
loope
fidivrl
das
inc
jg
xchg
pushl
adc
in
mov
js
cmpsl
fldcw
prefetchwt1
or
inc
dec
incl
nop
out
mov
xor
mov
sbb
mov
sbb
fbld
addb
jb
jae
fwait
pop
cmp
ret
inc
addl
cs
je
movb
xchg
int
mov
jb
cmp
cmc
push
addb
or
cmp
pop
sbb
aad
std
add
das
mov
fdivl
cld
xchg
xchg
pop
pop
movsl
adc
cwtl
jnp
inc
xchg
imul
mov
jmp
out
cmovae
fdiv
orb
pop
sarb
jo
mov
icebp
fldl
jle
addl
xchg
lahf
adc
sub
jmp
fmul
dec
fnstsw
test
leave
add
ss
pop
add
mov
inc
xchg
add
lret
jp
fwait
and
add
mov
xchg
jg
dec
jle
push
push
fwait
mov
clc
dec
jle
idivl
inc
jae
test
push
jl
xchg
pop
das
out
cmp
and
in
hlt
pop
and
pop
xor
push
inc
jecxz
mov
mov
test
push
jl
mov
add
std
ret
xchg
ret
test
gs
or
pop
insb
aam
es
jecxz
inc
adc
or
jno
cmpsl
and
jle
xor
cmp
mov
inc
popa
cwtl
xchg
loop
inc
cmp
xchg
lcall
sbb
jl
icebp
sbb
out
and
popf
or
lahf
jecxz
sbb
mulb
in
mov
mov
lret
mov
lods
ljmp
sub
cwtl
pop
add
arpl
and
mov
negl
sbb
sbb
into
push
jmp
mov
jge
push
jne,pt
mov
adc
out
sbb
loopne
daa
fdivl
xchg
or
xlat
cmp
pop
outsl
add
add
cmpsb
jmp
jge
fsubl
lock
xorl
mov
mov
dec
cmp
repz
cmp
push
pop
outsl
outsb
cmp
ret
int3
lock
cmpl
nop
pop
mov
add
ss
dec
test
sbb
imul
scas
inc
mov
pop
xchg
jle
push
push
ja
ret
insl
mov
lahf
push
lea
fidivs
dec
sbb
decl
sub
roll
stos
or
jbe
jne
shlb
jecxz
xor
mov
addr16
ficompl
mov
stos
ljmp
jnp
sub
out
adc
xchg
shrb
sub
cwtl
out
sbb
icebp
hlt
scas
imul
inc
mov
jmp
mov
bound
adc
adc
call
stc
loope
sbb
jmp
gs
inc
dec
test
psrlq
cli
sub
xchg
add
cmpsl
inc
cmovne
push
loope
push
and
jecxz
movsb
pop
sub
mov
xchg
nop
cmp
and
and
jg
jg
jne
xorb
shld
lods
pop
cmp
cwtl
pushf
adc
push
mov
arpl
orl
xor
std
in
lret
adc
xchg
ja
adc
mov
xchg
and
mov
sbb
in
je
outsl
pop
pushf
aam
cmp
cmc
mov
ljmp
lock
insb
xchg
inc
loop
xor
jmp
pop
ret
repz
and
shl
in
int
pushf
outsb
cli
mov
jne
or
dec
loope
ds
xor
jp
mov
sbb
xor
dec
loop
pop
stos
cmpsl
dec
ds
mov
mov
fiaddl
test
out
push
dec
gs
xor
jecxz
push
pusha
push
mov
movsl
mov
negb
or
add
leave
out
inc
aam
insb
xchg
dec
mov
pcmpeqd
sbb
push
cltd
arpl
xchg
data16
xchg
ret
inc
jecxz
pushf
inc
mov
fisubl
repz
lods
mov
mov
cmpsb
imul
bound
dec
fstpt
cmp
push
mov
add
imul
ljmp
shll
mov
cmp
jecxz
iret
daa
into
mov
idivb
pusha
jne
enter
insb
aam
sbb
adc
or
mov
push
cmpsb
pop
daa
sbb
inc
mov
loop
xchg
loope
je
xchg
add
shl
push
test
filds
xchg
pop
mov
pop
test
and
stos
pop
add
fst
out
jo
scas
xor
jl
push
and
add
dec
xchg
push
rorl
inc
loope
leave
mov
dec
add
popa
movsl
sbb
lret
gs
add
fcomps
scas
pusha
stc
xor
into
repnz
fwait
mov
push
sarb
sbb
jae
jno
xor
xor
dec
mov
mov
aaa
loop
cmp
stos
jno
in
sub
dec
push
xor
testb
in
lahf
pop
stos
or
in
lahf
xlat
sub
cmc
xchg
jmp
mov
add
orb
xor
fcmove
jno
lds
mov
cwtl
pop
addr16
inc
or
sbb
mov
lea
lock
sbb
pop
das
adc
add
mov
push
jg
mov
sbb
cwtl
push
push
mov
push
shlb
xlat
pop
test
fiaddl
pusha
repz
outsl
xor
or
lds
push
sub
push
cmp
sbb
pop
sub
pushl
shr
jge
dec
test
in
or
icebp
gs
sbb
stos
out
popf
and
enter
cmpl
fdivrp
jns
cmp
jg
pop
and
mov
jnp
ss
scas
adc
cmp
xchg
lret
inc
bnd
and
data16
popa
jg
repnz
pop
aas
js
popa
imul
mov
add
shrl
lahf
jae
mov
or
jne
xor
test
inc
shlb
pop
aas
test
out
sbb
rcrb
jmp
cmp
mov
mov
test
outsl
fbstp
lds
loope
inc
out
pop
cmpsl
aad
lods
xchg
sbb
mov
jp
and
lods
pushf
test
je
std
push
loop
mov
or
push
out
jecxz
outsb
pop
jg
test
dec
xlat
iret
cmc
sub
shr
int3
out
stc
jnp
or
stos
sbb
jg
jnp
aad
add
outsl
ss
mov
push
std
dec
lret
lock
movsb
inc
enter
sub
push
xchg
bound
mov
rorl
sbb
mov
or
mov
ret
scas
sahf
out
int
lds
mov
push
pushf
inc
stos
dec
and
mov
cwtl
test
dec
fldl
test
cmp
jns
lret
out
lods
cs
jle
add
out
or
mov
push
mov
lcall
pop
mov
arpl
mov
movsl
adc
movsb
out
sub
cwtl
test
aaa
fidivrl
fistpl
arpl
jg
pmaxub
or
xchg
push
stos
push
add
pop
shrb
idivl
inc
pushf
pop
push
outsb
jae
xlat
clc
adc
inc
sti
mov
jp
push
test
mov
mov
jecxz
sbb
jmp
int
add
cmp
xchg
test
sar
incb
cmc
mov
imul
xor
adcb
popa
sti
fs
fs
mov
ror
sti
insl
jmp
lcall
dec
jle
xchg
popa
cmp
stos
mov
mov
mov
sbbb
sbb
test
pop
fisubrs
test
ret
shr
push
push
movsb
in
cli
push
cmpsb
loopne
lock
enter
fnstenv
sti
adc
push
mov
test
cmp
pop
mov
dec
arpl
xchg
cmp
js
mov
leave
xchg
mov
mov
arpl
in
in
dec
ds
cwtl
jecxz
iret
or
es
and
lock
and
xor
lcall
js
inc
test
sub
cmpsl
push
mov
push
cmpsb
addr16
js
insb
sub
cmp
jg
lods
scas
test
test
sub
inc
xchg
push
faddl
js
or
fwait
iret
into
inc
incb
xor
stc
inc
stc
xchg
enter
lods
push
mov
lods
cmpsb
adc
pop
and
test
lds
push
mov
jge
cltd
mov
fisttpll
dec
mov
mov
or
stos
push
jmp
mov
cmp
cli
xchg
pop
orl
cmp
cs
test
mov
sub
iret
inc
adc
cli
xchg
lahf
and
fwait
and
inc
ret
push
imul
sub
in
xorb
pop
fistpll
ja
pop
jb
lods
std
mov
popa
lods
jns
lods
push
pop
mov
jno
jnp
mov
jae
ss
mov
add
adc
push
ret
test
mov
stc
fwait
loopne
bound
push
pop
xchg
mov
clc
scas
rcll
push
out
lret
jb
arpl
shll
inc
movsb
or
jg
xbegin
pop
jbe
dec
outsb
mov
ljmp
loope
sbb
loope
fdivr
xor
cmp
call
lds
mov
or
out
sbb
mov
ljmp
fdivs
add
cmp
xchg
iret
scas
sahf
cmp
or
mov
jnp
dec
imul
dec
test
loop
sbb
mov
aaa
xchg
pop
mov
push
or
mov
push
mov
pop
icebp
push
in
jb
dec
push
je
xchg
mov
push
jns
mov
cltd
sbb
movsb
jecxz
and
and
jns
testb
loopne
mov
rcl
repz
fsubl
adc
push
addr16
push
mov
add
inc
jns
test
test
add
int3
out
sbb
fdivr
sbb
lret
xchg
dec
repz
jb
imul
cmp
sub
dec
sub
xor
es
and
pop
jns
jl
sbb
loope
ss
test
out
cmp
movsb
fwait
aad
mov
pop
cmp
jle
clc
fwait
xorl
imul
push
icebp
fbstp
cmpsl
fwait
scas
into
out
and
fs
dec
xchg
into
xor
and
pop
mov
jns
subl
xor
sarb
jbe
pop
and
out
inc
or
pop
mov
adc
hlt
or
jecxz
or
fistps
mull
mov
fiaddl
daa
daa
dec
sbbl
insl
int3
in
loope
sub
sbbb
nop
fcoms
pushf
fwait
jg
sbb
mov
mov
dec
in
sbb
jnp
test
push
stc
shlb
jmp
jp
icebp
add
pop
es
in
cwtl
testb
addr16
in
shrl
enter
je
push
push
shll
cmp
cs
aam
cmc
stos
dec
adc
notb
inc
sub
pop
out
jmp
mov
les
xor
jecxz
and
inc
jns
pusha
xor
sub
cmp
shl
pop
jl
into
stos
imul
push
iret
cld
pusha
test
bound
jbe
push
clc
push
dec
pop
mov
push
arpl
out
jbe
loope
lcall
mov
mov
dec
jge
shl
repnz
mov
mov
dec
or
cltd
imul
cmpsb
and
inc
shrb
dec
mov
nop
push
imul
inc
data16
sahf
sub
mov
xchg
std
pusha
adc
enter
push
mov
xchg
test
jmp
jbe
mov
and
lods
clc
mov
push
dec
pop
das
sbb
cmp
xor
les
push
mov
rcl
stos
addr16
sub
imul
mov
pop
and
xlat
icebp
inc
adc
pop
mov
out
mov
pop
adc
and
imul
rcr
dec
lods
insl
stos
xlat
jmp
or
jb
mov
imul
pop
fwait
cmpsl
daa
mov
std
out
jmp
cmp
add
xor
sbb
arpl
xchg
fs
sbb
dec
js
push
push
incl
sbb
aaa
loopne
dec
add
add
fsubrp
push
lods
scas
push
es
cld
clc
lock
sbb
mov
shr
enter
dec
mov
xor
ret
frstor
shll
sbb
mov
mov
mov
add
mov
xchg
pusha
les
dec
pop
cwtl
sti
or
std
loop
out
loopne
data16
imul
push
cmp
push
fsts
inc
les
or
push
das
ficoml
and
xchg
icebp
ja
or
pop
pop
jae
addr16
rolb
mov
pushf
loop
jae
mov
jnp
mov
fscale
clc
decb
enter
or
inc
sti
stos
and
test
or
mull
cmpsb
addl
js
dec
ret
push
leave
adc
ja
loop
rclb
les
mov
inc
fs
push
sub
dec
jne,pn
lret
stos
mov
sub
jle
popa
jo
dec
jae
test
or
jne
fsub
or
or
cmp
xchg
and
jns
jecxz
push
mov
or
pusha
aas
lods
sub
js
out
and
fchs
or
and
arpl
push
sub
mov
loope
jmp
iret
in
add
mov
dec
in
movsb
jecxz
pop
sub
into
jns
xchg
lods
repz
xchg
adc
inc
mov
fiadds
pop
lcall
xchg
cli
add
cmc
cld
shlb
dec
mov
test
or
loop
cmp
fisttpll
pop
cltd
mov
popa
and
mov
sahf
mov
cmpsl
out
jns
push
test
daa
push
test
mov
bnd
jg
hlt
test
mov
cmp
sub
xor
scas
dec
pop
mov
mov
and
rcl
insb
in
mov
dec
push
outsl
and
lock
das
fildl
xchg
xorl
sarl
loope
nop
imul
cmc
push
mov
sbb
sbb
xchg
cmp
jbe
sbb
push
add
fcom
data16
repnz
test
mov
inc
pusha
mov
jl
bswap
ret
xor
inc
push
mov
jns
js
mov
mov
push
xor
xor
aaa
jns
adc
rorb
fidivs
mov
roll
ret
fldenv
pop
dec
fbstp
lahf
nop
mov
in
and
lcall
sub
mov
sbb
hlt
add
incl
cs
mov
lea
dec
cmp
cld
push
mov
sbb
pop
scas
dec
sahf
popa
adc
jge
lea
xor
lret
push
ds
adc
pop
hlt
js
imul
mov
cmp
shll
cmp
jg
ds
mov
or
dec
cmpsl
sub
int3
test
fsubp
push
arpl
sbb
fisubs
xor
scas
inc
mov
dec
adc
ret
jo
push
jne
loope
pop
cmpsb
xor
dec
test
mov
lods
adc
xchg
dec
inc
popf
into
in
test
push
xorb
sti
adc
sub
mov
std
sub
ss
or
test
mov
stc
jns
mov
popf
adc
inc
scas
jne
pop
jb,pt
dec
mov
aas
insl
cmp
mov
loop
insl
mov
fwait
test
ss
or
int
mov
cltd
push
stos
cwtl
cmp
mov
lret
iret
cmc
mov
imul
push
dec
and
outsb
scas
loope
lock
and
dec
jae
lcall
xor
or
mov
adc
out
lret
push
mov
sub
sub
hlt
ret
sub
scas
dec
cmp
jne
fidivrs
pushf
push
jns
add
outsl
and
pusha
xor
rolb
jne
cmp
fcmovu
mov
in
in
adc
loop
push
cmpsl
jg
mov
scas
inc
push
shlb
jne
sbb
push
mov
lret
sbb
dec
decl
adc
sub
rcll
sub
out
xor
sbb
mov
dec
lods
icebp
jecxz
cwtl
outsl
ret
adc
sbb
cmp
dec
cmpsl
push
mov
push
dec
cmp
ss
lock
sbb
adc
inc
sbb
pop
addl
outsb
test
sub
pop
cmc
mov
mov
jbe
and
jne
xchg
cwtl
scas
push
sub
bound
fwait
xchg
dec
pop
jecxz
cmp
stc
and
xchg
or
mov
iret
or
lods
mov
mov
loopne
dec
xchg
std
lahf
sub
mov
cmpsb
push
sub
add
cmc
add
shll
dec
int3
lds
aam
insb
shr
jecxz
cltd
jb
icebp
fnstsw
pop
and
mov
jg
icebp
or
or
cwtl
inc
xor
pop
push
outsl
pop
xchg
bnd
pop
mov
pop
out
frstor
jae
shlb
dec
lcall
mov
dec
push
lods
xchg
xlat
iret
push
mov
fisubrl
cmp
or
xor
or
push
sub
jmp
adc
xchg
push
std
mov
mov
inc
push
pop
js
mov
inc
divb
imul
fistpll
jp
adc
add
inc
test
adc
xchg
hlt
mov
ja
or
rcll
sub
cwtl
push
rolb
sbb
push
adc
dec
rcrl
stc
ficoml
mov
movsl
js
jne
shr
repnz
adc
rol
leave
mov
in
mov
lock
in
fsubrs
cltd
mov
outsb
lret
push
add
or
stc
pop
mov
dec
popa
loop
clc
aam
push
imul
shll
in
fmull
into
push
je
xchg
outsl
dec
pop
lahf
cmpsl
adc
inc
jne
sbb
fidivs
scas
test
push
or
and
sbb
arpl
stc
in
dec
xor
test
loopne
mov
int3
sub
test
and
in
in
scas
repz
mov
ljmp
xor
cltd
push
jae
xlat
pusha
inc
inc
or
sbb
imul
test
and
xchg
xor
lods
mov
in
or
or
ds
inc
mov
jbe
sbb
pop
jne
notb
nop
or
fwait
shlb
hlt
push
mov
xchg
cwtl
cld
imul
jb
xor
and
mov
fcmovnbe
cmp
or
andl
lods
cmp
fsubrl
mov
xorb
in
sti
mov
unpckhps
adc
inc
adc
daa
xchg
dec
adc
fisttpl
jno
test
aam
pop
sbb
push
test
push
js
lret
push
decl
sbb
xor
loop
lret
fdivr
repz
in
movsb
sub
sbb
or
sti
movsb
pop
or
jmp
lret
cmp
rcl
cmp
push
fwait
in
movsb
ds
idivl
jae
push
cmp
or
ja
jge
hlt
jp
pop
pop
fsubrs
sub
fidivs
clc
xlat
mov
repz
and
das
lods
mov
les
in
xor
lret
xor
addr16
sbb
pop
stc
xchg
outsl
pushl
xor
cwtl
aad
hlt
jns
adc
jg
jae
test
fsubr
xor
movsl
jno
shlb
xchg
insl
rolb
push
imul
mov
test
lret
loopne
out
xor
push
cmp
ljmp
xchg
cmovb
inc
and
dec
jne
adc
sub
xchg
pop
fsubrp
fcoml
imulb
mov
hlt
push
ret
xchg
bnd
movsl
js
push
or
push
push
and
mov
stc
or
inc
and
jno
fsubrs
inc
add
mov
movsb
and
cmp
adc
gs
mov
pop
or
roll
mov
sub
addr16
mov
in
shlb
je
inc
adc
push
inc
push
push
fsubrs
jecxz
aas
rcll
rclb
dec
imul
jmp
lds
push
clc
sub
push
cmpsl
enter
shrl
cmp
cld
jmp
sub
jp
test
insl
jae
loopne
out
pop
dec
test
je
cli
mov
insb
pop
leave
bound
gs
and
clc
sarb
xchg
jmp
mov
dec
dec
or
mov
fdivrl
shll
push
mov
inc
loopne
icebp
lcall
cmc
mov
loope
jecxz
pop
xor
cmp
addl
test
ret
and
je
jl
repz
jbe
xchg
pop
pop
test
push
lock
xchg
addr16
dec
hlt
subl
and
push
cltd
fdivrs
std
pop
mov
andl
inc
jp
scas
xor
in
push
jnp
aaa
enter
pushf
dec
mov
pop
movsb
out
push
sub
shr
call
mov
push
dec
mov
sbb
lcall
sub
ret
aam
lcall
sqrtps
das
sub
sub
sbb
cmpsb
pushf
repz
pop
push
lretw
ljmp
in
jb
lcall
or
ficomps
les
das
mov
fcom
and
call
xor
loopne
sbbl
push
jbe
xor
dec
mov
mov
push
add
jle
das
int3
dec
and
xchg
ret
daa
lret
dec
adc
ret
xchg
cltd
push
stos
or
in
es
fdiv
xor
sbb
aaa
xchg
sbb
lods
cli
stc
ret
jns
stc
rcrb
adc
lea
xor
shlb
test
inc
in
jae
cld
sarb
sub
fs
add
andl
mov
ret
jge
fisubrl
mov
xchg
data16
fistl
add
ret
lret
dec
dec
sbb
push
in
dec
aad
lock
jp
cmpsl
out
aad
mov
inc
pop
xchg
mov
inc
pushf
loop
fnstcw
mov
fistps
xchg
aas
or
or
dec
mov
les
or
mov
sbb
in
sti
pop
and
jae
ret
fldcw
add
sbb
mov
sub
mov
sub
stos
push
mov
adc
sub
push
add
xchg
xchg
ficoml
movsb
xor
ss
or
add
push
loop
js,pn
sub
stc
xchg
decl
and
pop
repz
push
cltd
out
ja
pop
out
cmc
pop
loope
nop
xor
or
dec
pushf
in
inc
ret
mov
jecxz
dec
inc
cmp
enter
out
inc
and
push
gs
sbb
sub
arpl
adc
popf
mov
jge
push
and
cmpsl
rcll
mov
jle
in
add
sbb
mov
je
aaa
mov
jmp
testl
or
jmp
sbb
or
mov
into
loope
ja
popf
testb
shlb
stos
or
rclb
lcall
inc
roll
inc
and
dec
adc
and
and
sub
sbb
je
ja
pop
bnd
aas
and
out
push
outsl
sbb
movsb
inc
mov
insl
and
test
cmp
and
pop
aam
sub
xchg
nop
cs
scas
aaa
jae
popa
pop
test
dec
push
mov
test
or
testl
lret
pop
xchg
inc
sbb
cmpsb
ret
jmp
gs
pop
mov
imulb
je
xchg
arpl
test
lods
cmc
sbb
insl
cmpsl
imull
clc
in
ss
dec
in
fldcw
dec
dec
or
js
out
and
pop
or
fwait
in
xlat
repz
imul
sbb
into
fildl
ja
aam
popa
lds
jl
push
pop
or
and
das
mov
lcall
popf
ret
jecxz
dec
pop
arpl
fisttps
popf
icebp
adc
push
dec
ficomps
cltd
fstl
jns
notl
jne
mov
mov
fstpt
ss
sub
ficomps
aad
movsl
pop
pop
clc
cli
pop
sub
inc
mov
sahf
les
fiadds
adc
in
cmpsl
mov
xor
stos
inc
nop
fsubp
jle
push
adc
rcrb
repz
rorl
push
clc
insl
and
psubusb
mov
jmp
adc
jmp
jg
cwtl
adc
sub
cwtl
inc
pop
sbb
pop
xchg
mov
inc
or
add
sbb
int3
mov
rol
js
loope
jo
lds
mov
addr16
lods
and
pop
jg
push
cli
xor
insl
xchg
and
pop
lahf
cmp
adc
cli
jno
xchg
mov
aaa
stos
adc
mov
or
rclb
lds
loope
pop
dec
in
daa
stos
ffree
mov
rolb
sub
scas
jns
dec
sub
cmp
ret
pusha
push
xchg
cmp
push
std
sbb
mov
cmp
shl
jl
pop
jnp
int3
adc
push
subl
sub
rcr
repz
push
leave
sub
rcll
or
lods
outsl
pop
xor
mov
mov
sub
and
test
cmpsb
cltd
stos
xor
cmc
test
push
add
test
adc
cmp
mov
jecxz
jae
or
dec
outsl
xor
leave
lahf
mov
jge
jae
pop
imulb
in
dec
repnz
mov
sbb
mov
adc
xor
nop
jno
mov
sbb
out
add
or
push
jo
pushf
push
insl
iret
hlt
xchg
cwtl
xchg
adc
call
inc
push
dec
and
xchg
and
dec
mov
repnz
xor
pop
add
xchg
sub
inc
push
stos
cmc
cmp
sbb
mov
mov
imul
xchg
push
cltd
and
add
out
mov
hlt
nop
mov
ret
xchg
fsubrs
out
sub
pop
jns
xchg
jae
pop
popa
xor
or
call
in
xchg
cmp
add
shlb
and
rorb
or
push
imul
fsts
inc
lret
nop
in
push
xchg
fsubrp
pop
repnz
sbb
lret
call
test
fdivl
icebp
addr16
inc
popa
mov
ret
push
in
mov
sti
push
cld
or
inc
repz
imul
cs
jge
sti
stc
pop
mov
test
push
jg
xor
inc
cld
push
inc
mov
lret
call
add
mov
jo
es
ss
cli
jecxz
dec
pop
mov
sbb
dec
rcrb
dec
inc
cmp
mov
loopne
mov
and
js
xchg
xor
repz
mov
js
hlt
mov
jae
icebp
add
pop
out
sbb
out
push
outsl
adc
ss
mov
outsl
xchg
loop
add
and
shll
movsb
jl
fldenv
pop
lcall
sbb
aad
push
adc
xor
or
lock
divl
xchg
sub
std
push
cmp
sub
jle
daa
jb
sub
mov
sbb
ja
in
mov
xor
sub
out
xlat
imul
add
sar
fwait
push
adc
xchg
sub
adc
mov
mov
pop
adc
cmp
jmp
ss
inc
adc
xlat
dec
add
arpl
dec
inc
lds
mov
jecxz
lea
mov
jp
xchg
inc
test
clc
imul
pop
mov
push
add
and
add
mov
sub
push
test
inc
xor
shll
fwait
adcb
repz
mov
mov
movsl
shll
int3
jle
mov
ret
jb
inc
ficoms
push
pop
frstor
sub
jb
mov
mov
dec
rol
sub
push
mov
outsb
std
and
leave
push
pop
sbb
enter
data16
shl
fidivrs
icebp
inc
and
add
cli
fists
stos
lret
call
add
hlt
in
push
scas
adc
inc
pushf
dec
xchg
sahf
cmp
or
iret
push
adc
cmpsl
fcmovnbe
aad
mov
loop
jecxz
push
jle
jp
cwtl
sbbl
adc
xchg
cmp
mov
dec
pop
je
ucomiss
push
stos
inc
mov
and
add
mov
push
in
fldenv
repz
icebp
mov
add
xchg
pop
int3
movsl
ljmp
pop
xlat
jbe
cs
mov
movsb
cmpsl
pop
pushf
nop
fdivrp
sahf
push
aas
rclb
fsubrl
ficompl
sub
fsub
add
fiadds
hlt
fldt
orb
rclb
into
and
in
es
pop
push
inc
out
cld
sub
or
in
sahf
jne
cli
stc
xchg
adc
push
xchg
aaa
rorb
jge
xor
lahf
sub
push
xor
mov
xor
mov
mov
add
imul
xlat
dec
rolb
sbb
enter
data16
xchg
push
pop
ret
pop
fidivs
sub
mov
pop
imul
ss
dec
push
add
mov
lahf
mov
pusha
and
xor
cmpl
xor
ret
xor
and
lret
or
jo
nop
jne
cmp
stos
movsl
sbb
pop
cmp
jmp
push
mov
rcrb
jnp
repnz
cltd
push
mov
push
jae
gs
jo
pop
push
push
dec
push
scas
add
aas
das
sub
movsb
push
pshufw
icebp
xchg
cmpsb
addr16
mov
nop
mov
mov
adc
mov
sub
inc
aas
adc
cmp
add
pushf
aad
dec
das
pop
aad
fnstsw
fists
in
scas
jne
or
lret
jno
or
pop
and
out
xor
je
lds
lea
loop
jo,pn
jmp
mov
sbb
clc
sbb
and
lret
mov
arpl
dec
fimuls
les
in
adc
xchg
cltd
mov
mov
sbb
dec
sbb
cmpb
cs
js
lret
and
in
add
iret
cmp
mov
jns
dec
push
hlt
xchg
gs
and
dec
push
rep
ljmp
xchg
dec
adc
lahf
addr16
scas
dec
inc
inc
mov
xor
mov
dec
xor
hlt
fcompl
pop
sbbl
dec
mov
mov
aad
cmpsl
dec
outsb
cmc
push
ror
jecxz
mov
shr
mov
fwait
sub
add
sub
fldcw
jns
dec
push
mov
imul
out
push
inc
shlb
inc
jnp
outsl
dec
dec
incl
aad
mov
sub
mov
lret
jg
xchg
bound
fisubrl
fildl
into
repz
pop
mov
xor
xchg
lds
movsb
into
les
arpl
movsb
add
mov
in
xor
or
cwtl
cmc
sbbl
les
test
mov
mov
cwtl
dec
fisubs
xchg
stos
xchg
incb
sbb
mov
adc
ret
jecxz
in
lods
push
pop
pop
out
mov
pop
sub
xor
push
jo
insl
xchg
pop
into
cmp
pop
adc
adc
add
dec
jecxz
push
sahf
jne
push
ret
and
sub
jle
test
mov
bound
push
adc
cmp
xlat
int3
je
adc
xchg
fs
in
dec
in
ret
xchg
gs
cmp
adc
pop
popa
jg
shr
in
iret
adc
imul
icebp
jmp
addr16
jl
push
aas
faddl
xchg
xor
ljmp
pushf
movsl
or
aam
sar
inc
xor
push
xchg
sti
push
sarl
repnz
xor
sbb
scas
sub
pushl
mov
repnz
insl
push
xchg
sbb
pop
test
mov
jb
and
add
mov
pop
repz
mov
lods
add
das
mov
sbb
ficompl
ja
xchg
mov
mov
addr16
fsubl
data16
lret
cs
dec
jle
and
fdivl
sub
xchg
sub
mov
in
gs
push
in
push
mov
jecxz
and
popf
loop
or
mov
fdivl
add
dec
fldenv
or
mov
mov
mov
pop
xchg
jo
xor
mov
incb
rclb
or
cmp
lods
js
inc
jnp
cmpsb
dec
shll
out
jae
jge
sbb
test
mov
pusha
cli
mov
jbe
stos
xor
shrb
mov
into
inc
imul
cmp
fwait
popa
lds
in
xchg
in
mov
adc
add
clc
in
xlat
mull
std
xor
mov
or
and
mov
or
fldenv
imul
xor
or
out
pop
pop
cmc
sbb
mov
leave
adc
add
pop
lcall
ljmp
movsb
xor
push
sub
gs
out
mov
int
scas
pop
sub
scas
xchg
fcoms
jl
inc
pop
adc
ficomps
adc
lods
mov
xor
pop
repnz
add
xchg
in
mov
addr16
rol
lea
aaa
mov
pop
in
mov
lret
ds
push
adc
in
enter
loopne
cmp
loop
out
insb
pop
lcall
jmp
es
dec
jbe
rclb
pop
mov
push
mov
fnstsw
out
cld
jno
pop
pop
into
mov
sbb
lock
inc
push
out
sbb
movsb
bound
mov
push
sub
or
rcrb
adc
mov
pop
lods
pop
cmpsb
dec
and
lret
scas
ljmp
inc
nop
cmc
sub
mov
xchg
lcall
fstpl
fstpl
jnp
out
inc
push
lcall
jns
call
dec
push
sbb
or
mov
enter
jg
xchg
loop
data16
mov
mov
or
pop
pop
xchg
mov
xorb
pop
cmp
dec
cli
data16
mov
mov
movsb
mov
test
das
add
divl
and
mov
popa
xchg
xor
and
int3
loop
xchg
lret
dec
test
bound
dec
add
mov
jge
cwtl
mov
xor
movsb
inc
xchg
pop
in
jae
loop
xchg
xchg
sahf
or
mov
sbb
dec
and
sub
lret
out
pop
rcll
fprem
mov
std
icebp
inc
movsl
icebp
in
xor
mov
jae
xchg
xor
ljmp
sub
lock
sbb
pop
xor
sti
mov
movsl
pusha
or
cs
lock
stos
out
aad
int3
pop
pop
pop
les
sti
mov
aas
test
and
stc
add
xchg
xor
push
ffreep
fisubrl
movnti
jno
dec
rorb
mov
pop
push
aaa
outsl
cmp
push
jns
dec
fs
inc
mov
cwtl
cmp
pusha
out
add
xor
mov
std
push
mov
test
mov
or
cmp
fisubrl
jl
shl
inc
fstpt
subl
mov
mov
mov
leave
call
addr16
sub
xor
jge
jmp
ret
push
pop
cmpsb
or
sbb
dec
out
cmp
dec
nop
fiadds
int3
out
adc
lock
ret
mov
jne
pop
jle
push
sbb
push
das
adc
subl
push
stc
dec
in
repnz
or
sbb
mov
xlat
pop
xor
sub
xchg
mov
mov
outsb
enter
idiv
mov
pop
hlt
inc
pop
loop
in
or
pop
daa
call
adcl
pop
cmp
jle
mov
addr16
jp
fcoml
fldlg2
addr16
add
mov
and
test
cmp
pop
cld
sbbb
aam
sti
push
add
call
add
leave
jnp
inc
mov
std
enter
jl
or
dec
xchg
mov
fiadds
lods
out
ret
shlb
dec
out
outsb
push
push
inc
lret
daa
fidivs
cmp
les
cmpsl
es
mov
inc
cltd
out
and
dec
outsl
sbb
mov
lret
dec
cli
outsb
mov
jmp
sub
pop
aaa
inc
stos
testb
je
sbb
inc
mov
hlt
sub
shl
push
or
imul
cmp
mov
xor
add
adc
and
subb
xchg
mov
dec
out
add
addl
cmp
rcll
fs
sub
movsl
mov
fcmovnb
lea
and
int
enter
dec
mov
inc
ss
pop
and
popf
icebp
mov
es
sbb
fwait
mov
mov
mull
out
pop
divl
jl
push
fcoms
push
in
jge
push
popf
jno
xorl
ss
sahf
mov
aad
adc
cmpsb
or
add
xor
push
in
fsubrl
in
loope
add
loopne
fidivrs
adc
addr16
adc
pop
jl
jmp
out
sub
sbb
shl
push
call
add
das
mov
pop
or
pop
sbb
xchg
pop
pop
and
pop
sarb
mov
bound
insb
xchg
icebp
inc
cli
mov
dec
cmpsl
xor
stc
xchg
je
and
sbb
pop
iret
sub
sub
adc
push
out
das
aaa
test
bound
mov
ret
pop
loope
xchg
test
mov
enter
sub
jae
loopne
mov
mov
sub
cli
add
xor
jmp
insb
hlt
fsubs
jo
in
movsb
pop
jp
sub
aad
jne
adc
add
pusha
lahf
pop
ljmp
mov
addr16
aas
in
xchg
je
aam
xor
dec
daa
dec
rcll
insb
cwtl
movsl
es
pop
rclb
push
add
sbb
xchg
data16
pop
loop
es
ret
fisubrl
test
lods
xor
out
mov
adc
push
xor
sub
out
nop
add
cld
bnd
add
in
ds
pushf
push
cli
jmp
mov
std
add
aas
in
push
xchg
mov
cmovl
xchg
imul
push
jno
sbb
decb
mov
popf
jb
push
icebp
dec
mov
bnd
mov
or
jae
loope
clc
jge
test
mov
sub
movsl
movsb
lret
pop
jg
fistps
cli
inc
in
lods
and
mov
jns
testb
dec
enter
sub
jmp
xlat
movsl
scas
leave
cli
lcall
add
mov
ljmp
add
mov
call
fadd
pop
adc
push
int
pop
rolb
xchg
or
fwait
pop
ljmp
std
add
idivb
loop
aad
mov
movsl
or
icebp
jp
lock
xchg
lret
or
or
cmpl
ret
mov
iret
addr16
rcrb
xchg
jle
mov
cld
cs
outsl
inc
pop
rorb
rep
pop
mov
fisttpll
sbb
mov
cwtl
stos
xchg
fldlg2
inc
stos
adc
inc
movsb
scas
movb
pop
mov
xor
mov
inc
cwtl
stos
dec
aas
cld
jne
enter
adc
cmp
fdivrs
push
pop
int
push
iret
enter
fstl
push
aaa
fisttps
and
inc
adc
mov
sub
lods
mov
repnz
fwait
mov
mov
cmp
outsb
pop
rcl
dec
and
mov
jg
xchg
ret
inc
mov
cmp
outsb
das
lods
sub
push
add
imul
testb
or
into
movsb
jecxz
rol
add
push
push
push
sar
rclb
lods
jnp
lock
add
pop
add
sbb
outsl
lds
sbb
in
rolb
icebp
test
jge
hlt
les
xchg
pushf
adc
xor
jmp
and
cs
mov
inc
inc
and
inc
test
pop
inc
cmp
daa
jl
ret
sti
jle
pop
stc
ss
add
in
jno
ljmp
xadd
ja
aas
lock
roll
mov
movsl
push
sub
cwtl
pop
sub
mov
jle
loop
rcll
push
jns
cmp
int3
inc
dec
mov
lock
fdivl
insb
pop
push
bound
dec
hlt
aam
mov
fsubr
or
mov
test
daa
test
into
xor
push
rcrb
test
subb
lret
xchg
push
addb
into
test
jno
cmpsb
je
scas
inc
pop
pop
rolb
fdivs
cwtl
js
xchg
inc
jecxz
or
pop
and
or
mov
push
loopne
loopne
adc
mov
popa
jne
push
push
mov
pop
fldcw
aad
iret
je
sbb
inc
roll
bound
jnp
aam
fdiv
push
pop
mov
fsub
add
mov
pop
inc
xchg
xlat
test
pop
stos
push
push
imul
out
pop
imul
out
and
mov
loop
jb
scas
xor
cltd
or
jecxz
sbb
out
cmp
mov
movb
in
cs
mov
test
mov
sub
or
ret
test
sti
subb
or
out
jge
mov
xor
inc
je
imul
or
mov
and
xor
jnp
xchg
dec
xchg
adc
ds
lods
aam
mov
dec
sbb
push
insb
xchg
scas
or
jo
pop
addb
repz
std
int3
cmp
mov
xor
add
iret
in
shrl
dec
jbe
ret
pop
sbb
and
sbb
pop
dec
pop
lods
movsl
movsl
pusha
addr16
notl
stos
jmp
adcl
pop
dec
or
mov
outsb
pop
xchg
in
and
inc
mov
add
dec
mov
arpl
fildll
push
adc
add
push
sbb
mov
iret
jle
cwtl
xor
scas
jge
jb
daa
inc
xor
mov
outsl
pop
test
adc
cs
das
cmc
cs
ffree
notl
addr16
adc
lcall
mov
rcll
mov
jno
jecxz
repnz
movsl
js
cmp
aaa
enter
popf
mov
repz
into
adc
stos
dec
jne
mov
mov
fisttps
mov
movl
inc
nop
ds
pop
add
mov
mov
add
mov
add
nop
cld
adc
push
daa
icebp
xor
fcmovb
pop
enter
int3
data16
jne
mov
jne
inc
mov
ss
pop
dec
or
addr16
push
inc
jbe
jecxz
mov
popa
arpl
xor
stos
push
int3
add
ror
mov
dec
push
lret
mov
xor
into
stc
roll
jno
adcl
xchg
cmp
testb
pop
hlt
dec
add
gs
pop
and
push
cmp
xor
test
and
sbb
lcall
lcall
fldcw
mov
inc
xor
xor
xchg
push
xchg
insl
mov
ss
dec
loop
add
pusha
push
mov
push
mov
and
fninit
imul
outsb
test
fmull
loopne
dec
pop
data16
push
outsb
cs
jne
inc
or
mov
repz
add
jmp
xchg
popf
push
xchg
cmp
fstps
cmp
xchg
jge
mov
jp
pop
jb
test
cmp
mulb
imul
inc
icebp
out
cmp
adc
pop
repnz
ficomps
xor
cmpsb
cmpl
dec
ljmp
jnp
imul
mov
fstps
pop
jle
xchg
and
push
cli
xchg
sbb
and
or
mov
ja
cs
ret
inc
cmp
lods
adc
aad
loop
sbb
add
xchg
xchg
adc
data16
pop
gs
popa
jmp
cmp
fistpl
cli
or
or
adc
scas
push
je
mov
mov
iret
push
cli
popf
in
push
mov
addr16
mov
jge
inc
cmpsl
adc
cmp
mov
lret
fsubrs
imulb
ficomps
or
add
pop
mov
js
jno
cs
arpl
test
or
inc
xor
dec
pop
xlat
nop
inc
aas
cmp
loope
jb
pop
int3
mov
sbb
add
stos
xchg
xchg
shll
cmpsb
xchg
outsb
fwait
loopne
stos
pushf
loop
pop
or
pop
jl
imul
push
and
sub
mov
jmp
or
xchg
dec
das
test
jns
repnz
dec
pop
repz
inc
sti
popa
sub
fisubl
daa
cli
imul
popa
xchg
push
xchg
and
lea
push
out
mov
pushf
push
repz
inc
ss
cwtl
inc
and
dec
push
jnp
loopne
sarb
movsl
dec
mov
test
stc
movsb
loope
les
lods
xchg
cs
jle
and
dec
mov
lods
roll
mov
into
fistpl
sub
fs
lret
adc
fistl
insb
fdivrp
std
imul
daa
sub
sahf
mov
mov
popa
sub
cld
test
sbb
xchg
fldenv
mov
repnz
or
mov
adc
addb
lea
cmp
imul
rolb
in
popf
dec
dec
push
pusha
sub
cmpsl
pop
fmull
loop
xchg
movsb
in
test
and
mov
inc
ja
cli
mov
jecxz
jecxz
jmp
push
scas
mov
out
xlat
mov
icebp
sbb
lods
push
adc
pop
jge
sbb
sub
cmp
ljmp
or
call
sub
mov
and
xchg
xor
vpminub
icebp
sbb
std
inc
jbe
and
out
int
ss
xor
pop
mov
xchg
pop
je
lods
xlat
shlb
aaa
inc
cmp
adc
cmpsb
ljmp
xchg
out
push
roll
cmp
test
xchg
xchg
push
iret
lret
ret
test
inc
ss
imul
not
repnz
jle
and
std
faddl
aad
mov
sub
xorl
xor
mov
sub
rorb
jge
out
ret
in
cwtl
shlb
cld
jg
xchg
adc
inc
in
jb
loopne
into
jnp
testl
pusha
aam
and
add
iret
scas
xchg
icebp
xchg
call
push
sub
xchg
xchg
and
cmp
sbb
movsl
pushf
fdivrl
xor
jo
xor
xor
in
nop
fnstsw
in
add
or
inc
mov
add
pop
add
mov
in
mov
in
pushf
cmp
push
cmpsl
pushf
orl
pusha
xchg
push
shll
mull
into
into
gs
add
pop
adc
iret
jns
aam
lcall
ja
pop
fsubp
insl
in
pop
test
call
sahf
lret
andb
gs
push
pop
in
adc
adc
aaa
xchg
xchg
xchg
lret
mov
mov
lods
mov
jo
sbb
jbe
outsl
cmp
daa
xlat
insb
or
mov
add
inc
out
addr16
and
jmp
sub
addr16
sbb
xorb
xchg
cmpsb
loope
xor
sar
into
jno
sti
daa
pop
rorb
imul
stos
mov
es
pop
out
jmp
mov
sti
inc
adc
push
and
insl
or
jae
cs
add
lahf
xchg
jno
std
loop
iret
mov
xor
inc
daa
sbb
cmp
lea
scas
int
mov
enter
pop
push
add
out
loopne
push
dec
jo
pop
xchg
pop
pop
xor
repnz
xor
cmpsb
in
adc
out
dec
sti
outsl
jbe
push
divl
leave
jae
mov
mov
cmp
mov
pop
lds
xor
and
in
mov
and
movsl
pop
int
shrb
das
in
inc
cmpb
jo
in
lea
mov
leave
mov
lret
lds
addl
scas
pop
add
test
mov
sub
jns
xlat
dec
push
cmp
add
js
mov
sbb
insb
and
jbe
mov
mov
mov
aas
cltd
sbbl
or
dec
cmpb
pop
xchg
movsb
aas
jne
xchg
out
shrl
test
stos
test
rorl
loopne
je
cmp
clts
int
cmp
adc
and
mov
loop
pop
shlb
pop
sarl
ret
test
dec
or
mov
jle
add
mov
rcl
fwait
pop
test
rcll
mov
ret
sbb
outsb
insb
pop
push
icebp
pusha
loopne
popa
dec
aaa
rorb
xor
repnz
dec
pop
in
sbb
mov
fs
daa
iret
scas
sbb
aad
xor
aam
pushf
push
xor
mov
mov
stos
mov
and
pop
test
xor
int3
lods
push
push
call
adc
daa
cmc
push
shlb
xlat
jmp
movsb
pushf
push
jae
int
or
push
xchg
int
bound
orb
ror
sbb
push
mov
jno
dec
in
dec
pushf
jmp
lahf
xor
add
jnp
imul
les
jecxz
mov
jg
dec
lock
shr
aas
out
xor
pusha
sti
and
inc
sbb
imul
mov
mov
xchg
rcrl
rorl
xor
ret
pop
mov
xchg
jae
sbb
inc
loope
jl
decl
xor
dec
scas
inc
cmp
xor
enter
xor
cmp
subb
aad
rcrl
cld
out
out
andl
fdivrs
jge
push
inc
sub
call
pop
mov
inc
sub
mov
pusha
sub
test
adc
mov
push
insb
push
pushf
xor
xchg
rclb
fcomi
hlt
imul
xchg
add
imul
mov
cltd
push
adcl
mov
xchg
push
stc
in
rcrb
shll
jle
mov
or
mov
push
xor
mov
fs
adc
xor
push
xchg
add
lods
iret
popa
cmp
aad
push
mov
xlat
adc
xchg
hlt
xchg
int
inc
scas
adc
aaa
shl
mov
mov
je
mov
push
xor
insb
fildll
dec
lock
sbb
adc
leave
in
cld
fiadds
in
mov
pushf
in
adc
mov
pop
pop
and
xchg
jecxz
xchg
mov
inc
xor
outsl
pop
push
pop
outsl
ds
inc
jge
fprem1
icebp
pop
mov
fmulp
mov
js
aad
push
add
stc
xor
sub
cld
adc
jns
cld
mov
imul
sbb
lahf
cmp
cmp
leave
in
mov
push
pop
adc
bound
mov
ss
and
ja
jns
cmp
mov
clc
jmp
in
and
cmp
xor
mov
mov
sub
mov
pop
lods
stos
mov
pop
mov
xorl
mov
mov
ret
xchg
dec
cmc
add
sub
mov
les
sub
testb
sbb
jmp
mov
push
out
sub
xchg
rcl
loopne
in
je
imul
das
xor
or
icebp
repz
xchg
sbb
ds
int
mov
and
stos
mov
dec
test
and
ljmp
push
out
push
pop
mov
dec
in
sbb
popl
push
mov
sbb
js
aam
mov
pop
sub
and
mov
fsub
cmp
sub
pop
jno
jecxz
pushf
ret
pop
adc
push
pushf
sub
sbb
xchg
in
cmp
push
sarl
cmc
push
dec
jl
jne
addr16
cvtps2pi
ljmp
les
sub
fsubrl
pop
add
fucom
dec
and
push
cmp
loop
push
sub
test
test
ss
jp
ret
xchg
aaa
test
repnz
mov
jbe
sub
mov
add
cmp
or
out
divl
adc
ljmp
cmp
ret
bound
jl
dec
sbb
sub
mov
addr16
mov
xor
jecxz
testl
test
into
mov
roll
push
pop
jb
jo
add
movsl
nop
dec
dec
call
sbb
xchg
faddl
shlb
addl
stos
sub
rclb
out
xor
mov
stos
jbe
sub
mov
mov
cli
inc
sahf
movb
mov
mov
out
xorb
in
pop
xor
xor
jae
pop
adc
and
push
mov
xchg
stc
scas
dec
lret
pop
or
mov
add
mov
mov
test
lret
mov
leave
inc
dec
ja
sub
mov
popa
test
mul
fst
cmp
push
pushf
ds
hlt
scas
xor
frstor
inc
imul
mov
jnp
and
add
dec
or
int3
lret
push
lods
push
shll
out
out
orl
xchg
xor
jnp
push
sub
mov
and
mov
mov
shr
adcl
add
cmp
adc
adc
aad
cmp
jo
ret
popa
cmp
jle
cli
pusha
lret
lret
mov
adcl
push
adc
sub
rorl
ret
fcmovnu
mov
cmp
pop
test
push
test
or
fsubs
mov
inc
sti
jg
sub
push
int3
dec
sarb
push
ds
int3
cmpsb
ss
pushf
imul
mov
lea
cmp
sub
mov
outsb
shrl
jp
pop
outsb
ret
pop
or
inc
les
mov
cmp
push
fsubrl
adc
cmp
stos
out
into
cld
addr16
cmp
or
out
pop
xchg
lea
negl
out
sub
xchg
fistpl
cld
push
pushf
add
pop
lea
push
into
pop
xchg
mov
or
mov
mov
pop
push
push
pushf
push
stc
push
ret
arpl
fmull
ficomps
stos
outsb
push
pop
cs
movsl
jno
inc
mov
nop
xor
jg
mov
add
hlt
inc
dec
aad
jmp
lock
data16
pop
jb
fwait
mov
call
enter
mov
cmpsl
and
movsb
inc
orb
mov
and
xchg
xchg
mov
imul
xchg
faddl
scas
xchg
lret
dec
dec
push
lret
mov
mov
xchg
mov
adcl
pop
mov
in
inc
ret
jl
mov
out
out
xchg
cld
inc
push
jns
inc
mov
and
sbb
call
push
push
je
mov
and
fildll
rcll
icebp
mov
insl
pop
mov
insl
lcall
pushf
cmp
or
in
fs
mov
dec
pop
insb
mov
mov
jle
push
mov
add
arpl
lea
pusha
out
xchg
aaa
les
and
pop
addb
sbb
cmp
mov
fimull
je
push
dec
sub
pop
inc
sbb
icebp
lret
outsb
push
xlat
sbb
pop
xchg
add
shrb
in
jmp
inc
pop
js
and
push
and
xor
mov
enter
stos
jbe
add
dec
or
push
cmpsl
cmp
call
pop
xor
out
dec
push
adc
frndint
shrl
inc
mov
fistpl
push
mov
notb
stos
lret
or
scas
mov
and
inc
in
outsl
js
iret
scas
jp
movsl
stos
int3
shll
ret
fs
lea
add
cmp
adc
mov
fadds
es
aas
sbb
out
mov
adc
add
add
and
sub
dec
loop
sub
or
rcrb
dec
cmp
and
mov
jl
test
add
xor
test
fidivrl
test
jne
in
jp
sub
dec
jl
sti
sbb
push
mov
js
out
or
xchg
shrl
iret
mov
adc
add
ja
les
loopne
mov
pop
mov
xchg
pop
cmp
sub
out
jmp
inc
cmp
enter
sbb
call
and
add
adc
jge
pop
stos
push
stos
sub
loopne
mov
repnz
inc
sbb
mov
pop
cmpl
cmp
push
lret
mov
cli
int
xchg
mov
push
and
rolb
xchg
adc
add
lds
inc
xchg
pop
cmp
int3
mov
std
inc
sub
in
popl
pop
aas
aam
mov
cltd
jge
fcmovu
cwtl
imul
sbbb
mov
testl
mov
cwtl
cs
mov
dec
inc
and
rcll
pop
mov
xor
xor
pop
lcall
jns
lret
jne
xchg
xlat
pop
adc
jnp
mov
mov
push
sub
cmp
cwtl
jbe
in
jbe
or
lret
fcompl
pushf
frstor
insl
std
pop
popf
push
sbb
loop
in
pop
clc
cmp
mov
stc
pop
mov
inc
jnp
push
into
xor
pop
lock
cmpsb
sub
mov
fistps
xchg
xor
pop
cmp
cmp
arpl
or
sbb
dec
push
or
ja
scas
adc
xchg
sarb
fnstsw
adc
test
xchg
push
addr16
pushf
lock
adc
ss
pushf
jge
hlt
stc
movsl
jb
mov
pop
jge
je
xchg
lods
mov
ret
push
mov
jmp
lcall
ret
sbb
ja
sbb
dec
pop
imul
stc
sbb
jge
dec
and
xchg
mov
lea
movsl
mov
fisubrl
lods
mov
jae
cmp
fnstcw
xchg
loope
sub
out
jmp
cmp
sub
dec
outsl
mov
xor
mov
pop
lret
sub
ljmp
scas
mov
mov
incb
shrl
mull
add
mov
imul
xchg
inc
in
xorl
aas
arpl
in
xchg
movsl
push
std
push
mov
outsb
cmc
dec
mov
add
push
xor
jo
sub
ret
fistpll
jbe
xchg
inc
dec
jmp
inc
mov
int
mov
push
insl
mov
popf
and
mov
into
test
mov
pop
xor
cmpsb
and
shrb
or
xor
add
ss
xchg
adc
pop
iret
sub
lea
cli
int3
nop
push
addr16
inc
daa
pop
push
mov
cld
sub
pop
int
hlt
dec
and
mov
inc
mov
xchg
pop
cmp
xchg
rcll
xchg
or
imul
and
lret
ret
sub
movsb
pushf
mov
movsb
std
fwait
bound
push
sub
mov
in
addr16
gs
jl
pop
cltd
add
ret
pop
mov
mov
iret
push
out
cmp
jp
mov
cmpsb
aas
icebp
mov
arpl
mov
gs
xor
jno
js
fimull
nop
xor
cmc
shl
test
lret
adc
mov
jmp
fcmovu
inc
jle
out
and
xor
jnp
shrl
add
sbb
cltd
rclb
pop
mov
xchg
sar
mov
test
mov
mov
xchg
xchg
es
rolb
adcl
scas
imul
dec
hlt
test
xor
idivl
push
cmc
sbb
adc
xchg
mov
inc
inc
test
lock
lods
ret
ret
mov
adc
rep
mov
dec
nop
push
imul
mov
add
stos
clc
in
test
inc
adcb
dec
cmp
cltd
sbb
mov
jp
mov
mov
frstor
fnstenv
and
mov
inc
jmp
jl
dec
sbb
pushf
mov
icebp
imul
out
mov
clc
mov
or
pop
lock
adc
inc
lds
sub
xlat
or
adc
enter
cmp
sub
mov
jge
cmp
xchg
xor
xor
shl
outsl
mov
fiadds
rep
cmpb
cmp
jb
pop
lcall
dec
or
pop
stos
dec
inc
xchg
sti
imul
sub
pop
cmpsl
xor
lock
xor
xchg
inc
orl
stos
dec
out
or
insl
std
sbb
pushf
lahf
add
sub
adc
xchg
call
cmp
mov
sub
push
xor
js
mov
xor
or
pop
outsl
pop
mov
cli
scas
jg
xor
fs
mov
push
cmp
ret
bound
dec
dec
aam
dec
lahf
dec
cmpsb
test
outsb
cmc
clc
inc
fisttpll
push
push
adc
lret
or
mull
and
rcll
jge
xor
hlt
adc
test
mov
adc
sti
xor
aad
mov
jl
xchg
pop
subl
in
mov
mov
mov
rorb
lret
shr
out
testl
push
adc
adc
pop
push
push
sbb
inc
push
pusha
sub
je
int
adc
push
sar
aad
sbb
pop
pop
insl
into
imul
add
push
arpl
push
repz
outsl
inc
or
sub
mov
rcrl
xchg
inc
sbb
icebp
shl
idiv
lret
sahf
mov
adc
clc
inc
mov
stos
pop
sub
sub
mov
out
sbbl
adc
imul
add
xchg
xchg
and
fwait
in
jmp
fwait
or
and
aam
cld
es
mov
mov
dec
push
xchg
xchg
data16
aam
xchg
pop
push
daa
mov
and
push
add
fdiv
les
sub
push
ds
aaa
imul
mov
stos
pop
hlt
or
pop
in
pop
jo
out
pop
or
aas
in
fs
cmp
cmp
ficomps
jno
cmp
cmp
mov
movb
mov
adc
sub
stos
xchg
adc
xor
mov
repnz
mov
mov
push
or
psrlq
sub
cwtl
outsl
jae
jp
jae
mov
into
aas
repnz
push
mov
pop
ret
leave
pop
xchg
sub
movsl
ljmp
dec
xlat
jo
mov
and
pop
mov
insl
bound
pop
xor
aaa
stc
cmp
std
or
sub
out
adc
jb
dec
ss
or
adc
add
fnstcw
pusha
inc
sbb
xchg
xchg
pushf
mov
in
jg
jnp
xor
into
pop
stos
shrl
int3
add
sub
inc
aam
adc
mov
call
xor
lods
xchg
stc
inc
fcomps
xchg
je
repnz
inc
sbbb
mov
movsb
add
sub
pop
adc
push
sub
mov
sbb
xchg
sub
and
xchg
push
cmp
sub
fwait
jno
or
mov
lea
add
ret
adc
jg
xor
pop
cmc
addr16
iret
and
cwtl
lods
imul
insb
movsb
jmp
fisubrs
fwait
push
lods
cwtl
out
cmc
mov
pop
cmc
cmp
xor
rclb
cmp
js
sub
bound
aaa
dec
mov
xor
out
lods
sbb
mov
movsb
in
xor
gs
or
jp
subl
jno
mov
gs
ret
xor
lcall
push
js
nop
inc
mov
pop
inc
mov
punpcklwd
mov
out
outsl
inc
rorb
push
loop
fstpt
pop
aam
xchg
xchg
jmp
dec
add
and
jg
cmpb
jne
lret
into
lea
mov
cmp
mov
insb
sarb
xchg
int
dec
sbb
lcall
pop
jp
aam
inc
xor
ljmp
pop
cmc
add
mov
jg
mov
ret
push
mov
push
shl
int3
xlat
jmp
inc
pop
rorl
ret
or
cwtl
sti
jns
sub
add
cs
pop
pop
push
mov
ret
call
sbb
add
scas
repnz
test
pop
sbb
iret
outsb
cmc
adc
cmc
in
xchg
test
dec
inc
jecxz
in
repz
pop
push
mov
clc
add
ss
jmp
push
in
int
jp
push
mov
xchg
je
lcall
rcl
mov
outsb
sbb
int
mov
add
jo
xor
sbb
xlat
test
lret
shll
jge
pop
push
test
test
add
xor
jne
pop
sub
sub
mov
pop
int
sub
loop
push
mov
in
jg
adc
cmp
into
push
jge
adcb
xchg
cli
cmp
pop
rolb
jmp
lcall
xor
pop
or
lea
repz
add
push
push
pop
test
pop
push
rcll
pop
xor
cwtl
mov
stos
scas
ret
jg
adc
push
xor
stos
sub
push
add
cwtl
add
shll
daa
jae
push
push
int
clc
stos
bound
xchg
and
xchg
mov
outsb
and
orb
push
and
psubq
sarb
test
pop
daa
in
out
icebp
mov
filds
push
ret
sub
and
or
adc
xor
add
ja
add
mov
xchg
mov
arpl
cmp
scas
or
push
aam
cmp
jbe
test
add
shr
jl
mov
lahf
push
mov
test
dec
jmp
add
lock
lock
inc
xchg
lahf
das
int
pushf
test
mov
lahf
push
adc
popa
sahf
jp
xchg
out
cmc
lods
out
pop
std
push
inc
xor
adc
mov
pop
sub
dec
in
push
jge
aad
enter
fiaddl
sub
push
adc
iret
mov
mov
imul
pusha
nop
insl
je
imul
push
sbbl
out
push
flds
sub
or
pop
jp
xchg
adc
xchg
cmp
cltd
adc
adc
out
or
mov
add
loope
add
lcall
pop
inc
fs
jle
lock
dec
idivl
jb
push
adc
fnstenv
fdivs
xchg
jl
mov
iret
inc
popf
mov
pusha
cltd
xchg
repz
cmp
and
or
ret
cmp
data16
and
mov
bswap
and
jge
pop
push
rcll
aam
aam
sub
add
add
xlat
cmp
dec
adc
inc
fiadds
addb
mov
scas
pusha
xchg
lahf
adc
out
inc
or
jmp
mov
xchg
and
push
push
sub
xor
loopne
mov
clc
addr16
shr
inc
jb
lea
stos
rcl
or
or
subl
aad
ret
or
cld
lret
xchg
icebp
dec
movl
mov
mov
pop
mov
push
enter
pop
jns
lahf
test
sub
and
orl
sbb
pop
mov
jle
jne
in
or
mov
xchg
or
aam
nop
fwait
add
add
cmp
fimull
iret
incb
push
inc
cmp
mov
js
stos
xor
sub
aam
iret
js
jo
scas
in
fisubs
jl
mov
mov
mov
and
ja
shrl
mov
push
shrb
mov
sbb
sub
jmp
mov
sbb
inc
cmpsb
jbe
loope
add
inc
lock
fmul
jmp
mov
ljmp
incl
mov
cmp
push
lahf
ret
push
or
je
or
jecxz
sbb
add
xchg
popa
jmp
std
outsb
cmp
pop
movl
stc
dec
dec
add
cmp
leave
jo
or
in
ds
movb
and
xchg
pop
push
movsl
and
pop
mov
imul
mov
sub
sub
inc
sbb
xor
cwtl
out
rcrb
mov
dec
sub
xor
jno
jg
push
pushf
xorb
cmpsl
nop
cmp
std
mov
push
ja
imul
pop
mov
cmp
fbld
adc
imul
repz
scas
push
filds
fwait
movb
cmp
add
stos
push
pusha
cmpsb
inc
pop
inc
stos
cli
adc
mov
movsb
sbb
inc
pop
pop
cwtl
test
pop
mov
in
sbb
inc
andb
lock
adc
dec
or
dec
jp
or
ja
mov
or
pop
pop
adc
imul
add
dec
dec
std
in
mov
xchg
mov
xor
test
sbb
jb
jp
mov
pop
sbb
pop
pushf
es
xor
jle
or
ss
or
rorb
addr16
pop
addl
sbb
lds
mov
push
dec
outsl
add
cli
sub
popa
jne
hlt
int
mov
sbb
fs
leave
cmpsl
mov
xlat
mov
xchg
lret
jo
and
add
pushf
add
mov
sub
push
in
xor
lcall
jns
mov
push
in
and
sub
pop
jae
test
cmp
add
repnz
mov
repz
dec
sahf
mov
mov
fdivr
aaa
dec
insb
mov
add
roll
andb
push
test
adc
cld
lods
or
sbb
xchg
mov
test
fdivl
cmp
cmp
mov
inc
cli
fs
out
lea
adc
cmpsb
in
sahf
lock
ja,pn
rcll
adc
fildl
dec
mov
mov
filds
xor
cmp
push
mov
add
xchg
dec
outsb
repz
sbb
repz
fucomp
cli
pop
shll
mov
push
sbb
test
add
mov
dec
cmp
jl
lock
or
mov
xor
in
dec
dec
cltd
lahf
add
xor
outsb
ja
cmp
je
or
lods
jle
sbb
frstor
pop
lcall
mov
mov
fsubr
ja
je
int
inc
xchg
rcrl
lcall
mov
or
daa
pop
xchg
pushf
fstpt
and
fisttpl
je
sahf
nop
push
mov
mov
rcr
mov
and
xor
push
add
cld
and
inc
sahf
jo
push
mov
mov
int
cmp
adc
dec
jne
aas
cwtl
xchg
adc
ljmp
loopne
gs
popa
jbe
mov
aaa
or
repz
testl
xchg
rorb
push
addr16
ja
out
loope
push
sbb
xchg
out
push
in
fiaddl
dec
mov
lret
add
adc
push
lcall
test
jp
push
adc
outsb
xor
jbe
sub
icebp
sbbl
gs
jne
imul
scas
dec
add
aas
gs
notl
push
adc
and
sub
fistpl
lret
loop
addr16
stos
imulb
pushf
push
in
pop
movsb
mov
out
push
insl
or
xchg
addr16
cwtl
loop
add
sub
daa
ret
inc
repnz
mov
cs
mov
das
mov
out
ja
mov
add
sbb
pushf
fs
lods
imul
scas
and
push
fidivs
sahf
inc
adc
imul
sub
xor
daa
mov
cmp
pop
jbe
mov
xchg
xchg
cmp
xor
sbb
sahf
in
lcall
nop
fdivr
loopne
pop
mov
pop
push
add
nop
xchg
or
inc
incb
mov
xchg
mov
nop
data16
ja
or
pop
inc
test
cmp
fnstenv
cmp
fimull
pop
insb
and
test
cmpsb
adc
loop
mov
jmp
test
out
aam
aad
dec
cmp
rolb
mov
mov
cmp
jae
pop
adc
push
lock
test
jp
inc
inc
daa
arpl
sub
add
pop
scas
pop
idivl
sub
lods
push
pop
test
aad
int
mov
adc
daa
dec
and
xorl
pushf
ds
lret
fists
pusha
test
mov
push
dec
orl
jo
mov
xor
xor
and
push
adcb
out
adc
jle
pusha
test
int
mov
popf
mov
cmpsb
lcall
cs
or
sahf
add
and
xor
pop
or
dec
xor
xchg
inc
shlb
and
mov
jae
lcall
add
mov
je
rorb
mov
in
sar
scas
or
sar
adc
mov
dec
int
out
out
xchg
add
pop
lods
lods
aam
aam
or
push
inc
inc
cmp
es
add
pop
inc
clc
sbb
mov
popa
jge
out
out
call
or
jae
push
or
push
test
jns
and
jg
and
rol
xchg
sub
fwait
repz
ljmp
sbb
lods
lods
pop
pop
loop
pop
sbb
sub
in
out
out
pop
test
xor
or
in
mov
and
push
imul
or
loope
fisttpll
cmpsb
push
cmpsl
leave
adc
aad
in
cli
je
dec
mov
or
cmpsb
cmc
dec
push
cmp
adc
mov
and
push
push
pusha
xchg
dec
scas
xchg
inc
sbb
jno
xchg
loope
and
arpl
cmpsl
rcl
out
das
std
sbb
lret
sub
pop
xchg
pop
mov
test
mov
sub
outsb
sub
jge
jge
sti
and
daa
rolb
sub
shrb
inc
jb
xchg
ret
or
pop
std
loopne
outsb
sarl
xor
mov
icebp
or
imulb
inc
pop
arpl
xchg
push
or
push
cwtl
pop
test
xchg
test
push
push
je
mov
mul
jno
call
mov
mov
and
adc
add
fs
xchg
movb
mov
lret
sub
mov
in
push
cld
shlb
jbe
cld
inc
sub
lcall
sti
jg
popa
aam
adc
es
dec
mov
in
and
cli
aad
push
dec
sub
pop
ss
push
lds
mov
scas
cltd
mov
xor
pop
ljmp
xor
and
cmc
addr16
push
jl
cmpsl
pusha
xor
cmp
cmpsb
mov
add
xchg
sbb
dec
lahf
aaa
push
pop
jp
push
fildl
outsb
inc
sbb
adc
pop
int
cld
add
push
and
lds
add
iret
sub
inc
stos
xchg
xchg
sub
fisttpll
add
push
ljmp
ret
sub
enter
add
fcoml
inc
fstps
out
mov
out
mov
ss
adc
shrb
mov
loop
popa
sahf
pop
xlat
jne
add
rcrb
jmp
rorb
jle
mov
mov
push
add
jle
inc
int
mov
pop
pop
adc
fisubs
or
pop
shll
sti
in
pop
inc
addr16
pop
aas
sbb
stc
std
stc
xchg
lea
jbe
jb
rcrb
and
xchg
iret
xchg
cltd
shl
add
jno
push
icebp
ret
out
in
daa
pop
lods
test
aad
into
enter
sbb
cmpb
push
cs
rcl
sub
push
into
cmpsb
push
fidivrs
dec
mov
jge
and
jp
inc
sub
push
daa
imull
shrl
fsts
mov
jne
rcll
shrl
fcmovnb
inc
repnz
repnz
mov
es
xor
push
cmp
in
sub
ror
repz
imulb
dec
and
jno
lret
pop
lcall
or
add
push
in
xchg
jl
imul
aas
push
scas
mov
or
out
insb
jmp
pop
dec
test
and
jbe
mov
adc
push
gs
enter
push
sbb
dec
and
cmp
pop
cmp
sub
pop
push
cmp
movsl
in
cmp
pop
insb
andl
arpl
movsb
adc
scas
pop
fisubrl
xor
cmp
mov
test
lret
outsl
cmc
pop
push
lahf
push
dec
fdivrl
sbb
nop
pop
mov
push
call
data16
daa
mov
lret
mov
icebp
cmc
inc
jle
mov
into
fisttpll
es
cmp
enter
cmp
out
mov
mov
dec
push
push
rorl
push
bound
lea
cmp
xorb
cmp
mov
test
pushaw
jae
or
cmp
pop
dec
or
stc
enter
iret
inc
pop
sbb
repz
in
sub
inc
push
mov
enter
adc
lcall
cmc
outsb
and
loopne
push
cmp
xor
jg
repz
scas
rorl
repnz
xlat
rcll
scas
jne
je
repz
imul
sbb
xor
test
mov
daa
stos
testl
or
mov
jno
fsts
jno
push
inc
loop
lahf
mov
dec
cmp
mov
lret
fisubrs
popf
fwait
out
add
mov
daa
test
push
imul
push
mov
push
pop
repz
inc
fdivl
rol
mov
in
jle
sbb
dec
in
fidivrs
cld
push
pop
test
subb
add
inc
outsb
xchg
fnsave
popa
dec
mov
fisubrl
pushf
sbb
outsb
dec
sub
xor
cmp
pusha
movsl
loope
xorl
adc
pop
inc
sarb
mov
pop
cltd
popa
mov
pop
adc
mov
or
mov
xchg
outsb
mov
add
ss
cmpsb
sar
mov
repnz
aad
je
movsb
js
aad
fmull
std
test
fists
cltd
loopne
fcom
insb
lahf
mov
mov
cmp
or
xchg
push
insl
loop
mov
das
xchg
stc
mov
and
jb
mov
mov
mov
in
mov
les
dec
mov
xchg
mov
mov
cltd
jecxz
aas
sahf
jns
fnstsw
sbb
lret
cmc
mov
mov
pop
lret
ss
push
ss
call
in
ficomps
aaa
mov
xchg
inc
push
shr
add
in
mov
pop
std
lret
mov
adc
pop
hlt
dec
pop
aad
jnp
cmpsb
nop
mov
out
fwait
pop
nop
lods
ljmp
insl
jns
insl
jl
cmc
jne
aad
in
dec
cmp
jnp
mov
mov
sahf
mov
shr
and
scas
pop
xchg
out
movsb
xchg
xor
imul
ret
negl
sub
ret
mov
jo
and
ret
mov
popa
xchg
push
push
aam
push
es
test
push
inc
in
push
fnstsw
xchg
repnz
jae
jle
adc
pop
mov
adc
std
lds
mov
xlat
popa
out
aam
sub
test
test
idiv
and
push
cmp
xlat
clc
push
jl
xor
or
les
or
sbb
call
fwait
sti
cmp
shlb
inc
sub
filds
xor
cmp
mov
enter
lods
int3
icebp
fdivs
roll
fst
cltd
stos
xchg
mov
xlat
aad
jnp
test
inc
and
add
jge
andl
jmp
pop
mov
sbb
mov
adc
jae
ja
pushf
cmp
sbb
lds
mov
icebp
outsb
or
sbb
ljmp
cmp
enter
daa
sub
mov
rorb
popf
jl
shlb
test
lods
or
jnp
mov
pushf
inc
mov
sbb
ret
mov
insl
ds
jo
and
int3
pushf
sarl
jle
add
daa
gs
mov
mov
xchg
xor
mov
out
movl
sub
mov
arpl
loop
jns
mov
jno
dec
mov
in
push
inc
mov
gs
cmp
cmp
rorb
cmp
mov
adcb
hlt
xorb
clc
mov
xchg
aad
es
mov
sub
call
cld
mov
fisttpll
adc
jne
mov
adc
out
rol
enter
pop
ss
mov
xor
pop
sbb
mov
jle
mov
insb
sbb
out
push
daa
xchg
bound
cmp
xchg
xchg
xor
movsb
sbb
pop
lahf
in
addr16
push
jnp
fistpll
mov
xor
fistps
and
loop
cli
roll
mov
jno
test
sbb
ret
rorb
add
outsb
ficoml
arpl
mov
test
pop
mov
jl
pop
cmp
jnp
shl
lods
loopne
cli
mov
fwait
imul
test
movl
fidivrl
pop
das
add
jmp
mov
jbe
add
int3
mov
and
dec
push
mov
lret
inc
mov
je
int3
mov
jmp
popa
cli
push
jecxz
cmpl
mov
sbb
sub
sbb
stos
lret
push
push
mov
sbb
push
cmp
inc
hlt
int
pop
inc
pop
loope
lds
mov
jo
push
jo
sbb
cmp
xor
pushf
pop
mov
cmp
es
adc
shll
jnp
push
testb
xlat
push
mov
sbb
jns
add
pop
mov
cmp
dec
inc
lock
push
jmp
cmp
dec
fistpl
mov
lahf
mov
cmp
popf
les
fsts
fcmovnbe
dec
ret
pop
push
pop
jecxz
bound
push
jge
fnstenv
loope
shlb
sbb
mov
mov
lahf
or
jge
add
xchg
jp
mov
mov
es
mov
jg
jg
and
dec
jne
loopne
cwtl
ss
cmc
fisubs
mov
test
jae
mov
adc
mov
cmpsl
ret
dec
adc
inc
imul
push
cli
cli
xchg
add
int
mov
mov
mov
pop
insl
xchg
loopne
aam
dec
mov
pop
mov
mov
dec
dec
xor
sbb
xlat
jle
mov
test
stos
arpl
adc
ret
mov
dec
sbb
mov
cmp
mov
dec
ja
push
and
ja
shlb
pop
loopne
out
sahf
int
lea
cld
pop
dec
out
out
stc
cmp
push
lods
aaa
jge
into
adc
inc
sub
repnz
outsl
push
adc
mov
pop
xor
adcb
cltd
inc
cmp
xchg
mov
lcall
mov
test
mov
push
ret
cmp
mov
pop
mov
std
cmp
cmp
push
outsl
or
js
fsubrp
adc
push
xchg
out
lock
mov
fmul
xchg
mov
sub
inc
sbb
imul
pop
js
cmpsb
ret
adc
push
rolb
mov
pop
xchg
xchg
jp
dec
mov
pop
xchg
popa
jb
aam
cmova
jb
leave
rcll
mov
xchg
jb
jle
shr
adc
out
xor
sbb
das
add
push
xchg
mov
dec
pop
jo
outsb
cli
jmp
inc
popf
pop
or
inc
aad
mov
pop
js
and
in
cmp
movsb
and
xor
leave
imul
divb
repz
mov
dec
stos
les
add
and
fnstsw
xchg
xor
mov
push
leave
pop
mov
popf
mov
sbb
repz
and
and
ret
jae
pop
das
jmp
test
inc
faddl
mov
jae
mov
hlt
push
int3
mov
pop
xlat
jnp
mov
insb
aam
idivb
stos
xchg
inc
add
xlat
push
fistl
aaa
add
push
mov
fdivl
andl
out
pop
scas
dec
xor
cltd
cmpsl
mov
push
cld
sbb
adc
loopne
rclb
daa
push
mov
ljmp
stos
push
dec
push
je
inc
xor
xchg
fstpt
jnp
dec
mov
clc
stos
xlat
cltd
push
nop
icebp
mov
out
repz
mov
ds
loop
mov
iret
xchg
dec
pop
adc
lcall
into
sarb
pop
jmp
xchg
ret
pusha
inc
pop
and
lret
les
fwait
fs
adc
dec
adc
mov
ret
int
adc
in
leave
mov
inc
dec
jo
xchg
push
imul
pop
shrb
or
xchg
repnz
test
scas
push
xchg
sub
imulb
pavgw
ret
test
mov
fisttps
sarl
iret
jno
lock
loopne
out
jne
int3
lret
xchg
loope
cwtl
inc
add
loope
or
ja,pn
in
repnz
lret
dec
cmp
rolb
or
add
loopne
mov
push
outsb
mov
push
mov
leave
xchg
addr16
mov
dec
xor
fs
add
shlb
in
pop
cmp
cltd
fcoml
je
sub
and
icebp
add
jns
out
loop
cltd
mov
mov
lea
idivl
mov
sub
sarl
leave
inc
jne
cmc
insl
mov
xor
and
test
loop
adc
clc
mov
add
sbb
jge
mov
clc
movsl
add
ficoml
ret
cwtl
or
movsl
dec
lods
jle
push
jbe
jecxz
into
repz
dec
pushf
pop
notrack
rolb
push
jno
cmp
sub
mov
out
pop
push
xor
add
mov
mov
inc
or
iret
push
and
gs
cli
test
ffreep
loope
sbbb
ja
xor
push
inc
mov
call
lock
sahf
xor
fst
in
xchg
sbb
roll
push
insb
jg
xchg
test
popa
and
sbb
xchg
jp
cmpsb
mov
add
jge
push
push
imul
jl
addr16
mov
popa
sbb
sub
ret
pop
test
jno
cmp
rclb
aad
cs
mov
sub
or
sub
adc
sub
sbb
bound
xchg
xor
andl
cld
mov
push
jp
push
push
popa
adc
lret
pop
scas
std
rcll
lret
dec
pop
dec
fadds
int3
add
int3
insb
lret
pop
shl
mov
fists
pop
movsb
mov
and
mov
xchg
test
test
mov
sbb
mov
clc
cli
cmp
rcr
cmp
or
bound
push
xchg
mov
mov
cmp
in
ss
jne
stc
fprem
xchg
push
mov
inc
or
or
mov
xchg
fwait
adc
lret
incl
mov
and
push
xor
push
xor
pop
pop
js
adc
mov
push
inc
test
mov
xor
mov
mov
cli
lcall
or
inc
ficoml
sub
imul
ljmp
add
inc
ljmp
scas
sub
xchg
jns
mov
adc
fidivs
repnz
cmp
ficoms
aaa
movsb
gs
jbe
test
hlt
push
cmp
std
stos
jo
inc
adc
push
cmpxchg
fcmovnu
jp
shll
adc
sub
push
in
dec
jns
xchg
repnz
sbb
cs
mov
and
mov
mov
sub
mov
out
repnz
mov
test
pop
push
shlb
jg
icebp
inc
mov
or
sbb
and
mov
pop
stos
cmpsl
mov
pusha
gs
sahf
jl
inc
xor
pop
dec
cmp
inc
inc
loope
or
fbstp
xor
adc
test
cmp
inc
shrl
inc
xchg
lahf
add
roll
in
dec
pop
outsl
sub
notb
stos
ret
mov
ret
push
inc
addr16
cmove
inc
fnstenv
call
sbb
fwait
xchg
mov
popa
inc
scas
ss
test
ljmp
stos
xchg
pop
stc
xor
leave
les
cmp
pop
lret
jg
and
xor
push
out
inc
jne
sahf
mov
and
data16
cmp
xor
pusha
lret
push
or
mov
addl
cmp
or
or
ja
inc
cmp
dec
cmc
aad
cmpsb
cmp
jb
xor
mov
lock
movsb
aam
xchg
js
adc
lret
push
pop
push
outsb
rcll
mov
cmc
gs
aas
mov
push
int
xchg
in
dec
aas
push
in
mov
loope
imul
mov
xchg
mov
jo
ss
je
push
push
mov
dec
ret
int
popf
movsl
and
test
xlat
pusha
lret
ret
mov
inc
jns
sarl
cmc
in
lret
aas
cmpsb
int3
xor
sub
sub
mov
sbb
das
stc
jo
xor
repz
and
inc
outsb
shrb
xor
dec
jle
jg
or
add
fildll
mov
call
jo
in
imul
ret
sub
out
bound
mov
sub
mov
dec
push
out
adc
outsb
mov
adc
lcall
sbb
fsubrs
or
and
xchg
bound
and
push
inc
sbb
je
sub
pusha
pop
xor
add
lods
outsl
dec
js
lods
push
jp
popa
mov
mov
out
stos
cmc
push
mov
xchg
popf
hlt
popf
push
jnp
push
stos
fstps
or
mov
lret
jle
ror
mov
ja
mov
and
ljmp
adc
adc
xor
lds
lahf
rcr
jnp
repz
stos
mov
sub
rcrl
inc
xlat
sub
lcall
cwtl
push
mov
and
cmp
or
lcall
jg
dec
inc
xorb
out
pop
adc
mov
cltd
lods
lods
adc
cli
and
dec
push
das
pop
addr16
out
insl
es
repz
xchg
cmp
lret
xchg
ljmp
mov
cmp
out
rolb
sbb
repnz
inc
outsl
pop
aas
pusha
mov
adc
sub
fninit
cmp
js
or
arpl
inc
loope
popa
scas
xchg
ficoml
fs
ljmp
inc
aas
fcmovb
jb
jecxz
push
leave
call
xchg
inc
leave
rcll
xor
fsubr
and
sahf
ret
mov
adc
sbb
lahf
fdivrs
mov
and
mov
dec
fcoml
dec
mov
pusha
add
iret
and
xor
sub
das
pop
xor
mov
int3
test
fwait
loop
mov
cltd
add
movsb
ss
and
fs
call
mov
subb
adc
daa
addr16
lea
jae
dec
insb
gs
inc
fs
insb
add
dec
xchg
jg
mov
pop
jmp
mov
rcrb
push
rclb
or
jle
add
imul
add
or
sub
pop
cld
js
leave
jg
test
cmp
popf
das
cli
push
ret
in
mov
movsb
or
add
push
lahf
mov
ljmp
mov
mov
pusha
sub
fisttpl
cld
add
mov
and
pop
xorl
jecxz,pt
cs
jae
daa
sub
into
push
dec
mov
push
enter
pop
add
sub
and
jmp
lock
jnp
xor
int3
sbb
jno
cltd
mov
jo
repnz
lret
cmpsl
repz
scas
pop
repnz
xchg
ret
inc
subb
leave
push
int
test
test
fmull
add
mov
test
sub
xchg
adc
jbe
in
das
repz
outsb
fcmove
add
lds
sub
mov
scas
jge
or
mov
cli
sbb
inc
mov
js
sub
std
inc
mul
repnz
jbe
data16
jns
xor
mov
dec
jle
lret
data16
sub
xlat
test
cmovge
aam
arpl
push
push
add
ret
pop
dec
clc
mov
fists
add
xchg
notl
xor
fs
stc
jne
add
cmpsb
xchg
and
push
test
add
in
jecxz
lret
jp
add
rcrb
test
jae
mov
dec
jno
incb
mulb
hlt
dec
mov
sbb
mov
cmc
or
sub
loopne
inc
popa
mov
add
cmp
adc
adc
adc
test
mov
test
imull
sbb
stos
leave
fwait
or
mov
jecxz
ds
cmp
xchg
cmp
aad
dec
mov
aaa
push
pop
pop
pop
sahf
hlt
fnstcw
movsl
int
pushf
xchg
in
dec
mov
test
push
xchg
mov
and
ret
int
int
jbe
xchg
or
sub
pushf
dec
dec
add
lret
inc
aad
ja
push
test
gs
cmc
mov
or
jo
stos
ret
pop
jnp
dec
pushf
loop
cmpsb
xchg
sbb
loope
ret
mov
jbe
lods
jl
out
movsl
popf
pop
cmp
adc
inc
loop
adc
rorb
scas
in
xchg
call
dec
xor
iret
arpl
inc
movsb
cmpsb
ja
dec
dec
and
mov
sub
clc
pop
sub
sub
xor
mov
jns
dec
les
mov
sbb
adcb
call
cmp
test
mov
daa
xor
mov
sbb
call
mov
pushf
cmc
mov
xchg
and
out
ss
xchg
jle
shr
push
cwtl
xchg
sahf
lcall
inc
test
cltd
sub
or
popa
lds
outsb
mov
push
ljmp
int3
inc
std
adc
jle
sub
mov
std
movsb
scas
fiaddl
aaa
fcmovnbe
rcll
shlb
iret
xchg
xchg
pop
aad
jle
mov
fisttpl
add
mov
xchg
fdivrp
sub
adc
mov
fwait
das
cmp
pop
jb
aad
std
loopne
fadd
fsubl
jbe
aas
xchg
mov
adc
jb
icebp
adc
pop
clc
add
addr16
cld
xchg
icebp
cmpsl
push
int3
aad
pop
fdivs
and
lcall
and
push
pushf
inc
xchg
popf
arpl
mov
or
and
xchg
fimuls
add
cmp
fldt
je
xor
dec
test
in
lahf
insb
mov
sub
out
rcll
stc
fsubl
leave
add
scas
test
std
fadd
xor
xchg
xor
mov
jae
push
and
repnz
imul
xor
lea
xchg
in
xor
insl
cwtl
adc
in
cltd
cmp
adc
dec
cli
inc
or
mov
aam
sub
mov
cwtl
sarl
scas
pop
lods
sar
ficoms
xchg
cmp
fld1
cmp
mov
scas
dec
scas
push
adc
xor
push
pop
insl
cld
xchg
adc
stos
sbb
mov
shrl
and
xor
mov
roll
movsb
push
roll
lret
int
and
dec
add
dec
cmp
je
push
ret
sbb
subl
imulb
cmp
outsl
pop
fcmovbe
cmpsl
mov
cmp
scas
sub
mov
or
cmpsl
arpl
push
in
dec
fistl
sarb
shl
imul
push
cmp
in
pop
std
lods
into
mov
push
ret
inc
push
in
and
cmp
fnstcw
dec
into
and
mov
dec
sbb
mov
push
xchg
push
test
cmp
mov
xchg
push
test
mov
xchg
mov
es
mov
clc
xchg
mov
mov
lahf
cli
adc
sahf
cmp
enter
sbb
or
xchg
or
shlw
pop
nop
imul
sub
fistpll
or
outsl
vpsraw
fucomi
imul
sub
cltd
or
cmp
mov
test
mov
lds
cmpsl
mov
pop
push
call
mov
xorb
or
push
or
and
gs
inc
out
adc
pusha
mov
inc
into
js
aad
mov
outsl
jne
insl
mov
mov
xchg
mov
in
inc
push
lods
pop
mov
nop
lods
test
aad
aam
lahf
pushf
pop
sub
xchg
jo
mov
adc
in
jne
jns
je
es
insb
incl
adcl
push
xchg
pushf
cli
arpl
sbb
jge
sub
sbbl
adc
ja
fwait
or
mov
andl
or
jl
lds
test
and
rcl
cwtl
icebp
xchg
cmp
mov
int3
pushf
jnp
pop
mov
adc
cmp
je
lods
ret
arpl
jno
aam
or
fucomi
dec
add
dec
push
call
lcall
sub
sbb
js
jae
dec
mov
repz
dec
lahf
fadds
mov
adc
fildll
mov
aad
gs
mov
pop
movsb
lock
incb
mov
int3
sbb
inc
ss
add
lahf
leave
inc
je
rcll
int3
push
les
dec
idivl
sbb
mov
mov
sub
divb
mov
das
adc
inc
mov
out
test
data16
imulb
xchg
cmp
pop
cmp
pop
outsb
xor
mov
mov
mov
jle
mov
jp
sbb
lods
lea
ficoml
mov
enter
lcall
jle
rep
imul
jae
stos
and
dec
jno
popf
mov
test
mov
test
sub
push
or
mov
mov
add
sbb
push
add
in
lahf
loope
jle
cld
das
inc
out
and
jae
stc
mov
repz
push
cmp
xor
push
mov
xchg
push
vpsubsb
stos
jecxz
jo
aad
and
pop
sar
push
js
mov
repz
lods
movsb
push
or
or
xchg
out
jb
pushf
or
js
add
jno
xor
dec
popa
scas
mov
jbe
nop
movsl
xchg
xlat
push
pusha
imul
imul
imul
fdivrs
repnz
ret
or
mov
daa
xchg
xor
imul
xor
xchg
cmp
lods
inc
divl
sub
jle
aaa
dec
cld
push
and
pushf
insl
test
test
pop
jae
sub
jl
or
adc
or
pop
xchg
test
leave
stos
pushf
ret
fcoms
cmp
mov
inc
adc
sub
pop
dec
fmull
and
and
out
aas
cltd
jae
jmp
jg
inc
jo
neg
push
movsl
aas
pop
ficoms
sbbl
dec
movb
dec
push
xor
iret
lahf
fucomi
push
and
cmpsb
inc
popf
sbb
pop
ret
aaa
stc
aaa
std
daa
mov
js
push
xchg
pusha
mov
nop
cltd
mov
push
rorl
pop
and
adc
int
fs
leave
push
fistpll
or
inc
pop
stos
fbstp
adc
push
ss
shl
and
icebp
cmp
pop
dec
repnz
fistps
setno
pop
sub
ficoml
jno
push
out
cmp
pop
popa
push
pop
jnp
xorl
dec
push
adc
and
pop
cs
sub
out
lods
dec
loopne
inc
ret
stos
test
push
pop
mov
dec
in
sub
jnp
xor
daa
dec
sub
cmpsb
aad
and
ret
dec
ss
xorb
pop
and
jmp
fists
std
dec
das
pop
lea
pop
loope
or
mov
xchg
dec
sbbb
xchg
iret
xchg
jp
push
popa
cwtl
in
or
adc
loop
loopne
mov
xchg
cmp
mov
test
xor
cvttps2pi
daa
data16
ljmp
or
push
mov
test
sbb
sbb
movsl
fmuls
shll
pop
xor
sbb
popa
mov
and
fwait
and
sbb
hlt
roll
mov
inc
inc
inc
ss
push
xchg
push
xchg
xchg
out
fcoms
pop
xchg
loopne
pop
std
xor
mov
jne
test
lds
xor
xchg
test
pop
cli
lahf
jge
out
arpl
ffree
pop
int
push
inc
cmc
popa
sbbb
xchg
push
jecxz
add
negl
inc
cmp
xor
gs
fwait
or
cmp
mov
cmp
push
aad
stos
rolb
mov
xchg
loopne
pop
jp
or
outsl
mov
test
sub
mov
pop
incl
xor
iret
int
test
inc
out
jmp
cmp
mov
push
mov
xor
pop
inc
push
and
outsb
fdivl
fwait
mov
mov
or
or
sub
test
cli
lods
dec
movsl
outsl
mov
sub
mov
leave
movsb
fmuls
mov
in
cwtl
imul
flds
cmp
xchg
aad
push
xchg
test
insl
outsb
mov
push
mov
in
add
and
mov
mov
fdivs
sub
je
arpl
xor
xchg
mov
lods
les
mov
jae
scas
pop
push
mov
jp
ret
push
inc
xchg
pop
data16
lret
pop
in
or
cmc
and
aaa
mov
dec
push
test
out
add
fcompl
shrl
sub
pop
andb
dec
pop
js
sub
arpl
sbb
ret
sub
pop
push
dec
sub
in
shl
notb
adc
sahf
iret
push
xor
and
lret
icebp
pop
scas
rcrb
daa
adc
jmp
push
out
mov
mov
pushf
ret
jmp
mov
sub
mov
push
jmp
cs
dec
xor
inc
repnz
stc
add
jge
or
mov
cmp
repnz
inc
cmp
mov
mov
fs
adc
mov
sub
mov
pop
ss
and
and
test
insb
subl
call
mov
data16
fmuls
mov
pop
adc
sbbb
lea
lods
adcb
sbb
rcl
movsb
xor
pop
adc
cld
shrl
cmp
adc
stc
adc
push
fiadds
scas
daa
ret
mov
cmp
fs
sub
gs
push
mov
imul
lea
sbb
add
fwait
or
je
movsl
into
ret
dec
xor
and
roll
push
imul
and
jmp
jmp
push
pushf
cltd
jl
add
or
rcr
addl
repnz
mov
insl
fists
push
xchg
das
int3
jg
stos
fmuls
in
mov
mov
sub
jge
push
ljmp
mov
jae
push
fistl
fstpl
sbb
loopne
mov
push
mov
inc
iret
adc
ljmp
push
inc
mov
jnp
shrb
popa
popa
stc
popa
mov
push
movl
orl
fcmovbe
mov
cltd
or
dec
mov
rcrl
and
pop
ds
pop
loopne
add
outsl
es
pop
mov
cmc
mov
or
in
mov
testb
pop
xchg
sub
fcomip
mov
rcll
les
out
inc
jp
jae,pn
xor
je
inc
negl
test
repnz
repnz
jle
sbb
mov
xor
outsl
scas
stc
ss
je
inc
jns
lcall
movsl
sub
push
push
cmp
loopne
or
sahf
sbb
stos
xchg
xchg
sub
jmp
cmp
rorl
lea
es
mov
popa
popf
push
mov
cwtl
std
inc
fisubrs
add
mov
adc
or
repz
ss
movsl
cs
stc
xchg
adc
mov
pop
sub
fsubs
stc
push
adc
pop
xchg
insb
or
and
inc
push
pop
rcr
dec
pop
push
mov
call
es
arpl
xor
out
int
mov
xor
pushf
pop
aaa
out
xlat
loope
movsl
imul
cwtl
pushf
cmp
xor
push
xchg
cmp
mov
mov
andb
pop
mov
pushf
dec
xchg
inc
imul
inc
ja
out
jo
mov
cmp
mov
and
daa
xor
cwtl
rolb
inc
cmp
push
lods
add
js
ret
or
inc
cmp
aaa
sbb
mov
imul
imul
inc
xlat
dec
out
jmp
pop
sahf
fisubs
scas
sbb
int
test
adc
lock
std
pop
sbb
xor
xor
jns
sub
movsb
mov
in
and
aad
cmp
outsl
xor
ds
pop
aaa
add
incb
notb
mov
and
jmp
xchg
les
adc
push
repz
mov
sbb
sti
lahf
loope
mov
mov
adc
sbb
bound
xor
push
pop
and
xchg
and
cmp
lock
mov
insl
stc
xorb
lahf
ds
and
jmp
push
aam
mov
out
xchg
cmpsl
ret
push
lcall
jecxz
mov
sub
sub
test
sub
loope
sbb
loopne
bound
in
sahf
pusha
sbb
xchg
add
ss
fcomps
sub
cmp
pop
cs
sbb
jae
fwait
insb
mov
test
repz
pop
out
incb
push
xor
jge
out
pop
jecxz
call
sti
rclb
div
out
int3
dec
mov
sbb
imul
out
xchg
idiv
test
mov
in
dec
les
mov
jbe
mov
dec
in
inc
pop
inc
outsl
mov
cmp
push
lds
add
dec
aaa
mov
mov
dec
push
push
mov
nop
test
int3
jp
adc
popf
mov
in
scas
inc
cltd
xor
sbb
adcb
jl
pop
movsl
mov
ja
lock
or
mov
or
push
push
jno
xor
cmp
sub
stos
mulb
sti
xor
inc
mov
inc
mov
out
jle
jno
jle
mov
push
lret
mov
aam
lret
inc
pop
push
shlb
pop
in
inc
repnz
pop
jb
sarl
sti
lods
jbe
movsb
lret
jo
dec
aam
sbb
inc
mov
inc
rol
mov
or
es
jle
cltd
cmp
insb
jae
ficompl
and
pop
add
jbe
push
mov
addr16
dec
loope
fmulp
mov
jecxz
sarl
nop
sbb
rorb
inc
and
xchg
push
daa
jo
or
adc
lea
jne
shrb
push
cmp
pop
push
lret
push
jecxz
gs
mov
pop
xchg
rorl
adc
sar
bound
outsl
lods
cmp
jo
dec
dec
lcall
in
lods
mov
inc
sub
fwait
mov
sahf
ret
push
cmpb
mov
cwtl
fistpll
and
dec
loopw
mov
mov
pop
sbb
or
pop
push
nop
scas
leave
cmp
xor
sub
loope
outsb
clc
mov
xor
jne
cmp
mov
mov
adc
test
imul
iret
sub
xchg
fucomi
mov
sbb
xor
inc
pop
scas
inc
mov
fmul
sbb
aaa
cmp
cmpsl
jl
or
xor
test
jecxz
test
lock
lret
push
int
jg
inc
test
jl
iret
add
xorl
xor
scas
ss
mov
sbb
flds
mov
rol
orl
aas
inc
test
cmc
sti
mov
mov
adc
add
xchg
lcall
test
xchg
ljmp
mov
mov
jb
mov
push
movb
mov
xor
mov
inc
out
mov
xor
lret
dec
in
mov
ror
mov
lock
out
mov
das
and
adc
mov
and
out
push
mov
lea
std
std
xor
mov
sub
jg
sub
in
and
sbb
pushf
push
mov
pushf
sahf
dec
jno
mov
lahf
out
dec
jge
fmuls
clc
lahf
and
js
test
test
sarl
mov
shrl
xchg
mov
rcl
insl
cs
push
pop
in
lock
fsts
pop
jb
icebp
out
icebp
movsb
cmp
mov
int
xlat
fldl
jg
cmp
sub
test
inc
cltd
dec
aaa
loopne
and
aaa
into
pop
and
scas
fldl
pop
ds
push
notl
cltd
dec
icebp
fldcw
mulb
jecxz
add
sarl
cld
adc
cwtl
fld
push
and
cmpsl
jmp
les
cs
push
int
imul
js
int
lret
xor
jle
and
cs
lods
ja
fucompp
xchg
and
mov
ss
ja
stos
clc
mov
sbb
push
gs
cmp
scas
stc
dec
mov
xchg
fldcw
xor
or
cmpsl
out
dec
lret
imull
lahf
mov
push
xor
jmp
mov
push
push
hlt
pop
cld
mov
sub
mov
out
addr16
scas
sub
loop
pushf
inc
inc
fisttps
add
dec
out
mov
dec
dec
rcl
push
popa
out
push
stc
fmuls
out
mov
pop
ret
or
mov
xchg
mov
jmp
faddl
and
notb
push
sbb
out
lds
rcrb
jle
enter
lcall
add
inc
cmp
lahf
mov
xor
or
xor
shll
stc
test
mov
cmp
pushl
xchg
adc
mov
pop
cli
adc
lds
repnz
clc
mov
and
bound
sahf
jl
test
pushf
jmp
mov
sbb
or
aad
pop
xor
int
jp
jge
or
mov
or
cltd
inc
adc
imul
movsb
leave
xchg
outsb
lods
xchg
fldcw
push
jp
data16
jmp
and
xchg
mov
xchg
pop
lods
gs
dec
cmp
fistps
jae
add
sub
sub
das
jb
add
jne
por
int
mov
jo
test
jb
icebp
stos
fisttps
es
or
scas
call
hlt
int
lods
xchg
ffreep
fiaddl
repz
and
mov
mov
orb
adc
pushf
pop
stos
adc
addb
jg
stc
inc
push
mov
fcoml
test
loopne
pusha
insl
arpl
ljmp
jno
cli
das
push
cli
or
mov
cmpsl
shl
test
sbb
lcall
out
xchg
sbb
dec
imul
cmp
mov
inc
add
insl
jno
arpl
push
push
cmp
icebp
scas
cmp
dec
sub
cmp
stos
sub
mov
out
add
cmp
xor
push
in
lahf
sbb
movsb
fnstenv
pop
ds
stos
or
popf
jl
mov
dec
xor
push
xchg
iret
xor
xchg
add
mov
test
pop
xor
filds
std
add
inc
dec
dec
aam
cld
inc
xchg
and
inc
push
mov
inc
pusha
fsubp
notb
test
in
mov
cmp
addr16
aas
dec
out
add
imull
loope
ja
cmp
insb
dec
pop
scas
fbld
xlat
mov
mov
in
mov
sub
repz
aas
push
inc
dec
sub
sbb
mov
and
xchg
mov
push
lods
mov
sub
xchg
xchg
sbb
pop
fisttps
fiadds
fiaddl
jnp
imul
jae
and
mov
jae
test
cmp
mov
jmp
cmp
out
jg
mulb
pop
mov
dec
mov
mov
mov
mov
enter
mov
leave
add
lea
test
sbb
in
mov
sub
mov
sub
cli
das
mov
imul
iret
insb
hlt
jp
sbb
fs
mov
aaa
pop
arpl
cmp
sub
cmpsl
jae
mov
dec
mov
cmp
dec
ss
loopne
insl
jecxz
out
int3
add
repnz
xchg
fmul
pop
dec
or
into
push
pop
test
mov
pop
cmc
aam
and
sub
icebp
loope
shrb
jbe
fwait
icebp
xchg
clc
lret
inc
cmp
dec
dec
jg
sub
fmull
scas
or
xor
int3
pop
jmp
ljmp
lcall
std
xchg
adc
inc
pushf
in
lcall
sub
xor
mov
test
or
sbb
scas
push
jg
pusha
scas
lahf
sbb
jg
pusha
and
mov
scas
sbb
push
add
or
in
push
ret
adc
add
addr16
add
mov
loope
fnstsw
imul
pop
lcall
xlat
hlt
icebp
lcall
adc
xor
ds
mov
cmc
enter
cmpsb
mov
lods
jecxz
jnp
inc
cltd
mov
cli
add
popf
xor
dec
aaa
ffree
mov
stos
mov
aam
addr16
mov
addr16
ss
add
scas
mov
sbb
aam
mov
sub
fucomip
aaa
mov
lahf
push
sti
push
xchg
cwtl
fstl
push
mul
aas
outsb
sahf
les
and
pop
dec
roll
jp
fildl
push
imul
mov
lret
in
int
test
jle
mov
cmp
sahf
push
adc
pop
jnp
and
repnz
mov
aam
sub
sub
mov
mov
mov
pop
push
inc
push
jl
or
js
clc
inc
aas
aaa
mov
es
stos
mov
jb
aam
mov
cmp
xor
adc
adc
mov
xor
jb
enter
loope
les
and
mov
jns
imul
stos
rcll
mov
add
popf
popf
clc
sub
or
cmp
push
das
enter
imul
push
scas
mov
les
mov
and
ds
fsubs
gs
mov
shll
mov
in
cmc
xchg
ds
dec
inc
loopne
mov
bound
iret
dec
test
cmp
dec
idivb
push
add
pop
mov
call
pop
xchg
hlt
pusha
mov
dec
outsl
jbe
iret
fwait
add
ret
mov
js
fsub
inc
jl
enter
lea
pop
sub
cmc
push
lods
inc
mov
mov
push
pusha
pusha
ret
pop
ja
hlt
or
push
pop
or
dec
push
or
add
dec
sbb
js
and
es
sub
test
xchg
std
add
call
push
pop
ljmp
mov
inc
test
ds
ret
cmp
push
insb
loop
adcb
mov
ficoms
out
xor
js
stos
sub
pop
inc
dec
pop
add
add
or
dec
mov
popf
mov
add
mov
cmp
jg
and
and
jae
jp
fstpt
out
or
cld
sarl
js
jae
dec
shl
push
inc
addb
sbb
loopne
sbb
cltd
push
pop
pushf
into
add
and
popf
xor
scas
fcomps
shlb
push
imulb
pop
adc
setl
push
jl
test
dec
js
push
mov
movsl
xchg
mov
repnz
sbb
inc
lods
lods
in
mov
adc
pop
sub
mov
inc
into
std
mov
imul
mov
pop
mov
jp
mov
ret
in
sub
jmp
insl
lcall
dec
cli
in
fldcw
add
cld
dec
jle
push
lods
dec
inc
mov
and
or
into
rol
or
in
sbb
or
aas
loop
dec
or
push
ret
cld
adc
test
scas
mov
data16
lds
fidivrl
jb
nop
pop
call
arpl
sub
movsl
ds
inc
sbb
xchg
rcll
int
cmp
jge
btc
imul
push
lock
mov
mov
sub
arpl
mov
filds
outsl
ret
dec
imul
push
rolb
ret
cmpsl
imul
into
test
cmpsb
inc
jle
loop
adc
or
js
lret
jb
pop
pop
cli
stos
pop
inc
and
fidivs
jbe
pop
gs
mov
adc
xor
lds
push
cmpl
mov
mov
imul
sahf
sub
and
test
test
ljmp
repnz
mov
inc
jne
xchg
aam
jle
xor
dec
fstpl
int
cld
pop
push
nop
push
aam
dec
cmpl
ljmp
push
adcl
adc
out
mov
cld
pop
jge
lahf
mov
fldl
pop
setge
fsubrs
idivl
cmpsl
test
jmp
push
mov
dec
jne
icebp
fwait
daa
jnp
es
push
dec
fs
mov
mov
ret
pusha
jns
mov
decl
xorb
fs
xchg
test
adc
ror
mov
outsl
jecxz
ljmp
fadds
dec
bound
mov
insl
cwtl
rcrl
mov
sbb
jo
je
es
pop
adc
lea
pushf
dec
adc
ljmp
add
dec
lods
mov
fimuls
movsb
pushf
fidivl
out
and
push
mov
adc
out
jns
inc
adc
loopne
push
sub
sub
fisubl
sbb
lods
adc
cmpsb
mov
dec
dec
std
nop
imul
out
sbb
push
outsl
lods
mov
xor
and
jb
les
je
inc
jae
mov
insl
dec
sbb
shl
xor
pop
dec
sub
rol
adc
out
lods
pop
lahf
rclb
test
cmp
and
imul
pop
test
mov
out
sbb
mov
pop
out
fists
pop
cmp
insl
jge
pop
jl
lock
aas
insl
inc
xor
aaa
and
push
neg
jno
xchg
into
sbb
les
adcb
cltd
jo
pop
cmpsl
cmp
xlat
mov
test
ret
in
out
mov
or
sub
and
jnp
or
mov
icebp
xor
test
les
pusha
jnp
or
ret
insb
fs
aad
dec
pop
or
pop
cmpl
mov
pop
lcall
jle
adc
int3
add
jno
jo
stc
cmp
mov
js
insb
sub
and
or
push
or
sti
mov
cs
imull
xor
adc
xor
inc
pushf
add
fidivrl
sub
stos
xor
sarl
nop
repnz
addr16
pop
push
fbstp
mov
mov
add
dec
dec
xor
popa
repz
jmp
popa
inc
js
in
daa
mov
mov
adc
and
ljmp
cmc
push
test
inc
dec
mov
rorl
in
repnz
loop
mov
mov
jg
fs
cmp
cld
repz
ja
xchg
hlt
leave
lods
and
add
cmp
test
mov
out
insb
cmp
adc
addl
addb
out
insb
jnp
repz
icebp
pop
lret
fisubrl
or
add
sub
dec
stc
testl
fnstenv
mov
enter
cmp
pop
imul
nop
adc
inc
fistpll
fsubl
xchg
hlt
dec
or
arpl
xchg
cltd
movsl
aad
cmp
xorl
jl
pop
sub
rcrb
adc
popa
mov
ret
stos
mov
mov
js
hlt
and
xchg
addb
or
dec
adc
cmp
mov
or
inc
lea
xor
mov
pop
push
mulb
jmp
fsts
mov
mov
cmc
fidivrl
pop
fwait
mov
insl
cli
ja
stos
inc
mov
sbb
pusha
insb
jb
insl
cmpsb
nop
test
pop
pop
dec
jmp
jl
test
push
jmp
jl
aaa
mov
sarl
jge
mov
cld
rolb
xchg
sar
push
repnz
cmp
sbb
movsl
or
jecxz
add
lret
pop
dec
and
adc
or
lods
ljmpw
test
lahf
imul
cmp
loopne
int
xor
imul
lahf
inc
push
imul
gs
xor
push
lret
mov
gs
int3
jbe
and
mov
xchg
ret
cmp
push
iret
sbb
dec
sti
add
into
push
mov
sub
in
incl
out
lock
shrb
mov
mov
xor
pusha
push
test
out
adc
xor
mov
sarb
les
adc
popf
int
sbb
arpl
imul
dec
call
les
mov
sub
shl
mov
call
fldenv
hlt
int
mov
subb
std
add
cltd
dec
cmp
ljmp
das
loope
imul
pop
out
loop
invd
outsl
aam
arpl
jmp
pop
xchg
fwait
in
xor
mov
xor
nop
xor
in
sub
inc
popa
and
mov
lods
int3
aaa
adc
mov
adc
cmp
jne
push
sub
xchg
imull
cmpsb
mov
xchg
add
xor
adc
jg
lcall
xor
fisttps
ja
leave
mov
stc
mov
std
xchg
dec
xor
sub
cmp
clc
adc
fstpl
loop
cmp
and
movsb
pop
pop
int
jne
mov
mov
orb
scas
mov
and
jecxz
push
xchg
dec
fimuls
pop
lods
fs
cmp
jg
pop
das
push
test
mov
hlt
ja
outsb
ja
mov
add
lcall
sub
mov
mov
cmp
dec
add
mov
call
ret
cmp
out
into
lret
cmp
and
fs
std
inc
je
sbb
pop
addb
xchg
pop
xor
std
movl
addr16
inc
incb
es
and
lods
loop
jns
fidivrs
mov
iret
shlb
sbb
push
inc
in
mov
cwtl
sbb
cmp
sbb
sbb
out
sbb
mov
aas
es
dec
mov
dec
and
cmpb
imul
and
jg
xchg
add
lcall
bound
mov
sub
sar
xchg
or
addl
push
std
sti
jb
push
jns
add
outsl
mov
dec
popa
dec
int3
fucom
pop
adc
jno
or
jmp
jle
dec
push
call
cwtl
sub
cld
daa
mov
add
and
sub
jae
push
cmp
inc
xchg
sbb
lcall
push
ljmp
sbb
pop
push
or
adc
mov
xor
pop
mov
jb
jg
fisubrl
mov
cmc
and
inc
push
test
testl
add
adc
inc
ret
repz
les
mov
in
sbb
jge
pop
inc
out
sub
gs
in
mov
ds
lahf
stos
add
stc
lock
fwait
mov
mov
into
mov
sub
dec
dec
inc
ja
cmc
imul
or
mov
imul
xchg
and
out
cmpl
nop
lret
adc
inc
fcomp
mov
fbld
add
xchg
daa
mov
jl
leave
loope
inc
mov
jmp
mov
mov
fst
mov
add
or
bound
add
das
leave
idivb
je
dec
into
sub
mov
les
dec
lcall
push
xchg
jne
dec
das
pop
out
ret
stos
jb
mov
xlat
jno
mov
bound
jb
sub
rorb
and
pop
shlb
adc
fs
icebp
outsb
mov
test
addr16
mov
andl
mov
lods
xchg
in
inc
cmp
and
cmp
lds
xor
arpl
iret
into
daa
mov
test
push
cmp
adc
gs
dec
jno
cmc
jnp
lods
loop
movsb
mov
lret
movsl
jo
pop
int
lea
xchg
jae,pn
stos
ss
inc
loope
sarb
dec
jge
incb
jge
fs
out
sti
mov
mov
stos
ljmp
xchg
aaa
jae
pop
xchg
int
xor
js
iret
mov
ror
push
ja
cmp
sti
mov
leave
mov
add
mov
add
lock
shlb
stos
jns
xor
sti
jge
mov
punpcklwd
fnsave
pop
sbb
xchg
jecxz
push
rolb
xchg
xorb
jmp
jecxz
mov
lcall
pop
push
mov
ja
cmp
test
or
js
popf
xchg
push
out
inc
fwait
ja
jne
insb
test
inc
mov
hlt
cs
jge
push
inc
aaa
pop
xor
jnp
fdivrs
rorl
aas
pushf
icebp
shlb
sbb
jb
add
xchg
imul
mov
mov
mov
jnp
idivb
adc
mov
jne
push
inc
cmp
test
in
aam
fidivrs
mov
jae
sbb
xor
aad
pop
test
cmp
pop
mov
jge
shl
sbb
out
mov
movl
add
xchg
sti
lock
aam
lret
adc
sbb
lahf
adc
xor
cmp
adc
jnp
push
or
gs
adc
xchg
jne
scas
adc
mov
sbb
rorl
gs
jle
pop
jb
test
jns
inc
jne
mov
enter
add
ljmp
dec
into
sarb
sbb
sub
loop
jmp
iret
jo
aaa
aas
sub
push
sbb
inc
adc
out
cmp
ror
inc
push
inc
mov
or
dec
mov
mov
lods
adc
mov
out
mov
notb
fmuls
and
aad
xchg
repnz
pop
cld
sbb
in
sub
xchg
daa
fsubrl
sbb
pusha
push
xor
jle
movsb
fwait
pop
pop
addr16
std
adc
loopne
ret
mov
test
fcoml
loop
dec
xor
popa
nop
cmpsl
mov
not
push
or
dec
mov
xchg
fisubrs
sahf
mov
xor
lock
mov
stos
pop
out
stos
xor
imul
jl
rcll
and
mov
push
das
int
inc
loopne
cld
mov
jp
inc
movsb
mov
pop
fwait
imul
lret
or
inc
out
and
arpl
push
sub
lret
int3
outsb
mov
push
imul
mov
cmp
sub
mov
jmp
push
push
xchg
mov
daa
arpl
iret
pop
adc
repz
mov
mov
fstpl
mov
addr16
roll
mov
repnz
out
xchg
cmp
sub
nop
lods
enter
js
adc
mov
push
fwait
test
js
or
pop
mov
leave
dec
dec
mov
inc
rcll
mov
out
inc
sbb
sbb
aam
je
mov
and
lahf
scas
ljmp
or
pop
int
das
mov
sbb
add
jnp
sub
inc
inc
sbb
fisubl
cmpsb
mov
jmp
mov
js
cmpsl
idivl
test
push
test
inc
sbb
inc
xor
sahf
or
sub
out
addr16
out
mov
sbb
aaa
xchg
out
inc
daa
ljmp
aam
mov
es
sub
jecxz
arpl
fisttps
sbb
aaa
pop
mov
xchg
dec
add
mov
mov
outsb
adc
pop
xchg
push
inc
pop
stos
sbb
xchg
push
mov
and
xor
mov
rcrb
xchg
movsb
push
mov
mov
add
pop
and
inc
inc
iret
outsl
cltd
sbb
sub
jnp
jle
fcomps
or
faddl
xchg
pop
int
repz
jle
sbb
dec
jl
mov
add
adc
ret
shrb
and
adc
aas
cltd
lahf
push
mov
shll
mov
adc
fwait
cmpsl
push
int3
outsl
mov
fs
ljmp
xlat
push
add
fs
adc
push
push
pop
lods
std
lcall
cli
ret
xchg
inc
inc
shl
add
loopne
sbb
inc
scas
sbbl
cli
notb
out
mov
mov
inc
inc
mov
out
lcall
xchg
ljmp
and
fisttpll
sahf
inc
clc
or
mov
xor
shlb
sub
neg
pusha
fs
fsub
sahf
jmp
arpl
mov
sub
cltd
mov
cmp
ss
lds
bound
js
sbb
andl
cmp
fcmovnbe
mov
sbb
mov
and
dec
mov
leave
pop
in
fldz
dec
outsl
xchg
push
pop
nop
bound
fiaddl
inc
std
repz
nop
gs
pop
cltd
mov
fisubl
sti
pop
ja
push
pop
sub
js
out
lods
mov
dec
cmp
mov
dec
xchg
xor
adc
xchg
mov
scas
pop
or
sbb
rorl
push
cmpl
jb,pn
cltd
push
mov
leave
ret
incb
push
add
push
xor
mov
push
sahf
das
cwtl
cltd
or
rcrl
sti
mov
rcrb
dec
pop
cmp
in
cli
ret
jns
mov
jne
rcrl
mov
pusha
jp
xchg
cld
pop
fnstsw
xor
mov
jl
rcll
pop
inc
aad
add
movsb
mov
shll
loop
mov
mov
vmread
sub
mov
inc
andl
loope
inc
adc
sbb
jle
fs
mov
push
aam
and
mov
push
imul
scas
dec
mov
rcr
jle
aas
in
fisubrl
pop
dec
mov
in
mov
pusha
mov
test
rclb
pop
mov
jecxz
ljmp
out
mov
or
stos
push
outsl
push
lret
jmp
pop
jno
jge
xchg
pop
or
cmp
sub
jg
test
xchg
xchg
add
xchg
ss
fstp
push
orl
and
xchg
adc
xor
sub
push
dec
jmp
cmp
jmp
loope
adc
fucom
ljmp
lahf
lret
fnsave
outsb
xchg
test
mov
aam
jecxz
cmp
sbb
in
scas
in
push
mov
mov
std
jne
insl
push
call
mov
shrl
cwtl
out
add
sbb
xchg
jp
mov
add
pusha
xchg
enter
movsb
adc
not
xor
jmp
xchg
jae
add
popf
mov
repnz
adc
icebp
or
out
rolb
dec
xor
outsl
xchg
jl
and
jp
or
stos
mov
push
mov
push
cmp
jmp
inc
xchg
add
xchg
cmpsl
into
and
push
rol
push
das
jle
mov
xchg
sahf
pop
sub
ret
clc
inc
xor
or
xchg
hlt
mov
sbb
lds
aaa
outsb
xorl
jb
ss
sbb
and
setbe
std
idivl
lea
or
or
cmp
scas
fsubs
push
or
push
add
fsubs
fs
or
sub
insl
mov
fwait
sti
lret
js
cltd
push
cli
and
sub
inc
pop
lea
shlb
in
out
push
add
pop
insb
fsubl
sbb
adc
mov
popf
or
cmp
pop
add
pop
inc
or
fadd
jmp
inc
pop
push
jns
fisubrl
aad
lods
inc
notb
xor
aad
ja
clc
gs
add
rolb
cmp
jecxz
dec
inc
jbe
pop
inc
and
pop
mov
mov
pop
jno
cwtl
xchg
test
daa
aad
and
xor
add
and
sbb
push
mov
xorb
and
pop
femms
xor
cltd
cmp
push
dec
filds
push
sub
call
test
push
iret
adc
stc
sbb
andl
test
lahf
lret
test
xor
push
in
dec
scas
stc
dec
dec
repnz
fcom
shrb
mov
pop
incl
mov
sbb
or
imul
push
orl
fimuls
call
lock
out
xlat
js
push
lret
push
scas
and
nop
hlt
fildll
sbb
xor
jp
or
xchg
push
and
mov
jns
mov
mov
icebp
inc
cmp
add
lret
sub
sub
xchg
into
int3
pusha
inc
fwait
inc
xor
aaa
dec
xchg
mov
mov
push
xchg
xor
sbb
bound
adc
or
sbb
enter
xchg
out
mov
add
dec
fstps
loope
movsl
popa
push
arpl
mov
mov
jecxz
mov
xlat
push
ss
movsl
imul
mov
cmp
test
sub
popf
sbb
shlb
sub
aam
sub
iret
ret
xor
adc
add
popa
rolb
testb
ds
mov
cli
repnz
ljmp
sbb
push
xchg
dec
cs
add
gs
adc
inc
push
decb
fists
dec
pop
les
out
dec
repz
lods
xchg
mov
fisttpl
xchg
mov
data16
dec
clc
test
daa
mov
lds
aam
les
mov
cmove
jecxz
aad
push
mov
push
cmpsb
xchg
and
mov
and
inc
fwait
push
pop
jg
sbb
aam
pop
lcall
fwait
testl
ficoml
rol
push
ljmp
arpl
pop
mov
dec
jle
and
or
mov
inc
xchg
cmp
mov
xlat
repnz
and
push
daa
sub
jns
stc
sub
add
stos
movsb
in
cmpsl
xchg
push
cmpsl
xchg
outsb
push
test
cmpl
das
jmp
and
and
pop
inc
ret
test
sbb
or
dec
jle
push
jno
jle
je
dec
int
sbb
push
inc
jmp
mov
jb
in
rorb
xor
cmpsl
push
fdivrl
xchg
in
or
adc
popa
jbe
pop
dec
xchg
ror
insb
scas
mov
xchg
jl
lret
aad
cwtl
stc
pushf
add
mov
loop
scas
jns
imul
push
jecxz
jns
test
in
push
mov
lcall
cmp
fs
ret
sub
fldz
push
sbbb
or
fiadds
or
or
shlb
and
ja
dec
lods
decl
test
jle
inc
jg
mov
pushf
mov
mov
in
mov
call
dec
adc
cmpsb
inc
insl
rcrl
pop
add
into
add
and
ja
lods
popf
pop
inc
push
xchg
mov
mov
int
iret
jl
and
popl
or
inc
add
insl
in
inc
sub
repz
dec
or
mov
mov
jmp
add
shrl
sub
insl
movsl
mov
cmpsl
js
inc
sub
mov
xchg
ds
in
mull
adc
ror
add
pop
sub
cli
cli
xor
push
mov
cmpsb
push
sahf
aad
mov
or
jne
mov
ss
push
repz
mov
jmp
xor
or
ret
test
lea
lret
data16
jo
adc
push
jo
jecxz
dec
xchg
dec
insl
into
std
jbe
dec
pop
popf
imulb
loopne
ret
stos
xor
or
insl
stos
test
mov
lfs
es
jge
xor
cmc
mov
or
je
adc
les
push
push
pop
cmp
aam
adc
and
hlt
jne
adc
sbb
test
imul
test
ret
add
xor
pop
adc
cmp
out
and
jne
xchg
push
cmp
jmp
push
mov
sti
xchg
ljmp
sbb
add
mov
pop
or
pop
fiadds
xor
jecxz
insb
pop
sbb
mov
fdiv
es
in
pushf
sub
cmp
push
fnstcw
mov
sub
xchg
xchg
sbb
lret
push
cmp
loop
out
ljmp
push
and
cli
jmp
andl
and
popa
mov
or
fnstenv
mov
pop
outsl
add
mov
mov
cmpl
stc
xchg
push
add
inc
sahf
ret
sbb
test
add
mov
aaa
xchg
insb
mov
mov
fidivrl
clc
and
lcall
mov
adc
aaa
pushf
out
dec
in
dec
or
test
or
fisubrs
and
or
aaa
test
pop
mov
cmpsl
jmp
aas
insl
mov
mov
dec
mov
jl
out
and
adc
outsb
jb
dec
mov
fstl
ljmp
cs
fs
cmpsb
lea
call
out
int3
jmp
mov
xlat
mov
cmp
jbe
xchg
test
mov
fiaddl
or
jbe
xchg
push
cmp
sbb
mov
out
add
xor
fsub
inc
stos
sub
jg
xchg
add
fistpl
mov
pop
xchg
fistpl
gs
mov
rclb
sti
mov
std
or
jno
jg
mov
xor
idivb
out
aaa
insl
leave
clc
cmp
cmp
xchg
pop
dec
pop
mov
imul
add
int
scas
mov
push
sub
sub
push
xor
pushf
sub
pop
and
pop
fnstenv
xorl
lods
or
add
ret
mov
cmpsl
push
das
insl
jae
mov
sbb
out
cwtl
insb
mov
clc
jp
les
push
mov
or
lods
inc
sbb
loop
xorb
pop
sub
je
decb
fbstp
imul
xchg
std
cmc
rcl
push
xor
xchg
jnp
cmpsl
sbb
clc
jae
andl
fwait
cmp
xlat
daa
sti
insl
xor
dec
dec
mov
aas
adcb
mov
es
mov
add
negl
cld
pop
pusha
pop
inc
push
mov
lret
sysenter
dec
arpl
mov
xor
lods
rcr
orl
aaa
out
std
and
sbb
clc
jge
xchg
je
and
jge
movsb
push
andl
scas
fs
popf
daa
in
es
adc
inc
lret
cwtl
popf
xchg
int
clc
lret
aad
pop
inc
xchg
dec
jmp
in
jmp
into
out
cmpsb
pusha
inc
inc
mov
pop
negl
aam
dec
xor
mov
add
les
insl
in
loope
pop
pop
lods
popf
adc
xchg
jb
adc
mov
jne
mov
and
jbe
xor
lock
iret
scas
pusha
mov
ds
mov
mov
pop
mov
mul
sbb
lcall
cmpsl
pusha
adc
sub
enter
xchg
in
lods
mov
inc
inc
xor
in
push
pop
popa
mov
push
dec
xchg
iret
shlb
cmpsb
push
xorb
out
dec
mov
cs
inc
jle
dec
outsb
sub
mov
out
mov
push
sub
add
movsl
dec
jl
add
clc
xor
leave
mov
sub
movsb
add
sarb
rclb
jecxz
mov
sbb
cmp
xor
ljmp
xor
mov
xchg
bnd
mov
push
sub
inc
jns
cmpsl
mov
loopne
sub
cmp
jne
mov
ss
xlat
mov
lcall
or
loopne
xchg
xchg
cmpsb
movsb
cwtl
ds
add
lahf
jle
push
jl
xor
and
jns
add
pop
int
jge
mov
jp
sarl
mov
out
mov
pop
jle
imul
cld
mov
xor
int
push
lret
rolb
dec
pop
sarb
sbb
xchg
push
inc
fiaddl
and
cltd
pop
pop
push
pop
lock
pop
sub
mov
dec
lock
into
and
repz
inc
int3
mov
inc
push
xchg
sti
push
jecxz
push
adc
push
ds
dec
or
xor
pop
add
sbb
xor
fmuls
jg
add
daa
add
dec
push
int3
or
xchg
sbbb
pop
in
pop
inc
xchg
dec
pop
add
adc
dec
adc
es
push
push
cmp
hlt
ds
mov
arpl
jg
out
mov
movhps
cmp
and
xchg
pusha
xchg
add
jo,pt
test
jns
in
or
inc
xchg
repz
add
push
pop
scas
ds
imul
stos
popa
push
lcall
xor
sbb
or
test
mov
out
jle
nop
sub
xor
popl
xchg
dec
int
jmp
out
dec
in
leave
sub
sub
pop
inc
push
or
je
mov
inc
adc
xor
mov
mull
hlt
or
push
push
dec
aaa
and
pop
pop
mov
xor
mov
incb
fnstsw
test
add
and
out
icebp
inc
jno
enter
imul
stos
adcb
mov
jle
xchg
mov
jg
mov
enter
mov
jae
mov
push
fs
leave
ficoms
notl
out
pushf
add
gs
ficomps
push
sub
test
addr16
mov
cmc
repz
xchg
ds
inc
xchg
or
sub
movb
sbbl
pop
cmp
pop
jns
rclb
sub
mov
or
adc
adc
pop
popa
out
adc
cmpsb
mov
lsl
pop
aas
inc
pop
cmc
js
stc
adc
js
push
outsb
fisubs
ret
sbb
lcall
inc
mov
pop
pop
or
cmpsl
adc
cmp
add
xor
sbb
push
mov
in
pop
pop
ss
sub
sbb
sub
in
mov
jnp
repz
aas
push
mov
rclb
cmp
push
sbb
ficomps
stos
movb
push
mov
mov
fistps
inc
push
insl
jno
stos
lcall
fsubrs
push
arpl
jmp
orl
pop
cld
leave
or
or
insb
rcr
xor
call
push
fwait
imul
fildll
fnsave
testb
push
lock
mov
xlat
outsl
je
repnz
popa
xor
push
xchg
xchg
xchg
mov
add
pop
aaa
add
movsl
lret
jle
popa
or
pop
lret
push
jb
ja
in
stc
sub
addr16
dec
fdivl
and
clc
jl
data16
icebp
outsb
mov
stos
cld
fldt
pop
dec
jmp
in
mov
fidivrl
divb
xlat
sbb
and
es
cmp
fs
sbb
push
loope
sbb
fnsave
inc
pop
xor
cmc
xor
dec
push
mov
inc
sbb
enter
and
cltd
aaa
push
push
jg
jns
lods
dec
movsb
xchg
push
add
divb
mov
xor
rcrb
sbb
mov
popf
pusha
push
pop
imul
push
imul
ret
xchg
sbb
mov
inc
mov
mov
cli
add
roll
in
fimull
sahf
xchg
stos
dec
or
std
dec
xor
test
mov
sub
sub
mov
mov
pop
in
sub
adcl
fcompl
inc
jne
arpl
movswl
stos
ds
jmp
push
push
sahf
push
cli
mov
sbb
cmp
cmpsb
mov
pop
iret
add
jno
inc
loope
rorl
jle
je
jne
lret
cltd
jge
pop
and
shl
xchg
push
jbe
push
xchg
jae
imul
jecxz
test
icebp
jmp
shlb
aam
jecxz
pop
add
dec
nop
and
sub
push
adc
jb
cwtl
add
or
lock
repz
jb
icebp
cld
fdivp
inc
dec
stos
cmp
fsubl
add
sub
gs
sub
inc
inc
mov
and
repnz
enter
out
pop
cltd
push
int3
mov
cmc
aam
add
add
inc
xchg
pop
leave
mov
inc
out
jb
nop
xchg
push
in
and
fnstenv
push
call
xchg
mov
add
movsl
mov
or
dec
or
scas
or
outsl
insb
jno
dec
scas
add
xchg
pop
mov
dec
inc
push
pop
dec
bound
fistps
ror
lods
sub
inc
mov
or
cmp
js
mov
mov
mov
das
int
add
adc
daa
rclb
cmp
cmp
test
mov
xor
ret
cmp
arpl
fildl
mov
pop
inc
jg
push
adcb
cmp
and
mov
push
sub
inc
popf
add
xchg
nop
cmpsb
int
push
mov
or
lret
push
cmp
in
fnstcw
mov
pop
sub
les
imul
jp
mov
dec
jno
push
xor
push
lret
and
jle
fwait
cmpsl
outsl
adc
xchg
add
and
je
in
outsw
shrl
mov
sbb
movsl
lret
mov
dec
clc
adc
loope
push
xor
lock
mov
push
pop
scas
loopne
xchg
pop
out
je
scas
ja
into
xor
mov
inc
inc
cmp
ja
mov
mov
cmp
push
jne
ret
fwait
mov
lock
out
addl
pop
mov
mov
xor
imul
adc
xor
cld
call
out
ljmp
nop
push
or
jl
cmp
mulb
push
mov
insb
sbbb
dec
addr16
jno
ret
test
sub
cmp
adc
jo
xor
dec
adcl
dec
aam
cmpsb
inc
mov
leave
clc
jmp
add
jo
nop
dec
jge
xor
pushf
movsb
aaa
push
daa
dec
jl
stos
fiadds
xor
mov
mov
sbb
stos
cmpsl
or
fwait
sahf
and
fldcw
lret
dec
push
push
daa
stos
or
das
repz
outsl
sub
std
mov
popa
cmp
int
cmp
mov
add
add
mov
jmp
mov
stos
lods
fisubrl
jb
mov
pop
sbb
lods
adc
xchg
pop
pusha
mov
mov
and
addr16
int3
adcb
mov
cld
cmp
out
mov
mul
or
loop,pn
iret
push
inc
outsb
addr16
pop
sti
dec
fsubr
jno
push
or
jmp
subb
xor
xorl
fs
fmuls
mov
add
shlb
adc
sub
mov
enter
xor
movsb
arpl
jmp
mov
pop
iret
pushf
aam
fdivs
mov
fbld
and
insl
mov
sub
or
sbb
cmp
cmp
xchg
jle
into
dec
sahf
push
popa
mov
add
mov
mov
xor
lahf
mov
or
stos
in
fdivs
mov
shl
lea
cwtl
lahf
mul
inc
mov
mov
push
add
cmp
xchg
rclb
xorl
sbbb
loop
cmp
nop
add
shll
cs
cmp
iret
shll
cmp
lea
icebp
mov
orl
cmp
fstpt
jecxz
clc
or
jns
push
push
jno
nop
dec
mul
xor
ficoms
addb
mov
xor
clc
mov
into
adc
aad
vmread
rolb
loope
movsl
adc
mov
pushw
jle
loope
mov
ret
in
imul
and
jg
cmpsb
ds
add
jo
push
imul
rclb
push
cltd
pop
pop
les
fstpl
fadds
fwait
inc
dec
push
mov
lret
lods
sarl
in
jmp
jecxz
xor
push
rolb
iret
cld
and
xorb
movsl
cmp
out
inc
stos
clc
pop
jp
leave
dec
pop
aad
sbb
cmp
mov
push
fistpl
ret
fcmovnbe
sbb
dec
pop
pop
dec
shl
add
jb
stos
aaa
cs
cli
dec
push
add
sub
mov
mov
xchg
clc
add
jbe
das
test
push
push
cld
jo
rcrl
xchg
popf
sbb
mov
xor
mov
sbb
mov
xor
movsl
bnd
mov
cmc
and
int3
push
sub
out
popf
cmp
lods
imul
add
pop
mull
cs
jmp
inc
lea
sbb
test
aam
cmp
or
dec
ljmp
inc
insl
xchg
leave
lret
sub
adc
imul
jnp
fisubl
push
pop
repnz
xor
or
pusha
shld
push
xorps
cmp
arpl
or
xchg
cmp
jo
pusha
mov
in
adc
call
jmp
mov
clc
mov
push
arpl
ss
addr16
lahf
call
outsl
mov
jae
inc
sub
out
jle
out
filds
out
ffreep
movsl
xchg
shl
fsubl
aas
repnz
daa
or
clc
dec
mov
cmpsb
int3
pop
xor
jmp
test
xchg
add
add
or
sub
pop
and
enter
fsubrp
ret
daa
mov
xor
add
orb
add
das
lahf
adc
sub
jmp
adc
pop
pop
jmp
and
jp
cmp
mov
adc
push
js
jl
test
mov
mov
push
lret
jp
pop
mov
jae
insb
jmp
sub
int
push
lock
inc
fiadds
movsl
add
or
mov
dec
repnz
lods
xchg
inc
sbb
mov
mov
sbb
inc
push
cwtl
or
shl
dec
stos
sahf
call
add
negb
xorl
or
outsb
frstor
push
je
jnp
pop
mov
and
jo
outsb
add
cmc
in
jae
jmp
ss
dec
loopne
and
ret
sbb
sbb
adc
scas
ds
inc
dec
mov
test
hlt
insb
stc
pop
cmp
addr16
test
mov
jecxz
aam
mov
out
sub
movhps
adcl
jno
sbb
dec
jne
xchg
test
jmp
xor
lock
mov
adcl
je
xchg
cld
mov
jns
cmp
pop
pop
clc
xlat
hlt
jg
adc
inc
mulb
ficomps
mov
or
mov
dec
cmp
insb
out
mov
cmc
subl
stos
mov
arpl
xor
or
fistpl
sub
out
adc
stos
mov
lahf
fsubrs
outsb
mov
xlat
xchg
cld
icebp
cmp
xchg
cltd
pushaw
inc
sbb
push
sti
cwtl
loop
cmp
mov
enter
push
or
je
sti
and
sbb
sbb
pop
sub
xor
bound
sarl
test
push
flds
jnp
sbbl
lret
xor
insl
out
inc
mov
cmpsb
mov
adc
rdmsr
dec
xor
pop
cmc
xor
fcmovu
arpl
cmc
out
jnp
pop
orb
push
sbb
pop
ljmp
jnp
or
lret
sbb
jnp
in
in
dec
aad
jp,pn
sahf
bnd
add
mov
xlat
mov
pop
dec
pop
shr
test
or
sbb
pop
jecxz
push
pop
jo
mov
sbb
pop
inc
mov
mov
xchg
cmp
xchg
mov
and
inc
or
cmp
mov
inc
pop
in
out
insb
lods
and
pop
ret
jg
out
rorl
mull
sbb
push
add
xor
adc
lods
adc
les
das
mov
adc
adc
fsubl
inc
push
movsl
sbb
adc
mov
xchg
push
ret
das
jp
inc
push
mov
clc
push
mov
pop
loopne
orb
mov
pop
rorl
add
mov
dec
sbb
lods
clc
pop
jns
fwait
das
pop
lret
xor
mov
and
jnp
dec
push
pop
mov
sub
bound
leave
pop
adc
loop
or
dec
sahf
mov
lret
sbb
int3
int
lret
jae
lods
pop
xchg
mov
mov
ds
mov
mov
inc
and
xor
nop
aaa
stos
push
add
out
mov
fcoml
sub
ret
les
and
sub
fcomps
jno
stos
or
xor
push
mov
repnz
inc
bound
xchg
dec
fisubrl
jae
pop
lret
pop
outsl
in
inc
iret
and
lods
xor
xchg
jecxz
ret
sbb
push
jmp
add
jae
je
cmpsb
mov
imul
stos
jl
ret
outsb
inc
loopne
lret
jge
and
test
mov
fsubrl
outsl
call
aas
push
mov
test
jno
insl
xor
inc
int
cltd
xlat
ss
in
sub
mov
inc
pop
popf
mov
pop
pop
or
mov
out
out
mov
dec
mov
mov
or
xor
and
xor
push
test
or
cmp
and
loopne
les
jo
or
mov
dec
in
jmp
adc
inc
mov
hlt
mov
pop
daa
and
das
mov
jo
lock
sub
add
sbb
add
insl
dec
cmpsb
mov
inc
push
outsb
inc
out
mov
stos
dec
mov
xchg
loope
jae
sbb
imul
int
fsubrs
pop
cli
out
xchg
mov
cwtl
test
or
add
es
das
movsl
int
fst
xorb
xor
out
das
out
mov
nop
jns
imul
ljmp
std
adc
test
repnz
fucomi
jne
mov
mov
pop
pop
jp
enter
pop
or
scas
sub
fstpt
push
xor
adc
data16
adc
popa
stc
fldenv
sbb
dec
adc
xchg
xor
push
mov
jp
lret
sbb
sbb
jg
lcall
xchg
out
cmc
pop
rorl
adc
cmp
test
adc
inc
mov
popa
and
lea
gs
cmp
or
lret
push
cli
jl
out
sahf
insb
mov
aad
dec
adc
mov
fdivrl
outsb
xchg
enter
cmp
jne
jnp
sti
sarl
in
push
or
jne
cmp
adc
and
ss
in
popa
xchg
jl
pop
cmp
push
lret
das
imul
ret
mov
dec
in
xor
and
stos
int
sub
ret
mov
or
mov
jg
xchg
movsb
or
cmp
and
add
add
push
pop
js
ret
jbe
or
popf
xchg
in
cmp
mov
pop
mov
fbld
outsl
jge
mov
xchg
jb
dec
cmc
xor
sbb
sub
push
frstor
fadd
imul
mov
mov
ret
lods
xchg
hlt
jnp
mov
aaa
cltd
es
mov
loop
jp
fmull
push
mov
cmp
xchg
sub
sbb
filds
xlat
jnp
jmp
or
xor
jle
fstpl
iret
xchg
jl
shrb
xchg
dec
notb
add
add
outsl
mov
or
mov
jns
out
mov
movsb
mov
lock
push
inc
xchg
or
mov
lock
rol
cmp
gs
aam
mov
shll
in
aas
cmpsl
xchg
and
cmp
sbb
int3
cs
jb
and
or
mov
push
mov
data16
scas
shr
in
push
add
sbb
arpl
xor
clc
mov
push
stc
cmp
movsl
sarl
repz
pop
loop
lea
dec
push
fadds
jne
cmpsl
sbb
ss
xchg
ret
arpl
jne
cmp
lock
fstpt
inc
cli
jmp
xor
mov
mov
addr16
sub
push
mov
into
pop
stos
cmp
jecxz
xlat
push
popf
mov
mov
pop
adcl
cmc
test
dec
das
pop
lds
in
ja
sub
das
outsb
mov
jl
in
test
popa
test
inc
and
outsl
push
out
fidivrl
in
in
push
jns
xlat
cli
cmp
outsl
incl
xor
outsl
loop
push
fs
pop
or
and
shrb
ljmp
arpl
sub
icebp
lret
mov
push
mov
test
addr16
mov
mov
ret
xchg
mov
insl
pop
ja
inc
in
ljmp
push
xchg
cmpb
sbb
mov
mov
xchg
ret
and
mov
cwtl
push
xchg
adc
xchg
cli
sbb
or
dec
popf
sub
aad
inc
mov
jno
mov
xor
and
mov
movl
mov
jnp
cmp
xlat
fisttpll
daa
dec
xchg
pop
daa
les
xchg
push
lret
dec
movl
sbb
movsb
hlt
pop
mov
fs
daa
in
push
mov
or
adc
and
adc
and
aad
rcrl
clc
push
sub
insb
add
stc
cmp
adc
stc
cmc
pushf
stc
xor
lahf
push
adc
dec
popf
stos
mov
bound
es
sti
fs
lret
clts
cmpl
mov
sarb
rolb
fwait
sub
fldcw
or
outsb
add
je
sti
cltd
dec
mov
jnp
icebp
mov
int
and
insb
sbb
sub
inc
mov
xor
sbb
sbb
filds
test
or
stc
push
loopne
push
shlb
add
mov
out
lcall
push
cs
scas
mov
andl
mov
pushl
rolb
shrb
lods
fwait
stc
or
push
jle
push
xchg
jnp
add
push
or
aad
push
test
pop
gs
dec
clc
andl
in
push
cld
icebp
popw
dec
sahf
sub
lcall
imul
pop
out
sahf
dec
jnp
out
sbb
sti
mov
out
loopne
data16
xor
inc
xlat
nop
cli
mov
iret
sub
push
lret
call
jno
pop
pmaxsw
hlt
lret
xchg
lods
out
jo
adc
pop
adc
cmc
xchg
outsb
popa
orl
sahf
ds
lea
mov
sti
mov
idivl
mov
rorl
and
aas
pop
push
mov
xchg
jno
xor
in
jle
push
insl
or
pop
mov
mov
dec
sbb
xchg
or
add
popf
mov
or
push
dec
push
insb
pop
in
sbb
or
cmp
push
addr16
loop
mov
xor
scas
insl
imul
ds
sbbb
je
jmp
mov
jo
std
das
fs
shll
adc
xorl
add
jae
movsb
adc
xchg
jnp
loop
sbb
pcmpgtd
pop
fstp
dec
xchg
sbb
push
or
add
popa
dec
mov
scas
adc
xchg
xor
fs
push
push
loopne
test
mov
cld
aam
aam
movsl
popa
fisubs
dec
in
xchg
test
out
and
dec
jae
clc
mull
out
notl
stc
xchg
push
das
dec
xchg
add
or
lcall
add
xchg
ja
inc
outsb
iret
jl
lods
pusha
lcall
movsl
jle
add
stos
sarl
mov
and
sub
inc
in
lods
test
dec
popf
mov
dec
and
xchg
addb
pushf
mov
fnsave
sub
push
mov
inc
sti
lods
inc
push
xor
push
sahf
dec
sbb
add
mov
ret
jmp
dec
push
inc
pop
add
cwtl
pop
cltd
cmp
xchg
dec
lds
cmp
punpckhdq
mov
icebp
sub
jmp
out
mov
aas
xchg
aam
and
push
fmull
shlb
int
mov
add
in
adc
aaa
jno
sti
add
out
arpl
das
addr16
cmp
int3
sbb
idivl
in
push
cmp
xchg
xor
mov
adc
sub
mov
rol
xchg
jg
xor
jge
fbld
or
mov
gs
scas
aas
sbb
sti
cld
jp
xor
sti
xchg
lret
sub
js
sbb
dec
and
jb
dec
pushf
and
imul
cmp
outsl
push
sub
push
subl
daa
add
mov
or
and
mov
mov
rorl
add
jecxz
sbb
jae
jmp
sti
in
mov
mov
jno
mov
xchg
jne
stc
aas
or
les
out
dec
xor
push
xchg
and
pop
add
pop
lock
adc
sbb
inc
cmp
inc
add
lret
adc
stc
aad
iret
sub
insb
fxch
xlat
cltd
test
aaa
in
int3
adc
mov
xchg
mov
les
out
je
test
shll
je
in
inc
or
cmpsl
negb
addl
fs
and
ret
imul
outsl
fwait
dec
pop
es
fdivs
inc
ss
mov
into
xor
int
mov
pop
call
sbb
test
fcmovnu
mov
adc
roll
std
jo
sbb
inc
xchg
jae
fcompl
xchg
imul
out
cmp
je
out
mov
cmp
dec
js
push
out
jno
cmc
in
in
loope
mov
push
int
clc
subb
sbb
out
jp
xor
shrb
movsb
in
mov
data16
cmp
inc
dec
fstpl
inc
daa
dec
jo
enter
in
test
cltd
pop
sbb
dec
scas
inc
dec
int
das
xor
or
sub
pop
jno
in
xchg
sahf
xchg
sub
lahf
dec
pop
cmp
int3
std
clc
mov
cmpsb
ljmp
mov
and
call
sub
dec
sbb
xchg
jo
sbb
stos
xor
fcoms
ja
mov
add
dec
or
popf
iret
lea
out
inc
mov
fdivp
cmp
ret
mov
xchg
add
and
jp
test
pop
fisttpll
xchg
test
fsts
das
dec
int3
scas
aam
pop
sub
jg
adc
dec
sti
jl
mov
cmp
sub
xchg
rcll
cmp
ds
jmp
ret
test
xchg
lahf
imul
push
das
mov
hlt
jge
testb
out
sbb
adc
into
mov
and
sbb
test
xor
shlb
mov
shr
mov
psllw
jno
fwait
sbb
mov
mov
xor
jp
mov
adc
mov
jmp
gs
cli
or
imul
cmpsb
sbb
orl
or
test
push
pop
add
lret
ljmp
cld
int3
jg
jns
push
jne
int3
dec
jp
imul
sti
jo
pop
cs
mov
loopne
jns
ret
fnstsw
imul
sbb
js
push
push
and
and
and
out
in
in
stos
movsl
clc
fldenv
push
lret
sbb
mov
mov
push
xchg
mov
int3
and
cmp
stos
cmp
jo
jnp
enter
lcall
in
mov
adc
sarb
test
fs
adc
xor
int3
nop
jo
cmp
sub
sti
or
xor
adc
imulb
sub
sub
decb
outsl
mov
loop
inc
lods
sbb
adc
and
xchg
pop
mov
fwait
imul
cmpsb
pop
popf
mov
notb
xor
xchg
shrl
or
pop
enter
nop
or
mov
push
jnp
div
in
dec
push
dec
jbe
and
rclb
popa
jg
cmpsl
sarl
push
add
or
push
js
cmp
cwtl
cmpsb
xlat
or
mov
data16
imul
fs
pop
insl
fcmove
sbb
jno
mov
mov
iret
jge
and
int
lods
lahf
in
jbe
sbb
mov
aam
fsubs
push
in
pop
aaa
adc
cmp
mov
je
mov
outsb
insb
addb
icebp
pop
mov
mov
iret
psrlw
xor
xchg
or
mov
std
mov
mov
adc
scas
decb
lret
imul
je
call
cmp
ror
repnz
or
mov
in
mov
xor
lods
inc
cmp
or
adc
cmp
out
jp
int
sbb
iret
fistpll
pop
and
xor
inc
bound
push
mov
fsubl
mov
xchg
push
movsl
aad
or
ret
es
popl
push
ja
loope
hlt
dec
xlat
xor
pushf
add
lods
movsl
jl
enter
jbe
pop
pop
dec
and
xchg
lds
in
mov
out
mov
push
scas
in
dec
push
into
adc
andl
xor
fld1
ror
mov
popf
lret
pushf
mov
rcrl
or
mov
push
sbb
jecxz
sbb
rorb
push
inc
push
xchg
fcmovu
pop
stos
inc
cmp
push
call
ret
aaa
mov
in
icebp
call
xor
stos
mov
and
aas
jp
gs
jo
sbb
push
je
jp
sub
pop
dec
pop
cli
xacquire
fdivrs
bound
pop
jno
dec
xchg
xor
xlat
les
mov
mov
imul
push
jbe
std
in
fxtract
add
loop
jnp
mov
enter
or
inc
add
sbb
jle
in
fsubrs
rcll
cmpl
out
testl
loope
nop
or
jp
data16
negb
js
rorb
jmp
lods
int
or
mov
ss
mov
mov
shl
loop
in
xor
and
mov
pop
pop
jb
cmp
shlb
mov
and
les
jp
push
mov
xor
in
and
add
fdivl
inc
pop
dec
inc
cmp
ljmp
jmp
push
notl
pusha
arpl
pushf
adc
std
or
int
int3
fwait
push
std
or
jl
out
lods
ja
xor
pop
repnz
adc
test
jnp
in
rorb
xchg
mov
xchg
xchg
mov
mov
in
inc
lock
and
shrb
mov
orps
arpl
rol
jg
out
or
xchg
popa
lret
mov
das
jp
aad
punpckhdq
fwait
out
inc
xlat
sub
mov
gs
sbb
imul
inc
in
sub
lahf
jo
mov
mov
jo
int3
in
shrl
and
jg
lea
push
rep
in
mov
loope
and
push
ret
scas
fadd
mov
filds
sbb
mov
out
mov
fstpl
addb
xor
pop
xor
dec
stos
sub
icebp
lods
mov
inc
sbb
lret
add
aam
sub
xlat
mov
adc
jb
idivl
jge
jle
pop
lret
scas
jmp
aas
dec
xchg
sub
inc
movsb
aas
xchg
xor
in
ret
mov
pushf
ja
lds
and
mull
pop
loope
push
inc
emms
sbb
mov
repnz
ljmp
icebp
xchg
inc
lret
push
adcb
cltd
mov
pop
xchg
push
xor
in
dec
stos
sub
cwtl
inc
inc
adc
adc
icebp
das
jb
jmp
mov
xchg
out
cmp
inc
xchg
fwait
ss
pop
pusha
loope
sahf
push
push
jl
jl
jno
xchg
xchg
orl
push
or
pop
in
bound
mov
leave
sarb
mov
orb
pop
ja
jo
push
sub
pop
mov
or
dec
dec
pop
and
shll
js
sub
push
mov
cmpsb
xchg
xor
mov
dec
aaa
jno
jbe
dec
xchg
mov
pop
jg
sbb
fisttpll
nop
cmp
sar
mov
mov
add
shl
push
xchg
lret
cwtl
pop
pushf
insb
mov
add
sbb
outsl
mov
das
rorb
cli
pushf
inc
insb
cmc
lods
pop
dec
gs
mov
lcall
adc
or
push
or
xchg
xchg
mov
xor
pop
pop
mov
js
call
push
data16
mov
push
bnd
pop
scas
mov
mov
fildll
sub
mov
bound
pop
cltd
fnstcw
mov
loop
lods
and
cld
jp
and
sub
stos
or
push
sbb
into
cwtl
pop
xchg
push
or
push
sbb
pushf
test
inc
xor
test
popf
fcomps
sub
xchg
scas
mov
sub
mov
fisttpl
push
mov
sub
add
lret
jle
jb
jg
and
js
or
dec
mov
in
repnz
filds
add
test
and
stos
push
xor
xchg
int
insl
adc
and
stos
loopne
test
jg
lea
cmp
out
lock
pop
in
xchg
jp
pop
fwait
mov
les
dec
mov
inc
int3
add
lds
icebp
stos
loopne
fmuls
jmp
push
push
add
xor
inc
bound
push
xorb
cmp
out
aaa
js
dec
cmp
sti
xor
inc
jnp
je
sbb
push
scas
lea
pop
push
sub
iret
inc
enter
in
cmpsb
mov
orb
je
and
inc
and
adc
sbb
dec
cmpsl
movsb
sub
ljmp
gs
rcl
lret
or
xor
sub
xchg
adc
inc
xchg
and
and
mov
add
fidivl
sub
int
sbb
aad
jno
sbb
inc
nop
fdivrp
or
movsl
inc
mov
scas
inc
cli
push
sbb
cmc
testb
fwait
inc
js
adc
jecxz
testb
xlat
lret
cmp
hlt
insl
mov
xor
push
insl
push
jle
adc
push
xlat
push
or
ficomps
sti
mov
push
shrb
pop
js
sub
xor
add
mov
je
call
negl
mov
fidivrl
push
xor
jns
shll
xchg
int3
fstps
lock
xor
push
movsb
cmp
in
lods
inc
mov
addr16
cwtl
push
cmp
or
test
sbb
dec
adc
and
xlat
xor
fcoms
pop
imul
sub
loope
push
mov
push
pop
cmp
xchg
xchg
xchg
nop
and
cs
movsl
scas
or
cmp
and
mov
stos
sbb
je
pop
stc
cwtl
gs
mov
fimull
add
shll
and
pop
xor
lods
cmc
pop
jbe
jae
adc
mov
enter
cmp
stc
push
gs
pop
and
inc
rol
ja
es
clc
cltd
cmp
out
jle
jp
mov
ljmp
push
dec
mov
rclb
bound
push
dec
and
mov
out
xchg
insl
outsb
xlat
lret
sbb
bound
jecxz
jno
mov
out
push
push
andb
decl
jns
and
imul
push
lret
jae
js
sbb
daa
or
jnp
fsubs
pop
sar
fadds
lcall
xchg
mov
rclb
push
fisubrs
mov
xor
call
scas
pusha
or
icebp
xor
mov
mov
data16
int
cmpsb
sub
arpl
push
dec
dec
int
or
add
popa
dec
cltd
loope
inc
and
aad
and
ss
push
je
mov
mov
bound
bnd
sahf
fwait
cmp
adc
jg
bound
cmpsb
dec
jo
bound
cltd
push
pop
mov
pop
sbb
pop
dec
bnd
out
scas
mov
mov
pop
aam
pop
mov
xchg
push
or
add
mov
or
cwtl
roll
incb
add
addr16
scas
cmp
rolb
push
or
dec
inc
repz
jge
pop
sarb
lods
mov
ficoms
inc
cmpsl
in
daa
add
cmp
popa
xor
sbb
imul
lahf
jns
sbb
mov
fsubrp
adcl
js
test
les
mov
pop
mov
leave
movsb
mov
stos
outsl
sbb
int
push
leave
mov
and
sub
pusha
or
cs
sbb
rorb
sub
out
or
lods
mov
vminps
jg
cwtl
dec
fwait
push
xchg
and
jne
aam
lock
aas
dec
adc
mov
ffreep
and
jo
xchg
xchg
dec
dec
and
inc
out
sbb
je
pop
adc
test
cmp
fisubrl
dec
dec
fcompl
testb
mov
fmull
orl
out
and
pop
sub
sbb
jmp
js
cmp
out
test
mov
cmp
push
cs
ja
aam
dec
mov
sbb
xor
xchg
addr16
mov
jo
lock
mov
and
fistpll
inc
jns
aad
lret
jnp
sahf
sbb
jno
jno
add
jns
dec
xchg
lcall
divb
hlt
fidivs
adc
mov
push
rcl
cwtl
xor
ficomps
lret
sbb
lock
rclb
aaa
outsb
ljmp
pop
sbb
jnp
mov
test
jmp
mov
xchg
loope
cmp
push
xor
inc
std
aaa
cli
addr16
fsubr
mov
mov
sbb
gs
ds
cmp
xor
adc
repz
cmp
addb
and
xor
subb
andl
shll
insb
inc
xor
adc
addb
das
ljmp
mov
push
test
addl
push
pop
push
sub
xor
pop
xor
push
pop
inc
inc
mov
aad
scas
sarb
jae
in
test
adcl
dec
mov
cli
mov
xor
jmp
xchg
out
sahf
ds
jnp
push
pusha
movsl
je
outsb
add
sbb
fbstp
mov
push
jae
dec
call
pop
dec
jae
pop
test
cmp
and
aaa
jbe
aas
cmpsl
xor
push
push
mov
mov
push
int3
mov
or
jnp
shl
xchg
rcr
mov
add
rcrb
fldl
cli
repnz
int3
xor
add
faddp
insb
rolb
adcb
xlat
sti
call
and
jne
adc
mov
jle
sub
movsl
rclb
outsl
mov
jle
xchg
mov
push
and
push
push
pushf
push
sub
mov
pslld
inc
rcrl
daa
lds
sbb
fmulp
cmp
fdiv
push
dec
xchg
mov
nop
dec
dec
sub
jp
out
push
idiv
mov
mov
nop
ffreep
lds
pop
lods
push
add
aaa
sahf
inc
cmp
mov
insb
cmp
rorb
and
cmc
sbb
repnz
das
cmp
comiss
hlt
std
cmp
repz
mov
xchg
pop
outsb
xchg
data16
dec
jge
gs
and
push
fucomp
push
fcmovne
cmp
mov
mov
fwait
xor
sbb
out
imul
pop
mov
xchg
cltd
push
cwtl
push
mov
xor
dec
mov
fimuls
jbe
lds
outsl
notl
dec
mov
popf
lret
mov
adc
insl
xor
loop
orl
sahf
mov
test
nop
xchg
pop
imul
stos
sub
sub
push
sbb
xchg
cmpsl
mov
pop
outsb
jns
in
in
je
xchg
xchg
popa
mov
dec
outsb
adc
stc
out
movsl
cli
loop
stc
xchg
push
in
in
xchg
ret
mov
ret
xorl
ds
fists
push
and
xchg
inc
test
mov
mov
mov
pop
mov
stos
loopne
xchg
cld
or
call
lock
adc
dec
iret
jg
fidivrl
cld
ret
sbb
lahf
aas
cmp
mov
test
bound
jne
fnstsw
dec
sbb
loop
fcoms
mov
xchg
and
loopne
pop
dec
je
inc
mov
adc
sub
sahf
jmp
mov
jne
popf
and
xchg
pop
test
inc
sti
ret
outsb
mov
inc
jmp
es
sarb
sub
mov
xchg
stos
cs
stos
mov
pop
dec
lea
mov
icebp
mov
dec
mov
inc
inc
inc
leave
lods
cmovo
hlt
sbb
nop
cmc
test
push
loopne
pop
imul
mov
cmp
pop
sub
xchg
stc
pop
add
inc
xchg
dec
stc
jmp
aam
and
inc
sbb
sub
mov
inc
dec
cmpsl
nop
mov
adc
les
pop
dec
popa
loopne
clc
out
cmp
and
xor
xchg
xor
jo
jno
test
daa
mov
dec
sbb
neg
adc
push
cs
call
sub
fidivs
pop
mov
fldt
pop
adc
sbb
mov
stos
movsl
lret
mov
ss
sbb
cmpsb
in
xchg
gs
shlb
cmp
fistpll
push
or
push
lea
add
test
dec
lahf
jl
lock
push
ds
pop
cmc
sar
jge
fimull
add
mov
pop
push
fcmove
int
mov
movsb
orl
xor
mov
jg
pop
addb
xchg
sbb
or
dec
and
adc
and
inc
ss
mov
jl
test
mov
xchg
out
popa
cmc
mov
jns
test
aad
mov
movsb
xchg
and
mov
lcall
or
mov
cmc
xchg
or
ds
call
jp
mov
jb
mov
adc
adc
sub
xchg
fbstp
and
sub
push
loop
pop
mov
out
lret
cmpsl
ret
lret
pop
jl
std
mov
mov
out
mov
pop
cmp
mov
pop
cmc
inc
adc
es
je
adc
in
inc
push
mov
jl
lock
insb
sbb
lcall
xor
mov
cmp
call
pop
mov
enter
mov
sub
jb
js
and
push
push
adc
mov
dec
sub
sbb
jge
add
shl
xchg
pop
pop
les
fcmovnu
add
lret
pushf
jg
mov
add
icebp
push
movntq
pop
push
or
orl
cmp
and
add
shll
adc
std
orl
xor
sbb
push
dec
sub
fwait
sub
sbb
sbb
lock
xor
push
mov
and
fcmovu
push
cmpsb
outsl
jge
adc
fucomi
xchg
in
lcall
xchg
fs
mov
fcoml
mov
jno
dec
mov
mov
pop
mov
dec
aaa
cmp
bound
adc
subb
mov
daa
in
ret
movsb
test
test
xchg
fcoml
sub
jl
sbb
insl
sbb
dec
mov
iret
mov
xor
cmp
gs
xchg
jecxz
fwait
lds
pop
js
mov
push
fcmovne
testl
sti
or
sbb
call
mov
lods
inc
mov
pop
cmp
outsb
imulb
mov
jbe
mov
pop
inc
xlat
divb
add
pop
and
add
lods
je
cmpsb
cmc
cmp
gs
sarb
sbb
sbb
jmp
sbb
cmp
jge
jb
aam
push
stos
sar
xchg
movl
cli
scas
xchg
iret
push
ljmp
outsl
push
xor
pop
mov
fdivl
ret
scas
test
push
in
incb
push
mov
idivl
push
int3
andb
ror
dec
out
pop
xor
sbb
test
stc
and
xchg
loope
inc
pop
push
xchg
lahf
xor
jl
pop
je
je
mov
mov
dec
adc
mov
xor
push
icebp
ret
mov
in
std
or
cmp
jnp
ss
cmc
pop
int
or
dec
mov
ds
dec
stc
xor
fldenv
in
adc
out
sbb
mov
clc
xor
cmp
sbb
mov
xchg
adc
cs
fisubl
ljmp
and
mov
xchg
push
xchg
in
lods
mov
cmp
adc
in
andl
mov
fwait
mov
in
push
ret
push
mov
out
xor
or
jp
mov
rorb
xor
sbb
dec
jb
aas
scas
mov
pop
lcall
cwtl
ffreep
add
insb
mov
repnz
dec
lret
pop
xchg
inc
lds
mov
add
in
mov
push
stos
test
inc
jns
sbb
imul
xor
cs
ret
je
mov
mov
dec
jne
and
das
ja
pop
adc
ja
and
leave
xchg
popf
cltd
cltd
fimuls
adc
dec
test
sbb
ret
xchg
mov
in
mov
mov
imul
sbb
inc
sbb
dec
mov
ljmp
je
sbb
popf
mov
dec
jp
int3
stc
pop
jne
into
addr16
ja
adc
iret
into
push
adc
popa
and
mov
sbb
pop
add
mov
sub
pop
pop
dec
sarb
dec
nop
decb
mov
sahf
cmp
xchg
sub
push
push
decb
cltd
sbb
fnstenv
pop
daa
xchg
push
pusha
cmp
iret
ret
inc
mov
jno
sub
pop
lods
push
and
std
test
out
pop
out
mov
addr16
aam
add
outsb
push
addl
mov
roll
jl
das
mov
ret
mov
pushf
loope
mov
fucomp
data16
add
and
shlb
mov
push
mov
cmpsb
mov
in
cmpsb
push
jnp
int
push
push
mov
lock
mov
imul
bound
cmp
repz
fcomp
cmp
push
aas
pop
fadds
mov
stos
jae
aaa
add
dec
repz
repz
lahf
pop
notb
pop
or
add
xchg
sarl
imul
mov
test
or
adc
or
sub
outsl
fadds
jmp
dec
sbb
outsb
and
movsl
adc
push
inc
outsl
cmp
outsb
inc
les
cmp
aas
ret
inc
fcmovnu
pop
xlat
loop
das
shll
out
cli
ss
mov
lea
dec
sub
adc
cltd
pop
xchg
sub
pop
cli
add
add
jl
pop
xor
push
testb
lret
stos
cltd
xlat
lahf
xchg
jnp
push
push
je
or
add
leave
lahf
test
add
inc
and
xor
adc
out
fstps
dec
in
repz
push
andb
in
loope
ret
mov
dec
sub
and
inc
fidivrs
cmp
aad
std
dec
hlt
call
xchg
iret
adc
test
xor
dec
lret
dec
and
shrl
shl
lock
sahf
cs
sub
outsb
inc
test
mov
ret
sarl
lods
cmp
hlt
or
xchg
and
test
pop
cmp
ret
mov
mov
fcoms
jmp
shll
add
arpl
out
mov
dec
cmpl
jbe
mull
mov
sub
loop
pop
enter
in
sub
add
clc
mov
add
jae
shl
fiadds
mov
dec
inc
movsb
jecxz
faddl
dec
call
outsb
xor
out
stc
inc
sub
dec
int
jge,pt
shlb
push
and
lock
iret
pop
enter
cmp
adc
les
ret
cmc
scas
das
jmp
dec
and
loopne
adc
imul
adc
adc
push
mov
inc
fists
fimuls
aas
cmc
sbb
inc
inc
daa
xor
andl
xlat
mov
pextrw
cmp
mov
inc
divl
dec
dec
push
dec
xchg
js
jp
mov
test
adc
xchg
pop
cmp
repnz
xchg
cs
mov
add
mov
out
xor
mov
setp
or
test
ljmp
mov
xorl
lods
cmp
aas
repz
int3
nop
fisubl
es
and
push
fwait
loop
frstor
jmp
lods
push
cs
add
fwait
and
pushf
sub
mov
daa
or
adc
mov
mov
push
rolb
and
loope
cmpsb
xchg
dec
mov
movsb
shll
sbb
adc
es
pop
pop
aas
out
mov
sbb
mov
shl
sbb
xchg
psubusw
repnz
pop
add
lret
test
adc
sub
dec
into
wbinvd
xchg
loopne
cmp
push
adc
repz
sbb
mov
pop
dec
cmp
mov
adc
jle
jne
xor
in
scas
dec
stc
cmc
test
imul
cli
adc
and
push
nop
xor
in
addr16
out
in
inc
and
or
outsb
mov
movsb
clc
in
scas
addl
or
sub
jo
push
xor
push
push
rcr
adc
mov
push
push
insb
int
in
jecxz
sbb
aad
clc
loopne
push
out
jle
scas
stc
std
add
mov
mov
aam
outsb
inc
pop
in
clc
data16
push
loop
fisubrl
push
and
xchg
dec
push
sbb
shll
cld
pop
testl
jmp
or
cmpsl
mov
inc
jmp
sti
or
call
xchg
add
mov
push
shl
arpl
mov
out
pushf
xchg
add
std
pop
or
pop
and
inc
fistps
lcall
pop
les
add
push
lods
in
dec
jbe
ja
hlt
xor
jp
pop
mov
out
rol
divb
sbb
sbb
sar
arpl
push
mov
push
clc
bound
jg
push
cmc
xchg
fidivl
test
pusha
adc
int3
mov
jae
adc
test
fisubrs
rol
cs
xor
lahf
shl
jne
xor
inc
fnstsw
mov
pop
add
fs
xchg
idivb
lods
sbb
mov
xchg
fwait
aaa
fisubrl
mov
dec
lcall
pop
pop
ss
and
fildl
mov
mov
jbe
cs
and
in
inc
jns
rcrb
sub
dec
dec
imul
mov
or
jmp
mov
inc
je
std
loopne
jb
leave
xor
push
push
and
notb
loopne
fisubs
jmp
andl
cmp
jnp
hlt
sub
push
or
repz
fsubrs
add
dec
test
mov
mov
cmp
pop
push
pusha
aaa
repnz
inc
adc
fdivr
jbe
push
fnstcw
cmp
mov
sub
inc
movsb
mov
push
sub
stos
fdivrs
loopne
jbe
or
call
sub
mov
aam
dec
or
inc
and
push
jns
mov
inc
in
repnz
cmpsb
clc
movsb
and
dec
hlt
push
push
call
pop
out
fidivs
rorl
mov
jb
fistps
adc
push
fcmove
add
ret
in
or
movsb
in
flds
mov
jnp
adc
ror
cmpxchg8b
iret
xchg
xor
movsb
int
mov
jbe
loopne
int3
sbb
or
andl
fldt
mov
sti
jbe
or
push
repnz
cmp
stos
movsl
dec
aam
cmp
loopne
xlat
mov
mov
jb
inc
mov
pop
in
xlat
ljmp
negl
shlb
sub
jbe
imul
adc
fmul
out
push
fneni(8087
adc
imul
pop
out
inc
or
ret
test
sahf
daa
pop
adc
inc
xor
outsb
sbb
adc
sub
outsl
push
pop
sub
mov
out
ljmp
push
inc
cmp
inc
mov
adc
and
subl
out
aam
adc
cmp
push
mov
imul
pop
inc
xchg
xchg
inc
loopne
dec
enter
rol
inc
dec
xor
pusha
outsl
xorl
jge
ficomps
jge
or
cmc
imul
xadd
or
das
out
shlb
inc
shrb
outsl
jl
mov
pop
push
gs
push
imul
sbbb
arpl
jp
ret
jle
jo
fildl
and
adcb
or
xchg
ja
adc
xchg
mov
xchg
cwtl
std
and
fldl
push
clc
test
roll
add
cmp
mov
or
sub
xchg
popa
xor
es
repnz
push
adc
test
adc
add
jp
pop
nop
hlt
xchg
shlb
cmp
pop
mov
push
cmpsl
jg
dec
mov
pop
inc
iret
shll
filds
xor
jno
adc
shrl
add
lock
jp
lods
subb
fdivrs
mov
std
scas
repnz
and
cmp
or
pop
sub
out
jmp
and
jo
mov
xor
and
sbb
div
in
cli
lds
fsub
mov
jl
std
in
cmp
outsl
pop
and
jno
scas
sahf
dec
cmp
ja
js
and
fstl
imul
bound
jns,pt
add
xchg
loopne,pn
jns
push
stos
int
js
pop
clc
aad
and
orb
mov
mov
scas
loopne
jge
pop
push
xchg
scas
lcall
cltd
push
into
pop
push
push
add
insl
jb
sub
jmp
mov
cmp
iret
dec
dec
cmpl
add
push
mov
add
stos
out
cmc
adc
pop
int
push
and
and
push
leave
sbbb
mov
enter
cmp
push
inc
jge
ror
fcoml
pop
arpl
fdivs
gs
ss
sub
jp
mov
out
sub
jl
xorl
mov
outsb
dec
adc
daa
data16
addr16
arpl
xor
ds
dec
fwait
mov
lret
xchg
stos
mov
xchg
scas
repz
mov
or
sbbb
in
gs
fstpl
xor
lret
out
mov
add
mov
sub
dec
sti
sbb
mov
mov
dec
je
dec
adc
push
push
jp
pop
je
mov
loop
fmuls
fidivl
pop
add
js
insl
dec
push
loop
dec
or
lds
ficompl
int
rcll
std
xor
into
fs
fsts
sub
pop
mov
daa
push
jb,pn
push
dec
cmpsb
cmpb
pop
fdivs
mov
fisubrl
mov
push
and
sbb
in
xorb
mov
test
loopne
call
jb
iret
pop
jb
pop
mov
mov
lret
mov
and
dec
in
sub
cmpsb
std
sbb
push
hlt
testb
loop
push
cmp
lahf
movsb
int
ds
into
cld
mov
mov
lcall
cmp
sahf
aad
stos
cltd
sub
cmpsl
ljmp
push
xchg
jmp
xchg
fisubl
sbb
pop
loopne
xor
lods
cld
repz
pop
and
insb
decb
test
insl
push
scas
and
sbb
push
xchg
push
scas
loop
adc
daa
adc
insb
lock
mov
pop
xor
mov
xchg
arpl
test
insl
cmc
jmp
inc
sbb
sbb
popa
shl
xchg
mov
cmp
faddl
push
int
mov
jno
push
into
loop
cmp
cltd
pop
fistps
dec
pop
cli
aaa
sub
xlat
cmpsb
outsb
arpl
fstps
push
loop
rorl
push
icebp
fists
sub
add
rcrb
insb
cmpsl
mov
cltd
mov
push
jae
add
aas
jae
or
shrl
dec
or
int3
ja
test
fdivrs
dec
out
lods
call
jge
pop
xchg
xor
xchg
push
fidivl
fsubr
mov
add
insl
mov
or
call
sbb
gs
xchg
dec
jg
mov
jmp
add
and
mov
pushf
outsb
jne
mov
leave
insl
jmp
loop
les
jno
testb
lahf
and
into
mov
jecxz
rolb
jns
or
int
mov
push
xor
nop
push
mov
loope
lret
push
jge
dec
and
cmp
mov
jg
xchg
iret
push
or
xchg
mov
ficoms
dec
call
andb
push
popf
lahf
pop
push
xor
mov
mov
lods
jnp
push
and
ror
push
dec
xchg
pushf
insl
jge
mov
bound
sbb
cmc
or
inc
sbb
adc
rcrl
cli
int
or
ds
jno
sti
in
lahf
pushf
stc
dec
add
push
push
or
xlat
mov
mov
dec
dec
mov
pop
mov
popa
jle
push
mov
xor
lock
push
push
jo
in
jae
jg
fwait
call
xlat
sbb
pop
jnp
push
push
mov
sti
filds
lods
rcr
mov
jge
push
rorl
mov
arpl
lahf
or
shr
add
mov
push
add
jnp
fwait
popa
cmp
and
xchg
jae
aam
lcall
lods
ja
stos
sbb
cmp
or
cmpsl
xchg
jns
addr16
adc
pushf
lcall
add
movsl
xchg
test
sbb
push
nop
dec
movsl
std
xor
add
out
clc
xchg
iret
sti
mov
std
out
push
cmpsl
and
nop
lds
and
inc
xchg
clc
pop
sahf
lock
aad
jle
dec
mov
lea
jl
insl
cli
iret
lock
jnp
adc
adc
je
sbb
sub
push
lahf
cmp
cld
cld
mov
fldt
push
pop
lods
or
dec
cmp
add
dec
mov
xor
cwtl
add
sbb
mov
jb
clc
cmp
loopne
sub
int3
xor
imul
iret
js
jns
movsb
mov
imul
push
mov
pop
outsl
call
jns
and
pushf
mov
popf
xchg
scas
xor
fldt
test
lret
mov
jle
cmc
imul
add
or
je
or
cmp
xchg
sub
pop
push
pop
sub
call
lret
xchg
cmp
cmpsl
cmp
xor
jl
xchg
shlb
out
aas
leave
add
adc
fstcw
imul
or
in
sub
pop
jno
jp
popf
xor
aaa
add
cmp
enter
outsb
and
add
sbb
mov
mov
mov
mov
lret
aam
fs
jmp
mov
mov
mov
jae
scas
push
scas
lahf
pop
xchg
push
loopne
mov
adc
js
sti
cltd
shrl
xchg
pop
and
adcb
stos
data16
int
outsl
shll
test
fdivrl
inc
xor
movsl
insb
ljmpw
scas
xlat
test
pcmpeqb
add
sbb
fs
sbbb
rorl
xchg
dec
xor
mov
dec
fimull
pop
pop
jb
icebp
gs
and
pop
lods
xor
pop
stc
or
jne
sub
dec
testl
push
inc
cmp
rorl
ljmp
sbb
into
cmp
out
inc
add
pop
fsub
fstps
pop
enter
dec
sub
sbb
xor
mov
test
movsb
dec
das
fwait
lar
sbb
test
dec
inc
int
loopne
dec
xchg
loope
add
pop
mov
in
icebp
and
sahf
adc
leave
or
add
js
movsl
imul
dec
lods
or
ds
jecxz
loopne
mov
adc
les
adc
dec
je
popf
inc
je
in
mov
in
pushl
pop
jb
lea
mov
mov
and
mov
adc
or
jo
shll
xchg
ja
cmp
out
popa
fwait
jno
add
add
add
or
in
push
stc
int3
push
jbe
sbb
sub
xchg
aas
cmpb
mov
xchg
shll
stos
jp
jl
or
setg
nop
push
adc
test
flds
xlat
fstpl
push
xor
ret
sbbb
or
or
mov
fildl
push
xchg
jae
jmp
es
mov
jle
fimull
inc
std
fdivs
in
mov
sub
sbb
pop
xchg
mov
jnp
push
push
sbb
xlat
cmp
pop
fldln2
cltd
imull
lret
xlat
mov
xor
and
dec
mov
imul
inc
fcmovnbe
insb
in
mov
scas
leave
jp
pop
pop
add
mov
sub
and
test
pop
daa
out
and
lret
dec
mov
adc
dec
cmp
fsubrs
jle
fnsave
mov
dec
les
test
iret
pop
in
rolb
push
ret
ret
cmp
fldl
dec
fwait
xchg
loopne
mov
mov
jno
fwait
loop
enter
jle
push
daa
fstpl
mov
cmp
daa
adc
fisttpll
mov
mov
stc
push
ljmp
imul
rcr
jnp
and
mov
sbb
add
push
jnp
and
scas
push
lods
mov
test
add
ret
je
js,pt
mov
pop
fwait
xlat
fdivl
out
mov
mov
jge
enter
jns
outsl
pop
mov
out
mov
jae
aas
sub
inc
daa
sahf
ja
lea
lret
outsb
push
pop
sub
sub
insl
roll
push
cmp
mov
mov
jae
push
sarl
out
cmp
sbb
cs
push
mov
leave
out
leave
adc
push
sub
icebp
aad
aas
lds
jg
mov
cmp
xchg
dec
inc
mov
cwtl
test
pusha
jne
and
rol
push
cmp
lds
lea
psrad
lods
inc
inc
rcrl
repnz
and
push
in
je
ja
cmpsl
loope
dec
dec
mov
fnstcw
mov
dec
in
ret
xor
arpl
xchg
stos
dec
adc
mov
pop
jg
fsts
lahf
cmpsb
jnp
mov
jmp
mov
xor
std
imul
xchg
aaa
mov
ret
fdiv
mov
out
mov
fstps
scas
cmpsb
xchg
repz
aaa
inc
jae
cltd
mov
insb
mov
out
inc
shlb
dec
mov
stos
push
xlat
mov
rolb
fcmovne
or
push
mov
sub
shrb
mov
aas
sbbl
mov
xor
jg
jmp
mov
jns
rcrb
mov
inc
ret
lds
cmpb
jo
jne
aas
push
fistps
in
call
mov
test
inc
sub
cmp
sbb
mov
jae
xor
sub
cmp
dec
sub
into
movsl
push
sbb
sub
jns
mov
jle
adc
push
lret
mov
xchg
repz
hlt
xlat
inc
js
daa
xor
orb
xor
icebp
ljmp
int3
inc
mov
shlb
mov
test
sub
xchg
cmpsb
fildl
scas
push
sub
xchg
inc
jnp
mov
fs
and
sti
mov
es
push
dec
test
ja
jnp
ljmp
and
sbb
out
push
mov
jns
das
pop
xor
and
pop
push
xorb
mov
rolb
test
inc
cmpsl
mov
pop
scas
pop
jns
jo
adc
add
pop
adc
jne
outsl
dec
loop
add
fs
es
test
push
movsb
mov
hlt
fs
cs
mov
jge
sub
or
or
ds
sub
mov
push
jmp
int
push
adc
cmp
sub
mov
scas
xor
icebp
or
pushl
pop
xchg
loop
fildl
mov
dec
sbb
pushl
mov
mov
push
push
jns
push
add
fsubr
push
movsl
test
lret
jle
outsb
dec
outsb
out
xchg
mov
cmp
push
rcrl
fsubr
lcall
sarb
out
mul
int3
aas
scas
inc
lds
nop
xchg
mov
call
or
aad
iret
es
pop
xor
stc
fsub
cmp
cmpsb
mov
jo
adcb
ljmp
enter
sahf
subl
or
mov
ja
inc
mov
adc
push
inc
mov
sub
xchg
mov
iret
and
dec
cmp
std
cmp
ljmp
sarb
loop
sbb
in
jae
scas
out
leave
dec
dec
data16
mov
lcall
sbb
dec
sahf
sub
movsb
add
jl
fcompl
sbb
rclb
call
loope
push
add
bound
jmp
out
and
xor
ffreep
cmp
cltd
push
scas
jp
cmpb
int
pop
das
subl
mov
fyl2x
stos
ficomps
cmc
subb
out
js
or
jo
pop
cld
hlt
icebp
cli
sbb
ret
mov
sbb
push
inc
lods
es
mov
loop
cmp
arpl
mov
add
cwtl
add
xchg
add
movl
in
outsl
push
jecxz
pop
ss
imul
mov
cs
shrl
lock
fdivr
stos
adc
pop
mov
cmp
je
mov
pop
inc
xor
dec
popf
add
or
popf
jle
mov
jne
inc
testl
or
ffree
leave
add
loop
adc
push
inc
mov
or
pop
mov
and
decl
and
push
inc
xor
mov
sarb
lods
fmull
lea
das
xchg
dec
dec
jl
push
push
mov
sbb
xchg
adc
push
notl
pop
and
mov
cmp
push
jno
push
or
adc
cmpsb
aam
sarb
shlb
mov
mov
pop
add
popa
mov
sub
dec
js
xchg
jle
jg
sub
jne
rcrb
jecxz
in
mov
or
xchg
fbld
ret
sbb
push
xor
cmp
outsb
mov
into
adc
pop
sar
push
cwtl
adc
xor
lcall
push
ds
dec
and
icebp
std
fs
cwtl
ja
ljmp
adc
fldl
dec
or
xor
pop
dec
mov
push
push
arpl
inc
pop
and
push
lahf
cltd
sbb
loope
xchg
xchg
test
hlt
js
stos
rolb
mov
and
data16
ss
jmp
push
rcl
dec
sbb
and
lahf
xchg
aad
jge
sarb
cli
ljmp
push
fldt
dec
inc
les
xor
xor
and
push
and
jg
ja
sub
in
inc
daa
push
out
ss
fcompl
jmp
bnd
repnz
mov
adc
mov
subl
jnp
mov
sbb
nop
mov
stos
and
loope
jp
push
cmc
ret
cmp
inc
subb
push
cltd
pushf
pop
add
push
data16
sub
lcall
add
jnp
dec
dec
inc
lcall
mov
lret
mov
xchg
sub
sbb
sbb
ret
lods
inc
pop
and
int3
hlt
cmpsb
dec
or
adc
repz
mov
sbb
push
xchg
sbb
call
jb
and
stos
xor
mov
int
bound
imul
mov
hlt
mov
mov
push
arpl
dec
and
jmp
imul
sub
jmp
leave
arpl
iret
sarl
and
lcall
mov
adc
adc
in
or
or
mov
imul
add
cmp
pop
rclb
mov
cmp
mov
xchg
std
xor
mov
out
stc
sub
mov
xor
ficomps
mov
jns
cli
cltd
test
mov
xchg
rolb
dec
pop
je
inc
in
or
in
inc
loopne
repnz
shll
cmp
xchg
mov
idivl
jp
orl
jno
daa
mov
mov
jbe
in
out
sahf
mov
out
rorb
in
pop
fwait
rcr
ss
fistps
roll
cmpsb
leave
sbb
sbb
int
cmpl
add
in
push
aaa
jb
ffreep
push
loopne
lods
pop
addr16
sub
pop
stos
fistl
mov
in
mov
xor
cmp
leave
ja
xchg
inc
test
mov
adc
adc
loop
addr16
cmp
or
inc
dec
pop
gs
sub
fs
xor
push
test
adc
jo
mov
dec
jle
popf
mov
and
shll
test
lahf
fisttps
mov
cmpsl
push
pop
mov
push
cmpsl
aad
je
or
push
xchg
pop
aaa
sbb
fisttpl
gs
enter
mov
jle
cld
mov
pop
push
mov
xor
lea
je
fimuls
mov
cs
jno
insb
test
lods
shll
push
fcmovb
xor
sbb
mov
daa
cli
jp
xor
enter
shl
mov
jg
mov
and
pusha
scas
ror
cmp
mov
pushf
test
repnz
xchg
fldcw
lds
xchg
dec
pop
mov
lahf
adc
add
lds
sahf
and
jbe
mov
test
xor
cmp
fs
mov
push
cmpsl
push
lahf
adc
fisubrl
jns
jl
push
and
ficomps
rolb
popa
loop
imul
pop
sti
or
cmp
ss
push
mov
mov
fs
inc
dec
and
mov
jecxz
ss
adc
cmp
data16
lret
ss
arpl
cmc
xchg
scas
push
lods
mov
shlb
mov
nop
jne
das
stos
out
jmp
test
and
mov
outsl
jp
mov
lock
pushf
arpl
test
aas
inc
ss
sub
mov
daa
jb
pusha
stos
insl
mov
fs
leave
fistl
fdivrl
pmulhuw
idivl
int
push
arpl
rcrb
fisubrs
cmp
cmp
sub
xchg
or
sub
ljmp
into
mov
in
sbb
or
lahf
add
les
sbb
jns
fwait
stc
mov
mov
arpl
push
fldt
mov
push
ja
add
insl
mov
lret
mov
hlt
aad
jge
shrb
out
daa
das
adc
repz
xchg
push
or
cltd
cltd
popa
cld
cmp
scas
inc
pop
call
shlb
repnz
mov
stc
xor
dec
sub
push
pusha
xlat
sub
xor
mov
jbe
test
ja
lods
jns
inc
mov
nop
popa
imul
dec
push
mov
daa
cltd
sub
in
cs
mov
and
std
fsubr
sub
fcoml
jbe,pn
mov
mov
cwtl
push
aaa
mov
stc
jecxz
mov
push
cmc
stos
push
ja
incl
sub
lock
test
mov
and
mov
es
fdivrs
xchg
pop
cmp
pop
mov
jg
fdivl
sbb
test
loopne
mov
xor
jo
lahf
jno
cmpsb
aaa
lock
sbb
mov
bswap
sbb
sarb
inc
and
sub
divb
gs
mov
shr
push
int3
jne
pushl
es
jnp
add
push
roll
push
mov
adcl
pop
int3
mov
aad
jno
insb
sub
and
lcall
mov
in
inc
shlb
jle
jp
adc
dec
dec
orb
sbb
cld
ret
les
push
pushf
inc
sbb
sbb
adc
lret
shlb
or
mov
lock
push
aad
insb
lea
xchg
and
dec
pop
push
fsts
lods
xlat
stc
add
ret
lcall
in
jo
mov
dec
mov
imul
cli
push
je
roll
mov
push
cmp
pop
sbb
xor
xchg
lret
addb
cmpsb
sub
mov
jne
in
cmp
sub
inc
enter
hlt
das
jge
mov
daa
add
repnz
std
mov
add
push
inc
mov
cmp
int3
add
mov
inc
movsb
cwtl
or
stos
xchg
mov
lock
xorl
inc
pop
dec
or
or
inc
fisttpll
in
in
rcrb
adc
lods
insl
outsl
mov
fdivrl
imul
mov
pop
push
sbb
in
out
shr
sub
aaa
fnstcw
mov
fdivrl
shl
jg
cld
mov
dec
lcall
cmpsb
pop
cltd
lock
rorb
cmp
loope
pop
addl
inc
call
sbb
add
inc
xor
out
cwtl
xchg
inc
fxch
nop
mov
pop
outsb
pusha
ror
pushf
sub
xor
mov
pop
mov
cltd
cmpsl
or
push
hlt
pop
push
push
shlb
fidivl
cmp
mov
cmc
sbb
stos
adc
std
aad
xor
lret
sub
lcall
cmp
jnp
or
out
pop
scas
push
int3
in
fdivl
lahf
jnp
ljmp
fidivl
inc
push
js
pop
cmpb
push
test
rolb
aaa
jnp
sti
ds
lcall
mov
stos
inc
divl
stc
add
sarb
cmpsl
fidivrs
mov
mov
ljmp
dec
and
rcr
adc
mov
inc
mov
inc
pop
scas
mov
jle
push
lock
cli
mov
jl
imul
popf
imulb
push
repz
in
test
add
inc
mov
dec
popf
ljmp
ret
stos
adc
int3
or
inc
mov
fs
jmp
insb
jmp
push
xchg
in
leave
xchg
xchg
scas
sbb
cmp
inc
mov
stos
jmp
pop
mov
add
add
jl
daa
popf
aas
and
mov
shll
add
mov
loopne
adc
dec
shr
loop
aas
jecxz
test
pushf
xchg
loop
cmp
xor
mov
sub
jbe
xchg
cmc
bnd
push
cld
add
cs
mov
xchg
adc
cltd
aam
fisubs
cmpsb
hlt
adc
daa
orl
jbe
popl
int3
out
test
push
rcrb
mov
sahf
cmc
jno
cmpsb
shlb
mov
or
push
gs
and
xor
fadds
ja
inc
fwait
pop
imul
scas
bound
pop
inc
jae
and
jnp
xor
add
ljmp
mov
adc
in
loop
mov
or
scas
add
rcrl
das
in
aaa
lret
mov
add
adc
jge
lret
cmp
lcall
rcl
and
sub
mov
addl
pop
push
jno
out
pushl
pop
pop
mov
cmp
mov
dec
jno
ficomps
cmp
loop
pop
dec
jns
lea
out
mov
push
or
shl
idivl
lcall
fwait
xor
or
not
or
add
movsb
dec
jg
or
or
pop
jecxz
mov
mov
add
xor
arpl
ret
ret
mov
or
cmp
dec
ljmp
mov
fwait
adc
mov
insl
jecxz
fcmove
lods
icebp
lret
aas
std
movsb
mov
inc
das
lds
xchg
adc
push
cmp
mov
mov
mov
mov
lcall
jp
push
jns
dec
mov
into
and
out
jle
mov
push
in
bound
call
push
pusha
xchg
fisttps
xlat
ret
insb
xchg
xchg
inc
jno
add
ds
outsl
repz
fmull
addl
and
les
in
inc
fsubrl
mov
cmp
fs
cmp
mov
inc
jo
aas
jl
int3
pusha
sbb
leave
push
jecxz
jbe
xchg
js
sbb
lret
push
mov
lahf
ficomps
xchg
ret
sahf
sbb
enter
jmp
sub
call
out
xchg
sub
cwtl
mov
sbb
pushf
and
mov
aad
and
xor
mov
mov
and
xchg
dec
std
je
leave
stos
and
dec
dec
or
push
pop
xchg
pop
popf
jae
pop
in
rcrb
subb
xchg
out
adc
js
das
adc
lret
fisubl
mov
dec
data16
jle
jge
inc
pop
mov
jb
push
pop
jne
inc
cmp
stos
adc
icebp
popa
in
mov
adc
sbb
lods
xlat
in
ret
clc
test
dec
push
test
push
scas
jge
je
inc
sub
cmpsl
and
adc
pop
test
mov
pop
push
je
in
cltd
push
xchg
icebp
mov
mov
add
lods
imul
adcl
loopne
das
pop
jb
lahf
aaa
pop
mov
jns
cmpsb
cli
sub
mov
mov
mov
sbb
div
das
xchg
inc
xor
andl
enter
test
mov
andb
roll
incb
idivb
mov
push
mov
push
add
repz
inc
popa
jae
or
jp
dec
mov
ljmp
sahf
pushf
or
and
cmc
jb
test
faddl
jge
ret
push
mov
push
add
xor
xchg
mov
fs
in
sub
jle
popf
or
ret
xchg
xorb
xor
add
push
xchg
or
prefetch
or
incw
movsb
in
dec
rclb
jg
jmp
cmp
dec
push
push
xor
jnp
lret
aam
and
cmp
das
sub
sbb
xor
dec
inc
sub
stos
and
nop
adc
cli
mov
stos
xor
mov
mov
lds
add
mov
and
lea
sbb
mov
cwtl
out
mov
test
pop
adc
pop
daa
shl
push
push
into
push
jns
popf
movsb
std
or
xchg
sub
adc
jl
adc
sub
cmc
and
inc
push
sbb
iret
aas
icebp
ljmp
and
mov
sarb
mov
mov
ret
mov
jb
sahf
mov
adc
jmp
jae
dec
aas
fldt
mov
cmp
jb
mov
lods
push
mov
hlt
bound
cwtl
mov
xor
adc
ficoml
sti
add
clc
pusha
shll
popf
and
inc
jp
sbb
insb
push
add
push
mov
cmp
sbb
repnz
repz
sbb
sti
fidivl
mov
sub
xor
stos
jne
jmp
cmp
push
idivl
sub
test
clc
adc
adc
and
xorb
mov
push
add
mov
mov
mov
sub
push
loopne
es
imul
adc
adc
xchg
cli
push
xchg
faddp
leave
xchg
test
mov
insl
popf
sbb
mov
pusha
mov
push
call
insb
mov
test
les
add
ja
jmp
jp
dec
cmovne
mov
loop
movsl
into
dec
sahf
mov
test
jbe
aam
clc
sub
adcb
sahf
dec
mov
shlb
into
cmp
xchg
adc
or
sub
dec
in
push
setno
pop
out
data16
add
xchg
add
out
jo
dec
dec
cmpsl
and
sti
arpl
mov
shll
repnz
mov
hlt
push
xchg
stc
adc
loopne
mov
fisubrl
dec
jge
lcall
sub
movsb
cmp
xchg
pusha
jle
add
je
cmp
jge
mov
scas
push
mov
sub
mov
mov
adc
subb
and
xlat
fdivrs
dec
xchg
les
out
cmovno
divb
loopne
jle
imul
sbb
fdivrs
lods
das
xchg
xor
mov
les
adc
cld
cmp
mov
ds
ret
out
orb
popa
mov
test
lahf
push
cmpsl
add
imul
jge
inc
loopne
pushaw
push
jmp
or
cmp
xchg
and
lret
cwtl
mov
lahf
push
add
fiadds
in
xchg
sbb
or
test
enter
mov
pop
and
add
stc
mov
outsl
in
rcl
mov
pop
mov
fisubrs
jg
mov
cmp
push
ret
cmp
cmpsl
cmp
push
std
loope
insl
inc
jmp
inc
inc
xor
inc
insb
mov
push
jecxz
sbb
stc
add
sbb
sub
aas
mov
pop
pushf
and
in
fs
pop
adc
popa
inc
add
pop
popf
push
jmp
mov
cmpsl
pop
mov
push
cmp
lods
xor
loopne
adc
jmp
leave
jl
fnstsw
into
pop
sarl
dec
jnp
mov
xchg
cmp
mov
mov
sub
nopl
mov
lods
pop
dec
mov
andl
punpcklbw
lods
test
dec
push
xor
cmc
sub
ret
cltd
push
mov
scas
int3
push
jnp
pop
xchg
pusha
jb
out
gs
lock
sbb
fldt
xchg
bnd
or
lret
jp
lods
mov
ret
adc
mov
loop
pop
dec
inc
lahf
bound
leave
cmpsb
lods
mov
out
das
aaa
xor
iret
mov
or
dec
inc
push
push
loop
test
adc
mov
jnp
adc
push
fmuls
fcmovnu
cmc
mov
add
inc
rorb
fwait
rorl
sahf
cmpsb
test
inc
mov
test
sub
push
fistpll
movsb
mov
or
cld
testl
mov
shll
imul
imul
mov
sub
add
iret
scas
push
pop
movsb
xor
jle
fsubrl
movsl
xor
cmp
in
loopne
adc
or
int
scas
loope
test
mov
js
iret
test
call
cmpsl
icebp
jmp
mov
mov
in
push
sbbl
sbb
cmp
mov
mov
mov
cmp
sbb
mov
and
loopne
sbb
mov
dec
mov
or
je
push
inc
pop
repz
lahf
mov
mov
out
mov
cmp
xchg
add
xchg
cmp
mov
mov
dec
inc
xlat
cmc
outsl
into
les
inc
imul
movb
sub
std
sub
les
mul
adc
or
add
loopne
fmuls
rcrl
repnz
jb
inc
hlt
mov
in
scas
out
xchg
push
sub
mov
push
cmp
lret
sub
aaa
imul
mov
or
dec
imul
mov
jae
cmpsb
cmp
jnp
and
xor
push
xchg
cmp
ja
pop
ss
out
or
mov
and
sahf
cmp
mov
ljmp
or
cmp
mov
push
ret
sti
test
jmp
sti
xlat
add
das
lcall
push
lds
push
push
cmc
inc
sub
lds
lret
fldl
outsl
inc
les
out
shrb
test
adc
pop
ja
cli
push
sahf
dec
mov
jl
mov
pushl
out
enter
sbb
outsb
sub
movsl
out
mov
push
cmpsl
mov
jno
imul
and
inc
rcll
aad
dec
int3
mov
int
loope
das
mov
add
or
adc
push
or
jmp
imul
pop
inc
jp
fwait
inc
hlt
adc
pop
cmp
xchg
mov
in
repz
icebp
add
push
cmp
add
xor
out
add
cmp
in
les
and
dec
push
adc
je
test
pop
aaa
repnz
cmpsl
ret
aad
cmpsl
adc
insl
sbb
ret
bound
pop
jecxz
repnz
pop
lcall
mov
mov
sbb
sbb
int3
shrb
sub
popf
push
cmc
and
pop
stc
fwait
outsl
sbb
push
lcall
mov
lret
pop
mov
mov
cmp
push
mov
test
cmc
es
bound
ret
cmp
out
arpl
xor
cmp
jp
pop
mov
fs
fistpll
xchg
cmp
pop
pop
push
mov
imul
addb
iret
mov
sbb
fimuls
xchg
jnp,pn
sbb
sbb
jo
pop
mov
fildll
pop
jmp
stc
inc
cmp
mov
cs
aad
and
loopne
xor
mov
lods
jecxz
fstpt
dec
push
mov
cs
add
push
loop
addr16
mov
das
ljmp
or
jg
movsl
sti
sbb
cmpsb
idivb
popf
pushf
adc
mov
dec
push
mov
dec
mov
into
jno
push
or
enter
das
ljmp
inc
or
push
push
and
push
sbb
inc
aaa
push
xchg
cmpsb
cld
push
xor
add
cs
mov
scas
jnp
sub
mov
dec
jae
mov
dec
add
pop
mov
lcall
xor
pushf
mov
sbb
mov
jb
push
sbb
and
jno
cmp
movsl
mov
es
int3
cld
repz
fimull
scas
mov
cld
scas
aad
mov
mov
mov
and
mov
scas
xor
cmc
mov
sti
cvtps2pi
int
dec
jne
mov
adcb
inc
dec
in
nop
fstl
inc
ret
adc
pop
test
aad
ud0
inc
xor
jne
ja
enter
mov
loope
adc
loop
les
ds
scas
test
es
push
getsec
aas
clc
and
push
loope
test
movsb
adc
xor
pop
inc
sarb
mov
push
inc
out
and
clc
sbb
out
or
sub
jmp
xor
les
pop
cmpsl
xor
movsb
and
and
cmp
add
dec
daa
ja
mov
mov
test
xor
and
dec
cmp
fmul
loopne
add
ficoml
and
jne
in
and
sub
je
sub
push
or
test
mov
in
push
addl
xchg
jg
push
arpl
add
lret
cmp
xlat
loopne
lahf
das
ret
jo
hlt
or
dec
loop
mov
popf
aaa
xchg
lret
push
mov
jo
adc
mov
pop
or
adcb
test
push
rorl
push
js
xor
imul
xor
dec
push
and
adc
push
inc
mov
test
pop
sub
ds
xchg
sub
imul
pop
stos
fisubrl
mov
sbb
and
xor
xchg
xor
pop
xchg
fistl
aam
mov
insl
and
insl
jno
in
popf
lock
rorl
xchg
fnstsw
int
pop
mov
inc
out
ljmp
rclb
and
mov
std
lods
mov
sbb
int3
mov
repz
sbb
rcr
jae
xchg
sbb
xchg
push
sbb
or
mov
cld
hlt
adc
inc
mov
pushf
sarl
loop
dec
scas
dec
push
mov
cltd
lock
push
pop
adc
xchg
push
mov
xchg
pop
jb
mov
xchg
mov
fwait
mov
imul
shll
push
mov
inc
push
adc
imul
push
dec
add
jae
out
push
xchg
xchg
or
xchg
push
jg
cli
lret
cli
push
adcl
push
jne
repnz
shr
xchg
push
es
push
addr16
and
cmpb
lea
mov
sbb
gs
add
icebp
inc
lea
adc
popf
ds
pop
out
out
cmp
push
or
imul
dec
loope
xor
lods
pop
cld
outsb
out
pop
jb
and
mov
addr16
add
sub
clc
cmc
inc
pop
lock
pop
int
repnz
popa
pushf
adc
cs
xchg
adc
and
jb
adc
mov
jge
arpl
add
xchg
fsubl
inc
adc
pop
sbb
addr16
mov
mov
sub
push
inc
lcall
add
xchg
push
ja
dec
dec
xchg
sub
mov
xchg
sti
adc
and
in
dec
or
adc
dec
daa
sub
adc
jge
roll
cs
xorl
mov
cmp
loope
sub
sub
xor
add
addl
dec
and
sbb
outsl
mov
sub
test
icebp
pop
xchg
dec
call
sub
mov
sub
pmaddwd
pop
push
jp
mov
rclb
inc
dec
mov
xorb
mov
and
dec
sub
sbb
dec
cltd
mov
dec
stos
or
push
in
or
mov
sar
mov
xor
shrl
lahf
mov
lods
div
jnp
mov
sbb
mov
jns
jg
xchg
cli
push
insl
dec
jge
and
aam
or
ret
fldenv
push
bound
hlt
out
inc
mov
popa
or
xchg
incl
push
stos
cld
cmp
push
lcall
mov
inc
leave
add
scas
lret
lea
ljmp
les
in
mov
aas
loope
std
cli
inc
dec
jae
mov
loopne
subl
or
push
sub
xchg
ljmp
adc
in
dec
hlt
sbb
push
adc
or
repnz
jle
or
mov
add
insb
out
gs
insl
pop
jns
sti
rclb
mov
pop
push
cmpsl
test
loop
nop
inc
fisubrs
in
scas
shll
insl
cmp
aad
out
fisttpl
mov
jbe
lock
arpl
es
pop
sbb
mov
cltd
jl
jno
add
out
fadds
and
in
and
cmp
idivl
insl
push
or
cmpsl
pop
and
andb
out
ss
xchg
icebp
and
popa
lcall
add
pushf
stos
data16
pop
cmp
adcl
mov
scas
into
and
nop
jbe
mov
xchg
jne
stc
sub
stos
popf
mov
mov
fsubl
cmp
jmp
sub
add
push
jno
orl
and
sbb
pop
xchg
jb
ljmp
cmp
xor
jecxz
dec
xchg
lcall
mov
int
adc
in
or
push
dec
mov
sbb
popf
mov
fbld
push
movsb
inc
fisubs
mov
test
mov
imul
add
hlt
adc
lea
or
mov
divl
fiaddl
fsubrs
push
adc
xchg
lds
insb
fdivs
fwait
mul
mov
test
push
and
test
in
and
insb
push
into
divl
xchg
stos
aas
or
fld
add
imul
lret
pop
push
sub
shlb
lahf
or
inc
lock
shrl
int3
sub
adc
dec
inc
dec
imul
mov
stos
mov
sub
push
in
and
cmc
fwait
icebp
adc
sbb
mov
dec
int3
sbb
sbb
mov
add
mov
or
cmpl
negl
call
mov
add
cmp
fisubs
sahf
mov
push
out
mov
push
jle
xor
or
mov
jg
or
jg
mov
repnz
rorl
xor
sbb
in
cmp
sub
repz
and
cld
adc
xchg
inc
jle
mov
imul
sarl
ss
cmp
sbb
or
dec
and
in
mov
das
and
lcall
in
test
movsl
inc
xor
iret
adc
cld
fwait
in
insl
js
cmp
ljmp
add
cwtl
adc
push
jp
cmp
mov
mov
int3
mov
test
inc
scas
add
and
mov
xlat
adc
rcpps
inc
jmp
push
idivb
cmp
inc
sub
mov
fldl
test
pop
and
rcrb
mov
loopne
mov
daa
jne
into
test
nop
sub
cmpb
into
or
pusha
inc
or
cs
repnz
sbb
mov
outsb
out
xor
xor
mov
aam
pop
cmp
ljmp
insb
scas
addl
adc
popf
into
cmp
sub
out
in
mov
jnp
fs
loope
jle
test
into
sbb
iret
sub
mov
mov
test
pop
xor
movsb
scas
in
jg
cmovne
jno
fdivs
repz
push
sahf
icebp
pop
pop
pop
sahf
adc
or
movsb
leave
mov
ret
lret
sbb
xchg
in
fwait
mov
or
test
stos
or
nop
jbe
js
inc
sub
cmpl
jmp
hlt
push
js
mov
addl
into
mov
repz
out
sahf
test
sub
and
xor
test
cli
xchg
out
lcall
popa
dec
out
out
in
xor
lea
ret
adc
cmpsb
fwait
jnp
jp
dec
adc
xor
xchg
add
xor
inc
xor
out
dec
add
mov
mov
sbb
and
negb
or
cmp
cmp
arpl
loope
add
jb
or
rol
and
inc
inc
cmp
mov
jne
jl
sub
sbb
or
ss
iret
int3
adc
dec
mov
lcall
popa
inc
jmp
nop
call
test
inc
sub
sbb
dec
add
sub
jmp
ss
jne
jl
sti
in
sbb
das
in
mov
divl
and
sbb
mov
mov
mov
fdivl
test
dec
pop
pop
adcb
test
bound
mov
cmp
mov
test
mov
mov
dec
push
das
fmull
mov
add
push
push
inc
movsb
nop
call
ja
int3
inc
or
adc
in
inc
test
and
fwait
inc
mov
sub
mov
mov
mov
push
stos
mov
lods
and
add
push
pop
mov
mov
cltd
and
stc
push
test
nop
lods
insb
mov
cld
outsl
stc
push
dec
and
cli
push
subb
adc
fs
mov
in
test
rorl
xor
outsl
xor
cltd
mov
add
inc
in
mov
xchg
sbb
pop
inc
xor
mov
jl
sbb
mov
test
in
sbb
sbb
jge
xchg
loope
imul
sbb
pop
xor
ja
nop
inc
scas
and
jecxz
imul
mov
cld
insl
mov
add
inc
push
daa
and
xor
xor
sub
aad
int
dec
sub
and
cmp
fsubl
inc
xor
outsb
push
test
pop
paddusb
nop
ljmp
arpl
lods
subb
cmp
iret
int3
pop
dec
mov
aam
xor
call
cmp
add
cltd
add
mov
inc
insl
pop
aas
aad
adc
and
push
sub
pop
adc
popf
adc
arpl
bound
je
fadds
xor
lds
xchg
cmpsb
add
loope
inc
add
jg
or
cmp
mov
rorl
mov
or
in
jnp
int3
xor
sbb
jo
jle
xor
insb
mov
mov
iret
insl
inc
jle,pn
pop
rcll
mov
sbb
xor
add
sub
andl
arpl
mov
xchg
jae
ja
jo
or
faddl
cld
pop
jae
out
adc
or
out
scas
pop
mov
xor
es
or
dec
and
add
inc
aaa
call
ret
call
shll
pop
int
or
aas
mov
add
jmp
jae
xor
sbb
inc
in
inc
aad
stos
jle
sahf
aas
je
cli
jle
sub
adc
mov
mov
ror
mov
ret
mov
jnp
lahf
gs
push
or
or
leave
sub
and
pusha
sub
shl
outsb
jo
push
loope
cmp
jle
inc
lcall
adc
jne
inc
adc
shl
cmpsb
dec
pop
insl
or
scas
add
dec
xchg
jne
pusha
xchg
mov
jle
shlb
mov
imul
cmp
mov
mov
push
adc
dec
leave
clc
pop
icebp
lret
xor
dec
xchg
xchg
popf
ficomps
scas
pop
lods
push
and
aam
fs
cltd
jno
int3
mov
push
imul
in
cld
mov
insb
push
lds
fwait
xor
popf
hlt
popl
pop
fwait
mov
scas
jmp
test
clc
out
std
loope
cmpl
iret
cmp
or
rorl
or
dec
repnz
pop
adc
pop
aaa
push
push
shll
mov
cmp
add
lea
test
mov
pop
sub
sti
call
push
sbb
fisttps
stc
outsb
jmp
xchg
lds
sbb
arpl
mov
pusha
mov
mov
mov
add
inc
add
out
add
sbb
popa
xor
sub
adc
addl
imul
or
dec
jp
dec
aad
or
ret
ss
adc
inc
sub
repz
addr16
sbb
cs
not
mov
lcall
xor
dec
iret
insb
mov
xchg
push
push
shlb
ss
cmp
out
mov
lret
and
jmp
int3
sbb
sbb
adc
xor
popa
ss
rclb
cmp
xchg
mov
mov
loope
add
xor
pusha
add
push
sub
aas
popa
jae
push
je
xchg
jo
bound
ficoms
mov
lea
in
push
or
lcall
pop
sub
out
or
inc
pop
jne
or
adc
out
jae
cmc
stos
mov
jnp
jo
cs
aas
mov
push
and
je
push
aam
pop
dec
mov
mov
loopne
xchg
rolb
push
aas
stc
addl
cmpsl
or
repz
aam
fstpt
loope
and
mov
mov
mov
movsb
xchg
jp
pop
cs
xchg
or
movsl
push
outsl
dec
jge
dec
jnp
imul
sbb
xchg
ret
lret
or
shrb
mov
in
test
enter
rolb
mov
xchg
stos
add
mov
cltd
nop
repnz
repnz
push
xor
mov
outsl
xor
rcll
repz
fsubl
push
xor
add
and
mov
fmuls
sub
push
cmp
mov
mov
psrld
popa
mov
sub
mov
dec
fs
lahf
fistpl
jecxz,pt
das
pop
xchg
sbbb
dec
ljmp
test
mov
jecxz
ss
jle
push
adc
fs
dec
or
pop
push
fsts
icebp
rorl
lods
sbb
fcomp
add
ja
jnp
jg
add
les
lods
imul
cmpsb
sub
or
xor
notb
data16
in
test
jmp
mov
gs
sub
movsb
iret
insl
daa
popf
or
or
sti
out
dec
inc
std
xor
inc
cmp
in
mov
pop
push
es
iret
int
ficoms
out
jl
jg
dec
call
and
jmp
xchg
jne
in
jns
cwtl
mov
mov
stos
mov
ret
cmc
xchg
daa
cli
push
data16
adc
test
ficomps
inc
mov
mov
push
rcrl
mov
stc
mov
lahf
xchg
sti
jnp
les
or
popf
lods
les
dec
jge
test
cwtl
mov
in
lahf
mov
les
push
repnz
stos
pushf
imul
lahf
sbb
cmp
push
out
or
or
fimull
insb
aaa
mov
mov
ja
outsb
sub
js
lret
fnstsw
pop
jmp
dec
adc
xchg
jle
bnd
mov
loop
shlb
push
test
push
mov
aaa
aas
jbe
je
add
nop
mov
and
std
or
xchg
insb
xchg
into
xor
pop
adc
mov
sub
fmull
test
push
jg
mov
sti
stos
mov
dec
and
aad
mov
sarb
jo
push
hlt
mov
aam
dec
into
add
inc
int
je
dec
pmaddwd
fnstcw
pop
inc
xchg
fdivrl
lds
lea
jns
mov
xchg
mov
mov
insl
aad
xor
dec
inc
sub
jmp
mov
movsl
clc
push
aam
dec
sub
lods
fldcw
loop
fcompl
mov
add
dec
into
and
out
aad
jmp
mov
cmp
lds
sbb
push
mov
jno
sti
xchg
gs
gs
ret
jmp
sbb
mov
xchg
adc
leave
insl
test
push
mov
push
call
or
fmul
mov
jno
pusha
push
mov
int
push
or
mov
shrl
je
sub
lahf
pop
cmp
lret
jmp
sbb
sbb
into
icebp
or
ret
sub
pop
mov
movsl
xchg
aad
shrb
pop
cwtl
pushf
sbb
or
add
in
movsl
in
sbb
je
cmp
xlat
daa
je
je
fwait
mov
and
icebp
xchg
mov
ljmp
xor
std
lret
popf
or
cmp
popf
adc
add
sti
inc
push
call
std
scas
pop
pop
rcrb
xor
xchg
or
xchg
test
fsts
lahf
or
or
and
mov
mov
mov
xlat
pop
imull
enter
je
pop
cwtl
mov
pushf
mov
sarw
or
ja
inc
cwtl
xchg
in
sbb
stos
and
sbb
sbb
add
pop
xor
insb
mov
subl
pop
add
ss
mov
cmp
jge
adc
xor
imul
sub
imul
sbb
into
xor
mov
sub
rorl
push
call
inc
loope
mov
xor
mov
fdivr
mov
je
call
push
je
rcl
stc
jl
or
mov
xor
aam
cmp
cmp
popf
adc
mov
out
jo
repnz
in
loope
cmpsl
mov
fs
loop
push
out
imul
negl
sbb
mov
iret
mov
stos
jmp
add
push
cld
inc
inc
sbb
inc
outsb
in
stos
mov
js
inc
out
mov
sbb
or
movsb
clc
rorl
mov
ja
idivl
cmp
in
sbb
and
xchg
call
sub
xchg
jae
sarb
mov
mov
mov
jl
cmpsl
sub
ja
fnsave
mov
stos
add
mov
int3
lea
and
fnstsw
lock
divb
out
imul
test
and
cli
lds
push
leave
jle
hlt
daa
cmp
push
shl
int3
jl
xor
jnp
mov
movsl
adc
push
xlat
inc
sbb
mov
mov
bound
mov
adc
adc
daa
mov
mov
xor
xor
popf
orl
fstp
inc
imul
out
cmpsl
icebp
adc
ss
adc
sbb
scas
mov
leave
lret
enter
leave
nop
inc
jl
hlt
popf
into
pop
std
sahf
pusha
call
adc
sbb
cmp
mov
out
push
movsb
jnp
mov
cmp
add
shl
xchg
adc
ja
cmp
xor
sub
mov
xor
xlat
neg
and
in
dec
std
jne
cmp
popa
push
xor
pop
aad
leave
push
mov
inc
mov
ds
push
test
xchg
adc
dec
ja
iret
popf
insb
push
movsb
push
push
pop
imul
push
mov
push
and
sti
xchg
gs
mov
jle
orb
mov
dec
lea
mov
cmc
fdivs
movsb
inc
sub
mov
mov
decb
mov
fsubr
test
mov
out
faddl
pop
adc
mov
adc
or
fwait
cmc
add
bnd
loop
imul
lret
jae
inc
gs
test
adc
les
adc
test
push
add
push
das
movsb
xlat
ret
aaa
sub
sbb
movb
pop
lcall
stos
xchg
jb
mov
repz
in
scas
dec
jnp
outsl
imul
stos
mov
mov
mov
xchg
stc
mov
xchg
fadds
stos
roll
jno
xor
and
fmull
into
aad
lcall
hlt
xchg
test
push
arpl
cmp
fcmovb
xchg
mov
cmp
push
les
xor
rol
mov
pop
xchg
dec
mulb
jecxz
inc
push
repz
sbb
jge
or
cld
or
shr
pop
nop
and
loopne
fisubs
cmp
mov
lret
mov
popa
jmp
int
pop
notb
arpl
cmp
scas
outsb
mov
and
sub
jno
or
mov
cmp
repz
mov
xchg
repz
je
nop
cmp
cmp
xabort
or
jge
or
sbb
xchg
subl
inc
adc
aad
pop
jle
xchg
pop
out
lahf
cs
jl
pop
inc
mov
cwtl
push
sbb
popf
pop
js
mov
aam
push
and
pop
jb
test
mov
add
sahf
ljmp
hlt
cld
and
mov
push
cwtl
test
cmc
push
xchg
or
add
aas
mov
ja
insl
pop
outsb
imul
push
mov
rol
fnstsw
jne
mov
mov
in
mov
add
arpl
inc
cmpsb
movsl
int3
pop
cli
faddl
push
cmpsl
sbb
movsb
sub
pop
mov
xchg
stos
dec
out
out
xor
sarb
fidivrs
gs
xchg
pop
stc
push
outsl
inc
push
pop
pop
test
in
adc
mov
in
enter
pop
sub
ret
lods
std
imul
mov
sbb
xor
sbb
dec
aad
rorl
dec
or
mov
rcll
mov
rcr
and
cltd
xchg
mov
inc
cs
in
rcrl
fwait
and
dec
cmc
sub
mov
insl
or
or
pop
loopne
fs
adc
enter
insl
jb
ret
sbb
fcomps
and
shlb
in
push
sub
jnp
inc
movsl
cmp
into
into
add
insb
popf
nop
mov
cmc
pop
xchg
jl,pn
and
push
jns
lds
addr16
mov
js
stc
push
call
clc
bound
jnp
fcomps
sbbl
add
dec
js
les
and
push
cltd
shll
loope
mov
mov
inc
cmpsl
aas
divb
xchg
push
jl
mov
push
mov
insl
inc
cltd
scas
xchg
mov
push
sbb
ljmp
lahf
orb
dec
cli
push
es
stos
pop
js
in
iret
call
xchg
mov
jg
out
adc
stos
push
xchg
jbe
push
sahf
push
loopne
leave
sub
ss
push
pop
or
mov
jmp
movsb
ljmp
loop
aaa
cltd
pop
addr16
imul
inc
rorl
cmp
push
sbb
shrb
cmpsb
dec
inc
inc
sbb
ja
dec
int
fs
clc
jmp
jecxz
popa
sarb
xchg
sub
rorb
pushf
faddl
and
insb
add
daa
lods
lret
std
adc
mov
or
sbb
xchg
push
jb
das
cli
adc
aam
inc
and
insl
ds
sti
jns
adc
cltd
mov
fs
shrl
ds
dec
js
dec
mov
sub
sub
sahf
mov
cmp
aas
scas
ret
test
fsubl
or
in
imul
repnz
push
lret
mov
flds
cmc
imul
cmp
and
sub
push
inc
nop
push
xchg
iret
adc
js
imul
test
push
into
push
addr16
push
xor
cmp
add
adc
mov
ds
insl
mov
ljmp
mov
test
pop
popa
das
push
mov
lret
sub
pusha
and
lcall
out
mov
data16
dec
xor
dec
aas
rclb
andb
in
push
stos
sub
pop
lods
dec
sub
jo
testb
mov
xchg
add
ljmp
push
add
xchg
stos
xchg
lods
mov
mov
jl
push
sbb
fcoml
and
lock
xchg
sub
cltd
cs
mov
xchg
iret
cmp
inc
add
in
addr16
iret
cli
pop
jp
nop
in
test
sub
movsb
sarl
adc
loop
divb
jge
sub
mov
inc
out
filds
jmp
sbb
mov
add
adc
out
call
sbb
imul
jb
loope
jb
xchg
out
lods
lret
jbe
clc
stc
mov
pop
xor
fisttps
ret
inc
scas
cmp
xchg
and
mov
pop
popf
pushf
lcall
bound
mov
movsl
jne
dec
xor
add
sbb
idivb
add
ljmp
insb
test
mov
popf
xor
mov
fstpl
cmc
jbe
ljmp
pop
arpl
mov
cmpsb
xor
inc
sahf
arpl
lea
mov
pop
aad
rorl
movb
xchg
push
out
cmc
scas
enter
ret
adc
pop
je
test
fst
stos
cltd
push
xor
mov
cld
cmp
iret
xchg
and
cmp
cltd
dec
and
mov
stos
mov
inc
repnz
cmpsb
xchg
or
push
andl
push
dec
in
scas
lods
mov
movsb
jae
test
clc
cli
jo
push
je
lods
bound
add
mov
pop
test
add
lea
ret
les
sahf
pop
xor
outsl
inc
mov
cs
and
pop
cli
into
repz
pop
xchg
mov
jecxz
icebp
push
or
in
adc
out
ss
lret
movsb
pop
orl
add
cmp
pop
test
dec
adc
ja
mov
xchg
mov
movsb
adc
mov
push
repz
rcrl
in
xchg
rolb
add
retw
test
and
dec
push
jmp
sbb
fcomip
xchg
inc
out
dec
les
fdivl
loope
dec
rorb
sbb
imul
inc
test
hlt
xchg
sti
xchg
xchg
sub
hlt
xor
dec
int3
mov
aas
xor
out
loopne
insl
mov
xor
mov
or
or
pusha
push
fsubl
imul
in
fmull
mov
push
pop
lret
dec
jb
inc
out
push
out
jl
push
into
js
int3
stos
mov
fldcw
test
and
sub
arpl
fidivl
test
mov
jno
or
hlt
pop
fstps
pop
adc
iret
mov
inc
mov
adc
jg
jl
and
jno
adc
decl
pop
adc
jb
dec
dec
xchg
jge
xchg
sahf
mov
add
into
cmp
and
aam
jne
sbb
pop
pop
jmp
fwait
xchg
repz
xor
mov
xorb
push
lahf
or
aaa
jp
push
loope
sub
les
xor
push
xchg
mov
or
sub
cmp
pop
sbb
xor
adc
xchg
pop
es
cmpsb
int3
mov
out
sbb
cmpsl
jge
cld
fwait
xor
jmp
xchg
lods
cmp
xor
lds
xor
inc
aas
sbb
lods
mov
jno
out
scas
scas
mov
ja
mov
push
adc
jne
jle
bnd
pop
lods
push
xor
xchg
out
gs
xchg
add
mov
and
pop
les
mov
into
pop
push
jge
fs
jnp
jno
mov
in
nop
out
jmp
pop
ss
push
gs
cmp
int
stos
push
arpl
and
dec
push
or
repz
mov
xlat
clc
scas
cmp
cmp
inc
adc
rcrl
repz
ficomps
sub
in
jge
dec
loopne
cmc
fwait
decl
pop
sbb
jmp
dec
ljmp
out
or
adc
nop
cmp
mov
pop
outsl
xchg
add
cs
mov
iret
outsl
and
lods
xchg
xor
repz
xchg
lcall
xchg
mov
pushf
jb
mov
cs
cmpsb
jle
sub
dec
push
push
inc
lea
cs
sarb
adc
and
push
pushf
fidivrl
add
inc
jle
aad
cwtl
add
movsl
mov
cmp
mov
roll
aam
inc
insb
fs
arpl
xor
sub
mov
ja
lcall
mov
jecxz
xor
in
cmpl
lods
pop
jnp
loop
ja
scas
mov
sbb
in
out
pop
leave
and
stc
test
jnp
clc
mov
lret
add
push
add
into
xor
cmp
aam
orb
mov
std
pop
ja
lods
loope
ret
xlat
rorl
mov
sub
push
inc
pop
ja
cmp
fs
sub
fs
or
jg
in
scas
fisttps
sub
push
popf
movsb
stos
push
mov
xchg
enter
xor
daa
mov
andb
xchg
pop
or
mov
pop
jge
sub
jl
jmp
dec
mov
mov
mull
add
dec
adc
push
ficoml
jne
sahf
mov
in
sbb
shufps
pop
imul
imul
adc
or
sub
add
or
jns
cltd
jp
cmpb
lock
in
xchg
jb
js
jb
dec
add
aaa
mov
daa
or
out
sub
sti
sub
xchg
int3
data16
imul
in
loop
push
xchg
mov
adc
jo
pop
movsl
dec
xlat
pop
cmp
cmp
push
movsb
cmp
add
shlb
test
jne
mov
dec
jbe
xchg
and
int3
mov
shrb
nop
xor
push
in
arpl
daa
popf
pop
fstpt
or
orl
insb
iret
xor
pop
sbb
fnstsw
shlb
vmwrite
orb
frstor
mov
xor
jmp
and
pop
leave
mov
loop
sbbb
inc
fs
cmp
push
sbb
or
xchg
sbb
das
cmp
jnp
mov
add
mov
into
sub
ret
dec
lods
mov
jle
and
jle
push
inc
cld
sub
dec
js
insl
arpl
das
in
aad
jo
sub
ficoms
dec
mov
dec
rcrl
insb
mov
mov
or
repnz
lahf
push
add
mov
cs
mov
mov
cmp
inc
lods
fimuls
sub
add
jne
pop
popf
xchg
sub
ror
es
inc
pop
inc
dec
mov
or
mov
push
stc
xor
dec
pop
mov
lock
aam
loopne
gs
inc
jmp
mov
push
mov
adc
or
nop
mov
out
push
xchg
inc
popf
test
div
add
jmp
scas
push
mov
rcrb
xchg
scas
pusha
imul
jp
cltd
jl
and
notl
lahf
and
ja
sbb
pop
ss
loope
pop
and
push
scas
add
cld
adc
pop
xchg
or
and
mov
jb
in
and
fnstenv
leave
in
or
icebp
push
push
lcall
lock
loopne
push
adc
sbb
mov
mov
in
xor
and
ret
icebp
push
inc
push
dec
sub
adc
arpl
pushf
pop
xchg
and
js
cs
out
jns
jnp
cmp
dec
loop
push
jmp
outsl
in
mov
and
test
scas
mov
loope
call
fcmovb
sbb
mov
shll
int3
inc
xor
add
push
mov
insw
adc
insb
push
mov
jno
mov
lds
mov
mov
add
in
insb
cs
xor
adc
ja
push
fs
push
sahf
fcomps
pop
icebp
cmp
pop
aam
test
popa
popf
dec
popf
ja
fwait
mov
clc
push
stos
cmp
into
push
inc
jmp
imul
sub
mov
pop
movsb
inc
stos
or
imul
outsb
and
add
scas
popa
roll
test
xor
fisubs
subb
out
rcr
roll
and
inc
cmpsb
ja
test
sbb
mov
lods
and
sub
outsl
clc
mov
icebp
and
fcmovb
call
loopne
xchg
sbb
je
jg
enter
push
flds
ja
shll
outsb
jb,pn
mov
mov
cmp
cmp
add
rolb
push
add
inc
loope
xor
push
sbb
aad
mov
jle
push
enter
jnp
movsb
shll
adc
cwtl
cmp
jo
sbb
adcl
sub
and
sahf
out
mov
sub
push
lods
push
jmp
mov
push
stos
xchg
mov
pop
jle
shlb
sub
test
lods
add
cld
xchg
imul
int
mov
scas
ficoml
loope
jbe
fwait
mov
movsb
arpl
dec
mov
adc
xor
push
sbb
sbb
push
adc
push
xchg
sti
push
std
jg
xor
mov
cmpsl
adc
add
sahf
sub
in
repz
mov
sbb
lods
xor
or
jne
ret
test
inc
pop
jge
test
pop
mov
jg
call
sti
push
push
scas
arpl
cmp
push
stos
cmp
sbb
cmp
mov
ret
testb
mov
sarb
psubsb
sbb
scas
int3
xchg
xchg
cltd
out
movsl
dec
cmp
sub
out
lahf
test
mov
push
mov
out
pop
icebp
mov
cmp
pop
push
test
mov
mov
adc
adc
in
pop
int3
out
fsubp
dec
imull
insl
test
push
sub
add
push
or
and
leave
stos
dec
movsb
es
jle
iret
jb
pop
arpl
push
adc
notl
mov
adc
shrb
or
sub
sarl
or
xor
jnp
mov
jno
stos
add
imul
popa
mov
add
icebp
pop
dec
les
push
stos
mov
push
pop
setge
jmp
aad
lret
int
sub
mov
mov
lret
pop
jge
lods
mov
pop
fs
int
loopne
cmp
jnp
dec
bsf
inc
lea
mov
stos
pop
leave
iret
add
mov
fnsetpm(287
adcb
xlat
pop
cmc
cli
or
xor
lret
leave
out
sbb
cmp
pop
mov
pop
lahf
in
cmp
js
jmp
xorb
add
xlat
mov
push
inc
cmpsl
adcl
cmpb
enter
cmp
xchg
or
pushl
loopne
data16
aad
jl
outsb
mov
fnstsw
dec
lahf
scas
outsb
xor
push
out
stc
addl
dec
paddsw
mov
sub
daa
push
scas
lods
dec
pop
xorl
fxch
lock
pop
and
loop
iret
push
xchg
jmp
add
into
fidivl
xor
stos
dec
dec
rcr
sub
int
bound
mov
adc
rcll
call
xchg
adc
push
fnstenv
repz
jg
fs
je
dec
push
jae
adc
in
je
imull
test
pop
mov
cltd
mov
outsb
dec
jnp
jno
mov
adc
int
clc
mov
cwtl
pop
xor
popa
lahf
pop
sub
fsubrs
or
fnsave
cltd
adc
sub
xor
sub
cmp
movsb
mov
out
scas
icebp
jp
sub
sub
lds
dec
xchg
cmpb
fwait
lret
inc
ret
pop
std
sbb
jecxz
sbb
jbe
dec
push
lret
jle
test
jnp
loopne
cmp
or
cli
in
jg
mov
pop
popl
cmp
mov
mov
fadds
mov
sbb
dec
fldt
pop
loope
dec
fiadds
in
sbb
movsb
loope
push
aaa
std
enter
loope
lcall
stos
fdivrs
stc
test
xor
mov
int3
cmp
adc
pop
cltd
outsl
xor
adc
pushf
clc
nop
cld
andb
inc
cmp
add
push
xor
sbb
xor
adc
sbb
les
mov
fld
cltd
imul
sub
add
ss
sub
pop
shl
xchg
mov
mov
cmpsb
push
add
sub
aas
sub
pop
outsl
xchg
pop
test
fcompl
int3
push
and
faddl
and
xor
mov
push
call
jge
fbstp
add
test
jle
xchg
or
lods
push
std
inc
dec
sbb
pusha
leave
mov
test
mov
jecxz
ret
ljmp
rcrb
sub
arpl
pop
in
lcall
pusha
jl
cmp
push
js
xchg
sbb
jge
push
mov
pop
xor
leave
mov
pusha
repnz
add
bound
sbb
loop
stc
aam
das
xchg
sub
test
sbb
iret
lods
iret
push
out
mov
lret
mov
xor
sbb
in
inc
popa
mov
cmp
std
bound
mov
outsl
pop
into
roll
shrb
lea
arpl
push
fmulp
int
aaa
add
bound
ss
jmp
sbb
aas
insl
int3
lock
adc
imul
pop
pop
loopne
jno
sbb
stos
ret
push
in
adcl
sbb
cltd
inc
lds
xlat
mov
inc
xor
add
out
push
add
icebp
cld
xchg
push
sbb
ja
mov
mov
pushf
sbb
sbb
adc
stos
jge
inc
popa
in
jl
mov
or
cwtl
out
movsb
pop
sub
jle
sahf
mov
cmp
fists
jb,pt
lret
ja
cmpsb
int
jae
and
ror
shlb
cmp
ret
push
jbe
mov
loope
add
and
stos
imul
bound
sub
call
or
xor
das
fimull
xor
lret
push
xchg
xchg
shld
nop
pop
pop
aas
nop
in
in
xlat
mov
jmp
add
pop
jb
shr
sbb
int
inc
mov
xor
pop
mov
pop
jecxz
mov
or
out
test
ja
mov
jno
shrb
or
pop
iret
mov
mov
xor
scas
mov
push
imul
sbb
and
xchg
pop
mov
push
rcr
inc
outsl
adc
fwait
in
fcomip
shll
cvtpi2ps
jle
adc
pop
adc
cmp
mov
je
mov
add
lahf
into
popa
add
push
push
add
mov
loop
adc
lahf
nop
jge
out
in
add
subb
mov
clc
push
stos
jo
mov
mov
fdivl
cli
mov
int
mov
inc
mov
lods
sbb
mov
int
jae
movsb
pop
adc
negb
cmpsl
jnp
adc
mulb
mov
lahf
jecxz
sbb
sbb
in
mov
std
rcrb
int
clc
in
jmp
sbb
mov
sub
mov
push
pop
and
push
lcall
scas
add
cs
xchg
ret
inc
rcrb
mov
lcall
popl
addb
insl
loope
mov
cmp
mov
stos
outsl
sub
mov
xchg
xchg
pusha
daa
and
jle
pop
cli
arpl
or
imul
into
fisttpl
or
sarb
cmc
cmc
sub
push
cltd
sub
test
jne
in
xlat
stos
sarl
add
inc
pop
fcmovnu
push
test
jae
enter
pop
rcrl
mov
sbb
fmull
lock
insb
cmp
add
out
jae
mov
aas
and
sub
mov
mov
inc
imul
sbb
clc
lds
in
movsb
fdivs
or
cmpsl
xchg
test
pop
jne
xchg
pop
or
inc
sbb
in
xchg
add
dec
nop
rcll
sub
pop
add
xor
xchg
jae
stc
icebp
mov
mov
leave
cmp
lahf
cld
aad
popa
adcb
sbb
jnp
cld
ret
jne
inc
imul
or
dec
pop
mov
mov
adc
dec
sbb
add
test
jb
ja
xor
popa
push
mov
and
loopne
sub
push
sub
push
out
shll
mov
xchg
icebp
sbb
aad
sbb
pop
test
sbb
add
and
cmp
and
jle
mov
hlt
cmc
sbb
cltd
push
sub
daa
sahf
ds
mov
jecxz
scas
imul
or
dec
cmp
out
adc
push
inc
dec
enter
push
mov
sub
inc
adc
jb
mov
push
out
mov
stos
cs
insl
xchg
std
xor
lret
dec
jo
cmp
daa
push
sub
notl
jbe
mov
ds
and
ret
nop
inc
icebp
push
mov
jg
out
cmp
sbb
lahf
xchg
dec
shll
daa
dec
jg
mov
or
or
into
and
add
pop
aas
add
lods
sbb
mov
mov
orl
test
pop
loopne
loopne
adc
mov
inc
lret
lea
arpl
outsl
mov
leave
imul
mov
mov
xor
cli
arpl
mov
sbb
pop
ja
mov
das
mov
loop
cs
xor
jo
mov
push
cli
push
add
sbb
popf
inc
in
out
test
dec
test
fldcw
mov
imul
rcrb
adc
ss
mov
xor
movsb
xchg
movb
sbb
rclb
repz
arpl
cltd
inc
lahf
andb
pop
popf
lret
lcall
dec
test
sti
push
jne
pop
and
xchg
jne
sub
scas
scas
jnp
jg
cmp
sbb
mov
or
mov
test
cld
or
dec
adcb
out
mov
ljmp
scas
int
and
xor
jae
inc
cmc
ljmp
push
insl
xchg
push
mov
mov
push
pop
pusha
jbe
in
mov
sub
icebp
sbb
daa
xor
movsb
clc
mov
adc
loopne
mov
pop
shll
dec
fwait
xlat
inc
aas
popa
in
negl
xor
sbb
lods
pop
push
sub
jbe
sbb
lea
push
cmp
jno
fwait
mov
neg
and
or
addr16
add
in
cmp
push
out
icebp
imull
daa
add
push
ljmp
into
push
fsubrl
or
adc
push
sub
sub
or
ss
shlb
outsl
adc
aam
cltd
mov
xor
pop
lcall
rcll
pushf
inc
dec
xchg
sbb
pusha
push
clc
shlb
in
mov
ret
add
stc
fsubr
inc
ss
popa
push
inc
rorl
aad
pushl
mov
mov
push
cli
out
mov
cmp
mov
sub
mov
xor
mov
sahf
push
mov
out
xchg
orb
inc
mov
cmpsb
clc
cmp
push
stc
sub
cwtl
popa
stos
cwtl
out
ds
js
and
mov
shl
int3
add
xor
imul
lods
mov
not
scas
push
ds
lea
adc
xchg
sbb
jno
stos
xor
fldl
mov
popa
ljmp
addr16
lcall
mov
add
jge
sbb
and
xchg
dec
dec
aam
outsb
xor
cmp
adc
jle
adc
fldl
or
data16
aaa
scas
dec
rcr
dec
enter
ret
xchg
push
je
push
movsl
mov
shll
mov
xchg
int
mov
mov
sbb
jge
add
inc
sahf
cmp
xchg
in
cmp
mov
cmp
pop
lret
jo
inc
and
iret
setae
les
or
mov
aam
mov
push
fldl
push
jns
cld
or
cmp
pop
loopne
dec
mov
add
fs
sahf
dec
popf
fbld
push
cs
jmp
or
jae
push
jl
add
ss
dec
adc
mov
lods
js
loope
ffree
divl
mov
push
or
mov
mov
loope
mov
xchg
cmpsl
xchg
lds
stos
repz
inc
in
sahf
xchg
add
xlat
test
mov
repz
data16
and
inc
adc
ja
mov
and
movsl
cmp
jge
gs
into
or
es
mov
das
xor
ffreep
andl
xlat
pop
inc
mov
mov
fcoml
fdivrl
ss
ret
in
inc
jg
pop
adc
subb
dec
add
lret
pop
pushf
dec
xchg
mov
dec
and
ss
cld
cld
jo
arpl
sub
cld
jnp
divb
and
bound
add
jmp
xchg
adc
mov
ds
mov
and
or
xlat
insl
inc
or
shrl
mov
adc
fcmovu
cltd
imulb
addb
je
mov
mov
sbbl
push
push
push
cmc
sbb
xchg
sub
inc
inc
lahf
shr
fiaddl
jmp
mov
sub
shrb
cmpsl
es
cmpsl
or
lock
imul
pop
jnp
xor
pop
mov
jmp
fldl
pop
dec
push
cwtl
mov
test
push
pop
push
push
js
sbb
inc
pop
add
jb
lds
and
jmp
lret
int
aaa
and
sbb
sub
rcll
dec
push
sarl
inc
jg
jns
push
xchg
sub
ret
dec
daa
stc
mov
sub
repnz
add
cmp
pmuludq
addl
loop
xchg
movsl
xor
aaa
pushf
inc
js
leave
sbb
cld
sbb
fs
sahf
out
fisubs
cmp
push
add
push
push
movsb
pop
or
sahf
xor
mov
sub
jmp
push
push
fnsave
jne
jle
pop
xchg
ret
lods
js
scas
js
pop
lea
outsb
inc
cmpsl
aam
jecxz
mov
out
or
add
adc
cmp
fwait
popa
inc
and
dec
fimuls
xor
sti
js
mov
push
cmp
pop
jne
js
sbb
sti
and
mov
sahf
xor
pop
jge
in
fucomip
jge
pop
outsb
orb
sub
push
test
fdivrl
jnp
insb
jmp
fstpt
es
sub
loope
out
fiadds
mov
jl
fisttps
sar
sbb
adc
add
movsb
cmp
cmp
jo
fiaddl
fnstcw
test
dec
ret
out
xchg
fmulp
arpl
add
lahf
movsl
mov
mov
cmp
call
out
mov
clc
adc
je
lea
jp
aaa
lea
shlb
and
sti
cmp
pop
or
and
mov
xor
jae
mov
lret
mov
add
xor
test
ja
imul
std
dec
ss
sub
or
pop
sub
cmc
ja
fwait
xchg
imul
hlt
sbb
rcrl
mov
sbb
hlt
mov
jbe
es
cltd
mov
push
rclb
enter
mov
fdivl
popf
pop
mov
mov
mov
inc
dec
fwait
dec
scas
sub
adc
sbb
jl
iret
xchg
std
and
mov
add
fiaddl
arpl
data16
dec
js
js
in
mov
lret
pushf
ret
or
mov
or
dec
test
inc
jle
jno
int3
iret
mov
mov
add
stc
fbld
dec
adcl
popf
mov
into
pop
sti
cmovno
sbb
stos
imul
and
adc
sub
mov
pop
inc
ljmp
test
int
xchg
imull
mov
pop
and
push
test
fidivrs
jmp
call
xchg
and
rclb
push
lods
pop
xor
cld
lret
pop
add
and
imul
pmaxub
orl
stc
adc
dec
sub
dec
jbe
fiadds
mov
inc
das
je
dec
popa
mov
mov
mov
sbb
hlt
stc
stos
dec
jo
lds
and
mov
rcl
fsubrs
hlt
push
neg
fidivl
aaa
fisubs
mov
ss
lret
js
test
adc
clc
sub
popa
test
js
out
jb
sbb
mov
cmpsb
jle
mov
adc
lret
inc
in
out
rcrb
mov
adcl
pusha
loop
pop
cmc
dec
aas
test
ljmp
cmp
test
imul
mov
adc
sub
dec
jge
adc
pop
lret
jae
or
push
scas
lcall
leave
ds
cmp
and
cwtl
mov
std
cld
push
rolb
rorb
fisttpl
mov
ljmp
fsubs
outsb
pop
lods
pop
and
mov
mov
sbb
pop
data16
sbb
std
insb
test
add
les
mov
outsb
xchg
pop
outsl
insb
jecxz
jge
push
jb
adc
jge
movsb
sti
or
dec
adc
cmc
dec
xchg
and
jecxz
cmpb
jle
mov
stc
mov
in
jnp
xor
adc
subb
push
jne
push
sti
fldl
push
jo
push
rorl
mov
in
dec
xchg
mov
fstpt
dec
iret
cmpsl
test
sarl
sar
lods
dec
xor
mov
movsb
xor
xor
pop
jns
sub
push
fdivrl
sub
loope
inc
addr16
fsubrl
jge
pop
ja
call
xor
test
fisttps
adc
lock
mov
xor
popa
or
lods
loopnew
nop
push
jo
mov
sub
vmovntps
out
or
popf
call
fldt
push
addr16
sbb
add
mov
pop
lock
cwtl
sub
xor
mov
cmp
dec
dec
pop
imul
cmpsl
xchg
xchg
jne
dec
and
push
fsubl
pop
inc
cmp
jbe
inc
iret
sbb
pushf
iret
ror
mov
lret
out
cmp
mov
ret
sub
enter
es
mov
lods
sbb
xchg
test
inc
and
rcrl
dec
pop
mov
fcoms
fmull
or
jp
xchg
mov
jae
fists
ret
xchg
test
ja
jp
or
stos
ds
pop
movsb
into
out
or
cmp
pop
cli
mov
pusha
dec
stos
xor
out
inc
xchg
notl
jo
and
sub
inc
adc
stos
arpl
mov
add
lret
cld
test
or
mov
je
sub
dec
sub
xor
mov
leave
jg
xchg
mov
ror
sarl
insb
repz
and
in
xchg
clc
cmp
rolb
pop
test
loope
sub
jbe
mov
vmovdqu
outsl
addr16
mov
sahf
dec
pop
xor
test
daa
mov
mov
sbb
push
aam
mov
fcoms
mov
fs
popa
and
mov
xlat
pushf
lods
jns
jo
mov
lds
xchg
sbb
push
mov
cmpsl
or
push
sub
pop
clc
mov
es
add
aas
push
cmp
fnstenv
out
fildl
es
ret
rcrl
ja
adc
mov
add
sbb
mov
inc
shl
jp
inc
mov
jmp
mov
scas
dec
ret
push
mov
mov
add
rcll
repz
int3
rcrl
xchg
std
xchg
in
popa
xor
sbb
push
dec
sbb
jecxz
xchg
and
int
push
shrl
std
lds
mov
push
repz
ljmp
or
divb
mov
add
leave
fdivrs
sbb
insl
imul
jae
fisttps
repz
inc
cmp
xchg
xchg
pop
jb
dec
enter
imul
lds
push
jp
mov
int
stc
push
cld
pop
mov
fs
call
adc
mov
in
rolb
std
push
mulb
fbstp
push
sub
into
icebp
repz
push
fld1
cmp
aam
fldcw
push
sbb
aad
jl
push
arpl
pop
jp
cmp
mov
add
js
or
adc
test
out
push
adc
or
imul
popf
inc
ja
xor
or
es
in
xor
push
fdiv
rcrl
insb
xor
cli
adc
lret
int
add
pop
lcall
xchg
inc
imul
into
push
inc
ret
adc
popf
pop
arpl
mov
pop
mov
sbb
push
xor
ret
and
jne
xchg
push
jg
std
cmc
jo
mov
pop
cmpsb
mov
mov
cmpl
ss
sti
xlat
aas
mov
pushf
jle
mov
aam
lret
cltd
sub
push
pop
outsb
or
sti
cld
add
fsub
loop
test
sub
and
clc
cs
mov
dec
mov
or
xchg
mov
out
mov
loopne
fldl
add
cmp
orl
leave
push
mov
inc
icebp
inc
mov
jno
inc
add
mov
mov
sbb
xchg
push
push
inc
scas
mov
cwtl
jo
ret
mov
xor
push
insb
arpl
inc
andb
cwtl
cmc
ficompl
inc
xchg
cmp
cmc
loop
sub
push
mov
sub
add
fdivs
mov
jae
or
pusha
insl
cmp
test
dec
sub
pop
push
mov
lcall
popa
or
imul
mov
bound
sbb
rol
xchg
sbb
int
push
sahf
lcall
xor
or
scas
lcall
or
cmp
and
loopne
mov
stos
test
out
or
adc
mov
jg
push
cld
int
mov
rorb
ljmp
mov
sub
jg
cmp
shrb
rcr
jnp
inc
pusha
imull
call
xchg
jns
mov
std
xor
inc
iret
pop
outsl
push
cmp
das
mov
adc
mov
ror
mov
loope
mov
sub
cmp
wrmsr
ja
xor
pop
sub
or
jl
xor
jbe
movsl
xchg
adc
les
mov
dec
cmc
cmp
xchg
loopne
aad
jbe
sub
mov
pop
insl
cmp
scas
notl
in
out
xor
push
shrb
in
insl
mov
rep
push
std
popa
mov
in
iret
add
call
pushf
fiaddl
ja
xor
ja
sbb
inc
mov
add
in
pop
mov
nop
adc
fcmovnu
in
leave
btc
mov
rorl
push
adc
adc
outsl
sbb
cmpsb
mov
pop
popf
outsl
clc
or
cld
in
push
xchg
cmp
xchg
shlb
add
sbb
das
add
out
inc
mulb
mov
test
push
sub
cmp
lahf
or
xchg
xchg
cmpsl
mov
push
mov
fcom
dec
js
rorb
sti
shll
mov
test
gs
push
decl
sub
mov
outsb
repnz
xchg
mov
mov
je
data16
ror
sbb
adc
sti
jae
fisubrs
rclb
fsincos
data16
or
inc
and
pop
mov
sbbb
and
aam
ljmp
jno
mov
cli
and
sti
xchg
xchg
mov
jns
mov
inc
mov
fiaddl
push
jo
lds
outsb
clc
ljmp
adc
pop
and
arpl
lea
mov
out
mov
dec
push
push
idivb
ds
aam
stos
movsl
xor
xor
add
jl
outsb
dec
hlt
pop
or
inc
divb
fidivrl
sbb
cmp
stos
inc
cmpsl
xor
cltd
idivb
mov
inc
push
jae
lods
imul
enter
leave
aas
jge
hlt
mov
jl
aaa
fistpl
inc
inc
test
repnz
sub
push
xchg
out
pop
imul
mov
hlt
pusha
lock
inc
int
adc
shl
dec
xor
and
push
push
cmpsl
adc
mov
jmp
add
inc
mull
popf
push
je
subb
add
sbb
xchg
movsl
inc
fistpl
push
movsb
adc
loopne
mov
xchg
test
sahf
add
jns
sbb
pop
mov
std
ret
sbb
sbb
frstor
dec
bound
fdivr
sub
mov
inc
aad
mov
call
jg
cld
cmp
push
hlt
lret
pop
inc
mov
jnp,pn
or
cltd
cs
mov
insl
pop
pop
cs
test
call
xchg
lock
or
enter
in
jns
in
mov
mov
test
or
mov
mov
or
shr
or
mov
xor
lret
ror
xor
shlb
gs
and
test
inc
pop
negl
add
jg
lods
shrd
and
sub
xchg
cmp
mov
mov
stos
sti
jb
mov
div
das
incb
sbb
leave
out
scas
outsb
add
das
lock
push
stos
testl
jmp
jle
inc
int
lret
stc
xchg
dec
rcrl
std
pop
ret
cmc
test
bound
add
sub
in
jl
sub
mov
out
ds
cmp
ds
leave
cltd
adc
push
mov
arpl
fcoml
scas
or
andb
or
mov
mov
jmp
dec
fwait
scas
xchg
addr16
fildll
mov
loop
in
inc
sub
jge
sbb
add
repz
out
sub
adc
xchg
xor
push
pop
inc
sahf
xlat
dec
or
gs
nop
pop
dec
test
xor
outsb
icebp
call
sbb
xor
mov
repz
fcoms
lock
imul
adc
jle
jg
cmp
jae
dec
stos
add
xor
inc
ret
rolb
roll
and
xor
lods
mov
cmpsl
cltd
adc
xor
pop
push
mov
jp
addb
popf
in
mov
aam
xor
pop
sbb
jmp
xchg
ret
sub
and
cmp
adc
ficoms
pop
pop
push
jae
icebp
inc
xchg
outsl
inc
jne
xchg
mov
pop
sbb
pushl
ljmp
push
pop
fisubrl
mov
cld
pushf
stos
imul
jb
cltd
sbb
cs
xor
psubw
leave
setge
movsb
push
inc
loop
aaa
pop
jne
pushf
std
dec
ret
or
xchg
jmp
dec
mov
test
movsb
mov
loop
addr16
mov
push
and
lea
push
xor
icebp
in
xchg
push
cld
mov
nop
rcrl
imull
sbb
loopne
mov
and
inc
push
fisttpll
inc
pop
in
sub
dec
pop
cmp
mov
iret
dec
leave
pop
add
jmp
mov
mul
jp
mov
push
decl
xor
notl
mov
dec
and
popa
mov
lret
add
xchg
aam
sub
mov
out
mov
add
fiaddl
fnstsw
lods
cmp
add
fisttpll
lea
adc
dec
lahf
push
jno
mov
shll
add
jno
cmpsl
ja
fistl
push
clc
xor
lcall
cmp
ss
sub
pop
pop
xor
test
jl
test
push
mov
into
popa
cmp
mov
aam
pop
stos
aaa
roll
dec
pusha
cmpsb
out
push
xor
pop
add
cmp
xlat
xchg
popl
flds
adc
mov
in
insb
inc
call
mov
jp
lds
or
mov
in
push
mov
pop
clc
inc
cmc
in
cmpsb
inc
push
mov
xchg
jne
dec
mov
data16
mov
sbb
mov
imull
or
insb
push
push
add
aaa
out
loopne
mov
xor
icebp
sbb
stos
sbb
xchg
lcall
cmp
lods
xchg
dec
cmpsb
mov
cwtl
pop
push
pop
inc
insl
xor
sbb
gs
js
mov
rolb
and
and
xchg
nop
sub
notb
mov
xchg
stos
adc
sub
pop
inc
lcall
sub
pop
cltd
outsl
jmp
or
out
adc
sbb
sahf
sbb
movsl
das
mov
insb
inc
sar
sub
cmp
es
mov
push
inc
lahf
mov
push
das
pop
inc
xor
sbb
pop
test
pop
adc
add
mov
fstps
sahf
filds
lock
mov
sub
repnz
scas
inc
xchg
xlat
lret
hlt
add
push
dec
pop
adc
xor
jnp
cmp
mov
cmc
pop
shlb
push
cmpsl
pop
jle
jmp
mov
inc
lea
adc
xor
lcall
in
rcr
push
loop
call
sub
aaa
loop
mov
lret
mov
mov
cmpb
sub
mov
fimuls
iret
nop
aam
adc
mov
inc
push
pop
lds
leave
push
and
in
loop
inc
js
int3
push
cmpsb
jb
addr16
sbb
cmp
daa
pusha
add
jae
pop
xchg
sub
adc
addr16
out
add
repz
mov
xchg
xchg
or
jl
mul
xchg
xchg
out
imul
fistpll
sbb
pop
cmp
movsb
icebp
cmovo
call
push
jb
cli
fisubs
pop
mov
pop
fsubs
mov
and
mov
shrb
mov
in
fstpl
push
mov
arpl
fsubrs
push
push
sbb
push
orl
pop
movsb
fiadds
push
pushf
jmp
mov
mov
ss
cmpsl
aaa
xor
lods
lods
insb
xor
aad
add
and
test
fdivl
or
ljmp
or
jp
movsb
inc
pop
arpl
das
js
xor
add
and
push
mov
in
stos
pop
or
xchg
xchg
mov
cmp
mov
add
sbb
ss
push
mov
push
imul
sub
test
test
or
xchg
lock
sbb
out
in
test
sbb
rclb
ds
cwtl
aam
inc
jmp
push
sub
dec
movlps
fstl
mov
arpl
inc
mov
sbbl
xlat
inc
in
outsb
jl
xor
xchg
inc
push
xlat
je
or
push
cs
ljmp
test
fsubrs
cwtl
incb
sub
mov
and
push
sub
stos
addr16
int3
mov
fisubrl
pop
mov
push
in
dec
test
cmp
pop
cmc
sub
daa
push
push
xor
jle
outsl
lods
adc
mov
dec
test
out
out
test
push
rorl
movsl
and
ds
jo
mov
into
and
or
or
cmp
jb
and
lea
xchg
mov
aam
imul
mov
clc
pop
movsb
aad
out
test
xchg
xchg
or
mov
xchg
sub
xchg
fstp
xor
mov
sub
fnstenv
dec
pop
ret
int
xchg
pop
jo
enter
push
mov
std
pop
or
cmp
xor
jmp
sbb
push
jns
cltd
lcall
stos
mov
and
shlb
fstl
sahf
push
xchg
in
outsb
in
lret
mov
jae
cmp
pop
pop
popl
dec
les
push
scas
pop
mov
xor
jnp
lret
pop
movsl
je
loope
sbb
mov
mov
repnz
test
push
sub
js
dec
or
or
pop
shl
adc
rcrb
es
shrb
jl
or
mov
clc
xor
jmp
push
pop
sub
or
enter
xchg
mov
xchg
and
jge
int
stc
inc
jg
rcr
sbb
test
cmp
cltd
cmp
dec
pop
call
mov
mov
cmp
cwtl
in
xchg
lods
xchg
mov
adc
test
inc
frstor
testb
mov
lods
mov
stos
ret
xchg
arpl
inc
or
jle
popf
in
call
jge
adc
sti
pop
xor
nop
out
ljmp
pop
scas
fnstcw
dec
adc
lret
jbe
stos
popf
loop
xor
push
notb
pop
mov
cmpsb
dec
lcall
test
mov
xchg
cld
cmpsl
stc
cs
sbb
ret
xchg
or
ret
aaa
dec
test
aam
mov
mov
mov
pop
cli
dec
cld
pop
fwait
imul
mov
push
cmp
int
sbb
jge
mov
jg
fbld
rorl
mov
cmp
xchg
sub
int
jne
rorl
add
or
ljmp
xchg
inc
lcall
inc
push
mov
mov
mov
sbb
pop
imul
lea
jmp
mov
sub
inc
ja
or
dec
das
or
add
mov
inc
pop
or
sub
mov
cmp
imul
lods
lea
sbb
flds
push
popa
xor
lods
ds
adc
inc
mov
into
sti
fsubrl
mov
or
xor
xor
das
add
ss
ret
mov
cmpsl
jle
sbb
inc
mov
jecxz
out
out
cmp
push
test
pusha
jl
out
cmp
dec
daa
push
sbb
push
jo
orl
cltd
arpl
les
mov
cmp
mov
ja
sahf
aad
dec
lret
ds
call
mov
gs
and
adc
shrb
in
ss
dec
inc
cmpsl
call
jp
addr16
and
adc
adcb
mov
jns
jle
in
pop
cwtl
pop
mov
fst
test
pop
das
push
xorb
mov
clc
fiaddl
scas
xchg
popa
mov
xchg
and
mov
mov
fbld
lock
jo
sub
out
orb
adc
and
test
icebp
cmpsl
or
lahf
fwait
dec
das
rdtsc
adc
pop
mov
xor
fmuls
adc
fsts
jmp
inc
lods
lods
xor
mov
lcall
fadd
sub
daa
insl
in
sub
pop
push
sub
pop
pop
ja
aad
dec
addb
jne
jb
fimuls
stos
fistl
xchg
cltd
or
mov
xchg
and
call
cltd
cmpsb
cltd
clc
and
shld
jmp
xchg
xchg
sub
and
sbb
fldcw
cld
jno
arpl
lahf
dec
and
cltd
and
popw
dec
in
aad
sbb
xchg
push
mov
sub
mov
adc
shr
sbb
xor
jns
push
lods
xor
mov
aam
insb
adcl
mov
aam
xchg
cmc
pop
outsl
loop
inc
sti
add
push
fdivs
jp
in
lret
xor
fs
pop
hlt
sub
push
or
cmp
mov
cmp
js
xor
ljmp
xchg
inc
mov
shlb
imul
int
daa
pusha
xor
lahf
js
fistpll
into
push
xchg
inc
aaa
inc
sarl
mov
int
jno
movsb
push
rolb
lods
cmp
ds
jecxz
adc
lret
cld
mov
cmp
mov
inc
inc
jle
testb
cmpsl
add
jae
pop
cwtl
dec
mov
std
repnz
cwtl
sub
das
sub
dec
insl
pop
cs
test
sbb
dec
jae
int3
ljmp
into
mov
pop
mov
das
pop
daa
dec
jb
pop
push
es
std
jecxz
pop
jno
dec
outsb
inc
insb
sub
dec
cmpl
or
add
jb
aad
pop
icebp
or
jmp
ljmp
dec
mov
jl
lea
jbe
in
aas
or
add
adc
jl
pop
sub
pop
or
push
xchg
test
xchg
push
adc
or
sbb
test
fsts
xchg
in
inc
sub
fidivrl
cmpsl
lahf
test
movsb
dec
lods
pop
xchg
les
cmp
jp
adc
inc
daa
lcall
lock
sbb
xchg
push
cmp
outsb
ljmp
xorb
jb
movsb
cltd
pop
xchg
fprem
subb
or
add
sbb
enter
cld
ror
icebp
and
pop
rclb
pusha
lret
cmp
leave
cltd
cmpsl
lea
push
popf
shrl
scas
pop
cmp
mov
jmp
arpl
xor
andl
push
nop
add
sub
jp
inc
add
mov
mov
imul
push
rorb
mov
jl
jp
pop
js
in
sbb
cld
inc
mov
mov
dec
inc
inc
or
jb
pushf
insb
clc
mov
std
dec
lds
js
adc
pop
push
imul
outsb
sub
mov
pop
into
mov
lea
and
cld
inc
mov
mov
movsb
in
dec
sub
sbb
jo
jnp
dec
shlb
sbb
push
xor
cmc
mov
call
insb
jp
inc
or
inc
call
adc
inc
orl
mov
dec
outsb
cmpsl
lret
xor
mov
pop
lock
faddl
int3
cmpsl
xor
sahf
test
addl
inc
jae
hlt
mov
and
jl
test
mov
movsb
js
dec
rorl
sub
jecxz
jns
inc
xor
arpl
or
jb
iret
jne
out
es
mov
sbb
mov
outsl
hlt
jmp
cmpsl
pop
lret
outsb
dec
mov
inc
inc
test
xor
popf
fbld
sub
aad
repnz
jecxz
outsb
je
movsb
lea
dec
pop
jnp
test
xor
roll
in
dec
repnz
sti
xor
push
adc
pop
push
pop
test
inc
push
stc
sub
fs
adc
jb
js
cmp
mov
xchg
cwtl
inc
insl
push
mov
jns
and
test
aaa
out
mov
sahf
mov
xchg
add
jo
xlat
insl
sarb
sub
aad
jecxz
jp
push
cld
cmp
xor
ljmp
sbb
mov
stos
inc
adc
scas
mov
rcrl
xor
jecxz
in
inc
add
cmc
and
shrb
repz
push
cmc
fistps
rorb
and
cmc
xlat
je
stos
adc
neg
sub
mov
or
mov
or
mov
xor
mov
test
repnz
sub
dec
xchg
push
sub
adc
xchg
hlt
mov
inc
jno
mov
push
movsb
lods
push
mov
shlb
sub
push
cs
dec
xor
leave
adc
push
jnp
push
cmp
inc
push
jp
loop
or
inc
scas
cmpsb
insb
inc
cmp
nop
pusha
clc
mov
inc
jmp
or
popf
sub
and
test
stos
js
test
sarb
inc
repnz
std
shrl
mov
pop
scas
xchg
fisttps
ficoml
xor
rol
jg
cmp
test
and
enter
xchg
xchg
out
add
shll
mov
ss
into
bound
mov
daa
mov
push
mov
jb
pop
jns
add
sbb
xor
imul
mov
fstpt
scas
push
js
aaa
cmp
mov
inc
ret
out
push
fs
and
cmp
pushf
ljmp
cmp
sahf
clc
repnz
je
fldl
jns
mov
lcall
fdiv
adc
mov
testb
das
inc
or
out
les
loope
add
clc
pop
stc
sarb
out
lods
in
jl
mov
jnp
std
add
jg
adc
mov
cmp
and
mov
adc
cmpsb
ret
mov
popf
decb
jae
jne
sbb
cmc
sub
cmc
sub
pop
aad
pop
inc
push
add
loopne
inc
js
jo
arpl
in
dec
pop
cld
mov
es
lds
xchg
fidivrl
jns
sbb
adc
cs
sub
nop
push
pop
lock
flds
pusha
ret
jmp
lcall
jmp
push
mov
cmp
sub
adc
fwait
add
fbld
mov
and
lods
cmp
es
popa
or
ja
push
cmpb
decl
sbb
jne
shrl
insb
cmp
pop
dec
out
inc
mov
mov
pushf
enter
aad
sub
ljmp
out
mov
jb
cmc
enter
cmp
out
jecxz
push
sub
outsb
hlt
nop
scas
imul
pop
test
add
mov
mov
adc
or
fcmovnbe
push
arpl
imul
fiaddl
ret
xor
pop
popa
clc
push
mov
lcall
xchg
pop
popa
jp
and
push
cmpb
ja
cmp
push
mov
pop
xor
mull
add
int
jno
or
inc
adc
outsl
shll
xchg
sub
cmpsl
or
mov
lahf
pop
rcll
or
dec
in
pop
add
aad
inc
lret
das
std
outsb
in
mov
subb
pop
ret
ds
daa
lods
fists
lcall
rcrb
scas
and
fdivp
push
repnz
add
cmp
shll
fs
push
sub
pop
out
sbb
mov
popa
inc
mov
pop
subl
sbbl
push
sbb
test
ss
icebp
mov
fs
inc
aam
push
out
jb
push
push
sti
hlt
mov
out
push
inc
and
pop
stc
or
imul
fs
or
mov
or
fsub
sub
pusha
ret
ret
stc
in
stc
out
xchg
inc
or
push
and
mov
push
push
divl
pushf
js
jl
or
out
repnz
jge
jg
mov
add
or
or
lock
daa
loopne
lds
push
cmp
js
pop
xchg
mov
fisubl
fstpt
pop
shlb
sub
mov
dec
test
mov
outsl
mov
xor
insb
movsl
xlat
pop
add
jecxz
cld
test
scas
inc
pop
xchg
ret
inc
aaa
dec
das
xchg
and
or
out
push
pop
jns
ja
dec
repz
mov
jns
dec
mov
pusha
roll
pop
idivb
iret
add
leave
mov
int
arpl
adc
mov
push
xor
in
stos
mov
call
inc
or
js
and
movl
jg
cmpsl
inc
and
rcl
inc
jmp
push
mov
movsb
mov
dec
faddl
and
lret
and
ds
jae
mov
xor
pop
push
xchg
in
and
jo
cmp
cmp
jb
std
push
popf
inc
mov
in
or
xchg
fstpl
imul
movsb
je
xchg
and
and
dec
fsts
push
dec
std
push
mov
fidivs
dec
ljmp
repz
push
mov
ret
insb
loop
stos
add
jg
loop
pop
jge
mov
jg
shll
adc
cmp
loope
push
mov
cmp
or
cmp
dec
std
lret
iret
mov
push
cmp
inc
adc
rclb
push
shl
dec
xor
sbb
push
aas
aad
mov
pop
shll
jecxz
xchg
mov
sti
imul
mov
lods
or
cmpsb
push
orb
psrlq
jno
sub
pop
mov
int
sub
add
push
lahf
outsb
insb
clc
push
in
cwtl
pop
cmpsl
inc
mov
or
sti
jmp
push
out
arpl
mov
outsl
add
pop
adc
rcr
insl
add
mov
mov
lret
inc
mov
test
cmp
shr
mov
lret
mov
fbld
not
in
xor
nop
cmp
mov
ret
out
cltd
jo
mov
cld
adc
jbe
or
mov
add
inc
xchg
repz
or
fsubs
cmpsb
wbinvd
pop
stc
leave
sbb
xchg
pop
inc
loopne
jmp
mov
mov
jno
jno
inc
gs
xchg
sbb
cmc
inc
or
imul
push
outsl
push
cmc
scas
repz
mov
push
push
xor
lret
daa
pop
and
adc
push
repz
sub
mov
jmp
repnz
mov
or
push
lods
outsb
sub
cli
in
inc
push
iret
movsb
xlat
data16
dec
mov
add
cmp
mov
xor
pop
inc
xchg
add
jbe
mov
add
cmp
cwtl
push
test
loop
mov
pop
dec
and
add
mov
repz
call
mov
in
mov
jg
outsb
iret
mov
cmp
jg
cld
push
lods
xlat
xor
jb
fstpl
push
dec
jg
lea
xchg
ret
scas
mov
je
xchg
and
aas
dec
inc
adc
jns
xchg
outsl
mov
jle
pop
clc
mov
arpl
pop
sbb
lret
and
cs
sbb
test
or
mov
push
mov
lock
stc
mov
cmc
les
gs
mov
jecxz
inc
adc
ret
fdiv
cmpl
rcr
hlt
rcl
lcall
jne
sbb
adc
pop
stos
arpl
sbb
and
and
and
in
repz
repz
jp
insl
push
xchg
ret
push
ss
cs
ds
icebp
push
stos
cmc
out
mulb
gs
xchg
ret
push
jne
push
shll
lahf
imul
sahf
jg
lock
mov
popa
mov
push
add
xchg
jp
out
jmp
xchg
in
repnz
imul
mov
ds
sub
lods
div
fnsave
cmp
cli
inc
ss
clc
push
hlt
hlt
dec
push
movsb
pop
lods
les
lock
popf
inc
sub
fbld
call
lock
outsb
dec
ret
fs
test
enter
and
mov
and
mov
ja
xchg
gs
dec
push
pop
sti
xor
mov
mov
rolb
mov
stos
addr16
sbb
push
scas
dec
mov
jne
les
fiaddl
stc
test
inc
cmpsl
inc
and
mov
lods
js
mov
or
cmpsb
lret
pop
insb
mov
inc
inc
aaa
call
in
push
push
pop
repnz
and
xor
int
out
or
out
push
xchg
lret
sub
out
push
test
dec
fsubr
xchg
sahf
outsb
mov
add
pop
sub
orl
cmp
in
dec
imul
add
push
xchg
jecxz
pop
dec
jmp
mov
daa
flds
outsb
xchg
mov
push
mov
xlat
mov
cmp
xchg
sub
or
cwtl
aam
iret
and
mov
in
jge
mov
imul
stc
push
sbb
test
in
inc
rolb
inc
mov
push
ljmp
scas
imul
lea
in
gs
dec
xchg
cmp
in
shll
or
lret
adc
rorb
mov
dec
xchg
mov
ret
ss
push
push
scas
call
push
fwait
shrb
mov
popf
imul
sti
cmpsb
jecxz
mov
fcmovnb
mov
in
add
sahf
sub
xor
add
pop
insb
push
fmuls
fiaddl
addr16
addr16
shl
adc
mov
lret
push
add
add
pop
sub
das
push
jmp
push
scas
mov
dec
mov
inc
adc
ja
negl
cmp
shl
sub
push
mov
in
aam
and
add
sbb
lods
mov
add
mov
gs
mov
in
mov
sub
fnstenv
and
faddl
testl
sub
add
fs
imul
int
add
cwtl
jmp
into
enter
xchg
xchg
sub
mov
lods
cs
xor
sub
std
lret
jl
std
sub
push
add
cwtl
repz
inc
push
dec
add
cmp
mov
xchg
mov
or
inc
shll
push
rcrl
inc
lea
stc
pop
and
cltd
lods
sub
pop
add
bound
pop
fisubrs
sub
push
xor
mov
mov
or
sub
fidivl
lcall
sub
cld
cmp
daa
js
cmp
outsb
cmp
outsb
fdivr
stos
scas
es
shrb
cwtl
pusha
add
adc
or
fldcw
pusha
pop
out
shlb
cmpsl
rolb
dec
push
mov
mov
popa
in
jg
push
ljmp
mov
jle
sbb
movsl
rcrb
inc
fdiv
xchg
nop
ret
aad
mov
popf
out
movl
xchg
enter
aas
rcll
xchg
fst
mov
mov
ret
cld
sub
cmp
mov
cs
iret
mov
xchg
xor
orl
rcrb
push
cmpsl
push
loopne
xchg
fnstsw
mov
repnz
mov
or
jb
lret
mov
pop
or
div
dec
imul
pop
movsb
into
mov
pop
adc
xlat
enter
movsb
lds
cmp
out
inc
sub
cmp
sti
pop
xchg
push
cmp
std
cs
and
and
pushf
fistpl
xor
sub
jb
jle
fcmovb
fiadds
outsb
xlat
stc
jecxz
sub
orl
sub
stos
out
pop
xchg
test
in
clc
aam
mov
imul
data16
and
fdivs
popl
dec
xor
or
roll
jbe
ljmp
mov
pop
loopne
ljmp
loope
pop
pop
aaa
subl
xlat
mov
sbb
mov
sub
add
push
outsb
mov
int3
mov
sbb
add
adc
push
or
sbb
xchg
mov
idivl
in
scas
stos
fldl2e
ret
lock
adc
ret
xchg
out
add
inc
mov
xchg
xor
mov
push
or
leave
test
and
test
test
dec
repnz
jecxz
fcoml
into
mov
jnp
pop
in
pop
sbb
jo
cmpsb
mov
lret
xor
sub
and
dec
leave
rolb
and
fsubrs
aas
sbb
add
jns
test
imul
rorl
subl
xchg
popf
xchg
xchg
and
mov
ss
jp
jo
xchg
push
mov
push
hlt
cwtl
pop
adc
push
mov
xchg
roll
fcoml
pushf
faddl
sbb
and
test
lahf
push
loopne
adc
test
pop
movsl
test
out
sbb
mov
and
adcl
push
iret
mov
fnstcw
and
mov
sub
shlb
add
test
pop
xchg
adc
fstl
cli
mov
cli
push
jns
daa
cmp
nop
push
and
in
cmpsb
ja
cmpsl
inc
arpl
popf
cs
shll
pop
pop
pop
movsl
dec
and
insb
imul
aaa
inc
addb
push
xchg
push
call
add
mov
arpl
sub
adc
fwait
mov
push
sbb
sub
mov
xchg
inc
add
out
bound
jns
mov
and
xchg
push
popa
and
or
xor
js
outsl
out
testl
int3
nop
loope
inc
inc
insl
jo
scas
pop
add
inc
xchg
int3
insl
push
cmp
adc
filds
cwtl
shlb
push
jmp
cmp
out
mov
dec
sub
push
xchg
inc
and
mov
mov
filds
loopne
or
insb
and
rol
inc
mov
dec
dec
push
clc
insb
das
mov
add
push
not
insl
stos
and
add
pop
cld
xchg
mov
adc
jecxz
repnz
mov
pop
frstor
mov
dec
pop
sbb
xor
pop
pop
pop
mov
aam
in
cmp
test
jecxz
sbb
sbb
push
cmp
xchg
iret
mov
adc
pop
jp
in
fwait
jo
fnsave
into
fadds
daa
dec
repnz
aam
sub
test
add
loopne
pop
jp
push
xchg
mov
out
mov
addr16
mov
add
mov
cmp
movsl
hlt
cmc
ficoml
mov
xor
cmp
mov
jb
lret
mov
lcall
sbb
mov
adc
rclb
or
mov
xor
sets
inc
jecxz
dec
lds
daa
sub
lock
shll
adc
jge
loop
mov
mov
and
jns
dec
sub
cmc
push
and
ja
scas
and
mov
sbb
xchg
or
enter
mov
lock
pop
fisubrl
xchg
jae
int3
cmpsl
pop
mov
mov
cwtl
hlt
data16
es
ret
dec
mov
loop
iret
jmp
rcrb
xor
xor
mov
imul
sbb
add
idiv
add
hlt
out
insl
inc
xchg
jecxz
dec
test
mov
arpl
mov
sub
repz
aas
pop
jecxz
pop
inc
mov
ljmp
and
cwtl
movsb
repz
hlt
iret
fisubs
mov
inc
push
jne
je
icebp
inc
pop
insl
gs
in
mov
and
out
push
dec
jno
int
dec
pushw
sub
in
xor
pop
test
pusha
addr16
ss
adcb
mov
pusha
mov
or
jno
lock
scas
inc
aas
cmp
cmp
and
or
inc
call
dec
xor
sbb
out
or
je
jnp
pop
cwtl
push
ljmp
bound
inc
stos
data16
mulb
adc
ror
das
sbb
leave
mov
mov
test
iret
push
std
cld
mov
pop
jge
addl
and
repz
push
xor
cli
cmp
nop
sbb
or
add
fbstp
pop
inc
push
into
std
popf
xchg
jbe
jno
sub
int
pop
and
pop
inc
xlat
and
adc
dec
aaa
fiaddl
aam
or
pop
xchg
leave
xchg
push
dec
fstpl
jecxz
sub
andb
or
into
in
add
movsl
push
out
cmpb
mov
in
mov
lcall
lods
add
test
sbbb
sub
hlt
movl
sub
lods
cmp
sub
lahf
sti
dec
jo
movsb
gs
jmp
and
testl
sbb
fidivs
lret
hlt
aaa
mov
inc
bound
pop
jb
cmpsl
gs
mov
or
shrb
mov
test
stc
repnz
dec
push
sbb
inc
cmp
jnp
out
out
xor
pushf
jmp
scas
test
mov
js
out
mov
roll
xor
loopne
pop
pop
movsb
jo
test
outsl
xor
xchg
pop
sbb
inc
int3
mov
jno
dec
push
sbb
dec
cmp
idivb
pop
add
in
bound
adc
xchg
cmp
xchg
push
dec
roll
ja
lods
add
cmp
lods
lods
dec
xchg
mov
ret
push
insl
mov
cmpsl
sub
sti
sbb
sarb
push
mov
push
add
jae
das
mov
lret
push
mov
into
jno
scas
jo
data16
ja
fildll
or
dec
idivl
dec
sub
dec
ss
lahf
xor
xchg
cmpsl
data16
sub
mov
jl
inc
in
sbb
into
mov
add
imul
cwtl
sbb
jo
test
push
push
dec
jge
jmp
cmp
repz
es
mov
mul
sub
mov
pop
xlat
or
outsb
xchg
mov
bound
xor
stos
xor
push
mov
jge
mov
mov
lret
hlt
lods
adc
int3
mov
pusha
loop
mov
dec
add
xchg
ljmp
repnz
rcrb
pushf
xor
ljmp
arpl
jnp
outsl
cmpsl
or
cmp
fdivs
xor
push
test
push
push
mulb
mov
lret
iret
jb
cmp
rcrb
test
add
jb
or
mov
fisttps
push
push
or
outsb
out
xor
jae
stos
popl
add
insl
in
mov
loopne
push
mov
lock
cmp
sahf
push
aam
das
sub
pusha
adc
sarb
mov
or
stos
fidivs
mov
push
sub
loop
cmpsb
movsb
ret
jnp
dec
pop
mov
pop
rorb
jo
adc
pop
aam
sub
gs
pop
add
jmp
sub
jnp
rorb
outsl
lods
shll
mov
sub
adc
mov
ds
push
jmp
js
hlt
mov
enter
adc
cli
or
dec
lahf
push
jb
push
scas
lcall
lret
es
jbe
dec
enter
inc
jge
movl
fmuls
insb
lret
repz
pop
cmp
cld
ret
rcll
add
das
or
dec
in
addr16
andl
cs
pop
test
or
call
push
insl
adc
fcomip
adc
dec
clc
pop
xor
push
inc
in
jb
addr16
add
pop
orl
jl
cli
xchg
push
call
ret
dec
cmp
pop
es
jmp
add
and
incb
cmp
test
insb
outsl
push
sbb
out
mov
testl
mov
lret
test
adc
jns
in
test
aas
divl
jmp
xor
mov
call
test
mov
fwait
cld
int
rorl
psraw
sub
inc
add
clc
mov
movsb
xor
jns
outsl
cmp
sbb
cld
xchg
pop
jp
cwtl
xor
pop
push
dec
add
shr
mov
das
icebp
add
ret
mov
cmp
cmpsl
adc
je
xchg
xor
sbbb
shl
add
test
fldenv
dec
adc
mov
mov
adc
daa
jmp
sbb
mov
add
cmpsb
lcall
push
out
jne
mov
je
bt
add
add
loop
ds
in
addr16
mov
xor
pop
lahf
aas
mov
jmp
imul
cmpsb
popa
jae
xor
push
jmp
and
call
cli
pop
mov
subb
jne
add
and
dec
jmp
movswl
add
stos
ja
sub
cmp
lret
jo
pushf
into
jecxz
pop
data16
mov
cmp
repnz
daa
cli
cmc
cld
mov
adc
xor
xor
jns
mov
in
jl
mov
mov
and
int3
mov
movsb
dec
adc
dec
roll
loope
sbb
jbe
sbb
fadd
out
mov
xchg
pop
dec
sub
jnp
or
xor
pop
mov
xor
sbb
dec
call
sahf
es
clc
mov
orb
xor
js
dec
mov
fsubrp
jo
dec
jl
cmp
lahf
xchg
lea
cwtl
mov
or
aas
xchg
dec
pop
sub
outsl
and
nop
mov
stos
xchg
mov
cmc
out
test
ret
mov
cmp
loopne
jnp
fsubs
es
mov
stos
orb
bound
int
int3
push
data16
fcoms
mov
fisubrl
inc
mov
js
aaa
mov
test
and
flds
dec
jae
int3
aad
shrb
popa
jne
and
data16
aas
xchg
out
ja
mov
orl
shlb
and
bound
das
jl
clc
leave
fsubs
aam
scas
sbb
cmpsl
xor
cmp
mul
pop
dec
push
pop
mov
fcmovnb
cs
adc
cmpl
insl
data16
or
sahf
adc
dec
scas
jecxz
cld
xchg
xlat
insl
jno
adc
in
mov
mov
mov
xor
std
popa
adc
sbb
xchg
adc
negl
jle
out
push
jno
mov
or
enter
mov
andb
inc
dec
push
dec
subb
je
test
test
xchg
int3
in
push
in
testb
adc
sbb
add
mov
fdivs
fisubrs
fs
xchg
mov
subl
je
sub
loope
lock
add
iret
mov
inc
cmpsl
inc
jg
adc
nop
or
mov
xchg
xlat
or
add
jmp
dec
pop
mov
xor
ret
bswap
sub
call
out
adc
in
je
nop
add
leave
test
shrl
gs
adcb
sub
inc
mov
outsl
enter
aas
lds
sub
pop
pop
ret
lahf
scas
popf
cmp
cmc
sarl
fbstp
push
dec
mov
test
std
push
ficoml
push
mov
inc
mov
jl
and
mov
dec
sub
sub
jp
flds
sbb
nop
js
and
xchg
and
cmpsl
in
jp
mov
stos
jns
add
outsb
push
in
or
or
jb
insl
ja
clc
lret
add
in
nop
push
or
ja
shl
out
adc
stos
and
mov
jmp
mov
lahf
lea
fmuls
cmp
adc
cmp
sbb
mov
addr16
push
in
add
xchg
js
xchg
cmp
out
fsubl
fwait
loope
push
or
fstpl
insb
icebp
shrl
cmpsb
jno
fmuls
cmp
decb
push
cmpsb
jne
jno
sub
push
loop
pop
sbb
push
add
add
cmp
icebp
xchg
jns
in
xchg
push
loopne
pushf
adc
pop
sti
push
aaa
xchg
test
mov
fdiv
shlb
inc
inc
out
cli
or
xor
stos
push
idivb
xchg
pop
pop
add
aaa
fsubp
ljmp
addr16
jle
insb
mov
xlat
in
cwtl
out
pusha
xor
lods
fnstenv
sub
out
orb
int3
or
cmp
and
jbe
jns
add
insb
cmp
push
mov
cli
fisubl
out
fisubrs
cmp
nop
int
push
mov
jo
mov
pusha
in
lret
and
popf
mov
arpl
shrb
js
jg
es
xor
xor
xchg
std
sbb
xchg
cmp
push
pop
repnz
mov
iret
flds
pop
or
fnstenvs
xor
and
lret
xor
dec
lods
popa
inc
aas
jp
adc
pop
xchg
dec
pop
pop
mov
cmp
mov
dec
jbe
out
adc
adc
test
or
cmp
jae
cmpsl
adc
sub
sahf
sbb
rcl
popf
cmp
lret
sub
cmc
mov
xor
push
cmp
mov
stc
loopne
iret
add
mov
lds
lret
mov
out
mov
pop
mov
subl
das
out
into
and
bound
cmp
rorl
out
xchg
insl
clc
add
gs
pop
das
repz
aaa
push
outsl
xor
xchg
xor
mov
test
mov
jae
inc
shll
adc
leave
sbb
lods
les
adc
negb
sub
in
mov
push
inc
pop
jnp
lock
rcll
mov
xchg
push
add
mov
cmp
cmp
mov
inc
scas
movsb
pop
cmp
add
cwtl
adc
out
dec
push
hlt
mov
or
cmp
sbb
cmp
pop
xchg
int
mov
ss
cltd
pop
sahf
addr16
jl
fdivrp
addl
outsl
dec
test
or
push
push
std
dec
sub
xor
stos
jecxz
rorb
aam
leave
pop
scas
mov
mov
mov
lret
insb
cmp
incl
sub
adc
inc
mov
test
cmpsb
es
mov
adc
stc
dec
pop
jbe
mov
pop
sahf
jmp
jo
inc
ficompl
sbb
fcomip
pop
fwait
dec
dec
jnp
call
mov
gs
push
mov
aaa
lds
pop
push
jo
mov
pop
dec
xlat
inc
enter
mov
and
std
mov
int3
lahf
out
and
ja,pt
mov
jg
aad
add
mov
shr
mov
xchg
movsl
and
pop
fnstsw
jg
xchg
dec
in
retw
xor
jge
leave
cmp
arpl
sarl
insl
xor
arpl
loop
cmp
pushf
ljmp
mov
add
mov
inc
fsqrt
xchg
push
pop
sub
testl
hlt
and
and
mov
mov
xor
mov
sub
or
pop
das
jne
divb
mov
fsubp
test
jmp
pop
fs
scas
adc
jo
xor
imul
pop
push
call
push
push
dec
fdivp
push
fldt
cmp
test
jno
stc
and
lock
mov
inc
cmp
popa
jae
pop
and
pop
or
fcmovnbe
sbb
add
pcmpeqw
loopne
repnz
inc
inc
cmp
jns
call
dec
es
pop
faddl
movsb
push
in
addl
jge
dec
test
dec
iret
movsl
jg
xchg
add
pop
popa
jg
inc
mov
mov
rcll
into
cmp
cld
cmc
xchg
pop
push
out
inc
push
cmpsl
test
je
lcall
xor
inc
fbstp
mov
adcb
ret
inc
inc
mov
fs
stos
daa
in
adc
push
fmulp
ss
pop
cs
jae
imul
addr16
sub
inc
sub
loope
inc
insl
jbe
loop
mov
fcoms
inc
stos
loope
fnstsw
cs
scas
xlat
out
in
push
inc
mov
jb
pop
xor
cmpsb
jp
aaa
mov
add
fmull
dec
xor
push
mov
adc
inc
es
hlt
or
cmc
ja
pop
or
push
repz
mov
pop
insl
mov
ljmp
pop
add
jle
mov
add
dec
int
lret
into
sub
stos
mov
mov
fwait
jno
gs
rolb
jbe
iret
mov
push
imul
mov
inc
test
inc
cs
cmp
ffreep
sbb
mov
test
cmp
ja
test
fwait
test
fsubl
lock
cltd
ret
repnz
mov
push
pop
push
jns
jge
dec
sar
xor
bound
fildl
lods
test
fs
push
cli
movsl
and
ds
cmp
inc
repz
mov
add
mov
out
or
addb
mov
ds
fdivrs
inc
add
packuswb
push
popa
xchg
jno
pop
or
addr16
ljmp
mov
lcall
cmp
in
or
jp
mov
shrb
jae
ljmp
insb
arpl
popa
test
xchg
or
aam
adc
movsl
sub
lret
mov
jmp
lret
add
xor
jg
loope
pop
aad
add
and
sbb
pop
jecxz
pop
jae
addl
js
es
outsl
mov
popa
and
lock
fisubl
xchg
cmp
xlat
mov
imul
adc
pop
rolb
cs
xchg
sub
jae
fadds
push
fcmovbe
mov
or
sub
in
cmp
xchg
repnz
fdivrp
sub
lahf
das
xor
icebp
xor
push
jo
jo
mov
sbb
aaa
cmc
les
and
shlb
loope
pop
push
mov
lahf
jno
popa
inc
fwait
xor
stc
xor
or
imul
jmp
imul
add
mov
mov
sahf
fcomps
xor
sysenter
out
xor
adc
xor
mov
xchg
mov
dec
les
or
sbb
cmpsl
data16
adc
dec
int
or
cmc
and
movsl
xor
decb
adc
decb
xorl
shr
sub
mov
mov
mov
add
sbb
clc
fcoms
mov
inc
in
inc
dec
mulb
push
add
or
xor
int3
mov
inc
pop
sub
arpl
aas
lea
adc
jo
jbe
and
std
outsb
lret
sti
pop
or
pop
leave
shrb
sub
mov
mov
and
inc
lcall
pop
into
jl
or
jge
lret
fwait
ret
push
xor
xorl
movsl
xlat
xchg
xchg
jmp
rorb
in
sbb
sbb
mov
lods
mov
or
fcomps
push
jae
popf
jnp
jg
subb
pop
or
icebp
and
insb
fs
jae
mov
mov
and
mov
and
add
fidivl
outsl
add
pop
repz
sub
hlt
push
movsb
sbb
xor
lcall
out
xchg
dec
daa
cltd
outsb
or
cmp
dec
or
xchg
sub
loope
rorb
scas
cld
mov
inc
andl
pop
xchg
int3
in
mov
mov
xchg
iret
and
cmp
hlt
fists
lods
imul
dec
mov
orb
push
loope
shll
shrb
xor
jmp
and
das
cwtl
rorb
ret
push
scas
xorb
adc
dec
push
pop
rorl
lret
push
sbb
jno
inc
xchg
xor
xlat
xlat
lcall
jmp
ficompl
or
pop
fcmove
fwait
lods
and
jle
mov
lods
push
insb
loopne
mov
je
call
mov
jo
jmp
aam
in
inc
mov
sbb
dec
lods
loop
mov
xchg
xor
pop
test
sub
ss
test
es
orb
aas
clc
movq
mov
fldl
insl
and
shlb
xor
fwait
out
adc
insb
out
sbb
or
xchg
add
cmp
in
jmp
pop
and
arpl
mov
cmpsl
aaa
or
adc
jno
movsb
imul
pop
jbe
pushf
pop
lcall
imul
push
data16
testb
mov
rclb
dec
mov
loop
and
ffree
mov
inc
arpl
xlat
lea
xchg
aad
maxps
imul
inc
adc
xlat
cmp
leave
fldt
pushf
rorl
test
lea
jg
mov
flds
dec
inc
sbb
jg
xchg
jecxz
jmp
cmpsb
mov
inc
das
stos
jp
fsubs
adc
push
rcr
cmp
movsl
mov
in
cmp
xor
xchg
shll
hlt
mov
mov
lea
xor
jbe
adc
xor
lcall
ret
jo
sub
adc
xchg
mov
mov
insl
ljmp
callw
icebp
push
dec
stos
mov
mov
cmpsb
testb
cmp
dec
jg
ret
test
stc
lea
xchg
subb
push
out
inc
shlb
out
out
fs
dec
add
mov
outsl
lret
pop
jp
mov
sub
push
jp
rcll
mov
mov
imul
ret
hlt
inc
ja
push
mov
mov
push
adc
pop
sahf
mov
jle
jle
mov
pushf
rorb
pop
notl
add
lods
cmp
daa
push
inc
ljmp
imul
call
es
outsl
ret
aas
mov
movsb
ljmp
push
fneni(8087
scas
xor
jns
mov
xchg
adc
sahf
jne
and
daa
add
stos
clc
adc
stos
lods
or
lds
ja
xlat
sbb
int3
push
push
xor
add
jae
mov
into
dec
push
loop
pop
lods
ret
data16
faddl
or
test
xchg
xchg
clc
popl
adc
out
pop
bound
das
iret
shlb
in
aam
cmp
pop
in
push
mov
mov
cmc
loopne
cmp
cs
dec
fildl
inc
icebp
leave
dec
and
repz
sub
add
xor
test
jae
push
hlt
cld
bound
or
xor
push
les
mov
shll
sbb
push
lret
jbe
lret
sti
jg
push
push
or
lcall
inc
and
shl
out
dec
fdivp
mov
adc
pop
jb
js
popa
inc
rcl
mov
in
pop
or
pop
lret
in
or
sub
lahf
xor
xor
inc
push
fs
ljmp
cltd
adc
int
mov
sar
xchg
movb
orb
xchg
mov
inc
scas
cmpsb
mov
ja
fcomps
loope
push
adc
ss
lods
xor
inc
inc
rorb
ret
dec
push
jge
xor
lods
jmp
fstpl
jbe
jle
sti
test
out
mov
call
lods
divb
rclb
fsubrs
repnz
push
popf
mov
jne
pop
cmp
fnstcw
push
sbb
push
test
push
xor
test
stos
mov
jg
cmp
mov
out
mov
or
push
cmp
cltd
mov
rcll
mov
pop
jp
test
xor
movsl
xchg
pop
xor
or
mov
test
mov
popa
sub
jne
xchg
lret
fdiv
cs
call
cltd
mov
adc
fstps
js
sar
pop
lock
jle
sbb
mov
pushf
clc
xor
andl
mov
adc
and
in
sbb
lock
ss
xorl
imul
inc
cmc
sahf
arpl
int3
dec
adc
sbb
push
adc
enter
xor
aad
jo
mov
repz
mov
inc
mov
push
xor
mov
jg
and
push
insb
std
icebp
enter
loope
pop
mov
and
xchg
jmp
ja
faddl
in
pusha
ret
pop
push
fdivr
mov
mov
mov
leave
xchg
popa
js
mov
jae,pt
inc
inc
movsb
push
inc
jae
push
int
xchg
or
loopne
push
sub
mov
gs
mov
enter
cmp
ficoms
add
pop
jle
push
add
vmovss
movsb
dec
xchg
pop
scas
sbbl
cmp
cmc
cmp
shl
adc
push
mov
frstor
stos
fisttps
scas
pop
lret
movsb
rolb
mov
adc
jecxz
inc
xchg
mov
lods
push
fists
mov
movsb
pop
in
mov
mov
push
pushf
push
pushf
aad
adc
adc
mov
jmp
sahf
jl
adc
pop
push
loop
movsb
jnp
xor
leave
loope
sub
jo
jle
outsb
stos
into
adc
add
adc
out
mov
rcll
sub
pop
cmp
movl
mov
lret
or
jl
add
mov
bound
rcll
push
jno
jno
lods
pushf
sub
mov
in
mov
add
push
fdivr
pushf
std
or
xchg
mov
jg
jns
lods
mov
sub
aad
aas
xchg
inc
jle
ds
xor
adc
shrb
loope
sbb
mov
mov
roll
shrb
leave
pop
and
cmp
out
mov
mov
jg
gs
push
xchg
pop
xchg
clc
mov
inc
addr16
cmp
cmpsb
inc
jne
fwait
sti
mov
adc
mov
ret
bnd
push
enter
xchg
dec
daa
imul
call
sub
or
mov
mov
xor
inc
notl
pop
and
push
pushf
push
xchg
not
pop
loopne
insl
mov
cmc
xlat
int
fistpl
stc
xor
add
mov
mov
xchg
sbb
js
jns
outsl
cld
lods
mov
bound
out
movsb
push
add
push
test
mov
mulb
sbb
bt
mov
dec
inc
mov
cli
fs
xchg
jle
mov
push
gs
lock
sub
dec
sarl
sbb
bound
inc
pop
ja
cmp
xchg
das
lods
cmpsl
lahf
push
xchg
push
insl
xchg
push
inc
insl
test
popf
xor
ficoml
or
xchg
adc
add
vpackuswb
int
lret
or
fcmove
int3
adcb
or
sbb
mov
test
divl
movsb
mov
inc
push
lret
in
dec
repnz
or
xlat
mov
push
in
lea
daa
xchg
lods
ljmp
dec
cmp
mov
xchg
sahf
mov
ret
int3
push
jmp
mov
in
stos
sub
subl
into
push
xchg
mov
pop
fdiv
ja
or
cltd
pop
add
fimull
cmc
xchg
dec
cmc
iret
jae
pop
mov
ficoms
outsl
xor
fimull
pop
cmp
inc
add
ret
enter
lret
mov
and
fcmovne
std
movsb
pop
adcl
push
leave
xor
fisubrs
lret
xchg
ret
or
imul
or
fimull
mov
bound
ss
cmp
dec
je
fnstcw
sub
test
enter
xor
xchg
jp
and
sub
push
xchg
mov
fmul
mov
popf
arpl
adc
shrb
aaa
daa
pop
test
pop
jnp
ja
ljmp
cmp
movsl
jb
out
ror
outsl
jecxz
or
jb
jmp
repz
mov
or
xlat
loope
and
into
or
xchg
dec
pop
sbb
sub
js
xor
xchg
iret
push
add
adc
adc
inc
pop
xchg
test
mov
xor
xchg
dec
ja,pt
jne
dec
insb
mov
inc
dec
es
insl
popf
xchg
xchg
loopne
push
jp
orb
push
popf
pop
stos
cltd
stos
xchg
call
and
mov
jo
mov
rcrb
mov
rorb
add
xchg
push
sub
jne
lea
jo
js
add
mov
xchg
test
mov
and
insl
xchg
into
mov
cmp
les
push
and
sbb
push
enter
mov
mov
test
mov
imul
xor
movsb
mov
rol
mov
cltd
movsb
insl
jmp
cs
mov
popf
push
sbb
adc
sub
andb
pop
data16
pop
push
pop
mov
cmp
xchg
mov
jae
aas
mov
jno
cmpl
and
pop
pop
inc
mov
fsubrl
pop
push
add
add
dec
xchg
outsl
or
sub
jae
sti
ja
or
push
cmp
gs
cmp
adc
test
lea
sbb
fcompl
repz
negw
loope
lock
push
fstl
cmc
nop
lds
adc
push
push
lds
movsb
push
mov
inc
push
test
fldl
cmp
mov
and
jne
mov
jb
adcb
lock
or
inc
loopne
sub
ds
lods
ljmp
lea
daa
shlb
fbstp
insl
fldt
or
or
cmp
mov
fxtract
out
testl
lcall
mov
xchg
or
leave
gs
mov
scas
les
add
daa
push
mov
shrl
cli
jmp
lods
mov
hlt
or
cmp
scas
add
sbb
add
xchg
and
stos
js
dec
cvtdq2ps
test
subb
add
xlat
aad
dec
adc
dec
add
and
mov
lds
mov
enter
mov
aas
cwtl
bound
jne
jg
pop
pusha
je
xchg
rcrl
leave
mov
inc
add
inc
cmc
mov
in
adc
xchg
sbb
fdivl
out
idivb
fwait
movsb
mov
cmp
sub
loop
repz
cwtl
sub
ret
in
testl
aad
jbe
std
push
inc
fldcw
dec
out
cmp
xor
aaa
or
jecxz
add
pop
push
lods
scas
gs
js
add
sahf
test
out
xchg
adc
pop
cmp
in
push
mov
dec
xor
lock
adc
or
das
fcoml
sbb
movsb
add
and
call
cmp
nop
or
adc
xor
rorb
mov
test
pop
add
ret
mov
les
mov
out
or
pcmpeqd
in
cmpsl
imulb
adc
ds
scas
xchg
sbbb
sub
pop
aas
gs
xchg
xchg
push
mov
pop
mov
test
mov
adc
filds
cmc
pusha
in
and
loopne
or
test
ja
xor
push
push
sub
push
push
rclb
insb
rcrb
push
repnz
xor
push
and
out
jmp
dec
enter
pop
jmp
clc
out
popa
loop
icebp
pop
int
sarb
mov
xchg
and
rorl
cwtl
imul
out
je
xlat
imul
push
mov
mov
negb
iret
xor
mov
cmp
xor
es
adc
jg
lods
loopne
test
lods
cmpsl
mov
pop
jno
cmp
xor
shll
faddl
ss
rcll
sahf
jmp
and
pop
and
cmp
notb
mov
stos
mov
fs
dec
mov
add
or
push
pop
imul
leave
stos
jg
mov
xor
js
and
faddl
stos
xchg
popf
add
lahf
rcrb
xchg
movsb
xchg
shll
mov
xor
jmp
jo
jl
and
loop
xchg
sbb
pop
cmp
mov
lds
xor
jp
es
pusha
aad
adc
hlt
jno
and
jecxz
inc
stos
aas
ja
mov
jno
dec
jnp
push
jle
scas
rolb
mov
mov
aaa
inc
and
push
cmp
adc
dec
popl
pusha
sub
or
fildl
mov
jo
in
jp
in
push
aam
mov
add
imul
frstor
fwait
adcl
dec
pop
jge
scas
pop
stos
mov
jl
fldenv
mov
jno
push
les
xchg
loope
addl
cmc
inc
in
lods
ret
sub
pop
and
xchg
push
inc
jns
pushf
nop
jno
sub
lret
ret
imul
xorl
lret
scas
adc
jbe
push
aad
out
fsubrl
pushf
dec
fdivrs
sbb
cmp
arpl
xor
jae
fmulp
je
icebp
jae
cli
pop
adc
aas
mov
jge
sarl
inc
lahf
jae
ret
mov
std
repnz
cmpsl
popf
aad
mov
jmp
int
jmp
push
xlat
push
push
adc
sub
mov
xchg
jns
pusha
imul
data16
or
push
cld
stc
xchg
addb
sti
stos
movsl
test
adc
jae
insl
mov
push
jb
rcrb
pop
add
gs
add
add
in
movsl
jno
and
cmpsb
inc
xor
rolb
outsb
mov
and
into
in
sub
dec
daa
add
xor
stos
cmpb
push
add
lea
mov
sahf
pop
aam
fists
jbe,pt
bound
or
fs
mov
das
or
das
ljmp
es
jnp
enter
or
popa
in
adc
out
xor
dec
aad
push
inc
xchg
cmc
into
in
push
inc
and
sbb
inc
out
sbb
jne
xor
arpl
je
cmpsb
push
xchg
mov
leave
pop
mov
adc
in
cmp
jle
nop
add
inc
mov
xor
cltd
and
int
cld
cmp
dec
jae
jmp
xchg
xchg
in
mov
mov
jnp
add
mov
mov
mov
adc
pop
mov
or
icebp
xchg
loope
push
jno
out
ret
test
int3
repz
xor
mov
cmp
sbb
jmp
jno
mov
rcrl
fiadds
jge
cli
loop
into
aam
inc
adc
sbb
ret
push
das
in
loope
pop
adcb
pop
sbb
add
sbb
jmp
sbb
push
gs
ret
jnp
cmpsb
frstor
fmuls
mov
movsb
dec
outsb
mov
inc
dec
xor
mov
cmp
mov
inc
mov
mov
sbb
mov
push
pop
xchg
ss
pop
xchg
jo
popa
ja
lds
inc
lret
pop
popa
pushf
pcmpgtw
mov
das
mov
icebp
add
jecxz
mov
cs
pop
aas
push
mov
scas
mov
mov
loop
xor
push
cld
sub
xor
cmp
push
es
push
cld
cld
data16
nop
jge
test
adc
jmp
sub
or
xor
inc
into
sub
mov
shl
mov
sbb
loopne
out
adc
push
mov
jo
xchg
add
das
sti
xor
push
mov
aad
or
daa
adc
andb
popf
test
rorb
mov
push
faddl
jmp
pop
jae
or
mov
pop
inc
jle
adc
das
cltd
pop
loopne
out
mov
ret
inc
inc
mov
push
je
mov
ret
mov
outsl
add
aaa
mov
dec
mov
test
adc
jmp
rol
inc
inc
std
jmp
sub
dec
add
icebp
xor
fwait
std
cmp
outsb
mov
ret
xchg
sbb
add
sub
add
scas
mov
mov
movsb
mov
or
nop
cli
outsl
loop
out
jle
and
pushf
data16
cwtl
lahf
mov
nop
mov
cltd
scas
arpl
push
psubusb
jne
out
pop
push
pop
dec
pop
sub
fdiv
clc
xor
or
mov
outsl
jge
push
xchg
jmp
ljmp
cmp
inc
jnp
pop
mov
arpl
mov
xor
or
jo
dec
fists
xchg
shl
cmp
lcall
mov
int3
lds
sub
mov
mov
adc
mov
dec
ja
jle
cmp
pop
sub
bound
in
jo
out
and
inc
cmp
iret
jns,pn
cs
mov
adc
xor
xchg
push
adc
push
in
cmpsl
mov
cmpsl
xchg
and
and
add
aas
add
push
lret
mov
push
xchg
or
js
into
lock
add
adc
out
cmpl
inc
add
sbb
sub
iret
lods
jl
dec
dec
stos
mov
sbb
jbe
leave
dec
mov
dec
pop
mov
filds
sbb
adc
test
cmp
push
nop
in
pop
dec
and
mov
dec
mov
lcall
pop
xchg
push
orb
enter
lds
sub
lahf
push
notl
int3
jmp
nop
rcrb
jl
jg
push
scas
cld
stos
adc
pushf
ret
mov
xchg
ds
adc
call
xchg
leave
scas
mov
pop
or
and
ret
push
out
cmp
mov
add
cmp
or
mov
mov
push
cwtl
push
inc
mov
int
clc
xchg
jns
xchg
and
mov
movb
cld
dec
mov
pop
adc
mov
mov
pop
mov
outsb
mov
push
sbb
sti
push
cmp
test
push
pop
mov
in
jecxz
jmp
sub
das
jne
pusha
mov
std
add
sub
and
jo
lock
stc
in
mov
cmp
pandn
jmp
pusha
inc
test
xchg
pop
push
lret
jne
cwtl
mov
and
sbb
push
and
lcall
sbb
xor
fdivs
gs
lcall
jne
lock
out
jno
lret
adc
repnz
stc
lods
in
ljmp
pop
push
adc
mov
mov
inc
jmp
scas
sub
cmp
sub
cmp
loop
push
inc
mov
xchg
lret
xchg
test
into
xchg
scas
add
fistps
and
xchg
adcb
sarb
arpl
shrb
setle
dec
loopne
add
fldenv
lods
push
mov
and
and
push
ret
adc
shll
cmpsb
inc
push
jecxz
sub
push
test
fwait
mov
outsl
les
stos
sbb
jle
pushf
sbb
pop
test
fmul
pop
fcoms
or
mov
popf
rcrl
aam
stc
jge
fstp
inc
cmp
mov
fdivs
lock
mov
inc
and
mov
bound
movsb
pop
inc
test
xchg
or
inc
aam
aaa
adc
xor
inc
push
xor
dec
sub
push
jle
cmp
xchg
xor
and
jnp
movsb
test
fbstp
movsl
in
jecxz
js
push
out
cli
loop
inc
rclb
jl
cld
xchg
sbb
mov
jne
hlt
into
jae
outsb
adc
dec
rolb
sbbb
pop
mov
out
pushf
out
push
addr16
cwtl
enter
ret
dec
and
test
loope
shll
cwtl
loope
mov
push
shr
lret
cmp
jae
out
mov
ds
or
test
adc
mov
int3
divl
xchg
movsl
or
sarb
repz
mov
out
sti
dec
pushf
fistps
add
push
or
inc
mov
movsl
sub
movsl
push
cmp
in
pop
call
and
mov
js
add
js
nop
mull
ret
jae
mov
mov
rcrl
ds
xor
sbb
xchg
pop
push
push
jo
push
lret
adc
cmp
pop
push
out
cmp
mov
or
popa
andl
jmp
and
inc
cmp
shlb
xchg
mov
jl
mov
or
sbb
xlat
xlat
adc
xchg
movsl
loope
sbb
aaa
adc
popa
push
cmp
inc
enter
cli
sub
loopne
mov
mov
clc
fstps
sahf
cmp
adc
loop
std
imul
test
add
clc
mov
mov
sub
xlat
jg
mov
jl
pop
rorl
dec
nop
repz
mov
outsb
inc
int
in
push
push
fisubs
aam
in
sbb
mov
out
outsl
popf
lret
sbb
add
mov
push
push
add
loopne
xchg
hlt
cmp
outsb
xchg
int
ds
or
mov
dec
ret
arpl
test
push
jne
lea
cmp
xor
mov
leave
or
jnp
in
cs
xor
push
movsl
sub
dec
inc
push
lcall
add
arpl
lahf
lods
movsb
fdiv
cmc
lahf
mov
out
popf
into
int3
pop
mov
jnp
jno
loopne
test
lock
test
push
jmp
jb
jmp
stos
jmp
rclb
xchg
jmp
sbbl
sbb
push
dec
dec
outsb
daa
xor
das
in
loope
inc
fnstsw
into
dec
adc
jno
pop
sub
ds
sub
icebp
sbb
test
rcll
daa
push
pop
mov
and
lahf
inc
mov
or
push
sbbb
sbb
xlat
int
popa
dec
ret
addb
xor
push
cmc
adc
xor
mov
push
ret
and
and
test
fsubr
je
inc
fsubrl
push
xchg
testl
xchg
push
aad
jne
lret
adc
adc
jae
jne
dec
loope
jmp
pop
sub
pop
mov
fidivl
std
orb
gs
mov
add
xchg
adc
jo
ljmp
inc
add
xor
dec
jns
cmpsb
std
and
jno
fidivs
loop
push
outsb
outsb
scas
sar
lods
adc
mov
mov
ss
jecxz
test
dec
dec
movsb
xor
mov
mov
mov
lods
clc
push
mov
pop
ret
addr16
jecxz
pusha
je
outsb
cmc
xchg
in
popa
pushf
and
and
dec
inc
andb
xchg
gs
outsl
fs
fisubl
and
mov
adc
and
cli
add
out
jb
pusha
add
pop
add
flds
outsb
mov
cmp
divl
cmp
aas
imul
ret
stos
sbb
stos
inc
mov
ss
push
sub
ja
pop
or
xchg
mov
xchg
xchg
mov
pushf
insl
imul
sbb
sbb
ss
ds
sub
ret
notb
int
pop
mov
jp
dec
lock
lret
mov
std
xchg
mov
aad
inc
pop
rorb
in
lcall
in
mov
rcrb
xchg
sbb
mov
xchg
out
dec
insb
ss
mov
push
inc
pop
xchg
mov
dec
inc
push
das
pop
mov
stc
lock
inc
addr16
mov
in
or
xchg
and
adc
jg
fisttpl
xchg
inc
loop
push
push
rclb
loop
inc
and
cmp
nop
sbb
inc
insb
mov
out
mov
push
sub
outsl
in
lds
add
sbb
fmul
hlt
fwait
loopne
inc
rcl
or
adc
into
nop
add
sbb
mov
jge
loopne,pn
stos
cmp
adc
repz
or
pop
or
or
mov
out
jmp
je
inc
notl
or
insl
adc
loop
cltd
xchg
mov
rcrl
pop
ror
loop
jns
insl
mov
insb
lahf
mov
data16
mov
mov
outsl
or
jo
ds
jae
cld
jno
dec
out
push
pop
mov
fistpll
scas
fs
and
push
mov
inc
push
lret
nop
fsubl
popf
ret
xchg
mov
fsubl
dec
mov
inc
aas
pushf
pop
sub
dec
pop
cli
pop
add
out
mov
add
sub
idivl
lret
imull
sbb
pop
cli
imul
push
sub
xchg
jmp
adc
test
cmpsb
dec
lret
xor
sub
and
add
jo
and
out
fsubs
mov
in
jmp
cmp
adc
push
mov
repnz
das
pop
inc
lods
ss
dec
loopne
inc
lret
out
das
add
shr
and
enter
dec
and
mov
sbb
cmp
jl
pop
cmp
sbb
jmp
mov
mov
bound
je
xlat
mov
pop
test
andb
lret
clc
iret
lods
in
and
cmc
fwait
loop
dec
or
sbb
pop
testb
imul
shl
mov
repz
in
adc
pop
or
add
cmp
xchg
push
pop
push
es
add
jb
xchg
dec
enter
clc
aaa
out
fbstp
xchg
adc
mov
imul
fmul
jp
mov
icebp
jecxz
or
adc
cmp
mov
jb
test
pop
pop
mov
mov
xor
and
roll
mov
hlt
or
dec
sub
inc
push
adc
push
xchg
push
mov
jnp
sub
sub
xchg
stos
sub
mov
in
jo
insl
cmp
jp
or
cltd
loop
arpl
arpl
js
inc
sub
dec
push
mov
repnz
sti
mov
stos
push
xor
mov
mov
inc
outsb
or
lds
addr16
sti
jl
bound
xchg
mov
adcb
sub
sbb
sub
mov
or
mov
jbe
fnsave
push
aad
aad
leave
mov
subb
mov
push
mov
inc
xchg
ja
enter
sbbb
mov
test
stos
dec
scas
and
mov
or
push
decb
jg
aam
push
add
sbb
cmp
or
arpl
or
or
cmp
lock
insl
fs
rcll
push
adc
jge
adc
jns
pushl
out
mov
xor
cs
rolb
sub
inc
fiadds
jne
int
inc
lock
and
xchg
mov
popf
fsubl
scas
test
and
icebp
mov
cli
jle
inc
imul
inc
mov
fbld
xchg
sti
enter
sahf
fisttpl
mov
mov
push
flds
cmpsb
in
sarb
mov
xor
outsl
pop
rcrl
or
sub
daa
ret
hlt
dec
dec
push
test
or
outsl
mov
jno
jno
xchg
js
pop
sahf
lea
pop
aaa
push
decl
hlt
push
lods
loop
jecxz
arpl
loopne
dec
pop
jg
push
sub
nop
adc
jmp
jb
loopne
sub
test
mov
rcrl
pusha
and
push
add
inc
and
xchg
mov
mov
rorl
or
rcrb
movsb
cmp
cmp
jo
inc
mov
fildll
ds
mov
into
and
adc
stos
and
sbb
subb
bound
or
int3
imul
outsl
cmpsl
test
xchg
xchg
cmp
xchg
imul
push
gs
dec
outsb
dec
test
dec
mov
xchg
adc
mov
xor
shlb
inc
ss
divb
pop
cltd
pop
sarb
mov
jbe
inc
fwait
xchg
jmp
lods
xor
iret
push
rcr
sti
lock
pop
xchg
cmp
sub
shrb
xchg
sbb
xor
rclb
mov
lcall
dec
bound
adc
add
cmp
mov
mov
cmp
rolb
gs
cmp
xchg
jmp
pop
add
dec
rorl
fildll
in
leave
mov
stc
mov
push
add
pop
and
les
cs
pop
push
push
dec
ja
mov
jnp
std
sbb
and
faddl
xchg
push
out
mov
subb
sub
icebp
lods
cmc
dec
or
jns
lds
pop
push
add
xchg
in
fs
sbb
mov
push
adc
xor
mov
xor
mov
xor
and
xor
xchg
cwtl
aam
mov
xchg
repz
cwtl
aas
aaa
repnz
mov
icebp
pop
outsb
int3
sbb
pop
mov
sbb
or
outsl
shrb
mov
adc
xchg
sbb
nop
pop
int
jl,pt
mov
cmpsl
movsw
das
negb
cmp
rorl
sub
mov
lea
sbb
pop
xor
pop
mov
insb
push
fmuls
fistl
mov
inc
cmp
mov
inc
cli
adc
sbb
mov
lods
fld1
push
ret
inc
rep
pop
cld
push
xchg
fisubrl
ss
sbbl
sub
mov
push
repz
js
xor
daa
out
jmp
jle
mov
lret
int3
imul
xor
xor
jo
icebp
das
frstor
daa
xor
adc
push
jge
insb
iret
xlat
dec
addr16
shl
xchg
repz
and
mov
in
mov
xor
jp
xor
push
inc
xlat
mov
mov
pop
jg
push
stc
adc
fcomip
add
adc
pop
push
cltd
sub
arpl
cmp
mov
pop
outsb
push
or
push
sbb
mov
sarl
inc
jmp
divb
call
or
push
in
adc
mov
loopne
mov
add
adcl
ret
insl
aam
xor
popa
push
mov
sub
sub
fidivrs
or
jbe
mov
outsl
pop
dec
mov
or
outsl
ret
pop
stos
and
scas
or
xor
dec
jmp
or
dec
mov
xor
xchg
mul
cmp
cmp
xor
ja
or
and
sbb
cmp
add
ret
fidivs
add
pop
test
xchg
push
cmp
mov
ss
inc
ficompl
xor
cmp
pusha
pop
dec
push
rorb
sub
push
push
out
push
or
ja
dec
push
icebp
xor
hlt
fstps
xor
and
jmp
pop
jle
fisubl
out
xor
inc
push
push
fs
mov
and
xchg
xchg
push
dec
xchg
ret
or
int
inc
mov
into
jb
xchg
aaa
out
pop
mov
sti
ljmp
repz
xor
dec
int3
fiaddl
sbb
out
mov
cs
mov
and
sub
dec
sti
add
or
lahf
shll
hlt
mov
push
insb
jl
pop
adc
adc
dec
pop
mov
hlt
pop
call
dec
insb
mov
dec
das
sub
das
push
cs
mov
scas
mov
es
cmpl
dec
loopne
outsl
outsl
fsts
cwtl
int3
mov
inc
repz
xchg
into
arpl
pop
leave
cli
sbb
cmp
sahf
jecxz
or
and
jl
in
pushf
fisubrs
inc
inc
pusha
rcrb
push
or
popa
mov
add
enter
push
inc
pop
pop
sbb
mov
sub
and
repz
dec
test
and
xchg
push
movsl
xchg
lods
and
push
add
xlat
pop
cmp
jp
aad
mov
push
lea
dec
push
jno
inc
pop
mov
dec
xor
into
sub
loopne
lahf
jae
test
push
in
enter
cmpsl
or
or
push
mov
or
pop
xchg
mov
cli
mov
or
cmp
xchg
shll
scas
or
jecxz
jno
outsl
add
in
lahf
sub
dec
xchg
sub
sbbb
adc
jo
or
mov
xchg
jle
cltd
cwtl
mov
sub
sub
pop
mov
xor
fidivl
mov
addr16
dec
push
shlb
fxch
hlt
test
mov
xor
sbb
dec
and
aad
push
mov
cs
sbb
xchg
xor
arpl
adc
gs
repz
dec
push
sbb
add
outsl
or
sub
repz
loope
daa
std
movsb
adc
mov
sub
mov
cli
adc
xor
push
push
inc
lods
inc
sbb
lods
movsl
std
sbb
das
sahf
push
test
mov
xchg
es
mov
jg
cmp
push
xchg
xor
ficomps
mov
mov
jbe
mov
std
fnsave
adc
mov
enter
sarb
sti
mov
xor
imul
je
or
pop
imul
stc
lret
shrl
fwait
xor
sarl
mov
sbb
bound
push
jp
push
dec
in
hlt
iret
sbb
adc
fwait
aaa
dec
sbb
inc
push
mov
subb
pushf
push
cmpsb
aad
and
mov
inc
dec
lret
mov
fadds
mov
mov
lcall
sti
add
push
ja
andl
sti
repz
adc
mov
int3
sub
sbb
dec
mov
std
or
cmpsb
jb
fsubl
xchg
xor
push
mov
pop
mov
out
adc
inc
scas
add
adc
mov
out
fldenv
insb
pop
or
and
dec
lea
pushf
push
nop
cld
jnp
adc
and
test
es
std
add
lock
push
dec
imul
or
cmp
aas
cmp
lret
jns
and
imul
mov
addr16
and
inc
lock
imul
jmp
test
mov
mov
xchg
pusha
push
je
repnz
push
orl
data16
cmp
test
hlt
xchg
dec
dec
pop
sbb
mov
mov
inc
mov
data16
in
push
lods
jns
push
xchg
repz
mov
in
xchg
mov
mov
mov
outsl
mov
out
in
push
movsl
ja
xor
outsb
or
lods
lds
in
mov
hlt
cmp
ret
movsb
outsb
mov
inc
jmp
subl
out
addr16
arpl
dec
call
ja
orl
ljmp
cs
lock
add
es
fcmovnbe
sbb
inc
mov
fidivrl
aaa
xor
ror
cmp
loope
jl
sbb
mov
cwtl
and
fnstsw
or
mov
jmp
jae
test
cmpsb
shrl
push
mov
cs
out
sbb
sti
es
mov
adc
push
mov
mov
dec
jp
icebp
jnp
lock
lods
dec
push
sbb
add
cmp
inc
outsb
testl
pop
or
adc
icebp
pop
addr16
daa
loopne
pop
xchg
daa
orb
push
dec
or
sub
ffreep
repz
pop
sbb
test
sub
inc
cmp
movsl
jg
insl
lret
and
loope
jbe
add
hlt
int3
bound
into
sub
stos
into
out
sub
sbb
push
shll
std
out
mov
mov
adc
sbb
mov
std
xor
sbb
and
out
shll
push
call
sbb
inc
sub
mov
lds
fxch
insl
cmpsb
pop
jp
out
lock
in
je
mov
cmp
xchg
das
lock
imul
addr16
nop
and
cmpsl
adc
dec
movsl
dec
imul
sbb
cmpsl
pop
lds
sbb
mov
inc
cwtl
lods
push
lret
dec
mov
xchg
into
pop
mov
lret
xor
sti
cwtl
imul
xchg
repnz
xor
out
mov
cmc
jp
push
xor
in
inc
jb
sub
jno
and
and
fisttpl
cmpl
popa
jne
and
subl
add
adcl
push
jae
in
repnz
loope
jmp
add
aad
fdivs
les
arpl
mov
sub
mov
cld
int
lods
mov
aaa
mov
lret
xchg
and
push
cwtl
imul
jl
xor
lret
hlt
notl
hlt
add
mov
jecxz
push
ja
aad
cld
hlt
mov
aam
div
inc
xor
sub
push
jp
mov
lea
pop
xchg
aam
mov
lcall
ja
in
and
and
pop
inc
fnstcw
mov
mov
ja
bound
xchg
les
sub
mov
inc
test
es
popa
jne
dec
pop
cmp
shl
jns
arpl
mov
sbb
jbe
cmp
fcomip
dec
cmp
inc
movsl
test
sbb
jne
mov
es
fs
mov
jl
out
outsl
inc
xchg
mov
hlt
push
mov
push
mov
sarl
test
sbb
sub
jecxz
inc
sbb
mov
xor
push
loop
sar
jns
adc
xchg
sti
repz
mov
lahf
mov
pop
out
jmp
cld
sbb
in
or
testl
pop
popf
in
mov
mov
cmp
pushf
je
mov
sti
cmp
aad
cmpl
cli
leave
jg
xlat
jne
aam
in
clc
leave
push
push
rclb
sbb
in
test
icebp
jmp
push
push
repz
aaa
lds
nop
enter
sbb
add
enter
pop
into
stc
mov
push
data16
imulb
data16
fsubr
and
xor
sarl
cmp
aam
cmp
lcall
repz
ror
push
pushf
mov
xchg
inc
les
xchg
xchg
mov
or
dec
sbb
push
sbb
xlat
sub
arpl
xchg
std
andl
es
fstps
adc
out
outsb
dec
dec
pop
mov
cmc
push
jmp
push
sbb
adc
mov
out
push
popf
mov
sbb
inc
and
adc
out
repz
cmp
ss
out
repnz
sti
mov
jae
in
pop
das
or
imul
mov
adc
fldt
mov
gs
lret
scas
mov
out
cmpsl
and
inc
inc
cmp
unpckhps
pop
xchg
fsubrp
xor
mov
adc
fwait
jne
mov
cli
and
ret
jae
clc
sub
mov
and
in
clc
sub
cwtl
and
jp
or
inc
inc
pop
xchg
pop
adc
lods
in
subl
xor
mov
out
fiaddl
in
mov
xchg
cwtl
xor
mov
push
nop
loope
inc
inc
add
ret
mov
fidivl
outsb
jle
fdiv
mov
add
cmp
fisubrs
cmp
idiv
pusha
ds
adc
test
push
aam
ret
pop
mov
enter
pop
xchg
sti
pop
cmp
inc
mov
mov
outsl
fisttpll
sbbb
jmp
lods
enter
mov
pop
test
or
loope
push
or
daa
push
test
rcr
es
lahf
pop
jbe
iret
nop
jp
adc
shlb
mov
push
inc
cwtl
fnop
push
repnz
pop
popf
bound
xchg
sub
and
gs
lret
xor
cwtl
sbb
outsb
add
popa
adc
lods
out
xchg
add
fs
mov
in
xor
push
jmp
stc
negb
or
int3
push
inc
test
lods
dec
enter
sti
push
sub
push
ret
outsl
push
sub
and
clc
jae
and
sti
inc
insb
jecxz
inc
cmp
push
jo
insl
test
adc
daa
adc
lret
mov
enter
inc
out
subb
push
cli
ja
jne
mov
int
cwtl
call
cmp
and
pop
aam
xor
and
push
xor
xor
or
mov
push
es
je
mov
std
push
fsub
mov
int
inc
ljmp
pusha
test
inc
jb
fisttpl
sbb
adc
mov
stos
mov
dec
aas
cmc
repnz
fnstsw
cld
es
dec
mov
jp
jge
test
push
popa
ljmp
je
test
pop
inc
mov
mov
btc
sahf
xchg
int
into
shlb
mov
lods
or
push
cmp
stos
jb
shrl
cwtl
outsl
sbb
test
sahf
ret
movsl
mov
test
test
cmp
lcall
bnd
inc
pop
cmp
clc
sub
mov
xor
xchg
jge
fsubr
sub
mov
dec
adc
in
gs
xchg
adc
mov
inc
fimuls
xor
xor
sahf
cld
popf
mov
adc
loopne
mov
aam
je
cmp
sbb
leave
push
push
dec
mov
mov
std
fisttpll
lds
xlat
mov
jg
mov
inc
inc
or
pop
stos
scas
mov
xchg
push
dec
frstor
pop
pop
stc
xchg
cli
xchg
push
sarl
ds
imul
iret
test
imull
lahf
es
gs
pop
xor
jne
push
push
icebp
orb
inc
aas
xchg
pop
jmp
fbstp
mov
jle
lret
inc
mov
aam
lock
enter
nop
dec
xchg
mov
cmc
test
xor
add
mov
rolb
mov
lock
out
inc
lret
int
jae
fisttpll
pop
enter
test
add
or
sahf
adc
mov
in
mov
mov
ret
cmp
sti
imul
lret
xor
lret
mov
loope
stos
lds
cmp
xchg
lock
or
cmp
jmp
sub
out
jnp
lods
orl
jnp
cs
movsb
xor
jmp
push
div
xchg
scas
out
cmp
add
es
pop
gs
int
ja
mov
jo
pop
jo
lock
push
in
out
jle
out
mov
xor
xlat
lea
cltd
cmp
sti
jmp
push
pusha
cli
xchg
jle
rcrb
lock
or
pop
out
cs
cmp
mov
ret
push
push
cmpsb
jne
add
pop
dec
adcb
enter
xchg
bswap
push
mov
jg
add
sbb
cmp
cld
push
mov
push
faddl
lods
jp
or
add
js
lret
inc
test
adc
or
adc
ret
div
test
mov
jnp
and
dec
leave
sbb
push
push
pushf
sarb
sbb
xchg
fdiv
push
push
mov
sbb
push
xor
aad
stc
xor
xor
inc
mov
insb
imul
inc
imul
lods
js
dec
pop
lahf
and
popf
mov
fdivr
call
mov
enter
jg
adc
mov
or
pop
push
pop
sub
cld
cmpl
sbb
xchg
stos
cmp
cmp
leave
in
cmp
adc
and
mov
lret
sub
loopne
push
enter
test
mov
pop
push
pop
jl
add
js
sarl
xor
mov
mov
cmc
ror
mov
jge
add
adc
sbb
sub
sti
hlt
mov
sbb
and
sub
fsts
mov
fsubs
xor
sbb
test
jae
cmp
pop
jp
sub
xor
jno
aaa
inc
out
push
jno
loope
sub
and
mov
loope
push
test
dec
aas
nop
cmp
jecxz,pn
push
rorb
jbe
add
int
pushf
and
push
ret
mov
repnz
sbb
popa
lods
fnstcw
stc
inc
imul
imul
xor
xchg
xor
scas
add
jmp
bound
cmp
rcrl
test
sbb
dec
mov
and
jo
adc
arpl
adc
mov
jns
mov
call
and
cmpsl
lds
loopne
mov
xchg
lods
daa
jne
lret
mov
mov
je
cmp
rorb
or
pusha
and
adc
and
dec
aad
in
cwtl
push
add
and
out
fimuls
sti
jnp
jo
fs
jo
pop
jecxz
cmc
sarl
push
loope
mov
adc
pop
hlt
test
repnz
sbb
jne
mov
jmp
insl
mov
bound
xchg
mov
in
sbb
mov
mov
loop
mov
rcll
insb
bound
ljmp
inc
dec
and
pop
cltd
ss
or
dec
xlat
dec
outsl
stos
jae
mov
mov
cmc
adc
sub
mov
lods
out
int
mov
jbe
add
fisttpll
aam
sub
add
xchg
sub
pusha
pop
fistpl
jl
adc
cli
push
iret
cltd
hlt
sub
shl
sub
fwait
jmp
push
testl
aas
repz
ds
sub
inc
inc
xor
aad
and
fisubl
icebp
mov
push
mov
fwait
int
jge
enter
gs
push
jg
mov
test
xchg
stc
and
pop
mov
mov
movsl
push
mov
adc
sti
dec
adcb
adc
mov
mov
nop
sbb
pusha
dec
sub
adc
sbb
push
fidivrl
pop
pushf
stos
mov
test
loopne
outsb
mov
ljmp
jae
dec
and
xor
adc
cmp
xor
xor
ret
insb
mov
push
int3
cmpsl
jne
mov
inc
fs
out
mov
cmp
xchg
xlat
xor
add
xor
insb
iret
decb
cmp
dec
xlat
jl
rcll
jp
mov
adc
lea
sbb
movsl
enter
dec
xchg
mov
lods
push
movl
jns
adc
dec
pop
mov
pop
shlb
dec
push
loope
adc
xor
call
xor
mov
xor
pop
mov
sub
or
adc
idivb
dec
in
xchg
sbb
mov
inc
mov
dec
lods
dec
push
sar
mov
xchg
jbe
cmp
daa
ljmp
add
loope
stc
test
add
push
inc
xor
das
dec
or
mov
cmc
pop
in
or
sbb
jno
icebp
jb
push
jnp
sub
dec
sbb
mov
push
hlt
and
aad
pop
insl
stc
inc
and
jne
pop
cmc
and
and
fdivs
push
and
jl
jbe
fiaddl
mov
inc
mov
add
sub
xchg
push
lret
fistpl
sub
or
icebp
out
andb
mov
repnz
add
je
cmp
mov
sub
in
push
ret
aaa
popa
mov
in
jne
sub
cli
je
or
into
sbb
jbe
or
xchg
add
cmp
dec
adc
shlb
cmpsb
mov
mov
xchg
add
movsb
mov
xchg
sti
sbb
cmp
or
in
mov
lret
mov
mov
add
sbb
or
mov
fstps
popf
push
decb
std
scas
or
ja
lret
pop
sub
iret
sub
jno
pop
or
sub
add
jo
xchg
mov
push
xchg
mov
push
cmp
or
decl
scas
push
jb
cwtl
pushf
and
ret
andl
dec
sbb
out
jge
push
hlt
cmc
pop
inc
xchg
mov
and
inc
lcall
lret
lea
shll
jg
popf
xchg
xchg
jg
sbb
inc
cli
mov
repz
mov
sbb
xchg
ret
add
cmp
or
addr16
pop
inc
fildll
jno
in
cld
pop
lret
leave
jno
lea
daa
xchg
int3
jg
ret
xchg
rcrb
test
push
arpl
mov
sbb
pop
push
jl
ret
mov
mov
jge
pop
xor
bound
in
add
imul
xchg
inc
add
xor
mov
mov
rorl
dec
subb
leave
lock
orb
iret
fcmovnu
cmpsl
lret
mov
sub
inc
enter
push
fwait
idivb
shl
cwtl
or
mov
ficoml
movsl
nop
push
sbb
adc
xor
pop
and
xchg
xor
and
sub
dec
sahf
and
jb
ret
inc
mov
pop
fdivrl
movsb
mov
test
psraw
scas
mov
lahf
in
lds
and
cmp
addr16
inc
bound
and
loopne
dec
jno
lock
mov
cmp
mov
iret
inc
scas
mov
inc
xchg
jl
jmp
jns
cmpsl
fmul
pop
leave
pop
repz
push
push
loop
push
dec
mov
adc
inc
push
nop
lods
ja
popa
wrmsr
push
fcmovu
stc
pop
in
rcll
mov
ljmp
dec
pop
das
in
repz
xchg
cmc
add
aad
fists
mov
aas
sub
or
repz
push
out
nop
loopne
lahf
jbe
imul
enter
dec
mov
push
mov
jg,pn
adc
nop
jecxz
sbbb
ljmp
addl
and
or
out
imul
sarl
cmp
out
in
mov
xor
subb
inc
add
and
adc
stos
loope
mov
outsl
loopne
fwait
je
repz
dec
and
xchg
jecxz
xlat
sub
roll
insb
xor
jbe
lret
mov
adc
mov
dec
inc
push
or
nop
iret
add
int3
in
ljmp
mov
ljmp
loop
adc
ret
scas
lret
pop
mov
pop
loop
mov
dec
lds
xchg
pop
adc
cmp
mov
nop
jb
into
movsb
in
pushf
inc
daa
lods
test
add
loop
push
or
xor
out
call
pushf
scas
inc
dec
mov
mov
sbb
mov
testb
mov
push
adc
out
add
pop
xchg
std
repz
arpl
mov
and
mov
popa
cs
sti
gs
test
pop
orb
das
loope
sbb
mov
mov
sbb
in
aaa
pop
inc
cli
aaa
push
shl
xchg
or
push
sub
mov
rcll
mov
cmpsl
pop
add
mov
shll
adc
stos
cltd
lret
adc
fnstenv
pop
mov
mov
push
jne
inc
jl
xor
into
sbb
daa
mov
mov
or
cmpsl
mov
mov
pop
lea
cmp
lcall
mov
cmp
or
loopne
orl
push
jb
test
pop
movhps
push
sub
mov
rol
frstor
movsb
fadds
out
or
cmpsl
sbb
enter
cli
push
xchg
mov
xchg
pop
xchg
jnp
push
cmp
je
aaa
cmpl
fmul
stos
pusha
insl
ficompl
push
rcll
sub
push
sub
lds
sub
mov
mov
sbb
cmpsl
mov
lret
stos
outsl
and
popf
dec
jmp
cmc
jmp
sub
xchg
lcall
jbe
push
mov
dec
jmp
inc
push
push
jno
cli
inc
ret
or
dec
jnp
aaa
mov
jnp
push
insb
mov
and
or
ljmp
jle
insb
std
bound
daa
icebp
sbb
mulb
mov
cmp
push
push
push
push
aaa
cs
test
pop
cs
in
add
aad
and
xchg
cwtl
jle
es
jl
mov
push
sub
pop
jnp
cmp
sahf
fistpll
mov
je
cmp
testb
lods
sbb
sbb
ret
mov
stos
jge
hlt
pop
jle
outsb
fdivrl
xchg
and
fsubrs
dec
push
sarl
or
in
es
outsl
ficoml
fmuls
fisttps
into
inc
jmp
cmpsl
lods
shl
adc
xor
pusha
shll
mov
movsb
int
dec
jmp
ss
or
or
daa
ja
dec
mov
cld
fiadds
mov
subl
testl
popa
fisubrl
dec
and
xchg
xor
cmp
adc
add
fistpll
ljmp
fidivs
mov
outsb
and
jb
push
in
loop
adc
fdiv
mov
and
or
pusha
shrl
jecxz
sub
scas
in
pusha
lods
pop
and
loopne
mov
dec
ret
rclb
and
test
xchg
push
mov
push
clc
flds
inc
pusha
aas
xchg
andl
cld
aas
mov
repz
gs
push
in
pusha
ja
jns
adc
fmulp
fidivrl
fistl
sbb
ret
cli
stos
fistps
mov
mov
sub
push
xor
xor
stos
pop
adc
xor
pop
or
scas
add
jp
inc
sahf
dec
sbb
sbb
test
mov
test
aad
adc
jbe
inc
jge
adc
or
sti
cmp
int
test
mov
fldt
cmc
add
jp
add
jmp
mov
mov
into
es
jecxz
aas
and
mov
stos
xchg
xchg
push
dec
lcall
ret
mov
sbb
rep
pop
imul
cmp
lds
les
and
in
adc
sub
jmp
fstl
add
or
pop
mov
dec
mov
mov
sbb
and
insl
jnp
ret
hlt
lahf
push
inc
mov
aam
push
scas
dec
test
lods
pop
lods
or
lret
scas
cmp
mov
sbb
add
aad
add
sti
popa
pop
fdivl
ljmp
or
mov
cli
out
mov
inc
mov
lods
pop
xchg
lock
nop
mov
jecxz
lods
rolb
pop
aas
and
pop
popa
adcb
inc
cmp
testb
testb
mov
xor
stos
jne
push
mov
adc
and
test
add
mov
jbe
inc
or
mov
jge
adc
inc
xchg
pop
pop
hlt
jns
je
pop
addr16
push
pop
xor
stos
in
push
mov
scas
xor
outsl
push
push
test
mov
cmp
mov
xor
and
outsb
dec
loop
scas
rclb
pop
int
sbb
add
mov
es
sbb
push
sbb
mov
mov
xor
popa
fdivl
test
ss
adc
jmp
mov
add
and
xor
clc
cmc
movsl
popa
cwtl
sub
push
push
inc
scas
xorb
pop
int
jmp
dec
cld
es
test
fwait
hlt
int3
enter
xlat
or
add
or
daa
stc
dec
push
cmp
pop
imul
jmp
xchg
jbe
pop
ljmp
mov
add
nop
jle
lds
jp
into
lea
jnp
inc
and
cltd
jbe
push
imul
cmp
mov
sub
mov
test
push
sub
repz
out
in
mov
insb
sahf
add
adc
adc
add
in
sub
adc
outsb
enter
andb
sahf
mov
mov
sub
mov
or
dec
push
leave
sbbb
pop
push
jmp
xchg
pop
cmp
in
or
ret
cld
lret
mov
leave
add
das
call
pop
fmull
or
fisubs
cmp
in
add
pop
adcb
je
pop
les
das
sbb
mov
cmp
cmp
mov
in
adc
push
jnp
jge
stos
push
pushl
cmp
sub
xchg
out
aas
pushf
xor
jne
ret
jl
adc
add
mov
stc
leave
xchg
loop
push
fcomip
fs
dec
clc
mov
in
jmp
adc
xor
js
pop
xchg
pop
xchg
and
add
loope
push
cltd
jge
pop
lea
sub
popf
and
es
xchg
inc
lret
loope
push
ds
adc
pop
add
addr16
pop
icebp
std
inc
outsb
push
sub
dec
pop
rcrl
sbb
jo
add
mov
push
xchg
sbb
dec
jecxz
adc
and
scas
adc
mov
ret
test
jo
xorl
sub
stos
aad
into
loopne
push
cwtl
mov
xlat
cmp
fwait
mov
inc
cld
std
sarl
mov
push
fistl
cmp
pop
ret
cmp
mov
int3
jge
shr
imul
fldl
sbb
dec
aaa
lods
stc
xor
push
test
jne
rcrl
dec
cwtl
jg
push
and
or
xor
aas
or
mov
mov
sbb
dec
xchg
sub
add
sti
test
pusha
or
in
aam
pushf
sbb
fs
popa
mov
inc
movsl
sub
fbstp
flds
enter
mov
sbb
jle,pt
sub
cmp
jns
ds
rolb
and
xchg
lods
loope
dec
out
cmp
or
bound
pop
or
xchg
pusha
hlt
or
inc
push
movsl
out
jle
in
sbb
mov
fdivs
inc
ret
pusha
data16
adc
out
inc
cmp
mov
and
cmp
hlt
in
jb
pop
mov
ss
push
or
push
jl
pop
xchg
inc
imul
test
mov
int3
js
scas
xor
popa
jo
jb
sbb
test
cs
dec
mov
addr16
push
testl
outsb
mov
mov
pop
xor
and
popf
js
les
cmp
loope
xlat
dec
ficomps
iret
sahf
in
mov
out
dec
stos
mov
cld
data16
in
gs
mov
sbb
lret
push
cmpsl
sbb
pop
test
inc
loop
mov
inc
inc
popf
push
mov
or
mov
pop
sbb
mov
pushf
jp
xchg
cmp
jmp
in
sbb
mov
lea
into
cmp
inc
loopne
cmpsb
or
ds
sarl
push
and
in
insl
orl
jg
mov
dec
clc
inc
push
add
push
push
mov
mov
cwtl
cltd
lods
cli
mov
dec
das
xchg
mov
push
lods
ljmp
cmp
mov
aas
sbb
clc
jg
jg
movsb
push
js
jb
mov
sub
mov
fsubr
add
adc
movsl
xorb
data16
pop
push
push
jo
and
mov
roll
movsl
add
push
cli
ss
fidivrs
ret
inc
sti
jo
xchg
pop
adc
adc
jno
sub
xchg
dec
sub
push
and
stos
aad
xchg
sbb
fidivrl
sbb
inc
jmp
cmc
subb
fs
or
xchg
jb
mov
dec
jp
loop
mov
sub
or
cmp
stos
or
imul
add
mov
mov
enter
aad
imul
out
sub
loopne
test
sbb
or
dec
fdivr
jb
xchg
and
movsl
dec
mov
pop
push
into
dec
pop
dec
leave
aad
ja
jmp
jo
push
add
mov
jmp
jp
dec
adc
fwait
pop
mov
or
and
or
mov
out
mov
sub
lret
jl
pop
dec
daa
test
mov
mov
movsb
push
stc
addr16
inc
les
out
cli
popf
push
push
inc
xor
insb
sub
pop
dec
das
dec
sub
xlat
push
cltd
sti
jne
inc
mov
jnp
jnp
mov
pop
test
insb
divb
push
adc
and
dec
sub
mov
sbb
lahf
fldz
push
xlat
in
add
icebp
xchg
nop
cmc
sub
int3
push
dec
dec
mov
sbbl
and
test
in
push
movsl
and
int3
or
pop
mov
lods
sbb
cmc
fisubrs
sub
loopne
add
fwait
jecxz
std
xchg
jg
inc
jp
jp
push
jbe
leave
mov
cmc
testl
je
in
xor
dec
xchg
sbb
fildll
mov
or
lods
adc
stos
enter
jbe
test
mov
adc
jne
movb
repz
pop
mov
inc
test
sub
or
pop
lods
cmpsl
pop
mov
mov
cltd
mov
add
sbb
movsb
out
imul
fdivrl
shrb
imul
sbb
imul
pop
xlat
call
jecxz
sub
jb
ja
jecxz
lahf
sarl
cmpl
lods
or
jmp
cli
push
jo
sub
pushf
lods
pop
cmp
or
mov
lods
push
push
and
or
aaa
movsl
shlb
mov
imul
stc
leave
ss
cld
xor
fldl
es
or
popf
push
pop
mov
xchg
jb
jno
push
scas
mov
sbb
mov
xor
xor
repnz
stos
aad
jge
rcr
mull
mov
mov
loope
pop
cmp
mov
push
aad
test
mov
aad
sub
enter
xchg
int3
call
aas
push
or
inc
ret
test
add
pusha
cmc
and
aam
incl
pop
xchg
mov
vpxor
or
rorb
mov
stos
jns
mov
nop
push
sbb
and
call
shlb
mov
xor
bound
bswap
sarb
cmp
scas
cmpl
lcall
xor
inc
mov
sub
stc
or
fmuls
mov
test
ret
bound
ljmp
or
jnp
cmp
cltd
inc
popf
pushf
jnp
popa
jns
dec
jg
enter
cmp
jge
popf
out
push
rcll
add
adc
pop
inc
mov
mov
in
ds
sbb
notl
jb
in
ficoms
lcall
ja
mov
sbb
daa
and
xchg
xchg
push
sbb
cmpsb
dec
psadbw
cmp
mov
fldcw
adc
rcl
push
aad
sub
or
cli
inc
jg
jmp
mov
mov
add
xor
js
sbb
loop
inc
push
cmp
and
adc
repz
and
jo
pop
mov
test
ficomps
sub
loop
outsl
in
mov
cmp
lret
cmp
adc
adc
test
ret
push
dec
pop
cmc
adc
add
jns
jns
lret
fildll
imul
cltd
xchg
cltd
out
add
rolb
add
pop
jmp
bswap
ds
movsb
dec
jmp
push
mov
test
xchg
inc
cmpsb
mov
adc
rcl
mov
adc
mov
sahf
mov
dec
aad
rcr
movsl
push
or
sahf
xchg
aas
fwait
shll
sbb
lcall
popf
cmp
mov
inc
aam
orb
notb
cmp
and
xchg
or
loop
jbe
push
movb
mov
popf
pop
inc
hlt
lret
test
pop
mov
mov
add
xor
out
lret
pop
push
js
jecxz
inc
sbb
jp
es
push
cld
sbb
xor
popa
and
inc
aam
lds
mov
or
push
shll
push
enter
in
inc
dec
rorl
pop
cmp
out
test
aam
push
xchg
test
xchg
xor
outsl
inc
pusha
fcoml
repz
stc
movl
ret
cmp
rcrb
add
jmp
mov
and
push
icebp
xchg
dec
xchg
mov
mov
in
icebp
nop
in
aas
dec
cmp
jge
jbe
xlat
add
fsub
pop
mov
sbb
iret
bound
ljmp
jae
jbe
rcrb
sbb
ret
push
sub
mov
xchg
test
lahf
cwtl
in
fdivrs
rcrb
outsb
sti
mov
sbb
jno
stos
xchg
mov
jl
test
adc
xor
pop
cld
test
inc
pop
adc
dec
shrl
push
push
cmovo
mov
inc
data16
iret
sarl
jp
lret
testl
push
add
shlb
pop
dec
pusha
adc
pusha
and
lcall
adc
mov
std
aaa
add
mov
in
into
lret
test
mov
xor
cmp
dec
add
mov
mov
adc
xchg
and
fsub
stos
stos
mov
or
mov
fsubr
addr16
std
jae
stc
pop
jbe
sub
mov
std
scas
call
mov
jmp
out
addr16
outsb
dec
out
pop
shlb
mov
xorb
pop
out
dec
loopne
insb
and
cs
fwait
aaa
or
insl
lcall
cmp
in
adc
xchg
movsl
andb
pop
lret
call
imul
ljmp
or
add
add
out
cmc
push
incb
fisttps
loope
jge
sub
out
push
xchg
loop
lret
sub
jne
cmp
mov
sahf
testb
scas
mov
jmp
lahf
lret
aas
gs
jecxz
test
adc
add
jle
push
inc
inc
or
xchg
push
test
les
cmpsl
movsb
push
shrl
adc
jns
mov
and
jne
xchg
sbb
or
ja
pop
xor
cli
mov
jo
add
rcr
aam
lods
mov
orb
ss
sbbb
xlat
xchg
in
mov
sbb
shlb
mov
sub
xchg
dec
add
gs
xor
push
aam
imul
push
or
or
je
inc
mov
and
leave
pop
das
repz
aam
dec
cmpsb
jp
hlt
out
lods
ret
mov
daa
fmulp
int3
xchg
mov
jg
adc
stos
adc
in
clc
xchg
daa
divb
addr16
into
std
cmovp
outsl
add
movsb
out
add
dec
xor
lock
xchg
inc
orb
std
pusha
stos
gs
mov
clc
mov
sub
outsb
mov
loopne
enter
dec
pusha
mov
xchg
mov
in
fcmovnb
inc
pop
lock
xchg
aaa
in
xor
lahf
mov
mov
hlt
fists
call
xchg
sub
sub
cltd
out
idivl
mov
sub
test
fadds
aad
insb
or
and
push
dec
popa
xchg
mov
in
aaa
mov
mov
xlat
mov
pushf
popf
xchg
sub
or
xchg
pop
out
jae
push
mov
out
xchg
imul
fstps
mov
shr
mov
test
push
ds
inc
ja
out
dec
push
int3
pop
cli
xlat
pop
sbb
jbe
jl
adcl
adc
out
andb
fimull
mov
add
jns
movsb
sub
or
lcall
sub
cmc
inc
push
cmp
cli
shlb
and
mov
rcrl
xchg
mov
je
lahf
loope
xchg
push
dec
push
or
add
pop
js
ds
xor
fcomp
out
pop
sbb
scas
adcb
sbb
rclb
xchg
in
dec
addr16
loop
mov
das
mov
roll
clc
add
sbb
ret
cmp
data16
mov
pushf
in
or
stc
cmp
sbb
dec
aas
lret
cs
jno
repnz
push
mov
jo
fs
in
sbb
sarb
push
popa
or
pop
push
jl
mov
dec
adc
adc
mov
mov
daa
leave
fsubs
negb
aad
jno
mov
or
jnp
ljmp
insl
lods
sbb
push
sub
gs
pop
dec
or
or
bound
inc
pop
xchg
jo
into
fsub
dec
iret
fdivr
sti
jnp
push
inc
unpckhps
aad
cmpl
popf
or
push
in
lock
add
adc
inc
mov
aas
push
negb
jmp
enter
imul
and
lock
sbbl
push
cmp
pop
or
loope
push
test
jnp
add
cmp
dec
in
outsl
rorb
stos
xchg
stc
jecxz
out
gs
sbb
aas
sahf
or
push
xor
mov
jno
or
cmpsb
jle
imul
popf
das
xchg
pop
and
leave
cli
pop
xchg
inc
sbb
sub
jns
addr16
pop
lea
test
pop
add
adc
movsb
adc
das
inc
test
sub
lret
cmp
push
lods
mov
loope
call
cwtl
jecxz
jo
push
test
push
xchg
shrl
mov
jecxz
sub
mov
in
mov
push
jge
scas
les
push
mov
fadds
inc
es
sbb
testl
and
out
or
adc
xchg
xchg
add
cwtl
insb
sbb
sti
out
pop
mov
bound
cmpsb
gs
adc
aaa
repz
sbb
sub
fwait
xor
xchg
jle
fists
dec
aam
aad
mov
adc
and
lret
bnd
cmpsl
jg
push
popf
data16
mov
test
les
jge
pop
shll
xor
inc
int3
sbb
mov
adc
xchg
sub
je
adc
xor
rcrb
subl
dec
inc
rcrl
dec
jmp
out
and
dec
sbb
sub
shr
cmp
and
push
pop
add
or
cmp
xchg
outsl
inc
in
int3
bound
aam
and
and
ficomps
sahf
cli
sub
jle
test
sub
sbb
das
int3
in
or
push
mov
jo
out
jae
sti
rclb
sub
mov
std
je
lret
in
jo
pushf
dec
insl
dec
pop
out
xchg
and
out
jno
jmp
mov
testl
dec
mov
push
roll
stos
push
push
and
fmuls
adc
test
sub
fcmove
inc
cli
sbb
mov
mov
cwtl
nop
test
mov
dec
insb
jge
mov
xorl
push
and
pop
mov
add
out
pusha
pop
sbb
mov
push
stos
mov
or
movsb
or
arpl
std
pop
mov
dec
push
fidivl
mov
popf
in
sub
or
nop
cmp
outsl
nop
and
sub
jbe
jae
aad
sbb
fistps
dec
mov
ljmp
pmaxsw
adc
fisubrs
sbb
arpl
cmp
test
cmp
pop
cwtl
stos
sbb
sti
sbb
cwtl
data16
fiaddl
outsl
mov
xchg
xor
mov
pop
xor
pushl
aaa
mov
pusha
adc
stos
daa
int3
xor
mov
pop
mov
xchg
cmp
leave
in
divl
addr16
push
inc
xchg
imul
popa
fiadds
inc
dec
test
jle
cwtl
dec
and
cmc
inc
dec
xor
push
pop
roll
mov
jae
je
and
jne
jmp
cmp
inc
test
pop
iret
into
mov
add
addr16
xchg
lods
pushf
mov
pop
scas
movsb
pop
dec
lahf
or
sti
dec
cmpsl
jl
pop
sbb
sub
dec
push
mov
pop
pop
inc
aad
dec
orb
ret
pop
and
sbb
mov
cmp
jae
dec
jp
lds
sbb
sar
scas
and
pushf
or
jp
push
sbbb
lcall
inc
in
insb
xlat
mov
repz
std
cs
or
fmulp
mov
outsb
out
fmul
dec
push
lock
rolb
push
pop
ret
imul
ljmp
into
mov
fists
outsb
aam
pop
leave
jmp
cmpsb
cld
mov
test
cmp
fwait
mov
insl
cli
push
pop
cmp
shlb
addr16
stc
cmp
xor
jmp
xchg
fcmovnb
leave
mov
pop
outsb
mov
sar
cmp
mov
pop
jno
pop
mov
jp,pn
in
push
push
push
pop
push
adc
repnz
mov
out
push
mov
pop
sbb
or
incb
or
cltd
sbb
notl
ss
inc
jo
les
mov
add
jo
test
add
outsl
loop
out
cmp
loopne
pop
pushf
es
fsubs
int3
fdivs
xor
popf
in
mov
sub
xor
jl,pt
pop
jb
cli
push
iret
fdiv
or
loopne
mov
ds
add
icebp
scas
in
scas
dec
cs
and
hlt
push
js
push
out
arpl
data16
mov
and
and
fmull
outsl
mov
adc
mov
ss
fs
mov
and
pop
push
jne
pop
hlt
repnz
sbb
mov
ss
in
mov
pop
cmp
ja
push
ret
sub
in
adc
cmp
loopne
jle
std
ja
or
jg
mov
andl
mov
lahf
cmp
mov
and
add
clc
jmp
adc
mov
aam
dec
push
dec
cmpsl
sbb
push
lret
cmp
dec
and
sbb
inc
xchg
pop
dec
inc
mov
and
jle
loopne
dec
jbe
aad
ret
mov
jbe
popfw
or
inc
dec
dec
in
scas
fisubl
pop
int
mov
aaa
pusha
xchg
add
in
mov
add
iret
mov
xchg
stc
push
xor
push
lea
das
popf
mov
mov
inc
inc
adc
sub
fnstsw
sbb
sbb
es
lahf
xchg
ficoms
xchg
mov
in
push
shl
loope
cmp
xor
mov
and
jmp
int
movsb
fs
cmp
xchg
cld
loopne
xor
lret
fs
jp
movsl
pop
cmp
pop
push
adc
dec
das
xor
lea
xchg
jmp
call
sub
enter
mov
push
push
mov
adc
add
repnz
sub
cmp
mov
out
push
dec
xor
sbb
in
popa
mov
std
jmp
cs
sbb
test
and
icebp
lcall
xor
out
clc
out
test
cmp
or
mov
lods
pop
das
xchg
pop
xor
and
push
adc
into
sbbl
add
leave
xchg
and
rcl
dec
push
adc
out
loop
pop
ljmp
nop
push
jge
in
outsl
inc
lock
mov
inc
xor
loop
xor
and
in
clc
int
push
mov
or
sub
shlb
lods
pop
cmp
out
lret
add
enter
or
insl
add
jmp
mov
ret
adc
dec
test
push
jle
xchg
inc
sbb
push
data16
pushf
scas
insl
sbb
sub
in
je
cmp
mov
sbb
mov
cwtl
xchg
sbb
dec
jo
sub
aaa
mov
cmpsb
jmp
lods
lds
lods
pop
xor
add
lds
fildl
push
jbe
pop
movsb
lcall
add
and
sub
pusha
ja
in
jecxz
dec
out
push
fsts
mov
jae
adc
mov
cmp
test
push
and
test
sub
jbe
xorl
js,pt
int
xlat
lds
popl
mov
mov
xor
add
adcl
pop
push
pop
inc
dec
sub
push
xlat
adc
jo
out
mov
sub
aas
lret
mov
xor
sti
addr16
test
leave
mov
jno
mov
pop
das
popf
adc
sahf
pop
fucomi
addl
std
je
ficompl
aad
mov
ds
cmp
insb
jnp
iret
out
daa
in
push
rclb
jg
mov
shrl
out
xor
sub
andl
adc
dec
mov
frstor
push
lcall
mov
cmp
pop
sub
push
mov
aam
pop
cmp
mov
add
jne
pop
pop
cltd
mov
push
or
push
repz
nop
sub
push
lods
mov
inc
push
add
ud1
xor
inc
in
mov
sub
ret
jmp
sbb
test
mov
and
es
push
scas
enter
imul
and
push
out
int3
xchg
ljmp
jp
ret
sbb
or
ljmp
fisttpl
mov
fwait
int3
cmp
lret
or
mov
dec
dec
addr16
mov
xor
jl
add
dec
clc
and
push
test
mov
cmp
out
or
mov
cmpsb
or
stc
jmp
cmp
add
ja
push
jl
and
sahf
cmc
sbb
sbb
pop
mov
bnd
cmc
repnz
or
lret
lods
xor
test
dec
sbb
inc
jmp
int
push
data16
scas
aam
add
into
or
xchg
jge
cltd
pop
cs
testl
adc
mov
and
push
jge
mov
nop
mull
fs
or
and
nop
adc
sahf
cld
push
jecxz
cmp
icebp
add
shlb
fs
push
dec
dec
cld
movsb
cmp
movsl
cmp
sbb
ret
test
dec
loopne
and
stos
and
cmp
inc
test
xchg
jo
xor
mov
fcoms
or
pop
loop
push
jo
imul
mov
fistpl
and
adc
jg
dec
cmp
add
clc
and
in
lock
or
sahf
adc
popf
scas
ret
cmpsb
lcall
and
mov
adc
jo
stos
or
rorb
iret
jge
dec
dec
pop
data16
or
or
xchg
imul
aas
mov
pop
cltd
sbb
scas
pop
fwait
push
mov
jecxz
rolb
ja
dec
std
outsb
mov
aam
inc
mov
les
and
and
jo
sbb
scas
mov
shll
jnp
pop
mov
inc
or
mov
in
mov
or
orw
pop
out
lahf
mov
adc
or
and
js
stos
les
mov
clc
scas
pop
dec
pop
pop
jnp
xchg
ds
push
les
push
lods
pop
packssdw
xor
mov
push
scas
testb
lret
in
push
fsubrl
data16
mov
inc
iret
into
fimuls
pop
dec
mov
and
sbb
pop
jp
and
mov
ljmp
shrb
pusha
push
mov
adc
mov
in
insb
dec
stos
adc
sub
mov
sbb
cltd
xchg
imul
push
push
fidivl
xor
lods
lahf
or
cmp
lret
jno
dec
mov
push
stos
pop
jle
inc
enter
lea
fists
pop
and
imul
mov
and
mov
dec
xlat
cmp
jmp
mov
inc
ret
dec
inc
mov
hlt
pop
std
mov
mov
sub
pop
enter
fsubrs
push
nop
lcall
and
jl
lea
lds
mov
pop
cmp
push
mov
xchg
or
int
dec
pushf
in
inc
mov
loope
pop
into
in
cmp
sub
loope
dec
adcl
sub
les
mov
fwait
imul
enter
fisubrs
int3
rcll
adc
and
sub
xor
xor
addr16
adc
push
aam
cmc
xor
or
and
pop
loopne
lret
cmp
lahf
jp
xchg
nop
in
scas
gs
pop
test
inc
popf
dec
jnp
and
mov
inc
xchg
imul
jge
mov
lods
cltd
add
sbb
test
sub
xchg
leave
inc
testl
push
dec
aaa
xor
out
in
dec
or
mov
scas
and
popa
xchg
cmpsb
lret
jl
test
sbb
stos
sti
ret
sbb
daa
repnz
jle
imul
loope
rcll
cld
lds
mov
mov
cmp
xlat
insl
stos
in
pushw
fs
clc
sub
stos
push
cmpsl
sub
test
call
aad
rolb
xchg
mov
push
jl
jmp
pop
ret
idiv
aam
add
movsl
sbb
add
push
xchg
sbb
dec
in
movsb
mov
rclb
sti
pushf
or
rcrl
pop
and
jecxz
sub
imul
sbb
pushf
and
pop
add
aas
dec
popl
je
push
loope
xor
sub
clc
fistps
in
push
cld
xchg
add
int3
add
xchg
rcll
and
and
mov
dec
pop
dec
ds
data16
adc
add
leave
or
pop
pushf
in
in
bound
add
clc
or
and
add
lret
sbb
test
cs
mov
xchg
mov
out
fdivl
test
ret
sti
push
cmp
dec
aad
clc
movsb
pop
ss
or
fistl
or
mov
mov
ja
addr16
adc
pusha
ja
mov
and
mov
xor
lahf
fldenv
pop
mov
mov
inc
outsb
mov
inc
stos
cli
mov
icebp
popa
push
cmp
es
imul
lock
mov
xchg
jae
pop
dec
push
loop
add
lods
mov
cmpsb
xchg
js
pushaw
jne
fidivs
ret
das
test
stc
cmpl
dec
call
icebp
orb
xor
mov
and
testl
or
push
repnz
cld
iret
imul
test
rcrb
mov
sub
xor
inc
and
cmc
cmpsb
icebp
mov
and
jmp
or
and
popa
popf
mov
mov
mov
or
rol
loope
addr16
mov
fistps
pop
lahf
pop
sbb
xorb
push
push
adc
loope
ret
cs
iret
or
cmp
adc
inc
pop
pop
adc
mov
mov
adc
inc
pushf
pop
mov
mov
outsl
ret
sub
xor
inc
xlat
nop
and
inc
into
xor
jg
ja
inc
imul
mov
ja
je
mov
jnp
cmp
jmp
dec
sbb
pop
mov
out
jmp
movsb
loopne
sub
test
fwait
aad
sbb
test
scas
mov
loope
insl
inc
push
dec
stos
cmp
sahf
and
lds
dec
sub
inc
jle
out
ja
jae
or
idivb
mov
push
jg
pusha
rorb
test
mov
adc
fdivrs
sbb
js
jo
insl
adc
ret
push
lret
mov
sbb
xchg
lea
sbb
in
cltd
jp
inc
repnz
pop
ss
vmovaps
stc
jns
mov
out
dec
shll
jno
cmp
adc
negl
pop
dec
enter
xchg
mov
lock
loopne
js
scas
out
pop
push
cs
std
mov
ja
jle
rclb
mov
and
mov
cmp
mov
or
hlt
mov
mov
ret
mov
call
add
mov
xor
pop
in
pop
gs
aaa
or
mov
or
and
jnp
jp
dec
daa
jg
test
fistl
popa
hlt
fwait
sbb
jmp
shll
dec
shrl
cwtl
inc
jb
adc
inc
into
fwait
or
fistpll
mov
fists
test
sub
imul
push
insb
push
mov
into
adc
call
mov
and
mov
lcall
cmp
les
mov
push
clc
in
jl
das
test
and
fdivl
xlat
shrb
add
ret
ljmp
out
mov
loop
pop
aam
dec
stos
xchg
and
lahf
pop
fdivrl
mov
daa
es
mov
inc
loope
cmpb
mov
cwtl
xchg
inc
sti
out
inc
jmp
lock
push
inc
jg
imul
xchg
test
mov
xchg
rorb
lahf
sbb
fwait
xor
adc
or
in
cmp
fildl
xchg
pop
cmpb
test
lret
push
ljmp
imul
movsl
push
mov
imul
pop
sub
in
out
lods
enter
lods
scas
fstps
or
rcr
loop
or
push
inc
stos
flds
inc
mov
or
add
mov
and
pop
adc
sub
jae
cmp
sub
dec
in
add
mov
std
jecxz
sti
pop
in
and
add
xchg
adc
adc
imul
lea
popa
test
ljmp
cmpsb
inc
jne
out
dec
fisubs
push
push
xchg
cs
push
sub
sbb
in
rcrb
stc
repnz
ja
xchg
mov
adc
sbb
andb
adc
gs
mov
cld
shl
jne
int
orl
jae
ret
sbb
add
int3
inc
test
fnsave
in
les
negl
sub
and
in
ss
inc
push
xchg
jecxz
es
push
loop
xlat
icebp
jl
sub
int3
dec
ret
dec
mov
fmull
sbb
in
arpl
jae
pop
and
xor
xchg
test
add
sub
cmc
add
pop
andb
xor
pop
pop
gs
mov
hlt
test
loope
je
int
test
mov
mov
cwtl
pop
test
gs
ljmp
dec
pop
jg
nop
arpl
adcl
mov
mov
and
cmp
shll
push
imull
dec
jno
lret
int3
aas
cld
in
push
push
pop
mov
fcom
jb
int
sub
lds
add
in
cmpb
and
add
lods
insb
ret
hlt
cmp
hlt
push
mov
mov
cmp
cmpsb
mov
clc
and
lods
adc
push
mov
jl
andb
jnp
movsl
sub
jo
mov
fldcw
jle
dec
xchg
mov
xlat
jnp
push
pop
gs
jle
movl
push
aas
mov
stos
popa
lods
into
and
sbb
xchg
lods
mov
cld
std
xchg
addr16
push
push
outsb
jmp
aas
shr
fcmovne
or
sub
inc
xor
mov
xor
les
imul
fdivrl
arpl
push
mov
cltd
pop
jb
stos
lahf
std
sub
adc
xchg
xor
mov
push
sbb
cmp
mov
stos
inc
nop
clc
mov
lahf
cli
aad
adc
cs
add
mov
push
jmp
mov
xchg
mov
xchg
cli
sahf
jns
jecxz
jecxz
lea
xor
jg
sti
push
daa
push
ljmp
inc
push
aam
push
xchg
ljmp
in
mov
leave
and
lds
pop
xor
ljmp
inc
in
jnp
jbe
mov
mov
and
jmp
xor
and
cld
inc
js
jb
arpl
lods
pop
sub
cmp
lods
inc
lahf
mov
lock
mov
push
push
pop
aas
mov
jno
cld
xorl
in
mov
cmp
xchg
cmp
or
push
pop
xor
push
lods
xchg
mov
in
mov
dec
mov
add
pop
pop
lret
mov
lret
pop
mov
sbb
shrb
push
jno
cmp
adc
lods
jbe
or
mov
int3
jnp
sub
shlb
push
adc
data16
jmp
push
int
push
add
jnp
mov
imul
sbb
test
pop
imul
push
ljmp
mov
cmp
and
push
mov
push
cltd
je
shll
and
inc
out
mov
mov
and
push
stos
mov
cmc
leave
fnstcw
xlat
fistl
shlb
xchg
cmp
addr16
mov
lds
push
imulw
or
test
lods
aaa
adc
jmp
dec
and
popf
sbb
xchg
in
fisubs
xor
xor
cs
push
pop
mov
pop
fadds
repz
insl
pop
aas
filds
push
cmp
jmp
daa
sbb
hlt
cmc
adc
add
clc
pop
pop
jo
mov
gs
jo
lret
mov
xor
mov
std
xor
cmp
in
jnp
cs
mov
mov
jae
sbb
das
dec
js
and
cs
jne
sti
jmp
mov
lods
cmpsb
xor
jo
adc
les
pop
js
mov
bound
repz
cmp
das
or
leave
and
push
jg
mov
push
filds
test
dec
int3
adc
fildll
add
shl
xchg
adc
mov
sti
cwtl
or
inc
scas
jbe
stos
mov
arpl
sub
fs
dec
stc
addr16
subb
gs
lcall
dec
mov
push
jne
jo
mov
lcall
mov
jg
dec
xchg
je
jl
fsubl
cbtw
mov
in
bound
sbb
icebp
and
imul
adc
jl
xchg
xchg
xchg
cmp
pop
stos
ljmp
jnp
ret
fwait
mov
or
fmuls
popf
mov
mov
rcll
push
pop
mov
add
sbb
iret
mov
lods
jbe
pop
imul
xchg
mov
mov
xchg
or
mov
test
pop
push
shl
insl
push
pop
fnstcw
jns
mov
cwtl
fidivl
out
mov
jns
in
mov
push
fldenv
pusha
dec
adc
and
imulb
ja
lret
sbb
sbb
pusha
xor
dec
cltd
pop
pop
mov
fbld
in
xchg
mov
inc
movsb
mov
ds
xchg
scas
dec
test
pop
mov
xchg
iret
repz
int3
adc
cmp
mov
pushf
inc
cwtl
dec
push
pushf
ljmp
loopne
xchg
dec
sbb
push
add
mov
test
jle
cmpsb
mov
lcall
xchg
jle
mov
push
sub
mov
mov
cmp
divl
jg
arpl
mul
popa
adc
xchg
push
mov
jecxz
mov
lods
stos
xor
cmpsl
mov
rol
out
dec
daa
cltd
cltd
xor
or
nop
adc
cmp
loopne
stc
roll
dec
adc
stc
cmp
push
xchg
or
ret
cmp
inc
cmp
or
in
test
in
cmpsb
daa
xchg
cs
adc
ret
stc
or
outsb
push
fs
leave
icebp
outsl
dec
push
std
fbstp
mov
outsb
inc
jl
into
lock
int3
sbb
mov
mov
push
or
inc
in
addr16
lret
call
addb
xchg
testl
pop
jmp
je
mov
and
lock
pop
inc
jbe
lahf
lret
aas
sbb
fistpll
lock
mov
push
fwait
in
mov
ljmp
out
or
mov
xchg
ret
iret
icebp
inc
mov
icebp
or
jb
and
push
in
test
jae
gs
add
aas
andb
clc
add
mov
xchg
adc
call
outsb
out
movsl
mov
xor
and
push
cmp
rorl
push
inc
cmp
mov
insb
jle
out
call
xchg
jne
add
push
xchg
call
pop
scas
lock
xchg
shll
sub
aas
or
sbbb
data16
dec
jmp
jecxz
adc
pop
dec
add
popf
das
int3
addb
or
in
mov
xor
xchg
int3
pop
sti
data16
jb
and
fs
mov
bound
inc
cmp
push
cli
xor
std
popf
push
and
adc
xor
inc
into
xor
sub
sub
cmp
lret
bnd
xor
dec
cmp
mov
or
inc
jle,pt
cmpl
fstl
sub
repnz
adc
negl
jno
xchg
cwtl
add
cmpsl
jb
in
in
test
mov
mov
into
repnz
lea
add
inc
dec
pop
lea
mov
add
daa
dec
push
or
in
iret
jl
pop
sub
sbb
dec
in
sbb
cli
test
inc
or
inc
sub
xchg
mov
addl
hlt
cmp
fiaddl
mov
test
repnz
mov
sub
loop
pusha
lods
loopne
mov
push
xlat
cmp
push
jns
sub
data16
mov
xorl
push
add
jae
dec
push
movb
and
add
jae
pop
pop
arpl
das
bound
loop
into
test
jg
cmpsb
xor
mov
push
push
hlt
clc
sub
in
call
xor
add
inc
mov
xor
inc
es
js
jmp
sub
nop
inc
and
add
jne
adc
adc
inc
xchg
scas
dec
or
cmp
notl
in
aaa
clc
in
push
cmp
aad
xor
sbb
mov
in
std
aaa
lret
adc
add
scas
cmp
sbb
scas
mov
sbb
add
push
rorb
pop
dec
mov
je
stos
movsl
fisttps
dec
je
dec
insb
mov
fiadds
mov
sbb
scas
pop
push
cmpsl
mov
mov
dec
ret
ret
stc
out
fistps
adc
adcl
into
dec
mov
test
ja
mov
mov
int3
xor
mov
orb
sbb
pop
insl
cmp
add
xchg
inc
std
jne
sarb
orl
imulb
mov
xchg
dec
xor
pop
mov
sti
sahf
iret
sti
fcmovbe
sbb
mov
cmp
xor
je
xchg
or
cmp
add
mov
jge,pt
push
hlt
in
clc
push
mov
adc
or
sbb
cmp
popfw
inc
xor
cmc
outsl
gs
leave
jnp
lahf
scas
fiaddl
das
pusha
ss
cmc
sub
cli
pushl
sti
mov
dec
out
jns
aas
pushf
out
xchg
je
dec
pop
cs
rcr
pop
adc
mov
dec
add
fnstsw
adc
leave
bound
sti
ret
sub
and
icebp
pop
xchg
stos
or
sub
pop
rcll
xchg
movsb
mov
rcrl
jne
and
xchg
mov
xchg
push
cmc
fwait
out
cmpb
cltd
rol
push
lods
sbb
inc
in
iret
sbb
stos
das
scas
cmp
negl
les
daa
lret
inc
add
jp
fst
js
pop
and
or
xchg
jg
je
lds
ds
dec
adc
mov
pop
mov
push
sub
lea
mov
pusha
lahf
out
js
les
iret
loop
sbb
lret
cwtl
dec
dec
cli
in
lahf
ljmp
inc
outsb
dec
sub
clc
lea
xchg
fcmovbe
in
stos
int3
adc
xlat
movsb
mov
fidivrl
test
jge
xor
in
data16
adc
cld
mov
push
mov
pusha
popaw
adc
iret
push
or
and
leave
addr16
push
or
cmpsw
mov
sub
mov
lds
push
not
lahf
cld
mov
and
mov
mov
shlb
cmp
sbb
sahf
mov
and
lahf
mov
sbb
jbe
sbb
xor
and
push
rcll
ja
jle
les
mov
orb
pop
sbb
ss
mov
gs
xchg
mov
dec
sbb
arpl
js
mov
dec
dec
mov
test
push
dec
bound
lcall
ret
in
int3
dec
pusha
mov
and
mov
imul
jns
add
in
adc
jo
lds
dec
incb
adc
fstps
inc
aaa
cmc
mov
add
and
movsb
cmc
loopne
or
sub
mov
inc
fucom
aaa
icebp
cmp
cmpsl
dec
in
jl
hlt
jge
rorb
add
movsl
ret
sub
arpl
pushf
lret
adc
push
fs
cwtl
in
adc
jecxz
repz
pop
imul
ljmp
push
xlat
pop
push
sub
mov
jmp
loop
mov
and
mov
aam
outsb
les
xor
inc
shr
lods
pop
adcb
inc
jae
add
movl
daa
inc
test
mov
and
or
je
cmpsl
in
addr16
loop
sti
dec
imul
stc
rorl
lods
aam
push
in
sahf
rorl
inc
mov
outsb
pop
lea
mov
dec
add
add
nop
dec
fiaddl
adc
out
or
inc
ss
jae
fs
test
cmpsl
jmp
repz
clc
push
cmp
int3
insb
movb
dec
clc
pop
jp
cli
pop
mov
add
cmc
pop
sbb
inc
mov
cmpb
scas
lret
rcrl
jecxz
jl
or
add
push
loope
adc
int
push
jge
hlt
stos
in
cwtl
cmp
mov
arpl
mov
mov
stos
add
test
loop
mov
outsl
mov
xor
imull
jmp
pop
es
ret
add
xor
add
lock
in
dec
jno
roll
mov
push
push
int
call
push
push
pop
cwtl
cli
repz
in
clc
mov
fidivl
push
aad
cmpsl
rcrl
push
stc
jb
mov
push
xchg
lods
sbbb
movsb
imul
mov
out
cmp
cli
cmp
jecxz
push
mov
sub
ljmp
test
mov
shlb
sub
sub
jo
cmp
je
and
daa
pop
flds
sbb
inc
cli
xor
ds
adc
and
hlt
stos
mov
es
cmp
outsl
cli
cmp
clc
and
dec
test
dec
sahf
push
xchg
inc
and
jb
popa
mov
cmpsb
fs
loop
dec
aaa
and
mov
das
push
mov
jnp
addr16
lock
xchg
adc
cmp
mov
add
push
filds
add
push
loop
mov
std
jecxz
xchg
cmpsb
dec
mov
xor
cmp
data16
cmp
add
ja
mov
cmp
dec
sub
adc
push
jne
fs
je
dec
pop
cmp
cld
add
shrl
outsl
xchg
mov
mov
push
push
xor
es
sarl
repz
jno
stc
xchg
cmp
cli
sbb
stos
mov
dec
js
add
inc
lret
rcl
sar
jecxz
mov
sbb
jge
fiaddl
pop
lods
dec
shlb
dec
mov
push
aad
sti
cmc
or
inc
sarl
iret
or
jp
push
fiaddl
xchg
mov
jne
mov
pop
loopne
and
ljmp
lods
ret
add
out
push
mov
adc
call
jnp
adc
inc
inc
in
and
sub
add
push
adc
cmp
test
cs
test
pop
jl
push
dec
stc
dec
leave
inc
outsb
in
movsb
test
clc
dec
mov
sub
add
in
mov
lahf
cmpsb
imul
or
movsb
mov
enter
pop
scas
xorb
mov
mov
or
pop
mov
sub
sub
scas
aam
mov
jns
sbb
jne
leave
jmp
pop
popa
sub
aad
aaa
andl
fbld
in
push
aad
aaa
sbb
fs
icebp
add
dec
rclb
daa
pop
and
cli
mov
push
inc
aad
jg
rcr
outsl
addr16
cli
inc
lahf
mov
js
adc
bnd
pop
xchg
stos
iret
sbb
inc
dec
jmp
cwtl
cltd
push
sub
je
aad
mov
pop
lcall
test
sub
hlt
sarb
movl
in
jnp
inc
add
xchg
outsl
jmp
mov
jno
loope
mov
mov
shrl
loope
cmp
xor
dec
loop
and
pop
push
mov
aam
je
repz
or
cmpb
push
shrb
enter
int3
fdivrl
call
push
or
pusha
sub
push
leave
cmp
ds
jb
pop
ret
inc
dec
dec
ds
aam
mov
mov
xlat
ds
ret
sbb
dec
adc
outsb
push
xchg
test
fsts
out
sahf
or
and
mov
inc
imul
sub
xchg
push
sub
push
mov
xchg
jmp
decb
std
adc
rorb
loop
push
imul
and
or
xor
shl
jp
fisttpl
int
cwtl
xor
ss
inc
rolb
aaa
hlt
adc
test
int3
insb
add
dec
lcall
jge
jb
sbb
sbb
repnz
hlt
jecxz
pushf
test
inc
mov
pop
sbbb
mov
mov
or
push
adc
mov
mulb
xor
push
sub
movsb
xchg
inc
mov
pop
and
incl
cmp
daa
add
insb
rorl
or
lret
sub
stc
lea
mov
nop
jmp
out
shlb
gs
fidivl
jbe
mov
mov
mov
jbe
mov
fldcw
pop
jmp
add
sbb
mov
adc
dec
repnz
lods
dec
adc
mov
js
fisttpl
lods
rcrl
clc
xor
out
bound
loope
mov
fwait
fwait
jmp
jbe
sbb
xchg
xchg
call
jae
sbbb
jbe
sbbb
push
jb
pop
movl
and
pop
iret
das
mov
xchg
scas
fs
pop
rorl
xor
sbb
test
mov
adcl
and
pop
jnp
fwait
mov
mov
aad
inc
fisttpl
cmpb
inc
dec
js
mov
cmp
sub
sti
and
push
cli
sub
fiaddl
xchg
sbb
jnp
lods
fisubrs
scas
and
mov
ret
adc
js
lock
cmpb
inc
cmc
stc
mov
aas
adc
sbb
dec
xor
shlb
dec
gs
pop
jge
aad
adc
popf
push
xchg
or
jmp
sub
mov
dec
arpl
cmpsb
sti
int3
push
aaa
mov
fwait
call
scas
mov
into
mov
aam
mov
outsb
mov
xor
cmc
bound
fldcw
inc
add
pop
shrb
rcl
xor
jp
cmp
xchg
repnz
dec
bound
out
adc
roll
icebp
int
shl
mov
jb
rcr
imul
inc
imul
mov
ficoml
shll
addb
mov
pusha
repz
cwtl
add
pop
and
mov
jecxz
mov
and
bound
sbb
mov
cmpsl
inc
repz
mov
inc
jp
add
lea
xchg
inc
pop
js
icebp
mov
outsl
push
outsl
xchg
add
or
xor
dec
mov
add
stos
loopne
jne
clc
sub
xchg
out
sbb
add
sub
jg
sbb
push
test
inc
or
imull
mov
mov
mov
mov
mov
or
dec
push
scas
les
ljmp
mov
xor
cmp
movaps
mov
or
rolb
ret
fisttpl
dec
mov
adc
js
xchg
xchg
mov
mov
inc
rcl
and
outsl
adc
js
adc
cmp
mov
or
add
cmp
pop
bnd
jl
fiadds
mov
mov
jp
ficoml
push
jnp
sbb
push
jg
jp
push
test
fisttps
cld
stc
push
les
mov
sub
jecxz
mov
insl
mov
pop
idivb
call
mov
movsb
or
iret
push
push
ret
mov
test
mov
ror
jno
bound
or
and
fs
andl
inc
cli
rcrb
das
bnd
lods
imul
sbbl
cld
out
inc
ja
lcall
sbb
cmp
pop
pop
fwait
test
sub
xchg
inc
fisttpll
push
ljmp
das
nop
sbb
lock
or
scas
cmp
mov
aaa
sbb
add
and
pop
mov
mov
pushf
mov
lods
mov
imul
lahf
outsb
insb
jmp
inc
lcall
mov
mov
jecxz
sbb
daa
inc
lods
xchg
cmpsl
dec
xlat
daa
sbb
sub
movb
jns
cld
mov
mov
xchg
repnz
sub
test
dec
jge
cmp
jp
mov
jecxz
mov
add
bound
or
xor
inc
inc
mov
lcall
andl
std
xchg
sarl
cmp
jo
mov
hlt
daa
shl
fstpt
js
inc
push
shll
pop
decl
xor
lret
les
xchg
jg
add
idiv
cwtl
popa
dec
movsb
cmpsb
push
insl
inc
test
scas
movsl
jbe
std
in
and
jge
cmp
es
ret
add
push
punpckldq
ret
dec
jbe
lret
push
push
xor
cmp
incl
iret
dec
mov
ds
lds
jmpw
mov
push
cltd
xor
pop
enter
shll
das
jnp
cmc
jb
outsl
mov
jg
xchg
dec
dec
and
xchg
cmpsb
ret
stos
mulb
dec
and
fwait
cmpsl
mov
dec
sbb
mov
mov
cmpsb
imul
inc
jg
cmp
mov
into
sbb
dec
dec
cltd
mov
adc
dec
in
shll
inc
aas
je
daa
sbb
fs
in
xor
fmull
jmp
sbb
jmp
subb
sbbl
jmp
aam
mov
xchg
xchg
xchg
scas
mov
xchg
pop
pop
pop
or
hlt
idivb
mov
movsb
stc
xorl
cmp
fst
lahf
xor
loopne
jae
mov
inc
jg
or
add
fsubr
mov
mov
shr
add
inc
push
out
hlt
add
adc
mov
loopne
sub
adc
sub
jg
mov
inc
in
jg
xchg
push
stc
mov
mov
adc
xchg
dec
xor
pop
inc
lahf
xorb
fstpl
lods
aas
mov
sbb
aam
cmp
sbb
sbb
mov
addr16
data16
sub
cmc
cld
mul
inc
cld
cli
stos
cmp
pop
popa
arpl
daa
aad
xor
mov
insl
in
aas
jb
adcb
adc
inc
outsb
jae
pusha
mov
jae
dec
sbb
jmp
jecxz
inc
dec
sub
aam
pop
imul
in
out
and
dec
loopne
push
out
mov
popa
nop
sbb
test
pop
sbb
adc
pop
sbb
ss
xor
std
loopne,pn
push
dec
adc
mov
sbb
mov
lahf
or
mov
fcmovnbe
add
setg
cmp
aaa
xor
mov
adc
gs
inc
and
xchg
subb
sbb
stos
cmpsl
jmpw
xchg
lcall
aaa
rorl
pop
out
and
sub
lods
xchg
jb
push
ss
fdivs
cltd
fdivrl
popa
fwait
cmp
sub
loope
push
cmp
and
mulb
shrl
shll
sub
push
inc
sti
mov
dec
add
jno
faddp
inc
addr16
daa
clc
test
dec
adc
ficoms
subl
in
loop
fidivl
pop
dec
mov
mov
movsb
mov
jae
out
mov
jmp
inc
push
into
bound
lahf
rcl
imul
xorb
dec
imul
add
in
mov
int3
inc
adcl
push
into
in
lret
in
ljmp
mov
rcrb
mov
dec
popa
icebp
mov
jbe
bt
fcoml
pushf
dec
cmp
clc
outsl
xchg
cmp
push
adc
xor
mov
mov
rcrl
xor
outsb
mov
jae
sbb
stos
mov
mov
jno,pt
jecxz
ja
icebp
jg
inc
shlb
dec
paddusb
push
cltd
mov
sahf
push
xor
or
pop
cwtl
cmp
mov
shrb
jnp
pop
aad
lods
dec
sahf
jmp
lret
lds
xor
sbb
pushf
pop
out
sbb
mulb
mov
sbb
mov
or
fs
jbe
test
insl
mov
xor
jle
loop
loop
pop
mov
mov
or
lock
fildll
leave
dec
add
aaa
inc
jle
add
test
push
add
jmp
fistpl
daa
add
punpckhbw
mov
movsl
xchg
addr16
mov
sub
xchg
dec
mov
or
repnz
inc
ror
push
adc
js
lahf
or
aam
dec
into
xchg
inc
sbb
popf
and
mov
scas
cmpsl
loope
iret
dec
and
jns
or
jbe
in
shrb
outsb
xor
inc
daa
ret
inc
xchg
in
mov
xchg
cs
jns
js
dec
enter
ret
movsl
pusha
sbb
sub
imul
lahf
data16
jbe,pt
in
stos
lods
std
pop
pop
xchg
xor
adc
mov
sbb
rolb
mov
inc
xlat
add
xchg
push
imul
pusha
push
push
push
push
jns
sub
lock
jecxz
xor
sbb
stc
jmp
in
xchg
xor
push
cmp
iret
xchg
jnp
stc
stos
xchg
mov
insb
fwait
cwtl
inc
adc
popl
lea
or
aas
mov
es
cs
mov
inc
lock
outsl
std
arpl
stc
cmp
push
inc
xor
sbb
test
xor
add
inc
sub
adc
gs
or
xchg
adc
mov
fnstsw
aaa
pop
stos
subl
xchg
mov
inc
nop
push
and
lock
js
mov
rclb
int
push
addb
popf
xchg
xchg
adc
test
fsts
cmp
add
nop
inc
cmp
loop
jmp
aaa
add
pushf
movb
jno
aam
out
xchg
cmp
xor
push
xor
dec
mov
imul
jne
popa
dec
out
adc
sub
cmpsb
push
inc
inc
adc
cmp
jecxz
add
rcr
cmpsl
lret
mov
jo
imul
add
ret
jge
mov
jb
pusha
fcompl
xchg
dec
push
push
cmp
push
fwait
cmp
mov
pmulhuw
dec
inc
mov
xchg
cs
int
outsl
fidivl
insb
bound
ss
ss
xor
jle
test
jl
mov
js
aam
pop
ds
mov
jb
out
add
xorl
fists
aaa
ja
jb
mov
mov
cld
dec
iret
jbe
mov
jge
fmulp
imul
lret
cmp
es
inc
ljmp
sub
orl
push
lds
testl
ljmp
fildl
lock
jg
mov
stos
sbb
hlt
rclb
pop
popa
iret
mov
stos
mov
dec
adcl
loop
xor
lods
dec
jo
inc
xchg
push
mov
pop
xor
sub
test
dec
inc
nop
cli
fidivs
roll
jl
aam
mov
xlat
cmpsl
aad
mov
cs
in
movsl
loope
lret
fistpl
cli
xchg
scas
ss
add
orb
adc
aaa
xor
mov
adc
in
enter
mov
lcall
mov
xchg
shll
lods
lcall
daa
push
int3
or
and
mov
jae
psubusw
lahf
sti
stc
dec
lcall
jg
add
mov
subb
xchg
push
sub
xor
pop
jmp
aas
addr16
add
mov
scas
in
pop
xor
sbbl
mov
xor
dec
or
in
mov
adc
mov
roll
cmp
and
mov
dec
in
jns
stos
jmp
rcl
sub
add
sbb
lods
mov
inc
sub
or
xor
cmpsl
or
test
jbe
lds
rclb
sub
test
stos
repnz
pop
sub
xor
test
add
out
mov
mov
lcall
insb
or
jnp
inc
aas
and
cltd
imul
xor
jp
or
jo
aas
xchg
addb
or
aad
mov
aaa
push
movsl
lds
and
and
mov
hlt
dec
dec
or
popa
push
add
cmp
mov
sbb
dec
scas
fldl
arpl
inc
clc
mov
out
fdiv
out
js
xor
mov
fistps
les
push
pop
lahf
movb
std
rcrb
sbb
pushf
inc
cltd
sbb
fldt
lods
decl
scas
mov
out
sbb
repz
ret
cs
sbb
mov
jae
sbb
mov
jns
inc
pusha
xchg
shll
pop
imul
pop
mov
xchg
pop
nop
sub
jmp
out
fldt
xor
lret
pop
pop
test
inc
xlat
addl
inc
std
test
jnp,pt
jl
xchg
and
mov
jno
inc
push
hlt
out
int
cmpsl
and
lods
in
cli
call
or
aam
neg
sub
divb
push
sbb
sbb
shrl
mov
fnstcw
repz
xchg
adc
inc
aaa
xchg
inc
xlat
or
pop
push
mov
cmp
push
jge
gs
mov
cmp
lret
pop
test
sahf
and
popf
inc
lock
jae
lahf
sub
cld
call
xor
in
mov
or
shll
sub
push
aam
and
insb
lods
cmp
out
roll
mov
cmpsb
std
dec
hlt
mov
dec
loopnew
jne
push
ljmp
sub
adc
cmp
xchg
inc
adc
push
and
inc
sbb
sbb
jmp
jg
imul
lock
gs
push
leave
pop
lret
icebp
fidivrl
sbb
pop
aam
lods
push
xchg
mov
mov
add
popa
icebp
push
daa
jg
out
dec
fs
push
mov
dec
pop
add
pusha
jbe
jns
cs
sbb
test
sahf
sbb
mov
jp
dec
jbe
xor
and
in
or
fisubs
inc
imul
jb,pn
cwtl
mov
cmp
sub
jl
out
ljmp
movsb
clc
cmpsb
int3
out
mov
dec
pusha
test
jp
ja
lods
sub
divl
dec
mov
dec
movsb
sbb
jno
dec
stc
push
sub
cmp
shl
int
or
cld
xchg
insl
dec
adc
push
ljmp
popf
enter
push
cmp
xchg
jmp
enter
or
inc
ds
mov
mov
cli
repz
dec
mov
pop
frstpm(287
add
mov
pop
sahf
les
pop
or
jo
mov
jno
pop
xor
push
add
jmp
xor
and
mov
outsb
xchg
or
push
mov
adc
jne
in
int3
sub
imul
ret
xor
inc
pop
cwtl
pusha
iret
add
jp
pop
sbb
sbb
aaa
mov
movsb
popf
jge
hlt
dec
inc
popa
mov
cmp
int3
decl
sti
mov
pop
fwait
mov
and
lea
mov
fstps
movsb
push
bound
pop
and
mov
adcb
mov
mov
test
mov
ljmp
dec
push
out
jne
imul
sub
mov
sbb
lods
mov
fld
gs
xor
sbbl
loop
mov
jb
adcl
add
or
jg
pop
leave
xor
mov
jbe
jnp
lds
mov
sahf
hlt
std
cmp
jg
test
sbb
xchg
push
testl
jno
inc
in
mov
push
pop
add
xchg
jecxz
cmp
sub
jno
jle
sahf
cmp
inc
add
mov
jp
pop
sbb
push
add
or
add
push
add
dec
bnd
mov
dec
gs
lock
inc
cmp
pop
xlat
mov
cmpsb
pop
fdivrs
inc
mov
inc
dec
aas
in
enter
test
mov
cmp
add
and
lods
test
repz
pop
movsb
notl
aaa
jg
pop
loop
jecxz
fistps
pusha
xor
add
jmp
add
adc
and
xchg
xchg
adc
rorl
arpl
xor
in
jo
xchg
lods
outsb
add
out
cmp
adc
ljmp
inc
outsb
scas
add
jbe
xor
and
mov
pop
jnp
sub
in
mov
cwtl
imul
add
lea
sub
lahf
enter
ret
mov
pop
cmp
sub
dec
mov
adc
mov
mov
fisttpl
into
les
xor
jmp
jbe
push
aas
in
push
xor
call
not
jmp
in
xor
xchg
pusha
imul
xor
dec
sbb
cmp
or
fdivr
pop
add
test
jmp
imul
aaa
test
push
aaa
in
cmc
scas
pop
xor
dec
xchg
jmp
sarl
cmp
adc
mov
jne
and
cltd
mov
out
jno
jne
arpl
shll
clc
and
pushf
sbb
nop
mov
xlat
lds
pop
inc
jnp
fcoms
cmp
push
movsl
inc
sub
cmpsb
out
dec
imul
test
stos
xchg
xchg
movsl
pop
pusha
pop
fucomp
add
dec
inc
aam
xchg
pop
in
imul
aam
movsl
aaa
mov
mov
out
out
jne
mov
test
scas
bound
lock
or
loop
test
cmp
cmp
inc
scas
or
lahf
xlat
mov
test
adc
insb
aad
nop
cmp
adc
adc
lods
sub
push
mov
and
aam
out
jmp
xchg
xchg
insb
lea
in
popf
xchg
bound
inc
outsb
outsb
add
xchg
mov
lods
insl
popw
jne
repnz
rcll
fidivrl
sahf
sbb
pop
fstps
pop
lret
sbb
sub
jge
cmp
cmp
xor
push
cmp
sahf
dec
scas
ret
iret
push
sub
outsl
cwtl
add
in
inc
sub
or
pop
sbb
loopew
imul
or
lods
xor
jmp
fsubl
xor
jle
jne
scas
add
lock
or
fwait
and
fcompl
xchg
pop
outsb
mov
es
scas
mov
fimuls
jmp
jp
xchg
sub
lods
aas
stc
mov
xor
push
sbb
cwtl
add
and
rorb
or
scas
inc
inc
sub
addr16
pushf
js
xchg
add
out
jl
dec
inc
pop
sbb
adc
xchg
js
dec
dec
icebp
rorb
adc
cmp
in
jl
mov
gs
jo
cmp
push
leave
pop
out
out
push
or
stos
cli
sub
adc
push
jb
jns
out
pop
pop
xor
jmp
mov
cs
jmp
add
mov
out
jp
loope
insb
pushf
stos
and
fcompl
out
lods
xor
pop
addr16
gs
stos
inc
imul
mov
xchg
xor
cs
icebp
jae
mov
pop
inc
inc
mov
and
or
cmc
sbb
daa
fstl
testl
and
andb
stos
mov
out
xchg
adc
and
fnstsw
fisubrl
cli
jns
out
mov
adc
and
leave
push
and
loop
int3
and
jmp
iret
pop
int3
mov
stos
push
lcall
pop
or
xchg
xchg
xlat
xchg
gs
leave
push
jne
imul
jo
scas
popf
loop
cld
or
sahf
jne
and
stc
mov
and
adc
iret
lds
int3
cmp
dec
stos
js
sub
dec
inc
out
ja
mov
mov
std
cvtps2pi
iret
popf
cmpsl
pop
cli
mov
xchg
cmpb
jne
bound
sbb
out
shll
mov
stc
push
fdivs
sbb
fiadds
and
xchg
addr16
push
rcll
cwtl
xor
mov
adc
push
daa
rorl
les
repz
sbb
push
bound
popl
or
jg
mov
push
inc
xor
test
rcl
mov
pusha
sub
sbb
mov
test
pop
aam
subb
outsb
imul
mov
insb
jp
push
or
sbb
push
dec
cltd
push
mov
iret
cmp
scas
xchg
and
and
std
sbb
xchg
fimuls
pop
mov
xchg
incl
cmp
stc
push
push
daa
push
jmp
sbb
std
into
rclb
faddp
jl
mov
movsb
lock
jne,pn
sbb
xor
push
sahf
dec
mov
push
mov
mov
mov
and
pop
or
fists
mov
test
adc
xor
or
xchg
cld
fwait
mov
mov
shl
xor
sub
jbe
stc
pop
adc
nop
adc
fcomi
mov
xchg
adc
in
and
je
jmp
mov
mov
sti
mov
pushf
sbb
addl
mov
add
std
push
idiv
rcr
repnz
in
jp
pushf
jp
and
gs
adc
adc
ret
imul
sbb
push
inc
mov
mov
imul
push
cmp
sbb
dec
in
mov
mov
fistpll
outsl
push
pop
pop
mov
rcll
add
xchg
cwtl
lret
hlt
xchg
orl
int3
sbb
push
call
rclb
out
ret
je
inc
mov
stos
icebp
fimuls
jns
or
aaa
add
xchg
gs
sbb
sub
ret
bound
stc
and
jle
jns
push
mov
aad
cwtl
nop
test
cmp
dec
jbe
pop
inc
leave
pop
insl
inc
adc
adc
push
stc
out
js
fidivs
js
stc
dec
mov
and
push
test
xor
idivb
cmpsl
cld
imul
imul
dec
fldenv
cs
cli
into
ss
cmp
adc
ss
push
loopne
call
xor
jb
xor
sbb
sub
adc
adc
and
xor
out
dec
dec
arpl
lods
sbb
jno
lds
pop
cmp
adc
push
stc
mov
mov
adc
xchg
inc
cmpb
or
dec
and
dec
adc
cmp
jbe
sahf
dec
push
add
lret
adc
bound
in
sub
mov
pop
mov
mov
les
mov
inc
sub
das
and
imul
rcll
cs
pop
mov
pop
add
pop
int3
outsb
xor
je
jbe
sub
mov
adc
cmp
or
or
fldenv
faddp
mov
dec
inc
adc
dec
es
jo
mov
adc
jno
push
xor
jae
arpl
push
mov
sbb
dec
inc
orl
add
rcrl
sub
dec
sub
sub
ret
inc
jbe
ret
mov
fcompl
pushf
mov
shll
inc
xchg
in
mov
mov
mov
shrl
hlt
scas
fs
adc
xor
mov
inc
loopne
fstl
add
das
xchg
push
push
adc
xchg
dec
xlat
ja
push
adc
lods
cli
push
loopne
xchg
lcall
pop
mov
pop
shll
jne
mov
dec
movsl
cwtl
push
mov
sub
jns
sub
hlt
orb
xchg
inc
addl
jl
leave
fiaddl
sub
sbb
and
sbb
ficompl
mov
out
je
cmpb
and
adc
inc
mov
xchg
adc
icebp
pop
dec
loopne
sbb
sbb
jo
add
sbb
jne
push
xchg
pop
or
and
jo
movb
scas
xor
loope
mov
adc
xchg
lret
xor
insb
nop
and
ss
jae
popa
jmp
jp
mov
shl
cld
mov
inc
outsb
pop
lock
in
dec
xorb
inc
sbb
shll
ffreep
es
into
sbbb
ljmp
jns
and
jne
jb
jecxz
lret
imul
scas
rcll
add
or
stos
jl
ja
stos
lea
push
lahf
movsl
orb
pop
push
icebp
xchg
pushf
add
in
or
cld
sbb
sub
je
mov
xor
jno
pop
inc
out
xlat
cmp
sbb
xlat
ror
xchg
sti
pop
orl
push
or
cmc
repnz
mov
mov
mov
dec
mov
fdivs
xor
aad
xor
push
loope
cmp
xchg
inc
test
shr
inc
test
add
dec
loop
outsl
and
cmp
iret
mov
std
push
leave
xor
in
sbb
addr16
scas
push
inc
sub
clc
je
rcrl
out
xchg
jg
mov
aad
sbb
or
pop
icebp
xchg
or
stos
push
push
cld
xchg
insb
insb
lret
xor
dec
movsb
xor
sbb
mov
dec
xchg
dec
xchg
sbb
mov
mov
jle
inc
testb
fsubrl
testb
dec
ja
jns
sub
cli
movsl
icebp
dec
mov
mov
dec
fimuls
mov
daa
push
scas
andb
push
adc
xor
and
adc
sub
popa
js
mov
jle
push
inc
add
test
sub
fisubl
mov
push
xchg
and
jbe
and
push
xchg
flds
fnstcw
jnp
pop
sub
pop
inc
and
orl
stos
push
repz
cltd
jecxz
xor
out
and
inc
xor
outsb
stc
inc
sbbb
popa
js
out
xchg
dec
jmp
in
loope
stos
sbb
std
cmp
shll
jb
adc
loop
and
and
lods
sbb
xchg
sti
call
in
push
dec
xlat
pop
and
loop
jne
pop
sub
and
sub
test
sub
insl
inc
xchg
das
mov
imul
sbb
movsb
mov
pusha
into
xchg
cmpsb
inc
adc
in
and
jno
jmp
nop
test
mov
jl
popa
jne
xchg
or
clc
inc
mov
insb
pop
mov
rorl
aam
sub
add
sbb
repz
pop
jmp
testb
sub
pushf
cmp
sub
xchg
jnp
gs
or
inc
dec
ret
push
repnz
mov
mov
and
add
rcl
aam
dec
fldpi
lock
rol
and
jno
pop
mov
cwtl
movsbl
mov
movsl
add
sbb
jne
mov
xchg
xor
frstor
jo
mov
and
arpl
push
insl
sbbb
pusha
insl
and
movl
xor
mov
test
cli
sub
addl
das
cmpsl
mov
xor
sti
push
es
testb
aas
inc
iret
rcrl
xlat
jp
mov
mov
stos
push
mov
xor
xor
jmp
jbe
mov
xor
arpl
dec
loope
ss
lcall
push
inc
js
sbb
stc
fisttpll
movb
jae
xchg
scas
stos
loop
dec
mov
addb
xchg
cmp
xchg
lret
sbb
xor
or
adc
cmp
sti
mov
imul
lods
mov
mov
sub
das
cwtl
cmp
xchg
push
mov
rolb
push
aas
imul
jo
es
mov
mov
repz
out
pusha
leave
pop
or
lret
out
lods
pop
test
in
pop
mov
ret
mov
push
dec
fldcw
aas
xor
xor
rolb
jb
fcmove
xchg
divl
in
bound
imul
and
lea
out
fwait
mov
paddusw
lds
mov
pop
into
outsb
call
jge
stos
sti
repz
add
iret
or
roll
inc
repz
rcrl
mov
jge
lret
mov
mov
push
jp
cld
fisubs
or
lds
add
sbb
enter
adc
mov
push
xlat
and
xchg
cld
sahf
rcrb
mov
inc
pop
pop
cld
out
nop
xchg
xchg
inc
pusha
ss
ja
test
cld
pop
pusha
or
push
or
pop
roll
dec
mov
addr16
push
dec
xchg
xor
cmp
fildl
xchg
sub
adc
das
push
jle
jnp
jae
stc
adc
imul
mov
xor
and
iret
add
rclb
fiadds
scas
subl
ret
cmc
pop
mov
fidivrl
or
fisttpl
jecxz
aas
movsb
inc
inc
xchg
push
jmp
jmp
loopne
sub
call
fs
xlat
or
aad
push
in
in
sub
or
mov
dec
add
and
outsl
inc
mov
into
je
xchg
mov
lret
jb
icebp
cmpsb
mov
or
lret
lds
mov
xorl
or
adc
fprem
lea
cmp
mov
add
push
sbbb
sub
adc
out
jp
mov
shl
fildll
dec
xchg
add
jg
lcall
jb
das
push
iret
push
mov
or
or
in
pop
pop
movsb
test
lods
mov
lds
daa
das
scas
sbb
mov
lcall
xor
jp
jecxz
xchg
jns
ss
pop
and
inc
adc
push
movsl
push
mov
cmp
mov
add
cwtl
sub
fcoml
faddl
out
sub
popa
pop
mov
imul
push
push
dec
test
insl
iret
out
xor
xor
mov
lret
imul
iret
sbb
lret
and
jnp
fiaddl
out
insb
jle
ret
mov
cs
sbb
push
clc
out
and
adcl
dec
and
hlt
push
push
cmp
fcomi
out
sbb
xchg
jmp
lods
xchg
addr16
inc
inc
pop
xchg
jp
mov
mov
ss
sbb
mov
in
aaa
popa
mov
adc
daa
and
mov
mov
push
add
hlt
pop
lret
push
test
das
cmpsl
test
dec
jns
loop
jle
leave
in
hlt
adc
add
pop
mov
dec
fisttps
xorb
inc
sbb
xor
sarl
jp
xchg
int
adc
sti
pop
shlb
inc
ret
sbb
pop
mov
cltd
inc
dec
cmp
out
adc
jns
rcrl
imul
addb
push
cmp
sbb
xchg
fdiv
stc
inc
mov
cmp
cli
cmp
mov
out
adc
adc
fidivs
dec
addr16
imul
in
mov
xor
mov
jp
fs
add
mov
shll
cmp
fildl
jne
or
iret
data16
stc
sarb
hlt
xchg
aam
pusha
popa
mov
sub
push
xor
mov
lea
pushf
xor
mov
cs
call
sub
cmp
hlt
xchg
mov
dec
pop
fisttpll
mov
into
sahf
mov
push
fdivrs
dec
mov
fidivrl
lds
popa
and
insl
scas
cmp
and
xchg
aam
inc
in
or
outsb
pop
jae
daa
stc
mov
loopne
outsb
mov
repz
jnp
ret
stc
dec
fimuls
cmp
mov
test
mov
out
push
or
stc
lea
rcl
adc
mov
add
out
movsb
xor
lcall
in
mov
push
lods
cmpsb
xchg
mov
imul
mov
loope
push
movsl
notb
inc
push
push
mov
hlt
sbb
xor
add
movl
mov
imull
mov
add
sub
enter
out
push
xor
fs
seto
test
pop
mov
std
push
insl
add
dec
jnp
jb
fdivrs
and
mov
add
cmpl
call
repz
or
or
mov
sbb
idivl
fdivs
xchg
mov
and
push
enter
xor
fs
repnz
pop
lock
fs
and
scas
fiadds
enter
mov
filds
push
inc
jge
sbb
ja
jno
push
xchg
daa
repnz
test
mov
dec
and
and
dec
cmp
cmp
inc
or
andb
sbb
jbe
sbb
nop
or
bound
ret
lods
scas
or
fdivrs
call
add
lock
fwait
jbe
scas
lock
cs
pop
mov
jg
mov
js
das
jno
out
shll
sti
mov
enter
stc
adc
sbb
jns
cmp
hlt
mov
mov
test
mov
pop
insl
mov
inc
push
mov
jmp
es
adc
insb
mov
or
mov
lret
lea
sbb
out
jp
sbb
push
push
inc
dec
mov
mov
adc
inc
in
xchg
cmp
or
adc
lahf
je
int
in
jae
xchg
fs
clc
cmpsb
adc
lahf
insl
scas
add
cmpsb
jmp
adc
hlt
rcrb
ss
filds
loopne
js
mov
addr16
xchg
jae
pop
mov
nop
mov
test
jne
pop
outsb
cmpsl
orl
mov
int
sbb
cmpsb
sub
mov
rorb
mov
aam
and
adcl
and
loope
out
test
mov
addb
aad
es
xlat
push
out
fidivl
cli
jne
sbb
sub
adc
jnp
jle
pop
movsl
clc
pop
popf
push
add
scas
push
xchg
sub
and
mov
push
push
loopne,pt
outsb
popf
xchg
faddp
sbb
lcall
push
repz
les
xlat
xchg
popa
scas
bound
or
pop
pop
inc
data16
int
mov
ss
mov
pop
mov
aad
jnp
imul
sbb
loope
xchg
shl
inc
push
js
cwtl
in
pop
jmp
int3
lods
push
in
pop
push
mov
mov
mov
sub
xor
int3
pop
jb
adc
loop
andl
in
jmp
pushf
jmp
cmp
imul
sbb
sbb
imul
dec
enter
int
icebp
cmp
ret
std
push
aad
sti
push
jle
mov
and
loopne
sbb
and
ja
pushl
fisubrl
daa
jne
jnp
cmpsl
daa
mov
sbb
sub
mov
xchg
sub
push
dec
popf
into
mov
outsb
hlt
jne
lea
xor
lea
out
dec
or
push
bound
loop
pushw
or
adc
in
or
jns
fsubrp
or
mov
xlat
lret
push
movsl
add
sbb
sti
inc
dec
negl
dec
fsubrs
jmp
loop
ds
loope
gs
call
loop
and
out
add
cs
sbb
rcl
add
lea
mov
je
outsl
mov
insl
enter
into
outsb
cmp
sub
push
add
mov
add
ret
mov
pop
mov
pop
pop
fldt
jb
movmskps
pop
fdivr
scas
sub
xchg
pop
fdivrl
xor
and
dec
and
xchg
mov
cmp
iret
insb
insl
bound
enter
aad
inc
sbb
pushf
xor
std
jle
scas
pop
addl
dec
sub
jmp
leave
xchg
adc
mov
xor
fwait
push
leave
jae
imul
cmpsb
sbb
xchg
jmp
imul
pop
xchg
aam
adc
addl
mov
clc
fnstenv
cli
mov
rolb
pop
or
push
cld
push
inc
mov
fdiv
xchg
dec
jp
notb
jg
or
pop
adc
outsb
das
mov
jmp
fnstcw
and
inc
fstpt
inc
add
inc
hlt
test
and
scas
inc
pop
loop
mov
das
mov
or
sub
les
pop
repz
xor
mov
push
mov
daa
xchg
sub
in
out
mov
shl
and
cmpsb
fsubrl
cmp
adc
add
stos
incl
mov
imul
in
inc
dec
lods
ljmp
mov
dec
test
pop
mov
mov
lret
shrl
roll
xchg
or
jg
push
mov
pop
inc
push
and
jp
mov
inc
out
es
inc
or
mov
pop
enter
cmp
test
or
inc
push
jecxz
jge
idiv
dec
aam
insb
dec
arpl
pusha
push
sbb
xchg
sub
popf
repnz
clc
add
js
in
out
lea
clc
push
xlat
outsb
pop
pop
movsb
pop
xchg
sbbb
repnz
sbb
int
in
data16
or
cmpsb
add
or
inc
fistpll
out
ret
stc
fidivrl
xchg
cmp
loopne
rorb
dec
jne
sbb
cld
xor
iret
xor
scas
fdivrp
push
dec
xchg
dec
addl
mov
xor
in
inc
je
sarb
mov
lahf
push
lcall
mov
or
dec
push
test
adc
cmp
push
push
cwtl
inc
jnp
jmp
push
dec
jl
shll
xchg
adc
xor
repz
mov
loopne
lahf
leave
sbb
pop
cmp
int
dec
or
into
leave
mov
in
shrb
xor
scas
rcr
pop
cltd
loop
inc
loopne
pop
clc
nop
jb
fimull
jne
xchg
xor
add
cmp
dec
mov
push
jbe
lahf
cwtl
outsb
pop
clc
lcall
inc
ss
and
lods
sub
mov
mov
jbe
xchg
daa
mov
pop
add
mov
fbstp
sub
ja
add
imul
pop
cld
adc
mov
jo
jne
ja
divb
add
mov
shlb
and
cwtl
xchg
and
jle
imul
and
mov
leave
jnp
pop
sub
pop
cmp
pop
pop
add
and
xor
cs
mov
pop
push
xchg
fldt
addb
jbe
jle
inc
jbe
mov
pop
or
and
loope
movsb
iret
test
xor
loopne
cld
popl
sarb
test
or
dec
xchg
pop
inc
rcr
xor
or
mov
roll
cmp
mov
lods
xor
cmp
xor
pusha
gs
xchg
aad
xor
xchg
divl
and
sub
mov
sahf
mov
outsl
push
shll
fdivrs
adc
pop
sbb
fldt
push
mov
data16
mov
aas
dec
mov
data16
lea
mov
cmc
mov
jne
movsb
inc
inc
scas
dec
push
iret
inc
or
js
push
aas
in
das
test
add
pop
je
out
je
imul
cmpsl
dec
outsb
add
sub
cmp
fwait
divb
mov
lea
sub
sahf
pop
mov
adc
sbb
leave
push
and
xchg
inc
push
sbb
test
out
icebp
mov
or
ficoms
or
movb
or
sahf
adc
sti
insl
and
andl
jl
ret
and
aas
loop
addr16
adc
sbb
push
add
mov
xchg
mov
jge
inc
cmp
jmp
adc
sub
adc
fists
mov
test
jmp
add
cmpsl
mov
decl
sub
bnd
xor
stc
xor
lret
jo
enter
outsb
push
cmp
orl
stos
loope
leave
sar
dec
or
add
lods
push
xchg
jp
jae
popf
and
shr
adc
dec
lret
push
push
cvttps2pi
dec
dec
xchg
add
mov
or
rorl
xchg
push
jb
loope
mov
ss
inc
adc
push
and
cmp
inc
push
mov
fbld
pop
xchg
cli
movb
sbb
fcoms
mov
xchg
test
sub
push
nop
mov
adc
jne
lret
dec
cmp
ss
push
int
rorb
ret
lods
mov
jnp
jae
shr
jmp
inc
mov
sbb
int3
xlat
lock
aas
jno
and
sbb
jo
frstor
lds
pop
sub
rorb
add
repz
cmp
cmp
iret
jl
seto
stc
aad
insw
das
sbbl
push
sub
push
addr16
sbb
mov
mov
mov
mov
push
pop
adc
pop
jae
pop
dec
cmpsb
inc
xor
jo
xor
cwtl
sahf
jge
popa
mov
xchg
add
in
pop
push
pop
push
or
mov
xor
movb
scas
mov
jae
bt
popa
frstor
test
mov
sbb
add
push
sbb
jne
add
mul
dec
test
mov
aaa
hlt
or
lods
enter
test
ret
orb
out
arpl
or
int3
cmc
movsl
jmp
aam
pop
add
sti
sub
push
shll
aam
adc
mov
ja
cli
push
mov
jb
loop
int3
xchg
das
push
jno
int3
dec
enter
cmp
inc
orb
insl
idiv
fcomip
test
sbb
subl
leave
jnp
inc
out
dec
fwait
outsb
mov
rclb
push
loopne
inc
mov
ljmp
mov
mov
arpl
cmp
and
aam
inc
cmp
mov
mov
jl
jb,pn
popf
pop
add
dec
nop
bound
pop
ss
push
fdivs
mov
mov
scas
mov
int3
push
mov
dec
stos
sub
daa
stos
ljmp
xchg
addb
stos
push
sub
mov
and
jns
sbb
std
loope
mov
mov
jmp
sub
in
jl
xor
lret
or
dec
mov
in
mov
mov
or
inc
mov
fiaddl
push
xchg
ret
mov
ds
test
int
les
dec
ffree
inc
fisubrs
inc
and
mov
and
lret
mov
sbb
fimuls
call
fcoml
xchg
xor
dec
xchg
lods
jnp
mov
out
mov
mov
mov
sbb
rolb
mov
nop
jmp
icebp
mov
insl
pop
aas
movsl
mov
add
imul
push
imul
adc
dec
add
cmp
xchg
adc
ret
adc
xchg
dec
push
int
fdivrp
stos
sbb
jl
push
jne
dec
xor
int
fcomip
adc
add
adc
cwtl
inc
leave
ss
out
cmp
icebp
mov
fstpl
sbb
cmp
imul
add
faddp
out
out
sub
test
notb
mov
std
js
push
sbb
or
es
xorb
js
xor
mov
inc
cmp
xor
push
sbb
inc
and
cmp
adc
sti
mov
and
lods
xchg
mov
mov
sub
sarb
ret
mov
cmp
xor
mov
sbb
ret
gs
fistl
push
pop
mov
test
das
push
cltd
lret
mov
in
adc
clc
mov
cmp
shlb
pop
push
adc
enter
jbe
jp
mov
push
adcl
or
xor
popa
inc
hlt
inc
scas
mov
xor
dec
mov
sub
mov
cld
or
fists
dec
jge
pop
xchg
call
clc
and
pop
in
mov
mov
aaa
push
pushf
scas
sub
out
scas
data16
xchg
jg
sahf
cmc
xchg
mov
pop
lods
push
jg
dec
inc
icebp
xlat
xchg
push
mov
cmpsl
or
loope
rclb
cmpsl
jnp
push
mov
cmp
xchg
cmp
cmp
xchg
xchg
dec
inc
cmp
cwtl
add
mov
push
sbb
adc
pop
dec
mov
sbb
in
mov
sub
dec
pop
loope
outsl
pop
xchg
sbb
dec
orb
mov
jge
push
sbb
cli
insl
mov
or
lock
stos
inc
fistl
in
movsl
or
div
movl
cmp
pusha
iret
testb
sub
lods
jne
mov
adc
test
push
pop
loopne
mov
cltd
enter
loope
fisubrl
addr16
test
daa
inc
subl
in
in
sti
subl
movsb
adc
aaa
mov
sahf
jns
mov
pop
out
incb
ss
mov
enter
in
sbbl
scas
pop
movsb
test
mov
pop
adc
and
rclb
mov
cld
pop
push
loopne
adc
push
sbb
in
clc
cmp
rclb
imul
sub
cs
xchg
xchg
ja
or
ret
ret
cmp
movsl
clc
jae
out
adc
xor
mov
scas
jle
sbb
jno
data16
pushf
pop
outsb
insb
repz
xchg
pop
push
ret
mov
dec
lods
mov
jns
call
loopne
mov
sub
es
mov
lret
add
xor
mov
icebp
pop
xor
addl
ud2
mov
movsb
add
add
pavgw
mov
roll
ss
add
imul
fsubrl
xor
cmp
mov
iret
fwait
mov
loopne
ficoml
das
divl
imul
and
sahf
subb
arpl
cmpsb
ss
cwtl
mov
adc
jnp
or
es
popf
daa
pop
test
aad
aas
sub
xchg
sarb
push
rcll
jne
rolb
xchg
out
std
cmp
inc
xlat
inc
inc
idivl
inc
cld
iret
adc
sahf
test
fwait
and
mov
shll
jp
enter
jns
dec
orl
jl
mov
and
out
cwtl
das
cmpsl
and
test
int3
jnp
mov
inc
popf
xor
fadd
fwait
push
mov
mov
sub
cmp
lcall
mov
pop
jle
cmp
shll
jmp
les
out
and
data16
inc
cli
jmp
mov
xor
fst
fwait
inc
jecxz
xlat
adc
inc
leave
test
or
fwait
or
pop
es
dec
mov
ret
icebp
fcmovnu
mov
or
lahf
mov
fs
push
adc
jno
fs
mov
xor
mov
and
mov
ret
aas
rcrl
lock
push
arpl
bound
jge
mov
push
cmpsb
ds
loopne
loopne
decl
xor
xor
dec
fidivs
leave
and
mov
xchg
cmp
jae
sbb
mov
xor
stc
mov
fstl
gs
jb
aaa
rcr
mov
adc
fildl
fists
lret
xor
sahf
push
jecxz
sub
cld
pop
and
int
iret
test
scas
pop
mov
cmp
jo
cmp
std
test
clc
lahf
test
mov
sti
int3
xor
mov
mov
enter
movsb
jp
iret
push
mov
idivl
mov
or
push
and
sbb
sbb
and
add
adcb
ja
sti
adcl
xchg
or
lds
jns
inc
jo
cli
lahf
or
cwtl
xchg
xlat
pop
push
fs
mov
mov
cld
jne
mov
shrb
mov
jno
mov
adc
and
loopne
and
push
xor
fsubl
cmpsb
in
imul
xchg
cmp
fstpt
outsl
std
es
fcomps
dec
icebp
inc
adc
add
into
addr16
hlt
sbb
mov
call
or
inc
cltd
stos
out
stos
icebp
nop
adc
pop
pop
pop
jmp
cltd
loop
adc
inc
push
xchg
push
orl
or
dec
mov
pop
sahf
popf
mov
push
ret
mov
sbb
cmpb
push
stc
mov
popf
stos
xor
add
aas
mov
test
popa
repz
inc
dec
mov
push
faddp
push
inc
mov
mov
aas
and
jns
mov
andb
mov
mov
jp
inc
ret
push
outsl
adc
andb
jae
cld
scas
popa
sub
and
pushf
push
repz
add
mov
sarl
in
daa
sbb
int3
nop
add
jmp
sbb
inc
xchg
insl
das
cmp
dec
push
sub
inc
xor
movsb
dec
data16
lahf
aam
sbbl
ret
fs
scas
dec
in
dec
filds
imul
out
lret
das
xor
jae
inc
mov
cmp
inc
leave
xorl
das
jns
xchg
add
loope
lea
sbb
pusha
mov
pop
or
repnz
mov
leave
mov
scas
popa
jnp
dec
pop
push
outsb
push
jne
cmp
inc
out
pusha
or
mov
inc
out
jo
clc
or
bound
mov
sub
and
adc
call
push
mov
lahf
outsb
stos
test
sbb
imul
aaa
jne
test
cld
mov
mov
dec
xchg
jl
cld
inc
mov
loop
clc
shll
gs
fsts
rol
and
insb
xlat
popf
jle
je
xor
add
cli
aas
push
jp
in
hlt
or
imul
push
enter
into
mov
flds
pop
ljmp
cmp
sub
push
jne
cmpsb
and
insl
jl
mov
inc
jns
mov
add
int3
outsl
add
mov
sub
lret
add
sub
adc
cmpsb
dec
test
cs
leave
nop
inc
stos
mov
sub
jecxz
jl
or
push
jmp
cld
fwait
or
mov
popf
popa
subb
add
jno
cmp
inc
jbe
cmp
add
int
nop
scas
lcall
clc
fldl
out
jle
orb
fsubp
xor
sbbl
mov
mov
or
std
mov
enter
shl
jns
sbb
inc
outsl
mov
fsubrl
cmp
sub
fidivs
or
out
sub
fimuls
xchg
sti
jg
loopne
xor
mov
imul
aam
jb
std
stos
out
xchg
push
cltd
cltd
push
cmp
pop
cltd
mov
push
das
sbb
jmp
loop
xchg
movl
mov
lret
or
and
popf
dec
push
add
inc
shll
cli
adc
fisubl
or
repnz
nop
pop
xchg
or
sub
aas
cmp
sti
out
inc
lcall
mov
ret
jo
movhps
add
and
dec
fcmovnbe
xchg
fdivs
enter
mov
adc
bswap
aas
hlt
adc
fsubrs
cltd
cmp
fdiv
push
das
mov
int3
mov
inc
cltd
jnp
sarl
jmp
ja
cmp
xor
cmp
filds
sub
inc
out
xor
and
clc
cmp
xor
dec
rolb
in
imul
cld
cmpsb
inc
dec
mov
xchg
stc
in
adc
adc
adc
sbb
sahf
dec
rclb
dec
imul
test
outsb
push
in
pop
aad
push
xor
bound
addr16
arpl
push
and
fwait
in
idivl
ss
sub
cli
cmp
dec
dec
enter
push
add
push
daa
int3
add
call
mov
inc
lods
insb
stos
dec
cmp
into
mov
bound
out
mov
xor
pcmpgtw
insb
imul
ret
out
and
sbb
out
adc
pop
jp
mov
in
or
jne
std
aam
pop
rcr
sbb
clc
lds
sub
xchg
or
sti
cwtl
aam
push
scas
pop
xor
ret
push
lahf
push
in
movsb
mov
jge
cmpsl
and
ss
mov
mov
push
cmp
push
inc
cli
push
cs
roll
leave
mov
or
mov
add
shrb
outsl
xlat
mov
inc
pop
dec
pop
and
repnz
mov
cmc
sbb
mov
or
mov
add
sbb
mov
nop
add
fs
stc
shlb
sbb
roll
pushf
out
or
dec
dec
in
ljmp
adc
sub
mov
jp
cmpsb
pusha
aad
mov
mov
shrl
jns
aaa
cmp
mov
inc
ret
std
popa
add
inc
push
into
pop
add
loopne
xchg
cmp
gs
ljmp
pop
dec
jge
sbb
loope
sbb
jo
lahf
jbe
pop
sti
jns
or
orl
jl
jmp
cmp
mov
arpl
push
mov
sbb
mov
lret
jnp
cmc
das
lahf
inc
xor
sti
mov
xchg
mov
fstl
push
lret
jg
jle
dec
push
push
mov
cmpsl
push
sub
fadds
cwtl
cmp
lock
sbb
cmpsb
pop
adc
mov
lds
adc
imull
mov
in
mov
xchg
lods
xchg
pusha
rorl
popf
loopne
inc
push
sbb
test
movsb
test
xchg
lods
xor
and
push
push
xchg
sbb
pop
sub
mov
mov
push
sub
ds
aad
mov
mov
lcall
mov
mov
jae
xor
scas
ljmp
ljmp
rorb
call
push
clc
sbb
sbbb
cmpsl
je
and
mov
imull
inc
jg
pop
sti
dec
mov
mov
push
or
xchg
pop
movsl
mov
adc
ret
and
in
adc
push
add
and
fst
stos
stos
mov
test
jecxz
mov
daa
insb
fiadds
sti
test
lahf
jb
scas
test
mov
leave
mov
iret
jle
test
add
xor
inc
popa
and
mov
ljmp
out
iret
xor
fisttpl
fcoml
mov
ljmp
push
sahf
sbb
mov
js
divl
jno
inc
push
lret
sub
dec
sbb
mov
adcb
mov
pop
fadds
scas
mov
jl
xor
movsl
not
lret
mov
nop
jge
add
outsb
jb
popa
enter
pop
ja
cmp
adc
and
aam
lcall
cld
dec
test
add
idiv
push
fcoms
or
out
clc
add
fadd
movsb
jle
mov
pop
in
push
into
fnclex
cmp
insb
pop
sbb
xor
dec
out
mov
or
outsl
and
push
int3
sbb
daa
daa
pop
cmpsl
dec
cmp
pusha
and
test
sub
cmp
mov
or
mov
pop
adc
mov
enter
and
push
xchg
sbb
xor
xchg
pushf
cmpsb
jb
mov
adc
arpl
adc
adc
roll
push
and
mov
mov
adc
test
xchg
jle
enter
xor
or
cs
nop
add
hlt
xor
stos
loope,pn
aam
pushfw
jns
sub
push
repnz
je
pusha
push
push
cmp
xchg
jnp
in
repnz
out
cmc
daa
mov
mov
lret
mov
and
loop
xor
xchg
push
xchg
pop
cmc
mulb
xor
rclb
xchg
repz
out
addl
mov
ret
mov
cmp
mov
shll
mov
mov
jl
mov
repz
xlat
mov
lea
ret
mov
ret
pop
push
and
xchg
mov
mov
fsubl
js
outsb
inc
add
fnstsw
and
ficompl
cmc
in
mov
and
es
push
xchg
sub
stos
jae
out
xchg
xchg
sbb
jo
or
jmp
in
push
mov
imul
mov
pop
lods
mov
aad
adc
jg
and
cwtl
loopne
cmp
jecxz
push
aam
fcmovnu
sbb
dec
pop
mov
mov
jge
test
pop
arpl
int
cld
mov
sub
jg
cltd
dec
test
les
inc
jnp
addr16
ret
lahf
xor
into
shrl
dec
mov
cmp
fiadds
push
imul
gs
leave
test
mov
add
lcall
shll
int3
cmp
adc
mov
clc
int3
pop
movsl
in
mov
mov
xchg
or
ret
dec
sub
pop
add
jae
into
lret
stos
mov
inc
sahf
sub
stc
or
loope
adc
push
fadds
and
test
scas
je
rorb
xchg
stos
cmpsb
adc
lcall
das
push
lcall
cltd
fstpl
xor
mov
sarb
loope
jb
fmulp
sub
xchg
xor
inc
fldenv
add
mov
dec
movsb
je
cmp
sub
xchg
lods
out
imul
stc
shrb
mov
pop
pop
xor
cwtl
dec
lods
push
sub
jg
mov
ds
lods
lea
into
data16
push
inc
js
ret
js
xchg
loop
jle
inc
adc
jmp
mov
loope
dec
pop
push
push
cmp
or
stos
add
sub
cld
ret
imul
push
or
aad
mov
loopne
inc
jp
mov
inc
sbb
int3
dec
cli
push
xor
stos
adc
and
mov
xor
aas
sbb
cmp
jmp
jnp
std
sub
sub
mov
jmp
dec
pushf
push
mov
divl
cwtl
inc
je
ret
push
out
push
push
fwait
jnp
and
or
insl
push
rcrb
adc
ror
fstpt
fwait
or
sbb
add
push
in
adc
rol
sub
inc
push
push
cmc
or
jo
out
dec
push
inc
test
mov
popa
pushf
mov
pop
test
imul
data16
pop
jp
mov
mov
into
lcall
inc
or
mov
jb
cltd
mov
inc
jns
adc
push
test
in
adc
jle
mov
vpsrld
push
pop
mov
pop
enter
rcll
sbb
movb
lea
mov
std
xor
ret
stos
mov
stos
mov
push
notb
out
out
mov
jmp
lahf
ss
cmp
mov
jmp
xchg
xor
addr16
test
in
test
jne
mov
loopne
dec
cmp
rolb
sbbb
sarb
xchg
mov
pop
push
mov
pop
call
incb
sbb
mov
fld
inc
lock
xlat
mov
pop
pop
scas
mov
lahf
aas
adc
jecxz
rorb
mov
sbb
push
mov
pop
sbb
mov
cmp
or
xchg
push
popa
mov
adc
xchg
sbb
mov
adc
scas
outsb
push
xchg
and
and
js
mov
xor
aam
sub
rclb
fs
inc
xor
scas
push
shl
cmpb
into
arpl
out
jne
cmpsb
mov
and
cmp
out
push
call
jns
ror
mov
lds
movsb
xor
or
mov
xor
and
xor
movsb
aam
enter
mov
fsubl
cmp
shrl
nop
shlb
sub
fwait
test
jbe
mov
lret
push
xor
ja
aam
or
jbe
jg
outsb
clc
cmp
in
xchg
imul
lret
notl
insl
dec
cs
and
push
cs
xlat
orl
loopne
jmp
dec
lods
pop
div
ds
test
xor
not
mov
jo
gs
inc
dec
adc
scas
mov
movl
stos
push
in
in
mov
sbb
cwtl
out
lea
xor
test
insb
imul
adc
pop
cltd
push
mov
test
push
lds
pop
scas
adc
and
jmp
push
popa
xor
jmp
jns
das
scas
loopne
and
jo
push
mulb
int3
sti
xor
adc
inc
fisubl
mov
xor
ljmp
repnz
jl
pop
sub
or
ds
insb
jo
out
sbb
and
scas
aad
sbb
mov
dec
mov
and
mov
fs
push
and
cs
nop
mov
mov
mov
jae
pop
lahf
test
test
dec
in
push
popf
mov
out
cvtps2pd
mov
push
lret
leave
aad
in
jo
stc
sbb
push
adc
je
loopne
push
fldcw
aad
mov
lock
test
mov
xchg
ret
xor
je
mov
pushf
out
stc
std
sbb
ja
dec
pop
das
ret
imul
push
xchg
ds
into
leave
rcrl
gs
arpl
push
mov
push
inc
adc
incb
sub
lock
adc
adc
mov
jl
mov
mov
daa
shrb
fucomip
jge
pop
stc
inc
jmp
std
sbb
gs
pop
or
stos
test
fisttpl
rorl
loop
sub
or
cmpsl
cld
pusha
in
les
jle
xchg
xor
mov
and
mov
mov
jecxz
or
push
das
dec
fs
aaa
mov
mov
push
mov
out
test
sbb
cltd
push
or
cmpsb
ficoms
and
test
cltd
out
es
adc
shrb
mov
imul
mov
jns
add
into
shrl
sbb
push
xor
hlt
push
out
mov
cmp
mov
das
jecxz
or
aas
push
lea
pop
pop
hlt
in
push
sub
jns
hlt
xchg
adc
mul
dec
fs
mov
or
sahf
pop
divb
xlat
dec
aas
dec
addb
push
mov
sbb
insb
out
out
insb
psubd
nop
test
les
add
inc
pusha
adc
mov
push
rolb
lret
and
cmp
bound
sbb
mov
popf
movsl
adc
push
ljmp
mov
fwait
dec
or
or
and
xor
push
jae
repnz
xchg
loopne
or
xchg
adc
pop
ljmp
adc
lods
ja
aam
push
mov
rcll
mov
push
jecxz
add
lcall
call
cmp
mov
and
jmp
lods
add
lock
movsl
int
mov
cmp
jecxz
outsb
repnz
cmc
scas
aad
xchg
cmc
out
pop
outsb
cmpl
in
in
inc
iret
outsl
xor
ljmp
stos
daa
sbb
aas
mov
stos
iret
cmpb
push
fsubl
in
pop
cwtl
mov
aam
push
call
dec
bound
cmp
sti
dec
test
mov
xchg
cmp
mov
out
cwtl
js
fcomps
sub
pop
imul
pop
xor
mov
mov
bnd
stos
inc
ret
lods
popa
pushf
mov
das
das
inc
or
mov
stos
push
pusha
aas
inc
iret
xchg
xchg
iret
rolb
loopne
sbb
jns
mov
mov
sarb
push
cmp
jns
and
cmpsb
scas
flds
call
inc
xlat
push
xor
push
xor
push
sbb
cmpsl
outsl
cmp
jp
movsl
sub
xor
xor
out
clc
cli
xchg
mov
jmp
dec
in
pop
cwtl
sbb
and
out
into
jbe
mov
daa
es
inc
adc
lea
sarb
dec
das
sbb
lock
mov
dec
pop
sbb
push
sbb
dec
xchg
dec
filds
mov
pop
push
jl
mov
jae
mov
inc
mov
mov
lock
cltd
lea
push
repnz
sub
sub
adc
iret
mov
xor
in
mov
adc
and
fwait
mov
add
imul
pop
pop
les
ljmp
loop
int
loop
divl
int3
movd
xor
xchg
mov
or
hlt
sbb
int
xor
sbb
xor
stc
insl
pop
cld
add
rorl
out
idivb
mov
lods
cltd
stc
push
dec
fnstcw
push
jecxz
push
adc
out
aad
test
rcrl
cltd
xchg
fdivp
adc
push
fmulp
inc
inc
push
inc
push
sub
fs
sub
ficompl
or
push
fsts
sub
and
cmp
and
inc
sub
xor
sbb
daa
sbb
iret
add
pop
mov
ds
call
push
popf
and
test
mov
popa
scas
push
fsubl
std
push
data16
pop
and
mov
sbb
shlb
xor
pop
xchg
push
add
iret
push
push
mov
sbb
dec
cmp
add
mov
movsl
es
loope
sub
mov
jl
mov
fists
jmp
push
mov
mov
je
push
cli
cs
inc
enter
je
lods
jb
or
fwait
xor
outsb
sbb
dec
repz
jne
inc
mov
aas
jbe
addb
negb
sub
lcall
sbb
mov
add
or
je
add
xchg
les
or
je
imul
int
xor
les
sahf
ror
rolb
mov
daa
movsl
stos
fxch
repz
rcr
loopne
stos
popf
stos
jg
xlat
sub
push
mov
xor
jnp
cmc
jae
shr
sbb
leave
jnp
push
ret
aam
pop
adc
xor
test
daa
mov
adc
jbe
call
push
shrl
pop
dec
sub
lods
xor
andl
in
fnstsw
mov
mov
addr16
xor
adc
and
xor
mov
and
test
add
cmp
or
testb
int3
sbb
pop
int
cmp
cmp
data16
or
lods
outsl
test
scas
test
lea
sbb
int3
into
add
in
jge
mov
pop
mov
data16
sbb
pop
dec
divb
clc
mov
push
movb
and
push
mov
and
pop
push
imul
nop
push
xchg
add
xorl
test
xor
inc
dec
dec
jno
insb
loopne
push
test
or
push
data16
divl
stos
pop
fs
sahf
jecxz
add
jp
bound
ja
cmpl
sbb
mov
mov
fnstenv
xchg
adc
pop
mov
mov
cld
adc
ja
xor
leave
xrelease
dec
popf
ret
push
movsb
loope
sti
push
aaa
or
mov
leave
mov
mov
jmp
outsl
sub
push
sub
mov
outsb
cld
xchg
icebp
lret
inc
test
outsl
or
pop
iret
aam
insb
cltd
lret
subb
rcr
xchg
push
push
xor
add
mov
and
gs
and
xor
inc
dec
mov
xor
xchg
ficoms
dec
sti
inc
mov
js
sahf
mov
dec
jmp
ss
fcmovbe
mov
dec
sub
lret
addl
jnp
loopne
mov
mov
and
sbb
pushf
and
mov
fildl
xchg
mov
fcoms
pop
push
cs
popa
jl
sahf
mov
xchg
fwait
movsl
repz
inc
enter
rclb
fcompl
loop
into
ljmp
jge
fcoml
pop
and
sub
insl
and
sbb
mov
ja
stos
fidivs
popf
cmpsb
mov
mov
pushf
mov
adc
insl
inc
sbb
push
repz
pusha
shll
test
add
adc
aaa
mov
push
pop
cmp
and
gs
in
jb
sub
scas
movsl
dec
mov
jmp
insl
pop
mov
movsb
push
lods
and
jns
dec
dec
jb
lcall
test
push
call
inc
or
mov
mov
mov
jecxz
dec
ja
hlt
mov
aad
mov
out
xchg
dec
and
and
sub
iret
test
test
adc
orb
sbb
ds
iret
scas
push
rclb
loope
add
jg
or
ljmp
add
test
imul
inc
nop/reserved
mov
addr16
rolb
aad
add
cwtl
sbb
xchg
in
std
out
outsb
addb
outsl
fiadds
pushf
inc
mov
ret
ret
jge
nop
dec
int3
lret
or
ror
shr
js
and
ret
cmp
adc
jp
cmp
loop
popa
popa
js
xor
clc
pusha
mov
jge
sbb
sbb
loope
sub
adc
cmc
outsl
ret
pop
jbe
and
mov
inc
mov
shrl
mov
sub
xchg
sub
jl
fs
jne
ds
test
push
xor
stos
inc
lods
movsb
xchg
insb
les
mov
lahf
inc
inc
push
orb
cmp
movsl
fldt
dec
fstl
stos
inc
and
and
cmpsl
out
aam
mov
test
jecxz
imul
jae
xchg
repz
cmp
add
dec
push
pop
out
fs
sbb
xchg
scas
cmpsb
nop
gs
xor
pusha
xchg
adc
cmp
jle
add
int
sti
int
dec
xor
mov
mov
pusha
imul
mov
dec
mov
cwtl
jg
in
pop
push
push
or
adcl
test
push
int
jnp
cli
movsl
adc
jns
mov
adc
lret
pop
test
inc
repz
ror
repz
mov
test
or
lcall
pop
mov
stos
aad
aad
jbe
xchg
push
into
mov
xor
int3
faddl
dec
repz
xlat
aas
dec
mov
sbb
cmpl
dec
jae
pop
mov
pop
testl
out
jo
addr16
add
adc
test
sti
mov
in
daa
lcall
mov
clc
cmp
cmp
dec
sbb
ficoml
bound
movsl
repnz
in
orb
sub
jl
or
int3
int3
pop
jecxz
test
jle
push
repz
cmp
in
xor
sub
int3
lods
sahf
add
stos
fildl
mov
and
pop
test
ss
cmp
jle
xor
xchg
inc
sbb
or
mov
pop
xchg
std
insl
lea
mov
in
or
fldenv
inc
divb
push
lahf
add
ret
cwtl
push
add
add
inc
enter
jae
ja
and
or
scas
adc
js
movsb
jbe
sbb
xchg
dec
shrl
int
jb
lods
popa
shll
or
inc
mov
mov
inc
mov
xchg
dec
movsl
int3
lods
inc
mov
mov
out
jo
push
add
push
sub
inc
mov
inc
push
popa
loope
mov
jp
repz
push
iret
sbb
popa
sub
test
daa
xor
into
or
pop
popa
dec
lret
and
jno
push
pop
mov
cld
sbb
jnp
fdivrl
lea
arpl
int3
stc
in
cmpsl
pop
arpl
push
insb
shl
push
mov
jns
xchg
xchg
jb
mov
loopne
and
ljmp
loope
jle
aas
outsl
outsb
repnz
mov
sub
mov
addr16
in
sub
xchg
mov
sub
lret
mov
sbb
lcall
in
cmp
popf
pop
insb
loopne
sbb
sbbb
in
insl
inc
scas
lret
insl
inc
ljmp
xor
jns
add
aaa
sbb
add
loopne
add
inc
inc
adc
and
sub
inc
mov
nop
jo
shlb
adc
int3
leave
mov
xor
xor
xorb
xchg
cltd
outsb
sahf
imul
mov
dec
push
popa
jae
add
jnp
pushf
mov
jno
jle
mov
push
test
sub
and
or
insb
dec
or
and
pushaw
out
insb
fcmovne
aas
and
xchg
sub
cmp
adc
mov
ja
xchg
pop
cwtl
jo
sbb
sub
lret
and
and
fsubs
leave
loop
jge
xor
or
sbb
bound
fucomip
or
sub
lahf
jp
mov
aaa
push
dec
cmp
loop
arpl
out
shrb
cwtl
jnp
adc
dec
fld
mov
popa
xlat
repnz
mov
repz
dec
sbb
sbb
addl
push
cwtl
push
push
leave
bound
popa
mov
arpl
xchg
jl
push
dec
scas
xchg
inc
add
mov
xchg
and
jno
xchg
dec
outsb
inc
mov
pushf
mov
lods
testb
dec
rclb
push
stc
stos
adc
dec
or
jle
movsl
xor
outsb
popa
adc
scas
jle
and
adc
pop
xchg
out
push
xor
xor
leave
scas
sahf
mov
jecxz
push
popf
push
pop
push
dec
adc
call
imul
icebp
or
daa
test
aam
xor
cmp
lahf
mov
out
scas
fbstp
js
movsl
pop
je
dec
out
movsb
xchg
es
mov
mov
mov
sub
inc
negl
mov
inc
dec
mov
aam
xchg
mov
adc
out
inc
or
pop
scas
pop
mov
jge
xorb
inc
xor
xchg
push
imul
subb
aad
ja
fs
xchg
push
xlat
push
cwtl
test
push
scas
gs
mov
loop
gs
mov
movsb
jbe
xor
iret
pop
sub
cmp
xor
in
push
mov
mov
cmc
sbb
mov
inc
pop
pop
inc
aam
outsb
adc
lret
and
mov
daa
test
sbb
jg
and
xchg
sub
adc
repz
movsb
lahf
xor
cmp
sahf
test
sub
ja
push
cmp
shl
in
xchg
sbb
mov
js
cld
pop
sbb
out
pop
outsb
jp
adc
in
stc
dec
mov
iret
loop
into
sub
das
cltd
adc
adc
pop
mov
cmc
iret
add
cli
mov
shrl
in
stos
insb
inc
xchg
inc
jns
add
loopne
in
jp
iret
ljmp
pop
adc
fsub
adc
ljmp
jnp
outsb
stos
iret
inc
mov
movsb
stos
daa
mov
or
cmp
inc
mov
cmc
out
shr
aaa
cli
cmp
fprem
cltd
push
loope
aas
xchg
lret
pop
mov
sbb
clc
fstps
mov
sbb
ret
fisubrl
lods
fs
ljmp
lds
pop
stos
cmc
lds
sbb
and
jmp
sbb
or
vmovntpd
faddl
sub
push
les
push
jo
cmp
mov
or
in
lahf
roll
repz
inc
jle
mov
sbb
or
aad
ret
lods
mov
add
das
mov
cwtl
sub
adc
jns
ret
sbb
stos
shrb
in
test
or
cli
lcall
and
or
insb
push
xchg
push
in
mov
and
test
mov
mov
bnd
int3
add
cld
arpl
push
inc
pop
and
pop
out
mov
mov
xchg
scas
pop
stos
int3
roll
lahf
lahf
or
cmp
adc
inc
sbb
mov
lock
mov
scas
lods
and
add
pop
mov
fstl
cmpsb
sbb
nop
roll
push
pop
gs
add
jno
dec
push
movsb
mov
cli
shl
fisttps
std
push
jl
cmp
call
into
add
jno
fs
dec
sbb
loope
jno
iret
mov
dec
pusha
sub
and
lock
pop
dec
inc
shll
cmp
or
xor
mov
jecxz
xlat
mov
mov
ja
ljmp
fsubl
jae
and
mov
xchg
enter
xor
aad
mov
add
out
fidivs
push
mov
push
loope
mov
sbbb
outsb
vpcmpgtw
outsl
sahf
adc
cltd
cwtl
mov
cmp
jmp
imul
sahf
cltd
mov
mov
sub
mov
nop
push
ds
xchg
es
enter
pop
cmp
iret
adc
cld
dec
dec
cmp
repz
or
or
inc
and
test
lret
in
sub
mov
in
push
cmpsb
repz
dec
imul
div
aas
jno
sub
mov
adc
out
sbb
pusha
bound
int
scas
call
sbb
sub
cmp
pop
fimuls
ds
add
mov
xorb
or
test
sbb
ljmp
in
outsb
mov
dec
and
test
outsl
adc
shll
sub
cmc
lods
sub
aas
and
jne
cmc
cs
push
mov
fs
aaa
cld
fisttpll
xchg
jp
pop
lods
add
sbb
jl
xorl
sbb
xor
sarb
pop
repz
and
jle
iret
pop
and
xchg
push
ja
leave
or
fnstsw
idivb
pushf
daa
cwtl
add
pop
mov
mov
pop
jns
sahf
pop
fildll
les
loop
jae
sar
stos
fs
jb
jne
push
cmc
pop
shld
scas
popa
fsubrl
or
movl
inc
in
xor
cmp
sahf
imul
pop
shll
das
dec
orb
jg
imul
data16
je
hlt
dec
pop
inc
popf
ret
lahf
sbb
stc
push
ret
mov
mov
andb
movsl
orb
lret
cmp
std
out
sub
and
fidivrl
inc
aad
xchg
xor
jo
push
jb
xlat
roll
outsb
pop
aad
jae
cmp
inc
lods
fbstp
add
mov
fwait
pop
mov
dec
fidivs
popa
cs
jbe
mov
push
sbb
ret
rclb
scas
insl
out
or
imul
xor
cmp
aaa
mov
cmp
inc
xor
movsb
and
test
out
push
xor
xchg
ljmp
cld
clc
aas
adc
sbb
lock
inc
xchg
ret
lahf
or
pop
xchg
es
clc
cmp
xor
xor
dec
movsb
mov
push
cwtl
push
mov
sbb
inc
cmp
pushf
xor
scas
testl
ss
jmp
mov
xchg
sarl
dec
das
mov
out
in
repnz
push
lods
mov
mov
push
mov
mov
mov
inc
add
sarl
or
jne
jnp
xor
fwait
in
sub
mov
jp
insl
test
loopne
cmp
mov
mov
pop
dec
push
insl
popa
int
xchg
andl
popa
out
sbb
xchg
rol
cwtl
push
imul
xchg
out
test
sub
mov
cmpsb
ds
xor
jnp
mov
jp
inc
filds
popa
mov
sbb
mov
mov
adc
push
icebp
adc
mov
xchg
pop
jge
xchg
pop
ret
loope
inc
mov
fadds
cmpb
xorb
out
and
push
outsl
popa
es
inc
sub
scas
cmp
sbb
fcoml
xchg
and
test
leave
push
hlt
mov
xor
enter
rorb
inc
xlat
sub
jp
js
jecxz
incl
pop
les
mov
mov
lcall
or
jg
or
es
out
aas
pop
mov
jmp
aam
loope
inc
mov
lods
ret
mov
mov
or
mov
popf
scas
ja
xchg
leave
popl
imul
cmp
xor
andb
ficomps
sahf
insb
ljmp
out
in
push
cmp
pop
jns
xchg
rcr
mov
sti
or
jmp
cmp
frstor
dec
outsb
pop
adc
call
ffree
mov
imul
mov
nop
xor
or
sub
rclb
ljmp
out
adc
mov
lods
and
dec
out
and
pushf
call
mov
mov
cmpl
xorb
pop
rcll
sbb
sbb
fwait
mov
xor
scas
push
ficompl
lret
dec
mov
popa
lods
and
pop
les
sar
pushf
pop
clc
adc
imul
int3
test
test
inc
cli
mov
leave
mov
repnz
jb
iret
dec
bound
mov
cmp
scas
jo
mov
popf
shrb
pop
data16
enter
ret
test
jecxz
xor
mov
bound
xor
loopne
test
lods
inc
sbb
test
mov
xchg
imul
pop
push
ja
dec
jno
pusha
ljmp
cwtl
fwait
mov
dec
icebp
mov
push
mov
push
negb
jo
adc
xchg
mov
xor
icebp
and
jecxz
clc
mov
pop
sub
push
mov
shll
xor
ret
leave
call
out
leave
push
cld
xchg
sub
mov
mov
mov
mov
test
xlat
sbbl
cmp
push
insb
fsubp
inc
lds
push
out
mov
xchg
push
dec
jns
pop
sahf
fdivp
insb
test
xor
nop
cmp
push
or
addr16
jns
repz
and
div
add
cmp
xor
add
xor
mov
mov
push
dec
leave
push
lods
cltd
add
cmp
leave
ffree
sub
jecxz
and
orb
add
out
out
xchg
mov
sti
les
dec
xchg
ret
xlat
int
fistps
stc
push
orb
call
ss
push
stc
sbb
mov
lea
jb
push
xchg
cltd
cwtl
and
in
test
imul
inc
sbb
lret
out
je
mov
stc
ror
pusha
xchg
cmc
popf
sub
jae
push
js
sbb
xor
pop
pop
test
rorl
ret
cli
inc
xor
inc
xor
inc
push
add
nop
shrl
jp
and
nop
lock
imul
lea
sbb
ljmp
xor
cmp
cmpsl
inc
outsb
xchg
repz
ja
sub
pusha
fiaddl
and
inc
movsb
das
popa
stos
xchg
clc
stos
ds
sbb
outsl
stos
test
rclb
pop
mov
or
mov
aad
inc
dec
xlat
imul
es
mov
jmp
adc
mov
jnp
rcrl
mov
adc
mov
add
sub
xor
test
add
jecxz
mov
push
scas
inc
or
iret
cmp
into
loope
lret
notb
pop
jp
sbb
lea
adc
aas
mov
lret
or
push
lret
or
fisubrs
mov
inc
sti
mov
mov
push
mov
jo
rolb
frstor
lods
ja
ret
mov
jge
shll
ret
mov
mov
and
mov
fcomip
push
in
jle
or
mov
jbe
fldl
test
pop
jmp
lcall
sub
or
add
jmp
mov
enter
jmp
jns
cli
jle
xchg
push
mov
dec
xchg
mov
mov
dec
jle
pop
dec
cmp
push
or
das
jnp
xorb
out
stos
jecxz
xchg
in
mov
mov
sahf
mov
addb
popf
stc
mov
insl
jp
test
cmp
xchg
jo
inc
mov
lock
xor
sahf
in
inc
lret
clc
push
adc
test
cmp
jge
test
mov
dec
xor
call
dec
push
mov
jae
int3
cmp
mov
test
jl
inc
mov
mov
add
jb
sti
jns
loop
jp
jb
xor
fmuls
cmp
or
out
inc
das
sub
sahf
push
pop
inc
and
stos
jnp
stc
pop
jecxz
mov
andl
or
or
lret
cmp
mov
not
or
or
mov
sbb
scas
cmpsb
inc
ficomps
jmp
out
into
sbb
inc
and
jns
and
adc
aad
ficoms
setb
test
xchg
in
fists
mov
lods
mov
xchg
cmp
xchg
xor
and
xor
or
out
or
pop
cmp
iret
jle
jmp
mov
in
aad
mov
adc
mov
fsubl
or
fisubrl
dec
or
sbb
xorl
mov
rclb
pop
imul
sub
xor
das
mov
dec
jne
xor
sti
loopne
fwait
mov
movl
or
lahf
jge
sbb
hlt
mov
sub
sbb
lret
add
push
jmp
outsb
inc
call
loopne
xor
cmp
imul
and
shll
add
fnstenv
cmp
inc
pop
outsb
adc
inc
sub
dec
pusha
subl
outsb
inc
sub
inc
add
mov
bound
ret
mov
mov
push
push
fistpl
jecxz
popf
ret
stos
andl
dec
push
cmp
add
mov
loop
mov
test
in
shll
push
test
popf
lock
mov
fdivrp
pop
add
dec
cmpsb
xchg
or
stos
push
bound
xchg
or
push
xchg
add
dec
es
sbb
jns
xchg
ja
scas
fs
mov
add
shlb
xchg
sub
xor
push
add
mov
inc
das
in
pop
pop
das
in
mov
call
cltd
mov
testl
xchg
cltd
imul
jb
loopne
loop
cmp
push
jbe
dec
add
dec
dec
fcmovne
xor
into
dec
into
mov
jle
mov
jnp
lods
xchg
jmp
outsl
jne
jg
stos
jl
xchg
inc
sub
dec
loopne
int3
movsl
sar
cmp
jge
movsl
dec
and
insl
pop
sub
fdecstp
test
lock
addr16
adc
push
lret
jne
add
adc
mov
loope
movsb
out
cwtl
adc
test
inc
xor
sub
sbb
sbb
rorb
sbb
lret
mov
in
jmp
int
call
test
aas
jbe
shrb
add
push
jp
icebp
mov
bound
mov
jae
mov
add
sbb
xchg
cwtl
ret
mov
cwtl
mov
mov
lock
jmp
shl
dec
hlt
fidivrs
push
add
lahf
mov
insb
and
sub
sbb
fucomip
pop
adc
sub
inc
pusha
and
scas
loope
add
add
mov
mov
ret
in
mov
hlt
faddp
push
aam
dec
sbb
cltd
cmp
pusha
xlat
mov
or
andl
mov
call
insb
push
jmp
lret
lods
push
out
mov
daa
stc
jb
icebp
ret
loop
mov
jecxz
rorb
scas
xor
lds
sub
subb
lret
movsb
and
call
sub
xor
cmp
dec
cmp
in
ret
sbb
dec
cmpsl
cwtl
adc
xor
or
adc
push
pusha
leave
popa
repz
aam
in
cli
rol
dec
sbb
xchg
sbb
sbb
pop
cs
addr16
int3
or
mov
lods
mov
push
les
cltd
mov
lret
in
loopne
iret
xor
sar
movsb
movsl
scas
push
or
je
icebp
pop
mov
div
cmpsb
mov
mov
stos
lcall
cmp
shll
leave
jecxz
out
pop
data16
pop
imul
mov
adc
shr
pop
jb
in
repz
adc
out
int3
jns
shll
hlt
xchg
dec
js
incl
inc
jb
cld
mov
lret
or
dec
push
aad
pop
xor
iret
jle
mov
cmpsb
pushf
push
ret
mov
sbb
or
cmp
mov
shll
cmpsl
dec
mov
movb
das
push
popf
sbb
pop
adc
fucomp
pop
in
xchg
lahf
xchg
mov
dec
mov
in
add
xorl
lcall
adc
cmp
shl
jge
popa
out
dec
mov
into
jmp
mov
jl
push
les
push
mov
cmp
stc
and
mov
and
or
aad
jg
les
pop
add
cwtl
test
jle
repz
ja
adc
daa
outsl
fistpl
and
xor
test
inc
adc
jno
test
in
test
arpl
rorl
pusha
daa
das
jb
js,pn
lock
cs
mov
shrb
mov
in
mov
mov
inc
das
add
jae
divl
lea
call
pop
push
adc
sub
dec
cmpsb
sbb
call
sbb
xchg
subl
and
mov
shrl
pop
js
xchg
ficompl
or
dec
fistl
sub
push
sbb
das
xor
jnp
mov
stos
xchg
lock
daa
ss
adc
stc
popa
mov
xchg
jl
mov
vmovups
xor
movsl
lea
and
push
push
rclb
inc
jle
dec
pop
nop
aas
cltd
pop
repz
jns
push
mov
hlt
jecxz
or
add
pop
sub
adc
or
pop
movsb
pop
scas
push
xor
int
ljmp
ljmp
pop
lea
dec
mov
lret
mov
push
dec
icebp
fldcw
inc
sti
ret
aas
add
jns
shl
insl
fisubl
adc
pop
mov
jb
cmpsl
test
fbstp
mov
pop
pop
dec
popw
mov
xor
jnp
or
mov
in
sbbl
sbb
paddd
je
int3
mov
imul
ds
mov
out
out
cmp
push
mov
mov
sbb
pop
xchg
dec
mov
xchg
sbbb
adc
jb
sbb
stc
and
mov
mov
ja
lret
push
mov
aam
xor
fidivs
aaa
fwait
loope
popf
mov
xor
inc
aas
imul
xchg
arpl
jbe
push
mov
and
sbb
mulb
shrl
and
call
repnz
test
inc
jmp
shll
mov
cmp
cmpsl
and
cmc
idiv
mov
adc
jb
out
xor
out
lea
xchg
mov
cmp
and
dec
cld
imul
mov
jno
test
test
cld
sbb
or
out
js
sub
xor
mov
sub
sub
pop
das
sbb
push
decb
fucom
sub
push
jp
cmp
xor
mov
nop
das
fwait
sub
test
insb
arpl
inc
adc
test
and
mov
test
loopne
jle
fsubs
or
cmc
and
push
outsl
sbb
aaa
ret
and
aam
lcall
fists
xor
cli
adc
inc
fcmovb
outsl
mov
mov
stc
subl
and
int3
mov
test
imulb
rcll
pop
dec
clc
idivb
add
mov
test
mov
cmc
nop
fcmovu
mov
and
sbb
adc
lret
xor
xor
aad
xchg
in
fmull
xlat
adc
in
icebp
push
mov
clc
call
add
sbb
in
jl
sub
xchg
test
sub
int
fmuls
sar
insb
lret
repz
jecxz
aas
mov
pop
and
aad
out
pop
jecxz
and
mov
out
mov
push
enter
and
sbb
sbb
addr16
and
ja
cmp
sbb
push
and
dec
scas
scas
push
jnp
jmp
jl
jle
stc
mov
mov
mov
and
rcr
insb
mov
out
pop
ja
cmp
int
fildll
pop
pushf
popf
xor
sbb
pop
scas
sar
adc
or
fidivrs
adc
sub
cmp
mov
dec
andb
inc
dec
xor
enter
pusha
jmp
out
add
shll
imul
xchg
cmp
add
cmpsl
sbb
mov
fdivl
sub
push
add
cmp
cmp
imul
pop
jge
cld
push
hlt
mov
rcrl
sti
mov
in
outsb
xchg
andb
mov
sub
adcl
imul
and
cmp
dec
push
or
mov
fisttpl
add
mov
mov
and
inc
or
arpl
cmpsb
into
jo
orl
cmp
fnstcw
movsl
cmp
push
or
mov
outsl
pop
sbb
sbb
cmpsb
aas
jno
dec
popf
sbb
mov
lret
mov
test
xchg
aas
mov
les
xchg
mov
ljmp
in
xchg
repnz
addr16
cmp
inc
iret
lods
std
sbb
sbb
into
jg
popf
xor
or
sbb
cmp
sbb
jp
sub
xlat
rolb
mov
popf
xadd
loop
adc
ja
repz
xchg
dec
jnp
repz
lea
jp
jmp
fbld
loop
mov
iret
push
add
pop
pop
ljmp
ja
mov
fwait
lahf
cmpsb
fstpl
pop
push
scas
jg
pop
inc
arpl
mov
sbb
ret
adc
or
mov
test
mov
aam
lret
mov
jmp
pop
push
lcall
aam
mov
sub
mov
pop
xor
or
and
scas
lcall
push
cmpsl
cmp
sub
sbb
push
in
sbb
mov
cmp
jb
cld
dec
sbb
inc
push
cmc
loop
cmc
movsl
ds
push
lods
cltd
mov
adc
addb
cmpsb
loope
outsl
enter
nop
add
movsb
push
xchg
and
jp
mov
pop
sub
push
in
jmp
and
pushf
imul
mov
repnz
cmp
xor
mov
jns
pop
popa
mov
adc
sub
or
dec
cmp
test
inc
push
add
call
les
mov
movsl
iret
out
dec
adc
add
xor
dec
call
jns
add
xor
lods
nop
rorb
inc
pop
rcrl
xor
aad
cltd
scas
push
iret
jnp
dec
ss
das
test
aam
out
inc
sbb
jbe
inc
or
or
cwtl
inc
cli
inc
negb
or
std
mov
xor
or
mov
jg
sti
loop
xlat
push
xchg
push
bound
and
inc
imul
sbb
stos
inc
sub
loop
jb
lcall
mov
xchg
andl
sbb
pop
cmp
or
jnp
fadds
test
mov
pop
sub
mov
sub
xchg
mov
or
add
pop
push
in
jo
imul
ret
loopne
out
js
repnz
sbb
rcll
lret
lock
push
push
sti
sub
sbbb
xchg
ret
push
jae
xchg
xchg
lcall
and
inc
xor
into
shll
jns
sbb
cmp
shll
lahf
dec
ret
outsl
dec
cmpps
repnz
jo
mov
add
xorps
lods
int
mov
push
pop
xor
sbb
sbbb
push
xor
sahf
and
pop
inc
andl
mov
int3
js
sti
pop
sti
mov
sbb
aad
shl
mov
push
push
sahf
ret
fistl
add
lret
pop
cltd
jg
xlat
jg
mov
lret
inc
add
outsl
xor
fs
push
push
mov
pop
sti
xorb
mov
mov
lods
mov
dec
sbb
outsl
adc
fadds
test
mov
xorb
fs
pop
xchg
push
sti
imul
rorb
pop
mov
cmp
xlat
jg
push
inc
gs
cmovno
jmp
sub
sub
sub
jmp
popl
push
test
dec
add
fisubrs
enter
das
outsb
cmp
shrl
fcompl
mov
mov
cmp
pushf
xor
lahf
das
gs
sbb
popa
daa
pop
or
test
stos
cmp
ss
cmp
cmp
movsb
pushl
test
and
addr16
ja
sbb
xlat
push
lret
pop
lock
jae
inc
movsl
loopne
jmp
jns
xlat
jl
je
fsubrl
xchg
inc
dec
sbb
cwtl
sbb
mov
adc
fs
lret
xchg
repnz
imul
mov
movswl
fsubrs
push
xor
enter
sub
cld
mov
push
in
outsb
pusha
mov
mov
xor
sbb
push
jns
push
xorl
push
lcall
fnstcw
enter
add
cmp
enter
mov
inc
dec
pop
cmpl
inc
ficoml
daa
aad
and
lahf
inc
cmc
divl
iret
and
jns
lcall
test
sbb
repz
mov
cmp
jecxz
or
jb
sarb
jmp
ret
repz
into
xor
pop
xor
cmpsb
jp
js
pop
shrb
jl
iret
shlb
inc
pop
or
xor
fbstp
or
out
int3
ret
jp
jb
add
mov
pushf
jecxz
fisttpll
push
aad
mov
xchg
lock
hlt
pop
and
out
pop
xchg
xchg
lahf
mov
cmp
push
call
and
or
sbb
es
pop
icebp
pop
mov
ret
dec
xchg
shll
out
cmc
cld
hlt
cmpsl
dec
out
outsl
sbb
sahf
mov
xlat
pop
xchg
fwait
and
sbb
lds
lds
inc
mov
js
sbb
in
test
push
outsb
jb
lret
enter
add
jle,pt
mov
iret
out
stos
mov
mov
sub
sub
jno
pop
ficomps
shr
cmp
mov
adc
cltd
imul
inc
lds
fwait
sbbl
rcrl
add
xor
pop
push
sub
push
xor
jbe
popf
aad
lahf
sub
loop
outsl
rcl
es
mov
cmpl
je
mov
setb
mov
inc
sub
inc
pop
mov
add
lahf
cmp
pushf
subl
xchg
inc
into
fidivl
outsb
dec
xchg
in
or
mov
pop
pop
enter
inc
rcr
mov
rolb
add
lods
jb
mov
into
pop
and
ret
in
mov
lahf
fldcw
jbe
sub
mov
add
and
cltd
sarb
pop
out
jp
add
pop
popa
push
xchg
and
clc
ljmp
stc
jp
mov
mov
shrb
inc
test
std
addr16
dec
dec
mov
movsl
and
inc
stos
fistl
jbe
repz
sbb
cmpsb
outsl
lahf
mov
jge
sub
pop
lahf
or
bound
mov
leave
popf
jmp
inc
das
sti
mov
dec
xchg
sti
das
cmpxchg
xor
adc
push
jno
mov
dec
aam
adc
push
cltd
dec
mov
repnz
popa
scas
aas
sub
stos
outsw
jecxz
sbb
lea
mov
or
int3
subb
arpl
jp
jg
pushf
es
fsubl
pop
lods
orb
sub
les
dec
sbb
lock
out
xlat
std
test
test
insl
out
mov
lods
pop
pop
fnsave
push
popa
cltd
data16
mov
bnd
push
push
xor
cltd
roll
dec
sbb
aas
and
sbb
dec
sbb
mov
mov
ret
add
in
imul
jmp
and
adc
insl
push
inc
jbe
inc
jnp
mov
cmp
jo
testb
mov
aam
jo
cmpsl
pop
in
daa
inc
pop
dec
xchg
inc
and
std
loop
nop
xchg
adc
mov
movsl
push
insl
mov
adc
outsb
das
cmc
aad
std
or
mov
add
xchg
shlb
pop
sbb
sbb
imul
aas
enter
inc
push
pusha
mov
es
addr16
repnz
repz
pop
je
out
mov
mov
hlt
imul
push
cmp
je
cs
outsl
ret
stos
pop
sar
fwait
outsb
lds
mov
aaa
sub
jne
enter
mov
xor
dec
mov
gs
pop
cltd
fwait
mov
jge
loope
mov
jp
pop
mov
mov
pop
iret
ds
outsl
xchg
pop
cmp
xor
and
std
or
xor
or
stos
inc
in
cmp
nop
add
in
mov
insb
mov
lock
arpl
fnsave
in
lods
out
cmp
add
pop
outsl
fcoms
arpl
sub
aaa
outsl
insb
testl
rcrb
sub
addr16
push
in
pop
jbe
dec
popf
sbb
sbb
sbb
push
xchg
xor
pop
push
lds
pop
xbegin
fstpl
push
push
mov
aaa
adc
iret
inc
scas
and
lahf
jae
imul
push
xchg
fldenv
xor
pop
or
les
fnstcw
pop
stos
and
cmpsl
int
dec
cmpsb
push
subl
push
clc
scas
mov
xor
stos
dec
loop
inc
inc
lock
adc
push
repz
and
fs
push
out
sub
andl
sahf
cmpsb
aas
cmp
add
je
mov
xchg
inc
mov
mov
xchg
add
shlb
mov
lret
dec
mov
mov
sub
rcll
aaa
popf
out
jecxz
mov
ja
bound
mov
addr16
xchg
lahf
test
dec
cltd
push
mov
cld
es
aad
jge
rep
fisttpll
jl
repnz
scas
sub
mov
in
std
out
fsin
xor
or
ds
aam
fiadds
movntps
or
fbld
jo
sbb
mov
jmp
in
enterw
mov
icebp
cmp
pop
add
add
mov
lock
jge
or
mov
push
or
jmp
xchg
xchg
dec
stos
lea
push
cltd
mov
aad
xor
stos
pop
fwait
push
dec
les
fmuls
addr16
sub
das
xor
sbb
inc
scas
xchg
push
mov
sbb
mov
cmp
add
orb
out
movsl
or
sar
adc
loop
adc
imul
lods
out
es
jmp
jae
push
push
dec
and
pop
pop
lods
or
cld
cmp
mov
push
out
xor
sbb
mov
in
jne
mov
mov
mov
push
sbb
and
jl
or
icebp
ja
clc
test
and
sub
pusha
cmpsb
pop
dec
mov
dec
adc
lret
push
out
dec
lea
mov
push
test
pusha
orl
mov
and
enter
inc
xchg
lret
fdivs
xor
ret
push
jbe
adc
les
adc
mov
je
mov
mov
cmp
and
mov
lret
dec
inc
mov
data16
pop
aad
pop
rorl
xchg
sbb
mov
loope
lea
and
adc
and
mov
dec
ja
cmc
mov
sarb
and
cmpsl
cs
mov
jl
sub
jg
addr16
fstl
xchg
push
enter
lds
popa
aaa
jbe
dec
push
jmp
bound
lret
push
inc
and
push
xchg
ljmp
dec
push
lock
sub
cs
sbb
into
popf
cmp
scas
mov
or
insb
lods
or
test
pop
idivl
inc
sub
in
rcrl
xchg
fwait
xor
or
cmp
pop
mov
xor
push
data16
les
out
movsb
jmp
pop
inc
rol
clc
out
cmp
popf
lock
jbe
cmp
mov
pop
jmp
and
push
sub
pop
inc
mov
sub
mov
xchg
cltd
adcl
add
ljmp
idivb
xchg
adc
push
mov
stc
enter
mov
mov
mov
cmp
lods
cmpsb
mov
shrl
adc
in
rorl
inc
mov
jne
je
jp
push
cli
insb
dec
cmp
pop
cmp
mov
outsl
imul
pop
sahf
lods
in
inc
push
inc
cmpsb
fwait
stos
aad
xchg
push
aas
mov
ret
sbb
mov
xchg
lods
in
inc
xchg
mov
into
out
sbb
add
out
sub
jno
ja
adc
insb
xor
insb
sbb
insl
xchg
or
xor
inc
lds
jge
jo
and
inc
fidivrs
ficoml
in
and
pop
sbb
inc
or
push
cwtl
insb
jno
mov
es
jo
lret
fistpll
outsl
cmp
dec
sub
data16
adc
mov
xchg
ret
inc
sub
scas
lods
dec
push
test
lods
jge
dec
mov
xchg
std
push
mov
jbe
fbld
mov
jl
adc
and
test
test
roll
xor
int
aad
xacquire
push
xchg
push
xchg
shl
and
cmp
orb
js
fdivrl
add
fildll
movsb
sti
int3
dec
sub
out
sub
cmp
adc
pop
test
dec
lock
mov
adc
jmp
inc
adc
jb
dec
les
jnp
cmc
rorl
filds
push
sub
ret
adc
cwtl
ds
mov
sbbb
inc
movsl
or
aas
fildll
sub
cli
mov
fwait
in
nop
fmulp
pop
and
leave
lds
ja
cltd
dec
aas
fnsave
xor
mov
sbb
dec
imul
lret
push
je
dec
fptan
sar
sti
sarl
aaa
adc
add
push
mov
cwtl
inc
rorb
ficompl
test
inc
adc
adc
add
fldt
std
insl
xchg
mov
or
sti
dec
mov
mov
cmp
mov
push
jns
pusha
xchg
dec
aam
xchg
subb
jno
test
mov
push
int
addb
lahf
in
sbb
sub
enter
filds
shlb
mov
bound
repnz
mov
push
pop
arpl
sub
rdtsc
cli
and
dec
jg
lea
daa
jmp
lods
add
sub
xor
loope
push
ja
stos
push
test
jae
sbb
mov
subb
inc
jl
lock
xor
xor
mov
pop
and
xchg
gs
mov
daa
sahf
in
push
adc
mov
mov
push
and
xlat
test
push
push
insl
mov
leave
and
mov
sub
xor
dec
mov
cmp
and
jnp
test
out
cmp
pop
iret
sub
add
insb
aas
adc
movsl
dec
aaa
test
cmp
mov
aaa
ss
mov
lods
stos
sub
in
xchg
jns
sbbl
adc
rep
int3
scas
lahf
and
arpl
js
cs
cwtl
mov
jns
mov
inc
sti
jge
sti
push
adc
mov
mov
push
shl
int3
out
push
pop
aaa
and
add
mov
loop
out
out
sub
jo
mov
sbb
enter
push
push
pop
xchg
jae
jb
mov
sub
jb
ja
imul
adc
mov
jp
dec
jecxz
mov
cmc
jbe
mov
inc
out
inc
repz
sbb
or
push
and
inc
ss
pop
and
sub
xchg
xchg
sub
mov
jbe
stc
cmp
arpl
sarl
jno
push
addr16
xchg
test
movb
or
lock
adc
pop
jg,pt
inc
fucomi
xchg
inc
in
sbb
pop
jp
clc
push
scas
setl
jns
cmove
push
sbbl
loop
call
add
push
cmp
xorl
pop
xchg
cmp
in
pop
cmp
mov
jne
and
xchg
mov
mov
out
xlat
mov
imul
leave
sbb
or
cltd
inc
pop
mov
sub
xchg
pusha
mov
push
icebp
xor
repz
add
es
mov
js
xchg
stc
enter
mov
fldcw
jae
movl
dec
and
mov
mov
rcr
and
cmpsl
ja
arpl
sub
ror
mov
dec
pop
add
lret
mov
jb
ss
repz
pop
stc
stos
cmp
jmp
jle
pop
mov
cmp
cmp
sub
and
cmp
sar
nop
les
mov
insb
mov
ja
or
xchg
hlt
push
mov
decb
adc
push
pop
in
nop
pop
xor
shr
pop
adc
test
jmp
sbb
mov
push
pop
adc
ficompl
jne
pop
ret
sahf
xor
mov
mov
fmuls
xchg
adc
sub
mov
lcall
xchg
cmp
js
inc
mov
and
xchg
inc
xor
xchg
mov
movsb
sahf
mov
daa
iret
xorl
addl
xchg
inc
pushf
xchg
cmp
das
sbb
jno
in
dec
adc
mov
cmpl
mov
mov
pushf
js
and
mov
mov
add
es
dec
gs
add
pop
ja
cmp
adc
mov
addr16
push
pop
or
push
hlt
dec
and
lcall
in
cmp
iret
and
leave
cmp
jle
imul
mov
add
or
mov
inc
aas
sub
out
ss
push
test
xlat
cs
sbb
nop
dec
add
pop
hlt
pop
xchg
mov
xlat
push
sub
mov
xchg
dec
imul
cmovno
pop
add
lcall
jns
inc
mov
pop
outsl
mov
jmp
pop
cld
jecxz
into
pop
ret
sub
and
data16
or
pop
and
mov
inc
push
pop
xchg
mov
sub
mov
stos
fdivrs
in
sub
mov
icebp
jmp
pop
inc
mov
or
and
adcl
jecxz
pop
inc
stos
sub
pop
stos
pop
xchg
loopne
arpl
or
sub
xorb
je
fisubrs
push
and
dec
push
fisttpl
fcomi
dec
xchg
sub
or
xor
pop
cmpb
mov
mov
movsl
push
add
outsb
or
cmc
jbe
mov
or
jg
mov
xchg
movsl
cmp
mov
pop
loopne
pushf
imul
mov
sub
push
jno
pop
outsb
or
cmp
pop
pusha
orl
hlt
addr16
and
add
xchg
push
pusha
or
xchg
ljmp
jmp
cld
jge
fsubrp
add
cli
fildl
pop
mov
lds
inc
js
cld
push
mov
push
sahf
fsubrl
push
scas
faddl
mov
jle
xchg
in
push
cwtl
rcll
sbb
inc
rol
dec
adc
pusha
rcll
pop
xchg
xchg
js
mov
mov
xchg
lock
mov
dec
dec
in
in
sbb
sbb
lret
xor
dec
and
rcrl
aam
stos
sub
ss
mov
daa
jecxz
dec
cltd
mov
movsb
push
xchg
add
pop
fwait
loope
xchg
sbbb
adc
push
sbb
mov
lahf
jmp
aad
cmp
out
ret
gs
nop
and
hlt
and
add
push
push
aaa
test
xor
mov
std
cli
mov
adc
push
cmp
push
jmp
mov
lds
or
xor
out
push
dec
mov
les
mov
ret
xor
outsl
out
leave
iret
xchg
adc
mov
gs
out
mov
in
movsl
notb
inc
and
mov
mov
mov
out
daa
cmp
or
mov
int3
sarb
cmc
xor
inc
xchg
xchg
js
or
mov
add
jnp
inc
dec
dec
scas
das
xor
adc
sub
xor
es
dec
addr16
push
mov
jae
js
rorl
sub
sub
ffreep
fs
movsb
push
repnz
jae
adc
das
fsubs
jne
xchg
cld
shll
in
push
xchg
repz
cmp
cmp
fmul
mov
nop
sbb
cmp
shrb
pop
int3
sub
push
lds
pop
jecxz
xchg
and
punpcklwd
xor
xor
mov
sti
outsb
mov
and
xchg
clc
mov
jnp
pop
mov
lret
ja
adc
mov
jecxz
pop
mov
fistpll
push
stos
mov
mov
mov
mov
push
push
mov
test
push
stos
in
ja
mov
push
cs
ss
push
dec
jmp
testb
push
dec
mov
sub
aad
xchg
test
push
mov
or
mov
cltd
mov
popf
popa
test
in
fisubs
iret
imul
fldt
mov
sub
xlat
mov
adc
aam
cmp
push
pop
or
inc
lahf
or
arpl
fwait
addr16
dec
test
dec
es
cmpsl
or
pop
in
or
pop
sbb
lahf
out
movsl
shrb
sahf
dec
push
subl
push
xor
pop
js
mov
int3
push
inc
fwait
imul
xchg
push
push
fmuls
adc
out
and
in
cmp
incl
jbe
subl
out
xchg
push
lahf
fwait
aas
in
sti
fldt
test
mov
stc
adc
arpl
dec
inc
test
ja
leave
fwait
pop
js
ficomps
fldenv
ret
pop
cmc
mov
push
mov
mov
xor
mov
dec
mov
testb
stos
lods
xchg
dec
xor
fs
inc
pop
sub
hlt
mov
rorl
cmc
jl
mov
sbb
clc
scas
shr
imul
neg
fbstp
stos
or
adc
jge
and
inc
popa
clc
lds
cmp
jmp
xlat
or
js
adc
add
add
dec
push
mov
mov
outsl
push
in
dec
clc
inc
lock
and
mov
mov
or
stos
cmpb
sarl
jb
xor
sub
push
outsb
inc
mov
mov
repnz
call
mov
idivl
adcl
adc
dec
cwtl
into
in
out
cmp
ss
mov
in
sar
das
in
dec
js
enter
je
icebp
pop
ret
pop
testl
gs
subb
fcoms
cmp
fsubs
mov
push
xor
jmp
hlt
jecxz
bound
and
adc
iret
shrb
pop
jne
sbb
and
pop
cmp
aam
xchg
cmc
push
mov
pop
mov
jecxz
xchg
inc
xor
loop
out
lea
bound
stos
mov
mov
mov
sbb
adc
pop
mov
push
jl
es
ret
pop
cmp
push
lea
bound
sarb
pop
and
jne
popf
or
cwtl
xchg
lods
pop
pusha
sbb
xor
and
and
inc
rcll
imull
insl
lods
movsb
fisttpl
sbb
into
add
movb
enter
mov
pushf
add
sub
fcmovne
rcrb
xchg
lods
test
xchg
idivw
stos
xor
js
cmp
xor
jle
or
cld
cmp
ds
scas
mov
rcll
and
lcall
cltd
pop
int3
out
dec
ret
mov
aam
loop
xor
jb
xor
sti
outsb
imul
lock
mov
lods
dec
or
pop
mov
std
or
sbbl
mov
jae
lock
imul
stos
xchg
jns
sti
push
inc
scas
and
in
bound
subl
jge
mov
sub
bound
xchg
bnd
lock
inc
sbb
cs
push
xchg
scas
test
mov
arpl
sub
xor
jle
jge
xchg
imul
lock
cli
push
mov
bnd
adc
cmp
sub
jmp
lea
jne
dec
in
jge
cmp
sub
ja
inc
leave
mov
push
jb
insl
and
lea
adc
dec
addb
ja
mov
adc
push
hlt
push
xchg
inc
out
sbb
sbb
mov
sub
in
cmpsl
adc
je
mov
daa
jecxz
mov
adc
xchg
outsb
xor
push
sub
xchg
mov
sbb
mov
sub
inc
outsb
and
jns
sub
xchg
xor
dec
push
inc
cli
xchg
inc
lods
data16
mov
aam
jno
imul
andb
imul
mov
fcomp
mov
push
mov
adc
out
ror
mulb
fildll
lds
cmc
mov
dec
jnp
mov
push
sbb
add
popf
js
fistl
sub
outsb
mov
fcmove
sbb
movsb
bound
and
ffree
leave
icebp
pop
loope
or
xor
nop
sbb
dec
or
lock
inc
xchg
inc
jnp
add
ja
mov
mov
fdiv
dec
rcll
outsl
dec
lds
or
fidivrl
push
xchg
repnz
aaa
enter
sarl
iret
je
push
addr16
mov
popf
ss
cmp
jl
popa
push
lds
pop
mov
pop
std
enter
cmp
sub
mov
cmpl
pop
scas
out
xor
inc
enter
inc
jns
add
push
add
sti
cmp
and
mov
add
xchg
cmp
pop
loop
adc
in
xchg
push
adc
jnp
inc
inc
cltd
ret
push
data16
mov
sub
xchg
jbe
add
dec
cmp
gs
jne
outsl
das
in
in
js,pn
in
sub
xor
hlt
fisubrl
test
subb
mov
inc
mov
test
jg
test
movb
movsb
cmpsl
lahf
stc
daa
mov
push
loope
aas
push
dec
or
ret
mov
jecxz
js
mov
incl
dec
dec
sub
cmp
pop
das
mov
push
inc
dec
pushf
scas
sub
jbe
mov
pop
pop
xor
pop
add
sub
push
sub
mov
pusha
push
loop
xchg
rcll
sbb
cs
jle
or
lret
mov
mov
adc
test
xchg
in
jecxz
mov
push
andb
push
js
mov
repnz
lret
int3
jae
inc
std
dec
pushf
push
cmp
movsb
cmpsl
mov
hlt
or
and
arpl
imul
dec
inc
sbb
je
int3
out
xchg
xor
jo
xchg
jg
push
cmpsl
std
shl
out
or
sub
int3
mov
sub
shrl
sub
leave
pop
add
idivb
xor
loopne
pop
shrb
push
out
icebp
repnz
dec
cli
mov
hlt
jns
mov
fs
loope
cmp
fildll
in
ja
fbld
xchg
jnp
push
xlat
sub
adc
ds
inc
loope
adcb
loope
outsb
mov
dec
push
aad
fstpt
cld
sub
cld
sub
jle
int
push
mov
mov
push
jp
mov
add
sbb
jo
mov
cwtl
mov
xchg
sub
inc
mov
add
dec
dec
push
cmp
pop
scas
and
dec
jge
jb
insl
fiaddl
mov
pushf
push
sub
push
xchg
into
push
or
lret
mov
cs
sarl
inc
dec
ja
mov
inc
movsb
cmpsb
lock
mov
xor
jp
xor
mov
outsl
out
pusha
inc
and
gs
loope
stos
add
dec
dec
inc
out
sbb
pop
mull
mov
imul
add
cli
mov
inc
xchg
push
jb
xor
add
jle
rorl
nop
pop
cmp
sbb
dec
cli
jg
mov
sahf
js
fstl
test
sti
and
xchg
dec
test
dec
xor
daa
xor
sbb
out
pop
adc
sbb
adc
loope
lds
xor
adc
gs
fidivrs
fwait
mov
cmp
add
movsb
movsl
and
adc
xchg
sbbb
jno
dec
pushf
xchg
mov
scas
scas
int3
inc
mov
inc
dec
add
mov
jl
sbb
ret
and
pop
jae
jecxz
ror
jmp
movsb
data16
mov
aam
xchg
cmp
and
ret
scas
imul
lret
lods
mov
xor
or
dec
mov
adc
sbb
cmpsl
out
int3
push
pop
decl
aad
arpl
in
or
push
pop
jne
cs
pop
popa
jl
fadds
je
movsl
fwait
mov
xor
pop
xor
or
mov
out
mov
lds
insl
or
repnz
in
jnp
cmp
je
jnp
pushf
js
mov
mov
es
iret
fs
sub
mov
aaa
ljmp
iret
mov
push
shrb
pushf
jmp
cltd
lret
test
or
push
lods
xchg
mov
jae
out
stos
add
jmp
adc
mov
inc
in
or
sbb
and
dec
jae
lret
sets
mov
jo
push
lds
mov
fldt
cmc
xor
out
lea
adc
hlt
icebp
and
inc
push
mov
pusha
test
in
ja
out
les
dec
or
dec
mull
mov
dec
add
lahf
je
inc
lret
fdivr
imul
imul
ja
jne
inc
idivb
enter
cs
add
sahf
call
out
xchg
je
pop
pop
adc
movsb
mov
leave
flds
xor
mov
shr
aad
daa
hlt
inc
jg
pop
fs
mov
out
ss
fimuls
push
xchg
mov
popf
pop
fs
mov
xchg
leave
add
je
in
pop
jmp
sbb
adc
notb
pop
and
imul
out
insl
sti
in
movsl
ljmp
call
inc
test
and
fs
loopne
add
pop
push
and
loope
in
lds
sbb
rcrb
or
insl
std
imul
jl
test
push
jmp
shlb
mov
adc
sub
lahf
xchg
and
mov
in
test
cmp
fisubs
mov
lret
fidivs
loope
pop
inc
push
adc
mov
cmp
loopne
imul
fsubs
sbb
pop
aaa
pop
out
ss
jns
mov
push
int
std
inc
jns
add
mov
cmpl
lret
lret
adc
push
fisttpll
loop
pop
jecxz
ds
xor
mov
jl
stos
idivb
ds
divl
into
sub
rcl
jne
lret
pop
push
sbb
pop
aaa
cli
jmp
in
mov
sbb
pop
sub
cmp
cli
pop
lock
mov
stc
cld
or
movsl
clc
push
jns
push
mov
out
or
push
sub
inc
push
sub
lret
mov
cmp
inc
dec
and
sbb
push
mov
roll
xor
jmp
adc
scas
lcall
add
je
orb
pushf
mov
cwtl
scas
mov
push
or
add
mov
arpl
outsl
xor
aam
push
stos
mov
es
fnstsw
sti
mov
push
hlt
adc
adc
sub
ss
je
sarb
cmc
cmp
add
roll
pop
leave
or
int3
dec
or
cmc
pop
mov
fsubrl
loop
push
inc
xor
jmp
stos
dec
pop
movsl
jo
dec
sbb
jno
xor
adc
enter
mov
lods
push
push
daa
mov
idiv
iret
sbb
jmp
jmp
cltd
jae
orb
xor
inc
les
outsb
sahf
call
int3
and
ja
push
daa
or
add
stc
insb
xor
push
sbb
or
xor
sarl
adc
sbb
lea
fwait
movsb
and
movsl
pop
inc
mov
mov
in
mov
push
adc
lret
out
adc
lock
popf
mov
les
cmp
cmp
lds
dec
mov
pop
xchg
ficoms
gs
and
inc
sbb
xchg
mov
add
ret
adc
int3
push
call
sbb
imul
rorl
adc
and
mov
and
cmpsl
testb
imul
cmp
mov
sbb
inc
xchg
xlat
das
cwtl
mov
push
or
jbe
push
call
imul
scas
mov
mov
add
mov
cltd
jns
cmp
mov
jl
inc
enter
in
cmp
loopne
repnz
mov
inc
pop
jne
xor
fldt
mov
jp
stos
nop
psadbw
and
cmp
push
mov
cmpsb
cmp
ficoml
sti
inc
inc
pushf
dec
adc
and
or
xchg
push
rorb
sbb
in
pop
mov
or
fnstenv
inc
xchg
push
mov
push
ja
xchg
iret
insl
xor
xorl
jle
je
adc
lret
xchg
xchg
scas
add
mov
cmp
decl
aam
sub
in
es
test
inc
out
in
rcll
mov
loop
and
jo
cld
test
in
sub
sbb
jnp
sub
inc
insb
xchg
das
mov
cmp
mov
lcall
xchg
mov
int
lret
rolb
rcrb
lds
pop
scas
dec
outsl
mov
imul
ret
es
imul
pusha
insl
sub
imul
enter
xor
orl
imul
or
add
int
movsb
fiadds
or
sub
mov
pushf
addr16
icebp
mov
cmpsb
adc
and
pop
aam
mov
iret
insb
cmp
cmp
jno
jge
pusha
push
add
lds
adc
jnp
inc
mov
and
into
mov
sub
out
jbe
pop
mov
or
jno
dec
lock
mov
adc
stos
inc
das
fisubrs
test
mov
adc
adc
insb
je
dec
vpsraw
in
rclb
cs
out
pop
cmp
in
inc
or
sub
sub
pop
cmpsb
mov
pop
dec
jbe
adc
jg
das
push
fnstenv
inc
jnp
test
jns
cmc
adc
push
aad
nop
xchg
bound
lret
xchg
and
test
mov
jbe
or
and
add
movsl
sub
das
dec
ret
mov
pushf
or
xlat
push
std
jno
xchg
add
out
enter
rclb
pop
or
mov
jb
cmpsl
mov
add
stos
xchg
test
push
mov
sbb
cli
jns
mov
into
out
sarl
jecxz
out
mov
pusha
aaa
lods
mov
mov
jns
mov
and
sub
imul
stos
add
sarl
out
popa
push
das
cltd
adc
fcoms
cwtl
or
je
or
dec
loop
mov
mov
pop
je
mov
mov
popa
mull
cwtl
or
loop
pop
sub
mov
mov
sbb
and
pop
cs
add
fsubr
inc
dec
mov
mov
ds
cmpsb
bound
ljmp
push
fs
lock
loope
push
sub
add
cmp
mov
dec
rcr
push
jb
iret
in
and
nop
pop
mov
imul
or
bound
dec
sub
jo
jmp
in
push
jl
pop
stc
sar
add
dec
inc
sub
xor
mov
fisubl
stc
jnp
sti
adc
jns
aam
cwtl
jle
xor
pop
cld
mov
das
pop
mov
mov
mov
sahf
or
fadd
dec
or
shrl
jmp
adc
scas
mov
dec
aaa
mov
mov
imul
mov
xor
mov
lods
mov
mov
loopne
dec
and
fisttps
push
xchg
jns
es
pop
ret
jne
jno
fcomps
mov
xor
fildll
clc
xchg
lcall
mov
push
stos
paddq
out
hlt
add
xlat
lret
mov
jp
mov
popf
jae
sbb
xchg
jns
outsl
pop
and
mov
ss
add
test
xchg
xor
dec
and
xchg
stos
movsl
call
and
popa
adc
jl
sub
test
inc
arpl
xor
leave
mov
sub
jo
push
out
aas
jge
and
mov
call
jge
sub
add
sub
mov
in
jno
adc
inc
movsb
inc
pop
dec
push
aas
fstp
nop
cmc
popa
xorl
cmc
ret
xchg
out
insl
push
loopne
idivl
mov
mov
xchg
outsb
orb
xchg
ds
cmp
dec
sbb
lods
or
push
sub
cmp
mov
mov
xchg
jp
int3
push
js
ss
xor
mov
sub
ret
lret
loope
psrad
enter
sbb
ret
cmpsl
and
mov
dec
adc
push
xorb
gs
or
xor
mov
adc
jg
aam
sbb
jl
jno
or
daa
out
xor
loop
pop
inc
sti
ret
xor
pop
and
shl
int3
xorb
jmp
in
and
imul
repz
pusha
pop
xor
xor
outsb
sbb
fcmove
mov
inc
xor
out
xor
outsl
and
out
jnp
push
or
mov
fs
fstp
loop
sbbl
stc
fs
in
fildl
mov
std
xchg
xchg
out
xchg
jecxz
cs
test
or
jmp
mov
leave
adc
loope
lods
les
pop
jmp
mov
xchg
cmp
ds
jne
jle
cs
and
push
and
int
pop
push
xor
pushf
repnz
jle
sbbl
sbb
mov
mov
inc
jo
mov
neg
or
enter
adc
fs
es
or
mov
mov
jbe
flds
push
push
xchg
pop
xlat
cmpb
add
out
shlb
lods
and
fdivrp
jb
and
pusha
add
leave
lea
add
popa
mov
ds
pop
xchg
ret
leave
ret
stos
xchg
stc
cmp
lcall
imull
or
in
adc
and
popf
imul
mov
lret
lahf
pop
mov
ret
test
lds
or
xchg
dec
aas
lea
or
dec
or
and
and
xor
mov
insl
enter
cmpl
cltd
push
lds
inc
stos
push
icebp
cmc
loopne
sti
pop
insb
mov
jb
cli
in
stos
sub
aas
and
mov
cmpb
or
jg
aam
scas
inc
jl
adc
js
or
frstors
pushf
lcall
jle
inc
dec
sub
popa
mov
push
in
btc
inc
nop
fwait
pushf
dec
mov
pushf
js
sahf
push
shrb
cmp
out
jnp
das
shlb
dec
mov
call
lcall
sub
push
fs
and
pop
inc
loopne
adc
push
add
xor
add
xor
leave
test
imull
and
insb
loop
jno
or
xchg
mov
cmp
add
mov
push
loop
sub
dec
test
movsb
add
sti
aaa
sub
mov
pusha
push
adc
push
enter
fisubs
cltd
bnd
jmp
fimuls
lea
ljmp
push
sub
cwtl
sub
pop
scas
jecxz
push
jg
cld
push
cmp
pop
lods
out
adc
aad
stc
sbb
mov
dec
repz
stc
sbb
or
xor
mov
xorl
in
adc
jae
ljmp
leave
ret
mov
pop
incl
jnp
mov
pop
mov
xchg
or
std
lods
ljmp
insb
call
ret
push
xchg
xchg
and
mov
mov
xchg
cli
je
jle
and
sti
xchg
jmp
aam
sub
ficomps
jl
sub
xchg
inc
and
inc
jl
push
jg
gs
fcom
aam
in
mov
cmp
ja
leave
jb
test
xor
push
enter
jp
test
ret
repz
xor
sti
shr
filds
test
out
mov
ja
add
push
outsb
sbb
mov
mov
fsubrp
sbb
dec
push
sbb
cmp
jecxz
hlt
cmp
arpl
jo
pop
cmp
movsb
add
stos
jecxz
lcall
inc
loop
in
mov
mov
xor
lods
mov
ss
stos
int
push
pop
xchg
pop
clc
mov
pop
xchg
jo
shrl
scas
sbb
scas
add
fwait
jb
push
add
mov
jbe
fbstp
int3
cmp
out
sbbb
mov
mov
push
movl
fisttpll
xchg
and
add
inc
es
test
sub
testl
loop
sub
dec
movsl
pop
push
rorb
xchg
and
addb
mov
and
icebp
dec
inc
sbb
shll
xor
mov
cmp
fistpll
cmpsl
adc
out
fs
adc
imul
jo
test
addb
push
jne
sbb
sarb
mov
add
lds
add
dec
cmp
je
out
cmp
sbb
fwait
mov
out
xor
or
mov
movsl
fisttpll
jno
in
scas
shr
testb
push
inc
lahf
mov
icebp
insl
mov
jp
ljmp
in
pcmpeqb
aam
sub
or
xor
imul
mov
and
sbb
int
jp
stos
lahf
pop
lods
pop
rcll
xor
sahf
inc
out
insb
inc
add
sbb
sbb
mov
daa
xchg
xchg
sbb
cld
xor
subb
jmp
pop
jns
rorl
in
mov
test
pop
jg
sbb
xlat
sbb
mov
dec
sahf
and
call
std
stos
dec
cs
jge
and
cmc
es
jo
xorl
insb
xchg
and
xchg
push
add
add
out
lock
push
push
pop
mov
and
adc
test
xor
mov
enter
loopne
push
jl
cmpl
jns
int3
mov
or
dec
out
cld
pop
fadds
jle
xor
cmp
dec
jg
arpl
iret
orb
sti
adc
xor
push
adcb
sub
shll
loope
sub
aam
mov
shrb
test
or
aaa
aam
push
jb
pop
in
pop
cmp
testl
dec
addb
call
inc
pop
cmc
xorb
pop
inc
cmpsl
sub
mov
leave
or
cmp
xchg
add
mov
inc
jg
in
aas
adc
bound
dec
dec
and
add
loop
sbb
add
scas
or
das
jecxz
je
stc
or
call
fs
push
es
mov
inc
push
insl
sub
test
call
xor
addr16
xchg
into
dec
and
testl
or
ret
ja
mov
fsubrl
or
adc
or
xor
sbb
push
jns
mov
scas
xchg
lods
pop
inc
xchg
arpl
addb
adc
repnz
icebp
shrb
dec
sub
xor
xchg
negb
cld
xor
pop
inc
mov
repz
in
in
jmp
adc
out
sbb
les
lret
or
mov
imul
mov
pop
pop
rolb
pop
scas
pushf
lcall
sbb
adc
outsb
dec
pslld
scas
aad
xor
adc
cmp
sub
lods
aam
sbb
pop
imul
inc
test
sbb
lock
jecxz
in
mov
or
sub
ret
lcall
jae
test
adc
dec
cltd
xor
sub
mul
xchg
adcb
sub
fwait
jmp
jno
or
pop
loopne
imul
mov
insb
cwtl
push
iret
xchg
loop
cmp
push
and
adc
jo
mov
popa
xchg
mov
ljmp
out
mov
fwait
mov
dec
fsubs
loope
roll
xor
cmp
and
lret
andl
movsb
nop
jecxz
mov
mov
pop
add
or
add
xor
jnp
repnz
sub
outsl
cmp
jmp
and
xor
sarl
unpcklps
jb
cmpsl
test
divb
jns
ficomps
orb
out
jg
dec
imul
mulb
fcmovb
mov
cltd
fsubr
mov
aas
sbbl
iret
cmpsb
and
daa
push
pop
mov
loopne
ds
popf
out
lret
xchg
setne
stos
out
lock
stc
xchg
or
and
dec
shll
mov
jg
outsl
inc
into
inc
and
dec
popf
rol
mov
mov
lods
fwait
mov
pop
add
jne
jecxz
dec
dec
cmp
add
dec
xchg
sbb
cmp
les
jmp
lret
insb
add
cli
gs
xlat
out
out
pop
jmp
mov
int3
dec
jbe
ret
or
jo
idivb
mov
pop
lods
int3
mov
into
ja
push
push
decb
mov
cmp
adc
add
jb
mov
popf
push
ret
dec
movb
dec
gs
test
jg
push
push
addr16
ds
cmp
cmc
sar
in
mov
pop
outsb
clc
adc
xchg
mov
xor
and
popf
rorb
daa
inc
mov
gs
aad
and
adc
adc
inc
scas
push
xchg
stos
out
cmp
outsl
jo
lods
scas
cmpsl
sub
fwait
push
xor
mov
pop
pop
cs
cmp
bound
fdivp
dec
and
es
shrl
or
mov
loopne
jmp
mov
negb
adc
pop
clc
shrl
nop
mov
mov
call
mov
pop
push
subl
stos
iret
js
cmc
test
icebp
jge
lea
push
stc
mov
jl
cmpl
mov
push
jns
idivl
stos
das
test
xchg
cmpl
adcl
cli
pop
in
es
mov
or
sbb
popf
push
insb
bswap
cmp
lahf
cmp
aas
imul
xor
test
sahf
sub
loop
jp,pt
or
push
mov
jne
pusha
xchg
hlt
aas
nop
imull
adc
and
movsl
xor
notb
pusha
hlt
call
pop
sub
in
jo
jbe
in
sub
mov
mov
fmuls
dec
das
jl
mov
pop
and
inc
mov
test
dec
lahf
xchg
loop
mov
test
test
jl
jbe
pop
fsub
cmp
ret
cs
idivl
pop
clc
lock
sub
sahf
inc
or
inc
loop
jge
add
outsl
fistps
mov
shrb
mov
ret
or
shll
hlt
pushf
fwait
xor
ja
stc
dec
std
cmp
inc
imul
lahf
out
jno
mov
mov
popa
pop
bound
inc
mov
lds
outsl
ljmp
shrb
imul
sbb
xor
jmp
pop
out
arpl
jb
shlb
push
mov
mov
movsl
dec
mov
mov
xor
inc
mov
subl
enter
mov
faddl
adc
iret
lahf
loop
or
push
jl
add
daa
mov
cmp
mul
add
lods
push
push
sub
stos
and
test
push
and
aad
cli
adc
mov
lcall
mov
ret
addr16
rcll
inc
loopne
dec
addl
popl
into
shl
jb
cmc
or
aam
ja
mov
mov
push
xor
pop
lods
sbb
hlt
sbbb
jbe
ss
int
adc
arpl
push
insb
ficomps
mov
adc
jl
jge
dec
sub
mov
cmp
adc
pop
cwtl
and
sbb
jo
sub
xchg
out
repz
subb
xchg
cmp
push
test
fsubs
jecxz
jo
push
bound
sub
test
mov
xor
stos
jb
add
add
jo
mov
dec
sub
lret
test
imul
dec
mov
je
adc
jl
lret
push
es
lock
dec
mov
jg
pop
mov
sar
or
mov
jns
mov
cmpsl
xchg
jo
or
lods
int3
push
pop
and
xor
dec
jge
loope
dec
lea
jbe
adc
out
setl
popf
mov
jns
lcall
mov
mov
inc
stos
ja
stos
div
push
dec
xchg
in
hlt
in
cwtl
cmp
cs
jle
decl
push
ss
push
add
test
rclb
inc
xchg
dec
in
ficoml
inc
mov
jge
leave
pop
imul
and
mov
outsl
and
jge
and
ret
data16
xor
lea
jle
popa
sub
or
mov
mov
xchg
cmp
adc
maskmovq
xchg
out
xor
mov
bound
loopne
aad
daa
fiadds
and
jb
xchg
pop
out
sbb
or
adc
cmp
mov
xchg
jecxz
icebp
and
cltd
xor
icebp
push
cmp
ret
mov
mov
jle
movsl
add
jge
jl
jns
std
xor
dec
cmp
out
inc
iret
fimuls
push
imul
mov
and
dec
lods
cmp
pop
mov
js
lock
stc
or
iret
mov
mov
dec
hlt
jo
add
cmp
cs
les
jmp
cmp
push
icebp
jmp
mov
adc
repnz
dec
mov
push
subb
push
and
repnz
rorl
pop
cmp
std
cmp
in
mov
ror
pop
sub
mov
mov
stos
movsb
jmp
xor
lcall
repz
incl
ror
out
fldt
adc
mov
mov
mov
or
push
popf
ss
jns
push
ret
inc
pop
jp
mov
aam
inc
setp
cmp
bound
xor
lret
aaa
xlat
jge
sbb
xor
fdivp
jl
cmp
icebp
fldt
lcall
mov
icebp
rclb
mov
push
out
insb
xchg
fcoms
fcmovne
sbb
ss
idivb
cwtl
mov
lds
and
rcrb
fwait
jge
lret
adc
loop
cli
adc
or
add
cld
cmp
xor
xor
jl
movsb
cmpsb
pusha
int
xchg
ja
mov
xchg
add
inc
out
pop
fstl
cmpsl
addr16
cpuid
mov
mov
int3
inc
out
mov
or
loopne
sahf
and
repnz
dec
ja
and
loope
rorb
xor
jbe,pn
sarl
dec
inc
aam
xchg
xchg
push
mov
xor
test
lahf
mov
stc
mov
sub
inc
je
int
xchg
cmp
adc
incl
sbb
xor
jmp
xor
push
jb
lock
push
push
testb
push
stos
notb
aaa
mov
leave
jle
decb
jns
out
pop
dec
out
mov
add
sub
dec
insl
mov
push
enter
aaa
fdivl
xchg
push
pop
mov
rcrl
fnstsw
lahf
pusha
cmpsb
inc
dec
push
dec
or
cmp
call
mov
xchg
mov
popa
fidivs
xor
repz
cmpsb
mov
push
ja
push
insb
test
or
cmpsb
xor
and
adc
test
popa
push
pop
int
in
cmpsl
cmp
cmp
xor
and
sahf
cmp
push
mov
pusha
and
mov
je
addr16
aaa
stos
cli
es
mov
imul
xlat
xlat
lret
fldcw
inc
lahf
inc
mov
std
jae
int3
fnstsw
cmpsl
cli
mov
dec
sti
mov
cs
sbbl
mov
lret
sahf
icebp
xor
call
sub
lods
inc
or
add
jecxz
lds
xchg
cli
ljmp
pop
dec
lock
jne
push
mov
test
sbb
fisubrs
pop
add
imul
jmp
xor
int
cwtl
xchg
shll
mov
mov
sbb
xchg
call
enter
mov
and
push
jns
mov
inc
movsl
lahf
jae
add
insl
xchg
imul
lcall
lods
jno
mov
test
or
add
inc
cmp
ret
out
sbb
rol
xor
sahf
jb
xor
in
enter
mov
cmp
and
pop
push
lods
test
jl
mov
sbb
or
cwtl
cli
sub
pop
or
inc
decb
repnz
xchg
enter
insb
cmp
stc
iret
dec
xchg
sub
xchg
sub
and
fwait
in
sub
push
xor
into
sbb
mov
adc
jl
mov
mov
call
popa
jl
adc
fiaddl
repz
mov
shr
add
in
ficoml
or
fldenv
adc
pop
mov
mov
popf
out
jge
mov
roll
mov
stc
mov
roll
stos
or
and
shrb
rcll
mov
xchg
jne
fisubrl
inc
bound
out
mov
pusha
mov
sub
enter
mov
inc
sar
cmp
xlat
adc
imul
xchg
mov
mov
sbb
fisttpll
popf
aam
jl
sbb
mov
sub
out
or
mov
sub
or
push
adc
mov
mov
and
and
out
test
mov
movsl
push
mov
pop
add
test
mov
jmp
inc
test
sbb
imul
pusha
shll
cmpsb
dec
xchg
or
add
aas
pop
mov
inc
es
cwtl
pop
pop
flds
leave
inc
outsb
stc
ds
fmul
dec
in
adcl
sub
outsl
lods
daa
cmp
mov
ja
mov
jnp
or
adc
lds
sarl
ljmp
mov
adc
test
mov
fnstenv
sbb
xchg
scas
jge,pn
pop
dec
in
push
jge
dec
movl
adc
fcmovbe
jp
push
add
xor
hlt
xor
das
movsb
das
idiv
jge
lcall
sbb
xor
out
adc
jecxz
lret
or
dec
push
lret
out
pusha
scas
adc
adc
lret
mov
mov
jo
fistpl
mov
out
xor
cmc
sahf
jb
lock
sbb
nop
dec
xchg
pop
jecxz,pt
mov
dec
mov
mov
xchg
fisubs
sbb
adc
int3
repnz
lea
ljmp
adc
insl
jl
xor
jmp
leave
shl
repnz
inc
ss
mov
sub
mov
aaa
lock
cltd
stos
add
adc
dec
into
lock
push
movsb
jae
cwtl
std
mov
mov
adc
fmuls
sub
mov
cs
in
or
jg
push
dec
ss
jecxz
sbb
xchg
push
dec
pop
xor
call
das
dec
pop
xor
jno
ljmp
repz
pop
add
inc
leavew
mov
pop
add
push
out
push
cs
lods
pop
je
test
imul
lret
fstpl
jbe
and
mov
std
cmp
insb
aam
lock
pop
test
inc
mov
cmp
lret
and
inc
add
jg
in
xchg
rcrb
mov
ret
xchg
cli
fstps
and
xchg
xchg
inc
je
mov
and
push
add
fists
mov
pop
daa
insb
mov
push
movsb
iret
adc
insl
inc
cld
sbb
xchg
fildll
mov
push
mov
xor
jo
push
out
cmp
loopne
aaa
mov
push
xchg
fiadds
xor
cmc
rcll
insb
in
in
gs
call
or
lret
push
sbb
std
xchg
xor
bound
addr16
es
popa
adc
cmc
xchg
pop
or
jge
outsb
xor
add
dec
lea
xchg
xorl
sti
mov
es
scas
gs
out
into
iret
or
aas
mov
lods
outsb
cmpsb
insb
push
std
mov
movsb
mov
dec
push
ret
popf
xor
sbb
scas
and
in
movsl
stos
inc
inc
lret
fwait
cwtl
mov
int3
popf
int
addr16
int
loope
in
cs
push
pop
jb
std
ja
pop
adc
or
sub
out
pushf
js
and
push
mov
ret
xor
fwait
call
mov
xlat
mov
lret
es
or
add
cmp
adc
push
jnp
imul
andps
mov
decl
xchg
scas
jns
sahf
inc
add
sbb
xlat
lock
jno
outsb
pop
ds
mov
push
ret
cltd
xchg
gs
sub
iret
or
sarb
xchg
lods
mov
dec
in
popa
cmpb
inc
in
jp
sub
xor
sub
cld
fdivr
add
pushf
mov
aas
lcall
mov
fists
int
arpl
pop
or
and
xchg
cld
scas
aad
or
in
or
mov
sub
lcall
jae
jge
into
mov
cmpsl
aam
pop
inc
jmp
push
les
shrl
cltd
xor
cmp
cwtl
adc
xchg
outsb
adc
mov
push
in
inc
sub
jg
adc
pusha
into
cwtl
mov
addb
rorl
pop
ja
push
out
out
ficoms
cmc
mov
psadbw
ss
int
mov
or
into
out
movsb
inc
or
ds
or
jae
sbb
arpl
adc
push
sub
hlt
xor
cltd
cmp
cmpsl
jbe
mov
mov
mov
add
repz
inc
test
jmp
jp
mov
add
shlb
clc
sub
sub
sti
arpl
cmpsl
aaa
roll
mov
cwtl
mov
add
mov
in
pop
add
pushf
or
in
sub
fisubrs
jae
shl
sbb
jg
mov
adc
jnp
arpl
das
fs
xchg
fldcw
dec
xlat
psrld
mov
adc
jno
dec
push
sbb
leave
xor
and
cmp
jo
mov
xor
push
lahf
sbb
jp
push
cli
push
test
ljmp
outsb
cmp
aam
lea
push
imul
loopne
movups
mov
fimull
and
into
aad
pusha
sbb
mov
adc
cmp
movsb
pop
enter
decl
mov
testl
jle
fs
icebp
pop
stos
movsl
push
int
inc
imul
scas
fxch
aam
data16
or
inc
test
pop
fwait
xor
mov
gs
sarl
out
imul
or
and
dec
setne
add
icebp
das
lahf
push
push
inc
push
xchg
popf
arpl
sub
sbb
sbb
push
add
mov
jae
inc
hlt
pop
push
cwtl
scas
bound
ljmp
sub
jae
pop
mov
jmp
sbb
scas
jns
lcall
dec
pushf
xlat
mov
in
inc
sub
ss
jecxz
bound
sahf
jo
imul
mov
jbe
mov
xchg
sbb
jo
stos
cld
je
mov
fildl
push
mov
clc
inc
stos
mov
das
push
add
mov
jae
rcl
jle
insb
add
cli
stos
mov
daa
pusha
sub
jge
iret
rolb
add
scas
inc
rorb
dec
cli
add
adc
int
xchg
loope
add
mov
cmp
outsl
xor
pop
push
inc
mov
je
pop
add
add
repz
xchg
test
out
test
sbb
push
dec
xchg
sbb
push
push
fildl
popa
hlt
movsl
aad
cwtl
daa
out
lea
ret
faddp
call
data16
das
mov
pop
xor
pop
adc
jb
add
test
dec
int
pop
mov
pushf
add
in
or
jg
and
dec
fwait
add
pop
mov
mull
xor
das
add
fdivr
js
cwtl
hlt
mov
add
lahf
dec
clc
push
aad
inc
push
inc
fs
fisttps
mov
dec
xor
das
test
sbbb
mov
imul
outsb
mov
roll
outsb
dec
out
inc
push
mov
pop
lret
flds
daa
out
sub
adcb
mov
dec
test
in
mov
pop
std
orl
insl
jne
std
xor
pop
fst
inc
sub
add
out
into
mov
test
xor
xor
mov
enter
repz
push
pop
mov
sub
sbb
fcomi
scas
pop
mov
enter
stc
mov
inc
push
dec
pop
sbb
and
lea
ret
push
mov
cmp
xchg
int
dec
jl
cmpl
lret
xchg
cmpsb
xor
loopne
es
sub
jmp
pop
dec
test
lahf
out
mov
mov
rcl
std
inc
in
jo
mov
cmp
pop
or
jl
jb
mov
cmp
push
out
jge
xchg
mov
jmp
cmp
lods
and
add
aam
push
scas
push
jge
je
inc
xor
xor
addr16
outsb
test
inc
jns
stos
xor
cwtl
fdivr
fimuls
dec
mov
cli
lahf
lret
mov
lds
ret
and
cmpsb
aad
in
shll
mov
stc
clc
pushf
adc
cltd
xchg
dec
ret
aas
fnstenv
xor
mov
lahf
mov
std
lcall
or
xchg
mov
or
adc
inc
inc
inc
sbb
imull
dec
and
mov
rcrb
jae
aaa
mov
hlt
jmp
adc
in
fcomps
jge
dec
cld
loope
push
add
mov
push
jge
in
scas
or
cmp
add
into
stos
loop
stos
push
mov
push
cmpsb
pop
rcrl
pop
cmp
out
sbb
push
add
pop
mov
ss
dec
sbb
popf
iret
inc
add
push
jno
jle
dec
adc
enter
sub
mov
adc
xor
sbb
cltd
cmp
fwait
and
adc
cltd
jnp
jno
add
jg
subb
cmpsl
push
inc
out
cmpsb
test
xchg
jp
and
faddl
in
cli
mov
fwait
xor
jl
inc
int3
popf
je,pn
pop
outsl
fdivrl
lahf
sbb
add
adc
lret
sbb
pmaxsw
xchg
movsl
out
xchg
sbb
jge
in
cmpsl
and
dec
mov
iret
mov
inc
sbb
int3
rcrl
or
lods
jne
inc
mov
pop
jp
stos
inc
mov
out
icebp
lret
nop
xchg
nop
inc
jne
mov
popf
jnp
aam
mov
push
pop
test
push
bound
and
adc
test
lcall
adc
jne
dec
filds
ss
sub
add
out
jl
fldt
pop
pop
daa
cwtl
sbb
ret
jmp
xlat
mov
bound
mov
nop
iret
and
ret
sbb
cmc
or
jnp
cmpsb
mov
sbb
lods
in
mov
fsubs
data16
jnp
cmp
push
bound
mov
mov
inc
xor
jae
mov
jb
add
sbbb
mov
inc
push
cmp
jp
clc
fidivrs
and
std
jo
push
int
les
or
adc
out
or
pop
cmpsb
scas
adc
fadds
cmp
test
iret
mov
mov
xor
pop
push
mov
jge
jne
cwtl
push
mov
xchg
pop
xchg
pop
int
ljmp
sti
pop
in
jae
mov
test
inc
negl
dec
mov
mov
das
xor
add
addb
out
add
call
test
mov
outsl
cld
xor
sbb
xor
dec
dec
jl
incb
push
icebp
out
sub
adc
push
out
das
in
xchg
mov
imul
sti
xor
dec
pop
sbbl
test
sub
adc
push
adc
mov
mov
or
mov
cmpsb
out
aaa
xorl
adc
jno
insb
xor
pminsw
into
mov
cmpsl
iret
mov
add
sbb
cmc
jp
test
dec
test
pop
in
push
sbb
jmp
in
xchg
push
pusha
pop
push
stos
out
testb
cld
fisttps
frstor
cmp
aaa
loope
mov
aam
pushf
jmp
mov
out
aaa
sbb
bound
fdivr
or
add
xor
leave
and
outsb
xlat
or
gs
push
push
lret
ficomps
data16
out
fdiv
daa
and
xor
into
push
lret
pop
movsb
mov
pop
mov
push
cmpsb
and
fisubrs
mov
and
lret
les
jmp
lea
cmpsb
int3
inc
scas
bound
pop
je
jns
cmp
add
fs
lods
pop
je
sub
add
push
mov
fistpl
jmp
mov
xchg
mov
xchg
aas
aaa
decb
aam
pop
and
add
ret
pop
into
loope
inc
sub
add
push
cmp
out
adc
jno
roll
xor
enter
jg
fldl
and
inc
lods
pop
cmp
xchg
pop
rcll
jmp
dec
push
fwait
out
or
lods
sbbl
sbb
jmp
mov
jo
cmc
pop
mov
shll
lods
das
nop
pop
sti
xchg
lret
cli
xchg
cld
rcrb
int3
test
push
and
aad
bound
popa
adc
pop
sarl
inc
jo
inc
call
or
push
push
subl
les
xchg
dec
fadd
aaa
ret
dec
mov
cmp
mov
mov
enter
outsl
or
sub
shrl
add
push
rorb
cmpsb
enter
mov
in
stc
dec
enter
inc
add
sub
popf
aaa
jae
inc
dec
add
push
data16
nopl
cmp
scas
outsb
ret
pop
sub
and
mov
cs
or
xchg
mov
fimuls
cmp
mov
push
lret
aaa
mov
mov
adc
clc
dec
ja
outsb
test
mov
es
lahf
pop
jmp
lahf
cli
push
xchg
or
imul
sub
sarl
inc
push
jp
jb
nop
sbb
lcall
mov
mov
cwtl
movsl
mov
push
cli
lods
shl
adc
jnp
inc
popa
sub
rcll
jmp
cmovns
scas
xor
jecxz
jmp
mov
and
dec
xor
insl
cmpsb
xlat
test
mov
popf
ret
fxtract
js
mov
ret
hlt
add
sbb
mov
push
outsl
push
pop
xor
pop
pop
mov
cmp
cmc
in
faddp
sbb
call
cs
or
pushf
or
add
and
xchg
xchg
popf
popa
movsb
cmpsb
insb
cmc
cli
sbb
or
mov
out
in
adc
fidivrl
sub
mov
stc
jnp
lcall
mov
int3
insl
push
fists
test
shl
ss
pop
pop
cmp
adc
sub
lock
out
xchg
testl
add
xor
cwtl
daa
jmp
mov
xor
in
fldenv
sub
movsl
data16
gs
js
mov
mov
loop
mov
sbb
fists
aaa
pusha
aaa
push
loop
stos
and
xchg
mov
leave
mov
jns
in
pop
je
aam
call
stos
cli
fimuls
jmp
imul
loop
movsb
cwtl
dec
inc
std
cwtl
pop
addb
inc
dec
mov
adc
push
sub
rorb
out
mov
ds
mov
popw
add
jae
pop
push
es
jne
dec
adc
push
aad
sbb
mov
mov
sub
out
mov
repz
js
xor
mov
out
xor
xchg
xchg
call
and
jmp
adc
nop
jp
mov
jno
and
fwait
mov
fstl
in
test
pop
loop
leave
sbb
decw
lock
addr16
adc
mov
mov
aad
ja
add
pop
fcmovb
je
inc
lcall
scas
cmp
xor
lcall
pusha
ss
lret
imulb
int
inc
hlt
test
popf
popa
cli
rorb
mov
mov
call
int3
in
stc
pop
addr16
xor
out
sar
or
cld
fs
mov
rcll
out
int3
in
nop
inc
movsl
test
imul
je
dec
movsbl
dec
cmp
lods
in
out
push
mov
inc
sti
push
mov
adc
inc
fdivp
push
xchg
je
sti
test
push
call
pusha
adc
ds
lcall
push
pop
sbbb
mov
push
adcl
pop
cmp
xchg
movsb
inc
clc
push
dec
xchg
rcl
out
stc
xchg
movsb
jno
fisubs
aam
int3
and
mov
jecxz
mov
and
out
ds
popa
mov
jns
cmp
leave
pop
imul
jg
stos
stos
scas
cmpsb
addr16
orl
dec
lods
jbe
mov
out
and
ljmp
adc
add
arpl
sbb
mov
loopne
subl
lea
adc
roll
mov
outsb
ret
xchg
fisttps
movsl
fimull
sbbb
xorl
push
ja
inc
add
adc
and
loope
popf
test
pop
orl
fbld
popf
das
scas
sbb
inc
iret
jmp
xchg
clc
inc
and
cmp
sub
aam
dec
rorl
jle
xchg
movsl
lods
movsl
insl
cli
test
arpl
cmpsb
leave
in
or
adc
gs
mov
adc
pop
sbb
aam
dec
in
jo
inc
fs
int
leave
js
xlat
icebp
jecxz
rcrb
sub
orl
dec
sbb
lea
inc
cmpsb
test
mov
lret
cmpsb
mov
clc
movsl
aad
insb
nop
fstl
sub
lret
sbb
jae
test
or
dec
dec
subl
dec
pop
fmulp
and
inc
ficoms
cmp
mov
icebp
mov
sbb
shl
std
clc
lret
sub
mov
fwait
pop
sbb
and
lret
mov
mov
push
je
pop
mov
fmul
mov
fs
cld
xchg
xchg
repnz
sbb
cmp
sub
or
shl
fs
push
fisttps
add
adc
mov
lcall
inc
fstpt
add
mov
pop
cli
int
cmp
jae
pop
and
ds
rorb
mov
sbb
push
mov
jmp
js
fisubs
inc
cmpsl
je
ret
lds
and
pop
pop
sub
xchg
adc
xorl
jbe
lret
push
and
bound
loopne
inc
push
repz
jbe
pop
and
cmpsb
int3
dec
push
aad
lcall
cli
inc
push
cs
mov
xchg
cmp
rorl
lret
mov
push
les
fbld
dec
sub
nop
fcoml
sarb
sbb
push
andb
jbe
repz
xor
push
aad
xchg
add
push
mov
inc
mov
sti
mov
pop
fucom
dec
adc
lock
insb
push
fadds
jns
ja
inc
dec
mov
mov
inc
fcomp
cmp
jns
and
cmpsl
inc
sub
mov
jne
sbb
inc
lcall
outsb
push
adc
inc
pop
mov
jb
xor
add
lret
mov
es
inc
cmpsl
notb
aaa
lret
sub
mov
sar
jae
sub
cli
sub
popa
js
loope
loop
push
mov
in
out
push
fidivrs
out
push
ds
xchg
add
test
pop
das
int
adc
pop
xchg
test
sbb
rcrl
jns
xchg
sbb
xchg
mov
push
fadd
arpl
icebp
inc
fsub
inc
fsubl
stos
rorl
in
bound
sbb
stc
ret
pusha
int
mov
xchg
xchg
xor
jne
lds
lods
repnz
sbb
es
int
lock
in
rol
sahf
and
sbb
jnp
push
shrb
inc
xlat
adc
repz
in
in
jg
adc
loopne
push
mov
push
mov
rcl
or
gs
bsf
mov
xlat
jo
fcmovbe
call
or
mov
lods
inc
stos
in
out
imul
adc
ret
inc
dec
mov
stos
lret
cmp
sbb
dec
outsl
pop
cmp
pop
insl
loope
aam
and
lods
int3
mov
mov
add
pop
add
cmc
dec
pop
es
andl
cmpsl
cmp
lea
jg
sub
lret
lea
sbb
and
lds
enter
enter
mov
stos
ficoms
add
out
mov
mov
mov
dec
pop
mov
cmpsl
sub
mov
xchg
scas
add
movsb
nop
pop
filds
sti
in
repnz
cmp
insb
aad
sti
mov
or
fimuls
mov
test
data16
push
pusha
das
mov
mov
clc
sbb
pop
idivl
sub
test
mov
lods
ret
add
repnz
lret
mov
cmp
xchg
gs
popf
ds
mov
dec
adc
jmp
hlt
mov
pop
mov
sahf
inc
push
inc
div
mov
ret
rorb
mov
adcb
cmp
pop
test
mov
repnz
push
movsl
cwtl
fisttpl
out
rorl
pushf
int3
test
add
iret
fists
and
divl
mov
pmaxsw
mov
in
sbb
cmpb
int3
enter
pop
adc
pop
sub
or
xchg
call
and
mov
inc
aad
sbb
jg
mov
push
pop
xchg
mov
leave
add
pop
cli
mov
sbb
jmpw
add
dec
and
sub
mov
mov
data16
jl
inc
mov
or
sar
ss
pop
stc
and
pop
mov
xchg
test
jo
sbb
adc
ret
lods
cltd
mov
inc
adc
mov
push
sbb
adcl
push
and
fst
push
cmc
fxch
fsub
push
clc
ret
sahf
imul
cmc
push
lock
mov
out
adc
negl
inc
and
addb
adc
sbb
xchg
ljmp
pusha
filds
jb
xlat
mov
clc
inc
pusha
in
cmp
add
outsb
repz
mov
test
jmp
xchg
das
sub
popa
notl
xor
push
mov
push
ljmp
cld
dec
mov
iret
stos
adc
js
rolb
pop
xchg
leave
lret
pushf
jge
call
mov
and
xor
mov
inc
cmp
mov
dec
pop
pop
inc
lds
sub
cmpsb
push
xor
inc
mov
push
aaa
mov
xchg
inc
mov
inc
sbb
fidivrl
out
pop
andnps
inc
cltd
in
outsb
jge
in
loope
test
sub
cltd
push
pop
and
cmp
jecxz
mov
cltd
popa
popa
in
xchg
cltd
jl
xor
push
movsl
cli
in
fiaddl
cld
shll
sub
adc
cmp
test
imul
sub
aas
xor
mov
rcll
xchg
sbb
repnz
push
jae
mov
add
add
pop
shrl
fs
repz
arpl
jp
repz
inc
push
and
popa
das
xor
cmpb
hlt
std
and
je
sub
or
mov
incb
pop
loop
adc
pop
mov
mov
bound
je
push
pusha
mov
rcr
fisubs
imul
cmp
dec
sbb
xchg
sub
inc
or
lods
daa
pop
add
mov
and
dec
adc
jo
ret
sbb
cmc
out
rclb
jecxz
insb
fmul
out
mov
nop
jnp
ret
cmc
popa
scas
pop
add
jmp
cwtl
inc
imul
popa
cmp
dec
mov
aam
push
xorb
push
inc
test
in
aaa
xor
fdivs
test
sbbb
movsb
addr16
mov
pop
fildll
pop
js
cli
xchg
xor
mov
pop
mov
and
ret
cmpsb
mov
mov
add
fimull
lcall
out
pop
xor
stos
sub
add
xor
sarl
aad
cmpsb
cmpsb
dec
out
xchg
jb
cmpl
or
orb
mov
scas
jl
sbb
icebp
lret
loopne
adc
inc
ficoms
hlt
inc
shlb
push
popf
test
je
jecxz
sbb
xchg
repnz
and
xchg
incl
pushf
enter
jg
pop
push
ret
sub
add
and
popa
lods
aaa
loop
xchg
cmpsb
or
dec
pop
jb
lods
enter
ret
push
rorb
xchg
mov
sbb
xchg
jg
into
mov
jns
cmpb
dec
xor
pop
mov
push
xchg
rcl
xchg
push
inc
push
iret
xor
xchg
fadd
cwtl
jp
lds
push
inc
pushf
jno
add
lock
ss
mov
inc
inc
insb
cld
out
jl
jmp
movsl
test
mov
pop
sbb
out
push
stc
push
ficomps
in
pop
adc
adc
cmp
jg
loope
in
mov
fldenv
scas
sti
push
jle
dec
lahf
call
push
pop
scas
push
sub
push
jmp
in
ret
movsb
xor
adc
push
push
fmuls
nop
inc
pop
ret
mov
mov
cli
lods
lock
mov
or
inc
fs
lahf
sbb
cmc
outsl
lcall
into
and
movsl
xchg
push
dec
dec
loop
sub
push
mov
push
in
das
ds
into
pop
sbb
ret
pop
sti
jno
mov
jmp
jns
imul
stc
xor
inc
dec
addl
mov
in
inc
aam
pop
int
cld
xchg
pop
xlat
xor
hlt
movsb
mov
aam
in
lods
pop
add
fmull
xchg
push
std
lcall
mov
into
sbb
or
lret
xor
pop
push
cmc
xchg
sbb
fsts
mov
mov
xchg
shrb
sub
ljmp
inc
pushf
in
cmp
popf
sbbb
shlb
sub
sbbl
jns
insl
pop
inc
outsb
mov
mov
insl
jl
into
aaa
mov
ds
or
std
dec
mov
std
add
ja
and
push
call
mov
mov
popf
inc
sahf
jmp
and
sti
in
clflush
adc
xchg
sbb
ljmp
push
push
add
push
cmp
xlat
bound
mov
dec
or
pop
and
pusha
cmp
movsb
jns
xchg
shrb
ret
add
rcl
cwtl
arpl
xor
mov
mov
cltd
or
popa
maxps
sbb
sbb
or
sti
out
mov
mov
out
js
mov
sbb
sbb
aam
mov
xlat
aam
stc
and
lret
mov
cwtl
push
mov
xchg
sub
lcall
and
or
popf
out
dec
loop
jno
insl
js
push
clc
cmpsb
inc
mov
xchg
add
daa
popa
pop
adc
lret
bound
and
movb
dec
in
or
pop
sub
arpl
aad
fmul
mov
jae
outsl
push
pusha
stos
and
decl
jl
fdivrl
mov
add
lret
jb
add
mov
pop
jecxz
and
cmp
scas
lahf
add
scas
push
sub
repz
mov
in
js
push
fstps
sub
xor
lret
sub
mov
loop
shll
call
cld
fsubrs
push
daa
pusha
je
jge
ss
lret
adc
popa
mov
stos
lock
or
push
adc
push
popf
mov
cltd
inc
hlt
leave
xchg
and
mov
dec
stc
mov
sbb
ret
mov
sbb
sbb
insl
jle
cmp
sbb
pop
les
jge
push
insb
popf
jmp
xor
cwtl
nop
imul
pop
outsl
mov
fmuls
mov
arpl
mov
icebp
inc
fisttpl
mov
loope
mov
sub
insl
or
in
jbe
add
inc
xor
out
shrl
cmpsb
or
cmp
push
mov
mov
xchg
sbb
xchg
ficompl
dec
mov
out
xor
scas
ljmp
int3
sbb
mov
xor
add
std
jns
loope
out
add
jo
std
out
repnz
fildll
mov
inc
lcall
xlat
mov
jae
mov
jo
pop
xchg
mov
fstpl
pop
and
xchg
pop
insb
mov
stos
in
and
mov
mov
iret
jp
mov
arpl
stos
push
cli
or
es
push
les
push
xor
dec
movsb
and
into
lcall
mov
aad
and
pusha
es
cli
les
loopne
push
push
out
test
xor
or
int
push
and
or
cmp
ss
dec
adc
mov
pop
adc
push
xor
test
add
aam
xchg
pop
or
cmpsb
test
ljmp
adc
sub
adc
sahf
mov
fisttpll
xorl
outsl
push
mov
xor
andb
pop
mov
scas
sub
or
imul
and
mov
loope
imul
jp
mov
vmovshdup
mov
mov
loope
pop
cmpsl
aam
test
dec
xor
ss
scas
scas
and
ss
nop
shld
nopl
fcmovnb
xchg
repz
xchg
adc
sbb
cs
inc
cmpsb
xor
int
mov
jnp
adc
rcrl
dec
xor
out
fldcw
mov
cwtl
ret
xor
cwtl
andb
adc
and
iret
mov
or
das
jecxz
ss
in
leave
out
jns
inc
sub
hlt
scas
cmpsl
cmp
lods
inc
inc
xchg
enter
test
clc
pop
int
cmp
adc
aad
ret
loop
mov
xchg
shll
orb
movsl
push
cmc
xchg
sub
outsl
push
push
adc
mov
in
xor
daa
dec
push
ret
mov
hlt
sub
pop
data16
nop
jno
pop
es
and
lods
cmpsb
or
and
rcl
repnz
push
pop
xchg
mov
psrlq
call
adc
out
and
std
fstl
out
dec
mov
pop
cmp
xor
xchg
int3
imul
mov
ljmp
lock
in
test
test
dec
adc
leave
pop
mov
sbb
dec
lahf
xchg
in
push
add
sub
dec
push
ret
in
int
sbb
or
pop
lods
repz
faddl
ja
les
sbb
loope
shrb
and
push
mov
mov
jb
ljmp
clc
xor
adc
ret
test
mov
sbb
dec
std
shll
sbb
sbb
xchg
testl
inc
xor
or
inc
in
jmp
pop
jmp
repz
scas
inc
sub
fdivrl
xor
jge
testl
insl
out
lds
jecxz
js
sbb
sbb
xor
jmp
out
add
scas
insl
int3
stos
mov
sub
mov
and
jl
jne
xlat
mov
sub
mov
add
cld
jmp
dec
cmp
iret
or
sub
sbb
jbe
ss
outsl
repz
inc
sub
xor
orl
sarl
fdiv
fdivrl
push
int
into
xchg
leave
lds
xchg
xor
mov
sti
hlt
insl
dec
cmpb
cld
shl
in
adc
out
out
xor
inc
ffree
daa
add
fistl
pop
add
icebp
insb
xor
js
xor
add
mov
push
mov
mov
inc
push
arpl
add
out
push
xor
inc
add
add
mov
lods
inc
nop
out
push
fwait
imul
push
imul
dec
bound
mov
adcb
repnz
jno
inc
icebp
jno
mov
mov
dec
stos
lock
in
lret
leave
outsl
cmp
out
adc
mov
sub
iret
jnp
ficoms
adc
sbb
adc
leave
inc
sbb
sbb
nop
mov
cli
jo
cld
fstl
mov
jae
mov
loope
shrb
mov
push
jnp
into
pushl
mov
filds
jl
and
and
xor
dec
pop
and
hlt
lcall
and
lea
mov
cli
out
jge
cmpsl
jp
sbb
sbb
imul
dec
inc
je
pop
lahf
add
add
cmp
repnz
xor
fisubs
mov
mov
pop
sbb
pushf
icebp
adc
imul
sahf
lods
stc
inc
gs
clc
dec
fwait
in
cmp
mov
sahf
jmp
jmp
xor
sti
insl
adcl
xor
ljmp
jns
incb
mov
pop
ror
xchg
inc
add
fnstenv
in
cld
daa
pop
ljmp
nop
push
xchg
adc
dec
xchg
jnp
mov
or
out
loop
lock
shll
stos
pop
mov
or
rol
ret
imul
inc
add
in
cmpsl
filds
stos
icebp
mov
cs
mov
adcl
pop
mov
call
and
add
add
int3
sbb
rclb
mov
adc
mov
into
pop
lods
stos
sub
dec
sbb
testl
cmp
xchg
cwtl
and
jb
sub
fs
inc
mov
and
mov
inc
push
sti
ja
inc
daa
call
icebp
jge
out
and
dec
add
mulps
gs
sbb
xor
in
push
push
cltd
push
cmp
jo
jbe
repz
sub
aaa
sbb
inc
push
iret
mov
insb
jno
sbb
sub
adc
cmpsl
test
mov
test
mov
cltd
mulb
loop
push
sub
jnp
cmpsb
mov
shlb
cmp
popf
pop
jp
or
mov
xor
mov
pop
mov
lret
test
sti
xchg
or
fimuls
sub
mov
sub
repz
adc
fmuls
inc
xchg
test
adc
cmpsb
je
mov
pop
lret
jnp
or
xchg
sbbb
ret
dec
cmp
sahf
iret
jle
mov
fidivs
pushf
insl
add
and
ja
repnz
xor
sbb
cmp
mov
flds
loop
and
mov
cltd
inc
fwait
sbb
incb
cmc
pop
add
or
sub
dec
ror
shll
xlat
out
arpl
lahf
pop
lods
in
pop
mov
insl
sub
sbb
sub
jge
mov
sub
vmwrite
xor
das
shrb
xchg
push
sub
daa
sub
jo
loopne
repnz
stos
jnp
je
gs
bound
dec
mov
mov
cmp
or
orl
outsl
fstpt
dec
adc
int
inc
out
call
xchg
cmpsb
cmp
movsb
adc
or
sarl
iret
sub
mov
inc
xor
bndldx
jns
call
mov
pop
xlat
aad
mov
adc
jmp
sub
jecxz
popa
stc
and
or
std
icebp
scas
aam
andb
and
or
fcmovb
mov
nop
repnz
movsb
imulb
push
sbb
and
adc
or
cmpsl
dec
hlt
dec
sub
push
cmp
xlat
mov
jp
or
cli
leave
or
movsl
fisubs
fs
or
ret
mov
jmp
and
mov
dec
push
push
cmp
lds
cmp
mov
into
mov
jb
loope
mov
mov
xor
lods
leave
adc
cs
fisttps
cmp
data16
dec
jg
cld
inc
sbb
jne
notl
lcall
arpl
ja
lea
jmp
or
sub
mov
daa
cmp
inc
xchg
jmp
add
fdivrl
push
jbe
fcmovne
sub
sahf
mov
cwtl
push
inc
jbe
daa
cmp
cli
lds
mov
jge
adc
sbb
rorb
loopne
dec
sub
jge
sub
aas
push
rolb
iret
rclb
sahf
push
mov
xchg
mov
or
icebp
stc
xchg
icebp
fcmovbe
jae
pop
sbb
into
pushf
or
dec
pop
adc
popf
mov
pushf
jmp
cvttps2pi
add
mov
addl
mov
cmp
xor
or
out
sahf
pop
xor
test
dec
int3
cwtl
xchg
and
mov
shlb
int3
dec
xchg
insb
pop
cmp
cltd
movsb
outsb
push
outsl
push
xor
jle
sbb
add
inc
xor
push
leave
sub
push
xchg
mov
int
add
repz
fs
inc
loop
dec
dec
push
in
into
xchg
lahf
aas
cmp
sub
hlt
insb
rorb
push
out
test
in
dec
xchg
testb
xacquire
outsb
sbb
mov
lods
mov
and
mov
insb
cs
push
mov
hlt
testl
stos
xchg
mov
fisttpl
inc
and
imul
aaa
out
dec
dec
popf
sub
xorl
inc
rcl
sbb
pushf
movsl
lock
pop
jl
popf
jg
sbbl
pop
loop
lods
jl
mov
push
lods
jbe
ficompl
pop
or
clc
dec
or
sahf
adc
cmp
xchg
mov
fdiv
mov
push
pop
mov
push
push
popa
and
xchg
fcoms
cmpl
cltd
sbb
mov
pop
aad
ret
aaa
lret
jg
mov
fstps
ficomps
xorl
mov
jno
in
sub
dec
das
out
pop
fsubrs
cmc
jb
push
mov
dec
dec
sbb
dec
icebp
repnz
stos
xchg
frstor
ss
pop
push
lcall
xor
int3
sub
jno
adc
mov
xchg
rcll
push
add
les
push
cs
jno
sub
adc
loope
mov
dec
sbb
or
mov
stc
int3
mov
or
jbe
out
inc
pop
fwait
jecxz
into
inc
dec
std
cwtl
cmp
imul
or
repnz
add
lea
mov
dec
pop
out
cmc
jae
icebp
sbb
sbb
add
sti
fimuls
cmp
cmp
adc
xchg
and
das
faddp
loopne
std
js
dec
test
in
sbb
adc
fists
mov
repz
aas
sbb
out
pop
cld
outsl
decb
faddp
add
pop
cli
jo
fsubrs
ret
add
sahf
fildl
jecxz
adc
jl
pushf
out
pop
push
and
mov
sahf
mov
in
push
scas
jns
out
daa
testb
pop
rorl
das
xor
sub
pushf
lds
fstpl
mov
int3
dec
icebp
pop
add
mov
adc
pop
mov
aas
or
mov
cmp
inc
xor
aas
add
loop
lahf
push
neg
jle
cltd
fwait
or
xchg
jne
lea
pop
fs
push
and
mov
push
insl
add
xchg
xor
pop
add
xchg
dec
sti
pop
jbe
pop
shlb
std
cmc
je
push
adcb
adc
ss
and
shl
aas
mov
dec
divb
scas
cltd
or
pop
movl
dec
jne
mov
fnstenv
mov
xor
add
sbb
xchg
mov
xchg
add
push
and
ss
xor
jp
stos
adc
ljmp
jae
scas
jbe
es
jp
int
mov
sbb
das
adc
rcll
out
cld
vandps
mov
das
jb
sub
scas
or
mov
mov
cmc
scas
cld
scas
xor
subps
xchg
lea
out
sub
sbb
loope
lds
xchg
xchg
mov
cltd
pop
sbb
adc
ja
in
icebp
mov
mov
push
and
frstor
movsb
mov
pop
dec
sub
int
dec
popf
xchg
dec
mov
jecxz
fdiv
pop
fisubs
test
andl
or
or
and
lret
mov
or
xchg
and
aad
cmpsl
popa
out
movsl
loopne
ljmp
into
push
movsl
mov
cmpsb
cmp
fcoms
sbb
mov
jle
push
xor
leave
shll
cmpsl
addb
push
dec
inc
mov
out
mov
sbb
and
pop
nop
jg
jno
into
xchg
cmp
sbb
out
sbb
inc
popf
mov
adc
fwait
shr
leave
sbb
push
fwait
xchg
aad
or
sub
addr16
jbe
fs
pushf
bound
mov
push
dec
js
jns
fisttpl
adc
cmp
xchg
sub
jmp
in
les
pop
add
lcall
adc
or
popf
inc
outsb
dec
rorb
sar
lea
adcb
addl
add
mov
sub
dec
movsl
and
aam
lahf
ret
mov
adc
xchg
nop
and
adc
add
int3
push
fisttps
add
lock
inc
or
push
xchg
mov
xchg
roll
sti
pop
cmp
adc
or
lret
imul
jl
stos
ror
push
mov
insl
xchg
fs
scas
enter
mov
mov
lds
jle
loop
movsl
sub
pop
lods
xchg
in
cmp
add
xor
dec
push
fwait
and
add
lea
lcall
add
mov
jb
dec
sbb
xor
mov
inc
jae
pushf
test
aad
aaa
add
pop
mov
aas
std
mov
imul
inc
push
fcomps
movsl
sbb
insb
push
stos
fbstp
pop
mov
add
mov
push
jne
lea
test
clc
fdivrs
push
pop
jp
adc
add
mulb
pop
mov
scas
dec
sti
lock
xchg
push
jge
mov
sbb
stc
inc
mov
push
xchg
dec
shll
pop
xlat
lds
faddl
fwait
xchg
sub
fistpll
popf
cmp
inc
lcall
pop
cmpsl
nop
int
loop
inc
xchg
test
adc
sbb
mov
xchg
jge
mov
lret
bound
or
pop
push
mov
mov
mov
subl
sbb
shll
lret
out
rol
dec
pop
push
mov
and
add
and
or
push
pop
or
jno
jns
pop
inc
sbb
in
lea
gs
dec
and
popf
add
add
outsl
cmp
sbb
jbe
cs
adc
mov
ror
mov
js
sbb
fcoml
jmp
out
jo
repnz
jno
add
sbb
mov
insb
mov
or
lret
lcall
mov
mov
lahf
jno
stos
xchg
xor
mov
push
jl
cs
clc
inc
push
out
iret
add
push
test
icebp
inc
and
add
ficoml
ja
das
add
mov
cmp
and
xor
arpl
rcrb
aam
and
jb
imul
and
and
jb
popf
jl
enter
arpl
push
adc
add
mov
sbbb
sbb
push
outsl
jle
jnp
mov
push
arpl
or
mov
adc
int
outsb
add
fistl
adc
out
lea
int3
imul
fisubrl
push
loop
push
in
les
push
inc
adc
jae
aam
shr
mov
inc
jae
adc
push
push
pop
mov
gs
lods
pop
dec
adc
ret
in
xchg
or
jge
push
xor
jp
imul
shll
mov
pop
dec
mov
jge
push
aaa
es
jmp
add
dec
push
int3
out
rorb
repnz
cwtl
and
shrb
fdivl
mov
xchg
cmp
push
cltd
ljmp
pop
adc
jl
sub
mov
sbb
mov
cmp
fbld
xor
xchg
inc
dec
out
mov
adc
sbb
out
imul
xor
out
dec
sbbb
js
leave
fcmovbe
mov
jp
cmpsb
movsl
clc
sub
call
xor
pop
daa
loop
stos
fldl
dec
fiaddl
in
testl
inc
cld
and
popa
or
adc
mov
lods
lret
mov
mov
xchg
pop
cld
arpl
icebp
lock
lock
nop
fidivs
adc
xchg
inc
cmpl
mov
jecxz
loop
and
pop
jbe
outsb
sbb
movsb
push
cmp
stos
jg
lcall
movsb
push
mov
out
and
mov
pop
mov
or
in
cmp
cmp
dec
sub
mov
pusha
lea
es
in
ds
call
mov
and
adcl
jge
cmovne
das
repnz
adc
adc
sahf
in
das
or
mov
dec
fwait
ja
sub
clc
stos
push
in
lea
sahf
sti
dec
mov
xchg
and
mov
xor
fdivr
mov
frstor
imul
imul
inc
inc
xchg
sbb
repnz
movsb
stos
loop
cltd
pop
pop
cmpsl
dec
xor
mov
or
add
es
pop
mov
into
pop
sbb
rcl
dec
lret
cwtl
pop
lcall
mov
mov
mov
nop
aas
leave
adc
or
dec
out
sub
xor
cmpsl
sti
dec
dec
push
aaa
jnp
fwait
out
icebp
scas
push
mov
mov
mov
sub
mov
mov
inc
inc
lock
xor
cli
addr16
pop
out
outsl
jg
mov
jl
or
cmp
cmp
or
sub
push
dec
dec
xchg
or
imul
in
sti
insb
stos
rcll
mov
mov
dec
pop
out
pop
mov
jns
dec
cltd
aas
sub
pop
call
out
decl
mov
mov
ret
add
fwait
cmp
adc
js
fwait
sub
add
aas
iret
push
roll
ljmp
or
push
fildll
lahf
cld
dec
mov
aas
inc
lret
outsb
or
jb
xchg
addb
out
stos
dec
adcl
xor
push
push
mov
std
push
xchg
pop
lock
pop
cli
stc
and
mov
push
mov
aaa
push
leave
cmpsb
pusha
jp
sbb
int
cmp
imul
ret
sub
insb
incl
ror
popa
or
or
or
jne
add
xchg
outsb
mov
in
pusha
or
test
mov
into
push
add
mov
je
xlat
push
mov
push
cmp
mov
cmp
inc
sub
push
push
cmp
jnp
sub
movsl
dec
repz
push
fidivrs
or
dec
push
cs
mov
scas
push
nop
jns
inc
mov
adc
mov
mov
jp
xor
fwait
dec
jbe
or
fwait
mov
xchg
mov
push
mov
adc
stos
push
out
pop
aam
cmp
insb
pop
pop
or
es
mov
mov
xor
pop
insl
in
xchg
imul
pop
cmp
mov
ret
push
gs
mov
je
ss
outsb
push
in
ljmp
fsts
out
insl
in
xor
push
rcll
or
xor
jmp
mov
adc
ffreep
mov
bound
pop
jge
xor
sub
iret
push
pop
dec
mov
and
lcall
bound
push
dec
outsb
jle
and
int3
loopne
cmovo
stc
aas
stos
cmp
or
jns
fsubr
mov
cmpl
rorb
stos
cmp
mov
xor
mov
imul
sub
into
and
popf
ficompl
xchg
cltd
pop
outsl
push
mov
xor
and
mov
imul
mov
setae
mov
add
ds
mov
pop
outsb
dec
pop
dec
pop
pop
jmp
cmp
jmp
mov
pop
push
adc
pop
adc
enter
jno
or
or
scas
mov
test
pop
push
ret
ret
data16
lods
mov
adc
adc
addl
pushf
dec
mov
cwtl
jl
jbe
lcall
xlat
inc
in
lret
out
inc
sub
sbb
dec
jmp
push
jmp
mov
mov
pop
jo
mov
add
in
cwtl
arpl
sub
mov
ret
fs
sar
push
fcmovnb
xor
inc
repz
mov
or
and
push
ds
ljmp
hlt
cmp
sti
xchg
dec
jge
nop
pop
sub
dec
fsubrl
jge
ret
add
mov
scas
jo
xlat
sbb
jecxz
push
inc
fwait
in
dec
push
and
push
insl
popf
aad
lret
loope
push
ljmp
cmp
int
mov
pop
out
dec
pop
or
sarl
or
into
mov
ret
call
jp
aam
and
arpl
adc
test
xchg
int3
fs
rcll
fcompl
jmp
adc
lret
mov
in
jae
fcmovbe
jecxz
ss
in
mov
jo
adc
ret
xchg
fiaddl
pop
mov
add
jg
add
clc
push
sbb
mov
lahf
fs
mov
jns
add
dec
out
das
mov
push
mov
es
mov
imul
or
repz
pop
enter
push
xor
jae
sbb
icebp
jbe
pop
adc
push
xchg
inc
pop
ret
pop
xor
cmp
mov
sbb
js
sti
sti
sub
in
int
adc
lods
xlat
cmp
adc
pop
jb
pop
int3
ret
neg
sbb
arpl
test
push
mov
adc
fsts
ljmp
xor
dec
mov
add
fdivp
lods
push
add
loope
jmp
mov
ss
out
cmpl
out
xchg
cli
cmp
sbb
dec
inc
pop
push
or
xor
fisttpl
in
std
push
xor
lahf
andl
jge
dec
jo
or
cmp
mov
jbe
mov
mov
sarb
or
and
and
pop
push
ja
jno
push
xchg
pop
or
mov
ret
sub
mov
lds
mov
jne
jle
mov
dec
out
add
rcrb
ficoms
sub
mov
call
dec
dec
mov
or
sbbl
bts
add
rcl
stc
cmp
or
pop
out
inc
adc
xchg
jno
add
cmc
div
fdivr
inc
jl
push
push
sub
jl
lret
push
inc
push
mov
stos
clc
cmp
pop
lea
cmp
les
out
jb
lds
cmpsl
mov
aaa
mov
repz
subb
ficompl
dec
inc
incl
subl
mov
mov
outsw
push
lcall
mov
mov
pop
mov
test
mov
adc
cmp
mov
mov
or
ret
clc
imul
dec
add
les
or
pop
jno
sub
ffree
in
dec
and
adc
xchg
in
xchg
and
or
enter
mov
lock
negl
stos
nop
and
movsl
inc
add
in
or
cmp
xor
out
in
js
rorb
jle
stos
dec
lcall
fnstcw
cld
out
cmp
sahf
sahf
addr16
xorl
add
adc
inc
fwait
gs
addr16
jae
je
mov
pop
in
add
cmp
cld
mov
stos
xchg
test
adc
bound
int3
inc
sbb
xchg
test
jge
xchg
sbb
bound
ficoms
lods
push
jnp
and
mov
enter
inc
pop
push
inc
xchg
dec
out
stos
add
stos
lret
test
sub
push
adc
lea
sarb
mov
or
and
test
enter
push
or
mov
cmp
in
mov
jne
cmp
mov
cli
cli
or
jge
xchg
mov
int
rorb
sub
xchg
imul
stos
push
push
movsl
lds
scas
pop
pop
ret
or
mov
mov
popa
xchg
xor
jnp
cmp
mov
aad
add
scas
adc
xchg
jg
push
stc
mov
jge
mov
pop
mov
pop
mov
xchg
mov
mov
lock
lret
inc
fxch
pop
insl
mov
jae
mov
mov
push
xor
jbe
pop
loope
in
mov
shlb
fsubr
cltd
jnp
int
mov
int
movsl
cs
shll
sub
dec
imul
mov
insl
leave
or
pop
dec
lahf
insl
push
mov
jae
mov
lock
ret
xchg
scas
xchg
lock
add
inc
addr16
add
daa
inc
cmp
leave
pop
pop
in
xchg
mov
ljmp
arpl
xor
daa
sbb
cmc
push
loop
dec
jns
xorl
aad
ljmp
shll
addr16
shrb
sbb
and
stos
or
ret
clc
leave
int
pushf
adc
or
pusha
mov
mov
adc
lock
dec
int3
jp
sbb
mov
mov
pushf
clc
cmp
jmp
add
int
into
fiaddl
shrl
ret
pusha
daa
pop
jecxz
leavew
lahf
out
decl
or
sbb
pop
push
popf
out
je
ja
fisubrs
popa
sbb
mov
fidivrs
push
sbb
in
pop
nop
cld
sub
adc
lods
lods
mov
scas
sub
punpcklbw
pop
femms
mov
mov
inc
jnp
rorb
cmp
mov
pusha
cltd
inc
sub
rcrb
mov
cmp
inc
xlat
cli
jnp
sub
lock
imul
pminub
cs
dec
xchg
test
loop
mov
mov
push
or
inc
aam
test
test
stc
repz
fdivs
mov
pop
push
cmp
cmc
sub
and
mov
lahf
or
lahf
mov
in
ficoml
and
cld
pop
int
cmp
dec
test
push
jle
jae
mov
add
rcrb
jns
dec
push
in
dec
stc
pushf
xor
loope
cmp
mov
and
cmp
push
push
pop
dec
aad
lahf
xchg
mov
stc
lock
fs
sub
mov
clc
push
sub
cs
int
aas
pop
call
or
rorl
dec
fstpl
cmpl
sub
je
mov
inc
test
shlb
push
decl
dec
popf
stc
shrb
push
lret
cmp
jne
mov
ficoml
or
clc
cmp
or
in
or
rorb
adc
nop
xchg
adc
inc
or
lcall
xor
add
into
iret
adc
xchg
adcl
cli
adc
mov
or
enter
sbb
test
int
mov
lret
mov
out
jno
subps
jmp
notb
xlat
ja
mov
les
sub
dec
shrl
mov
mov
push
out
mov
xchg
ja
xchg
mov
cmp
std
testb
lcall
leave
flds
int
test
pop
adcb
lahf
nop
xchg
lret
les
lret
push
push
jnp
les
das
pop
push
mov
cltd
test
nop
mov
mov
cmp
adc
xor
jae
aaa
jne
outsb
xor
mov
sbb
inc
leave
inc
iret
mov
insb
mov
lahf
aas
add
lds
push
dec
push
cmc
mov
sbb
pusha
les
jns
sbb
movsb
cmp
idivl
bound
jnp
lods
jge
cmp
loopne
imul
push
cmp
aaa
cmp
mov
addl
pop
and
test
adc
jle
fs
icebp
inc
nop
out
mov
pop
sbbl
or
test
pop
mov
adc
add
jno
scas
pop
sarw
push
mov
or
scas
push
test
sti
adc
inc
sub
and
push
cltd
popa
cmp
sub
test
cwtl
adc
push
cmp
fwait
xchg
push
xchg
sbb
out
push
cmpsl
xchg
lds
sbb
jbe
push
les
sub
lods
sahf
adc
xchg
jns
push
addb
cmp
xchg
fdiv
xorl
in
adc
mov
fisubrs
xchg
push
jae
xchg
sbb
inc
mov
sub
ficoml
mov
fisttpl
xor
loop
adc
and
dec
mov
out
jmp
mov
orb
mov
inc
mov
sarl
inc
sahf
inc
dec
icebp
jmp
cmp
mov
add
pop
mov
cld
out
sbb
dec
inc
test
xchg
mov
cwtl
idivb
stos
xlat
push
and
mov
lcall
jle
sahf
repnz
dec
mov
add
mov
jno
xor
sbb
nop
lret
stos
and
mov
aam
xor
pusha
add
inc
pushf
or
sub
mov
adc
lea
cli
or
cmp
mov
xor
push
sti
dec
mov
dec
js
pop
cli
jmp
inc
lock
xchg
fcompl
dec
shll
xchg
lods
cwtl
es
xchg
ljmp
aaa
in
daa
and
dec
mov
sbb
and
xchg
and
cmp
in
mov
into
adc
pop
loope
cltd
cmpb
sbb
pop
lret
scas
dec
mov
movaps
push
cmp
loope
test
adc
mov
pop
lea
leave
cs
jp
xlat
cs
pop
push
sub
jb
fdivs
idivl
movsl
cmp
mov
jmp
jge
in
popa
fcmovnb
cmp
jmp
mov
jae
inc
mov
or
xchg
fisubl
addr16
push
and
cmpb
insb
push
pop
es
mov
cmp
xlat
out
mov
aam
mov
sub
xchg
push
das
mov
jns
hlt
ret
mov
bsr
jl
or
aad
fndisi(8087
xor
xorb
adcb
xor
fimuls
js
lret
mov
lret
lds
fisubrl
pop
and
jl
inc
fwait
mov
mov
pop
outsb
jno
jnp
scas
and
nop
outsb
jecxz
sbb
out
out
mov
and
push
mov
or
int3
repnz
out
test
stos
loopne
ljmp
push
mov
sub
enter
icebp
push
ljmp
sbb
mov
out
jno
or
scas
jae
and
add
sbb
out
mov
jl
js
xor
xchg
test
aas
les
pusha
sbb
shlb
dec
scas
in
mov
pop
mov
je
sbb
fwait
sahf
aad
jle
insb
in
xchg
cmp
cmc
sub
cmp
xchg
push
out
mov
mov
nop
fneni(8087
pop
sbb
jle
adc
and
pop
call
fdivl
inc
xchg
roll
xchg
cmpl
sub
mov
lods
jecxz
pusha
inc
fsubrl
xchg
out
cmc
and
movsbl
ss
xchg
stos
add
and
push
cmp
or
push
and
mov
rcll
xchg
int3
shrb
mov
in
sbb
cmc
movsl
std
xor
sub
sbb
test
cmp
les
pop
sbb
in
or
clc
pop
cmp
add
arpl
cltd
adc
hlt
add
or
sbb
adc
scas
icebp
movsb
mov
push
rolb
popa
xchg
cmp
sub
sub
xorb
test
pop
or
or
pop
add
and
adc
sub
mov
adc
jbe
jno,pt
pushf
popa
shl
mov
rclb
jge
pop
in
test
mov
dec
aam
mov
inc
mov
and
xchg
dec
sahf
loopne
imul
mov
andl
cmp
cs
mov
cwtl
dec
sahf
mov
addr16
inc
cli
sub
and
dec
fisubl
sbb
js
cmp
rorl
jno
aad
insb
dec
sbb
add
cwtl
ljmp
sbb
pop
fldcw
mov
in
pop
sbb
fwait
lret
lea
xchg
xchg
xlat
mov
and
popa
insb
mov
out
out
xchg
inc
xor
insb
mov
sbb
outsl
call
cmc
add
inc
ds
test
dec
xor
add
repnz
pop
scas
outsl
xchg
pushf
jle
ljmp
adc
mov
int
sbb
bound
push
mov
add
and
push
jmp
cli
add
inc
aad
dec
idiv
xchg
test
push
or
mov
adc
loop
jo
mov
inc
pop
xor
jecxz
pop
mov
pop
mov
mov
push
cmp
dec
jmp
out
test
scas
js
and
sti
cmp
fcoml
jmp
filds
stc
adc
push
sbb
mov
mov
test
rorb
sbb
jg
leave
adc
sub
mov
mov
test
clc
fnsetpm(287
cmp
dec
addr16
dec
sbb
iret
sbb
rcll
pusha
add
xor
repnz
lret
mov
xchg
loopne
push
jecxz
or
cmp
cmpsl
lds
dec
std
or
lds
mov
cmp
mov
inc
mov
cmp
enter
jae
aad
ljmp
test
mov
icebp
in
push
and
mov
hlt
jl
inc
jbe
nop
outsb
jo
lds
mov
insb
mov
imul
test
xchg
add
fnstcw
aad
insb
daa
addr16
mov
or
jecxz
insb
push
out
sbb
sbb
test
lret
scas
dec
push
popa
imul
add
xchg
mov
fisubs
dec
sub
and
dec
xchg
jmp
or
fs
mov
or
pop
leave
pop
inc
lret
shlb
mov
sub
test
das
bound
mov
jecxz
push
ret
pop
sbb
jb
mov
sub
fisttpll
pop
dec
sbb
xchg
lods
fstl
sti
dec
and
fwait
stos
rcll
gs
cmp
loope
bound
data16
repnz
xor
jl
call
inc
iret
and
cltd
xchg
movsb
dec
ja
loopne
cld
mov
divl
inc
mov
pop
or
or
ret
orl
push
jnp
push
mov
ret
ja
cmc
mov
sub
incl
or
int
jmp
mov
push
jno
aad
sub
jnp
in
outsb
pusha
xchg
sarl
lret
lods
xchg
stc
fstl
xchg
xchg
xor
jno
nop
or
cmpl
cmpsb
xor
mov
negl
bnd
lcall
pop
sti
and
in
and
jno
mov
sbb
ficoml
xchg
js
divl
cwtl
sbb
das
push
cs
mov
and
iret
cmp
jnp
or
sub
mov
out
xchg
aaa
gs
lahf
cmp
xchg
jnp
dec
dec
add
stos
loopne
push
inc
addr16
add
fisttpl
jecxz
mov
pop
jae
jle
or
out
add
xor
in
and
aaa
rcll
aas
aas
scas
pusha
pusha
sub
stos
mov
add
add
xlat
push
mov
xchg
sahf
cmp
cmp
mov
jnp
push
repz
into
xor
loopne
sub
mov
mov
add
decl
jecxz
stos
out
mov
outsb
fldcw
ljmp
mov
dec
add
sub
adc
and
js
lret
mov
dec
dec
movsl
or
mov
mov
cmp
sub
mov
sahf
cmp
ret
addr16
sub
sbb
jb
and
stos
xorb
pop
jp
mov
out
aad
pop
in
sub
cmpsb
xor
movsl
aaa
popf
mov
dec
ja
jge
into
lock
fdivs
and
adc
gs
popa
push
sarb
aad
ja
xor
stos
cmp
and
adc
mov
mov
repz
pop
in
inc
push
iret
dec
push
mov
mov
adc
stos
sub
cltd
ja
xchg
push
testl
inc
out
lods
mov
adc
loopne
lret
jecxz
sbb
jns
addb
loopne
cmp
call
addl
inc
fstps
xor
dec
or
mov
test
inc
movsl
pop
or
push
fldt
inc
inc
dec
mov
mov
add
mov
sub
rcrl
int3
xchg
repz
pop
inc
in
pusha
stc
ljmp
push
and
push
mov
jne
lods
fbstp
inc
daa
sbb
fldl
aas
mov
lea
push
jl
out
sbb
ret
cwtl
outsl
das
aaa
or
shr
out
push
adc
sub
mov
and
sbb
in
cmp
enter
lcall
fidivrs
aas
ret
mov
mov
cmpsb
xorl
xchg
mov
xchg
mov
out
test
std
ljmp
xchg
in
jae
pop
jecxz
sub
cmpsl
or
sub
stos
cli
inc
mov
jbe
inc
cmp
stc
dec
mov
mov
cmpsb
xchg
call
xchg
movsb
leave
cltd
mov
push
movsb
cmpsl
cmp
inc
mov
dec
inc
add
sub
fistpl
fsubrl
jge
and
cmp
jle
xlat
inc
xor
lock
out
outsl
sub
lret
loope
movsb
mov
cmp
mov
push
or
push
fidivrl
inc
and
push
xor
fcomip
xchg
pop
loop
mov
fcomps
mov
xor
and
sbb
pop
int3
shl
xor
gs
icebp
jnp
ficompl
pop
ja
insl
dec
sbb
and
loopne
pop
lret
add
ret
loope
rcr
cmpsl
or
in
std
mov
add
push
jmp
call
mov
lea
xor
aas
shll
cwtl
push
jl
jmp
inc
test
dec
test
loop
jno
sahf
jnp
adc
sub
adc
push
sarl
fisubrs
pop
or
or
std
jge
push
pop
pop
stos
jp
xor
jmp
push
push
out
ja
and
lods
sub
inc
mov
push
fmulp
aas
in
mov
add
stos
and
xchg
sbb
jo
dec
gs
movsl
push
sbb
xchg
push
shrb
mov
jmp
or
xor
mov
mov
pop
pop
sbb
mov
add
fcmovnbe
or
test
mov
hlt
rcr
cli
pop
mov
mov
cmp
imul
addl
push
jbe
xchg
jae
setle
and
adc
fildl
xchg
pop
dec
sahf
mov
rorb
xchg
outsl
adc
push
mov
out
andb
xchg
or
push
pusha
rclb
mov
pushf
jae
fs
pop
in
cld
jl
ss
ror
and
mov
add
mov
add
insb
test
xor
mov
and
jnp
jp
xor
insl
push
jno
ds
movsl
fs
addr16
sbb
jnp
mov
inc
dec
mov
ficoml
xchg
psubq
push
xchg
sbb
adc
push
fstl
in
mov
cli
mov
adc
push
out
sub
inc
push
pusha
or
jb
cmp
push
ficoms
push
xchg
insb
aas
ja
jmp
ljmp
push
nopl
xor
lds
push
mov
jmp
dec
or
fwait
mov
mov
add
xchg
sub
adc
insl
fidivrl
cmpsb
push
loopne
aam
add
cmpsb
push
push
mov
push
mov
sti
xchg
lcall
shrb
adc
and
lods
sub
cli
add
aas
mov
pop
mov
fbstp
fistpl
pop
xor
xchg
pop
pop
pop
pop
sub
loopne
mov
data16
les
sub
inc
jnp
call
lret
dec
ret
add
lds
xchg
mov
cmpsb
iret
pop
aad
fidivs
jg
adc
inc
fs
mov
in
sub
pop
or
cmpsl
push
mov
test
push
or
lahf
gs
mov
xor
sub
sti
mov
pop
mov
sbb
je
cmpsl
iret
call
jle
pop
add
js
test
stos
xchg
or
cmp
sbb
or
rol
xchg
das
movsl
data16
lods
xor
aaa
fildl
mov
cmp
cwtl
sub
xchg
pop
stos
jmp
and
nop
add
xor
lds
ljmp
dec
adc
out
xor
mov
dec
pop
sbb
sbb
sti
push
mov
jecxz
int3
rolb
fcoml
jp
in
push
mov
xor
ljmp
or
pop
or
ja
aas
in
mov
ret
add
dec
dec
xchg
mov
pop
nop
and
push
dec
and
mov
iret
jne
adc
test
in
mov
pop
adc
dec
jb
cmpsb
mov
dec
sbb
inc
or
adc
les
jle
dec
fisttps
sti
lahf
dec
xchg
cltd
stos
sub
add
xor
push
ss
cwtl
pop
cmp
and
lods
es
fidivrl
jb
jp
push
fwait
xchg
jae
pop
push
jbe
push
popf
jnp
xorb
aam
ja
mov
sub
sti
dec
hlt
xchg
leave
or
sbb
lds
inc
pop
and
cwtl
hlt
out
mov
andps
pushl
shll
iret
mov
loop
mov
jecxz
test
xchg
and
sbb
fbld
ret
arpl
push
push
jns
push
mov
cmp
mov
in
enter
mov
jg
int
scas
mov
rol
fs
jl
test
arpl
rcrb
bnd
sti
subb
test
cmp
shll
cwtl
and
rclb
mov
popa
repnz
mov
mov
mov
ret
xor
pop
cmp
push
insl
add
push
inc
stos
dec
inc
scas
push
int3
fistpl
xorl
cmp
fsts
mov
push
fidivl
xchg
jne
imull
aad
add
dec
jp
aas
hlt
mov
insl
imul
out
icebp
insl
fsubrs
xor
aam
mov
mov
jl
add
lods
xor
dec
iret
nop
mov
cmpsb
mov
mov
into
das
dec
add
push
cmp
jo
inc
aas
adc
push
loop
sahf
inc
adc
shlb
add
insb
jge
inc
cmova
adc
ljmp
mov
cmp
pusha
adc
js
cmpsl
inc
add
mov
push
or
aas
push
and
xor
sbb
sbb
lahf
movsb
and
jge
inc
dec
add
lcall
stos
push
dec
stos
xchg
and
sub
mov
pop
subb
shr
sti
testb
data16
xor
mov
mov
test
icebp
lds
popf
out
repz
mov
cmp
xchg
loopne
cmp
mov
out
and
pop
lds
push
test
push
movsb
xchg
les
repnz
stos
shll
xor
xor
pop
mov
and
scas
inc
mov
scas
aaa
add
jne
xor
filds
sarl
adc
lock
fxch
in
or
cmp
mov
mov
je
arpl
sub
dec
push
sub
repz
or
clc
add
sti
sub
adc
push
and
stc
daa
push
cmpsb
js
pop
subb
push
jmp
jb
mov
mov
mov
dec
or
sub
xchg
xchg
loopne
subl
push
int
sar
push
loope
testl
add
lcall
imul
ds
xchg
out
outsb
push
pop
insb
mov
dec
ja
das
cmp
and
pop
xchg
aas
insl
pop
aad
out
adc
or
xchg
inc
mov
sub
insl
out
fwait
xchg
push
push
sti
and
imul
lret
and
or
stos
xchg
movsb
pop
sbb
xchg
imull
fsub
xlat
loope
mov
stos
cltd
xor
fisttpl
lret
mov
or
lcall
add
mov
cmp
in
jmp
jl
std
xor
pusha
xor
push
pop
outsb
repnz
cli
inc
mov
in
cmc
or
pusha
lods
xchg
mov
sub
jecxz
mov
outsb
or
adc
les
ficoml
jp
sbb
dec
push
push
mov
push
push
cli
xchg
repz
std
cmp
pop
popf
mov
in
mov
loope
push
test
roll
sub
notl
pop
idivl
movsl
mov
dec
jmp
jnp
jmp
mul
mov
mov
idivb
shrb
mov
push
and
in
das
ficoms
sbb
popl
mov
add
dec
dec
xchg
mov
adc
push
fcmovnb
scas
sub
and
and
xchg
ret
out
fiadds
loope
cmp
inc
loope
lahf
inc
in
stos
push
push
dec
jb
movhps
add
xlat
fadd
mov
nop
rorl
in
insb
mov
std
je
push
mov
repz
in
into
in
jae
sbbb
and
je
cmc
sahf
mov
cld
fimull
mov
sbb
cmpsl
out
mov
xor
pushf
fwait
mov
mov
dec
xchg
inc
pop
daa
adc
test
sarl
fwait
dec
dec
call
sbbb
into
lea
sbbb
out
sbb
aad
pop
repnz
out
mov
into
sbb
roll
sub
sub
inc
add
or
into
es
pop
adc
jae
loope
arpl
addr16
addr16
push
dec
aaa
fistpl
mov
sub
pop
dec
pop
pop
inc
pop
outsl
aaa
imull
dec
shr
lfs
cmovne
mov
insl
loopne
mov
aam
pop
jno
aas
lds
adc
fildl
ljmp
mov
fs
mov
mov
xchg
push
or
loopne
pop
arpl
fwait
mov
sahf
cmpb
mov
pop
fdivs
lret
hlt
push
mov
jl
mov
sub
fisttpl
lcall
repz
xchg
aaa
repnz
cmc
out
xchg
pop
push
xlat
inc
adc
inc
pop
xor
xchg
inc
inc
jmp
js
xchg
xor
and
test
arpl
ljmp
add
lahf
add
push
cmpb
push
enter
shll
sar
mov
sbb
mov
call
cmp
cmp
icebp
sub
push
repz
rcl
dec
in
pushf
popf
bound
adc
daa
sahf
aam
stos
out
and
jbe
outsl
cmpsb
pop
mov
pusha
rep
popf
das
rcl
aam
aaa
and
sbb
out
mov
iret
jns
in
imul
lret
aad
popl
cmp
cld
sbb
rorb
pop
inc
cli
call
sbb
lret
cwtl
in
dec
push
sub
inc
movsl
xchg
maxps
push
sub
and
add
ss
mov
cltd
arpl
add
bnd
and
ror
and
mov
inc
adc
add
addr16
adc
or
mov
xlat
mov
les
pop
sub
jbe
xor
out
sub
flds
or
pop
lret
stc
mov
jl
sbbl
xor
aad
cmp
outsl
andb
out
std
fwait
mov
les
pusha
cltd
add
stc
pop
inc
out
mov
hlt
mov
pop
and
into
int3
lock
xor
fimull
rorb
mov
jns
xchg
push
mov
test
sbb
int
fildll
jl
xor
mov
dec
add
fdivl
inc
in
cli
fildl
ds
in
cmpsb
xchg
pop
icebp
dec
and
bound
fdivl
adc
in
add
lods
inc
rorb
out
clc
data16
movsb
mov
das
xchg
jecxz
sahf
cmp
pop
cld
inc
mov
aad
jb
les
bound
in
inc
push
test
mov
jno
jnp
aam
sub
in
push
mov
xchg
lret
lds
mov
ret
ret
inc
sbb
out
add
popf
jnp
xor
mov
loope
add
inc
dec
cmpsb
nop
jo
sbb
mov
stos
enter
mov
sbb
inc
ja
inc
dec
call
push
sbb
pushf
pop
das
fisubrs
data16
and
stc
clc
mov
mov
outsb
lds
stc
cmpps
mov
sub
int
lea
cmc
and
ja
and
mov
pop
aam
lret
mov
shrb
xor
cld
sub
outsl
mov
in
fcoms
mov
jo
shlb
js
pop
nop
pop
pop
pop
sbb
sbb
mov
mov
mov
popa
push
fimuls
insl
nop
push
ljmp
mov
popa
dec
dec
cmp
mov
mov
mov
inc
mov
loop
pop
in
mov
add
out
adc
in
lret
inc
std
fmull
sub
pop
sbb
xchg
mov
in
push
mov
daa
sarl
sub
aad
je
imul
dec
lcall
mov
enter
sub
mov
push
jmp
sub
movsl
lahf
adc
mov
shlb
add
ror
aaa
call
es
xchg
mov
sbbl
test
xor
je
pop
and
mov
pop
push
stos
popf
pushf
mov
imul
int
aaa
cli
out
out
adc
insl
add
and
out
sbb
cmpsl
shll
push
sbb
xor
cmpsb
clc
cs
fistpll
add
or
or
imul
dec
jmp
jns
sbb
outsl
mov
lods
dec
and
xchg
cmp
xor
cmpsl
adc
scas
fsubrp
jmp
std
and
mov
dec
mov
ret
ficompl
outsb
pusha
jmp
mov
out
jo
cld
fbld
xchg
sub
in
add
jbe
xlat
or
xlat
sub
loopne
in
xor
adc
js
push
daa
jbe
mov
mov
jl
rcll
ret
rcll
lds
mov
mov
jmp
lret
mov
std
outsl
jae
mov
rcl
lea
and
ja
cmpsl
push
pop
adc
pusha
dec
jl
stos
mov
je
sti
nop
out
xor
lds
lock
repnz
xchg
sbb
aaa
subl
sub
xor
cmp
lods
mov
xor
mov
popf
movsb
leave
xor
push
add
std
inc
pop
mov
mov
test
sar
iret
inc
je
js
dec
lea
mov
ja
sbb
in
sbb
push
loope
imul
jge
pop
je
divl
insb
mov
lahf
dec
ret
movsl
in
popf
mov
into
jne
sbb
fwait
loope,pn
xchg
insl
lret
mov
pop
ljmp
ret
mov
clc
pushf
test
shll
push
push
js
mov
mov
shll
fldl
mov
sub
insl
or
adc
push
sub
pop
xchg
fldt
stos
test
andl
push
cmp
ret
sub
jae
pop
mov
mov
rorb
pop
xchg
xchg
jne
out
aas
in
in
xor
xchg
push
xchg
xchg
inc
into
mov
in
shl
cli
add
int3
cmpb
sarl
and
aas
into
sub
mov
jecxz
adc
ret
in
fdivrs
out
xchg
xchg
push
and
dec
push
xchg
cltd
cmp
pusha
test
push
inc
mov
add
jae
loop
aam
out
xchg
xor
sar
ret
hlt
dec
cmc
push
rorl
sbb
ret
pop
sbb
mov
addr16
push
pop
rorb
scas
add
mov
bound
xchg
lret
movl
jle
xchg
add
xchg
js
enter
mov
loope
lret
xor
push
lock
jnp
mov
frstor
sbb
mov
mov
add
xchg
fists
fisttpl
jne
rcll
or
mov
jnp
cmpsl
into
jb
mov
xchg
mov
test
or
inc
jno
cltd
lcall
es
sbb
imul
data16
mov
dec
sub
mov
xchg
lock
adc
ds
mov
out
das
inc
and
or
das
in
adc
mov
jns
xchg
sti
add
cmpsl
aam
jns
ret
inc
shll
adc
fdivl
add
scas
test
jmp
sahf
mov
pop
xor
mov
ret
jp
pusha
xchg
mov
rorl
xchg
stos
aaa
enter
or
inc
imul
arpl
jmp
test
popf
mov
xor
sbb
jmp
nop
mov
push
pop
cmpb
push
jbe
push
xor
jg
jnp
ds
test
jmp
mov
mov
mov
xchg
popf
pop
pop
mov
xchg
adcb
mov
mov
pop
add
cli
mov
or
subb
push
mov
and
test
imulb
add
mov
or
push
and
pop
mov
or
cmp
and
mov
mov
and
or
or
mov
mov
mov
addr16
imull
lods
mov
sub
adc
sub
dec
icebp
jmp
inc
into
aam
jmp
xor
imul
add
sbb
inc
popa
nop
ret
cmovns
in
nop
rclb
push
mov
inc
xor
je
inc
jb
mov
js
in
mov
jecxz
leave
and
and
jge
add
aas
xor
cli
pop
scas
and
lahf
push
xchg
mov
push
push
cmp
ret
movsb
pop
sbb
pop
push
mov
test
jle
faddl
dec
and
xchg
nop
mov
xor
push
adc
hlt
out
in
insl
int
or
imul
cmc
mov
push
cmp
sbb
fisubrl
sbb
jmp
mov
xor
std
repnz
cmp
out
pop
jae
inc
xor
ret
lea
lcall
clc
sub
in
push
ficoms
ljmp
mov
xchg
or
outsl
add
icebp
mov
jmp
push
push
xchg
std
mov
dec
sbb
arpl
jo
les
add
dec
iret
jbe
ljmp
insl
bswap
dec
inc
fildl
iret
mov
test
xor
sbb
ret
imul
mov
cs
mov
xor
pop
outsl
nop
jo
add
sbb
js
sti
daa
cmp
cmpsb
pop
push
arpl
pushf
imul
adc
or
cmp
call
inc
mov
cmp
jbe
pop
lods
mov
in
dec
sti
sahf
addr16
popl
jge
scas
call
adc
sbb
leave
lea
xchg
negl
push
push
out
mov
cmc
imul
aam
mov
lret
xchg
dec
xchg
cs
add
cmp
arpl
vucomiss
shl
out
cmp
push
jg
mov
imul
out
inc
outsb
in
fsubp
adc
idivb
jp
mov
adc
adc
or
sbb
lock
scas
in
adc
sub
rol
int3
fisubrs
mov
fcomps
cmp
je
mov
pusha
mov
mov
cmp
dec
rcrl
pop
dec
mov
fsubrl
cmp
movsb
int
inc
jb
jmp
xchg
and
fldenv
jno
imull
jne
hlt
cmp
jmp
jl
ja
ror
into
movsb
xor
dec
div
sahf
adc
fwait
and
sbb
pusha
mov
test
sub
mov
or
cmpsl
ljmp
sahf
mov
nop
shlb
insl
out
mov
jmp
pop
scas
xchg
sub
jno
push
mov
inc
ljmp
lcall
cli
lds
mov
js
mov
dec
popf
fcmovnbe
and
movsb
lods
fsubrp
xchg
lret
fstl
jnp
dec
and
sub
pusha
mov
cmc
add
mov
push
mov
and
xchg
js
dec
jmp
lods
imul
push
jle
mov
sub
dec
mov
mov
mov
adc
pop
test
mov
add
ret
or
mov
cs
sub
xchg
xor
pop
gs
xadd
add
fimull
or
std
rcll
sbb
inc
sbb
mov
ret
sub
jl
mov
pop
cmp
dec
sahf
jne
adc
xor
in
pop
ja
pop
xor
repnz
ds
lret
je
mull
xchg
inc
push
jle
loopne
cmpsb
int
pop
sub
bound
in
pop
jl
push
xchg
jae
sahf
test
loop
cld
push
push
stos
mov
imul
pop
into
mov
insl
nop
movsb
pop
sahf
xchg
add
pop
add
xlat
cmp
popa
stos
ss
xor
out
xchg
pushf
fsts
dec
scas
pop
ret
adc
leave
xlat
imul
mov
dec
fnsave
lea
adc
stos
pop
add
xor
int
imul
adc
sbb
push
mov
sbb
cmpsl
jnp
je
push
pop
push
lods
push
ds
jae
lahf
mov
push
ss
insb
dec
pop
rclb
inc
inc
test
aam
or
jnp
fwait
dec
or
imul
jle
sub
xlat
std
dec
mov
lock
inc
inc
jle
aaa
mov
pop
mov
jge
into
outsl
and
imul
xor
sbb
mov
lods
sbb
int
movsb
adc
xorb
cld
adc
jbe
packuswb
jle
sbb
sub
lds
sbb
stos
xchg
cli
cmc
pop
sbb
cmp
jg
adcb
js
aaa
cmpb
subb
jo
push
adc
into
addps
lahf
call
sub
lods
sbb
jne
js
mov
cmp
xchg
jmp
mov
jmp
jbe
mov
mov
outsl
pop
push
or
sbb
call
ss
cmp
iret
jno
subl
adc
xchg
cmp
cmp
pop
stc
mov
inc
jmp
xlat
out
mov
mov
push
sbb
inc
cli
and
ljmp
cld
add
inc
inc
jne
notb
pop
hlt
and
sub
outsb
scas
inc
adc
mov
pop
ja
int
sbb
notl
imul
cmpsb
add
xchg
shrb
les
push
xor
or
lods
cmp
jge
xchg
popf
or
sub
dec
test
gs
jp
loop
add
dec
outsb
jl
inc
sahf
pop
push
cwtl
add
cmp
roll
pop
mov
repnz
fimuls
mov
je
pop
pop
stos
mov
nop
fs
sti
cmp
xchg
dec
int
lds
cwtl
mov
jge
mov
xchg
jg
cmp
mov
jl
insb
ds
fmuls
sub
inc
push
jns
orw
xchg
out
jmp
ret
xchg
clc
xor
adc
mov
jno
xchg
or
aam
rcrl
lds
xchg
mov
lods
mulb
pop
insl
fs
and
addb
aam
shlb
pop
push
popf
fsubs
aas
pushf
inc
pop
mov
test
push
movsb
stos
sbb
cmp
test
sub
imul
add
push
jnp
xor
jnp
xchg
adc
pop
adc
insb
xchg
je
mov
xor
gs
pusha
mov
mov
test
add
jge
jp
mov
out
pop
pushf
aad
push
jb
mov
ds
mov
xor
sub
in
iret
inc
clc
mov
adc
cmp
mov
mov
insl
jg
popf
lock
mov
add
inc
add
jbe
aaa
jne
notb
negl
xchg
jmp
push
sbb
in
cmp
lock
adc
pop
push
mov
mov
mov
and
je
shll
jns
les
popf
xor
aaa
xchg
add
mov
into
aam
stos
fwait
mov
loop
xchg
pop
pop
adc
mov
int3
sahf
mov
clc
clc
cmpl
nop
rcrb
dec
sub
dec
das
mov
jmp
jbe
sub
mov
sub
sbb
xchg
divl
push
cmp
cmp
push
scas
popf
jb
jecxz
repnz
and
dec
add
and
or
aaa
cmc
in
enter
in
imul
push
lods
xor
addr16
pop
push
push
loopne
mov
sub
jae
push
inc
xchg
mov
cwtl
jnp
add
std
adc
mov
sub
and
decb
lret
xchg
jp
fdivl
mov
daa
repnz
inc
mov
xor
shll
mov
repz
or
pop
add
idivl
lahf
faddl
dec
add
aam
xchg
or
scas
std
icebp
fs
stos
xchg
adc
mov
js
addl
std
pop
xchg
aaa
xchg
and
or
ja
mov
subl
sub
jg
dec
pop
test
leave
pop
jb
jp
push
mov
sbb
pop
mov
inc
out
mov
add
scas
cmc
test
icebp
or
pop
push
mov
int
and
mov
clc
or
add
sub
mov
int3
lret
call
test
xor
cmpb
pop
mov
pusha
sbb
jbe
cmpl
pop
inc
xchg
push
push
dec
push
mov
mov
and
fisubl
mov
popl
leave
mov
lcall
adc
decl
mov
push
pop
test
mov
test
fsub
inc
lret
iret
pop
rcll
sbb
sbb
inc
idiv
mov
scas
outsl
jl
fcomip
xor
push
das
jl
pop
add
jle
pushf
mov
mov
int3
shrb
add
push
test
sbb
mov
rcll
jns
mov
jecxz
sub
mov
movsb
xor
dec
cmpsl
push
mov
sub
call
mov
cmpb
not
stos
xor
sahf
test
aas
out
xchg
lods
fstps
lea
insb
mov
or
rorb
adc
aad
ror
adc
or
and
or
pop
lret
or
dec
push
and
lret
pop
inc
or
mov
int
cmpsb
insb
popa
xchg
ss
mov
xchg
out
mov
push
pop
popa
sti
adc
and
push
adc
jge
movsb
or
cmpsb
add
lods
dec
enter
jb
push
adc
jg
jmp
std
and
out
sbb
loop
orb
lcall
cld
push
add
jp,pt
in
pusha
addr16
leave
inc
bnd
mov
add
push
pop
sti
mov
leave
pop
add
clc
adc
xchg
inc
or
adc
pop
movsb
and
and
and
jg
repnz
test
cmp
mov
xlat
int3
cmp
mov
jb
push
jecxz
sub
cmpsb
xchg
call
out
lods
lds
pushf
shrb
jb
sub
xchg
out
mov
fwait
rclb
out
sti
iret
push
mov
fmulp
cmp
push
inc
callw
mov
rcrb
fnsave
adc
cmpb
sbbl
rcrl
lods
xchg
stc
and
repnz
data16
lcall
fadd
out
rcl
xor
dec
mov
stc
push
in
push
adc
sbb
outsb
mov
stos
into
jmp
pop
push
add
inc
lods
js
dec
push
sbb
mov
cmp
cmp
scas
rorl
jae
and
addr16
enter
cmpsl
iret
repnz
jne
in
andl
je
test
mov
outsl
daa
cmp
sub
sarl
jbe
imul
jmp
in
jmp
xor
lret
inc
mov
ds
rcrl
cmp
xor
jl
aad
aam
add
test
lock
das
jb
adc
cmpsl
imul
xlat
aam
cwtl
mov
into
mov
mov
pop
jne
rcl
sbb
stos
push
andl
adc
test
in
int
sub
into
insl
cmp
pop
and
in
rcrb
lods
cmp
mov
sub
push
mov
push
xchg
xor
dec
ja
dec
pop
cld
inc
pushf
sbb
push
andb
lea
pop
xchg
test
lock
cmovbe
xor
pop
loop
jl
outsb
xor
inc
mov
sub
popa
imul
push
movsb
add
or
or
add
xor
inc
xchg
dec
or
adc
and
stos
negb
movsl
or
pop
or
mov
aam
dec
xor
ljmp
dec
mov
mov
ljmp
cltd
mov
popa
sub
ss
or
ja
mov
lock
leave
cmp
in
jl
adc
mov
cmp
jae
or
enter
les
cmpsb
loopne
cwtl
jno
sbb
adc
mov
jge
scas
mov
push
cltd
out
sub
mul
sub
cwtl
inc
pusha
dec
sub
jae
sbb
lods
gs
inc
sub
repz
add
sbb
pop
xchg
push
dec
sti
lcall
add
out
push
movsb
xor
fwait
add
lea
mov
imulb
insb
dec
pop
call
sub
jmp
imul
or
les
imul
je
roll
ljmp
xor
ds
xchg
xchg
push
popf
and
push
testl
cmp
pop
adc
stos
fs
or
fisttpl
fistl
jmp
add
dec
adc
incb
loopne
add
cmp
lods
xlat
out
push
jp
inc
lcall
pusha
mov
jno
rorb
cmp
into
mov
mov
add
stos
push
test
dec
jge
xor
cwtl
push
es
adc
cmc
loope
pop
mov
xchg
xor
sbb
jnp
dec
in
xchg
out
sub
push
mov
cmp
add
or
mov
dec
cltd
ret
push
and
jecxz
inc
adc
mov
bound
lret
out
lahf
lds
push
adc
mov
adc
out
cmp
pop
fstl
xor
cmp
xor
mov
lahf
outsl
repz
add
ja
push
sub
repz
mov
std
adc
push
je
pop
jno
inc
push
xor
sub
int3
cmp
aaa
jl
pop
fistl
clc
loop
ljmp
pop
imul
data16
jmp
imull
push
pusha
les
pop
xor
or
inc
inc
cmp
sbb
fbld
ss
adc
mov
push
xchg
mov
mov
jmp
mov
lock
xchg
lods
addr16
sub
std
je
ss
loopne
int3
push
popf
sub
pop
in
xorb
xchg
add
or
mov
into
push
out
mov
jle
cmc
pop
inc
stc
push
pusha
sub
and
data16
js
and
shl
xor
dec
jo
push
cmpsb
jo
xchg
jecxz
mov
xlat
mov
xchg
push
jae
pop
nop
fcomps
cwtl
inc
xchg
or
orl
cs
nop
out
repnz
ss
icebp
lcall
in
in
push
xchg
push
or
fwait
cmp
or
jo
mov
icebp
out
add
popa
adc
sub
adcl
mov
mov
jb
push
outsl
mov
jp
std
push
mov
or
xlat
cmc
sbb
imul
mov
cli
outsl
mov
in
iret
jae
sbb
mov
jae
cmp
mov
sub
repz
lea
or
test
nop
in
hlt
push
mov
iret
jno
inc
cmp
fldpi
adc
hlt
lock
mov
sub
and
rorb
fidivrs
test
xorb
leave
adc
mov
adc
fadds
bnd
jle
mov
cmpsb
std
rcr
lods
addl
mov
adcl
lods
lss
adc
inc
push
imul
push
mov
rorl
push
sub
push
cmp
push
mov
push
aad
lea
lret
repz
inc
mov
add
lock
xchg
push
mov
lock
lea
sbb
pop
aad
dec
aaa
jns
jnp
push
outsl
decb
std
mov
shrl
lods
mov
mov
insl
push
push
inc
push
movsb
lds
mov
aaa
jno
xor
jecxz
out
xor
xorb
mov
cmp
daa
mov
mov
arpl
or
sti
xor
mov
gs
sbb
roll
nop
sub
pop
push
subl
cld
pslld
jp
lds
mov
push
adc
and
dec
mov
sub
and
outsb
ds
push
inc
push
les
jb
mov
lds
mov
gs
rclb
lret
arpl
xchg
aaa
mov
or
icebp
xchg
inc
mov
pusha
enter
dec
lcall
mov
dec
mov
jecxz
fcoms
daa
nop
cltd
ret
ret
xor
ljmp
stc
add
pop
push
and
sahf
mov
xchg
mov
inc
push
insl
inc
dec
mov
and
sbb
mov
aaa
pop
mov
pop
shrb
or
dec
testb
fsubs
mov
cltd
jp
jp
or
jle
mov
cwtl
jmp
es
leave
jns
mov
adc
testb
in
push
int
leave
shrb
jb
stos
sahf
push
and
cli
xchg
daa
lret
pop
adc
xchg
call
test
std
aas
sub
xchg
stos
rcl
call
je
mov
mov
or
mov
jne
aam
pop
out
sbb
shlb
cmp
sbb
fstpl
int
shlb
dec
rcrb
ret
rcrb
fiaddl
inc
negb
andl
adc
inc
int
xchg
movsb
inc
push
cmp
inc
mov
mov
mov
lock
shrb
popa
add
scas
lods
push
mov
call
mov
gs
stos
xorl
sbb
or
jecxz
pushf
int3
xchg
aas
rclb
push
sub
ret
insb
adc
mov
dec
lcall
enter
xchg
push
cmpsl
lods
je
sub
and
inc
dec
jbe
mov
cld
jae
xchg
ss
inc
mov
pop
mov
and
mov
xor
or
xchg
pop
add
int
sub
jmp
lret
iret
fldcw
push
add
lea
insl
sub
loop
sti
push
lds
and
sbb
mov
push
xor
mov
lret
inc
xchg
dec
push
xchg
test
int3
add
rorl
fsincos
pop
mov
sub
fisubrl
pushf
xor
mov
pop
mov
mov
pop
push
mov
dec
lcall
rcr
push
test
sbb
mov
xchg
sub
jle
mov
inc
icebp
mov
fistl
or
xor
sbb
cld
jns
jne
call
lret
mov
mov
mov
ds
pop
xchg
lods
adc
rorl
hlt
add
sub
sti
popa
adc
mov
xchg
scas
sub
les
rcrb
fsts
dec
cmpsl
and
incl
pop
lock
cmp
push
mov
in
mov
les
push
push
repz
cmpl
mov
push
add
pslld
and
jne
hlt
lock
jecxz
lret
int
outsb
inc
rclb
aas
lahf
push
xorb
orl
jecxz
xor
cmpl
pushf
frstor
pop
jle
dec
cmp
xchg
and
lret
push
pop
loopne
into
call
in
movsb
jl
imul
stos
orl
or
cmpsb
adc
or
addb
and
andl
mov
cmp
pop
ret
pop
mov
xlat
daa
stos
mov
jno
sti
push
movsb
je
cmp
cmpsb
hlt
jmp
dec
ljmp
sub
cs
adc
mov
dec
call
iret
aad
and
lret
xor
sub
imul
ljmp
lcall
clc
or
sbb
scas
mov
pop
dec
outsb
loope
insb
xor
aas
inc
fbstp
or
clc
mov
inc
stc
insl
fisubs
xchg
xchg
inc
stos
in
aas
sub
jbe
mov
xchg
xor
push
pop
cmpsb
and
mov
jo
stc
movsl
and
jge
sbb
dec
or
xchg
andl
cmp
imul
push
stos
fstl
inc
popf
adc
inc
nop
dec
add
sub
mov
push
popf
scas
ljmp
lock
roll
push
fbld
adcb
jge
add
xchg
or
push
jmp
ret
push
out
imul
loopne
mov
mov
mov
push
sbb
inc
hlt
fisttpl
out
jmp
ljmp
shrb
sbb
fnstsw
adc
sbb
jg
lds
ja
inc
jnp,pn
mov
into
out
nop
arpl
push
leave
xor
std
punpckhwd
push
sbb
test
lcall
add
pop
inc
fwait
push
aaa
scas
dec
inc
int3
fisubrs
rorb
mov
mov
cmp
jae
push
faddl
in
xor
xor
cmp
jbe
jbe
mov
fisubrs
and
cmp
lahf
dec
aam
test
dec
test
pop
ret
stos
mov
addb
and
xchg
adc
cmp
cmpsl
negb
add
in
adc
arpl
int3
divb
mov
aaa
shlb
jp
inc
lock
sub
mov
jne
aaa
xor
pop
rol
sub
scas
or
xchg
mov
push
sub
shll
xchg
in
nop
inc
push
cmc
lcall
add
lret
mov
lock
popf
mov
in
pop
jecxz
xor
loope
idivb
dec
add
addl
pop
sub
fcoml
insl
repz
sbb
mov
dec
add
inc
mov
fcmovu
std
xor
aad
scas
call
jp
pushf
add
jecxz
and
push
hlt
fstps
mov
xchg
pushf
test
inc
pop
or
sub
lods
js
fisubl
aad
mov
pop
sub
xchg
and
mov
fs
sub
dec
and
mov
scas
and
xchg
dec
add
mov
stc
test
inc
mov
adc
cli
jbe
div
push
cli
xchg
test
add
test
into
push
je
ret
mov
add
scas
xor
jne
fwait
movsl
push
lahf
insl
inc
sbb
or
sbb
ret
cwtl
inc
lcall
push
push
fucomi
shlb
cmpl
shrb
dec
sbb
fildll
mov
lret
out
aaa
imul
aas
popf
and
in
popf
aad
jmp
rolb
push
roll
imul
xorb
out
jp
pop
dec
lret
sti
in
cltd
push
fld
daa
cwtl
std
mov
push
push
jo
test
sub
dec
insl
cld
sbb
pop
stc
popf
pop
andb
and
rclb
fwait
sbb
loopne
inc
pop
ss
jbe
ss
push
popa
ja
sbb
push
cmp
mov
mov
cli
fisttpl
js
test
xchg
jo
mov
fyl2x
adc
push
outsb
sub
push
nop
aad
xor
or
add
mov
gs
fstl
or
mov
out
out
dec
lret
jnp
repnz
ret
lcall
xchg
push
movsb
cli
sub
std
mov
bound
adc
jne
cld
mov
mov
fistpl
mov
mov
mov
jbe
inc
out
jbe
mov
add
fwait
or
dec
dec
or
mov
rcrb
mov
jp
push
mov
sub
mov
push
mov
sub
cmp
jle
mov
repnz
int
mov
es
push
and
fcoml
nop
dec
stos
test
xlat
mov
lahf
inc
mov
add
sbb
cmp
push
push
or
jns
mov
xchg
mov
test
call
lods
xchg
sahf
shll
sbb
lcall
jae
cmp
out
in
xor
mov
js
and
xchg
or
std
scas
fxam
lret
add
gs
jg
rcrb
mov
adc
lahf
fadd
pop
das
lods
xor
sub
cmp
xor
cld
cmc
push
and
test
negl
test
mov
and
mov
mov
js
imul
shl
jl
inc
rcl
je
adc
pop
or
insl
fs
popf
jnp
fidivs
pop
daa
push
xchg
or
cmpsb
sbb
std
aas
sub
test
xor
pusha
rorl
pop
fistpll
push
rorb
arpl
ret
inc
xor
pop
roll
adc
loop
outsl
mov
push
sub
subb
pop
inc
xor
popf
shr
int3
jae
lfs
stos
es
shll
call
xor
mov
mov
negb
mov
lock
lock
cmp
push
add
sbb
and
inc
ret
sbb
mov
mov
mov
xchg
or
xchg
in
pop
shl
aas
dec
inc
loop
and
push
ret
add
push
fldz
rcrb
mov
test
push
dec
inc
mov
mov
or
test
into
fcmovnbe
ds
mov
into
in
ja
scas
xor
fwait
jmp
mov
hlt
add
loope
push
push
mov
fucom
xor
popa
jnp
out
movb
jns
dec
mov
ja
js
movsl
bound
push
lret
call
or
add
add
notl
xrelease
jne
jge
mov
iret
pop
jmp
xchg
pop
xor
cmp
push
mov
cld
inc
dec
jmp
mov
sarb
xchg
push
or
push
shrl
and
inc
inc
mov
jnp
les
cld
in
jb
lds
jo
mov
lret
or
div
push
pop
inc
pushf
in
and
outsb
mov
mov
mov
sub
mov
cmp
pop
jl
xchg
mov
and
pop
arpl
outsl
inc
mov
cmp
push
lods
stc
movsb
or
cmc
add
mov
push
imul
xor
shrl
shrb
fcomps
dec
mov
mov
mov
jne
jle
jo
loop
pop
and
subl
pop
and
push
cld
push
lock
xor
mov
repnz
inc
xchg
cmp
sub
cltd
jg
ss
xor
adc
and
imul
add
fnsave
dec
dec
mov
icebp
mov
nop
mov
inc
aaa
pop
cmp
mov
in
dec
xchg
je
xlat
xchg
and
cmc
push
cmp
ror
repz
sti
insb
je
xchg
int3
stc
cmp
or
mov
and
sahf
push
fmull
dec
stc
arpl
xchg
push
loop
dec
or
dec
inc
inc
xchg
je
inc
adc
pop
test
sbb
jge
movsl
mov
scas
addr16
insl
out
adc
cmp
stos
rcrl
cmpsb
sbb
pminsw
add
lods
popa
fstpt
wbinvd
out
or
inc
sbb
cmpsb
adc
ss
jecxz
inc
std
jnp
add
mov
pop
push
mov
push
adc
lcall
aas
popf
shlb
xor
ljmp
sbb
jg
loopne
js
int
rclb
movsb
jae
or
insb
mov
add
clc
scas
lret
mov
stos
push
mov
mov
cmovnp
xchg
in
or
jnp
mov
nop
insb
xchg
inc
shrb
cltd
pop
pop
call
sbb
out
xchg
les
cmp
inc
enter
jge
adc
jnp
xchg
loope
xchg
rdmsr
sub
jbe
ret
mov
cwtl
jae
sbb
inc
out
bnd
leave
jne
push
inc
lea
mov
cltd
xor
pop
fwait
cmp
shll
fildll
popa
mov
repz
data16
adc
out
add
push
lds
jg
xchg
xor
cli
addb
dec
shll
jo
insl
loope
cmp
mov
jnp
jo
pop
pop
out
lret
dec
je
sbb
adc
in
call
rcr
adc
aas
mov
scas
imul
shll
filds
xchg
scas
dec
push
inc
sti
dec
mov
sub
sti
loopne
dec
sahf
loopne
mov
shrb
je
add
xor
rolb
mov
fcmovnb
stos
mov
aam
aas
mov
xchg
adcb
fdiv
add
sti
in
xchg
sbb
repz
icebp
shll
cld
xor
pop
add
pop
add
add
fcmovne
popa
pop
jns
push
rcl
jp
inc
jo
out
neg
js
lret
mov
int3
cmp
or
sub
lahf
sub
xor
sbb
add
cltd
pusha
mov
push
popa
dec
aad
push
ljmp
mov
arpl
ret
push
pop
mov
pop
mov
aam
cmp
rorb
sub
inc
dec
sbb
or
push
lea
aad
icebp
sbb
das
mov
push
out
pop
rorb
inc
mov
andl
or
adc
lcall
add
pop
mov
push
add
lret
es
fchs
aam
iret
push
test
jno
cmp
inc
rcr
or
popa
dec
repz
std
mov
mov
push
adc
mov
xor
mov
fmuls
rcl
cmc
es
jle
scas
and
or
push
cmp
mov
xor
fcom
out
ds
or
sbb
mov
stos
push
je
movzwl
dec
popa
mov
in
xchg
sbb
mov
xchg
sub
dec
lret
jecxz
cmp
lds
imul
mov
mov
movsl
mov
int3
cld
outsl
mov
inc
fcoml
data16
es
shrl
push
fiadds
aas
or
aaa
jge
xor
mov
pop
cmp
repnz
lods
jmp
cmp
inc
mov
das
scas
cwtl
mov
sub
xchg
push
jg
and
rcr
adc
or
data16
ss
not
movb
data16
add
sbb
loope
xor
inc
int3
push
mov
sahf
sarl
mov
pop
pop
cltd
pop
pusha
sub
inc
rcll
xor
push
push
imul
cmp
repz
fdiv
ja
cwtl
mov
movsl
dec
or
jae
test
in
fnstsw
data16
bound
negl
inc
insb
fucomp
adc
mov
jb
outsb
imul
test
jnp
mov
cld
js
sub
out
xchg
clc
insl
adc
fsub
inc
cmp
mov
das
scas
ja
lret
mov
mov
aad
sbb
rclb
ss
jmp
jecxz
inc
cmp
popf
xor
sbb
push
sbb
adc
cmp
cmp
fstps
dec
push
fisubl
insb
adc
in
dec
xor
inc
out
jns
mov
je
fimuls
push
push
xlat
clc
adc
jl
add
sahf
jecxz
inc
les
inc
sti
fmul
push
imul
cmc
adc
lds
ret
add
jecxz
fadds
call
dec
pop
dec
mov
cs
jle
cmpl
inc
pop
sahf
dec
and
stos
popa
js
mov
and
mov
fs
test
jnp
pusha
ficoms
pop
adc
pop
fistps
xchg
mov
subl
sub
sbb
lods
inc
cmp
lret
cltd
mov
mov
xor
mov
adc
push
addr16
dec
pusha
pusha
lldt
mov
daa
jle
xchg
frstor
cmc
adc
push
push
sub
clc
jp
mov
pusha
jecxz
xchg
std
insl
mov
push
sbb
std
adc
mov
stc
mov
cli
xchg
mov
movsl
hlt
jb
dec
ret
jo
cli
addr16
sub
and
cmp
mov
sti
nop
movsl
scas
sub
scas
xchg
or
mov
out
fadds
les
mov
gs
adc
cwtl
stc
fistps
sbb
mov
insb
jae
xor
ja
mov
aaa
enter
dec
mov
and
lret
mov
int
mov
mov
mov
dec
or
outsb
out
cmp
mov
adc
aad
je
aad
out
fnstsw
mov
cs
ds
jl
fdivrs
adc
stos
imul
gs
cmp
pop
shll
xchg
lahf
push
and
leave
rcrb
fcoml
push
push
lahf
jmp
add
int3
jae
pop
jl
or
cmp
xlat
sub
inc
sbbl
adc
insl
or
xchg
or
lahf
jnp
add
mov
fsubl
fcomps
jg
notl
jecxz
xor
mov
xor
push
add
lods
push
aad
mov
dec
faddl
jae
shrb
cmp
rorb
jl
mov
lahf
fstpl
lcall
ds
test
jmp
fldt
inc
subl
or
push
leave
loop
shrb
call
or
cli
jb
lcall
pop
mov
decl
ret
mov
mov
dec
pusha
sbb
mov
xor
cmpsl
int3
or
mov
out
in
in
leave
movb
out
xchg
inc
cmp
sbb
dec
sbb
push
shrb
xlat
fcompl
aas
mov
testl
pop
xor
mov
ljmp
push
fld
mov
sub
pushl
dec
add
out
cmp
mov
fdivl
push
xchg
data16
nop
popa
mov
or
and
sahf
insl
adcb
push
push
mov
out
call
xor
jbe
int
inc
lret
and
ljmp
arpl
mov
fisttpll
sti
cmpsb
rcll
push
fdivrs
lods
inc
sbb
mov
mov
sub
push
lods
rcrb
or
jmp
aas
imul
sbb
xor
lds
stos
inc
push
popf
das
pop
mov
aaa
popf
jne
jge
push
ficompl
sbb
push
jno
xchg
or
les
dec
dec
sahf
mov
jb
jmp
adc
add
mov
popf
clc
loop
scas
mov
sub
in
loopne
mov
addr16
sbb
pop
push
inc
add
popf
test
stos
mov
scas
inc
dec
ret
or
mov
lock
sub
dec
add
dec
mov
daa
sahf
lea
repz
fcmovb
ljmp
inc
dec
jne
adc
sub
sub
and
jnp
into
mov
fimull
xchg
add
jmp
push
inc
sar
lret
cmpsb
cwtl
scas
jnp
fs
sub
imul
imul
call
inc
or
scas
mov
dec
inc
xchg
inc
xchg
sahf
lahf
stos
sub
dec
dec
adc
cs
lcall
mov
pop
sbbl
mov
and
mov
orb
inc
in
cmc
add
mov
inc
subb
mov
fdiv
adc
and
sbb
loop
push
mov
mov
lods
lret
loopne
mov
jne
movsl
pop
sbb
jg
rcrl
dec
shrb
ret
lock
lcall
mov
jmp
mov
lret
fnsave
punpckldq
inc
push
jecxz
jne
and
movsl
mov
jne
lea
les
dec
hlt
mov
out
xor
das
and
pop
out
dec
pop
lock
loope
cmp
gs
ret
test
insb
adc
dec
jge
popf
or
test
sbb
mov
push
out
jns
int3
std
mov
subl
push
push
xlat
add
sub
scas
and
mov
jmp
push
das
rorb
mov
repnz
mov
dec
shl
rolb
and
or
push
lret
or
or
dec
lods
inc
vpsadbw
jb
out
aaa
cmp
shl
add
cmp
mov
push
add
pop
jmp
hlt
mov
jmp
lds
movsl
outsl
mov
aad
lahf
bound
and
pop
cmovne
xor
mov
mov
cmpl
push
cltd
mov
clc
fadds
ror
jbe
pushf
jnp
adcb
pop
sbb
push
mov
loop
mov
push
mov
pusha
loope
sub
divl
cmp
push
add
les
ds
gs
jbe
jl
inc
dec
mov
pop
mov
inc
lds
lret
push
push
and
pusha
adc
xchg
dec
rclb
dec
hlt
mov
testl
enter
mov
xchg
in
fiadds
and
mov
arpl
cmp
xchg
sbb
cmp
add
lock
ss
jle
cld
mov
inc
xor
pop
inc
loope
push
jecxz
orb
rcr
imul
test
lret
addr16
fucomip
or
pop
mov
dec
mov
aad
jno
mov
push
lcall
fmull
xor
icebp
xor
add
mov
cwtl
inc
scas
orb
jno
loopne
sub
in
push
mov
sub
jb
outsl
js
addr16
in
or
hlt
in
add
sbb
add
nop
out
dec
jg
out
push
ret
fidivl
dec
js
add
push
leave
mov
cli
sub
pop
andb
push
xor
pop
sub
inc
ja
sahf
ss
fidivl
out
push
filds
xor
imul
sti
or
cmpsl
pop
xchg
fadds
mov
out
gs
das
loopne,pn
jno
inc
cmpsl
mov
dec
int3
pusha
sti
jmp
nop
inc
mov
gs
add
out
subb
xor
jg
mov
test
rdpmc
sbb
lea
int3
cmc
mov
pop
in
xchg
jbe
mov
pushl
xchg
xchg
aaa
aam
dec
fdivrl
lret
js
call
shl
int
xchg
int
rclb
mov
jne
mov
adc
lds
movsb
aas
mov
dec
ret
into
push
push
mov
div
in
and
mov
in
pop
sbb
fmuls
push
js
mov
push
fcmovnu
or
sub
jmp
psubusw
int
out
addr16
fs
xchg
jl
filds
aad
jb
jge
pop
scas
fisubl
ds
pushf
push
data16
aas
sub
negl
cmp
sub
lea
mov
stc
vmaxsd
and
cli
aam
push
xchg
pop
cli
outsb
in
xchg
mov
xor
imul
push
push
push
bound
das
jge
cltd
hlt
cli
jns
daa
fistpll
lods
adc
add
nop
xor
test
repz
clc
fisubrl
mov
mov
lret
cmp
daa
add
push
mov
push
push
fdiv
fsts
sub
cmp
jp
add
int3
int3
cmp
mov
xor
ret
loope
pop
sbb
inc
inc
test
mov
mov
inc
lret
repnz
imul
mov
stc
hlt
jle
pop
iret
stc
popa
mov
jbe
mov
test
mov
jp
pushf
fcompl
movsl
push
testl
stos
movsl
mov
push
add
and
popaw
push
mov
mov
mov
cwtl
cmc
cs
fs
xchg
aas
in
sbb
dec
lret
out
mov
xchg
inc
aaa
mov
aad
inc
jg
adc
pop
xorb
data16
jo
cmp
fnstenv
cmp
cwtl
inc
sbb
inc
incb
sub
stos
add
dec
ror
cld
and
mov
xor
inc
lods
lock
repnz
mov
call
aam
inc
or
inc
adc
js
cmp
loope
jnp
or
or
test
adc
movsb
jne
xchg
pop
jo
arpl
ret
nop
fbld
lahf
push
arpl
ret
sub
sar
mov
sub
inc
inc
loop
imull
or
imul
or
push
movsl
lock
jp,pn
sbb
insb
fiaddl
int
xchg
sbbb
or
jecxz
loope
push
jnp
jmp
and
icebp
stc
mov
xlat
vpunpcklbw
xor
rorl
sbb
push
jp
std
rcr
inc
pop
cmp
dec
jg
sbb
mov
push
lahf
xor
xor
mov
dec
shll
mov
imul
sub
cmp
jp
jno
xor
dec
sbb
mov
xlat
adc
adc
mov
movl
std
fldl
lahf
or
orl
inc
add
mov
mov
jbe
cli
mov
mov
pop
mov
incl
sub
or
pop
dec
and
jae
jo,pt
pop
in
and
or
dec
inc
and
mov
cs
mov
xlat
scas
notb
xchg
add
dec
push
stc
xor
icebp
stos
aam
movsb
and
push
ret
mov
bsf
loop
sub
ret
add
jl
pop
jne
add
push
rorl
enter
jb
stc
mov
repz
pop
jo
es
pop
dec
jo
test
movsb
incb
fcmovnu
shlb
jo,pn
lahf
aaa
mov
das
mov
bound
lret
inc
test
dec
mov
mov
mov
jb
push
call
iretw
or
push
mov
sub
pop
jb
sbb
push
out
pop
fs
xchg
sbb
inc
sti
dec
and
mov
aam
pop
adc
jg
call
add
insb
mov
push
aam
sub
mov
dec
out
stc
hlt
les
bound
mov
push
push
arpl
pop
push
mov
lods
inc
fisttps
movsb
icebp
lds
lret
mov
sub
pushf
jbe
jmp
pop
orb
outsl
or
scas
sub
mov
mov
stc
jle
mov
push
in
cltd
mov
outsb
lods
jne
xchg
or
ss
pop
ret
std
fbstp
mov
scas
cmpsl
lods
jl
jge
je
pop
lret
dec
pushl
pop
sbb
cmp
dec
lcall
inc
mov
dec
loop
push
push
movsl
mov
sub
or
jle
fwait
xchg
add
enter
cmc
and
sbbb
loope
sbb
xchg
dec
adc
add
scas
stos
lret
inc
or
mov
rol
repnz
mov
dec
iret
push
pop
pop
gs
jg
jecxz
xchg
add
xchg
je
push
pusha
dec
jl
mov
mov
daa
cmp
aam
sbb
mov
adc
ret
or
inc
pushf
loope
js
fcmove
das
mov
sbb
fidivrl
adc
pop
xorb
xlat
shrl
pop
fstl
call
imul
ss
aaa
add
push
sub
or
mov
addb
sub
mov
aas
call
pushf
ja
mov
xchg
roll
pushf
cmp
push
lds
decb
mov
dec
pop
push
adc
cmp
std
mov
mov
insl
push
das
ffree
icebp
add
sbb
xorb
jno
sbb
fiadds
xchg
stos
sbbl
pop
mov
inc
dec
fadd
insb
enter
mov
push
mov
mov
iret
mov
sbb
cld
insl
push
scas
push
aam
int3
mov
sub
sbb
cmpsl
push
mov
pop
jecxz
push
loope
sbb
push
pop
lods
mov
negl
andb
add
xchg
jmp
xchg
rorl
in
sub
or
mov
pop
std
pop
xor
movsl
in
cmp
test
push
cmc
pop
cmpsl
cltd
ss
pop
fcomps
pop
adc
insb
inc
mov
test
das
idivl
fbstp
scas
popa
pop
fsubl
aas
bound
and
pop
out
push
jle
ljmp
dec
movsb
mov
or
js
pop
mov
ret
pop
or
sub
jae
mov
nop
mov
ds
pop
movsb
pop
in
mov
movsl
pop
xor
lea
cli
arpl
gs
add
inc
push
aam
mov
fst
cmc
mov
adcb
adc
push
push
ret
inc
loope
mov
cli
mov
push
sti
mov
push
push
fwait
ljmp
out
mov
leave
mov
sti
ffreep
adc
sti
ret
in
test
xor
ljmp
cmp
jle
sbb
xchg
pop
aam
xlat
scas
add
out
ret
pop
inc
out
mov
inc
cpuid
xor
jmp
mov
pop
jge
add
loope
sub
pop
push
test
enter
cmp
orb
pop
and
clc
data16
iret
dec
ss
ss
push
adc
shlb
mov
pop
int3
push
jp
and
je
leave
rorl
ljmp
scas
sarl
push
xor
aad
imul
imul
mov
xchg
loope
fwait
mov
push
push
cmp
imul
insl
sub
adc
mulb
imul
push
lods
jns
adc
mov
imul
sbb
inc
cld
in
aam
mov
js
imul
xor
mov
jle
fucom
out
mov
jns
add
roll
rcrb
clc
fstps
adc
push
in
cli
push
mov
or
xchg
pop
ljmp
jno
imull
push
fwait
mov
mov
scas
sub
lret
ja
pushf
mov
rorb
fcoml
add
ljmpw
pop
push
cmpsb
data16
mov
mov
lods
or
out
xchg
js
push
mov
les
lahf
loope
cmp
pop
jmp
mov
aad
xchg
xlat
out
mov
push
mov
push
dec
mov
jg
jno
dec
insl
jmp
cmp
pop
aaa
lea
adc
cmpb
xlat
push
js
sub
dec
add
es
pop
in
push
repnz
xor
push
jp
sub
lcall
dec
or
mov
xchg
jecxz
push
add
and
test
xor
cmp
jecxz
clc
xlat
xchg
insb
mov
pop
sub
pop
aad
aad
jne
std
out
js
add
or
cli
lea
lock
lahf
sarb
ds
cli
cmp
mov
xchg
data16
scas
dec
sbb
test
popf
mulb
bnd
fwait
sub
out
insb
inc
aas
fistps
dec
sub
cmp
adc
jge
and
cmp
mov
push
dec
xchg
xchg
loopne
cmp
or
and
sbb
mov
add
shrl
aam
in
int
in
mov
pop
das
cmc
adc
out
xchg
inc
out
sbb
mov
mov
mov
xchg
lock
or
out
fcompl
nop
lcall
insb
mov
lods
stos
jp
inc
jne
outsb
cwtl
ret
push
loop
lcall
inc
sub
pop
aas
cmp
xor
out
sbb
inc
arpl
out
inc
js
daa
inc
mov
js
hlt
test
ficoml
es
loope
jo
jae
mov
or
loopne
xchg
ja
and
mov
sbbb
dec
and
pop
popl
dec
arpl
std
call
lret
lods
enter
jge
push
les
es
pop
mov
fnstenv
xchg
xchg
icebp
jbe
lret
popa
fs
mov
inc
popa
es
jge
inc
sahf
add
lahf
loop
mov
test
xor
mov
loope
das
jmp
faddp
push
jne
imul
xlat
add
cmpsb
popa
push
jle
fstps
push
mov
fidivrl
jp
addb
sub
inc
xchg
push
dec
ljmp
pop
call
mov
inc
cltd
lds
aaa
jnp
add
in
aad
mov
pop
mov
sub
adc
add
loopne
aam
mov
push
bound
test
dec
roll
jns
loop
cmp
xchg
in
in
std
ja
popf
push
sbb
mov
or
das
lods
int
je
shll
das
mov
cmc
dec
mov
rorl
out
jae
and
shlb
ret
pop
add
sub
dec
js
fiadds
xchg
xor
enter
sahf
ficompl
neg
shrl
mov
pop
push
or
xchg
jmp
lcall
sarb
push
mull
add
faddl
add
and
hlt
repnz
int3
mov
popf
cmp
adc
xchg
dec
bound
sbb
fwait
loop
das
xchg
popf
jae
clc
xor
fwait
loop
sub
cld
mov
inc
sbb
cmp
mov
sub
xor
aaa
cmp
and
lret
jbe
rcr
ret
inc
cwtl
ja
insl
int3
or
rcrb
adc
aas
cmp
mov
add
mov
outsl
inc
sbb
out
mov
out
cltd
fsubs
aad
imul
and
push
jmp
jne
pop
xlat
jp
add
sbb
std
in
mov
mov
lock
lret
mov
push
cmpsb
mov
imul
dec
mov
fs
xchg
pop
jnp
fsts
xchg
and
pop
rol
scas
cmc
mov
mov
movl
cs
out
cmp
push
adc
int
xchg
and
inc
xchg
int3
enter
insl
dec
pop
and
push
sti
xchg
mov
cs
add
mov
sarb
push
mov
inc
jb
mov
fwait
cld
loop
mov
out
mov
mov
insl
mov
jp
lock
sbb
or
mov
or
shlb
ss
fcomp
out
push
jne
and
rcr
fimuls
and
push
pop
cmpsb
lds
push
fs
pusha
pop
pushl
jae
ss
inc
stos
lahf
scas
rorb
icebp
ja
push
cwtl
mov
push
test
add
in
xorl
sub
jne
or
mov
roll
es
jnp
gs
lret
adc
icebp
data16
jb
pop
sbb
sub
xchg
gs
fstl
or
pop
int3
rorb
mov
jae
int
vprotb
in
idivb
mov
ds
cmpsb
ljmp
leave
push
sbb
jb
leave
xor
xor
push
mov
xor
pop
jns
mov
lods
mov
bound
arpl
xchg
into
testb
outsb
int
clc
mov
scas
out
xchg
cmpsl
testl
add
adc
mov
mov
cltd
mov
xor
sbb
xchg
dec
ljmp
xchg
rol
mov
inc
xlat
push
pop
jbe
lds
jno
mov
stos
movsl
mov
cld
xchg
lea
movsl
xchg
fistpl
dec
push
popa
pusha
sub
fisubrs
add
shr
sub
ret
mov
adc
mov
dec
mov
aad
inc
push
add
lods
jae
ja
cmp
orb
rorb
je
mov
in
sub
int
stc
cmc
mov
imul
test
pop
cld
aas
push
jnp
aam
cltd
aam
pop
push
pop
sbb
iret
repnz
cmp
lods
rorl
aam
sub
mull
movups
loop
fstpl
ljmp
push
and
out
ja
rcrb
in
xor
and
ds
sub
and
push
xchg
add
enter
cmpsb
insl
in
call
scas
xor
or
jg
push
sbb
jecxz
ja
sub
invd
in
fwait
xchg
adc
pop
dec
int3
and
ret
cmpsb
fbstp
pop
cmp
or
mov
mov
sub
pop
push
mov
xchg
push
negb
inc
sub
inc
sbb
cmp
cvtpi2ps
stos
movsl
sbb
mov
fcmovu
xor
cmp
arpl
stc
inc
scas
push
nop
and
ror
aad
mov
out
subb
nop
pop
leave
push
int
aaa
sbb
push
inc
lahf
mov
idivl
inc
fldt
sti
jle
dec
ss
or
xchg
sbb
mov
inc
pop
sbb
add
mov
loopne
int3
daa
and
call
icebp
lods
mov
and
adc
xchg
dec
mov
ss
test
push
sbb
or
mov
jg
daa
cmpsl
cmp
jbe
push
imul
jne
pop
mov
popf
inc
or
gs
ret
adcl
mov
xor
lods
call
jo
decb
xchg
xor
pop
jle
movsl
mov
mov
dec
push
pop
cltd
inc
xor
lcall
les
adc
leave
shlb
arpl
xor
adc
sbb
xchg
xchg
clc
cmpsb
mov
repz
fsubr
mov
fs
xor
mov
pop
idiv
mov
movsb
mov
inc
cmpb
push
hlt
outsb
jo
out
jle
popa
mov
xchg
es
lds
loopne
bound
pushf
pushf
lahf
sub
xchg
imul
jl
jae
push
mov
in
jecxz
aad
out
hlt
scas
rorl
insb
mov
imul
hlt
lahf
fsubrl
pop
repnz
cmp
cmp
xor
push
add
push
sahf
pop
xchg
jle
jle
mov
mov
insb
mov
push
sbb
call
ret
ja
sti
jne
scas
decl
loop
xchg
sub
bound
out
jmp
mov
rcl
push
lret
test
cmpsl
jb
fstpl
insl
jno
sub
cli
mov
dec
push
cld
dec
cmp
or
lock
sbb
sahf
test
xchg
aas
imul
ljmp
add
jnp
inc
mov
lock
dec
xor
push
or
lods
fstps
and
sub
jns
cmp
aad
mov
cmc
addb
xlat
cli
adcb
pop
pop
cmovae
lret
lods
jecxz
ljmp
mov
aaa
dec
lret
das
clc
inc
iret
sbb
enter
imul
push
inc
std
and
lods
or
pushf
lahf
and
push
ret
xchg
push
clc
jb
inc
pusha
dec
and
daa
ret
mov
dec
cli
pop
xchg
in
scas
jl
xchg
out
mov
xor
sub
pop
into
cs
ljmp
lret
cwtl
loopne
icebp
pop
vunpckhpd
enter
sbb
insl
gs
lcall
sbb
nop
adc
nop
sub
pop
jecxz
adc
mov
sub
out
lret
or
push
cs
imul
mov
pusha
addr16
cmp
and
or
mov
adc
inc
mov
mov
mov
out
jo
dec
jo
inc
fsubrp
fadds
ret
fidivrl
mov
fsub
sbb
sub
adc
cltd
cmp
cmp
adc
mov
xchg
cmc
cltd
lret
sbb
aam
adc
push
xchg
pushf
xor
jb
add
fsts
cmpsb
lret
stc
mov
insl
adc
dec
and
addr16
dec
movsl
mov
and
dec
jnp
pop
aam
call
mov
xor
jmp
pop
clc
out
inc
dec
fwait
mov
xor
fwait
cmpsb
inc
xchg
movsb
das
cmc
enter
pop
cmp
gs
ficompl
jo
bound
push
sahf
fsubrp
xlat
int
fimull
sbb
push
std
inc
mov
mov
sbb
jo
push
cmp
mov
xlat
pop
fcmovb
imul
pop
inc
out
xlat
dec
xchg
jmp
lcall
or
push
dec
sub
int3
repnz
test
lock
or
fcomp
add
test
cmp
jl
insl
pop
pop
andl
enter
daa
pop
aam
inc
sub
dec
hlt
out
loope
mov
imul
fiaddl
loop
inc
dec
mov
or
xchg
pop
jmp
mov
fisubs
xchg
mov
fsubrs
push
shrl
icebp
jnp
into
cmp
mov
bound
ljmp
sbb
sub
fstpl
insb
ds
and
jp
lret
mov
movsb
and
aam
sub
sahf
sub
in
inc
pop
adc
iret
sbb
mov
push
jp
sub
xchg
and
aas
cmc
push
lock
call
insl
sahf
idivb
popa
les
add
cmp
pop
push
cltd
xlat
bound
cs
fsubl
lods
mov
sub
dec
popa
rcl
mul
pushf
push
mov
jle
cmp
shrb
mov
lea
outsb
incl
out
daa
pop
mov
mov
sub
in
insl
leave
mov
push
mov
xchg
aaa
les
sahf
jbe
jb
nop
xchg
movsl
lahf
mov
lahf
mov
or
jo
clc
test
and
std
mov
imul
xlat
pop
ret
decl
xchg
mov
addr16
aad
jg
or
fnsave
xor
mov
inc
jl
ds
out
push
mov
cmp
cmp
mov
or
ja
loope
sbb
sub
test
inc
xchg
iret
call
rcrb
cld
icebp
outsl
xchg
xchg
mov
lahf
aaa
iret
sahf
and
dec
je
in
mov
mov
pslld
and
insl
ret
inc
ret
jg
inc
jmp
xor
outsl
xchg
sbbb
ret
cwtl
shll
mov
sub
imul
daa
add
xchg
push
pop
jg
add
in
jb
jle
cld
shl
sub
in
lods
mov
cmc
sahf
sub
xor
cmp
out
or
mov
fucom
mov
jae
sahf
push
fildll
addr16
push
push
add
push
or
aas
dec
fcoml
mov
rolb
add
sti
lock
jo
mov
orb
ret
out
out
test
xchg
xchg
jmp
or
test
mov
pop
testl
test
sbb
cli
jp
fmul
pop
and
adc
ret
es
iret
sub
xor
loope
and
xor
lret
inc
loope
mov
mov
ret
loope
adc
and
pusha
fs
pushf
push
arpl
sti
aam
fs
cmp
pop
fcmovne
mov
stos
orb
fstp
push
pop
hlt
jmp
cs
cmp
cmp
popf
outsl
mov
sbb
aam
cli
sub
in
out
adc
pop
pop
jae
test
outsb
push
es
pusha
fildll
push
fisttpl
pop
sub
cmp
inc
jecxz
sbbb
icebp
es
fldt
lret
mov
fldcw
adc
push
adc
push
outsl
xchg
ss
jle
jecxz
inc
lds
inc
mov
or
fldenv
test
test
shlb
jae
pop
pop
sub
cwtl
push
push
mov
dec
jae
movsb
xor
sub
adc
or
out
mov
lods
sub
fwait
jg
pop
out
cltd
mov
or
dec
adc
mov
mov
cmpb
in
jne
movsb
ljmp
dec
jmp
sbb
ljmp
mov
sub
fcmovnu
xor
nop
repnz
std
in
push
sbb
lds
fcmovu
push
fcmovnbe
imul
add
subb
out
ret
sbb
xor
mov
nop
mov
mov
mov
outsb
in
push
cli
rcll
ljmp
and
inc
sub
jno
mov
lds
push
into
sar
sbb
or
pop
sbb
loop
outsb
std
mov
sbbb
cmp
inc
cmpb
in
cmp
insb
jl
es
inc
pusha
faddl
sub
test
aad
cmp
adc
int3
mov
cltd
dec
xchg
inc
fnsave
lock
mov
pop
jmp
or
hlt
out
mov
cmp
jae
sbb
mov
jg
cltd
sub
imul
sbb
lds
inc
int3
mov
cmp
mov
test
push
loopne
gs
or
or
int3
lea
mov
movsb
sarl
cmp
psubsb
ss
mov
shl
je
sti
push
popf
mov
ret
mov
int3
sub
int3
jl
inc
cmpsl
lds
outsb
cmp
iret
jbe
mov
jnp
pop
inc
and
xchg
ja
pop
or
lret
jo
add
pop
popa
dec
mov
rclb
or
mov
adc
jp
sbb
fdivs
mov
inc
push
mov
jge
or
add
clc
xor
scas
insl
popa
inc
xchg
insb
sub
fcos
mov
pop
arpl
inc
mov
add
in
out
fmuls
and
pop
arpl
inc
cs
jns
test
das
fmull
sbb
jge
sbb
loop
xchg
cli
jo
pop
cmp
ss
xchg
sbb
sti
clc
xor
and
adc
rcl
cmp
int
xor
stos
xchg
inc
and
jno
cld
in
sti
mov
scas
mov
into
inc
into
cmp
or
outsb
fcom
sbb
xchg
je
mov
mov
and
dec
and
pop
fists
mov
test
mov
in
jle
mov
aaa
add
es
jp
dec
mov
icebp
push
pop
push
fdivl
adc
xor
sbb
in
cs
pop
push
lds
test
xlat
outsl
ret
sbb
push
out
sub
inc
adc
cltd
mov
adc
mov
test
cmp
mov
sub
jl
aas
sub
push
pop
jecxz
enter
int3
movsl
cmp
insb
notl
adc
sbb
aam
das
call
xor
pop
adc
in
ret
cmpsl
scas
popf
jecxz
ret
cwtl
int3
xchg
inc
int
adc
aas
mov
xchg
call
adc
outsb
jno
xchg
xlat
cmp
sub
loope
sub
pop
outsb
stos
dec
aad
imul
pop
ljmp
pop
sbb
icebp
out
dec
cmp
cltd
xchg
div
lds
outsl
rclb
lods
dec
arpl
mov
xor
lods
xorl
imul
aam
insl
mov
imul
adc
mov
adc
mov
repnz
mov
scas
mov
das
dec
xor
shlb
call
add
dec
add
jns
adc
lret
xchg
inc
ret
cmpsb
dec
mov
jmp
loop
lcall
mov
cmpsl
testb
daa
jb
pop
ja
sbb
andb
push
sub
ja
add
mov
sbb
andb
mov
push
adc
mov
adc
movsl
pop
sbbb
ja
cmp
jg
adc
imul
insl
rclb
jbe
lock
and
add
mov
in
dec
dec
xchg
xor
jb
add
xchg
adc
out
lret
adc
jmp
cmp
or
cmc
xor
data16
xchg
mov
fsubl
adcb
aam
dec
pop
out
xor
mov
adc
fbld
pusha
fistpl
lahf
mov
jge
test
shll
scas
cmp
jbe
ror
push
movsb
sbb
inc
mov
fnstsw
scas
pop
mov
xchg
dec
fdivrl
pop
scas
dec
aad
jb
push
notl
imul
je
and
ret
stos
or
fcomps
inc
cmp
inc
leave
xchg
fwait
stos
hlt
push
cmp
mov
movsl
pop
stos
pop
inc
fdivr
jne
adc
mov
fsubs
jae
jmp
out
inc
dec
test
cmc
cmp
loop
imul
jo
cmpsl
inc
dec
imul
or
fcompl
pop
xor
mov
or
fcmovnu
push
push
mov
call
orb
clc
int
mov
int
rolb
inc
dec
push
jp
lods
sub
push
test
and
jle
lock
or
lret
call
rcr
mov
jno
icebp
in
mov
iret
push
mov
ror
stos
movsb
imul
dec
daa
pop
dec
shrl
push
ljmp
push
fxch
adc
lret
outsb
or
loop
jmp
imul
int3
outsb
lahf
push
ret
add
mov
cmp
lods
add
jl
pop
jno
jne
and
lds
shll
pop
gs
cmc
and
push
js
out
mov
mov
add
out
mov
fisubrl
mov
enter
or
xchg
inc
leave
mov
ss
mov
xchg
mov
sbb
mov
inc
outsl
add
push
cmp
push
adcl
pop
mov
inc
ds
test
push
dec
shrl
push
dec
in
lods
pop
iret
gs
pop
mov
lcall
les
mov
ljmp
fsubrl
cmp
inc
loope
outsl
imul
das
jno
cmp
nop
mov
jnp
adc
sub
xor
push
inc
mov
xorl
cld
mov
out
dec
sqrtps
test
mov
mov
lds
add
lods
sub
js
test
fs
jp
repnz
adc
mov
test
jne
jbe
or
repz
pop
xchg
loopne
mov
mov
stos
add
jge
gs
vmaxsd
imull
mov
in
lock
sub
outsl
add
add
or
adc
add
out
gs
lea
pop
lret
mov
dec
or
push
sub
in
push
test
cmp
or
lods
lds
mov
push
psubusb
lahf
mov
shrl
dec
in
fnstsw
daa
fbld
hlt
scas
xor
shlb
jnp
pop
mov
mov
cmpsb
hlt
popf
inc
mov
call
jmp
mov
and
je
push
loopne
xchg
push
push
adc
cmpb
inc
or
adc
pop
xor
push
repz
pusha
addr16
pop
xchg
incl
icebp
cli
mov
fcmovnu
nop
pop
cli
and
in
repz
dec
lcall
leave
pop
stos
push
inc
push
dec
or
mov
ret
das
es
mov
push
hlt
pop
xchg
xchg
sub
cmpsb
in
jl
mov
xchg
sbb
xchg
push
push
xor
out
mov
fwait
dec
popa
add
sub
jae
cmp
lcall
fiaddl
cmovb
add
pop
in
insb
xchg
out
movsl
add
inc
mov
or
ret
loop
and
mov
inc
outsb
or
fwait
add
jo
dec
xor
adc
sub
sub
lahf
cmp
stos
pop
sahf
stos
xor
jge
pusha
out
or
insb
data16
shrb
out
jno
lock
fwait
mov
dec
sub
lea
les
sbb
stos
mov
stc
inc
xchg
xchg
jnp
ret
dec
adc
arpl
in
lret
scas
in
pop
les
push
adc
jmp
push
pop
and
mov
mov
nop
push
adc
pop
mov
jl
jo
imul
out
sub
mov
jmp
add
push
inc
inc
inc
aaa
pushl
fsts
pop
dec
aam
lods
out
lea
pop
cs
jle
sub
fnsave
pop
in
aad
je
mov
cmp
mov
outsl
arpl
data16
push
jp
cs
jp
mov
cmp
test
sbb
fstpt
ja,pn
stc
fsubrs
cwtl
add
pushf
imul
in
nop
ffreep
and
dec
cmp
push
mov
sahf
pop
test
push
test
push
pop
fildll
stos
adc
lods
push
xchg
aaa
xchg
pop
mov
cmp
out
jo
jbe
stc
ljmp
leave
mov
mov
pop
xchg
mov
mov
jno
xor
ljmp
stos
repz
rcrl
xchg
in
jno
clc
xchg
add
fcomps
repz
das
xor
push
shlb
gs
iret
sub
push
iret
inc
push
mov
mov
das
inc
std
jmp
and
data16
lods
pop
and
stos
adc
pusha
nop
mov
mov
sub
inc
jl
mov
sbb
fdivl
aad
xchg
out
sbb
out
push
out
dec
mov
push
mov
mov
test
aaa
jmp
and
sti
lret
push
sbb
lcall
and
push
shrb
or
lods
mov
rorb
das
ret
sbb
and
int3
mov
jnp
cmpsb
mov
mov
lea
pop
xor
adc
xor
jae
sbb
mov
dec
int3
pop
xchg
cmp
lods
push
adc
mov
jmp
pop
insl
mov
jge
popa
xor
shrl
test
and
pop
jl
jle
inc
fxch
cmp
jmp
in
xchg
repz
cli
popa
push
add
sub
mov
sbb
sub
push
cmpsb
xor
shll
mov
inc
ja
inc
dec
sbb
xchg
rclb
sub
adc
cmp
gs
xor
jno
dec
repnz
pop
pop
inc
sbb
or
add
enter
mov
push
cmp
push
lock
add
rcl
inc
pop
or
xor
or
sbb
push
adc
outsl
xchg
push
jle
fwait
mov
xchg
dec
inc
jno
stos
aam
ds
ret
sub
adc
adc
mov
adc
loop
je
fdivs
out
or
cmc
sbb
aas
out
jge
jne
sbb
adc
orl
movsb
add
sub
insl
cmpsb
lods
adc
add
adc
sub
ds
ds
xor
lret
pushf
pop
sarl
repnz
ret
mov
pushf
fs
cmc
loopne
mov
push
scas
int3
ds
bound
repnz
in
pusha
mov
push
xchg
out
xor
mov
jne
insl
sti
mov
imul
mov
movsl
pop
adc
pop
pushf
jp
inc
js
cmp
sub
adc
hlt
mov
jle
add
push
leave
and
push
sbb
sbb
push
lret
aas
subb
neg
push
xchg
cmc
ljmp
shll
mov
mov
push
dec
mov
or
or
stos
or
inc
mov
mov
jg
push
call
push
xchg
pop
sbb
and
aas
fnstcw
jae
xor
fnstenv
pushf
inc
adc
mov
sbb
test
add
or
mul
jne
lods
adc
ljmp
inc
test
push
jp
adc
and
int3
fwait
inc
aas
gs
pop
dec
leave
xor
dec
dec
xor
pop
pop
mov
iret
mov
mov
int3
jp
cmp
pop
mov
sbbb
insl
pop
adc
mov
loopne
leave
or
mov
mov
push
bound
movsl
fdivrs
scas
xchg
xchg
mov
fs
hlt
aaa
adc
inc
mov
and
ror
ds
pusha
xchg
dec
dec
cmp
jecxz
mov
pop
std
ret
fadd
push
pop
flds
pop
push
shl
add
test
xchg
push
ss
hlt
into
ja
ds
adc
adc
adc
cmp
stc
fcmovnb
jecxz
mov
popfw
add
outsb
movsb
sub
push
mov
adc
jp
inc
cld
imul
lods
xor
insb
jg
gs
xor
or
sarb
cmpsb
jmp
xchg
pop
sti
lret
jbe
inc
movsb
inc
insb
xor
fisubs
dec
sub
lods
cwtl
popa
xchg
test
cmc
es
leave
sbb
dec
inc
sti
mov
in
cmp
adc
xchg
cwtl
shl
in
fs
gs
mov
pushf
or
pop
cmp
fistps
pop
jl
inc
fcomip
sbb
adc
push
push
sbb
push
popa
pop
in
push
inc
movsb
add
dec
jnp
xchg
dec
fstpt
dec
sti
inc
dec
add
shll
inc
sbb
xchg
sub
ss
loope
arpl
into
lret
adc
and
psraw
jmp
stos
mov
adc
mov
imulb
stos
popa
movsb
clc
stc
push
and
imul
movsl
xor
jne
pop
call
sub
stc
pop
fcmovnb
jle
cmpb
mov
jecxz
leave
loope
out
js
int
push
pop
push
jge
arpl
lret
sbb
push
adc
push
mov
je
and
sub
addl
rcrl
repnz
pop
xor
lock
mov
or
out
xor
cmp
loopne
sbb
ret
cmp
jge
xchg
jl
fstpl
cmp
scas
flds
sub
sub
inc
fcmovu
leave
inc
inc
iret
push
leave
mov
jb
or
loopne
ficomps
cltd
mov
push
mov
shlb
jp
lahf
rcrl
in
jns
fldcw
push
mov
push
and
jns
jge
sbb
xchg
push
mov
lret
push
sub
das
mov
arpl
mov
sbbl
sbb
das
jecxz
push
jno
mov
or
cmp
push
adc
out
les
data16
sbb
int
testl
sbb
sub
jb
cmpsb
stc
mov
iret
popa
clc
pushf
mov
cmp
movsl
sub
sub
lds
daa
mov
in
and
aas
rolb
mov
in
push
jle
sub
and
push
stc
xor
sahf
ljmp
and
in
movb
sub
cmp
sub
push
push
js
addr16
xchg
xor
idivb
sub
or
xor
and
pop
xor
pop
xchg
or
jp
xchg
pop
xchg
or
pop
pushf
and
cmp
ljmp
jbe
aam
dec
lahf
call
pusha
fstl
pmuludq
es
icebp
or
cli
ja
xchg
int
jnp
jecxz
outsl
mov
add
sub
ret
push
or
mov
sbbb
loopne
xchg
xchg
inc
mov
jno
roll
or
enter
pop
adc
sub
fdivl
jle
mov
mov
aam
aaa
test
icebp
loope
ljmp
add
fistpl
push
pop
ds
xchg
ja
pop
nop
mov
pushl
add
jns
pop
cmc
mov
shrb
push
mov
jge
in
scas
pop
push
push
stc
adc
ljmp
ret
jle
inc
adc
jle
roll
cs
mov
popf
test
cmc
clc
push
sbb
daa
jge
pop
mov
pop
mov
cmp
pusha
scas
push
addr16
bound
sub
jae
adc
sbb
or
lea
mov
ss
out
mulb
ljmp
jmp
cmp
pop
dec
ja
repnz
ds
cs
sub
push
icebp
pop
stos
fisubrs
fsubr
jecxz
pop
outsb
dec
sub
sbb
out
or
out
jp
jno
das
in
mov
insl
inc
bound
sbb
xor
xor
fidivrl
mov
fstp
adc
aad
call
test
notb
sahf
ret
sbb
pop
add
mov
cwtl
mov
test
sub
xor
ljmp
pop
lock
lock
rcrl
cmp
je
hlt
push
jmp
insl
aas
fldt
sub
add
mov
pop
push
push
pop
add
inc
xor
push
jb
les
leave
test
dec
or
dec
adc
arpl
xchg
rcl
popa
jbe
clc
popa
pop
xchg
sahf
adc
cmp
inc
pop
cmpb
fstp
ret
adc
or
dec
in
sub
lret
push
pop
mov
jp
and
pushf
mov
mov
adc
dec
call
jns
mov
jno
mov
out
jnp
pushf
cmpsb
jl
and
xchg
andl
sub
inc
arpl
sbb
add
push
test
cmp
pusha
adc
shll
enter
xchg
xchg
nop
mov
xor
xchg
xor
in
jecxz
or
fadd
push
jg
jbe
ret
sub
popa
push
lahf
mov
xor
push
out
movsb
insl
imul
jns
cmp
ficoml
arpl
xor
aam
mov
dec
daa
dec
popa
sub
xchg
nop
hlt
sbb
push
aaa
inc
stos
int
loop
sbb
out
inc
push
das
add
fbld
bound
add
dec
dec
cwtl
stos
jg
push
shlb
icebp
dec
fs
in
shl
sbb
xor
or
ficompl
sbb
into
push
pop
push
pusha
gs
inc
pop
outsl
cmp
cmp
lods
lret
out
push
cwtl
addb
pop
sbb
xchg
pop
dec
inc
mov
cmp
push
pop
arpl
lcall
inc
les
or
outsb
dec
ror
sub
jmp
test
cmp
call
sbb
iret
lods
int3
jb
dec
das
ret
push
std
mov
test
mov
hlt
jno
pop
dec
jmp
mov
xor
std
outsl
xchg
mov
lret
sbb
les
pop
es
int
pusha
adc
arpl
aaa
jmp
into
sub
xor
and
das
jg
pop
xor
testb
jmp
imul
xchg
popa
mov
lock
insl
pop
ljmp
pushf
adcb
mov
addr16
jns
jne
pop
sti
and
jne
push
data16
fildl
ret
jnp
lock
and
insl
out
pop
mov
jne
fsubs
popa
and
mov
mov
lcall
dec
das
lcall
mov
loope
sub
lock
pop
arpl
add
and
xchg
or
jb
jg
fcoms
ds
cmp
pop
lret
in
ret
mov
enter
ss
mov
or
aad
cmp
add
mov
sub
movsb
loop
lret
inc
test
jmp
jno
xchg
pop
rclb
leave
jo
repnz
cli
jl
xor
sub
pushf
out
hlt
adcb
cld
imul
mov
mov
outsl
fmuls
mov
mov
xchg
pop
lds
mov
xor
jge
add
jg
lret
cmpl
mov
andl
jmp
mov
scas
jno
aad
clc
dec
or
jno
pop
jns
fisubs
call
dec
cmp
push
jne
mov
mov
cmp
mov
scas
push
fadd
mov
xchg
dec
test
mov
ds
pop
inc
mov
mov
cmp
adc
jp
lods
and
mov
push
pop
mov
push
scas
ss
push
sbb
int3
pop
fistpll
mov
lahf
inc
or
xchg
imul
leave
sarl
test
mov
std
push
sbb
scas
test
pop
push
mov
leave
mov
dec
fisubs
aad
dec
gs
stc
inc
add
xchg
sbbb
ret
jo
fcomps
xlat
fisubl
cmp
or
int
sbb
inc
pop
aam
or
out
add
jmp
mov
ret
jo
cmp
pop
outsl
inc
adcb
xchg
dec
mov
stc
dec
cmc
pop
jle
or
imul
mov
fstpt
push
clc
lahf
fbld
dec
and
addr16
pop
es
dec
mov
adc
sub
mov
push
cmc
repz
ret
mov
pusha
lret
xor
dec
push
out
sbb
movsl
push
add
add
test
jg
add
aam
mov
add
and
xor
ja
ror
pop
add
xchg
dec
sar
lret
addr16
in
mov
lea
jmp
imulb
imul
in
pop
mov
loopne
add
pop
inc
daa
idivl
outsl
stos
js
push
mov
out
sbb
ja
ret
pop
inc
xor
dec
adc
jo
add
cltd
xchg
xchg
mov
mov
push
data16
shll
lea
dec
push
cld
xchg
fs
mov
xor
lods
dec
jae
in
insl
insl
push
jnp
jle
enter
push
addr16
test
mov
arpl
lret
sbb
push
dec
lods
jle
icebp
mov
sahf
repnz
lea
ret
adc
popf
or
jno
push
add
cmpl
ret
inc
inc
cmpl
lret
push
jg
mov
dec
jno
data16
push
push
out
or
aad
in
dec
and
push
fxch
into
test
ljmp
std
xchg
jg
jge
xchg
jb
mov
insl
jge
bswap
sub
xchg
inc
fninit
and
mov
mov
pop
jns
mov
pop
cmp
fsubrs
adc
pop
pop
les
hlt
outsb
xchg
hlt
push
add
in
sub
mov
mov
ja
add
in
sub
into
jecxz
lods
rclb
push
imul
adcl
inc
fdivrs
ljmp
adc
sub
mov
test
add
or
inc
rcll
dec
adc
add
movsl
cld
lods
sub
test
outsb
cmp
shlb
std
pop
and
rcrl
inc
pop
jp
xlat
lods
push
leave
add
add
out
in
icebp
cmpsl
push
scas
dec
sahf
lcall
xchg
pusha
sbb
test
sub
push
sub
and
js
mov
negl
loopne
scas
out
and
fwait
cli
out
mov
and
sbb
mov
push
mov
fdivs
dec
push
mov
test
sub
add
sub
sti
test
inc
fsubr
mov
rcrb
push
ds
bound
ds
xchg
cmp
sbb
jl
push
xchg
push
xor
pop
insl
xchg
icebp
or
mov
pop
cld
in
xchg
sub
test
jae
clc
in
cwtl
push
subl
add
repz
jb
jg
lcall
movsl
sub
cmp
iret
test
add
mov
cmp
inc
mov
and
dec
inc
aad
cmpsl
sbb
cmpl
sahf
add
loop
aam
mov
stc
adc
push
sahf
sbb
pop
subb
loop
add
das
add
mov
jg
inc
icebp
mov
jno
lods
scas
mov
in
ljmp
in
xchg
stc
ljmp
jmp
mov
inc
insb
adc
adc
adc
lods
inc
js
mov
idivb
popf
pusha
push
data16
dec
dec
sbb
mov
inc
pushf
arpl
cmp
jb
mov
ds
jecxz
inc
mov
pop
call
and
sbb
repnz
mov
add
insb
test
lea
add
out
add
enter
or
cli
and
mov
mov
cmpsb
cmc
dec
loope
mov
test
dec
xchg
xchg
js
cld
pop
push
nop
lock
sub
popf
jle
leave
loopne
jg
cltd
ja
xor
push
ss
xchg
xchg
in
aas
lret
xchg
and
mov
popf
push
es
lods
xor
sahf
scas
inc
push
add
adc
mov
inc
xchg
mov
mov
out
jo
int
cmp
cmp
pusha
lods
lods
arpl
inc
in
mov
mov
scas
mov
or
xor
in
aad
sti
js
leave
inc
mov
cmp
mov
and
stos
sbb
add
cmp
adc
pop
pop
and
mov
sub
cmpsb
lock
dec
sbb
lock
std
mov
nop
fcmovne
into
add
xchg
jmp
pusha
pop
pushf
test
adc
push
mov
push
addr16
xor
and
orb
mov
out
test
pop
inc
adc
mov
les
mov
fwait
sbb
cmp
insl
int
mov
idivb
js
stos
cmpsl
or
scas
pop
sbb
mov
lret
in
cwtl
aas
rorb
mov
xchg
lods
sub
or
jbe
sub
stos
mov
scas
loope
or
mov
xchg
sub
out
push
adc
dec
ret
fwait
mov
dec
or
enter
dec
outsl
xor
inc
arpl
jae
fs
subl
sub
sub
sub
mov
mov
lret
cmp
cmc
pop
sbb
mov
movsb
mov
pop
sbb
xchg
ljmp
push
ficoms
pop
fsubrl
push
or
fsubl
and
rorl
pushl
xor
adc
out
repnz
sub
mov
mov
and
xchg
dec
sub
xchg
sub
dec
and
fyl2x
dec
lock
sub
addr16
sbb
dec
cmp
jb
and
outsb
clc
xchg
gs
enter
into
jmp
fcoms
push
xchg
fcoml
inc
xlat
pop
fbstp
jbe
movsl
and
rcr
aad
ret
xchg
mov
push
dec
xor
fsubp
outsl
insl
test
and
std
out
shlb
pop
lods
cmp
add
int3
xchg
or
xchg
cmp
jl
sub
lea
pop
dec
movsb
stos
imul
bound
repz
inc
and
pop
dec
cmc
xchg
subl
xor
out
pop
test
push
cmpsl
sbb
in
push
addr16
jnp
lods
lods
sbb
mov
jbe
pop
jg
fstpl
fisubl
rcrl
mov
cli
jl
aad
mov
jecxz
or
lea
iret
popf
into
mov
xorl
int
push
insl
mov
sbb
in
fldt
leave
mov
pop
jmp
int
add
call
ret
scas
sub
sbb
or
inc
sub
dec
mov
mov
cmp
sti
inc
sub
xor
lods
push
inc
aad
xchg
jbe
add
adc
add
inc
sbb
pop
lods
mov
inc
pop
sbb
pop
and
jle
mov
nop
sti
pop
sbb
dec
aas
adc
into
lret
shrb
les
or
pop
sub
mov
adcl
xor
sbb
mov
ret
sbb
movsl
mov
addr16
adc
dec
sbb
dec
sbb
jo
lods
fidivrs
sahf
into
mov
inc
sbb
sub
or
imul
int
inc
jmp
push
or
cmp
cmp
loope
and
xchg
adc
mov
mov
std
xlat
out
jb
das
aas
jae
xor
sbbb
adc
fmull
iret
jle
in
mov
sbb
cwtl
aam
out
addr16
sub
mov
add
subb
pop
push
mov
cld
add
add
inc
xchg
inc
push
push
lock
icebp
in
mov
rcll
bnd
insl
jle
mov
scas
cld
arpl
sub
neg
jb
mov
popf
sub
fdiv
adc
scas
fsubs
pop
mov
or
imul
jmp
cmp
cltd
scas
xor
cltd
dec
jp
pop
ds
adc
mov
loopne
xchg
cmp
imul
adc
leave
add
adc
mov
inc
or
orb
mov
push
pop
jne
adc
inc
test
pop
xor
push
aad
jp
push
pop
lret
imul
mov
jecxz
and
jo
dec
aad
rolb
sti
cmp
dec
and
fwait
push
aas
mov
addb
inc
loop
push
push
xlat
cli
and
ret
mov
test
cmp
xchg
outsl
pusha
or
xorl
test
cs
gs
pop
inc
xor
xor
pop
inc
je
divl
adc
les
and
ret
scas
stos
aad
jle
jecxz
and
iret
pushf
jg
adc
xchg
lret
xor
bnd
fs
xor
mov
jg
dec
call
dec
or
mov
scas
stos
xchg
add
aad
push
rcrl
or
dec
stos
xor
aam
ja
movsl
cltd
sbb
sti
push
test
fadds
xor
mov
jae
and
xor
sub
in
jo
inc
push
popa
adc
pop
jp
pop
mov
popf
lcall
std
popa
imul
mov
nop
sbb
xchg
mov
cmpsl
jae
in
lea
divb
ffreep
les
popa
aaa
je
das
loope
hlt
subb
ss
adc
jb
pop
repnz
int3
pop
mov
cld
stc
mov
ljmp
sub
push
xor
jns
das
cmc
outsl
or
inc
shl
mov
pop
dec
jbe
dec
or
in
popf
enter
ret
inc
inc
loop
jge
jb
lods
lea
add
inc
stos
pop
dec
movsl
loop
sti
mov
clc
cmp
lods
jns
xchg
sbb
mov
add
jmp
xchg
add
xchg
mov
loopne
in
pop
cmp
xor
mov
xorb
popf
mov
add
mov
xchg
mov
pop
movsl
mov
xor
adc
pop
movsb
and
xor
mov
dec
xor
adcl
push
stc
lret
mov
xchg
addr16
xor
ret
mov
rclb
pop
mov
divb
mov
jg
int
jnp
stc
insl
and
lret
sbb
xor
clc
shl
bound
xlat
mov
and
negl
cltd
ljmp
cmp
mov
nop
add
sti
inc
or
pusha
adc
lods
loop
sbb
mov
adc
cmp
pop
mov
outsb
or
mov
mov
jbe
dec
mov
pop
int3
lahf
lret
dec
and
addr16
ds
lea
mov
cmp
xchg
pushf
popa
je
sti
xchg
movsb
loopne
mov
lcall
cs
mov
cli
push
in
push
clc
fsubrs
cltd
pop
sarb
ljmp
mov
or
pop
push
ss
pop
out
enter
idiv
fsubs
xchg
push
mov
bound
dec
mov
es
adc
mov
cmpb
cmp
bound
mov
mov
sub
call
jle
stos
loopne
and
loop
mov
popf
addr16
or
add
ds
movsb
fmulp
mov
pop
and
cmp
call
ljmp
xchg
or
xor
jbe
push
cmp
aad
jmp
idivb
pushf
cmp
push
fcomps
in
hlt
imul
push
js
push
mov
aad
mov
jnp
dec
pop
aas
in
mov
xor
mov
outsl
mov
lret
mov
fucomi
bound
ret
mov
cmp
mov
xchg
lock
xchg
sbb
loope
adc
lcall
push
push
jle
mov
into
or
jmp
push
sub
add
repz
push
adc
pop
outsl
ja
test
pop
add
pop
mov
xor
xor
jecxz
in
sub
xchg
icebp
xchg
call
insl
dec
arpl
jns
jns
mov
and
fst
sbb
push
sub
inc
jns
cmp
inc
and
mov
cld
add
cmp
jp
ja
pop
push
out
push
fcmove
cmc
dec
xor
add
push
push
mov
xchg
sbb
adc
popa
subb
ja
je
and
imul
push
mov
jge
cltd
loop
leave
adc
hlt
or
mov
and
mov
jb
scas
loopne
dec
xchg
dec
xchg
shlb
jp
or
jge
js
mov
or
lret
lods
dec
mov
das
mov
mov
or
sub
mov
fstpt
adc
xorb
leave
add
rep
mov
fidivrs
sub
loopne
add
out
cli
or
jno
icebp
push
fwait
and
test
cmp
mov
or
xchg
jmp
cld
js
aas
insl
repnz
cld
xor
push
in
lcall
mov
or
bound
pop
dec
dec
fiadds
out
mov
enter
out
gs
mov
jp
add
imul
sub
xchg
dec
pop
test
jnp
ficomps
std
sub
mov
xor
pop
xchg
outsb
cmc
pop
mov
mov
or
sbb
cmpsl
dec
in
pop
out
xchg
add
xor
mov
insl
loopne
adc
and
call
pusha
cld
aaa
jns
lret
cmp
dec
frstor
lds
mov
clc
aam
xadd
pop
and
mov
aas
punpckhdq
xor
popf
pop
lcall
cwtl
push
or
push
xor
jnp
adc
cwtl
into
and
leave
mov
icebp
xor
loop
xchg
aad
int3
clc
stos
test
or
nop
ds
add
test
inc
cmp
aad
pop
fsubrs
mov
adc
jns
adc
outsl
sbb
jl
mov
loopne
and
inc
inc
pop
push
cltd
outsl
push
icebp
push
mov
xchg
mov
mov
vmwrite
mov
movsb
mov
popa
xor
sbb
xchg
test
lret
sbb
in
mov
and
pop
xchg
add
orb
mov
mov
adc
rcrl
jbe
push
jg
stos
xlat
fs
inc
sarb
les
jae
fistl
aad
pop
nop
dec
dec
pop
lds
lret
dec
inc
rcrl
cld
pusha
lret
outsb
and
push
fdiv
jo
enter
stc
or
daa
mov
pop
push
cmpsb
dec
mov
jne
or
pop
loope
lret
lret
xchg
in
mov
popf
mov
mov
arpl
adc
and
cs
mov
xchg
push
dec
lret
fisttpll
pop
jecxz
les
popa
xor
push
mov
aas
jmp
out
xchg
test
test
pop
add
stc
test
xchg
dec
and
pop
mov
sbb
mov
push
les
data16
arpl
mull
pop
xorl
sti
cli
inc
sub
mov
vpmullw
loopne
data16
pop
inc
sti
xchg
stc
mov
gs
or
inc
repz
or
aas
adc
or
cmp
push
aaa
mov
cmpsb
in
ret
pop
icebp
cmp
rorb
xchg
sub
jnp
sub
sti
mov
pop
rcr
sbb
lods
xchg
sbb
add
adc
repnz
mov
call
xchg
jb
pop
inc
test
and
jns
pop
lea
sub
add
int
pushf
rcrl
inc
call
xor
mov
mov
push
lret
out
or
movsb
or
shrl
mov
into
cmp
mov
push
cmp
xchg
cmp
test
mov
mov
sub
mov
jg
int
in
sbb
xchg
push
popf
das
movsl
aaa
mov
push
or
and
push
sub
stc
icebp
repnz
jbe
ljmp
call
out
in
or
and
pop
push
aaa
test
mov
sub
ljmp
xchg
setnp
pop
fcmove
fbld
es
or
fstps
vpsubsw
mov
dec
xchg
call
fisttpll
push
pop
xchg
lret
adcl
lahf
and
outsl
dec
into
mov
insl
scas
lcall
mov
cmp
ja
sbb
jge
mov
push
xchg
inc
hlt
mov
mov
sub
and
aas
jmp
pop
mov
mov
xchg
in
or
arpl
bound
mov
sub
mov
cmp
repnz
xchg
jo
fisubs
lock
stos
jp
mov
mov
xor
dec
loope
fwait
pop
push
out
aam
adc
sbb
arpl
cltd
and
push
lea
or
mul
and
dec
add
pop
sbb
sub
outsl
icebp
stos
test
pop
in
bound
pop
adc
loope
mov
inc
cmp
xor
mov
xchg
ljmp
add
adc
movsl
addr16
xor
xchg
popa
loop
aad
outsw
pop
pop
fistpl
inc
dec
inc
shll
add
loopne
popa
push
jg
xchg
sbb
mov
cmpsl
mov
or
lods
sub
sti
sbb
xchg
mov
lahf
call
pop
dec
stos
mov
jbe
cmp
lea
hlt
popa
out
addr16
inc
js
movsl
sahf
mov
pop
loop
iret
lock
sti
cmp
push
dec
inc
stos
outsb
inc
mov
test
xor
shlb
sub
xchg
test
mov
clc
cmc
or
psraw
dec
xchg
ja
aam
pop
xchg
dec
cmp
dec
sub
fs
ret
jb
or
or
pop
add
or
jmp
xchg
ljmp
fs
push
cld
jne
popa
es
nop
jmp
loop
push
cmp
xchg
mov
xor
xor
dec
arpl
in
or
cmp
xchg
mov
push
rclb
jp
lds
sahf
xor
inc
pop
scas
sbbb
jbe
inc
aaa
mov
add
pushl
push
jecxz
adc
and
mull
mov
push
pop
js
push
cmp
loopne
ss
int3
adcb
cmp
cmp
jmp
pop
enter
xorl
cmp
aaa
stc
ret
jno
and
xchg
nop
out
xchg
xlat
test
pop
jge
je
add
enter
or
call
dec
aas
add
das
aas
jne,pn
pop
xchg
push
scas
mov
and
cltd
pusha
mov
std
dec
push
cmp
or
xor
xchg
mov
cltd
mov
stos
ficoml
mov
or
mov
push
mov
or
cld
cmp
and
sub
jecxz
imul
iret
adc
and
inc
pusha
lds
addr16
pop
int
pushf
ds
cmp
mov
cmpb
jbe
mov
das
add
cmc
std
sub
jl
push
inc
or
lahf
aaa
lret
mov
rcrb
rcll
ljmp
xchg
loop
stos
pop
cmp
sti
jp
mov
push
divb
jecxz
fcoms
xor
lods
in
mov
push
mov
ds
adc
ret
test
mov
pop
push
popa
pop
mov
adc
daa
add
jmp
shl
nop
testb
and
fmuls
dec
jg
add
mov
fiadds
stos
add
adc
sub
push
inc
pop
inc
mov
pop
stos
adc
shrb
stos
nop
mov
jle
cmp
mov
pop
push
add
js
rol
xchg
pusha
or
pop
jnp
adc
lcall
icebp
loop
mov
data16
scas
repz
enter
mov
decb
jecxz
xchg
iret
clc
xchg
push
les
push
push
xor
dec
std
in
repz
mov
inc
mov
mov
lods
das
xchg
adc
push
pop
cld
or
cltd
jns
cmp
jno
inc
in
pop
fdiv
adc
jp
aam
adc
inc
xor
mov
ss
push
sub
dec
push
push
arpl
add
or
push
out
jb
test
fdivrl
xor
mov
jnp
xchg
jge
mov
xlat
add
push
add
cld
mov
hlt
clc
es
scas
aad
rol
add
popf
dec
mov
int3
je
mov
sub
test
xchg
daa
insb
data16
mov
fiaddl
jmp
fcompl
pushl
or
xchg
repz
pop
sub
fstpl
push
rol
clc
inc
adc
jp
inc
stos
iret
movsl
test
xor
ljmp
xor
jecxz
inc
roll
bound
mov
loop
mov
ja
lea
add
xor
and
push
shl
and
imul
jae
jo
xor
hlt
fsubrs
add
aam
push
pop
dec
xlat
xchg
sub
mov
jb
add
es
push
stos
mov
xchg
imul
mov
dec
and
in
adc
dec
jo
mov
add
and
nop
pop
xchg
out
dec
movsl
mov
jge
repz
mov
adc
cmp
int
jmp
jmp
pop
les
jp
jnp
push
insb
dec
and
aad
sbb
cwtl
cld
dec
in
xor
adc
dec
mov
sahf
in
imul
jae
mov
mov
jb
push
xorps
in
adc
and
lahf
and
cwtl
in
ja
pop
inc
dec
jle
add
jne
and
pop
incb
or
hlt
es
aas
leave
pop
negb
mov
lock
daa
adc
pop
adc
and
xor
mov
pop
pop
sar
and
faddl
int3
inc
jnp
fst
sbb
adc
jae
dec
gs
jge
and
daa
jb
scas
jg
int
or
jmp
mov
outsl
repnz
je
out
and
inc
dec
xorl
pop
fwait
cmpsl
mov
xor
or
aam
inc
sub
adc
sbb
adc
ss
dec
movsb
xchg
shll
js
or
stos
mov
jns
lods
imul
pop
rolb
sarl
psraw
aam
inc
sbb
mov
mov
cmpsb
mov
cltd
push
dec
lock
push
mov
xor
add
cmp
inc
mov
mov
ljmp
les
popa
rcr
adc
push
mov
and
bound
sbb
clc
out
popa
xchg
xchg
xchg
or
add
xchg
test
xor
or
outsl
and
mov
jnp
push
push
xchg
cmp
dec
push
push
inc
roll
xchg
mov
and
lock
mov
sbb
inc
mov
daa
ret
shrl
int
cmpsb
out
mov
mov
andb
pop
fstl
ud1
cwtl
and
push
and
pop
push
xor
xchg
sub
int3
call
hlt
add
jae
outsb
inc
push
jmp
fstpl
jmp
sti
je
or
xlat
out
andl
subl
popa
xor
push
fstp
mov
mov
dec
xchg
add
stos
testl
push
xor
or
or
or
imul
pop
cmp
xor
es
in
mov
out
jae
mov
into
push
sub
mov
pop
ret
sbb
jb
xor
cmp
or
xor
in
push
scas
and
test
aad
mov
adc
mov
dec
cwtl
cld
sbb
or
mov
dec
cmp
jns
rcrl
xorl
adc
gs
jge
stos
and
mov
adc
dec
jo
push
cmp
pusha
cs
mov
xchg
push
cmp
ficoms
pop
push
outsl
sbb
pop
and
jne
sbb
enter
ficompl
push
sub
stc
scas
sbb
cmp
mov
push
jns
shrl
frstor
inc
dec
lock
fcoml
mov
and
cmp
adc
stos
pop
xchg
mov
and
rorb
sbb
pop
dec
test
sub
pop
jae
jne
lds
jle
pusha
orb
adc
addb
fstpl
xor
adc
pop
aaa
call
xchg
mov
lret
mov
jp
nop
jnp
jbe
js
ret
inc
ljmp
shll
push
pusha
addl
negl
xchg
xchg
arpl
test
gs
rcrb
jbe
out
fists
inc
fistps
movsl
adc
pop
fcmovb
cmp
lahf
nop
dec
cltd
scas
jmp
lds
pop
imul
cwtl
test
cmp
sub
pusha
outsl
popf
xor
push
fwait
or
daa
adc
mov
lds
cmp
pusha
or
stos
fnstsw
es
jae
scas
xchg
mov
sbb
fucomi
jne
jp
insb
dec
test
lret
jo
lods
mov
sbb
fnstcw
call
sahf
in
iret
pop
xor
push
je
in
pop
push
xchg
add
scas
pop
jmp
mull
outsl
mov
mov
or
mov
push
in
adc
mov
out
xor
mov
negb
test
mov
cmpsl
push
mov
aam
mov
jmp
pop
jmp
mov
test
sub
mov
pop
cmp
mov
adc
rclb
paddsb
sti
sub
call
jp
ss
scas
popa
mov
jbe
gs
stc
bound
mov
nop
mov
sub
popf
xchg
or
mov
and
arpl
lods
lods
push
and
outsb
cltd
mov
xchg
inc
lret
repnz
ficoml
aaa
jnp
pop
out
inc
cmp
mov
scas
call
int
scas
ljmp
cli
shlb
test
daa
add
jnp
adc
push
shrb
jno
aad
sbb
sub
hlt
jns
je
xor
xchg
test
jg
adc
lods
push
cmpsb
sbb
adc
mov
push
cmpsl
and
insb
push
movsl
mov
aad
in
sbb
sahf
or
inc
stos
push
xchg
mov
testl
inc
jo
or
inc
cmp
mov
and
mul
pop
inc
push
stc
pop
cltd
pop
jb
add
and
aaa
cmpsl
shr
pop
call
movsl
or
sub
aad
insb
in
es
jno
xchg
rcll
sub
loop
pop
aad
inc
adc
aas
fsubp
inc
icebp
push
pop
push
adc
push
in
popa
out
mov
and
in
dec
adc
fpatan
scas
shrb
mov
les
cld
insl
notb
aam
adc
ror
cmp
or
add
test
mov
xchg
add
inc
imul
pop
jb
mov
jp
int3
out
ret
jmp
inc
int3
xchg
adc
out
out
mov
pop
or
arpl
scas
mov
lock
or
add
rorb
push
mov
cmp
push
popf
fcompl
xchg
ret
lock
stos
adc
push
ja
je
inc
rclb
pop
xor
js
mov
arpl
and
xor
iret
das
or
fcomi
mov
push
xchg
sarl
mov
clc
push
sbb
xchg
push
aad
adc
push
jnp
xor
xchg
loopne
adc
enter
mov
push
sub
jbe
fmull
push
xor
push
ja
daa
add
in
repnz
popf
lahf
pop
sahf
mov
cwtl
sub
pop
mov
fcmovb
add
lock
es
xor
push
xchg
xor
mov
push
push
xor
or
mov
test
add
out
nop
aaa
mov
clc
pop
ss
push
adc
int3
jbe
lods
stos
shll
jp
and
cmp
andl
mov
mov
push
mov
mov
xchg
and
mov
out
dec
lock
in
hlt
sub
cmpb
mov
stos
ficoms
mov
mov
int3
xor
loope
sub
movsb
xchg
xor
mov
in
or
xchg
ljmp
stos
xchg
pop
sub
inc
sub
imul
push
add
mov
mov
fnstcw
repnz
xchg
jp
jmp
sarb
push
enter
int
pop
inc
in
prefetchwt1
xchg
or
xor
in
out
jo
cmc
int
scas
and
arpl
push
xlat
ljmp
jb
adc
xchg
ret
sbb
les
cmpsb
lods
inc
mov
lds
scas
mov
adc
nop
jecxz
mov
xlat
mov
pop
movsl
jmp
sbb
js
sbb
shll
inc
iret
leave
lret
and
fisubrl
imul
iret
popa
test
add
pop
jg
inc
sub
mov
sarb
mov
push
pop
dec
stc
sti
iret
mov
push
mov
dec
in
fxch
xchg
insl
into
pop
xor
xchg
xor
imul
or
loopne
gs
mov
idivb
xchg
enter
addr16
and
lahf
push
lea
add
pop
enter
stc
pop
in
lahf
push
outsl
sub
xchg
ret
jl
sbb
repnz
inc
dec
mov
clc
push
movl
xchg
es
sub
mov
push
jg
ljmp
out
lock
push
test
cmp
cwtl
add
enter
sbb
stc
iret
cli
mov
and
add
xor
sbb
rcrl
dec
fisubs
iret
loopne
xchg
outsl
add
xor
icebp
mov
and
push
cmp
xor
fmul
cli
loop
iret
inc
dec
addb
cli
adc
in
pop
pop
cmp
mov
aam
mov
test
sub
test
pop
sub
pop
lret
or
decl
cld
lea
sub
xor
mov
popf
xchg
jno
xchg
int3
inc
cli
jle
dec
pop
mov
icebp
call
je
pop
lret
pmuludq
jmp
test
xchg
adc
xor
xor
icebp
mov
dec
and
pop
fwait
leave
lahf
popf
mov
push
jg
xchg
bndstx
loope
in
iret
cld
mov
jns
ficomps
sbb
psubsw
jb
jge
outsb
jmp
cwtl
inc
lock
dec
sbb
out
popa
cmpsl
pop
fwait
cmpsb
add
dec
rorb
loopne
movsb
mov
shll
mov
xchg
push
inc
or
data16
mov
lahf
jno
mov
fcom
mov
mov
shll
repnz
cwtl
pop
imul
mov
ds
pop
fstp
sbb
ret
push
add
aaa
enter
lret
mov
call
imul
rolb
movsl
dec
icebp
inc
add
cmp
pop
icebp
or
add
outsb
imul
scas
cwtl
xchg
sub
test
inc
jge
sti
jno
xchg
rsqrtps
fnstsw
dec
jb
mov
outsl
inc
fisubrs
mov
rorb
jnp
addr16
icebp
sub
jne
adc
iret
xchg
jne
jecxz
cld
mov
fmuls
subl
lock
jbe
jge
and
jp
inc
xchg
test
inc
das
add
fwait
mov
shlb
sub
inc
lahf
imul
mov
xlat
pop
bound
and
js
fildl
xchg
add
cli
pusha
je
cmpl
mov
adc
add
subl
inc
xor
jle
inc
add
sahf
shll
mov
ja
dec
movsl
dec
sub
push
lret
push
iret
xchg
lds
outsl
inc
clc
xchg
mov
jle
sub
ljmp
dec
cmp
sarl
dec
sub
repnz
adc
in
lods
sbb
unpckhps
mov
jnp
adcb
or
icebp
fwait
stos
arpl
sub
rorl
sub
ret
outsl
fstp
daa
mov
fwait
sbb
lods
fcompl
adc
sub
inc
mov
mov
jge
jmp
lock
push
lods
mov
pop
idiv
movsl
out
fsubrl
movsb
or
and
push
lret
dec
sbb
push
sbb
cmp
mov
mov
repz
int3
xlat
outsb
mov
hlt
mov
sub
and
jb
cmc
hlt
in
cmp
jbe
enter
lea
cli
rorl
push
negl
cmp
shrb
inc
mov
stos
sbb
sub
add
daa
xor
or
push
pop
dec
adc
adc
lods
adc
jno
rcll
les
lock
add
xor
pop
in
lret
cmpsl
push
imul
in
adc
sub
or
std
dec
cmp
mov
xchg
in
aaa
push
call
arpl
or
mov
icebp
nop
ljmp
mov
pushf
and
mov
fildll
sbb
cmpsl
push
leave
xchg
popf
and
mov
push
repz
dec
push
ret
or
dec
icebp
movswl
fildll
fsub
mov
aad
mov
test
fs
stos
xchg
and
xchg
into
cmp
cld
fldt
and
xor
and
in
push
mov
sbbb
popa
lahf
jo
dec
popf
and
sub
adc
test
cltd
ss
lcall
jmp
stos
sbb
xchg
xor
mov
xchg
rcr
out
cmp
mov
ljmp
jae
push
hlt
mull
iret
and
sbb
jb
mov
add
mov
shlb
push
dec
inc
sub
data16
mov
dec
push
dec
sub
fcom
xchg
adc
fcomi
push
movsb
add
jl
fninit
xchg
jo
jne
clc
sarl
pop
push
pop
xor
rcrl
or
aad
pop
xchg
pop
mov
push
pusha
mov
xorb
repz
stos
add
sbb
push
cltd
inc
aam
inc
lret
out
aas
mov
mov
mov
mov
adc
push
test
jo
notl
push
insl
or
test
jb
cs
shld
fwait
sub
pop
fwait
leave
iret
sbb
push
and
call
jle
fistpl
fstl
mov
sbb
xchg
push
mov
cltd
js
cmp
fadds
push
mov
repz
jmp
push
and
fwait
shl
movsl
ljmp
xchg
add
jge
push
scas
xlat
xor
mov
jno
inc
sahf
fcmove
incl
sbb
out
sti
daa
movsl
imul
xchg
imul
and
imul
xchg
push
negl
inc
push
fidivrs
sarl
nop
pop
lahf
mov
sub
out
pop
scas
cmp
or
int
in
cmp
or
xchg
inc
idivb
das
jp
repnz
out
mov
sti
push
mov
sub
add
push
add
outsb
add
dec
jp
test
lds
adc
fstpl
insl
cmp
lock
in
mov
sub
popa
mov
addr16
nop
push
aas
js
xchg
aaa
push
fsub
mov
loope
sbb
sub
pop
sbb
rorb
movsl
lcall
mov
xlat
iret
and
add
stos
sbb
push
xchg
enter
cmp
mov
mov
mov
lds
add
insb
scas
es
rcrl
dec
xchg
cs
or
loopne
xlat
outsb
clc
into
sbb
push
sahf
lods
sbb
dec
ljmp
incl
test
pusha
push
nop
xchg
pop
pop
xchg
lret
mov
hlt
dec
xor
addr16
inc
dec
or
mov
push
jl
sarb
xchg
test
data16
inc
push
sub
cmp
sti
or
jge
aaa
gs
sub
sarb
in
not
dec
ds
and
js
fdivs
mov
dec
or
jge
xor
dec
mov
inc
test
hlt
mov
hlt
sbb
in
push
or
into
inc
popf
pop
inc
call
cmp
fsubs
or
fmuls
out
mov
cmp
ret
dec
daa
jo
mov
jb
je
or
stos
push
aam
and
pop
cmpsb
scas
mov
leave
ljmp
push
cmp
lods
jecxz
lods
xor
out
pop
xchg
xchg
ljmp
mov
mov
jne
insl
imul
outsb
out
jg
neg
mov
and
sbbl
nop
cmpsl
fmull
lock
loope
mov
fnsave
mov
insb
sarb
addr16
sub
ds
xchg
adc
addl
fs
mov
sbb
int3
xlat
jne
push
scas
xchg
fstpl
movsl
lds
sbb
and
movsb
mov
hlt
mov
jb
dec
fcomi
push
arpl
jge
fs
push
push
and
cld
inc
mov
out
jbe
mov
pusha
cmp
pop
dec
js
fcmovne
popf
push
push
jbe
fdivr
shl
adcl
inc
dec
pop
add
rcrb
lock
stos
in
scas
andl
xor
sarl
repnz
fstl
andl
in
inc
push
mov
fmulp
dec
mov
dec
cs
sbb
adc
push
xchg
mov
iret
lahf
or
pushf
dec
cld
cmp
pushf
xchg
pop
ror
inc
adc
xor
jecxz
add
and
or
clc
incl
add
xchg
pop
out
mov
stos
icebp
xchg
lea
cld
rorb
push
fimull
hlt
hlt
jge
negb
sub
cmp
mov
sbb
repnz
nop
clc
popa
sub
add
push
daa
sahf
inc
es
mov
loop
fucomp
repnz
xchg
sub
dec
das
cmpsl
adc
mov
adc
mov
mov
dec
inc
mov
pop
or
dec
sub
roll
outsl
in
test
scas
pop
cmpsb
lret
or
push
in
push
cmp
push
and
lret
sub
in
xor
fwait
xchg
push
pop
xlat
or
imul
mov
fimuls
negb
mov
daa
xor
mov
shll
sbb
xor
xor
adc
in
mov
mov
pop
sbb
test
jg
in
xor
mov
pop
and
sbb
push
push
mov
lahf
int
mov
scas
dec
sbb
dec
ljmp
cmp
jns
xor
xorb
push
xor
test
jge
adc
jo
jnp
mov
add
pop
insl
mov
mov
jns
cmpl
mov
push
mov
mov
popa
test
scas
mov
inc
pop
xlat
cmp
pop
and
frstor
xor
sbb
mull
cmp
movsb
adcb
xor
cs
xlat
sub
pop
sahf
fisttps
ficomps
cmc
daa
jbe
inc
call
movsb
dec
cwtl
mov
std
push
xchg
neg
xor
push
or
xor
lret
imul
icebp
aaa
add
aaa
jne
rorb
xor
das
pop
cwtl
lea
cmpsl
inc
sub
addl
aad
lds
imul
jmp
pusha
out
cmp
sub
jle
mov
enter
fcoms
movsl
sahf
dec
cltd
fsubl
adc
jae
imul
outsl
and
sub
push
xchg
cmc
test
leave
inc
jb
mov
add
dec
rorl
cwtl
push
dec
pop
push
mov
lret
test
cmp
pop
mov
loop
shlb
sub
xchg
gs
inc
lock
mov
pop
dec
test
xor
cmpsl
push
inc
mov
icebp
cmpb
shlb
mov
mov
test
into
jp
add
jge
pop
mov
jo
andl
frstor
outsl
pop
aam
rclb
and
popf
ja
and
dec
push
mov
iret
fsubr
dec
mov
sar
lods
cmp
shlb
in
mov
sbb
push
loop
enter
mov
push
fdivr
nop
movsl
test
sahf
fdivrs
jmp
cmp
xor
add
mov
jne
jo
jb
pop
repz
shll
push
idiv
aas
jb
pop
test
adc
popa
pop
sbb
add
incl
aad
dec
and
sbb
sub
int3
rol
jns
cmp
jecxz
loop
adc
mov
mov
popf
test
leave
mov
mov
jle
sar
push
cmc
dec
pusha
mov
push
add
cmp
dec
mov
jp
addr16
jmp
sbb
mov
std
ljmp
insb
push
mov
jge
ficoms
mov
pop
or
mov
lods
push
pop
shl
add
push
gs
pop
pop
sbb
imul
inc
xor
mov
cld
cmpsb
mov
cmp
repz
sub
aaa
jge
filds
inc
lcall
push
inc
lock
das
cltd
stc
adc
jmp
push
mov
daa
sub
stos
sub
add
je
movsb
xchg
ret
jge
jge
cwtl
subb
repnz
dec
jno
fcmovnu
fst
jecxz
pop
insl
hlt
xchg
mov
loop
addr16
stc
dec
movsb
mov
repnz
int
jle
dec
xchg
fsubrl
into
pop
fstpl
cmpl
or
aad
test
adc
aam
sub
jl
mov
in
adc
es
shlb
pop
rcll
je
inc
push
mov
stos
cmp
xchg
xor
mov
mov
popa
aaa
cmp
pop
mov
mov
insl
jg
sub
pop
mov
jmp
jge
repz
fsubl
sbbb
fwait
test
push
lods
idivl
mov
pop
das
mov
mov
sbb
push
pop
fdivrl
movsl
dec
jle
mov
arpl
lret
fnsave
rclb
sahf
xchg
cltd
pop
ljmp
and
sub
leave
nop
data16
jne
shrb
aaa
cmp
and
int
add
out
xchg
int
mov
stos
xchg
les
cld
incl
aas
inc
cwtl
or
push
xlat
fs
adc
fstp
jl
ret
je
add
pop
jge
xor
enter
nop
add
test
mov
clc
scas
pop
les
dec
ja
xor
mov
add
in
movsl
out
mov
inc
push
push
je
das
adc
lock
int
push
adc
aaa
xchg
nop
insl
inc
push
sbb
out
cld
bound
sub
cli
sbb
cld
cmp
push
jle
out
cmp
dec
push
and
call
lods
inc
xchg
mov
loope
mov
dec
and
xchg
pop
fwait
sub
in
in
dec
loopne
rcr
cmpl
aas
jb
push
mov
imul
mov
inc
fidivrl
dec
mov
sti
ja
mov
or
in
imul
ret
dec
adc
lret
fistl
sbb
dec
out
jae
mov
dec
sub
xchg
dec
lahf
lods
jbe
enter
jne
bound
je
mov
sbb
jne
jmp
ret
stc
push
cmp
jecxz
jecxz
leave
icebp
fisubs
adc
lahf
jp
jge
or
pop
xor
movsb
dec
cmp
rcrl
pop
hlt
and
adc
mov
add
pop
pusha
mov
aam
bound
loope
mov
push
jmp
xchg
push
sub
cs
inc
push
mov
sbb
es
dec
ja
testl
testb
mov
xchg
fs
fmul
push
lret
and
out
mov
xchg
ret
push
repnz
and
mov
jg
lcall
es
lods
sti
lahf
xchg
out
int
movsl
lds
and
andb
xor
mov
pusha
dec
stos
or
xor
adc
scas
sub
sub
int3
test
ret
jecxz
test
in
xchg
inc
outsb
out
add
sub
dec
push
loopne
pop
std
cs
jae
outsb
push
xchg
push
jns
mov
sbb
push
sbb
push
bound
sbb
push
jbe
fs
xor
xor
loop
test
popa
fstl
jle
fldl
adc
mov
leave
arpl
outsb
fwait
push
jl
orl
mov
int
int
pop
adc
dec
popf
cmp
mov
add
xchg
mov
cmp
or
aas
mov
xchg
push
add
repnz
pmaxsw
mov
stos
add
fists
imul
loope
push
addl
mov
fcomps
addr16
xor
xchg
xchg
jbe
sub
dec
loopne
outsb
gs
fsubp
mov
int3
sahf
sub
fs
mov
sbb
sub
dec
lret
dec
lcall
jmp
pop
outsb
add
jecxz
cld
mov
nop
or
aas
movsl
cmp
out
in
sti
sbb
or
cmp
call
dec
and
xchg
mov
iret
adc
call
hlt
rcrb
cmp
test
jns
xchg
lods
ds
test
fadds
push
and
cwtl
jp
clc
jmp
sbb
push
jl
arpl
dec
sti
push
test
jl
pushf
mov
dec
enter
mov
int
dec
jl
pop
mov
sbb
shlb
sbb
in
jb
dec
cmp
and
push
repz
shll
pop
lods
inc
pop
pop
jp
lcall
mov
push
push
add
pop
sbb
pop
push
hlt
insl
mov
daa
mov
pop
xlat
nop
sbb
test
call
pusha
inc
cld
xchg
lret
adc
cmp
adc
jmp
rorl
xchg
call
or
mov
flds
repnz
mov
sub
mov
mov
mov
iret
sbb
mov
lods
xchg
xchg
adc
scas
subb
xchg
imul
or
rolb
cmpb
mov
mov
xor
nop
mov
ss
or
mov
adc
or
sahf
jl
cmpsl
bound
sbb
lock
jp
std
bnd
cs
in
clc
into
int3
enter
jne
jae
add
in
jne
ret
mov
lods
filds
inc
in
fsubl
sbb
push
cmp
dec
divl
sbb
sub
sbb
clc
inc
repz
es
loope
pop
popf
sub
xchg
subl
cmc
shrb
adc
push
cltd
cmp
lahf
repz
leave
jle
outsl
cmp
mov
push
jbe
or
xor
cltd
vpmulhw
jns
adc
aas
mov
ds
jl
dec
mov
adc
mov
adc
mov
mov
sbb
mov
repz
push
sbb
inc
inc
xor
or
pop
enter
test
pop
adc
fistpl
add
test
addr16
mov
int
and
fiaddl
insb
and
lea
imul
xor
movsb
sahf
imul
inc
push
adc
lret
leave
jle
lahf
push
sbb
jg
xor
popa
arpl
xchg
or
dec
loop
mov
xor
jg
roll
xchg
inc
push
add
out
stc
jnp
push
cmp
addb
fidivrs
icebp
push
sbb
cmpsb
pusha
rorb
aam
jb
out
aaa
jne
rol
sbb
or
jl
lods
repz
mov
test
push
adc
push
dec
adc
mov
outsb
scas
push
lea
insb
xor
pop
in
pop
sub
rep
mov
shll
jo
movsb
pop
cmp
mov
or
adc
decb
push
push
inc
stos
add
push
jecxz
jp
ss
mov
or
inc
roll
xor
movsb
out
or
adc
or
add
sbb
adc
out
and
mov
pop
mov
repz
movsb
jle
push
xor
outsl
cmp
in
inc
dec
and
lods
adc
mov
mov
push
cmc
rorb
mov
cmp
hlt
or
test
jb
pop
xchg
xchg
xchg
js
xor
add
push
adc
filds
lea
icebp
fdivl
pop
push
xor
jg
jo
ret
test
pop
cwtl
push
sub
and
jbe
pop
ret
mov
test
mov
call
pop
rol
aad
jne
movsl
jo
fsubs
loope
adc
jge
mov
lds
outsb
cmpsl
pop
ficomps
mov
enter
test
icebp
cmp
lcall
loopne
push
js
lds
stc
cltd
aaa
inc
scas
andl
rcl
jge
mov
mov
gs
mov
inc
mov
pop
pop
and
mov
mov
mov
and
mov
jno
lret
stos
xchg
jbe
mov
pushf
push
test
in
test
cwtl
add
sbb
dec
sbb
cmp
arpl
sub
inc
rclb
jnp
jno
cmpl
pushf
xchg
cmpsb
dec
nop
outsb
ret
and
push
aaa
mov
or
xor
stc
out
sub
xchg
xor
loop
xchg
inc
push
cmp
push
mov
mov
loop
rcl
imul
outsb
push
insl
mov
mov
fstl
push
les
push
and
ljmp
mov
jp
stos
movsb
and
push
xchg
cmp
dec
insl
adc
pusha
mov
jns
xchg
pop
les
or
xchg
pop
mov
mov
dec
pop
push
gs
lahf
clc
xor
enter
add
and
inc
or
xchg
mov
arpl
in
cld
rcll
cmp
test
or
stos
fbld
add
dec
sub
aas
adc
stc
cs
cmpsl
jecxz
stc
cmp
inc
xor
loopne
cld
dec
sbb
std
arpl
xchg
add
loopne
xchg
sbb
inc
mov
sub
pop
and
mov
inc
ljmp
pop
or
inc
jnp
stc
jb
sub
xor
vmwrite
int3
mov
hlt
ret
mov
cmp
mov
cli
and
incb
gs
xchg
ja
inc
and
mov
jg
adc
out
addb
and
add
mov
jns
mov
add
jg
sbb
cmc
popf
mov
and
cmpsb
lock
xor
xor
orb
scas
xor
andl
loope
add
jbe
mov
fcompl
xor
aaa
cmpb
or
fmull
mov
cmp
xchg
or
ds
in
dec
fistpl
stos
lcall
push
and
push
jecxz
dec
jb
test
cmp
mov
addr16
lods
push
movsl
mov
inc
xchg
xor
lahf
daa
push
scas
daa
push
push
pop
pop
hlt
loop
sbb
pop
imul
and
loopne
mov
add
jbe
in
std
push
loope
jge
mov
scas
cld
adc
sti
push
je
sbb
daa
jecxz
push
lret
dec
add
push
jmp
les
jae
adc
sub
jno
jmp
scas
sub
xchg
mov
jg
dec
xorb
popa
cld
fistps
mov
sahf
or
jp
inc
lahf
in
lock
mov
inc
mov
ja
shlb
push
mov
mov
psrad
hlt
dec
xor
xor
imul
xor
dec
xorl
push
dec
dec
dec
stos
lds
mov
std
push
imul
add
xchg
fs
pxor
das
dec
fs
test
mov
shl
aam
sub
mov
and
dec
insb
and
iret
sub
mov
or
js
inc
loop
adc
mov
insl
addb
es
pop
sub
insb
out
cmpsb
leave
adc
sub
xor
rorl
xchg
loopne
xchg
xor
into
fs
mov
inc
pop
dec
dec
or
and
dec
jmp
test
and
iret
pop
sbb
xchg
xlat
stc
idiv
cmpsl
push
cmp
jo
addr16
es
adc
rcll
lahf
xchg
gs
popf
adc
nop
sarb
mov
add
mov
outsb
cmp
pop
ds
je
bound
fcoms
mov
mov
pop
inc
xchg
xchg
fildl
insl
xchg
push
divl
cmp
jno
stc
inc
inc
push
shlb
sbb
push
dec
cmp
test
mov
sub
sarl
push
push
jne
lea
xor
jbe
test
push
aad
mov
pop
pop
out
fadds
sub
icebp
incl
scas
sbb
cmpsb
daa
sub
add
fwait
cmp
add
add
xchg
jge
add
int3
leave
popa
cli
mov
cmp
pop
pop
dec
out
adc
mov
mov
or
adc
adc
mov
pop
and
xchg
xchg
repnz
js
jg
sub
fmulp
stos
lcall
jge
clc
rcl
data16
js
rcrl
flds
loope
mov
imul
sub
push
and
hlt
lods
les
in
mov
mov
lret
add
mov
cmp
pop
or
adc
sub
mov
iret
jno
inc
xor
jne
stc
cmp
test
cmp
out
mov
push
sbb
sub
jbe
xlat
xchg
mov
add
lock
mov
daa
dec
cmp
test
inc
add
inc
lret
xchg
popa
mov
xchg
push
ja
or
or
jp
pop
loope
les
lods
mov
orl
or
push
add
mov
push
adc
out
mov
xchg
scas
mov
inc
dec
mov
lahf
xchg
mov
or
icebp
xchg
dec
push
and
clc
sbb
xor
or
fsubl
jl
mov
sbb
xchg
jecxz
lret
mov
shll
cld
pop
add
or
aaa
push
and
mov
ret
pop
sbb
sub
mov
popa
imul
out
test
aad
mov
xchg
sahf
lretw
adc
push
add
mov
mov
test
ds
mov
fidivs
decb
mov
andb
jns
daa
xlat
push
sahf
mov
cwtl
loopne
outsl
push
sub
add
mov
jecxz
inc
enter
mov
test
mov
xchg
xor
daa
leave
sbb
mov
cwtl
repz
jbe
jle
and
decl
ss
enter
push
dec
mov
xor
add
and
jno
or
jge
int
aad
ficoml
sti
dec
gs
mov
fwait
xchg
cld
pop
bound
mov
es
cli
jge
repnz
insb
fidivs
fldt
or
cmpsl
or
pop
stos
dec
jmp
pop
insl
add
leave
mov
adc
fs
xchg
loop
test
pop
dec
push
push
flds
sbb
dec
nop
cli
fsubrs
jns,pn
xchg
xchg
mov
xchg
or
clc
sti
mov
adc
jbe
jno
lcall
push
iret
iret
jecxz
cmp
pushf
movsl
in
lea
mov
lahf
jb
sarl
cmp
repnz
arpl
mov
leave
sbb
orl
xor
imul
mov
jmp
cmpsb
jge
dec
stc
adc
int
in
sub
loope
stc
mov
pusha
sub
repz
pop
or
mov
loop
pushf
mov
rclb
or
xor
insl
dec
jl
into
xor
sahf
subl
xchg
add
imul
das
push
add
cld
pop
push
or
add
cli
push
jae
jecxz
push
sbb
popa
dec
xor
lret
lods
mov
cmp
fsubrl
add
lods
hlt
inc
push
rep
dec
adc
mov
in
add
dec
fcoml
xchg
mov
xor
aam
das
push
pop
xchg
sbb
rcrl
shr
es
imul
jbe
out
lock
cmp
cmp
rorl
scas
xor
mov
lds
pop
jp
lea
xorl
leave
or
sub
jecxz
pop
lret
adc
or
sub
cld
xorl
mov
fdivl
dec
mov
hlt
inc
dec
push
mov
jp
inc
sbb
sbb
mov
push
and
ss
inc
jecxz
push
mov
fcoms
test
mov
adc
push
mov
add
push
nop
test
pop
fwait
jge
push
aas
pop
fsts
dec
jo
repnz
lock
adc
sub
sbb
add
stc
outsl
and
xchg
jbe
push
es
jle
jle
scas
and
call
and
ret
rol
psllq
data16
out
insl
xchg
cmp
dec
in
adc
insl
cwtl
push
add
test
jmp
lea
fs
jns
hlt
fists
insl
pop
and
dec
xchg
vfmsubaddpd
mov
add
xchg
jo
fistpll
dec
dec
jno
mov
fcompl
pusha
ja
fmuls
add
into
mov
repnz
push
sbb
decb
fidivl
pop
out
daa
and
and
sbb
dec
addr16
into
sbbb
push
rcrl
in
push
mov
mov
sbb
push
ds
lods
inc
sub
mov
aad
push
add
sbb
std
jbe
push
insb
test
dec
movb
fdivrl
mov
inc
jae
cltd
loope
pop
push
jmp
fwait
addl
mov
xor
cmp
notl
les
repnz
jp
and
mov
xchg
lock
imul
mov
cmc
and
lock
xchg
lods
and
enter
ret
jb
inc
loope
test
dec
xchg
fidivs
sbb
mov
ljmp
leave
mov
lcall
out
lods
hlt
popa
jmp
fcomps
in
andb
pop
add
push
add
pusha
or
or
in
jmp
sub
xlat
roll
xchg
std
test
stos
cmp
fwait
pop
je
sbb
sub
mov
loopne
icebp
cmp
cli
xlat
ja
pop
bound
or
mov
xor
cltd
cld
jp
cmpsl
adc
mov
ja
dec
sbb
inc
adc
mov
jge
jbe
lcall
cs
popl
das
push
adc
fwait
jns
cli
sbb
lods
popf
sub
push
lcall
mov
repnz
pop
shlb
out
pop
cld
repz
aaa
sub
push
out
sub
sarb
arpl
sub
cmp
inc
push
les
rcll
and
add
lahf
arpl
arpl
inc
inc
push
push
xchg
lahf
push
sub
jecxz
mov
stc
inc
add
nop
out
add
scas
xor
loop
jb
test
fdivs
push
jne
jno
mov
cmpsb
aas
add
ljmp
sbb
jmp
outsl
popa
fisttpll
xchg
mov
scas
shll
mov
enter
jb
cmc
insl
pop
mov
inc
dec
mov
sub
scas
mov
fwait
mov
cmp
loope
mov
mov
movsl
scas
ficomps
sti
das
mov
lret
shll
addl
stc
movsl
sti
les
mov
inc
loope
cs
or
xchg
pop
cmp
in
jbe
mov
sub
xor
inc
jae
fdivrl
cwtl
jnp
mov
dec
adc
sbb
jmp
sarl
sub
movsl
fdiv
jno
mov
mov
push
cltd
cmp
idivb
inc
rcl
mov
inc
xchg
sahf
inc
mov
nop
pop
daa
popa
bound
in
xchg
adc
scas
xchg
sbb
pushf
jmp
int3
adc
fcmovnbe
jnp
sbb
or
movsb
repnz
popf
dec
inc
jo
lret
loopne
sbb
aad
add
fistl
fidivl
imul
in
fdivrs
cld
xor
and
adc
mov
mov
cmovge
mov
push
jmp
sahf
jmp
arpl
jge
insb
sub
xchg
xor
jl
push
fs
add
adc
push
add
mov
pop
loope
jns
pop
movsb
imul
jns
jnp
js
push
or
scas
das
addr16
jnp
jo
inc
lds
mov
jns
sbb
daa
inc
repz
imul
cs
sub
mov
xor
pop
addr16
lret
cmp
mov
mov
dec
xchg
addr16
jno
jbe
int3
in
inc
or
xlat
mov
inc
stc
fistpl
or
mov
nop
mov
push
pop
es
xor
insb
pop
xchg
fsubl
pop
mov
sbb
and
mov
sbb
xor
mov
dec
jl
add
inc
je
mov
cmp
mov
jnp
jle
popf
data16
mov
push
add
lods
sub
jl
lret
or
sbb
mov
sti
cwtl
sbb
adc
mov
ss
clc
push
adc
scas
sub
ds
sarb
out
dec
push
sbb
xchg
incb
sbb
pop
mov
inc
or
vaddsd
push
loopne
jmp
jmp
xor
out
adc
jns
inc
das
sub
stos
add
js
ret
push
lahf
in
lret
clc
pushf
push
and
div
outsl
pop
out
inc
int
inc
pop
movsl
mov
sbb
cmc
hlt
inc
lret
test
sub
cmp
jno
lcall
addr16
cmp
inc
push
mov
cmp
pop
mov
repnz
popf
idiv
mov
enter
adc
cltd
mov
sub
jmp
std
add
mov
cmpb
cmp
sbb
and
add
xor
push
orl
pop
pop
shll
out
push
pushf
test
imul
xchg
cld
or
sbb
dec
scas
sbb
adc
rorl
repnz
icebp
sub
jg
mov
inc
inc
adc
cmp
inc
pushf
sub
shlb
pop
and
sahf
pop
or
mov
lret
inc
gs
xchg
hlt
movsb
adc
xchg
mov
inc
in
cmpb
xchg
cmp
repnz
mov
adc
adc
loop
imul
push
sbb
or
aad
fidivs
push
test
cmpsb
mulb
push
pusha
fsubrp
sbb
lret
mov
aaa
idivb
cmp
fwait
movsl
mov
cli
mov
adc
in
add
mov
pop
mov
shrl
or
daa
pop
pop
sub
jns
jmp
dec
dec
xchg
shll
dec
inc
outsb
into
xchg
lods
scas
adcl
sbb
sarb
sub
test
dec
push
inc
das
inc
fcomps
js
jae
push
mov
adc
dec
push
sbb
or
mov
mov
xchg
mul
dec
ja
inc
push
cmp
dec
add
dec
sub
adc
stos
insb
jmp
cmp
ja
or
cmp
jecxz,pn
sub
and
repnz
daa
in
cmc
arpl
mov
icebp
xchg
jecxz
test
outsl
mov
add
add
add
jne
jmp
ret
mov
mov
popf
mov
jbe
add
daa
add
cld
data16
loopne
aas
fnstsw
faddl
lods
xlat
mov
sti
adc
adc
popa
cltd
repnz
jl
push
imul
sub
inc
arpl
sbb
cmpsl
fldt
ficomps
mov
js
and
idivb
fisttpl
pusha
pop
cltd
jmp
xchg
lret
shrb
cmp
ds
loope
dec
into
sub
push
out
inc
dec
out
out
test
aad
test
push
mov
test
mov
daa
in
jb
inc
icebp
lods
sbb
aam
testl
addr16
pop
inc
cmpsb
into
shll
gs
jb
mull
cmpb
push
pop
push
fcmovnb
inc
in
jmp
negl
test
dec
inc
pop
push
push
ret
int3
cmc
in
jnp
cmp
xor
inc
xor
inc
icebp
add
popf
xchg
sbb
aaa
out
pop
dec
add
mov
sahf
jecxz
stos
nop
mov
sbb
daa
shrl
shrb
mov
xor
add
jle
mov
xchg
fwait
arpl
pusha
fs
dec
mov
lret
jecxz
orb
out
sbb
pusha
outsl
into
test
cmc
mov
mov
test
push
pusha
pop
mov
and
xchg
pop
sub
fwait
insl
ret
shll
test
inc
pop
mov
fisubrl
fstps
test
mov
mov
adc
in
dec
je
inc
mov
lcall
pop
add
xlat
xlat
mov
enter
and
into
dec
icebp
aaa
fnsave
int3
fdivrp
push
out
aas
jmp
jbe
mov
cmpsl
push
adc
and
jns
lds
pop
jmp
fiadds
inc
pop
or
leave
stos
stc
adc
fs
loop
pop
scas
jg
cmpsb
adc
and
mov
iret
mov
ret
add
and
jg
dec
nop
rorl
adc
loop
and
aas
lret
out
dec
sbb
push
push
dec
cltd
lock
fsub
loop
ja
mov
push
dec
clc
mov
ficomps
jmp
mov
mov
sbb
jl
jg
stos
push
mov
sahf
xchg
mov
push
loopne
sbb
decb
aas
mov
cmp
sbbl
jecxz
test
jo
push
and
and
lods
pop
rcrb
xchg
xchg
fidivrs
dec
sbb
sbb
repnz
xor
insb
inc
stos
gs
leave
pop
jg
mov
shl
push
fstpt
sub
dec
mov
jo
aam
mov
or
rcrb
cwtl
sub
in
mov
imul
lds
or
mov
lds
cmp
push
sarl
in
cmpsb
pusha
aaa
push
jns
daa
add
mov
sahf
xchg
call
sbb
sbb
das
cmp
mov
lahf
scas
add
aam
sbb
sarb
xchg
dec
sti
bnd
sbb
add
mov
and
clc
or
or
addr16
addl
xchg
xor
jl
dec
xchg
xor
or
xchg
sub
pop
xchg
jb
pop
cmpsb
lods
push
mov
into
sarl
bound
or
dec
and
mov
sahf
ja
mov
pushf
cwtl
daa
iret
in
in
fbld
mov
fs
movsb
lock
pop
xchg
data16
sarb
add
std
mov
mov
push
mov
cs
stos
cs
mov
mov
subb
xchg
mov
pop
xchg
dec
and
cmp
sahf
ja
pop
icebp
out
mov
out
and
jb
es
add
out
push
lock
pop
cltd
dec
leave
leave
stc
fistl
jae
lret
repz
out
out
cmp
push
xor
and
imul
adc
adc
dec
mov
adc
jle
dec
cwtl
pop
add
aaa
lds
mov
fucomi
stc
and
cmp
cmp
bound
imul
dec
add
mov
pop
fsubs
jno
out
das
ss
loopne
adc
pop
in
or
mov
adc
xchg
in
ret
inc
xor
clc
imul
and
mov
movsb
sub
pop
xor
clc
mov
loop
push
iret
sub
xchg
jne
out
ret
fsubrs
inc
ret
sub
repnz
pop
test
add
orb
xor
lods
into
push
testl
loope
subl
push
test
aas
and
mov
mov
fs
mov
mov
std
sub
fwait
push
or
sti
ret
mov
jb
mov
fdivrs
inc
pop
inc
ret
mov
daa
adc
sahf
imul
inc
xchg
sub
mov
dec
dec
jb
jl
cltd
lret
clc
push
mov
pusha
jl
ror
add
inc
ss
into
mov
iret
dec
bound
pop
sub
aaa
fiaddl
push
cmpsb
mov
mov
xchg
inc
lahf
out
adcb
xchg
mov
cmc
jae
icebp
cmp
or
and
cltd
sbb
outsb
in
or
icebp
outsb
push
mov
int
inc
cld
iret
jecxz
sbb
dec
dec
setno
movsb
cwtl
ds
dec
and
mov
inc
xor
out
enter
in
sub
test
adc
in
cmp
adc
inc
fdivrs
fdivrp
popf
int3
stos
out
test
aam
xchg
xor
pusha
fstps
mov
not
fs
xor
pop
in
mov
ds
ss
jb
cmpsl
xchg
out
and
inc
cltd
aaa
ja
cld
addr16
outsb
and
pop
in
jmp
ljmp
jge
movsb
adc
cmp
mov
fwait
and
insl
loope
xchg
dec
ja
jg
sti
ret
push
xchg
pop
mov
and
xchg
inc
pop
fsubrs
push
movsl
jne
mov
mov
push
mov
popa
dec
jno
xchg
cmp
mov
out
sbb
roll
out
jge
imul
movsl
jp
sahf
sbb
cmp
aas
mov
in
adc
repnz
mov
leave
das
xor
mov
repz
dec
in
cmp
sub
jns
adc
lods
stos
xchg
shrl
rclb
ja
lret
in
pop
mov
cmp
add
and
loop
xchg
adc
lea
leave
sbb
dec
dec
lods
sub
arpl
cs
js
push
push
mov
sarb
iret
mov
lret
lock
or
lods
mov
sti
add
mov
xor
icebp
cmpsl
mov
dec
jbe
mov
push
stc
add
adc
lods
add
sbb
test
sti
rclb
addr16
push
add
out
sarb
aam
lea
jb
rclb
repnz
mov
idiv
add
xchg
cmpb
inc
mov
inc
test
mov
and
jns
outsl
repz
mov
movsl
cltd
ljmp
mov
scas
loopne
dec
and
fbstp
push
stc
fadds
neg
inc
aas
sub
aas
ss
fisubrs
xor
cvttps2pi
out
je
in
mov
xchg
shll
xlat
nop
ror
mov
mov
adc
xchg
sub
int
loop
push
into
xor
or
lods
out
mov
or
jbe
cmpsl
dec
jb
pop
gs
mov
aam
imul
mov
mov
pop
pushf
fs
jae
mov
pop
mov
aaa
call
fcoml
std
es
aaa
and
int
sbbl
pop
mov
imul
and
jae
hlt
xchg
inc
and
nop
or
jmp
mov
xchg
sub
leave
cmp
jge
pop
cs
bound
out
insl
int3
xchg
inc
adc
xor
mov
lods
mov
cmc
xor
cmpsb
jecxz
or
fcmovu
aaa
mov
cmpsb
les
and
xchg
je
test
or
addr16
bound
rcr
es
rorb
jl
sarb
mov
std
inc
decb
sahf
dec
mov
and
cmpsb
jl
sbb
leave
xchg
shrl
pop
lcall
movsl
testb
sbb
iret
cwtl
xchg
aaa
cwtl
jae
pop
pushw
ljmp
inc
adc
cli
xlat
iret
pop
lock
adc
enter
mov
out
pushf
nop
xchg
popa
xchg
jno
jle
xchg
and
pop
test
pop
mov
cmpsb
push
jmp
or
push
ret
shr
sahf
xor
enter
or
int
xor
pusha
movlps
inc
jnp
mov
cmc
push
clc
pop
nop
test
jo
jo
adc
add
sbb
push
and
nop
xchg
std
ffreep
inc
lcall
mov
bound
inc
in
daa
jle
mov
test
mov
filds
inc
test
cmc
mov
fisttpll
pop
call
jne
push
fs
pusha
xor
into
into
mov
cmp
mov
xchg
sbb
leave
iret
sbb
push
and
mov
jmp
xchg
mov
jl
xor
mov
stos
imul
orps
mov
divps
sbbb
lods
ja
sub
cmpsb
fld
sbb
add
scas
lret
xor
sbbb
push
add
add
jle
xchg
test
imul
pop
arpl
mov
xor
xchg
fidivl
je
daa
addr16
adc
jno
dec
xlat
push
inc
mov
xor
in
dec
xchg
and
test
inc
mov
loopne
or
adc
test
pop
jecxz
je
cld
adc
ret
jge
jmp
movl
jg
and
and
cmp
es
xor
mov
in
shl
adcb
xchg
leave
mov
lock
fdiv
mov
push
insl
adc
daa
cmp
shlb
fstpt
aas
dec
sbb
je
jl
stos
xchg
int3
pop
adc
addl
cmp
fcmovnbe
mov
stc
aad
add
dec
hlt
movnti
mov
pop
and
je
incb
adc
rclb
int3
test
insb
mov
add
cli
or
pop
sub
es
les
test
push
repz
gs
cmpsb
shr
sub
dec
mov
fsubs
andl
scas
sahf
jp
inc
jns
pop
imul
push
ds
dec
inc
sub
pushf
xchg
call
shll
xchg
push
scas
sbb
dec
jne
xchg
sbb
pop
push
lock
es
pop
shll
jmp
hlt
cmp
inc
dec
aam
mov
xor
lea
aam
add
jnp
add
dec
popf
inc
xor
adc
mov
pop
inc
cmp
lret
jl
xor
sbb
scas
in
mov
test
push
and
aad
test
lods
and
hlt
adc
adc
fs
mov
or
jno
mov
mov
mov
loope
fwait
bound
pop
popa
pop
dec
stos
jmp
mov
ss
mov
shlb
pop
sub
arpl
negl
mov
mov
mov
in
cmc
xchg
addl
arpl
sub
cmp
mov
add
sarl
push
fcomps
push
add
or
iret
imul
mov
sub
data16
mov
test
fbstp
mov
cld
imul
lock
jo
dec
in
mov
mov
pushf
jl
rcrb
aas
daa
pop
test
fcoms
xchg
ds
cmp
inc
std
out
test
dec
cli
sbb
leave
int
mull
mov
cmc
xor
jae
dec
negb
push
jmp
aad
clc
sub
jg
jnp
adc
cmp
or
mov
loop
outsb
jp
in
js
fdivrl
cltd
add
scas
test
adc
mov
and
in
mov
aam
bound
shll
mov
insl
inc
mov
push
xor
nop
jae
xor
stc
push
add
test
cld
stos
repnz
xor
and
pop
mov
es
clc
pop
dec
push
test
daa
in
stos
clc
sbb
pop
sub
cld
push
js
add
cmc
lds
xchg
sub
inc
mov
out
scas
gs
push
and
add
cmp
dec
cmp
xchg
mov
mov
ret
fiadds
test
test
dec
pop
dec
xor
mov
stc
xor
and
in
jns
sahf
fstps
scas
sbb
xchg
fst
inc
aad
or
mov
repz
stos
lret
outsb
addr16
jge
sub
push
mov
or
jecxz
sbb
cmc
fstps
cmp
dec
cmp
mov
dec
cmpsl
mov
xchg
mov
adc
sahf
fwait
ja
out
mov
das
xchg
pop
das
push
mov
add
insb
inc
cmpsb
xor
fnstsw
je
sbb
aad
cmpl
mov
int
out
ret
repz
dec
shlb
test
cmp
inc
into
mov
outsl
adc
out
enter
js
pcmpgtb
xchg
inc
and
sub
add
mov
rol
jge
and
shll
repz
mov
dec
mov
shlb
inc
stos
mov
jge
out
in
pop
push
mov
insb
cmpsb
push
push
mov
and
fisubrs
loope
shlb
xlat
sbb
fdivrp
inc
imul
dec
adc
inc
xor
mov
jbe
jp
shlb
sub
or
xor
mov
fildll
inc
in
lret
push
mov
dec
cs
and
and
push
loop
aad
mov
jecxz
into
push
or
ss
ljmp
xor
push
inc
cmpsb
cmc
add
mov
cltd
ret
add
adc
fidivrs
sbb
fwait
and
sbb
sub
repz
pop
insb
imul
jns
fmull
sarb
orb
in
orb
daa
inc
andb
inc
test
loop
mov
or
xchg
frstor
fsubl
ljmp
sub
aaa
sub
adc
jg
fistl
movb
pop
cmp
sbb
scas
push
dec
and
or
lcall
sbbl
mov
adc
mov
lods
dec
sar
mov
out
hlt
hlt
out
or
pop
test
outsl
imul
pushf
push
fsubr
shrb
loopne
inc
sbb
icebp
adc
ret
vcmpss
jle
dec
shlw
mov
mov
fs
sub
mov
pop
and
pop
xor
xor
jbe
out
ret
lret
lahf
and
rcrb
add
fiadds
dec
loope
cmovne
insl
cmp
clc
inc
jp
inc
jae
in
jmp
shl
insl
out
in
push
inc
mov
sarb
xor
ret
sbb
in
and
mov
mov
jb
insl
loopne
ja
jle
sbbb
mov
push
ds
xchg
mov
scas
sbb
jle
insb
jle
pop
jp
in
pushf
div
sbb
mov
fnstenv
mov
inc
mov
sbb
pop
jne
sbb
iret
jmp
ss
incl
cmpsl
fadds
test
mov
cmc
xchg
mov
dec
cwtl
pop
xor
jno
pop
stc
push
jmp
mov
push
in
jmp
jne
lods
dec
lock
lea
push
fwait
in
aad
into
out
jg
cmp
xor
dec
xor
xor
jecxz
dec
lock
cmpl
ja
jecxz
push
lcall
aad
jmp
ror
push
adcb
sub
jg
dec
add
jle
int3
icebp
out
inc
and
loop
xchg
popa
fwait
sub
insb
push
ret
inc
and
or
xchg
mov
mov
sbb
fisubrl
sbb
fisttpll
dec
hlt
jp
mov
dec
mov
fwait
ljmp
dec
dec
lods
hlt
or
mov
or
sbb
std
jae
or
clc
das
pop
pop
adc
inc
aas
call
sbb
cmp
and
negl
cs
push
dec
dec
cld
and
movsb
and
dec
jmp
jmp
aaa
push
icebp
lcall
push
lods
lods
aaa
fwait
jp
xor
mov
and
stc
enter
hlt
push
inc
mov
cmp
pop
bnd
pop
add
inc
rcr
sub
pop
pop
lret
movsb
bnd
arpl
mov
push
fcmovnu
ljmp
call
ret
int3
js
rorb
push
sbb
aaa
fisttpll
out
push
jae
inc
dec
adc
push
sub
aad
negl
lcall
mov
sar
in
rclb
cmp
jnp
nop
mov
jbe
stc
dec
sub
mov
push
jg
pop
mov
fstps
std
mov
fwait
mov
mov
mov
stos
pushf
add
nop
push
pop
cwtl
dec
seto
jmp
jb
add
clc
jge
enter
hlt
or
je
lds
jbe
mov
dec
hlt
jnp
xor
lea
push
and
fisttpl
sbb
or
hlt
pusha
lods
enter
testl
or
adcl
or
push
mov
test
and
ret
pop
adc
mov
push
mov
push
adc
mov
dec
sbb
imul
aaa
lods
aas
rol
push
cltd
add
xor
or
xchg
or
pusha
cli
stos
int
sti
scas
outsb
add
fdivrs
hlt
sbb
sub
inc
jno
call
movsb
mov
mov
cwtl
add
pop
add
in
pop
dec
out
sub
test
sbbl
dec
shll
ljmp
and
sahf
cmpsb
fisubs
mov
mov
sbb
inc
in
xchg
ss
adc
insl
xchg
mov
ja
rcll
sarl
sti
push
lahf
pop
rolb
mov
jg
scas
ljmp
cmpsl
in
lock
add
sbb
bound
xchg
mov
sti
in
test
pop
mov
orl
iret
ljmp
sti
scas
test
jnp
mov
add
push
pushf
or
and
imul
out
rclb
test
cwtl
iret
imul
jl
jmp
es
repz
mov
pop
cmp
add
cmp
mov
mov
dec
mov
out
xor
test
dec
or
clc
mov
jg
add
push
adc
dec
sbb
or
cs
shll
push
rcr
mov
inc
mov
cmp
push
incl
movl
cmp
mov
mov
cld
jecxz
scas
repz
insl
or
add
outsl
mov
push
jge
xchg
call
xchg
jge
and
ret
sbb
jecxz
gs
setae
das
lea
push
jb
push
imul
cmp
jg
jbe
addl
loope
pop
shl
daa
lea
inc
lods
adc
pop
jo
push
ja
cmp
mov
popa
xchg
cmc
aas
aam
pop
pop
fwait
xor
mov
stos
jnp
cltd
out
xchg
ljmp
adc
xorl
pop
mov
stc
enter
mov
dec
mov
icebp
mov
subb
sbb
mov
adc
lcall
mov
mov
jno
sti
and
push
sbb
and
pop
push
xchg
insl
adc
xchg
pop
push
and
jle
or
ret
adcb
addr16
jne
outsl
dec
pop
xchg
stos
sbbb
xchg
mov
lret
and
movsl
popf
push
push
int3
mov
jge
add
lds
mov
mov
aam
sub
push
jp
dec
xor
push
arpl
mov
pushf
mov
sub
xlat
movsl
xchg
mov
sbb
pop
cmp
mov
hlt
and
fcoms
dec
sbb
hlt
jge
cwtl
lods
mov
cmp
xchg
sti
fisubs
jmp
adc
loop
fisubl
xchg
cmp
xchg
sbb
and
sbb
icebp
mov
push
pop
xchg
jl
out
sbb
adc
pop
xlat
stos
cmc
mov
pop
mov
outsb
inc
stos
push
fsubrs
push
scas
lcall
inc
cmpsb
loopne
cmp
ffreep
cld
jnp
xlat
push
daa
fwait
pop
sub
sbb
or
imul
adc
cwtl
add
adc
test
mov
cmp
es
mov
cmp
jne
movsb
and
dec
add
sbbl
add
inc
mov
out
cmp
andb
adc
xor
push
mov
lahf
aad
push
fadd
lock
pop
add
push
pop
pop
add
shr
cltd
repz
icebp
inc
fsubr
xchg
in
jle
mov
mov
pop
scas
xchg
fidivrl
lret
cmp
cmp
dec
push
les
jmp
push
movsb
testl
push
lods
fstps
pop
aas
sbb
in
shlb
mov
inc
xchg
out
test
xor
pop
mov
sbb
jl
and
fsubs
mov
rolb
and
cwtl
outsl
lahf
jmp
mov
lahf
and
lea
test
ds
outsb
decl
cmc
dec
sub
add
cmp
push
in
idivb
dec
jbe
jns
mov
pusha
lcall
jp
mov
adc
mov
sbb
xchg
or
xchg
jge
mov
push
in
mov
daa
repnz
and
inc
xor
imul
movsb
inc
push
out
and
jmp
lods
in
sub
xchg
rclb
insl
xor
xchg
aam
fwait
jbe
dec
inc
adc
sub
lea
xor
stc
addb
xor
fildll
push
push
inc
xchg
ja
orb
jp
xor
cli
pop
out
add
adc
cmp
pop
push
scas
outsb
pushf
pop
pop
jnp
insb
enter
aam
pop
ja
inc
enter
sub
cld
dec
lcall
or
lret
stos
adc
xchg
jg
out
cltd
lock
cmpsl
push
int3
loop
inc
adc
sub
dec
sbb
repz
xor
jecxz
adc
mov
push
repz
repnz
sub
xchg
les
sbb
inc
jge
or
cmc
xchg
jo
test
inc
sub
pop
lods
das
gs
movsb
push
outsb
lahf
jg
mov
pop
mov
ss
sbb
and
cmp
sbb
pop
lea
xorb
and
mov
jo
cmpsl
pop
faddl
pop
roll
inc
popa
repnz
jne
mov
mov
daa
and
rolb
lahf
cmp
rolb
mov
vpshufhw
lret
scas
cltd
or
arpl
xor
sub
inc
call
out
std
jnp
add
ret
jecxz
lea
push
lods
cwtl
loopne
cmp
adc
pop
les
jmp
push
bound
xor
rcll
aam
jle
cmp
sbb
decl
notl
idivb
xor
in
mul
jae
mov
mov
lcall
jno
dec
lea
mov
adc
xchg
push
or
mov
push
les
enter
imul
adc
cld
xor
or
sbb
xor
in
and
mov
int
adc
mov
dec
loopne
ljmp
std
sbb
iret
jmp
int
add
or
and
xor
lret
in
push
xor
pop
push
inc
mov
sub
aam
ja
int
fwait
jbe
fld
or
stos
inc
add
ja
addr16
aas
jns
adc
cmc
out
sub
mov
stos
pop
repnz
orb
sub
in
insl
mov
push
mov
das
pop
ja
ret
call
cmp
push
pushf
fwait
sti
push
ffreep
cli
sarl
pop
in
in
adc
adc
sub
xchg
jl
repnz
pop
stos
outsb
pushf
in
fadd
add
insb
ret
test
mov
pop
imulb
xchg
jmp
rcrb
sbb
or
outsl
addr16
mov
cmp
sub
adc
imul
mov
fmull
aaa
loop
xlat
pop
mov
call
scas
scas
hlt
push
stc
mov
pop
addr16
decl
pop
jbe
into
enter
xor
cwtl
dec
insb
ljmp
add
cmp
adc
mov
mov
xchg
push
loope
sub
je
or
hlt
rcl
jp
cltd
aas
jae
jae
mov
add
sub
xor
mov
inc
jle
mov
gs
push
ljmp
loopne
jne
mov
dec
ss
lcall
inc
adc
mov
sarl
out
insb
cwtl
mov
mov
jl
sbb
jbe
int
lods
insl
mov
dec
xchg
movsl
lret
mov
mov
inc
mov
jnp
xor
jno
nop
sub
adc
cmp
or
je
add
test
jns
xsaveopt
push
lds
test
add
mov
xchg
mov
mov
sahf
int3
sbb
imul
mov
stos
jnp
mov
outsb
push
stc
push
jb
xor
ror
pop
lods
scas
adc
adc
sahf
int3
pop
jne
fs
sub
repz
xor
das
cmpsb
sbb
cmc
fistl
stc
xor
mov
imul
cmpsl
xchg
add
mov
aaa
pushf
sub
std
pop
aam
cld
js
adc
pop
push
pop
imul
pushf
out
scas
insb
popa
add
out
dec
push
sub
mov
sbb
push
mov
mov
and
inc
jb
dec
fidivrl
stos
cmp
dec
add
and
das
aam
xchg
les
clc
out
movsb
rorb
jle
lcall
xor
mov
sbb
sub
cmpsb
inc
icebp
lods
inc
ds
fiaddl
jo
cmc
in
fcmovnu
inc
mov
fs
xor
mov
cmp
test
lcall
lds
jp
mov
out
int3
cwtl
inc
pop
sbb
sbb
xor
pop
cmp
scas
cli
xor
rcr
in
addl
ficomps
adc
imul
push
jb
lods
int3
pop
fsubs
sub
std
lods
shrb
xor
mov
mov
mov
sahf
stc
xchg
or
pop
ret
test
dec
push
dec
adc
dec
mov
subb
or
out
lea
hlt
scas
lcall
popf
jg
adc
dec
cmp
aam
add
cld
mov
sti
lock
mov
rcl
push
iret
les
mov
ja
mov
scas
stos
sti
lock
loopne
sahf
push
push
hlt
jl
inc
enter
jle
je
adc
xor
dec
testl
mov
mov
xor
pop
inc
lods
xor
cwtl
dec
popa
mov
leave
arpl
xchg
pop
push
push
mov
popa
in
aaa
sub
and
cs
dec
das
ficomps
pop
daa
ds
cmpsb
into
clc
push
xor
int3
adc
mov
pop
inc
cli
dec
stos
sbb
mov
xor
pushf
mov
sbb
pop
push
sbb
shrb
xchg
or
mov
pop
ss
aam
iret
lcall
cli
xchg
out
jno
int
sti
or
fdivrs
lahf
leave
jg
adc
rorl
sbb
mov
mov
xor
add
adc
test
push
mov
mov
pushf
add
add
sub
mov
popl
or
xor
mov
mov
jnp
cltd
mov
out
cmp
cmp
sahf
add
jno
sub
in
inc
daa
clc
stos
add
or
or
jle
jle
gs
xlat
push
or
loope
cld
arpl
push
stos
sti
dec
dec
gs
cmp
fbld
sbb
mov
pop
inc
lret
push
mov
push
aam
divb
nop
and
cli
negb
xchg
fildl
lret
jne
arpl
outsl
xor
xchg
cmpsb
push
jecxz
xchg
fldcw
das
sub
add
xor
or
xchg
jns
dec
push
bound
cmp
mov
adc
repz
xchg
xchg
in
xchg
cmp
rorl
jmp
xor
pop
inc
xchg
fnstcw
into
pop
ficomps
cmp
mov
inc
mov
push
clc
ss
rcl
xchg
lahf
mov
rol
sub
xchg
pop
add
sahf
hlt
aas
push
xor
adc
jb
imul
ss
cmp
addb
push
jecxz
pop
xchg
xchg
int3
jg
adc
mov
insl
ljmp
movsl
inc
cmp
hlt
or
ret
arpl
aam
icebp
push
aas
lods
inc
sub
push
out
out
adc
push
lret
gs
cmpsb
inc
bnd
in
push
push
jae
jle
nop
jecxz
push
cwtl
rcll
or
inc
mov
incl
inc
jnp
into
mov
ret
xchg
test
pop
adc
cmp
inc
pop
sarl
mov
dec
pop
xor
pusha
push
push
lahf
mov
dec
xchg
incb
std
push
lcall
adc
fbstp
hlt
movl
je
and
sbb
pop
ss
testb
pop
or
xchg
mov
and
mov
push
inc
mov
sti
sub
stos
das
pusha
jae
xor
dec
mov
pop
jg
mov
mov
mov
lea
cld
push
imul
mov
movsl
sub
push
dec
out
decl
fidivl
adc
jo
add
jno
imul
stos
and
xor
adc
addb
dec
lea
jns
mov
cwtl
sub
push
insl
cli
push
jns
testb
ja
lahf
sub
lds
or
push
ja
and
and
scas
cmp
stos
jg
push
xor
popf
cmp
dec
add
sbb
cli
andb
push
jne
push
daa
aas
lods
inc
lds
add
jb
mov
scas
outsb
xchg
xchg
push
adc
push
push
and
mov
scas
jmp
jg
addr16
or
lods
fisttpl
idivb
xor
data16
ss
mov
sbb
rcll
das
cwtl
sahf
cmp
dec
scas
popa
sarl
adc
pop
and
lret
xchg
mov
out
in
std
push
push
xchg
out
inc
addr16
mov
push
bound
jne
inc
pop
cmp
dec
out
repz
or
icebp
jno
mov
mov
dec
add
ror
imul
inc
fwait
jmp
jns
daa
rcrb
add
movsb
sbb
notb
jge
xchg
pop
and
stos
dec
push
cmp
or
fisttps
inc
adc
movsl
or
repz
adc
xor
sbb
mov
jp
pop
and
sbb
repnz
rorb
insb
sbb
fisubrs
add
shl
add
xor
call
xorl
cwtl
mov
xchg
mov
add
push
loopne
xchg
test
jb
in
fists
push
mov
sub
cmp
in
jmp
push
mov
rol
fdiv
sbb
and
lahf
jae
inc
call
out
xchg
push
subb
or
ret
adc
pop
add
xor
jbe
sti
mov
pop
mov
pop
popa
stc
mov
imul
xchg
jmp
sub
jmp
ficoms
sbb
pop
and
adc
xchg
jnp
inc
mov
daa
lret
sub
add
push
mov
mov
jnp
sti
xchg
push
iret
xchg
insl
fsubp
std
sbb
mov
add
xchg
lahf
dec
fcmovnu
movsl
push
sahf
ret
jnp
mov
inc
jp
mov
jg
jbe
enter
adc
inc
mov
outsl
push
mov
cmpsl
push
or
mov
xor
mov
popa
dec
mov
dec
pop
out
xor
jns
loop
fistpl
repz
in
dec
sbb
arpl
out
push
daa
dec
and
cmpsb
int
or
fdivl
fisubl
fmull
sub
popf
cmc
loope
push
and
xor
jg
pop
fsub
sysenter
rcrb
adc
imul
inc
aam
int
cmp
jne,pn
fildl
aas
add
mov
sarb
enter
loopne
mov
adc
fsubl
addr16
pushf
ss
mov
adc
aaa
inc
adc
dec
fs
mov
sarb
sahf
clc
sub
mov
stos
das
sti
dec
mov
xchg
arpl
cmc
mov
or
aad
inc
movsb
mov
addr16
mov
in
clc
mov
push
mov
int
jmp
loopne
fs
xchg
sub
mov
jge
cmp
aas
enter
dec
mov
cld
adc
or
ja
ds
bound
lds
xchg
mov
sub
pop
ds
sbb
pusha
adc
outsb
xchg
adc
mov
push
mov
or
sub
inc
int
mov
pop
int3
out
test
or
imul
std
fstpt
inc
or
ljmp
repnz
pop
lds
or
xor
jg
rclb
sahf
cs
ds
shlb
add
dec
ljmp
mov
xchg
push
adc
push
mov
js
fimuls
jecxz
add
lds
xchg
dec
into
int
imul
pop
mov
mov
aas
pop
imul
stos
pop
mov
cmp
xchg
xor
ljmp
mov
or
mov
outsl
movsl
push
add
lock
psubusw
fbstp
or
call
push
stc
iret
cld
push
mov
addl
test
sbb
adc
ljmp
fstpt
xor
mov
imul
sbb
xchg
mov
bound
je
fistpll
les
push
mov
sbb
std
loopne
mov
dec
cmpsb
dec
repnz
or
out
aam
mov
lahf
popl
icebp
into
and
fprem1
push
lock
adcb
addr16
jp
pop
out
sub
jno
sub
or
insb
test
sbb
inc
subb
jg
gs
nop
mov
daa
push
int
cli
sbb
mov
and
fildl
pop
dec
add
call
pop
or
fwait
lods
ds
mov
out
or
mov
or
xor
xor
dec
ljmp
inc
xchg
adc
ljmp
gs
xorb
mov
add
mov
ljmp
outsb
xchg
or
fiaddl
sub
fucomip
and
xor
mov
sbb
mov
ss
mov
mov
outsb
test
negw
xor
pop
mov
jno
mov
loope
sub
mov
mov
xchg
loop
pop
add
add
xchg
adc
sbb
iret
bnd
jl
aaa
add
clc
sub
mov
xchg
xchg
sub
mov
pop
lds
in
rolb
xchg
orl
jns
xchg
mov
aad
push
sbb
outsb
pop
rcll
or
repnz
lcall
aad
mov
pusha
adc
sub
add
adc
adc
scas
dec
push
bound
fiaddl
enter
push
push
nop
and
sub
out
dec
daa
lods
mov
js
aaa
outsl
pop
js
aad
cmp
or
lds
xor
aaa
mov
gs
ret
push
and
jo
aas
addr16
sub
mov
mov
xor
add
nop
cmpsl
test
jbe
fimull
and
aad
mov
push
pop
daa
mov
xor
lock
aad
pop
cs
lock
xchg
pop
cmp
jge
aaa
sub
aaa
cmp
jb
in
mov
adc
ljmp
mov
or
loopne
lcall
mov
lcall
cmp
add
clc
jle
in
sbb
hlt
pushf
lahf
loope
ret
stos
and
lods
dec
les
mov
bound
addr16
imul
aaa
mov
lods
adc
pushf
push
es
aaa
lret
mov
push
sub
cs
in
or
sub
adc
cmc
enter
mov
leave
sti
add
jg
cmp
mov
push
xchg
pop
mov
cmpsb
ret
fldl
js
jae
out
mov
or
sub
inc
pop
cli
aam
cmp
sub
rclb
jge
pop
or
push
cmpsl
lea
xlat
or
imul
push
imul
shr
mov
mov
mov
fsubr
xchg
aam
lret
pop
sub
dec
out
inc
jnp
mov
out
mov
inc
mov
out
add
push
pop
inc
mov
or
lds
sub
bound
cmpsb
sti
daa
loop
mov
in
roll
mov
mov
xchg
jb
loopne
pop
repz
sbb
and
dec
loopne
cmp
mov
arpl
insb
imul
and
jmp
mov
cmp
cmpsb
inc
in
rcr
insb
repnz
pop
fs
mov
xchg
xor
rclb
in
cmp
dec
repz
mov
loope
lods
jae
adc
daa
mov
inc
int3
insl
pop
pop
push
cmp
push
pop
push
jl
dec
mov
mov
cmpsb
scas
not
push
dec
cltd
sbb
daa
xchg
pop
adc
xchg
cwtl
fbld
and
push
loop
aad
and
dec
pusha
mov
pop
lds
dec
cmpsb
ret
rolb
mov
or
pop
sub
pop
leave
ret
out
jg
fstpt
clc
lods
ret
cld
scas
jg
andl
mov
push
cltd
jb
je
divl
mov
sahf
mov
mov
inc
xchg
outsb
outsl
jnp
push
add
xchg
mov
enter
add
add
push
mov
xchg
xchg
pop
inc
push
lret
fisttps
aas
shlb
into
push
mov
sbb
aam
ret
mov
ljmp
fbld
jp
push
fcmovnu
lods
push
enter
mov
adc
iret
sub
adc
scas
add
dec
fcoms
mov
outsb
inc
jle
inc
pop
rolb
dec
shr
insl
mov
aam
cmp
push
movsl
test
xchg
imul
mov
mov
ja
fidivrs
push
adc
xchg
sbb
sbb
mov
outsl
les
xchg
aas
pop
pop
dec
dec
push
mov
nop
fildll
mov
mov
gs
adc
sti
sti
jle
les
jge
add
aaa
shlb
jo
lcall
cmp
mov
jmp
imul
push
pop
dec
cld
pop
sbb
mov
stc
mov
mov
sti
sub
sahf
push
subb
pop
mov
in
push
popa
or
adc
add
hlt
call
xor
push
mov
icebp
int3
push
push
mov
or
mov
xchg
jecxz
mov
out
stos
push
mov
push
sbb
fldcw
call
test
in
call
pushf
stos
nop
mov
inc
lea
xchg
cwtl
inc
gs
pop
pop
add
sti
mov
aas
mov
jno
jns
push
mov
es
shl
adc
xor
add
xchg
jo
xchg
pop
xor
pop
adc
dec
shll
cmc
xlat
in
js
pusha
push
push
in
rorl
clc
jae
xchg
in
push
jnp
inc
in
ret
test
mov
jmp
push
jns
xchg
int
ja
jl
add
imul
adc
mov
mov
sbb
push
lock
push
repnz
mov
or
or
lods
or
stos
adc
clc
xor
push
fistpl
jne
into
mov
xchg
mov
xor
stos
xlat
or
xor
xor
out
xor
push
in
push
incb
ljmp
inc
fmul
mov
sti
xor
popf
sti
mov
dec
jg
and
test
int
fsubl
lret
lret
cmp
shr
sahf
cwtl
call
add
imul
pop
cmpb
mov
rcr
and
xchg
xor
lcall
and
pop
outsb
shll
aam
pushf
xchg
mov
dec
in
push
arpl
mov
fsubl
push
mov
inc
xor
pop
daa
mov
adc
outsl
fstps
test
mov
lret
out
cmpsl
pop
cmp
mov
lahf
lret
inc
rcll
loopne
and
add
fs
xor
clc
and
fsin
jecxz
push
cmc
popa
mov
test
test
data16
push
push
mov
hlt
cmpsl
xor
enter
add
sahf
stos
jns
shlb
inc
pop
pop
orb
jg
sarl
ss
scas
movsb
mov
jmp
push
and
loop
or
jge
sti
cmp
jge
dec
mov
fistpll
movsl
popf
mov
jl
xchg
ret
ficoms
xor
gs
aad
insl
or
mov
xor
mov
enter
adc
jp
pop
mov
add
nop
arpl
inc
pop
pop
or
mov
int
push
aam
jle
stos
mov
or
push
add
aad
add
insb
inc
test
cltd
pop
xor
and
add
sbb
repz
xchg
jno
adc
pop
mov
push
into
adc
add
adc
xchg
cmp
fstpt
ja
aaa
and
call
xlat
int
inc
cmpsb
dec
inc
or
xchg
push
or
jp
jmp
lea
adc
dec
bound
or
cmp
mov
out
mov
in
sbb
push
jge
inc
hlt
mov
hlt
mov
mov
jbe
adc
mov
and
mov
inc
testb
dec
subb
inc
mov
cld
or
fistps
lods
jp
mov
jge
xchg
jmp
insb
mov
addl
or
xor
mov
ss
loop
cmpl
cmc
mov
xchg
test
cmp
imul
and
cmp
sub
je
xchg
dec
enter
je
lods
pop
out
sbb
jmp
sub
enter
pushl
push
aas
out
dec
mov
adc
or
sub
mov
repnz
mov
pop
rcl
inc
iret
iret
mov
into
fldenv
mov
dec
nop
rclb
imul
subb
lahf
lret
pop
jbe
cltd
lods
mov
mov
adc
sbb
mov
jecxz
cmpsl
jge
je
push
out
jge
jne
or
dec
popf
out
daa
cmpsb
mov
cmp
jo
imul
clc
scas
sub
jge
pop
add
pop
dec
push
insb
pusha
int3
aaa
lods
mov
cmp
mov
outsb
out
icebp
sub
xchg
or
leave
cli
adc
push
cs
ja
sti
icebp
test
pusha
stc
mov
shll
sbb
aad
enter
pop
push
mov
cmp
add
xchg
clc
adc
test
push
loope
dec
or
jp
mov
fsubr
mov
pusha
ljmp
lret
sub
xchg
scas
mov
sarb
hlt
and
and
cli
testl
out
rcl
cmpsb
outsl
repz
out
test
pop
mov
mov
je
push
push
gs
push
andb
inc
pusha
and
jle
push
xchg
mov
mov
loopne
mov
or
adc
push
sub
and
mov
les
adc
rol
mov
inc
outsb
mov
shrl
add
rcrb
jl
ljmp
lods
cmp
movsl
jge
arpl
ljmp
fcmovbe
mov
fwait
inc
dec
je
push
mov
jbe
and
jmp
fcoml
ret
loop
cltd
xchg
mov
jmp
push
loope
rclb
push
dec
repz
clc
xchg
ret
jae
ret
pop
push
lahf
add
xor
rolb
loopne
fwait
pusha
imul
pop
adc
adc
and
mov
mov
stos
call
and
push
arpl
lods
dec
jo
push
call
fs
arpl
fnsave
dec
cmpsl
movsb
cmpsb
push
inc
mov
mov
pusha
bound
adc
leave
jne
mov
enter
mov
push
fistl
rolb
mov
push
push
mov
adc
fcom
inc
gs
xor
dec
dec
or
lods
inc
mov
jl
popa
sbb
push
jb
ret
and
mov
lret
sub
push
and
cmp
fidivrs
mov
push
or
xchg
jmp
into
xor
cmc
sbb
push
push
out
pop
icebp
pusha
out
cmp
mov
aam
sti
push
xchg
cld
rolb
cmpsb
int3
pop
push
cltd
out
push
mov
push
or
cmp
mov
insb
ret
jne
inc
or
sbb
jg
mov
lcall
inc
ret
push
ficoms
shlb
outsb
lahf
jb
enter
push
sub
cmp
mov
jo,pn
add
hlt
outsb
jnp
cmp
push
push
inc
in
jge
inc
rcll
sbb
aad
leave
xor
jb
out
inc
aam
xor
pop
sbb
movl
dec
ret
push
mov
mov
mov
xchg
in
lret
add
jns
and
repnz
push
or
cmp
mov
sub
lcall
sbb
ss
in
cli
mov
xlat
pop
nop
js
and
push
dec
in
or
jge
cmp
inc
pop
fcompl
xor
data16
scas
xor
out
xchg
stc
call
and
and
cltd
outsb
dec
mov
scas
ja
iret
or
cmp
adc
add
mov
add
mov
loope
inc
xchg
push
mov
fcomip
dec
sbb
mov
sbb
xor
adc
fistps
stos
out
mov
jg
jbe
adc
sub
call
gs
test
ss
out
mov
fs
cmp
push
addb
cmp
rolb
shrl
mov
testl
fwait
popa
dec
fnstcw
into
mov
iret
popa
cmp
cmp
and
xchg
pusha
mov
mov
mov
es
sub
in
lods
in
xchg
or
pop
and
mov
sbb
test
call
inc
push
mov
pop
test
cmp
inc
xchg
fiadds
dec
jae
les
mov
clc
aad
movsb
mov
gs
mov
in
mov
lea
cltd
mov
mov
int
cwtl
mov
jmp
adc
jge
shrl
push
mov
mov
lock
bound
inc
mull
enter
inc
mov
mov
mov
es
add
addr16
out
push
jns
ret
xor
fwait
cli
stos
out
out
int
xchg
loop
cmp
sar
in
cwtl
push
mov
mov
loope
pop
shlb
dec
movsl
shll
shlb
out
hlt
xchg
mov
add
jg
lds
in
xchg
or
mov
adc
add
enter
and
xor
push
dec
mov
out
hlt
pushf
jge
scas
mov
sub
dec
lods
int
sub
jmp
mov
ljmp
lret
cmp
push
arpl
out
lods
fcoml
je
and
adc
jns
pop
or
call
add
push
or
pop
pop
sbb
lds
and
lret
adc
mov
jmp
push
cmp
aam
lods
mov
and
stc
dec
mov
jo
push
cmpsl
jno
insb
push
stos
lret
sub
sub
xchg
out
pop
ss
sub
jmp
cmp
out
repnz
push
lahf
inc
fsub
into
outsl
pop
dec
ss
cmp
outsb
shlb
jo
loopne
call
cmpsl
xor
jge
fstl
push
pusha
xlat
stos
popf
ret
nop
push
outsl
nop
aad
and
mov
inc
pop
pop
add
push
outsb
insl
frstor
test
push
addr16
cmp
cmp
test
pop
push
xor
xchg
sbb
mov
cwtl
adc
pushf
repz
std
icebp
xchg
push
pop
call
pop
or
sbb
in
sub
inc
mov
cmpl
cmpb
add
movsl
push
mov
sbb
inc
pop
xchg
sbbl
test
pop
ret
adc
or
sub
sti
aas
bound
add
mov
rcrb
push
test
push
lock
xor
testb
call
pop
mov
mov
sti
fistl
mov
ljmp
addr16
lahf
out
frstor
jge
leave
lods
int3
sbb
mov
push
adc
mov
lret
outsl
leave
int
addb
push
mov
shr
jg
cmp
sbb
sub
andb
data16
lods
test
lock
clc
repz
push
push
xchg
add
mov
test
andb
lcall
pop
add
push
cmp
sub
sbb
pop
sub
insb
xor
sub
pop
shl
popa
dec
xchg
std
out
mov
loop
mov
loopne
xchg
xor
add
jmp
sar
ds
loope
push
and
scas
insl
push
in
mov
cmpsl
mov
add
mov
mov
or
mov
dec
dec
inc
add
sbb
testl
cld
pop
mov
ds
adc
push
es
jns
mov
sub
dec
pop
jno
notl
in
gs
cld
fcoms
lcall
add
test
push
pop
lret
mov
jge
mov
ret
fsts
xchg
mov
xchg
loopne
insb
enter
repz
cmp
or
xchg
sub
or
fidivl
test
hlt
pop
mov
xchg
imul
adc
gs
lahf
push
pop
sub
and
and
inc
adcl
jg
inc
xlat
rcr
icebp
ljmp
push
xlat
mov
int
lods
mov
jo
movsb
cli
insl
cltd
push
sub
lods
pop
push
leave
add
fcmovu
arpl
daa
daa
sbb
imul
dec
dec
js
decl
pop
or
xor
adc
sbb
mov
mov
repnz
aad
sub
incl
mov
fs
ljmp
sbb
jecxz
jge
stos
hlt
or
mov
add
inc
sub
aaa
inc
pop
mov
sbb
shll
lret
loope
fistpll
xchg
sub
dec
mov
cli
mov
jge
clc
mov
sbb
cmpsl
add
loopne
out
cmc
je
aad
lea
cmp
mov
jecxz
stc
ret
sub
in
push
sbb
jmp
mov
icebp
cmpsb
mov
cmp
cmp
daa
stos
pop
push
dec
hlt
or
dec
fsubrp
sbb
insb
int3
adc
cwtl
mov
or
cmp
add
cmpsb
push
in
mov
lret
xchg
mov
and
mov
adc
xchg
arpl
fcoml
ficompl
pop
mov
mov
mov
inc
mov
shrl
fnstsw
cmp
mov
sarb
out
jbe
xlat
addb
int
sub
jbe
cmpsb
inc
hlt
ljmp
and
aas
and
push
inc
jns
mov
nop
ret
mov
add
pop
or
js
cmp
push
aaa
lret
and
pop
shrl
push
push
ss
jmp
jg
sbb
loopne
xor
cmp
outsb
das
fldenv
add
and
std
rorl
xor
jo
xchg
lock
aaa
call
fsubr
dec
es
mov
push
mov
shr
cmp
xor
mov
jb
jnp
icebp
dec
fidivrs
in
jbe
sahf
sbbl
outsb
gs
mov
xor
stos
mov
push
lods
pushf
adc
lret
mov
into
push
sti
jns
mov
push
enter
xor
movsl
das
xor
push
negl
mov
shlb
push
lea
push
in
mov
adc
hlt
bound
mov
pop
sub
repnz
or
and
adc
adc
cwtl
clc
ret
daa
push
mov
into
lock
or
inc
inc
mov
mov
mov
stos
testl
mov
xor
jne
xor
les
cmp
adc
out
pop
repnz
jae
pop
jl
dec
cmp
int
cli
rol
out
cmpsb
push
mov
test
xchg
popf
arpl
filds
lods
xor
sub
data16
test
mov
insb
hlt
sarb
fs
sub
inc
sbb
lods
push
mov
shr
aaa
inc
jl
jns
sar
mov
pop
dec
aaa
pop
movntq
out
movsb
push
adc
mov
jmp
adc
mov
cli
inc
iret
mov
js
xchg
lcall
push
xchg
movsb
int
sbb
jo
mov
dec
dec
test
xchg
push
xchg
add
add
outsl
jmp
std
prefetch
or
in
add
sub
in
sub
into
lea
rolb
push
lahf
and
dec
data16
in
push
mov
int
xchg
push
popf
jle
pushf
aas
jbe
loope
daa
jl
mov
lret
aad
mov
popf
push
jns
notl
test
rolb
mov
insb
scas
mov
icebp
push
mov
stos
in
push
mov
xor
aas
insb
jae
out
cmpsb
xchg
ss
icebp
mov
addr16
lahf
push
dec
and
xchg
pop
inc
xchg
cld
cmp
add
cmc
or
jl
cli
jmp
jo
pusha
mov
jp
notb
jne
jns
call
rcrb
mov
pop
mov
fwait
push
out
mov
out
shlb
push
mov
fwait
sub
sub
incb
mov
mov
push
sub
jb
cld
jg
leave
jmp
adc
fwait
out
jg
mov
stos
add
push
xor
jb
xchg
outsb
lahf
mov
jae
mov
es
xor
arpl
call
out
adc
push
xor
je
in
mov
lods
clc
push
inc
push
cwtl
push
add
xchg
mov
daa
mov
int
jl
movsl
sahf
sub
cmp
add
push
jnp
fcompl
add
stos
in
lds
add
negl
clc
ret
sbb
lahf
sub
mov
in
rolb
mov
les
scas
mov
or
mov
pop
cmpsb
mov
cmpsb
and
pop
dec
xchg
imul
movsl
and
mov
repnz
inc
shr
mov
rclb
pop
add
lret
jp
dec
jne
stos
outsl
movsl
dec
ja
push
inc
inc
xchg
push
pop
test
xchg
cwtl
push
jae
sbb
jmp
lods
popf
jmp
and
xchg
xor
pusha
cmp
jae
push
sbb
divl
pop
jg
mov
adc
jae
aas
sti
popa
dec
cmpl
mov
jge
xchg
pop
xchg
add
adc
xchg
and
cld
pusha
pop
adc
sbb
and
pop
dec
xorb
fildll
test
and
xchg
xlat
bnd
inc
ret
jge
jg
out
xlat
mov
lods
sbbl
ret
cmpsl
shlb
movntq
ja
inc
cmp
in
mov
jmp
lods
ja
or
push
mov
sbb
orb
push
sub
lret
lcall
xlat
push
cmp
ficoms
cmpb
sbb
mov
push
adcb
xor
fidivl
jmp
push
xor
ficoml
mov
push
pop
cmp
push
sbb
cwtl
fs
xchg
popa
popf
pop
ds
push
pop
mov
movsb
leave
cmpsb
pusha
jae
loopne
ror
jnp
mov
pop
mov
and
push
scas
mov
outsl
pop
dec
sub
jae
xchg
aaa
xchg
lea
cmpsb
stc
cld
adc
pop
int3
xchg
jmp
jmp
enter
xchg
inc
dec
lods
push
push
xchg
pop
popa
or
push
jge
mov
adc
mov
in
aam
add
dec
push
and
mov
mov
dec
push
adc
xchg
movsl
lret
pop
out
loop
js
ret
cmp
mov
mov
cwtl
inc
inc
out
scas
cld
or
loope
test
push
das
orb
sbb
dec
cltd
arpl
bound
ds
lock
mov
push
push
ss
and
and
xchg
mov
fs
negb
fbstp
jle
jbe
out
cld
inc
dec
data16
push
fiaddl
push
jecxz
push
mov
lret
push
out
in
ja
scas
mov
mov
addr16
pop
add
sbb
push
fsubrl
adc
mov
mov
dec
fsts
adc
loop
and
fsub
xchg
mov
aaa
dec
add
dec
mov
scas
or
fldl
mov
aaa
subl
jae
mov
ljmp
outsb
enter
push
xchg
mov
pop
cmc
mov
push
and
mov
shrl
loop
addr16
pop
and
adc
repnz
jg
pop
inc
xchg
lods
pop
in
adcb
popf
add
and
cmp
cmp
lcall
pop
and
test
or
sbb
add
pop
aas
and
loopne
mov
mov
or
xchg
adc
push
dec
neg
lds
out
pop
call
dec
adc
or
fwait
clc
and
fst
lods
or
ds
cmp
adc
cmp
shlb
jp
daa
ret
jmp
adc
mov
movsl
cwtl
lock
mov
nop
mov
dec
inc
mov
dec
sbb
adc
xlat
inc
out
flds
and
sbbl
lea
cwtl
xchg
lock
mov
fsts
aaa
fcompl
hlt
mov
out
sbb
jne
pop
lcall
mov
rolb
add
jle
and
in
xor
add
push
sbb
ret
js
into
lahf
mov
sbb
add
cltd
jns
loopne
mov
adc
mov
popf
dec
xlat
test
push
mov
scas
add
add
call
jge
xor
enter
xchg
je
inc
mov
popa
mov
mov
sub
stc
sbbb
push
in
ror
cli
sub
sub
inc
repnz
mov
mov
mov
sbb
jne
data16
push
in
sbb
add
daa
sub
xchg
adcl
adc
hlt
popa
mov
lcall
dec
inc
add
pusha
jmp
dec
rcll
aaa
mov
icebp
clc
push
sbb
xor
cmp
and
and
sbb
xor
cmp
sub
outsb
enter
mov
lods
xlat
addb
sti
jbe
mov
mov
out
jne
in
bnd
mov
xchg
cmp
insl
xchg
fwait
mov
pop
ret
or
test
imul
test
es
stc
loopne
or
ficompl
icebp
mov
lret
sahf
jmp
add
lea
insl
popf
cmp
rep
outsl
push
dec
dec
cmp
mov
pop
pop
xor
mov
pop
dec
dec
frstor
mov
mov
aas
mov
pop
insb
cmp
xchg
pusha
ret
mov
and
cmp
mov
mov
repz
cmp
sub
int3
xorl
pusha
sub
push
xchg
negl
xchg
movsl
sub
ret
je
dec
adc
lods
dec
or
fcompl
inc
bound
inc
dec
xchg
les
dec
insb
pop
loope
movzbl
adc
xchg
imul
pop
inc
int
subl
cmp
cmp
daa
pop
daa
mov
dec
xchg
cmpsl
push
ret
scas
mov
ds
idivl
mov
dec
cmp
jp
gs
xchg
add
inc
repnz
cmpsb
sbbb
xchg
pop
test
inc
push
pop
sti
mov
mov
icebp
aam
hlt
in
push
or
dec
ss
inc
mov
xchg
ret
in
cmpsl
insb
shlb
push
lock
loop
mov
xlat
pop
sub
je
mov
insl
ficoms
dec
inc
push
scas
out
lcall
mov
dec
cmc
lcall
mov
or
lock
mov
nop
std
jb
push
pop
fwait
dec
add
shrd
fdivr
sbb
movsb
push
lock
popa
cmp
js
cld
js
inc
repnz
mov
mov
xchg
jp
push
xchg
push
imul
cmpl
stc
adc
pop
sarl
lret
loop
add
or
or
sub
xor
arpl
mov
mov
xor
pop
mov
ja,pt
xor
lret
and
sub
stc
fsubr
mov
mov
mov
sub
xchg
push
mull
jmp
in
sahf
and
pop
lahf
adc
loopne
xchg
pushf
pop
mov
jnp
mov
mov
jae
push
das
test
ss
inc
test
inc
adc
mov
cmpsl
rcll
sbb
sbbb
mov
call
sbb
std
mov
les
inc
jmp
and
in
call
mov
sub
flds
test
cmp
aam
ret
push
mov
fdivrl
dec
sbb
xor
mov
mov
cld
dec
mov
pop
jne
xchg
imul
add
ja
adcb
outsb
mov
mov
sbb
adc
lds
nop
cmp
xchg
mov
scas
push
sbb
xchg
xor
dec
mov
jecxz
xchg
ja
repz
arpl
iret
fs
stos
jmp
or
xor
shl
ss
pop
cmpsl
movsl
movsb
xor
test
enter
cmp
xchg
mov
lcall
jno
sahf
jne
ret
sub
inc
jbe
add
xchg
imul
inc
sahf
mov
test
out
mov
cmc
mov
push
inc
pop
outsb
adc
pop
sahf
mov
add
xchg
add
or
xor
push
dec
jne
jmp
testb
repz
fwait
das
loopew
adc
std
pop
push
adc
mov
ret
icebp
movsl
subb
out
sahf
push
and
cmp
or
scas
fildll
lahf
inc
scas
dec
mov
jns
mov
sub
shlb
xchg
jnp
push
lret
push
jns
sub
push
inc
cmp
in
cmpsl
aaa
mov
imul
lcall
mov
xor
or
mov
lret
jae
inc
in
sub
jnp
and
lret
or
xchg
aas
dec
adc
sti
lret
imul
sbb
loop
jns
loope
mov
sarl
scas
adc
xchg
jl
or
push
mov
xor
mov
gs
outsb
movsl
fmuls
and
mov
pop
dec
subb
cltd
hlt
cmp
nop
jo
ss
mov
movsl
sbb
dec
dec
xor
insl
sub
xchg
sbb
js
and
bound
cmp
sbb
das
inc
shl
cmc
lds
mov
cmp
jmp
dec
fimuls
add
pop
mov
xchg
lods
lods
mov
cmp
into
sub
inc
xchg
jnp
xor
xor
popa
jp
pop
jg
push
pop
das
add
xor
das
movsl
mov
int
fs
pop
cmp
or
jl
adc
popa
and
xlat
jo
and
push
mov
jnp
mov
test
test
mov
repz
mov
divl
pop
cmp
dec
mov
add
imul
fs
jle
add
xchg
mov
push
mov
sbb
cmpsb
mov
aas
fiaddl
divb
ja
cmp
rcr
push
movsl
aas
add
inc
mov
test
ret
xor
push
je
sub
lods
dec
cmp
loope
mov
xchg
adc
mov
cs
jmp
stos
jg
popaw
arpl
cmp
inc
sbb
sbb
rcrb
cmp
xchg
inc
add
sub
lods
inc
and
cmc
sbb
mov
jle
mov
call
movsb
out
add
loop
popf
add
stos
and
aad
inc
insl
arpl
lcall
fcomip
jo
jnp
jmp
mov
imul
jg
inc
sub
vmovq
push
insl
loope
pop
or
mov
nop
or
test
testl
jne
test
push
cmpsb
mov
push
cmp
sahf
leave
push
mov
inc
push
repnz
outsb
adc
sub
pushf
scas
sarl
inc
xlat
cld
scas
pop
cmp
xchg
fldenv
lcall
pushf
push
or
scas
inc
push
xor
adc
nop
dec
inc
cld
shlb
push
cltd
add
adcl
push
jns
lret
mov
lahf
fimull
mov
mov
sub
js
adc
movsb
mov
adcb
and
roll
cwtl
mov
xchg
or
inc
adc
jne
and
mov
fwait
shlb
or
cmp
cmp
inc
in
ja
lret
imul
insl
mov
lahf
push
xchg
fdiv
mov
pop
add
out
xlat
push
in
dec
inc
push
neg
xchg
lock
clc
sbb
xor
out
fldenv
sti
std
and
out
test
push
lret
arpl
popf
test
movl
ds
mov
mov
cmpsl
ficompl
fstpl
cmpsl
out
inc
xchg
xchg
inc
aas
cmpsl
sub
subl
mov
dec
jg
jb
adc
and
add
sbb
mov
and
or
scas
pop
fwait
rorb
dec
jae
inc
push
shlb
xlat
sub
xor
inc
lahf
adc
dec
mov
cs
jo
add
pop
nop
sti
sub
daa
fdivrl
jbe
push
sub
cld
jo
enter
gs
xchg
add
fisubl
mov
xor
or
subl
push
jno
test
sub
adc
push
lods
pop
mov
sbb
mov
int
mov
mov
mov
lahf
mov
sub
pop
out
aas
subb
add
jle
pop
jmp
add
or
jno
mov
xchg
icebp
mov
pop
xchg
xor
movsb
cmp
mov
into
push
xor
inc
out
insl
pop
push
or
or
push
dec
pop
sub
clc
xor
icebp
lock
dec
bound
mov
mov
int3
dec
out
mov
popa
inc
inc
add
add
jno
dec
xor
mulb
mov
push
cltd
push
out
lcall
cli
sbb
mov
inc
cmp
adc
sub
adc
inc
cmc
xor
rcll
lret
mov
fsubl
mov
outsl
ljmp
xlat
cltd
ret
cmp
push
out
mov
les
fbstp
cmp
mov
scas
push
in
iret
dec
mov
add
dec
push
push
out
push
push
push
sbb
dec
and
add
push
lret
int
out
ficompl
mov
stos
mov
cmc
pusha
in
ljmp
dec
sub
into
lock
sub
sub
dec
pusha
icebp
pop
mov
adc
test
sbb
dec
dec
fistps
and
mov
icebp
jne
stc
push
or
insl
aam
mov
dec
add
clc
imul
xchg
jg
add
loope
mov
or
lret
xor
rcrb
fwait
pop
pop
or
test
sbb
jo
adc
mov
ffree
mov
push
out
pop
mov
stos
clc
addr16
mov
mov
jns
inc
push
xchg
enter
in
dec
or
mov
fdivl
push
push
xor
sub
mov
std
int
outsb
mov
sub
inc
ds
movsb
lret
stos
sbb
dec
jmp
stos
pop
jmp
add
or
inc
cmpsb
dec
add
cli
and
mov
push
daa
mov
mov
jecxz
cmp
dec
and
or
lds
popf
shlb
xchg
and
lods
sub
dec
imulb
arpl
lret
cmp
cmp
and
test
in
cmp
and
cmp
pop
icebp
adc
sbb
loope
mov
xor
jae
xorl
mov
jmp
cli
fiaddl
mov
inc
sub
pop
adc
push
mov
jns
inc
or
pop
and
push
xor
sub
ja
fmul
sub
hlt
or
and
sub
in
pop
xchg
cli
jle
ljmp
test
cmp
push
idiv
cmp
pop
repz
cmpsl
repz
stos
sub
sahf
jns
fidivrs
push
repz
nop
sub
test
adc
ljmp
push
xor
inc
jns
nop
mov
aad
pop
into
aaa
jmp
jp
adcl
mov
in
pushf
out
dec
or
pop
sub
and
mov
and
pop
arpl
pop
push
xchg
mov
mov
dec
out
mov
xchg
gs
lcall
outsl
out
int
ret
adc
cmpsl
ret
inc
mov
dec
mull
push
lods
decb
arpl
arpl
fsts
xchg
adc
pop
das
test
sub
dec
js
cmpsl
dec
lcall
jg
dec
or
jnp
out
loope
insb
lods
idiv
push
testl
sbb
arpl
xor
and
icebp
xlat
test
inc
xor
filds
stos
sbb
mov
pop
cwtl
mov
sub
mov
or
pop
dec
stc
dec
daa
mov
mov
jno
xchg
das
shlb
fisttpll
int
call
pop
cmp
mov
push
push
mov
xor
das
inc
pop
movsl
imul
sarb
jo
popa
pop
push
add
cltd
imul
arpl
mov
push
sbb
sbb
ror
or
and
xchg
ja
sub
jb
ficomps
or
or
mov
test
jmp
jb
sarl
xor
or
xchg
jmp
sub
rcll
lret
and
popf
push
mov
cmp
dec
mov
clc
xchg
fstpt
inc
mov
shrb
add
popf
sub
add
mov
jb
lods
and
call
xorb
inc
adc
mov
cmp
ja
repnz
fcomi
add
andb
repz
dec
ret
movsb
and
jno
roll
shl
out
cmp
jmp
dec
enter
adc
dec
inc
orl
popa
fwait
inc
jg
test
mov
rorl
mov
mov
inc
sub
imulb
bound
out
je
out
lods
push
pop
mov
in
sub
push
stos
or
lcall
fbld
pushf
mov
mov
mov
in
or
push
fsubrs
mov
push
xchg
push
sbb
xor
test
jmp
xor
ljmp
inc
inc
or
mov
xor
and
mov
cwtl
outsb
ja
sarb
mov
stc
sahf
sti
pop
sub
jmp
in
movsl
pop
shrl
push
stos
pop
push
jmp
mov
mov
ja
dec
and
mov
stc
and
push
xchg
push
mov
stos
cwtl
fs
shll
cmp
sub
addb
je
ret
and
mov
sti
fstpl
sbb
dec
aad
stos
sub
xchg
push
pop
add
incb
lods
out
into
pop
imul
pusha
push
js
mov
jbe
add
adc
sub
pop
inc
dec
rorb
xor
es
outsl
cmp
stos
fidivrs
lahf
jnp
nop
es
mov
insb
inc
add
dec
scas
scas
insb
push
sub
sub
pop
je
popa
lods
inc
push
mov
inc
and
xchg
fiadds
out
dec
mov
xchg
push
sbb
jo
mov
orl
mov
inc
pushf
inc
push
lcall
test
test
shlb
addr16
and
ja
add
shlb
jnp
imulb
or
push
stc
jecxz
mov
mov
in
pop
pop
cmp
push
imul
mov
adc
stos
leave
pop
lret
rolb
jmp
push
push
dec
cmp
or
dec
hlt
dec
xor
jecxz
aaa
aaa
movsl
push
xorb
cmp
xlat
ja
xor
sub
sbb
ficompl
jo
xor
pop
pop
or
cmp
pop
inc
lcall
out
sub
test
sbb
mov
dec
es
into
xchg
and
sbb
js
jo
pop
pusha
shl
out
std
add
inc
adc
aas
fisttpll
mov
ljmp
or
xchg
or
pop
fidivs
mov
les
frstor
and
pop
loop
sti
mov
push
imul
mov
jecxz
movsl
or
add
pop
jecxz
push
bound
cltd
js
dec
push
dec
cli
jg
xlat
jge
xchg
lret
mov
out
mov
sub
sbb
adc
cmpsb
jge
jae
cmpsl
add
ret
mov
sbb
add
cmp
dec
js
rcll
and
loop
mov
fldenv
and
test
push
data16
lods
test
push
jmp
subb
fdivrs
push
movsl
sub
sbb
mov
mov
pusha
in
pop
fstl
fnstsw
push
pop
cmp
push
fdivrl
mov
iret
mov
jmp
stos
adc
out
das
cld
sbb
mov
mov
jg
jno
push
std
xchg
dec
sub
xchg
das
push
mov
loope
sub
imul
sub
mov
jecxz
fisttpll
stos
sti
jl
add
sub
ficomps
inc
ja
flds
movsb
addr16
inc
js
dec
inc
add
pop
push
enter
pop
int
cmc
sbb
adc
add
mov
cmp
fisttps
shlb
mov
lds
cmp
and
cmp
imull
mov
cmpsb
shlb
inc
mov
add
add
movsb
addr16
lock
cmp
aas
xorb
add
add
xor
fiaddl
lret
test
push
dec
mov
loopne
xor
cmp
inc
aad
nop
xchg
dec
in
movsb
into
pop
mov
bswap
adc
jmp
aad
pop
pop
jns
cmp
mov
pop
leave
fistps
xor
xor
xchg
or
inc
push
mov
pushf
and
add
xchg
sbb
mov
mov
push
push
repz
loop
mov
adc
push
jb
shlb
jecxz
sub
pushf
lea
mov
xchg
int
notb
outsb
and
mov
mov
mov
xlat
testb
shlb
ffreep
mov
xchg
inc
push
frstor
mov
fstpl
or
ret
push
push
pop
jb
mov
jle
mov
out
pop
adcb
imul
popf
cmpl
movsb
push
test
push
and
dec
pusha
inc
xor
fwait
rorl
jo
rcl
sub
sbb
insb
or
lock
aas
imul
jmp
fsubr
add
xor
xor
mov
mov
sarb
andl
mov
aad
lahf
int
inc
mov
mov
daa
arpl
dec
xor
aaa
push
pmulhw
rorl
ffree
sbb
jb
fstps
push
push
mov
stc
xor
ljmp
sarl
jl
mov
sub
test
shll
adc
nop
adc
iret
call
jmp
aaa
mov
sbb
sub
and
and
vunpcklps
jp
sbb
xadd
ficompl
add
xchg
loop
cli
rcrb
add
aas
cmp
adc
cltd
loop
dec
ja
mov
inc
xchg
mov
dec
and
inc
jge
int3
jb
lods
test
data16
fdivl
xchg
xor
in
push
mov
ja
xor
push
jne
fidivrl
xor
cmpsb
cltd
xchg
jne
daa
pop
adc
aad
outsl
stos
cmp
mov
sub
xchg
jmp
es
ret
pop
or
mov
adc
pop
mov
add
testb
out
shlb
je
or
cltd
xor
pop
lock
mov
outsl
xorb
mov
lret
addb
xchg
lds
subb
lret
mov
shrl
cltd
fdivs
xchg
inc
mov
adc
mov
cli
int3
sbb
push
jle
adcb
cmp
dec
fimull
les
mov
sub
xchg
mov
mov
add
mov
cmp
outsl
lds
and
mov
jne
hlt
add
dec
lea
fldenv
xor
loopne
clc
xlat
lods
test
test
frstor
scas
mov
pop
sub
scas
shll
push
movsl
xchg
push
stos
dec
mov
call
jl
xor
xor
adc
push
das
out
mov
sbb
cli
sub
in
out
mov
cmp
sti
adc
add
fs
xchg
jl
mov
dec
stos
iret
std
pop
daa
inc
jmp
add
pop
and
jo
jp
bound
cs
std
fldl2t
stos
fimuls
in
dec
sub
mov
xchg
push
ss
mov
data16
stc
adc
push
aaa
mov
dec
jno
in
enter
push
out
xchg
mov
adc
in
std
aad
or
cmp
mov
imul
pop
stos
fidivrs
mov
addl
pushf
xor
and
inc
add
dec
sbb
popa
pop
in
dec
push
sahf
xor
mov
xchg
push
jno
lock
andb
ss
cmp
jmp
dec
scas
dec
pop
jecxz
popa
sub
pop
jecxz
push
or
jb
add
xchg
cmp
icebp
stos
call
or
es
std
adc
xchg
adc
and
out
or
push
loope
pop
xchg
jp
adc
fmull
fcompl
jnp
lods
out
iret
xchg
or
sub
mov
in
mov
sub
pop
mov
push
mov
push
inc
out
or
clc
test
call
fwait
push
xor
cmpxchg
pop
sub
orb
cltd
lods
fiadds
mov
dec
cwtl
test
jg
mov
or
fisttpll
repnz
cmc
pop
push
mov
cmpsl
sbb
cltd
cs
pop
jne
cmc
shrb
add
jl
inc
xor
xor
push
orb
adc
cmp
and
clc
and
fsub
and
pop
sbb
fiaddl
dec
add
mov
push
cmc
and
mov
std
or
inc
stc
cmp
in
jp
mov
fisubrs
adc
mov
pcmpeqw
iret
leave
pop
cmp
push
push
ret
jae
xchg
stc
jp
or
shll
mov
roll
stos
inc
push
add
cmp
fmull
divb
aam
add
cmpsl
test
icebp
push
mov
xchg
mov
sti
loopne
loop
out
lock
mov
icebp
cmp
mov
ret
sbb
sub
loopne
ss
testb
inc
cld
insb
movsl
xchg
xor
mov
push
mov
mov
mov
fidivrl
push
sbb
adc
fwait
lock
push
hlt
pusha
aaa
outsl
int3
andl
fucomip
jge
out
push
sbb
fisubs
test
fsubs
or
rcrl
nop
into
mov
adc
sub
or
int
ja
sbb
fimull
adc
repz
xor
inc
push
shll
hlt
arpl
dec
movsb
push
push
mov
or
lcall
xor
test
mov
inc
fcmovb
iret
shl
aaa
cs
orb
rep
jno
mov
int
divb
sub
dec
int3
sbb
sub
rcll
movsl
add
mov
mov
add
xchg
mov
ret
add
lcall
xor
sub
aaa
push
rcl
shlb
mov
int3
fcmovnb
xor
jp
adc
mov
mov
mov
mov
outsb
dec
rolb
lahf
adc
mov
dec
daa
in
lret
fsubrp
call
stc
aas
jns
in
rcrb
loop
inc
add
testb
std
imulb
mov
ret
dec
inc
movsb
hlt
jb
mov
das
bound
inc
sub
in
mov
jne
or
fcoms
lahf
mov
add
or
jg
push
push
pushf
pop
jb
xchg
pop
mov
neg
fwait
rcrl
mov
pushf
push
loop
cmp
movsl
cwtl
call
inc
and
fsubr
mov
jno
cmpsl
ficoms
adc
dec
xchg
stos
pop
pop
test
xchg
jno
sub
movsb
pop
xchg
mov
jnp
loopne
xchg
imul
out
inc
cltd
pop
rolb
mov
cmp
xorb
xchg
lods
iret
adcl
ja
test
aad
adc
scas
and
outsl
push
movsb
pusha
lods
jo
repz
xor
xchg
mov
push
leave
lcall
movq
cmp
ljmp
fistpll
push
adc
shl
dec
mov
inc
pop
cwtl
adc
inc
out
movsb
lock
pop
inc
movsl
xchg
cmpl
dec
sbb
sahf
inc
or
push
mov
mov
push
push
addr16
or
in
das
sub
jmp
jge
adc
push
inc
add
jl
mov
neg
pop
cli
pop
sub
adc
cmp
and
decl
out
pop
or
das
cmp
or
dec
jno
sub
sbb
fsubs
pop
or
fistpll
or
cmc
or
cmp
add
sbbl
setbe
push
cmp
cli
cmpsb
mov
push
pop
cmp
int
xchg
push
jle
or
jno
inc
shlb
cmc
mov
push
adc
cmp
push
push
dec
dec
in
fcmovnbe
dec
adcb
cmp
inc
mov
in
pop
sbbw
inc
xchg
fs
test
xor
sbbb
jmp
popf
fnstcw
insl
mov
test
jne
mov
ljmp
bswap
inc
popf
call
in
jg
pop
xor
in
mov
clc
dec
sti
jmp
jne
cmp
loop
pop
fdivrl
leave
cmp
stc
or
aad
xchg
jne
push
xlat
sbb
cmp
cmp
mov
adc
icebp
cmpsl
sub
mov
or
pop
sbb
sti
addr16
mov
push
out
adc
add
mov
xchg
mov
jge
push
jmp
fdivrl
lods
ljmp
and
int3
jbe
pusha
scas
scas
inc
nop
sarb
dec
or
insb
dec
sbb
insb
repz
and
clc
js
ljmp
popf
pusha
jge
data16
push
xchg
sbb
jbe
test
sbb
fcmovb
xchg
ds
push
xchg
mov
movsl
ds
loop
sub
push
das
push
jnp
xchg
repz
pop
jo
mov
pop
imul
imul
mov
jo
pop
jle
xor
mov
sbb
fstl
and
pop
stc
and
cmpsb
xchg
and
sub
or
cmp
inc
stc
pushf
pop
xor
cmpsb
sbb
mov
pop
pop
inc
mov
fsubrs
scas
mov
cltd
mov
dec
mov
into
imul
hlt
add
cmpb
sbb
pushw
dec
mov
mov
bound
in
cmp
popf
sahf
popa
dec
sbb
add
mov
xorb
popa
mov
dec
clc
mov
push
adc
xchg
add
and
int3
mov
xchg
sub
les
into
cmp
mov
push
fsubrs
dec
shlb
out
sub
aam
cmpsb
mov
lods
cli
pop
cmp
jbe
push
jb
repz
pop
mov
scas
stc
pop
test
lods
xchg
das
inc
stc
andl
sbb
mov
or
mov
in
xor
imul
repnz
out
int3
or
cmp
movsb
mov
inc
sbb
dec
popa
cmpsl
popf
and
cmp
repnz
jmp
aas
std
fcomps
icebp
mov
mov
push
push
jnp
nop
adc
mov
icebp
mov
sub
pop
adc
jne
rorl
cmp
xor
jge
fs
scas
test
inc
dec
mov
push
pop
fsubp
inc
shl
dec
jmp
pusha
adc
dec
jecxz
xchg
or
add
mov
dec
push
inc
lret
sahf
imul
cmp
cld
out
and
and
mov
jge
or
out
cmp
lret
or
sbb
stos
cmp
sbb
scas
in
cmp
das
mov
sbb
scas
sbb
add
push
add
les
in
popf
insl
dec
xchg
out
sbb
inc
add
popa
push
or
repz
jle
ja
adc
cmc
sub
mov
fnstcw
fwait
dec
and
xchg
push
dec
push
stos
mov
dec
mov
incl
mov
hlt
ja
push
jae
movsl
arpl
in
fisttpl
push
inc
test
lcall
bound
mov
xor
lret
or
push
sbb
jns
in
rorb
fldenv
rcll
inc
stos
vmovntdq
mov
andl
mov
sbb
mov
jae
loop
rcll
fmull
idivl
pushf
jns
arpl
sub
popa
int3
mov
lret
mul
andl
sahf
inc
jecxz
pop
or
mov
hlt
stc
jle
cmp
bound
dec
and
loopne
dec
pop
add
lret
negl
push
mov
add
add
sti
sbb
dec
adcl
xor
fisubl
mov
mov
mov
xchg
loopne
xchg
insl
std
leave
stc
lds
fwait
aad
out
inc
mov
dec
loopne
and
cmp
decb
sbb
xorb
clc
xchg
aaa
inc
cwtl
mov
cltd
fsubl
xchg
ljmp
push
xchg
cltd
insb
xchg
add
or
popf
scas
mov
test
insb
clc
or
xor
fnstsw
stos
and
sub
movb
test
stos
mov
mov
movsl
pop
push
dec
mov
xchg
sar
sub
ret
sbb
dec
inc
ja
push
adc
cltd
js
inc
mov
add
lahf
inc
sub
andb
mov
movsb
outsb
sbb
pop
cmp
xor
mov
shl
jne
jl
mov
pop
lahf
dec
int3
cmpsb
jge
sbb
mov
pushf
call
xor
inc
jae
mov
scas
es
mov
psubd
mov
or
dec
loop
repz
adc
adc
leave
mov
mov
loopne
lcall
ret
xor
andb
pusha
test
and
mov
sub
xchg
mov
jg
or
sub
lea
fbstp
xor
push
pop
ret
hlt
xlat
int
pop
rcrb
pop
cmpsl
sbb
sbb
aas
insb
ljmp
xchg
stos
cld
cld
cs
or
mov
inc
inc
add
xchg
push
in
outsl
nop
jge
jmp
adc
leave
call
fcomi
adc
outsb
xor
or
pop
aad
inc
inc
jb
xchg
cmpsl
in
pop
aas
push
jle
xchg
js
xchg
mov
cs
push
mov
dec
shll
addb
mov
pop
lods
sub
adc
rclb
mov
out
or
lock
sbb
cs
and
icebp
inc
xchg
aas
inc
enter
je
call
dec
repnz
aas
test
in
and
fsub
enter
xor
cltd
loopne
sub
cmc
push
jge
out
jbe
pmulhuw
lods
fidivrs
jge
mov
mov
pop
dec
mov
das
out
repz
jno
sbb
inc
push
in
ret
sub
cltd
pop
imul
jmp
sbb
jp
mov
outsl
adc
leave
xchg
addr16
in
out
aam
das
daa
subl
pop
jmp
clc
xchg
loopne
add
in
lods
scas
fmull
repz
jmp
jg
lahf
jb
and
jecxz
test
adc
pop
sarl
sub
xchg
mov
mov
lret
pop
push
imul
mov
jle
xlat
mov
in
add
sub
push
jo
popa
loopne
rcr
jmp
pop
xchg
mov
mov
pusha
ljmp
cltd
imul
cltd
cmpsb
faddl
xchg
mov
outsl
ret
test
or
or
mov
add
xchg
or
add
or
sti
mov
add
mov
pushf
pusha
fisubl
xchg
aam
stos
js
in
sbb
dec
roll
cmp
scas
xchg
mov
xchg
das
pop
adc
ds
aam
sahf
scas
cmpsb
mov
jl
pmulhw
add
lock
push
xor
fs
add
xchg
jge
adc
cli
sbb
cld
das
mov
sahf
movsl
sub
push
shrl
hlt
xor
cwtl
mov
xorb
jl
and
mov
xchg
jne
loope
lock
out
mov
mov
loopne
inc
mov
movsb
add
gs
mov
out
xchg
movsb
cwtl
pushl
loopne
jge
mov
cmp
pop
nop
dec
push
bound
sbb
stc
inc
or
in
sub
lods
js
pusha
ljmp
sti
gs
fcoms
cli
rorb
push
and
add
pop
pop
or
sbb
xchg
mov
inc
cmp
xlat
mov
inc
pop
rclb
mov
xlat
cli
dec
push
pop
addr16
push
and
faddl
aam
mov
stos
sub
xchg
adc
or
std
aam
or
rcrb
loope
lds
inc
fst
hlt
ret
jg
shl
mov
sub
pop
lds
jnp
loop
xchg
imul
cli
mov
aad
mov
pop
sbb
movsb
cmp
cmpsl
outsl
lea
arpl
xchg
pop
imul
bound
jae
xchg
adc
cs
ss
jo
outsl
xor
lcall
mov
mov
std
dec
lock
or
cmp
stos
nop
mov
stos
neg
mov
sub
les
pop
or
xor
pop
jo
push
or
mov
loop
call
sbb
scas
cs
mov
fdivrs
fwait
inc
xchg
push
movsl
fptan
loopne
xor
mov
or
mov
xchg
jns
pop
dec
dec
bnd
js
lahf
insb
jle
lods
popa
pop
push
call
xor
jae
sbb
lret
pop
jae
push
imul
jp
shlb
push
push
mov
jnp
add
shll
test
je
arpl
jne
test
and
test
and
jge
out
bound
or
in
push
xor
sbb
andl
in
mov
out
shrb
ss
dec
pop
dec
sti
fstps
push
mov
iret
adc
xor
in
call
fsubl
cmp
mov
subb
or
adc
outsb
das
xor
mov
lods
dec
outsb
insb
jmp
out
stos
out
mov
adc
inc
push
pushf
mov
ds
sub
jmp
jae
sub
xchg
push
addr16
or
sbb
and
pop
sub
jnp
lcall
mov
sub
loope
out
sub
inc
or
shll
cs
adc
jmp
push
xchg
sbb
sbb
mov
mov
xbegin
cmp
mov
idivl
adc
jo,pt
and
push
out
pop
jmp
pop
out
sahf
jns
cmp
push
mov
inc
add
imul
loope
and
push
daa
aad
ret
rclb
cli
mov
call
sahf
mov
push
movsl
and
cli
cltd
or
fnsave
fdivs
mov
jae
ja
xor
div
ds
out
push
fisubrs
or
in
jns
pop
das
cli
xor
adc
or
mov
xor
out
xor
int
repnz
push
and
jle
and
mov
jge
sbb
pop
ds
je
bound
fcompl
iret
cwtl
mov
dec
mov
inc
jne
jno
out
shll
mov
dec
sub
sbb
jl
into
push
pop
iret
gs
xor
and
pushf
mov
dec
and
inc
in
in
daa
mov
sub
leave
lods
add
or
call
push
or
ret
sub
mov
in
ja
xor
pop
imul
leave
xor
lods
jb,pn
mov
mov
adc
xchg
push
xchg
sub
jb
dec
pushf
cmp
daa
jecxz
pop
push
ficomps
jbe
sti
lahf
jp
ss
dec
sti
adc
shr
lret
test
inc
sbb
lea
and
inc
loop
movsl
pop
xlat
cmpsb
or
repz
dec
mov
add
xchg
sub
adc
bound
adc
xchg
outsl
pop
xorb
xchg
push
adcb
jo
pushl
pop
movsl
pop
test
dec
pop
xchg
shr
addl
out
adcb
idivl
push
call
in
jnp
cli
addr16
scas
jmp
mov
dec
nop
ret
clc
les
outsl
dec
mov
imul
push
mov
sub
or
loopne
into
push
inc
fdivp
call
dec
jo
sbb
daa
push
popa
push
je
aam
pop
int3
sub
mov
mov
ret
lea
sti
inc
mov
cmpsl
ficomps
inc
mov
gs
cli
adc
mov
jmp
fcompl
ds
adc
nop
xlat
fnsave
sti
mov
roll
test
ljmp
sub
movsl
xor
mov
add
daa
sbb
mov
push
mov
out
fwait
jae
sbb
lret
xor
add
aaa
push
pop
dec
popf
mov
fs
jmp
mov
lcall
fdivs
xchg
push
sahf
cmp
inc
push
ret
mov
cs
or
mov
rcll
test
test
fisubrs
mov
enter
adc
xlat
cmp
mov
add
inc
outsb
aad
imul
stos
pusha
mov
mov
insb
or
push
rol
adc
orl
pop
sub
outsl
sub
ror
rclb
sbb
std
jecxz
in
in
mov
sub
mov
frstor
pushf
mov
mov
xlat
jae
movsb
fbld
mov
add
fidivrl
imul
mov
mov
stos
xchg
cwtl
js
pushf
les
adc
sbb
in
push
sbb
and
mov
ror
stos
cmp
push
aaa
rcr
jp
add
icebp
out
enter
xor
out
dec
add
loop
movsb
les
xchg
jne
cli
mov
rcrb
rorl
dec
mov
or
xchg
ljmp
adc
mov
or
test
mov
loopne
ds
aam
xchg
add
pop
daa
cltd
mov
fisubrl
jmp
jno
or
imul
in
dec
push
push
les
ljmp
cld
in
in
sub
xchg
out
lret
lock
cmp
push
xchg
rcrl
lds
add
cwtl
sahf
cltd
out
cwtl
mov
inc
push
sub
sbb
mov
jno
fldt
push
or
sub
push
in
mov
in
xchg
or
lret
jl
jbe
fcoml
xchg
test
ret
xchg
jo
and
aaa
cmpsb
nop
aaa
push
mov
notb
adc
es
xor
arpl
pop
cmpb
bound
push
les
inc
xchg
jnp
jbe
shlb
cltd
xor
lcall
jl
jns
test
push
test
sbb
js
in
push
xor
push
adc
xor
xlat
iret
cmp
out
iret
mov
mov
jge
jo
and
mov
add
std
test
sbb
icebp
xchg
xchg
leave
outsl
repz
xchg
nop
push
jg
arpl
mov
pusha
nop
andb
xchg
jp
xor
outsb
jnp
xchg
cmp
fwait
xorb
loop
pop
adc
mov
push
jecxz
push
divb
push
popa
pop
add
push
loop
jmp
mov
cmpl
jmp
push
pop
shrb
jl
ja
fidivrs
pushw
xor
sbbb
mov
fadd
subb
repnz
mov
sub
push
add
addb
jmp
push
aaa
mov
test
shrl
sbb
scas
aam
stos
insl
xor
push
cmp
inc
sahf
cld
andb
xchg
push
out
cmc
pop
and
mov
iret
outsb
push
or
pop
jo
adc
xor
movsb
xlat
add
loopne
leave
cld
je
das
add
pushf
insl
xchg
xorl
popf
and
mov
add
fildll
icebp
bound
loope
cmp
jbe
or
sub
fcoml
gs
cmp
push
mov
bound
cmp
leave
sbb
mov
xstore-rng
cmpsl
add
into
dec
in
and
lret
dec
out
adc
outsl
movsb
cmp
or
push
xchg
push
dec
sbb
out
ja
sbb
cmp
in
xor
cmp
int3
mov
dec
push
aam
add
enter
data16
and
add
and
repnz
jnp
pop
mov
xchg
rclb
xor
incl
push
mov
ret
movsb
pop
aam
push
fsubl
adc
xchg
fldl
lret
inc
rcl
lcall
push
cmc
mov
pop
mov
cwtl
push
xlat
outsl
pushl
sbb
outsb
pop
fdivrp
mov
aaa
xchg
cmp
jmp
les
std
jne
dec
push
dec
out
rcr
in
data16
lods
jge
and
js
cmp
ror
mov
ret
int3
lret
mov
adc
or
int3
xor
inc
movsl
xchg
pushf
sbb
sahf
or
rorb
rclb
ljmp
sub
rclb
in
es
movb
mov
xor
lahf
jg
push
cwtl
lret
insb
inc
cld
mov
lock
xor
cmc
sbb
mulb
xchg
cmp
insb
imul
cwtl
js
in
pushf
jo
outsb
imul
js
inc
cmp
outsb
inc
xor
gs
subb
mov
sbb
add
negl
aam
btc
icebp
adc
lcall
xchg
dec
and
fnstcw
inc
loope
jecxz
sub
jg
inc
sbb
lahf
inc
sub
fdivrs
iret
js
adc
lds
push
std
add
scas
imul
shlb
aas
and
pop
cmpb
add
adc
ss
faddp
fldt
mov
xchg
xchg
sbb
push
mov
mov
pop
sub
shrl
push
xlat
push
outsl
bound
les
xor
jns
inc
or
lcall
in
stos
mov
adc
cltd
inc
maxps
cmp
popa
mov
push
out
cmp
jle
inc
add
iret
sarl
insl
dec
push
inc
popa
fldt
sbb
pop
mov
or
sub
in
stos
cmp
mov
jle
stos
sbb
sub
xchg
pushl
ljmp
pop
test
pop
stos
pop
push
fnsave
mov
rolb
out
mov
and
xchg
test
sub
inc
pop
mov
ret
or
push
fnclex
filds
xor
mov
jle
mov
stc
aam
and
test
ficompl
insb
icebp
ret
pop
fstpl
add
inc
and
js
xchg
mov
clc
sbb
aam
mov
sbb
pop
xchg
out
add
and
inc
sbb
rorl
or
daa
lods
inc
out
pop
mov
sub
sahf
cmc
out
imul
cmpsl
cs
les
or
lret
mov
push
repnz
jb
push
sbb
aas
cmp
push
or
je
pop
sub
fsubrs
and
pop
inc
pop
mov
pop
push
repz
maskmovq
stc
imul
inc
ljmp
inc
jmp
in
jmp
adc
xchg
and
xchg
stos
and
mov
pushf
sbb
or
das
pop
data16
lods
and
bound
inc
addl
pop
call
pop
xor
push
xchg
mov
fstl
sub
jg
xchg
xorl
roll
add
addr16
inc
popf
mov
cmp
xchg
es
scas
faddp
sub
sbb
mov
mov
enter
jo
and
arpl
pop
jecxz
test
mov
in
repnz
pop
enter
mov
clc
mov
jmp
xchg
sub
and
jae
je
mov
cli
or
scas
out
imul
out
jle
aam
inc
push
sub
pop
mov
outsl
fnstenv
mov
cltd
mov
dec
mov
fidivs
imul
or
lds
mov
repz
cli
mov
mov
adc
rclb
pop
jne
cld
mov
inc
rol
lahf
lret
test
hlt
mov
xor
test
in
cmp
cmpsb
fisubrs
jp
mov
fwait
pop
stos
mov
fiadds
mov
fcoms
imul
lahf
cwtl
push
ret
stos
xor
in
jb
inc
or
lcall
enter
xor
insl
pop
push
sub
in
cmp
nop
je
call
lret
dec
cmp
ss
cltd
popa
aad
jb
push
dec
inc
fimull
pushf
xchg
or
std
jecxz
test
xlat
ror
adc
mov
int
sbb
je
and
iret
cmc
in
pop
xchg
fstpt
dec
faddl
stc
mov
push
jno
into
daa
mov
sub
sbb
mov
shl
mov
jbe
outsb
sub
or
adc
insb
out
push
xchg
mov
and
iret
push
insb
stc
lock
fwait
lods
jp
jns
cs
pop
mov
lods
repnz
pop
data16
xor
xlat
mov
and
cmp
xchg
lods
mov
sbb
inc
dec
cmp
les
aam
ss
add
ds
pop
pushf
bound
bound
mov
add
les
mov
js
or
ss
test
inc
jmp
test
pop
jmp
add
out
pusha
sub
push
or
pop
push
sti
ja
jmp
outsb
mov
lret
mov
mov
xor
jle,pn
cmp
dec
push
dec
push
pop
sub
pop
push
adc
or
in
fbstp
jns
mov
loope
jne
ret
repnz
or
jb
push
push
xlat
lret
dec
mov
cmpsb
jne
dec
mov
movsb
popa
cmp
add
jmp
enter
jnp
stos
mov
fisubl
mov
cmpsl
and
pop
and
aam
pop
dec
cli
pop
dec
and
push
or
push
stc
or
stos
add
aad
mov
loop
jmp
clc
push
sub
repz
movsb
fldpi
fimull
xchg
mov
mov
fsubrp
das
nop
xor
mov
jg
jb
cli
adc
pusha
ds
outsl
xor
jmp
sub
frstor
cmpsb
mov
into
daa
test
roll
leave
pop
orb
mov
push
or
nop
mov
test
cwtl
xchg
cmpsb
push
movsl
xchg
add
xor
or
adc
sub
ljmp
pop
dec
out
or
and
lcallw
jmp
cs
adc
push
xchg
push
das
xchg
cmp
pop
lret
out
jmp
push
int3
leave
sbb
or
mov
mov
lock
inc
aam
push
ret
repnz
fadds
sub
fmull
jl
lods
xor
rolb
sbb
rcll
js
popf
cwtl
mov
addl
push
fcomps
xor
add
mov
movsb
sub
push
std
ret
pop
push
or
insl
daa
sub
add
imul
inc
hlt
add
jl
jae
jo
mov
outsb
xchg
jb
jns
cmpsl
in
or
fisubl
sub
insb
jo
dec
jnp
ret
cmp
lret
ss
mov
fwait
xchg
and
mov
sub
sbb
push
dec
xor
mov
adc
pop
xchg
dec
iret
jo
inc
repz
enter
or
mov
mov
arpl
cmpsb
pushf
insb
repz
arpl
outsl
jne
test
mov
icebp
dec
jmp
mov
mov
out
hlt
scas
jo
xchg
xchg
add
popa
pop
roll
mov
mov
stos
clc
inc
xor
ss
xchg
jg
enter
loop
rclb
xchg
pcmpeqd
aad
adc
mov
xchg
push
mov
subb
ret
leave
dec
in
inc
mov
popf
xchg
ja
pop
stos
das
and
xor
jne
std
push
popf
fcmove
push
and
pusha
rorb
call
jle
adc
xor
mov
repz
icebp
jbe
les
and
or
ss
cmpsb
push
jl
push
ljmp
xchg
dec
arpl
mov
andb
dec
scas
add
dec
jle
stos
dec
pop
mov
mov
xchg
mov
leave
mov
add
mov
adc
pop
imul
out
xchg
fnstenv
pop
and
mov
push
out
pop
xchg
xor
add
lea
outsl
push
lcall
adc
mov
pop
pop
stos
in
icebp
sbb
and
shlb
int3
enter
fiadds
lret
adc
add
scas
jmp
testb
cmp
fisttpl
add
ret
pop
xlat
mov
in
lahf
cmp
push
mull
loopne
mov
repz
dec
pop
pop
xchg
std
push
sahf
xchg
jge
and
mov
leave
adc
shlb
and
aaa
cmpsb
arpl
scas
pop
popa
mov
icebp
cmp
cli
call
dec
pop
xor
inc
out
in
xor
popf
and
inc
jmp
dec
fadds
hlt
sbb
adc
xchg
dec
adc
insl
scas
lret
xor
jge
inc
mov
loop
loopne
out
cmpsb
fcmovu
mov
loop
in
cmp
mov
jnp,pn
lea
lock
mov
outsl
xlat
add
lea
frstor
jmp
gs
out
lds
or
and
mov
call
sbb
cli
test
popf
push
pushf
shr
sbb
leave
psubd
dec
mov
mov
fistpl
xchg
test
icebp
pop
mov
imul
enter
jg
jmp
mov
loope
loop
xor
push
ret
jne
lds
lret
fwait
clc
cmp
js
data16
leave
dec
movsl
cmp
add
sbb
mov
repz
lret
fcmovne
xchg
or
xlat
sub
insl
xchg
in
pop
xor
loopne
addr16
fsubr
mov
push
pop
and
imul
popa
sub
incb
lret
pop
sub
fimuls
movsb
mov
test
ret
jbe
or
leave
mov
loope
sahf
lcall
or
shlb
jp
ljmp
std
fisubrl
pop
pop
push
mov
mov
pop
ja
int3
in
mov
dec
mov
xor
fists
mov
mov
out
add
or
adc
push
mov
sahf
sbb
dec
cmp
xchg
jecxz
cmpsb
mov
out
inc
mov
xchg
testb
cmpsb
in
mov
inc
daa
sbb
les
mov
xor
lcall
mov
add
xchg
mov
xchg
jo
sbb
push
xlat
push
adc
push
adc
lods
imul
sub
popa
std
pop
jns
fistl
push
insb
nop
jmp
add
fnstsw
add
sbb
push
and
inc
pop
adc
jns
mov
and
ret
sbb
mov
lcall
fbld
test
inc
xlat
mov
imul
loopne
cmp
or
xchg
mov
adc
loopne
adc
sbb
sub
add
test
adc
std
dec
mov
pop
movl
test
xchg
pushf
dec
dec
fiadds
and
add
xchg
cmp
pop
sahf
js,pn
lock
icebp
xor
push
test
and
jns
add
leave
jno
add
dec
adc
nop
ret
jp
mov
aaa
insb
dec
cmpsl
lret
adc
lret
imul
aad
gs
lret
clc
pop
and
mov
dec
pop
pop
fistps
enter
lock
outsl
mov
push
push
ss
push
or
call
xchg
xor
test
ret
js
mov
shrb
sub
pop
add
out
mov
std
cpuid
adc
cmp
iret
out
arpl
pop
dec
push
lock
call
and
shrb
xchg
jbe
arpl
pop
sar
testb
sar
adc
mov
xor
ret
adc
cs
lock
sbbl
fstpl
xchg
or
repz
lock
fnsave
ljmp
jp
push
mov
test
and
jne
shrl
fmulp
sub
mov
jbe
js
scas
ja
push
and
lea
and
mov
shll
sub
push
test
imul
int
jmp
js
dec
sub
pop
ljmp
push
jecxz
repnz
outsb
jl
sub
xor
push
mov
xlat
xchg
push
hlt
or
mov
push
and
popf
sarl
push
or
outsb
dec
js
cld
in
fsubrl
jl
mov
call
add
call
xchg
sbb
cld
adc
lahf
test
xchg
aad
sti
add
mov
push
repz
sub
xchg
lea
pushf
sub
or
sbb
in
xorl
inc
movsl
in
sarl
mov
inc
pop
enter
adcb
shlb
mov
jne
bound
or
jne
adc
cwtl
push
push
push
add
popa
nop
nop
dec
cmpsl
xchg
cmpb
in
push
gs
loope
push
mov
sub
outsl
jge
add
xchg
lds
dec
pop
pushl
pop
mov
test
mov
loopne
scas
imul
jno
mov
adc
mov
and
inc
sahf
enter
mov
dec
pop
lods
xorb
jne
pop
test
sub
ja
inc
cmc
pop
sub
call
fmul
dec
add
in
sub
and
push
dec
mov
or
mov
cmp
fldt
rcrl
lock
stc
mov
shl
insb
cmpsb
int
out
cltd
push
fwait
jne
adc
xchg
ljmp
fdivl
sbbl
fmul
in
dec
stc
inc
popf
xchg
sub
push
fcoml
test
aas
lds
insb
push
test
push
shlb
cmpsb
sub
xor
das
cmp
lret
mov
out
rclb
and
outsl
pop
cmp
gs
out
test
arpl
sub
or
outsb
mul
ret
lret
xor
or
push
sbb
sub
aam
mov
and
push
sbb
cltd
rorb
stc
xchg
pop
adc
sbb
js
in
ljmp
mov
loopne
movsl
cmpsb
inc
into
ja
xchg
push
lds
push
pop
daa
lds
int
jns
in
dec
pop
sub
add
mov
scas
sub
es
push
xlat
jnp
out
rcrl
add
repz
rclb
sbb
push
push
dec
out
jmp
sar
test
pop
pop
mov
cmp
loopne
loop
mov
mov
hlt
ds
xor
or
inc
sti
mov
lret
or
adc
andl
inc
stc
sbb
bound
imul
push
in
lcall
outsl
inc
xor
dec
mov
ja
inc
cmc
cmp
mov
adc
push
ja
or
flds
xchg
test
stc
outsb
mov
je
ret
movsl
pop
inc
adc
dec
std
pop
adc
jns
push
mov
jecxz
dec
pop
mov
dec
add
mov
xchg
es
push
xchg
pop
fdivrl
jecxz
push
subl
fimuls
rcll
mov
adc
sti
inc
jg
lds
inc
mov
mov
in
outsl
loopne
js
ja
pusha
and
add
and
add
cli
enter
lahf
sbb
scas
loopne
lock
add
out
rolb
add
push
mov
sbb
sub
lcall
xchg
pop
push
iret
rep
mov
dec
cld
pop
out
sub
shll
or
repz
js
dec
dec
lahf
pop
sahf
lea
jle
les
rcrb
nop
out
sbb
xor
jecxz
pop
cmp
loope
dec
mov
in
and
fdivl
daa
movsb
push
scas
mov
cmp
add
loope
xor
enter
xchg
xor
xor
iret
cli
subl
shrb
imul
add
or
jne
pop
pop
cmp
ja
cmovge
dec
enter
aaa
sub
ret
mov
mov
cmp
jae
mov
add
xor
iret
loope
scas
pop
les
sub
out
sti
ret
mov
sbb
in
test
xor
inc
dec
pop
sbb
movsl
pop
cmp
mov
add
cmp
rcrb
push
pop
pusha
popf
adc
sub
push
sub
out
jbe
cltd
adc
addr16
mov
jge
out
inc
into
sti
dec
sbb
inc
fsts
enter
sbb
aaa
dec
test
cmp
pop
jl
fwait
push
cmp
adc
add
out
leave
je
cmp
xor
push
sbbl
pop
mov
cmpsb
mov
dec
jns
repnz
out
push
shll
mov
sbb
mov
fsubs
fwait
push
ss
scas
jo
call
pop
or
fistpll
sbb
sbb
out
fbld
cmp
xchg
xor
jb
add
or
sub
in
lods
aad
sub
sbb
adc
inc
stos
sbb
leave
scas
shll
mov
add
jp
in
addr16
xor
cltd
jo
or
addr16
in
sbb
cmp
push
xchg
insb
nop
jl
mov
in
pop
push
movsl
ja
sbb
shlb
repnz
mov
and
negl
repnz
add
test
push
out
xchg
pop
leave
and
les
dec
pop
cltd
lret
or
fs
das
xchg
mov
test
sub
movsb
jg
fldenv
inc
jno
dec
fwait
loope
shl
repz
dec
out
pop
cmp
pop
sub
or
loop
iret
call
lahf
rcll
mov
xchg
or
out
test
jns
adc
aas
jbe
mov
and
xor
or
jp
clc
or
out
mov
movsb
hlt
popf
mov
hlt
mov
jb
lret
jne
cmp
add
add
pop
loop
push
push
cmp
bound
fmull
and
dec
sub
out
aam
mov
xor
pop
cmpsl
sbb
imul
sub
pop
xor
pop
inc
xchg
adc
es
aaa
mov
sub
aam
idivl
pop
add
outsl
rcr
jmp
mov
xor
inc
sarb
lret
jg
in
and
or
push
xorb
pop
xchg
push
imul
test
aad
mov
mov
rcpps
mov
cltd
rorl
lea
test
out
and
mov
stos
adc
pop
shrl
or
push
mov
stos
scas
xchg
xor
xor
sub
std
mov
mov
adc
mov
insl
mov
xchg
test
fbstp
data16
jg
xchg
fisubrl
mov
mov
xchg
nop
in
cmc
add
leave
mov
out
out
lea
ljmp
add
pop
inc
fisttpl
popa
or
das
push
jne
adc
mov
popa
sbb
or
dec
repnz
out
mov
mov
les
les
fcompl
aas
and
rorl
mov
repnz
movsb
repz
sbb
pop
or
jmp
xor
push
ret
jle
int3
out
push
sub
add
push
push
ljmp
cmp
sbb
call
and
test
dec
mov
lea
or
add
hlt
mov
sub
cmp
stos
sub
in
push
mov
dec
adc
dec
pop
subl
pop
pop
mov
sahf
or
mov
in
call
xchg
jmp
push
lds
inc
inc
decb
lea
and
mov
ficompl
rcll
sbb
sbb
mov
cltd
inc
addr16
inc
es
lcall
cmpsb
jle
popf
sub
mov
lahf
sub
and
inc
or
test
into
test
jae
ljmp
adc
lea
cmp
mov
xchg
sti
repnz
xor
sbb
faddl
jae
fadd
adc
push
dec
jno
jnp
or
out
outsl
aad
xchg
mov
xchg
mov
sbb
lahf
ret
pop
xor
sti
cli
stos
xor
pop
or
scas
xchg
cmp
insb
aad
sbb
ss
out
clc
cwtl
xor
inc
test
push
lods
in
dec
repnz
shlb
clc
xor
jecxz
fmull
lods
mov
adc
jo
mov
push
out
icebp
test
repnz
stc
add
in
loopne
push
mov
and
ret
repz
adc
sbb
out
jae
push
sub
out
fwait
lret
dec
jecxz
push
rcrl
cmc
std
add
xchg
dec
aam
pop
or
cs
in
jge
xchg
stc
mov
push
mov
decb
xor
lds
sub
cmp
sbb
dec
xor
cltd
inc
pop
xchg
testl
mov
pop
jnp
add
sahf
xor
mov
stc
sahf
cmp
mov
popa
pop
out
pop
lods
jo
cltd
sub
insb
test
dec
movsl
or
xchg
mov
cmp
cs
inc
imul
je
xor
jge
xor
mov
jne
and
mov
dec
mov
push
push
mov
movsb
addr16
nop
cld
dec
cli
mov
pop
cmp
outsl
mov
inc
jle
jae
mov
jge
imul
xor
mov
add
mov
sub
inc
es
jecxz
xchg
add
dec
mov
imul
and
daa
inc
add
pop
sub
out
fs
mov
sbb
push
dec
ficoml
or
addr16
lret
test
notb
pop
outsl
or
enter
push
std
lds
xchg
in
nop
int3
sub
mov
push
mov
jmp
adc
dec
in
test
mov
jl
push
dec
xchg
pusha
pop
xchg
int3
or
and
mov
notl
xor
jp
pop
out
xchg
xor
cli
sar
lds
in
jae
sbb
scas
fwait
pushf
test
fists
inc
popf
test
std
add
sbb
gs
xchg
xor
mov
cmpsl
sbb
int
mov
sahf
cmpsl
mov
inc
sub
daa
lahf
and
sarb
mov
push
cs
decl
cmp
dec
aaa
stc
loop,pn
push
jb
or
sbb
pop
mov
jbe
push
fcom
xchg
dec
loopne
negb
outsl
mov
xor
dec
gs
jmp
lea
sub
out
sbb
scas
cli
popf
lds
and
imul
or
incl
xlat
push
bound
and
mov
dec
es
sarl
xchg
loop
movsl
add
add
leave
sub
jg
lock
es
scas
and
lret
test
outsl
sbb
add
pop
sbb
jle
repz
xor
push
adc
stos
adc
pop
dec
jg
lock
cmp
adc
mov
mov
sbb
mov
xor
mov
repnz
rcrb
mov
jmp
sbb
in
out
in
fcmove
xchg
mov
repz
and
xor
dec
daa
and
sbb
xchg
test
les
mov
pop
xor
lahf
jb
push
jle
lahf
dec
xor
clc
stos
mulb
test
clc
pop
and
fxch
adc
add
daa
ljmp
mov
adc
push
add
test
stos
sbb
and
aad
xchg
pop
stos
cmp
sub
repnz
adc
cmpsb
jecxz
lahf
push
lods
or
fstp
insb
sbb
jae,pt
mov
arpl
xchg
sub
sbb
imul
push
add
xchg
fstl
ret
cmpsl
outsl
mov
cli
ljmp
sub
xor
pop
push
ds
dec
push
rcrb
xchg
pop
ret
pop
cmpb
cmp
dec
cwtl
dec
dec
xor
lret
loope
jecxz
cmp
sub
in
insb
cmc
jmp
cmp
roll
mov
adc
punpcklwd
fldl
jns
and
and
aas
or
and
sahf
and
loop
icebp
lcall
adc
or
outsb
jnp
leave
jbe
call
push
and
push
sbb
mov
imul
scas
or
cld
dec
clc
pop
adc
lret
adc
xlat
sub
sbb
cmc
mov
fmuls
push
or
inc
mov
inc
mov
xchg
fsts
lahf
sbb
sarl
sbb
sbb
mov
fnsave
out
dec
add
add
add
in
test
popa
pushf
inc
or
fwait
and
subl
clc
pop
inc
xor
inc
push
lock
fcompl
arpl
mov
xor
pop
push
pop
jecxz
jno
mov
xor
add
or
xor
roll
cmpsb
lods
movsl
mov
mov
lcall
int3
mov
leave
nop
sub
sub
or
push
sbb
and
adc
iret
rcll
pop
or
fsub
push
xchg
jp
arpl
adc
sub
dec
cmp
lret
sub
scas
or
jne
dec
mov
jae
xlat
jnp
lahf
dec
cli
mov
pop
imul
sbb
mov
stos
stc
aam
or
adc
fisubrs
xlat
push
loop
inc
mov
jno
push
adc
mov
pop
push
fisttpll
mov
aad
loop
pop
sbb
outsb
and
outsb
jle
outsl
mov
mov
jae
outsl
adc
dec
mov
mov
xchg
fistl
jecxz
ret
lods
pop
jmp
lcall
les
jnp
clc
cmpsl
pop
dec
sbb
movsl
push
rol
daa
jbe
xchg
mov
fcmovb
hlt
aas
pop
pop
inc
adc
test
cmp
fadds
xor
mov
jb
icebp
sbb
xor
addr16
or
flds
stos
incl
mov
sub
leave
into
add
fs
div
repz
cwtl
dec
enter
ret
dec
and
out
addb
cmp
scas
xchg
rol
pop
cltd
arpl
lcall
stos
mov
or
jecxz
adcl
es
popa
pop
inc
and
call
or
jecxz
rcr
inc
mov
adc
aam
xor
mov
dec
xchg
xchg
repnz
pop
repnz
xchg
jns
xchg
sub
adc
mov
test
dec
in
and
data16
adc
shlb
imul
pop
mov
leave
insb
out
inc
sbb
sbb
cmp
adc
pop
lds
cmp
mov
push
add
fidivl
test
sub
pop
loope
xchg
lods
mov
shrb
rcr
bound
jno
dec
xchg
imul
out
or
jbe
rolb
pop
hlt
test
adc
andb
xchg
jg
xor
mov
fwait
push
xchg
pushf
lahf
mov
imul
jmp
push
pop
xchg
mov
sahf
int3
mov
mov
imul
add
push
sbb
xor
cmp
pop
scas
pushf
fsubrl
ja
leave
and
push
lock
inc
inc
cwtl
jecxz
jp
aaa
iret
inc
pusha
jmp
in
sahf
xchg
out
xlat
iret
adc
or
test
mov
shlb
mov
subb
mov
inc
sub
sti
scas
ficompl
mov
insl
fcoms
mov
add
push
lods
data16
pop
lods
mov
popl
ret
xchg
pextrw
adc
xchg
xchg
and
adc
or
movsl
mov
int
test
xor
ja
fmuls
and
jns
out
ja
out
cli
mov
ljmp
xchg
insb
pop
inc
loope
and
xchg
xchg
lods
sar
stos
es
pop
jae
and
dec
xchg
xchg
and
lret
fs
in
mov
push
jbe
es
xor
cmp
add
and
xchg
pop
imul
icebp
xchg
sub
in
ja
pop
mov
add
fs
test
mov
lcall
add
sbb
sbb
int3
arpl
lret
nop
sbb
loop
adc
jnp
sub
pop
clc
cli
fiaddl
ja
dec
mov
gs
call
pop
sbb
jg
repnz
subb
sbb
pop
inc
add
cmp
int
test
fwait
mov
int
cmpsb
cmp
int
shrl
sbb
sarl
cli
sub
inc
pusha
mov
jp
lcall
leave
pop
sub
stc
lahf
mov
push
mov
sub
sbbl
fisubs
in
mov
cltd
in
imul
ljmp
loope
adc
mov
shl
leave
sub
or
int3
jo
mov
and
stc
pusha
jae
daa
ss
and
lock
movsl
jns
insb
in
xchg
push
jmp
push
clc
pushf
scas
lock
sub
sbb
sub
cmc
pusha
je,pn
popf
or
jle
mov
imul
mov
lods
jnp
scas
ret
xor
jp
insl
jo
xor
dec
outsl
loopne
xor
jmp
push
push
es
loope
test
push
sub
ret
adc
pop
push
cltd
mov
lods
xlat
push
scas
lods
cmpsb
pop
mov
jnp
push
idivb
dec
hlt
sub
dec
test
addl
dec
sarl
lods
sbb
jecxz
popf
fs
dec
dec
addr16
test
int3
jmp
es
mov
shrb
pop
jb
pop
lret
mov
inc
pop
pop
mov
into
and
dec
mov
shll
adc
js
fnstenv
lret
mov
hlt
mov
xchg
jmp
add
out
mov
xchg
hlt
jle
jne
push
cmp
mov
xchg
push
loop
cmpsb
loopne
lahf
movsl
xor
fs
push
inc
cs
push
in
insl
jo
scas
add
inc
jmp
inc
xor
pop
addr16
test
rcl
cwtl
stos
jo
adc
mov
out
mov
inc
pop
dec
cmp
popf
adc
xchg
ffree
shrb
ds
sbb
fdivrl
add
rcl
ret
test
rorb
jno
mov
divw
xchg
mov
addl
jo
cmp
jbe
xchg
push
jns
pusha
mov
xchg
jno
enter
cli
push
fs
mov
js
xchg
lcall
stos
jge
pusha
push
mov
xchg
jge
rorl
test
cmp
inc
fldl
or
sbb
push
arpl
insl
sub
lret
cld
hlt
into
or
mov
js
mov
sti
imul
xlat
in
pop
xor
cmpsb
push
clc
jg
cltd
mov
sarb
scas
inc
lea
jb
xchg
stc
sbb
enter
int
stos
mov
rcr
das
test
int3
div
popl
jnp
cld
sbb
push
xor
aas
cmp
sahf
fsubrl
fstpt
insl
in
add
fmull
jg
mov
mov
mov
js
mov
adc
xchg
and
icebp
or
cmp
mov
cli
mov
insb
cmp
cmp
lods
dec
and
sbb
mov
push
push
sahf
cmp
out
and
xor
movsb
xor
add
dec
ljmp
sub
sbb
push
hlt
push
lea
insl
arpl
adcl
add
sti
add
mov
repz
stc
fstl
cli
inc
imul
sahf
adc
push
mov
stc
fcmovnbe
dec
arpl
and
inc
repz
fnstsw
adc
gs
mov
ficoml
mov
pop
push
iret
mov
or
adc
jae
mov
les
jge
hlt
dec
pop
ss
inc
mov
dec
iret
cmp
jmp
ret
adc
mov
shlb
mov
and
xor
lds
cmp
sub
push
inc
jecxz
xor
rcll
or
cmpb
sarl
add
sub
fadd
xor
fld
sbb
lods
pop
outsl
and
push
or
aad
mov
nop
add
or
shlb
testb
push
iret
lds
popa
aaa
jge
in
xorl
sti
inc
xor
lods
pop
sub
push
sti
lea
xor
inc
cmp
inc
add
xor
movsl
adc
xchg
pop
sbbb
mov
aas
mov
mov
movsl
not
push
inc
sub
sarl
add
or
mov
add
mov
adc
cmc
int3
ljmp
pop
pop
insb
pop
xchg
out
and
cmp
shl
xchg
in
popf
aam
push
in
ffreep
jae
fidivrs
es
dec
ja
or
shl
andl
mov
sub
dec
dec
and
dec
mov
cld
or
gs
jle
testl
jmp
mov
leave
sbb
adc
repz
xchg
icebp
dec
mov
cli
adc
push
adc
add
adc
nop
jmp
and
cmc
movsb
lea
sub
xor
lret
rcrb
scas
add
rclb
subb
test
imul
int3
decb
cmpsb
xchg
push
lods
and
or
popf
iret
sub
or
dec
cmp
push
pop
test
and
mulb
lret
cmpsb
xor
leave
or
cs
aad
cmc
das
lahf
jnp
rcl
or
pop
cltd
xor
and
and
mov
adc
and
xchg
mov
mov
mov
fsubs
aam
lods
xchg
mov
xor
dec
call
rcll
cmpsl
into
add
shll
popa
js
add
cmpsl
lahf
adc
test
push
dec
in
test
mov
lock
stc
dec
cmp
push
addr16
push
cmpsl
push
addr16
pop
cmc
scas
bound
lret
lahf
mov
adc
test
xor
mov
sub
in
out
test
xor
iret
into
test
stos
movsl
arpl
je
dec
cltd
ret
fists
imull
and
and
or
mov
mov
dec
std
sbb
xchg
jnp
xlat
sahf
cmc
mov
orb
add
mov
inc
mull
push
xor
mov
cmp
enter
fistl
xor
dec
enter
in
pop
std
mov
xchg
sub
test
mov
pop
dec
xchg
iret
je
sbb
rorb
xorl
stos
mov
fsubs
xor
addr16
inc
loope
push
idivb
cmp
mov
xchg
out
sbb
pop
or
push
pop
rolb
dec
jnp
dec
mov
or
jle
mov
mov
cld
xor
xchg
subl
or
cmpl
mov
jo
jecxz
nop
xor
mov
test
sub
pop
ds
or
add
js
add
call
dec
stos
lcall
cmpb
clc
adc
call
out
xor
pop
and
or
lret
inc
and
mulps
cmp
mov
shrb
mov
pop
xor
xchg
inc
inc
lcall
out
jle
lock
out
inc
or
leave
push
add
sti
or
mov
call
imul
loopne
in
andl
aaa
pop
mov
adcb
sbb
dec
adc
loopne
pop
mov
jp
mov
xorl
mov
imul
ds
pop
pop
in
dec
fsubl
loopne
cmpsb
mov
xlat
ret
xchg
jb
jl
mov
iret
pop
push
aad
rolb
in
pop
vpaddw
pop
cmp
or
inc
dec
scas
sbb
ljmp
dec
xchg
out
scas
dec
add
in
dec
mov
mov
loopne
xchg
fdivp
adc
divl
and
sub
pop
xor
js
dec
xchg
push
movsl
roll
xchg
or
aam
adcb
mov
mov
jmp
dec
outsl
lret
cli
les
xor
dec
push
or
shll
mov
aad
fcompl
aad
and
shl
inc
push
scas
pop
xlat
gs
xchg
adc
imul
add
jne
jg
lcall
ds
insw
inc
clc
cmp
movsl
daa
lcall
jge
stc
pop
adcl
cmpsb
dec
loop
mov
shl
adc
mov
xor
lret
ret
jecxz
or
mov
mov
inc
outsl
pop
movsl
mov
mov
filds
out
iret
dec
push
cli
sub
xchg
cmp
or
mov
out
ja
mov
orb
ret
xchg
stos
adcl
clc
rcrl
idiv
leave
test
push
jnp
jmp
pop
test
addb
dec
pop
shrl
sub
sbbb
inc
inc
xchg
xchg
in
dec
jo
lds
push
dec
inc
push
ret
negb
jge
movsl
andl
pop
mov
mulb
cmc
xor
pop
jae
xor
lret
inc
pop
popa
in
cld
mov
loope
int
scas
rcrb
cmp
mov
jno
pop
sti
scas
jg
sub
fucomp
out
test
jne
mov
mov
dec
inc
push
ja
lcall
dec
cmp
loope
test
les
xchg
or
dec
iret
xchg
or
outsb
or
mov
out
int
rolb
jno
jp
sbb
sti
fldenv
mov
xor
adc
and
imul
dec
js
daa
outsb
loope
add
inc
cmp
pop
push
pop
lcall
stos
push
sahf
adc
or
cmp
and
mov
add
mov
cmp
xchg
leave
call
add
pop
pop
push
mov
ss
xor
xchg
cmp
in
dec
push
mov
pop
xor
and
mov
leave
fidivrl
sarl
push
pushf
jns
mov
xchg
and
jae
stos
imul
and
pop
mov
frstor
lahf
sbb
testb
shlb
jmp
fwait
loop
popa
nop
loopne
int3
sub
pop
scas
test
sbb
lods
xchg
mov
and
or
or
dec
popf
mov
cmp
std
out
sub
pop
test
push
into
and
loopne
scas
push
mov
insl
pop
push
xor
xchg
mov
add
dec
ljmp
pop
insb
or
out
stc
pop
cmpsb
aad
sbb
push
mov
sbbl
mov
std
movsl
call
imull
mov
dec
sahf
add
jae
arpl
inc
bswap
adc
adc
popa
movsl
jo
cmpsb
add
loopne
in
popa
icebp
ret
into
fcmovb
lods
sbb
pop
and
dec
mov
shr
stc
mov
ja
fdivs
lea
loopne
pusha
or
aaa
inc
rcll
mov
andl
jnp
push
rcrb
bound
and
aad
mov
add
jecxz
lock
outsl
mov
aam
imul
idivb
pop
cmc
sbb
mov
xor
xor
mov
stc
sbb
jge
dec
decl
in
push
or
mull
lods
sbb
jo
iret
add
cmovno
cmp
mov
xlat
xor
adc
sub
orl
sub
pop
clc
setb
movsl
add
lret
arpl
add
jne
mov
sbb
call
jns
cmp
xor
stos
in
push
mov
jno
fisttps
xlat
adc
push
xchg
repnz
and
mov
sbb
cmp
jl
movsl
popa
pusha
mov
dec
dec
lcall
aad
fsubrs
cltd
pushf
cmp
fwait
lcall
push
clc
aam
aas
jmp
roll
popa
cs
add
addr16
push
mov
pavgw
pop
sti
in
fldl
push
rorb
mov
nop
pop
add
mov
sbb
pop
jb
aam
add
rclb
xlat
outsl
popa
stos
push
xlat
gs
dec
inc
out
sti
dec
push
pop
fsubr
pop
xchg
or
adc
das
jle
inc
mov
inc
fs
std
or
mov
adc
xchg
cmc
arpl
fistpl
push
int3
or
sarb
ret
lea
int
jb
insl
lcall
push
mov
cmp
daa
dec
push
adc
pop
jle
or
dec
ljmp
pop
ret
in
inc
push
test
cmp
sbb
cmp
push
mov
clc
js
mov
add
sub
stos
or
mov
add
sbb
or
xor
fcoml
mov
scas
js
fcoms
dec
sub
inc
fs
dec
mov
push
sbb
xchg
mov
push
jbe
ja
aaa
jnp
xchg
or
pop
cmp
sbb
rorb
in
push
pop
inc
sahf
mov
flds
shrl
and
jo
pop
insb
inc
cmp
fcompl
aad
xchg
fistl
push
mov
loope
out
insb
inc
cmp
jmp
das
mov
stos
sub
out
out
stos
xor
shlb
pop
lret
mov
repz
xor
jns
inc
xchg
jnp
aaa
jb
sbb
mov
pmaxsw
loope
addr16
int3
jo
leave
pop
mov
jne
das
mov
jb
dec
adc
arpl
add
imul
lcall
and
push
and
xchg
mov
out
rclb
or
pop
or
mov
jnp
mov
popf
add
xchg
jbe
outsl
mov
adcb
out
mov
dec
shrl
stos
inc
scas
xchg
inc
jp
xchg
aam
outsl
push
int3
mov
or
lea
fsubs
jo
push
seto
mov
pusha
cmp
lahf
aas
pop
cmp
int3
sub
mov
dec
sahf
mov
xchg
hlt
jo
xchg
xchg
outsl
cld
mov
addb
add
add
xorb
push
jnp
aad
mov
fldenv
popf
push
pop
scas
xorl
nop
pop
push
push
hlt
xchg
imul
xchg
test
arpl
add
mov
xchg
fimull
in
out
in
adc
jnp
sub
hlt
add
xor
dec
or
pusha
pinsrw
jmp
jnp
mov
addr16
mov
dec
and
jo
mov
cmpl
push
xchg
cmp
push
dec
lds
and
mov
mov
inc
push
xor
shll
jae
sahf
push
mov
fmulp
mov
sub
jae
jg
mov
sbb
scas
mov
insb
mov
xor
dec
sub
rcrb
pop
xchg
jecxz
xchg
out
in
into
jb
movsb
movsl
sub
mov
aad
aam
cmp
inc
lea
lock
test
dec
sub
jp
jns
push
pop
mov
cmpsl
xchg
fldenv
ret
lock
call
cmp
adc
mov
adc
and
fdivl
scas
cli
scas
mov
adc
or
imul
lcall
icebp
idivl
fmul
push
add
pop
in
iret
movsb
cld
lods
aas
lock
adc
hlt
dec
sbb
call
testl
lods
push
and
mov
clc
fxch
cmc
mov
xchg
cmp
mov
mov
out
lcall
jmp
mov
inc
cli
push
push
or
jl
ja
icebp
and
push
jns
cltd
push
jp
and
inc
dec
out
mov
stos
stc
push
pop
and
mov
lds
mov
mov
mov
mov
xlat
adc
push
clc
xchg
mov
mov
scas
lds
jb
inc
xor
orb
or
mov
xlat
popa
cmpsb
into
xchg
push
cmpsb
push
je
je
pop
inc
rclb
and
pop
jo
sahf
push
cmp
fwait
bound
mov
sub
push
mov
sub
movntpd
loopne
add
and
in
cmp
mov
mov
addb
inc
lret
add
pop
pop
dec
imul
sub
xchg
xor
mov
lret
test
sti
push
cmp
jb
sub
sub
insb
cmp
fsubr
mov
ret
sahf
mov
jp
les
xchg
push
testl
or
xlat
dec
mov
jnp
xchg
jne
test
pop
pop
push
jae
cmpsb
cltd
push
stos
je
jp
and
push
pop
sbb
dec
ds
add
cli
sub
pusha
roll
lcall
jnp
jne
sbb
sbb
call
push
mov
lret
and
aam
lcall
sbb
imul
mov
loope
adc
fcmovnb
jmp
cmp
xlat
addr16
xlat
push
popf
push
or
lcall
mov
bound
inc
dec
int3
stos
lea
ret
out
mov
imul
cli
fcoml
ja
scas
dec
jmp
sbb
std
mov
cmpsb
es
pop
mov
jl
aaa
push
ljmp
loopne
jo
inc
ret
pop
inc
pop
int3
or
ja
pop
and
jle
stc
push
idivl
fnop
adc
and
pop
jmp
pop
cmpsb
cmp
fwait
nop
negb
cs
cmc
leave
aaa
dec
mov
daa
lods
pop
sub
xchg
xor
scas
cmc
cld
cmpsb
mov
fnstenv
mov
movsl
push
xor
je
xchg
pusha
or
mov
outsb
sti
stos
push
sub
push
stos
or
stos
pop
push
inc
pop
imul
popa
repz
add
lahf
xor
lock
hlt
popf
popf
cld
jecxz
cs
js
push
daa
jbe
lds
fwait
call
enter
mov
mov
xchg
pop
xor
fdivl
testl
inc
imul
incl
popf
scas
popa
pop
imul
cmp
inc
inc
arpl
ficoms
out
xor
into
adcb
das
xchg
subl
add
imul
out
xchg
add
lock
xor
push
sub
mov
into
shrb
fnsave
stc
mov
int
xor
xchg
jnp
or
fstl
negl
pop
outsl
pop
ret
push
test
fistpll
mov
add
adc
xchg
lds
dec
aas
cmp
aam
cli
push
dec
rcr
dec
adc
rcrb
iret
imul
popf
leave
xchg
mov
mov
or
addl
xor
cmpsb
lret
je
push
aas
cmp
xor
mov
sbb
in
fimuls
xor
xor
sbb
daa
addr16
add
into
xchg
popa
push
mov
les
incb
xchg
js
ss
push
stos
inc
pop
xchg
sbb
mov
push
add
loope
jb
les
xor
cmpb
call
sbb
sbb
sti
fmuls
and
sti
fwait
aaa
je
cwtl
dec
or
jg
push
adc
pop
les
sbb
pop
dec
and
or
ret
inc
xchg
push
or
loope
mov
loop
xchg
inc
inc
jb
xchg
dec
fxam
test
inc
sub
cmpsb
push
sahf
ds
dec
int3
inc
repnz
stc
mov
aam
dec
leave
jno
jne
mov
jae
rcll
int3
mov
lea
mov
add
adc
dec
jbe
out
aaa
cmp
sarb
mov
divl
dec
sbb
fsubr
pop
cmpsl
sub
cs
push
je
add
cmpsb
cld
sub
jl
push
mov
int
cmp
lcall
push
ljmp
xor
cmpsb
in
xor
ret
repz
mov
idivl
sbb
pop
ffree
cs
xchg
fsubl
mov
shlb
xchg
push
mov
dec
cmp
push
shll
cmc
mov
dec
insl
test
sbb
addr16
fstp
pop
or
xor
mov
sbb
stos
inc
cmp
ljmp
lret
fs
enter
sub
or
mov
repnz
lea
ror
dec
pop
shr
jo
in
push
mov
enter
fdivs
jge
xor
iret
leave
mov
sbb
lods
sarb
dec
jmp
je
mov
pop
pusha
pushf
pop
sbb
adc
outsb
xlat
ljmp
cmp
xchg
cli
dec
ss
mov
jne
fldl
fistl
xor
cmp
pushf
dec
mov
mov
andl
stos
lahf
cld
or
insl
mov
lret
cmp
cmp
mov
mov
and
xchg
rorl
popa
jb
lcall
push
das
shlb
mov
scas
xchg
jb
jae
mov
imul
sbb
lret
pop
testb
insl
js
xchg
mov
adcb
movsb
jae
popf
mov
push
outsb
mov
mov
dec
out
cltd
repz
test
dec
in
lock
fwait
clc
fcmovne
mov
inc
iret
stos
jge
loope
xchg
xchg
jne
out
das
xchg
movsb
add
fstpl
lods
xlat
jno
aaa
xchg
mov
jne
enter
out
lds
mov
jnp
push
jmp
and
adc
push
jbe
in
cwtl
call
push
inc
push
xor
stc
loope
pusha
adc
pop
testl
fisubrs
lcall
mov
fldenv
imul
inc
stc
inc
repnz
push
cmp
test
inc
icebp
test
aaa
das
mov
push
sbb
cmp
loopne
add
cmp
dec
adc
xchg
ret
dec
adc
or
cs
test
sbb
ja
dec
push
ret
lock
cwtl
xchg
and
ja
aas
jl
outsb
cld
xor
and
pusha
jo
mov
cmp
je
add
xor
xor
test
inc
mov
in
aaa
push
mov
aam
sub
adcb
decb
mov
ds
mov
mov
mov
jnp
jge
add
xchg
pop
pop
aam
mov
mov
add
imul
mov
mov
jo
jp
repnz
mov
stos
das
mov
dec
dec
cli
mov
inc
sbb
jmp
mov
mov
addl
nop
aas
sbb
stc
lock
jp
fcoml
push
push
push
fs
cld
lock
loopne
outsb
test
sahf
jnp
std
das
out
movsl
fucomip
jb
fiadds
fisubrs
pop
cmp
in
mov
sub
adc
int
xchg
jae
ljmp
xchg
xor
mov
xor
orl
int
pop
je
test
ds
sub
sub
pop
xchg
rol
sti
cmp
add
ljmp
pop
push
push
movsl
ljmp
sbb
lock
jns
mov
push
xor
adc
inc
add
jp
ja
test
mov
leave
mov
out
pop
jp
mov
mov
cmp
add
sti
lret
lret
adc
mov
cli
lret
inc
pop
sub
ss
in
sub
mov
int
fisttpll
xchg
insl
jno
xchg
nop
fsubrp
sub
int3
dec
ret
jb
arpl
repnz
or
and
cmp
std
dec
xchg
leave
outsb
sub
leave
leave
rorb
cwtl
fmul
stos
or
test
jbe
jo
add
mov
ljmp
jmp
sub
fbld
sbb
push
repz
das
jo
xchg
sahf
push
fdivl
dec
adcl
inc
fistpll
push
add
enter
or
popa
pop
inc
add
in
xor
vmovups
inc
and
pushf
je
outsb
sub
adc
pop
dec
enter
insl
test
xchg
and
out
popf
pop
mov
fcom
lea
loop
xchg
cltd
add
inc
pushl
sti
mov
movsb
pop
inc
sub
inc
xchg
and
mov
movsb
insb
test
mov
xor
cmp
roll
out
push
or
adc
adc
les
jne
jo
and
in
sub
pop
xor
jo
std
pop
mov
lret
std
sbb
gs
cmp
lea
mov
outsb
inc
or
int3
and
ret
add
dec
mov
cmp
xchg
jp
movsl
iret
scas
dec
mov
cmp
dec
or
ja
jle
test
movsb
jne
xchg
mov
sbb
leave
and
pop
nop
in
ss
and
iret
clc
subl
push
lock
ss
mov
add
fidivl
mov
inc
jns
dec
fisubrl
lea
mov
mov
mov
popa
mov
out
jo
call
mov
jle
fiaddl
roll
mov
cmc
pop
lcall
insl
dec
add
and
pop
pop
scas
mov
lock
dec
dec
jo
je
movsb
mov
and
imul
jae
out
popf
sub
arpl
add
cltd
stc
adc
rorb
dec
dec
decb
jge
pop
cmp
fcompl
mov
xchg
push
adc
dec
rclb
aas
mov
str
addr16
pop
dec
add
xor
sbb
shl
test
xchg
or
cltd
fisubrs
cli
mov
shl
bswap
and
dec
nop
insb
stos
repz
cmpsb
popf
rcll
xor
xchg
ret
cmp
leave
xchg
in
jecxz
mov
mov
push
or
mov
aas
sbb
mov
mov
rolb
mov
lcall
imull
xor
mov
and
inc
das
jns
out
xchg
jmp
insl
xor
mov
les
pop
icebp
pushf
rorb
push
mov
cld
in
dec
arpl
push
pop
cwtl
jp
or
decl
and
aaa
nop
loope
daa
shrl
xchg
rcrl
push
push
cmp
xchg
mov
mov
cmp
dec
and
and
lods
lret
and
out
sub
sbb
xchg
pop
sub
dec
int
subb
and
inc
xchg
push
add
cmc
or
and
in
test
mov
icebp
scas
ja
fwait
xor
shll
test
lods
and
xchg
dec
inc
xchg
fnstenv
arpl
lret
in
jbe
and
jecxz
dec
ret
sub
lcall
mov
fistps
xor
pop
mov
fs
popa
divl
push
mov
inc
inc
enter
flds
cmc
or
mov
cmp
xchg
or
push
pop
or
sbb
rclb
push
adc
inc
orl
iret
xchg
jnp
inc
push
or
sbb
shlb
sub
stos
cltd
xor
xlat
pop
std
xchg
out
and
xchg
cli
in
push
or
add
jmp
aas
mov
aad
cmp
or
inc
jecxz
push
mov
mov
scas
cwtl
sub
cwtl
iret
sahf
repnz
push
adc
mov
loope
mov
imul
sbb
lcall
mov
imul
stc
sub
add
xlat
out
push
mov
jge
adc
icebp
cmp
cs
std
cmp
mov
xchg
pop
push
cmp
faddl
insl
sti
lcall
jp
mov
jo
movb
iret
iret
xor
or
rol
and
push
int3
ret
mov
xchg
or
pop
mov
test
jbe
or
lret
xchg
and
addl
push
jnp
lds
dec
xor
ficoms
inc
notb
rolb
stos
mov
mov
aam
cmc
mov
into
pop
movsb
ret
lret
nop
push
adc
sub
mov
xor
dec
jmp
repnz
nop
sahf
xchg
jnp
leave
jp
cmp
test
das
xor
xchg
jns
lret
add
push
aaa
jecxz
cmpsb
insb
ljmp
sbbb
dec
cmpsl
scas
fwait
and
add
iret
jg
repnz
add
xchg
enter
and
jno
sbb
sbbl
cs
fwait
lods
pop
jne
mov
inc
dec
loope
cmp
ljmp
xchg
mov
out
cmpl
test
ds
mov
push
jo
pushf
test
jbe
xchg
ficompl
and
nop
pop
pop
add
std
push
mov
call
shlb
mull
mov
xchg
fwait
inc
jp
inc
mov
arpl
and
in
ja
mov
jae
pop
pusha
fcomps
shlb
data16
adc
pusha
in
inc
inc
bound
sub
mov
dec
sub
mov
cmp
loope
enter
mov
sub
mov
pop
rolb
dec
outsl
jl
mov
mov
cmp
clc
cmp
cld
fstpl
or
sbb
inc
ja
mov
ss
outsl
testl
fcmovnb
jo
lods
or
into
fists
dec
mov
dec
mov
xchg
jne
inc
adc
fnstcw
cli
push
pop
aad
aam
mov
add
mov
sbb
and
rcrl
adc
mov
xchg
shlb
in
sub
add
pop
pop
out
test
js
mov
scas
fstpt
int3
jp
lods
mov
dec
jl
movsl
lods
mov
mov
fnstcw
mov
cmp
int
mov
xor
xchg
rcll
stos
inc
stos
dec
cld
jbe
fadds
out
stos
add
mov
decl
mov
aam
mov
pop
push
xor
loopne
lock
popl
push
pop
hlt
add
jne
insb
stc
inc
out
in
lret
cli
scas
outsb
scas
lock
outsl
mov
repnz
sbb
dec
pop
and
int
adc
cmpsl
push
mov
ss
xor
dec
scas
fbstp
adc
mov
inc
out
jge
push
xchg
inc
xchg
xchg
cmp
mov
decb
mov
push
cmpsb
repz
cli
sbb
test
fs
pop
notl
cmpl
xlat
or
lahf
jmp
mov
fucomp
pop
or
jge
cmp
mov
cmp
fidivrs
ds
sbb
sbb
cmpsb
lahf
es
push
test
out
loop
or
mov
data16
adc
movsl
xor
sbb
cmp
jmp
test
sti
sbb
jg
iret
mov
mov
shrl
ret
dec
sbb
into
mov
xor
imul
pop
push
mov
lcall
add
xchg
mov
clc
pop
or
jecxz
xchg
scas
mov
xchg
sbb
jp
nop
cmpsb
inc
adc
shr
pop
jle
xchg
pop
or
in
push
jo
push
test
adc
push
pop
jmp
cmp
data16
and
jae
dec
in
add
mov
mov
fidivl
jno
pop
cmc
adc
call
loope
xchg
xadd
mov
data16
dec
mov
cmpsl
outsl
addb
add
popf
push
sbb
sbb
sbb
dec
mov
jge
add
dec
adc
xor
jns
ja
dec
daa
shll
xor
xchg
pop
pop
movsl
sub
xchg
or
cmp
clc
push
aad
frndint
mov
insl
stos
pop
pop
mov
aas
out
test
ja
fistpll
scas
push
sub
andl
or
adcb
popa
dec
dec
not
jmp
mov
cli
sub
lods
jecxz
ficompl
sarl
in
movsl
into
rolb
sbb
hlt
in
test
enter
xchg
rclb
ds
lods
filds
aam
xor
mov
je
cmpsl
jecxz
out
lods
xchg
adc
and
fucom
aaa
sbb
sbb
pop
jbe
inc
ret
pop
idivl
notb
and
cld
xchg
fnstcw
lods
push
in
test
mov
adc
cld
pop
mov
enter
and
scas
cmp
cmc
add
add
pop
roll
pop
in
jg
stos
inc
les
ds
adcb
inc
aad
call
push
mov
lahf
adc
xchg
call
lahf
fbld
test
jl
es
mov
pop
xchg
sub
sub
mov
mov
out
sbb
iret
repnz
adc
roll
sti
sub
icebp
dec
push
jae
cmp
imul
sbb
das
fcomps
ljmp
or
stc
repz
out
jo
testl
or
fdivr
out
jne
push
mov
or
add
jo
shrb
push
mov
scas
aas
cld
mov
incl
jmp
jno
dec
sbb
lea
pop
cltd
lea
xchg
pushf
loopne
mov
aaa
test
pop
scas
orb
cwtl
or
mov
pop
sub
lea
bound
fdivrl
cmc
xor
movsb
inc
fnstenv
insb
add
sub
in
cltd
loop
dec
stos
outsl
and
outsb
adc
sub
out
pop
mov
or
leave
adc
cmp
inc
inc
in
sub
aad
and
sub
popf
xchg
jmp
inc
aas
test
mov
daa
sub
pop
ljmp
xchg
adc
repz
in
mov
and
pop
js
ret
xor
xchg
movl
mov
jl
fwait
xchg
int3
sub
sti
lret
sbb
imul
mov
and
popa
pop
inc
sbb
inc
pop
push
imul
flds
ret
adc
andl
add
fs
mov
popa
cmp
jb
and
neg
jp
cmp
out
mov
add
lea
pop
rcrb
inc
lock
jmp
pop
orl
sbb
pop
jg
sub
sub
cmpl
shlb
enter
shrl
shl
pop
mov
lds
push
fisubl
mov
pop
dec
loop
mov
or
push
movsl
mov
enter
jp
xchg
loopne
cwtl
jp
adc
push
cli
mov
cmpsl
fsubr
mov
xchg
aam
iret
sarb
mov
scas
mov
rcrb
cld
sub
pop
sbb
xchg
xor
pop
mov
inc
rolb
and
inc
mov
mov
out
cld
les
lock
lcall
fldl
or
icebp
negl
jecxz
xor
xchg
jle
addl
bound
aam
and
mov
fcmovne
cmpsb
jmp
mov
sbb
int
call
xor
or
and
aad
mov
movsl
ret
lea
cmp
cwtl
test
shlb
loopne
cld
or
pop
loop
out
xchg
into
iret
shlb
imulb
mov
xchg
les
out
inc
xchg
bnd
mov
xor
sbb
mov
push
ffreep
je
and
enter
shrl
imul
and
dec
mov
inc
jo
in
sbb
jp
dec
cli
pop
shrl
aad
movsl
imul
jg
inc
pop
add
add
cmc
jnp
dec
jae
pop
loopne
add
xor
inc
xor
mov
sub
ds
stos
mov
lea
pushf
mov
mov
mov
push
das
lods
gs
cmp
outsb
mov
jbe
add
lahf
push
shll
xchg
sub
xchg
dec
jnp
xchg
int
sbb
push
inc
out
pop
mov
fdiv
lcall
lea
dec
iret
mov
insb
mov
idivl
cmc
push
xchg
mov
sub
sbb
popf
out
cwtl
pop
rcrb
ljmp
jmp
ficompl
fnstenv
xor
dec
imul
sub
sub
cmpsl
jle
lods
cmp
sbb
sub
mov
jle
sub
lock
es
mov
add
mov
pop
call
fisubs
or
mov
adc
jle
jl
cmp
dec
pop
sbb
iret
gs
ret
mov
xchg
imul
outsb
jecxz
inc
out
push
aas
jmp
cmpsb
sbb
fildl
mov
dec
mov
fwait
and
add
jmp
out
lret
jno
iret
jo
pop
movsl
jge
push
push
mov
mov
lock
mov
mov
sti
out
cmp
test
push
mov
mov
fistpll
mov
mov
and
lock
sarl
nop
or
enter
add
mov
lods
inc
bnd
gs
cld
push
aas
mov
push
sub
in
scas
or
and
and
pop
dec
in
push
cmp
cmpsb
rol
lods
andb
or
into
repnz
popf
cli
mov
fwait
jne
cwtl
loop
push
cmpsb
mov
inc
clc
in
or
iret
or
jnp
push
sub
cmp
into
cmp
stos
dec
xor
jb
sub
stos
jbe
stos
sub
and
cltd
fchs
jl
mov
push
les
fstl
push
ret
in
dec
movsb
sbb
test
xchg
les
sub
or
mov
scas
jae
mov
inc
rcr
in
xchg
xchg
lret
ja
push
lods
or
cmp
mov
imul
jb
repz
xor
add
insl
add
pop
aas
int3
or
sub
cmp
int3
adc
fstpl
out
movsb
movsb
jne
rep
mov
xchg
imul
adc
pop
test
loopne
inc
inc
rcrl
mov
push
sub
push
pop
cmp
mov
je
aaa
dec
inc
dec
movsl
jmp
or
nop
push
movsb
or
movsb
inc
sti
jle
xchg
nop
mov
out
stc
sahf
subps
fsubr
mov
lds
push
fadd
push
cmp
jle
clc
std
bnd
ljmp
push
pop
out
adc
je
xchg
popa
mov
fldt
sti
jg
mov
push
pop
fldcw
movsl
jb
jp
lods
fldenv
or
test
fdivrl
dec
out
adcb
sub
sbb
mov
sbb
iret
cld
mov
xchg
call
sti
psubw
jle
push
mov
ljmp
les
fcoms
pop
sub
pop
cmc
and
mov
mov
mov
cmc
fstpt
stc
sbb
iret
push
lock
out
xchg
cmpsb
cld
sub
xor
jmp
cmpsb
fldcw
scas
add
jle
xchg
outsl
xlat
loop
add
sbb
and
cmp
insl
scas
std
xchg
mov
inc
fisubrl
out
xchg
iret
push
push
je
cli
dec
enter
jno
jmp
shl
mov
gs
stos
lcall
lods
sbb
fdivrs
out
push
jne
out
daa
and
pop
add
test
xchg
push
xchg
pop
sbb
sbb
jecxz
dec
and
shl
mov
inc
mulb
outsb
mov
sarb
jl
shr
cltd
daa
jns
jne
mov
bound
jecxz
pop
arpl
test
mov
jmp
loop
push
in
fwait
rolb
push
add
or
js
clc
mov
sbb
add
dec
jmp
mov
dec
mov
xlat
dec
dec
js
mov
sti
push
in
mov
cmp
adc
cli
jb
jge
repnz
fisubrs
jp
pop
in
flds
sti
call
aas
cmpsb
lock
and
aas
paddq
daa
pop
add
scas
fimull
jp
das
jle
mov
adc
jg
cld
ret
or
add
imul
and
mov
shl
loope
pusha
mov
cmc
int3
xor
popf
sti
imul
mov
addr16
xchg
jp
mov
sbb
mov
adc
std
mov
in
dec
repz
cmp
stos
stos
or
cmp
subl
xchg
push
movsl
aas
cltd
sbb
pushf
mov
dec
jno
insl
sbb
stos
push
out
lcall
neg
iret
aam
and
jb
xor
inc
mov
aad
fdivl
jno
stos
add
xchg
shlb
lock
int
jne
jne
imul
ja
sbb
lcall
sub
ss
mov
adc
push
sub
faddp
xchg
shrl
jbe
dec
add
mov
outsl
push
jmp
jl
or
lret
bnd
xchg
jbe
inc
popa
jg
ret
movsb
or
add
popf
clc
cmp
adc
add
pop
cmp
pusha
repnz
fimull
mov
push
bound
scas
inc
xchg
and
js
adcl
or
mov
cli
out
mov
les
xchg
push
fnstcw
jmp
jb
orb
aam
frstor
enter
fwait
rcll
cld
sar
inc
incb
adc
xor
sub
test
fistpl
sub
lret
cwtl
fists
les
add
pop
mov
dec
cmp
adc
jb
inc
dec
pop
push
cmpsl
out
out
or
cmp
pop
es
scas
daa
pop
outsb
mov
inc
sbb
cmp
popf
pusha
aam
jb
lock
popf
fdivs
push
fdivrs
xchg
push
mov
cmpb
pop
ret
mov
stos
aaa
scas
dec
mov
xchg
dec
or
or
lcall
rdtsc
fwait
out
imul
or
insb
arpl
int3
inc
pop
jp
add
loop
mov
or
in
add
jb
cli
push
lahf
loop
pop
test
and
inc
outsb
in
adc
pop
push
sbb
sahf
add
inc
mov
enter
call
adc
sub
loope
adc
int3
fistps
xlat
imul
cmpsb
sbb
mov
mov
dec
and
inc
or
adc
fwait
test
sahf
scas
sub
aad
ds
mov
cli
stc
nop
cmp
and
pushf
mov
mov
xchg
adc
clc
mov
adc
mov
fidivrl
sbb
lock
int3
mov
xchg
sbb
xor
scas
dec
jge
outsl
add
es
inc
cmpsb
add
add
cmp
in
out
rcrl
xchg
fs
pop
mov
es
xor
mov
mov
rclb
dec
lret
mov
stos
rcll
rorl
mov
lds
aaa
xchg
xor
shll
insl
adc
mov
cmpb
cmp
cmp
and
or
push
xor
pop
dec
and
inc
xchg
movsb
imul
loope
lret
ror
and
mov
cmp
jl
sti
loopne
mov
xchg
cmp
jl
lods
xor
test
sub
push
andb
daa
mov
pop
decl
int3
push
sub
in
je
mov
gs
jl
test
rorb
ret
das
mov
iret
and
mov
std
mov
fcoms
iret
jo
sbb
es
int
sbbl
imul
pop
push
adc
jae
call
mov
int3
loope
inc
rcll
clc
or
sub
push
sub
or
ret
and
fisubl
mov
mov
inc
add
sbb
inc
jnp
mov
and
mov
xor
jecxz
fldl
out
xor
ror
mov
mov
push
je
dec
jge
addr16
das
daa
push
jno
push
adc
ds
mov
stos
dec
test
loopne
push
nop
mov
mov
sub
das
fidivrs
stos
dec
punpckhdq
out
in
outsl
xchg
fldcw
in
xchg
sbb
aam
daa
scas
mov
enter
in
fucom
jo
pop
xchg
mov
sarl
loope
push
mov
repnz
fnstsw
add
push
les
repz
cs
pop
sub
rcrb
adc
orl
sbbb
cmp
and
shrl
cs
mov
pop
in
mov
mov
stos
inc
into
outsl
pushl
in
ret
hlt
xchg
jno
mov
outsb
xchg
sub
or
rcl
inc
mov
je
mov
xchg
jl
aad
jae
sarl
ljmp
hlt
sti
outsl
or
mov
mov
leave
aas
mov
push
cld
mov
mov
jge
sti
mov
insb
sub
andb
rcll
cmp
adc
jge
shlb
sub
cmp
add
adc
andl
bt
in
cmp
mov
shr
sub
cmp
testl
outsb
addr16
or
mov
repnz
xchg
daa
addl
xchg
inc
or
imul
and
push
call
lock
psadbw
imul
mov
push
enter
jmp
jne
xchg
xor
lds
and
adc
aad
dec
aaa
jecxz
mov
mov
les
xor
jl
shr
and
inc
mov
or
daa
test
call
ds
in
aas
cmp
rol
push
fstpl
testb
sarl
mov
add
sub
and
xlat
cmp
cmp
dec
das
aad
jmp
mov
bound
popf
lahf
pusha
leave
pushf
jno
mov
scas
dec
mov
adc
shlb
test
and
out
jp
repnz
std
xchg
loopne
sub
or
xor
shrl
sub
in
cs
or
sbb
mov
mov
push
icebp
fwait
xchg
and
cmp
int
imul
call
cvtps2pi
out
and
out
loopne
jp
pop
xchg
cs
pop
dec
xchg
mov
data16
mov
add
fcmovb
or
add
and
hlt
mov
ljmp
or
sub
pop
mov
mov
fwait
nop
push
adc
inc
cltd
push
dec
outsb
in
mov
mov
aas
mov
rcr
fcmovnu
inc
add
out
insb
shll
les
and
into
mov
out
mov
shlb
push
cmc
push
leave
jl
in
movsl
jns
cmp
or
jb
xchg
ja
mov
fld
in
in
out
jb
lods
repnz
fs
lret
mov
call
cltd
pop
cmp
lahf
fs
add
xchg
and
lds
dec
inc
jp
mov
xor
pop
add
inc
inc
and
cmpsb
sub
aad
mov
inc
mov
jg
dec
insb
xchg
jbe
or
call
or
cmp
push
jo
shrl
lahf
ss
and
daa
mov
ret
push
or
jnp
pop
cs
xchg
lea
pop
push
mov
lret
xchg
push
cmp
push
xlat
and
out
or
lock
or
adc
cs
ds
and
push
scas
iret
sub
andb
orl
push
push
sarl
add
xor
lea
mov
in
push
cld
and
mov
mov
pop
and
mov
cmp
mov
pop
and
lea
gs
pusha
mov
push
lods
call
lds
sub
push
add
sub
es
xor
inc
push
lock
dec
inc
lahf
adc
xlat
dec
mov
cmp
nop
outsb
sub
jae
mov
xor
fistpll
std
inc
inc
xor
out
dec
pop
in
sub
jns
and
lock
lcall
or
pop
enter
ret
mov
inc
or
push
out
xor
dec
daa
int
dec
cmc
popa
sub
movsb
les
divl
aad
bound
stc
pop
rcrb
mov
lahf
xor
xchg
jle
in
lea
clc
sbb
inc
pop
out
xor
nop
xchg
jmp
fcmovbe
fistpll
stc
pop
sub
in
dec
mov
jge
xor
or
rorl
arpl
mov
pop
fildll
pop
push
enter
pop
cmpsl
enter
or
inc
jp
pop
pop
repz
incb
mov
mov
lock
mov
xor
cmp
test
outsb
cmp
push
stos
dec
repz
shll
pop
scas
sbb
cmp
or
mov
sahf
push
and
sbb
push
clc
add
repnz
stos
int3
frstor
call
pop
mov
dec
scas
enter
cmpsl
popl
xor
fs
lock
ret
addr16
dec
aas
mov
pop
insb
sbb
pusha
loopne
cs
inc
popf
mov
jp
and
mov
xchg
fisubrs
mov
mov
sub
sub
rcll
adc
stc
outsb
sub
nop
mov
push
lahf
lds
test
pop
flds
and
or
hlt
movsb
int
sbb
inc
gs
mov
out
sbb
out
pop
in
dec
and
lods
jg
jl
or
dec
cli
outsl
push
aam
pop
xor
out
imul
adc
jbe
icebp
jecxz
sbbb
sub
dec
inc
std
cmp
adc
add
pop
pop
jge
mov
in
stos
test
test
sub
push
or
add
movsl
imul
fistl
dec
dec
shrl
fisubrs
outsb
and
movsl
mov
dec
test
adc
cmpsl
inc
stos
pop
pop
pushl
bound
fs
lods
out
fldl
out
push
push
sub
push
fwait
pop
cmpsb
dec
mov
mov
test
xchg
stc
out
cmp
pop
lea
out
fwait
add
inc
and
adc
xchg
mov
ljmp
scas
dec
add
mov
pop
dec
xchg
test
movsb
cmpsl
out
xor
mov
adc
sub
insl
scas
cmpsl
sub
push
in
xor
pop
rcrl
push
pop
lods
enter
mov
jae
sbbb
inc
cmp
imul
in
in
out
ret
fidivl
lahf
mov
in
daa
aad
push
mov
adc
nop
sbbl
mov
pop
fs
and
lret
cmp
aam
add
adc
sti
lods
mov
sbb
push
fcmovu
jmp
pop
push
popa
or
mov
cmp
notb
int3
fldt
xchg
cmp
fbstp
sbb
mov
sub
jecxz
bt
std
dec
add
dec
lret
ret
sub
adc
xchg
jnp
fnstcw
dec
or
cli
pop
adc
push
test
xor
lods
adc
repz
mov
adc
lahf
data16
dec
adc
out
mov
scas
out
jmp
push
sbb
lahf
stos
push
cmp
adc
push
push
sbb
sbb
jg
or
loopne
sub
pminub
pop
or
clc
jp
insl
out
adc
dec
jg
nop
xor
xchg
pusha
pushf
dec
sub
push
adc
dec
jno
test
inc
or
int3
stc
loop
push
xor
push
push
push
insl
stos
rcr
fcom
jb
test
shrb
and
lock
call
xchg
adc
addr16
pop
sbb
cmpsl
jecxz
test
pop
gs
out
mov
sub
lcall
mov
fcmovnu
out
jl
nop
test
add
pop
jl
bound
jne
adc
adc
cwtl
dec
sbb
mov
jle
push
lret
jae
xor
xchg
pop
and
push
test
leave
popf
cmpsl
mov
push
cmpb
leave
fdivl
jnp
pusha
lds
mov
jg
inc
ja
lahf
jne
push
push
cmp
cs
xor
cmpsb
pop
fsubl
test
push
outsb
ljmp
sub
jno
pop
outsb
or
mov
sbb
mov
outsl
stos
into
or
movsl
ljmp
ficompl
int
pop
je
sub
mov
push
in
pushf
or
jns
dec
jmp
push
mov
and
xor
fimuls
pop
sub
xor
test
jb
cwtl
dec
adc
and
sub
lcall
stos
and
add
stos
xchg
lcall
outsl
jne
imull
movsb
add
les
mov
sahf
xor
push
lock
adc
mov
fldz
pop
fisubl
ljmp
test
ret
xor
mov
xchg
dec
shr
dec
daa
sbb
xchg
punpckhbw
pop
dec
nop
mov
sub
sarb
idivl
fildll
fistl
sub
cltd
out
icebp
inc
pop
call
inc
lea
push
dec
imul
addr16
sub
push
push
lock
in
rcrl
dec
fs
mov
dec
xor
push
inc
scas
fidivrl
ret
stos
mov
cmp
and
repz
inc
rcrb
dec
push
bound
mov
xor
xor
xchg
cld
cmp
lcall
stc
fcompl
push
sub
jo
jo
adc
pop
dec
out
sbb
ljmp
out
aas
inc
test
jb
adc
cmp
jmp
mov
and
and
and
ja
sarl
pop
jl
jp
mov
mov
pusha
mov
scas
fldln2
pop
xchg
push
fcoml
xor
mov
popf
out
pop
push
loopne
pushl
aam
daa
enter
sbb
cmp
aas
repnz
scas
sbb
mov
push
adc
cmp
add
inc
lahf
mov
cmp
scas
jmp
xchg
test
or
scas
push
movsb
sub
push
cmp
add
insl
cwtl
ret
pop
pop
sub
bound
call
sub
push
jg
cmp
loopne
fsubl
hlt
add
in
pop
es
pop
fstpt
add
addr16
mov
das
testl
loopne
jae
iret
mov
das
push
pusha
pop
xchg
pop
into
jns
xor
jnp
mov
pop
lds
lock
sahf
sub
jecxz
mov
popf
mov
mov
adc
aad
rolb
adc
jbe
or
dec
inc
rcll
stos
xchg
stc
testb
sarl
ret
in
test
fadd
dec
push
push
out
mov
ret
or
adcl
xor
lock
xchg
outsb
pavgb
jge
lret
cmpsb
push
xchg
cwtl
out
jecxz
mov
jp
outsb
lds
mov
les
adc
sti
outsb
and
int3
in
add
adc
xor
pop
sbb
sub
xor
adc
xchg
aas
test
aaa
mull
ds
jmp
int
push
cli
xchg
incb
xchg
xor
inc
in
loope
negb
dec
xchg
jno
mov
ss
xchg
cmp
push
push
sub
dec
movsl
mov
and
add
out
movsl
ret
cmp
stos
shl
sbb
adc
adc
jl
popa
ja
pop
sbb
adc
xor
int3
aad
mov
mov
or
mov
outsl
adc
fisttpl
popf
mov
fmull
xchg
and
shrl
ja
adc
pop
lret
push
mov
lret
cmp
inc
idivl
lods
bswap
scas
xor
in
mov
xchg
jmp
cmp
fisttps
lods
ficompl
jne
cmpsb
scas
popf
ficompl
movsb
xchg
jae
outsl
ljmp
and
fidivs
jo
rcr
ret
cmp
arpl
test
adc
test
cld
add
mov
aad
fisttpl
outsl
or
into
cmp
bound
jecxz
and
sti
test
fidivs
dec
sub
call
inc
out
in
adc
dec
xor
test
je
and
sbb
aas
insb
dec
push
xor
cmp
inc
movsl
shr
jnp
pop
in
cmpsl
test
add
or
jae
xor
push
ss
mov
fnstcw
lcall
stc
mov
sti
popf
push
cs
ret
xchg
dec
pop
pusha
sub
lret
ret
out
ffree
push
jp
out
xorl
inc
cmp
mov
hlt
mull
and
sbb
ficoml
loopne
enter
cmp
jl
sbb
loop
out
cld
shlb
nop
push
jne
push
gs
ret
mov
inc
push
mov
je
and
mov
popf
fstpt
jns
jns
cmp
xchg
push
mov
loope
and
sub
mov
xchg
ret
dec
cmp
sbb
jp
xchg
js
mov
test
xor
repz
pop
js
mov
imul
pop
push
ss
mov
xchg
outsb
pop
jbe
rolb
pop
mov
adc
sahf
cmp
lcall
add
inc
or
add
dec
scas
xchg
cltd
test
mov
mov
adc
adc
outsb
loopne
mov
xchg
pop
pop
or
mov
aad
mov
dec
mov
pop
test
mov
or
dec
jb
add
iret
xchg
adc
out
xor
adc
mov
pop
dec
and
rcrl
fs
cwtl
test
jecxz
add
dec
cli
gs
lods
inc
notl
mov
loop
out
fisubrl
lds
mov
dec
push
xchg
mov
les
les
outsl
fsqrt
xchg
insl
out
es
ss
aas
jo
cmp
dec
adc
jecxz
sar
sub
cmc
cmc
stc
pop
xor
mov
jb
xchg
jae
adc
jb
out
daa
add
jle
mov
or
adc
data16
sub
fists
sub
mov
rclb
cmpsl
push
xlat
sbb
jl
xchg
mov
fcoml
cmp
popf
and
xor
push
dec
dec
xor
mov
fdivr
jmp
filds
xchg
test
data16
fnstcw
and
int3
jns
gs
lea
bound
ljmp
bound
imulb
mov
leave
jno
sarl
mov
iret
cld
xchg
push
mov
stc
nop
and
mov
push
ljmp
jb
push
sbb
nop
cli
leave
mov
jb
scas
add
outsb
mov
add
in
lret
cs
ficoms
insl
xchg
negb
mov
fwait
sbb
xor
les
push
sahf
jl
addb
dec
jg
cli
in
setns
mov
icebp
std
cmpsl
jne
fs
xchg
daa
sbb
clc
dec
or
jge
adc
es
xchg
and
xor
push
inc
xor
push
xchg
mov
test
popf
jl
rol
or
sub
test
je
scas
pop
movsl
cld
add
jmp
ja
fsubr
pop
cwtl
sahf
mov
in
push
pop
cmpsl
and
xchg
add
adc
xor
int3
shlb
jae
inc
and
jo
jle
jb
loop
pop
je
je
iret
cmp
xchg
lahf
enter
cmpb
repz
or
pop
repnz
sub
mov
jle
inc
sbb
add
and
stc
adc
lods
stos
out
mov
xchg
loope
fidivrl
mov
lds
mov
mov
out
xor
mov
imul
cmpsb
adc
repnz
mov
sbb
pop
xlat
loopne
jno
inc
loopne
dec
fstl
in
lahf
dec
xor
test
lret
mov
rcll
push
clc
push
lods
jl
lret
fdivrs
das
jno
xchg
imul
enter
sbb
cmp
cmp
enter
jae
inc
and
shrl
cmp
xor
xchg
cvtdq2ps
mov
push
mov
lods
inc
sub
sbb
mov
nop
mov
out
pop
stos
bnd
xor
dec
cli
ds
jb
cmp
mov
mov
addb
sub
inc
pusha
fwait
test
fisttpll
jg
jne
imul
dec
mov
sbb
addb
dec
sub
push
push
xor
lret
sub
in
cmp
loop
or
in
mov
lods
sar
dec
ss
shrl
xchg
xchg
lea
inc
lcall
xchg
fcom
xor
enter
jmp
or
in
test
mov
je
cmovns
frstor
rcl
push
adc
icebp
mov
scas
jl
add
dec
and
cmpsb
xchg
sarb
mov
pop
fadds
idivb
mov
xlat
fs
add
into
push
push
sti
pop
fdivr
jb
nop
dec
fst
ret
outsb
aas
fdivs
xor
or
pop
in
faddl
lea
mov
mov
les
push
ficompl
pop
and
insl
shl
repnz
leave
jne
insb
insl
mov
pop
test
sub
and
dec
stos
xlat
lea
pop
jge
lds
add
andl
mov
xchg
cmpsl
push
jbe
fs
ss
pop
outsb
mov
int3
inc
lods
data16
jle
das
decl
popa
xorl
mov
pop
lock
add
cmp
popa
fadd
cmp
cmp
mov
mov
outsb
cmp
fdivs
out
cwtl
pop
pop
xchg
mov
insb
adc
loop
stos
push
push
rolb
fldl
cmpsl
pop
outsb
movsb
insl
in
iret
push
or
sbb
cmp
or
pop
lahf
add
decb
pop
mov
mov
mov
jnp
daa
inc
and
jl
inc
push
scas
outsl
xlat
jno
pop
cmp
jo
fildl
clc
f2xm1
stc
test
icebp
rcrl
mov
mov
mov
sbb
popa
jno
mov
sbb
push
xor
in
add
pop
jb
dec
aas
xchg
in
das
aam
dec
out
cltd
or
imul
mov
xchg
dec
movsl
add
xchg
push
jecxz
and
sub
sub
sbb
aas
pop
data16
adc
mov
outsb
mov
dec
lds
test
daa
call
jl
push
and
sbb
loop
and
add
mov
push
jmp
mov
adc
lods
jb
movsb
adcl
dec
mov
call
xchg
andb
sub
add
or
outsl
ret
jge
sbb
mov
nop
insb
pop
push
cmp
xchg
fldl
pusha
dec
push
push
xchg
jge
sti
cmp
les
ret
xchg
hlt
icebp
jmp
in
sub
sti
sbb
jb
jmp
jg
imul
repnz
lahf
fists
jbe
mov
push
addb
xchg
jmp
bound
jb
fadds
mov
jo
imul
or
pop
ss
fildl
push
out
fstpt
mov
sbb
fidivrl
dec
adc
mov
dec
pushf
int3
scas
pop
ss
ljmp
fsubr
in
add
adc
fs
out
aam
push
lret
rcrb
adc
mov
inc
ret
xor
xor
std
xor
mov
enter
pushf
sub
je
mov
and
jno
divl
pushf
adc
roll
lea
cmc
xor
fs
inc
mov
mov
sbb
pop
or
mov
stos
aas
test
out
pop
lock
and
push
lahf
sub
or
mov
and
stos
sti
lods
in
cmp
int
inc
hlt
sbb
jno
mov
shrb
cmp
mov
jmp
push
sub
sbb
sbb
movsl
lods
adc
int
outsb
orps
imul
shrl
test
jnp
negb
das
arpl
add
movsl
les
pop
cmp
cmp
push
push
adc
sub
adc
call
dec
lahf
xlat
and
pusha
dec
outsl
repnz
dec
jmp
push
cmp
lret
loopne
ret
es
iret
push
imul
std
adc
out
jo
jle
or
jmp
orl
jl
and
sub
cs
shl
push
adc
pushf
cwtl
out
xchg
jbe
loope
xor
xor
iret
push
das
inc
sub
sub
pop
cmp
lgs
lcall
aam
cmp
pop
lcall
dec
jno
and
adc
fildl
mov
mov
xor
adc
cltd
and
add
icebp
dec
imul
lea
lret
fdivrs
cmp
push
mov
xor
ror
ret
mov
jl
sub
xchg
or
leave
pop
add
jmp
jns
je
je
lcall
xchg
push
shl
xlat
xchg
cs
cmpsl
std
mov
jle
repz
xor
push
mov
lcall
or
and
roll
jns
cmp
rorb
and
out
enter
cmpb
inc
es
jmp
mov
push
bound
cwtl
stos
loopne
bound
adcb
pavgw
fidivrl
pop
xchg
pop
loopne
dec
dec
ja
sbb
fbstp
pop
inc
pop
cmp
and
divb
cmp
clc
or
and
repnz
adc
pop
std
xor
push
inc
fwait
mov
pop
jle
push
cmp
add
in
xchg
cmp
sub
popf
push
or
aad
add
add
andb
mov
movsb
call
or
iret
lods
rcrl
xor
es
dec
js
or
jmp
sub
sub
loope
mov
xor
push
fdivrl
dec
mov
pop
inc
ss
in
mov
pop
pop
xorl
nop
fwait
add
and
cli
dec
ret
or
cli
out
push
in
sub
sub
lods
add
subl
push
ljmp
lock
jns
jb
jbe
push
xor
dec
push
mov
pop
stos
mov
lea
or
push
idivl
aas
fsubr
outsl
xor
lods
jbe
add
shr
mull
xor
ret
outsb
cmp
pop
es
movsb
shl
adc
pushf
push
fdivs
and
push
inc
jmp
es
pop
inc
scas
out
jge
cwtl
push
ss
add
lahf
xchg
mov
xchg
mov
cmc
and
inc
imul
jmp
fbstp
jecxz
shrb
in
testb
int3
cmp
xchg
xor
mov
popf
push
fsubs
push
mov
xchg
inc
pop
sbb
rolb
sbb
or
xor
sbb
repz
adc
dec
inc
movsl
popa
test
jo
popf
daa
testl
nop
hlt
cs
gs
sub
fs
mov
mov
push
std
dec
popf
inc
push
sbb
scas
pop
xchg
adc
movsl
testb
and
and
cmp
int3
mov
jne
dec
pop
repnz
dec
xchg
push
dec
inc
jmp
movsl
sbb
sub
mov
mov
out
test
dec
scas
into
mov
jge
mov
shll
adc
ja
jge
or
jo
push
outsb
jo
lock
mov
pop
mov
jecxz
lods
pushf
mov
sbb
pop
inc
test
repz
mov
pop
cltd
mov
mov
cli
pushf
shll
lret
mov
jmp
out
fdivrl
or
repnz
pop
pushf
inc
clc
xor
dec
jmp
cltd
push
push
lock
icebp
imulb
leave
repnz
sub
mov
popa
or
adc
pop
es
sbbl
imul
xor
fsubr
mov
decb
pusha
call
cmp
cmp
cwtl
pop
dec
cmp
loopne
dec
mov
push
fstpt
push
and
loopne
push
or
in
inc
push
mov
in
enter
pop
icebp
dec
jmp
call
shrb
ljmp
cmc
jecxz
push
sub
out
popf
mov
test
or
out
mov
bound
jle
inc
or
ja
jge
ret
sbb
dec
mov
jae
dec
into
xor
pop
lea
jae
stos
mov
aas
adc
cwtl
jmp
jg
dec
and
sub
pop
xor
pushf
ret
push
push
sbb
cmp
inc
xor
rol
sbb
ss
stos
mov
xor
aas
mov
mov
into
jmp
dec
pop
jmp
push
in
inc
test
shrb
notl
fstps
leave
movb
jl
jb
fiaddl
mov
andb
adc
movsb
xor
mov
xchg
or
stc
adc
xor
mov
add
sarb
jns
dec
call
push
std
push
movl
xchg
adc
jl
or
mov
mov
xchg
mov
mov
xor
insb
cmp
mov
sbb
sub
incl
test
lock
cmpb
dec
mov
xchg
call
jecxz
xor
push
mov
lds
into
xor
ja
les
mov
ja
lret
in
testl
mov
aad
mov
add
add
ret
sbb
hlt
fwait
scas
fistl
pop
push
mov
add
mov
dec
and
lods
xchg
xor
xchg
xlat
sahf
xchg
xchg
cmp
xchg
aam
js
sub
shlb
sbb
sub
push
mov
mov
adcb
pop
cmp
insl
sbb
mov
inc
fwait
and
sub
repnz
negb
jg
inc
mov
ficomps
movsb
dec
xor
push
lea
cmp
movsl
pop
out
cmp
mov
jl
sub
into
sysexit
in
stc
cmpsb
or
pushf
into
mov
jnp
sbb
sbb
sub
ficomps
clc
nop
lea
adc
mov
aad
pop
cmp
mov
push
cwtl
mov
jo
cmp
js
lret
pop
lds
push
pop
sbb
jns
fdiv
dec
fisubs
add
daa
loop
aas
out
pop
rclb
lret
test
push
fnstenv
in
pop
in
fldenv
movsl
es
into
pop
out
pusha
adc
aas
adc
add
jg
fbstp
xorb
inc
dec
out
cs
flds
test
mov
cmp
incl
mov
push
sub
int3
mov
pop
pop
clc
out
dec
or
jo
aaa
in
sub
xor
pop
sub
pop
sub
push
enter
sub
int
rcrb
push
pop
xlat
sbb
mov
fadds
jo
mov
lods
cli
pop
cmc
repz
xchg
pop
jae
frstor
cld
xor
pop
lods
test
mov
mov
fiadds
mov
mov
int3
leave
lea
mov
sbb
xchg
dec
lcall
nop
xchg
push
cmpb
jbe
in
mov
dec
mov
pusha
fldl
sbb
dec
mov
push
mov
cmc
inc
push
orl
push
stos
mov
loop
add
xchg
cmp
dec
sbb
std
or
cmp
stos
push
movsl
push
leave
sub
xchg
mov
mov
fists
loope
sbb
pop
xchg
xchg
std
mov
xor
or
sub
icebp
xchg
xor
arpl
adc
push
cmp
movsb
mov
add
inc
and
inc
jmp
fnstsw
ljmp
xchg
bound
int
inc
xchg
movsl
shrb
js
jg
sub
pop
rcl
es
mov
loopne
or
rorl
das
dec
push
mov
imul
cmp
or
loope
and
icebp
xor
imul
decl
inc
jmp
sub
xorl
xchg
data16
sbb
test
pop
fists
dec
jge
add
mov
pop
ja
sysret
dec
adc
push
inc
xchg
mov
xchg
js
je
incl
neg
dec
loopne
inc
pop
push
sbb
add
mov
daa
cltd
dec
push
adc
adc
cmpsb
ret
int
xchg
pusha
xor
dec
das
sbb
inc
push
das
and
scas
cltd
fnstenv
add
aaa
mov
mov
adc
ja
push
or
sbb
xchg
jo
push
clc
push
or
xchg
sub
jb
pop
enter
sub
arpl
test
inc
mov
jle
cmp
jmp
repnz
dec
aam
or
or
cmpsl
push
cld
jecxz
mov
mov
mov
out
or
xor
stos
iret
std
push
rorb
int3
and
out
outsl
dec
jbe
xchg
mov
cld
mov
loope
movsb
mov
popf
aas
aaa
insl
inc
into
xor
fsubrs
pop
lock
insb
xor
push
ret
and
cmp
and
and
cwtl
out
push
dec
vpsrad
cmpsl
xcrypt-ctr
cmpsl
fcmovne
jne
mov
sahf
mov
mov
stos
mov
cltd
inc
jbe
in
jnp
mov
dec
sti
in
pop
and
ret
jo
push
cli
fidivs
fistpll
popa
iret
je
mov
cwtl
shrb
jp
mov
outsl
cmp
pop
leave
or
mov
sbb
divb
jns
stc
stc
mov
sahf
add
dec
cmp
aam
cmpsb
stos
and
mov
ret
in
dec
nop
adc
inc
ja
loope
mov
xchg
fidivs
cmp
xor
in
mov
add
mov
mov
jb
loopne
adc
cwtl
js
inc
push
add
fdivrs
and
cmp
push
sahf
repnz
je
sub
xor
popf
ljmp
imul
mov
and
and
arpl
inc
cwtl
cmp
inc
aad
xchg
repz
mov
ljmp
ret
adc
xorl
jbe
loopne
fs
mov
imul
pop
adc
jbe
push
or
cmp
int3
data16
lock
pop
rcl
and
inc
adc
mov
stos
mov
scas
sbb
imul
push
rcrl
push
sub
and
pop
movsb
loope
inc
call
int
cmp
xchg
lret
frndint
cmp
stos
adc
rcrb
loope
xchg
or
add
push
ret
arpl
movsl
pushf
lds
pop
call
dec
mov
movsl
out
pop
shlb
pop
pushl
sub
es
filds
out
cltd
loop
push
mov
push
adcb
fmuls
ljmp
outsl
push
mov
dec
push
daa
jmp
inc
push
add
pop
xor
pop
pop
adc
ss
xchg
mov
xchg
leave
push
mov
sub
pop
mov
mov
outsl
fst
mov
fisttpll
jns
ljmp
mov
dec
adc
int
mov
in
rcr
ror
fnstenv
mov
adc
cltd
sbb
mov
call
push
and
daa
jb
pop
or
mov
dec
jecxz
cmp
push
cmc
or
divl
dec
pop
lea
repnz
lods
adc
aam
sub
sbb
cmp
test
jecxz
repz
sbb
jle
mov
arpl
test
les
stos
jg
add
xchg
xor
sbb
mov
aas
test
jecxz
shl
cwtl
cmpsb
iret
les
mov
cmpsb
inc
push
int3
fiaddl
xorb
adc
push
lods
into
shrl
xchg
sbb
decb
rorb
dec
out
fldcw
lea
jae
cwtl
imul
jl
jns
cmp
fldl
je
mov
push
pop
push
lahf
add
pop
jmp
cmp
jno
sbb
fists
mov
jmp
mov
sbb
je
push
das
cmp
cmp
push
sbb
push
clc
stos
stc
aad
jge
ja
pop
and
or
mov
push
mov
insb
lock
loop
fs
repz
xor
inc
fistps
mov
loope
pop
shlb
pusha
add
xor
and
andl
fisubs
dec
popa
roll
les
adc
push
and
jecxz
jo
add
add
fwait
inc
in
or
jle
add
orb
jecxz
iret
iret
testb
fadds
and
mov
xchg
inc
add
daa
in
movsl
test
pop
lods
pusha
ljmp
mov
in
add
xor
out
pop
roll
arpl
inc
mov
addr16
jl
iret
stos
stos
es
sbb
pop
repz
inc
mov
xchg
mov
enter
pusha
and
xchg
xchg
sbb
jmp
sub
mov
pop
pop
arpl
dec
xor
call
pop
xchg
sbb
addl
test
dec
mov
iret
mov
jl
lock
stc
xchg
sti
mov
jbe
mull
add
lret
xor
movsb
repnz
mov
fdivr
mov
push
dec
jmp
mov
and
nop
xchg
popf
fs
mov
mov
mov
neg
or
or
add
cltd
sahf
cld
cltd
dec
scas
sbb
push
inc
push
dec
nop
cmc
mov
mov
test
and
xchg
xor
mov
and
sbb
pop
or
dec
xchg
inc
aam
jle
adcl
cmp
jl
pop
add
push
jnp
inc
push
xchg
or
js
in
loop
rcrl
adc
and
xchg
in
push
push
jno
sbb
out
ds
lods
pushf
outsb
loop
mov
out
sahf
loopne
xor
xchg
dec
cwtl
fs
pushl
jge
pop
aaa
xor
sahf
sti
repnz
push
arpl
push
jg
jns
sub
out
push
cmc
loop
fisttpl
pop
lcall
outsb
ss
pop
jle
outsb
lds
dec
cmp
push
pop
add
pavgb
mov
imul
mov
outsl
add
into
xlat
sti
cmp
imul
fcomp
fmulp
cltd
leave
out
das
sub
out
fadd
pop
and
cld
mov
adc
xor
addr16
or
mov
scas
lret
add
loop
loope
out
popa
xchg
jle
mov
or
dec
mov
jo
ss
sahf
jae
imul
in
clc
andl
xor
jl
sub
add
push
fimull
xchg
xchg
lahf
fnstsw
xchg
dec
jmp
jg
jo
push
mov
lahf
testb
icebp
or
movsl
stos
movsl
or
bound
add
add
cld
mov
or
ds
sub
pop
and
dec
dec
jae
or
dec
fldl
xor
test
xorb
mov
and
jns
push
xor
jmp
lds
or
or
push
mov
mov
pusha
sti
add
fists
mov
loope
push
pop
mov
cmp
iret
lea
clc
loopne
movsl
dec
imul
inc
sbb
or
stos
lahf
mov
inc
push
jbe
shl
inc
cmc
xlat
mov
xor
repnz
imul
xabort
out
leave
iret
jne
rcrb
arpl
subl
push
js
shrb
add
push
adc
mov
lock
sbb
push
ja
mov
test
mov
in
mov
cmpsl
inc
into
add
inc
push
mov
adc
imul
aam
and
call
ss
xlat
ds
push
xchg
frstor
and
sub
sahf
out
les
xor
jne
cld
test
out
inc
repnz
pop
sarb
or
sbb
push
xchg
xchg
mulb
mov
cmpsl
add
lahf
xor
out
sbb
add
movb
test
sti
cmp
outsb
aaa
pushf
dec
in
jbe
mov
sbb
adc
push
aad
sub
mov
pop
sbb
and
pusha
imul
cmpl
test
xchg
jge
or
das
cli
inc
idiv
popf
in
pop
mov
sub
mov
mov
aad
clc
or
movsl
ret
jo
pop
aam
and
xlat
insb
fstpt
insb
adc
ret
sahf
push
mov
mov
aad
lods
sbb
jb
call
mov
ret
es
aaa
push
ret
movsb
add
xor
hlt
in
mov
adcb
fdivs
lods
hlt
sbb
sbb
pop
roll
mov
loopne
add
gs
inc
insb
loopne
sti
sub
std
fimull
xor
call
xor
aaa
and
push
leave
mov
add
loope
jp
insb
repnz
xor
push
push
das
imul
jns
jb
repz
dec
pop
iret
testl
lods
aas
add
ja
movb
fildll
pop
fwait
xor
mov
data16
rol
jae
sahf
int3
shlb
pop
inc
fwait
in
clc
xor
cmp
jne
mov
inc
and
aam
mov
imul
xorl
mov
add
sarb
mov
jbe
sbb
mov
pop
mov
inc
mov
sbb
sbb
push
and
leave
mov
push
sbb
or
or
sub
cmp
mov
scas
aas
je
xchg
sub
fbstp
push
or
loopne
push
int
pop
test
xchg
pop
in
lret
loopne
arpl
and
push
cwtl
scas
add
and
int
fwait
ud2
mov
push
jae
sbb
cmp
sub
movsb
leave
sub
ljmp
int
mov
ror
outsl
adc
je
shl
sub
pop
leave
mov
test
rcrl
dec
in
and
je
dec
lcall
paddq
aad
in
and
jmp
mov
xchg
das
adc
xchg
sub
leave
mov
cli
inc
scas
fstps
call
ljmp
jecxz
or
xchg
jmp
scas
in
dec
pop
xchg
pop
jo
dec
test
jnp
add
in
jae
gs
dec
sahf
repz
outsb
fwait
pushf
adc
mov
sbb
inc
fldcw
in
test
mov
pusha
pop
adc
movsl
sub
and
repz
and
sbb
fucomi
or
jge
cli
or
mov
rcll
inc
cmp
outsl
or
xchg
lcall
jno
add
clc
cmpsl
icebp
js
rcrb
adc
xchg
cmc
xor
add
enter
scas
ds
or
adc
sti
lahf
mov
loop
dec
xor
jno
cmpl
stos
iret
int
inc
test
xor
dec
jecxz
flds
push
sub
fmul
sbb
dec
mov
jns
stos
aad
push
or
adc
test
mov
cmp
mov
pop
subb
adcl
addl
lret
stos
cwtl
xchg
fsubr
into
mov
loopne
push
jae
test
ljmp
jne
jmp
inc
xchg
aad
aas
shll
test
cs
addb
stos
sbb
mov
mov
ret
fs
decb
mov
cltd
xchg
nop
lods
fs
repnz
nop
fs
divl
cmp
outsl
mov
jmp
insl
inc
mov
testl
ret
aam
scas
ret
jle
idivl
in
stos
xorl
jle
into
scas
mov
shl
push
jmp
fwait
cli
dec
add
xchg
xor
stc
mov
sub
repnz
mov
or
push
sbb
jle
dec
jp
xchg
push
mull
add
test
xchg
std
jl
hlt
mov
stos
inc
mov
cmp
jmp
stos
popf
sub
icebp
inc
mov
cmp
cmpsl
mov
mov
mov
popf
les
repz
or
push
and
movsb
pop
mov
sbb
cmpb
xlat
data16
mov
hlt
test
mov
or
xchg
cld
mov
sbb
or
aad
lahf
dec
or
xchg
sbb
pop
xchg
push
into
dec
imul
sti
gs
cwtl
jnp
insb
test
inc
popf
mov
inc
repnz
out
cli
pop
idivl
shll
stos
outsl
xchg
pop
cmp
ret
movsb
ss
or
pop
rcll
dec
call
mov
aad
mov
das
lret
bound
out
dec
pop
cli
inc
std
sub
sub
call
push
cli
and
addr16
addb
int3
loope
mov
dec
in
mov
test
xchg
repnz
jle
pop
sub
jp
out
xchg
inc
scas
popa
les
jo
xlat
push
data16
or
jmp
das
icebp
xor
in
inc
cmp
xor
test
insl
sti
in
push
cltd
adc
call
into
cmp
movsb
or
lcall
push
mov
out
sub
adc
fwait
mov
cltd
in
pop
mov
imul
fwait
xchg
loopne
mov
cmp
js
call
ds
sub
mov
popl
sahf
xchg
sarl
add
fmull
mov
and
adc
mov
xchg
sub
aam
pop
out
lods
push
and
cmpsb
cli
jge
or
add
out
or
test
or
int
mov
int
and
adc
cld
xorb
das
mov
xor
insl
std
xor
iret
pop
push
jns
xor
idivl
clc
sub
sti
stos
mov
shll
in
dec
jne
mov
ljmp
or
mov
cmp
jp
mov
xchg
cmp
imul
fucom
xor
arpl
repz
mov
clc
push
dec
in
fsubs
sti
mov
lods
ljmp
mov
add
push
inc
sub
filds
stos
stos
push
es
add
cmp
mov
mov
push
push
sub
insl
mov
out
iret
mov
addr16
insb
and
push
mov
push
cmpsb
inc
or
xchg
mov
push
not
arpl
out
sbb
sbbl
loope
mov
cmp
mov
dec
in
adc
sti
dec
or
imulb
fnstcw
fmulp
std
data16
aas
into
xchg
outsb
mov
out
testb
jno
push
lods
dec
sub
arpl
fsubl
pop
cmp
incb
sub
add
jo
lods
fmuls
aaa
xorb
in
cmp
pop
mov
push
adcb
sbb
scas
lods
fstp
adcb
clc
pop
dec
ret
sbb
and
push
and
daa
call
jo
pop
pop
add
sbb
scas
jmp
and
jns
add
es
test
mov
sbb
xchg
ficoml
add
jno
sbb
mov
xchg
loope
jl
js
cmp
lods
cmp
mov
in
or
cli
gs
call
pop
fsubrs
xchg
js
inc
imul
dec
dec
and
lahf
mov
test
xor
push
aaa
insl
ret
arpl
push
dec
inc
or
jp
dec
clc
inc
es
rcrb
pop
push
popa
into
jl
into
jne,pt
jno
lret
decb
insl
aam
cltd
push
fwait
cmpsb
aad
nop
mov
popl
out
adc
js
jp
cmp
ja
push
pop
push
mov
test
push
pop
popa
outsb
cltd
cwtl
repnz
sub
aaa
lret
push
cmp
push
sar
inc
scas
insl
ljmp
and
inc
lahf
push
jne
fimull
cmc
dec
sahf
xchg
push
mov
daa
inc
xlat
or
test
mov
lods
imul
and
xor
mov
sub
push
push
testl
mov
je
adc
mov
and
fistpll
adc
and
sbb
and
gs
or
cmp
mov
sub
xchg
loope
push
mov
xchg
sbb
fldt
sbb
arpl
cmp
or
cwtl
scas
mov
imul
sti
je
call
push
mov
dec
andl
call
movsl
xor
imul
std
pop
pop
int3
jmp
test
inc
lea
xorb
mov
popf
lret
push
jne
lods
jae
aam
and
sbb
js
dec
add
mov
fs
sbb
inc
push
fistpl
gs
and
pop
inc
leave
sahf
mov
sub
pop
pop
fwait
seta
in
aam
mov
lock
push
mov
in
mov
insl
repnz
pop
xor
adcb
mov
or
inc
adc
mov
xor
insl
inc
cmpsb
icebp
sahf
mov
inc
jns
add
jno
sbb
push
pop
push
pop
int
popf
mov
push
insl
fdivrl
lcall
pop
js
add
mov
xchg
push
and
lea
jno
fldcw
jbe
or
imull
jg
pop
lds
stos
xlat
popa
xchg
cmp
lods
lret
sbb
xchg
jge
cmp
push
sub
jmp
sbb
jne
xor
je
push
daa
scas
mov
js
sub
jae
or
imulb
fdivrs
lahf
add
aas
imul
mov
dec
xor
cmp
push
xor
test
or
out
shll
call
jns
mov
mov
mov
daa
sahf
lahf
test
cmp
xor
scas
pop
dec
cmp
mov
push
icebp
and
pop
mov
aas
cmp
jnp
xor
xchg
pop
mov
lcall
sbb
xor
gs
pop
cmp
push
inc
sbb
and
xchg
hlt
mov
rolb
mov
pop
mov
mov
loope
das
outsb
sti
data16
lret
cmp
rcrb
inc
dec
push
into
mov
or
jecxz
xchg
pop
clc
rorb
jo
movl
inc
ror
cmpsb
stc
jle
leave
xor
pop
ja
mov
xor
test
and
and
pop
cmp
push
adc
ss
sub
and
in
inc
ret
mov
push
ja
pop
push
cli
into
into
mov
clc
add
in
out
dec
push
loope
dec
push
lods
filds
xchg
pusha
mov
and
inc
mov
inc
xor
xchg
mov
jnp
mov
push
imul
loopne
cmp
sub
add
add
and
mov
adc
mov
cmp
dec
daa
repz
inc
mov
aam
mov
pushf
cmp
jmp
les
out
pop
sbb
cmp
arpl
repz
dec
adc
repnz
mov
and
out
outsl
call
add
out
mov
and
icebp
jno
adc
cld
das
mov
jmp
xchg
rcll
push
jns
bound
sahf
mov
fprem1
adc
push
addr16
push
stos
sbb
out
in
gs
fwait
cltd
mov
and
pop
jge
xchg
mov
insb
xchg
add
jmp
sub
add
ja
loopne
or
inc
mov
dec
shll
inc
xor
add
fists
cmpsb
fmull
in
inc
jp
xchg
out
imul
aad
sarb
es
out
adc
fwait
outsl
loopne
xchg
cli
or
or
ret
insl
hlt
iret
hlt
push
ja
mov
mov
mov
out
mov
das
imul
mov
cmpsb
fldcw
iret
mov
insl
push
xchg
jb
xchg
sbb
divl
jns
or
out
push
roll
rcll
inc
xor
and
push
adcb
cmp
test
cmpsl
sub
pusha
mov
xchg
std
arpl
aaa
pop
or
into
cmc
pusha
mov
mov
divb
cmp
in
push
cmc
jo
sbb
loope
and
sbb
mov
fisubrs
fucompp
sahf
int3
dec
mov
inc
xchg
mov
lods
sub
mov
nop
xor
mov
lret
dec
loope
and
outsl
jae
pop
xchg
mov
mov
cmpsl
jecxz
nop
cltd
fwait
stc
ds
sbb
push
out
fwait
xor
sahf
mov
in
inc
sbb
push
sub
pop
pop
lock
mov
dec
xor
or
pop
push
fmuls
int3
jg
scas
jne
mov
push
and
test
call
push
or
fidivrl
je
dec
out
jo
mov
lcall
fs
jp
arpl
dec
fbld
mov
mov
xor
and
mov
mov
bound
sub
sbb
fisttps
mov
in
pop
jg
mov
test
push
xor
lea
mov
in
rcrb
mov
pop
mov
rcrb
in
xor
push
xor
and
xchg
idivl
rcll
pushf
mov
dec
roll
add
adc
pslld
out
scas
in
shrl
cmp
clc
roll
push
jo
ljmp
repz
push
out
stc
jbe
cmp
inc
fcomi
push
pushw
add
jno
mov
mov
pop
xor
jmp
push
mov
fwait
test
and
mov
jmp
roll
add
ja
cld
adc
lods
lds
xor
sbb
pop
daa
movsl
cmpsb
jns
icebp
jb
xchg
lods
xchg
and
or
pop
jecxz
hlt
jecxz
mov
adc
xor
inc
xchg
adc
cltd
mov
aam
ud2
adc
std
out
imul
arpl
test
stos
mov
cld
dec
inc
in
or
adc
mov
shll
sub
fcoms
outsb
xchg
xchg
jnp
jne
push
xlat
test
cmpsl
xchg
cmpsl
inc
mov
pop
scas
ja
insb
mov
push
fdivrs
leave
push
outsl
int3
mov
rcrb
clc
add
addr16
adc
js
mov
lcall
lds
out
mov
in
sbb
outsl
and
fstl
mov
inc
xor
add
into
ret
insl
xchg
jl
cli
adc
cwtl
fcomps
mov
sub
jmp
cs
outsl
and
ljmp
and
dec
or
or
scas
xor
xchg
imul
mov
and
jl
mov
in
xchg
xor
test
aad
ljmp
fcompl
or
dec
adc
sbb
leave
mov
aas
sbb
pop
mov
lds
add
test
pop
jp
mov
scas
adc
xor
stos
pop
jb
movsb
mov
mov
cmpsb
mov
ja
push
sub
sub
out
iret
incl
jecxz
pop
mov
mov
push
sub
sub
repnz
mov
push
inc
stos
stos
aaa
out
loope
inc
mov
pop
iret
mov
cmp
loopne
mov
shlb
mov
push
sub
es
mov
and
addb
lods
add
add
mov
int3
push
push
js
jg
ficomps
aad
xchg
movsl
jle
inc
fisttps
inc
pushf
daa
data16
mov
xorl
sub
icebp
out
inc
dec
movsb
mov
dec
sub
add
mov
jle
jne
das
icebp
daa
out
shlb
mov
jp
add
xchg
das
xchg
call
jbe
sahf
sub
inc
sub
stos
repz
and
popf
cmp
inc
ret
frstor
daa
leave
mov
test
popf
sub
inc
add
negb
add
mov
sbb
jno
aaa
and
jmp
testl
ficoms
xor
cmp
xor
movsl
xor
and
jmp
test
pop
or
xchg
pushf
clc
sub
pop
mov
sbb
sete
mov
cmpsl
sbb
mov
mov
cmp
push
idivb
lret
add
insl
lcall
mov
int3
dec
dec
pusha
shr
mov
out
vmovntps
jbe
enter
scas
enter
out
add
rorb
sub
xchg
dec
bound
dec
sbb
jp
das
shlb
clc
cltd
adc
mov
filds
repz
pop
dec
or
sbbl
pushw
incb
inc
or
call
dec
push
cmp
jecxz
jae
in
dec
mov
in
mov
push
sahf
cwtl
sub
cmp
mov
inc
adc
jge
in
sbb
inc
dec
xchg
dec
mov
push
xor
push
jno
in
mov
and
add
sbb
mov
lea
pop
push
mov
in
xchg
in
pop
mov
les
xchg
jmp
push
fists
in
cwtl
pop
mov
bound
sub
loopne
adc
incl
lods
mov
enter
pop
inc
xchg
icebp
sbb
lea
mov
adc
or
pop
adc
dec
scas
nop
adc
int3
push
out
js
xchg
cmpl
out
adc
inc
mov
push
rcl
vmwrite
mov
lret
sbb
xor
sahf
xchg
jnp
add
outsb
lret
sti
pop
sub
lcall
aam
or
jo
lcall
and
js
int3
dec
movsl
cmpsl
les
test
mov
xor
pop
fs
adc
sbb
add
cmp
sbb
inc
mov
push
shll
bound
xor
mov
pusha
nop
jg
pop
popf
inc
add
pop
jge
aad
push
lahf
pushl
lret
mov
pop
cmp
jge
mov
jmp
mov
or
test
outsl
dec
repnz
lret
fisubs
xchg
pushf
dec
ja
stc
test
add
sbb
movsl
jge
or
sahf
pop
pop
push
cmp
mov
mov
daa
xchg
push
xlat
ljmp
inc
dec
sub
cmp
pop
dec
mov
cmc
mov
lret
mov
add
sahf
jb
fdivrs
sbb
leave
lahf
repnz
jp
pop
cli
xchg
jae
adc
out
push
mov
add
jle
inc
test
pusha
ss
movsl
pop
jns
cmpsb
in
clc
repnz
aas
int3
add
cld
imul
jg
popf
lods
push
sbb
push
shll
mov
sarl
push
out
lods
sbb
loop
jg
and
push
xlat
aad
mov
mov
cmp
cmp
mov
xor
jno
mov
or
push
cli
pop
stos
jbe
gs
je
push
dec
sub
lret
adc
popf
je
icebp
and
int
icebp
inc
ja
xor
mov
cs
inc
in
sub
aas
ja
or
xchg
mov
out
push
dec
movl
fisubrs
loop
push
insb
pop
xchg
int
test
xchg
add
cmp
sbb
les
add
jo
add
dec
cmpsb
xchg
cwtl
outsb
mov
popa
or
ljmp
jbe
pop
jge
xchg
outsb
movsb
dec
mov
xor
xor
movsl
pop
lods
sbb
pextrw
test
arpl
xchg
lret
adc
or
nop
insl
imul
mov
push
sbb
mov
pop
pop
lods
repnz
xchg
test
sti
pop
dec
jno
lods
xchg
dec
lret
outsl
mov
xchg
lock
dec
xlat
test
shld
into
sbb
cmp
cmp
in
xor
cwtl
or
in
mov
js
jo
fcmovnu
jl
addr16
pop
mov
in
cltd
fisttpll
cltd
test
fwait
mov
outsl
adc
xchg
ja
out
mov
pop
std
lods
adc
add
lahf
pop
sbb
xor
cltd
lods
dec
mov
push
lods
loopne
mov
cli
sub
mov
pushf
int
movsb
or
xchg
les
mov
daa
out
dec
pushl
and
out
push
xchg
cltd
popf
sbb
sub
mov
scas
or
jmp
data16
or
mov
fildll
loopne
into
jle
loop
or
xor
or
repnz
pop
fs
and
mov
loope
xlat
mov
sbb
rorl
in
mov
sbb
lds
jno
sbb
mov
fbld
pop
out
jmp
test
pusha
mov
call
dec
adc
ret
mov
pushf
rcrb
cmp
mov
insb
mov
clc
pop
bound
incl
or
mov
jno
in
ds
sbb
dec
ja
xor
sbb
xchg
fisttpl
jle
inc
cmpl
test
and
cli
repz
mov
pop
xchg
push
aas
inc
mov
mov
mov
je
cmp
fsubr
pop
inc
roll
mov
jnp
out
push
sub
pop
dec
movsb
mov
mov
cmp
mov
jns
xchg
mov
xchg
xchg
pop
xor
das
jno
push
xor
sbb
dec
mov
imul
fsubr
les
arpl
fidivrs
inc
sbb
inc
popa
inc
push
int3
cmp
dec
jl
sbb
mov
testb
into
push
int3
lods
mov
dec
mov
jecxz
in
into
mov
cmp
and
add
js
loop
mov
test
out
adc
push
inc
test
stos
in
cmpsl
filds
jns
sub
sub
stc
popf
pop
int3
sub
clc
sub
out
negb
loope
jbe
negb
pop
push
je
sub
lock
sbb
cmpsl
adc
cld
into
xor
adc
mov
popf
repz
cmp
int3
aad
cmpl
in
mov
ja
into
pop
push
mov
mov
sbb
pop
js
hlt
pop
jge
cmpsl
popa
xchg
clc
inc
jns
shrl
xchg
xor
int
std
adc
xchg
insl
fstpt
push
lret
mov
shll
stos
jg
push
mov
dec
mov
push
inc
push
outsl
addl
jge
test
sbbl
insb
mov
sub
or
data16
loopne
scas
dec
std
pop
mov
mov
push
push
mov
ds
inc
jmp
loop
pushf
adc
mov
jge
inc
jno
jae
arpl
das
cmp
jbe
push
xchg
dec
mov
jo
aas
cmp
adc
push
pop
dec
dec
outsb
xlat
cli
push
insb
imul
ret
mov
into
mov
lea
push
xchg
cs
stc
out
popa
shrl
mov
out
sub
jns
ja
push
dec
mov
xor
mov
stos
aad
mov
sahf
jl
cmc
push
loope
out
enter
mov
data16
add
push
jp
in
pop
sbb
xor
jno
call
out
mov
cmp
scas
lock
ja
fwait
imul
daa
sbbl
in
pop
insb
push
push
lahf
xchg
test
test
adc
push
jo
jbe
jno
cltd
mov
sti
in
push
mov
lret
pop
jmp
sub
jae
cli
fcompl
jno
test
pushf
adc
lcall
enter
out
retw
mov
fdivrs
and
fisttpll
push
je
loope
push
mov
aam
insl
push
jb
add
in
cmp
adc
pushf
sub
icebp
imul
mov
leave
scas
jmp
xor
inc
shlb
mov
jns
mov
adc
setg
pop
cmp
ja
mov
test
sbb
sahf
int3
cmp
and
mov
sbb
or
mov
adc
insb
dec
aas
aas
bound
mov
push
call
test
icebp
subb
xchg
xor
les
movsb
gs
xor
mov
xor
inc
shlb
jl
and
in
adc
sub
xchg
pop
int3
movsb
shrl
call
das
lock
inc
jmp
rolb
shl
inc
xchg
ja
andl
out
jmp
add
popl
hlt
and
xchg
xor
mov
inc
push
scas
push
mov
xchg
cmpsl
out
sbb
add
or
aas
push
cld
cmp
ret
in
loope
adc
mov
stc
int
jae
shll
out
filds
hlt
xchg
test
sbb
cmpsl
mov
lock
pop
ds
out
daa
jmp
popa
jmp
pop
sub
mov
inc
inc
cmpsl
mov
imul
int
and
or
lds
loopne
ret
cmp
xor
mov
xchg
push
daa
lret
adc
jo
jb
jg
dec
cmp
dec
test
push
inc
mov
add
mov
fdivrp
into
es
lods
and
xchg
sbb
jp
shll
mov
sarb
int3
push
jecxz
xor
inc
cld
jmp
mov
mov
shl
dec
and
hlt
out
imul
xchg
std
fiaddl
scas
mov
or
adc
dec
fsubrp
pop
subb
mov
cmpsb
mov
mov
mov
inc
sbb
stos
stos
sub
dec
ret
int3
or
xorb
mov
jb
jae
fists
aaa
mov
adc
mov
xchg
cmp
addb
pop
ret
adc
or
outsb
ljmp
jb
jl
loop
or
inc
pop
ret
cs
dec
callw
loope
cmp
mov
mov
jg
and
xor
and
push
fldenv
cmp
cmc
rcrb
adc
mov
test
push
sbb
fdivl
dec
jo
cmp
popa
mov
jae
iret
mov
stos
jb
xchg
fidivrs
insl
pop
stos
fildl
and
xchg
inc
imul
sub
mov
cmp
fwait
mov
in
in
ss
lea
jnp
sbb
adc
mov
and
cmpsl
mov
cs
jle
lcall
lcall
stc
shlb
ficompl
mov
sar
mov
aad
jmp
sarb
inc
out
rolb
loopne
sub
fcmove
aad
outsb
faddl
insl
das
xor
clc
cs
xchg
dec
out
test
stc
int3
or
or
pop
das
inc
pusha
mov
jnp
push
adc
or
mov
fisubrs
repnz
mov
jle
subb
in
push
arpl
repz
mov
xlat
jno
jnp
jns
lahf
add
scas
in
sub
pushf
cmp
xchg
mov
inc
add
cmp
jb
or
mov
mov
stos
xor
adc
jae
jp
je
jp
outsb
sbb
les
adc
flds
ja
jecxz
sub
and
jle
fstps
aas
fildl
mov
enter
mov
sub
rorl
ret
stc
pop
lock
xor
icebp
je
xchg
cwtl
pop
add
icebp
jl
adc
or
cwtl
pop
test
and
pop
inc
out
push
xlat
arpl
fwait
movb
jecxz
sbb
mov
add
add
mov
dec
push
repz
sar
call
push
iret
jno
mov
add
inc
mov
mov
push
dec
iret
xchg
pop
lret
cmp
incl
jmp
dec
mov
jne
lret
scas
ss
out
inc
fwait
aas
jecxz
pop
scas
rcrl
icebp
jl
fdivs
leave
inc
cmp
pop
jns
stos
addl
sbb
ja
mov
inc
push
sub
repz
pop
cmovbe
or
stc
push
cli
rcll
sbb
push
movsb
clc
stos
cmp
mov
icebp
dec
jo
adc
or
push
out
js,pt
dec
mov
xor
data16
cmp
mov
cli
push
out
sub
lret
mov
movsl
insb
int3
pop
push
xchg
cmp
xor
les
mov
pop
frstor
pop
sbb
shr
scas
lds
pop
mov
xor
imul
fists
jns
inc
sub
push
cmc
frstor
xor
repnz
cli
enter
jge
jmp
and
mov
js
or
js
and
rdtsc
mov
in
outsb
scas
js
leave
fcmovnbe
inc
fwait
xchg
outsb
mov
cmp
call
mov
fstps
mov
cmp
std
cmp
in
repz
cs
jnp
mov
jbe
js
xchg
xor
push
or
sub
dec
bound
xchg
lods
xchg
push
shlb
fbld
les
jb
mov
dec
iret
mov
pop
cmp
push
pop
add
testb
jne
add
stos
out
or
add
iret
fisubrs
inc
sbb
bndstx
xchg
loope
out
addr16
xchg
jb
mov
scas
jmp
imul
jmp
decb
jle
sub
dec
jmp
or
mov
xor
push
out
inc
lock
mov
cmp
mov
repnz
inc
mov
cmp
mov
or
cwtl
out
andl
xlat
sahf
or
in
sbb
loop
aam
cmp
dec
xor
loope
loopne
sub
testl
out
jmp
inc
mov
ljmp
add
push
xor
push
lsl
xlat
push
aas
dec
add
sub
fidivrs
ficoms
jecxz
jle
sub
std
lea
aas
push
testl
sbb
mov
mov
arpl
in
nop
in
adc
mov
shll
cmpsb
mov
inc
enter
jecxz
xor
inc
pop
add
dec
cmpsl
mov
bound
push
adc
jnp
icebp
rclb
sub
mov
popa
and
pop
in
jno
and
or
ljmp
push
nop
insb
fistpll
lods
ds
add
daa
or
mov
movsl
sbb
int3
and
push
dec
xorl
stos
hlt
xchg
rclb
pop
jns
in
or
dec
xor
jb
fcmovne
mov
xor
cmp
or
pop
push
scas
mov
mov
sbb
cmpsb
add
loopne
nop
sbb
test
arpl
xchg
sub
xor
lods
add
fdivr
and
stos
mov
aas
sti
mov
pop
pop
js
lret
adc
mov
add
push
in
loope
push
cmp
cld
fists
icebp
jp
sahf
iret
sub
mov
jbe
subb
jae
sbb
incl
inc
inc
fst
outsb
xorl
call
push
adc
adc
inc
lods
mov
pop
jmp
sub
lods
mov
clc
fisubl
cmc
mov
sub
or
jns
and
jmp
scas
pop
std
dec
or
push
loopne
add
shll
sub
leave
xchg
push
inc
sbb
fldt
into
or
jne
iret
repz
fsubr
out
in
ja
sti
jo
int3
shlb
jnp
and
or
ljmp
and
push
jnp
pop
insb
fwait
cmp
xchg
mov
or
pusha
mov
or
in
mov
push
xchg
fdivrl
mov
xchg
jae
pop
mov
inc
pop
add
cli
into
mov
gs
inc
jge
jne
test
outsb
stc
push
fnstcw
pop
outsl
mov
movsb
mov
adc
aaa
out
add
xor
xchg
cmc
repz
stos
jmp
xor
hlt
pop
js
xlat
mov
pop
fs
xor
leave
mov
subl
pop
int
mov
aam
or
or
mov
sti
cmp
or
xchg
inc
aas
and
cmc
mov
xchg
fists
insl
push
push
repnz
out
sbb
or
int3
sub
mov
inc
shll
int
pop
lcall
icebp
dec
and
adc
push
push
mov
jmp
adc
stc
push
insl
xchg
or
push
mov
xchg
out
test
shrb
out
js
xchg
or
lock
stc
mov
mov
int
ret
push
sub
sbb
movsb
mov
and
pusha
mov
push
arpl
cs
lds
cli
mov
test
dec
cmp
dec
aas
mov
dec
sub
sub
inc
push
pop
add
cli
or
inc
negb
sub
xorb
dec
stc
push
frndint
fistl
notb
arpl
push
sub
jnp
mov
sahf
push
push
neg
mov
sbb
out
mov
loopne
out
sub
je
pop
pop
mov
lea
adc
test
dec
cmp
repnz
out
lahf
mov
sub
nop
lret
fstl
mov
and
inc
enter
cli
push
je
push
inc
lods
pop
and
imul
inc
adc
aad
inc
adcb
jge
inc
mov
test
inc
je
in
sbb
xor
stc
dec
outsb
aad
or
stos
xor
in
popa
push
adc
aaa
sahf
inc
pop
xchg
add
mov
stc
popf
push
xor
pushf
aam
fstl
adc
or
adc
dec
stos
pop
inc
pop
jnp
int3
jne
jg
push
movsb
jl,pt
cmc
stos
mov
repnz
push
int
xchg
sub
sub
add
loop
mov
cmp
xchg
sbb
inc
in
ljmp
lods
call
sub
mull
aaa
sbbb
and
les
dec
sub
fdiv
lret
xchg
sahf
xor
xchg
aam
arpl
add
pop
stc
es
dec
xor
inc
in
pushl
mov
and
lret
scas
mov
push
fidivl
ss
or
adc
mov
out
jmp
loopne
out
push
roll
adc
pop
inc
pop
jp
push
data16
pop
mov
shlb
popf
pop
dec
mov
es
sbb
adc
adc
out
pop
lea
push
sbb
inc
into
cmp
xor
xor
add
mov
sti
repz
cmpsb
jno
jo
stos
fisubs
dec
js
stc
jp
or
lea
insb
sbb
int3
je
jmp
adc
adc
leave
cmc
dec
cmp
mov
jne
insl
fstps
icebp
lret
inc
mov
sub
mov
push
cmc
inc
mov
sti
or
push
sub
inc
rolb
mov
pop
out
mov
pop
jne
push
pop
inc
jb
rclb
add
pop
rolb
orb
bound
popa
out
push
push
jnp
repnz
pop
pop
sub
pop
cmp
pusha
daa
mov
cmovns
push
ljmp
movsb
lods
je
xchg
jle
adc
icebp
or
cmp
push
xor
outsb
add
or
outsl
cld
and
adc
jb
xor
sti
add
outsb
shlb
test
mov
lea
lock
in
adc
movsb
add
shll
loop
pop
sub
mov
movsb
loop
jmp
fisttpll
jmp
jnp
cmpsb
add
dec
je
adc
xchg
mov
xchg
in
scas
or
xor
push
je
daa
or
lcall
out
pop
push
or
dec
enter
mov
out
sub
adc
in
addr16
stos
jbe
add
jg
sti
fadds
mov
nop
xorl
xchg
inc
dec
and
movl
cmpsl
into
cmp
adc
int3
sbb
sbb
test
xchg
xchg
cvtps2pd
popl
or
mov
push
xlat
aaa
ss
sub
fisubs
das
testl
lods
mov
cmp
sub
push
pusha
notb
popl
xor
xchg
mov
stos
test
subl
and
lahf
int
adc
push
jg
mov
jbe
js
push
xchg
cmp
fists
mov
test
bound
mov
pop
cmp
in
std
test
sub
nop
push
push
push
movsl
roll
sub
jmp
insl
push
mov
mov
leave
and
pop
aam
shlb
cmp
xchg
pop
sti
adc
xchg
out
in
mov
cmc
inc
push
mov
jge
mov
pop
pusha
popa
in
lock
push
or
mov
outsl
add
mov
movsb
data16
in
lea
idivl
push
imul
ret
cli
pop
xchg
dec
test
sub
add
fldcw
aaa
jo
mov
fdivrl
arpl
into
cmpsl
mull
jp
ret
pushf
pushw
mov
enter
cmp
aas
sbb
mul
mov
in
cld
call
push
into
subl
pop
bswap
aad
jmp
push
or
xor
dec
ret
mov
subl
aam
ljmp
jle
jns
fdivr
dec
movsb
jecxz
lret
les
jecxz
and
insl
push
cmc
sahf
aad
jl
je
add
inc
loopne
icebp
jnp
or
or
and
icebp
jne
es
push
loop
xchg
jb
and
aad
xchg
daa
fucomi
xchg
int
and
outsl
dec
inc
lock
pop
psllq
jecxz
pop
adc
das
adc
dec
or
xchg
std
sub
xchg
or
lock
mov
xchg
xor
xchg
jnp
scas
popf
mov
mov
and
bound
repnz
xor
lods
push
pop
mov
xchg
into
sbb
push
cmp
xchg
into
insl
sahf
lcall
test
jmp
popa
lds
jo
sub
push
aam
mov
pusha
dec
push
adc
pop
cltd
cltd
pop
pcmpgtb
pop
cmp
or
pop
fwait
test
js
push
pushf
jmp
in
jge
lds
rol
xchg
int
mov
push
cmp
add
inc
lahf
frstor
inc
inc
sbb
cmpsb
cmpsl
jb
mov
dec
call
ret
push
sbb
cmp
pop
adc
hlt
jg
mov
mov
xchg
popf
adc
div
mov
bnd
dec
jo
lods
adc
int
leave
dec
and
inc
repnz
lock
stc
movsl
inc
int
inc
lret
stc
jno
inc
js
nop
mov
and
pop
push
clc
shlb
pop
xor
movsl
stc
and
jl
adc
sti
out
mov
sub
xor
pop
mov
lods
and
scas
xchg
mov
out
jae
or
and
orl
jno
fsubl
ss
sbb
pop
lahf
mov
mov
jb
mov
jae
outsl
sub
jno
xor
pop
mov
jp
lods
jbe
xor
push
cltd
andb
adc
rcrb
in
fs
xchg
add
mov
jb
jmp
mov
mov
xlat
cmp
jp
je
movsb
in
dec
rcr
cs
pushf
aaa
pop
sbb
mov
lods
mov
imul
test
dec
rclb
jp
push
sbbb
sbbl
lahf
mov
out
sbb
or
mov
outsl
pop
xlat
repz
rclb
push
pop
into
subl
aam
pop
lods
cmp
and
xor
jns
ds
jbe
aam
rol
daa
mov
pop
mov
cli
adc
lods
pop
dec
xchg
int
xor
not
xchg
mov
cmpb
push
sbb
cmp
fsubrl
data16
dec
popf
xchg
sbb
jp
cmp
std
jb
inc
ret
ret
jne
mov
test
cmp
push
jge
lods
pop
arpl
ret
lret
jg
inc
pop
jl
lret
ja
hlt
dec
add
arpl
mov
ja
loope
jb
xor
lret
mov
icebp
pop
dec
scas
js
pop
mov
es
adc
outsl
mov
mov
js
jb
ss
inc
add
and
push
inc
xchg
enter
xor
pop
ret
add
stos
mov
or
or
or
std
ja
and
xchg
fcomps
pusha
xchg
mov
idivl
mov
popf
add
push
lret
inc
js
mov
and
inc
mov
pop
lds
test
stos
testl
cmp
into
add
xchg
in
lret
inc
jbe
jle
shlb
push
shlb
adc
sub
and
fldl
not
sbb
mov
and
mov
or
ret
outsb
push
add
jmp
negb
ja
jge
or
sub
filds
jno
inc
hlt
dec
adc
imul
jp
mov
sahf
xchg
andb
scas
add
or
mov
mov
mov
loope
xor
ror
cmp
adc
bound
push
scas
push
adc
jp
add
push
or
or
push
in
pop
mov
jno
push
icebp
insl
xor
addb
or
jae
stos
sub
stos
adc
imull
adc
push
mov
jl
sub
ss
shlb
lret
data16
sbb
xchg
xchg
push
test
mov
cmpsl
or
push
xor
push
adc
adc
out
mov
jb
pop
test
cmp
divb
sti
sbb
add
mov
jg
ror
cmp
fisttpll
movb
add
fildl
adc
sti
fcomip
sbb
fidivs
xchg
ret
jnp
pop
mulb
sub
dec
xchg
jnp
inc
jp
fisubs
test
enter
mov
and
and
loope
repz
out
gs
or
or
jmp
mov
and
cmc
aaa
repnz
push
xchg
xor
repnz
xchg
aad
fsts
loopne
ret
mov
int3
das
cld
cmc
clc
hlt
cmp
out
rcr
or
push
inc
fs
cli
push
mov
mov
push
popf
subl
in
in
aam
lahf
add
lret
mov
jl
mov
shlb
push
jp
nop
mov
bound
adc
inc
inc
movsb
sbb
lcall
cmp
stos
mov
inc
stc
es
jmp
bound
data16
test
dec
mov
notl
js
scas
andl
inc
push
cmp
push
mov
sbb
test
test
sub
int
and
aad
daa
push
inc
sti
or
int3
pop
insl
or
and
maskmovq
testl
or
sub
adc
mov
push
out
jp
and
sbb
jns
dec
lret
pop
and
and
and
xor
sbb
add
pop
fisubrs
lret
bound
xchg
pop
adcl
inc
aaa
and
notb
rcr
cmc
dec
int3
mov
popf
xor
loop
pop
js
jae
jl
inc
dec
inc
xchg
jnp
stos
sbb
out
jp
pusha
add
outsl
xor
cmp
xchg
sub
mov
movsl
sbb
lret
push
pop
fisttps
ss
xor
sbb
fnstsw
fldl
fsubrs
lret
adc
fistpll
into
lea
mov
outsb
pop
and
les
hlt
lret
mov
pop
mov
aam
ret
or
rcll
push
adc
ljmp
xlat
and
mov
mov
and
mov
pop
push
push
dec
jmp
adc
aad
sbb
mov
sub
mov
shrl
push
dec
scas
fdivrs
std
mov
in
xor
aad
cmp
xor
nop
sub
xlat
out
or
pop
filds
mov
cmp
sbb
in
stc
lret
jle
inc
repz
mov
test
test
mov
sub
lock
addb
push
adc
push
ret
push
imul
jge
dec
sbb
and
and
xchg
shrl
lds
daa
pop
xor
dec
popa
test
loope
cmc
in
dec
mov
pop
das
iret
std
ss
inc
cltd
iret
pop
and
pop
aam
popa
pop
inc
out
aaa
xchg
popf
shll
pop
adc
rorb
sahf
mov
jae
fs
sub
cmpsb
mov
aam
adc
push
xor
mov
and
fs
jp
sti
xlat
jge
fsubrs
insb
pop
cs
cli
mov
sbb
cltd
and
es
jmp
faddl
addr16
sahf
gs
cld
aam
push
repz
inc
enter
xor
lret
mov
fisttpll
push
out
mov
stc
ss
fcom
inc
xor
add
add
pop
adc
ret
pop
mov
pop
jns
sbb
out
cltd
or
jae
mov
push
pop
push
pop
mov
ror
mov
push
pop
cmp
jns
inc
lahf
mov
mov
dec
and
out
movsl
shrb
push
fidivs
push
ds
sub
dec
jmp
or
incl
inc
fcoml
inc
stc
and
leave
loope
addb
out
pop
movntq
mov
add
lds
gs
sbb
dec
mov
and
fbstp
lret
and
dec
je
sbb
mov
test
test
js
push
xchg
pushf
nop
adc
pop
and
movsl
sbb
into
jg
cmp
push
cmp
mov
mov
repnz
mov
testb
jbe
sub
das
mov
and
lea
mov
gs
mov
inc
in
jb
fldenv
sbb
cmp
lock
push
ficompl
or
jb
xlat
ficomps
add
fwait
push
jecxz
cmc
std
gs
stos
xchg
mov
imul
stc
sbb
popf
aas
xchg
adc
pop
negb
imul
cs
or
repnz
xlat
loope
and
jno
lea
mov
push
xchg
iret
push
outsl
int3
adc
sub
std
aaa
xor
lcall
jl
nop
push
dec
flds
sbb
scas
jp
sub
xor
dec
cmp
dec
sub
push
sti
cmpsl
jecxz
cmp
push
outsl
es
lret
cmp
iret
cmpsl
inc
sub
gs
aas
sub
mov
mov
jo
sbb
and
movsl
in
or
stos
nop
push
data16
mov
mov
inc
cli
fdiv
jle
dec
fdivs
xor
mov
dec
movsl
aaa
or
jb
sub
xor
add
fisubs
dec
mov
push
and
testl
filds
pop
in
scas
mov
adc
je
dec
les
add
repz
pop
pop
test
and
jns
lds
imul
adc
pushl
dec
cmpsl
mov
scas
xor
mov
sub
or
out
push
push
mov
or
aad
aam
divb
xor
xchg
loopne
xchg
notb
push
pop
sti
out
lods
cld
shrl
mov
mov
cmp
mov
push
jge
mov
in
nop
or
pop
pop
movsb
in
pop
mov
jg
int3
jne
pop
push
fldcw
xchg
mov
idiv
jb
xchg
call
or
jle
and
xor
sbb
pop
shll
lods
xchg
in
icebp
test
loop
push
jb
xchg
mov
mov
movsb
andps
push
out
hlt
js
aad
mov
andb
sbb
js
mov
enter
xor
mov
push
mov
in
add
pop
jge
xchg
fsts
push
es
mov
insl
add
in
sub
sbb
mov
dec
cld
shrl
or
cmc
fsts
pop
leave
pop
stos
pushf
repnz
aam
lret
mov
icebp
jb
mov
popf
pop
jnp
cmp
pop
inc
shl
popa
adc
and
cmpsb
rcll
push
push
jge
insl
pop
sar
sbb
mov
mov
add
mov
mov
xor
mov
cmp
int3
fildll
pop
test
clc
cmp
mov
decl
dec
or
lods
popa
rcl
adc
icebp
inc
sbb
aas
loop
andl
fstps
out
lret
rdtsc
adc
mov
in
es
dec
and
cmp
push
or
mov
ss
cmp
call
fsubr
stos
push
add
fcmovnbe
adc
mov
cmpsl
lea
xorb
in
lret
mov
gs
bnd
push
cmp
mov
mov
mov
jae
imul
mov
sbb
cld
or
aad
xchg
push
out
getsec
xchg
cli
mov
or
add
repz
aaa
or
rcrl
out
sbb
jmp
lret
pop
mov
and
inc
xchg
inc
stos
rolb
int
and
negb
pop
es
xchg
cli
xchg
sbb
inc
pop
hlt
mov
push
push
lds
aaa
out
cmp
cli
iret
out
push
inc
pop
daa
cmp
call
or
leave
inc
enter
adc
sub
insl
movsb
mov
fwait
xchg
cmpsb
sub
push
stc
clc
mov
and
adc
imulb
xlat
and
inc
jg
mov
scas
fldt
cs
and
add
int3
add
xlat
mov
or
mov
xchg
dec
les
push
shll
divl
insl
repz
out
jne
mov
mov
pop
sets
xor
repnz
popa
mov
pop
fsubrp
mov
xor
cmp
add
sub
push
pop
push
adc
nop
scas
fnstcw
jno
outsb
fcomi
cmp
mov
sub
ffreep
sbb
aad
or
ret
add
mov
out
out
xchg
daa
jo
or
shlb
fstl
mov
ffreep
loopne
mov
cmp
arpl
jbe
cmp
arpl
xor
xchg
pop
repz
addb
js
xchg
add
push
and
cltd
das
inc
and
dec
stc
lret
scas
mov
dec
push
lock
je
fiadds
pop
je
adc
mov
sub
int
mov
mov
mov
and
cmp
daa
xchg
inc
push
and
mov
fcoml
sti
xchg
mov
lea
adc
ret
mov
mov
add
sub
pop
test
loop
negb
dec
jecxz
out
xchg
xchg
mov
push
or
lock
push
lret
pop
pop
lahf
ja
mov
sub
inc
cli
filds
je
xchg
subl
stos
es
cmc
mov
loopne
add
ficomps
pop
dec
pop
sbb
subl
push
sbb
mov
adc
pop
push
sbb
stos
mov
inc
stos
cmp
enter
add
aam
fisubs
loop
adc
sarl
stos
pop
adc
cmp
ds
sub
cs
inc
lret
sbb
out
mov
mov
mov
push
sub
aam
add
and
add
mov
shl
adcl
xor
sti
inc
cmc
push
jns
push
lcall
mov
jecxz
stc
sub
jnp
mov
movsb
stc
popf
movsb
sbb
mov
mov
lcall
ja
stos
aaa
xchg
fldcw
pop
cld
out
push
mov
int3
clc
ficoml
fs
ret
in
jb
ret
sub
push
add
xchg
inc
cwtl
imul
shl
push
iret
sbb
clc
adc
arpl
pop
mov
pop
ja
dec
inc
push
cwtl
add
mov
in
push
xor
push
mov
mov
rorb
cmp
or
in
pop
cmp
sbb
scas
fildll
aaa
mov
popa
sbb
fldt
sti
push
loope
or
or
push
mov
push
test
in
movsl
push
xchg
sti
xchg
pcmpgtw
divl
insl
movsl
xor
push
shrl
cmp
pop
ret
fstp
mov
clc
jmp
fsts
xchg
push
aas
and
cli
je
cmp
les
sbb
popa
pop
shll
daa
jg
jae
sub
or
das
es
movsl
sub
inc
adc
addr16
add
test
int3
push
addr16
jb
push
jne
rorl
aaa
cwtl
jno
cwtl
iret
out
xor
inc
into
shlb
sbb
xlat
or
stc
out
lahf
cmp
pop
out
test
in
mov
and
iret
jno
push
sti
iret
jo
mov
fcoms
and
fistpl
in
dec
fldcw
jae
pop
xor
sbb
xchg
pop
mov
mov
jnp
pop
sub
ficoms
pop
nop
bound
es
jp
or
adc
add
dec
pop
in
popf
into
push
aam
jo
dec
jl
je
xlat
sub
lods
fildll
dec
xchg
jmp
mov
lret
and
fnstenv
jb
push
jns
out
test
fdivrs
cmp
cmp
and
xchg
sub
adc
add
movsb
daa
push
test
fcmovnb
les
cmp
fldl
push
sub
mov
pop
push
or
subl
adc
std
dec
xchg
outsb
xlat
jnp
in
stc
xchg
dec
out
loop
cmp
shlb
inc
jl
clc
insl
cwtl
outsb
jmp
push
in
into
push
inc
inc
add
cmpsb
test
sub
mov
or
sub
imul
repnz
test
xchg
inc
fsub
incb
outsb
adc
sub
scas
or
pusha
rcrb
repz
mov
in
imul
test
comiss
fwait
jmp
sub
daa
xchg
int
add
and
add
xchg
lcall
loopne
xor
pop
pop
push
ljmp
mov
ror
stc
ss
cmc
pop
out
pop
icebp
or
xchg
push
leave
int
cli
adc
add
mov
pop
xchg
mov
cmp
mov
cmc
je
mov
mov
ret
loope
fcompl
out
jge
push
mov
sahf
mov
push
fists
xchg
or
jp
lock
ret
mov
mov
adc
add
mov
cmpsl
scas
rcr
js
or
mov
cmp
fs
and
lock
test
push
cs
repz
cld
stos
scas
dec
mov
dec
jmp
add
and
push
nop
add
xor
nop
adc
bound
push
jbe
xchg
push
inc
and
sbb
dec
inc
out
popa
cmc
sbb
pop
pop
sub
fs
lods
das
ret
stos
into
mov
int
test
mov
jmp
shl
je
mov
popf
jmp
ss
adc
movsb
movsb
imul
and
sbb
popa
adc
ds
sahf
mov
push
test
xlat
in
add
jb
add
mov
push
leave
lods
mov
loopne
xchg
mov
lahf
jno
sbb
test
dec
adc
rcr
adc
and
xchg
cmpb
sti
gs
ljmp
lret
adc
add
push
inc
add
cmc
jle
fbstp
outsl
shl
imul
imul
inc
xchg
mov
mov
pop
pop
scas
xchg
lret
mov
mov
clc
jb
xchg
faddl
xlat
pop
sarl
lea
xor
sbbb
dec
jge
adc
sub
cmp
inc
fwait
pop
je
fldl
jl
stc
cmp
inc
push
xor
jecxz
mov
or
xor
scas
sarb
dec
pop
jecxz
lods
mov
push
xchg
jmp
sbb
mov
or
mov
mulb
push
fstpl
cmpsb
shll
fwait
push
inc
movsb
inc
add
dec
daa
push
mov
push
pop
or
fdivrs
hlt
dec
inc
bound
movsl
mov
jb
adc
inc
out
ret
sbb
cmp
cmc
scas
or
inc
xor
popf
adc
jge
push
pusha
pop
ja
add
pop
mov
test
lods
xchg
cld
scas
xor
cmp
cmpb
test
mov
push
hlt
cli
leave
add
cmp
movsl
lods
insb
stos
in
aas
add
sbb
fnstcw
adc
mov
fisttps
mov
xchg
xchg
imul
push
jmp
repz
shll
jp
mov
mov
jmp
push
aaa
cmp
push
or
aam
push
jmp
out
jp
fs
aad
mov
mov
inc
xchg
or
cmp
lds
pop
and
data16
ss
lea
std
movsb
scas
bound
loopne
das
mov
jnp
in
sbb
ret
imul
xchg
or
popf
cmp
outsl
mov
frstor
mov
push
cmp
mov
dec
rcrb
mov
push
adc
jne
lods
push
dec
insl
in
into
push
ret
test
push
and
lret
sbb
jmp
insl
push
adc
ljmp
mov
mov
cmp
cmp
add
in
mov
lahf
sub
adc
or
icebp
add
ss
fdivl
cmpsl
push
test
aas
in
adc
sbb
pop
popa
dec
xchg
xchg
stos
pop
fmull
mov
xchg
insl
sbb
inc
mov
or
pop
ss
sub
push
dec
lods
sbb
and
push
inc
xor
faddl
adc
ret
movsl
outsb
and
jo
out
lock
jmp
add
mov
mov
mov
stos
mov
or
movsl
jbe
repz
fsubrl
inc
in
jb
std
jns
inc
js
mov
sti
jae
jo
decb
dec
stos
dec
mov
mov
cmpsb
add
ja
sbb
mov
jmp
add
jmp
fnstenv
jecxz
lds
push
xchg
xor
add
jnp
roll
xorl
movsb
jns
pop
cmc
les
jp
push
cmp
cmp
jecxz
fdivrp
fwait
stos
mov
sarb
addr16
shlb
cld
xchg
shlb
mov
dec
mov
outsl
test
sub
gs
daa
mov
rorl
inc
lahf
subb
add
imull
aam
arpl
outsb
cmp
jle
mov
adcb
mov
mov
insl
lcall
and
xchg
push
cmp
repz
fiaddl
int
adc
insb
xchg
xchg
xchg
fwait
test
jne
addr16
cmp
push
adc
stos
aaa
fcoms
push
lea
mov
cmp
push
mov
or
fnstcw
add
daa
mov
mov
mov
jecxz
mov
subl
movsl
xchg
pop
lock
xor
adc
lret
inc
and
lds
sbb
jo
cwtl
push
data16
dec
cmp
cmp
scas
mov
cmp
pop
popf
dec
cmp
orb
inc
xchg
add
rcrl
insl
sub
jns
pop
sbb
pop
roll
shr
xchg
dec
out
pop
or
push
or
aam
unpckhps
in
mov
rep
sbb
in
cmp
push
add
cs
and
jno
je
add
stc
fmuls
es
inc
lahf
jo
mulb
jp
mov
xchg
sub
and
pushf
fwait
push
mov
xchg
push
push
enter
or
test
jnp
push
nop
stc
pop
pop
shrl
std
rcll
add
movsl
push
sub
push
or
jp
out
sbb
jns
inc
mov
push
lock
in
lock
xchg
sbb
cli
or
mov
xchg
jg
js
sahf
mov
push
pop
jno
in
shr
loope
inc
push
shl
movsl
sbb
pop
hlt
insl
lret
jb
aad
cmp
cmp
int
jnp
lea
outsb
adc
in
mov
sbb
jae
and
fsubp
dec
fcompl
push
mov
shrb
and
aas
int
dec
rorb
sbb
stos
addr16
and
cmpsl
movsb
out
mov
loope
popf
jle
cmp
notl
jo
adc
stos
sbb
sbb
jle
arpl
enter
inc
push
iret
insb
divl
jo
dec
adc
mov
gs
testl
jmp
xchg
gs
mov
dec
add
mov
std
sbb
popa
testl
pop
arpl
jmp
push
lahf
fdivrl
push
jl
mov
in
mov
clc
jl
inc
add
cli
clc
dec
popa
push
bound
adc
test
sbb
cmp
imul
outsb
out
arpl
push
aas
inc
sub
add
mov
lea
and
pop
cmc
dec
lods
cmp
cs
dec
xchg
scas
aas
push
sub
push
fsubrs
mov
dec
mov
sbb
or
inc
testb
dec
xor
jbe
mov
jnp
stos
push
imul
out
lea
cmp
mov
inc
dec
jmp
cs
sub
iret
cmc
jo
into
decb
or
cmpsl
sbb
inc
addr16
mov
xchg
xchg
push
mov
aaa
mov
adc
pop
lea
xchg
lods
pop
mov
adc
mov
imul
sahf
xchg
enter
pusha
in
jno
test
rorb
pop
jno
xchg
sbb
xor
pushf
jecxz
leave
add
enter
lret
dec
stos
pop
in
cwtl
je
adc
jge
adc
imul
jmp
je
js
pushf
mov
push
push
mov
push
test
pop
ficoms
imul
imul
inc
adcl
fistps
push
leave
test
out
add
pop
shrb
xchg
mov
sbb
mov
ret
adc
jae
cmp
jne
sub
imul
cltd
stos
aad
add
shrb
inc
inc
add
mov
fstpt
pop
cmc
or
out
jne
jge
bound
xchg
std
dec
xor
pushf
push
inc
mov
stc
arpl
pop
or
loop
xchg
jecxz
push
and
adc
xor
or
push
mov
xchg
es
pushf
sahf
test
and
xchg
call
in
in
dec
cs
cmp
ja
inc
jae
jno
sbb
mov
inc
aad
fbld
bound
iret
addr16
xor
dec
sub
dec
push
out
pop
mov
sub
xor
dec
and
lea
scas
popf
push
and
push
in
mov
xchg
icebp
out
xlat
test
xchg
js
sub
mov
std
cmp
andl
mov
jo
pop
adc
shll
mov
dec
mov
daa
imul
and
ss
or
insl
mov
push
push
or
push
pop
lahf
and
xor
ja
ss
cld
push
dec
or
aas
ljmp
fsubrs
mov
sahf
push
popf
in
sub
adc
int
inc
cmc
notb
daa
push
mov
lcall
jle
and
daa
js
inc
jge
je
aas
jns
call
cltd
mov
pusha
lods
mov
ss
lcall
add
sub
xor
ficoms
pop
insb
rorb
and
es
sbb
add
insb
frstor
jmp
adc
pusha
sbbl
icebp
adc
rol
xchg
lock
pop
push
pop
fstps
pop
lods
mov
adc
es
and
adcb
or
pop
add
icebp
sbb
add
push
mov
iret
or
sub
adcb
pusha
cmp
push
nop
idivl
sub
xchg
stc
ss
mov
pop
pop
jmp
sub
movsb
xchg
cmp
ja
in
push
mov
pop
lock
and
into
cmpsl
jae
cli
cmp
pop
ja
pop
pop
out
call
dec
popf
jo
mov
mov
rclb
fcoml
push
jns
out
mov
sub
sbb
pop
mov
scas
sub
push
leave
jmp
pop
push
push
jno
adc
cs
in
mov
push
stos
sahf
mov
clc
mov
add
or
cltd
mov
addl
outsl
sbb
fadd
mov
push
in
sbb
xor
lea
inc
pop
jno
mov
jno
test
push
xchg
or
cmp
mov
idiv
mov
in
xor
dec
pusha
fcoms
out
cltd
fisubl
int
adc
add
lods
out
int
js
and
pop
jl
adc
in
pushf
hlt
sub
jnp
aam
sbb
test
jbe
or
sarl
pop
xchg
lock
mov
xchg
cmp
sbb
add
iret
shll
aaa
aas
ret
mov
test
inc
mov
psllw
jno
lds
stos
push
inc
push
loop
cmpsl
pop
push
mov
jl
ss
cltd
sub
xor
mov
xchg
dec
pop
ficomps
add
xor
pop
out
jmp
pop
stc
mov
lds
add
outsl
adc
in
into
scas
frstor
dec
leave
dec
or
xor
mov
arpl
inc
xchg
dec
fstpt
cmc
cmp
pop
inc
ds
pop
outsl
dec
sbb
mov
ja
or
data16
cwtl
mov
dec
cmp
xchg
mov
test
sbb
mov
adc
vcvtpd2psx
aad
mov
mov
andl
and
add
or
lret
push
or
push
sbb
push
test
leave
lret
pop
sub
xor
xchg
test
lods
lahf
push
scas
icebp
mov
push
fwait
mov
inc
adc
xchg
jecxz
fsubs
fld
push
push
xor
sub
add
jnp
pushf
outsl
cmp
inc
mov
inc
arpl
loop
add
sarb
and
or
pop
xor
mov
fldcw
cwtl
imul
cmp
add
fcom
lret
sub
push
mov
lock
popf
xor
sbb
push
insb
xchg
js
nop
scas
lods
repz
js
mov
push
dec
inc
xor
push
add
or
lret
jno
pusha
loope
xchg
add
pushf
mov
xchg
push
cli
or
inc
mov
test
pop
jns
pop
es
je
pop
ret
inc
and
fisubl
jge
out
mov
aad
mov
cmp
xchg
aas
in
sub
mov
mov
fcomp
mov
mov
inc
lahf
ss
jbe
movb
mov
aad
or
sti
cld
adc
dec
rcll
and
jb
divl
mov
jge
inc
stc
dec
xor
cmp
jge
rorl
mov
ret
aas
push
pcmpgtb
and
in
stos
cmp
mull
mov
out
ljmp
addr16
sbb
adc
fisubrs
addb
sub
imul
lock
pop
imul
adc
lahf
pop
mov
add
mov
mov
xlat
xor
outsb
or
ds
cmp
sbb
xor
lret
int
cmc
sub
sbb
mov
sub
out
adc
jg
pop
insb
sbb
mov
inc
incb
stos
push
aaa
insl
ljmp
outsb
je
sti
leave
xchg
lret
jae
and
cmp
add
nop
fidivrs
push
loope
ljmp
mulb
or
mov
and
xlat
sar
in
pushf
stos
fmull
test
out
pop
rcr
jg
mov
loop
cltd
cltd
dec
ljmp
add
repz
mov
add
repz
ljmp
call
inc
or
adc
mov
std
dec
dec
test
dec
jge
mov
xor
enter
das
pop
or
lods
mov
and
repnz
les
xchg
jbe
cmpsl
jge,pn
jmp
inc
adcb
mov
pop
or
or
popa
jg
jge
add
push
mov
mov
mov
inc
and
scas
push
enter
scas
nop
sti
jns
pop
pop
sub
insb
pusha
test
xchg
inc
pop
sbb
cmp
jnp
xchg
inc
sub
xor
ret
jecxz
in
xchg
dec
ja
xor
pop
dec
dec
loop
lret
std
mov
push
insl
sub
pop
xchg
cwtl
movsl
and
jp
fs
add
lret
aaa
and
lahf
and
dec
jne
jno
dec
outsl
inc
fisttpll
xor
pop
ds
movsl
lret
sbb
fiaddl
sbb
dec
shlb
push
xchg
pop
addr16
popf
nop
ret
jb
fs
xchg
in
aaa
inc
sbb
stos
lock
pop
hlt
mov
jl
aam
les
dec
sti
sub
int
jge
sarb
jbe
or
sbb
mov
imul
int3
inc
jb
or
push
pmaddwd
movsb
mov
adc
out
jg
mov
ljmp
in
pop
addr16
imulb
js
add
xlat
lcall
jp
cmpsb
aaa
in
sbb
mov
sub
xchg
bound
pop
mov
xchg
inc
sbb
cli
pushf
fisubrs
into
fstpl
shl
es
and
pushf
sub
mov
ja
fbld
sbb
ja
nop
std
dec
cli
cld
lret
push
jno
xchg
jbe
and
clc
jge
enter
and
push
dec
cmp
repnz
in
add
cmc
cmpsl
fstpl
mov
cmc
inc
dec
notb
xor
bswap
pushf
ret
or
xor
mov
negl
adc
mov
sbb
addl
xchg
push
ret
and
xchg
add
push
sub
mov
int
cltd
insl
or
fildl
aaa
xchg
int3
aad
push
in
rcrl
mov
mov
out
jae
jge
pop
enter
add
or
int
imul
push
pop
outsb
fnstcw
js
pop
in
lock
cmpsl
push
in
mov
icebp
and
pop
mull
aaa
and
add
movl
sbb
inc
mov
cld
jl
xlat
outsl
sbb
test
mov
mov
push
iret
pop
xchg
sub
mov
mov
or
add
or
icebp
shlb
test
mov
es
in
mov
cmpsb
pop
cmp
mov
mov
iret
sahf
dec
loop
or
jp
repz
pop
inc
xchg
mov
jecxz
aad
rdmsr
push
and
in
insb
inc
xor
add
sbb
das
xchg
xchg
enter
sbb
test
inc
mov
jge
arpl
lds
mov
lcall
adcl
cld
xchg
rolb
mov
ss
int
and
lea
fisubl
xor
shlb
popa
iret
popa
and
mov
bound
ljmp
popf
sub
repnz
gs
xchg
cmp
stos
sub
mov
daa
lahf
call
jmp
mov
enter
sbb
xchg
pop
sti
imul
stos
fs
pop
or
in
add
hlt
je
mov
stos
xchg
lcall
dec
sbb
mov
sub
xor
lret
lods
out
stc
push
cmp
sbb
fisubs
dec
movsb
xchg
cli
and
cmpl
mov
jl
dec
popf
dec
repnz
leave
sbb
add
les
nop
jge
sahf
repz
mov
int
adc
or
fsubl
call
inc
cwtl
push
jp
cmc
lret
dec
cmpsb
ret
ja
xchg
adc
loopne
sarl
les
ss
add
leave
in
xor
pop
rolb
push
jmp
pop
arpl
jns
add
push
mov
lahf
sub
loop
js
sbb
nop
movb
add
or
mov
adc
add
or
mov
pop
arpl
cmp
cmp
jg
mov
leave
adc
mov
xchg
testb
aam
ja
sbb
incl
dec
dec
aaa
cwtl
cmp
pop
pop
sbb
push
sub
xor
jne
xchg
sub
sub
add
push
pusha
cli
in
test
fisttpl
inc
sub
pop
and
cmp
stos
pop
cmp
daa
aas
adc
or
divl
das
pop
fildl
imulb
dec
mov
xor
lds
add
sbbb
movl
nop
jge
lahf
push
mov
jno
cmp
dec
in
and
rcrl
iret
in
test
jne
es
or
push
or
or
jno
js
push
push
sub
add
fcompl
lds
sbb
adc
gs
dec
add
mov
xchg
fildl
icebp
add
lds
in
test
stos
aaa
xor
pop
inc
xor
daa
xchg
push
mov
pop
add
lods
out
test
icebp
ficoms
sub
das
sbb
xchg
test
sbb
jae
inc
lcall
mov
pop
xchg
out
adc
sbb
mov
stc
mov
pop
add
sti
out
jg
addr16
push
push
iret
jp
sti
andb
xchg
xor
jo
hlt
cmc
xchg
jno
jecxz
ficomps
add
rorb
pop
cmp
in
mov
jnp
mov
dec
pop
push
rcll
jl
in
cmp
aam
scas
mov
or
mov
outsl
bound
gs
cmpl
shrl
add
xorb
into
ljmp
test
mov
xor
sub
pop
loopne
inc
std
pusha
mov
call
add
cmp
mov
lcall
ret
lock
pop
jp
mov
cmp
out
mov
xchg
or
jns
mov
test
jo
sub
js
push
jmp
out
dec
test
sub
add
xchg
dec
adc
rcrl
pop
test
dec
lea
stos
xor
mov
stc
push
cmpsl
push
shlb
jo
in
sub
mov
bound
imul
sbb
mov
sub
nop
loopne
pushf
stos
aas
test
pusha
jb
pop
sub
mov
cli
into
dec
sub
sbb
lret
push
pop
inc
test
fsubrl
xchg
repz
dec
leave
aaa
xchg
inc
sbb
xchg
fcompl
pop
add
cli
lahf
mov
push
mov
mov
pop
pop
pop
mov
repz
sub
jo
je
stos
fdivrs
mov
fsts
inc
sbb
mov
mov
arpl
or
pop
mov
push
out
gs
arpl
push
or
dec
push
dec
sub
mov
lret
xchg
inc
mov
sahf
mov
xchg
dec
inc
cmpsl
imul
movsb
pop
pop
testl
fildll
sahf
jg
inc
ret
mov
jnp
xor
in
popf
xchg
fistl
sub
je
cwtl
divl
rcll
adcl
repz
or
mov
lret
sbb
mov
jno
ss
sti
jp
aam
out
jge
movsb
jnp
or
popa
inc
add
cmp
sarl
pop
fistpl
cli
subb
cmpsb
mov
data16
insl
mov
dec
enter
fs
movsl
cmp
xor
or
inc
bound
jno
and
cwtl
hlt
lcall
pop
or
mov
adc
cmpsl
cmp
jae
shr
push
iret
ljmp
push
mov
int3
inc
fstpl
mov
jle
std
jae
pop
fsubrl
fisttpl
inc
mov
test
inc
jbe
test
mov
pusha
mov
fwait
xchg
pop
jne
loope
rcll
inc
mov
push
xchg
imul
jmp
ja
inc
jnp
lock
inc
jbe
xchg
ljmp
mov
lret
mov
loop
movsb
jecxz
sub
sub
mov
lret
decb
cmp
mov
inc
jns
inc
nop
xchg
addl
push
out
push
mov
inc
stos
adc
mov
in
inc
mov
push
in
arpl
mov
add
xor
pop
pop
pop
ds
or
mov
mov
cmpsl
dec
jnp
or
orl
jle
scas
pop
fmuls
adc
clc
dec
into
leave
xchg
out
sub
out
xor
fwait
or
mov
rorb
inc
fidivl
xchg
pop
push
mov
xchg
inc
mov
fwait
add
aam
enter
hlt
xchg
vpsubq
or
mov
les
mov
out
inc
cmp
mov
rolb
cmpsb
ljmp
mov
inc
dec
jmp
and
or
fs
pushf
filds
or
nop
mov
cmpsl
sbb
mov
jl
outsl
movsb
mov
jb
or
paddsb
dec
fldt
fsubr
outsl
pop
add
xchg
cmpsb
pop
pushf
or
cmp
push
mov
mov
jno
out
lds
out
fwait
adc
jmp
add
mov
mulb
in
ret
ret
mov
or
cltd
push
dec
sbb
or
sub
xchg
test
xchg
sbb
and
lret
pop
les
cwtl
add
jge
stos
add
test
fdivl
cli
out
push
inc
lcall
or
lret
fwait
push
inc
outsb
jns
subb
ja
scas
mov
ret
xor
mov
shrb
je
jge
mov
cs
cmc
test
ss
stos
push
loop
stos
mov
leave
out
cs
cmp
leave
dec
mov
lds
jb
in
fldcw
inc
cmp
fisttpll
mov
int3
or
or
or
mov
push
xchg
mov
or
sbbb
xchg
jae
pop
leave
inc
inc
mov
pop
push
vorps
adc
add
repz
arpl
loopne
test
xchg
or
add
xor
add
add
push
scas
insl
aas
inc
or
mov
aas
push
cwtl
sti
mov
loope
aad
mov
adc
stc
mov
jo
lods
sub
jb
repnz
adc
jp
sub
jo
lcall
ljmp
xchg
inc
pop
mov
cli
sahf
cmp
sub
dec
mov
push
sbb
mov
dec
out
push
addl
push
idivl
fistpll
popa
movsb
push
add
xor
fistpl
imul
adc
mov
mov
out
cld
lods
push
hlt
pushf
inc
ss
dec
daa
xor
lret
jge
hlt
ss
lea
insl
jecxz
jne
inc
mov
mov
lods
cmc
jecxz
shrb
je
cs
cmpsl
std
sub
jne
mov
push
jb
lods
cmpsb
jmp
mov
ret
inc
or
gs
call
or
xchg
fsubrs
ja
push
add
pop
lds
popf
cwtl
out
into
ljmp
insl
in
push
push
xchg
and
ss
adc
inc
aaa
mov
jge
dec
add
mov
add
dec
pop
call
out
les
aad
mov
or
outsl
sub
cmpsb
jg
mov
or
push
insb
enter
mov
enter
lods
jae
xchg
jl
sti
ja
inc
adc
jle
jl
push
add
sbb
int
rclb
push
bound
or
je
sbb
add
mov
lea
lock
into
mov
ret
sahf
jmp
and
cwtl
inc
jne
push
pop
mov
out
cmp
ds
jle
mov
inc
dec
mov
sub
push
aam
mov
hlt
inc
ss
mov
mov
cmp
mov
cwtl
jno
aaa
es
ljmp
push
std
xor
push
addl
fwait
pushf
imul
and
mov
std
pop
arpl
stos
scas
pop
jno
dec
mov
leave
cmp
jg
push
setae
mov
sub
arpl
jge
dec
push
mov
shlb
lret
or
cld
lods
jnp
dec
loope
sub
inc
inc
sub
adc
int3
aas
mov
and
adc
push
cmp
adc
xchg
push
push
mov
xchg
in
adc
ja
or
mov
inc
popf
push
xchg
out
mov
das
xchg
mov
mov
xor
sub
negl
cmp
cs
ret
mov
lahf
ret
cli
loop
cmpsl
dec
jae
shrl
subb
and
cli
repnz
stos
jne
ret
fistps
inc
pop
inc
push
inc
decb
aad
push
push
or
clc
les
jo
add
jge
push
xchg
inc
inc
clc
jns
scas
outsl
or
incl
lods
dec
xchg
or
xchg
jge
jbe
loopne
mov
add
mov
test
mov
loop
and
mov
insb
test
xor
push
add
push
popa
or
xchg
in
mov
lcall
sbb
mull
jnp
divl
arpl
mov
mov
sub
popf
fcmovbe
add
adc
add
mov
mov
pusha
fimuls
mov
adc
inc
xchg
shlb
out
dec
test
test
mov
aaa
sub
sbb
aaa
ret
push
adc
imul
sub
sbb
mov
cmp
outsb
pop
adc
je
inc
jle
push
xchg
mov
inc
ljmp
cmpsb
in
mov
mov
sti
xchg
int
popa
and
mov
inc
mov
pop
jmp
sbb
lods
insb
test
pop
mov
mov
lods
sbb
pop
lds
push
je
in
not
inc
jp
push
andl
or
mov
testl
cmp
sbb
movsl
inc
mov
fidivl
ss
mov
addr16
in
sbb
push
lret
mov
fwait
pop
lock
push
jl
into
sub
pop
mov
xchg
xor
mov
sub
inc
movsl
push
sub
xor
inc
xor
inc
fcoms
inc
inc
in
data16
adc
out
cld
stos
jmp
jae
push
xchg
mov
push
mov
xchg
movsl
adc
loope
add
ret
cmp
inc
mov
cltd
sbb
xchg
xchg
push
push
xor
cmp
and
mov
mov
fstl
or
jle
dec
dec
out
push
out
sti
and
cli
std
sbb
mov
adc
or
push
xchg
nop
rclb
imul
mov
clc
pusha
sbb
int
add
les
lods
das
or
test
push
push
out
xchg
in
clc
cwtl
fs
and
sti
pop
sub
lods
scas
xor
mov
mov
aad
dec
push
sbb
fsubrs
or
mov
pop
scas
jno
mov
push
bound
repnz
ss
arpl
ret
mov
push
mov
mov
enter
sbb
add
stc
and
add
add
pop
mov
inc
aaa
movsb
lea
test
loopne
xor
lods
loope
enter
xchg
lods
lds
mov
mov
in
scas
ret
cs
loop
mov
jne
daa
jg
push
mov
lds
mov
jge
insb
bound
fcmovnbe
stos
mov
sahf
dec
lods
cs
fdivs
dec
sbb
mov
fdiv
orb
dec
or
sarb
jno
pop
insl
aaa
add
clc
adcl
lahf
pop
nop
xorb
js
and
cmc
mov
pop
repz
lret
repz
push
call
mov
out
jae
fsts
cld
lret
jg
clc
cltd
ds
xchg
clc
jnp
mov
xchg
mov
mov
mov
push
mov
adc
push
ljmp
and
xor
dec
push
push
mov
adcb
dec
shrl
mov
popf
out
adc
lret
fwait
call
sub
adc
sub
je
pop
cmp
jb
icebp
push
fs
jbe
adc
xchg
out
mov
jne,pt
imul
cmpsb
std
adc
push
adcb
cmova
out
loope
idivl
cmp
into
xor
add
loopne
add
sub
inc
dec
jge
in
mov
mov
mov
mov
and
test
mov
stc
sbb
pusha
test
repz
push
xchg
sahf
and
incb
xor
push
lahf
rcrb
mov
jmp
movsb
movsb
mov
jmp
and
int
xor
sub
sbb
sbb
idivb
mov
dec
mov
mov
xchg
or
push
arpl
sbb
notb
popa
or
out
les
out
iret
repz
insb
jg
push
xor
cs
test
pop
push
pop
inc
sahf
out
mov
jo
jp
ja
fwait
cli
scas
cwtl
mov
cmp
dec
in
sub
sub
xor
add
adc
inc
cmpsb
std
test
jge
and
mov
sub
mov
faddl
shrb
push
mov
or
pop
std
xor
and
orb
xor
mov
dec
jbe
ss
mov
scas
in
and
sub
adcb
movsl
jo
xor
fwait
mov
cli
stos
push
push
hlt
mov
dec
insl
adc
clc
push
push
sahf
shll
dec
insb
xchg
sahf
sub
in
xchg
mov
mov
shll
push
sub
jbe
popa
rorl
xor
mov
and
push
adc
cld
ja
adc
imul
or
cld
xchg
call
insb
sarb
sti
inc
jns
data16
jecxz
add
pop
sbb
sbb
mov
pop
fwait
adc
push
push
jecxz
loop
fcomps
test
ret
add
mov
pop
add
test
dec
mov
rorl
sub
in
xor
cmp
push
xchg
sbb
fldt
test
mov
jae
dec
scas
lock
push
movntps
inc
push
or
and
stos
fldl
pushf
rorb
test
pop
add
inc
jecxz
add
adc
repnz
out
mov
popf
pop
outsl
in
fisttps
add
sub
dec
arpl
adc
push
fistpll
je
js
jge
and
loop
mov
enter
jb
cli
dec
arpl
push
pop
icebp
or
push
jno
sub
imul
jnp
pop
sarl
pushf
jo
mov
sub
pop
scas
daa
and
js
ljmp
cmpsl
lret
addr16
mov
lea
idivl
popf
out
outsl
sbb
sbb
stos
cltd
cmpsb
jb
lahf
xchg
lret
popf
push
lock
les
mov
sub
mov
leave
pop
mov
pushf
lods
out
out
cmp
add
or
ret
dec
movsb
pop
mov
jle
stos
mov
jns
mov
insl
pop
pop
aad
out
or
pusha
fwait
cmpsb
pusha
or
adc
aad
inc
jne
cli
out
or
ficoms
clc
pop
sub
andnps
mov
mov
dec
lock
push
adc
out
add
xchg
outsl
xor
or
mov
repnz
xlat
mov
loope
xor
pop
movsb
js
je
sub
push
outsb
iret
push
std
test
mov
rorb
addr16
addr16
cmpsb
jae
pop
sub
fwait
lahf
pushf
jns
xchg
test
jg
ljmp
aas
sub
shrb
das
cmp
ficoml
stos
dec
es
or
idiv
stos
push
in
rol
rcll
insb
test
cli
jns
mov
xchg
mov
inc
shl
push
fs
rcrl
mov
jo
pushf
adc
rcr
mov
imul
pause
lods
lods
nop
ror
shl
xchg
and
mov
jl
fstps
mov
pop
pop
and
mov
fsubs
fnsetpm(287
lret
mov
mov
sub
insl
pop
and
and
add
jno
cmp
into
ror
add
or
sub
es
cmc
sub
call
movsl
popf
popf
dec
fsubl
repnz
aas
push
or
mov
xchg
ret
add
pop
testl
lahf
imul
sub
jecxz
xchg
push
xor
movsl
insb
xlat
ret
cmp
or
inc
xchg
and
push
jmp
push
jbe
jbe
cld
aas
sub
add
cs
pop
dec
xchg
fadds
stos
push
pusha
lods
pop
addb
mov
ds
or
cmp
or
js
dec
push
lahf
out
bound
out
test
xor
cmp
push
inc
cmc
cmpsl
mov
faddl
dec
mov
and
push
out
je
enter
mov
leave
pop
stos
in
sbb
jmp
or
adc
push
pushf
in
add
mov
in
pusha
add
outsl
rcl
arpl
sbb
xor
sbb
push
cmpsb
loop
dec
pop
xor
ljmp
xchg
filds
icebp
cmp
loope
jbe
repz
sbb
push
iret
sub
push
int
xor
lock
mov
mov
inc
mov
jb
push
lods
push
mov
jae
mov
rorl
stos
cmp
popf
pop
jmp
mov
dec
cltd
inc
outsl
ds
leave
mov
dec
sub
aad
divl
std
xorl
popa
stos
push
dec
or
std
push
pusha
ret
lret
test
ret
and
out
out
lods
mov
mov
cwtl
out
jecxz
outsb
stos
mov
loope
sbb
sbb
pop
add
dec
fcomps
fsubrp
les
mov
out
into
cli
cli
push
movsb
jp
int3
or
and
pop
repnz
popf
pop
or
cmc
and
dec
xor
sbbl
jne
or
aad
pop
or
pop
enter
js
addl
inc
mov
mov
movsb
or
scas
jge
mov
das
popa
out
jns
dec
sbb
pop
jnp
orl
sti
dec
push
push
dec
xor
test
or
je
xor
mov
outsl
test
mov
inc
jp
xor
add
ret
pop
out
lretw
push
fsubl
add
mov
xor
jb
clc
cltd
jno
mov
sbb
sti
test
adc
aas
add
inc
enter
fndisi(8087
fstl
into
push
test
in
sbb
int3
pusha
rclb
adc
sbb
xor
pop
push
xchg
xlat
or
cmpsl
gs
push
sub
int3
mov
and
push
adc
cld
das
sub
loopne
jp
cwtl
rcrl
js
rcll
adc
enter
lods
xor
sahf
jo
mov
mov
pop
shrl
xchg
test
xchg
ljmp
pop
mov
xchg
nop
in
vmread
ficoms
loopne
cmovg
enter
or
sub
mov
pop
divb
sbb
xchg
in
lock
inc
ds
fldenv
mov
enter
stos
xor
jne
idivl
movsl
repnz
jne
pop
addr16
jb
out
push
imul
adc
jecxz
out
pop
adc
inc
ret
out
pop
jae
push
repnz
jmp
scas
xchg
dec
xor
inc
lcall
popa
sub
sbb
dec
jns
rolb
add
mov
inc
and
cmovl
inc
add
enter
sbb
inc
fimuls
shlb
jno
testb
ret
mov
js
pop
lods
mov
mov
push
insb
iret
sbb
lahf
sbb
clc
lods
outsb
mov
pop
fwait
and
popf
std
ja
ss
adc
jne
mov
push
ja
aad
ja
sti
in
mov
fdivl
sbb
cmpsb
mov
add
cmpb
pop
cmpsl
lea
jg
jecxz
call
and
mov
jae
inc
data16
pusha
cmp
xchg
jns
xor
xchg
or
fildll
js
pop
aas
xchg
out
jecxz
addr16
movl
mov
jnp
test
xchg
ficomps
enter
cmp
mov
rol
out
movsb
icebp
sub
mov
in
ss
addr16
push
xor
ljmp
adc
in
ljmp
jl
insl
bound
nop
add
imul
push
jge
rcl
push
cmc
mov
pushw
fldenv
pop
mov
push
cmp
es
xchg
stos
lea
jecxz
jnp
mov
fsts
mov
adc
movsb
cmp
cmp
test
xchg
or
dec
loope
pop
nop
dec
mov
pop
jmp
dec
pop
and
pop
add
push
lea
daa
lret
or
or
cmpsb
mov
mov
push
jns
fldcw
call
push
xor
aas
insb
aam
pop
les
int
daa
aad
aas
inc
rclb
imul
es
sti
add
push
push
cmc
insl
pop
inc
add
xchg
mov
loop
pop
push
scas
push
roll
dec
insb
fs
xorb
nop
sbb
mov
xchg
add
dec
sub
scas
pop
insl
push
mov
adc
imul
mov
or
js
and
sbb
sbb
sub
jge
mov
xor
and
movsl
xor
jl
fdivrs
daa
test
daa
and
je
jle
dec
imul
fnstenv
xor
mov
ret
aad
insb
mov
jbe
jnp,pn
lods
mov
push
xor
mov
shlb
push
cmp
jge
addb
sub
ljmp
in
or
sub
into
or
or
fisttps
and
jge
push
cwtl
and
mov
and
sub
sbb
sbb
pop
mov
test
sbb
mov
imul
push
enter
sbb
add
ljmp
pop
fsubl
mov
mov
cmpsl
call
cmp
sbb
sbb
rcrb
test
popa
mov
jge
filds
mov
adc
adc
icebp
enter
or
daa
sub
mov
clc
jbe
vmwrite
sub
ja
mov
jo
mov
cmp
mov
out
add
inc
gs
or
push
push
xor
bnd
dec
inc
mov
lahf
cmc
call
cmpsb
mov
imul
out
lret
push
pop
mov
int
inc
push
sub
fsubl
outsl
imul
adc
jmp
sbb
pop
cs
arpl
inc
push
sbb
negl
xchg
fidivl
es
loope
test
lock
aas
xchg
lds
xchg
mov
aam
inc
loopne
xchg
cmp
mov
in
arpl
jnp
mov
pop
into
scas
inc
jbe
jle
cld
sarb
mov
inc
into
cmp
out
sbb
ds
aas
inc
mov
inc
divl
xor
imul
pusha
push
or
inc
pushl
push
pushf
popf
repz
pop
or
pop
or
test
aam
imul
sarl
pop
mov
or
lea
and
cmp
sub
ret
stc
out
cmp
lds
cmp
loopne
or
xor
icebp
jmp
or
iret
pop
sbb
clc
add
in
in
out
push
dec
xorl
lods
std
and
rclb
pop
dec
xchg
insb
jmp
and
xchg
cmp
xor
bound
push
and
push
jbe
les
out
sbb
mov
xchg
adc
pop
repnz
xchg
adcb
gs
jno
push
loope
mov
popa
xor
dec
out
movsb
pop
mov
or
in
enter
xchg
jbe
rcrl
rclb
cs
pop
loop
mov
or
mov
xor
mov
mov
sbb
mov
out
jg
or
sub
jo
popa
leave
ret
test
adc
mov
adc
xchg
mov
dec
push
in
mov
add
push
add
push
add
pop
xor
mov
inc
cld
cwtl
cmc
test
rcrb
mov
jge
inc
les
add
ss
and
je
add
out
icebp
or
fstpt
dec
or
mov
or
popf
aaa
int3
xor
inc
in
cmp
push
fildl
faddl
inc
inc
pusha
xchg
sbb
xor
fnstcw
fmull
mov
test
add
xchg
dec
out
dec
cmc
dec
pop
addr16
or
adc
xchg
scas
inc
push
es
push
outsb
orl
add
rorb
xchg
xchg
inc
xchg
inc
cmp
lcall
gs
mov
int3
xchg
les
mov
and
push
dec
adc
hlt
xorl
loope
lods
clc
out
iret
or
jne
sub
loopne
jb
rcrl
push
cmpsb
clc
sub
pusha
aam
mov
sti
imul
hlt
mov
andb
jae
jb
jp
xchg
inc
mov
mov
adc
or
out
mov
adc
mov
fistpl
add
push
jne
insl
aad
sub
and
push
sbb
je
loope
mov
cmpsb
mov
push
int
adc
aam
in
sti
fisttpl
xchg
pushl
shll
outsl
jb,pn
adc
jb
push
and
movsb
xor
fisubs
mov
cs
loop
cmc
sarl
jg
or
aam
pop
jp
clc
rcll
cld
jmp
outsl
cmc
xchg
gs
pop
jp
pop
insb
sub
aas
rorb
lea
mov
ja
adc
jmp
sub
ja
pop
hlt
and
jno
xor
divb
adc
mov
and
cmp
aam
fwait
imul
sbb
push
mov
sub
or
xlat
fiadds
negl
dec
mov
fidivs
ja
mov
std
rol
lods
lea
fimull
cld
sbb
sti
pop
cs
mov
or
sub
xchg
test
mov
cmc
lret
cltd
jmp
mov
ret
cmp
mov
push
loop
adc
filds
xchg
lret
inc
int3
repz
icebp
mov
pop
dec
ss
push
xor
jbe
push
sub
shlb
repnz
aam
pop
pop
stc
cli
subl
cmp
adc
xor
das
test
sub
int
jl
sbb
stc
push
psadbw
sarb
fidivrs
sub
pop
div
pop
sub
sub
sbb
lods
stos
jmp
sbb
imul
imul
push
repz
sub
and
call
fisttpll
dec
lock
push
out
adc
sub
enter
lahf
mov
and
and
jnp
add
add
xchg
ds
pop
cmpsb
sti
syscall
mov
popw
sbb
fnstsw
and
repnz
add
push
cmp
js,pt
cmp
mov
inc
jg
jo
in
lret
dec
rorl
mov
xor
cmp
insb
adc
pop
call
ret
push
mov
out
ja
push
ds
push
rcrl
dec
negb
lahf
dec
or
insb
clc
fs
aad
or
shll
jecxz
pop
bound
or
jbe
jle
rcrb
in
push
aas
pop
push
push
rcrl
pop
ret
fs
popf
or
sbb
push
jo
subb
out
sub
mov
je
out
loop
mov
inc
daa
add
xchg
cmp
jle
mull
jb
jge
add
sti
aad
pushf
pop
nop
add
dec
push
aad
mov
push
inc
stos
jge
jmp
dec
sub
push
mov
mov
sahf
lds
dec
add
in
scas
or
lcall
leave
jp
lea
je
mov
mov
stos
sub
fs
push
jl
out
xor
repnz
out
test
lcall
mov
xlat
pop
ds
and
sub
lock
jge
mov
mov
popa
pop
mov
pop
push
insb
iret
or
movsb
sti
push
jae
cli
pop
mov
nop
adc
jg
dec
cld
mov
dec
test
cmp
popf
imul
inc
ds
mov
xchg
nop
cltd
mov
mov
jp
mov
dec
test
sahf
mov
or
jne
cwtl
or
adc
js
xor
xor
into
les
inc
mov
lods
in
mov
xor
mov
dec
ja
aaa
in
jg
or
jbe
mov
adc
das
pop
int
jnp
push
inc
or
sbb
inc
add
mov
cmp
iret
mov
pop
repnz
jb
fs
push
insb
negb
xor
ficomps
xchg
xchg
jne
lret
lret
negl
int3
push
in
stos
ror
jb
jg
inc
inc
dec
mov
out
jl
push
mov
fsubrl
push
mov
sub
test
sbb
add
mov
daa
inc
mull
out
test
in
stos
in
xor
repz
lret
or
dec
push
nop
xor
fildll
stos
jnp
cmc
inc
mov
inc
subb
arpl
adc
mov
jp
xchg
repz
cmp
popf
sbb
inc
pop
xor
pop
mov
jno
repz
es
mov
mov
hlt
rcll
xchg
scas
cmc
push
shlb
lcall
fs
sti
repnz
xor
xchg
inc
push
sub
test
push
xor
adc
jno
dec
xchg
imul
jne
xchg
jp
popa
cmp
aam
test
sub
sarb
xchg
sbb
sbb
mov
lods
fmul
jg
mov
cltd
xchg
stos
inc
fxch
and
insl
in
mov
inc
xor
jb
lock
sbb
xchg
imul
imul
std
stos
fsubrs
pusha
cmp
pop
mov
std
test
cmp
lret
aaa
imul
adc
xchg
mov
cmc
adc
test
aam
dec
xor
mov
stc
xchg
adc
ja
xchg
or
hlt
movsb
leave
add
popa
gs
shlb
lret
inc
scas
das
scas
or
dec
push
and
push
adc
sbb
push
xchg
pusha
out
xor
aad
sbb
xchg
and
dec
xor
xor
pop
roll
jo
or
xor
lcall
int
sbb
repnz
fisttps
jmp
inc
imull
or
adcl
outsb
adc
loopne
push
mov
inc
in
xlat
repz
jle
out
inc
pop
int3
leave
push
or
nop
shll
fs
sti
mov
lret
sbb
sbb
lcall
jg
pop
inc
popa
mov
clc
mov
pushf
lods
mov
jle
lahf
push
aaa
clc
jb
mov
fnstcw
je
lahf
mov
popa
sbb
pop
push
rorb
out
sub
ljmp
mov
mov
pop
sub
cli
pushf
and
cmp
insl
test
sbb
popa
jb
jns
ret
in
fs
sbb
lret
sub
sahf
sbb
xor
sub
aas
adc
mov
shrl
fnstcw
push
jl
test
mov
loope
xchg
dec
ror
in
lods
sub
pop
lock
jo
test
out
pop
fcomp
or
inc
in
mov
xchg
inc
mov
mov
sbb
enter
test
ds
cmp
imul
dec
imul
and
das
or
xchg
push
mov
shrl
mov
arpl
jbe
sbb
adc
fdivs
cltd
add
and
mov
out
dec
jmp
xor
and
lcall
fistpll
imul
xchg
sahf
and
dec
lret
call
mov
xor
push
mov
dec
daa
lds
adc
popf
dec
and
sbb
cmp
add
lock
xor
aaa
lret
cmpsb
dec
cmp
fsubrl
pop
and
add
jno
aaa
sbb
sbb
or
ja
dec
frstor
ret
aam
xchg
outsl
lcall
idiv
orl
mov
bswap
push
fcoml
js
push
loope
lds
dec
push
cwtl
aas
jno
pop
mov
pop
das
xor
aas
scas
mov
mov
add
test
iret
das
inc
mov
les
push
outsb
int3
fildl
lret
jbe
es
ljmp
push
cmp
sub
fsubr
sbb
jne
imul
mov
aas
add
and
inc
test
movsl
je
punpckhdq
mov
pop
xor
hlt
dec
adc
pop
rcrb
outsl
and
gs
adc
add
scas
push
pop
mov
inc
in
pop
push
stos
sbb
sbb
fwait
add
dec
jecxz
push
xchg
dec
inc
or
shl
pop
cmp
fwait
pop
outsb
shlb
imul
jmp
sti
mov
outsb
subb
popa
dec
repz
jge
xchg
adc
loopne
inc
lahf
jmp
sub
adc
insl
adc
aaa
pop
pop
mov
out
insb
cmp
lea
xchg
mov
lahf
ret
pop
test
jbe
push
mov
jno
std
out
push
push
fbld
fnsave
lcall
lcall
cwtl
lods
inc
rcll
js
push
adc
ss
pusha
stos
fisttpl
lods
inc
sbb
fsubrl
push
push
push
mov
jbe
cltd
dec
ja
popf
dec
je
scas
cmc
movb
mov
inc
mov
xchg
push
andl
dec
movsb
fs
fidivrl
push
cmpsl
adcb
dec
mov
cmp
add
jecxz
mov
sti
sub
dec
aaa
jge
lcall
push
ret
jo
pushf
sbb
mov
fidivrl
shlb
jmp
nop
ja
jns
dec
pop
rolb
sbbb
pop
xchg
or
cmc
pop
and
dec
jb
and
imul
inc
jo
mov
jns
xchg
mov
and
addr16
dec
out
mov
scas
and
sub
test
rorl
pop
mov
push
mov
scas
sbb
fistpll
test
pop
jns
add
jge
out
mov
aad
insb
xchg
push
test
jp
popa
jl
pop
pop
sbb
in
cmp
mov
add
ficompl
out
xchg
cmp
dec
jmp
int3
lahf
fld
dec
loop
mov
popf
mov
and
pop
std
xor
jg
mov
lods
ret
mov
or
leave
sub
incb
push
lret
xor
lock
std
ret
mov
push
fistpll
adc
and
push
stos
popf
jle
xchg
cmp
movq
mov
add
cmc
pop
pop
jecxz
pusha
lds
xchg
mov
push
dec
je
push
mov
jo
xchg
iret
movsb
jge
xor
inc
jmp
sbbl
jge
icebp
adc
sub
test
stos
in
enter
xchg
mov
mov
jecxz
out
adc
in
shll
fadds
xchg
dec
dec
imul
inc
cwtl
pop
mov
xchg
rcrl
imul
cmc
mov
test
rcll
arpl
xchg
mov
lock
test
and
push
iret
cli
sub
call
xor
sub
xchg
sti
sub
cmp
jmp
movsb
mov
dec
fiaddl
push
std
cmpb
orb
out
loopne
jnp
xchg
inc
cmpsl
lcall
sbb
test
out
pushf
mov
dec
mov
mov
inc
xor
pop
and
stos
roll
push
add
xchg
push
push
aad
jg
icebp
pop
aam
imul
ret
xor
lods
das
mov
lahf
pop
cmpsl
test
cmp
imul
and
inc
and
fbld
rorl
filds
imul
ret
cs
jmp
xchg
cmpsb
jecxz
lods
and
dec
adc
inc
fs
jl
dec
mov
inc
aam
mov
pop
pop
jnp
push
dec
icebp
notl
ds
in
pop
sarl
xchg
repnz
inc
outsb
add
jl
insl
jne
sahf
or
add
mov
cli
jecxz
mov
or
call
mov
outsb
xchg
pop
dec
and
mov
push
aam
mov
mov
jbe
ss
cmp
mov
and
sub
lods
mov
inc
jl
pop
outsb
inc
mov
sbb
sbb
add
lea
ficoml
sbb
lock
lods
or
loope
popa
mov
mov
add
push
je
jp
inc
pop
sahf
fbstp
fnsave
scas
xchg
in
sub
add
adc
das
sbb
subl
cmc
pushf
fildl
fimuls
insl
jno
dec
rcr
pop
cmpsb
xor
inc
loop,pt
jecxz
xchg
sbb
adc
and
xor
cmpsl
xchg
loope
pop
imulb
gs
je
dec
arpl
test
cld
cmpsb
aad
jle
int3
add
inc
mov
test
adc
inc
and
es
mov
push
cmpsb
mov
and
mov
loop
or
push
mov
ljmp
test
inc
push
test
sub
adc
popf
fs
sarb
dec
xchg
adc
sbb
mov
stos
in
rcrb
pushf
dec
mov
push
jg
mov
jns
add
in
lret
daa
jae
mov
ja
cwtl
jne
insl
mov
icebp
mov
jne
xor
mov
add
xchg
add
or
mov
outsl
in
or
cmp
xchg
mov
andl
ret
push
sbb
mov
cmp
mov
jle
or
adc
add
orb
in
fdivrs
mov
stos
and
and
sahf
cmp
test
sbb
pop
sbb
out
insb
testb
rorl
insb
cmc
dec
das
or
into
pop
cmp
sbb
loopne
clc
sbbb
jnp
jl
xlat
xor
icebp
cltd
ja
ja
or
sub
ja
jae
fsubrl
add
adcl
lods
xchg
movsb
xchg
ss
test
dec
push
pop
push
fwait
mov
jns
or
cli
xchg
xchg
push
add
cld
xchg
jbe
test
jmp
push
aad
mov
and
das
imul
fsubr
xchg
lahf
push
addr16
xchg
nop
iret
pop
out
mov
ljmp
leave
fstpl
jp
out
pop
jmp
hlt
loopne
jbe
cmpsl
lea
xchg
in
jbe
cltd
push
mov
adc
xchg
stos
xor
lds
mov
lea
add
xor
scas
aam
dec
adc
clc
or
in
push
cmp
push
jmp
in
or
mov
pop
sbb
arpl
test
lret
push
add
pop
negb
and
ja
and
popa
dec
jnp
in
les
pop
jne
mov
jge
mov
push
xor
jnp
rorb
movb
cmp
dec
or
adc
jns
aam
mov
or
xchg
or
sti
mov
lock
cltd
es
sub
mov
sar
cmpsb
and
adc
inc
aam
sub
test
push
xchg
dec
idivb
sub
in
xor
xchg
outsb
xchg
fwait
mov
lret
in
sub
or
push
int3
inc
arpl
loope
js
pushf
fucom
adc
outsl
or
and
dec
loope
mov
mov
cmp
fimull
adc
pop
arpl
lret
adcl
imul
roll
xchg
mov
inc
mov
hlt
es
fldcw
mov
nop
cmpsl
lret
repnz
or
dec
sbb
lods
insb
loope
inc
rcr
cli
addr16
and
cmp
xlat
xlat
sub
dec
insb
and
xor
data16
faddl
negb
stos
ljmp
jl
outsw
sub
test
cmp
out
jno
aam
xor
pop
lahf
and
or
sub
dec
ds
mov
push
fs
jge
adc
dec
dec
mov
cltd
jbe
popa
cmp
mov
xor
fs
mov
jmp
or
std
jne
mov
dec
out
leave
cld
shr
out
and
sub
cmpsb
jnp
call
ret
into
cmp
cltd
sub
cmp
rorb
mov
sti
mov
enter
adc
and
into
jl
mov
sub
sahf
mov
mov
sub
iret
je
push
rcll
cs
mov
test
cltd
outsl
push
arpl
jns
aam
in
cmpsb
add
add
outsl
bound
sub
sti
aas
fs
jb
cmp
xor
insb
adc
push
push
movsb
loop
dec
shlb
loopne
dec
cmp
mov
pop
or
int
lock
icebp
jecxz
mov
std
stc
add
in
pushf
aas
shll
xor
jl,pn
aas
adc
adc
fwait
dec
sbb
mov
fsubrl
push
into
cmp
imul
mov
or
test
xchg
and
add
mov
test
ds
sbb
hlt
mov
aas
fidivrl
cmp
ret
jge
adc
xor
jp
test
gs
mov
pop
xor
xchg
sbb
jecxz
lcall
sar
push
adc
xor
pop
pop
ljmp
dec
setge
shlb
mov
push
push
push
jne
sub
jl
push
cmp
cs
stc
rcll
sub
sbb
xchg
cmpsb
test
and
stos
ss
pop
xchg
inc
les
add
out
popa
sbb
xor
ret
mov
mov
xchg
xor
cmpsl
mov
and
data16
out
idivb
in
iret
in
and
notl
xchg
jge
mov
cmp
push
cmp
mov
adc
mov
mov
xchg
jl
sbb
inc
inc
nop
add
mov
out
loopne
std
or
mov
rolb
adc
jb
push
cmc
mov
xchg
scas
adc
xchg
xchg
push
push
sub
enter
rcr
jg
scas
or
push
adc
dec
xchg
xor
out
bt
pushf
xlat
add
int
and
jp
bound
xor
popa
adc
inc
push
and
call
insb
push
inc
xchg
pop
aaa
mov
lea
or
push
jl
rcl
movsl
jo
xor
ds
in
dec
aad
add
out
sti
jg
in
lods
cmp
es
jmp
pop
adc
in
fs
dec
inc
in
dec
ljmp
xor
fstl
loope
testb
mov
mov
int3
gs
packssdw
mov
rorb
sti
cmpsb
repnz
mov
in
pop
insb
aad
xor
sub
test
xor
in
pop
adc
jns
pop
in
mov
leave
lcall
arpl
xchg
pushf
rcll
clc
cmc
sbb
daa
nop
inc
jmp
test
cltd
shll
insl
in
je
lcall
xor
or
fisttpl
push
fnstenv
sbb
inc
or
sbb
push
push
gs
fs
jp
jae
inc
mov
jl
xor
daa
arpl
int3
jle
pop
xlat
xor
push
xor
xor
cmp
jne
addr16
mov
insl
push
into
dec
sbb
je
cmpsl
nop
das
jae
or
xor
nop
jle
mov
sti
or
out
jl
insl
or
sbb
jns
mov
mov
ja
cmp
lock
int3
dec
pop
call
mov
cmp
cld
add
test
xchg
mov
js
jmp
jp
icebp
leave
aas
fimull
sti
sbb
mov
sub
mov
add
mov
xchg
sbb
push
dec
xchg
enter
pop
data16
div
sbb
fldl
outsb
and
pushf
movsl
push
jge
lds
imul
inc
mov
or
stos
jmp
leave
cmpsl
mov
inc
imul
imul
cmpsl
stos
sbb
movsl
and
adc
sbb
sub
scas
jp
push
inc
push
dec
jno
es
dec
push
xlat
push
xchg
adc
arpl
das
inc
lea
push
pop
cmp
and
mov
add
ret
out
adc
mov
fwait
imul
xor
test
in
sbb
decl
icebp
pop
fiaddl
ds
cwtl
mov
push
push
add
shl
push
sbb
sbbb
inc
daa
add
imul
sub
xor
popf
mov
jns
arpl
jne
addr16
sbb
dec
cmp
xor
scas
sbb
mov
sbb
out
sbb
outsl
jnp
mov
xor
movsl
clc
jge
jge
repnz
add
jno
jmp
inc
sub
cs
cwtl
sarb
mov
mov
insl
test
adc
andl
scas
movsl
jns
push
xor
stos
jno
int
insb
and
movsb
cmc
std
cmp
test
fwait
in
mov
jmp
sub
ja
loopne
xor
mov
out
mov
or
fstp
stc
es
repz
jbe
push
popf
lods
cwtl
mov
and
mov
repz
sahf
aaa
in
outsb
lods
xchg
pusha
push
push
xchg
call
mov
fldcw
das
pop
push
push
pop
outsb
mov
hlt
jo
inc
movsl
cmp
outsb
push
fs
out
sbb
xchg
push
add
inc
je
push
aaa
leave
pop
jle
add
jno
xlat
rolb
sbb
inc
js
cmpl
jo
cli
out
loope
sub
scas
add
push
inc
adc
leave
ljmp
ud2
sub
cmc
imul
jns
into
das
dec
pop
scas
nopl
or
je
adc
adc
aad
ljmp
cmpsl
sahf
mov
stos
and
imul
shrl
sbbl
subb
sbb
movsb
add
mov
gs
icebp
sbb
loopne
jl
or
push
sub
xor
jecxz
push
inc
int3
sarb
xchg
stc
imul
pop
sbb
fwait
mov
mov
enter
fildll
pop
sbb
je
xchg
scas
or
lods
pop
stc
movsl
xchg
pop
jne
leave
push
leave
test
int
pushw
jo
inc
lret
dec
loop
or
out
and
adc
mov
movsb
sti
add
shrl
ljmp
sarl
sbb
push
insb
add
add
int3
nop
jne
bnd
out
jae
mov
lahf
mov
imul
mov
dec
xor
dec
out
imul
sti
loope
daa
xchg
adc
jnp
ret
aam
rcll
lock
mov
xor
fdivp
push
psadbw
nop
outsl
jecxz
das
and
dec
jae
cli
out
dec
mov
inc
test
aaa
fldl
cmp
push
loopne
jg
push
loop
mov
jge
stos
sbb
out
mov
mov
inc
in
mov
fstps
mov
and
insb
pop
add
icebp
sub
addr16
jb
pop
pop
inc
fisubrs
sbbb
mov
xchg
push
xor
or
aaa
daa
out
into
int
adc
iret
pop
or
leave
dec
inc
cmp
stos
xlat
sbb
mov
jb
insl
xchg
sbb
fildll
adc
fs
jmp
aaa
xchg
or
loope
lcall
int3
push
jnp
pushf
mov
sahf
imul
stc
mov
aaa
xor
sbb
dec
xchg
jns
xchg
mov
and
or
add
sti
or
push
mov
sti
add
pop
sub
hlt
inc
fiaddl
das
int
loope
movb
jl
pop
test
xor
cli
mov
lock
out
adc
sbb
ljmp
mov
cld
sub
xchg
dec
xchg
jae
mov
cmp
dec
adc
push
sbb
mov
add
test
mov
lods
sbb
fldenv
out
repz
cmp
js
push
out
inc
lahf
pop
dec
and
add
loopne
mov
faddp
mov
outsl
jle
push
hlt
sbbl
repnz
andl
bound
jne
or
xor
rclb
add
inc
fdivs
in
lahf
jne
lods
add
jo
je
xchg
and
fwait
sbb
mov
dec
js
xchg
lahf
mov
or
xor
mov
xchg
call
cmp
iret
adc
aas
fisttpll
insb
xlat
jbe
in
call
leave
push
pop
pop
push
loope
std
xchg
imul
mov
daa
and
jl
gs
xchg
mov
lcall
insl
xchg
jmp
jne
and
jmp
jns
js
rcr
and
std
cmpsb
loop
les
xchg
xor
xchg
out
mov
jo
dec
jge
loope
test
fldt
ljmp
push
xchg
cmc
dec
adc
out
in
ret
je
lcall
and
in
mov
xor
add
movzwl
jne
shlb
cmp
push
stc
jge
bound
or
sub
pushf
insl
sbb
adc
jg
xor
mov
mov
ds
ficoms
adc
outsl
sbb
push
cwtl
adc
mov
mov
mov
lret
add
sti
mov
and
dec
sub
gs
push
out
xlat
and
ss
jo
aam
xchg
xor
mov
addb
pop
pop
jns
adc
or
inc
sub
cmc
adc
scas
movsb
pavgw
adc
shrb
mov
addl
sti
inc
aad
cmp
mov
xor
push
mov
or
and
mov
mov
push
adc
inc
and
fstpl
dec
adc
insb
sbb
insl
mov
push
mov
mov
mov
add
outsl
xor
insl
xor
jmp
push
sub
imul
sub
cmp
stc
mov
stos
aaa
fcompl
arpl
lods
clc
inc
xlat
idivl
or
jecxz
ficomps
and
xchg
sbb
mov
jecxz
in
inc
inc
push
nop
int
sahf
mov
leave
push
iret
jmp
dec
dec
xchg
cmpsl
icebp
and
inc
mov
movl
mov
inc
gs
mov
xchg
call
cmpb
inc
cltd
ficoml
and
in
pshufw
enter
push
pop
nop
scas
iret
jl
adc
push
mov
imul
leave
ret
xchg
ja
sbb
out
hlt
dec
subl
mov
cld
sub
push
cld
pop
jmp
push
int
outsb
push
pop
jmp
pop
inc
ds
dec
call
or
jo
sbb
inc
and
jle
mov
pop
and
repnz
iret
lahf
ss
xor
pop
push
out
imul
mov
repz
jbe
lahf
lock
inc
mov
xlat
sbb
out
bound
and
or
bound
push
sbb
sete
outsw
imul
push
mov
dec
jo
aas
cltd
out
icebp
jae
pusha
mov
and
stos
fnsave
pop
inc
stc
jne
pop
mov
and
fnstsw
lret
hlt
ljmp
pop
mov
or
cmp
cmp
push
dec
hlt
xchg
mov
sbb
jbe
dec
je
je
das
mov
cmp
sarl
push
aam
adc
pop
jl
dec
mov
mov
push
test
pop
push
jnp
pop
cltd
or
shrb
bnd
jb
sub
sub
jo
inc
dec
fiadds
cmp
push
push
mov
int3
ss
or
scas
mov
mov
jae
inc
fmul
outsl
xor
movsl
push
cmp
enter
mov
sbb
push
loopne
stos
push
lret
cmp
cmp
push
iret
not
cmpsb
push
push
stc
daa
jecxz
fs
loopne
movsb
insl
or
pop
mov
adc
xor
fmuls
fisubrs
js
lds
lahf
call
mov
lcall
arpl
fstpl
adc
dec
es
fsub
fildll
pop
and
inc
test
movsl
push
push
movsb
add
stos
jmp
adc
jp
loope
jnp
into
outsl
xchg
jle
push
and
into
repnz
loope
lds
pop
pop
bound
sbb
aad
mov
sub
adc
js
in
mov
aas
mov
sub
and
mov
fwait
andnps
mov
fdivr
add
push
mov
into
mov
or
int
and
mov
pop
mov
std
dec
lret
ret
int
lea
outsb
push
lods
cwtl
lock
call
adc
push
int3
gs
dec
arpl
test
shr
fistpl
fstps
pushf
outsl
cmp
ret
jnp
add
pop
sbb
aad
cmp
dec
gs
sub
out
call
insl
pop
clc
aad
fstp
scas
push
ljmp
push
outsb
fldcw
fcomps
movsl
jne
and
push
push
fnstsw
data16
or
xor
pop
jl
iret
hlt
xor
jle
dec
clc
and
sub
and
xor
cmpsb
jl
enter
xchg
push
out
xor
mov
mov
fnstcw
jb
sbb
out
push
mov
jle
and
and
jo
xchg
mov
add
cmp
cmpl
pop
jg
orl
xchg
ret
mov
pop
movsl
iret
or
jp
pop
pushf
pop
xlat
mov
movsb
insl
adc
sub
in
jae
dec
mov
dec
cmp
aad
cmp
and
lock
popa
bound
dec
sub
inc
xor
jg
sbb
mov
test
pop
decb
call
add
sbb
jp
imul
ret
mov
test
sbb
cmc
add
adc
push
rclb
adc
mov
fmull
pop
std
cmp
data16
aad
shll
test
pop
orl
push
jmp
sub
jl
or
notb
jno
add
jmp
movsl
dec
enter
dec
cwtl
cmp
adc
add
lret
cltd
adc
data16
stos
or
xchg
jg
sbb
push
js
mov
nop
mov
inc
fcompl
inc
dec
push
mov
sub
mov
repnz
popf
mov
and
mov
xchg
fisubrl
lods
mov
pop
test
fmuls
dec
roll
mov
pusha
leave
movsl
dec
leave
add
insl
xor
shrb
sub
loopne
iret
clc
mov
mov
lds
test
dec
mov
xor
cld
sar
testb
dec
daa
cmp
fstpt
mull
in
cmp
add
mov
shr
sarl
orl
shr
cmpsl
push
ljmp
in
jmp
scas
data16
fucomp
lcall
pushf
and
fwait
iret
popf
lahf
add
add
push
sbb
and
imul
and
push
mov
aad
scas
sub
subb
or
fdivs
in
lds
in
pop
clc
or
sbb
xchg
popf
xor
cmp
dec
mov
or
push
fldl
loop
lret
pop
cmpsb
xchg
sub
mov
ret
js
call
rorb
cmp
push
filds
aaa
pop
sub
scas
movsb
repnz
outsl
jbe
mov
push
dec
cmp
and
mov
xor
push
sub
jne
jmp
fildl
sub
pop
sub
cmp
sbb
mov
cmp
mov
or
pushf
mov
scas
aad
or
dec
and
inc
addr16
fdivrl
xor
cld
add
fwait
sub
mov
ficoms
inc
jg
bound
or
dec
adc
mov
cs
mov
inc
jns
jbe
jb
repz
test
lods
xorb
push
pop
mov
scas
jg
dec
mov
outsl
jo
pop
mov
leave
mov
popa
jge
mov
out
push
push
movsl
bound
jo
dec
jge
mov
mov
push
arpl
aas
in
sbb
aad
stc
std
dec
sbb
out
stos
adc
loope
lret
xor
mov
push
mov
sahf
inc
and
sbb
cmpsl
call
andl
ds
xor
pushl
mov
mov
sub
sbbb
ss
outsl
push
dec
push
leave
out
pop
stos
sbbl
pushf
rcll
cmpsl
cwtl
stos
sbb
mov
orb
in
and
cmp
cwtl
mov
subb
pop
imul
sub
mov
aas
mov
stc
and
or
ret
push
dec
jns
jno
int3
cmp
sub
xchg
sub
clc
add
je
jmp
test
movl
loopne
mov
mov
and
push
ja
rorb
sbb
in
out
cmp
out
sbb
idivl
xchg
out
mov
icebp
loopne
jb
mov
mov
push
popf
aad
dec
or
xchg
adc
outsl
mov
xchg
insb
lods
inc
aaa
bound
idivl
fildll
sbb
cmp
aam
test
out
arpl
ret
inc
adc
in
in
cmpsb
and
enter
in
into
push
and
lcall
or
mov
aam
xor
or
aas
add
jbe
add
cmpl
negl
ja
mov
xlat
mov
insl
xor
int
aaa
aad
in
aam
repnz
push
in
mov
cltd
icebp
mov
inc
xchg
and
jge
inc
andl
xor
js
subb
cmpsb
out
and
mov
fs
cmp
add
sub
cmp
lea
aaa
mov
in
int
add
push
mov
loop
movsb
cmp
loopne
icebp
pop
xchg
repnz
pop
faddl
rolb
push
fistpl
fsubs
sbb
inc
mov
or
pop
push
sub
test
nop
in
jmp
mov
cmp
cwtl
sti
mov
xchg
out
fisubrs
xor
jge
imul
insb
xor
mov
adc
inc
shrl
leave
push
mov
xchg
xlat
test
xor
dec
icebp
test
adc
loop
xchg
pop
test
rorl
push
xchg
inc
aam
rolb
push
rcrl
mul
mov
cmovo
in
stc
adc
jae
sub
jl
cmpl
clc
xchg
push
jp
in
mov
jae
push
nop
or
adc
hlt
mov
and
and
xchg
icebp
fcoml
push
or
loop
inc
push
insb
test
nop
dec
stc
cltd
xchg
leave
sbb
pop
lahf
cs
mov
mov
test
hlt
and
jl
stos
enter
pop
push
jge
iret
and
jl
inc
aad
sbb
and
mov
pop
mov
inc
cmpsl
push
push
xor
jle
and
popa
dec
xchg
inc
std
mov
insb
xor
xchg
cmpsb
jp
roll
in
jo
mov
xor
neg
insb
adc
arpl
call
outsb
das
ja
or
mov
pop
adc
sbb
adc
outsb
fcomp
mov
cld
andb
sub
push
or
insl
jbe
popf
jns
dec
or
imul
ljmp
roll
inc
out
inc
xor
iret
imul
or
dec
sub
daa
lds
lds
rcl
lods
lcall
icebp
lds
popa
lock
cmc
adc
add
mov
push
xor
lret
xchg
inc
or
js
dec
sbb
sub
jo
scas
repnz
or
aaa
std
pop
xchg
aaa
fstpt
fsub
lds
jmp
mov
filds
fldl2t
pop
jp
cmp
mov
adc
push
lret
into
in
push
in
xor
cmpsl
xlat
add
not
sub
dec
mov
negl
sub
aam
iret
push
stc
out
cmc
repz
icebp
jmp
push
push
xor
pop
fsubs
jae
xchg
shr
xlat
test
dec
out
adc
repz
lea
bound
and
popf
lods
sahf
inc
dec
dec
mov
fldl
mov
movsb
aam
inc
pop
ret
fmuls
loope
negb
push
and
mov
sub
in
dec
and
jmp
mov
inc
rcrl
inc
xchg
or
or
cmp
repz
lds
sbb
mov
sbb
enter
mov
prefetch
ds
daa
int3
cmp
aaa
cli
dec
mov
xor
hlt
pop
ror
inc
sbbb
sub
sbb
sbb
sti
jne
mov
les
adc
rcrl
dec
push
outsl
out
jle
push
sbbb
mov
enter
push
pop
outsb
push
push
jno
hlt
and
bound
and
mov
fs
ljmp
bound
adc
stos
mov
and
sub
sbb
push
push
jge
push
jp
and
test
mov
xor
mov
push
icebp
lods
cmp
mov
leave
pop
cmp
mov
lods
scas
pop
mov
jmp
pop
daa
test
sbb
inc
push
andl
push
ds
iret
pop
jbe
int
jnp
ret
mov
jo
cmpb
repz
add
push
jl
fwait
push
jo
insl
or
xor
ja
adc
orb
inc
out
aam
push
cltd
push
adc
xor
cmp
lea
daa
pop
fmul
lret
in
adc
in
pop
bound
xchg
jp
add
aas
stc
push
je
sub
testb
mov
scas
or
ds
cmp
int
pop
adc
mov
jl
adc
and
outsb
cmp
aaa
push
test
mov
and
jecxz
mov
push
cwtl
mov
inc
jbe
sahf
hlt
aad
test
inc
loop
push
into
add
loope
pop
dec
rolb
sub
or
xchg
or
adc
push
push
adc
mov
dec
sub
jg
push
test
pop
pop
pop
xlat
pushfw
or
pop
les
add
pushf
call
rcl
test
adc
clc
mov
sbb
pop
pop
lret
outsb
xchg
ret
mov
cli
and
test
adc
in
repnz
push
mov
das
push
push
rorb
sbb
and
or
lret
nop
push
roll
andb
jle
adc
adc
jbe
mov
cmc
hlt
push
out
sub
jmp
jmp
cmp
mov
sbb
lahf
gs
cmp
pop
inc
and
or
and
pop
aas
mov
pop
mov
xchg
ja
andb
movsb
rcl
mov
call
fistpll
mov
jne
cli
sbb
lods
mov
mov
not
mov
or
lds
push
cmpb
pop
sbb
arpl
xchg
mov
cmpsl
mov
pop
inc
push
dec
hlt
inc
mov
mov
push
mov
push
loopne
push
sub
outsb
fwait
push
rorl
mov
rcll
pop
jecxz
sti
mov
cvtdq2ps
std
pop
sub
xor
cmp
ja
push
gs
movsl
pushf
out
or
xor
popf
sub
jmp
push
pop
xor
out
imul
rclb
cmc
pop
and
sbb
mov
rclb
data16
inc
sub
aam
sbb
add
and
out
inc
icebp
add
mov
sbb
nop
jg
mov
aaa
pop
jle
stc
inc
stc
sbb
adc
mov
xor
repz
jecxz
pop
stos
sahf
or
jle
pop
xchg
decb
add
cmp
xor
pop
sub
xchg
sarb
aaa
jns
hlt
cmp
ret
clc
out
lret
push
dec
xchg
aas
mov
cld
xor
mov
xchg
xorb
nop
aas
mov
xchg
les
es
vpmullw
pop
cmp
popf
sbb
pop
mov
push
int
add
mov
pusha
lock
mov
cs
ss
mov
xchg
lock
and
xchg
js
cli
add
and
mov
addr16
ljmp
sbb
xlat
adc
jno
aaa
xchg
fsubrl
mov
add
bound
cwtl
push
movsl
inc
dec
mov
mov
jb
dec
xor
mov
enter
loop
xchg
xchg
dec
adc
mov
cmpsl
repz
lahf
lret
or
loopne
rcl
sub
outsl
mov
xchg
mov
adc
xor
or
jbe
je
pop
push
insb
jle
mov
ret
popa
ret
roll
mov
fstpl
fldenv
std
jns
ret
repz
in
cwtl
mov
jmp
shrb
sti
insl
mov
js
fimuls
push
push
sbb
xor
mov
loope
aaa
push
scas
icebp
cmp
andl
sbb
shll
divl
jno
xchg
jne
push
inc
out
jne
movl
js
lock
xchg
out
outsl
add
dec
xchg
fneni(8087
loopne
fcmove
mov
iret
dec
sahf
jb
ljmp
push
xor
jl
inc
aad
rol
push
aas
adc
repnz
mov
xchg
adc
sub
jmp
pop
sub
push
out
das
fs
pop
dec
jp
jno
and
sahf
sbb
lock
aam
loop
ret
add
mov
cld
inc
mov
in
ucomiss
sbb
pop
sbb
dec
mov
ja
sub
mov
fbld
sti
enter
mov
dec
rorl
repz
enter
ss
negb
jl
inc
add
fistps
xchg
sti
int
insl
jnp
test
imul
jp
fisttps
outsl
xchg
rol
mov
repnz
fsubrs
sarl
lods
fwait
pop
nop
mov
ret
ljmp
popf
fs
mov
inc
test
test
jl
les
mov
mov
test
dec
test
fldl
call
inc
cmp
xchg
dec
and
repnz
mov
mov
lcall
jl
pop
mov
sub
outsb
loopne
mov
jecxz
jecxz
xor
sub
jne
mov
add
cmpsb
jge
aad
out
cwtl
in
outsb
xchg
or
mov
shrl
and
sbbb
jmp
inc
movb
decl
aad
pop
int3
push
lret
mov
ljmp
hlt
sub
adc
scas
lret
jns
arpl
dec
mov
push
popa
xor
adc
inc
idiv
sbb
and
aad
and
cmp
jb
jle
pop
inc
push
cmc
imul
fcmovnb
icebp
out
mov
sbb
pop
and
fwait
call
pop
clc
ss
mov
insl
ds
loope
add
cltd
cmpsl
jae
scas
mov
sbb
ret
cwtl
stos
ss
mov
xchg
ds
arpl
mov
dec
dec
hlt
jne
das
in
jo
dec
mov
jmp
inc
lea
or
fistl
or
sbb
mov
out
sbb
cli
push
aas
dec
xor
cmp
mov
mov
pop
mov
xchg
cmp
movsl
xchg
cmpsl
push
jg
or
and
lods
stos
mov
jecxz
dec
sarb
imul
movsl
lea
pusha
adc
sub
lods
mov
test
push
sbb
js
hlt
sub
adc
fcomps
sbb
out
jecxz
dec
adc
push
xchg
out
xchg
xor
sub
es
and
outsl
fs
lods
inc
mov
inc
add
nop
loope
pop
sub
xchg
sub
jnp
movsl
outsl
mov
push
add
cmp
fists
xchg
xlat
cmp
adc
shlb
ss
mov
lcall
loopne
pop
sbb
xor
mov
loope
cs
test
adc
xor
faddl
add
push
out
lods
pop
pushf
lahf
cmpb
not
ss
mov
cmp
iret
sbb
enter
les
pop
dec
in
lret
shl
push
sub
mov
sbb
movsl
nop
mov
mov
lods
cmp
mul
sub
andl
jge
test
into
pop
enter
shll
fildll
jno,pt
rorb
popf
mov
out
int
clc
hlt
dec
in
imulb
fwait
sub
cmpsl
cli
xchg
pusha
ret
add
xchg
sbb
xchg
sub
int
leave
and
pushl
add
sbb
outsl
addr16
out
jb
or
pop
or
lds
push
orb
jns
je
pop
js
gs
aaa
inc
aas
clc
add
add
iret
iret
push
mov
jl
stos
fcmovnb
dec
ret
mov
xchg
mov
addl
xor
xor
sub
adc
test
loopne
aas
or
fcmovnb
lahf
sbb
lods
mov
int
jmp
sbb
cmc
jl
dec
mov
js
add
push
or
adc
ret
popf
jne
das
call
or
hlt
repz
add
incl
je
stos
pop
ja
dec
add
inc
sbb
push
push
lcall
addl
dec
and
ja
jno
mov
or
push
inc
ret
aaa
and
hlt
loopne
inc
push
les
jg
xchg
dec
pop
ss
aaa
push
sbb
dec
sub
rolb
pop
ret
bound
add
js
out
es
jb
sbb
jge
sub
flds
sbb
and
push
jns
shr
shr
rcrb
sahf
pop
mov
leave
mov
add
in
shrl
mov
stos
sti
xchg
mov
jle
imul
inc
pop
dec
and
addr16
xchg
jmp
fiaddl
ds
jmp
lret
pop
push
and
sbb
sub
or
sub
fidivrs
push
cmp
cli
jmp
fstpl
lcall
push
inc
lock
mov
shrl
cmp
mov
inc
out
testl
jne
adc
add
jne
lds
aaa
ret
mov
out
mov
jle
pop
mov
push
es
stc
sbb
mov
cmp
out
fisubrs
iret
shll
and
xchg
rolb
call
lahf
fbld
ret
jl
popf
inc
roll
into
dec
or
sub
ja
je
pop
sbb
hlt
mov
mov
ss
popa
cmp
fstpl
and
fdivrp
sbb
gs
sub
pusha
mov
adc
adc
cwtl
push
sbb
push
dec
test
das
sbb
aad
sub
ss
repnz
ljmp
inc
xchg
or
push
cld
dec
jns
mov
push
xchg
mov
pop
sub
test
js
cmc
ja
into
push
test
dec
dec
or
adc
or
add
dec
mov
loopne
mov
stos
iret
pusha
mov
xor
addr16
addr16
sbb
icebp
inc
jnp
mov
or
ljmp
adc
sub
xchg
ror
mov
mov
mov
inc
popf
lds
mov
mov
xchg
pushf
test
lds
push
jg
rolb
frstor
or
and
das
hlt
mov
pushf
call
jno
xchg
imul
pop
test
push
pop
stos
inc
ficoml
bound
xor
fstpl
hlt
inc
jp
mov
mul
xchg
mov
hlt
das
nop
push
dec
dec
into
pop
add
sub
pop
add
jnp
int
daa
daa
mov
jns
mov
popf
dec
mov
movl
push
sbb
loop
hlt
ret
push
das
push
out
shlb
push
inc
mull
bound
imul
push
or
push
pop
lds
mov
aaa
out
sahf
push
or
imul
add
fnstenv
xchg
sub
cmp
addb
js
sbb
mov
inc
add
xor
cmpsb
and
xor
dec
mov
das
mov
mov
js
shlb
stc
ficoms
das
jl
ja
fcompl
int
es
leave
mov
pop
inc
movsl
dec
clc
mov
in
fsubl
aad
lcall
imul
shlb
fnstsw
es
ss
push
mov
cmpb
jbe
lea
mov
out
aad
daa
mov
mov
mov
mov
sbb
imul
adc
mov
loop
cli
xlat
std
andl
test
ss
mov
fidivl
lcallw
mov
or
dec
fs
aaa
ret
push
leave
fdivrp
ret
lods
pop
push
stc
adc
xchg
rcrb
lods
jne
cltd
jp,pt
insb
sbb
xlat
jno
or
pushf
mov
lcall
add
ljmp
sub
mov
arpl
addr16
sub
js
fcmove
jo,pt
popf
lcall
mov
pop
lcall
mov
into
jge
test
jbe
push
dec
inc
pop
stos
mov
mov
mov
xor
xor
and
add
push
es
out
mov
mov
pop
je
jbe
adc
and
add
xor
xchg
lret
fsub
and
and
mov
adc
dec
mov
pop
iret
xchg
mov
mov
cmp
xchg
cmp
shrb
and
inc
dec
inc
mov
in
push
add
js
push
cmp
xor
xlat
sub
adc
shll
xchg
mov
into
mov
scas
add
or
xchg
jp
add
sbb
ret
jp
jp
add
jns
loope
imul
jmp
and
sub
lds
xchg
addr16
lret
adc
sub
daa
pop
push
in
cli
sbb
insb
pop
jnp
rcrl
lock
adc
inc
test
add
ds
adc
pop
xor
lcall
xor
sbb
cmp
imul
xorl
fdivrl
mov
xor
sub
std
jecxz
mov
fbstp
cld
aaa
or
aaa
push
xchg
stos
lds
add
dec
xchg
clc
pop
push
mov
dec
mov
cltd
sub
cld
xchg
adc
mov
and
dec
sbb
mov
mov
decb
outsb
aaa
jnp
je
fcmove
out
inc
mulb
aaa
testb
popa
outsb
in
cmp
push
xchg
sbb
xchg
cwtl
xchg
shr
jle
xor
sti
popf
adc
xor
pop
sar
imul
in
arpl
lods
rcrl
sub
fnstsw
push
rorb
cwtl
cmp
lock
jmp
ror
ror
xchg
test
fs
jge
ffree
aad
stos
sbb
movsb
pop
and
xchg
imul
test
mov
mov
bound
xchg
push
adc
pop
pop
inc
divb
inc
mov
jg
test
sub
clc
push
jecxz
pop
pop
sub
out
lds
std
push
mov
loop
ss
pop
sub
cli
mov
adc
jl
xchg
cwtl
mov
iret
push
pop
mov
mov
incb
push
dec
scas
mov
sti
fildll
in
test
int3
jmp
idiv
cwtl
stos
mov
jge
lret
cmp
inc
dec
cs
add
pop
sub
or
enter
movsl
or
ret
xor
fadd
aad
sub
pop
lcall
shll
inc
repnz
outsl
popf
popa
aaa
subl
push
xor
je
cmp
xor
sbb
insl
mov
rorl
fistl
sub
cmp
fnstsw
loop
stos
imul
lds
add
mov
lcall
clc
imul
aas
popf
or
jo
out
sub
xchg
add
pop
xlat
inc
out
rcll
xchg
push
xchg
lods
inc
inc
mov
rcrb
sbbb
or
fwait
or
xchg
in
cwtl
cwtl
push
lods
fisttps
fsubrl
mov
clc
pop
xchg
cmpsb
scas
jbe
mov
mov
insl
mov
pop
push
xchg
test
mov
mov
and
jge
sub
ljmp
dec
loope
cwtl
lock
stos
cmp
jg
hlt
out
popa
fidivrl
js
sbb
xorb
hlt
mov
push
popf
fcomip
fnstcw
xchg
add
jl
test
push
in
xor
mov
push
jne
xchg
stos
mov
rclb
out
mov
mov
test
pop
stos
xor
jo
cmp
push
sub
xchg
and
in
rcrb
lcall
mov
and
insb
push
test
pop
jne
push
in
icebp
inc
icebp
mov
imul
fstps
std
mul
sub
mov
bound
enter
inc
sbb
popa
in
mov
mov
and
fistps
cli
sbb
push
lds
or
dec
push
and
clc
data16
int3
add
imul
loop
sbb
push
scas
es
lcall
mov
in
sub
mov
dec
push
mov
lock
sub
loope
jbe
call
cld
lods
in
jmp
mov
sbb
xchg
leave
stos
xor
dec
mov
mov
sbb
pusha
sub
pop
sahf
jge
pop
dec
push
arpl
add
addr16
sbb
aaa
push
pop
ret
inc
sub
sbb
mov
xor
mov
enter
dec
and
adc
xchg
inc
mov
loop
mulps
mov
jge
les
inc
jge
cld
dec
cvtps2pd
lcall
dec
es
or
fidivrs
loop
jne
je
ret
je
das
es
shlb
lods
cmc
repnz
sar
das
test
test
das
aam
push
inc
ffree
push
adc
xchg
fmulp
add
fs
cmc
mov
dec
or
je
push
or
test
dec
xor
orl
rcrb
adc
loopne
or
js
and
push
jle
outsb
mov
pop
daa
inc
jg
popf
rcrl
arpl
mov
or
dec
fmul
stc
mov
outsl
testl
mov
and
push
roll
push
test
mov
jne
jae
loope
int
je
call
xchg
push
mov
addl
shl
xor
sbb
jg
or
or
dec
jnp
add
in
cld
xor
loope
test
cmpsb
insb
aam
pop
movsl
divl
sub
sarb
mov
xor
inc
int3
adc
icebp
call
ljmp
xor
lahf
adcb
sbb
cltd
stc
pop
into
jae,pt
shl
outsl
mov
mov
jne
lret
jmp
sti
dec
fxch
test
lock
sbb
out
dec
cmpsl
pop
cmpsb
outsl
sub
mov
loopne
xor
cmp
in
sub
outsl
ja
fcomi
mov
or
outsl
mov
cltd
les
jp
push
inc
stos
inc
fwait
mov
push
push
pop
xlat
cld
je
jmp
sub
mov
fdivr
mov
data16
push
lahf
push
push
ljmp
mov
sbb
movsl
fsubr
das
test
sbbb
fdivl
jno
pop
ret
test
and
in
test
cltd
xchg
mov
dec
fldenv
fsubs
outsl
push
lahf
sub
mov
es
jno
push
fcmovnu
mov
sti
pop
lret
cmp
data16
in
mov
negl
movsb
xchg
aas
jg
mov
cwtl
sub
ljmp
pushf
inc
and
push
inc
repz
stc
jge
or
and
leave
mov
add
xchg
mov
sbb
push
aam
jmp
pop
cmp
jae
insl
add
leave
sub
jmp
pop
idivl
and
pop
lds
mov
test
adcb
vfnmsub132ps
out
xchg
aam
scas
arpl
push
aas
push
call
dec
aad
mov
lcall
xor
sub
int3
cmpsb
out
and
jnp
sub
sub
shll
out
xor
pop
add
push
mov
push
sub
push
mov
inc
mov
aad
dec
out
push
pop
cs
dec
test
cmc
sbb
inc
loope
mov
mov
jl
jns
imul
lea
inc
push
imul
pop
sbb
les
ret
push
in
sub
or
jae
shlb
or
bound
push
pop
addr16
ljmp
les
jo
sbb
sub
inc
test
aad
pushf
mov
adc
call
add
fwait
xchg
popa
mov
add
mov
mov
adc
es
aam
fwait
sub
dec
pop
xchg
insl
dec
cli
sub
mov
cwtl
decb
xor
jle
jo
adc
int
rcrb
dec
sub
fwait
dec
xor
cmp
lahf
pop
in
sub
in
bound
inc
rcrb
dec
jbe
mov
nop
cmpsl
sub
adc
dec
das
push
push
fs
sbb
sub
imul
push
xlat
mov
dec
sbb
push
cmpsl
fildl
fdivrp
xchg
push
loopne
xchg
push
add
cs
sub
sbb
xor
sbb
je
lret
lcall
aam
mov
fnstsw
inc
sbb
in
mov
sub
or
cwtl
sahf
adc
cltd
mov
xor
orb
nop
addr16
lahf
jbe
cld
or
cmpsb
adc
shlb
push
cmp
daa
jecxz
ja
adc
in
ret
push
cmp
or
push
and
and
int
sub
xor
xor
icebp
clc
and
xchg
sbb
xchg
and
cs
mov
fdivrs
sbb
shll
add
jge
mov
aaa
inc
js
adcb
mov
add
pop
cmp
pop
and
std
shrb
xor
mov
fld
in
push
mov
adc
stc
ficoml
jo
dec
cwtl
inc
add
jg
or
mov
dec
push
lods
push
lods
and
mov
jle
fs
push
fwait
mov
mov
popa
sbb
aaa
les
pushl
and
dec
lods
xor
cmp
into
outsl
and
callw
arpl
cmp
testb
and
sub
insl
cli
es
popa
cmp
cmp
mov
xchg
xorl
push
ret
xchg
mov
adc
pop
add
sub
push
leave
push
sub
negl
notb
add
xor
cmovae
movsb
test
adc
ja
push
in
aad
mov
sub
dec
lods
pop
adc
mov
adc
add
fldenv
ds
out
cmc
andb
or
into
push
push
outsb
stos
jbe
icebp
loopne
jle
add
jne
xchg
sbb
xor
ja
add
ret
inc
cmc
sub
cs
pushf
frstpm(287
dec
push
fistpll
mov
out
mov
ljmp
andb
jbe,pn
xor
test
arpl
mov
rcrb
faddp
imul
es
xor
and
add
xchg
pop
out
dec
xchg
fisubrl
dec
testl
jno
cmp
rcrl
push
mov
jle
jno
pop
xor
lds
cmp
lret
test
push
pop
int
jno
stos
mov
add
cmp
shr
lods
negl
out
cltd
xchg
ret
push
jbe
fimuls
mov
jb
pop
and
sub
insl
sbb
push
in
mov
inc
jb
aas
roll
cmp
adc
xchg
es
loope
in
mov
scas
ss
mov
mov
jb
adc
xchg
mov
jge
ljmp
insb
mov
cmp
add
mov
call
cld
aaa
and
add
xchg
pop
lock
pop
adc
fucomip
xlat
sub
pop
lcall
or
movsl
fwait
in
dec
out
and
fwait
in
xchg
shlb
sbb
out
add
out
std
mov
int
insl
mov
insb
xchg
xor
repnz
cmp
push
bound
jbe
jne
pop
inc
mov
lret
mov
std
jne
cmc
fwait
aas
adc
adc
lret
stos
notl
sub
pop
inc
mov
sub
imul
jno
jp
jbe
fdivl
cld
test
or
adc
sub
imul
iret
pop
mov
or
stc
push
push
xor
out
jb
mov
leave
inc
leave
sarb
push
push
ret
sub
cmp
stos
and
outsb
inc
and
hlt
sbb
test
lds
shrb
aas
push
mov
sub
mov
xchg
pop
push
push
mov
ret
shrb
jg
or
into
movsb
push
xor
jmp
cli
sbb
addb
cmpl
loope
pop
lods
xor
enter
mov
mov
dec
aaa
jne
jge
mov
mov
xchg
mov
mov
mov
add
dec
test
adc
outsb
js
mov
arpl
incl
movsl
push
testl
dec
mov
jp
loop
leave
push
adc
jae
cli
lds
pop
les
mov
mov
inc
je
adc
loope
imul
mov
push
divl
xchg
ret
adc
cli
fs
adc
add
lods
mov
mov
fldl
mov
adc
mov
addb
push
imul
cmp
stos
in
xor
sub
dec
pop
clc
cmp
add
lcall
xor
mov
lea
into
shll
mov
pop
inc
stc
lods
jo
dec
outsl
or
jno
adc
cmp
mov
mov
jb
or
mov
nop
sub
cmpsl
das
inc
scas
std
gs
ljmp
mov
push
push
xlat
jno
xchg
xchg
call
jns
ret
jg
mov
and
dec
mov
xchg
add
clc
cs
jbe
rclb
inc
outsl
mov
jg
dec
je
inc
push
pop
es
movsl
iret
aam
mov
mov
imul
mov
mov
pop
mov
sbb
lret
sbb
iret
jl
outsl
sub
mov
fmuls
movsb
inc
jno
cmpb
adc
jge
dec
lcall
adc
shrl
rolb
jnp
cmp
pop
js
pop
dec
push
aas
or
fcmove
adc
mov
or
icebp
push
or
add
jbe
xchg
mov
rorl
loopne
pop
mov
mov
sbb
mov
pushl
sbb
push
mov
test
mov
movsl
mov
arpl
sbb
in
sbb
je
dec
les
push
mov
push
out
jnp
inc
push
jl
cmp
pop
sti
inc
mov
lods
pop
or
rcrl
inc
mov
mov
arpl
sub
imul
fcmovb
add
lcall
cltd
loope
sub
adc
and
pop
movsl
aad
mov
sti
rcll
and
jno
pop
adc
shl
ret
mov
jb
scas
push
xor
or
adc
pop
and
and
mov
pusha
adc
std
adc
mov
stos
adc
sbb
pusha
cmp
lock
mov
rcll
lock
shlb
aaa
jne
mov
jle
or
nop
adc
testl
pop
xor
rolb
into
push
jns
fistps
adc
xchg
sub
mov
imul
call
or
pop
and
inc
sbb
fisubrl
out
stos
xorb
and
imul
pop
out
push
adc
cli
sub
jbe
inc
lods
test
cmp
insb
or
cmp
jge
aas
fistl
add
push
cmp
shlb
sbb
xor
gs
mov
xchg
xchg
fs
inc
test
mov
jmp
or
mov
or
xchg
cmp
inc
inc
mov
push
sub
and
xchg
mov
mov
adcb
fisubl
je
xor
jg
mov
jbe
xchg
cmp
mov
icebp
pop
mov
cs
in
dec
xor
dec
add
xchg
mov
sarl
gs
in
decl
cmpsb
push
pop
push
out
clc
fstp
cli
cmc
fcomip
jne
push
adc
test
shl
jmp
addr16
outsl
sahf
and
sub
lock
iret
test
stos
dec
aas
loopne
call
mulb
pop
and
out
adc
sbb
dec
jns
divl
outsb
rorb
andl
pop
xor
aas
xsavec
cmp
mov
cmp
aad
xchg
divl
int
or
pop
inc
pop
add
xchg
inc
add
cli
push
fcoms
dec
repnz
add
fldt
add
rcl
test
jnp
xchg
lahf
or
sub
pop
push
sti
jecxz
sub
shlb
ljmp
pop
jmp
mov
sahf
testl
or
leave
mov
popa
and
subb
dec
insb
cmp
mov
mov
sarb
ss
insb
xor
out
lahf
clc
cmp
in
out
sub
mov
insb
and
push
jb
adc
mov
push
test
lock
mov
icebp
jnp
pusha
adc
int
ds
sbb
js
sub
int3
scas
adc
fbstp
daa
xor
ffree
pop
dec
push
or
xor
xor
xchg
jno
push
jnp
xchg
in
cltd
out
testb
test
jp
mov
pusha
add
mov
adc
mov
adc
pushf
addb
and
arpl
cld
into
rorb
lock
sbb
icebp
jp
mov
push
out
data16
xor
add
xchg
fdiv
fwait
sarb
and
out
pop
mov
out
sbb
jb
add
mov
ljmp
pop
mov
cmpsb
pushf
pop
inc
cli
lods
and
pop
push
fdivl
les
xor
in
das
fcoml
icebp
icebp
clc
add
xor
ds
dec
dec
cs
adc
and
or
add
mov
subl
sub
cwtl
stos
notl
or
int3
aas
and
xor
dec
in
mov
pop
jne
pop
movsb
pop
sbb
xchg
sub
out
inc
dec
inc
scas
fnstcw
in
and
das
ret
push
mov
and
mov
jo
inc
lds
or
movsl
and
das
and
nop
push
sub
cmpsl
jne
fistl
arpl
xchg
jno
mov
sub
js
scas
ret
sbb
mov
inc
outsb
in
adc
sbbb
push
mov
shll
push
pop
mov
mov
bnd
dec
xorb
xor
adc
gs
add
pop
loopne
jne
dec
insl
js
test
adc
into
inc
and
and
stos
neg
lsl
stos
xor
bound
stc
xchg
inc
mov
out
push
loop
push
in
sbb
ficoms
insl
je
aaa
int3
sbb
inc
loope
adc
ret
push
and
xchg
mov
xorl
push
insb
mov
fwait
es
jmp
test
repz
outsb
jno
int3
jl
and
push
mov
leave
lods
jecxz
iret
adc
sub
mov
mov
addl
and
adc
sbb
push
nop
cmp
mov
jge
fdivrp
mov
cs
scas
pop
jnp
test
jo
loop
push
gs
out
xchg
imul
test
sbb
mov
imul
sti
inc
push
xchg
movsb
fistl
jge
movsb
flds
frstor
movsl
xchg
fwait
fwait
lock
psraw
push
xor
sbb
in
stos
jg
push
push
pusha
dec
sbb
and
sbb
leave
jae
dec
adc
ljmp
stos
out
pop
jle
or
dec
ret
addb
dec
in
mov
js
dec
xchg
pop
sub
icebp
in
mov
sub
in
rol
rcrb
mov
pop
push
repnz
xchg
xorl
pop
fildl
outsl
in
fsubp
xchg
int
push
ss
out
jno
jne
pop
jo
inc
dec
neg
and
sub
sub
or
mov
popa
dec
bound
fcomip
inc
cmpsb
mov
movsb
inc
je
mov
das
icebp
fucomp
jb
xor
jno
daa
movsl
lcall
rcrb
lahf
sarb
cs
dec
lret
cmp
inc
mov
ret
sbb
push
cmp
mov
mov
jae
out
cltd
lock
mov
xchg
subl
fistps
mov
push
add
sub
lds
lock
xchg
fwait
cmc
test
cwtl
out
js
pop
insb
push
or
adc
push
je
sub
xchg
movsl
shl
add
mov
fwait
mov
xor
pop
dec
sbb
pop
inc
adc
push
enter
mov
inc
ja
adc
sbb
aad
adc
pop
sti
mov
mov
or
and
jb
sbb
lods
nop
andl
loop
fucomi
aad
sbb
sub
cmp
fcmovu
int
enter
pop
aad
data16
loop
in
sbb
scas
test
or
mov
cmpsb
in
inc
sub
jecxz
xchg
add
pop
jae
sbb
stc
call
mov
jl
iret
test
insb
sarb
imul
idivb
dec
dec
dec
xor
mov
pop
stos
xor
lret
xchg
out
cmp
cld
inc
xchg
mov
daa
not
pop
lcall
add
xor
scas
cltd
sbb
jle
jle
int3
jne
out
sub
adc
adc
inc
pop
pop
call
lahf
push
hlt
mov
lods
push
adc
mov
sub
xchg
mov
data16
cmp
add
out
push
mov
sub
xchg
xchg
mov
mov
ja
out
push
or
jg
loop
lods
mov
ljmp
fnsave
shll
out
gs
scas
mov
push
lods
or
adc
scas
sar
xchg
leave
jnp
jge
xchg
jge
sub
aad
das
stos
ss
ljmp
cltd
jg
push
subb
jns
jmp
or
cld
gs
lea
clc
bound
lcall
push
xor
xchg
outsb
data16
push
inc
std
icebp
ja
push
mov
xor
pusha
sub
jmp
or
sub
sub
jg
add
jl
es
or
cmp
out
out
scas
repz
push
test
sahf
icebp
xchg
mov
insl
jb
pop
pop
imul
pusha
add
into
lds
pop
fsubl
fldl2t
pushf
push
ds
fists
in
cmp
push
cmp
or
das
aam
shlb
pop
mov
inc
jne
push
jne
andl
or
push
mov
daa
push
lahf
cld
in
fsts
mov
and
gs
pop
pop
andnps
mov
lock
xor
cmp
loop
mov
out
cmp
rolb
ret
xchg
subb
dec
cmp
aas
mov
jmp
imul
jl
fiaddl
add
repnz
test
push
cmpb
cmpsl
inc
mov
mov
lods
sbb
push
sbb
add
dec
xchg
or
xor
jae
into
mov
fchs
or
jns
add
test
scas
dec
xor
lds
out
push
mov
inc
jbe
jne
into
xor
sub
lds
das
lret
adc
add
mov
fldcw
mov
or
cmpsl
adc
jecxz
repnz
mov
cwtl
clc
lods
ret
js
sbb
cmpl
pop
add
ja
sub
mov
out
mov
inc
rcrb
lret
ret
or
mov
push
stos
sbb
aas
adc
adc
testb
inc
call
sub
xor
cmp
sbb
mov
push
pop
outsb
fiadds
or
lock
jns
dec
stc
popa
jmp
mov
cmp
pusha
mov
hlt
in
xor
imul
divl
shrl
stos
je
jp
aas
pop
frstor
fsubr
adc
mov
enter
call
mov
push
pop
inc
push
int
push
adc
lods
push
xlat
cltd
insl
xor
dec
es
cmp
push
push
negl
push
push
xor
push
ds
mov
cli
movsb
dec
jo
mov
xchg
xchg
sub
adc
mov
xchg
push
jno
pop
jp
cs
rclb
cld
or
cmpsb
dec
pop
cmp
lret
rcl
aam
cmpsb
div
xchg
adc
repz
jg
out
xchg
pop
push
sbb
xchg
test
adc
lret
rorb
lret
inc
cmp
jp
mov
fidivrs
int3
ret
and
xchg
gs
sub
fnstcw
mov
xor
idiv
mov
xchg
adc
sub
inc
std
mov
enter
push
mov
dec
shl
pop
xchg
cmpsb
cmp
mov
inc
sub
sbb
cmpsb
cmc
sub
and
adc
ja
shrb
inc
push
adc
xlat
loope
test
mov
daa
data16
jns
push
and
enter
adc
push
lcall
in
ss
popa
mov
int3
in
or
and
repz
sbb
cmp
fisubrs
or
push
push
mov
into
add
xchg
mov
push
xor
fiaddl
pop
dec
or
ud1
pusha
mov
mov
inc
jl
jmp
push
addr16
push
stc
into
cmp
pop
aas
adc
jl
imul
es
dec
out
xor
std
clc
test
dec
scas
jmp
pop
cs
mov
fs
jle
mov
hlt
add
loop
push
inc
mov
jg,pt
jecxz
xor
mov
aas
icebp
dec
add
fbstp
adc
inc
icebp
jle
or
mov
push
test
dec
std
mov
lods
and
inc
jb
inc
jecxz
shl
mov
push
out
fdivrs
sbb
mov
movsb
lods
lret
lds
xchg
dec
cmpsl
sbb
jne
aas
pop
mov
rclb
mov
fnstenv
enter
nop
mov
push
enter
cmp
movsl
pop
mov
insb
inc
enter
fmul
lock
insl
jle
add
add
xchg
mov
imul
scas
rorl
nop
sbb
lds
mov
divl
stos
mov
xchg
out
lods
adc
mov
mov
popf
inc
movsl
mov
jle
fidivl
fs
test
cmpsl
dec
push
repnz
push
cmp
daa
dec
dec
mov
or
fidivl
cli
lea
sbb
mov
gs
dec
add
cmpsb
add
pop
loop
je
fistl
push
leave
xor
cli
pushf
mov
mov
pop
mov
push
jae
dec
and
jmp
sbb
fcomp
mov
xor
mov
gs
sbb
in
test
scas
dec
jo
cmpsl
insb
clc
xchg
dec
in
adc
inc
in
sub
or
cwtl
adc
jns
loope
cld
addr16
test
xor
mov
lock
jns
sbb
fbstp
dec
mov
dec
out
jecxz
inc
outsb
clc
aam
pop
stos
jecxz
ljmp
jmp
sub
and
cmpsb
test
sbb
mov
mov
mov
rolb
aas
ret
ljmp
aas
cmp
jmp
fidivs
adc
test
imul
and
push
mov
sbb
sbbl
push
aad
cmp
jecxz
xchg
fwait
addr16
mov
in
jno
movl
in
adc
adc
or
cmpsb
xor
push
push
hlt
ds
jnp
and
cwtl
cwtl
inc
inc
mov
mov
jle
or
jp
stos
fcoms
iret
adc
std
movsl
aaa
or
jecxz
dec
loopne
xchg
imul
addl
cmpsl
or
cld
sub
add
ljmp
mov
mov
adc
pop
or
sahf
scas
adcb
jg
add
movsb
mov
jb
mov
mov
inc
std
adc
je
psllq
jp
hlt
jno
sub
add
cli
fisttpl
sub
orb
mov
enter
xor
jge
inc
mov
sahf
pop
xchg
arpl
ljmp
scas
mov
inc
subb
dec
jo
add
loopne
test
xchg
sbb
daa
pushfw
adc
mov
int
aam
mov
dec
xchg
shll
sub
int
or
shlb
fldl
shll
stos
cmp
into
inc
and
sbb
sbb
inc
jb
lret
xchg
jge
shll
jnp
test
push
pushf
fnstsw
push
repnz
dec
push
jbe
add
insb
mov
add
outsl
and
lea
imul
lahf
or
or
cmc
pop
test
test
add
lcall
adc
popf
cmp
enter
leave
dec
roll
mov
add
cwtl
xor
mov
push
and
hlt
stc
fwait
xchg
stos
lahf
xchg
loope
pop
mov
ljmp
mov
and
fcomp
inc
add
cmpsb
lret
jmp
cltd
shrb
mov
mov
push
inc
push
outsl
testb
push
std
andl
ss
data16
jo
xor
iret
sub
inc
cmp
loope
lret
roll
call
inc
inc
fs
pop
sbb
lods
add
out
push
sub
outsb
inc
leave
cltd
mov
dec
stc
lds
shl
mov
dec
sub
jmp
jne
mov
adc
mov
pop
ja
ss
hlt
mov
mov
popl
sbb
in
ljmp
dec
fs
pop
xchg
pop
jns
add
sub
pop
inc
mov
sub
inc
push
sbb
sub
adc
mov
repnz
inc
mov
in
gs
jge
stos
adcb
leave
cmp
adc
aam
xor
shl
jp
aaa
pop
insl
add
mov
sahf
sbb
ss
jb
insl
or
jmp
lret
xchg
dec
inc
repnz
les
cmpsb
push
call
push
and
cmp
sbb
mov
movsb
rorl
out
or
push
xchg
lret
mov
dec
lock
sub
movzbl
sbb
and
stos
mov
hlt
sub
xor
nop
insb
outsb
xor
cwtl
popa
inc
jp
sub
pop
xchg
pop
loopne
jne
push
adc
jo
pushf
mov
cmpsb
mov
imul
mov
jecxz
ja
gs
icebp
ror
adc
xchg
mov
and
mov
fcoml
mov
mov
fadd
push
add
outsl
adc
in
pusha
jo
repnz
inc
mov
out
inc
xchg
int
push
push
ret
mov
leave
testl
inc
and
xor
fs
push
mov
es
loope
sub
enter
mov
andl
jnp
fs
jno
ret
lcall
xor
dec
repz
cld
adc
dec
xchg
or
in
cmp
push
jmp
mov
mov
das
out
push
lods
add
inc
add
adc
loope
ror
out
add
adc
pop
cmp
push
aad
push
js
sub
pop
mov
jg
xor
and
aam
adc
les
scas
adc
in
push
test
inc
inc
push
and
sub
or
pop
or
xchg
xor
dec
int3
imul
sbb
popa
xchg
jmp
add
mov
cmc
inc
enter
inc
xchg
xchg
bound
xor
adc
jae
subl
int3
push
push
or
pop
cld
insl
cld
mov
fcmovnu
lods
out
andl
dec
and
hlt
test
shr
sub
xor
loop
xor
cmp
outsl
call
xor
jecxz
loop
jp
nop
lcall
xchg
call
je
adc
mov
insl
add
lret
gs
dec
icebp
mov
cli
pop
mov
add
addr16
add
dec
xchg
je
push
repz
add
fstl
loope
or
cld
mov
sub
nop
jmp
iret
sub
gs
mov
mov
aas
mov
iret
jmp
mov
inc
cmpb
lods
f2xm1
mov
mov
mov
pop
push
cwtl
addb
or
popa
into
orl
inc
mov
mov
xor
jge
cmp
sbb
rcr
leave
in
shl
push
mov
mov
adc
add
or
push
and
inc
sti
cmpsb
jne
cli
mov
mov
fs
inc
pop
xchg
cmpsb
sbb
pop
add
mov
dec
outsl
mov
insb
ret
enter
rol
cmpsl
jmp
fcompl
xchg
push
sbb
rcl
js
xchg
mov
call
repz
or
adc
jecxz
call
loop
mov
hlt
sub
mov
imul
push
jmp
mov
sub
mov
push
xchg
and
fs
andl
fwait
leave
sub
adc
sub
ja
adc
push
mov
arpl
pop
fwait
inc
scas
push
and
insl
mov
fnsave
test
out
inc
sbb
add
inc
or
push
mov
ja
lea
cmc
cmp
sti
xor
xchg
lods
movsl
dec
jge
dec
cwtl
mov
icebp
cld
fs
cmc
push
out
and
cmp
enter
mov
inc
jne
jb
and
loop
fidivl
jmp
push
cmp
movsl
push
out
jl
and
xchg
pushf
push
fimuls
jp
ljmp
push
outsb
xor
pop
fstpt
pop
arpl
jo
cmp
or
cmp
clc
cltd
out
pop
mov
and
data16
mov
or
dec
rcll
repnz
stos
fnstcw
mov
add
inc
imul
in
mov
xchg
nop
ljmp
gs
popf
cmp
mov
imul
mov
insb
mov
ds
jp
addr16
xor
dec
add
sub
popa
jno
inc
data16
mov
xchg
push
dec
dec
and
cli
lea
clc
inc
sbb
cmpsl
mov
inc
pop
or
movsl
sbbl
xor
stos
mov
push
cs
xchg
inc
aad
mov
cmpsb
jge
sub
dec
nop
pushf
loopne
into
dec
sbb
aas
rorl
mov
es
es
xor
inc
test
xchg
call
test
in
mov
out
fcomip
mov
push
inc
ss
or
inc
pop
neg
ficoml
pop
adc
daa
inc
repz
dec
pop
cs
cmp
imul
out
ret
cmp
rclb
cmc
jle
push
sub
cmp
mov
shl
jae
mov
imul
daa
out
xor
sub
outsb
mov
xchg
xchg
test
jl
xor
insb
pushl
adc
push
and
jne
fistps
jl
repnz
xchg
mov
fbld
sub
repnz
sub
cs
ja
ret
das
and
and
pusha
push
mov
sbb
mov
cmp
mov
pushw
ret
pop
inc
test
adc
adc
mov
jge
mov
insb
dec
dec
rcr
push
jae
les
pushl
cltd
scas
xor
pop
and
inc
dec
mov
mov
lcall
popa
js
gs
adc
xor
ficoml
mov
mov
mov
pusha
and
fistpll
sub
dec
mov
add
add
imul
ljmp
cmp
repnz
out
pop
data16
add
sbb
imul
arpl
push
sub
xorb
xlat
mov
cmc
xor
xor
adc
adc
ja
cs
xor
aas
jne
push
pop
in
int
int3
dec
dec
in
ret
lret
adc
mov
bnd
ja
insb
test
fcomps
and
mov
repnz
mov
inc
lock
mov
icebp
mov
dec
xchg
test
gs
mov
out
ss
dec
push
scas
and
xlat
inc
xchg
xorl
test
jbe
mov
inc
fistpl
mov
test
sub
push
push
enter
xchg
loopne
add
ds
out
ss
mov
push
mov
inc
add
aad
jl
into
jae
xchg
mov
jg
loop
dec
fisubl
inc
sbb
adc
mov
hlt
jns
dec
sub
dec
adc
jne
lcall
cmp
das
xor
das
push
cmp
fs
scas
ljmp
in
loope
jmp
stc
es
daa
dec
cmpsb
mov
rcrl
inc
mov
outsl
stos
mov
mov
outsb
or
pop
ss
xchg
je
add
out
lcall
mov
fstpl
adc
cld
repnz
ret
or
inc
mov
xor
dec
dec
out
lcall
jge
decl
lcall
ret
sub
mov
call
inc
mov
sbb
std
cmpsl
add
mov
pop
pusha
sahf
loope
shlb
jl
jno
lods
cmpsl
xor
xchg
insb
push
nop
xor
jae
xor
int3
and
in
xchg
lcall
rcll
add
nop
out
mov
enter
mov
inc
adc
mov
dec
cmc
mov
ret
aad
test
or
cli
fmul
and
in
jl
xor
inc
and
stc
pop
fistps
mov
inc
aam
push
mov
and
in
clc
js
pop
aam
sbb
rclb
xchg
mov
or
andl
mov
push
sbb
pusha
xchg
ret
aad
jbe
xchg
dec
addr16
adc
xchg
imulb
int3
iret
adc
cmp
arpl
xchg
call
fistpl
mov
popf
loope
adc
outsl
in
dec
xor
icebp
in
sar
mov
adc
adc
lods
push
cmpsb
test
sti
in
pop
fwait
dec
dec
inc
subb
pop
cmp
cmp
ret
mov
jg
int3
lods
rcrb
shrb
mov
cmpsl
push
pop
cmp
xchg
push
scas
mov
nop
adc
jo
push
cmp
inc
or
adc
gs
jp
ja
ss
sub
mov
shrd
retw
xchg
test
imul
jbe
or
icebp
xchg
fwait
xchg
sbb
jge
pop
xor
xor
std
popa
sahf
mov
shrb
adc
test
arpl
mov
iret
les
jmp
lock
inc
sbb
loope
shr
adc
mov
push
mov
sbb
loopne
out
cmp
adc
cs
rcrl
mov
les
cmp
lret
xor
bound
pop
movsl
mov
mov
inc
ljmp
xchg
push
ljmp
int
jle
mov
es
loopne
dec
mov
cld
repz
icebp
sub
mov
xchg
ds
int3
cwtl
inc
jnp
imul
cli
pop
mov
je
xchg
and
ja
iret
test
out
into
cld
int
dec
lcall
sbb
lods
test
nop
sahf
nop
xchg
jnp
add
test
jo
cmp
push
push
in
add
push
xchg
std
daa
stc
add
sbb
mov
mov
jno
cltd
and
jg
cmp
cmpsl
movsl
lahf
jp
fildll
faddp
add
xlat
lahf
pusha
insb
int3
scas
xchg
sbb
jmp
not
lret
mov
lods
jno
xor
jo
cs
and
xchg
cmpsb
mov
pusha
cmpsl
xchg
test
sub
ljmp
scas
cld
mov
shlb
les
mov
pop
jb
mov
mov
adc
arpl
loop
adc
lret
enter
lcall
aam
sbb
test
insb
jle
loop
call
arpl
aam
pop
data16
sub
test
pop
fimuls
fldcw
adc
xor
pop
test
adc
jns
pop
gs
adcb
ljmp
mov
jmp
jae
fisttpll
dec
arpl
mov
sbb
ja
lea
mov
xor
jae
adc
aaa
inc
nop
push
xor
xor
push
test
adcl
aaa
xchg
xchg
test
adc
int3
xor
arpl
outsl
mov
xchg
add
or
xchg
lock
insb
sbb
movsl
call
jecxz
pop
adc
add
mov
je
adc
add
mov
mov
test
imul
out
jo
dec
stos
je
aas
pop
pop
inc
hlt
pop
nop
mov
pop
cwtl
inc
xor
test
out
lcall
test
popf
pushf
jp
insb
mov
adc
jno
lock
stos
inc
std
adc
ds
aad
and
dec
scas
inc
loop
hlt
dec
into
sti
cmp
sbb
xchg
add
arpl
clc
mov
mov
add
ja
aas
mov
push
idivb
outsl
scas
jne
and
add
insl
hlt
dec
rcr
cltd
lret
fldt
nop
test
inc
add
sub
js
sbb
sarl
xor
lahf
sub
in
add
inc
pop
adc
push
shrl
leave
leave
mov
mov
lcall
cwtl
ret
int
loope
addl
nop
or
sbb
jmp
in
test
mov
outsb
sub
fneni(8087
pop
pop
sbb
loopne
cmpb
or
adc
iret
and
je
cmp
mov
aam
imul
mov
mov
in
std
lcall
lret
fisttpll
les
dec
lea
jmp
inc
jb
cmp
lods
add
mov
leave
sbb
sbb
cwtl
push
or
fsubs
lods
pop
dec
pop
sti
test
dec
mov
mov
loop
jbe
adc
out
lret
ret
ret
in
mov
mov
dec
push
adc
jnp
xor
pop
lods
cmp
in
pusha
lods
push
leave
jg
mov
xchg
lcall
mov
ret
cmp
sti
add
ret
daa
mov
dec
ret
sub
inc
sub
adc
xchg
test
xor
add
push
push
pop
loope
mov
jnp
dec
mov
loop
gs
pop
pushl
enter
mov
xchg
decb
mov
lods
cmpsl
push
imul
addr16
sub
leave
sbb
jno
clc
mov
dec
inc
or
cltd
pop
not
js
in
in
adc
jbe
les
repnz
in
or
lock
dec
mov
jmp
call
clc
lret
lock
dec
pop
or
cmp
jmp
pop
cmp
xlat
xchg
addr16
xor
lea
push
push
negl
sbb
add
jle
js
push
popf
fwait
mov
fwait
lahf
push
pop
repnz
mov
xchg
sub
pop
push
inc
lret
nop
add
fwait
xchg
in
sub
add
mov
int
lods
mov
mov
pop
jbe
cmpsl
hlt
sbb
scas
subl
or
adc
aad
fucomp
lret
adc
in
outsl
arpl
outsl
stos
dec
jns
cli
adc
shr
ljmp
inc
in
rcrl
jge
dec
in
int
xchg
jecxz
into
fisttps
dec
rcrl
pusha
mov
cmp
jo
gs
mov
in
push
adc
sub
push
shl
aam
mov
and
sti
push
ds
dec
sbb
sbb
stc
cmova
pop
test
mov
leave
sbb
sub
test
sbb
cmp
cmp
and
shlb
xor
mov
sub
scas
dec
dec
mov
pop
gs
insl
shll
lods
push
rcpps
ret
dec
das
incl
mov
data16
loop
and
cmc
lret
scas
push
leave
sub
sbb
leave
adc
nop
test
leave
dec
cmp
popf
cmpsl
xchg
inc
and
int
sbb
fcomps
outsl
pop
pop
mov
and
and
test
xor
dec
jns
js
fcoms
and
add
push
ss
lea
sub
inc
jno
popa
iret
pop
mov
dec
mov
enter
fldl
jmp
repz
fsubr
jnp
jbe
xchg
enter
loope
movsl
adc
and
mov
add
mov
fwait
movsb
fsubl
shll
shll
pushf
incl
das
adc
sub
pop
fsubrs
mov
rolb
rorb
sti
mov
xorl
pushf
mov
and
js
lds
push
insl
or
mov
cmpsl
decl
sbb
lcall
sbb
cmpsb
jno
stos
xor
push
fs
jo
insb
lret
shrb
sub
pop
push
sub
dec
and
push
push
add
mov
sub
push
xor
add
sub
imul
pop
adc
sbb
rcrb
aas
adc
adc
cmpsl
rclb
nop
nop
dec
cmp
faddp
pop
push
adc
nop
mov
sub
sbb
mov
inc
inc
mov
jne
jmp
dec
lret
dec
xchg
or
mov
mov
mov
xchg
mov
fdivrl
popf
push
push
jge
in
movsb
mov
lahf
mov
push
scas
xor
pusha
jne
inc
xor
mov
push
shr
imul
mov
push
sti
mov
test
pop
and
xchg
jecxz
mov
outsl
mov
leave
ss
cmp
sbb
mov
pop
sub
mov
rorl
xchg
mov
enter
xor
mov
ret
pop
ja
jbe
imul
pop
lcall
jae
jp
imul
mov
add
xchg
push
mov
xchg
pop
adc
jmp
not
mov
mov
dec
pop
lret
add
inc
mov
imul
cmp
daa
add
movsb
das
dec
mov
hlt
sub
push
movsl
sbb
and
out
cmp
lea
jo
insl
addr16
push
or
sti
or
mov
jbe
mov
add
mov
xor
pop
imul
mov
pop
inc
inc
and
sub
add
cmpb
mov
mov
mov
push
iret
ljmp
add
dec
jecxz
ss
jnp
pop
mov
popf
xchg
ds
inc
pop
pop
xchg
dec
sbb
push
std
subl
pushf
sbb
add
or
mov
jne
fmull
jbe
popa
pop
inc
push
mov
cmpsl
cmpsl
stc
loopne
inc
xor
je
lret
rcrl
mov
xchg
pop
cmp
ljmp
pop
js
movsb
jl
xor
push
mov
pop
jl
xchg
mov
sub
mov
dec
mov
scas
jo
mov
xlat
inc
push
adcl
sarb
test
xor
in
or
fdivp
inc
and
sbb
inc
test
cmpsb
aaa
sbb
ficomps
xor
mov
mov
jp
adc
xchg
mov
sub
sbb
sti
mov
pop
mov
sbb
push
sub
ja
add
inc
cltd
mov
mov
pushf
inc
call
mov
xor
dec
outsb
or
inc
jmp
cltd
or
leave
sub
in
lcall
push
movsl
and
fisubrs
add
pop
mov
addr16
cwtl
xor
insl
and
cli
jne
imull
xor
mov
mov
lods
mov
xor
imul
mov
imul
scas
dec
iret
adc
mov
ret
xor
mov
ljmp
leave
fstps
mov
jg
xor
outsb
xor
sarl
cmc
mov
rol
repz
push
repnz
lahf
add
jnp
in
imul
sarl
cmc
lods
push
lret
add
pop
dec
jae
push
jecxz
mov
ds
mov
out
arpl
rclb
xchg
adc
jle
shl
or
test
shlb
dec
ss
and
testl
xchg
fwait
or
fsubrl
adc
mov
mov
test
filds
fstps
in
sub
bound
clc
stos
aas
pop
xor
dec
mov
cmp
out
inc
mov
iret
jnp
jns
pop
rorb
negb
stos
dec
xorb
lret
sub
pop
fisubs
movsl
ljmp
or
cwtl
in
ror
push
outsb
ficompl
movsb
in
add
dec
mov
sub
xorb
in
or
sahf
xchg
dec
lds
cmp
cmp
pusha
pop
insb
adc
aas
add
mov
dec
insb
mov
xchg
add
jmp
decb
cltd
sub
jbe
shll
movsl
cwtl
mov
cmc
imul
cmp
stos
or
mov
mov
mov
loop
or
sub
sub
cmp
lahf
fcomps
cltd
add
cs
cmc
jge
mov
adc
pop
cmp
idivl
pop
dec
inc
jb
jecxz
xchg
pusha
adc
sub
adc
js
arpl
mov
push
pop
add
sbb
out
xchg
dec
mov
add
leave
push
ljmp
sbb
test
mov
inc
mov
lret
rclb
imul
mov
push
loopne
xchg
shr
fs
testb
sbb
xor
fisttpll
shlb
pop
out
xchg
sub
sahf
lcall
jg
push
fldz
lock
adc
lret
mov
pop
xchg
sti
sbb
js
int
movsw
mov
out
jb
iret
add
int3
pop
dec
das
and
clc
loopne
push
mov
je
cmpl
enter
insb
cmp
inc
cmp
jne
cmp
inc
dec
rcrl
bound
pop
ljmp
push
jns
fs
cmpb
and
lods
add
inc
aam
outsl
add
pop
nop
mov
andl
test
mov
jecxz
push
sahf
add
movl
add
cmpl
or
bound
repz
and
fmulp
inc
testb
enter
sub
mov
xlat
mov
mov
inc
scas
sbb
add
sahf
fmulp
popf
loope
ret
cmp
std
sarl
test
dec
xor
xchg
jmp
icebp
cmpl
dec
mov
add
cmp
xor
pop
mov
push
xor
test
mov
shl
xchg
ja
lcall
cmp
xorb
push
outsl
sbbl
outsb
les
movl
repz
sahf
dec
rcrb
push
ret
xchg
mov
hlt
mov
or
and
sarb
dec
pop
dec
jecxz
fstpt
mov
sub
cmpsl
iret
mov
fistps
cld
jne
scas
scas
pop
cmp
push
xchg
ret
stc
push
pop
add
sub
cltd
mov
daa
out
xchg
sub
xchg
jno
xor
adc
imul
test
dec
fcmovnbe
inc
cmp
pop
mov
mov
pusha
insb
mov
clc
add
lea
pusha
and
sbb
dec
inc
test
sub
jle
mov
addl
add
js
mov
push
popf
jg
mov
outsl
adc
inc
loope
mov
pop
rorl
jge
sub
sub
out
pop
xor
cwtl
test
fmuls
add
cmpsb
or
in
mov
scas
pop
ja
mov
daa
adc
out
ret
xchg
hlt
call
adc
test
dec
mov
and
scas
rclb
pop
mov
push
mov
pushf
int
xchg
andl
mov
and
loopne
adc
cmpsb
inc
dec
and
aaa
push
cli
ss
and
mov
jne
inc
jae
adc
inc
cmpsb
xchg
inc
and
pop
sub
icebp
inc
scas
ja
xor
push
adcl
inc
dec
pusha
scas
int3
mov
xor
fcmovne
faddl
mov
mov
or
out
jbe
jle
popf
fisubl
jmp
data16
repz
mov
lret
bound
push
push
mov
nop
xlat
jmp
add
xchg
mov
cmc
insb
fcomps
jg
xchg
dec
push
in
loope
repnz
out
movsb
fucomip
jo
test
hlt
pop
xchg
out
cli
dec
adc
adc
xor
adc
repz
std
xor
mov
or
fstps
and
xchg
dec
int3
test
xor
adc
pusha
mov
inc
sbb
jle
pop
imul
loop
push
mov
or
lahf
stos
call
or
xor
cwtl
fwait
sbb
repnz
nop
sub
inc
pushaw
outsb
jl
xchg
inc
mov
in
or
lods
mov
xor
sub
adc
cmp
sub
movsb
aas
or
mov
push
push
je
push
es
xor
ss
and
dec
movsl
repz
sub
dec
repnz
out
push
std
cmp
aas
push
cmpl
jge
je
cmpb
sub
cmpsb
aad
imul
jle
mov
push
outsb
adc
cli
cmp
adc
daa
mov
rcll
dec
stc
outsl
jne
out
mov
cwtl
sbb
jb
addr16
popf
jo
int
add
push
jnp
cs
add
add
inc
jmp
movsb
adcl
insl
jnp
adc
fisubrl
pushf
xchg
cmp
andb
arpl
add
ret
pop
sbb
xor
test
dec
rcr
ja
push
mov
push
inc
xlat
mov
mov
scas
xchg
scas
mov
repz
dec
fmull
or
pop
subb
push
xchg
in
fistl
gs
mov
inc
test
fwait
lahf
fwait
xor
add
repz
cmp
xchg
loope
or
ljmp
mov
jne
cmp
and
or
out
in
and
sbb
add
fiadds
or
notb
dec
popa
dec
cld
rcll
data16
repnz
sub
cmp
fwait
scas
cs
cmp
loopne
ret
xlat
xchg
sub
xlat
sub
mov
jo
movsb
and
out
xchg
jmp
shrl
cli
xchg
inc
jge
pusha
push
mov
test
pushf
lret
sbb
jge
aam
jle
incb
jge
popa
ret
test
addr16
nop
dec
idivl
lret
movsl
xchg
fisubrs
stos
xor
addr16
add
std
mov
iret
ds
clc
add
xor
dec
test
repnz
lahf
or
push
mov
adc
pop
cmc
in
and
scas
push
push
adc
into
mov
add
cmp
es
pop
sub
and
mov
xchg
shlb
pushf
loop
xchg
adcl
iret
bound
lods
pop
rcll
cmp
mov
add
push
nop
dec
pop
jmp
push
pop
or
mov
dec
pop
jb
cld
and
sbb
mov
or
mov
popa
leave
arpl
rcl
mov
ljmp
fmull
pop
shr
and
adcb
cld
fisubrs
push
xor
cmp
ret
jb
mov
in
xchg
lods
or
loope
pop
sub
add
addb
mov
pop
mov
jb
test
or
aaa
fists
jle
fidivrl
pop
imul
movsl
outsb
mov
and
mov
sbb
pop
lods
pop
sub
bound
add
mov
cltd
out
aad
outsl
jle
lods
sub
out
imul
repz
test
adc
fimull
mov
std
xchg
sbb
mov
cmp
iret
inc
push
inc
dec
jmp
mov
push
test
in
jecxz
adc
and
aas
push
xchg
test
insl
sbb
xchg
pop
jecxz
stc
fwait
jmp
popa
std
sub
dec
sbb
mov
inc
pop
pop
add
into
add
stos
iret
insb
jno
call
mov
lds
add
push
mov
mov
and
gs
push
in
dec
cmp
inc
lret
sbb
enter
fs
lea
sub
dec
lret
xlat
dec
sbb
mov
test
fisubs
shll
push
test
outsl
mov
test
sbb
addr16
mov
inc
cmp
and
aad
lcall
fwait
sbb
fldcw
jmp
icebp
shl
mov
mov
das
xchg
callw
fcmovbe
call
dec
cmc
mov
pop
jl
cmpsb
jmp
hlt
out
sahf
mov
mov
pusha
push
leave
mov
aad
repnz
dec
jbe
pop
outsl
add
xchg
mov
cmp
test
sbb
int
mov
xchg
xor
ret
arpl
mov
aad
add
push
jae
dec
lret
test
jb
test
scas
add
mov
pop
scas
call
mov
and
icebp
xchg
pop
jnp
fdivr
sbb
cmpsl
and
mov
xor
inc
xlat
fs
popa
sbb
jne
jmp
fsubl
mov
insl
xor
mov
xor
xchg
outsb
sahf
out
xor
roll
lahf
xor
cwtl
into
mov
mov
pushf
outsb
into
sti
push
aam
lods
iret
xorb
icebp
pushf
jae
push
adc
insl
in
in
nop
insl
outsb
jl
stos
pop
mov
pop
jg
dec
xchg
sub
stc
mov
pop
aaa
fstpl
bound
sbb
fs
push
push
and
daa
sub
stc
cmc
sub
scas
jl
pusha
mov
stos
jns
push
inc
mov
cltd
fxch
ja
sub
pop
jmp
push
xorb
pop
jo
into
scas
andb
into
xor
data16
lahf
xorb
dec
sub
inc
adc
out
popa
movsl
cmpl
in
push
and
xor
xor
arpl
test
daa
adc
mov
loope
xchg
sub
in
or
pop
jmp
stos
mov
orl
jp
fsubrl
out
fistpl
jo
sbb
test
fldcw
pop
and
push
sbb
push
cld
ds
adc
cld
adc
push
mov
fmull
push
sbb
popa
in
xchg
enter
push
dec
mov
pushf
lea
push
jecxz
mov
nop
scas
xchg
rclb
pushf
jmp
xor
rolb
rorb
add
mov
enter
subb
bnd
jle
in
shll
orb
in
outsl
and
mov
sbb
loop
popf
xor
fnstcw
sbb
out
sahf
mov
push
push
inc
mov
add
add
fistpll
or
and
popa
negl
addr16
incb
xchg
call
push
jge
int
aaa
test
scas
ret
fiaddl
xor
push
mov
jle
mov
cli
dec
adc
mov
out
mov
fwait
or
push
dec
mov
popf
insb
and
fidivrl
scas
shlb
sub
mov
jo
test
push
add
push
insl
cwtl
mov
adc
pop
and
sub
into
daa
mov
adc
insb
andb
sub
inc
test
xor
cmp
fiadds
cmp
mov
movsl
arpl
sti
xor
or
jp,pt
jnp
stos
adc
scas
lcall
sub
fsub
cmp
enter
imul
jbe
push
sbb
pusha
fwait
imulb
push
fldenv
dec
inc
std
xor
aas
sahf
add
sahf
test
inc
jb
aaa
repz
jo
loopne
popf
push
out
mov
jnp
fildl
in
arpl
aam
js
pop
das
add
push
mov
mov
jo
and
pop
mov
popf
in
add
pop
dec
movsb
cmpsl
out
push
sub
sbb
aam
dec
ja
sar
adc
push
insb
xor
pop
cltd
cmpsb
xor
add
test
popf
pop
inc
insl
and
cli
addr16
outsl
push
leave
jne
iret
jb
popa
jnp
dec
push
sarl
mov
jne
lea
xor
adc
lea
ljmp
add
dec
push
mov
push
add
les
scas
adc
add
jmp
out
cmp
jp,pt
or
mov
js
test
dec
test
std
jnp
push
dec
stos
fisubrl
fmuls
or
sbb
loope
xchg
mov
dec
jmp
gs
xchg
out
test
push
popa
cld
or
pop
aas
fwait
in
lods
outsl
cmp
jno
or
imul
repz
adc
and
rcrl
or
add
mov
mov
dec
xchg
inc
jle
fcomps
js
xor
rcll
mov
xchg
pusha
xchg
rcr
dec
fimull
int
stc
hlt
mov
out
mov
lods
mov
add
dec
andb
pusha
cld
jae
jp
in
cmpsl
inc
insl
stc
and
inc
shll
es
mov
mov
fsub
stos
repnz
pop
sub
inc
jno
loop
add
mov
cmp
cwtl
inc
jmp
repz
or
add
sbb
popa
mov
jnp
fcmovb
bound
cs
inc
outsl
push
andb
add
xor
sbb
jmp
enter
push
inc
push
xchg
pop
call
pop
fisttpll
xchg
in
sbb
xchg
call
fisubs
popf
ret
mov
dec
fimuls
repz
jecxz
call
imul
fisttpll
sete
cmpl
dec
cmp
cwtl
xor
mov
or
push
sbb
or
dec
mov
or
aas
pop
test
push
xor
xor
cmpsl
fidivs
lds
add
pop
xor
icebp
fdivrl
lods
sbb
xchg
jl
clc
adc
fdivrl
scas
leave
mov
inc
fidivrs
les
outsb
icebp
push
js
jle
jne
inc
sub
push
or
xchg
inc
nop
stos
or
jp
cmp
or
sub
sbb
out
icebp
jbe
call
aas
aaa
mov
jmp
repnz
cmpsl
dec
pause
cmp
sub
imulb
loope
push
mov
lds
insl
ds
sbb
sahf
fnstenv
xlat
jo
xor
cmp
dec
mov
dec
inc
push
add
call
add
mov
loope
pop
sbb
pop
test
dec
arpl
dec
jbe
pop
shl
outsb
aad
aam
pushl
pop
sub
lcall
ret
data16
pop
aaa
mov
loopne
xchg
sub
rorl
add
enter
loope
sbb
push
push
adc
mov
movsb
sub
sbb
lret
popa
outsl
cmpsb
mov
cmp
repz
mov
or
mov
cmpsb
cld
loope,pn
adc
into
jl
in
jl
sbb
push
daa
xlat
sub
jno
leave
and
inc
fbstp
jne
loope
inc
sbb
int3
out
adc
add
mov
and
stc
jmp
mov
iret
fildl
int
lock
lret
dec
cmpsb
and
mov
jb
cmpsl
push
xor
mov
jno
popa
outsb
and
lahf
or
lea
test
movsb
int
jb
dec
inc
js
lret
mov
and
pop
test
jno
ljmp
xchg
sub
pop
jg
pop
dec
fimull
xchg
pop
fldl
push
enter
lahf
sub
xor
xchg
jle
pmaxsw
inc
ja
inc
movb
out
pop
int
jnp
mov
stc
and
push
ja
mov
pop
les
push
in
dec
xor
mov
fidivrl
lcall
mov
sbb
sahf
and
xor
sub
mov
ds
jmp
add
xchg
inc
jno
fcomi
imul
lods
xchg
ret
dec
sub
movsb
outsl
rcrb
cld
bnd
mov
lcall
jmp
les
cli
rorb
adc
or
cmpsb
shrl
xchg
int3
inc
divl
mov
scas
jno
push
lods
ret
cltd
sahf
mov
jnp
add
cmovno
test
shlb
pop
ret
insb
xchg
dec
cmp
sbb
inc
movsb
lds
mov
push
or
mov
popf
pop
or
int3
in
pusha
pop
push
in
mov
dec
in
xor
xchg
shll
cmp
sar
cltd
xchg
mov
xchg
and
sbb
adc
nop
mov
test
xor
call
cmp
adc
js
fistpl
mov
add
inc
gs
lods
inc
scas
aaa
pop
push
dec
scas
cmp
lock
xchg
xchg
enter
fs
sbb
sbb
mov
clc
test
jg
jle
push
sub
sbb
jbe
or
stos
push
pop
inc
dec
mov
das
mov
mov
leave
adc
sub
mov
ret
jle
arpl
ja
shlb
filds
mov
fildll
test
cmp
pop
mov
xor
pop
adc
pusha
sbb
subb
shr
jbe
mov
jmp
sarb
pop
daa
sub
xchg
aam
iret
fsub
cmp
lea
adc
ret
jno
lods
scas
dec
orb
jbe
aas
rcr
fimull
add
mov
aam
or
push
push
pop
jp
enter
xor
xlat
push
adc
push
pop
imul
inc
cmp
add
ficompl
addr16
stos
push
sbb
push
dec
mov
popf
je
jg
sub
and
hlt
std
arpl
mov
sbb
and
in
aaa
xlat
adc
stos
inc
add
dec
jno
xor
push
pop
mov
flds
lcall
mov
add
shll
xchg
cld
jb
insb
mov
mov
bound
mov
lahf
jns
sub
es
pusha
push
add
and
inc
popf
mov
arpl
nop
nop
sbb
pop
dec
sbb
cld
mov
rcrb
mov
push
fs
cmp
sub
repz
pushf
es
ss
test
insl
pop
xor
sbb
lds
xchg
cltd
fildl
test
out
scas
lock
lea
jbe
adc
aad
fcmovnu
out
fadds
loopne
cs
leave
and
repz
sahf
cli
and
cmp
cltd
fisttpl
lahf
cld
or
lds
add
adc
std
xlat
mov
movw
loope
cmp
arpl
jl
rolb
inc
rol
pop
repnz
mov
pop
jno
or
iret
jo
out
and
jmp
xchg
and
push
pusha
mov
jns
sahf
sub
jb
lea
shlb
das
insb
lea
int3
jmp
cmp
in
outsl
push
add
sbb
push
and
test
jns
mov
scas
push
insb
stos
sub
mov
sahf
adc
xchg
sbb
adc
push
jae
ds
bound
sub
mov
std
cli
fcmovbe
ret
sahf
stc
push
mov
jmp
enter
xchg
add
mov
int3
push
add
negl
faddl
test
loop
push
cmp
incl
mov
je
fwait
outsl
pushf
dec
push
add
aad
ja
mov
pop
xchg
adc
inc
ret
push
sub
lods
pop
cwtl
add
ljmp
fsubrs
fdivs
or
adc
xor
sahf
aam
out
out
movb
xor
push
jb
rorb
outsb
arpl
xor
ljmp
jmp
fisttpll
mov
xchg
arpl
movsl
fstps
mov
mov
enter
cmc
jno
push
clc
clc
insl
cmp
sub
mov
cli
loop,pn
mov
xchg
xor
shrl
nop
out
sbb
mov
inc
test
ds
pop
add
imul
lods
adc
aas
std
leave
mov
fisttps
add
bnd
es
cwtl
jl
mov
sub
add
xchg
add
xlat
out
popf
pop
fs
iret
xchg
xchg
andl
push
or
xor
push
xchg
enter
inc
in
pop
outsl
cli
jle
xor
jo,pt
xchg
popf
adc
and
mov
loop
push
daa
push
bnd
orl
mov
nop
pop
pop
mov
pop
push
rolb
movsl
push
std
lock
mov
add
dec
push
xchg
cmp
xchg
js
test
xor
push
push
lds
rolb
aam
fnop
mov
push
jle
sarb
shl
pop
leave
sub
sub
xor
lds
lds
popl
lea
cmp
and
aaa
xchg
xor
je
mov
xor
mov
mov
in
sbb
scas
movsb
loopne
test
mov
pop
push
les
fmuls
ss
xor
fcoml
or
mov
icebp
scas
mov
mov
jp
and
push
push
shrb
xchg
std
sub
icebp
dec
inc
lods
pop
jg
push
arpl
fdivl
inc
or
sbb
push
push
pop
ss
push
push
xchg
mov
xchg
sbb
es
mov
and
movsl
xor
dec
adc
insb
xor
enter
cwtl
mov
mov
mov
lods
or
mov
jbe
stc
jns
outsb
push
scas
ds
inc
inc
lods
lret
pusha
xlat
fcoms
js
lock
js
ret
les
dec
push
xor
dec
mov
stc
xchg
push
cmp
hlt
ja
mov
popa
mov
add
push
adc
inc
pop
dec
mov
sub
cmp
cmp
iret
push
push
push
hlt
lds
jmp
cli
mov
sbb
mov
inc
rorl
or
and
fst
inc
outsl
sahf
les
and
mov
xchg
scas
out
xchg
mov
imul
iret
inc
xorl
inc
adc
rol
call
jns
jp
inc
mov
aas
push
call
jecxz
sti
lcall
jo
lcall
stc
sub
ret
jne
jno
xchg
push
pop
mov
cmc
sti
pop
push
xchg
sbb
ds
xchg
sbb
mov
in
add
inc
rolb
idiv
test
dec
stos
sbb
leave
cmp
repnz
mov
loope
sbb
jp
add
push
mov
ret
mov
inc
dec
sbb
ret
xor
push
rcl
jg
mov
jg
sbb
jnp
mov
cmpsb
dec
pop
lods
lock
xor
mov
imul
stos
lods
dec
dec
xchg
add
dec
mov
push
sub
lods
fs
jmp
sub
sub
repnz
sub
xchg
stos
dec
pop
pop
push
out
xchg
inc
fpatan
inc
mov
in
scas
jecxz
in
push
pop
lds
dec
mov
mov
add
cmp
stc
mov
mov
add
jp
stos
mov
and
cs
aas
jg
in
mov
adc
cmp
jp
inc
mov
jg
scas
icebp
xchg
xchg
loopne
push
mov
push
add
sbb
cmpl
mov
aad
mov
cmp
fidivrs
pushf
and
rcl
mov
out
subl
add
test
stc
loop
xchg
mov
lahf
icebp
jns
lds
lods
das
inc
dec
sub
push
inc
and
out
jg
daa
arpl
xchg
xor
test
hlt
repnz
add
cmp
push
lret
bound
pop
imul
nop
aaa
pusha
xchg
ret
push
mov
sbb
mov
inc
outsl
jno
inc
fwait
int
sub
mov
sahf
cwtl
adc
arpl
in
mov
mov
cmp
sti
insb
mov
lret
or
sub
fwait
add
xchg
imul
mov
fsubrl
mov
fwait
jbe
ds
cmp
push
xchg
sbb
int
inc
cwtl
arpl
dec
pop
fcomi
cmc
arpl
xor
fs
jne
mov
push
sti
iret
xchg
and
leave
shrl
pushf
mov
adc
push
mov
mov
stc
xlat
les
popf
cmc
sub
mov
mov
mov
and
call
and
pop
push
and
fnsave
clc
push
loope
outsl
mov
lods
adc
mov
icebp
jbe
mov
hlt
mov
and
cmp
push
pop
dec
add
dec
lods
pop
andl
xor
ljmp
xchg
mov
movsl
pop
or
push
out
faddl
pop
mov
xor
push
popf
cltd
int3
jns
frstor
jno
mov
inc
sti
mov
pop
inc
ret
or
dec
push
mov
lods
jbe
ret
fadds
dec
sti
inc
andl
ss
in
fnstenv
sub
sbb
inc
sub
push
out
cwtl
xor
mov
int
xlat
shl
mov
imul
xlat
loop
sbb
icebp
out
ljmp
lea
cmp
adc
outsl
fs
out
or
into
sbb
xchg
add
push
xchg
aad
mov
ja
aad
adc
cltd
jb
inc
cmpsb
addr16
movsb
stc
xchg
addr16
inc
iret
cmp
pop
aad
xchg
mov
dec
jne
cmp
jnp
es
dec
ret
lods
repnz
xor
sub
cmc
icebp
popf
xchg
es
arpl
xlat
call
leave
fdivrl
jnp
dec
and
das
inc
sub
jno
mov
imul
inc
in
lret
repz
test
jmp
out
jp
xchg
and
popa
fldenv
leave
pushf
mov
push
xor
cs
cmp
loop
stos
xor
lds
dec
xchg
push
adc
and
or
push
out
or
ret
scas
sbb
int3
aad
cmp
xchg
xor
test
xor
ss
ss
pop
fs
shl
imul
add
push
push
mov
ljmp
inc
hlt
in
stos
adc
dec
jae
push
mov
mov
stos
mov
push
pop
mov
data16
dec
arpl
adc
push
test
test
sbb
xchg
adc
and
jge
in
push
sbb
or
inc
fwait
lret
jmp
add
inc
or
sbb
sbb
stos
insl
rol
push
clc
or
insl
insb
pop
clc
mov
hlt
xchg
and
idivb
pushf
outsl
pop
jnp
outsl
hlt
sbb
xchg
aad
inc
jecxz
or
and
bound
aad
inc
mov
leave
jne
imul
cli
mov
xchg
sub
mov
and
fwait
jg
push
push
dec
out
das
loope
inc
push
sarl
rcrb
xchg
jge
mov
sbb
xor
dec
aas
mov
jnp
out
sti
add
mov
int
aas
ret
pop
andl
stos
cmp
pop
xor
pop
int3
cmp
xor
inc
inc
sbb
sub
lods
ja
xorl
decl
mov
insl
xchg
in
pop
aad
cltd
nop
cmp
lret
mov
sub
hlt
or
ret
push
mov
fsts
xchg
jecxz
sbb
pop
adc
aam
mov
mov
into
add
pop
insb
int3
sub
stc
int3
mov
jp
cmp
mov
push
push
push
shl
pop
mov
pop
add
pop
pusha
pusha
add
push
pop
jmp
leave
adc
dec
std
and
adc
jne
and
jg
fdivl
outsb
andl
adc
andb
sti
fstps
movsl
scas
inc
pop
pop
movsl
cwtl
pop
lret
or
ljmp
rolb
dec
xor
push
out
mov
rolb
mov
and
inc
sbb
jns
mov
mov
jns
lds
lods
pusha
add
ljmp
adc
push
enter
lret
inc
nop
xor
jmp
movsb
mov
add
add
and
jp
mov
jmp
popa
pop
movsl
enter
hlt
cltd
fs
adc
xchg
les
pop
testl
lods
mov
fnstcw
nop
stc
push
cmp
mov
loope
divb
push
push
fnstenv
lds
push
pop
xchg
ljmp
lea
jbe
in
xchg
shlb
int3
ret
pusha
imul
lret
test
add
shrb
sbb
xchg
mov
inc
and
jmp
mov
les
xor
jno,pn
cmp
jo
imul
test
fiaddl
mov
sub
xchg
add
dec
or
scas
aad
jle
mov
add
arpl
popf
mov
pop
ljmp
push
jge
ret
or
dec
xlat
mov
je
fwait
inc
and
out
xchg
push
enter
cmp
mov
cltd
push
dec
lea
lods
movsl
mov
or
lret
xchg
fcomps
mov
pop
repz
leave
push
mov
sub
fstps
push
pop
sbb
fistl
popa
xor
lea
pushl
ret
je
jae
rol
outsl
jle
add
and
ja
cld
aam
xchg
fidivl
pop
xchg
aad
xchg
fcmovnu
aam
adc
xor
aaa
mov
lret
out
insb
lea
loopne
js
or
sbb
xor
insb
stos
rep
scas
inc
cmp
je
stc
scas
inc
leave
sbb
fwait
ljmp
pop
leave
mov
sub
sbb
movsb
lock
or
lret
or
ftst
or
call
loopne
pop
popa
xchg
add
arpl
aam
adcl
dec
clc
popa
or
popf
lret
lds
fcmovb
loope
or
stc
mov
sub
mov
pop
cmp
aam
adc
pop
ja
cmp
adc
pop
mov
repnz
ret
xchg
sarl
in
fldenv
int
fdivl
jo
jbe
fnstcw
daa
cwtl
fisubrl
cmpsb
pop
sti
outsl
lret
push
adc
lret
dec
jge
xor
push
xor
scas
jp
rclb
orb
inc
in
mov
insl
push
out
out
mov
sahf
mov
pop
movsb
jmp
jo
idiv
out
push
add
aad
gs
add
rcll
in
add
imul
int
inc
sub
cld
in
out
mov
flds
sub
and
pusha
test
js
or
add
insb
push
pusha
cld
mov
xchg
push
cli
xor
nop
aas
imul
push
cld
dec
dec
sub
or
inc
divl
lods
and
movsb
inc
lods
out
outsb
test
cmp
mov
in
mov
imul
adc
mov
popf
pop
and
fisubl
fwait
jmp
inc
dec
mov
in
fwait
mov
xchg
repz
aas
mov
testb
push
inc
sub
add
mov
lea
push
inc
icebp
mov
out
addr16
cmpsb
in
sub
sbb
repz
inc
test
mov
mov
bound
pop
icebp
add
lcall
push
mov
loop
push
popa
hlt
stc
cld
sarb
fcmovne
lock
and
js
test
sbb
inc
iret
push
inc
dec
xchg
xchg
repz
inc
sbb
mov
xchg
push
push
in
nop
mov
ljmp
fdivl
mov
mov
cmp
pop
add
inc
nop
int
rorl
outsl
pop
dec
jmp
loopne
into
add
js
push
jl
addr16
shll
fsubrs
pop
mov
imul
cmc
jg
gs
pusha
imul
test
outsb
adc
aad
mov
addr16
mov
push
and
jnp
lret
sub
mov
and
sbb
les
xchg
push
and
out
stos
arpl
je
or
mov
dec
xor
fwait
nop
cmp
js
mov
cmp
adcl
dec
inc
or
push
mov
push
jno
arpl
jmp
shrb
out
out
leave
xchg
iret
lock
adc
pushf
add
cmp
or
mov
sahf
inc
cs
repz
pop
xor
inc
cmp
out
xchg
outsl
in
addr16
iret
inc
mov
in
sub
xchg
ficoml
movsb
xor
dec
rcll
cmpsl
lock
mov
mov
filds
xor
jmp
pop
repz
jae
out
jge
inc
lahf
pop
sub
jmp
mov
add
adcb
iret
ja
inc
push
add
mov
ss
jne
and
loope
movsl
push
pop
jo
xchg
pushf
sub
jns
mov
dec
insb
pop
and
add
fdivr
add
adc
outsb
push
dec
cmpsb
aam
xchg
orl
jno
push
lods
push
pop
int3
sahf
leave
mov
test
ret
les
test
pop
fidivrs
cld
decb
push
les
mov
pop
test
inc
call
sbb
cld
cli
scas
push
cmpsb
and
push
fcmovnbe
xchg
jmp
xchg
inc
xchg
scas
cs
push
jg
xor
xor
sarl
popl
jae
dec
std
mov
jo
mov
in
jmp
add
rcr
jg
sbb
push
out
insl
dec
add
mov
std
sub
xor
inc
dec
xchg
in
xlat
pusha
aad
inc
jle
push
out
inc
xchg
or
pop
adc
push
popf
loop
jle
outsb
cltd
in
mov
mov
jmp
mov
dec
shll
xor
insl
decl
add
xchg
dec
sub
stc
xor
repz
and
addb
mov
mov
mov
in
mov
lahf
imul
ds
cmc
mov
mov
adc
push
mov
or
push
mov
insb
movb
inc
scas
jno
cmp
jno
imul
outsl
xor
shlb
add
mov
add
rep
mov
or
cmp
sbb
js
jbe
mov
je
loop
jecxz
mov
shll
xchg
xor
pop
mov
add
jae
les
shlb
gs
aas
jp
xchg
xlat
sbb
jb
mov
lods
lea
mov
sub
xchg
lret
push
ret
inc
mov
fldenv
xor
fiadds
pop
movsl
lock
rcrb
fwait
rorb
hlt
or
orl
add
sub
sub
insl
pop
mov
lods
pop
xchg
jne
test
adc
mov
push
adc
sarb
pop
sub
sub
sbb
push
std
pop
ds
repz
arpl
inc
leave
push
sbb
xlat
push
pop
filds
jb
rorl
fs
mov
pop
push
and
mov
fs
daa
cmc
lock
sbb
pop
jno
push
xchg
repnz
pop
mov
and
fimuls
ret
aad
push
push
das
pop
cmp
outsb
mov
jb
sbb
je
mov
jo
adc
adc
aad
add
mov
jnp
pop
and
dec
inc
jae
mov
push
data16
fs
inc
sarl
icebp
mov
cmp
mov
ss
lods
or
xor
sub
enter
jbe
loop
xlat
clc
out
stc
movsl
mov
daa
leave
lods
repz
repnz
loopne
or
push
inc
xlat
jmp
mov
mov
faddp
lret
sbb
popl
mov
pop
adc
xchg
hlt
out
sti
jmp
pop
push
ficoms
sbb
xor
js
clc
andb
cmp
int
dec
jp
xchg
xchg
cmpsl
push
push
pop
pusha
mov
and
data16
add
and
test
jo
or
not
out
imul
outsl
repnz
xchg
dec
loopne
aas
dec
fsub
cli
xchg
xor
or
push
jo
jl
jge
sub
mov
loopne
lahf
jmp
lea
dec
adc
bound
push
inc
jg
cmp
add
aas
mov
mov
xchg
insl
repz
inc
inc
fadds
and
dec
jmp
xor
xor
pop
mov
push
andl
stos
ds
add
add
iret
mov
push
xchg
gs
cmc
scas
iret
pop
fwait
es
inc
mov
flds
nop
mov
sub
mov
xorb
mov
and
cmpsb
pop
mov
fcmove
into
pop
add
lods
mov
pusha
pop
lcall
cmp
xchg
mov
xchg
and
into
cmp
cmp
xchg
and
cmc
sbb
pop
insb
shl
aas
jle
cld
pusha
sti
pop
loope
sub
cld
inc
or
dec
fwait
pop
cmpsb
lea
xchg
adc
loopne
push
jns
sub
inc
xchg
out
outsb
fsts
pushf
cmc
dec
mov
imul
ja
out
sahf
mov
inc
popa
leave
jge
iret
sbb
jge
fstps
inc
adc
leave
bound
push
inc
sbb
lret
or
sarb
pushf
pop
scas
add
nop
test
int
push
adc
lock
push
or
shlb
jecxz
mov
xor
shll
imul
es
ds
mov
xchg
stc
mov
and
test
inc
mov
clc
jge
xchg
nop
and
mov
repz
pushf
xchg
fcoms
in
lcall
lds
enter
sub
push
xchg
sahf
mov
std
in
inc
push
pop
subl
incb
test
insb
add
lcall
fsubs
mov
lcall
ficoml
arpl
add
imul
fstpt
cmp
sbb
popf
pop
nop
jp
mov
mov
leave
lods
pop
pop
push
pushf
sub
or
repnz
sub
lret
ja
imull
mov
inc
test
mov
mov
and
ficoml
ret
popf
lahf
mov
jl
push
inc
adc
pop
mov
lods
mov
shlb
mov
sub
xchg
cmp
pusha
mov
setg
xor
push
clc
push
inc
mov
stc
xchg
or
xchg
mov
cli
push
mov
inc
adcl
fdivp
sbb
idivl
ljmp
dec
ds
in
xchg
pop
adc
push
data16
int3
push
orb
sbb
pop
pop
add
sti
rclb
mov
popf
add
push
or
adc
gs
mov
ficoms
sahf
int
pop
cmc
sarl
xor
aaa
imul
pop
jmp
sbb
stc
mov
nop
std
push
xchg
dec
inc
das
icebp
cmp
cld
lds
add
add
jecxz
andb
jno
sub
icebp
pop
mov
cltd
enter
lods
sbb
in
jb
into
xor
push
mov
cmp
aaa
or
ret
cmp
pop
stos
jmp
adc
xor
inc
push
adc
test
mov
jno
test
inc
and
mov
push
xor
leave
push
fnsetpm(287
xor
lods
xchg
fsubr
out
cmp
loopne
sub
push
ficoml
mov
jo
aam
mov
aam
sbb
movsb
xchg
clc
sub
mov
and
in
xor
adc
push
mov
xor
dec
std
jmp
test
jnp
cld
seta
and
aad
xchg
je
mov
stos
test
sub
scas
sbb
in
filds
in
addb
xor
fsubrs
push
test
xor
insb
out
stc
ficoms
or
push
pushf
mov
dec
pop
pushf
das
lret
movsb
jns
andb
inc
repz
push
jne
pop
sbb
out
sbb
repnz
sarl
ss
outsb
cmc
xchg
mov
xchg
adc
fcomip
fistps
stc
xchg
icebp
sbb
bound
dec
push
addl
push
out
popf
leave
push
mov
cmp
sarl
dec
aas
jge
lret
mov
lret
orl
pop
adc
jl
xor
xchg
in
xchg
inc
movsl
push
pop
dec
fdivl
shlb
mov
js
xor
xchg
mov
mov
das
push
jns
roll
insb
fld
mov
add
jp
adc
xchg
mov
lcall
jns
pop
cmc
ffreep
push
and
mov
std
inc
leave
pusha
adc
sbb
idivb
inc
jo
adc
sbb
daa
sub
adc
mov
mov
ss
mov
dec
int3
inc
cmp
frstor
aad
jl
mov
rclb
fimuls
dec
fwait
cltd
inc
mov
into
push
mov
test
scas
les
insl
scas
pop
mov
faddl
lock
xor
loope
rcll
dec
pop
out
jne
repnz
cltd
mov
test
jmp
repz
mov
cltd
aaa
call
mov
movsb
leave
push
aaa
cmpsb
lods
les
sbb
fistpll
mov
jae
push
adc
mov
cld
cwtl
lock
or
mov
pop
ds
ljmp
in
pop
stos
add
xchg
sbb
xchg
test
aad
sub
cmp
sub
out
fldl
pop
pusha
imul
xchg
cmpsl
testl
outsl
sbb
movsb
mov
mov
dec
adc
xlat
repz
stos
dec
jnp
repnz
aas
in
add
xor
loop
and
mov
jb
jnp
push
js
pop
fs
or
adc
add
movsb
cli
push
rcrl
mov
es
jb
adc
cmp
iret
cmp
ret
dec
fs
sub
or
iret
pop
sbb
mov
inc
mov
sub
add
das
dec
into
jae
fidivs
xor
cld
jae
jo
sarl
xchg
std
mov
lahf
mov
xchg
jnp
jecxz
pop
scas
lock
xchg
mov
mov
jp
cmc
fs
xchg
lea
mov
je
push
mov
jp
negl
in
fwait
and
mov
and
loopne
and
loop
push
sbb
sahf
sbb
push
out
dec
cwtl
mov
jae
and
and
xchg
in
aad
pop
call
test
pop
adc
lods
lods
pop
cmp
lret
mov
sbb
hlt
adc
mov
inc
mov
es
dec
repz
xchg
sahf
mov
sub
lret
or
stc
fdivrs
sbb
aad
ffree
dec
call
cld
and
add
daa
ljmp
pushf
push
outsb
fsts
dec
mov
inc
mov
push
pop
sub
and
or
sbb
dec
pushf
push
adc
pop
mov
mov
push
jns
pusha
jg
fcmovu
cs
adc
xchg
and
jmp
mov
ljmp
cld
ljmp
push
adc
pop
mov
sbb
nop
leave
and
cli
lods
xchg
arpl
push
fsubl
sbb
sbb
test
sahf
jge
stos
cmpsl
and
movsb
jmp
arpl
add
loope
loop
pop
rclb
xlat
xor
add
push
cmpsl
and
jl
stc
adc
adc
stos
mov
pop
out
adc
or
js
dec
push
enter
ss
es
jmp
aas
pop
dec
negl
pop
push
outsl
outsb
and
or
push
adc
xchg
popa
repz
push
popf
jae
pop
add
fcomps
dec
in
cld
shlb
and
add
ljmp
dec
xor
ds
ficompl
mov
gs
mov
lcall
insl
fwait
ds
mov
adc
inc
push
mov
ljmp
cmp
pop
and
adc
mov
xchg
xchg
fsubrs
adc
xchg
dec
popf
cmpsl
sahf
mov
mov
cmp
mov
fwait
les
sahf
pop
jns
mov
sbb
rcrb
mov
push
popf
xchg
pop
adc
jo
pop
xchg
cmp
lahf
pop
cmp
inc
movsl
sbb
pushf
nop
jmp
aas
xor
push
fnstenv
clc
sbb
lcall
mov
faddl
xchg
insl
out
idiv
fstl
arpl
add
fs
dec
or
sar
mov
and
add
rolb
jne
mov
lods
ss
fldl
aad
daa
sbb
jns
dec
push
testb
cwtl
out
scas
dec
imull
or
pop
push
xor
aam
fcoms
daa
add
inc
hlt
and
pop
adc
cmp
jns
loop
inc
or
out
ret
mov
mov
aaa
aad
loope
hlt
ret
scas
adc
das
push
pop
stos
xchg
into
movsb
jb
leave
inc
mov
dec
jg
sarl
mov
fmuls
jae
mov
stc
test
fisubs
fistps
gs
or
push
mov
pusha
jg
mov
add
es
jecxz
scas
jl
mov
lods
pop
mov
add
aas
sub
sub
sahf
das
sub
mov
inc
xchg
cmpb
dec
xor
mov
cmp
nop
push
adc
or
xlat
and
pop
sbb
subb
sub
or
jae
pop
or
xor
dec
sbb
jb
jmp
sub
inc
movaps
call
arpl
sahf
aas
sbb
aas
nop
or
pop
out
xlat
stos
daa
lret
clc
dec
ret
int
enter
popa
fstpt
cli
dec
mov
loop
cmp
xor
xchg
push
lds
test
cmc
cmp
lock
in
xor
mov
mov
orb
dec
nop
sahf
sbb
mov
jle
push
ljmp
pushf
ds
ret
ss
dec
hlt
sbb
mov
testb
shlb
pop
jmp
in
nop
cs
and
aaa
enter
xchg
cmp
mov
loopne
imul
dec
mov
cmp
loopne
adc
in
in
cwtl
sbb
ud1
sbb
xchg
imul
inc
mov
out
lret
cmp
ret
xchg
aas
and
cmp
aam
stos
jns
cltd
test
mov
jp
int
xor
xor
xor
adc
call
xorb
out
lods
and
xchg
sarb
push
pop
add
pop
dec
xchg
out
stos
test
insb
mov
mov
jge
mov
pop
outsb
mov
jo
dec
leave
sub
mov
push
test
mov
cmp
jp
lock
out
ja
sbb
adcb
cmpsl
sub
mov
movsb
mov
jecxz
aam
cmpsl
jge
or
jnp
loopne
cli
dec
pop
add
sbb
push
sbb
lock
aaa
jae
xchg
push
inc
loope
xor
push
pop
test
ret
sbb
fwait
cmp
in
sub
lahf
insl
out
mov
push
repnz
cld
shr
push
sub
mov
cs
pop
pop
in
mov
sub
cmpsb
test
dec
test
sub
inc
aam
aaa
sub
jb
mov
or
ljmp
jae
push
and
test
sub
mov
lret
cmc
and
push
lods
dec
repnz
cmp
int
mov
out
or
xchg
test
repz
jne
xor
lods
sbb
mov
rolb
js
add
clc
mov
out
and
jbe
cmpsb
lods
or
mov
loope
data16
pop
pushf
mov
lods
js
xchg
lcall
mov
sub
orl
push
rorb
add
sub
fwait
outsb
push
dec
cmc
lahf
lds
shlb
pop
cmp
outsl
and
add
dec
bound
loopne
sahf
outsl
xlat
sub
mov
jl
push
push
test
or
aam
in
je
cwtl
lcall
aad
mov
mov
adc
cltd
fidivrl
test
adc
fsub
ds
add
rcll
data16
push
xor
lods
lcall
mov
push
mov
mov
jp
in
out
lret
fisubl
js
jne
sbb
idivb
or
xchg
int3
cmc
aam
shll
stc
mov
dec
cmp
mov
mov
call
out
rcr
ret
sbb
lock
mov
jecxz
test
loope
mov
and
inc
movsb
cmp
testl
es
xchg
loopne
push
test
js
dec
and
xor
adc
aaa
loopne
arpl
cmpsl
clc
pop
ja
cmp
mov
dec
xchg
mov
dec
mov
sarl
rcrb
test
dec
and
and
and
cmp
and
ja
pop
in
repz
dec
mov
int
cltd
mov
sbb
test
cmpb
cmc
rcrl
lock
mov
ljmp
out
sarb
ret
mov
mov
fstl
sub
jno
and
fwait
pop
repnz
lret
repnz
ja
sbb
cltd
mov
push
fnstenv
test
inc
push
and
jg
es
mov
sub
cli
aam
subb
test
dec
push
xchg
and
ds
fs
clc
arpl
push
pop
pop
repz
xchg
fdivrp
sbb
enter
jns
and
in
mov
mov
cmovbe
roll
pushf
jg
sbb
pop
and
sub
int
int3
inc
dec
mov
xchg
das
imul
mov
gs
ret
les
fstps
push
fwait
push
mov
int
sbb
dec
mov
pop
test
sahf
aad
mov
fnop
inc
cli
push
in
fnsave
js
jecxz
test
shl
sub
lods
mov
hlt
and
mov
xor
push
xor
mov
inc
push
sbb
mov
jno
shrb
sbb
out
fs
jmp
rcr
leave
aam
call
test
jbe
jge,pt
add
mov
fstpt
fmuls
xor
xor
test
imul
jle
imul
fldz
lds
sahf
jecxz
sbb
jns
mov
fldenv
fadd
mov
sbb
dec
inc
jae
add
jg
ja
jns
insl
cwtl
jg
sub
addr16
fisttps
call
add
sub
popf
xchg
nop
movsb
clc
sub
aas
jb
mov
ja
lret
fcomps
out
int3
aad
xor
sti
outsl
xor
mov
cmpsl
loopne
adc
int
push
mov
xor
adc
adc
gs
or
cmp
mov
and
push
xchg
popf
aad
inc
ljmp
fwait
pushl
xchg
jb
xchg
je
aas
loop
pop
sub
jg
mov
arpl
jo
sti
outsl
orb
les
dec
cmp
cmp
pop
xor
sub
fsubrl
cmp
cmp
lods
or
mov
fcoms
adc
push
jbe
lds
mov
iret
outsl
iret
xor
leave
push
lret
pop
jb
aad
loopne
xchg
sub
jecxz
cmp
stos
mov
dec
call
xor
int
pop
xchg
inc
loope
jne
xchg
lea
fmull
mov
jae
mov
test
jno
fs
jg
xchg
mov
lods
mov
mov
nop
jnp
ja
sub
or
scas
push
xchg
ret
xchg
cmpsl
add
mov
fcmovnbe
push
mov
sub
or
pop
stos
sub
or
mov
push
push
ds
adc
out
cld
stos
jecxz
jo
mov
dec
mov
out
jb
and
inc
sbbl
sahf
decb
ljmp
repnz
cld
pop
jle
xchg
out
adc
cld
add
imul
push
xchg
scas
je
cmp
fistl
dec
loopne
xchg
mov
adc
jbe
outsl
icebp
sub
iret
jecxz
cmp
xor
xlat
imul
mov
ss
add
sbb
les
inc
push
loop
sub
xchg
lods
mov
aam
mov
fsubs
mov
inc
jae
mov
pushf
outsl
aas
in
mov
or
xor
or
mov
push
ja
dec
fisttpl
loope
enter
cmp
loope
aaa
mov
hlt
jbe
cmp
sbb
js
xlat
sti
les
test
xchg
or
stos
sbbb
loopne
cmp
sbb
in
pop
pop
xchg
and
pop
jp
insl
xor
js
cmpsl
addb
lret
fs
jecxz
fadds
std
ror
add
add
jmp
mov
sahf
sbbl
fimuls
pop
mov
inc
iret
leave
mov
insl
popf
pop
sbb
imul
pop
push
stos
xchg
cmp
daa
movsl
dec
push
mov
hlt
cs
or
sub
dec
fcoms
jmp
jo
cmc
sbb
loop
push
jle
nop
popf
lahf
and
mov
loope
les
xor
dec
xor
mov
mov
xlat
add
ja
jg
push
lock
mov
les
xchg
or
jl
xor
pop
adc
dec
sbb
loopne
or
jg
jno
data16
pop
and
rorl
shll
lock
adc
mov
cmc
mov
mov
jmp
inc
subb
pop
movsb
pop
adc
cmpsb
int
rorl
xchg
lcall
mulb
roll
ret
pop
cli
xchg
push
out
add
test
scas
icebp
xorl
shll
mov
or
sarb
inc
or
in
fmuls
mov
fadd
xchg
sbb
mov
cmpsl
push
insb
or
popa
mov
jb
fwait
test
insl
stc
mov
or
insl
sbb
xor
sti
jecxz
ja
cli
adc
insl
mov
push
jp
lahf
sub
ljmp
cltd
mov
stos
int
imul
cltd
push
pusha
lret
pop
push
add
mov
adc
jbe
sbb
mov
mov
sti
andb
daa
mov
call
mov
mov
roll
pop
sbb
or
cwtl
shlb
pop
inc
jle
int3
stos
aas
sbb
cmc
mov
xchg
adc
dec
cmp
sub
cmpsl
dec
mov
mov
in
push
ret
jbe
jge
outsl
movsb
push
mov
stos
stos
shll
pop
xor
gs
push
hlt
outsl
jp
in
sbbl
inc
sub
xor
mov
outsb
adc
mov
sbb
test
adc
stc
gs
popf
sub
lret
sub
adc
mov
add
xchg
aad
arpl
and
mov
das
andl
inc
xchg
out
lods
fmuls
fildll
fmuls
sarb
in
outsb
popa
repz
lcall
je
push
cli
insl
movsb
xor
in
fists
inc
shrb
inc
cmpb
arpl
mov
sub
add
xor
and
mov
sub
sbb
cmc
pop
in
test
jmp
lods
xchg
pusha
insb
and
dec
clc
aas
stc
mov
cmpb
and
xchg
int3
out
jp
fcmovne
mov
sbb
cmp
dec
and
scas
nop
stc
mov
mov
and
and
adc
iret
xchg
iret
test
ret
jg
test
loopne
ret
aam
dec
in
mov
push
or
and
add
xchg
in
sbb
es
gs
mov
mov
sbbb
std
mov
int3
aad
popf
inc
in
lds
cmp
bound
ret
mov
xchg
scas
mov
dec
loopne
lds
fcoml
js
xor
sarl
mov
js
xchg
rcrl
add
mov
lret
jmp
add
popa
inc
cmp
into
cmpsl
pop
and
mov
lods
mov
mov
pop
fs
shll
rorl
rorl
jge
pusha
and
mov
adc
sbb
and
stos
mov
scas
jo
sahf
jbe
je
inc
inc
es
xchg
test
or
inc
cmp
xor
imul
dec
pop
lds
mov
xchg
shlb
pop
in
adc
pop
push
mov
dec
iret
xor
jg
ss
mov
icebp
xor
xchg
aad
jle
pushf
pop
out
fmull
jg
xchg
jg
jb
in
repz
inc
mov
aad
out
iret
jge
loop
adc
mov
outsl
and
adc
bound
shlb
pop
or
scas
insl
jae
mov
mov
mov
push
int3
push
rorb
jle
sbb
sub
push
mov
cltd
fs
mov
sbb
push
test
fisubrs
or
and
jp
xchg
jl
in
into
outsl
orb
mov
mov
jecxz
mov
push
sti
cmpl
or
mov
ficompl
push
dec
insb
push
outsl
aam
sbb
sub
adc
xchg
sbb
subl
outsl
sbb
mov
pop
jge
sbb
jmp
cmp
xchg
add
cmp
imul
fcom
stos
pop
push
and
ljmp
out
jo
and
lods
push
das
pop
mov
out
in
outsl
jecxz
push
popf
cmc
in
dec
inc
in
jae
mov
sbb
xchg
mov
sbbl
pop
divl
testl
lcall
stos
out
and
sub
das
dec
mov
push
ja
jle
mov
cmp
add
fisttpll
out
je
orb
shrd
sub
jg
sbb
scas
dec
les
fbstp
js
out
cs
push
mov
add
mov
or
dec
aaa
ljmp
mov
dec
sub
push
lock
test
nop
stos
mov
inc
fwait
in
and
adc
aaa
test
scas
add
push
roll
negl
lds
jg
sub
popa
cmpsb
adc
mov
push
mov
mov
clc
jno
clc
andl
xor
scas
aas
mov
dec
push
movsl
cmc
repz
jmp
fists
scas
cmp
mov
and
push
pop
daa
rcr
sbb
in
popa
push
mov
push
cltd
sbb
sbb
pop
or
or
aam
inc
mov
push
sti
inc
out
adc
pop
adc
pop
xchg
ret
out
sbb
leave
or
movsb
jmp
mov
mov
pop
sub
cli
arpl
test
mov
sub
gs
push
inc
mov
ret
jns
push
pushf
xchg
scas
jnp
cli
cmpsl
ss
hlt
es
out
dec
or
and
adc
mov
xchg
aas
jmp
cltd
adc
sub
adc
jo
imul
sbb
inc
movsl
push
push
pop
mov
ja
jmp
test
mov
es
ja
in
or
mov
mov
mov
leave
mov
fidivs
xchg
in
cwtd
hlt
out
pop
imul
int
adc
icebp
hlt
cwtl
jmp
leave
popf
push
or
orl
dec
push
imul
sub
adc
cs
mov
enter
dec
jae
jnp
pop
sub
jl
leave
inc
js
ret
fisttps
outsl
lods
cmpsl
push
outsb
sub
outsl
es
roll
sbbl
divl
cmp
sbb
jb
mov
push
pop
int3
popf
iret
sahf
mov
nop
inc
mov
xchg
cmp
test
sub
daa
mov
mov
jnp
xchg
movsb
mov
and
in
mov
dec
fcmove
flds
mov
shr
in
ja
imul
in
mov
int3
inc
mov
jecxz
aaa
arpl
add
and
jns
mov
lea
leave
pop
pop
popa
jp
mov
dec
addr16
xchg
cmp
mov
inc
jne
push
push
mov
push
xchg
inc
aam
mov
fwait
ret
cmp
mov
dec
shll
pop
jno
das
pop
loopne
movsl
nop
lret
outsl
repnz
stos
sbb
jp
rcll
xlat
jle
ja
dec
xor
xchg
fstpt
xor
cmp
mov
sti
cmp
adc
aaa
outsb
aam
loope
negb
or
sbb
stos
push
dec
jmp
ret
sbb
dec
popa
jmp
xchg
cmp
stc
sub
lods
mov
popa
push
cld
cmp
nop
mov
enter
add
pop
dec
push
test
xchg
push
dec
out
jp
cld
gs
mov
test
sti
inc
js
sbb
repnz
lods
push
mov
pop
jmp
imul
mov
aaa
mov
into
incl
sub
xchg
add
arpl
imul
mov
inc
xchg
and
xlat
sub
xor
pop
sub
outsl
xor
aas
cmpsl
sbb
xchg
es
out
mov
push
pop
addr16
orl
popa
cs
adc
dec
lods
stos
test
adc
inc
loopne
and
and
mov
popl
push
inc
cmp
xor
pop
clc
mov
lea
pop
dec
in
les
pop
mov
add
jbe
ds
push
sbb
iret
ljmp
mov
sbb
lods
fstps
js
iret
xlat
pushl
fsubs
ds
inc
mov
xor
or
clc
mov
ds
xor
add
cmc
pop
or
shrw
push
mov
insl
cmc
imul
adc
or
out
xor
adc
pop
pop
pop
pop
xor
scas
ljmp
and
add
xor
arpl
sub
stos
push
add
lea
inc
mov
adc
icebp
xchg
xchg
push
inc
vpaddq
push
aas
orb
mov
dec
lret
ss
repz
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
dec
mov
mov
mov
inc
xor
xchg
and
sbb
shlb
xor
adc
popf
xor
xchg
xchg
or
sbb
je
in
ffreep
cli
adc
mov
and
data16
stos
loope
and
cmc
mov
or
in
sub
mov
pop
cmpl
ret
jp
hlt
jp
push
mov
jno
orl
scas
dec
adc
mov
mov
orb
in
push
add
mov
aad
nop
rorl
jecxz
xorb
mov
inc
call
cmpb
pop
dec
xchg
jp
pop
pop
jge
xor
add
adc
out
movsb
inc
loopne
dec
pop
mov
jle
adc
pop
pop
mov
xchg
xor
aam
js
and
sbb
jp
inc
or
and
xor
add
cmp
add
add
mov
repz
pop
fcoml
adc
aad
jg
aad
sahf
lock
and
mov
mov
int
pop
cmp
mov
leave
negl
movsl
hlt
daa
mov
cmp
xorl
and
pop
xlat
sub
ljmp
mov
push
and
push
or
mov
mov
inc
es
aaa
push
and
lcall
in
into
add
cmpsl
lods
mov
popa
pusha
jb
add
test
mov
push
mov
cwtl
out
jbe
and
bound
outsb
dec
gs
mov
rolb
jno
mov
push
in
js
xor
loopne
rcrl
lahf
fmulp
fisttpll
lcall
mov
jo
cmp
inc
shl
xchg
out
add
stc
test
or
aaa
out
sub
out
mov
mov
mov
fistps
dec
push
out
push
add
fst
dec
or
out
push
cmp
sahf
ret
add
and
fucomi
fucomip
leave
or
mov
push
cmp
vmovsd
lds
cld
lcall
pop
cmp
pop
test
adc
sbb
das
pop
cli
jl
pusha
push
dec
int3
cmp
negl
lods
fnstenv
xchg
fcompl
cld
xor
mov
roll
push
lahf
cmp
push
scas
into
xor
sub
xchg
into
rorl
xchg
lcall
jno
mov
jno
mov
dec
pop
add
inc
jp
imul
clc
jae
into
mov
insl
or
into
pop
test
scas
xchg
adc
cmp
mov
mov
das
icebp
cli
out
push
ja
insb
cli
lods
mov
sub
inc
adc
mov
add
pop
mov
jmp
inc
push
stc
data16
push
lcall
out
jmp
pop
xor
mov
cmp
add
jp
push
jg
and
aad
pop
cmp
mov
iret
sub
in
inc
pop
ja,pn
stos
lock
sub
add
in
xor
mov
gs
je
iret
jb
stc
add
aad
sub
inc
call
add
push
ficoml
negb
xchg
aaa
lret
xor
jne
daa
mov
shlb
popa
push
sub
stc
or
mov
mov
cmp
push
or
push
dec
jb
mov
pop
cwtl
rol
cmpb
out
daa
and
imul
mov
in
inc
lahf
xor
dec
dec
fmuls
sbb
call
imull
addl
pop
shl
and
mov
arpl
mov
fdivrl
and
jns
sbb
sahf
xor
pop
mov
sti
dec
sbb
inc
or
jle
scas
sbb
add
adcl
sarb
sbb
mov
xchg
pop
arpl
call
imul
test
popf
mov
das
inc
lea
popf
mov
test
stc
shlb
fdivrl
repz
sub
and
imull
imul
add
scas
fadds
jno
iret
xchg
daa
push
cmc
lcall
mov
cmpsl
aaa
xlat
mov
jmp
fildll
xchg
rorl
js
fisubrs
cmp
xchg
sti
jno
movsb
jp
sbb
pop
cmp
aaa
dec
add
dec
popa
shlb
adcb
mov
out
cmp
in
in
and
push
add
adc
jno
push
dec
inc
mov
jo,pn
lahf
mov
test
repz
add
xor
lock
lods
test
leave
bound
pusha
lret
pusha
movsl
andl
ja
jbe
int3
ss
pusha
xchg
push
mov
jne
scas
pushf
iret
mov
lods
push
jnp
setno
aas
jl
ja,pn
jle
mov
sti
insb
sarl
adc
push
dec
nop
cli
or
inc
inc
out
hlt
xor
hlt
stc
mov
xor
ficompl
sub
jns
stos
dec
jne
mov
mov
mov
out
ss
push
sti
js
cwtl
mov
sbb
or
xor
lea
mov
pop
divb
push
ret
mov
dec
cwtl
lret
dec
push
inc
stos
mov
sti
mov
pop
adc
add
inc
inc
imul
rorb
push
ret
push
testl
cwtl
push
sub
inc
stos
sahf
mov
mov
pop
imul
nop
or
fdivrl
mov
and
push
and
mov
mov
jno
pop
dec
in
nop
rcll
int
int
mov
jl
mov
lret
add
pop
hlt
xor
or
setge
fxch
mov
dec
popa
xlat
add
cld
stos
pop
mov
dec
xor
outsb
ret
sub
and
jge
dec
imul
and
mov
and
adcb
cmc
mov
loope
jp
leave
or
loop
mov
gs
inc
jmp
inc
scas
mov
xchg
mov
pop
xor
mov
movsb
repnz
out
icebp
add
add
scas
cld
aaa
lahf
mov
fistpl
dec
shl
push
inc
rcrb
cs
jno
fdivrp
ja
pop
xchg
fiaddl
mov
jmp
jb
ret
jge
mov
orb
jl
in
or
xlat
fbld
xchg
aam
sbb
popf
orl
jnp
ss
call
fdivp
sbb
pop
and
mov
loopne
ja
cld
aad
pop
push
lds
sbb
adc
ret
add
mov
js
fisubs
mov
xchg
aaa
dec
sub
or
ljmp
outsl
xor
fisubrl
inc
xlat
imul
pusha
shll
lods
in
test
and
sub
sub
orl
xchg
test
and
in
or
fimull
test
mov
inc
divb
aas
sbbb
les
insb
xchg
outsl
jno
leave
dec
dec
xchg
fs
leave
cwtl
lds
ficoml
add
rorb
mov
mov
lds
in
jo
pop
xor
hlt
into
jmp
push
push
dec
inc
call
loope
pop
ret
daa
fstpl
mulb
test
inc
adc
add
add
cmpsl
setge
push
lahf
xor
jne
mov
adc
dec
pop
int
mov
fdivs
add
fildll
sub
jns
pop
jae
fstl
inc
aaa
adc
inc
lret
aam
sub
sbb
push
lods
jb
int3
leave
inc
inc
sbb
xchg
bound
pop
fs
cld
or
aad
orps
or
loopne
push
jbe
jge
sub
stc
jecxz
jl
or
ljmp
pop
pop
pop
mov
daa
inc
xchg
pop
adc
cmp
xorl
test
cmp
aam
test
sbb
cmp
mov
jge
imul
popa
cltd
and
cmp
or
mov
mov
arpl
test
or
les
or
insl
fiaddl
mov
test
ficompl
jecxz
outsb
pop
test
scas
sti
or
and
jg
mov
call
dec
repnz
cld
addr16
inc
jp
in
sub
sti
mov
mov
inc
fld
inc
bnd
mov
gs
iret
repz
int3
mov
fwait
pop
push
cld
rorl
cmp
mov
je
add
fisubl
push
inc
cwtl
int3
mov
mov
xchg
aas
je
lods
into
subb
jo
popf
mov
jno
inc
inc
roll
or
dec
and
mov
sub
cmp
shll
aam
and
inc
mov
jl
cli
lahf
xor
test
mov
xlat
dec
xchg
or
movups
subl
rolb
dec
push
sti
mov
into
lret
lret
lock
mov
fimuls
lea
mov
push
fsubrs
mov
push
xor
sub
imul
xor
mov
div
dec
mov
sub
inc
and
loop
mov
ror
stos
fisttpll
inc
outsb
add
mov
lea
ret
pop
mov
cmp
dec
movsl
bound
insb
inc
stos
xchg
addr16
mov
pcmpgtd
sub
in
jb
mov
push
inc
push
cmpb
xchg
mov
xor
in
push
adc
sub
jae
clc
jb
add
xchg
inc
cmpsb
loop
mov
lds
out
cld
loope
mov
dec
outsb
les
sbb
insl
loope
dec
fldl
inc
mov
push
adc
repnz
dec
jb
addr16
adc
je
in
sahf
push
xchg
in
cmpsl
and
jae
ret
imul
xchg
imull
or
scas
leave
and
es
lock
jno
push
nop
mov
shlb
aas
test
pop
dec
js
sub
pop
lods
cmp
movsb
push
fnsave
mov
fadd
adc
fwait
sub
dec
stos
add
pop
push
pop
es
add
mov
xor
daa
lcall
sub
and
inc
jecxz
cmp
sbb
adc
pop
mov
jl
jbe
dec
stos
lds
les
xor
aam
jnp
add
dec
push
mov
pushf
push
mov
inc
jbe
push
mov
and
cmp
cmp
mov
gs
adc
inc
lds
xchg
add
push
iret
sub
test
cltd
dec
mov
mov
add
loope
mov
jnp
or
jns
arpl
lret
sahf
xchg
xchg
mov
mov
lret
in
cli
inc
jbe
cmp
push
push
fs
mov
cmpsl
add
cmp
xor
jne
inc
lods
mov
std
fnstcw
and
fadds
dec
jo
adc
adcl
icebp
mov
inc
mov
ss
aam
dec
xchg
jb
not
adc
sub
lcall
pop
lret
mov
dec
ds
shrb
jle
mov
cmp
fstp
std
mov
in
lods
or
adc
push
out
mov
xchg
mov
int3
dec
lock
xchg
in
mov
xacquire
std
aad
pop
lcall
cmp
pop
mov
ja
xor
mov
orl
movsb
in
pushf
aad
cld
fs
mov
shlb
jno
inc
xor
lds
xchg
dec
int
fcmovnu
push
mov
mov
mov
push
dec
cwtl
jmp
fldt
inc
gs
int
mov
testl
iret
das
leave
lret
push
lock
cmp
xor
add
arpl
dec
lods
sahf
frstor
movl
pop
inc
aaa
call
cwtl
inc
push
sti
in
ficomps
or
push
cmp
xor
sbb
out
mov
push
jnp
lock
ss
cmp
lods
mov
mov
insl
je
iret
and
jb
jecxz
sbb
pop
fists
adc
push
enter
sbb
inc
ficoms
clc
push
xor
ds
xchg
sub
jle
test
cmp
cwtl
mov
mov
lcall
lock
scas
pop
mov
cli
cmp
dec
test
cmp
arpl
lea
xchg
and
into
ficomps
jne
ds
sar
loopne
sub
sub
jo
jo
not
cld
sbb
bound
dec
ljmp
outsl
int3
mov
addr16
push
bound
mov
inc
sub
jae
jne
iret
add
ja
pop
leave
je
pushf
fisubl
popf
push
cli
inc
cmc
cli
inc
fdivr
lock
int
mov
popf
sbb
pop
pop
cmp
outsl
into
mov
push
mov
pop
lret
aam
push
push
push
add
mov
js
lcall
sbb
imul
cmc
loopne
adc
inc
xchg
fwait
inc
out
loope
add
bsr
sbb
add
push
repz
mov
sub
add
adc
push
sbb
repnz
xchg
sub
mov
inc
mov
xor
and
iret
call
sub
push
push
mul
popa
inc
mov
fs
cmp
dec
leave
test
xor
mov
das
jecxz
pop
pop
mov
in
push
pop
jno
adc
loopne
pop
scas
or
inc
pop
cmpsb
and
add
into
or
mov
mov
add
cmp
adcl
icebp
mov
mov
jp
enter
xchg
test
test
pop
inc
aaa
ljmp
fiadds
dec
test
pop
inc
sbb
ja
dec
inc
aaa
xor
lds
in
jp
pslld
inc
sub
in
mov
pop
shr
shrb
fidivs
test
stos
fistpll
imul
arpl
lret
in
mov
push
loop
inc
push
mov
shll
mov
xchg
je
lcall
push
mov
or
inc
in
jns
adc
punpcklbw
leave
jmp
add
xchg
mov
dec
lcall
adc
mov
xor
in
adc
xor
lret
stos
cmc
cmc
jns
mov
std
pusha
stc
mov
cwtl
insl
jecxz
xchg
stos
and
pusha
cltd
clc
xchg
fldt
lcall
mov
in
xor
dec
cld
test
fdivrl
cltd
in
scas
inc
xor
jl
hlt
cmp
cmp
test
pusha
mov
pop
test
fs
inc
xlat
jo
xchg
xor
inc
movsb
pop
xor
jle
ror
repz
dec
jl
aam
push
mov
sbb
ficomps
dec
adc
pop
and
inc
les
jns
sub
stos
ljmp
out
mov
leave
lcall
fisubl
test
test
ret
loopne
xlat
adcl
and
int3
mov
movsb
icebp
cmp
loopne
sub
js
sbb
mov
adc
cmp
ljmp
test
movsl
pushf
mov
mov
icebp
outsl
les
sbb
rcl
adc
aam
das
loop
in
loop
bnd
mov
std
inc
push
outsl
sahf
jno
cwtl
pop
sub
jb
push
pop
je
xor
scas
pop
leave
mov
test
cs
lock
push
pop
inc
mov
sbb
in
or
dec
push
rorl
push
jl
mov
sub
loopne
out
sbb
push
jg
movsl
xchg
rcrb
pop
xchg
imul
push
adc
or
inc
mov
xor
mov
lods
and
sbb
outsl
xor
in
jnp
ljmp
std
lea
movl
sbb
mov
fnstenv
les
sub
cmpsl
lods
setp
mov
and
sub
sbb
add
push
ror
pop
cmpsl
xrelease
xor
cmp
pop
outsb
stos
xor
xlat
scas
cmp
movsb
clc
aad
inc
fadds
jae
adc
jmp
xor
xchg
roll
and
jecxz
dec
sbb
lcall
rcl
lock
sub
sti
fstl
jecxz,pn
xchg
pop
lock
mov
repz
clc
pop
int
test
insl
push
ficomps
popa
mov
loopne
jnp
rclb
cmp
sbb
cmp
movsl
imul
add
lcall
adc
cmpsl
data16
jb
push
iret
movsl
adc
ja
push
pop
andb
inc
jp
je
rorb
xchg
dec
ja
xchg
call
push
insb
xchg
xlat
pop
add
cmp
push
mov
inc
add
xor
push
stos
fiadds
stc
loop
sahf
in
addr16
push
adc
xor
ret
or
jle
xor
pop
xor
xchg
imul
rolb
or
jge
mov
xchg
negl
push
jl
iret
lds
repnz
mov
ror
inc
repz
pop
xchg
jo
outsb
cmp
push
mov
pushf
rclb
aam
inc
pop
push
mov
dec
sbb
xchg
add
sbb
adc
mov
cmp
mov
jecxz
into
out
fcoml
sub
push
mov
imul
ds
cmp
jmp
adcl
lret
rcrl
stos
outsl
mov
icebp
hlt
xor
inc
xlat
shrl
in
clc
fxch
mov
add
mov
jge
xor
movsl
mov
sbb
movsl
inc
adc
scas
cmp
xchg
pop
push
lret
stos
xor
stos
dec
push
in
xchg
push
add
add
insl
push
int3
jg
jne
jbe
cmpsl
xchg
push
fstps
fs
bound
fadds
lret
mov
or
mov
leave
add
mov
add
divps
clc
sbb
jne
jne
enter
sub
dec
idivb
stos
cmc
sub
sub
cmp
ret
cltd
outsb
lret
xchg
fldenv
pop
or
pop
out
sub
xor
imul
sbb
inc
jns
xor
xchg
sbb
mov
fstl
rcrb
pop
push
xlat
push
sub
popa
cmp
adc
mov
push
mov
gs
jo
lea
mov
fldt
push
jmp
stos
xor
inc
aas
adcb
ret
lret
daa
int3
ja
loope
and
jg
movsl
sti
xorl
pop
xchg
jnp
sbb
adc
adc
add
movsl
test
cmp
cmp
orb
or
add
xchg
xchg
xchg
lods
jo
fidivl
xor
aad
sbb
xchg
sbb
push
pop
inc
pop
fcmovnu
lods
pop
cmp
loopne
cs
popf
icebp
adc
outsl
rcrb
mov
xchg
ljmp
dec
sbb
sbb
fucom
std
lock
or
xchg
sub
pop
pop
cmp
push
aaa
scas
jl
mov
add
mov
imul
inc
fmul
lods
and
es
jb
lahf
das
loope
xchg
loope
outsl
xchg
lds
push
xchg
out
pop
push
test
ljmp
mov
neg
enter
pushf
xchg
and
repz
xchg
out
sbb
xchg
adc
mov
sub
jge
pop
xor
add
mov
ret
pop
push
xchg
cmp
jns
jg
or
lds
fdivs
mov
push
movsl
cld
jo
cltd
mov
pop
adc
and
stos
sbb
or
loope
insl
push
pusha
rolb
movsb
and
sub
pop
int3
loop
cmpsb
fs
mov
jo
and
ss
outsl
dec
jb
out
or
mov
std
or
xchg
dec
enter
in
loop
std
cmp
bnd
mov
sub
loopne
inc
int3
inc
or
loop
jg
mov
imul
pop
sahf
stos
popl
mov
jbe
cmp
out
xchg
cmp
addr16
rolb
mov
mov
not
cli
std
sbb
cmp
andb
mov
shrl
jecxz
sbb
orb
xor
loope
jmp
dec
mov
cld
data16
fistl
or
pop
aaa
xor
xor
sbb
outsl
or
ret
fwait
and
jns
xchg
pop
jge
gs
mov
mov
mov
lock
inc
mov
jns
xlat
mov
or
imul
aas
jmp
cmp
shlb
sbb
push
pop
enter
jns
pusha
in
mov
mov
cs
add
sub
jb
imul
stos
icebp
pop
movsl
mov
push
adc
mov
cs
push
fistpll
or
push
in
or
clc
adcb
aad
add
add
add
mov
pop
stos
pop
pop
mov
jo
fidivl
cmc
ljmp
pop
xchg
and
mov
gs
in
push
cmc
mov
in
nop
fists
or
jns
add
or
xchg
aad
sbb
lods
adc
sahf
adc
fwait
mov
dec
movsb
cltd
test
mov
mov
add
xor
cltd
insl
adc
aam
dec
or
hlt
and
data16
jbe
pop
adc
repz
popf
inc
fsts
jae
sbb
pop
and
mov
sti
cmp
jnp
nop
cmc
sbb
sbb
mov
fstpt
mov
leave
loop
dec
ds
movl
dec
and
xor
push
or
roll
xacquire
int
sub
dec
ficoms
loopne
lcall
dec
add
clc
jnp
out
xor
jmp
sub
lret
fsubrl
das
pop
mov
jp
ret
lods
out
inc
gs
jnp
outsl
cmpsl
and
add
fldt
nop
cmp
dec
push
sarl
and
push
cmp
ror
mov
mov
movsl
adcb
push
jle
xchg
mov
pusha
or
notl
push
shl
pop
push
dec
fnstenv
mov
pop
fdivl
mov
imul
xchg
jle
add
xchg
xor
mov
adc
sbb
push
pop
mov
test
inc
push
cmpsb
js
daa
pop
inc
arpl
xchg
pop
and
mov
or
aas
dec
imul
adc
push
pop
add
mov
xchg
sbb
inc
inc
ss
adc
mov
cltd
xor
leave
lds
jo
shr
lods
mov
sub
dec
loop
pop
pop
movsb
sub
or
sub
push
hlt
sub
in
inc
arpl
shrb
cs
dec
and
pushf
cld
leave
inc
lahf
test
pop
dec
repz
iret
mov
cmpsb
sbb
test
push
cmp
cli
xchg
test
pop
insl
and
aam
popa
fldt
adc
int
jl
or
sbb
xchg
mov
stc
cld
lret
sub
es
pop
stc
mov
xor
cld
inc
sub
movsb
and
or
adc
stos
mov
mov
cwtl
jo
stos
xor
xchg
out
shll
cmc
pop
decb
sti
rolb
xor
push
pop
jne
sub
outsb
mov
setnp
pop
mov
testb
lret
cwtl
cli
pusha
mov
xor
lods
dec
dec
es
and
pop
push
push
and
mov
pushf
mov
shll
sub
push
sbb
pop
jae
pop
out
xchg
pop
lods
das
sbb
inc
cltd
push
sti
cmp
pop
sti
and
xchg
popf
adc
adc
push
push
dec
push
shll
repz
dec
pop
sub
dec
xor
sarb
adc
sbb
xchg
ljmp
mov
fisubs
int3
push
scas
xor
ret
movsb
xchg
scas
and
jl
pop
mov
jbe
repnz
ret
jmp
add
adc
push
mov
shrb
mov
xchg
dec
inc
adc
mov
xor
push
loopne
or
sub
les
lds
dec
cmp
sar
jae
dec
nop
jmp
cmp
scas
scas
imul
xchg
aad
data16
xchg
imul
sbb
daa
movb
xor
xor
lret
pop
inc
ds
jno
das
pop
mov
jmp
lahf
mov
mov
pop
cmovne
jg
xor
int
jno
push
jns
int3
imul
scas
push
lods
push
outsb
mov
mov
adc
pushf
ficomps
jmp
iret
mov
lods
mov
sub
daa
mov
inc
cltd
mov
mov
insl
int3
out
pop
mov
mov
add
cmpsl
mov
je
dec
sbb
lds
sub
rolb
in
mov
xchg
hlt
mov
inc
test
jge
les
int3
test
les
rorb
push
pop
jmp
mov
dec
stc
fmulp
and
add
mov
out
jns
fisubl
negb
cld
xor
je
xchg
jno
stos
es
cli
in
fimuls
out
ret
pop
or
push
andb
fdivl
sahf
and
sti
mov
dec
inc
clc
mov
int3
mov
aas
xchg
adc
nop
out
and
sub
dec
rcll
mov
test
and
or
cli
xchg
pop
cmovns
pushf
xchg
mov
popa
sub
std
scas
push
fucomp
data16
aaa
fildl
in
pop
insl
xchg
mov
cltd
arpl
bound
dec
xlat
je
js
and
mov
fdivr
cmp
add
rclb
test
shlb
nop
mov
js
test
sbb
dec
and
or
dec
int
adc
dec
jp
stc
mov
clc
test
jmp
imul
mov
dec
cmp
fmuls
bound
adc
mov
fcoms
push
sbb
dec
push
mov
mov
push
test
aad
pop
cmpsb
add
cmp
dec
push
and
dec
decb
xor
pop
pop
mov
push
aam
orb
mov
cltd
and
mov
pop
lcall
ja
push
cmpsl
jbe
pop
repnz
rcrl
scas
outsl
dec
add
outsb
xor
inc
add
jno
sub
bts
jno
loop
call
subl
push
dec
sub
or
fbstp
push
test
imul
add
loopne
pop
mov
out
pop
out
rcrl
dec
lods
aas
ss
rcr
push
or
fcomip
daa
mov
lea
xchg
pop
add
pop
xchg
cmpsl
int
rcll
idivb
cmc
orl
pop
inc
add
movsb
dec
pusha
inc
aad
pop
sbb
inc
add
xchg
ret
in
fdivs
test
xlat
test
and
cli
sti
lea
xor
scas
mov
sub
inc
push
xor
icebp
pop
inc
adc
xchg
shlb
stc
movsl
cmpsl
inc
lret
cmp
jmp
aad
mov
scas
or
cld
pop
inc
xor
std
sbb
add
ret
test
xchg
cmpsb
imul
jo
popf
dec
jns
jns
adc
out
mov
jnp
aas
sbbb
cltd
jae
scas
mov
cmc
or
jne
cs
adc
cmpsb
adc
cs
imul
dec
popl
iret
jnp
pop
leave
lods
dec
loope
mov
addr16
adc
rcll
fcmovnb
repz
pop
pusha
inc
outsl
and
cmp
jne
jp
or
push
loope
test
mov
cltd
sub
add
bound
dec
cmp
imul
jmp
insb
pop
sub
sub
roll
inc
nop
sub
inc
jg
loopw
repnz
mov
mov
ret
inc
fbld
out
jnp
inc
loop
imul
xchg
and
ret
mov
adc
jge
sub
pop
xchg
out
adc
push
mov
lret
jns
cmp
fsubrl
pop
test
xor
ljmp
pop
inc
inc
and
mov
arpl
or
dec
out
add
mov
sahf
dec
loopne
sub
and
int3
insb
arpl
int3
xchg
ljmp
push
fnsave
mov
push
mov
aaa
add
movl
push
cmp
out
or
ret
mul
int
cltd
popf
cmp
mov
sub
push
rorb
pop
push
pop
inc
adc
mov
aad
push
sub
cmpsl
mov
int
fists
call
inc
shl
pusha
lock
mov
cmpsl
xchg
or
push
jo
mov
in
js
xor
xchg
insl
sub
pop
out
inc
xor
mov
lock
push
std
mov
lock
xchg
push
xor
popf
out
pop
stos
xchg
int
pop
sbb
and
hlt
push
cmp
push
mov
xor
outsb
pop
ret
test
add
lahf
sbb
jns
cmpl
xchg
or
addr16
mov
shl
jg
leave
ret
inc
dec
xchg
fildl
mulb
dec
xor
add
in
add
rolb
mov
sub
push
scas
jecxz
ja
mov
nop
es
or
fcmovnb
daa
mov
popa
mov
mov
xchg
out
sbb
adc
dec
adc
push
loopne
xor
sub
add
xor
add
repz
mov
test
lahf
sub
faddl
jne
fimuls
or
adc
jne
sub
adc
mov
test
pop
js
lods
push
arpl
ret
jmp
sbb
pop
push
mov
loope
mov
cld
dec
int3
xor
xchg
loopne
push
add
in
into
dec
ret
dec
push
loopne
mov
popa
jns
lea
stos
sahf
xchg
inc
xchg
add
mov
and
pop
nop
loop
mov
out
cld
inc
adc
andb
lea
dec
mov
lea
and
sub
subb
push
fnstenv
test
adc
pop
or
cli
pusha
cmp
cmpsl
rol
mov
xchg
and
out
mov
dec
outsl
cmp
sub
xchg
and
mov
cli
jecxz
jge
int
push
test
mov
imul
adc
lahf
in
cmp
nop
decl
push
pop
popf
sub
mov
in
xor
cs
xlat
mov
pop
out
add
add
xchg
add
inc
xchg
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
mov
add
