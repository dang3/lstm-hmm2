push
call
pop
cmp
jbe
cmpb
je
push
push
push
call
mov
xor
inc
ret
xor
ret
xor
push
push
push
push
call
add
dec
neg
sbb
inc
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
push
push
push
call
add
push
call
pop
mov
movl
mov
mov
call
test
je
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
mov
dec
dec
mov
cmpl
jae
mov
movzbl
mov
and
movzwl
and
movzbl
add
mov
add
mov
jmp
push
push
pushl
call
mov
xor
inc
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
rep
call
push
call
pop
pop
leave
ret
mov
cmp
inc
inc
or
inc
inc
popa
cmp
xor
inc
je
or
cmp
xor
xor
xor
inc
cmp
inc
inc
dec
cmp
inc
sub
cmp
cmp
cmp
inc
push
xor
xor
insb
ss
dec
xor
xor
xor
xor
jl
dec
cmp
inc
xor
inc
dec
or
ss
cmp
jb
cmp
cmp
je
cmp
and
gs
and
jne
and
and
xor
jae
data16
cmp
je
outsl
jne
das
and
imul
cmp
jb
cmp
insl
arpl
gs
outsb
or
and
xor
cmp
xor
jo
ss
cmp
pop
outsl
insb
cmp
push
xor
xor
cmp
outsb
or
js
xor
pop
outsl
xor
outsl
popa
push
or
jne
cmp
sub
xor
popa
and
js
push
dec
arpl
and
jb
imul
jo
xor
xor
je
xor
cmp
xor
inc
push
inc
ss
dec
xor
xor
cmp
outsb
inc
cmp
xor
inc
xor
xor
sub
xor
xor
xor
inc
ds
cs
xor
xor
xor
or
sub
aaa
dec
xor
xor
dec
xor
ss
xor
inc
xor
cmp
cs
xor
xor
xor
xor
xor
inc
inc
cmp
ss
ss
je
cmp
ss
xor
jl
ss
xor
inc
xor
xor
cmp
xor
inc
inc
cmp
xor
dec
inc
xor
inc
inc
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
inc
push
xor
xor
ss
xor
inc
xor
cmp
pop
arpl
ss
inc
xor
inc
xor
ss
xor
xor
inc
cmp
inc
ss
popa
inc
ss
xor
xor
xor
dec
cmp
inc
cmp
cmp
dec
or
xor
xor
jl
cmp
xor
inc
jl
inc
xor
xor
xor
xor
xor
xor
xor
xor
inc
cmp
xor
or
xor
xor
je
xor
inc
xor
cmp
cmp
inc
cmp
cmp
inc
cmp
xor
dec
cmp
xor
cmp
xor
cmp
inc
xor
xor
xor
inc
cmp
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
dec
xor
xor
insb
xor
inc
cmp
cmp
xor
xor
xor
or
xor
inc
or
xor
inc
inc
cmp
ss
inc
cmp
dec
xor
aaa
cmp
inc
xor
xor
inc
xor
inc
cmp
xor
inc
xor
inc
cmp
inc
aaa
inc
cmp
inc
inc
xor
or
inc
inc
aaa
xor
aaa
inc
dec
xor
inc
inc
or
dec
cmp
ss
inc
inc
ss
inc
cmp
inc
xor
xor
aaa
xor
insb
inc
xor
inc
cmp
xor
inc
aaa
inc
xor
inc
xor
aaa
dec
dec
xor
dec
inc
xor
cmp
xor
inc
xor
insb
xor
xor
xor
inc
cmp
aaa
cmp
cmp
inc
inc
inc
inc
inc
insb
ss
cmp
inc
inc
xor
or
imul
data16
or
pop
jne
je
sub
popa
outsb
xor
xor
gs
jns
gs
arpl
imul
or
arpl
arpl
outsb
popa
arpl
je
popa
gs
outsl
insb
je
gs
arpl
popa
arpl
daa
xor
imul
popa
push
arpl
outsb
outsl
pop
outsb
popa
jae
outsl
popa
outsl
sub
pop
data16
pop
daa
popa
pop
or
imul
das
je
pop
imul
jae
sub
outsb
or
fs
imul
pop
je
popa
popa
bound
data16
or
jb
outsl
outsl
je
sub
je
imul
imul
js
inc
xor
inc
cmp
cmp
xor
inc
cmp
cmp
or
aaa
dec
cmp
inc
aaa
inc
inc
inc
popa
imul
cmp
fs
cs
js
xor
xor
cmp
xor
jne
je
imul
dec
cmp
jb,pn
aaa
pop
xor
arpl
inc
dec
arpl
jb
je
inc
outsl
jb
xor
aaa
xor
jo
xor
cmp
xor
xor
xor
xor
inc
imul
push
jb,pn
xor
inc
inc
xor
xor
inc
jl
inc
xor
xor
inc
dec
inc
xor
insb
or
aaa
jl
xor
xor
xor
xor
xor
dec
data16
or
and
xor
daa
or
insb
cmp
cmp
aaa
push
cmp
xor
jb
and
and
or
data16
xor
dec
cmp
data16
data16
or
xor
xor
fs
or
or
gs
outsl
aaa
js
xor
push
jno
and
dec
jb
outsl
arpl
or
cmp
xor
and
fs
xor
pop
cmp
or
xor
insb
xor
sub
bound
outsb
dec
cmp
cmp
aaa
cmp
jae
jl
gs
jl
cmp
inc
inc
cmp
inc
xor
ss
dec
xor
je
inc
aaa
xor
xor
xor
inc
xor
cmp
xor
xor
cmp
inc
jp
xor
inc
cmp
inc
aaa
xor
jb
inc
dec
je
inc
xor
inc
or
je
xor
gs
jp
insb
inc
inc
insb
xor
cmp
xor
pop
xor
pop
outsb
aaa
xor
inc
xor
jl
or
or
inc
aaa
xor
aaa
inc
inc
inc
xor
js
inc
inc
cmp
aaa
xor
xor
dec
aaa
xor
xor
aaa
aaa
dec
xor
cmp
inc
je
aaa
jae
jae
cmp
xor
imul
inc
je
inc
inc
xor
jne
outsb
xor
imul
inc
aaa
bound
arpl
je
cs
jns
jb
jae
cmp
push
xor
inc
gs
xor
dec
sub
xor
xor
insb
inc
xor
popa
inc
or
xor
jb
xor
xor
bound
pop
or
je
inc
xor
xor
imul
jb
inc
push
cmp
pop
js
jae
and
imul
push
cmp
xor
push
xor
das
or
xor
dec
inc
xor
and
xor
jns
cmp
bound
pop
or
and
cmp
cmp
inc
jl
inc
or
aaa
outsb
cmp
dec
ds
cmp
cmp
inc
xor
cmp
jb
inc
aaa
inc
or
inc
cmp
inc
cmp
jo
jl
cmp
inc
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
inc
outsb
cmp
inc
aaa
inc
cmp
cmp
jl
cmp
inc
insb
inc
cmp
cmp
cmp
xor
cmp
cmp
gs
inc
aaa
addr16
xor
xor
gs
dec
or
cmp
inc
pop
cmp
push
inc
inc
cmp
xor
gs
inc
xor
cmp
aaa
cmp
aaa
arpl
jb
inc
cmp
cmp
dec
cmp
jl
cmp
xor
xor
pop
bound
cmp
cmp
cmp
cmp
aaa
inc
aaa
inc
cmp
cmp
insb
sub
cmp
inc
imul
xor
xor
xor
dec
aaa
xor
sub
dec
cmp
dec
xor
inc
sub
xor
cmp
inc
cmp
aaa
xor
insb
xor
outsb
je
or
inc
cmp
inc
dec
xor
cmp
or
outsb
cmp
xor
inc
xor
aaa
inc
xor
inc
inc
dec
cmp
xor
xor
sub
xor
cmp
inc
aaa
xor
aaa
cmp
outsb
cmp
xor
xor
sub
aaa
aaa
xor
xor
inc
cmp
xor
aaa
inc
cmp
cmp
xor
xor
aaa
aaa
imul
xor
dec
xor
inc
inc
sub
xor
aaa
je
xor
xor
cmp
or
xor
xor
cmp
je
inc
outsb
cmp
aaa
inc
xor
jnp
insl
fs
imul
gs
je
cmp
and
outsl
and
pop
pop
and
outsl
jge
insl
insl
and
sub
jge
insb
insb
popa
jne
js
bound
outsb
popa
js
and
sub
sub
gs
je
je
insl
gs
gs
arpl
jnp
and
sub
sub
sub
cmp
je
jge
and
cmp
sub
aaa
xor
xor
xor
cmp
xor
xor
dec
xor
inc
insb
dec
inc
cmp
xor
xor
xor
xor
inc
xor
xor
ss
xor
inc
xor
or
cmp
cmp
xor
xor
aaa
xor
xor
xor
xor
jl
insb
inc
xor
imul
xor
xor
inc
xor
or
xor
or
dec
cmp
xor
xor
xor
cmp
cmp
inc
inc
ss
cmp
xor
xor
jl
xor
outsb
inc
cmp
xor
xor
xor
dec
aaa
cmp
xor
outsl
xor
cmp
xor
ss
xor
xor
aaa
cmp
xor
inc
xor
xor
xor
aaa
cmp
jl
xor
or
inc
or
xor
inc
xor
xor
dec
inc
insb
outsb
arpl
imul
xor
insb
je
outsl
cmp
cmp
je
push
xor
jbe
ds
gs
je
xor
ds
or
ss
fs
je
cs
push
je
outsb
cmp
and
je
insb
sub
outsb
and
cmp
jb
outsl
cmp
or
imul
xor
insb
xor
pop
je
xor
je
xor
imul
jb
outsl
outsl
outsb
outsl
cmp
xor
xor
outsb
and
xor
imul
or
pop
ds
arpl
and
jae
or
jo
ss
xor
inc
xor
inc
xor
or
dec
xor
cmp
cmp
xor
xor
or
inc
dec
cmp
xor
cmp
dec
cmp
jl
or
xor
inc
inc
xor
xor
jl
xor
xor
cmp
xor
cmp
cmp
xor
dec
inc
dec
jl
aaa
inc
inc
xor
xor
insb
inc
xor
jl
xor
xor
xor
inc
inc
xor
inc
xor
insb
inc
xor
xor
cmp
xor
xor
cmp
inc
ss
ss
jl
inc
xor
xor
xor
dec
xor
xor
inc
inc
dec
xor
cmp
inc
dec
inc
xor
cmp
xor
cmp
xor
inc
aaa
xor
cmp
xor
jl
xor
cmp
ss
inc
xor
xor
xor
xor
xor
aaa
inc
or
xor
xor
cmp
jl
xor
cmp
or
xor
xor
cmp
inc
xor
xor
xor
inc
xor
cmp
aaa
inc
xor
xor
xor
inc
cmp
cmp
cmp
cmp
inc
or
cmp
or
xor
xor
cmp
aaa
inc
inc
xor
inc
xor
xor
jl
or
cmp
cmp
cmp
cmp
xor
inc
xor
xor
xor
cmp
inc
xor
inc
jb
cmp
imul
xor
xor
outsb
xor
aaa
xor
xor
xor
xor
xor
jae
cmp
inc
ds
inc
gs
xor
cmp
xor
xor
xor
xor
jae
jo
xor
xor
inc
xor
sub
push
cmp
xor
jb
xor
xor
xor
xor
cmp
inc
jl
xor
dec
or
imul
ss
xor
gs
inc
inc
cmp
cmp
jl
xor
xor
xor
xor
xor
cmp
xor
cmp
ss
je
outsl
or
insb
inc
xor
xor
xor
jb
inc
inc
aaa
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
xor
jae
xor
xor
inc
xor
inc
inc
aaa
dec
inc
cmp
ss
xor
ss
xor
inc
inc
cmp
cmp
inc
ss
inc
xor
aaa
xor
inc
jl
inc
xor
xor
xor
inc
inc
insl
xor
push
xor
cmp
cs
jo
ss
dec
or
dec
ss
or
or
xor
xor
aaa
cmp
aaa
cmp
xor
aaa
xor
jl
xor
ss
jl
inc
aaa
xor
cs
inc
xor
jl
cmp
xor
bound
or
xor
or
inc
inc
inc
ss
xor
inc
inc
inc
cmp
dec
xor
cmp
cmp
dec
xor
inc
inc
sub
cmp
ss
xor
ss
xor
ss
jl
xor
or
cmp
ss
inc
inc
cmp
dec
inc
xor
xor
cmp
inc
inc
ss
inc
insb
xor
dec
inc
inc
insb
xor
xor
inc
inc
inc
inc
xor
xor
xor
xor
xor
inc
xor
xor
inc
dec
inc
inc
ss
cmp
inc
inc
dec
inc
inc
xor
xor
dec
dec
insb
xor
xor
jl
xor
dec
or
inc
inc
xor
xor
dec
inc
xor
inc
xor
dec
dec
dec
xor
cmp
inc
xor
inc
inc
inc
jl
inc
inc
xor
xor
xor
xor
inc
cmp
insb
inc
xor
jl
xor
inc
xor
cmp
xor
xor
xor
jl
cmp
ss
cmp
inc
dec
xor
insb
cmp
xor
xor
dec
xor
xor
inc
or
dec
dec
xor
inc
xor
inc
dec
inc
ss
xor
xor
inc
inc
or
xor
cmp
xor
cmp
inc
jl
xor
jl
inc
inc
cmp
cmp
xor
inc
dec
dec
inc
inc
xor
xor
cmp
xor
cmp
jl
inc
xor
xor
inc
cmp
xor
cmp
cmp
inc
insb
inc
xor
xor
xor
xor
xor
cmp
xor
xor
inc
inc
jl
inc
imul
xor
insb
outsl
bound
imul
cmp
xor
popa
jae
bound
je
or
das
cmp
sub
sub
jb
xor
jo
je
cmp
outsl
inc
jo
dec
xor
outsb
inc
or
and
arpl
cmp
popa
xor
jb
arpl
imul
inc
pop
xor
imul
arpl
cmp
jne
jns
or
xor
or
cs
cmp
jb
cmp
dec
inc
gs
xor
aaa
inc
xor
jb
imul
cmp
push
xor
jo
fs
insb
xor
insb
push
jae
cmp
popa
outsb
outsb
aaa
xor
outsl
and
and
and
gs
fs
cmp
jo
xor
or
cmp
dec
xor
cmp
cmp
inc
xor
xor
jl
cmp
inc
xor
inc
inc
inc
inc
inc
inc
cmp
cmp
inc
dec
xor
xor
inc
dec
dec
xor
inc
insb
dec
inc
xor
insb
inc
inc
dec
or
xor
dec
xor
inc
inc
xor
inc
cmp
inc
cmp
cmp
xor
xor
inc
inc
inc
or
cmp
or
cmp
xor
cmp
xor
inc
inc
xor
inc
inc
dec
xor
cmp
xor
xor
inc
cmp
inc
inc
inc
or
ss
cmp
xor
xor
inc
cmp
cmp
inc
inc
xor
xor
inc
jl
cmp
cmp
xor
or
inc
cmp
inc
or
inc
dec
inc
cmp
inc
inc
inc
insb
sub
inc
cmp
xor
xor
xor
jl
inc
jl
cmp
inc
inc
or
sub
aaa
inc
insb
inc
insb
cmp
dec
inc
inc
xor
inc
dec
cmp
cmp
inc
xor
xor
inc
cmp
cmp
insb
xor
inc
dec
inc
cmp
cmp
cmp
insb
xor
or
xor
ss
xor
dec
insb
xor
dec
xor
inc
xor
cmp
inc
insb
inc
cmp
inc
jl
or
insb
xor
xor
dec
inc
inc
xor
xor
cmp
cmp
xor
dec
xor
cmp
cmp
inc
xor
xor
insb
inc
inc
xor
xor
inc
xor
cmp
dec
inc
cmp
inc
cmp
inc
cmp
cmp
xor
inc
inc
jl
xor
dec
dec
inc
aaa
inc
inc
inc
xor
cmp
inc
xor
inc
aaa
or
insb
cmp
inc
xor
xor
inc
cmp
xor
xor
cmp
jl
ss
dec
inc
dec
cmp
or
xor
inc
inc
cmp
dec
jl
dec
inc
inc
inc
cmp
inc
xor
inc
xor
inc
xor
dec
cmp
cmp
inc
cmp
or
cmp
xor
inc
inc
inc
cmp
xor
inc
cmp
xor
xor
inc
xor
inc
inc
inc
inc
xor
inc
xor
dec
cmp
xor
xor
inc
dec
inc
inc
insb
xor
xor
sub
xor
inc
sub
inc
jl
inc
xor
inc
inc
xor
xor
insb
xor
inc
inc
inc
xor
inc
cmp
xor
xor
xor
outsb
inc
cmp
xor
xor
inc
cmp
inc
inc
dec
inc
or
xor
xor
xor
inc
xor
cmp
inc
xor
aaa
inc
dec
or
inc
inc
sub
cmp
inc
cmp
xor
inc
xor
inc
xor
inc
xor
inc
xor
xor
xor
inc
xor
inc
dec
inc
dec
imul
xor
cmp
xor
insb
cmp
inc
inc
cmp
dec
cmp
sub
sub
gs
cmp
sub
xor
addr16
and
jb
jb
cs
xor
or
xor
cmp
jae
and
and
aaa
xor
jb
outsb
jns
das
outsb
aaa
xor
pop
xor
outsl
jo
and
insl
xor
and
outsl
outsl
cmp
jb
and
or
imul
jb
popa
sub
and
or
cmp
insb
je
or
gs
xor
popa
jl
jb
inc
jae
cmp
or
jl
inc
pop
xor
xor
imul
cmp
xor
gs
inc
ss
pop
aaa
inc
inc
or
or
xor
fs
cmp
cmp
dec
cmp
xor
xor
xor
inc
inc
cmp
pop
xor
cmp
xor
dec
xor
inc
bound
xor
inc
imul
je
outsb
jae
je
sub
inc
jo
inc
insb
outsb
ss
xor
gs
inc
aaa
xor
xor
inc
popa
xor
cmp
cmp
xor
xor
push
xor
jae
jb
cmp
xor
cmp
xor
xor
xor
xor
xor
inc
xor
dec
cmp
xor
je
inc
cmp
inc
inc
je
inc
inc
je
inc
cmp
dec
gs
push
or
cmp
or
inc
xor
insb
inc
cmp
cmp
jl
cmp
inc
inc
inc
inc
dec
or
dec
inc
xor
xor
xor
xor
gs
xor
cmp
cmp
xor
xor
jo
aaa
gs
inc
popa
xor
cmp
xor
xor
outsb
xor
arpl
xor
ss
xor
inc
inc
ss
or
xor
inc
inc
or
xor
ss
xor
inc
cmp
ss
cmp
dec
aaa
or
cmp
inc
ss
insb
inc
inc
cmp
xor
jl
inc
xor
cmp
xor
cmp
inc
xor
dec
xor
xor
inc
cmp
cmp
ss
inc
xor
xor
xor
inc
cmp
cmp
xor
inc
cmp
xor
cmp
xor
or
cmp
dec
inc
inc
inc
insb
inc
xor
or
inc
inc
inc
or
dec
cmp
xor
xor
xor
inc
inc
inc
dec
cmp
xor
cmp
xor
cmp
cmp
cmp
xor
dec
or
inc
insb
xor
popa
inc
aaa
xor
fs
xor
xor
inc
xor
jne
inc
cmp
dec
xor
popa
xor
xor
xor
push
inc
dec
xor
popa
outsb
xor
xor
xor
xor
xor
cmp
sub
inc
xor
sub
cmp
inc
inc
push
arpl
data16
xor
cmp
xor
cmp
jl
dec
inc
inc
dec
cmp
aaa
inc
aaa
xor
inc
aaa
xor
xor
xor
aaa
xor
xor
dec
inc
dec
aaa
aaa
xor
xor
aaa
dec
insb
jl
xor
xor
jl
cmp
cmp
dec
xor
aaa
inc
xor
inc
xor
or
xor
dec
aaa
xor
aaa
or
xor
or
xor
xor
aaa
xor
dec
cmp
cmp
insb
cmp
xor
xor
xor
xor
xor
xor
xor
inc
inc
cmp
cmp
xor
jl
aaa
inc
xor
aaa
inc
dec
xor
insb
xor
xor
or
inc
cmp
xor
aaa
cmp
xor
inc
dec
xor
insb
aaa
inc
inc
aaa
inc
xor
bound
inc
aaa
inc
cs
cmp
insb
aaa
imul
insb
xor
xor
xor
inc
aaa
inc
push
inc
jo
xor
inc
inc
inc
dec
xor
xor
bound
insb
xor
inc
cmp
jl
cmp
inc
inc
inc
or
inc
inc
inc
inc
xor
xor
inc
push
cmp
gs
inc
inc
xor
dec
inc
ds
xor
xor
xor
inc
cmp
inc
inc
inc
jb
inc
inc
dec
cmp
jl
aaa
xor
cmp
xor
inc
xor
aaa
gs
jbe
inc
arpl
ds
inc
xor
inc
dec
xor
xor
jl
aaa
inc
xor
jb
cmp
cmp
xor
jne
and
cmp
gs
jae
sub
jae
gs
xor
je
gs
addr16
gs
xor
outsb
cmp
jae
gs
jo
jae
cmp
sub
jb
and
je
or
cmp
cmp
inc
data16
insb
jb
insl
outsl
xor
and
pop
xor
arpl
insw
pop
and
jo
xor
arpl
and
outsb
and
insb
pop
sub
jo
sub
cmp
popa
cmp
sub
push
insl
insb
and
jb
outsb
outsl
jae
jo
xor
je
insl
pop
pop
pop
gs
jae
jne
je
jb
popa
jb
sub
gs
arpl
jo
je
gs
push
gs
jae
jae
sub
insb
arpl
gs
bound
jb,pn
das
sub
outsb
outsb
jb
outsb
xor
je
and
das
das
arpl
je
je
jb
cs
js
imul
popa
and
cmp
inc
xor
cmp
inc
xor
ss
xor
inc
cmp
xor
ss
inc
jl
ss
xor
cmp
inc
ss
inc
xor
dec
xor
xor
ss
xor
ss
ss
dec
cmp
inc
jl
inc
xor
dec
cmp
inc
xor
xor
inc
xor
xor
inc
inc
xor
inc
inc
jl
inc
xor
inc
or
dec
inc
inc
or
xor
inc
cmp
jl
dec
inc
dec
inc
inc
inc
inc
sub
insb
or
cmp
xor
aaa
xor
inc
insb
insb
xor
insb
inc
xor
jl
inc
xor
xor
xor
xor
inc
xor
aaa
inc
cmp
xor
dec
inc
dec
cmp
xor
or
xor
sub
cs
cmp
xor
cmp
push
inc
cs
je
ss
sub
aaa
gs
dec
inc
sub
popa
cmp
cmp
cmp
ss
cmp
xor
inc
aaa
dec
inc
cmp
dec
inc
je
insl
pop
xor
cmp
inc
xor
xor
inc
xor
sub
xor
jae
ss
xor
jns,pn
xor
ss
inc
sub
inc
imul
dec
inc
xor
xor
xor
aaa
cmp
insb
je
inc
inc
sub
xor
sub
xor
inc
inc
inc
outsb
cmp
cmp
popa
inc
sub
gs
and
jo
push
xor
xor
or
jae
jo
sub
xor
cmp
and
xor
xor
and
dec
jae
xor
push
cmp
inc
inc
cmp
xor
dec
xor
sub
je
cmp
cmp
xor
inc
jo
aaa
cmp
xor
inc
xor
xor
cmp
xor
cmp
xor
jae
imul
inc
jb
xor
aaa
cmp
aaa
cmp
xor
inc
aaa
xor
dec
inc
inc
xor
popa
xor
xor
cmp
aaa
inc
ss
xor
xor
xor
xor
xor
cmp
cmp
cmp
inc
or
sub
cmp
xor
cmp
cmp
xor
arpl
cmp
xor
xor
xor
xor
cs
xor
cmp
ds
xor
aaa
xor
jb
push
inc
popa
cmp
cmp
inc
cmp
aaa
xor
xor
ss
inc
xor
inc
aaa
dec
jl
xor
dec
insb
xor
cmp
aaa
xor
dec
aaa
xor
aaa
cmp
jl
dec
inc
xor
xor
insb
cmp
xor
cmp
xor
cmp
xor
inc
aaa
jl
dec
cmp
dec
xor
xor
or
xor
xor
xor
xor
xor
inc
jl
or
xor
xor
xor
dec
cmp
aaa
or
dec
or
inc
cmp
cmp
xor
xor
inc
xor
xor
aaa
xor
xor
xor
ss
xor
ss
dec
xor
inc
inc
xor
ss
xor
ss
inc
inc
xor
dec
ss
xor
insb
xor
xor
cmp
cmp
xor
inc
xor
ss
aaa
cmp
inc
dec
inc
ss
inc
xor
ss
xor
ss
xor
inc
cmp
inc
inc
xor
xor
aaa
ss
cmp
xor
ss
xor
or
xor
jl
dec
insb
ss
cmp
ss
ss
inc
xor
xor
xor
jl
xor
cmp
cmp
xor
inc
xor
or
insb
xor
insb
dec
cmp
xor
inc
inc
cmp
jl
inc
inc
inc
xor
xor
xor
xor
cmp
inc
xor
xor
xor
xor
inc
xor
cmp
ss
insb
xor
cmp
inc
xor
or
xor
dec
insb
jl
cmp
dec
inc
aaa
xor
inc
xor
inc
insb
insb
xor
aaa
dec
inc
inc
xor
insb
cmp
xor
aaa
xor
or
inc
or
dec
ss
xor
inc
or
cmp
xor
aaa
xor
inc
cmp
xor
xor
cmp
inc
inc
cmp
xor
inc
jl
xor
jl
inc
cmp
xor
dec
xor
inc
xor
inc
inc
jl
inc
xor
aaa
inc
aaa
inc
xor
inc
dec
xor
aaa
inc
inc
xor
inc
inc
insb
dec
xor
inc
inc
inc
inc
inc
xor
inc
xor
inc
dec
cmp
aaa
dec
aaa
insb
xor
inc
cmp
inc
inc
jl
insb
inc
inc
xor
xor
inc
inc
aaa
xor
inc
or
xor
inc
or
inc
jl
inc
or
inc
cmp
xor
xor
aaa
xor
cmp
inc
inc
ss
inc
inc
cmp
inc
jl
dec
ss
inc
xor
inc
inc
xor
cmp
xor
inc
dec
jl
dec
xor
inc
insb
xor
jl
cmp
xor
cmp
inc
cmp
xor
dec
ss
xor
xor
inc
xor
xor
dec
cmp
xor
inc
dec
xor
cmp
insb
ss
xor
cmp
dec
or
inc
xor
inc
inc
ss
or
outsl
cmp
cmp
cmp
cmp
inc
cmp
inc
cmp
cmp
cmp
xor
inc
gs
aaa
jae
inc
cmp
inc
dec
popa
fs
pop
cmp
outsb
inc
inc
cmp
cmp
cmp
fs
cmp
je
inc
aaa
push
cmp
xor
cmp
bound
cmp
cmp
cmp
dec
je
dec
inc
bound
outsl
inc
inc
insb
inc
insb
inc
inc
inc
insl
outsl
inc
insb
inc
inc
pop
insl
jb
cmp
xor
cmp
inc
cmp
xor
cmp
jae
inc
cmp
inc
inc
gs
cmp
or
aaa
inc
inc
je
inc
jl
cmp
inc
inc
insb
inc
insl
jb
popa
jl
aaa
inc
dec
popa
push
inc
sub
or
xor
data16
inc
cmp
cmp
gs
sub
ss
das
inc
xor
xor
gs
xor
cmp
cmp
cmp
and
cmp
push
xor
outsl
inc
inc
or
dec
push
imul
sub
sub
inc
cmp
sub
cmp
inc
xor
inc
je
cmp
cmp
je
popa
gs
sub
cmp
ss
inc
popa
dec
inc
popa
inc
outsb
inc
inc
jb
cmp
ss
xor
xor
arpl
imul
dec
arpl
jb
push
cmp
jae
cmp
or
xor
cmp
imul
outsb
cs
cmp
xor
inc
inc
cmp
gs
gs
jo
outsl
sub
jne
xor
jb
dec
inc
jns
xor
pop
outsl
jne
je
cmp
imul
xor
push
aaa
jl
cmp
dec
xor
inc
dec
inc
inc
xor
xor
xor
dec
xor
xor
inc
aaa
xor
cmp
insb
xor
cmp
cmp
or
inc
xor
xor
dec
cmp
insb
xor
inc
cmp
dec
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
cmp
dec
dec
inc
inc
xor
xor
inc
xor
dec
cmp
or
xor
cmp
cmp
xor
xor
xor
aaa
xor
inc
inc
xor
or
xor
cmp
xor
inc
inc
inc
xor
xor
dec
xor
or
xor
xor
xor
inc
inc
dec
insb
dec
or
ss
xor
xor
cmp
ss
insb
xor
dec
xor
xor
xor
xor
jl
xor
xor
xor
or
or
inc
dec
xor
xor
cmp
jl
xor
ss
dec
xor
jl
dec
inc
ss
jl
inc
inc
xor
jl
xor
inc
inc
xor
cmp
inc
xor
xor
xor
xor
cmp
xor
xor
inc
xor
xor
xor
xor
insb
inc
inc
ss
inc
cmp
sub
xor
insb
cmp
dec
xor
xor
insb
cmp
xor
xor
inc
inc
inc
xor
dec
xor
xor
xor
xor
aaa
inc
inc
xor
cmp
cmp
sub
xor
xor
cmp
xor
ss
inc
ss
xor
xor
xor
xor
dec
inc
cmp
xor
or
insb
dec
cmp
inc
cmp
dec
cmp
dec
insb
xor
cmp
xor
cmp
dec
xor
cmp
inc
jl
cmp
xor
xor
inc
inc
or
dec
xor
cmp
inc
aaa
cmp
inc
cmp
dec
dec
inc
inc
inc
cmp
cmp
xor
insb
xor
inc
xor
inc
cmp
xor
or
inc
xor
or
dec
xor
inc
cmp
cmp
cmp
cmp
inc
xor
inc
cmp
xor
cmp
cmp
xor
cmp
inc
xor
jl
cmp
xor
cmp
xor
inc
insb
inc
or
xor
cmp
inc
inc
dec
xor
cmp
cmp
jl
cmp
cmp
inc
xor
xor
inc
xor
cmp
dec
cmp
inc
xor
xor
jl
insb
cmp
dec
xor
inc
xor
cmp
xor
xor
jl
or
xor
cmp
or
cmp
inc
inc
inc
cmp
cmp
inc
xor
inc
inc
or
xor
dec
inc
cmp
cmp
xor
inc
insb
dec
dec
dec
xor
inc
cmp
inc
cmp
xor
cmp
inc
cmp
insb
xor
inc
inc
inc
insb
xor
dec
inc
cmp
inc
cmp
cmp
xor
xor
inc
ds
insb
or
xor
inc
cmp
inc
inc
inc
inc
inc
xor
cmp
jl
insb
cmp
cmp
inc
jl
cmp
jl
xor
xor
cmp
cmp
cmp
cmp
cmp
xor
xor
inc
dec
inc
cmp
inc
or
cmp
inc
cmp
or
push
cmp
dec
dec
or
cmp
cmp
cmp
inc
dec
cs
cmp
xor
cmp
inc
dec
xor
inc
inc
xor
jl
jl
inc
inc
inc
dec
aaa
inc
inc
inc
dec
inc
aaa
inc
inc
cmp
inc
dec
inc
aaa
jl
or
xor
inc
cmp
xor
inc
cmp
insb
jl
inc
inc
dec
xor
xor
cmp
xor
xor
inc
inc
inc
inc
ss
dec
cmp
inc
xor
xor
inc
cmp
xor
xor
inc
inc
aaa
xor
xor
or
xor
cmp
cmp
inc
inc
inc
xor
inc
xor
xor
cmp
xor
inc
jl
xor
inc
jl
jl
inc
xor
insb
aaa
or
dec
je
ss
inc
inc
xor
xor
xor
inc
dec
inc
xor
xor
cmp
xor
insb
xor
xor
dec
xor
sub
inc
insb
or
xor
dec
inc
dec
inc
inc
inc
xor
xor
inc
ss
inc
cmp
aaa
cmp
xor
inc
aaa
xor
inc
aaa
insb
dec
xor
inc
dec
xor
cmp
xor
inc
cmp
sub
or
xor
xor
xor
xor
xor
inc
xor
xor
xor
dec
inc
aaa
aaa
aaa
dec
dec
cmp
inc
xor
cmp
aaa
xor
insb
aaa
xor
cmp
dec
cmp
inc
aaa
aaa
insb
inc
insb
sub
xor
inc
xor
inc
jl
xor
cmp
xor
cmp
xor
inc
xor
xor
or
dec
xor
inc
inc
xor
xor
xor
dec
dec
xor
inc
cmp
cmp
cmp
cmp
aaa
aaa
inc
cmp
cmp
aaa
xor
inc
inc
dec
cmp
xor
insb
aaa
jl
ss
insb
dec
dec
xor
cmp
dec
xor
xor
inc
aaa
xor
jl
xor
xor
jl
xor
ss
insb
dec
xor
xor
xor
xor
insb
aaa
xor
xor
inc
xor
dec
xor
cmp
aaa
or
aaa
inc
xor
inc
jl
inc
xor
xor
inc
dec
dec
xor
jl
xor
aaa
xor
inc
xor
inc
dec
dec
inc
dec
xor
aaa
inc
xor
inc
xor
inc
insb
inc
xor
inc
inc
xor
or
inc
dec
aaa
xor
inc
xor
cmp
aaa
xor
inc
inc
xor
aaa
xor
or
inc
xor
imul
and
and
xor
push
jne
and
and
bound
imul
je,pn
jnp
xor
xor
gs
outsl
xor
insb
jge
aaa
sub
push
push
imul
fs
sub
ss
dec
bound
outsb
imul
bound
and
cs
sub
sub
and
jnp
gs
jne
outsb
aaa
sub
cmp
insb
insl
gs
xor
push
jae
jb
pop
bound
jge
jnp
sub
and
xor
jae
gs
and
outsb
jne
insl
jb
xor
and
xor
and
outsl
outsb
and
and
and
bound
and
and
jge
imul
bound
jne
jge
cmp
and
sub
popa
jb
sub
xor
ss
xor
xor
insb
outsl
xor
insl
xor
gs
outsl
cmp
and
ss
xor
bound
je
popa
jae
jae
pop
xor
and
ss
outsb
js
cmp
insl
ss
je
jo
and
outsb
outsl
jae
bound
je
sub
jb
jnp
xor
and
gs
das
jb
pop
imul
jae
insl
outsb
push
gs
and
outsb
sub
sub
jae
outsb
je
jae
gs
jns
push
ds
gs
insl
bound
jb
js
cs
imul
inc
cmp
inc
inc
dec
xor
xor
xor
xor
cmp
xor
xor
xor
dec
jl
or
xor
inc
xor
cmp
xor
inc
xor
inc
insb
jl
inc
aaa
cmp
xor
inc
cmp
dec
xor
inc
aaa
cmp
xor
xor
cmp
xor
dec
xor
xor
dec
inc
dec
jl
cmp
or
xor
inc
xor
cmp
xor
inc
xor
pop
inc
sub
xor
aaa
inc
je
je
cmp
cmp
cmp
sub
or
jae
popa
aaa
inc
xor
ss
dec
inc
outsb
outsl
imul
jbe
xor
xor
outsl
insb
inc
arpl
xor
gs
or
dec
popa
inc
xor
xor
insb
cmp
ss
cmp
jne
aaa
jb
jo
popa
ja
inc
xor
xor
inc
ss
xor
inc
ss
aaa
jb
jae
cmp
inc
cmp
gs
inc
ss
ss
inc
insb
jo
gs
jb
cmp
xor
xor
je
xor
aaa
cmp
xor
cmp
cmp
dec
cmp
cmp
dec
xor
xor
inc
dec
cmp
jl
inc
inc
xor
dec
jl
aaa
cmp
xor
inc
cmp
inc
xor
aaa
inc
xor
inc
or
inc
xor
inc
jl
arpl
xor
ds
insb
xor
jl
inc
insb
inc
xor
xor
jl
xor
or
xor
xor
xor
xor
xor
or
inc
cmp
outsb
outsb
inc
xor
pop
xor
xor
insb
cmp
xor
xor
ss
inc
xor
or
inc
cmp
xor
cmp
xor
xor
inc
inc
cmp
jo
inc
or
jo
xor
cmp
xor
cmp
xor
dec
inc
xor
sub
dec
xor
inc
xor
sub
xor
xor
dec
sub
sub
dec
aaa
inc
dec
inc
sub
cmp
inc
dec
inc
je
inc
sub
or
inc
inc
xor
aaa
dec
xor
inc
dec
sub
cmp
inc
inc
xor
sub
inc
dec
xor
xor
sub
cmp
inc
ss
or
cmp
inc
xor
xor
cmp
xor
xor
xor
inc
xor
xor
xor
xor
jl
xor
dec
xor
insb
or
dec
inc
inc
aaa
inc
xor
insb
xor
jl
xor
xor
xor
dec
xor
cmp
inc
ss
inc
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
inc
xor
insb
xor
jl
xor
dec
insb
inc
xor
dec
xor
dec
xor
dec
xor
cmp
xor
xor
inc
xor
xor
xor
outsb
inc
inc
xor
xor
xor
sub
xor
cmp
xor
xor
xor
xor
xor
cmp
inc
xor
inc
sub
sub
imul
inc
jl
inc
xor
cmp
xor
outsb
xor
xor
xor
xor
xor
dec
imul
xor
xor
dec
inc
xor
inc
inc
xor
xor
cmp
xor
insb
xor
or
xor
cmp
or
xor
xor
inc
dec
xor
xor
aaa
xor
jae
xor
cmp
inc
xor
bound
jae
data16
popa
cmp
xor
pop
insl
inc
inc
bound
xor
inc
inc
xor
or
xor
xor
inc
cmp
inc
cmp
jl
inc
cmp
cmp
aaa
xor
xor
imul
inc
aaa
dec
sub
dec
ss
inc
xor
ss
xor
xor
sub
insb
outsb
inc
insb
inc
inc
inc
xor
inc
xor
inc
xor
ss
or
cmp
aaa
dec
inc
inc
inc
inc
dec
cmp
insb
cmp
xor
inc
inc
xor
jl
inc
xor
xor
inc
xor
aaa
inc
cmp
aaa
inc
cmp
inc
xor
inc
inc
inc
je
xor
or
dec
inc
cmp
inc
inc
aaa
aaa
xor
inc
inc
aaa
or
xor
xor
cmp
inc
cmp
xor
inc
jl
cmp
cmp
inc
xor
cmp
xor
xor
xor
aaa
or
xor
xor
xor
dec
xor
xor
aaa
cmp
xor
dec
jno
jb
insb
inc
insb
inc
inc
cmp
xor
cmp
aaa
xor
or
inc
insb
xor
xor
dec
cmp
xor
cmp
dec
imul
xor
xor
xor
inc
dec
inc
cmp
cmp
inc
dec
cmp
xor
dec
xor
xor
insb
inc
inc
dec
inc
ss
arpl
insb
js
gs
jae
pop
arpl
outsl
insb
gs
pop
outsb
imul
pop
gs
arpl
jae
outsl
popa
je
or
imul
gs
arpl
outsb
data16
or
insb
jae
popa
arpl
insl
gs
fs
jo
or
fs
or
jae
outsl
jo
outsl
push
arpl
imul
fs
gs
outsb
insl
insb
or
insb
pop
arpl
imul
pop
jo
arpl
outsl
popa
popa
or
jo
outsb
outsl
or
or
imul
insb
pop
pop
arpl
je
gs
outsl
fs
insb
jae
outsb
popa
insl
fs
insb
pop
outsl
or
or
arpl
popa
gs
or
pop
fs
jo
pop
pop
jb
outsl
fs
js
or
outsb
ja
cs
outsb
ss
je
insl
popa
cmp
cmp
xor
cmp
xor
sub
je
inc
inc
jae
xor
jae
popa
xor
outsb
inc
ss
sub
inc
or
xor
je
jb
inc
ss
sub
xor
js
ds
cmp
ss
xor
jns
jnp
je
pop
js
outsb
popa
and
and
insl
data16
and
insb
gs
popa
jnp
and
jnp
sub
jb
insb
outsb
ds
gs
cmp
je
and
sub
pop
insl
jge
insl
pop
pop
ds
addr16
insb
popa
fs
je
insb
and
arpl
jns
js
cmp
gs
and
popa
insl
pop
fs
sub
je
cmp
bound
insb
insl
je
insb
popa
cmp
jae
insb
gs
jge
gs
insl
arpl
insb
gs
jnp
jnp
sub
cmp
inc
inc
xor
insb
inc
dec
inc
xor
xor
cmp
cmp
dec
cmp
cmp
inc
inc
cmp
inc
xor
jl
inc
dec
insb
inc
inc
insb
xor
inc
cmp
cmp
insb
inc
cmp
dec
inc
inc
inc
dec
cmp
dec
dec
inc
inc
inc
inc
inc
inc
cmp
inc
je
cmp
inc
cmp
inc
jl
inc
cmp
inc
inc
xor
xor
inc
sub
inc
inc
xor
inc
inc
inc
cmp
or
or
dec
aaa
aaa
inc
aaa
inc
ss
inc
xor
inc
cmp
dec
or
inc
inc
inc
ss
dec
xor
xor
inc
cmp
inc
dec
xor
cmp
aaa
ss
dec
xor
insb
inc
xor
ss
ss
xor
jl
inc
inc
or
inc
ss
jl
inc
xor
cmp
cmp
ss
inc
xor
imul
dec
inc
inc
or
inc
or
inc
cmp
xor
xor
inc
xor
inc
xor
inc
fs
ss
aaa
inc
or
inc
xor
inc
jl
inc
inc
inc
or
inc
cmp
xor
aaa
xor
inc
xor
inc
cmp
inc
inc
jl
or
xor
dec
xor
cmp
xor
xor
sub
xor
dec
jae
popa
xor
inc
xor
cmp
xor
dec
xor
aaa
pop
sub
aaa
xor
xor
aaa
xor
xor
inc
inc
xor
inc
xor
or
cmp
xor
aaa
jae
xor
sub
xor
xor
xor
aaa
insb
dec
dec
inc
inc
insb
jl
dec
xor
xor
xor
cmp
xor
inc
jl
inc
xor
aaa
inc
dec
aaa
je
dec
dec
xor
xor
xor
inc
xor
popa
xor
xor
dec
cmp
inc
cmp
xor
aaa
xor
xor
cmp
dec
xor
xor
aaa
or
xor
dec
xor
or
cmp
xor
xor
inc
xor
inc
xor
insb
inc
xor
inc
xor
cmp
inc
or
jl
cmp
inc
xor
jl
inc
inc
xor
cmp
dec
dec
dec
dec
aaa
xor
cmp
xor
cmp
cmp
xor
jl
xor
insb
inc
xor
aaa
dec
xor
xor
inc
inc
xor
xor
dec
xor
xor
xor
aaa
inc
aaa
xor
inc
inc
cmp
xor
inc
cmp
inc
xor
aaa
xor
inc
aaa
aaa
xor
inc
cmp
cmp
xor
or
dec
xor
dec
xor
jl
xor
cmp
cmp
xor
inc
inc
xor
cmp
aaa
or
dec
xor
jl
or
xor
inc
cmp
xor
sub
cmp
xor
outsl
outsl
outsb
xor
and
gs
and
outsb
dec
gs
jbe
outsb
data16
xor
xor
outsb
jne
xor
xor
inc
arpl
or
addr16
jne
fs
popa
and
cmp
data16
je
outsl
imul
outsb
fs
cmp
insb
xor
xor
cs
jne
sub
and
imul
cmp
jo
and
xor
arpl
xor
xor
sub
pop
cmp
xor
data16
xor
xor
dec
imul
or
sub
popa
and
cmp
and
cmp
xor
jae
xor
cmp
jne
xor
jo
jnp
push
xor
insb
gs
and
dec
jne
jo
xor
je
xor
xor
xor
dec
inc
aaa
inc
cmp
xor
inc
xor
inc
cmp
cmp
xor
xor
dec
inc
xor
xor
cmp
cmp
dec
xor
aaa
dec
cmp
inc
aaa
dec
dec
xor
xor
jl
xor
xor
cmp
inc
inc
xor
or
inc
dec
xor
inc
inc
inc
or
insb
inc
cmp
inc
xor
xor
aaa
cmp
cmp
inc
cmp
dec
dec
dec
inc
dec
xor
xor
dec
inc
aaa
xor
xor
cmp
xor
xor
inc
jl
insb
xor
aaa
inc
inc
inc
aaa
xor
inc
insb
dec
xor
inc
xor
arpl
cmp
sub
aaa
je
cmp
cmp
aaa
xor
inc
xor
or
xor
aaa
cmp
xor
aaa
cmp
cmp
xor
inc
xor
insb
inc
xor
xor
xor
and
inc
outsb
imul
xor
or
xor
xor
inc
xor
imul
jo
insl
inc
cmp
popa
jb
cmp
jb
and
je
inc
je
inc
inc
or
insb
dec
aaa
ss
aaa
cmp
aaa
xor
inc
insb
insb
aaa
cmp
aaa
or
xor
insb
xor
inc
dec
cmp
cmp
inc
ss
inc
inc
inc
cmp
xor
xor
xor
xor
xor
inc
inc
xor
dec
cmp
jl
aaa
cmp
aaa
inc
aaa
inc
ss
aaa
cmp
cmp
xor
cmp
cmp
dec
cmp
inc
inc
dec
inc
insb
xor
xor
or
xor
dec
xor
dec
aaa
jl
inc
inc
xor
inc
inc
or
inc
xor
inc
inc
xor
dec
ss
aaa
inc
xor
inc
dec
xor
xor
xor
aaa
inc
sub
inc
xor
xor
ss
xor
inc
inc
or
inc
insb
cmp
cmp
aaa
inc
dec
dec
xor
xor
ss
aaa
inc
inc
inc
inc
inc
xor
jl
ss
cmp
inc
inc
aaa
inc
cmp
cmp
aaa
cmp
aaa
aaa
jl
xor
jl
inc
dec
aaa
inc
or
xor
cmp
aaa
aaa
insb
cmp
dec
dec
dec
aaa
xor
xor
xor
cmp
je
sub
aaa
xor
inc
aaa
xor
aaa
xor
aaa
xor
xor
xor
xor
xor
xor
or
or
sub
xor
aaa
insb
xor
je
xor
dec
aaa
xor
xor
dec
xor
cmp
or
inc
inc
inc
inc
sub
imul
xor
jl
sub
cmp
xor
inc
xor
xor
inc
xor
dec
xor
insb
outsb
aaa
aaa
xor
xor
cmp
xor
xor
xor
aaa
cmp
inc
xor
or
inc
inc
xor
xor
inc
aaa
cmp
cmp
inc
or
inc
and
jl
inc
xor
xor
inc
dec
xor
aaa
xor
xor
inc
xor
inc
inc
xor
xor
inc
xor
inc
xor
cmp
dec
aaa
xor
cmp
or
xor
inc
aaa
xor
jl
cmp
xor
xor
sub
jl
aaa
xor
xor
xor
or
jl
xor
cmp
dec
xor
aaa
cmp
cmp
xor
xor
xor
xor
inc
dec
cmp
or
dec
dec
jo
jl
xor
xor
inc
inc
cmp
je
imul
inc
inc
aaa
sub
dec
inc
inc
inc
dec
xor
cmp
xor
cmp
xor
imul
cmp
dec
xor
cmp
inc
cmp
inc
aaa
xor
xor
xor
xor
inc
inc
insb
or
xor
cmp
xor
dec
cmp
xor
inc
inc
xor
xor
cmp
aaa
inc
jl
cmp
sub
aaa
jl
insb
inc
inc
inc
xor
xor
inc
je
cmp
inc
cmp
xor
ss
xor
xor
inc
inc
or
cmp
xor
xor
insb
cmp
or
insb
sub
insb
cmp
xor
dec
xor
ss
xor
dec
cmp
or
aaa
cmp
cmp
xor
xor
cmp
dec
xor
inc
xor
xor
or
inc
xor
cmp
cmp
inc
cmp
xor
or
xor
aaa
inc
dec
aaa
ss
xor
insb
cmp
jl
xor
inc
or
xor
xor
xor
jl
dec
xor
xor
xor
xor
cmp
xor
xor
xor
inc
aaa
xor
inc
xor
xor
xor
dec
xor
xor
aaa
xor
dec
xor
xor
inc
xor
xor
insb
xor
xor
xor
xor
dec
xor
xor
xor
cmp
inc
dec
or
xor
dec
xor
or
xor
dec
or
inc
xor
xor
or
inc
cmp
inc
inc
inc
xor
dec
xor
or
insb
inc
insb
inc
xor
inc
inc
xor
inc
cmp
inc
inc
xor
inc
xor
cmp
dec
xor
inc
dec
inc
cmp
inc
xor
cmp
cmp
cmp
fs
je
cmp
ss
inc
inc
dec
cmp
dec
inc
cmp
ss
inc
jno
gs
jae
inc
or
jl
cmp
or
inc
jae
inc
imul
cmp
imul
dec
cmp
cmp
inc
jae
jo
pop
gs
inc
je
inc
push
cmp
inc
inc
or
sub
inc
sub
xor
xor
inc
cmp
inc
inc
inc
xor
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
xor
ss
pop
jae
cmp
jb
jp
or
xor
arpl
cmp
ss
inc
inc
jb
inc
inc
ss
inc
insb
dec
xor
push
cmp
inc
insl
inc
inc
ss
inc
jae
ss
arpl
xor
cmp
popa
inc
dec
insb
inc
cmp
xor
cmp
pop
xor
jae
gs
jl
insb
xor
insb
xor
xor
xor
or
xor
xor
cmp
xor
xor
xor
inc
xor
dec
inc
xor
aaa
xor
xor
cmp
jl
xor
cmp
xor
xor
xor
xor
jl
inc
xor
cmp
dec
cmp
xor
dec
xor
cmp
xor
inc
xor
xor
xor
dec
inc
xor
xor
xor
insb
or
xor
xor
xor
inc
inc
xor
xor
xor
cmp
xor
dec
xor
xor
or
cmp
cmp
inc
xor
insb
xor
dec
xor
xor
cmp
xor
dec
cmp
aaa
xor
xor
xor
dec
ss
inc
jl
insb
xor
or
aaa
inc
dec
cmp
xor
cmp
xor
cmp
xor
dec
dec
xor
aaa
xor
inc
cmp
xor
inc
insb
cmp
insb
ss
insb
aaa
or
aaa
xor
ss
inc
xor
jl
xor
xor
dec
cmp
xor
jl
xor
cmp
xor
xor
aaa
xor
dec
xor
xor
dec
aaa
inc
aaa
xor
inc
cmp
or
cmp
xor
xor
dec
xor
aaa
insb
or
xor
inc
xor
xor
dec
xor
inc
xor
aaa
aaa
insb
inc
aaa
inc
inc
inc
cmp
xor
xor
xor
xor
xor
xor
xor
cmp
dec
cmp
xor
inc
inc
jns
xor
cmp
or
sub
or
or
xor
jl
xor
inc
xor
cmp
je
cmp
addr16
sub
and
popa
jae
insb
outsb
xor
and
insb
jae
and
jb
jb
and
and
jb
insb
popa
js
gs
jae
outsb
and
arpl
insb
outsb
gs
jae
gs
je
ss
sub
jb
bound
and
sub
jb
xor
push
cmp
push
insb
and
insl
jb
insl
je
imul
gs
sub
insl
insl
push
bound
jge
js
xor
data16
and
xor
imul
imul
jnp
popa
outsb
jnp
jo
je
jge
outsb
insl
pop
jb
aaa
sub
jge
bound
cmp
bound
cmp
bound
jge
sub
bound
popa
je
xor
push
xor
jbe
jb
and
popa
outsl
pop
cs
sub
sub
bound
imul
cmp
xor
jl
cmp
jl
inc
inc
inc
xor
insb
xor
inc
cmp
dec
xor
xor
dec
or
inc
cmp
dec
inc
dec
xor
xor
insb
dec
ss
insb
dec
xor
inc
inc
xor
jl
xor
inc
xor
cmp
inc
inc
or
or
inc
xor
inc
xor
dec
dec
inc
inc
dec
inc
xor
inc
inc
insb
dec
or
cmp
inc
inc
jl
inc
inc
xor
inc
inc
inc
inc
insb
xor
cmp
inc
inc
inc
xor
cmp
xor
inc
xor
aaa
xor
cmp
inc
inc
jl
xor
cmp
inc
xor
aaa
jl
dec
inc
xor
jl
aaa
inc
aaa
inc
inc
inc
xor
insb
or
inc
cmp
dec
inc
dec
inc
inc
xor
xor
inc
inc
inc
xor
xor
inc
inc
inc
inc
xor
aaa
inc
ss
xor
aaa
inc
inc
xor
aaa
inc
jl
xor
xor
cmp
xor
inc
insb
jl
xor
xor
xor
jl
xor
inc
aaa
xor
cmp
dec
insb
inc
inc
xor
inc
inc
inc
dec
xor
inc
or
dec
cmp
cmp
inc
or
inc
inc
xor
dec
inc
inc
cmp
xor
insb
inc
inc
dec
cmp
inc
jl
xor
cmp
xor
jl
inc
jl
xor
xor
inc
inc
dec
cmp
inc
inc
cmp
inc
insb
xor
xor
cmp
xor
cmp
xor
dec
xor
xor
cmp
inc
inc
xor
inc
jl
xor
inc
xor
xor
cmp
inc
xor
inc
xor
xor
aaa
inc
inc
inc
inc
aaa
xor
inc
xor
jl
xor
cmp
or
jl
dec
insb
insb
xor
dec
cmp
xor
inc
dec
insb
xor
aaa
dec
xor
aaa
inc
xor
cmp
cmp
xor
xor
inc
xor
cmp
cmp
or
cmp
jl
xor
or
aaa
xor
xor
xor
or
or
xor
xor
inc
xor
cmp
insb
xor
xor
xor
xor
xor
inc
xor
dec
dec
inc
or
xor
insb
xor
inc
inc
cmp
xor
xor
insb
xor
imul
or
jb
jb
outsb
fs
popa
jae
or
popa
daa
fs
je
insb
pop
jns
or
outsl
jb
imul
jae
jne
imul
fs
pop
daa
gs
insl
pop
jb
jb
or
jb
push
je
or
jb
insb
gs
popa
jne
jns
popa
imul
or
imul
insb
pop
data16
insb
outsl
jae
cmp
inc
cmp
cmp
xor
cmp
ss
xor
inc
je
dec
xor
xor
xor
inc
xor
or
cmp
cmp
aaa
xor
cmp
inc
sub
sub
xor
xor
xor
dec
dec
inc
xor
aaa
xor
aaa
aaa
xor
inc
xor
inc
je
xor
inc
xor
inc
xor
aaa
data16
xor
cmp
xor
dec
pop
insb
and
arpl
jb
popa
imul
cmp
popa
popa
dec
pop
push
and
xor
push
and
xor
insb
je
or
imul
dec
sub
gs
outsb
insl
and
xor
cs
sub
cmp
sub
xor
das
xor
xor
js
arpl
xor
imul
xor
arpl
jae
and
jo
and
jae
bound
pop
jo
xor
or
jb
jo
jne
cmp
je
jo
and
inc
sub
xor
or
dec
or
xor
arpl
outsl
jne
xor
sub
cmp
insb
and
cmp
and
outsb
push
jo
xor
cs
xor
xor
dec
aaa
xor
jnp
sub
imul
xor
xor
jae
xor
sub
arpl
je
je
gs
and
fs
and
xor
and
imul
dec
jb
xor
cmp
outsl
push
xor
or
aaa
pop
push
cmp
outsl
cmp
or
dec
xor
fs
or
inc
jb
ds
imul
xor
cmp
inc
xor
inc
outsb
cmp
cmp
jb
xor
cmp
sub
xor
xor
outsl
dec
insb
jl
aaa
inc
inc
arpl
pop
pop
mov
jnp
and
push
mov
cwtl
xchg
fs
cmp
in
lahf
popa
fcom
fdivp
mov
andl
inc
out
pop
jbe
inc
mov
lds
fmulp
mov
sbb
sub
test
loopne
adc
push
ss
aas
ss
divps
scas
pop
data16
sbb
or
mov
pushf
movsb
inc
xor
repnz
jg,pt
jno
xor
xchg
in
lods
fwait
or
mov
daa
pop
or
mov
push
and
dec
and
lock
ret
movsl
adc
xchg
lea
sbb
sbb
sarl
jg
ret
insl
or
jno
jne
xor
lret
push
adc
mov
and
fwait
jns
icebp
sbb
dec
mov
shl
cmp
test
cltd
test
xchg
dec
xor
inc
mov
mov
ja
dec
xchg
mov
pushf
jb
in
lret
testb
pop
xor
jb
aas
inc
or
aaa
ret
jae
sbb
push
xchg
imul
push
repz
sub
add
sbb
popf
fnsave
bnd
rorl
scas
out
jge
pop
hlt
pop
push
xor
push
movsb
mov
push
add
mov
push
push
mov
fbld
frstor
shrb
sub
rolw
sub
jecxz
mov
and
mov
mov
xchg
sbb
in
jno
mov
pop
test
add
in
dec
push
out
push
or
test
sub
mov
out
dec
sbb
out
loop
add
and
cmp
dec
and
das
cmc
sbb
cmp
in
mov
lea
int
pop
paddd
push
dec
pushf
sub
add
movsl
les
popa
shll
addl
mov
pop
nop
sub
mov
inc
sahf
add
imul
dec
jle
pop
pop
jl
aam
inc
mov
shll
int3
movsl
sbb
mov
in
jo
add
icebp
sub
repz
xchg
cltd
mov
lcall
push
mov
in
cmp
cmp
call
mov
das
inc
icebp
ds
mov
dec
or
dec
js
xor
ficompl
xlat
shlb
aaa
push
mov
or
xor
push
and
mov
push
gs
dec
call
or
orl
mov
js
fimuls
lret
cmc
mov
daa
ss
outsl
mov
mov
jno
bound
test
sarl
popf
xlat
xor
stos
mov
aaa
cmp
movsb
mov
add
les
inc
call
lret
std
dec
inc
into
and
mov
inc
int
notb
xor
sbb
popf
data16
iret
lcall
imul
stc
pusha
gs
or
xor
and
fsubrl
jle
xchg
ss
xlat
sub
push
sub
aas
movsl
insl
pop
inc
les
and
imul
pop
ror
jecxz
xchg
jmp
stos
insl
sti
add
hlt
mov
pop
fdivl
andb
jno
bound
enter
xchg
jmp
sahf
aaa
adc
shlb
or
pop
sbb
sub
mov
inc
or
pop
enter
xor
stc
iret
scas
xchg
xor
add
pop
pop
xchg
lods
sub
inc
test
xchg
jp
shlb
lea
xchg
pop
mov
or
and
mov
xchg
pop
jge
notb
push
jnp
sbb
scas
in
cmp
inc
int3
movsl
push
xor
dec
shlb
and
cmp
mov
out
int
dec
repnz
lods
jl
cmp
mov
dec
and
rorb
adc
jl
add
pop
insl
das
icebp
sbb
ljmp
mov
cpuid
in
add
xor
jg
and
lea
sbb
add
sub
xor
adc
faddl
adc
xchg
iret
mov
or
xor
dec
and
rolb
aam
ja
sub
jb
into
pop
add
cwtl
int
je
mov
imul
fidivrs
int3
mov
in
and
ss
xchg
sbb
push
aam
mov
adc
sarl
mov
mov
xchg
xor
add
mov
ss
inc
sub
cs
std
sub
mov
les
leave
jne
ffreep
shlb
mov
rcrl
sbb
icebp
mov
add
aad
add
cltd
rcr
xchg
mov
std
mov
aas
cltd
jle
fstpl
jo
sar
shrb
ljmp
mov
jae
jb
je
imul
push
stos
inc
aam
les
jo
mov
xchg
out
int
push
jae
aam
ljmp
mov
imul
nop
adc
sbb
add
mov
cmpsl
push
jecxz
or
sbb
sbb
adc
dec
add
fsts
sub
mov
mov
add
loopne
daa
mov
sti
mov
pop
add
and
iret
sbb
pop
dec
dec
out
push
xchg
mov
pop
mov
call
in
inc
call
xchg
lods
inc
inc
push
mov
pop
xor
mov
bound
sub
xchg
mov
fwait
dec
jbe
mov
adc
lcall
sub
or
push
jp
fcoml
cmp
jno
cld
leave
inc
ret
loope
arpl
gs
cmp
jecxz
push
jbe
aaa
pop
inc
roll
in
push
sub
psubsb
pop
pop
adc
adc
jo
sub
push
lcall
lret
sbb
ficomps
inc
sub
movsb
notb
xor
mov
jmp
mov
or
xor
lahf
push
lcall
ja
popf
jb
out
inc
lcall
or
pushf
inc
add
cmpsw
cmc
fildll
lea
add
aas
pop
sub
inc
inc
fwait
call
in
pop
insb
dec
inc
fldt
test
pop
xchg
movsb
dec
pop
addb
xchg
clc
cmp
lahf
jg
mov
mov
lods
or
loop
or
add
fadds
popf
push
aam
inc
pop
jp
adc
lcall
test
pop
add
push
pop
loope
sbb
and
mov
mov
ret
shll
mov
push
dec
pop
mov
or
add
jle
push
fisubs
cmp
add
popf
out
dec
adc
rcrb
mov
mov
mov
push
hlt
xlat
and
imul
inc
add
mov
sbb
xor
pushf
ror
xor
xchg
mov
dec
das
rcrb
push
lret
dec
lcall
out
and
scas
shrl
pop
mov
repz
and
int
cmp
imul
add
inc
and
xchg
add
sub
imul
adc
sub
sub
mov
insb
add
mov
int3
adc
mov
push
cld
in
pop
ret
xchg
inc
cmp
add
sub
xchg
cmp
out
call
mov
and
test
cmp
lcall
pushf
pop
leave
cmp
adc
fisttpl
ficompl
cmc
imul
push
pop
movl
pushf
shll
lock
jnp
fcomip
shrl
cmp
hlt
loop
fwait
cmc
jae
add
jns
shl
scas
shlb
imul
pop
stos
icebp
je
ret
iret
adc
adc
xchg
out
sbb
gs
mov
cmpsb
mov
je
iret
push
pop
cmpsb
out
or
ss
inc
out
ret
testl
jo
dec
xchg
dec
popf
xchg
cmp
jae
test
and
imul
cmp
mov
sub
and
mov
xchg
and
adc
or
jle
mov
mov
mov
cmp
sub
xchg
xchg
popf
add
arpl
mov
mov
in
jnp
popa
fildl
sub
or
mov
pop
repnz
scas
sub
sbb
mov
in
divl
imul
add
xchg
je
data16
cmp
enter
inc
test
or
ljmp
dec
cmp
lret
bound
out
fists
mov
mov
adc
std
dec
mov
daa
mov
jmp
cld
stc
cli
es
mov
fs
setbe
das
xor
sahf
rclb
ja
or
adc
inc
stos
add
push
cli
fdivs
xor
stos
adc
mov
mov
repz
mov
icebp
int
jbe
dec
je
cmp
mov
push
ret
mov
pop
sbb
push
call
lods
clc
mov
sub
fs
cmp
sub
inc
fwait
or
outsb
mov
pop
adc
push
dec
es
test
inc
out
repz
rolb
mov
adc
sub
jl
push
notb
int3
fistpl
push
loop
mov
stc
arpl
add
mov
in
jbe
cmp
jg
and
in
pop
and
sub
or
mov
or
xchg
mov
and
out
push
ljmp
stc
shr
ret
test
xchg
in
fs
out
fwait
insl
xchg
or
orb
and
ret
xchg
cmp
in
es
add
faddl
pop
scas
fbstp
xchg
je
xchg
aad
xchg
or
out
xor
test
dec
cmpsl
add
jb
mov
and
movsl
or
xchg
cmp
addr16
cmc
push
xchg
or
aad
rcrl
lea
dec
adc
and
add
and
mov
xchg
pop
cmp
inc
sbb
mov
mov
insb
std
push
rclb
xchg
stc
and
jmp
mov
call
push
shrb
sub
mov
enter
lods
loop
stc
dec
lock
lret
jbe
ret
mov
dec
std
aad
loope
push
adc
out
xchg
jg
dec
mov
iret
push
mov
mov
stos
fidivrl
push
pop
jnp
dec
cs
pop
cs
xchg
mov
pop
add
lret
mov
adc
mov
add
mov
test
xchg
addr16
cs
jmp
xor
or
out
outsl
jnp
cltd
nop
pusha
mov
mov
and
mov
pop
call
push
jmp
mov
adc
xor
mov
dec
mov
enter
loop
sbb
popa
inc
jge
push
mov
add
and
mov
cmpsb
lahf
dec
jae
adcb
test
mov
mov
nop
in
ja
sbb
add
sbb
das
std
mov
aas
xchg
mov
aad
fimull
pushf
cmpsl
and
pusha
and
dec
cmp
adc
sub
mov
mov
xor
mov
fstps
rol
loope
movsb
and
movsb
inc
pusha
inc
add
add
test
add
mov
mov
les
push
cmp
rcrb
mov
jnp
call
jecxz
call
lret
lea
test
hlt
movb
repz
mov
sub
pop
dec
pop
jle
inc
sub
mov
fnstenv
jmp
pop
xor
mov
aam
fistpl
out
sub
rcr
popa
push
add
cmc
and
or
mov
jmp
xchg
and
leave
jno
test
push
and
cwtl
sub
movsb
sub
in
sub
xchg
leave
sbb
xor
std
gs
xchg
cltd
sbb
mov
add
dec
popa
addr16
pusha
test
add
daa
xor
and
inc
jge
adc
fdivrs
inc
out
loop
mov
sub
cmpsl
adc
xchg
dec
push
mov
cmc
int3
jge
dec
inc
mov
test
scas
or
dec
pushl
mov
inc
stos
cmpsb
out
mov
icebp
and
add
into
iret
call
das
iret
sbb
dec
mov
xchg
pop
push
sbb
inc
adc
insb
push
shlb
and
mov
repnz
xor
inc
inc
fisubrs
mov
aas
push
lods
dec
xchg
std
aam
mov
iret
mov
movsl
and
pop
cwtl
je
insb
loopne
outsl
clc
xchg
pop
lds
mov
xchg
xor
jo
lds
jmp
dec
stos
scas
stos
mov
mov
rcrl
add
or
xchg
sub
shrb
loopne
adc
mov
test
test
popa
jno
outsl
mov
push
mov
pop
popa
xor
imul
mov
jae
test
mov
dec
mov
or
iret
sahf
fld
push
xchg
jp
clc
sub
fsubrp
xchg
fnstsw
xchg
sub
inc
or
orl
fistpl
leave
lret
movsb
ss
mov
jmp
stc
jae
push
mov
jno
jns
fcoms
jbe
cmpsl
sti
cltd
pop
push
sbb
pop
jg
out
and
int
jmp
add
arpl
roll
pop
lods
aaa
arpl
push
or
aad
or
inc
adcb
sub
or
add
sarb
or
jno
xor
or
test
jnp
gs
mov
xchg
arpl
add
fbstp
mov
or
sbb
scas
popa
xchg
cwtl
in
xchg
add
mov
mov
sub
xor
stos
jecxz
add
lds
ret
ss
inc
pop
lock
gs
sti
cmp
mov
leave
and
pusha
mov
mov
insl
outsb
adc
sbb
pop
insb
and
xlat
or
sarb
lcall
shl
ret
out
xchg
orb
cmp
insl
lcall
xor
xchg
rcrl
insb
sbb
mov
shrl
push
dec
jg
pop
sbb
mov
loopne
or
fldt
xchg
push
push
sbb
cmp
xor
fwait
pop
jnp,pn
testl
mov
push
jo
pop
cmc
mov
int3
cmp
daa
rcr
cmp
ret
nop
insb
push
outsl
cltd
mov
push
adc
jp
cmp
int3
xchg
mov
fiaddl
mul
or
mov
test
mov
in
mov
dec
pushf
xor
lods
ret
stos
cld
gs
push
inc
loop
insb
js
das
lods
fwait
cmp
jle
sti
or
shr
daa
dec
pop
jg
outsb
adc
movb
mov
inc
insl
or
jnp
or
fbstp
popf
lret
mov
aam
lods
in
arpl
fsubl
shll
mov
scas
push
inc
in
xchg
sarl
ret
fidivrs
loop
sbb
and
roll
lret
xor
aad
testl
pop
mov
sbb
inc
push
imul
les
adcl
mov
adc
push
pop
mov
and
pop
add
xor
cli
add
es
cld
push
push
out
jge
add
pop
ret
dec
ret
fwait
dec
shll
jns
out
mov
in
dec
lret
inc
inc
or
subl
leave
dec
add
fistpll
shlb
inc
repnz
test
mov
cwtl
xchg
sub
jge
rorb
adc
mov
xor
int
cmp
sub
mov
pop
cmp
add
stos
les
add
xor
xchg
in
jmp
out
sahf
pop
xor
cld
fnsave
cmc
daa
ja
or
cwtl
pop
int
xor
or
push
into
outsl
mov
mov
cwtl
imul
sbb
out
mov
scas
test
out
xor
mov
in
addr16
call
and
mov
clc
sar
mov
gs
xor
dec
popf
dec
in
fwait
jno
in
push
ljmp
push
ss
or
and
fiadds
aaa
sti
xchg
outsl
mul
fucomi
jmp
insb
leave
jle
cmpsl
xchg
sbb
aad
dec
mov
jp
dec
test
leave
mov
pop
dec
nop
hlt
in
and
fsubrl
fidivl
repnz
out
jmp
int3
sbb
mov
add
jnp
test
dec
xchg
out
scas
add
push
pop
mov
das
scas
inc
sub
test
arpl
add
mov
movsb
shlb
aaa
push
mov
mov
add
xchg
add
mov
fiaddl
mov
std
fidivl
xchg
repnz
test
enter
jns
test
aad
fdiv
add
inc
scas
sbb
mov
sbb
pop
mov
adc
add
cmp
pop
or
les
mov
xor
rolb
inc
popw
clc
pop
mov
sub
or
movsb
jo
and
and
rclb
lods
pop
jae
loopne
pop
rclb
jg
xor
push
cld
adc
insl
or
mov
loopne
lds
or
or
in
cld
cli
mov
jecxz
mov
xchg
jb
and
dec
mov
mov
ds
je
adc
inc
mov
sbbb
dec
pop
sbb
pop
add
call
adc
ffreep
jle
fadd
out
xlat
push
pusha
mov
sbb
movsb
cmp
sbb
or
and
das
int3
movsb
mov
or
lods
cwtl
add
pop
or
stos
rolb
mov
fisubrs
aaa
mov
stos
into
rcrl
je
std
es
jb
pop
jb
xchg
jae
pop
scas
hlt
test
imul
ror
test
sbb
mov
inc
sub
ds
pop
inc
fcmovnbe
popa
push
lahf
jb
dec
inc
std
aas
or
xchg
push
cmpsl
sub
pop
xor
pop
fwait
cld
adc
adc
lret
mov
arpl
test
sub
daa
arpl
jb
pop
lcall
mov
mov
scas
inc
add
sub
push
ds
mov
jg
push
push
icebp
stos
xchg
scas
lret
outsb
xchg
add
inc
ret
push
fwait
add
mov
fstps
pop
sbb
addr16
movsl
fistps
rol
and
ds
mov
sub
jp
ret
mov
xlat
icebp
pop
lea
fistl
inc
jb
adc
ss
je
in
hlt
test
aad
or
sti
stos
sti
push
dec
xor
in
jecxz
test
xchg
mov
outsb
add
jecxz
sub
mov
adc
sub
add
lret
pop
add
iret
push
test
int3
imul
push
xor
mov
out
sbb
popl
dec
or
fildl
ret
mov
mov
mov
cld
aad
outsl
xor
fidivl
or
mov
test
fldl
sbb
movsb
push
dec
pop
repz
fsubr
push
lea
fists
adc
xchg
mov
int3
iret
sti
rcrl
pop
lahf
mov
testb
push
jmp
xor
cmpl
jmp
pop
test
or
push
mov
or
push
mov
loopne
add
jae
pop
mov
dec
add
pop
imul
xchg
popa
push
dec
mov
sbb
arpl
movsb
or
pop
push
dec
dec
enter
out
mov
pushf
jp
jno
pop
dec
mov
sbb
or
sarb
or
cmpsl
add
call
sbb
lret
aas
insb
sti
xor
into
mov
pop
add
and
jmp
movsb
arpl
shrl
pop
inc
js
sahf
mov
sahf
or
rorl
popf
cmp
lods
enter
fnstcw
mov
lahf
xor
and
push
outsb
sarl
mov
imul
push
aam
and
add
es
loope
jb
mov
mov
or
fs
int
push
mov
push
xor
int
cmp
sbb
push
hlt
cmp
cwtl
jbe
xchg
sahf
shrb
nop
mov
mov
xor
jb
sbb
xchg
mov
cmp
xchg
and
popa
mov
push
decl
jle
js
dec
push
dec
aas
les
mov
imul
mov
lea
jecxz
sbb
and
rorl
mov
shll
xlat
push
push
mov
cmp
cltd
add
jge
roll
sub
stc
mov
push
and
inc
imul
sub
insb
jg
test
and
imul
test
lea
stos
add
mov
iret
loop
cmpl
and
lss
rorb
scas
or
pop
xorl
nop
xlat
push
xchg
fildll
mov
out
fwait
stos
hlt
call
jo
push
push
icebp
ret
stc
sbb
cmp
fbld
test
lods
mov
dec
popf
stc
jae
mov
fisttps
sbb
jae
hlt
in
or
inc
das
mov
aas
mov
sub
outsl
pushf
sbb
lcall
sbbl
stos
push
test
int3
pop
add
push
dec
mulb
mov
xchg
cld
frstor
jne
out
pop
push
or
das
jp
xor
cmp
pop
jge
sti
shl
pop
push
pop
jmp
jae
cld
pop
xchg
dec
movsbl
sti
adc
push
mov
repnz
sub
fmul
jns
jae
mov
or
inc
sbb
mov
mov
fstpt
xchg
loope
push
lret
test
xchg
das
iret
notl
sbbb
adc
out
xchg
addr16
gs
ret
xchg
imul
or
lret
loop
aaa
sbb
xchg
out
ret
mov
movsb
lahf
lahf
outsb
sbb
into
or
xchg
and
dec
adc
test
mov
xchg
cmp
or
mov
sub
mov
cmp
addr16
xor
sub
push
add
popa
out
push
add
shrb
dec
mov
leave
cmp
pop
das
nop
mov
movsb
enter
xor
out
cmp
mov
push
xlat
out
mov
out
and
cmpsl
or
negb
stos
fs
hlt
push
ret
push
add
xlat
mov
ss
xchg
je
jbe
sbb
repz
test
push
xor
push
stos
outsb
in
filds
ret
stc
cmp
and
mov
push
shll
fistpl
add
adc
cmp
add
popf
dec
adc
dec
sub
xor
mov
push
push
add
xchg
xor
push
sbb
mov
xor
dec
sub
dec
lods
stos
mov
adc
xor
hlt
push
lods
lods
movsb
sbb
shl
inc
aad
scas
iret
fstpt
cmc
xchg
sbb
icebp
sbb
or
or
xchg
pop
mov
xchg
push
stc
jg
mov
and
adc
jno
pop
imul
ficompl
data16
xchg
push
mov
or
cmc
movsb
pop
pop
jae
jbe
add
jne
mov
les
pop
or
mov
fs
xchg
mov
adc
test
dec
push
xor
mov
pop
pop
and
bound
in
sub
jecxz
fsub
mov
add
lcall
pop
mov
ficoml
jp
repz
or
addr16
das
push
js
fildll
push
jecxz
test
push
cmpsb
pop
outsl
fldz
js
xor
lods
inc
bound
outsb
or
arpl
adc
ret
mov
int3
subl
out
fiaddl
pop
mov
popa
daa
inc
ds
ljmp
push
xchg
lret
add
pop
mov
jb
adc
add
lea
aaa
shrb
test
mov
mov
js
frstor
test
rcr
jmp
or
push
lock
mov
dec
cs
popf
mov
inc
icebp
rorb
negb
mov
into
inc
sub
mov
in
push
push
aam
add
or
xor
nop
mov
out
xor
fildl
cmp
gs
or
mov
lock
arpl
mov
pop
hlt
test
cmpsb
aaa
adc
fmuls
or
rorb
jbe
mov
jae
repnz
test
pop
shll
out
and
cmp
jl
aaa
mov
add
lock
cs
shlb
ds
shlb
sbb
xor
push
mov
sub
adc
in
push
lcall
inc
pusha
push
rorb
mov
cs
xchg
xchg
andb
push
inc
sbb
fiadds
mov
and
and
fdivrl
sbb
test
push
arpl
cmc
jno
shlb
sahf
mov
mov
pop
cmp
add
bound
xchg
push
daa
lret
inc
dec
cmpsb
push
pop
sbb
jge
jg
xor
ja
push
outsl
daa
aaa
popf
cmp
rorl
test
in
xor
outsl
add
dec
sub
loop
inc
lds
in
sti
or
pushf
push
xlat
or
iret
repnz
xor
pop
push
jae
ret
in
add
cwtl
cmp
out
sysenter
mov
cld
ret
test
add
mov
xor
test
int3
cld
ficomps
fwait
pop
mov
mov
mov
movsb
sbb
je
adc
jecxz
dec
mov
xor
sbb
jb
adc
jne
pop
test
pop
push
mov
xchg
inc
aam
jge
cmp
shrb
pop
push
push
and
popa
fs
jp
sbb
insl
rclb
inc
loope
cmp
stc
jge
outsl
jl
iret
push
jbe
fs
sbb
jae
add
cmp
mov
add
pop
adc
daa
mov
in
and
mov
mov
mov
xor
jg
and
jle
jle
in
in
mov
fwait
pop
adcb
fstl
movsb
out
pop
xchg
mov
rclb
test
leave
leave
rdseed
jne
orl
movsb
lods
decb
jbe
xor
test
cmp
pop
jp
mov
xorb
xor
ret
sub
jne
sbb
das
adc
mov
aad
cli
mov
enter
dec
cld
dec
insl
fsubrs
aad
and
xor
xchg
xlat
jecxz
jb
daa
pop
pop
mov
pop
push
or
dec
ret
ds
pop
test
cs
jp
aaa
decb
jp
out
hlt
xchg
fadd
addr16
aam
out
inc
push
add
and
call
and
outsb
cwtl
jno
inc
inc
jns
pop
das
testl
adc
cmp
lods
lret
in
stos
sahf
cltd
scas
jp
je
ljmp
int
out
scas
add
rcrb
or
ja
xchg
int
stos
sti
ffreep
mov
mov
dec
jbe
clc
lock
sbb
mov
adc
lea
sub
fwait
pushf
test
ljmp
lds
sub
mov
pop
pop
push
dec
je
bswap
hlt
cmp
js
insl
out
stc
inc
sarl
jns
xchg
mov
mov
cmovb
sub
mov
pop
fdivs
mov
fidivrl
cmc
dec
ss
cwtl
sbbl
sbb
xor
cmp
das
sbb
sbb
inc
gs
push
pop
das
shlb
cli
into
cltd
imul
rol
sbb
cmp
sub
test
adc
movsb
dec
inc
arpl
in
xchg
repz
push
mov
lock
clc
nop
movsb
shlb
pop
adc
shr
lret
xchg
cli
scas
xchg
adcl
ret
rorb
add
xchg
nop
cmp
pop
add
xchg
jne
jns
push
test
aaa
xlat
push
fadds
push
adc
das
add
add
dec
pop
arpl
fwait
das
mov
jo
test
jno
pop
loop
les
pushf
pop
idiv
dec
movsl
cmp
pop
leave
add
jb
push
gs
fmul
xchg
ret
adcb
mov
hlt
pushf
pop
adc
xchg
shll
mov
test
aaa
int3
pushf
iret
in
lock
mov
jno
jle
cs
fmull
sub
orb
shlb
cmovnp
mov
push
neg
cmpsb
sahf
loop
xchg
repz
in
fnsave
popa
jge
sub
adc
mov
cmp
test
mov
fwait
push
dec
xor
les
mov
cmp
xchg
mov
mov
and
xor
test
push
mov
sbb
jae
push
ljmp
mov
and
xor
fmull
pushf
xchg
cmp
or
mov
or
mov
jnp
lods
mov
sahf
mov
shrb
sub
out
dec
inc
or
jbe
add
popa
stc
add
enter
mov
or
jp
push
jb
pop
sbb
fdivrl
adc
ret
je
fsubrs
jmp
lret
mov
or
jp
cltd
rol
fidivrs
push
outsl
out
jp
jmp
aad
mov
cmpsl
inc
sub
inc
loop
mov
mov
cmp
push
push
dec
sbb
out
arpl
shr
and
push
inc
or
dec
mov
mov
push
add
inc
dec
xor
movsb
pop
fsubrl
stos
arpl
adc
cmp
push
or
outsl
es
int
jo
xor
jg
sti
cwtl
loope
pushl
lock
inc
dec
leave
std
pushf
mov
push
pop
sub
ljmp
sub
fucomip
aaa
cwtl
mov
jae
repnz
es
mov
in
xchg
push
and
loop
pop
fisttpl
cmp
jo
xlat
mov
popl
fisttpll
lock
sub
sbb
mov
mov
repnz
sbb
xchg
repz
mov
inc
mov
add
pop
les
out
sub
jbe
cmpsl
fistps
test
jb
inc
dec
and
repz
jge
shlb
andl
lret
icebp
aam
out
outsb
xlat
mov
lock
das
aam
sub
jmp
mov
adc
jb
dec
mov
cmc
mov
xchg
sbb
cli
and
mov
pusha
fistl
jae
push
outsl
jmp
cmp
mov
pop
in
loope
adc
add
pop
fdivrp
stc
bound
clc
cltd
jmp
xchg
push
fs
shll
xor
dec
in
push
xchg
ds
or
stos
negb
jb
test
faddl
lret
call
mov
mov
add
enter
cmpsb
imul
daa
jle
xchg
inc
or
hlt
xor
std
pop
ss
lret
sbb
sbb
jge
mov
enter
xchg
aas
inc
repz
mov
add
into
cs
add
pop
cmpsl
out
jne
iret
xchg
bound
jo
and
jae
jge
pop
adc
cli
xchg
jo
dec
mov
inc
cmp
sti
cld
inc
cmp
sbb
sbb
jmp
jno
mov
scas
ja
fidivrl
pop
cwtl
push
lock
mov
std
cwtl
jl
mov
jbe
ja
cmp
sahf
in
mov
add
cmp
shrb
jnp
xchg
fidivrs
loope
cmc
andl
mov
adc
sub
fbstp
flds
jae
cmp
lods
mov
add
mov
xchg
push
push
sbb
insb
and
mov
cmc
fistl
xchg
or
dec
jbe
mov
add
xchg
add
push
push
pop
nop
mov
fstps
inc
out
ret
cltd
outsb
xchg
xor
push
repz
in
push
je
mov
fnstenv
sbb
inc
inc
lret
outsl
gs
fdiv
stos
jge
inc
push
test
je
mov
cmp
xor
sub
add
inc
xchg
cmp
test
adc
xchg
fimull
xlat
cmp
xchg
push
pop
imul
mov
fcompl
shlb
imul
dec
adc
push
mov
sub
pop
fisubrl
aas
or
mov
sbb
and
jmp
dec
cmp
and
test
icebp
in
sub
bound
icebp
dec
mov
insb
push
inc
mov
jne
mov
clc
xor
cmp
inc
js
loope
jbe
jmp
mov
inc
imul
cmc
repz
dec
sbb
dec
mov
mov
scas
sbb
lods
repnz
stos
xchg
enter
xchg
inc
data16
inc
fdivrl
fs
or
mov
stc
cltd
mov
lcall
add
mov
pop
mov
rcl
push
dec
fiadds
dec
fisubl
in
sub
lods
js
mov
into
je
cmp
mov
je
mov
fsubrl
pop
add
lock
divl
xor
pop
mov
nopl
out
sub
call
jnp
repnz
push
mov
jae
nop
fcmovu
fs
fwait
push
mov
cli
testb
cmp
dec
sub
bnd
insl
mov
jno
aas
ljmp
xor
sbb
pushf
inc
lret
jo
xchg
pushf
ret
push
stos
mov
movsl
cmp
ds
mov
push
data16
jmp
xor
shl
shll
cs
cmpsl
dec
add
cli
int
add
jno
daa
in
orl
test
push
jle
push
test
adcl
incb
movsl
fwait
pop
imul
jb
pop
add
add
inc
jns
lods
xlat
insb
lret
sub
mov
call
cmpsb
inc
sbb
lock
sti
dec
cwtl
enter
lahf
mov
int3
insb
hlt
enter
cltd
ror
hlt
push
test
inc
dec
push
jo
repz
ds
scas
test
dec
ret
push
imul
cmp
sbb
iret
jp
dec
fdiv
xor
cmp
gs
movsl
imul
insb
sarl
jmp
fadds
sub
push
inc
std
jge
scas
in
add
inc
ss
mov
jle
jp
dec
imul
inc
aas
lret
jl
flds
xor
jb
add
adc
xchg
jns
pop
pop
lea
pop
int
mov
ficoms
pop
inc
inc
pop
pusha
jae
dec
or
dec
inc
inc
movsb
fistpl
mov
fs
sub
push
cmp
add
inc
outsl
or
jne
or
imul
pop
mov
fs
and
ljmp
adc
mov
push
outsb
add
pop
mov
xor
pop
add
mov
dec
jle
push
sbb
jo
insb
and
mov
mov
movsb
and
push
mov
cmp
faddl
sbb
mov
dec
mulb
push
negl
outsl
sub
dec
rcl
mull
jo
fsubrs
cmpl
add
mov
movsb
and
and
pop
cmc
or
stos
jge
lea
pop
push
outsb
outsb
rcll
clc
sti
adc
lret
push
adc
pop
repnz
cmc
cmpsl
ds
shll
popf
add
inc
lea
ror
inc
cmp
ljmp
dec
add
fwait
xchg
sbb
add
jns
add
mov
xor
jg
xor
mov
xchg
bound
std
dec
dec
into
dec
cli
mov
adc
hlt
stc
sbb
fsts
pop
add
dec
xor
mov
addr16
or
xchg
cmpsb
lea
xor
daa
rcrb
sub
rolb
dec
out
lods
push
xorl
dec
inc
and
mov
int3
dec
lahf
xor
sub
dec
lds
popa
mov
jns
xor
sbb
cltd
push
pop
inc
inc
mov
push
aas
arpl
sbb
mov
int
push
add
push
stos
shrb
js
and
outsl
icebp
push
and
mov
stos
push
push
in
jns
aaa
mov
clc
lods
sarb
cmc
inc
inc
iret
push
fwait
loope
inc
cltd
mov
lock
loopne
add
and
cltd
stos
shlb
and
mov
or
xchg
pop
xchg
jbe
jge
int3
xchg
mov
xor
jb
and
inc
dec
lds
xlat
mov
int
cltd
jno
sub
insl
add
add
cmp
in
fucomi
add
jo
lds
pop
aad
sahf
sub
loop
bound
fwait
pop
daa
push
inc
jno
xor
jle
sbb
push
add
push
rcl
das
and
nop
fdivrl
pop
adc
jbe
imul
sbb
stc
lods
popa
scas
mov
xchg
adcb
dec
cwtl
loopne
ret
cmp
sbb
jle
sub
mov
stc
sub
clc
inc
cwtl
lret
leave
sub
sub
mov
xor
cmp
lods
mov
es
inc
xor
ret
add
ret
mov
inc
xchg
jp
fs
ja
aaa
fadd
jns
lods
sub
xlat
sbb
ja
jl
ret
and
inc
stc
push
pop
adc
sub
dec
inc
jmp
loope
pop
dec
or
pushf
lcall
adc
xchg
mov
inc
mov
push
cmp
jns
cmp
shrl
jae
cmp
inc
movsl
cmc
mov
push
out
push
adc
mov
push
xchg
mov
cmp
dec
or
mov
scas
mov
or
mov
repz
cmp
fld
in
add
cmpb
imul
in
mov
fdivrs
jae
sbb
lods
xlat
adc
mov
mov
sub
adc
mov
sub
sahf
jmp
mov
test
pop
loope
jl
fisubl
ficompl
jle
lahf
xchg
aam
sbb
xchg
xor
or
cmpsb
mov
inc
aaa
mov
xchg
pop
sarb
cld
inc
add
int3
jle
int
sub
jno
fistpl
xchg
xchg
xchg
rclb
xor
mov
out
mov
ds
cmp
fs
mov
inc
pop
std
xor
push
xor
xor
leave
mov
cmp
or
sub
ss
sahf
sub
xchg
cmpsb
or
pop
clc
cmp
sbb
loopne
dec
mov
push
sbb
mov
dec
inc
pop
mov
in
ret
sbb
xchg
dec
mov
cvtps2pi
movsl
mov
add
mov
fistl
pop
mov
jo
ret
mov
mov
fstpt
jp
or
xor
enter
lea
int
addl
std
movsl
mov
shll
adc
aam
add
mov
cs
loopne
sbbl
pop
aam
sbb
adc
insb
ljmp
nop
arpl
mov
sub
out
push
sub
pop
stos
dec
adc
decl
sbb
jge
mov
jae
pop
popf
mov
cmp
pop
ret
ficoms
cmp
jl
out
adc
cmp
fmulp
sbb
mov
xchg
popf
push
lods
adc
jmp
cmp
and
rcrl
cmc
outsb
in
mov
inc
lock
sbb
pop
aad
mov
mov
inc
mov
loope
test
call
out
hlt
adc
je
movsb
jmp
fwait
into
rcrb
jmp
jge
sahf
into
sub
inc
xchg
mov
repnz
mov
outsl
add
xchg
ss
xlat
test
jo
inc
push
pop
insl
shll
aaa
ljmp
scas
loopne
pop
xchg
xor
ljmp
test
lcall
sarb
rcll
cmpsl
jns
repnz
add
iret
mov
jo
test
cmp
or
jp
testb
or
push
push
cmp
aaa
addr16
out
xchg
jg
inc
in
cli
pop
cwtl
inc
pop
leave
incl
push
add
push
and
fistl
mov
mov
mov
and
jns
push
cmp
dec
fwait
repnz
imul
sar
test
inc
and
and
adc
rcrb
int3
inc
pop
stos
pop
out
and
shrb
out
mov
leave
jmp
xor
ja
cmp
mov
mov
in
sub
pop
fisubrs
fsub
mov
push
dec
cmp
icebp
xchg
push
dec
cmp
push
add
push
or
cmp
daa
jmp
jg
ljmp
lods
mov
push
mov
mov
aam
cmp
aam
pushw
in
mov
cmpb
das
test
pop
push
sub
xor
xchg
lcall
push
aaa
in
pop
jno
or
lret
add
adc
movsb
mov
lods
push
lret
in
int3
mov
jp
iret
mov
add
push
dec
imul
incl
jecxz
lret
pusha
mov
gs
xchg
mov
out
and
lret
addr16
push
mov
push
mov
lahf
jo
xchg
and
jbe
fwait
pop
ja
int
push
adc
adc
mov
into
sub
inc
shl
xor
jbe
into
cmc
fidivrl
nop
setbe
mov
pushf
cmp
fsubr
js
mov
ja
or
loopne
mov
lods
xorb
stc
push
into
fistpl
adc
roll
add
je
scas
mov
mov
and
pop
adc
stos
pop
fsubr
stc
mov
fwait
call
cwtl
test
lret
sti
sbb
pop
std
stc
inc
add
dec
xchg
cwtl
mov
in
jecxz
xchg
fcmovnb
int3
jg
int3
add
or
jl
pop
les
cs
pop
ds
sbb
or
shlb
std
cmpsb
incb
repz
fstl
dec
aad
jg
push
dec
dec
mov
mov
sbb
push
push
cltd
push
imul
leave
out
loop
jno
leave
mov
push
fistpl
mov
dec
mov
sub
lods
fisubrs
out
cmp
fldenv
mov
xchg
cltd
and
mov
xor
inc
pop
mov
or
sub
add
lea
sbb
jae
inc
popf
sbb
in
mov
cli
test
ret
jae
outsl
rcrb
mov
fsts
mov
dec
rclb
inc
sub
push
lock
repz
test
clc
mov
jg
hlt
imul
je
inc
dec
rorl
pushl
xchg
insb
or
sahf
mov
pop
mov
sbb
add
add
jo
and
xchg
fwait
repz
lcall
mov
jo
push
jmp
fnstenv
loop
mov
iret
js
iret
movsl
mov
testb
mov
stc
decl
sub
xchg
push
jg
xchg
test
dec
cmp
sub
lret
divb
mov
in
data16
hlt
dec
daa
daa
mov
aam
int3
into
xorl
ljmp
je
sub
lret
mov
mov
mov
lds
and
loope
or
das
sbb
add
push
pusha
repz
pusha
clc
imul
add
lret
in
xchg
adc
shrb
lahf
popa
pusha
scas
das
inc
push
lea
adc
jg
cmp
call
add
inc
icebp
fsubrl
cmp
bound
lahf
mov
push
sahf
shr
mov
loop
or
loope
xchg
pop
sub
dec
jne
sbbl
inc
sub
out
mov
add
cwtl
jg
nop
push
jae
jno
cmpsb
leave
fildll
cwtl
xor
test
movsl
jecxz
xor
outsb
sti
and
ja
sbb
cmp
mov
sub
dec
aas
sbb
into
arpl
scas
insl
mov
rclb
jg
lret
out
sub
imul
cs
shll
mov
jmp
in
popa
mov
ret
popa
imul
lods
in
sarb
outsb
mov
xchg
es
out
ss
call
dec
pushf
mov
mov
xchg
jmp
mov
repnz
lret
inc
dec
aaa
sbb
or
mov
sbb
mov
in
or
push
add
mov
mov
inc
rcl
shlb
sbb
mov
test
mov
mov
or
cmpsb
rcll
xchg
xor
jmp
adc
and
inc
andnps
jbe
mov
test
insb
fst
mov
outsb
shlb
pushf
cli
add
jnp
mov
fiadds
popa
scas
dec
inc
push
mov
cld
dec
jb
ret
lds
sub
jae
mov
clc
sbb
mov
jne
outsl
jns
jge
cmp
mov
sbb
cmc
sbb
in
aam
rorb
adc
and
mov
repnz
push
adc
or
das
test
pop
movsb
jo
jo
lcall
loopne
fwait
loopne
xchg
decb
cmp
jns
adc
nop
sbb
test
data16
rol
sub
sbb
popf
cld
pop
repz
outsl
pusha
in
dec
mov
sti
mov
xchg
xor
mov
ja
push
loopne
adc
inc
fbstp
add
mov
enter
mov
mov
jno
cmpb
aad
inc
sbb
xchg
mov
push
shr
fdivr
or
xchg
and
das
pop
xchg
je
mov
sub
mov
xor
pusha
and
addb
fcoml
add
add
pop
mov
xchg
orb
test
stos
xor
push
fisubs
fs
fldenv
xchg
sub
rcrb
fdivl
sbb
movsb
sub
ds
push
aas
call
mov
testl
sbb
movsl
fdivrl
sbb
fisubrl
jbe
outsb
add
push
outsb
pop
lret
mov
stc
mov
sub
shll
hlt
dec
or
jae
in
jg
xchg
push
sbb
mov
mov
xor
xor
cmc
stc
fdivp
adc
test
add
out
popa
jmp
cwtl
dec
fiaddl
fwait
mov
dec
popf
stc
repnz
insb
mov
lahf
add
mov
stos
ljmp
sub
stos
xor
sub
cmpsb
push
into
fadd
loope
sbb
sti
xchg
in
movsb
lods
pop
jg
rorb
out
test
gs
rcrb
fdivr
iret
in
je
mov
jnp
in
cmpsl
cmp
adc
add
adc
movsb
pushf
das
dec
dec
insl
test
aam
dec
repz
xor
js
lahf
outsl
cmpsb
mov
xchg
xor
pop
lahf
lcall
fsubrp
push
xchg
lods
js
out
push
fwait
mov
shr
ss
mov
test
movsl
adc
in
popa
leave
les
pop
xchg
incl
dec
mov
mov
mov
aaa
jmp
mov
cmp
fdivrl
xchg
adc
pop
sti
dec
sbb
adc
xchg
xchg
stos
mov
xor
add
or
jecxz
movsb
movsb
imul
stos
lahf
push
out
add
adcb
mov
stos
inc
pop
dec
sbb
mov
mov
fdivrl
fcmovb
repnz
inc
das
orb
dec
jae
into
adc
push
cmp
divb
pop
lret
frstor
inc
xchg
jae
jecxz
mov
or
imul
out
push
jo
inc
out
in
jb
lret
mov
mov
jno
sbb
cs
xlat
aas
push
mov
inc
push
cmpsb
or
mov
icebp
call
adc
lret
out
out
or
xchg
inc
leave
inc
test
leave
fdivl
xor
imul
out
roll
mov
or
add
xchg
enter
mov
mov
lock
dec
lods
repz
cmp
pop
jns
jmp
psrad
push
sub
mov
add
arpl
cmp
ja
mov
lods
ret
cli
mov
push
movsb
ficomps
xchg
jno
mov
lods
jge
cli
ljmp
mov
sbb
movsl
into
sub
test
inc
in
mov
adc
lods
jns
shll
repnz
mov
pushf
lcall
sbb
rcr
cmp
pop
daa
outsb
add
mov
and
xchg
mov
pop
jno
mov
xchg
cmp
movsb
jns
xchg
dec
inc
xchg
hlt
mov
cmpsb
dec
push
stos
call
dec
lcall
ja
xor
pop
inc
sahf
aad
jnp
inc
ljmp
adc
sbb
xor
xor
cs
imul
ljmp
sti
cwtl
xchg
jecxz
scas
and
mov
pop
sbb
push
not
inc
cwtl
ret
xlat
mov
sbb
sbb
mov
repz
push
mov
mov
sub
test
xor
jecxz
hlt
jae
pop
popa
dec
fisubl
jb
ret
cmpsl
insl
pop
sub
adc
xor
fsqrt
test
lea
mov
mov
es
mov
scas
xchg
lahf
movsl
ret
mov
xor
das
pusha
jbe
ljmp
subb
insl
push
lret
lods
stos
out
rcrl
sbb
pop
dec
pop
popaw
lret
and
cmc
pop
adc
push
dec
add
and
or
and
in
mov
xor
scas
push
pop
test
adc
rcll
add
jmp
sbb
insb
lret
or
popf
fadd
iret
psrlq
cmp
ret
popf
jge
fcomp
xor
adc
aad
cmp
xor
jbe
fs
test
mov
xchg
cmp
mov
xchg
test
filds
sub
ljmp
jne
sti
push
fptan
mov
mov
stc
pop
in
jne
and
xor
repnz
jmp
jb
add
cmc
les
push
call
inc
cld
clc
loope
stos
cmp
dec
cld
cli
int
or
lret
jne
popa
test
jecxz
stos
int
or
outsb
inc
scas
clc
mov
gs
jge
inc
push
xor
idivl
iret
aam
scas
in
je
pop
movl
jbe
hlt
push
stc
cmp
add
sbb
mov
dec
inc
sti
xchg
or
xor
and
and
cmpsb
sub
repnz
fsubrl
xor
stos
into
idivl
cmc
lcall
and
outsl
xchg
repnz
icebp
lea
and
inc
loop
dec
jecxz
rorl
lcall
int
repnz
push
xchg
in
push
mov
cmp
xchg
sbbb
sti
loop
mov
repnz
jnp
test
lods
xchg
xchg
push
cmp
jmp
sbb
sar
mov
ret
inc
ret
in
mov
fsts
imul
push
int3
pop
paddb
jno
in
inc
dec
mov
fdivrs
dec
roll
xchg
aaa
int3
call
lret
inc
stos
aam
lahf
fcmovu
lock
daa
cmp
lahf
stos
shrl
mov
cmp
pop
xor
into
cmp
dec
dec
vpmaxsw
xchg
or
stos
mov
popf
xor
jl
jno
es
outsl
lret
jns
adc
arpl
adc
lods
jno
add
aaa
cmp
in
sahf
xchg
cmp
sub
pop
cli
sub
mov
mov
lea
dec
stos
add
jb
inc
loopne
xchg
push
xlat
pusha
scas
imul
and
subl
push
insl
sbb
or
add
jg
inc
incl
xchg
pop
jg
inc
scas
jnp
rcrb
andb
icebp
push
out
push
sub
xor
adc
pop
lcall
icebp
mov
in
decb
dec
test
inc
pop
jle
push
in
mov
inc
add
ja
test
pop
inc
movsb
dec
sbb
push
cli
mov
jns
xor
pop
inc
dec
inc
fmul
mov
nop
mov
in
popa
xor
test
sti
scas
and
dec
leave
clc
jmp
test
xchg
push
push
and
jno
add
xchg
jno
lds
cmpsl
jo
int
sub
xchg
pop
divb
inc
mov
dec
insb
ss
fucomip
xchg
sbb
test
push
out
add
xchg
mov
xchg
ljmp
cwtl
call
pop
sarl
cmp
and
cli
fidivs
lods
jmp
popl
or
xchg
cmp
pop
ss
inc
clc
aas
int
or
inc
ret
loopne
cmpsb
or
shl
jns
add
daa
and
sbb
push
daa
mov
lret
jmp
cmp
push
ret
fwait
add
subl
add
pop
sahf
cmc
pusha
xchg
outsl
cwtl
sub
or
xchg
sbb
pushf
mov
push
inc
insl
insb
cs
sub
mov
call
nop
and
lcall
or
test
mov
daa
int
xor
loopne
jmp
cmp
jge
xor
inc
adc
jae
jne
test
pop
loope
pop
inc
fdivs
into
pop
xorl
rolb
mov
sahf
lahf
aad
xchg
arpl
fildl
insl
das
aad
push
out
dec
roll
test
mov
gs
add
push
or
call
xor
movb
sahf
negb
ja
hlt
inc
mov
xor
ret
shll
fidivrl
ja
sysret
scas
jmp
addr16
shr
sbb
dec
jno
sarb
xchg
sahf
sub
les
mov
stos
adcb
sti
sbb
aaa
jb
pop
sarb
pop
and
lahf
add
scas
add
cmpsl
roll
sahf
js
dec
push
aad
add
and
mov
lret
push
gs
cltd
inc
bound
sbb
mov
sbb
xor
ss
inc
lock
popf
add
push
dec
xor
sub
jbe
dec
mull
dec
les
jo
movl
mov
adc
cmp
push
pop
fsubs
cmpsb
lcall
jo
ret
rorb
and
or
adc
loope
jl
in
pop
add
scas
add
mov
ficoml
sbb
fs
int3
adc
lods
push
push
insl
outsb
mov
lods
dec
xor
push
mov
dec
dec
mov
sbb
shl
jns
lret
sbb
cld
pop
push
lods
sbb
jl
jns
push
loope
adc
mov
or
iret
iret
data16
std
push
mov
ret
xor
adc
cmpsb
jnp
out
cmp
enter
push
mov
adc
or
sbb
es
insb
daa
sbb
mov
and
dec
stos
dec
lods
cmp
push
fwait
jne
aaa
sbb
jb
mov
mov
popf
pop
in
push
cli
jp
cmp
mov
rclb
movsb
mov
enter
loop
or
sub
fisttpll
int
push
jne
pop
xlat
negl
sub
cmp
sbb
and
xchg
out
mov
lahf
push
sbb
xchg
mov
fidivrs
mov
out
das
push
pop
xchg
jecxz
aaa
cli
pop
test
or
movsl
test
mov
shrb
jo
pop
fstps
sub
mov
or
pushf
scas
dec
pop
inc
daa
add
mov
adc
in
xor
xchg
and
sbbb
xchg
filds
xor
adc
cmp
lahf
mov
lret
data16
mov
rol
xchg
add
xor
dec
test
fcmovbe
leave
test
add
scas
out
sbb
adc
out
icebp
or
push
cmp
mov
dec
mov
outsl
inc
out
cmp
jg
jo
orb
dec
jmp
adc
push
js
sub
cmp
fcoml
ss
pop
out
xor
test
sbb
inc
mov
push
push
pop
icebp
add
faddp
cmpsl
sbb
sbb
and
dec
imul
scas
in
iret
push
lods
insl
xor
mov
mov
adcb
push
mov
movsb
sar
xchg
ret
mov
rorb
and
jmp
or
push
rcll
jle,pt
mov
lds
aad
andb
push
cmp
pop
dec
ja
movsl
mov
pop
cmp
pop
test
adc
jp
mov
adc
inc
aad
xlat
xorb
cmp
xlat
enter
cmp
mov
xchg
ljmp
jle
cmp
or
sbb
fwait
adc
xchg
into
je
mov
cwtl
pop
xchg
ljmp
inc
xchg
dec
adc
xlat
xchg
mov
stos
gs
inc
into
mov
adc
mov
cltd
mov
ja
cmp
cmp
add
push
push
xor
mov
jae
test
xor
in
pop
mov
pop
cmp
sbb
xchg
jno
mov
cmc
add
cmc
pop
popa
adc
loopne
sub
mov
nop
jl
xchg
or
outsl
insb
adc
mov
nop
pop
mov
dec
in
ja
adc
lock
lret
ja
jmp
fidivrs
jle
or
adc
fstpl
jnp
mov
es
adc
das
xor
stos
or
popf
in
mov
mov
shl
mov
movsl
pmaddwd
mov
lds
add
enter
repnz
xchg
jno
lret
sub
shll
rol
in
dec
cs
bound
fstpl
mov
test
xlat
cmpsl
imul
popa
enter
faddl
cld
adc
sub
mov
adc
mov
or
cmp
aad
mov
mov
mov
push
xlat
sarl
cmp
gs
das
jbe
lock
mov
into
sbb
or
cmc
test
adc
mov
pop
cmp
mov
add
rcrl
cs
push
lahf
test
adc
lods
out
pop
sbb
fdivp
pop
mov
add
inc
and
fsubl
mov
sbb
bound
leave
cmc
and
push
movsb
out
jb
inc
mov
aam
adc
lock
sbb
jne
imul
dec
ds
repnz
js
cld
mov
adcb
jno
jns
ja
lea
adc
mov
or
lods
mov
dec
fisubs
jge
xor
jb
or
and
pusha
or
out
jnp
or
sbb
insb
and
add
mov
addr16
sbb
xchg
fsts
xchg
jl
pop
adc
mov
je
aaa
bound
leave
push
jmp
mov
cmp
ret
xor
inc
and
out
xlat
sub
test
sarl
sub
outsb
andl
fstpl
jae
jge
add
add
and
ds
push
dec
cmp
scas
push
and
cmp
and
jb
dec
out
inc
lcall
hlt
lea
clc
mov
adc
test
mov
add
inc
sbbl
push
or
push
adc
mov
xor
sbb
enter
or
mov
mov
cld
daa
pop
popa
mov
imul
rolb
xor
pop
lods
xlat
addr16
sub
arpl
cwtl
lods
aaa
test
cmc
pop
fsub
repnz
sbb
pop
pushf
rclb
jbe
rol
pop
or
fs
add
dec
pop
or
sbb
add
pop
aas
inc
and
aad
fdivr
scas
lods
adc
dec
jmp
imul
test
and
or
dec
imul
push
sbb
jp
mov
and
fldt
jb
sti
fisubl
rclb
jle
int
fists
xor
in
test
sub
cmp
orb
inc
cld
sbb
sub
jp
inc
add
push
xchg
xchg
xlat
outsb
lods
jnp
je
mov
das
cmp
and
sbb
movsl
sub
mov
xor
lcall
aas
enter
pusha
and
inc
subl
fistpll
repz
sbb
jae
mov
mov
adc
scas
in
aad
mov
mov
xorb
gs
xor
mov
ficoms
sub
loop
test
fildll
mov
mov
and
or
call
outsb
iret
push
or
or
jo
or
call
mov
ret
push
xlat
cmc
add
je
movsl
lcall
shrb
test
add
xchg
mov
xchg
mov
lret
and
cltd
inc
sbb
and
xchg
and
out
dec
jo
mov
adc
stos
mov
rorb
rol
inc
lret
test
jmp
jnp
stos
add
sbb
mov
in
sbb
loop
push
rorb
add
jp
xor
inc
outsl
fisubs
addr16
inc
mov
sub
test
mov
xor
mov
cltd
out
sahf
mov
imul
mov
push
cmp
mov
imul
into
xchg
mov
data16
mov
mov
out
cmc
sbb
clc
adc
into
dec
xor
mov
pop
dec
mov
inc
testb
mov
arpl
je
out
aaa
fnstcw
dec
adc
inc
dec
aam
cmc
mov
jne
dec
cwtl
lahf
cmp
xor
cs
lods
setne
push
cwtl
mov
mov
mov
mov
lds
stos
mov
dec
cmpsb
orl
mov
add
inc
xor
jnp
mov
pop
and
sahf
adc
movsl
xchg
jmp
popf
mov
mov
cltd
push
and
dec
sub
out
lahf
pop
mov
les
idivl
jns
clc
sub
xor
repz
inc
jne
jnp
mulps
mov
xor
dec
and
pop
sbb
push
mov
sahf
mov
aad
sbb
scas
pop
lods
gs
pop
adc
addr16
mov
fs
pop
aaa
push
mov
sbbl
push
outsl
jo
adc
sbb
sub
push
mov
xchg
mov
push
jbe
sub
push
xchg
dec
cltd
and
adc
test
mov
cmpsb
mov
sub
mov
xchg
call
mov
inc
mov
mov
mov
lea
cmc
loopne
es
movb
sub
faddl
pop
pop
imul
fisubrs
jle
str
gs
sahf
mov
enter
xor
hlt
adc
xchg
add
and
popf
fld
mov
inc
add
jecxz
mov
arpl
sbb
sub
mov
loopne
fcomi
or
push
daa
jo
xor
xorb
mov
inc
push
jb
push
outsb
or
cmp
mov
adc
cwtl
ja
mov
mov
enter
rorb
inc
in
pushl
cmpsb
int3
inc
xor
mov
andb
push
push
add
cmc
insb
fidivrs
rorl
mov
pop
out
fiaddl
pop
pusha
fwait
cmp
mov
int
pop
cmp
pop
pop
dec
pop
mov
mov
mov
inc
xchg
out
add
inc
push
pop
push
xchg
sti
inc
shrb
pop
pusha
fidivrs
icebp
pop
test
push
fnstenv
fwait
popf
mov
cltd
lock
pop
xor
scas
cld
cmpsl
loope
adc
push
dec
jl
out
jo
into
fcoms
fcomip
test
xrelease
and
mov
stos
jl
popf
int
jge
push
adc
loopne
jne
call
loopne
lods
ds
fidivl
or
mov
daa
dec
outsl
pushl
push
int
test
fistps
inc
jmp
movsl
push
inc
xor
ss
stos
insb
cld
test
sbb
js
sbb
test
inc
or
mov
inc
xchg
adc
xchg
loop
sbb
xchg
lret
pop
js
sarb
push
cmpsl
mov
pop
scas
cmp
in
xchg
cli
andb
push
push
pop
jmp
or
scas
testl
fldt
mov
stos
ret
jbe
add
fisttps
std
sti
mov
dec
sbb
jb
loope
push
cwtl
lods
popa
mov
add
or
popa
gs
arpl
insl
ret
test
cmp
mov
pop
push
into
int3
jnp
ss
in
popa
lcall
nop
ss
jb
jbe
mov
clc
lea
sbb
mov
mov
fisubs
outsl
sbb
pop
mov
je
and
icebp
adc
push
and
test
pusha
fistpll
add
daa
loop
lcall
jbe
fdivs
dec
int3
sub
hlt
xchg
dec
int
bound
add
xchg
test
flds
cmp
dec
jb
in
sub
rcll
and
scas
sbb
pop
rolb
fisttpl
pop
pop
out
add
dec
sbb
xchg
add
add
add
and
les
lcall
into
mov
mov
push
xchg
bound
dec
xchg
xchg
pop
out
xchg
test
xorb
call
out
cld
aas
dec
mov
sbb
push
dec
in
pop
mov
add
add
xor
jmp
popf
and
repnz
add
shlb
xor
xor
jl
push
push
cwtl
lods
pop
xchg
ss
ret
adc
or
mov
pop
andl
mov
stos
inc
fistpll
loopne
adc
add
dec
xor
loope
test
dec
scas
jb
dec
push
in
loope
fs
push
xor
hlt
push
int3
add
xchg
roll
xchg
daa
inc
cmp
stc
popa
addr16
jns
mov
iret
mov
aad
inc
push
or
mov
sub
cmp
stos
scas
repz
and
jae
fld
out
fdiv
xor
cmp
cld
jb
jmp
pop
roll
push
cmp
jb
mov
mov
ss
adc
mov
test
dec
andb
cli
jb
push
cmp
ret
hlt
mov
inc
push
bound
add
in
sbb
xchg
andl
inc
jmp
mov
cli
into
mov
mov
sub
ja
inc
sub
mov
dec
outsb
sbb
ds
pushf
xlat
jnp
movsb
icebp
jne
loope
push
out
pop
arpl
adc
lods
dec
dec
xchg
mov
jns
cli
dec
aad
insb
insl
jbe
out
mov
mov
aaa
neg
mov
dec
test
rcr
dec
push
mov
cltd
les
pop
popa
push
data16
scas
loope
cs
jns
adc
andb
mov
inc
jnp
and
mov
fnsave
add
mov
enter
xor
jno
popf
mov
mov
fwait
das
xchg
shll
cltd
pop
test
out
jp
mov
aaa
lahf
and
and
cmc
sbb
sbb
adc
adc
iret
push
icebp
subb
ljmp
aad
and
or
and
mov
xrelease
sbb
popa
je
jo
or
mov
mov
add
mov
fbld
dec
stc
adc
hlt
add
adc
aas
out
pop
jno
xchg
sub
aas
mov
movl
add
or
pop
jmp
mov
mov
pop
pop
adc
xlat
cs
fsubs
rolb
in
and
je
jnp
mov
sbb
mov
mov
enter
inc
loop
add
testl
push
jbe
mov
sahf
cmpsb
test
ss
xchg
repz
rclb
xlat
mov
movsb
fsubl
inc
xor
pop
push
inc
stos
inc
xor
shlb
and
in
cmp
push
xchg
rolb
cmp
dec
or
xchg
inc
cltd
test
daa
xorb
shrl
nop
xchg
mov
push
mov
mov
out
jle
shl
xchg
std
rolb
xlat
mov
pop
sbb
cmp
jle
lock
xor
cld
pop
mov
out
add
cmp
in
mov
xchg
xchg
mov
pop
addr16
inc
sub
xor
stos
popa
pusha
dec
out
loop
mov
addr16
cmp
sbbb
mov
cmpsb
add
jbe
mov
pop
xchg
jg
pop
in
cmc
add
in
jno
sub
sti
jle
shrl
push
dec
jl
ss
inc
imulb
fnstsw
imul
dec
insb
ljmp
fidivrs
in
bound
push
jl
dec
pushf
dec
jp
adc
add
sahf
in
pop
fcomps
aas
mov
push
xchg
pop
push
sar
cwtl
hlt
insb
loopne
add
lea
fstl
lcall
cltd
sbbb
jge
jns
cltd
in
cwtl
sbb
or
jb
aad
sub
arpl
mov
sbb
xor
mov
xchg
dec
cwtl
aad
je
cwtl
mov
ja
xchg
jne
adc
jecxz
loope
mov
cmp
mov
subb
mov
movsl
jg
sbb
jno
daa
icebp
jmp
push
pop
push
aad
xor
ja
sahf
add
add
mov
jp
xor
insb
xchg
movsb
pushf
jbe
loopne
js
push
or
stc
ljmp
mov
ret
fwait
mov
push
in
outsl
mov
push
out
xor
jb
push
dec
sbb
insl
sarl
xchg
mov
aaa
and
xchg
mov
mov
or
xor
divl
les
xor
fidivrs
test
mov
rol
and
or
xor
cmp
clc
xchg
clc
imul
jmp
sarl
jge
scas
aas
mov
ss
std
fs
add
shrl
das
push
scas
cmp
imul
loop
sbb
push
jmp
repz
dec
lcall
cli
lret
pop
in
mov
icebp
out
fs
dec
lret
xlat
mov
stos
fwait
addr16
lods
mov
lods
and
std
aam
cmp
jp
xor
pop
add
xchg
sbb
pushf
inc
rol
mov
insb
sbb
mov
fsubrl
pop
push
cmp
mov
insb
test
and
in
out
inc
out
pop
jecxz
iret
aad
insl
xchg
mov
stos
rclb
push
fildll
roll
pushf
mov
dec
arpl
xchg
lret
into
xchg
jp
and
cmp
mov
rcll
mov
lea
add
icebp
gs
sbb
roll
mov
pop
loope
dec
sub
xchg
sub
inc
cmp
ljmp
cmp
das
cld
je
cmp
ds
mov
adc
inc
and
test
out
or
mov
xlat
cmp
hlt
mov
mov
xlat
dec
mov
cmp
ficomps
divb
dec
xor
fdivrl
scas
inc
or
or
aam
ds
out
jmp
mov
iret
pop
lea
loope
or
lcall
mov
idivb
pushf
mov
test
leave
mov
push
dec
pusha
xchg
pushf
push
jmp
mov
add
xchg
jmp
jbe
std
cli
xor
lods
mov
sub
and
fbld
inc
popa
cltd
cld
int3
ret
mov
and
cmp
xchg
movsb
insb
iret
dec
pop
mov
out
ficoms
mov
and
aam
into
lods
jne
or
or
js
rep
jbe
and
sub
push
das
adc
mov
sub
and
dec
int
arpl
adc
mov
or
jb
std
jnp
std
xchg
adc
sub
in
enter
mov
mov
push
iret
pusha
pop
add
popf
inc
inc
aas
loopne
outsl
pop
insb
dec
fnstcw
push
inc
je
adc
rclb
pushf
mov
adc
lea
push
jmp
xor
in
mov
pop
mov
jo
out
mov
daa
jge
scas
nop
cltd
mov
cmp
inc
nop
shlb
stc
xchg
adc
test
cmpl
ds
add
ds
mov
fcomip
adc
std
ret
out
fnsave
outsl
nop
mov
imul
xor
iret
jo
cmp
repnz
lods
push
dec
adc
in
aas
fisubrs
in
je
mov
sahf
push
and
cmpsl
int
cmp
ror
shrl
out
cs
mov
inc
xchg
bound
sbb
fildll
outsl
inc
mov
and
into
cmc
cmp
and
fstp
jp
mov
dec
imul
rcrl
xchg
div
hlt
cmc
xor
movsl
popl
push
lret
pop
xlat
and
enter
adc
jo,pt
sahf
pop
imul
sbb
xchg
sub
inc
cld
mov
mov
sarb
lahf
cmp
mov
mov
mov
xor
arpl
mov
or
jle
pop
pop
pop
lods
data16
dec
cld
jb
loope
adc
out
icebp
fsts
lods
push
fists
sbb
push
cmp
pop
aam
call
lods
jae
out
cmpsb
or
bound
popa
lahf
lahf
dec
mov
ljmp
hlt
xor
in
xchg
xor
ret
xor
dec
pusha
adc
sub
fisttpl
push
pop
loop
pop
jb
add
das
push
stc
sub
jg
pop
into
xorb
iret
das
xlat
cmpxchg
int
mov
sbb
push
lret
out
dec
push
test
int3
jne
jl
add
lret
rcrb
push
imul
or
push
lcall
bound
xor
in
push
es
adc
mov
sub
mov
jno
jae
mov
jnp
cmp
bound
adcl
pop
sarl
negb
nop
cmp
dec
popa
jle
ljmp
cltd
into
hlt
mov
xchg
sub
mov
fcmove
xchg
add
xor
xchg
adc
outsb
cs
and
outsl
cmp
pop
jo
xor
orb
lret
push
dec
push
push
shll
cmp
addr16
jo
cld
jp
bound
roll
and
mov
xor
mov
sub
out
lret
pusha
data16
sbb
and
pushf
cld
pop
out
popa
iret
test
stc
cs
and
lods
shrl
mov
dec
xchg
sub
dec
arpl
dec
or
fucomip
push
add
pop
sbb
out
das
popa
jbe
dec
sti
loop
cltd
push
inc
xor
dec
stos
sbb
stc
and
fidivrs
add
and
mov
jb
imul
ljmp
dec
hlt
aas
je
push
dec
jmp
imul
mov
popa
cli
test
ret
pop
iret
jb
data16
test
faddp
cmpsb
cmp
xor
pop
out
adc
inc
adc
lahf
rcll
xchg
outsl
inc
or
jmp
shrl
mov
adc
cltd
push
pop
push
popa
lods
and
add
push
cmpsb
cmpl
iret
mov
jle
mov
aas
data16
xor
les
push
fs
ret
cmp
lahf
sbb
stos
jae
and
addl
sub
and
js
jae
stos
data16
mov
adc
pop
jno
cmc
or
xlat
in
jno
xchg
fcmovb
mov
sub
push
loopne
or
dec
jne
sub
dec
bound
or
and
dec
shll
dec
mov
notrack
in
dec
pop
das
dec
mov
fisubs
arpl
dec
cmpsb
add
sahf
mov
add
add
jge
fistpll
clc
push
aam
aam
cmp
bound
mov
adc
fimuls
sbb
aas
sbb
lods
gs
fs
sbb
scas
fdivl
loopne
lea
adc
outsl
inc
mov
test
xor
mov
mov
sub
adc
inc
push
es
jbe
sbb
xor
xchg
jecxz
xchg
out
out
mov
xchg
mov
sub
pop
xor
dec
xor
jle
inc
shlb
adc
sbb
push
mov
in
data16
lods
outsb
les
movsl
leave
dec
dec
ficoml
popa
ffreep
dec
bound
and
fisubrs
push
addb
mov
dec
int
fadds
xor
test
cmp
pop
push
xor
sub
jp
test
push
pop
ljmp
add
xor
cmpsl
fs
ret
jg
cmc
dec
jge
ds
cmc
aam
jl
rcl
jecxz
inc
jmp
int3
xor
cmp
mov
fs
leave
loop
dec
xchg
pop
clc
sbb
xchg
je
popa
inc
mov
mov
push
imul
cld
ret
fnstsw
pop
movsl
arpl
mov
pushf
mov
cmc
stos
jb
or
mov
lcall
fsts
mov
adc
mov
and
jne
pusha
shlb
outsl
sub
sub
push
jbe
stos
xchg
add
add
xlat
add
out
dec
add
incb
call
cmp
xchg
scas
mov
cld
add
cmp
and
xor
mov
call
inc
xchg
lahf
xchg
clc
es
inc
jo
mov
fidivrl
out
pop
repz
lcall
outsb
push
push
or
cmp
repz
sbb
lods
pop
in
jge
in
push
test
cmp
adc
sarb
adc
inc
mov
cmp
cld
inc
fcmovne
xchg
or
movl
inc
cs
shr
or
bswap
mov
das
in
pop
jns
rclb
adc
pop
and
mov
mov
ja
mov
jmp
mov
std
push
push
pop
test
movsb
jo
pop
in
aas
in
adc
imul
int3
jns
and
cmp
push
mov
roll
rorb
fimull
movl
mov
repz
scas
pop
bound
mov
arpl
dec
aad
cmp
add
inc
pop
add
dec
sub
add
dec
push
cli
xor
neg
imul
pushf
pop
je
scas
push
push
cmp
lock
pop
ror
jge
movsl
add
push
jnp
jg
ret
mov
lcall
es
xchg
inc
dec
iret
xchg
int
loop
leave
mov
fwait
or
call
add
jmp
xlat
xchg
lds
or
xchg
xlat
out
movsb
mov
cli
cmpsb
scas
pop
leave
les
aas
sub
fwait
mov
mov
cmp
cld
ja
das
dec
cld
sub
fnsave
fisubrl
lods
sub
dec
jmp
adc
leave
ret
mov
movsl
lahf
in
popa
dec
pop
sub
mov
loopne
fs
or
adc
cmc
mov
mov
xlat
mov
jns
lahf
mov
shl
jnp
and
mov
pop
je
push
fcmovbe
fsubs
dec
cmp
push
xchg
insl
mov
stos
lods
cmp
mov
mov
xorb
or
fwait
add
inc
gs
andb
add
jbe
outsl
fdivr
outsb
sbbb
sbb
mov
lret
pop
add
dec
dec
sbb
xchg
dec
mov
adc
test
mov
imul
scas
imul
mov
call
xchg
or
add
scas
jmp
sbb
lret
and
cltd
frstor
mov
cmp
in
add
cld
lds
jne
jl
out
inc
sbb
fldt
ja
notb
xchg
sbb
mov
push
or
roll
cmp
inc
out
pop
out
stc
popf
les
lret
repz
iret
shrb
outsb
movsb
push
loopne
ds
xor
pop
repz
daa
into
sbb
ret
mov
lea
sub
xor
lods
xor
pop
jecxz
int
pop
icebp
mov
sub
cli
fsubl
fnsave
cwtl
sar
adc
clc
mov
cmp
mov
mov
sub
rcrb
mov
lret
and
std
mov
enter
mov
cltd
add
jg
cli
rorb
pusha
sub
mov
pusha
pop
cli
fiaddl
xchg
push
or
push
outsl
push
xchg
dec
cmpb
add
popf
inc
push
xor
add
mov
arpl
xor
xchg
es
push
pop
mov
mov
movsl
call
cwtl
outsl
jge
cmpsl
pusha
stc
sbbl
iret
inc
push
push
push
sbb
sahf
hlt
sbb
sbb
xchg
testl
fdivr
ret
rol
fisubrl
fdivl
cmc
cli
pop
inc
inc
mov
je
int
addr16
lea
xchg
cmpsl
shlb
pushf
fucom
cmp
js
out
stc
mov
mov
int3
and
loope
out
and
ret
add
lahf
pop
xor
cld
mov
xlat
jno
sbbl
push
or
push
adc
xor
mov
lahf
lea
pop
cmp
inc
bound
add
adc
xor
pop
jg
xor
cwtl
adcb
or
aad
cmp
repnz
aad
arpl
mov
test
xor
daa
cmp
rcrl
enter
int
hlt
lcall
sbb
insb
lret
inc
flds
push
arpl
mov
jmp
inc
repnz
lcall
test
divl
cld
dec
ds
sbb
pop
stos
xchg
dec
add
xchg
neg
pusha
repz
dec
xchg
data16
mov
xor
mov
and
imul
test
dec
fs
mov
icebp
xlat
lret
jmp
or
jmp
dec
pop
mov
and
leave
add
adc
inc
fwait
orb
sbb
push
push
mov
hlt
jbe
rsqrtps
leave
inc
mov
push
jb
gs
pop
cs
and
dec
cmp
jmp
in
cmc
mov
pop
cwtl
mov
mov
sub
or
repnz
push
dec
jnp
xrelease
fistl
dec
orb
xchg
call
lock
mov
out
push
add
test
jl
cltd
imull
lret
cmc
sub
xchg
or
dec
in
mov
idivl
cmp
and
pop
int
jp
lods
fildll
jae
test
sbb
xchg
mov
js
ja
xchg
aad
js
push
xchg
pushf
out
jae
aam
jne
out
dec
push
push
xchg
mov
iret
addr16
sti
cmp
adc
stos
push
lea
sbb
std
dec
lock
jno
push
andl
fucom
add
daa
push
jne
pop
mov
cmp
iret
scas
es
mov
push
pop
jg
mov
add
add
int
cld
dec
cmpsl
cmpsl
add
and
jns
push
xorl
in
out
ja
sbb
dec
push
sub
xor
mov
fcmovnb
mov
pusha
cli
inc
pop
insl
mov
cmc
xor
inc
imul
mov
xchg
mov
dec
cmp
mov
dec
xacquire
add
lahf
xor
sub
in
jecxz
pop
pop
xor
dec
dec
arpl
sbb
sbb
dec
in
xor
repnz
push
outsl
mov
cmp
mull
mov
test
mov
inc
dec
int
inc
lret
lock
shl
push
aas
rcl
sub
arpl
sbb
xchg
cmp
xchg
scas
in
adc
push
jmp
daa
scas
dec
loop
imul
lock
daa
pop
or
xorl
jl
mov
jnp
and
cltd
es
jno
aaa
jb
and
or
or
dec
cld
or
mov
lock
and
jno
aam
addr16
hlt
mov
cwtl
sub
sbb
mov
cwtl
pop
lds
ja
icebp
subl
adc
sbb
or
ffree
dec
jns
hlt
pop
addl
loop
mov
or
lcall
push
outsb
jl
cmp
mov
ficompl
das
pop
js
adc
pushf
scas
pop
xlat
xchg
call
rorl
fs
mov
push
cmp
jmp
cmp
cmp
out
or
jl
cmpsb
mov
push
daa
mov
pop
adc
mov
dec
fcomp
add
ret
cltd
jnp
mov
pop
or
adc
and
pusha
add
aam
cltd
xchg
aas
test
insb
push
repnz
xchg
insb
dec
mov
jns
and
add
mov
imul
adc
lcall
mov
jp
pop
call
loope
mov
std
roll
les
sti
add
mov
xlat
pop
push
pusha
dec
cmp
add
add
jo
cwtl
mov
xlat
ss
mov
xchg
and
inc
xchg
add
xor
stos
mov
push
sbbb
rcr
cwtl
add
ret
movsb
mov
or
jne
ljmp
fwait
adc
jl
mov
pop
lods
sbb
adc
xchg
cmpsb
pusha
repz
xor
jmp
cmp
test
pop
push
dec
mov
push
mov
sbb
icebp
jmp
aam
data16
sub
pop
pushf
push
or
inc
sub
test
fs
add
push
add
les
out
push
outsb
sti
or
dec
nop
mov
bound
mov
jae
push
or
sahf
cmp
xor
jmp
sub
and
pop
push
andl
xor
pop
clc
daa
mov
in
movsb
mov
cmp
mov
and
rcll
in
sub
call
lock
aaa
mov
pop
pop
lret
ret
mov
cmpsb
lahf
ds
dec
inc
or
stos
subb
scas
jae
in
pop
adc
xor
repnz
dec
cmp
add
jno
sub
add
jae
int
lods
mov
add
pushf
or
imul
inc
ret
js
adc
movsb
pop
mov
je
daa
inc
aam
push
pop
add
fnsave
mov
aam
push
xchg
adc
xchg
jle
jmp
arpl
into
pop
jl
xchg
add
stc
or
xchg
or
xor
std
mov
jge
fldl
les
add
cmpsb
jg
jbe
sbb
test
cwtl
mov
insb
inc
popa
adc
sbb
in
xor
push
jg
sbb
jmp
push
adc
pop
outsl
sbb
je
mov
pop
lea
xor
add
inc
jmp
dec
adc
imul
mov
int
jo
xchg
jp
test
sub
inc
repnz
daa
mov
out
cmp
cs
clc
cli
in
xchg
mov
push
or
sahf
mov
or
dec
and
xlat
out
pop
fs
out
jne
inc
fistps
outsb
sub
cmc
jmp
mov
mov
and
stos
add
add
es
adc
push
cmp
add
cwtl
or
pop
adc
dec
fbstp
pop
clc
adc
jmp
push
call
mov
cmp
repz
xor
pop
push
push
sbb
rol
push
out
inc
in
dec
int
mov
push
adcb
cmp
mov
mov
xchg
popf
push
loopne
mov
and
pop
jmp
pop
nop
fimuls
pop
inc
out
mov
pushf
xchg
sbb
cmp
dec
aas
and
in
dec
rclb
cltd
test
jp
pop
fwait
cwtl
mov
hlt
lret
loop
cwtl
add
lock
cmp
mov
sub
xchg
fistpl
jne
add
cmpsb
stos
xor
fwait
push
ficoml
push
push
push
jmp
js
js
mov
cmp
fldt
xchg
int3
fwait
mov
mov
mov
add
pushf
sbb
cmp
inc
jb
cmp
cli
xchg
in
lea
movsl
adc
adc
push
rorl
inc
dec
mov
addr16
or
mov
push
rolb
add
fs
out
mov
pop
mov
shlb
jp
lods
adc
pushf
add
aad
flds
test
mov
mov
mov
movsb
sub
call
jp
xor
outsl
sbb
lods
cmp
adc
add
bound
test
and
call
jecxz
jae
xor
cmc
and
sub
insl
lds
fcompl
mov
mov
jns
jle
mov
std
fwait
in
pop
jb
scas
pop
inc
push
cmpsl
movsb
stc
xchg
in
fdiv
faddl
xor
gs
imul
int3
rcl
add
add
pop
pop
xor
fdivs
cmp
push
ret
jbe
shlb
pop
mov
in
mov
pop
inc
mov
aaa
adc
cmpsb
adc
xchg
mov
int3
push
bound
std
icebp
je
inc
pop
dec
or
cmpsb
cwtl
lcall
loopne
sub
outsl
jne
nop
pop
dec
jmp
mov
inc
sbb
dec
clc
pop
stos
inc
pusha
cltd
dec
adc
jecxz
push
aad
inc
push
leave
push
sub
sub
jg
mov
and
in
sbb
and
mov
xchg
mov
ror
es
xlat
nop
imul
std
arpl
shlb
cmp
jne
xchg
push
pop
mov
xor
arpl
cmc
or
sub
cmp
jno
push
sbb
les
mov
dec
mov
push
and
push
adc
popa
adc
jns
and
imul
insb
gs
or
or
ret
xchg
jns
xor
sbb
test
and
bound
mov
test
or
sbbb
cmc
fsts
cmp
inc
add
scas
xor
or
hlt
loope
mov
mov
scas
push
mov
popa
xor
push
icebp
inc
loope
or
divl
or
enter
shlb
outsb
cmpsb
out
lcall
loop
daa
subb
jnp
mov
inc
sarb
inc
cmp
cmp
cwtl
addr16
mov
xchg
mov
add
cmpsl
xor
push
mov
sub
xchg
sti
push
jbe
xchg
push
push
cmp
sub
test
xor
pop
test
xor
cwtl
cmp
sti
mov
les
cmpsb
mov
or
jbe
jp
rorb
jge
es
inc
mov
je
addr16
imull
in
xor
stc
pop
mov
mov
fs
mov
push
ljmp
add
fisttps
jbe
loop
fs
push
cmp
gs
inc
mov
jmp
xchg
jno
outsl
pop
fnstsw
inc
sub
mov
int
jnp
es
cmpsb
pop
pop
fisttpl
xlat
cmp
xor
adc
mov
dec
mov
mov
in
xor
mov
lods
xchg
and
stc
sbb
sbb
xor
mov
lea
adc
cmp
rorl
sbb
inc
and
fsubs
cs
push
es
imull
adc
test
sub
lds
jecxz
adc
insb
andb
and
jl
insl
xlat
test
das
loopne
push
fisttpll
xchg
pop
mov
and
leave
ss
jbe
dec
shll
jmp
add
xor
pop
mov
cmp
sahf
pop
pop
dec
out
scas
cmc
dec
sbbl
jbe
sub
fwait
out
imul
icebp
xchg
push
loop,pn
popa
pop
mov
mov
je
fcomps
imull
pop
sbb
enter
xchg
adc
cmp
neg
xchg
sti
ja
aam
mov
ljmp
loopne
les
jg
icebp
ret
sbb
aam
fmuls
xlat
or
repnz
adc
cld
add
inc
and
sbbl
iret
sbb
push
add
mov
int3
data16
out
lahf
xchg
cwtl
insl
ret
add
daa
cmp
mov
pop
mov
fwait
sbb
fnstenv
cwtl
inc
addb
loope
xor
mov
fists
add
adc
les
pushl
push
clc
mov
mov
or
shlb
sbb
mov
filds
mov
cmp
push
push
js
jecxz
xchg
sbb
movsb
mov
mov
cmp
rcrl
cltd
push
repz
data16
sub
xor
out
pop
mov
mov
jne
mov
xor
mov
pop
rclb
mov
push
sub
out
jmp
xor
ja
add
sahf
test
jmp
sarl
mov
xchg
mov
fs
fcomp
ret
inc
jns
or
cli
scas
xchg
movl
test
fildl
maskmovq
negl
enter
test
add
stos
mov
sbb
sub
mov
push
pusha
sub
rcr
jle
dec
arpl
test
pop
lahf
test
into
jnp
xchg
adc
inc
pusha
xchg
enter
test
icebp
pusha
ja
paddd
jle
mov
cli
adc
sbb
cmc
cmpsb
pop
rorl
insl
daa
cs
adcb
cmp
ficoms
lods
lcall
addr16
movsl
pop
shl
cld
popl
js
fcmovbe
push
and
pop
pop
shl
pop
xchg
sub
sti
jl
mov
lea
xchg
mov
dec
lret
clc
lods
rcll
cmpsb
xchg
pop
test
mov
jle
scas
lret
or
fnstcw
xor
sbb
mov
lds
xchg
or
out
rclb
dec
push
push
in
mov
mov
inc
pop
xor
cmp
cmp
lret
push
sarl
movsb
insb
imull
fs
and
dec
lock
xor
pop
and
incl
les
xchg
imul
out
fwait
test
lods
and
test
dec
pusha
pop
jg
fbstp
inc
xor
cmp
outsl
shl
xchg
or
push
pushf
jae
fldcw
sub
dec
shll
and
mov
out
sahf
jne
or
out
aas
lock
sub
push
imull
stc
jle
sbb
lret
loope
mov
imul
jno
out
mov
add
or
divl
pop
add
movsl
ja
push
cmp
aas
push
pushf
or
leave
dec
xchg
shrb
sbb
stos
sbb
jo
inc
in
jecxz
xor
dec
testb
test
inc
sub
pop
js
and
push
mov
ds
xor
jbe
pop
sub
mov
mov
cmp
test
and
ror
into
mov
imul
leave
lods
xor
xchg
pusha
adc
iret
pop
cs
in
daa
cli
cmc
jns
lret
adc
xchg
scas
neg
mov
push
push
mov
negb
mov
mov
popa
jmp
or
aam
ret
mov
xchg
cmp
hlt
xchg
decb
call
aas
adcb
add
inc
neg
pop
hlt
daa
mov
pop
xor
mov
or
xor
or
mov
test
pop
pop
test
mull
ss
mov
out
mov
fldt
push
and
mov
jno
fsubp
xor
xchg
push
mov
in
negb
fs
int
nop
cmp
lret
pop
cli
in
mov
mov
fs
shlb
cmpsb
dec
popa
dec
arpl
mov
cltd
lret
ret
out
negb
push
mov
aas
xchg
dec
and
sub
out
mov
lods
icebp
movsl
add
mov
pop
xchg
sbb
lret
xlat
pusha
mov
out
sub
push
or
call
js
clc
fs
adc
popa
add
push
bound
insb
mov
push
mov
addl
hlt
inc
push
push
icebp
insl
xchg
add
iret
mov
pushf
adc
cmp
test
fwait
dec
xchg
sbb
lods
aaa
xchg
xor
xchg
je
mov
iret
jo
push
orl
add
push
fs
inc
dec
and
pop
jp
movsl
jge
stos
rolb
or
mov
ror
data16
xchg
pop
out
sti
rcrb
lcall
cmc
sti
mov
sarb
aaa
jo
mov
add
inc
xchg
dec
or
aam
push
dec
cmpsb
adc
in
daa
test
das
repz
inc
scas
and
popa
dec
mov
test
pop
xlat
sub
push
and
shrl
pop
jno
insl
sub
add
push
fldl
sbb
jmp
aad
mov
mov
cwtl
fs
cmp
rcrb
imul
mov
pop
daa
xchg
lods
es
rcrb
mov
or
inc
in
in
cmpl
mov
ret
rclb
insb
pushf
fldl
push
bound
movl
mov
mov
xor
push
pusha
adcb
sti
pop
pop
push
fadds
pop
jp
aam
jo
add
xor
dec
adc
jge
pop
and
or
and
jmp
mov
mov
rcll
push
lcall
les
sbb
lret
loop
ret
mov
add
insb
mov
fiaddl
sbb
push
adcb
adc
lret
xor
or
mov
mov
adc
lods
stc
fsub
mov
mov
mov
mov
out
sbb
lahf
cwtl
or
xchg
mov
push
xchg
cmp
sub
xchg
subb
mov
or
out
jp
and
lods
fsub
lea
mov
insb
clc
pop
pusha
cs
jl
inc
inc
push
lods
adc
outsb
mov
mov
cmp
jo
rcrl
or
sub
pop
mov
fcompl
shrl
lds
mov
test
or
or
inc
sub
dec
pop
ret
sub
and
fs
add
jo
aas
jle
dec
out
cmc
pop
mov
pop
jp
dec
call
mov
xor
pop
xor
pop
lods
and
inc
push
test
popa
mov
mov
roll
ja
ficomps
cmpsl
es
mov
jl
nop
xlat
ret
mov
inc
mov
out
inc
cmp
jl
enter
and
inc
inc
ds
leave
sahf
xchg
adc
xor
int3
mov
sbb
cmp
rorb
xchg
or
addr16
mov
adc
mov
or
loop
scas
lret
cs
je
pop
nop
ret
sub
arpl
nop
out
incl
scas
adc
and
push
or
xor
inc
jnp
mov
pop
in
mov
ror
add
je
push
jb
add
push
xor
cmp
fdivrs
dec
fiaddl
adc
push
mov
scas
out
shlb
lock
je
out
pop
in
cmp
ljmp
aas
fdivrl
xchg
fneni(8087
test
pop
add
xor
mov
cld
mov
enter
mov
cs
leave
mov
insb
sbb
inc
pop
pushf
push
scas
nop
jmp
lock
add
sbb
loop
ror
inc
in
dec
not
mov
push
push
popa
xor
jge
mov
je
pop
sbb
aas
out
cmpsl
les
add
mov
push
push
fistl
fs
popa
loope
lods
test
imul
mov
enter
sbb
push
push
cld
or
shl
adc
xor
jns
inc
cmp
sub
lret
xor
dec
fildll
decb
dec
xor
negl
test
mov
inc
push
mov
arpl
xchg
xorb
xor
jecxz
mov
mov
sahf
add
mov
je,pt
pushf
mov
iret
push
repz
js
aas
sub
je
inc
mov
in
aad
stos
idivb
dec
inc
repz
mov
jns
scas
movsl
xor
loopne
push
cli
add
add
sub
mov
scas
xchg
xor
out
pop
dec
pop
mov
mov
mov
cmpsl
icebp
and
and
adc
call
shr
mov
inc
jle
popa
push
insl
bswap
scas
pusha
rep
pop
movsl
iret
pop
sub
fsts
int
dec
mov
notl
out
call
nop
jno
mov
out
sbb
cmp
cmp
setbe
leave
push
add
das
lret
or
sbb
lods
jbe,pt
mov
fisubrs
popf
inc
mov
or
popf
aam
aad
ds
test
xlat
sarl
mov
adc
and
and
testb
fildl
int
loope
fs
sub
push
mov
dec
loope
inc
mov
cmpsl
xchg
int
outsb
xchg
imul
jb
lahf
dec
testl
jg
xchg
fnsave
lock
in
sbb
shl
lret
arpl
add
ficompl
shlb
jne
sub
nop
ja
jle
jne
jno
mov
fstpl
cmp
loope
scas
mov
or
test
push
sub
mov
pop
testb
in
and
shrb
jge
loop
sbb
and
and
lods
dec
mov
xor
xchg
jns
les
ss
loope
shr
pop
sub
movsb
testl
inc
sub
xor
mov
sub
test
into
fwait
add
inc
xchg
add
xchg
dec
out
insb
vdivss
and
jp
scas
mov
xchg
fdecstp
sbb
push
sbb
push
fabs
or
cwtl
mov
leave
ret
cli
and
cmpsb
xchg
pop
xor
in
sub
call
jae
push
add
frstor
push
pop
mov
mov
rolb
dec
mov
sub
repz
and
pop
mov
iret
insl
mov
out
xchg
jmp
std
fadds
mov
fnsave
stos
mov
cmp
fldcw
pop
inc
lret
mov
mov
ds
xchg
pop
outsb
in
mov
sbb
inc
pop
jecxz
mov
out
ss
xor
daa
jns
test
leave
aas
sub
das
xor
mov
aad
fwait
jmp
test
clc
jns
cmp
outsl
daa
cltd
jmp
ss
and
pop
iret
dec
imul
leave
sbb
dec
mov
ffree
adc
pop
loope
out
xchg
cmp
lret
adc
jbe
repz
test
lahf
roll
lods
imul
adc
mov
iret
jg
adc
dec
mov
pop
repnz
adc
xchg
shl
int
cs
inc
test
idivb
rolb
mov
pop
sub
dec
lret
adcb
sub
jne
loop
cmpsl
into
or
push
xchg
arpl
pushf
pop
mov
xor
mov
shrb
mov
xchg
jae
and
mov
and
mov
nop
mov
inc
out
pop
rorb
imul
je
loope
jge
into
cltd
pop
sbb
jnp
cmp
into
movsb
dec
imul
shr
mov
dec
out
or
cwtl
sarb
les
lret
or
addb
adc
shll
iret
sub
jne
insb
pop
roll
fadds
xor
lret
push
movl
stc
mov
add
sub
lahf
fistl
mov
push
imul
adc
mov
ljmp
clc
cltd
shll
jle
xor
loop
add
xchg
aam
push
imul
outsb
push
into
arpl
mov
sub
dec
pushl
call
out
pop
ljmp
add
sbb
cmp
fisubs
sub
mov
xchg
pusha
inc
xchg
es
mov
rcrl
cld
cmp
or
ljmp
add
loop
ss
out
cltd
sbb
out
call
xor
jecxz
icebp
jmp
lcall
pop
gs
ret
jo
jbe
mov
inc
scas
loop
inc
xchg
push
xor
sahf
xlat
popa
pushf
sub
adc
or
fwait
push
cmp
mov
hlt
xor
jo
ror
jmp
hlt
add
inc
aas
inc
clc
ds
or
sub
xchg
add
pop
jg
rol
push
fistl
mov
pop
push
mov
aas
add
lret
mov
jae
mov
push
push
lret
into
ds
test
xlat
fcompl
imul
cli
je
push
mov
sbb
and
inc
lock
push
fcomps
leave
jl
dec
add
jg
pop
dec
lods
fists
mov
stos
hlt
and
test
or
fld
cmp
es
lcall
push
dec
push
fldt
mov
sbb
pop
sub
sbb
pop
repz
shll
cli
cvtps2pi
shll
xor
roll
lods
imulb
jecxz
jne
por
inc
and
mov
mov
shll
and
lock
lahf
adc
sbb
mull
int
sbb
xlat
xchg
push
andl
pop
mov
mov
mov
outsl
lret
and
insl
jg
xor
pop
in
xor
out
repz
push
mov
push
clc
pop
xor
add
push
call
adc
or
lea
adc
sbb
xchg
adc
loopne
std
loope
adc
addl
xchg
test
mov
and
data16
inc
jecxz
sbb
das
inc
and
add
lds
shlb
push
dec
pop
bound
xor
jb
mov
xlat
rolb
adc
cs
int
dec
xchg
sub
sbb
adc
adc
mov
sub
jmp
push
test
daa
sarb
ret
into
imul
jbe
cmp
loope
jno
dec
pushf
test
add
andl
push
push
adc
testl
mov
hlt
xor
mov
inc
xchg
or
xchg
sbb
lods
frstor
sbb
jle
sub
cmp
mov
cld
adc
loop
lods
call
push
pusha
dec
nop
daa
imul
sub
inc
enter
in
out
shl
out
xchg
or
lods
xchg
xor
repnz
loope
testb
dec
inc
jo
lret
and
fidivs
rol
mov
fisttps
jo
pushl
aas
pusha
stc
fstps
fidivrs
fs
jo
rolb
jbe
push
test
shlb
sbb
or
in
mov
sahf
leave
or
pusha
lret
cld
rorl
data16
shlb
adc
sbb
lea
add
inc
rcr
and
insb
and
fisttpl
clc
mov
xor
fisttpll
or
jne
push
mov
ret
lods
xor
dec
lret
sub
pop
outsb
push
je
and
jp
cli
inc
pop
imul
inc
lcall
xor
mov
push
fnstenv
icebp
adc
loop
fs
push
movsb
scas
stc
and
jb
pop
lods
movsl
push
mov
xchg
jmp
vmwrite
jnp
cmp
loopne
xor
addr16
mov
fbstp
sbb
fimull
push
push
push
and
mov
inc
inc
test
aas
xor
pusha
pop
jno
clc
dec
inc
xchg
push
scas
ja
cmp
in
pusha
lahf
jl
cmpsb
pop
arpl
loopne
hlt
mov
ret
cld
sbb
cld
ret
push
loopne
arpl
movzbl
mov
movsl
test
add
inc
popf
pop
or
inc
cmp
daa
adc
jbe
js
js
add
push
push
cmp
and
inc
lret
xchg
or
mov
sub
adc
add
js
cmova
fstl
adc
mov
scas
xchg
hlt
cmp
mov
lret
xor
sbb
sbb
in
xor
jmp
aam
ret
jl
scas
and
aam
jp
or
not
pop
dec
test
push
das
jns
imul
enter
out
mov
repnz
push
pop
adc
pop
mov
xor
inc
mov
adcl
and
ljmp
loop
call
xchg
cwtl
in
push
clc
inc
dec
rolb
insl
inc
ljmp
pop
insl
movsl
dec
negl
lods
jge
test
mov
enter
fsubrl
sub
jno
test
dec
lods
sbb
or
or
jmp
push
lods
add
repz
push
and
pop
int3
icebp
adc
jo
in
sbbl
std
cltd
std
sbb
out
jne
dec
iret
or
mov
jae
loop
loope
jbe
pop
push
cmp
pop
lcall
rorl
adc
or
sub
imul
sarl
pop
movl
mov
cmp
xchg
pop
loop
mov
movsl
fildl
data16
xor
mov
jp
arpl
pop
add
mov
flds
mov
repnz
fucomi
add
mov
out
cmp
into
std
push
pop
push
sbb
inc
mov
ret
or
xchg
push
add
mov
and
cmp
mov
outsl
add
sub
add
fs
arpl
mov
dec
pop
add
pop
xchg
ret
das
push
jg
fsubl
sub
ja
sbb
xlat
add
lret
jp
push
dec
in
pop
lds
insb
in
test
adc
xchg
movsb
cmpsb
movsb
mov
stc
jl
push
ret
pop
imul
pusha
inc
sub
lea
adc
push
stos
outsb
int3
imul
and
cmp
xchg
cmpl
push
lret
or
iret
xchg
xlat
cmp
mov
mov
insl
inc
fstpt
test
sbb
and
sbb
xchg
cwtl
fucomip
mov
xchg
inc
stos
push
in
stos
jmp
cmpsl
lock
repz
test
loop
je
insb
fists
mov
iret
mov
sti
andb
std
aam
jle
loop
pushw
or
fsub
cmp
mov
push
test
xchg
pop
pop
mov
jo
pop
jg
pop
mov
test
add
sub
mov
jb
mov
push
jno
gs
pop
xchg
cmp
mov
imulb
cltd
mov
test
orb
std
sub
and
shl
cs
out
mov
test
jl
ljmp
pop
addl
jle
js
jnp
inc
push
pop
xor
or
imul
insb
cmp
ds
adc
aas
lcall
inc
scas
fs
mov
sbb
je
fs
shll
andb
lods
pop
add
jp
and
cmp
add
jg
mov
into
mov
sub
std
cmp
xchg
jge
stos
mov
inc
inc
adc
sub
js
in
test
cmpsl
inc
scas
push
inc
xor
cmpsb
push
iret
jg
mov
pop
cmp
mov
clc
je
aaa
push
dec
mov
mov
lcall
inc
push
xchg
cmpsb
je
mov
outsl
les
mov
inc
mov
scas
out
xlat
rclb
mov
insb
popa
sub
mov
outsl
adc
mov
and
out
sub
jb
push
adc
test
xor
fcompl
aaa
and
in
sbb
hlt
or
push
adc
in
push
cmp
stos
adc
xchg
mov
fists
pop
adc
test
dec
icebp
cmp
shlb
and
jmp
pop
lods
sbb
sbb
cmp
sahf
aad
ret
or
dec
cmpsl
adcb
ss
shrb
out
mov
nop
out
push
xlat
xor
mov
nop
sub
mov
push
xchg
les
pop
mov
and
aas
ret
cmc
push
popa
popl
fidivl
pop
xchg
jmp
shufps
xor
jmp
icebp
pop
clc
or
xor
xchg
test
popa
xor
mov
lcall
mov
add
xor
xor
sub
in
jb
loopne
mov
loop
sub
icebp
pop
call
mov
sahf
ja
sub
es
add
movsl
outsb
pop
lea
inc
inc
cwtl
out
cwtl
jmp
mov
jns
mov
mov
xchg
cmp
jo
mov
cmpsb
dec
out
lcall
aaa
sub
js
inc
pop
xchg
cmp
jmp
lret
mov
mov
insl
dec
fwait
aaa
jns
lods
pop
push
dec
icebp
cmp
test
cli
add
shlb
scas
popf
dec
insl
das
lods
ljmp
push
dec
xor
adc
jecxz
dec
bound
fld
cmc
jbe
mov
adc
xor
lcall
push
das
push
ds
or
into
ret
jmp
inc
sahf
mov
ret
push
cmp
dec
fchs
mov
mov
in
xor
jbe
outsl
xchg
cmpb
test
adc
pop
ss
inc
pop
in
and
xchg
ror
andb
dec
insb
loopne
test
pop
xchg
xchg
mov
lcall
mov
fists
push
push
jmp
inc
adc
cli
xor
pop
lret
lcall
dec
stos
sub
nop
or
std
imul
jnp
sub
xchg
addl
mov
pop
pop
pop
jno
shll
les
cmp
or
iret
pop
icebp
dec
mov
daa
lea
dec
je
insw
lea
popa
lret
dec
inc
xchg
mov
mov
in
push
inc
stos
fwait
dec
lret
or
xchg
iret
sbb
mull
jnp
and
pop
xor
aad
xchg
js
sub
lcall
inc
mov
ja
loop
or
cmp
loopne
or
mov
cvtps2pd
pop
fiadds
sbb
pop
cmc
stc
xor
sti
movsb
gs
and
jae
sbb
mov
sub
out
lret
pop
pop
int3
imul
add
mov
std
ret
or
imul
out
test
push
xor
movsl
xchg
jno
hlt
les
and
outsb
enter
leave
adc
xchg
addb
cld
insl
data16
mov
xor
mov
push
inc
idiv
add
lods
xchg
cwtl
cmpsb
pop
into
lret
ljmp
xchg
mov
fwait
lock
test
imull
xchg
adc
cmp
jle
cmp
sub
inc
jnp
jbe
pop
inc
mov
inc
enter
push
dec
js
outsl
or
testl
shrl
pop
data16
clc
or
popa
fadds
in
insl
ficomps
cmp
mov
out
call
lahf
in
add
mov
cmp
mov
lcall
call
mov
ljmp
xor
stos
mov
inc
mov
push
mov
test
sti
negl
xor
push
gs
dec
push
xchg
aaa
jb
sbb
testb
loopne
inc
adc
mov
inc
jb
mov
push
insl
push
sub
jg
mov
add
xlat
sbb
es
mov
repnz
dec
ja
mov
aad
mov
jmp
cmp
jp
add
in
in
imul
xor
sbbb
push
mov
push
cmc
sbb
dec
je
mov
mov
cmpsb
inc
cmp
ss
pop
jo
jmp
and
pusha
cs
push
testl
xchg
fdivrs
hlt
pop
cmp
pop
mov
pusha
xor
mov
inc
sbb
push
clc
aam
icebp
insb
mov
and
add
jns
sbb
sahf
push
mov
cmp
pop
cmpsl
mov
pop
call
xchg
movsl
lahf
imul
dec
iret
push
test
into
or
pop
enter
adc
das
mov
jo
stos
jnp
pop
push
jp
xchg
lea
xchg
jge
insb
cltd
call
mov
subl
mov
fdivr
cltd
xchg
add
jle
out
jno
pop
insb
rol
push
pop
inc
cmp
jo
ja
mov
fstpt
icebp
sarb
inc
inc
push
sub
push
scas
push
mov
leave
out
add
dec
loopne
int3
ljmp
jae
pcmpeqb
cmp
jb
imul
mov
sub
jnp
xor
jle
xor
int
aam
push
jns
dec
or
inc
jge
cmp
in
sahf
xor
sbb
fs
aad
call
adc
roll
sbb
fiadds
mov
inc
out
loopne
push
clc
loopne
xlat
mov
mov
or
inc
mov
push
mov
cmc
inc
mov
mov
sub
xchg
hlt
pop
scas
mov
pop
mov
and
pop
lock
sub
mov
or
mov
mov
lea
sahf
xchg
mov
dec
push
dec
jo
push
sub
jp
mov
xor
test
cltd
and
sbb
in
and
sub
cmp
or
mov
mov
pop
mov
clc
rolb
mov
insl
cmp
inc
lahf
iret
test
mov
add
icebp
pop
lds
sub
cli
inc
push
dec
push
aam
xor
mov
jb
lea
push
add
xchg
cmp
add
jmp
mov
sbb
push
loop
aas
pop
sbb
into
xchg
imul
mov
add
push
mov
call
fcomps
mov
add
mov
enter
mov
ljmp
xchg
loop
jns
test
push
andl
int3
inc
out
out
ret
lods
test
sub
inc
pop
mov
adc
insl
repz
push
sub
fsubl
imul
and
mov
jae
pop
adc
aas
push
pushf
add
cltd
ljmp
dec
dec
adc
leave
mov
imul
ss
popa
insl
ret
or
mov
cwtl
mov
and
add
repnz
push
lcall
mov
test
adc
jg
xor
fisubs
repnz
mov
insl
xchg
divl
es
pop
xchg
mov
jle
push
or
fisttpll
mov
jno
push
enter
and
repnz
pop
jno
push
cmp
dec
mov
or
jl
scas
adc
jb
mov
lock
mov
dec
jmp
mov
sbb
outsb
daa
jne
int3
cmp
xor
dec
xor
into
je
sbb
or
cmp
sub
add
test
xor
cmpsl
xor
cmp
adc
push
loop
fcmovnb
rcr
xchg
addb
mov
stos
sti
lahf
scas
ljmp
fisttps
pop
mov
dec
enter
jae
mov
test
cmp
and
sbb
inc
outsl
test
das
sti
mov
sbb
int
rorl
outsb
and
popf
jns
pop
mov
andb
sbb
sub
mov
mov
inc
fisubrs
in
lret
jbe
fcompl
mov
rcll
lahf
fnstcw
and
testb
and
idivb
dec
loop
dec
in
jle
cmp
arpl
fbld
adc
mov
sbb
jae
ja
mov
xor
popf
inc
out
ficoms
mov
int3
pusha
push
aas
hlt
repnz
adc
xchg
add
loope
in
stc
pop
js
imul
cmp
inc
push
insb
xchg
sbb
push
add
xchg
or
fsubrs
jecxz
inc
faddl
cmp
and
std
push
sbb
mov
xor
inc
jl
mov
add
pop
push
push
sub
sbb
fnstcw
inc
outsb
or
sub
mov
imulb
loop
lret
mov
xchg
xor
add
rorl
mov
lods
test
push
mov
mov
std
mov
xchg
sbb
andl
data16
scas
loop
pop
std
fnstcw
jb
aas
inc
sub
clc
repnz
test
int3
pusha
lock
popa
jbe
leave
mov
stos
pushw
fisubrs
fiaddl
daa
cmp
push
call
pop
sub
push
lds
xchg
jns
das
lcall
sub
ret
xchg
sbb
mov
mov
sti
dec
add
push
cmp
fcmovnb
sub
addb
loopne
dec
call
inc
je
adc
xchg
int
jbe
mov
adc
pop
out
int3
out
xor
jp
xor
jge
push
jmp
cmp
rorb
or
and
scas
pushf
xor
fucomi
inc
js
insl
sbbb
mov
jne
inc
call
push
adc
andl
sbb
pop
mov
repnz
pop
mov
pop
adc
arpl
xlat
in
add
inc
shll
and
aaa
test
sbb
mov
push
pushf
pop
aam
sbb
pop
cmp
xor
sub
pop
inc
jecxz
push
sub
or
or
lock
ds
in
stos
sbb
or
pop
push
stos
je
pop
fsubrl
and
adc
dec
mov
jne
mov
lds
cs
push
fwait
imul
jne
adcb
mov
lret
pop
out
cmc
popa
in
f2xm1
push
sbb
lods
adc
hlt
daa
sbb
dec
xlat
or
add
call
mov
adc
lods
std
rclb
movsb
lret
das
insb
lret
and
add
popa
jmp
cli
cmp
test
pop
fdivrs
cmp
or
stc
pushf
out
pop
imul
pop
or
lahf
and
pusha
leave
cmp
xor
mov
notb
dec
mov
jecxz
jae
pop
mov
fisttpll
push
scas
cmp
cmpsb
and
loopne
sahf
cmpsb
xor
lods
cmc
out
inc
je
insl
popa
mov
mov
ja
je
cmp
xchg
sub
push
popa
jne
inc
pop
lock
in
pop
jno
push
mov
cmpsl
mov
sbb
clc
sbb
int3
notl
mov
mov
mov
xchg
out
pop
mov
pop
cwtl
sub
inc
mov
jp
loope
inc
pusha
or
idivl
mov
sub
js
push
incl
addb
repz
pop
mov
push
add
add
out
loope
mov
push
cli
ds
inc
xor
mov
insl
xchg
push
negl
pop
out
or
push
push
or
cltd
dec
push
add
or
inc
pop
pop
mov
dec
mov
add
sub
mov
xchg
gs
imulb
add
mov
enter
cmpsl
popf
jbe
movsl
nopl
jbe
out
in
das
push
add
sahf
in
xlat
xchg
cmp
adc
out
es
add
xchg
push
fs
loope
enter
cs
and
push
and
stos
jl
daa
imull
les
jg
cmp
aad
scas
and
push
nop
cmpl
cwtl
scas
push
xchg
lock
cmp
dec
sbb
sbb
rolb
popa
mov
sub
fwait
mov
pop
push
mov
push
xchg
imul
call
dec
fs
lret
push
sub
sahf
mov
xchg
push
es
aad
test
and
xlat
aam
stc
push
mov
out
shll
jmp
xor
sbb
int
jne
inc
clc
pop
xchg
push
or
and
rcrb
fists
js
idivl
jb
or
lahf
cmpsl
shlb
aad
popa
cmp
lods
inc
jae
cld
add
push
inc
cltd
lods
inc
stc
jg
sbb
pop
out
push
movsb
loopne
inc
iret
mov
test
inc
xor
or
repz
xor
loop
jl
and
lods
jge
aam
mov
int
sti
cli
lret
call
ret
mov
or
lret
or
call
xor
jns
fidivrl
jp
scas
nop
xchg
jge
mov
adc
repz
cld
out
push
adc
sbb
test
iret
cmp
ja
loope
das
dec
jno
jge
mov
dec
jbe
fidivrl
gs
jb
inc
fs
jge
push
adc
push
inc
cltd
out
in
cmc
xchg
imul
arpl
fsubs
jne
add
mov
pusha
fcoms
lods
mov
jno
and
sub
dec
jb
fdivrl
and
push
push
pop
fs
dec
je
adc
xor
and
push
cmp
je
js
xchg
mov
jne
xchg
iret
les
pusha
inc
fstpl
rcrb
xor
in
aas
jno
repnz
cmc
xchg
sbb
pop
cmp
test
test
cmpsl
mov
pop
dec
and
push
mov
dec
mov
fwait
pop
pop
add
mov
stos
outsl
add
mov
add
push
pop
cmp
mov
sub
js
negl
cli
les
add
les
stos
mov
jnp
lds
push
leave
cmpsl
mov
sahf
std
sbb
dec
mov
ss
pushf
nop
jle
push
scas
mov
mov
jle
push
inc
and
and
cld
loop
xchg
cmpsb
sti
add
loope
int3
movsl
dec
cmc
cmpsl
js
mov
mull
push
cmp
sarl
jg
and
sbb
cwtl
push
lods
push
sbb
mov
out
lret
sbb
mov
push
aaa
popf
daa
mov
mov
sti
cmp
out
push
out
and
push
mov
jnp
sbb
xchg
lock
clc
out
faddl
lods
cmp
fisubrs
or
daa
cmpsl
sub
lock
test
pop
loope
cmc
xor
jp
xchg
or
dec
iret
imul
sub
roll
pusha
and
out
ret
imul
pop
xchg
push
sbb
movsl
int
fs
add
decl
js
test
adc
cmpsl
ret
push
jle
stos
and
stc
xor
dec
imul
push
inc
fcomp
or
cmc
and
pop
cmpsb
fcompl
sbb
in
inc
shll
inc
aaa
jno
icebp
fistpl
outsb
lahf
dec
mov
jne
xchg
repz
mov
pop
adc
arpl
inc
pop
jo
rcrb
xchg
movsl
icebp
inc
mov
addb
sbb
xchg
jb
jo
cld
sbb
ficoms
push
out
push
scas
mov
cmpsl
xchg
mov
dec
jbe
aam
jmp
cmp
rorb
repz
stc
outsb
sub
xchg
insb
pop
inc
and
lods
xchg
xor
repz
xchg
ljmp
imul
stos
jb
jle
out
adc
sbb
adc
inc
idivl
jmp
mov
ss
sub
jae
dec
cltd
paddsb
lahf
adc
pop
scas
inc
icebp
mov
fstpl
dec
sub
int3
out
sbb
repz
cwtl
cmpsl
or
push
dec
fwait
and
push
imul
or
pop
push
push
hlt
pop
sub
mov
xlat
jmp
inc
lcall
cmp
cmp
or
mov
push
sti
int3
add
xor
add
test
shlb
shl
jl
xor
pushl
push
push
cmp
fmull
cwtl
fcoms
jge
ja
ficoml
xlat
dec
pop
test
test
inc
push
sbb
mov
ljmp
mov
adc
dec
scas
test
test
jno
jecxz
fldt
push
add
and
arpl
add
cmp
aas
inc
fs
rcl
pop
dec
arpl
sub
hlt
pop
sarb
push
jae
xchg
rorb
xor
imul
mov
add
mov
in
iret
dec
js
sbb
bound
jge
adc
ret
es
mov
xor
sarb
mov
lea
rcrb
int
out
mov
in
lds
call
xchg
imul
loopne
ret
push
adc
or
cmp
mov
stos
mov
fnstenv
mov
mov
jp
cs
psrlw
and
cwtl
mov
and
rcrl
cmp
mov
and
cmp
lcall
ret
repz
ret
add
dec
imul
ficompl
mov
fisubrs
ds
sub
mov
aam
movsl
lret
cmp
ljmp
in
cmp
sbb
or
sub
cs
lahf
aad
pop
insl
out
and
dec
loope
sbb
push
repnz
stc
fmull
faddl
cmp
add
ja
or
lea
jle
and
push
int3
sbb
jle
mov
jno
xor
cmp
jnp
inc
xor
lret
enter
int
inc
lock
pushl
aad
inc
jmp
lcall
movsb
jae
and
aam
outsl
int3
adc
les
and
xchg
or
sbb
scas
insl
nop
into
mov
repz
push
cmp
mov
enter
std
xor
adc
in
movsl
out
add
sub
sub
js
lods
mov
cmpsb
ja
lret
jmp
mov
pop
sub
out
inc
mov
mov
out
ds
cmc
jo
mov
xchg
popf
mov
ja
bound
lods
addr16
xchg
or
test
mov
nop
lret
repz
adcl
adc
push
cs
inc
in
jp
mov
xor
aas
in
add
sahf
or
or
xor
cmp
xor
pop
jl
push
sub
push
mov
es
sub
fld
insb
das
out
push
test
lret
and
fs
icebp
dec
ret
sbb
int
jae
test
lcall
hlt
add
push
mov
pop
push
divl
and
jo
dec
dec
insl
mov
adc
mov
xchg
adc
add
jo
push
outsb
dec
adc
addr16
mov
movsl
xor
mov
outsl
jge
or
mov
push
sbb
sbb
imul
push
gs
mov
xor
dec
test
xor
and
aas
mov
je
lret
jge
in
adc
icebp
pop
inc
xlat
in
xor
dec
aas
sti
movsb
loopne
arpl
jmp
pop
pop
jmp
enter
lods
out
sub
mov
push
cmp
cmpsb
add
pop
daa
lahf
or
add
mov
iret
mov
jge
in
int
xor
lock
add
mov
dec
test
popf
xchg
xchg
cmp
mov
mov
fisttpll
cmp
aas
aam
xor
sbb
mov
xchg
iret
loope
cmp
xchg
test
pusha
jmp
movl
xor
into
sub
inc
mov
out
clc
in
pop
lret
fbld
cltd
add
lret
insl
mov
adc
mov
add
sbb
scas
inc
push
mov
adc
test
data16
cli
jo
lock
jnp
push
in
push
adc
jmp
add
sub
mov
outsl
dec
lods
in
hlt
xchg
leave
sbb
cmp
or
leave
pop
mov
mov
cmpsl
pop
adc
mov
out
loop
xchg
mov
xlat
inc
push
and
adc
adc
add
stos
push
mov
or
popf
repnz
add
cmp
jb
scas
pop
jb
xor
clc
pop
dec
add
jnp
loop
lret
insb
adcl
xor
clc
mov
mov
fdivrs
sub
les
pop
sarl
pop
rclb
mov
inc
call
jne
and
mov
sub
mov
push
jecxz
scas
sahf
not
inc
mov
pop
or
pop
push
mov
in
add
out
imul
push
and
movsb
loope
icebp
or
lcall
iret
fldl
cli
jo
mov
mov
pop
aad
push
popa
das
subb
jne
sti
incb
pop
aaa
jae
dec
loope
in
inc
xchg
or
testl
cld
and
aad
enter
dec
shll
xor
or
add
xchg
pop
clc
imul
cmc
fisttps
out
outsb
add
jl
sub
cld
mov
and
adc
jb
cmp
inc
or
push
xlat
push
mov
test
dec
loopne
xor
adc
mov
cli
or
sub
aaa
repz
je
mov
test
inc
es
mov
scas
dec
add
inc
sbb
ja
and
pop
cwtl
pushf
in
push
cli
pushf
nop
xchg
sbb
nop
aas
std
leave
mov
sahf
cld
in
xchg
sub
in
sub
or
and
add
repnz
lahf
jns
call
adc
inc
pushl
jb
sbb
push
xor
push
jg
lds
jno
cmp
lds
mov
cmc
lret
pop
sahf
shrb
mov
jp
lock
pop
mov
cmpsl
fcompl
xchg
adc
pop
lods
jle
fstp
loope
inc
lahf
ret
mov
and
mov
inc
cmp
mov
cld
mov
mov
into
inc
sbb
dec
add
and
push
in
loope
mov
or
add
xchg
test
push
fdivr
xchg
mov
jge
inc
pop
bound
ret
jae
mov
lret
mov
ja
xchg
cltd
xchg
xchg
bound
pop
scas
dec
sub
inc
dec
mov
push
or
mov
repnz
jg
mov
adc
sbbb
mov
in
pop
jl
sti
rorl
push
jne
mov
loop
ja
loopne
jmp
out
sbb
or
lea
push
jne
mov
xor
pop
js
outsb
mov
push
movsb
mov
shll
adc
mov
ret
loop
lret
dec
xchg
mov
int
jae
rep
mov
fcoml
xor
pusha
das
outsl
out
inc
pop
mov
lock
add
stos
in
sub
or
loope
lret
inc
sub
fucomi
aam
lret
sub
fwait
mov
sbb
pop
lcall
ljmp
push
mov
or
push
gs
popa
sbb
push
and
jb
aam
or
jnp
in
and
mulb
xchg
and
daa
shrb
and
adc
jne
sbb
inc
or
cmp
jns
shll
push
inc
loope
ret
scas
adc
jnp
dec
sbb
jmp
pop
sub
sbb
lret
push
les
push
test
cmp
decl
cmp
mov
ja
ret
leave
adcl
lret
cld
inc
mov
aaa
negl
jge
mov
jae
jb
dec
fs
cmp
out
jp
lock
sbb
add
aad
mov
xchg
dec
inc
mov
sbb
rcll
jbe
imul
push
push
sbb
scas
shrb
ja
add
and
aad
inc
push
jno
and
pop
outsb
pop
push
dec
loope
imull
imul
aam
cld
divb
add
cmp
in
insb
sub
nop
jmp
jle
mov
add
stos
mov
in
jmp
shrb
cs
push
add
shlb
not
inc
mov
add
jns
xchg
xchg
pushl
outsb
mov
push
xor
cltd
or
out
sbbb
ljmp
cs
call
dec
nop
outsb
jmp
inc
inc
ds
or
push
jp
push
out
aas
pop
addr16
push
bndldx
push
mov
jmp
lock
xor
or
jecxz,pt
lahf
repnz
mov
std
adc
jno
pushw
mov
inc
mov
mov
mov
cmpsb
loopne
ret
cs
nop
jne
insl
jbe
aas
or
dec
out
xchg
loopne
fdivl
mov
call
pop
dec
pop
movsb
xlat
fimull
popa
push
and
dec
in
xchg
out
les
sbb
mov
outsl
push
fiadds
mov
mov
call
cs
stos
push
add
lods
ret
dec
dec
jle
repnz
mov
xor
sahf
jns
cltd
and
imul
adc
xchg
jb
cmc
inc
out
cli
add
jbe
xor
dec
xlat
pop
popf
pop
sbb
scas
xchg
addl
jbe
std
out
inc
pop
lret
cli
movl
out
jb
jmp
pop
out
lret
mov
ljmp
xchg
subl
rorb
xchg
jmp
fs
sub
cmp
push
cli
and
adc
data16
imul
fimuls
mov
mov
inc
je
push
fdivp
lods
dec
xor
fsubrs
cltd
call
test
fiadds
xchg
mov
pusha
cmp
mov
stos
jge
loopne
jl
mov
cmp
addb
jns,pn
jg
xchg
lret
xchg
lds
push
andl
sub
outsb
push
fwait
ror
adc
jo
sbb
cmp
fldcw
das
add
test
cwtl
mov
sbb
test
out
in
mov
cmp
xchg
pop
sbb
push
mov
push
jmp
mov
sbb
push
or
pop
adc
add
cmp
cwtl
jg
call
jle
cmp
addb
shlb
cmp
adc
cbtw
sbb
rolb
popa
cmp
loop
sbb
pop
or
lret
mov
test
xor
in
adc
call
jbe
je
mov
mov
jbe
mov
add
sarb
sub
pop
mov
daa
cmp
push
adc
shll
mov
adc
pop
stos
xor
or
adc
cmp
lea
shr
repnz
pop
xchg
or
jmp
pop
popa
ja
clc
stc
addr16
icebp
es
loope
sub
rclb
int
mov
and
enter
int3
movsb
sbbl
leave
and
adcb
xchg
mov
add
mov
lcallw
inc
inc
xor
xchg
test
jnp
vpavgw
or
cmp
jnp
xchg
test
les
stos
xchg
aas
je
arpl
shr
daa
sahf
adc
daa
int3
jae
mov
pop
out
mov
fcoms
push
mov
mov
insl
xor
outsb
lock
rcrb
pop
mov
mov
sub
lea
add
xor
pop
ror
xor
pop
hlt
jge,pn
mov
sub
mov
jecxz
add
mov
jb
mov
movsb
divb
mov
mov
mov
jnp
mov
sbb
in
jmp
mov
ljmp
orb
mov
mov
adc
or
add
int
icebp
xchg
popf
mov
sbb
mov
fcmove
negl
sbb
sub
jae
or
xchg
xor
jecxz
xor
outsb
and
pop
enter
inc
stos
sbb
mov
and
mov
cmp
lds
rorb
dec
outsl
sbb
jo
dec
pop
addr16
movsb
push
cli
and
add
xlat
fstl
loope
int3
dec
xor
cmp
leave
fildl
xchg
out
add
in
mov
arpl
mov
insl
mov
adc
mov
outsl
fidivrs
and
mov
jle
add
jne
das
cmc
lret
sbb
lret
fmuls
or
pop
jns
divb
mov
test
pop
add
dec
mov
lret
and
insb
cwtl
jnp
clc
add
std
lret
imul
add
fnsave
and
js
pop
rcrl
inc
shll
cwtl
fiadds
jns
icebp
and
std
mov
xor
cs
mov
loope
inc
push
es
sbb
mov
filds
ljmp
jp
jo
mov
and
lahf
out
cs
pop
mov
testl
fsubrs
jle
dec
pop
mov
push
jns
add
sub
clc
ret
push
dec
inc
cmp
adc
cld
inc
pop
std
pop
inc
andb
xchg
push
push
xchg
icebp
dec
sbb
add
xchg
mov
repz
out
daa
or
pop
outsl
jle
jb
ja
xchg
mov
sbb
inc
pop
push
repnz
sub
stc
xchg
pop
dec
add
andb
mov
pop
fstps
adc
subl
add
jae
jge
lret
je
out
cmpl
mov
push
lods
xchg
popf
sub
or
jecxz,pn
inc
ret
push
mov
cltd
sahf
mov
mov
xor
lock
lret
jge
pusha
sbb
adc
inc
add
inc
cmp
ret
push
outsl
rolb
or
push
outsl
or
jnp
push
cmp
call
or
lock
mull
push
rorl
stos
fcmovnbe
cmpsb
dec
fnstcw
inc
push
lcall
mov
or
lock
cli
sbb
aas
dec
icebp
orl
in
aas
movsl
sub
addr16
xor
popf
jmp
dec
or
out
mov
popf
fisttpll
push
jnp
sbb
test
ljmp
jg
inc
add
mov
xor
shl
sbb
out
xchg
add
stos
xchg
cmpsb
dec
out
jbe
xor
cmp
lea
dec
gs
cmp
mov
and
dec
jg
stc
scas
jecxz
mov
int3
loope
dec
sbb
and
pop
movsb
nop
push
dec
push
jne
rorb
sti
xchg
leave
jns
in
insb
ret
xor
stos
xchg
sarl
dec
dec
inc
push
xor
es
mov
lods
push
push
int3
call
addr16
movsb
arpl
mov
push
jno
stos
adc
movups
pushl
push
xchg
inc
and
hlt
adc
fsts
xchg
test
adc
push
cs
cli
lret
mov
pop
sti
arpl
aas
push
cli
inc
scas
add
into
push
enter
stos
pop
and
cmpb
mov
sub
pop
test
mov
sahf
xor
or
sbb
and
fwait
push
out
popf
jae
or
enter
dec
and
mov
xchg
cmp
xor
nop
add
push
sub
stc
sar
adc
adc
and
pusha
movsl
imul
cld
adc
adc
mov
leave
or
notl
in
add
push
mov
jnp,pt
out
sbb
daa
cmp
mov
jecxz
fsubrl
mov
lea
rol
inc
enter
cld
adc
mov
into
test
cmp
shlb
dec
outsl
mov
pop
or
xor
sbb
xor
inc
and
clc
insb
ljmp
mov
sbb
pop
push
iret
inc
jecxz
push
dec
addr16
push
xor
jmp
mov
xor
cs
test
loop
mov
les
mov
cmpsl
mov
jg
pushf
inc
mov
dec
push
dec
and
xlat
pop
pop
cmp
hlt
je
cli
push
outsl
test
jmp
mov
push
jmp
pop
adc
push
movsb
adc
jbe
mov
test
arpl
outsl
lret
sub
lret
daa
cmpsl
sahf
ljmp
je
fisubl
cmp
and
dec
pop
repz
and
in
inc
out
movsl
or
push
sarb
adc
dec
mov
stos
cmc
cmp
push
push
dec
test
cld
inc
xor
pushf
or
push
mov
jl
std
aam
std
cmp
sbb
mull
lods
in
xchg
ljmp
mov
hlt
jnp
cmp
imul
pop
daa
xor
add
adc
dec
shll
mov
fcompl
push
ja
pusha
mov
push
or
aas
orl
xchg
stos
adc
lahf
mov
push
sbb
and
mov
add
ss
movsl
mov
mov
sub
sub
aaa
add
stos
into
stos
pop
ret
dec
pop
adc
popf
les
jmp
sti
inc
lret
sbbl
fldt
stos
cmc
test
or
dec
cmc
aam
idivb
mov
pop
lret
add
jo
or
lock
add
dec
aam
loope
cld
test
push
ja
aam
add
inc
cld
in
or
test
test
sahf
jge
repnz
inc
jae
mov
aad
cmc
mov
sbb
cmp
and
imul
mov
and
cwtl
dec
add
ja
jbe
jo
push
mov
rolb
sub
lods
dec
xchg
jge
xchg
shll
jl
push
cmp
inc
and
lds
mov
jp
sbb
and
cmpsl
jae
mov
cwtl
fcomps
xchg
mov
xchg
push
dec
dec
aaa
stos
int
fdivrl
push
fstl
pop
push
ja
jle
data16
scas
rorb
sub
jno
mov
or
sbb
xchg
cmp
dec
aam
jbe
adc
xor
xchg
into
enter
push
push
lea
pop
enter
cmpsb
mov
idivb
ret
cwtl
mov
movsl
hlt
negb
fucom
subl
stc
aam
adc
xor
lcall
rcr
sarl
cmp
ja
xchg
pop
jae
sbb
sarb
dec
cmp
ja
adc
lahf
clc
dec
sti
bnd
neg
ds
lds
outsb
daa
hlt
pushl
sbbl
sub
nop
insb
pop
std
push
push
fstl
push
or
sahf
and
fidivrl
xchg
mov
fistpll
insb
lock
loopnew
fildll
lds
push
mov
fcompp
fsincos
rorl
cmpsb
add
pop
aad
jmp
pop
fs
cmpsl
adc
icebp
clc
xor
dec
vphadduwd
jae
fdivrs
cmc
enter
lahf
aam
lods
ss
adc
mov
popf
cmp
sub
iret
xchg
aad
mov
jns
out
mov
arpl
or
push
pop
dec
adc
and
popf
lret
adc
cmp
jmp
mov
dec
mov
push
cltd
sahf
mov
imul
or
lahf
popf
lds
sahf
inc
pop
loop
shlb
jb
xchg
stos
jecxz
dec
lds
sbb
push
repz
jl
mov
push
test
dec
out
fisubs
cmp
in
add
sub
iret
movsb
dec
xlat
mov
cli
iret
hlt
xchg
pop
xchg
mov
popa
xchg
pop
pop
sub
mov
inc
adc
aam
and
xor
push
aaa
adc
repnz
inc
shrl
cmp
sarb
movsb
scas
sbb
stc
cltd
in
dec
insb
sbb
dec
rclb
aaa
test
out
adc
mov
dec
ja
ljmp
add
and
mov
push
mov
pop
cmpsl
loope
jns
fs
stos
out
fs
adc
mov
iret
cmp
imul
scas
inc
hlt
sub
arpl
sub
shr
stos
sahf
pusha
sbb
add
stos
inc
xchg
mov
cmpsl
test
sbb
and
out
les
scas
dec
mov
leave
mov
mov
insb
insb
push
jmp
cmp
dec
push
pop
xor
mov
mov
pop
mov
cmc
rorb
mov
inc
out
repz
sub
scas
ja
dec
movl
xchg
push
jg
lock
fbstp
dec
xor
imul
pushf
scas
dec
mov
add
sub
sbb
enter
movsl
lret
sahf
call
movb
fs
mov
mov
fcomps
out
xbegin
sub
lret
or
sbb
push
out
and
push
or
and
mov
fdivl
daa
mov
mov
pop
outsl
push
mov
and
mov
js
aam
shrl
sbb
inc
and
ja
mov
xor
push
cmpb
jl
das
sbb
or
scas
idivl
add
mov
addr16
cli
loope
imul
or
mov
test
rorb
aad
outsl
mov
repnz
adc
jge
repz
dec
dec
ljmp
and
gs
push
test
xchg
push
cmp
das
fldenv
inc
cld
lds
enter
stc
ds
jg
and
es
cmpsl
ret
mov
cs
popf
aas
or
lcall
ss
inc
out
or
push
test
fistpll
pusha
pusha
ljmp
jmp
out
and
sbb
push
ret
mov
pop
adc
mov
int3
ret
mov
lea
xlat
aam
mov
mov
push
cs
nop
insl
outsl
mov
aas
push
jl
fisubrs
lock
dec
test
scas
repz
fists
inc
jo
mov
add
rcll
lock
aaa
mov
loope
add
lret
xor
jo
ja
and
lock
cmp
mov
fidivl
inc
not
push
xlat
in
enter
xchg
mov
mov
jo
ret
incb
ds
test
pop
icebp
adc
lea
jnp
lea
insl
jne
imul
aam
cs
or
adc
push
or
insb
das
out
mov
and
sti
popa
jg
flds
xchg
je
loop
adc
xchg
push
inc
hlt
shlb
popa
xor
mov
movsl
sbb
mov
and
cltd
inc
xchg
xchg
or
or
push
push
lret
jmp
ljmp
lahf
mov
sub
xchg
or
lea
sbb
and
inc
fcmovne
xor
xchg
fidivs
jbe
mov
inc
add
fisubs
add
in
subl
fs
rcl
and
lea
icebp
sbb
adc
jp
outsl
pop
push
decl
cld
xchg
mov
out
mov
jns
push
mov
adc
sbb
jg
popf
add
stos
xor
stos
pop
push
mov
and
shlb
sbb
icebp
ss
repnz
mov
mov
pop
outsl
sbb
iret
addb
add
ds
cmc
movsb
cmp
mov
ds
cmc
cmp
movsl
test
mov
inc
mov
sahf
and
push
xchg
aad
out
movsl
add
call
jge
addr16
sub
nop
add
fsub
das
bound
rol
jno
mov
popa
mov
hlt
mov
aad
adc
mov
ret
call
mov
arpl
and
out
mov
mov
sbb
scas
fs
stos
es
mov
fcomps
das
jecxz
arpl
outsl
push
lahf
js
cmp
mov
inc
int
push
sbb
sbb
es
xchg
mov
out
add
pop
lods
mov
sahf
mov
test
mov
and
fwait
mov
aas
popf
pop
jmp
or
push
je
add
pop
jg
dec
xchg
xchg
dec
ss
pushf
dec
sub
repnz
js
pop
aaa
xor
ss
fcoml
inc
push
jp
inc
push
faddl
aad
add
push
sub
mov
cmp
xchg
ds
jp
iret
dec
ds
je
in
push
aam
in
mov
leave
mov
imul
in
setns
sbb
in
jecxz
lds
cmp
jg
sahf
out
xchg
enter
jle
in
fwait
test
dec
sub
cmp
dec
test
adc
push
lret
aam
sbb
cmpsl
dec
sub
inc
sahf
lahf
in
lret
loop
lock
xor
fcompl
sahf
xchg
mov
add
push
int
add
jp
stc
xor
pop
loope
jbe
in
enter
mov
les
mov
dec
mov
ja
sub
je
push
sub
push
mov
stc
jmp
adc
pop
in
jle
sahf
pop
or
shl
cmp
hlt
enter
mov
lcall
pop
jbe
into
pop
outsl
mov
xor
aas
dec
lods
popf
jecxz
pushf
inc
shlb
lcall
push
mull
xchg
call
sbb
inc
mov
fcomip
flds
jb
aaa
sub
cltd
mov
xchg
ss
daa
pusha
mov
adc
or
mov
cwtl
popa
cltd
lret
cmc
es
jge
jle
sarl
xchg
push
stos
shll
xchg
adc
btc
imul
insb
or
jmp
stos
sbb
push
and
lods
ja
scas
sbb
testl
mov
loope
shr
adc
mov
cli
sub
cmc
and
pop
fs
bound
mov
jl
push
push
add
sub
rorl
hlt
fsubs
das
and
xchg
xlat
test
cmp
mov
mov
or
stos
sub
inc
shlb
data16
sbb
lret
roll
cmp
fldcw
fwait
pop
outsl
std
outsb
or
repz
cmpsl
cmpsb
push
push
les
gs
jno
jae
imul
add
pop
mov
rclb
sti
add
dec
xorl
not
jae
xlat
sub
adc
in
nop
and
push
jnp
add
movb
add
imul
lea
mov
fsubr
xchg
ja
popf
or
xchg
into
push
pop
ds
mov
popf
test
sub
inc
adc
mov
xchg
int
subl
fdiv
inc
mov
dec
jne
jo
out
fbld
pop
push
shrb
jae
mov
push
pushf
mov
je
pop
insb
mov
ret
push
out
mov
jbe
dec
in
cmpsl
dec
imul
mov
shlb
lret
into
and
jne
adc
test
push
movsb
loope
cmc
xchg
jbe
inc
out
aad
jnp
mov
imul
inc
arpl
call
hlt
inc
rcrl
in
imul
xor
add
ss
jge
mov
cltd
shrb
les
push
lret
xor
and
inc
out
jae
sahf
ja
arpl
jae,pt
mov
mov
call
sub
lock
pop
mov
mov
jle
loope
aad
push
aaa
scas
ret
aaa
mov
testl
cmc
mov
cld
and
orps
sahf
mov
iret
push
dec
popf
loopne,pn
rorb
shl
mov
mov
mov
sbbl
testb
loope
xchg
cmpsl
test
sub
pop
sub
fisttpl
jno
cmp
cmp
repnz
ficompl
sbb
cmp
mov
addl
cmp
outsl
imul
add
inc
cmpsl
call
jge
xor
outsl
lret
xor
sub
sahf
mov
xchg
aas
mov
xor
addl
ficoml
loop
ljmp
sbb
sti
fwait
xchg
jmp
outsb
nop
and
lret
sbb
jbe
mov
mov
out
into
jo
jmp
cwtl
add
push
mov
dec
dec
adc
or
mov
push
push
cmp
addr16
hlt
cltd
es
test
and
call
lret
jae
jno
or
addb
pop
es
rcr
add
stos
or
mov
je
adc
mov
dec
movsb
mov
add
outsb
gs
cs
jnp
lahf
xchg
add
xchg
in
cmp
test
imul
inc
jp
dec
or
jne
mov
outsl
mov
and
loopne
mov
lcall
cmp
push
mov
dec
cld
cmpsl
aad
mov
xor
mov
push
add
push
cmc
outsb
and
nop
mov
push
out
mov
fsubrp
sbb
test
pushf
fdivrp
enter
pop
push
iret
add
sbb
sbb
addr16
xor
insl
sub
jno
xlat
pop
mov
adc
bound
cld
ja
xchg
mov
daa
and
ds
xchg
mov
mov
pop
sahf
sub
rolb
aaa
cmp
stc
mov
cmp
lock
sbb
shl
ret
into
mov
imul
movsb
inc
dec
push
mov
xchg
in
into
pop
nop
xor
add
out
nop
and
test
fs
pushf
outsl
dec
mov
cmp
inc
mov
sub
adc
mov
jb
iret
mov
pushf
jns
shlb
push
sub
lret
sbb
push
je
fdivrs
aam
fstl
xlat
test
cmpsb
scas
lods
mov
xor
pop
aaa
add
mov
jl
add
test
jne
jge
cs
sub
mov
test
repnz
jecxz
jmp
mov
test
loop
jg
test
jmp
stc
out
unpcklps
loope
mov
movsb
xor
and
inc
mov
insl
jl
sahf
push
std
mov
cs
cli
popa
sub
jge
jle
jge
movsl
pop
mov
mov
xor
icebp
cmp
sarb
int3
xchg
add
scas
mov
xor
jl
push
jne
xchg
inc
icebp
test
bswap
sub
mov
rorl
push
cld
adc
xorb
fldl2t
daa
push
cmp
repz
jp
lock
in
imul
add
ds
adc
or
xchg
fisttpll
loopne
sti
jbe
cmp
fnsave
out
mov
lods
xor
sub
add
add
js
xchg
cmc
cmc
cmpsl
push
ror
decl
pop
jno
loop
mov
lea
sti
jecxz
pop
xor
xchg
push
push
push
cmp
iret
or
cmpl
dec
das
lcall
in
adc
mov
push
pushl
test
jle
pop
aam
arpl
test
movaps
scas
ret
das
test
in
pop
mov
popf
sbb
sbb
adc
mov
das
and
test
mov
add
negl
lret
push
pop
in
sahf
mov
outsb
jae
jns
fcom
rorl
fisubrl
aaa
sar
popf
pop
push
fsqrt
push
cli
mov
leave
mov
out
ds
add
fwait
xchg
xor
sbb
loopne
idivl
test
pop
fcmove
lock
sub
push
in
sub
fsubrs
jno
xor
mov
pop
jne
jns
and
repnz
fisubrs
adc
bound
in
ret
iret
or
fmuls
das
inc
inc
sub
add
cmp
sbb
lea
cs
imul
in
fidivrs
mov
icebp
inc
imul
and
fisttpll
push
es
cld
mov
pop
hlt
jg
lret
jmp
cmp
push
pop
jmp
mov
icebp
int3
lret
addb
pop
mov
cmp
dec
dec
jo
sub
jge
cmp
fincstp
xchg
pop
ja
inc
sbb
pause
inc
jae
sbb
xor
ds
daa
les
pop
popa
lea
dec
mull
add
bound
jnp
test
mov
jnp
jne
push
lds
stos
inc
push
shlb
cwtl
aad
or
xchg
sti
movsb
sub
pop
cmp
subl
dec
xlat
leave
adc
xlat
mov
mov
or
sub
lods
std
cmp
mov
rcrl
lods
pusha
lret
inc
out
cwtl
mulb
sbb
mov
inc
ljmp
pop
ffreep
and
pushl
xor
mov
sbb
cli
je
add
icebp
cmp
sti
insl
inc
insl
fwait
mov
pop
mov
mov
sbb
int3
or
pop
sbb
out
scas
inc
adc
xor
or
addl
inc
lcall
fistps
add
pop
mov
es
adc
call
adc
mov
fildll
add
ljmp
repnz
arpl
xor
gs
test
aad
or
insb
sbb
mov
sbb
scas
jg
push
sub
dec
test
inc
shlb
je
or
pop
nop
and
stos
jecxz
cmp
push
mov
adc
jno
mov
fwait
xor
mov
xor
jmp
xor
call
dec
out
les
mov
xchg
stos
mov
pop
rolb
movsb
adc
push
dec
aad
jp
rcrb
push
hlt
mov
sub
and
or
aas
dec
in
and
push
xor
mov
sbb
por
nop
out
lods
jg
lret
or
js
in
pop
inc
jg
pop
inc
cmp
pop
lods
and
hlt
mov
xchg
sbb
push
rorb
sub
cmp
jae
push
imull
lret
in
jp
ss
pop
popa
mov
leave
subl
pop
jl
mov
icebp
data16
ljmp
and
sbbl
push
out
mov
add
arpl
mov
pop
dec
call
pop
pop
sub
pop
jae
dec
sub
fdivrl
push
addr16
sbb
mov
rcll
dec
imul
movaps
sub
leave
sub
dec
ret
mov
aas
jg
test
rcl
shrb
mov
incb
xchg
add
sbb
inc
out
xor
fcmovbe
and
cli
mov
imul
xchg
add
cmp
push
or
mov
out
pop
cmpsl
inc
sbb
loopne
ss
inc
test
cltd
and
or
push
sbbb
jns
stc
adc
jno
push
and
add
lock
fwait
aad
jecxz
push
insb
jecxz
in
lea
rorl
cmp
inc
push
loope
mov
adc
aaa
adc
cmp
or
mov
and
mov
sbb
xor
int
mov
rcrb
xchg
mov
and
inc
or
in
sbb
jmp
out
test
jb
aas
xchg
xor
mov
int3
sub
dec
in
jmp
test
pop
clc
adc
jg
pop
sbb
xchg
adc
sbb
mov
adc
inc
lock
mov
mov
nop
dec
imul
push
or
sahf
pusha
lahf
call
ds
push
sub
push
cli
inc
aaa
mov
add
jge
cmp
add
js,pt
nop
jle
cmp
fnsave
jb
sub
ja
or
adc
or
loope
push
xor
aaa
lret
inc
ja
jns
sub
push
fldpi
sbb
lods
pop
and
in
int
mov
xor
imul
add
scas
push
dec
xchg
sub
inc
shrl
mov
rclb
test
mov
scas
int3
add
or
ds
ds
out
adc
movntps
push
xchg
xor
xor
sbb
mov
mov
jmp
push
nop
mov
ret
out
ljmp
lds
out
pop
mov
ret
clc
pop
xor
and
pop
jp
mov
out
xor
xlat
sbb
pop
pop
pop
push
fs
sub
mov
lods
pop
inc
jb
pop
mov
jg
cltd
fs
cwtl
lcall
shll
inc
inc
pusha
push
iret
cmp
add
fwait
das
stos
jp
mov
test
jle
sarl
or
andb
out
ja
imul
popf
mov
dec
out
pop
mov
mov
xchg
push
stc
sub
mov
mov
daa
cmpsb
ljmp
xchg
fucomip
cmpsl
sbb
daa
push
push
or
imul
xchg
in
dec
sub
ds
push
jge
sbb
add
jge
mov
lock
int3
nop
mov
pop
cmpsl
sbb
lret
in
mov
or
mov
mov
imul
cld
pop
dec
out
mov
push
out
mov
roll
and
jecxz
mov
xor
push
call
inc
dec
xchg
cmp
and
insl
pop
pop
ds
sbb
pop
sbb
or
test
mov
in
outsb
ja
aas
sub
outsl
into
mov
stc
sahf
inc
mov
or
repnz
push
xor
inc
cmp
aad
xchg
sbb
shrb
adc
sahf
xor
loop
or
push
fstl
or
js
cmc
lcall
push
imul
lcallw
dec
cmp
leave
hlt
add
iret
xor
mov
rclb
adc
cmp
sbb
ljmp
lret
ljmp
int3
cld
lea
popf
bound
loop
pop
sub
cmp
push
inc
sbb
stos
mov
aam
daa
or
lods
faddl
sbb
dec
mov
mov
shl
idiv
in
rcrb
lret
add
or
push
hlt
andl
fists
negl
inc
push
outsb
xchg
out
into
push
lahf
xor
push
into
mov
mov
fisttpl
jae
leave
push
and
adc
inc
push
jl
jbe
xchg
adc
xchg
filds
pushf
outsl
xor
mov
jb
outsb
mov
mov
cmp
insb
mov
in
jns
ret
inc
incl
subl
adc
and
js
xchg
sub
movsl
out
inc
xor
mov
or
repnz
fadds
xchg
insl
addr16
scas
std
and
xchg
ljmp
cld
push
lea
in
cli
mov
cwtl
roll
push
dec
add
outsl
and
or
popf
jp
mov
xor
clc
xor
gs
sub
xchg
jle
fidivrs
out
pop
xlat
sti
mov
gs
xor
inc
imul
mov
lock
sbb
cltd
inc
add
sahf
out
pop
cmp
and
in
les
jbe
cmp
adc
mov
fcompl
cmc
dec
xchg
add
std
cld
xchg
daa
das
aad
mov
les
pop
rcr
dec
sbb
shlb
sbb
in
adc
add
bound
cmc
sarb
fnsetpm(287
shr
jne
sti
cmp
arpl
je
dec
lret
imul
aad
add
cwtl
or
xor
cmpl
sbb
dec
les
inc
adc
and
cld
cli
jmp
insl
sub
je
jnp
mov
cld
pop
push
push
inc
and
xchg
dec
out
loope
les
mov
aaa
sbb
sti
push
std
das
xchg
xlat
xor
mov
adc
enter
in
cld
test
add
push
xor
mov
out
jno
push
out
lret
test
sbb
leave
loop
xor
mov
xchg
push
sbb
and
std
cmp
out
dec
in
xchg
cmp
push
mov
xor
inc
repnz
pop
bound
jne
sub
incl
in
sub
dec
xor
sub
mov
sti
cltd
sahf
xchg
push
imul
es
cmp
mov
or
or
mov
subb
mov
fdivrl
pop
mov
in
lods
lods
scas
mov
add
pushf
imul
ja
lods
adc
push
dec
insb
xlat
in
rclb
cmp
pusha
sbb
scas
repz
sub
mov
pop
scas
sbb
nop
shlb
inc
mov
aaa
push
outsb
jns
mov
movsb
out
mov
aam
repz
in
adc
popf
sbbl
int3
mov
cmp
push
dec
mov
lds
lods
jp
sub
sbb
inc
insb
add
jne
pop
test
adc
jmp
lea
add
lock
in
jne
ja
mov
adc
mov
cmc
pop
aad
lock
in
mov
shll
mov
pop
aad
jo
dec
cmp
adc
inc
not
mov
stos
das
mov
cmpsl
pop
mov
and
push
ficompl
dec
and
ret
adcb
fwait
stos
mov
mov
sub
add
cld
adc
pop
and
mov
cld
mov
je
inc
mov
mov
add
test
inc
pop
lret
jle
out
mov
xchg
jg
fldenv
xor
daa
sbb
xchg
xor
shrl
mov
test
lret
cld
dec
dec
addr16
pop
adcl
cmp
aas
imul
rorl
and
clc
sub
scas
push
pop
jno
xor
xchg
test
int3
push
sbb
push
cltd
js
and
in
enter
jns
push
and
sbb
mov
cmp
out
mov
pop
ret
lcall
into
sti
outsb
adc
add
add
les
hlt
cltd
stos
xor
das
sahf
int
fs
push
les
in
sbb
sub
xchg
std
push
jle
lret
pop
sahf
cmp
repz
std
idivb
imulb
add
in
cmpb
clc
dec
fidivs
out
mov
mov
sbb
ret
dec
inc
jo
xor
lods
adc
ja
int
psllq
jne
and
sub
cld
shll
pop
inc
ffreep
cmp
fisttpll
dec
mov
lock
outsb
jbe
or
jle
or
lea
push
pop
outsb
dec
jmp
cmp
pop
movb
enter
je
xor
mov
sbb
jl
sbb
mov
fimull
cmpsl
scas
sub
enter
adc
in
ss
in
adc
fdivs
outsl
leave
jns
or
cmpsl
cmp
xchg
inc
imul
frstor
add
and
js
jno
outsl
and
imul
xor
add
orl
cmp
lds
das
int
cltd
mov
jl
bound
ret
andb
jge
push
and
cwtl
mov
call
cs
mov
xor
sti
imulb
jns
adc
sub
xor
incl
xchg
or
mov
and
and
ljmp
dec
push
add
stos
or
xor
sub
stc
call
scas
sbb
and
or
into
cmp
gs
sub
popa
sub
pop
add
push
xchg
push
dec
dec
cmp
dec
jo
enter
dec
xchg
loopne
rorb
push
inc
cmpsl
loopne
adc
jmp
mov
test
subl
repz
pop
mov
cmp
pop
inc
sub
les
imul
pushf
cmpsb
jle
adc
xchg
aaa
push
cli
xchg
int3
loopne
pop
mov
add
test
push
xlat
sbb
jmp
repz
mov
mov
sbb
add
ds
and
xchg
inc
fcom
xor
or
sub
inc
and
in
xchg
xchg
loopne
testl
ja
inc
notb
dec
or
insl
incb
in
adc
xor
jecxz
cmp
xchg
push
das
bound
in
stos
sbbl
dec
xchg
push
imul
pusha
pop
mov
jmp
aas
jne
sub
filds
xchg
and
lock
inc
cmp
sub
adc
ljmp
nop
pop
pop
lcall
mov
add
scas
in
inc
or
jno
call
imul
xor
dec
or
cmpsl
mov
add
push
add
loop
and
mov
scas
fstp
lods
in
inc
or
imul
outsb
push
jp
add
shr
rcl
das
lea
push
or
icebp
test
testb
push
lock
sub
sub
pop
out
popf
mov
add
in
aam
sbb
push
add
mov
std
incb
std
sbb
mov
xchg
mov
mov
xor
or
cltd
dec
xlat
sub
mov
dec
ds
mov
popa
std
loop
xlat
push
pop
sub
ret
pop
js
jb
inc
dec
out
test
sbb
enter
jp
or
dec
iret
adc
addr16
fisubl
adc
pop
lahf
sar
clc
add
jae
mov
and
mov
push
lea
out
cltd
adc
xchg
dec
inc
popf
loop
lock
mov
mov
push
in
jns
jg
iret
fldt
adc
gs
negb
sbb
push
xor
repz
jle
ss
in
add
aas
lret
or
cwtl
mov
je
xchg
movsl
inc
adc
cmc
mov
in
xchg
push
sbb
jl
les
rolb
mov
ss
loop
ljmp
loop
inc
inc
test
adc
in
add
in
or
mov
xchg
insl
int3
repz
xor
fcomps
pusha
add
inc
mov
or
aad
ret
jns
fmulp
movsb
gs
movb
loopne
dec
in
xchg
loop
loop
mov
jne
divb
sti
cmpsl
subb
mov
fcmove
mov
inc
pop
jns
jge
cli
popa
out
lds
cmc
call
and
cmp
insl
adc
iret
divb
xor
or
hlt
mov
or
int
or
inc
dec
xchg
std
icebp
mov
mov
shl
loopne,pn
decl
mov
mov
add
sub
sbb
dec
adc
aad
and
scas
mov
les
push
in
pop
out
or
inc
or
inc
pop
ret
sbb
pop
out
jmp
lret
xchg
enter
inc
jne
movsb
insl
add
sti
rclb
mov
jb
ljmp
sahf
push
xchg
sub
rcrb
jl
add
jmp
pop
ret
shlb
mov
push
or
inc
in
and
mov
dec
addr16
cld
les
push
sbb
cmp
mov
stos
cmp
xchg
test
xchg
mov
or
sub
lcall
cmpl
jle
xchg
xchg
aad
pushf
push
xor
out
and
in
int
sub
jnp
xor
test
mov
and
pushf
cs
push
inc
or
icebp
loop
inc
je
or
outsb
popa
sbb
push
or
push
div
fbld
test
clc
out
fiadds
lock
mov
cmp
gs
lock
adc
dec
mov
int3
jne
push
inc
popa
or
movsb
sbb
fwait
aad
lahf
lahf
jae
cmpsb
int
mov
cmp
clc
fcmove
sbb
loope
lds
xor
jbe
mov
push
cmc
mov
pop
into
pop
adc
and
xchg
sub
jecxz
gs
adc
cmp
repnz
jne
imul
xchg
int3
ret
and
mov
test
stc
fstpt
stc
mov
bound
je
inc
testl
popa
lock
xchg
dec
dec
es
push
test
dec
cmpsl
mov
icebp
mov
popf
sub
dec
pusha
rcrb
push
stos
push
in
sbb
mov
mov
mov
out
es
insb
jge
sub
roll
repz
adc
jp
mull
jle
subb
mov
lret
pop
cltd
fsubrl
cltd
adc
cmp
mov
push
fdivl
ret
popf
rcrb
fcomp
dec
sbb
rolb
mov
xchg
jno
ja
mov
jbe
xor
repz
hlt
cmp
mov
adc
and
aam
fistps
adc
aad
lret
mov
mov
scas
inc
pop
dec
mov
dec
gs
loop
adc
cmp
stc
and
mov
cmpsb
gs
imul
lods
add
xchg
dec
mov
mov
mov
inc
push
fmuls
mov
in
cld
les
or
les
nop
fistps
or
aam
cmp
jmp
cmp
repz
mov
scas
test
xchg
imul
icebp
sbb
xchg
cmpsl
hlt
sub
add
sub
inc
enter
dec
sub
mov
dec
cmpb
ljmp
inc
out
pop
adc
push
dec
mov
mov
sarb
les
dec
inc
and
orb
fiaddl
push
pusha
cwtl
sub
jns
mov
lahf
dec
mov
sub
or
add
ljmp
icebp
fstpl
mov
sbb
jns
mov
inc
ret
jb
adc
sbb
jmp
cltd
imul
lods
pop
lds
mov
mov
mov
ffree
mov
adc
push
push
arpl
and
push
push
fisttpll
jge
inc
cmc
sbb
sahf
mov
stc
add
xor
int3
push
jbe
clc
or
mov
hlt
adc
xchg
mov
fnstsw
mov
add
loopne
pop
pop
inc
mov
les
mov
rol
lret
sbb
rorl
and
bound
mov
cltd
std
sub
repnz
add
lods
dec
dec
aad
cmp
mov
xchg
add
add
push
inc
inc
daa
mov
mov
mov
mov
stc
dec
dec
test
xchg
cmp
inc
jb
and
and
xor
xchg
inc
dec
push
sub
pop
mov
mul
mov
dec
addr16
les
mov
jmp
subb
adc
fdivrs
jno
dec
test
test
clc
shr
cmc
addr16
aaa
push
sahf
popf
hlt
push
jecxz
xchg
ficoms
ds
push
xor
inc
add
hlt
mov
mov
in
test
push
sub
cmp
data16
inc
and
rcrb
mov
cmp
jnp
repz
jg
fdivrl
cmp
pop
xor
pop
mov
or
mov
sbb
aam
mov
in
int3
mov
sbb
clc
mov
mov
add
lods
xchg
sub
aaa
fcoml
call
cmp
adc
ja
icebp
ljmp
xor
add
lea
xor
arpl
scas
into
ret
xchg
outsl
push
mov
mov
and
stc
jnp
sti
dec
fcoml
in
xchg
aam
pop
stos
inc
pop
insl
add
leave
push
push
or
nopl
cmp
adc
into
xor
icebp
aam
lahf
loope
fdivl
mov
inc
pop
test
daa
pusha
call
and
mov
sub
pop
subl
or
dec
mov
lods
xchg
in
gs
sub
sbb
xchg
xchg
flds
push
lsl
adc
jg
adc
or
pop
data16
or
ret
cmc
cmpsl
sqrtps
xchg
icebp
test
inc
stc
sub
jp
aas
lcall
arpl
jne
inc
add
scas
jbe
mov
shlb
shr
lret
xor
push
mov
imul
sbb
mov
vpavgw
data16
dec
sti
hlt
out
bound
inc
mov
adc
xchg
add
push
scas
testl
shrl
sbb
xlat
stos
int3
mov
call
pusha
add
int3
shlb
sbb
lret
xchg
js
mov
mov
sub
lods
les
xchg
mov
fsub
int3
cmp
sub
push
addr16
sbb
sub
popf
xor
test
adc
popa
testl
adc
cwtl
sbb
jne
xor
int3
jmp
lods
imul
lret
dec
push
push
lret
in
fists
xlat
sbbl
xlat
mov
push
stos
arpl
mov
add
std
lods
movsb
scas
int
lock
test
adc
loope
scas
cmp
jge
jmp
dec
fldcw
cmp
lock
out
or
imul
sti
mov
jae
mov
xlat
sub
fcoml
jo
outsl
add
mov
mov
mov
push
dec
lahf
shlb
lret
add
scas
mov
nop
jmp
cmp
outsl
jp
shr
push
outsb
pop
int3
pop
jno
das
insb
push
adc
fisubrs
inc
cmp
punpckhwd
inc
pop
xorl
add
pop
lods
xor
adc
fwait
or
cmc
xchg
pushf
scas
testl
daa
fdivs
inc
jno
fdivrl
dec
lods
adc
rolb
dec
je
dec
push
addl
cwtl
push
adc
ret
insb
sub
hlt
cmp
hlt
mov
mov
mov
sub
sti
loopne
xchg
or
dec
and
addr16
add
inc
and
int
cltd
sahf
aaa
cmpsb
adc
xchg
aaa
cmc
mov
mov
rcrb
loope
jl
andl
sbb
rolb
mov
push
and
jmp
dec
test
shlb
adc
push
pop
aaa
je
addl
fsubr
stos
movsb
mov
xchg
pop
sub
add
lret
addr16
xchg
cmpsl
pushf
push
mov
cmp
inc
push
idivl
sti
add
adc
jnp
ljmp
jle
scas
popa
xchg
repnz
jmp
dec
sbb
mov
scas
stc
xchg
js
repnz
sbb
push
add
mov
aam
and
xor
out
ljmp
pop
loope
jmp
push
mov
ffree
sub
loope
inc
sub
adc
xor
cmp
pop
or
and
lds
mov
push
lcall
imul
xchg
enter
subl
jns
lcall
sbbl
enter
enter
jl
in
ljmp
out
xlat
pop
filds
xor
out
dec
ret
add
sub
push
push
pusha
mov
jg
stos
rorb
cmp
mov
mov
int
cmp
iret
mov
and
mov
pop
jo
loopne
ja
gs
inc
cmc
add
popa
sbb
das
ljmp
pop
fiadds
lds
lahf
call
sbb
insl
lds
or
pop
int3
daa
adc
jg
sbb
outsl
sbb
push
dec
or
das
sbb
xor
or
mov
jnp
in
pop
jecxz
data16
inc
sub
loope
push
rcrl
push
pop
dec
sti
pop
mov
or
inc
dec
mov
push
dec
jae
mov
test
ljmp
sbb
fwait
enter
sbb
call
xor
pop
sub
shll
inc
inc
mov
pop
dec
rcll
aas
pop
jg
jecxz
sub
jbe
add
rcrl
push
xchg
pop
std
repz
test
mov
push
aad
mov
pusha
or
lods
ss
in
repz
mov
andb
imul
sbb
adc
xchg
insl
inc
push
mov
pop
aas
fucomip
mov
xchg
les
inc
pop
fsubs
or
push
repnz
sbb
xor
lahf
and
movsb
aas
or
xchg
inc
pop
lret
sub
dec
jle
sbb
xchg
lds
outsl
mov
inc
shl
and
rolb
sahf
les
push
mov
xchg
push
xchg
and
in
cvtpi2ps
int
cmpsl
adc
enter
sbb
sub
out
jle
mov
addr16
push
into
push
cli
push
std
stos
xor
jb
and
sub
in
xchg
xchg
lcall
int3
nop
mov
ss
out
inc
jecxz
add
pop
rcrl
cmp
inc
mov
add
fdivrs
xchg
push
test
or
sub
call
ficomps
mov
xchg
inc
cmp
sub
push
aas
test
test
fwait
sti
adc
sub
mov
xor
fs
inc
popa
sbb
out
stos
xorb
pop
xchg
lret
cmpsb
repnz
aam
and
mov
dec
sub
pop
jmp
sbb
fsubp
or
movsb
sub
nop
adc
jg
sub
xchg
movl
mov
mov
fcomps
adc
push
xlat
iret
sub
push
sbb
shlb
inc
aad
jbe
adc
cmpsb
int3
inc
add
popa
or
test
sahf
movd
mov
int3
push
adc
mull
mov
sbb
xchg
mov
mov
lods
scas
lds
and
push
sbb
lock
rol
pushf
pop
or
sbb
jo
jb
cmpsb
xchg
subb
add
lahf
js
mov
aam
hlt
mov
mov
pusha
and
loopne
outsb
xor
leave
int
outsb
roll
dec
xor
arpl
adc
inc
xchg
dec
xor
int
test
push
or
mov
mov
xor
out
or
ljmp
jl
les
out
xchg
pusha
push
fmull
dec
aam
jne
test
fisubrl
and
es
dec
mov
or
movsb
pop
jmp
in
dec
mul
pop
lea
jmp
mov
jae
imul
push
pop
std
movhps
xchg
scas
vmaxpd
inc
out
cmp
daa
jl
dec
sbb
movsl
mov
push
fwait
push
lret
fdivrs
adc
shll
dec
jno
dec
insb
jg
jns
in
pop
jns,pt
outsb
jecxz
xchg
out
pushf
sbb
bound
dec
fdivl
pop
sbb
adc
sub
stos
std
dec
jns
lret
popa
and
sbb
cmpsl
rorb
sub
das
scas
sub
sahf
in
sub
jge
pop
in
pop
addr16
mov
push
ja
bound
insb
inc
add
inc
jge
jbe
lahf
sbb
popa
into
lahf
das
sub
icebp
cli
sarb
adc
inc
mov
mov
decl
add
sbb
inc
add
mov
push
outsl
jae
jnp
rolb
in
push
push
mov
jne
popa
and
out
test
cmp
inc
and
sbb
mov
sbb
push
rorl
mov
aad
cmp
cltd
dec
mov
dec
inc
dec
and
cmp
fdivr
mov
push
pushf
pop
out
adcl
cmpsb
in
and
inc
hlt
sub
std
roll
jbe
sub
xchg
sub
xchg
cmp
aaa
mov
mov
inc
mov
xchg
mov
fiaddl
shlb
or
push
mov
mov
ret
push
cli
rclb
into
dec
push
cmp
stc
daa
xor
push
xor
sbb
push
ja
loop
push
and
shrb
or
add
add
imul
lret
shlb
popa
jecxz
push
stos
ljmp
fildl
insl
fld
xchg
test
xchg
jge
or
cmpsl
pop
mov
aam
test
adc
inc
loopne
into
repz
rcl
sub
loope
push
sbb
mov
push
inc
xchg
gs
mov
mov
or
inc
mov
ss
inc
arpl
add
xchg
ud0
imul
cmp
into
cmp
outsl
jle
mov
dec
lret
jnp
cmp
cmp
ret
mov
fsubp
jb
pop
std
lock
xchg
xor
fcom
mov
out
and
movsb
movsb
arpl
push
leave
mov
sbb
cmpsb
xor
sub
cli
dec
cmc
je
ror
sbb
cmpl
sbb
xorl
add
dec
and
test
daa
lret
imul
insl
cwtl
xchg
cmpsl
hlt
pop
sbb
arpl
sarl
or
pop
lods
iret
shrb
hlt
sbb
ret
lea
sti
push
xor
enter
outsb
ret
ss
fstpl
pop
sub
mov
dec
inc
mov
jne
mulb
jb
aaa
in
mov
mov
adc
mov
je
in
lahf
push
inc
xor
mov
call
les
lret
sarb
andl
dec
xchg
les
add
inc
hlt
into
cmp
vmread
jae
inc
scas
cltd
in
mov
testl
stc
fsubl
push
xchg
test
jns
or
adc
lcall
out
inc
pop
gs
inc
loop
movsl
sar
scas
mov
notb
sub
enter
pop
test
rcr
rclb
inc
mov
rorl
mov
and
sbb
fs
pushf
popf
add
stos
loopne
xchg
jmp
adc
out
insb
adc
jb
push
sbb
ss
sub
in
clc
mov
push
dec
push
jne
int
xchg
xlat
mov
enter
decl
in
add
clc
pop
loopne
cmp
lock
pushf
cli
xorl
xchg
div
insl
ret
je
fwait
xor
pushf
mov
dec
hlt
sbb
out
push
rol
out
fldcw
adc
and
adc
lods
test
inc
insb
test
add
out
dec
out
pop
cli
inc
inc
jnp,pn
mov
imul
adc
mov
sub
sub
sub
pop
repnz
ret
mov
into
push
ret
int3
inc
mov
lds
ljmpw
ror
add
jae
data16
dec
cltd
xor
es
iret
jmp
mov
jo
out
add
aad
mov
sbb
cmp
je
jo
or
lods
and
push
xchg
inc
incl
sbbl
cmp
mov
addb
pop
push
pop
jmp
mov
decl
mov
adcb
inc
gs
sbb
mov
mov
xchg
dec
in
cmpsb
push
and
sub
popf
jge
inc
rcll
pop
insl
imul
loop
pop
xchg
or
jns
pop
jecxz
mov
subb
and
mov
lds
nop
outsl
and
or
dec
fsubp
push
inc
dec
insl
leave
dec
sub
mov
lock
ret
fistpl
movsl
stos
mov
sub
addr16
insl
dec
dec
pop
leave
pushf
out
ret
xor
int
jge
ljmp
and
push
or
or
shll
and
sbb
dec
cmpb
adc
testb
test
jns
adc
add
adc
pop
cmpsb
push
inc
cltd
test
add
pop
jae
dec
stos
and
mov
sub
xchg
add
mov
addr16
lods
je
lcall
xor
gs
dec
sti
jle
push
cmpb
inc
add
cmp
jle
adc
vpmacssdql
call
xchg
mov
cltd
data16
testb
mov
es
ror
pop
mov
test
int
js
dec
pop
xchg
jne
je
sub
xchg
aam
ret
xlat
mov
int3
sub
mov
rcrb
jnp
push
in
dec
mov
in
add
mov
lahf
out
xchg
jecxz
sub
mov
jl
movsl
mov
out
cmp
fisttps
stc
dec
sbb
pop
xchg
adc
adc
and
mov
insb
sbb
push
sbb
in
push
xor
negl
add
adc
jns
int
dec
push
aas
mulps
mov
fists
jb
push
dec
cmp
pop
xor
lods
mov
lods
inc
daa
and
shl
jge
sub
clc
gs
and
out
ficoml
fisttps
lods
inc
repnz
enter
jle
mov
stos
push
or
lret
arpl
xor
fnstcw
scas
notl
adc
mov
ds
cs
sbb
pop
mov
and
in
in
dec
lds
or
in
adc
inc
das
jb
mov
mov
pop
ja
jmp
inc
es
ret
lds
adc
sarb
add
cmp
mov
lcall
sub
sbb
and
jp
cld
mov
cmp
ret
lret
xchg
dec
jo
and
ljmp
inc
jno
inc
sbbl
popf
es
dec
int
stos
lret
mov
adc
push
call
dec
pop
mov
push
pop
xchg
fbld
mov
loop
sbb
popa
or
adc
or
xchg
sub
loop
add
mov
mov
mov
stos
xorl
addr16
ror
cmpb
sub
push
xor
repnz
popf
iret
fs
sub
test
push
xchg
ds
mov
stc
in
mov
lods
loop
xlat
std
cld
mov
xchg
gs
push
outsb
inc
ret
sub
dec
loop
mov
cs
pushl
sub
dec
push
lock
fnsave
xchg
mov
jno
sbb
js
jmp
stos
pop
jns
mov
fcompl
sbb
xchg
mov
aas
pop
cmc
sbbl
mov
cli
bound
scas
mov
es
inc
std
push
push
clc
push
xchg
lods
je
mov
repz
push
jbe
lods
cld
sub
jge
lahf
and
gs
repnz
mov
lea
sbb
aas
adc
add
neg
cli
sahf
add
popf
and
mov
mov
iret
jnp
scas
fdivrl
ds
cmpsb
scas
jmp
incb
aam
mov
xchg
or
aaa
insl
mov
xchg
andl
sbb
mov
adc
xor
xchg
push
sarb
adc
addr16
fistl
xchg
push
mov
jnp
mov
mov
jae
fimull
push
dec
xchg
cmp
cmc
jmp
lea
jmp
cmp
imul
cwtl
test
sbb
ja,pt
jns
clc
push
xchg
repnz
mov
add
cld
sbbl
outsl
aam
dec
pop
mov
or
cwtl
fstp
lods
nop
mov
mov
xchg
fsub
xor
pushf
xchg
popf
lea
push
dec
mov
mov
cmp
sub
outsl
orl
cmc
outsl
outsb
lcall
or
shl
jnp
mov
mov
icebp
cmp
inc
xor
pop
enter
jp
imul
jne
enter
nop
in
mov
push
arpl
fxch
stos
arpl
push
aaa
mov
xchg
adc
adc
adc
int
mov
dec
lret
mov
cmc
or
scas
ljmp
aad
dec
testl
sub
mov
es
sbb
dec
in
lds
push
cmpsb
out
or
sbb
lcallw
stos
inc
repz
fwait
loop
out
sub
inc
mov
nop
stc
cld
movaps
outsl
jnp
mov
insl
addr16
xchg
je
adc
dec
fildl
jle
add
lret
push
cmp
push
push
jne
jle,pt
xor
sub
mov
inc
aad
addr16
lods
out
push
mov
push
xor
inc
jns
jle
jnp
cld
mov
xorl
mov
in
or
mov
xor
cmp
dec
add
cld
gs
aas
ret
dec
mov
cmc
push
lea
sbb
lcall
cmc
fbld
and
fs
sbb
add
add
je
or
iret
jmp
ja
fwait
xor
pusha
in
mov
sub
xor
mov
jbe
loop
dec
imul
dec
xor
mov
sbb
jecxz
icebp
push
push
ss
sub
stos
fbld
and
stc
push
xchg
rcrl
shrb
inc
push
lcall
enter
in
divb
clc
stos
in
mov
dec
push
inc
push
out
roll
jbe
dec
std
push
cmc
dec
push
jecxz
sub
lcall
out
stc
mov
push
ret
adc
fwait
rcll
cwtl
xchg
xchg
mov
jmp
pop
xchg
jnp
adc
daa
sbb
scas
lds
mov
repnz
or
xor
dec
pop
jb
xchg
or
pop
jnp,pn
or
or
pop
pop
sahf
inc
jmp
push
mov
repnz
subl
testl
add
mov
std
out
cmp
dec
testl
inc
mov
xor
add
jle
pop
rorb
negl
and
mov
outsl
mul
ficoms
sbb
jns
sub
adcl
aaa
addr16
insb
pop
mov
test
sub
andl
push
xor
cmp
movsb
xor
outsl
adc
int
and
js
cmp
push
rorl
jl
fildll
pushf
inc
gs
imul
and
sub
out
dec
sahf
out
inc
mov
popl
mov
pop
xchg
pop
mov
xor
cmp
add
inc
jo
push
pop
xlat
mov
adc
hlt
mov
pushf
js
call
pushf
ljmp
and
push
mov
mov
stc
mov
or
xor
xor
or
cmp
clc
push
lock
jmp
push
mov
testl
jecxz
pop
inc
std
es
xlat
repnz
popl
mov
aas
in
and
jg
xor
sahf
ss
sub
add
mov
ficomps
xchg
add
fistps
outsb
jp
ja
lret
xchg
xchg
out
in
dec
pop
sbb
outsl
sub
orl
sbb
push
add
mov
aam
ret
bound
daa
jecxz
fistpl
repnz
mov
sbb
or
or
xchg
loopne
out
sub
mov
push
sahf
pop
jle
cmpsb
popa
fidivs
insb
scas
xor
lds
je
in
aam
jp
sub
or
add
iret
mov
aam
push
mov
dec
mov
mov
jnp
rcr
out
cmp
push
jbe
xchg
lds
es
stos
xor
or
les
sbb
sub
hlt
and
mov
popf
fstp
rcrl
fwait
mov
lret
xor
outsb
pop
ret
mov
repnz
adc
jmp
pop
or
and
mov
xchg
mov
mov
mov
je
lods
outsb
mov
hlt
ds
out
pop
xchg
enter
adc
xchg
push
out
sub
ret
mov
xor
mov
mov
shrl
pop
daa
div
in
gs
imul
pusha
fwait
jp
sub
scas
es
pop
mov
xchg
in
pushl
jae
data16
xchg
xchg
cmpsb
push
cmpsl
inc
sub
mov
iret
out
lods
mov
jge
adc
loope
in
dec
jo
inc
jg
idivb
mov
xchg
or
mov
fmull
mov
fwait
imul
inc
cmp
stos
stos
xor
ret
push
mov
into
lods
insb
ja
and
xchg
mov
mov
mov
movsl
mov
sbb
jbe
xlat
imul
lock
or
addb
jnp
mov
cmc
jo
jns
ror
add
in
das
imul
scas
fists
inc
pop
pop
stos
add
hlt
mov
pop
es
push
mov
xchg
adc
ret
test
xchg
pop
pop
mov
dec
in
cmp
fnstsw
out
xor
jmp
mov
inc
daa
pop
xor
in
cmp
add
sti
inc
mov
add
xor
cli
sbb
sub
loopne
lahf
mov
lea
push
das
out
mov
pop
aam
mov
cwtl
int3
sub
ret
fsubr
pop
xor
xchg
mov
test
lock
outsl
pop
js
add
cmp
jo
cmc
inc
scas
and
daa
add
bound
loopne,pt
sub
pop
gs
sbb
pop
fisubl
mov
adcl
add
fs
xchg
push
adc
fstps
jno
cli
in
int
cltd
sub
push
lds
xchg
mov
addr16
cmc
lds
ss
pusha
jmp
mov
and
push
cmc
mov
notl
cmpsl
pop
fcmovb
push
xlat
mov
push
pusha
push
xor
mov
mov
and
mov
or
mov
push
fadds
or
push
mov
ret
cmp
pop
dec
push
cld
or
fcmovne
adcb
lods
mov
dec
cmp
arpl
mov
pop
stos
imul
div
ljmp
dec
lahf
lea
lret
test
rcll
jg
dec
pusha
jecxz
push
fwait
aas
into
push
jle
add
mov
aam
cmp
insb
fmull
sbb
adcb
pop
aad
adc
and
sahf
xchg
sti
dec
and
mov
xor
mov
das
sub
adc
xor
adc
jmp
lret
cmp
xchg
xor
sub
add
mov
add
addr16
xor
cltd
scas
out
fwait
pop
aaa
cmp
cld
sub
xchg
daa
or
push
sub
or
lock
mov
rcrb
ret
lds
mov
xor
jmp
mov
lds
outsl
xlat
fiaddl
hlt
cmp
mov
ja
std
mov
nop
dec
xor
and
fdivr
dec
pop
jmp
mov
jmp
ja
clc
xor
sub
mov
icebp
inc
and
scas
in
mov
fcmovu
push
sub
sbb
rol
fwait
outsb
xchg
mov
sarl
mov
sbb
sbb
jmp
inc
inc
int
popf
shlb
dec
into
mov
sti
das
in
push
push
sti
inc
dec
cmp
imul
cwtl
jmp
mov
xchg
jl
gs
dec
add
jne
sub
mov
push
lahf
cmp
jo
andb
jnp
sbb
inc
or
mov
fwait
leave
es
pop
add
dec
dec
movsl
xchg
fimull
jp
xchg
sub
push
add
mov
add
mov
dec
arpl
sub
cmp
div
push
add
pop
les
negl
out
out
xor
or
sbb
push
sub
xchg
insl
loope
sti
lods
jns
fsubr
adc
lahf
outsl
aam
jno
fbstp
mov
pushw
aas
cmpsb
xchg
dec
das
imul
lea
adc
pop
ret
xor
dec
fwait
dec
pop
das
mov
mov
test
mov
sti
imul
or
pop
xor
sbbl
lods
stc
mov
arpl
and
jg
push
es
fidivrl
movsb
test
call
cmp
in
imul
test
xchg
in
std
sar
outsb
test
leave
xor
shll
fadd
popa
or
pop
jge
shrl
gs
stos
pop
jb
addb
std
jae
jle
xchg
add
cmpsl
mov
mov
push
sub
cwtl
jmp
iret
cmpb
loop
jo
cmc
loope
mov
pop
adc
add
xchg
adc
push
add
dec
iret
xor
pop
sbb
bound
das
fisubrl
xor
repnz
arpl
pop
cmp
pop
stc
test
fdivrp
in
jne
cmp
pop
out
mull
cmpsl
cld
repz
lret
lock
jmp
test
gs
shll
pusha
push
outsl
push
xchg
and
imul
add
cmpsb
or
push
push
sub
fldt
pop
pop
rcll
sbb
xor
pop
cmpsl
inc
lcall
jae
push
sti
test
int
clc
in
xchg
mov
sti
aas
or
push
mov
fmuls
mov
lcall
aam
nop
lods
add
data16
jmp
inc
inc
adc
and
movb
lret
aas
out
and
dec
inc
fdiv
adc
pop
fldcw
pop
enter
push
dec
data16
sub
jle
das
xor
fsubp
push
sbb
mov
icebp
cmp
ret
cli
mov
fdiv
inc
or
loop
mov
cmpps
pushf
jae
ror
enter
dec
mov
mov
push
jns
stos
call
loop
sub
imul
mov
xor
jno
jno
lock
roll
mov
dec
mov
fsubr
dec
hlt
xchg
mov
in
cltd
pop
bound
cmpsb
imul
inc
movsb
in
in
or
inc
aam
xchg
outsb
add
pusha
leave
insb
subl
add
mov
mov
pop
ret
cmp
stos
insl
xor
ficoml
cli
loop
adc
xor
lret
cmpl
shrb
mov
push
out
xchg
std
or
mov
pop
push
sar
mov
and
test
les
dec
aad
daa
stc
fst
jmp
pusha
sub
out
fmulp
inc
cmp
outsb
fistps
cmp
fnstsw
push
cwtl
jp
push
inc
imul
clc
mov
mov
xor
pop
movsb
sub
into
mov
pop
orb
cmp
jae
sub
adc
hlt
test
push
push
into
pop
ss
imul
fsts
cmp
add
push
fcmovnb
in
mov
mov
out
nop
mov
sbb
es
pop
sbb
mov
enter
jo
cmp
leave
xchg
inc
xchg
xchg
sti
sub
pushf
xchg
xchg
adc
cwtl
jmp
cmpb
repz
sbb
push
mov
inc
subl
mov
push
repz
jbe
sbb
repz
loope
imul
andl
out
stos
adc
sarl
cwtl
outsb
xor
jge
sarl
inc
sahf
sub
int
mov
orb
adc
jg
movsl
insl
jl
adc
xchg
lahf
push
inc
icebp
xbegin
dec
outsb
imul
ret
shl
push
sub
lahf
jmp
xor
std
jle
add
pop
lahf
mov
push
int3
mov
mov
add
fdivs
in
pushf
xor
scas
inc
daa
sbb
cmp
xchg
cli
pop
xlat
sar
notb
jl
lahf
and
sub
je
and
addr16
adc
movsl
icebp
out
cld
fwait
pop
in
loop
pusha
adc
inc
gs
mov
test
sbb
add
xchg
push
or
sub
test
xchg
out
mov
pop
mov
cmp
fsubrl
and
filds
sahf
push
dec
cmp
add
lret
push
push
movsl
stos
jecxz
lods
dec
scas
adc
jmp
sbbb
sub
and
push
sbb
out
push
mov
dec
jo
sbb
cs
cmp
jmp
je
cwtl
cmp
cli
bound
mov
add
aad
notb
and
inc
shl
cmp
mov
mov
jp
lods
adc
sbbl
int3
and
sbbb
jge
mov
xor
insw
cmp
iret
pop
cli
adc
mov
jbe
and
faddl
rcr
mov
shll
and
js
cmp
enter
ret
mov
enter
adc
addr16
int
mov
stc
push
jmp
fwait
test
clc
pop
xchg
pop
fisubrl
daa
and
psraw
mov
adc
inc
mov
mov
jb
inc
mov
test
dec
mov
lahf
mov
paddusw
push
test
leave
cmpsl
sub
jae
pop
adc
mov
mov
adc
or
ret
and
sbb
xor
push
fstpt
mov
in
repnz
jg
xchg
xor
fsts
xchg
lods
fs
out
sahf
and
in
mov
jb
inc
adc
jl
cwtl
push
in
adc
mov
loope
enter
xchg
dec
dec
lret
rcl
lret
ret
lds
push
xchg
cmp
data16
repnz
or
sarl
push
scas
push
jge
mov
test
jecxz
mov
adc
rorl
mov
imul
xchg
xchg
fnstcw
cmpsb
ljmp
sbb
leave
sub
loop
inc
out
loope
mov
xchg
int
dec
xchg
inc
jnp
aas
adc
out
cli
push
and
jo
outsl
call
lea
imul
js
xchg
std
jecxz
fwait
enter
imul
xor
jle
mov
in
mov
mov
repz
les
xchg
dec
iret
outsb
xlat
add
adcl
cltd
pop
push
pop
sbb
sbb
and
pop
fsubl
sbb
sub
xchg
arpl
sub
jmp
push
xor
popa
push
insl
and
mov
fldcw
imul
fincstp
adc
jo
int3
sub
repz
pop
ljmp
icebp
pop
cmpsb
or
and
push
mov
cwtl
pop
mov
in
mov
stos
inc
out
mov
icebp
ret
into
mov
jmp
cs
sub
push
cli
das
fidivl
sahf
pop
inc
pop
js
movsl
xchg
int3
sub
sbb
movaps
sub
mov
add
push
dec
lock
out
ss
adc
jns
dec
aad
lock
cmp
stc
cltd
xorb
mov
mov
mov
inc
imul
xorb
cwtl
pop
mov
inc
inc
mov
mov
sbb
popf
fwait
push
adc
and
adc
and
mov
jp
pop
rcl
arpl
movsl
sti
popa
rorb
cmpsl
jge
addl
and
inc
mov
scas
movsl
sub
shlb
and
mov
mov
xor
mov
and
lods
add
xchg
mov
mov
xor
stos
call
jo
sub
mull
pop
push
cs
shlb
imul
je
enter
outsl
pop
sub
lock
sbb
sub
stos
push
dec
lock
cmp
ud0
pop
or
dec
pop
in
adc
mov
loop
xchg
jp
mov
sub
test
notl
fwait
inc
dec
loope
push
test
ficoml
push
dec
push
aad
arpl
bound
stc
adc
jb
sub
sub
xor
cmc
and
xorb
aam
pushl
jo
unpckhps
mov
pop
rolb
enter
gs
mov
xchg
sbb
pushf
aas
mov
imul
jbe
push
out
je
adc
sbb
xor
push
aas
ja
loope
subb
mov
rcll
in
cld
fs
dec
jno
push
cmp
movsb
fisttps
pop
aad
push
jmp
out
mov
add
lods
jle
bnd
movsb
dec
sub
xchg
dec
lret
mov
icebp
or
jo
push
lcall
mov
xor
es
insb
sub
fistpll
mov
outsl
mov
cmpsl
int
mov
fwait
arpl
je
jne
shl
sahf
orl
sbb
fdivrl
mov
jmp
insb
stos
and
sub
cwtl
push
dec
mov
adc
and
adc
call
jl
push
lods
push
cwtl
adc
dec
cmp
lea
jmp
mov
sbb
jo
fcomp
inc
mov
lea
leave
js
hlt
sbb
xchg
add
pushw
sbb
and
sbb
sub
and
cmp
sub
xor
in
or
addr16
insl
sahf
inc
cmp
loopne
mov
jnp
ja
pop
lahf
cmp
cwtl
movsl
and
negb
inc
addb
sbb
stos
adc
es
cmp
xchg
pushf
xor
xchg
fidivrs
mov
push
xor
sub
aad
mov
cmp
mov
adc
xorb
in
gs
and
fstps
xor
ret
repnz
adc
xchg
enter
sub
in
and
popl
lahf
mov
stos
addb
loopne
xor
jp
cmp
sbb
arpl
fbld
lods
dec
in
jmp
xchg
int
popa
scas
aam
mov
lods
and
jnp
fwait
jecxz
push
lods
push
cli
addl
jl
ret
cmp
xorb
test
iret
adc
xchg
xor
dec
jge
mov
jl
std
sub
mov
scas
xorl
outsb
lea
pop
jns
mov
enter
sbb
popa
movsl
jo,pt
stos
pushl
into
mov
lods
xor
pop
xor
jg
xchg
addr16
xchg
jae
gs
test
packssdw
cmp
mov
add
adc
ret
enter
mov
cwtl
std
pop
mov
loop
lret
push
int3
cli
fwait
dec
out
pop
mov
int
mov
xor
andl
pusha
lret
adc
push
mov
mov
ds
lock
pop
push
mov
sbb
rclb
sub
dec
add
sbb
ret
or
lods
pop
test
mov
dec
and
int
pusha
inc
stos
popa
cmp
jb
cmp
cmc
cmp
mov
push
push
jns
jb
int
ja
fwait
mov
lods
xor
repnz
sbb
loopne
cmp
mov
xchg
adc
or
fldl2t
cmpsb
cli
sub
out
sbb
stc
outsb
enter
pop
adc
clc
aaa
clc
pop
push
loopne
xchg
std
xor
mov
loopne
mov
pop
test
mov
push
insl
push
test
pop
and
xlat
xchg
mov
mov
aad
addr16
sbb
dec
out
out
pushf
sub
rcr
shrb
sbb
xchg
ja
aad
add
add
outsb
leave
stos
adc
es
xchg
push
jle
cmp
ret
or
dec
sub
adc
inc
pop
fisubs
sti
fstps
lods
mov
pop
in
imulb
adc
pusha
scas
outsl
or
pop
dec
jmp
add
add
sbb
pop
xor
pop
push
xlat
push
add
push
add
roll
add
pushf
fwait
out
shlb
pushf
loopne
cmpsb
pop
inc
ss
and
lds
out
jp
rcll
jp
aaa
lahf
xchg
add
int3
ljmp
inc
sub
sbb
inc
js
or
js
fcompl
sub
fsubr
jbe
mov
sbb
ret
bnd
inc
cmpsl
bound
pop
addl
pop
xchg
mov
dec
subl
or
add
pop
pop
push
rcrl
std
pop
push
mov
push
or
addr16
pop
out
and
add
add
dec
dec
orb
in
sbb
dec
jne
push
jp
in
outsb
dec
hlt
jno
cmc
je
movsb
scas
add
sbb
pop
inc
call
adc
or
push
mov
add
ja
cmp
test
repnz
or
lds
add
add
dec
stos
cmp
dec
sbbb
push
xor
popa
cltd
mov
sbb
popa
xchg
mov
outsb
mov
xchg
cmc
jmp
movsl
mov
inc
sbb
repnz
iret
xchg
fs
lods
aaa
pop
test
nop
testl
movsl
aas
cltd
pop
stos
ret
shll
xchg
mov
out
jb
dec
or
sub
movsb
les
sti
pop
pop
js
into
jl
mov
out
jbe
movsl
in
xchg
sbb
lds
jp
call
pushf
setbe
roll
push
lahf
addb
push
fs
pop
mov
inc
out
icebp
dec
xchg
xchg
xorb
stc
dec
aad
mov
xchg
aam
push
cmp
xorl
sub
mov
adc
test
xchg
mov
mov
cs
clc
xchg
iret
popa
push
cmpsl
mov
scas
daa
stc
cmp
movsl
in
jle
sub
and
je
pop
popa
xchg
iret
inc
mov
mov
pop
mov
ss
pop
push
add
aaa
call
xchg
lds
inc
sub
leave
adc
adc
adc
sbb
cli
imul
sti
sub
mov
mov
pop
fsubp
mov
pop
and
jo
scas
scas
les
cld
pop
jp
inc
hlt
mov
sbb
xchg
pusha
pop
jno
sbb
test
dec
xor
aad
mov
leave
lods
xchg
pop
jne
mov
into
jnp
shll
int3
jbe
push
sub
push
xchg
xchg
cmp
lahf
jno
sbb
lret
dec
icebp
adc
cmpsb
sub
sub
dec
cmp
inc
mov
cmc
push
jne
call
sbb
adc
or
dec
sbb
lret
add
dec
pop
insb
adc
bound
cmp
jbe
mov
arpl
mov
shrb
iret
push
xchg
xor
test
sbbl
and
adc
andl
pop
push
or
pop
mov
mov
pop
or
xor
dec
lahf
pop
popa
dec
pusha
mov
mov
pop
xchg
stos
test
cmc
test
fsubrs
clc
fsts
lcall
jne
push
je
mov
divb
mov
mov
nop
mov
push
and
lods
ljmp
in
pushf
pop
mov
or
dec
dec
push
push
scas
pop
pusha
mov
dec
dec
push
stc
divb
lcall
stos
lret
or
or
xchg
ret
adc
add
push
mov
sahf
sub
mov
sbb
inc
pop
in
cwtl
push
hlt
inc
and
jb
adc
decb
inc
inc
mov
jnp
lods
movsb
je
out
mov
roll
scas
fld
xor
push
cmp
xchg
adc
icebp
mov
fidivrl
pop
adc
or
repnz
jg
ret
adcb
dec
mov
mov
xor
lretw
stc
stc
xchg
mov
test
arpl
adc
adc
pop
fcomps
insl
push
jnp
sbbl
rorb
adc
or
aam
sarb
fsubr
xchg
ret
repnz
sbb
lock
push
xor
sahf
jmp
mul
lcall
dec
scas
dec
mov
sub
in
xor
movsl
dec
insl
test
ss
cwtl
xor
push
int
sahf
stos
gs
push
arpl
aam
push
leave
mov
ficompl
sub
sarb
in
sahf
sbb
pop
test
divb
jp
clc
hlt
hlt
cmpsl
popf
lods
movsb
pop
cli
dec
in
xlat
loop
push
js
push
xor
pop
xchg
outsl
sbb
jnp
push
jge
scas
and
out
add
xchg
pop
loop
xor
jnp
fldcw
sbb
cmp
js
testb
sbb
in
jbe
push
adc
cs
cmp
push
icebp
popf
les
sbb
xor
shlb
pop
pushf
movsb
rcl
into
adc
sub
add
andb
in
fnstcw
add
push
cmp
mov
mov
xor
out
pop
inc
push
xor
pop
mov
mov
rclb
add
in
jne
xchg
in
popf
scas
lret
int
cmp
les
ss
adc
test
or
rcrb
lret
mov
xor
je
push
sub
adc
xor
shrb
ret
leave
dec
das
xchg
fwait
jg
mov
aad
lcall
test
test
jb
adc
xchg
stos
dec
lods
push
cmc
lock
xorl
gs
into
inc
add
iret
sahf
into
jnp
out
imul
xchg
push
dec
mov
cmpsl
loope
in
cmovne
andb
cli
xchg
pop
adc
cwtl
fs
ret
cmp
mov
add
xor
sub
sub
fiaddl
scas
cwtl
xchg
cmp
or
sub
cmc
jnp
xor
fwait
jmp
in
pop
outsb
push
xchg
xchg
fsubl
adc
xchg
iret
fucomp
push
sub
or
gs
mov
stos
and
dec
scas
movsb
stos
xor
scas
test
into
adc
jb
ds
popa
jnp
pop
clc
adc
sub
mov
pop
lahf
iret
cmp
jmp
or
aaa
mov
mov
mov
xlat
enter
cs
test
mov
pop
xchg
adc
aas
pop
sti
add
enter
adc
fs
xor
bound
sahf
xor
xor
mov
sbbb
xchg
daa
add
push
fcomi
fwait
addb
arpl
dec
fnstcw
xor
cs
sub
cmc
and
fnstenv
mov
divb
pop
mov
xorb
sub
stc
or
sbb
repz
pop
jmp
push
cmc
in
xor
add
mov
ds
dec
inc
mov
jne
jl
fs
xor
test
jae
sbb
movsl
movsl
outsb
pop
dec
dec
cwtl
mov
dec
fwait
ds
jg
or
or
push
cmp
jnp
jecxz
pop
lcall
and
in
push
loope
bound
outsb
mov
sub
adc
and
xchg
fidivs
sub
imul
xchg
or
cwtl
ret
shrl
data16
pop
mov
jp
add
mov
cmp
pop
cmp
stc
lret
add
dec
inc
rorl
cmp
push
jecxz
rol
out
and
lock
adc
push
cmp
mov
adc
push
mov
sub
iret
mov
mov
aam
ret
rorb
popf
je
mov
pop
mov
xchg
repz
aad
aad
sub
in
inc
insl
je
cmpsl
jns
lret
lret
pop
xor
movaps
dec
out
andb
pusha
cltd
movsl
movl
aad
mov
mov
test
dec
popf
add
jge
into
mov
jecxz
xor
out
adc
inc
xchg
loopne
sbb
mov
in
out
xchg
negl
stc
push
in
push
es
ss
gs
sub
sahf
cmovnp
or
lods
aad
or
cmp
sar
out
xchg
test
pop
sti
icebp
mov
mov
inc
ljmp
xlat
sub
das
lock
jne
scas
cltd
ret
je
out
nop
dec
dec
sub
mov
loop
repnz
cmp
sbb
mov
stc
mov
mov
icebp
sub
into
imul
adc
pop
cmp
push
sub
js
negb
data16
jae
sub
push
xor
std
pop
add
shll
cmpsl
jbe
leave
and
lods
dec
and
mov
cmpsb
out
xor
or
mov
mov
xchg
mov
jmp
xchg
cs
outsl
xchg
pushf
addr16
fistpll
or
adc
push
into
cli
cmpsb
xor
jne
mov
lret
pop
sbb
mov
and
not
pop
sahf
jne
and
pop
dec
ret
jae
je
mov
outsb
add
int
int3
shrl
xchg
xlat
mov
bound
outsl
pop
gs
fistps
mov
push
jmp
xlat
clc
jbe
sahf
mov
dec
lcall
push
push
cmp
in
mull
mov
push
fildll
pop
cmpsb
daa
adc
xlat
adc
cwtl
repnz
push
and
cmp
push
fcmovnu
rcll
fs
faddl
iret
xor
push
lods
nop
pop
rol
inc
mov
pop
adc
dec
dec
xor
cld
sbb
fimull
sbb
adc
repnz
imulb
add
pushl
pushf
jbe
fildl
inc
adc
sbb
bound
mov
mov
jno
jmp
inc
test
sti
push
adc
push
jo
push
inc
in
not
mov
loop
stos
iret
clc
add
and
hlt
shrb
jg
cli
sti
jnp
sub
jmp
xchg
out
movsb
pop
xchg
stos
inc
rcrb
adc
es
xchg
addl
decl
or
mov
pop
int3
enter
lret
fcoms
mov
daa
imulb
cld
sub
cltd
mov
and
xchg
xchg
jmp
jno
out
add
xor
insl
push
divl
sbb
add
cs
lret
pop
xor
pop
ja
xchg
das
gs
loop
pop
sub
stc
add
sub
mov
addr16
out
aas
add
pop
shlb
cmp
cmp
push
push
es
fwait
push
call
fisubl
mov
jl
adc
xlat
or
mov
clc
fnstsw
jae
push
sub
push
lods
gs
pop
int3
ljmp
xor
xchg
lret
push
push
insb
ljmp
fstp
pop
call
inc
in
scas
hlt
cmp
inc
loop
jg
test
sahf
sbb
inc
aam
mov
ss
cmp
inc
push
or
lds
sbb
in
lret
push
mov
imul
je
mov
and
js
cmp
push
scas
sub
xchg
js
scas
data16
ret
rorb
outsb
xchg
inc
add
and
add
xchg
xchg
inc
jae
ljmp
fstl
int
dec
inc
adc
mov
pop
repnz
gs
in
aad
loopne
or
cs
or
scas
scas
aam
pop
pushf
add
pop
cmp
adc
adc
cmp
into
notl
push
int
add
mov
add
sti
cmp
stc
jo
lret
and
mov
cmp
push
push
cltd
shll
xchg
enter
mov
or
mov
movsl
push
pop
dec
mov
adc
hlt
lea
fsub
jg
jbe
in
dec
xor
popf
jo
push
sub
fisubrs
or
bound
and
int
xchg
sbb
dec
add
add
jbe
je
mov
pop
cli
inc
sbb
imul
pop
xchg
aaa
bound
pop
sbb
jnp
in
sbb
jb
out
test
pushf
inc
push
dec
mov
mov
xchg
in
stos
outsb
stos
test
js
sbb
sahf
les
adc
push
xor
or
jp
and
xor
jno
test
hlt
lods
inc
sar
into
clc
loope
xchg
roll
xchg
sbb
xor
mov
inc
mov
xor
pop
adc
fcomp
sbb
sahf
cld
sbb
xchg
or
add
lea
lcall
mov
jbe
pop
enter
int3
sbb
and
ret
cmp
mov
cs
inc
and
fdivs
or
js
add
hlt
mov
cmp
mov
ret
or
fs
imul
pop
outsb
ds
mov
ret
out
loope
mov
fsubrs
mov
dec
in
fcoml
popf
dec
cwtl
bound
mov
fistpl
out
mov
subl
cmp
arpl
pusha
mov
test
ret
outsl
ss
or
and
filds
adc
sub
out
imul
icebp
out
mov
push
loop
xlat
fs
push
mov
cltd
rorl
cmp
cmp
inc
repz
inc
mov
icebp
or
jbe
fidivs
push
in
add
lahf
push
pusha
pop
or
add
notb
test
lret
sbb
fistpl
js
into
or
test
push
push
mov
cwtl
mov
push
sarl
int
insb
lea
push
std
insb
pop
pop
rcll
cld
adc
or
test
cmp
gs
fiadds
push
fiaddl
addr16
dec
pop
dec
lds
lods
movsb
xchg
addl
loope
add
popa
sub
pop
stos
jno
and
idiv
lahf
jnp
add
add
fnstenv
sub
mov
scas
pop
push
sarb
ds
out
loop
and
outsl
test
add
inc
and
sahf
and
aaa
cld
jnp
cmp
xor
inc
push
inc
mov
inc
popa
pop
into
cmp
cmp
fxch
ret
mov
jns
adc
or
jae
jbe
sub
or
pop
fs
cmp
mov
lods
clc
or
xlat
faddl
cmp
xor
out
and
xorb
icebp
adc
pop
divl
dec
popa
out
nop
loop
xlat
mov
cmp
fadds
stos
jg
push
nop
orl
nop
sbb
test
sub
sbbb
mov
cmp
and
cmp
jae
out
pop
shr
cs
cmpsl
pop
or
adc
adc
fs
xlat
adc
xlat
add
fadd
sti
sub
in
inc
mov
jl
xor
jmp
xor
gs
inc
and
pop
pop
repnz
cmc
sub
xor
push
push
scas
mov
sub
out
xchg
pop
filds
jnp
push
add
popf
mov
sahf
sbb
out
iret
push
sbb
sbb
mov
xor
jmp
fcmovnb
test
jbe
stc
push
inc
leave
call
aam
or
in
and
ret
ret
dec
ficoms
pop
push
mov
loopne
add
mov
mov
inc
lods
loope
mov
pop
dec
repnz
bound
adc
jmp
pushf
shll
stos
pop
and
push
aaa
sti
jmp
cmc
mov
jmp
js
out
repnz
scas
repnz
loopne
lahf
xchg
or
movsl
xor
adc
int3
mov
fidivl
js
inc
in
fs
imul
fdivl
cmp
xchg
in
stc
xor
lret
bound
pop
xchg
addr16
inc
and
scas
data16
push
js
repz
xchg
aas
mov
add
sarl
hlt
std
sbb
lret
pop
in
ljmp
pushf
inc
movb
fwait
ljmp
lret
mov
inc
ds
sbb
cmp
fstpt
ss
arpl
out
aam
imul
push
in
mov
xchg
push
sbb
aas
xorb
pop
cmp
cmp
enter
mov
in
jp
into
sub
loop
shlb
aaa
jmp
adc
xchg
add
cmp
jg
adc
int
push
clc
das
xchg
pushf
sti
push
sbb
fistps
rcl
movsb
sub
xlat
lahf
pop
call
into
test
or
into
push
test
inc
popf
cld
push
gs
outsb
lret
adc
imul
fdivs
mov
scas
mov
das
rol
lahf
push
mov
cs
xor
stos
sub
add
jnp
cmpsb
mov
shl
lods
inc
adc
lret
aas
ljmp
jge
push
lds
mov
ret
stc
outsl
sarb
cwtl
popf
movsl
pop
out
aam
xchg
shrl
ret
fsub
add
push
and
test
push
xchg
xchg
push
ja
jecxz
pop
cltd
cltd
das
pusha
or
inc
js
sti
cmp
pop
mov
jbe
test
movsl
mov
add
xchg
sahf
roll
cltd
xlat
notb
ss
push
cmp
sub
addl
jmp
push
mov
mov
loope
adc
imul
mov
and
les
inc
adc
push
cmp
jnp
pushf
sbb
sarb
sub
push
pop
push
pop
lds
loopne
stos
lea
aad
mov
popf
ds
sahf
dec
dec
das
scas
xor
fnsave
or
push
gs
pop
dec
xor
jno
popf
shrl
push
adc
push
xor
test
in
jmp
sub
sub
out
mov
mov
jbe
fnstenvs
jle
pop
icebp
mov
popf
imul
lods
test
cltd
lret
pop
xchg
and
sbb
dec
mov
daa
lahf
bound
inc
sti
inc
test
lds
push
inc
xor
pop
call
inc
repz
xchg
dec
push
idivl
movsl
dec
push
adc
bswap
sub
jge
push
cmpsl
shrb
push
mov
mov
outsl
inc
mov
pop
jne
inc
pop
xchg
icebp
test
mov
arpl
stos
neg
icebp
pop
cli
stos
les
adc
dec
sti
andb
fistps
shll
and
cs
dec
fmull
inc
sbb
xchg
fists
jp
clc
frstor
int3
loope
dec
adc
push
inc
cli
push
cltd
shrb
jns
sub
sub
dec
jbe
loope
sbb
inc
cmpsl
mov
test
adc
sbb
movl
pop
pushl
mulb
jp
imull
jge
roll
and
and
sub
in
int3
inc
dec
xor
pop
sub
adc
xor
lcall
sarb
mov
xchg
sbbb
cmp
aad
dec
lahf
cs
or
push
mov
cmp
mov
pop
scas
rorl
xor
add
stos
in
xor
and
fisttpll
push
jle
jae
adc
cwtl
jmp
rcrl
dec
pushf
mov
push
in
adc
or
mov
movsl
mov
sub
dec
in
dec
sub
push
and
or
lret
sub
and
pop
repz
pushf
add
push
sub
and
inc
push
sub
sub
fcos
leave
mov
jecxz
jnp
fstpt
or
dec
in
pop
cmp
je
rolb
and
push
jno
pavgb
and
xchg
loope
loop
pop
add
jnp,pt
test
xchg
fidivs
cwtl
xchg
iret
cmp
and
fwait
or
jns
or
in
sbb
adc
mov
jns
inc
in
ret
ljmp
adc
mov
inc
mov
lret
movsb
jmp
test
jl
outsl
mov
pop
jmp
in
cmp
mov
mov
insl
movsb
xchg
adc
push
popf
std
ret
lds
mov
sub
adcl
testl
jg,pt
popa
jecxz
xchg
pop
roll
or
int
cli
push
fcomps
fildll
mov
adc
mov
push
dec
mov
dec
xchg
aaa
cmpsl
sub
loopne
rcll
or
adc
adc
mov
pop
dec
inc
lret
pop
cmp
mov
aas
cld
fdivl
inc
xor
inc
cwtl
js
jmp
add
adc
xchg
loope
popf
out
jmp
or
inc
xchg
jle
scas
fsts
xchg
xor
lret
mov
xor
adc
or
decb
or
cmp
jbe
adc
orb
push
testl
pusha
add
sub
lods
pop
inc
add
pop
sbb
mov
sbb
mov
dec
mov
push
xor
pop
sbb
frstor
xchg
xor
addr16
fstps
xor
cltd
inc
hlt
sbb
xor
popf
and
add
mov
mov
adc
ja
mov
ds
cltd
mov
test
loop
adc
pop
mov
mov
adc
mov
test
insl
pushf
mov
push
addb
dec
dec
ss
sbbl
pop
add
outsl
push
mov
sbb
es
outsb
push
push
adc
shll
jp
xchg
adc
rorb
jg
push
adc
int3
call
sbb
scas
cmp
fstl
les
xor
stos
fwait
sbb
data16
mov
xchg
mov
in
rcll
mov
mov
mov
iret
data16
dec
inc
push
xor
cmpsb
pop
imul
push
clc
test
sbb
dec
fiaddl
mov
xor
xor
lahf
sbb
data16
add
cwtl
jnp
or
sbbl
out
inc
loop
das
dec
pop
sub
mov
dec
dec
xchg
call
lds
rcr
jle
sbb
cltd
pop
pop
adc
aas
roll
mov
sub
pushf
sbb
out
lret
out
sahf
push
mov
fsubrs
mov
in
fwait
and
mov
mov
std
xor
aas
ja
inc
adc
fsqrt
inc
mov
mov
and
insl
cmpsb
stos
repnz
subl
outsl
outsb
or
sub
mov
push
sbb
inc
out
push
lea
subl
xchg
mov
xchg
sbb
cmpsl
mov
ret
les
mov
pop
xchg
pop
call
cmp
cmc
xor
mov
ljmp
ret
adc
jb
fldenv
adc
jge
xchg
fidivl
xor
xchg
mov
push
out
imul
mov
les
push
push
ljmp
jbe
mov
xchg
jl
add
adc
jbe
xor
leave
add
bswap
push
mov
fbstp
data16
adc
or
add
inc
jns
insl
movsl
push
mov
enter
jl
jle
pushf
fiaddl
arpl
push
cmp
cmc
cmp
iret
mov
rclb
pop
mov
and
mov
mov
mov
inc
push
lods
popf
mov
mov
mov
mov
inc
jb
inc
dec
adc
shl
or
in
out
and
js
lods
jns
std
mov
inc
fisttps
das
pop
cmp
jmp
imull
ret
dec
loop
mov
loope
sbb
cmp
pop
sbb
xchg
jnp
in
aaa
add
push
sub
ss
xor
nop
test
or
mov
mov
rcrb
inc
push
xchg
sti
cmp
lahf
mov
inc
cmpsb
xor
fiaddl
int3
mov
mov
les
adc
pop
sbb
and
stos
enter
mov
jae
pusha
cs
std
cmp
dec
inc
add
popa
leave
mov
sbbl
push
out
negb
imul
fstps
mov
and
dec
sub
adc
sahf
sub
rorl
mov
xchg
mov
sbb
repnz
test
xchg
shl
or
dec
add
fldcw
cmp
or
dec
popf
scas
repnz
sub
dec
xor
cmp
inc
stc
imul
popa
or
add
popa
push
and
push
inc
or
mov
adcb
dec
vmovntps
enter
dec
jne
rol
jecxz
push
test
imul
lahf
fcmovu
pusha
sbb
fisubs
addb
sub
insb
adc
std
mov
pop
push
int
fisttps
inc
daa
add
add
jecxz
aas
lds
inc
jg
sub
jge
ja
sbb
inc
mov
pop
decl
jl
add
std
lret
hlt
cs
push
imull
jge
xchg
into
jb
incl
pop
cmp
pop
or
test
xchg
js
mov
jb
jecxz
sub
sbb
sub
aam
nop
enter
in
cmp
pop
ret
jecxz
idiv
andb
xchg
out
aad
cmp
sbb
adc
xchg
jge
pop
add
negl
mov
outsl
das
clc
cli
mov
mov
pop
mov
js
cs
es
inc
rcrl
and
jbe
and
lock
xchg
adc
jle
out
test
popa
mov
add
nop
ret
mov
loopne
fildl
shrl
mov
push
pop
scas
lods
aaa
jecxz
dec
or
dec
sbb
cmp
xchg
jl
mov
rcrl
sbb
into
push
xchg
subb
push
cmp
jo
pushf
xor
xchg
test
stc
lea
sbb
fsubrs
sbb
rcrl
add
mov
dec
mov
mov
arpl
in
push
add
sbb
mov
sarb
push
in
inc
addr16
fidivl
jmp
jae
jo
mov
sbb
jns
into
pop
scas
sbb
sub
jb
daa
aas
insl
add
mov
jae
test
mov
aas
adcb
jmp
dec
fwait
shlb
dec
xor
lods
insb
inc
lock
jbe
int3
lods
ss
roll
push
push
in
push
loopne
sbb
add
xor
cmp
sub
xchg
clc
push
std
push
jno
jecxz
jns
dec
push
mov
sahf
in
xchg
je
mov
or
or
inc
add
icebp
aaa
and
xchg
cs
cmp
mov
inc
in
mov
xchg
outsb
call
jnp
push
push
sub
jno
xor
add
gs
arpl
inc
add
or
inc
adc
aam
inc
subl
pop
test
pop
cmp
lods
pop
or
int
pop
aad
into
sarb
test
test
pop
sahf
pop
out
xchg
jecxz
mov
sub
mov
push
pushf
cmp
adc
icebp
test
lcall
xchg
xor
fadds
jb
xor
adc
ja
sarb
fimull
fdivp
xor
test
inc
dec
mov
cmc
xor
jmp
pop
test
clc
push
pop
loope
mov
in
scas
rolb
aaa
xchg
mov
aaa
pop
fldenv
pop
mov
cmp
add
sub
outsb
pop
mov
aas
mov
sbb
fwait
ret
fsts
syscall
pop
movsl
jl
jb
pop
lea
je
lcall
xchg
mov
jo
inc
imul
aad
movsb
cmp
iret
xchg
addr16
push
mov
push
adcb
aaa
sbb
leave
mov
jp
nop
andb
data16
ficoml
decb
push
lods
mov
push
mov
sbb
loope
mov
or
xchg
loopne
ret
cmpsl
loop
cs
notb
ret
mov
rcl
jne
mov
mov
fwait
push
repnz
sub
and
out
adc
fbld
push
xlat
dec
rcll
pop
notb
xor
mov
and
gs
add
repz
sbb
xor
push
jl
inc
fcmovb
imul
outsb
imul
rorb
cmpb
mov
xchg
negl
pop
aam
aaa
ret
xchg
and
and
outsl
in
fmuls
mov
sbb
inc
mov
add
dec
sbb
sub
shlb
xchg
cmp
nop
mulps
cmpsb
dec
loopne
mov
ret
add
cltd
in
stos
movsb
imul
jge
movsl
test
cmp
mov
cmp
aad
call
lretw
das
dec
cmpsb
dec
mov
fwait
lret
xor
int
aad
xor
add
pop
loopne
push
fwait
pop
xor
xchg
push
into
jae
mov
adc
push
js
inc
xor
cs
pop
das
inc
les
nop
outsl
cwtl
jne
cwtl
add
outsb
loop
outsl
mov
adc
das
stos
push
das
dec
ret
cltd
mov
cmpsb
insl
jno
loope
add
sub
aam
ds
int3
push
cld
cmpb
lret
or
inc
cwtl
mov
lret
dec
nopl
lcall
test
arpl
dec
push
arpl
test
imul
jne
imul
int3
inc
and
test
mov
pop
adc
mov
das
mov
cli
int
mov
mov
sbb
popf
push
cmp
xchg
popa
pusha
sahf
outsl
out
push
jbe
push
sbb
inc
fdivrl
loope
add
push
push
clc
push
cmp
jmp
lods
add
mov
in
dec
push
mov
push
xor
lahf
mov
and
ret
ja
mov
jle
xor
das
in
rolb
cwtl
imul
das
mov
sbb
enter
dec
mov
mov
jecxz
out
xlat
popa
or
xchg
push
lret
out
out
push
dec
mov
stos
pop
inc
push
fst
sbb
dec
xor
push
data16
fldt
notl
mov
inc
dec
cmc
jl
or
push
push
daa
data16
dec
pushf
js
jg
loop
ret
jle
cmp
push
jge
lcall
in
mov
fwait
add
and
test
outsb
jno
jo
addr16
adc
in
cmpsb
jmp
inc
je
outsb
xlat
xchg
fsts
loop
sbb
pop
cmc
nop
pop
xorb
sbb
repz
xchg
add
jle
lods
sbb
mov
aas
roll
movsl
shll
push
rcr
into
std
or
popf
sarl
mov
jb
movsb
call
dec
lock
nop
pop
jle
add
mov
test
or
mov
xor
cmp
cld
and
test
lods
mov
dec
stos
jb
pop
and
jl
into
or
pop
insb
jp
ret
jns
cmp
sub
out
xchg
pop
sbb
js
popf
sub
sarb
out
add
push
mov
cmp
dec
inc
push
dec
std
mov
mov
mov
arpl
xchg
inc
push
das
add
xor
mov
dec
pop
and
cmp
loope
popa
clc
jmp
and
inc
std
push
jno
cmpsb
js
addl
mov
pusha
sbb
push
mov
mov
fs
into
add
into
and
ss
pop
out
cmp
jno
scas
adc
gs
mov
fisubrs
int3
sub
sarb
fidivrl
sbb
shrb
jle
shlb
push
jnp
add
das
repz
adc
add
ja
cmp
mov
ds
sub
push
jbe
mov
nop
je
arpl
pop
adc
xor
mov
leave
mov
mov
jecxz
loopne
in
in
clc
or
mov
cld
jp
inc
or
rolb
jp
and
and
lods
mov
ss
in
or
xchg
sarb
xchg
mov
in
jbe,pn
dec
sub
pop
decl
cltd
je
mov
std
xor
push
and
out
dec
lock
out
push
lds
ss
pop
cmp
int3
scas
call
data16
out
scas
xchg
loopne
call
call
jl
xchg
test
mov
mov
mov
jb
popf
je
outsb
xchg
mov
mov
cmp
lods
pop
int3
scas
pop
fldcw
repnz
push
mov
cmp
sub
xor
imul
lods
xchg
ss
pop
add
imul
add
lods
rorl
and
cld
sbb
add
in
repz
fildl
push
orb
pusha
clc
or
jge
rorb
or
out
out
mov
clc
popf
jge
xor
aaa
lret
lea
popf
fsubr
sbb
add
insb
outsb
jp
ffree
xor
das
cld
pop
cmp
mov
test
and
xchg
sbb
mov
into
lea
pusha
es
push
or
pop
jl
fdiv
sar
jecxz
inc
mov
push
sti
sbb
push
into
add
clc
arpl
sub
fsubp
imul
lods
add
fs
es
inc
push
cmp
fdivs
sub
pop
inc
stos
pop
jae
nop
js
jl
jae
scas
out
mov
sbb
rcrl
cmp
outsl
scas
jae
test
mov
in
test
and
sub
dec
lds
jb
sbb
clc
test
movsl
mov
pop
jle
or
je
jmp
enter
lcall
imul
test
jg
lret
testl
dec
je
adc
mov
or
orb
jmp
sub
lcall
aas
mov
sub
pop
shlb
stos
scas
dec
xchg
xor
push
mov
aam
sub
adc
testl
arpl
sahf
mov
sbb
pop
jns
mov
fimull
push
xchg
stc
sub
or
cmp
push
mov
enter
mov
xchg
dec
and
mov
pop
mov
sbb
rcll
not
or
call
push
imul
imul
fnstsw
ret
inc
loope
lret
mov
test
pop
outsb
imul
push
push
rolb
xor
adc
add
add
xor
rcrb
test
call
mov
push
jge
push
and
xor
add
rolb
out
pushf
and
das
add
lcall
fstpt
push
and
sbb
jmp
and
jg
test
adcl
mov
xor
mov
and
orb
and
out
aam
adc
jae
pop
mov
adc
sub
cmp
mov
out
movsb
sub
pusha
pop
into
in
adc
cmp
inc
out
scas
xchg
push
repz
cmp
or
push
xor
push
lcall
in
adc
lahf
fdivrl
jg
jno
add
inc
adc
xchg
hlt
jne
dec
popf
bound
fwait
sbb
sbb
mov
clc
xchg
out
add
int
sahf
iret
enter
jg
xchg
in
and
ss
jns
out
movsl
cmpsl
adc
xor
es
or
mov
aam
out
outsl
jmp
scas
or
loope
cltd
aam
cmpsb
cmp
das
call
dec
fldenv
cs
lds
push
xchg
insb
ss
adc
mov
lods
adc
mov
loope
add
dec
add
inc
pop
mov
je
lods
adc
jae
lds
out
shrl
loopne
loopne
aaa
and
test
testb
xlat
add
test
fdivrl
cwtl
out
add
xlat
rcrb
jp
cmpb
outsb
cmp
neg
loop
gs
jne
adc
repnz
in
enter
jle
jno
pop
in
lods
pop
loop
cmp
xor
mov
mov
add
cmc
and
dec
mov
cmp
xchg
pop
pop
cltd
dec
push
sub
loop
mov
lahf
out
jne
cmp
test
push
hlt
cmp
mov
mov
ja
jbe
inc
inc
insl
jo
pushf
xor
push
jge
inc
or
adc
pop
jb
jo
scas
shl
das
pop
mov
xchg
adc
sub
aad
lock
dec
xor
jb
xchg
mov
sbb
jmp
push
sbb
leave
jo
repz
push
mov
add
cmpsl
push
aad
movl
or
add
add
dec
or
pop
pop
outsb
xchg
and
xor
lret
and
aad
pop
xor
mov
stos
xchg
pop
mov
call
fldcw
add
iret
xchg
pop
lods
int
int3
cld
sub
mov
aaa
test
lcall
cs
inc
adc
lods
jp
cld
sub
xor
cmc
movsl
dec
xor
jb
sbb
pop
dec
data16
jg
xor
sarl
pusha
mov
cmp
les
push
sbb
lret
dec
sub
aas
sbb
leave
cmp
popa
dec
ja
fwait
pop
je
stc
je
adc
ret
dec
jp
insl
aaa
fsub
mov
xor
xchg
movsl
imul
jbe
inc
or
cmpsl
into
test
mov
or
mov
in
pop
stos
mov
pop
add
jno
dec
in
mov
push
into
jge
lods
pop
sub
aam
leave
data16
fcoml
push
jb
cmc
and
test
inc
add
lock
les
xor
out
cmpsb
jb
pusha
in
stos
dec
jle
and
jmp
imul
xchg
and
shlb
xor
mov
cmp
cli
sub
data16
push
jecxz
xchg
mov
mov
pop
rclb
sbbl
mov
mov
jb
jge
pop
mov
popf
add
fidivrl
cmp
icebp
cltd
arpl
push
push
cmp
neg
sub
adc
sub
in
cld
mov
je
add
inc
xchg
push
lret
movsb
pop
fcoms
push
ss
call
inc
subb
fnstsw
push
and
enter
add
dec
pop
dec
repz
cmpsb
out
in
gs
int3
adc
sub
push
xchg
out
mov
sub
xchg
lods
aas
adc
jbe
movsb
mov
subl
das
in
mov
sti
mov
aad
adc
cmp
mov
mov
notb
and
cs
sub
jnp
sbb
aam
add
mov
lods
ss
sub
adc
push
repz
sub
movsl
jg
in
shlb
sub
sar
jnp
sbb
in
mov
push
pop
jl
inc
out
popa
add
jg
fildl
ds
fisubrs
mov
pop
xor
xor
cli
dec
xor
out
dec
jb
stos
jmp
ja
adc
test
inc
lock
and
jp
xlat
adc
mov
mov
lahf
xchg
mov
mov
jno
fistl
inc
inc
push
addr16
fwait
lret
pop
adc
jecxz
popf
mov
or
mov
adc
jbe
cmpsb
cmc
popa
push
lcall
stos
mov
mov
lret
fcomps
inc
lea
loop
and
scas
test
push
push
lret
sub
mov
dec
in
popa
add
xchg
cmp
fnstsw
add
xlat
inc
mov
popa
test
out
cmp
jb
add
push
sbb
movsb
cmp
das
jbe
lods
mov
sbbb
sub
jo
inc
hlt
mov
add
pushf
mov
adc
cmpsl
ds
addr16
icebp
fisubl
leave
loope
mov
movsl
jo
jle
push
and
je
sbb
in
dec
jp
and
fiadds
push
mov
movsb
adc
cmp
out
push
stos
pop
out
subl
punpcklwd
mov
shlb
push
ficoms
decb
rcrl
lods
mov
sub
jae
fiadds
mov
ljmp
aaa
jge
repz
pop
jo
inc
mov
pop
and
insl
sub
push
into
push
sbb
outsl
negb
dec
adcl
and
push
test
nop
push
and
repnz
in
add
cmp
push
mov
push
call
addb
or
add
aas
mov
cmc
out
pop
sbb
shlb
rcl
imul
lods
dec
and
loop
mov
inc
xor
push
xchg
sahf
dec
popa
mov
pop
dec
movsl
mov
es
incl
jg
mov
stos
pop
pop
repz
or
insl
out
or
xor
std
stc
dec
adc
cmp
lock
add
int3
jne
xor
cmp
pop
xor
cld
inc
stc
popf
repnz
mov
push
repz
loope
scas
out
inc
std
xchg
sub
rorl
or
gs
lcall
cmp
outsb
cmpsb
pop
daa
scas
pop
cmp
xchg
les
rorb
xchg
and
dec
test
add
lahf
shl
xchg
xor
mov
add
or
xchg
mov
xor
gs
popa
loope
sbb
pop
mov
ret
adc
mov
jmp
test
enter
xchg
sub
stos
test
adc
inc
mov
jb
fwait
add
jbe
mov
arpl
mov
lds
jno
push
pop
std
push
fnstenv
ds
xchg
jp
es
sub
sarl
ss
push
popf
testl
lock
inc
inc
xchg
jmp
lds
cmp
push
lret
mov
sti
xor
xor
mov
push
jle
mov
dec
pop
dec
inc
stos
test
mov
lds
imul
bound
and
mov
sbb
jae
jne
aas
push
adc
popf
jae
into
mov
repnz
lret
loop
xchg
addr16
cmp
ss
mov
xor
pop
loopne
hlt
scas
inc
cmp
into
shrl
sbb
pop
xor
test
cmp
not
xor
inc
mov
xchg
push
inc
push
mov
shrb
inc
and
int
push
xchg
dec
dec
xchg
xchg
loop
xlat
outsb
stos
pop
lahf
jmp
jbe
pop
push
je
xchg
sub
adc
out
popf
xor
scas
sub
and
loop
lock
movsl
mov
test
mov
dec
lahf
je
push
in
jl
repnz
pop
stos
jbe
jge
inc
push
mov
pop
adc
insb
ret
sbb
lret
mov
nop
xchg
in
stos
ficomps
jo
or
xchg
shrb
int3
mov
dec
jno
xor
lock
out
or
mov
lods
imul
inc
enter
insl
fwait
pop
push
arpl
std
dec
mov
mov
mov
inc
je
mov
popf
jle
aad
pop
hlt
adc
js
mov
mov
inc
sbb
cli
jns
andb
ret
or
mov
stos
addr16
cli
push
je
sub
xchg
aam
or
mov
loop
xchg
sti
xchg
sbb
mov
jl
incl
cwtl
repnz
dec
sbb
adc
and
lods
xor
add
or
mov
mov
sub
cmp
pop
mov
mov
push
dec
push
mov
addl
push
data16
stos
in
clc
xor
mov
xor
hlt
inc
mov
sbb
add
mov
fs
push
dec
adc
jne
roll
lret
insb
push
add
inc
outsb
cmp
cld
inc
xchg
aaa
rcrb
imul
mov
lahf
cltd
pop
cmp
sbb
inc
xor
scas
jne
pushl
arpl
rcll
int3
lea
rcll
outsb
or
sub
inc
ja
mov
leave
push
cld
xchg
rorl
mov
popa
in
add
sbb
mov
pop
xchg
filds
mov
or
test
cmp
xchg
aam
and
arpl
or
jl
repnz
fildll
dec
movsl
inc
out
fimuls
shll
dec
mov
add
sub
aam
lea
daa
and
jae
and
fstl
add
pop
cmp
mov
pop
mov
aad
mov
insl
jae
push
fnstsw
pop
jge
ret
int
add
bound
jne
lcall
bswap
inc
in
push
or
in
idivl
les
repz
aad
mov
lret
ret
loop
sti
stos
je
addb
xchg
pop
popf
cmp
pop
push
hlt
nop
inc
leave
inc
mov
fidivs
sub
push
adc
aam
daa
and
fmuls
jmp
xchg
xor
rcl
cmc
test
ret
pop
mov
jp
int
add
stc
pop
popf
inc
incb
popa
add
fwait
roll
pushf
call
mov
push
out
aad
je
cwtl
lds
gs
sbb
dec
inc
das
cmpsl
sbb
ss
icebp
ljmp
ja
adc
fildl
int3
int3
or
inc
sub
sahf
in
pop
dec
mov
or
mov
movsb
xchg
mov
movsl
in
cmp
add
jns
cmc
or
dec
add
loop
sbb
push
in
call
adc
pop
jmp
mov
sbb
enter
mov
or
mov
pop
and
dec
loopne
xor
mov
add
loope
or
pop
jne
dec
ja
xchg
pop
xorl
lret
out
jmp
and
arpl
jp
sub
add
adc
cmp
pushf
mov
out
lret
sbb
loope
xor
enter
jge
cmpsl
lods
xchg
cmp
dec
adc
fidivrl
xor
fcomip
cmp
cmp
sbb
jno
jae
out
mov
dec
fwait
push
jp
mov
test
cmp
jnp
jae
xor
testl
lock
pop
mov
ret
ljmp
mov
cmpsl
jp
xor
lcall
mov
mov
fnsave
int3
pop
icebp
push
push
push
mov
stos
mov
sti
jnp
cmpsl
adcl
inc
inc
shrl
loop
sbb
or
push
std
je
icebp
fcmove
jmp
js
sub
pusha
repnz
mov
popa
rcrl
xchg
adcb
mov
xchg
inc
mov
in
into
rol
or
xchg
ljmp
fs
mov
or
ret
dec
hlt
push
pop
imul
jb
int3
fyl2x
pop
bound
out
ret
push
icebp
mov
out
daa
xlat
enter
out
add
or
pop
lret
data16
push
jo
notb
sarl
and
divb
cli
ds
jno
mov
shl
lods
xor
popa
stos
leave
xor
jb
dec
pop
add
imul
test
xchg
pop
add
inc
cld
call
push
popa
xchg
jp
add
mov
outsb
add
sbb
shlb
and
xor
mov
incl
fidivrs
push
daa
add
cmp
mov
pusha
mov
iret
and
leave
xchg
push
inc
aas
fisubs
outsb
add
mov
loopne
aaa
push
cmp
cmp
mov
jle
ljmp
fdiv
add
and
dec
rorl
ret
push
jne
in
mov
loopne
dec
in
xchg
es
movsl
in
mov
ret
mov
aam
or
jno
aas
cmc
mov
cmp
push
inc
push
jne
cltd
insl
js
aad
and
cmp
out
xchg
xchg
jecxz
popf
test
pushf
les
mov
mov
rep
enter
jae
jmp
bound
adc
addr16
jmp
mov
pop
mov
sbb
inc
cmp
adc
fimull
dec
lahf
lahf
adc
inc
lea
aam
dec
scas
lret
push
shrl
xchg
lock
or
sub
je
pop
sbb
add
cmp
repz
lock
cmp
jge
adc
adcl
mov
add
dec
or
lods
or
push
lds
xchg
and
push
loope
jbe
lahf
addb
push
js
push
imul
lahf
pusha
cmp
adcb
pop
adc
rcll
jb
inc
popa
mov
xor
dec
mov
pop
loop
sbb
js
or
inc
mov
imul
imul
test
and
or
gs
repnz
loope
adcb
loopne
pushf
xchg
push
adc
xor
imul
cltd
lcall
fldenv
sub
xchg
and
fxch
orb
xchg
lock
les
cmp
add
push
test
xor
xchg
ljmp
mov
pushf
leave
pusha
outsb
mov
cmp
sbb
pop
fisubrs
stc
out
mov
out
int3
out
fistl
sub
inc
cmp
test
dec
mov
pop
imul
xor
cmp
sub
scas
fsub
in
push
inc
push
sbb
cmpsl
into
out
sub
hlt
out
je
test
mov
gs
sahf
and
push
push
icebp
stos
ret
cltd
sub
pop
jecxz
and
push
cmp
dec
or
push
bound
jg
ja
ja
fs
arpl
push
xor
mov
icebp
push
lcall
into
mov
sarl
sbb
push
fs
push
pushf
ret
je
std
push
int
xlat
mov
dec
jae
mov
div
shll
xchg
jno
cmp
push
inc
push
and
fstpt
int
dec
jmp
mov
gs
pop
add
int
dec
aaa
scas
lret
dec
fadds
sahf
or
sub
les
jg
push
mov
inc
in
jmp
cs
lea
mov
cmc
mov
daa
mov
xchg
mov
test
jno
je
push
xchg
xor
das
jg
stos
mov
pusha
add
lock
movsb
pushf
cmp
int
cmp
xchg
jns
push
mov
pusha
aaa
in
sbb
subb
jno
sub
fnstenv
and
mov
mov
lret
repz
mov
rolb
jg
mov
mov
rolb
dec
mov
cmpsl
cld
add
mov
jns
js
insl
cltd
jb
and
adc
stc
add
mov
push
das
adc
push
into
andl
out
ja
andl
add
xor
sarl
inc
scas
pop
out
xlat
sarl
js
jns
sahf
repnz
dec
outsb
push
aam
mov
sbbb
rolb
fs
out
mov
push
mov
lock
xchg
icebp
idivb
mulb
cmpsl
inc
aad
jnp
imul
sbb
mov
out
sti
sbb
xchg
inc
and
adc
cltd
inc
dec
sbb
or
inc
cmpsl
ss
pop
scas
jmp
fsubl
pop
aaa
repnz
or
dec
push
inc
push
dec
inc
xorb
les
ss
dec
push
push
idivl
cmp
inc
sar
jns
xchg
aas
scas
scas
xor
mov
inc
adc
inc
adc
test
add
push
pop
or
lahf
inc
cmp
dec
push
loopne
aad
push
or
pop
xor
jge
cli
lret
mov
test
sarb
inc
jae
and
ret
js
sub
inc
loopne
sbb
dec
scas
std
xor
mov
adc
add
push
fadds
arpl
fdivrs
pop
test
mov
outsb
ficompl
cltd
and
jns
jle
adc
add
clc
sbb
std
xor
xor
cs
or
roll
sbb
or
mov
imul
mov
sub
sub
enter
mov
adc
mov
shll
mov
jnp
xchg
ds
sbb
xor
or
aaa
mov
lods
xchg
mov
mov
insb
inc
jg
pop
into
adc
int
pop
ds
xlat
outsb
mov
cwtl
or
scas
outsl
lret
xlat
jecxz
loop
pop
or
pop
adc
mov
mov
or
lods
xchg
sbb
rcrb
in
icebp
cmc
or
js
aas
cs
out
or
push
pop
icebp
adc
mov
fisttpll
xchg
loope
add
stc
cmpb
das
into
fidivl
push
pop
push
nop
mov
pop
mov
loope
xchg
mov
popa
push
pop
and
and
out
incl
xor
mov
enter
addb
sub
mov
jae
or
in
mov
lcall
das
inc
mov
mov
mov
outsb
mov
decb
jbe
into
pop
jge
andb
mov
sbb
mov
daa
xor
push
sbbb
adc
data16
xchg
cmp
repz
push
imul
cmp
in
shll
in
jns
popf
xchg
enter
int3
jae
fs
mov
mov
jecxz
lret
adc
dec
or
inc
xchg
mov
cmpsl
pop
jg
mov
pusha
dec
jle
jbe
testb
push
mov
ret
rcrl
pop
mov
dec
out
addr16
mov
or
int
xor
jbe
arpl
fdivs
lret
stos
xor
test
mov
pop
ljmp
loopne
jb
fwait
lret
push
push
adc
jne
insb
fildl
inc
dec
xchg
pop
xor
pop
mov
mov
cmp
dec
adc
repz
inc
repnz
fs
pop
rcrl
sub
lcall
inc
jne
in
cmpsl
push
and
test
push
std
xor
jne
jae
mov
pushf
inc
int
push
add
bound
lcall
jns
and
cmp
xor
and
in
inc
adc
popa
vxorps
in
and
ds
cmpsb
insb
aam
sub
fs
mov
inc
std
iret
in
xor
aad
pop
mov
ljmp
mov
jl
std
add
and
lret
js
aad
out
jne
inc
rorb
push
lods
mov
xchg
scas
add
aaa
adc
push
testb
stc
pop
and
jecxz,pt
mov
pushf
dec
xchg
in
hlt
lock
mov
pusha
cmc
xchg
push
push
and
sub
and
fwait
sub
movsl
jmp
scas
cwtl
int
int
lea
jo
cmp
mov
mov
cwtl
pop
push
adc
adc
dec
fs
mov
sarb
jecxz
into
aam
cmc
xor
stos
addr16
xchg
adc
jl
out
xchg
sub
insl
mov
mov
sbb
dec
mov
cwtl
pop
jae
xor
pop
sub
cmpsb
inc
push
jmp
movsl
jnp
sub
jo
in
ljmp
test
scas
xlat
addl
inc
pop
xor
icebp
fcompl
and
mov
adc
sbb
pop
popa
pusha
jo
xor
icebp
xor
roll
loop
loop
mov
sub
dec
cmp
movsl
add
imul
and
call
rcrb
push
call
rcl
into
inc
addr16
add
dec
stos
in
or
mov
jns
or
inc
xchg
ljmp
mov
sahf
roll
inc
dec
dec
mov
cmp
ljmp
fcmovbe
cmp
test
dec
movsb
loope
jbe
fadds
insb
aaa
lret
fcmovnbe
or
and
mov
push
incb
call
lret
sbbb
mov
dec
enter
ja
fisubrs
or
mov
ljmp
mov
inc
je
dec
lods
mov
pushf
xchg
and
data16
xor
mov
aad
pushf
add
outsl
dec
push
jg,pt
mov
add
sub
aaa
and
jae
mov
aam
lds
sbb
cmpsb
in
ret
jo
sarl
sub
in
pop
sbb
sub
rorb
mov
push
icebp
jmp
add
in
insl
leave
imul
mov
in
clc
add
push
and
negl
mov
call
mov
lock
mov
subb
dec
call
pmulhuw
sbb
lds
pop
mov
addr16
xchg
cmp
mov
aas
filds
stos
push
into
jecxz
pop
aaa
aaa
in
imul
inc
add
and
inc
leave
int
mov
call
cmpsl
push
sbb
and
xor
mov
out
aam
loop
xor
push
loope
lahf
inc
jne
mov
pop
ja
dec
pop
sbb
cmp
outsl
rcll
cmpsb
lret
test
lea
push
int3
clc
rclb
enter
dec
xchg
sbb
leave
and
pop
xor
mov
outsl
nop
aad
inc
push
jecxz
not
xchg
xorl
movsb
pop
stos
out
leave
orb
xchg
fdivrs
iret
leave
ss
andb
pop
fidivrl
inc
mov
lret
add
pop
jne
add
or
pop
pusha
stc
out
jle
cmp
xchg
jnp
rolb
addr16
cmpsl
cmp
inc
inc
jnp
iret
lods
sbb
je
repnz
mov
jae
bound
jno
dec
hlt
out
lret
sahf
jp
fists
ss
lods
inc
jle
pop
mov
sahf
popf
sub
arpl
push
push
cmp
js
fs
jo
js
jb
push
push
sbb
mov
cmp
es
mov
mov
adc
sub
dec
sahf
pop
lods
pushl
scas
fcom
hlt
cmp
cmp
pop
test
mov
fldl
mov
mov
pop
bound
cmp
je
into
aas
inc
jo
and
scas
test
pusha
aad
lods
bound
jns,pn
cmpsl
push
and
inc
stos
mov
push
cmpsl
xchg
test
loopne
icebp
adc
adc
add
xchg
and
cs
js
xor
in
dec
pop
adc
cmp
mov
mov
cmc
push
dec
in
insb
fidivrs
repz
loop,pt
inc
in
jg
xor
ja
adcl
popf
mov
rol
in
sub
xchg
outsl
inc
mov
pop
aad
mov
push
popa
mov
repnz
mov
dec
stos
mov
inc
icebp
xor
push
push
fistpll
mov
push
out
add
push
daa
outsb
inc
clts
push
or
outsb
lahf
push
mov
ljmp
imul
mov
and
mov
and
mov
cltd
repnz
adc
mov
aaa
fwait
shlb
xchg
in
nop
ds
push
xchg
mov
cmpsb
ljmp
lahf
cli
lock
and
das
test
sahf
mov
jmp
pop
ljmp
and
je
in
leave
pop
adc
repz
sti
int3
adc
stos
movsb
dec
push
or
mov
xchg
enter
scas
mov
push
in
in
jl
inc
lods
mov
mov
pop
push
out
add
adc
sub
push
cmp
inc
push
xor
jmp
mov
and
cmpsl
cmp
loop
pusha
lds
jmp
mov
lods
aad
and
xor
fnstsw
test
and
test
and
js
test
js
jecxz
or
ds
mov
dec
daa
lret
movsl
sbb
sbb
xor
mov
test
inc
cmpsl
daa
add
push
mov
cmp
jl
insb
push
add
ljmp
and
fs
add
xlat
lcall
push
mov
jge
rorb
je
add
rcrb
cmpsb
mov
cli
lock
lds
or
js
xor
out
insl
sub
sub
sti
xchg
sbb
push
icebp
sub
fbld
cmp
mov
jl
add
enter
andl
data16
call
pop
les
cli
lea
out
jmp
add
cmpsb
mov
loope
clc
test
mov
fisubrl
or
xchg
icebp
and
fnsave
ss
jecxz
loop
sub
js
sbb
dec
jecxz
push
lcall
jmp
sbb
loop
sub
nop
xor
push
call
lcall
inc
jne
jle
jae
mov
in
lret
in
cltd
mov
pop
or
dec
stc
xchg
adc
sbb
sub
jecxz
add
jo
aaa
jge
loop
mov
inc
ss
add
jb
stos
in
mov
push
mov
outsb
jl
cld
mov
adc
cwtl
imul
sbb
sbb
std
cmp
mov
sar
jle
movsl
mov
jno
push
push
xor
rclb
mov
mov
fucomi
mov
hlt
xor
push
xchg
xchg
int3
leave
shll
das
test
xchg
shll
test
mov
mov
sti
ljmp
stos
arpl
sbb
inc
mov
pop
mov
dec
int
gs
pop
outsb
sbb
cmp
or
mov
stos
sub
cwtl
paddusw
jb
cmpsb
jle
inc
push
mov
sbb
lret
movsl
jmp
mov
pop
out
and
lcall
xor
and
loopne
xchg
pop
aad
callw
sub
inc
mov
loope
nop
cmp
fdivrl
js
dec
jo
nop
sbb
dec
jae
mov
sbb
cmpsl
xor
cmp
cmp
push
int3
add
addr16
cltd
cmpsb
or
adc
gs
out
dec
xchg
pop
adc
aad
sub
leave
add
jbe
jecxz
cmp
js
aam
pop
adc
add
test
jge
sbb
jmp
lret
js
das
ret
add
lret
decl
in
add
inc
xchg
and
xchg
lods
test
or
cmp
ficoml
add
hlt
push
int
mov
inc
sub
scas
xchg
cld
xor
mov
int
pop
lock
sbb
imul
movsl
mov
cmp
mov
imul
xchg
shr
insb
sbb
mulb
xor
lret
aas
aaa
cmp
cli
stos
lds
cmp
mov
jle
into
adc
sbb
xor
cmc
jnp
jo
jle
sub
push
jmp
dec
hlt
mov
cmp
aam
iret
cmpsl
and
in
xor
mov
xor
push
push
fdivrs
jno
sub
sbb
fdivrl
loope
cltd
jl
mov
in
jp
pop
int
mov
sbb
sub
sbb
fildl
pop
hlt
lcall
add
int
movsl
cmp
sub
push
jae
sub
and
shrl
xor
test
insl
aad
loope
test
xchg
add
movsb
sub
adc
inc
cmpsl
xchg
lock
pop
outsb
mov
mov
sbb
mov
mov
repnz
cli
scas
cmp
les
pmaxub
mov
sbb
sahf
mov
cmp
mov
mov
popf
mov
bound
pop
movb
gs
pop
cmc
stc
addl
in
lock
pop
xor
fisubl
mov
insl
jmp
into
outsl
adc
or
mov
shll
jo
mov
pop
insl
stc
cwtl
and
xchg
fstpl
adc
dec
loop
mov
jge
std
pop
lretw
bnd
mov
lds
lahf
inc
imul
aad
outsl
xchg
push
and
sbb
xor
xor
gs
xchg
push
mov
lods
inc
pop
inc
push
sub
decl
pop
dec
aam
xor
roll
inc
inc
push
in
bound
mov
std
sub
mov
and
add
jno
or
jb
lock
into
lds
popa
jg
cli
xchg
nop
lods
cmp
xor
mov
dec
adc
fisubs
xlat
add
mov
mov
inc
xchg
push
lret
das
shlb
mov
test
rclb
sarl
pushf
addl
movsb
loopne
jae
ljmp
inc
imul
leave
mov
clc
loop
push
dec
loop
sahf
sub
push
orb
cld
or
cmpsl
and
mov
scas
add
jne
or
sbb
repz
lcall
enter
loop
push
movsb
je
lcall
inc
arpl
inc
mov
dec
sub
inc
push
fwait
js
or
add
cmp
pop
cld
xlat
or
add
push
popl
jp
dec
gs
dec
adc
outsw
adc
sub
hlt
pop
xchg
mov
jb
pop
push
cli
inc
or
movsl
add
bsf
test
cld
fstps
jmp
pop
add
mov
addr16
repz
dec
pop
mov
mov
lret
pop
and
sub
xchg
jbe
fcmovu
pop
in
jl
test
xchg
mov
lea
mov
mov
add
insb
jecxz
push
jmp
shlb
leave
push
or
fstsw
fs
sub
sbb
push
mov
stos
pop
fldl
es
inc
jb
pop
inc
gs
xchg
mov
lods
mov
sbb
in
loope
int3
adcb
in
xchg
sbb
mov
icebp
pop
mov
pusha
sbb
sub
sub
sbb
popf
and
js
lahf
aad
fldcw
out
lods
int3
sbbl
inc
leave
movl
push
popf
imul
push
arpl
dec
dec
sbb
shll
jne
test
cltd
sbb
adc
push
fmulp
jl
ds
mov
inc
jmp
xchg
in
push
push
out
xor
push
push
js
xor
push
mov
inc
mov
sub
fisubs
fsub
lahf
imul
lret
xor
arpl
int3
std
jp
and
repnz
mov
dec
cmp
stos
xchg
pushf
mov
lret
pushf
add
shlb
shl
push
sub
xchg
sub
jle
sbb
outsb
aam
jge
es
aas
xor
cltd
in
mov
int
rorl
sti
sbb
mov
or
ljmp
xchg
or
push
aam
inc
sub
cmpsb
xlat
jno
sbb
fistpll
cmp
or
and
rcrb
add
pop
insb
or
lds
adc
data16
call
cld
push
mov
pop
sub
mov
adc
test
loop
psraw
jnp
mov
add
outsl
add
cltd
out
push
lret
leave
repnz
gs
das
rolb
sbb
xchg
xchg
push
nop
orb
add
fsubl
subl
enter
call
pop
loop
jmp
add
xor
xchg
data16
sbb
xor
scas
xchg
jmp
sbb
pop
or
divl
push
push
rcll
js
loopne
cltd
inc
shlb
jmp
lea
mov
mov
neg
sub
ret
sub
cmp
add
sbb
shrl
jecxz
lea
ret
sbb
mov
mov
leave
mov
scas
movsb
stos
jecxz
sbb
mov
or
pop
adc
fidivl
xchg
je
ret
cmp
pop
xchg
lret
adc
cltd
push
pop
das
sti
and
sub
xchg
push
adc
jmp
push
dec
lea
xor
and
push
dec
lds
mov
test
sub
add
sbb
mov
repnz
sbbl
mov
dec
pop
sub
and
mov
pop
adcl
inc
pop
aam
idivl
lahf
mov
imul
fadd
mov
and
ror
inc
dec
sar
int3
lea
cmp
mov
stos
mov
xor
jb
cmp
mov
jg
jle
stos
ret
nop
addr16
loopne
adc
sub
divb
cmpsl
mov
push
aam
cld
int3
cmp
or
sub
roll
outsl
jo
mov
inc
mov
movsl
fldt
div
out
adc
or
mull
bound
gs
inc
mov
xor
jle
popf
negl
aam
adc
cld
jl
pop
mov
popa
call
in
sti
ja
neg
iret
pop
mov
fdivs
or
test
pushf
fdivs
int3
xor
pop
push
fwait
mov
sti
or
inc
shrl
hlt
cmc
push
fwait
jge
push
pop
adc
push
arpl
and
inc
sarl
push
jno
out
es
loope
in
call
std
mov
dec
jo
inc
lds
std
xor
clc
subl
push
mov
cmp
fsts
push
imulb
mov
mov
ret
pop
arpl
mov
out
loopne
add
cmp
sbb
psllq
aam
imul
pusha
subb
pop
call
movsb
popf
xor
cltd
and
test
pop
push
jmp
std
pop
ja
test
lods
xor
in
cmpsb
sarb
push
pop
shrl
xlat
sbb
les
mov
push
cmovno
pop
pushf
fimuls
scas
cltd
mov
imul
dec
xorb
cs
ljmp
cmp
int
jae
push
mov
pop
adc
cwtl
sub
aad
dec
outsb
fistps
mov
jmp
add
sub
lock
inc
push
jle
add
jg
jb
stc
inc
inc
or
insl
mov
mov
rolb
sub
mov
insb
dec
xor
mov
xor
inc
rep
lahf
xchg
movsb
add
dec
mov
nop
jmp
scas
out
int
out
jl
in
xor
mov
in
ret
sarl
cli
or
cmc
aaa
pop
insb
mov
mov
clc
dec
sbb
sbb
movsb
jne
into
ds
incl
dec
dec
push
dec
sub
dec
inc
or
sbb
xlat
mov
incl
mov
sub
push
lcall
in
dec
cwtl
xchg
cltd
sbb
fcmovb
ss
push
xchg
lods
mov
mov
sub
js
je
push
ss
cmpsb
in
sbb
test
dec
mov
and
shl
xlat
and
inc
aad
loop
dec
pop
push
nop
lret
out
sbbb
cmp
pop
int3
dec
dec
test
inc
mov
push
sub
mov
dec
jg
gs
add
pushf
test
xor
xchg
pop
xchg
inc
mov
jnp
fiadds
mov
jge
negb
addr16
mov
cmp
das
inc
mov
les
ljmp
xor
jecxz
sub
pop
inc
inc
add
jp
sub
mov
inc
sbb
xchg
popf
and
sbb
mov
dec
lret
jge
jg
sub
ja
mov
or
rcr
push
add
cmp
aad
fnsave
out
insb
jl
and
test
stos
insb
push
xchg
aad
xor
in
add
inc
cltd
shlb
ljmp
jmp
mov
imul
cli
mov
mov
int
xchg
fs
push
insl
xchg
mov
push
sub
fsubrl
cmp
fdivl
icebp
out
movsb
push
push
cmp
jl
jno
ljmp
mov
sub
add
dec
sti
fcmove
adc
imul
icebp
data16
xchg
mov
add
push
adc
and
dec
push
jb
in
test
mov
pusha
cmp
jns
shlb
arpl
mov
daa
cld
outsb
xchg
rcll
stc
mov
push
lock
rorb
sti
lock
or
add
clc
mov
push
pusha
les
int
test
add
fsts
cmpsl
pop
jbe
pop
dec
dec
cltd
jmp
cmp
jg
adc
lahf
imul
mov
dec
pop
mov
nop
inc
fwait
mov
push
nop
insb
ret
mov
es
cmpsb
jl
mov
lods
les
xchg
mov
push
in
mov
fs
mov
push
add
stos
leave
aas
sbb
mov
cli
xlat
div
stos
aaa
push
testb
and
sbb
lahf
in
push
sbb
jnp
call
xor
enter
sbbb
fimuls
sbb
pop
test
shlb
mov
lcall
push
lahf
push
adc
dec
pop
adc
mov
add
fwait
xchg
lds
add
cmc
rcrb
data16
lret
cmp
sbb
sarl
jbe
inc
inc
adc
jl
imul
jge
xchg
mov
ljmp
lret
dec
cmpsl
shll
xchg
adc
das
out
fs
dec
sub
mov
xchg
or
jno
fucomp
or
and
repz
faddl
movsb
sbb
dec
cmp
jge
outsl
mov
enter
push
jne
out
in
mov
or
adc
xor
push
fwait
aas
mov
in
or
mov
add
popf
xchg
popa
aaa
xchg
shrb
push
clc
add
and
mov
sbb
cmp
mov
xor
loop
mov
mov
push
mov
popa
mov
repz
enter
fldcw
movsl
jmp
xor
push
push
xchg
push
jnp
ss
sub
dec
mov
cmpsl
in
test
stos
pop
push
ret
and
repz
sbb
add
push
jmp
sub
iret
outsl
je
cli
orb
int3
aam
adc
dec
loop
in
adc
and
push
adc
mov
imul
mov
cmc
icebp
xchg
sbb
cmpsl
cmp
mov
dec
in
xchg
insb
xor
pusha
inc
cltd
mov
or
lds
shll
clc
mov
mov
out
loope
inc
push
aaa
outsl
repz
cltd
sti
mov
push
in
dec
test
jbe
push
gs
shlb
xchg
jl
jne
mov
and
cmp
xor
lea
mov
and
cmp
data16
dec
daa
fstps
repnz
movsb
mov
push
or
dec
jmp
mov
test
in
in
addr16
mov
insl
push
jne
scas
dec
pop
mov
dec
bound
addb
aaa
mov
inc
imul
push
lea
leave
adc
call
lock
mov
pop
xchg
and
sbb
push
xor
movsl
cmp
ss
fsubl
das
cmpsb
fstpl
fcmovne
mov
pusha
dec
inc
lret
push
sub
movsl
xorl
out
mov
mov
push
movsl
cmp
cltd
loope
inc
ja
mov
mov
xchg
mov
push
xchg
cltd
push
jl
movsb
inc
loope
or
pushf
inc
sub
arpl
imul
sub
insb
sahf
lock
stos
mov
je
arpl
loopne
lock
push
pop
jecxz
ja
xchg
stc
push
imul
jmp
ret
stos
or
lock
fisttps
aas
stos
add
mov
aad
mov
test
fcompl
and
add
test
inc
pop
sub
add
mulb
stos
mov
out
xchg
mov
push
mov
subl
imul
es
movsl
leave
pusha
pop
dec
jae
inc
inc
xor
cld
pop
cmp
jbe
lret
push
roll
fidivrl
or
xlat
pop
into
es
jp
pop
aas
xor
pushf
insl
addr16
pop
ret
ljmp
lock
jp
repz
fnstenv
in
ss
sbbb
not
mov
fnstenv
bound
imul
jg
push
pop
lretw
movsb
data16
stos
in
mov
adc
dec
lret
lahf
sub
sahf
sub
or
addr16
xchg
fcmovb
jecxz
inc
fisttpl
sbb
ljmp
mov
in
pop
and
ficoms
inc
sti
shlb
mov
lods
loopne
inc
je
aad
pop
jg
les
rolb
cmp
jo
loop
sbb
lahf
movl
ja
xchg
dec
cs
popf
mov
and
jbe
movsl
mov
mov
push
cmc
arpl
out
jl
pop
push
xor
stc
inc
jl
mov
fwait
mov
mov
xchg
jmp
push
xchg
push
sar
add
pop
nop
xchg
fnclex
dec
mov
into
cmc
lods
int3
mov
jo
aaa
or
movsb
ja
mov
rorb
lret
push
ret
in
push
mov
ja
popa
sub
xchg
loop
test
push
pushl
hlt
and
in
or
divl
cmc
dec
rclb
movsb
sbb
daa
inc
arpl
mov
jg
dec
mov
cmp
mov
into
test
les
push
pop
movsb
pushf
adc
cmc
mov
pop
mov
stc
addb
inc
outsb
jb
jne
outsl
ja
xchg
dec
cmpsb
aas
rcrl
clts
push
mov
icebp
lahf
stos
cli
mov
or
repz
xchg
pop
icebp
add
inc
cmp
cs
call
in
enter
loopne
add
int
lods
adc
scas
inc
stc
lds
dec
xchg
xor
dec
call
xlat
inc
aam
adc
sbbl
or
add
xchg
out
nop
pusha
pop
xchg
push
mov
loop
jl
pusha
sub
aad
push
mov
push
jns
xor
xor
jmp
incl
addr16
and
pushf
push
or
scas
add
pmulhuw
sbb
mov
mov
repz
adc
mov
sub
pop
adcl
jns
xchg
mov
xchg
femms
mov
loopne
xor
mov
insl
add
mov
inc
popf
xchg
aam
push
lods
push
test
jns
mov
int
lahf
stc
mov
shlb
cmp
mov
scas
jno
cmpsl
adc
iret
push
jno
rclb
bound
push
loope
lods
imul
data16
popf
clc
lods
xorb
flds
or
xlat
mov
xchg
repz
popf
aad
movsb
cmpsb
inc
cltd
and
xor
push
imul
cltd
aaa
das
sbb
hlt
andl
mov
int
aam
data16
lahf
scas
nop
loopne
dec
jae
jl
test
xor
dec
out
shlb
addl
fcmovne
cmpsl
inc
jno
scas
mov
popf
andl
push
sub
loop
in
int
or
lods
cmpsl
push
lock
cwtl
pop
xlat
jno
xchg
sbb
push
test
and
nop
sti
movsb
cmp
xchg
jne
and
pop
adc
je
or
push
inc
push
xchg
js
push
add
cmpsb
jno
xor
movsb
pop
rcll
adc
mov
add
jae
push
loopne
clc
hlt
mov
ss
test
out
inc
and
movsb
mov
out
std
inc
mov
pop
lcall
cli
mov
inc
mov
cmp
pop
sbb
pop
push
ljmp
dec
xor
push
sub
push
test
outsb
push
aad
lret
push
loope
xchg
jbe
dec
mov
mov
cmpsb
jne
outsb
jecxz
les
lret
mov
add
data16
ljmp
push
addr16
push
mov
and
push
adc
mov
fbstp
pop
mov
stos
sbb
add
pushl
xor
int3
jp
xor
lahf
sbb
sub
mov
test
jbe
fnstsw
in
fists
sti
out
push
test
cmp
inc
mov
or
push
inc
or
stos
mov
insb
jmp
imul
scas
jp
push
add
or
jb
movl
ss
sbb
aad
ss
test
fwait
outsl
mov
mov
sbb
add
dec
ja
ljmp
hlt
das
rolb
mov
fsubr
int3
jnp
add
mov
out
popf
xchg
mov
cmp
jl,pt
inc
push
cmpsb
imul
lock
push
fcoms
int3
sub
cmp
ja
mov
std
fs
mov
mov
mov
ja
mov
adc
fpatan
loope
xchg
fdiv
or
xchg
jp
mov
push
shll
pop
stc
mov
and
jmp
lods
loopne
adc
sub
lcall
inc
push
bound
sbb
fisubrs
movsl
int
mov
mov
jnp
movsl
scas
lret
imul
jg
mov
jo
xor
je
lahf
mov
loop
stc
pop
jns
xchg
shll
add
sbbb
pop
cmpsb
ljmp
add
lret
add
mov
or
or
repz
repnz
or
lcall
dec
aad
pushf
jb
bound
push
jle
add
adc
mov
cmp
inc
cmp
dec
adc
mov
jb
cmp
or
push
test
cmp
sbb
push
pop
cli
add
nop
popa
iret
sbb
sbb
dec
pop
dec
imul
andl
mov
jns
out
repz
or
outsl
imul
lock
mov
cmp
filds
push
mov
mov
mov
sbbb
pop
fnsave
pop
mov
ljmp
dec
xor
xchg
ds
imul
push
xor
add
subl
push
jb
mov
adc
jns
lahf
std
negl
inc
cmp
inc
push
xrelease
and
clc
shl
sub
inc
cltd
add
xor
pop
stos
inc
sbb
sub
xchg
mov
jnp
push
mov
into
push
pop
inc
lahf
mov
mov
sahf
push
sub
sbb
dec
mov
pop
mov
xlat
sbb
andl
std
or
into
xor
loop
sbb
mov
push
cmp
push
iret
cmp
andl
in
and
aaa
or
and
lds
cli
cs
cwtl
mov
xor
or
sub
cli
cmp
push
ljmp
addr16
call
inc
sbb
pop
pop
scas
mov
xor
sub
adc
push
bound
cmpsb
and
imul
mov
lret
xlat
push
lods
dec
inc
sahf
enter
jmp
mov
lretw
sub
inc
jbe
mov
lock
xor
gs
test
cld
cs
mov
sub
aaa
pop
add
ljmp
jb
iret
in
push
enter
xor
push
mov
dec
sbbl
aas
dec
test
es
push
in
mov
hlt
mov
lret
int
mov
cmp
and
xchg
divb
pop
dec
sti
jno
jmp
push
dec
test
into
std
sub
sub
aas
rcrb
in
test
inc
adc
js
and
scas
jl
and
mov
xchg
push
testl
scas
cmpsl
cmc
lret
stos
xor
sarb
pusha
sub
cltd
stos
clc
jp
pop
or
mov
add
xchg
negb
pop
xor
fstl
inc
shl
mov
cmp
lcall
les
clc
aaa
les
push
xchg
xor
std
in
sbb
push
and
cmpb
dec
mov
out
adc
xchg
arpl
sub
sub
cmp
scas
test
clc
or
adc
decl
fisttpll
lret
xchg
inc
mov
rcll
insl
scas
push
push
lret
loope
mov
pop
cmpb
imul
cmp
pop
icebp
sar
insl
out
in
pop
xor
add
mov
push
enter
adc
jge
pop
movsb
mov
lods
out
sti
inc
jne
insl
inc
in
adc
pusha
mov
xchg
fists
pop
ljmp
fidivrl
rcll
jmp
push
repnz
clc
fwait
sbb
cltd
out
pop
aam
push
cli
das
rcrb
xor
fsubrl
push
insb
lret
mov
dec
fs
inc
xchg
repnz
fmul
lods
lcall
test
cmp
mov
pop
int
fs
rcl
int
push
leave
push
mov
add
stos
mov
push
and
jno
lods
xchg
dec
enter
pop
jns
pop
out
cmp
jp
pop
add
bound
cwtl
cmp
call
movsb
adc
fsts
xchg
iret
mov
adcl
out
push
push
pop
or
inc
mulb
xchg
jmp
jo
sbb
lahf
repnz
popf
adc
loop
data16
xor
xchg
fdivrl
add
xor
jmp
pop
mov
xchg
mov
hlt
fimuls
sbb
and
lock
insl
repz
mov
sbbb
mov
subl
mov
inc
and
into
xor
aas
fcoms
iret
push
ja
cmc
jmp
bound
aas
jl
in
lods
aas
pop
jnp
repnz
dec
addr16
mov
movsb
aad
inc
mov
lods
pushf
xchg
dec
in
dec
mov
les
div
aam
sub
or
cmp
fstpl
mov
jno
push
shlb
stos
arpl
push
lcall
adc
jae
hlt
stos
and
sub
xchg
popf
mov
jl
adc
xor
in
jne
rcl
adc
fcoms
shl
inc
iret
jle
je
and
jo
icebp
push
int3
xor
fmull
adc
pop
add
jg
pop
in
pusha
out
dec
add
inc
fldenv
mov
loop
xor
adc
in
scas
aam
cmp
aam
pop
xor
cwtl
push
adc
pop
cmp
notb
xchg
dec
adc
mov
iret
cmc
push
add
or
dec
leave
lds
test
loopne
push
adc
xchg
or
insb
jp
pop
ret
or
inc
in
imul
outsb
out
dec
shlb
xor
fdiv
add
clc
cmp
cmp
inc
shrl
out
mov
jae
lea
mov
or
mov
test
adc
jnp
xor
xor
leave
call
push
or
pop
jns
adc
imul
ljmp
rep
or
lret
loopne
jmp
sbb
lock
gs
mov
mov
in
pusha
add
dec
mov
pusha
jae
push
dec
adc
sbb
push
mov
out
fldcw
int3
inc
ror
mov
xchg
jecxz
sub
sbb
leave
rclb
xor
and
mov
jns
mov
pusha
fcmovb
push
lea
rorb
sub
pusha
arpl
mov
mov
mov
movsl
orb
in
lods
add
push
adcb
lds
fcoms
xchg
iret
loopne
mov
xchg
loopne
iret
cmp
cwtl
outsl
xchg
pop
sbb
sub
les
mov
cmp
aam
pop
and
daa
dec
or
jo
mov
xlat
out
jecxz
mov
sub
mov
mov
fisttpll
xchg
or
jnp
out
fwait
cmp
jl
pop
pop
sub
dec
loopne
mov
sti
jge
cwtl
ret
sti
push
dec
add
adc
imul
mov
adc
cltd
inc
div
jecxz
lret
cmp
lahf
fidivs
cmp
jmp
mov
jbe
inc
mov
lret
movd
clc
xchg
and
cmp
jo
adc
hlt
inc
adcl
mov
int3
sub
and
jle
aam
lods
fimuls
mov
sub
mov
sub
data16
stos
int
cmpsb
addr16
mov
and
mov
fsubr
pop
js
mov
fldenv
sahf
inc
mov
push
cltd
nop
dec
mov
popl
bound
push
fiaddl
xor
mov
test
inc
sub
dec
jmp
movsb
add
mov
outsl
push
adc
or
dec
xor
scas
add
dec
fdivr
mov
int3
jbe
and
push
into
outsl
jne
xor
push
and
add
sbb
mov
xchg
pop
push
pop
push
mov
xchg
pop
or
sbb
inc
es
aas
jge
mov
leave
int3
popf
cmp
aas
fiadds
clc
xchg
sub
aam
dec
inc
mov
push
inc
dec
scas
cli
imul
pop
inc
pushl
movsl
push
rcr
out
push
dec
repz
mov
dec
pop
outsl
mov
mov
scas
and
jns
xchg
jl
or
xlat
fsubl
pop
shll
pop
jbe
fimull
add
cmp
mov
cmpb
push
pop
fistps
mov
inc
mov
fistl
cltd
pop
add
enter
mov
icebp
repnz
arpl
mov
outsl
fs
mov
rcrl
push
rsqrtps
lahf
adc
adc
lahf
pop
and
fs
xchg
in
fninit
jae
pop
mov
pop
fwait
cli
je
test
in
outsl
pop
push
lock
xor
push
loope
xchg
cmp
jge
mov
mov
fbld
ror
inc
inc
pop
dec
dec
cwtl
lea
jbe
jmp
push
fimuls
fsubr
inc
loope
cmpsb
data16
mov
mov
arpl
shrb
call
jns
jb
clc
mov
dec
pop
outsl
jne
popl
xor
insl
mov
test
pop
test
stos
push
push
sbb
pop
dec
adc
jecxz
jb
sbb
pop
jg
hlt
cmp
pop
mov
das
adc
pslld
in
xchg
cltd
jg
lahf
sub
in
adc
dec
das
scas
std
test
dec
sub
mov
mov
jns
ljmp
sahf
jmp
jle
into
pop
or
mov
mov
mov
das
pop
clc
test
push
inc
inc
jae
imul
cli
sahf
xchg
aam
mov
xor
lcall
sbbl
jge
and
fldcw
push
jae
out
out
aaa
in
push
cmp
mov
xchg
mov
jle
and
movsb
add
lahf
xor
icebp
outsb
or
int3
jecxz
dec
jae
in
repnz
or
out
jno
int
sti
push
dec
in
jmp
dec
test
xchg
adc
cmp
cmpsb
pop
fbstp
or
ss
fs
imul
ret
es
jmp
mov
jmp
enter
xchg
dec
into
adc
or
pusha
jmp
mov
ss
movsb
mov
jp
mov
or
jl
jmp
dec
outsl
in
loopne
push
inc
inc
mov
xchg
mov
andb
adc
or
sbb
add
jne,pt
pop
pop
lret
dec
and
jb
test
add
sub
xor
add
and
shrb
inc
adc
stos
xchg
in
and
push
test
dec
arpl
rcr
xor
adc
pop
mov
jl
fldl
out
or
push
sbbl
jns
out
dec
xchg
lods
loopne
jne
xor
xor
sahf
add
movsl
call
xchg
pop
sahf
pop
jmp
scas
dec
addr16
dec
adcb
loop
mov
fidivrl
data16
js
add
add
sbb
inc
sbb
into
out
loopne
pusha
and
mov
cld
xchg
xchg
mov
rcrb
sbb
int
adc
mov
shlb
aaa
dec
ret
adc
dec
cmpsb
sub
push
imul
dec
in
dec
xchg
inc
sub
gs
in
pop
jg
test
arpl
pop
adc
nop
mov
rorb
pop
stc
fucom
nop
test
loope
inc
mov
dec
jbe
icebp
insb
dec
or
and
or
sbb
mov
faddp
shrb
enter
aam
mov
int
mov
shlb
push
sub
or
add
jne
lcall
cmp
adc
popf
pop
add
loop
daa
and
mov
and
xlat
jb
iret
aaa
nop
clc
mov
adc
xchg
xchg
shrb
sahf
int
cli
xor
and
mov
xor
dec
sub
jecxz
cmp
add
data16
jnp
push
jnp
fdivl
ja
fisubrs
into
es
xchg
push
push
cld
stc
aad
in
mov
pushf
cmp
dec
push
call
js
inc
mov
movsb
testb
icebp
push
inc
mov
cmp
es
in
xor
dec
adc
jle
out
sbb
hlt
jnp
xor
mov
push
aaa
jns
push
mov
adc
sbb
lods
sbb
inc
mov
adc
pushl
ret
dec
insl
shrl
fcompl
mov
divb
push
jl
sub
dec
fldl
push
jne
and
jmp
mov
cld
sub
xchg
jl
xor
fwait
test
mov
cltd
fdivs
xor
cmp
push
xor
out
shlb
dec
pop
test
sub
add
dec
dec
rolb
iret
aam
mov
test
inc
mov
mov
adc
add
cmp
xchg
stos
push
in
fdivs
inc
iret
xchg
xor
mov
sbbb
sbb
cmp
xlat
xor
lret
and
js
or
mov
xor
leave
mov
push
cmp
imul
lods
sahf
mov
mov
pop
nop
push
or
and
jae
sub
xchg
ds
jnp
loope
xchg
test
and
loope
mov
hlt
fnstcw
push
out
addl
incb
and
out
jbe
mov
add
mov
lods
dec
dec
xchg
jo
push
rol
pop
out
cmp
stos
jnp
jge
fwait
ret
xorb
mov
dec
test
call
jle
jge
sbbb
cwtl
popf
inc
incl
fldenv
or
test
cmpsb
fwait
int
popa
lds
les
hlt
push
pop
or
imul
call
call
sub
loope
loopne
xchg
lock
test
sti
sti
arpl
shll
lods
cmc
mov
iret
xor
int
inc
in
add
xor
rorl
je
mov
hlt
push
lods
mov
mov
fst
ja
xchg
test
push
test
shll
pop
shlb
pop
aad
es
push
and
aam
addr16
add
xchg
add
inc
push
testb
cmc
push
jmp
shl
mov
sbb
aaa
xchg
dec
or
in
ja
lret
inc
sbb
movsb
cmp
jno
pusha
sbb
rcl
cmp
add
sbb
xlat
mov
push
push
rcl
xchg
lret
inc
inc
fmuls
mov
add
scas
inc
or
jbe
shlb
pop
jns
and
fs
jle
dec
fnstenv
ficompl
mov
ret
push
insb
sbb
aam
lods
clc
pop
mov
cmp
add
xchg
sub
int
pushl
pop
pop
ret
jmp
insb
add
or
inc
sbb
mov
shl
jbe
mov
push
shl
sbb
inc
pop
cmp
sub
cmp
or
das
loope
pusha
fimull
in
inc
push
ret
fnstcw
dec
pop
push
les
js
sbb
orb
icebp
movsb
cmp
dec
cmc
sti
popl
mov
fdiv
xchg
mov
fdiv
jecxz
mov
cs
rclb
cli
mov
rcrb
jb
icebp
adc
lret
stos
outsl
lock
and
sub
mov
pop
inc
dec
enter
jg
cld
fidivrl
inc
stos
adc
in
aad
dec
mov
push
pop
push
pop
testb
mov
outsb
xchg
lcall
sbb
js
add
lods
sub
sub
add
mov
ds
jmp
imul
dec
lret
and
loop
aam
leave
adc
sbb
push
or
out
push
cmp
xor
sbb
mov
add
adc
inc
lret
push
stc
ret
arpl
inc
add
push
inc
dec
inc
push
andl
mov
mov
testb
mov
out
mull
icebp
push
dec
in
cmp
or
mov
cmpsb
test
inc
push
jbe
repnz
js
cmp
sti
cmc
cmp
loope
movsl
cs
popf
jne
xlat
jge
ljmp
and
repz
in
inc
sbb
mov
addr16
sbb
sbb
sub
xchg
je
das
inc
loope
mov
xor
in
xchg
testl
cmp
cmp
xchg
jno
test
ret
or
inc
dec
dec
dec
cmp
mov
pop
pop
xor
cmp
out
jle
lret
add
inc
adc
cli
mov
push
inc
dec
jbe
or
push
and
and
outsb
xchg
pushf
ret
insl
stos
adc
and
jp
sarl
and
shl
fwait
aaa
and
nop
das
ds
lock
sbb
and
int3
or
bound
and
fistl
mov
cmp
jne
ljmp
fldt
int3
xor
daa
add
test
in
hlt
mul
adc
popf
adc
out
cltd
cmpsb
fsubl
mov
dec
mov
mov
mov
aas
mov
cs
jmp
sub
mov
pop
std
movsb
xchg
scas
fldcw
dec
pop
push
addl
clc
pop
jbe
out
fistl
ret
outsb
sub
imul
push
inc
loopne
sub
or
pushf
sbb
jno
mov
out
inc
cmpsl
in
sbbb
outsl
sbb
mov
and
ljmp
ja
cmp
daa
ret
jg
add
pop
push
and
mov
add
orl
data16
adc
mov
jg
gs
shl
cld
inc
sbb
fnstenv
pop
es
sbbl
popa
aam
inc
pusha
mov
mov
cmpsb
cmp
sbb
pop
sub
ja
sub
out
jae
rcll
ficompl
push
sub
pop
jae
js
fstpl
fldl
push
or
loop
jo
or
roll
lret
jo
sub
push
pop
cmp
mov
push
outsb
aam
aad
dec
cli
adc
push
xor
fisubl
and
mov
test
sbb
loop
jae
cld
dec
rorl
insb
mov
push
add
xlat
icebp
add
adc
sub
jle
mov
leave
loop
jmp
les
sub
ret
dec
mov
in
test
jge
xor
cmpsl
data16
mov
inc
das
dec
or
mov
sti
mov
sub
cltd
and
and
push
lods
fadds
sbb
sbb
test
test
xor
mov
jbe
jmp
pop
adc
pop
sub
rorb
retw
nop
mov
repnz
mov
cli
push
xchg
jns
or
ss
gs
dec
stos
pusha
jo
pop
popf
ret
mov
cmp
mov
jae
das
lock
mov
xchg
sbb
aad
addl
mov
out
sbbl
cmc
invd
mov
cmp
sbb
sbb
fwait
push
mov
out
sub
std
lret
movsb
mov
lds
mov
pusha
ret
push
adc
icebp
enter
jecxz
shrl
arpl
push
add
mov
xchg
or
xlat
xor
push
loop
cmp
jge
imul
outsl
xor
stos
push
pop
das
in
jg
add
sub
pusha
push
int
adc
xchg
xor
jge
ret
aam
adc
jge
ljmp
xor
mov
out
or
jb
lret
loop
xlat
js
xlat
aaa
mov
in
popf
insl
imul
mov
dec
cli
jecxz
push
lds
ja
rorb
orb
cmp
and
add
mov
fs
inc
in
js
adc
fcmovu
lods
sub
add
mov
jmp
sub
mov
xlat
in
popf
pop
pusha
jecxz
sahf
lret
or
mov
fwait
enter
cmpsb
mov
int3
nop
mov
repz
or
pop
mov
ficoml
xor
test
ss
loope
and
jb
dec
dec
pushf
jmp
mov
jmp
cmp
xchg
jle
push
dec
mov
lods
movzbl
cmc
lods
sub
xchg
pop
inc
pop
fsubl
fdivrs
daa
mov
and
pop
or
or
ret
ja
out
arpl
outsb
scas
cmp
push
and
xchg
cmp
xchg
fimuls
jle
xor
out
mov
ret
or
mov
lret
idivb
outsl
test
aam
mov
sub
js
jne
pop
mov
mov
mov
jb
xchg
and
or
jl
push
push
sbb
jp
cmpl
out
test
popf
fwait
xchg
inc
sti
outsl
in
out
scas
ds
xchg
sub
sbbb
cmp
out
jne
pop
aad
lcall
ljmp
loopne
cmp
sbb
iret
cmc
je
mov
enter
lods
outsb
int3
cmpsl
fistl
push
cmpsb
repnz
xlat
push
mov
jns
sbb
pause
inc
jno
mov
fs
lea
jbe
inc
and
push
sbb
in
cld
inc
adc
shrl
out
hlt
lods
test
bound
mov
cmp
enter
stc
mov
jbe
mov
push
mov
cwtl
lea
icebp
arpl
jb
leave
mov
add
and
mov
pop
push
adc
add
test
sbb
xchg
insb
repnz
int3
lret
lcall
pop
in
ret
push
dec
xchg
mov
cmc
in
dec
fs
pop
fcoml
mov
aam
jl
orl
in
shll
stos
dec
push
lods
rolb
aas
adc
dec
aaa
xchg
push
and
mov
mov
inc
add
int3
sbb
bound
xor
and
xlat
xchg
repnz
popa
mov
and
adc
aas
mov
out
sub
rcrl
xor
and
insl
shrl
mov
icebp
lods
rorb
in
pop
out
pop
imul
push
dec
mov
mov
subl
stos
ds
repz
or
mov
repz
jne
test
inc
jmp
mov
js
adc
xchg
stc
ja
jmp
mov
stos
inc
jno
lahf
in
pop
mov
fsubrs
in
lcall
dec
stos
mov
jo
ds
dec
clc
or
mov
fadd
pop
das
icebp
dec
jo
jno
mov
cmc
adc
mov
daa
add
roll
and
cs
cmpsl
adc
mov
push
pop
xchg
jmp
arpl
add
lahf
pop
cmp
cmpl
xchg
inc
ja
jmp
das
mov
setg
sub
inc
shll
je
ficoml
add
push
mov
sub
shl
in
pop
clc
inc
push
xor
ret
push
mov
mov
xchg
inc
inc
mov
daa
nop
lret
inc
xchg
jno
ret
xchg
push
add
pop
mov
ret
adc
aas
dec
xchg
xchg
in
test
bound
sbb
jl
stos
stos
fs
xchg
pop
pop
imul
jb
lcall
stos
cmp
push
jbe
push
clc
fwait
jmp
out
mov
lret
push
mov
sarl
or
jge
les
repz
scas
inc
sub
adc
pop
mov
in
mov
mov
sub
jp
stos
pop
xchg
scas
pop
in
mov
mov
push
sbb
jns
cwtl
aaa
xor
xor
inc
clc
jmp
repz
out
divb
push
dec
mov
outsb
jmp
mov
or
mov
mov
insb
jle
push
pushf
push
xor
test
ds
jmp
dec
dec
or
xchg
jnp
sbb
mov
cpuid
add
icebp
mov
dec
loopne
cmp
js
movsl
xchg
mov
or
dec
or
adc
push
push
add
mov
ret
adc
cwtl
test
aam
cmp
inc
mov
stos
mov
mov
rolb
jmp
and
dec
jl
pop
mov
add
rorb
bound
mov
icebp
push
das
lret
iret
test
dec
das
mov
mov
fnstsw
orl
adc
dec
mov
mov
cmp
push
inc
cmc
out
jle
mov
pop
and
shlb
xor
sbb
call
ss
sub
ja
movsb
jne
push
add
mov
enter
dec
inc
xchg
cmc
sbb
mulb
jbe
hlt
push
push
aam
xchg
jns
sbb
sti
or
rolb
mov
xchg
sub
fsubp
out
mov
push
jle
adc
fbstp
icebp
cmpsb
and
fdivl
jbe
pop
xor
xor
out
xchg
pop
push
insb
jb
jmp
test
push
cmp
repz
nop
mulb
rorb
jecxz
movsb
push
shll
mov
fildll
sbb
outsb
push
inc
in
sub
imul
push
pop
push
pop
std
mov
xor
fidivrl
movsb
adc
inc
jne
lret
sub
mov
cmpps
sbb
popf
push
nop
insb
test
lock
mov
cmp
test
inc
push
cltd
sahf
push
test
jnp,pt
divl
jo
xchg
cltd
inc
enter
sbb
call
loopne
push
les
sbb
mov
sbb
andb
aad
sbb
xor
sbb
sub
pop
aaa
imul
push
test
std
jmp
mov
insb
test
lahf
push
push
jno
fstps
adc
or
mov
push
repz
aas
fdivr
inc
test
into
cmp
and
xor
lea
mov
push
pusha
enter
cmpsb
gs
scas
aas
imul
testl
mov
jb
andl
sub
xor
mov
mov
or
lock
push
test
stos
mov
dec
bound
testb
imul
cld
loopne
push
arpl
cmp
stos
mov
and
push
xor
push
xchg
cwtl
insb
cli
and
jne
pop
cld
dec
shl
aas
jnp
pusha
dec
mov
sub
stos
cwtl
xchg
sarb
inc
xchg
adc
cli
xor
jle
mov
popa
call
add
fbld
jg
fsubp
je
mov
lds
stc
rcrb
adc
xchg
fisttpll
mov
sub
jge
mov
mov
scas
jle
sysenter
out
dec
jbe
repnz
or
inc
dec
push
mov
or
or
xor
mov
je
mov
jne
cmpsl
and
mov
lods
pop
arpl
cmp
sbb
ss
or
push
mov
lods
adc
or
popa
outsl
adc
sbb
mov
mov
rorb
out
jns
ja
jnp
pushf
jp
or
addr16
mov
movsl
and
in
lret
shlb
aad
pop
sbb
shll
pop
fisubrl
dec
cmp
pop
in
sbb
mov
rorb
mov
adc
dec
sub
in
inc
add
push
rolb
lret
frstor
ret
and
sbb
mov
stc
pushf
jb
add
cltd
pop
push
pop
les
das
pop
cmc
dec
pusha
aas
or
imul
aas
pop
inc
iret
scas
jae
aaa
push
in
nop
mov
lds
jp
push
pop
lods
outsl
adc
and
adc
fs
pop
hlt
and
les
cmpb
sub
jb
aad
xchg
test
jne
fadds
insl
ljmp
inc
or
dec
mov
repnz
mov
cld
sbb
dec
jbe
sub
pop
movsb
daa
adc
mov
sbb
iret
sub
mov
out
mov
xor
sbb
sub
dec
mov
and
ss
add
sbb
inc
aad
xchg
xchg
repz
aam
xlat
add
mov
in
add
pusha
out
hlt
jae
lods
adc
jb
repnz
sub
or
mov
sti
push
test
movl
pop
mov
or
inc
cld
aaa
or
adc
aas
loopne
cmp
addl
push
loopne
jns
sub
sub
hlt
sbb
stc
sbb
stos
addl
fwait
insl
xlat
mov
inc
inc
aaa
mov
xor
inc
aas
sub
adc
or
iret
jo
mov
push
jg
lret
inc
dec
data16
rcl
inc
lret
fcmovb
imul
movsb
mov
lret
mov
js
out
fidivl
push
jno
decl
sahf
xchg
inc
push
std
push
sbb
fcomp
out
or
mov
mov
movsl
mov
or
mov
flds
cmpsl
outsb
xchg
sahf
pop
jbe
fistpll
cmp
rclb
xor
dec
ficoml
sub
hlt
or
scas
adc
jae
cltd
movsl
flds
shl
inc
or
dec
add
jb
add
scas
insl
inc
mov
das
enter
aaa
cwtl
push
mov
xchg
mov
test
mov
ds
jno
sub
mov
jns
sub
mov
or
cmp
xchg
sub
inc
inc
das
push
faddl
jns
pop
icebp
xor
jp
loope
pop
int
mov
jl
cli
cli
test
test
inc
cmpsl
stc
mov
xor
adc
aam
in
pop
pushf
loopne
push
xor
je
mov
pop
lods
out
mov
repz
mov
es
mov
test
sub
xchg
cmp
outsb
outsl
mov
outsl
popa
or
sbb
jno
push
in
enter
test
jg
mov
xchg
fstps
hlt
pop
aam
adc
imul
and
jl
mov
pop
and
mov
xlat
fsubl
jecxz
mov
arpl
dec
pop
mov
xchg
outsb
pop
add
les
cmpsl
xor
clc
push
rcrb
ret
aas
cld
cltd
mov
xor
stos
push
ret
jle
mov
mov
loope
sub
pop
and
jle
shrl
les
dec
xchg
fistpll
and
aas
cmp
test
sbb
fcom
enter
or
mov
xchg
and
add
pop
jmp
ficomps
call
das
shrb
and
xchg
daa
inc
loope
dec
fisttpl
mov
mov
mov
mov
repz
fs
jle
sbb
and
popf
test
rcrl
dec
or
sbb
cltd
ret
mov
add
xor
enter
ss
fsubrl
ret
or
jne
dec
js
movsb
push
mov
lcall
loop
in
cmc
jmp
jecxz
rclb
ljmp
mov
test
mov
adc
jno
jmp
inc
inc
and
pop
pop
test
or
pop
xor
sub
hlt
mov
xorl
imul
inc
mov
mov
mov
stos
cmp
mov
mov
loope
cmc
loopne
enterw
jl
xor
sbb
adc
gs
sub
sbb
stc
inc
stos
and
sbb
out
mov
test
cmpsb
sbb
test
fs
pop
clc
pusha
lds
ss
cmp
arpl
adc
jecxz
mov
pop
inc
jle
jns
mull
and
addb
lret
xchg
stos
mov
or
mov
xor
jmp
mov
push
outsl
mov
mov
adc
vpmovsxbw
xchg
lret
xchg
push
inc
orb
mov
dec
or
iret
mov
inc
dec
push
ja
ficomps
cmpb
addr16
je
je
mov
pop
cmp
fisttpll
push
sub
add
inc
jb
fwait
cmp
cltd
inc
or
inc
popa
or
nop
in
data16
ljmp
xchg
mov
std
in
adc
inc
add
movsl
imul
dec
sbb
or
movsb
cmpsl
enter
dec
jnp
inc
rorb
movsb
lods
in
xor
inc
inc
sti
xchg
push
out
sub
cld
mov
cltd
out
mov
lldt
div
loop
pushf
add
sbb
xchg
inc
jnp
mov
xchg
scas
int
jb
add
xor
imull
in
adc
xchg
jo
add
out
rcll
stos
sub
aas
mov
ret
lcall
movsb
xchg
inc
pop
stc
pop
insl
movsb
shl
pop
emms
xor
and
sbb
sbb
ds
ja
mov
xlat
inc
in
popa
stos
sahf
enter
jecxz
mov
jbe
lods
into
arpl
xchg
movb
scas
or
in
into
mov
je
adc
sbb
mov
adc
dec
loope
aaa
in
in
icebp
xchg
ljmp
subb
inc
int3
dec
imul
icebp
ret
xlat
pushf
out
push
test
insl
leave
lret
out
pusha
mov
xor
xor
cmp
jbe
and
mov
xchg
xrelease
pop
mov
or
cltd
std
xor
int
sbb
rcl
adc
call
inc
and
fcomip
adc
pop
pusha
scas
sub
fsubl
add
jle
aam
pop
lods
xor
push
lds
test
clc
outsb
xchg
popa
mov
shl
arpl
add
mov
sbb
xorl
lret
dec
out
in
mov
mov
push
dec
add
ja
add
adc
mov
aad
pop
ret
outsl
es
gs
cmpsl
sub
lods
jbe
arpl
and
notb
push
or
cmpl
arpl
inc
mov
imul
push
pop
std
xchg
repnz
sti
dec
loopne
ds
mov
test
iret
es
aam
adc
cwtl
xchg
xchg
scas
lcall
dec
lcall
jl
ret
xchg
idivl
xor
jne
cmp
cli
pop
adc
inc
mov
mov
repnz
push
and
mov
mov
mov
pop
pushf
leave
out
add
test
xchg
jp
sub
add
inc
aaa
adc
add
arpl
repz
lret
test
or
adc
icebp
xlat
xchg
xchg
add
xchg
ds
into
ret
adc
movsb
gs
mov
mov
and
and
ljmp
mov
das
nop
dec
jnp
lret
movsl
in
and
pop
out
pop
and
mov
or
pop
movsl
jecxz
sets
test
subl
test
aad
sub
insl
cwtl
or
shlb
mov
js
or
push
lods
pop
mov
jno
jo
sbb
xor
fcomi
ret
popa
es
daa
pop
cmp
call
loop
push
aam
cli
xor
pop
push
jb
inc
dec
ret
enter
aaa
and
jle
mov
mov
jl
cs
inc
adc
jg
and
aam
test
xlat
stos
aad
push
add
out
incl
stc
fildl
cmpsl
int
stos
loopne
in
push
test
ret
or
int3
or
adc
call
xor
nop
ss
ss
xchg
xor
stos
sub
xchg
bound
out
cmp
mov
xlat
aas
push
stos
sub
sub
sub
mov
sbb
cs
mov
sub
mov
in
xchg
test
leave
mov
out
rcrl
mov
add
pop
cld
idivl
jge
cmpsl
push
mov
add
mov
shll
cmpsb
adcl
jno
mov
lea
stc
data16
stos
movsl
ret
sbb
aam
cld
movsl
iret
test
jno
pop
outsb
leave
rclb
adcl
stos
sub
dec
cmpsl
mov
aam
shll
xchg
jl
dec
ds
fistps
icebp
pop
into
cmp
lret
push
push
lds
mov
pop
push
cmp
mov
jnp
mov
pop
push
rorb
scas
test
sbb
lahf
push
xchg
or
ss
and
rcll
and
jo
push
push
orb
test
and
cmp
pushf
inc
xchg
or
lahf
sub
mov
add
mov
dec
jp
push
pop
fstl
sbbl
inc
mov
sbb
sub
ret
xchg
adc
je
sbbl
iret
jnp
mov
mov
bound
inc
and
or
icebp
xor
or
or
mov
and
mov
ficomps
mov
mov
scas
and
adc
inc
jmp
lcall
jne
add
inc
and
add
sbb
inc
ljmp
inc
and
dec
cmp
pop
or
loopne
scas
mov
lea
in
in
mov
mov
push
test
mov
mov
or
jb
inc
pusha
test
dec
sbb
inc
jo
dec
jl
dec
movsl
xlat
shl
insb
dec
gs
dec
mov
mov
inc
xor
sarb
inc
sub
or
mov
mov
setg
fcos
push
dec
and
loop
cmp
movsl
jb
das
imulb
jp
adc
stos
jae
mov
imull
es
loop
fsubl
dec
pop
ljmp
das
aaa
and
outsb
leave
mov
push
popa
inc
repnz
mov
ret
ja
xor
popa
jo
and
mov
mov
sti
sarl
mov
mov
addb
fstpt
js
lods
bound
pop
int3
jl
xchg
or
hlt
adc
jl
cld
mov
mov
je
ss
enter
sub
inc
push
test
decb
and
xor
into
sbb
data16
mov
in
xchg
fbld
sub
push
and
ret
mov
movsb
jp
in
mov
dec
mov
nop
pop
mov
xchg
mov
cwtl
inc
adcb
popa
cs
dec
in
mov
dec
pop
mov
clc
mov
xlat
push
add
jecxz
outsl
push
insb
cmp
out
pop
and
inc
cld
sub
icebp
sbb
cltd
adc
hlt
scas
cmp
sbb
test
adcb
jp
fisttps
adc
push
in
shl
jl
fs
ret
sbb
les
movsb
jmp
mov
notl
dec
dec
jno
rolb
push
dec
outsl
sbb
inc
roll
jne
adc
enter
push
and
scas
jno
nop
fwait
ds
in
ror
les
xchg
fs
fcoms
mov
inc
popa
mov
aad
sarl
cmp
jp
and
pop
mov
jmp
dec
scas
and
add
add
mov
adc
cmpsb
mov
cld
mulb
xchg
loopne
cmp
push
ss
sub
loop
stos
fs
mov
stos
lock
add
int3
cmpsl
cwtl
shll
adc
dec
mov
add
arpl
adc
clc
shlb
xchg
pop
mov
nop
cmpsb
call
out
adc
push
xchg
fwait
das
data16
lods
add
scas
pop
ljmp
cmp
sub
repz
cmp
scas
fistl
push
sub
mov
xchg
xor
xor
mov
add
pop
adc
loope
imul
loopne
arpl
lods
push
leave
and
or
test
fs
outsb
daa
lock
add
adc
xchg
sub
imul
ret
mov
add
das
sub
aam
movsl
enter
sub
xchg
scas
jb
cltd
lahf
ret
or
subl
ss
icebp
adc
add
nop
mov
andl
dec
dec
push
enter
jle
notb
add
inc
jmp
jns
sub
aaa
push
adc
hlt
imul
ficoms
adc
jg
filds
mov
adc
lahf
imul
pop
sub
push
cltd
lahf
popa
scas
hlt
in
addr16
pop
pop
dec
or
jbe
add
fs
xor
in
mov
sbb
mov
pop
fcoms
jge
imul
jns
gs
sbb
out
ret
es
jge
jg
mov
je
sub
addr16
cwtl
popa
push
imul
pop
or
jecxz
xorl
push
jo
adc
mov
jecxz
mov
add
mov
xchg
or
outsb
ret
fadds
push
ret
lret
jl
ss
push
xchg
cld
clc
aad
in
jae
inc
cmpb
cmc
loope
mov
mov
setge
icebp
and
sub
repnz
bound
roll
shl
jne
stos
mov
add
push
test
test
push
sahf
add
insl
ljmp
jle
iret
out
mov
add
movlps
mov
testl
popa
orb
movsl
jne
sbb
xchg
punpckldq
or
js
sub
mov
mov
xlat
mov
lahf
test
divb
add
jnp
inc
jnp
rcrb
imul
test
js
dec
and
rcl
dec
push
push
cltd
sarb
imul
test
cli
ret
ffree
sti
lods
je
dec
add
rcl
pushf
div
pop
inc
dec
push
xor
sbb
push
shr
mov
ret
pop
lds
dec
cmpsl
mov
inc
push
inc
xchg
test
orl
lahf
and
mov
xlat
loope
pop
mov
stos
in
orl
je
xor
mov
repz
cld
mov
lods
in
adc
sub
les
inc
jge
lcall
dec
and
jbe
inc
sbb
push
insl
jge
or
xchg
aaa
je
mov
sbb
sbb
or
js
and
add
std
in
and
adc
loop
clc
pusha
mov
mov
lcall
sbb
scas
rcrb
icebp
mov
adc
pop
pop
pop
dec
movsb
aam
insl
call
je
xchg
cmpsw
mov
pop
fucomi
popa
push
mov
fldenv
jge
popf
inc
adc
imul
pop
inc
xchg
hlt
lret
sub
daa
mov
and
xchg
ds
jg
jl
push
nop
push
xor
test
jg
ret
jge
in
sbb
jne
jecxz
push
pop
clc
data16
push
xchg
sbb
rcrl
inc
pop
and
ds
std
cwtl
xlat
rorb
ds
loop
nop
inc
cmpsl
add
test
scas
push
sub
aad
add
js
inc
jnp
add
ret
inc
pop
cs
inc
ret
test
sbb
push
pop
jmp
cmp
fsubs
cld
jecxz
outsl
add
in
xor
clc
inc
ret
cmpsb
adc
cwtl
arpl
test
push
outsl
test
ds
inc
mov
dec
adc
mov
push
lea
sbb
mov
adc
inc
imul
dec
lcall
out
jg
mov
outsl
clc
add
pop
aam
test
push
in
fwait
jg
je
popa
jns
dec
in
fnsave
les
fs
mov
loop
cmpsl
xchg
pop
xchg
ret
pop
arpl
mov
add
add
insl
rclb
cld
dec
inc
add
pop
std
insb
cmp
sbb
int3
shl
int
jns
or
pop
xchg
adc
in
test
call
shr
lods
enter
addb
lahf
xchg
pop
mov
jecxz
outsl
pop
dec
nop
out
cld
lret
jmp
cld
or
mov
sbb
sti
cmp
enter
loop,pn
and
lds
bound
bound
sahf
mov
clc
jp
sbb
cld
xor
mov
inc
icebp
in
xor
push
dec
sub
jecxz
add
repz
hlt
enter
xchg
outsl
nop
adcb
mov
arpl
cld
inc
enter
aad
rclb
scas
dec
mov
dec
ja
loope
mov
sarl
in
sbb
mov
call
notl
fistl
push
mov
imul
xchg
sbb
adc
stos
shr
lret
cwtl
pop
push
nop
mov
je
xlat
xor
mov
outsl
test
sub
mov
andl
mov
lret
cmp
mov
rsqrtps
dec
sub
mov
mov
cli
ss
lea
dec
mov
test
adc
lret
sub
outsl
inc
sbb
sti
or
and
pusha
mov
sahf
les
mov
xchg
jae
mov
and
jmp
xchg
mov
test
fcmovu
movsl
xchg
lret
hlt
adc
lock
test
test
fs
xchg
outsb
jbe
in
loopne
sar
imul
mov
cmp
test
cmp
dec
js
sbb
loopne
mov
ficomps
add
jb
mov
ljmp
std
push
ds
pop
dec
aam
es
jp
stos
lods
cs
push
cmpsb
fisttpll
push
sbb
mov
pop
bound
stos
sbb
or
jne
dec
xchg
loopne
jmp
sub
jl
call
dec
jno
and
push
rolb
icebp
xchg
or
sbb
mov
aad
mulb
leave
leave
mov
dec
out
pop
and
xor
xchg
in
mov
mov
sub
fcomip
mov
enter
or
push
push
hlt
aam
jno
repnz
sub
cmp
mov
repnz
fimuls
inc
nop
mov
int3
js
push
and
mov
dec
jmp
fdivl
arpl
sub
mov
xor
and
add
sti
dec
stc
imulb
xchg
mov
inc
pop
mov
cmpsb
lret
mov
jbe
in
push
xor
or
fsubrs
sbb
sbb
in
xor
rorb
mov
shlb
xlat
test
mov
and
adc
push
arpl
and
cmpsb
repz
cmp
pop
xlat
or
in
dec
push
mov
sbb
mov
mov
imulb
sub
dec
arpl
in
push
in
xor
sbb
add
shlb
fnstsw
mov
xchg
stc
push
add
xor
jg
xbegin
xor
movsb
cmp
scas
and
or
rol
mov
neg
ficoms
sub
dec
push
sub
out
jmp
in
stos
add
lods
in
cmp
jns
push
ret
jg
fisubl
pop
ja
cld
cmc
xchg
jb
lods
ret
mov
roll
dec
inc
pusha
repnz
lods
push
aad
pop
mov
cmp
jle
jne
test
mov
sbbb
xchg
cmp
out
test
out
dec
fisubrs
cmp
outsb
dec
cmp
mov
scas
mov
fisttps
insl
jg
outsl
rorl
ja
cmpsb
push
sub
andb
mov
jb
add
clc
add
pop
sbb
stc
js
out
mov
aaa
jp
repnz
jns
xor
jmp
mov
sub
jo
sti
dec
leave
aaa
mov
popa
fsubr
jae
push
ret
xor
scas
inc
inc
popf
aad
adc
in
scas
push
sbb
cmp
pop
add
push
cs
outsl
fisttps
fildl
sbb
lods
mov
iret
adc
pop
dec
es
cs
sbb
xchg
pop
pusha
push
adc
aaa
jbe
icebp
jno
inc
or
jle
and
dec
jns
lcall
data16
push
inc
and
mov
sub
and
inc
xchg
sahf
ds
loope
aas
iret
mov
clc
sub
xchg
sbb
sbb
std
pusha
cmpsb
dec
mov
outsb
or
sbb
push
sti
mov
pop
je
test
or
add
sbb
xchg
jp
mov
adc
dec
loope
ficompl
insl
xor
int
jecxz
in
xor
adc
out
cli
and
lret
imul
ss
movsl
pop
pop
popf
add
sub
cmp
pop
lahf
popf
push
push
inc
mov
ljmp
adc
pushl
xchg
mov
scas
push
int3
cmp
and
and
xor
lods
mov
xchg
mov
and
aam
xchg
sbb
pop
loopne
cmpsl
adc
push
adc
jbe
xchg
dec
test
cmp
pop
in
bound
jge
adc
aas
dec
ss
inc
lcall
in
fnstcw
sahf
jae
lods
push
data16
cmc
cwtl
lcall
in
or
adc
mov
xor
lds
sbb
lcall
sub
ja
mov
cli
adc
lcall
mov
movsl
cltd
dec
insb
fidivrs
rcrb
testl
stos
lods
sahf
iret
adc
xor
cmpsb
fnsave
nop
stc
movsl
xlat
add
or
cld
sbb
data16
jmp
mov
pop
dec
std
int
dec
int
data16
mov
jmp
cli
mov
pop
sub
push
fildll
jl
xlat
sbb
jae
imul
add
mov
ds
fildl
leave
push
dec
clc
rclb
sbb
sti
mov
cltd
cmpsb
dec
arpl
popa
in
mov
ret
jge
subl
add
sbb
xchg
dec
inc
pop
adc
mov
dec
clc
fwait
dec
jp
dec
cld
and
inc
test
imul
cmc
ds
ret
xor
xor
std
mov
xor
xchg
outsb
add
inc
dec
ja
or
push
pop
dec
adcl
mov
lds
mov
std
repnz
into
mov
out
push
loopne
xchg
pusha
push
sbb
mov
andb
aaa
and
enter
mov
mov
repz
inc
loop
invd
out
xor
fimuls
and
jle
or
mov
movsl
add
jmp
xchg
dec
sbb
jns
xor
enter
cmpsl
add
xchg
lret
cltd
enter
aaa
add
mov
cmp
xchg
and
mov
dec
sbb
fwait
xor
cmp
loop
and
lds
int3
subl
dec
mov
pop
int3
cmp
stc
test
or
data16
jb
add
add
jb
lods
rorb
mov
outsl
in
imul
or
xlat
jb
add
mov
je
movsb
fistl
sub
xor
scas
inc
dec
loopne
cmc
stc
adc
adc
xor
push
clc
fwait
xorl
scas
xchg
xor
cmp
push
ret
ljmp
enter
daa
or
push
test
movsb
push
in
pop
repnz
mov
pop
push
jae
imul
cmp
fisubrs
aam
addb
test
imul
xor
mov
mov
cmp
jae
jae
dec
int
pop
push
mov
clc
mov
push
sahf
sub
jns
loope
ret
jmp
mov
dec
mov
adc
cmp
fs
xlat
xor
lcall
lret
xor
push
lds
or
sub
mov
add
xor
and
mov
push
mov
sahf
jge
add
and
popf
pop
jg
es
les
and
ret
pop
push
les
mov
out
inc
xor
lods
gs
hlt
divl
jnp
or
imul
or
insl
jne
push
dec
addb
add
jge
xor
lret
jge
loope
inc
mov
mov
inc
dec
daa
cmp
or
sti
out
inc
mov
cmp
bound
daa
inc
lock
mov
xchg
xor
lret
inc
out
fbstp
mov
fdivrs
repnz
add
mov
pop
outsb
add
insb
in
xchg
lock
dec
ja
xorb
or
mov
sub
addr16
rclb
cltd
dec
inc
push
xor
jg
fistps
push
add
add
movsl
push
outsb
int
pop
lcall
xor
mov
outsb
cmp
test
mov
jge
out
pusha
and
insb
data16
mov
and
and
aam
nop
imul
fidivrs
inc
cmp
rolb
scas
aaa
cld
enter
lahf
sbb
movsb
jbe
pop
dec
int3
adc
push
jecxz
push
or
sbb
mov
mov
inc
popa
sub
insb
fmull
xrelease
mov
cmp
fldl
ds
or
fidivrl
loop
in
xchg
and
subb
sub
roll
fbstp
jbe
xchg
and
cmp
dec
pop
cmp
lods
pop
add
jmp
in
sbb
leave
add
add
cmp
xchg
sub
pushf
cld
push
sbb
aas
idivl
clc
sub
and
and
mov
loopne
imul
fidivs
push
fdivl
xor
add
push
lret
and
mov
cmp
test
mov
sbb
push
test
dec
add
rclb
cmpl
mov
mov
sub
in
push
xchg
mov
inc
std
jle
xchg
jnp
cmc
mov
lcall
mov
mov
mov
push
jle
inc
das
xchg
nop
mov
add
out
sub
test
xchg
inc
leave
icebp
imul
pop
adc
sbb
dec
test
mov
inc
sbb
in
pop
add
cmp
xor
dec
mov
mov
inc
dec
xlat
push
sbb
movsl
cmpsb
pop
sbb
push
js
xor
or
in
nop
aad
jbe
and
push
jl
and
in
push
mov
ja
pop
pop
fwait
push
scas
or
fwait
test
hlt
int3
imul
mov
iret
fidivl
add
dec
cmc
cmp
icebp
adc
out
shll
mov
xchg
repnz
dec
push
aas
fs
fstl
mov
aam
int3
mov
int3
int
dec
aad
or
push
cmpsb
adc
cmp
lods
test
xchg
xor
lods
leave
inc
mov
outsb
lds
push
xchg
sbb
sti
outsb
xchg
mov
mov
jge
cmc
xchg
repz
scas
and
sti
cmp
addr16
arpl
jns
xchg
mov
sbb
sub
iret
ret
out
add
jb
and
mov
idivl
inc
call
or
imul
lods
outsb
push
stc
lcall
add
sub
mov
outsb
lahf
mov
xorl
jo
xchg
clc
test
push
daa
stos
xor
inc
data16
xor
sub
push
jmp
pop
jmp
inc
mov
ret
ds
test
ret
roll
jns
xchg
push
or
mov
pop
cli
ret
js
xchg
stos
repz
jmp
insl
pop
popa
popf
sbb
jecxz
and
cmp
jl
stc
push
jmp
jnp
or
into
cmp
icebp
stos
inc
fs
test
ss
mov
mov
out
add
add
push
xchg
mov
cwtl
sbb
pop
ret
push
fildl
mov
divl
loopne
test
shll
push
dec
nopl
in
or
subl
cli
push
inc
jle
adcl
dec
cmp
push
into
dec
lret
push
pop
lock
mov
xor
adc
leave
add
cmp
dec
into
lock
mov
out
cmp
sub
stos
jle
into
add
mov
into
fbld
xchg
add
xchg
mov
push
in
inc
jnp
test
xor
bswap
mov
jo
mov
aam
aam
lock
add
lcall
xor
cmpsb
fsin
xchg
mov
gs
or
call
decb
lea
inc
pop
pop
test
and
jecxz
lea
pop
push
sahf
lds
mov
dec
icebp
dec
jae
insb
mov
push
sub
add
adc
mov
sbb
xlat
cltd
cld
shrl
sarl
das
fnstcw
insb
mov
sub
fisubrs
lods
imul
dec
stos
icebp
ja
in
adcb
lods
sahf
int
ss
leave
inc
sub
push
cmpsb
sub
cltd
mov
or
and
fsubl
and
push
lds
xchg
and
mov
test
fsts
pop
pop
outsl
sub
fidivrl
push
sub
sub
jo
jp
mov
add
mov
cmpb
inc
xchg
jle
mov
sub
dec
lcall
fidivrs
sub
repz
inc
stos
in
jg
out
jg
jns
push
pop
in
xchg
lea
cmp
jae
or
movsl
cmp
jns
mov
mov
push
arpl
push
dec
jns
pushf
add
cmpsb
add
dec
mov
inc
push
pop
mov
jge
xor
stos
sbb
mov
dec
call
and
pop
adc
and
fwait
imul
jl
jg
inc
ds
jg
test
repz
xor
sbbl
gs
pop
pop
sub
lock
lea
or
jmp
adc
loopne
jge
jbe
adc
fdivl
and
decb
pop
in
dec
test
pop
pop
inc
mov
mov
fcoms
adc
mov
xor
dec
lahf
add
aam
cmp
push
lcall
pop
adc
mov
clc
jo
add
xor
popa
repnz
mov
xchg
mov
in
aad
in
out
jg
adc
sub
dec
lea
adc
push
cmovbe
call
jmp
xchg
jp
cmp
push
sub
pop
nop
cmp
mov
inc
jne
mov
mov
fcmovne
test
and
xchg
push
push
fs
mov
out
out
add
test
and
cmp
sub
fwait
mov
shll
xchg
pop
repnz
and
push
jae
idivb
xor
fimuls
std
add
mov
sbb
aam
in
inc
mov
pop
cld
mov
imul
add
in
jb
and
mov
ja
test
pop
adc
mov
mov
xchg
leave
insb
sub
into
add
hlt
mov
adc
push
jg
test
lcall
dec
mov
adc
mov
es
add
mov
add
or
mov
ret
push
hlt
cmp
jns
mov
xchg
push
inc
fbstp
out
add
add
jne
int
xchg
in
xchg
cmc
jb
mov
xchg
pop
in
ss
lsl
or
sbb
pop
vmovshdup
in
in
mov
outsb
add
rcr
adc
xchg
add
or
fdivr
loopne
jl
push
or
mov
rolb
and
int3
iret
dec
jns
addr16
cmp
ret
push
iret
cmp
popf
jo
scas
jb
and
adc
cwtl
or
stos
adc
leave
pop
sub
and
adc
jl
cwtl
mov
pop
push
retw
cld
mov
loopne
shll
je
lock
sub
in
xchg
shr
stos
fwait
xor
fld
mov
dec
mov
pop
ljmp
in
in
rcr
pushf
fdiv
sbb
jae
adc
sub
pop
jb
mov
js
push
cli
outsb
stos
cmp
inc
dec
rcrl
and
inc
shrl
add
xor
or
fadds
or
inc
jne
mov
and
push
mov
jo
loop
bound
leave
ds
dec
ljmp
iret
mov
jl
pop
xor
xor
dec
fmull
hlt
lahf
arpl
or
add
lock
xor
test
mov
popa
jl
outsl
dec
fiaddl
lods
mov
mov
hlt
lods
inc
or
push
cs
mov
dec
test
xor
inc
mov
negl
ljmp
mov
pop
loopne
sti
clc
fidivl
xchg
cltd
mov
dec
or
pop
xchg
or
push
dec
inc
pop
test
test
into
mov
fstpt
jle
das
pop
jo
pop
sbb
pop
mov
clc
cmp
scas
ror
mov
pop
xor
cmp
lret
sub
filds
jmp
dec
xorb
pop
mov
push
xor
aas
or
xor
lock
fcmovne
adc
imul
lcall
ljmp
cltd
cli
pop
mov
xor
xchg
sub
ljmp
and
ficoml
imulb
loopne
in
sub
sbb
test
nop
mov
ret
jle
sbb
push
pop
mov
pushf
or
lds
xchg
lods
cwtl
gs
movsb
inc
push
pop
loope
dec
add
lods
or
aas
dec
dec
push
leave
shl
andl
adc
ljmp
mov
divb
sub
out
leave
jbe
in
ret
test
out
push
in
mov
flds
jne
xor
cmc
inc
out
call
inc
lods
sbb
add
aas
add
xchg
repz
or
movsl
mov
jecxz
xor
and
das
ljmp
sub
fmul
pop
mov
xor
adc
std
mulb
lods
scas
loop
mov
pop
push
dec
cmp
ja
pop
call
or
pop
cmp
jns
int
adc
inc
mov
xor
pop
mov
mov
rol
test
sbbl
sbbb
and
loopne
mov
mulb
xor
jo
pop
mov
ss
lods
inc
xor
or
fwait
dec
mov
aad
pop
or
cmp
loopnew
pop
dec
push
ljmp
mov
mov
pop
repz
xor
add
sub
jae
lds
pop
test
shrb
xorl
push
push
fildl
mov
in
jmp
cmpsl
sbb
xlat
pop
dec
outsb
pop
inc
xorl
lahf
and
loope
idivl
push
into
scas
push
xchg
mov
popf
fs
xchg
inc
dec
jle
call
repnz
cmp
ss
jl
cmp
in
sub
outsb
loop
xlat
or
mov
add
mov
ret
popf
repnz
stos
dec
lcall
fidivrl
out
or
or
xchg
cmp
arpl
push
imul
test
mov
and
xor
jo
andl
in
pop
sti
imul
sub
sub
add
cmp
ret
js
add
fistpll
dec
bound
cs
je
inc
clc
aaa
arpl
daa
shrl
dec
xorb
rcll
jbe
repnz
cwtl
push
in
subl
dec
loopne
sti
int
lcall
fldt
bound
cmp
sub
loope
popf
mov
imul
jae
cmp
repnz
in
mov
dec
insb
aad
adc
movsl
cmp
xor
int
int3
push
shlb
jp
and
loop
push
sahf
fistpl
movsl
lods
adc
out
dec
pop
xchg
leave
sub
xor
into
pop
mov
push
xchg
out
imul
or
cmp
sbb
enterw
js
add
enter
pop
call
pop
daa
jge
sahf
sub
and
or
loope
lahf
mov
sahf
mov
out
sbb
mov
push
mov
call
push
dec
ds
inc
les
jg
enter
imul
loopne
das
popf
pop
mov
adc
inc
addr16
push
jmp
push
shlb
mov
dec
in
cmpsl
adc
dec
or
fsubrl
dec
in
test
scas
sbbl
leave
iret
lds
aaa
iret
sub
dec
jae
popa
jns
mov
sbb
pop
pusha
sbb
xchg
dec
ret
mov
mov
xorl
pop
fidivrl
imul
in
jae
call
push
jp
out
sbb
inc
jge
push
movsl
mov
je
leave
movsb
or
jp
xor
and
ja
sahf
add
movsb
fsubrl
gs
jge
repz
das
lea
ja
inc
jge
sarb
sbb
rcr
test
mov
shlb
adc
push
hlt
xor
xor
ljmp
mov
push
pusha
sbb
imul
iret
xor
mov
ret
daa
jb
outsb
cmp
lahf
mov
stos
adc
jbe
fnstsw
jbe
cmc
out
sbb
hlt
fs
lahf
xlat
loope
push
lods
call
call
out
sbb
rcll
div
into
ret
push
lods
lret
jp
inc
flds
fstps
push
minps
mov
dec
or
mov
iret
xorl
mov
xor
mov
push
push
mov
adc
lods
insl
xlat
or
ljmp
ret
iret
fcompl
inc
or
out
push
mov
or
mov
xchg
cs
add
insl
sahf
fwait
movsb
sbb
btrl
mov
mov
mov
pusha
push
pop
cltd
mov
sbb
hlt
out
pop
add
mov
dec
in
lock
and
adc
fdivrl
cmpsl
insl
xor
adc
ja
inc
fldcw
dec
popf
stc
xchg
or
cli
loopne
inc
jne
movb
ret
mov
xchg
fs
icebp
jl
outsb
push
in
or
popl
pop
pop
push
and
mov
xchg
shl
jmp
jge
push
fidivrs
pop
out
aas
and
icebp
movsb
and
and
les
or
push
icebp
mov
jmp
dec
hlt
mov
pop
lcall
pop
cmp
push
popa
repz
lcall
fst
cli
ss
mov
pop
out
popa
mov
dec
mov
hlt
dec
call
pop
cmp
jp
pop
jno
aad
xchg
shlb
push
push
repz
stc
push
xor
mov
push
frstor
addl
mov
fcoml
mov
sub
cwtl
adc
mov
enter
inc
push
shrl
add
sub
or
je
cmp
repz
pushf
mov
pusha
dec
jo
fsubs
scas
icebp
mov
fs
js
push
sub
rorb
repz
xor
sahf
and
or
pmaxub
inc
negl
cmpb
fldl
xchg
push
mov
mov
dec
mov
in
cwtl
adc
mov
loop
pop
pop
ja
pop
pop
jge
sub
cld
fimull
xorb
pop
fadd
or
dec
popa
or
fwait
push
and
movsl
mov
cmpb
test
and
ss
mov
adc
test
fldl
clc
leave
and
jb
mov
inc
add
dec
out
in
sbbb
jo
dec
bound
pop
cltd
iret
xchg
popf
mov
movsl
xor
cld
sbb
lret
lea
push
add
mov
jge
adc
xor
call
je
adc
daa
xor
decb
mov
sbb
inc
testl
pop
fbstp
lods
pushf
dec
lods
rorl
js
cli
inc
fwait
push
addb
xchg
rol
mov
arpl
lock
xchg
push
lahf
addl
pop
mov
dec
inc
pusha
jg
fwait
icebp
dec
and
pop
inc
push
add
fs
add
jle
sub
xor
xor
add
and
xchg
mov
inc
rolb
cmpb
out
xlat
jo
adc
mov
inc
push
cmp
push
mov
dec
xor
fbstp
push
aas
add
repz
pop
in
hlt
xor
inc
mov
imul
sbb
dec
lods
mov
add
jno
fcomip
cmc
or
scas
dec
ljmp
sub
mov
ss
add
mov
mov
jmp
xor
mov
jbe
adc
xchg
mov
into
ficoml
dec
mov
ret
idivl
ljmp
iret
mov
das
mov
jecxz
xchg
test
xor
mov
mov
mov
pop
jno
lea
inc
mov
push
jg
stos
sti
and
out
decl
test
or
test
aaa
push
rorb
xchg
xchg
cmp
xchg
pop
dec
lcall
pop
xlat
pop
dec
xor
pop
inc
sub
mov
lcall
aaa
add
shrl
mov
ljmp
mov
jo,pt
or
insl
ljmp
push
mov
inc
jg
decb
xchg
and
insb
xor
jmp
inc
and
std
call
pop
add
aaa
out
fpatan
add
jp
adc
mov
imul
loope
in
fadd
push
js
mov
cmp
out
cmp
cmpsl
sbb
test
cmp
rcrl
inc
call
rorb
gs
add
or
push
mov
cmp
and
lahf
ja
loop
lret
fs
pop
mov
adc
push
cli
sub
cltd
mov
movsb
push
ljmp
ds
jge
mov
add
in
aas
dec
cmp
scas
adc
daa
movsl
stc
xor
xchg
xor
fimuls
cli
sahf
std
pop
xor
daa
jl
pop
and
int
mov
jge
cmpsl
int
sti
mov
je
mov
stos
notl
daa
jle
insl
je
and
in
scas
inc
add
loope
xchg
mov
stos
test
add
jbe
jmp
jp
mov
cmp
xorb
jne
and
rol
bound
clc
ficomps
jge
dec
loop
dec
pop
jns
pop
cmp
pop
pop
and
enter
mov
xchg
adc
mov
xchg
cmc
fsubs
fucomip
pusha
sbb
jb
jne
and
cmp
pop
dec
dec
xchg
in
je
mov
sub
fidivs
lret
and
push
push
adc
inc
jmp
xchg
push
psrld
xcrypt-ctr
cmpsl
popf
pop
push
inc
mov
sub
cmp
xchg
ret
test
adc
and
xor
and
outsb
or
lods
lret
sub
imul
lea
mov
lahf
dec
scas
mov
ja
pop
jge
in
sarb
jmp
and
adc
sbb
add
loope
out
es
sti
xor
lock
rolb
xchg
jl
lcall
xchg
shrb
or
jle
dec
mov
or
cmc
ficomps
fldt
jnp
lds
je
jb
push
sub
push
cmp
dec
adc
pusha
cmp
fldenv
dec
jge
inc
fsubrl
insl
stos
mov
mov
das
xor
mov
mov
push
pop
std
fwait
outsb
idiv
sbb
lcall
into
leave
or
xchg
ficomps
bound
pop
in
sub
inc
add
add
jo
pop
loop
repz
push
popf
mov
lret
xor
and
fsts
jae
popf
cwtl
les
into
lds
or
insl
sbb
cli
mov
pushl
jge
shll
icebp
insb
mov
lahf
out
cmp
lods
loopne
or
test
xlat
mov
adc
jne
xchg
cmp
cmp
je
sub
inc
and
lock
fists
enter
jb
adc
cmpb
mov
push
arpl
cli
inc
jns
pop
movsb
popf
stos
and
lcall
ret
pop
mov
mov
add
jb
pusha
cmc
mov
fnsave
add
fiadds
ret
fildl
lods
cmp
jg
sbb
xorb
mov
mov
pop
mov
add
jae
sbb
sbb
cli
jmp
jmp
inc
xchg
fldenv
push
and
add
mov
jl
shll
xlat
hlt
jmp
scas
push
and
pop
add
or
mov
es
dec
out
addr16
push
or
insl
fsubrp
scas
rorl
cs
push
ficomps
not
or
out
scas
dec
loop
jb
adc
jp
insb
add
mov
ds
dec
jnp
jle
jle
shll
test
cmp
and
call
xchg
lock
or
jmp
stos
mov
ror
push
mov
shl
rcl
xchg
lds
mov
dec
daa
stos
sbb
mov
loopne
jns
add
repnz
fildl
jg
mov
pop
and
xchg
push
int3
inc
and
pop
shlb
and
push
jp
push
out
lock
stos
les
ja
jg
and
inc
ss
scas
sub
and
mov
shlb
insl
stc
stos
add
xlat
dec
sbb
call
mov
aad
mov
das
les
js
push
jle
insb
insb
jo
imul
clc
adc
xchg
ret
and
dec
push
int
cs
or
cltd
test
testl
push
roll
inc
add
add
mov
adc
rcrl
inc
ds
mov
sbb
out
xchg
jecxz
xchg
mov
cwtl
mov
sti
ljmp
mov
lret
adcb
fisubl
into
mov
out
pop
dec
loope
jecxz
aas
fsubs
xchg
lods
lods
sbb
push
sub
xor
ror
mov
call
je,pt
xchg
push
stos
daa
lock
sub
rcr
jae
sub
inc
add
mov
xor
icebp
arpl
mov
hlt
mov
and
cltd
mov
push
lret
xchg
xchg
push
insb
jnp
push
dec
lahf
mov
ret
aas
inc
inc
jbe
jo
bnd
sub
int
cltd
sub
ss
shl
repz
adc
push
test
call
and
mov
dec
arpl
rclb
test
mov
fistps
pop
xchg
jmp
out
jp
outsb
jb
mov
popa
adc
dec
and
dec
les
cwtl
std
call
mov
sbbl
stos
aam
in
sbb
jnp
nop
into
movsb
call
or
xor
in
jl
popf
add
mov
xchg
push
jge
js
repz
movsb
push
in
mov
mov
cli
ds
dec
rorl
fstps
test
add
adc
inc
pop
les
js
push
push
dec
loope
jb
xchg
xor
cmp
mov
mov
insb
dec
jb
xor
in
out
xor
test
stos
mov
pushf
add
int
aaa
xchg
push
movsb
pop
push
and
add
adc
mull
mov
lret
push
pavgb
inc
leave
aam
jg
repnz
jnp
gs
cmp
pop
mov
decl
or
nop
in
push
xor
out
movsl
pop
mov
enter
lcall
pushf
loop
pop
mov
mov
out
adc
shr
and
mov
ljmp
dec
ds
fdivrs
aaa
call
cs
dec
aaa
pop
mov
jg
int
add
arpl
scas
mull
movsb
jnp
inc
jmp
pushl
and
in
lahf
call
inc
jg
mov
scas
mov
loop
fcoml
lods
stc
adc
jg
lret
and
push
xchg
sub
das
jb
mov
jp
addb
icebp
cwtl
add
mov
add
les
push
xchg
xchg
cmp
push
ret
cvtps2pd
pusha
and
push
xor
pop
or
push
sub
divl
jno
daa
aad
xlat
iret
mov
jb
and
push
scas
sahf
xor
or
hlt
push
test
sub
inc
adc
xor
stc
xor
stos
add
adc
adc
mov
hlt
sti
jns
push
out
dec
add
xor
and
sub
push
push
xchg
xchg
pop
fwait
negl
arpl
xchg
mov
jmp
arpl
fstpl
mov
aaa
mov
test
bound
rolb
cmp
push
push
pop
out
push
mov
xchg
cmp
jmp
xor
and
push
or
decl
mov
outsb
push
mov
push
sbb
and
stc
mov
lcall
insl
es
daa
mov
xchg
jmp
nop
jne
lcall
scas
rorb
frstor
je
imul
pop
mov
xchg
arpl
or
and
push
stc
adc
fdivl
testb
xchg
and
push
ljmp
mov
push
fstps
scas
xor
icebp
je
pop
movsb
ret
lcall
aas
inc
jecxz
in
mov
jge
test
jmp
mov
sub
stos
pop
lcall
mov
call
cwtl
sub
inc
hlt
outsb
dec
fisttpl
mov
xlat
xor
cmpsb
pop
cs
inc
xchg
inc
dec
and
and
xchg
stc
int
pop
dec
push
or
mov
push
add
test
in
test
dec
xchg
rorl
mov
sbb
xchg
ret
dec
loope
or
jecxz
imul
pop
push
mov
cmc
mov
cmpsb
out
pop
and
mov
add
test
push
mov
jb
xchg
pop
inc
test
inc
movsb
sub
ljmp
ja
icebp
xor
pop
add
sub
mov
mov
das
xchg
cmp
cmpsb
pushf
inc
pop
loopne
jp
fistpl
and
iret
shlb
ficomps
jno
testl
lds
aaa
ret
popa
movsl
faddl
inc
dec
notl
sub
es
ds
fyl2xp1
das
push
mov
pop
cmpsl
into
rorl
push
add
ss
xor
cmp
adc
shl
enter
lea
pop
jge
cmp
rclb
cmc
sbb
out
xorb
rep
xchg
sub
lock
sub
mov
jmp
mov
xor
sbb
sbb
pop
int
pusha
dec
popf
in
adc
mov
mov
jnp
stos
pop
clc
movsb
sbb
pop
xor
mov
push
lret
cmp
add
xchg
pop
jns
push
jp
fwait
arpl
mov
mov
push
pop
mov
xor
mov
movsl
jne
ss
sbbb
ret
outsb
xchg
sbb
sbb
dec
data16
out
xor
outsb
mov
loop
out
add
sarw
mov
mov
mov
xchg
push
mov
cmp
fcoms
mov
aad
js
arpl
add
sub
test
aam
xor
flds
jne
fisubs
ficompl
mov
inc
imul
int3
add
xchg
mov
fwait
daa
lcall
stos
or
and
aaa
mov
cmc
dec
push
mov
scas
cmpsb
pop
mov
std
lock
xchg
jnp
dec
xchg
fbld
out
push
inc
orb
mov
xor
pop
mov
jnp
add
sbb
jmp
sub
cmpsb
jg
xchg
sbb
xor
xor
stc
xor
idivl
or
cwtl
cmp
scas
mov
add
xor
mov
mov
sub
dec
add
mov
fcompl
mov
ret
inc
xchg
mov
and
push
rcrl
xchg
and
sub
call
pop
in
adc
jnp
and
xor
imul
and
add
push
adc
cmpb
ljmp
dec
test
ror
cmp
movl
imul
int
dec
icebp
ja
inc
or
mov
repz
push
add
cmp
lret
add
mov
sub
xchg
idivl
stos
or
icebp
pop
lods
mov
lock
dec
daa
leave
xor
cmc
and
xchg
in
in
rcr
scas
xchg
mov
pop
cmp
sub
xchg
ret
repnz
das
xor
sahf
enter
cmp
adc
and
int
arpl
add
aam
cmp
adc
lods
or
xchg
add
ljmp
add
jo
or
addl
loope
xor
loope
adcl
fmul
adc
push
cmp
adc
sub
stc
call
hlt
xor
inc
add
lret
stc
hlt
mov
lods
or
pop
lahf
sbb
pop
jo
leave
mov
test
dec
inc
add
fs
shll
push
cmpsl
mov
cltd
mov
ret
test
and
push
pop
mov
into
jmp
pop
dec
mov
mov
test
fistl
add
arpl
jae
sub
sbb
sub
cmp
mov
add
xchg
mov
imul
mov
jae
or
mov
xor
pop
dec
sub
in
std
hlt
pusha
or
fnstcw
xlat
xchg
js
xor
xchg
jno
leave
std
stos
jp
insl
jbe
or
cmp
xchg
xchg
loop
pop
pop
inc
xchg
push
int3
imul
cmpsb
sub
rolb
sub
cmp
adc
push
jno
ret
mov
pop
and
daa
pop
pusha
scas
cld
aam
sbb
inc
adc
sbb
dec
dec
push
xchg
call
mov
push
xchg
jle
mov
test
cmp
cmpsl
inc
xor
ret
mov
cmp
inc
jl
gs
shlb
xor
ret
ja
push
stc
xlat
inc
movsl
xchg
xor
jmp
add
std
in
dec
pop
mov
jns
sub
in
shl
xchg
mov
imul
sbb
or
rcrb
pop
dec
jbe
into
lcall
sub
xchg
adc
bound
incb
in
shlb
mov
out
adc
in
pop
sti
cmp
xor
xchg
mov
out
cs
add
cmp
test
addr16
std
addr16
mov
pusha
or
mov
rcrb
fwait
popf
xor
xlat
jno
aam
mov
ja
adc
inc
loop
xor
pop
fnstenv
jae
orl
mov
push
cmp
or
daa
dec
fbstp
ljmp
out
push
std
jl
dec
leave
mov
imul
and
cmp
divl
ret
fbld
mov
subl
lock
into
loop
push
sbb
ss
shr
sahf
ficompl
mov
jmp
ds
jae
sahf
dec
sti
lea
mov
rcr
fistpl
sbb
std
movsl
les
repz
xor
mov
inc
int3
mov
inc
push
cmp
in
data16
jae
adc
arpl
cmpsb
ds
dec
call
psubd
cmp
sbb
add
xchg
jecxz
icebp
xchg
das
stc
inc
cli
lret
xchg
push
push
dec
jnp
sbb
repnz
sub
repz
ret
add
push
test
cltd
cltd
pop
ljmp
sub
insl
or
xor
pop
jnp
insb
cmp
xor
xor
mov
out
cmp
cmc
mov
sbb
cli
mov
xor
mov
push
cwtl
insb
dec
es
ss
sahf
jbe
mov
dec
outsl
inc
dec
jb
enter
lds
and
pop
dec
aaa
mov
push
insl
test
lahf
sub
movsb
mov
dec
mov
rcll
cltd
push
add
ja
ds
insl
sbb
out
pushl
mov
iret
pop
push
mov
rcr
mov
in
sub
pop
repz
pop
rcl
xor
mov
and
fwait
xor
jge
lret
push
lahf
int
add
jnp
mov
xor
inc
mov
pushf
es
imul
bound
insl
mov
and
aad
mov
scas
inc
push
in
sub
push
push
sbb
or
pop
jle
leave
adc
dec
pop
push
stc
outsb
cli
mov
lods
lock
jmp
pop
flds
sub
cwtl
in
data16
cmpl
push
lods
mov
aas
pop
inc
nop
lods
mov
loope
add
mov
es
call
sbb
xchg
jo
dec
or
mov
sti
jnp
daa
fsubrs
ljmp
mov
add
je
dec
push
out
popa
cli
jmp
shll
movsl
ljmp
stos
adc
jmp
xor
jbe
and
stos
dec
push
lahf
mov
ljmp
mov
stc
xor
scas
out
push
arpl
sub
push
cmpl
lock
hlt
test
jle
and
adc
scas
imul
or
cld
in
call
mov
dec
xor
roll
push
ds
mov
adc
jne
pop
cmp
div
jge
mov
push
cmp
xchg
enter
and
icebp
pop
adc
test
mov
sti
gs
xchg
fistpll
sbb
pop
inc
fdivrs
fnstsw
jbe
cmp
fstpl
pop
jbe
jecxz
adc
or
int3
mov
pop
popf
iret
dec
insb
cmp
test
js
xchg
popf
int
pop
notl
sub
stc
leave
fsub
mov
xchg
mov
cmpsl
das
test
cmpb
xchg
leave
filds
fmull
fdivs
inc
pshufw
arpl
ss
stc
mov
outsb
push
mov
out
lock
rorb
push
sbb
cli
push
sub
sahf
sub
or
push
dec
mov
aaa
imul
lds
adc
fstpt
call
and
inc
sbb
mov
add
mov
cwtl
mov
jl
mov
cs
hlt
sub
pop
insb
jmp
fsts
cwtl
xor
cltd
xchg
in
ja
sahf
or
or
xor
repz
pop
mov
sbb
movsl
aam
lcall
pop
pop
andl
js
sub
and
dec
outsl
repz
jl
fnstcw
dec
fidivl
or
out
enter
mov
pop
mov
in
aam
sub
movsl
xchg
add
and
mov
lret
push
cmp
push
orb
mov
xor
ljmp
sti
inc
or
repz
push
repz
rol
dec
sti
add
inc
imul
shrb
mov
das
xor
mov
xor
scas
scas
sbb
sahf
icebp
add
out
add
cmc
repz
and
fwait
movsl
and
lods
mov
mov
lret
adcb
dec
add
call
xchg
rcll
add
xchg
ds
lods
or
testl
xchg
push
dec
jecxz
pop
loopne
or
ficomps
outsb
xor
mov
mov
scas
jae
rol
mov
les
sbb
jb
stos
in
jecxz
bound
into
xchg
mov
push
xor
inc
insb
adc
cld
je
pushf
cmp
add
es
pop
pusha
loope
rcr
xor
sub
dec
mov
es
out
mov
lahf
dec
sbb
leave
aam
rorb
adc
adc
xor
fucomp
cmpb
sbbb
dec
aaa
dec
sti
mov
je
sbb
add
shl
jno
pop
fstpl
add
mov
icebp
out
mov
ror
sub
leave
lea
mov
int3
pusha
inc
cmpsl
cmp
inc
mov
and
dec
or
rolb
aad
ja
pop
dec
jb
xchg
xor
ds
rcr
push
fcompl
cli
aaa
mov
xchg
pop
aas
cmp
xlat
fimull
ljmp
in
inc
push
pushf
lahf
mov
push
xor
add
negl
sbb
into
aaa
out
es
cs
test
mov
or
mov
insb
dec
out
inc
lods
outsl
scas
mov
pop
xor
add
lcall
aaa
mov
sbb
mov
test
jg
in
enter
outsb
inc
popf
push
movsb
mov
jle
jmp
ss
mov
mov
shlb
cmp
scas
js
push
subb
mov
and
and
lcall
jae
mov
fadd
and
scas
cmp
dec
std
push
jno
dec
imul
shll
push
iret
push
sti
fwait
lock
push
jecxz
orl
mov
mull
jp
hlt
inc
in
outsb
jl
mov
jl
ret
xor
cli
or
ret
or
loope
mov
ret
sub
loope
rorb
xchg
dec
mov
outsl
inc
jle
mov
lock
mov
test
shr
push
sbbl
add
inc
cmpsl
rol
push
test
lret
dec
fwait
pop
fbld
repz
hlt
pop
fdivl
movsl
popa
inc
lcall
mov
imul
rcll
jnp
ljmp
cld
pop
mov
dec
cmc
aam
jg
mov
cmp
cmp
mov
pushf
std
in
mov
pop
loope
movsb
push
push
xchg
xor
inc
adc
div
stos
sub
repz
nop
jp
push
or
pop
dec
mov
mov
sti
xlat
cmp
lods
mov
inc
insl
mov
repnz
fmulp
loope
inc
pop
dec
sbb
or
dec
pop
enter
inc
mov
xor
loop
or
sbb
lcall
fwait
inc
mov
cltd
adc
push
repnz
mov
imul
arpl
lcall
inc
mov
mov
mov
add
xchg
loop
mov
test
mov
and
out
jnp
dec
mov
and
mov
fwait
dec
mov
ret
pop
jbe
pop
out
stc
data16
pusha
cli
push
scas
stos
sub
jmp
out
mov
mov
cli
rcll
and
fldl
ja
lcall
sub
subl
out
push
daa
loopne
and
out
xchg
cmp
stos
imul
pop
test
push
add
inc
ja
hlt
cli
js
loop
jo
jns
popf
rcrb
adc
loop
add
push
cmp
icebp
fld
andl
jo
sbb
loope
std
jb
shll
sbb
fwait
mov
fmuls
xchg
das
fdivl
repz
fs
addr16
aaa
add
dec
pop
stos
aad
shl
arpl
sbb
stos
or
dec
popa
xchg
in
data16
popa
ss
add
adc
in
jbe
mov
inc
gs
imul
push
mov
push
es
dec
aas
and
add
cmpsl
leave
mov
lret
pop
jp
pop
adc
enter
inc
mov
pop
insl
enter
outsl
inc
fucomi
inc
insl
cmpsl
push
int
push
xor
in
push
hlt
or
jae
mov
cli
or
jmp
movsb
inc
aam
cwtl
fldenv
cmp
mov
xchg
dec
lods
mov
rol
jl
jne
mov
cmpsl
mov
mov
sahf
add
add
add
outsb
cltd
outsl
addl
ds
fiaddl
adc
out
inc
mov
pop
dec
fstpl
or
stc
sbb
adc
xor
mov
pop
cmp
jmp
pop
shll
mov
lret
xchg
cmpl
enter
pop
xor
ljmp
lods
loope
inc
jg
dec
pusha
mov
inc
das
mov
test
js
cmp
inc
jae
icebp
stos
or
sahf
jl
adc
cmpsb
sub
or
imul
cmp
push
psrad
dec
iret
push
xchg
cmc
dec
xorb
xlat
das
adc
dec
push
jne
xchg
xor
popf
xor
icebp
push
add
in
lock
cmc
mov
cmp
imul
insl
rcll
inc
xor
jecxz
inc
cmc
jecxz
ficomps
jns
loopne
stos
int3
outsb
dec
ret
xor
mov
xor
pop
xlat
lahf
jno
lods
cmp
or
pop
repz
in
test
mov
sbb
lret
fstl
sahf
lcall
mov
incl
es
or
insl
dec
lock
or
stc
push
xor
int
push
mov
aad
mov
ror
dec
cmp
mov
mov
adc
jae
in
add
ljmp
mov
jnp
sahf
loope
cmpsl
sbbl
imul
push
repnz
pop
imul
adc
pushl
xor
cli
xor
jne
inc
xchg
cmpsb
fs
scas
andb
xor
mov
sti
sub
xor
adc
inc
ja
in
xor
rcl
movsl
out
cmp
mov
jl
dec
lea
je
mov
popl
inc
stos
xchg
jnp
fmul
loop
fdivl
imul
bound
pushf
jecxz
jnp
and
in
daa
dec
mov
imul
out
xor
adc
sub
frstor
call
mov
push
jbe
call
cmp
int
xchg
add
les
lcall
mov
rclb
dec
adc
jmp
cmp
pop
seto
outsl
cmp
add
jo
dec
enter
mov
adc
sbb
in
jle
outsl
ret
xchg
in
loope
cmp
fildl
call
outsb
xor
xor
mov
shrb
add
ljmp
dec
insl
test
daa
lods
rolb
mov
cli
push
movsl
out
cmpl
add
dec
jae
std
je
cld
pop
shl
dec
inc
out
mov
rcl
cli
jmp
push
lcall
add
pop
sub
fwait
loopne
and
in
ljmp
scas
inc
adc
sub
pop
incl
dec
ljmp
mov
decb
mov
adc
jo
mov
add
dec
out
insl
xchg
cmp
mov
repz
sbbl
inc
jae
mov
pop
sbb
cmpl
out
lret
add
jle
add
outsb
sbb
fidivrl
pop
jl
and
lock
insb
pusha
je
cmp
imull
cmp
cmp
or
lahf
xchg
scas
icebp
mov
testl
daa
pop
xlat
stos
jbe
fnstsw
roll
mov
push
sbbl
mov
frstor
fldt
jecxz
lds
adc
icebp
jecxz
pop
dec
xor
adc
or
push
loope
gs
add
aad
dec
inc
jno
or
and
pop
inc
stc
imul
or
dec
ret
mov
xor
xchg
dec
stos
dec
jnp
or
gs
shrd
roll
mov
pop
in
lods
shll
loop
mov
xlat
out
mov
adc
pop
mull
scas
int3
popf
inc
stc
mov
mov
sub
dec
mov
mov
pop
cwtl
adc
sbb
gs
lods
shll
sub
add
sbb
test
test
lods
enter
add
sbb
jg
push
jmp
lea
scas
mov
addl
lcall
dec
push
push
insl
jns
mov
jl
inc
pop
shrl
dec
dec
mov
sub
pusha
nop
dec
xor
sbb
call
insb
nop
nop
movsl
cmp
xchg
cltd
mov
or
ficompl
jmp
add
cltd
and
call
push
mov
sti
mov
push
loope
clc
enter
out
outsb
les
pop
add
aam
jg
mov
fwait
rcrb
jg
andl
sbb
cmp
push
push
push
fdiv
pop
cmpsb
roll
dec
aad
add
sub
xchg
in
add
test
nop
xchg
imul
jo
sub
inc
jb
inc
in
push
int
inc
stos
xlat
popf
push
or
rcr
sub
mov
scas
shlb
outsb
inc
lcall
mov
ret
repz
xor
sbbb
inc
jne
push
cmpsl
enter
arpl
mov
outsb
cmpsl
mov
or
fs
and
add
push
push
adc
add
sti
pop
sti
jbe
cli
sbb
shl
sbb
rclb
mov
push
jecxz
jb
std
jmp
nop
inc
call
insb
inc
repnz
jbe
mov
jle
es
rcr
or
movsb
sbb
inc
push
jne
shlb
add
cmc
stos
les
push
ljmp
pop
xchg
jns
ret
dec
das
into
in
pushf
das
sub
ficoms
repz
mov
sub
or
aad
sub
repnz
sbb
push
push
mov
repnz
xchg
adc
cmp
mov
dec
mov
imul
sbb
cs
mov
bound
enter
outsb
out
aas
mov
xor
in
mov
enter
shrl
sbb
rcll
cmp
dec
std
insb
inc
int3
push
xchg
clc
subl
sub
rcl
and
call
add
ret
or
scas
xchg
cmp
mov
loopne
pop
shlb
fstl
jge
jns
pop
scas
out
popf
int
das
xor
push
in
mov
pop
dec
mov
arpl
cmc
test
adc
ja
push
jnp
imul
or
or
xchg
jmp
push
jbe
popf
push
or
add
xor
cmpsl
imul
add
mov
lds
cmp
nop
mov
insl
lahf
call
fsts
fcmovne
pusha
xchg
jl
mov
mov
dec
addl
mov
pop
lock
xchg
lods
mov
jmp
lods
mov
xchg
adc
jp
inc
push
dec
mov
sahf
dec
mov
pusha
imull
xchg
shrb
pop
mov
and
mov
cmp
test
xchg
dec
in
mov
add
cmpsl
push
mov
ffreep
sbb
mov
repnz
nop
cmpsb
push
dec
gs
mov
stos
out
or
pop
push
add
fprem
xchg
and
mov
cmp
lds
js
in
inc
pop
ds
pop
and
sti
hlt
push
mov
loope
sub
cmpsl
in
pop
lds
mov
mov
out
cwtl
sbb
mov
mov
sub
sahf
fiadds
xchg
mov
mov
inc
pop
lods
pop
mov
mov
xchg
cmp
enter
orl
ret
js
sub
out
dec
xchg
cmc
repz
leave
out
xchg
pop
jb
and
cmpsl
imul
pop
gs
jg
inc
cmp
mov
sbb
in
scas
test
push
mov
into
lahf
sbb
imul
stc
and
pop
movsb
pop
movsb
out
dec
push
nop
sbb
sbb
push
adc
fwait
push
mov
mov
adc
add
xchg
mov
pop
push
pop
mov
xchg
and
out
ja
adc
inc
mov
loop
aad
mov
add
fs
out
mov
cwtl
lahf
shrl
pop
inc
aaa
push
mov
inc
data16
aad
loopne
arpl
dec
or
push
mov
adc
and
add
fisttpll
mov
xlat
pop
subl
in
addr16
and
enter
daa
xor
mov
rolb
pop
add
rcrb
sbb
sbb
aad
imul
data16
leave
dec
addr16
add
mov
das
xchg
gs
or
outsb
cmp
fisttps
lods
adc
popf
sbb
inc
mov
push
fdiv
inc
mov
mov
lea
clc
inc
shrl
fnstcw
fisubrl
sub
add
stos
add
xor
icebp
test
jb
test
and
mov
cmpsb
mov
in
fldenv
mov
fnstsw
out
pushf
lahf
jbe
daa
xchg
mov
mov
imull
pop
pop
adc
add
mov
cltd
fldt
andb
jge
fistpll
imul
leave
popf
pushf
jg
pop
mov
xor
pop
mov
sarb
ret
mov
loope
test
loopne
add
inc
cld
adc
repnz
jmp
push
imul
imul
clc
int3
xchg
xchg
cmp
or
inc
dec
jne
push
xchg
ficomps
ljmp
insl
sbb
sarb
and
loopne
dec
cs
sbb
and
ret
ret
xchg
and
jae
inc
add
lds
mov
out
cmp
xor
in
negl
push
and
jle
pop
stc
mov
gs
add
pop
mov
shlb
sbb
imul
jno
lret
xlat
cld
pop
lret
outsl
jge
inc
lock
pop
cld
and
add
inc
or
rcrb
or
pushf
xchg
jae
push
sub
fmuls
inc
stos
popa
lods
jae
mov
mov
xchg
sbb
inc
loopne
push
sub
pop
adcb
jo
shll
hlt
xor
cmp
sub
mov
xchg
repnz
jo
loope
pop
xchg
std
mov
out
dec
mov
das
xchg
testl
add
pop
mov
sbb
idiv
adc
lods
imul
inc
xor
fists
mov
xchg
test
mov
sub
movsl
sbb
jg
pop
cmp
add
test
add
mov
pop
insb
std
popf
test
mov
lcall
xchg
scas
inc
pusha
dec
dec
adc
outsl
xchg
push
mov
lods
and
jne
push
dec
out
fbstp
lea
idivb
dec
jno
jmp
add
jge
clc
dec
subb
push
frstor
xlat
pop
popa
fadds
fsubrs
dec
imul
inc
stos
call
negb
push
and
insb
aaa
test
xchg
add
stos
insl
inc
mov
jge
xchg
imul
xor
push
mov
aam
push
pop
xor
sbb
aas
sub
adc
add
cmp
cmp
lahf
pushf
repnz
loop
sub
push
mov
loope
push
mov
decb
mov
into
sub
mov
jne
push
xchg
lods
jmp
mov
in
jo
inc
js
pushf
lock
fsts
lcall
jmp
mov
or
pop
inc
lds
lds
test
and
aad
pop
imul
or
jno
xor
movsb
loop
sub
pop
sbb
xchg
aas
inc
ror
test
into
sbb
lods
stc
fists
faddl
dec
inc
out
sbb
add
and
fucomip
pop
xchg
jno
inc
ss
scas
pop
cmc
mov
dec
cmc
sbb
adc
cmp
arpl
jge
lahf
add
mov
or
imulb
ss
shr
shrb
push
fstpt
out
pop
les
mov
into
and
js
adc
mov
push
mov
xchg
cmp
sub
inc
sub
pop
cmp
out
xor
mov
add
mov
xchg
mov
mov
push
test
mov
out
jecxz
cld
push
lods
cmp
mov
cli
push
je
roll
imul
int3
sbb
xor
add
xchg
cmp
sub
rorb
jo
mov
and
enter
push
pushl
leave
call
mov
je
dec
inc
lock
pop
stos
in
aam
or
arpl
shll
ljmp
cmc
add
sahf
in
mov
and
xlat
jo
mov
int
dec
cmp
jns
cld
and
sbb
push
loopne
pop
sub
dec
outsl
std
lods
cmp
lret
jne
cs
enter
mov
dec
add
push
lods
xchg
dec
ds
pop
push
je
iret
jno
daa
jecxz
mov
mov
dec
stc
fs
add
fwait
pop
out
jb
add
xor
xchg
mov
mov
fcomip
jo
sbb
insb
pop
mov
xchg
jle
sbb
mov
mov
popf
jge
lret
jl
iret
and
mov
in
test
add
popa
push
or
clc
lods
mov
sub
call
pop
mov
jno
push
movb
inc
bound
add
push
xchg
lea
add
sbb
cmp
inc
add
xor
sbb
cmpsb
pushf
pop
mov
xor
outsb
jb
cli
shlb
arpl
xor
imul
test
inc
xorl
les
push
aad
xchg
in
bound
add
les
nop
and
push
lahf
js
stos
push
xchg
jns
iret
sbbb
mov
arpl
xchg
dec
xor
mov
inc
inc
xchg
insl
mov
fwait
int
xchg
and
sbb
cmp
popf
imul
roll
inc
xchg
outsl
jne
test
es
bound
pop
pop
push
cmc
cmp
jle
cmp
lahf
sub
xchg
aas
cmp
xchg
lock
dec
sbb
pop
sahf
mov
mov
test
and
adc
aad
ror
pop
repnz
imull
sahf
jbe
ret
cmp
xlat
int
jo
aam
inc
hlt
fwait
into
add
mov
add
ljmp
aam
ljmp
jae
mov
xchg
shrb
aad
bound
adc
nop
add
xor
mov
mov
adc
insl
jb
popf
test
stos
sahf
out
and
mov
mov
jns
push
mov
call
pop
mov
and
leave
dec
stc
lock
lret
jle
xor
and
cmp
es
xor
fmull
xor
jmp
push
jge
sub
popl
dec
int3
andl
insl
or
adc
cmp
sbb
add
mov
loop
testb
mov
icebp
mulb
icebp
int
xchg
pusha
inc
cmovbe
sti
sbb
int
push
mov
mov
pop
jne
jno
movsl
sub
cltd
inc
pop
inc
xchg
daa
jo
mov
nop
gs
es
push
orb
pop
lcall
rclb
jecxz
addl
sbb
lods
push
xchg
xor
jb
push
xchg
mov
jg
stos
adc
or
cwtl
dec
in
pop
ret
jb
xchg
sbb
aad
sbb
push
rolb
daa
pop
popf
shlb
loop
mov
repnz
add
jbe
inc
or
or
fbstp
mov
test
mov
cli
or
sti
imul
sub
cld
das
shr
jo
popa
jne
cmp
arpl
cwtl
stos
xchg
mov
div
enter
mov
add
push
test
les
cmp
gs
in
sbb
jne
or
lods
cs
xor
cli
sub
loop
inc
ret
cltd
cmp
jo
push
std
lods
fwait
clc
lea
mov
scas
mov
out
pushf
out
or
mov
repnz
mov
pop
popa
aad
mov
adc
js
mov
cmpsb
loopne
sahf
xorl
adc
in
cld
out
sbb
cli
push
fdiv
inc
subl
jge
and
into
nop
int
pop
and
daa
mulb
test
shlb
es
mov
and
daa
xor
xor
mov
in
jb
or
arpl
or
sbb
cmp
cli
jnp
mov
shlb
mov
stos
inc
out
push
xchg
push
js
data16
fdivr
and
fsubl
repnz
fs
add
aas
call
dec
mov
or
les
sti
add
mov
aam
dec
xchg
cmp
scas
cli
dec
mov
add
mov
lds
sbb
ja
rcr
incb
pop
in
adc
mov
arpl
push
mov
sbb
jbe
call
loope
sbb
icebp
cwtl
add
pop
inc
rolb
mov
jb
lods
pop
movsl
xor
mov
pusha
pop
iret
mov
fldt
add
pop
or
sahf
gs
push
dec
jns
inc
sub
scas
mov
xchg
rcll
mov
sti
add
pop
mov
xor
mov
pop
loop
sub
lahf
pop
mov
xor
xor
in
mov
movsb
fwait
jg
dec
jle
or
out
sub
psubsb
xor
mov
shl
imul
sbb
fisttps
out
pushf
mov
dec
jae
push
data16
pop
mov
fsubs
pop
cli
iret
sub
mov
scas
leave
and
jbe
xchg
repz
dec
data16
dec
mov
xor
cmpb
or
sub
inc
cs
mov
loopne
dec
mov
push
cmp
mov
mov
sbb
movsb
jg
cmpsb
mov
andl
ja
xchg
addr16
test
insl
add
dec
int
push
pop
sbb
mov
enter
sbb
and
popf
jle
jecxz
mov
ficoml
or
in
mov
test
imul
push
daa
into
jecxz
inc
lods
xchg
stos
dec
imul
int
cmpsl
pop
dec
jecxz
xchg
add
push
lods
out
in
int3
popf
sti
lods
mov
adc
jae
cmp
insl
pop
or
and
out
and
xchg
rdpmc
xor
cmpsb
lods
inc
sbb
shrb
mov
aam
push
ret
dec
test
add
aaa
cmp
test
and
xchg
pop
dec
insb
imul
lods
je
shrl
je
fsubl
jbe
test
testl
push
push
cmp
push
or
andb
movsl
xchg
sbb
shll
mov
push
popa
mov
popf
push
jp
and
or
dec
mov
pop
fucomi
loopne
xor
sbb
leave
mov
fldt
mov
movsl
ret
and
and
inc
and
cmc
daa
pop
pop
js
xchg
jno
sbb
jb
xchg
out
mov
push
xor
and
fwait
add
aad
stos
lcall
mov
rol
dec
rep
sbb
cmp
add
xchg
orl
dec
sar
call
sahf
mov
cli
scas
add
adc
cli
inc
pop
xchg
mov
iret
leave
adc
addr16
icebp
pop
jnp
push
sbb
push
or
addr16
incl
pop
sub
mov
lret
cmp
inc
pop
mov
rcr
dec
aam
or
lock
clc
add
dec
mov
xchg
jmp
clc
loopne
sbb
idivb
loope
jg
adc
xor
daa
mov
jge
mov
cmp
orb
das
stos
repz
fstpt
incl
push
xchg
ffreep
mov
fdivl
icebp
push
test
ljmp
ss
ficompl
out
aam
rcll
pop
roll
popf
ljmp
ss
sbb
scas
mov
dec
stos
ss
cmp
gs
mov
js
aas
adc
jg
cmp
cmp
jle
and
mov
jg
call
and
xchg
dec
xor
lea
mov
pop
or
and
xchg
stos
adcb
pop
mov
shlb
fsubrl
or
push
test
fldl
lret
xor
lret
mov
dec
mov
test
and
outsl
dec
mov
push
add
cmp
sub
repz
aad
ja
mov
iret
mov
jle
xor
ffree
dec
xor
mov
call
push
lods
pop
mov
addb
sbb
ret
push
orl
test
add
add
jecxz
inc
push
sbb
adc
sbb
movsl
scas
jns
lods
dec
and
xchg
adc
pop
push
rolb
scas
cmp
lret
pop
dec
mov
mov
stos
addr16
dec
push
xor
push
mov
mov
jbe
jge
pop
aaa
pop
or
aam
jg
psubsw
add
inc
lret
test
pop
cmp
add
cmp
cld
jns
sub
out
pop
xor
out
stos
test
xor
push
mov
xchg
lock
popf
inc
jae
xor
arpl
pop
mov
jbe
imul
cmp
or
sub
cli
loop
mov
mov
cs
xor
xchg
mov
insb
pop
fnsave
or
arpl
out
icebp
inc
insb
lahf
jae
xchg
icebp
and
dec
pop
pop
jb
or
or
jmp
leave
cwtl
cld
and
les
bound
aaa
jns
and
inc
push
sbb
mov
imul
mov
cmp
dec
mov
sbb
mov
xor
frstor
push
decl
inc
xor
jecxz
push
insb
and
js
cmp
in
and
jg
scas
xor
mov
rcrb
ret
add
lret
mov
push
ficompl
dec
adcl
jo
mov
nop
scas
call
mov
mov
js
popf
test
jmp
iret
push
test
xlat
adcb
pop
pop
push
xchg
aas
cltd
adc
or
repz
rorb
popf
fstpt
jle
jb
fnstenv
lds
push
ds
or
xchg
sub
jae
jge
fwait
add
inc
mov
shll
push
loopne
sbb
fsubrl
pop
cmp
stos
ret
dec
jne
loop
sub
xchg
aam
sahf
clc
divl
pop
test
dec
sub
dec
mov
jae
ljmp
call
stos
cli
cs
sub
add
xchg
lahf
jg
imul
push
cmc
push
push
leave
mov
cmc
sbb
std
mov
outsb
pop
mov
outsl
adc
lods
dec
fnstsw
in
adc
sbb
fsub
mov
scas
loop
dec
mov
mov
out
push
mov
sbbb
xchg
lds
push
inc
pop
push
test
push
movsl
insb
xor
jb
push
inc
ficoml
lahf
out
lcall
cli
xchg
movsl
notl
push
sub
xchg
daa
jge
mov
out
dec
jg
ljmp
gs
pop
xchg
je
int3
rorl
add
mov
cld
outsl
xchg
jne
stc
inc
xchg
sub
inc
mov
cmp
sbb
dec
sub
enter
sub
jp
popa
lcall
xchg
dec
jno
out
jmp
add
nop
out
and
loop
sarl
xor
jb
pop
lcall
sbb
fs
pop
dec
fsubrs
sub
shll
out
xor
add
push
pushl
repnz
out
dec
outsb
cmc
xlat
imul
push
cmp
mov
sub
in
adc
dec
dec
ljmp
repz
insl
lret
imul
adc
dec
mov
xchg
xor
inc
mov
push
addb
pop
sbb
cmp
sbb
pop
dec
arpl
stos
cmp
pop
mov
dec
aas
mov
mov
mov
xchg
inc
test
test
pop
std
mov
pop
mov
jne
xchg
dec
cwtl
xor
inc
into
cld
pop
inc
mov
jmp
xor
roll
repz
mov
jp
scas
ud0
jl
mov
pop
add
pop
call
fldlg2
add
dec
rolb
sub
hlt
or
div
mov
cmp
out
jge
inc
mov
out
lock
xor
push
cmpsb
cmc
mov
inc
leave
ffreep
arpl
aas
xchg
mov
mov
mov
xor
inc
clc
mov
cmp
jl
mov
cld
inc
and
iret
push
jo
cwtl
sub
in
mov
pop
cmpsb
ss
repz
cld
mov
test
adcl
sbb
pop
std
xchg
or
in
mov
mov
xor
adc
sub
and
scas
mov
in
dec
std
lahf
and
pop
fadds
lock
add
jbe
movsl
ficoms
in
adc
decb
xor
arpl
fsub
jb
fcmovb
xchg
or
jmp
cmp
jl
xor
insb
lret
add
or
inc
mov
push
dec
repnz
daa
cli
sarb
lea
lods
mov
in
bound
insl
dec
sbb
sbb
push
icebp
jae
pushf
push
pusha
cmp
sub
push
push
lahf
lods
iret
jge
pop
mov
out
cmpl
mov
cmp
out
das
insb
push
mov
adc
mov
add
inc
pop
add
xchg
lcall
or
shlb
push
stc
fwait
jns
mov
add
or
xor
and
or
mov
fstl
push
push
push
fwait
adc
jmp
sub
loopne
cli
rol
push
xchg
push
push
cwtl
mov
popf
popa
sub
sbb
sbbl
add
inc
sbb
int3
push
jnp
lcall
jmp
mov
dec
shrb
imul
lea
inc
mov
repnz
in
push
adc
and
and
cmp
add
pop
cmp
inc
jle
cs
cs
sbb
in
sbb
repnz
add
add
mov
jge
dec
loope
les
std
scas
add
hlt
xor
adc
jno
push
pop
add
fstpt
sbb
add
ret
cli
cli
fsts
lcall
ret
push
pop
movsl
push
daa
cmpsl
cli
push
xchg
push
fwait
dec
repz
fwait
xchg
push
or
xor
cmc
lahf
sub
das
std
cmp
mov
stc
test
dec
leave
loopne
mov
pop
push
pop
add
jne
pop
lods
stos
test
hlt
push
add
and
int3
jmp
cs
xor
cmpsb
scas
sbb
push
add
mov
es
insb
fcoms
sbb
imul
jle
mov
sti
mov
jns
popl
addr16
into
or
push
std
add
mov
sar
jp
dec
and
and
imul
pusha
sahf
push
or
fucom
ja
pop
or
push
inc
add
cltd
fs
mov
les
test
pop
dec
cmpl
sarb
lods
sbb
cmp
leave
repnz
xor
iret
add
inc
sub
xor
xchg
lea
notb
push
mov
out
push
insl
pop
xchg
sbb
inc
sbb
or
cmp
aad
mov
fs
adc
adc
sbb
pop
pop
and
addr16
add
adc
pop
out
loopne
stc
mov
dec
dec
adc
adc
fstpl
divl
mov
cmc
pop
xchg
sahf
in
inc
adc
mov
int
ficoms
push
inc
enter
out
fisttpll
add
inc
xor
inc
fmul
sbb
dec
xchg
jo
flds
jp
es
adc
dec
or
mov
cs
ljmp
negl
mov
cmp
jle
ss
negw
jmp
pop
jp
test
adc
in
sbb
not
fwait
iret
clc
lock
fisttps
inc
pop
mov
mov
scas
popa
adc
cwtl
in
cmp
mov
ficoms
cmc
ss
out
rcr
pop
mull
or
mov
jp
cwtl
jmp
and
ss
push
pop
pop
pxor
push
aam
popa
ss
lea
pop
adc
sbb
jmp
sub
sub
push
or
sub
xchg
and
lahf
mov
imull
sub
cmp
adc
jo
fbld
xor
sbb
pop
pop
push
imul
jp
movsl
lods
js
mov
ss
fnstcw
mov
subl
insl
aam
cs
jo
loope
sbb
xchg
cli
enter
push
dec
addl
xchg
orl
jg
sbbl
dec
imul
fdivrs
pusha
rcr
add
jmp
sbb
idivb
cs
in
lock
repnz
add
pop
xchg
add
bound
sub
push
push
jmp
add
cmp
mov
aas
mov
in
dec
and
arpl
rol
pop
out
cmpsb
outsl
cmp
lds
mov
jmp
push
mov
sti
pop
aad
mov
test
cld
or
icebp
sub
mov
in
cmc
subb
add
daa
imul
popf
jecxz
pop
mov
xor
imul
cmp
mov
jno
inc
cmp
test
call
test
push
insl
pop
icebp
pop
shrl
mov
inc
das
cmp
outsb
xchg
adc
pminsw
loope
setle
into
xchg
dec
mov
pusha
cmpsb
repz
dec
push
cmc
pop
add
mov
push
push
in
push
push
jg
jecxz
inc
test
push
std
loopne
ss
push
pop
fsts
xchg
xor
push
adc
idivl
push
mov
pop
dec
or
inc
stc
jo
hlt
and
pop
sbb
push
fs
jnp
mov
in
push
cwtl
in
repz
cmc
subb
aas
in
xor
sbb
sub
inc
and
call
stos
cmp
jnp
popa
mov
fst
out
movsb
cmp
xchg
mull
rcll
xchg
dec
jns
stc
jb
arpl
pop
or
xor
test
jle
call
stc
out
or
push
nop
dec
iret
or
mov
stc
sub
adc
cmp
cmp
loopne
xor
lods
clc
and
mov
scas
mov
testl
mov
test
outsl
cmp
inc
mov
cmp
les
cmp
je
and
push
xor
jnp
ljmp
dec
movsl
inc
cwtl
mov
rorl
iret
out
lcall
stos
test
xchg
sbb
adc
dec
lret
xor
notl
shrl
add
jp
movsl
cltd
push
sarb
jecxz
in
and
or
or
mov
int
jbe
clc
daa
fwait
mov
ljmp
xchg
xchg
push
or
mov
scas
or
scas
jmp
push
outsb
mov
add
fildl
in
push
cs
insl
dec
mov
jle
outsb
xchg
dec
adc
outsb
loopne
pop
xor
lock
mov
sbb
arpl
pop
pop
filds
jmp
jmp
popf
rcr
test
cmp
mov
sbb
sbb
out
vunpckhps
lret
dec
mov
pusha
sub
das
or
popa
cmp
jno
mov
shrb
pop
int
pop
add
js
and
jl
sub
incb
iret
xchg
ficoml
inc
es
add
fsubrp
push
add
dec
sub
fst
xor
shl
sub
stc
js
cmp
inc
lock
mov
adc
pop
fs
dec
mov
fistpl
dec
aam
loopne
and
repz
pop
sar
aam
ja
fbld
xor
aaa
mov
push
loop
dec
sbb
clc
pushaw
sbb
pop
inc
aad
fistl
mov
std
jne
sub
pop
cmp
cmp
cmpsb
fdivrl
xchg
push
lods
inc
jno
out
push
js
aas
pusha
nop
mov
add
pop
fsubl
push
pop
mov
ljmp
aas
or
inc
sbb
and
lea
push
int
adc
or
xchg
test
cmc
jbe
in
and
push
jge
xorl
add
iret
outsl
into
cmpsb
mulb
jge
cmc
xchg
movsl
inc
sahf
imul
js
jb
sbb
xorl
sbbb
repnz
aaa
pop
jecxz
push
pop
push
into
ja
out
adc
stos
mov
das
or
adc
dec
dec
cld
sbb
hlt
into
test
pushf
add
pop
insb
xchg
roll
xor
test
stos
rorb
into
xor
outsl
pop
add
rep
jno
subl
pop
jg
xor
sub
outsb
imul
iret
fwait
pop
jae
jl
jmp
xchg
add
and
addb
testb
insl
xor
cs
int
fs
sbb
ficoms
aas
loopne
dec
sbb
and
mov
movsb
mov
aam
std
shl
imul
jge
rorb
aad
inc
pop
das
and
mov
repnz
repz
add
lret
into
dec
fistpl
fsub
insl
imull
pop
mov
push
shrl
pop
push
push
cmp
and
imul
jnp
addr16
mov
jge
imul
jnp
inc
cmp
sub
daa
sub
ja
sbb
push
cmpsl
pop
rol
mov
outsb
sub
mov
scas
dec
or
jns
push
mov
push
fwait
or
fwait
movsb
push
cmpsb
fwait
pop
cmp
pop
out
adc
cs
sahf
in
mov
xchg
mov
xchg
pop
xchg
mov
out
fmull
ljmp
cltd
or
adc
adc
pop
xchg
pop
outsb
sub
arpl
mov
or
out
mov
aam
inc
pop
dec
in
mov
xor
js
sahf
iret
or
xor
daa
adc
and
push
dec
pop
inc
mov
push
sub
ror
aaa
mov
pop
aaa
popf
enter
iret
out
adc
sub
enter
leave
test
jae
aaa
add
mov
rclb
push
mov
out
rcrl
adc
sbb
cmpsl
in
sbb
clc
mov
adc
stos
mov
cltd
pusha
inc
dec
les
mov
fsubs
cld
add
dec
fdivr
xorb
adc
and
pop
cmp
mov
push
ret
in
pop
mov
pushf
or
negb
add
add
push
cmpsl
jg
out
into
mov
pushf
fwait
fidivrs
push
push
out
mov
pop
push
xchg
xchg
dec
inc
mov
xchg
fcomp
inc
sub
fidivl
clc
mov
jo
loope
pop
dec
out
dec
fimull
mov
fsubrl
lret
rcl
push
xchg
aas
adc
sub
adc
adc
mov
cmp
push
clc
repnz
test
fidivl
in
push
push
push
jge
adc
in
pop
push
xchg
nop
mov
mov
js
aam
mov
fcoml
cwtl
std
es
cmp
or
jnp
push
jns
scas
mov
lret
or
pushf
iret
and
add
pop
push
icebp
mov
inc
insb
ret
ret
and
mov
or
push
loop
clc
sub
mov
icebp
mov
daa
enter
sbb
scas
rcrl
xchg
adc
pop
cmp
mov
push
xor
icebp
cltd
jnp
out
bound
cmp
sarl
aad
ficoms
out
imul
jne
mov
add
pop
xchg
jno
cmpsl
pop
fldcw
outsl
push
call
push
out
fiaddl
jg
mov
and
mov
push
fs
iret
push
mov
std
jg
push
stos
or
fdivrl
outsb
pushl
xchg
aam
faddl
push
test
ljmp
ds
jmp
lcall
mov
and
jnp
cmpsb
cli
adc
push
jmp
andl
sti
push
sub
daa
sbb
fnsave
lods
mov
pop
cmpsb
sbb
jp
jl
lds
nop
xor
imul
pop
xchg
fnstsw
shl
add
push
mov
sbbb
jge
bound
sub
cmc
or
mov
push
test
stc
popf
mov
arpl
std
push
push
pop
dec
add
jmp
dec
loopne
loope
fistpl
cmp
and
ret
jl
sbb
inc
gs
sar
or
mov
mov
fadd
arpl
xchg
lcall
xchg
jmp
inc
sbb
nop
cmc
pop
pop
adc
movsb
push
test
in
mov
inc
adc
ret
dec
inc
call
jmp
mov
and
cmpsb
sahf
add
out
mov
movsb
pop
and
stos
cmp
add
adc
or
add
fsubl
pop
mov
dec
mov
orb
and
testb
fwait
inc
rorb
inc
clc
popa
mov
inc
mov
push
int
lock
mov
loopne
cmp
ret
add
lods
lock
dec
aas
call
in
pushl
ljmp
jnp
xor
add
pop
icebp
repz
mov
push
pop
daa
jp
test
xchg
cmpl
jae
inc
xchg
and
das
je
pop
pop
and
push
push
test
movsl
jb
add
fcompl
nop
ljmp
jo
test
xor
mov
mov
pop
jb
stos
mov
or
jmp
cmp
stc
sbb
sti
dec
add
daa
repnz
mov
aam
sub
cmp
or
pop
pushf
popf
dec
imul
aad
sahf
in
xorb
jecxz
jmp
leave
pop
pop
adc
aaa
add
mov
sbb
inc
sbb
lret
rolb
out
sbb
adc
fwait
test
cltd
jp
push
in
jo
imulb
ja
sti
pusha
ds
lahf
push
pop
sub
or
add
push
nop
stos
jo
push
jle
and
loope
pop
in
iret
sti
add
lcall
call
out
sbb
fistpl
ss
div
mov
push
cmp
out
notb
inc
cwtl
js
mov
xor
loop
pop
add
jmp
xchg
pop
mov
or
push
imulb
add
repnz
in
sbb
push
hlt
push
push
roll
pop
sub
and
and
jmp
xor
in
jnp
std
inc
imul
jbe
sbb
fcmovnbe
dec
bound
pop
hlt
mov
inc
aaa
or
adc
push
fdivrl
push
out
add
in
pop
cwtl
fcmovu
xor
js
lods
test
cmp
and
pop
mov
jmp
out
cs
notb
aad
test
loope
push
sbb
loopne
inc
mov
dec
insb
lcall
cmpsl
cltd
je
xor
jnp
ret
xchg
idivl
fdivrl
je
sbb
pop
rcll
xor
fmuls
jle
pop
fwait
sub
arpl
loope
in
stos
jge
mov
fisttpll
in
adc
pop
fnsave
leave
xchg
sbb
xchg
adc
sub
aaa
scas
aaa
cmp
cmp
fadds
adc
xchg
push
stos
jo
xor
insb
mov
mov
fsubrs
insl
mov
nop
pusha
jge
aad
jae
negl
stc
sub
pop
movsb
stc
jmp
mov
xchg
fimuls
bound
jg
dec
sar
mov
add
nop
pushf
sub
dec
adc
push
cmp
mov
fisubs
mov
stos
push
aas
repz
sbb
clc
incl
sbb
or
pop
push
or
stc
inc
test
lret
mov
mov
iret
sahf
shll
xchg
fnsave
lret
mov
mov
rorb
xchg
or
sub
shlb
mov
stos
sub
mov
pop
or
sub
into
outsl
int3
fstpt
mov
lcall
push
or
clc
push
sub
sub
dec
arpl
mov
or
fsub
dec
loope
lcall
stos
pop
add
mov
nop
xchg
sbb
sahf
rcr
out
inc
sbb
mov
fimuls
dec
fnstcw
sbb
lock
jge
mov
bound
mov
ret
and
popa
dec
cmpl
or
inc
js
mov
js
test
aam
xchg
xchg
cwtl
jnp
sti
sub
xor
fstpt
dec
into
cmpsl
repz
outsb
outsl
push
pop
sbb
pop
jge
xor
sbb
xor
cmpsb
mov
mov
pop
mov
push
inc
jo
xchg
cmp
stc
jbe
pushf
mov
inc
and
xor
xchg
cmpsl
insb
pop
dec
and
sbb
jne
and
mov
test
sub
dec
mov
aam
idivb
in
hlt
jo
mov
mov
push
int
mov
mov
movsb
push
cmp
adc
imull
adc
inc
adc
mov
ret
shll
mov
call
fldcw
mov
sahf
out
jg
lahf
lods
imul
sarb
or
jle
jmp
mov
mov
push
out
fs
sti
mov
fwait
mov
stos
mov
les
xchg
cmc
jmp
dec
pop
add
mov
mov
scas
sbb
xchg
cmpl
fidivrs
movsl
cmp
xlat
or
in
jbe
inc
repz
test
out
push
jo
incb
les
fisubl
xor
adc
mov
fs
int3
shrb
xchg
movsl
or
mov
nop
mov
sbb
pop
add
dec
mov
aad
mull
test
fnstsw
ret
jle
lods
cmp
cpuid
add
aad
in
cmp
dec
dec
and
cmpsl
sub
xchg
xor
jle
lds
leave
cmpl
test
test
aam
cmp
ds
aaa
dec
aas
repz
push
or
movsb
sti
xchg
xor
out
or
sub
or
ffreep
es
out
mov
mov
jno
stos
sbb
cmp
push
test
insb
mov
and
cli
hlt
and
dec
aad
pop
inc
inc
mov
stos
inc
add
cli
cli
repnz
aas
in
and
xchg
ljmp
rorl
stos
sub
lret
mov
or
shlb
repnz
stos
xor
inc
stos
mov
sbb
sbb
fucomp
rorb
fadds
fdivrp
xor
mov
sub
dec
outsl
jb
mov
inc
shr
sbb
mov
out
les
and
das
fisubs
inc
in
subl
pop
xor
inc
inc
movsl
lcall
sub
cld
jecxz
mov
pop
xor
cmpb
lods
es
gs
add
lcall
sbb
push
shl
jo
out
cltd
jecxz
ficoms
sarb
fcoml
inc
or
mov
adc
clc
mov
push
dec
jle
movsl
mov
pop
insl
dec
in
jo
test
ja
out
je
and
mov
fwait
add
push
mov
push
test
xchg
or
or
jo
lret
stos
les
test
xor
add
aaa
out
mov
dec
cltd
xchg
adc
fcmovb
sahf
mov
jl
dec
inc
push
push
pop
out
cmpsb
clc
push
inc
dec
lods
add
stos
and
mov
mov
and
push
mov
add
ret
mov
fidivl
orl
es
call
or
or
icebp
jl
pushl
jae
cmp
leave
inc
jle
ja
mov
xor
in
ja
into
add
mov
fisttpll
xchg
xlat
sbb
pop
sub
sub
int3
mov
pushf
arpl
dec
sti
pusha
jle
mov
add
inc
sub
push
lods
mov
fs
cld
sbb
xor
xchg
imul
cltd
rol
std
xchg
and
cmp
adc
jae
dec
ljmp
stos
out
xchg
jge
adc
mov
imulb
sbb
mov
jbe,pn
xchg
aas
inc
shlb
or
repz
jns
or
xlat
mov
mov
mov
xchg
push
aaa
dec
dec
jae
inc
lock
aad
clc
in
mov
and
dec
insl
mov
in
mov
ds
fs
out
dec
or
call
fwait
test
inc
mov
subl
fcoms
sti
daa
pop
aaa
cmpsl
insl
or
ficompl
mov
push
fsubs
lods
xchg
mov
or
mov
inc
or
sbb
or
mov
xchg
jnp
mov
xchg
fisttpl
std
xor
not
dec
arpl
rol
jmp
or
mov
movsl
fwait
sub
or
dec
or
push
push
pop
adcl
inc
enter
or
cmc
jl
int3
sbb
ror
cwtl
test
and
js
enter
mov
into
fs
cltd
mov
mov
mov
mov
rcll
rclb
ret
sbb
dec
fistpll
mov
mov
xchg
jecxz
shlb
sahf
lahf
testb
pop
push
push
inc
int3
fisubs
xchg
inc
rol
sub
push
pop
mov
cli
pop
add
and
xchg
or
pop
divl
fcomip
aas
outsl
cmp
pusha
inc
pop
enter
mov
lret
cmp
sbbl
mov
or
enter
xor
sbb
or
sub
inc
xchg
clc
lret
popf
xor
lcall
and
pop
lds
jg
cs
xor
ret
int
cmc
outsb
cmp
mov
repnz
insl
int
adc
lcall
int
sub
mull
push
mov
ljmp
push
push
enter
je
cmpsb
movsb
mov
push
sbb
mov
pop
sbb
int3
pop
loopne
pop
dec
addr16
out
sbb
xchg
xchg
mov
test
xor
sbb
fdivrs
inc
ljmp
sbb
mov
xor
lret
insl
leave
nop
js
add
popa
div
and
sbb
aam
nop
xchg
pop
fsubl
sbb
enter
notb
jmp
or
sub
in
or
cli
sbb
orb
pop
imul
insb
sbb
in
push
jns
fidivrs
loope
jmp
lods
mov
add
fildll
std
dec
mov
adc
adc
xor
push
iret
push
fsubl
mov
add
sub
scas
lock
xlat
push
iret
jmp
imul
test
xor
adc
cs
cli
mov
cmc
cmp
je
pop
pop
ja
mov
sub
inc
fists
bound
nop
push
loopne
jle
cmpsb
gs
outsl
loope
inc
mov
push
fldl2e
ret
ljmp
mov
fimuls
inc
ret
lahf
cltd
rol
lods
fwait
std
bnd
cli
andl
cmp
push
adc
mov
dec
xchg
lds
jp
fdivrs
leave
aad
mov
ret
mov
lret
into
inc
add
and
push
inc
push
inc
lret
lea
in
aas
inc
xor
lds
in
out
xor
cs
in
fdivs
ffree
outsb
daa
pmaddwd
push
cmp
pop
mov
lods
mov
cmp
cwtl
lds
mov
ss
mov
inc
sub
mov
add
dec
jb
dec
pop
repnz
mov
test
inc
xor
pop
stos
ss
dec
and
and
addr16
enter
mov
mov
insb
movl
loop
loope
xor
mov
inc
test
jge
jmp
and
cmpsb
jae
pop
mov
arpl
cmp
rcr
ljmp
adc
mov
push
andl
je
inc
sti
mov
mov
out
sub
xor
jmp
ds
push
jno
dec
add
addb
inc
inc
lahf
or
push
in
fstpt
je
imul
pop
idivl
test
mov
clc
xchg
leave
mov
leave
imul
and
sbb
xchg
fnsave
es
xor
lahf
xchg
mov
inc
insl
and
dec
jp
mov
outsl
pop
scas
cwtl
test
and
cmp
xchg
lods
mov
imul
jno
lea
ljmp
sub
out
push
push
fwait
xchg
jnp
sbb
inc
mov
fnstsw
inc
in
mov
mov
jae
and
pop
mov
pop
add
sub
cmp
jmp
sarb
in
cs
dec
fs
inc
add
push
sbb
rorb
mov
decl
adc
imul
data16
push
pop
es
loopne
test
lds
lahf
roll
mov
mov
sbb
leave
aad
es
rcrb
popf
sbb
jns
mov
je
pusha
mov
xor
divb
adc
popf
movsb
sbb
fwait
shlb
dec
mov
inc
mov
outsb
mov
mov
or
add
lahf
scas
cmc
ljmp
sbbb
repz
out
scas
outsb
mov
scas
mov
push
pop
jge
sbb
mov
test
xchg
cmpl
pop
cli
jl
aam
add
mov
mov
sub
insb
adc
jb
push
lret
add
scas
enter
mov
inc
lock
popf
push
dec
insl
mov
sub
jnp
jno
into
mov
pusha
mov
add
sbb
inc
xor
rclb
sahf
jge
xchg
mov
xor
inc
int
hlt
sub
xor
das
cmpb
sahf
mov
decl
mov
loope
mov
sub
cmp
pop
dec
sbb
adc
push
xchg
jno
sub
pop
gs
mov
aaa
daa
into
adc
mov
sub
out
cmpsl
scas
inc
stos
dec
xchg
imul
vpmaxub
jmp
lret
or
push
movsl
cmp
cltd
add
inc
mov
mov
pop
or
sub
ja
mov
ljmp
push
dec
xchg
iret
xor
sub
stos
cmp
jl
xor
sbb
xchg
mov
std
out
inc
das
push
ljmp
jno
add
xchg
call
add
adc
xor
mov
pop
mov
add
xor
imul
adc
aas
bound
jo
out
sbb
jo
addr16
std
in
xchg
add
mov
pop
sti
imul
jp
mov
mov
mov
js
pop
cwtl
mov
es
leave
test
cli
jecxz
sub
into
inc
push
sub
arpl
push
lret
jns
imul
mov
notb
xchg
scas
mov
xor
xor
sbb
mov
test
nop
ds
loop
or
jl
lods
fst
aaa
push
fcomi
mov
lock
mov
sbb
jge
sbb
add
pushf
iret
xor
push
ds
mov
orl
sbb
es
popf
cmpsb
stos
enter
call
pop
addr16
movsb
movsb
aas
inc
inc
loopne
dec
outsb
adc
inc
cwtl
dec
lahf
ret
sbb
jecxz
xchg
pusha
add
and
pushf
ljmp
hlt
aam
lcall
loopne
jo
cltd
rorb
inc
out
xchg
cmp
pop
xchg
nop
leave
xor
imul
push
xchg
dec
xor
xor
and
aad
mov
scas
cli
in
dec
orl
ja
fidivl
mov
ret
mov
or
inc
push
push
sbbl
and
in
mov
sbb
pop
stc
or
push
enter
scas
dec
mov
cmp
testb
in
movsb
add
sbb
dec
jp
mov
jb
sbb
or
xor
mov
pop
push
jmp
push
dec
aad
cmp
and
adc
sub
hlt
test
jg
aaa
mov
dec
adc
pop
pop
xchg
pop
sub
sahf
lcall
and
cld
mov
add
std
loope
pop
and
and
lods
icebp
jae
lds
cmpsl
cmp
lds
int
or
add
jge
xchg
stos
leave
imul
test
cmpsb
popa
loop
gs
into
cmp
mov
lock
jle
fwait
shll
cltd
stc
lods
jl
xchg
aad
aam
enter
ljmp
mov
bound
jns
pop
mov
aas
cmpsl
cmp
lret
out
sub
daa
sub
faddp
push
and
fldz
dec
inc
lahf
rol
jae
adc
or
jae
mov
adc
add
sahf
imul
push
mov
and
shrl
js
into
movsl
push
adc
pop
in
push
dec
mov
sub
pop
mov
mov
sub
mov
dec
and
sahf
rorl
inc
andl
pop
pop
push
ja
xor
or
out
add
cmpsl
pop
or
inc
pop
lahf
add
icebp
dec
mov
cld
lret
cmp
mov
jbe
pop
push
aas
jle
imul
add
popa
rclb
stos
leave
in
hlt
jg
cli
aas
mov
out
sbb
mov
push
arpl
or
and
pop
push
shl
jecxz
or
mov
add
lods
push
mov
mull
stos
in
pop
cmp
or
add
bound
xchg
pop
xchg
ret
adc
stos
sub
insb
jb
sbbl
ficoms
cmp
dec
stc
cmp
ucomiss
inc
jae
lods
pop
push
lahf
pop
lret
cltd
int
xchg
cmp
in
jp
jl
jo
push
aad
nop
jle,pn
cmp
clc
test
sti
push
cmp
shl
pop
lock
jns
pop
add
std
lds
inc
pop
sbb
push
xchg
repz
jno
dec
dec
insb
cwtl
mul
imul
aam
or
inc
sub
mov
adc
cmp
aas
add
adc
push
adcl
inc
xor
sub
xchg
bound
xchg
es
sbb
sbb
pop
imul
push
mov
imul
lcall
jg
lret
scas
mov
push
loop
lret
jns
scas
pop
add
mov
xchg
mov
mov
xchg
jbe
and
sti
insl
test
cmp
pop
jno
pop
pushf
bound
lock
test
xchg
andl
mov
dec
js
pop
outsl
mov
mov
out
stos
inc
push
pop
sub
lcall
dec
adc
lret
inc
xchg
nop
adc
mov
mov
fistpl
jl
mov
mov
add
sbb
outsb
add
inc
dec
mov
pop
and
loop
pop
cmp
addr16
mov
fcomps
inc
pop
fbstp
dec
jne
lock
jo
xor
lcall
pushf
mov
nop
mov
adc
das
mov
cmp
iret
je
ljmp
rolb
sbb
jbe
jp
int3
pop
rcl
insl
aam
xchg
mov
test
lret
cli
scas
and
pop
push
and
push
cmc
and
jb
pinsrw
adc
dec
sarb
mov
xchg
icebp
ljmp
push
or
sub
lds
lods
dec
pop
dec
icebp
fbld
adc
fisubl
paddsb
mov
cld
or
mov
sahf
jo
ljmp
xor
stos
es
sahf
xchg
cmp
mov
xorb
loop
sbb
sbb
sbb
pop
pop
fcomp
or
dec
and
xlat
sub
or
jl
dec
add
lcall
jp
ret
nop
and
sub
jae
jecxz
add
out
roll
pop
cmpxchg
into
jmp
push
mov
iret
scas
sbb
mov
or
daa
into
push
scas
int3
sub
in
push
clc
lea
mov
xor
or
test
push
and
cwtl
in
xlat
fsts
adc
push
mov
push
fcoms
or
pusha
push
fwait
mov
push
icebp
lcall
insl
inc
imul
movsl
ret
cmp
cmp
punpcklbw
cmp
js
jns
jbe
cli
adc
std
imul
jno
les
add
mov
outsb
xchg
jp
mov
push
pop
popa
imul
cmpsb
inc
xor
add
lock
pop
mov
fidivrs
add
adc
out
push
test
and
sub
or
dec
lods
cld
mov
mov
dec
les
fwait
aam
fwait
outsl
cwtl
mov
jne
pmulhw
pusha
and
fsubrs
pop
lret
sub
clc
rcll
fsubrp
es
and
popa
cmp
cmp
mov
cld
pop
outsb
inc
jp
push
repz
inc
or
adc
adc
test
dec
scas
enter
cwtl
fsubp
and
test
sahf
pushf
push
out
cmp
dec
mov
mov
or
jmp
les
cmp
mov
inc
loope
aam
xchg
clc
mov
inc
fnstsw
jne
mov
das
fyl2xp1
rcll
cmp
jmp
and
or
aam
dec
xor
nop
cwtl
sub
xchg
and
addl
aam
std
shlb
ret
mov
aad
jmp
lahf
stos
fsubrs
out
xchg
mov
xchg
cltd
and
test
rol
cmc
sub
negb
test
pop
insl
fmul
ds
pop
stos
push
in
das
or
xchg
mov
push
mov
pop
push
push
add
mov
repnz
ljmp
mov
adc
stc
ljmp
sub
lods
scas
add
sub
cld
dec
dec
mov
jae
inc
xchg
lahf
mov
fildl
mov
inc
push
imul
ret
push
je
pop
out
pop
pop
mov
sbb
or
and
mov
push
pop
mov
lahf
mov
int
cmp
mov
loope
int
imul
jp
push
and
decl
flds
das
aas
xlat
ljmp
mov
out
dec
mov
mov
movl
divl
cs
repnz
jle
adcb
cmpsl
fisttpl
in
jg
jmp
enter
mov
imul
ret
shlb
mov
push
dec
dec
mov
stos
jl
stc
add
and
add
push
aas
push
cli
movhps
js
sbb
dec
xor
cli
add
jnp
fldl
test
xor
outsb
addb
add
fld
mov
jb
or
pop
add
fdivs
cmpsb
mov
add
ficomps
xor
xchg
mov
ja
lea
stos
or
pop
mov
lods
jbe
cmp
cmpsl
mov
xchg
sub
dec
and
sarl
mov
mov
inc
pushf
pusha
aad
ret
mov
pop
dec
mov
pop
nop
shlb
sbb
pop
aaa
push
push
stos
shl
push
test
into
enter
in
fidivrl
aam
popl
dec
loopne
mov
stos
mov
adc
sti
stc
jbe
mov
lahf
jbe
push
jp
jno
mov
pusha
add
mov
pop
gs
inc
rcrl
or
sbb
cmp
xchg
aaa
movsb
aas
pusha
lahf
inc
int3
push
sub
pop
pop
cmpsb
mov
dec
mov
out
pusha
mov
pop
and
inc
mov
call
call
adc
and
and
hlt
loope
je
add
pop
mov
fbstp
xor
js
rorl
adc
mov
fisubs
pop
push
fdivrp
pushf
xrelease
inc
fxch
nop
inc
inc
push
daa
pop
cmpb
pop
les
in
or
sbb
movsb
repnz
sbb
xchg
cmp
inc
pop
arpl
pop
xchg
mov
xlat
dec
cmp
xchg
lea
xor
or
lahf
loop
push
sub
push
push
xor
sbb
lods
addl
ss
into
popf
enter
add
dec
pushl
das
dec
jl
fwait
sarl
and
mov
in
pop
xchg
mov
mov
popf
fs
cmc
or
cmc
push
pop
mov
xor
mov
and
lds
test
in
jae
jae
aaa
fsubrl
mov
xchg
pop
xor
call
cmp
adc
pushl
inc
shr
xor
mov
arpl
aas
or
adc
in
inc
xor
rcl
sbb
cs
mov
ret
cmp
xor
loopne
adc
in
jno
fs
cmp
ficompl
je
xchg
scas
ret
push
adc
mov
rorl
xor
insl
out
push
cmpsl
ds
lds
scas
loope
add
icebp
mov
inc
add
call
jge
hlt
mov
xchg
xlat
fs
fidivs
mov
pop
mov
arpl
loope
incl
jb
push
mov
xchg
dec
outsb
outsb
push
lock
add
sbb
das
inc
sbb
stos
cltd
aas
out
mov
lret
test
sbb
dec
push
sti
mov
lock
jae
adc
mov
repnz
les
add
xor
xchg
shl
xchg
orl
popa
mov
xchg
pop
testl
dec
je
xor
xchg
inc
insl
push
in
add
mov
sbb
sub
out
push
pop
out
pop
lret
loopne
scas
sbb
jno
jb
inc
lods
stc
add
dec
cmp
cmp
push
mov
xor
sub
mov
in
or
mov
and
mov
push
xor
cltd
ret
add
xchg
cld
rorl
pop
imul
addb
pop
push
out
mov
add
test
dec
cmp
add
cwtl
xchg
arpl
add
shlb
sti
fsubrl
mov
icebp
adc
fiadds
lahf
test
into
sbb
sbb
mov
clc
jo
xlat
ret
jp
imul
push
push
js
into
arpl
push
ljmp
arpl
adc
cmp
scas
call
pushf
fisttpl
ljmp
pop
sbb
and
test
push
add
into
lock
es
jecxz
xchg
cmp
imul
out
jl
push
push
ret
push
out
movb
xchg
add
insb
loope
rorb
movsb
xor
push
mov
sbbb
push
jne
roll
add
push
lcall
popf
scas
mov
je
xchg
in
sbb
fwait
inc
lcall
jp
pop
mov
bound
mov
pop
xchg
dec
mov
dec
int
fisttpll
imul
cmp
push
pop
lea
cmp
jg
and
pusha
xor
enter
lret
jecxz
add
mull
stc
push
adc
pop
enter
jnp
adc
stos
cmp
and
int
lods
leave
imul
xchg
or
sbb
cmp
inc
mov
iret
in
add
js
cltd
inc
aam
icebp
cmp
cmc
js
push
cld
lcall
cmp
in
pop
xchg
mov
fwait
ror
jb
jae
repz
and
sar
insb
add
pop
push
je
add
repnz
xor
stos
sbb
fildl
and
data16
loope
neg
ffreep
stos
lret
push
add
divl
fst
leave
ret
inc
outsb
lret
sub
imul
mov
xchg
in
ror
push
dec
sti
cmp
mov
lods
xor
sbb
jmp
cli
int
lret
test
add
cmc
das
cmp
call
adc
test
lods
rclb
shlb
loopne
cmc
lret
sarl
dec
daa
mov
aas
int
add
mov
mov
jl
inc
fmull
stos
pop
sub
es
leave
mov
outsb
inc
jl
adc
xchg
jno
addr16
jmp
push
jmp
mov
inc
xor
repnz
sub
shl
jecxz
cmp
daa
and
mov
add
rcrl
xchg
add
test
jg
in
push
jnp
stos
test
stos
jo
jge
mov
cli
mov
ret
roll
gs
push
jnp
sbb
mov
fwait
lea
repnz
test
je
aaa
lock
cmp
inc
aam
ja
sub
or
rcll
xchg
lahf
pop
repz
pop
jl
jns
xchg
pop
rcrb
lods
imul
push
pop
aas
mov
adc
leave
adc
into
sub
adc
je
cmc
pop
cmp
int
out
xor
push
dec
lods
or
sbb
mov
lahf
jl
mov
xor
jne
hlt
ret
orl
add
in
xor
sub
dec
rolb
es
daa
fimull
pop
out
sti
js
pop
mov
push
stos
mov
pop
cmp
push
sub
leave
inc
push
sbbb
adc
push
cmp
int3
cmpsb
iret
fsubrl
push
mov
or
mov
sub
xor
icebp
movsl
sub
inc
pop
iret
push
jp
inc
shlb
aaa
movsw
mov
jp
call
nop
js
xchg
mov
enter
and
aam
jmp
scas
jns
pushf
jmp
sti
xchg
fsubp
and
jg
aad
or
cmpsb
dec
test
sbb
cmp
cmp
movsb
push
jnp
outsb
xor
pop
xor
scas
nop
cwtl
lods
out
shlb
fstl
test
das
inc
jle
outsl
sub
mov
add
jb
aas
jae
shlb
sbbl
repnz
subb
xchg
insb
jb
rclb
test
xchg
cmpsb
mov
dec
sub
push
enter
cmp
pop
scas
test
lahf
das
orb
je
outsl
testl
loope
scas
sti
movsl
jb
xor
lcall
pushf
xor
mov
shll
arpl
lods
pop
decl
cmc
mov
sub
sahf
and
sub
mov
dec
cltd
hlt
imul
loope
push
add
int
lods
pusha
inc
call
ret
ret
mov
insb
inc
cli
adc
data16
fsubrs
jmp
or
fcompl
mov
jae
ljmp
ret
xlat
insl
pop
into
mov
mov
sti
cmc
cmpsl
jmp
imul
fstl
arpl
mov
push
fistps
sub
jl
mov
add
sub
mov
scas
inc
enter
sbb
push
das
ja
enter
mov
dec
push
push
sarl
mov
adc
out
out
lret
lret
add
rcrb
mov
jns
pop
fldcw
in
pop
add
rcrb
dec
xchg
xchg
daa
movsl
shll
mov
mov
popf
mov
mov
cmp
add
sub
aad
dec
or
loop
inc
arpl
xor
xchg
iret
sahf
aaa
sbb
in
test
outsl
sub
pop
int3
imul
inc
dec
sbb
pop
dec
mov
lds
adc
es
sbb
shll
arpl
rcrl
xchg
popa
test
and
or
insl
xorb
fs
je
ss
sub
stos
inc
inc
insl
cld
pop
lret
mov
cmp
pop
mov
cmpsl
jno
stos
inc
or
push
mov
movsb
cmp
fwait
dec
mov
cltd
dec
sub
mov
ds
push
icebp
cwtl
scas
xchg
movsl
xor
xor
pop
sti
aaa
test
push
mov
repz
outsb
push
pop
setae
sbb
push
xor
out
das
mov
push
jl
jnp
lret
pushf
push
scas
add
test
xor
inc
fcomps
sub
mov
dec
mov
arpl
push
movsb
cmpsb
mov
mov
adc
and
je
push
popf
push
mov
cs
sbb
nop
sbb
cmp
mov
xor
popa
jbe
jnp
int
adc
sti
out
add
and
popa
jno
out
jp
ret
lcall
fcoms
jns
movsl
sbb
packsswb
shl
or
pop
or
dec
dec
leave
jmp
in
and
xchg
sti
push
jp
cmp
adc
sub
leave
push
mov
add
iret
adc
repz
push
sbb
inc
xchg
mov
xor
movsb
outsl
jns
sub
or
rcl
mov
mov
outsl
and
adc
clc
push
dec
dec
mov
mov
cmpsl
repnz
sbb
lods
mov
iret
mov
movsb
pop
loopne
iret
lret
cmpsl
mov
mov
mov
xor
jl
and
adc
xor
inc
push
mov
push
mov
push
adc
insb
in
jge
fs
jbe
xchg
in
adc
test
cld
jo
mov
pop
out
cmp
pop
adc
mov
dec
aaa
inc
xor
jecxz
and
shll
lock
sbb
pop
repnz
adc
add
push
xchg
imulb
rorl
data16
out
mov
out
pop
pop
adc
shll
inc
test
popa
sbb
jg
lret
rorl
add
test
xchg
pop
aaa
scas
test
leave
mov
pushf
test
or
imul
andl
pop
nop
jbe
jbe
cmp
fwait
pop
mov
push
int3
jge
lret
sbb
cmp
sub
jl
gs
cmpsb
xchg
movsl
lret
fmuls
std
cmp
aam
and
jb
imul
into
lret
loope,pn
mov
outsb
fistpll
stos
jbe
jbe
xchg
mov
mov
push
repz
jp
dec
in
sti
lret
mov
cltd
ret
dec
dec
mov
cld
cmp
or
xlat
ss
xchg
xor
sub
imul
pop
add
xlat
cmp
insb
adc
enter
jecxz
pop
add
int
rcrl
cwtl
lods
cwtl
jge
ret
fucomp
incb
aas
mov
cli
cld
mov
loop
pop
cmp
es
and
or
add
mov
push
vmulpd
movsb
and
or
in
sub
aam
pop
ljmp
outsl
mov
mov
sbb
test
lock
hlt
or
add
xor
mov
cld
and
xor
mov
cli
sub
xor
test
stos
pop
mov
adc
mov
push
mov
pop
cmp
pop
data16
ljmp
xor
ljmp
xchg
jb
into
fildll
adc
and
pop
sub
sub
xchg
push
imul
in
mov
sbb
jle
fwait
in
jnp
inc
cwtl
aas
filds
dec
in
xlat
orb
lods
sbb
mov
and
push
xor
mov
lock
xor
imul
inc
fmuls
gs
sub
out
lcall
sub
adc
int3
pop
rorb
or
jmp
xor
and
lock
xchg
sub
lds
imulb
jge
lods
cltd
add
ficomps
jae
xchg
adc
pop
jmp
outsb
fimull
scas
and
mov
lods
sbb
add
shrl
add
insb
inc
mov
mov
cld
out
ja
ja
add
aad
imul
loopne
fs
rcll
mov
es
out
shlb
push
stc
stc
shlb
cs
test
shrb
neg
out
xchg
repz
dec
mov
stc
jge
adc
dec
xor
sbb
rcrl
mov
gs
arpl
push
testl
mov
sub
les
cmpl
fistl
add
xor
outsl
loop
mov
and
lret
jb
or
add
in
lock
movsb
dec
xchg
mov
inc
cmc
dec
mov
stos
imul
dec
das
jns
jae
adc
cmp
dec
pusha
xchg
aas
clc
int
lcall
scas
aas
pop
loopne
or
add
push
push
mov
cltd
and
and
out
adc
mov
inc
stos
push
and
out
call
cmp
test
dec
sti
add
cmp
jnp
arpl
sub
jne
mov
mov
pop
rcrb
cli
and
jne
jne
sub
pop
jne
test
mov
les
out
sub
xor
add
cmc
and
adc
add
stos
mov
jmp
in
add
cmp
outsl
sub
add
sbb
mov
mov
xchg
pop
outsb
cli
clc
adc
xchg
add
std
jl
popa
lea
lea
popa
rol
call
stos
dec
add
addb
add
enter
flds
into
mov
test
mov
lea
jnp
jl
or
add
subl
xor
or
repz
rol
sbb
addr16
stc
sbb
ja
xor
push
mov
jb
mov
icebp
mov
clc
scas
sbb
sub
push
add
sub
inc
sbb
sub
shrb
std
ret
call
cmp
clc
jo
jl
or
or
cmp
inc
lods
add
mull
test
mov
mov
push
jp
shl
inc
push
xchg
mov
jno
test
pop
jp
lods
lcall
dec
and
mov
leave
xor
call
jne
mov
cmp
push
outsl
sub
mov
addr16
pop
insl
lea
adc
sub
mov
inc
and
mov
and
adc
mov
xor
push
mov
movb
movsb
inc
dec
test
test
sbb
pop
dec
dec
in
and
test
cmp
cmp
popf
out
inc
adc
call
daa
jle
insb
enter
dec
or
aad
add
mov
stos
xor
and
xlat
addr16
lret
pusha
mov
mov
movsl
mov
xchg
inc
or
mov
mov
dec
lock
testb
or
jo
divl
insl
xor
jge
or
pushf
leave
add
stos
xlat
dec
mov
cli
fwait
push
popf
clc
xchg
jmp
pop
xor
sbb
mov
loopne
and
push
int3
inc
out
fwait
or
lods
pop
int
scas
xor
dec
lea
mov
mov
pop
mov
hlt
jle
or
aas
pop
flds
sbb
push
pop
outsb
shll
aad
add
fildll
adc
fisubrs
mov
hlt
adc
push
je
mov
sbb
fsubs
mov
jecxz
stos
hlt
iret
xchg
adc
adc
insl
sarl
enter
fdiv
and
loopne
ror
mov
sbb
ja
xlat
inc
mov
gs
fsubp
and
jne
nop
pop
mov
jae
dec
pop
sub
add
xlat
idivb
cmp
mov
hlt
jecxz
jmp
hlt
fmull
xor
cmc
add
addr16
cmc
adc
adcl
mov
fadd
mov
dec
les
pop
lret
sub
cs
xor
into
or
mov
decb
das
fldcw
xor
mov
mov
in
dec
pop
push
jmp
xchg
pushf
pop
mov
movsl
dec
push
or
xchg
pusha
mov
outsb
dec
es
jne
and
movl
jp
dec
sbbb
ss
aad
or
inc
xchg
pop
repz
fwait
test
cmpsb
sbb
subl
sbb
popa
sahf
and
scas
jp
fs
add
lcall
pop
ss
addr16
dec
xchg
das
mov
dec
mov
out
jl
out
scas
sbb
mov
stc
test
inc
xchg
js
dec
xchg
daa
pop
gs
mov
jb
mov
aaa
insb
push
clc
bound
hlt
push
repz
adc
scas
outsl
jne
nop
es
xchg
adc
je
ret
das
xchg
jb
arpl
fs
sar
push
out
nop
fs
js
inc
fistpll
fs
mov
sub
ffree
mov
std
aas
xchg
jle
pop
imul
mov
lock
hlt
push
fs
push
add
xor
scas
push
in
add
adc
cmp
jge
test
jl
and
fs
or
test
adc
cmp
loopne
ret
jns
cmp
fmull
outsb
mov
cmp
lret
xor
adc
call
mov
inc
shl
popf
mov
xchg
js
dec
ss
pop
out
test
xor
push
enter
add
push
and
imul
push
aas
addb
insl
push
add
ret
orl
andl
inc
test
mov
ds
and
test
push
or
dec
inc
aad
jmp
cmp
add
mov
movsl
stc
pop
adc
addr16
addr16
push
and
inc
jp
xchg
inc
mov
in
cmp
or
enter
out
mov
xlat
fcmovnu
test
pushf
sub
insb
cmp
jp
nop
cmp
hlt
leave
jl
lret
mov
lods
in
add
pop
int3
mov
sub
sub
gs
add
jecxz
popf
add
mov
add
cmp
repnz
jle
call
enter
out
sti
std
adc
mov
mov
in
mov
push
pop
rorb
shlb
arpl
pushl
cli
sbb
mov
lahf
jne
dec
pushw
daa
or
push
enter
adc
mov
test
xor
cmp
adc
or
jns
mov
stos
sub
mov
push
inc
movsl
xor
mov
jle
movsl
bnd
inc
lds
lods
jns
rcrl
lods
mov
pop
xor
mov
rcrb
cmp
arpl
sbb
hlt
mov
pop
ljmp
aas
jecxz
xor
cmp
jbe
jb
and
outsl
inc
std
shrb
lret
mov
and
insb
lret
jp
sbb
movsb
xchg
rorl
aad
popa
loope
cmp
mov
lea
lods
idivl
cmp
cmpsb
hlt
sub
js
or
pop
and
call
add
outsb
je
cmpb
jnp
ja
lock
add
pusha
pushf
sbb
dec
mov
fwait
xlat
inc
leave
xor
ljmp
push
jo
icebp
stos
sub
test
bound
add
movmskps
fcmovnb
dec
adc
mov
and
cmpsb
add
aas
imul
es
in
popf
jbe
popf
push
push
jne
jmp
mov
sbb
in
cmp
mov
sbb
sbb
cmp
jbe
lahf
jge
enter
inc
in
pop
inc
ret
jnp
pusha
mov
dec
cltd
roll
std
cld
pushl
sub
mov
cmpsb
shl
scas
cld
mov
in
mov
xchg
and
insb
mov
and
pop
add
mov
push
push
clc
mov
push
adc
int
jmp
jecxz
xchg
call
pop
jp
cld
mov
es
xor
jl
aam
sahf
fstl
mov
fsts
adc
mov
mov
in
addr16
test
aaa
aas
lcall
iret
jne
loop
push
ffreep
fmuls
imul
inc
lret
pop
and
mov
mov
jne
push
mov
sub
dec
mov
xlat
xor
adc
addr16
mov
pop
add
mov
xor
mov
movsb
inc
dec
mov
jg
stos
in
jmp
mov
sar
out
addr16
cmp
and
fstl
outsb
sub
sbb
fsubl
cmp
and
mov
xor
inc
xchg
dec
jne
jge
adc
sub
movsl
mov
decl
pusha
cmpsl
lds
ret
inc
push
inc
and
notb
mov
fcomps
nop
dec
dec
mov
js
mov
pop
push
andb
repnz
ret
fwait
jle
pop
fnstcw
repnz
dec
icebp
add
xlat
dec
insb
push
test
data16
inc
pop
sub
iret
aam
jg
lret
insl
int
iret
inc
std
push
aam
fstps
inc
adc
inc
xor
xor
adc
fistps
add
pop
popa
pop
adc
inc
lea
xor
insl
clc
lcall
enter
sbb
inc
stos
jb
shrl
mov
in
and
mov
cmp
xor
jne
je
mov
sub
pop
pop
cmp
std
mov
mov
cli
mov
sti
je
andl
or
sub
into
jecxz
or
jne
pop
scas
sbb
mov
jecxz
jo
sbb
cmp
ror
push
adc
pop
fsts
sti
int3
or
bound
cwtl
mov
pushf
mov
mov
push
add
movsl
jmp
xor
push
lods
xchg
sub
pop
mov
inc
imul
lods
mov
ret
pcmpgtw
pusha
push
push
add
insl
or
pop
sbb
push
mov
mov
sbb
mov
inc
hlt
std
jae
movsb
aas
pop
pop
es
jno
push
and
int3
push
jmp
cltd
mov
pop
ret
sub
scas
pop
jo
ds
ret
cmpsl
cwtl
les
in
cmp
mov
popf
gs
lds
mov
aad
or
cmp
repnz
or
jmp
adc
pop
mov
loopne
adc
pop
push
scas
imul
jmp
dec
and
mov
sbb
jb
or
data16
jl
add
cmp
sbb
enter
xor
jne
popa
sub
call
rolb
jae
mov
mov
rorb
pushl
call
icebp
ret
les
xchg
jns
popf
jne
loopne
inc
aad
loopne
jecxz
cmp
scas
outsl
xchg
in
jge
add
test
mov
cmp
cmp
dec
dec
jne
cmp
jno
pop
xchg
mov
push
pop
sbb
cwtl
lods
add
xchg
push
pop
sub
xor
push
hlt
call
ljmp
sti
repz
xor
mov
icebp
xchg
mov
mov
add
pop
in
add
pop
test
aas
enter
stos
inc
aas
cmp
pushf
xchg
addr16
movsl
in
mov
popf
shrb
pop
add
rclb
and
add
jne
sbb
and
dec
in
punpcklbw
lods
addr16
inc
lods
sub
stos
mov
xor
out
mov
mov
dec
mov
jbe
adcb
dec
fwait
mov
imul
inc
fsubrs
test
xchg
dec
test
sbb
stos
and
pushf
jle
mov
in
in
jecxz
xchg
mov
add
xor
pop
push
cli
insl
aam
jle
xchg
inc
jbe
sub
adc
int
mov
sbb
push
andb
icebp
jp
xor
les
in
cmp
mov
insb
push
push
adc
daa
jne
mov
xchg
ljmp
xor
add
cld
imul
repnz
fdivl
push
je
jle
insl
pop
add
popa
adc
movsb
mov
push
add
stos
pop
xchg
cmp
popl
xchg
dec
lea
push
xchg
jo
test
or
dec
xchg
push
and
out
sub
xchg
ds
pop
shlb
mov
push
inc
dec
mov
mov
aaa
popa
cmp
jne
imulb
movsl
in
imul
mov
dec
xchg
push
pop
loopne
cmp
ja
loop
call
addr16
dec
lods
mov
nop
popf
sbb
sbb
sub
sub
out
or
movsb
dec
lods
orb
pop
ret
cmp
fcompl
repz
mov
popf
adc
jo
test
pop
inc
loopne
dec
jecxz
rcrl
cmpsl
fisttpll
push
cmpsb
mov
enter
mov
mov
mov
insl
push
mov
sbb
or
orb
aam
loopne
sbb
aad
loopne
mov
jnp
push
fwait
inc
fdecstp
sub
mov
iret
shrl
inc
jge
jb
add
jno
mov
mov
sub
mov
out
mov
mov
push
add
sub
in
movsl
dec
bound
and
imul
pop
sbb
mov
xchg
pop
cmpsb
out
pop
mov
lods
or
xorb
cli
ret
xor
jae
or
dec
jb
add
jno
push
xchg
loopne
ret
outsb
xor
lahf
out
adc
jmp
notb
addr16
cs
fnsave
clc
add
lods
outsl
mov
sbb
roll
mov
icebp
dec
inc
lret
xor
mov
jae
mov
or
mov
inc
mov
pop
enter
repnz
outsb
std
rcl
out
vpavgw
subb
les
xchg
rep
icebp
int3
pop
gs
pop
and
and
add
and
or
ret
mov
call
inc
addb
fmull
sub
pop
repnz
xchg
push
hlt
or
sbb
cmp
rorl
fidivl
push
daa
loopne
lea
outsl
and
cmp
sub
aaa
jp
int3
test
cmp
inc
mov
jmp
fcmovne
test
jb
in
scas
repz
xchg
and
dec
iret
insl
divb
xor
out
sbbl
js
into
jmp
pop
add
or
xchg
popa
enter
xlat
int
test
cmpsl
enter
lea
cmp
lret
fnstcw
jg
call
mov
iret
lock
pop
push
addr16
xchg
lds
mov
leave
cmp
adc
enter
push
jmp
mov
mov
rolb
stc
push
cmp
lret
cmp
adc
push
pop
fnclex
scas
sub
cwtl
and
xchg
sub
adc
sbb
neg
dec
or
and
outsb
xor
lods
out
push
stos
mov
imul
add
movsl
push
stc
enter
dec
pop
mov
and
rclb
js
cmc
pop
daa
out
mov
mov
incl
pop
sub
nop
jmp
fwait
loope
test
sub
and
mov
push
sahf
jae
cmpsb
into
aaa
and
add
sbb
ret
push
lahf
inc
lods
test
fisttpl
push
daa
aad
fnsave
dec
movsl
xchg
xchg
xchg
cmp
jmp
enter
push
test
fcmovb
push
sbb
mov
out
dec
ret
jno
cmc
cld
addr16
movsb
movb
push
jo
mov
inc
mov
out
das
sarl
scas
insl
xor
sti
adc
repz
enter
fwait
imul
fnstcw
sbb
repnz
dec
out
lcall
stos
adcb
ret
push
push
cli
jmp
mov
xchg
mov
push
mov
pop
jle
mov
cmpsb
dec
add
es
xchg
xchg
outsb
inc
push
std
rclb
mov
inc
add
jns
jg
xchg
loop
sub
ret
in
shrb
std
inc
sti
jo
mov
cld
xchg
xor
stos
xor
ret
addr16
xchg
hlt
vprotw
xor
pop
adc
lods
jo
pop
inc
pop
pop
push
imul
inc
std
jo
push
push
subb
test
out
pop
xchg
push
dec
fs
add
outsl
add
popa
xchg
inc
and
push
push
ror
pop
aam
inc
or
mov
imul
ss
scas
push
and
and
mov
cmp
and
xor
xlat
xor
imul
mov
in
iret
add
mov
and
mov
xor
mov
or
mov
scas
push
or
pop
roll
cmp
pop
std
or
dec
xor
and
jbe
fidivrs
loopne
push
mov
aaa
rolb
imul
mov
rorb
xor
dec
or
fists
xlat
or
imul
pop
imul
ret
rcll
ss
xchg
and
cmp
xchg
sub
inc
dec
push
outsl
fildll
aam
out
xchg
std
or
push
cmp
inc
inc
std
or
add
cwtl
shrb
in
stos
mov
push
push
cmp
mov
out
fildll
mov
enter
push
jp
sub
cmc
or
test
loope
cmc
xchg
imul
test
inc
mov
push
pop
call
dec
jne
jle
mov
cmpsl
outsb
xlat
test
lahf
sbb
sub
cld
jne
cmp
mov
gs
mov
in
out
inc
sub
sahf
mov
aaa
and
mov
push
shr
test
test
mov
movsl
mov
test
outsb
and
popa
xchg
add
cwtl
stos
jnp
popf
jmp
add
pop
cmp
lock
mov
jl
jae
jb
je
xor
data16
jle
xchg
cld
lcall
in
push
mov
hlt
or
cs
add
cmp
inc
std
push
mov
sarb
fidivrs
adc
sahf
push
inc
rorb
test
jge
xor
push
mov
xchg
es
in
cmpsl
push
mov
mov
jp
mov
bound
jns
adc
fiadds
xlat
das
scas
jns
xchg
push
dec
cmpsb
mov
scas
jns
pop
add
or
push
ret
xchg
pshufw
xchg
jo
mov
fninit
lahf
mov
add
pop
cs
lret
push
and
mov
out
jo
xor
addr16
ja
xchg
fbstp
mov
loopne
dec
test
repnz
cli
xchg
add
outsl
loope
lock
clc
or
jne
cmp
cmp
mov
xchg
fimull
rorb
sarl
icebp
push
mov
in
inc
jecxz
ss
mov
hlt
lods
cmc
xchg
rorl
in
and
adc
push
into
add
bound
lock
adc
jmp
subb
xor
jno
iret
arpl
or
or
mov
push
push
mov
push
cmp
mov
es
and
daa
cltd
fsubs
or
ret
les
mov
jno
into
roll
inc
and
imul
inc
pop
xchg
adc
shl
addr16
push
xlat
jg
rorl
loope
push
dec
or
in
jecxz
push
ret
mov
mov
cld
out
into
inc
cltd
test
dec
pop
inc
pop
icebp
push
jl
fcmovnbe
imull
dec
jne
mov
mov
inc
filds
sub
repz
and
pop
xchg
and
mov
push
dec
subb
stos
imul
pop
test
push
fists
enter
jp
push
cld
jmp
cwtl
cmp
in
aam
test
popf
test
sbb
data16
bound
push
sub
pop
out
pop
scas
sub
cmpsb
push
add
jmp
xchg
lods
in
rol
idiv
xorl
inc
pop
pop
int
fdivs
nop
leavew
xchg
inc
cmp
push
push
jge
or
andl
mov
pop
mov
push
adc
mov
mov
arpl
jbe
mov
outsl
cmp
push
rcrl
mov
repz
pop
test
movsb
out
in
fdivr
outsl
call
popf
out
xor
push
push
xor
sti
mov
xor
insl
add
adc
repz
or
shrb
iret
adc
addl
xlat
jno
pop
sub
out
jle
aam
ficoms
mov
add
inc
inc
xlat
push
mov
sub
pop
mov
pop
sbb
in
repnz
pushf
divl
xchg
mov
scas
sub
pusha
fwait
or
test
stc
pop
or
enter
mov
test
and
pushl
jbe
popa
cs
mov
inc
adc
lods
stos
sub
xchg
pop
lock
sub
std
iret
outsb
xchg
cmp
sbb
xor
add
daa
je
jae
outsb
jnp
xlat
push
imul
cmp
scas
es
gs
aaa
movl
push
jnp
mov
call
std
adc
out
cld
daa
in
cmp
mov
dec
test
movsl
adc
sbb
fwait
xor
lds
pushf
add
or
js
fyl2x
jb
rclb
mov
mov
xor
iret
sub
call
fnstcw
gs
push
js
cmp
test
or
loop
lods
mov
jnp
inc
ds
dec
pop
ret
repz
lret
xchg
or
icebp
inc
pusha
adc
xor
mov
in
fisttps
bound
jne
or
arpl
jmp
jge
bound
jl
add
dec
jno
pop
mov
outsl
mov
add
fisubs
dec
mov
or
sbb
jge
sarb
sbb
push
outsb
fdivp
test
push
jb
sbb
adc
xchg
jo
mov
stos
test
test
xchg
push
push
arpl
pop
repz
pop
push
inc
mov
pop
shll
cwtl
cmp
shll
loop,pn
test
push
or
lods
sti
sub
pop
stos
inc
mov
shll
lcall
ds
pop
int
pop
push
inc
inc
orl
aaa
mov
lcall
jno
fcmovnu
mov
sbb
jp
leave
add
pop
sub
push
lods
push
cmp
cmc
mov
rcll
dec
pop
cmp
in
loopne
jmp
jmp
fbld
pushf
sbb
adc
jl
gs
xchg
insl
push
xchg
sub
testl
test
fs
mov
sbb
daa
loopne
adc
bnd
push
push
int
xor
enter
pusha
lret
push
mov
pushf
xor
pop
in
mov
add
in
push
shlb
mov
sbb
mov
push
jne
xor
push
stos
dec
imul
loope
push
or
arpl
mov
cmp
div
out
jp
push
and
xor
int3
xor
les
sahf
je
out
sarb
sub
sub
bound
pop
daa
xchg
stos
dec
fnstcw
push
daa
cld
or
mov
popf
add
and
adc
imul
loop
sub
loope
test
addr16
int3
mov
cmpsl
popa
mov
sbb
mov
call
jecxz
fwait
pop
neg
test
loope
push
mov
cwtl
push
mov
mov
sbb
adc
sub
and
in
xchg
mov
decb
cli
xchg
ffreep
insb
dec
or
cli
and
and
mov
mov
shlb
adcb
dec
inc
adc
gs
xchg
cmp
imul
lret
loop
es
cmpsb
pop
pop
cmp
fildl
hlt
and
or
push
mov
mov
jo
movsb
adc
xchg
inc
fchs
dec
and
mov
pop
outsl
mov
lods
sbb
mov
mov
cmp
jbe
punpcklbw
add
pop
ret
inc
push
push
dec
mov
sti
imul
pop
jnp
and
call
xchg
ds
cli
cmpsb
sbb
dec
inc
es
xchg
sti
lock
stos
sbb
xor
cmp
stc
cmpb
jb
popl
lcall
xchg
dec
ss
and
aam
jge
push
movsl
sub
imul
lods
inc
int
movsl
push
ds
pusha
lahf
inc
and
std
inc
adc
mov
xor
fistpll
in
pop
rcl
jge
xchg
inc
mov
mov
push
out
inc
loop
fsubs
mov
daa
sub
cmc
je
lods
lret
push
iret
dec
aad
mov
in
sbb
xor
xchg
add
cwtl
hlt
sbb
and
int3
frstor
sbb
push
icebp
add
sub
aaa
or
mov
rcr
jp
xchg
in
mov
cmp
and
cmp
mov
out
cmovae
adc
or
and
popa
cmpsl
xchg
mov
cmpsl
mov
cmc
pop
ret
pop
nop
jl
rolb
mov
cld
fs
pop
das
inc
jns
xor
leave
fldl2t
ljmp
inc
lock
imul
lods
iret
sbb
or
ja
int
hlt
pop
pop
sti
sbb
aad
data16
arpl
sbb
sarb
sbb
in
andl
sub
cmc
addr16
sub
cmpsl
dec
shlb
adc
pop
fstpt
imul
mov
sbb
inc
aaa
dec
fwait
into
and
mov
push
and
inc
push
lea
and
inc
xchg
std
or
inc
jo
movsl
add
xor
imull
outsb
xor
test
jo
add
ljmp
stos
dec
xor
or
xchg
sar
daa
insl
jo
call
jge
orl
jb
mov
pushf
sbb
mov
lret
jp
in
push
mov
add
outsb
test
pop
cmpsb
icebp
mov
pop
addl
mov
cmc
insl
adc
test
xchg
adcl
arpl
lds
pop
mov
xlat
mov
pop
sbb
or
rolb
pop
sbb
push
stc
pushf
movsb
ret
fldcw
and
jns
iret
cli
jnp
mov
pushf
fdivrl
jbe
or
add
or
jl
xchg
xor
nop
sahf
xchg
shlb
mov
arpl
mov
movsb
inc
in
lret
push
push
js
icebp
inc
mov
lret
repnz
in
lret
push
ds
push
lcall
movsl
adc
add
push
dec
push
shll
cwtl
into
addb
cld
negb
aaa
jecxz
mov
push
stos
lret
xor
add
dec
pop
pushf
jle
fbstp
jge
ss
sbb
popa
jae
sbb
lcall
in
sub
add
das
mov
lret
loop
dec
cltd
mov
or
bound
xchg
mov
repnz
and
mov
and
mov
push
cli
hlt
rcl
je
in
lds
mov
xchg
test
mov
or
fiadds
xchg
dec
xchg
std
ret
sbb
mov
jae
cmp
jo
cmp
add
jbe
popf
inc
or
jnp
test
push
mov
fnstenv
aam
mov
repnz
sub
les
je
cltd
mov
mov
push
mov
mov
mov
int
jne
fcoms
out
jg
into
nop
jae
jae
fwait
xchg
das
adc
dec
xchg
xchg
cs
cli
xchg
repz
outsb
imul
imul
xor
icebp
icebp
out
inc
repnz
clc
stos
lret
xchg
ja
les
jge
add
fldlg2
ja
xchg
mov
xor
insb
push
cli
mov
jno
mov
testb
movsl
daa
push
aam
mov
fwait
jecxz
or
mov
stos
inc
push
mov
xchg
lret
dec
or
fcoml
add
out
dec
mov
mov
fwait
ja
jge
jae
pop
mov
add
mov
sbb
xor
adc
js
cli
cmp
fs
dec
add
push
rcrb
mov
sub
in
ss
sub
xor
xchg
jns
dec
or
dec
sar
addb
cli
or
bound
gs
and
sub
pop
xor
sbb
fs
and
xchg
xchg
in
pop
jge
cmpsl
mov
jle
es
lcall
lret
push
insb
sbb
imul
mov
sub
mov
and
sahf
push
or
mov
shl
fisubl
sub
dec
jae
inc
jne
dec
add
jmp
xchg
test
pop
popf
popa
addr16
inc
nop
or
mov
jmp
push
in
sbb
dec
cmp
push
mov
mov
pusha
iret
add
push
sub
jne
push
add
loopne
lods
xchg
pop
in
sub
lds
push
insb
mov
lea
mov
rcll
jg
sub
jge
mov
dec
sbbl
xor
push
mov
xor
mov
ret
hlt
xor
shl
adc
icebp
das
dec
mov
lret
into
push
mov
inc
mov
adcb
and
inc
add
cld
jmp
pop
in
aam
outsl
mov
sbb
pop
push
inc
mov
or
mov
rcrb
cmpsl
xor
xor
rcll
loope
dec
mov
adc
clc
pusha
aas
jl
mov
cmova
shl
inc
pop
sbb
popf
cmp
sbb
xchg
add
popf
adc
mov
fwait
cmp
orl
mov
and
inc
shrl
hlt
sbb
sbb
rorl
cmc
addr16
push
out
jb
mov
pop
cwtl
cmp
inc
inc
rcrb
add
into
sbb
xchg
out
sbb
maskmovq
testl
bts
sub
jne
subb
sub
mov
leave
das
movsb
adc
dec
stos
xchg
test
xchg
enter
arpl
les
clc
sbb
or
idivb
mov
xchg
sub
xchg
addb
pop
sti
cmp
jge
ja
ss
in
test
insb
bound
mov
pop
shl
dec
push
out
outsb
sbb
jp
js
jp
outsl
cmp
rcr
xor
or
mov
sbb
inc
mov
or
lds
pushf
cltd
cmpsl
pop
sub
cmp
cs
xchg
xor
sahf
decb
sbbb
or
repnz
outsl
cmp
mov
test
push
jmp
cwtl
push
sbb
jnp
mov
dec
jno
pushf
ficoml
out
mov
jmp
xchg
sub
clc
sub
add
mov
inc
sbb
insb
pop
sub
out
lods
xor
xchg
xchg
or
cmp
aad
lret
dec
pop
mov
das
out
bt
cmp
pcmpgtw
cmp
iret
andb
inc
mov
fcmovb
mov
jl
lret
mov
push
mov
or
lock
lods
data16
add
cmp
in
int3
or
jns
xchg
mov
outsl
mov
dec
mov
mov
dec
movsb
sbb
imulb
mov
in
hlt
gs
fimuls
inc
pop
xor
test
es
mov
inc
or
dec
inc
and
xor
adc
mov
mov
inc
and
popa
iret
dec
push
sub
or
pop
sbb
ja
add
push
pusha
sbb
je
or
and
enter
dec
outsl
stos
or
fstpl
cmc
loop
rol
push
das
push
adc
adc
out
mov
push
stc
jo
jmp
cmc
cltd
jl
mov
jns
lds
add
jo
xchg
xchg
shl
and
or
add
std
dec
cltd
cmp
sbb
jg
int3
pusha
js
jecxz
push
lret
mov
jl
lods
in
cmpsb
dec
idivl
cmp
addr16
aaa
stos
dec
in
in
clc
add
les
cmp
in
adc
outsb
std
arpl
xchg
fs
cmp
sub
push
imul
fcompl
mov
and
push
mov
push
mov
rorb
lea
sbbb
sbbb
add
aam
out
dec
push
dec
and
jns
jmp
mov
or
scas
and
adc
pop
ljmp
mov
pop
sahf
cmc
mov
call
lods
inc
stos
repz
call
pop
push
scas
repz
gs
pop
stos
jge
dec
hlt
loope
arpl
push
addr16
aaa
scas
addl
aas
sbb
mov
jmp
fnstcw
std
lds
mov
pop
mov
imul
cltd
mov
lds
inc
fidivrs
inc
jne
fs
mov
xchg
je
adc
aam
pop
xchg
jne
jne
sub
xor
lock
xor
sti
mov
adc
add
scas
push
mov
sub
mov
xor
out
sbb
adc
and
shll
sbb
xchg
pop
xchg
push
mov
push
jb
cmp
mov
dec
dec
xor
mov
shll
lods
sub
dec
sub
out
xor
sbb
or
cmp
iret
pop
cmp
xchg
inc
sub
push
call
je
out
jge
adc
sarb
lods
pop
orb
push
push
es
popf
mov
int3
and
cmp
jns
test
mov
sarb
push
pop
mov
xchg
out
movsb
xchg
mov
testl
jbe
pusha
mul
pop
es
ss
jns
js
push
lahf
add
sbb
or
cli
les
fidivrl
inc
jb
push
pop
xchg
out
loope
lret
jb
xchg
sbb
push
and
jnp
rorl
sub
push
mov
cltd
iret
xor
dec
out
pusha
jns
aam
push
pop
cmp
outsb
dec
or
lret
sbb
repnz
das
int3
mov
outsb
xchg
jl
dec
repz
jmp
negl
int3
sbb
ja
jge
mov
mov
clc
sub
not
inc
mov
and
pop
lock
call
sbb
int
enter
das
cmp
dec
mov
fstps
lcall
testb
insb
cmp
dec
fdivl
mov
insb
aad
leave
push
sbb
add
mov
cmp
test
sti
imul
out
xor
add
leave
mov
pop
test
andl
xor
xor
sub
test
sbb
add
pop
and
inc
mov
jecxz
pop
sti
repnz
test
stos
rcll
inc
icebp
shr
andl
jnp
pop
cmp
mov
sbb
dec
dec
mov
ret
inc
xor
mov
add
adcl
cmpsb
and
add
movsb
in
mov
push
mov
scas
arpl
mov
lcall
jb
mov
into
mov
fldl
lods
xchg
add
adc
mov
out
pop
gs
jp
xor
mov
push
das
lret
xor
sub
sbb
add
insl
bound
data16
sub
mov
mov
mov
repz
int
xor
movsl
adc
mov
cmp
cltd
mov
clc
ret
mov
jle
add
jg
fmull
dec
add
xor
mov
inc
push
mov
sbb
mov
or
jl
std
in
add
and
aam
jl
cmp
mov
int
fs
xchg
repz
adc
int3
xor
jle
lret
mov
xchg
mov
rcll
xorl
stos
fidivrl
and
push
jno
inc
outsb
test
mov
jp
inc
mov
jg
xor
stos
pop
or
outsl
loope
imul
pop
pop
jae
or
and
in
or
cmpb
pusha
loope
inc
pop
loop,pt
pminub
jns
jecxz
dec
out
and
xor
pop
xor
mov
aas
push
jae
dec
fs
data16
sbb
pop
xchg
sarb
inc
pop
xor
and
mov
xchg
leave
into
aas
lea
push
idivl
sbb
ficompl
push
mov
sub
rclb
mov
mov
aas
sti
das
or
fiaddl
xchg
xor
ljmp
pop
push
sub
dec
mov
in
repnz
xchg
iret
adc
mov
jp
add
add
mulb
xor
jmp
mov
jg
fidivrs
dec
mov
pop
repz
fstl
xchg
dec
insl
js
mov
dec
mov
cmp
adc
das
into
inc
es
add
sbb
mov
xlat
jns
mov
push
mov
test
sub
jns
daa
add
daa
cli
insb
ds
movl
fincstp
lcall
shrl
pop
mov
imul
ror
pushw
mov
cld
push
add
push
jno
lea
pop
imul
out
stos
push
mov
jne
push
or
out
pop
add
push
xor
fnstcw
pop
mov
xorps
popa
dec
fisttps
test
insl
sub
lods
mov
push
xorb
mov
jnp
pop
sbb
std
cld
sub
inc
je
pop
push
scas
adc
inc
mov
jg
push
and
call
lahf
sbb
jno
gs
xorb
sub
pop
xor
les
aas
shll
movsl
scas
clc
jmp
test
mov
shll
repz
lea
jnp
outsb
fstpt
add
xor
adc
cwtl
enter
sub
cs
jno
bound
inc
push
clc
add
or
arpl
sub
mov
seta
mov
or
out
jmp
pop
mov
jno
decb
adc
loop
xor
push
or
adc
pop
xor
sub
testb
push
clc
stos
ret
scas
sub
fs
push
mov
xchg
stos
add
test
adc
test
arpl
iret
dec
sbb
fdivp
xchg
push
mov
in
push
ja
jno
fldlg2
repnz
push
imul
add
test
int3
mov
int
lahf
inc
enter
cli
cmp
lds
xchg
rorl
test
pop
popf
bnd
lret
push
sub
ja
pushf
sbb
dec
cmp
add
stos
inc
fisttpl
les
inc
mov
jns
scas
mov
sub
xchg
xchg
add
out
and
iret
addl
icebp
lods
dec
adc
or
jg
sbb
mov
inc
jg
push
call
test
or
jg
inc
lock
movsb
add
imul
add
int3
mov
inc
push
loopne
sbb
push
nop
cmc
dec
out
cmp
addb
inc
nop
scas
and
pushf
and
cmp
pop
cmpsb
push
push
inc
jecxz
cmp
cmc
repnz
xor
jo
xor
popa
addl
pop
test
push
xchg
in
int
xchg
sub
mov
movsb
in
decb
in
fidivl
xchg
sarl
xorb
cmp
cmp
subl
cltd
push
xor
jns
adc
lret
xor
jmp
and
cmp
push
xchg
jecxz
cmpsl
iret
sub
popf
jmp
sti
loop
sti
mov
xor
add
inc
pop
shll
inc
push
adc
xor
stos
imul
fists
jb
std
repz
jl
cmp
dec
pop
xor
subl
lcall
cmp
sbb
mov
cs
int3
inc
inc
xchg
pop
mov
sub
inc
shll
mov
test
push
mov
jne
jne
fs
dec
or
push
cli
or
lcall
clc
sub
rcr
loope
stc
addr16
push
adcl
clc
add
xor
mov
jne
xchg
rcrl
fcomi
loopne
cmp
xchg
xor
mov
mov
cmp
bnd
jle
call
sbb
ds
and
pop
cmp
jg
outsb
cs
notl
outsb
sub
push
bound
ret
das
inc
push
fbstp
cmp
xchg
mov
pop
in
pop
jl
xchg
inc
xor
ljmp
or
out
dec
lock
loopne
cli
mov
push
aad
push
cmp
or
push
je
loop
sub
adc
mov
sub
xchg
bound
out
loop
mov
ficoml
jbe
xchg
repnz
dec
mov
pusha
mov
mov
loop
jge
cmp
or
xor
jg
push
sub
sub
inc
clc
pop
pop
lahf
mov
movb
lret
jnp
out
push
int3
mov
sbb
hlt
pop
outsl
sti
add
jle
xchg
mov
cmp
jae
ja
pop
mov
inc
cmp
outsb
insb
pop
in
loope
dec
lret
adc
sub
jecxz
mulb
popa
mov
xchg
and
sbb
outsl
ss
jbe
rol
and
dec
pop
mov
clc
testb
dec
divl
cmpsl
mov
add
lock
ds
mov
cmp
addr16
mov
movsl
lahf
fimuls
or
aaa
in
xchg
jbe
jg
into
or
fwait
jmp
in
out
les
enter
xchg
shll
sub
test
mov
push
or
xor
cmp
stc
pop
test
jle
loopne
stos
iret
sub
add
and
pop
bound
push
inc
stos
mov
adc
push
fists
mov
subb
add
push
imul
jbe
in
add
mov
push
dec
lds
int3
xor
shrl
sarb
ficomps
mov
or
sub
pushl
out
xchg
mov
or
xor
insl
sub
insl
or
daa
add
cmp
rclb
or
pop
and
push
sbb
aaa
clc
rorb
jne
daa
adc
jge
imul
or
lds
adc
and
call
ja
mov
xchg
rcl
adc
scas
mov
fidivrl
mov
mov
adc
dec
xchg
movsb
shrb
jne
cltd
sub
clc
int3
mov
mov
fsts
or
daa
push
insb
mov
xchg
test
icebp
or
scas
mov
scas
sub
mov
mov
sub
dec
xchg
mov
mov
inc
push
pop
insb
rcll
push
push
sub
sbb
mov
push
out
add
aad
pop
lret
outsb
out
divb
in
popf
push
push
call
and
or
imul
pop
inc
mov
lds
jg
movsb
les
dec
xchg
xchg
add
jecxz
mov
ss
mov
inc
cmp
jmp
mov
das
and
and
dec
mov
push
adc
in
hlt
addl
push
xor
repnz
mov
add
sbb
push
sbb
xor
sbb
outsb
xor
cmpsb
into
xor
mov
lods
push
pop
adc
in
hlt
fcompl
add
iret
cld
fucomip
adc
mov
dec
mov
test
sbb
mov
int3
mov
fidivrs
adcb
cmpb
push
jno
imull
add
pop
ja
jp
fmull
sub
dec
push
xor
inc
xchg
sub
mov
sub
fldenv
or
cmp
jno
mulb
je
stc
xchg
icebp
popa
sbb
and
mov
adc
int
inc
jmp
test
inc
cmc
cmpl
ds
mov
call
es
icebp
xchg
cld
ss
xor
lods
stc
test
movsb
pop
pop
dec
mov
in
leave
xchg
jl
test
xchg
jbe
xor
testb
mov
mov
call
negl
and
test
popf
xchg
stos
push
gs
add
dec
in
fwait
push
or
lahf
fldenv
rorb
in
xor
sbbl
sarb
adc
lcall
or
adc
inc
and
rorl
andb
inc
and
and
inc
mov
stos
cmpsl
aam
xchg
push
out
mulb
clc
lret
xchg
ss
insl
fs
cmp
push
pop
xchg
inc
popa
inc
out
rcl
sti
or
push
fwait
dec
inc
lods
cmpxchg
movsb
fstps
iret
shl
sub
popa
loopne
push
lcall
orl
insb
js
pop
add
adcl
xor
fstpl
sbb
xchg
or
scas
dec
sahf
mov
lea
mov
sbb
xor
test
or
scas
shll
push
or
push
inc
cmp
stos
cli
mov
ja
cmp
ljmp
insl
test
cs
inc
inc
fldl2t
jmp
xor
sub
aas
test
inc
adc
adc
loop
add
sbb
pusha
mov
or
divl
sub
push
stos
dec
sbb
sub
jae
mov
inc
jbe
into
imul
ret
jo
mov
cmpsb
test
iret
scas
mov
fisttps
aad
repnz
adc
push
jbe
loop
push
jo
pop
das
push
mov
push
push
push
lods
out
enter
cli
test
add
adc
mov
pop
icebp
xor
lret
dec
mov
pop
fwait
jae
pop
and
out
mov
jg
sbb
push
shll
mov
das
testl
cmp
pop
lds
dec
fdivrs
push
push
sahf
leave
adc
es
outsl
loopne
pop
andb
mov
push
in
negl
in
data16
adc
and
outsb
test
push
insb
mov
and
push
mov
iret
cmc
xor
les
and
lret
xchg
stos
sbb
arpl
je
adc
dec
push
lahf
jmp
push
inc
loope
cwtl
sub
cmp
inc
jle
aas
loopne
das
js
arpl
and
ljmp
cli
pushf
inc
mov
sub
mov
xchg
out
fbld
jmp
movsl
and
in
testb
inc
push
arpl
cli
arpl
insl
push
loop
mov
ljmp
mov
pop
cmpsb
sbb
jle
insl
mov
leave
stos
pop
sbb
dec
out
cli
aad
mov
sub
inc
push
add
sbb
pop
add
stc
mov
mov
stos
push
movsl
movsb
or
je
push
scas
mov
pop
add
and
and
pop
cmp
ja
daa
lret
into
dec
loop
sbb
and
popf
or
in
into
loop
in
push
test
cmpl
hlt
cmpsl
popa
out
fwait
cs
loopne
ja
outsl
ret
push
and
dec
ljmp
fcomi
pop
xor
inc
dec
jg
mov
xchg
pop
pop
cmpsb
mov
add
outsb
call
nop
sbb
push
into
pop
xor
jns
andl
xchg
jmp
or
lret
push
fildl
scas
pop
loop
cmp
sbb
sub
fdivrl
outsb
aaa
cli
adc
std
push
sub
add
daa
cld
addr16
dec
jbe
pop
mov
xchg
add
cmpsb
mov
sub
push
pop
shl
mov
cli
jp
pop
into
pop
hlt
scas
add
int3
mov
jge
push
mov
outsb
hlt
xorl
cmp
adc
mov
jmp
jne
daa
pop
clc
cltd
mov
addb
fs
push
imul
das
sbb
xchg
sbb
xor
icebp
in
mov
sti
imul
out
loopne
jecxz
js
sbb
xor
nop
std
mov
sub
loope
pop
scas
sbb
pop
repz
enter
rol
xor
jp
call
hlt
mov
jp
gs
adc
jne
cmpb
adc
js
sahf
mov
andl
sub
adc
xor
push
enter
pop
ljmp
inc
sbb
mov
xor
fstpt
stc
aam
mov
cwtl
pop
push
mov
xchg
or
fs
cmpsl
and
or
push
fiadds
jge
push
mov
jp
jo
jle
sbb
addr16
aas
cmp
push
xchg
mov
hlt
mov
lods
or
sbb
push
inc
loop
movsb
mov
mov
mov
pmaddwd
dec
icebp
loop
repz
fistl
and
cmp
push
xor
jae
xchg
call
gs
jns
add
mov
mov
pop
push
in
addb
outsb
cmp
sahf
jge
int
imul
dec
popa
cmc
test
test
add
or
fwait
or
pop
into
add
iret
dec
push
lcall
or
dec
adc
cltd
pop
lret
push
sub
lods
mov
pushf
fisttpl
fadd
enter
cmpsl
aas
adc
clc
add
mov
push
sub
xchg
cwtl
add
repz
ret
js
ljmp
mov
pop
aaa
adc
in
jo
fistps
daa
cmp
cwtl
shrb
adc
idivl
adc
iret
outsl
mov
push
out
mov
add
aas
inc
adcl
call
jmp
int3
fsubrp
int
movsb
scas
inc
in
insl
dec
cs
lods
popl
int3
lcall
mov
out
push
leave
mov
add
add
pop
sub
xchg
xchg
and
test
sbb
pop
ss
in
xchg
xor
push
shl
fwait
movsl
dec
xchg
lea
test
bound
push
loope
fistps
ror
enter
movl
loopne
out
add
jmp
test
xlat
push
mov
shll
call
movsb
adc
ja
xor
bound
mov
ficoms
decb
sub
test
mov
sub
sbb
and
lock
mov
adc
and
or
mov
push
in
xchg
pop
notl
nop
inc
scas
pop
mov
repnz
cmpsl
inc
adc
test
jg
mov
ret
push
popa
inc
jecxz
jbe
js
insl
pop
out
lret
repz
mov
scas
frstor
mov
push
mov
sbb
mov
sbb
jg
push
mov
test
sbb
dec
jb
mov
ffree
xchg
sub
add
jo
mov
sbb
popf
push
loopne
icebp
inc
mov
add
imul
add
js
out
data16
addr16
hlt
xchg
add
addr16
notl
adc
cltd
cmpsl
dec
mov
xor
imul
popa
scas
xor
lock
std
dec
jp
insl
rclb
shl
mov
xor
cld
push
cmp
hlt
test
xor
mov
fwait
repz
into
add
push
sub
sub
out
loop
sub
into
inc
xchg
adc
das
mov
lds
pop
jle
jns
dec
mov
jl
rolb
fistpll
lods
jne
xor
mov
pop
ret
sbbb
std
ljmp
cmp
outsl
loopne
enter
pop
jecxz
sbb
jo
add
xchg
sahf
fs
push
mov
add
cli
cmpsl
xor
mov
aad
clc
push
dec
xchg
je
cmpb
jmp
xchg
cwtl
and
mov
and
pop
jle
aad
pop
dec
sti
or
inc
jmp
sbb
shll
sub
cs
mov
out
cmp
dec
ja
xorb
fisttpll
sbb
stos
sahf
cltd
dec
outsb
ss
add
or
inc
xchg
mov
movsl
rcr
dec
shl
mov
add
mov
jb
popa
daa
repnz
insb
sti
dec
popa
stos
xlat
out
mov
les
mov
pop
sti
sbb
fwait
ss
jmp
rol
sahf
jle
rcrb
inc
inc
and
push
push
stc
loop
jge
ret
nop
xorb
ror
push
testb
xor
inc
mov
sbb
jo
lret
sub
out
mov
or
jg
fucomip
fwait
dec
in
sbb
jp
mov
mov
jmp
lret
clc
sub
scas
mov
mov
rorl
cmpsb
stos
dec
or
jl
lods
sub
jo
cmp
adc
jns
xchg
ret
sti
in
lock
cwtl
mov
bound
cmpsb
andl
lret
and
pop
sbb
add
xchg
inc
mov
aam
repnz
push
add
push
mov
pop
test
jbe
jbe
and
jle
jne
outsl
lcall
mov
lods
dec
xchg
out
fdivrs
xchg
out
aad
adc
imul
xchg
pop
into
clc
mov
mov
aas
mov
data16
cwtl
mov
stc
sub
mov
icebp
cmp
mov
cmpsb
cmovnp
pop
addr16
mov
data16
add
stos
xchg
jae
int
bound
sub
popf
loop
out
fwait
adc
std
std
bound
lds
out
sbb
sub
dec
ss
fwait
cmp
test
ljmp
jle
jecxz
fldl
incb
in
sub
mov
sarl
sbb
enter
pop
xchg
dec
cmp
lea
lods
fisubrs
push
scas
dec
rorb
pop
ret
cwtl
mov
or
mov
call
int3
adc
lock
pushf
cmpb
mov
insb
fs
sbb
test
int3
or
ret
adc
test
adc
pusha
jbe
insl
sub
ret
jbe
loopne
ror
inc
xlat
addb
pop
fisttps
dec
test
ret
or
shrb
jnp
cmpsl
dec
mov
rep
cs
jns
push
into
aaa
pop
jo
ds
fxch
dec
pop
mov
test
dec
aad
adc
les
stc
mov
loopne
mov
mov
scas
pop
jno
out
aad
mov
out
es
ret
data16
fwait
jns
cmp
sub
loope
push
repz
pop
adc
adc
lret
and
cmp
std
out
push
je
pop
cmp
fnstcw
inc
into
je
pop
loope
imul
lcall
pop
push
in
cmp
adc
and
test
or
stos
jo
xchg
adc
shrb
and
mov
inc
sbb
sti
mov
or
aam
and
popa
idiv
sbb
insb
and
lahf
rcll
cs
push
test
sbb
xchg
test
push
sub
rcl
fwait
cmp
sub
das
xchg
rorl
jp
pop
sti
lcall
jns
inc
idivb
sbb
fmull
je
test
mov
inc
inc
out
popa
clc
stc
pop
add
xrelease
mov
and
popf
jg
push
lock
fildll
lahf
mov
jno
mov
xchg
adc
xchg
or
addr16
dec
xor
cmp
lds
push
shlb
or
pop
pop
mov
sub
int
push
outsb
push
cmp
movsb
and
mov
aas
mov
xchg
in
call
mov
imul
fisubs
stos
xchg
and
mov
sub
xor
jmp
mov
imul
fiadds
xor
jecxz
rorb
add
popa
das
js
pop
mov
lret
mov
xchg
and
sub
inc
test
outsl
mov
or
xor
addr16
xor
push
pop
stc
iret
std
jne
xchg
lods
mov
into
sub
std
adc
mov
adc
mov
pop
inc
sub
jno
insb
inc
xchg
push
aad
imul
mov
xor
mov
xor
jg
loope
imul
dec
scas
mov
popf
sbb
aas
dec
fisubl
xchg
test
je
jne
xchg
std
jne
push
cmpsb
mov
js
aad
aam
loope
sbb
out
push
sbb
popf
outsb
jbe
xor
nop
in
adc
rcl
pop
stos
mov
lret
sbb
lgs
jb
lea
inc
in
cs
jl
pop
jp
xor
call
mov
inc
into
fidivs
adc
mov
mov
lods
xchg
sti
sbb
and
or
je
add
outsb
popf
xor
adc
ljmp
sbb
push
xor
sub
xchg
sahf
lods
cmp
mov
fildl
cmpsb
je
repz
pop
outsl
les
xchg
dec
je
cmp
xchg
jl
popf
cltd
pusha
mov
in
mov
cmpsl
push
hlt
sarb
xchg
jae
out
sbb
das
fxch
mov
outsl
testl
pop
xor
jne
mov
fadds
jae
push
add
insl
pusha
adc
push
lcall
out
pusha
mov
or
xchg
outsb
aas
inc
jae
fstpl
xorl
imul
or
mov
scas
shrl
or
push
xorl
push
adc
sub
loope
inc
test
add
ljmp
out
movsb
mov
adcb
in
test
xor
and
loop
xor
xor
pop
lret
shll
decb
popf
std
cmp
cmp
clc
add
push
fisttps
mov
dec
lock
pushf
dec
mov
pusha
sub
test
mov
mov
lds
sbb
outsb
sbb
jecxz,pn
xchg
fs
and
mov
push
pop
xor
pop
scas
sbb
clc
xchg
cmp
fnstsw
dec
add
cmpsb
mov
or
push
add
jecxz
je
fsubs
push
jmp
sbb
pusha
add
rol
push
adc
dec
fdivrl
sub
or
jno
pop
les
pop
inc
rcrb
jg
icebp
ljmp
pop
into
adc
jge
leave
pop
out
sub
push
and
mov
nop
fs
aam
into
and
mov
mov
test
sbb
inc
dec
fxch
jmp
fldt
mov
lcall
push
in
adc
push
pop
lret
or
hlt
mov
mov
cmpsb
les
sbb
mov
std
call
out
lret
mov
into
std
inc
jge
mov
mov
or
stos
and
jge
mov
outsb
out
popa
mov
ret
repnz
fimull
outsb
fisubl
mov
xchg
jecxz
imul
xchg
mov
rorb
loop
adcb
stos
les
push
add
and
test
enter
mov
bound
shl
fdivrl
lods
sub
stc
into
add
sbb
pop
sbb
xor
lds
push
sub
adc
sbb
mov
lahf
shlb
ja
sub
inc
add
fdivrp
xor
loope
mov
in
sub
cmpsb
in
mov
mov
dec
negb
xor
pop
sub
fldt
inc
fistpl
aam
mov
xor
mov
jg
sbb
dec
inc
mov
inc
xor
sub
mov
add
stos
jg
aad
pop
jnp
arpl
cmp
daa
xchg
mov
push
add
cwtl
je
cli
adc
aaa
loope
or
adc
subb
push
ret
xorl
inc
insb
sbb
sti
andb
and
loopne
cmp
mov
ret
dec
shll
push
sub
imul
repnz
inc
repz
out
fwait
popf
or
mov
cmp
and
mov
xchg
lds
inc
shrb
inc
sahf
inc
mov
sbb
in
dec
mov
xchg
fildll
sbb
push
mov
xrelease
mov
fcoms
xor
add
xchg
dec
aas
rolb
lea
pop
jns
imul
cmp
jne
jbe
daa
loopne
sub
jle
sub
xor
jb
and
gs
cmpl
negb
sub
cmp
test
in
js
sub
test
cmp
frstor
sub
pop
mov
mov
jg
mov
data16
mov
rcrb
and
into
lods
clc
adc
cmpsb
push
stc
orb
leave
pop
rol
mov
cmp
sbb
scas
add
mov
stos
mov
scas
shlb
dec
cmc
outsb
push
jle
cwtl
les
inc
mov
ja
repnz
pop
mov
mov
lock
lods
sbb
jno
inc
or
fs
inc
pop
outsl
ja
rolb
pop
cmpsb
xor
mov
rolb
push
cld
mov
push
or
mov
outsl
jns
rcrl
push
enter
out
inc
jne
adc
mov
mov
or
cmc
add
xchg
sub
pusha
je
test
lcall
inc
inc
imul
jns
xor
cmc
and
mov
push
mov
iret
icebp
sbb
lock
xchg
mov
fimull
push
pop
mov
lret
mov
push
test
in
or
pop
call
lret
stc
jg
in
inc
add
lret
setl
fstl
jne
push
xchg
scas
das
sub
leave
sbb
mov
xor
movsl
imul
mov
pop
xchg
in
into
adc
negl
push
stos
inc
pop
mov
jmp
mov
test
out
adc
test
xchg
pop
dec
iret
add
testl
cmp
push
mov
enter
adc
popf
jecxz
jecxz
jp
in
ret
cmovno
xchg
test
out
scas
imul
add
repz
je
aaa
adc
clc
sub
stos
in
lods
dec
in
fs
sub
mov
fmul
add
xor
stos
addr16
or
iret
testb
lret
add
sub
mov
nop
sub
testb
push
lahf
xchg
pop
inc
call
xchg
out
mov
dec
pop
pop
jle
enter
push
push
adc
cmp
ss
imul
sub
mov
mov
mov
outsb
dec
movsl
fsubr
loop
pop
movsb
push
nop
test
mov
xor
mov
stos
pop
ljmp
data16
cli
lret
in
iret
inc
ficoms
xor
sub
mov
xchg
std
xor
push
and
and
les
stc
mov
jg
repnz
or
lock
pop
mov
sbb
dec
fcoms
jo
sbb
mov
lds
fwait
add
and
cmpsl
insb
jecxz
xor
das
sbb
pop
fiaddl
ljmp
xchg
sub
outsl
mov
fbstp
sbb
xlat
repz
xchg
test
xchg
and
fidivs
pop
pop
jbe
xchg
mov
pop
fs
xchg
mov
push
es
stos
jmp
mov
hlt
into
js
shlb
mov
xchg
cmp
sub
sahf
jbe
xor
lods
push
adc
jo
test
jg
xchg
mov
or
xor
push
adc
sahf
xor
fwait
sahf
xor
push
or
jns
sahf
jo
adc
nop
lds
sbb
ret
iret
cmc
cmp
pop
sub
and
adc
lock
sahf
add
jno
dec
cmovb
scas
jb
cmp
fwait
in
ss
test
adc
call
addl
pop
pop
ljmp
lcall
shlb
mov
mov
int3
jno
mov
pusha
out
xorps
push
push
adc
sub
jge
lcall
imul
iret
jl
fs
mov
mov
add
out
adc
push
lods
scas
mov
mov
fisubs
rclb
popf
cmp
popf
adc
jp
adc
stos
ja
inc
xor
push
cltd
push
pop
xor
cmp
test
sbb
ljmp
cmpb
pop
mov
lcall
cmpsb
sub
fadd
daa
inc
push
pop
flds
lret
adc
jae
push
add
fisttps
pusha
xor
or
xor
faddl
int
lret
or
stc
jge
xor
in
dec
testl
stc
mov
addb
sbb
mov
jp
and
nop
cmpsl
jns
xrelease
push
fdivrs
ljmp
fcomp
and
xor
or
js
cmp
in
and
cmpsl
je
popa
out
stos
imul
in
push
insb
cltd
mov
inc
je
addr16
aad
lahf
gs
mov
je
iret
cmc
inc
xlat
mov
addb
add
cld
mov
das
call
daa
out
rcrl
iret
push
gs
mov
movl
dec
xchg
cmp
daa
adc
popf
xorl
clc
add
stc
mov
mov
daa
cltd
add
push
outsb
pop
jl
adc
mov
mov
inc
hlt
scas
cli
dec
lods
cmpsb
fidivrs
pop
pop
mov
add
add
xor
pop
jle
fiaddl
or
repz
cmp
xchg
xchg
js
mov
mov
das
lods
aad
adc
xor
xor
loope
pop
fistpll
clc
inc
fidivrs
scas
mov
mov
cmpsb
jg
or
imul
cs
dec
pop
scas
loop
xchg
mov
push
xchg
test
call
clc
arpl
ret
stos
pop
mov
dec
jle
in
xchg
and
xor
xorl
or
js
adcb
aam
les
aaa
fbld
rorl
or
movsl
jp
shlb
iret
fcomi
and
pop
sub
fbld
js
dec
mov
repnz
js
xchg
xor
cmpl
lock
out
jns
pop
imul
ficoml
aas
ret
push
sub
and
sti
jp
mov
cmpsl
jne
orb
clc
fldt
out
mov
rorl
mov
jns
xchg
xor
jg
add
rclb
jmp
pop
pushfw
std
push
mov
xor
mov
cmp
cmp
cmpsb
inc
adc
push
rcl
adc
adc
mov
in
fs
flds
push
dec
lret
mov
mov
jmp
mov
or
loope
dec
jno
cmc
enter
pushf
addr16
adc
andb
mov
in
push
add
and
icebp
inc
popa
movsl
in
in
and
inc
sbb
cltd
mov
and
sbb
push
or
fcoml
nop
pop
pop
mov
mov
push
and
add
add
mov
dec
inc
xor
pop
adc
shll
aam
pop
pop
addr16
and
pushf
push
dec
lret
mov
mov
in
add
in
adc
lods
addl
sub
insb
or
repz
je
mov
sbb
sub
or
mov
xchg
int
mov
push
int
mov
push
jg
cmp
fnsave
int
xchg
mov
xchg
sub
push
outsl
movsb
mov
push
test
iret
and
and
mov
sahf
in
dec
pop
repz
sbb
std
pop
cld
add
repnz
adc
sub
lea
lock
lods
mov
or
adc
enter
addr16
jg
push
lret
sbb
pop
ljmp
xor
ljmp
adc
add
clc
test
dec
inc
inc
dec
pop
jo
fs
sbb
mov
xor
into
push
aas
push
mov
push
mov
insb
jge
cmpsb
adc
ja
jno
push
mov
cmpsb
push
mov
daa
pushf
nop
cltd
hlt
mov
pop
sti
mov
and
mov
dec
test
sbb
or
fld
icebp
sbb
xchg
mov
pop
mov
xchg
and
mov
fwait
repnz
mov
mov
in
and
push
add
xor
fldl
and
test
jbe
mov
push
je
or
lock
call
pop
or
fwait
pusha
std
addw
inc
pop
stos
push
loop
repz
xchg
imul
dec
adc
sub
or
nop
cltd
in
jns
mov
shll
dec
testl
jo
jg
and
rcrb
lock
dec
cmc
frstor
jbe
fstps
adc
insb
jecxz
mov
mov
mov
cmpsb
xor
daa
push
stos
cmp
cmpsb
jmp
xor
lret
es
lret
jg
inc
dec
add
into
lea
add
pop
or
or
lock
jb
pop
outsl
push
pop
cmp
dec
or
xchg
das
ja
shlb
gs
outsb
and
lock
sbb
dec
imul
cmpsl
or
inc
sbb
cli
xor
pop
cmpsb
adc
jp
nop
int3
cmp
or
xchg
hlt
push
jmp
outsb
jge
lods
and
xchg
adc
add
mov
mov
das
sbb
add
imul
add
pop
icebp
mov
ficoml
push
add
sub
loop
xor
call
repz
clc
pop
lock
lea
cmp
mov
xor
mov
inc
cmp
xor
aad
mov
add
mov
inc
xor
cwtl
or
lcall
add
mov
and
mov
subl
leave
pop
adc
repz
and
xchg
outsb
push
aas
xor
cmp
imul
ds
adc
push
fmull
push
icebp
dec
mov
out
pop
subl
mov
test
xor
mov
mov
pop
addb
push
fsts
pop
pop
and
mov
lods
je
sub
push
fwait
pop
fcompl
lock
icebp
jecxz
popa
or
out
in
fcmove
insl
fildl
mov
scas
dec
adc
cltd
mov
int
sbb
aad
lea
insl
roll
jns
xor
inc
add
xchg
enter
or
ljmp
mov
rcrb
mov
js
inc
ja
mov
roll
out
or
fisttpl
add
into
daa
sub
inc
xchg
cld
inc
lcall
push
mov
test
neg
jge
sub
addb
xchg
orl
push
ss
testb
movsl
out
pop
loopne
in
in
dec
pop
adc
inc
inc
dec
out
mov
xchg
inc
in
inc
mov
cmpb
mov
mov
lahf
inc
dec
cld
xchg
inc
clc
pop
xor
lret
push
test
cmpsb
xor
sbb
mov
adc
jae
lock
lcall
daa
fstpl
push
inc
inc
pusha
enter
or
push
mov
and
cmp
jp
pop
mov
fwait
sarb
repnz
xchg
pop
in
push
push
xchg
sub
cmp
loopne
xchg
pop
jecxz
mov
pusha
jle
mov
add
aam
popf
sahf
loope
push
pop
sub
ds
and
mov
pop
movsl
jb
lcall
gs
cmp
imul
arpl
and
ja
aad
dec
leave
sub
add
jae
call
ds
cwtl
mov
push
lock
sub
js
fisubrs
and
pushf
clc
adc
xor
stc
test
insb
lcall
cmp
loop
xor
cmp
inc
out
insb
or
shll
jbe
outsl
inc
sub
call
mov
add
xchg
push
mov
push
loop
jg
xchg
js
idiv
orb
in
pop
and
adc
roll
insl
test
jle
xorb
cltd
sbb
pop
ss
int
push
push
stos
jnp
sbb
imul
shlb
mov
dec
enter
mov
push
xor
mov
dec
cmp
aad
mov
xor
rcrl
jmp
xor
lcall
lods
adc
mov
loopne
xor
inc
dec
cmp
inc
shld
xor
ljmp
inc
and
xchg
push
mov
jb
fidivl
or
pop
push
xor
in
rclb
sub
test
in
adc
scas
push
xor
xlat
jmp
and
or
adc
mov
or
idivb
push
mov
mov
shll
outsl
push
andb
mov
popf
fcoms
test
pop
loop
dec
sbb
lock
push
mov
sub
xor
andl
mov
mov
imull
or
lea
inc
jle
insl
enter
add
enter
jbe
xchg
xchg
push
and
sti
mov
loop
loope
mov
lcall
xor
mov
and
sub
in
xchg
popf
lcall
mov
jp
fdivrl
dec
and
xlat
popf
or
daa
inc
and
jns
xchg
mov
cmpsl
sbbl
inc
jg
dec
mov
lock
jne
jmp
jno
lock
decb
imul
mov
test
negb
mov
xor
mov
jnp
int
or
mov
cld
add
mov
sbb
push
cltd
ljmp
lret
enter
jo
std
lods
adc
adc
test
stc
push
repnz
cltd
xchg
mov
and
cmpsl
outsl
arpl
pop
xchg
mov
sub
sbb
add
xchg
adc
js
insb
add
cmc
ret
mov
rclb
imul
xor
popa
cltd
mov
xchg
in
cli
inc
pop
mov
mov
in
or
push
jns
xchg
popa
aaa
mov
arpl
or
xchg
fs
cwtl
ror
xor
rcr
hlt
es
adc
adc
popf
add
add
sti
mov
push
add
mov
pop
sub
test
test
sbb
in
mov
hlt
xor
push
jmp
mov
pushf
mov
inc
into
repz
inc
pop
or
scas
cmp
call
mov
cmp
cs
imull
inc
xchg
jmp
lea
fldt
dec
xor
jbe
xor
iret
add
xor
outsl
ljmp
sbb
testb
mov
pop
jb
stos
lds
loopne
dec
mov
leave
pop
xchg
jb
test
addr16
push
jmp
push
pop
movsl
jae
aas
jns
data16
pop
push
add
pop
lahf
jg
mov
sti
dec
xor
das
scas
dec
leave
sub
mov
stc
fisubs
inc
push
push
aas
shl
ss
stos
hlt
mov
cld
xchg
xchg
jno
jmp
arpl
mov
pop
popf
jns
imul
xlat
movb
add
or
lds
cmpsb
push
and
mov
mov
cmpsb
roll
lock
out
adc
xorl
pop
mov
ror
rclb
lds
add
dec
sbb
fldenv
mov
push
pusha
test
add
add
imul
push
lods
movsb
pop
and
or
lods
add
leave
mov
mov
adc
movsb
pop
sub
aaa
cs
jne
or
push
add
sub
das
pop
addr16
stos
jmp
in
cmp
test
shl
cwtl
sub
out
pop
xor
aad
enter
daa
xchg
xlat
dec
outsl
cltd
fdiv
xor
adc
cmp
ret
push
mov
lret
cmpsl
sub
scas
jl
adc
and
adc
movsb
sbb
sti
mov
jb
mov
sub
cli
xlat
mov
and
xchg
adc
mov
jns
xchg
xchg
repz
in
inc
pop
inc
arpl
call
mov
jecxz
cltd
jno
sbb
mov
test
mov
or
xchg
push
dec
mov
and
pop
daa
mov
jae
lret
fisttpl
or
sub
inc
clc
les
xchg
jae
mov
aam
pusha
sub
arpl
xorl
aas
jmp
leave
pushf
sub
js
inc
fcoml
aas
mov
inc
push
lcall
dec
scas
push
fnstenv
testl
or
daa
clc
loopne
fwait
in
mov
pop
in
xchg
push
sar
rcrl
aad
inc
jle
fisubs
adc
js
mov
nop
cmp
enter
loopne
dec
sbb
xchg
push
fcmovnbe
fld1
dec
pusha
and
sub
out
test
push
ss
shll
mov
das
sub
aas
mov
jecxz
xchg
aaa
pushl
push
loope
clc
and
jge
sti
sub
repz
int3
stos
xchg
mov
adc
mov
into
adc
xchg
xchg
or
xor
ds
dec
cmp
dec
mov
cmp
fs
lahf
imul
fists
shrb
mov
add
adcb
xchg
jbe
hlt
sbb
stos
xor
loopne
int
add
and
mov
test
popf
adc
cmp
lret
popa
mov
mov
push
mulb
popf
push
cmp
lret
test
add
out
mov
fstpt
ljmp
js
cwtl
dec
cmpsb
leave
lret
jp
out
xor
fsubr
cmp
push
mov
std
in
pushl
jge
shll
mov
in
sbb
fs
sbb
adc
icebp
mov
push
cli
jne
jge
add
ficoml
loope
pop
push
push
jns
sbb
ss
pop
jb
sbb
sbb
mov
mov
fmuls
insb
cmp
addb
stos
adc
jns
out
out
xor
jp
ficomps
clc
aas
imul
xchg
arpl
xchg
cmp
gs
in
lds
mov
adcl
push
adc
std
andb
jb
sub
test
lcall
nop
mov
pop
adc
stc
shl
dec
dec
in
fdivs
icebp
or
add
js
dec
loopne
mov
je
movsb
add
sbb
mov
xchg
mov
daa
cwtl
and
inc
xor
mov
pop
addr16
scas
lods
enter
sbb
mov
dec
out
repnz
into
pop
int3
pop
loopne
sub
jo
cmp
iret
and
xchg
es
leave
push
lret
dec
loope
jne
frstor
xor
xor
lods
repnz
scas
adc
cs
xchg
mov
add
ss
andl
jne
mov
fmull
sbb
adc
or
inc
jmp
jno
pop
pop
fisubrs
add
and
decb
push
popf
mov
xchg
xor
adc
imul
mov
xor
push
mov
xor
inc
ja
and
iret
cmp
xor
leave
insl
notb
adc
cmp
pushf
nop
mov
jb
lret
add
sub
loope
lea
and
xorb
jmp
and
xchg
push
mov
rorb
in
mov
outsb
add
out
fisttpl
and
mov
xor
je
mov
daa
push
dec
jae
lock
xor
ret
aad
hlt
das
into
in
aaa
fildll
push
xchg
xlat
aaa
ret
jmp
mov
shrl
xchg
cmpsb
xor
daa
lock
hlt
rcll
and
cmp
pop
lret
cmp
imul
dec
jg
dec
lods
jp
cwtl
push
and
fstl
in
fisubrl
clc
test
mov
ret
mov
sarl
sub
popa
pop
mov
add
sbb
mov
sub
arpl
stos
sbb
jbe
inc
cld
push
loop
add
repnz
das
xor
mov
mov
dec
test
lock
ds
pop
ljmp
pop
dec
mov
aaa
idiv
movsb
xchg
cwtl
cmpsl
movl
pop
dec
push
aam
rorl
pop
push
push
popw
in
sub
nop
jg
ret
cli
inc
mov
call
lea
movsb
in
insl
cmpsl
fldl
movsl
leave
jno
dec
or
xlat
dec
ds
inc
cmpsl
cld
or
sub
idivb
jae
dec
jge
sbb
jmp
sti
cmc
aaa
popa
int3
mov
sub
push
xor
arpl
daa
ljmp
or
mov
inc
inc
outsb
fldcw
xchg
jb
xor
lock
leave
sbb
fxch
and
jnp
sub
in
xchg
xor
fwait
xchg
icebp
xor
mov
repnz
mov
adc
mov
xor
ja
cmpsl
jp
adc
jge
data16
sbbb
dec
scas
sub
jb
inc
imul
inc
sub
fstpt
in
mov
mov
mov
mov
mov
mov
shlb
mov
xchg
xchg
mov
std
mov
mov
inc
or
sbb
mov
call
pop
imul
add
ficompl
sarl
xor
mov
push
outsl
cmp
fwait
lret
pop
xchg
test
ds
xchg
pop
rcrb
fwait
outsb
cmp
lret
or
pushf
lods
adc
sti
sub
outsb
add
shlb
fwait
adc
fcmovbe
in
lock
add
mov
or
push
sbb
lock
pop
xchg
mov
push
push
dec
mov
ja
ja
les
xor
das
stos
leave
push
les
rol
mov
pusha
lds
pop
push
lods
push
subb
and
cmc
call
out
jmp
clc
and
pop
push
cmc
jb
inc
enter
jo
lods
pop
int3
add
add
mov
mov
jbe
adc
mov
jmp
je
sbb
mov
cmp
rcrl
push
fwait
mov
daa
sbb
adc
sub
and
int3
sub
jge
pop
sub
hlt
lret
pop
sbb
and
jnp
decl
xor
cmp
inc
dec
pop
inc
jo
inc
imul
shrl
add
push
xchg
addr16
pop
js
ljmp
mov
pop
push
popf
shll
push
jg
fdivl
clc
js
inc
fmull
rorl
pop
mov
inc
push
test
adc
cltd
or
pop
sub
loopne
lahf
push
mov
outsb
push
loope
fildl
mov
sbb
fldt
jecxz
mov
pop
cs
dec
sarl
pop
aaa
outsb
movups
mov
lcall
movsb
fdivrs
or
repz
cli
stos
movsl
out
cmp
pop
ret
fdivs
or
aaa
mov
mov
push
mov
mov
jbe
adc
xor
mov
aam
mov
std
pop
in
int
ror
pop
inc
xchg
push
test
adc
cs
jae
adc
lahf
jg
into
daa
inc
dec
sbb
xchg
sbb
rcl
xchg
shlb
push
nop
stos
sar
dec
sbb
adc
dec
cwtl
push
push
dec
outsb
or
inc
mov
and
cmp
cmc
jg
rorb
jne
adc
lcall
pop
mov
mov
sahf
aam
fwait
test
jno
mov
mov
xchg
or
insb
cmp
mov
pushf
faddp
cmp
daa
mov
testb
dec
fs
fldlg2
mov
mov
in
mov
imul
fidivrs
nop
ficomps
lahf
incb
cmp
pop
insb
inc
or
inc
cmp
les
ret
sbb
cmp
mov
push
dec
xchg
call
jb
lods
push
dec
cmp
sbb
mov
ret
push
inc
mov
push
push
es
mov
inc
lods
mov
lret
sbb
into
and
sahf
test
sub
lret
sbb
push
cmp
push
es
clc
sbb
add
sbb
inc
or
jne
in
in
scas
sbb
push
xor
adc
cmp
mov
fwait
adc
xchg
xchg
inc
imul
sti
fs
and
mov
cmp
fimuls
fisubs
cmp
imul
nop
xor
and
fninit
jmp
out
dec
mov
jecxz
inc
cmp
jno
fwait
lcall
mov
gs
cmp
ret
mov
inc
cmpb
xchg
test
adc
iret
sti
xor
les
and
and
test
and
outsl
sub
jle
dec
xchg
mov
cli
std
push
outsb
aas
fisubs
xchg
xchg
pushf
adc
fwait
xorl
mov
inc
mov
icebp
or
add
mov
imul
add
cmp
xchg
adc
outsb
call
mov
aas
add
jmp
inc
cmp
mov
stc
sub
mov
lods
push
pop
jno
out
ret
xchg
push
shrb
and
adc
xchg
or
pop
mov
push
dec
xor
push
inc
jns
dec
cmpsb
and
jb
ss
pop
mov
fs
xchg
daa
dec
lcall
sub
rolb
xchg
add
cmp
pushl
sub
dec
or
mov
xor
das
sbb
push
sbb
jbe
jmp
into
cmp
mov
sbb
xchg
mov
mov
arpl
pop
xchg
mov
imul
xor
shrb
push
adcl
sbb
mov
mov
mov
inc
mov
mov
or
in
dec
sub
mov
daa
cmp
outsl
jno
sub
push
test
test
push
mov
inc
lock
loopne
jg
mov
push
cmp
mov
mov
push
jb
jle
cmpsb
mov
push
jns
lahf
adc
sub
loop
sub
fsub
shlb
sub
cmovnp
sub
add
add
sbbb
cmp
xchg
fdivs
fidivs
sahf
mov
subb
gs
inc
or
es
in
call
jae
arpl
bound
add
das
jle
es
aam
dec
mov
out
and
or
adc
ss
and
fwait
shl
push
push
pop
jo
sbb
stos
jecxz
fs
sub
inc
addb
std
xor
cmpsl
sub
clc
pop
ljmp
and
stos
mov
mov
shl
sub
dec
or
push
mov
movsl
fwait
xor
daa
push
mov
adc
fcomi
xor
das
test
pop
mov
lahf
fldenv
roll
and
mov
push
mov
mov
cmpsb
fistpl
fdivl
dec
stc
ljmp
add
push
and
mov
or
out
insl
or
dec
mov
pop
xor
sti
add
dec
mov
aaa
xchg
jecxz
dec
movsl
jle
pop
add
jbe
bound
dec
pop
iret
jg
push
push
xchg
rorl
mov
insl
xchg
or
mov
scas
jge
pop
or
inc
xorb
filds
xchg
cmp
aaa
loop
xchg
mov
xor
mov
push
adc
jo
pushf
out
pop
jge
mov
fdivs
mov
push
dec
hlt
sub
mov
int
cld
ds
pop
pop
pop
sbb
or
stos
aas
ror
inc
sarb
sbb
dec
gs
dec
push
sbb
cmp
xchg
lcall
mov
scas
sub
xchg
jg
jnp
dec
nop
aas
adc
push
xor
test
push
sbb
ret
mov
popa
popf
mov
adc
push
add
xchg
and
int
sbb
jmp
hlt
out
aas
jg
pop
pop
repz
jl
imul
div
movl
mulb
push
push
push
or
xchg
cmp
pop
cmp
lret
scas
shlb
jmp
jp
or
mov
jg
xchg
lret
or
xor
dec
xor
pop
aas
sbb
fs
sbb
ja
jbe
pop
dec
push
adc
mov
cltd
imul
mov
ss
leave
xor
cltd
in
rol
ret
adc
adc
ja
imul
jle
sub
xchg
movlps
clc
mov
test
jl
jns
pop
sbb
outsb
das
push
add
icebp
dec
adc
push
jle
mov
loope
roll
xchg
mov
push
dec
mov
pop
out
dec
pop
xor
jne
jns
pusha
sub
inc
or
pop
cmp
push
imul
out
inc
call
jae
push
mov
mov
aad
int
mov
stos
in
cmc
and
mov
push
in
jnp
repz
inc
sti
ret
pop
test
iret
bound
pop
shl
push
jl
dec
les
jno
jns
test
test
into
xor
lret
jecxz
mov
scas
jg
stos
cwtl
mov
dec
cmpsb
arpl
gs
bound
stos
xorb
stos
pop
fwait
dec
pop
xorb
jne
jmp
pop
js
xchg
jecxz
xchg
mov
shl
jmp
gs
pop
sbb
push
push
movsl
das
loope
cmpb
call
pop
call
push
daa
sarl
push
decl
div
test
push
inc
inc
sbb
pop
xchg
fstpt
jnp
push
jno
das
dec
lret
rcr
adc
dec
out
cld
mov
orl
scas
mov
movb
rol
insb
pop
cmpsl
pop
shr
or
filds
inc
pop
outsb
out
imul
mov
push
push
clc
arpl
inc
adcl
push
jecxz
cmp
je
jb
repz
xchg
sub
sub
push
repz
shlb
pop
mov
jbe
pop
adc
add
ljmp
add
jo
and
jg
xor
lea
mov
lea
repnz
mov
das
lret
sub
fldt
xchg
mov
pop
mov
jo
das
mov
xor
pop
cmp
xchg
ret
push
clc
pusha
xchg
push
imul
nop
jbe
nop
xchg
pushf
js
xchg
rcll
stc
insb
xor
push
fsubs
or
movsl
rorl
and
lret
sub
aad
ds
cmpsb
push
lahf
cmp
sbb
pop
test
dec
pop
imul
aas
jno
pop
xchg
dec
into
int
or
scas
je
sar
push
xchg
outsl
dec
sub
fwait
mov
jnp
fidivs
cmpsb
inc
mov
test
jmp
xchg
fcompl
lods
mov
cmpsl
pop
jg
or
sub
pop
pop
or
sbb
das
addr16
orb
fs
dec
xchg
aas
jmp
test
cli
mov
rcll
xchg
shll
cmp
ljmp
or
test
je
push
pop
xor
sbb
xlat
mov
cwtl
mov
jno
xor
inc
sub
push
cli
aam
or
loope
dec
in
ret
push
in
mov
cmp
mov
add
inc
int
ljmp
mov
sbb
mov
fistl
ja
gs
lret
cltd
jp
lahf
mov
fisubrs
cmp
mov
push
cwtl
xchg
adc
mov
nop
rorb
cmp
iret
push
mov
inc
jmp
jbe
xchg
ja
rolb
nop
and
adc
shlb
lcall
mov
jp
mov
and
jo
mov
lret
fdivs
fnsave
pushf
mov
scas
push
out
sbb
xchg
cld
and
mov
jecxz
mov
data16
jl
inc
push
mov
cmpsl
popf
pop
in
rcr
rcrl
ljmp
bound
repz
mov
pop
aas
and
xchg
mov
cmp
mov
stos
xchg
ffreep
or
dec
xchg
das
and
js
imul
xlat
pop
jmp
mov
aas
cmp
or
cmp
movsb
cli
adc
pop
pop
adc
jb
sub
dec
mov
call
add
mov
popf
sbb
and
popa
xchg
xchg
inc
adc
rcrb
mov
xchg
dec
xchg
loop
inc
movsb
notb
mov
into
jmp
jp
pop
int3
icebp
lods
cmpsb
arpl
loope
xor
mov
les
and
push
and
dec
mov
fdivrs
inc
adc
cmp
lock
or
push
aas
mov
loope
pusha
or
xchg
in
inc
divb
jge
and
jo
dec
inc
xlat
ret
dec
aam
call
add
mov
mov
ss
push
sbb
mov
pop
dec
pop
add
imul
mov
jle
loopne
push
fs
loop
add
push
sub
int
nop
xor
xchg
pop
out
add
punpckhwd
clc
jmp
add
push
sarb
rolb
repnz
adc
ljmp
insl
bound
mov
dec
cmp
mov
or
js
stos
push
hlt
sbb
outsl
mov
fmuls
xor
pop
jne
push
call
lcall
push
out
stos
dec
std
inc
mov
inc
push
shrl
inc
hlt
adc
out
loopne
int3
cmpsl
cltd
lcall
lea
pop
mov
jg
inc
in
xchg
sub
gs
lock
insl
je
add
fucomip
insl
xor
mov
xlat
dec
mov
lret
punpcklwd
test
mov
test
jns
imul
insb
and
sub
lahf
mov
clc
les
fs
fxch
mov
movsb
pop
or
dec
inc
jp
clc
insl
or
adc
pop
call
jl
mov
adc
test
push
jmp
cmp
mov
jge
xor
or
aad
insb
sbb
xor
sub
cs
pop
xor
adc
loopne
jns
pop
inc
jecxz
mov
push
aam
mov
outsl
adc
iret
popf
cmp
int3
lds
or
lret
sbb
pushf
movsb
into
iret
out
mov
adc
adc
ret
jg
mov
push
and
dec
mov
roll
mov
cmp
jg
jmp
fst
sbb
mov
or
sarl
mov
dec
lcall
lock
cltd
sub
rorb
stc
mov
sbb
adc
cmpsl
repz
scas
push
dec
jae
xchg
sti
xor
repz
mov
mov
pushf
mov
pop
in
push
cltd
clc
xchg
and
cmp
negl
lahf
fcoms
loopne
add
xchg
pop
lahf
jg
mov
push
adc
rol
jae
jle
adc
xchg
adc
push
fisubs
insb
jle
rorb
inc
shl
add
popf
orb
mov
or
scas
mov
cld
cmpsl
or
inc
mov
and
loopne
xor
gs
ret
mov
jo
rclb
cli
xchg
shll
popa
mov
push
fcmovnbe
dec
test
loope
aam
push
dec
out
out
pop
push
or
jno
out
ret
pop
repnz
sbb
stc
lock
lret
aad
lods
add
dec
imul
cs
rorl
test
add
sub
xor
xor
lods
adc
daa
xor
in
mov
ret
xchg
fs
cli
in
std
in
cs
mov
pushf
xchg
push
stos
std
xchg
pop
aam
jno
ja
push
sbb
xchg
out
xor
push
xchg
dec
mov
add
fadd
sbb
out
mov
cmp
xor
insl
shl
sbb
mov
xor
stos
std
dec
std
popf
push
rclw
lock
inc
push
bswap
adc
pop
mov
mov
push
dec
scas
into
xchg
add
cmc
repz
testb
and
push
out
aam
addl
push
cmp
movd
sbb
nop
xchg
scas
pop
outsb
mov
adc
push
xor
push
outsb
enter
mov
and
cmpl
mov
movsl
cmp
or
rcll
imul
pop
add
pop
push
mov
scas
aad
arpl
arpl
lock
cmpsl
ficoms
stc
outsl
push
scas
dec
insl
pop
xor
mov
jnp
cwtl
aas
dec
aam
and
dec
sti
jnp
repz
out
push
int3
loopne
jmp
addr16
mov
cmpsl
xchg
adc
pop
addr16
frstor
sub
ret
inc
mov
incb
jg
ds
iret
push
fisttps
inc
test
or
outsb
push
cmp
jmp
out
mov
jnp
cmovs
test
je
test
inc
rcll
lcall
cmc
into
mov
clc
inc
movsb
hlt
push
pop
sbb
cli
jno
jl
out
enter
inc
outsl
push
xchg
xor
in
sbb
lock
inc
popa
push
sub
xor
cmp
cmp
or
xchg
or
loop
insb
fwait
xchg
loope
adc
xchg
movsl
xor
into
testb
mov
jb
addb
in
cmp
sbb
or
fmuls
add
negl
xor
test
popf
add
movsl
xchg
clc
les
cmp
mov
inc
ret
test
into
pop
in
aad
add
dec
mov
sbb
gs
xlat
mov
je
or
mov
imulb
out
and
aaa
or
nop
lret
addb
ror
xor
pop
mov
mov
add
jo
mov
in
hlt
cs
loope
jne
idivl
push
fstpt
add
ret
int3
add
jo
jecxz
lods
inc
lret
push
mov
out
mov
push
mov
div
jns
cmp
sub
cmp
inc
div
lods
or
icebp
pop
lcall
mov
sbb
sbb
notl
cwtl
jo
out
jae
outsl
inc
mov
dec
push
inc
jo
test
gs
pushf
sbb
lods
lret
inc
sti
jno
pop
test
aam
inc
and
aam
sub
inc
and
lea
jge
add
pop
mov
push
scas
dec
add
cmp
fstps
ficomps
xor
mov
inc
dec
push
aaa
divb
cld
std
lock
push
lcall
pop
cs
cli
aam
inc
mov
sub
test
mov
outsb
in
jo
pop
and
fs
cmc
add
cmpsb
daa
add
aaa
xor
out
lds
rorl
movsl
add
jns
jge
jae
ss
mov
sbb
fs
imul
jnp
mov
leave
add
rol
decb
aam
mov
inc
mov
scas
data16
fs
sbb
xchg
xchg
pop
das
add
rep
jnp
push
fists
sbb
cmp
mov
jo
xor
and
sub
mov
mov
adc
inc
daa
and
cmpsl
data16
jbe
cmc
scas
movsl
stos
and
jmp
outsl
adc
jo
pop
xchg
jb
dec
sti
icebp
mov
push
and
sbb
pusha
and
repz
inc
or
cmp
adc
and
insb
sbb
mov
orb
fmuls
push
adc
std
add
sahf
add
or
mov
lret
in
mov
mov
pop
pop
test
int
push
fsubp
movsb
mov
cmp
mov
lods
sbb
pusha
mov
int
push
mov
sbb
pop
int
test
mov
sbb
jle
outsl
addr16
xlat
push
das
cmp
mov
inc
add
lods
push
std
sub
sbb
adc
cmpsl
bound
mov
ficoms
clc
adc
mov
lods
add
mov
leave
lahf
fwait
mov
insb
push
jb
sbb
mov
push
jbe
ss
fwait
pop
ss
sahf
mov
or
pushf
mov
mov
fimull
clc
mov
fstl
jmp
clc
jnp
push
mov
pop
and
jmp
xchg
xchg
push
add
fbstp
pop
adc
jae
ss
popf
jo
or
adc
pop
enter
rorb
notb
gs
sub
es
jnp
das
hlt
fwait
inc
adc
mov
pop
mov
in
stos
mov
push
dec
jecxz
jmp
inc
xor
in
xor
add
adcb
bound
cltd
fs
test
aaa
adc
ss
cmp
dec
es
pusha
scas
dec
xchg
rclb
sub
add
mov
jle
rolb
xor
cmpsb
cwtl
sub
pop
lcall
adc
jmp
mov
mov
inc
xchg
xor
dec
je
push
dec
out
xor
arpl
nop
add
insb
sub
xchg
pop
cmp
fsubrs
outsb
add
sti
xor
push
jb
mov
xchg
ret
mov
shrl
arpl
nop
imul
test
mov
dec
dec
sbbb
shl
cmp
lahf
sbbb
es
mov
das
daa
adc
loop
xlat
mov
imul
dec
popl
sub
pop
shlb
lds
mov
orb
fcmovu
in
inc
lock
pop
fdivr
enter
dec
stos
jns
jbe
into
cmp
sahf
fsub
push
pop
aam
scas
jns
fmul
xchg
cltd
xchg
fwait
adc
rolb
imulb
movsl
xor
icebp
sti
icebp
xchg
sbb
popf
aaa
cmpsb
xchg
enter
mov
xchg
pop
rcrb
pop
nop
sub
adc
test
xchg
ss
xchg
mov
add
ret
push
inc
mov
or
xor
cmp
mov
loope
fstl
bound
lods
mulb
jae
mov
fsubrp
sub
sti
jg
bound
mov
shrl
ds
sub
pusha
mov
and
xchg
mov
mov
push
lea
sahf
les
pop
push
lret
cmpsl
stos
mov
outsb
push
mov
push
jb
mov
push
mov
xchg
mov
das
add
and
test
push
sub
ds
sbb
jne
adc
or
mul
xlat
dec
xchg
lea
nop
inc
add
jns
in
mull
and
mov
movsb
popf
jg
pop
xchg
xchg
mov
jbe
sbb
cmp
leave
mov
ds
bound
mov
sbb
stc
lret
mov
std
lds
push
ror
pop
inc
mov
jl
add
mov
xor
shlb
adc
out
outsl
shll
xlat
jno
scas
cmp
rol
mov
out
repnz
add
mov
jecxz
jle
inc
divl
or
fstpl
pop
fimull
xor
xor
enter
stos
pusha
mov
mov
call
sbbb
jns
and
movsl
pop
sahf
data16
insl
sbb
inc
dec
daa
sbb
xor
push
cmp
fcomps
loopne
stos
adc
sub
pop
jb
lret
and
jg
jne
mov
lcall
add
mov
sbb
fnstsw
mov
push
inc
lcall
mov
jmp
ss
mov
inc
dec
or
dec
pop
or
cmpsl
in
scas
pusha
mov
pop
adc
les
lods
cld
cli
xor
xchg
and
cmp
divb
cmp
pop
inc
aas
paddq
cld
sbb
push
mov
subl
sbb
pop
adc
mov
xchg
inc
ss
jmp
xchg
pop
or
imul
lea
inc
dec
mov
push
push
cwtl
dec
push
cmpsb
adc
cmpsb
jb
push
sub
bound
les
insl
shll
xor
mov
andl
repz
scas
mov
test
or
push
loope
mov
mov
shrl
fs
movsb
call
xchg
or
adc
mov
in
pop
imul
hlt
test
cs
mov
push
jno
mov
jle
mov
shll
sub
decb
gs
sbbb
and
cmp
scas
inc
es
jne
lock
lret
jmp
movsb
xchg
ficoms
sub
cmp
stc
das
dec
pop
push
jns
jne
sbb
inc
ret
andl
jl
lods
stc
mov
insb
xchg
dec
movsl
adc
sub
ds
lock
cli
sahf
imul
cs
add
xchg
int3
dec
ja
pop
hlt
int3
test
sbb
idivb
add
mov
jno
aam
push
sahf
push
movsb
std
aad
call
imul
loopne
xor
xor
mov
jg
gs
sub
jl
add
and
shl
repnz
cs
stos
in
les
addb
sbb
lock
inc
add
jb
inc
lret
sbb
add
or
stc
sbb
mov
outsl
call
add
lret
ds
push
sbb
and
movsb
add
rol
dec
rcrl
lret
pop
inc
sbb
fwait
push
inc
pop
dec
or
mov
pop
pushf
and
scas
pop
pop
fists
dec
xor
dec
adc
pop
decl
dec
push
push
push
mov
mov
loop
scas
or
xor
les
rdpmc
ret
cmp
out
jo
shrb
outsl
mov
mov
sti
jb
mov
xchg
add
pusha
repz
iret
sub
mov
adc
loope
and
mov
xor
ret
sub
dec
mov
sbb
sbb
jecxz
xchg
xor
push
aam
jmp
sbbb
sub
xchg
mov
cmp
jecxz
outsl
in
mov
pusha
inc
jg
daa
xchg
xchg
sbb
shll
leave
and
xchg
cmpsb
ret
lcall
dec
loop
pop
nop
mov
add
sysexit
xchg
lahf
inc
pop
dec
and
jnp
pushf
in
sbb
push
mov
imull
inc
loope
mov
pop
das
iret
jne
ljmp
mov
sbbl
fsts
add
mov
cmp
jge
pop
sbb
fiadds
push
inc
or
and
flds
popf
jae
pop
filds
in
mov
mov
mov
push
dec
scas
mov
jo
add
ret
aaa
insl
lcall
icebp
insb
insb
push
push
in
inc
jp
pop
xor
inc
lock
mov
loope
add
or
test
lcall
inc
sbb
pop
int
in
cmc
mov
push
pop
icebp
mov
mov
mov
pop
xchg
fcomps
mov
mov
rclb
test
jl
mov
cld
lret
loopne
inc
sub
and
jns
sti
push
cmp
lret
hlt
mov
inc
push
xchg
test
fisttpll
push
inc
mov
call
fchs
outsb
inc
adc
cmpb
xchg
rcrb
push
int3
inc
lahf
popa
es
aam
pop
sbb
mov
pushf
push
sti
cli
push
repnz
push
arpl
std
clc
ror
inc
lret
push
mov
aam
pop
fs
scas
pop
cmpsb
inc
aad
push
sarl
cltd
xchg
sub
sub
std
adc
cmc
mov
push
lea
fisttpll
repz
adc
adc
mov
into
adc
pop
test
pushf
inc
std
mov
aad
mov
adc
ja
xor
pop
xchg
gs
lea
xchg
out
or
xchg
insb
xor
int
and
push
aam
jne
pusha
dec
add
sbb
jle
lea
dec
mov
xchg
arpl
mov
dec
stos
sub
push
sahf
push
pop
add
mov
clc
push
dec
sahf
loope
sub
ds
pop
ss
jbe
push
or
aam
push
jg
inc
dec
adc
es
push
dec
ljmp
xchg
add
pop
adc
mov
mov
cs
enter
jnp
sbb
xchg
inc
pop
dec
out
xor
imul
andl
push
mov
jmp
decl
fdiv
repnz
jnp
jbe
add
push
push
mov
flds
or
xchg
mov
mov
pop
and
addr16
lods
mov
cmc
mov
test
or
pop
arpl
pop
fcoms
jmp
push
gs
movsb
xchg
out
inc
mov
xchg
pop
xchg
in
dec
ficoms
add
mov
xor
adc
sbb
das
repnz
mov
fwait
shrb
pop
jp
jg
pop
mov
push
pop
add
dec
into
shlb
xlat
lret
imull
sub
div
je
sbb
loope
or
lods
stos
pop
adc
and
sub
lret
push
in
sub
hlt
scas
and
fs
xchg
and
test
or
mov
mov
in
jne
push
addr16
xchg
ljmp
ja
lcall
int
cmpsb
and
lret
loop
repnz
imul
test
xchg
cli
pusha
adc
xor
mov
and
decl
or
dec
filds
mov
or
clc
es
aaa
idiv
in
and
stos
fidivrs
push
adc
sbb
lds
and
jge
sbb
xchg
cwtl
rorl
enter
xchg
push
popf
add
sbb
jmp
daa
in
mov
in
xor
sbb
lods
test
sahf
xor
xchg
addl
jmp
push
into
mov
push
adc
add
mov
int
pop
push
sub
jmp
das
mov
or
sbb
dec
mov
or
divb
sbb
test
jo
call
in
adc
outsb
movsb
test
xchg
add
jle
lock
mov
insb
sub
pop
insl
daa
or
xchg
push
push
push
popf
push
and
sub
adc
push
addr16
iret
leave
cmp
lret
popa
dec
or
popa
decl
mov
mov
sbb
jp
xor
push
push
adc
gs
dec
lret
lea
adc
mov
cmpsl
xchg
lea
xorb
outsb
fcomps
pop
dec
push
or
pop
cmp
mov
loop
adc
repz
nop
or
pop
hlt
outsl
std
sub
lcall
arpl
adc
add
in
int3
inc
and
in
jns
sbb
lret
jbe
out
int3
add
sbb
jmp
and
mov
pop
insl
test
popa
ret
push
in
aam
jno
test
adc
adc
enter
lret
rep
push
movsl
sbb
les
test
jle
push
add
jns
icebp
and
out
push
dec
loope
lods
or
in
dec
mulb
jno
testl
cmp
outsb
enter
das
dec
push
movsl
cmpsb
scas
pusha
ret
pop
adc
mov
jno
std
sahf
in
fildl
xor
or
and
or
adc
ret
scas
repnz
jno
inc
dec
insb
les
xorb
xchg
rcll
ss
sub
out
setno
outsl
stos
lret
add
pop
daa
cmp
mov
push
jp,pn
imul
jp
test
outsb
mov
mov
add
cmpsl
mov
mov
testl
rol
imul
push
xchg
insb
sub
mov
xorb
sub
fistpll
cmp
fmulp
sar
das
cmp
loop
inc
mov
sub
mov
or
xchg
xor
popf
mov
pop
add
jb
dec
pop
je
test
xchg
lods
push
mov
test
ret
flds
mov
mov
adc
xor
add
gs
mov
dec
loopne
push
pop
mov
or
ret
adc
maxps
push
stos
xchg
mov
leave
sbb
les
lret
and
movsb
mov
cld
jmp
cltd
jne
fiaddl
jg
jne
push
sub
adc
nop
xchg
pop
sti
mov
sar
sbb
push
out
push
add
mov
iret
add
adc
mov
iret
push
fimuls
adc
scas
fidivs
imul
add
mov
dec
scas
push
movsb
mov
je
movsl
pop
std
fmuls
add
test
push
faddl
loopne
mov
pop
mov
mov
jbe
mov
pop
xchg
lods
jg
cli
dec
dec
xchg
popf
pop
in
flds
add
push
or
lock
push
push
pop
shrl
xorb
mov
lcall
adc
js
pop
fsubr
pop
iret
mov
inc
jmp
cltd
out
aas
pop
shll
mov
mov
lret
imul
bound
and
andl
add
out
jmp
inc
xor
rcll
mov
scas
push
cld
pop
inc
aaa
test
mov
dec
lock
mov
and
inc
movsl
mov
add
imul
pop
push
pop
ss
dec
imul
push
sbb
fwait
lahf
inc
add
das
cli
and
dec
xlat
cs
mov
inc
fld
sub
sbb
jns
push
test
sbb
cmp
jg
mov
je
cltd
dec
mov
mov
stos
jne
jmp
imull
jp
xor
cmp
mov
mov
lock
out
int
repz
push
jp
mov
lcall
lret
repz
aas
xchg
repnz
pop
xchg
ljmp
push
aam
mov
mov
inc
mov
adc
jl
addr16
inc
dec
push
xor
xchg
mov
cmp
mov
cmp
push
sub
stos
pop
and
ret
test
mov
push
and
in
out
inc
inc
jno
mov
and
xchg
mov
sbb
sti
outsb
mov
shlb
ljmp
adc
arpl
or
dec
mov
fs
mov
scas
pushf
fdivr
sbb
ds
add
sbb
cmpsl
ljmp
stos
cld
mov
mull
popa
out
mov
aam
add
xchg
push
push
sub
rcl
xlat
lock
add
add
addr16
ss
cmp
test
fdivs
jl
loopne
mov
lret
cs
rcrl
add
xchg
out
repz
sarb
sub
mov
jo
mov
addr16
mov
in
mov
jge
clc
rclb
dec
sub
xor
sbb
es
lret
jg
jecxz
fisubs
in
jl
pop
int3
inc
mov
loop
fwait
mov
insb
sub
mov
and
jo
hlt
ficomps
test
stc
sbb
and
fwait
mov
push
pop
je
sub
pop
pop
sti
push
cmp
adc
fisubrs
std
add
fwait
pop
int3
or
dec
add
fbld
cmp
fiadds
add
sub
mov
rcrl
sbb
push
negl
movsb
push
fisubrs
push
loopne
mov
stc
fisttpll
ret
test
mov
jp
cwtl
adc
imul
pop
rorb
xchg
jae
sub
mov
leave
pop
test
pop
or
push
rol
dec
call
mov
push
imul
outsl
stos
or
loope
inc
mov
mov
stos
lods
jge
dec
pop
icebp
mov
mov
clc
ljmp
jbe
add
cld
out
mov
jmp
ljmp
aaa
jl
movb
cmp
adc
sbb
jo
jne
shl
mov
xchg
pop
xchg
mov
adc
clc
ljmp
jge
jnp
cmp
pop
aam
adc
jno
pop
std
enter
mov
cltd
fsubrl
es
sbb
test
ja
cmp
jbe
insl
aad
pop
push
inc
lret
ret
dec
stc
jno,pn
mov
insb
mov
push
nop
scas
mov
fnstenv
aaa
ja
sar
fildl
mov
mov
sbb
nop
sbb
jne
xor
xchg
pop
sbb
insb
inc
mov
xchg
sbb
dec
add
das
adc
daa
sbb
push
mov
dec
jns
nop
std
aam
jne
jb
dec
in
sbb
and
movsb
inc
pop
add
lcall
and
popa
out
cmp
ret
stos
and
pop
sar
lahf
ror
enter
arpl
fsubrl
and
aam
inc
clc
jae
adc
sbbb
loope
cltd
mov
sub
dec
and
test
adc
and
out
push
test
mov
sub
in
xchg
jno
les
pop
mov
inc
iret
jns
mov
jbe
flds
fucomip
jne
ret
outsl
cmpsl
test
fmull
fiaddl
out
nop
mov
xor
mov
int3
pop
cmp
adc
sbb
ret
mov
inc
xchg
fsub
pushf
incb
xlat
fbstp
sub
jb
cmp
int3
imul
sbb
sti
test
mov
xlat
adc
mov
and
jp
cs
lret
cmp
xchg
xor
adc
pushf
or
dec
stos
push
clc
fisubs
cmp
inc
sub
mov
or
xchg
mov
cltd
daa
xchg
add
pop
rolb
mov
test
fwait
lret
jnp
xor
stc
rcr
mov
int
arpl
mov
lock
mov
push
jns,pn
out
mov
or
testl
mov
or
push
add
dec
bnd
mov
js
insb
shrb
xchg
jge
shr
and
pop
push
push
dec
xor
push
jo
xchg
clc
sbb
and
pop
push
fisubs
pop
add
nop
xor
outsb
cs
xor
cmp
add
mov
nop
leave
inc
stos
addr16
hlt
fcomps
popl
sub
push
adc
out
clc
mov
jns
cmp
test
out
xchg
cli
xchg
test
inc
cmovo
mov
fimull
cmc
loope
xor
mov
shr
stc
jb
xor
mov
xchg
roll
ds
test
mov
imul
xor
callw
cwtl
lock
dec
es
sub
call
sub
cmp
jg
mov
pop
jl
stos
pop
aad
cli
shrb
lret
loop
in
sub
insb
dec
xchg
divb
adc
roll
jmp
imul
outsl
fldcw
xorb
in
pop
insl
sti
mov
insl
ret
hlt
loop
mov
cwtl
dec
cwtl
and
sub
fwait
xor
aas
int
dec
inc
dec
div
inc
dec
test
movsl
jns
icebp
movsl
fcoml
icebp
pusha
fsubr
les
sub
xchg
mov
sub
mov
adc
xchg
push
clc
dec
in
out
xchg
pop
jle
cs
fidivl
lds
into
dec
aaa
pop
movsb
fwait
rclb
lods
xchg
iret
add
mov
xlat
lods
test
and
jp
not
cli
cmp
out
xor
cmp
enter
sub
xchg
pop
jg
mov
enter
and
and
cmp
add
sti
movb
dec
inc
cmp
sbb
out
mov
jg
mov
xchg
aaa
lods
mov
mov
mov
ret
dec
rol
mov
xchg
out
stos
sub
sub
pop
movsl
mov
xor
mov
movsb
nop
int3
mov
adc
scas
push
adc
fcomp
insb
jae
fistpll
mov
xchg
mov
jge
es
and
sub
and
movsb
roll
sbb
or
jmp
fdivs
dec
jl
jne
xchg
push
mov
dec
popa
pop
ret
orb
lds
pop
xor
sbb
adc
loope
adc
ffree
jb
int3
dec
out
or
add
inc
sub
xchg
es
sbb
mov
icebp
inc
sbb
jmp
roll
jmp
xchg
mov
out
or
jge
stos
addr16
out
push
cltd
xchg
cmpl
aad
ja
pop
cmpsb
rcr
add
dec
jmp
pop
in
icebp
add
mov
es
std
addr16
jnp
add
das
into
mov
or
adc
mov
xor
icebp
jge
mov
mov
dec
out
cmc
fnstsw
mov
push
and
cmpsb
sub
mov
cmp
out
enter
pop
cld
xchg
stos
and
test
insb
and
out
clc
jns
push
jp
xor
fsubl
dec
lret
push
or
mov
sbb
js
cvtdq2ps
cmp
sbb
dec
mov
lods
dec
mov
leave
addr16
mov
pushf
pusha
jmp
mov
fdivl
ja
xchg
bound
lcall
int3
repz
xchg
mov
shlb
jns
sub
sbb
jecxz
fucomip
leave
cmp
lods
adc
call
jo
leave
xor
shrl
inc
into
jns
fcomps
pop
push
adc
loope
lods
cmpsl
mov
nop
lods
sub
inc
sarl
and
clc
jns
test
cmpsl
push
jmp
test
clc
and
lock
inc
nop
insb
lret
fidivrl
inc
das
lock
or
xor
jecxz
push
mov
mov
adc
push
test
arpl
out
fmulp
sbb
adc
ret
neg
or
sti
neg
jg
push
mov
push
sub
inc
lods
push
jae
pop
sahf
add
mov
adcb
jo
cmp
push
flds
into
mov
add
js
jne
xchg
je
push
data16
insb
xchg
adc
mov
das
add
sub
gs
loopne
xlat
insl
arpl
mov
adc
xor
xor
aam
fimull
in
lcall
mov
repnz
loope
jno
lcall
adc
mov
pop
sub
repz
dec
xchg
in
jo
adc
pop
call
jae
mov
add
or
addr16
jb
or
push
mov
lods
cmp
cmp
xchg
mov
xchg
jp
mov
mov
sbb
jge
popa
xchg
mov
xcrypt-ofb
cmpsl
jmp
add
popf
lods
fadds
jg
mov
push
dec
neg
out
sub
adc
jo
fcmovb
jge
mov
push
lret
stc
mov
jle
les
add
xlat
mov
xor
in
pop
cld
xor
shl
sarl
inc
mov
movsl
pushf
sahf
cmp
ret
imul
jne
sub
jo
jmp
pop
stos
das
in
hlt
mov
scas
mov
sbb
subb
jmp
leave
gs
jns
inc
adc
rcrl
icebp
cmpsb
loop
sti
loope
pop
xor
mov
in
xor
push
ss
mov
jmp
push
sbb
push
shl
out
lret
jb
nop
pop
xchg
jb
rclb
lret
lods
cmc
shrb
sarl
test
xchg
xchg
mov
bswap
push
pop
xchg
sub
ljmp
pop
jmp
jb
sub
adc
dec
xor
stos
mov
jno
pop
test
sbb
insb
insl
jmp
mov
xlat
ljmpw
or
dec
adc
outsb
or
loop
push
nop
aad
jne
ret
scas
rcl
out
stc
inc
xchg
jns
lods
movsb
mov
mov
hlt
mov
pusha
shrb
in
aas
lock
and
imul
imul
lock
add
es
ja
outsb
xor
pop
adc
sahf
js
pop
adc
mov
js
das
cs
jge
mov
dec
mov
push
and
mov
jns
xor
cmp
push
fsubl
dec
push
jns
cmp
jmp
imull
push
adc
push
popa
mov
je
inc
xchg
or
aad
or
int3
dec
fisttpll
fdivp
mov
xor
adc
jl
and
xchg
js
call
and
pop
shrl
aaa
leave
int3
scas
out
dec
and
jmp
imul
jp
ja
test
out
mull
cs
and
inc
pop
mov
out
leave
pop
sti
xchg
adc
and
cmp
dec
and
fyl2x
dec
sarl
negl
xor
dec
adc
int3
dec
mov
dec
out
js
add
cmpsl
adc
sub
jl
cmp
cmpsb
ljmp
adc
shrl
shll
adc
mov
jle
aas
test
movsb
ffree
jno
ficoml
sbb
mov
or
xchg
inc
stc
push
in
jmp
sub
lock
sbb
pusha
out
repz
cmpsl
ss
aad
hlt
mov
aaa
fnstsw
fchs
and
cmp
mov
ret
test
jo
cmp
out
jb
les
jbe
into
mov
lea
arpl
leave
mov
push
out
cld
daa
xor
mov
mov
inc
loope
mov
pop
lock
fsubl
push
inc
enter
shlb
lahf
xlat
repnz
mov
aad
shrl
sarl
jl
neg
scas
pop
lods
into
sub
jmp
cmp
add
inc
aad
push
push
std
jp
jl
adc
outsl
in
xchg
sahf
mov
shlb
test
cmp
ds
in
xor
sub
nop
jae,pt
push
mov
inc
loop
add
rorb
das
insb
cmp
lcall
xchg
push
fnsave
jmp
dec
movsl
lods
adc
je
in
and
mov
or
adc
or
out
xchg
arpl
and
addr16
jnp
mov
jle
scas
test
inc
addr16
lcall
add
dec
mov
cmp
push
pushf
sbb
mov
add
or
push
jnp
pop
insb
inc
stc
push
cmp
mov
sbb
xor
inc
arpl
jae
or
fcoms
pushf
xor
sbb
mov
repnz
cmpsl
fwait
and
rol
out
and
add
fistpll
cwtl
lea
in
sub
loop
inc
xchg
xlat
jge
pop
mov
bound
inc
mov
outsb
and
jnp
mov
jg
repz
inc
ss
rcll
add
lret
add
and
ficomps
out
das
cmpsl
jg
or
mov
mov
inc
insb
xor
pusha
adc
pop
orl
adc
lock
int3
ret
jge
in
popf
mov
loop
sahf
gs
rorl
mov
xlat
inc
pop
icebp
xor
stos
call
loop
mov
cmp
cmpsl
lds
pop
mov
add
push
add
insl
in
xorb
icebp
pop
mov
shl
test
sbb
lret
loope
adc
inc
adc
sub
call
xor
cli
mov
fisttps
dec
or
jl
jb
test
sbb
cmp
lods
xchg
out
adc
stos
add
inc
add
loope
jmp
cmp
dec
pop
in
aad
push
and
mov
mov
js
rcll
lods
xchg
or
sbb
xchg
clc
gs
pop
mov
sbb
and
cwtl
fsubs
pop
xor
mov
sahf
adc
out
int
outsl
scas
mov
mov
add
cmp
push
out
lods
insb
pop
fs
dec
je
cmpsb
cmpsb
cmp
add
dec
xchg
add
cwtl
movsl
ljmp
jns
ret
cmp
aas
push
fsubl
into
or
add
push
jnp
push
popf
xor
xor
inc
dec
inc
repz
xlat
shll
daa
jmp
add
dec
cld
xor
popf
sbb
ret
shl
call
jbe
jnp
loop
leave
loop
adc
testl
das
in
lock
xchg
mov
and
push
xorl
or
addr16
bound
jno
dec
outsb
les
shrl
and
es
std
jns
out
adc
test
aaa
andl
mov
mov
leave
fldenv
cli
std
mov
hlt
sbb
in
jo
stos
pushf
test
div
mov
imul
mov
push
or
sbb
iret
xor
sbb
xchg
mov
pop
ret
lcall
push
les
leave
mov
jnp
jle
lret
xchg
insb
loopne
pop
fadds
int
push
xor
push
leave
mov
ljmp
push
cmp
cmc
mov
out
and
inc
mov
adc
xchg
insl
push
dec
mov
lds
enter
sub
inc
xchg
dec
inc
shlb
mov
addb
xor
sti
and
push
or
andb
adc
pop
popf
sbb
mov
dec
jbe
mov
inc
push
ret
inc
mov
incb
xchg
jle
incl
popf
fsubs
outsl
jno
movsl
js
cmp
mov
sub
mov
inc
das
and
xor
pop
dec
dec
adcl
lods
mov
sub
mov
jg
mov
cmp
mov
repnz
xchg
mov
push
movsl
aam
ss
add
mov
cmp
xchg
inc
cmpsl
lcall
clc
xorb
loope
mov
push
roll
loopne
xor
push
xor
xor
fcompl
popa
popa
daa
or
dec
lods
xchg
xchg
std
xchg
pop
jb
push
mov
mov
outsb
lret
xchg
outsl
push
and
or
xchg
les
inc
pop
push
insl
xor
movsb
hlt
dec
lret
adc
sbb
adc
and
rol
stos
in
jg
arpl
test
gs
xchg
iret
xchg
and
inc
leave
add
or
and
xor
sbb
outsl
mov
aad
hlt
dec
mov
std
mov
xlat
sbb
jge
js
mov
jno
gs
push
pop
popf
mov
adc
mov
test
mov
cltd
cmp
js
cmpsl
in
notb
or
call
outsb
mov
loope
add
mov
into
pushl
icebp
movnti
aam
push
pop
out
or
mov
inc
cmp
iret
adc
inc
cmp
fldt
mov
mov
or
pop
in
mov
xchg
pop
in
jl
shrb
jge
dec
popa
and
inc
add
ret
xchg
xchg
ss
adc
lret
jle
mov
xor
mov
sbbb
aad
clc
sub
mov
cs
pop
dec
cmp
imul
push
cmp
jl
and
aaa
pop
pop
adc
push
mov
pop
call
in
dec
sti
or
pop
dec
negb
mov
fdivs
mov
sahf
jp
inc
mov
and
xor
adc
push
mov
rcl
sub
mov
mov
jbe
jg
fs
movsl
mov
mov
sbb
mov
out
or
pop
dec
push
stos
adc
push
push
icebp
push
lcall
cmp
pop
loopne
mov
cmpsb
test
jecxz
mov
fdiv
mov
scas
cld
cs
jne
fmull
lcall
or
aaa
fst
ljmp
in
stos
repz
xchg
xchg
cmpsb
mov
fcmovb
sub
push
adcl
scas
xchg
pop
outsl
pop
frstor
inc
push
xor
mov
fsubl
movsb
sarl
in
ljmp
cmpsb
repz
data16
or
push
sti
cmp
shlb
or
inc
xchg
sbb
outsb
xchg
loopne
aad
mov
insb
outsb
test
fcomps
fisttpll
sbb
jmp
je
sub
and
fisttps
inc
outsb
mov
mov
ds
pop
add
movsl
inc
iret
xor
sbb
xor
fildl
pop
or
dec
ret
imull
mov
leave
jo
leave
push
out
cmpsb
sbb
jl
push
das
mov
jp
ljmp
jno
xlat
call
int3
sub
lret
insl
movsb
mov
pop
jl
pop
adc
add
and
xchg
hlt
mov
test
rcrl
test
mov
es
add
xchg
xchg
sbbl
xchg
leave
jle
ret
jp
dec
ljmp
add
pop
test
sahf
rorb
adc
xchg
add
mov
fwait
add
add
inc
jne
cmp
or
mov
cmp
lea
rol
mov
xchg
repnz
test
cmpsb
inc
add
psraw
jno
push
lahf
and
lret
jbe
aaa
push
out
jmp
dec
mov
movsl
inc
rorb
aam
test
jo,pt
inc
jnp
movsb
xchg
mov
add
jnp
mov
or
xchg
pop
inc
mov
das
movsl
pop
dec
xchg
sbb
push
pop
popf
xchg
jae
adc
fstl
flds
xchg
aaa
mov
dec
fimuls
jb
mov
sub
rolb
mov
xchg
stos
or
imul
inc
cmpsb
sbb
idivb
clc
sti
lds
mull
sub
ret
jecxz
push
popf
arpl
ljmp
aad
mov
rorb
or
jnp
jb,pn
dec
mov
dec
mov
cli
roll
adcb
dec
mov
adc
rclb
pop
and
mov
mov
aaa
jae
mov
addr16
pop
repz
sbb
sbb
es
mov
pop
mov
imul
out
adc
cmp
cmp
add
mull
xchg
fwait
xor
out
es
lds
pop
inc
sarb
mov
add
jo
out
fs
scas
cld
add
mov
adc
pop
pusha
xchg
mov
int3
test
sbb
add
push
mov
cmp
and
cmp
xchg
inc
scas
xchg
fwait
inc
popf
mov
cmp
adc
dec
mov
test
push
test
ret
int3
cmovne
adc
loop
sbb
pop
cmp
and
into
sub
pop
xlat
pop
mov
dec
mov
pop
mov
sarb
inc
mov
stos
ja
cli
lret
in
jbe
dec
sub
push
std
lds
sbb
in
inc
cld
inc
pushf
mov
movsl
push
mov
sbb
loope
push
out
sub
enter
xchg
xor
dec
bound
xlat
in
les
fwait
ret
xor
mov
pop
movsb
mov
push
out
loop
dec
jmp
out
fbstp
sbb
mov
addr16
inc
ss
or
jo
jbe,pt
mov
int
add
cmpsl
jnp
add
adc
ret
jl
sbb
add
add
call
add
add
add
jmp
xor
inc
loope
call
je
negw
movl
jmp
ret
mov
hlt
lock
add
jmp
add
jmp
push
push
add
push
orl
rol
je
sbb
mov
ret
mov
xchg
inc
push
pop
or
sbb
call
lcall
add
cs
cmp
push
push
and
ret
inc
jne
add
out
or
or
inc
add
add
or
mov
call
inc
xor
inc
xor
call
rolb
mov
add
add
add
jne
mov
rol
push
mov
jge
pushl
call
add
clc
je
mov
xor
pop
call
das
push
inc
jne
add
mov
add
or
jmp
push
pop
cld
add
test
inc
inc
test
cld
xor
in
clc
jle
push
add
push
mov
or
decl
rclb
call
pushl
mov
mov
jne
cmp
pop
or
shlb
decl
cld
orl
jne
ret
xor
rolb
shl
add
push
xor
loop
mov
and
inc
mov
add
pushl
or
orl
mov
pop
cld
pop
mov
jle
jno
sbb
or
add
call
push
inc
add
and
ja
rolb
add
xchg
push
adc
jbe
call
dec
call
jne
cmp
add
add
call
and
add
sarl
xorl
push
ret
mov
movsl
push
mov
pop
jmp
mov
or
dec
add
pop
je
jnp
add
dec
mov
addr16
add
bswap
mov
test
decl
lea
add
push
jle
cld
dec
loope
mov
mov
sarl
int3
push
enter
nop
addr16
fistps
les
push
call
cmp
push
xorl
leave
cld
incl
cmp
push
add
sub
je
adc
inc
adc
pop
push
add
rol
jne
pop
pushl
push
add
dec
add
pcmpgtd
jbe
add
mov
add
pop
pop
and
add
and
cmp
mov
bound
data16
mov
andb
and
jmp
and
pushl
push
sub
or
call
push
mov
adc
pop
js
push
call
push
add
push
and
inc
mov
sub
inc
jmp
add
add
int3
mov
inc
and
add
call
xor
push
or
add
test
and
or
sub
jmp
mov
clc
push
sarb
int3
pop
mov
push
add
jo
decl
andl
mov
pop
pop
test
incl
adc
jecxz
clc
adcb
push
call
xchg
call
jns
jae
lea
xor
call
call
decl
push
lock
add
adc
mov
rol
inc
jecxz
call
and
xchg
or
data16
mov
vmread
adc
mov
or
jmp
aam
mov
je
inc
sub
add
push
pop
incl
jne
pop
call
add
test
inc
rolb
mov
add
je
shlb
adc
pop
cmp
add
mov
inc
movsb
orl
add
incl
add
add
sbb
add
dec
arpl
sub
test
mov
flds
fildl
call
jmp
inc
clc
lahf
xor
clc
cmp
pop
inc
cmp
leave
mov
shlb
jne
fcoms
cld
push
jne
xor
and
mov
test
mov
cld
jge
hlt
inc
jne
xchg
insb
inc
fnstenv
add
add
jecxz
cld
psubusb
in
add
lret
mov
mov
movups
add
stc
addr16
movb
jg
test
stc
add
pop
add
jo
rol
or
add
movsb
addl
testl
incl
push
rorl
mov
mov
or
inc
dec
mov
mov
jo
loope
push
pushl
jle
