add
add
sub
add
add
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
push
push
push
mov
jne
push
push
push
call
add
xor
jmp
push
push
lea
call
or
lea
push
movl
call
mov
lea
add
push
push
mov
call
test
je
mov
mov
mov
mov
lea
movb
call
lea
lea
push
push
push
lea
movb
call
mov
mov
test
je
push
push
push
call
mov
add
mov
test
je
push
push
push
push
push
push
call
add
lea
movb
call
lea
movb
call
lea
mov
call
xor
jmp
push
push
push
push
push
call
add
jmp
mov
test
jbe
push
push
push
push
push
push
call
add
jmp
push
lea
call
test
jne
push
push
push
push
call
add
jmp
mov
call
test
jne
mov
test
je
push
call
xor
mov
divl
mov
test
lea
je
mov
push
push
call
add
or
add
add
divb
push
push
push
call
add
mov
test
je
mov
push
add
or
lea
movb
call
lea
movb
call
lea
mov
call
mov
mov
pop
pop
pop
pop
mov
add
ret
mov
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
mov
xor
cmp
je
mov
xor
cmp
jbe
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
mov
push
call
mov
add
mov
mov
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
push
push
mov
mov
xor
mov
mov
lea
movb
call
mov
movb
cmp
mov
jne
push
push
push
call
add
jmp
push
push
lea
call
push
lea
movb
call
mov
lea
add
push
push
mov
call
cmp
je
mov
mov
push
mov
mov
call
test
jne
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
call
add
jmp
lea
push
mov
push
call
cmp
mov
jne
push
push
push
push
call
add
mov
lea
push
push
call
test
jne
lea
call
mov
push
call
mov
mov
lea
lea
push
push
push
lea
movb
call
movl
mov
movl
mov
mov
mov
movl
mov
lea
push
push
movb
call
mov
add
cmp
je
mov
xor
shr
divl
mov
cmp
lea
je
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
dec
mov
jne
lea
call
mov
lea
lea
push
push
call
mov
push
push
lea
call
test
jne
push
lea
mov
mov
push
call
mov
push
call
push
push
push
push
call
add
movl
lea
movb
call
add
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
xor
jmp
mov
cmp
je
cmpl
jne
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
lea
push
push
push
call
cmp
jne
push
push
push
call
add
mov
cmp
jbe
push
push
push
push
push
push
call
add
movl
lea
movb
call
jmp
mov
cmp
jne
push
lea
call
test
jne
push
push
push
push
call
add
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
jmp
mov
call
test
jne
cmp
je
push
call
xor
mov
divl
mov
cmp
lea
mov
je
mov
push
push
call
add
cmp
je
mov
mov
cmp
jne
push
push
push
call
add
mov
cmp
je
mov
push
add
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
mov
pop
pop
pop
mov
pop
add
add
add
push
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
cmp
je
mov
xor
cmp
jbe
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
mov
push
call
mov
add
mov
mov
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
xor
push
cmp
mov
mov
jne
push
push
push
call
add
xor
pop
pop
mov
mov
add
ret
push
push
push
lea
call
push
lea
mov
call
mov
neg
sbb
cmp
je
push
mov
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
lea
lea
push
call
mov
mov
call
test
jne
mov
push
push
push
push
push
call
mov
add
push
mov
call
jmp
mov
lea
push
push
mov
call
test
je
mov
test
je
cmpw
je
mov
push
push
call
add
test
push
jne
mov
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
call
add
mov
push
push
mov
call
add
lea
movb
call
lea
movb
call
test
jne
pop
lea
movl
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
movl
call
mov
movl
mov
mov
mov
movb
test
jne
push
push
push
call
add
lea
movb
call
lea
movb
call
lea
movl
call
xor
pop
mov
mov
add
ret
lea
lea
push
push
lea
call
test
je
push
push
push
lea
call
mov
test
jbe
mov
push
push
push
push
push
push
call
mov
add
mov
push
call
xor
divl
mov
test
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
mov
push
push
push
push
push
call
add
lea
lea
push
push
jmp
test
je
mov
mov
mov
mov
neg
sbb
test
movb
je
cmp
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
mov
add
push
lea
call
mov
mov
push
push
push
push
push
push
push
call
mov
add
mov
push
push
call
test
jne
lea
lea
push
push
lea
call
lea
mov
movb
call
jmp
mov
lea
push
call
test
je
add
jmp
mov
push
push
push
push
push
call
add
lea
lea
push
push
lea
call
mov
test
jne
pop
pop
pop
mov
call
mov
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
movl
mov
push
push
lea
movb
call
push
lea
movb
call
mov
mov
neg
push
mov
sbb
call
test
je
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
lea
lea
push
call
mov
push
lea
mov
mov
push
call
push
movb
mov
mov
push
call
lea
movb
push
lea
call
lea
mov
push
call
mov
call
push
push
mov
mov
push
call
lea
lea
push
call
lea
push
mov
call
push
lea
call
lea
mov
push
call
lea
mov
push
call
lea
movb
call
test
jne
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
xor
push
lea
mov
call
mov
mov
mov
mov
movb
cmp
jne
push
push
push
call
add
jmp
call
test
jne
push
push
push
push
call
add
lea
movb
call
lea
movl
call
xor
jmp
push
call
add
mov
cmp
movb
je
mov
call
mov
jmp
xor
cmp
mov
movb
jne
push
push
push
call
add
lea
movb
call
lea
movl
call
mov
jmp
lea
call
lea
movb
call
cmp
jne
push
push
push
call
mov
add
mov
push
add
lea
movb
call
lea
movb
call
lea
movl
call
mov
jmp
push
push
lea
call
push
lea
movb
call
mov
neg
sbb
cmp
je
add
mov
mov
cmp
movb
mov
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
mov
jne
mov
mov
inc
cmp
jae
mov
lea
mov
test
mov
jne
inc
add
cmp
jb
lea
lea
push
mov
call
mov
mov
mov
lea
push
push
lea
call
test
je
mov
jmp
mov
xor
push
push
push
push
push
call
mov
add
inc
mov
mov
call
test
mov
je
mov
mov
lea
lea
push
lea
push
push
mov
movb
movl
call
mov
lea
push
call
test
jne
mov
mov
push
push
push
push
push
push
call
mov
add
mov
push
call
add
jmp
test
je
mov
mov
push
call
test
je
mov
lea
push
push
mov
call
mov
mov
push
call
push
lea
mov
mov
push
call
mov
mov
push
call
lea
movb
call
mov
test
jne
mov
call
test
jne
lea
call
mov
mov
mov
lea
lea
push
push
push
lea
movb
movl
call
mov
test
jne
mov
lea
push
call
mov
mov
test
je
push
call
xor
divl
mov
mov
test
lea
je
mov
push
push
call
add
test
je
mov
mov
test
jne
jmp
mov
lea
push
push
mov
call
mov
mov
mov
dec
mov
mov
jne
mov
call
mov
push
push
push
push
push
call
add
jmp
push
mov
push
push
push
push
push
call
add
mov
lea
inc
movb
mov
call
lea
movb
call
mov
lea
movb
call
mov
test
jne
mov
mov
call
mov
neg
sbb
test
je
mov
jmp
mov
mov
mov
mov
cmp
movb
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
mov
jne
mov
mov
lea
inc
cmp
jae
mov
lea
mov
test
mov
jne
inc
add
cmp
jb
mov
lea
push
lea
mov
call
mov
mov
mov
lea
mov
test
je
push
call
mov
xor
add
divl
mov
mov
test
lea
je
mov
push
push
call
add
test
je
mov
mov
test
jne
jmp
mov
lea
push
push
mov
call
mov
add
mov
mov
mov
dec
mov
mov
jne
call
mov
mov
lea
lea
push
push
mov
call
add
test
jne
mov
test
jne
mov
push
push
mov
call
mov
call
inc
add
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
mov
movl
mov
mov
mov
mov
lea
movb
call
lea
add
mov
movb
call
mov
mov
push
push
lea
call
cmp
jne
push
push
push
call
add
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
movb
call
mov
call
cmp
mov
je
mov
mov
lea
lea
push
lea
push
push
mov
movb
mov
call
mov
mov
push
push
push
push
push
push
call
mov
add
cmp
je
mov
cmp
je
mov
mov
push
push
call
add
test
je
mov
test
jne
jmp
test
jne
mov
push
push
push
push
push
call
mov
mov
add
lea
push
push
push
call
lea
movb
call
mov
xor
cmp
jne
push
mov
call
test
jne
mov
mov
xor
cmp
jle
mov
mov
add
lea
push
call
mov
movb
push
mov
call
add
jne
mov
push
push
push
push
push
call
mov
mov
add
push
push
push
lea
call
lea
movb
call
mov
inc
cmp
jl
mov
movl
cmp
movb
je
lea
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
call
add
mov
movb
call
movl
mov
movb
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
lea
mov
movb
call
lea
movb
call
cmp
jne
mov
push
mov
add
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
mov
pop
pop
pop
mov
pop
add
add
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
sub
test
push
push
push
mov
jne
push
push
push
call
add
xor
pop
pop
pop
mov
mov
add
ret
push
push
lea
call
push
lea
movl
call
mov
mov
lea
movb
push
mov
call
mov
push
push
mov
push
push
push
lea
call
add
lea
movb
call
mov
test
je
cmpw
je
push
push
push
call
mov
test
jne
push
push
push
jmp
push
push
push
push
push
call
mov
test
jne
push
call
push
push
push
push
call
add
lea
movl
call
pop
pop
or
pop
mov
mov
add
ret
mov
mov
lea
mov
push
movb
call
mov
push
push
call
add
lea
movb
call
push
call
push
call
lea
movl
call
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
movl
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
mov
movl
mov
mov
lea
lea
push
push
lea
movb
call
test
je
mov
mov
push
call
test
je
mov
mov
push
push
mov
call
jmp
push
push
push
push
call
add
lea
lea
push
push
lea
call
test
jne
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
mov
xor
cmp
jbe
push
mov
mov
cmp
je
lea
push
push
call
add
cmp
jne
mov
inc
cmp
jb
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
push
mov
push
not
test
mov
je
mov
push
mov
call
mov
test
je
mov
xor
test
jbe
mov
mov
test
je
lea
push
push
push
call
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
test
jne
mov
inc
cmp
jb
jmp
mov
call
mov
dec
test
je
inc
mov
jmp
mov
mov
mov
lea
push
push
push
movl
call
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
push
mov
mov
call
xor
divl
mov
test
mov
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
jmp
test
jne
mov
test
jne
mov
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
test
jne
mov
push
lea
push
push
call
mov
mov
shl
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
inc
push
mov
mov
lea
mov
push
call
mov
movl
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
movl
call
mov
dec
mov
jne
add
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
push
mov
cmp
je
mov
xor
mov
mov
shr
divl
mov
cmp
lea
je
cmp
je
mov
mov
cmp
jne
pop
pop
xor
pop
ret
mov
mov
mov
mov
mov
mov
dec
mov
jne
mov
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
movl
mov
xor
cmp
mov
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
sub
push
mov
push
push
mov
push
not
test
mov
je
mov
push
mov
call
mov
test
je
mov
xor
test
jbe
mov
mov
test
je
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
lea
not
test
push
push
mov
je
call
jmp
call
mov
test
jne
mov
inc
cmp
jb
pop
pop
pop
pop
add
ret
mov
call
mov
dec
test
je
inc
mov
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
push
not
test
je
lea
mov
push
call
jmp
lea
push
mov
call
mov
mov
shr
xor
mov
div
test
mov
mov
je
mov
test
je
mov
cmp
je
mov
test
jne
jmp
test
jne
test
jne
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
mov
test
jne
mov
push
lea
push
push
call
mov
add
mov
shl
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
lea
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
mov
test
je
lea
push
push
push
call
mov
test
jne
pop
pop
mov
mov
add
ret
mov
call
mov
dec
test
je
inc
push
push
mov
mov
mov
lea
push
push
push
movl
call
mov
mov
test
jne
mov
push
lea
push
push
call
mov
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
mov
mov
movl
mov
lea
inc
push
mov
call
lea
push
mov
call
mov
test
je
mov
jmp
mov
lea
mov
movl
call
mov
dec
mov
jne
pop
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
push
mov
xor
cmp
je
mov
xor
cmp
jbe
push
mov
mov
cmp
je
lea
push
push
call
mov
cmp
jne
mov
inc
cmp
jb
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
push
push
mov
mov
push
call
xor
divl
mov
mov
mov
test
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
jne
pop
xor
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
xor
mov
cmp
je
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
cmp
jne
add
dec
jne
push
call
mov
add
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
xor
mov
shr
divl
mov
mov
mov
test
je
mov
test
je
mov
cmp
je
mov
test
jne
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
mov
xor
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
lea
movl
push
call
mov
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
movl
push
call
mov
call
pop
ret
nop
nop
nop
nop
add
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
push
call
mov
ret
push
push
mov
push
mov
sub
push
push
xor
xor
mov
lea
mov
push
mov
lea
push
lea
push
push
mov
movl
movl
call
mov
xor
lea
lea
rep
mov
xor
mov
mov
mov
lea
push
mov
push
push
mov
push
push
mov
mov
push
push
push
push
push
movl
movl
mov
call
test
jne
call
mov
push
push
push
push
push
push
call
add
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
push
push
push
call
mov
mov
push
push
call
mov
push
call
mov
mov
mov
mov
movb
mov
lea
push
push
lea
push
push
push
add
lea
lea
push
mov
call
mov
lea
push
push
lea
call
push
mov
movb
call
lea
movb
call
test
jne
mov
pop
test
je
mov
push
add
jmp
mov
mov
test
je
push
add
mov
push
add
lea
movb
call
add
movl
call
add
pop
mov
pop
mov
add
ret
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
push
push
mov
cmp
je
cmp
je
lea
push
push
mov
call
cmp
jge
movw
mov
mov
mov
mov
push
lea
push
push
movb
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
cmp
je
push
lea
call
lea
push
push
push
call
add
lea
push
call
mov
push
call
add
test
je
push
lea
call
push
lea
call
mov
push
push
push
push
push
call
mov
add
mov
mov
lea
lea
push
push
push
lea
mov
mov
push
movb
call
call
add
mov
mov
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
add
lea
movl
movb
call
lea
mov
call
lea
push
call
xor
jmp
cmp
je
push
push
push
call
mov
add
cmp
je
lea
movl
movb
call
lea
mov
call
lea
push
call
xor
jmp
push
lea
call
mov
lea
push
movb
call
lea
mov
movb
call
push
lea
call
mov
lea
push
movb
call
lea
mov
movb
call
addl
je
cmp
jne
push
push
push
call
add
addl
je
cmp
je
push
push
push
push
push
push
call
add
lea
push
call
mov
lea
mov
add
call
sub
lea
push
push
push
lea
call
mov
movb
push
push
push
push
push
call
mov
mov
add
lea
push
add
cmp
jge
mov
push
movw
call
cmp
mov
jne
cmp
je
movw
movl
push
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movb
mov
call
lea
movb
call
lea
mov
call
lea
push
add
xor
jmp
mov
lea
movb
movl
call
lea
mov
call
lea
push
call
xor
jmp
push
push
push
push
push
push
call
add
mov
mov
pop
pop
pop
mov
pop
add
jecxz
inc
add
nop
nop
mov
push
push
push
mov
sub
push
push
mov
pop
lret
jmp
jne
mov
jmp
mov
mov
mull
xchg
rclb
outsb
ret
push
push
push
call
mov
add
mov
push
lea
push
push
mov
pop
mov
add
add
lea
push
call
cmp
je
push
jmp
addl
jne
push
jmp
push
lea
call
lea
push
push
push
call
add
push
lea
call
mov
push
push
push
push
push
call
mov
add
mov
mov
pop
ret
inc
add
push
push
lea
mov
mov
push
movb
call
call
add
mov
mov
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
add
movl
jmp
mov
cmp
je
push
push
push
call
mov
add
cmp
jne
push
push
push
push
push
call
mov
add
cmp
jbe
push
push
push
push
push
call
mov
add
mov
lea
and
add
lea
movl
call
xor
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
call
push
call
push
call
add
test
je
push
call
mov
mov
push
push
push
call
push
mov
call
add
test
je
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
movl
call
mov
add
adc
add
call
mov
test
jne
push
push
push
push
call
add
pop
ret
push
mov
push
add
test
jne
push
add
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
mov
rclb
inc
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
push
push
call
mov
xor
add
mov
cmp
je
mov
jmp
or
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
call
mov
xor
lea
mov
rep
mov
lea
rep
mov
lea
movl
add
rep
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jle
mov
mov
mov
mov
jmp
mov
mov
lea
cmp
jle
mov
movl
jmp
mov
mov
add
add
cmp
jle
mov
movl
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
lea
push
push
call
lea
mov
push
call
add
cmp
jb
push
push
push
call
add
lea
push
call
add
cmp
jb
push
push
push
call
add
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
mov
pop
pop
mov
pop
pop
add
ret
lea
lea
push
push
call
lea
mov
push
call
add
cmp
jb
push
push
push
call
add
lea
push
call
add
cmp
jb
push
push
push
call
add
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
xor
cmp
push
mov
jb
push
mov
cli
add
sbb
add
jl
cld
add
cmpw
je
add
inc
cmp
jbe
or
jmp
add
lea
push
call
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jl
cmpl
jb
mov
lea
cmp
mov
ja
mov
lea
cmpw
jne
cmpw
je
add
inc
add
cmp
jbe
or
jmp
add
lea
mov
sub
push
call
mov
lea
mov
mov
lea
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jl
cmpl
jb
mov
lea
cmp
mov
ja
mov
lea
cmpw
jne
cmpw
je
add
inc
add
cmp
jbe
or
jmp
add
lea
mov
sub
push
call
mov
lea
mov
mov
lea
shr
rep
mov
and
rep
mov
lea
lea
push
push
mov
call
test
jge
mov
push
push
push
push
push
call
add
lea
call
lea
call
lea
call
pop
pop
movl
movl
pop
or
pop
ret
mov
lea
cmp
je
push
push
push
call
add
mov
cmp
jb
cmp
jb
lea
push
mov
call
lea
push
push
mov
call
cmpl
jb
lea
lea
push
push
mov
call
cmpl
jb
lea
lea
push
push
mov
call
lea
lea
push
push
mov
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
mov
push
push
mov
mov
mov
push
push
mov
mov
xor
lea
mov
lea
push
call
mov
mov
cmp
je
push
push
call
add
test
je
sub
sar
jmp
push
call
add
mov
lea
mov
mov
mov
mov
shr
rep
mov
lea
and
rep
mov
mov
add
mov
add
lea
mov
push
lea
push
mov
push
xor
push
push
mov
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
push
lea
push
push
lea
push
push
movb
movw
call
mov
mov
add
movb
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
mov
add
mov
add
mov
mov
lea
call
xor
jmp
push
push
push
push
loopne
inc
add
push
les
dec
cmp
adc
push
mov
mov
mov
inc
add
mov
mov
call
lea
add
cmp
jne
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
push
mov
call
mov
mov
shl
mov
mov
shr
rep
mov
movl
and
rep
lea
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
lea
mov
call
mov
mov
xor
dec
test
movl
jle
mov
test
jne
cmp
je
test
jne
add
inc
add
cmp
jl
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
push
mov
push
push
mov
push
lea
mov
call
mov
mov
xor
cmp
mov
jne
mov
jmp
lea
cmp
jle
mov
cmpw
jne
cmp
je
inc
add
cmp
jl
jmp
lea
test
je
lea
push
mov
call
lea
mov
push
call
sub
sar
mov
mov
sub
lea
dec
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
add
lea
lea
mov
shr
rep
mov
and
rep
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
mov
xor
lea
lea
rep
mov
mov
push
push
movl
mov
mov
call
add
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
call
mov
xor
lea
push
rep
lea
movl
push
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
call
mov
xor
lea
push
rep
lea
movl
push
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
mov
xor
lea
push
rep
mov
lea
push
mov
add
push
rep
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
sbb
fadds
jge
push
push
push
push
call
add
mov
pop
pop
add
ret
mov
lea
push
push
push
call
lea
push
call
mov
lea
inc
push
lea
push
call
lea
push
call
lea
lea
push
lea
push
call
lea
push
call
add
add
movw
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
mov
xor
lea
push
push
rep
push
call
lea
mov
push
push
mov
call
mov
add
test
jge
push
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
mov
test
je
add
cmp
ja
mov
xor
lea
lea
rep
mov
push
push
call
add
lea
push
push
call
add
lea
push
call
push
call
add
lea
push
push
push
push
push
push
call
mov
test
jne
lea
push
push
push
push
jmp
call
cmp
jne
push
call
lea
push
push
push
push
push
call
add
or
pop
pop
pop
pop
add
ret
push
mov
xor
lea
push
push
rep
push
call
lea
lea
push
push
mov
mov
call
mov
add
test
jge
push
call
push
push
push
push
call
add
or
pop
pop
pop
pop
add
ret
jne
push
call
pop
pop
pop
xor
pop
add
ret
push
push
push
push
push
call
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
push
call
pop
mov
pop
pop
pop
add
ret
mov
test
je
mov
push
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
mov
test
jne
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
push
push
call
add
test
jne
or
jmp
or
mov
mov
lea
mov
mov
push
push
push
call
mov
add
push
lea
call
push
push
mov
push
push
call
add
lea
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
sub
mov
je
dec
jne
lea
push
push
push
call
add
test
mov
jne
mov
mov
push
push
push
push
push
push
jmp
lea
push
push
push
call
add
test
mov
jne
mov
mov
push
push
push
push
push
push
push
call
mov
add
pop
ret
nop
sub
mov
push
push
mov
lea
push
push
push
push
mov
movl
movl
movl
call
test
je
push
push
push
push
push
call
add
xor
pop
pop
pop
add
ret
mov
mov
mov
lea
push
lea
push
push
push
push
push
add
test
jne
cmpl
jne
mov
test
je
mov
lea
push
lea
push
push
push
push
push
add
test
jne
cmpl
jne
mov
push
call
pop
pop
mov
pop
add
ret
mov
push
call
mov
pop
mov
pop
xor
pop
add
ret
mov
push
call
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
push
push
call
add
mov
call
test
jne
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
add
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
call
mov
add
mov
xor
push
lea
mov
mov
call
mov
push
lea
mov
mov
call
push
push
push
push
push
push
movb
call
add
lea
mov
push
push
push
push
push
call
cmp
jne
mov
xor
cmp
je
push
call
mov
mov
push
lea
call
push
lea
push
push
lea
call
push
lea
movb
call
lea
movb
call
mov
cmp
mov
jne
lea
push
push
mov
mov
push
call
lea
call
cmp
je
push
lea
call
lea
push
push
mov
mov
push
call
lea
call
cmp
je
movl
jmp
cmp
je
mov
mov
push
push
push
push
call
add
lea
movb
call
mov
movl
cmp
je
push
call
mov
push
lea
call
lea
movl
call
mov
pop
pop
mov
pop
add
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
mov
movl
test
je
push
call
movl
add
push
mov
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
lea
movl
call
mov
movl
lea
cmp
ja
add
push
jmp
push
jmp
push
jmp
push
jmp
push
push
push
push
push
call
add
push
lea
call
mov
push
push
lea
call
mov
lea
push
mov
call
movl
lea
movb
call
mov
mov
pop
mov
add
ret
in
fadds
inc
repz
inc
cli
fadds
inc
add
add
nop
nop
nop
sub
mov
lea
push
push
lea
push
mov
push
mov
push
push
push
movl
movl
call
lea
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
mov
xor
mov
mov
mov
mov
call
mov
lea
push
mov
lea
push
push
push
mov
push
push
add
mov
test
jne
pop
test
add
clc
pop
je
cmp
jne
mov
test
je
add
mov
push
mov
call
lea
lea
push
mov
push
mov
push
push
push
push
add
mov
mov
shr
push
mov
call
lea
movl
call
mov
jmp
lea
movl
call
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
xor
push
mov
call
test
jne
mov
push
push
push
push
push
call
add
jmp
mov
mov
mov
push
lea
mov
mov
call
push
push
push
push
mov
push
push
mov
call
add
lea
mov
push
push
push
push
push
call
cmp
jne
mov
xor
cmp
je
push
call
mov
mov
push
lea
call
push
lea
push
push
lea
call
push
lea
movb
call
lea
mov
call
mov
cmp
mov
jne
lea
push
push
mov
mov
push
call
lea
call
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
jne
lea
lea
push
push
push
push
push
call
add
test
je
mov
push
mov
call
push
call
add
test
je
push
push
push
push
push
call
add
mov
movl
cmp
je
jmp
call
push
push
push
push
push
push
call
add
xor
mov
xor
lea
mov
rep
mov
lea
mov
push
mov
call
mov
push
push
push
push
push
call
add
lea
lea
mov
push
push
push
push
push
push
push
push
push
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
call
add
jmp
mov
push
push
push
push
push
push
call
mov
add
sbb
fidivs
push
and
push
push
call
mov
push
call
mov
push
call
cmp
je
push
push
push
push
push
push
call
add
mov
movl
cmp
je
push
call
mov
push
lea
call
lea
movl
call
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
movw
movw
mov
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
movw
movw
movw
mov
mov
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
movw
movw
mov
mov
movb
mov
ret
nop
nop
nop
nop
mov
push
push
mov
lea
mov
rep
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
lea
mov
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
lea
mov
xor
mov
rep
mov
test
je
push
push
push
call
add
mov
cmp
jb
mov
mov
mov
cmp
je
push
push
push
push
push
push
call
add
mov
xor
mov
mov
mov
lea
mov
mov
rep
push
stos
mov
test
je
mov
mov
mov
shr
rep
mov
and
rep
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
pop
mov
pop
pop
ret
movl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
push
call
mov
mov
add
push
call
mov
push
push
push
push
push
call
mov
add
add
push
push
push
add
mov
test
jne
call
push
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
push
call
mov
push
add
test
jne
call
push
push
push
push
push
call
add
mov
push
push
push
add
mov
test
je
push
push
push
push
call
mov
add
push
push
call
push
mov
add
test
jne
call
push
push
push
push
push
call
add
test
jne
push
push
push
push
call
mov
add
mov
cmp
jg
je
mov
push
push
push
call
mov
test
jne
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
addl
je
push
push
push
push
call
add
jmp
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
jmp
mov
mov
push
push
push
add
mov
test
jne
push
push
push
push
call
add
adc
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
push
push
call
add
push
call
push
add
test
jne
call
push
push
push
push
push
call
add
push
push
push
push
push
call
mov
add
add
mov
mov
call
mov
mov
mov
test
je
mov
push
push
call
add
push
push
push
push
call
mov
add
push
push
push
add
mov
test
jne
push
push
push
push
call
add
mov
pop
pop
pop
pop
mov
mov
add
ret
mov
mov
lea
push
push
movl
call
push
push
lea
push
push
call
lea
movl
mov
movl
add
mov
push
lea
push
push
call
add
add
lea
push
push
push
push
call
mov
test
jne
call
push
push
push
push
push
call
add
push
add
test
jne
push
push
push
push
call
add
movl
jmp
push
call
push
add
test
jne
push
push
push
push
call
add
push
push
push
push
call
mov
add
push
push
call
push
mov
add
test
jne
call
push
push
push
push
push
call
add
or
cmp
je
test
je
cmp
je
lea
mov
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
mov
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
push
push
push
call
mov
mov
add
mov
test
je
push
push
push
push
push
call
add
push
push
push
push
push
call
mov
add
mov
push
push
push
push
push
call
mov
push
push
call
add
push
push
push
push
call
mov
add
push
push
push
call
mov
test
jne
push
push
push
push
call
add
mov
lea
call
pop
pop
pop
mov
pop
mov
mov
add
ret
push
call
push
add
test
jne
call
push
push
push
push
push
call
add
lea
mov
call
mov
pop
pop
pop
pop
mov
mov
add
ret
push
push
push
push
call
add
lea
mov
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
push
push
push
push
mov
push
push
call
push
push
push
push
call
mov
movl
mov
movl
call
test
jne
push
push
push
push
call
add
lea
push
call
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
push
push
push
push
call
mov
add
push
push
push
push
add
mov
mov
test
mov
jne
add
push
push
push
push
push
call
add
jmp
push
call
test
jne
push
push
push
push
call
mov
add
push
jmp
mov
push
push
call
test
jne
add
push
push
push
push
push
call
mov
add
push
call
movl
push
call
mov
push
push
push
mov
mov
push
movl
mov
movl
call
mov
add
adc
add
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
push
pushf
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
add
cmp
jne
push
push
push
push
call
add
lea
push
dec
xchg
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
icebp
scas
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
jb
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
push
push
push
push
add
mov
test
mov
jne
add
push
push
push
push
push
call
add
lea
push
js
inc
add
mov
push
push
push
movl
call
add
lea
movl
call
xor
mov
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
mov
movl
mov
test
je
mov
movl
mov
mov
pop
pop
movl
pop
movl
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
mov
mov
sub
cmp
jne
push
push
push
push
movl
call
lea
lea
push
mov
lea
push
push
push
call
mov
lea
add
mov
mov
add
push
call
mov
lea
push
add
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
add
ret
cmp
jne
cmpl
jne
push
push
push
push
call
add
call
mov
mov
mov
mov
add
ret
push
push
push
push
call
mov
mov
push
push
call
mov
add
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
movl
mov
test
jne
push
push
push
call
mov
add
test
je
mov
add
push
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
movl
mov
test
jne
push
push
push
call
mov
add
test
je
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
add
call
mov
mov
mov
mov
add
ret
cmp
jne
push
push
push
push
call
mov
add
mov
cmp
ja
xor
mov
add
mov
jmp
mov
jmp
mov
jmp
mov
lea
push
push
lea
push
lea
push
push
lea
lea
push
lea
push
add
push
push
push
lea
call
inc
add
dec
and
movl
mov
push
call
lea
push
push
lea
call
mov
movb
push
push
push
push
push
call
add
lea
movb
call
push
push
push
lea
push
push
call
push
push
push
lea
push
push
movb
call
mov
movb
test
je
lea
lea
push
push
push
lea
push
push
call
mov
mov
mov
mov
test
jne
push
push
push
push
call
add
lea
lea
push
call
mov
mov
add
push
push
call
add
lea
call
lea
lea
push
call
mov
push
mov
add
push
call
add
lea
call
lea
push
lea
call
mov
mov
add
push
push
call
add
lea
call
push
push
lea
push
push
movb
call
push
push
lea
push
push
movb
call
lea
movl
call
mov
mov
add
ret
movl
mov
mov
add
ret
lea
shl
add
lock
lock
lock
add
add
add
push
adc
add
xor
sub
add
add
adcb
or
or
add
sbb
mov
add
mov
xor
or
push
add
xorb
add
xor
and
cmp
cmp
cmp
dec
add
jae
outsl
add
add
add
add
add
xor
xor
push
add
sbb
ret
in
ret
aaa
pop
dec
in
jecxz
les
lsl
adcb
xor
add
add
add
add
cmp
scas
sahf
hlt
nop
out
mov
pop
aad
or
dec
xchg
or
add
push
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
pop
or
xor
xor
pop
pop
or
xor
xor
xor
xor
push
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
add
add
sub
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
outsb
gs
sub
sbbl
testl
add
orl
adc
sub
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
sub
pop
in
sub
subb
sub
stos
mov
xchg
push
out
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
add
shll
push
or
push
add
add
xor
xor
or
push
add
xchg
push
das
das
outsl
arpl
jbe,pn
jb
jae
outsb
arpl
xor
add
adc
add
add
xor
xor
push
add
pop
add
xor
xor
mov
and
cltd
inc
add
das
arpl
jbe,pn
jb
jae
outsb
arpl
das
je
jae
arpl
arpl
xor
push
add
and
or
or
or
push
add
xor
push
add
sgdtl
add
add
push
shlb
push
add
adc
xor
xor
xor
add
push
push
push
inc
xor
or
xchg
testl
add
push
lds
and
or
mov
mov
or
adc
push
sub
pop
pop
popa
mov
add
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
inc
sbb
lea
cli
aad
add
xor
mov
daa
repnz
dec
add
dec
cmpl
push
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
loope
lods
sub
movsl
dec
fs
sbb
lods
cmp
aad
and
lcall
inc
or
mov
sbb
mov
jmp
xchg
scas
inc
add
push
push
mov
ds
jb
mov
sahf
sub
mov
cmp
cmpsb
mov
sbbl
push
hlt
sbb
sti
cmc
lods
xchg
mov
push
andb
sub
add
jmp
js
roll
pop
mov
xor
add
add
adc
sbb
inc
neg
insl
dec
or
push
or
xchg
testl
xor
xor
push
add
push
adc
pop
inc
xor
push
add
adc
gs
gs
and
jo
xor
adc
add
pop
adc
inc
jne
bound
jbe
insb
insb
xor
xor
or
push
push
push
xor
push
add
adc
push
and
jb
imul
outsl
outsb
xor
xor
add
push
push
push
and
gs
popa
insl
jo
outsb
and
xor
pop
or
xor
xor
xor
xor
or
xor
xor
xor
xor
or
or
add
push
adc
push
push
xor
xor
or
push
push
gs
push
imul
arpl
xor
xor
push
add
add
and
jb
push
imul
and
popa
insl
jo
outsb
and
jb
imul
xor
push
or
xchg
testl
xor
add
add
int
scas
or
lods
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
mov
imul
sahf
movswl
in
js
ja
jle
cmp
xchg
scas
or
inc
add
cmp
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
sbb
mov
mov
xchg
add
and
xor
push
sub
xchg
adc
adc
mov
ret
mov
xchg
sbbl
jne
cmp
xchg
adc
push
rorl
inc
dec
fnstsw
jl
ds
rcrl
js
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
cmc
dec
or
shlb
push
test
int
mov
out
mov
fldenv
inc
add
add
add
mov
fdivs
xor
or
push
add
add
xor
xor
je
loopne
inc
add
arpl
add
mov
add
jae
enter
push
test
add
jo
enter
add
add
add
mov
pop
jmp
scas
add
mov
stos
add
in
add
rol
popl
mov
add
cmc
push
add
scas
rolb
add
iret
add
incl
add
add
jmp
jb
add
lret
mov
decl
sar
incl
mov
subb
rorb
ljmp
push
mov
addb
in
add
add
sti
icebp
mov
ljmp
mov
hlt
lds
std
sahf
add
incl
std
xchg
nop
mov
add
scas
in
cmc
add
mov
pop
in
push
mov
add
push
push
push
push
push
call
cmpsl
popf
add
cmpsl
xchg
add
ljmp
xchg
jns
pop
nop
out
jge
mov
mov
add
data16
into
add
jo
add
jmp
jmp
in
mov
loope
repnz
add
incl
rolb
mov
jno
lahf
lds
in
pop
lret
testb
push
decl
pop
mov
push
push
push
push
push
push
push
push
push
call
add
add
out
push
shll
popf
mov
outsl
add
add
je
pop
add
out
pop
adcb
int3
add
mov
jmp
aad
add
xchg
pop
icebp
out
add
roll
jmp
enter
incl
xchg
mov
add
cmpsl
enter
incl
js
incl
decl
call
mov
inc
add
or
inc
add
push
inc
add
add
push
push
call
mov
add
add
lods
add
mov
jmp
loop
stc
pop
jmp
push
push
add
insb
jmp
jmp
add
in
add
ljmp
add
incl
aad
pop
scas
lock
add
add
test
mov
jo
mov
xchg
sbbl
xchg
lret
mov
je
leave
scas
out
stos
xchg
fists
decl
call
loopne
inc
add
jo
add
stos
scas
add
stc
mov
push
pop
arpl
add
fs
pop
mov
scas
lock
pop
add
cld
add
decl
ljmp
add
cmpl
push
push
clc
add
stos
push
decb
add
ja
add
pushl
mov
ljmp
xchg
mov
mov
sub
push
push
call
push
push
push
push
push
call
add
movsl
add
add
loop
lret
push
jbe
add
ljmp
imul
stc
add
mov
xlat
fadds
add
add
add
add
outsl
mov
in
add
stc
rolb
arpl
fisttpl
add
mov
stos
add
add
pushf
int3
add
lcall
je
add
add
lds
test
mov
sub
call
call
push
push
call
fmul
outsl
mov
xchg
jmp
add
js
jmp
add
mov
cld
add
mov
add
imul
ljmp
mov
fdivrl
add
incl
mov
add
mov
ljmp
add
incl
addl
inc
add
shrb
add
push
push
push
push
push
call
hlt
add
jns
incl
fst
shlb
out
arpl
shll
jno
mov
jns
call
add
add
add
popf
add
add
fiaddl
add
pushl
int3
mov
incl
add
lret
add
jnp
out
jecxz
pushl
add
lret
pop
popf
add
add
lods
add
int3
int3
loop
out
add
jmp
ret
mov
push
push
call
xchg
jbe
popf
add
lea
mov
mov
dec
lret
test
jl
push
mov
add
add
in
add
pushl
lcall
movsl
add
add
pushf
jl
jae
jmp
in
cmc
lock
incl
push
loopne
pop
aam
mov
mov
push
add
add
add
xchg
mov
sub
mov
push
push
push
push
push
push
push
push
push
call
arpl
cli
jle
jbe
cmc
add
pusha
clc
add
call
adc
je
push
push
mov
jecxz
xchg
ficoml
out
lods
stos
imul
clc
push
add
mov
pop
xchg
mov
add
add
aam
add
lcall
xchg
jmp
jp
out
xchg
imul
add
fwait
test
mov
sub
add
push
push
call
rolb
ljmp
pop
add
add
add
add
test
incl
ret
enter
jge
repnz
add
add
jmp
add
lods
mov
jno
imul
push
add
gs
add
incl
add
add
xchg
add
in
add
out
incl
add
add
add
push
push
push
or
inc
add
ror
sub
shl
inc
rol
not
pop
not
inc
pop
push
push
push
push
call
mov
incl
add
je
xchg
pop
add
scas
mov
cmc
ljmp
lret
call
enter
fadds
add
add
add
add
in
addr16
add
incb
loopne
pop
mov
add
jmp
mov
pop
add
mov
add
lret
add
lds
je
incl
mov
lret
out
add
push
incl
call
push
push
push
push
push
push
push
push
call
xlat
pop
push
shl
adc
add
add
add
add
stos
imulb
cmpsb
out
imul
test
inc
xchg
jge
xchg
fsubrl
jle
add
lods
in
pop
mov
lcall
aam
movsl
fwait
mov
add
js
incl
add
pushf
incl
mov
xchg
add
movsb
call
add
jl
call
call
add
mov
sub
mov
push
push
push
push
push
push
push
push
push
call
lret
loopne
jns
add
insb
int
test
jge
mov
enter
int
add
incl
fwait
add
jmp
in
add
mov
jmp
pushf
lcall
add
incl
pop
add
jecxz
mov
out
in
mov
add
add
incl
loope
add
decl
sub
push
push
add
not
shl
dec
push
and
add
shr
sub
lea
not
sub
not
add
sub
pop
add
dec
pop
push
push
push
push
push
push
push
call
decl
test
add
pushl
cmc
add
mov
lds
repnz
test
xchg
cmpsb
add
pop
out
insb
mov
push
idivl
mov
mov
add
scas
add
push
test
lea
xchg
add
add
add
add
jmp
add
add
mov
sub
pushl
push
push
push
push
push
push
push
push
push
call
jle
add
movsb
add
mov
add
mov
add
push
stos
arpl
mov
jmp
in
repnz
incl
add
sarl
jbe
scas
add
mov
add
ret
add
mov
add
fst
cmc
sarb
mov
sub
call
push
push
push
push
push
push
call
add
add
add
fwait
mov
div
les
mov
jle
addr16
add
add
add
fdivr
rolb
lret
sti
xchg
lret
pop
repnz
outsl
incl
push
shll
add
mov
fildl
push
add
jmp
add
jo
add
add
pushf
push
add
add
mov
movl
push
push
push
push
push
call
loope
xchg
enter
incl
sar
incl
xchg
imul
add
jnp
notl
dec
imul
xchg
loope
pop
fdivr
call
ja
pushf
push
jl
add
ja
mov
inc
add
add
gs
decl
scas
mov
pushf
push
js
push
arpl
jmp
addl
ljmp
decl
decl
cltd
push
push
push
push
push
push
call
jp
pusha
add
lret
incl
jns
loope
add
flds
fdivrl
xlat
xchg
add
add
test
je
add
add
add
push
pop
addl
hlt
pop
add
xchg
iret
int3
cwtl
add
add
call
incl
cli
hlt
add
decl
jle
xchg
imul
je
add
xchg
add
mov
sub
pushl
push
push
push
push
push
push
push
push
call
stos
xchg
add
jns
add
add
jp
add
cmpsl
cltd
add
jmp
add
repnz
add
int
add
out
jb
jae
hlt
dec
jnp
mov
ljmp
add
mov
movsb
add
rolb
mov
mov
lcall
popl
add
movsb
out
add
lcall
fadds
push
call
imul
pushl
call
pushl
push
push
push
push
push
push
push
push
push
call
test
inc
add
add
lds
add
push
add
incl
add
add
scas
ljmp
pusha
pusha
imul
in
cmpsb
add
jle
add
iret
add
mov
int
enter
fdivl
sahf
mov
pop
fdiv
add
add
pop
aam
add
add
pushl
call
push
push
sub
shr
inc
push
or
not
add
add
shl
shr
sub
add
shr
pop
add
shr
pop
push
push
push
push
push
push
push
push
call
les
insb
incl
add
add
add
roll
addr16
icebp
into
fs
mov
sarl
cld
add
add
nop
add
jecxz
mov
lret
mov
lcall
add
jmp
pop
decb
pushl
call
push
push
push
sub
push
sub
add
add
not
sub
lea
shr
pop
shr
pop
push
push
push
push
push
call
add
add
add
add
add
add
call
mov
add
fdivrl
add
gs
add
push
insb
mov
shl
pop
icebp
jae
into
fdivrs
jno
lahf
int3
ja
in
pushl
xchg
incl
pop
movsb
test
jl
js
orl
incl
add
pop
add
ret
pop
lock
pop
testb
push
call
push
call
leave
enter
imul
add
mov
dec
mov
mov
xchg
dec
rcr
xchg
jnp
jnp
jne
pop
incl
add
push
sti
jle
add
mov
add
mov
test
leave
lods
enter
sarl
aam
out
xchg
add
pushf
incl
mov
in
clc
mov
push
call
add
add
pushl
mov
add
add
incl
push
add
imul
add
pop
fwait
mov
add
popa
xchg
add
iret
in
sahf
add
add
add
add
add
add
add
lcall
hlt
mov
pushl
roll
add
cld
mov
incl
call
or
inc
add
insb
add
add
push
incl
jle
call
mov
sbbl
push
mov
clc
add
jbe
mov
mov
add
push
add
shl
lret
add
mov
incl
mov
push
rorb
mov
push
jl
jns
out
add
mov
roll
loop
pop
jb
add
scas
aam
mov
sub
push
push
push
push
push
push
push
push
push
call
add
mov
popf
mov
add
int3
insb
dec
jno
imul
add
add
popl
mov
incl
shll
add
lcall
ret
xlat
mov
imul
add
fs
mov
add
ret
insb
add
mov
andb
decl
decl
push
push
call
aam
iret
xchg
arpl
pushf
add
add
incl
add
mov
lea
jmp
add
add
sbbl
add
mov
add
jnp
scas
lock
incl
add
mov
ljmp
insb
mov
scas
add
ja
push
iret
mov
jae
add
scas
addb
sahf
pop
add
mov
sub
add
push
push
push
push
push
push
push
call
jle
add
popl
xlat
popf
add
jmp
cmpl
fiadds
testb
pop
cmpsb
leave
add
add
add
movsl
fiaddl
add
cmpb
add
inc
fsubrl
add
add
push
add
push
lock
lret
cwtl
xchg
lock
movsb
aad
add
out
decl
add
add
push
push
push
push
push
push
push
push
push
call
add
jno
jle
add
pushl
ret
incl
fimuls
scas
insb
incl
jnp
fldl
add
call
out
jae
sarb
incl
mov
pop
ljmp
mov
enter
add
test
lret
mov
repnz
xchg
decl
mov
sub
push
push
call
push
rcl
add
push
add
jno
mov
push
add
add
add
jle
call
cwtl
add
jmp
stos
lcall
incl
cmc
faddl
xchg
add
add
rcrl
xchg
add
sti
add
push
mov
test
add
lcall
shl
sti
lods
add
hlt
in
add
test
incl
incl
jne
push
push
push
push
push
push
push
call
sbbl
enter
mov
add
pop
movsb
add
cli
ret
add
leave
add
add
jge
clc
add
xlat
mov
add
add
add
int
add
add
jmp
test
incl
incl
mov
test
jle
incl
mov
add
jne
sar
add
mov
sub
add
push
push
push
push
call
xchg
xchg
jne
out
jmp
xorb
add
roll
negl
add
add
pushl
gs
shrb
aam
jmp
add
jmp
addr16
fsubl
jp
aam
rol
add
add
add
xchg
leave
add
add
lcall
mov
sub
pop
push
push
push
push
push
push
push
push
push
call
stc
loop
int3
add
ljmp
add
xchg
push
sahf
fldenv
incl
pop
add
push
out
add
std
add
js
add
shrl
ret
add
add
mov
aad
add
mov
add
mov
aad
mov
xchg
clc
dec
add
jmp
aad
xchg
pop
push
addr16
enter
decl
decl
push
call
test
push
add
popa
add
mov
add
fsubs
add
std
mov
add
cli
pop
add
incl
xchg
add
jmp
add
mov
ljmp
popa
lret
add
add
add
insb
add
std
ljmp
add
mov
add
xlat
sti
jo
ljmp
sub
sub
push
push
push
push
push
call
add
xchg
mov
out
jbe
scas
fsubl
jns
out
add
pop
mov
arpl
add
inc
pushl
add
std
add
arpl
add
out
push
xchg
incl
shll
ljmp
lahf
add
popa
mov
test
pop
test
add
pop
add
incl
add
incl
sbb
and
iret
ja
dec
push
push
push
push
push
push
call
popf
pop
add
cli
icebp
enter
add
add
add
pop
add
insb
in
xchg
add
xchg
fists
add
movsb
add
test
add
jp
jmp
loope
enter
add
shrb
lock
add
incl
push
ret
pop
nop
pop
mov
cmpsl
imul
sub
sub
pop
push
push
push
push
push
push
push
call
shll
fadds
add
incl
jnp
mov
add
mov
rcl
mov
jge
mov
incl
push
add
push
filds
add
mov
iret
out
add
fldl
jnp
decl
pusha
jb
imul
icebp
add
mov
sub
rep
pop
push
push
push
push
push
push
push
push
push
call
scas
add
icebp
stos
test
pop
pop
incl
lret
xlat
add
sar
pushl
jnp
mov
add
repnz
pop
outsl
add
xchg
test
shrb
add
jmp
popf
loopne
xorb
in
cmp
fcoml
call
mov
sub
mov
add
push
push
push
push
push
call
rolb
lahf
movsb
add
popl
imul
mov
nop
add
fdivrs
movsb
insb
in
decl
imul
xchg
push
in
js
add
incl
mov
je
movsl
leave
mov
enter
mov
push
mov
call
pop
in
incl
incl
add
add
add
mov
push
push
push
push
push
push
call
pushl
cli
push
add
fnstsw
jno
popa
fucomi
flds
xchg
jmp
xchg
stos
cwtl
pop
mov
add
popa
lcall
add
add
add
mov
int3
jbe
add
pop
jmp
std
ljmp
mov
adcb
sti
sarl
xchg
js
decl
ljmp
mov
sub
push
push
push
push
push
push
call
mov
add
inc
hlt
pop
pushl
cmpsl
lods
jle
jle
add
xchg
pusha
rclb
fiadds
fbld
movl
add
incl
stos
cmc
add
mov
inc
add
lret
add
pop
xlat
add
lahf
add
add
les
add
mov
js
incl
xor
ja
ret
push
push
push
push
push
call
add
add
ljmp
add
cmc
xchg
fisubs
popf
mov
add
add
lcall
in
add
loop
lock
incl
out
call
push
mov
pop
mov
ret
add
movsb
add
nop
jo
add
push
pop
cli
repnz
xchg
in
xchg
add
incl
incl
rcll
push
inc
add
push
push
push
call
push
decl
lret
incl
mov
add
pushl
repnz
lcall
addb
pop
add
push
fdivrp
lahf
add
pop
gs
fsub
call
rolb
jl
incl
popa
add
pop
outsl
std
pop
incl
add
ljmp
out
popf
add
mov
mov
sub
mov
push
push
inc
push
and
add
lea
sub
dec
shl
pop
shl
lea
shr
pop
push
push
push
push
push
push
push
push
call
loop
filds
jbe
incl
lcall
out
loop
add
xchg
test
inc
decl
incl
test
movsl
enter
jle
cwtl
mov
fisttps
push
les
jecxz
stc
nop
pushl
rclb
pop
add
jno
add
call
fdivr
pushl
push
push
push
push
push
call
insb
in
mov
add
dec
add
call
aad
add
ljmp
add
add
idiv
incl
mov
jno
icebp
add
push
pop
jnp
mov
movsb
add
je
add
call
gs
lcall
popf
xchg
cwtl
je
add
add
add
push
jo
mov
sub
call
push
push
push
push
push
pop
add
add
lea
not
dec
sub
shr
lea
pop
rol
pop
push
push
push
push
push
push
call
mov
pop
mov
push
add
call
shll
aad
mov
incl
pusha
stc
jle
rcrl
add
cli
lcall
xchg
xchg
stos
add
clc
add
jno
add
add
iret
push
out
add
add
push
int3
fiadds
jp
lds
cmpb
jno
mov
sub
push
push
push
push
push
push
push
push
push
call
std
add
cltd
popf
icebp
test
jmp
jb
lcall
ja
add
jmp
cmpsl
mov
push
add
mov
aam
add
jne
imul
mov
pushl
incl
jae
push
lock
sti
add
add
aam
xchg
add
add
in
incl
decl
call
push
push
push
push
push
call
lahf
rorl
shr
add
jb
xorb
addl
icebp
jae
nop
sub
jmp
lock
push
movsb
ja
add
cwtl
ja
cmc
fs
mov
lahf
lea
lods
add
add
loopne
push
scas
int3
mov
add
mov
mov
jmp
enter
sub
mov
push
push
push
push
push
call
mov
int
add
add
add
add
add
add
add
lock
pop
add
incl
add
lock
add
mov
in
cltd
add
jmp
into
fdiv
jae
add
call
test
xchg
loopne
insb
adcb
incl
add
incl
mov
js
testb
mov
mov
sub
push
mov
push
push
push
push
push
push
push
call
stos
scas
lods
jge
add
add
out
fnstcw
loopne
gs
mov
rolb
ret
pushl
add
add
add
pop
call
shll
add
mov
js
imul
jp
aad
pushl
push
gs
cltd
stos
arpl
add
ljmp
xchg
decl
add
add
add
push
push
push
push
push
call
add
pushl
std
call
in
out
mov
pop
add
pop
mov
add
mov
pusha
call
mov
add
lcall
divb
stc
add
leave
jecxz
push
data16
add
incl
aam
jmp
jmp
loopne
insb
mov
incl
xor
gs
push
push
push
push
push
call
add
lods
add
mov
mov
fiaddl
popf
test
dec
loope
cmpsl
add
shr
imul
decl
push
shll
xchg
mov
stos
aad
std
mov
in
add
sahf
outsl
push
movsb
in
mov
add
add
stc
out
add
mov
ror
fldl
add
lock
add
imul
incl
ja
jne
push
push
push
call
add
arpl
xchg
repnz
add
add
rolb
xchg
mov
jo
decl
add
cwtl
arpl
call
mov
decl
imul
fiaddl
lret
add
enter
jb
mov
shll
jmp
shll
call
testl
imul
call
inc
cmp
push
call
mov
cwtl
add
addl
jp
add
mov
not
add
out
rolb
jmp
sti
pop
incl
in
mov
lcall
shlb
jp
leave
push
push
incl
add
push
fs
jmp
addb
test
stc
push
jge
call
add
lret
int
incl
push
mov
jmp
hlt
ljmp
push
push
push
push
push
push
push
call
fsubrs
jae
incl
push
in
push
in
shl
add
add
mov
jp
add
add
jge
in
mov
push
add
out
cwtl
scas
jnp
lods
int
inc
add
inc
jmp
insb
add
add
dec
push
mov
add
add
incl
add
test
rorl
pop
decl
add
pop
push
push
call
rolb
flds
add
mov
ljmp
aam
add
fistps
add
sahf
sarb
mov
add
add
in
loop
test
ljmp
push
std
add
cli
rcrb
add
add
add
incl
jae
enter
mov
std
mov
leave
add
jmp
add
scas
jbe
add
pop
add
add
decl
and
iret
ja
mov
arpl
add
jmp
loopne
add
mov
add
mov
jl
add
jno
add
cmpsb
jno
xchg
icebp
jno
pusha
rcll
incl
hlt
mov
add
cli
add
sti
imul
mov
add
leave
mov
pop
mov
mov
mov
sub
rep
mov
sub
push
push
call
fldl
jbe
jle
incl
lds
mov
add
push
popa
arpl
mov
aad
cwtl
add
incl
pushl
test
dec
add
add
xchg
int3
jb
fwait
mov
mov
popa
mov
incl
fwait
lea
test
loop
add
add
jno
mov
sub
or
je
push
call
xchg
incl
mov
in
call
add
add
incl
add
lods
xlat
add
jmp
jmp
fidivrl
enter
jmp
add
ror
add
int3
incl
call
xchg
nop
add
mov
gs
test
mov
sub
mov
push
push
push
call
lahf
movb
mov
incl
add
mov
out
adcl
incl
movsl
add
call
add
cmpsl
add
jp
lret
out
add
add
push
roll
jl
pop
les
add
popl
mov
add
aam
cmc
mov
mov
call
push
add
mov
sub
sub
mov
sub
push
push
push
push
push
push
push
push
call
jmp
add
add
add
cld
testl
jmp
loopne
test
xchg
add
mov
outsl
addb
add
incl
js
pop
mov
lcall
add
popf
mov
add
fwait
addr16
add
cld
push
add
lock
add
fcmovnb
push
hlt
clc
scas
addr16
pushl
add
add
incl
incl
repnz
push
push
call
mov
pop
lock
add
in
lea
mov
fs
flds
pop
out
jmp
mov
cltd
fst
mov
incl
add
xor
call
fdivrl
mov
mov
dec
add
jecxz
jae
cwtl
movb
lods
lahf
cmpsl
in
popa
filds
stc
mov
add
lahf
push
mov
sub
mov
sub
add
push
push
push
push
push
push
call
add
mov
add
sbbb
decl
imul
incl
mov
cltd
add
mov
jmp
lret
jmp
add
mov
lcall
test
add
scas
add
fmulp
add
mov
mov
add
fs
incl
lcall
call
popa
add
scas
js
rcll
add
add
gs
add
add
test
add
push
jle
incl
add
add
out
xchg
add
fwait
stc
scas
incb
into
add
lret
add
js
leave
add
add
add
add
add
lea
add
imul
add
inc
xlat
jge
incl
push
movsb
mov
push
push
push
push
push
push
call
sahf
mov
int
add
pop
jmp
out
xlat
neg
mov
add
call
add
mov
add
xchg
iret
jl
xlat
add
scas
data16
out
add
add
jae
stc
push
addb
add
jmp
jb
xchg
jmp
xchg
push
cwtl
faddl
gs
add
jb
xlat
stos
add
pushl
mov
sub
sub
push
push
push
push
call
shrb
incl
add
arpl
ljmp
stc
ja
test
jne
add
add
lods
jmp
call
mov
lcall
add
add
mov
add
add
add
push
push
int3
xchg
add
decl
or
je
push
push
push
push
push
push
push
push
call
add
popa
add
int3
mov
add
lods
add
clc
lock
loope
add
add
out
in
addl
imul
add
shl
mov
fidivl
mov
add
incl
add
lea
jns
decl
in
fdivr
decl
add
push
push
push
push
push
push
push
call
add
mov
add
xchg
push
popa
int
mov
hlt
add
test
add
add
xchg
aam
add
xchg
mov
ljmp
push
je
mov
add
pop
incl
clc
in
add
add
les
insb
incl
imul
arpl
call
loope
filds
add
lahf
test
add
mov
out
pop
bound
add
pushf
mov
sub
rep
push
push
push
push
call
mov
add
mov
add
jp
jl
imul
xchg
incl
push
addl
jmp
add
ja
out
fs
add
out
add
mov
ljmp
repnz
in
add
add
xchg
add
lods
incl
enter
ret
mov
sub
pop
push
push
rol
rol
push
and
add
sub
inc
pop
pop
pop
push
push
push
push
push
push
call
scas
out
add
incl
out
in
leave
call
mov
incl
mov
add
cmc
jmp
xchg
mov
andl
add
leave
push
push
aam
pop
add
call
test
add
pop
fwait
incl
ja
lock
stos
add
cwtl
jne
dec
add
xchg
pop
pop
add
cmpsb
stos
add
mov
sub
mov
mov
push
call
lods
add
xchg
mov
push
add
incb
mov
flds
lret
add
mov
add
mov
add
xchg
loopne
jmp
out
add
sti
pop
mov
negl
scas
add
incl
int
stos
ljmp
incb
mov
iret
push
adcb
xchg
test
xchg
add
fildl
outsl
add
call
in
clc
mov
push
push
push
push
push
push
push
push
call
add
call
leave
aad
jmp
in
mov
add
andb
fcoml
rcrb
add
pop
rolb
push
faddl
clc
add
pushl
jo
mov
aam
add
fildl
ret
jmp
scas
stos
push
pusha
add
ljmp
call
mov
xchg
loopne
incl
push
mov
push
call
add
icebp
mov
add
call
mov
insb
pushf
add
incl
add
add
incl
add
add
je
mov
call
mov
js
int3
add
add
out
pop
scas
loop
add
decl
call
call
mov
sub
push
push
push
push
push
push
push
push
call
add
add
add
mov
fstl
negl
jns
imul
add
int
mov
mov
clc
jnp
add
jmp
ja
add
mov
add
call
flds
ljmp
mov
jbe
pushl
imul
mov
lock
push
jmp
jns
decl
call
inc
add
and
iret
ja
push
push
push
push
push
push
push
call
xlat
fwait
rcl
mov
push
add
mov
imul
add
push
mov
stos
add
loope
pop
rolb
cld
incl
mov
push
cltd
imul
lea
enter
cwtl
lret
movb
add
lahf
les
add
loop
ljmp
add
mov
loopne
incl
inc
or
push
push
push
push
push
push
push
call
jbe
add
add
incl
icebp
call
mov
pusha
push
mov
lods
pop
faddl
xchg
xchg
add
xorl
std
test
incl
in
in
incl
fiadds
incl
in
ret
imul
push
mov
push
in
fidivs
add
roll
mov
sub
mov
lea
push
push
push
push
push
call
pop
sarl
lods
add
fcmovb
add
add
mov
call
add
add
add
jns
std
iret
add
fstl
mov
gs
cltd
pop
out
mov
add
add
add
jno
add
incl
add
incl
push
pop
add
add
add
add
dec
add
into
testb
incl
aad
fdivr
stc
add
add
in
stos
jecxz
incl
call
push
push
call
in
test
mov
popf
mov
add
lcall
call
pop
enter
clc
into
incl
jp
xchg
add
sti
jmp
add
popf
jmp
fnstenv
test
incb
add
add
add
pop
jle
xchg
pushf
loope
mov
sub
mov
push
push
push
push
push
push
push
call
mov
mov
push
cli
loope
push
add
mov
stos
pushl
lahf
add
in
imul
inc
repnz
add
lods
mov
add
pushf
add
ljmp
les
incl
mov
mov
add
mov
add
sarb
jb
mov
sub
sub
add
push
push
call
cld
int3
dec
add
add
lock
jge
add
gs
shll
lcall
add
and
fxch
jns
test
mov
incl
cmc
push
fldenv
cltd
add
lret
stc
into
add
call
jmp
out
sahf
add
imul
dec
addr16
incl
shl
jle
add
cwtl
xchg
lock
add
incl
decl
shrb
es
add
add
push
push
push
push
push
push
call
add
add
add
add
mov
lcall
mov
test
icebp
add
add
add
add
add
in
leave
add
bound
add
push
add
add
add
lock
xchg
leave
mov
cmpsb
add
add
add
jmp
xchg
mov
cmc
flds
incl
scas
add
add
add
mov
sub
mov
sub
push
push
push
push
push
push
call
add
add
incl
add
jp
mov
xchg
jmp
add
jp
call
jp
add
add
mov
add
addb
lea
add
mov
mov
incl
xchg
aam
incl
gs
decl
incl
inc
or
push
push
push
push
push
push
push
push
call
stos
push
xchg
push
incl
mov
mov
push
pushf
mov
call
push
mov
idiv
incl
add
dec
pushf
in
addl
pop
jge
add
add
sbbl
push
add
incl
sti
push
add
mov
sub
mov
push
call
push
push
call
xlat
jl
xchg
mov
cltd
test
popa
xlat
jmp
mov
call
incl
jp
lods
in
mov
lds
incl
lods
add
add
lcall
add
scas
add
add
andb
lcall
pop
add
jo
incl
add
pushf
fdivs
mov
sub
mov
push
push
push
push
push
push
push
call
push
add
scas
std
add
add
les
sahf
add
pop
lods
leave
call
incl
add
jne
imul
add
mov
call
les
incl
add
add
pop
inc
xlat
jmp
imul
mov
pop
out
add
xchg
pop
add
loopne
and
iret
ja
inc
or
mov
push
push
push
push
call
imul
imul
jne
movsl
rcrl
push
xchg
lcall
test
jmp
incl
loope
fstpl
add
fs
loop
call
add
mov
pop
mov
push
insb
jnp
shr
push
add
jns
xchg
mov
add
xchg
add
decl
mov
sub
mov
push
push
push
call
jno
pop
add
mov
lcall
out
add
mov
enter
xchg
add
mov
std
out
pop
add
push
pop
add
xchg
add
scas
ljmp
pop
add
jns
add
js
push
lods
mov
fsubs
lds
shrl
lret
aam
out
decl
call
push
push
push
call
arpl
lods
add
add
add
add
hlt
incb
add
stos
in
add
incl
add
cltd
add
incl
lcall
lock
call
add
jle
icebp
xchg
ja
int3
js
call
add
add
add
fcoml
pop
sarl
ljmp
add
push
add
add
push
mov
lock
lcall
pop
push
push
push
push
call
out
jmp
test
add
lods
add
ljmp
clc
lods
repnz
call
rolb
out
add
mov
insb
jge
out
mov
clc
fdivrl
addr16
xchg
add
jmp
jmp
lea
jne
subb
add
pop
mov
add
ljmp
popa
add
add
in
add
mov
sub
leave
push
push
push
push
push
push
call
pushf
int3
pop
push
js
add
ret
pop
pushl
mov
stos
xchg
out
incl
into
push
fmull
flds
stos
sarb
add
pop
add
xchg
jmp
call
push
fisubl
fs
add
lret
add
add
add
xchg
add
mov
add
stc
pop
movsl
dec
lcall
incl
inc
add
push
mov
push
push
call
add
scas
fucom
add
movb
add
outsl
add
add
jbe
mov
add
loop
add
popa
mov
out
lret
out
add
add
incl
call
pop
movsl
add
xchg
jmp
mov
lret
xchg
add
add
ljmp
mov
add
sti
mov
mov
sub
push
push
push
push
push
push
push
push
push
push
call
add
add
jecxz
add
mov
xchg
add
cmpsb
in
mov
mov
mov
popl
data16
add
lcall
push
add
mov
lods
mov
imul
incl
pop
sahf
mov
sti
add
test
add
stos
popf
add
add
call
add
xorb
js
add
jmp
imul
pop
add
mov
sub
push
push
push
push
push
push
call
jns
enter
lcall
mov
pushf
mov
iret
mov
add
lret
leave
call
mov
xchg
ja
xchg
add
bound
add
iret
add
cmpsb
test
out
filds
in
arpl
incb
jmp
add
clc
jne
add
mov
incl
xchg
mov
add
mov
mov
incl
add
clc
push
push
call
sub
add
testb
push
cli
cmc
add
lds
nop
add
add
sar
out
mov
addb
mov
add
add
ljmp
jmp
fwait
add
mov
call
add
nop
test
gs
lcall
js
fadds
mov
vpcmpgtw
add
loope
add
mov
pop
add
incl
incl
add
push
push
push
push
push
push
push
push
call
add
add
jno
shrb
cmc
mov
add
xchg
call
mov
roll
pop
mov
lock
cli
fadds
mov
shr
add
scas
rcrl
add
mov
add
add
push
in
mov
xchg
xchg
add
outsl
add
mov
sub
mov
push
push
push
call
arpl
cli
push
addl
out
sti
in
test
fucomp
push
mov
loop
mov
incl
cld
cli
pop
cmpsb
mov
add
add
xchg
mov
add
cltd
mov
add
xchg
decl
xchg
add
add
add
add
sti
add
in
lock
mov
push
push
push
push
push
push
push
push
call
push
fwait
mov
sbbb
add
add
jmp
negb
add
test
scas
pop
incl
add
mov
add
mov
add
imul
mov
test
mov
lcall
decl
call
gs
bound
add
xchg
add
lcall
sub
add
push
push
push
push
push
push
push
push
push
call
push
incl
jae
popa
nop
mov
jecxz
ljmp
add
imul
xchg
sar
in
jns
mov
mov
mov
add
add
fistl
pop
fxch
add
mov
incl
inc
add
jmp
add
loope
out
fwait
sbbl
fcmovbe
lret
jl
clc
mov
add
mov
lahf
xchg
test
in
fdivr
decl
test
push
push
push
push
push
push
push
push
call
mov
jl
xchg
add
cld
jmp
negb
iret
add
jl
ja
mov
in
xchg
xchg
add
scas
push
sti
nop
add
add
add
stc
add
cmpsl
add
jecxz
jp
jne
add
lods
mov
add
scas
fwait
xchg
cld
push
mov
add
movsb
lcall
decl
pop
pop
pop
push
push
push
push
push
push
push
push
call
call
add
cmp
incl
js
add
pop
popf
mov
ljmp
fisubs
incl
add
mov
fldl
lret
add
add
jmp
mov
xchg
cld
pushf
incl
lahf
mov
js
add
ljmp
add
lcall
dec
add
jecxz
add
add
addl
in
fdivr
dec
ret
push
push
push
push
push
push
push
call
add
fsub
imul
in
rolb
add
push
add
addb
loopne
cmp
fadds
mov
add
add
jmp
add
pushl
pop
add
jmp
pop
xchg
addl
add
jno
add
call
in
loope
fdivrp
mov
incl
pusha
in
add
call
add
add
out
add
xchg
fmuls
jo
incl
call
mov
and
mov
push
push
push
call
lods
add
call
hlt
add
mov
mov
add
ljmp
or
push
add
pop
mov
sti
jae
add
mov
add
faddp
loop
jmp
sahf
add
add
xchg
add
cld
mov
incl
mov
mov
add
decl
into
icebp
mov
add
add
mov
sub
mov
push
push
push
push
push
push
push
push
call
addl
mov
add
shl
incl
add
imul
mov
addl
nop
jb
xchg
add
add
ljmp
call
add
add
add
add
add
push
andb
ljmp
pusha
mov
sub
add
push
push
push
push
push
push
push
push
push
call
dec
int3
xchg
xlat
mov
gs
lods
loopne
decl
data16
sarb
mov
imul
mov
add
andl
out
add
add
add
fiadds
imul
call
xchg
add
xchg
add
aad
clc
push
jp
leave
add
ficoms
jmp
add
add
mov
sub
push
push
mov
push
push
push
push
call
stos
add
lcall
add
add
jl
xlat
xchg
add
mov
lret
adc
add
mov
clc
out
mov
add
add
push
cmpsl
add
add
add
mov
stos
add
ret
jmp
in
imul
add
faddl
fimuls
lcall
movsb
sbb
add
push
push
call
hlt
lods
push
lahf
jns
enter
cld
add
mov
rclb
inc
add
add
jmp
push
loope
ljmp
repnz
jmp
push
ror
jno
flds
mov
lcall
incl
lea
rorl
hlt
mov
add
push
add
pop
add
add
add
add
popa
jno
add
mov
sub
pop
pop
push
push
push
push
call
fcoml
iret
add
cld
lret
pop
int
mov
decl
mov
add
movb
test
add
push
add
add
int3
scas
xchg
add
add
pop
add
lock
pop
xchg
jle
arpl
pushl
je
mov
add
pop
leave
ret
push
push
push
push
call
push
stc
popl
icebp
movl
dec
sahf
push
add
add
sub
mov
test
scas
add
test
movsb
test
jnp
pop
add
pop
cmpsb
call
add
push
pop
add
fildl
fistpl
jp
cltd
add
int3
mov
decl
popa
js
xchg
add
jns
insb
add
add
pushl
mov
mov
sub
push
mov
push
push
push
push
push
call
add
call
shl
mov
add
jno
sar
jmp
mov
add
jno
push
xchg
loop
scas
ljmp
jmp
lcall
mov
mov
jle
mov
fstl
add
nop
push
add
call
cmc
add
add
add
cld
call
pop
cmc
aad
mov
sub
add
push
lea
pop
push
push
push
push
call
repnz
loope
mov
jl
add
mov
mov
add
iret
add
add
add
jns
add
lret
stos
shrb
loope
gs
dec
mov
xchg
filds
enter
add
mulb
filds
cli
add
add
add
incl
add
movsb
sar
incl
call
movl
push
call
movsb
loopne
mov
mov
icebp
mov
incl
addb
fwait
mov
add
jmp
add
add
add
fidivrs
addw
out
call
je
add
pop
subl
pop
test
incl
ja
test
push
pop
add
mov
sub
addl
test
je
mov
push
push
call
push
add
fadds
add
add
mov
mov
fiaddl
xchg
add
add
cld
add
push
in
idivb
add
pushf
rcll
mov
jle
imul
add
in
jns
lret
add
add
testb
js
add
movsl
call
roll
pushl
lds
pop
mov
add
incl
lcall
ss
push
push
push
push
push
call
mov
add
push
rolb
mov
pop
mov
movsb
scas
test
add
std
mov
incl
jo
cltd
lods
jbe
fldl
ret
add
mov
add
iret
outsl
add
in
fucom
jp
cmpsl
add
pushl
cld
mov
mov
in
add
je
data16
js
loope
movl
sbb
js
mov
sub
pop
pop
pop
push
push
push
push
push
push
push
call
pushl
add
lret
scas
out
addb
test
add
lcall
pushl
shl
add
jl
ljmp
add
xlat
add
sti
push
add
lds
mov
call
sti
pushf
rcll
sub
leave
push
call
mov
push
add
jge
add
cmc
mov
lret
lcall
add
cmc
mov
std
add
sar
jmp
ljmp
incl
mov
pop
mov
add
out
ljmp
cltd
push
mov
loop
jae
lcall
sub
ret
push
push
push
push
call
roll
pop
in
add
les
shll
mov
movb
lea
add
test
pop
mov
repnz
xchg
push
mov
mov
add
cld
mov
call
addl
mov
lods
add
add
add
call
out
add
add
mov
in
push
push
xor
lea
pop
mov
add
push
push
pop
push
push
sub
ror
sub
pop
push
push
testl
push
push
push
call
in
ficompl
mov
imul
add
incl
add
incl
stos
jae
out
mov
gs
sarb
add
in
mov
add
out
cmpsl
add
aad
add
fadds
arpl
add
lret
sar
popa
test
loopne
add
add
incl
popa
mov
sub
addl
push
push
push
push
push
push
push
push
call
add
lcall
add
add
ret
loope
stc
in
popl
stc
lahf
add
add
push
arpl
addb
filds
sahf
sub
cld
mov
ja
add
add
data16
xchg
mov
pop
lret
gs
add
mov
add
push
in
mov
push
clc
add
lods
lods
push
add
imul
aad
ljmp
mov
sub
push
push
push
call
out
add
in
push
add
push
pop
mov
andl
movsl
mov
out
out
mov
call
cmc
je
add
scas
add
loope
decl
call
xchg
add
add
in
negb
pop
jb
mov
add
add
lcall
loop
push
test
incl
call
push
add
sub
pop
mov
push
sub
dec
sub
not
pop
pushl
push
push
push
push
push
call
lret
sarl
incl
mov
je
add
test
decl
add
push
stc
test
in
add
out
mov
add
stos
push
add
push
int
mov
int3
je
aad
cld
add
mov
ror
cmc
xlat
push
mov
test
mov
fsts
push
add
mov
incl
add
aam
add
in
mov
sub
push
push
lea
shr
pop
call
push
rol
shr
pop
cmpl
jne
push
push
push
call
add
lcall
into
add
popf
mov
xchg
mov
incl
fdivrp
jnp
pusha
les
int3
jmp
int
add
mov
mov
xchg
add
iret
add
jb
add
mov
push
mov
add
jmp
incl
shl
mov
cli
imul
incl
lcall
imul
push
push
push
push
push
push
call
je
pop
jb
pushl
add
sti
add
add
loopne
gs
call
sahf
in
add
pop
mov
ljmp
shll
incl
movl
lcall
add
add
push
pushl
dec
add
pop
mov
in
fdivr
lcall
not
ror
add
pop
pop
push
lea
pop
pop
push
sub
xor
pop
leave
push
shl
sub
sub
pop
ret
push
dec
pop
push
push
dec
pop
mov
add
push
push
push
push
push
push
push
push
call
cwtl
scas
add
push
incl
add
nop
popf
add
test
imul
out
add
mov
jmp
add
add
add
add
int
mov
pop
add
mov
incl
ja
add
add
cli
jns
add
mov
call
add
xchg
add
jmp
jbe
add
lret
jmp
lods
rorl
push
push
inc
sub
sub
pop
push
push
lea
pop
push
push
push
call
add
pop
add
in
add
add
fildl
idivl
add
mov
stos
in
cmpsb
add
add
insb
jae
fsubs
loop
add
sarb
push
loopne
add
cmpsb
mov
stos
xchg
push
add
arpl
shlb
mov
flds
pop
add
loop
add
incl
add
clc
add
hlt
movl
push
push
push
push
push
push
push
call
add
add
add
sahf
add
jp
ljmp
sti
mov
lcall
scas
outsl
add
add
fdivr
jo
faddl
add
mov
add
out
enter
in
cmc
jns
test
pop
lea
push
test
decl
push
call
push
push
push
push
push
push
push
push
push
push
call
add
sahf
lret
mov
sbb
pop
cmpsb
sar
incl
push
lea
addl
add
cli
add
pop
cwtl
add
jmp
lcall
icebp
in
rolb
gs
jmp
aam
jnp
add
incl
add
add
add
jmp
rcll
fiaddl
cwtl
out
fstpl
incl
call
subl
push
push
push
push
call
fs
lcall
add
push
pop
incl
push
mov
lret
popa
mov
incl
test
outsl
fdivr
push
popf
mov
shrl
add
lahf
fwait
cwtl
add
jmp
push
add
pushl
std
lret
add
incb
mov
cld
popa
add
mov
mov
sub
cmpl
jne
push
lea
dec
pop
pop
pop
push
push
push
push
push
push
push
call
imulb
push
adcb
xchg
mov
add
ljmp
in
jno
pushl
enter
stc
test
jmp
add
sub
add
data16
xchg
pop
decl
ja
movsl
pop
fsin
add
jmp
ljmp
out
mov
aam
mov
hlt
insb
add
decl
pop
pop
push
shr
lea
sub
rol
pop
leave
ret
push
inc
not
pop
push
push
push
push
push
push
push
call
push
add
add
add
popf
in
fwait
roll
add
xchg
xchg
lods
xchg
lods
add
fisubrs
add
xchg
cli
lret
add
pop
sti
push
test
mov
add
push
jae
ja
add
lock
incl
mov
incl
add
add
fiadds
jbe
les
pop
mov
sub
mov
push
push
call
ja
add
mov
mov
ljmp
pushl
std
add
add
rolb
add
mov
mov
jae
cli
movsb
add
mov
cmpb
add
out
push
jns
in
pushf
in
add
incl
push
add
add
incl
mov
lods
fsubl
mov
sub
add
push
call
pop
out
repnz
add
add
add
movsl
add
cltd
add
out
lods
xchg
jno
push
add
outsl
pop
incl
mov
xchg
add
filds
jmp
rolb
ret
outsl
fiadds
cld
pop
iret
incl
mov
lahf
xchg
incl
fnstsw
aam
mov
xlat
add
jb
add
fstp
mov
incl
call
push
lea
dec
pop
push
push
push
push
xor
lea
push
xor
add
dec
sub
add
sub
shr
not
pop
dec
add
pop
push
push
push
push
push
call
mov
fadds
fists
pop
cmc
incl
add
data16
add
add
mov
add
in
add
lods
jae
xchg
push
movl
add
mov
jge
pop
add
add
mov
add
nop
cmpsl
add
icebp
in
addb
popa
bound
add
sar
sti
add
call
jne
push
lea
pop
call
push
rol
sub
sub
pop
call
push
push
shr
push
or
inc
add
not
lea
sub
shl
pop
shr
add
shr
inc
pop
pushl
push
ror
ror
pop
call
call
mov
push
push
call
fidivrs
jmp
add
inc
add
add
scas
add
call
add
fldl
scas
in
insb
iret
xchg
jb
push
add
int
add
pop
notl
in
mov
xchg
add
incl
data16
loop
roll
lds
rclb
jle
mov
loope
leave
je
cmpsb
mov
mov
add
in
hlt
decl
add
loope
pop
mov
push
push
call
add
int
add
js
mov
xchg
add
jnp
lret
addb
mov
jmp
jnp
repnz
enter
push
fwait
repnz
mov
loope
decl
mov
clc
mov
imul
mov
add
movsb
fildl
pop
pop
jmp
add
add
and
mov
sub
shr
add
push
ror
sub
shr
pop
mov
push
lea
pop
mov
push
inc
shr
pop
add
movzwl
add
push
shr
add
rol
pop
test
jne
mov
push
push
call
mov
in
add
add
jecxz
mov
add
xchg
loopne
pushl
xlat
add
add
pop
rolb
lcall
xchg
xorl
add
add
lahf
xlat
incl
idiv
incl
incl
xchg
add
leave
add
mov
add
push
call
add
popl
jnp
add
add
fstpt
test
jns
dec
mov
sub
movl
push
push
push
push
push
push
push
call
jecxz
cmpsl
jne
mov
incl
ljmp
add
cmpsl
fisubrl
lods
add
mov
pushf
les
jp
rolb
lds
mov
add
mov
pop
mov
ja
ja
jp
add
add
ljmp
add
add
loopne
mov
push
add
call
in
addr16
add
jns
add
jmp
push
shl
pop
mov
mov
push
push
push
push
call
xchg
add
sar
mov
add
mov
add
push
add
incl
mov
js
jne
js
incl
fs
cld
add
add
add
pushl
popf
stos
xchg
pushf
add
incl
hlt
int3
cli
jns
int
add
jmp
in
in
sub
jne
mov
push
push
push
push
call
xchg
pop
add
push
jmp
mov
loop
add
add
add
cmpsl
add
shl
jb
push
decl
arpl
cmpsb
mov
sar
add
xchg
xlat
add
pop
rolb
incl
xchg
stos
incl
add
mov
iret
popf
gs
xchg
imul
incl
xchg
mov
mov
sub
movl
jmp
mov
push
push
call
cld
add
lods
scas
xchg
pop
add
add
jns
add
pop
incl
repnz
ljmp
ja
test
mov
addb
xorl
roll
test
xchg
pop
fldt
add
mov
add
add
cmpb
incl
scas
add
roll
add
incl
cmpsl
add
mov
sub
mov
push
push
push
push
push
push
push
call
in
lcall
add
repnz
mov
xchg
add
add
jmp
add
mov
xchg
testb
call
incl
vcmppd
mov
incl
add
jp
add
pusha
pushl
mov
decl
rcrb
incl
push
mov
add
ret
add
cli
decl
sub
jne
push
shr
add
pop
mov
movl
jmp
push
shr
shl
rol
pop
mov
mov
cmp
jne
push
rol
sub
pop
mov
movl
push
sub
inc
dec
pop
jmp
push
xor
inc
pop
mov
cmpw
jne
mov
push
push
push
push
push
push
push
call
add
mov
int3
xchg
call
pusha
std
fdiv
mov
add
add
add
pushl
call
call
call
add
add
out
out
fldenv
nop
add
add
orl
incl
cld
cli
jbe
add
pushf
inc
cmpsl
aad
mov
push
add
movsl
leave
mov
sub
movl
push
call
data16
pushl
movb
push
add
call
add
mov
adcb
test
push
mov
incl
mov
push
push
incl
int3
add
call
pushl
add
fcmovne
add
mov
add
imul
incl
xchg
mov
clc
add
xchg
ret
pop
lcall
decl
jmp
pushl
push
rol
xor
sub
pop
pop
push
inc
rol
pop
mov
mov
mov
push
push
lea
sub
sub
push
or
not
add
inc
rol
sub
add
sub
shr
inc
pop
pop
push
shr
pop
push
call
push
lea
sub
pop
cmpl
je
push
push
xor
xor
push
sub
add
ror
sub
inc
dec
add
pop
shl
pop
push
push
push
push
call
adcb
add
add
pushf
lahf
add
jmp
push
arpl
lcall
mov
jno
filds
add
add
clc
mov
add
jmp
aad
call
push
add
mov
lcall
jle
out
movsb
add
pop
incl
jb
add
std
js
insb
add
mov
in
in
push
call
cmpl
je
push
push
add
xor
push
sub
add
rol
sub
xor
sub
rol
add
pop
xor
shr
inc
pop
push
xor
rol
sub
pop
push
push
push
push
push
call
jns
add
add
fiadds
sar
pop
popa
add
push
add
add
add
push
push
xchg
add
add
mov
incl
pop
sar
incl
jmp
lahf
add
mov
add
xchg
add
fstpl
push
add
popf
out
push
cld
jmp
cmc
jecxz
add
into
into
jbe
add
xchg
mov
sub
call
cmpl
je
push
push
push
and
add
dec
rol
lea
sub
add
pop
shr
shl
pop
push
dec
ror
shr
xor
pop
push
call
cmpl
je
push
push
add
xor
not
push
or
not
add
sub
shr
pop
rol
pop
push
inc
shl
pop
push
push
shl
add
not
shr
pop
call
push
push
push
push
push
call
nop
rolb
lcall
icebp
add
jecxz
movsl
stos
add
push
movsl
add
xchg
incl
outsl
incl
js
incl
lahf
outsl
mov
hlt
add
jl
jl
add
mov
incl
in
xchg
mov
pushl
mov
mov
pop
add
in
incl
imul
mov
mov
lcall
incl
incl
leave
ret
pop
pop
add
push
push
sub
push
push
pop
add
shr
sub
sub
lea
pop
xor
shr
pop
push
push
push
call
std
fst
pusha
les
iret
mov
loope
bound
idivl
lahf
mov
test
add
add
scas
pop
add
push
add
call
add
cmpsb
insb
mov
add
mov
ljmp
subl
incl
add
jne
mov
mov
add
repnz
outsl
mov
sub
call
push
push
push
push
push
push
push
call
add
add
rolb
xchg
ror
arpl
repnz
stos
stc
andl
add
fldl2e
movsb
add
jge
add
mov
add
jl
ret
mov
imul
roll
imul
repnz
mov
iret
aad
pop
add
incl
add
add
jno
pop
imul
mov
sub
cmpl
je
push
push
dec
push
or
not
add
not
inc
shl
sub
add
xor
pop
add
pop
push
push
push
call
imul
movsl
add
insb
addl
add
add
add
xor
sahf
add
add
insb
add
pop
add
add
add
in
xlat
popf
mov
add
lret
jbe
add
decl
test
add
ljmp
mov
pop
add
incl
mov
fisttpll
lock
add
loopne
test
out
incl
lds
add
cmpl
je
push
push
inc
inc
rol
push
sub
add
add
lea
sub
shr
lea
shr
pop
sub
lea
shr
pop
push
dec
sub
shl
pop
push
call
cmpl
je
push
push
xor
push
or
inc
add
xor
sub
shl
add
lea
shl
pop
shl
not
pop
push
push
push
push
push
push
push
push
call
lahf
cltd
add
add
lods
loopne
add
lods
add
stos
add
in
mov
std
icebp
add
in
add
lcall
pop
sarl
pusha
jp
add
xchg
arpl
mov
add
cli
add
imul
jmp
add
add
leavew
add
add
loop
jp
ret
fldenv
decl
call
test
add
cmpl
je
push
push
inc
push
or
not
add
sub
sub
shl
pop
add
rol
pop
push
push
push
call
insb
jmp
add
hlt
movb
add
xchg
rolb
add
add
push
faddp
add
call
leave
cwtl
xchg
add
pushl
filds
sti
mull
jge
jmp
jl
add
stc
jmp
add
xchg
cwtl
add
pusha
mov
add
in
xchg
enter
jae
decl
call
jmp
dec
sbb
push
push
call
cwtl
js
add
xchg
xchg
ljmp
cmc
cmp
add
add
test
inc
flds
cwtl
add
push
add
add
mov
mov
fcom
rcll
jno
loop
add
lahf
insb
decl
arpl
movsb
stc
bnd
scas
xchg
mov
mov
mov
sub
cmpl
je
push
push
add
rol
sub
push
or
inc
add
shr
xor
shr
sub
sub
shr
add
sub
lea
pop
sub
sub
inc
add
pop
push
lea
lea
rol
pop
push
push
push
push
push
push
push
push
call
add
push
add
lds
xchg
cmpsb
ljmp
add
add
xchg
out
mov
lods
add
mov
test
sarl
add
add
push
mov
push
push
add
mov
add
add
add
add
loope
add
rolb
xchg
into
mov
ja
push
add
out
inc
add
call
push
push
push
push
push
push
push
push
push
call
add
mov
add
push
fsts
add
icebp
mov
add
call
add
mov
test
stos
incl
fcoms
add
mov
fsubr
popf
push
out
cwtl
out
pop
bound
mov
in
add
jmp
add
add
add
in
clc
pop
add
incl
add
incl
incl
les
je
push
push
dec
push
sub
add
shl
add
sub
lea
sub
not
inc
pop
add
shl
pop
push
add
rol
pop
push
push
push
push
push
push
call
cwtl
scas
jno
out
mov
push
mov
lock
mov
add
addb
jo
out
addb
cli
rolb
add
js
out
mov
mov
fldenv
cltd
incl
jl
rol
add
add
pusha
xchg
cmpsb
xchg
jp
ja
nop
ret
call
mov
jns
mov
add
add
out
out
add
jmp
mov
add
leave
xchg
lcall
call
in
add
push
call
incl
lret
mov
xchg
lret
add
imul
add
lret
pushf
add
pop
add
js
pop
add
in
add
enter
add
add
add
cld
add
int3
fs
out
mov
pop
gs
add
mov
add
nop
mov
call
add
jmp
add
add
call
add
in
clc
cmpl
jne
push
shl
pop
mov
push
add
rol
add
shr
pop
movl
push
push
push
call
icebp
mov
push
mov
mov
jnp
enter
addl
mov
lea
lcall
pop
add
repnz
add
push
lret
add
int3
jge
add
add
jne
mov
xchg
lds
popf
clc
pop
data16
leave
in
lahf
xchg
fldl2e
mov
test
xchg
mov
call
add
lock
jmp
push
push
call
std
add
add
mov
add
lret
aam
ficoms
mov
add
mov
out
int
call
in
imul
add
dec
add
mov
add
subb
pop
add
incl
lods
ljmp
xchg
stos
add
mov
incl
add
decl
add
decl
pushl
rcrb
pop
push
push
push
call
in
shr
leave
ja
jl
pop
mov
pop
jne
js
mov
jle
lods
add
add
mov
pop
pop
add
jns
add
cli
add
add
add
add
add
add
add
push
add
notb
xchg
js
pushl
lods
roll
xchg
push
incl
push
jp
orb
jno
add
add
pop
pop
push
push
push
push
push
push
push
call
ljmp
loope
add
pop
xchg
push
add
add
std
sar
cli
stc
add
push
add
mov
pop
cmpsl
pushl
add
xchg
incl
push
in
add
add
gs
lret
out
lret
cmpsb
pushf
add
incl
leave
add
cwtl
testb
mov
sub
leave
push
add
ror
not
pop
ret
push
push
call
xlat
lcall
hlt
add
call
add
lds
mov
mov
jnp
jmp
add
movsl
stos
call
mov
add
enter
add
sahf
add
mov
arpl
xchg
call
jecxz
add
addl
lcall
jno
mov
jp
cltd
mov
sub
mov
push
push
push
push
call
gs
xlat
push
mov
shl
movsb
lods
xchg
mov
lods
je
std
jno
add
mov
arpl
add
test
lcall
jne
ljmp
mov
hlt
jo
iret
add
add
jmp
push
incl
mov
scas
pop
lods
add
pusha
stos
add
pop
mov
sub
add
cmpl
jne
int3
push
push
dec
inc
sub
lea
push
or
inc
add
dec
sub
dec
pop
rol
sub
pop
push
push
call
add
add
fs
add
mov
test
in
add
add
incl
sar
inc
test
pop
subl
test
gs
jl
ret
jae
add
roll
xlat
add
cltd
add
pop
pushl
ljmp
bound
push
sti
push
add
mov
add
pushl
push
shr
not
pop
call
push
lea
sub
pop
push
push
push
push
call
clc
incl
incl
mov
call
outsl
movb
mov
add
mov
mov
mov
out
add
aad
sti
inc
cltd
aam
cltd
add
add
int
push
popf
incl
add
mov
enter
iret
jno
in
add
sub
call
push
push
push
push
push
call
mov
faddl
fsub
fdivr
call
mov
push
jns
rol
cwtl
arpl
test
mov
add
xchg
add
xchg
add
add
call
incl
imul
mov
xchg
in
add
fnsave
push
call
int3
cmpsl
add
shr
add
mov
add
ret
repnz
sub
jmp
cmpl
jne
push
push
push
call
out
add
in
jp
add
add
incl
test
add
ja
insb
add
repnz
les
incl
lods
add
fimuls
mov
xchg
lret
push
mov
add
out
sbb
cli
fmuls
add
push
jnp
lcall
movsl
add
add
incb
add
ljmp
push
add
ret
jmp
cmpl
je
push
push
push
push
push
push
push
push
call
add
mov
in
addr16
add
ret
leave
add
jnp
add
arpl
incl
test
mov
call
into
lea
pusha
out
pusha
mov
jp
push
test
stc
dec
out
icebp
mov
add
scas
xlat
jbe
movsb
add
add
loop
push
add
test
in
mov
in
fists
repnz
lea
in
sahf
adcb
add
sub
cmpl
jne
push
push
sub
inc
shl
push
and
add
sub
rol
shr
sub
sub
not
shr
add
pop
shl
pop
pushl
push
push
push
push
push
call
cmpb
enter
pop
push
jns
popl
add
jne
add
fadds
push
add
out
add
add
call
test
add
loopne
lcall
fucom
add
adc
mov
jmp
add
mov
aam
int3
outsl
mov
add
pop
add
imul
out
add
jmp
incl
das
add
push
call
add
test
add
add
add
add
insb
pop
add
out
popf
push
in
mov
filds
mov
lock
add
mov
fsubr
push
add
push
fwait
mov
fisubrl
add
fiadds
mov
pop
add
add
int3
add
add
fs
mov
jmp
mov
add
call
incl
push
ror
sub
pop
push
push
push
shl
shr
ror
push
or
not
add
sub
add
not
lea
sub
pop
lea
pop
pushl
push
shl
lea
xor
xor
pop
call
push
add
not
sub
pop
push
push
lea
pop
call
int3
leave
push
lea
sub
lea
pop
add
push
push
push
call
mov
pop
add
lods
add
call
call
add
add
incl
jne
out
jnp
incl
add
int
add
add
dec
add
jmp
add
addl
jns
incl
mov
add
add
add
add
add
arpl
add
add
pop
lea
jle
lahf
add
test
fdiv
mov
sub
pop
push
push
push
call
scas
jp
pop
add
lcall
pop
add
push
add
lds
add
incl
add
add
jo
xchg
lcall
add
mov
test
icebp
sar
incl
push
add
dec
add
repnz
loope
mov
pop
ror
add
mov
pop
push
jmp
lock
lcall
incl
aad
add
add
arpl
je
out
incl
lcall
not
ror
lea
rol
pop
pop
pop
push
add
add
pop
leave
add
ret
push
push
push
push
push
call
add
xchg
add
xchg
add
mov
xchg
mov
into
ljmp
mov
addb
mov
add
arpl
xchg
mov
mov
addl
add
incl
iret
test
jns
add
xchg
push
pop
jo
push
mov
mov
sub
jmp
push
push
push
push
push
push
push
push
push
call
mov
cmp
testb
lcall
xchg
lahf
push
loopne
roll
fadds
jmp
pop
cltd
insb
fstpt
incl
add
incl
shlb
mov
pusha
ljmp
mov
call
ljmp
mov
fadds
mov
data16
add
sub
cmpl
jne
push
push
lea
not
xor
push
push
pop
add
dec
sub
sub
rol
shr
add
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
mov
mov
mov
sahf
add
pop
add
addl
pusha
lds
add
lds
add
lds
lock
jmp
pushf
add
loope
push
loopne
lcall
ljmp
add
mov
rcl
pop
mov
fsubrp
jp
mov
jno
xchg
add
decl
in
fdivr
pushl
call
push
push
push
call
mov
xchg
incl
stos
push
scas
jno
jmp
ljmp
incl
add
mov
add
call
data16
ja
push
incl
mov
add
xchg
lcall
enter
xchg
xlat
add
inc
leave
jge
mov
popf
add
in
jno
addl
stos
add
add
add
mov
sub
push
push
sub
add
xor
xor
pop
call
jmp
push
push
push
push
push
push
push
push
push
call
add
cli
fisubrs
add
test
movb
in
add
adcb
jmp
out
add
scas
flds
jb
mov
in
jns
add
add
out
mov
fdivrl
stos
adcl
into
popa
jp
mov
mov
lret
incl
mov
xchg
mov
mov
add
cmc
jo
incl
mov
sub
cmpl
jne
push
push
push
push
push
push
push
push
push
call
add
add
add
add
mov
incl
leave
imul
ljmp
loop
add
jb
movsb
nop
out
mov
incl
add
add
aad
add
jmp
add
decl
pushf
nop
jecxz
add
add
imul
out
lahf
ret
mov
sub
mov
push
push
push
push
push
push
call
add
pop
push
jae
popl
add
add
add
call
std
add
bound
incl
mov
pop
add
add
add
loopne
incl
fcom
int
jmp
add
pushl
popa
imul
add
incl
mov
push
push
push
push
push
push
push
push
call
add
lcall
jmp
cltd
fcmovbe
sti
push
lds
add
mov
rorl
test
mov
mov
push
xlat
movsb
icebp
roll
jle
xchg
lods
lcall
fstl
add
incl
add
out
aad
add
add
push
jne
mov
xchg
subl
fcoml
and
jge
push
shr
rol
push
sub
add
shr
ror
add
sub
pop
sub
not
ror
pop
pushl
push
sub
shr
dec
ror
pop
call
push
pop
call
push
push
add
sub
push
xor
add
rol
sub
add
sub
sub
ror
pop
shl
pop
push
push
push
push
push
push
call
cmc
add
mov
add
pop
add
add
call
lcall
add
add
incl
add
push
cli
idiv
jmp
stos
fldcw
incl
add
xchg
cli
cltd
add
add
in
call
mov
jns
divb
cmpsl
lret
incl
mov
lods
addl
insb
add
add
jae
incl
or
std
add
call
push
push
inc
add
push
xor
add
shr
inc
not
sub
xor
pop
pop
push
push
call
stc
aad
adcl
jmp
testb
ret
outsl
xchg
incl
in
add
in
mov
out
add
ja
add
add
add
add
add
mov
jmp
icebp
filds
lahf
shl
clc
clc
test
icebp
mov
sub
pushl
push
push
push
call
pop
jmp
in
aam
mov
lret
lcall
movb
jae
loop
in
jno
add
add
in
add
add
lock
mov
jecxz
incl
add
leave
push
add
add
lret
mul
mov
add
fwait
in
scas
roll
sarb
shlb
add
add
arpl
add
jge
incl
call
push
push
push
push
push
call
add
push
addr16
push
add
mov
mov
jae
cmpsl
loopne
call
pop
lret
scas
xchg
in
jo
adc
add
mov
jnp
fwait
clc
add
xchg
in
decl
add
mov
int
add
lcall
add
mov
add
mov
sub
call
push
push
rol
push
or
not
add
inc
rol
sub
add
pop
not
ror
pop
push
push
push
push
call
ret
add
push
movb
add
mov
push
ljmp
test
test
add
push
ficomps
icebp
mov
cmp
jp
add
jmp
pusha
add
lea
out
mov
incl
aam
jmp
pop
mov
out
add
addb
add
enter
xchg
add
fistpl
dec
int
mov
incl
or
add
push
push
push
push
push
call
add
add
add
mov
insb
incl
int
xchg
call
jmp
mov
std
add
mov
mov
add
add
xchg
testb
shlb
decl
incl
add
test
add
add
add
add
mov
pop
rcl
rcll
xchg
add
in
add
add
shr
pop
call
push
push
xor
push
xor
add
dec
shr
sub
sub
shl
pop
sub
pop
pushl
push
push
push
push
push
push
call
fists
popa
add
scas
add
add
incl
push
add
out
test
xchg
incl
out
mul
push
add
negl
mov
lock
addr16
lcall
stc
cld
jnp
push
test
add
add
jmp
jp
pop
add
add
add
lock
dec
add
mov
sub
call
call
push
push
sub
shr
push
or
inc
add
ror
rol
sub
pop
shr
add
pop
push
dec
add
pop
pushl
call
push
lea
dec
rol
dec
pop
call
push
push
shl
shl
xor
add
push
or
inc
add
inc
xor
shl
sub
shl
add
pop
ror
xor
shl
sub
pop
push
dec
not
pop
pushl
push
push
push
push
push
push
push
push
push
call
js
xchg
jae
mov
add
scas
add
pushl
pop
add
cmpsl
add
xchg
lcall
add
jne
add
ljmp
arpl
enter
add
shlb
add
add
pop
mov
mov
loop
add
lret
lods
add
jmp
jo
mov
add
add
add
sub
call
push
push
push
push
push
push
push
push
call
xlat
pop
ljmp
push
pop
lret
test
insb
addb
int3
fcom
mov
incl
imul
ljmp
add
add
ret
mov
ficoms
add
add
add
je
add
into
mov
add
pushf
add
jl
mov
mov
in
add
decl
call
push
push
add
add
push
sub
add
sub
dec
pop
not
shl
pop
pushl
push
push
push
push
push
push
push
call
lcall
movsb
add
add
call
mov
add
add
iret
add
mov
std
js
add
jl
mov
jmp
jmp
imul
fs
std
shrb
out
lahf
xchg
roll
jp
add
jno
js
add
imul
mov
sub
call
push
pop
call
push
push
dec
push
or
inc
add
xor
shl
sub
not
pop
shl
not
pop
push
pop
pushl
call
lea
push
dec
sub
pop
push
call
push
push
shl
add
push
push
pop
add
xor
sub
add
dec
dec
pop
add
pop
push
not
pop
pushl
push
shr
rol
not
pop
call
push
push
not
pop
call
push
push
shr
dec
dec
dec
push
or
not
add
sub
rol
shl
add
sub
sub
pop
xor
add
pop
push
push
push
push
call
push
push
repnz
fs
pushl
push
add
add
jmp
add
cwtl
rcr
flds
add
stos
jae
add
lods
add
add
push
push
lods
rcl
rcl
cwtl
bound
add
add
lcall
jp
add
lret
stc
mov
add
jmp
pushf
add
add
add
imul
mov
xlat
mov
sub
pushl
push
push
push
push
push
call
movsl
add
add
pushf
sahf
call
incl
add
push
out
imul
add
jmp
add
out
add
sarb
add
popf
shl
add
shlb
add
addb
test
test
push
js
xchg
add
xchg
sahf
sahf
lea
jge
int3
fadds
roll
add
mov
mov
sub
call
push
lea
pop
call
push
push
sub
shl
add
push
xor
add
add
sub
ror
sub
xor
shl
pop
xor
pop
push
ror
sub
shr
ror
pop
pushl
call
push
dec
lea
pop
call
push
push
add
add
not
push
push
pop
add
sub
sub
inc
xor
add
pop
rol
rol
pop
push
add
pop
pushl
call
push
not
pop
call
push
shl
sub
pop
lea
push
push
inc
push
push
pop
add
sub
shr
sub
sub
sub
xor
shr
add
pop
ror
shr
shl
pop
pushl
push
push
push
push
push
call
cld
jae
out
testb
movsl
mov
add
sti
incl
repnz
fwait
imul
cld
mov
mov
add
incl
pop
xchg
add
insb
test
in
push
into
aam
pop
into
scas
add
incl
out
lret
cltd
xchg
in
ja
sti
add
add
fcmovu
outsl
mov
lahf
idivl
mov
scas
mov
sub
call
push
call
push
push
not
lea
ror
push
sub
add
ror
add
sub
dec
sub
pop
sub
sub
ror
pop
push
xor
pop
pushl
call
call
push
push
push
push
push
push
call
cmpsb
jb
add
call
add
mov
lcall
incl
add
cltd
nop
out
add
stc
mov
test
push
mov
incl
not
data16
lret
js
call
pop
add
cmc
lret
stos
incb
add
add
jae
add
addb
pushl
pop
in
jo
push
mov
sub
mov
push
push
add
ror
push
or
inc
add
rol
sub
dec
xor
pop
dec
pop
push
push
push
push
push
push
call
les
cwtl
add
lcall
fsts
mov
lcall
loopne
incl
add
cltd
push
jge
cmc
cld
movsb
xchg
cwtl
jmp
loope
fbstp
arpl
out
mov
jb
sti
pop
add
std
in
add
incl
add
call
add
pop
addl
mov
sub
pushl
push
push
push
push
push
push
call
mov
mov
add
loopne
notl
jb
push
iret
jecxz
add
incl
sbb
mov
add
incb
pop
add
add
stos
jecxz
in
lods
add
add
pusha
pop
add
jb
mov
aad
out
add
jmp
flds
mov
movsb
add
sub
call
push
push
sub
not
pop
call
push
push
push
sub
add
not
sub
ror
dec
sub
pop
ror
not
pop
push
inc
pop
pushl
push
push
push
push
push
push
push
call
jmp
add
les
jmp
ljmp
pop
add
add
fiadds
add
jmp
addl
mov
pop
lret
mov
add
mov
fcos
inc
jmp
mov
add
ljmp
lds
faddl
xchg
add
add
add
fwait
loop
add
mov
sub
call
push
pushl
push
lea
pop
call
push
push
dec
inc
ror
push
push
pop
add
lea
shr
sub
xor
pop
lea
ror
ror
pop
push
push
push
push
push
push
push
call
stos
cmc
xchg
bound
pop
into
push
cmpsl
je
imull
jl
add
divl
push
xchg
add
mov
ljmp
add
add
jp
mov
ljmp
cli
mov
incl
mov
out
movsl
leave
add
test
jl
rcrb
fildl
mov
sub
pushl
call
push
push
dec
xor
push
or
inc
add
rol
sub
shr
pop
not
pop
push
inc
not
sub
dec
pop
push
call
push
push
xor
push
sub
add
ror
sub
shr
xor
shl
pop
sub
not
add
pop
push
push
push
push
push
push
push
push
call
mov
jmp
data16
add
add
pop
jno
enter
incl
add
pop
out
mov
add
add
add
fwait
jl
pushl
jbe
add
cwtl
mov
incl
aam
mov
mov
lods
fadds
cli
mov
mov
mov
push
add
add
mov
sub
pushl
call
mov
push
sub
sub
pop
lea
lea
push
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
iret
mov
popl
add
fnstsw
add
xchg
pop
lcall
icebp
incl
arpl
fcoml
pop
shrl
in
iret
jmp
or
call
fs
call
mov
add
add
xlat
cmpsb
add
add
stos
addl
mov
sub
push
push
push
push
push
push
push
push
push
call
ljmp
flds
sar
inc
pop
pop
stos
popl
bound
cld
nop
add
mov
out
int3
js
fisttps
lods
std
mov
add
add
add
test
add
mov
add
mov
dec
into
sarb
mov
add
add
incl
mov
sub
push
push
push
push
xor
xor
pop
push
pushl
push
ror
pop
push
push
add
dec
ror
pop
call
push
push
inc
sub
inc
push
sub
add
dec
shr
inc
sub
rol
pop
sub
pop
push
xor
dec
pop
pushl
call
push
push
push
push
push
push
call
fidivrl
stos
add
cld
cmpb
jmp
data16
js
loopne
out
clc
push
add
add
mov
popa
xchg
int
movsl
scas
lahf
leave
lcall
loop
jne
fdiv
popa
cmp
call
add
incl
add
add
loop
mov
sub
call
mov
pop
push
push
push
push
push
push
call
pushf
incl
lahf
add
call
nop
add
enter
call
add
add
cmpsb
pushf
incl
add
mov
fnop
add
add
add
add
lods
mov
addr16
add
roll
push
add
roll
mov
push
add
add
sub
dec
jne
push
push
call
mov
movsb
hlt
xchg
fisttpll
fcomps
jmp
popf
cmpsb
jle
add
sahf
mov
mov
add
incl
testb
fadds
call
add
cmc
add
aad
fnstsw
data16
cmc
pushl
add
test
loopne
add
clc
xchg
mov
sub
jmp
call
push
ror
shr
pop
jmp
call
push
push
lea
sub
push
push
pop
add
lea
rol
shl
sub
sub
not
pop
sub
pop
push
push
push
push
call
imul
stc
add
scas
add
shl
add
ljmp
popf
fldt
out
add
add
jmp
push
pop
ror
rorb
fildl
add
pop
stos
push
ja
add
add
add
add
mov
scas
arpl
decl
jns
cwtl
decl
pushl
call
push
add
add
sub
sub
pop
push
push
shl
pop
call
push
add
pop
mov
lea
push
push
not
add
shr
push
or
not
add
add
sub
sub
xor
sub
pop
inc
not
shl
add
pop
push
push
push
push
push
push
call
add
aad
cld
add
loopne
add
add
mov
add
add
inc
bound
mov
add
test
pushf
jbe
sahf
mulb
add
add
jmp
aad
mov
incl
add
add
add
call
push
jp
add
push
pushf
mov
incl
pushl
call
lea
push
push
push
call
push
add
ljmp
js
jecxz
icebp
add
scas
int3
add
je
pop
icebp
incl
push
loope
mov
cmpsl
test
lds
sar
call
add
nop
shrl
push
movsb
in
popa
test
mov
lahf
add
idivb
sti
pop
mov
imul
pop
leave
popa
cwtl
rcl
pushl
mov
sub
push
push
push
xor
pop
push
push
push
push
push
push
push
push
push
push
call
ret
add
add
jp
call
jecxz
je
xchg
out
add
lahf
xchg
negb
add
lea
incl
add
add
lret
mov
add
shll
add
inc
jno
pushf
add
pushl
lcall
stos
lock
add
ljmp
xchg
jge
testb
add
xlat
leave
sahf
lcall
cltd
jo
rorb
pushl
push
push
rol
not
push
and
add
inc
shl
sub
rol
add
pop
lea
not
pop
push
dec
pop
push
call
push
push
xor
push
xor
add
xor
sub
sub
sub
pop
dec
add
pop
push
push
push
push
push
push
push
push
push
call
lret
out
clc
pop
jmp
lcall
pop
add
add
lock
add
mov
addl
incl
je
test
add
sbbb
add
pop
add
pushf
add
js
loope
out
add
pop
mov
rolb
lea
pop
add
add
add
incl
push
xchg
lods
push
push
add
stos
call
test
push
add
pushl
call
push
push
rol
shr
lea
pop
call
push
push
sub
not
push
sub
add
lea
sub
sub
pop
xor
pop
pushl
push
push
push
push
push
call
iret
incb
movsb
cmpsl
loop
mov
add
fdivrl
add
incb
stos
push
xor
fidivrs
in
lcall
mov
pop
fildl
stos
leave
push
cwtl
lods
aad
add
jl
incl
add
fnstsw
aad
cmc
int3
mov
sar
jmp
add
jo
iret
add
incl
xchg
jno
out
ja
add
pop
add
mov
sub
call
push
add
add
pop
call
push
call
pop
cmpsl
add
xchg
add
jb
shr
popa
pop
fsubr
cld
mov
add
lods
add
mov
jle
mov
filds
aam
xchg
push
xlat
faddl
add
lcall
jbe
incl
incl
rolb
scas
lcall
lock
bnd
add
xchg
add
jmp
push
add
pop
pushl
mov
push
push
call
jb
add
mov
jmp
mov
testb
aad
stc
lock
jbe
pusha
lods
add
je
test
push
push
enter
movsl
stos
stos
test
pop
pusha
add
shll
loopne
xchg
xchg
call
add
mov
incl
ret
mov
mov
jmp
jmp
xchg
mov
into
push
lea
pop
rclb
sub
jmp
push
push
sub
shl
push
or
not
add
ror
xor
sub
sub
xor
add
dec
add
pop
ror
shl
pop
push
push
push
push
push
push
push
call
movsb
xchg
mov
pushl
push
scas
pop
les
shll
add
clc
add
mov
in
add
js
repnz
jnp
mov
add
add
add
xchg
out
jnp
incl
data16
mov
push
xchg
bound
xchg
jl
clc
cmp
incl
incl
lock
incl
add
outsl
lret
decl
pushl
call
push
push
add
ror
pop
call
push
push
add
push
and
add
rol
lea
dec
sub
inc
pop
pop
pushl
push
push
call
flds
cmc
add
test
lods
add
mov
cmc
add
add
les
xchg
cmpsb
fistpl
add
add
add
in
cli
lret
add
add
rol
push
push
xchg
pushl
leave
mov
push
add
ja
incl
mov
add
mov
add
decl
call
push
sub
add
add
pop
push
call
push
sub
add
shr
shl
pop
leave
push
sub
pop
add
pop
push
not
pop
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
mov
incl
testl
add
movsl
add
xchg
add
fwait
test
popl
mov
imul
cmc
add
aam
decl
add
in
xchg
cltd
incl
stos
add
add
mov
in
in
mov
add
call
fs
mov
sub
pop
push
sub
shr
add
pop
pop
push
push
push
push
push
push
push
call
arpl
push
add
lcall
incl
add
mov
push
incl
add
icebp
add
fildl
rcrl
decl
ljmp
test
pop
add
incl
add
int
xchg
add
notb
incl
add
fnstsw
pushl
call
sub
leave
add
push
ror
pop
ret
leave
push
shl
sub
pop
ret
push
ror
add
pop
push
mov
push
push
push
push
push
push
push
push
push
call
movsl
fucomp
push
lcall
xchg
cmpl
fsubs
add
cwtl
mov
fldenv
pop
add
addl
rcrl
cld
cld
test
incl
fadd
add
incl
add
ja
ljmp
mov
jmp
jmp
add
enter
add
repnz
in
mov
add
jp
pop
ja
decl
incl
test
add
add
add
xor
pop
jmp
mov
and
push
lea
sub
inc
pop
xor
xor
push
pop
add
push
pop
xor
dec
push
push
push
push
push
push
push
push
push
call
add
sahf
add
vpunpcklbw
imul
pop
add
add
jmp
in
movsb
vpcmpeqd
popf
add
add
add
mov
inc
les
incl
lea
sarl
mov
add
xchg
stc
inc
cmc
add
add
mov
add
incl
cld
add
lock
sub
sub
push
push
push
push
push
push
call
add
push
incl
add
add
icebp
jge
in
jp
hlt
stc
faddp
loop
cwtl
sar
decl
shlb
pop
push
mov
lcall
push
in
call
mov
mov
add
movsb
aam
scas
cmc
scas
add
add
arpl
add
push
lods
add
mov
fisubrl
jns
decl
jmp
push
sub
xor
add
pop
sub
pushl
push
call
add
cld
in
mov
lcall
loopne
mov
push
mov
add
nop
rcrl
add
jmp
add
mov
incl
add
mov
lret
mov
xchg
call
jl
xchg
cli
mov
arpl
insb
push
mov
mov
addr16
lcall
call
sub
pop
push
push
push
push
push
push
push
push
call
fxch
add
call
lods
xchg
cmpsb
push
scas
xchg
add
jmp
mov
add
mov
add
mov
popf
pop
add
add
add
mov
les
lcall
mov
xlat
cmpsl
jecxz
jmp
fdivr
filds
vmovntdq
add
aam
jbe
incl
incl
add
out
pop
cmp
jne
mov
push
call
incl
jnp
data16
clc
lcall
push
jecxz
loopne
lcall
jmp
add
inc
add
mov
xchg
incl
aad
push
test
jnp
mov
popf
mov
out
movsb
outsl
clc
xorl
jnp
popf
mov
incl
rolb
decl
add
shlb
add
lea
sub
mov
push
inc
pop
shr
push
push
push
push
push
push
push
call
jl
std
mov
cld
xchg
mov
push
add
clc
add
je
andb
incl
mov
mov
pushl
add
push
add
lahf
out
cli
mov
add
test
push
xchg
sar
incl
add
rcrb
push
clc
pop
nop
enter
leave
cltd
add
push
add
gs
decl
add
push
add
not
dec
pop
sub
pushl
pop
push
sub
xor
pop
shr
push
push
call
add
jmp
incl
lock
push
add
push
add
add
or
pop
lcall
cmp
lcall
dec
icebp
cmpsl
add
insb
mov
add
cmc
pop
jecxz
jmp
pushl
add
incl
mov
jmp
std
lock
push
incl
incl
fwait
mov
into
xchg
fisubrl
in
hlt
and
push
xor
sub
ror
pop
sub
push
sub
inc
inc
pop
cmp
jne
push
pop
leave
push
inc
dec
pop
ret
push
mov
push
push
push
push
push
push
push
push
push
call
lods
fidivl
insb
add
add
incl
imul
push
add
shll
fwait
jno
add
add
add
incl
test
data16
add
xchg
add
mov
pushl
add
add
add
pop
add
add
mov
push
add
add
add
rcr
fstps
test
add
imul
jmp
pushl
incl
incl
push
push
push
push
push
call
outsl
jno
push
fwait
add
incl
mov
lcall
fiadds
hlt
pop
add
ljmp
ror
les
in
pop
mov
pop
add
in
rorb
add
sti
loop
jo
add
add
fildl
add
int
add
lds
incl
push
loop
lds
call
jo
add
call
push
push
push
call
test
pop
push
cld
movsl
ljmp
add
in
mov
fidivrs
push
pop
pop
call
add
incl
rolb
roll
add
cli
fbld
lods
add
filds
rcl
add
incl
add
out
add
pop
pop
push
iret
xchg
push
leave
stos
je
ljmp
add
mov
lea
push
push
push
call
pop
add
je
add
xchg
add
add
popf
add
in
repnz
std
mov
incl
testl
add
push
mov
add
fldl
loop
jne
imul
mov
test
pop
jmp
in
cli
jbe
pop
xlat
cmp
incl
mov
out
je
hlt
add
call
out
add
scas
push
add
pusha
pop
add
push
iret
int3
jbe
int3
add
incl
scas
lcall
mov
sub
push
push
push
call
icebp
add
mov
add
pop
loop
lcall
jnp
mov
add
jl
pop
add
push
add
incl
add
jb
add
shl
add
lcall
add
xchg
add
add
fcos
fnsave
in
lock
jecxz
add
arpl
sahf
mov
add
mov
lock
decl
add
push
push
push
push
push
push
push
push
call
add
push
je
lds
movsb
add
add
add
mov
add
xchg
pop
add
incl
add
sti
mov
add
loop
incl
mov
andb
add
jmp
testl
add
mov
call
xchg
hlt
mov
fmull
add
pop
add
push
sub
add
pop
mov
push
add
pop
add
xor
mov
push
dec
inc
add
pop
and
call
push
add
pop
add
cmp
je
add
push
push
push
push
push
push
push
push
push
call
jecxz
test
jmp
mov
push
jb
jmp
jmp
xchg
jle
jmp
sti
incl
add
add
jo
add
mov
lock
add
cmpsb
lea
add
add
pushl
jmp
jp
incl
add
icebp
jl
call
insb
xchg
add
sahf
cmpsb
add
decl
add
mov
sub
cmpl
jne
push
push
push
call
sar
incl
lea
nop
add
add
jae
ljmp
int3
incl
push
mov
add
add
add
push
push
add
jle
incl
pop
add
add
xchg
xchg
mov
add
popf
mov
add
cltd
xorb
mov
fnstcw
add
add
lea
jmp
add
xor
pop
pop
push
call
add
faddl
push
cmpsl
mov
add
lock
push
add
data16
push
popa
fildl
push
add
add
cmc
lds
cmpsl
les
cltd
add
add
add
add
lods
subl
sahf
add
add
incl
cltd
mov
add
push
add
add
add
popf
iret
add
mov
sub
pop
pop
pop
push
add
dec
pop
leave
push
lea
add
shr
pop
ret
mov
push
shl
rol
rol
pop
add
push
inc
shr
pop
push
push
push
push
push
push
push
push
push
push
call
add
addl
jmp
pop
push
loope
incl
mov
jle
in
add
xchg
mov
add
call
lahf
push
shl
add
add
add
mov
out
imul
pushf
add
add
fs
shr
gs
incl
add
cmpsl
int
add
fisttpl
incl
jmp
fcoms
sub
pop
pop
push
shr
pop
pop
push
push
push
push
push
call
add
mov
add
int
scas
add
mov
gs
add
lea
add
add
mov
jecxz
flds
xchg
xchg
jmp
push
jp
icebp
outsl
cmpsl
fwait
add
add
loop
outsl
add
leave
add
incl
mov
lcall
push
les
push
mov
int
incb
xchg
add
jge
lahf
add
mov
add
pop
pop
add
faddp
pop
mov
mov
sub
add
mov
push
call
incl
incl
push
roll
shl
stos
add
mov
jae
mov
mov
pop
insb
repnz
shlb
ljmp
push
rcll
incl
lods
negb
in
mov
cwtl
pop
cmpsb
push
test
jnp
jge
xchg
jmp
cltd
lock
test
ja
fisubl
sub
push
push
shl
inc
add
add
pop
call
xor
pop
push
rol
pop
pop
pop
pop
push
push
push
push
push
push
call
mov
mov
call
jbe
in
in
add
incl
stos
add
lret
aad
jmp
mov
je
incl
add
mov
add
add
pop
cld
add
ret
leave
nop
add
call
add
dec
xchg
add
add
in
in
push
inc
sub
dec
pop
leave
push
shr
xor
sub
pop
ret
push
sub
pop
push
mov
add
push
push
push
push
push
push
push
push
push
call
push
pop
add
lock
stc
mov
js
repnz
add
out
add
lcall
add
add
ficompl
outsl
leave
pushl
add
jmp
nop
add
incl
pop
imul
pop
into
jmp
pop
pusha
lock
mov
sub
push
push
push
push
push
push
push
push
push
push
call
movsb
add
add
push
add
add
incl
pop
mov
mov
lahf
add
add
add
incl
fs
mov
stos
incl
pop
pop
out
cmpb
mov
add
xchg
pop
jne
lock
jge
xchg
xchg
push
mov
fxch
jno
jno
mov
sub
push
push
push
push
push
push
push
push
push
call
stos
lock
call
aad
jl
int3
inc
movsb
cmpsb
add
ret
add
add
lcall
incl
add
add
add
add
out
flds
pop
gs
lods
pop
add
add
mov
xchg
fistpll
pop
bound
call
fsubrs
add
push
push
push
push
push
push
push
call
mov
fsubl
popf
in
add
mov
lret
jne
push
stc
test
flds
loopne
add
faddl
add
stos
roll
add
xchg
add
faddl
add
ja
add
stos
jns
add
loopne
mov
add
cltd
or
cmc
test
add
jbe
lcall
add
lds
add
add
decl
mov
push
pop
push
shl
shl
pop
lea
push
not
lea
pop
sub
push
add
inc
shr
pop
mov
push
push
push
push
call
add
arpl
lret
pop
mov
add
push
add
rorl
fisubs
jmp
cli
test
add
add
lods
fistl
call
nop
decl
mov
flds
fistpl
mov
in
push
add
lods
loop
mov
sub
shr
add
push
rol
pop
mov
add
push
push
call
add
add
add
incl
push
add
pushl
add
add
lock
out
xchg
shrl
xchg
jns
add
pusha
add
orl
xchg
popf
add
xchg
fcomp
push
add
sarl
mov
xchg
mov
imull
int
pop
add
add
add
jns
add
add
decl
pushl
push
lea
add
pop
popl
mov
add
push
not
inc
sub
pop
xor
push
push
push
push
push
push
push
call
add
mov
incl
add
pop
sti
push
jmp
push
add
jmp
incl
scas
jl
mov
add
clc
popa
add
xchg
add
xchg
roll
push
add
add
add
add
add
fstpl
add
movsl
xchg
cmc
jp
add
mov
push
add
cli
jne
add
clc
cli
mov
mov
incl
mov
sub
lea
mov
add
push
xor
pop
xor
push
push
push
push
call
int3
xchg
add
inc
xchg
lcall
out
xchg
add
jns
out
add
cli
cwtl
add
add
add
incl
incl
add
add
jnp
mov
data16
incl
sti
sar
incl
into
add
mov
add
mov
lcall
test
clc
mov
sub
call
push
push
push
push
push
push
call
mov
incl
add
enter
xor
stc
test
addl
jl
jmp
push
arpl
jb
in
ja
push
outsl
add
addb
nop
ret
add
enter
mov
aad
jmp
add
add
add
call
sti
add
mov
add
rcl
test
add
push
shl
add
fmul
mov
sub
add
nop
push
pop
nop
cmp
je
push
push
push
push
push
push
push
push
call
jbe
mov
imul
cmc
lods
shlb
mull
mov
loop
add
add
pop
movsl
movl
push
hlt
xchg
mov
add
add
fs
dec
push
pusha
push
in
leave
jne
xchg
mov
add
movl
les
add
push
nop
test
add
fiadds
aam
incl
call
adc
push
push
push
call
add
pop
pop
negl
insb
push
add
popf
xchg
movb
lcall
add
add
ljmp
mov
incl
jnp
add
incl
sti
cltd
mov
add
xchg
add
lods
fs
call
lcall
jne
pop
add
jp
imul
pushw
js
add
nop
inc
nop
push
push
push
call
push
test
je
fs
incl
aad
add
jae
jmp
testb
incl
add
add
incl
add
xchg
mov
mov
cmp
incl
cltd
incl
stc
popf
add
mov
jne
lcall
add
lds
add
add
jecxz
incl
xlat
mov
sub
nop
push
push
call
add
lahf
lcall
lcall
incl
add
test
incl
loop
cwtl
push
add
sahf
test
add
incl
data16
jge
xchg
rcrb
stc
add
add
imul
pop
pop
pop
mov
ljmp
cli
dec
add
pop
pop
popf
add
cmp
jb
push
push
push
push
call
add
incl
add
out
lcall
pop
jb
call
addl
mov
rcr
arpl
mov
lcall
xchg
xchg
add
xchg
add
jge
lret
ljmp
call
repnz
out
inc
add
ljmp
add
mov
sub
xor
push
push
push
push
call
jp
mov
incl
add
jmp
add
mov
push
add
jl
add
add
add
add
mov
add
pop
clc
add
mov
mov
mov
fs
mov
arpl
inc
sar
jmp
fisubrl
loop
into
je
add
pushl
add
fisttpll
jmp
push
xor
rol
sub
pop
mov
push
push
push
push
push
call
add
pushl
add
add
add
jmp
lret
jmp
mov
mov
push
stos
fs
cmpsl
push
add
movsl
mov
add
pop
insb
enter
add
mul
popf
add
jp
insb
fbld
ljmp
add
std
add
cwtl
movsb
jecxz
dec
mov
pop
jecxz
mov
sub
add
movzwl
mov
push
xor
pop
add
push
add
shr
pop
mov
xor
xor
push
push
push
push
push
call
add
add
cmpsl
incl
push
jnp
push
mov
add
inc
testb
add
rcll
add
cltd
add
add
mov
add
js
add
add
data16
incl
add
add
fisubs
icebp
add
fsin
mov
sub
shl
xor
shl
push
push
call
jae
aam
add
jmp
mov
xchg
leave
jns
xlat
int
pop
icebp
add
aam
add
mov
fiaddl
add
mov
pop
test
pushl
push
jmp
xchg
pop
mov
add
mov
pushl
mov
push
pop
push
pushl
mov
in
hlt
pushl
dec
nop
add
loope
xor
push
rol
pop
mov
add
push
sub
pop
pop
pop
pop
push
push
push
call
insb
popl
add
incl
pop
fdivrs
imul
fsubrl
push
push
xchg
jne
icebp
push
xchg
add
call
incl
in
mov
mov
stc
in
mov
add
push
add
incb
call
pop
jmp
adc
clc
push
add
pushf
fiaddl
mov
push
lock
sub
pop
push
push
push
push
push
call
mov
fiaddl
add
mov
add
scas
push
fldln2
pop
mov
stc
cmp
jmp
pusha
jb
stc
lret
add
jne
jmp
loope
js
add
pushl
xorb
add
push
xchg
lcall
leave
gs
jae
incl
add
add
jle
divb
in
call
ret
push
sub
sub
pop
push
push
push
push
push
call
out
imulb
fdivrl
add
fwait
jmp
mov
jge
imul
call
jmp
call
cli
repnz
nop
fsub
lea
popf
xchg
lcall
enter
jns
add
lahf
mov
add
mov
mov
enter
sub
mov
push
push
push
push
push
push
push
call
jmp
fbld
in
int
add
sbbb
pushf
lods
mov
lcall
jmp
in
mov
jae
xchg
rcr
xchg
add
incl
incb
pusha
add
int3
jmp
out
add
add
incl
xchg
mov
call
nop
mov
sub
push
push
inc
shl
xor
pop
push
push
shr
pop
push
push
shr
sub
shl
add
pop
push
mov
mov
push
push
push
push
push
call
rcrb
add
mov
xchg
push
cli
imul
incl
add
jge
loope
jge
fadds
cwtl
test
add
decl
incl
add
insb
incl
sar
incl
incl
lret
pop
jo
xchg
add
add
incl
arpl
pushl
add
int
icebp
jo
incl
or
rol
pop
test
je
push
sub
sub
pop
mov
test
je
mov
push
push
push
push
push
push
call
xlat
loope
add
mov
lea
add
in
add
mov
pop
jbe
fildl
stos
jbe
incl
push
pushf
insb
add
enter
xchg
cmpsb
xbegin
cld
lcall
mov
popl
mov
call
mov
cld
pusha
pop
push
out
add
loopne
incl
or
pop
inc
push
ror
dec
xor
pop
cmp
je
test
je
push
add
xor
not
add
pop
mov
inc
cmp
je
push
lea
pop
test
jne
push
dec
lea
pop
xor
push
add
rol
lea
pop
pop
push
push
push
push
push
call
cltd
mov
mov
add
fiadds
test
add
inc
add
incl
arpl
imul
pop
add
xchg
mov
add
xchg
pop
mov
add
lods
data16
add
leave
shrb
mov
add
add
arpl
push
incl
bound
xchg
add
jns
jae
incl
lcall
pop
push
push
push
push
push
push
push
push
call
add
idiv
jmp
jb
pushl
incl
mov
add
add
add
lcall
push
add
addb
add
xchg
mov
add
pushl
incl
cmpsb
mov
gs
in
ja
imul
xlat
orb
ret
mov
push
push
push
push
push
push
push
push
call
pop
add
mov
stos
cmc
add
mov
jmp
xchg
jl
jecxz
add
mov
testb
in
incl
jle
add
add
mov
je
pop
movsb
mov
pop
jle
in
mov
dec
jmp
popf
insb
popa
add
loope
add
movsb
fidivrs
stos
arpl
lahf
cltd
add
incl
loopne
inc
add
call
addr16
popl
cmpsb
xchg
mov
xchg
pushl
outsl
lods
push
std
mov
add
addr16
fiadds
fcompl
add
lds
rolb
flds
aam
add
add
incl
jecxz
add
fldcw
pushl
popf
add
out
xchg
jmp
data16
in
flds
add
incl
mov
push
icebp
je
add
decl
cmp
jne
push
push
push
push
push
push
call
add
jns
mov
decl
js
add
icebp
mov
incl
cmpsb
inc
scas
cmc
add
cltd
add
add
pop
add
add
incl
jno
popa
add
cli
data16
pushf
add
into
scas
sti
shl
jnp
popa
lret
shll
incl
decl
push
push
push
push
push
call
mov
out
mov
int
lods
call
push
bound
ror
mov
xlat
mov
ljmp
jo
push
mov
xchg
xchg
icebp
jl
add
std
fbstp
cwtl
xchg
add
add
xbegin
add
pushl
incl
mov
sub
mov
test
je
mov
push
rol
inc
pop
add
cmp
jne
push
shl
pop
mov
push
push
call
push
cmpsl
aam
ljmp
push
ficompl
std
add
add
add
subl
add
cmc
insb
stc
add
add
loope
cwtl
xchg
push
add
push
add
add
fadds
out
test
fcmovu
add
add
mov
add
push
fldt
add
add
push
int3
stos
add
mov
sub
test
je
push
push
push
call
into
roll
lahf
incl
add
lcall
data16
iret
xorl
push
lds
jmp
addl
push
push
add
pop
dec
add
xchg
push
add
add
fiadds
sti
sbbb
call
out
lahf
hlt
add
add
add
arpl
out
add
mov
sub
mov
push
not
pop
add
cmp
je
push
dec
dec
add
pop
jmp
xor
push
shr
pop
pop
push
call
fcmovu
incl
sti
std
movsl
add
pop
rolb
add
out
add
pushl
mulb
lea
cld
pushl
lcall
add
sahf
stc
jb
add
jnp
mov
cmc
mov
add
add
incl
testb
mov
add
decl
push
add
pop
push
sub
shl
shr
pop
pop
pop
push
shl
pop
leave
push
push
push
push
push
push
push
push
push
call
fnsave
xchg
add
negb
mov
in
data16
mov
pop
cltd
add
ja
enter
add
pop
fiaddl
shlb
test
add
jo
add
cltd
int3
pushl
incl
pop
pop
jb
add
add
call
xchg
decl
ret
lea
pop
push
add
xor
dec
pop
pop
pop
push
push
call
lcall
add
mov
push
mov
in
cli
mov
xchg
jecxz
popl
xchg
add
ret
data16
add
lret
jb
cli
test
insb
pop
mov
lcall
fstps
lds
mov
add
pop
loop
add
push
fisubl
mov
pop
pushl
rcrb
int3
out
mov
iret
mov
sub
pop
push
push
push
call
add
xchg
add
xchg
push
add
into
loope
shll
add
loope
add
add
fistpll
push
add
call
add
add
push
cli
add
rolb
lods
jmp
incl
add
incl
sar
incl
push
add
pushl
pop
mov
add
jb
incl
mov
sub
leave
ret
push
lea
ror
dec
pop
mov
push
sub
pop
pop
pop
push
xor
shr
pop
pop
pop
leave
push
inc
pop
ret
rol
rol
push
not
rol
rol
dec
pop
xor
inc
cmpb
jne
push
sub
rol
pop
ret
and
iret
ja
cmp
ja
sbb
ja
cmp
ja
sbb
ja
lret
and
shlb
jp
ja
leave
iret
ja
loope
ja
cmp
ja
cmp
ja
xchg
aam
and
iret
ja
push
ja
nop
ss
bound
xorl
mov
int
and
addb
push
subl
mov
ret
cmp
pop
arpl
mov
pop
insl
lds
adc
sbb
out
outsl
fisubl
shl
push
xor
test
sub
call
repz
out
hlt
jmp
xchg
jmp
sub
fs
sub
jp
and
and
xchg
mov
movsl
iret
push
add
call
leave
aam
filds
push
cli
mov
jp
lahf
xor
cld
push
push
sbb
sbb
mov
out
aad
rcr
movsl
push
sub
in
pop
hlt
push
cmp
mov
arpl
aad
add
rcl
lods
jecxz
inc
cmpsl
xchg
mov
imul
popf
sbb
loope
inc
dec
inc
xchg
daa
scas
pop
inc
jl
xchg
imul
pop
outsb
insb
jnp
out
mov
jl
pop
mov
outsb
data16
and
ss
arpl
into
xchg
pop
call
ljmp
xchg
and
addr16
int
out
mov
mov
movsl
dec
repz
lds
mov
push
sub
ds
jnp
mov
dec
lahf
push
xchg
shr
test
xlat
in
cmc
jno
imul
push
imul
xchg
icebp
xor
inc
dec
jle
inc
mov
dec
cmp
rorl
stos
clc
aam
in
adc
xchg
push
aas
shrl
jne
or
andl
rcll
dec
jge
fcom
fwait
and
gs
xchg
scas
clc
mov
push
popa
ret
fldenv
adc
pop
jmp
leave
out
cmpsl
nop
scas
add
sbb
mov
ret
sub
mov
mov
xchg
push
cwtl
rcrl
inc
mov
pop
jns
xor
das
xchg
jle
jbe
sarl
arpl
in
out
repz
negb
das
rorb
test
mov
test
insl
or
stos
jl
xor
in
lock
in
inc
dec
outsb
pop
and
stos
inc
adc
add
pusha
mov
push
push
test
je
movsl
jnp
mov
mov
pop
add
int3
sbb
mov
push
popf
shlb
mov
fdivs
xor
leave
xlat
mov
lock
enter
sub
in
sbbl
lea
out
femms
fnstenv
insl
repz
iret
sub
push
pop
pop
jecxz
popa
pop
popf
addb
mov
cltd
add
and
pop
sub
cmpsl
xchg
icebp
out
jae
loopne
dec
addr16
clc
ret
mov
pop
aas
add
je
mov
sub
repnz
lcall
push
mov
adc
pop
pop
gs
enter
scas
fwait
insb
sbb
lcall
pop
ja
psrad
fimull
sub
inc
mov
insl
mov
mov
or
stc
pop
call
cs
cltd
jno
push
ret
insl
stos
sbb
sub
aad
xor
imul
jns
xchg
xchg
leave
cmp
dec
dec
jecxz
test
dec
mov
add
inc
push
sub
push
fwait
decb
mov
dec
pop
cmp
inc
jno
lods
push
jno
popf
fistl
daa
pusha
gs
or
inc
in
jbe
mov
hlt
cmp
lods
je
les
iret
dec
lds
inc
jno
jnp
jnp
sub
dec
fwait
int
push
sub
in
rcrb
and
pop
test
xor
imul
inc
dec
repz
test
push
dec
shl
push
addr16
stos
xchg
aam
sub
push
out
pop
xor
mov
ja
jo
fnstenv
call
mov
xchg
and
cwtl
inc
popa
imul
mov
cli
imul
aam
xchg
xchg
stc
mov
xor
fnstenv
aaa
adc
xchg
add
cmc
fadds
inc
pusha
push
and
mov
push
xor
cmpsb
and
jp
sbb
addr16
mov
xchg
fmul
push
insb
cwtl
ss
enter
lods
call
movsb
adc
jmp
movl
xchg
sar
add
adc
test
popa
dec
dec
sub
push
mov
sub
in
popl
xchg
cmp
xchg
pusha
jo
sbb
imul
imul
lock
shll
dec
fidivs
leave
jmp
ds
inc
scas
ret
out
ficompl
or
push
cmp
pop
fmul
jl
mov
stc
and
dec
dec
dec
popf
inc
cli
int
pop
lahf
dec
roll
cmp
stos
ds
sbb
loop
ret
or
push
lea
test
xchg
daa
fcomi
punpckhwd
lock
lods
stc
pop
xchg
mov
lahf
push
int
cmp
push
lcall
push
ja
mov
das
fucomi
adc
sub
dec
mov
enter
ss
jecxz
in
in
adc
pusha
adc
xor
jg
push
mov
mov
jno
inc
mov
inc
gs
mov
mov
je
jnp
mov
pop
add
inc
xchg
lret
pop
or
lret
jmp
roll
cmp
pushf
xchg
dec
test
push
push
loopne
cmc
mov
cli
jbe
das
mov
inc
cs
fistl
shld
ja
loop
lea
cmp
sbb
add
push
inc
shr
pop
or
push
dec
loop
push
pop
inc
pop
shll
sub
sbb
cwtl
mov
jge
mov
int3
jp
xchg
jp
out
ja
das
je
xorl
sarb
sbb
xchg
jne
sbb
and
addl
lret
push
out
mov
out
pop
aad
ja
popa
inc
cmp
ret
pop
jle
rcl
mov
test
cwtl
push
mov
xor
ret
cmp
fisttps
outsb
xchg
rcrb
xchg
push
pop
jge
mov
pop
insb
jp
adc
jg
xor
test
cmp
negb
push
sbbb
or
int3
add
dec
pusha
or
mov
mov
pusha
and
push
into
xchg
fptan
xor
aas
mov
push
add
jb
es
mov
or
or
loope
xorb
nop
cmpsb
cld
insb
stc
mov
hlt
xor
add
xor
cld
or
pusha
mov
out
out
ljmp
div
movsl
pushf
sbb
xchg
cwtl
cwtl
push
in
fstl
cltd
fildll
adc
dec
push
cmp
mov
lods
inc
mov
into
push
xchg
adc
ffreep
popf
pop
ss
fdivrl
in
sbb
dec
mov
sbbb
out
pusha
xchg
mov
jl
into
call
or
mov
xor
dec
mov
jp
cltd
inc
push
adc
setb
adcl
dec
mov
insb
pop
and
and
push
arpl
sub
in
pop
inc
fisubrs
in
cmp
push
pop
dec
dec
roll
or
add
cwtl
sub
push
popa
jbe
jae
sbb
shrl
mov
arpl
adc
stos
popa
or
lock
repnz
sub
out
out
and
daa
pop
push
lahf
fmul
pop
dec
pop
cmp
int
vpxor
fistps
dec
add
pop
ret
pop
mov
dec
repz
shll
movsl
cli
sbb
enter
xor
aas
xor
or
out
sbb
push
mov
popf
sbb
loope
je
aaa
mov
pop
fwait
xchg
imul
flds
jbe
inc
xchg
ljmp
adc
jb
fs
insb
cmpsb
pop
xchg
jg
lods
cmp
popf
outsb
jp
insl
leave
cmc
gs
stos
dec
stc
arpl
adc
pushf
sar
popa
or
xchg
call
or
jmp
outsl
and
hlt
add
sub
jmp
xchg
jne
inc
ljmp
jle
inc
mov
dec
in
sbbl
xchg
dec
leave
int
out
jns
dec
pop
mov
adc
mov
inc
outsl
jle
lea
dec
fcom
and
xor
loopne
lcall
cmp
add
mov
pushf
in
std
mov
or
dec
fidivrl
movsb
add
inc
in
int
faddp
inc
mov
fwait
adc
jbe
ja
cmpsl
xchg
mov
scas
mov
or
inc
rclb
cmp
lret
sbb
mov
ja
lds
movsl
xor
dec
dec
repnz
sbb
ja
cmp
cmp
das
roll
movsb
icebp
push
adc
out
or
mov
xchg
repz
sub
and
xor
cmp
mov
mov
insb
lock
mov
arpl
test
mov
add
pop
leave
pop
jg
xor
inc
xor
or
or
int3
mov
imul
popf
jns
dec
lret
xor
inc
add
and
dec
inc
js
cld
xor
jle
pop
mov
and
inc
test
ljmp
jb
stc
lcall
inc
mov
outsb
icebp
out
shl
xor
repz
xor
mov
or
andb
xchg
xor
inc
add
pop
out
dec
push
imul
cltd
ljmp
in
outsb
pop
cmp
movsl
mov
das
stos
popf
cmp
adc
aad
jmp
push
jno
xor
outsl
cmpsb
xor
dec
adc
int3
xchg
mov
mov
test
pushf
push
adc
fnstsw
ds
in
cwtl
loope
loope
das
inc
and
outsb
mov
sub
mov
imull
fisubrs
dec
enter
fmull
xor
dec
and
nop
bound
mov
xchg
iret
mov
mov
cmp
xor
mov
js
rcr
pop
gs
dec
outsb
sub
repnz
sub
movsl
je
popa
mov
and
mov
hlt
lret
add
jecxz
xchg
sub
sar
inc
jo
mov
js
cmp
sbb
gs
imul
imul
inc
adc
lock
or
je
mov
insl
and
fsubrs
aam
adc
mov
xor
jp
xchg
stos
jge
nop
movsl
test
push
cmp
dec
mov
dec
pop
cmpsl
pop
gs
sahf
push
or
jae
nop
sub
xchg
popa
dec
inc
mov
jge
push
movsb
xchg
repz
push
xlat
daa
xchg
mulb
cltd
add
mov
shrb
ja
xor
ret
and
lods
pop
leave
and
and
popf
mov
adc
xor
dec
add
sub
dec
mov
es
mov
push
shl
sbb
scas
add
sbb
push
push
shll
imul
rorl
sbb
pop
or
jbe
shlb
jne
jae
das
mov
and
lahf
cmpsl
ja
in
sbb
sub
out
mov
ss
sbb
fdivrs
mov
cmpsb
push
stc
inc
mov
jo
ret
mov
push
adc
and
mov
inc
inc
outsb
pop
jge
add
push
aas
push
inc
pop
test
mov
loop
xchg
inc
mov
out
ret
and
pop
daa
in
xchg
ret
movsb
insb
mov
popf
jbe
sbb
pop
adc
out
insb
xchg
cld
int
and
stc
lods
movsb
scas
push
mov
cmp
lret
lret
call
aaa
adc
hlt
dec
adc
or
push
jae
icebp
dec
mov
aaa
adc
lret
xchg
lcall
jge
call
shrl
outsb
ficoms
repz
xchg
mov
aas
add
les
outsl
pop
out
out
sub
ss
lods
mov
imul
xchg
dec
push
sbb
cmpsl
scas
jnp
xlat
and
cltd
pop
jle
aam
push
pop
decl
sti
es
or
test
inc
incl
cltd
add
adc
lahf
movsb
cmp
mov
jle,pn
out
sbb
out
frstor
or
lock
or
lahf
cld
lcall
shlb
add
lahf
inc
inc
les
xchg
cvtpi2ps
ljmp
adc
imul
cmp
roll
loopne
pop
xchg
cmpsb
ja
mov
mov
adc
test
fwait
jle
movsl
add
shll
shl
inc
js
ret
push
lods
aaa
xor
mov
or
xchg
es
jp
push
lahf
gs
lods
xchg
push
sti
fldenv
rcrl
add
scas
lcall
testb
xor
fisttps
fcoml
lods
adc
pop
jle
dec
or
stos
and
dec
leave
test
adc
cmpsl
loope
jmp
mov
mov
ss
es
mov
jnp
in
push
cwtl
sub
push
jns
mov
ret
and
clc
repnz
xchg
add
or
sbb
jnp
int3
xchg
push
testl
push
test
pop
sbb
cmp
jle
xchg
pop
clc
mov
jl
cltd
push
clc
sub
out
push
xor
lds
xor
mov
jno
jae
jmp
adc
add
jge
add
mov
jno
cli
out
xchg
mov
mov
and
ljmp
mov
jo
pop
popf
nop
nop
jp
shlb
addl
movsb
xchg
xor
jge
mul
xor
iret
out
imul
scas
iret
in
push
fadds
jnp
int
shll
inc
adc
xorb
sbbb
js
sahf
shrb
mov
stos
fcmove
mov
call
imull
ret
lahf
dec
add
mov
sub
mov
lods
pop
adc
jns
sbbl
xor
enter
mov
jecxz
mov
and
ja
dec
xor
stos
push
xchg
jge
xlat
jg
cmc
sahf
clc
stos
adc
adc
mov
adc
sub
popa
ficoml
imulb
mov
or
mov
or
xlat
cltd
ret
inc
xorl
lods
sbb
mov
adcb
out
or
xchg
pop
dec
stos
jb
imul
ds
je
push
mov
inc
lock
mov
sbb
or
pop
add
sbb
xchg
inc
add
movsl
gs
jne
jo
loop
xchg
or
jle
ret
xchg
icebp
inc
mov
mov
mov
cli
xchg
movsb
cmp
inc
sar
or
pusha
add
int
cmpsb
pop
enter
cmpsb
xchg
aad
in
std
sti
fbld
daa
stc
xchg
mov
dec
mov
mov
mov
faddp
mov
lds
cmpsb
and
dec
pop
xchg
flds
xlat
or
push
mov
dec
and
ret
mov
sbb
ret
cld
stos
xchg
jb
and
stc
push
dec
loope
aad
ficompl
rorl
rcrb
mov
sbb
jnp
inc
and
inc
jecxz
pop
fcmovnbe
imul
es
mov
push
xor
and
addr16
aad
lret
leave
jecxz
inc
mov
rorl
sti
arpl
rcrb
insb
push
sbb
jbe
and
ja
adc
mov
inc
add
push
subb
scas
xlat
or
addr16
ljmp
mov
outsb
inc
stos
sub
jne
jmp
push
fdivs
arpl
ret
jnp
fmuls
jae
add
jl,pn
nop
xchg
inc
mov
xchg
or
ds
or
cs
and
jae
xchg
jmp
push
cmpsb
or
ljmp
insb
dec
fadds
mov
test
dec
fxch
or
or
cld
test
and
sub
data16
out
mov
cmpsl
into
mov
push
je
cmp
and
jmp
fisubl
mov
ds
ja
call
xor
mov
sub
and
adc
dec
push
fisubl
cmp
dec
sbb
fisttpl
inc
adc
stc
ror
test
out
jbe
out
pop
adc
popa
sub
jbe
mov
jne
lcall
sub
repnz
aaa
mov
std
adc
inc
push
loop
push
sbb
xchg
and
cmp
push
stc
jbe
jo
lock
inc
jne
jmp
or
mov
pop
stos
sti
cmp
out
cmp
jle
aad
fs
inc
mov
rcrl
pusha
stos
test
sbb
or
ds
adc
repnz
ljmp
mov
aaa
and
push
and
inc
inc
in
pop
mov
mov
push
xchg
aad
xchg
outsb
jle
mov
sahf
mov
aas
dec
push
insb
es
xchg
mov
xchg
push
lds
xor
mov
daa
mov
xchg
das
xor
out
es
insb
jg
loop
cmp
add
push
loopne
xor
adc
shll
and
cmp
cmc
pop
mov
mov
shll
inc
inc
daa
les
faddl
test
add
into
lds
stos
and
mov
enter
cmp
xchg
mov
insl
xor
mov
inc
fs
or
sub
jne
mov
pop
sub
std
mov
movsl
push
dec
test
add
xor
lret
cmp
loope
scas
outsb
in
xchg
lahf
xchg
and
std
jb
decb
aaa
clc
mov
out
out
adc
inc
fcmovu
xlat
mov
lret
xchg
xchg
sbb
inc
jo
mov
sub
test
test
ret
jae
mov
sbb
call
cmpsb
push
sub
sbb
mov
xchg
jnp
ss
lds
mov
jecxz
and
int
divl
mov
push
lret
mov
and
pop
and
push
outsl
cmc
add
and
mov
cmp
pop
mov
inc
inc
ja
stos
pop
and
inc
je
cli
dec
jnp
xor
xchg
add
and
idivb
sbb
xor
in
daa
push
sbb
jecxz
inc
push
movsl
jp
imul
jge
mov
xchg
int3
lea
xchg
adc
xchg
test
iret
gs
pop
iret
test
pushl
outsl
dec
adc
push
popa
cmp
cmp
int3
mov
pop
daa
cmp
cmp
fbld
test
push
rclb
imul
cmpl
scas
adc
cmp
popf
and
outsl
pusha
add
movsb
mov
jecxz
mov
xchg
in
sbb
push
enter
int
insb
sti
cmc
stc
mov
push
jnp
add
das
rolb
push
mov
jle
enter
dec
mul
jmp
addr16
lret
mov
out
aas
mov
les
fistpl
push
call
sarb
dec
outsl
out
dec
lods
test
xor
cli
mov
dec
fildl
gs
xor
cmp
dec
popa
xchg
fiadds
nop
rorb
pusha
push
daa
dec
adc
aas
cli
xchg
test
enter
or
les
or
pop
inc
sub
sbb
fsubs
nop
and
jnp
xchg
roll
adc
ret
dec
clc
or
push
cmc
mov
neg
mov
mov
scas
dec
push
cmp
mov
repz
jmp
arpl
repnz
jp
ss
mov
xor
mov
xchg
out
enter
xchg
sub
jbe
cwtl
lea
cmp
mov
lret
insb
clc
addr16
mov
pop
mov
xor
int3
fildll
frstor
sub
das
insl
test
ret
in
pop
dec
pop
in
mov
test
mov
sti
jnp
mov
adc
add
dec
fidivrs
je
lods
and
repnz
into
cmc
sbbl
fcmovne
push
leave
push
ret
mov
aaa
push
jge
stc
xlat
loope
mov
scas
inc
aad
or
nop
xchg
aas
mov
mov
popl
popa
add
scas
mov
popf
xor
fdivs
int3
or
xor
insb
cli
leave
popa
push
mov
jb
cld
xchg
and
mov
push
xchg
mov
sbb
or
pusha
inc
lret
adc
xchg
and
jae
mov
xor
adc
jmp
aas
push
sub
in
pop
push
sub
fcoms
insl
cmpsb
dec
mov
scas
push
mov
mov
les
pop
aam
sub
sbb
xchg
popl
push
ja
xlat
leave
mov
mov
inc
lea
out
mov
inc
sbb
xchg
call
daa
loope
sbb
jbe
push
sbb
add
push
sub
xlat
mov
aad
movsb
addb
jl
mov
dec
sbb
mov
jae
out
test
mov
repnz
mov
or
stc
iret
sub
jge
adcb
stc
xor
rcl
fcmovnu
and
dec
or
leave
fld
inc
mov
in
nop
push
lahf
in
adc
out
pop
push
pop
movsb
lcall
push
inc
sub
adc
xor
cmp
fldenv
jecxz
sub
xchg
sarb
je
test
sbb
int3
imul
adc
push
lock
push
lods
repz
sbb
lea
hlt
pop
jo
dec
mov
dec
pushf
xor
in
xor
push
adc
pushl
sahf
in
add
mov
fimull
rcrl
inc
dec
adc
ljmp
add
je
mov
mov
xchg
cli
jo
pop
mov
shlb
mov
pop
adc
adc
icebp
pop
data16
ret
cltd
mov
adc
mov
rorl
ljmp
cmp
pusha
xchg
mov
fimuls
lea
outsb
mov
or
cli
push
lret
negl
or
mov
adcl
test
xchg
gs
xlat
add
gs
sbb
inc
insl
push
pop
jno
mov
pop
std
mov
out
mov
fwait
cmp
push
test
loop
dec
shlb
enter
aam
pop
sub
icebp
adc
sti
in
xchg
push
or
lds
mov
pop
icebp
shll
inc
xor
xor
or
cli
in
stos
mov
cmp
mov
imul
xor
mov
jnp
popa
sbb
pop
aad
sarl
ja
adc
dec
xor
mov
add
test
or
into
loope
negl
mov
mov
dec
jecxz
dec
add
lahf
scas
lods
int3
dec
jge
das
push
mov
out
in
sbb
pop
cmc
sub
pusha
cmpsl
std
icebp
pop
int
scas
or
out
rclb
cwtl
icebp
cmp
mov
cwtl
xchg
mov
pop
sub
inc
mov
lahf
dec
mov
in
push
lea
xchg
adc
lret
xchg
dec
nop
popf
push
icebp
sbb
int
cmp
push
xor
xchg
jo
call
insl
jge
les
mov
insl
nop
imul
jnp
adc
fildll
xchg
push
int3
sub
adc
loope
fdivrs
out
and
imull
cs
xchg
loope
das
pop
addr16
pop
push
adc
xchg
stos
mov
jbe
and
sub
iret
cwtl
or
inc
cltd
idivb
outsl
sti
stos
mov
fldenv
cmp
pop
and
jno
inc
xor
mov
mov
inc
pop
fwait
mov
sbb
or
inc
inc
xor
sti
cmp
out
xchg
test
shll
and
push
std
and
sti
jb
inc
je
pushf
fildll
sbb
adc
mov
xor
sub
push
call
mov
dec
add
idiv
mov
cld
sti
xor
add
and
and
imul
arpl
lock
fists
mov
stc
inc
xchg
mov
mov
cli
insb
out
cmpsl
sbbl
dec
jmp
fcoms
fisttpll
mov
mov
repz
mov
mov
gs
jmp
push
mov
sbbb
or
sub
paddusb
dec
lods
repz
ret
jg
out
testb
or
aaa
inc
mov
mov
push
sahf
xchg
dec
pop
sub
jbe
and
mov
and
lahf
inc
fs
movsb
add
repz
mov
les
sub
push
push
pop
imul
jmp
mov
lods
sbb
push
fwait
sbb
or
roll
push
push
adc
xchg
mov
pusha
mov
add
add
les
fwait
mov
aam
inc
and
jbe
add
xchg
ficomps
jecxz
shrl
or
cmp
fistpl
es
loope
sbb
pop
jecxz
cmp
mov
repz
pop
inc
and
lahf
imul
divl
les
sbb
push
lea
fsubrl
sub
mov
or
mov
pop
cli
loopne
push
cltd
add
aad
lods
nop
lods
push
lock
push
xchg
xor
xlat
lret
jb
cmp
in
cmp
cmp
or
std
out
push
push
inc
fcmove
xchg
add
dec
jnp
mov
cld
dec
sub
push
or
les
xchg
sbb
xchg
addr16
dec
dec
mov
jmp
jmp
dec
fs
cmpsb
sbb
movsb
cltd
lcall
push
or
ret
dec
icebp
pop
daa
test
push
out
cmp
fwait
push
mov
outsl
push
mov
fistl
js
outsb
call
mov
push
loope
sbbb
ss
mov
ja
xchg
jo
orb
das
jge
sbb
movsl
pop
test
ljmp
inc
mov
xchg
add
pop
stc
adc
adc
int
mov
cltd
sarl
shrl
or
sub
xor
es
jae
repnz
jne
sahf
inc
in
lcall
cmp
insb
add
or
sbb
xchg
outsl
ret
push
xchg
xchg
jnp
push
xor
adc
mov
mov
mov
inc
ret
mov
xor
lds
push
fs
inc
jle
stc
xchg
mov
movsl
mov
stc
push
les
adc
mov
loopne
xlat
sahf
dec
dec
rolb
push
add
fdivrs
rcll
xchg
ret
nop
mov
sbb
push
cmp
into
in
repnz
call
xchg
lret
pushf
sbb
lahf
or
ffree
out
lret
cmp
mov
movsb
xchg
test
call
mov
push
dec
or
bound
mov
clc
or
dec
in
xor
ja
push
mov
inc
and
ret
push
in
and
subl
mov
addr16
das
push
call
cld
push
push
xchg
shll
data16
divl
je
orb
aas
or
dec
push
xchg
jb
mov
xchg
pop
xchg
jne
inc
fnstsw
in
mov
dec
movsb
sub
xorb
movsb
stc
push
inc
aad
pushf
and
jge
jecxz
mov
cmp
cwtl
repz
std
daa
sub
pop
scas
int
adc
dec
jne
pop
repz
cmp
push
enter
rolb
add
mov
pop
push
mov
jb
pop
adc
or
sub
inc
clc
je
out
sbb
outsl
jo
js
shl
neg
pop
test
or
in
adc
cmp
lock
mov
jb
les
xchg
mov
sub
xchg
test
mov
and
jo
sub
out
cltd
or
insl
mov
sbb
sub
imul
push
cltd
rorl
inc
sbb
add
out
xchg
adc
push
xchg
mov
out
xchg
dec
mov
cmc
xor
adc
xor
int3
jnp
gs
lahf
test
das
push
rcl
sbb
mov
lret
lds
dec
push
sti
inc
hlt
imul
adc
xorl
mov
jg
cld
int3
adc
jmp
lods
clc
cmpsb
es
mov
fs
lods
repnz
jl
loope
jae
add
ror
add
jg
filds
rcr
mov
cli
scas
add
pop
fmull
pop
cwtl
push
xor
aam
mov
sbb
adc
inc
ror
orl
mov
push
or
negl
movsl
dec
sub
push
pusha
or
sub
imulb
push
add
stos
mov
iret
movsb
leave
jbe
into
test
mov
pop
add
mov
in
xchg
rcrb
push
in
andb
xchg
clc
cmpsl
xor
cmp
lret
cmp
cmc
scas
ret
jo
sub
out
aam
sbb
jl
leave
ret
xchg
lea
xor
bound
ljmp
xchg
add
push
outsl
dec
iret
push
dec
lcall
cmp
push
xor
push
jb
imul
aad
sub
pop
xor
shll
pop
scas
scas
pop
in
lods
gs
icebp
xchg
aas
dec
fadds
or
and
inc
bound
je
push
icebp
in
scas
data16
aas
add
loopne
xlat
sub
pop
push
jnp
outsb
and
lret
mov
out
fs
adc
pop
jbe
fidivrs
imul
mov
xor
xor
inc
aad
push
push
push
enter
lods
popf
shl
push
mov
xchg
pop
out
inc
dec
mov
mov
push
lods
rcrb
push
jl
lods
pop
inc
sbb
adc
pop
cmpsb
mov
or
dec
xchg
dec
pop
mov
neg
popa
enter
add
xchg
push
mov
add
hlt
aad
mov
xchg
mov
xor
jns
jae
jmpw
xor
cmpsb
push
mov
dec
dec
insb
into
jo
loope
out
xor
fwait
jno
xchg
cmp
je
cltd
or
mov
xor
rcrl
push
incb
mov
pop
jne
adc
daa
and
push
out
jp
dec
mov
sub
add
xchg
popa
mov
jmp
jl
loopne
jbe
pop
ljmp
aaa
sbb
dec
das
sbb
pushf
hlt
mov
mov
cmp
in
ds
pop
les
push
push
xchg
in
xlat
pop
mov
shl
rcll
push
notb
es
rorl
fmul
sbb
cmpsb
add
jbe
enter
scas
hlt
scas
scas
jne
js
jmp
fisttpl
push
inc
push
mov
and
ds
loopne
dec
test
pop
incb
stos
repz
in
pusha
mov
mov
and
and
xchg
inc
mov
popf
pop
shll
int3
inc
test
clc
aas
cmpsl
insl
fs
mov
sub
and
push
idivl
cmp
ficoml
fsubs
subb
das
adc
sub
lret
sub
xchg
in
inc
sub
dec
push
sbb
sub
cmp
sbb
cmp
mov
sub
adc
sub
pop
add
lret
cmpsl
jnp
xor
dec
jge
cmp
push
sbbl
add
xor
jb
inc
andl
in
std
dec
aaa
popa
aaa
imul
fidivrs
dec
aaa
sbb
repnz
vpmadcswd
adc
cld
push
sarl
jns
loop
sub
ljmp
pop
es
and
add
cmc
insl
or
sti
or
dec
sbb
mov
loop
rcr
ror
push
ds
add
iret
lea
inc
xor
out
add
cmc
cmp
cwtl
xlat
scas
jg
call
push
push
adc
stos
test
cltd
lea
sub
add
data16
dec
dec
xor
ret
popf
out
sub
inc
cltd
sub
or
test
hlt
push
or
cmp
icebp
sarb
and
sub
and
xlat
xor
xchg
pop
inc
jp
adc
mov
mov
add
push
mov
mov
lahf
mov
mov
mov
les
aad
xor
xor
xor
addr16
out
mov
dec
cmp
into
sbb
push
sub
cmp
mov
mov
pop
add
js
xlat
lods
lahf
lahf
xchg
nop
mov
xchg
test
sub
push
cs
andb
cmp
ljmp
adc
or
ss
jo
ret
hlt
popf
mov
fsubrs
fidivrs
out
mov
push
insb
xchg
stc
das
xchg
fs
popf
loopne
data16
into
mov
in
cwtl
cli
sub
ret
or
push
add
out
inc
jl
insb
jb
xchg
and
inc
sbb
mov
aad
xchg
xchg
cmpsl
lahf
pop
stc
fdivp
idiv
and
cmp
dec
ss
pop
or
pop
scas
mov
mov
fsubl
fiaddl
mov
ss
mov
test
mov
mov
out
sarl
and
cltd
int
push
addb
xchg
std
gs
int3
stc
jno
rclb
inc
jno
adc
pop
xor
add
lret
push
aam
push
int3
add
fs
popa
push
or
pushf
shrb
jno
cmp
mov
or
sub
jg
xorl
imull
int3
sbb
loop
insl
pop
loope
mov
xor
cmp
or
mov
loopne
and
xor
pop
inc
or
scas
push
mov
xor
addr16
aad
clc
pop
addr16
xchg
jp
push
xchg
je
mov
jo
cmc
pop
dec
imul
shll
popf
call
roll
add
mov
pop
shlb
sbb
sub
push
cs
dec
push
xchg
mov
enter
sti
into
xor
push
fsub
movsl
dec
cs
std
popa
xor
fidivrs
lds
inc
inc
ret
add
push
cwtl
in
or
imul
iret
mov
pop
xchg
sarb
imul
adc
push
je
cltd
or
aas
in
mov
aaa
mov
sub
pop
aas
test
jnp
adc
ror
sub
out
call
mov
pop
lock
subb
or
jne
cmp
div
adc
inc
scas
jle
outsl
je
cld
push
and
xchg
std
addps
das
sbb
shrl
lret
arpl
fstpt
out
sbb
ficomps
sti
lods
mov
popf
dec
mov
sbb
pop
cmp
test
add
inc
mov
scas
cmp
aam
sti
jg
mov
xor
jmp
dec
jo
popa
dec
mov
loope
sub
stos
push
ds
cli
std
jmp
push
jmp
ds
push
mov
xchg
mov
xchg
jbe
mov
jmp
dec
lret
stc
dec
je
xchg
imul
or
xor
xchg
sbb
stos
movsl
mov
in
jg
cmp
insb
sbb
sbb
sbb
jno,pt
mov
clc
xchg
mov
and
es
in
jl
jecxz
xchg
imul
gs
push
mov
jns
ja
xchg
dec
jns
inc
stc
inc
mov
cmp
insb
dec
dec
and
sarb
and
mov
sbb
jge
repz
addb
mov
aam
sbb
mov
in
pop
divb
push
rorl
push
loopne
mov
es
xchg
sbb
imull
loop
inc
mov
or
and
lds
pop
mov
int3
adc
jne
cmp
mov
sahf
cmp
cs
mov
cmp
xor
in
movsl
shrb
imul
mov
out
xchg
fisubrs
in
movl
rcrb
fisubrl
sub
mov
dec
cmc
mov
cmpsb
outsb
mov
cli
test
dec
cmpsb
fsubs
movsb
jne
add
pop
mov
xchg
jns
or
push
push
xchg
and
stos
jo
lcall
mov
sub
lods
loopne
fldt
ret
pop
xor
nop
shlb
push
push
les
iret
ffreep
pop
sti
jbe
dec
sub
mov
dec
cmp
cmp
shlb
sbb
shrb
sub
xor
hlt
mov
test
addr16
repz
loopne
lea
scas
mov
push
in
adc
aas
fisubl
jnp
ja
mov
dec
sbb
enter
pusha
hlt
fwait
push
mov
mov
jmp
out
js
or
and
lods
pushf
or
mov
or
pusha
dec
push
jmp
xchg
xchg
aad
push
into
sbb
push
decb
rcr
cmp
cwtl
mov
loop
push
in
or
xor
loop
xor
rorb
pop
mov
hlt
test
cli
out
test
mov
cmp
in
dec
and
sub
cwtl
add
sti
jge
xchg
jl
test
jle
jns
add
sbb
arpl
pop
sbb
push
test
pushf
sub
or
ret
je
shrl
xlat
mov
lock
or
dec
mov
fwait
std
jge
dec
or
jae
and
cmp
test
mov
xor
jo
push
rol
mov
inc
idivl
inc
dec
and
jo
mov
xor
inc
mov
cld
mov
push
mov
adc
lcall
xchg
rcll
mov
pop
push
jle
mov
cld
nop
out
inc
test
mov
mov
fisubs
mov
dec
jno
loopne
xor
movsb
xchg
mov
mov
and
gs
xchg
xchg
or
add
test
pusha
mov
jns
flds
lea
xlat
cmp
inc
mov
sub
int3
sub
dec
pop
test
dec
sub
push
mov
fcompl
dec
mov
aad
cmp
aas
out
inc
popa
dec
cld
sbb
cmp
jmp
aaa
lods
push
fnstenv
enter
adc
xchg
es
cmp
enter
push
test
inc
loope
push
vmwrite
cmp
adc
lds
scas
ret
adc
xchg
flds
cmp
pop
fnstcw
popf
ljmp
push
pop
daa
adc
arpl
lahf
xor
clc
inc
sbb
add
fidivs
cmc
enter
lods
dec
outsb
cmp
or
add
pusha
lea
test
and
mov
xchg
dec
popa
push
inc
stos
jo
cld
hlt
data16
shll
and
cmp
ds
js
xchg
pop
pushl
bswap
add
insb
xlat
sti
enter
pop
mov
mov
lcall
pushf
rorl
jns
jae
mov
bsr
dec
imul
fcoml
repz
pop
push
gs
sub
insl
and
mov
push
mov
push
dec
pop
ds
mov
inc
in
mov
cmp
aad
in
in
mov
setns
pushf
dec
or
std
adc
mov
pushf
std
dec
add
sbb
jnp
pushf
test
addr16
push
sub
daa
arpl
and
cmp
lahf
popa
fcoml
add
int3
insb
pop
into
fsubrl
dec
aam
add
inc
inc
movsb
insl
cmp
pop
mov
cmp
push
test
push
repz
or
daa
pop
bound
mov
jle
cmpb
jne
fistps
xor
lea
xor
fucomip
xor
sub
mov
mov
cmpb
insb
push
daa
xchg
push
adc
roll
fidivs
aam
out
sbb
ret
push
sbbb
pop
loopne
add
dec
loope
xor
lods
cmpsl
je
sub
std
xchg
adc
or
xchg
cs
stos
aam
mov
inc
js
mov
and
mov
mov
out
or
movsl
xchg
mov
outsb
das
adc
daa
push
xchg
pushf
out
fstpt
fsub
xor
pop
imul
leave
ja
cmp
mov
and
pop
sub
gs
loopne
jg
test
stc
cmpsb
jmp
pushf
test
mov
mov
fsts
mov
xchg
rol
stos
inc
xchg
sahf
adc
fbstp
push
pop
sti
out
in
cli
push
jne
in
mov
nop
lock
lods
or
dec
sbb
lods
mov
push
imul
sbb
adc
and
inc
and
jno
or
adc
daa
dec
xchg
pusha
hlt
imul
xchg
cld
mull
aaa
mov
pop
or
or
arpl
adc
fdivp
ja
inc
shrl
movsl
cmp
cwtl
pop
iret
cmp
push
das
jp
in
lds
adc
or
ljmp
xor
cs
xchg
sti
jle
dec
push
xor
ss
cmp
pop
sub
out
mov
inc
in
mov
subl
lods
sbb
ja
lahf
add
aas
pop
lahf
sahf
sbb
push
ljmp
and
scas
mov
ljmp
or
cmp
jmp
pushf
das
popa
jo
mov
lock
pop
add
out
scas
dec
popa
lea
cltd
xchg
je
cli
cmp
mov
and
rorl
ljmp
aaa
gs
leave
fisubrl
subl
or
xchg
push
test
pop
in
jle
rcrl
test
jge
icebp
ja
mov
call
mov
sub
pushf
xlat
pop
jcxz
insl
aas
sub
and
es
adc
cmp
pop
dec
dec
adc
push
cmp
mov
xchg
loope
lea
add
jne
nop
repnz
ucomiss
sub
rolb
ret
mov
ds
movsl
inc
ljmp
ljmp
or
cld
out
rcl
aas
sbb
and
andl
les
push
mov
push
fidivl
push
call
jns
lret
aaa
sub
sbb
mov
xchg
pop
movsl
pop
push
and
shll
jno
ret
sub
int
mov
stos
jno
filds
fisubl
repnz
sub
pusha
push
xor
dec
xor
mov
scas
clc
jnp
ret
pushf
add
into
aad
jp
out
adc
and
mov
sarl
sbb
xor
add
aaa
insl
stos
cmp
xlat
xorb
ss
bound
test
mov
rcr
mov
xchg
out
sub
test
int
int
mov
pop
xor
insb
stc
cld
leave
test
mov
test
ret
stc
xchg
mov
popl
xor
aam
repz
js
mov
into
adc
push
jae
sbb
sbb
push
push
into
or
shlb
add
sar
sti
mov
cltd
cwtl
std
hlt
mov
jp
pop
clc
jp
in
scas
xchg
mov
clc
je
popa
pop
loope
adc
test
leave
scas
mov
pop
xchg
inc
jl
sub
pop
out
addr16
sub
cld
cmc
adc
cli
adc
icebp
xchg
nop
pop
aaa
jno
adc
out
cs
dec
cltd
out
ljmp
clc
bound
mov
pushf
sbb
jne
cmpsl
ret
xor
jns
clc
es
pusha
push
rolb
mov
jp
mov
fldl
cmp
mov
daa
fsubp
imul
test
sbb
xchg
pop
gs
cmp
jecxz
ja
mov
cmp
jo
add
fistps
mov
jbe
insl
rol
mov
iret
insl
sub
scas
cli
dec
cmp
hlt
xchg
jmp
sbb
dec
xchg
xchg
jbe
out
sub
dec
outsb
mov
add
test
inc
mov
adc
jge
sbb
xchg
dec
ret
add
repz
inc
push
rcl
pop
stos
fldl
push
xchg
jns
jle
add
fcmovb
add
lods
scas
std
xchg
or
lods
ljmp
mov
hlt
push
adc
cwtl
inc
sub
add
imul
add
xchg
push
iret
add
test
out
movsl
dec
ss
aad
xor
mov
mov
fimull
push
cmpb
or
ds
lsl
scas
adc
xchg
cli
xchg
pop
aad
lea
lcall
test
movl
push
sbb
mov
jb
push
out
repnz
jnp
movsb
popa
sub
cmp
add
out
xor
test
dec
mov
fcompl
test
xor
xor
pop
repz
fsubrl
pop
xor
jno
cmpsb
ror
in
jmp
ret
cmpsb
lahf
push
cmp
int
mov
call
notl
fmul
pop
adc
jg
das
lds
testb
or
adc
lahf
jl
fldcw
out
or
sub
lahf
xchg
jp
xchg
mov
repz
out
jecxz
addr16
pop
xor
cmp
test
aam
lret
fwait
inc
jp
xor
lds
roll
fiadds
lret
sub
or
enter
lret
and
pop
cwtl
aas
sub
hlt
int3
test
pushf
or
mov
adc
pop
sbbl
mov
ja
jo
mov
push
push
data16
mov
loop
out
out
jmp
jo
jmp
cli
sahf
in
push
mov
test
inc
lods
or
xchg
cmp
add
out
cmpb
xlat
inc
dec
cmp
ret
pop
fnsave
cld
lcall
sub
test
or
clc
mov
adc
ret
and
inc
mulb
aas
testl
fsubs
inc
sub
mov
rcll
insl
stos
and
fcmovnbe
daa
sbb
movsb
hlt
mulb
mov
dec
lods
rorl
adc
cmovp
pop
int3
mov
xchg
jmp
fcmovnbe
jnp
cmp
lcall
repnz
mov
xchg
mov
xchg
jecxz
inc
cmpsl
ja
mov
jle
mov
jno
xchg
inc
into
pop
jnp
scas
or
push
pop
dec
sbb
loopne
shlb
lods
in
cmp
sbbb
lahf
mov
inc
and
inc
push
lea
in
jg
insl
mov
imul
push
push
dec
fsubr
and
fwait
inc
mov
shll
dec
ja
push
icebp
shll
and
mov
outsb
sub
mov
aad
jne
outsb
fsub
stos
inc
jbe
insl
jmp
pop
or
pushf
sbb
lret
push
rorl
int
pop
stos
xor
into
mov
call
and
pushf
lea
ret
into
mov
jge
mov
xor
xor
sub
test
ja
lcall
xor
aas
ja
jmp
in
push
cmp
xchg
lahf
jno
add
jae
or
jecxz
push
mov
shl
or
cmp
jle
pop
stos
mov
test
sbb
or
and
inc
lock
int3
roll
inc
pop
test
into
rcrb
mov
fdivrs
mov
test
in
je
test
hlt
ss
sub
fwait
pop
imul
mov
inc
adc
test
sub
xor
mov
inc
pop
out
sbb
dec
cmp
xchg
idiv
inc
popa
adc
fs
pop
aaa
mov
dec
jnp
js
mov
and
pop
xor
push
aam
into
inc
cmpsl
mov
mov
add
xchg
shl
xor
adc
pop
fwait
aam
insb
jecxz
aas
pop
mov
inc
jnp
add
dec
movsb
loopne
cmp
cmpsb
jne,pn
aaa
pop
imul
stos
inc
xchg
negl
push
mov
sbb
inc
rorb
cmp
dec
jg
or
repz
cmpsl
cmpsb
inc
pop
cld
repz
push
sbb
dec
js
lea
xor
dec
rcrb
test
mov
and
test
mov
dec
int
push
lcall
mov
je
js
sub
xor
aas
cli
dec
shlb
pop
or
pop
shrl
sub
and
arpl
lods
nop
dec
jl
jmp
lods
mull
aas
sarl
dec
addl
out
mov
lret
pop
dec
movsb
mov
jo
cmp
nop
dec
lods
push
and
aam
and
jnp
sbb
daa
nop
sbb
popa
repz
cmp
push
xchg
fisttpl
out
lret
pusha
dec
enter
xor
push
ds
push
loop
in
mov
pop
imul
mov
add
int
mov
arpl
ljmp
xor
or
bound
push
pop
fcoml
ljmp
aaa
cwtl
roll
outsb
lea
pushf
sbb
je
movsl
xchg
movsl
test
pushf
pop
shll
notb
lods
inc
imul
pop
cld
rolb
les
mov
xchg
cmpsl
lods
push
mov
sub
xor
sbb
fcomip
mov
xor
or
xchg
not
or
in
add
popf
push
leave
shr
lret
and
sub
pop
adc
mov
js
mov
les
pop
into
adc
fsts
into
jge
ds
orb
cltd
xchg
jbe
cwtl
int3
mov
pop
sbb
icebp
cmp
stc
mov
cli
add
sbb
data16
xor
or
and
lcall
xor
or
cmp
enter
in
cmp
push
pop
movsb
or
in
ret
orl
lret
push
or
inc
cld
mov
jg
int3
xchg
mov
mov
test
xchg
mov
mov
roll
add
enter
mov
push
repz
stos
mov
xor
mov
push
std
int
sbb
sub
cs
dec
jg
xlat
mov
add
mov
scas
bound
lret
or
pop
fcoms
cli
jmp
lods
pop
jo
dec
jae
notb
or
aam
mov
mov
add
rcrb
movsl
sbb
fwait
popa
enter
incl
cs
mov
push
jae
jb
push
jae
mov
lea
aas
inc
aas
addr16
jnp
mov
dec
clc
mov
jb
mov
pop
mov
mov
iret
jecxz
cwtl
mov
mov
aaa
xchg
js
pusha
sbb
dec
xchg
push
inc
lret
xor
in
lret
lods
add
cmp
aaa
push
fld
mov
stos
or
mov
scas
dec
repz
pop
inc
inc
int3
or
movsb
iret
jo
xchg
outsb
int3
push
das
mov
in
adc
notb
mov
mov
jge
out
mov
call
xor
push
cmc
imul
xlat
fists
fisubl
mov
and
insl
inc
mov
mov
pop
in
imul
ds
cmp
shl
pop
incl
push
jg
mov
rcrl
in
dec
lods
sub
mov
mov
xor
jg
fs
add
inc
pushl
push
jo
ret
mov
push
movsl
xor
idivl
mov
cmp
inc
or
js
fdivr
jmp
rcll
addr16
dec
sub
jp
mov
loopne
iret
lds
mov
or
or
clc
decl
dec
dec
mov
mov
inc
cmp
adc
dec
icebp
xchg
mov
dec
and
bound
adc
jb
mov
insl
rcl
xchg
rorb
mov
add
add
mov
sarl
fiaddl
lret
ds
test
mov
cltd
pop
mov
shrl
mov
dec
imull
aad
stos
add
in
xchg
outsl
add
xor
mov
jl
out
lret
out
push
mov
or
out
cs
jl
jns
aad
loope
lcall
xlat
in
addr16
adc
nop
int
aam
sbb
in
insb
adc
loop
xchg
sub
mov
push
add
or
and
sub
and
das
ss
mov
push
scas
mov
xor
outsb
xchg
std
mov
push
mov
mov
std
cmp
jbe
or
jnp
or
xor
lret
mov
mov
xor
xlat
aas
insb
icebp
test
js
xchg
test
adc
hlt
out
outsl
stc
jns
xor
lcallw
or
lods
movsl
imul
aam
fcomps
jle
outsl
cli
lcall
into
insb
fbstp
aad
or
ret
pop
clc
mov
xchg
bound
push
ret
xor
sti
adc
stos
fldl
add
dec
xchg
pushf
call
mov
lahf
aad
sbbb
jecxz
xchg
or
iret
xor
ljmp
inc
ret
adc
pop
outsl
pop
in
add
xlat
subl
outsl
jl
repz
clc
and
sub
jbe
icebp
xchg
inc
pop
mov
sub
sub
out
test
pop
sbb
sbb
orb
fstpl
xchg
sbb
repnz
vpsrlw
test
rcr
scas
pop
icebp
testl
shl
gs
dec
icebp
cmpsb
ret
dec
inc
fs
out
js
out
mov
add
sahf
mov
enter
dec
out
xchg
mov
push
inc
sbb
push
cmp
jno
pop
mov
scas
dec
shll
cld
inc
xchg
pop
push
cmpsb
dec
push
fidivs
in
or
js
enter
inc
jns
inc
mov
xchg
sbb
mov
pop
sti
adc
dec
fimull
jo
pop
adc
sbb
adc
cltd
mov
sar
mov
cld
pop
lahf
addr16
sub
shrl
ljmp
cli
add
jl
or
cmp
or
jmp
add
pusha
push
cmpsb
dec
in
sbb
xor
or
loop
js
fiaddl
cld
imul
movsb
or
adc
repz
lcall
out
popa
and
out
in
data16
lret
jno
sbb
adc
shll
addr16
lahf
mov
jmp
ss
scas
push
cmp
in
and
xchg
clc
mov
lret
je
dec
sbb
in
sub
das
mov
adc
insb
push
mov
inc
push
xchg
in
mov
dec
sti
sub
mov
xchg
inc
push
cs
jne
test
mov
fldcw
pop
pushf
xor
push
mov
sub
popa
lock
je
xlat
xor
sub
and
aad
push
pop
fisttps
inc
insb
dec
lea
into
pop
push
jecxz
pop
mul
leave
js
xor
inc
popf
leave
ja
out
lret
mov
cwtl
lock
jbe
adc
pop
movsl
jg
mov
ret
xchg
nop
pop
outsl
xchg
push
xchg
sbb
pop
and
aam
xchg
mov
cmpsl
out
gs
xor
ret
inc
rolb
testl
mov
adc
leave
pop
scas
pop
push
pop
push
push
lods
push
mov
or
jns
bound
cli
cli
add
lret
push
data16
imul
xchg
aad
dec
jmp
icebp
es
sbbl
cltd
in
dec
cmp
lods
inc
bsf
ret
jmp
cmp
popf
in
arpl
out
add
loope
dec
dec
mov
jnp
lret
int
into
xchg
push
cmp
out
out
sub
scas
icebp
pop
cmp
add
repnz
lock
and
adc
inc
push
rolb
mov
repnz
scas
add
loop
rcl
jmp
sub
and
xchg
xchg
repnz
testb
aas
add
pop
xchg
out
into
rcr
push
arpl
cmp
xchg
mov
stos
mov
and
gs
outsl
lret
jne
pop
jno
fldcw
clc
out
dec
mov
cmp
inc
xor
xor
in
out
push
ret
scas
mov
xlat
inc
jbe
hlt
jmp
lret
lods
loopne
mov
fisttpll
stos
cmc
or
push
fwait
inc
in
mov
push
jl
leave
cmp
sbb
xor
imul
sbb
mov
pop
pop
and
adc
mov
pop
cld
orb
xchg
aad
or
pop
gs
sarb
popf
rep
and
aad
mov
jle
aad
cmp
sti
cmp
pop
psubsw
push
pop
inc
cmp
repnz
stc
pop
pop
dec
adc
or
inc
push
mov
cld
repnz
fsubs
and
push
inc
push
cmp
rorl
scas
cmp
loopne
cld
ss
aaa
dec
insl
jns
rcrl
rcrl
pop
std
xchg
and
mov
repnz
mov
loopne
push
xor
xor
out
fwait
std
cmp
sahf
inc
pop
and
mov
test
sahf
or
fwait
cli
std
inc
dec
adc
shrb
inc
pop
jae
in
cwtl
jmp
test
adcb
ja
adc
fisubl
sub
push
pushf
xor
rorb
mov
into
pop
stos
sub
add
jns
cs
and
lock
movb
mov
mov
mov
cmpsb
push
or
push
call
cmc
sahf
jne
fcmove
cs
push
cmp
out
iret
stc
je
dec
cmpsb
mov
push
lcall
or
or
lods
hlt
mov
sub
mov
lods
or
out
popa
pop
xchg
lret
mov
pop
movsl
push
xor
lcall
jbe
int
jo
mov
dec
jbe
mov
dec
rolb
mov
imul
xor
pop
adcl
mov
adc
push
dec
mov
mov
loopne
xchg
out
loope
jmp
dec
jl
mov
adcl
mov
pop
jge
pop
mov
inc
push
cmp
mov
jo
jae
in
vmovdqa
and
insl
cli
inc
jp
dec
movsb
push
jbe
js
adc
repnz
loope
adc
jl
pop
pop
xchg
adc
js
dec
je
mov
cwtl
subl
out
or
push
xor
jmp
cmc
cvtps2pi
mov
andl
stc
out
pop
xlat
add
popa
xor
lea
inc
sbb
cmp
movsl
fidivrs
cmp
ds
in
xchg
ss
push
bound
aad
mov
dec
mov
lods
mov
lret
xor
mov
xchg
pop
out
mov
flds
mov
pusha
push
xor
mov
inc
sti
addr16
xchg
stos
sub
jp
test
mov
lods
add
vmread
in
xchg
mov
js
or
and
lcall
jo
dec
or
lds
sub
shlb
xlat
add
mov
mov
mov
lret
push
aad
nop
insl
rcl
out
sarb
inc
mov
add
icebp
out
ret
push
xor
cld
loop
push
in
mov
in
pusha
sbb
mov
movsb
push
cmc
test
insb
subl
cli
fdivs
sbb
insb
in
sub
movhps
clc
jmp
mov
bound
push
sub
xor
fwait
lea
int3
test
test
fdivrp
pop
and
outsb
push
and
mov
sub
sahf
xchg
mov
push
loopne
cs
mov
cmpsb
push
mov
jmp
dec
pop
mov
dec
fimuls
lods
jbe
push
push
fistpl
int3
pop
popf
xchg
cmpsl
add
rolb
or
xchg
mov
loopne
mov
cwtl
sub
mov
icebp
jp
das
lret
mov
lret
inc
ret
fs
inc
jno
fsts
adc
or
iret
mov
fimull
stos
outsl
ds
test
and
and
dec
jbe
loope
jmp
dec
dec
outsl
push
cmp
rol
and
cmc
negl
xchg
in
or
jge
loope
int
and
xchg
cmp
imul
fdivl
xchg
adc
and
ss
add
push
dec
out
xlat
pop
iret
xor
repnz
or
fidivl
cli
xor
cmp
testb
fmuls
out
iret
lods
cmp
mov
cmp
mov
mov
jle
fwait
push
or
xchg
xor
xor
mov
aaa
lods
sub
insl
add
std
iret
js
lret
fucomip
sub
std
stos
stos
pop
jecxz
adc
aad
iret
inc
pop
fwait
stc
loope
in
lcall
or
out
sub
adc
repnz
xor
add
scas
xchg
fdivrs
cmp
hlt
dec
xlat
outsb
add
bound
ljmp
in
mov
mov
jo
adc
int
in
add
repz
ss
leave
rorl
stos
jno
mov
mov
jne
pop
mov
inc
ds
int3
inc
dec
bound
add
mov
cli
orb
sub
cmc
inc
inc
test
repz
rcrb
loopne
mov
mov
dec
add
mov
enter
out
inc
int
mov
mov
hlt
lret
pop
outsl
hlt
sub
js
xchg
cmpsb
cmp
inc
inc
xchg
fadds
movsb
cs
bound
or
dec
push
out
orl
mov
imul
cmc
aam
scas
mov
xor
xor
cmp
mov
stos
push
daa
dec
xchg
adcl
inc
jecxz
cmp
jg
cmp
mov
sub
push
push
sub
jmp
dec
shrl
or
add
jne
iret
push
jge
or
sbb
mov
mov
fadds
push
sub
aad
or
outsl
andb
mov
lret
and
and
pop
mov
and
mov
dec
pop
faddl
push
pop
aas
jecxz
sarb
dec
or
fldl
xor
clc
test
and
or
fsubrs
fwait
stos
in
inc
dec
ss
cmp
sub
sbb
mov
or
cmp
and
xor
int3
inc
mov
adc
iret
xchg
add
jle
scas
and
iret
loopne
dec
mov
out
xchg
aad
sahf
push
fnstcw
jmp
enter
rcrl
xor
iret
ss
jecxz
jbe
xchg
and
jno
jle
push
push
imul
mov
mov
mov
lahf
mov
repnz
cmpsl
outsb
mov
and
mov
incl
mov
shr
mov
cmc
popa
sub
mov
andb
mov
push
adc
movsb
adc
mov
lods
inc
enter
sub
push
and
xor
push
scas
sub
mov
movsb
adc
pop
sbb
and
xchg
inc
scas
mov
dec
push
mov
push
inc
int
daa
popf
shll
ret
add
adc
dec
mov
pop
rcll
mov
push
fldt
clc
stos
in
fmul
cmp
adc
and
add
sub
jle
or
dec
out
sbb
add
into
pop
lods
sub
out
cmp
xchg
fstps
aam
stos
fs
incl
jl
jge
add
jg
test
sti
ret
xchg
loop
fisubrs
int
enter
adc
add
xchg
lret
testb
fnstenv
inc
mov
lds
out
dec
loop
dec
cmpsl
cmp
and
lock
das
out
add
sbb
cwtl
lret
outsl
dec
aam
xor
jae
fdivs
cld
leave
dec
ja
and
pop
mov
jp
jle
push
pop
lds
fisubs
cmp
push
popf
fstl
xchg
jo
xchg
sarl
pop
lock
call
notl
mov
push
negl
cmpsb
lcall
xchg
cmp
btc
pusha
dec
fwait
jecxz
rcrl
push
mul
jb
inc
xor
adc
imul
std
lret
mov
je
cmc
sahf
mov
mov
mov
cli
cs
jle
adc
ja
rcl
es
bnd
fcomi
ds
sub
test
dec
call
dec
fdivrl
ficoml
popa
inc
aam
jecxz
mov
jl
cmp
dec
bound
adc
test
mov
sbb
mov
lcall
or
cmp
adc
add
push
lock
je
aad
jb
sbb
xchg
test
pop
out
adc
xor
lret
push
lea
cmpb
mov
dec
pop
adcl
xor
mov
jb
loope
push
xchg
pop
push
int3
xor
jb
push
adc
dec
mov
lret
push
ljmp
cmp
xchg
mov
mov
cmpsl
test
subb
add
fcompl
inc
adc
xchg
enter
push
outsb
sbb
negl
xlat
adc
shll
int3
mov
iret
add
outsl
stos
cmpsb
outsb
cwtl
mov
mov
mov
es
jl
xchg
adc
in
das
stos
mov
pop
out
pop
mov
and
negl
adc
cltd
imul
dec
lea
lret
call
movsb
xchg
rclb
mov
jnp
test
jg
jo
cld
fs
mov
adc
ret
lods
movsl
and
add
jmp
pop
or
pop
outsb
mov
stos
pop
test
push
xchg
movsl
adc
pop
sub
mov
xlat
into
xchg
mov
lods
fiadds
fidivrs
mov
pop
in
dec
ja
mov
and
xor
xor
in
js
mov
loopne
dec
aas
inc
fs
adc
dec
mov
insl
mov
push
enter
fst
mov
cmpsb
arpl
xor
or
rcrl
out
inc
dec
int
sub
mov
lret
movsb
cmc
jecxz
pushf
fnsave
xchg
fsub
roll
mov
leave
out
mov
push
jge
cmp
pop
mov
adc
rcl
mov
mov
and
inc
cmp
iret
js
push
push
lea
in
fstl
or
mov
sarl
xor
es
or
pop
hlt
push
push
leave
lret
adcb
pop
cmpsb
push
mov
lcall
add
cmpsb
in
pop
inc
mov
adc
sbb
adc
or
clc
aam
pop
mov
shll
sbb
jno
push
arpl
shr
and
or
pop
jo
out
jecxz
stos
jp
inc
sbb
xchg
adc
test
xchg
popa
sub
inc
out
jnp
repz
xchg
xchg
pop
xchg
test
test
or
ficoml
mov
inc
and
ljmp
jno
jmp
jae
jle
inc
in
or
mov
mov
dec
sub
add
test
andl
shr
int
les
popa
imul
jnp
cmp
cmc
add
test
or
adc
inc
ljmp
push
lods
out
dec
cltd
in
pushf
xchg
pop
mov
movsb
pminub
xchg
cltd
aas
cmp
popf
mov
or
xor
cwtl
jecxz
lret
inc
mov
les
test
mov
mov
cmc
out
sub
mov
mov
ljmp
cld
add
adc
fidivl
inc
orb
cmc
and
pop
test
xor
dec
xorb
into
adc
int3
in
lret
xor
mov
inc
and
mov
rcrl
dec
push
ret
fwait
cmpsb
decb
pop
mov
movsl
pop
out
clc
cmp
lcall
push
cmp
inc
mov
or
cli
and
cmpsl
push
push
addb
or
push
fwait
imul
imul
lods
inc
push
jecxz
aaa
mov
inc
cmp
cmpsl
pop
mov
call
iret
mov
jo
in
jle
or
cmp
dec
ja
inc
jle
ret
inc
push
mov
xchg
stc
inc
scas
std
lods
je
popf
pushf
lods
mov
int3
xor
jp
jns
out
adc
fcoml
mov
jg
fwait
repnz
inc
adc
cmpsl
mov
aad
mov
mov
jp
js
add
mov
push
call
push
mov
jnp
loopne
les
mov
sub
ret
sub
mov
into
push
out
popa
or
xchg
stos
xlat
pop
inc
lock
mov
mov
jecxz
adc
xchg
fisttpl
and
mov
or
add
cmp
xor
cld
xor
jbe
xor
add
sub
cmp
dec
sbb
cmovnp
sbb
pop
inc
call
jno
repz
in
push
xor
add
jns
xchg
daa
xchg
daa
lock
xchg
jnp
mov
xchg
mov
xchg
adc
dec
and
adc
ficoml
pusha
faddp
adc
cs
fcomps
sbb
push
xor
jecxz
pop
push
xor
xchg
inc
out
and
adc
aam
sub
xchg
in
fcmovbe
pop
je
imul
into
xor
lret
fldenv
insl
cmp
dec
mov
sbb
pop
or
jb
int3
dec
fists
xchg
fistl
mov
in
lock
jb
or
xor
xchg
pop
in
cltd
cmpsb
lahf
ror
adc
mov
xor
lret
xor
pop
call
xor
pop
cli
fs
xchg
aad
outsb
out
jle
mov
ret
jb
in
adc
loopne
and
out
lcall
jns
adcb
ret
notb
in
mov
clc
dec
dec
dec
jb
lahf
adc
fbstp
sub
clc
scas
xchg
add
cld
popa
push
clc
gs
jb
addb
pop
add
lds
xchg
je
jb
ss
jns
repz
test
and
inc
inc
mov
das
in
out
sbb
push
repz
jle
orl
sarb
cmp
rcll
push
or
pop
mov
cmp
or
xchg
sbb
int3
cmp
mov
sbb
push
lock
outsb
pop
and
arpl
pop
add
bound
sbb
aam
scas
add
inc
cmp
mov
lds
rcrl
xchg
or
loopne
mov
scas
pop
data16
fstl
setnp
mov
xchg
push
in
lret
push
shrb
mov
fsubl
divb
inc
popf
jbe
lock
inc
sahf
pop
jne
daa
lods
mov
and
add
jl
addr16
adc
and
jae
or
push
mov
xlat
mov
in
hlt
or
and
dec
add
jp
sti
add
sub
push
rorl
movsl
pop
cmp
mov
loopne
cmpsb
pop
adc
stos
mov
mov
jne
testb
and
insb
xchg
pop
inc
sub
jb
cld
roll
jecxz
in
cmpsb
outsl
popl
ljmp
mov
out
loopne
ss
repnz
sub
xchg
jp
dec
iret
inc
fimuls
bound
mov
inc
cs
and
jo
addr16
pop
jb
pop
push
xlat
das
nop
sbb
dec
xor
jae
stos
and
lds
inc
push
fs
enter
sbb
xchg
mov
xchg
sar
sub
jle
sahf
mov
lock
insb
sbb
sbb
dec
xchg
push
cmp
test
ss
jbe
sbb
sub
jb
test
xchg
pop
mov
push
mov
ss
lods
cmc
test
xchg
pop
sti
out
in
jl
dec
and
es
xchg
gs
jb
popf
jg
adc
sbb
pop
pop
lock
es
xor
push
popa
and
out
inc
jb
pop
inc
pop
out
dec
pop
cmp
lods
pop
enter
cmp
sub
mov
cli
cmp
fwait
cs
or
js,pt
sbb
stos
mov
sbb
enter
test
mov
sbb
mov
mov
sarb
add
xchg
xlat
xor
inc
sbb
outsb
ret
cli
das
pop
stos
xor
mov
cld
stos
dec
inc
mul
das
pop
pop
sub
pop
xchg
leave
sbb
mov
sub
pushf
mov
xchg
add
je
cmp
je
pusha
cmpb
sahf
aam
mov
popf
cmpsl
dec
and
test
and
aaa
pop
mov
inc
sub
xchg
shrb
icebp
icebp
sub
aad
xor
shr
cmpb
outsb
dec
pop
nop
xchg
loope
sub
jo
aam
or
mov
nop
pop
and
push
or
add
scas
jns
cmp
adc
imul
das
dec
mov
cmp
adc
movsl
out
mov
mov
out
add
add
dec
jp
pop
xlat
ret
lods
lods
add
mov
jo
and
mov
clc
int
rcrb
fsubp
xchg
dec
bnd
lahf
aam
mov
fistl
iret
xchg
mov
ss
insl
pop
mov
roll
mov
and
adc
pop
or
lock
fadds
arpl
adc
cmp
test
push
std
es
dec
inc
inc
cltd
adcb
cmp
sub
inc
lcall
push
andl
mov
xlat
jmp
xchg
mov
fbstp
sub
xchg
sub
imul
and
lock
popf
cmp
into
push
mov
fcompl
aas
pop
xor
mov
push
out
pushl
push
aam
fst
push
imul
adc
sarl
dec
out
jg
imul
loopne
xchg
cmpsb
dec
clc
das
sub
mov
add
enter
push
loope
stc
mov
out
mov
pop
sub
cmp
pop
ljmp
xor
lods
cmc
add
mov
les
xlat
js
out
sbb
mov
fistl
sarb
or
pusha
add
mov
or
xchg
push
in
icebp
dec
stos
insl
adc
pop
mov
and
adc
cmpsb
mov
and
sub
out
sub
loopne
filds
mov
jp
xchg
mov
jns
nop
lea
outsl
ror
clc
movsb
dec
mov
jg
movsb
jg
aam
lea
jp
xor
inc
aaa
insb
lds
sahf
push
mov
out
fnsave
mov
out
cs
jg
dec
mov
jmp
xor
mov
sbb
pop
add
dec
dec
mov
bound
or
jmp
ret
mov
es
stos
push
js
rcrb
js
in
rcrb
mov
add
mov
dec
cmpsb
pop
roll
in
or
inc
lret
mov
mov
aam
pop
sarb
adc
push
test
mov
inc
jmp
mov
push
sbb
xchg
dec
jne
mov
xchg
xor
fdivrs
or
shl
lds
das
pop
addl
mov
xor
adc
fs
imul
adc
ret
pop
xchg
xchg
mov
push
movsb
sbb
scas
test
cmp
es
jp
leave
mov
pop
test
lret
pop
dec
sub
mov
pop
mov
pop
or
sub
sbb
ret
movsl
mov
addl
mov
mov
mov
pop
insb
movsb
faddl
xorl
mov
dec
pop
scas
cmpsb
pop
inc
sbb
cli
or
fnsave
xor
jge
xor
shll
pop
pop
jle
mov
mov
loope
pop
dec
mov
dec
push
xor
xchg
dec
sub
fs
test
outsl
jne
xor
or
push
mov
jno
xchg
pop
stos
pop
or
stos
mov
in
dec
xchg
inc
add
test
out
jnp
pop
popf
imul
and
pushf
imul
mov
fidivl
pop
fdivs
fldt
aam
inc
add
pop
fcmovbe
cmp
das
cmp
out
mov
mov
push
or
push
ffreep
scas
fsubrl
lods
dec
mov
cli
ret
test
pop
jns
xchg
repz
ret
sbb
shrl
clc
jmp
adc
xchg
in
mov
xchg
out
mov
and
push
ja
add
lret
outsl
je
outsl
xchg
cmp
fs
fcomi
cmpsb
fisttpll
cmp
lock
sub
vcvtsd2si
jmp
mov
inc
pop
popf
mov
add
jb
into
or
pop
out
lret
jne
jb
sub
lock
insl
mov
popf
aaa
int
sbb
push
mov
or
inc
jl
mov
cli
movsl
and
pop
or
mov
lds
dec
mov
xchg
push
dec
mov
push
mov
pop
pop
clc
inc
in
in
jb
cli
jl
test
xor
incb
push
dec
pop
mov
insl
jge
and
inc
out
mov
and
mov
dec
hlt
jge
pop
inc
sbb
jnp
out
inc
daa
jb
mov
adc
sbb
inc
pusha
inc
lcall
cmpsb
xor
sub
shrb
sub
cmp
jg
cs
lret
pusha
push
mov
add
xor
mov
imul
xchg
mov
pusha
iret
inc
in
scas
mov
add
sub
into
and
and
enter
or
xchg
sbb
push
jg
xchg
lret
cmp
out
cmp
and
in
pop
push
repnz
sbb
xor
sti
lcall
icebp
mov
sub
and
xchg
xchg
ds
jnp
pop
jle
fnstcw
and
pushf
mov
jmp
push
mov
push
push
push
push
mov
std
xchg
je
andl
and
pop
shl
adc
xchg
js
xchg
fs
fldcw
lret
sbb
mov
cmc
push
test
add
lods
adc
jo
mov
adc
adc
mov
add
mov
sbb
rorb
push
clc
pop
mov
jecxz
sub
leave
bound
nop
jl
mov
ret
pop
movsl
push
dec
xchg
xlat
pop
pusha
mov
push
push
mov
inc
nop
sub
pop
int3
das
cmp
subb
sbb
loopne
and
cmp
xchg
add
mov
xchg
and
sbb
stos
and
xor
xorl
test
cmc
addl
cmc
lahf
lods
insl
xchg
outsl
push
fs
loope
cld
es
jne
xchg
xchg
fcoms
xor
stos
cmp
sti
cmp
mov
dec
addr16
addr16
sbb
pop
mov
push
repnz
jnp
adc
jbe
jb
dec
int
mov
xchg
mov
xchg
add
pusha
sbb
addb
sbb
mov
jecxz
rolb
mov
mov
or
inc
addr16
mov
push
jb
cmc
cmp
inc
pop
aam
fcomip
shlb
add
mov
es
mov
ds
das
pop
mov
xchg
sahf
jae
xorb
add
fdivl
adc
sbb
pop
pop
push
sbbb
mov
idivl
jle
es
lret
mov
mov
ljmp
pop
in
pop
inc
pusha
mov
outsb
sar
outsb
pop
fdivrs
aas
fdivrs
dec
xor
loope
sub
xchg
xchg
loope
cmc
jae
sbb
lret
adcl
push
cmp
cmp
sbb
ljmp
or
popa
inc
stc
js
filds
push
xchg
pop
pusha
cmpsl
enter
lds
cmp
aaa
fstl
mov
sub
or
popa
adc
jg,pt
shl
mov
inc
sarb
mov
call
add
cltd
sub
inc
mov
and
es
out
bound
js
cmp
lods
cmp
push
jge
jae
ret
inc
sbb
test
mov
xor
ss
loop
inc
jle
test
mov
xchg
enter
bnd
cltd
sbb
add
mov
add
inc
pop
jo
roll
pop
int
outsl
push
xor
inc
mov
jbe
xor
add
pop
lret
jb
scas
insb
adc
cmp
and
and
sbb
out
push
push
sbb
bound
enter
and
add
aaa
and
outsl
push
es
pop
aaa
xchg
xor
imul
hlt
rcrb
orl
sub
cwtl
jo
lret
hlt
add
fimull
outsl
sub
dec
adc
xchg
lret
mov
sbb
sub
mov
ljmp
or
cmpsb
mov
or
xchg
loopne
jo
or
pop
xchg
inc
jno
inc
jb
popf
je
ret
dec
inc
popf
jns
and
in
ja
pop
xchg
inc
sbb
aas
mov
xchg
ss
mov
hlt
stos
xchg
cld
add
jle
mov
add
aaa
xchg
mov
pop
xlat
cli
add
jno
jnp
popa
loop
fmul
fnstsw
push
aam
outsb
ja
mov
jp
movsb
in
in
pop
fildl
add
je
lea
and
arpl
xor
cmp
lock
jmp
leave
mov
lds
in
add
inc
lcall
dec
rcrl
mov
imulb
push
ret
pop
js
cmpsb
mov
arpl
push
xchg
sbb
lahf
test
add
inc
inc
mov
sub
mov
cmp
out
pop
xchg
adc
cmp
cmpsl
lret
shrb
daa
cmc
inc
xchg
mov
data16
sub
push
fisubs
adc
sbb
cli
mov
lock
ret
or
jae
stc
insb
push
dec
push
or
scas
cmpsl
daa
sub
xor
int3
lahf
test
pop
adcl
aas
add
pop
movsb
out
incl
sar
ss
out
push
loop
sub
xchg
mov
cmpsb
pop
scas
insb
int3
lcall
mov
sub
sbb
repz
push
test
idivb
mov
dec
mov
jb
ret
mov
stos
repnz
jg
jl
enter
hlt
pop
sbb
imulb
dec
mov
mov
sub
sub
xchg
push
mov
jmp
les
add
push
fidivrl
sbb
movsb
mov
xchg
jmp
adc
push
mov
jl
jo
hlt
jmp
or
fnstcw
fcoms
mov
push
or
xchg
mov
and
movsl
call
cmp
aaa
das
int
jo
adc
clc
xchg
push
mov
adc
inc
call
fimull
cmc
lret
pushf
fimuls
fsts
cmp
inc
push
xor
in
imul
in
inc
xlat
dec
into
add
cmp
ljmp
mov
sbbl
ror
jmp
pop
imul
out
cmpsl
rolb
aas
push
and
ret
adc
fdiv
push
pop
pushl
pop
push
jl
data16
cmpb
cli
insl
imul
cmp
cmp
test
aam
jns
push
divb
sub
sub
or
scas
sahf
shl
popa
jecxz
mov
pop
push
sbbb
shlb
out
dec
lds
pop
in
jg
call
cmc
or
rcrb
push
or
mov
loop
mov
and
addl
jbe
adc
rcl
nop
and
adc
cli
sbb
std
fdivr
clc
and
in
test
lds
pop
int
or
cmpsl
fadds
jo
outsl
pop
dec
addr16
icebp
inc
pop
call
dec
scas
jecxz,pt
mov
inc
mov
mov
loope
push
fbstp
cmp
fwait
add
lods
fcos
push
scas
mov
xchg
sub
mov
sbb
pop
mov
jg
mov
hlt
sarl
dec
adc
mov
cmp
push
cmpsl
mov
adc
xadd
and
xor
sbb
mov
add
add
popf
xchg
negl
sbb
dec
mov
je
scas
pop
push
lret
cmp
test
mov
mov
and
and
push
shll
jmp
push
mov
jg
cmpsl
adc
push
cmp
popa
jns
stos
mov
jnp
push
add
insl
jmp
push
jp
pop
test
imul
dec
mov
and
js
in
jbe
xor
iret
push
mov
fwait
shll
mov
dec
insl
add
mov
jo
inc
pop
push
cmp
pushf
fiaddl
lahf
or
sub
lcall
cmp
iret
dec
jp
xor
push
xchg
pop
lods
sub
lret
mov
cld
clc
bound
and
out
fildl
mov
ja
cli
std
sbb
jl
leave
lock
cmova
add
inc
roll
lds
rorl
mov
pop
push
xlat
push
shr
sbbl
adc
mov
sar
or
adc
cmp
pop
sub
xchg
inc
fistl
xchg
push
adc
aad
dec
add
lods
cmp
test
mov
jnp
dec
out
jno
jne
aam
adc
dec
dec
inc
gs
dec
xchg
or
jmp
dec
es
pop
test
enter
xchg
or
popf
jae
xchg
leave
pop
repnz
pop
push
cmp
rorb
andb
bound
sti
lret
pusha
test
mov
aad
sub
imul
gs
icebp
in
push
das
jb
add
mov
icebp
or
xchg
lcall
loope
sarl
lcall
push
jns
add
adc
push
sti
pop
aam
inc
dec
stc
fldl
add
les
mov
add
shll
ret
xor
mov
add
ss
popf
call
cld
inc
leave
cmp
arpl
enter
xor
ret
sahf
pushf
arpl
mov
mov
adc
xchg
lock
mov
and
mov
jo
popf
xchg
or
andb
es
sti
icebp
jae
test
mov
mov
test
imul
pop
dec
sbb
inc
decb
add
das
decl
fistpl
roll
gs
jp
outsb
cmpl
mov
out
cmp
mov
sti
sahf
stos
inc
inc
lock
cmp
sub
das
fiaddl
cmp
sbb
daa
push
push
outsb
loop
repnz
pop
arpl
dec
xchg
loopne
mov
and
roll
call
dec
repz
ds
or
fiaddl
stc
jnp
aam
mov
xchg
inc
dec
xor
and
test
jge
sub
aas
lret
and
ljmp
push
popf
cltd
sub
add
sbb
test
in
lock
popf
xchg
lds
dec
mov
cmp
cmp
push
sbb
out
mov
jl
pop
loope
adc
fs
cmp
pop
int
repz
push
mov
insb
cltd
jg
cmp
push
or
shll
sbb
jg
sbb
das
sub
push
ror
cltd
mov
insb
xchg
fldt
jae
ret
arpl
cli
or
test
ret
into
jecxz
in
out
add
sarl
call
and
mov
hlt
outsl
jne
inc
in
push
cld
outsb
push
rcrl
mov
inc
mov
mov
clc
inc
ret
xor
pop
cs
ficompl
cltd
pop
jo
or
cmp
loopne
gs
shrl
cmp
dec
mov
push
rolb
jmp
jo
inc
ret
rcll
loopne
push
push
mov
fcmove
xchg
inc
mov
inc
stc
pop
scas
leave
jo
fstps
test
jl
int
jb
mov
cmp
cmp
in
das
mov
dec
mov
lret
addr16
ljmp
jae
push
cmp
bound
cmp
sub
rorl
mov
movsb
xchg
sbb
add
fcoms
insb
outsl
adc
cmp
or
lret
aaa
stc
dec
bound
mov
push
bound
or
push
mov
insb
dec
xchg
jb
test
push
in
sub
jmp
js
dec
sub
push
mov
mov
mov
imul
fists
mov
xchg
fbld
xor
test
mov
adc
lea
dec
scas
push
push
xlat
rol
jp
aad
fstps
mov
scas
or
xchg
mov
xchg
sub
mov
sub
outsb
sbb
push
dec
mov
or
sti
dec
or
leave
clc
ljmp
out
pusha
scas
push
adc
adcb
aaa
add
fwait
adc
adc
ja
jl
xlat
imul
cmp
popf
arpl
notb
imul
loop
xchg
mov
movsl
add
fstpl
or
mov
test
mov
jne
adc
dec
lret
push
lss
pop
loop
mov
fdivl
fs
das
fsubrl
aaa
or
mov
jle
test
mov
enter
ss
fimuls
inc
dec
mov
jne
fsts
xchg
and
cmpl
or
inc
hlt
cmc
call
mov
dec
pusha
dec
adc
mov
lcall
xchg
jns
adc
mov
cmc
out
and
fucom
and
lods
shrb
mov
sub
and
dec
outsl
aad
dec
sub
xchg
subl
ss
jno
nop
sub
mov
arpl
test
dec
fdivrs
shrl
ja
pop
push
insb
outsl
inc
pop
loop
outsb
add
daa
test
decl
dec
test
jae
jl
imul
rol
popa
and
stc
sub
sub
test
roll
adcl
jbe
jle
pop
rolb
ja
loop
push
pop
mov
fsubs
mov
outsb
pop
jno
dec
insb
push
stos
xchg
daa
gs
pop
jle
adc
xorl
push
mov
ljmp
or
cli
pop
pop
or
jp,pt
call
push
sbb
ljmp
mov
inc
xor
fs
stc
loope
data16
sub
xor
addb
mov
mov
ds
xor
or
cld
cmp
ror
out
lret
adc
push
in
add
pop
adc
jge
iret
daa
cwtl
xchg
add
pushf
testb
push
and
cmp
outsb
fistpll
je
pop
xchg
pop
fisubrl
inc
pop
ror
mov
sub
dec
pop
add
mov
pop
and
das
push
dec
out
pop
adc
and
xchg
test
pop
pop
xor
aad
lahf
outsb
cmp
jmp
xchg
jecxz
mov
pop
push
es
jecxz
add
cmp
addl
or
data16
imul
imul
jo
sbb
mov
notb
sub
ljmp
push
dec
fimuls
cmp
in
push
mov
mov
sub
repnz
jge
aaa
pusha
outsb
mov
lahf
aad
sbb
loop
push
sbb
inc
xor
fisubrl
cmp
or
iret
cwtl
sub
adc
jne
push
mulb
daa
lock
push
xchg
jl
in
pop
test
jnp
and
decl
adc
sub
test
das
roll
insl
xor
push
rolb
shl
inc
sti
dec
jns
aas
add
lods
xor
lods
jmp
mov
aaa
and
stc
hlt
jmp
pop
or
adc
pop
pop
jge
rcrl
cs
mov
jg
mov
sbb
jmp
les
bound
scas
pop
enter
cmpsb
mov
sbb
jl
testb
clc
je
mov
mov
fimull
stos
out
cmp
fwait
test
jl
pushf
fwait
add
push
pop
enter
pop
mov
subl
mov
cli
jl
imul
pop
adc
mov
mov
movups
mov
imul
cmp
push
sbb
push
sub
sub
loopne
sub
add
xchg
push
sub
adc
jnp
xor
rcrb
ja
stc
pop
push
mov
fistpl
clc
sub
xorb
cmp
mov
int
sbb
jb
lret
mov
xchg
imul
jge
loop
gs
sahf
fisubrl
cmp
adc
rcrl
mov
jmp
adc
adc
xor
and
push
loop
cmp
mov
xchg
jg
mov
lret
sti
xchg
adc
xchg
xor
xor
dec
outsl
add
ss
nop
leave
add
aas
loopne
lahf
push
and
cmp
dec
loopne
pushf
scas
imul
mov
cmpsl
clc
ds
or
leave
cmpsl
push
pop
mov
mov
insl
push
push
mov
sub
stc
sbb
in
scas
pop
je
mov
pop
xchg
into
dec
aas
push
push
xor
sbb
dec
dec
int3
movb
hlt
leave
sub
adc
add
fisubrl
jecxz
js
jbe
cmp
push
scas
repz
icebp
xchg
lahf
loop
mov
fwait
sub
mov
cld
ds
test
movb
cmp
int
mov
jmp
mov
push
sub
mov
lea
loopne
sahf
test
test
lds
sub
mov
pmulhw
addr16
pop
aam
ljmp
inc
mov
icebp
iret
loopne
outsl
mov
sub
sub
lfs
xchg
and
icebp
push
enter
out
aad
leave
loopne
jp
inc
xchg
into
pop
sub
aad
int3
adc
movl
int
jmp
jle
rorb
test
sbb
and
in
test
lret
xchg
cmpsb
pop
mov
sub
add
jbe
testl
jle
fwait
leave
loopne
loop
bound
adc
pop
mov
jg
int3
lret
xchg
loopne
or
mov
adc
cmp
rclb
cltd
fwait
fs
das
or
pop
in
mov
ds
outsl
fs
les
jl
faddp
push
stos
or
test
xor
dec
mov
dec
or
test
add
rorl
pop
sahf
xchg
in
jb
daa
inc
push
jg
leave
or
lret
pop
scas
cmc
int3
xor
pop
jnp
arpl
pop
jg
clc
lcall
insb
cmp
insl
shlb
jecxz
cmp
mov
dec
std
mov
out
daa
cmp
mov
jne
adc
cmp
cmpsl
sub
daa
lcall
repz
ss
in
pop
push
clc
loop
out
es
jo
shr
mov
pop
shlb
pop
into
push
mov
mov
sbb
jg
xor
pop
inc
rcr
test
popf
or
movb
ss
pop
jle
sbb
mov
inc
push
jnp
jmp
cmp
mov
scas
xchg
testb
mov
ja
psrld
outsl
pop
out
lcall
jmp
test
cmp
int3
inc
loop
incl
imul
imul
or
and
loope
mov
mov
push
pop
push
lds
push
cld
stc
add
xchg
pop
cmp
sbb
inc
syscall
pop
out
dec
cmp
add
lods
gs
sbb
sar
stos
sahf
in
push
or
push
pmullw
loope
fdivrp
mov
dec
and
popf
dec
call
pop
leave
hlt
icebp
data16
xchg
sub
je
lods
push
insb
popa
icebp
or
enter
jne
lret
ret
pop
mov
fmuls
inc
jae
mov
sub
decl
int
out
add
jno
fildl
jae,pn
mov
cmp
or
jb
dec
dec
or
xchg
mov
orb
dec
jo
inc
or
gs
push
xchg
notb
mov
test
lods
xchg
pop
mov
xlat
mov
mov
mov
dec
cltd
pop
adc
lds
ret
ds
pop
mov
pop
mov
sub
cmpl
xchg
fcmovb
addr16
jecxz
repz
jb
inc
scas
mov
mov
popa
cmpb
int
mov
push
mov
pushf
fdivs
pop
mov
push
and
cwtl
jbe
mov
pop
ljmp
fiaddl
xor
cmp
jb
push
pushf
xchg
mov
fxch
cmpsl
cmp
mov
test
mov
cmp
arpl
subl
sbb
imul
cmovne
cmp
insb
dec
aad
mov
or
lds
dec
scas
mov
dec
sub
add
inc
push
notl
lret
movsl
es
jno
sbb
push
pop
lret
clc
faddl
cmp
arpl
or
shr
jmp
fistpll
sub
repnz
mov
inc
push
sbbl
repz
movsb
jl
inc
xor
mov
out
daa
xor
test
mov
int
adc
popa
aas
rorl
dec
inc
cmpsb
add
das
cld
mov
repnz
mov
mov
in
scas
lcall
outsb
jge
xlat
hlt
test
in
fnstsw
mov
aad
repnz
dec
ss
dec
jle
xor
scas
sub
lcall
ljmp
dec
xor
inc
pop
daa
or
lcall
or
mov
adc
inc
sbb
cs
stc
cmp
sbb
ret
ja
adc
stc
cmp
and
xor
pop
stos
pop
stos
rorl
sub
inc
mov
sub
inc
sub
lds
or
lea
push
dec
cmc
mov
addb
ja
enter
inc
jns
loopne
sub
mov
jmp
sbb
xchg
mov
mov
push
movsb
out
inc
arpl
mov
mov
fstps
test
addr16
addr16
jnp
xor
addr16
pop
clc
lea
cmp
adc
inc
test
add
sti
test
cmc
pusha
mov
fcoms
mov
out
push
outsl
fcomip
ds
sub
jp
fdiv
call
dec
sahf
lret
sti
push
jne
sti
loop
or
mov
ja
pop
cmp
ficompl
jo
lret
sub
lock
mov
mov
lcall
sbb
cwtl
mov
cmc
loopne
repz
xor
mov
inc
xchg
nop
nop
add
mov
adcb
dec
and
imul
les
nop
loop
imull
loopne
movsl
jne
stos
lcall
insb
je
fdivrs
push
mov
pop
cld
mov
or
mov
mov
push
pop
adc
loope
push
mov
loop
push
sbb
addr16
outsl
jb
sbb
dec
rcrl
vorps
idivl
insl
xor
xchg
or
pop
inc
inc
shrb
mov
push
andl
ljmp
mov
jecxz
dec
loop
push
push
int3
sahf
and
clc
loop
xor
adc
cmp
enter
test
mov
loope
pop
pop
or
lret
adc
aas
out
xorb
sub
cmp
outsl
pop
imul
fcompl
xor
ss
popf
ficoml
jp
xor
loopne
or
add
insl
js
shll
stos
pusha
dec
mov
in
inc
stos
in
std
xor
mov
lods
pop
sbb
js
test
jbe
and
loope
mov
das
jne
aam
sbb
push
stos
cwtl
mov
mov
sbb
and
aaa
movsl
or
je
xchg
mov
pop
cmp
enter
ret
sbb
nop
xchg
fidivs
in
lock
xchg
loopne
and
repnz
test
es
sbb
mov
jno
inc
iret
mov
jae
out
and
xchg
push
adc
adc
aad
movsl
push
shl
js
addr16
ja
push
dec
inc
sbb
scas
add
xchg
fs
out
pop
data16
data16
int3
test
push
aam
divl
fildll
cs
je
dec
out
xchg
sbb
lea
sub
or
movsl
mov
mov
jne
subl
decb
jae
lcall
insb
mov
ret
jle
cltd
mov
adc
pop
insb
std
or
popa
lods
addr16
pop
cmp
cld
push
arpl
addr16
int
mov
cmpsb
xchg
cmp
imul
xchg
xchg
xchg
jns
cld
adc
jb
fxch
adc
imul
pop
ret
pop
pop
movsb
add
lea
inc
push
jl
mov
pushf
and
imul
gs
in
adc
sbb
data16
add
mov
inc
pushf
cmpsl
xchg
mov
in
adc
test
lret
ja
mov
adc
inc
jecxz
mov
jle
test
push
and
movb
mov
mov
lods
sub
mov
lds
nop
adc
mov
mov
sbb
inc
push
js
push
sbb
mov
jnp
lods
mov
dec
mov
mov
inc
push
or
pusha
jmp
stos
cltd
mov
xor
jns
jnp
inc
or
xor
push
test
movsl
cld
mov
push
add
adc
cmp
leave
icebp
test
scas
mov
int
mov
mov
enter
sbb
cs
stos
hlt
xor
pop
adcb
adc
fimuls
pusha
stos
in
and
ljmp
repz
adc
in
scas
cmp
cmp
mov
out
test
popf
sbb
js
dec
sbb
aaa
stc
enter
xchg
mov
jecxz
call
adc
sahf
add
xor
jge
mov
push
je
shlb
cmc
cmovge
xorb
mov
xchg
xor
pushf
andb
pop
xchg
cli
mov
mov
or
add
jmp
movsl
lcall
dec
sbb
call
jns
popf
mov
movsb
repz
and
iret
sahf
add
loopne
ret
mov
inc
cmp
in
shll
jl
dec
popf
cmpsl
adc
loop
pop
addr16
add
push
adc
addr16
sub
push
lea
mov
scas
mov
push
loopne
or
rcll
loope
orb
lret
xor
shl
sub
cmc
and
or
mov
out
mov
mov
push
dec
cmp
add
loopne
out
pushf
mov
inc
push
lret
aam
scas
leave
sbb
lret
xor
mov
dec
sar
imul
cmpl
ret
mov
inc
mov
sbb
and
filds
fldcw
mov
cmp
in
pop
sub
enter
adc
jb
and
sub
out
pop
aas
xor
sub
or
sub
fisubs
jp
jp
push
add
mov
pop
mov
mov
call
test
jne
ret
pop
cld
or
push
sarb
pop
rcrb
into
pop
mov
mov
pop
jle
jb
mov
mov
jl
sbb
jl
leave
and
std
sub
sbb
rolb
cli
push
gs
rcrl
in
jmp
in
sbb
pop
cld
test
mov
out
nop
adc
mov
pushf
mov
pop
popf
jns
jo
shl
pop
jb
adc
sbb
push
pop
repz
push
mov
stos
in
out
mov
hlt
xor
mov
adc
in
inc
push
jecxz
jnp
sar
jno
ja
imul
jg
xchg
mov
and
xchg
and
xchg
jns
shlb
js
fstl
out
push
add
aam
ja
cwtl
leave
mov
jne
das
and
fcomps
fs
inc
jne
test
pop
popa
inc
pop
aad
data16
sarl
cmpsb
add
cmpsb
push
bound
outsl
popl
pop
repz
sub
pop
inc
dec
aas
stc
add
push
jno
pop
fdivrp
inc
mov
mov
xchg
mov
movsl
add
xor
enter
jno
pop
adc
sub
es
mov
mov
or
jne
mov
push
inc
loopne
cld
aaa
inc
icebp
repz
in
test
sub
outsb
inc
popa
movsl
enter
adc
out
ljmp
xchg
add
int3
mov
mov
subb
sbb
xlat
push
xor
scas
hlt
and
dec
fisubs
mov
insl
mov
cmpsb
cmp
or
mov
cmc
mov
pop
pop
and
jge
fs
mov
fs
mov
loop
lods
jb
sahf
out
mov
and
push
dec
push
in
sub
sub
inc
mov
stos
cmp
dec
push
adc
adc
repnz
imul
mov
imul
repnz
mov
popf
stos
jmp
mov
mov
adc
push
push
sub
pushf
sub
std
scas
sysret
arpl
shr
dec
aam
out
push
cmp
jmp
movsb
pusha
jl
jae
orl
sub
sub
mov
shrb
pop
scas
inc
jmp
adc
mov
xor
mov
data16
adc
sub
sbb
lcall
mov
and
push
push
sub
xchg
das
add
aad
stc
scas
adc
mov
jb
jne
aad
imul
adc
mov
adc
insb
loop
rorb
push
mov
sti
xchg
dec
adc
notb
pusha
aas
cmp
dec
sub
lods
push
xor
stc
inc
xor
adc
xchg
cmp
into
xor
mov
jns
add
fstp
sahf
dec
loop
cltd
dec
testl
push
es
inc
loope
adc
xor
icebp
inc
xlat
xchg
or
sbb
fwait
out
xor
xor
mov
pop
inc
inc
pusha
popf
ja
int
cmpsb
cmp
test
xor
sbb
xchg
pop
enter
inc
sub
adc
ret
pop
jae
scas
pusha
push
movsb
scas
pushl
push
clc
iret
movsl
cmc
test
add
add
cmp
test
lret
out
xchg
mov
inc
rcrl
loopne,pn
xlat
enter
mov
test
pop
jo
stos
aad
lods
arpl
cld
inc
jecxz
add
xchg
xor
jns
add
cmp
xchg
dec
js
pop
sbb
mov
rorl
adc
xchg
mov
arpl
jbe
sbbl
aad
iret
out
xchg
mov
pop
mov
scas
dec
push
rcrl
push
or
scas
fisttpll
cmp
adc
sbb
out
lods
add
lcall
pop
cltd
daa
mov
fstps
shr
push
push
xor
inc
test
jle
addr16
mov
mov
jl
jb
and
daa
xor
mov
in
dec
jmp
lods
inc
or
lahf
jle
dec
xchg
fstpt
std
jecxz
or
dec
push
mov
jg
mov
push
scas
dec
cmp
and
mov
imul
adc
xchg
popa
jmp
push
cwtl
not
inc
xor
ja
push
sub
or
inc
push
add
insl
cs
xor
sub
mov
add
cmpsb
inc
pop
in
mov
xor
and
dec
cmp
les
adc
and
jecxz
aas
and
jmp
ret
mov
loopne
cwtl
daa
rcrb
mov
lea
mov
add
lcall
and
sahf
out
and
icebp
dec
cmpsb
or
mov
out
sarl
inc
mov
bound
roll
sub
xor
dec
popf
jbe
sub
mov
out
jg
push
jae
mov
push
mov
mov
test
jmp
mov
sbb
jbe
pushf
orb
push
negb
sub
pop
dec
addr16
sbb
cld
jbe
scas
bound
add
mov
arpl
fisttps
addr16
inc
or
push
imul
inc
pop
jecxz
mov
jne
inc
mov
cli
clc
js
mov
inc
ss
pop
mov
push
mov
cwtl
je
fstpt
mov
int3
cmpsl
aaa
pop
push
cmpsb
into
leave
mov
inc
cmp
or
imul
stc
mov
mov
sti
test
sbb
jns
fsubp
cltd
es
push
sub
and
mov
xor
sub
mov
pop
mov
jmp
pop
xor
ds
push
fstpl
jo
dec
stos
mov
dec
mov
adcl
pop
loope
mov
lcall
mov
mov
and
adc
loop
lret
mov
js
push
fcoms
and
out
add
mov
push
inc
pop
sub
fiaddl
cmp
jle
cmp
push
scas
push
mov
pop
lret
jbe
mov
gs
xor
js
cmpsl
adc
and
out
testl
imul
mov
cmpsb
popf
mov
push
push
enter
repnz
mov
jge
notl
lds
dec
loope
xor
inc
dec
aas
mov
cmp
or
cmpsb
mov
imul
pop
insl
sbb
fcmovne
cwtl
rcll
sbb
test
test
pop
ret
cltd
sete
jge
lret
mull
filds
ret
fnstsw
cli
int3
std
and
push
lret
mov
xchg
daa
mov
vshufps
pusha
push
adc
or
data16
push
xchg
stos
stc
jecxz
dec
push
add
add
xchg
xor
mov
adc
adc
dec
mov
aas
sbb
popf
add
mov
cmp
lahf
sbb
int3
enter
in
rol
not
imul
fcmovnb
and
and
ljmp
out
mov
jne
push
mov
lahf
inc
mov
les
jp
push
xchg
cmp
stc
inc
sub
mov
add
mov
xchg
out
pop
incl
sbb
clc
lea
testb
leave
sbb
jmp
lret
imul
pop
mov
outsl
out
and
pop
popa
add
jae
movsl
push
loop
mov
test
outsl
push
rep
pop
xchg
and
stos
xchg
adc
jmp
outsl
push
ja
mov
sahf
lahf
jg
addr16
mov
setnp
sbb
xor
icebp
xor
popf
dec
cmp
cmp
dec
jo
arpl
lods
rcll
jnp
test
test
in
xor
adc
adc
enter
sub
into
adc
xchg
mov
fdivr
fmuls
lret
lds
pop
jns
mov
cmp
sti
addl
imul
and
fcomi
and
add
ficoms
ja
fadd
xor
adc
roll
ret
pop
mov
mov
xchg
push
pop
fldt
movsl
dec
xchg
ljmp
std
inc
mov
dec
data16
mov
lock
enter
popa
aas
push
imul
idiv
jmp
ss
mov
shrb
or
xchg
scas
in
mul
cmp
lcall
xorl
cld
repnz
sbb
xor
nop
cmp
or
into
mov
dec
or
js
xchg
cmpsb
push
inc
call
mov
or
jbe
faddl
stos
mov
mov
push
into
or
xchg
jae
rcrl
xor
jno
sbb
sub
loopne
fcmovu
or
jns
cmp
xchg
ss
aam
push
mov
lahf
ss
in
lcall
pop
cmp
and
popf
mov
lret
lret
adc
add
lods
movsb
sbb
popf
jl
xchg
or
stos
cmp
add
aad
dec
out
inc
dec
jnp
je
xor
cmp
mov
rorl
jmp
xchg
aaa
and
adc
or
inc
dec
jbe
mov
fidivs
pop
data16
rclb
lahf
aam
test
bound
icebp
jp
inc
pop
aam
sti
xor
scas
dec
xchg
and
or
int3
mov
loop
xchg
xor
ret
jp
popf
cli
gs
lcall
xor
mov
fsubrl
fucomip
push
lahf
movl
data16
inc
scas
fsubs
lcall
add
xor
or
and
push
nop
dec
adc
mov
sbb
dec
flds
cmp
add
fmull
clc
push
or
popa
roll
out
mov
lods
es
int3
jbe
adc
mov
xchg
in
pop
dec
or
into
lret
or
mov
mov
lahf
or
jns
into
in
inc
push
insl
adc
insl
xorl
out
push
sahf
and
xchg
lock
jg
sub
ja
ja
test
aam
mov
xor
xchg
add
popa
sub
fcoms
xorl
gs
stos
and
add
test
loopne
jmp
scas
fsubrl
movsl
insl
pop
mov
push
xor
sbbl
mov
loope
pop
imul
stos
add
shlb
sub
sar
psllw
push
sbb
cwtl
xorl
pop
loopne
jb
push
xorl
pop
dec
add
fstps
push
push
cmovno
push
rolb
loop
iret
std
scas
test
sbb
mov
filds
out
lea
adc
sub
xor
bound
and
in
cmp
cmpsb
es
jns
popf
push
insl
mov
jns
cltd
sub
cld
andb
in
dec
out
repnz
sub
or
stc
add
cmp
xchg
and
popf
cld
loope
sub
out
test
xor
in
or
xchg
daa
dec
jle
push
xor
dec
jbe
push
fldt
ljmp
push
aam
xorb
aad
xchg
sub
jne
push
arpl
lret
inc
call
mov
int3
jnp
pop
popf
jns
sbb
sub
and
xchg
std
shll
js
mulb
stos
push
shrb
popa
inc
popa
subb
mov
movsl
loopne
enter
pop
fldt
cld
cmp
sub
out
popf
sbb
and
or
loopne
nop
pop
pop
outsb
mov
lods
ljmp
mov
enter
ds
xor
fists
mov
jo
lret
pop
bound
jo
call
jnp
lds
nop
popa
sbb
push
or
adc
cmp
inc
push
lcall
mov
mov
push
repz
inc
adc
ret
sbb
push
sub
daa
sbb
xlat
mov
adc
push
mov
out
fdiv
popf
cld
sub
lahf
adc
sahf
fistpl
and
mov
mov
ja
push
cmp
sbb
cmp
xchg
cmpsb
and
loope
dec
mov
daa
inc
xor
testb
cs
mov
xchg
cli
outsb
imul
push
nop
aas
xlat
cltd
xor
cmp
andl
fwait
insb
jmp
jecxz
in
mov
pop
push
mov
testb
decl
adc
shll
adc
xchg
jle
dec
pop
mov
jp
addl
lock
push
xchg
cmp
js
js
jno
xchg
and
lret
mov
scas
and
pop
pop
mov
inc
pop
push
lcall
mov
push
fiadds
movl
sub
loopne
mov
sahf
pusha
mov
mov
test
or
adc
out
div
test
aam
adc
add
lock
xchg
mov
aad
lret
jge
stc
out
lea
mov
idivb
sbb
xor
add
ja
or
jl
fsts
push
push
xchg
fdivs
push
or
out
xchg
hlt
mov
sbb
shrb
gs
pop
xchg
sbb
shll
enter
or
inc
test
mov
xchg
cs
dec
xor
int3
psrlq
add
pop
push
test
imulb
push
sbb
lds
and
push
xor
jo
mov
clc
jmp
and
or
xchg
pop
loopne
jo
sbb
loopne,pn
scas
ret
cmp
loopne
and
imul
mov
and
movsb
pop
call
or
jo
in
outsl
sbbl
mov
inc
sbb
popf
or
pop
into
les
cmp
mov
xchg
adc
jmp
ret
pop
je
or
filds
insb
push
jge
mov
shrl
je
hlt
in
shrb
mov
int3
inc
outsl
push
shll
lcall
inc
shll
push
lret
add
add
pop
sbb
ljmp
lock
xor
inc
jg
adc
or
pop
imul
adc
mov
out
test
pop
insb
and
sbb
std
cmp
aaa
xchg
test
stos
faddl
inc
stos
testl
xorb
mov
cmc
push
mov
cmpsl
mov
or
jmp
test
pop
ret
in
imul
lret
cmp
jae
or
test
dec
cmp
add
pop
sahf
decb
jge
rorl
pop
out
sbb
cltd
push
loop
out
push
pusha
roll
movsl
lret
cmc
mov
test
jnp
aam
xchg
test
mov
cmc
outsl
scas
and
xchg
cld
pushf
and
enter
inc
or
ljmp
outsl
or
add
mov
push
push
das
xchg
enter
xchg
and
lahf
add
cs
scas
mov
data16
stc
jg
daa
mov
ret
daa
sub
fisubs
xlat
lea
popf
pop
inc
xor
mov
xor
pop
sub
mov
mov
mov
jle
cmp
cmpb
sub
out
shll
jb
push
loope
mov
popf
daa
push
out
pop
cmp
in
imul
hlt
pushf
cmpl
pop
inc
or
je
insb
pop
rorb
cmp
cmp
or
cld
outsb
push
cmpsb
dec
dec
pop
pop
xchg
dec
sbb
popa
pop
sub
fs
cmpsb
loop
fsts
sbb
adc
or
xchg
cmpsb
popa
mov
push
adc
shlb
fwait
pop
lea
divb
or
pop
lods
ljmp
mov
cmpsb
mov
mov
xchg
xlat
ja
les
lods
xchg
xor
clc
fisubrs
jbe
shrb
mov
fs
add
and
push
into
sbb
jae
xchg
or
dec
outsl
ds
mov
imul
mov
jecxz
mov
mov
or
push
mov
xor
pop
loop
gs
inc
xchg
sbb
lods
hlt
mov
and
dec
aam
ljmp
faddp
pop
ja
jno
scas
dec
pop
push
sbb
loope
lret
in
add
mov
sbb
mov
out
cmp
mov
xor
mov
rcl
lods
daa
leave
or
mov
daa
lds
and
or
leave
popa
ljmp
mov
out
adc
leave
inc
aas
test
movsl
adc
mov
mov
mov
sbb
add
and
jo
mul
mov
sub
sub
push
xor
testl
data16
imulb
add
mov
mov
sahf
test
out
lods
lea
add
clc
sbb
mov
jge
mov
mov
les
mov
mov
nop
aaa
test
lds
sbb
stos
lahf
jl
inc
pop
push
arpl
nop
es
leave
sub
outsl
push
mov
roll
pop
sub
sbb
cmp
cmp
mov
mov
sbb
cmpsl
cltd
xchg
jg
fsubrl
hlt
dec
dec
push
xlat
push
pop
inc
pushf
xchg
mov
sub
insb
xorl
xchg
push
outsl
add
sarb
push
popf
inc
jg
fsubrp
push
xchg
insl
mov
cltd
movsb
nop
lret
mov
ret
scas
lods
or
inc
push
clc
xchg
cmp
int
and
adc
lret
dec
rol
rol
xchg
pop
fiaddl
pop
ror
sbb
pop
leave
adc
jge
cltd
dec
js
push
or
ror
mov
xor
lcall
mov
es
mov
cmp
or
loopne
jg
and
ja
xor
cmp
pop
inc
out
sbb
cmpsl
jnp
ds
lea
mov
dec
jns
outsb
dec
int
xor
and
dec
jbe
dec
adc
es
jno
sbb
fsubrp
add
aas
xor
mov
adc
aaa
pop
popf
outsb
fildll
inc
cmp
mov
sbb
and
mov
or
clc
dec
lret
outsb
cmp
fisttpll
add
imul
faddl
shlb
push
imul
push
push
arpl
aas
jp
leave
mov
sahf
push
sub
sti
scas
jnp
and
arpl
sar
inc
outsb
cwtl
addr16
iret
cmp
shl
dec
add
inc
xchg
movsb
sbb
rolb
mov
push
push
or
xor
out
cmc
mov
in
and
nop
cwtl
scas
leave
xor
arpl
adc
xor
pop
pop
push
mov
cmp
test
and
sti
jns
dec
cwtl
mov
xor
subl
push
scas
mov
xchg
mov
iret
fucomi
negb
xorb
push
pop
xor
idivl
xchg
xor
mov
js
flds
popf
jg
jne
xor
mov
idivl
ljmp
sbb
ror
imul
mov
and
movsb
push
repnz
pop
xchg
push
imul
xchg
and
adc
loopne
sbb
mov
int3
arpl
stos
insl
iret
fidivrl
out
mov
out
mov
out
clc
jl
in
testb
in
jle
daa
push
pop
outsl
cmp
mov
dec
dec
xchg
mov
pushf
fwait
jo
cmp
sbb
mov
test
adc
dec
push
repnz
out
mov
popf
scas
or
test
dec
add
inc
repnz
pop
fimuls
mov
xor
iret
dec
mov
divl
jl
and
fsubs
cmp
add
jmp
lret
pslld
ja
arpl
jp
fimull
test
in
mov
mov
mov
pop
or
sahf
add
inc
aas
mov
faddl
jle
jecxz
sub
mov
mov
cs
mov
jecxz
mov
sub
sbb
ror
adc
or
loop
enter
inc
daa
mov
insb
add
outsb
xchg
cmpb
cmp
std
adc
mov
movsb
into
pop
lret
repz
lret
icebp
daa
inc
inc
mov
in
jbe
mov
cltd
in
out
xchg
add
mov
ljmp
fst
cmp
test
mov
fcmovb
lret
inc
test
popa
test
push
jnp
xchg
lcall
cli
data16
mov
mov
xor
sahf
iret
xchg
xlat
jmp
popa
sbb
mov
mov
and
ficomps
decb
xor
sbb
popa
sub
sub
mov
aad
inc
add
movsb
icebp
call
inc
dec
xor
push
sbb
mov
cwtl
xor
lahf
test
dec
jne
ljmp
jmp
lods
inc
add
xchg
dec
popf
arpl
push
or
push
lcall
sub
and
push
imul
lret
push
adcl
inc
fimuls
sarb
clc
sbb
and
pop
xchg
inc
pop
and
push
int
sbb
adc
outsl
lds
imul
push
pop
xor
es
das
push
mov
stc
xchg
or
js
xchg
push
cmp
or
mov
daa
out
mov
les
xor
shl
dec
push
movsl
and
lcall
std
outsb
push
and
or
fistpll
out
xor
add
add
sbbl
lcall
sub
fistpl
in
xor
xchg
dec
xchg
mov
inc
push
jg
xchg
clc
out
xor
ljmp
pop
lods
sub
cli
out
adc
lret
jle,pn
stc
testl
xchg
push
subl
inc
sub
inc
out
xor
ja
out
xor
dec
push
xchg
cld
int3
or
push
leave
imul
outsl
out
rcl
popl
xor
cmpb
inc
divl
enter
mov
sub
mov
ljmp
lock
std
or
mov
sub
out
dec
mov
sub
push
jg
jns
sbb
xchg
cmpsb
stos
cmpsb
push
cmp
inc
hlt
adc
inc
push
aad
hlt
ss
repnz
rolb
push
inc
jle
sbb
sbb
sbb
adc
inc
sub
or
add
and
pop
fwait
pop
cld
push
iret
sbb
in
cmp
jecxz
imul
fmuls
mov
mov
ffreep
jl
inc
mov
cmp
test
popa
ret
pop
sbb
sub
mov
pop
jno
lret
and
arpl
add
sub
pop
inc
stos
ret
gs
mov
mov
mov
in
fwait
dec
aam
xlat
lods
leave
push
ja
lea
sub
data16
inc
inc
scas
pushf
jl
pop
call
or
je
cmp
mov
mov
stc
cmpsl
js
jns
enter
addr16
sub
shll
idivl
rclb
jno
and
push
js
mov
pop
jle
mov
jmp
sub
ljmp
scas
dec
xor
pop
inc
cltd
sbbb
pop
incl
scas
xchg
add
or
sbb
and
xchg
mov
or
and
mov
dec
js
cmp
jge
aaa
pop
mov
mov
pop
inc
mov
out
sbb
inc
xor
add
es
test
mov
mov
inc
ficompl
movsb
inc
jbe
jle
sbb
mov
lock
jl
out
xor
mov
and
push
fildl
mov
jmp
push
test
out
jge
push
pop
cmp
pop
ja
xor
pusha
scas
lret
or
pop
mov
loop
and
outsb
dec
pop
outsb
daa
lods
push
clc
cmp
pop
cwtl
pop
loopne
xchg
jge
fisttps
push
add
hlt
cwtl
mov
mov
pop
dec
mov
ss
xchg
clc
dec
sub
in
cld
cld
mov
bound
call
cmc
in
add
sub
adc
or
push
or
mov
fiaddl
xchg
mov
add
ficoml
inc
pop
mov
rorb
and
adc
cmp
inc
mov
insl
jecxz
mov
in
xor
loop
jnp
arpl
inc
or
xor
inc
pop
js
sub
mov
movsb
outsb
lods
jae
pop
push
jo
jne
imul
jge
out
xor
mov
sub
dec
mov
jns
repz
enter
or
sbb
sbb
lret
call
cmp
lock
cmp
imull
jle
mov
insl
je
mov
cmp
ss
cli
push
xchg
pop
mov
into
sti
cmp
mov
xor
paddusw
je
dec
lods
xor
xchg
sbb
cmpsl
adc
cmp
mov
push
dec
inc
pop
fsubs
mov
pop
sbb
jo
ret
imul
in
inc
mov
test
cs
add
fsubrl
adc
xlat
adc
adc
xorb
mov
loopne
gs
dec
pop
insl
jae
stos
xor
pop
xchg
sub
cmpsb
mov
scas
pop
cmp
pop
ret
aaa
add
cmp
movsb
mov
cmp
neg
iret
mov
outsl
and
lret
shrb
xchg
inc
ss
movsl
mov
jbe
enter
loope
mov
push
or
clc
arpl
cli
mov
inc
js
lods
jo
xor
out
loope
sarb
jle
cmp
adc
or
in
je
mov
inc
dec
fidivs
repz
arpl
dec
std
les
lods
adc
adc
jns
iret
lods
pop
fisttps
dec
jmp
aas
inc
orb
add
cld
sti
dec
add
arpl
rolb
jbe
jmp
mov
mov
push
repz
and
incl
dec
stc
loopne
sbb
fmull
out
divb
cld
push
sub
out
adcb
fidivrl
cmpsl
xor
sbb
push
cmp
scas
push
sbb
jp
xchg
dec
jne
jp
mov
lret
incl
ljmp
and
out
and
mov
gs
xchg
mov
push
fnstenv
sub
fcmovbe
js
jnp
xchg
and
popf
and
push
fisubrl
dec
negl
dec
sti
fmuls
and
rol
jp
bound
cmpl
lahf
sbb
jmp
nop
or
hlt
jecxz
pop
roll
es
push
lret
or
sub
mov
pinsrw
pushl
addr16
ror
aad
es
push
filds
and
fwait
xor
inc
adc
xor
cmp
adc
scas
outsb
push
shrb
xchg
addr16
pop
movl
xchg
lds
fistl
or
aam
ret
subl
cltd
push
mov
stos
mov
daa
push
jmp
inc
sbb
pop
in
in
pop
sbb
test
sub
out
jae
adc
or
fistl
rcl
mov
sbbl
sahf
mov
xchg
push
inc
in
jns
inc
xor
or
cmp
push
cld
mov
jg
fnsave
jno
push
jmp
ds
into
clc
lods
pop
dec
nop
or
lret
and
mov
jbe
xchg
xchg
mov
xchg
lock
push
xchg
xchg
test
sarl
jge
into
iret
or
jle
lock
insb
inc
sub
pause
inc
inc
test
xchg
jmp
in
dec
jl
imul
push
jl
es
push
sub
jmp
orl
mov
mov
cld
sub
enter
xchg
bsf
mov
xchg
xchg
mov
icebp
add
or
into
imulb
pop
mov
pop
movsb
inc
gs
pop
hlt
insb
inc
flds
ds
sbb
pop
sub
ret
cmp
pop
daa
jne
movsb
out
push
pop
jle
dec
jp
repnz
out
shlb
aam
pop
push
js
mov
xlat
dec
adc
mov
test
ljmp
gs
in
push
pop
mov
inc
loop
lret
in
dec
in
adc
mov
cli
dec
push
add
xchg
add
jb
lods
aas
mov
stos
push
mov
push
sahf
lock
std
adc
enter
inc
mov
xchg
xor
std
mov
divb
sub
les
pop
mov
adcl
in
lods
data16
or
ficoml
das
mov
add
aaa
stos
inc
icebp
popa
popa
and
inc
loop
jo
std
sbbb
pusha
enter
cmp
inc
lcall
push
js
mov
add
push
lret
stc
insl
jnp
nopl
cltd
mov
sbb
std
nop
pop
mov
cmp
jle
sub
lea
lcall
xchg
ds
loope
and
adc
stc
mov
dec
sti
sar
sbb
mov
ljmp
pop
cli
ljmp
fucomi
das
out
pop
fimuls
dec
inc
pop
xchg
mov
lret
loope
cmp
adc
add
mov
out
loope
sbbl
cmpsb
into
loope
mov
cmpsb
push
mov
fimuls
xor
adc
and
js
lods
scas
sub
outsl
addr16
jg,pt
or
or
std
cld
sbb
push
mov
push
hlt
cmc
add
aam
add
into
scas
push
xchg
popa
fadds
cli
cmpb
mov
int3
data16
sbb
cmp
sub
mov
std
push
aas
xchg
adc
jo
add
ss
cmp
or
push
push
and
inc
cld
ficompl
cmp
cmpsb
xor
mov
test
lods
inc
and
ja
test
xor
sub
xchg
mov
pop
pop
push
sbb
mov
mov
and
sbb
add
test
int3
shlb
stos
xorb
les
pop
adc
in
lea
fidivrl
xchg
dec
lcall
mov
push
enter
pusha
mov
add
rcrl
mov
xchg
mov
cmp
cmp
in
aad
lret
mov
repz
movsb
ljmp
scas
mov
lods
sbb
ret
fcoms
hlt
loope
shlb
mov
sub
dec
fdivr
jp
and
loope
jl
test
inc
lods
dec
add
mov
lahf
pop
iret
out
mov
pop
fwait
mov
jmp
sub
es
mov
test
cmpsl
xchg
aaa
push
dec
leave
enter
movsl
adc
or
sbb
gs
adc
jecxz
mov
or
add
cwtl
loopne
xchg
cmp
addr16
jge
aam
pop
test
push
cmp
sbb
add
sub
jmp
xor
sub
jp
in
test
inc
sti
movb
xor
dec
das
adc
stc
pop
fbld
jp
mov
in
xchg
mov
push
das
sar
stc
cmc
sub
jmp
daa
mov
fdivs
xchg
xchg
rorl
rorl
test
iret
xor
sbb
xchg
and
jle
popa
into
roll
push
xor
jle
push
mov
pop
cli
add
stos
or
dec
mov
movl
push
sbb
mov
mov
les
ss
orb
outsl
pop
aaa
push
add
enter
add
dec
cmpsl
js
xchg
mov
insl
imul
sub
sub
into
loop
dec
stos
das
adc
dec
sbb
nop
movsb
sub
out
and
and
enter
add
jmp
orl
adc
dec
das
gs
inc
dec
mov
in
lcall
add
fcoms
fcoms
mov
out
lea
test
loope
aam
add
enter
mov
stc
xor
jno
cltd
sar
dec
or
jo
xor
repnz
cmp
jle
mov
hlt
in
sbb
sbb
lods
add
pop
add
mov
adc
movsb
pop
mov
adc
adc
fldenv
pop
jno
push
fiadds
and
push
dec
or
xchg
repnz
sub
push
test
imul
fldcw
and
xlat
movsl
mov
inc
sbb
movsl
xor
adc
faddl
xchg
repz
andb
cs
pop
pusha
mov
sbb
and
cmp
ficompl
mov
imul
jae
mov
test
xor
cwtl
jg
add
jno
out
ss
nop
lret
inc
cmp
dec
xchg
adc
push
sbb
jb
loopne
addr16
xor
int3
add
adcl
popa
pop
call
cmp
jae
popf
cltd
mov
mov
dec
ficoms
aad
dec
mov
into
inc
fs
inc
add
and
scas
movsl
pusha
dec
sub
ss
imul
mov
test
int3
jp
sub
sub
daa
std
outsb
call
cmp
inc
mov
pop
aaa
push
mov
dec
loopne
inc
popf
cmc
idivb
add
test
sahf
pusha
call
lcall
dec
stc
adc
sbb
mov
pop
or
hlt
jnp
and
repnz
outsb
pop
into
and
stc
mov
scas
inc
lods
xchg
into
push
daa
gs
shl
aaa
mov
arpl
mov
stc
and
mov
or
lock
loopne
ss
cld
adc
cmc
cmp
jb
cmpsb
jae
pop
xor
push
test
icebp
jns
lods
mov
aad
mov
and
insb
inc
icebp
jp
mov
and
pop
xor
xchg
out
inc
ret
jp
outsl
add
jecxz
insb
adc
push
adc
rcll
inc
test
scas
cmpsb
mov
cmp
xchg
call
fidivrs
repnz
addr16
sbb
mov
adc
addr16
std
sbb
inc
push
dec
inc
cld
rcrl
cmp
fcmove
bound
pop
std
into
or
sbb
push
lods
sbb
inc
mov
mov
loop
fstpl
mov
mov
pushf
and
mov
fisttps
cld
sub
adc
js
jae
cltd
stos
lahf
mov
or
popa
xor
iret
ja
pusha
movsl
and
mov
test
stc
add
jnp
mov
xor
das
arpl
jns
inc
mov
dec
les
push
adc
dec
nop
or
test
mov
sbb
xchg
or
rcrl
test
xor
lret
aaa
stos
lea
add
cmpsl
out
ss
test
lods
stc
cltd
fstps
xor
mov
aad
or
popa
mov
ja
test
cmpl
ficompl
lea
addr16
pusha
gs
mov
xor
mov
cmp
push
add
lea
lds
fstpt
insb
push
mov
int3
scas
cltd
imul
cmp
pop
jb
jmp
add
sbb
in
les
iret
push
out
mov
inc
or
lea
jo
inc
add
push
xchg
pop
push
stos
or
xor
sbb
inc
push
mov
pop
mov
push
xchg
scas
mov
aam
inc
xchg
addb
gs
mov
rcrl
cmc
leave
pop
cs
pop
xor
mov
mov
popa
cmpsb
jecxz
ret
ficompl
into
cmp
test
mov
shrb
adc
cmpsb
push
ret
movsl
and
cmp
push
cmp
mov
inc
std
mov
aaa
mov
pop
insb
test
or
fstpt
psllq
add
out
cmpsb
jb
inc
cmpsl
push
test
fistpll
idivb
pusha
push
mov
mov
les
adc
fdivrl
push
bound
je
outsl
rclb
andb
inc
cld
jmp
fidivrs
lret
mov
fst
daa
mov
notb
sti
mov
test
addr16
in
lea
fsubs
ficoms
fmull
inc
lret
lea
loop
pusha
ret
cmp
insl
cmp
outsb
add
cltd
lods
andl
inc
cmp
push
imull
in
pop
test
int3
out
add
loope
adc
sub
sub
mov
rcll
std
sbb
es
fstpl
in
cwtl
or
orb
pop
xchg
in
cmp
xchg
insb
adcb
pushf
sahf
into
inc
fwait
cmp
daa
cmp
sti
test
cmp
stos
sub
push
fcoms
cmpsl
lods
push
and
jg
jmp
jno
jg
scas
mov
jecxz
subb
mov
bound
shrl
inc
in
xchg
sbb
mov
mov
mov
jg
test
mov
add
leave
fstl
fsubs
add
pop
fwait
push
fwait
stc
adc
mov
ss
sbb
inc
jb
mov
sub
jnp
scas
int3
mov
shll
or
or
dec
lret
jo
mov
mov
push
mov
pushf
cmpsb
cwtl
outsb
mov
sub
push
push
mov
fldt
mov
mov
lret
outsb
addb
push
add
jg
jo
mov
and
addr16
add
and
xchg
xor
xchg
addr16
xchg
xor
daa
and
add
xlat
mov
repz
mov
sbb
fs
sub
lret
jb
aaa
divb
gs
mov
fucomi
popa
lock
test
outsb
jns
or
jnp
movsl
mov
lahf
aaa
ja
sub
pop
push
sbb
test
inc
push
mov
les
mov
shrl
cmc
push
pop
loope
add
cltd
pop
lret
in
pop
push
out
jne
pop
ljmp
test
in
push
inc
sub
mov
xchg
lods
inc
mov
es
test
xchg
dec
dec
sbb
imul
shlb
sbb
out
orb
jns
rol
rorb
movl
add
ljmp
ret
daa
cmp
jmp
out
sbb
in
ftst
and
fdiv
imul
das
and
push
push
sbb
mov
shl
fnstsw
lahf
rcrb
out
arpl
and
movsb
push
or
xchg
repz
sbb
adcl
jmp
addb
test
dec
fbstp
cld
call
andl
cmp
lods
push
mov
xchg
sub
pop
mov
mov
cmpsb
mov
push
cmp
stos
cmpsb
mov
add
jns
mov
fwait
and
dec
div
fwait
sub
fs
pop
push
pop
mov
cmp
push
or
js
call
movsb
sbb
sub
ss
aam
lea
adc
mov
cmpsl
mov
pop
add
fildll
in
cmp
fistl
mov
lods
adc
push
or
mov
jg
push
lods
mov
pop
mov
cltd
aad
adc
xchg
pop
leave
sbb
icebp
adc
mov
cmp
inc
dec
push
mov
out
inc
orb
pop
xor
sub
fidivrl
cmp
scas
fs
outsl
imul
push
std
les
jmp
rcrl
xchg
push
leave
cmp
imul
out
loopne
sub
adc
mov
jns
testl
cmp
or
roll
sub
mov
js
nop
push
and
pop
add
mov
cli
pop
mov
or
movsl
repnz
xor
imul
sbb
ror
jmp
cld
cmpsl
dec
pop
lods
lea
enter
or
sbb
jmp
repz
bound
mov
mov
lds
addr16
iret
fstpl
xchg
lods
les
lds
sbb
mov
xchg
les
mov
xchg
imul
aas
inc
mov
adc
cmpsl
dec
jne
mov
jbe
pop
pop
and
and
mov
push
add
mov
test
and
imul
xchg
cmpsl
in
ds
mov
outsb
inc
out
xchg
push
mov
repnz
aad
xor
and
mov
fildll
cmp
pushf
and
mov
jnp
sub
inc
mov
ja
popf
add
pushl
iret
ds
sbb
push
out
ret
jo
jle
outsb
push
mov
cmp
aas
rorb
sub
lret
addb
andl
adc
leave
lods
mov
adc
xor
fistps
std
imul
push
lret
roll
inc
stos
adc
add
fmuls
call
incb
imul
ret
int3
ror
mov
das
test
lods
mov
sub
lret
cmp
lods
xchg
cmc
mov
mov
mov
loope
mov
inc
and
sahf
sbb
xchg
fscale
dec
out
cld
es
sahf
std
lds
inc
dec
pop
cli
mov
movsl
or
inc
and
jae
mov
data16
xchg
arpl
test
adc
clc
scas
lret
sub
in
cli
aas
int3
cmc
mov
lea
rclb
rcll
iret
sbb
out
movsl
xchg
adc
mov
pop
dec
lcall
scas
rcrb
divb
xchg
jl
jp
pop
fwait
jae
loop
icebp
dec
xchg
mov
insl
mov
pop
pop
jne
dec
gs
push
adc
popa
cmc
cli
push
shlb
insl
adc
mov
inc
xchg
jmp
ss
add
or
ret
mov
sahf
xchg
cltd
gs
sbb
int
pop
fstl
pop
jo
mov
stos
pop
cmp
xchg
stos
pop
mov
in
mov
xchg
fucomip
cmp
fbld
xchg
pop
sub
pop
push
add
pusha
sub
xchg
dec
dec
sub
pop
sbb
nop
mov
sbb
adc
jge
sbb
mov
movsl
scas
xor
sub
mov
jl
add
fsubrs
out
stos
js
jnp
loopne
addr16
push
pop
lahf
nop
jno
sbb
mov
mov
fildl
mov
jmp
sub
mov
fidivs
mov
dec
or
xchg
jae
mov
lcall
js
mov
dec
adc
add
xchg
mov
cld
fs
pop
jb
sub
pop
cli
xor
adc
std
imul
lods
push
cmp
mov
std
mov
sub
jecxz
dec
inc
dec
ret
mov
in
movsl
hlt
popf
xlat
je
inc
push
addr16
cld
pop
movzbl
popa
dec
ret
xor
out
aaa
mov
imul
inc
inc
sub
mov
test
fucomip
adc
mov
fisubrs
inc
dec
mov
xor
outsl
dec
fstpl
pop
outsb
decl
int
sub
pop
sarl
pop
rorb
xor
sahf
mov
push
cmpsb
add
cmp
aad
xchg
mov
loopne
lock
movsb
mov
mov
test
mov
pop
mov
js
test
sbb
and
scas
test
dec
fnstenv
int
addl
fldl
cmp
xchg
xchg
add
fidivrl
or
bound
xchg
outsb
jbe
loop
mov
shll
sbb
cwtl
sbb
inc
outsb
das
mov
push
or
mov
jle
addr16
insb
pop
cmp
cmpsb
sbb
adc
gs
out
not
mov
sti
repz
popf
and
pusha
sahf
and
inc
leave
mov
adc
mov
push
sti
mov
inc
jp
ja
inc
xchg
sub
xchg
mov
push
add
mov
adc
out
mov
inc
jl
lcall
testb
ficoml
fmuls
rorb
sbb
or
push
out
ds
mov
scas
repnz
jb
add
lds
gs
sub
roll
push
pop
dec
mov
mov
pop
cmpl
pop
xlat
and
pop
ret
mov
sbb
call
or
xchg
xchg
push
sub
mov
negl
mov
outsw
daa
cltd
adc
nop
aad
pop
fsubs
push
mov
pop
jae
jb
pop
popa
shrb
fsubrl
mov
push
xchg
movsb
dec
in
push
shrl
mov
sub
mov
xchg
add
and
cmp
cmp
sbb
loop
sar
movsl
sahf
shl
loopne
call
das
pop
jae
scas
inc
and
inc
fwait
or
mov
pminub
rol
cmp
or
int
jmp
ljmp
push
data16
dec
mov
gs
popa
dec
pop
cmp
add
adc
push
mov
push
fdivr
and
insb
and
cld
xor
pop
mov
loop
push
hlt
sbb
loope
pop
ret
mov
sub
adc
outsb
mov
rcrb
sbb
sbb
lds
bound
dec
pop
div
add
lcall
shrl
out
mov
js
xchg
mov
test
and
nop
mov
loop
inc
add
sub
cmp
cmp
mov
stc
lods
loop
dec
in
inc
sub
jo
out
inc
loope
lahf
popf
push
add
lods
cmpb
mov
repz
sub
movsb
mov
add
dec
jge
negb
lea
push
sbb
adc
push
out
icebp
inc
jmp
xchg
loopne
mov
mov
adc
sahf
pop
lret
in
in
vhsubps
sbb
int3
mov
mov
sbb
popa
and
testb
jle
mov
dec
arpl
xchg
mov
je
mov
ror
xchg
mov
iret
cli
dec
jl
orb
test
mov
jg
mov
sub
xchg
add
jbe
mov
xchg
jmp
inc
fldl
mov
and
testb
pop
out
xlat
sbb
pusha
in
fistpll
cmc
xchg
stos
mov
pop
cld
sbb
stos
out
daa
nop
sub
rol
mov
out
xchg
xchg
or
dec
mov
inc
je
mov
mov
or
rcrl
mov
mov
aam
mov
fs
mov
jno
add
addb
inc
dec
imul
addr16
sbb
ret
ffree
fwait
lea
dec
cwtl
imul
lock
push
mov
in
mov
test
js
je
push
ret
dec
push
add
cli
mov
fwait
call
mov
dec
rclb
fsubl
jp
rcrl
adc
mov
or
je
xchg
cli
jae
add
pop
dec
and
out
adc
lahf
leave
push
test
xchg
mov
xorl
or
xlat
mov
cmc
fdivs
faddl
popa
frstor
call
sub
push
sbb
and
xchg
mov
sbb
mov
jecxz
sub
lock
sbb
lret
pop
xorb
push
mov
xor
pop
push
sbb
subb
dec
add
jns
mov
pusha
xlat
xchg
stos
ja
pop
lcall
jb
outsl
repnz
ljmp
adc
or
out
jmp
mov
xchg
xchg
rep
jl
cmp
dec
xor
nop
cltd
clc
daa
mov
into
xor
cmc
mov
outsb
das
and
ficoms
pop
test
lret
jecxz
lods
pop
shll
mov
mov
mov
cltd
push
xchg
and
popf
push
cld
roll
sbb
inc
insl
shll
gs
je
sub
pop
daa
clc
iret
in
lea
loope
bound
fcompl
adc
mov
jge
xchg
out
jne
outsb
fwait
push
xchg
out
int
cli
push
jmp
je
xchg
mov
movsb
jmp
xor
aas
xor
movsl
pop
imul
loope
xorb
or
cmp
sbb
popf
sub
fadds
xchg
cwtl
push
mov
stos
call
adc
push
lods
xchg
jns
xor
push
adc
shrb
clc
sub
sbb
inc
out
fstps
outsb
cmc
jno
shlb
scas
cmpsl
dec
lods
mov
xor
dec
pop
cmp
cmp
xor
insb
pop
mov
cmpsl
add
xor
in
push
fs
inc
out
shlb
mov
pushf
loope
inc
daa
add
bound
popf
pop
and
std
or
rol
testl
sbb
xor
adcl
xor
jmp
ds
push
js
movsb
loop
repz
xor
in
lret
mov
out
and
enter
xor
mov
pusha
sti
sub
fld
stc
iret
mov
ljmp
mov
rolb
test
insb
adc
int
dec
test
jne
push
insl
mov
dec
mov
mov
pusha
inc
inc
mov
mov
aaa
pusha
in
or
shrl
inc
ljmp
push
fsubr
imul
xorb
or
lds
mov
insb
rcr
add
gs
lcall
cmp
mov
sub
sub
data16
mov
ds
gs
and
jo
pop
xchg
mov
and
jae
lds
jbe
stc
adc
pop
or
cmp
and
mov
push
rcr
push
js
imul
or
or
sub
or
and
gs
mov
roll
in
xor
sub
shrl
clc
sbb
mov
add
add
mov
lret
loope
fbld
pop
dec
cltd
mov
cltd
bound
inc
arpl
adc
sub
mov
mov
ljmp
mov
sbb
xor
stos
lret
ja
and
inc
iret
divl
mov
mov
mov
or
push
xchg
pop
xor
and
bound
sub
or
leave
shr
xchg
and
pop
dec
out
jmp
sbb
sahf
jl
inc
cwtl
jge
push
push
mov
add
mov
push
adc
mov
sub
cmc
add
jle
sub
ljmp
cmp
mov
jns
in
out
es
pop
stc
pop
imul
inc
xchg
push
pop
mov
mov
fidivs
pop
movsb
adc
hlt
test
cltd
aam
call
pusha
clc
inc
scas
sub
das
out
bound
jmp
repnz
mov
pop
jae
ss
bound
cmpsb
mov
jb
add
stos
ret
cmp
pop
cltd
inc
jg
imulb
mov
adc
cmp
lock
in
imul
inc
and
inc
jge
dec
mov
xor
lcall
outsb
dec
adc
fbstp
addb
xchg
xchg
mov
ds
icebp
jb
inc
push
jno
xor
cmp
in
push
sub
inc
pop
pop
fiaddl
pop
and
mov
cmp
icebp
jmp
sar
movlps
inc
mov
cs
jne
ljmp
lret
outsb
xor
loopne
divb
cmpsl
rolb
outsb
xchg
jle
jp
xchg
dec
cmpsb
popf
in
das
xchg
push
push
sub
pop
cmp
xchg
fdivl
cwtl
jecxz
jge
mov
jno
xor
sub
xchg
mov
or
pop
scas
imul
out
xchg
mov
xor
js
and
sub
lret
adc
repnz
lea
loop
mov
inc
inc
mov
xchg
ljmp
mov
cmp
adc
jg,pt
push
cmp
pop
push
repnz
xchg
ss
adc
hlt
adc
add
data16
pop
push
mov
push
sub
sarl
ss
add
daa
jbe
xchg
cwtl
jne
cld
out
cmpsl
cmp
jle
mov
pop
mov
xchg
test
mov
sbbb
sahf
mov
dec
jg
mov
sbb
cmp
add
jae
rcrl
stos
cmp
sti
jns
out
ret
ja
mov
jno
dec
fisttpl
cmp
jae
ds
jecxz
sbb
ljmp
or
mov
cwtl
addb
mov
and
inc
mov
test
fidivs
xorps
jecxz
dec
das
xor
fucomip
and
ds
idivb
ss
sub
or
inc
mov
cmp
fdivrp
call
or
and
inc
jbe
imul
lods
push
cwtl
push
dec
pushl
mov
or
lods
mov
subb
sbb
fsubl
sbb
shrb
test
sbb
cmp
aam
or
push
ror
jmp
or
adc
xchg
fisttpl
mov
dec
inc
xor
cmp
ljmp
pop
in
jecxz
das
sbb
push
xchg
and
int3
inc
nop
mov
cli
mov
out
add
fsts
xchg
cld
or
arpl
js
xchg
cld
mov
dec
inc
pop
xor
push
mov
fnstenv
adc
pop
divl
inc
cmp
cmp
pusha
sbb
into
out
jae
scas
mov
movsb
dec
and
fwait
lock
and
sub
add
mov
fldl
cli
inc
test
inc
in
jmp
leave
stos
push
sub
stc
inc
xor
ror
cmp
pushf
es
jecxz
fsts
add
mov
pop
ja
pop
leave
test
iret
add
or
test
or
das
movsl
jns
fsubrl
daa
push
xchg
scas
cmp
pop
shrl
lock
mov
ds
sbb
jns
cli
mov
mov
mov
cli
shl
inc
aas
add
dec
adc
push
push
sti
stos
sub
lret
xor
and
inc
mov
int3
fldenv
loope
push
shl
sub
popa
cmp
clc
movsb
rcr
lret
sub
dec
mov
out
fnstcw
enter
adc
jle
and
xor
adc
test
mov
push
jp
leave
std
sbb
call
or
dec
lock
daa
mov
push
and
sti
es
ljmp
iret
mov
dec
shlb
inc
clc
adc
inc
jns
cmp
test
sbb
fcoms
mov
mov
mov
pop
dec
add
and
fdivrs
jns
leave
mov
std
sbb
adc
fiadds
inc
push
mov
dec
ret
mov
cs
aad
int3
jb
and
sub
inc
xchg
movsl
call
or
insl
imul
sbb
jg
xchg
test
sub
mov
mov
fcoml
fstpt
adc
fisubl
push
mov
jb
pop
movsl
aas
push
and
daa
pop
and
jmp
pop
cmp
addr16
push
fidivs
ret
dec
fwait
lods
jl
push
cmp
iret
outsl
add
cmp
jnp
into
lahf
loope
sub
push
sbb
popf
adc
loopne
mov
testl
mov
into
xchg
adc
mov
inc
adc
in
test
jge
pop
sbb
jo
add
andb
iret
loopne
in
mov
lretw
xchg
and
mov
mov
lret
outsl
sub
xor
cmp
neg
xor
ret
pop
add
sub
xchg
movsl
repnz
dec
fwait
xorb
fdivrl
pop
js
into
insb
pop
shll
in
xchg
xchg
ret
mov
lods
loopne
inc
aad
push
fnsave
fdiv
or
jl
lcall
std
mov
in
loopne
mov
jo
push
setno
decl
cli
xor
push
sub
push
xor
fwait
and
loopne
pop
xor
out
addr16
ljmp
inc
andl
sbb
adc
jp
mov
test
dec
roll
out
lret
mov
mov
sbb
cmc
sarb
xor
cmp
fsubrs
jns
sub
imull
adc
popf
pop
nop
cmp
jg
repz
xlat
inc
or
pop
xchg
movsl
push
push
sub
gs
leave
pop
and
stos
pop
push
je
sar
and
ja
adc
adc
jne
mov
push
lret
cmp
inc
int3
loope
jo
xchg
orb
pop
int
mov
lcall
std
pop
pop
leave
xchg
jl
scas
sbb
inc
jmp
pop
pop
or
xchg
test
lret
or
int3
cmp
sub
dec
adc
rcrb
icebp
outsl
xchg
cli
repnz
jle
dec
out
je
mov
lcall
and
popa
push
in
cwtl
push
sub
mov
add
jbe
lds
lcall
loop
xchg
xlat
ror
fbstp
xchg
mov
push
out
mov
cwtl
outsl
cltd
rcr
into
mov
jp
mov
adc
mov
xor
fcoms
lods
call
xchg
ret
lret
adc
repnz
mov
fidivs
sub
dec
and
mov
jae
aas
loopne
mov
ret
cld
cmp
stc
repnz
jp
movsb
mov
jnp
xchg
les
inc
dec
das
test
lahf
data16
mov
xchg
add
and
int
ret
xor
stos
dec
and
aad
cli
jnp
mov
pop
inc
in
loopne
lods
pop
cld
push
add
insl
push
dec
test
orb
add
inc
dec
lods
pop
xor
adc
dec
dec
cmp
pop
arpl
inc
push
push
in
push
cli
lcall
mov
lock
pusha
pop
xchg
pop
xor
icebp
scas
cli
out
sbb
or
push
push
and
inc
cmp
push
jne
cmc
popf
je
mov
push
addl
cmpsb
jb
xchg
mov
lods
ss
sbb
mov
add
mov
imul
fadd
cli
scas
ficompl
imul
aam
cmp
and
mov
pushf
adc
pop
sbb
xorb
push
test
jg
ss
call
aad
push
aaa
dec
enter
loop
mov
ss
mov
imul
cli
sub
test
ja
lea
xlat
sub
ret
push
pop
sbb
pop
aas
add
out
push
cmp
jecxz
cmpl
in
inc
mov
push
sbb
adc
sub
pushf
and
out
je
sti
push
iret
loop
movsl
call
cmc
lea
push
mov
into
int3
aam
ret
cs
xchg
jl
dec
dec
int
lahf
stos
jl
adc
cmp
call
andb
outsl
lret
mov
mov
mov
pop
adc
mov
dec
mov
and
jo
rolb
repnz
into
sub
lea
inc
jae
adc
sub
push
rorl
stc
aam
outsb
mov
or
xor
orl
into
sti
mov
xchg
pop
scas
ror
xor
pop
std
fdivrl
cltd
or
cltd
or
pushl
or
fistpll
push
or
xorps
imul
pushf
mov
popa
add
imul
lea
add
sti
popf
pop
cmpsl
push
add
imulb
pop
inc
dec
out
inc
cmp
gs
jns
fsubrp
add
xor
mov
ss
or
call
in
xor
movsl
xchg
stos
xlat
fwait
cld
mov
mov
push
mov
sbb
dec
jb
cs
aam
test
clc
or
arpl
cmc
lret
push
testb
lock
mov
clc
or
pop
ja
sub
and
jmp
jb
aad
jb
fwait
mov
or
dec
xchg
and
and
cmpsl
mov
dec
xchg
mov
jle
movsl
xchg
int
cmc
inc
sub
test
scas
add
shll
in
dec
in
cmpsl
out
in
insl
shll
mov
stos
jne
addr16
or
sub
xor
push
mov
mov
movsl
out
popf
jge
cwtl
test
aaa
jge
ret
in
dec
dec
gs
test
int
sbb
nop
mov
cmp
in
ja
inc
sbb
ficompl
or
enter
xor
out
inc
call
pushf
xchg
push
loop
push
shll
dec
and
in
sti
sbb
jnp
cmp
and
outsl
int3
xor
add
xchg
add
popa
femms
aas
mov
cmp
lcall
jg
dec
daa
cs
scas
push
add
inc
cmp
mov
aam
mov
sub
les
cmpsl
mov
jl
pushf
je
imul
inc
sbb
sub
push
pop
xchg
jne
ret
testb
xor
jl
mov
mov
popa
lock
mov
out
mov
pushf
test
icebp
int
inc
xchg
inc
aam
add
ja
mov
je
out
notl
mov
testl
sbb
test
outsb
int3
and
pop
aas
or
push
cmp
jl
es
in
int
mov
sub
or
dec
hlt
push
sub
aaa
lods
xor
jge
push
enter
and
das
add
sahf
cmp
sahf
or
mov
adc
inc
notl
orl
jae
jns
aam
movsl
aas
ljmp
negl
add
and
daa
negl
xchg
es
cs
enter
sahf
insb
and
leave
xchg
or
push
and
dec
outsl
dec
insl
ja
jmp
mov
mov
pop
imul
scas
repnz
jno
std
sbb
mov
push
push
cmp
push
les
sahf
mov
pop
push
out
sbb
jmp
movsl
sbb
and
pop
adc
lods
xor
push
adcb
jl
lcall
jbe
les
or
and
pop
push
or
xor
imul
pop
scas
gs
nop
jmp
dec
jge
roll
mov
das
es
imul
pop
add
push
pop
jae
mov
and
jp
and
test
xor
insb
pop
sahf
imul
andb
pop
scas
jno
and
adc
pusha
sub
adc
jmp
jne
addr16
sub
fsub
outsb
addr16
adc
sub
mov
pop
mov
ret
or
les
out
arpl
repz
pop
xchg
les
dec
sub
mov
or
movl
mov
bound
adc
xor
inc
xor
push
js
or
pop
int3
lret
rcrl
cmc
add
jne
arpl
sbb
xchg
gs
stos
push
sub
out
inc
jae
sub
and
xlat
imul
stc
mov
cmp
mov
or
push
xor
push
push
inc
or
addr16
cwtl
shlb
inc
pushf
sub
shll
add
inc
xchg
test
mulb
fstps
cmp
jae
push
push
cmp
std
jnp
fcom
aaa
cs
cmc
int3
mov
sub
pop
call
cmp
mov
out
js
push
fidivs
cmpsl
rep
mov
push
mov
xchg
out
call
int
jg
adc
into
pop
push
loopne
adc
sbb
cmp
js
sbb
leave
lahf
mov
sbb
add
pusha
aas
and
xchg
arpl
rorb
jmp
mov
cmp
ret
adc
dec
mov
fadds
cmp
dec
lods
gs
stc
inc
jmp
bswap
hlt
sbb
dec
sbb
xor
dec
fadd
sbb
addb
or
xor
lahf
rcrl
aaa
xor
dec
imul
xchg
push
push
hlt
push
or
pushf
scas
out
mov
xor
rclb
test
js
push
ja
pop
test
or
cltd
cmp
in
push
cltd
xchg
fs
fnstcw
nop
push
mov
enter
and
movsl
pusha
divb
jns
mov
sub
out
jmp
dec
loope
push
mov
add
outsb
outsl
or
dec
iret
ret
icebp
push
mov
inc
mov
loopne
and
sub
and
mov
inc
inc
shlb
and
lods
xchg
nop
and
in
sti
stos
in
scas
jae
stc
fdivl
iret
scas
fidivrs
or
icebp
imul
insl
xor
lahf
insl
and
add
mov
in
sub
pop
or
mov
add
sbb
iret
popf
jno
adc
inc
ret
mov
imul
out
lret
inc
cwtl
cld
adc
jmp
push
mov
xchg
clc
mov
imull
int
mov
mov
pusha
bnd
int
lea
ja
idivb
mov
jnp
lods
movsb
data16
cld
popf
mov
aam
imul
mov
rorb
cmc
jo
xchg
add
arpl
sbb
addr16
je
mov
in
in
gs
jge
push
add
xchg
js
dec
pop
stos
mov
ja
mov
movsb
clc
add
push
inc
xchg
and
icebp
fs
or
rcrl
fucompp
imul
mov
push
loop
loop
hlt
cmpsb
inc
push
mov
cli
inc
inc
xchg
dec
jecxz
jne
push
daa
in
js
hlt
mov
xor
outsb
xor
add
push
addr16
mov
inc
test
imul
pop
adc
pop
mov
dec
mov
cwtl
adc
insb
clc
adc
push
out
mov
cld
mov
xchg
sub
jmp
outsb
pop
mov
pop
rcrl
mov
inc
pop
dec
xlat
xchg
cmp
in
mov
dec
rorl
adc
mov
ds
lea
push
or
cli
stos
sbb
fmuls
add
imul
rorb
test
arpl
fs
mov
mov
and
pop
push
frstor
sub
test
outsl
rorl
pushf
lret
xor
cmp
and
cmp
imul
jb
fcom
stos
out
cmp
iret
xor
shr
lods
mov
dec
push
pop
jb
add
inc
imul
jne
xchg
xor
out
sub
mov
lahf
add
aad
ret
nop
test
pop
mov
sub
mov
inc
out
xor
and
fucomip
dec
dec
lds
mov
cmp
scas
pop
mov
add
mov
ds
jb
sub
repnz
pop
or
sti
clc
xor
jmp
sub
shll
roll
mov
lret
push
stos
xlat
pop
mov
bound
fsubrs
push
cltd
loop
mov
xlat
inc
inc
add
pop
mulb
xor
mulb
popf
loope
je
sub
notl
push
out
jle
cmp
or
fsubp
dec
shl
pop
push
adc
add
ret
xor
mov
ja,pt
std
xlat
add
sbb
out
cmp
sti
loop
sbb
mov
aas
adc
imul
sub
xchg
imulb
xor
insb
loope
sti
jbe,pt
jp
adc
dec
xchg
xchg
cwtl
and
stc
daa
leave
push
inc
sbb
add
sub
xor
les
cwtl
jo
sbbb
xrelease
or
xchg
aam
and
or
xchg
enter
orl
iret
loope
icebp
mov
xlat
dec
adc
xchg
xchg
popa
and
sub
mov
pop
loope
adc
out
call
mov
das
daa
cmpsl
aad
push
pop
cmp
insl
cmc
sbb
insb
decb
push
xor
ja
stos
adcb
movsb
jae
add
xlat
aam
outsl
mov
mov
xorl
dec
in
daa
cmp
jnp
popf
stos
push
out
movsb
loopne
xchg
sub
testl
or
out
xor
dec
scas
icebp
ret
cmp
ja
pop
sub
ret
ret
dec
inc
xchg
pop
out
jne
jae
lret
lret
mov
sub
lret
and
mov
not
dec
sub
mov
rorl
loope
mov
fnstsw
jb
pop
lds
pcmpgtw
sahf
and
shr
imull
aaa
sub
xor
xor
dec
mov
insl
lods
cli
in
and
jecxz
xlat
insl
stos
dec
xor
je
jne
inc
jae
push
sbb
dec
repz
les
pop
push
add
int
mov
vmovsldup
sbb
outsl
dec
fcomp
push
popa
out
movsl
lret
pusha
shl
jne
and
pop
out
xchg
inc
aam
xchg
xchg
fldl
adc
adc
ret
fnstcw
popa
pop
cmp
inc
xchg
cwtl
test
in
adc
scas
xor
dec
jp
push
jecxz,pt
test
mov
leave
mov
mov
adc
adc
cmpsl
shlb
out
add
sarl
push
pop
daa
jmp
sub
fwait
data16
out
cltd
fnstsw
and
cmpl
mov
je
mov
mov
dec
sbb
xorb
outsl
and
imul
fdivl
push
push
jbe
test
cmp
or
icebp
into
mov
mov
and
stos
pop
mov
out
lcall
pop
shrl
jl
jne
mov
sbb
arpl
push
or
add
mov
mov
push
insl
jo
je
and
cltd
jmp
lods
pop
add
call
mov
lods
mov
sti
ror
adc
fdivrl
out
mov
shlb
pop
ror
jl
and
shrb
mov
sbb
xchg
mov
mov
loopne
roll
cld
mov
out
arpl
cli
dec
push
dec
adc
dec
push
and
fisubl
out
sub
jl
sbb
jbe
inc
push
lods
sbb
mov
movsl
mov
scas
xchg
cmp
movsl
mov
sbb
xlat
iret
imul
or
push
test
cmpsb
xchg
cli
push
sub
cwtl
cmc
or
cltd
mov
clc
js
sarl
je
lea
xchg
mov
add
adc
inc
sub
and
adcb
jnp
test
rorb
lds
cmp
cmp
jmp
cmp
in
mov
fcoms
push
outsb
jp
pop
in
dec
xor
push
push
int3
mov
sub
lock
out
mov
imul
sbb
jno
ret
test
or
xchg
push
fsts
subb
loop
sub
dec
fwait
in
inc
test
stc
test
dec
pop
nop
mov
aaa
sbb
jbe
outsb
xlat
jg
or
jno
xchg
incb
mov
xor
test
mov
test
add
in
lret
sub
jmp
jmp
sub
stos
mov
hlt
mov
fnstsw
out
xchg
out
pushf
push
xor
test
push
cmp
outsl
or
sub
jbe
mov
adc
aaa
cmp
pop
pop
pusha
jo
inc
scas
lods
sub
sti
mov
aam
xchg
aam
lock
cli
pop
inc
call
repnz
and
in
out
pop
hlt
jg
outsb
ror
pop
cltd
push
iret
js
mov
mov
dec
or
pushf
dec
aad
sbb
lods
clc
mov
pop
lcall
rcll
je
or
mov
call
sbb
cli
xchg
nop
pop
and
js
ja
or
mov
iret
mov
popl
int3
cmpb
test
stos
ljmp
pop
into
push
xchg
and
or
loop
add
dec
inc
pop
stos
subb
pop
fldcw
xchg
cmc
movsb
jecxz
xor
push
pop
xor
xor
mov
nop
jge
cwtl
or
push
test
xor
idivb
sub
pop
fs
jno
cmp
int3
ret
mov
popa
add
mov
dec
daa
incl
mov
stc
pop
ret
jg
es
test
jno
lds
xorl
sbb
cmp
ljmp
lds
sbb
and
leave
cmpl
cmpsb
into
cmp
sub
or
sub
lea
and
out
adc
pop
loop
ret
call
push
push
dec
mov
lahf
mov
xchg
not
loope
les
mov
rdpmc
das
mov
stc
iret
hlt
xor
pop
imul
std
jo
mull
add
cmpb
test
enter
daa
and
mov
std
and
inc
mov
int3
lret
xchg
mov
fldenv
xor
sbb
xorl
xor
nop
push
mov
sbb
mov
inc
std
xor
mov
xchg
and
movsl
lods
sbb
jb
sub
sbb
inc
lret
cmp
sub
mov
and
sub
lea
loope
shlb
imul
nop
sti
sti
push
aaa
and
adc
imul
push
dec
jo
mov
cmp
ret
daa
imul
test
stos
and
aas
lods
rorl
imul
testl
pop
out
subb
push
daa
pushf
xchg
mov
inc
mov
cmpsl
inc
mov
cltd
jbe
in
cmp
add
adc
scas
in
adcl
rclb
ss
or
fwait
lahf
or
in
lods
xchg
scas
fisttpll
sub
adc
inc
shll
out
mov
aas
es
loope
insl
push
je
push
ja
ret
int
lret
lea
popa
lods
and
jno
das
and
xchg
xchg
or
push
and
out
sbb
inc
push
mov
testl
hlt
jb
xchg
jb
shrb
add
shrl
mov
pop
jmp
jb
lcall
jge
mov
cmpsb
and
adc
rol
pop
push
sbb
push
jmp
int
or
bound
mov
mov
jmp
les
dec
cmpsb
pushf
adcl
jg
mov
mov
xchg
xor
mov
sub
push
cli
mov
or
mov
sbb
sti
push
inc
xor
pop
dec
push
xchg
adc
lods
pop
ds
and
in
mov
aad
in
inc
popa
pusha
shll
fs
pop
pop
xor
mov
out
insl
pop
fsubs
mov
push
cmp
aaa
outsb
hlt
mov
push
mov
fsubr
nop
add
pop
mov
iret
sub
and
cmpsb
jg
sub
xchg
iret
decb
push
add
arpl
and
sub
jmp
mov
pop
aas
es
insb
adc
sub
mov
jne
sub
stos
xor
cmp
ss
xlat
inc
stos
cld
leave
je
mov
pop
dec
je
aam
inc
das
fists
jb
outsb
adc
inc
mov
mov
lock
in
int
pop
or
clc
pop
xchg
shrb
fisttps
jbe
inc
and
aad
mov
enter
and
xor
dec
push
or
fdivrp
pop
lret
jle
dec
xor
stc
push
outsl
outsl
push
mov
outsl
lret
pop
cmp
sub
xor
push
insl
arpl
ret
xlat
xchg
cmp
mov
xor
cmpsb
les
pop
xchg
push
cmpsl
lcall
mov
push
jecxz
je
adc
and
dec
js
sub
in
insb
and
cs
testl
mov
ljmp
inc
lea
and
push
dec
mov
mov
cmp
jb
pop
xchg
cli
ss
and
xchg
and
mov
fwait
nop
cs
mov
mov
jae
imul
mov
in
jo
cmp
inc
sub
pop
pop
sbb
dec
pop
mov
out
xor
inc
sub
xor
sub
xchg
out
pop
inc
inc
cltd
sbb
fmull
test
cli
lret
lds
enter
xchg
mov
cwtl
negb
jno
sbb
xor
hlt
in
int
aad
jbe
leave
pop
je
call
roll
mov
mov
cmc
psrad
movsb
cmp
scas
pop
mov
jl
negb
cmp
jo
enter
stc
inc
loope
rclb
xor
or
mov
aam
test
imul
fdivr
inc
or
js
jle
adc
jg
or
jge
push
aad
push
push
pop
sti
lret
inc
mov
mov
mov
xor
add
pop
jmp
in
frstor
fisubrl
je
gs
jle
and
inc
add
push
aaa
int3
jp
test
mov
xor
jns
in
data16
mov
jne
xchg
jl
sbb
addb
or
dec
mov
and
jle
out
out
dec
adc
jnp
lahf
stc
or
arpl
jge
sub
xchg
xor
popf
pop
lods
push
mov
fldcw
mov
mov
adc
leave
bound
iret
das
dec
repz
imul
cld
scas
adc
jp
repnz
lods
jecxz
sbb
scas
outsb
in
dec
adc
sub
cmp
pop
lcall
mov
xlat
ret
mov
cmpb
leave
pop
das
xchg
adc
jl
iret
inc
ss
das
sti
adc
in
cmpsb
pushf
lcall
les
sub
jns
and
or
pop
cld
call
stos
js
cwtl
inc
jg
jle
int
push
push
repnz
pushf
inc
hlt
jle
loop
jne
inc
mov
sahf
lret
sbb
mov
pop
or
adc
je
mov
mov
into
cmp
mov
mov
adc
pop
in
jb
mov
sbb
sahf
cwtl
aam
adc
into
lcall
mov
int3
jmp
out
out
xchg
gs
arpl
inc
sti
nop
jae
pop
loopne
dec
inc
pushf
jge
pushf
es
fcmovnu
out
popf
mov
sahf
xchg
jmp
shll
xchg
std
test
lods
cmp
test
adc
stos
test
cmp
repnz
addl
cltd
cmp
jbe
inc
inc
or
dec
aas
push
and
les
imul
je
push
stc
es
nop
xor
xchg
mov
in
sub
ret
push
xor
fptan
sbb
mov
sbb
mov
das
js
cmp
test
xchg
mov
sub
ret
fwait
fs
sub
and
outsb
aam
cwtl
js
and
lock
mov
jo
pop
in
flds
or
mov
fadds
mov
pushf
adc
jp
sbb
pop
inc
popf
cmpsb
xchg
rcl
das
loope
sub
test
scas
iret
je
icebp
arpl
add
lods
xor
mov
inc
fwait
push
fsubl
adc
loop
or
sbb
std
popf
mov
arpl
out
adc
insl
cmp
insb
loop
xchg
mov
mov
aas
or
fdivrl
movsb
aam
pop
call
and
cmp
mov
add
sub
mov
pop
add
aam
out
fsubl
dec
mov
rcrb
test
pop
into
rcrl
in
xor
mov
movsb
inc
lret
movsl
jbe
adc
inc
inc
dec
lods
mov
add
andl
xchg
push
jno
ja
xchg
mov
cmpsl
into
hlt
pop
fbld
push
jle
jno
add
pop
mov
lock
pop
mov
in
jmp
bound
lahf
and
pop
sbb
mov
pusha
inc
xchg
loopne
mov
mov
sub
out
rcll
mov
ret
and
jno
and
cmp
adc
fisubrl
or
mov
jmp
scas
in
clc
dec
ss
mov
jp
jo
lahf
mov
xor
cmp
xor
mov
or
int3
mov
pop
sub
enter
loopne
push
stc
xor
gs
push
test
fidivl
aaa
and
out
call
daa
dec
push
inc
rclb
or
inc
fimuls
mov
add
push
dec
call
stc
push
popf
sbb
cmpsb
push
je
push
xor
leave
incl
je
and
imul
mov
xlat
sbb
out
mov
dec
push
cmpsb
add
sub
scas
jae
jl
mov
cmc
xorb
sub
sub
pop
sbb
push
add
fdivr
mov
inc
pop
pusha
push
bound
inc
push
mov
xor
or
cmp
pop
inc
aam
push
jae
adc
sub
sbbl
mov
clc
hlt
mov
jns
jmp
cwtl
icebp
or
push
lcall
xchg
mov
jne
stc
std
dec
inc
jno
fcomps
ds
push
rcl
out
imul
adc
repz
sbb
push
icebp
pop
lods
jge
xchg
cltd
or
imul
pop
aaa
push
aaa
jp
fistpll
out
dec
or
add
inc
add
mov
test
stc
nop
aaa
sbb
sub
mov
int3
loop
add
jns
xchg
xor
mov
fwait
ja
add
loope
cmp
sub
xchg
repnz
pusha
or
lds
test
data16
les
mov
add
mov
sbb
inc
cmp
out
cmp
aaa
bound
xorb
and
icebp
sbb
lock
and
rorb
lcall
aas
inc
bound
adc
or
mov
mov
xchg
cmpsb
dec
js
icebp
pop
sbb
inc
into
cmp
push
stc
jmp
fsubs
mov
mov
sub
dec
mov
mov
sub
orl
pop
scas
cltd
or
jp
push
push
jne
push
adc
subl
xor
jbe
sub
xchg
or
stos
mov
or
arpl
sbb
pusha
nop
ja
add
fimull
jg
cmp
xchg
dec
push
std
adc
jl
push
mov
lods
mov
xor
jle
test
xor
cld
cmp
mov
adc
mov
pop
push
repnz
lds
xchg
push
rolb
cld
push
movsb
inc
out
xchg
adc
das
inc
clc
dec
dec
lods
push
add
inc
cmp
mov
xchg
jbe
aam
push
loope
mov
cmc
inc
ret
clc
imul
aas
pop
jbe
push
xlat
cmpsb
in
lods
inc
decb
mov
adc
daa
aad
jne
push
or
imul
mov
insl
call
cmp
pop
psrld
pushf
inc
aas
out
pop
sbb
adc
pop
jb
add
test
lcall
push
test
dec
sbb
sbb
cmc
dec
or
xor
lcall
cli
mov
push
mov
or
push
mov
repz
fcmove
fldt
inc
cmp
jge
mov
add
push
pop
xor
mov
jae
mov
aad
jp
cmovl
push
sub
mov
stos
cmp
imul
out
outsb
das
jae
add
rorb
sbb
adc
call
xor
test
and
push
cmp
push
faddp
clc
int
popa
testb
xchg
loopne
lods
imul
or
mov
pop
testb
lods
mov
push
movsb
pop
adc
pushf
sbbb
pop
mov
insb
icebp
xor
sub
fistps
icebp
mov
mov
int
push
iret
sub
jl
lea
andb
mov
cs
adc
ja
add
test
jl
inc
mov
lcall
out
inc
outsb
mov
leave
mov
xchg
xor
inc
pusha
mov
mov
add
mov
sub
push
jb
stos
iret
data16
enter
xor
mov
faddl
test
dec
int
and
aaa
nop
cwtl
negl
stc
sbb
je
rcl
fildl
add
rcll
add
xor
sub
arpl
adc
ret
stc
push
jne
popf
pop
mov
push
enter
xor
std
out
sbb
loopne
mov
mov
sbb
sbb
scas
lods
inc
lret
jge
in
ficoml
out
jo
call
cmp
xchg
sbb
mov
xchg
movsl
jns
mov
loope
cltd
das
push
mov
or
roll
pop
xchg
mov
jecxz
mov
add
test
sub
cmp
or
ljmp
xor
out
mov
dec
adc
ss
xor
xchg
or
adcb
test
clc
jnp
lahf
aaa
incl
xorb
fistpl
test
js
xchg
push
inc
clc
mov
xchg
inc
lods
into
fldz
push
fadd
add
jns
pop
adc
movsb
ret
jo
mov
inc
pop
and
sub
cmp
inc
xchg
out
mov
inc
dec
push
xor
jp
out
scas
subl
out
xchg
jae
mov
loopne
popa
and
push
rcrl
jno
icebp
add
adc
es
out
daa
sbb
mov
push
loopne
jne
mov
sbb
push
dec
std
push
fistl
sbb
dec
test
push
loopne
add
testl
out
enter
push
mov
in
sbb
add
sub
ljmp
fstps
nop
cmp
push
sbb
jae
test
cmp
push
bound
sbb
jmp
bnd
mov
inc
or
cmp
mov
es
movsb
pushf
mov
out
jp
cld
call
rcrl
test
inc
sbb
dec
aas
mov
jge
sahf
mov
test
xchg
shl
jbe
lahf
cwtl
jp
push
mov
leave
inc
jnp
roll
xor
pop
cmp
std
xchg
push
sub
out
xor
sbb
popf
mov
xchg
daa
pop
mov
jne
push
ficomps
stc
xchg
or
fidivrl
mov
fnstenv
out
cmp
test
sbb
mov
in
cmp
lods
mov
leave
cmpsb
push
in
out
or
jl
fidivl
sub
lahf
push
push
and
inc
sub
inc
xchg
iret
hlt
xchg
add
sub
repz
adc
push
xor
call
bound
aas
jecxz
movl
mov
insb
jp
in
mov
ljmp
cmpsb
push
fmulp
fs
aam
cli
add
mov
xor
outsb
jmp
psubusb
mov
addb
out
aad
dec
sub
xchg
ficoms
lods
mov
adc
inc
mov
sub
xor
or
scas
xchg
sbb
mov
xchg
push
adc
fidivrl
cmp
popa
pop
jecxz
arpl
xor
xorb
sub
leave
fcompl
cmc
lea
cmc
or
and
iret
push
mull
adc
add
sbbl
mov
jp
or
push
in
es
adc
das
jns
inc
add
test
std
inc
dec
adc
cmp
add
and
xchg
sub
scas
inc
popf
xor
fbld
xchg
mov
sbb
test
sbb
mov
mov
sbb
fnstenv
mov
cmp
mov
fcos
pop
mov
pusha
xadd
adc
inc
cmp
inc
lods
sbb
outsb
fistl
loop
or
adc
push
js
lea
popf
cli
jl
pop
xchg
imul
jmp
fidivrl
inc
in
fcoml
sbb
adc
sahf
xor
mov
jl
and
nop
not
loope
sti
fwait
or
sbb
mov
pop
push
xchg
mov
test
and
mov
or
jge
push
adc
jge
test
xchg
mov
lcall
roll
mov
mov
mov
and
insl
xor
fsubs
mov
xchg
mov
adc
adc
and
aad
sub
dec
pop
aam
dec
lcall
in
xor
call
dec
in
inc
sub
pop
mov
rol
push
das
mov
idivb
fcoms
stc
cs
inc
lods
jbe
mov
sbb
pop
cmp
outsl
xor
mov
and
out
push
adc
cmp
pop
mov
inc
mov
mov
or
push
into
dec
jne
rcll
lock
jle
adc
adcb
cmp
hlt
clc
dec
loope
outsb
jb
dec
pop
pusha
jp
loop
xor
ret
and
mov
and
add
fadds
scas
push
push
ja
shll
adc
fidivrl
jl
xchg
cs
mov
shlb
mov
mov
pop
fisubrs
mov
mov
scas
movsl
pop
lret
pushf
inc
push
inc
adc
xor
nop
popf
repnz
pop
mov
movsb
adc
xor
fldcw
stos
loope
xchg
aam
add
sub
fildl
dec
xor
pop
pusha
pop
filds
arpl
inc
sub
cmpsb
mov
push
push
sbb
repnz
cwtl
mov
std
adc
sub
xchg
mov
xor
xlat
or
sub
mov
sbbl
aaa
mov
sarl
cmpl
arpl
xorl
test
sbbb
dec
dec
fisttps
mov
imul
xchg
xchg
das
sub
pop
andb
sbb
sub
inc
mov
jnp
mov
pop
dec
add
sbb
mov
repz
mov
push
cmp
stc
ret
and
push
int3
in
jp
clc
inc
nop
pop
scas
shrb
stos
das
mov
imul
mov
mov
mov
in
pop
or
mov
aam
jp
movsb
push
cli
mov
cmp
mov
mov
mov
testb
xchg
xor
imul
sbb
fisttpl
into
cltd
aam
fwait
mov
clc
aas
and
repnz
out
sbb
imul
inc
push
idivl
or
cmpsb
jle
int
pushf
push
mulb
pop
adc
or
xchg
mov
pop
pushf
dec
pop
adc
cmp
jbe
addl
fimull
repnz
scas
mov
icebp
cmp
out
icebp
sbb
loope
sub
jl
pop
add
aad
xlat
dec
cmp
lret
sbb
xor
sub
push
cs
inc
cs
ret
fs
mov
add
push
jns
mov
xchg
test
or
roll
hlt
mov
popf
movsl
icebp
insl
mov
mov
xchg
dec
loope
and
add
xor
jecxz
sbb
dec
mov
mov
scas
andl
pop
dec
in
pop
aad
stc
fwait
adc
js
fldl
scas
mov
shll
inc
std
mov
scas
js
mov
cli
adc
mov
mov
loop
cmpsb
das
add
pop
repnz
mov
mov
xor
aam
fisubrl
or
jb
add
or
pop
loope
xchg
mov
add
add
popa
test
aaa
mov
jl
imul
pop
mov
aaa
ss
inc
or
rcrb
lock
lcall
xor
push
outsl
arpl
subl
outsb
lahf
call
and
les
cltd
cmp
sub
test
jge
cmpsl
inc
push
fnstcw
lahf
pop
or
fcmovb
or
fwait
dec
xor
jmp
ret
out
dec
pop
lahf
jno
inc
pop
clc
lcall
test
mov
adc
pop
sbb
outsl
pushf
movsb
bound
adc
daa
mov
adc
imul
mov
aaa
cli
mov
lahf
mov
sub
sbb
sub
xor
fmulp
jl
pop
xchg
iret
cmp
and
dec
jnp
jns
cmp
and
test
inc
inc
pop
lcall
jnp
aaa
cvttps2pi
std
adc
add
push
movsl
mov
mov
fildl
mov
adc
jbe
negl
int3
adc
mov
dec
pop
fstl
repnz
aam
imul
pop
pop
mov
and
add
inc
dec
pusha
cwtl
cmp
nop
push
dec
enter
or
push
jno
fsub
int
mov
inc
dec
decb
test
mov
sub
cmp
repz
push
or
repnz
imul
dec
pop
cmp
lsl
pop
idivl
dec
mov
sbb
mov
xchg
in
dec
adc
and
iret
cmpsb
test
mov
xor
pop
sbb
sbb
out
aaa
mov
roll
ret
ret
cmpsl
int
insl
data16
adc
mov
rcrl
mov
addl
fs
lods
int
push
mov
mov
pop
mov
scas
aad
dec
cli
and
push
push
jo
pusha
mov
std
fisttps
mov
scas
push
clc
jmp
leave
sti
ds
mov
ret
repz
mov
shll
push
jl
arpl
or
lret
cmp
dec
bound
or
ret
fadd
mov
dec
push
in
flds
cmpsl
sbb
xchg
into
fcompl
jl
jb
mov
out
push
fucomp
jecxz
dec
std
inc
sti
mov
push
into
sahf
push
adc
in
testl
cmc
sub
xor
push
mov
insb
pop
cmpsb
arpl
je
xchg
in
mov
adc
nop
in
mov
sbb
fdivrp
pop
icebp
out
imul
push
or
inc
xor
push
mov
aaa
mov
aad
idivb
mul
jle
mov
sbb
adc
in
test
lock
std
push
hlt
adc
sbb
cmp
nop
mov
sbb
xchg
sub
jl
jmp
pop
push
xor
aam
add
sbb
imul
not
cli
movsl
inc
stos
xor
int3
vmovlpd
inc
and
xor
inc
xchg
shlb
cs
push
fidivs
mov
sahf
and
cmp
int3
sub
mov
in
jbe
dec
ss
cmp
sbb
push
es
in
lock
lahf
leave
sub
pop
cwtl
cmp
push
inc
add
pop
roll
mov
mov
in
cmpsb
popf
lret
mov
cmp
cmp
repz
sahf
and
out
ret
dec
ja
cwtl
outsb
xlat
inc
xchg
lret
cs
out
adc
cmp
inc
mov
pop
xor
cld
imul
jae
ret
popf
jo
out
mov
xor
lock
pop
imul
sub
in
fwait
jmp
pop
cli
hlt
outsl
mov
fnstsw
mov
mov
cmc
cs
dec
xlat
mov
ds
mov
or
jb
sbb
jl
lret
and
pusha
jne
mov
add
jle
fistps
push
jnp
out
pop
jl
es
call
fdivs
outsb
divl
dec
lahf
mov
add
neg
rol
subb
push
icebp
fwait
inc
adc
movsb
inc
jno
inc
xchg
xlat
outsl
aad
sahf
daa
inc
jbe
or
loopne
push
mov
dec
mov
mov
cmc
pop
cltd
xor
jb
xchg
xlat
cmp
jp
sbbl
pop
sbb
mov
leave
sub
pop
xor
jae
cmp
arpl
or
and
fisubrl
cltd
fs
inc
cmp
es
jbe
shrb
ret
mov
ja
pop
sub
js
mov
add
pop
push
inc
xchg
push
sbb
dec
pop
test
hlt
push
dec
lret
lahf
out
and
repz
clc
xchg
in
push
test
ja
nop
mov
not
inc
arpl
mov
hlt
sbb
repnz
pop
jl
sub
adc
xchg
lods
mov
lods
xchg
addr16
lea
int
in
xchg
movsb
or
adc
dec
push
push
mov
cmp
lret
jne
and
test
sub
movsl
ret
and
push
push
push
scas
adc
dec
fwait
out
adc
push
test
mov
adc
dec
ret
imul
repnz
fimull
jne
push
clc
mov
or
add
mov
repnz
loopne
mov
daa
mov
cmc
popf
lods
adc
aad
test
sahf
lret
pop
adc
jo
mov
jp
imul
repnz
or
adc
mov
pop
fdivr
xchg
inc
push
out
out
ljmp
and
pop
cmpsl
pop
pushf
ficoml
add
arpl
mov
mov
pextrw
adc
pop
mov
lods
dec
in
or
push
jb
aas
cmc
gs
ret
cld
jecxz
xlat
insb
jl
mov
cmp
add
mov
xchg
inc
pop
lock
and
adc
lds
dec
xor
je
mov
xchg
lret
pop
pop
aas
cmp
or
mov
xlat
in
test
out
add
and
roll
ret
sbb
icebp
jb
outsl
or
adc
sbb
movsl
data16
xorb
push
icebp
jmp
sbb
divl
fisubs
pop
lcall
push
lret
or
cld
shll
and
adc
sub
mov
pop
mov
dec
push
xchg
xchg
xchg
ljmp
fwait
jecxz
inc
pop
cmp
out
push
add
movsl
aad
rorb
and
shlb
call
or
mov
xlat
pushw
pop
ja
inc
push
stc
and
lret
mov
and
scas
cli
sbb
add
into
aad
push
add
call
stos
fs
pop
push
jbe
mov
jns
stc
mov
inc
add
push
pop
jmp
mov
cmp
fiadds
cld
insl
mov
cmp
sbb
dec
fs
jo
mov
push
cs
sub
fldt
movsl
outsl
repnz
dec
jae
push
iret
mov
xchg
push
aaa
push
add
lock
xor
push
dec
lock
mov
andb
mov
inc
aad
shrl
mov
bound
add
xchg
ss
imul
xchg
inc
push
subl
nop
mov
jge
outsl
push
divb
cmp
fiaddl
andb
pop
push
aad
rorb
testb
cltd
lods
and
jno
cmpb
lahf
jl
dec
xchg
pop
add
scas
sbb
xor
dec
std
add
jno
jbe
rorl
fcmovnbe
pop
stos
dec
fimuls
sub
xchg
cmp
mov
fldcw
imul
xchg
inc
insl
mov
and
fucom
enter
scas
fldcw
movsl
inc
in
push
xchg
outsl
adc
cmp
cmp
out
jne
cmc
mov
pop
mov
ss
icebp
addr16
cmp
sbb
mov
adc
push
or
andb
xor
add
mov
push
mov
loope
aam
pop
push
movsl
cmpl
pop
mov
and
and
jg
push
mov
mov
jbe
movsl
lret
cmp
mov
mov
sbb
xchg
mov
jno
dec
in
gs
or
mov
jmp
cmpsl
mov
mov
adc
in
fidivs
icebp
insl
or
ret
sub
cmc
es
cli
xchg
movsl
inc
jmp
xchg
sbb
mov
cmp
cmc
stos
bound
jmp
sbb
sbb
dec
arpl
cmpsb
push
sub
and
cmpsb
in
stc
cmp
add
push
std
push
mov
pop
mov
clc
test
cmpsl
sub
out
xor
scas
inc
jo
test
jne
pop
mov
inc
hlt
iret
repz
stc
push
adc
cmpsl
into
decl
xchg
clc
cmp
loope
fcoml
sbb
pop
pop
insl
cmp
sbb
daa
daa
or
inc
popa
popa
mov
sub
xchg
adc
sub
imul
out
jo
add
data16
dec
js
imul
shll
roll
fstpl
mov
mov
fcoml
arpl
ret
int
or
dec
cmp
shrl
inc
scas
ret
movsb
adc
push
dec
mov
insb
je
fadds
ljmp
movsl
outsb
add
mov
lods
aam
and
sub
scas
lret
out
sub
ljmp
out
lods
inc
jmp
jno
negb
mov
push
xchg
pop
movsb
dec
mov
enter
or
pop
fidivl
mov
das
mov
in
sbb
dec
pop
xor
in
cwtl
and
outsl
bound
push
addb
paddb
sbbl
or
outsb
lret
lcall
not
push
mov
mov
outsl
imul
jg
in
add
jne
dec
insb
sbb
mov
and
inc
mov
shl
lcall
or
lahf
xor
and
mov
sahf
movl
sub
add
push
in
sbb
outsl
push
aas
mov
sub
cmp
mov
sbb
jbe
xrelease
mov
popa
xchg
pushf
roll
ljmp
icebp
push
pop
addb
xor
lret
jle
sub
push
out
scas
mov
mov
aad
andb
leave
mov
lret
cmp
ret
jns
xor
lret
mov
test
gs
movsl
js
dec
sbb
jl
jbe
mov
std
xor
std
push
jp
jecxz
inc
movsl
adc
frndint
pop
mov
insl
das
cmpsb
fisubl
cltd
inc
add
and
sbb
out
jb
or
add
sub
push
push
push
pushf
data16
cli
ret
sahf
cmp
nop
adc
xor
push
lock
outsb
mov
push
jmp
add
mov
pop
push
add
mov
mov
inc
lea
bswap
std
fprem1
add
in
sbb
movsb
stos
or
adc
mov
mov
pusha
push
fdivrs
lahf
adc
push
mov
jecxz
push
xchg
addr16
xor
mov
xlat
jmp
scas
ss
cmpsb
add
stos
andb
add
imulb
sbb
pop
pop
adc
int
jecxz
mov
shl
mov
scas
insb
inc
enter
out
in
leave
xchg
jb
data16
stc
out
pop
and
in
push
iret
jmp
les
jae
pop
mov
repnz
negl
sub
cmp
inc
xchg
cld
movsb
js
cld
outsl
or
out
fs
mov
loop
int
mov
ret
jbe
cld
cmpsl
rol
adcl
mov
mov
rol
lret
das
and
adc
addr16
jae
dec
inc
sub
lods
pusha
jnp
lock
mov
mov
fstl
xchg
xchg
adc
jns,pn
imul
dec
stos
shlb
es
push
add
inc
push
int
xorb
push
mov
ss
movsl
xor
ror
sub
inc
sub
xor
out
popa
mov
pop
sti
xchg
sub
lods
outsl
or
stos
xor
xchg
mov
inc
pop
xchg
pusha
push
stos
icebp
add
sbb
scas
test
xchg
xchg
xor
cli
ds
popf
push
shrl
adc
inc
int3
and
inc
stos
pusha
sub
dec
stos
jne
fimuls
and
fnsave
mov
pushf
push
xor
dec
xorb
int3
clc
cmp
mov
sub
cmp
pushf
cli
and
shlb
stos
int3
xchg
mov
sarb
jp
sbb
cli
inc
call
sbb
into
and
pop
sbb
sbb
mov
mov
adc
addl
xchg
sti
gs
ja
adc
add
fs
dec
push
pop
shlb
mov
mov
pop
mov
rcrl
testl
pop
or
popa
dec
pop
imul
adcl
adc
cmp
add
fwait
fs
cwtl
pop
popf
mov
jp
insl
jl
aas
ss
jge
mov
add
mov
iret
popf
loope
dec
pop
je
iret
mov
outsb
mov
push
mov
push
push
pop
iret
repnz
fnstenv
push
test
jecxz
bound
xchg
mov
iret
movsb
jns
sahf
mov
pop
pop
mov
test
insl
sub
and
jp
jns
push
xor
cli
xchg
push
inc
cmp
pop
insl
mov
xchg
jg
adc
in
xchg
jg
sbb
scas
add
sbb
sbb
shlb
mov
or
and
jg
pop
out
pop
loope
adc
cmp
cmpsl
imul
mov
cmpl
mov
iret
cmc
aad
sub
fiadds
test
push
movsl
jo
out
pop
jg
das
aas
jg
xchg
outsb
push
inc
movsl
xor
push
rorb
js
cwtl
cmpsb
loope
scas
loopne
pop
fdiv
into
lahf
dec
loope
xor
and
jg
sub
movb
add
data16
std
fs
jmp
xchg
es
adc
mov
imul
testl
lds
loop
dec
cmpsl
and
push
nop
mov
cmp
xchg
mov
pusha
mov
jg
js
dec
push
fistps
lock
push
or
sbb
scas
loop
push
mov
pop
into
mov
xchg
xor
stc
fcoml
cmp
mov
mov
push
lea
aas
pusha
jmp
mov
cmp
xor
lods
shrb
incl
fsubrs
or
push
cli
aas
adc
xchg
cmp
jno
push
and
aad
out
cmp
and
jne
dec
into
iret
push
pop
mov
cs
and
cmp
fsub
pop
mov
inc
ret
ficompl
cmp
dec
jmp
mov
loope
jno
iret
cmpsb
pusha
mov
adcl
xchg
and
adc
or
in
movsb
xlat
out
sbb
out
imul
push
xorl
loopne
sahf
dec
jo
stos
cmp
push
push
imul
adc
pop
mov
xchg
int
jb
jne
icebp
pusha
lret
imul
sub
pop
lret
fs
mov
and
into
jge
mov
xchg
cmpsl
or
movsl
rcrl
dec
push
cltd
int3
dec
sbbl
lods
jnp
ja
ja
mov
dec
mov
mov
xchg
lret
fldenv
fisubrs
xor
and
imul
xchg
mov
jmp
sti
push
jmp
fidivrl
push
jns
xlat
sub
mov
cmp
cld
movsb
int3
mov
dec
sbb
push
les
lcall
or
and
popa
in
cmpsl
lea
ret
pop
sbb
out
push
jecxz
xchg
cs
xor
loopne
psrlq
cwtl
fwait
push
push
repnz
dec
adc
or
adc
cmp
idiv
pop
mov
in
cmpsb
fldcw
setns
mov
push
out
jnp
enter
nop
mov
lret
in
sub
fcmovb
inc
nop
push
pop
adc
dec
flds
mov
push
fwait
test
mov
cmp
and
out
jge
gs
stc
push
sub
popa
js
and
mov
shlb
push
aad
lret
xchg
sbb
adc
jp
stos
and
ret
testb
call
inc
mov
pop
mov
test
in
nop
sub
imul
or
les
nop
nop
xchg
mov
into
push
stos
or
jecxz
sbb
push
push
xor
movsl
mov
aas
xchg
xchg
sub
mov
lods
iret
jg
loop
daa
ja
xlat
adc
adc
inc
sub
inc
fs
out
cmpsl
push
push
adc
pushf
lea
mov
cs
xor
jo
fsubp
inc
pop
iret
push
or
cli
cmp
das
push
ret
jmp
fwait
repz
ja
mov
sub
ljmp
movsb
rcr
div
adc
sub
int3
add
stos
negl
mov
cmpsb
dec
repz
popf
scas
nop
stos
push
repz
mov
es
push
stos
out
ljmp
lret
or
sub
or
cmp
fwait
mov
les
pushf
push
mov
push
test
lock
iret
cmovl
pop
in
aam
or
fldt
xor
inc
adc
add
lcall
les
fisttps
push
sub
or
sbb
les
push
fwait
xchg
jecxz
mov
je
mov
jge
xor
xor
cmp
js
inc
sub
sti
fucom
inc
lds
push
mov
and
pusha
ja
lret
popa
mov
mov
cli
and
xchg
stos
xchg
add
xchg
pop
test
orb
aad
push
lret
add
inc
aaa
stos
cmp
jl
into
call
jnp
inc
mov
out
and
dec
cltd
xchg
xchg
mov
fxch
aam
add
xor
stos
call
mov
push
dec
jmp
std
cmc
push
dec
cmc
adc
fcomps
shl
dec
negl
mov
lret
mov
insb
clc
sbb
popf
inc
testb
and
ja
pop
and
add
dec
clc
jno
leave
cs
pop
xchg
bound
sub
cli
jg
mov
cmp
ja
sub
push
jl
xchg
out
jp
jg
xchg
insb
and
xchg
push
add
and
inc
adc
into
jo
cmp
mov
testb
and
mov
inc
dec
xor
or
and
push
lds
and
sbb
mov
jecxz
xchg
or
movsb
sub
jp
dec
addb
cwtl
sbb
sti
unpckhps
adc
cmp
in
les
dec
jl
cmp
data16
out
push
fs
inc
mov
pop
or
jl
mov
das
sbb
sub
adc
std
xchg
xor
jo
or
addr16
xor
loopne
pop
push
sub
lar
mov
mov
out
test
xchg
and
aam
and
lcall
mov
inc
sub
xor
push
sub
icebp
enter
scas
sub
out
out
push
push
mov
cmpsb
outsl
psubq
push
pop
aas
xchg
jle
out
andb
ror
mov
jno
movsl
adc
dec
fimuls
cmp
adc
mov
or
ja
xchg
inc
mov
into
xchg
xor
jle
ss
bound
setg
scas
stc
sbb
mov
inc
cli
mov
idivl
pop
cwtl
ret
js
rcrw
inc
inc
jns
lret
dec
pop
insl
adc
clc
inc
adc
and
dec
cmp
xlat
xchg
test
scas
sbb
fsubrs
and
mov
lods
bound
enter
out
fcompl
cmp
mov
or
dec
in
cmc
mov
ss
out
add
push
jle
mov
pop
xchg
xor
incl
and
sbb
xchg
mov
xchg
out
fsqrt
or
cmp
pushf
fwait
xor
mov
imul
add
ret
arpl
jae
inc
xchg
aam
inc
daa
add
imul
dec
xlat
cmp
mov
repnz
jmp
pushf
or
xchg
nop
add
lret
adc
push
and
jnp
sub
sub
jge
frstor
inc
cmp
mov
inc
pop
xchg
and
lcall
and
loopne
imul
inc
iret
inc
in
xchg
lods
cs
xchg
in
loopne
in
mov
sahf
mov
movsl
in
mov
es
and
mov
adc
pop
cmp
outsb
test
arpl
push
pop
fisttpl
insl
sub
sub
addr16
jnp
mov
arpl
flds
xor
je
arpl
inc
and
mov
add
popa
push
or
neg
filds
ljmp
xchg
popf
test
mov
inc
or
jb
cmc
xor
daa
sbb
fwait
add
lret
fnstsw
fwait
mov
xchg
scas
jnp
jns
and
cmp
pop
inc
cmp
cwtl
loopne
jge
scas
sbb
cs
sbb
inc
data16
mov
sbb
pop
xchg
out
mov
or
inc
pop
inc
je
in
push
dec
add
pop
push
scas
xchg
ljmp
mov
stos
leave
or
jl
dec
sub
stos
mov
cld
int3
stos
inc
mov
lock
and
mov
pop
stos
push
enter
test
insb
ja
xlat
test
jecxz
push
mov
cmc
shrl
sub
cmc
sti
and
int3
add
ret
push
and
mov
xchg
lds
jmp
stc
dec
lahf
mov
in
sub
insb
dec
or
aad
push
cwtl
pop
pop
sahf
xor
int
ljmp
out
bound
mov
call
out
xchg
fstpl
xor
aaa
addr16
add
sbb
xor
jge
mov
in
cmp
sar
sbb
loopne
ret
push
stc
outsb
popa
in
loope,pn
xor
aad
xor
sbb
sub
adc
or
or
repnz
jnp
mov
pop
imul
movsb
mov
into
cli
bnd
out
add
jo
data16
out
jp
inc
cmp
aas
daa
sbb
loop
pusha
sub
insb
aad
out
xor
outsb
xor
mov
gs
mov
sti
inc
lret
xlat
cli
test
mov
jl
in
push
xor
sub
jecxz
mov
adcb
cmp
out
fidivl
adc
mov
shl
jnp
lods
clc
push
jb
and
jecxz
mov
jg
filds
mov
ja
aad
cld
push
bound
fdivrl
aad
pop
filds
xchg
mov
dec
rorb
in
mov
jne
pusha
xor
lock
mov
icebp
dec
jbe
dec
ss
mov
sbb
leave
pop
push
pop
lcall
shl
repnz
insb
xlat
sbbl
add
js
lret
iret
in
jo
sub
sbb
outsb
dec
push
ficomps
jbe
adc
mov
fwait
xchg
cli
lcall
adc
in
xorb
ja
xor
cmp
adc
notb
add
scas
cmp
lods
daa
mov
imul
sbb
and
sub
and
and
adc
and
xchg
jge
rcll
lods
enter
inc
out
mov
stos
pop
xor
das
push
test
add
jle
test
imul
nop
push
mov
xchg
push
mov
pop
pop
xchg
movsl
fsubs
popa
mov
inc
sbb
test
loopne
in
stos
jnp
nop
add
sbb
arpl
lret
jbe
dec
sbb
or
lods
dec
xchg
icebp
xchg
sti
push
dec
notb
dec
loopne
pop
ss
lods
movsb
mov
adc
negw
jl
pop
inc
js
cli
push
mov
cmpsl
js
jbe
das
cmp
out
scas
mov
cwtl
insl
push
push
mov
ret
ss
jns
call
in
xor
addr16
fildl
cmp
jg
cltd
mov
push
sti
adc
sub
xor
inc
add
inc
shl
dec
or
fmull
es
inc
loope
mov
sbb
test
jnp
sbb
ss
push
iret
pop
shlb
jge
push
sbb
cli
mov
vmovdqu
popf
lods
fs
jmp
push
in
mov
in
int3
cmp
or
shll
inc
push
jae
sarl
enter
or
lahf
push
add
mov
mov
xchg
andb
cli
sti
sti
js
xchg
leave
push
xor
sbb
stc
or
inc
mov
inc
jne
fwait
out
pop
jbe
mov
mov
jb
jbe
adc
gs
cmp
into
in
sub
test
jp
lret
cltd
xlat
pop
rorl
hlt
outsb
pop
sahf
mov
mov
fwait
pop
mov
jle
mov
or
cmp
xlat
mov
xchg
jno
test
repz
repnz
adc
inc
add
push
sbb
fucomi
jmp
aad
xchg
fistpl
lock
les
xchg
sbb
dec
and
pop
jp
push
stc
leave
sahf
lods
rorb
addr16
cs
not
xchg
into
push
push
enter
jb
mov
mov
xor
cmpsl
loop
mov
pusha
cmp
sub
shll
mov
mov
dec
rcll
xor
push
or
adc
or
fneni(8087
fstpl
pop
adc
cwtl
inc
scas
adc
and
xchg
mov
popa
sar
xchg
test
mov
outsb
in
out
cmp
scas
push
stos
pusha
xchg
sub
imul
lret
fstpt
fs
fwait
mov
push
mov
or
fidivrs
dec
dec
int3
les
in
shl
fistpl
xorb
int
xlat
dec
shlb
mov
sbb
repnz
adc
popf
mov
sub
inc
paddusw
push
or
leave
rolb
push
mov
mov
mov
push
fisubrs
xor
or
imul
push
cmp
jl
cwtl
lods
fwait
mov
sahf
pusha
lods
sbb
cmc
inc
mov
test
cmp
sti
add
nop
push
pop
or
fistpl
clc
rolb
mov
pushf
pop
sbb
mov
mov
ljmp
inc
dec
push
repnz
fwait
fcmovnb
sbb
lea
and
pop
sbb
mov
lds
pop
add
movsb
jne
adc
outsl
add
inc
aad
sbb
lods
int
mov
lock
sahf
arpl
push
inc
enter
pop
ror
push
loop
in
cmpsl
mov
fwait
inc
bound
hlt
jmp
sti
push
addb
cs
rolb
pcmpgtd
bound
dec
xchg
fdiv
stos
data16
inc
and
sub
mov
dec
int
ljmp
clc
rorb
pusha
or
mov
adc
test
xchg
scas
cs
stc
repnz
mov
mov
pop
xchg
mov
loop
add
out
or
addb
inc
add
mov
adc
xor
data16
test
inc
push
jmp
out
aas
mov
scas
or
std
lods
pusha
sub
repz
push
pop
loopne
cmp
jne
cmpsb
xlat
sub
pop
sbb
arpl
sbb
fistpl
pusha
sub
mov
mov
mov
ret
iret
andl
loope
aas
lea
xor
mov
add
roll
adc
sbb
js
jmp
push
enter
lods
pop
fwait
xor
maxps
lods
cmpsb
ljmp
int3
in
mov
movsl
cwtl
mov
jns
mov
lahf
shlb
out
jnp
jbe
dec
xor
mov
jns
mov
mov
pop
out
pop
mov
adc
xchg
loopne
mov
inc
insb
repz
xchg
xchg
cmp
sbb
xor
add
inc
aad
jmp
jo
push
pusha
push
xor
push
xchg
mov
daa
jno
loop
ljmp
adc
mov
or
cmpb
xchg
jg
sbbb
pop
imulb
in
add
sub
mov
xchg
call
and
imul
push
stos
push
data16
les
mov
xchg
imul
inc
je
fidivrs
dec
push
inc
in
lahf
hlt
leave
into
add
mov
negb
sbb
xorl
je
into
andb
test
push
pop
flds
inc
aam
push
out
mov
xor
vandnps
cmp
inc
xchg
je
outsb
outsb
adc
cwtl
mov
ss
mov
sbb
leave
mov
test
je
mov
add
mov
mov
mov
mov
sahf
dec
mov
sarb
fs
pushf
repnz
push
pop
jmp
repz
dec
fimuls
iret
mov
dec
inc
sub
fwait
cmp
test
adc
aas
jns
mov
jnp
ljmp
xchg
nopl
xorb
inc
rol
hlt
xor
jle
adc
and
test
addb
sbb
filds
mov
aad
sbb
xchg
xor
jbe
dec
and
cli
sub
shll
jmp
or
sbbl
mov
fists
xchg
mov
xchg
pop
mov
mov
adc
sub
sub
stos
into
adcb
xor
mov
sbb
xlat
imul
lahf
call
imul
or
adc
idivl
cmpsl
jnp
loopne
setns
adcb
shl
and
in
test
jb
push
add
cmc
fildl
je
jne
rcrl
xchg
out
fs
shlb
mov
mov
imul
jge
xor
inc
lds
pop
sbb
das
push
cmp
push
call
push
fwait
daa
mov
jae
dec
sub
mov
mov
ja
call
push
push
ds
and
mov
daa
push
push
mov
lods
std
fdivl
repnz
out
pop
inc
loop
cmp
mov
push
and
xor
sahf
lcall
mov
push
mov
mov
lcall
orb
add
ss
rol
stos
mov
sti
insl
push
scas
mov
cmp
push
gs
or
mulb
mov
iret
andb
bound
mov
xchg
es
inc
out
push
sti
push
into
xchg
pop
and
pop
sub
sub
sbb
shlb
rol
push
inc
jbe
aaa
aad
aam
add
xor
loope
xchg
mov
xchg
jmp
mov
movsb
xor
jl
xchg
pusha
sub
xchg
mov
daa
inc
sub
mov
pushf
mov
jo
jl
and
data16
scas
cmpsb
lahf
xorl
xlat
inc
rorb
mov
ret
aad
fnsave
sub
outsb
loop
mov
int3
minps
rcrb
fsubl
mov
pop
lds
jl
das
sbb
subb
ret
dec
sbbl
aas
cmp
mov
mov
mov
leave
test
adc
loope
jne
add
xor
sub
pop
out
jae
test
xchg
shll
cli
in
fidivrs
and
and
sub
getsec
scas
repz
lds
js
add
test
enter
jg
jo
dec
sti
fbld
inc
xchg
pop
enter
cmpsb
mov
dec
or
sbb
lods
mov
inc
inc
cli
xchg
cmp
aaa
push
sbb
xchg
jg
adc
fs
ds
xchg
out
aas
jle
aad
loop
sbb
sbb
ret
mov
pop
mov
andl
clc
xchg
fbstp
cmovne
dec
stc
insl
shrb
mov
push
mov
push
test
repnz
jne
push
mov
jns
out
lcall
sbb
pop
mov
fmulp
iret
push
cli
sub
pop
pop
adc
dec
movsl
out
dec
push
movsl
fstpt
pop
dec
dec
jno
repnz
or
push
mov
lcall
xlat
sbb
test
pop
push
insl
call
jle
and
movsb
mov
mov
in
sub
mov
push
adc
and
sbb
rol
lea
mov
and
sub
ja
je
sub
out
je
inc
cmpsl
lds
mov
push
outsb
es
add
xchg
mov
lods
add
bound
stc
subl
jmp
scas
xchg
add
paddusw
push
mov
mov
xor
add
cmc
lds
or
cld
mull
or
into
fs
scas
addr16
rolb
loopne
mov
rorl
sti
ficoml
inc
jne
mov
or
les
mov
and
cmp
xor
mov
cmp
leave
in
test
sbb
repz
add
das
gs
iret
cli
ret
scas
lret
xchg
mov
adc
and
aam
int3
pop
test
fdiv
rclb
clc
xchg
ja
jmp
stos
popa
mov
out
cs
jbe
dec
data16
and
je
inc
mov
arpl
mov
pusha
inc
push
mov
fimuls
and
ds
testb
inc
mov
adc
or
xor
xchg
mov
loope
sbb
pop
inc
sbb
xchg
popa
clc
mov
jo
jo
test
add
mov
lcall
hlt
jp
add
test
mov
lea
fwait
pop
mov
cmp
push
mov
sahf
mov
cmp
xchg
in
in
jb
outsl
scas
shl
xorl
test
and
xor
jecxz
pop
iret
shlb
aad
in
mov
cmp
insb
and
stos
jp
out
lcall
fldenv
js
in
sbb
push
jg
lahf
push
adc
mov
cltd
lea
dec
je
and
out
clc
xchg
add
lods
xor
pop
out
mov
aas
lds
mov
pop
cmp
gs
sbb
jns,pt
inc
cli
jge
dec
stc
jge
and
inc
xor
mov
jae
inc
lock
pushf
jl
cmc
xchg
adc
mov
sbb
mov
ja
call
scas
cmp
pop
loopne
or
mov
inc
in
jno
jmp
lahf
movsl
jns
sbb
cld
aas
scas
lods
sti
js
inc
test
adc
aam
sub
add
mov
and
sbb
sbb
mov
mov
decb
movsl
ljmp
xor
addr16
mov
mov
stc
jo
xor
mov
jmp
cmc
and
jge
mov
dec
addb
add
mov
cmc
and
cmpsl
fbld
out
movsb
xchg
push
cmp
xchg
adc
add
mov
add
cmpsb
xor
inc
xchg
mov
pop
es
mov
adc
pop
add
push
dec
mov
xchg
jo
pop
test
add
or
lock
filds
jno
jne
adc
outsl
sub
fldl
jb
push
xchg
jno
jbe
push
adc
dec
leave
ficoml
push
icebp
pop
icebp
nop
sbb
addr16
xchg
xchg
cmp
dec
push
sbb
adc
cs
jle
mov
and
jecxz
shrl
or
sbb
lahf
imul
test
fcompl
lret
dec
sbb
pop
ds
dec
xchg
inc
leave
sub
mov
movsb
pop
fcomps
inc
and
push
hlt
jecxz
sub
add
push
jb
cld
adc
movsb
mov
inc
jae
push
sub
les
mov
cs
test
imul
mov
mov
jbe
shlb
fdivl
add
sub
mov
daa
int
inc
mov
jne
dec
pop
push
push
mov
mov
aaa
inc
sub
jns
or
dec
std
dec
mov
adc
jg
fs
pop
fidivs
add
adc
or
sti
sar
xor
outsl
lret
inc
sub
je
mov
mov
inc
andl
into
iret
jnp
sbb
inc
sahf
cld
call
lods
in
mov
push
cmp
out
fistpll
add
out
mov
bound
jp
jno
test
jmp
cwtl
dec
add
popf
jo
ss
jecxz
movsl
sub
lods
popf
xor
mov
loopne
inc
mov
in
mov
push
xor
test
cmpsl
dec
scas
repz
jno
lds
push
insl
insb
lret
mov
incb
mov
xchg
cmpsb
mov
insl
out
adc
push
cmp
jecxz
pop
cld
jg
sahf
testb
xchg
test
add
mov
loopne
sub
stc
sbb
int3
repz
xor
add
push
into
inc
jbe
test
stos
adc
movsl
sbb
out
and
mov
inc
xlat
mov
pop
and
lahf
jne
pop
cmp
mov
sbb
jo
inc
xchg
imul
mov
in
inc
in
pop
in
out
mov
mov
lods
cli
inc
cmp
dec
inc
incb
lea
lret
xor
push
ret
cmp
xor
andb
dec
test
jmp
aas
mov
adcb
jb
mov
adc
pop
iret
and
mov
add
rorb
sbb
movsb
dec
popf
mov
mov
sbb
cwtl
rorl
fsubrl
clc
dec
mov
mov
in
mov
push
and
mov
adc
stos
adc
rolb
push
lds
loope
cmc
repz
sti
fadds
pop
jne
xorl
clc
pusha
adc
pop
loope
sbb
mov
push
mov
es
xchg
pop
pop
into
xor
xchg
lret
sbb
sbb
enter
fwait
cmp
rclb
mov
cmpsl
xchg
test
ror
and
stc
mov
cli
js
mov
jge
dec
mov
fcoml
sbb
or
xor
in
stos
or
lcall
sbb
mov
xorl
mov
inc
ret
rcll
cmp
inc
jmp
jmp
andb
push
xchg
mov
out
les
int
cmp
mov
sarl
dec
sub
inc
dec
mov
mov
pop
adc
jp
and
and
shr
shrb
mov
jns
inc
pop
jl
or
shl
hlt
arpl
or
cmpsb
ja
jl
mov
push
repnz
jb
jl
lret
cld
mov
sbb
lods
push
push
add
ss
cmp
out
arpl
mov
test
out
jp
push
es
bound
xchg
push
or
cmp
or
sub
or
imul
inc
pop
mov
pop
mov
jne
fiaddl
mov
inc
mov
mov
in
mov
dec
pop
mov
add
jne
scas
mov
xor
mov
sub
ret
jp
insb
xchg
loop
mov
add
nop
pop
movsl
fistl
pop
pop
mov
push
mov
pop
pusha
stc
movsb
outsl
jl
cli
dec
mov
pop
inc
out
mov
sub
test
mov
sbb
sub
or
xchg
cmp
xor
sub
sarb
or
insl
and
jg
adc
repnz
xchg
std
add
sbb
ss
mov
push
hlt
cmp
pop
cltd
or
jnp
mov
adc
add
insb
push
ret
int3
sbb
es
fistps
xor
pop
aaa
mov
sub
stos
and
dec
in
daa
pop
xor
stos
dec
adc
xor
pusha
mov
data16
sti
test
shll
pop
and
aas
xchg
testb
sbb
roll
jb
jp
lea
icebp
lock
inc
aas
sahf
mov
adc
sarb
cmpb
sahf
add
mov
cmpsl
fmuls
mov
pop
cmp
popa
movsl
xor
test
outsl
jle
mov
jae
cli
or
mov
add
scas
mov
jl
ret
xchg
xchg
mov
jae
cmpsb
shl
dec
iret
and
lret
cmp
cltd
ret
push
push
add
cmp
push
push
ds
fidivl
inc
or
sub
pop
dec
push
lods
jl
pop
cmp
dec
shrb
in
pop
sub
mov
sbb
add
sbb
push
pop
push
rclb
or
mull
pop
fucomp
movhps
out
ret
adc
sbb
push
movsl
or
cmp
dec
sbb
cmpsl
testb
sbb
rcrl
mov
popf
andb
dec
jecxz
pop
push
push
repnz
mov
cmp
repnz
sub
or
popf
mov
int3
xor
fistpll
push
add
and
jae
loope
ret
push
inc
pop
push
mov
or
ds
cmp
mov
add
sub
jbe
movsl
dec
shll
add
and
push
xchg
movhps
repnz
or
insb
sub
lea
in
jae
arpl
mov
incl
jg
sarb
and
rcrl
hlt
sbb
push
arpl
jae
lock
sti
mov
jnp
in
in
aam
cmp
jnp
fld
add
mull
insb
sub
icebp
adc
dec
das
xor
cmp
stos
ljmp
iret
push
fsubl
mov
push
pop
addb
out
lret
adc
lret
mov
mov
or
mov
test
add
dec
setge
inc
xchg
mov
les
mov
and
std
aaa
cmpsb
xor
mov
pusha
popf
test
daa
mov
cmp
dec
xchg
lds
cmc
dec
arpl
xchg
pop
xor
push
add
dec
cmp
ret
js
mov
pop
sub
fimuls
pushf
stc
add
cmc
mov
jnp
cmp
stos
cmp
fmul
pusha
and
and
cmpsb
popa
mov
or
mov
inc
xchg
sbb
add
push
pop
cmp
push
repz
shr
xadd
sub
push
adc
pop
popf
mov
out
into
insl
pop
adc
hlt
daa
sub
call
push
cmpb
xorl
vpaddsw
popf
hlt
fsubs
repnz
jns
ljmp
outsb
outsb
xchg
lods
and
ret
call
es
jl
and
iret
es
shll
shll
sbb
imul
daa
imul
sbb
mov
jns
and
hlt
shl
sbbb
mov
cmp
in
clc
mov
lret
int3
jecxz
popf
lcall
nop
xor
out
leave
popf
sbb
cltd
lods
push
inc
icebp
and
cmpsb
in
mov
mov
sub
fsts
cmp
aaa
jae
ljmp
dec
pop
mov
sub
jo
ficoms
fisttpl
fst
inc
jb
push
test
xor
mov
mov
addr16
ror
push
mov
xchg
cmp
in
cld
movsb
sub
leave
int
cmc
push
mov
mov
inc
mov
rorl
mov
and
ret
scas
dec
xor
pop
xorl
pop
xchg
cmp
xorb
test
adc
push
fistpll
insb
orl
ret
add
cmp
xchg
je
aaa
mov
sarl
push
repz
repnz
inc
lock
xchg
iret
lea
mov
sbb
jle
mov
inc
mov
dec
mov
push
inc
xor
stos
arpl
out
pop
loope
inc
adc
or
add
addb
hlt
dec
xlat
add
ljmp
ljmp
jp
notb
push
ret
sub
xchg
inc
inc
inc
adc
mov
enter
insb
adc
shll
mov
jle
test
inc
sbb
rorb
mov
lea
shrl
add
dec
addl
aad
movsl
dec
cmp
adc
in
in
mov
ljmp
xchg
shrl
push
ja
roll
insl
mov
jno
and
clc
jb
or
sbb
imul
lcall
repz
into
ljmp
sahf
icebp
mov
sbb
dec
or
sub
jb
cmp
mov
cmp
inc
or
sub
xchg
gs
imul
insb
mov
adc
sbb
dec
lret
mov
mov
ja
imul
adc
jge
jge
lret
call
xor
lods
mov
push
sbbb
sbb
rcll
insl
lods
cmp
scas
fadds
je
mov
out
push
mov
push
or
add
xchg
sub
stc
cs
add
xlat
inc
and
mov
fwait
imul
ret
stos
inc
cmc
rorl
pop
xor
dec
fisubl
out
or
movsl
xor
repz
xchg
add
data16
jns
lods
xchg
nop
stos
pop
xchg
scas
or
out
mov
or
int
dec
xor
push
out
mov
fsubrp
scas
lcall
cs
add
xor
pushf
fwait
jecxz
pop
cmpsb
rorl
and
jne
hlt
add
sub
movsb
and
cmp
xor
stos
mov
divl
push
and
test
pop
push
movsb
xorl
sub
lcall
dec
int3
iret
outsb
ljmp
aad
adc
mov
xor
mov
cmp
mov
sub
pusha
sti
inc
inc
shrl
movsb
jp
push
ret
ljmp
iret
ds
out
push
xchg
ja
out
out
adc
ja
addb
or
out
bound
xchg
rcl
ds
jno
outsl
or
xchg
add
adc
pushf
mov
out
pop
push
dec
pop
test
out
lods
out
and
sbb
imul
mov
outsl
movsl
push
adc
movb
mov
xchg
or
sbb
mov
mov
in
adc
imul
outsb
push
and
in
cltd
mov
xor
repz
jg
mov
sub
aaa
out
sub
xor
mov
push
seta
pop
hlt
add
pop
test
lahf
mov
add
push
xlat
cmpb
xchg
dec
jbe
sarl
pop
or
inc
push
shll
mov
push
cs
xchg
add
add
mov
in
icebp
out
and
jo
cmp
imul
adc
out
mov
or
lahf
popl
pop
int3
mov
decl
scas
or
pop
jb
mov
or
ret
cmpsb
pop
out
mov
xchg
jns
lds
sub
mov
adc
mov
aaa
cmp
mov
aas
stc
dec
mov
jbe
mov
in
mov
movsl
test
cmp
icebp
imul
inc
pand
jg
sub
jno
in
mov
das
paddsb
cltd
test
and
lds
xor
lea
data16
inc
pop
sahf
cmpsb
sahf
arpl
imul
hlt
call
dec
add
cmp
sub
rorl
in
mov
inc
inc
push
inc
adcl
ds
jl
adc
stos
mov
cmc
into
xlat
fldl
movsl
pop
cmp
xorb
cmp
cmp
cli
addr16
stos
add
xchg
mov
test
test
inc
sub
ljmp
imul
arpl
call
add
sbb
adc
mov
addr16
pushf
add
cmp
pop
cld
cwtl
insb
mov
add
or
pop
imul
cmp
sub
sub
insb
insl
inc
sub
pop
push
push
pop
stos
dec
std
jp
cmp
int
xchg
cmc
pushf
shr
inc
outsl
iret
sti
sbb
mov
mov
jecxz
mov
push
lods
sbb
out
jmp
and
cmp
mov
mov
mov
push
cmp
shrb
or
mov
lods
push
mov
jecxz
loop
or
push
xor
cmp
lds
clc
add
mov
xlat
sbb
shlb
sub
cmpsl
mov
pusha
fstps
inc
add
pminsw
adc
mov
lods
sbb
or
mov
sub
jmp
inc
ds
xchg
dec
xor
mov
imul
dec
mov
les
lods
icebp
loopne
enter
push
adc
dec
mov
movsb
fwait
inc
pop
imul
sbb
lea
jo
test
cmp
call
adc
mov
je
sub
movsb
ffree
adc
jge
mov
sub
push
pop
outsl
sahf
rorl
pop
and
in
push
flds
rcrb
fs
sub
mov
fsubrl
mov
mov
add
cmc
adc
das
mov
rcrl
ljmp
mov
xchg
dec
nop
cld
inc
shrb
inc
mov
xor
pinsrw
adc
mov
cmp
mov
scas
push
push
enter
insl
es
addr16
inc
inc
ror
hlt
adc
repz
cltd
insl
sbbb
push
cs
pop
dec
sbb
mov
out
out
andb
outsb
bound
mov
sbb
sahf
or
cmp
lret
rcl
mov
push
sbb
jl
std
add
rorb
sti
leave
jae
push
or
mov
pop
jb
pop
sub
inc
cmp
ret
xchg
in
loope
aam
aaa
xchg
test
out
mov
mov
push
xor
insb
sub
or
sti
sbb
test
lret
mov
movsb
sub
mov
or
and
fcoml
sti
cmp
push
adc
inc
cld
and
sub
pop
mov
test
cwtl
xchg
stos
fmulp
mov
push
clc
xlat
fs
xorb
aaa
out
sti
xchg
and
dec
xorl
push
cltd
mov
fdivr
inc
cmc
stos
mov
sub
mov
mov
lret
fiadds
and
push
cs
sub
test
xchg
fld
inc
aaa
arpl
cmp
adc
les
dec
inc
scas
push
aas
jo
iret
lret
test
dec
xchg
ret
pusha
shr
rcrb
popf
andl
dec
adc
dec
push
jb
imul
repz
mov
adc
fimuls
sbb
xor
inc
add
lods
mov
cs
xchg
inc
mov
inc
pusha
add
leave
push
fldt
cmp
fcoml
test
sub
or
sbb
or
add
xor
xchg
jo
xor
lods
lock
shrl
mov
pop
scas
movsl
xor
clc
dec
lret
aad
test
repz
pushf
cltd
mov
mov
repnz
sbb
rcrb
test
ficoml
iret
lods
in
mov
insl
jge
sub
jbe
fwait
aam
addr16
fistl
jbe
add
rclb
das
in
out
inc
sub
das
pop
xchg
lea
sbb
xchg
lods
sub
pop
rcrl
push
inc
repz
add
or
mov
lret
repnz
loope
in
stc
mov
mov
xchg
int
xor
imul
push
jno
sarb
xchg
cmp
xor
sub
cmc
shl
add
and
sub
jge
push
fsts
test
pop
cmp
mov
test
stos
outsb
pop
bound
lods
push
sbb
cwtl
jmp
mov
sbb
bswap
ret
rolb
clc
ds
mull
mov
and
sub
mov
mov
cltd
push
repz
loope
jbe
mov
mov
pop
stc
jne
orps
jge
stos
dec
xchg
fwait
inc
jle
sbb
add
sbb
mov
daa
jmp
jo
jle
mov
mov
out
mov
xor
jno
sub
push
push
inc
idiv
xor
stos
pop
push
hlt
lods
bound
sub
jle
push
in
mov
xor
cmp
es
test
aam
adc
xorb
mov
add
in
xchg
mov
inc
arpl
xorl
rorb
inc
pop
mov
imul
imul
movsb
pop
push
fidivl
addr16
xor
sub
stos
cmpsb
movsl
cmp
std
in
popa
jne
insl
in
pop
rorl
mov
inc
lahf
lds
jns
pop
mov
rorl
pop
sbb
out
pop
mov
mov
cli
mov
shufps
pushf
or
mov
jae
or
and
dec
jb
repz
dec
cmp
push
lret
cmp
popa
clc
loop
mov
movsb
call
les
repnz
movaps
nop
js
mov
cld
adc
movsl
cld
push
mov
sub
xlat
int
or
adcb
int
pop
imul
add
sub
dec
scas
and
add
imul
or
bound
dec
xor
out
aad
outsb
mov
mov
dec
dec
add
stos
lahf
jmp
in
or
jmp
loope
cmp
xchg
jg
popf
test
negl
loop
sbb
aam
cltd
ja
data16
mov
in
stos
imul
jmp
push
stos
mov
pop
out
and
add
mov
mov
add
sbb
mov
sub
xchg
in
mov
inc
sbb
mov
cmpsb
push
mov
xor
pop
mov
data16
mov
jns
leave
add
pop
ret
cld
addr16
js
mov
mov
cmp
xor
dec
aad
cmpsb
stos
inc
enter
test
mov
outsl
fwait
mov
and
jmp
xchg
adc
call
lods
add
or
bound
mov
lret
add
shll
pop
xchg
adc
inc
xchg
lret
in
adc
into
sbb
in
xor
cltd
gs
sbb
aaa
or
pop
add
jb
outsb
insb
add
sub
or
xchg
cld
lock
dec
mov
cmpb
push
pop
lahf
xchg
xlat
push
inc
mov
adc
add
into
lret
adc
pop
xor
sub
repnz
adc
cmpsb
js
adc
enter
adc
pop
cli
inc
enter
mov
into
mov
out
arpl
cli
push
jge
icebp
outsl
and
xor
cmp
stos
sbb
test
sbb
push
cwtl
fbstp
pop
pop
testb
mov
inc
adc
rcrl
sbb
pop
dec
xchg
sbb
mov
adc
loope
mov
or
jbe
sarl
nop
inc
push
dec
test
gs
out
dec
rclb
aas
out
push
dec
lods
or
std
sub
xchg
lcall
lods
xchg
daa
pop
shr
cmp
xchg
and
mov
or
mov
leave
sbb
mov
inc
xchg
adc
test
sbb
push
jmp
je
sbb
cmc
cld
daa
push
gs
mov
add
sti
cmpsb
lock
jle
repnz
daa
pop
or
js
sahf
mov
cmp
fadds
pop
mov
icebp
pop
push
lahf
ret
jns
xor
jbe
dec
pop
pushf
xor
cmp
into
jnp
push
or
sub
iret
jge
mov
ret
test
sub
sub
push
or
push
ret
cmpsl
adc
mov
lahf
cld
xlat
lock
sbb
mov
mov
jbe
or
pop
in
mov
lahf
out
stc
jbe
mov
in
inc
fmuls
mov
cmpsb
jno
outsl
mov
mov
mov
mov
or
xor
les
sub
push
push
mov
sub
cmp
cmp
add
jb
jae
insl
sub
push
pop
or
roll
je
shrb
add
cmc
sbb
aad
enter
fidivrs
insl
shll
out
into
stc
mov
cld
push
in
mov
pop
out
fs
insl
in
fs
xchg
sti
add
aas
out
ljmp
adc
sub
cmp
movlps
std
stos
aam
jae
lock
enter
scas
ljmp
pop
xchg
out
stos
adc
repz
adc
insb
pop
popa
mov
loop
mov
ja
inc
push
mov
mov
cld
scas
mov
mov
aaa
add
fmul
bound
rorl
xor
punpckhbw
add
xor
shll
cli
adc
jns
mov
fdivl
sbb
adc
jg
xchg
fcoml
rcr
pop
dec
dec
and
push
pop
in
jb
dec
push
jecxz
divb
sub
loope
ret
addr16
jo
mov
cmc
addr16
mov
or
pop
adc
arpl
inc
repnz
and
pop
das
call
inc
pop
or
push
insb
mov
jb
xor
out
mov
push
in
mov
lret
out
pop
sub
mov
sbb
in
lahf
mov
int3
repz
ss
add
mov
in
and
ljmp
mov
aas
cmp
jecxz
sti
inc
pushf
rcrb
add
adc
ljmp
jg
fnstsw
cmp
js
test
jb
lods
incb
mov
icebp
test
or
notl
jns
in
sbbl
iret
lcall
jo
fcomip
pop
add
es
inc
add
dec
xor
cs
jne
shlb
std
rolb
dec
xchg
xor
jbe
dec
aas
clc
fisttpll
jmp
jnp
add
inc
jo
push
pop
dec
adc
mov
cmc
loopne
mov
mov
loopne
add
xor
mov
mov
mov
inc
std
push
filds
mov
cltd
loope
aaa
cs
shlb
mov
scas
mov
scas
jecxz
and
jge
push
add
pop
scas
loope
pop
mov
cmp
nop
sub
in
mov
adc
int
iret
cwtl
pop
in
insb
lret
movsb
jb
dec
mov
pop
xchg
daa
dec
lock
pushf
stos
idivl
loope
fmulp
mov
fnstsw
std
les
dec
mov
rcl
enter
fists
and
dec
jp
insb
mov
jmp
insb
inc
cmpsl
ss
sbb
or
xor
push
sbb
pop
inc
adc
vmovd
sub
inc
leave
pop
adc
sbb
jg
loopne
xor
outsb
loopne
pop
outsb
add
je
sahf
fwait
sbb
test
cmp
loopne
and
mov
stos
inc
mov
loopne
jge
cmp
mov
mov
fistl
jp
mov
mov
repnz
cmc
and
nop
or
ret
mov
enter
and
cmp
es
dec
pop
dec
sti
cmp
xchg
aaa
dec
xlat
inc
mov
adc
jg
add
cmpsb
lret
shrb
ret
out
in
js
les
mov
and
mov
and
inc
lock
test
popa
pop
std
sub
leave
and
outsb
xlat
test
ljmp
hlt
iret
jb
leave
dec
fsts
adc
jne
ljmp
add
cmpb
in
lds
lret
xor
push
sarl
lcall
xchg
scas
aad
sbb
jbe,pt
xchg
addr16
insb
lcall
popf
imul
fisubl
xor
inc
push
inc
dec
repnz
sahf
xor
mov
flds
xorb
aam
inc
shrb
rclb
inc
mov
sub
sbbb
loope
or
xchg
shr
test
in
xor
into
sahf
je
arpl
and
or
push
push
stc
jb
imul
sahf
sti
pop
fcmovnu
call
mov
push
xchg
cmc
xor
sub
or
mov
ret
push
xor
scas
cli
sub
mov
cwtl
outsb
sarl
ss
xor
push
dec
dec
adc
mov
xchg
fisubrl
lock
fists
mov
xchg
xchg
dec
xor
adc
insb
psubusw
push
ret
movsb
jnp
mov
mov
cmp
sbb
xlat
jo
pop
mov
xor
cmc
push
mov
ret
in
movsb
mov
stos
pop
out
pop
scas
pop
lds
xchg
dec
cld
ror
mov
ret
jbe
movsb
punpckhdq
in
sub
test
in
ja
scas
out
mov
push
cwtl
and
mov
out
aad
rcl
or
xor
xor
rcrl
mov
add
mov
out
sbb
adc
push
rcr
loop
xchg
ret
lcall
push
fists
xchg
jb
loope
jnp
insb
stos
pop
jno
call
leave
loop
cmpsl
icebp
jmp
push
ffreep
aad
xchg
dec
sbb
sbb
fldcw
cmp
jne
sub
xchg
ljmp
adc
repnz
inc
lret
testl
mov
loop
or
adc
pop
cmp
or
cmp
fbld
or
or
lret
pushf
adc
mov
inc
cmp
inc
hlt
sbb
push
mov
sbb
test
mov
in
imul
push
into
mov
arpl
icebp
push
or
jmp
inc
mov
mov
and
jae
flds
jmp
mov
jmp
ja
cwtl
movsl
idivl
jne
daa
inc
push
in
test
clc
and
add
pop
push
jae
popf
jae
inc
test
jns
popa
cltd
sbb
inc
ficomps
loop
mov
sbb
shrb
pop
in
into
jns
sbbl
push
pop
int3
sbb
fildl
sbb
xor
mov
fisubs
mov
mov
mov
imul
cld
lret
mov
fnsetpm(287
scas
pop
inc
dec
insl
in
push
dec
mov
mov
testl
push
or
lret
lods
rcll
pop
enter
imul
fstpl
dec
movsl
cmpsl
sbb
mov
test
scas
rcrl
push
lcall
movsl
xlat
or
sti
aam
push
sbb
pop
insl
ss
or
adc
push
mov
xchg
mov
sub
dec
and
or
jo
xor
and
outsb
scas
inc
cmc
ret
xor
pop
sub
and
cmpsl
fstps
gs
dec
fcoms
addb
arpl
cmp
imul
mov
out
lods
int
mov
data16
fimuls
jge
inc
pop
lods
and
xor
and
aaa
mov
gs
lahf
leave
in
test
int
ds
scas
xchg
push
mov
in
jl
xor
enter
dec
xchg
xchg
sbb
std
add
clc
mov
sub
mov
jnp
ljmp
jle
adc
cmpsb
xor
xchg
jae
sub
repz
lret
mov
aad
mov
aas
adc
pop
mov
push
jae
testl
loop
pushl
popf
pop
stos
clc
test
mov
call
cs
std
ret
cmpsb
stc
scas
cmc
das
mov
dec
inc
dec
dec
movl
mov
mov
mov
sti
xor
cmp
sbb
popf
rcrb
outsl
lea
fisubl
dec
mov
ss
xchg
cli
sub
xchg
test
enter
xchg
mov
arpl
pop
push
mov
push
or
push
in
iret
loop
repnz
fidivl
dec
fidivrl
cmp
nop
jmp
sub
call
pop
jo
jg
inc
aas
cltd
out
shr
test
jmp
xchg
pop
aas
pusha
stos
dec
sub
lods
dec
mul
mov
inc
mov
xchg
popf
jbe
add
xor
mov
sbb
lcall
adc
and
push
add
pop
cmp
sbb
pop
int
mov
inc
mov
das
shlb
stos
mov
fisttps
out
add
jp
dec
les
or
into
cmpsl
and
xor
mov
scas
arpl
xchg
bswap
adc
loop
push
xor
or
lods
int3
cmp
inc
xor
ret
jg
mov
push
cmp
adcb
test
fmuls
inc
jb
fnstenv
mov
movsl
cmp
mov
fistps
jbe
jae,pt
xor
into
scas
enter
xchg
sub
xchg
ret
jge
add
adc
cli
or
or
dec
pushf
or
imul
fwait
or
frstor
pop
data16
clc
cmp
out
inc
sti
or
aam
mov
xchg
xor
or
test
divb
push
movsb
sub
mov
js
cs
stos
xchg
xchg
mov
aaa
clc
fbld
inc
call
insl
aas
cmp
fsubl
std
imul
hlt
push
cmc
mov
inc
in
jne
mov
adc
fdivrs
popf
ljmp
repz
ret
xchg
inc
xlat
fdivr
inc
sbb
add
push
and
mov
out
pop
mov
fdivr
stos
stos
fstps
in
insb
mov
bound
fists
pop
lret
xor
je
xor
cmpl
out
aas
insl
jmp
js
fadd
out
fnstsw
pop
adc
pop
pop
mov
sbb
mov
inc
or
cmp
and
jbe
sub
mov
inc
stos
addr16
loopne
lahf
adcl
push
adc
sub
sbb
aad
shll
lret
imul
shlb
push
insl
add
jns
mov
hlt
push
or
sbb
push
das
ljmp
testl
fbld
lahf
sbb
mov
and
mov
jecxz
push
incl
dec
js
fwait
ret
in
aam
test
cmp
dec
test
hlt
adc
jle
dec
fisttpll
cld
xor
jl
scas
or
aam
nop
addr16
cltd
lcall
sbb
jns
mov
lods
idiv
fs
dec
mov
cltd
test
xchg
jle
push
loop
mov
xchg
arpl
or
arpl
pusha
cld
xor
nop
and
cmp
cmpsb
repz
inc
aam
jmp
ss
xor
jmp
movsb
lcall
ja
pop
mov
pop
push
fs
mov
push
mov
pop
out
adc
out
mov
push
pushf
aam
or
rcl
test
lds
jg
sahf
mov
and
pop
or
push
imul
ss
mov
in
inc
fadds
out
mov
mov
pop
hlt
sbb
insb
inc
leave
jbe
aas
xchg
stc
cmp
dec
clc
fldt
pusha
insl
adc
xor
cmp
mov
lcall
adc
sbb
cwtl
cmpsb
je
push
in
enter
push
jae
or
mov
mov
inc
repnz
mov
imul
loop
mov
scas
xor
je
in
sub
dec
pushf
jp
shl
push
and
add
add
aaa
ss
notl
sbb
lods
xchg
das
xchg
jg
mov
or
dec
dec
cmpsb
xchg
fs
pop
insb
add
shrl
outsb
inc
rcll
mov
sub
aas
mov
or
in
jb
sub
sub
fcoms
or
pop
out
shrl
out
arpl
mov
xchg
ljmp
mov
cmp
inc
sahf
and
je
lret
loope
lea
mov
push
sub
xor
adc
push
lret
mov
ds
push
jae
cmp
pop
sub
inc
cmp
shll
jns
and
sarb
inc
mov
xor
out
xor
popa
mov
ret
outsl
sbb
vpminub
jg
jecxz
mov
stos
mov
adc
scas
push
push
enter
mov
mov
cld
pop
pop
test
xor
xor
das
adc
fcompl
out
push
and
and
mov
xchg
ds
add
in
or
rcrl
orl
sbb
adc
mov
lea
int
cld
cmc
stos
leave
loope
mov
add
mov
cmp
cmc
mov
and
push
test
call
cmp
or
sbb
loopne
push
sbb
frstor
mov
cwtl
xor
loope
push
ja
js
sbb
cmp
shlb
rorb
xor
iret
inc
mov
cmpsb
pop
int3
nop
data16
mov
cltd
repnz
jb
stc
lcall
leave
es
int3
in
add
mov
loopne
aaa
or
or
popf
xchg
cmp
ret
in
xchg
cmp
dec
and
ljmp
out
sub
cmp
test
mov
lret
mov
inc
mov
lock
inc
or
push
rcrl
xchg
pushw
mov
cmp
sub
push
fmull
movsl
lods
xor
jb
push
lods
mov
mov
xlat
nop
add
xchg
movsb
inc
aas
cmp
fmuls
adc
cmp
mov
testl
in
add
add
jae
sbb
mov
push
xor
adc
jo
add
push
push
rcl
cmp
adc
xchg
mov
repz
mov
push
mov
les
pop
mov
std
pop
loop
sti
movsb
pop
pop
call
std
cmp
add
lcall
mov
bound
or
mov
inc
aas
call
pop
inc
add
and
cmp
int3
jl
repnz
rcr
into
hlt
movsb
pop
lret
pushw
xchg
xchg
adc
imull
mov
xchg
in
shl
mov
int
pop
lcall
mov
pusha
daa
mov
xchg
push
in
fistps
jne
call
shll
int3
fstps
inc
or
jp
int3
out
adc
cmp
jae
adc
xchg
stc
push
stos
scas
repz
cmc
iret
mov
orl
ds
sbb
or
xchg
or
adc
push
fs
add
and
mov
cwtl
frstor
pusha
push
popf
pusha
shrl
jl
or
inc
lcall
fsubrl
jne
inc
or
sbb
popa
xorb
out
cmp
in
and
orl
push
sub
xchg
mov
push
xchg
add
loopne
ret
in
xchg
mov
add
jle
pusha
addr16
sub
jle
int
cmp
fs
push
loope
imul
mov
sbb
xchg
push
xchg
out
pop
adc
jae
outsl
adc
xchg
dec
scas
test
andb
aam
mov
pop
or
jp
out
imul
cmp
cmp
outsb
mov
add
mov
rclb
sbb
xor
dec
call
add
pop
jnp
pop
sarb
outsl
scas
inc
inc
loopne
pop
loope
pop
repnz
rol
add
adc
push
movsb
cmp
ficomps
cmc
dec
fisubl
adc
sub
pop
lret
cmp
xchg
dec
pop
cmp
lods
shl
add
shll
lret
inc
lcall
push
push
or
sbb
push
pusha
fidivs
inc
decb
mov
shrb
xor
and
xor
stc
test
mov
jnp
jae
insl
pop
xchg
addr16
aad
fcoms
xchg
or
jns
test
pop
push
gs
aaa
add
sbb
xor
orb
add
or
xchg
push
iret
jmp
jle
lods
cmp
insl
dec
push
mov
js
lds
aam
cmp
dec
lds
movsl
lea
sub
in
push
mov
orb
ja
repnz
mov
test
popf
mov
xchg
mov
ja
mov
lock
sbb
xchg
jno
sahf
out
push
cmp
sub
stos
ds
dec
ljmp
push
or
iret
cmp
sbb
mov
fld
mov
mov
pop
push
xor
jo
xchg
jo
add
mull
cmc
jge
push
lea
inc
inc
les
mov
fldenv
sub
fisttpl
mov
mov
mov
outsl
pop
in
leave
fstpl
sbb
jns
rol
testb
rolb
loope
xchg
mov
pushf
adc
movsl
adc
xchg
jmp
xor
xchg
cs
mov
mov
je
or
imul
jecxz
mov
fbld
adc
dec
mov
jnp
mov
cli
cld
xor
jl
aad
xchg
push
jns
jne
loope
sbb
push
mov
ss
and
icebp
les
push
add
int
js
lods
jne
cwtl
mov
xchg
popf
pop
sbbl
lods
cmp
dec
add
mov
mov
daa
or
enter
mov
insb
sub
lods
mov
int
push
subl
das
sub
mov
shrb
mov
cmp
jb
adc
sarb
inc
adc
xchg
xchg
pop
test
push
in
push
fnstenv
sub
pushf
adc
jbe
cltd
pop
mov
inc
or
loopne
call
or
mov
mov
mov
dec
and
inc
sub
cld
adc
repnz
lock
shlb
enter
ja
mov
mov
sarw
sbb
xor
test
gs
jmp
test
rorb
in
or
mov
fwait
scas
dec
cli
lcall
pop
add
mov
xor
and
add
pop
into
pop
sub
mov
cltd
push
xchg
inc
andb
lret
mov
cmpsb
push
jae
bound
pop
push
lret
push
sbb
adc
cwtl
xor
pop
xchg
cmp
mov
dec
push
call
pop
jg
push
push
ucomiss
in
sub
dec
in
push
add
mov
mov
sub
push
pop
push
movsl
test
push
xor
sbb
pop
inc
leave
adc
sub
jle
xor
mov
sub
jnp
inc
add
fisttpl
loopne
lds
cmpsb
jecxz
adc
js
sub
bnd
mov
xchg
cmp
pushf
popa
mov
stos
cmp
inc
cmc
cmp
sub
insb
lods
popa
fst
ds
sar
add
rcrb
push
cmpsb
push
lahf
stos
shll
lret
push
jl
pusha
sub
lock
and
adc
movsl
in
mov
or
pusha
xlat
data16
add
jo
mov
rorl
lcall
arpl
cmc
mov
aaa
scas
xchg
xor
nop
cmp
imul
cmp
mov
jmp
jmp
cmp
jle
xchg
idiv
fstp
leave
clc
cltd
push
jne
loopne
test
ret
les
cli
mov
jb
sbb
add
orl
or
lcall
sarb
inc
std
mulb
scas
jmp
cmpsl
addr16
std
daa
xchg
testl
sbb
mov
mov
arpl
cmpsl
or
mov
nop
push
xor
pop
out
sub
cwtl
or
adcl
jbe
inc
fwait
mov
push
cwtl
lahf
mov
out
rorb
das
aam
sbb
push
scas
jg
adc
loope
fisubrs
iret
pop
lods
ljmp
bnd
push
push
fisttpll
inc
in
adc
loopne
jbe
push
mov
jbe
push
dec
clc
xchg
mov
rol
dec
ds
add
enter
xchg
and
mov
jb
out
notl
and
pusha
sti
inc
int
out
shl
dec
mov
push
ja
roll
adc
mov
inc
mov
sbb
js
pop
fcoml
xchg
mov
mov
repz
add
repnz
shll
stos
lret
dec
cmp
add
shrl
mov
cmp
jo
imul
lds
fidivl
adc
push
push
mov
cs
lcall
or
out
out
mov
mov
sbb
jge
movb
sbb
loope
mov
ss
cmp
mov
jp
stos
xchg
or
or
jae
or
shld
cmp
cwtl
cld
pop
inc
push
mov
jg
cltd
jne
mov
jno
icebp
sbb
aaa
or
mov
shlb
pop
daa
les
jmp
jo
lahf
or
and
shr
add
test
repnz
push
pop
mov
pushl
sbb
jae
xchg
sbb
jle
sbb
test
inc
or
scas
cmpsb
jl
pop
xchg
jmp
dec
scas
aas
movsb
clc
adcl
mov
mov
add
fs
jl
sbb
and
arpl
push
sbb
sub
dec
and
push
movsb
push
pop
push
lret
inc
lcall
ret
rclb
into
pop
xchg
push
ja
adc
mov
in
gs
jns
jl
and
fistps
cli
sub
mov
jecxz
push
mov
inc
xlat
and
test
or
leave
lock
push
sub
nop
pop
lods
loope
lock
clc
xor
xchg
scas
cmp
ja
sarl
jne
fs
addl
dec
rcr
cmp
jp
sub
jmp
push
mov
sbbb
adc
pop
or
repnz
dec
divb
cwtl
iret
push
pop
pop
push
pop
aaa
jmp
test
and
lcall
xchg
cld
or
test
repz
pop
add
xchg
push
and
call
addr16
gs
add
cwtl
adc
lret
into
mov
cmp
bound
push
aaa
pop
mov
pop
mov
sub
test
inc
pushl
xor
movsl
sbb
sub
mov
xchg
and
mov
test
dec
mov
clc
dec
insb
inc
push
pop
stc
lret
mov
loop
stos
jbe
das
mov
xlat
push
jno
jp
sbb
mov
sub
push
mov
sub
je
xor
or
jbe
lea
push
inc
jno
cmp
pop
inc
int
mov
fsubl
adc
dec
add
jecxz
pop
or
dec
and
fs
and
mov
pop
adc
in
bound
dec
outsb
inc
mov
repnz
xchg
inc
mov
xchg
jle
mov
jbe
aaa
iret
out
xor
xor
sbb
inc
adc
sti
jmp
jne
xor
psllw
pop
or
fiadds
push
push
fcom
popf
lods
add
mov
xchg
icebp
in
fs
ds
repnz
ljmp
jge
or
push
test
loop
push
lea
mov
movsl
mov
je
imul
cmpb
sbb
cli
inc
cmpsl
mov
inc
fimull
jg
fcoml
cltd
loop
xor
and
aas
dec
add
sub
fsts
inc
repnz
outsl
scas
inc
inc
and
jge
jl
mov
inc
dec
dec
out
or
adc
imul
mov
jle
shlb
jnp
pop
push
add
es
jle
rcll
xor
ret
mov
das
cltd
rolb
and
popf
pop
into
mov
jno
scas
dec
sbb
add
daa
das
jo
sbb
movsb
sbb
push
add
fmul
xchg
fcoms
loopne
mov
and
inc
mov
dec
inc
in
pop
outsl
mov
push
push
inc
dec
inc
inc
pop
stos
lds
outsb
lret
push
xchg
ljmp
pop
sbb
loop
xchg
into
movsb
xchg
imul
movsb
jbe
sbbl
pop
rclb
add
dec
add
pop
pop
ljmp
xorb
sbb
pop
insl
push
adc
sub
fiaddl
dec
je
add
push
in
jo
cmp
cmp
sbb
ljmp
lea
aad
jbe
jl
xchg
or
mov
movsb
xor
adc
jmp
cmpsb
test
fimull
xchg
mov
cmp
xlat
les
xor
or
xor
mov
out
sub
roll
sub
mov
cwtl
push
xor
jle
popf
jne
jmp
dec
outsl
dec
pop
jge
mov
add
in
pop
jg
mov
adc
test
dec
and
scas
lcall
jecxz
leave
inc
mov
ja
add
shl
es
adc
stos
outsb
imul
xchg
mov
mov
mov
and
mov
aaa
dec
and
sub
cwtl
insl
mov
les
add
jno
jns
lea
ds
inc
jmp
hlt
imulb
mov
mov
nop
roll
cmc
arpl
cmc
add
mov
pusha
aaa
adc
inc
adc
cmpsb
cld
and
or
pop
insl
mov
repnz
add
sahf
xor
popl
add
lahf
lods
dec
repnz
sub
sbb
mov
in
into
ficomps
jmp
xchg
pop
or
loope
add
xchg
mov
ret
fcmovu
adc
scas
xor
rolb
sbb
mov
adc
shrl
rolb
add
push
or
sahf
je
mov
movsb
mov
out
stos
pushf
pop
and
sub
sbb
cmp
les
leave
cld
loop
pop
pushf
inc
inc
fisubs
push
sub
test
rcrb
or
inc
cmp
jp
xchg
sub
in
ss
lret
lods
cld
cli
aad
pop
aaa
lods
jmp
sub
jg
sarb
cs
xchg
cs
lods
push
jecxz
fimull
xor
iret
add
mov
iret
pop
jno
or
cli
scas
rdmsr
adc
cltd
fistpll
push
stos
sbb
into
insb
pop
inc
push
out
lods
mov
mov
jle
inc
adc
into
sub
push
cmp
or
fiaddl
mov
imul
mov
fisubs
movsl
push
mov
mov
push
push
mov
and
mov
repnz
sti
sahf
mov
and
rcrb
mov
in
add
xchg
mov
aas
ds
cli
cltd
inc
movsb
dec
fcmove
int3
xchg
cmc
xchg
add
sarb
fsub
cmp
jns
jo
repz
orb
les
test
sub
enter
cwtl
sahf
cmpsb
mov
cmp
dec
test
stos
iret
adc
mov
outsb
pop
pop
push
pop
pop
je
int
inc
sub
jle
mov
cld
lods
vfrczpd
sub
rorl
jecxz
ss
aam
test
out
stos
imul
inc
rorl
add
stc
sar
cmpsb
jge
incb
mov
mov
es
test
or
mov
mov
lock
add
stc
dec
out
inc
push
cmp
sub
xor
mov
call
pop
lcall
inc
mov
sbb
xchg
cmc
jnp
loopw
jmp
cmp
push
int3
dec
arpl
mov
jmp
mov
mov
lds
lods
or
jecxz
daa
mov
sar
out
or
push
mov
add
into
mov
shr
ljmp
and
lock
jo
mov
loop
sbb
jne
sub
out
fmul
subl
adc
mov
imul
test
test
mov
pop
sahf
fwait
ja
test
mov
and
fisubs
inc
test
popa
mov
dec
jnp
in
ljmp
mov
jp
andl
leave
nop
pop
mov
fbstp
push
cld
sarl
stc
mov
add
les
enter
test
dec
ljmp
clc
cmp
fisubrl
add
gs
cmpl
ljmp
add
fcmove
fisubrl
lahf
add
pop
mov
ret
sarl
and
cli
bnd
adc
hlt
mov
aad
and
iret
add
dec
and
dec
aas
dec
gs
add
cwtl
fcmovu
rorb
inc
add
jbe
scas
std
pop
fs
out
sbb
adc
xchg
rolb
inc
ds
mov
js
loopne
mov
jg
lods
jne
mov
pop
out
add
cmp
mov
pushf
pop
insl
rcl
cmp
je
cmp
in
jbe
loop
pop
and
in
xor
movsl
or
test
xlat
and
cld
test
fstpl
mov
stos
ljmp
cmp
sbb
movsl
sub
bound
inc
sub
cmp
and
inc
das
mov
or
inc
decb
lds
mov
mov
cltd
jb
insb
adc
pushl
sub
jg
imul
add
xor
pop
or
enter
mov
shrb
add
add
mov
les
lods
shrb
dec
cltd
dec
adc
enter
mov
dec
aad
push
out
mov
sahf
sub
pop
and
call
and
sbb
fldenv
popl
push
test
sub
arpl
je
hlt
jb
push
mov
cmpsl
rorb
cld
xor
imul
and
mov
movl
lcall
adc
call
xorl
sahf
push
mov
sti
aas
testb
in
cltd
jb
lds
data16
mov
notl
nop
sub
aas
fstl
mov
lret
in
daa
cmp
unpckhps
add
lea
shll
or
lret
mov
sti
addl
push
mov
dec
push
sbb
enter
adc
imul
in
mov
cli
mov
adc
push
test
outsl
mov
dec
sub
jb
xadd
push
gs
xchg
sub
fnsave
cwtl
jae
adc
mov
push
jmp
xor
dec
iret
fistpl
inc
push
das
shrb
daa
mov
sub
cmpsb
fistpl
jge
mov
jnp
int
insb
cmpsb
cmp
adc
stc
and
push
adc
cld
lock
cli
xchg
and
push
mov
push
fidivrs
pop
or
sub
xchg
jbe
push
sbb
lods
movsb
adc
mov
adc
das
imul
inc
mov
les
xchg
xlat
test
lret
sti
insl
xchg
fs
sub
aad
mov
cli
cmpsl
ficoms
pop
push
sbb
fimuls
fs
hlt
outsl
mov
xchg
jg
mov
imull
xchg
inc
sub
cmp
push
iret
stos
push
lret
les
mov
aad
inc
sbb
stc
pushf
into
rcll
mov
test
cmp
icebp
imul
aam
mov
jge
sbb
movsl
sub
pop
je
pop
aad
pop
inc
or
push
movups
xor
int
test
scas
fcmove
ret
lret
decb
sbb
and
cmp
frstor
rol
dec
sbbb
addb
xor
ret
pop
xchg
pop
fcomps
push
cmp
popa
mov
jg
cmp
mov
mov
out
dec
mov
add
dec
dec
add
mov
sbb
sbb
push
sti
out
aaa
dec
add
fs
mov
push
xor
add
xchg
push
bswap
es
shll
in
xchg
call
imul
adc
push
mov
mov
stos
sub
daa
fnstcw
ret
sbb
push
pop
pop
dec
daa
ja
repnz
lock
or
jns
test
pop
inc
jne
dec
lahf
sub
int
cwtl
shll
scas
cs
and
movsb
daa
fldcw
mov
pop
push
xchg
ljmp
inc
push
pop
fldcw
pushf
pop
jnp
fwait
inc
dec
dec
mov
ss
pop
lods
loope
aad
pop
jne
sub
lock
gs
fildl
cmp
jg
pop
subb
roll
xlat
xchg
or
test
push
mov
pop
jns
or
pop
mov
or
popf
cmp
and
cmp
add
adcb
clc
out
mov
aas
gs
cmp
push
mov
imul
pop
lahf
xchg
pop
mov
ss
shrb
jae
testl
call
int
sbb
imul
movsl
xchg
sarb
pop
xchg
jbe
scas
mov
jns
fcmove
sbb
pop
clc
aad
gs
push
daa
mov
mov
push
xchg
xor
push
jp
je
mov
popf
lock
movsb
mov
push
nop
aaa
ss
mov
shlb
push
add
adcl
out
xchg
inc
les
inc
push
frstpm(287
inc
add
jnp
fidivl
mov
repnz
sbb
dec
shlb
shl
mov
fstpl
scas
adc
call
and
fidivl
dec
pop
mov
mov
mov
loopw
hlt
out
test
insl
fimuls
and
fs
and
addr16
leave
stc
lret
add
push
aaa
sbb
imul
cld
fdivl
and
loope
xor
dec
add
outsb
fildl
and
adc
cmp
mov
out
mov
jbe
js
cltd
aam
and
push
push
lret
xor
testl
jp
ja
dec
insb
sub
jge
add
out
push
adcl
inc
push
mov
decb
pop
xor
sbb
iret
or
ljmp
mov
pop
jb
cmp
push
mov
fwait
lds
movsl
push
pushf
sub
aad
mov
mov
call
and
mov
mov
lds
lret
stos
fidivl
int
cmpsl
mov
mov
sbb
jge
out
cmpsb
mov
and
xlat
and
mov
adc
fwait
or
mov
or
pop
mov
inc
add
lds
cmp
sub
dec
mov
subb
pushf
and
fs
fldcw
adcb
jmp
iret
icebp
xchg
pop
test
sub
push
add
sahf
xor
into
cmp
cwtl
sbb
pop
xchg
inc
test
cmc
ficoms
adc
mov
ret
jp
add
mov
adc
stos
fstpt
push
mov
cmp
sub
or
push
pop
call
xchg
add
bswap
push
or
into
adc
jnp
xchg
adc
cmp
add
jo
xor
mov
sub
imul
xchg
add
fldt
leave
icebp
popf
pop
adc
imul
jmp
popf
xchg
cwtl
insb
imul
sbb
xchg
sub
jp
fldt
fwait
es
int3
sahf
mov
addr16
gs
xchg
mov
loopne
outsb
icebp
jl
and
adc
adc
push
mov
push
scas
sbb
push
xor
idivb
mov
dec
dec
cmpsb
sbb
int3
dec
loop
xchg
ljmp
int3
xor
mov
ds
xchg
cmpsl
jp
xor
jge
outsl
pop
fsubr
popa
sbb
jae
repz
pop
jo
rorb
or
mulb
dec
xchg
xchg
or
mov
dec
data16
xchg
dec
jb
adc
cmpsb
sub
out
mov
cmpsl
in
and
sub
sbb
sub
xor
int
prefetch
or
cs
and
mov
add
push
mov
lea
pop
fucom
pop
repnz
sbb
in
xchg
or
jb
sub
repz
stos
dec
mov
test
xor
stc
fsubl
push
icebp
pusha
mov
push
pop
or
sti
mov
jle
fildl
outsb
mov
cmp
adc
jne
shld
sti
addb
lahf
pop
lahf
xor
mov
xorb
xchg
jge
inc
repz
dec
jb
sub
lret
repnz
and
outsl
jbe
das
xor
mov
movsb
bound
xor
pop
cmp
imull
sbb
out
cmp
mov
testb
adc
adc
cmp
pop
cwtl
repnz
rcll
movq
add
mov
ret
das
js
dec
jge
sbb
jae
push
mov
hlt
or
lds
das
fldt
sahf
rolb
in
jle
fists
mov
mov
loop
ret
fdivs
mov
jecxz
insb
jbe
out
fcmove
ret
push
xchg
je
sub
lea
div
pop
xchg
jle
mov
mov
xor
jb
arpl
xor
adc
loop
ret
mov
imull
hlt
sti
dec
ljmp
jae
sti
divps
inc
jbe
sub
fisubrl
sahf
fcoms
pop
shl
push
mov
dec
mov
outsb
cmp
cmp
mov
and
test
test
xchg
and
fcmovne
add
std
out
dec
orb
pop
cwtl
dec
jns
clc
addr16
mov
lret
cmp
cmpsl
rolb
xlat
jo
leave
xchg
add
dec
inc
inc
lods
fisttps
push
dec
mov
iret
test
inc
xchg
cmp
add
push
jg
jno
push
sbb
int3
pushf
jge
inc
stos
test
xor
sub
lds
imul
or
dec
push
repz
pop
xor
test
or
fldz
or
in
cwtl
pusha
mov
dec
out
shlb
daa
std
imul
int3
lcall
stos
cmpsb
in
xchg
xchg
pop
sbb
xor
mov
jmp
inc
ret
pop
movsl
adc
shll
mov
push
pop
ret
pop
inc
hlt
pop
clc
xor
jns
icebp
pushf
cwtl
movsl
mov
call
inc
push
bts
jp
xorb
ljmp
fistpl
imul
mov
nop
stos
add
mov
test
iret
loop
push
add
cltd
fadds
out
sbb
push
repnz
sub
jg
inc
xor
and
bound
adc
iret
cmpsl
pop
scas
es
mov
mov
ss
pop
fidivs
xchg
lahf
mov
scas
inc
push
sub
mov
setl
mov
rorb
xchg
xorb
pusha
adc
clc
fwait
cmp
repnz
aas
je
pop
xchg
sbb
mul
inc
movhps
sti
and
iret
and
mov
inc
sub
addr16
mov
jns
test
rolb
cmpsl
stos
and
and
ss
or
push
jns
pop
in
adc
dec
mov
pushf
xchg
cmpsl
fildl
mov
outsb
sti
xor
ljmp
or
fst
stos
daa
incb
cmc
inc
jae
outsl
add
lock
aas
negb
leave
xchg
and
into
aaa
rcll
push
ret
adc
sbb
addr16
shl
adc
inc
pop
fdivrp
cli
js
mov
cmc
shl
mov
xchg
cltd
cmp
inc
incl
xchg
out
inc
nop
out
test
pop
jns
pop
pushf
jnp
test
or
lcall
jb
push
push
and
and
dec
and
cmp
lret
movsb
mov
dec
enter
inc
popa
add
and
jmp
xchg
xor
push
out
sarl
dec
cli
add
icebp
fsubl
mov
jge
cmp
ror
push
call
sbb
aaa
mov
pop
push
es
sub
and
ja
lock
mov
pop
push
xor
mov
lods
in
mov
sbb
les
mov
jnp
jb
ret
pop
psadbw
addr16
stc
mov
iret
add
cli
ljmp
xchg
xchg
add
cmp
sbb
xchg
sbb
pop
data16
adc
out
sbb
cld
jne
push
dec
xlat
cmp
mov
sbb
and
sarb
faddl
fisttpl
add
rorb
jnp
adc
sub
sub
data16
sahf
mov
sub
jo
idivb
mov
mov
push
or
add
test
adcl
add
xchg
cmp
push
push
movntq
mov
cmp
pop
popf
push
insb
inc
cmp
test
call
lods
fbld
rolb
sti
mov
fwait
loopne
push
repnz
xlat
test
loopne
sbb
outsl
fmul
add
outsl
mov
mov
into
mov
in
leave
mov
mov
call
insl
sub
sbb
js
cmp
inc
push
xchg
into
lds
push
testb
arpl
jle
push
ret
in
cmpsl
cmpsb
push
inc
mov
rorb
push
mov
mov
and
jb
inc
addr16
xor
lea
lock
nop
xor
loopne
cld
push
outsb
xor
shl
and
dec
scas
mov
jbe
repz
xchg
lret
les
adc
pop
or
adc
and
ret
inc
add
xchg
cmp
adc
cmpsl
pop
cmp
js
push
push
mov
jge
xor
xlat
jmp
xor
push
scas
test
aad
addl
clc
cltd
pop
jg,pt
jle
lcallw
xchg
jae
cwtl
xchg
aas
bound
jg
cmpsl
enter
mov
pop
in
mov
ljmp
ds
lods
xchg
mov
push
pop
sub
add
xchg
pop
addr16
aam
sbb
push
mov
scas
jbe
enter
mov
int
fsubl
cmc
cltd
and
mov
daa
test
fimuls
sbbl
inc
sarb
repz
fwait
push
push
push
cltd
daa
stos
int
mov
push
cmc
aam
mov
mov
repnz
jg
add
cltd
and
test
subl
into
adc
jge
das
cmp
cs
mov
mov
movsb
sub
cli
dec
push
jl
enter
dec
jne
or
repnz
movsb
iret
in
xchg
xchg
push
cmpsb
das
and
pop
rol
and
xchg
movsb
pop
sahf
syscall
insb
sarl
in
ja
movsb
ret
test
inc
sub
out
add
mov
out
imul
mov
adc
mov
push
sbb
push
repz
pcmpeqw
jg
lods
sbb
test
fidivrs
arpl
mov
ss
mov
push
or
inc
popa
mov
jbe
stos
aad
or
and
movsb
mov
dec
psllq
clc
shrb
pop
insb
adc
test
mov
ss
mov
push
inc
rep
ljmp
mov
add
mov
fnsave
cmp
outsl
dec
popf
iret
loop
out
adc
popf
add
pushf
pop
inc
cld
arpl
push
mov
iret
cmp
lods
das
mov
sbb
int3
jmp
in
cltd
mov
xchg
xor
xchg
jbe
pop
jle
jnp
iret
les
add
jne
std
cmpsl
sbb
pop
lret
add
adc
add
add
in
shr
xchg
in
rcl
push
jae
lahf
aaa
mov
sti
into
pop
out
fcoms
mov
cmp
jp
pop
cmpsl
ret
xor
lods
pop
xlat
mov
mov
or
loope
jl
mov
jmp
inc
mov
clc
pusha
add
sub
cld
pop
fmuls
stos
into
mov
rolb
cmp
xor
cwtl
xchg
sahf
cld
lods
push
pop
icebp
mov
jne
sub
add
pusha
dec
lahf
stos
andb
xlat
sar
aam
stc
xchg
jb
adc
dec
mov
inc
sbb
movsl
mov
scas
adc
shlb
cltd
cs
mov
inc
test
mov
add
movl
hlt
lret
pop
xchg
sti
mov
sbb
dec
cmp
xlat
loopne
sbb
lods
imul
push
xchg
or
pop
rol
sub
add
cld
scas
lods
mov
sahf
pushf
xor
fpatan
dec
popa
push
jl
mov
pop
sbb
jnp
insl
in
and
dec
adc
dec
sbb
andl
stos
fidivrs
sarb
cmp
add
cmc
fstl
sbb
scas
mov
pop
dec
mov
sub
lds
fsubs
adc
mov
loop
mov
xor
adc
add
mov
mov
ja
ljmp
and
jg
push
push
xor
pop
xchg
mov
dec
scas
add
mov
lret
inc
sub
adc
add
push
xor
addr16
add
into
sbb
mov
popa
imul
out
lahf
cmp
lcall
jp
loop
add
jbe
adc
pusha
cmp
int
int
mov
push
cmp
dec
pop
mov
xlat
std
xchg
mov
in
xchg
sub
imul
mov
sti
insl
pop
repnz
sahf
inc
test
aad
or
es
inc
adcb
mov
push
test
push
je
fneni(8087
jge
lret
lods
repz
mov
jl
fs
push
insb
iret
pop
pusha
in
outsb
pusha
sub
ret
pop
mov
cmc
or
icebp
push
sub
cmp
xchg
icebp
sti
or
clc
js
testb
add
push
mov
inc
adc
and
pop
lds
xchg
shlb
fldt
push
inc
repz
mov
or
mov
pop
mov
push
cmp
lahf
lds
push
cmpb
cs
adc
mov
cmp
add
mov
xchg
xchg
pop
pop
ljmp
xlat
lock
jno
lds
push
inc
add
xor
popa
cli
imul
xchg
push
out
jne
aad
sub
leave
cmp
addb
mov
mov
in
xchg
adc
mov
inc
insb
lret
pop
or
xchg
jmp
clc
lahf
add
addr16
addr16
int3
push
jno
add
test
mov
mov
stc
inc
and
lret
xor
xor
mov
dec
inc
cld
aaa
in
cmpsb
pop
sti
add
push
inc
jle
mov
inc
popa
sbb
mov
inc
insl
loop
push
imul
cwtl
mov
pextrw
xchg
lret
mov
fldl
sbbl
jnp
add
xor
add
push
mov
inc
pop
int
test
dec
dec
in
cmp
hlt
sti
jnp
jae
fidivs
push
and
or
das
in
sub
movsb
insl
out
xchg
xchg
add
push
cmp
outsb
jle
call
jge
fnsave
data16
inc
pop
jl
sub
adc
inc
sub
jbe
mov
cwtl
pop
movsb
mov
push
lahf
adc
inc
call
stos
xchg
jno
pusha
ja
xchg
jle
in
adc
or
mov
loope
test
insl
inc
cmpsb
mov
ja
mov
pop
fisttps
pop
icebp
xor
cmpb
cld
cld
dec
push
inc
jnp
push
pop
insl
iret
bnd
popf
aam
mov
adc
stc
fbld
rep
and
lods
dec
loope
sarl
xlat
pop
test
pop
sub
cli
mov
int3
aam
div
lock
lock
mov
test
push
or
pop
fsubrl
hlt
rcl
sbb
outsb
pop
gs
jnp
dec
jns
icebp
push
pop
dec
push
repnz
pusha
int
sub
mov
dec
fcmovnbe
test
mov
mov
inc
fwait
lret
inc
rolb
in
adc
loopne
ds
add
data16
sub
pop
dec
or
divl
push
pop
inc
adc
pop
fnstenv
sbb
mov
repnz
pop
subl
out
aad
lret
mov
fsub
roll
inc
push
sahf
jnp
cmp
jecxz
pushf
fwait
mov
test
xor
out
shll
push
lock
loop
inc
and
or
lock
jmp
or
mov
imul
call
clc
inc
bound
inc
les
subl
int3
jmp
hlt
adc
mov
sbb
jmp
dec
in
int
andnps
xchg
and
cmp
sub
mov
pop
push
push
dec
in
push
or
call
inc
in
dec
fidivrl
sbb
mov
rcrb
push
mov
sbb
and
or
dec
scas
outsb
pop
mov
mov
idiv
jb
sbb
cmc
sub
sbb
cmp
fst
repnz
call
mov
dec
imul
mov
sti
push
testl
push
into
cld
mov
jle
insl
shlb
and
negb
aaa
sub
dec
mov
mov
lcall
out
inc
xchg
mov
push
lret
aad
push
and
addl
cli
dec
outsl
hlt
test
xor
insb
jmp
add
rorl
xor
mov
mov
in
mov
mov
inc
jge
out
jne
ret
inc
je
add
cld
adc
cli
psadbw
test
out
xor
add
jnp
popa
repnz
inc
test
dec
cs
mov
mov
rcrb
sub
cmp
rcll
add
xor
clc
adc
xchg
aam
or
shlb
mov
call
jle
cmp
push
cltd
mov
test
mov
jl
outsl
js
imul
jb
cmp
push
lods
sub
popf
cs
mov
pop
sub
inc
jae
sahf
add
jecxz
xlat
icebp
pop
iret
mov
in
icebp
mov
cltd
xchg
scas
dec
mov
sub
int3
sub
in
test
or
jge
lret
and
and
and
mov
jmp
pop
pop
mov
jne
adc
xor
test
fdivrl
mov
or
je
jl
icebp
dec
xchg
push
add
dec
jbe
sarl
popa
inc
notb
mov
sbbl
and
test
cld
and
xchg
dec
mov
popa
xor
popf
xchg
cmpsb
scas
cmp
mov
adc
xchg
stc
sbb
mov
outsl
add
push
adc
mov
adc
mov
scas
cwtl
dec
xchg
aaa
mov
pop
mov
pop
xchg
loope
pop
rclb
and
jb
jg
add
cmc
mov
or
pop
mov
sub
mov
pop
leave
jl
inc
loopne
jecxz
mov
xchg
mov
aad
std
mov
sbb
add
daa
add
sbb
add
scas
inc
pop
fdivs
sarl
mov
js
push
imul
gs
mov
inc
fxtract
cwtl
pushf
sub
sub
jle
stc
mov
fstpt
xor
ret
mov
jecxz
cld
push
js
pusha
aam
pop
test
std
shll
push
mov
lds
push
fidivs
sbb
inc
popf
mov
jecxz
mov
mov
sub
dec
popf
xor
cld
imul
mov
popa
or
push
dec
jo
jle
ja
xchg
sbb
or
xchg
dec
mov
cltd
cmp
mov
sbb
pop
mov
xor
jmp
jo
mov
inc
out
enter
mov
fisubrl
xchg
push
pop
pop
sub
imul
push
aaa
in
cmp
xor
inc
shrl
lret
clc
mov
pop
push
xchg
or
cmp
aaa
repz
test
mov
mov
jmp
es
mov
push
xchg
les
enter
inc
in
fbld
jp
and
fwait
adc
or
fsubl
fsubr
aam
aaa
aaa
enter
cmpsb
jo
out
cmp
xor
xchg
jb
scas
jno
repz
inc
inc
outsl
ljmp
lock
mov
das
andb
test
xlat
sub
add
cmpb
sub
sbb
leave
mov
xlat
shll
adc
jns
rcl
inc
ret
gs
jno
cmc
xorb
add
mov
jl
lcall
mov
pop
xor
scas
adc
gs
add
sbb
push
sbb
lret
into
mov
pop
popf
or
mov
or
mov
xor
in
xchg
pop
adc
dec
fst
mov
outsb
das
and
xor
inc
mov
int3
movsl
cmova
cmp
rcr
or
dec
dec
inc
jmp
in
pop
jge
data16
shr
addr16
in
out
sbb
xchg
imul
cmp
cmp
jge
or
push
push
pop
push
mov
test
mov
sbbl
mov
xchg
xchg
adc
and
test
or
push
xor
add
jb
frstpm(287
subb
add
imul
or
mov
addb
xchg
daa
cmpsb
out
sbb
mov
inc
mov
sbb
shlb
fucomi
or
stc
sbb
js
fs
fiadds
stos
add
in
test
sub
inc
mov
or
lods
sub
ja
mov
fdivl
jae
leave
push
outsl
ret
jge
daa
cwtl
jbe
cld
daa
cmp
mov
outsl
add
loop
repz
push
mov
mov
dec
pop
push
inc
iret
and
inc
negb
mov
test
pop
pop
push
push
out
out
sub
std
inc
shll
mov
xchg
in
insl
repnz
orb
xor
inc
pop
or
mov
xchg
divl
bound
pop
mov
push
pop
lds
add
aaa
mov
push
dec
cltd
add
fdivl
inc
sbb
nop
xlat
sub
sbb
adc
sbb
push
arpl
and
dec
jns
jo
cltd
or
ud1
data16
sbb
jbe
stos
stc
insb
cwtl
pop
ret
dec
fdivl
cmp
test
and
aad
hlt
imul
pushf
movsl
pop
out
mov
sbb
cli
dec
mov
mov
scas
rclb
mov
out
loope
inc
xchg
add
loope
out
sbb
jae
or
inc
dec
sub
dec
movsb
ret
pop
popa
test
mov
jg
or
test
and
adc
xor
pop
rcrl
adcb
fmull
test
fcoml
mov
push
or
out
int3
cmpsl
inc
repnz
jmp
push
fwait
cltd
popa
andb
add
scas
fcomps
fldt
mov
inc
call
and
adc
les
gs
jno
cmp
movsl
jns
xor
jg
sbb
xor
push
or
hlt
sbb
cmp
and
stos
mov
outsl
in
imul
sbb
mov
fsubs
fs
inc
push
push
and
arpl
pop
xchg
mov
or
jnp
mov
dec
push
dec
in
adc
push
decl
dec
pop
in
ds
jg
loop
decb
stos
test
xor
in
cmp
fwait
sbb
dec
fcomps
adc
orl
pushf
popf
mov
sti
adc
pop
mov
fs
cwtl
sarb
call
cmc
ljmp
das
les
cmp
mov
test
mov
sahf
push
jp
std
repz
fwait
gs
aas
fimuls
inc
xor
outsl
dec
adc
and
fsubr
mov
out
or
scas
pop
mov
adc
nop
mov
pop
xlat
js
ds
push
and
lods
popa
fildll
lret
cmp
mov
out
arpl
mov
addr16
or
pop
gs
push
aad
inc
xchg
sbb
in
or
dec
dec
ss
pop
shrl
pop
lods
mov
inc
movsl
xor
xor
lcall
andl
aas
leave
xchg
scas
inc
nop
fidivrs
xchg
pop
jbe
mulb
cmc
xor
outsb
add
fisubrl
adc
cmp
xchg
imul
into
mov
pop
or
sub
ficoms
lods
mov
or
and
push
das
adc
sub
pop
adc
out
xor
push
add
rcr
aaa
adc
pop
push
mov
sbb
js
mov
mov
mov
out
push
cmp
dec
or
jnp
out
jmp
jl
jo
fwait
cmp
sub
or
or
ds
out
fwait
push
lods
clc
mov
pop
in
loop
rcrl
cmp
rcr
int3
pop
xchg
inc
bound
mov
xorb
test
mov
push
xchg
insl
sbb
dec
xchg
mov
jge
movsl
push
in
insl
test
push
aad
mov
sbbb
lds
cmp
movsl
push
push
ljmp
push
jb
ffree
sahf
jge
and
stos
add
nop
mov
shrb
xchg
les
dec
repnz
popa
sarb
pop
jmp
lods
adc
movsb
mov
adc
fwait
movsb
dec
push
dec
lods
jne
jne
jle
enter
dec
inc
xchg
nop
xchg
out
loop
push
cmp
aad
and
daa
nop
dec
cltd
jne
es
ja
jmp
ror
lret
stc
mov
sbb
mov
cltd
popf
bnd
pop
int3
in
imul
xchg
data16
push
lods
pop
pop
cmp
test
pop
jle
sbb
pop
cmp
sub
push
jbe,pt
jmp
cltd
mov
sbb
xlat
pop
mov
sbb
lods
mov
mov
fistl
aad
cmp
imul
push
repz
out
jb
inc
mov
xchg
mov
imulb
nop
xchg
inc
fisubrs
xchg
sbb
sub
push
or
loop
in
lods
ja
jb
mov
mov
rolb
cs
rolb
rorb
dec
jbe
ret
das
xor
sbb
scas
sahf
adc
inc
dec
enter
fldcw
ja
call
dec
in
iret
stos
int3
pop
sbb
and
test
insb
xor
mov
test
out
sub
fwait
cmp
clc
stos
loop
lret
lahf
mov
xor
sbb
dec
add
xorl
xchg
hlt
jmp
mov
lods
xor
and
inc
xchg
adc
inc
xchg
or
sub
lds
and
popf
mov
dec
sub
sarl
bound
xchg
scas
push
dec
sbbb
dec
xchg
rolb
mov
lahf
add
in
mov
cmp
test
mov
mov
xor
add
test
xor
dec
pop
out
ja
sub
mov
cmp
nop
outsb
mov
push
jmp
dec
push
imul
mov
ret
imul
xor
xor
cmpsb
loope
dec
movsl
imul
xchg
sbbb
sbb
sub
fisttpl
pop
lahf
lahf
mov
mov
testl
or
jns
xlat
orl
lock
daa
cwtl
jno
inc
mov
fisttps
push
jnp
add
fxam
push
cmc
js
sub
sysret
pusha
nop
pop
clc
mov
dec
push
scas
decl
bound
movsl
popl
sbb
test
dec
shl
fistpl
or
cmpsb
xchg
or
fwait
stos
inc
shlb
xchg
adc
xor
cld
andb
mov
pop
mov
pop
pop
jae
out
jp
xchg
push
cli
push
cmpsl
cmp
xchg
fiadds
dec
repz
dec
imul
dec
lea
int
movsl
stc
arpl
inc
rorl
or
xchg
lahf
jns
jb
inc
cmp
test
fwait
xor
jns
mov
push
xor
js
fildll
pop
ficoms
push
gs
aad
gs
insb
mov
inc
stos
sti
or
mov
cmpl
jb
mov
xchg
jne
dec
add
push
daa
dec
xor
mov
in
mov
cmp
bound
or
out
jmp
call
mov
mov
stc
inc
add
sti
rdmsr
adc
cmp
xor
xor
sub
int
add
rolb
stos
xor
lahf
mov
sbb
cmc
add
aaa
and
push
adc
repnz
scas
in
mov
cltd
push
mov
ds
ja
rcrl
test
jg
adc
jne
mov
arpl
test
das
xor
xchg
dec
inc
aas
movsb
nop
scas
pop
ret
xlat
out
mov
das
and
cmc
outsl
xchg
dec
clc
das
js
and
mov
pop
icebp
jle
sbb
nop
sarb
sub
call
inc
jo
adc
lds
pop
push
jp
repnz
jmp
std
fisttps
mov
pop
mov
jge
imul
imul
sbb
fnstenv
enter
divl
iret
pop
pop
fcoms
mov
iret
pop
adc
aam
scas
sbb
cmc
fnsave
shrb
dec
test
ds
push
jmp
ret
jae
inc
sahf
pop
inc
notl
xchg
ret
push
je
sbb
loope
jo
mov
xchg
pusha
push
and
xchg
xor
test
mov
stc
push
push
or
pop
cltd
push
mov
jmp
xor
push
cmp
ljmp
lea
sbb
inc
in
jmp
out
test
push
cmp
imul
xor
adc
mov
loopne
xchg
xchg
lret
push
jmp
sbb
and
jg
pop
xchg
insl
inc
pop
int3
loope
mov
xor
pop
sbb
out
pusha
fsubp
xchg
adc
mull
sbb
mov
pop
cmc
push
jne
add
xchg
xchg
test
jae
mov
fimuls
inc
or
or
xor
inc
js
mov
jge,pt
inc
stc
mov
lods
addr16
test
mov
mov
ljmp
inc
mov
mov
dec
iret
adc
inc
mov
stc
cwtl
mov
imul
and
or
lods
aaa
jge
out
xchg
jge
jmp
pop
fiaddl
imul
in
sub
lods
mov
kmovd
inc
pop
scas
add
push
shrb
push
push
roll
mov
cmp
fimull
mov
xchg
add
add
cmpsb
push
mov
jecxz
mov
xchg
cld
into
out
mov
xchg
repnz
inc
sbb
push
std
mov
fwait
push
sbb
push
jecxz
mov
hlt
scas
fdivs
sti
jns
adc
dec
les
mov
push
enter
and
dec
inc
pop
jge
and
movsl
mov
iret
test
addr16
shll
das
jle
ret
pop
xchg
popf
dec
cli
shlb
or
mov
rorl
xchg
mov
and
pop
mov
cltd
pop
or
out
sub
push
sbb
pop
or
mov
lret
nop
xchg
xchg
xlat
cmp
lds
xor
test
daa
vmovd
xor
out
aad
lcall
mov
pop
outsb
aam
int
fdivrs
pop
sub
outsb
std
test
rcrb
in
loop
push
adc
pop
dec
ret
mov
imul
subl
mov
or
mov
push
js
out
mov
imul
fcmovbe
xchg
lds
pushf
or
mov
aas
fwait
cmp
jp
sahf
shll
repnz
inc
mov
pushf
push
out
gs
xor
repz
mov
jp
sti
out
fidivl
push
lods
pushf
stc
call
int3
sbb
pusha
imul
pushf
idivb
cwtl
adc
mov
sbb
add
xchg
out
test
test
sub
test
pusha
mov
mov
outsl
mov
jne
jne
lock
xchg
cmp
scas
lods
es
jae
mov
mov
dec
adc
jb
ficompl
ljmp
jmp
les
adc
mov
in
arpl
rclb
dec
repnz
aaa
mov
call
cmp
sub
iret
inc
pop
jp
popa
jle
sti
ss
cmp
jl
xor
test
mov
fnstenv
ss
mov
mov
stos
mov
mov
insl
or
xchg
hlt
push
adc
xchg
mov
add
js
je
jl
or
jno
or
push
adc
and
sbbl
jp
push
ror
dec
jno
add
add
pop
push
cltd
aam
dec
test
inc
in
mov
cmp
loopne
lock
stos
sbb
or
push
les
popf
nop
push
push
or
pusha
sbb
and
push
mov
ss
in
divb
pop
cmpl
add
xor
test
xor
and
out
xor
pushf
and
in
aad
lret
sub
add
and
movsb
repz
jae
scas
pushf
xchg
lret
imul
xchg
lock
mov
stos
and
xchg
lret
int
stc
push
outsb
jp
or
imul
testl
inc
nop
js
push
add
inc
mov
xlat
push
orb
repnz
inc
cmp
sub
cli
shlb
cmpsl
inc
adc
jb
push
repnz
in
cmp
rcr
mov
fwait
add
push
ja
aad
sub
pushf
inc
push
sbb
push
dec
inc
and
adc
shl
or
lods
adc
mov
and
push
ret
sbb
mov
bound
dec
lret
cmp
push
mov
mov
cmp
mov
int3
into
and
inc
inc
xchg
enter
outsb
imul
mov
into
test
nop
lods
pop
or
lock
xor
push
fwait
sahf
xor
and
and
xchg
fsubrl
or
mov
jns
or
adc
sub
lcall
cmp
cmp
push
aad
jg
js
jg
enter
ds
inc
jo
mov
cmpsb
dec
ds
negl
and
inc
sub
imulb
into
jae
push
lahf
popf
lods
xor
or
cmp
adc
add
mov
rorb
add
push
mov
pushf
jl
outsb
mov
cmc
hlt
cmpsb
pop
aaa
mov
sub
psubd
dec
jne
stos
sub
insb
mov
sub
mov
push
push
imul
pop
or
inc
push
inc
mov
ficoms
xlat
mov
and
xorb
leave
nop
xchg
mov
xor
cmpsl
adc
testb
adc
fwait
das
leave
xchg
xorb
xchg
sub
cmp
mov
test
outsb
add
outsb
sub
mov
out
jmp
ljmp
test
or
daa
pop
shrb
xor
cmpsl
fisubrl
dec
lods
push
test
adc
lcall
adc
sarl
xchg
cmp
stc
loopne
bound
pop
stos
jo
pushf
cmc
mov
and
push
pusha
das
dec
xor
xor
inc
fstpt
inc
cmp
in
test
jmp
or
fiadds
xchg
xchg
push
cmpsl
or
pop
xchg
dec
addb
negl
jmp
arpl
add
idivl
push
insl
test
nop
add
push
mov
adc
iret
cmpsl
pop
ljmp
cmp
out
cmp
outsl
add
sbb
adc
and
test
sub
mov
arpl
xchg
push
jmp
repz
and
cmp
movsb
mov
es
mov
dec
add
in
sbb
ss
clc
cltd
jae
repz
movsl
rcrl
push
push
mov
dec
push
pop
test
mov
ror
repz
stc
sarl
xchg
xchg
mov
decb
jo
sbb
ljmp
add
dec
and
xor
lret
sti
lock
xor
inc
lods
add
popf
xchg
push
sbb
dec
mov
into
hlt
divb
adc
rorl
sti
lods
out
and
out
and
insl
sub
jne
inc
imul
movsb
scas
fwait
sub
rcll
repz
jbe
mov
pop
repnz
insb
xor
pusha
mov
lods
and
insb
stc
mov
push
mov
setbe
pop
call
sub
jb
jnp
mov
cli
cmp
sarb
mov
xor
dec
je
xchg
prefetch
sbb
push
test
pop
pusha
adc
xchg
outsl
movsl
leave
mov
mov
sub
movaps
sbb
addl
inc
in
pushf
or
or
sarl
cmp
xor
and
je
sub
xchg
sbb
sub
push
push
loopne
mov
cli
in
sub
faddl
jp
mov
daa
insl
push
pop
sub
mov
fmuls
pusha
pop
xor
xchg
cmp
in
subb
shll
or
xchg
adc
lea
dec
mov
push
xchg
and
sbb
mov
pushf
aad
mov
push
int3
cvtps2pi
and
ja
jnp
dec
sub
xchg
push
dec
stc
dec
test
jp
mov
cmpsb
aad
mov
mov
adc
out
push
pop
adc
repnz
mov
sbb
sbb
loope
inc
dec
out
push
cmpsl
in
test
movsl
fstps
xchg
jmp
lret
into
mov
cmpsl
or
sbb
sub
aam
mov
in
mov
pop
enter
push
dec
adc
icebp
mov
pushf
mov
pop
lods
inc
daa
outsb
add
jp
daa
jmp
in
lret
daa
pop
int3
push
push
adc
loope
ds
fsubl
and
push
cmpsl
gs
pop
add
lea
loop
ficomps
inc
jmp
lret
dec
nop
xorb
lcall
mov
inc
push
pop
lcall
jp
lods
imul
loop
adc
ss
xchg
adc
xorb
jbe
mov
sbb
push
shrl
clc
jnp
xchg
aam
js
fldenv
sub
sbb
ljmp
js
push
cmpsl
lret
enter
out
aaa
je
cmc
subb
xor
jmp
sbb
mov
enter
aad
push
imul
ljmp
das
adc
insb
push
and
mov
adc
jae
push
pusha
call
sahf
cmp
xor
ja,pn
sub
pop
jmp
out
das
mov
dec
scas
lock
cmp
mov
adc
mov
int
sahf
cltd
mov
ss
xchg
pop
in
inc
ret
inc
cmpsl
mov
repz
leave
add
dec
rclb
sub
out
popa
outsl
jns
sahf
dec
mov
ret
outsl
jmp
push
sub
mov
popa
popf
fs
fldt
das
aas
jne
addb
call
push
test
not
pop
nop
stos
int3
mov
sub
stos
adc
aam
fmuls
push
push
sub
and
ret
xchg
jle
les
mov
mov
call
bound
fstps
js
push
loope
jno
je
flds
out
ss
sub
mov
ljmp
or
and
rcl
lahf
jbe
stos
push
lock
sbb
sbb
je
cwtl
jne
and
pusha
aaa
xor
inc
movsb
jb
inc
leave
es
xchg
dec
xchg
push
lahf
jbe
push
adc
jns
add
test
scas
inc
jae
xor
stos
cwtl
xchg
mov
xchg
int3
xor
gs
repz
mov
xor
lods
jo
in
ljmp
lds
loope
sarl
aad
inc
xchg
lret
mov
jnp
xchg
pop
or
inc
gs
mov
les
pop
xlat
movswl
test
fdivrs
inc
sti
in
pop
fpatan
sub
adc
ljmp
call
roll
mov
dec
xor
ljmp
cltd
dec
xchg
dec
outsb
int3
sbb
ret
in
scas
fcmovbe
addl
movsb
stos
movsl
ficoms
out
pop
mov
mov
fwait
movsl
adc
inc
adc
jle
xchg
pop
or
popf
das
pop
sbb
rclb
mov
mov
inc
popf
repnz
andb
pop
sub
mov
adc
jne
jle
sbb
push
movsl
pop
cmc
adc
std
mov
ror
mov
outsb
mov
lds
outsl
mov
xorl
icebp
sti
mov
sbb
ret
insl
sub
xlat
mov
xchg
repz
arpl
push
mov
mov
and
rorl
xor
push
cmpsl
xlat
jo
rclb
xchg
and
push
es
subl
jns
dec
iret
fistpl
shll
iret
lcall
mov
cs
jo
mov
cmpsb
stos
stos
std
xchg
xor
push
fistl
aaa
mov
pop
aad
add
stc
aam
scas
add
add
push
pop
sub
add
mov
mov
pop
lahf
sub
push
sub
push
movsb
pop
out
or
in
push
loop
inc
and
jp
dec
pusha
mov
call
sar
cmp
lods
cli
push
mov
icebp
dec
mov
xchg
add
out
rcll
shrl
psraw
push
jle
push
mov
popf
sub
shrb
xchg
add
ss
push
sbbl
rolb
shll
insl
adc
in
cmc
pop
dec
daa
mov
rorl
pop
sbb
lret
add
daa
cs
scas
sub
mov
enter
loop
or
lock
data16
cmp
out
stc
movsl
filds
fcoms
stos
imul
rclb
fwait
push
or
xchg
js
insw
dec
in
daa
mov
dec
sti
fistpl
sbb
aad
lods
xor
sbb
push
pop
jmp
inc
sete
lods
add
lods
pop
and
fisttpl
arpl
sbb
adc
pop
negb
cmc
int3
popa
fabs
movsl
adc
mov
divl
and
add
out
outsb
iret
sbb
es
clc
test
lahf
cmp
aas
jle
inc
push
cmp
mov
movsl
xor
aad
fwait
jb
xor
inc
mov
adc
enter
xchg
fwait
pushf
xor
jecxz
add
adc
dec
je
dec
arpl
adc
test
movsl
mov
movsb
ss
push
push
fistl
push
mov
pusha
lods
add
mov
or
cmp
in
iret
in
or
mov
xlat
mov
aad
ja
pop
and
fdivr
and
add
mov
mov
jae
scas
ret
adcb
lahf
leave
aaa
sub
js
mov
sti
jae
adc
xchg
sbb
mov
imul
mov
push
mov
mov
je
test
movsb
sahf
mov
mov
fildll
adc
cld
mov
or
movsb
scas
insb
xchg
mov
pop
test
lods
ss
jbe
push
scas
clc
sbbl
scas
decb
shrb
aad
fdivs
or
mov
push
jmp
fdivrp
xchg
test
xlat
aaa
aas
xchg
cmp
in
loop
jle
shll
xor
mov
jb
dec
scas
jb
sbb
mov
jl
insl
pop
movsl
lods
ds
mov
xchg
sbb
rclb
dec
add
jne
pop
sbb
and
pop
cmp
mov
ss
sub
mov
ret
arpl
pop
outsl
adc
jbe
adc
adc
loop
das
cmp
mov
jle
movsb
sub
pop
movsb
adc
lret
or
in
jno
nop
cmpsl
push
ret
cmp
fcomps
pop
xor
fbld
mov
sahf
pushf
cmp
out
repnz
xor
mov
or
fnstcw
sub
mov
cmp
xor
mov
not
aam
pop
into
aad
fs
in
pop
out
mov
jae
mov
sub
adc
push
and
xchg
sbb
xrelease
lock
out
jbe
push
or
sbb
push
inc
dec
sbb
es
test
add
pop
negb
ror
jmp
call
jecxz
sbb
xchg
fwait
cltd
cmp
cli
adc
imul
stc
cmp
stos
mov
inc
faddl
jge
dec
sub
fsubl
jo
push
int
lahf
sbb
ret
repz
pop
sbb
inc
and
sti
nop
or
mov
lcall
xor
test
cmp
jns
int
int3
add
mov
frstor
pusha
es
cmp
or
mov
ja
or
hlt
iret
push
into
fisubl
js
sbb
loopne
mov
mov
inc
loopne
fisttpll
test
xor
leave
rep
out
pop
inc
sbb
jno
xchg
mov
pushl
imul
jbe
push
cmp
lahf
mov
pop
rolb
sbb
jne
movl
mulb
lcall
xor
cld
pop
roll
fstl
pop
repz
fdivl
sub
je
xor
ficoml
stos
cmpsb
jo
frstor
sub
sub
fbld
notb
adc
adc
mov
inc
adc
mov
push
fldcw
jmp
in
mov
sub
push
fistpl
adc
fcomps
ljmp
and
stos
mov
push
ja
loop
movsl
sub
or
mov
out
aaa
xor
cltd
cmp
adc
fnstsw
fistl
data16
out
adc
lret
push
es
mov
dec
inc
sbb
fcoml
daa
pshufw
sub
mov
sbb
cltd
push
rorl
sbb
stos
push
aad
jo
adc
adc
xor
xchg
sbb
loop
adc
addr16
ds
lret
neg
sub
dec
jne
sub
leave
sbb
popa
imul
cmpsb
push
dec
pop
cmp
xor
ja
cmc
lahf
lock
sbb
sbb
push
mov
fs
int
fnstcw
gs
insl
mov
pop
in
in
and
jecxz
sub
ja
jo
sbb
fstpt
or
loopne
nop
icebp
aas
aam
or
repz
mov
xchg
clc
fwait
shrl
arpl
aas
mov
mov
mov
inc
mov
into
dec
sahf
push
cmp
int3
pop
in
and
scas
fldt
xchg
lcall
daa
out
xchg
jg
inc
xor
fs
dec
sbb
xchg
call
fsts
insb
or
movl
sbb
mov
jne
adc
add
add
jne
push
outsb
ljmp
mov
xchg
cmpb
sub
das
add
addr16
sti
fadd
push
inc
jae
sar
mov
push
sub
insl
popf
addr16
and
mov
pop
cwtl
cmp
dec
loop
rcl
andl
sbb
inc
shrl
test
jae
rol
pop
pop
stos
insl
xchg
fdivrl
bound
in
push
mov
xor
aaa
push
outsb
pusha
jno
sbb
jp
bnd
mov
loop
cmp
push
cwtl
das
fs
out
bound
gs
and
jecxz
pop
add
out
jmp
jb
adc
jmp
lods
imul
pop
adc
jnp
outsl
test
pop
cmp
mov
shll
inc
mov
jge
mov
mov
xor
xchg
dec
or
loopne
aas
cs
loope
jmp
jg
ljmp
dec
stos
cltd
xchg
int3
mov
jp
aad
insb
into
lock
test
or
mov
xor
mov
mov
dec
sub
push
add
shll
jmp
xchg
fistpll
es
out
jns
pusha
frstor
les
int
xchg
es
mov
push
lret
sub
loopne
popa
cld
xor
dec
push
add
jle
mov
test
fwait
mov
sbb
and
cmpsb
aam
into
sbb
seto
divb
or
mov
jg
into
insl
mov
popf
dec
push
jg
ficomps
xor
clc
lret
add
in
mov
inc
jae
aas
ficompl
push
xchg
sbb
addr16
adc
or
leave
push
mov
js
iret
inc
sbb
inc
mov
ret
sub
adc
shll
fwait
mov
gs
out
xchg
mov
sub
xchg
and
ret
inc
imulb
call
cmp
gs
inc
into
jg
xchg
mov
push
xchg
cmc
cmp
and
loop
push
movsl
sbb
cmpsb
mov
jns
and
iret
iret
popa
push
aas
int3
les
lods
addr16
scas
movsb
dec
cmp
ja
mov
popa
fwait
iret
mov
mulb
testb
xor
adc
daa
mov
xchg
pop
jno
lods
insl
lds
sbb
pop
fst
int
je
pop
in
push
scas
outsl
aaa
lret
aaa
ret
or
sub
imull
aas
sbb
inc
push
jo
rorl
xor
xor
inc
fidivs
ret
cld
sub
pop
pop
push
push
xor
leave
jo
add
test
cmc
iret
in
sbb
cmp
xor
xchg
mov
pop
jg
dec
push
stc
dec
daa
jno
dec
xchg
push
dec
cmpsl
mov
or
inc
mov
add
push
in
vpcmpgtb
pop
cmp
push
pop
sbb
into
add
sub
jmp
fcmovne
push
lock
paddsw
fistl
int
arpl
in
div
lret
adc
les
or
add
jp
jnp
push
jmp
inc
imul
cmp
push
xor
jmp
repnz
cmp
out
mov
out
jne
push
or
xchg
out
dec
pushf
cmp
inc
ja
mov
mov
push
mov
mov
inc
xchg
fbld
xchg
cmp
xor
dec
inc
mov
mov
adc
outsl
ret
out
lods
push
into
aam
jg
mov
xchg
mov
aaa
icebp
out
pushf
js
popw
pusha
cmp
add
movsb
pushf
das
in
test
pushf
movsb
das
push
sahf
sub
sbb
push
int3
js
pop
pushf
dec
mov
jp
push
xchg
jge
pop
test
mov
xor
imul
popl
test
jb
fmuls
fisttps
movsl
adc
xor
mov
and
sbb
pop
dec
lret
loope
push
mov
xchg
sbb
mov
fdivr
and
push
rolb
dec
es
add
xchg
cmp
std
lcall
mov
aad
cli
mov
jo
repz
xchg
mov
xor
mov
pushf
cmc
in
decb
stos
sbbl
xchg
in
hlt
push
or
mov
movsl
adc
cmp
das
in
dec
push
sub
add
mov
mov
lahf
mov
pushf
dec
mov
dec
jae
cmp
pop
push
push
jecxz
fildll
nop
jo
test
xchg
into
rcrl
or
jns
shl
xor
mov
pop
mov
mov
aaa
sub
pop
dec
popa
sub
shlb
inc
adc
leave
sbb
daa
dec
enter
out
push
inc
jne
test
mov
jl
lock
test
mov
stos
ror
sub
mov
les
shlb
sbb
hlt
sbb
and
imul
aas
loope
sub
pop
and
fwait
rcll
pop
dec
cltd
or
pop
ret
mov
pop
add
jb
arpl
ret
ret
adc
mov
add
ss
push
or
imul
jbe
pushf
sub
mov
test
fldenv
and
add
push
lods
dec
add
cmpsl
and
pop
inc
and
xchg
or
insl
pop
in
sub
hlt
mov
pop
and
mov
sti
ds
jl
ret
iret
mov
jp
mov
jmp
xchg
fisubrl
cmp
aam
fwait
cmp
subl
jb
out
jae
jne
or
xchg
add
cmpsl
xorl
ret
cwtl
sub
fiadds
push
inc
mov
neg
xor
fcompl
pop
adc
clc
add
decl
rcrl
xchg
jmp
outsl
mov
out
xlat
push
popf
fists
xor
lods
jp
mov
pop
xor
add
adc
popa
pop
jmp
cmp
sti
xchg
ljmp
fisubrs
fstps
push
fcmovbe
lods
adcl
adc
sbb
sub
shll
test
icebp
dec
push
push
cmp
pop
ds
add
sub
jge
and
outsb
mov
and
mov
push
dec
sahf
fisubrl
dec
mov
lds
mov
adc
jle
pop
addl
lret
mov
dec
push
fnstcw
push
in
lods
add
call
cmp
loope
pop
imul
mov
out
push
dec
out
insl
out
jle
mov
mov
push
loop
cli
out
adc
mov
scas
daa
cmpsb
loope
or
aam
insl
test
mov
mov
and
popf
push
mov
dec
jb
out
add
mov
testb
imul
jo
rorb
jl
fdivrs
adc
or
jge
fmuls
gs
das
test
outsl
fwait
dec
mov
push
mov
pop
test
push
xor
loope
add
jle
ljmp
cmp
pushf
jge
pop
sub
jb
cld
into
call
add
test
push
lods
adc
jns
es
jge
dec
dec
mov
ret
pop
xchg
out
jle
dec
inc
mov
nop
and
or
popf
fldcw
lock
lds
mov
movsl
call
testb
sti
cwtl
pop
xchg
jae
lret
mov
mov
in
fbstp
add
dec
dec
mov
cld
ret
push
sub
mov
ss
iret
rcrl
sub
sbb
js
fs
xlat
pop
aad
lods
arpl
sbb
popf
dec
push
xchg
dec
lret
lcall
ret
xchg
add
in
popf
stc
push
xor
fidivrs
outsb
mov
aaa
and
xchg
xor
sbb
mov
dec
jecxz
inc
cli
dec
js
stos
lret
cmp
insb
adc
imul
mov
xchg
adc
push
daa
mov
xchg
les
bound
inc
push
sbb
ds
jo
or
cmc
cmp
pusha
sub
into
cmpsb
and
repnz
es
jg
hlt
cmp
inc
jecxz
push
pop
jo
data16
fld
js
add
dec
mov
sub
push
cmp
sub
sbb
xchg
arpl
push
das
jno
cmp
in
test
xchg
lret
inc
pusha
stos
mov
sbb
imul
dec
sahf
xchg
jg
test
sub
fidivl
jae
jbe
add
cmp
sub
in
call
add
mov
rclb
mov
push
imul
xlat
je
mov
cmpsb
pop
xchg
sahf
mov
enter
xchg
sub
ja
movsb
jle
jmp
loope
in
jp
rol
or
xchg
sub
ret
mov
and
pusha
loope
lods
aad
sbb
negb
mov
xor
test
mov
rcrb
and
enter
cmp
jge
xchg
stc
xor
test
inc
fidivs
sbbl
fbld
mov
lds
aaa
xchg
sbb
out
and
cwtl
flds
ret
jb
daa
ljmp
repz
ja
pusha
rol
cmp
jae
sar
outsl
cwtl
ret
shlb
cmp
enter
arpl
inc
mov
shll
xor
cwtl
and
stos
push
pop
mov
pop
adc
fisttps
xorb
add
stos
fistps
sub
out
ja
or
or
or
inc
test
xchg
loopne
mov
inc
dec
sub
icebp
push
mov
ss
neg
push
fwait
xchg
repnz
xchg
xlat
xchg
sarl
incb
scas
fldt
dec
icebp
rol
push
mov
mov
enter
mov
jns
ja
cmp
mov
inc
jle
gs
and
js
ljmp
dec
call
xlat
jg
inc
fmuls
dec
jmp
push
insl
stc
sub
inc
push
imul
stos
push
sarb
fmull
mov
mov
jp
cmp
jmp
rol
insl
pop
std
hlt
icebp
lret
sahf
mov
jns
jbe
sbb
cmp
scas
or
in
cs
push
xchg
sarb
sub
stos
mov
aaa
repz
imul
xor
inc
xor
xor
mov
pop
cmp
arpl
lods
outsb
mov
test
in
or
xchg
outsb
xor
mov
xlat
push
cmpsb
push
xchg
notb
mov
xlat
cmpl
pushl
or
add
das
dec
sahf
loope
dec
or
test
das
loopne
insl
inc
sub
mov
push
lret
lret
pop
test
inc
stos
les
or
jmp
add
js
adc
mov
dec
mov
mov
add
push
outsb
dec
lahf
or
or
aaa
cltd
push
pop
xlat
jae
jo
mov
andb
sarb
jno
fsubrl
aad
in
inc
jnp
xor
lret
pop
sti
in
stos
jne
fldlg2
xchg
sti
test
adc
test
popf
inc
xchg
sub
test
in
inc
fnstsw
std
jnp
popa
push
les
or
addr16
xchg
in
inc
movsb
loopne
mov
ret
push
mov
adc
icebp
int3
sbb
lret
loop
imul
adc
repz
jns
mov
inc
int
out
imul
sbb
jb
inc
insb
dec
gs
xchg
dec
adc
cmp
cmp
fcoms
pop
pop
scas
ficoms
push
pop
xchg
movsb
or
or
inc
add
ds
test
in
adc
dec
xchg
xchg
fildl
or
xchg
cmp
ljmp
adc
xchg
jecxz
pop
fsub
and
in
lds
repz
dec
sbb
cwtl
shlb
aas
stos
pop
push
out
bound
mov
and
push
stos
push
enter
mov
sub
pop
dec
push
mov
adc
roll
xchg
loop
cld
test
xor
mov
sub
push
and
mov
inc
pcmpeqd
sub
inc
mov
js
lret
loope
sbb
or
addr16
lahf
add
mov
je
and
mov
push
pop
cmpsb
xor
rcll
rclb
and
dec
adc
xor
adc
insb
imul
push
idivb
arpl
xchg
cmc
dec
stos
icebp
push
pop
sbb
fadds
dec
cld
iret
mov
xchg
scas
fdivr
scas
gs
or
pop
dec
subb
xor
insb
sub
or
cmp
sbb
jno
pop
xchg
bound
pop
fdivs
pop
icebp
push
mov
or
adc
ja
mov
pop
adc
es
stos
sahf
xor
dec
loope
sbb
xchg
mov
out
pop
into
cmp
push
inc
cmp
mov
mov
push
jle
idivl
jns
hlt
nop
xchg
pop
xlat
xor
fwait
mov
into
mov
mov
ret
xchg
aam
shll
sbb
std
ljmp
das
enter
ss
xchg
faddl
dec
sbbb
pop
jge
loope
flds
out
lock
test
mov
push
aaa
scas
stos
and
cmp
movsl
pop
adc
or
aas
push
movsl
outsb
push
popa
mov
mov
dec
test
aaa
sahf
mov
dec
loop
pushfw
leave
out
shl
fistpll
aas
sbb
ljmp
repz
jb
ss
xchg
gs
mov
outsl
sub
insl
adc
mov
sub
mov
xor
hlt
arpl
jb
repz
add
in
sbb
push
jb
or
xor
out
nop
movsl
mov
push
adc
aam
mov
stc
sbb
and
and
sahf
mov
test
inc
out
test
mov
xchg
inc
fsubl
mov
jmp
xchg
dec
leave
and
sarb
push
loop
lcall
pop
sub
mov
jbe
mov
jmp
mov
popa
mov
mov
scas
mov
mov
insb
nop
push
inc
enter
dec
pop
or
test
xor
sar
repnz
hlt
test
cmp
xchg
and
dec
ror
pushf
jle
je
sbb
push
orb
in
jbe
jns
jnp
jns
push
adc
xchg
mov
xor
cli
lahf
cs
lahf
xlat
test
mov
dec
xchg
or
sbb
fcoml
loopne
jbe
mov
mov
sbb
pop
cmpb
dec
jno
rorl
pop
bound
repnz
or
rol
cmc
adc
sub
mov
add
loopne
mov
inc
adcb
lock
mov
inc
push
mov
inc
cmp
scas
cmp
sbb
xchg
insl
cwtl
call
mov
add
hlt
push
into
ss
sbb
push
ja
subl
adc
or
pop
jno
out
nop
jno
out
lock
mov
adc
push
notl
int3
aam
mov
fistl
cmp
sbb
mulb
mov
push
test
into
loopne
jb
lret
inc
lret
loop
adc
std
and
insl
shlb
xchg
popa
lret
mov
add
outsl
sahf
lods
fs
fisttpl
mov
lock
lcall
xchg
inc
add
imul
jmp
aad
lret
fs
repz
jno
push
mov
icebp
fcmove
inc
jae
fdivrl
jae
adc
adc
dec
jecxz
sbb
sub
mov
jnp
fadds
in
jne
mov
neg
push
xchg
gs
sbb
test
int3
inc
sub
into
jnp
rcrl
ljmp
pop
test
js
fsubs
mov
lret
jmp
push
mov
aaa
mov
lret
daa
subb
push
cmpb
imul
dec
inc
and
mov
inc
fcoms
mov
roll
mov
fldl
mov
dec
bound
mov
xchg
or
sub
lcall
shll
mov
sbb
jnp
inc
fwait
test
cltd
or
cli
out
adc
cmc
xlat
rolb
xor
push
cmp
dec
stos
mov
push
fwait
pop
mov
and
pop
mov
mov
xor
pop
fwait
ds
shrl
test
insb
adc
test
mov
cmc
mulb
aas
mov
xchg
neg
fcmovne
sub
sbb
unpcklps
or
xchg
pop
jo
fwait
js
jo
ret
push
dec
loop
ja
or
ja
push
mov
mov
cld
ret
jo
icebp
push
xchg
repnz
add
adc
popf
lds
ds
inc
inc
cmp
cmp
fstpl
xchg
shrb
daa
insb
mov
push
ret
in
int3
jle
mov
sbb
test
call
sbb
js
xchg
popa
lods
scas
cmp
sbb
and
jle
lock
xlat
test
push
into
jno
fwait
mov
rorl
mov
sub
cmc
int
lcall
inc
test
xor
xor
es
movsl
int
or
cmp
adc
repnz
mov
aas
and
xor
mov
sbb
hlt
or
mov
xchg
and
arpl
pop
mov
add
out
and
mov
hlt
and
popa
repnz
out
or
mov
lret
imul
mov
inc
cmovl
xchg
xor
sub
sarb
lock
jge
cmpsl
gs
mov
mov
sti
mov
mov
sub
jmp
mov
or
inc
jno
cwtl
rcl
dec
mov
push
fwait
xor
fwait
xchg
fcoml
lret
rolb
fists
shlb
dec
ja
mov
dec
aam
orl
fs
testb
xorl
cld
add
adc
test
rcrb
xor
test
aad
aam
dec
js
pusha
xor
dec
ret
push
dec
inc
inc
fwait
xchg
pop
xchg
push
loope
rorb
xor
mov
scas
pop
inc
lret
jnp
jmp
arpl
cmpsl
enter
adc
mov
or
roll
movsb
jl
clc
xchg
xor
jno
roll
mov
mov
push
adc
mov
cmpsl
out
dec
iret
data16
das
xor
mov
mov
movsl
call
sub
mov
mov
sub
rorl
adc
ss
stos
call
cmpsb
sarl
add
vpunpckhwd
sbbb
push
or
inc
mov
and
jae
stc
roll
cmp
fsubl
mov
fs
je
popa
les
lcall
push
stos
addl
sub
stos
sub
and
dec
dec
loopne
movsl
xchg
sbb
pop
and
xchg
cmp
xor
push
sub
mov
inc
inc
mov
mull
ret
sbb
jl
lcall
std
repnz
xor
lea
repz
mov
add
mov
mov
or
cmp
popf
icebp
js
loop
ds
clc
pushf
adc
test
loope
in
pop
mov
push
sub
fwait
jb
das
lods
mov
pop
loop
pop
jae
call
push
add
push
inc
push
add
out
inc
shl
push
push
scas
imul
fcmovnb
sub
sbb
in
mov
mov
push
add
imul
fisubrs
mov
mov
js
mov
xchg
inc
sbb
xchg
dec
loop
mov
add
mov
jne
pop
xchg
pushf
xor
mov
xsha1
cmpsb
push
ljmp
sub
out
bound
sbb
rcr
negl
mov
dec
lock
lds
pop
dec
gs
jmp
pop
dec
sub
jg
push
repnz
fnstenv
adc
mov
aaa
push
rcr
inc
adc
mov
sub
sbb
xchg
sub
ja
cmp
mov
jmp
xor
les
xor
add
sub
or
subb
add
loopne
adc
sarl
out
sarl
pop
xchg
cltd
lahf
stos
push
cmp
lods
shlb
push
dec
fs
push
idivb
lods
in
fcoml
lock
dec
xor
ss
ror
test
or
cmp
push
sahf
and
int
rcll
mov
mov
mov
std
adc
pop
jnp
mov
loopne
inc
dec
ret
mov
cmp
mov
repnz
pop
push
mov
stc
push
pop
mov
xchg
push
icebp
scas
sbb
jecxz
pusha
pop
jle
cmp
mov
cmc
movsl
adc
and
push
pusha
jb
movsb
xor
das
mov
out
cs
fmuls
das
popl
in
mov
into
test
xor
roll
lock
jmp
cmp
pop
or
lds
repnz
ret
cmp
lock
iret
subl
sub
xchg
add
ret
and
mov
ss
stos
sub
mov
mov
pop
es
mov
rcrl
gs
sbb
dec
adc
pop
shlb
sti
jecxz
pushf
or
adc
xor
mov
lahf
or
add
movsl
fistps
movsl
scas
cli
add
sub
cmpsb
jo
test
enter
or
dec
sub
in
pop
mov
push
decb
push
sbb
aas
push
push
iret
xchg
or
test
out
jmp
push
pop
lock
dec
inc
out
enter
sbb
ret
xor
movsb
dec
mov
jno
mov
and
imul
pop
sbb
xor
and
stos
and
pushf
stc
mov
pop
inc
mov
pop
cltd
cmc
pop
adcl
insl
repz
pop
ja
clc
mov
js
sbb
hlt
adc
scas
push
mov
imul
or
cltd
mov
pop
jle
int
mov
sbb
xor
or
fists
adc
scas
in
jge
stos
pusha
lock
adc
sti
pop
mov
jno
imul
ss
mov
jg
sbb
pop
jae
cmp
jns
and
imul
jbe
or
cld
sbb
push
sbb
push
fyl2xp1
sahf
ljmp
mov
movsb
cmp
pop
push
ret
in
rclb
clc
add
push
aas
bound
les
addr16
cltd
dec
and
cmp
mov
sbb
in
mov
push
and
push
jo
push
push
add
inc
testl
movsl
xchg
jecxz
xor
cmp
xlat
ret
xlat
icebp
mov
add
jge
lcall
ret
fdivl
mov
xlat
lahf
sbb
stos
mov
decb
mov
xor
std
enter
xor
add
outsb
mov
in
ret
cmc
pop
hlt
push
cmp
pushf
xor
sub
lock
mov
nop
mov
xor
in
mov
dec
or
inc
and
adc
in
mov
in
pop
and
dec
pop
xor
fwait
cmp
mov
les
or
mov
xchg
aaa
fwait
cmp
jl
xchg
inc
mov
inc
xchg
ss
stc
mov
mov
push
shll
lds
mov
repz
int
mov
push
add
push
jmp
into
sbb
je
xchg
and
imul
pop
sub
lea
add
xor
rolb
lods
mov
sub
sbb
xor
xchg
jbe
cmc
inc
pop
pop
xor
jb
fisttpll
and
loop
mov
cmpsl
ret
pop
mov
inc
imul
stos
dec
mov
mov
dec
in
gs
or
data16
out
sahf
sub
test
pop
push
or
push
mov
enter
daa
aas
es
in
lahf
loop
and
fs
sbb
movsb
sbb
ja
ret
push
aam
fiadds
inc
sbb
adc
cmp
mov
aad
cmpsl
jecxz
xchg
sbb
jl
add
call
les
fsubp
repz
aad
add
pushf
sbb
cmpb
bound
cmpps
and
jns
xchg
shrl
stos
jb
aad
aaa
cmc
aad
fsub
rcrl
dec
xchg
xchg
fisubrl
push
es
xchg
test
sbb
cmp
das
out
or
push
inc
cwtl
pop
cwtl
ja
mov
setbe
repz
inc
in
outsl
fucomp
inc
lea
or
daa
push
lcall
sbb
mov
pop
push
push
jno
inc
sub
ffree
add
fildll
movsl
sub
push
xlat
pop
lcall
xchg
int3
jbe
inc
sbb
xchg
add
ret
lock
into
push
fisubs
lret
mov
loop
in
jbe
or
mov
add
fidivl
in
xchg
jns
mov
mov
pop
sub
push
push
push
adc
test
jae
inc
aam
stc
pop
rclb
or
scas
jg
popa
xchg
xchg
mov
aaa
adc
in
ss
stos
cmp
dec
lods
lds
mov
pop
les
mov
aaa
pop
cmp
pop
fists
arpl
ret
dec
or
adc
je
daa
adc
movsl
jno
addr16
fnclex
pop
and
sub
mov
xchg
imul
mov
sub
js
add
mov
pop
in
inc
inc
in
les
popa
dec
xorl
cmp
pop
jae
jecxz
dec
jne
xor
jmp
add
std
xor
or
pop
es
in
jnp
add
mov
mov
stos
call
push
cmp
lret
mov
in
mov
enter
mov
sbb
test
loop
inc
adc
jg
mov
daa
lods
rcr
xchg
rcl
jbe
lret
cld
out
testb
push
mov
pop
and
fmulp
cmp
and
bound
orl
mov
mov
inc
xchg
inc
pop
xrelease
xchg
lds
dec
push
sbb
enter
push
stos
mov
dec
jns
sub
add
pop
gs
push
notb
add
jbe
xchg
lcall
mov
push
push
pusha
fistpl
cmp
shl
jmp
aaa
leave
in
outsb
push
push
out
mov
jae
test
sbb
sub
mov
push
mov
std
loopne
mov
push
xchg
and
push
dec
jo
ficompl
push
rcl
mov
jne
dec
add
outsb
mov
pusha
out
mov
mov
or
pop
inc
sbb
and
add
adc
inc
mov
popa
inc
fsubrs
icebp
sbb
sbb
lods
cmc
movsb
arpl
sbb
fcoms
ret
xor
push
pop
add
xlat
adcb
cmpsl
loopne
ljmp
dec
push
imul
or
inc
and
in
dec
and
jnp
pop
call
ficoms
mov
push
or
popf
push
dec
jl
popf
xor
jae
aas
add
inc
mov
or
pop
pop
sbb
loopne
mov
test
or
mov
pop
imul
out
cmc
inc
cmpsb
adc
inc
xchg
sbb
push
call
dec
out
sub
mov
mov
in
sub
sbb
push
mov
mov
jns
ljmp
add
dec
mov
rcr
cmc
push
pop
inc
loopne
xchg
int3
mov
mov
lcall
add
shr
imul
mov
cld
sub
ja
cli
dec
pusha
inc
fwait
out
mov
in
popa
mov
push
stos
pop
in
out
fcmovu
dec
sub
subb
push
cwtl
lahf
pop
mov
xor
pop
push
imul
pushf
scas
and
adc
dec
sbb
jp
aas
icebp
imul
pop
jl
dec
pushf
mov
add
adc
dec
jp
sti
or
sbb
or
js
mov
add
mov
cwtl
stos
scas
andb
jnp
loope
adc
popf
or
fstps
push
xor
je
scas
pop
xchg
iret
push
repnz
and
je
ja
andl
or
shl
jp
xchg
adc
sub
imul
les
out
or
mov
lea
sahf
out
scas
aam
in
mov
cmp
dec
xor
sub
cltd
pop
or
ret
adc
xchg
push
jecxz
fs
push
xor
test
xor
xchg
add
loopne
sub
mov
outsl
imul
xor
bound
pop
inc
push
add
repz
jle
call
scas
fnstenv
sbb
cmp
inc
dec
pop
or
jge
inc
sub
fistl
or
mov
loopne
mov
ss
fcomip
ret
adc
cwtl
out
aam
or
push
sub
es
es
lods
lahf
out
xor
inc
mov
jecxz
pop
std
adc
and
aaa
negb
test
lods
dec
shll
jbe
cmp
imul
add
insl
cli
and
inc
sbb
icebp
sbb
loopne
sub
popf
sbb
dec
cmp
mov
int
xchg
cli
mov
add
gs
in
and
xchg
sub
in
cmp
pop
mov
jp
adc
mov
xor
pop
ljmp
pop
mov
mov
or
jge
insl
pop
lods
in
jge
xor
jae
insl
daa
xchg
pop
ss
iret
xor
movsl
fnstsw
mov
bound
pop
frndint
insl
sbb
mov
mov
int
mov
addr16
and
dec
inc
jno
inc
xchg
xlat
xor
and
add
and
inc
sbb
jmp
jnp
mov
mov
lret
or
rcrl
pop
enter
add
sbb
adc
pop
leave
hlt
mov
sar
push
jg
and
popa
mov
inc
inc
mov
pusha
sub
das
push
and
inc
xchg
pop
fdivrl
and
xchg
outsl
push
jge
sbb
inc
aam
dec
mov
xor
mov
push
mov
cmp
pop
sbbl
insl
mov
sarl
pop
inc
je
popf
xchg
rol
out
mov
xor
jle
or
out
inc
inc
sub
fisttps
rcl
mov
xchg
call
fldt
fwait
xchg
sbb
inc
sbb
addr16
inc
lods
out
in
popl
mov
inc
and
mov
and
cmp
xor
xchg
mov
stos
roll
sbb
leave
xor
push
mov
sahf
pusha
cmp
cmpb
adc
lea
xchg
or
mov
jne
hlt
loopne
pusha
inc
jge
ss
inc
out
push
mov
ljmp
cmp
cld
adcb
sbb
cmpsb
sub
test
repz
or
ja
dec
push
cmpsb
sbb
popaw
mov
lods
pop
clc
sti
shrb
sub
adcl
sar
push
or
and
or
ffree
inc
xchg
icebp
in
jmp
adc
dec
xchg
popa
sti
outsb
inc
aaa
cltd
js
mov
pop
movsl
mov
jae
jl
ja
sbb
cmp
pusha
stc
mov
or
mov
jmp
push
fbstp
rorl
repnz
adc
mov
dec
jmp
inc
lea
mov
dec
jmp
pop
lods
out
movsl
cs
aaa
adc
xchg
jl
sahf
jbe
dec
adc
dec
jp
jl
sub
repz
jp
pop
fmul
cmp
pop
scas
xchg
push
push
fistps
add
lods
repz
fnstcw
popf
mov
cmp
aad
jp
add
fiaddl
mov
std
rcrl
jp
cmp
popf
ret
ss
sahf
outsl
cmpsb
mov
stos
adc
cmp
xor
mov
jge
mov
jg
out
jbe
push
jb
aam
mov
mov
pop
enter
popa
test
dec
mov
mov
or
push
push
pop
adc
aaa
mov
scas
xor
in
xor
fwait
outsl
add
in
xchg
xorb
adc
fadd
sahf
ja
jge
movsl
jno
or
pop
out
test
imul
lret
leave
push
mov
mov
js
or
cmp
or
adc
pop
cmp
std
jp
add
or
fwait
loope
mov
clc
test
lods
add
or
or
in
push
leave
jmp
sub
test
cmp
lahf
test
pop
mov
jbe
ss
sbb
push
pusha
outsb
add
icebp
mov
frstor
lods
les
push
mov
lea
dec
push
jbe
adc
pop
adc
addr16
dec
lret
xchg
jecxz
cs
shrl
jnp
je
orl
andb
mov
pop
pop
sub
test
push
cmp
dec
xlat
adc
xor
cmpsl
imul
mov
dec
mov
sbb
cmc
pop
inc
xchg
cmp
cmpsb
out
sbb
jecxz
std
fldl
fwait
leave
ret
jmp
and
daa
pop
and
jnp
punpckhbw
add
inc
gs
ds
popa
loop
pop
addr16
fisubl
cmp
add
push
pushl
fbld
in
iret
xorb
xor
cli
rclb
cmp
in
fmuls
mov
cmp
jne
push
ret
or
jecxz
inc
mov
xor
and
push
call
sbb
mov
hlt
pushf
fisttpll
push
test
mov
test
loope
aaa
pusha
push
xchg
movsl
push
cwtl
aas
mov
xor
out
or
ljmp
sbb
js
pop
pop
sub
in
jg
outsb
mov
sub
jno
daa
xor
mov
enter
inc
mov
adcl
cmp
mov
mov
shr
xchg
inc
js
inc
roll
pushf
mov
adc
sbb
lret
nop
add
repnz
das
mov
or
adc
addr16
sbb
ljmp
jg
sbb
pop
jbe
mov
jno
es
in
inc
ljmp
xchg
fucomi
pop
lahf
dec
outsb
cmpsb
pop
sarb
or
lahf
loopne
mov
dec
or
test
and
out
insb
adc
add
mov
lea
adc
fs
jp
and
js
or
out
ret
cmp
lea
outsl
xor
dec
sbb
outsl
mov
cmp
mov
adc
int3
gs
fiadds
mov
jecxz
xor
cmpsl
test
xor
jle
push
mov
popl
aad
lea
sub
enter
and
sbb
mov
dec
push
nop
pop
add
lcall
rcr
shll
fmul
push
fisttps
rcrl
mov
dec
push
push
gs
movsb
cs
lcall
mov
das
mov
hlt
in
lret
cmp
xor
pop
cmpsb
repz
xchg
jae
int3
inc
sub
push
push
push
lahf
sbb
ja
loop
pushf
and
int
lret
mov
push
incb
dec
adc
xchg
addr16
jo
push
fwait
dec
loopne
sahf
mov
push
stc
xor
jb
inc
rolb
movsb
jno
js
add
out
call
push
enter
or
or
mov
sbb
in
push
xchg
into
adc
mov
xor
dec
sub
rorb
mov
popf
aam
aas
inc
and
dec
stos
shll
out
add
into
push
xlat
dec
es
or
ss
xchg
dec
rolb
arpl
mov
arpl
mov
inc
mov
add
int3
notl
add
movsl
mov
int3
cli
js
inc
pushf
push
pop
mov
adc
jbe
int3
jno
cltd
je
cmp
mov
into
inc
ds
add
loope
xchg
adc
xor
mov
inc
sbb
sub
push
sti
mov
jmp
jl
in
mov
cltd
test
or
add
pop
je
fld1
sub
int3
movsl
lahf
dec
into
jecxz
out
sub
jmp
add
push
adc
ja
sbbb
add
lds
aas
stos
mov
loope
js
cwtl
mov
dec
mov
mov
pusha
inc
inc
pop
adc
movsl
arpl
adc
icebp
and
pusha
lret
push
ret
ret
insl
mov
mov
pusha
cmp
push
adc
xor
and
push
push
int3
test
call
adc
xchg
mov
inc
jns
dec
shr
aad
push
push
jg
cld
sbb
repz
cmc
xchg
dec
add
iret
add
sbbl
pop
ds
loope
rorl
mov
or
in
mov
bound
jno
pop
std
ror
mov
fisttpll
xchg
in
push
mov
je
lea
rorb
push
adc
and
or
cmp
in
push
int3
lods
mov
aam
pusha
jo
iret
call
cli
or
jno
ja
sub
sbb
push
cmp
aaa
loopne
mov
roll
nop
popa
out
add
pop
lahf
in
dec
adc
push
mov
xor
mov
mov
imul
pop
sahf
mov
sub
mov
xchg
in
popa
dec
sbb
cld
sub
mov
stos
imul
sti
mov
sub
cmpsb
rol
add
stc
dec
shr
test
add
leave
mov
sar
stos
mov
dec
hlt
cmp
jno
subl
test
adc
lds
leave
jg
jp
xor
and
push
cld
pop
nop
ss
in
call
bound
ljmp
inc
push
ds
inc
out
or
loopne
scas
test
scas
mov
xor
and
xchg
sub
push
mov
mov
loop
fadds
and
inc
xlat
sub
ret
xchg
add
inc
in
jnp
and
popa
negl
daa
adc
mov
mov
adc
test
xchg
bt
ret
sub
outsb
push
push
mov
pop
lret
mov
and
cmp
xchg
notb
cmp
xor
xchg
or
sarl
adc
mov
in
mov
xor
xchg
jbe
sub
into
sbb
es
dec
or
mov
xor
jns
mov
mov
sbb
fwait
out
lcall
nop
std
pop
xor
pushf
mov
testl
jae
jns
lods
out
xor
inc
outsb
gs
int3
clc
sub
jl
stos
xchg
les
js
rorb
out
sbb
cmp
and
aas
ds
lds
mov
or
cli
test
push
movsb
cmp
popa
jle
stos
lea
adc
add
xchg
shrl
lahf
subl
jge
sbb
push
sub
jno
mov
jae
adc
pop
call
push
xlat
sub
jno
test
cld
call
addl
dec
xchg
fldenv
mov
or
add
and
jmp
push
mov
pop
stc
cmpb
inc
jne
repz
pop
sar
ret
fidivs
into
rcll
insb
or
cs
xor
popa
push
fwait
dec
lret
push
add
bound
imulb
movsbl
adc
mov
ret
lock
pop
xor
out
scas
out
lcall
mov
xor
mov
ss
mov
hlt
repz
into
icebp
jp
dec
movups
sub
xchg
mov
or
sbb
popa
mov
dec
pop
gs
jae
int3
faddl
pop
push
push
adc
inc
inc
xchg
mov
mov
or
inc
rep
cmp
mov
add
add
ror
cld
popf
mov
nop
jb
push
ret
mov
or
sti
lock
dec
push
sti
xchg
pop
push
cmc
subb
fwait
fidivl
cmp
jl
inc
jmp
fbstp
ss
lahf
mov
sub
add
fwait
jnp
icebp
mov
jnp
rcll
xchg
jge
mov
sbbb
or
ljmp
add
pushf
inc
mov
enter
test
fdivrs
or
adc
pop
clc
ficomps
inc
push
or
fiaddl
dec
loope
xchg
cmpsb
clc
and
scas
out
add
bound
aad
mov
push
push
fs
add
cwtl
and
ja
sub
stos
mov
or
mov
fcom
arpl
pop
pop
or
enter
xchg
outsw
mov
xchg
lret
xchg
scas
mov
xor
nop
adc
movsl
fs
add
xlat
aas
aam
pop
xlat
aas
jb
pop
mov
popa
loop
mov
sub
adcb
add
xlat
sbb
into
mov
mov
xchg
sbb
pop
xor
xchg
sub
sub
movsl
xorb
mov
sub
push
loop
out
mov
fisttps
jo
sbb
xor
push
xor
or
xchg
dec
mov
in
xor
mov
mov
outsl
push
leave
mov
repz
repz
cs
mov
movsb
lret
sbb
ja
cs
movsb
loope
mov
repnz
dec
mov
xor
jp
addl
in
mov
cltd
dec
rorb
mov
sub
xchg
mov
sub
lahf
ja
add
push
lcall
js
imul
ret
in
push
mov
mov
pusha
mov
push
inc
dec
frstor
in
popa
push
push
adc
lahf
xor
push
in
mov
rcrl
mov
cmc
pop
andl
add
dec
pop
sbb
mov
or
fldenv
fmuls
fdivs
pushf
sbb
cwtl
mov
sub
cli
sbb
movsl
cmp
xchg
into
shl
mov
and
fistl
cli
cmp
fsubr
adc
mov
pop
js
add
mov
jecxz
push
mov
in
pop
and
movsl
movl
inc
data16
rcl
das
add
mov
push
adc
ret
test
das
pop
cmpsl
loope
mov
leave
aad
sub
xor
mov
sub
ds
xchg
or
loope
push
pop
push
or
lds
jno
pop
and
adcb
loope
clc
test
adc
ss
xchg
pop
cld
xchg
pmullw
movsl
loop
test
test
sbb
repnz
mov
add
int3
outsl
mov
dec
imul
int3
xor
adc
shrl
mov
adc
aas
push
add
call
into
pop
push
shll
dec
frstor
cmp
jl
mov
or
and
xor
stos
imul
cwtl
movsb
mov
and
lds
daa
jecxz
inc
xor
xchg
rorl
popa
arpl
cmp
xchg
jge
or
lea
lret
sub
lods
inc
repz
repz
loope
lds
lds
push
xchg
inc
jmp
fcomip
or
pop
aad
insb
or
cmp
jmp
pop
data16
aas
test
dec
idivl
mov
cmp
jae
pop
or
pusha
je
shlb
xchg
mov
pop
fwait
jecxz
adc
cld
sarb
push
ljmp
mov
adc
in
add
dec
hlt
rcrl
pop
push
call
mov
negb
cmp
hlt
les
roll
sbb
jno
cmpsl
movsb
and
test
sub
shlb
movsb
mov
leave
sbb
xchg
nop
movaps
outsb
fisttpll
mov
sub
in
lods
mov
in
in
test
xchg
hlt
test
leave
sbb
and
sbb
sbb
or
popl
sarb
cltd
aad
lds
xlat
mov
outsl
xor
stos
pop
jno
out
and
mov
push
call
jbe
and
sbb
out
pop
ret
aaa
vsqrtss
add
and
cmovnp
icebp
xor
sarb
fsub
pop
movsl
mov
xor
xor
inc
mov
cmp
sbb
cwtl
ffreep
pop
out
or
pop
in
mov
mov
popa
notb
mov
testb
aad
je
je
and
mov
test
inc
push
in
in
jmp
and
cli
out
jns,pn
adc
or
pop
into
jae
aam
cmpsl
xor
and
push
mov
mov
push
sub
addr16
pop
xchg
mov
ja
fimuls
jg
lret
outsb
xchg
fildl
out
jge
sahf
dec
sbb
mov
jle
cmp
sti
fwait
repz
stos
stos
and
filds
into
pop
mov
sub
jle
test
cwtl
mov
leave
fmull
push
scas
dec
add
push
or
ljmp
mov
push
xchg
je
pop
adc
mov
jge
pop
push
bound
lds
add
arpl
mov
lods
out
jae
pop
movsb
roll
flds
xchg
sti
lcall
movsb
out
and
cmp
outsb
dec
cwtl
test
push
std
mov
lahf
xor
inc
pop
adc
mov
lods
call
sub
jno
sahf
push
mov
xor
push
insl
lods
je
nop
movsb
ds
fdivrs
fmuls
jmp
je
jecxz
fldl
enter
shlb
rcrb
filds
outsb
push
xchg
std
test
mov
das
enter
int
push
call
iret
lea
mov
pop
and
mov
add
les
rcrl
adc
clc
dec
scas
push
push
aam
stc
dec
lret
test
lods
roll
inc
incb
push
dec
mov
lret
pop
ljmp
repnz
xor
mov
test
jo
cmp
inc
rorl
xchg
adc
iret
mov
xchg
sub
pop
mov
mov
rorb
cmp
dec
mov
mov
ja
pop
adc
pushf
cmpsl
xor
cld
pushf
repnz
fisubrl
shl
jbe
push
sbbb
int
add
jle
push
xor
cli
sti
loop
rcrb
adcb
stc
in
js
xchg
push
and
daa
movsl
sbb
pusha
cmp
test
xor
and
jle
sbb
or
and
cli
xchg
ret
xchg
xchg
inc
mov
jmp
lret
adc
aad
mov
test
xchg
adc
pop
push
mov
arpl
lcall
fcmovu
insb
loopne
push
fisubrl
icebp
xchg
jo
cmp
iret
jo
mov
fcmovb
repz
in
mov
sbb
inc
pushf
jo
jg
xchg
rolb
sub
ficompl
xchg
call
arpl
leave
lcall
jp
pop
out
mov
xchg
jae
lret
mov
sub
cmpb
push
sbbl
mov
movsb
and
ss
pusha
in
fisubrl
out
push
mov
sub
dec
pop
aam
mov
dec
int
cs
and
enter
and
stc
stos
ja
dec
add
mov
aas
rorb
dec
mov
rcll
push
mov
sahf
add
test
cmp
loope
bnd
sbb
adc
xchg
mov
inc
daa
adc
xchg
loope
mov
cmp
dec
xchg
jne
pop
scas
bound
pop
js
in
pop
and
jae
fcoml
in
jns
fisubrl
aam
push
adc
ret
ret
pop
int3
in
xchg
cmp
xchg
push
mov
xchg
andl
sarl
ret
mov
loope
mov
call
adc
add
gs
mov
xorb
and
fiadds
jmp
repnz
cmp
dec
or
inc
xchg
bound
jecxz
lcall
or
or
inc
mov
xor
cmp
jae
popf
xchg
iret
jmp
ret
loop
loope
xchg
mov
pop
pop
pminsw
imul
fdivr
sbb
rorb
cmp
shll
sub
in
int
loopne
sub
gs
xor
and
jb
lock
cmpsb
stos
adc
push
xor
and
loop
insl
pop
xchg
ror
les
in
xor
jno
loopne
or
jae
sub
lea
xchg
adc
sti
mov
jbe
inc
push
push
negl
jge
jb
jle
dec
outsl
jmp
push
subb
push
inc
add
adc
jno
push
sub
sub
mov
cmp
les
nop
and
pop
divb
mov
cmc
jecxz
xchg
imul
jg
mov
orl
loope
addr16
cmp
add
push
mov
or
adc
les
xchg
fidivrl
leave
es
xor
mov
ja
dec
rorl
push
cmpsl
sahf
push
adc
nop
add
add
sub
lahf
xlat
xchg
mov
xor
stc
cmp
dec
gs
adc
jp
lahf
in
imul
int3
mov
js
or
insb
pusha
test
mov
xchg
arpl
dec
jl
xor
sarl
dec
in
inc
mov
xchg
repnz
xchg
movsl
jp
mov
xchg
xchg
push
ds
mov
mov
loop
mov
adc
scas
stc
popa
subl
jge
pop
ja
das
movsb
add
sbb
inc
inc
ret
scas
outsb
sbb
add
inc
icebp
scas
jno
mov
mov
push
inc
xor
cmp
add
and
ljmp
rcr
out
leave
dec
pop
aad
push
mov
mov
ret
lret
inc
outsb
fisubs
sub
add
sub
gs
jo
inc
sub
and
mov
arpl
testb
pop
add
push
inc
or
cmp
mov
jmp
mov
cmc
jp
or
xor
movsb
sarb
cmc
push
scas
mov
std
rolb
mov
mov
inc
sbb
sar
dec
pop
pop
xchg
in
movsl
fadds
lods
int
push
jg
mov
jae
xor
outsl
lock
jb
cld
sub
inc
xor
mov
ror
jecxz
or
sub
adc
fbld
stos
mov
xchg
jo
sub
mov
dec
jb
xor
add
roll
lcall
pop
sbb
es
xor
adc
push
popf
pop
aam
inc
outsl
pop
iret
jmp
mov
adc
movsl
jg
lock
add
push
fs
out
xchg
or
into
push
dec
cld
stos
dec
add
je
popa
push
sub
fwait
add
cmp
and
cmc
rcrl
mov
sub
add
test
cmp
push
push
push
mov
or
enter
aam
inc
push
sub
pop
movsl
stos
stos
dec
fwait
adc
dec
sahf
insl
xor
jge
adc
jo
div
xor
call
std
lahf
xchg
push
ss
scas
pop
mov
sub
aad
gs
js
maxps
mov
pushf
mov
cs
push
mov
xchg
xchg
cld
iret
jnp
push
out
sub
imul
pop
push
xlat
popf
sub
repnz
js
out
cmp
push
jb
fldenv
cmp
cmpsl
mov
test
loopne
adcb
inc
lock
stos
aaa
mov
cmp
xor
ret
xchg
cli
fisttps
add
dec
xrelease
mov
adc
jbe
or
int
lea
mov
inc
push
or
xchg
or
fstpl
xor
inc
push
inc
sub
sbb
cmp
xorb
lret
pop
inc
add
push
out
cmpsl
sub
test
pusha
fmul
xchg
fcmove
icebp
pop
insl
lods
sbb
mov
mov
je
mov
scas
or
adc
pop
insb
ds
shrb
dec
ret
adc
testb
cli
push
repz
dec
and
imul
inc
outsl
push
mov
stc
push
ret
lods
add
xchg
and
aas
scas
ret
mov
adc
std
std
jne
enter
dec
cmp
push
dec
je
jl
scas
stos
mov
push
mov
pop
shr
sbbb
bound
add
lds
jp
daa
mov
jnp
out
imulb
test
or
jg
mov
call
mov
sub
cmp
pushf
xor
loope
cmpsl
shr
xchg
repz
xor
xchg
mov
loope
xor
xchg
dec
add
dec
cmp
je
mov
call
pop
hlt
sbb
aad
addr16
test
adc
sub
xor
scas
mov
scas
fs
sbb
pop
sub
je
ret
mov
test
add
shrb
lcall
repnz
adc
xor
lds
push
jae
cmp
adcl
add
mov
or
cli
fisubl
lret
daa
jns
cmpsl
loopne
imul
lock
cmp
pop
mov
adc
mov
mov
pop
sbb
nop
cmp
dec
out
lea
sub
sarl
inc
mov
insl
nop
and
cmpsb
out
loop
pop
dec
pop
jg
sub
sub
lret
or
fldenv
out
lahf
mulb
cli
stc
and
insl
in
add
cmpsl
sahf
jo
scas
cmpsb
adc
aad
shrl
pop
test
aaa
jp
xlat
pop
cld
pop
lds
cltd
lock
fs
int3
mov
or
cmp
movsl
push
add
mov
outsb
rcl
getsec
shrb
lods
fcomps
push
loop
dec
notl
cli
or
jmp
mov
cwtl
push
sahf
cld
jl
inc
and
jns
push
std
adc
push
sub
nop
xor
inc
inc
jb
and
fisubs
ds
call
lahf
les
xor
mov
movb
sub
popa
repnz
sahf
scas
arpl
xchg
enter
fiadds
cltd
push
push
imulb
jno
sbb
out
mov
sub
test
adc
add
mov
insl
fucomi
xchg
cmp
test
add
mov
cmpsl
sbb
cmp
arpl
cmp
adcb
js
shl
aas
jns
addr16
sub
cmpsl
cli
cmp
or
packsswb
divb
dec
or
ja
jmp
stc
int
in
and
mov
addr16
push
jl
or
add
fnstenv
xor
sahf
add
ljmp
fcomi
dec
dec
mov
jbe
mov
adc
js
or
cmpb
lods
je
insb
les
ljmp
cwtl
dec
lods
aaa
mov
mov
shrl
sbb
loop
leave
imul
mov
jne
xorb
test
push
and
mov
in
adc
lds
dec
or
into
mov
fdivr
call
xchg
xor
adc
cmpsb
push
shr
inc
xchg
xor
je
sahf
in
movsb
xchg
in
mov
mov
stc
jnp
dec
xor
mov
inc
cli
pop
dec
pop
add
aaa
outsb
ret
fistps
dec
shr
mov
popf
mov
cli
adcb
mov
insl
mov
repz
adc
sbb
les
call
imull
arpl
cli
dec
leave
mov
es
imul
dec
mov
and
cltd
lods
dec
cli
sub
and
cli
cmp
xor
std
js
loop
add
rorl
mov
sub
mov
and
cltd
call
hlt
scas
lcall
cmp
mov
clc
mulb
jge
bound
shrl
push
or
push
movsb
std
pop
or
jne
enter
inc
cmpsb
stos
es
into
js
lock
leave
call
fidivrs
ljmp
mov
pop
mov
pop
ret
xor
adc
jp
mov
mov
clc
mov
jmp
jnp
pop
aam
mov
pop
out
stos
aam
push
out
out
xor
xor
rol
xchg
mov
in
jo
or
or
leave
or
adc
push
xchg
dec
scas
lods
leave
into
adc
ja
xor
jb
subb
shlb
outsb
loop
shrb
repz
enter
aas
loope
insb
fdivl
dec
add
loop
cmp
or
cld
cmpsl
inc
mov
std
pop
push
cmp
xchg
push
ret
cmp
inc
faddl
aad
xor
loopne
inc
dec
nop
roll
les
xor
sbb
stc
daa
xor
fldcw
and
jmp
mov
push
decb
inc
xor
iret
out
add
jbe
repnz
in
jmp
outsl
arpl
cmp
lds
xlat
pop
lcall
adc
pop
and
xor
add
hlt
sub
cmpsl
pusha
xchg
in
movb
jns
push
dec
rcl
mov
pop
mov
xlat
and
or
mov
cld
fcoms
test
cs
aaa
nop
js
dec
inc
pop
addb
jbe
cmc
push
out
aas
mov
cwtl
push
cmpl
mov
jns
xor
pop
dec
mov
lods
push
cmp
adc
jg
sbb
cmp
mov
aam
out
mov
and
fdivl
lea
movsl
inc
sub
sbb
mov
cmc
xchg
hlt
ret
or
xor
mov
and
sarl
xor
aam
lcall
sbb
in
lahf
xchg
sub
xchg
leave
cli
testb
xchg
and
push
jns
repz
mov
xor
mov
xor
int3
out
pop
sbb
cmc
mov
xchg
and
je
xor
ret
mov
push
mov
cmp
inc
xchg
leave
dec
loope
xchg
or
imul
nop
stos
sub
jecxz
pop
sub
adc
outsl
pop
push
dec
scas
mov
pop
jns
lahf
imul
clc
mov
xor
in
add
enter
and
sub
aam
ljmp
mov
inc
mov
push
jne
rcr
fdivr
push
pop
mov
xchg
ljmp
jp
inc
fwait
jo
test
cmp
shlb
jbe
cmpsb
jp
dec
push
lea
dec
pusha
stos
call
fisttps
lods
push
sub
in
xchg
out
imul
in
push
mov
xor
jmp
push
lcall
cltd
repz
imull
stc
outsl
sub
gs
stc
shl
call
imul
fisubrs
movsl
and
in
fisubl
loope
cli
jns
sub
fiadds
inc
push
fisubrl
push
xchg
sbb
std
push
aad
mov
rol
add
cmp
mov
dec
sbb
push
shlb
pop
outsl
and
scas
jg
xchg
in
cmpsl
test
into
popa
ljmp
icebp
pop
and
cmp
fstpt
std
jno
fwait
mov
and
inc
rcll
out
add
jae
cmp
mov
decb
xchg
daa
sbb
test
call
andb
out
ja
leave
jmp
insl
sub
jle
repz
insb
jp
fs
jo
fdivrl
movsb
mov
adc
sub
loop
or
inc
fists
xlat
cli
popf
or
es
or
cwtl
mov
pop
mov
icebp
sub
or
adc
jo
fimuls
mov
enter
shlb
lea
xchg
aad
cmc
sbb
or
cmp
mov
cmp
or
ss
std
pushf
sbb
adc
jmp
ret
or
or
and
aad
iret
jg
repnz
addr16
pop
adc
mov
addb
sub
xchg
xor
xchg
jo
ss
pop
sbb
int
pop
push
adc
in
std
imul
push
out
adc
loope
mov
jne
stos
add
adc
jo
jle
mov
idivl
repnz
pop
jecxz
pop
mov
mov
ret
mov
movsl
js
mov
mov
cmp
dec
stos
mov
cwtl
lea
filds
add
and
int
dec
or
pop
cmp
ljmp
inc
insb
cs
incl
mov
mov
fistl
add
call
jg
movsl
push
stos
aaa
sbb
mov
repnz
mov
xchg
or
sub
inc
js
fsub
lock
add
sub
cld
mov
or
sbb
idivb
push
xchg
mov
mov
dec
pushf
xchg
mov
rcr
outsb
push
sub
mov
mov
ja
fwait
dec
cltd
and
lods
sub
mov
fstpl
and
into
mov
lds
cmpsb
sub
int3
data16
lahf
call
and
dec
fcoml
sbb
adc
adc
jns
out
dec
xchg
iret
nop
ss
jnp
and
or
cmp
pop
jae
inc
push
or
insb
sbb
and
cli
pop
popf
rol
cli
shl
inc
inc
scas
fidivs
aam
mov
mov
out
jg
pop
and
mov
ja
jecxz
xorl
pop
push
push
mov
cmp
out
add
ret
leave
in
movsb
fsub
cmp
lret
mov
push
lret
repnz
out
clc
xor
add
cs
mov
jmp
mov
pop
add
adcl
jp
push
cwtl
movsl
sbb
popf
fld
test
sbbl
and
jge
sahf
and
enter
jb
and
push
or
xor
ljmp
mov
xchg
jnp
add
clc
jb
js
sub
and
loopne
ret
pop
fsubrs
jno
scas
cld
out
aam
orl
push
adc
gs
out
in
lods
pop
out
outsb
ja
mov
test
and
in
pop
inc
jp
lcall
cwtl
nop
dec
pop
insl
arpl
ja
loope
mov
sub
outsl
sti
cmp
xchg
leave
mov
js
addb
sbb
test
xchg
ds
pop
mov
iret
ja
popf
aas
mov
jg
outsl
pop
sub
jg
push
nop
lea
or
xchg
mov
xchg
cli
jb
fsubrl
rorl
repnz
sub
sub
xchg
xchg
inc
fsts
sbb
cmc
inc
pop
xor
das
xor
xchg
outsl
push
sbbl
cltd
fcompl
fidivrs
cld
pop
sahf
lea
les
popf
ss
sub
push
xchg
adc
push
shrl
cli
mov
pop
sub
mov
and
xor
sbb
push
sti
sti
je
lock
xor
or
mov
inc
inc
out
inc
lods
sub
sbb
test
cmpsl
stc
lock
xchg
fs
movsb
shl
repz
xchg
jbe
and
cwtl
cmp
sti
or
rorb
leave
scas
dec
jo
cld
inc
pop
cmp
loopne
add
ja
lahf
xchg
mov
sub
jmp
pop
mov
mov
add
jp
pop
cmp
mov
jne
imul
mov
vxorps
pop
cmp
cmp
add
in
add
add
mov
popf
ret
xor
dec
arpl
stos
jl
cmp
dec
xorb
inc
cmpsb
mov
jmp
inc
add
movsl
jl
cmc
loop
lea
inc
jae
leave
push
mov
push
push
cmpsl
ret
mov
push
scas
iret
ret
popf
jbe
xchg
scas
movsb
push
pop
inc
mov
insl
sub
mov
int3
rorl
cltd
sahf
push
bound
mov
sbb
fsub
out
rcl
or
cmp
std
shll
movsb
push
lahf
sti
fwait
adc
xlat
jmp
pop
mov
mov
out
add
xor
jmp
fimuls
pop
fstpl
adc
pop
add
push
adc
call
enter
hlt
sbbb
xor
cwtl
mov
fs
mov
and
sub
scas
mov
sti
adc
js
sbb
xor
push
and
jle
stos
insb
mov
idivb
cs
inc
leave
lret
jb
cltd
ja
mov
clc
xchg
mov
xchg
mov
and
cli
mov
cwtl
push
mov
push
jns
iret
arpl
mov
rolb
notl
daa
mov
mov
int
test
aas
jbe
cld
and
jno
sbb
lea
das
cmc
enter
jle
je
enter
or
push
push
popl
add
jne
xor
insl
imul
sahf
ds
xlat
bound
movsb
repz
dec
jecxz
daa
dec
ret
mov
jns
adc
loope
xchg
ss
ds
sub
add
inc
es
ss
pop
lahf
xchg
mov
imul
out
pop
pop
jo
mov
cmp
sbb
imul
sarl
scas
inc
mov
addr16
daa
cli
test
cmp
clc
fildl
jnp
adc
sbb
push
aaa
mov
jge
xchg
nop
or
test
aas
loope
xor
int
hlt
notb
mov
lock
out
lods
xchg
push
cmp
cli
lock
sub
ret
mov
pop
sarl
lds
ror
add
jne
jmp
imul
mov
rcrb
jae
test
xlat
ret
inc
xchg
push
xor
cmc
or
cmp
dec
jg
shrb
ss
fmul
inc
push
and
lock
pop
xchg
push
xchg
adc
push
jb
jae
cmc
cmp
rol
xor
leave
cmp
out
pop
rclb
mov
dec
icebp
popa
adc
arpl
sbb
fbstp
mov
icebp
mov
test
cmp
mull
pop
out
or
xchg
aam
bound
leave
movsb
mov
mov
aaa
sahf
jo
push
add
filds
sub
pop
insb
imul
and
push
jge
repnz
dec
mov
xlat
cmp
add
lods
cs
pop
pop
ret
out
pop
in
pop
push
leave
div
push
repz
cmp
sbb
js
mov
es
lahf
pop
cld
int
jmp
xor
outsl
mov
jge
jge
lds
mov
xor
adc
into
add
jle
aas
or
stc
xchg
shrb
jno
mov
cmp
or
add
dec
jns
ret
mov
jns
stos
jo
mov
or
push
lret
cmpsb
cmc
jecxz
repnz
xchg
mov
add
sti
mov
add
push
dec
mov
fwait
aad
xchg
rclb
loope
sub
dec
and
jge
lcall
jge
test
lock
mov
insl
subl
xor
and
mov
adc
cmc
inc
push
pop
in
sub
pop
inc
inc
lret
cmpsb
cltd
leave
lcall
mov
cld
jle
xchg
fstpl
jecxz
lods
cmpb
xor
jbe
das
push
jmp
inc
adc
mov
push
adc
pop
jo
fdivrp
adc
aas
adc
lock
sbb
xchg
pop
test
out
jno
cmp
jl
pusha
xor
ljmp
js
xchg
xor
push
std
jbe
inc
xchg
cmp
mov
sub
push
mov
inc
stos
mov
in
lock
push
sbb
pop
push
mov
arpl
shr
aaa
pusha
sbb
nop
and
idivb
stos
stos
lret
or
jb
adc
xchg
push
and
xor
mov
insl
mov
scas
adcl
sbb
jns
es
and
lret
mov
in
insb
fidivrs
cs
mov
fcom
dec
insb
mov
jp
cmpsb
nop
hlt
mov
jle
outsl
clc
ljmp
aam
scas
ret
aad
dec
outsl
add
sub
pop
fsubr
pop
ret
dec
jo
cmp
sub
test
lds
test
out
inc
ficoms
adc
mov
mov
push
movsb
xlat
fwait
popf
cld
aas
test
mov
inc
lahf
push
popf
push
push
sbb
shll
loopne
inc
stos
movsl
add
add
mov
popa
mov
lock
add
icebp
cmp
mov
pushf
nop
or
incb
cmc
mov
jne
mov
dec
adc
iret
mov
mov
jne
push
aam
ds
int
jnp
cs
cwtl
movsl
jnp
fldcw
or
std
sub
dec
movsl
cmp
in
neg
fdivrl
push
mov
fiadds
push
out
lcall
sub
lret
clc
xchg
orl
lcall
dec
icebp
cmpsl
ss
in
dec
push
jns
xchg
sbb
insb
xor
cmp
or
aaa
or
mov
insb
pop
gs
jecxz
pop
lea
insl
pop
xor
les
cmp
in
cmp
sbb
or
adc
sbb
sub
jb
mov
or
push
sbb
add
sub
mov
popa
mov
out
mov
xchg
fdivrp
hlt
out
int
movsl
outsl
fst
dec
mov
cmp
ret
sahf
in
mov
xor
pop
push
dec
repnz
lcall
sub
push
cmp
push
push
inc
outsl
addr16
mov
cwtl
mov
repnz
push
dec
xchg
pop
add
pop
add
test
out
cltd
or
xchg
andb
test
mov
lods
testl
adc
jb
scas
cmp
lret
xorb
or
cltd
xor
jnp
xchg
in
mov
aas
and
and
insb
inc
inc
mov
inc
push
sbbb
rolb
hlt
stos
mov
sti
push
xorb
cltd
or
xchg
inc
repz
mov
into
lcall
mov
push
pop
mov
inc
daa
cli
inc
jbe
dec
pop
lock
scas
jg
dec
cmc
add
jns
jg
jo
pop
f2xm1
jmp
cmp
pop
add
add
leave
mov
sub
sbb
ficompl
xor
cs
cs
xor
daa
mov
jmp
mov
xor
adc
inc
push
push
cmp
cs
das
dec
mov
negl
push
xchg
lock
loop
cmpb
mov
loope
repz
add
or
mov
adc
jmp
mov
mov
xor
cmc
inc
loope
dec
push
dec
push
pushl
and
or
int
nop
xor
orb
test
jge
ja
xor
mov
mov
pop
fnstsw
pop
repz
adcb
jb
js
adcl
mov
stc
test
sbb
mov
mov
or
or
push
stc
cmp
js
push
nop
cmp
and
mov
cmp
sbb
cwtl
inc
xchg
mov
adc
adc
xor
add
xchg
mov
fwait
xchg
mov
lods
setae
push
jmp
lock
lahf
sar
cs
decb
sub
inc
and
das
lea
adc
repnz
lret
int
fst
std
loope
notb
stos
jge
jge
stos
inc
mov
fs
add
mov
lods
sbb
shll
ret
pop
jae
xor
jp
inc
shll
call
mov
push
jnp
bound
mov
sbb
push
xor
pop
jg
in
test
push
cmp
xchg
test
fidivrs
inc
outsl
pop
addl
pop
mov
ljmp
jne
shlb
push
pop
addr16
fcomps
mov
loope
hlt
je
mov
mov
adc
xchg
mov
jmp
xchg
xchg
or
sub
fsts
sub
add
cmp
enter
sub
mov
jns
dec
inc
add
sub
ja
jns
add
popa
in
push
jmp
mov
inc
xchg
rcrl
cltd
sbb
mov
xchg
mov
cmpsl
cs
sbb
scas
mov
dec
ljmp
aaa
xchg
loope,pn
ds
dec
lret
js
cmp
pop
stos
test
in
jae
cmc
mov
adc
mov
addl
xchg
ret
data16
cmp
mov
add
sahf
push
pushf
jns
sub
movsb
sbb
and
add
push
ljmp
addr16
rcll
push
inc
nop
fwait
cmc
mov
mov
test
inc
mov
fsub
cmc
jno
jno
adc
jae
inc
leave
xchg
cs
push
push
and
mov
lea
push
fsubrl
sti
push
scas
outsb
stc
push
add
rcr
jb
adcb
jp
aaa
xchg
movsl
inc
pop
mov
mov
xchg
sbb
add
dec
dec
cmp
push
xorb
mov
incl
push
fdivs
mov
test
inc
cmpsb
add
push
push
pop
gs
xchg
roll
cmpsl
and
cmp
push
mov
out
pop
movsl
movsl
pop
xorb
adc
mov
sub
pop
mov
inc
mov
adc
adc
fsubrs
mov
or
andb
loop
repz
and
faddl
inc
sub
imul
jecxz
cltd
xor
xor
add
and
add
cmpsb
bound
or
rcrb
sbb
sbb
mov
add
scas
cli
mov
fs
cmp
sbb
cmp
sbb
mov
xor
cmp
xchg
in
or
daa
les
sbb
mov
xchg
roll
mov
inc
add
adc
pop
hlt
out
lea
outsl
orb
push
ss
adc
dec
int
add
outsl
adc
cmp
dec
loopne
mov
jno
sub
cltd
ret
movsl
daa
push
or
mov
xchg
sub
or
pushf
ss
or
xchg
dec
xchg
cmpl
or
repnz
fs
push
test
cld
aam
sbb
inc
dec
ja
sbb
into
fisttpll
jmp
stos
cmc
mov
pop
fstpl
push
arpl
mov
movsb
xor
push
xchg
jno
iret
stc
sub
nop
xchg
aad
fistl
sbb
add
jno
jne
or
imul
adc
fwait
lret
mov
cli
insl
pop
mov
stos
insb
mov
jp
cmpsl
cmp
push
push
icebp
inc
icebp
pop
xchg
fisttpll
pusha
ss
cmpsb
lds
rcr
jbe
push
loop
js
push
fstpt
push
or
in
pop
inc
arpl
push
jecxz
push
mov
push
push
adc
xchg
jns
xchg
ficompl
int
es
pop
sbb
out
mov
dec
mov
jb
cmp
jg
movsl
add
aaa
ret
cltd
mov
jae
data16
xchg
or
je
push
pop
xor
cmpl
out
add
inc
mov
xchg
fdivs
sub
sbb
dec
pushf
pop
dec
aam
sbb
sub
jo
test
push
outsb
jg
or
pop
fcomi
jle
lods
pop
inc
sbb
mov
nop
je
addl
sbb
xor
and
movsl
jnp
sbb
stos
or
mov
imul
lea
lret
push
push
mov
sbb
nop
movsb
pop
pop
lds
fdivs
inc
adc
popf
push
shr
or
std
push
lds
or
jae
andl
aam
lahf
add
pop
stos
clc
mov
mov
xchg
subl
in
aam
sbb
scas
scas
mov
ja
mov
add
dec
sbb
inc
scas
push
add
jmp
xchg
cmp
ljmp
mov
or
jle
mov
and
repnz
ss
adc
fwait
mov
dec
dec
pushf
sbb
push
js
gs
leave
stos
pop
loop
jbe
inc
scas
mov
adcl
jbe
adc
out
cwtl
or
sub
sub
and
mov
cwtl
cs
lret
lret
int
push
xchg
and
mov
sarb
dec
xor
scas
ss
add
xchg
stos
mov
cli
mov
fsubrs
sbb
jmp
shll
into
jnp
dec
mov
jecxz
aaa
leave
shr
imul
jno
xchg
ret
cs
arpl
stos
or
adc
push
cld
outsb
call
repz
cmp
arpl
mov
or
decl
jmp
lahf
inc
dec
inc
sbb
stc
mov
dec
mov
data16
enter
xchg
push
fs
mov
ja
int
xor
adc
fstpl
mov
out
jl
aam
push
mov
ja
cmp
mov
loope
je
mov
pusha
push
icebp
adc
mov
or
pop
cmpsl
jne
daa
jge
loop
or
sbb
add
in
mov
cmp
xor
shrl
jl
xchg
mov
mov
adc
inc
std
mov
popa
xlat
in
call
and
mov
pop
cmp
lahf
negl
lret
movsb
test
stos
and
mov
insb
sub
fidivrs
xchg
jne
mov
cmp
jnp
add
daa
push
jne
mov
adc
inc
test
aas
in
jo
or
jge
inc
gs
rcll
sahf
aad
pop
push
int3
cwtl
inc
lahf
push
jnp
fs
and
push
xchg
std
pop
insl
inc
in
das
nop
and
nop
inc
mov
dec
fs
sti
dec
lahf
jnp
sub
scas
dec
outsb
aaa
lret
stos
dec
push
popf
mov
in
stc
jmp
outsl
mov
jle
lea
fstpl
or
dec
aam
jbe
push
repz
imul
and
icebp
mov
mov
in
insb
mov
lret
test
mov
loope
scas
repz
xor
lods
sub
pop
inc
into
loopne
inc
jecxz
xchg
les
sbb
aas
push
seta
mov
adc
mov
sbbl
iret
popf
dec
hlt
fsubr
out
dec
pushf
xchg
popl
mov
pusha
inc
dec
cmp
xor
setne
mov
or
pop
sbb
jbe
movl
shrb
xchg
into
xor
shrl
into
fwait
out
orb
adc
loop
push
rolb
rcrb
or
mov
mov
inc
mull
mov
imul
add
mov
ljmp
cmpsl
aaa
xor
cs
ljmp
cli
mov
outsb
mov
mov
jmp
call
dec
inc
insl
add
paddusb
sub
test
push
imul
fdivrs
aad
icebp
jge
out
gs
jnp
cld
sbb
xor
cmp
popa
inc
out
inc
xchg
cmpb
rolb
xchg
or
sbb
insb
push
cltd
xlat
sti
mov
lret
jo
pop
inc
push
test
jae
inc
je
push
jne
inc
xchg
stos
or
push
inc
mov
adc
fisubl
push
int
and
sub
and
xchg
jns
and
hlt
loop
std
test
daa
out
or
or
mov
arpl
xor
mov
ret
dec
xchg
ret
sbb
andb
js
stos
test
adcl
call
push
cmp
test
pop
bound
or
xchg
add
negl
add
pop
hlt
sbb
adc
or
out
and
and
or
insb
pop
ror
sbb
insb
lret
dec
clc
mov
in
mov
mov
mov
fidivl
nop
push
xchg
std
mov
push
cmp
movsb
dec
inc
ret
into
dec
int3
add
adc
addr16
pop
test
or
mov
add
add
and
aas
mov
push
test
in
repz
ljmp
cld
mov
xor
lret
outsb
mov
mov
inc
mov
xchg
adc
lock
mov
inc
xchg
inc
and
in
sbb
xlat
xchg
out
fdivrs
pop
jg
iret
fs
outsb
push
rcll
in
fwait
mov
jns
or
pop
test
stos
lret
rcl
loope
or
pop
jp
scas
mov
pop
add
scas
add
sub
data16
mov
add
push
adc
aas
xchg
xor
dec
aad
dec
out
cli
lock
addb
shl
fiadds
and
xor
pop
test
sti
inc
pop
pop
loope
fwait
adc
xchg
xor
jnp
pop
test
ret
movsb
or
dec
fsubrl
push
xor
inc
stos
xchg
mov
xchg
inc
adc
jp
das
pop
cmp
xchg
adc
stos
fidivl
jae
inc
sub
punpckldq
insl
pop
pop
push
out
jle
cmp
add
addr16
mov
xor
inc
cli
testb
sti
pop
xchg
mov
xchg
fidivl
pop
inc
inc
xor
fs
jge
sbb
lods
xor
push
xor
test
movsb
push
cmpl
xor
pop
pop
test
ret
inc
dec
adc
jbe
add
rolb
mov
movsl
mov
push
mov
jo
push
and
sub
dec
jns
pop
aad
cmp
out
push
sbb
das
push
xor
sbb
out
fcoml
jp
test
and
imul
dec
ror
sahf
xchg
lods
popa
gs
add
mov
sbb
fcoms
pop
jae
pop
repnz
add
testl
add
rdpmc
pop
fcmove
shlb
xor
aaa
mov
xlat
iret
jmp
loopne
inc
or
jne
dec
adc
or
bound
in
lea
out
leave
dec
dec
push
jmp
lret
cmpsl
xchg
mov
stos
push
shlb
lret
popf
les
out
lock
adc
in
xchg
push
add
push
fisttps
xorb
jne
jl
xchg
test
mov
xor
les
push
jno
sub
sbb
test
inc
ja
out
sbb
lods
mov
and
sbb
cmpsl
lods
nop
adc
cmpb
test
cmp
pusha
mov
push
jnp
inc
mov
inc
xchg
push
pop
cmp
fildl
sbb
cmp
xchg
or
inc
insb
pop
and
leave
xchg
mov
dec
mov
add
shlb
ljmp
int3
add
lds
in
pop
sub
mov
cli
loope
loope
rcr
cmp
cmp
pop
inc
lret
mov
cmp
mov
xchg
or
mov
ficompl
test
adc
add
movsb
xchg
insl
lcall
clc
sti
or
stc
push
aaa
and
push
stc
mov
push
outsb
xchg
fwait
xchg
dec
jp
idivl
pop
dec
inc
lea
xor
test
das
test
push
movsb
scas
call
int
insb
mov
addr16
push
and
aas
xor
adc
pop
mov
jno
sub
imul
xchg
xchg
inc
mov
pop
icebp
push
add
ret
cltd
in
jae
scas
aaa
out
out
stc
push
inc
xchg
lret
bound
inc
cmp
sub
inc
dec
sti
xor
xchg
pop
dec
movl
push
add
jns
cmc
mov
sbb
mov
adc
es
test
clc
dec
sub
xor
rolb
clc
es
add
test
subb
std
fldenv
in
push
ss
xor
push
scas
adc
jo
sbb
adc
fcomps
cmp
push
pushf
js
cwtl
bound
push
ret
xor
mov
inc
mov
sbbb
add
adc
jno
jecxz
popa
adc
xor
outsb
fst
add
or
push
aad
cmp
push
in
ljmp
mov
adc
ds
mov
and
add
sbb
sub
repz
pop
loope
push
inc
or
jmp
jo
repnz
lea
pop
into
cmpsb
hlt
jbe
jb
test
jns
je
insb
lret
cmp
enter
rcrb
outsb
int3
gs
popf
inc
scas
stos
dec
lods
aas
push
or
sub
push
mov
or
sbb
out
scas
in
shlb
lds
mov
cmp
in
cmp
sahf
testl
stos
and
pop
ds
mov
cmpb
int3
out
dec
pcmpeqw
stos
sub
incb
push
adc
movl
stc
sub
js
inc
jg
push
test
and
add
jge
sub
pop
jge
push
lea
out
shlb
stc
inc
lcall
cmpb
mulb
adc
cmp
pop
or
cltd
mov
sahf
imul
push
fst
out
sbb
int3
fsubl
mov
insb
shr
imul
mov
not
jne
andl
ret
push
out
aad
xchg
lock
and
out
pop
enter
jmp
fwait
sarb
mov
sbb
inc
rorb
cmpsl
jns
pop
aaa
dec
stc
movsl
cmpsl
jge
popf
hlt
dec
add
xchg
jb
iret
add
les
xchg
xchg
push
repnz
mov
dec
ret
and
push
repz
mulb
mov
pop
out
fwait
ds
jle
lret
mov
stos
arpl
sub
call
mov
lods
hlt
adc
mov
mov
movsb
or
das
cld
in
mov
in
or
cmpsb
pop
dec
adc
je
push
cmp
sti
sub
add
cmp
cld
cmp
pop
or
cmp
loope
pop
add
aam
pop
xchg
arpl
in
inc
les
fwait
xor
aad
push
aas
out
jo
mov
aaa
fwait
add
pop
shll
mov
jmp
iret
aaa
cwtl
aam
pop
outsl
cli
mov
push
loopne
fistpl
jge
shrb
jb
nop
add
cli
mov
test
inc
and
mov
cmpsb
mov
clc
loop
ret
cltd
jle
js
sub
cltd
mov
cmp
mov
imul
mov
call
and
out
mov
xchg
xchg
cwtl
jle
shrb
out
pop
lds
push
push
insl
andb
mov
xchg
insl
rcll
dec
aas
push
xor
push
and
and
sub
xor
test
iret
and
outsl
dec
jno
hlt
adc
lret
push
dec
popa
shrb
adc
or
mov
mov
das
push
push
add
mov
adc
stos
pop
bound
dec
daa
mov
xchg
push
lahf
and
lds
das
cwtl
adcl
inc
sti
hlt
inc
cld
jns
jmp
sub
xor
mov
cmpsb
aaa
mov
dec
push
fcoml
and
adc
jmp
test
fucom
add
lods
push
or
pop
mov
mov
cltd
mov
loop
jp
cmp
aad
mov
jmp
xchg
sbb
jb
mov
stos
xchg
fmuls
cli
fs
data16
and
movsb
call
subb
das
or
arpl
mov
movsl
repnz
loopne
sti
movb
js
movups
lock
xchg
mov
add
fisubl
dec
into
mov
and
pushf
in
orl
in
adc
in
leave
cwtl
loope
add
popa
xchg
call
shlb
pushf
cmp
imul
or
cmp
fwait
xor
jno
cmp
fucomp
lods
or
fstpt
adc
or
test
sbb
imul
stc
sbb
stos
xor
push
leave
jg
and
mov
out
xor
in
pop
mov
adc
aas
sub
add
andb
out
mov
sti
xchg
dec
dec
ss
das
je
sbb
xchg
dec
lret
stos
sahf
rcrb
ret
mov
push
push
scas
in
mov
and
cmp
and
lcall
rorl
aam
outsb
out
and
jo
std
sbb
shl
leave
decl
hlt
or
les
dec
cmp
clc
cli
out
in
ds
mov
fnstenv
out
in
in
imul
ja
add
lcall
inc
data16
pop
int3
fdivrs
and
ss
xchg
push
add
das
push
push
and
mov
and
adc
lcall
scas
push
in
rorb
hlt
in
xor
xlat
sbb
in
pop
popf
ja
fwait
lea
sub
mov
sbb
cli
xchg
or
sbb
clc
jge
push
add
push
ljmp
lcall
popf
mov
add
lcall
fwait
jmp
sbb
push
loope
dec
or
sbb
fldl
fildl
dec
jge
adc
sbb
mov
pcmpeqb
mov
addr16
call
lcall
bt
xor
push
sti
stos
test
pop
pop
lock
xor
rcll
xchg
adc
jo
push
cs
ljmp
shll
push
cmp
lea
cmp
mov
add
adc
cmp
adc
cmp
fucomi
ja
aas
xor
pop
mov
cwtl
daa
test
mov
xor
call
mov
notl
shll
mov
jecxz
or
push
push
dec
idiv
dec
mov
imul
ljmp
es
les
jne
pusha
ss
not
push
jb
test
clc
jae
test
addr16
push
mov
inc
or
hlt
cmpsb
push
mov
jns
ret
fst
aam
sub
or
insl
aad
daa
rcrb
clc
push
jo
lods
cmpsl
iret
cmp
sub
and
mov
or
cmp
dec
push
loope
pop
icebp
fwait
lahf
pop
test
cmpsb
xor
jmp
inc
adc
mov
add
dec
notb
push
fwait
pusha
repnz
mov
daa
or
xor
sar
inc
mov
pop
add
sti
mov
jle
pop
sti
xchg
stos
fbstp
adc
and
mov
dec
dec
dec
or
xor
push
xor
or
pop
xchg
dec
adcl
out
xchg
mov
mov
fisubs
clc
mov
mov
mov
das
jg
lock
in
mov
xchg
scas
jp
sub
shlb
ss
mov
orb
xchg
jl
dec
and
loopne
addr16
or
nop
lods
stos
pop
subb
push
mov
cmpsb
adc
or
cmp
daa
ffreep
loop
imul
int3
rolb
outsl
fdivs
rcr
inc
shr
adc
xor
mov
scas
and
push
jb
mov
loope
and
fisubrs
add
iret
or
or
push
pavgb
test
adc
icebp
dec
jp
add
cmpsl
repz
mov
jmp
xor
add
lcall
into
mov
inc
imul
pusha
mov
sti
neg
pusha
sub
rclb
sub
push
cwtl
cwtl
xchg
pop
push
aaa
ret
movsl
sbb
popf
sahf
cmp
add
loope
cmp
ds
scas
jae
jae
and
pop
lret
pusha
dec
sub
mov
add
insb
fisubs
movl
lods
lods
sbb
jae
push
das
xchg
pmullw
add
lahf
mov
pop
popf
jge
push
mov
mov
pop
out
xchg
pop
xchg
inc
jns
push
jnp
push
or
jno
insl
mov
push
mov
stos
mov
sub
int3
sub
stc
repnz
push
int
pop
fldenv
dec
pusha
mov
into
fdivrl
pop
fnsave
fwait
cmpsb
push
mov
repnz
pop
jmp
stos
loopne
xor
in
js
sbb
xchg
or
jne
sbb
es
pop
and
add
sub
stc
push
push
iret
les
call
mov
dec
fwait
jecxz
adc
xchg
dec
ja
scas
cmp
jl
shlb
fwait
dec
imul
mov
outsl
std
rol
sbb
xor
aad
or
ret
xchg
lret
push
xchg
aaa
adc
xchg
stc
filds
pop
leave
xor
loop
inc
or
add
mov
pop
adc
and
dec
rol
mov
mov
add
push
pushf
pop
insb
cli
jmp
in
call
test
aam
add
fisttpll
fadd
push
out
sub
push
icebp
test
test
inc
inc
sub
test
sbb
adc
and
adcb
or
or
test
jno
mov
xor
dec
or
popa
mov
xor
or
or
or
cld
or
mov
pop
xchg
movsb
loope
push
mov
repnz
xor
sbb
push
add
adc
insb
dec
xchg
fstpt
push
mov
test
push
call
stos
data16
mov
adc
or
lea
cltd
pop
and
sbb
std
sahf
inc
mov
push
lods
pop
in
imul
scas
fidivrl
add
scas
dec
std
sbb
jns
pop
sbb
push
out
dec
jno
inc
sar
mov
in
cmp
mov
cmp
xor
cmp
mov
in
adc
jp
test
aas
cli
aad
sub
mov
call
mov
insb
and
push
dec
sub
push
push
sti
dec
jne
lcall
or
fdivrs
xchg
mov
xor
stc
iret
xchg
scas
imul
mov
jns
sahf
xchg
das
push
test
jno
aaa
rcrb
pushw
mov
js
sub
fcomps
sbb
hlt
sbb
or
push
xchg
mov
clc
xchg
push
arpl
cmp
daa
in
jl
das
dec
lods
xor
pop
push
movsl
sub
and
mov
and
push
xchg
jle
mov
scas
lret
mov
lahf
xchg
ret
mov
incb
sub
sub
movsl
mov
out
mov
sbb
jmp
mov
test
test
and
sbb
insb
sub
adc
cmp
mov
cmp
push
insl
xor
push
mov
push
mov
std
dec
out
dec
mov
sbb
lret
xchg
es
jb
js
out
fstl
jmp
ja
dec
inc
fs
mov
add
cmp
pushf
mov
pop
add
jge
int3
add
inc
xor
insl
cmp
outsb
sub
stc
aam
adc
jne
aas
mov
mov
cli
xchg
stos
add
lret
dec
out
adc
inc
mov
test
pop
mov
aas
mov
or
in
shlb
mov
xchg
movsb
es
xchg
hlt
adc
call
pop
nop
in
in
dec
sbb
adc
mov
mov
add
mov
pop
jb
sub
jns
add
jno
mov
inc
insb
jecxz
clc
je
icebp
add
scas
dec
je
inc
or
and
in
ret
lock
sbb
aas
lret
sub
insl
jne
addr16
cwtl
subb
inc
es
fimull
or
scas
dec
and
into
push
lahf
add
test
out
mov
pop
mov
jg
xchg
int
or
adc
test
loope
insb
cmp
xor
dec
rolb
xchg
jmp
push
cmc
mov
dec
loop
pop
jno
pop
das
movsb
cld
hlt
push
push
jbe
inc
push
add
adc
lds
call
push
or
int
xchg
scas
jmp
cmp
dec
mov
mov
popf
sarl
adc
fcmovb
pop
mov
inc
and
sub
push
lods
clc
push
xchg
imul
lret
lcall
pop
shll
ljmp
pop
push
xor
mov
shll
shrb
je
pop
mov
or
push
sbb
jnp
push
jo
fsub
pop
bound
mov
sbb
add
cld
xor
out
stos
int
ret
mov
xchg
inc
addr16
and
scas
lds
lock
sub
jbe
mov
daa
jb
fs
das
or
or
or
ljmp
fsubrp
ret
inc
xchg
aas
jo
jmp
cmp
mov
pusha
fs
movsl
or
fistl
aas
pop
sub
int
lret
cli
or
fisubs
cmpsl
mov
cmp
cmp
ja
in
mov
mov
rclb
push
jne
in
inc
outsl
adc
cmp
jbe
mov
push
js
pop
cli
ljmp
in
pop
loope
dec
clc
out
sub
mov
pop
push
stos
dec
lock
lods
sub
in
mov
xlat
mov
add
sbb
sub
add
mov
jecxz
sbb
push
xor
popa
je
dec
mov
aad
in
xor
adcl
push
bnd
popa
stos
pop
xchg
cmp
cmp
and
lods
and
mov
inc
ljmp
fcompl
loope
shrl
push
andb
cmp
loope
sbb
push
adc
xorb
stos
out
andb
xchg
jb
in
jmp
push
mov
shlb
aad
pop
fbstp
lods
fisttpll
sub
jmp
push
pop
in
push
and
push
mov
pop
pusha
dec
add
leave
sub
call
jle
push
xchg
mov
xchg
push
dec
mov
fimuls
mov
push
cmpsb
pmaxub
jo
mov
mov
and
daa
stos
pop
fcoml
arpl
orb
adc
gs
mov
js
xor
xchg
lods
out
adc
mov
mov
mov
push
fisubrs
mov
cmp
add
add
adc
mov
nop
repnz
scas
filds
fwait
push
fisttps
pop
sub
in
outsb
dec
mov
xor
jb
push
add
roll
and
push
arpl
mov
mov
iret
clc
push
rsm
and
stos
pop
jmp
adc
in
jnp
inc
xchg
inc
add
test
and
lret
pop
insl
push
xor
add
xchg
sub
push
xchg
in
std
std
and
test
xchg
jo
roll
les
cmp
inc
xor
int3
iret
xchg
sar
arpl
sbb
scas
or
mov
iret
loope
push
and
sub
xchg
iret
ljmp
rol
or
cltd
jne
xchg
lods
addr16
clc
cld
ds
das
add
mov
add
mov
rolb
mov
push
jb
cmpsl
sub
frstor
xor
sar
aad
test
fwait
cmp
hlt
push
test
jne
inc
fnstenv
adc
mov
ret
push
or
lock
fstps
dec
sub
push
jb
lea
ds
in
adc
dec
lock
lock
mov
jo
and
add
xor
mov
inc
xor
fcmovb
pop
orb
bound
mov
ljmp
les
sub
sub
ds
stos
das
sub
cmc
xor
sbbl
adc
rcr
or
std
pop
shlb
xchg
subb
jecxz
pop
int3
addr16
cmp
fisubs
add
aad
test
mov
in
in
test
adc
lcall
movsl
mov
sub
dec
sub
sub
test
divl
scas
push
test
pop
pop
or
sbb
push
lods
ja
decl
call
cmp
jbe
or
cmp
movsb
xchg
cmp
shll
ljmp
push
xchg
xchg
arpl
mov
lock
aad
mov
jae
adc
push
aas
popa
out
lcall
mov
push
jne
lds
adc
in
xor
mov
fisubl
xchg
lods
hlt
push
pop
pop
sub
inc
movb
iret
mov
jp
gs
clc
xchg
jmp
jae
dec
mov
or
adc
data16
das
push
lret
fisttpl
mov
or
add
dec
out
and
or
push
in
mov
sbb
lods
lret
jns
and
loope
dec
mov
cmpsl
fs
call
pop
movsb
in
mov
jp
inc
add
cwtl
les
pop
jmp
jae
ja
ret
dec
cli
and
add
xchg
shlb
orb
sti
mov
ficomps
cmpsl
xchg
mulb
jp
cwtl
sub
pop
jecxz
fdivp
dec
xrelease
mov
hlt
mov
fwait
psraw
aam
loop
sbb
addb
adc
sub
adc
push
mov
xor
inc
test
sbb
cmpsb
lock
inc
sbb
sub
jbe
add
movsb
sub
sbb
mov
aaa
scas
xor
mov
jns
sbb
aam
pop
push
mov
adc
pushf
mov
sub
ja
add
sbb
jae
mov
cmc
enter
pop
in
sti
arpl
xchg
call
sbb
fstps
test
outsb
mov
dec
call
xor
xor
ljmp
sub
popa
jmp
push
jns
icebp
xor
cmp
xor
xor
sub
ja
jno
repz
into
mov
ror
jp
mov
jno
stc
pusha
adc
fstp
iret
inc
call
test
arpl
popa
std
jl
icebp
mov
ficompl
push
pop
popa
dec
push
jo
mov
test
and
addr16
pop
ja
mov
addr16
push
xor
push
xor
xor
movsb
addr16
cmp
add
ss
and
cld
xor
inc
cli
leave
cwtl
in
cs
dec
mov
xchg
xor
ret
test
adc
call
jg
outsl
fbstp
mov
push
test
sti
sbb
mov
loope
push
mov
dec
mov
fldenv
and
imul
leave
dec
mov
cmp
mov
push
repnz
pushf
test
cltd
jg
mov
cli
fxch
sub
push
inc
int3
jp
xchg
mov
stos
mov
or
movsb
cltd
inc
and
inc
enter
repnz
int
jl
cmp
fmulp
mov
and
mov
ret
or
insb
testl
bnd
dec
jmp
pop
sti
mov
ficoml
in
pop
ficoms
insb
cmp
shlb
sti
jg
xchg
imul
ljmp
jmp
mull
inc
jp
jp
in
jae
shl
test
out
aaa
int
add
xor
and
dec
pusha
dec
or
mov
pop
and
popa
pop
inc
lahf
mov
outsl
push
andb
enter
push
inc
bswap
mov
dec
xchg
imul
and
mov
sbb
imul
push
adc
push
xchg
js
mov
repnz
push
ljmp
jp
mov
dec
xchg
cmova
gs
aad
sbb
xchg
imul
adc
aam
and
add
mov
sbb
pop
pop
cmp
daa
jge
out
in
xor
out
add
std
shlb
jno
mov
adc
outsl
xor
lock
test
xchg
mov
dec
daa
out
jnp
jo
iret
aam
in
push
clc
cmp
sub
or
or
jbe
cmp
popa
dec
xchg
ss
push
xchg
imul
dec
mov
cwtl
mov
cmp
adc
pop
push
shrb
fisubrl
xchg
jbe
iret
xor
fstpl
mull
filds
call
adc
mov
out
xchg
push
lea
shlb
in
sbb
fisttps
xchg
jmp
xor
and
iret
jbe
pop
jg
or
sbb
cmp
adc
or
inc
das
dec
pop
pop
test
jl
pop
add
jl
in
dec
fiadds
lods
jb
ret
aas
adc
jecxz
in
jnp
pushf
inc
mov
and
add
cwtl
xlat
push
mov
gs
mov
jl
out
add
jae
out
and
lret
dec
out
push
test
mov
push
sbb
mov
sbb
out
push
sub
rol
push
ret
enter
fcompl
loop
inc
xchg
jae
dec
sbb
lcall
inc
rcl
leave
orb
lcall
scas
mov
int
aaa
pop
enter
push
sbb
push
out
ret
ja
cmpl
mov
ja
push
xor
out
fcmovu
andb
into
xor
jl
mov
aad
pop
stc
pop
add
inc
rclb
mov
dec
fisubrs
mov
dec
cmp
rolb
les
in
cmp
fcmove
js
or
dec
jp
pop
mov
lret
jl
xor
pop
mov
dec
and
jnp
adc
cmpsl
push
mov
xchg
push
jo
jle
push
lods
outsb
ss
cld
mov
stc
push
arpl
lock
ret
pop
fstl
loopne
addr16
pop
mov
popa
lea
xchg
out
inc
add
cmpsb
fmull
xor
or
adc
xor
cld
jb
lods
imul
out
mov
test
shll
les
in
stos
aas
popa
lods
jb
mov
mov
test
add
in
pop
je
mov
mov
or
jl
rcr
lods
popa
push
or
jne
dec
dec
cld
and
insb
insb
call
and
cmp
imulb
daa
mov
dec
call
sub
das
int
bound
or
lret
dec
mov
push
lds
mov
inc
sbb
fucomi
jle
ja
jns
into
leave
into
mov
pop
adc
lret
je
dec
sbb
mov
push
fwait
and
add
jmp
inc
jae
outsl
ja
sub
inc
and
imulb
or
ja
or
ss
mov
outsb
inc
push
adc
fmull
sbb
pop
xorb
jb
jmp
or
pop
sub
xor
int3
xchg
sub
adc
lahf
pop
cmp
and
dec
pop
inc
pop
out
call
lret
ficomps
xchg
sub
ja
cmp
push
jb
adcl
loop
insl
jge
push
jp
xlat
dec
xchg
lock
mov
filds
repz
insl
fcompl
into
lds
xor
adc
cld
std
fldl2t
mov
mov
test
inc
stos
inc
std
inc
aam
fisubrs
add
add
push
mov
movsl
test
in
sbb
dec
inc
xor
jmp
mov
or
js
xchg
adc
das
pop
and
call
out
mov
clc
jbe
jmp
cld
and
jnp
jns
push
aas
stos
mov
testb
ficompl
fldcw
cld
jp
test
xorl
paddq
rorb
dec
test
lret
pop
fs
mov
pcmpeqb
out
inc
andb
maskmovq
testl
mov
dec
jo
push
insb
cmp
imul
lods
out
mov
adc
addr16
arpl
gs
pop
arpl
add
repz
incb
inc
xchg
rcrb
sub
and
fmull
loopne
insb
jge
movntps
and
scas
js
bound
movsb
mov
mov
dec
cmp
push
sub
mov
clc
sbb
mov
ja
dec
jns
lret
mov
popa
add
arpl
jmp
popf
gs
sbbb
dec
mov
das
movl
pop
movsb
shrb
repz
push
pop
rolb
xlat
pop
lcall
jecxz
mov
lret
jnp
fs
shll
push
dec
sub
add
pop
les
sub
mov
scas
sub
das
jl
fists
pop
lcall
sbb
xchg
dec
les
and
push
mov
inc
mov
jb
cmp
jmp
sbb
xchg
je
xchg
cld
in
cmpsb
inc
out
pushf
test
fcompl
outsl
loope
sar
int
sub
outsl
sbb
icebp
test
in
adc
dec
xor
add
and
dec
lret
and
pusha
sbb
push
js
test
cmp
popl
cmp
mov
movsl
and
pop
pop
js
in
dec
fmuls
pop
imul
into
test
ret
push
dec
jnp
sub
push
repnz
gs
cwtl
inc
sbb
aad
popa
arpl
mov
loop
call
inc
imul
arpl
xchg
xor
sub
idivb
pushf
lea
neg
dec
inc
jecxz
mov
mov
mov
fsubrp
xchg
push
cmp
jge
or
adc
inc
sbb
pop
inc
push
nop
out
fildll
jge
push
or
jb
daa
addr16
inc
jl
mov
mov
subl
mov
ljmp
add
out
cli
xor
jae
mov
test
xchg
mov
inc
xchg
cld
xor
cmpl
and
mov
jge
push
cmp
cs
outsl
pop
sub
push
int
jnp
or
lahf
sub
mov
imul
pop
xchg
mov
fwait
lea
or
pop
scas
sub
lret
push
gs
cld
sub
pop
pop
xorl
ss
inc
push
xor
ja
add
sahf
cmc
imul
push
inc
iret
repz
sbb
int
sbb
leave
test
jns
push
push
xchg
repnz
add
divl
dec
sub
data16
lds
mov
gs
sub
pop
inc
mov
insl
sub
lds
sbb
out
sub
push
clc
xchg
cli
icebp
mov
push
jne
xor
xchg
sbb
pop
jmp
es
add
nop
dec
mull
pop
icebp
cld
jg
cmpsb
in
dec
inc
or
sbbl
aas
iret
cld
cmp
adc
mov
loope
outsl
sub
jl
cwtl
imul
pop
or
mov
js
out
fs
ret
dec
sahf
push
popa
sub
subl
nop
sub
pop
and
in
jmp
xor
popa
mov
decb
xor
cli
mov
sub
push
test
outsb
mov
jo
xor
mov
sbb
jge
repnz
call
cmc
das
adc
dec
stos
and
mov
xor
lret
test
in
stc
cmpb
int
sub
repnz
decl
ljmp
xchg
inc
and
adc
pop
inc
lods
lock
push
sbb
or
arpl
jecxz
jae
leave
xor
lcall
fwait
std
shlb
fs
ljmp
stc
clc
or
in
jg
imul
dec
mov
int
sbb
push
mov
jb
cmp
pusha
xchg
icebp
mov
jno
mov
les
daa
pushf
sbb
add
mov
adc
adc
outsb
loopne
dec
imul
fdiv
mov
addr16
dec
inc
movsb
add
rorb
imul
pop
and
aas
mov
add
insb
or
inc
and
addr16
dec
cs
cmpb
rol
xchg
stos
shlb
add
inc
or
icebp
outsl
add
movsb
cli
fadd
jo
call
ss
and
and
fcoml
in
pop
iret
sbb
sub
dec
repz
mov
lea
push
imul
lods
cmp
push
imul
je
cmp
jmp
sub
ljmp
xor
int
dec
repnz
es
jbe
leavew
sub
push
lret
cld
xchg
and
xlat
mov
sub
push
mov
pop
dec
inc
and
fcoms
sub
mov
push
stos
fnstsw
xor
mov
adc
push
int
enter
dec
loop
cwtl
jmp
inc
jle
cli
sbb
out
sbb
sahf
adc
int3
mov
xchg
jne
fistpll
xor
pop
call
jo
adc
pop
sub
stos
out
mov
push
xor
ds
jbe
or
jb
cli
fwait
in
test
outsl
stos
das
dec
push
lea
inc
lods
les
inc
and
xchg
push
mov
mov
jo
icebp
bound
daa
rcll
cmp
mov
popf
cmpsb
les
pusha
sbb
pop
rcll
mov
inc
shll
push
push
pusha
cmp
add
mov
popa
into
sub
insb
clc
xor
sbb
mov
loope
xchg
loopne
sbb
mov
pop
mov
arpl
into
insb
stos
outsl
mov
dec
in
orl
addr16
out
jbe
xor
sahf
sahf
mov
mov
or
jecxz
and
mov
lcall
add
xchg
jmp
or
cmp
sub
aas
add
jo
movsl
dec
dec
xchg
jecxz
ret
sti
test
xor
outsl
jae
push
call
pop
jb
jge
mov
mov
mov
cmp
add
shrl
push
je
into
and
push
jmp
mov
xor
leave
xchg
jle
cmp
jp
inc
ret
repz
or
jp
mov
hlt
fidivs
or
dec
mov
jb
and
fcomps
repnz
xor
int3
mov
pop
and
call
mov
cmp
cmp
repnz
or
mov
pop
xchg
ficoml
cmp
xor
arpl
sub
mov
push
push
dec
add
pushf
lahf
ret
lock
jl
or
js
mov
stos
dec
mov
ret
add
xor
mov
popf
add
jge
aad
mov
xor
addb
push
rorb
fidivs
ret
data16
shll
fistpll
fidivrs
xchg
lret
dec
jo
push
inc
mul
js
loope
stos
pop
daa
dec
cmpsl
or
cmc
mov
and
outsl
ret
test
in
in
cmp
xor
mov
les
mov
xchg
lret
je
rcl
popf
iret
negl
mov
dec
ficoml
fnstenv
lret
cmpsb
js
je
arpl
add
xchg
scas
and
mov
arpl
jo
dec
out
daa
cmp
js
push
mov
sbb
push
mov
test
in
adc
push
push
jge
mov
inc
jnp
fistps
fidivrs
mov
and
mov
lods
leave
pop
jge
mov
add
aad
sbb
mov
rorb
outsl
mov
sbb
and
mov
dec
fcomps
fs
mov
std
push
into
les
xor
cmpsb
add
test
dec
jle
push
adc
xor
cli
ret
or
mov
test
fistl
inc
mulb
push
push
mov
imul
push
imull
cltd
cli
sbb
dec
test
jmp
movsb
cld
shll
dec
add
stc
hlt
jl
and
lea
cmp
mov
jle
clc
jp
in
pop
mov
add
into
loopne
jecxz
out
je
aad
aad
sub
fisttps
popf
repz
retw
insl
xchg
arpl
lcall
xchg
inc
and
mov
mov
ljmp
testl
or
jno
les
movb
or
aas
mov
mov
outsl
rolb
mov
pop
push
and
in
add
mov
insb
push
pop
daa
pop
mov
lret
mov
loop
mov
pop
pop
cmp
or
inc
add
and
push
cmp
adc
inc
xchg
push
adc
mov
or
dec
ja
stos
mov
mov
xchg
or
adcb
add
push
mov
mov
mov
aad
pusha
imul
adc
pop
xchg
adc
orl
push
dec
adcl
dec
xchg
lds
js
dec
xchg
dec
mov
jmp
loopne
test
add
adc
dec
jle
mov
or
cmpsl
push
sbb
sar
ret
cltd
filds
add
xor
repz
ficomps
ss
hlt
iret
pop
xor
cld
loopne
dec
into
ret
xorb
mov
add
ret
imul
ljmp
jmp
rorl
push
adc
fcoml
jge
jmp
bound
adc
add
scas
jno
xor
test
jne
leave
cwtl
push
mov
stc
stos
movsb
daa
imul
es
xor
lock
dec
icebp
cld
mov
fimuls
dec
mov
mov
std
push
popa
mov
aam
push
push
loop
dec
add
add
add
xchg
outsb
and
push
push
gs
add
or
add
mov
lea
les
out
nop
mov
add
inc
outsb
sarl
jp
push
xchg
and
mov
inc
push
lds
iret
jp
cmpsl
sub
mov
ret
scas
shll
push
jno
cmp
jo
sbb
je
pop
dec
adc
xor
or
call
mov
movsb
daa
mov
xor
fcompl
mov
sbb
pop
pop
sbb
sub
loopne
sbb
pop
dec
push
out
push
in
lahf
and
daa
xor
jns
js
pop
push
inc
scas
fs
jno
scas
fwait
pusha
popa
mov
dec
cltd
inc
pushf
mov
test
ja
push
enter
mov
add
repz
xchg
cmp
scas
mov
inc
cmp
xchg
cmc
lea
ljmp
mov
aad
in
in
jp
jnp
sbb
repz
sti
or
xchg
push
add
jo
push
dec
sub
popa
icebp
or
lahf
inc
jp
iret
pop
mov
push
xor
cmpsl
xchg
pushf
into
pop
cltd
mov
inc
adc
cld
ss
cs
jo
adc
pop
inc
push
mov
fidivs
push
mov
xchg
xchg
lock
inc
mov
jmp
mov
jne
pop
inc
mov
dec
sub
inc
fsubs
adc
mov
mov
cmp
insl
mov
jge
pop
lods
xchg
push
call
cwtl
mov
inc
lret
orl
mov
js
lret
jmp
daa
hlt
push
in
add
ja
aam
cmp
orl
pop
lahf
hlt
sbb
fdivrs
jmp
adcl
loopne
push
iret
rorl
and
js
xorb
pop
jl
enter
xchg
pop
ljmp
xchg
xchg
cmpsl
enter
jg
cltd
rol
inc
lods
xor
fdivrs
imul
or
gs
out
mov
add
dec
outsb
mov
mov
push
les
mov
push
xor
fs
mov
push
inc
pop
inc
push
mov
hlt
cmp
arpl
sub
cmp
int3
icebp
cs
or
dec
jle
in
jnp
dec
or
ret
int
jl
sbb
push
jno
daa
in
jo
pop
or
mov
jne
and
clc
cld
add
mov
and
push
pop
aad
dec
sub
sbb
xlat
xor
mov
lds
jmp
outsb
push
lock
mov
lea
adc
das
rolb
and
decl
mull
mov
sahf
lock
pop
cmp
lcall
mov
pusha
dec
mull
mov
cmp
inc
data16
push
push
push
mov
fistpl
les
sbb
outsl
and
mov
loopne
sbb
in
lock
test
dec
mov
repnz
pop
jo
clc
cmp
xchg
jae,pn
jae
mov
push
xlat
fdivrl
rcrl
test
je
cmp
and
int
pop
sbb
push
repnz
mov
xor
mov
mov
stos
add
dec
ja
movsb
fists
bound
das
mov
pop
cmp
jne
pushl
shlb
mov
lods
mov
push
cmp
scas
insl
outsb
or
dec
nop
cmp
inc
ja
sub
ds
push
movsl
leave
sbb
gs
int3
dec
dec
aam
and
mov
add
xor
mov
cmpsb
movsl
fsubl
test
stos
or
mov
jno
sub
data16
or
stos
mov
mov
and
jb
inc
add
loopne
mov
pusha
mov
pop
xchg
pop
es
adc
arpl
jnp
ss
sbb
bound
lock
mov
sti
or
movl
adc
cld
outsl
dec
bnd
jno
in
scas
jb
insl
nop
in
xchg
mov
in
pop
sub
mov
mov
stc
lods
stos
mov
mov
lret
test
out
adc
std
mov
gs
shrl
and
inc
iret
pop
xor
pop
mov
popf
inc
rclb
add
es
movsl
push
or
in
cmpsb
mov
nop
stos
mov
jo
loope
repnz
pop
fs
std
fldt
jmp
xchg
jge
loopne
outsl
mov
int3
loopne
ret
jge
push
cli
arpl
mov
push
aaa
adc
pop
and
call
fsub
movsl
aas
or
test
ds
cwtl
out
lods
popa
addl
xchg
lahf
sbb
out
ja
leave
insb
das
dec
movsb
pushf
cmc
lahf
rorb
fld
push
notl
jp
je
add
pop
pop
and
cwtl
imul
in
push
fdivr
imul
pop
inc
mov
xor
mov
jp
or
repz
mov
sbb
popa
xor
pop
mov
and
sub
sahf
lea
pop
popf
pop
out
repnz
sub
fwait
in
es
push
mov
jg
cmpb
sub
push
notb
mov
lret
test
ds
push
cmc
in
xchg
ret
dec
xchg
fwait
jno
dec
std
add
popf
pop
xchg
xchg
xchg
dec
xchg
ret
add
sbbl
out
and
jecxz
into
xchg
dec
out
scas
jmp
and
testl
xor
in
stos
pop
aam
sbb
in
daa
dec
std
add
mov
sbbb
cltd
and
push
jle
cmp
pop
jle
hlt
mov
loopne
es
inc
jg
push
repnz
insb
pop
cmp
pop
mov
push
pop
nop
aad
cmp
mov
movsl
jl
mov
subb
fstl
sbb
xor
xor
data16
movb
mov
enter
and
insb
cmpsb
mov
mov
mov
add
std
jb
div
jge
sbb
sbb
add
int3
ljmp
gs
pop
xchg
jns
loopne
mov
nop
les
stc
fcmovbe
out
add
into
test
jno
das
movsb
adc
sbb
jl
lret
dec
aas
inc
cmpsb
popa
std
adc
fcomps
xchg
inc
mov
mov
testl
adcl
scas
sub
or
mov
mov
andl
cmpsb
xchg
repnz
mov
cmp
cmp
ret
add
in
sub
push
cmp
cmpsb
mov
hlt
in
lea
mov
ffreep
imul
or
adc
or
xor
movsb
inc
insb
pop
aaa
into
xchg
mov
add
pop
mov
lret
cmpl
repz
shlb
aas
mov
dec
dec
addr16
sbb
push
fists
sbb
add
mov
test
cmp
and
stos
int3
gs
js
mov
pusha
ret
shr
mov
popf
stc
aam
dec
push
cmpsb
test
popf
push
and
and
aaa
insb
add
js
dec
mov
mov
data16
and
mov
mov
sbb
cwtl
ljmp
sbb
and
data16
iret
jb
mov
out
mov
loop
cwtl
movsl
loop
xchg
mov
ffree
cmp
pop
js
or
push
bound
ret
add
jge
mov
pop
xchg
sub
es
and
data16
fdivr
enter
sub
dec
stc
and
add
mov
es
push
loop
push
cmc
andl
dec
das
mov
shrl
mov
out
pop
les
rcrb
iret
mov
dec
cmp
insb
outsl
mov
mov
lcall
push
push
dec
push
out
addr16
rclb
fsts
adc
xchg
xchg
lea
mov
outsb
arpl
pop
insb
adc
loope,pn
fcmovne
xchg
xchg
xor
and
test
je
aas
in
xor
mov
and
inc
scas
outsb
in
jb
inc
ljmp
out
movsb
mov
repnz
arpl
add
mov
cmp
cwtl
sbb
int
mov
jo
ja
inc
mov
sub
leave
jbe
aam
lcall
pop
mov
pop
pop
bound
hlt
sarb
push
mov
outsb
cli
mov
sbb
push
push
aam
xchg
push
cmpsl
pop
ja
and
data16
incl
adc
add
jbe
mov
out
sti
cmp
xorb
verw
inc
xchg
and
jmp
cmpsb
sbbl
jns
cltd
icebp
rcrl
xchg
mov
ret
jnp
inc
scas
xchg
push
cld
add
fxtract
dec
and
inc
out
lods
jg
jns
xchg
lahf
or
ss
or
xlat
sub
sbb
mov
pop
adcb
xor
pop
add
mov
pop
daa
das
test
mov
test
je
and
fldt
cs
outsl
inc
xor
adc
outsl
stos
ror
call
push
rep
and
sub
sbb
fldcw
jge
sub
out
int
packuswb
adc
jmp
or
sub
xchg
lahf
jg
mov
pop
cwtl
fs
sbb
fists
sub
negl
xorb
cmp
in
test
scas
aaa
mov
shlb
dec
and
add
mov
cmpsb
sarb
mov
mov
xor
cmp
xor
and
cli
cmp
loope
adc
jo
mov
xchg
pusha
sbb
dec
jmp
mov
adc
sbbl
shll
push
stos
sbb
add
lret
pop
jo
arpl
pop
rorb
xchg
push
ljmp
jno
pop
mov
ror
push
jle
add
in
and
test
sti
adc
sarl
jmp
mov
adcb
das
popa
es
sbb
cmp
xchg
outsl
mov
xchg
dec
push
jge
xchg
inc
mov
outsl
or
pop
jns
add
inc
jb
test
cmp
or
sub
mov
xchg
mov
mov
lea
cli
xchg
aaa
push
add
push
cmp
adc
repz
jl
inc
pop
pop
jg
inc
inc
imul
mov
xchg
out
or
sub
cmp
jl
aas
sbb
and
add
imul
push
dec
in
mov
mov
leave
or
mov
dec
pop
jnp
push
aam
lods
sub
push
dec
daa
testb
cmp
test
xor
mov
and
jno
adc
pop
popa
or
dec
jbe
fisubs
dec
fwait
and
lret
bound
test
xor
popa
or
sbb
xor
push
inc
std
iret
test
dec
insl
jecxz
outsb
mov
add
lahf
enter
lods
dec
lret
and
pop
addb
xlat
stc
inc
test
push
sub
fsubr
add
insb
inc
dec
ljmp
sub
jmp
sbb
mov
fwait
ja
pusha
push
mov
or
push
mov
daa
daa
iret
jns
stos
pop
push
cs
cmp
ret
in
jl
adc
jl
xorb
xorl
mov
cmp
test
xlat
test
push
sbb
ja
ss
inc
stos
enter
out
divl
cmc
pop
mov
popa
add
xchg
jb
or
jae
jae
xlat
jo
stos
stos
mov
out
cmc
sub
xchg
adc
or
inc
test
sarl
push
or
stc
or
cmp
fwait
and
mov
pop
jne
xchg
and
xchg
and
fsubs
mov
test
pop
fistl
mov
add
cmc
orb
push
jecxz
movaps
popa
enter
mov
and
cmp
add
pop
subl
repnz
jnp
fiaddl
ret
ljmp
mov
dec
fisubrs
xor
bound
sti
xchg
cmpsb
and
sbb
pop
jae
xor
ret
outsb
jl
dec
cli
lcall
jg
pushf
jne
adc
bound
icebp
mov
xor
pop
jnp
inc
dec
add
add
mov
popf
addr16
jl
mov
dec
or
out
rolb
xchg
or
imul
mov
pop
and
mov
pushf
add
jbe
sbb
adc
ret
sbb
inc
adc
pop
xor
xchg
xchg
jb
mov
xor
scas
and
or
enter
and
jge
pop
pop
gs
add
cwtl
xchg
mov
sub
xor
add
dec
mov
nop
adc
or
lcall
gs
push
rcl
mov
fdivrl
xchg
fisubl
test
fldenv
fimull
jbe
lods
repnz
in
sbbb
sahf
dec
add
mov
int
inc
xchg
das
lock
movsl
jb
in
mov
out
xor
int
addr16
push
and
cmp
leave
lret
sti
jbe
xchg
test
mov
or
lock
in
mov
je
stos
nop
ljmp
pop
mov
insl
sbb
mov
jmp
in
divps
or
cltd
xchg
or
mov
cmp
js
xor
test
test
ficomps
outsb
adc
popa
orl
push
fldt
push
fcoml
add
inc
daa
testl
retw
jmp
ss
mov
or
and
mov
adc
inc
push
mov
push
fiaddl
push
push
or
mov
sub
sub
cmp
cmp
push
repz
push
cmp
cld
mov
mov
aas
js
push
negl
fldt
cld
and
push
mov
fwait
or
out
push
pushf
mov
mov
in
or
cwtl
xor
clc
pop
pop
or
mov
jmp
test
iret
data16
mov
dec
adc
mov
jnp
inc
sbb
hlt
orl
in
lahf
je
push
ret
mov
mov
fs
xor
mov
xchg
add
mov
sub
ljmp
jecxz
je
xor
and
dec
repz
jno
lds
and
and
ret
adc
hlt
insl
or
or
ret
cs
std
xchg
cmp
outsl
xchg
loop
adc
rcll
ret
adc
shl
jae
adc
mov
imul
and
ds
dec
push
test
pop
jmp
loop
mov
xor
dec
hlt
xor
das
xor
xor
inc
insb
adc
in
adc
in
imul
call
or
mov
scas
rcrl
push
lret
aad
test
jbe
inc
xchg
imul
or
divps
cwtl
inc
fwait
ljmp
jo
pop
jl
pop
popa
sub
push
iret
cmp
outsb
lods
test
sbb
sarl
out
pop
sbb
daa
jne
cmpsb
add
into
call
mov
dec
stos
adcb
std
in
fistpl
cmp
call
add
insl
sub
bound
fimull
pushf
mov
mov
int
insl
mov
sub
sbb
icebp
andb
insb
loopne
cs
inc
fs
pusha
sbb
mov
or
pushf
ss
aaa
and
rcr
stos
sbb
mov
mov
sub
je
sar
cmc
mov
enter
mov
das
jnp
xchg
sarb
push
add
sub
orl
pushf
mov
fistl
lea
testb
rcr
testl
cmpsl
mov
jle
fstps
jle
jne
fwait
rorb
xor
lods
inc
mov
addb
add
cltd
hlt
nop
cmp
notb
xchg
inc
stc
xor
push
or
aaa
jae
inc
ja
xchg
jecxz
xor
xchg
pop
cmp
sub
and
pop
aaa
and
add
pop
xchg
ficomps
pop
xchg
mov
jbe
leave
popa
in
pop
pop
test
bound
xchg
shll
dec
xchg
adc
popa
push
mov
call
shlb
and
cmpsl
out
loop
into
popa
mov
push
sbb
out
scas
sbb
jge
fcmovbe
mov
mov
insb
das
adc
or
cwtl
cmp
fisubrl
mov
scas
and
jl
sub
out
dec
mov
int3
cs
mov
in
xchg
and
inc
dec
inc
jl
stos
jae
mov
jae
mov
push
pop
iret
push
popf
push
cmp
inc
pop
stos
xchg
fwait
mov
push
pop
pop
dec
loope
xor
gs
test
ficompl
imul
jae
adc
mov
std
ret
cli
les
cwtl
outsl
andl
cs
rorb
inc
jnp
addb
mov
cmp
xchg
sbb
jg
shlb
mov
lcall
mov
loope
inc
xchg
xchg
push
push
xor
aaa
sbb
sbbb
jle
stos
out
test
gs
cmp
dec
iret
js
push
leave
dec
push
inc
imul
xor
gs
fcompl
mov
out
adc
loopne
pop
std
sub
and
repz
jne
mov
aam
add
scas
push
arpl
mov
neg
mov
loopne
mov
mov
test
xlat
out
xchg
xchg
aaa
std
scas
add
jnp
stc
push
je
mov
sub
repnz
mov
mov
mov
push
ffree
mov
mov
cli
mov
sar
movsb
and
jge,pt
add
dec
mov
data16
jp
or
jb
shlb
cmp
ljmp
outsb
fisubs
mov
adc
inc
int3
cltd
sub
loopne
leave
gs
mov
rcll
mov
dec
mov
dec
and
inc
jno
jle
loop
cmp
mov
gs
aaa
loopne
add
jbe
test
xchg
sub
pop
xorl
outsb
dec
jge
movsl
mov
xor
arpl
shlb
add
cmp
pushf
out
inc
outsl
mov
cli
pusha
push
jle
ljmp
jb
sub
mov
in
pop
pop
xor
add
loopne
xchg
push
add
test
into
fstps
imul
imul
cmp
ss
into
jp
jo
roll
movsb
mov
mov
xor
js
push
out
cmp
fcoml
test
sub
sub
inc
xor
push
cs
mov
sub
jo
adc
cwtl
xchg
pop
sbb
pop
push
lret
push
test
sub
arpl
mov
std
mov
pop
sub
pop
cmp
push
insw
inc
push
lods
inc
push
push
pop
test
pushf
mov
faddl
xor
jl
lock
jnp
cmpb
int3
and
ret
loop
inc
xor
sahf
jns
add
inc
mov
scas
mov
jl
xchg
shr
jnp
in
sbb
jne
cmp
jmp
popf
pop
sti
lock
lds
xlat
pushf
cltd
cmp
mov
icebp
pop
pop
outsl
stc
sbb
mov
jnp
dec
aam
lcall
pop
dec
mov
icebp
xchg
inc
jb
jg
mov
mov
into
cmpsb
pop
ss
sar
push
into
push
sub
xchg
adc
xor
hlt
lret
int3
push
pop
scas
push
ret
push
lahf
sbb
js
pop
pop
adc
cmp
arpl
lock
testb
ret
andl
test
mov
push
sbb
ljmp
inc
add
pop
pop
cmc
loope
out
lcall
adc
sbb
sarb
lea
mov
int3
lea
fldt
inc
sub
mulb
invd
ds
sbb
fbld
push
mov
fisubl
mov
lods
push
xchg
push
push
sbb
pusha
leave
gs
ds
adcb
fnstsw
push
out
or
inc
sub
cmp
xchg
mov
dec
push
mov
in
and
lret
pop
add
loop
and
sahf
mov
push
pop
and
jae
xchg
arpl
inc
lret
xchg
ret
and
or
pop
icebp
xchg
outsb
xchg
mov
xchg
loopne
lret
outsl
insl
push
inc
mov
sub
inc
les
aad
pop
sub
outsl
xor
mov
push
inc
outsb
adc
mov
ds
lock
push
data16
xchg
cmc
and
out
add
aad
aad
cmp
push
ficoms
lock
faddl
fdivl
sub
bound
and
icebp
inc
or
inc
call
fcoms
jnp
mov
xlat
mov
pusha
sub
sub
push
xchg
sarl
lahf
dec
stos
addr16
inc
jp
test
mov
push
rcrb
sbb
dec
pop
fwait
jo
fimull
in
pusha
fadd
fidivrl
mov
mov
lock
aas
dec
push
mov
xor
jns
pop
xchg
dec
mov
sub
sbb
std
int3
mov
scas
push
out
sbb
icebp
ljmp
fisubrl
xchg
leave
xor
stos
push
push
int3
xchg
fsubs
inc
sbb
pusha
sbb
jns
clc
lods
or
inc
call
gs
add
push
dec
mov
push
pop
adc
mov
icebp
inc
data16
jl
outsb
jg
pop
mov
fwait
cs
dec
pop
adc
xlat
adc
mov
and
das
lahf
mov
fidivrs
inc
mov
lret
lods
test
jae
jl
xchg
mov
jno
into
pusha
xlat
inc
pop
xor
cmpsl
cmp
dec
pop
push
divb
out
xchg
dec
mov
mov
pop
inc
add
jle
add
imul
or
out
faddp
movsl
call
mov
mov
fildl
or
stc
mov
cmp
fcmovnbe
mov
fists
push
sub
inc
xlat
push
adc
sub
lret
mov
adc
mov
or
mov
inc
pop
push
pop
push
jle
mov
in
sub
dec
cbtw
fld1
in
adc
jns
jl
xchg
out
movsl
popl
ficomps
je
jbe
pop
pop
lea
sub
mov
push
call
stos
xchg
xor
rcrl
jne
fimuls
fs
sub
pop
inc
stos
insl
xchg
push
daa
and
std
mov
fisttpl
add
out
stc
ret
sbb
add
mov
cs
add
adc
dec
popf
loopne
ljmp
jge
int3
loopne
lea
mov
push
or
pop
pop
movsb
jp
push
out
sbb
out
lods
jo
push
or
xor
lds
sarb
sub
loope
cwtl
cmc
ret
pop
xor
cmp
rcrb
xor
lds
movsl
pop
std
les
sub
ja
mov
inc
mov
lock
adc
push
repnz
lods
cmpsl
mov
rcll
es
jo
stos
pop
pop
push
dec
add
and
jl
stc
mov
fwait
push
cmp
leave
adcb
insl
dec
cmp
movsb
aas
inc
adc
out
fsubl
inc
ds
shlb
xchg
jmp
xchg
mov
ds
mov
outsb
repz
stos
fstpt
push
in
jp
pop
or
fcmovu
shrb
dec
adc
sbb
xchg
mov
adc
xchg
scas
push
mov
sbb
testb
cmpsl
and
inc
insl
jp
and
sbb
dec
iret
jne
mov
dec
pop
cwtl
jmp
call
jecxz
mov
outsb
cmp
nop
cs
addb
push
out
inc
clc
push
out
jnp
mov
sti
jb
in
aas
dec
ljmp
mov
push
mov
imul
inc
shl
nop
xor
mov
imul
rcl
outsb
movsl
mul
loope
jne
mov
or
jae
and
test
push
pop
lret
or
mov
push
cmc
add
orb
add
xor
testb
sub
jp
sbb
sub
dec
adc
repz
sub
movl
imul
pop
dec
cld
xor
xchg
sub
push
aad
jbe
xorb
push
aad
fwait
imul
rorl
daa
fs
lret
aad
push
repnz
insb
mov
adc
push
xchg
push
and
ss
xor
sbb
sub
jbe
jg
jne
mov
xchg
fldln2
mov
add
xchg
loope
mov
cmp
aaa
or
mov
jge
data16
jne
insl
pop
mov
iret
gs
pop
inc
add
dec
push
push
popa
sub
inc
loop
ss
insl
and
cmpsl
gs
rorb
js
ret
movsb
roll
cs
ds
inc
fmull
mov
mov
daa
fs
jb
test
dec
cmp
fwait
rcrl
sbb
dec
adc
dec
adc
imul
fsubrs
jmp
sahf
xchg
xchg
test
cmp
stos
imul
mov
push
cli
and
lret
jns
adc
cvtps2pd
ss
push
adc
rcll
xchg
inc
mov
mov
pop
je
mov
cltd
es
and
add
fbstp
mov
cmp
pushf
std
mov
push
dec
inc
arpl
xchg
mov
xlat
out
cmc
pop
xlat
pop
andl
shrb
imul
jge
sbb
pushf
es
mov
loope
nop
mov
and
inc
data16
xchg
jns
push
lcall
jb
jae
adc
mov
pushf
out
sub
aas
ljmp
add
push
mov
es
push
sub
lret
ljmp
in
ja
xchg
mov
fnstcw
or
test
jne
pop
js
movsl
cmp
jo
xchg
div
lahf
popf
adc
in
je
loopne
and
sbb
bound
sub
mov
inc
dec
add
aad
mov
xchg
pop
add
aas
cmpsl
shrl
push
mov
sarb
push
inc
lret
cmp
mov
js
aas
adc
and
jnp
mov
es
fstps
pop
sub
jmp
xchg
hlt
sbb
ds
fxch
and
mov
loope
mov
push
jnp
cmp
sub
ficompl
mov
popa
lods
rorl
aas
testl
cmpsl
xchg
push
aad
push
fwait
push
test
inc
push
sti
das
xchg
mov
int
into
mov
test
scas
pop
sbb
in
cld
pop
cmpsb
inc
adc
into
arpl
jge
sti
xorb
andl
mov
mov
xchg
pop
jne
das
das
sbb
mov
fsubs
jmp
negl
je
das
pop
loopne
add
mov
test
and
add
mov
xor
test
adc
in
inc
scas
subl
dec
mov
into
movsl
jg
ret
pop
dec
scas
sub
mull
popa
adc
outsb
cmp
test
ds
pop
cmp
xor
cmp
xchg
ja
imul
xor
mov
lahf
lods
sbb
enter
jbe
push
jl
in
jle
pop
test
flds
in
sahf
jmp
push
mov
push
outsb
ds
js
push
and
dec
leave
sbb
jp
xor
call
insl
cwtl
dec
clc
jne
dec
lock
dec
arpl
ja
iret
add
mov
int3
enter
mov
adc
out
fstpt
jnp
xor
nop
fstl
or
outsl
cmp
adc
xchg
inc
cmp
test
inc
jg
cmc
and
pusha
popf
pop
insb
addl
inc
out
je
repnz
popa
mov
push
int3
outsb
das
push
imul
flds
loop
cmp
aam
lds
xor
aam
mov
mov
enter
in
xchg
lahf
dec
sbb
jp
mov
fsubs
adc
push
mov
notb
ljmp
push
lods
sbb
mov
pop
xchg
pop
int3
pop
ret
push
stc
jp
test
scas
dec
push
pop
sahf
mov
cmp
insb
pushf
out
xor
inc
fcmovnbe
divb
movb
jmp
push
xor
add
jno
and
out
mov
pop
test
cmp
sbb
jo
push
pop
add
out
sub
xor
cltd
sub
xchg
sbb
push
lea
adcl
cmpsl
dec
inc
and
jno
pop
xor
and
icebp
int
fnstenv
mov
mov
mov
sbb
jae
lret
inc
fs
lds
adc
or
add
cs
mov
rcll
addr16
xchg
lock
jl
cwtl
outsb
insl
test
or
xchg
jecxz
jb
xor
mov
stos
repnz
mov
mov
and
bswap
fbld
pop
lret
mov
rol
xor
sbb
add
in
es
andb
mov
repnz
frstor
call
push
jl
movsb
lret
ds
cld
jbe
push
lds
dec
repnz
jns
cmp
sbb
sbb
in
lock
loop
push
jge
jp
sarl
mov
cmp
add
pushf
jp
into
cmp
push
mov
lahf
mov
fcmovnu
cld
push
xor
cwtl
out
adc
or
mov
lods
call
shll
adc
in
pop
mov
negl
mov
xchg
or
xor
dec
mov
inc
inc
push
sbb
xchg
lret
adc
lock
test
shrb
bound
divb
and
push
push
data16
cmp
pop
cmp
sub
jae
das
push
gs
xor
add
movsb
sbb
arpl
add
iret
pop
mov
mov
dec
in
push
adc
dec
das
sub
out
js
xchg
add
mov
fmull
pop
add
pop
push
fcoms
fwait
out
out
pop
mov
and
push
jecxz
pop
jmp
scas
popf
movb
add
and
sbb
inc
outsl
inc
ds
cmpsb
cmp
outsl
cmp
xchg
divl
and
inc
pop
sub
jno
jecxz
lahf
mov
into
cmc
jmp
in
pop
mov
and
aam
cltd
stos
cmc
icebp
and
test
roll
imul
cmpsb
in
push
ja
movsb
mov
inc
repnz
repnz
mov
ficoml
imul
imul
push
sub
or
aad
insl
sbb
push
clc
jmp
adc
and
xorb
xor
in
push
inc
cmpsb
sahf
cld
mov
mov
fwait
fwait
cld
push
out
mov
sub
bound
adcb
rclb
js
mov
or
xchg
xchg
scas
pop
sbb
push
and
imul
ljmp
sub
mov
fwait
and
inc
inc
push
sbb
add
outsb
mov
cmp
lea
fdivrp
sub
sub
fbld
test
outsb
inc
dec
xor
std
and
adc
repnz
lea
leave
pop
or
loope
les
push
nop
mov
test
lods
loopne
push
push
cmp
je
push
dec
jne
xchg
mov
divb
cmp
stos
jecxz
jmp
pushf
mov
or
cmp
add
aad
add
inc
inc
ljmp
or
jmp
inc
push
push
mov
cmpsl
push
push
dec
lods
mov
inc
cltd
psubusw
mov
fadd
cmpsl
lret
cmp
dec
cmc
jb
fucomi
push
adcl
inc
cmp
sti
mov
jns
jp
add
sbb
and
adc
movsb
out
pop
or
pop
dec
mov
mov
out
les
mov
js
cld
pop
flds
cmpb
sbb
mov
ret
push
and
add
dec
dec
mov
and
sub
in
xor
testl
cli
add
cwtl
outsl
fs
sbb
push
jns
in
mov
or
add
rcrb
dec
insb
leave
jne
in
mov
inc
xor
pop
cmp
insl
inc
insl
xchg
xchg
ds
lds
pop
ret
add
hlt
and
sbb
insl
cmp
mov
xchg
xor
pushf
mov
jg
xchg
subl
mov
sbb
jecxz
out
xor
jge
int
test
xchg
mov
dec
aas
outsl
lds
sbb
inc
mov
mov
push
addb
popf
imul
or
adc
pop
sti
stos
mov
mov
mov
and
cmp
cmpsl
lcall
out
xchg
and
inc
jne
push
inc
jbe
icebp
imul
out
mov
into
cmp
mov
clc
scas
cmp
icebp
lret
jecxz
xor
and
imul
cmp
dec
mov
add
and
dec
add
test
mov
cld
mov
pop
gs
shrb
mov
push
shrl
xlat
fidivs
lea
stos
and
ja
cltd
shr
aaa
mov
out
fadds
pop
ss
sub
sbb
inc
sub
sti
push
jge
call
push
push
fwait
inc
iret
lcall
cmp
rorb
pop
mov
jnp
xchg
sarl
popl
lock
jp
mull
add
cmp
push
fisttpll
insb
sub
add
and
mov
rcrb
ljmp
xchg
repz
dec
mov
pop
xchg
loopne
add
insl
mov
fisttps
jbe
jg
jge
mov
and
mov
cmp
fisubrs
gs
push
xor
fistpll
jmp
lea
and
xor
mov
lret
xchg
and
rcl
cld
in
sbb
cmp
mov
aam
iret
jle
xor
cmp
iret
inc
shll
xor
out
nop
or
sarl
mov
popa
mov
or
jns
cmpsb
repz
adc
cli
rorb
mov
xchg
pop
mov
sub
jns
push
rolb
loopne
cltd
fsubrl
mov
pusha
gs
je
pusha
lods
pop
ret
shlb
mov
xor
hlt
popf
xor
push
pop
jne
mov
sbb
and
xchg
out
xchg
hlt
jecxz
pop
aam
aas
addb
popa
icebp
cmp
repnz
inc
mov
je
out
jae
inc
cli
lret
int3
dec
sbb
adc
add
test
test
and
or
in
xor
aaa
shrl
rcl
jae
sub
pop
out
jmp
xor
clc
xor
cmp
adc
addr16
sbb
fucomp
push
in
add
xchg
or
dec
xchg
mov
loop
add
pop
push
in
push
ja
xchg
jp
loopne
sub
fdiv
adc
adc
mov
push
or
adc
mov
lahf
aam
mov
jbe
jbe
inc
in
cwtl
hlt
pop
enter
addr16
out
cmpsb
adcb
jb
jb
adc
sbb
xchg
dec
das
fwait
or
dec
adc
add
popa
mov
pop
rclb
leave
aad
dec
mov
loopne
popa
jb
xor
jecxz
mov
cmpsl
lds
je
push
pop
and
leave
jecxz,pt
mov
sbb
test
dec
imul
inc
imul
sub
in
int
jp
and
mov
or
xor
lds
scas
jb
add
mov
jbe
mov
rolb
adc
cld
or
mov
daa
or
loope
out
mov
cmp
jbe
lods
and
movl
mov
or
loope
jb
lret
mov
enter
movsl
or
cmp
xchg
imul
aam
xchg
lahf
mov
adc
fdiv
sub
xchg
or
fisubs
mov
ss
pop
cmp
push
adc
std
cwtl
arpl
leave
fsubrs
push
adc
cld
xchg
pop
jno
loopne
cmp
repnz
ror
jp
adc
out
or
enter
in
adc
or
push
pop
not
int
cmc
loop
outsl
inc
add
dec
jne
jns
lods
pop
sub
ss
rol
lods
fistpl
shrb
xor
stos
mov
cmp
stos
adc
cltd
enter
push
sub
inc
lcall
jnp
in
lret
mov
sub
jno
movsl
inc
pop
filds
and
mov
adc
adc
scas
jo
lds
pop
cmp
sti
loopne
ja
jne
stos
push
divb
mov
push
sub
pushf
inc
lcall
js
lods
or
jae
mov
mov
cld
xchg
out
pop
and
mov
nop
mov
rcll
inc
cmp
jle
jo
and
pop
mov
and
push
jecxz
jne
sub
pusha
mov
mov
ror
mov
outsb
insb
fiadds
sub
cwtl
sbb
mov
fwait
and
mov
sbb
pop
cmpsb
inc
imul
aaa
xor
sahf
inc
sub
xorl
xchg
mov
and
out
stc
inc
test
sar
stc
dec
enter
aam
lret
lcall
or
pop
sbb
mov
addr16
adc
push
mov
pop
fsubs
xor
sub
aam
mov
jae
ret
icebp
mov
xchg
fbstp
mov
mov
mov
or
inc
pop
mov
js
jnp
dec
jnp
es
ss
stos
or
nop
inc
cmc
jg
xor
cmpsl
data16
dec
jbe
or
es
inc
xchg
adc
mov
test
add
mov
adc
lea
jp
xchg
iret
push
cmp
pop
dec
jb
fwait
aam
test
aaa
xor
mov
xor
pop
repnz
aam
imul
dec
inc
push
lret
scas
dec
jp
lcall
adc
inc
mov
adc
mov
xorb
sub
repnz
aad
mov
lods
sub
test
or
add
sub
add
imul
lock
mov
push
aam
sub
out
ds
pop
clc
sub
jecxz
xor
mov
cmp
js
and
mov
mov
notl
cmp
fwait
and
arpl
pop
fwait
adc
and
fnstenv
jl
adc
inc
sbb
scas
out
inc
je,pn
sarb
xchg
push
add
xchg
mov
loopne
dec
sarl
pop
push
sbbl
push
dec
jg
push
mulb
or
push
sbb
cmc
fucomip
jbe
cmpl
xchg
pop
repnz
adc
sbb
cli
mov
mov
xchg
cmp
mov
test
outsb
lock
test
rcr
jg
movsl
es
jle
sbb
lcall
mov
sbb
push
xor
xchg
aam
pop
mov
ss
mov
cmp
mov
aas
into
push
scas
or
sub
dec
cmpsl
jb
test
fsubs
lea
ss
cmpsl
lds
or
xchg
rcr
or
inc
jmp
mov
fs
cmpl
out
sbb
out
rorb
xor
jmp
push
ss
xor
mov
add
cmp
out
xchg
cmp
stc
sbbl
cltd
imul
push
pop
cmpsl
ss
cwtl
jl
push
shrl
mov
mov
jne
mov
jns
pop
mov
adcb
aam
imul
dec
leave
add
mov
mov
jge
cmp
ss
out
call
test
int3
fwait
fildl
jmp
aaa
push
or
pop
or
repnz
mov
inc
lret
fsubrl
outsb
iret
scas
and
mov
jmp
fdiv
pop
das
jg
ret
add
ljmp
mov
sub
push
imul
push
or
test
daa
mov
hlt
js
cwtl
or
pop
lock
pop
out
pop
mov
mov
inc
inc
jecxz
popf
xor
das
sub
imul
dec
adcb
and
or
fistps
push
in
inc
aaa
sbb
test
sub
stos
data16
jno
mov
cli
xor
movsb
pop
mov
ds
mov
aaa
dec
adc
jnp
clc
mov
addl
cmp
pop
sub
decl
test
addr16
ret
fisubs
sbb
test
push
sarl
pop
in
loop
rolb
mov
xchg
jp
push
and
arpl
repnz
mov
inc
or
sub
mov
bound
cmpl
sub
fmull
mov
hlt
dec
lds
mov
sbb
dec
dec
inc
xor
push
lcall
pop
xor
push
imul
or
mov
scas
add
orl
push
cmpsl
lcall
add
scas
aad
int3
jae
cmp
out
dec
int3
rorb
sub
mov
fisubrs
dec
movsb
mov
push
add
xchg
xor
jae
test
add
lods
push
mov
and
mov
dec
cmpsl
xor
jmp
dec
jp
sbb
out
outsb
repz
je
lret
imul
lods
pop
dec
push
dec
in
or
mov
push
adc
inc
xbegin
stc
sbb
into
and
adc
iret
shll
pushf
ficomps
addb
pop
mov
lds
inc
pop
pop
in
enter
dec
enter
lods
jle
jmp
pop
cmpsl
pusha
cmpsl
pop
mov
test
adc
pop
and
aas
pusha
mov
aam
mov
and
stc
movsb
cmp
jl
les
fcom
sahf
test
or
and
jbe
mov
cmpb
outsl
int
int3
jnp
push
mov
inc
sub
xchg
clc
in
cmpsl
push
sbb
icebp
and
gs
jge
mov
sbb
std
jo
push
inc
add
adc
xor
lahf
push
call
cwtl
xchg
std
adc
jo
push
std
out
gs
push
dec
cmpsb
mov
mov
cmp
pushf
loopne
mov
push
adc
shrb
jno
add
repz
xchg
lods
nop
sbb
ret
pop
stos
or
push
mov
ret
jp
cmp
inc
pusha
icebp
push
test
xchg
push
push
out
pop
mov
stos
icebp
mov
test
pusha
mov
mov
xchg
sub
push
cpuid
adc
lods
imul
movsb
or
cmpsl
jae
jle
imul
xor
iret
inc
scas
cmp
add
lock
push
jns
push
popfw
arpl
dec
repz
xchg
cmp
enter
arpl
jg
fidivrl
fcoms
mov
mov
je
mov
or
ja
add
out
cltd
and
std
or
flds
sub
out
sub
inc
adc
mov
pop
push
sbb
xchg
or
into
incl
sbb
mov
stc
mov
or
xchg
push
adc
fidivrl
inc
push
filds
leave
adc
cli
dec
xchg
sbb
mov
push
notl
mov
jne
add
sbb
push
mov
fisubrl
sbb
inc
stos
sub
arpl
mov
mov
mov
into
test
roll
ljmp
xchg
sub
or
loopne
sub
fisttps
lret
out
test
rcl
stos
enter
mov
jnp
cwtl
inc
xlat
jp
in
sub
in
call
and
icebp
gs
arpl
or
fstps
mov
add
in
adcl
mov
sti
fistl
iret
js
cmp
sbb
inc
sub
and
outsb
push
xchg
mov
scas
inc
loope
ret
mov
jns
enter
push
pusha
mov
lock
sub
das
or
js
out
pusha
xchg
hlt
mov
and
test
sub
push
dec
xlat
xlat
arpl
sub
push
roll
dec
das
push
rcrl
js
mov
mov
gs
sub
inc
cmp
ret
arpl
sub
sbb
fnstsw
in
push
mov
scas
std
pop
fstp
test
test
arpl
push
jecxz
xchg
push
in
ja
jg
sub
or
js
xchg
sbb
mov
jecxz
add
xor
je
sbbl
scas
into
fcmovne
inc
pop
js
mov
ja
and
jnp
ljmp
cmp
xor
push
out
sbb
jo
xchg
imul
invlpg
sbb
mov
rol
test
hlt
and
pushf
mov
mov
lcall
test
pop
es
inc
add
dec
int3
lock
aaa
jle
push
ljmp
movsb
xorl
int3
xchg
cmp
loop
jne
aad
stc
add
dec
push
inc
add
mov
popl
ss
jmp
fildl
cmc
jl
jmp
cmp
into
test
inc
adc
jne
test
bound
pop
ss
push
or
and
repnz
inc
cmp
sub
pop
sub
mov
popf
call
or
xchg
mov
lods
popa
push
adc
fildll
daa
mov
jns
out
and
push
mov
pop
fcmovnu
out
mov
dec
add
xor
rcr
pop
pushf
pop
jecxz
lock
inc
movsb
push
rorl
pop
lock
bound
cli
je
mov
and
add
das
inc
jle
jecxz
inc
mov
cmpsb
dec
mov
add
push
cltd
dec
sti
mov
cmp
enter
fisttpll
jb
cmp
nop
push
and
fwait
in
ljmp
outsl
ljmp
cmp
stc
adc
arpl
xchg
jg
dec
adc
loopne
dec
sub
mov
bound
leave
and
frstor
mov
xor
out
push
fwait
or
pop
dec
ss
pop
lahf
and
dec
inc
rcl
jp
pmaxsw
mov
mov
addb
xchg
mov
jb
test
mov
lret
xchg
repnz
in
lods
mov
jp
inc
cs
add
sub
jg
dec
arpl
cmp
adc
jecxz
push
xchg
inc
dec
mov
and
bnd
mov
jb
movsl
pushf
inc
jae
movsl
aam
outsl
sub
dec
push
jb
sub
cmp
jge
das
mov
rcrl
sbb
and
xor
mov
jae
leave
jp
and
iret
mov
add
fldenv
stc
mov
jp
in
aaa
cli
jae
mov
fsubrs
adc
shr
ljmp
or
add
inc
ret
mov
repz
or
jle,pt
dec
cmpsb
leave
push
mov
das
fidivrs
aam
mov
inc
pop
mov
ficompl
cmp
cwtl
jne
dec
cmp
sub
pop
push
push
pop
loopne
scas
dec
or
jp
test
lret
aas
xchg
fwait
inc
dec
jecxz
fildl
inc
mov
std
daa
ret
addr16
loop
mov
inc
dec
cmp
xchg
mov
jmp
push
or
loopne
call
push
cmp
jb
pop
pop
mov
cli
mov
mov
call
movsb
inc
and
hlt
int
jecxz
test
add
into
ljmp
jns
jne
in
inc
mov
in
mov
fcomps
bound
inc
shrb
test
fbld
mov
in
push
stos
test
sbb
cmp
lock
xorl
scas
fs
jmp
sub
push
mov
adc
lret
jo
insl
push
mov
movsb
mov
mov
lock
repnz
or
xchg
pop
mov
add
cmp
and
add
addr16
into
mov
xlat
jmp
es
xor
std
xchg
cmp
ds
sub
and
adc
inc
xchg
xlat
xchg
dec
mov
cltd
mov
jo
ret
cld
push
sbb
xor
div
mov
test
mov
leave
lods
fdivrl
add
stc
push
ds
and
popa
das
ja
dec
popf
sub
insl
int3
xchg
xchg
sub
popa
addr16
cmp
outsb
nop
cmp
lea
and
xchg
repz
cli
ljmp
pop
ret
testb
fs
sub
cmpsl
jle
add
std
xchg
sbb
shrl
jecxz
or
xchg
scas
out
xchg
insb
imul
iret
test
popf
jne
fstl
cmp
mov
mov
js
adc
sub
dec
mov
push
leave
out
xor
inc
enter
int3
xor
pushf
add
shll
mov
out
add
push
fs
cmp
jge
in
data16
dec
xchg
in
testb
lret
mov
jl
mov
andb
jl
mov
jmp
dec
cmp
sub
lret
enter
lds
icebp
int
lds
mov
fwait
xor
jo
inc
stos
rorb
pusha
mov
pop
ret
or
pop
jge
or
call
je
and
pop
gs
mov
lret
out
pusha
in
fwait
cmp
or
xor
clc
movsb
movsb
out
scas
inc
scas
sub
adc
fists
pop
daa
and
jb
jl
xor
imul
lcall
inc
xchg
int
xchg
shlb
das
push
adc
stc
flds
push
nop
jmp
es
bound
lahf
dec
mov
xchg
out
hlt
adc
cmp
movsl
mov
inc
mov
xchg
pusha
push
stc
push
add
xchg
popa
mov
js
mov
out
mov
and
mov
push
inc
sbb
add
xchg
jl
xor
aaa
sahf
shrl
js
lods
jmp
in
loopne
push
repnz
fcomps
daa
movsl
dec
push
add
aas
in
hlt
adc
int
xchg
jae
and
out
lds
in
clc
xor
pop
sarl
dec
shlb
sbb
sub
and
movsl
popf
or
nop
xchg
out
cmp
xlat
jp
sbb
push
inc
sahf
movsl
dec
cs
mov
ret
shrb
sti
or
xlat
mov
push
movsl
push
or
cmp
lods
xchg
mov
jnp
add
arpl
sahf
pop
dec
inc
f2xm1
push
jg
cmp
push
inc
mov
rcrb
adc
call
xlat
outsl
jnp
mov
test
cmpsl
push
xlat
xor
add
or
mov
and
inc
mov
in
in
arpl
jno
les
dec
add
cmpsb
aaa
jbe
push
in
ret
and
xor
xchg
je
and
sbb
mov
rcrl
cmp
add
bound
jns
arpl
mov
jbe
sbb
mov
nop
mov
adc
lock
fbstp
andl
rcl
push
imulb
xchg
sub
and
xor
std
inc
dec
xor
stos
cmpsl
repz
inc
adc
jae
jae
pop
jg
stc
push
add
sub
shrl
or
sbb
lds
cltd
xor
icebp
push
push
popa
sbb
daa
pop
jle
cltd
lea
push
imul
add
xchg
adc
fcomps
sbb
cmpsb
pop
or
inc
cmpsl
cmpsb
xchg
pop
push
mov
sub
ja
dec
jmp
adc
rcrb
xlat
inc
pop
xor
hlt
addb
xor
dec
das
cmpsl
jle
push
mov
cmp
sub
mov
ljmp
icebp
stc
stc
add
pop
pop
test
imul
mov
jg
xchg
fsubl
call
stc
adc
jns
bound
xor
out
ret
subb
scas
in
sub
inc
jnp
ljmp
fistpll
jb
adc
jb
and
int3
and
jns
push
inc
in
iret
fsubl
cmpsl
inc
in
mov
fisubrs
aad
jmp
sbb
jmp
cmp
jae
push
fdivrp
gs
lods
or
scas
pusha
push
cmp
pushf
out
nop
test
call
sarb
cli
js
cli
sti
or
and
dec
jge
les
icebp
sbb
js
fprem1
lret
or
lret
daa
jbe
adc
fucom
push
loopne
sbb
xchg
es
jmp
mov
cmc
ds
jno
mov
xor
cld
cmp
pop
sub
fucomp
fnstsw
inc
lds
xor
sub
ljmp
pop
cs
mov
subl
out
dec
into
fs
push
and
xor
inc
add
and
lret
xchg
out
les
mull
xchg
adc
xor
add
mov
std
or
pop
mov
mov
jmp
inc
arpl
inc
negb
adc
or
xchg
popf
or
and
mov
or
imul
lods
ss
fucomi
or
xchg
lahf
xchg
push
xchg
adc
mov
popa
out
mov
gs
and
jmp
divl
test
xchg
mov
push
rorl
push
lahf
xor
roll
cld
daa
push
add
jge
sub
fs
jno
fcompl
jnp
les
arpl
enter
xchg
cmp
movsb
jae
addl
loope
dec
stc
adc
lcall
psubb
notb
cmpsb
hlt
shll
iret
jo
movsl
icebp
loope
mov
sahf
jo,pt
pop
test
mov
mov
pop
add
adc
pop
xchg
aaa
ret
pop
sti
dec
cwtl
push
mov
lahf
insb
mov
pop
inc
aam
aas
mov
and
dec
push
jno
repnz
inc
mov
movsb
fdivrl
enter
add
insl
int3
push
sbb
sub
negb
lds
jmp
pop
push
sahf
inc
inc
xor
jo
dec
push
inc
jmp
xchg
mov
jae
ljmp
rclb
std
mov
and
dec
bound
push
setge
xchg
fdiv
xor
mov
jbe
gs
outsl
pusha
or
stc
sub
int3
push
aad
and
sbb
aas
fmuls
xor
test
cmp
and
xchg
mov
adc
mov
fwait
aad
cmove
push
fwait
arpl
push
sbb
dec
mov
lods
dec
inc
aas
xor
fldl
hlt
scas
leave
subl
fsubrs
jno
push
arpl
daa
xchg
dec
fstps
pop
jnp
pop
enter
call
xchg
cmp
lods
leave
mov
mov
sub
popa
xor
imul
movsb
aam
bound
icebp
jl
rcrl
mov
loope
cmpsl
loope
clc
push
jge
cmp
mov
pop
cmp
fsubr
test
jge
xor
and
int3
mov
cmpsl
mov
sbb
aas
adc
dec
and
dec
mov
xlat
adc
sub
mov
jns
sbb
nop
movsb
outsl
mov
popf
lahf
imul
int3
dec
icebp
mov
jb
roll
push
pop
jne
or
jl
ret
ljmp
test
mov
jne
insb
pusha
xor
loope
xor
adc
sti
sbb
popf
es
mov
test
pop
xchg
repz
enter
mov
int
inc
xchg
dec
xor
add
mov
inc
test
or
jmp
out
sbb
sbb
inc
and
movsb
dec
dec
insl
xchg
dec
sbb
in
lods
ljmp
mov
sbb
adc
lret
mov
bound
nop
into
push
jp
mov
sub
shlb
push
popl
and
out
add
lock
fstpl
test
xor
shlb
mov
inc
push
out
mov
xor
sahf
fcomps
jno
mov
inc
pushf
pop
andl
hlt
sbb
fiaddl
sbb
lock
sbb
insb
sbb
cmp
xor
in
mov
jb
push
push
out
jo
insl
imul
and
jbe
jl
inc
in
mov
push
adc
mov
in
shll
and
and
sti
div
mov
movsb
and
stos
cli
lods
fs
add
mov
inc
mov
ljmp
sub
mov
popf
add
addr16
mov
sbb
pop
in
sbb
lahf
out
inc
out
cmp
lahf
cmp
adc
ss
cmp
fs
mov
inc
push
insl
stos
xor
push
aaa
shlb
test
stos
jbe
into
sub
push
xor
scas
xor
stc
out
adc
sbb
mov
out
mov
pop
mov
mov
popf
push
shlb
sahf
mov
lret
adcl
adc
loopne
jmp
sub
adc
xor
jle
and
repnz
std
rorb
outsl
pop
xor
cld
push
xchg
dec
mov
js
or
inc
gs
jae
hlt
adcl
xor
dec
and
daa
pop
movb
aas
pop
xor
pushf
cmp
jle
mov
int
addr16
dec
icebp
sub
lret
inc
iret
lahf
mov
arpl
das
cli
scas
adc
cmp
pop
cmp
inc
repnz
leave
jb
jmp
out
sbb
stos
adc
subl
test
in
mov
fcmovnu
mov
xchg
jb
int
mov
scas
jb
cs
lret
in
cmp
es
mov
xchg
int
fwait
mov
jbe
fisttps
mov
push
sub
scas
mov
shl
or
leave
push
adc
stc
sub
jb
repz
bound
push
sbb
xchg
adc
cwtl
scas
jo
ror
jp
fwait
nop
jne
fadd
out
out
or
mov
cmpsb
inc
int3
fwait
les
ja
rcr
adc
push
test
aad
sbbb
xor
inc
mov
inc
sbb
out
sti
movsl
sarl
sbb
stc
bound
mov
xlat
and
push
sbb
pop
xchg
cmp
aaa
decl
lahf
movsl
daa
and
xchg
cmc
inc
gs
pop
jl
mov
push
aas
sbb
adc
mov
mov
scas
xor
jbe
mov
mov
stc
cmp
mov
or
push
pusha
pushf
xchg
lock
pop
xchg
mov
cmp
filds
ret
adc
negl
fs
add
push
mov
stc
lea
sbb
fstps
sahf
sbb
stc
and
imul
xchg
sub
data16
cmp
adc
out
mov
sti
sbb
xchg
push
mov
or
xor
les
pop
pop
or
mov
xchg
add
aad
pop
or
loopne
addr16
ja
jmp
add
mov
les
cmp
xchg
pop
pop
jmp
mov
lock
jbe
jne
out
rorl
cltd
int
leave
pusha
push
adc
or
sub
jo
mov
fmuls
jmp
xor
push
movsb
aam
roll
lds
mov
jo
add
jae
dec
jl
dec
aas
stos
xor
mov
pop
or
fst
push
in
loopne
out
notb
mov
pop
sub
pusha
aas
mov
test
shll
adc
pop
repnz
sbb
aaa
popf
addb
ljmp
adc
ficomps
push
movsb
sub
dec
cmp
sbb
std
test
rorl
outsb
cs
fwait
dec
leave
fstpt
mov
call
data16
inc
arpl
stos
sar
push
sti
jbe
pop
jl
fcmovne
jb
xor
lods
shll
fcomps
testl
orl
inc
sub
add
jg
gs
xchg
or
jmp
pop
sti
cmp
adc
jnp
mov
insb
dec
neg
repz
lods
arpl
jecxz
lea
cmp
pop
lret
xchg
call
push
sub
xor
or
sbb
add
in
dec
push
sbb
cmpsb
iret
leave
and
push
imul
pop
xchg
leave
pushf
mov
dec
pop
sti
jo
mov
divb
adc
inc
mov
jmp
jae
in
push
ret
fwait
call
add
fildll
out
out
cmp
mov
sub
push
push
push
les
rolb
in
jecxz
xchg
mov
nop
movsb
push
js
fidivrl
cmp
ljmp
mov
xor
imul
int3
adc
popf
adc
sahf
mov
push
mov
addr16
jnp
xlat
popa
fisubrs
int
hlt
out
jecxz
in
fwait
rcll
gs
adc
hlt
jecxz
jp
cwtl
inc
flds
cmp
mov
into
adc
xor
and
dec
imul
mov
not
or
fstl
inc
xor
fbstp
jmp
or
cs
pop
xor
stc
lock
in
inc
outsb
add
stc
icebp
psubsb
idivl
mov
mov
and
mov
incl
cld
ret
sahf
sbb
in
rcl
pusha
sbbl
pop
cmp
iret
sahf
mov
loope
aaa
xchg
mov
std
sbb
inc
daa
enter
and
push
pop
mov
je
and
xor
loopne
sub
insb
inc
sbb
jecxz
and
adc
jns
pop
lcall
das
lcall
cmp
push
fstsw
push
mov
leave
and
enter
pusha
in
xlat
sbb
ja
in
fcmovnb
les
enter
push
push
aam
cwtl
push
mov
dec
outsl
sbb
jmp
sbb
fmull
test
or
out
adcl
ret
push
mov
stos
nop
cltd
pop
or
inc
mov
cmp
fwait
dec
popa
inc
adc
mov
shlb
out
sub
push
test
jp
out
sub
xchg
stc
push
icebp
xlat
jno
cmp
xlat
icebp
jne
scas
xor
aaa
mov
mov
pop
sahf
sub
aad
pop
sbb
mov
xchg
mov
pusha
add
mov
cmp
repnz
repnz
mov
and
call
pop
mov
pop
ds
call
sub
stc
cmp
xlat
test
cmc
add
out
inc
mov
pop
mov
in
cmp
adc
int
pop
hlt
cli
call
mov
jmp
sbb
add
inc
clc
inc
pop
or
scas
imul
shlb
shl
or
add
mov
faddl
int3
dec
xchg
loopne
out
pop
or
mov
cmp
mov
mov
mov
push
pop
addr16
and
mov
stc
mov
popa
sbb
push
aaa
sbb
aaa
mov
fldl
shrb
inc
push
movl
call
sti
shr
or
ret
mov
xchg
push
clc
repz
mov
push
mov
fdiv
lods
mov
pop
and
xchg
mov
jle
jo
mov
out
unpckhps
pop
fisubl
insb
in
xchg
dec
and
call
test
imul
jp
cwtl
fst
dec
aam
dec
jmp
in
xchg
outsb
mov
mov
sahf
std
ret
push
ret
aam
jmp
stos
adc
xor
jns
mov
jae
pop
cmp
std
jne
fidivrs
push
jae
xchg
daa
arpl
leave
jp
xchg
push
mov
fs
mov
push
insl
add
dec
stos
mov
fadds
jbe
pop
and
jecxz
or
ret
loope
stos
cmpsl
outsl
stc
in
sub
daa
aas
ss
mov
popa
push
xor
add
shrb
into
lahf
dec
xchg
ffreep
jecxz
sub
jle
lcall
in
fsubr
dec
sarl
inc
sbb
in
jns
pop
mov
dec
lahf
mov
jmp
shlb
xchg
cmp
xchg
jp
pop
dec
ljmpw
lds
clc
jle
or
cmp
inc
cmpsl
dec
call
mov
aaa
les
pushf
mov
cltd
mov
test
inc
insb
cmp
mov
lret
add
cmp
lret
jae
and
pop
shlb
sub
fdivrs
sbb
add
push
loopne
pop
xor
lods
add
mov
jb
jmp
xor
xchg
popf
mov
lahf
dec
sub
insb
imul
out
adc
add
xchg
pop
adc
xchg
mov
lcall
mov
test
dec
pop
out
sub
fcoms
cmp
or
jbe
ret
stos
testl
test
mov
sahf
push
add
xor
jmp
aam
lock
push
scas
sub
aam
and
cmp
push
pop
cmpsl
xchg
dec
inc
int3
lret
pop
ret
scas
out
daa
scas
sbb
push
push
sub
in
cwtl
aas
jb
mov
mov
lods
nop
mov
pop
or
loopne
mov
push
inc
rcl
out
js
and
in
call
mov
in
mov
dec
push
hlt
in
cld
xchg
sub
les
push
jo
popf
cli
and
in
mov
fwait
jmp
into
rolb
insb
outsb
sbb
cmpsb
mov
jae
js
xchg
scas
cld
mov
test
sbb
cmovno
or
cld
sahf
stos
test
inc
lcall
fwait
int
pop
adc
sbb
jbe
clc
imul
negb
and
jg
mov
mov
sbb
mov
cmpsb
scas
ljmp
push
xchg
sbb
popf
add
inc
cmpsb
adc
nopl
test
or
add
jle
inc
push
jb
bound
and
jb
add
push
push
pop
movsl
xor
out
xor
jne
cmp
jne
in
pop
mov
jg
mov
dec
cmp
and
pop
mov
bound
out
mov
add
add
pop
lret
push
jne
mov
ror
inc
push
out
mov
hlt
mov
aam
add
adc
and
iret
mov
loopne
sub
mov
adc
and
arpl
push
adc
inc
ficompl
fstpl
int
cmp
enter
sub
vphsubwd
pop
jnp
lods
jg
cmp
dec
das
sbb
insl
addl
rorl
mov
fsincos
xchg
std
outsl
fucomp
push
pop
mov
lock
xor
sbb
mov
outsb
pushf
gs
scas
loop
xchg
cmc
lea
push
jae
cmpsl
out
cmp
mov
add
pop
cmp
and
or
push
test
fsubl
loope
jo
jl
mov
sbb
mov
movsl
add
sub
test
fistpll
xchg
xlat
pop
jp
mov
sarl
adc
cmp
xorl
lods
jb
inc
fldl
or
xor
lds
out
adcl
dec
repnz
inc
cmpsb
lcall
arpl
mov
xchg
adc
xlat
outsl
shll
icebp
push
repnz
xchg
pop
mov
push
adc
outsl
pop
inc
jo
pop
call
mov
nop
dec
inc
icebp
cmpb
ret
fnstcw
dec
xor
jo
push
fst
insb
mov
or
mov
cmp
clc
scas
cmp
mov
rcll
stos
pop
cwtl
inc
mov
ret
ja
scas
popa
mov
inc
mov
xchg
aam
mov
push
dec
sbb
movsb
xchg
into
pusha
loop
pop
movsb
aas
daa
stos
add
popa
dec
cmpb
jne
push
pop
pop
filds
daa
decl
xchg
int
sbbl
add
sti
jecxz
test
mov
push
xor
addr16
sbb
inc
test
and
repnz
add
xchg
fstps
icebp
dec
emms
mov
xchg
sbb
lret
out
lock
dec
jnp
pop
cld
jno
mov
sub
aas
lret
mov
out
mov
push
nop
jecxz
or
xchg
add
pop
push
wrmsr
scas
dec
cmp
or
and
inc
jae
les
sbb
cmpb
movsb
or
jmp
and
jecxz
sub
rcrb
mov
inc
push
push
shrl
inc
repz
scas
sahf
mov
je
shrl
aad
push
aad
popl
cmp
enter
dec
test
bound
inc
push
aaa
cmpsb
jmp
fcom
lods
rcrb
lock
cld
xor
push
add
data16
inc
mov
add
jl
inc
leave
or
mov
push
push
fs
ds
insb
subl
jge
roll
sbb
xchg
mov
or
and
push
std
fstl
xor
hlt
push
js
push
sub
jno
nop
sahf
push
dec
jle
push
std
shl
cltd
inc
mov
push
cmc
push
jecxz
lea
and
pop
les
and
pop
filds
inc
popa
scas
jmp
or
lret
push
sahf
pushf
addr16
jbe
xor
jne
mov
xlat
aaa
stc
es
push
pop
cmpsl
cmp
xor
jmp
jne
arpl
imul
lock
xchg
stos
cld
push
inc
mov
daa
out
and
adc
fwait
sbb
jnp
sbb
int
in
dec
lock
add
stos
repnz
sub
popf
pop
jmp
pop
lds
jge
dec
test
xchg
or
bound
adc
mov
mov
inc
bound
jbe
repnz
iret
mov
stc
aam
sti
test
out
xchg
call
inc
fwait
cwtl
xor
repz
adc
fdivs
inc
sub
arpl
clc
pusha
xchg
pcmpgtb
data16
inc
push
inc
mov
orl
cmpl
call
xorl
xor
test
dec
xor
ljmp
roll
xchg
dec
lcall
int
push
in
sbb
inc
fisubl
jecxz
jp
xchg
mov
call
lret
pushf
xor
push
popf
dec
xor
inc
xchg
pop
lahf
inc
cmp
sbb
js
data16
leave
inc
mov
mov
inc
call
pop
test
in
cmp
mov
jne
cld
ds
scas
aam
iret
mov
add
mov
mov
js
jge
dec
fs
rorb
stc
loope
xlat
clc
xchg
mov
sub
outsb
jns
nop
inc
mov
sar
mov
push
dec
lds
cmp
nop
test
pop
in
inc
push
pop
mov
rcrl
iret
popf
jl
cmp
aaa
call
sub
ja
jae
sub
jp
call
push
enter
daa
fmulp
gs
dec
xchg
xorl
push
stos
mov
inc
inc
rcrl
inc
stos
lods
push
lods
or
shl
mov
faddl
push
cli
mov
clc
insl
jle
out
shl
mov
stos
loopne
push
mov
mov
gs
pop
xorb
push
adc
sbb
mov
mov
pmuludq
mov
bound
and
lods
and
xor
stc
mov
lret
test
sub
fsub
dec
aas
mov
popf
in
les
pop
push
or
sti
sbb
jle
out
xchg
and
xorl
sub
xchg
dec
daa
into
rcrb
cltd
aad
andl
int3
sbb
mov
jns
cmp
dec
and
push
add
sub
aam
add
mov
in
push
fs
adc
repnz
mov
jp
out
popa
xchg
je
jp
or
jb
das
mov
add
push
enter
xchg
in
sbb
adc
mov
inc
adc
sbb
stc
ss
lahf
movsl
sbb
sbb
test
push
mov
dec
es
lea
cmpsb
inc
fcompl
outsl
mov
imul
cltd
add
jae
loope
sub
cmpsb
jg
cs
add
das
lods
imul
mov
xchg
cltd
pop
scas
adc
adc
mov
or
xchg
mov
loop
shll
movsl
daa
sub
sbb
les
enter
jmp
adc
ret
data16
pop
jno
imul
jg
and
ss
cmpsl
mov
jge
pop
in
push
push
lret
jp
cmpsl
pop
gs
xchg
ret
adc
xor
sbb
xlat
jmp
jbe
popa
lcall
jp
sbbl
loop
repz
test
outsb
inc
jns
add
sbb
mov
and
jp
push
mov
aaa
ss
stos
test
cltd
sti
push
sbbb
int
mov
mov
ljmp
lds
add
xor
enter
push
outsb
jmp
into
mov
jne
rol
mov
adc
inc
cmp
push
add
inc
pop
jne
cmpsl
cmp
add
xchg
mov
add
movsl
cmp
pop
jmp
or
bound
push
loope
pushf
add
inc
add
mov
add
mov
push
pop
adc
call
jns
adc
sar
pop
or
ret
xchg
cmpsb
cvtps2pd
xchg
lret
xor
xor
popa
cmpsb
push
jle
sub
add
mov
pop
sbb
cmp
fnstcw
inc
lcall
in
mov
fisubs
sbb
fstl
or
adc
cwtl
push
inc
jo
jnp
push
sbb
in
mov
and
push
ss
sub
adc
mov
jle
xchg
inc
repnz
push
push
push
adc
dec
mov
cmpsb
mov
jmp
shrl
test
stos
pop
testl
cmpsl
push
pop
movsl
mov
mov
addr16
jecxz
loopne
fsubl
enter
mov
std
daa
mov
testb
xchg
mov
pusha
in
loopne
addr16
mov
fwait
sub
ljmp
mov
mov
pop
or
bound
push
xchg
call
lret
std
pop
imul
fdivr
pop
pop
jg
dec
insb
push
lods
mov
lods
dec
pop
lods
xor
jo
pop
test
fnstcw
mov
nop
xchg
rcrb
jo
mov
dec
dec
in
add
push
aas
pop
jecxz
sbb
scas
dec
sbb
pop
lea
jnp
in
pop
cmp
cli
loop
pop
adc
call
jge
mov
xor
pop
xchg
rol
loop
call
add
pop
pop
test
xchg
fdivrs
mov
mov
mov
imul
ljmp
dec
bound
jge
mov
xor
ror
insb
scas
lret
ficoml
jmp
pop
xchg
mov
out
outsb
mov
add
daa
and
les
inc
lods
cli
fnstcw
inc
or
test
rcl
test
out
inc
punpckhwd
pushf
or
or
xchg
pop
iret
push
into
jne
popa
insb
stc
sbb
jle
xor
jne
cmp
dec
enter
dec
pop
mov
adc
xlat
fistps
lcall
sbb
mov
jl
pushf
in
mov
lahf
testb
imul
nop
mov
push
xchg
movsl
mov
xor
pop
or
pop
push
or
call
fsub
imul
pushf
dec
push
inc
popf
push
jno
add
arpl
stc
test
test
dec
cmp
cltd
pushf
dec
and
push
in
gs
les
jno
popa
aam
jno
dec
adc
imul
lcall
scas
leave
test
dec
arpl
cmp
sub
fildl
mov
jmp
fisttps
adc
outsl
jno
mov
inc
loope
dec
xchg
cmp
fcom
stos
or
dec
mov
lret
mov
in
js
sub
add
mov
lods
pop
lods
xchg
jbe
aaa
icebp
cmp
xchg
xchg
les
test
mov
outsb
push
mov
cld
push
leave
dec
jle
aad
mov
test
mov
ret
xchg
outsb
test
jo
addr16
inc
fidivl
xor
subb
jl
mov
aam
mov
cli
shr
loop
stos
daa
jg,pt
arpl
hlt
aaa
ror
push
and
adc
push
or
inc
ss
test
jmp
mov
push
fsts
rep
rcrb
xchg
out
mov
rcl
dec
mov
icebp
jae
mov
rorb
jl
pop
lahf
mov
push
push
xchg
iret
insl
outsl
lahf
pop
xlat
mov
enter
aaa
in
dec
xchg
pop
repz
or
adc
ja
mov
or
insl
imul
sub
mov
test
sahf
mov
insl
scas
fstpl
mov
adc
sbb
shll
mov
push
testl
add
sarb
imul
push
lods
stc
sbb
mov
frstor
mov
loop
ds
mov
rorl
imul
and
and
cmp
stc
shrb
es
xor
mov
xchg
sbbb
cs
jns
or
test
scas
sub
ret
mov
and
adc
leave
aas
sbb
repz
push
ja
aam
sub
test
xchg
cmp
addr16
rcll
test
adc
decb
outsl
inc
adc
jecxz
iret
enter
repnz
dec
test
and
loop
xchg
out
lds
into
cli
and
add
and
add
rclb
scas
push
push
and
mov
and
push
insb
into
mov
test
inc
leave
and
push
xorb
loope
scas
push
inc
pop
mov
hlt
and
jge
xor
fnstcw
add
ja
nop
jmp
mov
push
insb
jg
int3
xlat
dec
pop
jnp
adc
dec
mov
mov
sahf
jecxz
mov
adc
loopne
push
ret
jne
sbb
repnz
ss
js,pt
lods
imulb
xchg
mov
or
repnz
ss
push
cld
pop
dec
ficompl
inc
push
xor
mov
out
aam
xchg
adc
jp
xor
popf
adc
lods
icebp
lock
jo
sbb
out
cmc
mov
mov
xchg
add
cmp
repnz
ss
cmp
mov
cli
insl
outsl
sahf
adc
ja
xlat
rorl
jge
popa
mov
and
shlb
fprem1
popl
fidivl
test
jns
movsl
mov
shlb
sub
cs
jg
cmp
push
pop
outsl
xchg
call
mov
sbb
lret
test
shll
and
lcall
jmp
data16
movsl
call
in
das
xor
scas
pushl
pop
dec
stos
xchg
icebp
out
sti
and
ror
cmp
push
xchg
cmp
clc
push
xor
fsubs
jb
jne,pn
and
adc
movsl
hlt
mov
inc
xor
mov
or
pop
aas
push
aaa
jnp
pop
cmp
inc
inc
scas
xchg
cmp
lcall
inc
mov
push
dec
adc
shr
lret
xchg
inc
aas
cmpb
and
or
pop
adc
jecxz
daa
or
mov
jle
dec
orb
fs
pop
lods
mov
xstore-rng
cmpsl
add
or
sub
jp
jno
int3
insb
clc
mov
or
mov
insl
std
xor
test
rcrb
dec
add
push
or
jecxz
in
lret
or
sub
cld
mov
adc
clc
stc
fwait
xchg
push
sub
aam
mov
shlb
push
stc
popf
fldl
ja
movsl
push
data16
out
enter
in
cwtl
cli
jnp
xchg
cmpsb
pop
push
jp
shlb
loope
jl
cwtl
mov
fnstenv
cmpl
push
push
ficoml
idivb
push
into
scas
scas
sub
pop
imul
movsl
fucomip
cltd
jl
stos
das
inc
add
jmp
out
cmpsl
out
cmp
js
imul
daa
sub
fnstenv
repz
aam
repnz
jns
inc
leave
loope
jae
mov
fisubrl
xchg
lea
dec
adc
dec
mov
xor
xlat
jo
mov
fdiv
rolb
or
and
shll
repz
push
push
in
hlt
push
cltd
xchg
dec
or
loope
popf
cmp
jmp
das
mov
outsb
rcl
dec
lret
out
fsts
ret
adc
lret
xor
cmp
mov
jb
sub
inc
fcoml
popf
xchg
push
cmpsb
add
fdivl
xor
iret
push
add
lods
ret
xchg
mov
jge
sbb
lods
sar
nop
jnp
xor
push
push
ja
mov
scas
sbb
out
negl
icebp
int
xor
or
mov
dec
mov
mov
cmpsb
cmc
mov
cs
lods
or
jecxz
cmp
mov
cmp
scas
sbb
mov
es
cmp
into
adc
jmp
rcl
jp
push
jae
mov
pusha
push
inc
mov
mov
lcall
andnps
nop
fmulp
jmp
pushf
mov
outsl
jge
and
fwait
jge
cmpsl
mov
jge
jae
inc
addb
in
lret
adc
cmpsb
rcrl
repz
shlb
mov
add
mov
sub
addr16
xor
mov
ljmp
sbb
movsl
scas
adc
mov
push
das
push
sub
or
or
jl
ljmp
dec
gs
rcl
sbb
fnsave
ljmp
push
fwait
xor
jae
fcmovu
imul
popa
pop
and
inc
mov
loope
loopne
out
add
cwtl
push
les
sbb
jne
scas
sbb
fildll
imul
je
pushf
jg
xchg
inc
rolb
xchg
sub
mov
push
jno
mov
call
xor
mov
jl
lock
dec
xchg
iret
jecxz
out
mov
std
outsl
call
sub
ds
lea
sbb
shr
cwtl
iret
call
push
push
or
aaa
inc
push
fldt
js
jno
adc
test
xor
ds
lahf
ljmp
fs
mov
insl
inc
into
fnstenv
scas
add
push
mov
push
adc
jl
jnp
sub
std
xor
ret
add
add
mov
cmp
dec
mov
out
imul
addr16
frstor
sub
pop
mov
xor
jb
cli
mov
fisttps
mov
xchg
in
inc
cmp
xor
sbb
adc
repnz
pop
repnz
repnz
mov
fildl
and
cmp
cmpsl
call
das
xor
add
pop
mov
fcmove
pushf
pop
in
mov
movsb
push
and
sub
cmp
lret
dec
in
out
neg
pop
adc
clc
popa
mov
outsb
or
and
ljmp
shlb
fistps
loope
fstpt
jmp
fildl
push
divb
fnstenv
cmp
cmp
imul
sbb
adcb
les
and
push
and
xor
ljmp
mov
ja
or
add
push
sbb
jno
mov
push
sbb
mov
daa
mov
jno
xchg
bound
ds
xchg
ds
scas
pop
loopne
out
add
jb
pop
inc
mov
and
outsl
pop
test
jo
xchg
add
dec
notb
xchg
cmp
ljmp
neg
jns
xchg
jnp
lds
cs
subb
and
mov
cwtl
out
inc
stc
xchg
lret
and
rclb
fildll
or
in
dec
fldenv
xchg
int
cs
pop
je
fsubr
fnstenv
aad
imulb
adc
mov
fistl
mov
adc
sbb
arpl
popf
cmc
mov
pop
push
jns
xchg
dec
ret
sbb
iret
mov
shlb
pop
push
in
sti
dec
sbb
ja
inc
pop
inc
rcrb
bound
sbb
clc
lods
pop
bound
inc
dec
adc
cmpsb
dec
sbb
pusha
sub
adc
pop
stos
mov
lret
mov
ret
mov
imul
fsubrl
loopne
mov
pop
pop
xor
jno
daa
pushf
lock
jg
cltd
daa
ja
and
xor
push
aas
mov
and
test
je
sub
sbb
mov
sti
jae
mov
scas
or
aaa
mov
lcall
std
nop
push
lock
popa
insl
push
mov
popf
mov
cmpsb
jl
addr16
test
adc
dec
adc
sub
out
das
rorl
mov
out
xchg
sbb
jl
gs
add
pusha
jge
je
ror
test
ja
push
jg
repz
fs
sarb
pusha
test
push
cld
daa
mov
call
lret
in
jl
or
cmp
xchg
mov
cli
cld
xor
sub
movsb
xchg
mov
inc
aad
enter
ljmp
ja
and
add
rolb
pop
lret
dec
rol
fwait
out
or
jns
jp
sub
es
pop
das
adc
mov
inc
xchg
xor
out
dec
push
js
in
pop
jnp
xchg
loop
pop
xchg
imul
cmpsb
mov
aas
iret
push
push
inc
sbb
mov
or
dec
adc
or
test
stos
sbb
and
add
gs
adc
int
add
sarl
jo
ss
mov
or
outsb
sbb
into
mov
pop
push
dec
sbb
pop
out
push
sbb
xchg
inc
dec
lods
rorl
inc
cmpsl
std
and
repz
adc
jnp
fwait
stos
mov
mov
loop
inc
xor
aas
fldt
cmp
imul
jns
add
sbb
je
cwtl
mov
xor
lock
or
inc
mov
mov
sbb
inc
pusha
push
sbb
push
cs
lcall
sub
adc
into
adc
push
cmpsb
in
outsl
cmpsb
sub
fwait
jb
jle
xchg
enter
notb
cmp
push
mov
fcomps
sub
aad
push
pop
xchg
divl
push
cs
outsl
repz
ds
mov
cmp
pop
imul
imul
mov
xchg
mov
pop
adc
insl
shrb
push
repnz
mov
push
xor
rolb
cmp
out
mov
aad
adc
inc
push
mov
stos
frstor
frstor
adc
addr16
sbb
loop
lods
aas
jns
cmpsb
scas
mov
jb
insb
or
shll
mov
pop
lds
jecxz
push
push
jae
stos
xor
lock
inc
cmpsl
iret
or
shll
or
dec
mov
mov
clc
mov
js
addr16
lea
dec
mov
cmpsl
xchg
ror
fiaddl
rcll
lret
mov
ja
xchg
dec
or
mov
inc
rorl
loopne
stos
sbb
dec
movl
push
mov
pop
cli
movsl
rcpps
lahf
jmp
adc
sti
add
pop
stc
lret
aas
and
jbe
rcrl
out
roll
daa
mov
test
sbb
cmp
in
adc
push
mov
lock
and
out
sbb
or
outsl
push
movsb
mov
jo
std
jmp
push
push
dec
test
into
std
and
stos
push
pop
fimull
xor
pop
cmpsb
cmp
cli
dec
das
cs
popf
pop
popf
pusha
mov
mov
imul
arpl
ficoms
add
sub
or
stos
test
jo
cmp
imul
pushf
mov
loopne
cltd
xor
or
shll
fwait
ljmp
sbb
daa
xor
push
cmpsl
arpl
ss
dec
mov
shll
fwait
pop
sub
imul
js
jb
std
or
call
out
mov
jo
adcl
aad
add
cmpsl
shll
cmp
addl
push
scas
in
cmpsb
sti
mov
sub
aas
mov
std
std
das
mov
pop
and
in
sub
mov
ds
shl
fimull
pushl
inc
sbb
jo
adc
cld
mov
icebp
in
stos
jmp
daa
cli
cmp
mov
inc
in
gs
clc
push
sahf
sbb
inc
jg
dec
jnp
jbe
mov
mov
pop
jecxz
cmc
cmp
lods
sub
les
pop
cmp
push
aad
pop
scas
lret
out
dec
insb
dec
mov
pop
lret
mov
std
test
push
jne
pop
imul
stc
inc
cmp
lods
jmp
sub
fs
mov
fcompl
movsb
mov
pop
int
lret
clc
push
cmp
xchg
loope
or
and
jp
fwait
jmp
sbb
xchg
lret
or
imul
out
add
push
fs
mov
mov
inc
cli
sbb
jg
int3
cmp
fbstp
xor
add
xchg
dec
mov
test
jecxz
xchg
leave
push
mov
dec
arpl
insl
jl
test
scas
xlat
jbe
and
lds
inc
jns
mov
mov
mov
in
outsb
mov
test
adc
xor
fdivl
sub
xchg
dec
pop
int
dec
adc
push
pop
inc
popf
movsb
lods
js
in
pop
adc
xchg
pop
jg
mov
pusha
and
add
push
and
xor
stos
push
jae
add
pusha
lock
fbld
dec
cld
ljmp
ss
push
aam
dec
pusha
lock
iret
inc
add
iret
xchg
adc
jbe
cmpsb
scas
mov
je
xor
xchg
and
imulb
inc
jae
sbb
addl
jg
jnp
js
dec
mov
sub
inc
pop
xchg
sbb
adc
sub
ror
mov
xchg
add
cmp
hlt
das
and
sub
xchg
mov
andl
sti
mov
mov
ljmp
shr
movsl
dec
test
mov
fsubrs
dec
movsb
and
scas
stc
cmp
ljmp
ret
out
pop
repnz
inc
dec
stos
mov
xor
fstpl
cs
add
xchg
mov
dec
push
mov
sub
cmpsb
lret
outsb
fmulp
jecxz
mov
jno
xor
outsl
jbe
mov
lds
ds
xlat
scas
pop
push
fistps
jne
pop
enter
sub
adc
dec
popa
enter
jo
subl
lea
out
mov
push
mov
jbe
mov
mov
loop
sbb
mov
icebp
data16
mov
insb
and
stos
pop
pop
js
nop
dec
std
sub
sbb
adc
mov
add
push
xor
cmp
mov
cltd
dec
mov
jae
sbbl
xchg
mov
xor
les
mov
dec
mov
sbb
xor
stos
xchg
fdivl
xchg
aas
test
push
pop
xor
mov
jle
inc
xor
imul
aad
pop
shrb
dec
dec
pushf
addr16
xchg
scas
sub
outsl
sub
xor
repnz
andl
push
sbb
cmpsb
or
cmp
mov
xchg
mov
xchg
pop
push
jnp,pn
and
jnp
je
loope
jl
sar
je
dec
pop
cltd
jbe
fs
insl
pop
out
cmp
add
aad
stc
jbe
nop
jbe
jle
pop
xorb
adc
pushf
shl
fwait
xor
shll
lods
cmp
add
movl
cmp
popf
in
out
cmp
testb
push
add
insb
mov
or
test
push
insb
adc
lea
fwait
data16
test
or
sub
mov
sub
push
dec
or
lret
mov
jno
dec
inc
cmp
dec
aas
sub
gs
pop
cmp
lods
push
clc
hlt
test
inc
add
fistps
repnz
pop
push
bound
nop
int
add
add
xchg
adcl
sub
lea
mov
and
push
ror
dec
pushw
ds
xor
jne
mov
cmp
xchg
jecxz
push
xor
xor
xor
push
fimull
mov
into
ret
in
xacquire
xchg
pop
and
mov
imul
cld
scas
out
jge
jecxz
pop
jb
mov
dec
mov
aaa
sub
cmp
inc
sbb
pop
sbb
ja
xlat
adc
lahf
jmp
andb
pop
mov
mov
int
roll
mov
pop
mov
imul
xchg
push
xor
loopne
cmp
pop
sub
fcomip
call
aam
mov
push
pop
test
out
pop
iret
cmp
nop
jbe
mov
rorl
sbb
nop
jbe
xor
addr16
jb
ret
popa
sbb
jg
inc
pop
sub
xchg
les
arpl
xor
bound
push
xor
xchg
repnz
cmpsb
fcompl
or
and
mov
add
shr
xor
fmul
in
adc
call
in
add
xchg
mov
test
imul
scas
push
push
fimuls
jge
cmp
std
or
addr16
scas
mov
fs
sahf
sbb
jns
fs
or
in
iret
jl
add
inc
sbb
dec
mov
cmp
je
cmp
mov
jno
cmpsl
dec
dec
pop
in
or
fdivr
dec
and
add
in
lret
fwait
aam
call
jo
cmc
jle
push
jge
and
test
sahf
sub
push
jns
sbb
sarl
cmp
mov
hlt
fcompl
and
or
sti
mov
test
sbb
pop
movsl
test
out
int
adcb
xor
leave
xlat
sub
incb
div
testb
push
daa
loopne
cmp
adc
scas
sub
mov
cmc
sub
inc
cmp
dec
test
mov
sbb
jns
insb
sti
loopne
fs
xchg
add
pop
push
mov
dec
jp
mov
dec
xchg
xchg
outsl
out
in
xchg
mov
sbb
ss
ljmp
movsb
out
mov
arpl
sahf
lock
cmp
sub
push
add
dec
test
mov
xchg
sbb
les
cmc
dec
cmc
adc
pusha
lret
pop
pop
std
or
push
imul
addb
mov
sbb
cmp
inc
or
popa
mov
or
movsl
daa
lret
incl
aas
aaa
jno
xchg
inc
xchg
inc
inc
xchg
in
dec
inc
push
subl
cmp
mov
nop
mov
call
and
xor
fisubs
daa
fbstp
push
jge
iret
xchg
mov
ds
loopne
xor
dec
sbb
notl
add
shll
xchg
and
mov
xchg
xor
push
jnp
mov
out
jmp
je
cmpsl
jp
cli
mov
add
ss
pop
jbe
mov
dec
out
push
and
dec
stos
test
add
dec
lods
stc
add
sub
mov
dec
popl
lods
insl
push
or
fsubr
mov
arpl
in
dec
rorl
out
cld
arpl
fwait
cs
rcrb
mov
jmp
mov
or
and
fs
jmp
stc
out
nop
mov
ret
sub
mov
incb
lahf
sub
sbb
flds
adc
int
inc
mov
inc
int
mov
es
dec
outsl
data16
dec
jp
pop
sub
and
push
sbb
aaa
xor
cld
xor
les
adc
push
add
sbb
lcall
subb
cltd
lods
out
mov
adc
pop
roll
adc
push
dec
outsl
daa
or
xlat
cltd
stos
sub
daa
push
ror
testb
out
mov
sbb
pop
cmp
or
ret
push
mov
test
cmp
jae
ficompl
hlt
jle
into
scas
fisttpll
dec
sbb
xchg
js
stos
int3
pop
dec
cmp
push
xchg
jl
mov
paddsb
xlat
int
aaa
and
dec
mov
arpl
mov
xchg
xor
bound
jl
stos
and
filds
lcall
xor
xchg
movsl
inc
dec
sti
adc
and
mov
add
cmpsb
leave
popf
inc
test
add
mov
in
in
add
clc
sbb
inc
cmp
lods
cli
ljmp
sub
sti
fstpl
pop
fistpl
push
fistpl
ja
mov
pop
js
in
xchg
iret
ficomps
sahf
pop
sub
ja
xor
js
outsb
push
push
or
mov
fists
inc
flds
inc
fcoml
jp
dec
outsb
push
movzwl
inc
mov
rol
push
sti
adc
mov
ds
jo
add
mov
push
fwait
aad
imul
mov
hlt
negb
mov
mov
lods
dec
test
pop
iret
cli
rcrb
push
cmp
xchg
pop
jecxz
pop
dec
cwtl
pop
jbe
pop
les
in
test
lahf
jo
cmp
push
cmpsl
int3
imul
loope
or
sbb
addl
ds
xor
add
inc
mov
je
es
and
dec
in
xor
sub
lods
sbb
sbb
jns
jge
pop
ss
shll
sub
or
adc
push
fdivrs
jl
leave
sarb
mov
xchg
fisubs
lahf
jnp
mov
push
cmpsb
js
jbe
ja
test
js
rorl
loopne
pop
int
rorl
jmp
stos
push
lret
sub
adc
jmp
call
push
add
mov
push
cmpl
rcrl
add
hlt
mov
incl
push
outsb
and
push
and
ja
mov
and
ds
mov
or
mov
inc
cli
hlt
adc
cmc
hlt
or
inc
mov
mov
cld
and
push
stos
ret
dec
inc
jnp
pop
and
inc
in
xchg
xchg
cmpsl
hlt
xor
pop
adc
jnp
fiaddl
xor
movsl
and
mov
xchg
dec
dec
repz
sbb
sahf
das
sub
push
in
xor
sub
and
ficompl
lret
cmpsb
adc
mov
cwtl
movsl
push
test
hlt
imul
idivb
cld
mov
cld
test
movsb
in
insl
test
add
in
push
and
insb
sbb
adc
push
pop
aam
idiv
inc
loope
jb
mov
xchg
mov
push
push
xor
mov
dec
xchg
std
and
push
jmp
and
jo
lret
aam
mov
dec
arpl
ret
mov
add
jmp
adc
les
xchg
sbb
test
adc
dec
fisubl
lahf
notb
lods
cmc
xor
adc
ret
repz
cmpsb
repnz
test
ja
push
sub
jno
stc
cmp
loope
mov
adc
jne
test
aam
push
jmp
popa
jb
mov
mov
ret
mov
push
rcrl
push
pop
pusha
fisttpll
movb
loope
xchg
mov
test
push
jmp
orb
or
in
pop
sahf
mov
cmpsl
sub
inc
cs
jne
fmul
lock
out
or
mov
mov
sbb
mov
mov
mov
sbb
jl
mov
lahf
inc
push
out
fidivl
bound
outsb
test
adc
imul
lret
mov
aas
mov
xor
jecxz
jle
loopne
fisttpll
fs
pop
daa
rcrb
mov
and
sub
out
cmp
mov
push
xor
lods
sub
outsl
jbe
mov
fstl
sti
dec
in
call
dec
add
jecxz
mov
fldenv
cmp
hlt
jnp
daa
pop
sbb
pop
xor
xor
push
lahf
sbb
jl
hlt
lds
ljmp
xchg
dec
pop
xchg
test
imul
das
pusha
jle
rcl
test
pop
ret
adc
hlt
xor
ljmp
push
xchg
cmp
push
push
cwtl
xchg
push
jp
push
mov
out
enter
call
mov
call
adc
repz
mov
jno
adc
loopne
shrb
out
test
in
xchg
pop
repnz
mov
pop
inc
mov
aas
stc
mov
or
or
insl
cwtl
out
cmp
add
mov
shrl
lcall
jp
fildl
inc
repnz
fdivr
nop
sub
scas
add
iret
cmc
add
xchg
popf
je
adc
mov
fdivl
out
loope
sbb
test
in
repnz
push
ja
dec
jle
sub
mov
push
and
jecxz
call
loopne
mov
adc
jns
js
mov
sub
sub
push
and
mov
or
and
shll
sbb
pop
push
cmp
out
cmpsl
add
pop
das
insl
addr16
cmpsb
aad
sbb
push
mov
inc
ficomps
imul
sbb
repnz
addr16
inc
movsl
sti
mov
out
mov
and
bound
push
add
stc
shrb
jne
fstpl
daa
xorb
movsb
call
and
mov
jb
pop
cmc
xchg
add
add
loope
cmp
cli
inc
hlt
stc
pop
jl
sbb
ss
mov
jno
inc
hlt
rcll
bound
andl
mov
inc
pop
lods
mov
orb
jl
testb
es
sahf
roll
jp
cltd
ret
dec
and
lods
pop
mov
mov
xchg
rorl
sbb
int3
daa
mov
test
iret
les
xchg
mov
or
sarl
imul
jge
push
jae
test
cmp
ret
std
push
mov
popa
dec
inc
into
push
push
loopne
mov
fcoml
imul
mov
sbb
jae
push
mov
mov
jnp
push
popf
sbb
test
aas
data16
dec
arpl
sbb
pop
jg
fisttpl
xor
repnz
pop
jno
sbb
mov
pop
sub
push
pushf
fistpll
add
pop
and
mov
or
iret
mov
frstor
fisubrs
mulb
add
out
lds
jecxz
fistps
pop
jg
fdivrs
push
xchg
lcall
repnz
xchg
mov
fucomp
mov
stc
popa
ret
push
or
repz
out
imul
mov
sub
and
jns
out
lret
ret
mov
fadds
jo
adcb
pushf
dec
movsb
clc
fs
scas
sbbb
sbb
push
xlat
and
shrl
dec
fistpl
aas
mov
inc
cmpsw
xchg
stos
jnp
movsb
lods
and
mov
stos
ror
addb
pop
inc
in
dec
pop
fld1
sbb
mov
and
xchg
fwait
movl
outsb
gs
fnstenv
adc
pop
jecxz
es
orb
pop
xor
jecxz
arpl
jle
mov
jae
push
lcall
test
xchg
shrb
xchg
jl
inc
pop
fldt
pop
inc
sub
inc
nop
mov
and
mov
or
fldt
into
inc
stos
pop
imul
negb
adc
pop
lret
loope
mov
dec
xorl
out
mov
sub
push
ret
push
stos
dec
and
scas
xor
mov
popf
inc
je
movsb
inc
in
inc
lret
in
add
jle
push
aaa
test
push
sub
cmpl
xchg
mov
jbe
outsl
sub
testl
fs
jl
cmp
inc
roll
scas
ljmp
or
mov
lret
pop
push
mov
push
nop
inc
cld
leave
dec
sub
out
idivl
cmp
adc
pop
jmp
pop
dec
cmpsl
in
or
dec
xor
movsl
movsb
mov
in
jbe
fimull
sub
subl
loop
mov
or
push
mov
add
mov
pusha
sbb
push
and
xchg
xchg
in
je
andb
jnp
por
cmpsl
lret
push
ds
xor
test
icebp
sahf
stc
jg
mov
pop
cmpsb
mov
inc
and
add
push
mov
and
fnsave
insb
andl
inc
xchg
int3
clc
cltd
jb
aaa
imul
inc
sbb
mov
sbb
mov
xor
es
test
jl
cltd
in
aas
repnz
mov
cwtl
mov
scas
aad
dec
jp
enter
lock
test
xor
call
adc
lods
inc
ljmp
push
insl
pop
sti
mov
sbb
faddl
xor
or
mov
cmp
daa
call
adc
sbb
sub
negl
mov
mov
adc
xor
push
pushl
adc
or
jnp
lret
adc
sbb
pop
lret
rcrb
push
loope
pushf
jg
cld
addr16
or
dec
adc
fidivrs
dec
add
rcll
push
lret
aas
aad
pop
leave
xor
adc
and
into
imul
inc
jbe
mov
dec
aas
jns
out
inc
xorb
xor
xor
pop
cld
mov
push
pop
lods
cmpsl
dec
pop
push
and
sahf
pop
clc
cld
push
dec
addr16
mov
fst
jle
ss
sbb
aas
and
adc
pop
jge
sbb
ror
arpl
push
ljmp
mov
cld
mov
addl
or
arpl
shr
in
mov
push
sub
xor
das
push
aas
sub
xor
mov
sbb
jp
mov
pop
mov
cltd
sti
sbb
inc
icebp
test
and
cltd
in
fdivrs
ja
popf
mov
test
cmp
lea
mov
insb
je
imulb
cmp
inc
in
mov
lret
mov
mov
jg
pushf
enter
mov
incb
nop
or
adc
fwait
lock
imul
aad
xchg
sub
pop
in
cltd
je
sbb
dec
mov
insb
mov
ss
ds
hlt
cmpsl
jnp
adc
andl
sub
fcomps
adc
cmp
pop
pop
fisttps
aaa
sub
lahf
push
add
jmp
dec
aad
or
mov
fldt
sub
sbb
clc
ffree
pop
mov
out
xchg
leave
scas
jns
and
nop
xor
cld
sbb
jb
int
repnz
xchg
push
push
jns
sub
lret
pop
icebp
fidivl
mov
sub
movsl
sub
push
ret
mov
inc
jne
pop
into
jmp
cmp
push
nopl
add
jo
loope
mov
rolb
jecxz
cmpsl
jo
mov
cmpsb
lret
fmull
rorl
fs
pop
leave
rcl
sbb
add
out
add
sbb
adc
inc
outsb
dec
out
and
scas
aam
mov
or
es
cmp
mov
loopne
sahf
adc
mov
or
push
sbb
leave
mulb
sti
mov
sub
cmpl
int3
mov
aaa
icebp
xchg
pop
in
xchg
mov
cmp
and
loop
mov
enter
sub
jp
sub
outsl
mov
in
sub
iret
jmp
into
lods
sbb
xchg
jbe
in
and
push
lea
loope
pop
test
bnd
jbe
mov
out
adc
xchg
mov
aas
push
insl
push
jge
xor
iret
pop
lods
in
pop
push
clc
int
mov
push
mov
adc
call
mov
mov
loop
iret
or
sahf
push
fdivrl
push
and
pop
daa
ljmp
push
sbb
add
fists
cmpsl
cmpsb
cmpsb
aas
mov
incb
or
mov
xchg
or
xchg
mov
add
xor
jmp
into
in
cltd
sbb
jl
loope
popf
inc
imul
inc
cmpsl
add
mov
leave
sbb
out
inc
je
nop
lret
outsb
cmp
mov
mov
add
cmpb
xchg
aad
pop
jecxz
divl
xchg
test
popa
ja
inc
insb
out
xor
push
iret
pop
pop
lods
ds
sbb
mov
imull
sub
xor
push
negl
add
mov
jb
bound
andl
dec
testb
flds
daa
mov
gs
in
bound
add
xchg
in
fdivrp
cld
sahf
jp
lock
mov
xor
and
inc
popf
sbb
mov
mov
lea
test
dec
cmp
xor
inc
sti
sbb
jno
inc
dec
dec
pop
shrl
pop
addr16
xchg
fstps
fcmovnu
std
testl
add
fistpll
ret
cmp
and
outsl
js
loope
cmp
adc
js
imul
push
aaa
pop
std
xor
lock
negb
xchg
inc
cmp
stos
cltd
xor
rcll
lea
xor
cmp
lahf
jmp
mov
loope
adc
jne
nop
gs
flds
mov
dec
in
enter
adc
nop
jg
std
notl
clc
data16
jge
mov
into
repnz
pop
iret
sahf
rcr
mov
xlat
repnz
loop
outsb
jae
scas
imul
jecxz
mov
cwtl
xchg
push
cmp
sub
jnp
ds
notl
inc
stos
movsl
push
out
mov
jae
cmpsl
daa
mov
jns
push
test
and
imul
fcomi
gs
imul
mov
mov
imul
dec
adc
cld
dec
shll
lcall
shrb
pop
jl
fs
xor
jp
cwtl
stos
les
push
dec
iret
inc
lahf
pop
push
mov
and
fs
shl
arpl
sub
mov
jne
pushf
xchg
jnp
xor
xchg
nop
push
jmp
mov
cld
sub
je
add
jge
add
shll
out
imul
loop
lahf
adc
jmp
or
push
jge
insb
mov
std
js
mov
fstl
arpl
cmp
sbb
test
test
aaa
cmp
mov
pop
sub
rorb
inc
dec
xlat
icebp
aam
adc
arpl
nop
push
in
jnp
cs
sub
inc
iret
cmp
inc
bound
cmp
xchg
shlb
or
adc
mov
mov
stos
cmp
leave
mov
dec
jbe
inc
lahf
sub
or
mov
push
stc
cld
shrb
xchg
xorl
mov
sub
dec
icebp
jne
cmp
push
dec
enter
fstps
mov
cmp
arpl
stos
mov
lret
gs
mov
in
imul
lods
xor
faddl
iret
pop
shll
or
push
mov
mov
jl
inc
mov
shll
into
add
outsl
adc
insl
cmp
clc
and
incl
mov
push
adc
loopne
inc
rcrl
je
pop
or
mov
xor
negb
ljmp
lret
push
mov
nop
shll
xchg
mov
test
mul
sbbl
cmp
jb
lret
insb
pop
pop
dec
es
hlt
inc
add
add
adc
mov
jl
add
mov
inc
pop
stos
lods
mov
cltd
ja
pushf
int3
lock
sbb
add
pop
daa
or
or
out
insl
sar
mov
das
std
cmp
lods
and
rcrb
je
scas
xchg
push
inc
xor
mov
out
lret
add
enter
dec
icebp
dec
call
inc
pop
gs
adc
outsl
sbb
movsb
push
stc
ljmp
mov
add
sbb
cld
inc
inc
inc
mov
popa
ret
ret
cwtl
pop
mov
jle
scas
inc
arpl
sub
in
shll
or
scas
pop
and
int
pop
loopne
mov
sub
popa
cmp
pop
jne
jmp
pop
fisubrs
insl
adcl
ret
es
in
inc
icebp
xor
inc
sti
inc
into
adc
inc
push
sub
mov
inc
cld
cmp
dec
int3
pusha
data16
push
les
inc
mov
lret
pushf
sti
push
mov
xchg
jae
lods
fdivrl
fiaddl
mov
packssdw
or
add
xchg
mov
cmp
add
into
and
cmpsb
dec
dec
or
and
fidivrl
je
or
xchg
sbb
xor
test
and
movsb
pop
inc
jbe
sub
inc
add
mov
addr16
aad
int
mov
xchg
mov
lcall
inc
fsub
pmaddwd
repnz
scas
xchg
fwait
mov
fstpt
or
xor
ret
ss
push
dec
and
jb
aam
lret
push
repz
call
in
cmp
xchg
sub
mov
push
arpl
add
out
cmp
arpl
inc
dec
dec
cmp
icebp
inc
repz
sub
xchg
xchg
or
loope
aaa
mov
jbe
mov
es
lea
test
inc
and
pop
push
xor
sbb
rorb
push
shrb
jne
test
or
xor
inc
insb
mov
int
adc
cld
pop
lea
repnz
sbb
pop
iret
lret
repnz
scas
inc
dec
or
leave
jne
lahf
jno
or
movsl
shrb
cmpsb
push
dec
pop
mov
adc
js
jmp
xor
enter
xor
sbb
push
lret
insb
jg
scas
rcl
nop
inc
push
push
jge
sbbl
jge
jmp
xor
or
cli
fldl
mov
inc
ror
imul
stos
and
ja
sbb
cmp
jb
add
add
cli
sbb
jg
mov
and
sahf
dec
xor
xor
pop
fwait
mov
mov
out
sahf
and
mov
mov
fldt
scas
cmp
mov
dec
out
shlb
out
push
and
or
ljmp
subl
scas
loopne
loop
sahf
into
mov
mov
push
jns
mov
pop
js
jae
push
xor
jmp
xchg
xchg
pop
inc
in
xchg
mov
repz
jo
arpl
in
mov
test
or
mov
cmpsl
or
add
jo
pop
lock
inc
cmpsl
xchg
aaa
cmp
push
lock
mov
jecxz
movsl
xor
out
cmp
jo
test
jg
jg
adc
iret
int3
xchg
pop
ja
inc
cmp
jge
push
jp
push
mov
setae
jecxz
repz
add
pushf
jbe
shlb
out
cli
xor
testb
mov
dec
mov
inc
inc
scas
xchg
cmp
ss
push
repnz
cmpl
sbb
lds
add
rorl
scas
sbb
test
leave
psubusb
jbe
inc
cwtl
add
jns
scas
cli
shll
inc
scas
push
sub
cmp
cwtl
out
push
pop
jo
xor
push
xor
mov
fimull
stos
push
pop
test
adc
push
mov
jl
push
mov
pop
mov
mov
mov
out
cmc
mov
cmp
sbb
mov
xchg
mov
jl
push
shrl
outsl
outsb
sbb
sbb
jmp
in
cmp
mov
mov
mov
inc
cs
xchg
rolb
sub
and
xor
fwait
jecxz
jmp
dec
icebp
fxtract
pop
add
es
mov
out
mov
mov
xchg
dec
lock
sarl
jne
lret
bound
aad
in
arpl
pop
or
dec
mov
add
mov
add
bound
shlb
cli
push
hlt
sbb
lret
ret
inc
dec
repnz
in
or
sub
into
mov
mov
or
ret
jno
sbb
xor
call
xchg
in
das
mov
mov
pushl
xchg
sarb
aad
imul
das
in
adc
rcr
lret
jmp
out
dec
ret
pop
cmp
insb
mov
movsb
bound
test
jl
jl
test
int3
ror
adc
inc
cmp
and
out
dec
and
jns
jae
imul
jae
out
in
sti
subb
icebp
pop
jg
cmp
fisubrs
bound
cltd
cs
scas
mov
jnp
sbb
cmp
pushf
inc
aad
outsl
sbb
jl
push
and
cltd
movsl
cmp
fmull
pavgb
jmp
fcoml
scas
mov
sbbb
insl
into
es
push
and
jmp
cltd
ds
shll
into
cmp
pop
sbb
scas
mov
cltd
jno
cmp
fmull
push
sbb
add
lahf
dec
imul
jae
arpl
xchg
pop
and
mov
mov
mov
in
jnp
testb
fldl
xchg
mov
enter
cmp
dec
jmp
pop
xchg
pop
shlb
stos
jno
add
sub
xchg
jecxz,pt
shrl
lcall
clc
dec
lods
fdivr
push
ror
cmp
adc
mov
test
jg
loope
add
cmp
mov
mov
jno
test
xchg
rcrb
lret
jmp
or
xchg
push
mov
lret
sub
adc
lea
fisubl
pushf
inc
lret
mov
add
in
pop
fs
ret
mov
or
lods
xchg
dec
stc
inc
lods
xor
sub
sbb
xor
mov
xchg
adc
adc
push
enter
sahf
and
faddp
inc
add
filds
imul
sbbb
aam
rcl
mov
pop
sti
push
aaa
mov
xchg
jge
jmp
pusha
dec
xchg
mov
outsl
lods
fdivr
push
mov
pop
ss
mov
push
mov
xor
shlb
mov
adc
mov
dec
enter
repz
jns
sub
cmpsb
mov
loop
rcrl
xchg
dec
scas
gs
loope
inc
jle
jge
sti
enter
fbld
leave
pop
push
add
sbbl
xor
and
fcmovu
cmpsl
push
into
scas
mov
aad
das
aad
ret
ret
add
xor
push
inc
shr
loope
test
xchg
push
je
jg
adc
cmp
orl
lods
movsb
or
out
push
test
aam
insb
and
cmc
shlb
adc
icebp
cli
repnz
movsl
push
dec
jo
mov
mov
out
stc
adc
lea
bound
cs
sbb
das
xchg
push
mov
test
inc
mov
xchg
push
in
pusha
sbb
call
lret
js
or
gs
arpl
pop
pop
xor
sbb
or
xor
popa
cwtl
ret
jae
cmp
imul
cmp
jne
stos
addr16
sbb
inc
lret
cvtpi2ps
sbbl
jne
mov
or
mov
inc
ret
es
rclb
sarl
xchg
dec
xchg
inc
push
into
jns
mov
sbb
add
lcall
les
and
cld
sub
movntps
les
mov
inc
mov
jle
jo
js
push
inc
popf
test
inc
in
pop
bound
mov
cmp
lret
rcrb
out
dec
fwait
push
xor
adc
insb
adcl
cmc
imul
repnz
popf
mov
je
into
aas
movsl
cli
mov
fwait
mov
jge
push
aam
icebp
loopne
clc
pop
or
mov
or
push
inc
mov
ret
loop
xchg
cwtl
adc
mov
lret
and
or
divl
adc
mov
jae
xor
dec
push
push
or
sarb
stc
mov
mov
pop
adc
sbb
mov
sbb
aas
cmp
push
inc
jecxz
enter
sbb
adc
inc
jns
out
jb
lcall
aam
addr16
sarb
or
addr16
out
cltd
lret
out
mov
test
ficompl
jge
inc
dec
ds
pop
lcall
mov
call
xor
jp
std
cmpsb
hlt
push
icebp
add
pop
scas
add
and
mov
or
inc
das
xchg
int3
into
push
sub
gs
outsb
pop
jle
enter
fs
rcll
xchg
das
xlat
popa
push
ds
inc
jg
mov
rorb
test
fistl
sbbl
xchg
jmp
repnz
js
push
mov
add
stos
mov
clc
or
mov
stc
int
or
call
sub
mov
mov
arpl
int3
ffree
sub
and
mov
push
aaa
push
sahf
sub
adc
sub
jns
out
les
mov
and
cmpsl
and
fiaddl
cmp
movsb
xacquire
push
mov
jg
or
fistpl
jno
jo
and
nop
mov
inc
movsl
mov
movsl
dec
call
push
add
xchg
mov
aam
bound
shrb
mov
insl
push
xorl
popa
and
rcrb
js
xchg
xor
and
mov
stos
inc
sbb
xlat
arpl
in
add
sbb
xchg
in
push
test
dec
arpl
jge
stc
ljmp
dec
and
in
push
movsl
jbe
mov
add
mov
push
in
flds
sti
pop
test
in
mov
xchg
rclb
lods
dec
sbb
filds
je
jo
scas
and
popa
or
xchg
xchg
xlat
adc
out
inc
jb
pop
mov
jmp
hlt
lret
clc
mov
into
mov
lock
add
insl
jp
add
or
out
je
imul
push
mov
jbe
xor
icebp
loopne
jg
imul
xor
cltd
es
cmc
addl
jp
cmc
add
mov
ret
xchg
repnz
hlt
xor
cmpsl
xchg
lar
ss
ljmp
movsb
cltd
shlb
pop
mov
shlb
test
daa
or
jecxz
movsb
adc
push
outsb
pop
fs
pop
or
lret
pop
push
mov
imul
clc
and
xlat
mov
hlt
push
jle
jae
and
aam
push
sub
sarb
xor
or
cmc
aas
pop
mov
jmp
push
dec
adc
mov
jmp
inc
pop
shl
cmp
lret
loope
outsl
insb
icebp
lcall
push
pop
lea
xor
insl
or
mov
popf
ljmp
xorl
test
push
jnp
cmpsl
xor
movsl
ret
jo
or
lock
pushf
or
out
fsubrs
sbb
inc
cmpsb
push
cmp
xor
adc
ja
dec
jbe
rcll
fcoms
lock
pop
lea
add
xchg
inc
adc
adc
nop
sahf
stos
jg
add
into
sub
sbb
js
dec
cmp
aam
mov
or
push
rorl
bound
js
daa
out
roll
incl
pop
scas
pop
cmp
call
push
add
testb
xor
pop
add
mov
mov
shlb
pop
ficoms
jmp
outsl
mov
inc
fisubl
dec
cmp
std
fwait
jge
mov
daa
das
mov
inc
loopne
ja
xorl
sbb
das
mov
jbe
jb
or
ret
xchg
mov
rorb
and
xchg
mov
cmpsl
dec
shlb
xchg
mov
pusha
rol
loope
mov
jno
int3
adc
xor
xchg
dec
insb
cmp
fcmove
mov
pop
pop
jg
dec
rcrb
lahf
jle
and
data16
cld
clc
add
sub
sbb
xor
xor
add
in
jmp
pop
pop
jp
mov
push
xchg
sbb
cwtl
mov
mov
sti
mov
arpl
insl
jmp
xor
dec
mov
cmp
outsb
mov
pop
jmp
xchg
lret
and
add
mov
mov
stc
int
lret
jge,pt
rcl
lret
fbstp
and
lret
and
push
js
and
jno
push
mov
outsb
jecxz
mov
mov
rolb
inc
es
cwtl
and
stc
dec
push
rclb
push
repnz
out
dec
jo
ja
xchg
or
mov
orl
push
ljmp
cmpl
or
jne
jmp
jns
mov
fwait
hlt
cmp
mov
pop
sarl
jb
or
movsb
test
imul
fdivrs
addr16
ds
mov
dec
pop
push
xor
mov
scas
jae
or
pop
add
cmp
jle
iret
je
xlat
aad
stc
aam
cmp
je
and
movsl
shl
jge
loope
inc
or
jnp
clc
inc
mov
pop
ret
sbb
jmp
mov
addr16
aas
jbe
test
and
cmpsb
in
xchg
inc
std
gs
je
push
push
xchg
and
pop
ficomps
dec
push
lds
stc
ret
imul
jl
push
jg
test
scas
xor
adc
shrl
sbb
imul
xor
mov
mov
inc
pop
and
into
xchg
or
xchg
pop
int
adc
test
xchg
ss
das
mov
inc
xchg
xchg
out
test
popa
ret
push
fisttpll
inc
jmp
xchg
adc
jp
push
pop
inc
jns
pop
or
stc
jne
lock
add
pop
jg
bsf
in
mov
mov
push
jmp
adc
mov
jns
push
mov
jle
icebp
or
mov
cltd
mov
cwtl
sbb
cmpsb
pop
cmp
lret
pop
cwtl
iret
xchg
ficoms
add
shll
sub
jp
mov
dec
lcall
jo
aas
sti
sub
jg
dec
data16
adc
popf
push
decl
inc
jl
aaa
sub
idivl
gs
js
lcall
sub
outsl
stos
jb
out
in
cmc
neg
cltd
fsubl
roll
cmp
cmp
inc
pop
xor
adc
sbb
jmp
push
outsl
push
xchg
xchg
mov
out
test
das
and
sahf
scas
jmp
push
lods
test
mov
out
enter
insb
js
dec
cwtl
cltd
sbb
fstpl
push
inc
push
shrl
in
or
cld
pop
test
mov
ficompl
jb
push
aaa
lock
and
lods
ds
fldt
jge
cmp
add
push
shr
xor
add
push
dec
in
pop
lret
xor
or
fbld
cwtl
jmp
adc
in
xor
insb
jnp
punpckhwd
shlb
hlt
sbb
push
ljmp
sbb
cmp
aam
adc
mov
shlb
cltd
add
cmp
lcall
rcrb
rol
pop
and
loope
cld
int
inc
sahf
xor
fdivl
bound
leave
push
fucomp
and
dec
mov
adc
xor
lds
push
pop
sub
pop
loopne
movsb
xchg
sub
out
enter
cmp
fimuls
das
inc
xchg
jne
pushf
jg
mov
insb
xor
pop
sarl
xchg
movsb
jo
stos
jmp
dec
xor
andl
inc
pop
dec
sahf
push
test
sti
cs
dec
sub
mov
inc
fdivl
add
sub
loopne
test
je
xor
pop
enter
cltd
enter
aam
jmp
lds
loop
in
pop
inc
mov
js
lret
fwait
mov
iret
std
inc
jmp
pop
or
int3
mov
xchg
pop
ljmp
fs
repnz
sub
or
jns
repnz
sub
mov
pop
push
mov
pushf
dec
addr16
repnz
mov
enter
pop
out
mov
lods
adc
add
dec
iret
push
add
xorb
es
mov
cwtl
lea
clc
scas
push
bnd
enter
ljmp
and
loop
enter
ror
mov
ret
fs
dec
mov
pushf
pop
dec
into
mov
fbld
mov
lock
or
xchg
pop
cmc
cmpsb
cmp
sbb
rcl
test
sahf
jnp
mov
rcll
pop
mov
cmp
lock
fs
push
mov
jecxz
mov
out
pop
jno
sub
push
xor
and
mov
dec
rclb
adc
out
fstpl
fcompl
aad
pop
mov
and
inc
loopne
movsl
mov
or
lods
iret
adc
popf
lods
std
or
mov
fldt
pop
pop
in
bswap
insl
stc
xor
sub
xchg
pop
lret
push
arpl
mov
test
jmp
push
jle
sbb
rcl
fdivrs
dec
out
inc
ret
sarl
popf
nop
pop
sbb
in
les
xchg
lods
xorb
mov
mov
lret
xchg
jl
cwtl
sub
mov
push
inc
mov
mov
fwait
decb
mov
push
shr
les
dec
cmp
inc
ret
jnp
dec
xlat
insb
pusha
mov
push
aaa
or
jmp
add
rclb
mov
lea
cwtl
in
popa
insb
jo
add
xchg
repnz
sub
sbb
test
iret
test
add
enter
push
or
lcall
pop
mov
ss
xor
mov
inc
pop
and
ds
shll
jp
mov
cmpsl
push
repz
fisubs
mov
jle
cmpsb
jne
adc
scas
jle
push
mov
xchg
adc
mov
clc
enter
pop
xchg
jecxz
stc
push
stos
push
mov
and
shl
rcr
fisttps
fcomip
sub
mov
jns
or
add
xchg
mov
icebp
jp
jl
jmp
xor
mov
iret
fsubrs
mov
rcrl
cmp
inc
or
sbbl
mov
popl
add
push
xchg
mov
or
xor
or
sub
test
test
or
ret
dec
or
popf
fimull
mov
test
push
inc
adc
int
iret
inc
lock
subl
mov
cmp
mov
cwtl
lods
rclb
ret
cld
xor
dec
cwtl
into
adc
mov
jp
mov
sub
outsl
pshufw
in
jnp
out
sbb
cli
push
adc
cwtl
repz
movsb
xchg
fiadds
lods
out
and
lds
enter
jb
dec
aaa
ror
dec
ss
or
out
inc
icebp
cmp
out
sub
or
xchg
xchg
stc
loopne
jecxz
pop
add
xor
cmp
enter
call
in
pop
and
sti
jo
push
cmc
xor
mov
and
pusha
test
clc
daa
sti
jge
aam
aaa
shll
sub
movsl
lcall
popf
shlb
add
xor
mov
xor
pushf
insb
lds
sub
xlat
add
and
test
lcall
adc
in
adc
sbb
adc
lcall
fmulp
imul
ret
and
loopne
pop
dec
cli
jl
daa
cwtl
dec
int
mov
daa
out
ljmp
xor
push
push
inc
jno
jb
push
xchg
js
adc
stos
inc
or
leave
out
arpl
jp
je
dec
mov
jns
mov
pop
cmpsb
inc
xor
stos
out
mov
rcrb
push
in
ficompl
mov
sbb
sbb
jp
sbb
aaa
pop
insl
mov
data16
add
or
sbb
inc
aam
mov
jg
and
mov
and
jl
mov
mov
shrl
mov
cltd
incw
das
imul
bound
cmpl
xchg
pusha
out
add
les
cmp
mov
or
or
xor
cmc
jbe
sti
jmp
sub
and
repnz
sbb
stc
push
jo
push
ss
jmp
test
mov
std
in
inc
sub
mov
adc
dec
mov
inc
mov
sbb
ret
stc
mov
xchg
jl
jae
addl
out
mov
xchg
push
add
jbe
push
dec
outsl
adc
cld
fsubrl
cmp
dec
imul
loopne
cmpl
dec
inc
push
call
xchg
mov
fucom
cs
pop
xor
rclb
mov
test
mov
mov
aad
push
sub
sarb
into
stc
lcall
jns
push
xor
insb
dec
call
xor
push
cmp
imul
add
dec
daa
cmp
rcl
lds
test
or
filds
cld
adc
sbb
aad
outsb
sbb
push
jl
stos
mov
idivl
pop
stos
nop
cs
leave
test
jp
pop
push
roll
rorl
dec
in
mov
and
cwtl
mov
fldcw
fwait
add
lcall
push
popf
inc
pusha
mov
leave
mov
dec
aas
in
aas
rcr
xlat
push
cmp
mov
mov
orl
ds
out
imul
pop
lods
fcomp
cmpsl
aaa
rorl
popa
dec
mov
mov
in
jge
pusha
test
or
loopne
testl
jmp
stos
dec
adc
mov
arpl
cmp
jle
push
adc
add
jmp
in
cmp
or
loop
jnp
out
dec
orb
ss
mov
aad
xchg
in
out
cmp
call
sbb
ret
mov
cmp
and
mov
pop
sar
push
push
scas
cltd
push
mov
je
out
cmpsb
xorb
mov
xchg
mov
and
out
pop
mov
sbb
bound
out
adc
je
lret
subl
imul
push
ret
inc
mov
xchg
cmc
adc
mov
mov
in
jecxz
imul
mov
loopne
sub
jmp
ror
loop
xchg
mov
or
push
inc
repz
out
pop
push
outsb
jno
adc
pop
lods
movsb
lret
push
jmp
inc
repnz
loop
test
xchg
repz
push
jb
mov
iret
daa
inc
mov
into
out
shrl
sbb
test
dec
popf
sub
jb
bndstx
in
pushf
adc
popf
xor
aad
mov
or
push
icebp
lds
inc
push
sbb
lods
jb
sbb
push
test
gs
fstps
icebp
adc
jb
pusha
je
loop
cwtl
dec
loopne
dec
xchg
jns
pop
adc
cmc
jecxz
out
lret
rcr
sarl
pop
aam
or
adc
mov
loopne
jne
pop
pusha
sarl
jnp
lds
sbbl
popf
gs
push
lea
mov
rorl
pusha
mov
popf
jg
ret
xor
pop
dec
add
mov
movl
int3
outsl
fwait
cwtl
je
cmp
cmpsl
inc
jb
movb
sbb
or
jge
fldl
call
sub
popf
or
and
xchg
int
adc
and
mov
xor
data16
into
std
getsec
pop
nop
adc
dec
push
mull
out
adc
jmp
insb
pusha
fdivrs
stc
mov
int3
imull
enter
sti
sub
adc
inc
clc
fbld
rcr
cmp
adc
jbe
pop
dec
cld
mov
sbb
clc
or
or
aas
mov
je
pop
ds
je
adc
stc
iret
aad
pop
in
pop
faddl
lret
xchg
dec
pop
into
jns
aas
ljmp
or
xchg
hlt
fisubl
shlb
cmp
int
mov
inc
push
cmp
dec
dec
adc
arpl
inc
out
and
test
js
bound
subb
pop
fisubs
push
fs
rolb
cmpl
xchg
shrd
xorl
push
sbb
hlt
and
mov
loope
fisttpl
insl
jg
leave
push
cs
lea
sbb
pop
mov
test
push
jns
pop
push
scas
mov
add
repz
scas
int3
fs
and
mov
inc
dec
out
outsl
lods
mov
push
jns
arpl
mov
lret
lea
adc
gs
and
mov
mov
push
push
inc
js
push
xchg
aam
jo
xlat
shl
mov
sbb
ficomps
out
movsb
insb
cld
dec
or
mov
rclb
jo
lods
cmpsl
mov
push
and
pop
xchg
mov
pusha
jecxz
push
movb
cvtpi2ps
gs
out
xor
js
dec
ss
addl
push
inc
scas
insl
jg
test
cmpsl
and
xchg
pusha
arpl
mov
repz
nop
jno
xor
icebp
movsb
out
fidivrs
repz
aam
push
inc
and
xchg
icebp
and
in
jge
xor
fdivl
aas
loopne
fisubrs
ffree
mov
sbb
or
jae
icebp
addr16
loope
int3
mov
nop
loop
aam
test
and
push
pusha
mov
push
cmpb
push
in
out
and
pop
popa
jmp
out
dec
lock
icebp
sarl
in
call
rcr
add
outsb
mov
jns
enter
adc
sub
mov
js
leave
cwtl
bound
mov
aad
in
cwtl
in
aad
jl
into
inc
mov
loope
adc
fs
or
pop
jnp
jbe
mov
jbe
inc
pop
lahf
cltd
into
sbb
fidivl
test
fadds
aad
cld
add
mov
xchg
sbb
push
rcrb
mov
or
xchg
adcl
dec
add
testb
rcr
rol
cmp
js
mov
push
rolb
fidivs
push
add
mov
rorl
mov
mov
aad
seto
pop
and
das
bnd
dec
add
mov
sbb
lds
fwait
popf
xchg
pop
sarl
xor
adc
jno
xchg
mov
and
fcoml
popl
iret
movsb
mov
repz
jns
fdivrl
xchg
jp
push
sub
dec
popf
movsb
aaa
movsb
inc
add
dec
mov
pop
into
inc
leave
outsl
stos
dec
pop
sub
rorb
mov
adc
cltd
xor
inc
and
fwait
arpl
lea
sti
mov
pusha
clc
leave
dec
sub
inc
xor
cli
cmp
imul
mov
jg
insb
sbb
jne
movb
xchg
dec
adc
xchg
les
popa
adc
lock
iret
jg
push
ret
aam
mov
fucomip
or
roll
jae
js
sbbb
es
xor
xchg
dec
mov
and
push
ret
push
xlat
fcmovnb
adc
sub
xchg
sahf
push
jnp
xchg
jmp
xlat
adc
test
mov
mov
in
bound
int
aam
sbb
mov
ret
dec
bswap
pop
pop
fld
cltd
lret
repnz
data16
push
xor
sahf
mov
iret
jmp
adc
xor
dec
mov
lret
push
dec
dec
add
pop
xor
pop
and
xchg
sbb
mov
pop
repz
push
rcll
js
sub
call
push
sbb
add
shll
sub
clc
inc
mov
xlat
mov
roll
cmp
popf
movsl
mov
jmp
lcall
addr16
test
lods
fiadds
sub
mov
idivl
xor
pop
je
es
nop
repz
add
mov
fstpl
push
mov
in
jecxz
sub
cltd
sub
jo
add
sub
dec
mov
lods
push
lods
pop
mov
or
pop
inc
jge
xchg
inc
xchg
hlt
repnz
mov
into
cmc
jge
mov
mov
pop
popf
add
mov
lret
out
sbb
ljmp
or
lret
bound
ss
cmpsl
in
insb
adc
aaa
push
sub
testb
nop
outsb
in
dec
call
test
sahf
fiaddl
sub
lea
sahf
std
testb
xchg
pop
clc
aad
cmp
mov
sbb
in
cmp
jne
push
jbe
testb
orl
movsb
sub
je
ret
push
stos
daa
jno
data16
test
mov
xor
jbe
jb
xchg
arpl
xchg
push
es
pop
fiaddl
sbb
jae
add
call
pinsrw
insb
and
fldl
jle
jne
cmpsb
lahf
stos
pop
ss
cmp
xchg
mov
xchg
shrb
or
mov
sbb
lods
out
sbb
imul
inc
bswap
jne
push
mov
sbb
mov
xor
divl
inc
cmp
imul
in
mov
scas
addl
test
inc
or
push
mov
jno
adc
sbb
add
add
cmp
into
inc
mov
xor
sub
subb
daa
ficompl
insb
iret
pop
cmp
xlat
sti
push
hlt
lea
jae
push
pop
shlb
and
sbb
hlt
mov
sti
add
add
mov
test
cli
out
inc
fcoms
lcall
fidivrl
test
mov
les
pushf
sbbb
filds
xor
mov
cli
mov
shlb
xor
sub
and
in
dec
repnz
in
cmc
imul
cmp
jg
mov
and
mov
inc
dec
pop
xorb
orb
ja
mov
dec
addr16
ja
aas
inc
cmp
mov
xor
roll
xor
leave
lods
lods
popa
scas
xchg
psrlw
mov
pop
stos
pop
mov
nop
adc
negb
outsb
outsl
icebp
test
scas
stc
popa
push
and
mov
cmp
iret
daa
arpl
jg
in
inc
stos
jae
into
sub
lea
mov
fucomi
mov
mov
mov
dec
inc
lcall
cmp
jl,pn
sub
loopne
sti
enter
jbe
and
repnz
sbb
ret
mov
dec
icebp
xor
mov
mov
push
popa
dec
mov
add
fldcw
int3
fbld
arpl
ss
mov
pop
pop
push
pushf
in
es
push
loop
loop
jmp
adc
nopl
in
fstpt
xchg
or
cmp
add
mov
xor
fisubrl
leave
frstor
movsl
int3
std
or
hlt
clc
mov
testl
out
pop
lahf
outsb
adc
imul
out
mov
xchg
aas
mov
or
cmp
out
mov
cmp
fistps
enter
mov
push
ffreep
cmp
loop
pop
in
xchg
push
inc
je
imul
push
addl
xor
mov
lea
scas
call
add
add
out
cmp
js
out
or
test
aas
jbe
popl
scas
mov
aam
mov
jnp
cmp
test
aaa
mov
iret
mov
add
jle
push
data16
xchg
adc
sbb
in
ffree
roll
push
rcr
jg
or
rolb
sub
push
inc
outsb
pop
push
fwait
push
lds
int3
mov
push
daa
inc
sbb
cmp
xor
movsl
jae
sub
lahf
outsb
sbb
cmp
jns
fwait
mov
shlb
push
shrb
cmpsb
orb
xchg
aaa
xchg
movsl
mov
clc
aam
pushf
aaa
add
cld
sar
jo
addb
cmp
xor
and
out
fdivrp
outsb
and
jl
cmpsb
ret
mov
rorb
inc
call
mov
mov
push
xor
subl
sbb
xchg
stos
test
shlb
cli
jae
xchg
pop
adc
gs
fsubl
and
inc
bswap
add
pop
xchg
dec
rolb
cld
add
adcl
lods
icebp
mov
mov
fsubrp
rep
cmp
push
or
adc
lcall
pop
cwtl
cld
adc
pop
jo
rcrb
xchg
clc
fwait
inc
push
mov
pop
adcl
push
push
or
sahf
xor
shl
mov
fiaddl
pop
sub
adc
and
cmpsl
ret
inc
lahf
mov
fcmovnbe
cmc
inc
loope
adc
lret
adc
dec
daa
sbbl
push
scas
pop
or
cli
mov
loop
pop
fdiv
outsl
pop
gs
and
xchg
push
out
lds
inc
aad
lds
and
xchg
mov
fadds
scas
mov
dec
dec
inc
mov
sbb
fistps
sub
outsb
test
movsl
mov
xchg
xor
shll
out
inc
sbb
mov
or
mov
rcl
pop
sbb
lods
cmp
or
or
imul
push
sub
scas
lods
mov
mov
flds
out
xlat
mov
lds
idivb
push
xor
bound
fstpl
test
pushf
popa
xchg
inc
hlt
test
loopne
adc
mov
out
out
test
sahf
xchg
cmc
xor
xor
loopne
in
mov
inc
jnp
mov
les
das
and
cmpsb
mov
mov
sahf
sti
ds
push
pusha
fisttps
popf
stos
xchg
test
or
notb
ljmp
popf
aad
cmp
mov
leave
int3
mov
out
lret
mov
mov
xchg
mov
in
and
adc
jp
leave
cli
xor
popa
aaa
sbb
daa
mov
pop
pop
andl
cmpsl
mov
sub
pop
jbe
xchg
jbe
jno
movsb
xor
testl
or
into
cld
sbb
aad
jmp
dec
add
cmc
adc
jecxz
mov
mov
push
cmpsb
pop
and
loopne
pop
pop
inc
xor
xor
outsl
or
repnz
test
inc
jmp
loope
xchg
sub
scas
scas
imul
mov
rcll
pushf
loope
mov
or
push
aad
loop
jo
jecxz
ss
mov
scas
ljmp
sub
call
xchg
int
int
jno
push
mov
out
cs
aam
mov
xchg
std
xor
shll
fdiv
leave
loope
mov
sub
into
and
int3
mov
movsb
or
dec
and
adc
rcl
mov
je
pop
mov
cmp
and
std
gs
jno
mov
imul
mov
or
dec
and
jle
push
push
xor
xor
sahf
cltd
inc
xor
inc
cld
ss
data16
adc
in
mov
sbb
mov
mov
mov
push
or
cmp
push
add
fs
mov
icebp
pop
jb
movsb
adc
xor
sarl
je
sub
adcl
in
ljmp
gs
add
sti
enter
imul
jb
scas
xchg
adc
popf
mov
push
clc
jns
in
mov
xchg
inc
pop
out
dec
pop
loope
xorps
stos
in
xchg
inc
fs
pop
jmp
jb
fmuls
or
inc
in
add
icebp
inc
jl
std
add
and
adc
add
js
and
add
fisttpl
xchg
add
call
test
xor
stos
in
cmp
sbb
std
adc
dec
bound
rcll
and
cltd
pop
xchg
cmp
fwait
outsb
push
push
inc
es
mov
add
test
adc
jmp
fadds
pop
rol
mov
pop
sub
or
and
push
mov
mov
sbb
leave
iret
adc
movsl
call
clc
imul
outsb
dec
test
xor
scas
stc
fidivs
loope
movsb
jg
stos
mov
fs
dec
mov
xor
fbld
lahf
call
sbb
cltd
adc
push
inc
xchg
enter
adc
adc
xor
xchg
jne
mov
cmc
pushw
adc
incb
add
pop
ja
jae
add
push
outsl
inc
lea
xor
das
cltd
sbb
ljmp
or
xchg
pop
xchg
xor
jb
sub
aam
push
enter
sbb
adc
lds
pop
mov
cmp
call
or
addr16
cmpsb
cli
mov
cld
sbb
loopne
sahf
ja
mov
xorl
and
push
fiaddl
out
cmp
test
pop
dec
jb
inc
cs
icebp
cmp
add
push
xchg
scas
pop
xchg
jno
push
add
xchg
sbb
lods
mov
mov
mov
cld
sub
outsb
daa
mov
and
dec
inc
out
sbb
rcl
mov
dec
repnz
shr
scas
jmp
ja
cmovg
sub
xlat
arpl
bound
in
iret
or
adc
rcr
sub
clc
xchg
mov
mov
push
or
adc
icebp
sub
jg
pop
jne
mov
add
mov
stc
fs
mov
jl
inc
mov
pop
imul
sub
sahf
data16
mov
and
mov
sarb
shr
dec
push
mov
loope
lods
xlat
pop
lcall
inc
mov
push
sub
das
jg
cs
jb
pop
popa
jo
cmp
mov
shl
imul
das
push
leave
push
adc
jle
adc
or
add
rcr
fsubrs
andl
jmp
cmp
mov
or
mov
add
mov
ret
mov
inc
aad
fs
mov
cltd
rorl
adc
out
push
leave
sub
inc
pop
sbbl
cli
imul
xor
clc
shlb
pop
pushf
loope
imul
inc
jge
aam
pop
add
mov
imull
add
adc
insb
pop
ror
mov
mov
in
and
dec
pop
add
xlat
xlat
mov
fists
les
into
outsl
pop
cmp
xlat
enter
push
mov
mov
adc
mov
scas
cltd
in
outsb
addr16
int
sub
sbb
sub
lods
insb
inc
leave
ret
pushw
cltd
dec
in
stos
jg
out
inc
aad
into
je
cmp
xor
pop
popa
lret
xor
cmpsb
popl
cmpsb
es
aam
cmp
fsubr
xlat
int3
in
jnp
ljmp
adc
loope
popa
pop
data16
push
rcrl
arpl
pop
push
xor
fwait
jecxz
lods
popa
pop
sbb
push
cmp
in
xor
test
mov
jmp
jp
push
mov
dec
repz
add
aad
or
movsl
movsb
pop
idiv
mov
pop
mov
sub
dec
movsb
or
and
and
xor
inc
mov
shr
jmp
cmpl
stc
inc
sbb
insb
addl
repnz
fcomps
or
test
adc
push
or
int
cmp
sub
daa
and
mov
movsl
popa
shr
xchg
negb
push
es
mov
mov
cmp
mov
add
sbb
adc
xchg
dec
js
jb
rcrl
scas
out
jmp
inc
mov
xchg
and
imul
pop
repz
jb
mov
xor
sbb
imul
out
ret
jno
jle
cltd
fiadds
push
bound
inc
push
push
xchg
adc
loop
xchg
lods
adc
ljmp
push
dec
dec
cltd
cmc
mov
mov
mov
mov
stc
insl
mov
fcomi
pop
adc
inc
dec
sbb
xchg
testl
dec
adc
mov
xor
ret
and
adc
lret
mov
push
jb
or
lret
mov
fnstcw
adc
repnz
sub
dec
dec
cmp
pop
lock
or
cltd
cltd
popa
cmpsl
sbb
fbstp
xor
call
into
pop
ds
and
mov
push
test
jp
push
mov
pop
jg
xorl
ja
int3
pop
adc
xchg
mov
or
mov
dec
in
sub
push
inc
ss
sbb
pshufw
sbb
cmp
ret
mov
int3
repz
popa
add
and
add
push
movsl
dec
lock
push
mov
loope
add
repz
lret
add
clc
popf
lock
daa
addb
cmp
sub
add
push
adc
addr16
stc
xchg
push
or
jnp
outsl
mov
enter
and
mov
or
inc
test
xchg
mov
ret
or
pop
add
sbb
sbb
aaa
popf
push
mov
or
mov
pop
insl
mov
inc
sti
xor
lcall
add
stos
cmpsl
js
ljmp
dec
stc
outsl
leave
adc
lahf
sbb
int
xor
cmpb
iret
fs
jg
and
lahf
mov
jns
push
iret
xchg
shll
add
fbld
mov
sbb
stos
xchg
sar
imul
in
sbb
pop
mov
xchg
test
sar
jb
lods
sbb
stos
and
dec
ljmp
pusha
add
inc
mov
jle
lds
sub
and
adc
add
out
push
xchg
bound
push
xor
sub
adc
xchg
dec
jnp
sbb
sar
sub
lods
mov
push
xchg
std
sbb
popf
push
aam
inc
jo
sbb
inc
and
pop
ljmp
jo
xor
pusha
inc
inc
sbb
ss
mov
cmpsb
fstpl
mov
fdivrl
into
repz
xchg
adc
adc
jnp
dec
jmp
icebp
cmpsb
icebp
push
cmp
lahf
xlat
lret
arpl
push
pushf
cmp
mov
pop
mov
outsl
push
outsb
clc
cmp
loope
jp
mov
ss
cmp
or
jnp
push
loop
rcrb
sbb
lahf
lcall
addr16
xchg
mov
fistl
jl
mov
in
sti
test
and
mov
and
lret
test
aam
pop
jbe
imul
inc
decl
mov
mov
inc
jmp
cmc
pushf
adc
ljmp
inc
lods
inc
jb
aad
ljmp
into
cmp
inc
jne
sub
aaa
sbb
inc
mov
and
mov
cld
xchg
ja
jbe
cmp
xor
pop
cmp
push
sbb
mov
dec
or
fs
lods
clc
jecxz
add
shl
mov
or
jno
sti
mov
cmp
cmp
fisttps
push
imul
scas
adc
in
mov
aas
sbb
lods
xchg
sbb
pop
cmpb
cmp
ljmp
xchg
inc
or
push
sbb
sub
out
mov
mov
add
mov
shlb
nop
std
lahf
mov
inc
sub
jmp
ret
fsubrl
rolb
and
add
or
testb
es
adc
das
repnz
clc
aam
pop
dec
xchg
call
int3
mov
sub
mov
lahf
pop
insb
adc
or
push
mov
and
push
push
int
xchg
cmovg
outsb
loop
repnz
push
pop
jnp,pn
dec
adc
lea
mov
add
insb
pop
sbb
xchg
dec
das
dec
inc
in
mov
out
mov
cli
in
js
cmp
pop
jecxz
push
jae
sub
loopne
clc
cmp
in
xchg
test
rorb
cmp
cmp
repnz
xor
pop
sub
cmp
stos
push
xchg
cmp
xchg
stos
sub
movsl
lahf
fstps
mov
cmpb
jae
test
inc
jg
pop
lods
mov
lret
adc
es
and
mov
fdivrs
dec
mov
xor
and
mov
dec
pop
cltd
out
pop
dec
dec
xor
sbbl
jge
imul
rolw
dec
jnp
mov
arpl
hlt
xchg
fidivrl
leave
mov
std
mov
pop
mov
arpl
fdivrl
test
fisubrs
jmp
mov
inc
mov
popf
cmp
cld
stc
jp
loope
scas
jecxz
push
lcall
ljmp
xchg
lret
xor
sti
lret
push
hlt
repnz
data16
fadds
inc
xchg
xchg
cltd
pop
in
in
lea
or
sarb
clc
xorb
xchg
mov
pop
mov
sbb
arpl
leave
out
inc
int3
call
add
xchg
push
mov
repz
mov
pop
jnp
addr16
sub
jnp
out
jmp
loop
in
cmp
cld
inc
subb
push
cwtl
test
inc
xor
pop
jge
data16
testb
inc
add
cmp
lret
rcll
scas
fdivr
jge
mov
jne
sbb
fcoml
in
pop
shr
pop
xchg
imul
jns
sti
fldenv
xlat
mov
stc
mov
and
in
out
jbe
add
dec
in
push
int3
lcall
idivl
shr
cwtl
mov
pop
mov
pop
mov
mov
inc
push
insl
xor
nop
adc
or
les
push
jmp
push
subb
add
stos
or
jo
sbb
push
jle
and
loope
sarl
lods
lcall
outsb
pushf
push
pushf
or
nop
in
pop
shlb
ja
movsb
adcb
fs
jnp
and
adc
hlt
jmp
lods
in
sub
leave
lret
andb
inc
xchg
push
push
sub
enter
lcall
rolb
mov
push
xchg
ficompl
fcompl
mov
xor
sub
xchg
outsl
pop
repnz
mov
inc
or
mov
mov
and
dec
pop
xor
and
push
pop
sub
jecxz
xchg
cli
dec
lcall
nop
mov
or
mov
cmp
push
mov
ret
inc
jg
icebp
sahf
adc
pop
jle
pop
mov
adc
inc
adc
test
inc
sbb
push
pop
pusha
in
xor
sbbb
cmc
jge
sub
in
xor
and
dec
icebp
repz
jo
mov
xchg
ljmp
jg
stc
sahf
xchg
stos
pop
mov
sub
xor
adc
insl
jg
imulb
cmp
fwait
loopne
dec
test
orl
sub
ss
cwtl
cmpsb
cmp
fimull
aaa
jnp
adc
int3
out
mov
pop
cmp
ret
push
icebp
or
add
pop
ljmp
in
fcmovnu
dec
mov
push
pusha
adc
inc
lret
ja
movsl
test
fstpt
arpl
inc
xor
in
push
fwait
insb
cld
jecxz
cmp
test
cmp
xchg
or
xor
sub
push
fsubr
sti
int3
jno
shll
sbb
pop
mov
pop
push
dec
sbb
xchg
scas
inc
rcll
getsec
lret
jbe
and
xchg
filds
aam
cmc
cmpsb
xor
push
dec
push
imul
or
sub
or
inc
pop
add
jp
ficoms
mov
int
cltd
sbb
and
out
jne
mov
js
ss
jno
pushf
pop
stos
hlt
mov
adc
xchg
in
mov
push
sub
ret
mull
es
cltd
and
pop
js
cmp
add
xor
mov
out
adc
stc
jne
jge
mov
and
insl
and
rcll
sub
sbb
adc
or
fidivrs
cmp
push
lods
jp
jecxz
aam
adc
and
sub
in
ljmp
inc
imul
push
inc
imul
inc
mov
push
pusha
sbb
cld
dec
jb
std
mov
in
adc
xor
mov
outsl
inc
jge
std
mov
clc
adc
jns
out
mov
pop
pop
aad
mov
test
les
sti
retw
xor
popa
lea
and
mov
sarl
in
popf
sarl
push
dec
sub
cmp
scas
lods
ret
cmc
js
sbb
xor
pop
cmpsb
stos
rclb
add
loope
addr16
pusha
movsb
xor
mull
push
adc
add
and
js
fwait
dec
jl
inc
mov
lret
xchg
test
movsb
ja
jns
loopne
dec
std
sbb
fs
lea
or
add
notb
xor
jbe
and
lea
xor
sahf
push
or
sbb
sub
aaa
sbb
and
clc
xor
loopne
sub
aad
sbb
push
stc
adc
subb
add
popf
imul
xor
std
pop
jb
mov
cli
ss
dec
imul
cmp
cmpsl
data16
pop
pushf
pop
lret
inc
cld
lods
mov
pop
mov
imul
mov
nop
jl
fcomp
add
loope
mov
into
fimull
pop
dec
mov
dec
lret
ficoms
les
adc
mov
dec
adc
and
sbb
rorb
add
repz
insb
jne
inc
sbb
xor
clc
jge
test
es
jmp
add
test
mov
sub
mov
testb
mov
movsb
stos
into
cmpsl
cmp
shl
imul
cwtl
sahf
sbb
and
xor
lcall
jb
or
and
sbb
pusha
mov
insb
out
sub
das
cmp
mov
mov
sub
adc
sbb
xchg
into
mov
fs
popf
or
push
mov
pop
movd
push
mov
repz
dec
mov
mov
dec
sti
clc
cmp
pop
ss
mov
sub
sub
je
mov
dec
cmp
testl
sbbb
cld
int3
fdivl
les
cld
jae
add
mov
into
aam
xchg
out
and
mov
mov
sbb
jge
xor
adc
stos
cmp
add
pushf
stos
push
cmc
jne
inc
mov
cmpsb
call
mov
icebp
xor
or
and
mov
test
shlb
pusha
xchg
repz
mov
cmp
movsb
add
mov
dec
pusha
loope
shlb
cld
inc
lcall
rorl
lods
popf
mov
or
add
mov
jecxz
nop
xchg
dec
xchg
xchg
loope
mov
lods
pop
pop
xchg
outsl
lds
xchg
xor
out
pop
mov
xor
push
xchg
cmp
repnz
in
xchg
jns
inc
icebp
test
jbe
pop
ja
aas
inc
repz
imulb
lock
out
push
pop
iret
cmpsb
push
jnp
lcall
adc
xorl
xor
shl
push
sarl
sahf
jnp
cmpsl
jne
out
lret
xor
sbb
sbb
xor
mov
popf
push
mov
ret
out
push
shlb
xchg
inc
jne
mov
outsb
push
movsl
dec
jns
adc
rcr
sbb
sub
divb
sub
jg
inc
pop
dec
mov
add
outsl
push
stos
pop
pushf
insb
jge
cmp
aaa
icebp
lret
mov
pmullw
les
popa
fidivrs
lock
jp
mov
sbbb
mov
fldl2e
arpl
and
or
jb
push
jnp
cmpsl
scas
imull
pop
push
gs
xlat
jo
fimull
int
jl
clc
into
jnp
jo
sub
movsl
and
imul
mov
sbb
cmp
lea
inc
fst
mov
pop
adc
and
mov
arpl
mov
mov
shlb
inc
neg
fwait
scas
xchg
shl
fstl
ja
mov
in
std
outsb
cmp
jmp
out
bound
js
jb
jle
fistpll
scas
fistps
push
ficompl
iret
jl
pushf
or
into
mov
add
mov
cmp
and
cmc
sti
rclb
jg
lock
mov
sahf
mov
xor
test
add
daa
and
arpl
addb
add
pop
or
push
cmp
adc
adc
pop
icebp
xchg
les
mov
mov
fcmove
xchg
fdivrl
xor
fwait
dec
iret
in
xor
js
out
add
fdivl
int
ret
addr16
ret
mov
push
ds
int3
jns
daa
lret
sbb
or
push
cmp
cmpsl
or
fs
add
insl
fldt
mov
ds
loope
xlat
xor
sarb
or
ret
rolb
lahf
scas
mov
aad
and
add
jae
sub
out
cltd
jmp
lret
sahf
daa
push
test
mov
shlb
or
test
pop
test
push
insb
push
into
adc
loop
dec
decl
call
jns
in
aam
push
jbe
cld
push
xor
inc
les
jge
push
sarb
sbb
hlt
lret
adc
icebp
stos
test
cli
inc
cmp
dec
leave
rcll
lea
or
inc
cld
pusha
popf
stos
sbb
enter
mov
xor
int3
mov
push
pop
xchg
data16
cmc
cld
jle
movsl
scas
ljmp
and
stos
lahf
mov
push
out
inc
cmp
sbb
xor
jge
out
ret
imul
inc
cmp
stos
lods
iret
pop
mov
in
adc
mov
and
mov
xchg
mov
mov
mov
lcall
into
xchg
pop
cmp
xchg
scas
and
mov
ljmp
inc
aad
int
int3
adcl
push
in
xchg
inc
push
cltd
cwtl
xor
pop
rcr
and
repnz
cwtl
inc
shrl
sub
mov
pop
loop
shrl
les
lret
mov
repnz
out
xchg
cmpsb
mov
pop
xor
xor
mov
je
cs
dec
sub
cmc
aad
sbb
les
xor
inc
push
mov
cmp
pop
nop
xchg
test
adc
fs
pop
push
jo
jne
movsb
xchg
and
inc
andl
mulb
pop
insb
mov
add
dec
inc
push
lret
scas
and
and
sub
imul
cmc
movsl
mulb
daa
sahf
movsb
mov
and
addr16
inc
mov
pop
add
add
loope
adcl
xchg
adc
pop
movsl
mov
iret
push
push
pop
adc
jb
addr16
inc
xchg
mov
out
pop
add
mov
jo
fdivrl
shrb
pop
popa
mov
sti
lds
jne
sbb
dec
nop
adcl
shrl
mov
mov
cmp
mov
icebp
popf
xchg
and
sbb
mov
out
jg
mov
movsl
push
fcoms
push
mov
clc
ret
aas
xchg
test
arpl
pop
dec
out
or
ret
xchg
inc
xor
jle
pop
push
xchg
je
fwait
repz
mov
push
cmp
lods
lcall
xchg
and
int3
mov
icebp
std
push
inc
mov
jp
xor
stc
and
adc
dec
ffreep
inc
minps
cmp
or
sub
pop
pushf
shll
sub
xchg
fxch
imul
cltd
xacquire
sub
and
and
cmpsl
push
mov
adc
xorl
imul
stc
add
ret
and
fs
mov
push
pop
and
xchg
mov
imull
push
cwtl
add
popf
dec
and
jo
mov
adc
adc
push
dec
push
xchg
mov
mov
cltd
and
adc
pop
push
js
aad
xor
into
mov
push
pop
mov
sahf
pop
mov
push
mov
sarl
bound
int
push
lcall
sbb
sbb
idivl
scas
out
insb
aad
xchg
push
xchg
std
popa
pop
repnz
fsubrs
lret
arpl
xchg
or
or
std
cmp
push
je
nop
or
mov
lret
stos
jmp
mov
mov
dec
in
cltd
pop
idiv
test
pop
push
jo
xor
xchg
fwait
mov
sbb
cmpl
filds
mov
ret
lret
negl
pminub
cmp
cmp
mov
sub
pop
test
push
cmp
fstpl
dec
fsubs
jns
out
inc
mov
into
and
or
loop
out
push
or
xor
in
jbe
add
push
push
lret
lahf
cwtl
fldcw
in
mov
in
les
lods
pop
decb
lret
into
mov
mov
in
push
sbb
popf
cmc
std
jp
data16
xchg
sbb
push
aaa
pop
and
mov
mov
pop
imul
add
adc
in
std
cmp
xchg
sbb
arpl
add
xor
cmpsl
jmp
in
dec
xchg
push
mov
push
addr16
cs
inc
leave
sub
add
or
popf
push
lock
push
aaa
mov
aad
push
push
dec
fistpl
fisttpll
adc
testl
xchg
push
pop
pusha
out
mov
mov
dec
lock
cli
inc
fsub
jecxz
sarb
lret
mov
insl
cmp
push
jo
add
das
inc
movsb
cmp
imul
fisttpll
adc
daa
or
faddl
mov
sub
jle
or
mov
and
sbb
mov
sbb
and
push
push
adc
ljmp
cmpsb
and
add
pop
or
add
mov
stc
jle
in
out
je
and
ficoms
dec
hlt
adc
pop
rcrl
sub
cmp
push
jns
jl
daa
cmp
cmp
jg
xchg
jg
xchg
mov
sub
mov
xchg
and
inc
adc
std
pop
loopne
or
daa
push
adc
push
test
jmp
push
mov
int3
push
bound
pusha
in
jp
popa
xor
pop
mov
lods
cmc
aad
hlt
adc
int
test
dec
push
inc
insb
mov
out
call
lock
adc
mov
insb
mov
jnp
out
shl
jmp
and
imul
and
add
jae
mov
int3
add
cmpsb
pusha
or
push
inc
jo
int3
push
hlt
movsb
test
jne
push
movsb
cmpb
les
dec
xor
lahf
push
xor
cmpb
iret
dec
movsb
and
cmp
pop
and
sub
leave
mov
fs
subb
cmp
mov
fs
xor
sbb
jno
mov
test
pop
ret
out
jmp
jo
sarl
push
or
and
pop
mov
ja
adc
push
test
cmp
addr16
pop
movb
addl
lcall
lret
or
je
inc
stos
adc
inc
or
out
jmp
out
mov
movsl
xchg
inc
mov
adc
adc
dec
sbb
loope
jle
aam
cmp
das
test
add
sahf
outsb
xchg
dec
mov
adc
mov
ret
jmp
js
sti
add
hlt
outsb
or
push
xchg
adc
imul
sub
mov
outsl
mov
aas
inc
or
repz
mov
repz
inc
lcall
dec
dec
test
xchg
adc
sub
std
mov
dec
push
scas
orb
nop
push
out
imul
movsl
popa
pop
jnp
in
in
mov
cmp
lret
mov
sbb
cmp
mov
repnz
mov
rol
gs
iret
mov
push
lock
in
cmpb
fnstcw
fldenv
mov
jp
je
sub
adc
clc
in
cs
lahf
lahf
push
and
add
je
mov
push
pop
push
fisubrl
and
mov
jno
pop
shr
mov
jae
lret
add
insl
push
loope
sbbl
inc
shl
incb
pop
repnz
movsl
movsb
and
xor
iret
lock
cs
mov
inc
mov
lret
mov
sub
push
xchg
scas
dec
sub
shll
and
push
jp
loop
roll
popf
pop
arpl
add
ja
sbb
es
push
cs
sub
popf
jg
jmp
iret
xchg
sbb
dec
xchg
ds
stos
in
xor
fdiv
sub
dec
mov
outsb
pop
clc
cld
test
in
or
xor
es
or
xchg
pop
add
xor
xor
mov
inc
data16
sub
loop
add
push
jp,pn
inc
push
daa
shrb
mov
mov
clc
test
fidivrs
leave
xchg
ja
fisubrs
and
lock
lret
testb
ss
test
testb
bound
and
mov
dec
movsl
faddl
aaa
repnz
lods
shrb
lahf
mov
jmp
sti
mov
xor
inc
xor
push
sti
pop
andb
lods
punpckhbw
mov
mov
je
xor
mov
lahf
movsb
scas
sbb
mov
call
fwait
adc
movsl
mov
sbb
imul
pusha
jo
scas
cmovo
mov
mov
loope
cmp
les
xor
mov
loope
inc
out
xor
push
jg
test
mov
inc
jb
imul
xchg
mov
mov
mov
fs
mov
shlb
cs
push
leave
xchg
mov
jne
push
mov
push
sub
std
test
insl
daa
ja
std
mov
dec
cmp
jnp
and
and
sti
stos
fdivrs
pop
in
leave
popf
pop
push
dec
jp
rclb
mov
mov
xor
dec
mov
dec
testl
popl
daa
ds
add
push
xchg
push
xor
mov
pop
cmpsb
add
rclb
and
cmp
leave
mov
inc
stc
sub
and
stos
imul
add
fldenv
adcb
adc
adc
fsubp
shl
and
dec
dec
jbe
lods
xchg
cwtl
enter
sarl
loope
or
mov
pusha
in
fwait
movsb
fwait
cltd
lret
mov
addr16
pop
mov
mov
repz
xchg
xor
movsb
add
sub
mov
add
dec
mov
idivb
in
pop
pushf
jne
lea
xchg
mov
pop
out
mov
test
divps
or
jge
insl
lods
les
pop
test
aaa
mov
nop
cltd
mov
adc
and
frstor
cmp
adcl
pushf
lahf
lds
or
es
mov
push
je
dec
xor
adc
adc
mul
inc
and
xor
out
fcmove
push
addr16
dec
push
xchg
cmp
cmc
mov
pop
pop
inc
jle
arpl
mov
stos
sub
push
icebp
lds
test
sbb
sbb
ljmp
jle
inc
loopne
jno
push
fiaddl
mov
int
adcl
push
fisubl
rorl
mov
pop
mov
jl
hlt
popa
sahf
and
jmp
pushf
or
icebp
jg
xchg
js,pt
xchg
mov
sub
and
sub
stos
push
add
dec
cwtl
ljmp
pushf
fcoml
jno
lret
add
aad
adcb
dec
sub
mov
movsl
pop
mov
mov
enter
or
pop
cld
mov
cmp
push
movups
or
jmp
xor
push
mov
xchg
mov
iret
xor
aad
in
lods
sbb
nop
lods
push
mov
int
and
iret
aaa
gs
imul
mov
aaa
ja
jmp
cmp
imul
clc
push
push
sub
jo
or
jp
sti
lret
mov
mov
pop
jno
pushf
js
addr16
push
adc
xor
js
imul
leave
push
lcall
inc
push
stos
jg
sub
push
push
sub
icebp
scas
leave
adc
mov
inc
dec
xor
stos
mov
fstps
cmp
xchg
sbb
cli
pop
ret
mov
fstps
sbb
in
add
hlt
hlt
clc
xor
outsb
xchg
dec
pop
push
inc
mov
fwait
dec
in
add
hlt
mov
cld
mov
pop
pop
lea
out
inc
sarb
adc
je
sti
sbb
scas
push
and
push
movsb
push
fbld
dec
mov
ficompl
ss
xor
add
or
test
cs
mov
pop
in
push
movsl
mov
cmp
adc
cltd
movsl
divl
add
mov
mov
xchg
call
add
sub
insb
push
pop
sub
sub
push
push
sahf
pushf
sub
and
popf
xchg
jg
les
jp
inc
mov
add
dec
sbb
ljmp
out
pusha
popl
pop
jle
xchg
inc
insl
push
fildl
jmp
mov
cmp
push
lods
rolb
addl
loop
xlat
dec
inc
jecxz
loope
cmovg
das
cltd
pcmpgtd
pusha
jo
xchg
hlt
fsubrs
les
orb
lret
or
test
rcl
fildl
sbb
outsl
jne
popa
or
outsb
inc
dec
test
sarl
addl
loope
add
mov
adc
loopne
clc
xchg
push
mov
mov
mov
pop
jmp
gs
mov
mov
and
and
push
mov
stc
and
sti
sbb
pop
cmc
js
test
and
or
call
imul
ret
aad
in
xchg
imul
fstp
les
ror
dec
sub
dec
enter
push
test
adc
mov
pop
andb
cmp
cmp
mov
repnz
div
push
jno
cld
jne
inc
addr16
sub
add
mov
sub
ret
push
push
pushf
cmp
cmp
or
rclb
lock
push
adc
jle
pushf
test
lret
mov
lods
in
ss
daa
sub
enter
jb
in
or
ss
stc
movsl
loopne
ret
hlt
jmp
fiadds
dec
jns
loopne
xchg
cmp
sub
pusha
mov
ljmp
movsb
maxps
mov
mov
and
push
div
or
inc
stos
xchg
mov
lods
arpl
xor
adc
imul
cltd
mov
mov
xchg
aam
lret
xlat
push
mov
arpl
inc
sbb
xchg
mov
push
push
mov
and
or
mov
push
and
rcr
push
jnp
adc
dec
push
cld
dec
inc
mov
mov
push
mov
push
aam
sub
pop
jbe
cmp
sub
iret
jb
in
mov
cs
ficomps
les
xchg
movsl
ret
outsl
jae
sahf
or
sbb
push
arpl
pop
testl
mov
adc
mov
aaa
cmc
outsl
rorb
cmpsb
fisttpl
lods
cmpb
enter
or
ret
xchg
dec
enter
loop
bound
pusha
mov
dec
fldenv
xlat
fwait
or
adc
sti
rol
in
sub
and
pop
cld
mov
jne
gs
out
cmp
lds
test
lcall
ljmp
and
lods
cmp
mov
mov
lock
rcrl
or
ja
nop
inc
pop
and
jmp
xchg
dec
cltd
sbb
or
xchg
mov
cld
adc
stos
xor
or
cmp
fwait
xchg
pop
mov
cmpsb
lds
aam
test
push
xor
and
adc
cltd
stos
inc
lcall
or
push
pop
loop
pop
dec
mov
test
cwtl
sbb
jno
into
cmp
idivl
xchg
cwtl
inc
dec
or
cmpsl
movsb
pop
jle
sbb
adcb
lcall
pop
scas
ud0
pop
xor
loope
popf
cs
rorl
not
hlt
fsubrs
push
sub
xchg
test
cmp
fidivrs
push
out
enter
aas
les
or
les
lods
mov
test
jae
cltd
stos
push
mov
sbb
movsbl
cli
xor
adc
cmc
stos
stc
mov
sub
popa
pop
inc
lds
test
data16
xchg
loop
mov
call
repz
push
mov
inc
sub
jo
cmpsb
xchg
add
movsl
out
lahf
mov
stc
push
popa
ficompl
dec
jnp
push
push
jnp
loop
and
je
ror
daa
inc
test
cld
into
ljmp
in
int3
int3
adc
mov
adc
xor
mov
ds
and
leave
sbb
push
pusha
jne
mov
jb
jmp
xor
incl
jl
pusha
and
pop
adc
adc
vsqrtpd
mov
shrl
adc
xchg
pop
cmc
ret
pop
loop
mov
sbb
adc
ds
mov
gs
imul
pop
imul
mov
cmp
cmc
hlt
sub
rcrb
outsb
fimull
jecxz
xchg
push
in
xchg
fwait
mov
mov
inc
mov
in
mov
pop
dec
movsl
mov
imul
idivl
jmp
sahf
or
mov
aaa
dec
pop
lahf
cmp
mov
movsb
mov
pushf
sbbb
add
and
lret
mov
stc
ss
push
add
loopne
or
movsb
test
or
dec
shlb
imul
cmp
adc
pop
es
push
in
jo,pt
sub
push
jne
imul
fs
movsl
insb
mov
and
inc
mov
rclb
mov
mov
mov
inc
fisubrl
mov
mov
mov
lret
xchg
or
cs
mov
andb
or
dec
fnsave
mov
loope,pn
das
js
jmp
add
out
mov
inc
ja
mov
mov
and
jns
fbld
aam
mov
sub
jo
outsb
or
jl
xchg
fldcw
jne
cli
mov
std
and
sahf
adc
xor
movsl
addr16
outsb
cmpsl
rcrl
pop
fldl
sti
lret
adc
lahf
subb
xchg
out
sub
dec
andl
mov
rcrb
xchg
or
test
sub
push
imul
or
fisttpl
fisubrl
adc
cmpsb
in
bound
out
inc
xchg
xor
pusha
xchg
dec
orl
add
test
and
sbb
sbb
mov
mov
or
add
shlb
xor
add
xchg
pop
add
shlb
shrb
push
aaa
dec
or
ja
sbb
inc
fs
not
mov
sub
imul
sub
bound
sbb
clc
pop
pop
sub
pushf
daa
bndldx
and
jo,pt
push
sahf
fs
mov
dec
inc
outsl
fists
jno
fildl
pop
dec
icebp
or
pop
mov
jo
jle
gs
and
out
shll
lods
imul
shrl
imul
xchg
repz
pop
in
gs
jno
out
inc
mov
dec
test
inc
jge
setbe
mov
adc
into
sbb
mov
call
mov
cmp
lret
andnps
dec
pop
sub
jbe
dec
cmpsl
arpl
or
push
sti
jp
mov
repnz
std
lahf
mov
pushf
add
ss
sub
add
into
inc
sahf
iret
mov
inc
arpl
inc
push
nop
xor
aas
add
arpl
jnp
inc
repz
add
push
roll
lods
mov
sub
ds
cld
inc
in
dec
dec
adc
pop
jp
xor
les
or
sub
in
xor
hlt
dec
loope
clc
or
loop
jmp
cli
das
icebp
cmp
insl
addr16
out
mov
lahf
jg
repz
movsl
daa
jns
inc
xchg
jp
gs
faddl
cs
lock
std
ljmp
insl
movsb
out
add
xchg
add
or
push
sub
jecxz
add
inc
mov
adc
jno
decb
mov
and
inc
jg
cmp
mov
pop
clc
mov
gs
xchg
sbb
dec
mov
aam
pop
mov
mov
dec
xchg
inc
sub
dec
and
or
cmp
andl
cmp
mov
loopne
mov
repz
in
dec
pop
pop
sub
test
sub
mov
lods
cmp
xchg
daa
sub
shlb
cmpsl
popa
inc
mov
jmp
fildl
iret
mov
test
add
sub
cmpsl
or
pop
adc
ds
cs
push
dec
jecxz
scas
push
mov
add
lret
lds
ljmp
mov
jb
xchg
fwait
or
cmp
xchg
xchg
pop
mov
jns
adc
adc
adc
jo
mov
fisubrs
mov
push
sbb
hlt
lea
int
mov
rcll
jns
jge
jne
xor
xor
frstor
aad
jno
xor
xor
cmp
ss
and
pop
ljmp
pop
adc
lods
shlb
loop
nop
lret
cmp
cmp
dec
adc
dec
or
jae
and
sti
push
or
or
mov
mov
push
xchg
cmpsb
pop
jmp
xor
es
idiv
adc
dec
mov
in
ljmp
inc
lret
mov
in
bound
aas
jle
cmp
rcll
jg
sub
xchg
stc
push
iret
std
rorl
mov
test
mov
mov
or
test
loope
mov
push
xchg
pop
dec
movsl
add
inc
mov
in
sbb
jp
insl
push
in
faddl
nop
mov
popl
pop
imul
mov
ss
mov
mov
pop
fmul
sahf
push
addl
stos
lds
pop
xchg
clc
fdivs
ja
bound
mov
add
sub
into
ret
xchg
fistpll
ret
ss
jbe
fmuls
je
je
iret
push
mov
add
aas
clc
mov
loope
push
mov
adc
mov
pop
es
mov
sahf
inc
insl
sbb
cmp
rol
adc
test
bound
imul
rcll
add
in
mov
mov
pop
inc
fisubrl
ficompl
sub
outsb
mov
or
pop
shrl
inc
sub
in
es
push
push
in
inc
fcomp
or
xor
sbb
loopne
jp
and
xchg
xor
push
cmp
fadds
pushf
inc
adc
test
cmp
mov
sub
pop
push
jmp
subb
gs
lds
add
push
push
mov
push
inc
pusha
add
push
or
test
inc
test
mov
imul
push
shll
nopl
jae
sbb
and
jo
dec
es
jb
cmp
mov
outsl
gs
in
loop
adc
repnz
adc
sub
je
jp
inc
jns
xchg
pop
test
loop
pop
adc
lds
pushl
int3
repz
or
or
nop
xor
call
push
pop
mov
mov
inc
jmp
fcoms
data16
aas
leave
test
push
sub
push
xor
push
cmp
sbb
lock
in
mov
adc
cmpsl
cmc
add
push
xchg
inc
pop
add
shlb
imull
jl
inc
fisubl
jge
add
add
pop
sarl
mov
ret
sarb
pusha
mov
insl
loope
fldenv
push
jmp
mov
daa
or
sub
iret
adc
and
ljmp
call
mov
add
mov
das
lret
lea
xor
or
shr
pop
rep
sbb
inc
int
mov
outsb
in
sbb
add
je
stos
aad
repnz
aas
shrb
jg
push
dec
mov
jnp
pop
sbb
sub
sub
leave
mov
fwait
adcl
jbe
inc
outsl
cmp
add
cmp
cltd
jno
jmp
in
movsb
in
cli
rep
lea
mov
popf
sbb
push
jecxz
lock
cmp
int3
mov
mov
leave
inc
jmp
jl
mov
xchg
mov
cmp
dec
xchg
fimuls
jbe
ss
inc
lods
jne
push
out
dec
pop
mov
fmull
jb
lods
cmp
sti
out
or
test
pop
loopne
sub
cmp
in
xor
adc
jecxz
jo
push
pop
test
popf
jle
mov
xlat
mov
loopne
push
test
lret
sub
pop
adc
inc
cmp
push
jnp
sbb
icebp
les
lcall
mov
out
loop
je
dec
imul
xor
and
sbb
jae
push
add
mov
xchg
fistl
pavgw
adc
pop
xchg
mov
unpckhps
adc
loopne
aaa
adc
xchg
mov
and
jle
xchg
mov
jmp
push
pop
sbb
iret
insb
mov
mov
aam
outsb
sbb
in
aad
dec
sti
inc
mov
sbb
mov
sbb
pop
pop
std
out
adc
inc
lods
loopne
jge
jmp
ds
nop
or
scas
sti
dec
jne
repnz
inc
popa
add
inc
scas
mov
sub
jo
ljmp
cmp
dec
mov
call
inc
mov
xchg
js
pop
add
push
mov
pop
insl
fwait
jne
enter
mov
sub
lods
in
cmp
jmp
hlt
xchg
dec
push
out
jbe
or
rcl
push
cld
enter
xor
out
add
pop
lock
add
mov
into
out
cmpsb
or
lock
imul
pop
mov
dec
leave
cwtl
cmpsb
in
jmp
fistl
sbb
dec
call
mov
notl
int
inc
cs
and
mov
sbb
pusha
xchg
push
daa
mov
xchg
push
pop
add
push
aad
leave
cwtl
jb
nop
stc
sbb
incl
pop
xor
movsl
pop
xlat
xchg
and
and
orb
out
and
dec
cmc
mov
jns
ret
repnz
xchg
dec
aaa
mov
cli
cmp
hlt
xchg
jne
sub
sbb
jns
inc
sbb
rcr
popa
ja
mov
mov
cwtl
mov
js
xchg
mov
add
lret
xlat
adc
idivb
sar
jne
and
test
nop
lds
xchg
lock
hlt
cwtl
xor
lods
jg
sbb
xor
test
loop
pop
push
xor
or
xor
ret
inc
movsl
inc
insl
mov
mov
lret
xchg
addr16
pop
fiaddl
pop
movsl
enter
stos
mov
cwtl
dec
arpl
outsl
add
pop
xchg
in
cmp
add
iret
outsl
mov
insl
add
mov
dec
pushf
adc
mov
fdivrp
dec
arpl
shlb
sbb
ljmp
lea
jae
xchg
jecxz
lods
inc
or
add
and
in
xchg
ljmp
and
into
dec
imul
scas
xor
lahf
in
addl
inc
pushf
lret
fldt
je
shrl
in
xchg
pop
mov
cmc
jl
lods
inc
push
lea
fsubrs
mov
dec
sub
inc
mov
mov
insb
sbb
inc
repnz
push
dec
insl
jmp
loop
mov
adc
mov
jae
and
xchg
jb
cli
into
repz
dec
stos
loop
inc
jg
rcrl
sub
mov
xchg
pop
push
aad
xor
inc
ret
test
push
and
cli
outsl
dec
rorb
js
popa
cmpsl
jbe
xchg
xor
into
pop
mov
pop
fimuls
rol
jecxz
mov
jns
adc
notl
loope
sub
roll
negb
xor
jae
jno
in
pushf
call
jle
movsb
push
add
mov
adc
jne
insb
cmp
mov
sbb
stos
punpckhdq
xchg
in
sbb
cmp
jb
mov
jg
sub
pop
fisubrl
fstpt
scas
cmp
inc
add
sbb
insl
jg
pop
sahf
xor
inc
add
mov
inc
sub
jp
push
xor
dec
cltd
aas
addr16
pop
mov
lcall
xchg
cmp
dec
mov
push
and
add
inc
fiaddl
in
sub
int
enter
imulb
ficomps
notb
adc
test
cwtl
ljmp
adc
xchg
imull
in
loop
ret
pop
push
subb
or
ljmp
mov
jns
mov
mov
sub
aad
inc
ror
cli
popf
lcall
xchg
sti
pop
out
addl
sub
push
or
or
sbb
push
sahf
ss
loopne
sbb
aam
adc
aas
adc
iret
call
inc
mov
dec
scas
jnp
cmp
popf
test
add
cmpsb
xchg
in
scas
inc
push
repz
xor
pop
mov
inc
andb
popf
addr16
ds
and
in
sub
scas
xor
iret
adc
mov
das
mov
mov
push
loop
lret
hlt
and
jo
and
in
leave
sbb
cmp
ljmp
out
insl
stos
jecxz
in
stc
out
enter
pop
test
jmp
mov
pop
fistpl
cmp
es
sbb
push
imul
xchg
sub
leave
add
jge
addl
or
pop
inc
dec
xor
mulb
mov
push
test
mov
insb
les
fisttpl
stc
push
mov
sub
mov
push
mov
xchg
loop
test
jl
out
pop
cmp
push
loopne
mov
jmp
add
int
imul
test
scas
out
push
lds
fcmovne
mov
stc
jne
and
jne
fwait
call
loop
dec
lret
aas
paddd
test
sbb
push
lahf
out
inc
out
movsl
mov
dec
lahf
jge
jb
mov
mov
cmp
sahf
cmp
inc
inc
stc
lret
jp
sarl
dec
add
mov
add
xchg
hlt
mov
push
cmp
mov
mov
or
pop
pop
out
sub
outsl
xchg
mov
adc
enter
push
jns
mov
lods
int
xor
push
pop
mov
loopne
pop
push
subl
dec
adc
mov
sahf
or
mov
cltd
loope
in
adc
add
pop
mov
cmpsb
mov
add
sti
adc
out
add
cmp
mov
mov
shll
mov
sti
out
adc
fbld
xor
push
cld
je
push
mov
mov
inc
sbb
test
and
mov
pop
xchg
mov
xchg
movsb
mov
inc
stos
mov
call
lds
mov
cmp
cmp
pop
sahf
imul
or
dec
xchg
push
pop
stos
std
xchg
mov
mov
bnd
push
mov
lret
shl
out
push
loopne
pushf
in
mov
jg
btc
popf
pop
push
xor
fsubrl
add
dec
aad
xorb
stos
fidivl
jp
jmp
insb
ss
cs
push
pop
mov
jae
idivl
popa
add
jae
cmp
mov
mov
fsts
fildll
jnp
xor
call
lea
push
lret
add
adc
mov
jge
shrb
clc
adc
jl
lahf
push
lds
jno
jns
and
pop
fwait
outsl
les
sbb
xchg
xor
adc
ljmp
gs
leave
outsl
stos
inc
stc
rcl
xchg
mov
cmc
test
xor
jno
sbb
shll
cmc
xchg
mov
nop
mov
pop
shl
loop
movsb
or
sub
in
xor
sbb
inc
loop
aaa
inc
lds
xchg
add
scas
int3
xchg
or
cmp
pop
xchg
mov
shl
pop
and
push
iret
sbb
mov
cltd
push
test
cmp
sub
lock
in
test
lret
push
mov
mov
js
inc
shlb
xor
cmp
in
pop
out
lahf
outsb
or
and
pop
dec
mov
push
pop
sarb
mov
jle
xchg
inc
or
flds
aad
stos
cld
xchg
push
call
popa
test
sbbb
hlt
loop
xchg
bound
repz
and
movsl
in
rol
xchg
push
add
mov
aad
adc
inc
nop
dec
cwtl
rcrb
in
push
jmp
mov
call
jnp
adc
jp
leave
fdivrs
sub
test
les
insl
sub
push
sbb
shl
cltd
sarl
xor
mov
inc
jns
clc
fldt
pop
xor
arpl
insb
ds
subl
push
inc
outsl
push
testb
leave
rolb
mov
std
movsb
out
stos
into
lds
cmp
push
sub
xor
ret
mov
iretw
dec
jno
xor
mov
cmp
mov
xchg
pop
aaa
cmp
icebp
leave
lret
or
enter
pop
xlat
or
dec
cmp
test
sahf
je
mov
push
jmp
sbb
mov
call
ret
test
lahf
leave
shlb
mov
das
mov
lahf
mov
pusha
xchg
pop
mov
xchg
pop
jge
ja
sub
sub
into
xchg
dec
mov
xor
negl
lock
mov
push
mov
push
add
mov
and
les
sub
fs
xchg
roll
pop
out
and
jl
cld
xchg
pushf
lods
ret
push
xchg
sbb
arpl
jns
cli
and
cmp
cmp
test
int3
std
push
and
xlat
movsb
mov
out
ret
mov
loope
jle
popf
in
les
xchg
sub
mov
fs
data16
xorl
push
rorl
popf
push
std
nop
inc
shl
std
aad
push
cvtps2pd
ret
push
scas
shlb
mov
dec
pop
addl
fidivs
fs
loop
imul
xchg
add
lcall
outsb
mov
fnstsw
outsl
ret
xchg
dec
inc
add
sbb
push
lock
lods
and
paddq
test
ss
dec
pop
outsb
cltd
mov
fcoml
loope
push
sbb
xlat
shlb
jmp
jb
add
dec
aad
push
push
xor
mov
popf
test
jmp
cmp
cmc
xor
inc
jp
mov
adc
add
fwait
xor
fldt
notl
cwtl
ss
push
mov
and
sbb
les
add
jg
dec
mov
cmpsb
inc
inc
fcompl
cwtl
mov
and
push
dec
push
iret
sbb
aad
in
mov
adc
jmp
push
add
jmp
sbb
fistps
aas
inc
int
ds
pushw
lret
mov
dec
cltd
jno
mov
mov
aam
lock
xchg
mov
sub
jno
cwtl
adc
xchg
pop
cmp
and
data16
and
sub
mov
adc
out
dec
test
push
arpl
mov
mov
jbe
jo
enter
push
int3
mov
pop
jp
xor
fdivl
hlt
push
sub
mov
add
and
xchg
fdivs
add
faddl
adc
mov
mov
xchg
mov
mov
jb
negl
push
add
scas
mov
add
scas
inc
and
jbe
mov
add
cmc
add
mov
mov
mov
mov
movsb
out
cmp
loope
pop
push
inc
xchg
lds
les
inc
push
jle
mov
xor
adc
int3
pop
or
fildl
sub
repnz
movsb
cmp
sub
imul
cli
or
push
push
cmp
frstor
add
push
and
hlt
imul
ja
repnz
jl
loop
push
rolb
cmc
sub
dec
xchg
cmpsl
mov
sbb
nop
mov
mov
and
and
inc
push
and
movsb
lcall
stos
lcall
sbb
xlat
xor
cs
sub
das
mov
fbstp
mov
jb
pop
das
aas
mov
sarb
stos
int3
loop
push
add
int
mov
lock
ss
in
xchg
xchg
mov
arpl
ds
and
pusha
rcr
xchg
test
int
je
call
fdivr
inc
sub
je
sub
push
jno
jbe
pushf
jmp
cmpsb
sti
mov
cmpsb
adc
jno
jno
mov
pop
xor
pusha
cmp
dec
in
xor
cltd
pop
ficomps
sub
imul
cs
cmp
scas
adc
loope
push
cld
test
xchg
imul
xchg
push
adc
cvtps2pi
cmc
lret
inc
mov
sahf
loope
clc
aaa
fldcw
cmp
fnstsw
inc
push
int
int
push
dec
sbb
cmp
lods
fimuls
push
dec
xor
mov
xchg
ja
push
xchg
mov
ret
ljmp
loopne
push
xchg
test
dec
daa
sbb
addr16
fistps
stos
or
xor
mov
sbb
jp
add
xorl
icebp
stos
in
cltd
shl
xchg
jg
cmp
movsb
jbe
addr16
sarl
cmpb
xor
dec
dec
mov
push
stos
mov
mov
test
icebp
push
cs
dec
popf
xor
cmp
and
call
sub
adc
sti
into
dec
xor
xor
cmpsb
mov
jl
out
cmpsb
inc
dec
or
in
jne
icebp
out
xchg
mov
outsl
cltd
imul
pusha
loopne
jae
or
push
shll
fs
or
xchg
push
push
outsb
pusha
cli
roll
ss
loope
outsl
imul
mov
sbb
xor
xchg
sbb
cmp
adc
and
cmp
leave
or
cmp
das
jecxz
xchg
xchg
dec
ja
fsubl
lods
push
adc
xor
cmp
clc
shlb
sub
icebp
add
test
data16
lret
movsb
sbb
inc
adc
add
mov
xor
test
arpl
pop
push
sbb
and
inc
sbb
shlb
iret
inc
dec
adcl
push
std
xchg
into
xchg
jl
lea
sbb
inc
ret
cli
fstp
rcrb
neg
pusha
mov
xchg
mov
lahf
inc
out
orb
jl
sti
fmull
mov
push
and
test
out
ret
in
outsb
sbb
sarl
inc
push
inc
mov
jno
jg
test
jle
sub
xchg
fnstenv
aam
data16
lret
xor
sub
sub
xchg
xchg
inc
or
or
pop
scas
push
pop
pop
addr16
mov
data16
incl
xchg
push
or
je
cs
loop
xor
cld
push
xchg
dec
cmp
fildll
sub
pop
xor
test
sub
xor
xchg
dec
inc
cmp
xlat
dec
scas
pop
sbb
sbb
jge
xchg
and
cmp
mov
sbb
shrb
sarb
sub
pop
inc
push
push
xchg
dec
sahf
insl
mov
imul
pop
mov
orb
pop
pop
fwait
mov
xchg
pop
popf
jo
sub
jl
stos
adc
stos
mov
lods
dec
adc
add
push
xor
mov
lock
arpl
mov
je
aam
ss
imul
xor
mov
outsb
scas
inc
pop
push
icebp
push
shrl
pop
out
pop
push
pop
xlat
sahf
cmp
mov
inc
push
jmp
test
dec
jae
lahf
mov
loop
cltd
push
stos
into
inc
movsb
orb
cld
shlb
test
rcrl
scas
movsb
push
out
dec
jbe
mov
into
lret
add
adc
inc
mov
mov
inc
mov
in
loopne
rcll
jns
xchg
pushf
lods
push
pop
cmp
mov
arpl
mov
adcb
in
fiadds
sahf
push
stc
out
push
int
std
or
jnp
cmp
jno
cmp
dec
imul
pop
iret
and
cmp
add
sub
shrl
or
xchg
leave
xchg
pop
pushl
jecxz
test
clc
or
dec
clc
sub
sub
mulb
sahf
das
popf
fstp
sbb
inc
insb
stos
pop
sub
jl
mov
test
mov
xchg
std
stos
int3
inc
in
jne
ret
jle
outsl
sub
ret
aaa
fldt
mov
cmp
nop
sbb
js
push
pop
lock
inc
aaa
and
xchg
mov
add
xchg
cmp
mov
pusha
movsb
inc
pushf
cmpsl
mov
push
mov
call
dec
mov
data16
mov
leave
dec
inc
inc
cltd
loopne
jg
call
je
outsl
mov
out
sub
xor
jle
cs
popa
jmp
adc
lahf
push
push
xor
es
filds
push
push
add
sbb
push
std
subl
mov
adc
lods
in
loope
xchg
ss
daa
pop
pop
mov
mov
xor
cmp
inc
mov
pushf
sbb
mov
jae
les
mov
arpl
adc
inc
ss
out
and
xchg
mov
pop
or
das
fildll
fwait
aam
sti
cmp
rclb
inc
lahf
test
mov
int3
xor
add
xchg
jb
adc
xor
mov
push
sti
cmp
push
lods
xor
sbb
or
add
jb
pop
sbbb
mov
loop
push
rclb
or
leave
cmp
ret
xchg
lock
mov
pop
jns
cmp
dec
pop
sbbb
pusha
and
sbb
dec
mov
push
outsl
or
ss
cltd
push
ret
cmp
or
dec
jb
pushf
pop
mul
jae
xorb
ss
shlb
cmp
loop
sahf
call
sti
push
pop
setle
xchg
roll
mov
sbb
add
addr16
fsubrs
test
nop
push
push
inc
lahf
pop
push
cli
mov
cmp
inc
add
push
icebp
mov
fs
mov
mov
jb
mov
jo
aad
or
pop
ret
mov
rorl
aaa
mov
inc
insl
jb
stos
or
stos
test
jl
dec
adc
jo
sti
sbb
add
push
adc
lods
shlb
jp
leave
inc
pop
push
adc
rorl
or
out
pusha
pop
mov
loopne
nop
loope
add
aad
xchg
aas
push
imul
pop
mov
adc
and
js
jns
inc
sub
sbb
add
ret
ds
insb
pop
and
jno
fdivp
cltd
dec
push
jecxz
inc
sbb
pop
int
xchg
fimuls
add
dec
xor
mov
xor
or
dec
add
sbb
imul
push
xchg
and
out
mov
jns
add
imul
mov
mov
pop
push
xchg
pop
clc
push
pop
cli
jecxz
xor
mov
push
xchg
push
jnp
mov
nop
sbb
sub
aad
into
mov
into
xchg
in
shll
mov
mov
lock
repz
imul
or
dec
ljmp
test
ja
imul
sarl
sbb
test
mov
xchg
fwait
gs
and
jae
mov
mov
push
sub
push
dec
sbb
adc
or
insl
enter
jns
push
and
aaa
lahf
cmpsb
push
or
aad
inc
pop
sbb
push
xchg
imul
lock
mov
hlt
rorb
fwait
movsb
jb
xor
xchg
out
test
dec
fstpt
push
and
cmp
repnz
push
fdivrs
dec
outsb
dec
sub
mov
add
xor
add
jnp
or
bound
inc
dec
cmp
cmc
push
ja
sbb
mov
push
aad
test
jae
pop
adc
in
fdiv
cli
test
shll
arpl
push
in
cmpsl
jnp
push
push
or
dec
int
ret
jl
xchg
subb
pop
lahf
mov
and
stc
das
mov
lods
push
push
movsb
enter
jge
sub
push
xchg
in
jg
out
xor
push
push
stos
lcall
test
out
cli
cmp
and
add
or
dec
ljmp
clc
sbb
dec
adc
ds
pop
cs
je
pushf
mov
push
jne
xchg
hlt
imul
lock
inc
das
add
cmp
jns
sbb
sti
sbb
sti
jp
add
push
xabort
in
push
mov
shll
or
ljmp
mov
dec
and
xlat
sti
pop
jnp
or
mov
mov
mov
mov
xlat
cmpsb
clc
fsts
pusha
insl
push
mov
lods
cmp
data16
loop
out
faddl
jbe
out
mov
push
and
xchg
jle
repnz
stos
dec
cmp
dec
push
or
push
out
rcr
sti
dec
repnz
push
out
movsb
jp
cmpsb
mov
out
lret
into
adc
popa
rcrb
sarl
lcall
gs
mov
xlat
cmp
pop
mov
scas
jecxz
cmp
test
ss
je
sub
or
mov
in
orb
daa
dec
dec
data16
std
pop
test
scas
imul
xchg
dec
jge
lea
adc
rcll
mov
mov
fisttpl
push
sar
cmpsl
imul
mov
pop
add
aad
out
in
cmp
decl
jmp
call
push
int
mov
mov
inc
lods
cmp
xchg
adc
mov
adc
mov
outsl
xchg
add
inc
mov
jbe
push
icebp
xchg
movsb
das
mov
jl
sub
daa
mov
dec
arpl
fisubrs
cmc
popa
cld
cmpb
or
cmp
jno
es
pop
stos
cltd
cmpsl
add
test
test
push
jae
xchg
testb
mov
pop
leave
std
mov
stc
lfs
pop
sub
mov
push
out
call
mov
orl
add
add
lcall
mov
inc
mov
stc
frstor
sbb
inc
jo
pop
pop
push
adc
adc
scas
stos
das
data16
rep
jae
out
add
push
and
or
jecxz
daa
dec
cmp
sbb
and
mov
push
fwait
ror
push
das
icebp
arpl
mov
test
sbb
outsb
jmp
mov
xor
mov
push
xchg
sbb
das
jbe
push
lret
in
cmp
jp
cmp
xchg
jp
sub
mov
js
xchg
test
aad
mov
mov
out
aam
test
pop
por
push
popf
dec
or
ss
sub
mov
in
adc
lahf
mov
sti
int3
rcrb
cmp
mov
inc
out
out
test
mov
push
inc
xchg
sub
push
aas
imul
xor
sbb
mov
or
pop
imul
mov
fcoml
testl
dec
rcrl
jmp
mov
sub
adc
lret
mov
sarl
sub
lcall
push
movsl
pop
inc
int
mov
and
popf
xchg
ficomps
mov
out
ss
loope
out
or
adc
mov
cmp
pop
jg
jge
mov
out
je
hlt
outsb
les
int3
out
shrb
addr16
lds
jl
pop
cmc
call
and
call
sub
adc
xor
adc
push
aad
ljmp
js
sub
lds
xor
scas
loopne
lahf
or
sbb
out
lret
add
gs
sub
imul
fstpt
push
xor
push
adcb
jle
and
movsl
jp
adc
dec
jae
loope
jbe
or
xchg
add
jmp
mov
pcmpeqb
iret
jle
add
xlat
adc
ret
fists
jno
pushf
push
jne
add
cmpsl
mov
lds
movsl
shll
rcl
xchg
and
lods
sahf
es
jle
xor
in
push
es
xchg
cmp
jmp
push
rorb
cmp
cmovns
popa
das
hlt
lods
mov
or
sarb
flds
push
inc
aad
mov
mov
mov
xchg
addr16
push
stc
idiv
shlb
adc
sub
inc
and
in
test
dec
repz
outsl
sub
dec
xchg
scas
sbb
pusha
ss
int3
mov
fisttpll
lret
adc
fldl2e
inc
sub
stc
andb
pop
cmp
mov
test
dec
mov
pushf
cli
xchg
xor
mov
or
push
cmpl
pop
pop
cmp
pusha
cwtl
js
insb
fildl
or
cs
xchg
adc
add
lds
sbb
cld
mov
lock
aad
cmp
inc
out
push
or
lock
adc
rclb
int3
mov
or
cmp
je
inc
and
push
lods
adc
mov
rol
mov
push
mov
jg
cmpsl
adc
push
insl
lret
sub
push
jle
arpl
mov
pop
adc
hlt
pop
add
jg
cmpl
aad
fs
push
lock
out
repnz
inc
insb
les
dec
mov
or
push
mov
adc
sti
insb
mov
and
xchg
inc
lea
adc
pop
cmpsb
jmp
lods
add
addr16
dec
nop
cmpsb
jmp
jmp
sar
dec
cs
addr16
xor
aas
fcmove
jb
cmp
sahf
jo
pushf
loope
or
prefetch
leave
cmc
cmp
jnp
mov
jle
fdivl
test
sbb
rorb
int3
sbbl
scas
push
mov
xorl
sbb
movsb
movsb
mov
mov
icebp
add
mov
sbb
add
enter
sbbb
inc
mov
mov
in
adc
xor
rcrl
xchg
mov
test
ret
and
insb
cmp
popa
pop
jne
mov
outsl
xor
xchg
pop
mov
es
les
xchg
nop
and
and
movsb
in
jle
cmp
or
pusha
popf
pop
add
xchg
aas
push
stos
xlat
pushf
pop
push
cs
sbb
jnp
xchg
push
adc
mov
imul
mov
mov
arpl
hlt
sub
mov
or
int
adc
pop
cmp
jnp
das
sub
mov
inc
es
paddusw
out
fidivs
imul
andb
inc
xchg
push
mov
inc
ljmp
ja
stos
aas
sub
pop
jb
sbb
rolb
ds
xor
aad
adc
mov
mov
int3
mov
adc
add
inc
and
insb
sarl
loop
and
lahf
add
or
jb
sbb
mov
and
jo
xor
arpl
and
jae
sahf
out
fistps
adc
cmpsb
lret
aaa
mov
inc
mov
ret
daa
push
mov
mov
cmpsl
aam
ljmp
sub
mov
jl
ret
mov
xchg
pop
mov
lods
insb
cmp
fidivs
jl
xor
add
std
add
sub
and
stc
call
mov
sbb
aaa
sbb
pop
repz
mov
movsb
ljmp
ficompl
inc
mov
bound
mov
sub
mov
call
ljmp
stc
mov
mov
cmp
int
movaps
in
jmp
xchg
dec
repnz
push
js
rclb
sti
cld
xabort
lods
dec
jl
or
repz
xor
sub
mov
adc
jmp
push
fimull
xchg
je
hlt
hlt
pop
or
stc
pop
jb
or
cmp
aam
pop
pop
std
insb
jge
fldenv
daa
mov
rol
decb
divl
push
sub
and
inc
pop
cwtl
test
inc
push
les
addr16
jl
jbe
xchg
shr
xorl
mov
rcll
sub
loop
jns
js
ljmp
adcl
inc
adc
call
divl
lcall
test
jnp
fwait
loop
outsb
int
ss
outsb
decl
adc
pusha
mov
push
cli
and
pop
fimull
and
test
add
mov
push
mov
out
or
and
cwtl
mov
mov
mov
out
lock
mov
shl
cmp
pop
in
mov
lea
out
add
xor
sub
xchg
sub
outsl
or
mov
adc
andb
pop
popl
sbb
inc
mov
xor
rcrb
jmp
xor
hlt
sub
rcll
scas
jnp
mov
or
popa
inc
ret
loop
popf
fldl
push
leave
jp
push
popf
fadds
jge
jnp
xchg
pop
sub
mov
inc
xor
xor
xor
pop
jp
retw
mov
mov
mov
flds
popa
into
roll
push
js,pn
dec
fwait
popf
xlat
sub
pop
movsb
sbb
push
xor
lds
push
push
scas
lods
mov
out
pop
push
sahf
mov
dec
pop
pusha
insb
cmp
lods
cmp
sub
iret
aad
arpl
push
push
rcrb
pop
add
outsb
hlt
cld
data16
addr16
push
imull
enter
fwait
stos
mov
xchg
cs
les
sbb
cli
cmpsl
das
shrb
push
aam
inc
xchg
cmpsb
mov
jo
fidivrl
clc
dec
cmp
jmp
xchg
mov
imul
add
adc
jo
inc
cli
xor
je
pop
pop
push
pop
pusha
xor
xchg
mov
popf
lock
out
dec
mov
aad
xchg
lods
mov
pop
scas
das
add
test
decl
sub
mov
jg
inc
pop
jmp
pop
adc
sub
jmp
mov
mov
lret
pop
cwtl
or
loope
pop
mov
rclb
repnz
sbb
jbe
aaa
cli
imulb
fistpll
std
push
dec
and
sub
sahf
ljmp
dec
insb
cmpsb
call
push
mov
hlt
std
add
mov
push
loop
stos
ret
or
popf
rcll
xchg
divb
mov
ret
hlt
jno
sub
dec
pushf
mov
arpl
inc
push
mov
add
sub
inc
movsb
push
in
push
or
lea
into
sbb
mov
mov
xor
ret
jecxz
xchg
out
pop
out
mov
mov
ss
outsb
jl
lods
mov
xor
inc
in
sub
inc
inc
arpl
fcompl
pop
adc
leave
xor
fcmovne
aad
enter
ja
jl
les
jbe
in
push
and
and
test
push
pop
repz
push
mov
imul
and
ficompl
xchg
ficomps
js
test
fwait
jo
stos
xorb
pop
adc
lret
sbb
loopne
neg
push
rcll
sbb
fnstsw
lcall
xchg
dec
int
cli
pop
test
pop
movsb
jno
jmp
dec
subl
or
cmpsl
lcall
orb
roll
inc
cmp
loop
push
rolb
cmpsb
xchg
add
mov
getsec
mov
mov
lock
cmp
subb
xor
shrb
pop
sub
fucomip
adc
fs
leave
add
gs
mov
jmp
push
lock
jns
ds
repz
dec
stos
jbe
sbb
fdiv
pop
das
outsl
xchg
shrb
mov
pop
popf
mov
stos
push
push
fwait
mov
mov
out
int
aaa
xor
js
adc
xchg
call
mov
pop
sbb
js
int3
xchg
dec
mov
movsb
loopne
les
rcrl
cmc
mov
aad
xchg
cltd
mov
mov
add
jns
in
test
in
pop
jle
cmp
jne
loopne
add
aas
lds
ds
cmpsl
or
stos
pop
dec
mov
xchg
and
test
sbb
addr16
cs
inc
movsl
inc
pop
daa
das
std
xlat
lcall
jp,pn
and
inc
pop
outsl
subl
iret
xor
lea
test
push
xor
jbe
cwtl
lret
mov
and
fbld
jecxz
test
loope
lret
addr16
xchg
es
fcmovne
btr
xchg
xchg
stc
lcall
sahf
iret
sbb
pop
in
scas
roll
mov
fldt
ja
clc
pop
insl
and
mov
sbb
adc
decb
fiaddl
cwtl
jae
movsl
stos
cmp
cmp
test
testb
repnz
mov
hlt
mov
flds
rol
mov
mov
stos
aas
ret
lret
and
stos
and
sbb
mov
push
sub
popf
and
scas
push
lods
and
les
outsb
mov
ret
push
mov
or
inc
pusha
leave
push
into
sbb
inc
sub
popf
fs
sbb
jne
push
loop
push
fucomip
int3
movsb
ficoms
fs
cld
fimull
and
xor
outsb
in
pop
jnp
mov
sub
lea
daa
es
cmp
jb
sbb
jge
daa
rcll
xchg
push
mov
aas
scas
mov
ficoms
loopne
in
inc
insb
push
movsb
xchg
sahf
pop
adc
dec
lods
xor
pushf
data16
cmp
sbb
cmp
inc
aaa
mov
out
mov
pop
out
fildl
jg
sbb
or
mov
imul
mov
dec
cmpl
cmp
xchg
push
js
ds
mov
mov
into
out
mov
ss
pop
dec
pop
sbb
xchg
sub
shr
je
jae
ds
xor
cmp
mov
xchg
sarl
xchg
inc
mov
sub
lods
push
subb
clc
add
push
xchg
mov
and
xchg
les
dec
add
push
out
sbb
mov
inc
pop
je
mov
jbe
pop
dec
das
loopne
mov
inc
mov
sahf
xchg
jbe
pop
pop
push
sar
pop
aad
cmp
pop
cwtl
shr
mov
outsl
and
mov
dec
lahf
xor
ss
dec
pusha
shll
jnp
imul
push
cli
imul
mov
loopne
mov
and
call
in
cmp
ljmp
testl
divb
xor
icebp
aam
sbb
movsb
outsl
jle
data16
add
in
inc
sbb
cmp
dec
sub
pop
daa
ret
and
mov
subb
sarb
enter
in
sub
dec
in
xchg
xor
mov
dec
nop
ret
fdivrl
sub
fsubl
out
or
in
movsl
mov
outsl
sub
flds
loop
jl
loopne
pop
hlt
cld
pop
fistpll
daa
push
aas
rcrl
lret
wrmsr
pop
mov
sub
movsl
mov
stos
ret
lods
sbbb
sahf
out
cltd
lcall
jle
sbbl
sbb
jbe
dec
dec
mov
jo
es
sub
les
add
test
and
inc
lret
enter
cmp
push
sbb
jl
pop
test
dec
xchg
inc
ret
imul
data16
lods
cmc
scas
jecxz
imul
fs
jecxz
icebp
icebp
lcall
add
data16
shrb
push
sti
jbe
xor
mov
adc
push
movsb
dec
gs
mov
ss
cld
inc
lahf
mov
adc
add
inc
cwtl
pop
xor
ror
leave
popa
sbb
sbb
cs
std
aam
cmc
push
pop
hlt
sbb
jmp
ds
add
cmp
sbb
xchg
add
push
test
jno
jb
xor
jne
test
ret
cmpsl
mulb
xchg
adc
lods
fstpl
adc
or
das
es
or
or
enter
call
popf
test
movsb
popa
insb
clc
mov
sbb
pop
cs
std
rorl
notl
adc
mov
inc
jo
inc
jle
pop
mov
xsha256
cmpsb
xlat
stos
jns
into
leave
rcrb
cmp
push
jae
xchg
inc
ljmp
mov
adc
mov
add
ret
mov
mov
movsl
lock
sbb
push
lret
xor
push
jecxz
inc
scas
movsl
sub
movsl
mov
xchg
mov
lods
adc
scas
sbbl
adc
xchg
sub
dec
xor
and
and
test
sub
sub
scas
xchg
sbb
outsb
pop
xlat
ja
jne
jecxz
in
mov
mov
push
pusha
pop
mov
inc
push
int
sbb
xchg
mov
ror
hlt
inc
fidivl
xchg
xchg
adc
mov
and
inc
sub
aam
adc
hlt
lret
add
xchg
inc
cmp
andl
xchg
aas
std
and
mov
in
stos
scas
loope
mov
shrb
or
movsb
push
xor
out
in
mov
call
push
mov
push
pop
add
shll
pushf
mov
cs
lcall
pop
jae
cmp
or
push
adc
mov
and
inc
xor
inc
mov
imul
inc
xor
mov
mov
jecxz
jae
data16
dec
jmp
push
dec
into
pop
add
ds
cltd
ret
mov
notb
pushf
mov
or
jno
pop
mov
outsl
mov
test
lcall
mov
push
popa
mov
inc
and
call
inc
aad
movl
cs
jmp
arpl
movsb
pop
in
xchg
xchg
int
adc
sub
and
movsl
jns
fstpl
in
mov
fimuls
sub
mov
pushf
cmpsl
or
adc
and
dec
nop
mov
call
out
fsubrs
inc
loopne
pop
test
movsb
add
cmc
dec
stc
lock
push
jbe
out
movsb
push
out
fisubs
jae
xchg
leave
push
and
xchg
lods
in
mov
movsl
pop
lds
add
sub
sub
popf
popa
inc
sub
cmp
test
mov
xor
sub
orl
scas
dec
inc
push
sti
into
pop
or
mov
sbb
push
and
dec
fs
mov
and
and
test
lods
pop
jle
fidivrl
iret
mov
and
data16
fidivrs
dec
mov
mov
or
mov
aas
outsb
xor
sbb
dec
cli
bound
jmp
mov
add
subb
sub
push
daa
xchg
iret
and
mov
insb
inc
mov
mov
inc
jg
mov
loop
xor
push
add
sbb
cmp
adc
imul
roll
fwait
test
insb
inc
mov
jns
arpl
xlat
imul
jecxz
pop
das
xchg
popf
xchg
dec
movsl
into
out
fisttpl
push
mov
fcoml
lods
push
and
fists
ljmp
mov
push
push
mov
sub
sbb
pop
xchg
and
aaa
pop
or
jg
scas
or
adc
insl
mov
dec
movsl
out
bound
jnp
xor
add
cld
jns
out
jno
mov
or
pop
or
test
shlb
xchg
lods
sbb
add
mov
fsubl
mov
dec
add
xchg
stos
ret
mov
shlb
or
mov
pop
xchg
push
lods
jo
or
int
push
lret
add
aas
adc
sub
adc
jne
andl
stos
mov
lret
cmp
sbb
push
test
les
dec
xchg
loope
cmc
mov
push
adc
mov
insl
pop
in
cmpsb
ret
pop
dec
mov
xlat
and
mov
enter
fdiv
or
pop
pop
pushf
jne
enter
aas
adc
iret
mov
mov
pop
cmp
inc
cmpsb
xlat
mov
lock
mov
cli
dec
sub
lcall
mov
push
fcomps
fcompl
loope
call
mov
inc
xor
pop
cmpsb
xor
pop
lret
adc
and
push
add
push
fnstenv
or
lock
sbb
stos
loopne
cli
arpl
mov
and
or
bound
and
xchg
adc
in
bound
lods
outsb
sub
sub
in
sbb
cmc
add
xchg
fmuls
cmp
mov
push
mov
loope
sub
mov
sbb
movsl
mov
inc
add
fistpl
pop
ret
aad
imul
pusha
sar
push
cmp
adc
add
mov
inc
stos
lds
jnp
xchg
enter
or
push
sbb
sbbl
xchg
ss
lcall
daa
add
addr16
test
adc
into
imul
and
and
mov
mov
dec
aam
hlt
cmp
orl
mov
je
mov
fs
fisttps
ret
push
js
stos
inc
add
xchg
out
xor
fs
cmp
hlt
cmc
fs
outsb
xchg
jns
incl
int
out
adc
xchg
sbb
pop
push
jb
jg
jmp
sahf
xchg
xchg
cmp
lds
aaa
xchg
int
mov
cltd
mov
scas
aad
adc
sbb
outsl
jno
mov
ja
xor
dec
ret
mov
fsubl
jns
ljmp
cs
and
push
lock
add
cmp
clc
jnp
jbe
cld
dec
adc
mov
inc
mov
in
mov
cmp
lods
clc
lahf
ss
rorl
sub
mov
push
stc
jo
xchg
std
int
xor
in
rcrb
lret
ja
je
push
leave
jnp
cmp
push
push
int
inc
jge
pop
add
push
cmp
xchg
pop
cvtpi2ps
dec
scas
jb
sti
mov
jg
dec
idivb
cmpsb
js
popa
mull
in
add
out
and
xor
addl
push
and
repz
lods
inc
inc
movsb
testb
xchg
addl
daa
xrelease
adc
and
into
mov
addr16
pop
insl
add
test
adc
lds
stc
xchg
and
imul
push
pop
aas
jge
xor
mov
jnp
decb
rcl
lahf
dec
test
inc
loopne
push
jmpw
lods
out
sub
jns
out
jae
cltd
jg
mov
mov
mov
adc
negb
fisttpll
sbb
sahf
loopne
xchg
pmaxsw
bound
testb
fadd
jg
dec
sbb
jmp
and
sbb
mov
pop
mov
or
adc
pop
bound
cmp
sbb
add
lods
repz
pop
mov
push
aaa
imul
das
aam
mov
cmc
mov
pushf
lea
dec
es
leave
xor
in
or
outsl
mov
imul
icebp
jmp
ss
sub
in
push
test
into
lock
lea
pop
cli
pop
ja
lret
out
mov
imul
jae
fisttpl
xor
mov
negb
lock
jmp
roll
roll
out
mov
in
pop
js
dec
or
jle
mov
push
xlat
push
outsl
mov
push
mov
outsl
mov
stc
or
or
and
sbb
cmp
clc
mov
xchg
bound
scas
xchg
das
jo
jmp
push
and
xor
pop
xchg
rolb
sub
mov
mov
adc
ret
xchg
add
adc
cmp
mov
lcall
push
pop
push
cld
addr16
inc
inc
js
iret
fwait
daa
ss
lock
stc
int3
shlb
lret
insb
stos
cltd
or
sbb
aam
mov
sar
lock
out
pop
cmp
push
out
sbb
aad
push
add
test
push
test
mov
sbb
fnsave
lahf
popf
jnp
std
cmpsb
cmpsl
push
and
rcr
xchg
fcoms
adc
mov
push
cmpsl
inc
aam
push
cmp
mov
clc
push
cmc
jb
mov
jg
scas
ds
test
ds
mov
flds
mov
repz
jp
in
cmp
fsubp
imul
push
xor
add
aas
pop
mov
shll
jne
popa
lret
dec
mov
outsb
not
sbb
mov
test
stc
or
das
cmp
je
sub
xor
ss
cli
icebp
enter
sbb
xchg
std
scas
mov
pop
out
add
daa
fiaddl
cmp
or
and
dec
ret
rcl
enter
inc
sbb
adc
mov
lock
fs
out
in
jmp
dec
pop
clc
mov
xlat
mov
pop
or
lcall
cmpsb
or
jle
cmp
jmp
add
iret
dec
ljmp
sbb
dec
mov
pop
lahf
stos
lret
jae
mov
loop
or
das
in
fmuls
loope
pushf
aam
adc
pop
clc
bound
fcompl
lcall
mov
insl
jp
hlt
pop
xchg
xchg
push
xchg
xchg
push
sbb
mov
xchg
arpl
mov
fsub
in
mov
lret
sub
dec
dec
xor
pop
inc
rcr
xchg
and
js
enter
push
fadd
inc
push
push
mov
int3
pop
pop
ret
jmp
rorb
fxch
cmp
mov
sti
adc
ljmp
sub
inc
push
or
jecxz
lret
inc
lret
xor
mov
jnp
outsl
test
cmp
cmp
ds
filds
addr16
bound
dec
roll
outsl
mov
idivb
movsl
sub
loopne
cmpsb
adc
loopne
insb
mov
push
jg
mov
insl
jge,pn
popf
or
adc
shll
or
movb
or
add
mov
mov
pop
mov
push
mov
jns
iret
je
and
inc
ljmp
sub
subb
xchg
pop
outsl
lods
pop
adc
mov
rcr
aas
mov
xor
stos
cmp
lret
das
cmp
add
outsl
fwait
repz
pop
and
fs
nop
js
rcrl
xchg
sbb
cmp
xchg
and
push
xchg
fldcw
jo
pusha
in
mov
push
mov
cld
fwait
mov
mov
cltd
test
cmpsb
sub
or
test
in
in
dec
lcall
xor
clc
and
out
dec
xchg
scas
insl
mull
ljmp
mov
aad
ja
addr16
inc
mov
mov
neg
test
lahf
stc
dec
outsl
ljmp
out
pop
pop
and
push
je
jmp
pushf
stc
dec
jae
repnz
sbb
ret
xchg
xor
lcall
mov
leave
mov
pop
dec
mov
es
in
cld
out
in
sbb
jecxz
sbb
mov
xor
jne
xor
rolb
data16
cli
scas
repnz
add
fwait
cltd
lret
negl
adcl
adc
test
jl
xchg
or
gs
call
fstp
lds
daa
jp
dec
cmp
jb
mov
sub
sub
mov
xchg
pushf
iret
loope
and
fwait
sarl
xor
fsubrl
pop
mov
pop
std
popa
jne
cmp
jle
les
scas
fucom
scas
bound
movsb
dec
inc
iret
rolb
cmp
shlb
inc
sbb
lds
stos
in
insl
adc
jnp
iret
jmp
push
or
dec
jbe
xor
xor
pushf
xor
loop
sbb
cmp
filds
dec
xorb
push
sbbb
add
fnstcw
push
aam
das
leave
or
fnstsw
inc
cmp
pop
push
or
push
or
hlt
rcl
push
xor
test
fmull
xlat
pop
leave
movsb
push
adc
rcll
cmp
inc
jg
out
inc
iret
call
popf
cmpsb
xchg
cs
inc
shrb
rcrb
les
movsb
fcoms
lods
out
enter
lock
mov
out
pop
mov
inc
mov
dec
in
push
andb
xor
fxch
xor
ds
jmp
nop
ret
fstpl
fnsave
lods
mov
pop
push
or
aas
jp
inc
rclb
push
push
lods
dec
mov
push
loop
xchg
dec
outsl
sub
pop
arpl
testb
sub
shll
out
sar
imul
pop
push
jbe
adc
xor
repz
imul
jo
lahf
loopne
arpl
es
sub
iret
call
nop
cmp
sbb
sbb
stos
sub
inc
ja
add
pop
icebp
lret
xlat
movsb
add
sub
psllw
jle
jmp
mov
adc
test
pop
cmp
add
enter
mov
or
adc
adc
clc
adc
push
std
out
mov
hlt
sbbb
mov
js
in
insb
pusha
out
sub
xchg
cmp
and
nop
hlt
iret
inc
loopne
jmp
sbb
jmp
ret
pop
add
sbb
jmp
adc
and
jae
into
jns
cmp
xor
dec
inc
loopne
lret
xchg
push
sbb
fucomip
inc
cld
lock
and
addr16
adc
sbb
cmp
add
cmp
sbb
into
test
cmp
sahf
xor
outsl
sbb
outsb
mov
add
fsts
lahf
ret
addr16
fisttps
xchg
or
mul
cmpsl
fs
jmp
dec
imul
lcall
aam
mov
repnz
dec
out
les
lds
push
sub
adc
mov
test
jbe
inc
stc
pushf
xor
in
lods
mov
mov
xchg
lods
fdivrl
aaa
cmpsb
cwtl
push
aad
mov
std
lret
rcr
push
subb
inc
loope
xchg
fidivl
mov
movsb
insl
shr
test
lret
mov
sub
mov
dec
mov
sub
das
dec
pop
cmovg
in
mov
outsl
mov
cmc
cmp
addr16
lea
lahf
push
jnp
push
in
sbb
xor
daa
adc
xor
js
aam
xor
mov
sbb
out
scas
lock
pop
add
push
sbb
int
pop
or
and
in
mov
repnz
pop
sub
jo
sbb
sahf
pop
dec
fwait
clc
adc
jecxz
mov
dec
mov
andb
dec
add
xchg
push
mov
mov
out
sbb
mov
add
mov
out
mov
test
xor
scas
mov
cmp
shrl
stc
push
xor
adc
inc
stc
imul
ret
std
add
orl
xchg
inc
mov
mov
sbb
mov
loopne
pop
pop
jno
shl
cmp
ljmp
pop
mov
jns
pop
jo
rcrl
xchg
out
int3
js
fstl
mov
das
sbb
mov
xchg
push
jmp
jbe
jne
mov
enter
fcomps
insb
les
aaa
imul
pop
pop
adc
es
mov
popf
repz
imul
push
cmp
rclb
sub
mov
fiadds
jb
fisubl
sti
mov
movsb
nop
and
sbb
and
and
nop
mull
cli
stos
in
call
mov
or
and
dec
jecxz
mov
cmp
and
outsb
mov
inc
pop
leave
sbb
ljmp
mov
sub
inc
insb
mov
loope
fwait
lret
inc
dec
cmpsb
cs
nop
jl
cwtl
ss
insb
cmp
out
outsl
mov
and
pop
pop
cmp
pop
call
das
negl
xchg
jge
add
ljmp
pop
cmp
pop
es
sub
add
cld
lds
test
cltd
lcall
pop
xor
cmpsb
cmp
pop
dec
pop
and
ret
jae
pop
loope
aad
jl
inc
push
ds
add
sar
in
inc
std
notb
cmpsl
mov
pop
fcmovb
push
shrb
or
sub
cltd
and
push
xor
jno
xor
jnp
into
xor
xrelease
pop
lods
jg
and
inc
and
mov
xchg
cli
imul
push
sub
imul
leave
aam
shlb
cmp
shl
pop
mov
popf
call
mov
outsb
jecxz
ljmp
mov
nop
pop
mov
hlt
mov
gs
mov
push
sub
cmp
movsl
cmpsb
add
mov
cmp
and
xchg
lock
aaa
ja
cwtl
xor
cld
sahf
test
xor
sbb
pop
sub
lret
stos
and
mov
sbb
mov
into
dec
out
in
cmp
mov
adc
mov
mov
pop
in
gs
ja
adc
push
cmp
pop
jo
xor
cmp
mov
in
xchg
pop
jae
mov
inc
xor
adc
push
fldz
or
cmp
sahf
lods
lods
hlt
fisubs
mov
ljmp
outsb
or
or
cmp
xchg
mul
push
inc
aam
pop
loopne
and
xor
shr
push
pop
in
popf
mov
jle
push
test
stos
imull
movsb
adc
mov
cmp
movsb
mov
imul
mov
mov
popf
push
out
inc
int
test
and
pusha
out
sbb
ss
pop
jge
sbb
push
scas
orl
or
xchg
xor
dec
ret
popa
into
adc
cmp
xor
pop
fwait
lcall
test
mov
js
jle
arpl
adc
inc
jo
out
xor
cmpl
aam
adc
push
add
cmp
lret
pop
add
jecxz
or
jp
cwtl
jmp
mov
rorl
loope
pop
adc
in
jecxz
mov
call
sbb
mov
push
mov
stos
add
lods
mov
insl
rorl
and
sub
fs
mov
adc
xchg
ret
xor
mov
rcrb
les
adc
test
imul
push
jnp
pop
stc
push
arpl
push
lahf
inc
fwait
add
repnz
popf
sbb
sub
cmp
pop
int3
loop
add
pop
sub
and
sub
mul
loop
daa
and
xchg
cmc
outsl
jne
cmpsl
addb
xchg
arpl
jnp
mov
or
fwait
sub
xor
or
mov
in
xchg
fstpt
fwait
aas
fistpll
jno
add
gs
sahf
pusha
hlt
nop
in
mov
sub
mov
dec
int
mov
xor
popf
add
fcmovnbe
sbb
cmp
and
xor
dec
hlt
jmp
cmp
popf
fs
aam
call
xchg
pop
xchg
add
mov
ds
push
stc
stos
lret
aam
sub
mov
stos
push
xchg
or
pop
mul
jb
imul
dec
jp
mov
or
pop
sub
gs
outsl
call
fnstcw
pop
sub
ror
xor
jg
or
cmp
jp
mov
xchg
out
pushf
pop
daa
jecxz
insl
xor
ds
repz
pop
mov
out
outsl
rolb
cmpsb
outsl
lods
in
pop
add
outsl
das
mov
jmp
cmp
adc
lahf
fwait
sbb
or
repz
pushf
mov
dec
mov
cmpsb
pop
jnp
ret
imul
sub
xor
aam
inc
dec
cli
cmp
outsl
cmp
scas
fdivr
cwtl
in
and
inc
stc
divb
sbb
out
mov
loopne
outsl
popf
and
push
fsubl
lods
jg
ja
test
ja
mov
rorl
inc
or
mov
mov
mov
aad
inc
arpl
cld
mov
cmp
fcompl
test
scas
sub
xor
add
xchg
loop
jbe
dec
das
jmp
bnd
cmpl
sbb
sbb
mov
ret
push
push
jl
jmp
push
dec
xchg
push
jg
aaa
nop
lret
and
jno
in
adcl
out
les
lret
xchg
cld
push
rcll
add
popa
popf
insb
xor
call
faddl
and
fisubrs
pop
lret
std
jne
inc
fisubrs
clc
sub
mov
fdivrl
mov
add
es
out
mov
dec
cltd
mov
push
out
xchg
add
or
lds
dec
les
jne
ret
sbb
fcoml
mov
push
cwtl
jno
jmp
outsb
pop
rcl
cmpsb
add
mov
sbb
and
js
cmpsb
inc
add
jmp
mov
insb
in
cld
sub
sbb
ret
faddl
inc
and
mov
or
aam
mov
pop
jae
pop
das
rclb
shlb
adc
popa
or
dec
xor
lahf
pop
pushf
dec
popl
sbbb
cmpsl
push
lods
sahf
incb
sarl
pop
shl
inc
xlat
pop
test
mov
out
shlb
shlb
fwait
cmp
jmp
cmp
loop
mov
fisubrl
mov
das
into
sub
inc
loope
xchg
sbb
fsts
popf
popf
inc
push
push
mov
lods
jbe
inc
outsb
stos
inc
into
cmp
cmp
or
rcl
into
sub
sbbb
xor
adc
mov
pop
push
sar
ret
jle
insb
push
divl
aam
hlt
xchg
cmpsb
cli
add
addl
js
dec
inc
add
xchg
insl
sbb
rcr
sub
add
ds
adc
sub
aam
int3
sbb
inc
roll
sti
and
fcomi
mov
sub
adc
insl
lods
inc
mov
cli
mov
push
test
inc
sbb
imul
sahf
ret
mov
mov
inc
mov
mov
xor
adc
xchg
jb
jmp
lds
fsubrl
push
cmp
sub
mov
mov
loope
inc
mov
mov
stc
movsb
push
cmp
and
addr16
arpl
sub
fisubrs
mov
push
int
scas
adc
rcrb
fisubrs
jmp
popa
sub
out
stc
enter
xor
mov
shrb
jno
sbb
or
mov
adc
bound
int3
mov
out
mov
xacquire
cmpl
jno
mov
mov
hlt
aaa
subb
fsubl
std
cmp
sahf
push
sbb
ljmp
dec
sti
hlt
lret
and
int3
fstl
add
movmskps
lcall
and
sub
sbb
dec
lods
push
jmp
push
subps
adc
push
xor
xlat
jno
out
fistpl
add
adc
add
mov
fsubr
std
mov
out
jb
imul
arpl
out
daa
and
dec
push
mov
cmc
jge
shlb
push
int
mov
sarb
sar
in
sub
push
xchg
xor
ret
mov
jecxz
cmp
into
addr16
call
pop
ficoml
in
sahf
lret
insl
paddusw
fs
jae
push
dec
popa
aaa
in
or
jmp
cwtl
mov
mov
inc
jnp
inc
jae
jle
cld
xlat
inc
std
cmp
out
pop
jmp
in
pushf
jp
fnstenv
adc
dec
in
xor
or
leave
mov
xor
sbb
lock
fmuls
jmp
iret
push
jnp
adc
add
pusha
jbe
out
cmpsl
lds
push
or
xchg
add
repnz
fldl
mov
mov
popf
dec
mov
cli
ss
das
push
dec
add
enter
cmp
sti
and
and
mov
lods
inc
dec
sbb
jge
divl
mov
jb
pop
stos
std
lock
lock
ja
push
es
sub
mov
test
and
cmp
repnz
mov
test
or
shll
or
cld
scas
lea
loope
inc
xchg
in
sub
test
cmpsb
mov
pop
scas
mov
inc
pop
test
imul
imul
inc
fisttpll
mov
dec
pushf
dec
mov
andb
sbb
push
pusha
in
cli
out
std
rcrl
pusha
pusha
push
pop
xchg
cmp
push
ja
mov
pop
mov
das
rcrb
or
xchg
xchg
mov
ret
add
dec
adc
stos
mov
cltd
dec
mov
adc
imul
fnstcw
and
inc
mov
or
xor
sub
cmp
xor
jle
mov
fdiv
cmpsb
addr16
arpl
push
and
repnz
add
push
ret
push
jns
mov
das
int3
addb
add
clc
mulb
pop
pop
xor
movsl
in
push
cwtl
pop
and
cltd
adc
fwait
cs
mov
push
push
lcall
in
inc
lea
or
lods
insl
add
stc
and
sub
inc
cmpsl
imul
jle
jp
push
rolb
mov
pusha
out
push
inc
adc
enter
mov
dec
pop
push
sub
push
xchg
xorb
das
aad
add
pop
dec
pop
pop
pop
mov
fs
xchg
orl
xor
mov
aas
sub
xor
test
mov
xlat
mov
test
pop
imul
mov
lahf
jne
cld
sub
sar
bnd
push
adc
xor
pop
jp
sub
xchg
xor
jmp
mov
fwait
jne
mov
lcall
enter
or
lods
imul
pop
stos
inc
pop
imul
inc
stc
mov
hlt
mov
inc
loopne
dec
rolb
cwtl
pop
stc
imulb
inc
rcl
cmp
insl
jle
pop
imul
mov
xchg
dec
sub
repnz
pusha
mov
inc
cltd
icebp
loop
add
shrb
xlat
and
repz
fisttpll
gs
mov
stc
repnz
mov
push
cmpsl
inc
pop
jp
push
loope
je
push
imulb
add
orl
mov
pop
mov
cmp
dec
cmp
daa
mov
jecxz
ds
and
faddp
push
shl
or
adc
ficoml
cwtl
dec
aam
or
inc
test
add
sbb
insl
mov
lret
dec
or
mov
out
movsl
aad
jecxz
xchg
xchg
out
push
sti
in
inc
and
std
test
push
notl
add
test
mov
mov
mov
xor
int
push
ja
sti
pop
pop
bound
mov
push
movsb
fisubrl
mov
jp
mov
xor
enter
or
in
aam
jecxz
pop
mov
sub
pop
sbb
cmp
cli
xor
roll
fwait
mov
mov
mov
jp
pop
lret
inc
sbb
ret
lcall
in
decb
inc
mov
mov
sar
jo
inc
dec
pop
fnsave
stos
in
roll
das
shr
mov
inc
sub
sahf
inc
add
clc
imul
push
lds
jo
mov
adcb
test
popf
mov
sub
push
nop
es
js
mov
sbb
rcrl
pop
out
outsl
push
inc
out
insb
repnz
hlt
cmc
jecxz
xor
and
dec
xchg
fisttpl
lahf
jge
adc
test
cmp
lods
sbb
and
mov
cmp
fstl
add
ret
add
or
inc
or
decl
xchg
in
pop
mov
out
roll
fldenv
pop
rep
xchg
inc
mov
addr16
add
push
mov
pushf
movsl
les
inc
cmc
inc
cmp
scas
sbb
aam
inc
dec
ret
lret
cmp
xor
cltd
aas
mov
sbb
lret
sti
lods
xchg
arpl
inc
inc
xchg
imul
or
push
addr16
jmp
sbb
jb
lahf
xor
xchg
xchg
fidivrl
adc
pusha
add
loopne
xor
les
mov
daa
stos
test
adc
and
pop
pushf
enter
je
xlat
jl
lahf
xor
adc
test
icebp
mov
popl
sub
xchg
cltd
es
out
inc
dec
repnz
incb
icebp
sub
adc
xor
mov
ss
pop
mov
addr16
cmpsl
sbb
or
pop
aad
mov
push
lcall
pop
addb
jg
test
push
pushf
pop
mov
rcll
sub
add
mov
js
out
pushf
fs
pusha
ss
test
and
fwait
jg
inc
mov
sub
addr16
enter
push
adc
ret
cmp
fcoms
add
insl
outsl
jecxz,pt
out
mov
push
mov
lcall
ja
lret
popa
sub
dec
mov
shll
push
outsl
mov
mov
insl
sub
lds
xchg
sahf
fisttps
shrl
xor
ja
jge
and
xor
movl
in
fiaddl
xchg
add
sub
xor
rcrb
mov
add
shlb
pmaddwd
inc
jb
inc
popf
xchg
dec
xchg
sbb
push
out
push
cwtl
jbe
daa
leave
lea
jmp
mov
push
into
push
sub
inc
addr16
xchg
or
dec
or
in
loope
push
add
fcoms
stos
add
add
mov
mov
jo
inc
add
push
ljmp
cmp
ss
nop
sbb
insl
jecxz
lret
and
pop
outsl
or
pop
xchg
jg
or
in
push
aam
jne
push
cmpsl
adc
bound
orb
out
divb
sub
mov
cmpsl
inc
add
pop
iret
xor
mov
je
loopne
dec
cld
lds
jl
das
push
push
sbb
mov
xor
int
mov
dec
out
mov
cmp
and
lock
lods
lea
sub
xchg
lods
cli
inc
jns
lahf
lret
dec
mov
fimuls
hlt
inc
leave
mov
gs
or
stc
jmp
and
dec
adc
xchg
aam
sti
adc
mov
repz
stos
push
loop
dec
jno
out
inc
adc
xchg
or
push
pusha
fldenv
pcmpgtb
pop
std
pop
adc
mov
fsubp
sbb
sbb
or
test
fnstsw
ljmp
repnz
xchg
fstpt
and
cmc
and
xchg
fldenv
lcall
push
adc
pop
pop
cmpsl
insb
xor
jl
das
mov
mov
push
jg
xor
adc
sbb
dec
pop
xchg
mov
fisubrs
rol
insl
fildl
adc
adc
jae
sbb
sub
or
scas
xchg
push
imul
and
xchg
add
ds
es
push
rclb
aaa
jbe
daa
mov
lret
sbb
jg
movlps
paddq
in
lods
rcll
and
mov
dec
mov
xchg
add
xchg
xor
jo
jnp
ficoml
push
fstpt
das
jmp
ds
pop
stc
pop
fwait
jae
ds
xchg
xor
js
in
arpl
mov
fstps
xchg
js
xchg
aaa
mov
pop
js
sub
mov
mov
push
iret
stos
test
popf
inc
or
lcall
out
je
outsl
xchg
or
es
insl
sub
lods
orl
mov
xchg
pusha
mov
sbb
test
adc
dec
jo
xchg
test
mov
in
pop
leave
inc
out
jl
mov
cmc
mov
push
cltd
sarb
or
int3
jecxz
shrb
pop
adc
or
xchg
push
cwtl
adc
push
jns
in
mov
push
and
inc
in
in
and
fwait
pop
int
or
adc
push
dec
adc
adc
cmp
jecxz
xor
pop
push
rcrb
inc
and
aam
jg
mov
and
sub
push
dec
test
out
xchg
mov
xor
cld
repz
cwtl
xchg
flds
xor
lea
stc
stos
and
add
data16
loope
stos
pop
cmp
xchg
jge
sub
jb
repz
push
mov
imul
mov
or
out
mov
nop
daa
mov
lods
inc
pop
jl
pop
in
faddl
je
pop
fs
jge
incl
dec
cmp
cs
lock
cltd
add
sbb
pop
sub
lock
fucomp
int3
mov
cmp
mov
dec
and
and
mov
cs
test
popa
divl
sti
ss
mov
mov
je
rorb
push
aas
bound
push
pop
inc
cmp
inc
push
mov
pop
fsubl
mov
andb
push
mov
add
push
mov
mov
call
jge
xchg
pusha
stos
sbb
hlt
xlat
xor
or
imul
xchg
rclb
shll
or
pushf
or
xor
jle
ljmp
lea
or
arpl
aam
push
dec
sbb
xchg
je
push
add
xor
cli
mov
mov
mov
sahf
std
mov
pushf
dec
jbe
movsb
call
cltd
xor
and
imul
out
push
sbb
mov
xchg
lock
frstor
pushf
pusha
std
jg
mov
xchg
iret
mov
insl
in
ds
dec
lcall
insb
cmpl
dec
lahf
repz
sub
testb
insb
cmp
push
and
sbbb
cmp
add
aam
mov
pop
push
and
cmpsl
push
fldenv
or
sub
pop
aaa
das
inc
push
out
and
pop
push
ljmp
adc
pusha
movsl
cmpl
and
xor
dec
lret
inc
cmc
imul
mov
push
stos
mov
xor
enter
popa
cmp
das
mov
test
mov
and
pop
push
xchg
cmp
inc
movsb
dec
jno
or
adc
xor
out
ret
loop
lods
xchg
cwtl
pop
add
inc
insb
cltd
pop
cmp
into
cmp
dec
out
mov
lds
sbb
push
cld
insb
pop
push
xchg
insl
xchg
jle
popf
mov
add
sbb
sub
add
jmp
mov
out
or
imull
cmp
push
int
mov
adc
or
sub
imul
into
pop
mov
mov
inc
test
jl
cmp
jecxz
test
call
pop
inc
leave
js
cmp
test
in
adcb
xchg
sub
add
adc
or
clc
add
cmc
mov
inc
negb
js
ja
ja
add
pop
dec
mov
int3
loopne
xchg
cmp
out
cwtl
stc
push
xchg
fsubl
jbe
or
mov
jle
jecxz
lods
mov
lcall
push
inc
mov
mov
test
je
inc
pop
inc
pop
mov
nop
aam
popl
aas
adc
jmp
das
sub
and
push
cmp
int3
mov
and
dec
sub
sahf
ljmp
ja
addr16
fldcw
add
push
pop
daa
std
insl
xchg
xchg
in
fdiv
or
add
push
loop
dec
mov
sub
nop
jb
test
mov
or
jb
test
push
cld
sub
mov
pusha
adc
cld
cmp
push
mov
test
sti
mov
ficoms
test
add
add
xorb
mov
sbb
aas
or
stos
pop
aam
and
pop
mov
lcall
aam
in
rorl
testl
ret
xchg
rorb
fs
lods
dec
stos
jbe
shll
dec
lahf
adcl
dec
cwtl
ds
push
mov
test
outsl
add
or
stc
sbb
mov
push
pop
test
inc
rorl
mov
sahf
xchg
out
jle
cmp
es
lods
aas
insb
cli
cmp
sub
ljmp
and
sub
cmp
aas
das
outsl
lret
dec
inc
mov
vpunpcklbw
fwait
xor
cli
movsl
gs
aam
jbe
fldenv
ret
inc
mov
dec
repz
fcoml
push
aam
sub
fiadds
xchg
mov
clc
push
mov
cmp
fsubrl
adc
sub
pop
xchg
call
or
repnz
test
or
add
dec
shrb
in
mov
sarb
pop
xchg
mov
popa
sub
sub
mov
imul
mov
jecxz
cmp
fimull
fs
adc
into
sub
jl
adc
push
push
mov
xchg
sub
es
sbbb
rorl
lea
mov
or
jmp
mov
addr16
jb
xor
daa
cmpl
mov
repz
jbe
ss
push
mov
adc
xlat
push
push
ret
and
xor
sub
add
cmp
cmc
scas
lock
insb
call
sbb
xchg
cmp
mov
push
xor
pop
clc
stos
jecxz,pt
xchg
repz
lods
pavgw
jp
mov
fcompl
out
in
fdivrl
xor
shrb
pop
mov
add
push
test
hlt
stc
xchg
dec
fdivrs
into
test
sub
fldpi
enter
je
xor
add
roll
xchg
fidivs
push
ss
push
and
pop
hlt
jns
test
and
jns
xor
sub
inc
xor
stc
sbb
lds
dec
cmp
cmp
aam
mov
mov
subb
and
sub
adc
call
pop
inc
xchg
jg
xchg
shll
mov
stos
sub
mov
iret
cltd
mov
sbb
dec
nop
outsl
cwtl
ds
dec
mov
aaa
inc
sub
and
jne
les
fsubrl
inc
les
es
cltd
in
ljmp
out
outsb
inc
push
addr16
sub
inc
test
inc
or
fcoms
std
ficompl
dec
fiadds
lret
imul
rcll
sub
ds
stc
add
xchg
xchg
pop
imul
jnp
dec
mov
cmc
popa
inc
mov
pop
sar
sbb
js
cmp
xchg
mov
push
or
adcl
ds
lods
lods
xchg
popa
fsubl
mov
push
pop
inc
jne
lods
push
pop
out
sbb
insb
popf
or
xor
sbb
test
and
test
xor
sub
jmp
cmp
sub
sarl
sub
push
add
pop
push
mov
xor
mov
dec
mov
mov
pop
push
hlt
jmp
pop
push
sub
mov
sub
mov
dec
mov
cmp
sub
cwtl
cmp
or
adc
lret
sarb
inc
mull
js
inc
adc
and
lds
out
inc
mov
jg
shl
mull
inc
pushf
dec
push
outsl
lock
cmc
add
push
fs
mov
add
push
not
or
pusha
dec
int3
lock
scas
rcrl
es
negb
cmpsl
int3
push
xchg
addl
cmc
lods
inc
aaa
push
cld
push
cld
pop
xor
adc
jb
sarb
rorl
bound
in
mov
xchg
or
movsl
xchg
scas
data16
call
repz
outsb
movsl
add
nop
mov
xor
loopne
cmc
cmpsb
cmp
xor
aad
xchg
push
inc
sar
lahf
sbb
pop
out
clc
lret
insl
adc
sahf
insb
sub
imul
mov
jnp
jmp
in
push
test
xchg
and
test
and
mov
mov
push
nop
adc
jnp
pop
movsl
mov
and
sub
stos
adc
cmp
mov
int
xchg
xchg
dec
lock
push
and
es
lock
pop
gs
testl
mov
idivl
add
cltd
sbb
or
pop
pop
jmp
mov
cmp
in
sbb
push
mov
ret
sub
loop
cli
inc
outsl
lret
pop
jb
jl,pn
in
cld
cltd
and
jecxz
pop
dec
pop
aam
sub
loope
pop
sub
daa
mov
jne
or
lods
add
cmpsl
fistps
stos
mov
js
jmp
addr16
jp
xchg
sbb
xchg
stos
sub
jp
lods
mov
dec
aam
jbe
add
jb
lods
mov
or
pop
jae
xchg
popf
sbb
and
rolb
sub
sbb
inc
push
xchg
out
outsb
and
xchg
jnp
pop
lods
xchg
mov
add
out
js
lahf
add
sub
push
inc
add
aad
bnd
fs
or
xchg
insb
mov
adc
mov
daa
inc
or
xchg
add
int
shr
gs
xor
dec
mov
dec
pop
filds
out
sub
divb
mov
mov
neg
and
fs
into
shll
or
mov
outsb
das
pusha
xchg
sysexit
mov
loop
inc
sti
cld
loopne
fwait
push
scas
or
mov
fiadds
fwait
xlat
cmpsl
imul
je
repnz
cmp
or
xor
push
gs
out
test
std
pop
mov
test
ds
cwtl
xor
jbe
ja
dec
insb
jmp
ja
loopne
fwait
aad
fcmovu
movsb
xchg
addr16
lret
inc
pop
pop
dec
ds
subl
lcall
pop
and
inc
add
or
mov
sub
aam
xor
mov
jle
in
pop
inc
xchg
mov
inc
fwait
call
rcl
lods
cmc
jmp
fsubs
jno
fisttpll
fldcw
lods
out
divl
out
aad
mov
in
test
mov
mov
daa
sbb
and
pushf
js
in
jae
jno
mov
mov
inc
in
test
cmpsl
cmpsb
insb
xor
mov
sub
arpl
or
sub
hlt
sbb
or
pusha
test
clc
or
mov
inc
test
out
or
mov
filds
pop
ss
inc
insl
arpl
lret
mov
rcll
pop
adc
add
pop
test
xor
jb
orb
inc
in
mov
lcall
add
repnz
call
lods
fs
pop
gs
dec
jae
mov
push
dec
test
jne
xchg
push
xor
cmp
and
cmpsb
les
sub
mov
cmpsb
cmpsl
das
xchg
fmuls
xchg
loope
sbb
pop
js
push
lods
cmp
cmpsb
push
inc
cli
call
pusha
inc
jo
in
nop
shll
scas
fwait
out
sub
pop
pop
cmp
mov
not
out
sbb
lods
inc
testl
jb
mov
sub
je
xchg
xlat
in
repz
mov
xchg
or
cltd
or
int3
mov
aas
or
sub
scas
and
mov
ror
in
in
int
mov
cmp
sbb
adc
lea
mov
mov
lods
icebp
mov
push
cmp
and
jmp
bnd
clc
push
dec
xlat
ja
ds
sbb
pop
testb
pop
xchg
stc
add
dec
add
mov
into
jbe
rcl
push
std
nop
inc
push
fs
loopne
xlat
pop
jns
lret
mov
mov
mov
bound
imulb
xor
jo
fbld
mov
and
mov
cli
pop
push
cmp
cmp
mov
jp
flds
sub
sahf
inc
push
push
mov
sub
pop
jnp
ss
iret
nop
fidivrs
arpl
repnz
push
push
cwtl
ss
adc
mov
push
gs
xlat
add
jo
imul
jp
push
lods
fisubs
cmp
and
mov
mov
pop
xorb
fidivs
xchg
push
xchg
pop
xor
addl
push
test
xor
inc
cmc
pop
xor
pop
js
popl
cmp
mov
or
add
cltd
scas
mov
test
jno
rol
push
ljmp
bound
popf
adc
or
pop
mov
test
sbb
lds
mov
mov
test
dec
scas
xchg
movsl
dec
and
push
and
sbb
js
testl
dec
pop
fisubl
nop
out
in
dec
popa
or
clc
sub
sbb
sub
fwait
popa
xchg
sahf
cld
mov
push
inc
popa
xchg
jg
andb
lods
lods
xor
ret
out
outsb
mov
push
cmp
add
push
pop
inc
cmp
insl
dec
mov
movsb
push
inc
dec
jae
les
scas
ja
adc
push
push
jge
fwait
iret
loope
int
xchg
imul
outsl
adc
pop
imul
or
sub
dec
stos
pusha
pushf
cmpsb
cltd
and
in
fxch
sub
rcll
xor
mov
in
or
sbb
add
sti
cmpl
or
or
cmpsl
in
mov
test
xchg
imul
inc
pop
sub
lods
std
sbb
shl
push
xchg
lock
and
fimuls
ficomps
push
inc
iret
je
add
mov
js
adc
cmpsb
sbbl
add
scas
bound
bound
and
sub
outsb
xchg
add
rcrl
inc
rolb
out
flds
sti
mov
mov
outsb
cmp
xchg
imull
roll
dec
dec
pop
xor
cmpsb
push
mov
and
shlb
andb
scas
fcomi
pop
hlt
jns
je
loope
in
and
jns
add
mov
inc
xchg
xchg
data16
mov
cmpsb
in
sti
pop
adc
iret
movsl
sbb
repnz
arpl
adcb
jg
add
sub
mov
in
cmpsl
mov
sub
xchg
mov
clc
sarb
mov
xor
cmpb
mov
leave
mov
cmp
xchg
fadd
outsb
sbb
aad
jne
pusha
pop
cmpsb
xchg
sbb
cmc
cltd
sbb
mov
repz
cwtl
loopne
mov
js
popa
sub
test
inc
mov
xor
lret
cmp
add
mov
adc
into
int
cmpsl
jecxz
pop
fcmovne
pop
cmpl
movsb
cltd
or
call
mov
push
lret
out
dec
push
push
sti
lock
into
mov
and
ret
hlt
mov
mov
out
lds
or
pop
lods
xor
outsb
add
push
add
icebp
inc
cmpsl
add
adc
out
popa
imul
sbb
inc
pop
daa
movsb
sub
and
or
mov
pop
push
ret
lea
xchg
cmp
data16
mov
xchg
in
fs
insl
dec
outsb
repz
and
dec
mov
in
test
xor
sub
jge
call
jp
mov
scas
push
out
pop
cs
add
mov
pop
lea
sbb
xor
inc
mov
add
fwait
mov
pop
mov
push
enter
fisubrs
cwtl
mov
jecxz
gs
pop
popf
notb
mov
cmp
dec
lcall
lahf
stc
addr16
pop
std
xchg
cmp
int
adc
pop
sbb
xchg
cltd
gs
sbb
or
cltd
shll
jecxz
jae
mov
mov
inc
lods
into
loope
xor
jmp
jmp
hlt
mov
or
in
add
mov
icebp
inc
cld
xchg
mov
dec
sub
add
mov
in
adc
and
push
mov
outsb
xchg
add
aas
pop
stos
push
mov
movl
arpl
xchg
js
cltd
es
out
gs
in
sbbl
rcr
push
adc
std
nop
addr16
cmpsb
bound
sbb
pop
stos
mov
mov
scas
shr
repnz
dec
lock
repnz
incb
pop
or
cltd
test
lret
out
jns
int
aad
jb
mov
daa
nop
xor
mov
xchg
jne
jnp
or
fsubrl
aad
les
pop
sti
outsb
scas
xchg
fistpll
scas
imull
xchg
mov
jb
inc
sqrtps
pop
test
dec
adc
outsl
inc
testb
xlat
or
jns
mov
fcoml
cmpsb
movsb
inc
pop
rcll
add
enter
stc
and
push
jmp
outsb
shr
xchg
leave
out
dec
les
outsl
shrl
inc
jle
inc
inc
pop
cwtl
stos
push
loop
cwtl
test
dec
cmp
inc
pop
sub
cmp
mov
mov
cld
out
dec
dec
cmpl
add
cmpl
add
mov
imul
pop
adc
mov
rorl
iret
push
pop
and
push
hlt
iret
popa
push
js
or
sbb
loopne
nop
out
leave
add
outsl
ret
clc
sub
ror
inc
movsb
jg
fwait
and
adc
mov
lock
ja
mov
xchg
inc
addr16
mov
mov
pop
pop
int3
adc
jmp
mov
inc
pop
rolb
les
js
insl
mov
xchg
cwtl
or
xchg
jle
sub
dec
cld
jno
xchg
sar
mov
enter
add
clc
je
adc
xor
or
xchg
dec
add
push
sub
sub
jp
cmp
fisttpll
iret
xchg
push
insb
xchg
jnp
movsb
adc
jl
fsub
aaa
xlat
clc
xor
fstl
mov
xchg
mov
sti
sbb
inc
sbb
out
push
iret
int3
imul
outsl
ficomps
xorl
jae
rolb
cwtl
shll
xchg
and
lahf
insb
test
mov
roll
movsl
mov
leave
xor
popa
setg
mov
sahf
stos
fnstcw
outsb
adcb
push
js
lahf
gs
aam
sbb
mov
out
clc
sbb
js
push
pushf
xor
mov
ret
pop
enter
mov
inc
jg
dec
xorb
sub
or
mov
xlat
xchg
jbe
mov
rorb
test
dec
dec
out
xchg
ret
je
or
xor
adc
mov
loope
push
lret
xchg
cmp
mov
aam
pushf
push
fwait
adc
sbb
mov
jno
jecxz
xor
addb
movsb
jle
fisubs
sub
adc
push
and
inc
pop
mov
xchg
in
imul
push
loope
gs
insb
pushf
push
imul
stc
iret
and
adc
mov
jecxz
sbb
add
aam
mov
addl
xchg
jns
fisubs
xor
cli
stos
repnz
dec
sbb
sub
movsb
cmc
mov
push
mov
jg
add
pop
xor
js
xchg
add
mov
dec
mov
cmpl
arpl
or
inc
pusha
addr16
fwait
repnz
mov
jnp
std
fs
nop
mov
cmpsb
push
je
enter
mov
dec
xor
loopne
mov
test
cmp
imul
mov
pushf
push
rorl
scas
nop
out
fucom
repnz
sti
mov
cmc
stos
inc
or
push
call
js
ret
adc
adcl
ds
int3
movsb
add
jnp
lods
popf
popa
mov
fnstsw
lahf
push
sub
mov
fwait
cmp
enter
mov
inc
push
insl
xchg
dec
xchg
ljmp
pop
fs
mov
xchg
ss
or
and
andb
loopne
and
pop
xchg
sahf
or
cltd
add
add
xor
jp
and
push
jb
jp
lret
pop
sbb
cmpsb
cmc
xor
mov
in
sbb
pop
fisubl
in
fiaddl
inc
stos
mov
fld
hlt
imul
sub
push
add
push
repz
out
movsl
sub
movsb
sbb
mov
pop
and
daa
inc
imul
cmp
push
mov
int3
mov
js
mov
mov
test
xchg
mov
inc
scas
add
jmp
in
cmp
fmuls
fxam
adc
data16
xchg
ljmp
jg
mov
mov
nop
pop
adc
fisubrl
inc
mov
pushf
jmp
mov
fs
or
mov
pop
mov
sahf
hlt
aas
mov
xor
cs
mov
push
shll
or
lcall
dec
adc
out
scas
jp
cli
addb
lret
and
jne
mov
aaa
pop
jg
stc
hlt
movsl
jp
jg
dec
popf
divl
jmp
jns
ljmp
xchg
pop
aam
scas
pop
out
and
ljmp
std
ret
test
outsb
int3
lret
sar
aas
popa
jnp
sbb
sub
dec
dec
dec
lahf
sahf
ror
jmp
add
fnsave
aad
stos
sub
xchg
int
lret
rclb
cmpsl
push
test
into
jle
pop
in
add
cmp
cli
insl
cs
xor
add
mov
cmp
xor
mov
push
push
or
jp
pop
outsb
or
addr16
and
leave
and
jb
js
jl
mov
lret
loopne
pop
cmp
pop
rorl
pop
cmp
gs
popa
cmp
dec
daa
adc
ja
lcall
incl
xchg
jnp
push
repnz
dec
push
out
enter
std
enter
push
loope
scas
jne
div
add
mov
int
icebp
push
jle
cltd
jo
mov
mov
fiadds
mov
cwtl
std
ss
push
shll
das
lret
cmp
inc
lret
jbe
repnz
and
jp
xchg
gs
mov
clc
int3
btc
cltd
push
lret
insl
int3
pop
mov
xchg
or
das
pop
stos
sbb
mov
ss
mov
mov
mov
dec
bound
push
shlb
movsl
xor
mov
insl
mov
iret
cmc
xchg
mov
vunpcklps
aaa
insl
mov
xor
pop
mov
xor
sahf
sbb
ficoms
sbb
les
rsqrtps
clc
rorb
mov
xchg
pop
or
dec
popa
xchg
loopne
mov
lea
xor
fldt
jp
pop
and
sbb
inc
sahf
mov
mov
inc
iret
stos
lods
cmp
or
cmp
std
stos
cmc
repnz
aam
push
mov
add
mov
mov
pop
pushf
gs
sahf
ret
ret
arpl
shll
shlb
std
jl
out
adc
and
loope
jns
inc
loope
mov
adc
nop
cmp
scas
fimuls
mov
fcmovbe
lods
rclb
aaa
jo
js
xor
xor
push
jnp
and
lret
inc
xor
scas
mov
shrl
fisttpl
sbbl
mov
adc
lahf
jle
pop
mov
icebp
cmp
fldt
ja
int3
add
dec
js
inc
inc
fnstenv
push
cmpsl
loop
leave
xor
stos
push
icebp
sub
inc
mov
mov
mov
jbe
lods
repnz
jae
mov
int3
cmpsb
adc
pop
push
mov
je
mov
enter
pop
mov
xchg
loope
bound
sahf
jne
inc
int
push
adc
mov
or
dec
pop
lahf
fs
ds
ja
pop
addb
push
jp
mov
and
pop
jg
stos
fldcw
lods
adc
jg
and
jp
xchg
mov
test
cmp
and
cld
fxch
gs
xor
shrb
add
int
dec
imul
xchg
jo
jmp
outsb
jno
gs
test
stos
or
daa
dec
add
mov
cmp
cltd
cwtl
or
mov
and
leave
jne
pop
mov
lret
xchg
pop
in
int3
xchg
mov
stc
mov
in
or
clc
cmp
movsb
ss
push
imul
pop
push
stos
leave
repnz
sbb
lcall
and
mov
sbb
cmpsl
dec
sahf
or
add
call
in
mov
call
out
fists
mov
adc
shl
lock
in
imul
mov
xor
push
cmpl
shlb
add
mov
sbb
sub
sbb
cld
adc
lds
inc
int3
mov
fwait
pop
push
loop
adc
sbb
pop
mov
push
dec
push
adc
jge
clc
xlat
sub
adc
jmp
popf
push
cwtl
dec
xchg
or
imul
push
or
xchg
shl
mov
in
ret
jbe
xchg
pop
in
ja
cld
mov
and
or
das
test
aam
inc
idivl
sahf
xchg
addr16
ret
test
es
imul
sbb
in
jmp
daa
ss
daa
pop
insl
jno
scas
mov
jnp
sbb
lret
or
loop
in
call
mov
std
sub
adc
outsb
cmp
mov
pop
push
mov
outsl
cli
adc
jnp
ret
mov
dec
insb
in
das
push
cmp
xchg
xchg
sbb
xchg
rcll
or
dec
and
cmpsb
pushf
out
mov
enter
sub
push
rclb
rcrb
xor
sbb
cmpsb
test
pop
push
mov
lret
sub
leave
jge
cmpsl
cwtl
ljmp
aaa
sbb
inc
nop
in
mov
ret
into
cld
mov
test
clc
psrlw
inc
adc
fs
xor
sub
std
pop
mov
mov
xchg
ret
int3
xchg
dec
push
push
or
cmpsb
add
pusha
shl
push
jp
fsubl
sti
into
out
xchg
out
movsl
scas
sahf
call
ficomps
mov
add
inc
xchg
es
stos
jmp
jns
dec
ret
imul
cmpsl
rorl
imul
fs
mov
out
add
aaa
mov
xchg
pop
stos
adc
fwait
lds
pop
enter
xchg
xchg
add
fwait
mov
sbb
stc
sub
pop
ja,pn
and
pop
adc
cmp
or
mov
or
scas
int3
cs
mov
es
fnstcw
rolb
fwait
mov
aam
aam
mov
inc
bound
mov
aad
std
push
mov
or
lahf
add
stos
add
mov
xchg
sub
mov
cmp
leave
sub
cmp
xor
add
sub
lret
cmp
adc
xlat
roll
xchg
scas
mov
pop
sbb
mov
jp
mov
fsubl
jge
adc
jno
imul
cwtl
push
adc
test
sahf
stos
sbb
mov
mov
and
mov
std
movl
cmp
jo
aaa
push
adc
ja
fstpl
push
dec
and
mov
and
das
xchg
jge
cmp
dec
dec
test
js
push
mov
iret
cmp
in
addr16
dec
cmpl
fcoms
subb
pushf
cmp
popa
xlat
jmp
jb
adc
pop
ret
mov
call
push
mov
bound
sub
mov
jb
mov
sub
push
sets
or
or
dec
ror
inc
mov
nop
bound
lahf
rcll
js
fwait
add
or
jecxz
ja
pop
jns
pushf
mov
pop
out
shr
test
outsb
mov
lods
lret
ja
push
das
call
jo
rcll
lret
lea
xchg
aaa
imul
repnz
push
les
and
ret
repz
push
jnp
pushw
mov
shl
pop
mov
ja
push
in
fstpt
jbe
mov
mov
out
dec
or
orb
cmp
xchg
out
fucomp
pushf
mov
xchg
shll
jno
jne
push
cmpsb
add
pop
ret
mov
xor
stos
arpl
out
sahf
lods
xorl
mov
fistpl
rclb
push
dec
das
or
sub
mov
scas
jmp
pop
repz
mov
fmuls
lret
jge
dec
cmpsl
mov
cs
lret
stos
das
imul
xor
and
mov
frstor
les
sbb
dec
insl
sbb
leave
push
adc
jo
lret
xchg
mov
or
out
into
or
ds
je
dec
cwtl
jl
nop
inc
cmp
pop
dec
jg
repnz
sub
lcall
loop
lds
dec
sbb
scas
scas
xchg
xor
mov
imul
xorl
rcrb
pop
adc
push
stos
cld
in
ss
and
into
mov
shlb
into
icebp
mov
icebp
and
daa
inc
jle
insb
fcomps
ret
jl
pop
pop
push
sub
dec
out
push
and
adc
stos
jle
pop
mov
pushf
pushf
pop
dec
mov
iret
test
pop
push
xor
popl
aas
icebp
push
outsb
daa
fwait
mov
adc
fcoms
push
int3
popf
or
xchg
loopne
jp
scas
jne
add
inc
inc
mov
jg,pt
mov
pushf
andl
fwait
inc
add
fcompl
sub
inc
lock
movsl
ret
inc
or
pushf
inc
clc
lret
or
push
xchg
andb
xchg
push
xor
push
push
outsl
arpl
xchg
jo
dec
clc
mov
es
dec
push
fldt
and
jb
adc
mov
out
add
daa
mov
mov
mov
xchg
xor
push
and
and
aam
and
push
inc
adc
mov
add
mov
pop
adc
add
int3
inc
cmp
add
clc
fmuls
jle
leave
ja
lea
test
outsb
push
addb
xchg
shlb
add
out
movsb
push
test
inc
dec
adcl
int3
mov
insl
adc
out
pop
xchg
push
sub
sub
mov
ficoms
movsb
out
scas
mov
mov
cld
rorl
lock
adc
rclb
popa
xchg
ret
jae
xchg
jp
mov
cld
lods
add
fsubrs
sarb
insb
cmpsl
xlat
jg
test
pop
and
cld
inc
mov
lods
and
sub
in
addr16
fs
and
mov
sbb
fstpt
mov
lret
mov
pop
mov
xor
sbb
add
pop
xchg
or
sbb
add
les
mov
test
jne
add
adc
push
or
mov
rcr
pop
into
pop
mov
jmp
in
add
lods
and
push
ss
xchg
jge
outsb
popf
lahf
sub
jnp
mov
call
lock
or
cmpsb
and
bound
jne
lds
mov
pop
stos
cmpsb
xchg
sbb
pop
or
sub
sbb
ret
cmp
add
nop
jne
into
and
xorl
int
mulps
in
xchg
sub
cli
jg
stc
add
fisubrl
pop
inc
nop
xchg
dec
mov
std
lahf
sbb
mov
push
xor
sub
jns
sub
test
shlb
xchg
shl
out
or
jne
sbb
and
inc
nop
cld
test
pop
aad
fists
subl
test
mov
mov
adcb
or
loop
and
pop
xor
cmpsl
ret
or
test
mov
mov
mov
mov
push
add
or
aas
imul
loop
out
inc
mov
adc
aam
mov
aaa
jno
les
add
movsb
das
fisubrl
push
fcmovu
in
cli
les
mov
movsl
ja
cmpsl
and
repz
lret
arpl
sbb
push
push
jmp
adc
sub
mov
insl
xor
sub
jnp
or
ret
lret
cmp
and
push
push
scas
adc
shrl
mov
imul
jns
or
push
call
gs
imul
xchg
pop
lds
push
or
jno
daa
test
clc
push
xchg
sub
fwait
cld
sbb
lods
sbb
ret
pop
xor
ljmp
test
xchg
mov
inc
jg
lea
in
leave
ss
je
pop
int3
out
repnz
mov
daa
pop
or
inc
les
out
in
lcall
jne
out
sbb
mov
std
adc
in
out
in
movsb
stos
sbb
xchg
loope
pop
sub
pop
addr16
addl
test
and
sub
int3
fmul
jg
cld
imul
mov
jno
and
mov
jl
out
pop
and
test
lds
test
gs
in
inc
movsl
xor
mov
repz
nop
mov
out
gs
xchg
shlb
addr16
outsb
sbb
jno
pop
out
iret
mov
add
push
std
outsb
mov
shrl
mov
cwtl
inc
sahf
in
jns
ss
jmp
cmp
cmp
imul
ret
lods
shlb
xchg
add
sbb
add
jns
and
sub
cmpsb
leave
loop
mov
out
repnz
xor
adc
or
jmp
dec
xchg
push
scas
ftst
shll
int
in
insb
xor
jle
in
dec
lock
sub
nop
push
pop
into
jne
hlt
pop
mov
xor
xor
subl
xchg
sarb
aam
push
arpl
mov
fs
pop
gs
xor
xchg
cmp
mov
fstpt
sub
fildl
aam
stos
mov
cwtl
pop
jne
cmp
sbb
inc
push
movsl
lock
and
add
fsubrs
mov
sub
xchg
notl
add
mov
pop
push
out
adc
stos
fs
enter
fcomps
or
cmc
out
int3
adcl
pop
mull
dec
mov
jg
in
mov
cmc
xchg
fs
dec
xchg
push
mov
dec
sub
push
inc
or
dec
or
in
xor
sub
dec
sahf
pop
and
sub
mov
push
xor
arpl
inc
xchg
mov
push
inc
iret
mov
je
jmp
xor
adc
sub
mov
mov
iret
cmp
out
outsb
iret
addb
fwait
dec
jp
or
jle
cmp
push
mov
int
dec
out
xchg
cmp
hlt
jge
es
fcompl
mov
cmp
or
or
jl
xchg
into
cwtl
jp
xorl
or
pop
xor
mov
js
push
and
test
dec
pushf
icebp
dec
xchg
push
lock
adc
testb
inc
cmp
pushl
fimuls
pop
cs
mov
cld
push
push
pop
out
mov
aad
jmp
outsl
inc
mov
stos
jae
notb
mov
xchg
pop
daa
xchg
lret
push
xor
inc
xchg
decb
fstl
dec
mov
sbb
mov
aad
dec
inc
call
mov
cmp
dec
roll
mov
into
mov
xchg
out
ret
incl
rcrl
std
or
or
shll
mov
in
push
sub
sahf
pop
jmp
addr16
popa
sbb
loope
pop
dec
mov
or
stos
dec
adc
popa
in
into
data16
mov
cs
mov
or
popa
pop
test
mov
ret
nop
test
cltd
jl
mov
jle
mov
and
into
in
outsb
mov
or
int3
xor
mov
ja
mov
xor
adc
loope
ds
sbb
outsl
jmp
fs
jl
loope
enter
inc
lods
aaa
addb
and
std
popa
adc
test
adc
gs
outsb
push
mov
cwtl
push
inc
arpl
jp
insl
mov
aas
push
gs
pop
pop
push
addb
sbb
ljmp
xor
pop
les
cmpsl
xor
lods
movsb
xor
enter
fs
inc
inc
sbb
mov
mov
and
mov
add
sub
ficoms
mov
mov
sbb
ljmp
leave
sub
pop
enter
mov
imul
mulb
jnp
sti
push
xor
imul
stos
bound
out
in
aaa
mov
pop
lret
sbb
mov
or
insl
mov
adc
and
cmpsl
xchg
dec
fsubs
stc
loop
xor
mov
push
pop
cwtl
pop
in
call
or
push
or
mov
xor
ret
sub
pop
hlt
mov
push
test
inc
jge
sub
aad
jae
fwait
fs
rcll
inc
sahf
push
int
xlat
xchg
pushf
pusha
ret
sbb
mov
mov
int
jnp
aad
jns
call
sub
and
mov
leave
pop
dec
jne
fnsave
push
sarb
jp
mov
mov
data16
cmpsl
mov
fmull
pop
addb
cmp
dec
pop
and
out
cli
lahf
loop
push
and
sbb
fdivp
mov
adc
daa
sahf
adc
push
mov
popf
cmp
out
dec
xchg
pop
adc
mov
push
fnstenv
add
in
jo
push
sbb
and
push
inc
or
leave
jb
outsl
lods
fsts
xchg
sub
insb
data16
leave
fwait
jns
int
std
enter
popf
das
aaa
nop
sub
or
int
cli
dec
push
cltd
cmpsb
es
jno
push
adc
mov
mov
mov
adc
ret
in
sub
loop
pop
fcompl
dec
or
mov
add
clc
push
and
rol
jne
sti
cld
jecxz
jno
mov
mov
dec
cmp
ds
les
add
jbe
mov
cmp
adc
inc
adc
xor
xchg
and
push
cmp
in
dec
mov
mov
push
or
movsl
rep
mov
jle
sbb
sub
mov
jae
or
xchg
and
test
xchg
fcoms
pusha
sti
push
fadds
jne
dec
into
sub
sbb
jge
cmp
xchg
insl
adc
sbb
sbb
pop
jp
idivl
cmpsl
addr16
enter
aas
and
xchg
mov
ja
cmp
jo
repnz
xorb
mov
rcrl
mov
aaa
and
jne
push
add
movsb
cmp
imull
sbb
dec
dec
sub
cmp
insb
jno
and
std
lock
enter
push
push
jae
dec
movsl
cmp
ds
lea
mov
xor
dec
and
xchg
fidivrl
pop
xchg
shrb
fisubl
pushf
mov
xchg
mov
jnp
push
mov
stos
lret
ret
mov
imul
mov
fsubrs
jp
cmp
cmp
fiaddl
cmc
mov
mov
insl
sbb
dec
jne
push
and
js
cmp
rorl
adc
jnp
adc
add
jle
fdivrl
or
mov
mov
adc
sbb
xchg
stos
adc
cmp
mov
jle
aad
add
xor
xchg
lcall
xchg
jecxz
mov
orb
mov
fwait
xlat
dec
pop
outsb
ret
popf
outsl
leave
push
roll
std
clc
ret
or
js
fcmovnb
cs
sbb
jmp
sbb
ds
test
inc
icebp
jmp
xor
mov
js
pop
mov
ret
jo
xorb
enter
cmp
mov
xchg
push
jge
addr16
test
cmp
fimuls
imul
jbe
push
mov
mov
sub
hlt
xchg
mov
mov
dec
push
jb
and
mov
add
fidivrl
gs
pop
scas
xchg
leave
mov
push
cmp
lret
imul
cmpsl
pop
inc
aas
mov
in
scas
sub
inc
outsl
sbb
movsb
xchg
mov
lods
adc
jg
loop
dec
loope
jmp
aam
inc
or
cld
push
out
mov
mov
mov
jnp
loop
xor
lock
cmp
mov
rcrl
outsl
pop
inc
pop
popa
cmp
incl
loop
shll
cmp
mov
je
mov
adc
sti
stc
and
and
cmp
gs
adc
mov
push
or
adc
ret
das
sub
mov
data16
ret
pop
xchg
lds
xorb
xor
pop
push
lcall
and
mov
mov
sbb
or
sti
cmp
and
sub
loope
xchg
xor
enter
lock
lea
jo
std
aaa
aaa
mov
repnz
mov
cld
sub
in
cs
das
inc
fyl2xp1
popa
outsl
xchg
daa
imul
and
sub
cmp
mov
sbb
mov
and
test
outsl
push
add
mov
aam
pop
sbb
dec
pop
adc
addl
lds
sahf
xchg
cmp
jge
std
dec
push
mov
pop
xor
leave
cs
pusha
mov
xorl
dec
sbb
mov
mov
rolb
add
and
cmpb
lea
xchg
mov
lds
pop
enter
rcr
test
pop
rolb
xchg
sub
add
push
ja
xor
fnsave
and
int3
stc
cmpsb
pop
fsubrs
push
mov
aaa
or
ficoms
outsl
mov
mov
out
xlat
aad
or
dec
lea
lods
jo
in
bound
fcmovbe
pop
push
iret
dec
movsl
ds
sbb
movsl
lods
cmp
dec
pusha
in
popf
adc
mov
ljmp
movsl
repz
into
shrl
mov
and
dec
push
int
arpl
loopne
pop
ret
hlt
stos
mov
jp
je
in
pop
sbb
lret
cmpsl
cli
dec
mov
stos
out
push
cmpb
into
daa
mov
sub
jg
add
and
int
fdivs
xor
adc
xchg
out
push
add
add
dec
out
test
add
mov
or
add
adc
push
dec
mov
rol
inc
jg
ljmp
mov
divl
adc
loope
pop
test
sub
jns
call
imul
andl
push
cltd
add
jo
push
pusha
leave
in
sbb
mov
push
jae
cmp
xchg
mov
jnp
push
xor
gs
lcall
push
lea
repnz
fwait
or
xor
cmp
pop
addb
add
xor
hlt
push
out
push
adc
shlb
adc
inc
sub
adc
mov
shrl
jb
mov
and
dec
stos
mov
cmc
or
cld
loop
out
insb
mov
clc
or
mov
sbb
cmp
mov
cmpl
inc
push
out
add
adc
add
inc
pop
mov
or
jno
je
xchg
mov
add
hlt
repz
xlat
in
icebp
cli
xlat
inc
xchg
cmp
or
adc
sbb
notl
leave
jle
mov
lock
imul
pop
sbb
sub
adc
inc
cli
test
jmp
cmc
sub
je
mov
inc
aaa
cld
fwait
xchg
fidivl
adc
push
dec
shlb
and
push
outsb
cmc
add
jg
cmp
push
inc
std
or
insl
jmp
movlps
adc
pop
je
aam
add
xor
lock
xor
es
ss
jl
jg
test
sbb
add
sub
lods
cld
fbstp
adc
jb
sbb
xchg
mov
mov
mov
sbb
jmp
test
adc
addr16
mov
mov
fdivl
aam
jl
mov
sarb
movsl
repz
mov
ret
mov
push
mov
shll
jne
sbb
add
jp
sub
mov
lods
in
arpl
adc
in
sbb
int3
mov
lds
jbe
cmpsl
mov
lock
insb
out
lret
dec
pop
frndint
std
xlat
iret
add
pusha
loope
gs
cli
jecxz
imul
inc
pop
pop
dec
jl
mov
addr16
mov
mov
push
jg
xchg
dec
inc
inc
mov
sbb
mov
int
jo
aad
mov
test
repnz
xchg
fldt
ret
test
add
sbb
add
xchg
xlat
sbb
ffree
lcall
push
pop
xlat
or
test
cmp
and
or
insl
push
mov
popa
dec
inc
je
push
jae
mov
cmpsl
shlb
fs
sbb
and
xor
nop
mov
and
adcb
sbb
notb
rclb
push
ret
scas
push
mov
arpl
nop
push
in
lods
pop
xorb
nop
mov
mov
aaa
out
adc
mov
jg
test
out
pop
mov
push
pop
xor
nop
sbb
push
scas
cmpb
fldl
pop
xchg
inc
rcrb
add
popf
sbb
rorb
jg
push
xchg
rcll
jmp
jmp
enter
je
int
mov
mov
popa
clc
mov
mov
subb
in
incb
int3
mov
rclb
sbb
ret
and
arpl
sub
and
clc
jo
cwtl
cmp
fisubrs
or
dec
sbb
lods
and
idiv
cmp
xor
sub
fdivr
iret
iret
bound
mov
adc
dec
cmp
lea
jbe
xchg
std
pop
dec
pop
stos
sub
in
xor
pop
sub
cmp
fmull
xchg
jmp
aam
in
inc
push
mull
push
xor
in
lods
xchg
inc
int3
nop
jnp
jbe
xor
adcb
inc
pop
pushf
pop
iret
int3
ss
lods
lahf
ds
pop
sbb
inc
in
xor
fistpll
popf
sbb
lret
rolb
outsb
xchg
ds
xor
or
mov
mov
mov
mov
dec
jb
mov
addr16
adcb
cmpsb
fistl
jno
arpl
inc
iret
cmc
xchg
pop
pop
mov
not
jl
or
pop
cmc
pushf
cltd
aas
mov
sahf
adc
mov
jle
mov
mov
pop
cltd
jne
push
es
dec
dec
mov
pop
lods
cmpsb
loopne
mov
mov
and
lods
cmpsb
inc
mov
adc
movsl
lret
cmpsl
xchg
aas
xor
cmp
cmp
aad
aad
cmc
out
adc
push
or
mov
pop
add
mov
popa
cmc
mov
mov
in
mov
andb
xchg
dec
movsb
push
aaa
ja
scas
pushf
cmpsl
xor
fimuls
pop
test
inc
sbb
sbb
inc
lock
pop
insl
loopne
inc
xchg
dec
xchg
mov
mov
arpl
mov
dec
cmp
rolb
imul
cmpsl
jb
jl
inc
mov
jge
jecxz
mov
pop
pop
cld
inc
int
xchg
xor
fadds
pop
pop
outsl
mov
pop
dec
sahf
adc
and
inc
popa
ljmp
ret
inc
stos
mov
out
xchg
outsb
pop
add
dec
xor
out
icebp
or
mov
das
inc
pop
xor
sub
fmuls
mov
xchg
stos
xlat
pop
lea
mov
std
and
fisubrl
dec
push
jae
fs
mov
or
push
lods
rorl
lods
test
sub
ja
in
out
lods
inc
adc
in
or
jge
in
test
dec
pop
sub
pop
pandn
rclb
mov
jl
push
aas
movsl
and
pop
into
fstps
scas
dec
les
ret
jne
gs
xchg
shlb
mov
rorl
repnz
mov
jmp
xchg
in
pop
movsb
add
sahf
loopne
add
stc
push
xchg
and
or
mov
inc
xchg
fildl
push
mov
adc
shll
push
fildl
ret
les
lds
and
sub
adc
jbe
sbb
je
mov
test
adc
jno
int3
xchg
add
insb
stc
cld
adc
mov
adc
mov
lods
and
jae
and
movsl
mov
xor
jbe
and
lret
sub
test
sub
mov
push
inc
xor
dec
fabs
bound
pushf
outsb
loopne
add
mov
push
xchg
orb
xchg
cmp
out
xor
adc
adc
add
cltd
lcall
test
push
enter
imull
add
xchg
pop
mov
and
aas
jns
mov
pop
ret
lods
inc
adc
arpl
das
out
mov
pop
and
fimull
or
nop
cli
push
in
inc
dec
fisubrl
push
push
cld
jae
ss
dec
dec
fisubrl
push
dec
aad
sub
dec
jmp
pcmpgtb
xchg
out
xchg
pop
xor
scas
mov
rcl
jne
fdivrl
xlat
mov
mov
inc
adc
aad
jecxz
negb
dec
rcrl
aam
popa
js
outsb
fimull
adc
jge
cltd
cmpsb
ror
push
test
cwtl
cmp
mov
add
dec
pop
xchg
test
mov
jo
jnp
mov
test
inc
pop
fldenv
fisttpl
push
ret
mov
inc
hlt
ja
mov
scas
arpl
ss
stos
xchg
mov
decb
mov
add
cmpsb
cld
popf
push
xor
hlt
int3
sub
cwtl
inc
jne
ficoml
or
mov
out
and
rcrb
lret
mov
adc
enter
cmp
je
jg
enter
jp
fstpl
xor
mov
outsb
sti
rcr
mov
sbb
or
xchg
enter
and
push
push
adc
rorl
xchg
jbe
dec
or
aas
mov
xchg
or
xchg
es
mov
rorb
sub
std
or
push
xchg
ja
push
jge
mov
pop
ret
pop
jmp
pushf
mov
cmp
daa
sahf
enter
ds
jp
fildll
xchg
jp
pop
inc
push
rorl
notl
xchg
sarb
add
scas
pusha
movsl
xchg
sbb
mov
jnp
jb
adc
inc
call
push
dec
fsubs
and
fstl
sbb
xchg
jno
and
adc
jno
jecxz
add
test
ss
and
mov
roll
or
or
push
in
pop
jae,pt
data16
push
push
dec
push
out
ja
push
push
xchg
ret
dec
es
pop
sar
in
arpl
stc
cmc
xor
mov
add
jns
jo
out
inc
in
enter
cmp
adc
mov
fs
push
push
lea
push
loop
rorb
sub
out
in
or
inc
xchg
or
jo
outsl
push
dec
or
stos
or
xor
and
lret
mov
jmp
hlt
lret
jge
and
test
jp
arpl
subl
mov
dec
shll
fldt
loop
movsb
jp
sub
cmp
pop
filds
lods
mov
push
mov
jnp
xor
roll
jo
sbbb
inc
rolb
loopne
xchg
lock
movsb
out
fisttpl
xchg
imul
stos
hlt
and
es
imul
fadds
mov
fstpt
loope
mov
sub
adc
notl
jmp
ret
sbb
test
mov
push
xchg
mov
nop
sub
enter
cmpb
and
or
in
mov
xchg
inc
sarl
aas
adcl
cmp
lahf
sahf
cmp
jp
add
xor
dec
mov
jo
xchg
xchg
icebp
das
inc
cs
std
jne
push
cmpsb
jle
scas
mov
jns
aas
daa
push
shrl
add
add
nop
hlt
idivb
in
adc
mov
sbb
adc
xchg
jo
pushf
mov
ss
xor
gs
and
sbb
das
call
mov
add
dec
jae
push
packsswb
insl
pop
xor
cmp
iret
mov
stc
pop
adc
cmp
sbb
cld
lret
or
outsb
sbb
inc
lret
jge
movsl
imul
cltd
mov
dec
or
push
outsl
adc
dec
xor
addr16
dec
out
sub
xor
leave
lods
lahf
loop
dec
cmpsb
push
fwait
xchg
out
dec
jo
outsb
out
mov
inc
dec
addr16
pop
mov
jae,pt
jae
repnz
push
cld
cld
inc
mov
mov
stc
lods
test
fiaddl
cld
loope
mov
mov
mov
outsl
mov
popa
lods
dec
insb
outsb
gs
jne
cmp
cltd
inc
jmp
sti
mov
movsl
lret
dec
idivl
mov
addl
cmp
add
mov
sub
nop
mov
and
cs
jge
out
lods
mov
push
test
movsb
sarb
scas
jae
cmp
adc
jo
fbld
pop
inc
push
push
xchg
sarb
fstl
subl
clc
leave
jne
lock
push
xor
pop
popa
jp
sarb
sub
lcall
mov
fwait
mov
pop
push
cmp
or
enter
dec
cs
les
xchg
mov
je
adc
daa
hlt
inc
aad
test
jle
je
dec
ds
call
dec
add
scas
bound
inc
dec
cmpsb
in
jbe
xchg
repnz
push
cmc
lahf
popa
add
or
pop
jne
mov
jge
sbb
xlat
dec
repnz
jle
stos
push
lock
or
test
arpl
mov
fisubrs
push
gs
push
dec
stc
cmp
stos
pop
hlt
inc
ficoml
movsb
ret
lea
sub
adc
shlb
imul
ljmp
imul
mov
jne
inc
jle
inc
roll
mov
int
pop
cld
js
aas
lea
mov
jo
add
outsl
push
aad
or
push
arpl
adc
push
push
xchg
dec
jbe
xor
add
sarl
decb
std
push
or
mov
and
aam
mov
rcr
ja
sbb
aad
sbb
into
scas
mov
xchg
xchg
jo
rcrl
cmpl
mov
fwait
mov
inc
jne
insl
shl
sti
addb
xor
jnp
outsb
add
xor
push
scas
xor
sbb
fs
and
ds
sub
int3
mov
lods
and
out
mov
push
call
jp
mov
jp
insb
les
add
movsb
add
fldt
repnz
lret
adc
in
xor
lods
rcl
pop
popf
add
mov
test
mov
in
in
dec
xchg
fcompl
adc
repnz
ss
pusha
loop
lret
xor
fbld
into
das
adc
loope
aam
stos
ja
xor
movsl
jmp
pop
and
imul
mov
mov
fwait
shll
push
fcmovnu
stos
sbb
shlb
adc
movsb
mov
popa
scas
insl
dec
xchg
and
adc
ret
ss
mov
xrelease
lret
and
pushf
rolb
dec
and
outsb
inc
adc
mov
mov
adc
jmp
orl
sbb
in
jns
lret
add
and
data16
add
jp
nop
test
sbbl
movsl
std
adc
movsl
mov
test
pop
pushf
rolb
test
or
movsl
sub
xchg
roll
or
cmp
out
into
lds
lods
xchg
je
enter
mov
add
inc
sbb
push
push
sahf
pop
negl
push
out
je
inc
mov
sbb
xlat
enter
gs
mov
notl
stos
mov
nop
mov
xlat
roll
cmp
jg
cmpsl
inc
pop
sbb
in
sbb
mov
fistpll
ret
das
stc
cmp
cld
jae
imul
xor
gs
test
add
mov
sub
out
inc
pusha
in
addr16
movsl
lahf
or
sub
int
mov
int3
test
aas
clc
js
xor
testl
mov
xchg
or
push
xchg
test
sub
or
cmp
cs
mov
xchg
and
inc
fisubrl
ret
pop
mov
leave
scas
xchg
daa
jmp
movsl
pusha
sub
cmpsb
les
xchg
repnz
in
jg
aaa
mov
pop
push
fnstenv
dec
add
xorl
mov
adcb
jmp
loopne
pop
cmpsb
xor
or
pop
shrl
cwtl
pop
mov
inc
jne
push
push
push
push
mov
ds
out
jmp
adc
into
or
arpl
popf
aam
sub
icebp
jecxz
adc
push
pop
cmp
jl
dec
jae
shll
xor
call
into
ret
pop
xor
push
fsubrp
out
add
movsl
jle
xchg
push
test
call
sbb
lret
or
imul
mov
iret
mov
enter
cs
mov
outsb
lcall
pop
mov
sbb
inc
adcb
or
sar
jg
sub
roll
daa
mov
pop
jne
xor
mov
mov
sbb
fwait
sub
ja
stc
fnstsw
xchg
sti
test
xchg
std
cmp
outsb
call
push
or
adc
cmp
ret
int3
aaa
nop
in
xchg
dec
nop
jnp
mov
xor
cmp
push
repz
sub
sub
lcall
idivl
push
mov
in
jle
xor
int3
sub
push
cli
mov
cmp
aas
pusha
insl
pusha
mov
stos
xor
dec
mov
imul
outsl
jmp
and
push
imul
loop
rcl
cmp
jg
xchg
cmp
cmpsb
push
mov
sub
cmp
or
xor
dec
sbb
push
sbb
mov
mov
in
jecxz
scas
jns
jns
mov
xor
or
test
mov
lds
xchg
mov
ja
stc
in
je
cmp
lret
nop
jmp
stc
cli
loop
pop
pusha
fwait
and
cmp
sub
mov
iret
sbb
add
or
pop
sub
or
jge
sbb
push
repnz
push
in
ss
in
pop
add
rorb
push
js
and
sbb
loope
fwait
add
pop
lcall
insb
jge
mov
sbb
call
test
int3
adc
jo
ja
push
lahf
test
push
test
jp
stos
loop
sub
lret
daa
xorl
daa
enter
stos
mov
lds
or
jmp
xchg
jno
add
leave
xor
movsl
inc
jno
or
mov
pusha
lahf
lcall
pop
flds
mov
lds
adc
ss
mov
pop
push
aas
or
inc
xchg
dec
pop
dec
pop
call
test
xchg
pop
push
rolb
mov
mov
rolb
adc
xor
into
inc
sbb
jmp
sbb
clc
fistpll
sub
xchg
inc
in
xchg
fdivr
add
push
mov
out
inc
jg
daa
hlt
xor
mov
in
daa
rorl
mov
adc
in
inc
sub
xchg
mov
ja
mov
and
mov
lea
mov
pmulhw
scas
outsb
mov
pop
out
aad
js
or
inc
cld
cmpsb
rep
in
pop
adc
mov
subb
fs
imul
push
lock
sub
in
sub
jno
cmc
inc
sahf
mov
xor
std
sbb
push
ss
xchg
push
xchg
mov
inc
jmp
loopne
and
mov
jns
xchg
stos
inc
push
sub
nop
sbb
push
add
shl
lock
adc
sbb
fmull
or
inc
in
stos
jnp
idiv
mov
jmp
jmp
shrb
lods
lret
arpl
or
ss
pop
jle,pt
mov
cmc
xor
je
mov
xor
into
ret
fnstcw
or
lods
cld
mov
icebp
cmp
add
and
lahf
mov
pop
cld
dec
adc
test
push
xchg
push
xchg
jmp
hlt
xchg
mov
mov
shl
jno
or
or
fsubs
push
xorl
dec
adc
ficoms
and
mov
or
scas
pop
lds
jle
js
mov
movsl
xor
subl
lret
inc
dec
adc
jns
cmp
inc
stos
or
cld
mov
pop
mov
bound
mov
add
sbb
mov
xor
pop
lods
out
outsl
in
and
out
outsl
stos
fcom
xor
cmpsl
aad
rcrb
mov
aaa
hlt
cld
and
in
into
imul
cwtl
jl
and
insl
push
jno
subb
or
imul
addr16
daa
je
xchg
push
int3
in
cli
mov
cmp
repz
mov
mov
gs
add
sahf
xor
je
mov
sbb
aaa
ja
ja
cmovle
outsl
sub
lret
adc
dec
shll
add
stos
ficoms
nop
rorl
add
xorb
dec
arpl
sub
mov
jne
gs
jmp
xchg
fwait
insb
push
cmpsl
push
mov
fstps
jle
sub
loope
aad
mov
fistps
arpl
adc
cmp
jbe
or
repz
into
push
add
callw
add
stos
ljmp
push
addb
or
cmpsl
pushf
jmp
int
sub
sbbb
mov
sahf
into
data16
jb
and
mov
repz
sbb
jne
jb
and
xor
fldln2
or
dec
push
femms
mov
sbb
xchg
cli
dec
mov
mov
dec
in
inc
imulb
jne
ret
outsl
mov
or
push
imul
jne
jmp
mov
push
adc
jo
pop
xchg
cmp
inc
jnp
xchg
popa
lods
cmp
pop
jmp
and
pop
push
sbbb
push
fwait
mov
pop
in
pop
xor
xor
push
or
icebp
inc
jae
mov
outsl
jl
fiaddl
sahf
cmp
out
daa
cs
cmpsb
push
loope
jmp
popa
dec
andb
jns
mov
jle
sahf
pop
movsb
or
out
mov
xlat
mov
popa
adc
or
and
int
loope
test
mov
pop
sub
test
xchg
jbe
cmp
jo
xlat
adcl
fwait
pop
mov
arpl
sub
inc
daa
push
push
push
popa
push
rorl
sub
adc
jp
pop
or
cmp
fisttpll
shll
adc
mov
push
pushw
or
out
aas
mov
xchg
arpl
pop
mov
daa
insl
in
gs
inc
fistpll
shrb
outsb
pop
incb
sbb
out
ljmp
xchg
mov
das
imul
shrb
inc
jmp
sub
ficompl
ljmp
ret
out
xchg
jge
xchg
sarb
scas
lods
and
lea
nop
or
popa
sub
ret
ljmp
push
pusha
imul
sahf
leave
pop
pop
mov
clc
clc
inc
jp
mov
cltd
mov
mov
loopne
pop
xchg
push
fdiv
mov
sbb
pop
mov
hlt
in
and
adc
orl
push
cltd
cwtl
incl
mov
dec
into
aad
sub
insb
or
lea
ja
push
adc
jae
jo
iret
dec
jns
js
mov
cmp
or
pop
insl
jb
into
rorb
pop
movb
add
mov
je
hlt
mov
imul
cmp
cmc
dec
cmp
inc
loope
mull
inc
jl
sub
addr16
jne
inc
leave
fldcw
pop
divb
inc
xor
pop
pop
adc
sbb
inc
sahf
sub
adc
sbb
sbb
add
sahf
and
cwtl
mov
loopne
lret
leave
add
mov
divb
xor
cmp
dec
imul
xchg
imul
pushl
ret
or
ret
inc
outsl
fs
or
add
or
fcmovnb
mov
out
movsl
adc
loopw
inc
test
out
aad
les
xchg
loopne
xorl
hlt
and
clc
les
adc
cmc
jo
js
scas
lahf
in
pop
in
xor
fstps
mov
ljmp
or
icebp
nop
sub
stc
dec
fcmovbe
lods
add
lahf
stc
sbb
cmc
cmp
cmp
sub
dec
xor
pop
nop
xor
push
sarb
ret
jae
jns
pop
adc
jne
sbb
sub
fsubr
jmp
inc
push
inc
sbb
push
jecxz
mov
jle
lret
and
loope
xorb
pop
cmp
lods
jp
mov
jno
sub
mov
dec
cli
inc
sub
sarb
les
adc
lock
test
push
sbb
pop
mov
adc
xchg
loope
or
mov
js
lods
lods
xor
into
sub
or
loope
fimull
dec
imulb
or
js
test
xchg
or
or
int3
iret
sub
xchg
adc
dec
push
fwait
push
movups
lret
pop
dec
xchg
data16
shrl
fsubrl
cmp
add
cmp
pop
cmp
cltd
imul
rorl
pusha
roll
ljmp
incl
iret
inc
jl
lock
mov
orl
stos
inc
sbb
jne
or
push
pop
imul
outsb
fcomps
adc
and
stos
jecxz
and
jne
or
out
cs
mov
das
loop
dec
jecxz
sbb
in
stos
into
cmp
adc
cltd
test
mov
push
cld
insl
lods
gs
ds
sbb
cmpsl
outsb
inc
mov
shrb
jne
shlb
jle
js
pop
popa
xor
add
jl
data16
mov
out
add
sbbb
scas
jnp
or
sahf
cmp
insb
jmp
ret
add
jns
pushf
ja
enter
adc
mov
adc
sbb
xor
in
fsubrl
pop
loopne
pop
out
jmp
sahf
test
push
scas
push
test
xchg
pushf
dec
fsubr
cltd
cmp
inc
clc
xchg
ljmp
pop
jo
mov
loope
cwtl
jne
adc
shl
and
les
lods
aam
cltd
ja
cli
xor
mov
pop
into
arpl
xchg
lcall
sarb
iret
ja
into
stos
xor
mov
sbb
mov
jns
enter
mov
lcall
mov
cld
push
fcompl
addb
jno
push
ffree
mov
sub
cmp
test
pop
cwtl
mov
test
fmuls
fisubs
scas
dec
mov
fisubs
cli
insl
fs
loop
out
sbb
jecxz
stc
ficoml
inc
sarb
fcompl
aas
pop
or
mov
push
inc
ret
jae
cli
or
pop
lcall
mov
fwait
cmp
inc
repnz
push
or
mov
jnp
xor
jbe
xchg
pop
pushf
ja
push
testl
add
cmp
loope
mov
fucompp
je
rolb
jo
popl
in
dec
flds
es
popf
and
lret
imulb
mov
imul
fs
push
jb,pn
adc
dec
fs
add
aaa
je
sbb
cs
add
in
ds
mov
sub
and
movsl
adc
mov
pop
jbe
arpl
mov
push
lcall
dec
xor
negb
mov
inc
add
outsb
and
jle
repz
stc
std
aad
inc
xlat
js
fwait
jg
and
mov
sbb
add
fistpl
mov
push
pop
stos
or
enter
scas
and
xor
lods
cmp
ret
icebp
in
dec
dec
je
adc
or
or
repnz
sub
imul
sub
or
add
xor
lds
test
aaa
inc
adc
mov
mov
in
out
bound
cld
xchg
cs
rolb
mov
rcrl
test
pop
push
bound
lcall
xor
out
repnz
xchg
andb
add
xorl
inc
lahf
clc
aas
push
cli
xchg
xor
add
xchg
pop
lods
pop
cmc
loope
xchg
lods
dec
popa
pop
jecxz
in
ljmp
loope
xor
fsubs
stos
cmovge
mov
test
mov
imul
xor
add
xchg
lret
push
std
daa
aaa
stos
xor
sbb
lahf
daa
inc
in
pop
sysenter
mov
in
jge
inc
sbb
adc
mov
push
sbb
cs
pop
out
adc
adc
mov
jp
in
mov
call
mov
adc
mov
insl
sbb
push
pop
mov
or
stos
xchg
fsts
pop
mov
xor
inc
imul
jge
and
stos
rcl
pop
pop
stc
adc
loope
fsubp
dec
adc
and
aam
mov
pop
icebp
jp,pt
ds
loope
mov
sub
popf
jl
mov
mov
lret
stos
inc
les
insb
cmc
xor
std
out
cltd
inc
ds
es
inc
mov
xchg
xor
mov
fwait
int3
rcrl
test
adc
scas
mov
mov
xchg
dec
push
and
sub
cmp
mov
adc
add
out
rorl
mov
add
or
popf
add
pushf
fninit
les
faddl
ret
dec
fimuls
sub
fdivp
jmp
push
lds
mov
mov
ret
es
sbb
jns
sbb
sub
addb
das
movsb
sub
mov
dec
mov
ret
push
hlt
fistpll
arpl
sub
fsub
mov
pusha
xor
test
and
minps
cli
dec
push
ja
jne
loope
push
out
inc
xchg
xchg
dec
xor
clc
mov
dec
aam
movsl
aaa
pop
ds
je
cs
jno
sahf
cwtl
cmp
jg
popa
stos
cld
cmp
or
cmpsb
cli
mov
or
ret
push
fwait
js
adc
leave
dec
mov
dec
inc
push
add
mov
addl
popf
bound
mov
and
dec
sbb
lret
push
faddl
cmc
fisttpl
jg
pop
bound
loopne
jge
mov
xchg
rorb
jg
ret
xorb
mov
filds
arpl
pushf
mov
sbb
xchg
mov
push
dec
cmpsb
inc
mov
movsl
mov
test
sahf
dec
or
mov
or
inc
int
sub
pop
cmpsl
lcall
ret
in
pushf
fs
jmp
out
sbb
cmp
cld
mov
pusha
lods
int3
insb
stos
or
pop
or
jmp
stos
xchg
pop
add
rclb
shr
fidivs
jge
or
xchg
or
outsl
popa
outsb
rcrl
dec
inc
in
leave
scas
xchg
jmp
dec
and
imul
out
pop
idivl
cmpsb
data16
mov
cli
leave
sub
mov
hlt
lea
in
aaa
jo
in
xchg
adc
adcb
out
adc
sub
pop
push
repnz
xor
sbb
fwait
pop
mov
idivl
pusha
sahf
test
and
mov
dec
inc
push
adc
mov
arpl
inc
and
pop
lock
rorb
jl
cld
jns
mov
jl
fdivrl
jno
ret
cs
enter
add
cmc
push
pop
adc
adc
push
test
mov
outsl
mov
jns
or
fisttpl
mov
dec
fstpt
push
sbb
fadd
mov
scas
cmp
dec
mov
movsl
subl
dec
fldcw
sbb
mov
movsb
and
addl
rolb
lahf
pop
les
cmp
loop
sub
pop
cli
mov
mov
and
xchg
sub
sarb
jns
gs
mov
push
enter
int3
add
shrb
sub
out
xor
push
stc
roll
adc
push
sbb
push
lods
lods
lds
xchg
inc
and
rorb
stos
push
in
jo
sbb
test
sbb
loopne
jno
pop
jl
cmc
mov
and
dec
cmpsb
push
xor
dec
push
add
icebp
outsb
leave
mov
and
xor
dec
xor
in
std
and
cmp
sarb
pop
iret
inc
int
ficomps
mov
ret
insl
ss
and
jbe
pop
jmp
js
jmp
mov
jge
push
movsl
add
push
and
ljmp
pop
mov
push
and
xlat
ss
inc
dec
outsl
cmpsb
nop
push
dec
repz
outsl
add
rcrl
test
sbb
fcompl
and
scas
insl
ja
and
push
cs
inc
ljmp
int
sahf
lahf
scas
hlt
sbb
je
popl
int3
ljmp
xor
cmc
subl
push
stos
and
fmul
inc
inc
je
fidivrl
mov
ljmp
adc
out
ss
daa
loopne
int
mov
pop
xor
fildl
mov
pop
je
jmp
cmp
xchg
push
test
jbe
xchg
faddl
data16
cmc
int
push
lds
xchg
jno
cmc
add
or
lret
imul
dec
outsl
inc
xor
testb
add
mov
es
add
push
jae
sbb
jl
into
mov
xchg
mov
shrb
into
xchg
insl
xchg
dec
push
pop
xor
push
or
ret
fmull
mov
divl
jecxz
and
or
popa
lret
cmp
mov
in
push
pushw
mov
orb
fistps
hlt
pop
jnp
int3
adc
mov
push
xchg
vpor
fildl
xlat
or
std
aaa
test
loop
sub
pop
pushf
sub
cmp
hlt
outsl
pop
aad
aaa
int
cmpsb
dec
sbb
lods
adc
mov
jb
cmpsl
in
and
sahf
pop
call
js
dec
mov
test
test
movsb
add
in
or
leave
inc
cmp
jne
cmpl
lds
xor
pop
mov
mov
arpl
mov
and
pop
mov
xor
les
movsl
adc
sub
jns
push
sub
lock
out
jb
or
xchg
mov
dec
aas
arpl
mov
pop
iret
pop
repz
sbb
inc
push
xor
sahf
sti
lret
lods
cmc
and
ja
sub
jo
push
iret
sbb
movsl
test
pop
adc
mov
jne
aaa
mov
addr16
mov
xchg
movsl
jg
enter
sbb
mov
sahf
jae
cmp
movsl
dec
mov
psubsb
lea
inc
lock
push
call
mov
movb
and
inc
rol
sarl
inc
aam
lcall
jp
gs
pop
or
mov
add
mov
daa
jmp
movsb
jg
fisubl
in
aas
lods
fs
xchg
lods
mov
dec
test
lods
sbb
pop
sbb
and
sbbl
jo
cmp
xchg
lods
cmpb
push
adc
xorb
mov
add
cmp
sub
cs
and
out
cmp
mov
dec
add
xor
sahf
popf
int
add
push
aas
inc
pop
mov
mov
mov
hlt
cmp
incb
rcr
jp
data16
jbe
xchg
mov
jns
mov
insl
add
es
mov
int
das
pop
mov
popa
cmp
push
dec
lock
lahf
pushf
pop
out
xchg
jmp
aas
push
outsb
imul
inc
adc
mov
gs
sbb
and
in
sub
fs
inc
xor
mov
cmp
shlb
sahf
insl
ljmp
and
mov
sub
movsb
enter
cs
adc
shlb
les
cmp
sub
jecxz
mov
jae
xchg
cmp
es
jmp
dec
insb
cltd
out
mov
xchg
movsl
add
adc
pop
xchg
int
scas
cmpsl
mov
shl
ljmp
mov
mov
pop
lea
sar
dec
fs
jle
mov
fdiv
mov
sbb
xchg
push
sub
fstl
insl
mov
fwait
cltd
sub
repz
inc
jno
jns
adc
cld
xchg
add
sub
es
inc
retw
lea
lahf
test
xchg
sub
xchg
icebp
je
push
shlb
inc
sbb
pop
shrl
push
shrb
jl
aas
mov
mov
mov
xor
xchg
scas
stos
scas
loop
loop
das
movsl
mov
jmp
pop
fwait
fs
das
jnp
jnp
hlt
xchg
jo
dec
leave
shll
ficoml
add
iret
das
loopw
xchg
sub
lock
cmp
pop
hlt
mov
aaa
sub
lret
pop
jl
aaa
cs
mov
inc
aaa
push
push
xchg
pop
mov
sub
shlb
mov
xchg
or
adc
jge
mov
cmp
jge
arpl
insl
mov
imul
and
flds
movsl
testl
ror
inc
in
xor
dec
xchg
push
imul
mov
hlt
dec
fadd
stc
fmuls
adc
inc
and
mov
mov
ret
sub
aaa
mov
pop
jmp
repz
stos
ret
dec
stc
xor
adc
cwtl
push
cmp
inc
out
jno
and
cltd
jg
cwtl
mov
pop
mov
imul
sub
xor
mov
scas
jg
js
xor
lock
and
pop
lds
sbb
loopne
xchg
dec
stc
mov
xchg
cmc
les
add
inc
jmp
push
push
pop
xchg
sub
sub
and
jae
inc
inc
mov
xor
addr16
jnp
insl
orl
adc
mov
es
and
call
pushl
pop
xchg
stos
pop
loop
iret
nop
or
std
or
es
cmpsl
ljmp
or
push
cmc
cmp
jb
stc
mov
adc
addl
xchg
push
jo
loope
scas
cmp
out
in
mov
adc
in
add
jge
push
xor
ss
mov
scas
dec
mov
push
std
mov
inc
push
addr16
adc
mov
inc
cmc
out
cld
clc
push
dec
push
mov
push
mov
out
or
movsl
push
mov
lds
inc
inc
das
pop
dec
mov
lahf
fmuls
push
xor
dec
xor
xchg
test
adc
leave
rorb
mov
cwtl
fstps
outsl
jle
sub
outsb
jmp
je
jbe
pop
cmp
cltd
jg
iret
push
push
sbb
aam
push
push
sarl
test
mov
mov
inc
adc
pop
andl
cwtl
push
inc
push
dec
lcall
das
les
cmp
push
xor
inc
jns
xor
xor
in
sbb
outsl
adc
pop
ja
inc
aas
cmp
jge
in
push
btcl
adcb
mov
mov
out
push
mov
jp
popa
mov
mov
fildll
pop
xlat
scas
mov
or
cmpsl
in
adc
cmp
ret
insb
hlt
and
hlt
jns
movsl
inc
add
in
fisubrs
loopne
xor
adc
jle
mov
add
or
aaa
dec
int3
mov
mov
push
lcall
or
add
lret
and
jge
test
xchg
push
mov
sahf
mov
sub
cltd
mov
push
xchg
iret
test
pop
mov
imul
dec
out
sahf
lret
ljmp
push
cld
scas
add
int3
sub
xchg
and
push
mov
push
pop
xchg
mov
cmp
mov
mov
jl
push
pop
subb
imul
xor
shlb
xchg
xor
negl
push
and
insl
sbb
push
idivb
add
inc
loope
out
add
out
pop
mov
int
jl
inc
ffree
arpl
std
jnp
add
sub
push
jg
add
bswap
push
dec
adc
sub
xchg
cld
arpl
cld
lds
push
mov
sub
xor
lds
lahf
imul
filds
lahf
pop
mov
test
pop
arpl
popf
mov
in
dec
xchg
push
hlt
add
cmpsb
lret
mov
pop
ret
js
pop
sub
mov
ja
dec
in
popf
cld
shlb
cltd
clc
cwtl
cmp
iret
and
int
xchg
fdivl
cli
pop
inc
addb
push
out
sub
lea
cmp
addb
cmp
pop
jmp
int3
popa
test
stc
push
or
inc
push
push
enter
outsb
xor
dec
mov
lods
dec
add
xchg
ja
pop
lds
out
addr16
push
push
dec
push
divb
popa
pop
test
test
xor
ret
scas
push
jg
adc
xchg
sahf
and
push
sub
stc
sub
cmp
xchg
aaa
daa
xlat
stos
mov
scas
enter
out
push
rolb
xchg
out
sub
sub
inc
mov
jle,pn
cli
or
int3
mov
lods
and
mov
mov
pusha
jl
std
pushl
cmp
jmp
pop
je
jno,pt
inc
aam
pop
dec
pop
out
mov
je
fwait
push
add
out
add
inc
scas
mov
mov
mov
xchg
jns
jae
out
inc
das
mov
loope
loop
scas
pushf
sbb
gs
dec
jmp
fcmovnbe
lret
push
out
pop
mov
sarb
dec
sub
xor
loopne
lcall
pop
popf
mov
adc
sbb
int3
or
adc
add
and
mov
fcmove
in
mov
or
xchg
rcrl
xchg
cs
in
in
and
sub
mov
mov
and
test
fmull
dec
dec
xor
roll
in
inc
cwtl
xor
mov
popf
mov
dec
leave
call
jge
sub
leave
and
js
scas
cs
sti
loope
mov
mov
fdiv
and
imul
mulb
pop
pop
jbe
roll
enter
adc
mov
mov
mov
mov
movsl
sbb
fsubl
adc
inc
andb
inc
in
push
lock
out
subl
scas
dec
shlb
sahf
test
imul
or
hlt
add
xchg
inc
je
stos
loope
icebp
mov
xchg
lahf
and
imull
inc
movsl
push
or
jge,pn
scas
into
fst
movl
fcoml
shll
and
insb
nop
les
rdpmc
sbb
jae
scas
in
push
push
jg
pop
fldl
rorl
push
pusha
lahf
pop
sarl
lods
sbb
pusha
jno
icebp
mov
xor
icebp
jo
mov
setle
xor
xor
loope
cmp
jbe
adc
sub
into
cmpsl
leave
ja
dec
mov
dec
clc
pop
fstpt
sbb
add
test
xchg
sti
push
mov
outsb
dec
outsb
jmp
and
and
roll
ret
and
insb
fdiv
loopne
mov
adc
pop
inc
xchg
inc
rcll
dec
adc
mov
and
jae
xchg
out
add
pop
adc
push
inc
push
or
xchg
mov
add
test
rolb
xchg
xchg
in
int3
xlat
mov
pop
std
sub
push
push
fs
fsubrl
cmpb
push
push
in
popa
sbb
daa
adc
sbbb
int3
lods
in
and
dec
subb
jae
adc
dec
out
dec
pop
xlat
aaa
sbb
pop
repnz
and
sub
sbb
in
aad
fdivl
cmp
mov
into
iret
mov
xor
adc
cmp
dec
push
sub
jl
sbb
cs
mov
int3
cmp
aad
mov
add
jne
ja
or
lods
movb
mov
out
sti
scas
hlt
mov
jecxz
jae
push
jno
push
sbb
pop
sbb
inc
out
dec
leave
xlat
pop
push
xchg
out
ljmp
sub
jmp
sbb
adc
popf
and
pop
shll
mov
pop
jns
pop
aam
dec
jecxz
rcl
xor
leave
addb
int
jno
mov
ds
ds
cld
push
test
in
xor
subl
ret
jbe
mov
mov
push
fs
cmp
out
ficomps
je
je
loope
adc
dec
dec
in
cmc
xor
and
test
xchg
ret
and
lods
imull
gs
into
lods
adc
outsb
cltd
mov
ret
push
jg
repnz
aad
xchg
mull
pop
mov
insb
and
iret
jo
sbb
inc
fmul
and
add
lret
xor
decl
call
pop
cmp
sbb
or
xchg
jg
pop
lcall
iret
das
nop
outsb
or
bound
mov
inc
lds
mov
push
outsb
nop
aaa
js
mov
int
pop
push
cmp
adcb
pushf
fstps
sub
or
pop
cmp
mov
cs
outsb
add
out
ljmp
inc
in
divl
bound
lea
ficompl
push
imul
aaa
sub
popa
aaa
roll
mov
sahf
and
cltd
ret
push
dec
pop
mov
and
test
sbb
mov
stos
mov
and
mov
insb
mov
jns
out
pop
cwtl
xor
enter
lahf
sub
xchg
andnpd
jmp
shlb
fs
int3
out
jg
sub
popa
mov
lcall
add
or
je
mov
and
orb
nop
inc
push
add
out
dec
out
loope
mov
pop
dec
in
mov
test
sub
xor
adc
iret
mov
inc
push
stos
popf
push
lcall
arpl
adc
and
xchg
jno
jg
xchg
dec
sub
inc
imul
fidivl
scas
or
mov
cmpsb
ljmp
push
cli
adc
bswap
fdivl
push
outsb
mov
lock
pop
inc
adc
mov
fidivrs
sbb
inc
insl
cs
rorb
loopne
or
xor
std
imul
outsb
sti
dec
std
mov
or
mov
arpl
sbb
in
push
cwtl
cltd
loopne
ss
xchg
xchg
sub
inc
fbstp
sbb
dec
dec
stc
daa
inc
sbb
loope
inc
sub
shr
dec
xchg
dec
test
xor
insb
pop
leave
cld
sbb
mov
push
pop
ss
mov
jb
xorl
sbb
jnp
xchg
xor
stc
pop
lods
mov
pop
mov
pop
ds
jecxz
add
xor
mov
hlt
ja
pop
add
sub
pop
pop
sbb
repnz
jnp
jae
rolb
or
nop
test
push
in
or
je
repz
dec
test
dec
addl
pop
push
mov
loope
test
js
jge
sbb
int3
mov
cmp
push
test
jle
push
es
iret
pop
aam
std
ret
in
stos
scas
push
mov
pop
sbb
rol
or
dec
jnp
icebp
enter
mov
xchg
mov
sbb
mov
mov
cs
popl
stos
or
xchg
sub
les
push
xchg
shrb
pop
inc
mov
add
jo
and
xchg
ret
sahf
or
mov
in
inc
xor
dec
popf
lods
leave
mov
ficoml
addr16
adc
int
rcrb
scas
outsl
pop
inc
outsl
stos
stos
xor
jg
out
push
and
pop
lret
dec
add
mov
imul
xchg
sti
subb
in
sbb
imul
and
movsl
leave
dec
pop
cmp
jp
push
mov
addr16
outsl
mov
loopne
shl
mov
xchg
fisubs
aam
adc
and
add
lods
arpl
aad
jmp
shr
fmuls
outsl
ljmp
call
jnp
lds
or
xlat
dec
sub
cmp
negb
add
mov
mov
add
xor
cmpsb
lahf
jle
xchg
pop
test
push
lods
inc
push
repnz
movsl
mov
in
push
push
popf
and
popa
call
pop
faddp
pushf
pop
xchg
shll
push
and
add
hlt
xchg
loope
sbb
call
or
push
pop
leave
leave
or
mov
sub
mov
mov
insb
jbe
pop
imul
ds
cmp
xor
outsl
icebp
xorl
add
cld
fcoms
push
shrl
shrl
xor
pop
leave
popa
mov
lock
std
and
les
call
cs
or
and
push
xor
aas
push
adc
add
js
nop
push
arpl
in
and
icebp
dec
iret
add
push
sub
int
mov
lods
jl
inc
popf
mov
xlat
cmp
jae
les
decl
cmp
cmc
rcrb
cs
mov
popa
insl
in
gs
mov
add
xchg
push
push
prefetch
ss
inc
inc
push
jecxz
jle
jge
popf
push
jnp
outsl
or
hlt
cld
mov
pop
adc
mov
or
cmp
lods
outsl
adc
mov
fwait
cld
shlb
mov
sub
lret
push
mov
pop
sbbl
insb
mov
sbb
ljmp
ror
subl
cltd
push
pop
leave
bound
adc
sbb
pop
dec
aaa
dec
lahf
in
hlt
insl
test
cmp
emms
mov
lock
jns
stc
push
negl
add
lcall
mov
jp
test
push
inc
mov
add
pop
mov
outsl
add
sarb
out
mov
mov
push
adc
lods
shll
popl
outsb
das
jp
repz
and
pop
fisubrs
stos
add
pop
in
scas
movsb
inc
and
ficompl
arpl
cmpsl
cmp
cmp
xchg
cmp
out
jmp
sub
hlt
pop
pop
mov
in
xchg
cmp
cmp
mov
xchg
lret
sbb
std
out
inc
xchg
pop
sti
mov
lods
movsb
ret
cmp
enter
mov
hlt
addb
scas
scas
mov
push
add
adc
leave
aas
insb
fnstsw
mov
jecxz
push
xor
lahf
imul
ret
mov
mov
in
test
sbb
lcall
in
sub
test
pop
sub
insb
dec
jno
std
xchg
xchg
pop
sbb
rcl
divl
int
aas
insl
aam
cmpsb
stos
xchg
hlt
xchg
jmp
xchg
cmp
pusha
inc
inc
and
pop
and
or
jle
push
mov
imul
pushf
fldcw
mov
stos
mov
pop
je
in
test
aad
fcomps
sub
dec
adc
rolb
dec
jne
ss
pop
xchg
je
inc
add
loop
inc
mov
mov
push
test
dec
cmp
fidivrl
or
and
mov
movsl
in
dec
js
push
out
xor
add
jnp
mov
add
xchg
sbb
cmp
mov
bound
pop
or
popa
mov
cmp
mov
and
das
dec
jnp
adc
por
sub
add
fdivrl
pushf
int
push
filds
pusha
xchg
jb
fiadds
test
fisubs
in
sbbl
mov
inc
or
jo
cmpsb
test
loop
jecxz
mov
enter
xchg
std
xchg
xor
mov
test
jb
dec
insb
inc
push
pop
xchg
rcr
inc
pop
cli
cld
dec
insl
push
mov
das
sbb
addr16
jmp
sbb
push
gs
std
push
lcall
shll
jmp
sbb
dec
pop
inc
lods
pop
dec
sbb
jl
pop
xor
jae
lret
inc
xorl
cltd
popa
out
or
xor
mov
jno
inc
lock
cmpsb
mov
jecxz
add
hlt
insb
push
call
jo
cmpsl
mov
adc
mov
mov
fmuls
in
sbb
test
aam
sub
jbe
push
mov
sbbb
das
pop
fstpl
mov
and
xor
in
jnp
or
sub
push
testb
sub
scas
mov
fcomip
jns
sbb
loope
popa
mov
testb
test
jo
push
loop
mov
sub
into
mov
outsl
insb
sub
pop
push
jg
pop
ja
and
mov
nop
sbb
add
imul
mov
and
fbld
scas
je
dec
sub
imul
or
enter
cwtl
add
es
push
push
sbb
or
sub
mov
imul
sbb
push
mov
imul
add
mov
cmp
or
adc
pop
sbb
lods
cmp
lret
sub
inc
ret
jle
test
jno
ds
push
dec
je
jne
mov
adc
call
push
cmp
dec
mov
into
out
cld
icebp
inc
xchg
mov
ss
mov
jge
and
clc
inc
insl
pop
and
mov
xchg
repnz
ja
pop
js
mov
fs
mov
lret
jns
popf
ret
hlt
inc
adcb
mov
loopne
mov
fisubrl
cmp
cwtl
into
nop
cmpb
cmp
jb
inc
in
fsubr
sbb
shll
pop
push
add
int
and
mov
jecxz
jbe
out
into
les
cs
mov
js
rorb
test
or
sub
es
cmpsb
fsubl
fsubrs
mov
mov
in
jmp
xlat
ja
fistps
roll
jb
cmp
jmp
sbb
adc
xor
scas
inc
mov
lock
lds
stos
adc
adc
daa
jge
jae
mov
addb
jnp
and
dec
xchg
int3
mov
mov
mov
mov
jmp
and
addl
mov
dec
add
push
xchg
je
and
out
fists
and
inc
rcl
push
push
lret
sahf
adc
out
xor
sbb
jnp
insb
inc
nop
or
jge
mov
test
ret
ret
std
ret
dec
cmp
xor
xchg
mov
repz
pop
dec
ret
push
mov
ds
sbb
and
ror
push
inc
mov
inc
inc
jge
sub
and
xchg
inc
iret
aam
add
jns
test
xchg
and
das
mov
pop
adc
sar
cmpsb
push
daa
adc
mov
push
or
jns
mov
pusha
test
mov
dec
mov
xchg
arpl
cmp
daa
lret
lret
pop
mov
daa
decb
mov
pop
and
lea
push
inc
lcall
mov
daa
cmpsb
insl
mov
cwtl
dec
xchg
push
or
inc
out
add
inc
cmp
scas
add
sub
xchg
mov
dec
xchg
nop
sbb
subl
into
mov
push
cmp
addr16
jb
fnstcw
dec
mov
dec
aam
jne
or
dec
fsubs
and
adc
lret
out
outsl
pop
mov
xchg
cmp
xor
pop
fisttps
pop
mov
pop
fdivl
incl
jl
outsl
mov
pop
and
lods
push
out
push
sub
sbbb
jl
cmp
in
cmp
adc
xchg
cmpsb
xor
xchg
imulb
lret
sbb
out
ret
sub
push
divb
into
jo
add
aas
add
je
cli
push
test
fiadds
jb
dec
in
fildll
outsl
aas
fistpl
cmpb
lods
int3
add
sub
push
lcall
das
dec
leave
add
fldz
push
cmp
sub
add
ds
or
cld
les
test
add
pop
jge
int3
mov
bound
xor
shrl
aam
jge
xchg
or
or
mov
call
pop
adc
sbb
nop
out
negb
pop
lret
and
arpl
cld
dec
pushf
add
dec
pop
adc
scas
cmp
lret
jbe
ret
cmp
jmp
or
jle
pop
divl
sbb
mov
clc
cmpsl
push
sub
mov
push
addr16
ss
repz
cli
add
xlat
ds
push
inc
mov
das
lcall
inc
mov
cmpb
adc
sbb
popf
jnp
cmp
test
or
into
sarb
dec
es
adcl
lret
das
push
pop
add
outsb
movsl
mov
adc
sub
dec
cmpsb
pop
push
jg
or
pop
inc
test
lock
and
dec
xor
cmc
loopne
pop
xchg
cs
mov
or
mov
stos
jp
testb
xchg
test
aaa
mov
repz
iret
mov
push
data16
imulb
aad
cli
push
mov
push
je
leave
das
andb
add
mov
jle
mov
idivb
pop
xchg
inc
add
cltd
in
adc
fdiv
push
dec
mov
outsb
movsl
mov
cmp
xor
push
mov
xor
imul
xchg
ja
cltd
outsl
lret
int3
and
rcr
jp
jcxz
mov
outsb
repnz
loope
mov
inc
xchg
and
dec
cwtl
mov
int
lret
jle
pop
fmuls
or
adc
and
mov
fildl
lret
ret
add
cld
iret
lods
outsb
adc
jecxz
push
mov
or
jnp
xor
imul
xchg
jbe
jg
mov
mov
and
sar
dec
cmpsl
push
loopne
add
inc
add
ret
sahf
jb
add
pop
jns
stc
sbb
fcomps
inc
mov
pushf
or
sbb
jae
and
inc
fldl
loopne
jo
xchg
std
cs
dec
push
sbb
mov
pmaxsw
add
into
and
sub
aad
cmp
sbb
mov
or
movd
ja
clc
imul
lcall
push
jecxz
sub
imul
mov
adc
outsl
sub
add
push
es
jmp
xor
mov
push
shl
lds
repnz
jns
mov
cmpsl
testl
push
mov
into
and
int3
sub
data16
test
jecxz
insb
xor
add
jmp
dec
enter
or
test
jno
out
adc
in
int3
es
mov
out
fcoml
repnz
movl
fst
xor
jno
pop
pop
adc
cmp
pop
pop
fdivrs
cmp
not
push
sbb
lret
pop
shll
repz
mov
mov
test
cli
and
leave
pop
push
imul
inc
outsb
shll
dec
push
mov
in
int3
mov
outsb
push
dec
js
sub
and
std
inc
mov
adcl
jecxz
push
mov
and
pop
movsb
cli
jno
jmp
arpl
test
push
scas
int3
jo
sarb
in
popa
movsb
in
xor
das
test
mov
sar
sahf
inc
xor
xlat
add
jno
inc
fwait
andb
roll
pop
fbstp
pop
add
jo
sahf
xchg
ret
inc
lods
movlps
pop
inc
mov
jb
sbb
ds
mov
fcmovne
lcall
shlb
and
mov
push
enter
cmc
int3
add
add
mov
mov
nop
sti
lcall
test
int
adc
ret
mov
pushf
enter
pop
mov
rcl
stc
cmp
in
stos
es
jle
dec
bswap
inc
fxch
sub
jnp
iret
insl
xchg
lods
pop
mov
dec
popa
cmpsb
xchg
push
mov
pop
stos
je,pn
testl
cmpsb
mov
jno
cs
and
in
add
adc
fstl
test
rcrb
test
stc
sub
mov
mov
dec
ret
out
inc
int
jnp
or
outsb
xchg
inc
add
sbb
ret
push
lock
movsb
loope
mov
mov
cmc
outsb
mov
mov
outsb
les
rcrb
lock
lret
cmc
lahf
fmuls
push
mov
pop
testb
sbb
jns
fcoms
shrb
es
enter
push
cmpsl
testl
xor
sub
mov
push
dec
lods
push
sbb
xchg
idivb
stc
mov
repz
pusha
aam
sub
or
lock
or
jnp
xor
call
mov
fwait
jb
out
or
cmp
sbb
cmp
pop
fildll
leave
fstpl
cs
pop
repz
dec
out
xor
clc
lea
ljmp
adc
mov
mov
loop
pusha
sbb
push
aaa
sub
xor
mov
roll
jb
push
popa
mov
mov
lahf
pop
sbbb
add
ljmp
imul
mov
jle
add
xchg
aas
and
rclb
in
rol
mov
sahf
push
push
jg
dec
test
shlb
inc
or
call
fcoms
pop
in
fadds
inc
and
movsl
insb
out
jae
fdivp
fxtract
jb
inc
mov
mov
pop
push
pop
cld
mov
cmpsb
ds
test
cmpsb
out
pop
cmp
jle
movsl
negl
pop
scas
std
gs
pop
enter
aam
push
pop
or
lods
insl
jno
dec
sti
and
dec
xchg
pop
mov
jmp
add
sbb
lea
xchg
std
mov
fs
mov
aaa
test
add
add
push
mov
cli
xlat
adc
jge
or
push
or
jge
pop
ret
add
add
adc
jnp
insb
out
adc
sbbb
out
jg
stos
jge
sub
push
sub
test
pop
push
inc
push
xor
dec
sbb
dec
ficomps
mov
lds
xchg
mov
push
fcompl
jbe
inc
andb
pop
lds
mov
sbb
mov
pop
adc
or
or
inc
pop
xchg
mov
mov
push
lea
es
inc
dec
mov
cmpsb
lods
or
cmp
cwtl
imul
push
jecxz
dec
mov
or
mov
repnz
jecxz
dec
sbb
cs
je
aad
mov
in
lods
test
cmp
pushf
lcall
fsubl
je
cmp
push
in
rol
stos
cmpsb
jg
leave
cmp
lahf
leave
inc
xchg
rcl
lea
outsl
push
fimull
sbb
pop
push
jne
iret
mov
push
jae
mov
das
and
movsb
push
jmp
adc
bound
bound
fisubl
movsl
cmc
sub
cs
aam
jo
arpl
mov
push
lret
dec
cmp
ja
retw
insl
idivl
jne
gs
fdivrs
cmp
sub
inc
mov
stos
jp
lods
mov
sub
jl
loope
inc
test
mov
cltd
adc
jmp
cltd
ja
out
pusha
daa
mov
hlt
cmc
add
dec
sub
rcrb
and
mov
and
fldenv
sub
rcrb
sub
adc
xor
cmpl
lods
mov
fstl
xchg
in
adc
cmpsb
cmp
xor
adc
in
xor
add
pop
sbbl
lock
in
out
and
add
ret
xchg
mov
mov
movsl
cltd
outsb
dec
or
js
fisttps
and
out
dec
arpl
sub
cmp
or
sub
pop
movsb
push
sahf
pop
xor
fbstp
lock
adc
enter
repnz
subb
lods
sub
push
fwait
ror
push
xchg
inc
ss
hlt
fnstenv
cli
ret
mov
mov
addr16
sub
mov
aad
mov
mov
cwtl
xor
inc
mov
adc
shll
sub
enter
mov
jge
ret
test
mov
rclb
popf
insb
lods
lock
jne
mov
dec
bound
popa
leave
pop
xchg
in
or
inc
stc
clc
ret
outsb
pop
sub
int3
pop
jle
test
lret
lahf
mov
out
push
shl
dec
fbld
stc
lret
scas
xchg
push
roll
loope
inc
adc
imul
fucomp
shlb
iret
fidivs
mov
mov
loop
paddsw
repnz
adc
scas
repz
lea
push
mov
xor
xor
mov
xchg
sarb
out
ret
aad
int
imul
lods
inc
dec
int3
in
cmc
cltd
into
mov
mov
sti
sbb
mov
jae
sbb
lcall
cmp
mov
hlt
fbld
dec
cmp
xchg
nop
xor
pop
mov
cmpsb
jp
pushf
lock
inc
sub
stos
in
stos
mov
sbb
xor
shrl
add
out
test
rcll
aas
fistpll
icebp
outsb
mov
jns
push
lods
jo
insb
arpl
cltd
loopne
fsubl
cwtl
hlt
pop
cmp
inc
push
xor
ficoml
scas
clc
xchg
add
sub
lahf
in
sahf
ds
arpl
sub
jecxz
jne
outsb
mov
push
dec
jbe
cmpsl
mov
btr
push
dec
divb
lea
dec
loopne
sub
inc
jne
fwait
orl
sub
dec
ljmp
fldcw
pop
mov
insl
into
out
inc
add
das
push
lahf
sbb
xor
or
jnp
jbe
das
in
imul
mov
pop
mov
adc
jae
fdivs
xchg
and
adcb
or
and
jmp
lods
or
or
les
popa
rorl
cmp
cmc
das
adc
mov
adc
jle
sub
mov
jae
scas
test
js
fadd
cmp
jmp
clc
lea
imul
je
push
pop
pop
mov
mov
mov
repz
popa
pop
push
cltd
rorl
adc
adc
ds
xchg
test
sahf
arpl
clc
dec
rclb
cs
inc
sbb
jne
xor
sub
bound
and
outsl
inc
push
dec
jp
mov
mov
adc
mov
and
mov
mov
pop
and
movsl
xchg
fdivr
jno
imul
pop
fimuls
xor
sbb
jmp
push
ror
scas
cmp
add
shlb
xor
test
fdiv
shll
adc
mov
push
lret
repnz
movl
nop
add
mov
cmc
mov
loop
push
movsl
dec
xor
lock
mov
addr16
inc
mov
inc
pop
mov
pusha
pop
mov
movsl
mov
and
push
nop
lret
cmp
rorl
nop
ret
jne
cmpsl
cld
in
sub
xor
test
add
or
dec
test
dec
xor
hlt
and
or
push
nop
call
out
mov
push
lds
dec
dec
xor
daa
dec
aam
and
lret
out
sahf
jbe
cmpl
lcall
out
sarl
call
pause
outsl
dec
test
shrb
aas
pushl
xor
int
adc
mov
xor
in
ret
inc
add
add
pop
into
inc
pop
roll
lret
hlt
nop
insl
cmp
pop
xchg
fisttpl
inc
xchg
fcoml
pushf
cmp
neg
fsubl
or
test
les
stos
std
es
jmp
sbb
add
and
pop
adc
add
imul
into
ljmp
push
arpl
cmpsl
jne
fisttpl
sbb
leave
push
jb
jmp
or
frstor
cmp
pushf
mov
add
jno
out
xlat
ja
mov
pushf
sub
mov
movsb
adc
ficoms
xor
fwait
lret
xor
imul
xlat
dec
inc
rorb
sub
ljmp
rorl
mov
test
xchg
xor
call
lea
imul
push
pop
cmp
inc
outsb
lcall
lret
fs
mov
adc
push
mov
pop
bound
loope
fwait
inc
rcrl
sbb
lds
and
pop
ja
inc
movsl
nop
jo
cmp
xor
test
loope
pop
push
les
jmp
inc
fisubrs
jae
insl
pop
nop
add
movsl
push
pop
shl
clc
leave
sahf
mov
cmp
mov
aad
jns
fstpt
xchg
movsl
paddusb
in
test
adc
lods
add
adc
pop
loope
ret
sub
push
adc
fdivp
ret
popa
icebp
les
xchg
adc
loope
fmul
addr16
pusha
shlb
push
pop
dec
stc
dec
pushf
cs
insb
int
daa
xor
jo
inc
jmp
mov
pop
xor
push
adc
test
push
add
xor
stc
loope
xchg
and
pop
les
popf
push
or
popa
imul
mov
inc
in
cmp
movsl
dec
jb
mov
xchg
jmp
add
xchg
push
lret
inc
bound
inc
pop
lahf
sub
dec
or
scas
in
stos
test
and
fcompl
fsub
adc
xor
jmp
cmc
mov
and
je
lea
popf
sub
lret
jae
sub
xchg
stc
fdivrl
test
push
cmp
xchg
sbb
adc
je
lret
mov
mov
mov
loope
rolb
dec
mov
imul
sbb
push
and
outsb
mov
andb
dec
jmp
sarl
mov
mov
mov
add
in
std
sub
or
loope
fwait
arpl
loope
jns
sub
xor
andb
dec
sbb
pop
sub
flds
and
sbb
call
dec
fs
xchg
sar
test
inc
scas
rolb
pop
jp
inc
or
add
lret
imul
shll
mov
and
push
es
cmc
sub
aam
mov
mov
fwait
mov
add
hlt
pop
imul
iret
les
stc
adc
lcall
orb
add
inc
sahf
mov
das
ljmp
sub
in
rcll
frstor
insl
inc
out
xchg
lea
hlt
loope
jle
push
add
cmp
fsubrl
stos
data16
in
roll
fstps
xchg
or
jmp
mov
xchg
fmull
ffree
idiv
push
fst
push
push
ss
or
fistpll
lock
insb
outsb
mov
stc
and
out
das
out
mov
jg
ret
nop
or
add
filds
in
aam
hlt
lods
sbb
imul
pop
leave
gs
sbb
adc
dec
clc
and
fwait
cmp
jns
lea
mov
jge
fbld
cmp
popf
inc
xor
notl
xrelease
jle
adc
push
popa
into
push
cwtl
sbb
xor
xor
add
es
cmp
leave
jns
arpl
rol
out
push
scas
shrl
sub
ds
or
push
es
xchg
dec
or
cmp
inc
outsb
nop
sub
js
ljmp
push
jbe
cmp
push
aaa
xchg
popa
mov
loopne
xor
or
test
inc
iret
jne
cmp
lcall
mov
lret
scas
sbb
mov
adc
cmp
inc
lret
push
cmp
mov
aas
or
xor
in
push
push
push
pop
mov
insl
or
mov
add
cmp
mov
lods
inc
xor
adcl
xchg
xchg
xchg
test
out
scas
test
xor
add
ljmp
dec
lcall
jge
mov
push
xor
xchg
in
jmp
sbb
xor
sti
std
mov
or
mov
cmp
pop
fwait
inc
sub
addr16
cmp
xchg
inc
push
iret
mov
rorl
decb
push
xabort
fs
inc
add
jg
in
shll
shrl
mov
pop
idivl
test
addl
or
test
and
inc
sti
cmp
addr16
sar
or
in
dec
jecxz
icebp
ffree
test
clc
ljmp
add
push
in
push
out
fwait
test
mov
movsb
sahf
invd
inc
insb
or
into
stc
into
xor
add
dec
std
movsl
andl
lea
cmpsb
push
lds
test
pop
fmuls
pusha
jno
mov
in
cmp
daa
sbb
fcmovbe
add
cmp
xor
sub
pop
sub
xlat
pop
adcb
icebp
pop
mov
cmp
pop
mov
test
out
in
mov
call
in
and
mov
sbb
xor
ret
lds
and
jge
cmp
jo
je
inc
mov
sbbl
sti
mov
adc
repnz
mov
adc
mov
mov
lcall
js
lods
adc
cld
sbbl
adc
mov
out
aaa
jg
lret
loopne
cwtl
push
out
fstpt
mov
xchg
ret
pop
adc
inc
rcrl
sbb
shrl
mov
inc
push
jne
in
addb
jb
les
clc
bnd
cltd
xor
sub
cmp
mov
das
sbb
gs
rcll
xchg
or
jge
std
mov
add
sti
jo
push
jno
lods
mov
inc
dec
sub
je
push
loopne
mov
jl
aam
xchg
inc
push
insl
sbbl
cld
xlat
mov
aas
add
pop
bt
xor
fistpll
int3
cmp
mov
orl
cltd
inc
stos
mov
and
xor
in
dec
cltd
inc
aaa
and
sub
into
mov
or
push
adc
mov
mov
data16
inc
add
in
xor
fstpl
loopne
and
bound
fstl
jle
lret
push
jp
push
fs
xchg
dec
ds
push
add
push
mov
cmp
js
fists
es
jnp
ret
add
psrlq
add
leave
mov
aam
insl
cmc
mov
into
jae
pop
add
mov
movsl
sub
sub
insb
mov
js
out
dec
clc
cmpsl
add
mov
and
inc
test
fsubrp
sub
sbbb
jmp
subl
rcr
clc
push
sub
outsb
pop
or
mov
in
mov
cmp
lret
dec
fiadds
cmp
jmp
fs
fisttpll
pop
stos
mov
adc
sub
inc
rol
or
cmpsl
mov
in
stos
mov
inc
lock
loope
xor
or
data16
in
dec
stos
aad
ljmp
das
aaa
andb
imul
jno
or
dec
das
and
mov
pop
inc
adc
sub
ss
incb
or
sbb
out
shlb
je
into
int3
mov
add
out
subl
xlat
cmpsl
hlt
adc
mov
push
call
jg
add
adc
add
xchg
test
repnz
idivl
push
jae
ja
cmp
into
in
inc
xlat
dec
fsubl
pop
cmpsl
sbb
or
dec
pop
cwtl
lock
ljmp
lret
insb
push
rolb
mov
pop
mov
adc
punpcklwd
and
fimuls
es
push
dec
pop
xor
in
cmp
aad
pop
sbb
out
mov
popa
mov
insl
push
cmpsl
or
fs
insb
push
mov
mov
das
cld
mov
and
enter
lahf
adc
add
sbb
imul
ret
inc
mov
adc
test
lahf
xchg
jbe
adc
jp
push
xchg
adc
stos
movl
mov
call
dec
jge
mov
hlt
loopne
push
idivl
xchg
dec
push
hlt
sbb
cwtl
sahf
sbb
into
dec
mov
pushf
dec
push
fisubrs
ljmp
or
jne
ja
jbe
mov
or
test
fnstsw
cld
out
jl
pop
cli
or
inc
and
lock
dec
mov
inc
or
sub
cmp
adc
jo
das
add
clc
sbb
dec
add
dec
outsb
fwait
dec
inc
popa
addr16
and
jp
movd
push
insl
pop
iret
sahf
cmp
inc
mov
jl
sahf
fstl
adc
jb
jmp
negb
loope
popa
add
mov
sbb
shrl
lods
mov
leave
jmp
mov
dec
enter
std
push
sub
cs
mov
in
sub
ja
dec
je
hlt
cmp
out
and
xor
sub
iret
add
in
adc
ss
inc
sahf
in
je
fs
shll
xchg
outsb
ss
dec
jp
jp
lahf
iret
sti
cmp
mov
ret
adc
cmp
dec
fildl
stos
pusha
xchg
popa
sbb
std
std
cmp
stc
ss
adc
mov
sahf
mov
cmp
or
xchg
push
mov
sub
mov
pop
jge
data16
xchg
jb
inc
imull
jge
push
fcomi
xchg
jp
testl
or
cmpsb
mov
test
repz
push
sbb
sub
pop
arpl
aam
in
add
adcb
lock
lea
lret
push
icebp
sbb
push
cmp
stos
jbe
in
xchg
xlat
push
cld
push
pushf
sarl
iret
dec
cmp
mov
loop
orb
shrb
loope
rol
cmp
es
lea
not
sub
and
pop
mov
and
jge
out
dec
mov
shl
inc
push
cmp
popf
popa
xchg
adc
cmp
add
mov
aas
sub
lods
repz
sub
push
js
incl
jno
sti
mov
ret
pop
push
sub
gs
or
pop
test
cmc
aam
shrl
inc
cmp
jmp
pop
mov
popf
fdivrs
cmp
inc
add
mov
cmp
lret
pop
mov
lcall
xchg
stos
xchg
iret
ficompl
cmp
jns
pop
dec
mov
xchg
cmp
rorl
pop
push
cmp
xor
adc
or
test
add
seta
ror
pop
icebp
xor
idivb
in
jbe
dec
and
pusha
aas
and
cltd
mov
pop
sbb
mov
and
rcrl
jb
test
enter
adc
roll
popa
icebp
sub
sub
inc
adc
cli
shrl
xor
lock
pop
cli
mov
xchg
fbstp
hlt
lret
inc
adc
fstpt
clc
iret
inc
or
cmpsl
cmp
inc
hlt
pop
jae
adc
xlat
xchg
sbb
mov
mov
push
dec
jno
dec
lods
into
mov
mov
roll
jno
xchg
adc
cmp
jae
sub
jbe
xchg
inc
out
jne
xchg
sub
cmp
mull
pop
rol
stos
adc
dec
and
and
cli
imul
movsb
xor
int3
or
inc
xor
outsb
pop
mov
jp
and
dec
call
data16
inc
loope
mov
ficompl
popf
dec
sbb
shrd
pop
addl
inc
scas
in
mov
pop
jae
fmulp
es
push
int
mov
xchg
mov
push
je
pop
sbb
in
call
loopne
and
movsb
jle
mov
push
mov
loop
add
fisttpll
xchg
mov
or
shl
sbb
andl
jnp
mov
jne
cmpsl
add
jae
sub
rolb
fldl
mov
movsl
scas
push
imul
ret
negb
in
mov
mov
push
and
jo
lock
xchg
and
aad
aam
popfw
sub
mov
pop
sub
and
mov
mov
xlat
in
sbb
mul
ret
push
push
mov
push
mov
popa
in
or
jno
rol
dec
popa
cwtl
or
push
sti
push
jp
imul
fnstsw
fldcw
rorl
inc
mov
push
lret
sti
lcall
jg
arpl
aas
sub
hlt
lcall
mov
test
inc
and
lock
or
daa
jmp
cld
sbb
pop
subl
mov
repz
mov
test
add
push
xchg
sbb
sbb
and
mov
cmc
inc
pop
push
inc
pop
cmp
push
clc
pushf
and
sahf
insl
arpl
jg
mov
and
in
lret
cmpsb
mov
insb
jp
arpl
shrl
jae
addl
inc
mov
mov
cmp
insb
loop
pop
dec
das
mov
mov
arpl
cltd
mov
or
stos
mov
inc
jecxz
scas
or
std
fcmove
pop
out
mov
xor
aad
inc
in
aam
push
and
and
or
or
insb
loopne
adc
push
test
push
rcl
push
inc
subb
dec
test
shll
subb
es
ret
and
jl
and
aas
jmp
xchg
pop
sbb
cmp
push
and
lock
leave
add
cmovnp
loope
aaa
xor
mov
adc
mov
jecxz
jno
jno
sbb
lods
mov
dec
or
mov
push
pusha
hlt
sbb
subb
cmp
hlt
and
out
ss
cmp
out
inc
das
pusha
inc
sub
push
bound
sub
xor
sub
pushf
xchg
sahf
mov
sbb
mov
sbb
xor
fistpl
test
test
cmpsl
mov
push
mov
sub
xor
push
pop
fisubrs
push
scas
outsl
lsl
aam
sub
push
mov
push
shrl
dec
xor
lea
imul
pop
sbb
fwait
inc
push
push
aam
xor
std
push
pop
bound
js
jmp
add
xchg
out
pop
xchg
sbb
and
int
adc
into
mov
xor
pop
push
les
cld
add
xchg
out
repz
and
mov
sub
cmp
mov
add
inc
sbb
sub
pop
inc
loopne
adc
shl
in
mov
jecxz
jl
in
mov
dec
mov
or
sbb
test
mov
leave
adc
xchg
cmp
enter
sbb
fwait
jbe
cwtl
andl
cs
or
pop
les
xchg
or
in
and
mov
jge
push
sub
jp
fbld
xor
adc
xlat
or
xor
pop
jmp
mov
popf
push
insb
jns
hlt
out
jo
scas
icebp
adc
sub
fmull
xor
sbb
xchg
ja
push
jmp
test
mov
mov
arpl
pusha
mov
addr16
fcmovbe
mov
mov
xchg
or
ret
mov
stc
aad
mov
push
aad
xor
repnz
hlt
call
test
fisubrl
ljmp
and
inc
mov
fldt
sahf
mov
xor
or
xchg
push
xchg
out
mov
mov
ja
gs
enter
fnsave
xchg
jecxz
test
cmp
jns
push
pop
pop
add
cmp
dec
fidivrl
je
orb
iret
hlt
cmc
out
cld
bound
adc
sbb
sahf
loope
lret
div
jae
push
sbb
dec
jb
jle
cmp
dec
mov
and
inc
std
loopne
push
adc
lcall
pushf
sahf
xor
push
adc
sub
mov
push
outsl
adc
lock
add
daa
sub
frstpm(287
aaa
push
xchg
mov
pop
mov
cld
into
xchg
mov
cmp
addr16
jbe
fcompl
fwait
mov
xchg
cmc
mov
mov
push
or
or
jns
imul
cmp
adc
test
js
and
popf
inc
insl
xlat
jmp
jbe,pt
cltd
clc
pop
outsb
fadd
adc
push
mov
inc
xchg
mov
daa
add
mov
inc
pop
dec
jecxz
jp
mov
sub
je
lahf
leave
jb
xchg
test
xor
push
fsubrs
fsubp
mov
imul
lret
mov
xchg
pop
jbe
sub
lock
das
dec
inc
push
mov
push
fs
push
push
cltd
mov
lret
dec
inc
arpl
add
push
adc
or
arpl
repz
cmpsb
out
mov
repnz
cwtl
dec
clc
mov
lahf
add
sbb
jae
fisubl
adc
mov
out
dec
push
arpl
leave
add
add
sub
ret
push
mov
pop
pop
jo
pop
cltd
out
loop
push
adc
jne
in
dec
pusha
cwtl
pushw
arpl
sahf
bnd
mov
xor
lahf
lods
push
icebp
inc
adc
push
or
and
mov
mov
and
jl
mov
mov
or
push
adc
push
shl
sbb
sti
outsl
dec
rcl
xor
xchg
pushf
stos
icebp
push
jle
lds
leave
dec
fs
push
imul
dec
mul
mov
or
xchg
in
out
leave
ss
cld
mov
sbbb
iret
mov
mov
popf
sbb
xchg
adc
pushf
xor
xor
push
mov
nop
xchg
mov
stos
dec
jns
jl
fimuls
stos
fs
ror
loop
mov
xor
jle
les
xor
out
push
lahf
jmp
in
pop
sbbl
imul
mov
jge
inc
add
jnp
aas
mov
jb
dec
stos
sbb
mov
dec
cmp
lret
jge
inc
push
lds
test
addl
aas
out
mov
jl
mov
lcall
je
inc
ja
icebp
xchg
xchg
sbb
leave
jne
or
xchg
test
sbb
mov
xchg
shrb
push
pop
sbb
push
push
xchg
dec
xor
sti
and
divl
push
sbb
push
arpl
or
jle
or
adc
aam
sbb
xor
test
sub
push
scas
lcall
xchg
add
dec
inc
lcall
insb
xchg
pop
sub
shl
xchg
adc
jle
outsb
ja
out
ja
sbb
push
add
adc
pusha
jnp
mov
imul
shll
inc
pop
or
xor
test
addr16
pusha
dec
fnstsw
lods
jno
aad
xor
add
sbb
iret
push
mov
movsb
fldt
icebp
popaw
fimuls
push
and
sbb
lcall
mov
inc
sbb
ds
push
test
scas
lahf
mov
outsl
cmp
fidivrl
imul
ds
mov
pop
data16
rcrb
and
push
mov
jmp
jle
mov
jmp
out
scas
imul
mulb
rcr
gs
mov
sub
push
out
and
repz
ficoml
test
push
div
add
xor
rolb
sbb
cmp
adc
xchg
jp
sbb
push
jbe
mov
sahf
in
xchg
ret
xchg
outsl
lods
popf
pop
lds
mov
ja
dec
xchg
xor
xchg
mov
sbb
xchg
scas
xor
pop
inc
adc
out
rolb
mov
daa
movsb
pop
jge
push
scas
dec
dec
mov
mov
mov
in
mov
push
jecxz
mov
jg
popa
sti
out
ljmp
lahf
je
imul
pop
lock
mov
imul
or
insb
in
push
sahf
add
xorl
lcall
push
in
repnz
xor
subb
adc
lods
fs
pop
pop
push
inc
int
ds
jp
jecxz
push
xchg
mov
cmova
cmp
out
ja
or
mov
jg
rcll
jo
sbb
lcall
mov
jp
lods
pop
incb
lds
test
inc
divl
lcall
xchg
sarl
les
cmp
dec
rcl
inc
sub
aam
jg
das
inc
mov
adc
sub
dec
inc
ret
pop
cli
inc
xor
sub
fisttpl
cmp
mov
pop
jb
and
mov
aaa
xchg
pusha
ss
mov
lock
jns
movsb
jmp
and
cmp
insb
mov
push
in
sarl
in
jg
mov
mov
sbbl
sub
xchg
leave
mov
lea
sbbl
scas
fs
in
movsl
cld
sub
cmpsb
cmpsb
sahf
cwtl
imul
xor
lcall
scas
pop
mov
ljmp
mov
sub
aaa
push
xor
add
fistpll
imul
or
out
jb
in
dec
or
inc
js
add
mov
or
mov
lods
jge
lret
push
jmp
or
dec
lock
and
jo
idivl
aad
cli
push
mov
nop
sub
sahf
push
sbb
outsb
popf
jno
inc
sub
mov
mov
xor
cmp
stos
add
es
dec
add
mov
push
xchg
ds
sub
cmp
pop
aas
dec
or
cmpsl
inc
adc
loope
imul
int
and
xor
inc
push
mov
jns
xchg
shlb
mov
incl
sbb
rclb
dec
mov
cld
cmpl
dec
jge
rolb
divb
push
and
mov
mull
jne
maxps
pusha
in
mov
loope
add
xchg
cmp
fstps
inc
sbb
enter
pop
rorb
es
enter
pop
cmpsl
sbb
sbb
scas
rcll
lods
add
mov
jmp
repnz
push
adc
xor
out
cmp
es
cltd
in
jle
subl
or
popf
ljmp
sti
xor
inc
fisttpll
mov
out
push
push
loopne
repnz
sahf
jbe,pn
sub
mov
ret
or
push
into
nop
jmp
stc
out
inc
movsl
pop
xor
repnz
pop
stc
or
mov
push
cmpb
push
xor
push
clc
std
cld
inc
add
loop
subb
cmc
ds
icebp
xor
pop
push
mov
pop
out
or
icebp
pop
mov
cmp
pop
scas
jnp
xorl
aam
cmpsl
in
sbb
iret
out
test
sbb
dec
pushf
adc
in
xor
sbb
sbb
jg
fwait
jnp
inc
xchg
outsl
mov
stos
testb
lahf
mov
stc
push
mov
push
dec
int
inc
mov
pop
ss
jae
add
or
push
scas
jo
inc
sbb
out
pop
push
push
mov
imul
in
bnd
leave
push
xor
mov
or
push
shrl
adcl
lret
adc
mov
push
das
push
pop
jge
leave
pop
add
sub
xor
xor
cmp
std
jl
cmpl
lds
xlat
test
mov
push
mov
push
out
dec
xor
frstor
insb
xchg
aad
push
test
pop
pop
sbb
add
push
xchg
movsl
aas
ljmp
enter
adc
sahf
dec
aas
or
sbb
outsb
popa
fsubr
mov
adc
push
mov
mov
mov
sti
cmp
sub
gs
aaa
mov
dec
pop
jg
cltd
out
pop
push
std
out
sub
mov
stos
iret
out
in
and
adc
jo
adc
scas
es
cmpsl
movsl
sbb
jo
mov
test
and
in
in
xor
push
cld
dec
cmp
test
mov
call
test
push
inc
and
arpl
out
lcall
jmp
in
push
lock
lods
jb
test
inc
mov
inc
leave
jge
jmp
les
mov
cmp
dec
push
cld
int3
aam
adc
mov
aaa
mov
sub
dec
in
call
pop
add
xchg
scas
pop
in
pop
hlt
out
outsb
btr
dec
clc
sbb
push
adc
mov
std
inc
lds
mov
dec
mov
popf
add
jmp
idivl
mov
xor
mov
loop
cwtl
stc
sub
sub
push
push
cmp
or
call
leave
sahf
or
mov
imul
xor
arpl
xor
sub
lods
fdivrl
push
arpl
mov
xchg
fs
mov
faddl
cmp
dec
ficompl
jo
mov
push
mov
cld
lods
cltd
jns
push
in
or
dec
mov
shr
xor
ret
xor
pop
inc
cld
fdivp
cmp
dec
das
add
jecxz
adc
mov
sub
jmp
xchg
mov
or
scas
inc
call
pop
add
clc
push
aam
ja
mov
xor
push
xor
mov
aas
mov
out
mov
jb
cmpsl
and
adc
jge
jae
ja
mov
push
fwait
mov
xchg
out
push
jg
nop
test
dec
push
inc
jecxz
mov
hlt
jmp
fnsave
cmpsb
jns
ficomps
pop
jmp
fsubr
lods
loope
mov
and
jle
data16
into
adc
push
mov
push
and
add
adc
mov
push
sub
lods
popa
lss
ljmp
pop
jb
int
lea
movb
inc
pop
sbb
push
ss
cmpsl
add
popf
outsb
ss
push
adc
xor
inc
dec
xor
insl
rcrb
adc
cmp
in
jae
xchg
outsl
les
xor
rolb
sbbb
mov
push
mov
addr16
subb
jp
pop
sbb
lods
outsb
xor
pop
mov
cmc
pop
or
sbb
lcall
pop
push
outsl
or
popa
inc
mov
fcomps
iret
inc
lgs
sbb
scas
cmp
adc
mov
fcompl
loopne
rclb
movsb
cld
repz
adc
les
insb
sub
jbe
ret
sbb
or
fists
jmp
outsl
je
adc
out
pusha
pop
lahf
sub
adc
insl
loopne
pop
push
fnstenv
and
fdivp
jl
je
sbb
stc
hlt
stc
stos
xchg
jle
dec
fdivrs
sub
push
push
cmp
mov
inc
mov
cwtl
ret
aam
mov
adc
ret
cltd
out
in
repz
dec
outsl
mov
stos
or
sarl
cld
xor
ffree
es
loope
cmp
inc
out
stos
adc
dec
adcb
lods
iret
add
inc
rolb
jmp
test
push
fs
repnz
mov
cmpl
mov
xor
jne
jg
loope
std
mov
cltd
push
stos
cmp
adc
ljmp
inc
les
adcb
add
xchg
shl
mov
jbe
mov
fs
pop
stc
jne
pop
inc
fs
push
or
push
pop
fsts
adc
dec
daa
mov
daa
dec
and
divl
dec
add
out
mov
xor
mov
repz
mov
inc
cld
jl
xor
push
mov
fdivs
into
lret
push
fimull
ds
fcoms
or
into
repnz
pop
fisttps
jge
jno
loopne
sbb
sti
bound
stos
sbb
mov
loop
push
inc
insl
inc
repz
pushf
les
movl
ds
inc
sub
xor
dec
inc
mov
ds
xchg
pop
cmp
rorl
xchg
sub
lea
inc
add
inc
adc
adc
repnz
cmp
pop
sub
pop
pusha
imul
or
xor
inc
push
test
es
lret
jno
loope
lea
pop
add
pop
cld
cwtl
cmpsl
jne
xchg
nop
and
mov
adc
mov
add
out
xchg
cli
sbb
repz
xor
dec
fsubs
enter
sub
pop
mov
test
lret
lret
pop
in
imul
dec
fstl
mov
test
xor
lods
arpl
je
push
and
jnp
inc
iret
andb
out
add
sub
subb
sti
xor
pop
cmp
cli
inc
in
sbb
push
rol
outsb
pop
les
add
or
mov
movsb
movsb
adc
mov
mul
cmc
int
shr
jnp
jnp
je
sbb
cld
jmp
jno
add
push
std
cmp
out
xor
jnp
mov
lods
push
outsl
mov
inc
addl
jle
jle
rcl
inc
push
test
mov
lcall
sbb
cmc
jge
sub
xchg
jae
imul
hlt
pop
jmp
test
mov
inc
add
adc
adc
sarb
adcl
dec
adc
xor
sbb
jg
mov
repnz
cmp
mov
add
dec
aas
xchg
mov
and
test
sbb
push
cltd
xorl
clc
andb
cs
test
mov
push
mov
ljmp
sbb
xor
xor
push
mov
pop
mov
xchg
cmp
andb
pop
mov
lock
arpl
jmp
jecxz
inc
mov
dec
repz
ret
leave
mov
call
lahf
fdivl
inc
dec
inc
add
adc
fildll
push
or
and
ds
lret
sbb
rclb
mov
pusha
sub
push
dec
mov
jmp
mov
data16
arpl
push
mov
mov
push
jo
test
aad
bnd
mov
xchg
jnp
xchg
lahf
mov
int
inc
add
sub
xor
lahf
je
and
sbbl
mov
jle
test
push
fnstenv
and
jae
out
cmpsl
mov
or
jmp
jecxz
leave
scas
idivb
and
inc
cld
or
or
mov
cltd
cmp
scas
sbb
push
sarl
xchg
icebp
call
mov
leave
ret
cwtl
pop
push
sub
pop
push
shlb
loop
in
in
xor
ds
push
aad
mov
stc
out
insb
xor
adc
or
jl
mov
pop
test
les
sti
in
icebp
test
mov
xchg
shll
cmpsb
push
fdivrp
inc
push
addl
lret
sub
ja
aam
mov
xchg
outsl
push
mov
lods
rcr
add
inc
loope
imul
data16
cmpsl
or
addl
and
pop
push
inc
sub
xchg
xchg
scas
push
pusha
cmc
mov
int3
xor
dec
jo
js
mov
jg
je
push
cwtl
push
jae
inc
cmp
sbbb
or
dec
lods
xorl
pop
xchg
das
mov
push
mov
xchg
cmp
das
ret
mov
fiadds
lcall
sbb
mov
pop
ljmp
cmp
jnp
jmp
or
insb
arpl
mov
je
mov
call
and
in
fidivrl
das
mov
mul
xchg
imul
mov
xchg
mov
mov
cmp
fistl
mov
mov
mov
in
aad
mov
das
les
xchg
negl
mov
sub
push
shlb
add
mov
enter
dec
and
cs
xchg
inc
inc
mov
cmc
movsb
mov
insl
push
lea
aas
fs
mov
mov
jp
dec
cmp
movsb
sbb
jns
add
sub
add
mov
movsb
loop
ret
add
sbb
scas
dec
lcall
add
ja
adc
sub
movsb
je
clc
jnp
and
sar
push
xlat
insb
xchg
push
ss
call
int
es
dec
pushf
and
cld
jnp
mov
dec
pusha
aaa
hlt
pop
jecxz
enter
jnp
je
dec
push
or
mov
jae
adc
adc
adc
mov
or
inc
xor
cmp
add
push
and
cmpsl
jge
add
pop
push
jecxz
sub
ljmp
push
pop
mov
mov
xchg
int3
mov
out
mov
mov
fldenv
pushf
enter
pusha
jae
pop
push
pop
xchg
pop
inc
popa
cltd
xor
push
into
push
mov
or
push
push
and
outsb
out
inc
in
in
clc
and
add
imul
js
shrl
push
mov
mov
and
xchg
xlat
addr16
push
aas
fstpl
dec
cmc
fnstsw
adc
clc
push
leave
xchg
jo
cmpsl
shll
inc
jo
xchg
mov
push
mov
dec
jle
lods
cltd
outsb
pop
outsl
aam
jge
xchg
xchg
iret
insl
gs
inc
xor
in
sbb
arpl
push
icebp
pop
push
push
sbb
fistpl
cmp
adc
out
or
xor
push
sub
mov
gs
stos
in
mov
jae
out
mov
cmp
das
push
cmc
sbb
xchg
addr16
int
pop
and
mov
xchg
int3
or
stos
adc
scas
inc
cld
data16
insb
mov
push
jae
jae
ss
mov
mov
out
xorb
add
fidivrs
cmpb
flds
jne
popa
push
xor
xchg
push
and
aas
dec
in
stc
cmpsb
fnstsw
or
add
ret
xchg
jb
dec
gs
jb
xor
shl
mov
in
push
data16
sub
daa
aas
and
pop
cmp
cs
cmp
aad
sbb
cwtl
hlt
inc
clc
mov
shrb
add
imul
cmp
xor
jo
and
cmp
sub
aaa
loope
shlb
aad
pop
in
adc
aam
push
ret
sub
sbb
adc
les
pop
push
inc
xchg
xlat
mov
lods
and
dec
xchg
pop
mov
neg
ret
xor
add
lds
xchg
or
sbb
inc
lods
les
mov
fldt
pop
sahf
out
cmpsb
pusha
cmp
or
mov
pushf
fistl
ja
dec
push
aas
out
jmp
out
in
jmp
mov
add
daa
sbb
test
outsl
lea
cwtl
xchg
mov
stc
aam
std
push
ror
sbb
xchg
js
add
fbstp
push
lret
mov
jae
dec
movsb
xor
andl
fsub
mov
lea
push
roll
and
jo
and
and
pop
xor
push
icebp
ret
mov
cmp
ficompl
dec
mov
scas
psubd
mov
add
fists
mov
test
imul
iret
bswap
aas
add
mov
sub
sub
mov
imulb
mov
and
cmp
test
add
xchg
and
pop
cli
xorb
mov
andl
mov
repnz
and
dec
mov
cmc
jns
nop
sbb
xlat
cld
jl
or
popf
call
test
jns
stos
mov
push
fiaddl
jp
push
dec
xorl
movsb
loope
sbb
jge
adc
sbb
pop
jmp
mov
enter
sub
call
into
cmp
shll
and
imul
mov
cmp
les
lret
pop
std
cli
cmp
movsb
mov
pop
jecxz
and
mov
jns
sbb
std
adc
mov
das
xor
pop
inc
or
and
pop
into
les
push
aas
xor
loop
inc
jmp
es
pop
mov
sub
sti
mov
cltd
shr
push
or
pop
popa
into
jmp
shl
lahf
jne
xlat
hlt
mov
inc
mov
jno
sarb
pusha
mov
scas
imul
out
fs
cmp
sub
clc
loopne
les
les
mov
mov
mov
popa
js
and
sub
or
push
xor
test
xchg
fdiv
lock
xor
push
inc
addr16
push
push
mov
and
repnz
sti
xchg
cltd
add
push
xchg
cmpsb
cmpsb
and
outsl
jno
pop
outsl
jmp
shrb
aas
inc
mov
push
pop
data16
fcomps
rorl
mov
ret
lcall
add
into
scas
adc
orb
daa
push
int3
push
jmp
rep
xorb
pop
sbb
ss
push
in
push
iret
aas
sbb
outsl
add
pop
ficoms
push
push
jns
andl
inc
pop
int3
adc
dec
or
into
out
push
cmp
pop
cs
pop
jne
loop
sub
or
pusha
jp
and
add
mov
cmpsb
outsb
mov
and
add
mov
out
mov
sub
movsl
pop
cltd
enter
dec
or
mov
setns
push
add
clc
xchg
or
iret
pushf
arpl
xor
in
mov
jl
loope
inc
aad
mov
ss
int
lret
call
push
inc
pusha
push
sbb
or
lret
popf
pop
dec
push
and
xor
mov
jo
gs
jg
lea
shrb
shrl
sbb
outsb
fimull
push
aaa
mov
lock
jp,pn
icebp
call
xchg
mov
sbbl
dec
testb
ds
dec
pop
jl
dec
stos
dec
arpl
pop
out
push
fs
ret
rol
cmc
xchg
jae
sahf
addr16
pop
mov
shr
dec
or
jns
xor
sbb
pusha
jmp
mov
cmp
push
fidivs
xchg
jmp
sub
dec
fldl
fsubrp
divps
mov
lds
mov
or
das
mov
aas
pop
shr
sahf
push
xor
push
mov
push
pop
std
lods
adc
incb
push
inc
dec
dec
loope
xor
shl
fnstsw
or
xchg
xor
lahf
mov
dec
xchg
inc
stc
jns
cmp
sbb
pop
dec
or
loop
mov
sub
repnz
mov
mov
mov
out
cmp
jmp
dec
pop
push
jp
pushf
loop
insl
and
insb
mov
xor
scas
rcr
add
push
xlat
aam
loopne
mov
inc
jge
cmp
pop
cwtl
stos
xchg
cmpsl
out
pop
das
lods
imul
fwait
in
popf
cmpsl
push
push
push
xchg
push
inc
insb
fwait
or
fdivs
sarb
and
inc
push
xchg
cmpsb
push
clc
out
aas
jg
nop
in
shr
sbb
sbb
gs
out
addl
or
xchg
mov
xchg
repz
les
fs
mov
push
pushf
mov
ret
cli
xchg
icebp
jae
or
mov
testl
cs
popa
iret
sbbl
lea
cs
andb
scas
pop
mov
imul
lods
lods
mov
les
inc
clc
and
jno
rorb
rolb
xchg
icebp
mov
mov
in
outsl
add
test
loop
popf
fisubl
mov
sbb
mov
ljmp
xor
jmp
and
xorl
aaa
sbb
and
jmp
ljmp
jo
mov
neg
idivb
ret
or
sbb
cmp
add
pop
xlat
mov
cmp
inc
sbb
mov
daa
xchg
push
push
dec
jae
dec
out
es
rcl
rclb
sub
and
aas
pop
cld
adcb
div
mov
or
outsb
std
dec
jmp
sub
and
rclb
dec
adc
es
movsl
mov
jl
inc
aas
lds
icebp
sbb
les
sub
aaa
xchg
dec
inc
pusha
mov
jp
lods
xchg
xchg
mov
pushf
xchg
cmp
and
dec
mov
lahf
push
add
xchg
dec
sbb
cmp
sbb
jns
mov
mov
shll
cmc
mov
pop
xchg
lock
gs
and
push
sub
sbb
cmp
fisttps
sbb
or
addl
and
inc
mov
lahf
js
rcl
mov
cwtl
xchg
push
mov
fbld
mov
push
xor
inc
scas
aad
test
cwtl
and
test
cmp
lods
or
in
or
and
xchg
xchg
xchg
aas
jns
cmp
add
jmp
jg
testl
ds
mov
stos
es
movl
push
sahf
sub
adc
jg
iret
cmp
or
xchg
ds
push
leave
pop
push
and
xchg
mov
or
cmp
fcmovu
mov
sub
stos
jmp
push
ret
test
imul
repnz
mov
and
lret
fcomps
lods
mov
inc
or
push
cmp
orl
ljmp
fidivl
pop
sub
mov
inc
or
add
cmp
cli
lret
mov
mov
pushf
sti
jns
pop
jg
push
inc
pusha
sub
lods
and
inc
lods
lea
negl
add
movswl
mov
sahf
movsl
or
inc
sub
pop
xchg
andb
dec
xchg
daa
sbb
push
pop
inc
pusha
fwait
fwait
xor
mov
nop
pop
shrl
ret
cld
into
push
repnz
xchg
scas
fs
mov
jae
lds
ficomps
push
push
out
dec
cmp
push
cmp
pusha
push
cwtl
mov
lcall
in
int3
xchg
xor
ficoml
in
and
inc
xchg
adc
repnz
cmp
jle
aad
mov
xor
add
and
dec
mov
adc
sbb
sbb
xchg
fidivl
ds
mov
in
sbb
inc
ja
or
dec
rorl
push
dec
mov
andnps
dec
mov
lret
push
jle
hlt
pop
sub
mov
or
xor
push
lds
adc
iret
icebp
ret
and
sbb
daa
mov
mov
ficoms
xchg
js
lods
aam
mov
stc
scas
cmp
jbe
pop
cmp
jge
jns
call
ljmp
aad
flds
andl
loop
cli
xor
pop
inc
repz
inc
pushf
fistpll
and
dec
sub
cwtl
xor
jle
loope
lret
lret
mov
mov
jbe
mov
ret
cs
popa
jae
add
cmc
lea
out
pop
aad
testl
rol
cld
xlat
pushf
dec
jecxz
in
jg
lds
leave
cmp
in
dec
je
mov
mov
push
aad
nop
xlat
jne
xchg
fucom
ljmp
add
fs
and
subl
mov
cmp
aas
or
into
and
mov
mov
sahf
xchg
movsl
mov
test
rcrb
push
adc
test
int3
xchg
dec
mov
pop
sbb
jmp
sarl
mulb
fcoml
leave
lret
fimuls
movsl
test
decb
and
cld
data16
xor
ljmp
outsl
push
icebp
mov
cltd
dec
xor
stos
mov
fisttps
pop
dec
ljmp
test
mov
mov
imulb
mov
jno
dec
insb
ja
in
filds
test
pop
arpl
mov
push
inc
mov
fsubr
push
in
lods
stos
and
jno
sub
icebp
dec
out
out
pop
scas
push
adc
int
xchg
loopne
sbb
xchg
outsl
in
mov
dec
std
sbb
or
xor
shl
adc
inc
lea
movsb
dec
mov
js
test
sub
mov
mov
xchg
jne
cmpsl
in
push
mov
scas
mov
pop
fnsave
adc
add
jbe
cli
int3
xchg
lahf
inc
jb
mov
mov
xor
repz
cmp
mov
mov
pop
adc
mov
add
push
jge
fdivrl
jnp
adc
dec
push
cltd
jbe
das
dec
sub
jb
and
sarl
push
mov
idivl
pop
test
push
mov
cmpl
nop
sarl
idivb
call
lods
shrb
push
movsl
lock
sarl
cmp
jbe
test
test
pop
dec
cmp
jg
roll
xor
les
xchg
dec
mov
mov
int3
out
xchg
les
push
cmp
or
cs
mov
add
cmp
pop
mov
fmulp
hlt
rcrl
int3
ror
bound
jmp
movsl
dec
cmp
stos
or
mov
sub
or
imul
repnz
inc
out
pop
std
adc
mov
ret
mov
leave
scas
gs
jno
in
movaps
fistpll
jnp
xchg
lods
xorl
rcrb
sbb
rorl
mov
mov
pop
fidivrl
popa
enter
out
or
pop
je
subb
loop
pop
inc
cwtl
mov
mov
fcoml
stos
xor
fcmovbe
pop
mov
add
jecxz
push
xor
sbb
or
ljmp
and
je
or
stos
movl
pushf
cmpsl
scas
popl
fnsetpm(287
mov
push
dec
jl
mov
cld
pop
pop
mov
mov
out
jmp
add
sub
dec
insb
or
mov
scas
jnp
in
imul
fs
xlat
jo
lods
cs
popa
stos
push
xchg
loop
or
mov
int
repz
or
dec
mov
xchg
and
pop
and
stos
ret
popa
jae
movsl
fxch
and
add
push
call
data16
and
or
negb
jnp
stc
mov
push
lods
cmp
out
mov
jae
std
ret
fsubr
cmp
dec
jl
mov
sbb
sbb
fistps
jae
push
cli
cli
movsl
in
data16
outsl
imul
scas
pop
push
ret
ret
mov
shl
stos
and
pop
mov
inc
cmp
push
or
negb
jnp
dec
sbb
fisubrs
fwait
xorl
xor
sbb
aam
fwait
xchg
pop
scas
mov
jbe
inc
shlb
les
loope
int3
jecxz
mov
mov
imul
sahf
cmp
inc
cmpsl
hlt
out
scas
lds
pushf
sti
mov
leave
imul
bound
scas
mov
shll
xchg
push
cmp
inc
faddl
sbb
mov
fisubrl
in
fcoml
jecxz
dec
mov
out
pop
mov
les
mov
and
in
cli
loop
movsb
sahf
adc
in
dec
jno
bound
enter
mov
sub
mov
push
xchg
sub
enter
adc
dec
pop
and
xchg
lock
xchg
cmp
pushf
xor
xor
loop
push
dec
push
jnp
push
jno
into
mov
sbb
mov
lahf
dec
push
sub
xor
fisubrs
arpl
mov
sbb
push
dec
ss
mov
mov
wbinvd
test
sub
cld
int3
lods
shlb
mov
mov
ret
sbb
adc
lods
pop
cmpsl
adc
inc
push
inc
pushf
popa
mov
add
mov
inc
cwtl
pop
sbb
jae
das
push
nop
std
nop
jle
inc
sub
push
xchg
icebp
int3
sub
ds
inc
orl
push
mov
push
inc
fwait
push
lret
add
jb
or
dec
fmul
aaa
mov
pushw
loope
sub
pop
sbb
sbb
sbb
and
ja
jbe
in
ret
fisttpll
xor
es
pop
mov
imul
mov
stos
je
add
ret
sub
enter
hlt
mov
cmpsl
mov
cs
jg
mov
fcoms
add
out
and
int3
insl
or
jge
subps
dec
arpl
dec
sub
mov
adc
in
mov
subb
cmp
inc
dec
lahf
out
inc
sar
jecxz
ss
push
cmpsl
lds
in
imul
lret
int
jl
test
shr
inc
imul
and
rolb
jnp
pusha
sbb
cmp
rclb
cmc
addr16
shll
inc
cmp
inc
out
ds
cwtl
loope
and
hlt
shll
jae
pop
dec
loop
sub
sahf
push
ret
lock
call
sbb
add
repnz
lea
pop
add
fsub
mov
sub
cld
imul
scas
adc
lret
addr16
jno
xchg
inc
sbb
iret
lods
int3
adc
adc
pop
mov
add
and
mov
cmp
loop
lock
sub
cli
sarb
test
out
arpl
add
ret
push
fstp
outsb
lahf
or
shlb
mov
add
pop
add
and
insb
pop
cli
mov
adc
daa
push
lds
and
xor
push
jp
fdivr
imul
cmpsl
and
lods
push
orb
jns
gs
dec
jg
fnstsw
and
das
pusha
in
jl
pop
cmp
int
cwtl
cmp
into
sbb
or
dec
mov
dec
dec
je
sti
mov
jne
aas
andb
dec
outsb
sub
inc
mov
jge
sub
inc
test
mov
in
fdivs
std
lahf
stos
mov
xlat
int3
sbb
jns
and
cwtl
mov
push
lods
or
and
jno
pop
fimuls
mov
icebp
sub
mov
jl
or
and
dec
cmp
cmp
pop
stos
shlb
xor
xlat
cmp
jmp
mov
inc
sbb
mov
fldcw
mov
dec
cwtl
test
cmp
adc
push
inc
out
insl
xchg
jg
pop
xor
sub
mov
ljmp
xchg
nop
stc
vpsrld
mov
inc
sahf
cld
leave
stos
iret
push
mov
rorl
fadds
pop
shrl
pop
cmp
and
cmpsl
dec
and
out
sbbb
shlb
test
lods
jns
test
icebp
out
mov
sub
mov
ret
pop
pop
mov
dec
dec
jmp
push
leave
push
dec
mov
adc
repnz
adc
cmp
mov
jns
ss
std
test
scas
jge
loopne
mov
push
jge
std
xor
outsl
into
xchg
xchg
pop
dec
pop
mov
dec
hlt
xchg
mov
in
rcll
cmp
jno
pop
dec
stc
not
sbb
sub
sub
daa
ds
or
and
orb
inc
pop
cmp
mov
and
retw
mov
sahf
subb
pop
dec
xchg
movsb
sub
dec
inc
mov
add
comiss
leave
pop
dec
push
enter
subl
mov
pop
sub
mov
pop
and
enter
cmpb
inc
jl
loop
and
cwtl
and
ret
pop
jecxz
jno
jno
fdivrs
sub
ja
push
in
mov
scas
dec
sub
or
inc
iret
sbb
daa
dec
je
shlb
out
push
add
dec
aam
lds
sti
adc
movsl
pop
adc
mov
cmp
ficoml
in
lock
lret
popl
pop
xchg
pop
cltd
pop
les
roll
add
adc
xor
jmp
mov
push
imul
shll
add
cltd
xchg
insl
add
ss
imul
mull
sbb
add
and
stc
push
aad
cmpsb
mov
cmp
push
mov
xor
jae
nop
xor
cmc
std
fcmovnb
adc
xor
out
mov
xchg
imul
aaa
cltd
sbb
hlt
pop
inc
jecxz
pop
pusha
xchg
adc
std
lcall
pop
inc
loope
mov
cmpxchg
ljmp
mov
imul
dec
addr16
test
cmp
sahf
push
jbe
nop
pop
fadds
out
jb
in
scas
jmp
jp
push
dec
les
add
imul
movsl
or
and
mov
rclb
mov
jb
jo
push
xchg
fdivrp
mov
pop
jle
repz
arpl
ss
movsl
das
inc
push
stos
das
cmp
shr
add
jmp
inc
add
sbb
dec
sub
add
lods
jecxz
orl
aam
mov
push
iret
xor
int
lahf
shlb
mov
aas
movsb
test
and
dec
js
and
mov
adc
or
rclb
mov
pop
mov
aad
sbb
leave
xchg
inc
bound
lods
sub
pop
fisttpl
lods
test
cmp
push
popa
xchg
icebp
jne
jne
fcoml
sub
addr16
pushf
inc
dec
push
adc
and
lds
cwtl
hlt
andl
in
std
aad
xchg
lock
inc
sbb
js
into
je
rcr
ret
pop
dec
xchg
mov
mov
lock
and
cmp
pop
lds
xlat
dec
ja
dec
scas
call
sarb
cmc
in
jbe
call
push
pusha
push
mov
ljmp
inc
jnp
popa
push
or
fistpl
aad
imul
jno
or
or
gs
idivl
repz
imul
jno
adc
push
mov
dec
sti
int
and
jp
xchg
push
fwait
testl
jb
rcr
in
dec
xchg
fldcw
sbb
sbb
frstor
and
or
cmp
cmp
and
push
pop
jno
dec
cmpb
mov
mov
loop
sub
pop
xlat
jge
push
jecxz
je
mov
imul
push
fs
orb
xchg
mov
das
dec
test
jno
test
std
fcmove
push
xorl
jmp
push
ja
lods
jecxz
daa
xchg
xchg
push
pop
dec
jge
out
lcall
in
sbb
push
cmc
bound
call
adc
addr16
leave
push
shll
fwait
cmp
rcll
xchg
adc
outsb
cmp
mov
dec
out
js
fbld
call
mov
mov
xchg
pop
dec
jne
les
adc
sti
mov
lods
vminsd
lods
xor
fucomi
test
test
frstor
fcomps
xor
andb
dec
movsb
nop
daa
inc
je
sub
inc
sbb
cs
xchg
add
xor
roll
jmp
leave
int
outsb
xchg
push
pop
in
xor
push
push
outsl
or
pop
mov
or
pop
hlt
xorb
mov
fabs
push
jnp
in
lods
sbb
cwtl
mov
adc
dec
adc
mov
out
ficoms
ja
lcall
mov
and
insl
insb
adc
sub
sub
lcall
scas
sub
mov
jne
push
adc
xchg
or
cmp
pop
sub
xchg
add
dec
xor
push
adc
sarb
idivl
cmpsl
mov
into
dec
pop
adc
sub
push
fistpll
cmp
int
in
dec
add
push
sbb
and
cmp
test
add
jmp
add
sbb
jg
popf
xacquire
and
lret
mov
and
and
xor
jbe
sub
repz
sahf
fsubl
stc
xor
lret
jmp
push
cmpl
pop
test
pop
mov
and
lds
jno
jbe
push
xor
push
out
mov
ret
sub
push
ret
and
pop
mov
inc
jecxz
sub
in
inc
es
sti
dec
xor
faddl
lock
cmp
mov
loopne
notl
jl
lds
jmp
lret
pop
sar
xchg
mov
xchg
push
mov
mov
shll
shl
cmp
add
sub
mov
inc
pop
push
add
ret
movsb
pop
mov
iret
in
cmp
xchg
enter
pop
xchg
rolb
rcrb
or
mov
fldenv
push
sub
divb
pop
mov
mov
jg
pop
push
in
or
cltd
or
sbb
jl
inc
pop
ret
lea
jo
std
ficoms
sub
dec
push
arpl
stos
sar
push
pop
mov
inc
fs
or
arpl
ret
push
sbb
or
cmc
popf
into
cmp
mov
cmp
push
pop
xor
push
push
in
lret
cmp
roll
sbb
fwait
xchg
xor
fimull
hlt
popf
outsl
or
iret
sarl
test
dec
xor
movsl
add
sub
and
into
stos
insb
lds
xchg
xchg
jmp
into
jne
out
ljmp
mov
xlat
cld
sbb
push
lret
data16
out
mov
cld
mov
lret
gs
arpl
mov
loopne
and
and
loopne
dec
dec
aam
popa
push
test
test
jo
xchg
test
xchg
imul
sar
scas
push
mov
pop
fwait
push
fisttps
and
call
movsb
outsl
mov
mov
or
cmp
filds
pop
test
sub
mov
repz
mov
je
aad
mov
ljmp
jg
sarb
pop
pop
cmp
aaa
das
push
clc
push
mov
fs
fisubrs
call
fidivrs
decl
rcll
aas
or
adc
dec
pop
mov
jns
ret
insl
pop
sub
dec
lcall
xchg
xchg
inc
mov
sub
add
jp
jnp
jmp
xor
sbb
xchg
pop
fsubrs
adc
lgs
mov
int
lcall
lret
sub
mov
daa
outsb
push
push
mov
push
xchg
sbb
xor
jg
push
data16
inc
inc
xchg
cmp
mov
cmp
pop
mov
cli
das
pop
das
pop
loope
out
or
rorb
push
js
push
mov
dec
xchg
nop
xor
add
jp
mov
int
hlt
xor
int3
pop
cmp
pavgw
insb
dec
jbe
inc
sbb
enter
add
fwait
push
xor
adc
fadds
hlt
into
cmc
xor
jne
out
hlt
subb
jno
pop
or
mov
jno
xchg
add
loope
ljmp
lock
cmp
mov
das
jl
into
xchg
inc
or
fxam
sti
repnz
jl
js
inc
jb
mov
mov
cs
mov
clc
push
std
xchg
push
seta
and
lret
xor
shr
cwtl
aaa
enter
les
mov
pop
jb
inc
cmp
imul
testb
in
add
iret
fwait
inc
cmpsl
mov
sbb
jno
mov
shl
push
and
jno
jmp
inc
pop
jnp
jle
and
test
iret
jne
roll
push
fmull
dec
inc
mov
and
xor
xor
pop
xchg
ss
mov
cli
mov
dec
insl
mov
daa
gs
cltd
dec
cmp
sub
sub
into
out
call
lock
jp
sbb
push
cmp
or
sahf
jbe
ss
addr16
sbb
push
lcall
addr16
sbb
pop
xchg
mov
or
sbb
push
dec
sti
lret
stos
scas
mov
or
call
aas
add
sbb
xchg
hlt
fistps
push
push
inc
int3
cs
cwtl
lods
mov
mov
mov
hlt
inc
stos
xchg
add
xchg
inc
scas
mov
stos
imul
mov
daa
pop
cmp
jmp
testb
stos
fcomps
pushf
pop
mov
cmp
int3
rcl
mov
or
jmp
pop
inc
aad
xchg
mov
ja
push
sbb
in
test
jne
add
fcompl
mov
inc
cmp
mov
addr16
xchg
adc
sub
fmull
xor
fists
dec
shll
inc
enter
insb
ja
scas
xor
push
pop
push
rclb
inc
jae
in
ror
xor
add
insb
loope
and
sbb
cs
insb
jl
repz
inc
mov
in
inc
push
and
jmp
out
mov
push
loop
mov
out
ret
sub
enter
jnp
pop
lea
xlat
inc
ror
pushf
loop
clc
outsb
outsl
mov
inc
push
push
mov
lret
pop
out
push
adc
clc
or
addb
aad
fcompl
fistpl
mov
imul
jp
push
outsl
icebp
sti
or
stos
clc
dec
push
gs
out
jo
lods
push
sbb
xor
adc
add
mov
adc
inc
xor
pop
cmp
mov
mov
or
shrw
mov
dec
dec
cmpsl
lahf
dec
cmp
lahf
add
mov
ret
out
sub
cmp
mov
xchg
adc
xchg
push
ret
jb
shrl
testl
lock
rcrl
aaa
dec
rolb
cmp
dec
jmp
js
aas
cltd
mov
popf
outsl
ror
outsl
gs
sbb
ror
cmc
rcr
ret
cmpsb
fcomps
or
stc
sbb
jo
add
aaa
lea
loop
and
add
fisubl
cmpb
pop
push
push
adc
add
in
lret
lock
popf
stc
sub
push
pop
or
xchg
repz
cmp
push
popf
push
test
mov
inc
xor
addl
iret
pop
sub
sahf
in
mov
inc
inc
shlb
scas
clc
jg
dec
cmc
int
lods
inc
and
push
mov
add
mov
sub
repz
fldcw
dec
in
push
cmp
sbb
push
stc
adcl
xor
jge
fisttps
sub
hlt
aaa
sub
push
in
mov
loop
push
cmp
mov
aad
iret
push
and
sbb
lods
testl
inc
xlat
out
jg
mov
ret
mov
mov
push
jge
xor
outsb
jns
into
sbb
in
fstl
aaa
mov
or
jle
daa
lret
enter
or
pusha
icebp
aad
sub
dec
pushf
cmc
xor
and
rolb
mov
xchg
popa
outsb
push
dec
adc
xor
xor
mov
pop
push
push
mov
int
jle
std
dec
pop
pmullw
xchg
jnp
jl
ret
inc
scas
sbb
iret
aad
cmc
mov
xor
mov
mov
lret
pop
or
and
aad
fistl
xchg
cmpsl
fwait
pop
jge
jle
xchg
in
xlat
adc
icebp
inc
insl
clc
mov
dec
adc
fwait
out
in
test
fs
cmp
lea
outsl
mov
xchg
mov
cmp
ret
and
sti
inc
repz
cwtl
sbb
loopne
cld
ret
aad
pop
pop
rcll
stc
sahf
insl
xor
or
add
ss
int3
idivb
cmp
lea
jb
sub
je
and
sub
outsb
adcb
popa
daa
stos
sub
pop
jno
bound
pop
out
imul
out
jecxz
jecxz
fs
jmp
lahf
arpl
out
or
xchg
flds
and
inc
jnp
xchg
and
popf
add
fisubs
testl
sub
addr16
adc
mov
mov
pop
cmpsb
cmp
cmp
pop
or
mov
pop
inc
out
out
sub
lea
ret
lea
pop
mov
lcall
or
or
mov
dec
rol
stc
stc
rcll
xor
stos
and
fldcw
test
cmp
into
cli
xorl
scas
jnp
push
std
aad
das
shrl
stos
in
clc
clc
adc
cmp
xor
aad
mov
and
xor
sbbl
jb
mov
pop
mov
aad
or
push
jns
add
sub
xchg
shl
adc
popf
sbbl
lock
fsts
in
sbb
jl
jo
pop
pop
mov
add
ljmp
fdivr
sub
in
jns
js
loop
push
lock
fldl
das
push
mov
lret
scas
push
cmc
inc
dec
xor
jae
outsl
dec
xor
iret
mov
icebp
fmull
sarb
sbb
leave
rcll
insb
sub
add
jo
xor
rcrb
push
cwtl
inc
cld
test
sbb
rcr
inc
scas
xchg
xchg
movsl
mov
idivl
clc
inc
in
mov
test
enter
stos
popf
and
in
sub
ss
int3
loope
pusha
dec
and
testl
inc
cld
sbb
sbb
outsl
repz
push
jo
test
popa
daa
pop
sbb
imulb
sub
adc
fisubl
je
loopne
add
pushf
aaa
mov
sbb
adc
mov
pushf
cld
push
add
add
mov
jbe
sub
sahf
testb
ja
lods
jbe
test
fcoms
dec
sarl
mov
inc
call
pop
xor
jb
dec
and
lods
adc
push
push
jns
sub
sub
and
and
push
repz
jge
cmp
ss
test
inc
sub
sbb
test
shlb
xor
repz
sarb
ljmp
into
add
fisubrl
arpl
enter
aam
js
insb
repnz
adc
ds
push
inc
cmc
mov
addb
ret
lods
ljmp
mov
pop
ret
mov
sbb
lods
lods
xlat
push
insb
scas
push
xchg
inc
mov
add
jno
sub
pop
aad
out
bound
jp
push
sahf
test
sub
pusha
push
push
mov
jp
jmp
shl
fidivl
mov
jne
mov
pushf
jo
out
or
std
or
cli
sub
mov
movsl
dec
pusha
rolb
loope
add
fdivl
xchg
pusha
mov
arpl
push
mov
into
mov
push
inc
jns
test
addr16
jp
lahf
or
fnstsw
rcll
pop
jo
pop
insl
push
mov
push
scas
sbbl
ret
xchg
gs
test
jae
cltd
xchg
jecxz
enter
int
testl
xlat
add
add
cmp
dec
leave
dec
aaa
pop
xchg
out
lcall
lea
mov
mov
leave
jno
daa
cmovne
in
mov
jbe
push
mov
test
in
fwait
or
jge
iret
cmpsb
mov
mov
mov
pop
les
sub
adc
int3
clc
notb
adc
inc
pop
cmp
repnz
outsb
jbe
mov
xlat
out
cmpsb
daa
cmp
mov
outsb
je
lock
pop
into
xchg
or
ret
sub
mov
mov
pop
pop
int
pop
pusha
dec
add
xchg
push
into
xchg
mov
je
mull
aad
ret
stos
in
frstor
push
ljmp
mov
adcl
repz
cmp
push
arpl
stc
and
push
add
xchg
xchg
pop
into
ret
xorb
scas
cmp
into
out
add
mov
test
call
fwait
aad
dec
jb
add
push
cmpsl
rcrl
aam
enter
push
das
jno
pop
clc
inc
rorl
rcll
mov
add
repnz
negl
add
push
mov
js
push
push
sar
aad
mov
adc
movsl
rorb
mov
andl
std
add
cld
push
lret
lods
jo
ja
pop
and
repz
jcxz
and
cs
lret
or
mov
test
dec
adc
mov
cmp
push
jno
mov
outsl
cmp
sarl
mov
adc
inc
mov
repnz
icebp
in
mov
jae
xchg
push
sub
sbb
orb
cli
sub
nop
adc
cmpsl
ds
dec
ret
clc
js
dec
lcall
cld
loope
adc
iret
mov
or
mov
mov
push
jae
roll
cmp
lods
in
pop
sub
movsl
call
push
mov
ror
out
pop
push
mov
ljmp
xor
sbb
lods
cld
lahf
nop
sub
or
je
aaa
xchg
and
mov
push
stos
rcrl
fs
ss
push
call
jl
fldt
xlat
fiaddl
mov
fwait
inc
rol
fdivl
xchg
jp
test
insl
cmp
pop
jne
push
inc
pop
sub
jno
enter
in
sbb
adc
lret
roll
dec
fcomps
inc
sub
xchg
jle
pcmpeqw
pusha
dec
or
inc
cmpl
pop
cs
ljmp
add
es
add
pop
stos
in
std
aas
repz
inc
in
mov
cmp
cmp
popa
insl
fistps
cmp
addl
cmc
roll
cmp
jl
mov
movsl
or
add
pop
and
xchg
cli
rorl
pop
cmpsl
xor
dec
repz
out
inc
pusha
cmpsb
cmp
aaa
sbb
mov
iret
nop
and
hlt
inc
hlt
or
xchg
pushf
xchg
and
daa
mov
mov
xchg
fs
pushf
jle
jns
dec
add
push
xchg
and
xlat
mov
mov
jb
mov
leave
mov
jae
and
pop
mov
mov
pop
and
clc
hlt
adc
xor
mov
xor
sub
pop
and
je
xchg
cmp
stos
mov
arpl
clc
in
insb
inc
cmp
push
outsl
sbb
les
into
mov
into
mov
jno
lds
out
xchg
or
ret
cmp
clc
inc
push
rcrb
scas
sahf
out
mov
xchg
scas
sahf
stc
xor
xchg
dec
pusha
jo
pop
fs
mov
movsb
ror
mov
int
call
mov
mov
add
fwait
stc
and
xchg
mov
fwait
sub
sbbb
jmp
adc
pop
sti
inc
scas
stos
jae
leave
out
sbb
les
popa
fists
mov
cld
dec
and
scas
or
jno
lods
outsl
repnz
xchg
inc
test
jbe
or
sarb
cmpb
in
ss
jl
stc
adc
mov
fisubs
rol
ja
dec
sti
std
fldcw
cmp
dec
in
mov
xlat
loopne
jne
mov
adc
cmc
fdivl
fadd
pop
mov
pop
push
or
xchg
sub
lods
and
mov
jge
xchg
out
jmp
imul
mov
hlt
pop
sarl
pushf
ds
repnz
fstpl
lock
mov
ljmp
mov
push
xchg
push
inc
xchg
sbb
aad
fsts
inc
sarb
pop
jno
adc
mov
xchg
pushf
cmp
xor
lea
insl
xchg
addr16
clc
push
cmp
sbb
aas
jae
jns
jno
xlat
pushf
pop
or
test
xchg
add
rep
cmpl
xchg
jle
xchg
fdivr
mov
push
push
add
xchg
and
cmp
lahf
mov
in
les
test
popf
mov
mov
adc
push
ror
xchg
repnz
loopne
cmc
dec
mov
sub
and
inc
lock
and
or
dec
jns
repz
push
xor
add
ret
sub
aaa
movl
insl
cli
xor
push
inc
es
mov
and
mov
es
xor
pop
jmp
lret
cmc
mov
push
jmp
sbb
pop
daa
or
mov
ja
imul
jge
ret
insl
dec
fildl
inc
test
inc
inc
xor
out
dec
into
mov
mov
mov
pop
iret
sbb
sub
mov
dec
loop
movsb
iret
pop
xorl
pushf
inc
sub
out
mov
mov
ret
dec
xor
add
sub
adc
lahf
sub
inc
andl
push
jnp
sbb
out
and
addr16
popf
or
insl
test
int
data16
cmc
repnz
imul
test
dec
xorl
mov
out
lods
mov
xchg
test
ficoml
xchg
pop
out
xor
pop
out
pop
in
outsl
scas
sbb
xor
gs
adc
xchg
and
stos
push
mov
ljmp
je
push
movsl
ljmp
adc
jnp
mov
jno
iret
xchg
pop
insl
popa
idiv
xchg
push
mov
sahf
hlt
push
sbbl
mov
mov
pop
sbb
int
test
jno
ljmp
gs
pop
inc
push
push
testl
cwtl
adc
enter
push
push
clc
add
inc
jb
dec
loopne
inc
mov
fldl
leave
test
adc
xor
add
pop
pop
push
es
fcoml
rcrl
jae
mov
lods
out
sarl
push
mov
mov
mov
adc
cmp
imul
into
or
add
dec
js
ljmp
xchg
das
addr16
push
add
mov
and
mov
xchg
rsqrtps
pmaxub
and
repnz
pushf
push
gs
or
sbb
stc
dec
or
clc
lods
shr
les
and
out
lds
and
cmp
gs
cmp
dec
jae
icebp
mov
xor
fcmove
push
dec
push
mov
dec
cmpl
adc
mov
jmp
pop
stos
cmp
int
sub
nop
dec
mov
xor
mov
push
xchg
jle
ss
mov
out
imul
cmc
ss
cmp
dec
mov
dec
daa
pop
xor
and
test
int
sub
xor
mov
sbb
mov
jecxz
aas
int
ljmp
jbe
into
loop
jno
icebp
push
sub
xor
push
adc
fwait
loopne
loope
sbbl
fwait
leave
and
inc
jge
sahf
sbb
lods
enter
lret
mov
cmpsb
dec
stc
jno
push
in
xor
or
jg
outsb
sbb
icebp
xchg
mov
out
es
adc
jb
mov
dec
inc
js
lahf
arpl
pop
call
xchg
bound
das
mov
cmpsb
sbb
jl
decb
dec
xor
mov
leave
call
int
test
mov
stos
test
mov
into
daa
icebp
ret
push
jmp
test
scas
fwait
xchg
ret
rclb
xchg
mov
stos
push
xorb
sbb
pushw
add
sbb
mov
mov
lods
loopne
jecxz
lock
cld
sbb
mov
lret
jae
inc
adc
stos
sub
pop
xor
stos
and
pop
mov
test
sbb
cwtl
scas
rol
push
cmp
mov
inc
mov
inc
iret
lods
and
pop
mov
xchg
jge
mov
pop
xor
jmp
mov
and
ss
je
mov
cld
and
mov
and
inc
xor
dec
popf
scas
or
movsb
cmp
cwtl
cmp
movsb
les
enter
and
xchg
cs
ljmp
sub
sbb
jge
imul
mov
and
cmpsl
aam
and
leave
mov
pop
cltd
popf
cmpsb
ja
sbb
push
mov
lret
imul
jle
imul
pusha
jmp
mov
out
push
pop
mov
in
inc
xchg
pop
xchg
cli
adc
ljmp
adc
mov
ljmp
in
rcrl
fdivl
and
dec
cmp
lcall
sbb
or
mov
pushl
xor
iret
nop
jae
push
stos
pop
sub
adc
ja
mov
jle
insb
dec
sti
pop
sbb
xor
js
rclb
int
sub
loop
es
or
jno
push
repnz
repnz
dec
cmp
popa
fs
pusha
mov
mov
pop
xchg
addl
fxam
leave
xchg
into
or
bound
mov
mov
ljmp
jle
xor
push
rcll
in
aam
in
mov
cmpsb
add
leave
mov
mov
je
push
mov
andl
daa
inc
movsl
mov
bound
jp
dec
ret
call
inc
lods
repnz
xchg
repnz
mov
push
jb
xlat
jle
sti
cmp
adc
mov
test
shrb
pmullw
movsb
scas
xchg
adc
or
adc
and
in
xchg
sbb
out
inc
sub
cmp
sub
push
sbb
insb
sarb
push
fidivrs
add
dec
sub
in
jae
rclb
ret
js
out
mov
inc
pop
mov
aad
popf
cs
add
pop
mov
cmc
pop
push
mov
iret
dec
cltd
sbbb
daa
push
mov
push
and
clc
adc
jmp
jle
in
lret
addr16
in
out
add
je
sub
xor
clc
pushf
nop
jge
data16
pop
mov
add
int3
int
mov
loope
ret
jle
add
into
lcall
pop
pop
aas
cmp
lahf
jge
push
xchg
daa
sub
inc
mov
out
into
adc
jne
pop
sti
lea
dec
in
and
fadds
cmp
loope
mov
inc
xchg
orb
sub
and
cmp
xchg
popa
pusha
lds
cmp
mov
movl
inc
fmull
aaa
dec
repnz
loop
pushf
test
mov
shrl
in
cmp
aad
jmp
std
jmp
cmpsb
adc
mov
sahf
dec
push
call
add
hlt
nop
sbb
xchg
adc
shll
jns
ljmp
jb
jle
stos
add
push
fwait
xchg
dec
cmp
arpl
dec
xchg
adc
sub
dec
jl
call
les
ljmp
pop
and
mov
jmp
push
iret
xchg
jmp
xor
inc
and
sbb
jge
and
push
sub
mov
and
adc
in
mov
shll
push
mov
cmp
or
and
jmp
nop
jge
and
ret
sbb
xor
ficomps
xor
fnstsw
mov
push
adcl
inc
pop
cmp
add
inc
cmc
bound
add
sub
mov
cwtl
call
sub
dec
cmp
cli
push
shl
jle
into
pop
and
add
lret
mov
andl
outsb
dec
vmovmskps
cmp
lcall
test
pop
jae
lods
add
push
push
repnz
ss
outsb
pop
pushf
sub
lock
and
arpl
cmpl
movsl
adc
pop
out
cs
mov
xchg
pop
in
push
sbb
cmp
jecxz
insb
jbe
sbb
cmp
outsb
shlb
mov
stos
das
popl
jecxz
add
in
test
test
popf
add
ds
adc
mov
xchg
imul
push
sbb
add
outsl
mov
mov
add
leave
mov
sbb
and
lahf
outsl
setno
jle
out
jl
sahf
filds
sub
jns
mov
sti
xor
xor
mov
and
lods
jns
sbb
daa
pop
call
insb
push
clc
out
call
mov
pop
dec
ret
scas
lcall
sub
repnz
mov
loopne
push
fdivs
ret
mov
faddl
outsl
inc
lods
test
int3
test
pushf
sahf
int
sbb
loopne
jae
and
push
popa
shlb
mov
test
inc
into
leave
int
filds
testb
jbe
pop
sub
or
mov
mov
cmp
jnp
loop
sahf
lret
test
xchg
ja
std
push
xor
cmp
dec
cmpsl
jg
or
aas
xor
dec
jbe
cmp
pop
lret
sbb
sub
add
mov
push
ljmp
jb
shlb
scas
mov
mov
sub
xor
and
dec
sar
test
mov
jne
frstor
lahf
xchg
fistpll
ret
rolb
adcl
int
rcr
fiaddl
ret
andl
jae
dec
or
xorl
lock
pop
push
pop
jmp
imul
movsl
aad
pop
orb
cmp
bound
scas
cmp
mov
sbb
clc
sbb
aam
or
or
push
ds
inc
jno
lds
out
mov
push
dec
push
or
cld
imul
sub
gs
bound
jo
pop
mov
aaa
out
jp
fwait
in
rclb
jo
xor
repz
jle
test
inc
lds
adc
filds
mov
dec
fisttpll
mov
pop
inc
add
or
lcall
call
lods
or
jle
adc
aam
ja
push
lods
add
adc
sbbb
aas
and
jns
mov
cs
sbb
aaa
into
in
into
imul
aam
fcmovbe
jnp
mov
hlt
push
int3
cmp
stos
adc
sahf
push
insl
add
sub
out
scas
iret
dec
leave
outsl
push
hlt
push
cmc
mov
outsl
mov
hlt
sbb
jge
adcb
jp
xor
out
daa
filds
push
push
lret
movsb
pop
jno
enter
adc
push
pop
ret
je
in
mov
add
add
xor
stc
add
movsb
and
mov
sbb
or
roll
push
push
mov
push
scas
adcl
shlb
add
addr16
aam
aam
add
ss
out
dec
rcll
data16
jnp
pop
mov
les
mov
icebp
and
jbe
mov
and
aam
cmp
sub
adc
outsl
mov
out
sbb
add
pop
aam
sub
insl
dec
cltd
sbb
mov
in
lret
add
pop
jg
outsb
in
ja
das
sbb
lock
jbe
jmp
in
dec
sub
xchg
mov
mov
mov
pushf
pop
bnd
inc
mov
xor
mov
or
push
xchg
pop
aaa
mov
jge
jo
jg
push
add
adc
mov
pop
xchg
jecxz
rorb
shlb
fwait
popf
jo
and
adc
cwtl
adc
mov
sbb
mov
dec
movsb
jbe
push
adc
leave
or
adc
test
lods
cmp
clc
and
int3
test
stc
add
shll
inc
mov
aas
jno
cmp
dec
or
mov
adc
xor
jae
testb
pop
push
mov
test
cmp
jno
lods
inc
mov
and
sahf
ficompl
loop
or
xchg
sti
cmp
daa
xchg
scas
mov
mov
imul
sbb
es
sti
aad
or
pop
loop
sub
pop
push
push
in
lcall
fxch
and
fidivrs
stos
mov
movb
xchg
jp
adc
sbbl
ret
sbb
test
cmpsb
cmc
jl
shlb
dec
js
pop
mov
lods
and
push
test
rorb
loope
out
add
push
int3
mov
mov
roll
daa
pop
mov
and
push
pop
mov
inc
out
pop
pop
mov
clc
test
shrb
sbb
push
and
xor
or
lret
sub
xchg
cmpsb
mov
mov
add
and
or
and
add
jae
lods
insl
je
hlt
sti
push
testl
pop
inc
push
inc
testb
sbb
or
sub
je
xor
push
xchg
bound
fildl
or
pop
fs
bound
push
push
and
mov
daa
mov
out
int
mov
or
fyl2xp1
ss
pop
jb
negb
cli
jp
jbe
mov
jb
stc
imul
mov
pusha
enter
jmp
cld
jae
jmp
sahf
shlb
flds
ds
call
scas
ds
push
mov
aaa
mov
int3
and
mov
std
pop
int
and
lret
out
orl
xorl
dec
repz
add
lea
add
add
mov
or
pop
jle
stc
xchg
std
xchg
sbb
sbb
or
add
insb
jge
mov
push
ret
mov
jmp
stc
jnp
adc
das
push
dec
jns
stos
div
or
rcrl
insb
mov
outsb
loopne
insl
ss
pop
lret
test
ja
add
daa
ljmp
and
shll
cmp
dec
cmp
jmp
inc
ret
sbb
fnsave
mov
loop
lds
mov
jnp
jb
pop
mov
dec
adc
xchg
xchg
xor
jp
aad
push
cs
ficoms
mov
add
loop
outsl
addb
inc
test
cmc
jmp
push
jne
inc
push
adc
jge
imul
in
and
mov
stos
pusha
sbb
and
pop
cmp
icebp
inc
adc
cmp
dec
sub
out
call
clc
adc
mov
ss
adc
and
cmp
inc
sbb
sbb
stos
loope
dec
inc
fistl
gs
xchg
adc
stos
jne
push
ffreep
ret
pop
or
jb
pop
cmp
push
sbb
cmp
and
xchg
pop
icebp
call
mov
movsb
loopne
movsb
cmc
and
mov
cmpsl
xor
mov
xlat
mov
gs
int
fildl
outsb
mov
out
loopne
ror
loopne
inc
fcmovu
adc
cmpxchg
mov
xor
out
pop
xchg
sbb
stos
mov
enter
cmp
mov
mov
out
mov
mov
lcall
or
sbbb
lock
or
dec
popa
outsl
xchg
leave
xor
int3
jmp
in
enter
jnp
dec
xor
lods
xchg
outsl
push
sub
inc
push
fcomps
pop
jg
add
mov
je
sti
ret
mov
push
ds
scas
inc
fwait
xchg
or
dec
push
aam
mov
fwait
push
jl
inc
mov
scas
cmp
mov
and
test
cmc
xor
test
fdivrl
pop
xlat
dec
movsb
daa
cmp
out
pop
rcrb
adc
mov
sbb
adc
iret
cmp
stos
mov
pop
xchg
jecxz
pop
hlt
lret
mov
jle
pop
dec
inc
je
jge
in
stos
jge
les
mov
std
ja
jb
addr16
clc
jmp
nop
das
fsubp
jge
jns
cmpsb
call
mov
lods
dec
fs
rcrl
sbb
arpl
mov
adc
out
dec
fists
mov
xchg
add
sarb
das
aas
rclb
push
jge
out
gs
mov
fwait
mov
or
lods
add
push
loopne
ret
push
inc
adc
std
ret
out
and
dec
mov
test
clc
xor
iret
or
xor
loope
cmp
scas
xchg
push
mov
jb
jbe
mov
dec
ljmp
add
or
adc
dec
aam
push
les
lock
mov
adc
xchg
scas
dec
aad
push
push
xchg
add
mov
int3
movsl
jnp
orl
pop
setge
pop
inc
sbb
jge
cmp
adc
aas
or
pop
inc
lret
sub
daa
mov
orl
sbb
dec
sub
loop
jns
push
jmp
test
push
outsb
rorb
xchg
fsubl
sahf
fldenv
or
sub
xchg
push
push
xor
mov
ljmp
pop
xor
dec
cmpb
sahf
xchg
imul
or
mov
mov
js
xchg
or
and
push
stos
jbe
cmp
cmp
sub
mov
lods
mov
shrb
lret
push
out
adc
add
insl
mov
xor
inc
mov
fdivrl
mov
add
repz
or
dec
fildll
mov
sub
ret
mov
inc
xor
add
in
stos
inc
faddl
in
cmpsb
scas
ret
cmp
outsb
sbb
aas
lods
jne
loop
outsb
shlb
mov
rolb
into
xchg
test
xchg
xchg
movsl
xor
jp
mov
lods
xchg
outsl
sub
xorl
out
push
push
scas
adc
aad
or
fbld
lahf
lea
cltd
sub
sub
xor
pop
mov
inc
dec
loop
ret
cmp
jle
push
imul
xchg
dec
mov
sbb
hlt
bound
ljmp
test
adc
inc
in
shrl
popf
jne
nop
jmp
scas
pop
jp
pusha
mov
decl
dec
xor
cmpsb
mov
adcb
icebp
sub
ss
rclb
hlt
adc
mov
outsl
ljmp
jo
shll
xchg
push
fnsave
xchg
add
add
ret
shll
pop
xchg
push
add
jmp
jecxz
mov
ljmp
icebp
jno
lock
dec
clc
cli
dec
xor
flds
test
pop
dec
mov
push
ret
cmc
xchg
xchg
cmp
jp
int
lock
pop
in
mov
pop
dec
je
sti
sub
jge
push
inc
test
decb
jle
ja
mov
xor
inc
pusha
mov
ret
or
sti
dec
push
xor
inc
nop
xlat
pop
dec
lock
add
loopne
jnp
imul
jb
and
jne
movsl
jp
cmp
clc
mov
fsubr
xor
xchg
insl
mov
xchg
fmul
push
lret
add
push
std
clc
mov
cs
imul
xchg
mov
and
add
insb
fstpl
mov
inc
lods
mov
frstor
xor
hlt
fmuls
add
pushf
scas
dec
aam
aas
cmpsl
repnz
inc
add
or
inc
loope
sbb
roll
mov
pop
xchg
lods
test
repz
xchg
cmc
dec
jbe
xchg
lods
orb
cmp
adcl
in
btr
add
insb
and
dec
fcom
mov
lea
and
xchg
mov
inc
cld
mov
mov
int
shrl
push
aad
daa
dec
xorb
mov
pusha
in
pusha
cmp
scas
leave
bound
push
xchg
in
cmp
or
pop
dec
pusha
fldenv
add
add
fists
xchg
out
xor
or
pop
aaa
add
mov
pop
jo
sub
pop
add
pop
lea
push
inc
int3
das
in
fs
pop
jbe
jp
jns
ljmp
mov
mov
add
test
ret
and
repnz
pop
int
rorl
or
cwtl
sbb
xor
adcl
mov
mov
jl
and
test
lock
enter
dec
push
add
rorl
fcmove
test
bound
mov
stos
mov
ret
test
test
cmp
sub
cmp
mov
in
jle
das
inc
or
jg
sbb
dec
inc
xor
mov
std
sub
xchg
mov
sub
je
fisttps
iret
fstp
jbe
stos
shrb
xchg
adc
pop
in
jl
sti
lods
pushf
mov
push
push
cmp
push
loop
pop
dec
push
inc
pop
idivl
xor
in
and
fs
outsb
stos
lcall
in
cmp
rcrb
cmp
push
sub
es
fcmove
cmpb
mov
inc
mov
jno
and
stos
cmp
pop
insl
dec
clc
xor
mov
jp
popf
mov
pop
mul
xlat
jae
push
mov
mov
adc
jbe
cli
out
stc
in
lret
jge
push
cmp
dec
stos
orb
jbe
mov
add
sub
ljmp
orl
mov
jg
out
push
nop
dec
mov
addl
aaa
orl
cmp
cmp
call
or
fcoms
popf
adc
testb
jmp
mov
les
xchg
aam
jle
adc
lahf
pop
lcall
jo
repz
push
lods
xor
das
cwtl
rcrl
cmpsl
jge
jmp
int3
push
das
mov
jl
lret
sub
int3
mov
push
push
inc
loop
ljmp
adc
cmpsb
jne
cmp
pop
mov
movsb
insl
push
ljmp
mov
jmp
into
out
pop
int3
xchg
pop
lcall
push
push
jmp
cmp
mov
inc
lods
xor
and
jbe
and
push
repnz
push
fiaddl
out
les
nop
fldenv
enter
mov
test
xor
xchg
aaa
mov
dec
add
mov
out
movsl
out
popf
incl
into
ja
arpl
add
mov
inc
pop
or
sub
push
outsb
adc
scas
loopne
cmp
mov
sbb
sub
stos
pop
xor
aaa
dec
dec
test
push
push
dec
dec
cmp
dec
mov
mov
lret
add
sbb
sub
mov
cmp
sub
mov
sub
cltd
sbb
cmp
test
jle
inc
lcall
mov
xchg
xchg
clc
jnp
inc
mov
xor
das
sub
dec
es
mov
pop
pop
xchg
mov
pop
test
cmp
add
lcall
ret
in
xor
push
xchg
jne
in
into
test
les
mov
aam
jne
mov
xchg
xor
jle
movsb
add
push
jmp
lcall
in
inc
push
fildl
push
ja
stos
inc
fwait
push
arpl
iret
mov
aad
mov
into
outsl
or
sbb
enter
and
stos
cmpsb
jnp
push
lret
int
aaa
mov
jbe
jbe
cld
mov
pop
cmp
xchg
mov
nop
or
dec
pop
sub
push
test
clc
xchg
adc
test
rolb
add
test
and
pop
xchg
push
dec
les
mov
xor
sbb
xchg
xor
sub
int3
fld
mov
dec
stos
sub
adc
jmp
xor
shrl
xlat
sbb
sbb
xchg
mov
adc
insl
pop
test
scas
stc
mov
or
das
push
aas
out
ss
sub
jb
and
cvtps2pi
add
jmp
mov
xchg
sub
adc
fwait
add
std
nop
inc
push
xor
xchg
test
xor
sub
pop
xchg
mov
mov
daa
fsubrs
adc
dec
cvtps2pd
mul
stos
jecxz
sahf
outsl
loope
push
xlat
in
scas
xor
xchg
xor
or
insb
or
iret
xchg
repz
dec
das
or
sbb
outsb
adc
cld
cmp
loop
pusha
xchg
cmp
das
loope
stos
hlt
mov
pop
inc
xor
fs
sti
sbb
cld
ds
jge
inc
or
jg
js
xor
adc
cs
negl
aas
js
mov
movsl
xor
test
cs
lock
jmp
pop
or
cmp
mov
xchg
mov
mov
insl
jl
xchg
push
ljmp
call
and
ljmp
jb
int3
dec
or
add
mov
int3
lea
push
fmul
pop
cmpsl
pop
xor
cmp
fisttps
pop
inc
mov
sbb
fiadds
mov
test
dec
mov
mov
cld
cmpsl
je
mov
jmp
mov
pop
in
mov
test
addr16
push
imul
mov
cmp
arpl
in
lcall
dec
push
jo
inc
pushf
xchg
in
out
mov
shlb
sbb
in
pop
cmp
pusha
fiaddl
mov
mov
push
adc
ja
xor
jb
sub
lods
fldl
loope
clc
add
pop
sub
dec
dec
fdiv
jecxz
scas
sbb
xor
insl
adc
gs
test
cld
roll
cmpsb
fstps
test
add
sub
rorb
push
jl
leave
add
daa
push
not
bound
inc
int
or
cmp
push
movsl
iret
shufps
andb
test
pop
inc
inc
inc
das
jbe
xor
test
mov
out
or
xor
add
add
mov
or
add
pop
leave
aam
ds
jbe
loop
dec
popf
and
ljmp
sarl
jmp
pop
dec
movsb
inc
movsl
fmull
inc
inc
frstor
adc
jl
fiaddl
add
and
pusha
outsl
add
sub
roll
jne
icebp
dec
cmp
xchg
lcall
lcall
cli
cmp
dec
lahf
setbe
jl
movb
and
ds
negl
dec
jbe
push
mov
xchg
in
xor
xor
mov
push
test
scas
sahf
in
and
pop
pop
lahf
xchg
adc
sbb
sub
movsl
xchg
inc
cmp
insl
ds
sahf
aam
push
dec
xor
sub
popa
xchg
pop
and
insb
jb
pop
or
mov
xlat
sbb
test
subb
inc
loopne
out
mov
jb
mul
aad
int
xchg
hlt
or
shrl
sti
cmp
xorb
push
repnz
scas
or
push
xchg
inc
cltd
lea
push
lock
dec
je
dec
jnp
dec
enter
mov
imul
add
fwait
jo
xor
dec
adc
pop
jne
or
push
add
dec
dec
push
mov
or
cmc
adc
mov
inc
and
cmp
insb
andb
ffree
mov
repz
sub
test
shrw
rol
int3
leave
cmpsl
dec
repz
in
in
stos
iret
dec
int3
pop
jl
dec
dec
push
pop
stos
loope
inc
fcompl
sti
jae
std
cmpsl
leave
call
and
cmpsl
jno
xor
mov
outsb
mov
xor
jl
nop
cmp
cmpsb
outsb
cmpsl
sbb
add
test
xchg
test
xchg
inc
mov
pop
mov
je
mov
jae
push
aam
push
pop
or
inc
pop
jne
mov
sbb
pushf
cmpsb
dec
push
mov
xchg
out
lret
jmp
push
jg
mov
loope
nop
sahf
cmp
jge
outsb
xchg
lret
fldcw
lods
adc
pop
jg
sub
mov
or
pop
mov
sbb
cltd
adc
mov
sub
cs
imul
jp
rolb
dec
std
xchg
push
inc
stos
jae
xor
xlat
jae
rclb
xchg
cmc
and
jl
fisubrs
inc
ss
add
js
enter
adc
inc
dec
xchg
je
mov
jp
inc
cmp
dec
and
sbb
xor
jmp
sub
adc
inc
daa
push
aaa
stos
inc
dec
jno
daa
sti
bound
xorb
icebp
jns
cld
sub
inc
jl
inc
adc
ljmp
je
es
iret
repz
scas
jne
leave
pusha
mov
int
je
push
mov
scas
lock
fiadds
test
cmp
sti
and
sub
lods
pop
ljmp
dec
add
mov
and
xor
cmp
movsb
fldcw
aas
imul
mov
out
xor
or
sarl
out
mov
in
add
dec
ret
js
pushw
sub
aad
add
leave
arpl
data16
or
or
dec
insb
add
repnz
pcmpeqb
jl
push
test
pop
lret
nop
stc
mov
aaa
cmp
imul
xchg
in
loope
mov
xchg
add
jnp
test
or
fldcw
out
pop
repnz
dec
out
pop
out
push
xchg
push
test
pop
jb
dec
adc
out
loopne
inc
pop
sbb
daa
fdivrl
sbb
pop
push
inc
cwtl
mov
insl
xchg
add
pop
fcompl
jnp
jb
cmp
xchg
jne
outsl
push
iret
movsl
faddp
inc
orb
push
push
jmp
pop
add
pop
insb
loopne
sub
movsb
dec
test
inc
sub
cmp
pop
xor
sbb
cmp
and
push
mov
mov
shll
stos
jbe
jp
pop
ja
movb
cmc
inc
lahf
pop
and
out
jle
movsb
nop
fnstcw
adc
sbb
addb
divb
loop
sbb
sbb
jbe
imul
lret
xor
pop
dec
mov
sub
in
mov
test
mov
dec
inc
dec
mov
cmp
enter
push
or
sti
push
lcall
leave
je
out
jne
jg
ret
pop
or
jecxz
lock
push
pop
dec
fisttps
jnp
cmp
in
fimull
imul
jmp
dec
nop
cmp
shll
lds
inc
mov
adc
cmp
ja
jp
push
pop
ljmp
repz
add
ret
push
gs
mov
sbb
sub
adc
cld
lea
out
or
int
and
adc
add
loopne
and
sub
pop
repz
sub
mov
mov
out
ss
mov
daa
faddl
jp
and
ja
and
outsb
sar
cltd
jmp
fsubl
mov
dec
enter
aad
jl
scas
sti
popa
outsb
or
cmpl
mov
or
jo
pop
sub
lds
ljmp
mov
les
or
and
std
lret
arpl
jbe
pusha
cwtl
add
adc
jbe
sbb
les
mov
push
jns
cltd
into
jge
pop
rcrl
jne
notl
push
jno
cmpb
and
ret
and
pop
dec
iret
push
lahf
mov
mov
lret
sub
or
pusha
in
push
les
adc
inc
out
test
mov
cmp
mov
fs
jmp
sbb
popa
cmp
sbb
mov
in
sub
idivl
jne
loope
jle
cmpsb
xor
das
pop
xor
clc
mov
cwtl
ret
outsl
mov
mov
mov
jl
adc
jl
lahf
aam
fldcw
jl
fisubs
xchg
clc
xorl
aaa
dec
push
icebp
xchg
mov
pop
les
jne
movsl
inc
imul
pop
push
arpl
mov
mov
adc
fnstenv
mov
and
into
mov
push
insb
mov
pusha
pop
cwtl
jae
dec
jnp
arpl
ror
pop
pop
je
pop
jecxz
or
ss
adc
addl
cltd
mov
or
in
inc
dec
jno
rolb
sarb
cmp
add
in
jns
iret
into
adc
int
dec
inc
daa
mov
jbe
shlb
iret
cmpsb
imul
clc
inc
les
jns
mov
cmpsb
xor
stc
aas
fcompl
pop
pop
dec
xor
push
mov
stc
aam
push
push
push
pop
sarb
mov
pop
pop
mov
jecxz
or
jae
sub
push
mov
daa
scas
out
ficompl
cmp
sub
or
sbb
mov
add
stos
xor
scas
jle
mov
dec
push
adc
enter
notb
into
fsts
lds
imul
push
test
jb
subl
scas
push
divl
lock
adc
inc
jg
fwait
test
out
or
dec
aaa
arpl
rolb
cmp
pop
xor
into
xchg
inc
or
jge
push
lea
adc
adc
aaa
mov
dec
xor
popa
cld
mov
mov
inc
lods
cmp
jnp
cmp
outsl
jle
or
je
test
ljmp
mov
push
xchg
lahf
mov
mov
and
mov
loope
cs
mov
shlb
iret
mov
jecxz
test
jo
add
dec
test
int3
xor
scas
iret
lahf
lds
pop
ficomps
pop
pop
daa
imul
je
dec
pop
mov
cmp
or
out
jns
jecxz
sub
arpl
cltd
xor
adcb
fists
push
jp
daa
mov
clc
aad
cld
add
hlt
out
popf
sub
cmp
in
stc
fsubrp
pop
popf
add
push
cltd
xor
sub
sbb
outsb
and
pop
sub
mov
cli
shrl
mov
outsw
jecxz
xchg
xor
push
inc
pop
xchg
in
mov
and
fistps
ja
sub
inc
pop
adc
sahf
in
cmp
pop
fcoml
mov
cli
jns
iret
das
enter
jg
cltd
loopne
inc
adc
dec
pop
iret
inc
adc
cmp
lods
inc
add
mov
stos
xor
sbbl
pop
sbb
nop
mov
les
mov
aas
test
or
mov
adc
push
jnp
outsl
xchg
mov
jg
cmp
call
mov
mov
fildll
inc
xor
icebp
icebp
repz
and
loope
sub
lea
jecxz
inc
cltd
adc
cmc
push
popa
test
rcrb
cmp
dec
rcrb
je
push
das
call
mov
sahf
push
mov
pop
pushf
xchg
inc
and
xorb
imul
dec
cli
xchg
call
mov
fs
nop
xor
jmp
lcall
loopne
inc
mov
lds
scas
daa
jp
in
nop
mov
mov
js
adc
jecxz
sub
loop
cltd
outsl
sub
jecxz
movsb
out
adc
add
sub
getsec
ljmp
adc
and
cmp
lret
loope
xor
push
fldt
push
ret
popf
push
sti
iret
and
dec
orl
and
xor
cmpsb
fidivs
xchg
jg
adc
js
inc
push
lcall
std
repz
jecxz
dec
repz
sbbl
jns
aad
or
adc
dec
jge
aad
testl
mov
and
loopne
ret
enter
imul
in
dec
outsl
inc
sbb
out
sub
out
dec
jo
fs
ljmp
mov
mov
pop
sarb
aad
cmp
addr16
jg
das
scas
jecxz
stc
pop
int
pop
mov
fldenv
or
jge
and
mov
push
cmp
mov
leave
cmp
inc
popf
push
arpl
and
or
scas
mov
cmpsb
dec
sahf
push
inc
mov
cmp
insl
das
mov
mov
inc
mov
push
xchg
cli
ljmp
dec
sahf
inc
xchg
and
jo
orb
dec
or
cmp
scas
mov
jae
lret
and
push
jecxz
xor
cs
gs
jb
push
sahf
sub
dec
push
push
xlat
xchg
pop
sbb
lretw
jns
enter
push
mov
popa
fs
mov
pop
sbb
mov
ret
cli
add
movsb
inc
loope
jb
cmc
std
les
sub
xor
repnz
stos
shrl
ss
scas
cmpl
mov
sarb
scas
fstpt
mov
push
pop
xchg
in
dec
icebp
mov
loope
test
hlt
loop
add
xor
daa
or
ja
in
or
push
popa
xor
movl
sbb
rclb
cmpsb
lret
js
out
adc
push
aas
icebp
mov
sarl
popa
orl
orl
mov
cmc
ss
or
adc
ljmp
enter
jns
mov
pop
mov
out
xchg
dec
andl
push
jb
aas
fdivr
jbe
mov
pop
xor
stos
adc
and
mov
pop
sbb
movsb
call
add
clc
lea
push
jns
pop
cwtl
adc
mov
inc
mov
loopne
lret
flds
lret
xor
add
aad
out
ja
dec
inc
cmp
fsubrl
sub
out
pop
popa
xor
inc
jbe
hlt
scas
outsb
lods
xchg
pop
xchg
fcmove
movsl
lcall
call
mov
adcl
movsb
mov
cmp
push
loopne
mov
es
dec
cwtl
pop
inc
xor
xchg
push
jns
push
sub
call
sbb
xchg
sub
mov
lods
xor
jl
mov
scas
out
sbb
push
sbb
test
dec
mov
pop
scas
or
ljmp
pushf
and
mov
and
jae
cmp
push
out
inc
pushf
daa
dec
push
lock
mov
sti
mov
scas
inc
lds
lret
xor
inc
in
adc
jecxz
jb
enter
stc
jg
loop
lock
fildl
cs
or
icebp
scas
rcrl
stos
pop
repnz
dec
push
mov
push
stos
push
pop
mov
call
mov
mov
sahf
mov
jl
scas
cmp
loopne
pop
aad
adc
pushf
into
aad
push
dec
inc
sbb
mov
lock
and
cmpsb
push
add
les
jno
xor
adc
xchg
cmp
sub
or
ror
int
push
inc
push
in
rcrb
adc
movsl
dec
xchg
xor
repnz
movsb
push
mov
dec
testb
push
inc
scas
xchg
xchg
dec
in
cmp
xchg
sbb
xor
xor
xchg
aaa
cmp
or
fcompl
outsb
mov
lret
cmp
push
dec
int3
push
push
cmc
cmp
and
inc
mov
cmp
add
fistpl
aaa
movsb
dec
ljmp
xor
or
xchg
jg
ret
out
shrb
aaa
icebp
mov
add
imul
inc
jg
cmp
push
push
mov
mov
adc
mov
jg
push
je
add
iret
dec
lods
data16
mov
push
lret
pop
addr16
push
fs
stos
jp
test
jns
arpl
scas
or
cs
xchg
xchg
aam
jo
popa
gs
call
cmp
adc
test
jae
mov
stos
rcrl
push
and
cltd
mov
push
or
and
xchg
sarb
test
sbb
cmp
lods
xor
test
call
cmp
std
push
pop
and
mov
lods
out
fdivrs
mov
int3
pop
adc
mov
and
mov
mov
leave
imul
inc
and
jae
loope
out
fldl
aaa
mov
mov
sub
mov
xchg
xorl
pop
adc
mov
int3
test
add
dec
mov
inc
outsl
xlat
dec
mov
push
loope
inc
cmp
cmp
jae
add
or
or
push
sub
fwait
cs
je
jnp
in
cwtl
popa
sbb
jb
or
test
mov
push
xchg
xchg
sub
mov
push
nop
mov
sahf
iret
adc
mov
cmp
jbe
cld
pop
bound
rcll
arpl
mov
pop
lock
mov
cmp
ret
jmp
ljmp
xor
push
add
push
push
adc
gs
scas
mov
outsb
adc
cmp
adc
jnp
xchg
and
js
int3
fldenv
cmp
push
mov
cmp
dec
bound
sbb
xchg
mov
repnz
imul
inc
dec
push
dec
cld
sub
inc
insl
dec
adc
push
sbb
push
cmp
daa
enter
test
pop
mov
jnp
cmp
loopne
xchg
push
lret
sahf
fisubrl
lea
jne
push
cs
lret
daa
ret
clc
movsb
mov
dec
inc
sti
arpl
cmpb
add
push
jo
mov
xchg
push
adcb
data16
jne
inc
push
adc
les
xchg
sahf
shlb
stos
sbb
xor
stos
pop
push
mov
fs
js
outsl
icebp
push
cmpsl
mov
ja
in
in
and
sbb
dec
leave
outsb
pop
std
aad
xchg
scas
mov
adc
sbb
movsl
mov
push
push
jne
mov
mov
jge
sub
ja
xor
and
ss
push
adc
sbb
add
adc
mov
cmp
inc
scas
mov
sub
sahf
mov
mov
pop
xchg
ss
bound
test
xor
xor
int3
into
mov
adc
fwait
mov
repz
push
mov
hlt
insl
mov
xor
sahf
stos
sub
test
dec
je
pop
add
lret
hlt
js
cld
clc
sti
or
inc
call
imul
pop
lret
pop
or
push
pop
ljmp
mov
outsb
sbb
cmp
cmp
loopne
cmpsb
sahf
inc
cmp
es
add
lcall
adc
repz
adc
add
inc
sub
iret
adc
imul
inc
inc
scas
into
mov
sub
sub
dec
test
mov
mov
mov
and
aaa
lcall
cli
mov
rcrl
cli
rol
jl
cld
xchg
jmp
cwtl
lret
mov
inc
xchg
jne
lahf
aam
test
das
dec
jae
and
into
pop
andb
jbe
mulb
jb
cmc
cwtl
pusha
inc
fistps
xchg
insb
pop
cli
orl
outsb
mov
mov
cmpsb
push
lods
loopne
xchg
mov
daa
loop
or
iret
hlt
and
adc
out
cmpsb
dec
stos
sbb
out
test
cmpb
mov
dec
insl
push
and
mov
arpl
inc
jns
mov
pusha
mov
fldenv
xchg
lock
sub
sub
in
pop
jmp
or
sbb
push
and
cltd
js
inc
addl
adc
dec
mov
mov
stc
fisubs
cwtl
pop
insb
xchg
les
pop
fstps
push
xor
lods
mov
dec
shlb
dec
pop
xchg
dec
fcoms
xchg
into
lret
mov
jb
popa
clc
mov
jbe
in
imul
fdivr
pop
xchg
and
in
xchg
mov
jnp
les
dec
sub
cmp
call
insb
stos
jno
stos
cmpsl
and
lret
insl
loopne
movsl
and
leave
pop
sti
or
sahf
xor
dec
clc
cmpsl
out
fstl
andb
sub
mov
lea
inc
in
cmpsl
pop
mov
imul
in
psubusb
mov
xor
repnz
into
scas
mov
jb
sub
dec
ljmp
push
sub
pop
push
sub
ljmp
dec
jnp
leave
repnz
jnp
test
ljmp
aas
lar
repz
sub
jae
sbb
or
mov
mov
dec
stc
sbb
xchg
shll
adc
mov
push
pop
cld
lods
inc
cmp
enter
loop
mov
and
loope
lret
sub
out
push
iret
jge
pop
or
pop
jmp
int
jecxz
or
jnp
and
inc
rclb
adc
push
sbb
lcall
sub
sbb
jb
daa
and
xor
sti
lret
lcall
test
sub
cmp
in
enter
add
loopne
cmp
xor
out
cmp
lret
out
adc
jns
lods
and
clc
fldl
adc
ficomps
jg
nop
cmpsl
icebp
in
ret
ret
mov
mov
inc
test
add
jg
out
ret
xor
pusha
push
mov
add
mov
pop
jno
je
stos
in
mov
pop
cmp
dec
jp
stc
popa
push
test
xor
test
scas
jge
inc
test
ss
or
push
add
push
adc
dec
pop
sub
mov
fildll
in
adc
bound
add
dec
lahf
pop
cmp
sub
mov
divl
sub
pop
lret
xchg
sub
jae
pop
pop
sbb
and
jae
arpl
push
xchg
adc
xchg
sub
addr16
loop
dec
test
jmp
scas
mul
mov
pop
pop
dec
xchg
cmpsl
dec
xor
push
jl
loop
push
xor
add
sub
frstor
repz
lods
lds
subb
incb
add
xchg
dec
adc
mov
pop
jg
push
sahf
or
fsts
bound
lea
dec
add
adc
cmpsb
mov
scas
pop
ucomiss
mov
test
out
subl
shrb
jae
and
clc
clc
jno
adc
pusha
dec
scas
sti
add
outsl
jo
popa
clc
push
cmp
and
lock
cmc
push
stc
jge
inc
fsts
jle
pop
hlt
mov
mov
xlat
xchg
and
mov
xorb
daa
dec
pushf
addl
insl
jbe
sub
xor
int3
mov
rolb
sub
enter
mov
mov
fdivrs
pushf
loopne
sti
pop
scas
push
adc
dec
mov
cmp
adc
xchg
lds
movsl
scas
push
xor
sahf
stos
es
repnz
xchg
and
dec
dec
or
mov
dec
push
cmpsl
in
and
je
in
enter
push
lahf
test
nop
and
into
adc
neg
sbb
fs
mov
push
sbb
mov
lahf
fwait
mov
rcl
xor
nop
shr
dec
and
lret
jge
jae
scas
sbb
into
jg
clc
es
out
lods
pop
mov
shrl
xchg
mov
sub
push
rcl
out
test
mov
dec
xchg
jno
inc
and
inc
sarl
or
fcmove
enter
std
mov
into
add
and
es
rclb
push
out
or
add
hlt
sub
xchg
mov
cmp
sub
adcl
lods
xor
xchg
sub
mov
repz
popl
jae
xchg
sbb
repnz
mov
or
jg
or
adc
push
mov
pop
inc
repnz
lea
jbe
rorb
jp
pop
jmp
jecxz
mov
inc
test
repnz
lret
xchg
aad
dec
orb
dec
mov
movsl
xchg
mov
push
pusha
xor
andl
in
cmpl
sbb
scas
jb
notl
inc
out
and
in
jae
and
repz
xor
mov
mov
ss
cmc
fwait
or
and
out
or
out
jae
mov
jno
mov
lods
fcoms
adc
mov
mov
repnz
sbb
push
xor
mov
sbb
xchg
in
scas
add
or
sub
aad
pop
aad
inc
aad
sbb
idivb
push
mov
and
and
sbb
mov
lds
loope
lea
jns
loop
push
jo
dec
sbb
sahf
dec
pop
rclb
and
movsb
cli
das
das
iret
movsl
and
mov
movsb
jge
push
cmpsl
rclb
push
sub
fnstsw
fstpl
adc
cmp
push
test
lods
add
and
bound
mov
vcvtsd2si
ja
mov
inc
sub
xchg
push
and
xor
popa
cli
push
jb
sub
inc
clc
xor
pusha
or
jl
jae
ret
jbe
outsl
dec
xor
push
ss
add
jle
jo
mov
repz
add
sub
mov
daa
inc
jno
bound
or
imul
sahf
test
lret
jp
out
push
dec
bound
mov
cmp
dec
and
enter
rcrl
stos
dec
and
in
das
rclb
mov
pop
rcrl
in
mov
stos
rorl
adc
test
or
adc
or
out
inc
stos
orl
addr16
or
repz
jl
jmp
inc
push
ret
aas
fstpl
mov
mov
xor
divl
es
dec
cmp
stos
xchg
int
lcall
mov
cli
sahf
cmp
pop
sbb
daa
divl
lahf
cmp
inc
mov
cwtl
pop
mov
les
mov
sbb
dec
or
or
outsb
dec
sbb
les
ret
jle
cmpl
ret
shl
das
or
push
push
pop
push
cmpsl
insl
mov
jecxz
incl
fs
rolb
dec
and
lods
das
repnz
sarl
mov
addr16
inc
addr16
data16
lods
mov
lret
call
and
cmpsl
insb
iret
push
push
push
iret
arpl
dec
xor
push
cs
mov
push
mov
cmpsl
sbb
daa
mov
loope
ret
jmp
pop
xor
js
inc
sub
jge
pop
sbb
jge
mov
push
fs
push
stc
mov
es
shll
lods
adc
dec
mov
cwtl
mov
nop
into
or
xchg
out
scas
iret
nop
cmpsl
mov
jmp
and
mov
inc
scas
imul
rcrl
mov
cmp
add
jbe
mov
add
dec
cltd
les
adc
push
jno
aas
ljmp
std
push
pop
xor
test
pop
data16
stos
cld
cli
fidivrl
mov
in
sahf
cli
xchg
push
subl
and
xchg
mov
lock
xchg
enter
mov
pop
aaa
int3
mov
jb
jmp
jp
pop
jns,pt
mov
mov
aam
jae
xor
lcall
fldenv
dec
mov
mov
lods
test
mov
cltd
mov
sub
dec
bound
enter
add
pop
sub
and
or
fnstenv
inc
pop
jae
sysretw
xchg
fcmovne
fsubr
and
push
ljmp
sub
sahf
push
push
lret
loop
mov
mov
mov
xor
and
decl
fidivs
jne
in
jg
xchg
sbb
lahf
fadds
cmpsb
cltd
and
in
jo
sbb
jg
pop
jp
bound
fwait
data16
push
cmp
cli
data16
aam
popa
pop
ja
sarl
xor
inc
mov
leave
mov
je
int3
and
jge
out
push
and
push
mul
fcmove
ud0
inc
cmpsb
lret
in
sbb
movsl
cli
and
js
mov
imulb
inc
fcompl
push
mov
icebp
dec
or
out
add
jl
mov
lret
lcall
outsb
aam
hlt
out
bound
and
addr16
call
dec
fwait
insl
loop
lock
sbb
push
adc
cmp
lds
aas
out
out
sbb
inc
mov
xchg
arpl
lret
jae
popf
into
dec
mov
inc
xchg
mov
mov
sbb
xor
stos
lds
pushf
push
scas
fdivr
push
pop
add
das
cmp
fdivrs
mov
repz
int
movsl
repz
testl
jo
push
test
es
xor
out
int3
lret
insb
out
mov
lahf
pop
jb
pop
or
push
jl
dec
cmp
test
ljmp
leave
or
loopne
imul
lret
dec
dec
fists
out
mov
pop
loope
and
or
shl
cmp
push
das
loop
inc
pop
push
ret
push
stc
shlb
insl
xchg
add
mov
push
push
dec
outsb
and
inc
popa
or
lea
aam
mov
pop
or
mov
xchg
push
fwait
cmp
adc
jns
test
push
xor
push
xchg
sub
or
je
ret
xor
sbb
insl
ja
cmpsl
bound
cmp
jne
fidivrl
push
pop
out
add
push
push
mov
mov
add
push
jnp
jo
mov
insb
and
mov
cmp
sub
mov
or
fs
mov
sub
push
push
and
std
and
shlb
outsb
jmp
aas
push
mov
pusha
lea
out
loop
and
repz
jbe
sub
jo
fiadds
lcall
popa
outsb
jecxz
sub
mov
cmp
cmc
scas
lds
push
cmp
mov
bnd
or
ljmp
mov
rolb
into
push
outsb
je
outsb
or
push
dec
fimull
adc
aaa
aas
inc
xor
inc
xor
adc
outsl
jmp
jnp
out
sbb
fwait
out
negl
out
in
xchg
mov
sbb
pxor
lods
adc
out
mov
shr
xor
dec
mov
push
test
pushf
and
addb
lahf
xchg
pop
fdiv
push
clc
test
stc
in
and
lcall
mov
mov
or
lods
les
stos
sub
xlat
mov
into
scas
lret
jmp
call
mov
or
popf
mov
push
test
xchg
jb
jbe
int3
inc
xchg
insl
lea
pop
sub
sbb
insl
popf
popf
pop
dec
out
popa
inc
cmp
scas
popf
repz
aad
fstps
hlt
popa
mov
jnp
inc
inc
and
jae
mov
mov
mov
icebp
add
fwait
adcl
dec
sub
and
insl
sbb
xchg
fs
mov
out
push
mov
dec
push
xor
lahf
or
add
cwtl
pop
xchg
leave
fcmovnu
mov
pop
push
sti
jp
xor
cmp
mov
or
jb
or
popa
jbe
imul
rcl
add
xorb
mov
jle
mov
xchg
inc
sub
je
xor
push
mov
in
adc
push
cld
sti
add
sub
lds
and
out
loopne
mov
shrl
or
int
test
fwait
pushf
mov
inc
je
fimuls
fstpt
insb
shl
mov
adc
mov
push
pop
ja
out
pop
pop
mov
arpl
jmp
sbb
or
fstps
or
addr16
dec
jg
loope
mov
and
inc
mov
leave
dec
pop
pop
dec
sbb
xchg
ljmp
push
cmp
dec
mov
outsb
pop
loop
adc
ss
test
mov
pushf
dec
jmp
xlat
and
cmpb
sbb
pop
adc
sbb
and
adcb
xchg
dec
sbb
mov
int
sub
pushf
clc
adc
je
incb
pop
add
aaa
test
pop
data16
andl
push
and
dec
les
xor
out
aaa
xchg
lahf
in
outsb
rclb
xor
jns
push
scas
in
xchg
or
mov
dec
repnz
add
pop
inc
std
jns
sub
insl
aas
pop
pop
sbb
dec
lock
add
dec
mov
cmpsl
imul
idivl
mov
pop
or
push
scas
lock
inc
xchg
fidivs
xor
pop
pop
inc
inc
dec
dec
nop
mov
dec
cmpsl
outsl
xor
fisubs
faddp
lret
pop
xchg
std
fmull
xchg
cwtl
test
mov
mov
mov
mov
imul
popf
inc
daa
loopne
mov
cwtl
adc
hlt
popf
imul
push
repz
ficomps
dec
jp
xchg
outsl
fadd
sub
mov
add
mov
and
icebp
clc
and
push
mov
nop
test
mov
leave
mov
and
movsl
add
int
push
cltd
ret
call
roll
mov
add
lret
loopne
push
roll
cmp
aam
loopne
xchg
jbe
js
jnp,pn
pop
pusha
inc
and
sbb
mov
arpl
xor
add
and
icebp
xchg
xor
and
adc
xchg
jl
nop
js
dec
add
arpl
inc
das
xor
push
mov
xor
sbb
setge
lcall
movsb
aam
stc
je
ja
out
jecxz
xchg
rcrl
mov
rorb
add
dec
cmpb
into
and
mov
das
test
xchg
stos
jg
push
and
xchg
movsb
sarb
add
or
cltd
push
les
imul
push
pusha
inc
pop
dec
ret
mov
jae
movsbl
xchg
cwtl
mov
push
pop
out
movsl
test
xchg
das
xchg
and
mov
xchg
scas
in
cli
or
push
xchg
dec
xchg
test
rcr
pushf
outsb
xchg
jmp
pop
or
pop
out
in
lods
or
fwait
xor
inc
rcrb
mov
int3
or
fistpl
sub
data16
mov
fdiv
sbb
lods
daa
push
in
daa
pop
mov
repnz
cmp
loop
dec
cwtl
xor
and
fsubrs
mov
cmp
lahf
pop
xchg
hlt
shufps
imul
xchg
push
mov
outsl
sub
cli
sahf
leave
pop
jns
and
mov
fsub
push
sub
adc
and
xchg
dec
sbb
lea
push
cli
sub
mov
jns
rclb
mov
sub
add
aam
push
sahf
out
test
pop
jmp
sub
stc
aas
andl
fmuls
mov
xor
cmp
adc
jae
clc
mov
inc
or
xor
mov
repnz
inc
jecxz
hlt
add
cli
xchg
mov
mov
gs
call
hlt
lods
sub
loopne
adc
repz
inc
data16
icebp
add
stos
out
js
dec
add
pop
stc
and
sahf
mov
cmc
mul
adc
mov
sub
jmp
ja
cmp
jb
cmp
pop
pop
movsl
rcll
js
mov
mov
sbb
mov
stos
push
jbe
pop
jb
das
lods
leave
outsb
test
fs
cs
in
push
shlb
movsb
pop
pop
pop
xchg
repnz
dec
out
push
fsts
inc
add
push
xor
sub
mov
or
rorb
adc
lock
rorl
sub
or
sub
std
incl
xchg
in
mov
clc
dec
mov
out
leave
adcl
movzwl
cld
sti
test
in
outsb
jg
inc
jbe
sub
push
loopne
daa
mov
and
cli
repz
jp
add
aas
inc
sar
push
jne
movl
mov
xor
dec
push
mov
lods
xchg
jae
mov
fldenv
add
mov
popf
ret
mov
pop
mov
out
clc
dec
and
xchg
in
add
pop
ja
fs
push
dec
cmp
leave
jg
test
std
fwait
cli
mov
cmpsb
jns
daa
insl
or
fisubl
aam
lretw
mov
ficomps
loop
and
adc
ficoms
fstpt
aad
popa
mov
mov
xlat
dec
popf
dec
jecxz
push
popf
lods
cmp
aas
jnp
sbb
xor
outsb
pop
or
xchg
daa
shrb
imul
dec
mov
xlat
aaa
add
inc
or
shlb
lea
add
jno
inc
push
rorb
fcmovb
aam
stc
cwtl
xor
fdivrp
inc
mov
ja
pop
call
imul
or
iret
xchg
movsb
pop
les
iret
sti
sti
cli
fstpt
outsb
or
pop
pop
mov
daa
out
orb
add
mov
idivl
push
in
outsl
adc
andl
cmp
in
push
dec
jmp
addb
aam
fnsave
idivb
mov
and
push
push
pop
push
jecxz
pushl
pop
xor
jle
test
sbb
jecxz
fadd
lods
repz
xchg
xchg
mov
push
push
add
mov
shlb
or
jbe
negb
cmc
pop
push
pushf
pop
in
popa
shl
adc
mov
clc
mov
dec
cmp
xor
push
add
and
cmc
mov
sub
pop
dec
fstl
inc
aad
dec
cmpb
xor
add
fldl
int
mov
pop
or
jns
cmp
rcrb
scas
mov
mov
sub
mov
mov
imul
aaa
sbb
dec
icebp
and
ja
pusha
cwtl
sbb
iret
add
dec
pop
lea
out
movb
jl
jb
outsl
filds
addl
mov
adcl
add
aam
int3
pop
xor
xchg
pop
jecxz
pop
imul
mov
fs
ret
ja
cmpsb
adc
lods
push
imul
popa
cmp
mov
jle
pop
jmp
ja
xor
mov
cmp
xor
xchg
and
je
leave
lret
pop
fwait
insl
insl
fisubrs
jae
cmp
mov
mov
sahf
jae
loopne
dec
popl
test
or
cmp
cs
loope
fidivrl
mov
pop
add
fistl
pop
add
mov
addr16
insb
stc
es
ljmp
or
mov
sahf
std
shl
xor
mov
orb
and
daa
push
pushf
push
iret
fidivrs
addr16
ficoms
adc
neg
das
dec
clc
adc
inc
aaa
shll
repnz
jp
out
stos
jl
dec
adc
in
lcall
sbb
add
movsb
adc
sub
pop
add
dec
push
fcmovb
outsl
mov
dec
mov
fildl
cmp
mov
pop
in
mov
inc
dec
cmp
imul
cmp
stos
push
mov
pop
pop
sub
fwait
loop
icebp
mov
inc
sti
sbb
add
mov
sub
and
stos
dec
aaa
fadds
sarb
mov
cwtl
mov
cmp
stos
pop
insl
dec
add
pop
testl
ss
adc
inc
adc
mov
lahf
shrb
mov
pusha
pop
cld
inc
insl
jle
nop
fldenv
movsl
cmp
sahf
in
js
xchg
in
fcomps
jp
dec
ret
lods
mov
mov
adcl
dec
sahf
xchg
and
dec
repnz
or
mov
xchg
jge
in
inc
mov
lahf
imul
jg
mov
pop
shrl
scas
jg
add
jns
mov
sbb
je
dec
lea
jmp
ds
repnz
mov
les
mov
btc
xor
inc
inc
xchg
mov
pop
cmp
int
iret
outsl
add
dec
sti
mov
jno
jp
push
sahf
cld
mov
inc
shl
xor
jl
cmp
sub
sti
mov
or
jmp
int3
inc
push
mov
fld1
out
stos
jecxz
push
repnz
jmp
in
mov
in
cld
loopne
fistpll
sub
add
fidivrs
and
pop
xchg
cmp
loope
inc
cwtl
add
lcall
dec
nop
mov
jne
sbb
pop
push
pop
cltd
lahf
lahf
inc
mov
push
in
test
mov
jns
data16
xchg
mov
mov
xor
cmp
dec
test
mov
jmpw
mov
mov
arpl
cltd
sub
cmpsl
mov
push
cmp
ret
hlt
mov
jmp
mov
sti
cmp
leave
dec
xor
xchg
xchg
pop
add
js
cmpsb
xor
push
ljmp
fs
aad
jbe
inc
cmp
sub
mov
pushf
aas
xchg
popa
pop
cs
ss
jae
int
in
adc
addb
ret
int3
inc
enter
push
mov
xor
inc
mov
loop
psubusb
mov
outsb
mov
ljmp
fnstenv
xchg
sbb
aam
sbb
pop
jmp
jg
je
push
jbe
inc
sbb
jp
xor
imul
outsl
notl
sbb
mov
ds
leave
cmp
pop
push
fdivrs
cltd
pop
add
std
enter
mov
inc
adc
pop
pop
nop
shrl
shrb
cmp
sbb
push
in
iret
add
cmc
adc
mov
loop
lcall
jns
or
dec
push
cmpb
les
xchg
sub
xor
add
fistps
orb
xor
popf
pop
int
sub
xchg
sbb
add
out
mov
sub
or
mov
out
in
xlat
sbb
movsl
pop
or
push
int
mov
loop
mov
inc
cmp
add
fs
int3
xchg
cmp
pop
jg
ljmp
cmp
and
mov
jmp
or
test
addr16
es
pop
dec
outsb
jae
push
mov
jle
gs
xchg
aam
lcall
push
inc
push
test
sbb
dec
loopne
inc
xchg
stos
push
dec
jg
jmp
subb
leave
leave
xchg
sbb
in
and
and
imul
negb
cmp
sti
enter
lods
loop
outsb
sbb
insl
jecxz
push
into
jmp
or
out
in
leave
rolb
fcmovb
rol
lds
sbb
jb
ret
out
inc
jl
jnp
dec
sar
mov
ficomps
stos
fidivrs
push
pop
pop
push
test
bound
cmp
imul
jne
jp
add
aas
sub
ljmp
and
adc
push
addr16
out
xchg
repnz
pop
xchg
arpl
inc
push
adc
sbb
stc
imul
in
in
adc
pop
pop
dec
out
pop
mov
xchg
sarl
adc
mov
ja
int3
dec
stos
loop
test
push
dec
ja
push
daa
sarl
xchg
cmp
pop
or
mov
cs
inc
ljmp
add
loopne
adc
adc
mov
in
movsb
inc
mov
mov
jno
movsb
inc
sbb
dec
or
push
shll
jns
mov
sbb
xchg
lret
sbb
jl
mov
jl
sbb
jns
jp
ret
mov
add
add
mov
cmc
outsb
cmpsl
cmp
add
popf
pop
jmp
or
xchg
js
push
and
mov
sbb
pop
imul
out
outsl
sub
pcmpgtw
mov
xor
inc
enter
and
jmp
push
ret
pushf
sub
addr16
push
pop
xor
dec
cltd
ljmp
dec
xchg
xchg
cmp
lcall
jne
dec
loopne
dec
adc
dec
leave
xor
inc
mov
inc
aas
cli
repz
ret
xchg
push
sub
push
mov
subb
mov
into
scas
fld1
xor
jl
nop
outsb
scas
divl
xchg
ror
xlat
paddsb
pop
adc
jmp
stc
sub
adc
scas
cs
int
inc
dec
xchg
mov
pop
or
push
inc
mov
xchg
inc
jl
das
in
jae
sbb
ljmp
xor
js
daa
stos
les
ljmp
adc
cmp
out
dec
or
inc
push
jmp
mov
cmpsb
mov
cmp
ljmp
dec
dec
movsl
sbb
sbb
scas
shll
call
fdivr
jb
mov
inc
jecxz
outsl
inc
xchg
add
call
xor
clc
jge
mov
std
js
mov
cmc
stos
sti
insb
ficoms
ret
mov
push
sub
test
sbb
push
cmpsb
add
mov
test
inc
cmp
cmc
das
pop
inc
pop
mov
iret
jp
xor
pop
jo
mov
in
int3
lahf
aam
fs
xchg
mov
jae
mov
jecxz
sti
xchg
popa
dec
movsl
jmp
xchg
int
pop
push
jae
lret
xchg
inc
stos
jne
jp
jo
aaa
inc
mov
xor
or
imul
sbb
cmpsb
std
jo
hlt
mov
in
lock
mov
dec
pop
jp
mov
dec
pop
stos
adc
out
aam
xchg
pusha
fwait
xor
rclb
add
jns
mov
aaa
sub
cs
mov
or
das
push
fiadds
or
push
repnz
movsl
jp
outsl
ret
pushf
sti
xchg
mov
fdivrl
ljmp
pop
push
jecxz
jecxz
lock
xchg
cmc
add
inc
int3
loopne
push
or
push
jmp
or
repnz
xchg
test
cltd
mov
negb
dec
push
fcoml
nop
mov
test
mov
mov
std
aad
addr16
in
jnp
add
jecxz
insb
cmp
into
je
push
pop
movsl
xchg
iret
in
test
test
dec
adc
mov
mov
dec
mov
jge
sarb
cli
outsl
popf
lret
loop,pt
adc
popf
andl
dec
jne
je
mov
and
push
mov
jg
bound
stc
jmp
or
cmpsb
popf
repnz
je
je
add
out
xchg
rcll
call
and
in
insb
mov
dec
mov
push
cmp
mov
out
scas
inc
mov
xchg
sub
rcr
and
out
adc
mov
ret
xor
sbb
and
mov
movsl
mov
pop
or
sar
xchg
call
popa
je
mov
jae
and
cs
sbb
add
test
ret
xchg
mov
xchg
das
mov
mov
jne
scas
dec
pop
bound
das
es
pop
pop
fistpl
lock
sbb
mov
mov
mov
xchg
adc
push
jl
les
test
pop
inc
or
fs
jg
mov
xchg
lahf
cmpsl
mov
sbb
aam
sarl
mov
lahf
pop
out
daa
int
sbb
repz
xor
xor
add
fistps
or
and
jo
push
xlat
jbe
stos
mov
rcl
mov
sbb
addr16
xchg
add
imul
shrl
addr16
and
notl
out
pop
loop
sbb
pop
fistpll
stos
jae
mov
mov
ret
inc
inc
jne
mov
and
jle
inc
test
pop
lret
dec
nop
pushf
call
pop
cli
fisttps
test
outsb
sbb
pop
ret
sub
mov
push
nop
cmc
jp
roll
push
imul
das
xchg
fcmovnbe
mov
xchg
mov
jp
bound
das
mov
imull
adc
movq
fs
neg
pop
mov
mov
out
jl
pusha
and
pop
pusha
arpl
lahf
xchg
push
jp
cmp
xorb
pop
lahf
xchg
std
push
divb
inc
insb
sub
jns
cmc
fnsave
bound
pushf
mov
dec
jp
daa
push
pop
mov
fcoms
mov
mov
jecxz
pop
insl
adc
jg
sub
pusha
imul
cld
xchg
aaa
icebp
ljmp
pop
xchg
cmp
testb
hlt
pusha
sub
inc
sahf
into
mov
scas
pushf
fs
in
pop
ret
jl
cs
pop
mov
and
cltd
mov
or
mov
in
lods
inc
pop
jp
mov
inc
adcl
and
pop
nop
ficoml
and
scas
push
insl
cmp
repz
es
adc
inc
xchg
adc
out
pop
cmp
out
pop
ficoml
mov
push
ds
sub
mov
xchg
lahf
cltd
or
aam
lds
mov
test
add
fucomip
cmpb
adc
xchg
mov
test
or
movsl
mov
pop
xchg
add
bound
lock
push
cmp
or
dec
mov
add
or
data16
xor
or
mov
pop
sub
jno
cmpsl
xor
cltd
aad
mov
mov
jle
test
or
addl
push
in
push
inc
out
push
push
sub
jmpw
or
mov
cs
imul
cmpsb
jle
imul
mov
jl
inc
negb
sub
mov
mov
sub
xchg
popf
aas
in
cli
fdivrs
and
bound
jb
les
popa
push
popa
xor
jmp
cmp
je
mov
jnp
fdivp
xor
cmc
aaa
pop
sahf
inc
sbb
aas
popa
movsb
add
js
push
rorl
mov
pop
pop
addr16
sarb
scas
xchg
inc
int3
test
andb
push
add
sub
mov
mov
pop
fadds
push
clc
and
repz
jg
ficoml
xchg
and
mov
test
dec
rcrb
cmp
jle
inc
inc
shrl
sub
notl
and
loope
mov
push
mov
jno
xchg
push
out
icebp
sub
cs
bound
les
and
inc
ljmp
jle
xor
push
lret
pop
int
hlt
hlt
xorl
pop
imul
push
push
xor
push
outsb
enter
rcrl
lods
add
enter
aaa
enter
lret
outsb
test
dec
jmp
inc
mov
jns
and
addr16
cmp
sbb
mov
and
fwait
stc
inc
mov
lea
les
addr16
stos
jnp
rorl
sub
and
pop
ss
inc
pop
cmp
jb
inc
add
ret
add
xchg
std
ffree
cli
mov
sbbb
iret
adc
test
and
ret
jno
test
aaa
push
sbb
adc
in
ljmp
flds
shll
rolb
shufps
dec
mov
ja
jp
je
push
sbb
shl
xor
jae
sub
in
shl
adc
mov
addr16
inc
add
dec
and
std
popf
adc
mov
jge
lock
xchg
in
jge
xor
pop
lret
push
mov
in
arpl
in
repz
decb
cltd
lret
fisttps
ja
dec
std
insl
aad
stos
sbb
mov
adc
imul
mov
jbe,pn
movsb
cmp
mov
jbe
push
jecxz
xor
sub
fidivrl
xchg
jp
out
incb
test
stos
cmc
inc
xor
fsubrp
cmp
fcoml
push
mov
or
push
imul
mov
sbb
fs
gs
ljmp
xlat
pop
int3
cmpsl
adc
dec
xchg
dec
pusha
iret
or
shlb
and
add
pop
imul
repz
add
repz
ret
xlat
xchg
cmp
mov
std
xchg
and
lea
out
and
sbb
dec
stos
gs
nop
lcall
sbb
jmp
mov
add
mov
sub
push
xor
in
insl
daa
jl
mov
jae
pop
adc
mov
mov
jg
leave
fmull
xchg
sbb
or
xchg
iret
shrl
addr16
fwait
ret
add
jne
inc
mov
or
add
mov
jnp
and
dec
popa
stc
lea
sbbb
pop
or
lcall
fistl
sahf
push
lods
std
xchg
das
fs
loopne
movb
js
loope
sbb
inc
sbb
jl
dec
insl
das
sub
scas
aam
jae
cwtl
and
lret
dec
mov
clc
sub
dec
clc
mov
call
push
iret
ret
inc
ret
push
sub
fdivp
push
sub
push
ds
test
mov
fcomip
xchg
pop
jae
xchg
push
and
inc
inc
xor
fiaddl
pop
push
fisubs
sbb
lcall
outsb
les
call
call
ljmp
sbb
or
lret
mov
dec
mov
into
scas
aam
int
xor
pop
jg
ret
cmp
dec
mov
stc
sub
xchg
xor
out
dec
jb
pop
adc
daa
xor
inc
xor
dec
out
pushf
pop
xchg
lock
repnz
dec
mov
mov
xchg
and
cltd
add
divl
mov
jo
dec
cmp
pop
ficompl
mov
loopne
dec
les
loopne
mov
sbb
std
mov
icebp
mov
mov
test
or
inc
fcomp
cmp
subb
jge
xchg
aam
push
lcall
mov
push
ret
vpaddsb
mov
iret
cli
adc
pop
test
testl
cmpb
sub
clc
push
shrb
je
test
outsl
dec
imul
push
test
stos
ds
stc
cmp
or
mov
mov
inc
jns
mov
sub
les
rorb
out
sub
add
js
sub
test
push
out
and
cmp
cmpb
insl
ds
inc
mov
arpl
inc
stos
mov
xchg
mov
pusha
out
in
dec
push
jmp
sub
popa
lds
and
or
mov
ficoml
enter
or
xchg
cmp
mov
sbb
aad
cwtl
out
lods
push
xor
dec
push
inc
sti
sbb
jo
mov
inc
sahf
pop
cltd
add
mov
or
sbb
pop
push
jmp
or
insl
push
xlat
loopne
test
out
subl
cli
mov
test
outsb
out
roll
jmp
in
mov
rcl
cmp
mov
mov
shlb
movsl
out
gs
outsl
or
je
sub
test
xchg
out
shlb
fs
dec
in
jl
ficoms
mov
mov
andb
movsl
sarl
adc
mov
out
add
mov
insl
idivl
inc
cmp
push
shrb
push
cmpb
dec
sub
add
jle
push
xchg
push
xor
ret
lods
lahf
stos
repnz
mov
xchg
add
aas
push
cmp
xor
bound
test
shlb
push
daa
xor
mov
mov
popa
int3
cmp
pushl
mov
sub
jne
out
jg
popf
mov
decb
mov
push
adc
xchg
dec
xchg
imul
add
push
xor
gs
das
push
sub
and
js
or
test
lret
in
mov
das
jo
insl
cmp
std
push
pushf
or
loope
xor
mov
int3
pushl
pushf
in
movsb
loope
xor
and
pop
outsl
push
dec
addb
nop
cmp
loopne
push
das
sbb
lods
out
add
inc
ljmp
fnstenv
sarl
and
jmp
cmp
dec
shll
push
jne
dec
sar
mov
out
dec
add
gs
ja
loope
xor
scas
and
mov
ss
cli
sbb
stc
jp
aaa
pusha
pop
es
aam
jl
jae
pushf
or
ret
lods
pushf
mov
mov
add
iret
bound
mov
sbb
insb
push
stc
cmp
adc
pop
jle
in
fstps
xchg
mov
addr16
stos
push
lds
push
xor
mov
mov
pop
and
es
or
push
jmp
imul
es
xlat
lcall
jbe
lcall
arpl
adc
cmpsl
ss
adc
jge
adc
das
imul
or
pop
sub
outsb
in
pushf
pop
js
inc
jmp
push
or
add
sbb
in
sub
dec
xchg
stos
sbb
pop
fs
testl
test
mov
mov
inc
jae
sub
ret
sbb
shl
pop
push
xchg
pop
mov
out
das
and
repnz
mov
popf
mov
pop
jbe
call
pop
lock
lods
call
pop
fbstp
daa
fiadds
stos
lods
sub
mov
in
or
loopne
cmpsl
jl
jle
mov
js
push
pop
xor
dec
adc
dec
jg
scas
out
xor
cmp
cltd
jmp
jnp
push
add
sub
nop
xor
cmpsl
mov
out
push
xchg
in
xchg
jns
imul
jo
sbb
mov
arpl
mov
mov
dec
in
imul
cmp
mov
sbb
out
jmp
leave
cs
jb
pop
push
push
fsubl
inc
ret
imul
mov
ljmp
pusha
jge
adc
and
pop
mov
cmpl
mov
loopne
xorl
sahf
jns
int3
daa
sbb
dec
sub
mov
je
mov
popf
push
add
dec
sub
testl
daa
mov
test
addr16
xchg
int
jae
mov
dec
cmp
xchg
ret
mov
mov
push
js
in
stos
lods
fiadds
jl
sub
int3
mov
mov
xor
stos
fcom
or
jmp
mov
add
int3
inc
cs
add
movsb
inc
addr16
je
sbb
cli
insb
add
popa
ret
xchg
fsub
popf
call
pop
or
mov
pop
je
cmp
sub
mov
sbb
fcomp
push
add
adc
jp
jg
sub
fmull
sub
xchg
sbb
mov
xor
addl
cmpsb
ss
and
pop
mov
mov
mov
scas
adc
xor
xchg
pop
scas
cli
jmp
insb
push
cld
cmp
xchg
test
sub
mov
icebp
lea
lds
jmp
jp
faddp
mov
mov
push
cwtl
scas
xor
sbbl
cld
sub
ljmp
adc
gs
lret
out
int
or
sbb
lds
xlat
and
fsubs
inc
shr
mov
mov
xor
lret
sahf
popa
lds
jecxz
in
mov
adc
push
jle
push
pop
test
mov
es
xor
dec
roll
sbb
loope
ret
sti
in
daa
add
popa
xor
mov
in
fnstenv
xchg
mov
fcmovnu
arpl
das
xchg
add
sbb
xor
pop
movsl
cmp
mov
ficoml
mov
js
sub
inc
cmp
hlt
push
js
mov
sbb
pop
ret
mov
in
test
adc
lcall
adc
adc
testb
add
out
mov
add
pop
jg
dec
repnz
popf
loopne
and
call
lcall
add
sbb
out
sgdtl
push
jnp
jb
mov
fistpl
inc
out
inc
and
and
adc
iret
push
mul
push
xchg
cmp
push
pop
loope
call
outsl
cltd
out
add
shll
inc
jl
or
fisubl
pop
in
out
sbb
sbb
js
test
les
nop
call
xor
fistpl
jg
xchg
test
xchg
dec
xchg
sahf
xchg
fcomps
lahf
push
or
movsb
adc
xor
ja
enter
mov
daa
adc
lea
leave
cwtl
fdivl
push
mov
push
add
in
scas
sahf
lret
notb
inc
das
loopne
mov
mov
add
repz
mov
jo
pop
inc
int
mov
push
sar
xor
mov
clc
cmp
aad
sbb
sub
out
pop
cmc
mov
lods
xor
dec
rcrb
aas
inc
pop
in
decb
sahf
xor
je
imul
aad
ret
push
scas
xchg
jae
jecxz
cmp
jae
repz
mov
ffree
les
inc
pop
aad
pushf
outsl
mov
dec
ja
sbb
pop
mov
in
jb
lret
add
dec
jecxz
push
jae
seto
or
mov
and
sub
pop
outsl
pop
xchg
loopne
mov
lahf
pushf
dec
mov
jns
cs
ja
jb
ss
ja
into
cmp
push
pop
mov
mov
aad
sbb
pop
call
std
add
subl
mov
mov
ljmp
mov
push
insl
mov
push
adc
cmp
test
mov
int3
add
loopne
xchg
fwait
xlat
cli
jg
jnp
push
js
jmp
jo
andb
xor
stc
clc
loope
or
sbb
mov
or
shl
into
pop
cltd
lods
push
nop
iret
dec
repz
outsl
hlt
ja
mov
or
pushf
lds
fnstcw
jg
mov
lds
xor
mov
push
jae
out
fisttpll
stc
xchg
lods
pop
jle
mov
popf
adc
pushf
mov
xchg
mov
xlat
mov
aas
pusha
ds
rcll
cmp
and
test
xor
xor
mov
in
push
shrb
icebp
out
or
ljmp
imul
out
push
adc
mov
cmp
cli
es
mov
lods
mov
jnp
inc
xor
sbb
jg
jl
mov
push
or
cs
or
mov
push
mov
popf
cmpsl
jno
sbbb
xchg
sbb
mov
xor
maskmovq
mull
mov
std
dec
ret
adc
rolb
dec
shll
push
arpl
push
outsl
mov
mov
xorb
inc
sahf
outsb
ret
popf
in
push
jl
dec
adc
lods
lea
loope
ds
adc
pop
insb
cs
mov
mov
xchg
and
gs
jb
jb
icebp
mov
stos
push
pop
xor
popf
mov
xchg
loopne
xchg
cmc
add
mov
pop
sbb
jl
insb
rcll
out
sub
xor
dec
pop
mov
cmp
nop
jge
add
push
add
add
rcl
out
jmp
mov
sahf
pushf
mov
pop
aaa
dec
xchg
js
ds
sub
jg
and
aam
int
add
mov
shl
jnp
outsl
hlt
jg
xor
jmp
push
rcrl
daa
and
lods
inc
mov
movsb
pushf
mov
or
xchg
loopne
xchg
ss
jmp
loope
lea
sub
hlt
jne
jnp
jb
pop
xchg
jnp
xor
cld
test
xor
int3
stos
or
adc
mov
push
fidivs
xchg
ficomps
rclb
inc
mov
rcl
out
sbb
or
arpl
mov
sbb
iret
test
shrl
movsl
lret
xchg
hlt
scas
jge
lock
outsl
adc
jne
pop
and
mov
outsl
lret
test
mov
add
sbb
lret
inc
lock
js
lahf
and
out
dec
push
pop
mov
shrl
dec
dec
or
push
into
xchg
mov
inc
sbb
inc
into
mov
dec
fld
fsubr
sbb
jge
push
rolb
lods
ds
clc
cli
cli
out
lcall
pop
out
add
mov
mov
lods
and
shrl
pop
adc
rcll
add
vpunpcklbw
int
fdivrl
or
push
lahf
notl
mov
jmp
arpl
cmp
es
fmull
and
adc
xchg
dec
push
jp
pop
es
loopnew
aaa
into
lds
push
in
xchg
xchg
ljmp
adc
and
shlb
into
jb
jns
js
sbb
push
inc
out
out
pop
call
mov
dec
sbb
jb
push
cmp
pusha
jmp
lahf
das
or
jmp
adc
mov
push
lret
adc
add
and
mov
push
adcl
and
sub
push
sbbb
push
scas
jbe
cmp
ss
lret
rorb
pop
in
jecxz
ficoml
pop
popf
lds
fwait
jae
stos
and
pushf
mov
enter
jb
mov
jne
cmp
addr16
mov
sub
repnz
out
leave
test
jle
xor
pushf
push
push
movsb
or
mov
push
push
ja
loopne
fdivrs
mov
inc
inc
mov
dec
fwait
xor
mov
pop
aam
out
jnp
xor
sub
push
xchg
sbb
cli
pop
cs
pop
push
pop
dec
add
es
or
arpl
repnz
dec
dec
ret
lret
aas
cmp
pop
dec
jns
push
mov
mov
mov
adc
aad
call
jg
dec
int
inc
ljmp
or
int3
divb
call
mov
pop
jmp
mov
mov
lods
xchg
inc
out
jo
mov
push
jge
loop
mov
insb
sub
mov
push
inc
push
dec
inc
clc
sahf
and
insb
or
fiaddl
mov
ret
hlt
std
sahf
xchg
add
mov
adc
xor
ret
and
jecxz
cmp
add
push
test
mov
mov
mov
sub
call
cmpsb
push
jecxz
das
js
lea
insb
fsubs
in
sbb
sbb
int
add
adc
loope
mov
cmpb
stos
mov
into
ror
cmp
sbb
mov
sahf
stos
icebp
mov
push
int
lret
push
cmp
pop
mov
clc
sub
and
jbe
lahf
or
sub
sti
loope
or
les
mov
icebp
je
sahf
dec
imul
mov
pop
in
mov
sbb
sbb
mov
lds
rclb
mov
xchg
lret
jnp
and
lahf
jno
loopne
in
popa
lcall
sub
pop
je
dec
pop
into
sbb
inc
lahf
add
adc
pop
cmpsl
inc
insl
outsb
jle
sub
mov
pop
sbb
inc
xor
jno
movsl
icebp
into
outsl
hlt
jmp
push
push
sbb
sub
cmp
lret
les
xchg
adc
lods
test
nop
push
ljmp
jmp
gs
cmpsb
or
xchg
cmp
outsb
leave
stos
sub
mov
xchg
lret
or
inc
imul
outsl
dec
repnz
xchg
and
xchg
mov
jns
leave
lahf
daa
jnp
inc
inc
aad
pop
mov
loope
fnsave
adc
mov
movsl
sbb
and
repz
mov
cwtl
xchg
fldt
xor
jno
pop
xchg
mov
test
lea
mov
mov
pop
sub
rorb
loopne
push
pop
xchg
jbe
jo
pusha
outsb
out
inc
push
push
lods
mov
rcll
adc
pop
xchg
xchg
push
or
lock
jno
lcall
rclb
inc
cmc
scas
dec
pop
ret
repnz
sbb
fadds
xor
out
jne
mov
mov
pop
push
aas
jns
sti
ja
push
bound
xchg
xor
stos
pop
jge
cmp
xchg
arpl
jbe
insl
adc
jno
aam
pop
mov
daa
adc
lahf
bound
mov
testl
push
mov
mov
xchg
sub
push
push
aas
jbe
add
and
inc
xor
sbb
imull
ret
pop
enter
mov
movsb
dec
dec
movsb
cli
movsb
sub
imul
mov
cs
cltd
xor
or
cmp
sbb
mov
out
cmc
subl
jne
xor
popa
gs
inc
dec
lock
in
push
mov
cmpsl
test
rcl
mov
adc
nop
mov
xchg
aas
push
or
add
std
inc
mov
jb
push
pop
leave
insb
xchg
lods
push
add
mov
cmp
scas
push
shlb
leave
fsts
and
xchg
sti
push
in
pusha
pop
leave
daa
push
adc
sub
or
out
pop
cmpsb
in
and
fimuls
and
popa
or
push
shld
cmp
and
mov
in
and
out
addr16
add
add
pusha
mov
pop
in
add
test
fistpll
fcoms
subb
sbb
and
ret
rol
add
dec
jns
repz
xor
mov
fwait
xchg
int3
mov
lret
test
bound
movsb
fs
cld
pop
ss
sar
gs
cmpsb
mov
pusha
bound
arpl
in
int3
sbb
push
dec
jb
mov
mov
lcall
or
sub
orl
xchg
dec
push
jg
push
dec
jns
call
mov
and
iret
int
jns
xor
push
jb
mov
test
and
push
leave
mov
mov
cmp
cmpsl
pop
mov
xchg
pop
cld
stos
xor
das
mov
sbb
jge
call
push
push
cmp
sub
inc
das
pop
push
pop
lret
clc
cs
push
jmp
in
sub
lds
cmp
xchg
pop
mov
inc
jb
pop
ds
outsl
sbb
dec
in
in
dec
movsb
rcrb
xor
pop
xor
sbb
add
sub
aad
pusha
test
out
dec
or
mov
aas
leave
fucomp
xor
xchg
and
dec
mov
mov
push
and
and
negl
adc
push
aam
dec
mov
pop
jmp
arpl
mov
sti
aam
enter
das
repnz
rcrb
pop
das
rorb
cmpsb
ja
mov
aad
jge
sbb
aas
dec
xlat
test
push
data16
lods
jno
and
pop
sbb
push
jo
test
cmp
jmp
dec
mov
lods
mov
rorl
enter
les
xor
and
or
insl
movsb
lods
les
add
mov
mov
aaa
fdivrl
sbb
mov
in
cmpsl
xlat
pop
push
mov
mov
dec
sub
lods
into
inc
imul
mov
xor
cs
or
or
fldt
jmp
jno
cld
lods
aas
int3
scas
repnz
cld
test
or
ljmp
lds
das
flds
arpl
sub
roll
mov
ret
out
aad
out
es
lcall
icebp
or
int3
shll
jl
mov
pop
lcall
enter
xchg
ret
pop
dec
jp
pop
dec
push
push
pop
movl
enter
sub
sub
cli
pop
push
xchg
inc
ficomps
lahf
repz
lahf
inc
push
and
lret
les
loop
pop
movsb
stos
add
fwait
insl
mov
pop
test
add
outsb
mov
outsb
mov
jge
aam
loop
cmp
push
insl
xor
mov
jns
imul
dec
pop
push
push
icebp
fs
test
push
lcall
mov
std
cmp
xor
or
jecxz
das
nop
cld
fisubrl
popa
sub
pop
inc
mov
jne
hlt
lret
add
aam
out
clc
jnp
jno
rorl
jae
inc
lret
add
push
cmpsl
xor
sbb
sub
pushf
mov
inc
jns
cmp
aaa
adc
xlat
inc
andb
mov
push
leave
test
jp
jl
xor
pop
fisubs
pop
test
fcmovb
jne
mov
das
or
dec
jne
jne
dec
mov
in
cmp
dec
xor
add
lahf
xchg
je
push
movsb
hlt
mov
xchg
int
sbb
lock
mov
cmpsb
inc
xor
rcrl
lcall
cmpsb
xor
sub
jmp
and
test
and
inc
in
lea
outsl
imul
mov
mov
cmp
outsb
or
and
and
push
push
js
int3
push
or
aad
or
cmp
fs
sbb
jno
sub
dec
jp
inc
scas
sub
and
loope
dec
gs
subb
fistpll
mov
les
pop
add
popa
inc
pop
test
jecxz
mov
hlt
test
push
dec
popa
add
mov
or
push
mov
push
jp
xchg
stos
stos
adc
sub
ficoml
xchg
lea
test
mov
sub
cmp
std
xchg
leave
mov
in
je
adc
cmpsb
lahf
pushf
imul
sub
push
mov
out
movsb
jp
dec
push
repnz
push
outsb
or
adc
add
xor
inc
lcall
in
movsb
push
and
mov
scas
insl
dec
dec
pop
jb
sbbb
add
xchg
repnz
push
mov
je
sub
dec
push
aam
mov
outsl
call
and
pop
dec
jno
fmul
xorl
sarb
add
aam
and
int
and
insl
pop
mov
mov
inc
dec
fxch
bound
jnp
push
mov
sbb
push
jns
mov
out
fwait
popa
ror
jo
xchg
daa
test
inc
fldcw
scas
lret
mov
and
adcb
dec
pop
pop
pop
push
rcll
movsb
add
out
and
cwtl
std
out
or
clc
sbb
jb
push
dec
shlb
sub
popf
xor
mov
ror
jl
fcomps
xchg
xchg
movsb
xchg
push
lret
xor
mov
pop
cmp
and
icebp
mov
add
ljmp
inc
push
cmp
bound
mov
data16
lret
shll
rcll
inc
lds
loop
fistl
xlat
sub
inc
jbe
into
mov
jb
jecxz
std
adc
out
sub
inc
and
aaa
ret
rolb
mov
rcrl
inc
movsl
pop
sti
push
lock
add
aas
mov
scas
enter
loop
jb
cmp
out
jge
jp
inc
icebp
fmuls
int
dec
gs
iret
rcrb
pop
dec
addl
adc
shll
mov
repnz
popf
mov
nop
cmp
jge
enter
lahf
aam
mov
test
outsb
in
and
dec
popl
outsl
xchg
arpl
psubsw
inc
xor
pop
xor
mov
scas
xchg
mov
enter
outsl
xor
enter
loop
mov
push
rcll
push
aad
test
scas
dec
pop
sbb
test
adc
jnp
test
int3
gs
in
bound
pop
out
leave
mov
dec
loop
mov
inc
or
push
stos
sahf
xlat
push
cs
adc
es
dec
cld
pop
add
pop
jno
sti
and
jns
jo
xor
xor
in
adc
nop
pop
mov
ljmp
and
and
imul
cmp
mov
bound
icebp
or
jle
xchg
adc
xchg
fidivl
xchg
mov
or
cmp
repz
add
sub
test
insl
loop
xchg
clc
jle
add
lcall
out
lods
jbe
and
jmp
les
cmpsl
and
lret
adc
sbb
mov
andl
cmp
add
mov
adc
push
fwait
xor
inc
scas
dec
ficomps
ret
push
lret
mov
jae
dec
xchg
ja
lret
or
pop
lods
xorb
ds
in
ja
jmp
mov
cmp
sub
dec
xor
orb
jle
mov
sti
inc
sub
push
int
mov
jns
insb
aaa
push
std
jl
cmpsb
mov
xor
mov
inc
shrb
cld
idiv
std
aad
test
mov
mov
in
ljmp
cmp
shlb
lods
nop
jecxz
pushf
push
jg
push
pop
into
mov
xchg
jns
ret
xchg
clc
pushf
inc
sub
dec
fs
popa
xlat
movsb
leave
push
fsubs
or
cld
jbe
jbe
jb
push
jp
jno
jb
mov
bound
lock
outsb
cmp
lret
movb
or
repnz
stc
mov
cmp
mov
mov
jae
xchg
and
pop
aaa
dec
leave
cmp
add
add
jo
inc
gs
and
cmp
aad
in
js
into
mov
out
and
cwtl
fldenv
sub
xchg
fs
repnz
push
test
xchg
aaa
jno
cltd
call
hlt
fsts
inc
pushf
xor
pop
mov
fs
mov
mov
mov
adc
jg
mov
adc
adc
sub
mov
lods
scas
xor
jno
sub
xor
repz
lcall
call
xchg
sub
je
or
movl
lret
mov
adc
mov
lahf
push
leave
mov
ljmp
sbb
dec
xlat
test
stos
lock
pop
stc
cmp
sbb
mov
xor
dec
jmp
cs
sbbb
cmovge
mov
test
out
pop
gs
test
int
add
pop
mov
jl
stos
shlb
push
rorb
imul
outsl
xor
out
and
je
adc
incb
mov
enter
aas
mov
cld
cmp
cmc
push
stos
inc
clc
int3
push
xchg
shlb
lock
insl
rcrb
push
aaa
in
pusha
push
add
je
gs
jae
aaa
fstps
orl
fcompl
jno
cmp
cmp
les
add
loope
ret
push
adc
into
or
adc
les
jle
jg
or
addr16
test
cmp
in
std
out
push
out
sbb
bound
dec
jbe
sbb
jl
jmp
pop
mov
mov
sub
cmpsb
ds
popf
aam
adc
fwait
mov
andl
pop
push
ret
or
pushf
mov
jmp
mov
xor
test
out
jae
movsl
aad
mov
or
in
aaa
leave
xorb
inc
mov
mov
fildll
in
repnz
cwtl
orl
std
xchg
scas
cmpsw
nop
lds
pop
pop
pop
push
test
lock
jmp
jl
sbb
in
add
push
jne
pop
into
mov
cli
lods
ss
cmp
mov
mov
pusha
ds
sub
adc
mov
or
pusha
push
test
in
in
cmp
inc
in
sub
and
pop
test
clc
call
push
mov
out
xor
mov
sahf
pop
jp
int3
xor
rolb
mov
jle
rol
sbb
push
and
mov
dec
imul
aas
pop
out
xor
sbb
ficompl
inc
push
mov
mov
add
int
rclb
dec
call
pushf
prefetchwt1
mov
adcb
inc
sbb
imul
add
nop
mov
in
pop
iret
jno
ret
repz
aam
aas
inc
call
gs
mov
test
shll
and
pop
cmp
dec
aaa
sub
pop
cmp
dec
loopne
fstpl
adc
fstps
mov
pop
aad
mov
repnz
std
or
outsb
or
add
sub
iret
xor
and
aas
orl
mov
loopne
imul
lahf
cld
push
sti
add
popa
lahf
or
inc
orb
pop
mov
movsl
xor
and
cmp
cmp
jo
mov
mov
cmp
out
xchg
adc
jns
sbb
test
cmp
or
push
push
fadds
inc
xor
dec
pop
ret
insb
stos
push
mov
lea
inc
dec
out
int
aaa
cli
loopne
cld
pop
mov
pop
sahf
xchg
adc
jno
sbb
push
cmpb
clc
faddl
pop
das
test
jecxz
stos
jmp
and
mov
movsb
daa
flds
int3
int3
in
aam
push
jae
and
rcrl
addl
int
add
mov
fstpl
push
push
push
addl
das
out
pop
sahf
inc
or
inc
data16
ljmp
shl
adc
mov
cmp
loop
dec
dec
jge
add
dec
outsl
pop
xor
lea
and
or
adc
out
dec
sub
insl
fsubrl
add
jmp
xchg
or
repz
andb
sti
insl
mov
movb
jnp
mov
popf
or
pop
mov
ss
js
jge
inc
pushf
dec
outsl
shlb
xlat
pop
pushf
inc
inc
fwait
dec
push
jl
adc
add
xor
jl
adc
nop
xchg
mov
cmp
mov
pop
lcall
negl
aam
shlb
inc
push
in
adc
enter
push
cmc
sbb
push
adc
test
ja
xorb
adc
sbb
fsub
mov
xor
and
cmp
push
loop
pushf
jnp
dec
xor
lea
fimull
sub
lret
pop
mov
pop
enter
mov
mull
and
xchg
sub
add
lds
faddp
test
cmp
jmp
int
pop
dec
xchg
push
mov
jp
jae
cmp
mov
fimull
xor
cmp
fs
addl
call
and
hlt
dec
dec
inc
addb
fidivl
mov
xchg
out
test
psubb
jmp
jae
loop
sbb
lods
dec
push
stos
lods
sub
pop
sub
fdivl
je
pop
adc
in
pushl
stos
pop
movsb
cmp
outsb
dec
xchg
test
sbb
add
shlb
xchg
jl
call
cmp
dec
jne
mov
adc
cmp
incl
iret
xchg
into
jne
les
imul
es
call
cmp
cmp
adc
test
xor
lea
push
pusha
add
in
addr16
cmp
push
add
jae
push
fcomp
or
ljmp
orb
xchg
push
push
lahf
sub
ds
test
sbb
pop
mov
cmp
mov
sub
inc
mov
icebp
scas
dec
icebp
adc
xchg
and
loopne
stos
jmp
cli
pop
mov
out
mov
addr16
jmp
imul
jb
daa
dec
test
adc
mov
mov
xchg
lahf
mov
xchg
scas
adc
xchg
jmp
push
hlt
fwait
inc
in
mov
rcr
cmp
ret
popa
mov
jb
xchg
jbe
mov
jnp
fwait
mov
or
cmpb
insl
jg
xchg
pop
ja
push
test
sub
out
adc
lret
outsb
stc
test
pusha
popa
mov
jne
xchg
fbstp
loopne
pop
mov
sub
iret
jmp
mov
aam
fmuls
imul
aaa
and
ljmp
rorb
bound
dec
mov
sarb
flds
movsb
loopne
pop
ret
mov
enter
jecxz
jl
sbb
bound
jmp
xor
dec
xor
imul
mov
aad
jmp
mov
js
xlat
xor
pusha
pop
xchg
cmc
in
mov
xchg
repnz
mov
rcrb
stos
add
lret
lds
cmp
push
xlat
cmp
pop
cmp
cmpsb
out
sbb
pcmpgtb
insb
mov
lock
mov
test
subl
xchg
into
roll
aad
mov
cmp
out
cmp
push
in
and
je
aad
movsb
push
ljmp
stos
popf
adc
mov
bound
mov
sub
or
push
scas
int3
dec
mov
sbb
std
mov
hlt
nop
sti
scas
fistpl
loop
dec
repnz
pushf
add
ja
hlt
push
insb
aad
jb
xchg
adc
test
add
jbe
pop
sbb
fbld
testl
out
nop
out
fcompl
mov
cmp
adc
std
xchg
xchg
fisubrs
add
xorl
or
fisttpll
xor
lahf
pop
imul
icebp
std
out
lea
sub
sub
mov
xchg
or
xchg
sub
add
je
lahf
xchg
pusha
cmp
ljmp
xchg
cmp
mov
mov
push
push
mov
mov
xchg
inc
push
and
xadd
dec
sbb
popf
mov
mov
jmp
fidivl
fmull
lret
je
push
dec
pop
adc
sbb
addr16
sub
cmp
ss
mov
movsl
jmp
das
cmc
mov
lock
out
mov
mov
pop
xchg
fmuls
mov
cli
in
fisubs
dec
pop
jmp
inc
lods
mov
mov
xor
stc
clc
ljmp
sub
int3
inc
and
lret
in
mov
sti
pmaddwd
sub
shll
es
dec
in
cmp
lods
pop
xchg
pusha
add
out
add
push
xchg
jp
mov
mov
adc
push
inc
pop
les
shlb
test
adc
mov
into
mov
push
stc
fs
sbb
sub
in
insl
ja
std
mov
pop
mov
mov
addr16
adc
mov
cmp
jmp
adc
pop
icebp
mov
loop
and
cmpsl
imul
les
push
dec
cwtl
lock
sbb
cmp
mov
jb
adc
stc
fiaddl
jecxz
fistps
dec
sbb
pop
xchg
sbb
mov
sbb
push
mov
adc
lock
lahf
and
or
mov
fwait
mov
fcompl
ret
inc
ja
inc
mov
mov
push
sarb
or
or
push
outsl
iret
adc
push
adc
loope
test
data16
push
sub
adc
xchg
data16
mov
add
adc
mov
fisttps
mov
add
shll
out
or
mov
pop
jecxz
out
sub
mov
bound
cwtl
scas
and
and
dec
push
mov
and
test
das
mov
es
pop
mov
cmp
loope
das
dec
addr16
in
fsubrs
cltd
rolb
cli
dec
ljmp
push
mov
or
ss
push
xlat
jne
jmp
das
push
push
xchg
mov
out
loope
mov
mov
icebp
add
inc
lods
in
cltd
xchg
leave
inc
adc
ret
arpl
orb
rcr
dec
imul
mov
mov
mov
mov
add
push
gs
imul
pop
bound
inc
iret
mov
rorl
arpl
push
repz
adc
repnz
cmpsl
mov
cmp
mov
fimuls
mov
nop
dec
ja
add
inc
fwait
das
scas
test
inc
test
dec
dec
push
mov
mov
inc
fdivs
pop
out
inc
test
unpcklps
push
enter
imul
loopne
fsubr
cs
fwait
mov
sbb
pop
push
jle
xor
stc
push
fistpl
dec
mov
mov
scas
and
sbb
pop
mov
loopne
mov
arpl
jnp
lods
les
lock
jb
sub
add
loope
push
xchg
les
aaa
xor
add
inc
mov
jnp
mov
inc
cmpsb
ficompl
lcall
pop
pop
push
fcoms
dec
dec
in
and
cmp
inc
testl
dec
pop
insl
aam
jmp
mov
adc
shrb
aaa
xchg
push
jne
pop
mov
out
ficoms
stos
mov
or
lock
or
xchg
jle
or
add
jns
mov
mov
push
hlt
scas
adc
ds
cwtl
dec
faddl
ret
mov
inc
ljmp
mov
decl
xor
clc
sbb
dec
push
xor
inc
mov
cmp
stos
xchg
cli
jo
lcall
fisttpl
arpl
sbb
add
push
push
mov
or
inc
icebp
jbe
mov
dec
pop
or
fwait
pop
subb
or
les
mov
sbb
add
xchg
or
shlb
into
mov
inc
jne
outsl
fs
js
inc
enter
xchg
xor
lods
lcall
test
mov
lret
xchg
bound
out
xchg
sub
dec
stos
xchg
call
pushf
adc
adcb
or
mov
cmp
ja
in
pop
rorb
aas
add
enter
jp
inc
jl
sub
sub
js
movsb
xchg
fiadds
and
mov
inc
repnz
aas
sub
adc
jo
cmpsb
pop
stos
popa
ljmp
sets
repnz
and
pop
stos
rcrb
sahf
add
sarl
inc
clc
lods
jle
dec
inc
add
and
jecxz
pusha
or
xor
insl
aas
ja
in
pop
inc
mov
xchg
push
inc
mov
cmpsl
mov
inc
inc
mov
push
mov
gs
fxch
imul
or
cmpsb
mov
je
pop
in
stc
pop
jne
aas
fcomi
sbb
test
icebp
pop
out
jbe
je
xchg
mov
ss
xchg
cltd
subl
insl
lret
js
popf
dec
movsb
popl
add
and
lock
xor
jg
fs
cld
lods
pop
mov
cmp
cmp
arpl
xchg
nop
lock
or
test
test
aad
add
mov
inc
lds
cwtl
jbe
leave
es
sub
mov
es
inc
mov
out
dec
inc
mov
cmp
push
mov
je
movsl
cmp
mov
jmp
pushf
in
jbe
mov
inc
mov
pusha
inc
aaa
fdivr
adc
xor
lahf
mov
and
mov
mov
cmp
fldcw
repz
repz
add
clc
roll
cltd
jp
pop
nop
or
inc
xor
nop
cmp
mov
xchg
pop
shl
cmp
or
ja
jnp
mov
xchg
popf
dec
popf
ljmp
mov
test
inc
popf
mov
xlat
into
imul
aas
cmc
xchg
sbb
xchg
in
subl
divl
addr16
adc
leave
call
xchg
jo
into
add
mov
mov
dec
xchg
ds
mov
lcall
adc
adc
mov
jl
lods
or
lea
jle
test
dec
dec
mov
jl
loope
mov
das
dec
sbb
insl
pop
jl
lea
sahf
xchg
call
pop
mov
std
adc
clc
sahf
pop
mov
mov
push
or
pop
ds
adcl
or
ljmp
push
lret
jle
loope
js
bound
hlt
insb
adc
mov
inc
or
adc
and
out
jl
or
fbld
mov
sub
mov
into
inc
mov
push
mov
test
je
mov
out
pusha
cmpsb
xchg
pop
push
aaa
add
push
add
pop
repnz
cmpb
aad
xor
pop
repz
int
xor
xchg
push
or
lahf
jno
add
push
mov
mov
sub
mov
stos
xchg
xor
pop
daa
test
xor
jae
push
loopne
mov
xchg
jbe
adc
jbe
mov
jo
jp
in
lahf
dec
test
adc
arpl
inc
adc
pushf
dec
sub
mov
inc
sbb
sub
pop
jg
or
lahf
dec
or
cwtl
test
xor
xchg
ret
je
pop
test
xchg
out
enter
add
jb
fmul
inc
aas
xor
adc
dec
das
adc
repz
shll
xchg
mov
pop
inc
and
fadd
xor
lret
inc
popf
imul
fisubrl
add
jnp
inc
lods
inc
and
sbb
inc
or
push
mov
push
insl
sti
xchg
adc
adc
push
lcall
scas
push
jb
sub
daa
and
fcomp
pop
fadds
lods
sti
pushf
leave
jl
stos
sub
cwtl
dec
in
inc
inc
sub
sub
enter
cmp
mov
ds
inc
insl
xor
push
and
dec
mov
daa
arpl
rorl
inc
jp
push
dec
pop
sahf
imul
xchg
idivb
sbb
pop
ret
outsl
in
flds
xchg
outsb
push
inc
cmp
aam
jmp
push
mov
aaa
jge
loopne
add
popf
icebp
inc
popf
pop
dec
mov
xcrypt-ofb
cmpsl
imul
dec
sub
icebp
xchg
out
mov
orb
cmp
gs
push
daa
jne
sti
out
out
rcrl
and
add
push
insl
mov
lods
cmp
xor
nop
mov
clc
fnstcw
sub
mov
bound
into
stos
enter
adc
movsl
mov
mov
addl
push
jns
mov
mov
dec
mov
mov
xor
scas
lods
stc
inc
inc
sbb
inc
push
stos
mov
xchg
jg
in
dec
data16
jo
rorb
mov
lods
cmpb
push
in
jae
pop
clc
xchg
or
loope
les
cld
ss
sti
jecxz
int3
vmovdqa
sti
repz
xlat
xor
addr16
mov
popf
jge
lods
imul
and
cmp
rcrl
movsl
mov
mov
sbb
fsubr
cmpsb
jmp
rol
jns
into
jge
xchg
repz
adc
or
imul
cmp
inc
dec
into
jbe
adc
fimull
sbb
and
jle
pop
idiv
pushl
sbb
sub
lods
jae
ss
cwtl
mov
or
dec
sarb
mov
xchg
insb
and
sub
xor
out
xor
xchg
aad
in
dec
push
and
adc
mov
xor
adc
jle
clc
inc
popf
mov
push
add
ljmp
repnz
push
ret
sub
mov
push
outsb
cmp
bnd
pop
and
je
dec
sub
fwait
sub
jns
std
mov
mov
pop
adc
add
mov
es
jle
mov
out
or
clc
add
cmp
dec
cs
mov
test
mov
lea
pop
stc
mov
xor
xor
sub
aam
mov
cmp
mov
inc
into
push
aam
jg
and
fwait
sbb
in
leave
cs
popa
dec
push
clc
jns
mov
xchg
add
dec
bound
mov
add
aas
adc
or
cltd
sbb
jp
insb
adc
ficoml
fldl
sbb
lods
rorl
aam
lret
jno
into
dec
jnp
sub
mov
mov
sub
iret
dec
add
gs
cmc
pop
push
in
pop
cmpb
sbb
and
jbe
xor
ret
mov
lret
adc
push
inc
addr16
xor
out
cld
jb
lcall
jne
lods
sahf
test
sbb
ja
pop
mov
pop
mov
inc
mov
dec
jne
insb
mov
jle
in
outsb
push
int3
xchg
scas
xor
jns
je
fsubrs
addl
push
das
mov
mov
orb
nop
sbb
cltd
push
lret
mov
jae
xchg
idiv
pmullw
push
push
in
add
xchg
cmp
daa
fs
adc
xchg
push
and
mov
fisubrs
scas
iret
fadds
push
pop
js
movsb
cmpsl
push
stos
xchg
inc
add
mov
add
lret
outsb
fldl2t
in
push
stos
enter
int3
add
sub
pop
jns
movb
iret
dec
push
mov
cmc
sbb
lret
stos
cli
bound
out
roll
xchg
fldl
push
lret
in
add
dec
xchg
mov
mov
mov
mov
movsb
ljmp
test
popa
outsl
dec
inc
addr16
iret
popa
xorb
addl
jg,pt
pop
fstpt
sub
mov
lahf
sahf
or
in
pusha
sbb
push
add
mov
ficoms
and
movsl
sti
push
dec
push
sbb
cmp
dec
in
cmp
insb
lods
js
jmp
cmpsl
xchg
insb
push
sbb
lds
mov
push
mov
mov
mov
lcall
cltd
fcmovnbe
fidivl
push
ljmp
ljmp
lods
sub
push
cmpl
push
stos
fs
pop
add
and
cmp
dec
xor
cmpsb
mov
sub
in
inc
lahf
in
xlat
dec
mov
xchg
cmp
insb
cmp
dec
pop
mov
xor
ja
dec
cwtl
and
push
in
jl
or
arpl
imul
mov
jl
push
mov
or
or
xchg
sub
rorl
in
test
and
insb
call
or
fistps
adc
daa
sub
xchg
aas
inc
jg
xchg
int3
stos
add
xchg
scas
mov
jecxz
pop
lds
call
rclb
inc
stos
dec
ljmp
push
call
or
and
in
fdivrl
pusha
push
inc
lcall
hlt
xchg
cmpsl
adc
pop
jp
jbe
mov
push
cmpl
inc
jecxz
sub
mov
cmpsb
inc
add
xor
dec
mov
imul
or
pop
repz
add
fnstsw
fcompl
inc
jg
in
loopne
or
ljmp
sub
or
mov
aam
icebp
outsb
lcall
jp
and
add
fldt
sbb
in
xlat
sub
sti
ds
mov
jae
testb
mov
mov
jo
frstor
lods
pop
add
xchg
mov
or
mov
xchg
dec
sbbl
dec
inc
movb
pop
fists
adc
data16
push
mov
inc
cmp
shrl
ret
sbb
add
cwtl
dec
adc
add
fmuls
sub
dec
jg
ja
mov
add
mov
fmulp
cmpsb
and
xchg
add
dec
pop
inc
test
xorl
std
dec
push
mov
into
rcrb
push
add
hlt
bnd
cmp
rorl
imul
mov
cmp
adc
fsts
lret
cltd
fadds
and
nop
or
mov
mov
jbe
pusha
xor
or
in
pop
outsl
orb
push
loop
push
lahf
or
xor
add
fldcw
and
jno
subl
shlb
jno
sub
and
lcall
mov
cmp
push
xlat
mov
lret
test
into
inc
data16
cmp
and
pop
cld
sarl
lock
push
enter
mov
sbb
repz
or
aad
int3
js
aad
inc
inc
repnz
into
or
mov
pushf
xor
ficoms
clc
movsb
popf
jmp
sub
inc
cmp
nop
pop
lods
shrl
lock
test
sbb
imul
jle
sbb
cmp
in
xchg
in
fcmove
cltd
mov
adc
enter
insl
jne
hlt
cmp
cmc
mov
movsl
test
nop
mov
jo
mov
inc
push
lea
aad
fdivrp
clc
mov
mov
mov
enter
mov
jg
cltd
sub
fldcw
mov
pop
mov
mov
lcall
mov
jmp
lock
je
jg
or
or
roll
cmp
inc
xchg
stc
cld
outsl
pop
cmp
std
into
mov
add
daa
gs
adc
sahf
ret
pop
mov
pop
aam
push
pusha
enter
xchg
push
mov
popf
nop
rcl
out
fs
xchg
jmp
jp
outsb
in
inc
pop
aam
mov
pop
data16
movb
fidivrs
rcll
mov
jg
in
inc
and
cs
xchg
inc
sbb
or
pop
xchg
push
outsl
icebp
imull
scas
mov
sbb
or
jp
and
ret
pop
leave
cli
sbb
pop
xchg
adc
lret
mov
out
cmp
xchg
inc
data16
and
jmp
pop
mov
push
lock
sbb
xchg
call
ret
adc
pop
dec
mov
in
jae
jge
out
fldt
cmc
lret
push
cmp
imulb
mov
adc
lods
push
and
add
aaa
dec
adc
fwait
inc
out
aaa
adc
test
insb
roll
int3
addl
aaa
out
fisubs
out
jg
adc
je
add
aas
mov
sub
lcall
cmp
dec
inc
leave
lods
push
jecxz
shlb
lods
push
add
cmp
stc
push
loop
push
aam
sbb
ja
and
or
xlat
icebp
cvttps2pi
sbb
push
aam
push
inc
adc
pusha
ret
xor
dec
repnz
and
stos
adcl
jecxz
cmp
test
adc
xor
jbe
or
out
imul
pop
aas
movsb
movb
std
int3
popa
push
shll
fcoml
xor
xor
add
jg
add
andb
gs
mov
test
notl
jmp
popa
mov
inc
into
rclb
fs
or
ficomps
pop
pop
inc
mov
xchg
jge
pop
lods
lods
mov
test
into
stos
xchg
cmp
repz
bound
sub
dec
cmp
mov
xchg
lcall
add
out
ret
lods
inc
push
je
mov
mov
aaa
imul
pop
add
out
divb
xchg
mov
ljmp
inc
pusha
fldt
ja
lahf
subl
int3
dec
jno
gs
iret
lret
mov
push
adc
aad
sub
je
push
mov
repz
inc
sub
jmp
pop
test
cs
arpl
out
test
push
dec
jmp
xor
xchg
and
dec
cmp
push
pop
sbb
or
pop
sti
lods
pop
std
fcmovu
dec
inc
dec
lahf
inc
cltd
stos
aas
repnz
mov
js
cmp
loope
and
arpl
mov
aas
push
jae
dec
mov
loope
repz
shrb
mov
adc
and
mov
cmc
pop
fdivs
sub
orl
push
cmc
dec
hlt
push
fildl
bound
rorb
adc
mov
inc
mov
push
push
cmc
push
int
lret
sub
adc
xchg
ja
pop
pop
or
insb
lret
push
gs
and
shll
jne
mov
sbb
dec
enter
jle
adcl
mov
negb
fstpt
mov
out
xor
test
lea
mov
sub
mov
cmp
jbe
int
xchg
jnp
jns
sub
jle
jg
push
arpl
jno
ss
divb
out
cmpsl
stos
cmp
push
or
gs
repz
outsb
arpl
jp
js
es
lea
sbb
or
fadds
fisubrs
aas
add
insb
lret
and
cmp
popf
mov
arpl
clc
int
mov
push
pop
mov
leave
jge
push
xchg
lahf
stc
adc
mov
dec
mov
shl
insb
imul
jbe
xchg
jmp
sbb
add
shll
adc
addr16
into
dec
or
out
popa
sbb
xchg
pop
jg
jl
push
push
jecxz
fldcw
hlt
stos
in
or
pop
pop
dec
and
xchg
pop
out
loope
pop
imul
cli
dec
or
pop
int
ja
mov
pusha
stos
aad
xchg
movsl
adc
cld
inc
mov
adc
fsubrs
mov
pop
dec
sub
stos
xchg
sahf
mov
adc
mov
lcall
pop
sub
sbb
push
int
pop
ljmp
push
dec
enter
xor
mov
lock
cld
or
hlt
clc
add
cwtl
lahf
push
fwait
sahf
mov
inc
cmp
add
out
lahf
xchg
or
ss
rorb
jne
icebp
xor
std
imul
fs
int
ret
aad
push
xor
cmpsl
in
shlb
jecxz
mov
movsl
mov
sub
jp
cmp
mov
subl
repnz
mov
cmpsb
lret
dec
in
lcall
adc
mov
push
movsb
mov
outsb
pop
lock
cwtl
mov
orl
mov
cmpsl
aad
in
scas
add
hlt
adc
add
xchg
push
loop
cmp
andb
and
mov
xchg
sbb
xchg
int
sbb
mov
insl
add
insb
ljmp
js
cli
leave
sub
sarb
inc
mov
dec
and
adc
xchg
lret
mov
out
mov
and
pop
pop
pop
cmc
ja
xchg
jmp
xchg
mov
mov
movb
daa
jg
and
lcall
imul
in
lds
pop
fwait
nop
xchg
mov
pop
int3
scas
add
gs
push
movl
sub
ret
jno
mov
pop
xchg
dec
lock
enter
daa
aas
bound
and
inc
lcall
push
sahf
cld
inc
push
out
daa
pushf
sub
in
sub
cwtl
fs
aaa
cli
sarb
xor
rcrb
cwtl
dec
push
in
inc
fdivl
pop
clc
cwtl
fcoms
xchg
pop
push
xor
loopne
push
ja
mov
mov
pop
inc
enter
out
imul
pop
addr16
hlt
or
enter
clc
scas
mov
cltd
cmp
roll
push
mov
sbb
pop
adc
sub
dec
mov
jno
and
cmp
inc
push
shrb
bound
and
pop
push
pop
sbb
rcrw
push
aam
insb
clc
ds
hlt
sti
and
bnd
or
mov
and
adc
fwait
jmp
jns
push
inc
jae
js
mov
push
imul
cmp
mov
push
shrl
inc
adc
xchg
sbb
adc
cmp
and
xchg
loop
in
lods
xchg
and
sbb
sub
clc
dec
jl
xorl
clc
xchg
out
test
jg
cwtl
cld
mov
mov
out
inc
stos
jno
lods
jns
lret
je
mov
cmpsb
inc
cpuid
jbe
sub
icebp
add
ficoms
idiv
das
int
inc
int
xchg
daa
gs
xchg
lods
lock
rcrl
aam
fisttps
pushf
leave
ret
mov
jp
jbe
shll
cli
mov
lds
inc
out
cmp
jecxz
jecxz
push
insl
fadds
xchg
cmp
and
cld
pop
add
imul
xor
movsb
jp
mov
adc
jns
les
mov
jl
jl
movsb
ja
hlt
mov
and
imul
push
inc
cmp
bound
inc
push
jmp
ljmp
xchg
push
repnz
sub
xchg
dec
arpl
and
xor
push
adc
add
aam
jne
daa
scas
xchg
and
inc
subb
mov
imul
fwait
js
add
mov
sbbl
mov
inc
je
xor
out
imul
inc
xchg
test
mov
scas
negb
sub
shrl
sahf
cmp
rolb
out
sbb
sbb
adc
jge
fucomip
sub
rorb
sub
in
jge
and
mov
in
enter
add
push
ror
add
repz
arpl
xchg
ret
mov
pushf
adc
lahf
scas
or
adc
dec
or
xchg
lds
inc
lock
adc
push
dec
outsl
dec
lock
std
and
cmpsb
aas
jmp
add
mov
mov
pop
mov
sub
imul
adc
rcrb
aas
aaa
xor
jb
cmpsb
adc
and
xlat
mov
hlt
mov
arpl
into
inc
dec
cltd
in
lret
data16
push
popf
pop
or
jbe
movsb
push
sub
cmp
scas
and
cltd
jns
shrb
sbb
outsl
dec
dec
fstpl
mov
cmp
ret
fnstsw
xor
repz
popl
cmp
in
xchg
mov
loopne
cmp
test
pop
rorb
clc
iret
mov
and
fcoml
sub
lret
xchg
insb
int3
adc
std
ret
imul
cmc
out
xchg
scas
dec
add
and
or
shll
pop
sub
jl
stos
clc
loopne
cwtl
xlat
xor
cmp
inc
jnp,pn
pop
cmp
movsl
in
popf
push
fiaddl
sahf
lods
push
jns
mov
rcr
push
lahf
push
and
out
test
dec
movsl
xor
enter
and
clc
pop
push
dec
cmpsb
clc
pop
sahf
xorb
inc
xlat
xchg
xor
pop
jns
in
add
push
sub
pushf
xor
imul
sbb
or
add
and
lea
and
and
les
add
mov
mov
imul
push
inc
call
ds
loopne
ficoms
mov
cmc
mov
lret
cmp
cld
xchg
inc
outsb
inc
dec
cmp
and
adc
test
pop
divl
pop
add
mov
cltd
nop
jp
in
mov
and
imul
push
add
lahf
loop
mov
fidivs
and
lea
jecxz
xchg
jno
negb
mov
in
fwait
pop
ja
sbb
jecxz
cmp
push
mov
xlat
add
lret
fstpl
fucomp
iret
popf
sbb
pop
pop
into
pushf
inc
call
sbb
cmpsl
movsb
call
fcmovnbe
cmc
pushf
adc
jo
ljmp
test
mov
push
push
and
xchg
inc
dec
mov
mov
movsl
sarl
pushf
sub
mov
adc
jbe
out
sbb
inc
ret
movsb
jnp
jl
pop
jp
fdivs
movsl
push
aaa
jp
test
xchg
inc
sub
and
push
fisubrl
stc
bound
les
fmuls
xor
in
lret
in
add
sahf
xchg
mov
pop
mov
ja
mov
lea
lcall
mov
mov
adc
jae
and
add
outsl
in
xchg
unpcklps
and
sub
ror
loopne
popf
xchg
mov
inc
xor
pushf
stos
cmp
insb
inc
pop
stos
rorb
lcall
mov
scas
addb
and
leave
mov
dec
pop
mov
xchg
mov
scas
jge
ret
std
mov
xor
inc
cltd
test
ss
and
sbb
xorl
int
mov
mov
stc
adc
mov
dec
sub
mov
fstpl
loope
mov
lahf
push
xor
stc
sub
xor
or
test
inc
pop
xorl
xchg
fs
fsub
fwait
and
pop
repz
mov
pop
lea
setp
fidivl
xor
inc
leave
push
rcrl
sbb
sahf
enter
loop
shll
sub
or
adc
inc
repnz
fstl
cmp
and
xor
jns
bound
arpl
call
push
rcrb
arpl
jmp
sub
xor
pop
cmp
mov
push
movsb
push
outsl
adc
mov
scas
aad
and
xlat
jge
scas
bound
push
imul
loope
popa
out
call
xchg
daa
fiaddl
mov
or
and
push
jns
pop
in
mov
fbstp
mov
cmpsb
cmp
enter
mov
rclb
movsb
jbe
icebp
adc
adc
jecxz
mov
push
aas
xchg
clc
lcall
cmp
pusha
test
lcall
sub
pop
test
cs
and
xor
lock
or
iret
push
mov
adc
mov
cwtl
or
jbe
aas
mov
int
xor
sub
xchg
fidivs
scas
pop
mov
in
jne
or
dec
ret
fnsave
js
mov
mul
inc
fdivl
inc
fists
ret
mov
and
mov
aaa
sar
test
mov
xor
inc
addr16
xchg
or
insb
fistl
add
sbb
mov
pusha
push
rcr
movsl
dec
mov
dec
mov
out
out
data16
adc
add
jecxz
mov
testb
pushf
push
pop
push
out
jge
fidivs
mov
jae
xor
mov
out
call
mov
aas
mov
mov
mov
push
adc
insb
mov
adc
jge
out
mov
and
repnz
sahf
jo
jns
xchg
cmpsb
dec
pop
inc
shlb
sub
divb
mov
gs
cmp
add
mov
cmp
push
sub
adc
movsb
fs
ja
repz
cmp
dec
sbb
cmp
mov
insb
pop
mov
outsl
pop
add
pusha
stc
mov
adc
aaa
inc
fistps
ret
sbb
data16
lock
das
sbb
push
mov
xchg
inc
xor
pop
data16
sbb
xchg
mov
mov
outsb
push
movsb
and
in
mov
addr16
inc
lea
jne
pushf
inc
nop
imul
das
xor
cmc
fstpl
xchg
sbb
int3
mov
and
push
pop
add
test
mov
decb
ret
sahf
inc
dec
xchg
mov
fidivl
rorl
and
call
fisubrs
lock
sbb
movsl
pop
loope
in
fs
test
outsb
jbe
cmp
push
pop
inc
dec
adc
jg
dec
inc
clc
push
aas
popa
xor
pop
cmp
js
adc
loopne
jp
mov
mov
pop
scas
mov
dec
test
loop
inc
pusha
mov
push
lret
icebp
arpl
pushf
xor
or
inc
mov
fwait
jns
or
dec
test
iret
mov
dec
push
call
sbb
into
cs
lods
vfnmsubps
movsl
and
sub
xor
mov
sbb
push
mov
and
push
jp
dec
push
repnz
js
push
je,pt
aam
and
cli
hlt
leave
push
mov
inc
mov
sahf
mov
stc
mov
sbb
add
xor
insb
cmpsl
nop
and
fistpl
cmp
sbb
mov
jmp
les
mov
adc
sar
popl
jae
and
add
mov
sbb
jmp
cmp
xchg
dec
ret
add
xor
xchg
leave
es
push
pop
push
mov
out
xor
jne
mov
insb
jp
les
fs
and
add
mov
test
clc
pop
push
repz
lock
adc
xchg
in
push
pop
rcl
stos
cld
push
int
push
xchg
cmp
or
adc
stos
out
jle
add
test
and
push
shll
or
je
outsl
xchg
xchg
popa
pushf
cld
dec
aaa
loopne
inc
adc
ret
cmp
cmp
and
les
enter
sbb
mov
lea
js
jnp
int3
add
pop
in
imull
mov
jne
adc
push
ret
cmc
sahf
loopne
das
das
jae
aam
in
outsb
pop
xor
fisubl
aaa
xchg
je
mov
les
lahf
cmpsb
add
and
mov
mov
pop
xorl
sub
int
or
push
imulb
fistps
pop
mov
sub
adc
dec
shll
mov
mov
aas
push
or
fdivp
dec
inc
popf
mov
aam
pop
jmp
mov
mov
or
add
mov
push
and
dec
push
dec
inc
sbb
dec
movsl
or
xor
pushf
cmc
jp
shl
and
loope
jo
stos
cmp
sbb
mov
xchg
inc
je
mov
icebp
cmpsl
sar
in
mov
aas
je
les
mov
dec
mov
mov
xchg
loopne
lds
sub
jge
jle
mov
dec
out
push
fldcw
ds
mov
or
cmp
ficoml
inc
movsl
xchg
inc
ja
popl
push
out
nopl
in
dec
or
sbb
xchg
rcrb
push
mov
enter
inc
cs
scas
pop
insb
mov
push
xchg
jae
cld
lds
mov
mov
dec
pop
leave
sbb
imul
jbe
push
lret
mov
fdivs
fnstenv
mov
cs
pop
inc
mov
jo
or
push
in
in
inc
int3
mov
out
jno
lcall
stos
pushfw
mov
jne
dec
push
call
mov
je
js
std
sub
xchg
mov
mov
pop
push
dec
int3
ljmp
cmpsb
jae
ljmp
cli
mull
popf
mov
jl
push
mov
sti
jno
sbb
add
in
add
cltd
xchg
stos
sub
inc
sarl
fists
jns
add
pop
xchg
jp
jne
or
xchg
and
sub
addb
jmp
sbb
gs
outsb
cmp
leave
push
fstpt
insl
cs
dec
jb
rorl
shlb
cmp
pop
leave
shrb
les
aas
sbbl
and
outsl
std
add
cmp
outsl
xchg
rclb
wbinvd
enter
aas
push
cli
lret
xor
mov
rcll
mov
test
push
sub
cmpb
les
jecxz
leave
mov
mov
jne
jle
jmp
mov
movsl
sti
sti
xor
aad
xchg
dec
lods
jl
pop
leave
loope
insl
bound
sub
mov
lahf
or
mov
mov
filds
xor
sub
js
and
mov
fnstenv
push
lock
or
push
test
inc
mov
push
mov
cwtl
addr16
mov
mov
mov
cmova
fs
ds
jmp
popf
out
or
fwait
js
sahf
push
jecxz
sahf
dec
ret
add
mov
and
or
in
mov
sub
lcall
mov
jno
ds
sub
rorb
subl
loope
and
add
and
cmpsl
sbb
lret
add
inc
jle
fcoml
pop
adc
loop
leave
mov
adc
mov
fisubs
jmp
and
aas
or
pushf
mov
mov
or
sarb
int3
lods
cld
mov
das
repnz
push
xchg
xchg
cmpsb
int
mov
jbe
shlb
lock
mov
aam
add
scas
sub
sbb
insl
ret
sahf
int3
in
or
pop
xlat
loope
outsl
cmp
or
mov
popf
xchg
xor
push
sub
xorb
pop
add
push
aas
mov
jae
add
inc
hlt
sbb
sub
mov
pop
leave
push
movsl
xchg
data16
pop
mov
xor
test
popa
stc
shll
mov
cli
in
jecxz
mov
mov
dec
mov
dec
or
ljmp
sub
fistpl
mov
push
lahf
cld
lret
stc
xor
ficoml
xabort
fistps
jmp
int3
fcoml
adc
sbb
nop
scas
jo
jg
clc
dec
xor
adc
xchg
pop
outsb
cmc
xchg
rcl
icebp
clc
sub
scas
or
clc
dec
mov
fsubr
movsb
mov
jp
loopne
mov
xlat
xor
cmp
les
xchg
and
test
test
cmp
mov
dec
dec
insb
sbb
sub
mov
call
int
pusha
idivl
xchg
into
test
js
sbb
int3
sahf
andl
and
sub
mov
pop
push
add
sub
mov
jno
test
add
xlat
pop
dec
and
pop
xchg
std
cmp
test
pop
jno
scas
add
and
or
adc
pop
or
cmp
mov
jmp
leave
or
mov
cwtl
sub
pop
cltd
sbbb
test
mov
into
ljmp
inc
and
or
repnz
in
fwait
out
ds
xor
push
adc
jns
sub
mov
je
jae
pop
dec
scas
xchg
push
fmull
pop
popl
cltd
sbb
fwait
push
cli
pop
call
test
enter
cli
mov
sbb
lods
sbb
jns
xchg
cmpsb
cmp
adc
pop
sbb
add
dec
cmpsl
hlt
jne
ljmp
and
sbb
mov
fs
inc
stos
test
sbb
lea
sbb
addr16
je
movsb
lock
push
loope
movsb
dec
pop
and
addl
xchg
gs
mov
jno
adc
mov
mov
push
fpatan
and
mov
out
enter
sbb
sub
add
rol
aas
sub
enter
lds
clc
lret
bound
mov
ret
retw
mov
or
ja
sti
iret
pushf
push
xor
push
loope
inc
add
sbb
into
and
fs
adc
icebp
out
dec
xchg
mov
das
testl
leave
test
mov
repnz
adcb
out
cmp
roll
mov
scas
outsl
lret
push
mov
cmpsl
bound
mov
sub
orb
pop
xchg
mov
mov
cmp
dec
cmpsl
adc
popa
push
fnstcw
loope
dec
push
sbb
dec
in
outsl
cmc
pop
jae
jne
leave
dec
hlt
mov
rolb
cli
cmpsl
pop
test
int
pand
call
incl
cmp
push
lahf
xchg
cmp
mov
push
pop
sti
add
imul
pop
fdivrl
notl
dec
pushf
lds
out
fistpl
std
imul
or
lds
sbb
in
repz
test
adc
dec
jecxz
push
pop
inc
fcoms
adc
outsl
xor
movl
lock
enter
mov
jno
adc
cli
inc
outsb
xchg
push
insl
adc
ret
xchg
add
push
outsl
and
push
scas
sahf
outsb
push
xchg
pushf
dec
mov
sub
int3
add
clc
aam
mov
jle
jne
out
xchg
cmp
jo
movsl
xchg
data16
test
dec
and
leave
mov
popf
enter
xchg
push
fs
adc
cmpps
fsubl
dec
xor
loope
fs
pop
mov
test
loop
sbb
js
mov
dec
or
lock
andb
cmp
int3
jae
aad
out
int3
cmpsl
shlb
jae
inc
adc
pop
hlt
aaa
neg
mov
dec
or
jmp
ljmp
or
push
sbb
xchg
push
int
xchg
jnp
arpl
xchg
cli
sub
outsb
test
ljmp
mov
dec
mov
cmp
push
lods
stos
test
xchg
rclb
arpl
push
push
cmp
movb
mov
mov
leave
ss
or
test
add
test
scas
sub
sbb
fisubl
push
inc
loopne
jg
enter
jo
pop
xchg
xchg
xchg
pop
push
dec
mov
mov
lcall
pop
fnsave
stos
idiv
popf
dec
sbb
repnz
add
fmull
in
push
inc
shrb
pop
push
inc
aad
jecxz
or
mov
int3
push
inc
push
mov
cmpb
mov
fnstcw
in
and
repz
cpuid
adc
jle
cmp
xchg
cli
inc
imul
out
sub
mov
push
shrb
lock
jecxz
inc
es
mov
stc
shrb
clc
push
fidivrl
xchg
sub
push
add
xchg
jae
xchg
or
pop
js
xchg
aas
dec
or
pop
xchg
adc
gs
pop
xchg
int3
movsb
add
scas
loop
pushf
inc
outsb
sahf
into
aas
ja
scas
adcb
sbb
mov
push
ret
addr16
ffreep
xchg
fs
aad
sbb
sahf
inc
in
cmc
test
cli
cli
fwait
mov
insl
lahf
ret
jns
sar
pop
or
xchg
loope
faddl
test
add
mov
cmp
lods
jno
push
push
or
xchg
adc
in
clc
pusha
dec
sbb
divb
pop
repnz
mov
arpl
jne
inc
cmpsb
jne
pushf
mov
push
adc
and
outsl
ds
sbb
lods
xor
repnz
mov
cli
fwait
jns
jp
cwtl
xor
sbb
dec
fldcw
cmp
stos
inc
test
pop
push
mov
aam
add
movsb
or
fldenv
cmp
mov
in
and
and
lahf
mov
pop
sub
xchg
mov
dec
jmp
and
sub
mov
pop
jae
adc
das
mov
cmc
jmp
cmpsb
cmp
xchg
mov
in
cmp
daa
int
adc
push
mov
xor
repz
out
je
adc
js
push
xchg
sub
xor
mov
test
push
and
movsb
jb
dec
test
sbb
and
jle
jp
xor
daa
das
ficoml
fbld
cmp
and
add
adc
rclb
std
mov
popa
rcrl
fbstp
mov
jno
and
jp
sahf
push
adc
inc
pop
xchg
push
cld
lret
cmpsl
xchg
pop
into
mov
insb
mov
jne
movsl
sbb
out
push
xchg
mov
xchg
dec
add
mov
es
in
jbe
jg
mov
pusha
dec
insl
inc
xor
pop
mov
arpl
adc
pop
push
pop
mov
cmc
lods
xchg
cmp
loopne
push
add
mov
lds
push
push
xchg
mov
jle
leave
dec
mov
adc
test
cmp
xchg
ss
out
mov
aam
push
pop
or
rorl
lods
imul
dec
psubw
xchg
hlt
iret
test
je
jns
into
mov
repz
psubsb
push
dec
xchg
pop
std
nop
fistps
fsqrt
in
lret
and
stos
push
push
pop
xchg
out
jne
int
data16
adc
mov
push
shl
shr
pushf
hlt
scas
dec
jg
iret
fldl
adc
shrb
inc
pop
sbb
mov
adc
xchg
pop
popa
jmp
push
test
je
dec
in
popf
lea
push
sub
ffreep
sti
rcrb
mov
fidivl
mov
mov
repz
push
int
push
fisubrl
push
lret
sbb
inc
mov
ljmp
jnp
fidivl
dec
dec
or
and
gs
fimull
aad
xchg
mov
push
sub
sbb
lods
mov
mov
jno
mov
add
js
add
mov
dec
cmpsl
mov
xor
sub
ret
xorb
inc
mov
push
cwtl
sahf
fidivs
mov
inc
sbb
fs
pop
pop
mov
xchg
inc
out
call
pop
sbb
cmp
dec
test
pop
std
fisttps
leave
and
sbb
push
cmpsb
arpl
xor
movsl
orl
mov
fnstcw
scas
ljmp
jmp
sahf
mov
fstpl
test
shrl
or
mov
xchg
cwtl
ljmp
mov
xor
jmp
and
imul
jmp
insl
pop
jns
inc
or
jns
sahf
jae
adc
cmc
pushf
out
sarl
ret
mov
and
xchg
and
cmc
out
das
fdivr
inc
sbb
jnp
inc
xor
inc
push
and
out
loop
push
test
xor
call
cltd
sub
test
lods
xchg
mov
mov
mov
popa
add
popf
sbbl
adc
popa
out
vpaddusw
fidivl
cmp
cmp
pop
lret
xchg
push
hlt
mov
scas
inc
mov
pop
push
fistpll
mov
mov
sub
arpl
adc
out
dec
adc
sbb
mov
sbb
das
inc
mov
mov
ljmp
jecxz
sub
fsubrs
cwtl
jg
jb
outsb
pop
lds
ss
push
scas
emms
lret
mov
xchg
repz
push
test
lods
adc
scas
in
or
mov
add
xor
cmp
mov
repz
sahf
inc
push
mov
mov
dec
sbb
push
cmpsb
gs
dec
lahf
adcl
in
jns
jb
loopne
push
jno
adc
inc
cmp
xchg
lods
dec
xor
or
mov
mov
xchg
rcll
addr16
ss
shll
bound
mov
inc
jge
mov
jns
mov
test
xchg
push
mov
daa
mov
pop
iret
jae
jbe
mov
mov
adc
add
adc
mov
pop
mov
xor
aas
sti
jmp
cmp
fsubrl
push
nop
add
xor
iret
push
push
fdivrl
push
push
shlb
lcall
pop
pop
shrb
adc
mov
mov
pop
sahf
in
mov
fistpll
outsl
pop
push
mov
mov
push
mov
push
pop
imul
adc
fstl
bound
ds
test
sub
or
jl
xor
xchg
pop
sbb
jge
ss
je
stos
sbb
ss
pop
stos
sub
pop
cli
or
mov
fstpl
sahf
popl
ss
into
rcl
push
lret
cmovns
inc
xlat
sar
loop
mov
add
sub
adc
xor
leave
xor
xor
dec
aam
gs
cmp
loop
push
mov
push
test
iret
lret
paddb
fdivp
xchg
mov
pop
inc
loope
sub
mov
leave
out
mov
push
outsb
cltd
insb
mov
mov
jmp
inc
test
cmp
into
add
fisubl
testl
xorb
sbb
adc
jns
jns
push
sbb
mov
sti
scas
mov
in
ret
shlb
adc
jne
mov
add
out
mov
and
rcrb
fsubs
mov
push
out
aad
loop
popl
mov
push
jns
sub
out
fs
std
dec
adc
leave
jno
sarl
mov
cmp
imul
idivl
xchg
sahf
fadd
add
jnp
mov
mov
nop
add
lock
inc
lret
xchg
lcall
cmp
cmc
xchg
testl
lahf
bound
dec
out
mov
gs
loopne
fldenv
or
jae
in
add
ljmp
xchg
push
fs
jo
pop
jle
mov
add
sub
mov
push
pop
sub
adc
lahf
mov
ds
mov
mov
test
push
adc
loopne
push
xchg
lcall
test
cmp
sbb
fsubs
sub
and
arpl
int
negl
jle
test
inc
push
mov
cmp
icebp
xchg
inc
mov
lret
fisttpll
ja
mov
ret
dec
dec
sub
or
in
mov
gs
inc
loope
jns
mov
fimull
repnz
test
sub
sbb
popf
fwait
stos
mov
xor
aad
out
lods
outsl
das
fs
es
jmp
daa
nop
daa
js
cltd
push
or
pushf
jg
add
call
jnp
and
mov
mov
in
imul
jnp
add
mov
inc
push
sbb
xchg
js
mov
aas
mov
mov
dec
lods
loopne
dec
adc
jl
xchg
jns
ljmp
pop
pop
cmp
lock
pop
add
fisubrs
les
cmpsl
sahf
sbb
or
mov
mov
movsl
call
inc
movsl
push
fbstp
push
cmp
addr16
test
xchg
xchg
sub
js
mov
xor
jmp
push
lock
insb
out
push
mov
mov
inc
stos
lcall
sbbl
or
in
mov
inc
popf
sarl
out
jo
xor
incb
dec
xchg
sub
cmp
lahf
in
movsb
shr
fnstcw
xchg
icebp
jae
dec
shrl
out
sub
loopnew
aad
sub
cmc
testb
xor
lret
cmp
popa
mov
aam
fisubrs
or
xor
testl
mov
loop
les
test
adc
movsl
mov
add
pop
and
cmp
jp
mov
push
fildl
cltd
imul
daa
push
mov
repz
jne
cmpsl
test
rolb
cs
mov
xor
cli
or
adc
bnd
pop
ljmp
clc
mov
ret
mov
mov
lds
add
mov
rcrl
int
rol
popf
inc
jne
inc
and
test
xor
cmc
jge
movsl
and
ret
rorl
ja
icebp
cld
push
sbb
xchg
insb
out
dec
lods
dec
mov
pushf
fs
push
cltd
iret
int3
inc
mov
add
fbstp
add
fimuls
inc
xor
stos
aad
popf
jne
gs
clc
aaa
jo
cmp
push
dec
mov
rorb
push
add
repnz
out
jnp
int3
pop
xchg
fbstp
jl
ja,pn
fbld
push
and
or
outsb
repnz
and
or
fwait
ret
add
pop
or
subb
jb
sbb
push
ljmp
inc
pop
je
sbb
fsubp
popf
jecxz
xchg
loopne,pt
mov
loop
adc
cmp
cmc
cmp
inc
cmpsl
xchg
jbe
cmc
sbb
insl
pop
mov
in
stc
mov
cmpsb
pop
xor
add
pop
add
aas
aam
mov
cmp
or
fnsave
xorb
test
inc
ficomps
and
rorl
cmp
addl
pop
cmc
stos
out
and
add
pop
sbb
dec
aam
test
insl
sti
cld
fimuls
insl
rcr
les
std
shrl
inc
incb
mov
mov
das
stos
lods
arpl
lods
xchg
fldcw
push
lcall
and
inc
cs
or
mov
pop
add
pop
out
scas
stc
aad
pop
mov
jp
add
addr16
std
sub
pop
jge
sub
dec
xchg
push
pop
lcall
insb
mov
hlt
aaa
push
sahf
cmpsb
add
mov
lods
add
xchg
movsb
xor
jmp
push
mov
iret
in
repz
xor
fs
js
sub
loop
mov
movsb
adc
jg
jmp
cmp
repz
dec
and
mov
ret
xor
xor
pushf
cs
xchg
push
dec
mov
pop
jnp
add
dec
jae
smsw
adc
pushf
cltd
dec
or
or
push
push
ds
cmp
rcrl
push
imul
fsubrl
pusha
imul
jb
pop
cmp
mov
fistpll
out
pusha
lahf
out
sub
out
mov
sbbb
nop
or
jo
mov
push
scas
jno
dec
in
into
inc
or
cs
cmp
ficoml
lock
sbb
hlt
mov
push
sahf
dec
xor
mov
dec
cltd
adc
mov
push
fmull
ret
fsubr
xchg
mov
insl
cld
aas
pop
out
loopne
jne
and
pop
into
mov
adc
dec
minps
adc
aas
jb
dec
cmp
sub
jo
jnp
fidivrl
lcall
flds
inc
or
mov
inc
movsb
clc
jecxz
push
cmpsl
in
mov
test
sub
inc
leave
fdivrs
ret
repz
dec
cs
mov
pop
push
ds
lcall
bsr
cld
push
test
xchg
int3
and
adc
cmpsb
cli
sub
inc
cmp
repnz
sbbb
fisubrl
testl
jl
fdivrl
or
nop
dec
or
enter
adc
mov
xchg
xchg
fcoml
mov
xchg
cmp
stos
jae
adc
cmp
bnd
or
pop
imul
dec
lock
mov
add
cmp
das
or
or
cmp
arpl
clc
pushf
xchg
imul
pusha
push
sbb
shll
cmc
movsb
or
lock
inc
repnz
fcompl
adc
lods
int
int
add
rcrb
add
jl
mov
es
mov
xchg
shlb
and
push
mov
xorb
xchg
cli
cltd
in
pop
ds
repnz
scas
pushf
mov
fisubs
sbb
adc
push
adc
pop
call
dec
test
and
mov
pop
dec
push
insb
push
loopne
in
dec
stc
push
pop
mov
jae
mull
mov
or
sbb
and
std
pop
popa
push
jo
sub
push
dec
mov
mov
mov
push
scas
push
notb
fstps
loopne
or
pop
adc
arpl
inc
jp
cmp
jmp
jbe
clc
mov
mov
cld
xlat
jecxz
das
xor
inc
cmp
jg
xchg
adc
push
test
je
dec
mov
adc
inc
int3
dec
adc
xchg
jns
pop
fwait
sti
test
cmp
push
mov
inc
pop
rorb
pop
xchg
mov
fidivrl
test
lcall
cld
movl
mov
mov
mov
sahf
push
mov
xchg
es
fnstenv
and
mov
cmp
dec
lret
repnz
adc
ljmp
jae
push
or
mov
in
or
je
jb
mov
adc
les
add
or
sbb
inc
dec
dec
dec
ja
or
xchg
add
push
loope
stc
ja
mov
ljmp
dec
fimull
xchg
push
fnsave
pop
mov
dec
scas
shll
jl
dec
dec
bound
xor
test
mov
cmpsb
sub
cwtl
fisubrs
xchg
mov
push
imul
repz
cmp
fwait
jo
mov
adc
cmp
dec
icebp
jbe
sti
pop
xor
jmp
rol
sbb
jmp
inc
stc
or
call
sarb
mov
jle
sub
dec
jo
aas
incl
push
cli
imul
in
inc
push
pop
push
clc
rcr
ds
hlt
fbstp
mov
xchg
mov
leave
mov
movsl
push
and
jl
and
ja
or
cs
sub
bound
cmp
jo
aad
insl
loope
cmp
stos
xor
sub
push
mov
push
sti
add
jge
pop
and
push
ret
pop
fs
or
mov
setb
push
popf
sbb
int
imul
enter
or
pop
cmpsl
dec
ds
xchg
pushf
fucomi
shrl
jbe
cmp
lea
push
cmp
jnp
xor
gs
daa
mov
int
xor
mov
les
sbb
js
std
rclb
push
bound
jne
lock
mov
shlb
or
in
jmp
xor
jne
lcall
pusha
cmpsl
push
push
or
call
xchg
sbb
adc
dec
daa
xchg
cmp
std
leave
add
cld
aam
mov
es
outsl
shl
sbb
adc
ret
pop
mov
cmc
mov
inc
sbb
les
loopne
adc
cmp
es
mov
and
xor
scas
cmp
jmp
sub
jae
dec
bndstx
inc
jne
aas
sub
inc
cmp
sbb
mov
imul
and
mov
mov
adc
mov
jbe
repz
out
mov
fstps
jne
lret
in
out
push
cld
cs
inc
push
lock
jno
rorb
mov
aaa
test
test
dec
pop
mov
xchg
negb
sbb
push
jecxz
xor
icebp
mov
jecxz
pop
adc
ret
loopne
in
leave
mov
mov
lds
xchg
inc
bound
outsl
out
pop
dec
cmp
gs
jno
lea
in
mov
and
cmp
shll
mull
bound
test
test
scas
sub
add
jnp
push
pop
popa
clc
hlt
movsb
sbb
stos
iret
cli
ljmp
xlat
jbe
movsl
inc
jecxz
jb
sub
add
shrb
add
pop
fs
sub
xchg
clc
push
adc
js
jg
cld
loopne
sbbb
and
arpl
mov
sbb
sbb
test
xchg
add
mov
jp
fwait
sbb
pop
aam
and
mov
add
loope
cmp
mov
push
add
sbb
inc
call
clc
xchg
pop
aam
dec
dec
je
inc
addl
cmp
dec
lcall
push
dec
out
aad
loope
sti
and
in
lds
xchg
int
pop
test
dec
rcrb
and
push
push
dec
sub
stc
mov
jmp
xchg
mov
shrl
int3
mov
shlb
lds
pop
aaa
std
lea
loope
shrb
push
fstl
arpl
cwtl
popa
fidivrl
sub
push
and
icebp
popf
xchg
sub
cmp
fwait
lahf
push
ret
jo
pop
cmpsl
insl
adc
ss
pop
or
dec
mov
sti
xchg
jb
adc
mov
int3
and
xlat
push
mov
cmp
xchg
fsubs
inc
jmp
mov
icebp
mov
cli
sahf
adc
ss
test
add
cld
push
fisubrs
jbe
in
dec
sbb
pop
inc
mov
fisttpll
jne
xchg
lahf
jnp
push
jo
push
test
inc
mov
cmp
dec
dec
pusha
dec
ja
adc
lahf
popa
xchg
jle
and
fmull
rcrb
sahf
pop
clc
push
sub
orl
call
rep
scas
outsl
shl
cwtl
loopne
cmc
repnz
mov
mov
fs
roll
inc
sbb
stos
leave
fstps
addr16
inc
loope
jae
loop
fwait
js
stc
int3
add
add
add
push
es
xchg
out
jnp
jp
stc
lret
jnp
push
pop
leave
pop
mov
lret
dec
inc
sbb
out
mov
scas
jne
das
xor
ja
adc
pop
roll
inc
popf
sub
out
mov
loop
sub
fs
insl
jmp
xchg
aam
frstor
ficompl
imul
clc
iret
out
mov
sbb
subb
xchg
or
xor
adcb
movsb
mov
test
jmp
insl
gs
cmovno
cmpsl
cmc
pop
mov
xchg
addl
xor
adc
push
fisubrs
xchg
lods
into
or
test
jge
lds
lods
cltd
mov
sbb
gs
mov
adc
sub
pop
outsl
inc
sbb
test
movsl
je
push
xchg
cmc
or
mov
scas
mov
outsb
jnp
jbe
mov
dec
loope
or
mov
loope
inc
adc
lds
lret
mov
cmpsb
jmp
andb
inc
add
push
je
cmc
imul
dec
fsubrl
test
out
mov
jne
and
push
xchg
leave
add
add
stc
jmp
shrb
pop
enter
dec
dec
mov
jne
dec
sbb
jp
cmp
lods
dec
ret
pop
out
fldt
int3
push
ss
neg
jb
je
or
sbb
cmp
aad
repz
insb
hlt
sbb
fistpll
push
pop
sub
xchg
ret
cmp
cmp
inc
sbb
loope
shr
mov
jns
pop
sbb
or
sarb
test
clc
pop
mov
out
sub
enter
xor
std
in
inc
mov
loope
adc
int3
lods
imul
mov
lea
iret
shrl
outsb
cmp
add
inc
testl
imul
faddl
jp
stos
or
lcall
lods
and
ljmp
push
hlt
stos
cmc
mov
jl
mov
in
jp
lahf
inc
gs
pop
leave
and
adc
cmp
and
push
mov
sub
int
aaa
outsb
lock
sbb
cmp
push
push
mov
pop
jl
mov
pop
cmp
jae
test
lock
add
mov
sub
sahf
sbb
add
test
push
xchg
insl
pop
xchg
popf
outsl
add
or
daa
rclb
dec
nop
add
repnz
adc
fistpll
js
jb
subl
or
dec
stc
xlat
add
adc
iret
push
movsl
jg
sbb
push
mov
push
lea
lcall
mulb
inc
or
inc
pop
js
inc
jne
mov
test
js
push
or
add
fs
stos
fldcw
ss
insl
cwtl
mov
mov
rcl
inc
je
pushf
loope
lock
aaa
and
jno
inc
and
push
sub
jne
aas
inc
sub
punpckhbw
clc
movsb
push
aaa
jno
idivb
outsl
fstpl
fimuls
stc
xor
pmuludq
sub
sub
mov
sub
negb
push
loope
xor
fbstp
jns
jo
fnstcw
mov
hlt
mov
cs
push
and
jl
andl
call
jmp
repz
add
xchg
mov
mov
jbe
dec
xchg
jl
fistpll
js
aad
shll
es
mov
xor
mov
mov
dec
sahf
cmp
lret
jle
jg
dec
jbe
popl
push
inc
dec
stos
sub
xlat
das
ret
push
lds
jge
insb
mov
out
mov
bound
sti
dec
adc
andl
inc
mov
jp
xchg
jle
jnp
or
adc
add
in
add
adc
sahf
add
push
notb
cmpsl
enter
mov
fmuls
dec
or
leave
or
lods
cltd
arpl
xchg
cmp
xor
andl
cmp
icebp
jo
pop
add
roll
je
loope
jp
adc
adc
jle
adc
and
push
stos
dec
aad
pop
rorb
in
div
stos
sub
xor
mov
out
int3
adc
xchg
inc
mov
mov
jp
lcall
push
mov
mov
cmp
adc
rolb
inc
in
add
push
pop
push
push
ss
jnp
ljmp
cmp
jl
jne
popf
rolb
into
call
add
jne
loope
aam
test
cwtl
pusha
and
ret
jge
fists
sub
repnz
movsb
mov
push
sarl
fstpl
inc
cmp
xchg
in
aad
cmp
test
mov
mov
cli
mov
sub
sbb
sub
popa
inc
pop
ss
lret
cld
cli
inc
xor
in
cmpsl
cltd
adc
add
xchg
mov
repnz
rorb
mov
shll
sbb
push
mov
ss
cld
mov
and
mov
and
and
cmpsl
pop
mov
jns
ja
sahf
push
cwtl
mov
shll
xchg
mov
xchg
jo
jg
fisubs
push
dec
out
nop
add
push
push
popa
push
ret
sar
arpl
in
shlb
pushf
mov
aaa
lock
in
cmp
pop
lcall
stos
int
or
sub
xlat
nop
xchg
jp
lcall
xor
pop
fldt
das
mov
hlt
cmp
push
aas
movsb
lock
neg
ja
movsb
sbb
inc
xchg
nop
jb
scas
rclb
les
push
mov
ds
pop
incb
addb
jnp
test
ja
roll
shrl
push
lock
into
xor
fstpl
push
sbb
jecxz
push
out
cmp
ss
ds
mov
mov
les
push
ret
or
inc
repz
xor
iret
push
loopne
xor
das
inc
inc
clc
or
xor
sbb
mov
and
outsb
xchg
mov
lcall
mov
lock
repnz
and
pop
lods
inc
in
push
enter
stos
cmp
add
loop
xchg
cmp
out
mov
push
out
je
inc
push
cld
jne
mov
dec
gs
inc
cmc
in
adc
mov
and
cmp
cmp
outsl
lcall
repz
out
cld
fninit
mov
std
aam
test
pusha
imul
punpckhbw
add
sub
int3
into
dec
in
rclb
or
mov
jns
jbe
push
pop
andb
lds
cs
out
scas
dec
sub
loopne
in
jnp
cltd
jbe
lret
pop
aad
lea
jl
cmpsl
ja
jno
xlat
sbb
xchg
inc
sbb
xor
mov
adc
or
out
sahf
data16
mov
pushf
sar
cmp
add
sub
int
out
sub
mov
leave
mov
pop
test
and
xor
push
dec
mov
mov
dec
sub
stc
push
pop
loopne
mov
pusha
arpl
pop
ret
andl
jbe
lock
mov
jae
das
sub
xor
rorl
cmc
scas
cmove
pop
dec
out
daa
and
stos
cld
xchg
les
push
xchg
fsin
cmp
idivl
push
and
mov
mov
add
insb
stos
dec
mov
sub
dec
ret
sbb
xchg
js
lea
sbb
mov
xor
mov
jo
and
adc
imul
shrl
jmp
rcrb
shll
and
mov
mov
push
insb
jb
aad
push
roll
setns
imul
bound
mov
out
ret
xor
aaa
mov
or
mov
xor
pushf
mov
outsb
or
pop
and
add
inc
cmp
and
hlt
mov
lods
sti
sbb
jo
call
pop
cmc
jl
jge,pn
jno
cmp
lods
or
sub
sarb
fdivrl
and
call
enter
aad
cmp
dec
inc
in
sbb
insl
mov
pop
mov
xor
pop
aam
push
jnp
icebp
call
sahf
xchg
jb
xchg
enter
jno
jp
hlt
add
leave
dec
popf
lahf
sub
jmp
add
xchg
xchg
jns
mov
cs
jae
cmpsl
jle
cmp
jle
cmp
addr16
repnz
repnz
insb
jno
xchg
sbb
xor
stos
cmpb
pop
ds
cmpsl
mov
sub
mov
push
jecxz
sub
or
loopne
push
jbe
and
adc
idivl
or
mov
adc
sub
data16
mov
outsb
outsl
test
mov
jmp
mov
divss
pop
out
cmp
xchg
jne
int3
js
inc
cli
ret
scas
fsubrl
outsl
mov
movsb
dec
cmp
insl
jae
insl
and
stos
repz
arpl
add
ljmp
inc
sub
cli
xchg
add
inc
jp
adc
jmp
xor
pop
inc
mov
pop
test
fcompl
cwtl
jle
mov
imul
xchg
cmp
push
nop
repz
push
push
decl
shrb
xchg
xor
sbb
out
add
jg
or
incb
lods
loope
cwtl
int3
push
scas
ja
iret
or
push
adc
jp
mov
outsl
in
hlt
cmc
lock
add
sti
sbb
and
fsubrs
outsb
daa
xorb
mov
push
mov
cmpsb
mov
inc
sub
les
pop
jg
push
fs
repz
mov
arpl
test
jbe
popl
divb
lcall
or
sub
add
inc
inc
insl
jne
aam
sysexit
add
filds
sub
out
in
add
sti
popl
push
jno
lock
popa
aas
adc
jecxz
cld
ret
jmp
xchg
enter
ljmp
lcall
loopne
cmp
mov
test
popf
adc
xor
lds
or
mov
push
divb
loopne
pop
fadds
pop
addr16
push
dec
mulb
dec
js
scas
sbb
dec
mov
or
xchg
lret
inc
pop
fnstsw
shll
mov
xchg
insb
hlt
dec
mov
add
jmp
push
add
and
mov
test
mov
cmp
mov
push
les
or
dec
inc
pushf
push
adc
jno
int
jecxz
inc
jmp
nop
int
stc
lods
add
fidivrl
cmp
pop
push
stc
sub
aaa
cmp
lds
jno
lock
cmpsl
adc
jmp
add
push
mov
or
loop
test
dec
or
stos
loopne
pop
rcll
xlat
and
jb
mov
imul
in
add
movsb
mov
stc
sub
loop
xchg
hlt
dec
data16
xchg
insb
mov
mov
iret
mov
xchg
rorb
xor
xor
xor
aad
dec
cmp
cltd
xor
push
pop
pop
add
sbb
mov
inc
jle
arpl
mov
and
pop
ret
xorl
aam
cmpb
push
pop
jg
dec
fs
scas
mov
xor
in
js
sbb
out
aad
xchg
adc
jo
scas
leave
xor
mov
mov
mov
fistpl
mov
aaa
sbb
pop
push
mov
inc
repz
es
test
push
add
std
std
mov
stc
icebp
loope
popf
add
sub
outsb
iret
stos
repnz
pop
aaa
adc
outsl
push
movsl
sub
testl
sbb
push
add
sub
mov
popa
inc
scas
shlb
movb
xor
adc
push
inc
push
sahf
data16
mov
mov
insb
push
xchg
and
or
inc
xor
mov
add
mov
ljmp
addl
adc
aaa
mov
and
test
out
sbb
in
movsb
sbb
repz
out
xchg
int3
shrl
insb
inc
shrb
sbb
ja
inc
jo
pop
inc
ret
or
pop
inc
dec
js
pop
jp
push
push
cmp
pop
out
sbb
jmp
mov
sbb
lret
cld
jg
sahf
push
xor
icebp
adc
ja
pop
leave
add
ret
sub
insb
pop
xchg
arpl
ret
push
mov
jmp
xchg
xchg
lret
mov
sbb
lahf
push
ds
lea
or
in
pop
std
dec
xchg
sahf
scas
out
aas
js
fimull
pop
out
pusha
push
mov
lahf
jbe
test
mov
outsl
lret
xlat
xlat
mov
push
sbb
and
sti
ret
inc
in
pop
push
shll
and
leave
mov
push
jbe
scas
aas
xchg
push
push
nop
jae
shrl
ror
out
mov
jecxz
andl
mov
push
pop
stos
addr16
lahf
dec
sbb
cmp
hlt
adc
cs
jne
jno
popf
ret
pop
fisubl
mov
mov
cmpsl
dec
cmc
cmpb
ffreep
mov
subl
je
jnp
cmpsl
enter
ret
addr16
and
jp
aas
hlt
or
mov
jg
pop
cli
stos
jo
mov
mov
pop
cwtl
add
and
jecxz
mov
cmpsl
clc
outsl
add
mov
push
push
jns
call
mov
and
sbb
cmp
add
fsts
jmp
mov
subl
imul
call
sub
rclb
and
adc
dec
in
int3
cltd
das
xor
pop
cmp
push
jmp
add
add
jecxz
daa
fadd
add
jo
dec
pop
dec
in
cltd
pushl
movsl
mov
or
push
mov
in
jge
mov
out
adc
std
ds
and
dec
fwait
lcall
push
jge
push
xchg
es
and
cmp
mov
sub
sub
repz
pop
xchg
jne
pextrw
mov
test
jmp
leave
movsl
inc
and
push
sub
adc
mov
cmp
and
or
out
data16
test
es
scas
and
pop
inc
jge
mov
jnp
fsub
cli
ss
xor
push
imull
xchg
sub
sbbl
dec
cmp
cmpsl
add
pop
ud1
push
dec
push
fistps
xchg
lods
mov
adc
out
or
sub
sub
aaa
push
jp
pushf
mov
test
add
jae
nop
inc
push
pop
sbb
add
rcll
or
lcall
pushf
outsl
std
inc
cli
mov
std
push
mov
cmpsb
and
xlat
ret
fdivl
mov
subl
jmp
lea
mov
sub
mov
and
iretw
sbb
aaa
xchg
or
add
push
xchg
push
cmc
adc
adc
sbb
adc
jl
jle
test
mov
loop
mov
dec
xchg
testl
cmp
in
bound
dec
inc
and
in
or
rcll
test
jg
mov
sbb
dec
and
in
icebp
fdiv
test
dec
mov
cmp
pop
imul
xor
pop
test
cmc
mov
gs
mov
aaa
mov
mov
xchg
pop
rcrb
sub
movsb
mov
imulb
push
stc
inc
push
lret
mov
lods
pop
lods
and
jle
data16
sbb
int3
aas
mov
sbb
mov
jecxz
cmpsl
adc
imul
mov
pop
cmpsl
dec
xlat
jle
jne
cmp
pop
stos
daa
push
push
das
sub
pop
mov
add
in
in
or
outsb
push
stc
jle
pop
jmp
jp
ds
jecxz
adc
jecxz
aaa
setnp
mov
mov
sbb
jne
mov
add
push
clc
ret
movsb
sub
notb
loop
movsl
pop
cmp
stos
pop
test
xchg
mov
inc
mov
or
rcrb
fbld
ret
adc
xchg
mov
dec
push
sti
adcb
mov
push
lea
mov
fwait
and
xchg
outsb
jle
push
jle
pop
cmpsl
cltd
sbb
pop
orl
dec
clc
ret
stos
pop
insl
jecxz
cmp
mov
cmp
push
imul
fnstcw
mov
jl
fs
pop
outsl
xlat
or
aaa
and
adc
and
cld
pushf
push
sha256rnds2
loope
icebp
xchg
sub
fldt
push
stos
mov
std
mov
jl
mov
movsb
imul
sar
add
insb
aam
mov
adc
pop
inc
pop
dec
mov
ror
cli
or
testl
fildll
outsb
mov
push
arpl
or
fcmovbe
sbb
je
xchg
pusha
mov
shll
rcl
rorl
jo
lods
mov
scas
stos
mov
lret
or
fs
xor
and
inc
hlt
int3
dec
cmp
xor
mov
call
xor
mov
mov
leavew
out
dec
lods
int
ljmp
or
pop
lahf
popf
add
stc
mov
sub
rorb
and
dec
adc
xor
push
or
sub
sub
stos
xchg
adc
mov
lret
lock
xchg
fldz
inc
cmpsb
pop
into
pop
lock
icebp
outsb
push
leave
enter
rcrb
aaa
xchg
leave
and
je
fstl
cmp
jns
dec
jbe
int3
out
int
jae
out
mov
in
cmpl
movsl
cmpsl
aas
fsubl
in
cmpsl
xchg
data16
pop
imul
or
mov
filds
mov
repz
ja
andb
jge
outsb
loop
lods
iret
xor
ret
int
dec
loop
jmp
cmpsb
ja
std
push
push
scas
stc
pop
pop
add
adc
dec
in
gs
mov
xchg
mov
outsl
popf
rcrl
sub
sti
lods
sub
stos
fcompl
gs
adc
or
fadds
jecxz
push
sbb
xchg
sub
cmp
stos
sbb
xor
dec
dec
test
nop
dec
sub
fninit
insb
fdivrs
outsb
movsb
stos
rclb
in
cmp
mov
mov
ja
dec
push
fiadds
cmpsl
mov
and
call
xchg
ss
cmp
and
inc
pop
pop
rorb
loope
arpl
mov
jge
sbb
mov
adc
adc
push
xchg
stos
in
mov
ds
mov
mov
rcll
cmp
cmc
popf
movsl
mov
mov
inc
pop
sbb
aas
jmp
pop
sbb
rolb
stc
loop
jecxz
pushf
incb
fimull
rcrb
int
popf
xor
lret
sub
sub
mov
insb
mov
push
stos
mov
fadds
sbb
lahf
jbe
popf
sbb
jne
mov
or
inc
sub
inc
aam
outsl
clc
push
clc
cmp
dec
xor
mov
push
out
cs
repz
adc
ds
mov
clc
inc
push
daa
ret
xchg
jge
inc
shlb
xchg
test
aaa
sbb
fmull
mov
sbb
rorl
cld
negb
pop
test
xchg
sub
rcrb
filds
bound
sub
fwait
or
dec
arpl
clc
iret
daa
jl
stc
push
jnp
xlat
iret
jbe
xchg
push
in
xor
lock
les
and
dec
mov
or
mov
xor
lret
nop
rorl
mov
clc
jne
js
adc
jo
cwtl
jbe
addl
test
cs
ret
jl
mov
aas
mov
jb
pop
cmc
xchg
stos
jmp
adc
je
dec
daa
stos
mov
or
stc
je
nop
repz
jbe
jecxz
adc
repnz
lret
les
mov
push
sti
mov
or
in
add
dec
adc
out
inc
add
jno
mov
inc
or
inc
add
inc
test
sub
and
push
loop
arpl
std
lea
xchg
andl
imul
in
mov
ficoms
out
push
fisttpl
mov
cli
in
pop
shlb
xor
fidivrs
sbb
sarb
aaa
scas
inc
js
outsl
mov
loopne
movsl
fcomps
dec
push
sti
fsubl
lds
dec
aad
lock
cmp
outsl
add
out
mov
fmuls
lret
mov
ret
gs
inc
popf
sbb
sub
adc
dec
shlb
int
push
xor
pop
bound
jns
cmp
mov
ja
mov
test
adc
push
sub
in
cmp
in
hlt
out
add
or
sahf
mov
jnp
dec
push
inc
xor
test
or
mov
jnp
mov
jo
scas
subl
cmp
adc
stos
jge
push
jl
cmp
mov
and
pop
stc
or
jb
mov
sbb
xchg
popa
cwtl
fs
pop
das
out
push
stos
push
pop
das
mov
inc
pop
and
sahf
rcrl
sub
shr
xchg
pop
jmp
fidivrl
cltd
add
xor
in
sub
dec
xchg
dec
pop
sub
sbb
push
pop
add
jnp
stc
dec
xor
inc
insl
dec
push
movsl
xchg
mov
cmp
add
pop
or
pop
inc
bound
mov
pop
pusha
sub
pop
rol
imul
sbb
push
pusha
mov
jae
sub
sub
xchg
xchg
inc
cmpsb
jbe
lcall
inc
or
or
ret
adc
cmp
mov
jecxz
aaa
out
repz
inc
ret
movsl
jl
in
jl
push
pop
pop
pop
mov
mov
adc
or
shll
cmp
pop
sarl
mov
cmp
arpl
outsb
mov
push
adc
xchg
and
inc
daa
pop
insb
inc
xchg
popf
out
xor
cwtl
stc
or
jmp
notl
jne
mov
mov
mov
jge
cwtl
in
mov
nop
sbb
pusha
pop
scas
sub
imul
in
jg
faddp
push
mov
scas
dec
cs
aaa
lds
mov
lcall
cmp
cmc
in
ret
shrl
shl
add
sub
jge
cmp
push
xchg
cmpsl
fcoms
adc
daa
sub
mov
rcr
push
in
mov
sub
lods
out
icebp
pop
aad
pop
daa
pop
or
dec
lcall
aad
add
fcomi
repnz
ret
cltd
push
clc
es
lds
and
cmp
mov
push
dec
push
outsb
lahf
fstl
cmp
pop
mov
rcrb
fisubrs
pop
push
push
dec
jg
inc
scas
aas
fwait
dec
sub
or
hlt
and
outsb
sub
fildll
stc
ror
xchg
loope
ljmp
sbb
lods
inc
loopne
vpaddq
flds
xor
shlb
dec
shlb
pop
push
andl
and
sti
xchg
test
cmp
daa
cmp
xor
les
into
jg
jmp
push
mov
mov
gs
jns
and
mov
out
xchg
in
jb
movb
test
stos
push
xor
sbb
lods
aaa
push
and
arpl
cli
movsl
mov
bnd
cmpsb
jbe
inc
cli
sbb
jbe
outsb
les
xor
shl
fs
jl
aam
add
ret
fcmovne
push
push
cmp
ja,pn
pop
popf
cs
movsl
adc
fsts
mov
add
cs
rorb
insl
jnp
push
push
inc
jno
mov
repz
lret
mov
push
outsb
clc
sub
cmpsb
shr
fisubrl
mov
ss
lahf
mov
ds
pop
popw
and
lahf
ljmp
inc
mov
jne
pop
sub
dec
cli
movsl
mov
les
pop
insb
stos
divl
sbb
xchg
popf
jne
pop
jae
gs
shl
mov
decl
mov
popf
inc
or
jle
mov
xchg
mov
xor
js
cmp
jb
punpckhwd
push
jge
xchg
mov
pop
cmc
lahf
adcl
mov
enter
inc
push
rcl
sarb
inc
add
pop
mov
int
mov
orl
je
fsubp
popl
or
jno
push
push
push
mov
mov
cmpsl
clc
dec
push
les
aad
adc
fbstp
cmpsl
add
adc
xchg
sar
push
arpl
xchg
test
dec
gs
arpl
mov
insl
int
or
cmp
dec
or
sub
add
and
daa
imul
ja
push
insb
popa
xchg
repnz
lds
dec
jg
mov
das
mov
fdivp
outsl
xor
sub
xchg
mov
ja
popf
cwtl
fstpt
test
sub
jns
dec
js
data16
jmp
movsb
mov
lds
cmp
push
adc
push
out
mov
adc
dec
push
mov
clc
scas
test
cmp
mov
stos
pop
or
fildl
dec
jno
shrl
xchg
mov
cmc
in
jecxz
outsb
loop
ljmp
iret
sahf
mov
cmp
stos
outsb
test
xchg
mov
gs
dec
loop
ret
jns
test
shl
sub
pop
or
mov
sbb
aad
hlt
pop
cmc
xchg
fadds
std
dec
push
test
mov
mov
push
pop
push
dec
lret
mov
popa
fnsave
mov
mov
jnp
add
jg
or
push
ja
mov
dec
sub
out
pop
xor
addb
xor
lods
cli
fcmove
aaa
or
loop
pop
mov
lock
das
sub
movsb
jae
dec
mov
or
jnp
jnp
loope
lret
test
lods
mov
pop
add
mov
incl
cli
pop
out
mov
push
out
jb
sub
int3
dec
mov
pop
jge
and
fldcw
push
rorb
mul
pushf
test
jb
cli
mov
pop
pop
movsl
fistl
adc
jae
into
and
dec
dec
add
sbb
test
cld
sub
lods
or
jne
add
div
mov
gs
nop
sub
jnp
add
arpl
xor
ret
pop
sub
hlt
movsl
pop
fucomi
inc
inc
jmp
ret
jmp
ja
add
fisubs
gs
test
imul
inc
cli
jg
sub
mov
ud2
xor
jne
test
inc
push
pop
addl
mov
mov
test
dec
lcall
pop
dec
pushf
push
js
mov
sub
fldenv
sbb
in
push
jo
cmc
jnp
mov
mov
jg
sti
xor
push
or
jo
sahf
xchg
hlt
jmp
sub
imul
cmpsl
xor
pop
lcall
jg
push
mov
ss
mov
cmp
jecxz
icebp
xchg
ret
aad
cmpsb
xchg
jbe
rcrb
or
imul
mov
xchg
mov
cs
sub
jl
sub
xchg
in
orl
inc
jp
dec
xchg
jbe
andb
pop
mov
mov
int3
jl
mov
fcmovne
push
sub
daa
popa
dec
sub
rorl
add
or
stos
lock
cltd
in
lock
pop
sarb
jns
add
ljmp
pop
dec
add
aaa
frstor
shll
inc
lock
pop
decl
in
jae
lret
cmp
pop
sti
sbb
hlt
xchg
push
movsl
jp
nop
dec
in
pop
mov
mov
pop
mov
les
add
orb
cld
sbb
cmp
inc
jns
call
jno
jmp
out
std
jp
or
cmc
cmp
cmp
xchg
jbe
cli
pop
je
orl
and
sub
leave
lods
lret
pop
das
add
jecxz
outsl
movsb
popf
inc
pop
in
fcoml
les
or
and
outsb
inc
loop
dec
in
ss
mov
ja
mov
xor
and
or
mov
xlat
mov
mov
or
pop
and
call
lods
xchg
jne
add
bound
dec
cmp
cmpsb
rcrb
mov
shlb
stos
test
les
vmwrite
mov
mov
mov
daa
lea
stos
adcl
mov
pushf
mov
js
bound
mov
popf
test
bound
xchg
push
test
mov
cmp
scas
adc
ja
pop
test
dec
adc
fsubrs
mov
test
jne
lods
pop
sub
ss
and
fs
add
jmp
pusha
sub
cmp
int3
mov
mov
ret
push
fwait
lea
jbe
cmpsl
mov
lahf
shll
ss
xorb
mov
cmp
or
test
or
xor
dec
mov
and
in
push
mov
pminsw
fprem1
cmp
xor
xchg
mov
jmp
jg
xchg
adc
int3
repz
in
xchg
dec
outsl
cmp
jne
daa
jb
adc
or
iret
mov
add
js
mov
fisubs
sub
push
pop
mov
cmpps
xor
sbb
je
je
sub
pop
adc
dec
lret
mov
shrl
lahf
pushf
leave
cmp
mov
sar
insb
jae
loop
add
or
addr16
adc
push
test
ljmp
mov
mov
or
mov
adc
inc
lods
movsb
mov
jne
push
movsl
pushf
inc
outsl
fs
and
jo
mov
add
mov
or
add
cld
xchg
jo
in
pop
fs
dec
pop
hlt
xchg
cmpsb
push
icebp
push
push
insl
push
loope
shlb
adc
pop
pop
or
xchg
fbstp
xchg
mov
or
adc
orl
sbb
mul
in
jno
sbb
iret
jne
push
pop
adc
sahf
or
adc
shrb
pop
sub
divb
sbb
push
inc
sbb
mov
aam
std
or
arpl
dec
push
mov
andl
sbb
sbb
adc
shr
pop
adc
and
jge
gs
ss
into
idivb
movsl
mov
jo
pushf
les
sahf
pop
std
pushl
push
pop
lcall
dec
lcall
xchg
repnz
jae
mov
shll
or
enter
and
jb
pushf
sahf
test
repz
stos
nop
adc
or
mov
pop
call
push
cwtl
int
pop
xchg
enter
jbe
dec
loope
cmpsl
in
out
inc
call
jl
jle
leave
scas
lret
imul
test
sub
lock
lds
lds
cwtl
inc
sub
roll
mov
lods
or
inc
imul
jle
pop
xor
or
and
xchg
and
popa
iret
cmp
insb
iret
pause
add
push
lods
xor
fstl
nop
push
mov
mov
cltd
nop
adc
in
jne
mov
ds
push
mov
jae
and
push
mov
out
xchg
xchg
clc
mov
pop
aad
clc
jge
lea
inc
inc
mov
sar
in
fldt
int
xchg
out
shll
xor
outsb
stc
test
pop
outsb
int3
or
mov
stos
shll
movsl
in
stos
xor
add
sub
jno
sbb
into
rcll
iret
sti
in
mov
add
fwait
adc
and
push
jl
mov
xlat
lret
ja
inc
sbb
mov
jl
sbb
aaa
add
inc
repnz
mov
mov
jle
in
jnp
mov
jae
mov
idivb
es
imul
mov
mov
mov
rolb
sbb
cmp
lea
nop
dec
sbb
int3
mov
jno
and
loope
int
inc
aam
idiv
adc
pop
sub
and
stc
xchg
xlat
jns
jmp
testb
mov
inc
fsubrl
lock
xchg
sbb
mov
lock
cltd
icebp
int3
push
adc
out
xchg
xor
cmp
pop
xor
add
xor
jg
inc
push
orb
lret
in
or
outsb
ret
mov
into
xchg
pop
push
lcall
mov
jmp
jns,pt
mov
mov
jo
jbe
add
cs
mov
test
xchg
test
aas
mov
fstpl
xchg
xor
or
insl
jns
mov
inc
mov
add
adc
xchg
add
out
lret
shr
std
addl
loope
push
jge
lods
pop
test
daa
cli
pop
adc
mov
sbb
and
push
jecxz
pop
aad
dec
imul
dec
pop
jp
fs
adc
xchg
jns
outsb
sub
shlb
jbe
adc
jno
jae
out
rorb
clc
insb
cltd
iret
clc
jmp
loopne
sbb
mov
jnp
push
cwtl
mov
sub
mov
mov
sub
add
fdivr
jbe
jmp
pop
ret
sub
mov
insl
das
out
aaa
cmp
xchg
rorb
movsl
sbb
scas
mov
in
jge
cmp
test
mov
fimull
add
mov
adc
pop
rcr
out
or
sbb
fsubs
dec
fnstenv
mov
jmp
out
xchg
and
hlt
loop
shl
inc
lcall
ss
and
sahf
imul
adc
lods
jl
stos
pop
inc
call
loop
dec
lret
int
mov
mov
cmp
mov
jns
arpl
rcll
aas
fadds
adc
lods
add
cmp
fistpll
lcall
xchg
xlat
gs
sbb
out
cld
mov
jecxz
mov
ret
push
xchg
jmp
push
out
lock
xor
inc
fsts
inc
push
dec
enter
out
push
cmpsl
xchg
stc
into
insb
mov
andl
movsl
jmp
sbb
mov
fnstcw
int3
shl
fistpll
cmp
mov
sbb
std
dec
dec
sub
pop
sub
jno
or
fadds
fldenv
mov
add
cmp
fwait
bound
faddl
mov
ljmp
testb
adc
test
pusha
push
sub
daa
adc
es
push
xchg
cltd
fsubrs
setne
out
js
std
fdivr
pop
push
cs
mov
xchg
jne
mov
test
jbe
pop
into
cmp
mov
inc
divl
mov
and
xchg
aas
xchg
xchg
imul
out
pop
sbb
ds
xor
or
sahf
dec
rol
dec
pop
cmc
mov
xchg
push
mull
push
xchg
push
les
adc
les
loope
lcall
cmp
add
enter
icebp
inc
cmp
or
fisubrl
pop
repnz
push
xchg
cmp
outsb
int3
xor
aaa
dec
aad
xchg
and
and
push
cli
daa
movsl
repz
cmp
cld
jb
nop
lods
or
jno
xor
xor
mov
addr16
sbb
push
rcrl
push
js
jp
xor
pushl
rorl
fdivrp
and
jb
push
sbb
push
in
jg
mov
std
or
sahf
mov
xor
sbb
mov
popf
fsubs
ljmp
aad
rol
add
jns
ss
cmp
push
inc
ret
sub
push
out
stos
inc
icebp
push
iret
shl
pop
jle
outsl
xor
lret
jno
outsl
outsb
outsl
adc
pop
enter
rcrl
cmp
in
test
stc
sub
filds
push
jecxz
push
mov
mov
imul
inc
mov
dec
fcmovu
sub
mov
jbe
lcall
sub
jp
and
inc
lods
xor
push
mov
sahf
cmp
jle
fcomp
sbb
and
mov
pushf
and
mov
lahf
pop
arpl
add
es
hlt
push
lods
jp
inc
bswap
jne
pop
sbb
notb
rcll
inc
mov
adc
ds
xor
jle
lds
push
sti
dec
movsl
in
fidivl
clc
mov
mov
popa
lcall
sti
ret
cmpsl
inc
fcmovne
lds
pop
mov
push
fists
popf
rcrb
dec
mov
loop
push
insb
clc
xchg
and
hlt
xchg
mov
add
enter
out
inc
cli
adc
xchg
lds
xchg
pop
popf
sub
stos
mov
xor
imul
jle
sbb
pop
xchg
stos
cltd
mov
pop
cmc
pop
pop
dec
mov
out
lds
ret
inc
sub
xchg
mov
sbb
add
jbe
jmp
pop
cmp
ds
inc
mov
ds
ret
cli
add
ror
add
sbb
xor
pop
or
sub
divl
mov
sbb
arpl
pop
add
in
sar
dec
and
out
adc
clc
icebp
popa
fisttps
dec
or
pop
in
mov
sub
leave
insl
rorb
sarb
sub
pop
sbbb
test
push
pop
xor
jne
mov
and
sub
mov
ficompl
or
jne
adc
mov
inc
adc
sbb
out
add
mov
mov
ret
fs
pop
into
jbe
sti
fucomp
dec
mov
xchg
adc
ja
mov
mov
mov
mov
cwtl
popa
test
ss
push
xchg
sbb
push
xor
mov
test
inc
adc
daa
repz
nop
fcomip
xchg
xor
lret
pop
shr
mov
lahf
int
cmp
test
es
adc
xor
mov
mov
cmc
ret
mov
sysexit
pop
inc
bound
adc
and
push
fucom
cld
jg
adc
nop
stos
push
hlt
xor
or
daa
xchg
sub
mov
mov
xchg
pop
fs
and
adc
xor
xor
mov
pop
inc
mov
pop
addr16
es
out
mov
pop
out
xchg
cmc
pop
loopne
sbb
sub
xchg
mov
aaa
sbb
pop
popa
loop
or
xchg
fdivl
mov
int3
out
inc
inc
jne
lret
mov
pop
stc
inc
sub
or
ds
sbbb
push
cltd
std
mov
or
push
add
nop
adc
addr16
xorl
inc
int3
inc
lock
ret
sub
cmp
insl
lahf
mov
pop
xor
xchg
orb
jecxz
sub
sbb
mov
adc
in
stos
and
lcall
pop
sub
mov
scas
mov
in
das
mov
iret
mov
jg
inc
std
clc
lds
insb
int3
pop
mov
fistpl
mov
mov
ja
icebp
jne
pop
pop
ljmp
test
int
testl
xchg
add
dec
jmp
and
mov
sub
lock
shr
out
std
jbe
inc
mov
mov
sarb
je
les
sub
xor
xchg
ss
out
xchg
insb
cwtl
into
or
in
adc
push
clc
pop
cmpsl
ret
lahf
sbb
int
sti
and
add
shll
dec
pop
jmp
mov
repnz
or
andl
mov
aam
xchg
fnstcw
sbb
and
lret
sbb
xchg
push
inc
ficoml
rolb
ljmp
mov
inc
mov
and
shr
dec
cmpsb
clc
je
adc
andl
dec
fldenv
inc
or
cwtl
push
mov
or
stos
mov
xchg
adc
dec
or
mov
aad
je
test
pop
call
xor
insb
push
arpl
rorb
negl
ljmp
sub
adc
push
mov
cmp
sub
push
les
in
jl
cmpsl
fists
inc
subb
into
daa
enter
or
lods
or
adc
cmp
sbb
pusha
jo
jb
out
stos
call
sbb
ss
aaa
outsl
popl
add
aam
xchg
bound
xchg
xchg
push
mov
sar
dec
punpckldq
fmull
inc
pusha
inc
nop
daa
loope
popf
xchg
mov
push
out
mov
stc
push
or
scas
sub
insb
lds
jne
sub
or
jo
stos
cmp
addb
jp
rcrl
imul
pop
imulb
hlt
cwtl
jle
mov
inc
mov
ret
stc
movsb
mov
mov
xchg
jge
adc
call
or
test
pop
rcl
push
add
das
roll
imul
cmpsl
or
and
jne
imul
sub
andl
lcall
in
and
sub
sarl
popa
ja
ja
xchg
into
mov
xchg
or
adc
les
xor
lods
lahf
jae
lea
push
ret
jae
ss
leave
int3
fs
mov
dec
cs
mov
adc
or
ss
jle
adc
push
xchg
stc
cmp
jno
ficoml
mov
adc
or
cld
in
adc
xorl
adc
loopne
push
mov
adc
or
fnstsw
cs
scas
sbb
sbb
loop
push
push
lods
push
sbb
mov
xor
cmp
lds
out
push
daa
jns
and
pop
push
sbb
iret
lahf
push
sub
mov
stos
lret
jecxz
xchg
movsb
mov
jne
push
add
mov
mov
xor
pop
lret
lret
or
mov
lods
shll
subl
xchg
mov
jns
mov
aaa
dec
mov
shl
leave
ds
fidivrs
lret
sahf
xor
cmp
adc
push
jno
repz
loopw
dec
xor
jecxz
mov
pop
xchg
push
xchg
xor
dec
mov
movaps
add
in
insb
inc
xchg
pop
lret
pusha
les
gs
mov
imul
mov
jle
insb
les
test
or
mov
jb
int3
movsl
sbb
mulb
mov
incl
loopne
cmc
in
fimuls
or
pop
add
pavgw
jno
cltd
rorb
out
or
mov
jns
stos
add
mov
ret
scas
cmpsb
daa
arpl
push
xchg
call
pop
mov
loop
or
push
stc
inc
mov
or
pop
inc
test
nop
sbb
cmp
incb
jmp
cmp
aaa
shr
xor
sbb
lahf
out
imul
xchg
adc
enter
jp
xchg
xor
push
rolb
cmp
xchg
inc
mov
outsb
xor
fsts
cmp
add
mov
mov
cmp
js
add
insl
and
stc
int3
lret
data16
rcrl
pop
sarl
and
clc
jmp
popf
mov
outsb
fstpl
jp
ficomps
into
loop
cmp
inc
mov
mov
add
and
subl
andb
push
out
sub
aas
xlat
jmp
test
inc
daa
sub
hlt
sub
cmp
test
and
cmp
adc
push
dec
pop
cli
aaa
daa
mov
stos
mov
lods
add
pop
jg
jl
cmpsl
aam
scas
add
cmp
cs
jmp
or
xor
pop
icebp
loop
repz
cli
outsl
jnp
rcll
dec
push
cmc
xor
xor
mov
mov
bound
imul
sahf
nop
jecxz
or
pop
scas
adc
out
imul
xchg
es
movsl
cmpsl
hlt
and
cld
and
jns
mov
bound
lea
mov
hlt
pusha
clc
sbb
lods
frstor
jp
and
pop
in
fwait
cmp
push
scas
arpl
add
push
mov
sarl
test
cmp
mov
adc
jno
sub
push
mov
lahf
das
sahf
add
popf
gs
mov
ds
pop
mov
xchg
popa
inc
pushw
xchg
scas
mov
mov
add
cmp
shlb
mov
pop
mov
and
cli
jno
mov
lods
movsb
ror
orb
sti
dec
adc
inc
sbb
pop
repz
add
das
jno
push
add
jno
push
add
jbe
loopne
xchg
rclb
push
lock
movsb
inc
lret
push
xchg
shrb
or
pop
sbb
add
rorb
xchg
pusha
and
jg
mov
lds
dec
jp
push
in
add
fmulp
or
lods
sahf
mov
imul
pushl
adc
sub
jno
cmp
sbb
leave
mov
imul
shll
scas
outsl
jmp
inc
in
pusha
jns
insl
fdivs
add
xchg
xchg
dec
pop
inc
enter
xchg
xchg
push
pop
ss
lds
cli
jo
adc
and
mov
insb
push
cltd
lods
xlat
sti
push
inc
loope
dec
cmp
jnp
mov
leave
push
jb
jg
fadd
bnd
xor
cmpsb
jecxz
ja
aad
push
fidivrs
xor
xlat
xchg
movsb
mov
push
and
cmpsb
shll
xlat
pop
cmpl
cmp
out
dec
jb
adc
mov
insb
arpl
fwait
imull
sbb
pop
aad
stos
mov
add
pop
sbb
rol
xor
mov
jl
fildll
aad
dec
cwtl
mov
lds
jnp
cmp
lods
test
push
push
push
add
pop
push
repnz
ss
and
or
je
mov
mov
mov
push
cmp
mov
aam
lret
shl
es
cs
jge
mov
dec
pop
imul
outsb
pop
loop
push
cwtl
imul
xor
mov
icebp
mov
cli
mov
ss
cs
das
out
cmp
push
xor
cmp
push
xchg
mov
aas
pushl
sbb
and
ds
inc
fstps
and
mov
cmpsb
mov
dec
cltd
sub
addr16
cmp
ficoml
sub
add
xor
xchg
shrb
xchg
sub
xchg
xchg
sahf
xchg
sub
sahf
movsb
mov
push
lret
ror
gs
outsl
int3
aam
adc
ss
cmp
imul
mov
sbb
scas
dec
inc
sub
fisttps
hlt
mov
lret
mov
lret
mov
cltd
adc
sahf
dec
xchg
mov
sbb
mov
shll
mov
pop
inc
jmp
jl
pop
mov
inc
fstpl
loop
ja
sbb
test
push
cmpsb
in
mov
cmp
int
idivl
sub
subl
subb
jb
mov
pushf
movsb
cltd
in
sbb
mov
aam
jnp
imul
mov
movsl
je
imul
leave
sbb
cmc
pop
popa
and
push
jo
sbb
mov
dec
rolb
sbb
jle
and
cmpb
pop
aad
lods
sbb
or
mov
pop
sbb
adc
iret
lock
adc
sbb
xchg
js
iret
fwait
mov
mov
les
mov
adc
in
mov
jns
jmp
cmpsb
iret
inc
es
mov
cmpsl
push
push
dec
iret
loop
and
jl
pop
aam
mov
gs
repz
pusha
xchg
shlb
pop
add
add
fdiv
into
mulb
adc
cmp
outsb
sbb
nop
add
lods
adc
cmp
jns
inc
mov
mov
mov
cmp
arpl
test
pop
cmpsb
pop
xchg
dec
cld
push
cli
jnp
adc
hlt
orl
loope
scas
dec
mov
cs
rcrb
mov
pop
mov
push
cmpsl
out
sarb
jns
in
sbb
sub
test
std
jg
leave
fstpt
movsl
std
cmpsb
xchg
mov
mov
dec
test
push
out
test
scas
add
pop
push
jo
xchg
divb
xchg
and
mov
mov
mov
and
jae
fndisi(8087
lods
inc
pop
pop
xchg
stos
ret
xor
outsb
insl
mov
xor
cmp
dec
add
scas
ja
or
iret
cwtl
inc
mov
outsl
cmpl
sbb
mov
adc
sub
lcall
jp
cs
imul
scas
fildll
movsl
add
cli
cmc
gs
movsb
lods
dec
cmc
notb
inc
jno
push
repz
mov
or
sub
ret
add
ss
or
test
lea
jae
jbe
mov
jne
daa
jae
cmp
inc
xorl
push
inc
std
lods
into
das
gs
movsl
mov
lret
test
jge
jnp
fwait
jmp
bound
stc
push
xor
sbb
jo
xchg
mov
cmpsl
aad
leave
cmp
xor
daa
dec
pushf
std
mov
mov
mov
int3
int3
movb
pop
xlat
sub
mov
push
adc
sbb
and
cmp
stos
bound
pop
dec
gs
ret
enter
and
cmc
or
push
sahf
std
aad
les
lcallw
push
fmuls
jbe
cld
cli
cmp
cwtl
lahf
xor
test
xchg
hlt
push
sub
dec
xchg
ljmp
xor
mov
jae
mov
sub
mov
push
jbe
jecxz
test
dec
sub
push
inc
sbb
stos
std
or
ss
push
mov
sub
dec
fs
xchg
xchg
insb
test
mov
or
out
rcrl
repnz
das
push
mov
jg
inc
mov
enter
pusha
int3
sahf
popf
push
insl
gs
cmpb
pusha
dec
mov
cld
lods
mov
repnz
shll
pop
mov
mov
adc
jo
lahf
ret
push
xchg
cmovae
rclb
fisttpll
pushf
push
dec
cmp
add
lahf
jl
outsl
adc
sbb
sahf
cmp
xor
fwait
sub
fisubrl
fcompl
inc
movsb
xor
adc
push
lret
fimuls
cmp
mov
stc
mov
scas
jo
in
sbb
mov
int3
xor
lret
in
es
xchg
cli
movsl
outsl
stos
xor
lahf
ljmp
movsl
dec
or
pop
sbb
in
movsl
mov
leave
scas
and
cltd
and
push
popa
xchg
push
dec
cmp
out
out
lods
mov
fdivl
popa
push
dec
cwtl
daa
xchg
insb
hlt
push
mov
pusha
push
pushf
xor
testl
or
lfs
dec
jb
jno
push
insl
cwtl
insl
xor
nop
jb
idivl
ficoms
jge
data16
add
sbb
jb
sbb
xchg
scas
mov
pop
out
pop
jg
push
sbb
fmull
std
push
xor
mov
mov
aam
mov
mov
xchg
and
xor
jp
cld
pop
aaa
hlt
imul
mov
inc
mov
int3
or
jge
movsl
je
lea
or
mov
cmp
shrl
outsb
int
jg
xchg
ret
jbe
adc
lret
fldl
out
xor
test
divb
dec
frstor
sbb
int3
fs
int3
push
in
xor
jl
das
dec
ljmp
cmp
fs
pop
stc
mov
lahf
nop
into
out
or
fdivl
lret
adc
push
push
xchg
push
negb
mov
mov
push
pop
ja
test
adc
cmp
and
xchg
jb
xchg
test
sbb
add
repnz
jbe
xor
mov
add
js
xor
cwtl
push
inc
sub
aaa
sbb
cmp
clc
int
xchg
cmp
shlb
xlat
mov
in
lret
push
test
out
and
andl
mov
test
sbb
jno
loope
cltd
fildl
or
loope
pop
fdivl
dec
sub
and
sar
xor
push
mov
dec
les
outsb
inc
pushf
add
cmp
andb
add
mov
cmc
xchg
xor
icebp
lret
out
mov
dec
loop
dec
shlb
push
shl
add
adc
mov
xor
mov
push
or
popf
jns
and
add
subl
dec
dec
mov
jge
and
das
inc
mov
pusha
test
repz
jns
clc
jge
mov
jae
and
xchg
data16
cli
add
js
mov
sub
je
mov
orb
mov
das
call
xlat
cltd
cmp
and
pop
push
ss
xchg
pop
test
lods
push
aas
in
inc
mov
push
adc
aam
add
mov
and
daa
xchg
and
xchg
pop
inc
xchg
sub
verr
xchg
xor
inc
mov
popl
int3
sub
jg
js
pop
movsl
ss
jns
pop
xchg
cmpb
mov
insb
ret
fisubrl
add
mov
aaa
lret
push
rcrl
or
jbe
inc
sbbl
mov
roll
xor
repnz
mov
movsl
adc
or
xor
decl
jle
or
rorl
shrb
add
and
mov
mov
inc
xor
rorb
in
sti
xor
in
orb
mov
cmp
in
rorb
in
insl
out
xchg
imul
adc
jge
push
xchg
test
lahf
adc
test
loop
xor
xchg
push
dec
arpl
movsl
or
lret
in
packuswb
mov
testb
das
fsubrp
lods
cld
mov
mov
adc
mov
mov
jbe
std
mov
mov
add
fs
adc
fsts
std
dec
sahf
cmpsl
dec
or
push
psubusw
pop
lcall
dec
into
les
mov
addr16
xor
xchg
flds
sbb
popf
adc
cmc
mov
stos
ss
daa
pop
in
pop
mov
jbe
push
ret
xchg
mov
mov
sub
sub
jle
jp
dec
mov
sub
sbb
sub
mov
ficoms
jb
arpl
cmp
mov
repz
pop
fistpl
pop
and
call
dec
or
dec
in
mov
mov
and
cmp
cmp
sub
add
lods
bound
lret
cmpsl
adc
sbb
lods
inc
lret
push
xchg
hlt
ds
xor
pushf
fidivrl
pop
dec
mov
test
mov
or
movsl
addb
je
and
pushf
pop
mov
push
push
jl
call
loop
stc
push
adc
inc
movsb
call
repz
xor
lcall
dec
lea
push
adc
lods
adc
jp
mov
js
in
mov
out
mov
push
rcrb
movsb
mov
jge
fistl
dec
mov
add
add
aad
mov
loopne
adc
ss
aaa
cmp
ljmp
fcmovb
inc
push
dec
icebp
filds
repz
dec
imul
xchg
mov
sub
lea
mov
sar
dec
movsl
imul
loope
cmp
mov
dec
dec
cli
addl
mov
jb
add
ret
xor
mov
pop
push
push
xor
cmpsl
stc
sti
insl
dec
pop
adc
add
and
in
pop
mov
jg
out
inc
leave
dec
repnz
lock
rcr
mov
enter
popf
adc
in
or
push
test
push
and
shrl
je
shrl
addb
jmp
in
cs
lea
enter
inc
push
scas
movsb
pusha
outsb
mov
push
je
ror
js
sbb
xlat
add
rolb
dec
xlat
sahf
xchg
in
cmp
incb
js
adc
mov
lock
sbb
or
push
push
insb
repnz
addb
stos
insb
divb
outsb
push
lret
sbb
sbb
popf
rol
out
xlat
nop
push
cli
push
lret
ja
cltd
xor
push
movsb
and
in
mov
popa
fidivrl
adc
fmul
daa
cmp
cs
add
mov
scas
fs
pop
sub
aas
lret
in
ffreep
scas
xchg
sti
inc
fnstcw
leave
pop
pop
pop
sub
bound
pop
mov
test
cmp
push
adc
mov
fcoml
movsl
add
lret
cmpsl
les
and
in
mov
or
loopne
sbb
lret
fldt
inc
gs
insl
inc
jle
adc
xorb
mov
es
xlat
fdivs
fnsave
xor
xchg
lret
sub
fldcw
out
inc
ds
cmc
jmp
popf
xor
clc
popf
dec
test
xor
mov
mov
test
xchg
sbb
jl
ror
cmp
test
cwtl
js
cmp
adc
sahf
popa
xlat
sahf
pop
cli
cmc
hlt
xlat
or
pop
leave
pop
mov
cwtl
cmp
flds
out
sti
inc
dec
adc
xor
xor
fnstenv
mov
sbb
aas
jle
push
aas
jno
jge
mov
dec
and
sbb
stos
lds
clc
sti
cmp
ret
jmp
lret
dec
sbb
inc
ja
push
sbb
pop
inc
inc
clc
lds
popa
cmp
aad
push
test
mov
jb
lods
sbb
xor
mov
dec
outsb
jmp
insb
orl
ds
sub
pop
pop
sub
cli
icebp
push
data16
in
gs
add
fimuls
xchg
xchg
fimuls
or
std
push
jnp
and
push
les
dec
ds
ljmp
inc
fwait
xor
push
lds
add
das
sbbb
adc
cmp
mov
shll
mov
test
lcall
mov
pusha
or
sahf
fmul
adc
mov
cmc
xor
pop
pusha
jno
scas
jae
jmp
mov
test
ds
adc
sbb
and
sub
mov
scas
add
mov
lods
and
into
dec
dec
jbe
int
push
jmp
outsl
js
mov
ret
dec
test
sub
fdivl
xor
ds
shlb
and
ror
mov
mov
xchg
ja
inc
cmp
out
sub
repnz
pop
incl
mov
repnz
sub
daa
mov
clc
sbb
jecxz
pop
jle
scas
ret
andb
imul
cmp
cwtl
sbb
push
or
jo
out
push
sub
fstl
mov
and
clc
adc
mov
lahf
push
mov
xchg
hlt
push
cmp
fnstsw
stos
mov
out
inc
mov
in
loopne
xor
jo
aam
out
ja
mov
cmp
push
bound
pusha
xor
xchg
mov
mov
jne
ja
xor
add
in
shll
or
outsb
call
rcrb
mov
xor
leave
aam
es
adc
cli
mov
ss
inc
out
mov
popf
jl
jg
nop
xor
and
stos
or
or
insl
xorl
mov
jne
call
jne
std
push
lret
inc
test
add
jmp
flds
xor
mov
pop
jne
lret
rclb
lret
jne
movsb
int
sub
mov
outsb
fstl
lods
xor
mov
lods
out
mov
sbb
jl
bound
clc
fdivs
or
shl
pop
pop
inc
sub
cmp
ret
scas
xchg
ljmp
pop
sar
and
out
cmp
mov
push
push
pcmpgtw
and
push
cld
scas
inc
test
outsl
clc
jb
sbb
cmp
cmp
lcall
jmp
outsb
test
mov
dec
sub
xor
xchg
popa
enter
ficoml
mov
xchg
repnz
jmp
popf
fs
faddl
xor
adc
sbb
push
jo
int
cmp
popf
dec
mov
mov
outsl
daa
xor
fcoml
mov
subb
movsb
js
push
xor
mov
dec
bound
push
mov
fwait
adc
pop
ljmp
repz
outsl
push
pop
add
xor
dec
gs
push
xchg
in
cmp
cmc
mov
out
sbb
arpl
out
jne
adc
ja
cmpsl
push
xchg
mov
das
mov
dec
in
sub
repz
jecxz
mov
dec
sarl
push
pusha
xor
cwtl
orl
jb
repnz
and
rcll
out
xchg
xchg
push
sbb
data16
jae
fsubrl
rorb
lock
outsb
sti
jo
lock
jne
popa
mov
adc
aas
jae
and
xchg
imul
outsb
bound
xorb
lock
mov
and
out
outsb
sub
adc
fwait
pusha
pop
gs
xchg
mov
aam
or
add
es
dec
shll
stc
call
in
lea
inc
adc
xor
or
xchg
int
arpl
adcb
jg
aam
sub
aam
imul
sub
or
push
loope
mov
shll
xor
mov
into
arpl
in
imul
inc
and
sbb
dec
push
sbb
rorl
dec
fstp
dec
ds
imul
pop
adc
add
popf
or
or
test
xchg
push
pop
insl
cmp
inc
add
or
fsubs
cmp
and
roll
xor
ret
mov
inc
mov
repnz
jl
rcl
mov
inc
mov
sti
dec
pusha
sarl
xchg
cwtl
dec
mov
mov
mov
xchg
cmp
outsl
sbb
test
sub
inc
push
mov
inc
or
in
add
outsb
lds
ja
inc
xor
pop
neg
cmc
stc
jbe
or
mov
ret
xchg
xlat
sbb
int
loopne
test
sbb
lods
add
jecxz
in
add
mov
cld
insl
push
lahf
mov
push
pushf
adc
fsubrs
fcoms
sti
and
pop
pusha
push
lret
rcll
add
test
lods
push
push
clc
sub
inc
mov
xorl
dec
in
das
inc
xor
fistl
mov
mov
and
fistpll
dec
jge
push
int
or
adc
mov
es
xchg
add
or
xchg
mov
and
loope
cmp
subl
sbb
sbb
orl
or
adc
inc
xchg
scas
pop
xchg
lods
sbb
add
cld
sub
jge
test
dec
or
loop
add
stos
rolb
imul
push
dec
adc
aas
fdivl
dec
sbb
cmp
out
ljmp
cmp
mov
fmul
push
sahf
jmp
lds
pop
test
mov
bound
in
ljmp
lcall
adc
push
mov
leave
mov
xchg
push
hlt
jb
mov
adc
outsb
mov
dec
lock
pop
sub
jnp
rcrl
dec
pop
int
nop
sub
cmpsl
adc
mov
jl
add
aad
xor
les
xchg
mov
xchg
or
push
popa
das
or
mov
adc
fists
inc
pop
and
and
jbe
pop
jae
inc
in
inc
in
rolb
cmp
movsl
mov
xchg
mov
jg
test
movsb
mov
mov
mov
or
inc
nop
jno
icebp
push
outsl
sub
mov
inc
cli
ljmp
cmpsl
sbb
lds
jno
mov
gs
push
cmp
dec
aad
notb
subl
lahf
aad
lods
data16
mov
popf
ljmp
pop
or
fwait
push
jecxz
mov
das
push
sbb
cmp
rorb
aad
test
jmp
mov
dec
rorb
aam
movsl
ret
xlat
jo
stos
add
cmc
fstpt
rcrb
inc
pushf
jno
out
insb
pop
mov
push
xchg
sti
lcall
mov
add
lods
icebp
or
sub
outsb
cmp
sub
icebp
aad
mulb
push
mov
xchg
xchg
or
dec
movsl
ret
sub
stc
dec
dec
xor
and
or
sbb
aam
test
dec
fisubrs
inc
jge
shrb
rorb
dec
add
mov
insl
jnp
insl
sbb
mov
enter
push
aad
pop
call
mov
js
bound
adc
daa
jg
jbe
das
xor
add
out
aas
call
lds
or
in
scas
sbb
xlat
cli
mov
loopne
pusha
imul
push
call
push
or
cmp
sbb
dec
fstl
aaa
jb
sti
push
jne
pop
andb
and
xor
das
outsl
stos
push
out
sub
dec
int3
call
dec
clc
repnz
mov
es
sbb
push
movsb
pop
jle
xchg
jge
sub
lret
xchg
jmp
push
mov
push
fsubrl
mov
or
push
xor
adc
popf
fucomi
shll
pusha
lret
repnz
jmp
cs
jno
loope
es
adcl
rorl
adc
movsl
jecxz
int3
ret
scas
ret
cltd
xchg
mov
jg
cld
je
or
fcompl
and
xchg
sub
and
inc
or
and
mov
outsb
das
lret
test
add
and
cmp
hlt
sbb
int3
sbb
inc
lret
and
jbe
hlt
cmp
sbb
icebp
push
xchg
cmp
loope
insl
add
xchg
push
xchg
jns
fadds
aam
inc
inc
movsl
test
loopne
cmp
mov
adc
aam
mov
dec
xchg
ret
shl
daa
jmp
loopne
inc
inc
jmp
scas
ljmp
mov
xchg
inc
sar
and
clc
xchg
aam
cli
movsl
cs
lea
and
jno
push
mov
fisubrs
aam
ss
les
rorl
daa
xchg
add
push
jmp
leave
shrl
add
scas
adcb
mov
lods
and
cmp
stos
inc
mov
dec
setg
xchg
inc
aas
sbb
pusha
insb
mov
sub
push
test
pop
mov
popa
pushf
lock
fnsave
fsubs
cmp
lods
loope
mov
imul
xor
das
jmp
mov
inc
jns
sub
xor
mov
pop
sbb
xchg
mov
cs
movsl
cld
or
repnz
data16
cmp
dec
cmp
jbe
add
test
ljmp
loopne
or
jecxz
pop
xchg
pop
fldcw
ficomps
add
or
jae
lods
pop
adc
mov
or
xchg
out
sbb
dec
pop
int
cmp
aam
shll
fs
xchg
cmpsb
shrb
cmpsl
pop
xchg
scas
mov
jmp
mov
sub
xor
ret
arpl
or
outsb
xchg
loopne
and
imul
repz
xor
cwtl
addr16
jo
repz
pop
call
out
sub
int
sub
xchg
int3
out
fwait
mov
xchg
lods
sub
aas
bound
mov
xchg
test
inc
xor
mov
stc
mov
ja
pop
and
sub
pop
pop
mov
ret
mov
dec
push
pop
add
loope
daa
fadds
imul
xor
in
sub
pop
jle
xchg
and
fmull
notb
push
sahf
enter
lds
bound
fsubrl
sbb
dec
gs
fucomp
xchg
and
jae
mov
divb
mov
lds
ret
adc
xchg
popf
or
outsb
jl
into
mov
sbb
vcmpss
shr
sarb
push
lcall
jmp
loop
sub
mov
in
imul
mov
gs
mov
adc
movsb
jnp
std
call
imul
arpl
pop
int
jge
and
push
ja
and
xchg
adc
push
mov
inc
mov
push
sub
es
sbb
fadds
sub
das
in
jp
jl
loopne
add
xor
jnp
cltd
test
sbb
pop
cld
arpl
mov
mov
and
cli
fimull
xlat
xor
fs
jge
clc
or
js
daa
out
inc
fistpll
add
leave
push
sub
jg
mov
daa
xor
sbb
das
add
mov
addb
sbb
add
push
stos
push
call
das
daa
lods
mov
loop
cwtl
jg
fcmovb
sahf
loope
cmp
add
push
inc
dec
stos
xor
sub
les
jae
jbe
or
mov
fcmovb
cmc
mov
lds
xor
scas
and
push
mov
data16
and
cmpsb
mov
mov
sti
ss
out
sub
lret
pop
and
sbb
pop
xchg
mov
adc
scas
mov
xchg
sti
out
mov
push
dec
insb
add
push
mov
test
pusha
pop
mov
cmpl
iret
or
xor
push
lds
int
movsb
mov
adc
adc
fdivp
jmp
hlt
test
lret
jmp
and
popf
add
xor
cltd
addr16
mov
xor
in
jl
mov
pop
dec
add
push
sar
test
add
dec
add
fists
cmp
cmp
inc
jns
pusha
jl
mov
mov
mov
push
ret
push
idiv
popa
test
and
xor
push
data16
loope
scas
or
nop
lods
mov
mov
int
inc
and
cs
lods
es
in
insl
xor
mov
mov
ja
fldl
or
movsl
mov
mov
mov
sub
mov
fbstp
imulb
mov
loope
push
es
pop
pop
das
xor
sti
fucomip
test
in
out
push
shr
sub
jae
cmc
pop
mov
lret
ret
and
dec
jmp
aam
scas
lcall
and
xchg
lcall
imul
cs
cli
cmc
mov
inc
movsb
mov
adc
ljmp
xor
scas
outsb
xorb
mov
fwait
pop
ficoml
jecxz
dec
dec
adc
dec
sahf
lret
pop
in
jecxz
cmp
stc
add
and
pop
xor
and
xor
xorb
mov
dec
inc
test
push
cli
fwait
test
ja
addb
inc
adcl
pop
or
call
clc
insb
mov
pmovmskb
scas
pop
lds
mov
imul
loopne
mov
or
pop
incb
jbe
movaps
lds
jne
call
jmp
movsl
out
cmp
daa
imul
jae
stos
mov
mul
in
xor
sbb
dec
adc
scas
call
and
out
leave
aas
xchg
test
sbbl
push
sbb
movsl
pop
pop
mov
pop
std
sbb
mov
cmp
sbb
je
fucomip
and
shlb
sbb
xor
push
lret
into
loopne
jnp
gs
outsl
mov
push
or
sub
push
pop
hlt
lret
push
xor
ret
jge
or
and
sub
int3
mov
push
shll
shlb
inc
fnsave
subl
ret
popf
push
xchg
shlb
out
int
push
into
add
arpl
loopne
mov
sbb
cmp
pop
sub
push
jge
fwait
cltd
or
inc
ds
sub
fldt
push
fucom
jp
mov
mov
dec
in
or
addr16
jb
pop
xchg
lds
dec
xchg
jnp
sub
sbb
out
fs
popa
movsb
inc
sub
mov
out
daa
xor
inc
in
mov
adcl
xor
pop
cmp
jne
aad
clc
pop
sbb
out
pop
cmp
pop
stos
repnz
sahf
xchg
mov
add
in
into
add
out
cwtl
sub
shrb
xchg
in
or
dec
lea
or
mov
movsb
ret
jb
ret
ret
push
cmpsl
enter
xchg
cmp
sbb
dec
jp
adc
lock
iret
xor
mov
sbb
sahf
or
push
xor
pushf
es
aad
loope
in
fnstcw
jae
push
add
outsl
inc
or
inc
out
lods
loope
dec
lods
test
test
add
cld
ljmp
xor
test
inc
mov
ja
adc
inc
mov
sti
or
stc
lret
js
call
sbb
cmp
jb,pt
es
fdivs
test
lods
lret
pop
add
shr
inc
inc
and
push
popf
lahf
or
or
lods
mov
sub
int
sub
pop
adc
test
shll
mov
lahf
xchg
rolb
js
add
cmp
mov
inc
int
adc
cmc
loopne
rcrl
push
inc
and
inc
mov
sbb
pop
orb
aaa
ss
jbe
sbb
dec
xchg
and
pop
aad
and
pop
and
push
sub
adc
fsubrs
mov
adc
add
cwtl
in
fidivrl
jnp
stos
subl
pop
push
sbb
imul
clc
insl
push
mov
shrl
daa
repz
mov
xchg
sub
pop
pop
ret
jl
rcl
and
dec
xchg
pop
lods
gs
stc
call
sarb
cmp
ds
pop
nop
fsts
pop
jmp
sahf
add
lea
jbe
cmp
dec
mov
mov
aas
pop
in
pop
shrb
out
push
mov
in
mov
adc
adc
jmp
jmp
ds
mov
shlb
aad
cmp
imul
dec
xchg
push
loopne
cmp
and
push
out
out
inc
hlt
mov
inc
cmp
push
push
or
jle
or
xchg
shl
add
outsl
push
xor
pop
dec
add
outsl
xor
dec
dec
insl
inc
dec
stos
add
cwtl
outsl
xor
es
xor
nop
add
mov
repnz
out
sbb
xchg
lods
hlt
call
out
mov
rcll
or
sbb
jg
pop
vmovq
scas
pushf
pop
push
mov
lret
jo
scas
or
add
out
mov
jp
and
add
rclb
sub
lods
cmp
dec
sahf
mov
xor
mov
aas
xlat
testl
xor
aas
test
fidivrl
add
jo
xchg
jge
pop
fisubs
jmp
ja
stc
cltd
mov
aam
sbb
cmp
ljmp
loope
xlat
mov
adc
and
or
mov
pop
shlb
lret
mov
test
and
ljmp
loope
mov
add
add
xchg
xor
fwait
adc
sub
shll
jnp
cmp
push
inc
push
xor
out
in
popf
mov
inc
sbb
dec
add
bound
aad
in
lret
into
std
push
aad
pop
subb
cwtl
sub
aaa
bnd
add
fs
pop
loop
imul
mov
xchg
or
repz
sbb
pop
rorb
addl
aas
or
punpckhbw
pop
ja
and
mov
sahf
inc
test
aaa
out
push
pop
in
jno
push
cltd
iret
adc
add
mov
ljmp
out
mov
or
lea
sub
sub
lea
add
sbb
xor
dec
sbb
mov
sahf
movsb
call
cmp
leave
cmp
push
inc
or
push
fisttpll
mov
push
in
test
and
call
push
in
push
push
loop
and
int3
leave
sbb
fisttpll
sbb
add
pop
mov
std
sub
mov
jae
jle
or
mov
fists
ret
push
mov
jnp
and
sub
out
mov
adc
sub
xor
lret
sub
popl
movsb
jecxz
incl
test
out
test
xchg
cmp
cmp
cli
mov
xor
shlb
mov
push
or
and
aaa
inc
scas
iret
inc
lods
orb
pop
mov
mov
inc
xor
pusha
std
push
push
mov
push
xor
js
aaa
sete
mov
mov
sbb
pop
stc
cmpsb
mov
pop
jp
dec
sbb
mov
adc
jge
mov
sub
in
nop
xchg
mov
dec
push
aaa
push
jbe
cmp
and
adc
sbb
jg
xor
data16
loope
lcall
mov
inc
inc
and
sti
sub
mov
pop
mov
out
pushf
mov
shlb
test
cmp
pop
addr16
lods
jb
xor
xchg
sub
lret
inc
ret
divl
nop
pop
jmp
xchg
adc
cmp
sbb
cmpl
jmp
and
mov
cltd
push
xor
pop
inc
sub
call
sbb
pop
cwtl
pusha
jge
dec
fdivrl
insb
jno
in
daa
ficoml
or
pop
shrb
push
out
mov
pop
aad
push
or
cmc
data16
enter
ss
in
and
mov
sbb
push
jnp
and
clc
push
inc
or
cld
cmpsb
pop
jmp
cli
sbb
push
jae
ja
test
dec
mov
and
push
pusha
in
fisubs
adc
mov
stc
jno
ja
fmull
iret
lods
addr16
mov
insb
mov
sbb
xchg
adc
adc
jl
outsb
mov
push
push
test
or
addr16
pop
mov
mov
push
sub
js
cs
and
adc
adc
xor
divl
inc
adc
inc
and
push
push
cld
icebp
xor
in
mov
loope
jle
add
or
pop
xor
enter
shll
adc
push
nop
stos
movsl
and
sbb
xchg
xchg
or
cmp
lcall
sub
xor
mov
adc
mov
rolb
push
push
repnz
adc
out
movsb
push
int
sub
and
bound
mov
xchg
add
int
add
dec
pop
rol
fs
out
sub
cmpb
movsl
sti
lahf
pop
loopne
push
push
mov
ret
loopne
fisubrs
xor
add
cmp
jae
stos
inc
dec
cld
out
std
dec
pop
or
rcl
or
or
mov
daa
pop
enter
call
sbb
scas
in
dec
ljmp
inc
sarl
push
xchg
dec
xchg
repz
sub
dec
ja
sub
xor
mov
sub
jo
jns
dec
mov
cmpsb
mov
pop
xchg
sbb
lret
mov
js
or
jo
cli
xor
mov
in
mov
sub
mov
and
dec
stos
std
pop
scas
loopne
dec
mov
arpl
sbb
shll
enter
lods
pop
xchg
jb
imul
adc
jno
mov
xlat
sub
arpl
push
je
dec
xchg
and
sub
fidivs
cmp
pop
xchg
pop
int
pusha
xchg
test
cmpsb
mov
push
add
out
add
mov
mov
out
mov
xor
insb
mov
inc
mov
fcmovne
inc
stos
iret
pop
dec
sub
push
mov
sbb
push
int
xchg
push
jl
cmpsl
dec
pop
loop
xor
call
mov
int3
je
daa
xchg
sbb
out
mov
inc
push
pop
insl
popf
cmp
sahf
mov
imul
aad
pop
inc
push
push
cmp
enter
jo
inc
mov
push
xor
add
mov
std
mov
push
push
out
mov
testl
ja
mov
push
popf
test
ds
adc
sub
ljmp
or
and
outsb
aam
mov
ret
les
push
fisubrs
fnstsw
fadd
shrl
jp
push
call
fs
fimuls
add
out
addr16
jle
inc
inc
dec
out
outsb
mov
ss
push
sub
scas
mov
imul
inc
mov
enter
jp
sub
ds
adc
adc
iret
aam
rcrl
out
adc
lock
push
push
lea
sub
loop
mov
lods
lods
shrl
sub
xchg
and
fmuls
add
gs
insl
push
clc
cmpsb
sbb
lret
outsl
sbb
add
xor
sti
mov
bound
orb
inc
sub
inc
scas
add
push
pop
adcb
mov
jmp
mov
mov
fdivp
jle
insl
push
add
in
inc
or
inc
rclb
jl
out
push
jmp
dec
sub
xlat
movsb
sti
sbb
mov
sahf
aaa
mov
sub
mov
push
js
inc
sub
aam
enter
jbe
icebp
rclb
jae
push
xchg
cmovno
lret
sbb
inc
lods
or
ret
into
sahf
insb
js
add
and
xchg
lock
andl
sarb
push
lret
mov
fists
idivl
xor
mov
out
cmp
xchg
pop
sbb
rorl
mov
mov
add
mov
cltd
mov
icebp
lret
inc
xchg
and
test
sbb
aam
mov
sbb
out
cmc
or
sub
lahf
or
xchg
scas
cmp
in
mov
lods
add
pop
ds
mov
cmc
push
mov
mov
loope
push
xchg
scas
mov
inc
cmp
xchg
shll
cltd
xchg
inc
ja
push
jns
pop
jg
test
mov
and
jb
inc
xchg
jne
out
mov
addr16
sbb
in
and
mov
sbb
addl
nop
std
pop
outsb
mov
jbe
clc
hlt
and
adc
test
xor
iret
cmp
stc
xchg
xchg
sbb
fimull
mov
in
cs
div
std
clc
xchg
sbb
jo
or
jae
push
rcrb
cld
in
in
cmp
xlat
ljmp
jns
fists
or
mov
mov
pushf
mov
aas
addr16
iret
jle
mov
xchg
mov
or
je
dec
push
add
mov
in
outsl
mov
mulb
sub
roll
mov
filds
add
and
add
fistpl
jecxz
aam
nop
push
sub
dec
mov
jb
add
push
push
jle
scas
fsubrl
sub
add
push
mov
pop
dec
int3
andb
jl
fnstenv
or
pop
gs
mov
test
and
pop
aam
das
fs
jge
dec
loopne
pushf
es
inc
dec
lcall
scas
data16
idivb
push
loop
cltd
mov
jo
jne
mov
cltd
bndldx
outsl
jbe
fstpl
div
and
sub
mov
sbb
and
mov
loop
jecxz
shr
and
lret
fcompl
xor
pop
loope
cli
or
sub
repz
and
push
insl
push
add
push
icebp
ljmp
and
out
aam
xchg
lock
and
mov
into
xor
adc
dec
loope
sub
or
push
fs
mov
sti
mov
dec
or
icebp
xchg
imul
std
iret
fwait
adc
jmp
mov
mov
push
sbb
mov
mov
lahf
test
sub
mov
shlb
sti
push
or
mov
insb
and
insl
icebp
pop
push
mov
xor
int
sahf
mov
inc
jge
cmpsb
out
outsl
int3
xlat
push
or
xchg
cmp
and
ja
in
arpl
mov
les
stos
xor
jo
pop
jle
pop
mov
inc
out
xchg
and
sub
fwait
xchg
popf
sub
or
mov
loopne
imul
jbe
and
cltd
add
clc
and
mov
pusha
jge
out
and
and
jp
test
or
insl
mov
fildll
cs
mov
mov
cli
xchg
stos
aad
es
das
dec
sbb
dec
mov
cmp
or
mov
adc
xchg
mov
xorb
dec
test
inc
das
push
js
addr16
lods
jne
in
pop
push
jl
sbb
cmp
xchg
nop
pop
jg
dec
std
jecxz
xchg
push
andb
cmp
mov
push
mov
stos
mov
flds
mov
cwtl
cmp
dec
adc
shlb
ljmp
scas
into
jnp
stos
leave
sti
lods
xchg
pop
data16
lcall
cmc
or
xor
mov
cmpb
push
mov
loopne
xor
imul
xor
mov
test
mov
inc
insl
jmp
leave
mov
mov
in
lods
hlt
mov
mov
jp
rolb
jmp
std
hlt
aas
pop
pop
sti
ret
mov
xchg
aad
pop
scas
int
pop
or
xor
adc
or
ljmp
nop
pop
mov
data16
pop
test
jae
and
loopne
insb
fcompl
popf
add
movsb
nop
insb
shrb
dec
aad
sarb
mov
cmp
or
js
gs
add
cmpsb
in
sub
loope
mov
xchg
sub
dec
outsb
push
sbb
push
daa
push
std
sub
test
test
adc
mov
lock
sbb
icebp
xchg
lret
jno
scas
repz
cmpsl
hlt
mov
stc
mov
repnz
out
fldenv
dec
or
jbe
adc
dec
mov
rcll
sub
xor
inc
inc
mov
push
xchg
jo
leave
cmp
into
in
loope
xlat
test
xchg
xor
stc
js
dec
push
adc
inc
and
gs
adc
leave
or
inc
cmc
jp
adc
mov
inc
add
out
mov
xchg
mov
mov
add
movsl
dec
cmpsb
sbb
cs
popa
push
mov
xorb
ljmp
xlat
out
scas
shll
cmp
mov
popa
mov
ret
sbb
adc
sti
fnsave
mov
pusha
inc
mov
rolb
popf
push
cmc
gs
mov
mov
xchg
add
enter
and
xchg
mov
ret
push
and
push
push
cmp
xchg
jne
xor
test
jmp
je
sbb
imul
into
dec
sbb
fs
sbbb
xchg
cmpsl
test
lcall
xchg
dec
or
call
rcll
inc
test
stos
int3
jns
mov
ljmp
and
ljmp
cltd
lahf
jp
icebp
jg
fldt
mov
pop
scas
adcl
std
fsubs
lock
jnp
outsb
add
ret
mov
gs
jp
fbstp
bound
enter
aaa
fimull
or
or
push
mov
shrl
testb
xchg
pop
jl
lods
jb
popa
dec
jbe
mov
mov
inc
imul
push
cmpsb
dec
mov
fistpll
lret
push
add
arpl
in
pusha
sbb
loop
jbe
xchg
lds
imull
or
ljmp
xchg
ss
pop
pop
insb
dec
shll
fwait
lods
xor
ja
or
mov
incb
aas
ret
mov
sbb
push
jg
cltd
lods
pushf
mov
lods
lds
mov
fistl
xchg
nop
jbe
repnz
jno
mov
jle
lods
es
shll
jne
push
bnd
sbb
cmp
stos
jg
jge,pt
sbb
xchg
sub
and
loopne
cmp
jb
je
adc
enter
aas
fucom
cli
outsb
mov
sti
sbb
imul
lea
cli
rorb
icebp
jmp
pop
sub
lret
xchg
outsb
lods
add
cmpsb
loop
repnz
sub
stos
loope
sbb
pop
mov
mov
xor
cmpsl
popa
js
pop
loope
outsb
iret
push
sub
push
sub
pop
adc
lcall
sar
test
pop
in
ds
push
in
xor
jo
js
jnp
xchg
dec
addr16
sbb
xchg
cmp
add
cs
adcb
xchg
in
out
lods
adc
arpl
movsl
mov
adc
dec
iret
addr16
pushw
mov
fsts
push
mov
sbb
mov
mov
frstor
add
mov
cs
and
and
pop
xchg
mov
mov
push
imulb
fistpll
add
cmpsl
bound
je
xor
pop
xchg
add
mov
cs
in
loop
pop
dec
stos
sbb
iret
insb
sbb
sub
pop
inc
mov
into
lcall
dec
fs
mov
xor
insb
lock
outsl
popa
adc
xchg
mov
xchg
push
movsb
lods
sbb
stc
fwait
xor
mov
fidivrs
fwait
mov
lock
pop
sub
mov
dec
jmp
cld
cmpsb
xor
xchg
xor
cmp
xor
gs
mov
xchg
movsb
enter
imul
jmp
xor
cmp
sbb
xor
sub
cwtl
enter
mov
mov
mov
dec
mov
mov
jmp
sbb
or
popa
fisubrl
and
int
idivl
or
cmp
push
mov
or
fidivs
xor
mov
rcl
xchg
sub
inc
lods
jns,pt
jmp
shlb
jns
jge
icebp
jp
cmpsl
rcrb
cli
sbb
xlat
cmp
add
jge
mov
fists
xor
lock
or
das
or
or
scas
jo
dec
cltd
ja
jb
adc
add
rorl
mov
int
sbb
rcrb
and
mov
ljmp
push
lret
inc
dec
push
insb
sbb
imul
int
mov
and
push
mov
and
and
in
mov
sub
xchg
push
ljmp
ds
xlat
and
jmp
insb
les
shl
fnstenv
lcall
sbb
pop
rol
xchg
loope
rorb
dec
jnp
pop
add
icebp
pop
cmp
sbb
inc
call
mov
xor
xor
insb
int
mov
xor
cmc
add
lret
ret
xchg
and
push
popf
je
mov
cltd
mov
push
sti
mov
mov
scas
lods
sub
and
dec
xor
lds
scas
ds
mov
cs
je
enter
js
notb
mov
push
rcr
es
test
iret
cld
mov
pop
sbb
cmp
ja
push
inc
addr16
cmp
mov
mov
sub
sub
scas
sbb
add
sub
outsl
lahf
xchg
out
icebp
les
pop
aas
or
and
out
scas
je
rorl
pop
jg
mov
and
jns
cli
shl
fisttps
xchg
in
add
cmp
lock
jo
mov
shrl
data16
out
fstpl
leave
loopne
in
clc
mov
and
subps
test
mov
jno
cmpsl
mov
shrb
add
mov
icebp
rclb
jge
test
fildll
lods
std
pop
jg
inc
jmp
lods
xchg
ja
or
in
add
mov
adc
mov
aaa
cmpsl
notl
bound
and
xor
xchg
adc
shr
fsin
xor
rorl
stc
mov
shlb
cmp
push
cwtl
pop
sbb
ljmp
das
mov
mov
mov
inc
insl
push
data16
loop
testb
fidivs
xchg
andb
sbb
lods
fsubrs
and
in
pushf
lock
cmp
rolb
repz
adc
ja
in
lds
les
dec
mov
jo
cmpsb
int
pop
sti
ljmp
inc
lahf
lods
push
inc
push
xchg
inc
or
adc
add
ds
jb
cmp
mov
and
cmc
repnz
sbbb
and
adc
test
cmp
dec
push
mov
aad
pop
call
mov
sbb
pop
jmp
cmp
sbb
xor
sbb
dec
lcall
int3
ret
jge
sbb
stos
imul
into
xchg
mov
and
iret
sub
sub
xlat
cld
jge
loopne
int3
ds
mov
jecxz
addr16
ss
stos
fildl
hlt
xchg
add
stos
mov
outsl
ret
and
nop
int
popf
jae
inc
aaa
icebp
adc
mov
inc
rorb
test
mov
xchg
mov
jecxz
rol
jo
mov
xchg
or
pusha
stc
hlt
loopne
xchg
scas
popf
jae
jbe
jle
in
loop
hlt
popa
adc
movsl
jmp
sti
mov
ret
arpl
je
mov
jae
in
aas
sub
sub
and
cmp
arpl
stos
or
inc
sbbl
add
and
stos
aam
sbb
cmp
or
fimuls
bound
mov
sahf
ret
sbb
cmp
pushf
xor
rcrb
jp
icebp
sub
xlat
mov
xor
loopne
sbb
mov
out
xchg
xor
out
jno
iret
xor
mov
mov
rcrb
mov
jb
addr16
or
jge
push
sti
or
ja
repz
inc
mov
lret
sbb
push
xchg
out
xchg
mov
xchg
js
sub
arpl
idivb
cmp
cmp
je
xchg
dec
add
out
cwtl
loop
incb
add
dec
imul
push
fsubrp
push
aas
or
xchg
jne
and
mov
clc
ret
imul
mov
mov
test
or
sub
and
cld
data16
int3
stos
lahf
out
rcrb
dec
or
decl
cltd
and
pushf
call
jo
push
or
shll
lods
arpl
jle,pn
push
inc
shll
inc
cmp
add
jae
fists
in
add
lcall
jecxz
inc
pop
mov
clts
sub
add
mov
mov
loop
js
dec
aad
jg
xchg
mov
fiaddl
sub
jl
pop
or
fsubp
push
sbb
test
shl
in
adc
mov
dec
cs
or
call
sub
loop
clc
mov
jmp
test
fiadds
jmp
adc
dec
jg
or
cmp
loop
pop
stos
icebp
cltd
or
add
push
dec
adc
push
stos
hlt
jae
insl
fstps
pushf
bound
pop
daa
testl
cwtl
cs
add
mov
roll
ds
loope
cwtl
pop
push
sbb
mov
sarb
cmp
mov
adc
cmp
add
push
xchg
outsb
movsl
int3
scas
adc
mov
das
jle
xor
aaa
mov
pusha
mov
and
xor
pop
ret
int
pop
test
or
ljmp
adc
jae
das
xor
dec
inc
sbb
jae
ja
hlt
xor
adc
mov
mov
adc
mov
xor
movsl
fmul
xor
xchg
xor
inc
mov
pushf
clc
outsl
repz
cmp
lahf
out
je
inc
lds
mov
lods
mov
mov
cltd
mov
ja
sahf
ss
jae
or
xchg
in
adc
fsubl
sahf
jge
dec
adc
ljmp
dec
cmp
in
pusha
sbb
add
jg
jb
xchg
mov
jae
fidivs
test
lods
push
jg
jp
mull
pop
jns
mov
mov
push
adc
loopne
or
add
das
pop
rol
cmc
inc
mov
jns
ret
lcall
notb
jno
or
mov
push
out
mov
scas
sar
in
aas
or
add
sub
test
sti
or
push
mov
imul
into
jp
inc
mov
or
push
sbb
cmp
jo
xor
sbb
fcomps
adc
xchg
mov
cmpsb
std
add
jl
push
das
rcl
push
push
sub
push
xor
adc
or
pop
inc
lods
jp
idiv
outsb
cmp
lcall
jmp
add
fcoml
sub
add
shrb
les
je
adc
mov
mov
xchg
inc
mov
in
sbb
xchg
mov
mov
xor
xor
movsb
sbb
into
rolb
mov
ret
popf
dec
sbb
lock
pop
mov
data16
push
cli
popf
sub
aad
arpl
addl
incb
add
jb
in
mov
adc
jp
push
push
pop
sbbb
push
sub
dec
leave
push
push
movsb
dec
push
dec
xchg
in
fists
mov
jl
sbb
cmp
pop
inc
je
mov
sbb
pop
arpl
inc
jecxz
iret
cmpsb
dec
je
and
mov
fildl
mov
jae
add
push
shrb
adc
push
add
out
sahf
lds
mov
out
mov
in
or
lret
pop
mov
pop
add
sbb
lods
lret
aaa
cmpsb
lret
aaa
fdivrp
pop
stos
gs
dec
xchg
mov
test
lock
pushf
inc
push
pop
and
xor
addb
les
push
mov
incl
xor
cmpl
pop
aaa
inc
jne
das
sbb
mov
inc
daa
nop
add
mov
mov
mov
fdivrs
daa
aad
sub
mov
negb
sub
mov
add
adc
inc
adcl
cs
ss
iret
adcl
bound
xor
cmp
mov
stos
mov
fsts
cmp
sub
and
adc
pop
popf
xor
mov
push
xchg
dec
inc
dec
lods
lock
dec
and
push
dec
mov
shlb
int3
or
rclb
xor
gs
cmp
push
xchg
sarb
push
mov
inc
mov
mov
les
icebp
jp
in
fdiv
or
xlat
inc
mov
jp
push
int
fs
mov
popa
in
scas
jmp
rcrb
sahf
mov
pusha
fiaddl
dec
das
jno
into
sub
hlt
sub
adc
jg
pop
pop
test
insb
sub
xchg
add
divb
and
pop
jb
clc
insl
mov
add
lahf
jbe
push
sub
sarb
push
lds
cmc
jae
mov
stos
in
sbb
cmp
in
adc
xor
call
push
sub
aam
xchg
xor
lock
cwtl
sub
jb
mov
js
adc
push
stos
mov
push
adc
xor
cmp
leave
fistps
es
pop
lds
mov
xor
push
mov
mov
bts
addr16
adc
and
lods
lods
cld
sbb
pop
dec
outsb
loope
pop
sub
in
xor
xor
mov
dec
or
movsl
movsl
scas
mov
mov
lods
cmp
das
add
cmp
inc
dec
mov
bound
adc
ret
add
xor
lds
push
out
sar
push
or
shlb
int
rolb
test
xor
scas
lret
or
popa
cmp
imul
in
out
enter
cmp
mov
je
nop
inc
cmpsl
sbb
adc
in
mov
ss
add
mov
inc
xchg
andl
pop
pop
arpl
stos
add
loop
dec
add
inc
sbb
xchg
mov
aaa
fs
pop
push
scas
hlt
and
insb
or
loopne
xchg
in
repnz
arpl
jg
sbb
xor
rolb
outsl
xor
cmp
fsubp
in
pop
loop
mov
inc
in
outsb
jecxz
sbb
xchg
mov
ret
test
adc
sub
jae
jae
iret
fldl
rclb
fwait
mov
jns
push
adc
stos
sbb
mov
inc
aam
stos
mov
shlb
or
nop
hlt
xchg
push
dec
inc
push
sbbl
mov
lahf
lock
nop
inc
lods
pop
loope
cmpsl
jp
and
mov
dec
or
cmp
int3
push
sti
lret
cwtl
mov
push
pop
mov
mov
pop
cmp
sub
add
not
xchg
add
cli
sbb
jbe
or
fwait
cli
jne
dec
fistpll
rorl
movsb
test
xor
mov
jl
enter
cmp
daa
in
ds
dec
test
and
int
xchg
lds
sub
sahf
or
jle
jmp
rolb
loopne
cmp
icebp
andb
ja
add
and
rcl
out
mov
push
dec
add
pop
lret
mov
sbb
fwait
pop
cmpsl
cmc
push
mov
inc
out
xchg
in
xor
pushf
rcl
sbb
fistl
movsl
shll
stos
pop
adc
cmp
cld
mov
fldl
and
popf
jg
sarb
pop
adc
testl
add
dec
lds
leave
scas
push
movsl
test
stos
test
cmpsl
cld
ljmp
pop
xor
repz
and
mov
mov
ss
icebp
jl
sbb
int3
lret
push
mov
jp
add
adc
loopne
in
add
lret
jbe
inc
lea
je
fisttpl
pop
cmpsl
aam
in
inc
ss
cmpsb
in
push
arpl
pop
cld
mov
out
js
sub
imul
push
sub
ret
imul
repnz
cmp
xchg
fcompl
out
push
aam
jne
test
mov
dec
clc
int
jp
push
push
mov
pop
cmp
aad
xchg
push
pusha
cmp
xor
mov
push
sub
das
loope
inc
in
xchg
repnz
fstpt
pop
push
cmp
fsubs
bound
dec
inc
lret
xsavec
inc
dec
xchg
notl
xchg
movsb
popa
aam
in
lock
jbe
mov
dec
ja
data16
add
jno
push
cmp
movsb
mov
add
adc
les
fmull
movsb
or
lcall
mov
mov
cmp
fsubrl
inc
mov
cmp
in
xchg
push
xchg
mov
mov
lcall
imul
dec
jg
cmp
dec
mov
xchg
pop
neg
mov
push
adc
sarb
inc
xor
adc
xchg
test
xor
lcall
mov
fstl
fldenv
sbb
inc
dec
ja
xchg
pushf
cmpsb
xorb
inc
dec
les
cld
xchg
add
dec
nop
or
out
out
faddp
sub
and
xchg
ds
and
andb
sub
sbb
and
out
loopne
jbe
ljmp
fldt
dec
insl
push
movsb
imulb
mov
mov
jmp
or
lret
call
repnz
call
adc
std
xchg
pop
xchg
mov
xchg
xorb
and
insl
test
stos
sbb
xor
iret
inc
popf
pop
sub
out
or
xor
push
imul
ja
cmpsl
test
inc
int
pop
int3
in
fistps
stos
imul
fcomip
or
stc
pop
rorb
outsl
push
test
ficoml
std
sbb
jno
add
cmpb
jge
fcompl
fadd
dec
das
and
popf
shrb
inc
aam
dec
push
aaa
pop
mov
lock
stc
pop
pop
sbb
sbb
xlat
sub
arpl
lahf
inc
adc
mov
sbb
les
sbb
xor
lea
pop
cld
lcall
jecxz
cli
dec
mov
in
js
or
mov
jb
in
fisubl
mov
mov
inc
in
insb
inc
les
and
xor
xchg
adc
aas
mov
clc
mull
mov
cmp
add
imul
mov
paddusb
xlat
pop
adc
xchg
sbb
pop
mov
pop
adc
clc
inc
xor
bound
inc
pop
xchg
mov
mov
cs
adc
into
fisttps
insb
xchg
je
mov
fwait
jbe
mov
mov
or
ss
testb
jo
add
add
adc
insl
std
add
outsb
jl
cmp
push
int
mulb
pop
out
push
dec
stc
add
shlb
pop
out
cli
lahf
rcl
stc
xchg
clc
shl
lret
shlb
cwtl
repz
in
stos
pop
push
sub
rcrl
sarl
les
lahf
rcrl
cwtl
mov
fsubrl
ds
xor
aaa
lret
add
mov
mov
or
xchg
add
cmc
add
dec
jne
push
sub
daa
lret
std
insl
sub
popa
mov
stos
test
pusha
xchg
gs
cs
xor
dec
mov
jne
dec
loop
aas
testb
mov
mov
out
sbb
ret
popl
xchg
cmp
lret
pop
in
in
into
in
rcrb
push
aas
pop
push
out
jge
enter
xlat
cmpsb
in
dec
rcll
test
ficoml
cmp
das
outsb
xor
pop
mov
adc
icebp
push
popf
rcrb
or
test
enter
ja
repnz
push
mov
push
jmp
pop
inc
xchg
iret
loope,pt
rorb
xor
or
out
and
jbe
ret
fadds
or
dec
repz
inc
outsl
imul
push
inc
mov
xchg
xchg
mov
adc
jae
mov
cmp
std
add
dec
aas
lods
xor
cmp
mov
divb
jmp
cltd
mov
add
xchg
popf
stc
imul
mov
notb
xchg
sbb
fisubl
jne
in
mov
inc
dec
pop
mov
lahf
mov
stc
mov
out
movsl
mov
adc
push
addl
inc
inc
pop
pop
sub
fsubl
push
xor
or
addr16
sub
lods
popa
pusha
xchg
xchg
lahf
mov
cmp
out
jp
lds
ja
inc
imul
mov
mov
icebp
mov
mov
fwait
and
jno
xchg
sub
cs
insl
mov
gs
dec
data16
mov
int
cmp
data16
inc
cmp
cmp
cld
aaa
fisttps
mov
push
xchg
fidivs
cltd
sub
aam
fcoml
out
adc
sbb
icebp
cli
inc
push
push
lret
stc
pushf
jne
mov
imul
jle
adc
and
push
push
push
xor
pop
pop
in
hlt
xor
sbb
out
repz
and
sbb
outsl
icebp
add
fbld
mov
mov
fildll
mov
mov
mov
cltd
or
in
mov
cmp
mov
dec
mov
int3
add
subb
jmp
adc
shl
testl
call
jnp
dec
inc
inc
mov
or
test
jmp
pop
imull
jns
sbb
in
ja
out
incb
into
mov
mov
jbe
call
sahf
std
mov
push
pop
rcl
scas
xchg
outsl
iret
xlat
xor
push
inc
mov
jge
push
adc
adc
inc
xchg
fidivrs
aas
push
repz
push
call
xor
fwait
gs
add
mov
fnsave
sub
shll
test
xor
sbb
iret
inc
push
pushf
test
and
or
popa
mov
mov
jecxz
mul
xor
mov
mov
into
out
xchg
into
lds
imul
add
xchg
mov
jl
mov
stc
scas
js
xor
mov
cltd
sbb
sbb
cmpsl
xor
inc
mov
xor
add
imul
jmp
mov
mov
xchg
fldl
jnp
ret
andl
mov
mov
pusha
sbb
nop
shl
pop
fld
repnz
ljmp
sbb
stos
sbb
js
ret
sbb
clc
out
mov
cltd
cmp
mov
sbb
mov
xor
stc
xchg
pop
stos
pop
mov
imull
or
test
push
mov
loopne
aas
cmpl
or
adc
dec
pushf
xchg
xchg
or
mov
mov
and
xor
fs
les
and
negb
es
hlt
mov
out
push
lret
dec
popa
inc
loope
fincstp
lods
xor
popf
loope
and
sbb
add
xchg
stos
jae
lahf
idiv
lea
rolb
imul
fisubrl
mov
out
inc
push
pop
pop
out
xor
outsl
fs
inc
je
adc
mov
fisttps
ret
cmpl
sub
mov
push
fcmovnb
ljmp
std
out
xor
std
jge
in
xchg
sbb
lock
cmp
or
sbb
aad
dec
cmp
jg
push
into
xchg
jns
xorb
mov
mov
ficoml
das
ljmp
sbb
push
aam
sbb
push
push
rclb
imul
mov
pop
or
stc
xchg
les
xor
fldenv
in
movsb
jle
fadds
mov
mov
adc
adc
fldl
pusha
scas
cmpsl
sti
fcomp
int3
dec
mov
enter
jae
add
jae
xor
loope
jmp
int
rcr
sbb
sbb
adc
jl
jl
iret
adc
xor
arpl
fdivl
in
insb
inc
jp
pop
in
sti
jmp
push
jb
roll
push
xchg
aad
callw
xchg
add
add
push
sub
int
cli
mov
scas
xchg
sub
push
inc
dec
ljmp
and
out
push
lods
incl
mov
dec
test
jl
jmp
rcll
pop
jecxz
push
xchg
cmp
loope
mov
push
cmp
fcompl
ss
shlb
sbb
pop
std
jbe
add
lret
xor
xchg
fcompl
int3
daa
ss
gs
mov
mov
mov
sbb
jmp
mov
shlb
jl
dec
addr16
or
int
pusha
mov
mov
add
push
repnz
pop
dec
repnz
ss
outsb
nop
adc
mov
test
mov
and
mov
mov
loopne
xlat
cmp
mov
sub
bswap
hlt
sub
lret
mov
xchg
jmp
and
cld
adc
mov
incb
xchg
or
lahf
jge
stos
add
mov
pop
xor
sahf
adc
sbb
daa
mov
lds
pop
movsb
negl
inc
dec
jnp
outsl
aam
lahf
mov
jg
test
push
add
and
and
xchg
mov
sbb
push
pop
and
inc
mov
pop
xchg
inc
pop
mov
out
xor
cmpsl
inc
jno
icebp
jecxz
cmp
out
test
adc
jo
dec
xor
in
mov
jno
mov
and
subb
lods
cltd
test
movsl
ljmp
add
or
pop
cmc
xor
sbb
movb
sbb
test
adc
loope
stos
movsb
and
sahf
insb
aaa
add
jo
das
inc
enter
bound
lods
fnsave
pushl
shlb
pop
loope
adc
aas
test
lock
test
fistps
js
mov
aam
pop
out
test
outsl
push
cmp
std
lret
pushl
cmp
test
pop
push
es
or
nop
repz
int3
and
mov
in
push
push
cmp
mov
xchg
je
or
popa
imul
jg
leave
fs
sub
std
std
loop
loop
sub
enter
int3
adc
out
or
push
fsubs
and
iret
sub
sub
push
xchg
ret
sub
mov
mov
imul
sub
in
adc
mov
ljmp
rcll
insl
push
jecxz
repnz
andl
daa
sahf
mov
mov
jge
cmp
mov
xchg
imul
popa
mov
bound
in
je
stc
stc
in
add
mov
test
loope
xchg
outsl
cmp
xor
add
aad
mov
sti
xor
mov
dec
sbb
test
leave
rorl
mov
xchg
ja
imul
xchg
icebp
bound
or
or
xchg
mov
sub
sar
mov
imul
test
lods
pusha
cmpsb
icebp
pushf
xchg
mov
je
pop
dec
push
es
outsb
sti
hlt
xor
push
bound
mov
sub
lods
test
jnp
xor
in
push
cmpsl
loopne
leave
xchg
adc
xchg
cmpsl
and
or
push
rclb
andb
mov
dec
mov
mov
sub
or
sub
adc
dec
inc
popf
movsl
inc
add
pop
or
xor
mov
fsubrs
ljmp
enter
or
adc
inc
mov
in
test
xchg
dec
push
data16
arpl
lods
mov
hlt
das
xchg
ret
mov
outsb
test
mov
leave
lahf
subl
movsb
shl
adc
pop
xchg
inc
out
sub
aam
repnz
and
fcmovbe
mov
sbb
jecxz
push
cltd
fstps
adc
addr16
inc
push
fsubs
cmp
jne
inc
pusha
inc
sub
mov
pop
sbb
adc
popa
dec
hlt
jp
les
mov
in
lods
jecxz
fstpl
daa
mov
mov
imul
and
jge
gs
adc
pop
insl
stos
loopnew
or
jbe
imul
test
pusha
out
xor
dec
add
aam
gs
rorl
jg
push
sub
jg
sub
xor
divl
out
mov
mov
xor
cmp
mov
xchg
pop
in
cmp
movsb
bound
les
jb
clc
out
ss
leave
pop
mov
call
test
adc
shll
mov
xchg
add
in
fmull
clc
fldcw
pop
int
xor
mov
push
dec
dec
pop
inc
sub
or
int
inc
outsb
repnz
loopne
inc
adc
test
dec
sub
arpl
mov
push
or
sbb
sub
cmpb
sbb
inc
jbe
popf
dec
add
bound
test
jg
pop
ljmp
lcall
movsb
xchg
pop
mov
pop
add
popf
pop
dec
jno
mov
xchg
or
mov
xor
push
ffreep
bound
pushf
fbld
and
fcomps
lahf
gs
cmp
js
pop
cli
mov
ds
stos
sub
push
pop
stos
lods
popf
sbb
ja
insb
pop
dec
cmp
outsl
mov
mov
out
pop
mov
lock
mov
scas
push
mov
popf
add
fidivrs
scas
sub
xor
js
out
insl
or
aas
xchg
or
repz
iret
in
push
xchg
scas
push
mov
cmpl
and
call
in
faddl
xchg
inc
xchg
push
addl
orl
mov
negl
mov
out
fmulp
cwtl
push
pusha
fidivs
push
push
xor
addr16
mulb
mov
das
mov
pop
je
lret
sub
sub
and
test
test
or
repz
jb
lods
test
hlt
push
jge
aas
ljmp
sbb
out
push
leave
cmp
mov
push
xlat
in
and
jae,pt
sti
int
outsb
mov
sub
outsb
stos
sbb
or
xor
scas
add
out
call
into
je
ds
xor
mov
pushf
cwtl
sbb
fnstcw
in
insb
xchg
in
pop
incl
in
cmp
adc
xchg
xchg
sbb
rorl
jge
je
adc
inc
inc
iret
sub
pop
cmp
push
imul
push
js
lret
lcall
insl
sub
paddsw
std
es
or
push
pop
jge
repnz
jno
bound
cmp
data16
push
add
sub
aam
jg
jnp
adc
push
jnp
mov
xchg
mov
add
imulb
ret
push
adc
add
in
std
arpl
ljmp
jno
jl
std
jge
mov
fnstcw
pop
icebp
dec
cwtl
jecxz
out
sub
sbb
test
mov
mov
inc
fimull
sbb
pop
jns
xor
xor
shl
arpl
pop
sub
cltd
insb
mov
push
push
jo
and
imul
icebp
sub
mov
or
add
cmp
rcrl
ss
sub
adc
mov
lret
scas
fstp
mov
jns
xor
pop
pop
test
dec
icebp
outsb
int3
in
daa
and
enter
sbb
mov
imul
sub
cld
mov
sub
push
or
aas
fmull
fcomps
cmpxchg
mov
addr16
pop
mov
inc
iret
mov
sub
inc
mov
call
pop
cli
loopne
loop
xor
push
cmpl
fimull
dec
mov
mov
inc
xchg
jmp
mov
fmuls
adc
popf
loope
jge
imul
sub
sti
jb
mov
pop
mov
mov
jl
bound
lahf
add
ljmp
pop
mov
mov
mov
push
or
movb
cli
cmpsl
add
xor
vcmppd
nop
dec
mov
in
lock
adc
inc
sub
aaa
mov
or
lea
mov
insl
insl
jbe
inc
mov
roll
mov
or
imull
cmp
in
push
mov
adc
pop
sbb
xchg
push
test
push
mov
xchg
shll
sub
xor
add
inc
adc
mov
fistl
mov
outsb
jns
add
divb
sbb
movsb
and
inc
fwait
aad
fnstenv
ss
out
add
test
mov
shlb
dec
mov
mov
ljmp
add
push
mov
mov
cld
pop
pop
aas
test
ret
les
ret
or
scas
mov
loop
xchg
rol
xchg
test
and
ret
and
adc
rcl
cltd
sahf
add
out
mov
ret
adc
sbb
mov
imul
fdivrl
repnz
xor
mov
aaa
cmc
data16
and
cmc
stc
repnz
lcall
and
xchg
mov
fmull
inc
mov
add
inc
jns
ds
push
cmp
xchg
push
rol
mov
sahf
in
mov
les
nop
pop
repnz
dec
push
test
mov
jle
scas
sbbl
rcrl
jle
sub
push
or
stos
cmp
jge
xor
bound
pop
in
xchg
jp
negl
sbb
out
clc
js
pop
add
pop
mov
imul
add
call
clc
insl
repz
mov
adcb
insl
cltd
mov
mov
js
movb
lahf
in
mov
add
aam
xor
scas
and
lods
mov
lock
or
div
dec
dec
xchg
out
insb
or
adc
push
push
or
mov
lock
rcrb
ljmp
sub
pop
roll
jge
dec
aad
mov
adc
jmp
or
and
dec
push
jecxz
or
cli
dec
cmp
pop
mov
outsl
jnp
sub
jl
insb
jbe
add
addb
dec
inc
popa
add
lcall
aam
mov
sub
mov
imul
pop
inc
and
sti
hlt
jmp
outsl
dec
mov
fmuls
pop
jae
add
mov
jae
insb
repz
mov
cwtl
xchg
xlat
data16
jecxz
xchg
scas
imul
jne
arpl
movsl
stos
out
outsb
fs
inc
cmp
xor
ss
call
rorb
fcomps
in
mov
rorl
push
insb
inc
rcrl
stos
outsl
movsb
repnz
push
pop
clc
mov
mov
add
ret
mov
xchg
or
fcoms
movl
cmc
lods
scas
dec
shl
lret
push
pushf
aaa
div
xchg
inc
sbb
in
stc
mov
pusha
xor
cwtl
mov
push
lret
iret
scas
and
xchg
cmp
adc
mov
lcall
mov
cwtl
scas
shrb
test
mov
in
mov
inc
and
cwtl
fsubl
pop
or
jg
das
add
in
add
sub
hlt
adc
fistpl
cmpsl
jmp
lret
cmp
xchg
xchg
mov
cld
push
and
nop
xor
gs
daa
je
adc
jp
loop
push
xor
das
dec
orb
mov
jne
inc
push
cmp
rorl
out
jo
daa
sbb
dec
or
out
stos
das
scas
pop
mov
les
les
sub
mov
pop
sub
orb
ss
sub
xchg
xchg
popf
inc
insl
mov
pop
sub
add
movsl
cmpb
or
dec
mov
add
jle
or
xchg
mov
adc
mov
aam
mov
dec
xchg
outsl
aaa
hlt
mov
aaa
loop
push
xchg
aas
dec
push
data16
xchg
andb
daa
js
iret
js
ffree
jne
cmp
mov
ljmp
andl
adc
xor
mov
cwtl
pop
mov
daa
std
mov
push
add
inc
cmp
jnp
dec
rcl
cs
push
fwait
inc
lea
jle
and
mov
test
cli
jp
push
cmpsl
dec
push
mov
fmuls
shrl
enter
inc
in
push
sbb
fcomp
dec
pop
aas
outsb
jecxz
stos
pop
pushf
pusha
outsb
je
or
scas
sub
loop
in
stos
xchg
jb
cmp
lea
adc
cmp
lods
jo
lea
sub
fidivrl
dec
lea
scas
xchg
push
push
push
das
dec
jmp
push
dec
pop
jae
inc
sbbl
jmp
insl
pop
dec
or
daa
jge
fnstenv
lock
test
mov
inc
adc
sub
mov
mov
shr
andb
and
xor
adc
mov
das
lcall
sub
sbbb
inc
popa
cli
into
dec
dec
es
fists
xchg
popf
mov
int3
pop
push
or
pop
test
or
cmp
mov
xor
inc
pop
xor
inc
or
loopne
ja
cltd
pusha
movsl
lods
out
mov
lods
cld
mov
in
or
or
out
adc
adc
and
xchg
add
enter
nop
ret
inc
pushl
leave
lds
xlat
mov
add
and
cli
inc
aam
cmp
movsb
inc
cwtl
sub
inc
jle
dec
pop
cmp
sbb
jne
movaps
or
sub
mov
xor
addb
and
push
push
rorb
aaa
into
inc
mov
movsl
lcall
orb
sbb
and
daa
push
in
in
xor
dec
add
add
mov
adc
lock
ret
in
adc
cmp
cmc
clc
cmc
sbb
xchg
push
aas
mov
fiaddl
sub
jae
dec
jge
dec
adc
push
sahf
mov
push
mov
inc
jge
adc
add
lea
lea
ss
movsb
inc
stos
and
ss
insl
and
push
mov
fucom
push
das
movsb
fmuls
adcb
std
or
sub
inc
or
mov
les
xchg
adc
cmp
movsl
js
inc
xchg
jmp
fwait
add
xor
and
push
jnp
jl
xorb
mov
sti
xorb
inc
notb
pop
daa
fdivr
xchg
mov
pop
mov
inc
jmp
jns
push
stos
push
lea
push
inc
bound
lar
jg
mov
or
sti
fdivp
xchg
pop
xchg
es
add
mull
inc
hlt
shll
mov
or
fnsave
int
add
int
call
jb
fsubs
test
lock
adc
lds
testb
cli
or
and
sub
aad
mov
inc
xchg
gs
inc
adc
and
int
or
insl
je
les
or
orb
loopne
cmp
clc
xor
in
push
xchg
mov
and
adc
push
xchg
mov
jmp
pushf
out
push
test
mov
sbb
les
mov
or
popf
add
mov
xor
jecxz
aaa
cwtl
std
in
pop
push
clc
jne
adc
scas
push
push
lods
xrelease
je
xorb
or
and
fisubs
packssdw
icebp
pop
adc
cmpl
es
sbb
jmp
sbb
or
lock
add
int
xchg
sub
pushf
nop
out
or
int3
or
ret
or
inc
jg
xor
pushf
inc
sub
jg
fwait
sbb
mov
pushf
push
pop
xchg
jae
int3
dec
shlb
outsb
fwait
out
stos
dec
rcrl
out
jae
in
arpl
mov
xor
cmp
movsl
sbb
mov
ljmp
sbb
jg
lds
rdpmc
aam
or
xchg
xor
test
dec
push
subb
daa
adc
xor
and
pushf
clc
fstl
pop
fldcw
xor
out
sbb
mov
fsubr
pop
push
jae
cld
inc
adc
inc
shr
mov
clc
mov
lods
jg
jp
mov
cmp
stos
lea
in
jp
mov
cmp
aas
call
inc
cs
lods
or
jle
aas
lds
add
xor
and
cmp
mov
loope
aad
mov
cmp
xor
xchg
cli
in
push
std
std
xlat
lret
pop
pop
sahf
sbb
xorl
jne
pop
jb
fadd
xchg
into
lock
and
test
outsb
push
jno
dec
orl
adc
arpl
outsl
loopne
cltd
jl
pop
pop
outsl
sub
jns
sbb
xorl
xor
clc
ficoml
lock
xchg
pop
jecxz
cmp
sarl
repnz
and
sbb
push
insl
outsl
push
and
mov
dec
adcl
pop
ljmp
out
clc
xchg
fnstsw
mov
aas
pop
add
ljmp
mov
adc
jl
fistpll
pop
jnp,pt
cld
lods
lds
sub
dec
pop
pop
leave
in
loop
inc
in
movsl
cmc
mov
es
push
rorb
les
out
dec
imul
inc
push
cli
sbb
leave
cwtl
dec
in
sbb
loopne
push
mov
xchg
daa
cld
pop
int3
shll
call
rorl
mov
mov
mov
fstpl
je
sbb
lods
inc
cmpsb
dec
inc
cmp
add
scas
mov
jp
imul
in
and
add
sti
fimull
pmaxsw
lods
int
out
push
mov
mov
lret
xchg
insl
adc
push
repnz
movsb
in
mov
push
jne
and
ss
xor
mov
sbb
dec
xchg
pusha
or
xchg
mov
scas
pop
jmp
in
mov
pushf
dec
mov
aam
sbb
loopne
mov
lds
rcrl
dec
mov
pop
or
in
cld
inc
dec
and
scas
popl
jnp
dec
mov
jbe
xchg
dec
fsubrl
push
inc
mov
leave
popa
push
daa
lods
pop
cwtl
lahf
rcrb
mov
xor
cmp
adc
push
and
hlt
loop
and
push
push
pop
xchg
out
xor
fistps
xlat
push
lods
dec
xchg
imul
push
fs
push
jb
pop
movsl
dec
addr16
pop
arpl
xchg
mov
lahf
or
inc
testl
ss
fstpt
or
add
cmpsb
shll
sub
ret
setnp
ljmp
push
std
mov
loop
jno
cmpsl
and
mov
fpatan
xor
negl
es
adc
mov
cmp
rolb
test
out
pop
adc
mov
call
add
stos
add
jge
daa
push
inc
out
es
dec
inc
ds
inc
cmp
mov
cmpsb
outsl
mov
mov
testl
push
fwait
or
mov
mov
add
xchg
nop
pop
cmp
movsb
fdivl
pop
inc
fldcw
or
jbe
or
sbb
iret
pop
aam
mov
lahf
xchg
sti
popa
aas
daa
js
add
icebp
sarl
pop
rcrl
mov
mov
xchg
repnz
ja
fcmovu
dec
popl
inc
ljmp
orl
adc
jne
out
enter
xchg
fstpl
push
push
in
cmp
or
adc
sbb
push
push
cmp
punpckhdq
bound
jb
in
mov
mov
cmp
inc
test
repnz
mov
mov
push
xor
jns
push
pusha
fcmovne
and
mov
mov
mov
or
pop
imulb
add
inc
push
adc
lahf
inc
out
pop
xor
cmpsb
shrl
and
jo
in
outsl
and
pop
pusha
push
lahf
mov
mov
cwtl
mov
add
add
in
push
push
mov
ljmp
sahf
sbb
pop
mov
loop
cmc
push
xchg
mov
or
add
and
inc
lea
in
dec
imul
pop
popf
xor
push
enter
mov
mov
sbb
jbe
add
jbe
into
add
mov
mul
cmp
add
sbb
mov
mov
mov
mov
cltd
pop
loop
clc
stos
push
dec
xchg
clc
sbb
fucomp
xlat
and
std
pop
popf
mov
adc
xor
int
xchg
insb
fidivrl
add
enter
in
aad
insb
and
ljmp
add
mov
pop
cs
mov
push
daa
fwait
pop
and
jecxz
mov
out
cli
out
dec
jno
decb
nop
loopne
push
push
gs
insb
push
inc
pop
dec
rorl
std
mov
rcrl
imul
mov
lahf
adc
cmp
das
int
aaa
cltd
ja
pusha
loop
lahf
mov
xchg
fisttps
mov
mov
jnp
fmul
mov
xor
mov
mov
add
iret
or
cwtl
jge
push
and
repz
repnz
stos
sub
xchg
cli
scas
mov
or
sub
or
jmp
cmc
fs
mov
mov
or
sub
imull
sbb
lcall
push
push
dec
in
xor
adc
dec
pop
xorl
shrl
test
xchg
lahf
mov
ret
xchg
or
divl
lahf
push
sti
data16
fstl
xor
sbb
sbb
or
inc
cmc
notb
pop
xor
jmp
sbb
cmp
mov
ja
cmp
test
dec
pop
pop
mov
idivb
pusha
push
stos
aad
sbb
or
ljmpw
fldenv
not
xor
fldl
cmpsb
jb
mov
es
push
mov
cltd
cs
scas
ljmp
pop
mov
xchg
fpatan
inc
xchg
cli
mov
mov
sub
xchg
mov
test
xor
jle
pop
movsl
je
sarb
repnz
xor
clc
je,pt
out
arpl
sbb
into
test
jle
dec
cmpsl
jmp
jecxz
loopne
cli
xor
sub
fs
ss
rcll
mov
inc
les
sub
sbb
ljmp
mull
pushf
call
out
or
jo
jo
adc
call
pop
mov
sahf
xlat
or
aam
fs
inc
add
icebp
cmpsb
ljmp
lret
xor
mov
push
and
shlb
and
pop
push
aam
mov
push
call
inc
sub
mov
mov
dec
xor
push
pop
cmpsb
jo
push
ljmp
stos
jmp
add
cmpsb
jle
rorb
mov
fistpl
xorl
je
xor
add
test
cmp
mov
inc
test
shlb
xchg
cmp
push
and
mov
xor
lock
adc
inc
lods
fsubrl
xor
stc
imulb
movsl
nop
inc
cmp
mov
pop
sbb
or
push
and
mov
pop
mov
loopne
mov
lret
fistl
hlt
outsl
int3
lret
shrb
mov
sarb
popf
cld
push
mov
push
imul
daa
inc
repnz
add
lret
inc
pop
mov
stos
punpckhdq
shll
mov
xor
dec
frstor
lret
jb
push
jae
push
ret
push
fdivrs
addr16
pop
subl
fistl
lds
cmp
leave
cld
insb
js
rcrl
sarl
and
test
lods
inc
fdivs
and
or
lret
mov
cs
inc
cmp
out
leave
pop
aad
inc
mov
cli
mov
inc
inc
and
sub
xchg
cmp
aam
or
and
pop
xchg
outsb
imul
jmp
jae
icebp
push
xor
pop
mov
sbb
nop
add
add
cmpsl
mov
ss
sub
jo
subl
ret
fs
lret
pusha
pop
int
mov
push
xchg
in
jns
adc
idivb
adc
sti
inc
inc
divb
pop
cmpb
mov
push
or
sbb
in
addr16
cmp
sub
adc
leave
mov
inc
cs
xchg
adc
loop
ja
xor
xchg
rcll
ja
mov
jno
xchg
js
aas
mov
jl
push
inc
dec
adcl
mov
or
outsl
in
mov
xor
lcall
cwtl
push
push
or
pop
loop
xor
loopne
add
mov
inc
xchg
fwait
shlb
push
aas
or
jmp
in
inc
cmp
sbb
mov
jge
ret
adc
cmc
dec
fs
iret
rclb
mov
xchg
