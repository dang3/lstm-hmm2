xor
push
and
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
pusha
les
stos
adc
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
xor
inc
add
decl
decl
test
mov
int
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
or
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
or
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
lock
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
xchg
loop
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
mov
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
aad
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
fiaddl
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
xlat
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
mov
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
lret
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
add
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
xor
jne
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
in
in
sbb
mov
add
call
addl
test
jl
shlb
mov
ljmp
cli
popf
fldl
stos
add
mov
push
mov
jbe
add
outsl
int
in
clc
lcall
inc
in
push
push
push
push
call
in
add
push
mov
add
fiadds
push
jmp
mov
add
shlb
pop
movsl
add
add
call
fdivs
call
add
lock
lret
popa
add
imul
lea
push
lea
push
push
push
push
push
push
push
push
call
movl
mov
fcmovbe
add
add
divl
fmuls
add
ljmp
in
add
fcomps
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
fsubrp
insb
rol
add
xchg
int
add
test
popf
xlat
mov
push
add
add
add
pop
add
in
fcomps
call
push
push
push
call
jnp
mov
sti
add
add
sti
add
add
push
jle
loopne
faddl
add
cmpsl
leave
imul
push
xchg
xchg
mov
add
addr16
pop
sbbb
movsl
imul
mov
add
xchg
cld
pop
int3
add
test
loop
add
add
add
lea
push
push
lea
push
lea
push
push
call
mov
sahf
incb
add
roll
lea
add
popf
add
add
add
xlat
mov
fistl
add
popl
sahf
jo
add
jmp
add
add
add
arpl
add
jbe
add
jns
add
add
sub
pop
call
push
push
lea
push
push
push
push
call
add
addr16
mov
test
mov
push
jmp
xchg
push
mov
add
add
add
push
jnp
add
add
jmp
push
lea
push
lea
push
push
push
lea
push
push
push
call
stc
bnd
add
enter
add
loop
add
out
add
fistps
add
add
rolb
add
jmp
add
add
push
in
jnp
add
ljmp
add
cltd
xchg
add
add
outsl
add
add
add
fisubrl
bound
ret
push
push
push
call
add
xlat
add
fucom
jb
ficomps
icebp
add
add
pop
mov
stos
arpl
push
imul
lret
add
rcrl
mov
add
call
in
add
add
addr16
ljmp
in
hlt
pop
mov
push
push
push
push
push
push
push
push
push
call
push
add
add
xchg
add
jne
aam
mov
add
jb
add
add
mov
add
mov
sub
pop
mov
push
lea
push
push
push
push
call
test
std
push
sahf
stos
enter
add
data16
test
add
out
add
pop
loopne
lret
cld
xchg
jp
lret
lahf
movsl
jb
movl
mov
mov
popa
xchg
divb
int
add
lahf
je
mov
xchg
push
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
call
test
mov
mov
add
jle
add
ja
mov
add
mov
add
mov
in
fcompl
ret
add
add
add
push
lea
push
call
in
add
mov
fidivl
rcl
icebp
je
std
ljmp
icebp
rorl
imul
pushf
add
add
add
frstor
jno
fs
les
add
add
sahf
lret
jbe
mov
mov
jbe
add
add
addl
mov
push
push
push
push
lea
push
lea
push
push
call
add
cld
jo
add
add
test
sti
mov
add
add
add
add
jns
mov
mov
mov
add
add
add
push
cmpsb
add
sbb
push
lea
push
push
push
push
push
lea
push
push
call
add
arpl
mov
iret
rcl
mov
bound
add
add
mov
add
testl
mov
shl
add
int
in
jge
add
add
add
cld
push
add
add
add
pop
add
mov
mov
loop
popf
lahf
add
add
mov
mov
sub
pop
add
push
push
sub
rol
inc
inc
push
or
not
add
dec
sub
sub
add
sub
pop
ror
sub
pop
push
push
push
push
push
push
call
mov
scas
jmp
xchg
add
shr
sahf
add
mov
add
gs
out
add
add
mov
add
pushf
je
rcll
add
mov
add
les
xchg
add
nop
add
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
loope
add
stc
mov
xchg
jle
loop
lods
test
add
add
xchg
stos
cmpsb
add
cmpsl
push
add
in
fdivr
lcall
call
push
push
lea
push
push
push
call
add
xchg
imul
out
repnz
testl
add
add
add
aad
add
add
lcall
hlt
add
add
fadds
lcall
inc
lock
push
push
push
push
push
push
push
push
call
push
mov
pop
fwait
fs
add
data16
arpl
hlt
lock
std
mov
stos
add
jno
push
lods
add
mov
push
out
mov
add
cmpsl
aam
add
xchg
movsl
cmc
add
add
mov
stos
add
sub
pop
lea
push
lea
push
lea
push
push
call
add
mov
pusha
jmp
add
add
stos
ljmp
mov
jecxz
lcall
in
lock
push
pushl
push
push
push
call
add
lea
add
addb
add
add
add
add
mov
call
call
mov
xchg
pop
loop
rol
in
pop
add
push
mov
add
jnp
mov
add
int3
clc
sub
pop
pushl
call
push
push
push
lea
push
call
jns
popf
roll
in
cli
add
add
add
add
lcall
add
arpl
insb
add
add
mov
xchg
stc
xchg
jp
jmp
pop
pushl
push
push
call
mov
clc
ret
lret
add
add
xchg
movsl
add
add
jl
lods
add
scas
negb
fsub
add
add
add
cwtl
lea
add
add
add
pop
pushl
push
push
push
push
push
push
push
push
call
mov
call
xchg
call
movl
scas
insb
add
xchg
test
mov
xchg
je
mov
pop
popa
push
mov
in
loopne
call
push
push
inc
xor
rol
push
and
add
sub
ror
not
ror
not
pop
dec
pop
push
push
push
push
push
call
add
add
xchg
std
bound
shrb
nop
test
add
cli
mov
mov
xchg
mov
add
hlt
mov
add
pushf
sbb
mov
add
mov
push
add
add
add
add
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
mov
mov
add
test
add
mov
lret
add
rolb
int3
add
fcoml
aam
add
scas
add
pop
add
add
jae
add
insb
jmp
int3
add
imul
scas
add
add
add
pop
push
push
push
lea
shr
push
and
add
add
sub
xor
pop
add
pop
push
lea
push
call
add
popf
ja
rolb
add
test
add
add
add
add
add
call
add
add
movsb
pop
mov
bound
lcall
push
push
lea
push
push
push
lea
push
push
call
add
jmp
cli
add
fnstsw
in
add
add
add
add
aam
cld
add
mov
jae
add
add
pop
call
push
push
push
push
call
xchg
add
subl
flds
jb
pop
jb
outsl
add
popf
add
add
cld
mov
je
add
add
mov
stos
add
into
test
cmc
add
cmpsb
cmpsl
popf
lret
cmc
add
add
enter
add
jbe
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
push
call
stos
bound
clc
pushf
fiadds
mov
mov
add
add
add
loopne
imul
add
push
in
mov
sahf
add
cwtl
jno
xchg
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
mov
push
roll
add
data16
lock
pusha
jno
in
std
lods
fiaddl
lcall
pop
hlt
push
push
push
push
call
add
add
add
add
xchg
in
test
popa
pop
jl
push
pop
jmp
jb
fs
add
mov
popf
add
mov
lret
mov
mov
add
test
pop
in
add
push
push
call
add
in
out
imul
xchg
add
cltd
loope
mov
add
add
fs
lcall
add
std
je
add
add
jne
out
add
in
jae
shlb
fcmovb
cmpl
movb
in
clc
pop
add
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
rolb
add
add
std
cmpsb
add
into
mov
bound
xchg
xlat
sti
add
fwait
mov
add
je
movsl
add
aad
roll
std
add
add
push
mov
add
imul
out
mov
sub
pop
mov
push
push
lea
push
push
push
push
call
add
scas
jne
lahf
lcall
stc
add
add
faddl
xchg
movsl
add
add
ja
gs
lcall
add
push
jge
jnp
in
test
add
lea
mov
std
mov
add
cwtl
add
movsb
add
add
add
sahf
mov
scas
in
xchg
fucom
test
sub
pop
xor
push
push
lea
push
lea
push
call
lret
pusha
jl
add
add
push
add
loopne
sti
add
jns
fsubp
out
add
fnstcw
add
add
pop
js
movl
add
add
iret
addl
mov
sub
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
add
stos
add
mov
push
popf
movsl
push
jp
mov
enter
mov
add
add
jno
jnp
pusha
addl
rcll
fs
jns
in
fdivr
lcall
jne
push
push
lea
push
push
call
add
fcoml
xchg
stos
add
mov
add
loop
jne
push
test
xchg
cmpsb
mov
pop
js
add
pop
add
add
test
aam
leave
mov
add
add
bound
push
test
add
mov
push
lahf
fstpl
hlt
movl
sub
pop
mov
push
push
lea
push
lea
push
push
call
xchg
mov
sahf
mov
iret
ret
push
mov
repnz
add
aad
add
mov
fisttps
add
cwtl
clc
add
add
xchg
add
rcl
add
stos
sahf
mov
lcall
repnz
add
rolb
scas
add
into
out
add
lcall
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
push
jl
stos
add
nop
pop
pop
lds
incb
rcl
add
xchg
add
lret
add
fisubl
scas
add
mov
pop
repnz
jmp
cwtl
lcall
add
stc
pop
jae
add
stc
add
push
add
mov
add
insb
add
cli
lods
add
add
lods
enter
sub
pop
add
push
push
push
push
push
push
push
push
push
call
mov
xchg
add
add
int
add
mov
mov
add
jnp
outsl
stos
add
roll
add
jae
mov
add
add
add
xchg
add
jno
ljmp
lcall
lock
lea
push
push
call
add
rcrl
add
rcll
xchg
test
add
mov
add
push
mov
add
cmpsl
add
add
shll
in
xlat
fmull
cmpsb
clc
add
xchg
and
fistpll
jp
mov
nop
add
lock
xchg
add
loopne
repnz
pop
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
add
testl
pop
fistpll
test
add
add
ja
xchg
icebp
iret
add
jp
pop
test
sahf
add
add
mov
xlat
out
add
ja
add
add
mov
mov
pusha
call
aad
mov
lcall
or
push
push
push
push
push
push
push
push
push
call
jbe
rcll
push
add
lds
add
aam
ljmp
add
add
cli
add
add
cmpsl
fiadds
loopne
add
xchg
add
jae
add
je
in
fcompl
les
push
push
push
lea
push
call
hlt
mov
add
imul
push
add
hlt
mov
add
and
add
sarl
mov
bnd
lret
add
add
fildl
xchg
mov
pusha
xchg
cli
mov
pop
mov
pop
ja
rcrl
in
in
pop
push
push
push
call
add
stc
add
cld
add
push
xlat
add
cltd
lock
add
add
testb
add
js
add
add
clc
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
jp
add
add
xchg
loope
add
add
pop
cltd
testb
add
add
add
add
pop
add
flds
add
stos
push
movsl
mov
lcall
add
push
lea
push
push
push
push
push
call
icebp
mov
pop
je
xchg
add
add
mov
add
jecxz
add
cmpsl
out
shll
mov
movsb
test
lahf
xchg
addb
fmulp
in
mov
add
lcall
les
add
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
in
mov
add
pop
cld
add
add
incb
add
fs
shlb
roll
mov
mov
mov
mov
icebp
push
add
add
test
mov
cwtl
add
shlb
add
hlt
mov
mov
add
add
loope
test
lcall
enter
cltd
jnp
rcpps
mov
stos
ja
call
add
add
add
add
int
add
push
cmpl
arpl
mov
cmc
or
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
ljmp
ret
add
idivb
sahf
add
add
add
shrb
repnz
jl
jb
add
mov
mov
lock
push
add
out
mov
push
out
lods
jl
pop
add
lcall
movsb
push
push
push
push
call
lahf
add
jo
mov
int3
popa
jae
xchg
pop
add
add
xchg
add
push
add
add
mov
add
cmc
pusha
mov
add
lret
outsl
nop
mov
sub
pop
pop
push
push
push
push
call
testb
add
jbe
test
pop
mov
test
add
filds
mov
lret
addl
lret
add
xorl
fisubrs
in
into
add
add
add
xchg
add
add
into
fiaddl
add
imul
add
mov
ljmp
pop
mov
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
fisubl
leave
add
into
addr16
mov
pop
je
clc
push
arpl
sub
pop
add
add
push
lea
push
lea
push
call
mov
test
mov
addb
add
add
add
imul
mov
pop
and
add
add
add
add
add
xchg
mov
add
addl
rolb
stc
js
add
js
push
mov
cld
std
add
std
out
in
hlt
lcall
inc
and
scas
push
push
push
call
pop
add
lea
ja
pop
gs
rcrl
jbe
roll
add
jno
add
mov
jl
push
rolb
lcall
push
and
repnz
lods
mov
sbb
aas
push
lea
push
push
lea
push
call
mov
jne
add
stc
int3
xchg
out
add
pop
jp
movsb
gs
add
add
pop
mov
xor
push
push
push
push
push
lea
push
push
call
add
int
fwait
add
add
xlat
mov
add
add
ljmp
add
add
add
lods
add
add
push
fistl
pop
sub
pop
add
push
push
push
lea
push
push
lea
push
call
fsubl
add
add
lret
add
fildl
add
add
add
add
imul
sub
pop
add
push
push
push
push
push
push
call
mov
add
add
add
pop
cmpsl
lods
stos
loopne
stos
add
mov
add
imul
fildl
addr16
shlb
scas
fists
pushf
jbe
jecxz
add
hlt
add
icebp
popa
add
mov
pusha
add
data16
sub
pop
mov
push
push
inc
xor
push
or
not
add
not
inc
sub
xor
pop
pop
push
lea
push
call
pop
icebp
add
mov
popf
lret
stos
flds
add
stos
nop
push
js
loopne
mov
add
add
in
mov
mov
jo
add
incb
add
add
add
add
in
clc
lcall
jne
call
push
lea
push
push
push
call
push
mov
outsl
add
add
push
jns
add
lods
ficomps
pop
jp
enter
lods
sub
pop
push
push
push
not
push
and
add
add
inc
sub
dec
pop
not
xor
pop
push
push
push
push
call
leave
js
add
push
add
fcompl
jne
add
push
add
imul
pop
push
cmpsb
call
push
pop
testb
add
add
jmp
add
call
add
jb
push
mov
mov
outsl
fnstcw
cmpsb
sub
pop
push
push
lea
push
push
push
push
call
add
lret
int
add
mov
add
add
pop
sti
roll
mov
add
add
add
loop
out
in
xlat
loopne
sub
pop
push
push
push
push
push
push
push
call
cmc
add
pop
jmp
push
call
add
notl
add
add
popa
mov
pop
call
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
push
mov
add
xchg
add
jnp
mov
add
enter
cmpsb
xorl
add
xchg
add
add
insb
add
stc
cmpsl
je
add
sub
pop
mov
push
push
push
push
lea
push
call
add
xchg
add
add
mov
flds
add
push
jecxz
rolb
add
jle
add
scas
push
add
add
push
lret
add
add
add
push
lods
add
add
outsl
cltd
imul
test
test
add
add
mov
add
out
mov
stc
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
sti
mov
pop
popf
insb
xchg
xchg
pop
cwtl
add
add
add
shll
add
mov
add
add
filds
add
scas
mov
add
add
push
gs
add
mov
push
lcall
add
sub
pop
mov
push
lea
push
push
push
call
shll
mov
jae
jle
scas
movl
pushf
repnz
pop
div
add
add
add
popf
mov
jb
xchg
add
cltd
jge
add
popf
push
out
xchg
scas
add
add
jge
cli
movsl
in
hlt
nop
add
add
scas
mov
mov
add
add
mov
add
lock
lcall
pop
in
add
push
push
push
lea
push
push
push
push
call
mov
mov
pop
mov
les
add
int
push
mov
jbe
sarl
int3
js
xlat
ja
push
sub
pop
add
push
push
push
push
push
lea
push
push
call
test
jns
jp
push
push
add
add
add
mov
add
int3
out
add
add
add
mov
imul
add
add
add
out
add
in
in
lcall
jae
xor
push
push
push
lea
push
call
loope
orb
iret
add
mov
pop
add
in
xchg
push
out
fildl
add
out
jnp
push
out
jp
shll
add
pop
sti
jle
mov
popf
pop
add
bound
popa
xlat
push
lds
xchg
add
into
mov
stc
movb
pop
add
push
push
push
call
mov
add
nop
pop
add
add
add
sahf
add
js
in
mov
jbe
add
add
les
mov
pop
rolb
movsl
push
add
push
mov
add
add
xchg
test
mov
test
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
lods
mov
addl
add
fwait
movl
xchg
jmp
shll
aad
add
mov
add
add
xchg
sub
pop
mov
push
push
lea
push
lea
push
push
push
call
addl
jbe
push
lds
mov
add
test
push
ret
mov
push
sub
pop
xor
push
push
push
push
push
lea
push
call
add
fs
add
xchg
fwait
xchg
add
cmpsl
rcr
js
push
add
in
jecxz
push
jns
movb
les
add
push
sub
rol
sub
pop
add
pop
push
push
push
push
push
call
mov
add
lret
sar
xlat
jae
add
push
add
jmp
fwait
nop
enter
push
movl
xchg
gs
add
gs
add
addl
add
test
leave
shll
enter
add
je
lock
xchg
mov
jl
add
add
add
fsts
push
leave
cli
leave
add
dec
and
scas
push
sub
lea
add
pop
rep
mov
xor
push
push
push
push
lea
push
push
push
call
mov
pusha
add
add
add
out
add
jbe
add
mov
add
int
rolb
add
leave
arpl
xchg
pushf
add
add
xchg
fnstcw
out
jge
popf
std
cld
sub
pop
or
je
push
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
call
jnp
add
add
jmp
add
test
add
jbe
add
mov
push
call
lds
in
cltd
add
mov
add
js
add
mov
mov
add
gs
add
mov
ljmp
pop
add
add
pop
add
je
in
in
mov
push
push
push
push
push
push
push
call
les
rorl
add
xlat
jle
mov
add
add
add
xchg
xchg
sar
add
add
add
popf
out
pop
jne
add
xchg
mov
mov
cmpl
add
jle
iret
roll
add
push
xchg
add
addl
add
fwait
add
frndint
push
sub
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
stc
leave
sarl
add
mov
jle
mov
add
shl
add
add
out
in
clc
fsts
jl
add
sub
pop
add
push
ror
pop
add
add
push
lea
push
lea
push
push
push
push
call
mov
add
jecxz
add
push
mov
add
push
popa
icebp
xlat
add
loope
add
add
jmp
lea
js
xchg
add
call
jge
add
add
add
xorl
add
aad
add
add
mov
in
add
pushf
ja
add
lcall
push
lea
push
call
xchg
add
pop
jnp
in
mov
fildl
mov
push
fwait
add
add
add
shlb
sti
add
aam
sti
mov
popa
mov
add
repnz
add
popf
jl
add
sub
pop
mov
push
push
lea
push
push
call
addb
mov
add
cltd
shr
add
add
test
in
add
add
popf
bound
jnp
scas
clc
add
lahf
pop
imul
add
in
hlt
pop
xor
push
push
lea
push
call
scas
ret
out
fwait
add
mov
add
data16
cwtl
imul
pop
scas
leave
lahf
mov
jno
add
add
add
add
add
hlt
add
aad
imul
add
fucomp
add
rcr
addb
jae
js
in
hlt
lcall
les
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
ljmp
xchg
leave
pop
add
into
test
call
aam
add
mov
add
add
loopne
xlat
call
int3
in
in
mov
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
mov
nop
imul
add
pop
sar
je
call
add
add
loope
add
jge
push
out
add
in
add
add
push
mov
pop
push
fwait
stc
xchg
add
add
add
add
push
push
push
push
push
push
push
call
add
add
leave
stos
add
lds
add
mov
add
jle
xchg
add
test
push
add
fwait
enter
add
mov
add
in
in
lcall
movsb
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
scas
jbe
add
les
rclb
nop
add
jo
mov
add
mov
add
add
mov
add
mov
lea
jbe
rclb
pop
mov
push
push
push
push
push
push
push
push
call
call
xlat
push
cmpsb
add
into
lods
add
lret
xchg
stc
add
add
add
in
mov
push
fistpl
add
mov
add
mov
shl
mov
add
fldcw
add
pop
out
leave
imul
add
or
push
push
lea
push
push
push
push
call
in
jmp
mov
shrb
fadds
jne
lahf
add
mov
add
jmp
add
add
jle
add
add
xchg
xchg
add
fst
jb
add
into
mov
add
lock
mov
ret
mov
in
call
add
add
je
fstl
cmp
fwait
shrl
push
push
lea
push
push
call
add
add
fcmovnb
add
add
xchg
add
mov
pop
insb
into
jmp
add
jae
add
mov
add
add
ljmp
jle
pushf
add
fiadds
in
loopne
or
je
push
lea
push
push
lea
push
push
push
lea
push
push
call
pop
mov
in
mov
push
add
sarb
add
iret
enter
push
js
in
jl
fwait
aad
add
les
jl
insb
mov
add
pop
add
add
add
arpl
in
loopne
lcall
repz
sub
shl
inc
not
pop
add
add
push
add
add
shr
pop
rep
push
pop
pop
push
push
sub
inc
shr
add
push
or
not
add
xor
ror
xor
sub
sub
pop
xor
lea
rol
pop
push
dec
sub
xor
pop
pop
push
push
push
lea
push
push
call
xchg
sti
mov
ret
in
scas
imul
mov
cltd
lcall
add
ljmp
add
pop
add
lcall
jne
mov
push
lea
push
push
push
push
push
call
je
xchg
add
mov
add
addr16
add
add
testl
add
in
js
add
mov
mov
add
add
sub
pop
mov
push
push
push
lea
push
push
push
call
add
sti
pop
add
add
add
lds
add
mov
mov
mov
pop
lret
mov
add
mov
add
add
add
pop
add
add
add
add
icebp
add
int3
or
jl
addb
add
add
jge
test
pop
sub
pop
jmp
push
shr
not
pop
push
mov
push
push
push
call
pop
insb
push
xchg
add
mov
add
mov
jns
push
sti
aad
imul
nop
add
scas
jo
lds
int3
xchg
add
mov
addl
mov
pop
mov
xchg
add
add
add
lahf
add
out
add
sti
xchg
add
pop
push
add
xchg
push
add
jns
jmp
add
push
push
push
push
push
lea
push
push
call
add
movsb
js
xchg
movsb
add
in
add
pop
lret
mov
add
insb
add
out
add
imul
jns
shr
pop
popa
je
cltd
cmpsl
add
add
add
fdivrl
add
loopne
pusha
add
test
mov
add
add
in
call
ror
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
jne
call
xchg
add
add
add
push
add
cmpsb
popf
add
xchg
int
mov
enter
mov
add
add
popf
add
add
add
mov
add
lcall
ja
add
sub
pop
mov
pop
push
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
js
mov
pop
add
add
add
cltd
mov
jbe
out
add
cmpsl
jo
add
jo
xchg
lods
jge
std
idivl
scas
cld
mov
mov
jb
in
fdivr
lcall
push
push
push
push
push
push
lea
push
push
push
push
call
pushf
add
mov
mov
add
les
movsb
fistpll
fadds
add
mov
mov
jae
jle
stos
mov
imul
lcall
int
aam
add
lcall
push
push
push
push
push
lea
push
push
push
call
mov
add
filds
fldl
clc
fildl
mov
add
add
scas
add
mov
out
pop
xchg
movsb
add
clc
jnp
outsl
add
add
int3
bound
out
pusha
loopne
add
jbe
loope
xchg
je
add
sub
pop
leave
push
shr
xor
xor
pop
ret
push
push
push
push
push
lea
push
push
push
push
call
jl
add
addr16
add
add
clc
arpl
in
arpl
fildll
cltd
fcomp
mov
les
add
add
pushf
push
add
add
cli
call
add
add
mov
add
lahf
add
pop
nop
pop
sub
pop
mov
push
inc
sub
not
sub
pop
add
push
push
push
call
hlt
addl
mov
fnsave
mov
add
add
stc
mov
add
add
add
hlt
lcall
push
push
push
push
lea
push
push
call
add
outsl
fcmovu
test
add
shlb
std
mov
add
fcomps
roll
add
add
pop
mov
add
add
add
add
add
add
int3
lcall
add
sub
pop
push
push
push
push
push
push
push
push
push
call
cmpsb
faddl
mov
mov
add
add
nop
add
in
flds
add
jnp
pop
pushf
add
in
pop
mov
pop
add
iret
leave
sub
pop
push
push
add
add
pop
movl
push
shr
rol
pop
addl
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
outsl
pop
mov
add
mov
clc
add
add
fstl
add
jmp
test
fistl
add
fisubrs
mov
in
xchg
add
roll
icebp
mov
loope
add
iret
jae
in
loopne
test
je
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
xlat
add
lret
mov
push
jmp
flds
add
add
add
mov
jge
mov
incb
sar
mov
add
mov
stos
data16
out
mov
jbe
faddl
roll
ja
add
add
add
lahf
hlt
out
sub
pop
mov
pop
push
lea
sub
ror
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
std
leave
mulb
loopne
movb
xchg
add
add
xchg
mov
add
add
jnp
add
jb
add
out
add
add
std
popa
add
fwait
pop
movsb
add
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
lret
testl
shrl
push
popl
stos
lahf
jne
xchg
xchg
xchg
add
push
stc
int3
cltd
add
add
push
jle
add
add
pop
leave
push
add
pop
ret
push
lea
push
call
xchg
fbld
add
add
jb
insb
les
movb
add
add
cwtl
add
add
popf
push
mov
cwtl
add
sub
add
xchg
call
xchg
add
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
rolb
push
shlb
add
mov
add
subl
flds
xchg
jnp
add
int
sti
add
add
rolb
add
lods
jmp
jecxz
add
icebp
stc
add
stos
jne
add
add
add
lcall
in
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
push
add
lcall
add
test
add
les
add
add
xchg
in
loopne
add
push
push
sub
rol
pop
push
push
push
lea
push
push
lea
push
push
call
add
clc
add
jb
ret
push
add
in
add
add
mov
int3
popf
xchg
add
add
js
mov
lahf
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
push
fildl
addb
add
popa
add
add
add
iret
xchg
mov
mov
jb
loop
add
jle
pop
fsubrp
test
sub
pop
push
push
shl
ror
pop
testl
push
push
push
call
add
into
repnz
iret
mov
jb
add
mov
fcoml
add
add
lea
add
mov
mov
mov
add
cmpl
fwait
mov
add
out
mov
fildl
lcall
inc
or
push
push
push
push
push
lea
push
push
push
push
push
call
jge
addl
add
iret
add
notb
addl
add
pusha
out
add
jge
fsubrl
xchg
cwtl
add
movb
scas
add
push
add
add
add
add
add
push
pop
jmp
lock
jne
stos
cwtl
add
lcall
add
xchg
push
push
lea
push
push
call
popf
push
add
out
jl
nop
mov
mov
arpl
nop
add
adcb
add
mov
imul
mov
fiaddl
in
add
lcall
imul
jbe
pop
inc
jge
push
push
call
mov
test
lods
mov
out
cmpsl
in
push
pop
mov
bound
add
pop
add
add
stc
add
xchg
add
addr16
sub
pop
mov
pushl
push
push
push
call
add
cmpsl
icebp
add
cmpsb
aam
movsl
add
leave
add
popf
in
jno
cmpsl
jbe
xchg
add
add
stos
leave
imul
fs
popf
push
jb
pop
loope
gs
stos
add
cli
add
add
jl
add
sub
pop
push
push
ror
pop
push
push
add
pop
call
cmpl
jne
push
not
shl
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
stos
add
notb
test
lcall
add
add
add
add
cltd
jge
add
sub
pop
pop
push
lea
push
lea
push
push
call
fucom
add
jp
loope
add
jb
cwtl
jbe
lods
add
add
add
in
pushf
nop
sti
pop
add
gs
loope
add
nop
rcrb
jnp
in
lock
pop
push
add
shl
pop
leave
push
lea
push
push
lea
push
call
stos
test
add
out
lcall
fucomp
add
into
mov
lret
add
int3
js
fiaddl
sub
pop
ret
push
not
sub
pop
push
mov
push
push
call
pop
lds
add
test
add
movl
push
movl
add
add
add
lods
add
add
add
add
push
add
add
pop
inc
mov
push
sub
pop
add
push
push
push
push
push
push
push
call
or
add
add
add
ljmp
add
fcmove
add
add
add
lea
add
flds
enter
add
add
add
pop
add
add
add
add
add
push
jb
add
jmp
in
in
lcall
push
rol
pop
push
push
push
shr
pop
push
movl
push
lea
push
call
fisubl
clc
xchg
add
popl
rcr
jae
add
cmc
lret
ret
push
add
cltd
jns
cltd
std
mov
mov
mov
cwtl
mov
into
add
scas
lret
mov
not
pop
add
add
add
cli
add
lods
roll
imul
add
sub
pop
push
push
inc
sub
pop
call
push
push
push
push
lea
push
push
push
push
call
add
jecxz
fdivl
mov
add
out
imul
xlat
stos
in
pop
add
fwait
in
add
add
insb
jle
add
out
hlt
add
adc
fdivs
fcompl
cltd
stc
call
shll
insl
cld
add
mov
push
call
add
popa
add
add
loope
add
add
mov
add
mov
pushf
add
add
add
mov
nop
stc
loope
jno
add
pop
cmpl
jne
pop
push
push
call
mov
xchg
scas
popl
test
add
add
mov
jae
mov
sarl
pop
mov
out
add
mulb
mov
lcall
add
sub
pop
pop
push
inc
not
lea
pop
pop
push
add
dec
inc
pop
pop
leave
push
lea
add
pop
ret
push
push
call
add
fildl
jo
add
int3
test
mov
add
pop
push
add
shlb
add
pop
add
out
mov
cltd
jp
mov
addr16
mov
pop
xchg
mov
rcr
andl
hlt
hlt
fsub
in
pop
add
add
cmpsl
lods
icebp
mov
pop
push
push
push
call
add
imul
add
add
in
mov
xchg
sti
pop
add
add
call
add
add
imul
in
add
add
add
mov
push
add
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
popa
add
test
out
add
add
mov
movb
add
add
add
push
popf
add
add
int3
add
add
push
cltd
addb
jle
cwtl
push
lock
les
add
add
sti
add
add
cld
icebp
mov
add
add
cli
jl
add
lahf
push
test
push
push
push
push
push
push
push
lea
push
call
data16
into
add
mov
mov
nop
jge
cmpsl
add
pushf
mov
jns
pushf
add
mov
push
add
jmp
add
xchg
pop
scas
xchg
filds
push
add
pop
push
push
push
inc
add
dec
dec
push
sub
add
ror
dec
shl
add
sub
not
pop
add
shl
shr
pop
push
push
push
push
push
lea
push
push
push
push
call
jp
in
xchg
mov
in
cmpsl
add
ljmp
add
add
mov
add
add
scas
lds
in
sub
pop
pushl
call
push
push
push
call
mov
add
mov
push
rcll
add
frstor
add
jmp
add
add
jbe
push
pop
add
js
push
add
add
pop
sub
pop
call
mov
push
push
push
push
lea
push
call
add
loope
lret
bound
mov
fdivrp
iret
xchg
jbe
push
xchg
push
imul
jns
add
mov
test
add
mov
roll
lcall
inc
cmp
ror
inc
pop
sub
push
sub
pop
mov
push
inc
pop
shr
push
lea
push
push
push
lea
push
call
stos
add
gs
aam
aam
mov
je
fsubrs
add
data16
mov
mov
stc
lods
je
gs
add
in
add
add
addb
mov
jge
xchg
push
add
int
add
lcall
inc
or
push
push
push
push
call
lock
jbe
roll
roll
sti
add
mov
aad
push
jne
add
fadds
mov
jmp
mov
add
xchg
fsub
add
nop
jnp
addr16
mov
ja
lcall
in
pop
mov
mov
push
push
push
push
push
push
push
call
pop
addb
add
xchg
mov
add
repnz
xchg
add
loopne
mov
sahf
add
jno
add
add
bound
mov
in
in
lcall
inc
or
push
push
push
call
ror
jbe
stc
xchg
mov
jge
mov
mov
add
jnp
cmpsb
addb
int3
add
lods
pop
add
addl
and
roll
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
cwtl
test
add
jp
mov
add
push
insb
ret
ret
cmpsl
jp
mov
add
add
add
add
mov
into
in
add
mov
movsl
pushf
mov
add
movsb
add
add
add
xchg
scas
popa
mov
mov
sub
pop
mov
cmp
jne
push
push
lea
push
push
push
call
add
add
add
xchg
sarb
movb
add
add
add
jp
add
pop
add
fnstsw
sub
pop
cmp
jne
push
inc
shr
ror
pop
mov
push
push
push
push
lea
push
push
push
call
add
hlt
cmpsl
iret
lahf
pushf
add
rcll
insb
mov
jge
jne
add
iret
add
addb
shll
add
fs
add
add
in
sub
pop
movl
push
pop
jmp
push
push
push
push
push
push
lea
push
push
push
call
add
jbe
fnstsw
in
mov
add
xchg
int3
lcall
jmp
xchg
clc
add
add
add
sarl
cltd
lds
popf
jne
jnp
mov
shlb
fnsave
add
add
add
lcall
inc
cld
mov
push
ror
rol
pop
sub
jne
push
push
lea
push
call
add
shr
add
add
fnstenv
lret
jne
mov
add
in
add
xchg
pop
add
add
mov
hlt
add
jl
add
add
hlt
lcall
inc
adc
add
add
push
dec
pop
jmp
push
push
push
push
push
push
push
push
push
lea
push
call
loopne
jge
jns
add
add
add
shll
add
add
jbe
je
mov
js
push
pop
mov
add
fwait
xorb
sub
pop
mov
push
add
pop
mov
cmp
jne
push
push
push
push
push
lea
push
lea
push
push
push
push
call
leave
add
popf
add
shlb
ret
scas
fs
jbe
push
mov
pop
loop
add
lods
add
movsw
xchg
test
add
add
cwtl
push
add
test
mov
js
cld
add
fildl
lods
pop
add
testb
loopne
fcompp
add
pusha
test
stos
roll
inc
adc
add
mov
mov
andb
sub
add
hlt
stc
std
mov
jae
ret
out
add
add
jl
js
jle
mov
jne
push
shrb
movsb
sahf
sub
pop
movl
push
sub
sub
add
pop
jmp
mov
push
add
add
dec
pop
cmpw
jne
push
dec
pop
mov
push
push
push
lea
push
call
add
imul
add
in
icebp
add
leave
pop
popa
add
les
pop
fucomi
rcrl
xchg
imul
mov
mov
add
fdivr
mov
in
xchg
movsb
incb
aam
ja
lods
cli
mov
sub
pop
movl
jmp
push
push
lea
push
push
lea
push
push
push
call
iret
add
sahf
pop
lock
add
pop
les
mov
popa
jne
add
add
pop
popa
pop
add
add
jo
sbbl
stos
lock
add
addl
int3
add
loop
loopne
jmp
xchg
sub
pop
pushl
push
push
push
push
call
add
push
mov
std
add
add
jle
filds
jle
add
cmpsb
jge
cmpsb
ret
add
xlat
sti
ljmp
add
les
add
mov
push
mov
add
add
js
fistps
push
jle
int
fwait
imul
add
popf
add
add
lcall
push
push
call
pusha
add
movsb
add
add
mov
stos
add
jecxz
xchg
add
pop
cmp
fildll
add
add
add
mov
insb
mov
add
repnz
ljmp
inc
or
push
push
push
push
push
push
push
call
add
mov
push
xchg
push
add
fsubl
mov
in
add
mov
xchg
test
in
loopne
mov
mov
push
push
add
push
xor
add
sub
add
dec
pop
xor
sub
sub
inc
pop
push
push
call
add
add
add
addl
add
shlb
data16
add
loop
add
gs
sti
fsubrl
add
add
jecxz
add
les
add
cwtl
loopne
sub
pop
push
push
add
pop
call
push
lea
push
push
push
call
add
pop
mov
cwtl
jmp
lret
notb
scas
out
mov
push
mov
test
leave
add
jmp
push
xchg
jb
mov
cmpl
je
push
push
add
add
push
sub
add
sub
shr
sub
xor
shl
pop
sub
dec
xor
pop
push
sub
add
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
mov
jns
enter
cmpsl
imul
icebp
int
fiadds
push
mov
add
add
add
add
add
mov
in
mov
loopne
lcall
cmp
rol
je
push
push
add
push
and
add
sub
sub
lea
ror
shr
pop
sub
sub
sub
pop
push
push
call
in
lea
add
add
push
mov
addr16
add
mov
add
pop
imul
gs
add
mov
add
add
mov
mov
clc
pop
push
push
xor
shr
rol
shl
pop
call
push
inc
shl
pop
cmpl
je
push
push
sub
push
and
add
sub
sub
sub
inc
sub
xor
sub
not
add
pop
dec
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
cmc
movsl
lcall
add
cli
cltd
stc
stc
rorb
add
out
mov
test
add
js
lcall
scas
mov
push
js
ror
add
sub
pop
push
push
lea
push
call
mov
add
jmp
jecxz
rcrl
mov
add
rcll
lret
int3
lret
cwtl
add
add
mov
add
fptan
jmp
push
add
add
add
push
add
lods
add
xchg
add
int3
je
push
push
xor
add
xor
add
push
xor
add
dec
add
shl
shl
sub
sub
pop
inc
lea
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
xchg
nop
pushf
add
add
aad
mov
add
add
scas
stos
sahf
int3
mov
in
fcomps
push
lea
push
lea
push
push
push
lea
push
lea
push
call
push
add
jo
add
add
movl
add
jbe
add
xchg
out
add
mov
arpl
jl
jbe
push
imul
xchg
cmpsb
loopne
add
imul
ja
add
arpl
mov
add
mov
addb
ja
mov
jnp
mov
pop
call
push
push
push
push
push
lea
push
push
push
call
jle
mov
add
add
clc
mov
ret
shr
out
rclb
add
add
push
bound
add
add
add
pop
outsl
add
push
int
push
addl
out
ret
movsb
add
add
mov
shl
add
inc
push
or
inc
add
sub
rol
sub
pop
add
pop
push
lea
push
push
lea
push
push
push
push
push
call
xchg
jo
sti
xchg
sti
mov
push
add
jl
mov
add
add
into
enter
add
add
out
pop
mov
fs
add
add
add
fadd
cmc
add
addl
sub
pop
push
call
push
xor
pop
cmpl
je
push
push
shr
sub
xor
push
push
pop
add
not
rol
sub
xor
shl
pop
add
inc
lea
pop
push
lea
ror
ror
pop
push
push
dec
pop
call
push
dec
lea
rol
pop
cmpl
je
push
push
shr
push
sub
add
ror
inc
sub
sub
add
add
sub
add
pop
inc
pop
push
inc
pop
push
call
push
ror
shl
xor
pop
cmpl
je
push
push
add
push
and
add
shr
sub
ror
ror
pop
not
add
shl
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
cli
shrb
test
add
add
into
add
out
add
out
add
ljmp
add
js
mov
add
mov
xchg
add
add
repnz
add
add
stos
arpl
movsb
mov
jne
xchg
add
sub
pop
push
push
sub
shl
shl
pop
call
cmpl
je
push
push
push
or
inc
add
not
sub
shl
sub
pop
add
inc
pop
push
ror
pop
push
call
push
lea
push
push
lea
push
push
push
call
add
clc
repnz
movsb
push
sahf
mov
int3
leave
add
push
rcrb
popa
jp
jnp
mov
and
outsl
add
fldl
jno
add
pop
add
mov
add
push
pop
lret
lcall
mov
sub
pop
cmpl
jne
mov
push
xor
pop
movl
push
shl
xor
ror
pop
jmp
xor
push
push
call
add
in
add
out
add
mov
add
in
pop
cld
add
fildl
mov
jo
add
add
add
add
mov
xchg
roll
fdivrp
into
xlat
mov
add
add
pop
int
test
add
add
mov
jb
mov
sti
add
cwtl
mov
fcmovbe
jno
sub
pop
pop
push
pop
pop
pop
push
push
push
call
sti
testb
jecxz
fcomp
xchg
hlt
sti
push
add
add
add
fisubrs
test
movsl
flds
cmc
mov
in
test
out
pop
fdivrs
mov
sahf
add
push
add
fs
addr16
add
add
addb
add
int
add
jge
pusha
add
loopne
sub
pop
pop
push
rol
shl
not
pop
leave
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
popl
jne
add
mov
outsl
negl
jmp
add
add
mov
add
jl
add
outsl
lods
add
ret
rolb
enter
pop
pop
sub
pop
ret
push
push
push
push
call
icebp
mov
add
add
stc
add
cld
add
mov
push
test
push
add
in
loopne
pop
fs
jae
mov
add
jecxz
mov
pop
add
lcall
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
fdiv
jae
addb
add
movsb
add
mov
add
pop
pop
leave
push
jecxz
mov
pop
pop
mov
lea
mov
add
add
stc
add
mov
imul
add
add
test
pop
test
xchg
add
in
int
scas
add
in
add
push
inc
pop
cmpl
jne
push
push
sub
push
xor
add
rol
sub
inc
sub
dec
shr
pop
lea
pop
push
pop
pushl
push
pop
call
push
lea
add
rol
dec
pop
push
push
ror
sub
not
add
pop
call
push
push
push
lea
push
call
rorb
mov
add
add
add
jge
add
flds
arpl
fwait
add
shl
movsl
add
add
push
add
add
idivb
mov
mov
div
fiaddl
add
in
lock
lcall
and
add
push
push
call
adcl
add
xchg
sahf
sahf
imul
add
add
add
mov
jl
add
sahf
cltd
clc
sti
add
mov
add
cmpsl
add
test
add
mov
push
movsb
sarb
add
addl
pop
cmpl
jne
push
dec
pop
mov
push
lea
push
call
cmpsb
push
add
add
add
loopne
cmpsl
pop
add
mov
add
add
add
cltd
add
enter
fcmovnb
scas
add
add
add
jne
add
add
xchg
add
add
and
arpl
mov
leave
into
stos
loopne
add
add
add
mov
add
popf
sub
pop
call
ret
push
xor
lea
pop
jmp
push
push
push
push
push
push
call
in
in
add
scas
add
add
fcompl
testb
mov
lahf
fs
add
add
lods
add
in
fldl
stos
jle
add
mov
fwait
add
stos
lret
add
add
xchg
add
leave
add
add
sub
pop
cmpl
jne
push
push
not
push
or
not
add
shr
sub
inc
sub
pop
xor
pop
push
ror
add
ror
shl
pop
pushl
push
push
push
call
in
gs
push
fiadds
add
pusha
add
in
pop
in
push
add
add
add
add
add
ja
mov
pop
lods
in
add
cmc
cltd
lods
add
sub
pop
call
push
push
shr
pop
call
push
push
push
push
push
push
push
push
push
lea
push
call
testl
jle
ja
jnp
filds
lea
add
jge
stos
movsb
lret
xorl
aam
rolb
ret
mov
rcrb
lcall
out
add
add
clc
lahf
je
add
roll
add
sub
pop
jmp
cmpl
je
push
sub
sub
dec
pop
cmpl
jne
push
add
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
pop
movsb
lods
mov
sti
pushf
out
hlt
lahf
add
in
cli
rcl
add
mov
add
popa
mov
or
add
push
xor
shr
add
pop
push
push
dec
not
sub
pop
jmp
push
push
add
push
or
not
add
shr
sub
shr
pop
not
lea
pop
push
inc
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
lea
push
call
jle
addb
ftst
add
mov
add
add
add
mov
add
mov
add
mov
add
add
pop
add
sub
pop
call
push
push
push
push
push
push
push
push
call
ffree
push
jae
add
loope
add
add
add
add
loop
xchg
jle
les
out
add
add
add
add
add
mov
xchg
add
add
orl
into
mov
mov
xchg
add
nop
scas
add
push
sub
pop
call
push
push
inc
push
push
pop
add
sub
not
inc
lea
sub
add
rol
pop
xor
ror
inc
ror
pop
push
push
push
push
lea
push
call
add
add
add
add
loope
enter
lret
fucomi
stc
add
andl
jmp
pushf
xchg
pop
nop
add
popf
fsubrp
push
mov
add
add
shrb
sub
pop
pushl
push
pop
call
push
sub
sub
shr
pop
call
push
push
not
push
push
pop
add
dec
inc
lea
sub
rol
pop
xor
not
lea
pop
push
not
pop
pushl
push
shl
pop
call
push
shr
add
ror
xor
pop
call
push
push
shl
push
or
not
add
sub
xor
dec
ror
sub
rol
pop
sub
add
sub
pop
push
add
shr
pop
pushl
push
push
push
push
push
push
push
push
push
call
rolb
add
add
add
jae
loope
add
add
pusha
xlat
add
add
add
loopne
roll
popa
int
mov
add
leave
mov
pop
add
call
mov
add
mov
add
les
in
fcompl
pop
pop
add
push
add
sub
sub
pop
call
push
push
lea
push
push
pop
add
shr
sub
ror
sub
pop
add
pop
push
lea
push
push
lea
push
push
lea
push
call
add
imul
jns
add
data16
lods
add
add
mov
data16
add
xlat
add
pushl
call
push
sub
add
pop
call
push
push
add
sub
add
push
and
add
add
lea
add
sub
sub
lea
pop
dec
lea
ror
pop
push
lea
push
push
push
lea
push
push
call
add
jo
movl
repnz
sahf
add
add
add
fiaddl
int3
sahf
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
jecxz
addl
cmpsb
imul
add
add
popa
lahf
mov
fldl
add
push
add
ljmp
pop
clc
add
mov
in
fdivr
lcall
out
sbb
push
push
push
push
lea
push
lea
push
lea
push
push
call
pop
out
loopne
jne
add
or
mov
cwtl
add
test
in
fcomp
add
leave
add
nop
mov
pop
add
test
in
fcomps
shrb
repnz
shll
xlat
shl
ror
push
and
add
sub
ror
lea
sub
add
pop
not
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
test
add
movsl
mov
push
push
add
add
add
out
cli
mov
xchg
mov
mov
cmpb
xor
push
fldl
sti
xchg
add
imul
fsts
push
add
add
mov
add
in
lcall
jne
push
sub
xor
pop
call
call
push
push
shl
add
not
push
or
not
add
ror
inc
shr
sub
sub
dec
add
pop
shl
shr
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
shlb
add
add
lcall
lcall
add
mov
ret
add
add
sti
hlt
add
sarl
push
mov
add
add
movsl
xchg
in
fcompl
jne
call
push
push
push
lea
push
call
cld
add
test
mov
add
push
sahf
add
pusha
add
iret
jge
add
in
clc
add
int
lahf
rolw
cwtl
scas
add
mov
cmc
mov
add
stos
aad
mov
in
jne
jne
add
sub
pop
call
push
push
push
or
inc
add
dec
sub
sub
pop
shr
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
shl
jecxz
test
add
pop
test
inc
in
add
add
int
insb
add
ret
add
add
xchg
notb
jne
call
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
lcall
add
xchg
add
fbld
lret
add
sahf
in
add
cmc
mov
jl
jle
pop
movsb
in
add
lock
pop
call
push
push
xor
ror
sub
push
and
add
dec
add
shr
sub
sub
lea
add
pop
shl
pop
push
push
lea
push
lea
push
call
lret
xchg
add
jp
andb
add
lds
add
mov
mov
les
add
add
fcmovbe
aad
in
lock
lcall
jne
push
ror
pop
call
push
lea
sub
rol
add
pop
lea
push
sub
xor
rol
pop
push
call
push
push
dec
not
dec
push
or
not
add
rol
xor
rol
add
sub
shr
add
inc
pop
add
pop
push
lea
shl
pop
pushl
call
push
sub
not
sub
add
pop
call
push
push
add
push
and
add
sub
sub
xor
sub
pop
rol
add
dec
pop
push
not
pop
pushl
push
add
not
shr
pop
call
push
inc
pop
call
push
push
shl
lea
rol
push
and
add
sub
shl
add
not
sub
pop
pop
push
shl
rol
pop
pushl
push
push
push
lea
push
push
push
push
push
push
lea
push
call
gs
mov
pushf
fstps
add
int3
add
mov
out
in
xlat
xchg
add
add
lds
scas
mov
int
xchg
insb
loop
add
lret
in
pop
add
add
test
add
add
lock
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
call
nop
popa
mov
add
mov
push
add
add
leave
add
add
ficomps
pop
add
les
xchg
add
xchg
faddl
lcall
add
add
int3
push
add
rolb
add
popf
xchg
mov
add
aad
in
fcompl
shrb
lahf
xchg
push
ror
push
push
pop
add
sub
xor
lea
pop
shl
pop
push
shl
add
add
pop
pushl
call
push
push
dec
ror
push
xor
add
add
shr
inc
add
sub
lea
sub
add
pop
ror
pop
push
push
rol
xor
push
sub
add
shr
sub
sub
shl
pop
add
lea
add
pop
push
add
pop
call
push
push
push
push
push
push
push
push
call
stos
pop
add
pop
popl
push
jbe
add
pop
add
add
incb
add
add
add
push
aad
hlt
mov
add
add
add
mov
add
add
add
add
add
add
add
lcall
dec
jne
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
hlt
add
mov
cli
sarb
stos
out
movl
pop
icebp
lods
out
add
lcall
cld
add
ljmp
add
lcall
rolb
add
push
push
push
lea
push
push
push
call
cmpsl
add
add
add
add
xchg
aam
add
mov
pop
ja
add
xchg
add
in
loopne
add
pop
fs
mov
add
lret
loope
icebp
sub
pop
int
push
inc
xor
pop
lea
push
push
rol
sub
push
xor
add
add
inc
sub
add
pop
lea
add
inc
lea
pop
push
push
push
push
lea
push
push
call
scas
mov
add
push
pusha
ret
add
int
cmpsb
add
cltd
pop
mov
outsl
add
mov
aad
add
sti
mov
add
roll
ja
add
push
repnz
mov
jle
add
bound
add
add
cwtl
add
add
aam
xchg
mov
sub
pop
pushl
push
ror
add
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
call
fdecstp
ja
add
add
add
enter
add
addb
xchg
mov
roll
add
add
add
push
add
mov
in
loopne
lcall
shrb
out
push
push
lea
dec
lea
shr
push
push
pop
add
xor
shl
sub
add
pop
lea
pop
push
ror
pop
pushl
push
lea
shr
shr
lea
pop
call
call
push
sub
pop
mov
push
lea
push
push
push
push
call
add
xchg
xchg
add
add
sti
pop
mov
fwait
jmp
add
movb
in
add
push
mov
mov
fwait
test
add
std
add
aad
add
shr
add
mov
add
loope
add
sub
pop
lea
push
push
rol
shl
xor
push
or
not
add
lea
sub
shl
sub
rol
rol
pop
ror
pop
push
add
pop
pushl
call
push
rol
shr
inc
pop
lea
push
push
push
call
add
ret
mov
std
gs
add
lcall
ja
add
not
xchg
rcl
add
add
add
add
jmp
lret
add
xor
cmp
sbb
notl
add
shrl
add
loopne
repnz
add
add
jne
mov
mov
push
add
add
jge
add
cltd
xchg
mov
add
rol
add
stos
rorb
hlt
sub
pop
pushl
push
push
sub
push
or
inc
add
lea
inc
inc
sub
rol
ror
shr
sub
pop
pop
push
ror
add
pop
push
push
dec
pop
call
push
push
add
push
or
not
add
xor
not
sub
ror
inc
xor
pop
ror
shr
pop
push
shl
rol
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
add
push
popa
jge
xchg
shlb
add
add
ja
cmc
add
mov
add
cli
add
jmp
imul
add
add
add
popf
add
lcall
int
add
push
push
add
not
pop
call
push
push
rol
dec
push
or
not
add
inc
add
dec
add
sub
add
pop
xor
rol
pop
push
lea
push
lea
push
push
push
lea
push
call
jno
in
mov
add
pop
add
repnz
add
jb
rorl
clc
iret
lret
push
mov
out
add
mov
add
scas
decb
movsb
add
sti
add
in
call
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
lock
add
outsl
mov
iret
add
bound
push
add
add
mov
xchg
enter
add
push
addr16
enter
mov
lcall
enter
push
push
push
push
push
lea
push
lea
push
push
call
and
add
add
imul
add
xchg
pop
in
test
shlb
add
add
mov
add
add
add
imul
loopne
lcall
rclb
jle
push
push
push
lea
push
push
call
push
add
jl
jp
mov
push
stos
icebp
jge
bound
add
pop
add
mov
andb
add
cli
iret
add
lcall
pushl
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
ret
add
loopne
les
pop
clc
xchg
mov
add
add
add
add
add
fiadds
add
insb
add
add
lods
ljmp
jae
jle
add
add
add
in
fcomps
mov
jmp
push
push
sub
shr
ror
push
or
inc
add
sub
inc
sub
rol
pop
inc
rol
not
pop
push
push
call
sahf
cltd
add
scas
add
push
jne
add
push
add
add
add
add
sbb
add
test
pushf
add
in
clc
lcall
jne
call
push
not
add
pop
push
push
not
pop
call
push
push
dec
sub
ror
push
xor
add
shr
xor
inc
sub
sub
rol
lea
pop
dec
pop
push
push
push
push
push
push
call
add
add
mov
jmp
add
add
add
mov
ja
lret
int3
addr16
out
les
lds
add
jle
add
outsl
mov
fstpl
add
iret
add
enter
sahf
mov
cli
out
movl
lods
add
call
pushl
push
rol
lea
pop
call
push
lea
pop
push
call
push
push
push
push
push
lea
push
push
call
add
cmpsl
add
add
ja
jo
add
add
push
add
lock
jmp
add
mov
add
mov
lret
jno
sti
mov
sub
pop
leave
push
push
push
push
push
push
call
add
cwtl
add
popa
in
add
add
shl
add
repnz
add
fbld
movsl
fwait
into
ja
leave
lret
add
add
add
lcall
sub
fistl
fcoms
fs
pop
add
push
rol
lea
pop
pop
push
lea
push
push
call
jge
sarl
fildl
mov
mov
add
fidivrl
ljmp
into
clc
roll
sbbb
add
sahf
test
pop
loopne
add
jns
mov
int
add
add
xor
add
add
mov
pop
push
ror
shr
inc
sub
pop
pop
xor
push
inc
rol
add
pop
inc
ret
push
not
shr
pop
leave
ret
push
shl
pop
push
push
push
push
push
push
lea
push
call
push
add
pop
add
icebp
add
nop
out
mov
add
add
cmpsl
aad
add
lods
add
add
add
cwtl
xchg
faddl
lods
add
fmul
add
leave
xchg
jnp
add
add
cltd
add
je
add
push
add
add
in
int
jo
cmpsb
jmp
jp
add
in
cmpl
jne
push
lea
push
push
push
lea
push
lea
push
push
call
insb
lahf
test
xchg
push
xchg
mov
add
scas
je
cmpsl
fstpt
lret
add
add
data16
add
idiv
push
imull
push
jl
fiadds
push
addb
and
push
push
push
push
push
push
call
add
add
lret
add
add
lods
loop
add
add
ja
enter
add
in
add
int3
add
lods
movsl
mov
add
add
in
call
jmp
push
not
shr
pop
mov
push
shr
not
inc
pop
and
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
add
add
add
les
add
scas
push
push
jmp
insb
testb
addb
lock
bound
add
add
mov
add
add
mov
cli
add
fwait
add
xor
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
loop
arpl
leave
add
add
add
ret
mov
hlt
mov
not
add
fildl
add
jbe
shl
mov
add
jl
incb
jecxz
add
pop
add
enter
add
cmpsb
pusha
add
xchg
add
add
add
cltd
mov
xor
add
push
push
lea
push
push
push
push
push
push
call
mov
add
push
sti
xchg
loop
add
lea
pop
add
add
stos
add
mov
add
add
add
ljmp
in
mov
add
movsl
adcb
add
fcomip
add
testb
pop
xor
push
lea
push
push
push
push
push
lea
push
call
mov
fildl
bound
int3
cwtl
pop
jnp
add
iret
arpl
lahf
stc
cmpsb
lods
add
add
add
mov
test
add
in
add
stc
jmp
add
xchg
mov
in
in
dec
push
add
ror
dec
pop
sub
jmp
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
out
add
add
lret
cmc
fcmovu
add
add
mov
test
outsl
add
add
jae
add
mov
test
add
add
add
add
stos
jle
ja
add
enter
mov
pop
sub
push
ror
pop
pushl
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
insb
sahf
pop
mov
mov
pop
mov
movsl
xchg
add
loop
in
loopne
sub
cmp
jne
push
lea
push
push
push
push
push
push
push
push
call
popl
lods
flds
nop
add
lea
add
test
add
add
push
add
add
add
mov
add
xlat
arpl
pop
jecxz
add
loop
jnp
add
mov
les
pop
cmpsl
add
add
aam
mov
leave
orb
mov
in
fcompl
enter
xchg
mov
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
movsb
mov
mov
add
mov
add
loop
add
push
mov
mov
add
scas
in
add
std
popa
add
push
cld
stos
into
sub
pop
lea
sub
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
jns
stc
iret
scas
jmp
enter
adc
mov
into
xchg
add
add
add
add
mov
pop
nop
jmp
add
sahf
add
or
adcl
rorb
shr
add
push
shr
pop
sub
push
ror
shl
inc
pop
pushl
push
add
lea
sub
pop
pop
shr
push
add
rol
pop
and
sub
push
add
pop
cmp
jne
push
inc
sub
shl
inc
pop
leave
push
push
push
push
lea
push
push
push
call
add
add
lock
jb
aam
in
jnp
hlt
add
pushf
call
add
push
filds
add
out
in
aam
add
out
sahf
push
popf
mov
jp
lods
add
mov
out
add
add
div
add
into
push
add
int
mov
addl
mov
ret
push
ror
ror
pop
push
mov
push
add
add
add
pop
add
push
push
push
push
push
push
lea
push
push
call
add
jecxz
add
jl
rolb
add
add
addb
into
pop
out
xchg
shrl
test
add
int
imull
lcall
push
push
add
sub
dec
xor
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
mov
add
mov
mov
mov
shll
add
imul
jecxz
add
add
mov
out
mov
test
xchg
popa
jno
imul
test
rolb
stos
fidivrs
mov
jbe
add
rorl
add
loopne
push
mov
push
shr
rol
not
lea
pop
lea
sub
push
lea
push
push
push
push
push
push
call
aam
lock
mov
movb
add
add
lahf
jae
add
jmp
cmc
les
xchg
mov
mov
jecxz
mul
testb
rorl
add
testl
add
lcall
adc
rolb
shr
add
push
sub
pop
mov
add
push
not
pop
mov
add
push
add
inc
pop
xor
mov
push
push
push
push
push
push
lea
push
lea
push
call
add
movb
add
out
add
lods
test
add
loop
add
aam
out
add
int3
in
add
add
mov
repnz
add
mov
leave
std
add
lcall
loopne
push
add
rol
pop
rol
push
push
push
push
push
push
push
call
add
add
roll
add
shl
add
arpl
pushf
je
add
xchg
add
add
add
mov
jne
add
add
in
in
lcall
rolb
add
and
mov
push
push
push
push
push
push
push
push
call
jmp
pop
add
movsl
add
rorl
push
add
sti
jp
mov
jle
mov
ret
add
repnz
add
shl
add
add
add
in
fdivr
lcall
cmpb
jne
push
lea
push
push
lea
push
push
push
call
add
fildl
add
jno
push
add
add
js
mov
repnz
movsl
push
mov
mov
add
add
insb
pop
mov
lahf
add
jnp
cmc
mov
xchg
movsb
addl
in
call
add
push
push
call
add
fidivrs
addl
notl
enter
imul
add
jmp
gs
add
popl
popf
into
add
add
movsb
add
je
add
jl
icebp
jge
mov
in
clc
pop
cmp
je
push
shr
dec
sub
shl
pop
add
push
pop
cmpl
jne
push
shl
xor
pop
xor
push
lea
push
lea
push
lea
push
push
call
mov
xchg
pop
in
lods
add
add
pushf
je
add
pushf
fwait
les
out
mov
test
stos
ror
mov
filds
add
popl
pop
sub
pop
pop
pop
push
lea
push
push
push
call
scas
mov
add
add
pushf
add
out
add
js
sahf
roll
push
add
add
pop
push
push
push
call
add
add
in
jecxz
xchg
clc
mov
ljmp
add
add
add
outsl
out
shlb
mov
lds
add
jecxz
filds
add
mov
push
add
out
add
lcall
push
push
lea
push
call
testb
lea
testl
add
lahf
add
fistps
add
stc
push
into
add
add
jl
mov
mov
xchg
add
add
sar
xchg
add
icebp
mov
add
jno
add
mov
mov
add
mov
sub
pop
pop
leave
push
not
dec
pop
ret
push
lea
push
push
push
call
pop
leave
jnp
add
lock
add
push
add
add
filds
iret
add
lea
outsl
ljmp
jno
lret
mov
mov
mov
out
add
mov
sub
pop
mov
add
push
push
call
add
xchg
mov
test
xchg
lcall
in
add
add
roll
add
push
add
cmc
cmpsb
int3
add
loopne
iret
ljmp
mov
nop
add
incb
add
add
popf
mov
stos
ljmp
pop
faddl
lock
add
mov
fiaddl
stc
in
mov
lcall
add
add
push
dec
add
pop
call
push
xor
xor
pop
push
call
push
add
pop
xor
push
push
push
push
lea
push
push
call
lea
add
idivl
add
add
push
xchg
add
fdivrp
jno
mov
add
jmp
cltd
mov
test
add
add
mov
mov
push
add
add
add
jle
lahf
add
add
add
mov
faddl
add
add
jp
pop
add
lcall
push
shl
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
std
add
popa
add
addb
add
lret
mov
scas
mov
jp
fistpl
add
add
add
add
xchg
add
testb
mov
mov
pop
pop
mov
mov
fxch
add
ja
rolb
jl
in
fdivr
lcall
pop
push
push
call
mov
pop
lods
fnstsw
mov
je
mov
lret
add
shl
mov
fists
xchg
mov
mov
pop
fiaddl
add
mov
add
mov
pop
add
test
lcall
push
push
lea
push
push
call
into
add
sbbl
push
imul
xchg
mov
push
clc
hlt
add
out
nop
add
in
add
shll
fsubr
insb
xbegin
scas
add
out
roll
add
add
mov
add
push
mov
add
iret
add
xchg
sub
pop
leave
ret
push
add
pop
push
push
ror
add
inc
pop
mov
add
push
lea
pop
push
push
shl
xor
dec
pop
push
push
lea
push
lea
push
call
add
add
cmpsb
loope
imul
pop
mov
push
add
add
jae
push
je
leave
add
mov
in
add
addb
sti
add
fiadds
add
add
mov
mov
rolb
push
push
lea
push
push
push
call
add
in
out
rolb
add
jb
jge
add
add
hlt
push
out
jmp
jne
mov
add
jl
add
loop
add
jge
add
call
add
sub
pop
push
push
lea
push
lea
push
lea
push
call
add
cwtl
add
cli
out
cld
mov
pushf
add
cmc
out
imul
add
mov
push
add
add
add
mov
lahf
jne
jo
add
roll
add
int
add
push
test
cltd
push
cltd
jecxz
add
add
add
test
pop
or
pop
call
stos
add
int3
lods
add
jb
pusha
add
popa
jnp
aad
mov
cltd
pop
add
rclb
xchg
mov
les
in
clc
add
add
add
mov
mov
repnz
mov
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
lock
repnz
add
int
add
rcrl
add
jecxz
mov
rol
cli
mov
aam
add
add
mov
mov
outsl
out
mov
add
fildl
jl
jb
pop
jae
xlat
mov
jae
jno
lret
mov
cli
add
sub
pop
pop
push
push
call
add
lret
les
mov
add
xchg
add
scas
push
fsubrs
add
pop
aad
lods
mov
mov
data16
jae
xlat
repnz
xchg
mov
mov
pop
lea
push
xor
pop
sub
push
not
add
sub
pop
mov
push
sub
shl
add
xor
pop
shr
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
jbe
hlt
addl
std
add
pushf
xchg
jno
cwtl
out
in
add
mov
cltd
mov
lods
in
lea
pop
add
mov
push
sub
shl
pop
add
push
lea
push
push
lea
push
push
lea
push
call
mov
add
jp
mov
add
test
mov
add
xchg
add
xchg
push
add
mov
jb
add
aam
scas
roll
fsts
mov
pusha
arpl
stos
cli
out
cli
mov
add
add
pusha
mov
push
lret
add
add
sub
pop
pushl
push
not
pop
popl
mov
push
sub
ror
pop
add
push
shl
shr
pop
xor
push
lea
push
push
lea
push
call
mov
jmp
add
add
push
hlt
out
movsl
add
pop
lahf
mov
popa
mov
mov
iret
pop
add
add
add
pop
into
outsl
add
popa
mov
push
fadds
add
add
roll
lea
mov
push
add
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
xchg
loop
arpl
testb
add
add
add
cmpl
mov
add
add
add
xchg
movb
add
lcall
rclb
lea
push
push
push
push
push
lea
push
call
cli
mov
add
add
lret
add
je
xchg
mov
jecxz
roll
test
add
popf
add
add
imul
add
add
add
add
add
push
add
pop
mov
pop
ljmp
add
add
add
add
lret
cmc
sub
pop
rol
push
push
call
fsub
add
xchg
sarl
popa
data16
add
xchg
add
scas
mov
pop
js
add
jle
add
imul
pop
pop
pusha
lea
add
add
sub
pop
nop
nop
push
push
lea
push
call
outsl
add
lea
add
add
add
stos
add
ret
add
add
imul
mov
add
imul
into
cmc
enter
add
rorb
add
add
add
shlb
hlt
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
call
pop
add
add
push
add
int3
fwait
add
add
popl
loop
cwtl
cmpsb
mov
mull
xchg
pusha
into
mov
fsubs
stos
out
in
add
cmp
clc
lret
aad
add
add
add
add
fdiv
jo
cli
mov
out
pop
add
in
xchg
test
sub
pop
nop
nop
push
push
push
push
call
xchg
pop
add
pop
popa
add
stos
xchg
add
jb
fstpl
sti
add
movsl
xchg
add
stos
jle
add
mov
andb
sti
push
add
add
popf
add
out
add
pushf
insb
rolb
cld
rclb
nop
add
add
out
add
xchg
pop
lcall
add
int3
rolb
add
push
push
call
jmp
movsl
int3
iret
add
add
xchg
sar
add
add
add
add
add
jo
jecxz
imul
enter
add
scas
lods
je
add
add
out
xchg
add
lcall
push
push
push
call
ja
add
addb
add
push
je
lods
fdivl
stc
add
repnz
add
jb
lret
sti
mov
add
add
mov
jmp
add
add
add
add
xchg
add
loop
add
add
out
push
add
add
in
add
add
add
pop
nop
push
push
push
push
push
push
push
push
push
call
outsl
xchg
addr16
faddl
add
add
rorl
add
mov
rorb
add
lea
mov
add
out
out
leave
add
add
add
add
stos
add
add
bound
add
add
add
cmp
jne
push
push
push
push
push
call
push
out
lret
push
mov
add
add
int3
add
js
imul
loope
lret
mov
push
movsl
add
add
inc
pop
ss
push
add
lea
dec
pop
nop
nop
push
sub
not
sub
add
pop
cmp
je
push
xor
pop
nop
push
push
push
call
mov
add
add
int3
add
call
add
roll
fiaddl
add
add
mov
add
pop
out
add
push
inc
not
pop
inc
push
push
push
push
lea
push
push
push
push
push
push
call
add
jno
add
mov
jge
flds
jp
add
sti
addl
jmp
enter
into
add
lcall
nop
push
lea
push
push
push
call
nop
add
add
flds
add
xchg
add
pop
add
incb
hlt
add
lret
fcomi
add
add
sub
pop
cmp
jb
push
sub
ror
pop
xor
push
push
push
push
call
flds
mov
scas
add
add
xchg
add
fistps
push
add
jmp
xchg
nop
jnp
add
add
add
add
cmpsb
add
mov
xchg
jae
lcall
push
js
add
add
add
pop
fnstcw
in
lock
lcall
js
add
mov
push
lea
push
push
lea
push
call
push
add
movsl
fs
push
testb
cmc
mov
xchg
add
cmpsl
jl
add
jns
pop
scas
add
lock
mov
mov
in
lock
add
push
add
pop
movzwl
push
ror
add
pop
mov
add
push
push
call
shrl
push
add
jge
add
out
mov
call
std
push
mov
pop
add
out
jno
into
xchg
mov
movl
mov
mov
xchg
add
mov
mov
fwait
roll
dec
hlt
xor
push
lea
push
push
push
lea
push
push
call
add
in
lods
add
push
mov
nop
pop
mov
loope
cmc
addl
jmp
test
ficoml
scas
add
mov
fidivrl
cwtl
add
fbstp
fldl
add
pop
add
call
add
leave
lea
dec
pop
shl
push
rol
pop
xor
shl
push
push
push
call
xchg
add
sahf
insb
add
out
xchg
add
add
push
add
mov
addr16
imul
scas
out
xchg
add
in
add
add
pushf
into
add
sahf
mov
add
add
xchg
fcomip
mov
test
jbe
add
add
add
in
hlt
pop
xor
shl
push
push
push
lea
push
push
push
push
push
call
add
fadds
mov
scas
imul
insb
add
push
add
js
mov
f2xm1
push
add
test
insb
mov
add
mov
in
loopne
xor
push
push
lea
push
lea
push
push
push
lea
push
push
call
les
lret
add
mov
lcall
std
add
jns
lods
mov
pushf
hlt
mov
test
nop
add
test
add
pop
mov
jl
jmp
jb
sub
pop
mov
add
push
shr
xor
sub
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
mov
add
mov
jmp
stc
push
add
rolb
add
add
add
gs
mov
push
push
push
push
lea
push
push
call
idivl
mov
shrl
add
push
fstpl
lcall
add
iret
pushf
jmp
add
mov
add
add
mov
into
les
add
in
add
mov
popf
lret
add
add
cld
add
aam
add
test
mov
sub
pop
pop
pop
push
not
inc
sub
pop
leave
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
imul
mov
movsb
mov
insb
add
add
cltd
mov
icebp
aad
mov
lahf
cmpsb
add
rolb
testl
pop
fbld
add
add
sub
pop
ret
push
lea
push
call
pop
xchg
add
add
add
fdivrl
add
sahf
popa
add
add
mov
sahf
add
add
sahf
xchg
pop
add
cwtl
in
pop
mov
lahf
pop
mov
xchg
scas
add
sar
mov
add
sub
pop
push
push
not
inc
shl
pop
mov
push
inc
add
pop
push
push
push
push
call
stos
xlat
xchg
pop
xchg
loope
add
out
push
push
add
jnp
add
imul
add
jp
cmpsb
add
stos
add
lahf
scas
fildl
add
addl
repnz
xchg
aam
add
sub
pop
push
push
lea
push
call
add
add
nop
clc
add
lcall
cltd
xlat
rolb
jo
mov
rcll
mov
cmpsb
lock
add
shlb
push
sti
push
fildl
add
sub
pop
push
mov
push
xor
add
pop
mov
push
shl
pop
mov
push
rol
sub
lea
pop
test
je
push
not
dec
pop
mov
push
push
lea
push
push
push
push
call
aam
fs
jecxz
fisttpll
mov
add
pop
pop
mov
add
loope
mov
lret
jns
add
movb
add
in
out
add
add
push
mov
lcall
testb
je
add
push
lea
push
push
push
push
lea
push
call
outsw
mov
out
rcrb
out
clc
nop
add
add
mov
repnz
rcrl
add
mov
add
arpl
fstl
rcll
in
add
lcall
notl
data16
pop
lea
push
push
lea
push
push
lea
push
lea
push
call
lea
add
add
rclb
lea
incb
add
push
add
test
add
add
add
xchg
testb
in
loopne
lcall
dec
or
pop
push
push
lea
push
push
push
push
call
add
push
lcall
in
add
pop
jge
add
cltd
add
add
in
hlt
add
movl
push
loope
test
add
fwait
add
pop
add
add
jo
add
add
jno
sub
pop
inc
cmp
je
push
push
push
push
call
add
push
stos
outsl
add
add
push
add
fwait
jno
mov
pop
int
add
lcall
add
add
pop
add
add
jns
mov
add
add
jmp
in
lock
test
je
mov
push
lea
push
push
push
push
call
mov
test
add
jge
lods
add
jle
add
cmc
cwtl
fstpt
movl
jno
add
add
lret
cli
rolb
add
pop
add
add
add
hlt
xlat
out
filds
cmpb
pop
inc
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
jmp
icebp
fisubs
lahf
idivl
in
push
add
push
jb
cltd
add
add
sahf
js
add
add
add
fcmovnu
xchg
push
scas
outsl
add
mov
int
roll
pop
push
add
test
cmpsl
out
add
pop
lods
div
incb
push
pop
cmp
je
test
jne
push
push
push
call
loopne
add
cmpb
mov
mov
add
add
mov
popa
pop
mov
mov
fcmovne
xchg
jmp
testb
imul
add
add
mov
pusha
push
out
pop
add
add
loopne
lds
add
mov
mov
xor
pop
push
add
add
sub
shl
pop
pop
pop
push
ror
pop
pop
push
shr
pop
leave
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
xor
push
add
out
cli
clc
mov
bound
testl
push
popl
jns
mov
jl
jmp
pop
mov
add
xorl
addl
add
icebp
xor
rol
pop
mov
push
push
lea
push
push
push
call
mov
add
add
mov
add
loope
pop
ljmp
add
add
scas
add
add
aam
mov
mov
fldt
push
lcall
add
cmpsb
jno
add
xchg
mov
add
add
jb
jecxz
sub
pop
inc
push
sub
inc
pop
cmp
jne
lea
push
push
push
lea
push
push
push
call
mov
mov
loop
cltd
push
add
mov
add
icebp
mov
jmp
add
sti
cld
add
add
push
mov
nop
cli
stos
stos
bound
add
add
add
mov
icebp
add
les
add
aam
add
jns
add
jnp
outsl
test
add
in
call
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
xchg
mov
xchg
add
scas
stos
neg
into
push
xchg
add
add
push
mov
add
cmpsl
jmp
test
je
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
stos
xchg
add
movb
mov
test
add
in
add
stc
mov
mov
popf
leave
add
add
mov
lcall
push
push
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
std
add
add
mov
arpl
add
add
cmpl
xlat
add
shll
imul
xchg
add
push
enter
sub
pop
cmp
jne
push
xor
add
dec
pop
mov
push
push
lea
push
push
push
push
push
push
call
data16
xchg
pop
add
jbe
add
imul
add
add
add
add
addl
add
add
cwtl
add
nop
add
xchg
pusha
pop
add
gs
outsl
imul
add
add
add
rorb
xchg
add
add
lea
ror
lea
pop
mov
add
push
inc
pop
cmp
je
push
xor
inc
pop
jmp
xor
push
push
lea
push
call
add
mov
add
pop
pusha
out
add
addl
mov
add
subl
bound
mov
mov
add
fsub
into
iret
add
lret
repnz
flds
jmp
pusha
ljmp
add
loope
cltd
roll
scas
add
add
test
roll
push
lea
pop
pop
push
push
push
push
push
call
jne
add
iret
jp
test
mov
jge
popa
nop
add
nop
add
add
add
pop
add
iret
add
add
add
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
iret
aam
pop
mov
mov
aam
add
std
mull
adcl
roll
add
outsl
js
testb
js
add
mov
jb
mov
leave
push
push
call
hlt
add
test
bound
lret
xchg
jns
sbbb
movsl
jp
add
add
mov
sbbb
add
add
xchg
add
mov
add
add
add
add
clc
pop
ret
lea
push
sub
sub
pop
pop
push
push
call
add
jecxz
add
popf
test
cmpsb
fwait
add
mov
add
add
add
stc
add
mov
add
faddl
lcall
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
popa
mov
nop
cltd
add
faddl
add
cmpsb
xchg
add
sahf
mov
std
scas
add
add
in
push
mov
in
fdivr
lcall
push
shl
add
inc
lea
pop
pop
push
xor
inc
sub
pop
leave
push
push
push
lea
push
push
lea
push
call
add
add
add
add
scas
add
fisttpl
add
push
jecxz
add
push
add
add
mov
leave
insb
add
ja
addr16
fmul
mov
add
add
add
push
add
out
in
call
ret
push
lea
xor
pop
mov
pop
push
push
push
push
push
lea
push
call
add
mov
push
roll
imul
mov
lea
movsl
add
xchg
iret
add
lcall
add
leave
push
icebp
out
mov
fcmove
add
int
call
in
add
pop
add
add
add
add
in
call
push
lea
push
push
push
push
push
call
add
pop
int3
mov
add
mov
add
add
push
add
add
mov
add
lahf
cli
add
fwait
push
add
fldl
lcall
push
push
push
lea
push
push
push
push
call
add
cli
cmpb
jns
add
sti
jbe
popa
iret
jb
add
add
add
int
scas
add
arpl
add
into
add
in
pop
add
add
cld
mov
in
lcall
push
push
lea
push
push
push
push
push
call
mov
add
push
stos
add
fwait
mov
mov
jbe
outsl
add
add
add
leave
movsl
imul
sahf
in
ret
lret
sbb
mov
scas
lret
int
scas
lret
std
mov
scas
cltd
fdivrl
scas
lret
mov
mov
scas
xchg
cmp
in
or
mov
stos
add
fwait
add
xchg
lcall
jp
mov
mov
arpl
xchg
lds
cs
scas
test
nop
push
test
and
cltd
std
pop
sbb
mov
bswap
in
push
insb
mov
add
clc
movsl
mov
pop
mov
inc
cmp
ffreep
pmaddwd
mov
int3
xchg
inc
out
sbb
xor
jns
pop
push
jle
mov
xor
std
inc
push
sarb
dec
inc
and
inc
lret
out
ret
hlt
inc
lcall
loopne
into
jae
pushf
cmp
mov
daa
das
jge
dec
add
scas
mov
in
mov
jl
and
popf
push
pop
pushf
jp
sahf
sub
into
in
pop
adcb
fwait
movsb
mov
adc
sarl
cmpsl
xor
rcrb
fsubrl
sub
inc
aam
xchg
out
and
mov
sub
mov
mov
inc
and
dec
xor
xor
movsl
bound
fwait
ss
enter
pop
mov
or
adc
scas
mov
push
loopne
xchg
pushf
add
imul
push
and
int
into
sub
pop
inc
lret
mov
lret
divb
fnsave
mov
push
ja
sbb
aaa
leave
ret
push
mov
stc
sbbb
or
dec
sbb
adc
sub
arpl
xor
pop
sub
or
jb
dec
mov
sar
iret
add
mov
ror
cmp
sahf
loop
xor
imul
loop
in
sahf
sbb
add
fucomip
lahf
sbb
cmpsb
and
out
imul
scas
jl
bound
aaa
out
outsl
rcrb
and
cmpsl
sub
push
daa
movb
fwait
lods
sub
in
out
idivl
lret
or
sbbl
stc
pop
push
mov
lods
ss
dec
xchg
xchg
jno
mov
scas
call
sbb
lahf
and
cmp
xchg
mov
mov
sbb
pop
push
mov
cmp
xchg
mov
push
mov
out
push
xchg
jno
cmp
pop
pop
out
sarb
cmp
jle
movsl
nop
mov
inc
std
dec
out
out
jg
jl
jmp
xchg
dec
testl
jmp
popf
ficoms
push
lods
or
pushf
push
mov
pop
ljmp
sbb
repnz
dec
cs
add
pop
mov
lret
mov
cmp
das
jno
push
out
push
adc
inc
xor
ljmp
cmc
icebp
dec
call
outsb
rcrl
js
push
pop
jb
fcomi
arpl
notl
or
aaa
popa
pop
insb
mov
xchg
jb
jno
in
push
movsb
movsb
lea
add
xchg
mov
mov
mov
shll
inc
dec
push
shrl
js
mov
mov
push
ret
les
mov
ja
cmc
push
sbb
cmp
inc
jmp
cmp
lret
pop
jmp
mov
inc
adc
std
sub
jl
jae
push
add
mov
mov
or
andb
test
lcall
rcrb
mov
and
cmp
std
popa
cmp
cmc
stc
add
jae
in
popf
in
int
pop
add
push
iret
ficoms
mov
add
pop
imul
into
dec
aad
add
pop
add
or
hlt
dec
push
daa
je
scas
and
jno
dec
inc
pop
shll
cmp
data16
mov
jl
and
rorb
out
int3
ds
aaa
xchg
fsubrs
adc
addr16
inc
sti
out
lahf
out
clc
out
adcb
in
dec
lods
in
pop
xlat
inc
mov
mov
push
mov
out
mov
inc
jle
adc
mov
clc
fwait
lcall
movsl
ret
mov
fwait
push
add
test
ret
ficoml
mov
or
pop
jno,pt
sbb
xchg
sbb
pop
xchg
mov
push
cmp
mov
push
cmc
stc
sub
cmp
xlat
rclb
sti
pop
les
mov
cmp
mov
jnp
push
es
xor
sbb
rcr
ja
push
pop
pop
dec
or
test
adc
xchg
rclb
mov
jno
iret
rolb
cmp
stc
sub
and
cld
cmp
pop
cmpsb
or
je
lods
push
imul
bound
mul
shl
div
sub
push
insl
bound
sbb
in
inc
fistpll
roll
std
and
cmp
daa
xchg
adc
cld
int3
movsb
fmull
in
adc
xchg
repz
test
sub
cmp
mov
mov
or
sti
jnp
pop
in
add
imul
sarl
movsl
test
leave
rorb
ds
lock
mov
popa
and
inc
shrb
adc
in
mov
jecxz
ficoml
lret
outsb
cwtl
addr16
mov
push
pushf
add
sbb
mov
shr
add
jg
mov
dec
ret
aam
ret
cmp
cmpsb
dec
test
mov
test
fdivs
mov
ss
sbb
mov
stc
nop
xchg
aas
ss
test
sub
es
rorb
inc
mov
test
dec
pop
pop
jns
jg
test
sbb
adc
enter
sbb
add
pop
inc
xor
mov
push
aas
fwait
dec
and
into
out
cli
clc
and
adc
outsl
and
stos
xchg
push
adc
cmp
mov
dec
es
cmp
xchg
mov
inc
xchg
mov
mov
fmulp
je
loope
add
mov
das
cmp
mov
mov
mov
sbb
cmp
ja
lret
pop
ficomps
mov
or
insb
xor
sub
mov
cli
dec
sbb
les
inc
ret
mov
rorb
ss
popf
sar
adc
shl
jbe
std
ret
sub
mov
push
sbb
mov
into
inc
lahf
mov
mov
mov
fs
push
jmp
or
fwait
loop
fdivrl
pop
inc
jo
dec
jnp
ds
pop
mov
aaa
sub
lea
mov
lods
lock
and
xchg
jo
xchg
icebp
mov
push
push
mov
call
into
mov
loop
mov
inc
in
jle
shlb
mov
loop
iret
mov
mov
jo
lds
nop
es
jae
adc
sbb
inc
dec
push
nop
push
mov
inc
stc
jg
cld
sub
mov
lret
sbb
dec
jecxz
andl
aad
pop
sub
push
adc
adc
movhps
jge
push
xchg
mov
push
xchg
in
add
aaa
mov
inc
not
dec
or
iret
sbb
inc
inc
movnti
loop
lea
mov
mov
push
pop
adc
cmp
inc
pop
xchg
jb
ss
cmpsb
fidivs
jecxz
and
repnz
xchg
inc
dec
loop
push
je
ja
cmp
aaa
push
fnop
outsb
movsb
adc
jecxz
in
mov
int
sub
imull
add
cmpsb
fcomps
sbb
push
fldcw
pop
cwtl
and
int3
mov
dec
insl
ret
dec
and
jge
shll
rcpps
sbb
jns
mov
cmp
imulb
hlt
mov
jg
sub
push
and
add
mov
not
dec
push
cmp
stos
rolb
mov
sti
into
sub
ja
ljmp
adc
or
test
sbb
loope
popa
sbb
xor
or
pop
andb
xchg
fsubr
repz
mov
mov
or
ror
addr16
jne
subl
pop
mov
sub
mov
nop
loop
fisubl
sub
mov
jne
out
cmpl
leave
jl
mov
inc
fdivrs
and
push
pop
add
lds
mov
in
inc
imul
jp
inc
dec
mov
dec
enter
mov
sub
jp
mov
pop
dec
add
test
outsb
xlat
fbstp
xchg
lret
mov
insl
inc
jp
icebp
int
cltd
xchg
stc
out
aad
lods
xchg
inc
xor
lret
insb
fwait
jle
dec
sub
in
adcb
test
gs
mov
push
xchg
test
jecxz
mov
mov
rcr
scas
pop
lods
es
inc
shlb
cmpsb
xchg
dec
add
es
imul
jns
xchg
repz
jecxz
hlt
inc
xor
rcll
xchg
jmp
sbbl
xor
repnz
jo
imul
jle
push
stos
jge
add
or
inc
movsl
xchg
je
jle
std
sbb
jge
push
movsl
or
roll
adc
jb
cmpsb
test
push
push
iret
push
js
inc
scas
cwtl
push
es
cmpb
repnz
xorb
rol
jp
and
aaa
repnz
add
mov
xchg
mov
in
xlat
xor
test
ds
orb
push
mov
push
in
jl
adc
in
je
xor
mov
push
out
sbb
mov
pusha
repnz
adc
push
or
dec
ja
mov
in
ret
incl
repz
cwtl
inc
fs
xor
push
dec
and
inc
shlb
xchg
inc
xor
jns
and
shrb
cmpb
jg
mov
clc
cltd
and
int3
jnp
xchg
ficoml
dec
xchg
push
xchg
stc
add
cmpl
test
test
cli
fldt
sub
xchg
aaa
nop
and
push
fdivl
dec
push
push
notl
in
inc
mov
fistpll
push
and
adc
popa
shlb
mov
fiaddl
xchg
push
ret
cmp
adc
icebp
orb
nop
pusha
jnp
push
sbb
std
jle
aam
inc
call
jno
aas
scas
push
sbb
xchg
push
mov
outsl
jne
scas
test
pushf
push
xchg
cltd
sub
cmc
cmp
pop
or
dec
mov
std
scas
cld
rcl
add
pop
xchg
insl
out
sub
std
gs
rcrl
jecxz
adc
mov
or
sub
test
add
jge
mov
add
mov
adc
fsubl
fnstsw
dec
daa
and
dec
mov
mov
in
mov
push
adc
clc
pushf
xor
and
cmp
fistpll
mov
and
jmp
xchg
pop
data16
es
mov
sbbb
and
xchg
adc
add
dec
test
mov
add
imul
pop
xchg
jno
fsubs
lea
insl
jp
or
adc
stos
insb
jl
jmp
jp
shl
mov
decb
ds
mov
mov
sub
mov
gs
cltd
sub
daa
je
andb
rcl
rorb
add
sub
call
scas
jmp
inc
xchg
dec
jp
scas
pop
ljmp
sbb
mov
ss
fs
int
icebp
xchg
pop
xlat
xchg
fisubrl
add
addr16
push
hlt
dec
mov
clc
add
dec
clc
in
fiaddl
and
dec
xlat
fcoms
push
call
ret
push
outsl
enter
or
xor
loope
lds
iret
jecxz
repnz
add
jo
out
hlt
add
testb
inc
mov
into
outsl
sbb
jp
cmp
xchg
push
movsl
pusha
aad
cmp
cmp
out
jle
jb
mov
xchg
jbe
mov
jmp
pop
rorl
mov
aam
add
aaa
cltd
sub
cltd
xchg
lcall
sub
jnp
cmp
sbb
fwait
mov
pop
push
xchg
adc
pushf
push
jo
push
inc
cmp
cmp
sbb
xor
adc
aaa
sti
or
repz
rclb
push
and
inc
add
test
mov
push
outsb
repz
xor
and
push
and
test
push
inc
jae
cmp
out
pop
sub
stc
pop
aam
mov
or
sar
dec
xchg
imul
push
ljmp
test
dec
mov
and
xor
out
push
mov
int
push
and
mov
mov
mov
lods
dec
sbb
pop
rcr
xchg
std
divb
mov
or
fsubr
xchg
int
push
shl
mov
mov
pop
sub
cltd
mov
sub
aaa
std
cmovbe
pop
ret
je
imul
ja
add
loope
lret
enter
xchg
repz
jecxz
sub
in
xchg
adc
and
ficomps
addr16
adc
loop
pushf
jo
mov
lret
cmp
jmp
call
mov
mov
icebp
pop
pushf
adc
lock
ja
fwait
in
sahf
lahf
pop
out
push
int3
cltd
sub
ret
repnz
push
jno
push
js
insl
shlb
js
sub
and
adc
test
xor
fidivl
fldl
out
sahf
xor
icebp
push
cli
pop
stc
pop
cwtl
jo
mov
mov
sub
es
push
insl
pop
out
pusha
dec
pop
add
iret
lret
loop
xor
pushf
sbbl
jmpw
cli
jp
mov
dec
sti
in
test
notl
pop
xchg
repz
jp
mov
std
movsb
stos
cltd
nop
imul
push
xchg
mov
xlat
cmpsb
cld
or
mov
outsb
pop
mov
stos
int
cli
icebp
sbb
or
call
xchg
push
popa
mov
push
xlat
sarl
mov
das
pop
and
aaa
push
lds
stos
or
pop
aaa
mov
adc
inc
orl
add
call
mov
jae
repnz
dec
mov
outsb
pop
cmp
mov
add
sub
sbb
scas
mov
inc
call
mov
xchg
pop
cmp
pop
in
pop
dec
push
sub
mov
cmp
mov
jecxz
push
adc
or
xchg
imul
adc
push
mov
cmp
rorl
mov
shr
mov
mov
and
std
int3
mov
and
jg
lods
dec
mov
fwait
jle
inc
sub
jns
pusha
sub
js
sbb
adc
or
mov
stos
inc
mov
test
fcomps
inc
int3
pop
xor
xchg
mov
mov
mov
rcrl
int
imul
mov
cs
stos
pusha
out
popa
jne
stc
jmp
scas
mov
lock
and
or
adc
sbb
loop
pop
int3
sub
into
mov
cltd
fistl
pop
cmp
sub
push
jno
bound
ss
inc
pop
loope
js
hlt
cmc
cmpsl
lock
jae
ret
data16
jns
inc
sub
lods
aas
mov
imul
dec
dec
nop
xor
fmuls
mov
push
xor
lods
xor
pop
sbb
mov
stos
rcrb
aad
cmp
add
lock
push
data16
pop
out
xchg
mov
dec
lret
and
add
pop
das
test
imull
lods
scas
dec
sbb
pop
dec
repnz
fdivl
xor
ss
sarl
push
fld
xchg
mov
enter
jo
sahf
clc
mov
repnz
loopne
xchg
and
mov
repz
jae
xor
push
inc
jne
inc
pop
adc
mov
and
pop
hlt
xchg
xor
testb
cltd
xchg
int3
jbe
outsb
mov
xchg
sbb
pop
jp
inc
mov
jge
push
fwait
mov
test
mov
mov
in
insb
jle
and
mov
jge
aad
mov
nop
lds
mov
sbb
gs
mov
ds
out
lds
repnz
or
jne
jg
cmp
pop
test
fsubrl
cmc
mov
jb
push
inc
imulb
out
push
movl
pop
cmp
push
fidivs
xchg
push
fcoml
subps
test
subl
push
fbld
mov
int3
testb
imul
adc
sub
std
adc
fs
int
lea
sub
out
push
sub
inc
ss
add
add
out
nop
fs
lret
xchg
jns
inc
in
mov
into
test
push
jb
adc
jae
out
test
cmp
lret
out
cld
and
jb
mov
lret
mov
test
sub
sti
sar
push
js
rcpps
imul
jns
repnz
sbb
mov
pop
xor
inc
sbb
sbb
out
dec
lea
sub
jl
repz
aam
jne
int
push
or
xchg
stc
push
push
inc
xor
addr16
adc
sbb
xchg
cld
aam
mov
lods
aam
jmp
gs
add
add
pop
cli
ret
mov
mov
or
stc
lret
sbb
fwait
dec
stc
addb
mov
icebp
push
jmp
test
das
adc
add
in
and
loopne
or
mov
aam
push
in
xor
push
in
add
out
cld
jb
jle
test
inc
cmp
jp
mov
shll
cmp
push
data16
mov
loop
sahf
lds
add
in
fildll
das
aaa
popa
mov
sub
fists
xor
jecxz
shrb
and
push
sub
inc
mov
push
adc
xchg
pop
xchg
dec
sub
pop
test
or
or
ljmp
lea
loop
out
pop
or
push
jns
jnp
push
jb
jge
cmp
lea
testl
hlt
int
or
clc
movsl
jl
test
mov
mov
mov
mov
div
lcall
clc
iret
xlat
outsl
int3
cs
add
fistpl
dec
xchg
adc
or
adc
ss
push
mov
mov
pop
shlb
sbb
fimuls
lahf
adc
and
fsubrs
cltd
inc
push
andb
rorb
jmp
fists
lods
sub
in
mov
into
jecxz
pop
and
aam
jmp
movsb
test
popa
jle
sbb
loope
sbb
sahf
or
jne
ja
cwtl
push
fdivp
add
push
jmp
jle
adc
and
xchg
mov
enter
cmp
cmpsb
sub
add
repnz
jle
push
incl
lods
sub
dec
das
shr
xlat
stos
cmc
leave
mov
sarb
add
test
stos
dec
stc
mov
fisubrs
test
imul
cmpsl
lahf
addb
stos
repz
push
aas
cmp
and
dec
aas
add
out
xlat
xchg
je
add
and
sbb
int
sbb
cmpsb
cli
lods
sbb
dec
icebp
fdivrp
cmp
mov
das
std
iret
pop
mov
fcompl
or
sti
jecxz
cmpsb
ficompl
and
cmp
pushl
daa
push
scas
rep
adc
imul
lock
pop
mov
ds
mov
pop
jns
stos
aad
lods
and
divl
test
iret
mov
int
jp
data16
iret
jb
js
push
mov
jae
fs
and
adc
mov
cltd
adc
push
push
adc
shl
popf
movsl
mov
sahf
dec
cmc
out
mov
push
or
stos
jae
out
outsl
pop
pop
imul
data16
fildll
inc
xchg
in
aam
push
rcrl
cmc
lret
ret
cmp
ret
mov
jb
pop
dec
sub
or
cmp
lahf
sahf
cmc
inc
insb
aad
rcll
cmp
jne
fnop
pop
cmp
arpl
jo
ja
mov
scas
push
aam
cs
sub
adc
sub
jb
mov
adcb
sub
aaa
ficompl
bnd
xchg
and
fldcw
push
push
ret
mov
inc
loop
lret
scas
inc
pop
cmc
sub
cmpsl
cmp
pop
jp
scas
pop
cltd
xor
lock
scas
adc
jmp
sub
aaa
int3
hlt
sbb
lods
inc
gs
and
imul
xchg
and
xor
jbe
scas
test
pop
movsb
jno
and
xchg
lahf
push
les
mov
idivb
pop
popa
sub
fnstcw
sti
dec
cmpsl
mov
outsb
mov
xchg
ja
pop
inc
sub
nop
cmp
ljmp
aad
lods
test
sub
fstpt
stos
push
das
aad
sti
lcall
sub
shll
ror
movsbl
aad
mov
mov
or
jae
add
je
sbb
cld
inc
xchg
jnp
loop
xor
lock
sbb
les
and
daa
mov
jb
add
or
mov
arpl
cmp
add
js
dec
cs
mov
test
leave
cmp
pop
ds
scas
add
enter
andb
push
mov
lds
jnp
int
xor
jb
aas
mov
cs
dec
loop
inc
dec
and
pop
ja
lret
in
clc
sarb
in
and
cwtl
sbb
in
test
cmpsb
mov
in
mov
push
fisubrl
addr16
mulb
aas
clc
jns
jl
adc
icebp
aas
jmp
jo
cli
sbb
inc
xor
fisubs
cmpsl
aas
mov
test
xor
aad
pop
lods
andl
clc
mov
das
ret
lds
push
pop
sub
scas
ja
jmp
call
sbb
scas
jno
or
ljmp
cmpsb
sub
out
pushf
mov
add
in
xchg
inc
sub
cld
lea
hlt
mov
cmpsl
dec
daa
adc
pop
testl
aad
jb
dec
mov
das
mov
scas
inc
xchg
insl
pop
mov
je
mov
stos
js
xchg
mov
lret
push
jle
cmpsb
ds
pop
cmp
std
xchg
jno
mov
pop
jge
lahf
inc
rolb
add
repz
mov
fs
mov
sub
add
cmp
push
adc
mov
lods
fsub
mov
mov
push
aas
and
int3
add
add
loope
fiaddl
cli
mov
jecxz
and
push
inc
jmp
aas
xchg
push
out
lret
rcll
rcrl
inc
mov
xchg
idivb
nop
mov
sbb
xor
fisubl
daa
mov
insb
lods
mov
fimull
outsb
ret
ret
addb
scas
stos
xor
into
push
jne
mov
jl
xchg
inc
sub
push
add
out
cld
insl
test
jb
fmull
test
mov
inc
add
ret
outsl
repz
insl
inc
mov
xchg
mov
cmp
adc
test
int
adc
xchg
je
push
add
stos
pusha
insl
call
movsb
lock
arpl
inc
loopne
push
movsl
lcall
sub
outsl
dec
pop
fwait
in
push
mov
outsl
nop
rclb
and
lea
mov
hlt
aaa
sub
mov
push
notb
mov
mov
and
jl
push
repnz
pop
add
insb
jns
ret
jmp
insb
xorb
insb
or
sahf
pop
pop
repnz
lahf
idiv
push
cmp
insl
jo
jb
xchg
pop
cmp
popf
inc
imul
arpl
lods
shrb
add
sbb
test
imul
jecxz
loop
popf
sbbl
in
and
inc
cmpsl
stos
mov
push
xor
jb
inc
ss
adc
adc
adc
add
cs
jle
lock
loope
xlat
push
aad
ret
leave
xchg
bound
sub
cli
xor
xchg
push
jle
cltd
sub
cmpl
int3
push
ljmp
mov
movsl
js
out
test
cld
mov
pop
popa
test
lret
sub
jle
repnz
pop
sub
cmp
sub
lahf
dec
sahf
add
andl
out
cltd
aad
nop
pop
das
mov
movsl
and
clc
or
imul
imul
shll
cmp
push
push
or
out
or
push
sbb
xor
cwtl
sbb
jecxz
pushf
jmp
es
xchg
inc
jo
mov
aas
aad
and
inc
mov
das
cmp
incb
loop
stos
and
adc
lods
xchg
leave
jp
jns
leave
out
into
push
lods
sub
sbb
rcrb
inc
arpl
cmp
sbb
dec
push
into
cmp
int
dec
or
pop
in
fstpl
and
dec
cmp
and
fildl
mov
pop
jp
jecxz
ret
mov
jne
shl
test
dec
dec
cmp
aad
subb
xchg
dec
add
adc
out
mov
dec
cltd
enter
mov
adc
pop
cmp
mov
mov
in
jbe
mov
push
not
aas
fnstsw
ret
push
aad
inc
push
xor
lcall
add
or
jmp
jg
push
bndldx
adc
cmp
mov
fs
adc
aaa
mov
mov
daa
enter
test
outsl
pop
mov
push
sub
mov
mov
scas
call
orb
popa
cmp
sbb
arpl
sarl
xchg
in
das
inc
test
sar
or
mov
es
push
xor
in
mov
pop
loopne
aam
lods
sarl
mov
dec
cmp
aam
add
xchg
mov
mov
xor
inc
mov
stc
or
out
nop
int3
lret
push
stos
lret
push
cmc
add
push
cmpsb
mov
loop
fmuls
call
loope
inc
inc
push
in
mov
popa
sbb
mov
dec
bound
pop
jmp
data16
sub
insl
test
hlt
xchg
ja
in
ljmp
in
xor
mov
and
mov
and
ljmp
nop
or
shll
xchg
xchg
lea
les
loope
mov
sbb
scas
into
fidivrl
test
jge
cwtl
jno
out
mov
push
loopne
stc
and
lea
or
rorl
roll
shl
add
ljmp
pop
stos
xchg
add
ss
data16
lcall
faddl
and
and
add
jg
insl
in
add
push
inc
fabs
xchg
fcmovne
push
rclb
add
sub
or
pop
and
push
mov
mov
mov
pusha
push
inc
and
hlt
adc
fsubp
mov
ret
pop
mov
mov
fidivs
insb
aam
stc
push
lret
in
jl
daa
lock
pop
push
pusha
xchg
sub
je
test
lods
mov
jmp
mov
outsb
out
cmpb
daa
sbb
cmp
pop
push
mov
lods
adc
mov
mov
fdivs
pop
inc
xchg
add
mov
das
inc
ljmp
pop
mov
in
xor
inc
pop
sti
arpl
lcall
pop
movaps
imul
addr16
push
out
push
and
mov
mov
insl
sbb
inc
cmp
bound
and
push
cmp
push
int3
jo
fwait
lret
test
scas
add
lcall
cmp
fcomi
mov
test
popf
insb
add
fiaddl
sub
mov
loope
push
aam
addr16
mov
inc
mov
push
mov
jno
repz
cs
into
dec
aaa
shlb
mov
cmp
xor
movsl
popa
stos
cld
pushl
push
stos
xlat
popf
addl
popa
ret
sub
es
sbb
imul
movsl
insb
adc
pop
mov
lahf
pop
arpl
pusha
pop
js
mov
push
icebp
cmpb
shl
cmp
push
jl
cmp
sbb
shll
add
jp
outsb
and
cli
sarb
or
in
movsl
scas
movsl
test
dec
sub
push
imul
inc
xor
push
mov
lock
fsubp
pop
jp
fucomip
jo
jmp
arpl
fwait
inc
fwait
in
xchg
dec
push
or
xchg
add
push
cld
inc
cmpsb
iret
pop
fwait
xor
push
xchg
jne
jno
out
inc
mov
mov
cmpxchg
inc
xchg
push
ja
mov
jo
sub
rcr
loopne
cmpsl
repz
jge
mov
daa
cli
jno
jg
xchg
sti
not
and
cmp
mov
xchg
add
mov
pop
in
pop
xor
add
stos
dec
dec
negb
xchg
lcall
dec
gs
pop
push
xchg
push
es
cmc
mov
fs
add
mov
push
movsb
jbe
xchg
push
stc
dec
movsl
xchg
mov
mov
adc
xchg
push
addl
inc
js
shufps
inc
outsb
push
bound
aad
imull
ds
incb
sub
mov
sbb
jo
jbe
and
xchg
jbe
fstpl
jo
xor
add
aad
pop
arpl
sub
mov
pop
ss
cmp
out
inc
dec
ja
stos
cli
jb
mov
inc
cmpsl
fs
adc
ds
pop
and
lds
adc
push
lcallw
popa
ljmp
sbb
and
movsl
fsubrs
cli
xchg
pop
movsb
fwait
sarl
adc
sub
out
fsubrl
or
xchg
aas
push
in
lock
sti
dec
fistpll
pop
ljmp
data16
inc
inc
jge
sub
sarl
and
je
push
xchg
cmp
mov
jmp
and
addr16
jmp
inc
add
mov
cltd
pop
inc
addr16
clc
xor
dec
xchg
mov
lds
mov
or
mov
test
and
mov
add
pop
shl
or
push
cmp
xlat
sub
outsb
dec
inc
imul
mov
addr16
inc
jl
rolb
mov
loop
lds
inc
lahf
dec
scas
fcompl
inc
cmpsl
rolb
xchg
jae
jns
mov
jb
dec
sub
xchg
stos
xchg
mov
pop
dec
xor
cmp
aam
sbb
shll
sub
popf
or
inc
incl
hlt
and
outsl
dec
ja
ja
push
push
out
mov
mov
in
je
test
mov
testb
mov
mov
pop
mov
and
pop
les
mov
repnz
mov
fmul
out
xchg
inc
inc
xchg
out
popa
sbb
in
ret
sbb
adc
jle
inc
mov
mov
or
add
push
aad
xchg
dec
or
and
andl
pusha
imul
testb
int3
pop
cmp
cmp
aas
pushf
cmpsl
inc
and
mov
sbb
aam
leave
xor
fistps
enter
mov
test
in
fidivrl
push
inc
xchg
fisubl
rcrl
sbb
test
popl
repz
jg
xchg
sub
pop
mov
adc
push
loop
jno
xor
xchg
out
std
jb
push
loop
xchg
jmp
stos
mov
xor
loop
xchg
sti
bound
push
ljmp
cmpsl
inc
dec
lock
jl
fistpl
cmpsb
xor
inc
push
xchg
sbb
pushl
mov
xchg
cmp
out
and
mov
sub
dec
mull
std
daa
shlb
pushf
dec
jb
cmp
xchg
mov
inc
dec
or
bnd
inc
loop
decl
mov
mov
aas
arpl
out
aaa
dec
push
push
push
cmpsl
sub
or
jbe
les
ljmp
mov
adc
adc
inc
lahf
fisubrl
les
fcomi
nop
idivl
leave
adcl
jmp
gs
add
clc
jno
push
imul
in
test
je
xchg
inc
mov
rorl
or
iret
mov
imul
inc
outsl
mov
add
lods
sbb
int3
fists
cld
jns
mov
add
mov
stos
mov
lcall
jecxz
in
stos
outsb
jb
add
mov
iret
adc
jns
push
xor
mov
or
in
cwtl
scas
fsubl
lds
pusha
insb
jno
negb
jo
in
or
subl
pop
and
cmp
mov
jp
xchg
jle
out
dec
xor
push
adc
mov
aam
in
icebp
jbe
ljmp
fnstcw
dec
nop
inc
outsl
loop
in
inc
adc
xor
mov
icebp
mov
std
out
cmp
xor
ja
add
sub
push
mov
insb
mov
je
add
int3
call
inc
push
cmp
clc
out
xor
pop
sub
pop
sbb
push
cmc
bound
or
push
ret
jne
cmpsl
int3
out
add
fisttpll
insb
cltd
xor
stos
cmp
adc
out
imul
push
imul
cmpsb
std
or
dec
js
stos
dec
add
repz
push
in
insb
xlat
loope
mov
insl
inc
cmpsb
fs
jns
xchg
sbb
xchg
sub
aam
add
add
adc
jns
xchg
test
xchg
jae
xchg
add
push
ja
xor
and
mov
push
in
push
and
sub
adc
sub
in
movsl
push
js
adc
xor
push
mov
mov
mov
data16
and
nop
sbbl
test
ss
repnz
add
mov
xor
pop
int
ljmp
jae
jb
jnp
sub
sub
sbb
xor
fwait
push
loop
pushf
jl
lahf
js
test
adc
pop
inc
inc
mov
pop
cmp
bound
rcr
dec
inc
mov
or
pop
mov
cld
mov
jg
xor
xor
out
into
xor
cmp
into
call
popa
jns
cmp
jne
jg
xor
shrl
sub
imul
mov
pop
imul
out
out
lods
pop
add
sub
xor
cmpsb
jne,pt
pop
xchg
iret
adc
and
insb
pushf
out
pop
fildl
call
pusha
and
xor
or
repnz
movsl
jl
sar
lret
xchg
inc
lods
or
mov
sub
add
arpl
cmc
aas
outsb
test
sub
xchg
fwait
sub
in
mov
in
mov
sbb
jns
sub
mov
test
int3
or
push
push
dec
popa
xchg
sbb
insb
adc
loope
mov
rcll
cmp
push
loopne
jge
test
or
mov
std
loopne
add
xor
mov
mov
out
ficoms
jle
jo
fsts
mov
cmp
int
dec
xchg
and
xchg
add
cmpb
mov
jae
aaa
and
inc
pop
inc
pushf
std
xor
ret
mov
out
dec
into
cmp
inc
jecxz
add
mov
in
cld
pusha
shl
dec
lahf
iret
lods
sub
aam
test
sahf
mov
data16
orl
icebp
nop
pop
pop
and
push
and
lea
sbb
dec
sub
fxch
pop
leave
inc
xor
cwtl
cmp
stc
push
dec
test
sbb
cmp
outsb
or
cmpsb
js
jno
daa
inc
test
and
divb
cmp
push
pop
push
pop
adc
dec
cli
pop
sub
add
or
orl
mov
fwait
or
call
cs
xchg
xor
cmp
sbb
fidivrl
xor
lea
xor
jno
xchg
lret
aad
stc
stc
mov
mov
xchg
xchg
xchg
adc
pop
mov
nop
es
lock
pop
adc
mov
add
pop
aad
mov
pop
ret
pop
cld
popl
pop
jne
cmp
and
mov
lcall
lods
pop
inc
xchg
adc
loop
cmp
jno
ret
lahf
mov
xchg
push
insb
add
mov
jae
push
and
pop
rolb
add
sub
lcall
and
addb
push
shll
cmp
inc
je
dec
icebp
icebp
in
jne
xchg
popa
jg
fsubrs
pop
and
jo
jmp
and
movsb
xor
push
xor
sti
ja
pop
pusha
js
mov
sub
pop
cmp
gs
push
das
jo
pop
aam
mov
ret
lahf
in
scas
or
dec
lret
or
daa
push
mov
sbb
cmp
mov
mov
jbe
pop
std
mov
int3
mov
mov
adc
and
inc
sti
jmp
xchg
jecxz
lods
in
loope
fnstenv
clc
aam
fdivrl
mov
jo
les
xor
icebp
stos
and
xchg
jge
push
leave
or
dec
or
sbb
sbb
and
pop
or
imul
push
popa
out
scas
lock
dec
mov
lods
movsl
shrb
add
daa
cmp
jno
xlat
fwait
int
enter
insl
bound
sub
dec
adc
dec
ljmp
lods
jns
out
fucomp
enter
out
xor
or
jns
jnp,pn
mov
add
ds
shl
and
mov
xor
pop
push
mov
cmp
daa
test
push
mov
xchg
jo
mov
outsb
inc
adc
push
das
mov
inc
mov
filds
jp
into
sbb
outsl
push
xor
sub
adc
xchg
aad
or
mov
jbe
xchg
sbb
push
jae
mov
push
jne
mov
lret
push
in
ret
insb
pop
lcall
ja
shll
cmpsl
nop
insl
adc
leave
idiv
jne
enter
aad
add
and
jecxz
jge
and
addr16
pop
pop
mov
test
outsl
loopne
adc
pop
and
ljmp
pop
test
adc
mov
jp
mov
shrl
jp
mov
cmpsb
jmp
or
les
out
lahf
mov
cltd
pop
aam
movsl
inc
push
fwait
test
rcpps
lock
xchg
xor
frstpm(287
push
ss
jbe
dec
dec
mov
cmp
and
dec
push
adc
cwtl
sbb
xor
test
loopne
inc
div
lock
xchg
fcompl
jp
mov
adc
xor
gs
jge
icebp
bound
xchg
stos
xchg
int
jmp
jbe
mov
jmp
js
rcll
aaa
jl
mov
test
ljmp
lock
adc
xor
fstps
dec
inc
outsl
mulb
lods
mov
mov
add
aam
out
pushf
insl
cmp
loope
dec
pushf
ja
out
sbb
loopne
das
fisubrl
xor
arpl
adc
mov
push
mov
aaa
adc
cli
dec
lea
orb
fimull
xchg
into
into
cwtl
hlt
cmpsb
sbb
in
xor
mov
fiadds
cs
or
mov
dec
ror
popf
or
out
push
dec
add
mov
arpl
fsubs
jle
cmp
and
mov
mov
std
push
dec
sbb
mov
jecxz
cli
xor
mov
mov
loopne
fsubs
mov
and
sub
test
ljmp
mov
aam
push
in
push
addb
xor
or
mov
pop
arpl
and
das
sbb
daa
inc
jb
fwait
arpl
inc
add
inc
mov
fstpt
inc
sbb
add
out
push
stos
ret
loopne
adc
jnp
mov
cmp
xor
popa
loope
push
xchg
mov
test
shlb
push
jecxz
adc
inc
xchg
js
xchg
cmp
adc
cmp
mov
popf
mov
shl
loopne
jne
pop
mov
ret
rcrl
lret
jge
out
xor
jae
pushl
mov
and
lcall
and
test
sbb
loopne
ja
icebp
mov
int3
into
cmp
push
pushf
jp
nop
popf
pusha
sahf
add
loopne
mov
out
gs
pop
pop
add
add
or
inc
out
jp
cmp
mov
lods
jle
cmp
cmpsb
call
mov
hlt
test
cli
test
xorl
jecxz
push
sbb
cmp
mov
dec
push
jbe
mov
out
jecxz
daa
int3
divb
sub
sbb
mov
add
pop
pop
lcall
into
aad
sub
add
sbb
xchg
sbb
adc
mov
mov
addb
push
fdivl
cmc
lods
fstpl
xchg
js
fs
movsl
inc
sbb
pop
xor
cmpsb
lea
movsb
pop
lods
xchg
aam
out
dec
mov
lret
mov
shlb
jbe
scas
popa
push
testl
js
sub
inc
add
mov
ljmp
jb
mov
adc
add
jae
mov
sub
mov
sbb
into
sub
pusha
cmp
sbb
les
mov
add
cmpsb
insl
xlat
in
imul
add
cmp
loop
hlt
pop
dec
nop
stos
nop
inc
ret
fbstp
lock
std
cmp
and
repz
bound
fnstenv
frstor
jo
jl
aad
aam
add
inc
les
push
mov
mov
into
xor
aaa
push
negb
sub
dec
xchg
andl
imul
leave
xchg
xchg
jno
movsb
add
inc
insl
add
adc
dec
scas
xlat
cmpsl
stc
add
and
and
push
fstp
ljmp
xchg
jae
jge
mov
lahf
repnz
push
xchg
inc
outsb
cmp
popf
xchg
mov
repnz
mov
jne
insl
stc
mov
add
aad
sub
add
xchg
and
and
pop
stos
bound
mov
jmp
push
pop
pop
pop
in
jp
out
stos
sub
cmc
lcall
repnz
pop
in
hlt
push
daa
jnp
outsb
mov
scas
pop
and
aas
dec
in
mov
inc
dec
pusha
aas
ja
hlt
das
int3
mov
daa
mov
jns
bound
orl
dec
pop
insb
ret
jns
jg
mov
push
mov
repnz
orl
inc
mov
adc
gs
jl
cltd
jmp
pop
add
out
jnp
push
insl
loop
dec
and
pop
in
aad
or
ljmp
inc
jns
out
mov
fsubrl
xor
aam
xor
dec
mov
dec
hlt
add
dec
and
xorb
mov
test
cwtl
ds
outsb
pop
fs
pop
leave
lcall
add
clc
enter
pop
int
push
adc
mov
pop
sub
stos
jecxz
cmp
sbb
outsl
xor
lahf
dec
cs
int
scas
test
shll
mov
xchg
jg
fs
ret
sbb
ds
inc
inc
sti
pop
js
xchg
and
inc
fimull
imul
repnz
sti
and
std
mov
push
in
cmp
inc
push
ud0
das
negl
pop
sbb
mov
xor
lret
cmp
and
dec
jnp
cmp
cwtl
push
int3
push
jmp
adc
dec
inc
fldl
pusha
div
cmp
xchg
pop
add
insl
mov
mov
pop
int
push
push
or
dec
jle
cmp
ret
pop
dec
test
mov
sarl
dec
call
filds
cmp
les
xchg
cmpsb
stc
rcrb
inc
cmpsl
or
push
inc
popa
aas
dec
in
or
mov
pusha
xor
insb
daa
add
mov
into
sbb
js
out
sbb
mov
inc
cmp
stos
fisttpl
pop
adc
sbb
jnp
mov
cmp
push
inc
add
subb
mov
cmp
out
jne
stc
add
cmp
inc
fdivp
adc
sub
or
mov
add
sahf
scas
into
xchg
mov
stos
arpl
jle
pop
jnp
xchg
inc
aam
add
mov
sti
divl
fwait
add
jns
out
out
inc
mov
rorb
inc
push
movsb
dec
push
bound
in
add
enter
fistl
pop
aaa
test
sbb
popf
and
shlb
pop
jge
movb
in
scas
push
test
mov
adc
inc
push
cmp
push
sti
pop
decl
push
frstor
sub
sbb
pop
cwtl
clc
push
and
outsb
cmpsb
add
fcoml
lods
mov
popa
movsl
xor
add
jnp
sbb
call
mov
scas
xchg
imul
fmull
mov
sub
fdivp
mov
sub
jecxz
jnp
imul
push
sar
fnstsw
test
and
jmp
push
fldenv
pop
push
and
addr16
ljmp
cmpsl
pop
inc
les
das
aad
dec
popa
push
daa
ret
push
push
mov
adc
sahf
dec
pop
xor
sub
and
and
xlat
pop
aas
cwtl
and
mov
mov
sbb
push
mov
jne
outsb
or
adcl
sub
dec
xor
xchg
xchg
cs
movsb
andl
insb
xor
add
xor
xlat
arpl
jp
mov
and
pop
out
into
jns
stc
mov
jle
sarb
sbb
xor
sti
test
imul
out
mov
mov
cli
repz
cltd
fstpt
out
mov
ficomps
imull
test
daa
data16
bound
mov
scas
imul
ret
nop
cwtl
int3
loopne
repnz
shrl
adc
aad
test
in
xchg
filds
lahf
lahf
and
imul
dec
cmpl
test
mov
pushf
loop
rolb
rcrl
add
mov
je
fcompp
push
ret
lds
push
adc
sbb
mov
jge
add
or
push
arpl
dec
cmp
lcall
std
push
adc
push
pop
inc
out
mov
aas
mov
and
leave
and
shll
out
fcoms
out
gs
push
or
inc
in
iret
sahf
rolb
les
movsl
int
xchg
mov
add
pusha
pop
call
leave
leave
pop
xor
repz
lock
jns
sub
sbb
cwtl
fimuls
aam
mov
mov
dec
inc
sub
ficomps
adc
ja
and
out
repz
dec
lds
sbb
lods
sar
xchg
sbb
xor
imul
mov
cmc
loope
pop
ja
or
cld
jecxz
fistpll
pop
xchg
mov
repnz
and
xor
cmp
loop
add
icebp
test
es
adc
push
xchg
fildl
inc
adc
stos
and
out
mov
mov
gs
jns
fs
pop
jmp
shl
sub
adc
call
loopne
inc
inc
int3
scas
xchg
imul
xor
lds
cmpsb
adc
mov
icebp
xlat
das
and
mov
ror
and
jge
ljmp
mov
sti
adc
cmp
rcll
ja
bound
ljmp
popa
dec
ljmp
aam
repnz
arpl
and
leave
adc
sahf
shr
jle
inc
loop
es
mov
clc
inc
ss
lahf
mov
lcall
pop
and
fildl
rcrb
push
mov
psadbw
cmp
pop
test
mov
aad
sbb
outsb
push
adc
in
aas
mov
stos
or
mov
add
insb
inc
push
or
adc
sbb
xchg
xchg
das
xchg
dec
stos
ljmp
push
das
push
cmc
cli
fwait
sub
fwait
adc
adc
insl
imul
outsb
add
das
das
std
xor
sbb
pmaxub
pop
or
jbe
imul
rol
xchg
pop
shrb
lcall
sub
lahf
loop
pop
mov
cmp
test
add
or
mov
inc
jo
mov
mov
sbb
repnz
adc
sub
int3
call
push
into
xlat
push
push
mov
pop
mov
lret
add
mov
rcrl
fcmovb
lods
sbb
add
into
mov
lret
inc
inc
in
cmp
inc
aad
clc
xor
xchg
ss
push
shl
ss
push
pop
fxch
aas
mov
mov
int
mov
xchg
out
and
dec
jo
jae
pop
sbb
add
push
sbb
jne
cmp
faddl
xor
std
rorb
and
adc
inc
negl
jno
faddl
cmp
jmp
lea
cmp
pop
aam
pop
and
pop
cmpsb
mov
jle
inc
bnd
mov
sub
mov
repz
mov
faddl
adc
xchg
inc
sub
sbb
out
sub
je
jl
push
pop
addl
and
pop
mov
mov
movb
lods
and
in
adc
cld
je
insl
dec
jl
sub
sbb
xchg
mov
mov
cmpsb
test
stc
nop
rcll
dec
popf
push
mov
aad
dec
mov
push
and
arpl
mov
in
mov
cwtl
jle
hlt
dec
jmp
mov
mov
mov
fs
outsl
daa
ret
xchg
imul
icebp
pop
je
cmp
push
cs
bound
mov
xor
imul
mov
jnp
stos
sub
push
sahf
lods
das
mov
or
int3
je
adc
stos
adc
pop
xchg
cmpsl
or
arpl
add
and
pop
cmpb
js
cmp
mov
stc
cs
test
lret
and
ja
xor
add
adc
jp
cld
shl
repz
lods
out
add
push
into
push
jne
sbb
out
repz
mov
imul
jno
shlb
xchg
pop
lods
sbb
push
and
incl
ds
pop
or
fxch
ja
jmp
mov
data16
mov
scas
idiv
repz
aaa
loop
rcll
cmp
dec
popa
into
adc
fildll
andl
hlt
mov
stc
fidivrl
jle
jge
pop
or
jns
jnp
or
imul
sahf
xchg
or
mov
sbb
test
sub
cli
in
mov
dec
mov
jecxz
gs
stos
mull
stos
sub
cli
dec
jmp
cs
rorb
dec
aaa
mov
pop
andb
dec
jge
sahf
divl
add
cmc
les
imulb
or
sub
bound
movsb
arpl
adc
adc
adc
push
xchg
xchg
adc
aas
cmp
push
push
lods
jmp
loopne
roll
outsl
shlb
je
jb
push
pusha
imul
jmp
mov
hlt
mov
imul
and
pop
aas
inc
and
xor
lods
pop
aad
lds
sub
jp
sbb
mov
loope
int
mov
fdivr
pop
adc
and
inc
mov
xchg
mov
push
decb
or
icebp
lahf
sub
pop
scas
fisttps
pop
mov
mov
add
push
mov
mov
push
pop
xor
jg
shrl
jg
std
hlt
dec
adc
cmpsl
inc
mov
jbe
aas
mov
mov
and
shll
rcr
in
sub
out
lret
cs
push
aaa
in
shrl
inc
int3
into
xchg
fdivrl
int3
inc
inc
movsl
mov
movsb
xor
ja
add
xchg
in
pop
fnsave
in
nop
jns
dec
jmp
mov
or
and
bswap
add
ss
mov
loopne
icebp
out
outsb
sub
flds
je
cmp
sub
sub
adc
pop
aaa
mov
lahf
aam
pop
cmp
dec
dec
jle
jp
leave
stos
dec
mov
test
mov
and
add
outsl
xor
or
scas
dec
clc
loope
sub
adc
enter
aas
outsl
jmp
adc
paddusb
int3
jnp
lods
mov
daa
jo
adc
xor
push
bound
dec
insl
xchg
outsb
xchg
nop
jecxz
loopne
push
scas
pop
cmp
stos
push
inc
add
clc
inc
loop
mov
outsl
inc
rol
push
xchg
push
aad
call
xor
xchg
inc
cs
test
jne
xchg
inc
jge
pop
cltd
cmpsb
add
inc
test
test
cmp
mov
cs
dec
adc
xchg
mov
or
mov
cs
sub
mov
popf
outsb
xchg
stos
fsts
out
ja
icebp
movsl
and
push
push
loopne
fwait
stos
xchg
mov
call
adc
adc
and
das
and
movsl
push
popf
pop
stos
sahf
int
daa
sbb
dec
adc
or
dec
lahf
push
lods
adc
cmp
cmp
inc
cltd
sbb
movsb
orl
or
mov
fdivs
xor
sub
outsl
mov
sub
push
xchg
stc
inc
sub
aam
push
scas
mov
es
sbb
gs
dec
lods
xor
and
in
jbe
push
push
shlb
jecxz
stc
ljmp
sub
aas
push
adc
dec
inc
mov
pop
cmp
cmp
rcrl
sub
dec
mov
rclb
dec
mov
ljmp
in
movsl
repnz
iret
lea
test
push
and
sub
fs
push
outsb
call
jp
mov
mov
in
imull
mov
out
pop
out
and
dec
and
outsl
sti
mov
and
mov
mov
insb
pop
divb
dec
jmp
movsb
sbb
dec
in
mov
gs
and
addr16
xchg
add
ljmp
jl
jecxz
push
jge
hlt
push
nop
lods
cmp
rorl
push
arpl
bound
xlat
jle
sbb
xor
jb
and
inc
test
xlat
sbb
sub
push
push
pop
bound
into
lahf
and
inc
mov
push
xchg
test
xchg
jecxz
subl
and
in
int3
psubd
sbb
inc
stos
cmp
jmp
lret
and
lret
std
xor
jno
inc
pop
dec
pop
in
fwait
push
or
inc
dec
call
jecxz
mov
dec
mov
lahf
bound
push
mov
or
jl
mov
jmp
jns
ret
mov
repnz
popf
adc
popf
sbb
pop
jno
mov
and
mov
in
xchg
ja
cmp
popa
inc
ljmp
adcb
icebp
inc
divl
cli
gs
je
jecxz
and
out
mov
cmpsb
mov
jbe
cs
imul
jo
sbb
pop
mov
mov
pop
lock
inc
push
dec
aaa
sub
or
and
aaa
sti
cmp
push
xchg
add
inc
int3
mov
or
shrl
insl
pushf
sub
xlat
mov
jb
cmp
inc
shrb
push
hlt
divb
data16
stos
pushf
sbb
adc
dec
fwait
lea
push
orb
cld
push
adc
in
mov
stc
loop
jnp
and
shld
pop
xchg
push
stos
in
cmp
dec
push
outsb
jno
add
loope
shll
inc
cwtl
data16
scas
cmp
fs
adc
popf
orl
repz
imul
push
out
mov
inc
test
cmpsl
test
lods
dec
clc
mov
psubusb
cmp
mov
pop
cmp
add
or
popa
repz
xchg
push
arpl
std
imul
leave
push
int3
push
daa
mov
push
adc
pop
jg
add
stos
ljmp
jmp
lods
stos
jmp
push
mov
sub
cli
fxch
addr16
rcl
stos
add
enter
dec
mov
cmp
call
dec
sub
popf
int
xor
rcl
push
shrb
test
dec
aam
jg
iret
arpl
or
aam
pop
dec
lock
add
jb
dec
fstpt
dec
and
dec
xor
ss
jnp
mov
js
or
shll
cmpsl
adc
dec
or
push
fcoml
iret
cmp
les
push
insb
dec
pusha
adc
and
test
ds
inc
addr16
loop
or
add
data16
aas
mov
pop
adc
mov
mov
and
clc
enter
sbbl
arpl
test
punpcklwd
push
imul
xchg
call
or
mov
mov
sbb
stos
jns
push
out
lds
dec
pop
fdivrs
pop
pop
push
movsb
xchg
jb
enter
dec
dec
insb
push
ljmp
out
add
pop
fwait
inc
int3
mov
hlt
inc
jg
cmpsl
xchg
sahf
add
enter
ss
orl
xchg
ja
inc
and
int
jle
xchg
popa
testb
dec
sub
nop
jnp
cmpsl
cli
dec
jae
in
xor
xor
nop
pusha
outsl
or
insb
dec
mov
pushf
out
jg
je
inc
pushl
inc
mov
enter
imul
jmp
dec
sbb
data16
xchg
das
adc
filds
pop
sbb
repz
ret
aad
fildl
xlat
sub
pop
gs
cmp
push
jmp
pop
jge
aaa
add
lods
gs
jae
and
outsb
xchg
or
mov
pop
lea
inc
fdivs
xor
shl
fcompl
dec
lret
inc
fmulp
pop
sbbb
add
xor
call
jge
imulb
sub
adcb
cwtl
insb
cli
movsl
lcall
ds
stc
cmc
pop
sub
xchg
popf
test
adc
adc
inc
aam
fwait
adc
fistps
movsb
inc
xor
mov
fcmovnu
and
xchg
fbstp
pop
ret
mov
pop
xor
aas
sbb
pop
inc
stos
push
jns
push
into
std
js
or
inc
cwtl
leave
int3
movsl
in
mov
ja
daa
lcall
xchg
xor
std
mov
cmpsl
jne
ljmp
out
xor
push
mov
xchg
std
mov
pop
movsl
jb
out
outsl
cltd
and
test
jp
int3
dec
icebp
dec
shlb
rcll
xlat
cmpsb
pushf
mov
cli
cmp
jg
je
ret
fisubrs
addr16
sti
or
addr16
jnp
das
aas
add
sub
push
pop
mov
push
sub
or
add
ljmp
mov
jno
xchg
in
push
shlb
sbb
xchg
ljmp
addl
xchg
jb
test
mov
cld
lock
xor
mov
popf
or
pusha
pusha
clc
sub
push
sarl
mov
cmp
cwtl
jle
outsb
pop
shll
dec
or
mov
push
push
or
pop
stos
cld
adc
clc
lret
cmp
in
sbb
insl
cmp
aad
fimuls
pop
cmp
sbb
lretw
cmp
enter
jp
out
fsubs
lods
hlt
icebp
popl
adc
xchg
ss
lock
pop
xor
outsl
stos
rclb
lret
push
mov
hlt
jns
inc
pop
loope
push
jge
aaa
push
and
push
es
mov
push
lahf
test
pop
pushf
cmpb
jb
fs
add
mov
lods
or
cltd
std
add
xchg
dec
in
ja
in
shrb
mov
cltd
push
adc
lock
mov
adc
call
or
push
mov
test
pusha
pop
xlat
cld
cltd
mov
sub
jle
jle
sub
scas
adc
inc
arpl
int3
mov
lock
xchg
jbe
mov
inc
out
push
std
push
jbe
jbe
iret
inc
xor
inc
out
dec
jmp
sbb
mov
pop
aaa
js
rol
sub
shlb
aad
clc
xchg
xchg
xchg
cmp
fdivl
dec
mov
ss
rcll
fisttps
dec
shll
pop
test
mov
mov
mov
fisttpll
add
pushf
or
mov
es
adc
sbbl
inc
cmp
or
xor
out
shlb
dec
mov
dec
xorl
hlt
dec
or
fcompl
cmpl
add
jae
std
xchg
pop
add
imul
push
bound
cltd
mov
rcr
sbb
sti
addr16
dec
mov
mov
pop
push
sti
test
fldpi
sbb
sahf
or
test
faddl
push
inc
or
mov
shll
cmp
mov
lods
pop
mov
movsl
ds
lahf
pop
inc
enter
jbe
jbe
cwtl
xchg
xor
push
out
jmp
movsl
pop
mov
pop
cmpsl
adc
ss
sub
push
push
xchg
sbb
mov
mov
popa
mov
mov
sub
sub
inc
repnz
lods
mov
idivl
adc
sbb
and
pop
orb
xchg
xor
std
mov
inc
rorb
adc
pop
out
cmp
xor
cmp
dec
push
movsb
or
adc
sarb
or
or
mov
xlat
push
lods
fdivl
mov
xchg
imul
es
mov
popf
jl
sbb
stos
mov
push
in
aam
pop
pushf
and
sub
cmp
lea
add
inc
xlat
push
enter
mov
shlb
mov
rcl
dec
mov
aam
in
out
cmpsl
test
fdivr
mov
daa
cmpsb
movsb
aaa
cmc
fs
mov
xchg
shll
inc
pop
xlat
push
push
sub
call
call
lcall
rcrl
movsl
jns
pushf
mov
int3
movsb
clc
adcl
mov
sub
lret
cmpsl
pop
roll
test
dec
cwtl
add
movzwl
into
adcl
jo,pn
sarl
out
adc
in
inc
inc
insb
pop
call
enter
xchg
aad
jl
test
shrl
push
push
mov
in
test
sbb
mov
in
cmp
popf
and
add
enter
mov
jne
xchg
pop
ret
dec
aas
sub
dec
push
movsl
aam
popa
lret
jo
inc
sub
jb
jns
add
inc
cwtl
sbbl
mov
xchg
add
sbb
mov
mov
fwait
mov
push
sbb
mov
mov
pop
mov
int
test
mov
or
sbb
pushf
lret
out
aam
sbb
xor
sti
push
mov
shl
pop
mov
inc
jno
add
aam
add
pop
push
mov
test
or
cmpsb
push
cmc
and
je
xchg
pop
or
jbe
inc
and
ljmp
in
iret
aad
xchg
pop
bound
push
or
out
push
xchg
fisubl
andb
or
jg
es
leave
xchg
pop
es
xor
adc
pop
stos
inc
ss
push
bound
or
inc
xor
insl
sub
jbe
in
pop
mov
lea
lods
pop
mov
fdivl
jle
inc
lods
sub
popf
insb
addr16
stc
movsb
sbb
scas
cmc
stos
jecxz
sarl
pushf
lods
imul
cmpsl
xor
lds
in
add
pop
fdivl
out
pop
fisubrl
movsb
push
cmp
nop
fwait
lock
fprem
aas
add
mov
add
dec
pop
jb
aas
sbb
outsb
mov
cmp
mov
jb
cmpsl
and
jecxz
ss
mov
nop
pop
mulb
pop
cmp
fstpl
adc
xor
out
fisubs
mov
jecxz
inc
fld
cld
pop
adc
test
pop
push
lock
stos
movsb
and
fwait
or
test
pushf
push
inc
ljmp
xor
test
test
in
outsb
cli
test
rcrl
cmc
cs
jne
fisttpl
cmp
ja
mov
pop
and
outsb
xor
add
push
pop
aad
loop
xor
lods
mov
les
or
jne
aaa
sub
adcb
popf
aas
jne
lahf
lahf
adc
push
sbb
mov
hlt
mov
test
int
xchg
in
push
xor
mov
mov
rcll
andl
ljmp
pushf
mov
rolb
andb
fimuls
arpl
xchg
xor
mov
xchg
mov
fstpl
loop
shl
in
or
lahf
lds
popf
fdivr
inc
movsb
jmp
repz
xchg
mov
lret
dec
je
jae
push
stc
fisubrs
mov
std
add
frstor
lret
popa
loop
and
sub
dec
inc
pushf
and
inc
loop
cmp
les
stos
mov
or
sbb
cmp
dec
rorb
fidivl
int
add
dec
jg
ss
pop
xchg
fistpll
idiv
test
dec
lods
sub
mov
xchg
rcll
add
inc
push
sbb
push
fdivrs
arpl
jecxz
add
cld
xchg
lods
mov
cmp
push
sbb
dec
xchg
lock
cwtl
testb
pop
sahf
push
jns
cld
imul
cmp
push
dec
outsb
sub
shrb
sbb
xchg
sbb
shlb
dec
movsl
rolb
fsts
cmp
dec
stos
mov
in
jge
int3
fbld
sub
push
mov
jg
mov
pop
nop
and
push
stos
scas
cmp
or
stos
or
xchg
xor
dec
push
divb
push
mov
xor
jl
or
cmpsb
sar
jb
lret
pop
cld
outsb
xchg
pop
dec
lock
jo
pushaw
mov
lock
aam
adc
or
mov
or
jmp
repz
sbb
scas
push
dec
cld
iret
pop
cltd
pop
ret
xchg
mov
mov
adc
cltd
cmpsb
jmp
dec
xchg
mov
mov
xlat
sub
push
je
in
mov
xchg
inc
adc
cltd
add
jecxz
push
jmp
aam
popa
jle
pop
into
out
rcrb
sti
sub
shlb
push
xchg
movntq
out
or
fdivr
xor
fidivrs
mov
add
pop
push
loop
rorl
sub
inc
pop
dec
ret
and
adc
fsubp
int3
js
pop
es
mov
mov
aaa
movsl
or
sub
cmp
lcall
lods
test
insb
fwait
pop
aad
or
inc
rcrb
in
outsl
xchg
imul
add
lods
aad
aaa
mov
insl
fsubl
sub
or
xchg
lahf
xchg
sbbl
into
das
add
mov
test
pop
insl
inc
push
cmp
out
test
jns
push
iret
aas
nop
sbb
out
add
xchg
dec
sub
leave
adc
xchg
imul
aaa
sbb
jo
mov
ljmp
jnp
js
xchg
std
enter
sbb
push
lods
jle
roll
adc
sbb
mov
subl
and
sbb
push
gs
scas
jle
sub
dec
push
adc
dec
inc
mov
add
decb
cmp
ss
push
das
sbb
jbe
out
rol
push
jo
loopne
test
call
mov
inc
into
lcall
rorb
sub
bound
das
loope,pn
adc
aad
bound
mov
ljmp
dec
enter
inc
jg
jg
or
shll
or
pop
rcll
fistpll
outsb
das
cmp
int3
xor
ja
pop
out
dec
jg
js
inc
movsl
jno
out
add
sbbb
inc
lea
cmp
jae
andl
inc
pusha
nop
push
negb
ss
pop
push
or
in
push
in
push
les
mov
popf
sbb
std
aas
xor
jno
jne
mov
xchg
mov
mov
push
ret
js
fwait
leave
mov
stos
fcomi
jecxz
pop
in
pop
data16
or
add
lcall
loopne
cmp
in
mov
xchg
stos
aam
jo
add
cmp
push
push
dec
cmc
and
in
cmpsb
lcall
iret
dec
jns
pusha
and
sbb
arpl
rorb
xchg
ret
fildll
fidivrs
mov
sbb
cld
aas
cld
loop
mov
pop
icebp
test
xchg
shrl
adc
mov
xchg
in
fsubp
mov
xchg
sub
testb
lods
cmp
lea
xchg
jns
add
repz
aad
push
cmp
xor
call
push
mov
incl
xchg
stos
das
dec
mov
ret
test
and
xchg
lret
or
mov
xchg
jle
scas
leave
stos
cmp
loop
mov
inc
push
sbb
sub
fcoml
sub
imul
insl
int
xor
sti
shl
jnp
daa
xchg
js
cmp
cmp
cli
lret
adc
pop
test
cmp
loope
xchg
adc
sbb
jnp
dec
call
fnstsw
loop
mov
inc
xchg
mov
adc
mov
mov
xor
mov
fsubr
dec
pop
or
mov
hlt
int
push
lods
lahf
push
sub
xchg
ret
inc
mov
out
lods
adcb
shrb
cmp
ret
lcall
jne
xchg
sbb
sbb
jb
and
popa
ljmp
fdivrl
pop
nop
lahf
adc
ret
adc
popf
jle
test
adc
and
sub
dec
aad
mov
mov
mov
call
mov
das
mov
sub
scas
shrb
call
add
mov
pushf
mov
add
dec
fldenv
xlat
jnp
and
push
idivb
pop
lret
scas
fnstsw
and
mov
lds
or
pop
mov
outsl
addb
and
xor
stos
mov
adc
xor
or
in
mov
pop
adc
push
mov
mov
xor
sahf
push
mov
sbb
faddl
loope
xlat
mov
out
imulb
gs
sbb
push
es
subb
fwait
adcl
jo
out
xchg
xor
inc
xor
push
cli
or
jp
js
fdivl
sbbb
mov
mov
sbb
push
sbb
inc
int
inc
mov
pusha
out
ret
stos
sub
pushf
or
sbb
sub
sub
dec
adc
cmp
mov
jecxz
cltd
inc
in
dec
xor
jle
pop
xorb
xchg
loope
cmpsb
and
sar
inc
imul
dec
sti
mov
test
inc
adc
sub
cltd
add
stos
mov
pop
mov
sbb
ja
rorl
pushf
xchg
pop
jecxz
jle
aam
add
xchg
lcall
push
stos
addl
pop
xor
jno
sbb
clc
in
fsubrs
shlb
dec
fwait
outsb
adc
aas
clc
out
sub
jae
jp
or
arpl
out
pop
adc
push
lods
inc
loopne
aad
mov
movb
push
lds
cwtl
lods
inc
cmpsl
repz
mov
pop
clc
pop
scas
push
jae
push
aad
push
loop
shr
arpl
mov
inc
pusha
ret
mov
insl
out
dec
idiv
add
dec
popa
sahf
je
mov
mov
sub
sub
xor
stos
xchg
jb
mov
lds
fldcw
pop
add
setb
ds
gs
mov
repnz
movsl
lea
in
ljmp
mov
xor
sub
push
dec
enter
lahf
add
das
frstor
mov
sarl
pop
sub
into
sbb
cltd
mov
cmpsl
add
js
mov
mov
mov
push
loop
popa
aam
push
or
movsb
mov
mov
inc
out
jp
or
jo
ljmp
fwait
insl
mov
pop
fimull
mov
mov
inc
mov
xor
pop
mov
cmpsl
xor
xchg
jnp
pop
mov
xchg
bound
ja
or
mov
mov
dec
dec
pop
dec
mov
mov
loopne
pop
sbb
or
xchg
jecxz
mov
and
outsb
arpl
adc
sub
into
jb
stos
pop
ret
dec
loope
jns
xor
mov
cld
pop
fnstcw
pushf
adc
mov
fs
cmp
cwtl
dec
movb
cmpb
lret
sub
or
sbb
xor
mov
mov
std
mov
mov
cmp
push
pop
test
jbe
imul
rcrb
sbb
out
icebp
aad
popf
inc
fbld
mov
push
mov
mov
mov
xor
out
xor
je
xchg
inc
jns
es
bndstx
or
loopne
stos
aad
std
inc
loop
test
jbe
cmpsb
mov
pop
sbb
jae
cmp
jo
or
sbb
imul
mov
repz
cli
mov
push
fists
pop
xor
adc
aas
push
sub
mov
dec
xor
outsb
neg
lret
pop
es
in
cli
push
sbb
and
icebp
xchg
es
int
xorb
ss
push
lock
jl
push
sarl
jecxz
mov
int
jl
mov
ret
outsb
repnz
sbb
adc
mov
xchg
das
mov
mov
out
mov
ds
cwtl
adc
xchg
loopne
je
xchg
ja
sahf
ret
aas
or
push
rol
lahf
xlat
dec
lahf
pushf
sbb
or
add
push
or
shl
out
or
xchg
dec
popa
in
imul
ret
in
xor
fdivl
fwait
and
sbb
adc
out
add
addr16
jg
sbb
dec
mov
push
inc
pop
jmp
cs
or
mov
andl
pusha
popa
sbbl
add
nop
push
repnz
mov
into
aas
inc
jl
int
cld
inc
call
xchg
in
dec
cmp
mov
sahf
fcmovnu
outsb
inc
stc
pop
adc
fcoms
sti
dec
test
xchg
shrl
pop
xchg
repnz
in
pop
dec
pop
jo
ja
out
pop
fldl
push
cs
push
adcb
mov
cmp
loop
arpl
ret
stos
fnstsw
xchg
jbe
push
sub
pusha
mov
mov
jmp
fcomp
dec
bound
out
pop
mov
dec
cmp
dec
rol
mov
clc
test
xchg
scas
push
push
adc
and
mov
roll
not
cmp
xor
cwtl
aas
mov
jnp
jp
xor
mov
add
cltd
gs
int3
ds
test
cmp
mov
xor
inc
xchg
sbbb
movsb
sbb
cli
daa
sub
and
and
inc
lcall
mov
and
mov
cmp
xchg
xlat
lcall
pop
idiv
fidivrl
pop
mov
divl
push
repz
lock
xor
int
repz
cmp
stc
mov
xchg
cmp
dec
mov
pusha
repz
inc
add
gs
mov
dec
pop
push
enter
adc
andl
out
adc
pushl
into
and
nop
loop
cmp
xchg
rcll
pushf
jns
dec
fisttpll
pushf
es
fs
ss
loope
mov
lods
icebp
in
loop
jmp
aam
clc
out
lahf
push
xchg
jno
mov
bound
in
imul
xor
insl
mov
arpl
mov
aaa
push
or
xor
and
sbb
lods
dec
sub
fmulp
cmp
and
int3
sub
inc
mov
lcall
cmpsb
in
and
movsl
mov
jbe
jns
or
scas
jmp
cmp
pop
push
in
cmp
negb
dec
and
jg
sub
out
cmp
call
xchg
lods
ret
sti
push
inc
fdivp
jbe
add
cmpsb
loopne
ret
xchg
push
adc
rorl
je
adc
mov
push
icebp
jno
pop
mov
dec
stos
jb
mov
pusha
arpl
inc
pop
dec
push
cmp
inc
fildl
add
push
pop
jne
inc
in
stos
shl
adc
subl
das
ljmp
scas
and
dec
out
daa
and
out
outsb
addr16
mov
cwtl
lret
pop
and
adc
fdivrs
jno
push
pop
out
test
fildll
and
mov
xchg
jg
repz
shl
inc
adc
xchg
icebp
jge
mov
ja
and
sub
xchg
clc
mov
sarb
and
mov
ljmp
jmp
sti
jl
add
dec
dec
jecxz
jl
mov
jle
xchg
push
mov
test
push
jbe
ret
mov
test
push
push
push
test
pop
push
mov
sti
adc
xchg
mov
lcall
lret
sub
mov
cwtl
xchg
xchg
nop
cmp
mov
iret
dec
fs
lret
js
dec
cmp
inc
shlb
inc
sub
inc
sub
jne
dec
aam
inc
pushf
mov
mov
jmp
clc
inc
or
inc
mov
xchg
outsl
stc
jbe
ja
sbb
dec
jb
loopne
in
dec
fisubrl
and
dec
mov
sub
pop
jg
test
int3
jg
mov
cltd
jmp
in
dec
mov
stc
add
ds
mov
xor
xchg
cmp
in
push
inc
add
mov
popf
mov
mov
stc
imul
jmp
xchg
int3
int
pop
adc
lahf
cs
mov
sbb
bound
sbb
mov
jle
out
sub
aaa
aas
mov
ds
lahf
in
mov
mov
pop
inc
fwait
cmp
sbb
xor
pop
add
cmp
jns
mov
fnstsw
into
xor
js
sbb
lcall
std
adc
inc
pop
jmp
add
fs
in
sub
cmp
inc
mov
rcl
nop
sub
dec
movsb
jb
push
cmp
pop
cwtl
pop
or
pop
jo
or
sub
inc
xlat
lock
dec
xchg
aad
mov
dec
lahf
pop
push
flds
es
pushf
lahf
popf
cmp
jbe
ss
and
insb
cmp
and
bound
adc
outsb
jo
pushl
fistps
push
or
and
data16
jne
jecxz
pop
adc
fisubl
cmpsb
push
jbe
gs
std
dec
cld
call
ret
mov
inc
fisubl
dec
mov
push
sub
cmp
mov
xchg
cmp
cmp
rorl
insb
stos
or
orl
lds
ret
dec
ja
icebp
xor
mov
adc
shll
test
jge
cmp
and
jbe
xor
or
rcr
movsl
aad
daa
decb
bnd
sbb
subb
or
fidivrl
jl
leave
ljmp
mov
sub
cmpl
mov
repnz
cmc
popa
das
sbb
lcall
or
in
jecxz
pop
test
xchg
lcall
stos
cmp
outsl
mov
popa
leave
shlb
lcall
das
mov
in
adc
cs
pop
ds
stos
in
push
aad
popf
pop
ss
cmpsb
orl
icebp
shl
pop
cmp
pop
fstpt
fwait
xlat
xor
dec
je
test
test
ja
int
es
inc
je
dec
inc
or
aam
jo
sahf
xchg
cmp
clc
adcb
or
sbb
or
xorb
incb
or
das
jns
loopne
jp
inc
xor
pop
daa
push
sub
or
add
jb
jl
stos
sub
sbb
mov
outsb
nop
adc
cmpsb
test
pop
or
cmpsl
and
pop
js
dec
repnz
sub
cmpsb
test
cmpsl
xor
cmp
and
push
enter
sahf
mov
mov
dec
stos
mov
sbb
jecxz
pusha
jmp
stos
lcall
popa
fildl
outsl
jmp
xchg
sub
mov
xchg
dec
cwtl
add
add
pop
jmp
push
or
and
add
jns
mov
fsubs
xor
bnd
stc
sub
rcr
testl
test
stos
xor
imulb
cmpsb
test
xor
sub
daa
and
cmc
xlat
sti
cmp
into
clc
mov
das
sub
lcall
jl
imul
dec
outsl
add
xor
add
call
and
fbstp
ja
mov
lcall
bound
inc
jae
idivl
in
mov
pop
fistpl
andb
lods
out
mov
ja
rclb
sti
es
dec
outsl
popa
lods
es
jo
pop
dec
jmp
imul
imul
arpl
push
in
imul
add
cmpsb
aam
and
or
add
aaa
aam
inc
push
pop
fnstcw
testl
cmp
lret
dec
cmp
push
daa
sahf
xor
pop
mov
cmp
push
push
adc
std
stos
aaa
dec
loop
xor
loope
xlat
fdivl
jmp
or
jnp
arpl
fwait
clc
mov
out
ss
jno
xchg
stos
add
mov
xchg
or
ljmp
xchg
xor
mov
push
add
xor
push
out
ds
push
pop
mov
push
roll
push
mull
mov
enter
mov
jae
cmp
inc
and
sub
gs
pop
jge
mov
jnp
shll
mov
clc
test
rcr
or
pop
outsl
xor
adc
fwait
jns
mov
loopne
dec
xor
orl
mov
jae
out
or
cld
insl
rorb
dec
dec
int
adcb
xchg
adc
fs
or
dec
rorb
shlb
daa
pop
cmp
jp
loop
sub
pop
xlat
in
jbe
ja
xor
fdivrl
cwtl
lock
and
sbb
orb
scas
test
lahf
icebp
and
jmp
scas
ljmp
int
jge
mov
sub
fidivrs
cmpb
je
cmp
pop
loopne
xorl
sbb
rcpps
or
add
mov
push
mov
ss
xor
and
add
inc
mov
pop
fldcw
jl
dec
inc
mov
push
lcall
push
sub
loop
mov
add
popf
cmc
sub
mov
fucomp
lds
icebp
dec
popa
inc
sub
add
sub
arpl
shlb
cld
push
xchg
push
addb
ja
mov
push
cwtl
xor
jp
stos
mov
clc
pop
lods
add
sbb
jnp
rcr
inc
jbe
and
sbb
lret
or
jecxz
mov
pop
les
cmp
mov
mov
mov
out
imul
mov
push
test
adc
in
xor
lahf
inc
sub
add
popa
add
mov
or
dec
mov
xor
mov
out
shll
or
into
pop
test
pop
in
mov
stc
iret
mov
pop
or
dec
and
es
out
inc
add
cmp
mov
nop
cmc
ds
add
jl
inc
push
popa
cwtl
jnp
loop
pop
cmp
jmp
push
hlt
push
dec
scas
shrl
jge
or
or
lret
xor
mov
js
sbb
pusha
xchg
imul
add
lock
lods
pusha
scas
mov
cmp
xchg
xchg
int3
and
push
jns
in
mov
ret
sub
ret
pop
sbb
das
movsb
dec
push
or
jae
imul
mov
jecxz
outsl
divb
mov
lods
sar
rol
test
dec
sbb
fimull
and
mov
mov
addr16
inc
outsw
out
inc
xorl
outsl
adc
popa
dec
and
out
pop
pop
cmp
pop
xchg
incb
lods
jp
push
jg
imul
iret
imul
mov
int3
negl
sbb
jmp
mov
subl
or
sbb
jbe
mulb
andb
scas
shlb
mov
fisttpl
or
repz
jmp
jmp
ds
dec
cmp
cmp
leave
icebp
adc
insb
push
jae
cli
jmp
push
add
inc
and
js
test
scas
sub
mov
nop
movsl
ficompl
sar
cmp
xchg
out
call
lahf
sub
sbb
loopne
xchg
ds
xor
jmp
mov
and
mov
shrl
ds
or
dec
pop
bound
xchg
cmp
xor
push
xor
rcrl
repnz
cmp
xchg
fisubrs
sahf
into
lret
sub
adc
mov
sbb
pop
cmp
imul
popa
repnz
inc
insb
incl
jo
cmp
jge
mov
insl
add
and
jmp
push
or
fadds
mov
pcmpeqd
xchg
mov
addb
fisttps
xchg
cmpb
xlat
push
pop
fldl
movlhps
push
jg
lret
xchg
cmp
xor
sub
inc
inc
je
and
sbb
push
cwtl
adc
hlt
dec
mov
arpl
xchg
push
mov
jle
lcall
lock
dec
dec
pusha
jno
mov
fstpt
inc
jae
fstpt
pop
jb
xchg
stc
lcall
inc
xchg
clc
cmpsb
or
popa
stos
mov
add
xor
movsb
int3
scas
roll
and
mov
in
rcrl
out
mov
sbb
pop
xchg
shrb
pop
mov
into
dec
push
xchg
push
dec
push
dec
stos
shr
cmpb
jne
sbb
mov
xor
mov
mov
jecxz
mov
inc
fs
cmp
cli
aam
xchg
bound
mov
mov
sub
loop
jo
sub
mov
das
mov
and
xchg
ficoml
and
push
jmp
stos
lea
enter
ficoml
lods
and
in
mov
into
mov
mov
mov
mov
jae
mov
sub
fs
pop
add
push
loop
ss
jno
cli
sbb
and
adc
inc
push
dec
push
in
adc
mov
push
cli
dec
pop
aaa
jg
aam
push
scas
outsl
add
enter
fsubrp
shr
cmp
daa
insb
repnz
dec
test
push
jae
mov
and
js
ret
push
xlat
pop
and
mov
and
mov
pop
loopne
add
mov
sub
lahf
and
fmull
jnp
addl
lods
ss
enter
bound
fs
xchg
cmc
push
lahf
in
cmpsl
mov
xchg
inc
add
add
mov
rcrb
add
cli
arpl
sub
mov
add
fcoms
test
cmp
mov
ficompl
pop
cmp
sahf
dec
sbb
imul
dec
jae
stos
and
sbb
aas
pop
sub
pop
out
cmp
repnz
sbb
popf
in
imul
jp
lcall
and
stos
inc
adc
or
mov
add
fisubrs
cmp
jno
xchg
mov
inc
subb
shll
lds
push
xchg
setae
movsb
sub
jp
inc
mov
popf
push
jno
arpl
int3
adc
jmp
mov
stc
fdivrs
lcall
in
jp
repz
ret
dec
mov
fs
dec
mull
adc
es
adc
push
jl
pusha
jbe
sbb
or
ljmp
sahf
dec
shrl
pop
lods
ret
rcll
sbb
inc
inc
aad
mov
sbb
ja
xor
testb
scas
out
mov
ret
scas
negb
mov
jbe
cmp
pushf
setle
rol
fadd
pop
and
int
push
loopne
insb
cmpsl
stc
int
cmp
std
dec
sub
test
mov
icebp
jbe
vpmulhw
mov
loope
hlt
lret
dec
pop
loope
mov
ficoml
sub
sbb
out
out
cmp
mov
add
sti
lods
test
outsb
jle
add
push
ror
mov
xchg
out
cmpsb
stos
inc
insb
jno
lret
pop
clc
add
aas
in
aas
mulb
mov
xor
aad
mov
mov
mov
jne
sbb
sahf
iret
mov
jb,pn
out
sub
into
les
repz
or
pop
pop
mov
test
jae
lea
mov
fstl
nop
sub
movsb
xor
xchg
mov
mov
inc
test
lahf
ss
and
push
fildll
and
cld
fs
loope
ljmp
movsl
inc
cld
adc
shl
shrd
and
jne
popf
out
cmp
add
rcl
movsb
xor
mov
sarb
loop
jg
dec
cmc
lods
in
xor
rclb
std
xchg
loopne
dec
inc
xchg
dec
incl
sub
jmp
xchg
xor
cmp
adc
hlt
mov
cmp
flds
lret
stos
or
in
into
xor
push
test
cmp
add
cmp
xorl
pusha
lret
add
mov
inc
mov
push
je
aad
popa
int3
test
rcrl
jecxz
in
sub
jg
test
cwtl
or
push
in
enter
repz
xchg
dec
addl
cmp
pop
sbb
test
test
add
push
jle
mov
pushf
inc
xor
xor
movsb
out
ja
xor
or
pop
lods
cmpsl
pop
xor
xchg
mov
xlat
mov
add
outsb
push
or
addr16
sbb
shll
and
mov
sub
mov
imul
cwtl
ss
sahf
pop
faddp
jl
sub
sbb
pop
dec
sub
loope
sbb
pop
xchg
loopne
rclb
pop
and
sub
insb
adc
mov
cli
and
cli
inc
sbb
adc
sbb
filds
or
imul
aad
cli
in
cmp
inc
stos
hlt
lds
push
icebp
jmp
int3
xchg
mov
fcmovb
insl
xchg
pusha
scas
scas
push
or
mov
mov
add
xor
jp
push
inc
sbb
jne
mov
cli
cli
push
cmc
in
adcb
rorl
insl
push
xchg
push
insb
cmp
fildl
dec
mov
imul
inc
push
push
divl
dec
insl
dec
daa
or
add
ss
cmp
or
and
popa
jl
mov
jg
jge
inc
pop
jnp
inc
xlat
push
jnp
cmp
test
enter
popa
dec
inc
push
negl
lea
dec
mov
push
xchg
inc
push
sbb
ret
push
sub
ja
dec
jae
add
adc
pop
repnz
cmp
mov
adc
sbb
gs
aas
ja
addb
lock
roll
pop
lea
and
xor
xchg
leave
adc
pop
push
outsb
cmpb
add
out
das
arpl
mov
mov
add
cmpsb
adc
mull
lea
int3
popf
cwtl
mov
lcall
pop
cmpsl
jmp
sub
dec
fisttps
mov
xchg
xchg
arpl
loopne
movsl
push
shlb
mov
push
sub
lret
mov
repz
jge
das
das
test
std
pop
dec
je
inc
lea
in
cmp
sub
adc
cmp
add
or
lods
push
mov
pop
adc
cltd
fs
lods
int
jne
sbb
inc
out
fwait
lret
dec
shll
inc
das
mov
dec
cmp
jae
out
add
and
xor
mov
xor
cld
lret
pop
pop
and
data16
sahf
fmul
loop,pt
hlt
sbb
je
mov
out
inc
and
xor
cmp
inc
push
loope
xchg
in
shll
adc
and
xchg
dec
insb
in
aad
xor
push
dec
xchg
inc
cmp
or
push
sub
dec
ds
dec
mov
scas
mov
icebp
mov
mov
addr16
les
sbbb
sbb
push
mov
dec
les
fnstcw
adc
mov
adc
pop
dec
daa
cmp
movsb
adcl
addr16
and
and
lock
imul
lret
cld
mov
jae
jns
adc
cmp
xchg
or
mov
enter
es
and
mov
arpl
sub
sub
addr16
cmp
xchg
push
mov
xor
mov
and
add
popf
sub
sahf
mov
shl
je
out
pop
sub
sbb
jg
cmp
sbb
sti
jg
pop
shlb
xor
push
sub
jge
mov
jge
cmp
popa
jne
fmull
cmpl
scas
icebp
aaa
aad
adc
dec
cmp
sbb
outsb
mov
mov
movsb
clc
outsl
inc
cwtl
andb
fldl
mov
lret
ss
jg
call
loope
pop
jno
loopne
sub
arpl
jg
sbb
or
xchg
setne
pop
stos
cmpl
pop
outsl
mov
jg,pt
shlb
jg
jo
inc
loop
arpl
shrl
nop
mov
loop
enter
dec
jae
subl
xchg
cmc
mov
ja
mov
imul
cwtl
jecxz
cmp
jp
pop
aam
pop
push
bnd
xchg
outsb
test
out
in
lret
push
mov
push
jbe
sbb
call
push
addr16
sub
in
jns
loop
add
adc
je
leave
jns
ret
lcall
rorb
push
cmpl
inc
mov
loop
lahf
bound
push
std
dec
dec
sub
adc
push
cld
sub
pop
adc
inc
and
insl
mov
pop
pop
pmulhuw
sti
pop
or
roll
dec
inc
sbb
dec
testl
std
mov
mov
cli
mov
ja
outsb
out
sahf
mov
insl
jecxz
cmpsl
nop
negl
xchg
adc
or
mov
stos
sahf
mov
ret
inc
lret
mov
fdivs
jle
cmc
xlat
pop
roll
or
push
ret
lahf
iret
sbb
movsb
xor
push
repz
sub
loopne
jae
dec
jns
mov
sti
mov
in
push
sbb
xor
es
nop
lcall
pop
xchg
cltd
jbe,pn
dec
mull
scas
and
xor
mov
and
shlb
cltd
jge
out
je
inc
repz
je
aad
mov
stc
add
and
daa
push
pop
movsl
xor
mov
inc
enter
jo
cli
enter
cmp
roll
pop
mov
ljmp
mov
out
pop
dec
push
pop
fbld
test
mov
lcall
pop
push
fisttpl
negb
xchg
lods
add
outsb
cmp
imul
shll
outsl
xchg
and
std
cmp
jne
dec
sahf
aaa
pop
xchg
cwtl
xchg
or
push
inc
sbb
jl
test
bound
adc
in
popa
out
in
or
add
sbb
aam
rcrl
jne
ret
adc
cmp
cmp
fs
or
outsl
stos
mov
repnz
cwtl
clc
stos
cwtl
movsl
in
mov
push
lcall
jo
jo
sahf
or
adc
add
inc
adc
sbb
fdivr
cmp
add
clc
jle
xor
inc
xor
fdivrl
push
movsb
inc
in
jge
inc
int
icebp
addl
inc
mov
mov
xchg
fdivrl
fldl
out
fcmove
sbb
cs
sbbb
inc
or
sub
xchg
out
adc
pop
adc
outsl
insb
inc
data16
gs
fildll
push
stos
arpl
hlt
jb
test
xchg
cmpsl
lds
push
arpl
or
mov
sbb
scas
je
or
xchg
jne
mov
xor
repz
xor
call
xchg
mov
cmp
int3
xor
adc
sub
ret
ret
pop
aad
imul
ss
cld
iret
cli
mov
nop
xor
and
xlat
popf
xchg
movsl
movsl
xor
iret
xchg
xlat
in
sti
stos
mov
leave
aas
icebp
scas
inc
mov
lods
jmp
push
daa
jnp
negb
fistps
add
inc
lcall
pop
and
jnp
adc
and
cmpb
xchg
aaa
mov
pop
xchg
pop
popf
jnp
mov
sbb
and
int
add
inc
or
in
inc
add
addr16
mov
shl
jb
jge
insb
idiv
aad
inc
lock
stos
jmp
add
xchg
mov
mov
gs
cmc
call
dec
cld
jne
and
mov
xor
pop
lds
xchg
gs
lods
arpl
push
adc
sbb
test
pop
mov
pop
je
or
push
mov
push
aad
adc
int3
gs
adc
lds
push
adc
add
mov
adc
mov
adc
cltd
sub
cmpsl
inc
in
in
mov
aad
jecxz
inc
call
loope
mov
inc
addb
pop
ret
pop
aam
inc
iret
testb
fisubrs
inc
imul
addl
rcr
dec
push
jl
dec
or
mov
jno
adc
cmpb
data16
sub
push
fwait
pop
xchg
or
jno
dec
inc
dec
sbb
movsb
shlb
inc
stos
cld
fisttpl
pop
js
or
and
jne
imul
xchg
sbb
add
sbb
ds
in
or
ds
in
mov
or
sub
in
sub
test
out
adc
cmp
cmp
xchg
loope
cmpl
adc
jmp
or
ja
inc
inc
decl
cmpb
pop
cmc
in
cld
cmp
aaa
movsl
inc
add
lret
stos
jne
rorl
pop
popf
or
stc
add
xchg
jae
mov
jne
fimull
mov
das
jp
sub
sarb
fdivs
rolb
push
jmp
mov
insb
cmp
pop
cmc
insl
adc
out
cli
mov
xchg
fsub
xchg
mov
push
popf
mov
iret
jno
cmp
mov
xchg
inc
or
lods
shlb
xor
out
xchg
pop
sub
sti
cmc
in
mov
ret
xchg
mov
mov
or
xchg
orl
mov
dec
in
scas
cmpsb
fs
jnp
in
xor
xchg
sbb
out
xchg
mov
daa
mov
mov
in
jmp
adc
aaa
mov
lods
js
xor
addr16
jnp
jmp
push
and
imul
xchg
jb
or
lret
mov
push
in
and
cmp
jbe
cltd
jb
imul
pop
sbbb
rorl
decb
fidivrl
pop
xchg
cs
cmp
push
sub
dec
mov
push
sti
je
outsl
enter
jnp
push
inc
bound
xor
inc
aaa
xchg
sarb
jbe
mov
std
nop
insb
adc
xchg
lds
inc
xlat
sub
loop
pop
test
repnz
sbb
xorl
jmp
fldl
test
xor
lds
sbb
hlt
imul
fcmovbe
mov
dec
xchg
inc
out
jp
outsb
push
push
mov
jne
mov
xchg
lcall
int
addl
ja
fstl
xchg
pusha
mov
jbe
push
clc
sbb
inc
popa
mov
shl
or
push
jnp
pop
movsl
frstor
fdivrs
xor
pop
dec
mov
add
test
xbegin
add
orb
je
fucomp
sbbb
jo
add
cmp
loope
push
cs
pop
push
dec
xlat
dec
dec
jo
call
and
mov
out
aas
repz
aad
sub
or
sbbl
inc
and
add
xchg
and
and
pop
ss
mov
outsl
hlt
sub
adc
fcom
or
sahf
sbb
add
imul
adc
sub
das
fs
out
push
push
jnp
pop
inc
pushf
xchg
cmp
mov
hlt
xchg
insb
dec
popf
mov
stos
mov
out
aam
adc
jl
pop
scas
sbb
cmp
add
mov
xor
mov
mov
std
je
test
mov
cmpsb
into
push
mov
aas
mov
pop
jno
push
push
lret
fnsave
inc
mov
ja
adc
cli
arpl
or
cwtl
add
data16
arpl
push
cmp
inc
pop
and
sbb
in
rcrb
mov
adc
icebp
mov
in
pop
enter
and
pop
mov
jle
pop
or
jo
dec
stos
mov
jb
mov
mov
into
in
test
pop
jecxz
adc
pop
shrb
popa
lods
push
subl
movsl
and
leave
arpl
and
jl
cli
subb
flds
jl
adc
fisubl
stc
xchg
inc
mov
mov
dec
dec
or
pop
inc
arpl
repnz
pushf
mov
xchg
jmp
mov
imul
push
mov
cmp
jno
xor
mov
pop
sub
les
inc
pop
or
xorb
es
mov
xor
push
or
stc
arpl
es
dec
shrb
jecxz
jno
pushf
mov
stos
jae
add
cwtl
mov
push
pop
pop
dec
dec
in
inc
in
jge
lret
xchg
sub
mul
lret
or
or
pushf
rolb
pop
fadds
mov
sbb
daa
fistl
xor
jl
test
add
in
scas
sub
push
movsl
sbb
and
sahf
inc
add
insl
nop
mov
pop
pop
push
cmpb
mov
pop
in
sbb
push
and
ficoms
ds
gs
daa
fildl
into
xor
std
fsubl
add
inc
dec
pusha
xchg
lds
dec
dec
daa
mov
lcall
mov
cmpsl
add
fisttpll
bound
fs
int
push
lret
idiv
js
mov
loopne
add
outsl
sub
in
insb
sub
lods
movsl
push
add
mov
push
pop
pop
pop
cmpsb
cwtl
jg
fldl
add
add
and
cltd
lahf
sbb
and
roll
push
add
sub
pop
adc
aad
cs
xor
orl
xchg
mov
fs
mov
inc
mov
ds
out
dec
iret
pop
mov
inc
jb
loope
dec
out
and
add
xchg
adc
stos
jb
fst
clc
mov
icebp
test
cmp
mov
stos
int
mov
out
jl
sub
filds
pop
push
loope
mov
xlat
mov
inc
cmp
gs
push
test
cwtl
test
cmpb
mov
in
out
in
jl
add
adc
insl
inc
sbb
ret
adc
mov
rorl
inc
outsl
jecxz,pn
js
imul
fcom
mov
dec
cld
and
lahf
inc
mov
fst
ret
xchg
xor
sbb
lea
dec
les
dec
mov
pop
inc
pop
lods
es
pop
cli
xchg
push
ss
add
loopne
popf
pop
and
cmpsb
int3
icebp
lahf
dec
mov
xchg
jne
repnz
dec
sub
or
dec
ret
push
outsb
out
and
inc
fldenv
arpl
inc
xor
cmp
cmp
push
xchg
push
xchg
shr
mov
jno
jg
dec
sub
mov
lock
jbe
push
sub
or
xchg
mov
dec
push
cmp
add
outsl
flds
out
cmpsb
dec
and
fiadds
sbb
mov
out
cs
mov
sub
sbb
cmp
dec
cmpsl
dec
cmp
mov
int3
notb
loop
gs
inc
push
hlt
ss
aaa
cmc
icebp
jecxz
movsb
mov
xor
add
ret
ret
inc
xchg
cs
leave
push
fsubl
into
sahf
mov
daa
push
mov
mov
mov
imul
jmp
lock
jle
xor
icebp
adc
xchg
test
or
ljmp
mov
int
fnstenv
and
inc
lahf
lcall
das
xchg
dec
jns
orl
jnp
nop
xchg
jp
push
xor
and
rcll
cmpsl
push
sub
lret
movsl
movsl
jb
int3
imul
out
xchg
dec
sbb
hlt
mov
push
stc
sbb
mov
push
inc
flds
mov
pop
ffreep
xchg
inc
adc
mov
into
mov
and
pop
and
dec
sbb
hlt
sarb
mov
mov
mov
jne
pop
push
sub
out
pop
adc
enter
stos
dec
leave
aad
adc
mov
pop
or
mov
or
inc
ret
jmp
dec
rcrb
and
mov
mov
jnp
pop
xor
mov
loope
ret
and
int3
clc
mov
subl
test
jl
stc
push
inc
sub
xor
addl
cli
cmp
mov
into
mov
pop
loope
in
test
fidivrl
aam
inc
or
push
cmpsb
test
iret
xchg
insl
push
mov
imul
jle
push
adc
daa
sbb
mov
fcmovnbe
loope
cli
or
aad
sbb
aam
push
push
pop
pop
inc
inc
mov
loope
iret
mov
mov
sbb
xor
mov
xchg
sub
push
push
mov
jne
fcomi
test
mov
sub
or
mov
mov
lahf
repnz
xchg
aas
movsb
mov
push
jmp
mov
dec
xor
dec
and
repnz
in
sub
cli
mov
orl
xlat
insb
add
cld
or
adc
fcomps
ds
inc
cmc
dec
mov
adcb
andb
out
xchg
rcrl
xchg
inc
js
pop
pop
hlt
mov
jb
fadd
mov
inc
orl
dec
dec
mov
incb
mov
jno
cmp
and
out
out
push
jnp
cs
repnz
bound
jg
jns
lock
rcl
xchg
gs
cld
pop
xlat
in
fcmovbe
imul
push
and
push
leave
push
cld
inc
pop
stos
flds
aas
sbb
xor
out
jle
notb
movnti
jbe
xchg
fwait
xor
pop
push
les
shrl
repz
cmpsl
xchg
sbb
xchg
ja
push
xor
in
xor
jae
cmp
and
mov
sub
dec
mov
sbb
push
sti
rolb
lahf
and
iret
xchg
xchg
popa
les
fstps
in
cmp
jnp
adc
add
push
out
addl
das
pop
fimuls
inc
mov
in
adc
xchg
dec
jge
dec
mov
out
push
jb
loope,pt
push
out
xchg
sbb
cmp
lea
and
sbb
popa
mov
jbe
mov
mov
and
rolb
into
or
lret
and
clc
sbb
lea
sbb
push
outsb
push
xor
int3
xchg
pop
rorl
aaa
sub
fs
xchg
pop
pop
cld
loop
iret
int
out
sahf
dec
mov
cs
cltd
mov
cs
and
xor
xor
daa
nop
sbb
int
pop
xchg
stc
test
dec
adc
push
rolb
icebp
inc
test
or
gs
and
fwait
push
pop
in
mov
add
jne
cmpsl
or
pusha
add
cmpsb
xchg
sbb
mov
mov
mov
je
dec
dec
enter
push
mov
jg
movsl
aam
cmp
xor
sbb
outsb
sarl
adc
mov
sbb
fsubr
popf
les
fsubrs
lret
dec
sbb
cmp
cld
nop
push
sti
pop
out
push
imull
roll
sbb
dec
jl
inc
lds
dec
sub
or
add
in
lahf
adc
add
fwait
jle
scas
xlat
sub
jns
pushf
divb
lods
fcomps
rcrl
and
jns
pop
fpatan
inc
pop
inc
sahf
stos
mov
dec
inc
mov
sti
das
test
pop
mov
gs
push
daa
ret
in
sub
loop
pop
mov
inc
inc
lret
and
pop
mov
ret
cmp
sbb
dec
mov
push
adc
cli
mov
inc
pop
dec
and
push
and
push
std
push
cltd
pop
push
pop
fisubrl
pop
sbb
xor
jbe
push
icebp
shll
out
insb
sbb
in
lds
adc
cltd
test
xlat
inc
xor
inc
cli
adc
pop
call
push
rorl
inc
roll
sbb
lret
rcrl
ds
dec
mov
imul
ret
mov
sub
or
pop
mov
insl
test
lds
and
mov
loop
xchg
cwtl
into
pop
xor
andb
int3
push
leave
xor
data16
or
je
jo
add
lahf
out
add
dec
mov
test
xor
mov
inc
fs
aaa
sub
xchg
data16
mov
jnp
iret
add
sub
cld
dec
pop
repnz
pop
rdtsc
mov
inc
mov
inc
inc
inc
std
mov
out
sbb
dec
out
xchg
out
mov
ja
jo
dec
gs
push
jp
push
adc
shlb
cmp
mov
clc
mov
pop
or
mov
pop
pop
rcrl
test
fstl
xor
add
xchg
mov
push
mov
xor
mov
in
mov
xor
in
out
or
adc
sti
mov
data16
push
lods
test
jbe
jmp
fstps
lcall
adc
pop
cli
xor
pop
out
jae
or
dec
in
pop
push
mov
mov
or
movsl
cmc
fs
push
call
jb
test
mov
inc
out
mov
ret
test
scas
frstor
nop
out
add
loopne
jne
ror
pop
mov
inc
mov
sub
mov
pop
enter
test
sbb
sub
test
mov
mov
scas
sti
push
jns
lret
icebp
add
fwait
call
inc
test
insb
cmpl
xorb
cmc
mov
dec
call
cltd
cmp
hlt
and
and
std
jle
insl
adc
mov
mov
fisttpl
sbbl
jnp
test
xlat
call
dec
jmp
popa
insb
ds
es
and
or
jne
jbe
adc
aam
jge
mov
dec
ds
and
xchg
push
xchg
rorb
dec
popf
cmpsb
mov
pusha
sub
mov
cmp
js
mov
dec
pop
cmc
int3
rol
pop
iret
push
or
xchg
jg
lahf
sbb
sahf
jo
in
xchg
ret
cmp
adc
loop
sub
mov
adc
mov
scas
mov
cltd
ret
scas
push
cmp
push
push
cmpsb
scas
fs
xchg
xor
in
mov
cmpsb
and
scas
xchg
xor
mul
add
stos
cld
or
lods
mov
or
jmp
test
cmp
es
insl
test
fisubrl
and
fistpll
and
lahf
sbb
add
outsl
loope
inc
into
addb
rcll
je
mov
inc
adc
lcall
or
cltd
mov
or
js
jecxz
mov
hlt
and
scas
pop
enter
sbb
jnp
js
mov
ds
in
cmp
cmp
push
in
xchg
scas
xchg
jmp
pop
scas
push
movsb
push
push
mov
fcomi
cld
push
mov
mov
xor
dec
test
mov
pop
jnp
sbb
jno
insl
leave
cmp
iret
das
adc
mov
pcmpgtd
icebp
lods
cmp
sbb
and
movsb
push
stc
pop
jo
and
js
data16
fisttpll
std
les
xor
aas
out
push
aas
popa
inc
mov
push
dec
adc
mov
pop
das
insb
js
rep
jp
sub
and
aam
decb
ja
pop
push
ret
mul
inc
inc
repz
mov
and
das
or
jb
aam
dec
sti
add
push
cltd
lds
push
jno
orps
aaa
xor
rolb
jae
faddl
dec
arpl
dec
jno
pop
loopne
repnz
xchg
call
lock
icebp
cmp
jo
cmp
xchg
inc
out
inc
mov
sbb
in
test
jmp
xchg
inc
push
jg
sarl
arpl
lcall
push
iret
adcl
lret
out
movsl
xor
scas
xchg
xor
fdiv
adcb
data16
mov
test
adc
mov
sub
xor
iret
aad
inc
enter
pushf
clc
push
cmpb
mov
stc
push
mov
call
out
push
add
lds
push
dec
inc
and
mov
jb
mov
mov
fmuls
cld
stc
push
jns
cmp
lahf
cltd
loopne
jae
pop
mov
xchg
repz
cmc
push
lock
mov
popf
rol
xchg
push
lea
out
fisttps
cs
outsb
push
sbb
ljmp
enter
push
aaa
push
mov
movsb
pop
out
sub
xchg
subb
mov
mov
mov
ljmp
stc
mov
adc
shlb
fwait
mov
cmp
jo
ljmp
jecxz
arpl
gs
inc
cmpsl
inc
ret
adc
pop
jne
test
cmc
lods
sub
movsl
out
lds
stc
mov
adc
fldl
test
cwtl
and
adc
jo
fs
jmp
sbb
lds
cmp
sub
mov
xorl
pop
inc
and
int
xlat
iret
pop
or
sub
aas
das
or
sbb
fadds
invd
call
cmp
dec
jno
insl
mov
pop
add
push
xor
or
push
push
sub
cmp
cli
sbbb
in
inc
aam
inc
mov
jmp
push
movsb
pop
pop
outsl
clc
mov
scas
stc
leave
dec
cmc
lock
fcomps
imul
aam
in
adc
mov
cmp
mov
xor
into
loope
add
rep
mov
out
imul
ljmp
test
xlat
push
inc
adcb
push
es
loopne
and
inc
jo
cmp
mov
lods
mov
mov
cmp
repz
mov
push
pop
push
jbe
in
aam
subb
in
fists
dec
daa
pop
jo
xchg
sub
cwtl
vmread
test
cli
loop
sarl
clc
jg
pusha
dec
ret
fwait
sub
cmp
xlat
ret
cmc
leave
mov
ds
mov
jbe
fwait
jl
xlat
cwtl
ja
push
repz
xchg
dec
lahf
push
xor
inc
jbe
fsubrp
data16
mov
test
shl
cmp
inc
dec
cld
outsb
daa
popa
fnstsw
sub
mov
sub
test
les
add
lea
mov
lods
or
mov
jb
jbe
lock
add
xlat
bound
jbe
int
sub
xchg
lret
and
mov
inc
xor
imul
mov
add
pop
shlb
push
enter
sbb
mov
pop
ret
js
fsubl
loopne
mov
insb
icebp
mov
cmp
stc
ds
push
stos
adc
pop
stos
dec
fdivr
aas
adc
push
mov
push
cmc
cltd
or
ljmp
mov
test
sti
inc
adc
ljmp
mov
add
lcall
fisttps
dec
mov
movsl
mov
fidivl
enter
jg
sbb
pop
add
icebp
sbb
mov
pop
jbe
xchg
aad
fwait
ret
les
outsl
dec
sahf
fistpll
icebp
or
sub
repnz
add
add
mov
outsl
and
lcall
test
cmpsl
or
sti
pop
add
loop
or
std
std
jne
cmpsb
in
push
push
in
pop
jno
inc
fwait
push
rclb
mov
mov
xchg
lock
gs
jne
mov
rcrb
cmpsb
xchg
add
daa
xlat
lods
and
mov
mov
sbb
push
jle
dec
mov
adc
lcall
xor
xchg
pop
loopne
mov
add
outsl
fsubrp
mull
and
cld
and
das
push
in
cmpsl
jmp
cmp
ffreep
push
pop
fidivrl
loopne
adc
out
jae
out
fdivrp
loop
cmpsl
rclb
ficoml
or
out
test
and
sbb
int
xchg
inc
ljmp
ljmp
mov
ljmp
pushf
mov
arpl
les
xchg
mov
insb
sub
sbb
imul
xor
or
rcl
add
lret
fmull
aaa
mulps
js
push
mov
mov
ss
inc
enter
pop
mov
inc
stos
jns
shlb
sub
xchg
aam
push
and
push
cltd
ja
dec
push
cmpsb
mov
dec
or
push
mov
test
pop
push
sub
dec
lahf
fildll
stos
and
inc
scas
pop
cmp
xchg
jecxz
adc
cmpsb
jmp
dec
enter
cmp
xor
adc
les
sub
pop
add
jo
push
sbb
daa
ds
sub
fs
idivl
enter
notl
cmp
lds
mov
and
cli
push
xchg
cmp
test
inc
mov
decl
push
test
ret
int3
inc
insl
dec
xchg
adc
xchg
outsb
in
cli
aad
ljmp
icebp
imul
add
mov
inc
pusha
push
xchg
ficoml
xor
push
lods
fbld
test
and
jns
and
cmp
jae
xchg
outsb
mov
sti
jg
out
fdivp
cmp
jmp
add
adc
add
jo
sub
sub
cmpsb
push
int3
fcmovnb
jae
aad
mov
jno
mov
mov
cmpsb
dec
or
dec
jl
fs
scas
mov
push
push
pop
leave
inc
or
ss
addb
xchg
push
dec
pop
ja
adc
sbb
jb,pn
push
ret
pop
inc
xchg
out
mov
out
lcall
inc
pusha
rcll
in
scas
dec
add
repz
mov
dec
rol
pop
int
dec
in
push
into
int3
mov
lcall
mov
jl
pop
gs
push
jne
dec
shrb
mov
cmc
or
sub
in
push
lods
mov
shrb
outsb
fs
sub
fs
mov
mov
mov
lcall
mov
mov
or
adc
push
inc
fnstenv
jmp
xor
jecxz
jmp
sub
mov
or
imul
inc
and
lods
jae
push
mov
pop
ds
sub
aaa
imul
jp
or
and
mov
cs
insl
lds
mov
into
cmpsl
dec
inc
in
repnz
cmp
idivb
push
lods
cltd
push
call
inc
ficomps
rclb
ja
inc
and
repz
mov
leave
test
or
mov
insl
adc
pop
mov
mov
arpl
jg
outsb
jo
sub
xchg
xchg
dec
in
add
jecxz
ret
in
sbb
inc
loope
dec
mov
test
repnz
push
jl
je
inc
inc
pop
xor
je
repnz
mov
fdivs
mov
jg
inc
cltd
sub
imul
test
sahf
int
lret
ljmp
out
xchg
movsb
or
inc
mov
into
and
xchg
out
rcll
fcomi
mov
mov
popf
test
movsb
mov
sub
inc
sarl
cltd
dec
xchg
test
jmp
dec
jne
push
lods
mov
aam
sbb
scas
xchg
jae
lods
scas
ja
test
insl
mov
popa
inc
jns
cmp
jmp
sbb
push
jnp
imul
inc
sbb
mov
xor
in
and
rcrb
mov
xor
mov
in
jmp
sbb
pop
pop
adc
jns
stos
cmc
lahf
xchg
dec
or
and
ret
add
loop
div
jle
mov
and
ja
fwait
repnz
test
fisttps
lods
cs
or
mov
ja
lock
lods
add
mov
add
out
push
push
dec
stc
lcall
add
mov
pop
test
jbe
push
outsl
xchg
mov
dec
je
inc
or
jb
bnd
mov
mov
push
test
mulb
fimull
fimull
fisttpl
fsubrl
ja
cwtl
mov
bound
inc
mov
mov
insl
nop
jno
mov
add
sahf
pop
or
stos
insl
test
push
lret
out
mov
xlat
and
xchg
ja
or
add
fs
imul
cli
mull
es
jge
aas
lret
mov
adc
jbe
cmp
fidivs
mov
mov
loope
lods
mov
popl
xor
in
fdiv
cli
fdivp
adc
and
filds
icebp
sub
fdivl
in
xchg
test
cmpsl
mov
push
fwait
xor
test
outsl
into
sub
mov
inc
mov
jns
push
cmp
cmc
cmp
cmp
add
push
arpl
cmp
adc
iret
daa
inc
adc
mov
adc
lock
outsl
jo
mov
pop
addl
sbb
data16
fistpll
shr
test
sub
ljmp
mov
aad
mov
mov
test
cmp
int3
shrl
mov
dec
cli
xchg
clc
xlat
xchg
mov
dec
jbe
test
mov
cltd
or
enter
sbb
cmp
outsl
repnz
mov
test
call
sub
je
jmp
and
stos
inc
das
sub
cld
cmp
nop
xlat
test
or
inc
cmp
lods
inc
test
jns
loop
mov
pop
arpl
mov
and
setns
out
imul
out
je
push
enter
out
xorb
xchg
sub
cmovne
xchg
sbb
lret
repnz
pop
int
or
cmp
cmpsl
jnp
xchg
mov
push
arpl
mov
push
aaa
scas
add
negl
aaa
aad
test
in
xchg
lock
xor
ja
or
push
pusha
pop
mov
mov
fisubrl
rorl
nop
mov
and
daa
mov
mov
adc
cmp
jl
scas
xchg
ss
call
pop
inc
movb
dec
fadd
scas
sbb
mov
fs
xor
fdiv
inc
inc
and
xchg
mov
in
push
icebp
add
mov
inc
adc
mov
loopne
fisttpl
and
sbb
mov
les
js
sub
fisubl
rclb
xchg
dec
dec
in
mov
jecxz
stos
std
adc
cmpsb
daa
sub
adcl
ljmp
pushf
ss
sub
xchg
ljmp
out
jns
fidivs
jmp
adc
js
xor
lret
in
insb
mov
lea
cmp
push
clc
xorb
mov
mov
lods
ja
xchg
sbb
add
mov
jl
icebp
ret
mov
gs
stc
inc
dec
roll
xchg
cmp
call
add
lret
inc
in
xor
lock
idivb
dec
push
and
pop
cmp
in
jns
rorb
jo
sub
mov
cmp
push
lret
jecxz
movsl
push
dec
loopne
sub
xchg
mov
rep
adc
pushf
arpl
lds
dec
pop
xchg
stos
xor
mov
nop
jbe
and
push
mov
test
xchg
nop
mov
insb
mov
cli
mov
fsub
out
adc
mov
pop
mov
loopne
and
lret
outsl
lock
mov
mov
shlb
mov
add
mov
xchg
out
inc
fdivp
in
daa
pop
rcll
ss
in
mov
movsb
fists
neg
jmp
xor
loopne
cltd
cmp
xor
adc
adcb
sub
xor
rcll
flds
fbld
je
int3
add
lods
push
xor
out
fmull
rcl
cmp
loop
push
mov
ja
mov
push
insb
loop
push
inc
xor
das
cmp
mov
jecxz
andb
lcall
xchg
pop
dec
mov
or
mov
fsubrs
gs
pop
es
mov
shll
mov
mov
cmp
aam
in
outsb
xor
loope
mov
xchg
cld
cmpsl
mov
int3
testb
cmp
int
movsb
sbb
pop
mov
je
sahf
rcr
and
and
test
mov
pusha
into
adc
cmp
fs
jo
lods
cmp
pusha
dec
cwtl
mov
sahf
inc
into
shrb
jno
ret
test
sbb
sub
inc
enter
push
cmp
dec
into
mov
bound
roll
cmovnp
push
jno
ja
sarl
fsts
lods
sahf
mov
jp
lret
or
iret
inc
inc
arpl
lods
mov
decl
cmp
dec
or
cs
jp
int3
lods
outsl
or
sbb
and
outsl
scas
pusha
push
xlat
aam
test
or
mov
sbb
orl
xlat
out
mov
or
mov
xchg
dec
fsub
arpl
sub
sbb
and
cli
xchg
dec
xchg
and
xchg
out
cltd
rcrb
aaa
jnp
sub
sub
gs
jle
mov
arpl
mov
xchg
stos
dec
insb
sub
or
adc
sub
mov
pop
in
js
sbb
mov
cmc
dec
sub
xchg
les
inc
sbb
pop
fstl
mov
add
in
stos
ret
bound
or
repz
andb
mov
iret
xor
ja
stc
sub
push
push
sub
or
push
mull
adc
cmpsl
popf
mov
outsb
push
mulb
lock
mov
add
cmp
sahf
cmpsl
mov
andb
jecxz
inc
dec
test
cmp
pusha
lret
jb
sar
jge
cwtl
out
cmpsl
pop
or
add
scas
cmp
inc
outsl
push
lret
mov
push
xchg
push
jg
adc
add
iret
data16
mov
push
and
das
sub
mov
mov
mov
push
cld
aaa
sbb
xlat
movhps
pushf
push
pop
xor
jo
inc
dec
mov
cmp
xchg
enter
cwtl
cmpsb
add
negl
jnp
pop
int3
xchg
cmp
sti
repz
jno
dec
cmpsl
addl
mov
jl
pop
out
mov
fdivrs
mov
std
popf
dec
cmp
cmpsl
std
inc
popa
and
sahf
leave
lods
cmp
pushf
xchg
jl
lret
mov
or
nop
lods
mov
mov
fdivs
adc
sub
clc
pop
inc
or
or
les
cmp
rorb
inc
je
or
insb
les
inc
daa
mov
pop
and
cs
push
adc
lret
fs
mov
xchg
add
jmp
dec
mov
pop
mov
sbb
xchg
arpl
mov
sbb
fisubl
mov
or
scas
sub
fsubp
adc
in
repz
sti
fisubs
push
or
add
adc
gs
loope
dec
bswap
xchg
lods
sbb
rcl
pop
outsb
push
movsl
mov
adc
cs
frstor
mov
mov
sahf
imul
lock
mov
mov
jo
je
mov
test
adc
pop
push
cld
int
push
insl
inc
or
mov
jo
and
mov
sbb
fcomps
push
pop
push
loopne
je
cmp
outsb
flds
icebp
mov
dec
std
sub
test
inc
jl
pop
fldt
iret
sub
xorl
mov
mul
and
jnp
jg
mov
mov
xchg
fildll
pop
and
mov
out
xchg
sarl
cmp
xor
or
fisttps
lods
xor
arpl
mov
cmp
fsubr
mov
sahf
cmpl
out
mov
xor
push
gs
dec
xchg
cs
clc
in
stc
mov
xchg
push
jge
dec
mov
pop
lret
cmp
idivb
mov
cmp
je
ljmp
add
add
and
in
xor
cmp
inc
lods
dec
xor
jmp
dec
sbb
cwtl
jno
cmp
push
or
push
into
js
in
sub
sub
mov
ljmp
mov
bound
sahf
xor
imul
cli
je
rorb
outsb
pop
adc
xor
icebp
add
add
aam
pop
cld
stc
call
xchg
jmp
pop
js
xchg
lock
sbb
iret
sub
out
test
pop
mov
or
cmp
sbb
test
mov
repnz
idivl
mov
out
sahf
xor
test
outsl
test
cs
and
xor
xor
sbb
in
push
inc
iret
popa
setns
jnp
pop
jmp
call
adc
sbb
adc
pop
mov
test
mov
push
jne
xor
cmc
push
xchg
xor
xor
cmp
adc
std
xor
ljmp
mov
adc
sbb
adc
mov
mov
das
sbb
aad
das
mov
cmp
fcmovne
and
or
frstor
enter
jbe
push
dec
jae
jo
lea
xor
push
mov
xor
push
mov
shll
ret
jne
jmp
mov
pop
cltd
pop
in
lret
inc
mov
jo
mov
jmp
pop
pop
std
mov
into
ds
sbbb
sbb
iret
std
das
mov
dec
sahf
faddl
xchg
mov
and
jbe
xor
shlb
xor
faddl
xor
adc
popa
cmovb
inc
cmpsb
lea
sub
fsts
roll
stc
mov
inc
push
cli
leave
mov
xor
inc
xor
add
mov
fsubr
fdivrs
sbb
mov
inc
lods
cmp
mov
ret
pushf
pop
cmp
mov
dec
pop
jne
pop
mov
xchg
incl
xchg
cs
inc
jo
push
xchg
sbb
inc
jb
push
stos
gs
subl
lods
incb
sub
popf
add
cmp
movsb
in
out
outsb
dec
and
sti
ficompl
sub
add
dec
add
aaa
push
add
cmp
je
pop
cmp
cli
mov
jns
xchg
jge
sti
mov
xchg
lahf
cmpsb
add
jl
push
mov
jecxz
scas
jo
les
cwtl
and
lret
lret
cltd
sti
call
mov
test
cmp
mov
push
pop
stos
out
pop
repz
jno
or
xor
movsb
scas
cmp
enter
adc
lret
add
ljmp
sbb
stos
mov
xchg
mov
inc
scas
lods
lcall
and
add
dec
inc
aaa
add
sahf
repz
shll
sub
sbb
push
or
shll
mov
push
mov
fisttpll
mov
or
push
lds
mov
cmp
jmp
jne
addr16
jmp
repz
cmp
cwtl
xorl
xlat
or
push
lods
jne
jle
lods
add
inc
aaa
mov
jl
imul
and
loopew
cmp
lcall
inc
inc
jno
inc
lcall
pop
or
flds
xchg
pop
hlt
repz
lds
cmpsl
bound
sub
or
push
les
int3
jle
mov
mov
int3
xchg
fisubrl
pusha
adc
mov
cld
xchg
add
lods
jge
dec
pop
icebp
lea
scas
push
adc
test
shrb
sub
clc
jle
sbb
lcall
xor
cli
repz
xor
sub
or
clc
mov
adc
xchg
pop
aaa
mov
jo
pop
xchg
mov
cmp
push
subl
dec
ljmp
mov
loop
cmpsl
mov
pop
ror
test
inc
push
and
and
mov
mov
je
mov
fists
lret
je
jmp
or
sbb
jo
push
out
dec
subb
andl
jle
popf
mov
jg
lds
sub
add
aad
mov
ror
movsb
mov
sbb
mov
dec
xor
dec
cltd
push
lods
stc
loop
dec
setb
xor
mov
ljmp
push
stos
pop
cmp
sbb
cmpl
jmp
fmul
sbb
fmul
aaa
sub
xchg
mov
jo
int3
not
dec
loope
aas
ds
cmp
test
jge
xor
inc
out
lea
mov
jbe
mov
out
cld
subb
add
push
mov
or
repnz
and
mov
dec
and
xor
cwtl
and
fistpll
aas
lock
lahf
lea
inc
ret
jnp
dec
add
mov
pop
pop
adc
and
testl
std
xor
ja
or
inc
inc
jp
into
js
cltd
mov
jo
mov
sub
dec
and
and
in
push
stc
adc
lods
adc
in
jle
les
clc
jl
push
xchg
push
loope
std
cmpb
lret
insb
mov
cmpsl
sub
dec
sub
outsb
push
sub
cmp
inc
push
cmp
and
ljmp
push
pop
sub
adc
addb
adc
or
jmp
dec
and
cltd
gs
cwtl
cmpsb
jge
in
sbb
popa
jne
mov
mov
popa
ja
xchg
fcoml
in
sub
shlb
inc
sub
mov
pusha
aam
xchg
arpl
call
popf
jno
push
cmp
sub
mov
lea
mov
pop
pushf
or
int3
xchg
ljmp
fidivs
insb
test
mov
cmp
jmp
sub
pushf
pop
les
and
imul
sbb
push
cmc
leave
jl
push
inc
popa
xlat
jo
repz
daa
lahf
mov
sti
int
scas
jle
sub
arpl
imul
xor
push
mov
jnp
fmull
or
dec
jns
out
cmpsb
sbb
cmpb
mov
cltd
sub
imulb
and
movsl
push
xchg
cld
lret
je
loope
loope
repz
dec
lahf
pop
and
xor
test
int3
imul
mov
pusha
sarl
or
jge
jb
pusha
sub
jg
test
jo
popa
mov
xchg
cmp
mov
inc
or
add
out
cmc
int
aam
adc
jns
jo
je
push
xchg
inc
int
mov
test
pusha
lods
enter
push
iret
dec
cld
or
fsubs
push
fidivrs
fmuls
add
sub
pop
xor
dec
xchg
jae
sub
cmp
nop
mov
mov
xchg
push
jg
fnstcw
mov
sbb
xor
int3
outsl
arpl
and
popf
xor
mov
mov
icebp
out
inc
pop
xor
xlat
popf
loopne
dec
or
pop
fcompl
dec
push
mov
das
repz
xchg
jae
mov
sti
xchg
je
cmp
iret
int
dec
shll
or
cmpsb
iret
pop
pop
cmp
div
fsubl
cmp
clc
mov
iret
cmpb
add
ljmp
sarl
add
out
negb
andb
and
adc
sbb
scas
fcompl
andb
or
mov
mov
mov
ja
addr16
add
daa
adc
pop
pop
cmc
mov
mov
pushf
insl
xchg
xor
mov
push
sub
or
mull
or
mov
dec
jl
mov
cmc
icebp
mov
test
jge
lret
sahf
adc
add
insb
rcrl
cmp
xchg
or
mov
xchg
mov
jp
mov
dec
imul
lret
fmuls
shlb
adc
out
jecxz
loope
cmp
fisttps
dec
sbbl
push
call
inc
gs
mov
sub
add
xchg
cmpsb
fcoms
arpl
jge
sub
push
nop
rcrl
or
popa
rcrb
dec
ret
mov
mov
adc
add
jecxz
loopne
in
out
imul
mov
ljmp
outsl
jp
adc
pushf
cmp
lret
xchg
pushf
dec
testl
and
jp
jle
repnz
or
cmpsb
inc
cmpsl
dec
xchg
call
pop
xchg
outsb
loop
mov
mov
jae
shlb
movsl
adc
loope
or
dec
xchg
popa
sub
and
into
push
das
jo
iret
shrl
fcoms
outsb
sbb
xor
cmp
or
jl
dec
mov
sub
cmp
jge
sub
jg
leave
shr
adc
imul
cmp
jne
daa
mov
sub
sti
pop
mov
test
out
ds
xlat
or
int
jno
mov
repz
cmp
jp
mov
dec
jne
stc
xchg
sbb
cmp
subl
hlt
xchg
popa
arpl
jo
cmp
mov
les
ss
stc
jmp
fistpl
das
aaa
pop
push
inc
push
sbb
mov
push
mov
mov
arpl
data16
pop
mov
push
mov
or
dec
imul
mov
ds
cld
inc
adc
jo
enter
imul
or
outsb
sbb
popf
jp
call
push
inc
ja
push
pop
add
add
sub
inc
add
lods
push
jb
loop
mov
mov
xor
adc
jecxz
jno
sub
pusha
xchg
push
adc
push
addl
pop
sbb
dec
dec
mov
gs
lea
mov
dec
cmp
inc
xchg
movsl
inc
shll
mov
and
jno
mov
pop
test
and
addb
sbb
add
ljmp
fnsave
or
mov
xor
scas
pushf
push
adc
mov
pop
adc
cmp
in
dec
jle
and
pushf
xchg
insb
pop
popf
std
sbb
dec
jo
add
ds
subl
jbe
xlat
sub
rcll
jno
ret
mov
rorb
xor
pushf
xchg
leave
mov
aad
jne
cmc
sub
negl
sub
arpl
dec
mov
rorb
mov
jnp
lods
int
icebp
mov
or
jnp
jo
stc
dec
add
js
inc
sbb
daa
jo
dec
push
mov
or
or
and
ds
cmp
rol
cmp
xchg
mov
jo
pop
xor
in
push
xchg
ss
add
rorb
dec
sbb
add
imul
je
adc
out
sbb
add
pop
xor
call
mov
lcall
fmuls
insl
xor
int3
fs
js
push
mov
mov
aas
adc
loope
rol
push
xorl
inc
jp
shl
mov
pop
sbb
test
sahf
std
mov
pop
cltd
or
jo
add
sbbb
cli
xlat
sub
idivb
movsb
push
mov
iret
mov
inc
mov
jle
cli
lock
jle
push
aas
lds
push
dec
push
in
nopl
pop
mov
pop
jmp
hlt
and
not
lock
es
nop
ret
xor
inc
sub
xadd
push
xor
in
in
jge
jbe
fiadds
es
xor
inc
mov
scas
jp
mov
xchg
or
push
out
jb
cmp
dec
xor
ds
sub
int3
scas
ret
orl
lds
jg
push
pop
mov
in
mov
and
pushf
ljmp
jl
jecxz
pusha
cmc
mov
lods
pop
xor
add
mov
int3
jg
sub
mov
sub
or
and
jmp
sbb
mov
fidivrl
lods
scas
sbb
lcall
pop
mov
push
mov
aas
insl
lahf
in
sbbl
in
in
lods
add
ret
adc
mov
lods
xor
cmp
dec
lret
outsb
pop
es
addr16
mov
sub
cmc
mov
paddq
arpl
loope
push
leave
test
divb
dec
push
in
insl
dec
and
mov
rcll
je
sbb
xor
out
scas
pop
mov
les
add
cmp
aaa
sbb
or
arpl
fistl
pop
cmp
sub
adc
sbb
xlat
sub
xchg
aaa
cmp
andb
mov
nop
push
fimull
dec
cs
push
arpl
lock
movb
into
dec
insb
pop
pop
add
xchg
idivb
push
sahf
inc
cmp
sbb
mov
sbb
shll
jmp
jmp
movsl
add
cmp
pop
xchg
sbb
push
mov
les
loopne
pushf
and
pusha
jge
iret
jge
push
enter
insl
add
adc
xchg
popf
mov
dec
cs
mov
cmpsb
and
and
inc
adc
clc
sti
imul
cltd
xchg
or
pop
mov
out
cwtl
repnz
scas
xor
adc
repnz
xchg
dec
mov
fistl
ret
push
testb
icebp
sar
es
mov
lock
inc
mov
pop
jge
in
adc
cmpb
inc
sti
and
adc
inc
daa
push
sub
out
xor
jmp
imul
sub
pop
xlat
cmp
adc
shll
sbb
xchg
shll
nop
xor
gs
popl
or
data16
mov
inc
mov
loopne
pop
adc
orb
cld
jmp
mov
cltd
mov
dec
fnstcw
adc
ret
mov
lret
jb
ljmp
push
pop
add
nop
out
jb
sub
into
sar
jb
cltd
xor
imul
repnz
push
sub
jmp
lea
mov
fs
shr
nop
cli
push
sub
xchg
xchg
jle
push
popa
push
add
jns
testl
insl
es
lds
std
xor
mov
ret
repnz
adc
into
repz
sbb
cmpsl
push
sahf
out
shlb
ffreep
test
mov
sbb
in
leave
cmpb
fcmovnb
lods
mov
xchg
into
push
rcrl
and
pop
push
ds
inc
mov
ret
fldenv
mov
mov
push
insb
inc
pop
sarb
inc
push
mov
inc
fistl
ret
mov
rorb
adc
rcr
dec
mov
push
sbb
push
mov
std
lcall
or
sbb
push
pop
mov
inc
jle
pop
cltd
mov
cmpb
sbb
pop
mov
cwtl
in
xor
movsl
out
daa
adc
inc
shll
adc
mov
or
aas
jnp
pop
jo
shll
sub
mov
fsubr
stc
bound
fisttpll
adc
push
cltd
sbb
push
stc
inc
inc
sbb
sbb
xchg
cmpsb
push
xor
dec
inc
jecxz
jp
mov
outsl
fst
pop
cmp
inc
dec
xor
cmc
push
inc
pop
fs
xchg
xlat
fistl
iret
jno
cmp
and
mov
jne
stos
rclb
pop
dec
pop
xor
jno
mov
pop
int3
fs
lea
adc
sub
mov
mov
ja
mull
scas
pop
out
adc
decl
sbbb
add
movsb
arpl
xlat
adc
adc
mov
shlb
inc
es
xchg
mov
aaa
mov
inc
jae
push
xchg
ret
in
add
or
loop
int3
js
mov
mov
mov
cmc
lds
fnstsw
xchg
or
mov
lahf
push
test
mov
cmpsb
out
add
jmp
mov
xor
in
sub
pop
xor
aaa
mov
xchg
aaa
pop
roll
mov
popa
pop
add
fisubl
mov
or
adc
into
movsl
jns
rolb
and
jmp
xchg
xchg
test
lret
push
popa
jbe
jns
adc
cwtl
push
adc
roll
in
ljmp
mov
pushf
add
mov
sub
mov
repz
lock
lcall
inc
sahf
fdivr
in
leave
xchg
insl
pop
push
push
inc
lods
insb
sub
call
pop
stos
adc
aad
mov
jo
or
out
push
sub
mov
sbb
mov
stos
lds
mov
cmp
sub
xchg
mov
pop
xchg
incl
mov
out
mov
pop
lcall
dec
cmp
sub
inc
mov
xchg
sub
xor
insb
adcl
mov
add
fs
mov
shrl
dec
subb
pop
test
les
add
sub
xor
jmp
mov
fnsave
sbb
loop
leave
sub
push
dec
pop
iret
pop
pop
push
daa
fmulp
jae
cli
cmpsl
pop
adc
lret
inc
jbe
insb
mov
cmp
or
dec
popa
dec
mov
nop
pop
jno
jl
outsb
sbb
xchg
xchg
inc
outsl
xchg
cmp
cltd
add
sbb
adc
clc
lods
cltd
add
int
fdivl
pop
mov
cmp
push
outsb
cmp
xchg
push
jne
dec
add
adc
xor
aas
adc
push
fcoms
pop
pusha
sub
and
cmp
iret
mov
and
repz
jns
enter
jge
in
and
scas
imul
rorl
cmp
cs
sbb
imul
repz
xor
les
icebp
shll
js
inc
push
aam
test
add
jp
popa
insl
popa
cli
mov
dec
sbb
outsl
repz
inc
hlt
in
or
fidivrs
push
pop
pop
shll
stos
orb
test
fld
lahf
and
inc
inc
cltd
mov
insb
jno
lcall
pop
sub
mov
outsb
push
cmc
inc
add
mov
scas
xor
pop
in
pop
xchg
fidivs
pop
jge
shll
je
scas
adc
dec
out
mov
sub
dec
daa
pop
sub
loop
lea
ffree
fildll
inc
and
daa
jae
cmc
leave
cmp
dec
cs
jp
xchg
mov
cli
fwait
inc
mov
cwtl
and
cmpsl
sub
hlt
movsb
inc
mov
push
sbb
xor
std
sti
lret
rclb
add
mov
test
mov
xchg
lds
sbb
add
bound
sbb
sbb
xchg
cli
lcall
inc
inc
lods
mov
lret
or
add
test
mov
pop
cwtl
mov
stos
gs
mov
inc
sub
scas
out
jmp
mov
mov
xchg
popf
push
lret
bound
shll
outsl
push
or
mov
pop
xchg
jns
push
and
sub
adc
jno
mov
mov
andb
inc
mov
xchg
xor
mov
push
filds
push
data16
subb
ja
push
ss
cmc
bound
pop
decb
cwtl
push
sub
pushf
jne
xchg
push
dec
sbb
or
jmp
lret
pop
mov
jp
sub
add
jg
test
stos
scas
sub
pop
movsl
pop
mov
push
inc
loopne
adc
gs
ja
test
enter
fsubl
ds
test
outsb
dec
stos
ljmp
cltd
jbe
mov
cltd
inc
xchg
in
cltd
mov
cmp
jg
aam
jg
out
and
jge
jle
sub
xor
mov
pop
jbe
faddl
mov
fsubp
ret
pop
lods
xchg
imul
sub
sbb
pop
enter
ds
pop
inc
and
adc
movsl
push
movsl
in
das
push
addr16
ret
xlat
dec
pop
sub
jo
fwait
and
icebp
pop
or
xorps
loope
mov
cld
int
mov
cmpsb
mov
cmpsl
or
adc
ljmp
popf
add
fucom
faddl
sub
aaa
sbb
xor
xor
loope
aas
es
dec
lea
fmul
iret
or
repz
add
xchg
inc
lock
mov
setg
iret
and
jmp
outsb
sbb
jecxz
jge
cmp
lcall
inc
xor
sub
addr16
out
pop
push
addr16
pop
lret
pop
mov
jns
testl
jecxz
mov
adc
adc
leave
or
loop
orl
add
icebp
and
xor
mov
dec
push
mov
and
push
pop
pop
addr16
sub
cmp
push
jo
das
test
xorb
pop
adc
ss
mov
inc
xorb
jle
lds
out
jb
pop
cwtl
mov
pop
scas
std
jne
add
mov
not
adc
push
cld
movsb
mov
inc
fcoml
mov
in
out
cmc
insb
lret
sbb
xor
pusha
jl
stos
arpl
pop
mov
pusha
fs
leave
lock
add
loopne
rorb
cmp
dec
sbb
mov
in
inc
inc
or
rorb
data16
stos
and
addl
aam
lods
sbb
mov
icebp
or
aad
repnz
iret
orl
jbe
add
jl
xchg
in
neg
outsl
outsb
pop
mov
out
test
sar
aas
xor
mov
push
cmpsb
jl,pn
jbe
push
dec
mov
out
mov
add
rorl
arpl
mov
icebp
orb
sbb
push
imul
mov
adc
lret
ds
adc
xchg
or
testb
cmp
aad
fildll
inc
rol
outsl
cmp
xor
pop
add
insl
or
push
fisttpll
cmp
out
cmp
cmpsb
inc
sbb
sarl
add
jecxz
mov
xchg
xchg
movzwl
shrb
fiaddl
test
int
fisubrl
popf
lahf
fisubl
les
dec
das
call
sti
das
xchg
mov
inc
fcoml
stc
push
sbb
cs
daa
lods
lea
in
jmp
in
inc
push
aam
std
push
pcmpeqd
push
es
and
andb
aas
pop
dec
mov
mov
inc
jecxz
dec
idivb
pop
mov
bts
lcall
sti
xor
test
imul
fimuls
out
in
mov
stos
insb
clc
iret
fstpl
iret
push
sar
pop
pop
cmp
inc
sarl
cld
jge
test
and
pop
in
es
int
jle
out
inc
push
icebp
cld
sbb
xor
cmp
rcrl
in
test
xchg
sets
int
mov
lcall
add
addl
cmp
mov
mov
cmp
adc
insb
jno
dec
cmp
out
popf
xchg
push
jge
add
sub
xchg
vpsubw
add
mov
sbb
std
jecxz
xchg
push
jne
les
mov
jae
in
cmpsl
adc
ja
inc
pop
test
aad
push
xchg
loop
mov
xor
jno
clc
push
ret
or
push
outsl
lods
lcall
jle
push
jbe
loop
cmpsl
xor
jecxz
and
or
mov
sub
into
call
imul
stos
add
sub
pusha
lcall
aas
mov
dec
lcall
adc
adc
and
sahf
mov
jg
popf
mov
adc
les
nop
push
xor
jmp
sub
push
insb
das
and
lods
sbb
popf
fs
mov
lahf
sbb
or
push
xor
cmp
ror
out
mov
xor
movsl
repnz
insb
jmp
cmpsl
pop
mov
int3
mov
push
iret
bound
ljmp
mov
and
ds
push
std
imul
adc
sbb
push
std
aad
lahf
lods
rol
xorl
cmp
bound
push
or
adc
mov
out
jbe
add
sub
adc
movsb
addb
jns
lods
je
cltd
adc
hlt
lret
fs
repnz
jle
xor
fidivs
jge
out
repnz
jmp
in
sbb
and
ret
and
int3
enter
je
or
popa
mov
test
xor
jne
sub
pop
jne
mov
cli
mov
mov
adc
stos
dec
js
std
outsb
ficoms
pop
jp
xor
push
mov
inc
inc
jb
enter
mov
aam
inc
push
xor
pop
mov
xlat
lds
jae
xchg
mov
rcrb
xorb
aam
push
dec
or
cmpsb
and
mov
cli
push
cmp
addb
mov
lds
mov
pop
mov
inc
pop
jg
mov
test
mov
add
sub
stos
sub
add
pop
push
xchg
loop
ja
dec
jmp
dec
cmp
insl
mov
jns
xchg
push
rcrb
dec
fisubrl
pop
mov
rcll
sbb
nop
push
rcr
xchg
sbb
cmc
test
pop
bound
mov
inc
sbb
in
out
jnp
lea
aaa
ja
xchg
dec
xchg
daa
nop
adc
mov
aam
sub
xor
sbb
jge
pushf
cmpsl
and
ret
movl
push
ja
mov
mov
inc
lea
loopne
cs
mov
jle
sarb
fs
ss
jo
mov
out
jno
cmp
xlat
arpl
movb
cmpsl
push
daa
push
and
pop
std
out
adc
sub
cmpsl
or
cmp
jl
or
mov
push
lock
sbb
mov
int
mov
mov
fbstp
test
fs
push
not
push
repz
stc
inc
cmp
andl
mov
test
lret
daa
shlb
fwait
adc
pop
xor
mov
pop
out
pop
jecxz
push
mov
xor
jmp
and
orb
iret
mov
pop
hlt
mov
cmp
daa
xchg
repnz
mov
gs
jp
iret
and
shrb
idivb
test
sbb
add
lock
inc
imul
ljmp
shl
mov
repz
and
pop
repnz
mov
fnsave
cwtl
lds
lea
clc
enter
nop
jl
adc
sub
pop
shlb
and
sub
lods
je
out
fs
mov
jmp
pop
sbb
pop
mov
nop
xchg
sbb
movlhps
lret
std
mov
neg
iret
pop
lods
cmp
push
aam
fistl
inc
sbb
mov
adc
mov
aaa
push
pop
xchg
mov
dec
orb
scas
sbb
xor
jmp
sbb
pop
ret
inc
psadbw
push
lds
xor
mov
mov
fwait
js
jle
stc
jno
icebp
push
xchg
pop
cmp
jae
push
mov
dec
sbb
daa
setne
inc
or
cmc
mov
sbb
outsl
pop
add
inc
adc
inc
xor
xorl
shlb
leave
mov
lret
add
mov
ljmp
push
sub
sub
loopne
or
mov
cmp
cltd
mov
dec
hlt
cli
scas
cli
pop
xor
bound
jl
adc
lods
lahf
inc
add
test
jge
roll
dec
lcall
add
fisubrl
dec
sbb
mov
jg
xor
sbb
cmpsb
idivb
adc
mov
cs
push
jno
andl
jnp
pushf
xchg
inc
fcomps
jae
inc
pop
jb
fdivs
sti
jb
pop
dec
fildll
scas
ret
out
mov
sub
mov
sub
add
jno
sub
dec
adc
and
sub
repnz
fstpl
fisttps
sub
clc
or
add
xor
or
lcall
mov
movmskps
mov
xchg
xor
imul
jmp
pop
lods
mov
loopne
lret
aas
and
add
sahf
push
mov
loope
enter
lret
mov
jno
inc
js
loope
push
addl
sbb
test
stos
movsl
mov
imul
add
outsl
mov
push
push
jae
popf
cwtl
call
lahf
rolb
mov
faddl
sub
data16
ljmp
js
inc
dec
push
fnsave
push
repz
ja
into
fadd
jle
xchg
les
fs
mov
inc
or
shlb
pop
xor
sbb
aam
inc
les
imul
aas
push
mov
xor
adc
sti
dec
clc
and
xor
and
xchg
imul
cmp
sbb
fidivl
mov
adc
cli
aad
cmp
mov
cmpsb
lods
fsubs
or
mov
push
mov
xchg
add
inc
cmp
push
addb
insb
cmp
adc
adc
dec
rcll
cs
insl
addr16
or
daa
pusha
adc
cmp
fisttps
push
xor
inc
out
mov
call
xor
dec
mov
out
xor
movl
cmp
sbb
dec
insl
pop
push
in
add
shlb
dec
paddq
sbb
leave
and
jo
sbb
shl
sbb
dec
lea
mov
shl
pop
sub
or
loopne
pop
int3
popl
mov
into
dec
test
daa
push
movsb
in
sarl
int
add
outsl
ss
push
ficomps
int3
push
xchg
jl
testl
stc
dec
addr16
lret
in
inc
sti
adc
or
mov
or
out
or
sti
sub
pop
scas
pushf
mov
jnp
ret
pop
add
dec
sbb
out
adc
icebp
mov
mov
jecxz
mov
nop
mov
sahf
or
ret
jbe
arpl
pop
jge
out
test
adc
sahf
xchg
cs
or
insb
cli
cmp
mov
adc
sub
aad
xlat
fisttps
mov
sar
sbb
inc
mov
rcrl
int3
sub
int3
inc
outsl
inc
mov
bound
or
test
dec
in
xor
imul
ret
cmp
mov
jle
add
dec
lcall
or
aad
adc
pop
xchg
pop
outsl
push
movsb
sbb
push
pushf
cmp
cmp
pop
jl
rcrb
cs
xor
and
fsubl
adc
or
mov
inc
popf
cmp
lahf
lahf
sbbl
mov
mov
push
dec
pusha
rorb
adc
dec
xlat
ret
fidivl
add
adc
or
dec
shll
mov
pusha
addr16
cmp
mov
cmp
push
fcom
push
out
icebp
jns
jbe
mov
int
xchg
dec
or
dec
sub
add
adc
mov
iret
out
inc
mov
mov
ja
std
repz
arpl
jge
ret
mov
int
and
adc
add
je
loop
inc
mov
push
loope
and
adc
pop
pop
aaa
outsl
aam
aaa
imul
jecxz
inc
out
xchg
imul
sub
pusha
loope
int3
mov
cmp
inc
test
push
push
cmp
pop
pusha
fstps
pop
sub
inc
sub
or
add
fwait
lods
cmp
sarb
addr16
sbb
popa
xchg
push
dec
cmp
aam
negl
jne
inc
xchg
cmp
repz
int
mov
outsb
push
daa
dec
lods
dec
xor
sub
int3
lods
mov
mov
push
dec
int3
test
stos
out
push
xchg
jb
xor
scas
adc
jbe
pop
fs
jns
push
mov
cld
packsswb
aaa
std
mov
subl
ljmp
mov
jne
push
mov
jns,pt
dec
repnz
lret
je
ss
fbld
mov
pop
out
out
daa
out
dec
xor
xchg
jge
xor
xor
fs
xchg
fstpl
movsb
add
mov
xor
popf
setle
inc
int3
pop
sahf
testl
lods
lods
enter
jecxz
sbb
and
xor
jnp
mov
mull
push
jp
ret
insl
mov
fdivrl
fisttps
sbb
movb
dec
sub
jecxz
add
arpl
jmp
or
xor
jo
jns
inc
xchg
outsl
dec
fxch
rorb
sub
fldl
xchg
ds
adc
inc
aam
add
pop
stc
out
push
jmp
mov
cmpsb
inc
mov
xchg
push
and
jg
xor
xchg
dec
add
mov
movsl
xlat
nop
test
sub
scas
mov
adc
cmc
bnd
mov
cmpsb
out
lret
into
mov
shr
into
sub
mov
sub
fcomps
mov
pop
sahf
rclb
pop
push
daa
push
fcmovnb
dec
insl
mov
sbb
test
mov
mov
pop
pop
fnstsw
pop
pushf
out
js
jno
iret
out
jmp
out
outsb
pop
inc
dec
mov
inc
outsl
add
cwtl
outsl
addr16
pop
movsb
dec
sbbl
ljmp
loop
add
out
leave
adc
push
xchg
inc
sub
aad
jp
inc
shlb
addr16
jb
andl
popa
aas
mov
shll
jne
and
scas
adc
adc
into
adcb
jecxz
jns
call
cltd
xchg
xchg
fistpl
lods
jge
mul
in
or
cs
xor
lcall
xchg
lds
push
cmp
xchg
test
cmpsl
pop
mov
jg
sub
fsub
sarb
xor
mov
cli
mov
int
lret
pop
dec
int
pushf
mov
imul
pop
push
in
jns
repz
mov
and
imul
test
outsb
xchg
push
repz
jb
mov
or
cltd
out
inc
sbb
cs
or
not
push
out
movsb
jbe
loope
lods
sub
shll
xchg
popf
repnz
pop
xchg
fsubs
sub
add
sbb
and
lcall
shl
cmp
jo
ret
cli
push
outsl
daa
data16
cmp
and
mov
mov
sbb
out
in
inc
push
gs
lret
sub
pushf
mov
dec
sbb
movsl
add
sub
inc
push
push
jecxz
push
or
mov
scas
add
lods
insb
mov
push
fs
dec
inc
es
fs
fistpl
jne
or
push
repz
mov
cwtl
and
and
adc
cwtl
sahf
les
repnz
push
push
fs
ror
cmc
cmp
sbb
fwait
ss
fwait
push
add
movsb
adc
testb
fdivs
sbb
xlat
leave
lods
mov
jnp
push
movb
rorl
fisubrs
adc
js
dec
pop
scas
mov
cmp
sbb
jb
icebp
outsb
test
mov
out
adc
cmp
outsb
dec
arpl
bswap
sub
pop
sbb
mov
scas
mov
out
mov
sbb
and
pop
or
cmp
xor
lock
sahf
stos
inc
or
xor
lods
jns
inc
cmp
pusha
ret
fcmove
ljmp
out
pop
mov
adc
imul
mov
in
daa
arpl
rcll
ljmp
test
sarl
aaa
ljmp
sub
andb
cmp
ret
leave
jno
addr16
adc
into
out
sbb
push
aam
and
adcb
loopne
add
mov
mov
dec
outsl
flds
psubusw
adc
add
das
bound
es
dec
push
adc
inc
in
lahf
and
sbb
repz
fucomip
mov
and
out
add
out
cmpb
pop
fldcw
mov
insl
les
scas
xchg
cmp
add
inc
xchg
mov
xor
mov
andb
jnp
ret
test
jnp
jbe
sbb
ret
cvtpi2ps
in
mov
pop
cltd
lea
cwtl
lret
dec
popf
shll
or
int3
stc
sbb
fstl
fisttps
cmp
lahf
popf
inc
sub
adc
mov
jno
fsubr
sub
scas
jae
add
cli
adc
dec
mov
cmc
cmpl
pmaxub
ret
xor
iret
or
stc
in
xchg
fimuls
mov
mov
clc
sti
pushf
loope
hlt
in
push
cld
mov
add
nop
sbb
mov
adc
and
sbb
je
mov
fistl
push
ja
cmp
out
ljmp
mov
add
xor
ret
outsb
push
subl
lahf
xor
inc
adc
scas
and
adc
imul
dec
mov
inc
cmp
mov
cmp
push
sbb
jno
push
gs
mov
push
push
pop
rcrl
or
adc
cs
inc
push
shlb
push
js
das
in
mov
repnz
repz
pop
or
mov
enter
shll
xchg
sbb
jecxz
sbb
sar
cmpsl
sub
mov
or
pop
or
xor
icebp
adc
rol
mov
adc
mov
adc
inc
jo
lret
or
sub
push
test
gs
lret
ljmp
aaa
lods
icebp
lock
cmp
fwait
mov
pop
aam
aam
or
push
ja
je
dec
popf
mov
sub
mov
repz
ja
add
cmp
nop
cmp
xchg
dec
push
dec
add
shlb
test
jg
fldenv
and
lods
jmp
sahf
dec
cltd
data16
lcall
mov
xchg
shlb
xchg
aaa
dec
sahf
aaa
mov
xchg
out
mov
ror
scas
lret
mov
int
xchg
mov
lea
xchg
pop
cmp
js
xor
xchg
and
sub
push
push
jmp
lcall
cwtl
lret
sub
int
push
lret
sub
test
pop
jp
and
or
adc
punpcklbw
cmpb
inc
jmp
test
out
jecxz
mov
or
addr16
mul
or
adc
int
out
repz
add
fmuls
mov
or
or
ja
lock
push
in
adc
push
jg
inc
cmc
cmp
push
xchg
movnti
mov
cmp
nop
inc
mov
mov
sbb
lods
in
mov
cld
rcll
jne
dec
not
push
inc
addb
fld
cmp
pop
es
ret
in
aas
in
push
arpl
mov
nop
sub
xchg
imul
sub
fisttpll
dec
xor
dec
pushf
cs
sub
cmp
cli
popf
movsl
mov
and
mov
outsb
nop
lahf
ret
mov
xor
mulb
lahf
or
scas
cmp
call
fisubrs
bound
das
dec
cmp
mov
push
pop
lret
cmpsb
lock
pushf
pop
jnp
std
dec
fnstcw
mov
andb
xchg
push
leave
scas
scas
xor
repz
add
ds
sbb
mov
test
int
ret
mov
jb
ret
rorb
cs
mov
rcl
arpl
inc
and
jecxz
inc
mov
jge
and
dec
repnz
xor
imul
sub
loopne
mov
lods
loope
imul
cmp
rep
test
inc
jle
loop
cwtl
inc
xor
rcr
addl
pop
sahf
add
adc
jae
push
xchg
icebp
test
clc
mov
pop
ljmp
sub
mov
pop
lods
into
loopne
dec
ljmp
cmpsb
bnd
lret
imulb
popf
je
pop
xchg
push
inc
jnp
xor
add
xor
or
popa
cltd
add
sbb
jecxz
rorb
sbbl
out
pushl
sbb
pop
roll
xor
mov
jmp
add
mov
getsec
inc
xchg
ficoml
movsb
pop
mov
enter
ss
xchg
mov
xorb
jne
inc
pop
stc
mov
and
and
push
push
daa
sub
fidivs
mov
mov
insl
or
andb
push
clc
js
frstor
cld
push
push
push
int3
pop
mov
push
dec
adc
ret
ret
enter
jns
cmp
out
js
xchg
int
hlt
xchg
xor
psubq
aas
aam
leave
jge
cmp
imul
out
xchg
mov
repz
xchg
pop
sbb
pop
xlat
leave
rol
sar
fcmovbe
aas
js
sub
fimull
push
mov
fwait
mov
mov
cs
pop
or
adc
les
or
pop
out
mov
push
andps
fwait
cmp
andb
mov
mov
scas
push
sbb
ds
loop
fistl
xor
or
test
lds
fdivrs
cld
fst
int3
fstpt
leave
push
aaa
and
adc
inc
pop
nop
push
lds
sbb
test
pop
movsl
mov
mov
lret
rolb
outsb
sub
sbb
lods
xchg
and
xchg
sahf
adc
shr
out
addr16
stc
addr16
jge
inc
jp
sbb
push
cwtl
int3
enter
inc
lea
sti
jmp
mov
out
bswap
jns
stc
leave
ret
jo
adc
xchg
or
lods
leave
adcl
add
push
cmp
hlt
fcmovb
push
pushl
fistps
xor
rolb
pop
aaa
adc
lods
add
cmpb
pop
xor
jo
jb
lods
in
notb
lret
dec
push
sbb
mov
dec
mov
cwtl
mov
jo
or
sub
hlt
push
icebp
inc
push
xor
scas
dec
push
and
das
loopne
int3
jbe
add
xlat
jge
dec
inc
loope
sbb
jl
and
daa
lds
es
mov
pop
out
jnp
jl
nop
imul
fidivrs
shll
fstl
sub
lock
or
mov
or
js
movsb
leave
add
das
in
js
add
test
test
or
arpl
pop
push
js
jmp
add
xor
in
xchg
movsb
and
cwtl
jae
fmulp
xchg
mov
incl
mov
lea
mov
mov
lea
or
das
pop
sahf
and
cmpsl
movsb
xchg
and
cld
pop
sub
sbb
outsb
jl
mov
cltd
fbld
std
dec
call
fdivs
ljmp
xor
xor
pop
nop
mov
mov
imul
outsb
ja
dec
adc
bound
adc
shl
pop
mov
xchg
add
scas
nop
cmp
arpl
pop
mov
into
dec
xchg
scas
cmp
and
lahf
sub
mov
in
inc
jle
jle
scas
xchg
xchg
xor
mov
inc
pop
push
lds
mov
stos
daa
inc
addl
testb
sub
stos
jle
je
dec
std
loopne
clc
outsl
scas
mov
lahf
movsl
mov
insl
mov
and
jns
adc
push
mov
inc
lods
outsl
sub
ja
int
imul
mov
inc
incl
sti
lock
push
inc
les
int
out
pop
pop
daa
ja
dec
jg
inc
fidivrl
fmull
pushf
es
xor
cld
enter
cmp
and
mov
inc
out
in
xchg
mov
xor
adc
fucom
cmpsb
push
test
aas
in
pop
rolb
lret
or
jg
xchg
imul
ja
add
fucomip
mov
outsb
ljmp
mov
xor
dec
mov
pop
mov
mov
fistpll
or
xchg
movsb
xchg
cmp
cmp
and
push
push
dec
mov
enter
sub
inc
xchg
fwait
xchg
mov
cld
shld
adc
sub
cmp
inc
loopne
ret
in
ja
sub
pusha
out
pop
inc
mov
add
adc
dec
mov
inc
inc
mov
xchg
nop
insl
insb
mov
imul
or
cwtl
in
arpl
mov
push
and
sbb
inc
push
push
push
or
push
sub
push
das
jo
push
sub
cmpsb
fdivrp
mov
add
ljmp
mov
repnz
out
faddl
mov
data16
dec
mov
jp
mov
fisubrs
pop
inc
in
cmp
imul
push
dec
push
clc
dec
in
ja
xor
fcmovbe
inc
adc
jl
out
jb
and
dec
adc
cmp
pop
or
fldt
sbb
push
jbe
inc
sub
fcompl
mov
push
ret
mov
test
and
bound
hlt
cltd
or
jae
pop
test
mov
leave
iret
inc
inc
add
push
stc
xchg
mov
jg
test
dec
jno
dec
popf
fdivl
repz
in
or
shlb
sbb
and
cmc
add
sbb
push
out
mul
rclb
idiv
icebp
dec
sub
shlb
pushf
mov
or
cmp
call
mov
or
mov
adc
jne
cmc
stos
andb
out
xor
adc
adc
mov
test
mov
in
cmpsb
imul
push
mov
inc
fcmovnb
je
push
and
pop
mov
inc
pushf
scas
mov
daa
daa
dec
out
mov
push
int3
mov
notl
cmp
add
xchg
andb
sar
out
mov
aas
pop
mov
jbe
xor
fimuls
stos
inc
sub
push
adc
icebp
cmc
loope
xchg
loope
jp
dec
rep
and
jmp
aaa
sbb
jo
inc
push
test
xor
fmuls
and
mov
fwait
aam
inc
fldenv
cmp
dec
jp
inc
push
ds
js
mov
mov
in
in
adc
pop
test
aaa
push
mov
and
pop
hlt
sbb
out
aad
mov
les
mov
sbbl
xlat
insb
outsb
fisubl
push
ja
test
int
pop
and
jle
sarl
cmpb
int
or
sbbb
test
ds
dec
mov
sub
pop
mov
jne
getsec
jp
xchg
lahf
sbb
push
shl
adc
sub
scas
mov
cltd
cli
or
inc
adc
repnz
sub
fidivl
inc
inc
adc
cmp
lret
adc
repz
jecxz
xor
test
or
and
imul
dec
jmp
add
jnp
gs
aas
gs
cmpsb
xor
sahf
pop
cwtl
pop
cld
int3
nop
std
aaa
in
push
xchg
sti
loope
fs
and
add
sbb
andb
cmp
pop
cltd
xchg
stc
aaa
sbb
sti
sarb
arpl
es
aaa
das
jns
clc
mov
push
pop
out
jno
call
pop
mov
lods
mov
stos
iret
adcl
sahf
arpl
mov
or
outsb
cmp
fs
mov
inc
cmp
shl
xor
jle
loopne
adc
inc
add
add
mov
outsl
pop
call
int
in
aaa
xor
mov
xlat
pop
pop
push
aaa
jmp
in
mov
pop
out
lahf
push
loop
int3
push
xor
repnz
or
add
push
in
xlat
out
xchg
scas
dec
push
cs
cmp
test
push
sub
jmp
rclb
test
pop
cmc
xchg
les
inc
or
inc
inc
adc
dec
or
rolb
xchg
clc
xor
xor
xchg
mov
pop
mov
and
aam
cltd
pop
mov
xor
lret
pop
gs
out
pushf
cld
pop
xchg
mov
iretw
jp
hlt
test
mov
jl
fwait
lods
push
add
ret
push
and
mov
cmc
aad
xor
push
jae
mov
aad
mov
inc
pusha
stos
fwait
incl
mov
push
jle
mov
pop
test
int3
es
fdivr
cmp
test
mov
mov
cmp
sete
xorl
push
push
sbb
out
and
cmp
pusha
cwtl
xor
leave
stos
or
jne
faddl
jp
test
aas
ret
ljmp
or
icebp
mov
cmp
mov
mov
leave
clc
clc
or
fwait
mov
or
into
hlt
cmpsl
ljmp
or
xor
xor
or
add
lcall
and
outsb
sub
out
push
jne
in
and
xor
mov
push
shrl
scas
fistps
popa
loopne
ljmp
rcrb
mov
leave
and
mov
les
jmp
cmp
stos
sub
fs
loop
or
sub
inc
pop
xchg
dec
jmp
push
stos
dec
leave
enter
out
lahf
fldenv
adc
test
nop
inc
ret
mov
out
or
xchg
xchg
add
sub
lods
and
mov
fbld
or
out
xor
and
shlb
pop
fsubp
push
shl
cmpsl
mov
push
jge
dec
rcrl
or
clc
int
imul
push
xchg
call
hlt
sub
dec
xchg
xor
inc
stos
and
int
jb
pusha
int
stos
out
out
mov
rcrl
push
lret
and
sub
xchg
jp
pop
call
in
inc
mov
ror
fxam
jae
rorl
cmovns
loope
popa
mov
xchg
inc
pusha
mov
mov
out
jne
out
pop
in
mov
outsl
shll
xor
jmp
stos
lea
in
sbb
add
add
in
subb
xor
call
rorb
ja
mov
divl
fstpt
pop
mov
inc
xchg
push
mov
lock
pop
out
jb
sbb
mov
sahf
jne
cmp
test
sub
out
pop
ficompl
les
adc
repz
dec
xchg
jmp
or
loop
pop
call
inc
cmp
or
lret
jae
mov
xchg
inc
fidivs
xchg
ret
pop
fcompl
mov
fisubrs
push
or
push
mov
shll
mov
in
jg
or
loopne
ss
gs
subl
cmpsb
lret
out
or
mov
mov
bnd
out
dec
dec
fmul
mov
or
es
mov
or
mov
mov
insb
nop
xor
dec
test
inc
inc
popa
adc
ds
movsl
pop
ret
xchg
mov
test
mov
push
xor
les
mov
sub
cwtl
push
fnstenv
in
push
pop
jl
test
mov
mov
mov
lahf
outsb
por
call
sub
enter
aam
pushw
scas
push
push
popa
push
mov
add
fcmovne
or
outsl
adc
adc
daa
push
jmp
xchg
jg
xchg
aad
mov
pop
jo
xor
inc
inc
inc
fbld
sub
stos
stos
fs
and
loop
mov
pop
sbb
mov
lock
sbb
lret
inc
xchg
inc
pushf
add
dec
aas
xchg
and
cmp
fistps
add
lret
lcall
aam
push
mov
filds
or
adc
test
addr16
lock
push
stos
cmpsl
mov
mov
leave
and
adc
outsl
pop
jmp
fimull
mov
hlt
imul
inc
and
out
dec
enter
cmp
aam
add
cmp
loop
xor
das
dec
mov
mov
sbb
push
scas
pushf
jb
sahf
nop
in
jge
outsb
dec
and
push
push
jno
push
daa
jbe
adc
mov
idivb
push
aas
push
adc
mov
dec
gs
mov
mov
sub
hlt
inc
jne
xchg
dec
push
jecxz
push
inc
ret
lret
cmp
addr16
dec
scas
sahf
fisubrl
dec
cmp
ret
cmp
jb
movl
pop
push
lods
jo
pushf
mov
push
sbb
mov
popl
cmp
xor
xor
jns
push
test
test
sub
jmp
scas
insb
pop
dec
out
popf
dec
dec
nop
fwait
adc
pop
add
outsb
xchg
mov
or
gs
lds
and
push
fnstsw
arpl
jne
push
or
repnz
mov
sbb
sub
xor
push
add
lea
fiadds
adc
fdivp
push
jae
jno
out
cmp
pop
in
insb
mov
jle
adc
sti
imul
and
jnp
notl
pusha
hlt
xor
mov
arpl
cmp
cld
aaa
mov
pop
and
and
push
lea
pop
sti
lods
push
sub
cmp
lds
xchg
jmp
sub
shlb
mov
pop
lds
fisubrs
adc
cmp
pop
jmp
lods
arpl
mov
cmp
pop
xchg
cltd
mov
dec
inc
cltd
add
clc
shrb
push
fdiv
mov
xor
je
cmp
adc
fwait
adc
insl
xchg
mov
loopne
dec
sub
nop
ret
mov
xchg
mov
movsb
stc
cmp
daa
int3
and
cs
xchg
sub
jmp
test
arpl
mov
pop
loopne
ret
adc
or
popa
ss
mov
push
js
dec
push
or
gs
pop
cltd
cmc
dec
nop
movsb
push
jae
ljmp
jb
insb
std
fisttpll
in
jb
pop
das
pop
or
fstps
xor
or
addl
xchg
push
push
shlb
xor
cwtl
sar
repz
bound
inc
lds
shlb
test
clc
and
push
icebp
xor
pop
aaa
es
mov
mov
sbb
mov
xor
test
jp
aas
cmpsb
pop
cs
out
lahf
mov
jp
lret
jne
sbb
aam
mov
xchg
adc
inc
pop
rolb
ss
sbb
iret
add
mov
xchg
xor
sbb
sbb
scas
mov
arpl
xchg
sub
decl
mov
xchg
loop
jp
adc
mov
pop
sub
adc
inc
mov
dec
shl
pop
ds
enter
pop
in
les
pusha
loop
or
dec
mov
daa
out
dec
imul
out
in
fnstenv
stos
inc
icebp
push
stos
test
add
imul
adc
inc
and
xchg
xor
pop
lcall
iret
out
das
lods
leave
jecxz
push
sbb
loopne
es
out
imul
loopne
cmp
push
mov
in
xor
push
nop
sbb
sar
mov
cli
pop
sbb
pop
clc
or
in
or
xchg
movsl
imul
rcll
inc
pop
lahf
push
icebp
xor
mov
mov
ja
add
cld
cwtl
xchg
pop
inc
mov
sub
divb
mov
out
jno
mov
or
xchg
loopne,pt
loop
fabs
jbe
mov
xor
mov
hlt
dec
sub
je
xchg
inc
loopne
into
ljmp
fsubrl
fnstcw
mov
xor
pushf
and
sbb
mov
cmp
jmp
adc
shll
hlt
in
mov
push
push
mov
xchg
inc
sbb
lds
pop
push
ret
push
scas
adcb
xchg
sbb
inc
jmp
add
fs
test
lahf
cld
mov
fnop
pop
and
ret
stos
les
pop
ss
inc
dec
and
into
dec
adc
loope
ret
or
inc
or
push
mov
jle
test
push
xchg
or
add
jmp
mov
out
fnsave
lods
mov
mov
sti
outsl
jnp
int3
cmc
test
rcl
xlat
out
jo
dec
push
insb
xor
push
hlt
nop
es
loope
lods
fucomp
sbb
add
push
push
inc
subl
shll
das
mov
mov
pop
xchg
repnz
sbb
xor
inc
fdivrl
jns
lock
icebp
mov
out
cltd
daa
roll
nop
jp
ret
xor
add
into
je
sub
xchg
mov
popf
pop
sbb
scas
mov
inc
jg
imul
jl
jmp
cmp
push
inc
out
mov
xchg
xor
cmp
pop
sbb
pop
sti
lea
test
stos
popf
add
fbld
add
dec
repnz
xchg
into
out
ds
push
mov
xchg
ret
outsb
or
inc
lods
jp
sbb
stos
xor
dec
xchg
test
shl
movsb
cmpsb
xor
mov
pop
lahf
dec
adc
mov
imul
out
inc
push
xchg
mov
test
popa
out
iret
sub
xlat
in
ret
or
inc
dec
sub
adc
fstp
sbbl
orb
inc
daa
dec
mov
lcall
sahf
repz
insl
shrl
xchg
or
bound
adc
mov
push
add
pop
test
push
data16
jmp
sub
fwait
jbe
jmp
mov
fsts
mov
sub
dec
add
push
insb
jno
mov
dec
sahf
jle
inc
or
dec
popa
iret
rcrb
mov
test
push
test
dec
bound
call
orl
ds
push
and
or
out
xor
bound
inc
dec
movsl
pop
sbb
add
add
dec
movsb
inc
iret
repz
mov
mov
mov
xor
rol
jmp
mov
icebp
icebp
cmp
lds
sbb
out
mov
fneni(8087
sub
lock
shr
mov
mov
or
cltd
lahf
int3
jns
outsl
daa
push
or
pop
dec
jg
mov
movsb
dec
jmp
sub
in
or
mov
xchg
pop
inc
loop
faddl
xor
add
and
xchg
popf
mov
cmp
push
or
scas
xchg
mov
xchg
push
ljmp
cmc
pop
test
add
cs
pop
pop
nop
loope
mov
pop
int3
and
dec
push
dec
dec
mov
pop
cmp
add
sbb
jg
mov
sub
aad
or
sub
scas
or
dec
scas
xor
arpl
adc
out
sub
mov
sub
add
aam
mov
sbb
fwait
sub
cmp
jmp
loopne
mov
xor
add
call
pop
aas
xlat
add
mov
sub
movsl
pop
aaa
sbb
mov
into
out
jns
jns
das
iret
inc
test
jecxz
or
pcmpgtw
mov
cmp
vpmacsdql
shlb
inc
push
xchg
aaa
jno
mov
loop
sarl
lock
ret
cmp
mull
and
pop
out
outsl
mov
pop
mov
lret
xchg
xor
or
out
jl
mov
xchg
sbb
aam
add
std
mov
sub
inc
jb
fidivrl
sub
scas
mov
mov
pop
add
mov
in
adcl
push
inc
rcrb
cmp
xor
xchg
insb
cli
inc
xchg
lock
in
fwait
xor
cmp
mov
bound
inc
test
add
cmp
cmp
daa
addr16
mov
xchg
xchg
std
dec
or
arpl
mov
stos
orb
xor
inc
sar
test
add
pop
mov
rcrb
loop
addr16
data16
testl
lret
movsl
outsb
negl
and
es
push
dec
call
movsb
inc
xor
ljmp
xchg
lods
mov
or
repz
inc
in
jo
cld
jne
test
mov
dec
xorb
adc
push
and
mov
xlat
pop
out
rorb
dec
cmp
es
jns
push
cltd
mov
jecxz
xor
dec
jne
or
imul
sbb
push
fucomi
outsb
push
cmp
fbld
pop
leave
sti
iret
stos
scas
outsb
aas
push
and
enter
inc
push
sbbb
mov
jmp
inc
jo
mov
std
add
xchg
test
ds
outsb
js
pop
pusha
call
insl
out
fs
stc
sub
rcrl
or
ret
imul
pop
stos
pop
mov
adc
mov
adc
jmp
adc
sub
sbb
mov
xchg
negb
or
popl
push
ror
inc
sub
sub
cmp
lods
mov
int
ret
pop
loop
pop
sbb
or
ds
adc
xor
xchg
mov
add
js
pop
xchg
xadd
push
mov
sub
adc
xlat
lds
mov
xor
pop
out
xchg
insl
mov
sub
mov
idivb
aam
xchg
dec
aaa
xchg
jb
setne
js
add
fcompp
mov
cmpsb
xor
and
push
xchg
icebp
imul
ffree
or
or
jb
xlat
jnp
ja
aam
push
dec
out
lret
popf
insl
mov
cmp
ss
jge
fs
mull
imul
lcall
cmpsb
fisubl
pop
pop
inc
xchg
fcmovne
out
lods
jbe
sub
fs
mov
mov
in
mov
pop
fwait
push
into
scas
mov
bound
leave
add
pop
cli
outsl
mov
xorl
sub
mov
fdivs
mov
addr16
inc
jl
int3
xchg
popf
add
ftst
stos
int3
lcall
into
push
push
insl
xchg
mov
bound
pop
ss
sub
lahf
mov
push
sub
dec
push
sub
clc
popa
jl
movsl
mov
fwait
dec
hlt
cwtl
push
cmp
push
addr16
ja
scas
lods
push
fsubs
cli
aas
ret
cmp
bound
out
imul
popa
cld
or
je
icebp
hlt
sub
pop
sub
bnd
aaa
mov
or
mov
lock
mov
fidivl
add
je
mov
sti
lods
andl
clc
mov
xor
int
adc
in
adc
mov
mov
cs
daa
ljmp
dec
cmp
fidivs
cmp
orl
shrl
jge
push
rcrl
fnstsw
cwtl
inc
lret
add
ja
xchg
push
cmp
xor
cld
xor
out
mov
subl
sub
cmpsl
incb
hlt
pop
mov
shrb
testb
int3
cmp
add
xor
mov
push
lret
mov
push
rol
daa
push
imull
cltd
rcrb
mov
movsl
lahf
in
rcrl
out
js
in
call
sub
clc
and
xor
scas
inc
scas
jno
xchg
xor
int
pop
inc
icebp
out
gs
inc
push
nop
lcall
xor
sbb
xchg
ja
xchg
sahf
mov
jno
inc
xlat
leave
loop
add
lods
pop
testl
or
inc
xor
sbb
clc
ja
xchg
xchg
adc
fimull
stc
push
cmp
andl
outsb
ljmp
iret
adc
mov
push
repz
xchg
stos
sub
not
pop
fcomps
repz
iret
icebp
unpcklps
pop
pop
mov
pop
in
in
or
xchg
mov
js,pn
es
xchg
imul
adc
in
shlb
push
pop
mov
add
fldl
mov
cwtl
arpl
mov
cmp
in
mov
lods
aad
cmp
push
sub
xchg
je
ja
cmpsb
int3
inc
rsqrtps
movsb
cmp
and
and
lock
lods
add
loop
movsl
in
xchg
mov
rcrl
stc
push
loopne
arpl
loope
dec
in
jecxz
mov
pop
cmp
adc
je
push
and
and
pusha
cltd
fldenv
pop
xor
dec
arpl
adc
jecxz
hlt
hlt
outsb
adc
jmp
and
dec
jmp
lret
stos
or
stos
in
jno
or
mov
xor
ret
int3
in
push
movsl
cmp
adc
cld
lcall
mov
add
pushf
xchg
sbbl
or
es
push
std
les
rorb
mov
adc
mov
push
movsb
sub
pop
mov
xchg
sbb
adc
lcall
sbb
cmp
pop
lret
mov
lea
pop
lock
or
in
adc
subl
jp
mov
and
imul
dec
fstpt
pop
pop
push
mov
shl
cs
lret
sbb
mov
pop
popf
or
lcall
scas
enter
and
jbe
hlt
lods
pop
xor
movl
dec
and
dec
dec
jmp
mov
mov
mov
cmpsb
lds
push
dec
cmp
shl
ret
popl
loope
andb
je
push
inc
je
iret
cs
leave
mov
sbbl
jmp
push
clc
mov
loopne
mov
push
insl
ret
out
jge
xchg
scas
add
dec
mov
rcrb
sahf
adcl
adc
add
lret
popa
imul
lret
inc
mov
mov
js
cltd
mov
loop
sbb
cwtl
jns
imul
mov
mov
sub
in
cs
inc
adcl
mov
int3
mov
andb
rcll
lods
mov
shll
leave
adc
jge
shrl
jge
pop
fmuls
mov
mov
in
mov
adc
lods
in
cmpsb
or
fs
mov
jb
mov
or
add
dec
sbb
or
and
bound
sub
adc
cmp
and
jmp
loop
into
mov
repz
mov
pop
mov
clc
test
in
sub
jmp
xchg
or
push
jmp
loop
hlt
outsl
mov
into
xchg
mov
out
sbb
mov
popf
push
cmpsl
and
jmp
orb
and
cmpsb
push
mov
inc
dec
mov
movsl
jb
xlat
mov
cmp
xchg
lods
sarl
adc
cli
ret
mov
or
shlb
dec
sahf
cli
leave
xacquire
mov
and
daa
mov
mov
xchg
mov
rolb
pop
inc
repnz
adc
push
mov
sbb
addr16
gs
faddl
add
jno
outsb
jl
ds
xchg
lods
js
jno
stos
inc
push
jmp
fcomi
nop
das
cmpsb
push
stos
aad
xchg
test
cwtl
repz
fwait
adc
push
sub
insb
jb
jg
jo
fidivl
push
lods
inc
insb
lods
mov
and
dec
xchg
inc
sbb
in
sbb
xorb
lret
int
xlat
mov
shrb
into
ss
test
loopne
xchg
xchg
scas
push
cmp
sahf
and
mov
imul
in
repz
xlat
addr16
inc
std
jbe
mov
bound
in
xorb
or
mov
cli
outsb
pop
je
xor
mov
ret
nop
mov
jnp
inc
fldcw
cld
in
lock
pop
mov
js
cmp
out
dec
mov
inc
inc
adc
xchg
cwtl
sti
aam
in
xchg
push
stos
dec
out
and
and
sbb
jle
inc
mov
xchg
lcall
pop
add
xchg
add
dec
std
sbb
pusha
cmp
fistps
pusha
pushf
test
lea
sub
pop
popa
das
lahf
xor
xlat
mov
lods
imul
rol
mov
and
push
pop
cli
nop
mov
dec
fcompp
mov
test
imull
mov
stos
sub
dec
sbb
stc
xorb
lcall
mov
pop
mov
subl
in
out
imul
sbb
test
sahf
or
pop
mov
dec
cmp
int3
mov
shlb
push
test
dec
test
shrb
mov
mov
mov
in
adc
test
mov
sbb
adc
push
ffree
mov
test
int3
jle
jl
shll
push
mov
in
aas
fcompl
push
cltd
sbb
xlat
dec
jne
xorb
and
inc
fistpll
rclb
mov
sub
inc
jnp
loop
jg
lret
mov
enter
ds
shll
push
int
push
mov
inc
inc
test
imul
mov
rcrb
add
cmp
push
orl
push
shlb
mov
sbb
cltd
pop
sarb
insl
aas
or
xchg
fbstp
jne
jle
into
add
push
loop
in
xlat
call
aad
jecxz
and
push
mov
js
push
sub
mov
imul
or
adc
movsl
xchg
adc
clc
daa
xor
push
imul
int3
sahf
mov
mov
fcmovu
sbb
js
in
in
jge
rol
rcrb
xchg
addb
jle
decl
insb
pushf
loop
in
cmp
clc
fwait
hlt
sti
std
adc
sti
xor
scas
stos
std
imul
pop
ret
enter
and
lret
cltd
gs
cmp
das
int3
xbeginw
inc
inc
inc
pop
inc
cmp
pop
and
out
sub
fiadds
test
cmc
xchg
fs
movsl
stc
xor
jmp
push
mov
add
fistpl
shr
es
sub
int
ds
pop
pop
roll
add
dec
ljmp
add
lahf
xor
lods
pop
push
mov
jmp
xchg
push
imul
loope
xchg
pop
sti
mov
insl
cmp
test
fwait
ljmp
mov
xor
fidivrl
popa
scas
jge
das
cmp
jecxz
xchg
sub
or
xchg
mov
jbe
movsb
xchg
mov
mov
pop
cli
jg
rclb
pushf
push
jns
rcrl
aas
push
mov
adc
insb
mov
push
sahf
adc
lret
add
inc
pop
mov
loope
fidivrs
out
dec
jae
mov
rol
insl
mov
push
mov
addr16
lahf
jp
add
sub
shlb
in
sbb
rorb
in
stos
loop
mov
cli
dec
sbb
xor
arpl
jns
lcall
cli
cmp
adc
jo
out
jo
cmpsb
scas
inc
mov
sub
pusha
je
cli
jb
mov
adc
or
ret
ret
jo
add
enter
sahf
int3
and
in
and
jle
jne
ret
pop
icebp
imul
inc
sbb
fdivrl
fwait
int3
mov
cmp
push
xchg
mov
add
fstl
sahf
je
outsb
faddp
cmc
push
in
jne
imul
je
and
lret
mov
pop
xor
mull
inc
sbb
xchg
sbb
add
pop
add
adc
mov
popa
enter
aaa
stos
bound
dec
scas
mov
or
add
jl
jmp
leave
loop
cmp
xchg
scas
in
jg
in
mov
out
outsl
out
das
and
xlat
pop
xchg
mov
xchg
aam
push
aaa
test
adc
imul
push
je
push
inc
aaa
jne
int3
inc
push
imul
jbe
lods
roll
sti
sarl
or
mov
pop
popf
jg
or
stc
sbb
sarb
pop
jns
jnp
ficoms
flds
jno
mov
mov
adc
ja
into
fcomps
push
lods
test
vpunpcklbw
mov
or
hlt
adc
aaa
mov
adc
or
adc
aad
sbb
xor
xor
mov
mov
add
adc
sbb
aad
jg
and
fwait
lret
xor
adc
jae
xchg
mov
int
testb
fs
dec
adc
mov
jnp
aad
clc
jmp
cmp
jbe
ret
ja
nop
dec
mov
pop
jecxz
mov
nop
sub
jns
mov
inc
cld
xchg
cmp
aam
mov
pop
gs
pop
push
lds
mov
clc
xor
gs
imul
sbb
rcrl
inc
xorl
cli
dec
jnp
test
jp
sub
xchg
lret
mov
int3
mov
cmpb
add
cmp
mov
add
cmp
jo
lea
notl
pop
ljmp
jb
adc
je
clc
adc
sbb
mov
mov
pop
and
mov
das
out
cmc
inc
dec
rcll
xor
push
xchg
push
addl
ret
push
sbb
fs
mov
aam
outsb
cmp
mov
adcl
stc
push
outsl
add
inc
mov
mov
inc
popa
jbe
sbb
jnp
repz
imul
clc
or
dec
add
mov
cmp
xchg
pop
xor
cltd
add
dec
lcall
fsubr
mov
adc
insb
push
push
dec
lods
mov
aas
ss
gs
sbb
aam
ret
add
das
cmpsb
lods
inc
xchg
and
fldl
aas
adc
lods
call
jns
sub
scas
ss
mov
push
dec
std
out
in
data16
xchg
hlt
sbb
mov
adc
scas
jb
xchg
or
mov
test
push
test
lods
loop
sti
add
enter
aaa
or
std
mul
sbb
pop
or
rcr
call
or
adc
xchg
rolb
scas
mov
xchg
rcrb
xchg
push
dec
jge
es
orl
add
and
xchg
cwtl
push
jecxz
mov
push
dec
push
pop
add
or
cmp
jnp
inc
nop
xor
xor
jne
subl
sahf
out
mov
rcrl
mov
xchg
mov
add
inc
jne
mov
adc
adcb
xchg
hlt
jo
iret
pop
mov
loopne
idiv
push
inc
jnp
xor
outsb
test
cltd
dec
dec
clc
dec
inc
or
rorb
call
adc
adc
cmp
leave
dec
sub
fidivl
inc
inc
std
add
xor
ds
and
shlb
dec
xchg
cwtl
les
cmc
inc
xor
dec
push
mov
ljmp
jae
pop
or
cwtl
cmpsb
inc
adc
popa
loopne
sbb
loopne
insl
and
sub
cmp
cmp
push
movsl
push
inc
imul
ret
mov
outsl
das
orl
pop
fsubrs
dec
sbb
or
stos
sahf
aam
shll
push
adc
clc
add
sub
out
jg
aas
dec
loopne
scas
inc
iret
pop
cld
cmpsl
cld
sbb
jne
int3
adc
dec
lods
sbb
sbb
sub
fs
lcall
lret
inc
imul
xchg
cmpsb
jae
cvtpi2ps
sbb
pop
jno
and
inc
sti
je
sti
dec
test
rcrb
mov
dec
imul
fcmovnb
dec
sub
and
fisttpll
es
sub
fs
push
cwtl
inc
xchg
push
and
xor
mov
mov
scas
jbe
test
add
dec
bound
aam
mov
lds
rcl
push
and
fs
pop
xor
dec
sub
lret
xor
ret
frstor
out
mov
xor
sub
adc
mov
cmp
cmc
jmp
jmp
notl
movsl
xor
inc
cltd
les
dec
sbb
jae
pop
push
adc
and
jmp
xor
sti
fwait
xchg
or
mov
lahf
aas
loop
das
push
decb
add
sbb
xchg
arpl
pop
add
mov
popf
int3
lea
das
in
dec
sti
repz
sub
shrl
sub
xor
pop
test
aaa
popa
mov
mov
lea
icebp
sub
call
inc
sarl
aad
sarl
nop
push
jb
mov
cmc
jo
out
cmp
and
pusha
pop
lea
push
outsb
mov
xor
in
add
ja
dec
je
pop
sbb
icebp
ficomps
out
int3
xlat
sbb
mov
test
push
mov
adc
jnp
or
push
js
adc
sarl
cld
xor
mov
and
mov
adc
fsts
jo
mov
loope
add
movsb
jl
cmpsb
rclb
mov
fistpl
out
or
jns
aam
iret
xchg
notb
jmp
jno
andb
arpl
adc
xchg
mov
and
mov
push
aam
fbld
dec
call
in
jle
inc
xorl
bound
fisttpll
push
rcll
jecxz
add
jnp
test
inc
adc
fcomps
pop
popf
setl
and
stos
imul
sub
xor
in
in
jp
daa
cltd
inc
lods
sub
rolb
mov
jb
ficoml
mov
sti
or
icebp
dec
insl
mov
mov
mov
lcall
dec
ss
fstps
inc
dec
mov
adc
cmp
ja
pop
dec
imul
mov
pop
fcmovu
arpl
pop
xchg
cmc
js
jns
inc
and
dec
jge
fsubl
push
and
into
movl
clc
arpl
inc
aam
mov
hlt
fdivs
sub
in
dec
push
dec
mov
jo
mov
adc
outsl
ja
stos
adc
push
ds
jl
call
mov
push
pop
stos
xlat
hlt
pop
cmp
push
jno
inc
pop
push
imul
gs
imul
cld
sbb
sti
out
pop
sbb
movsl
pop
ss
scas
and
insl
divl
in
add
fsubl
repz
jge
jnp
xor
out
stos
mov
test
shr
inc
adc
imul
jb
nop
mov
xchg
aas
jecxz
mov
fistpl
cld
je
cmp
ret
add
repnz
fidivrl
test
push
sub
out
mov
cmpsb
push
cld
push
mov
or
mov
sub
sub
mov
xor
inc
jg
and
mov
mov
push
push
in
jns
cwtl
repz
movsb
push
mov
test
cmpsl
mov
imul
cld
adc
das
jge
inc
mov
shlb
aas
mov
fisttpl
xchg
mov
mov
jbe
movsb
xor
xor
in
mov
cld
enter
scas
dec
mov
imul
lods
cmp
jp
inc
les
outsb
in
and
mov
repz
int3
cmp
push
add
ds
cli
into
mov
ja
mov
and
add
popa
outsb
jg
cs
test
push
xchg
js
mov
mov
sbb
fnstcw
mov
jbe
insl
test
sbb
or
in
fists
sbb
cltd
test
mov
pop
scas
arpl
xchg
lahf
mov
sbb
cmp
dec
dec
jns
das
flds
test
repz
mov
adc
bnd
cs
mov
rep
pop
adc
jb
xor
test
mov
xchg
cmpsb
inc
leave
adc
fiadds
mov
and
daa
shlb
jg
jp
push
inc
int3
jns
add
je
push
imulb
daa
cwtl
sbb
mov
imulb
mov
fs
adc
inc
push
jbe
jb
js
xor
mov
leave
insl
ja
mov
inc
lds
aam
and
xlat
std
scas
jp
es
adc
dec
in
je
sbb
lcall
jg
lcall
sbb
jg
les
mov
in
adc
repnz
fiaddl
add
decb
add
and
aaa
sub
add
lock
les
cmp
orb
ja
cltd
testb
inc
add
les
mov
aad
mov
dec
shl
mov
xchg
push
mov
cmp
xchg
pop
push
imul
ret
lods
cmpl
fwait
pop
xor
mov
daa
jae
adc
jno
jnp
xchg
jbe
and
dec
cmp
or
xchg
inc
cltd
bound
test
pop
sbb
repnz
call
imul
cld
add
scas
addr16
lahf
insb
subb
pushf
pop
jns
pop
mov
icebp
repz
daa
out
fadds
mov
shrl
in
popf
mov
std
lret
jp
shrb
inc
mov
fstps
test
jmp
push
and
jbe
rcll
mov
addr16
loopne
pusha
xor
aaa
sub
in
mov
pop
cmpsb
xlat
adc
fiadds
lea
jae
scas
add
jbe
pop
insl
fcoml
dec
dec
or
aam
pushf
gs
xor
repnz
fdiv
int
movsb
ficoms
lods
mov
adc
mov
inc
dec
adc
enter
ret
mov
or
popa
mov
rcl
pop
into
int3
outsb
scas
es
add
icebp
dec
fdivrl
mov
dec
cmp
andl
lds
inc
or
push
mov
mov
jecxz
push
mov
movsl
add
jge
pushf
push
and
call
mov
fwait
popf
lret
shlb
imul
pop
jecxz
sbb
data16
jp
jg
addr16
push
ds
jmp
imul
cmp
negb
xchg
fstl
sbb
scas
or
insl
jge
xchg
loope
inc
imul
daa
pop
loopne
cmp
push
xor
xor
or
or
frstor
sbb
int3
es
mov
dec
iret
fistpll
lret
jecxz
dec
or
push
ja
data16
cmpsb
pop
clc
lret
sbb
add
sbb
loope
mov
inc
idivb
pusha
sub
fsubs
mov
mov
sahf
outsb
pusha
ljmp
xchg
clc
aaa
lret
xchg
or
mov
test
data16
inc
xor
sahf
xchg
call
and
add
popf
push
cli
mov
push
mov
xor
mov
jecxz
inc
repnz
mov
mov
jae
and
push
lahf
aam
sbb
and
cmp
dec
fisubs
pop
cmpsl
mov
in
push
push
jo
xchg
inc
lods
rorl
cwtl
cltd
cmp
out
and
inc
jno
inc
and
not
mov
mov
sbb
xor
std
pop
pop
and
in
loopne
push
testl
dec
pop
inc
test
lea
cmpsb
adc
add
jbe
or
test
les
add
pop
xchg
popf
lods
add
jbe
dec
sbb
enter
cmp
push
clc
scas
pop
cli
xchg
repz
bound
jge
cld
dec
adc
aaa
dec
jno
mov
cmc
mov
inc
test
fdivrl
dec
sub
ljmp
push
pop
sub
or
leave
negb
mov
stc
inc
sub
hlt
rolb
je
outsb
std
sbb
call
jo
mov
inc
setae
cmp
jmp
and
inc
inc
in
shll
mov
cmp
outsb
rcrb
pop
push
cs
int
mov
pusha
jle
xchg
mov
sbb
adc
inc
je
adc
inc
jne
into
fsts
mov
xor
hlt
out
xorl
xchg
icebp
xor
aad
adc
mov
or
and
add
sbb
mov
movsb
cli
aam
pop
jo
neg
adc
nop
fimull
xchg
lret
pusha
jmp
jle
out
pushf
imul
mov
inc
data16
stos
sub
jle
cmc
inc
dec
ss
adc
lods
scas
sahf
add
push
mov
loop
or
mov
and
repz
rolb
push
xchg
lds
mov
mov
xchg
insb
push
push
arpl
leave
shll
cli
popa
push
dec
push
mov
jo
outsl
mov
dec
adc
pop
popf
pop
jmp
aaa
popa
push
adc
out
adc
bound
int
dec
dec
loop
test
or
jb
test
aaa
in
pop
jno
jp
mov
sub
outsl
enter
xor
imul
icebp
push
das
test
daa
ljmp
dec
add
or
dec
es
push
inc
inc
mov
sbb
jo
lock
xchg
mov
mov
cmp
inc
gs
xchg
cmp
and
inc
es
inc
pop
jno
sub
cwtl
insl
mov
ljmp
mov
adc
xchg
jp
outsb
ljmp
jno
or
lret
sbb
xchg
lods
enter
sub
inc
in
test
inc
shrl
mov
xchg
xchg
das
das
jae
es
lret
pop
adc
inc
dec
out
push
aam
das
subl
frstor
test
mov
in
clc
stc
cmp
push
jmp
js
and
xor
clc
aam
cs
jg
add
xchg
aad
aad
or
and
mov
sub
push
jmp
lret
mov
mov
icebp
mov
out
ds
ret
outsb
jmp
jns
dec
xchg
in
sahf
sub
or
data16
sbb
jnp
jl
test
adc
insb
insl
pusha
sub
xor
cmc
popa
shrb
iret
cld
pop
inc
jle
jl
mov
scas
ret
ljmp
mov
icebp
movsl
test
push
mov
push
mov
push
dec
cmp
in
sbb
in
pop
jno
xchg
and
mov
cmp
insl
cld
addr16
stos
outsl
fmul
cmc
sti
fstpl
mov
add
movsb
mov
sub
xor
cld
jne
add
mov
jbe
fs
scas
addl
xchg
xchg
test
test
test
mov
pop
mov
dec
rcrb
jle
mov
pop
push
in
mov
cmp
fiaddl
sbb
sbb
das
loopne
mov
mov
push
push
dec
sbb
mov
cmp
inc
outsb
jl
movsb
xlat
cmp
ss
icebp
sarb
pop
sub
int
xchg
xchg
jns
inc
xchg
movsb
shrb
imul
inc
lock
in
jle
out
mov
sbb
sti
stos
inc
sub
scas
aas
xlat
jge
mov
inc
jae
jno
mov
in
inc
pop
in
or
shlb
or
outsb
xlat
adc
hlt
push
out
push
jecxz
ja
xchg
test
mov
mov
ret
popa
inc
mov
ljmp
xchg
sti
nop
mov
in
das
lahf
cltd
xor
cli
push
out
sub
imul
int3
out
outsl
jae
icebp
dec
inc
pop
icebp
push
je
mov
loop
pop
enter
imul
pushf
daa
jb
jnp
dec
cwtl
xor
enter
cmp
jl
ja
inc
sahf
cmp
shll
push
bound
cld
pop
jp
jge
add
pop
js
sbb
mov
mov
popa
imul
dec
push
dec
repz
and
adc
sub
or
mov
sub
or
outsl
mov
icebp
leave
js
movsb
sbb
pop
mov
fcoms
stos
push
jle
mov
mov
sub
pop
aas
mov
test
xchg
popf
hlt
adc
mov
or
add
push
lret
imul
movsb
or
ficoml
insl
adc
mov
fcompl
cmp
pop
pop
xor
mov
aam
push
or
pop
std
sbb
push
mov
test
cmp
aam
dec
adc
or
xor
les
mov
push
mov
xor
mov
push
pop
mov
dec
cwtl
fwait
mov
mov
mov
add
push
popf
and
add
js
out
dec
add
hlt
jg
out
out
jae
dec
cmc
push
ret
aas
xchg
ret
lods
or
pop
stc
mov
adc
mov
pop
testl
sbb
mov
cmpsb
and
mov
inc
roll
inc
icebp
outsb
mov
loop
and
or
push
push
xor
sub
outsl
xchg
mov
jbe
pusha
add
arpl
cli
xlat
dec
push
and
cmc
push
iret
push
mov
xor
int
and
dec
cmpsl
sarb
js
mov
cmp
jo
mov
jns
add
andb
arpl
cmpsl
cmpl
fwait
leave
call
mov
fisubrl
cmc
mov
out
lds
hlt
push
insl
hlt
rcrl
mov
in
test
jl
cld
enter
in
leave
gs
pushf
mov
addb
xor
cmp
xchg
jl
add
push
jp
movsb
or
xchg
or
in
and
pop
adc
scas
rcrl
lret
repnz
adc
popa
push
jle
repz
mov
loope
pop
repnz
mov
inc
ds
mov
insl
cld
inc
mov
sub
cli
imul
je
jb
inc
inc
jne
cmp
dec
leave
and
jmp
xchg
gs
stos
push
idivb
in
dec
stos
jge
xor
sub
into
inc
mov
mov
xlat
dec
ret
lock
es
ficompl
das
test
lds
dec
xor
add
or
pop
outsb
insb
js
inc
cmp
in
jb
push
mov
pop
test
lea
hlt
cmpsl
mov
mov
sub
fldenv
roll
cmc
cli
repz
stos
add
mov
cwtl
pop
lcall
js
xchg
ljmp
repz
mov
insb
mov
dec
cmp
cmp
inc
jg
adc
cmp
je
lcall
lods
rcrl
rcll
cmp
shll
mov
mov
pop
shll
negl
pop
mov
cld
lock
push
dec
sub
inc
mov
jne
movsl
imul
aaa
enter
pop
cli
lea
sub
mov
aad
jmp
mov
cwtl
adc
dec
sbb
scas
pop
les
push
ficompl
shlb
jl
cmpsl
addb
sbb
test
and
movsl
sub
xchg
aaa
mov
lcall
inc
stos
cs
adc
xor
inc
jbe
or
adc
insb
outsl
lds
cmpsl
xchg
cli
adc
int
sub
push
or
in
pop
cmpsb
shlb
dec
pop
pop
xchg
cmc
mov
inc
dec
daa
stc
loop
xchg
and
je
insl
lcall
push
jge
inc
int
bnd
sub
push
mov
cmpsb
mov
je
bound
popa
stos
mov
in
inc
inc
cwtl
pop
adc
or
mov
divb
lahf
insb
das
fwait
jb
mov
dec
popf
rolb
sub
repz
mov
jl
xor
mov
xchg
fildl
mov
fiaddl
push
inc
add
pop
xor
clc
mov
fsubp
push
mov
mulb
cwtl
mov
dec
or
pop
fldt
test
idivl
int3
jecxz
test
call
add
jns
test
and
ret
dec
xor
shlb
dec
inc
rol
sub
inc
stc
sbb
and
fistpll
pusha
and
sub
and
mov
jmp
in
push
add
cmp
xor
push
iret
inc
cmp
pop
cmp
or
stc
repz
inc
lret
in
fprem
lret
and
je
aad
inc
adc
movsl
movsb
jb
int3
pop
mov
mov
cwtl
push
jne
dec
outsl
lock
cmp
push
mov
pushf
fisttpl
hlt
iret
mov
sub
cmp
add
fldl
xchg
push
mov
mov
les
fwait
mov
or
cmp
ret
jge
or
and
test
mov
push
pop
and
or
cmp
popa
sbb
jae
push
test
gs
push
loopne
bound
arpl
pop
in
les
daa
ds
xor
add
pop
cmc
or
fstpl
push
stos
mov
add
or
sub
rcrl
out
popl
cwtl
mov
or
push
push
sub
jp
mov
cwtl
call
enter
ficoms
rolb
jne
sar
out
ss
and
lods
fwait
les
mov
jno
js
jp
imul
pop
xchg
mov
xchg
ds
jmp
sbb
dec
xor
add
jno
mov
rsm
movsl
loope
or
pusha
sub
jge
cltd
add
in
and
inc
mov
dec
xchg
mov
add
stos
mov
or
mov
mov
sbb
dec
shll
in
imul
sbb
adc
add
test
jno
cmp
sbb
loope
sbb
bound
cmpsb
pop
idivl
and
inc
cmp
dec
popa
repnz
pushf
dec
sbb
dec
fdivl
xor
stc
leave
in
and
add
inc
shll
stos
pushf
pop
ffreep
lret
and
lahf
sbb
mov
idivl
movsb
adc
ficompl
push
adc
in
xor
jmp
mov
in
cmp
inc
adc
aaa
in
je
fbstp
mulb
enter
aaa
ja
add
add
lcall
xchg
cmc
xor
cmp
push
mov
lcall
jns
jnp
mov
push
mov
pop
lods
sub
add
std
sti
and
mov
les
enter
xor
jl
addb
fs
adc
dec
push
das
mov
pxor
add
pop
jmp
outsl
arpl
adc
or
sub
gs
inc
inc
fldl
aam
xlat
sub
sbb
and
cmp
mov
jmp
icebp
iret
insl
mov
push
hlt
insl
add
jno
push
mov
test
xchg
push
xor
jns
movsl
imul
sub
ret
pop
mov
push
mov
sbb
jo
mov
sub
dec
scas
mov
enter
xor
ds
lods
xchg
and
mov
inc
mov
dec
scas
jns
xor
in
mov
ja
pusha
dec
mov
and
bound
pop
sub
orb
ja
stos
jecxz
xchg
outsl
cmpsb
pop
out
loopne
pop
lret
in
and
add
jmp
ss
js
shrb
inc
xchg
sub
scas
pop
mov
pop
insb
nop
cmp
int
dec
mov
xor
int
test
ja
mov
lods
mov
sti
stos
xor
jno
pop
mov
push
stos
aas
fidivs
jp
sub
mov
push
jecxz
push
cmp
xor
add
stos
dec
rclb
xchg
popa
mov
or
iret
mov
mov
aaa
adc
setae
push
sbb
call
dec
out
test
orl
dec
jne
mov
aaa
push
inc
xchg
or
jge
ror
pop
push
jecxz
popa
or
mov
add
shll
jl
mov
and
sbb
jae
mov
mov
add
mov
mov
pop
cli
ds
sbb
xchg
jg
dec
stos
in
cltd
pop
daa
pop
mov
cld
imul
hlt
xchg
pop
nop
pop
xchg
mov
and
xchg
add
jp
mov
pop
xor
fxch
xorb
mov
cmp
add
add
lock
jecxz
jnp
aam
push
mov
mov
dec
gs
clc
call
lds
cltd
iret
xchg
repz
push
sbb
jp
jmp
inc
jbe
jp
mov
mov
shrb
out
mov
mov
pusha
fistpl
mov
loopne
add
xchg
push
and
xchg
xchg
pushf
cli
pop
pop
push
sbb
sahf
movsb
adc
xor
bound
xchg
mov
push
mov
testw
mov
ret
push
sarb
mov
hlt
dec
mov
pop
add
mov
movsl
mov
jmp
jno
xchg
gs
pop
mov
pop
xchg
mov
decb
pop
jecxz
adc
push
mov
scas
add
add
iret
pop
jge
sub
mov
mov
icebp
rcrb
xchg
add
pop
in
jb
inc
repz
cli
aad
mov
jg
popf
sbb
sub
sti
ljmp
xor
mov
push
sub
mov
pop
or
xor
in
in
pop
dec
test
lret
aaa
mov
pusha
mov
into
into
scas
jge
fstps
imul
cmc
adc
das
and
jno
adc
push
xor
cmp
je
push
stos
sbb
push
and
xchg
test
add
add
mov
mov
shrl
icebp
ss
add
inc
les
ljmp
xchg
dec
popf
and
push
imul
mov
mov
cmp
pusha
or
jp
lods
xchg
popf
test
mov
inc
ret
dec
sbb
outsb
inc
inc
sbb
lea
jecxz
loope
js
repz
decl
adc
or
jmp
in
sub
sbb
jns
push
push
outsl
jne
test
inc
xchg
outsl
ret
dec
mov
dec
in
sbb
xlat
sti
addw
popf
adc
and
push
out
or
movl
fucom
mul
dec
push
mov
in
js
rcr
addr16
sti
sarl
mov
dec
pusha
jns
cmpsb
imulb
lret
mov
adc
lret
push
push
mov
mov
xor
scas
out
cmp
push
mov
insl
cwtl
int3
adc
dec
mov
sbb
or
les
enter
or
stc
sub
frstor
jl
adc
pop
sahf
insl
stos
dec
shll
nop
scas
test
loop
sbb
inc
push
cld
cli
mov
sbb
inc
scas
adcb
adc
cwtl
lcall
inc
mov
mov
mov
fadds
fisttps
hlt
xchg
push
ss
sub
sbb
cmp
vlddqu
test
jo
hlt
xor
inc
sbb
out
and
pop
adc
faddl
pop
dec
add
xchg
insb
nop
or
xchg
jne
inc
insb
mov
scas
add
mov
adc
ja
push
inc
cmpsl
popf
mov
fldenv
icebp
mov
sbb
aam
push
mov
pop
push
and
and
mov
leave
cmp
mov
jp
pop
jo
cwtl
sarb
dec
jb
and
testl
cmp
lods
cli
testl
aam
rol
int
in
xchg
inc
imul
mov
xor
push
jae
je
mov
mov
loopne
in
pop
popf
xor
mov
and
popa
adc
lcall
in
shl
enter
inc
test
inc
mov
fcompl
xlat
test
mov
mov
xchg
loop
jge
adc
mov
addb
out
nop
int3
pop
clc
xlat
jmp
mov
sbb
add
int3
dec
lret
mov
mov
jl
out
xchg
outsl
outsl
cmpsb
and
jae
xchg
repz
ret
fwait
dec
in
orb
pop
dec
and
mov
sub
fwait
addr16
stos
dec
xchg
aas
loopne
bound
mov
push
popf
push
iret
mov
jns
push
mov
sbb
inc
pop
mov
nop
ss
mov
xor
fidivrl
sbb
sbb
scas
lret
cli
adc
leave
fabs
out
and
decb
push
push
or
or
jle
jge
add
aam
divl
ljmp
shlb
xor
shll
push
repnz
shll
cmp
add
rol
sbb
rcrl
sub
adcb
daa
test
adc
roll
jo
mov
mov
mov
cltd
sbb
cmpsb
dec
dec
mov
inc
mov
in
dec
shrb
faddl
shll
and
jnp
ret
fwait
addr16
inc
and
les
aam
ss
pop
int3
add
cmpsl
and
sarl
rorl
xchg
in
dec
test
jno
cmp
daa
add
dec
and
pop
dec
xchg
mov
leave
loop
ret
mov
fstp
je
test
lods
jnp
inc
pop
push
aam
xor
js
lahf
push
mov
push
sbb
call
enter
subb
fs
inc
ss
cmp
xor
lds
mov
push
cmp
jnp
jge
lahf
dec
imul
xchg
or
stos
push
xor
pop
rorl
fidivl
addb
mov
into
inc
jge
lds
aaa
mov
gs
mov
pop
jp
jns
xchg
inc
loopne
sub
incl
aad
es
dec
cmp
les
mov
insl
out
cmp
dec
fs
cmpl
in
test
push
cs
fmull
jb
std
idivb
cmp
jge
inc
roll
lret
push
and
cs
in
sbb
cmp
push
scas
movsb
push
push
ja
xor
sbb
mov
xchg
popf
shll
pop
or
aas
loope
xchg
test
std
jmp
inc
jne
outsl
lcall
jg
mov
fwait
stos
mov
or
in
fmulp
or
and
insl
test
filds
cmp
push
dec
orb
insb
js
js
inc
sbbb
mov
mov
or
outsl
xchg
pop
test
inc
mov
shll
hlt
mov
insb
clc
loope
sbb
jne
mov
jnp
push
mov
cmpsb
push
sti
jle
sub
cmpsb
inc
add
ljmp
and
aas
lea
adcl
mov
lret
mov
and
rorb
fimuls
mov
sbb
in
pop
int3
and
clc
popf
xor
push
out
mov
cltd
sti
xor
jnp
mov
movsl
call
pop
cmc
adc
sbb
mov
mov
push
pushl
jnp
jp
dec
scas
mov
cwtl
lds
push
cmp
jae
pusha
pushf
iret
andps
movsl
mov
push
not
push
cmc
out
movsl
mov
fnstsw
push
scas
dec
sub
vmovsd
je
stos
cmpsl
jecxz
enter
cmpsl
out
out
cld
mov
popa
scas
fisttpll
insb
clc
dec
pop
inc
xchg
fisubs
and
or
je
cmp
mov
ljmp
repz
leave
push
sbb
lods
cmpsl
add
mov
push
mov
push
mov
out
andb
xorl
adc
sbb
js
dec
push
into
xor
mov
inc
repz
mov
inc
lcall
pop
sub
adc
and
push
daa
imul
cwtl
leave
out
adc
int3
inc
jo
jmp
popf
lret
mov
mov
xchg
inc
movsl
lret
cld
fsubs
out
lea
sub
fwait
cwtl
xchg
pop
out
adc
popa
mov
lods
mov
cwtl
inc
sub
fidivs
cmovge
jne
inc
xor
js
add
mov
dec
lret
or
sbb
pop
scas
mov
das
in
insb
or
xor
push
jne
fistl
cmpsb
cmp
lahf
cmp
and
xchg
sub
dec
mov
ret
inc
cmpsl
jns
pop
jmp
push
or
sarl
and
push
mov
out
jbe
imull
sbb
jmp
jbe
mov
sbb
xor
dec
xchg
xchg
mov
mov
xor
pop
xchg
fists
notb
mov
or
mov
rolb
jle
add
push
adc
dec
dec
inc
mov
jp
adc
out
leave
dec
xchg
jl
lcall
loope
pusha
xchg
test
fcmovne
gs
out
pushf
inc
xchg
xor
nop
hlt
add
outsb
scas
cmp
adc
ljmp
js
add
or
jbe
jge
cmpl
and
xlat
rorl
pushf
and
imul
jl
aam
movsl
popa
xor
shll
xchg
mov
gs
push
negl
sti
sbb
std
and
add
lods
mov
mul
cmp
nop
push
cmpl
xor
aaa
fsubs
rcr
test
jg
jno
add
cmp
ret
dec
jp
xchg
inc
enter
sbb
add
es
inc
jge
jae
aam
push
mov
cmp
das
cmp
jne
xor
push
xor
xor
jbe
xor
dec
ret
mov
xorl
or
xchg
sub
lock
sbb
sbb
aam
fldenv
fcmovnbe
mov
pop
lods
es
add
add
lods
clc
out
xor
cld
insl
pop
sbb
mov
ret
xor
sbb
mov
pushf
in
or
jecxz
cmpsw
push
xor
mov
inc
mov
inc
imul
sub
mov
arpl
cwtl
cmp
imul
cmp
and
jns
xor
mov
lock
xchg
push
ret
adc
xor
inc
dec
movsl
xchg
pop
mov
sbb
je
movsl
stc
leave
lock
mov
rcl
add
xchg
adc
stos
dec
mov
inc
and
repz
or
fdivs
push
test
bound
sbb
fiadds
xchg
cmp
outsb
fisttpl
divb
test
dec
loope
ljmp
repz
cmp
lcall
mov
iret
mov
cmpsb
lock
mov
lcall
xorl
test
dec
cli
rcr
imul
mov
es
mov
cmp
stos
jp
mov
jnp
addr16
add
outsl
inc
add
dec
mov
lods
fcmovbe
ret
sti
and
nop
inc
xchg
mov
rol
js
mov
dec
hlt
dec
ja
fstpl
data16
and
push
ds
popa
mov
or
sub
cmp
cmp
test
sbb
or
loope
xor
cltd
cmp
fcompl
aas
push
mov
fnstsw
xor
insb
jg
aas
push
push
sub
cmp
push
mov
std
fcmovbe
bound
dec
push
imul
into
fs
in
outsb
sahf
lcall
fwait
cmpsb
mov
mov
sbb
sbb
rorb
mov
inc
push
leave
adc
push
jl
fidivrl
dec
fsubrs
mov
insl
decb
fists
popa
jmp
sbb
fcmovne
push
or
xor
xchg
mov
add
lods
adc
dec
pop
mull
xchg
xchg
stos
mov
pop
jg
inc
cmc
mov
je
inc
push
mov
xor
pop
rol
xlat
push
pushf
std
sub
daa
push
enter
pop
jne
stc
fcoms
dec
mov
sahf
inc
pop
xchg
test
or
dec
inc
sti
mov
ss
mov
push
nop
mov
xor
add
rclb
xchg
inc
xlat
mov
int
loop
mov
jae
xor
stos
std
insl
roll
push
push
mov
sub
dec
repnz
les
lcall
imul
jne
sbb
jns
mov
mov
test
mov
adc
sbb
jp
fstpl
push
scas
jns
push
dec
push
xlat
arpl
or
lock
stos
lock
add
cmc
jmp
insb
inc
ret
dec
ljmp
push
jecxz
mov
cmpsb
jbe
lret
pop
cwtl
jmp
inc
fstpt
xchg
pop
aas
stc
cwtl
fmul
jnp
out
mov
aam
mov
pop
xchg
icebp
iret
mov
mov
shlb
mov
fstl
imul
or
arpl
jbe
je
inc
or
adcb
mov
pop
push
pop
cwtl
xchg
cmp
and
jo
pop
mov
inc
nop
cmp
adc
mov
fwait
xchg
lods
jb
push
scas
cmp
out
stc
or
out
into
fldenv
cmpsl
xchg
mov
xlat
rcll
xor
divl
aas
sub
adc
sbb
jns
mov
xor
aas
fiaddl
xor
sbb
rcr
aas
pop
ja
or
jno
flds
test
jbe
xchg
xchg
xor
in
lock
lea
mov
out
pushf
std
or
xor
das
lret
jbe
shrl
mov
lea
dec
shl
sub
inc
lret
dec
xor
mov
inc
jmp
hlt
ja
and
jbe
scas
jbe
bound
jmp
inc
je
pop
test
or
jns
adcb
or
ficoms
movhps
mov
pop
xchg
sub
mov
mov
sub
mov
mov
inc
cmc
mov
pop
jns
mov
jecxz
int
mov
and
scas
and
pop
xchg
ss
and
cmp
sub
add
nop
dec
xor
sbb
jno
mov
test
ss
push
popa
jecxz
cmp
outsl
shlb
lret
push
sbb
sbb
lahf
mov
shlb
jnp
push
mov
inc
cld
sbb
sahf
scas
cmp
xchg
adc
xchg
jl
stos
mov
sbb
cmp
popa
int3
push
jl
or
adc
mov
in
hlt
cmpsl
scas
test
inc
cmp
in
mov
das
clc
xchg
push
cli
icebp
popf
popa
fiadds
sbb
dec
xor
hlt
and
jns
push
outsl
fs
call
repz
adc
lods
and
or
cmpl
ja
and
mov
jbe
stc
aas
mov
xor
jp
inc
movsb
ficoms
in
test
adc
jo
repz
push
jo
mov
fisttps
cld
pop
or
jmp
push
jae
pop
inc
test
sub
shll
lcall
or
lock
mov
or
cmpsb
or
lds
mov
daa
sub
xor
jecxz
testl
movsb
lock
mov
lea
aad
les
xor
in
ret
scas
stos
rcll
ljmp
pop
decb
and
lods
movsl
repz
lods
bt
rcll
mov
movsl
scas
movsb
mov
xor
pop
ret
test
enter
add
es
mov
pop
iret
inc
jne
xor
mov
mov
jno
imul
leave
pop
imul
jmp
les
jno
adc
cwtl
sub
mov
fldl
xchg
mov
ds
rol
pop
or
mov
mov
mov
xchg
pop
or
and
rorb
cmp
out
pop
test
jmp
hlt
add
imul
cmp
or
cmp
shll
xchg
inc
in
les
cmc
sbb
sub
mov
aad
dec
xchg
mov
lods
ret
and
icebp
enter
add
mov
lock
mov
push
xchg
xor
pop
int3
push
cmp
dec
cmp
push
inc
in
pop
call
es
mov
je
les
test
jns
lock
out
pop
xor
push
xor
dec
mov
xor
xchg
aad
pop
dec
icebp
add
or
out
rcll
adc
cmpsl
inc
mov
pop
rol
cwtl
or
jg
fcom
mov
add
dec
outsl
xchg
cmp
jmp
cmc
push
pop
xchg
push
std
cli
mov
push
lahf
xor
leave
loopne
dec
lods
stos
pop
xchg
add
push
adc
hlt
sub
mov
add
jae
arpl
lret
mov
xor
jecxz
scas
xchg
popf
daa
inc
jb
pushl
dec
lcall
pushf
fstpl
repnz
test
loopne
stos
scas
jmp
bnd
pop
xor
xor
cmp
xor
dec
das
int3
jp
fdivrs
int
or
jle
xchg
fxch
mov
sub
cmp
dec
mov
dec
leave
cltd
cmp
push
cmpsl
movsb
lcall
imul
dec
out
shlb
or
sbb
sbb
rcrb
jmp
fstpt
mov
rcrb
stc
mov
push
int
inc
mov
jmp
jae
lea
and
or
pusha
loope,pt
xchg
jno
or
pop
leave
mov
cld
out
aaa
popa
inc
stc
sti
test
test
xchg
sbb
or
rcll
add
xchg
cmpsb
arpl
popa
orl
rcrl
mov
icebp
icebp
sbb
push
cmc
sub
inc
mov
adc
repz
enter
cmpl
inc
xor
mov
les
sbbb
cmp
mov
cmp
rcr
shll
or
outsb
repz
push
dec
icebp
adcl
in
adc
imul
cli
lock
jno
int3
push
xchg
int
sahf
int3
cmc
mov
mov
pop
js
lcall
out
cmp
notl
cs
or
jb
imul
jno
inc
jmp
cmpsl
cmp
mov
loope
fsubr
pusha
mov
cwtl
mov
sbb
movsb
int
xabort
xor
mov
xchg
mov
inc
out
dec
ds
pop
enter
mov
xlat
xsha256
cmpsb
pop
mov
jae
cmpb
pop
bt
mov
sbb
mov
in
pushf
in
leave
nop
es
inc
dec
imul
sti
rorb
aam
xor
pop
pop
pop
jg
mov
add
icebp
push
shl
mov
ds
stos
xchg
sub
mov
cmp
aad
xor
mov
loope
and
and
and
and
out
xchg
jno
in
movsb
push
testl
mov
pop
mov
jno
cld
in
mov
mov
pop
mov
pop
scas
outsl
jl
jmp
xchg
test
add
outsb
add
lahf
ret
mov
into
cmp
pop
and
dec
push
jecxz
cmp
icebp
sbb
ret
cli
xor
sub
mov
mov
in
repz
repz
sahf
les
jae
loop
add
push
lock
or
movsb
xor
out
pop
mov
jb
push
cltd
pushf
rolb
cmp
fadd
in
arpl
fldl
dec
sub
pop
je
les
pop
mov
stc
push
jbe
mov
pop
scas
pushf
mov
or
xor
test
das
pop
out
sbb
sti
sbb
adc
lret
addr16
mov
test
jmp
add
insb
dec
push
sub
adc
neg
mov
popf
jnp
loope
mov
notb
or
adc
jno
enter
fstpt
mov
fwait
push
xlat
cli
jp
fs
mov
cli
mov
lods
scas
jo
pop
aam
jnp
jmp
rorb
lcall
pop
cmpsl
aad
dec
sahf
test
adc
repz
cltd
icebp
scas
jecxz
mov
ljmp
jo
push
pop
mov
in
and
mov
mul
pop
mov
mov
and
cmc
add
dec
repnz
cmp
sbb
popa
xlat
nop
xor
mov
ds
pop
jns
jo
loopne
daa
push
xlat
ljmp
loop
int3
inc
mov
scas
daa
repz
mov
je
or
aad
pop
ja
pop
jnp
add
mov
xchg
repnz
sti
shll
xor
fbld
pop
sub
pushf
cli
arpl
mov
xchg
pop
fs
or
sub
mov
out
xchg
jne
cmp
out
lcall
cmp
das
dec
pop
xor
outsl
jae
push
jmp
push
js
repnz
push
jge
aad
jmp
sub
lods
add
inc
loop
dec
movsb
pop
stos
sub
fists
mull
and
add
sbb
sahf
sbb
stos
popf
cmc
xchg
iret
cmc
clc
pop
cmp
mov
push
not
mov
or
inc
or
shr
repz
and
in
push
xor
or
dec
in
mov
jmp
adc
mov
dec
cmc
data16
aad
add
adc
xchg
dec
movsb
xlat
push
xchg
push
jb
cmp
out
cld
mov
sub
outsl
lahf
mov
adc
divb
and
and
adc
jno
fisttpl
in
add
push
push
push
fwait
movsl
loope
call
cmpsb
cltd
in
dec
and
push
test
iret
adc
xor
mov
jae
repnz
in
add
scas
divl
cltd
std
aas
push
pushf
dec
out
lds
mov
aad
push
jne
jno
je
ds
cli
push
lret
sti
push
push
cmp
cs
in
pop
loopne
lds
or
repnz
sub
push
mov
ret
sub
fs
es
in
and
cli
inc
and
pop
out
les
mov
xchg
xchg
add
pop
add
inc
testb
and
ret
int3
sti
dec
aaa
cld
lret
sub
sbb
ljmp
xor
hlt
pushf
mov
std
xor
dec
fldl
in
pop
mov
pop
jecxz
lock
mov
xor
cmp
and
mov
inc
dec
hlt
jecxz
aaa
lock
mov
iret
inc
dec
mov
inc
cmpsb
xor
loopne
fwait
pop
sub
sti
daa
adc
cmc
add
jbe
movsl
lcall
inc
sub
rorl
xchg
mov
pop
fdivrs
xor
and
push
outsl
movsb
pop
std
arpl
shrl
pop
cld
jbe
sarb
dec
add
xor
ret
inc
and
jns
loope
fistpll
lds
xchg
xchg
mov
xchg
mov
sub
push
cs
lea
and
insb
lret
and
jp
mov
pushf
cltd
es
fidivrs
sub
mov
xchg
paddsw
xchg
fwait
sbb
cltd
xor
mov
decb
xchg
sub
out
mov
or
movsb
adc
aad
push
xor
mov
dec
push
insb
cs
call
and
sbb
popa
test
xchg
pop
in
int
or
fwait
push
outsb
lock
pop
jp
mov
push
lods
clc
push
fnop
stos
mov
jecxz
jmp
cli
mov
lea
and
push
xchg
cmp
in
test
mov
sbb
popa
aam
push
je
aas
jmp
in
test
ss
mov
and
in
pop
fldcw
cwtl
sub
sub
sahf
sbb
xor
adc
dec
fcmovu
call
mov
pop
mov
xor
mov
and
sub
fsts
int3
push
jg
lock
push
pop
fwait
jne
mov
mov
fdivr
jno
test
pop
stos
mov
mov
xor
test
mov
cli
or
adc
xor
clc
push
cltd
gs
push
xchg
mov
mov
cmc
inc
mov
push
inc
je
mov
call
sbb
mov
stos
leave
mov
adc
xor
stos
and
in
mov
mov
cmp
test
arpl
and
and
inc
mov
in
adc
stc
adc
subb
xor
adc
insl
xor
pusha
sarl
bound
jo
pop
dec
jle
push
jnp
sbb
int
xchg
into
mov
lret
int
cld
rorl
sbb
fwait
movsb
in
mov
xor
lods
xlat
adc
ljmp
bound
fiadds
mov
pop
inc
xor
xchg
mov
mov
movsl
out
clc
mov
popf
dec
je
sbb
dec
and
xchg
xor
fs
aas
dec
inc
cmc
insb
fldt
data16
std
xchg
and
push
xor
int3
pusha
xchg
mov
fisubl
ud0
enter
dec
pop
ret
push
gs
xor
jno
xor
stos
pusha
push
xor
mov
fldenv
mov
cmp
loop
outsl
inc
out
push
push
mov
repnz
lds
xchg
jnp
xchg
pop
inc
call
add
or
in
sub
mov
pusha
and
lods
fmull
or
adc
cmpsb
mov
out
push
inc
inc
mov
daa
jmp
inc
jecxz
outsl
lods
ss
cld
sub
sbb
inc
push
add
out
aam
add
push
dec
jl
in
dec
and
mov
aaa
mov
aas
lock
inc
pop
pushf
or
sub
push
aam
out
jp
shrl
pop
mov
mov
dec
loopne
push
pushl
lods
fsts
push
jg
add
aam
adc
out
mov
inc
stos
imul
or
mov
or
mov
daa
xchg
lret
fcmovb
jge
inc
jbe
push
push
sub
leave
faddl
ficompl
dec
mov
loope
or
inc
in
push
and
jno
add
rorl
mov
cltd
jecxz
sub
lods
push
cmp
or
xchg
jb
sbb
cwtl
shl
inc
add
xor
stos
and
xchg
out
dec
and
into
xchg
pop
aam
fwait
inc
pop
sarb
mov
sub
sarl
insb
jo
les
push
mov
dec
pop
jp
fisttps
push
pop
push
stc
push
or
xchg
add
push
mov
lret
in
arpl
jmp
fistpl
xor
movsb
sbb
mov
gs
mov
imul
or
lock
add
cltd
or
fsubrs
out
xor
or
clc
lret
sbb
jbe
cld
mov
mov
out
lret
rolb
leave
jno
push
imul
push
xchg
or
aas
mov
jbe
int
inc
out
jb
sub
push
insb
mov
stos
sbbl
push
paddb
cmp
mov
mov
dec
je
dec
clc
es
sub
pop
mov
xor
outsl
cmp
dec
dec
rclb
aam
icebp
cmp
jbe
mov
add
lds
jg
push
mov
pusha
xchg
inc
cmp
cs
lret
push
shrb
push
sahf
sbb
int3
sub
stos
lcall
fdivl
mov
pop
lcall
and
adc
pop
lret
push
inc
sub
and
pop
pop
cmc
es
cmp
or
imul
imul
neg
jecxz
sbb
aam
cmpsb
xchg
arpl
pop
jae
sub
mov
sub
jg
stc
lahf
call
jns
mov
popa
rcr
int
ret
jns
iret
fldl
jns
jmp
lret
pop
mov
mov
jb
call
or
ljmp
pop
adc
jmp
jmp
mov
sub
popf
sub
lret
daa
sbb
mov
push
mov
repnz
jl
lahf
je
mov
adc
jg
jb
xchg
jmp
add
lret
sub
push
shrb
mov
pop
or
clc
xor
hlt
outsl
movsl
loopne
cli
dec
clc
js
pop
push
or
cmpsb
and
inc
pcmpeqd
mov
lods
movsb
jb
xor
jne
and
int3
outsb
adcb
add
cmpsl
test
dec
out
enter
adc
pop
pop
xor
sarb
dec
jo
iret
sahf
lcall
sub
pop
mov
in
out
jns
pop
push
bound
mov
xor
cld
movsl
or
rclb
xchg
sti
xchg
ret
lds
in
xchg
repnz
insl
cwtl
js
xchg
jge
sahf
leave
hlt
roll
or
cld
push
lea
in
or
push
sub
push
mov
cmp
and
pop
subb
test
les
pusha
lds
mul
mov
or
or
xor
shll
cmc
mov
ss
or
test
mov
shlb
aaa
and
inc
sahf
adc
fcomp
sbb
popf
dec
push
lock
ficomps
jne
sub
lock
add
push
lcall
sub
jmp
xchg
pop
dec
inc
inc
or
cmp
ficoms
ret
dec
adc
xor
add
mov
xchg
or
jg
ror
sub
mov
stos
inc
rep
sbb
mov
mov
lods
repnz
call
je
mov
sub
and
sarb
sub
out
orl
idivl
fidivs
call
ljmp
xor
pop
outsb
lret
in
scas
enter
mov
xchg
push
outsl
movd
or
adc
pop
scas
aas
lea
fisubs
je
cmp
push
push
cwtl
lret
push
outsb
mov
iret
or
mov
push
leave
and
aaa
neg
push
mov
sahf
aas
popf
out
loopne
xor
push
les
je
arpl
xchg
lods
shrl
stos
jae
dec
outsl
inc
add
inc
xor
add
mov
aad
push
push
ret
or
xor
outsb
stc
into
dec
loopne
mov
lods
mov
popa
ds
cwtl
dec
sbb
jo
js
loop
xor
dec
lret
dec
jmp
dec
sub
jmp
cli
inc
fs
mov
jecxz
std
dec
jne
filds
outsb
mov
pop
xlat
std
mov
andl
push
adc
js
test
lock
fimuls
xor
cld
mov
ficomps
sahf
repz
push
out
out
push
pop
inc
mov
lods
mov
inc
mov
dec
sub
push
lds
add
mov
xor
or
dec
nop
loopne
test
xor
mov
andb
dec
outsl
lods
inc
clc
pop
addb
loop
cmp
mov
jo
push
cld
into
mov
cmp
iret
sub
xor
lods
jge
mov
xchg
movsb
sub
in
ds
add
nopl
pop
ficompl
inc
xchg
les
xor
lods
stc
jo
mov
cmp
inc
sub
stos
sub
cmpsl
xchg
mov
iret
add
jo
loopne
ficoml
imul
fcmovnbe
in
sti
or
xchg
ret
push
push
dec
mov
and
pop
leave
test
jnp
xor
sbb
aas
les
les
arpl
push
idivb
add
aaa
dec
mov
std
jg
insl
movsl
ja
pop
aaa
jne
lock
nop
xor
lods
loop
xchg
xchg
je
dec
and
sti
ds
mov
jbe
xor
pop
mov
push
add
lret
pop
push
int
sub
jge
mov
push
xchg
sbb
xor
adc
enter
movb
test
add
push
or
cmpsb
scas
fwait
test
adc
dec
inc
xlat
sbb
push
xor
adc
add
dec
nop
add
jl
sbb
push
xor
sahf
push
ljmp
test
mov
in
mov
daa
cwtl
emms
push
inc
scas
mov
and
cmp
jne
fs
ret
int3
mov
scas
add
mov
pop
fcom
imul
dec
lods
aaa
inc
orb
xor
push
ret
add
sbbl
mov
inc
or
inc
out
in
cmc
and
mov
shll
in
cmpsl
xchg
fsubs
rcrb
push
cmp
imul
cmp
in
cmp
std
xor
or
and
inc
sahf
loope
loop
sub
mov
pop
cmp
xchg
fucomp
mov
jl
repnz
mov
sahf
fldl
lds
mov
push
jle
mov
and
jns
imul
sahf
rclb
jmp
sub
mov
xchg
in
and
jnp
fcompl
push
push
stos
enter
jb
out
adc
or
stc
xchg
lcall
jbe
sub
xchg
sub
je
add
lcall
decl
roll
push
add
push
adc
sbb
and
imul
out
notb
xchg
adc
lret
aam
sbb
cmp
sti
imul
cmp
sti
mov
mov
xchg
mov
sub
pop
insl
jg
and
loop
faddl
xlat
adc
dec
xlat
jge
mov
or
fdiv
in
mov
mov
mov
fdivl
mov
pop
sti
test
testb
pop
pop
or
lods
cld
lahf
or
ljmp
jg
inc
adc
sub
xor
test
outsb
and
cmpb
sub
ljmp
sahf
icebp
push
cld
dec
push
xor
repnz
xor
xor
mov
jecxz
pop
sbb
sbb
test
xchg
xor
xchg
xchg
push
push
and
xchg
cmp
mov
xchg
out
dec
add
cltd
stos
xor
sub
ds
jno
int
stos
pop
or
sub
mov
dec
or
int3
insb
adc
cmpb
add
mov
sahf
mov
shlb
pop
cmp
xchg
mov
lods
xor
dec
xor
lock
fwait
cmpsb
add
xchg
pushf
pop
xor
jb
xchg
mov
cmpsb
cmp
sub
xor
shlb
push
xchg
mov
push
dec
jno
xor
pop
xorb
sbb
ljmp
push
pushf
sbb
mov
adcb
rclb
inc
add
xchg
imul
repz
sbb
test
out
cmpsb
fsubl
pop
rolb
adc
call
addr16
inc
or
movsb
movsb
out
test
dec
mov
jnp
fidivrl
sbb
adc
mov
jle
subb
shrl
adc
jo
xor
faddl
fcompl
rorb
cmp
add
sub
out
es
fnstcw
jns
xlat
ds
enter
cwtl
dec
xor
sbb
mov
adc
pop
dec
or
adcl
adc
cmp
cmp
pushf
das
push
add
fcoml
test
mov
insl
mov
cmp
add
hlt
insb
lods
addr16
mov
or
xor
xchg
subl
loope
fcomps
outsl
int
ret
gs
inc
and
inc
mov
sbbb
mov
roll
test
xchg
jp
ds
mov
jne
enter
lcall
push
xor
xor
xchg
inc
pushf
mov
push
outsl
xor
fstp
addb
mulb
out
xchg
cwtl
ss
pop
xor
cwtl
mov
loop
adc
adc
pop
mov
dec
fisttpll
pop
cltd
scas
push
inc
addr16
es
jg
push
enter
jle
daa
in
jg
inc
or
nop
leave
mov
scas
daa
iret
stos
inc
pusha
fadd
insb
test
adc
sbb
ds
mov
mov
mov
nop
lgdtl
cmp
mov
xor
push
add
adc
push
shll
xchg
hlt
sub
in
dec
or
enter
cmc
mov
movsl
fisubrs
repz
aas
cmpb
inc
test
dec
jbe
test
faddl
clc
fists
lahf
xchg
stos
sbb
pop
pop
lahf
fnstcw
ret
mov
into
std
mov
mov
fistl
and
adc
or
and
jne
mov
lcall
xchg
xor
push
push
inc
add
addr16
dec
and
aam
mov
movsb
loope
sbb
xor
shrl
ds
lods
cmp
outsl
out
pop
and
dec
popa
push
mov
jns
adc
pop
pop
jno
jnp
shrl
sub
mov
aaa
int
mov
mov
popa
ficoms
loope
pop
or
or
sbb
adc
outsl
jae
and
mov
ljmp
into
push
fcomp
pop
daa
pop
sbb
andb
fisubl
mov
mov
bound
hlt
fcoml
lds
jb
dec
addb
out
scas
ret
mov
or
mov
add
int
mov
int3
lcall
dec
pop
cmp
imul
pop
sub
and
jg
dec
add
sub
sub
movsl
push
ret
fmul
lods
add
add
push
inc
pop
ds
mov
cmp
es
les
pushf
adc
in
int
mov
sbb
call
out
push
jno
pop
pusha
xchg
mov
inc
aam
lea
push
sub
lahf
push
jg
std
ss
mov
aad
sub
and
into
pop
xchg
mov
or
repz
or
popa
incl
pop
data16
imul
add
mov
movsl
sahf
mov
cltd
xor
fnstsw
fs
stc
mov
sarl
ds
sbb
shrl
pop
test
cmpsb
pop
jecxz
add
push
stos
jg
div
gs
mov
mov
dec
dec
es
fisttpl
out
sub
xchg
adc
imul
cmpsb
xlat
xor
jmp
mov
push
sub
lahf
sub
dec
insl
bound
or
fwait
xchg
pop
int
pop
pop
das
inc
sbb
faddl
push
outsb
cmp
test
hlt
push
push
ret
sub
mov
aaa
add
jl
inc
jns
xor
addb
mov
rcrl
sbb
aad
xchg
aas
push
and
xchg
dec
xor
andl
pushf
insl
jmp
xor
jae
and
and
loopne
insb
push
in
mov
push
insl
add
and
cs
sbb
xchg
xor
dec
jns
lcall
insl
fdivl
in
or
mov
sarb
ds
out
pop
mov
int
mov
cmp
jne
scas
inc
push
add
push
pop
xchg
popf
cmp
sbb
push
cmp
sub
push
mov
jecxz
push
lcall
jmp
ja
cwtl
add
sbb
xchg
dec
add
jbe
xor
outsl
mov
jae
test
sbb
aaa
sub
aam
xchg
loop
faddp
imulb
aam
leave
sub
cld
out
dec
mov
stc
pop
dec
jb
or
xor
enter
inc
jnp
push
jno
mov
data16
mov
imul
lds
jg
lea
jo
or
icebp
popf
xorl
mov
rcrb
ss
mov
pop
dec
mov
out
mov
pushf
enter
mov
mov
lea
ret
idiv
sub
mov
sbb
cmpsb
sbb
ja
mov
inc
xor
insl
rcr
fdivs
mov
ret
fnstsw
inc
jle
xchg
mov
arpl
int
or
dec
fadd
lret
jbe
and
xchg
mov
xor
sarb
cmp
dec
rol
fcomps
pop
sbb
sub
mov
ss
mov
clc
rorb
cld
mov
or
clc
mov
push
cmp
pushf
fdivs
xchg
outsl
cmp
adc
lods
add
mov
test
ret
loope
pop
rclb
pushf
test
or
ret
fwait
mov
test
popa
popf
xor
movsb
aas
mov
adc
sbb
jp
int3
jae
mov
imul
std
cmp
mov
fisubrl
imul
mov
cmp
jae
mov
lret
or
adc
dec
ds
idivl
lcall
loop
cltd
mov
add
inc
pushf
add
jno
out
rolb
insb
or
adc
and
inc
adc
in
adc
add
lahf
movsl
mov
arpl
popa
cmp
nop
jge
and
inc
jmp
cli
dec
leave
lock
inc
add
pop
bound
mov
lds
int
out
cwtl
inc
bound
mov
jge
pop
mov
sbbb
adc
cltd
adc
scas
int3
ljmp
push
aas
fisubs
stos
dec
in
pop
mov
dec
test
cwtl
inc
jle
inc
rcrb
xchg
mov
push
add
inc
je
addl
xchg
pop
mov
movsb
fdivrs
push
mov
inc
jmp
aaa
stos
mov
imul
push
fmull
and
and
and
mov
mov
ja,pt
push
out
call
lods
outsb
cmp
cwtl
jle
bound
ficoms
pop
stc
out
scas
lock
or
pop
lcall
jo
push
fisttpl
mov
fisubs
popa
sub
fldl
jnp
add
xchg
stc
pop
push
xorl
mov
daa
jns
cwtl
xchg
enter
insl
popf
shll
shl
ljmp
in
std
push
pop
incb
pop
mov
into
cmpsl
dec
mov
pusha
add
sbb
scas
push
rcrb
in
fisubrs
pop
fsts
xchg
call
pop
rclb
into
or
shrl
stos
cld
cs
sahf
dec
adc
push
test
lret
shll
pop
arpl
adc
mov
mov
adc
sahf
test
push
mov
hlt
fcmovbe
and
and
stos
enter
dec
sbb
or
jmp
mov
add
mov
adc
and
inc
jp
pop
fidivrl
pushf
sti
and
subl
adc
roll
mov
bound
pop
xchg
lea
dec
mov
add
insl
inc
movsb
rolb
jbe
cmpl
ret
inc
repnz
and
mov
or
jp
fdivrs
mov
mov
es
xchg
lods
repz
adc
mov
mov
sbb
inc
dec
jecxz
jecxz
imull
adc
mov
add
jae
adc
pop
push
xchg
fcmovne
out
and
loopne
mov
lret
push
bound
sahf
je
adcl
jecxz
dec
or
cli
aad
adc
not
fidivrs
sahf
mov
call
adc
add
test
enter
dec
mov
into
ss
jp
mov
or
xchg
aaa
fwait
sarb
mov
test
outsb
inc
cli
pop
lds
xor
mov
mov
seta
imul
loope
xor
fcompl
shl
sbb
out
mov
nop
cld
in
icebp
call
inc
xchg
aam
test
xchg
and
pop
jae
mov
lcall
lret
pop
cmc
mov
cmp
mov
lods
cmp
jbe
inc
sbbl
xlat
dec
shrl
lds
and
popl
xchg
jmp
mov
daa
sbb
push
lds
or
jmp
mov
les
mov
cmpsb
lods
in
pusha
mov
fcoml
adc
hlt
test
dec
test
outsl
mov
in
mov
inc
lods
mov
movsb
lods
cltd
aaa
mov
pop
push
mov
orl
inc
cmp
pop
outsl
xlat
pushf
lcall
jae
jmp
cli
or
ljmp
in
pop
repnz
aaa
dec
push
cmp
data16
sub
gs
adc
insb
dec
dec
mov
adc
imul
mov
mov
sbb
imul
mov
inc
mov
cmp
adc
xchg
mov
imul
arpl
jbe
daa
fdivrl
xchg
xchg
sub
lds
xchg
inc
adc
pop
data16
ljmp
mov
dec
inc
push
faddl
arpl
sub
loope
mov
insb
hlt
loop
push
in
daa
stos
scas
jbe
cmovbe
jl
insl
or
cltd
and
xchg
adcb
or
loopne
xor
mov
loope
popf
mov
fcoml
sbb
movsb
outsb
jnp
lds
pusha
mov
mov
add
xorb
test
add
push
mov
mov
add
and
inc
xchg
std
xchg
scas
dec
push
mov
and
imul
test
push
popa
mov
mov
mov
adc
stos
imul
aad
mov
hlt
mov
das
inc
addl
aas
jge
inc
push
and
out
leave
test
stos
jns
adc
xchg
or
les
fnstsw
out
adc
inc
cmp
xchg
inc
or
rclb
sub
jo
pop
sbb
dec
pop
mov
out
pop
cmpsl
pop
imul
mov
int
decb
imul
test
push
aam
adc
adc
push
aaa
outsb
cmp
push
out
pop
aas
xor
push
clc
inc
pop
jecxz
mov
enter
jecxz
jne
test
test
xchg
xchg
xor
and
ret
std
cmp
jo
aam
pushf
lods
add
jl
push
push
jnp
xchg
cmpl
sti
and
dec
aaa
cld
pop
inc
push
imul
pop
in
dec
mov
loop
ret
ss
stc
popa
mov
or
xchg
and
pop
add
lret
mov
mov
shrl
int
leave
out
ja
push
pop
xor
add
push
aas
fiaddl
and
fucomp
call
icebp
mov
test
pop
gs
ret
push
inc
mov
into
outsb
int
loop
js
aas
pop
out
push
add
xchg
je
outsl
adc
iret
paddw
push
push
xor
jge
fwait
sahf
adc
scas
jmp
adc
icebp
mov
test
stc
push
lea
jecxz
jmp
mov
xor
jmp
shlb
mov
push
movsb
out
add
add
outsb
jb
adc
mov
mov
das
adc
imul
mov
inc
stos
in
cltd
mov
les
fnsave
add
sti
xchg
mov
inc
test
fwait
xor
lahf
fidivs
pop
mov
sub
fidivrl
push
movsl
pop
xor
cltd
test
cmpsb
jge
add
je
stos
push
cmp
add
pop
std
add
mov
mov
gs
mov
xor
dec
sahf
xchg
lret
data16
cmp
dec
fcomi
mov
add
xor
mov
lods
pop
addr16
xchg
leave
dec
sbb
stos
scas
fldcw
daa
stc
and
xlat
jg
lret
adcl
xor
out
mov
cmc
int
lahf
dec
inc
loope
subb
stc
test
sbb
fmull
pop
and
push
sahf
jne
rorb
pop
sti
xor
orb
in
and
pop
or
int
es
or
add
cld
inc
aad
inc
aaa
scas
fwait
xchg
and
mov
aas
pop
pop
inc
push
xchg
cmp
dec
dec
lgs
cwtl
je
testl
xchg
dec
in
fwait
sbb
cs
lods
outsl
cs
push
sarb
cltd
ficompl
push
jle
stc
pop
xlat
out
call
xor
inc
ja
mov
out
in
pop
push
addr16
mov
add
push
add
dec
repz
and
and
inc
mov
insl
pop
inc
sahf
dec
sub
in
push
xchg
testb
and
jecxz
ds
js
dec
sbb
xorb
and
in
cmpsb
xchg
mov
pop
fwait
movsl
jmp
hlt
jp
or
xchg
sahf
dec
mov
dec
nop
adc
lcall
mov
jmp
shlb
stos
adc
ljmp
scas
lea
add
add
xchg
ja
stc
jbe
vpsubq
movsl
inc
or
sub
insl
icebp
mov
dec
popa
popa
and
fdivp
aam
ss
pusha
ss
xchg
lea
aaa
dec
cwtl
aam
addr16
imul
mov
mov
jmp
test
push
mov
mov
in
adc
jp
movsb
mov
jbe
rorb
and
lret
inc
or
sub
mov
fs
cmp
cmc
sub
or
mov
shlb
js
dec
jbe
out
icebp
andl
lds
icebp
mov
into
insb
fldenv
push
inc
mov
or
sub
inc
mov
cmp
rolb
fimull
inc
push
inc
xlat
outsl
xor
lods
push
xchg
testb
mov
loope
push
sub
stos
ss
add
into
sub
jnp
in
push
pop
add
gs
adc
jae
aad
test
push
mov
jns
les
mov
and
popf
adc
pop
aaa
and
subb
jns
nop
xor
filds
sti
repnz
out
lods
clc
cld
pop
inc
rorl
sahf
mov
sub
push
mov
mov
out
jecxz
and
mov
fmuls
jp
xor
or
das
out
push
and
scas
jecxz
sbb
je
je
and
xor
movsb
pop
lods
jecxz
fwait
pop
in
push
daa
ret
out
xor
clc
push
pop
sbb
dec
mov
sub
shll
rorb
popa
das
rolb
fcomps
inc
mov
sbb
jmp
inc
aad
jle
pop
mov
jmp
add
cmp
aad
and
jge
sub
cmp
cmc
lods
in
adc
gs
xchg
push
not
sub
jmp
jns
jmp
add
scas
rclb
pushf
sub
daa
cmp
pop
xor
mov
adc
arpl
push
ds
les
cmc
sub
mov
aas
push
sbb
inc
jecxz
add
clc
int3
test
push
idiv
xor
xor
push
and
and
int
cld
inc
rcr
imul
loopne
sahf
or
mov
xor
rclb
xchg
mov
jge
sbb
mov
add
jg
mov
cmpsl
or
sub
cli
xlat
es
popf
sub
jl
rcr
and
rorl
dec
mov
mov
pusha
xchg
mov
jmp
sbb
add
je
jae
mov
fdiv
movsl
leave
mov
adc
cmp
push
jnp
loope
xchg
outsb
xchg
in
xor
in
test
inc
pusha
inc
xor
and
inc
add
mov
sbb
push
push
push
cmpsl
pop
int3
pop
mov
sub
jne
cmc
jge
mov
jmp
imul
loop
dec
adc
repnz
or
xor
cmp
lods
push
mov
mov
adc
cmp
in
sub
push
or
push
and
cmc
popa
into
mov
divsd
iret
imul
andl
jmp
push
sub
out
sbb
push
mov
iret
aaa
pop
cmp
add
adc
xor
pop
mov
sbb
cmp
mov
or
les
or
xlat
and
sub
push
or
xchg
adc
inc
gs
add
dec
cmp
or
stc
lock
push
push
call
xor
adc
fistl
dec
or
xchg
mov
pop
scas
sti
adc
push
pop
outsb
mov
inc
lret
xor
add
cmp
mov
das
and
jno
adc
test
inc
in
xlat
out
ss
jl
ret
pop
jno
sbb
and
mov
mov
loope,pn
mov
addr16
mov
push
xor
cmp
inc
test
xchg
xlat
or
mov
mov
push
ret
jg
sbb
cld
shrl
ret
xchg
or
and
bound
wrmsr
or
push
call
mov
clc
lret
jae
adc
mov
and
popa
imul
div
ljmp
mov
mov
in
scas
sub
dec
mov
dec
push
inc
push
sub
add
sub
cmp
xor
mov
cmp
xchg
testb
sub
dec
sbb
inc
cs
sbb
mov
add
std
sbb
test
push
inc
fs
dec
dec
inc
outsb
nop
push
popa
les
xlat
jmp
inc
cltd
cmc
add
and
or
and
mov
sbb
into
inc
add
mov
pop
jo
aad
loope
xchg
cmp
mov
in
shrb
stos
test
cmp
mov
popf
cmp
ljmp
lock
ja
std
push
jno
mov
sub
pop
xor
cmp
xchg
or
les
hlt
sub
mov
lcall
fdivl
inc
mov
mov
repnz
xor
push
mov
mov
bnd
adc
or
xchg
std
dec
xchg
movsl
inc
lds
and
bound
lea
sbb
cmpsl
inc
pop
inc
subb
lahf
pop
loop
leave
out
mov
cltd
cmpsl
cmp
in
xchg
daa
mov
rolb
test
xor
pop
cmpsb
outsl
jle
fisttpll
in
aas
xor
xor
in
push
adcb
dec
xchg
sti
orl
in
lcall
int3
shll
push
xchg
dec
push
in
ret
icebp
sub
fsin
je
rcl
and
jno
lock
lcall
hlt
xchg
dec
push
sub
pop
das
add
dec
test
std
inc
ljmp
aad
ret
or
cs
dec
aad
ds
sbb
cs
int3
adc
jno
cmpsb
je
adc
nop
pop
cmp
xor
lods
out
add
stos
jmp
cmc
icebp
add
lods
pop
test
pop
lret
mov
in
pop
fnstenv
int3
jbe
add
cmpsl
and
into
cmp
ljmp
dec
xchg
add
nop
push
js
test
push
jg
addr16
cmp
sbb
fidivrs
adc
ja
xor
sti
je
mov
insl
mov
mov
xor
push
mov
add
sub
and
ret
fbstp
ss
mov
inc
je
arpl
movsl
gs
sub
or
dec
xor
push
in
notl
mov
mov
sahf
or
fcom
es
adc
scas
jns
das
loope
adc
sub
xor
jl
cltd
lret
cvtps2pd
mov
mov
and
icebp
lock
insb
andb
in
push
cmpsb
pusha
xchg
test
mov
minps
sarb
inc
das
mov
dec
sub
ss
addr16
popa
daa
cli
ds
arpl
loop
pop
mov
jecxz
cmp
data16
lods
push
vpshufd
dec
test
push
rol
enter
sub
or
cli
pop
dec
test
addr16
mov
dec
jns
mov
andl
xor
rcll
push
adc
push
movsb
xchg
or
mov
sahf
inc
sbb
and
jl
fmul
sub
andl
js
inc
or
cmp
mov
gs
mov
cmp
popa
pop
jo
out
cmp
inc
or
jne
add
icebp
mov
mov
out
pop
test
xchg
test
sub
aaa
jl
sub
das
ljmp
mov
inc
push
ja
aam
dec
cmpsl
sbb
adc
push
pop
pop
aam
ljmp
xchg
ljmp
clc
movsb
testb
mov
add
bound
pop
popa
dec
lods
sbb
inc
jmp
inc
pop
push
mov
in
and
cwtl
fs
test
loop
mov
sub
mov
mov
nop
adc
xchg
pushf
add
aad
movl
das
fld
inc
mov
cmpb
and
push
cmp
pop
call
sbb
xlat
fnsave
add
lret
outsb
int3
sbb
rcl
xchg
int3
mov
call
push
mov
add
cmp
add
push
xor
xchg
leave
pop
pop
insl
sahf
xor
mov
push
inc
add
imul
mov
loop
or
push
jbe
sti
sbb
xchg
mov
adc
pop
nop
adc
lods
mov
xchg
movsb
int
mov
mov
sub
inc
fsubs
sbb
sbb
loop
adc
std
jle
out
cmp
or
mov
pop
jg
xchg
scas
aas
and
xor
xchg
aaa
hlt
jecxz
ror
out
ficomps
adc
pushf
xorb
hlt
lahf
or
xor
xlat
xor
jle
orl
imull
and
dec
push
sar
enter
mov
fimuls
in
cs
mov
ffreep
fdivrs
push
jo
xchg
loope
je
mov
adc
ss
outsb
iret
pop
adc
pop
push
xchg
aas
dec
mov
iret
scas
into
sti
sarb
mov
and
loop
sub
cli
test
xor
push
fsubl
and
gs
repz
jmp
js
lahf
cmpsb
push
adc
mov
into
mov
pop
sarb
jae
jmp
daa
shll
xchg
cmp
loope
pop
leave
rcrl
adc
push
xchg
pop
jmp
sbb
movsl
pop
cmpsl
cmp
xchg
fiadds
dec
mov
out
xchg
negl
mov
inc
lock
or
jno
mov
push
lock
cmpb
in
out
subb
adc
dec
add
inc
sahf
das
mov
dec
daa
push
fiaddl
jp
cmp
xchg
mov
xor
lea
add
jmp
lods
xchg
jns
mov
and
push
push
out
add
ret
loope
jl
in
inc
push
insl
mov
xor
pop
icebp
iret
psraw
sub
std
addr16
mov
outsb
aaa
xchg
inc
loope
lret
movsb
xchg
xchg
and
cmc
xchg
push
xor
inc
adc
dec
sbb
mov
push
aaa
or
icebp
ret
push
add
cmp
lock
mov
out
mov
mull
xchg
xchg
adc
enter
jbe
mov
shrl
xchg
mov
mov
clc
dec
call
sbb
inc
push
and
mov
mov
cmc
mov
into
push
mov
xchg
loop
push
mov
insb
inc
push
xor
ret
sub
adc
adc
push
mov
inc
arpl
jo
xchg
bound
sub
in
jnp
cmp
or
adc
xor
and
pop
sti
pop
xlat
mov
fsubl
int
xlat
mov
das
cmp
inc
rol
mov
mov
rcr
ljmp
lea
loopne
stos
jnp
test
test
xchg
push
mov
leave
or
sahf
call
xchg
jp
jmp
in
jl
rorl
adc
jne
xchg
notl
out
lea
iret
mov
cmp
js
enter
fs
pop
or
inc
repnz
jnp
add
imul
fidivrs
into
mov
sub
shr
out
mov
loop
dec
xchg
int3
pop
push
and
mov
test
jbe
lods
and
data16
bound
cltd
dec
pop
mov
pop
and
pop
je
pusha
cmp
addr16
call
stc
xchg
add
adc
jae
daa
jns
out
arpl
fst
inc
inc
sbb
fsub
stc
jle
push
jecxz
into
arpl
jl
lods
scas
inc
lcall
imul
jnp
insl
inc
sbb
mov
sbb
mov
roll
pop
into
xorl
mov
cmp
xorl
dec
lds
les
xor
or
xor
sti
out
mov
mov
in
int
movsl
es
in
cmpsb
sbb
cmp
push
xorb
inc
push
or
dec
and
dec
test
xor
out
repnz
dec
fiadds
or
fisubl
xor
mov
push
ss
in
add
or
mov
lock
mov
js
test
add
ljmp
xchg
outsb
adc
shl
es
ds
and
outsb
jnp
sub
push
xor
pop
cmpsl
jmp
xorb
adc
mov
mov
repnz
and
out
test
fsubs
add
in
push
data16
cltd
loopne
out
jecxz
scas
stos
jo
icebp
sbb
push
or
xlat
in
and
das
lret
enter
dec
adc
push
mov
stc
dec
sbb
in
sub
cmp
push
lret
jns
test
pop
lea
adc
test
xor
dec
outsl
out
addr16
jge
xorl
leave
mov
shr
enter
mov
frstor
adc
inc
in
or
fldt
cwtl
outsb
sbb
lret
inc
fistpll
xor
fcoml
fcoml
jg
ja
and
sbbb
push
lcall
shrb
pop
push
inc
mov
mov
orl
and
loop
cld
mov
add
imul
xchg
test
jle
jle
sbb
pop
xchg
bound
mov
xorb
xchg
mov
cmp
mov
add
fdivrp
cmp
in
jno
xchg
fnsave
push
lret
bound
ss
push
or
xor
jno
popl
pop
mov
popa
jecxz
test
pop
cmp
rclb
mov
inc
ja
mov
loop
xchg
into
cmpsl
movsb
lret
out
push
and
mov
cmp
jo
pop
xchg
cmp
int
int3
cmp
mov
loop
jnp
mov
stc
rdmsr
clc
fistps
jle
incl
insl
es
dec
jo
sbb
cmpl
ret
pop
or
dec
jae
mov
je
out
inc
fs
jp
orl
loope
popf
shr
sahf
call
sar
pop
or
das
mov
lret
cmp
push
imul
mov
and
notb
in
imul
mov
dec
bound
jle
jno
das
cmpsl
aad
pop
sub
imul
push
shrb
daa
mov
xchg
leave
rol
in
fdivrl
fistps
lods
in
add
adc
lock
jle
xchg
aas
loop
jge
scas
mov
xor
aas
add
xor
pop
cmp
xor
adc
cltd
or
adc
out
cmp
jne
inc
mov
jecxz
es
iret
or
pop
scas
mov
int
lods
js
icebp
subl
jecxz
es
out
push
ja
and
and
mov
jle
cmpsb
int3
push
arpl
loope
xchg
out
roll
inc
fcoml
sub
sbb
call
fistps
std
aaa
cld
rcr
fdivr
xchg
lods
insl
mov
xchg
sub
fistpl
sar
push
mov
outsb
sbbl
mulps
outsb
xor
divl
lahf
mov
mov
mov
jb
out
push
scas
cmpl
cwtl
and
mov
sub
movsl
icebp
jo
pop
lretw
iret
dec
add
mov
std
sub
sub
ja,pt
push
sub
mov
popa
subb
and
aad
push
xor
mov
jg
xchg
cmp
jns
dec
mov
pop
push
adc
inc
push
mov
das
add
out
jle
inc
ret
jo
pop
jl
outsl
cmp
sbb
adc
push
xor
cwtl
clc
add
into
jo
rclb
jp
mov
xchg
jecxz
xchg
lods
frstor
and
adc
jo
popf
push
fcomp
iret
dec
out
cltd
jle
outsl
add
fs
push
xchg
cmc
ja
pusha
push
stos
inc
inc
sub
mov
hlt
cmp
jns
loopne
lods
repnz
imul
lds
fsubl
sbb
xor
fs
or
or
add
adc
and
mov
jo
jmp
pop
inc
cltd
inc
mov
in
pop
inc
xchg
stos
daa
jno
cmpsl
or
popa
add
mov
add
cmpsb
loopne
nop
and
xchg
call
lods
inc
scas
out
cmp
mov
dec
movsb
outsb
mov
inc
xor
icebp
dec
aas
jmp
jmp
es
aaa
sti
sbb
sub
stos
adc
push
call
test
sahf
sub
lret
fildll
jg
neg
xchg
xchg
iret
movsb
in
add
xchg
jo
aaa
xchg
stc
daa
scas
hlt
sub
aam
outsl
mov
aad
clc
mov
or
mov
scas
sbb
mov
jmp
and
jo
jns
jge
movsl
mov
dec
outsb
jne
outsl
jp
hlt
and
dec
filds
mov
jae
or
std
mov
stc
js
push
call
subb
dec
clc
stos
cmpsl
xchg
sub
outsb
lcall
push
clc
mov
xchg
aad
pop
push
fistl
pop
pop
jnp
dec
lret
clc
sahf
add
test
movsb
xlat
xor
arpl
sahf
test
push
mov
jp
aad
iret
jp
push
ret
ret
jecxz
xchg
push
push
ss
pop
or
sbb
scas
pop
mov
les
cmpsl
lcall
jae
cmp
std
xchg
jecxz
pop
inc
sti
and
mov
shl
addr16
and
xchg
pushf
mov
aad
test
addr16
jmp
movsb
in
dec
repnz
cmp
inc
xor
fstpt
lahf
add
fdivs
sub
test
push
popa
inc
jge
into
movsb
nop
call
mov
mov
mov
inc
add
mulb
inc
rclb
add
scas
loop
adc
add
adc
scas
sbb
cmpsl
inc
loop
xchg
out
cltd
mov
mov
data16
pop
jp
lret
sti
repz
sbb
adcb
or
cmp
jnp
dec
push
test
add
loopne
jmp
sub
mov
or
cmpsl
push
and
pop
pushf
mov
cmp
std
out
push
int
add
nop
flds
or
subl
or
out
or
scas
xlat
icebp
cmp
out
push
inc
and
add
notl
mov
adc
out
mov
loop
fisubs
and
dec
inc
into
sub
jl
mov
ret
les
leave
pop
mov
or
in
lea
xor
inc
repz
out
adc
cmpsl
inc
imul
pop
mov
jmp
popf
dec
or
cmp
cli
imul
movsl
xchg
or
push
jns
test
cli
inc
jmp
mov
shrl
add
pop
out
jg
push
xor
packssdw
and
mov
sbb
imul
repnz
hlt
daa
outsl
aas
sbb
mov
jns
mov
add
mov
inc
add
ja
or
fistl
int
jae
mov
enter
adc
repnz
pop
and
outsb
fistpll
xlat
inc
xchg
adc
arpl
ret
ret
or
gs
mov
adc
xchg
inc
insl
mov
xchg
mov
push
and
jg
movsb
notl
xor
dec
pushf
mov
stos
fistpll
add
sarb
dec
push
popa
cmp
adc
mov
adc
xor
push
cmpsb
jns
je
mov
loop
je
scas
or
sub
add
fildl
and
dec
lcall
inc
mov
ficomps
xchg
and
jle
adcb
inc
inc
in
mov
fsubrs
cs
std
neg
and
mov
mov
dec
jle
or
xchg
in
jmp
pop
sub
clc
repz
shll
mov
les
sti
aam
fwait
cmpl
ret
sti
jle
cmp
pop
push
pop
cmp
jl
scas
mov
pop
lods
cmp
or
push
pop
dec
and
addb
ss
dec
cmpsl
das
rcll
or
arpl
xchg
or
aaa
and
lcall
lock
add
outsl
out
xor
in
scas
mov
sbb
dec
push
inc
nopl
xchg
push
sbb
cmp
push
add
shl
daa
stos
inc
dec
mov
in
push
out
daa
xlat
outsl
sub
addb
imul
insb
fldt
rorb
sbb
pop
push
mov
cmp
jmp
test
xchg
lods
test
add
xchg
mov
cld
outsl
jae
jns
sub
mov
push
pop
lea
js
xor
imul
outsb
or
addr16
push
push
xlat
inc
mov
push
push
and
test
stos
or
cld
addl
in
mov
sub
insl
xchg
inc
and
xor
jge
mov
or
sub
rcrb
adc
dec
mov
sbb
jle
subl
mov
addl
lods
pop
repnz
sbb
cs
xchg
stc
push
stc
xchg
push
stc
cmp
mov
mov
es
mov
push
stos
mov
and
testl
xor
rorb
and
call
cld
test
push
into
push
mov
xor
or
xchg
sarb
cmp
mov
ret
enter
inc
std
mov
mov
sarl
dec
fcompl
pop
lock
scas
jg
jl
outsb
repz
push
add
cs
loopne
ds
ljmp
in
push
insb
bnd
adc
pop
rorb
enter
mov
aad
mov
mov
dec
sbb
inc
mov
daa
mul
xor
jecxz
xchg
fstl
ljmp
dec
addr16
inc
popl
or
pop
pop
sub
pop
mov
sbb
shl
pop
into
sub
jnp
push
stos
fisubrl
jo
outsl
mov
mov
imul
lcall
dec
out
xchg
or
xor
mov
ljmp
and
or
mov
jecxz
xchg
and
aas
push
add
data16
inc
sahf
xor
adc
in
mov
mov
xor
in
scas
movsl
bound
cmpsl
icebp
cs
cmpsl
sbb
cmp
xor
add
inc
adc
lahf
jae
call
adc
lock
ds
mov
in
icebp
inc
or
lods
out
aam
imul
dec
repz
outsl
out
push
out
movsl
rcll
lds
or
in
lret
dec
mov
pop
xor
dec
xchg
mov
dec
repz
insb
dec
aam
jnp
lea
sti
movb
mov
sahf
es
nop
mov
bound
ja
mov
push
xchg
and
adc
or
loope
jmp
scas
xchg
insb
dec
in
cmpsb
cld
lret
mov
jmp
mov
mov
adc
adc
jb
cmp
loop
push
cmp
inc
mov
xchg
and
dec
mov
cmp
sbb
aam
mov
inc
xor
mov
dec
int
mov
sahf
mov
sti
mov
cmp
push
daa
out
and
jle
add
push
xor
push
adc
sti
cs
jae
popa
inc
in
js
add
fmuls
mov
pop
pop
movsl
inc
jge
arpl
jbe
add
sub
xor
stos
sbb
inc
jg
dec
mov
popl
test
fdiv
loopne
pop
push
sub
ss
imul
cmpsb
movsl
jno
aad
pop
fcomip
aad
xor
push
xchg
jl
fstpl
push
cmpsl
sbb
cli
in
btr
add
cmpsb
or
mov
aam
sbb
xchg
int
and
icebp
test
dec
test
add
test
test
les
stos
mov
pop
fsubr
dec
xor
dec
sub
inc
dec
mov
sbb
test
ss
mov
insb
mov
out
dec
mov
adc
out
mov
loopne
loopne
pop
sub
mov
cmp
addl
or
sub
pop
insl
mov
pop
cmp
dec
xor
cmp
mov
push
std
mov
jge
adc
dec
mov
fs
pop
pop
repnz
addr16
jmp
mov
xchg
push
sub
aad
insb
daa
lret
or
js
ret
out
data16
push
hlt
add
ret
out
xchg
add
fld1
loopne
xchg
mov
hlt
and
cli
push
js
xor
cmc
je
lods
mov
aaa
jecxz
dec
xor
jmp
cmpsb
mov
xor
push
les
je
cmp
mov
mov
in
fwait
cs
stc
xchg
dec
sub
gs
test
mov
mov
push
mov
mov
inc
sti
test
mov
inc
sbbl
pop
cmpsb
cmp
out
dec
rcrb
mov
stos
jbe
inc
shll
lret
mov
push
mov
repnz
inc
push
out
fnstsw
stos
pop
add
pop
test
and
test
out
add
scas
cwtl
and
pop
and
gs
data16
push
push
cmp
sub
pop
and
jge
mov
adcl
out
xor
inc
mov
adcl
dec
fists
stc
mov
popa
sub
icebp
xchg
jmp
mov
pop
inc
adc
orb
cmpsl
andl
pop
xchg
dec
and
inc
add
insb
and
push
xchg
sub
sbb
mov
xchg
add
sub
add
inc
xor
inc
daa
stos
mov
lock
out
inc
fisttps
cmpsb
sbb
sbb
insl
divb
fdivs
scas
xchg
push
out
mov
push
les
shrl
jb
cli
xchg
jmp
pusha
mov
out
js
iret
jmp
fcos
pop
bound
and
cwtl
or
sbb
xor
xchg
bound
dec
repz
aam
add
add
xor
or
push
scas
add
pop
or
loop
incl
or
and
pop
stc
mov
xchg
pop
mov
fstl
and
sbb
jo
inc
bound
mov
outsl
pop
xor
or
mov
add
sbb
cmp
add
adc
hlt
jg
inc
xchg
es
cld
xchg
lods
testb
aaa
enter
repz
into
jle
test
pop
test
lret
xchg
fsub
push
loopne
imul
cmp
or
xor
int3
jns
in
filds
popa
lahf
sti
std
sti
fsubrs
push
push
pop
dec
mov
xor
inc
or
mov
mov
fcmove
push
adc
adc
enter
push
outsb
mov
add
inc
inc
nop
xorb
mov
fsubs
cmc
cmp
jo
cmp
dec
dec
sti
jge
sahf
mov
enter
dec
les
push
mov
sub
jp
cmp
mov
add
mov
popa
popa
daa
dec
ret
push
or
push
pushf
mov
sub
push
je
aam
bound
sbb
add
xchg
mov
idiv
inc
es
lahf
loope
cmpsb
std
jo
int3
je
jg
ds
push
outsb
push
movsb
lret
push
std
dec
hlt
xlat
in
es
stos
fidivrl
popa
add
lock
pop
or
fwait
add
or
mov
lods
and
jo
in
enter
jb
xchg
mov
imul
roll
in
scas
sbb
stos
mov
dec
cmp
fscale
orb
push
xor
aam
fisubs
aad
jge
call
push
push
pop
or
mov
ja
iret
sub
not
push
fldenv
loopne
adc
mov
adc
bound
stos
sbb
rorb
fwait
insl
lcall
outsb
int
test
adc
out
cli
sub
aaa
mov
xchg
adc
jg
shll
out
icebp
sbb
inc
cld
clc
push
aad
test
test
add
in
xchg
jmp
lahf
pop
leave
out
xchg
out
test
hlt
ljmp
mov
mov
jp
cli
ret
out
xchg
or
cltd
push
or
ljmp
stos
mov
cmp
clc
cmp
xchg
lret
push
out
push
xchg
inc
xchg
dec
inc
out
pop
and
inc
lock
jmp
test
out
or
in
mov
push
mov
add
pop
dec
adc
mov
cli
jmp
dec
push
gs
clc
inc
ja
lods
aam
jbe
out
cwtl
inc
fsts
fsubrs
aaa
repz
in
push
leave
and
inc
dec
jae
in
add
mov
dec
sbb
adc
fwait
xor
mov
inc
xor
rorl
outsl
xchg
pop
jmp
inc
popa
cli
sub
lret
xlat
push
sub
xchg
cmpb
add
stc
pop
jb
sub
inc
pop
mov
sbb
jmp
push
ds
push
fcoms
std
aam
lods
jb
cmp
adc
xor
adc
icebp
xor
js
outsl
call
pop
adc
mov
lock
cmpsl
push
mov
add
add
or
popa
sbb
add
add
loopne
sub
dec
push
int
repnz
stos
sub
sbb
dec
daa
or
mov
stos
divb
push
fistpl
and
jns
inc
push
imul
sub
push
cmc
shll
jle
lea
mov
loopne
or
push
andb
push
inc
adc
mov
sbb
pop
lds
aam
and
push
or
out
mov
stos
mov
rcrl
or
add
int3
fnstcw
imul
jl
add
mov
in
repnz
adc
mov
jae
adc
imul
add
ds
sti
pop
push
xor
mov
cmp
into
bound
hlt
jp
push
pushf
lds
les
loopne
dec
jo
and
fidivrs
jb
rcll
push
sti
jge
pop
xlat
test
mov
push
mov
xor
ds
xchg
sarb
repnz
mov
sbb
cmpsl
out
mov
icebp
js
dec
and
and
cmp
dec
ljmp
les
mov
push
lret
adc
lods
jp
out
inc
sub
mov
jmp
sbb
repz
sbb
xchg
xchg
das
cli
dec
or
in
adc
mov
sub
lds
mov
mov
sti
mov
inc
sub
in
sub
push
daa
jp
pop
js
es
push
movsl
aaa
outsb
lret
push
jl
inc
mov
mov
mov
shll
insl
and
add
test
imul
fsts
mov
dec
jbe
and
sub
shrb
cmp
xor
adc
inc
outsb
cs
enter
mov
into
adc
fs
popa
sub
pop
test
lods
push
or
lds
test
adc
push
sub
dec
notl
or
outsb
mov
jl
xchg
jecxz
push
sbb
xlat
ljmp
sub
inc
imul
stos
jge
mov
and
mov
sbbl
mov
jo
test
cltd
adc
lahf
xchg
inc
js
and
adc
cmp
test
sbb
test
pop
imull
sbb
shrl
wrmsr
jl
je
inc
mov
ljmp
adc
fnop
fisubl
fldcw
mov
xor
or
pop
sbb
icebp
dec
fmul
addr16
add
cs
xchg
das
rcll
imul
pop
movsb
jmp
dec
mov
cmp
in
jp
mov
lret
add
cs
or
das
jbe
stos
push
pop
cs
shlb
jno
xor
or
sbb
pop
and
adc
in
xor
lahf
iret
test
and
and
inc
jg
rcrb
mov
adc
rolb
out
mov
or
sub
ja
lahf
xchg
bound
or
xchg
and
out
xchg
adc
movsb
dec
shlb
das
and
lea
sbbb
xchg
jge
mov
mov
xlat
jae
call
dec
fwait
lock
pop
test
scas
push
out
or
inc
leave
jmp
fwait
je
push
sti
fsts
or
ja
insl
imul
ss
insl
sbb
outsb
sahf
xor
sub
xchg
jmp
pop
jl
pop
jno
mov
push
std
push
imul
test
nop
shrb
mov
into
mov
jb
lods
mov
xchg
and
or
mov
repz
sahf
ja
xchg
je
or
imul
mov
mov
adc
inc
ja
jecxz
push
lock
pop
jae
sub
sbb
pop
add
rorb
jae
add
or
xchg
dec
ret
sbb
testl
push
jbe
mov
ret
mov
xor
stos
xchg
jnp
pushf
fisttps
pop
test
and
mov
shll
mov
dec
mov
loope
pop
pop
sub
lock
adc
push
scas
xchg
and
add
mov
mov
inc
imul
adc
aas
push
inc
xor
mov
fnsave
sbb
loope
push
mov
xor
jo
jnp
dec
sbb
dec
pusha
sbb
add
mov
pop
je
xchg
stos
fnstenv
sbb
jbe
mov
jecxz
lea
test
int
les
inc
cmp
and
dec
xchg
push
inc
subb
jecxz
add
ret
orl
ficompl
xchg
xchg
add
imul
fstpt
ficoml
xchg
adc
mov
fistpll
fisubl
das
mov
enter
data16
movsl
mov
jbe
dec
outsl
imul
daa
or
ret
test
icebp
mov
sub
jne
and
mov
notb
popa
cmc
test
mov
adc
sub
sbb
pop
push
pop
and
adc
mov
repz
jbe
lods
or
out
nop
xor
sub
push
push
sbb
adc
sbb
test
fadd
idivl
test
sbb
adc
adc
stc
jle
repnz
aad
or
in
popa
and
fisttpl
decb
cs
jne
adcl
xchg
ss
repnz
mov
push
push
pusha
stos
push
scas
mov
adc
loopne
or
ljmp
jae
aam
ja
add
push
mov
cs
jbe
in
mov
je
test
jle
arpl
adc
notb
jmp
mov
cmpsl
adcl
outsl
pushf
cmp
aad
mov
lods
push
fidivrl
cmp
daa
imul
sub
ret
stc
fiadds
sub
push
dec
mov
adc
jg
jl
pop
cmp
push
bound
loope
sub
in
xchg
cwtl
push
repnz
cltd
inc
cmp
lea
int3
jb
mov
pop
sbb
push
mov
push
adc
mov
aam
rorb
into
in
push
aam
sti
xchg
in
enter
sub
ret
inc
insb
push
push
int
inc
mov
inc
cmp
sub
and
ja
mov
and
cli
daa
mov
pop
push
lcall
jmp
icebp
sub
mov
popf
mov
sti
xor
xor
in
shl
jae
or
test
xor
fcmovne
jle
cmp
imul
hlt
test
push
mov
add
imul
aaa
shll
xchg
dec
fisubrl
cltd
ljmp
insl
inc
out
repz
or
mov
or
mov
gs
push
push
or
dec
lcall
add
movsl
xchg
fcoms
lea
into
rcrl
dec
dec
and
jecxz
lea
clc
push
mov
outsl
mov
and
cmp
push
out
jg
in
jb
pop
dec
cld
insb
fwait
outsl
std
or
pop
lock
add
ret
or
adc
dec
add
stc
sahf
xor
pop
movsl
jae
push
and
es
out
aam
adc
aam
hlt
fwait
aas
ds
sub
ja
sbb
popa
lock
enter
scas
lods
inc
jnp
sub
sbb
mov
xchg
aam
xchg
mov
cmpsb
pop
fs
out
push
pop
add
movsb
jmp
mov
cld
cwtl
pop
insl
and
int3
mov
mov
mov
cs
adc
lea
xchg
jns
push
and
dec
and
movsb
dec
incl
lods
mov
inc
push
xchg
es
jo
insb
loop
out
scas
inc
imul
out
adcb
push
and
sbb
outsl
aam
mov
int
pop
stos
dec
in
divb
adc
in
es
andb
int
inc
xchg
fsin
push
push
push
jl
lock
jl
out
por
inc
jg
add
imull
sbb
push
or
lock
frstor
sti
dec
gs
jge
and
popa
aam
lret
mov
jae
fisubs
push
and
hlt
push
movsl
dec
ficoms
repz
pop
cmpb
pop
xchg
jge
ljmp
movsl
daa
dec
push
jb
lcall
adc
scas
add
daa
dec
xor
ss
test
and
xchg
test
das
mov
jg
ret
hlt
fsub
aad
call
dec
dec
sarl
jno
aam
sbb
mov
pushf
add
iret
inc
dec
and
fnsave
mov
and
je
test
add
sbb
sub
xor
jno
and
and
cld
cli
pop
fisubrl
fnstenv
pop
xor
mov
mov
inc
pop
xor
sub
lret
add
sbb
test
sbb
ljmp
mov
movsl
fsin
cld
pop
jp
std
sub
test
sbb
nop
sbb
push
or
inc
cmp
or
pop
pop
ret
or
hlt
and
pop
lods
and
sub
arpl
sbbb
dec
xchg
xchg
cltd
mov
rol
in
fld
dec
jae
ljmp
or
jo
popf
cmp
shlb
les
sbb
xchg
jb
cld
xlat
stos
aas
cmp
inc
push
testb
test
das
data16
sahf
mov
pop
pop
dec
into
jo
mov
mov
push
add
test
sahf
push
jle
outsl
xchg
xchg
and
nop
push
out
loopne
or
sbb
loope
xchg
xchg
rorl
or
sbb
and
loopne
cmpb
add
cmp
fldl
ds
push
cmp
add
into
or
sbb
lods
in
pop
or
cmpsl
movsl
mov
push
inc
stos
cli
jo
data16
adc
pop
cmp
cmpsb
jecxz
in
or
adc
sub
mov
cwtl
pop
pop
inc
adcb
dec
in
mov
test
outsl
cmpsl
pusha
scas
repz
push
inc
push
push
andl
clc
cmc
add
and
cltd
and
pop
ret
pushf
and
ja
mov
dec
sub
fwait
cld
repnz
push
cmpb
dec
push
hlt
int3
pop
outsl
ds
fsts
pop
push
mov
xchg
push
ret
sub
mov
roll
sub
clc
jb
ljmp
cmp
mov
idivb
jle
adc
add
in
xchg
sbb
sub
popf
in
test
fisubl
adc
test
and
jbe
aaa
lods
sbb
icebp
sub
sar
addr16
adc
xor
sbb
mov
push
sbb
jg
adc
dec
sbb
xchg
mov
push
xor
vandpd
aad
pop
push
jns
mov
outsb
dec
ficompl
dec
mov
test
movsl
mov
adc
pop
imull
rorb
jb
add
xor
lret
rolb
mov
xor
pop
sahf
mov
inc
pop
and
shlb
xchg
mov
loope
inc
cmpsb
in
clc
and
rclb
rcrl
mov
test
sub
int
and
out
xor
ficomps
cmp
in
aam
inc
rcr
aad
xchg
or
fadd
outsb
and
xchg
or
lea
movsb
fildl
xchg
clc
jg
cli
lock
mov
cld
in
xchg
pop
mov
rcrb
dec
test
jno
adc
jno
mov
adc
mov
popf
insb
stos
loope
ss
movsb
test
roll
adc
cs
xlat
sub
fdivrs
cmp
sbb
pop
lret
neg
and
adc
popf
aad
and
jnp
sbb
into
iret
notl
ds
xor
jbe
dec
cltd
mov
ret
mov
mov
sti
jno
push
aas
add
adc
xor
xorl
ja
repnz
dec
xchg
in
or
mov
stc
push
mov
dec
or
push
or
test
std
mov
pop
aad
call
mov
test
sbb
push
sbb
push
adcl
aas
and
test
jb
add
pop
adc
xchg
pop
subl
add
jmp
xchg
mov
sti
inc
push
push
mov
int3
cmc
and
mov
and
xchg
jns
push
jecxz
dec
sub
inc
fistpl
dec
inc
cmp
outsb
jno
cltd
adc
xor
push
les
loopne
mov
xchg
test
sbb
jne
and
sbb
aas
rcl
sub
pop
xchg
pop
insl
dec
push
pop
into
cwtl
adc
adc
push
nop
out
inc
ficoml
jecxz
cmp
inc
ss
xor
cltd
call
pop
mov
xlat
imul
adc
roll
xor
mov
add
addl
sarl
pop
mov
shl
decb
xor
xchg
push
cmp
adc
adc
push
popf
mov
push
jp
push
pop
dec
jns
mov
jl
adc
iret
dec
cmp
pusha
scas
test
sub
mov
push
sbb
push
icebp
in
cli
leave
das
or
and
repz
repz
or
adc
mov
mov
push
pop
subb
lcall
mov
scas
sub
pop
hlt
jecxz
fsubrs
ret
push
sub
es
mov
popf
sub
mov
scas
sbb
dec
add
stos
sbb
mov
sub
std
repz
pop
pop
push
mov
ror
mov
jp
in
js
sti
ljmp
loopne
mov
pusha
jle
arpl
xlat
incb
cwtl
xorl
jbe
mov
arpl
jmp
push
bnd
push
nop
pop
call
aam
mov
test
ret
daa
sar
movb
ret
xchg
stc
push
test
dec
out
jne,pn
mov
mov
xor
sub
xor
adc
lea
ss
scas
faddp
cwtl
stos
add
clc
adc
sub
mov
leave
sub
pop
ljmp
xchg
out
bound
fidivs
sub
and
loope
ret
mov
xor
pop
scas
cmc
arpl
aad
xlat
mov
dec
lods
fistpll
dec
mov
icebp
cmp
mov
mov
dec
xor
jmp
cmp
add
cmpsl
and
jg
jo
push
insb
jne
bound
addr16
jg
cmc
mov
lahf
dec
rcrl
insl
push
cltd
filds
or
and
fdivrs
add
int
ret
jge
test
or
mov
cs
loop
std
cmc
sti
mov
aam
je
jns
ffreep
push
inc
icebp
int
out
stos
xchg
fisttpll
shlb
cmc
and
push
pop
add
sub
insl
mov
clc
lock
lock
push
pminub
daa
enter
int
mov
imul
mov
sub
jo
adc
jecxz
adc
fistl
mov
aaa
cwtl
mov
cld
xor
test
mov
imul
cltd
clc
daa
jae
insb
mov
xchg
inc
loope
in
lcall
mov
std
inc
adc
shl
cmpsl
cmovnp
mov
mov
fwait
dec
dec
es
aad
xchg
mov
icebp
push
inc
sarl
mov
and
movsb
mov
lock
sbb
and
out
cmp
data16
jbe
jg
adc
gs
xchg
sbb
xchg
inc
sbb
add
or
ret
sub
repz
dec
push
or
lahf
xor
and
imul
outsb
ljmp
sahf
mov
fs
scas
mov
inc
push
std
dec
call
daa
sbb
mov
push
push
push
or
jnp
stos
sub
jo
mov
pop
lret
sub
ss
pusha
xchg
fmuls
xor
inc
xchg
cmp
fbld
lds
dec
lock
mov
addr16
jo
push
push
xchg
call
sbb
mov
cwtl
pop
loopne
lods
ljmp
jne
daa
cmpl
mov
dec
xchg
lahf
mov
movsb
outsl
push
int
jb
arpl
inc
sbb
hlt
test
xchg
pop
cmc
push
outsb
ss
lods
scas
push
fstl
insl
pop
adc
jmp
cmc
sub
rorl
test
lds
repnz
ja
nop
pavgw
je
jmp
sub
stos
inc
push
cwtl
pop
add
mov
mov
shll
in
arpl
push
mov
popa
mov
out
push
adc
sti
push
aam
sub
mov
je
jecxz
mov
out
adcb
jo
sbb
dec
sub
adc
outsb
fdivrs
call
test
sbb
sbb
dec
jo
xor
xchg
mov
gs
leave
and
fwait
idivl
jne
mov
fistpl
popa
mov
leave
ljmp
xorl
fdivs
xor
rcrl
cs
mov
push
push
push
or
cmp
push
adc
inc
jb
imul
sub
jns
pop
dec
test
addl
jecxz
lds
arpl
nop
jo
mov
fwait
sbb
ffreep
mov
push
or
icebp
icebp
fwait
lret
jbe
cmp
push
out
sub
leave
xchg
mov
mov
jnp
xorb
mov
adc
inc
ja
adcb
je
enter
xchg
aaa
push
loop
lcall
pop
lods
jno
or
push
sbb
mov
cmc
iret
nop
lea
mov
rorb
push
jle
xor
dec
in
mov
je
ds
or
xchg
lock
xlat
cmp
clc
daa
xchg
xchg
xchg
mov
sub
insb
mov
cltd
inc
pop
loopne
stc
dec
push
nop
push
pop
fdivr
insl
add
iret
test
mov
das
in
pop
enter
faddl
aad
mov
daa
mov
and
int
fcoml
xchg
repz
mov
nop
inc
inc
pop
xchg
push
dec
sarb
pop
shll
imul
dec
pop
cmp
rclb
cli
std
cmp
lods
icebp
leave
ret
sbb
push
mov
push
xchg
jp
sahf
scas
psrad
and
xchg
xchg
cld
mov
or
adc
lock
push
gs
addl
adc
xchg
jno,pt
cltd
xor
and
xchg
push
push
divl
fnstcw
inc
or
lret
fstpl
xchg
cmp
lds
and
pop
repnz
cmp
cmp
pop
push
dec
and
shl
mov
or
lock
or
push
push
ja
sub
jnp
inc
or
xor
mov
outsl
data16
sti
or
cmpsb
push
push
scas
out
es
mov
mov
popf
lods
xchg
xor
dec
das
push
push
xchg
mov
imul
aaa
lret
xchg
xchg
xchg
sub
xchg
and
adc
arpl
cmp
adc
ja
fwait
out
adc
mov
ljmp
insb
lcall
cmp
dec
call
mov
mov
iret
test
inc
leave
jecxz
std
cmc
pop
mov
cmpsl
cltd
mov
push
add
test
rcl
lea
out
fidivrs
cli
jecxz
rcrl
fidivrs
inc
and
push
repnz
push
lret
push
pop
add
lea
leave
idiv
leave
cmpsb
mov
xchg
push
js
push
xor
push
lock
or
and
lcall
mov
cmp
pushf
jmp
push
dec
and
subl
cwtl
fistps
es
lret
inc
mov
pop
pop
pop
sbb
je
ret
cld
cs
mov
add
xchg
fs
jecxz
and
in
aaa
xchg
add
inc
cli
ljmp
leave
and
dec
outsl
imul
test
or
and
lods
adc
jb
pop
xchg
push
enter
xchg
cwtl
imulb
sti
sar
fmull
sbb
push
stos
movsb
movsl
push
hlt
xlat
nop
mov
dec
push
dec
dec
mov
and
ja
adc
pop
cli
fimull
lret
subl
les
xchg
or
or
inc
ja
cmp
cmp
repz
dec
or
out
mov
rcr
jmp
mov
mov
xor
je
enter
pop
dec
rcrl
xchg
pop
sbb
mov
sbbl
adc
push
daa
mov
jle
add
pop
adc
cmc
stos
aad
arpl
adcl
pop
lret
flds
xor
mov
mov
lret
xchg
call
xlat
cld
xor
push
inc
mov
mov
push
or
push
and
sbb
pop
jns
daa
lods
ficomps
std
sub
invd
xchg
jno
clc
xchg
sub
cwtl
xlat
loope
in
adc
cs
insl
add
scas
cmp
insl
pop
rcrl
sbb
and
js
daa
pop
mov
dec
pop
xor
sub
pop
sbb
call
mov
mov
fcmovu
scas
and
add
out
pop
dec
inc
mov
cmp
or
arpl
int3
lock
sbb
cmp
lods
pop
sub
push
nop
xchg
cli
push
ss
mov
nop
movsb
lods
je
fxch
mov
or
jne
sarb
mov
in
jg
mov
xor
and
inc
xchg
mov
in
jg
insb
scas
push
pop
pop
mov
std
and
or
aam
or
mov
push
pop
push
dec
jp
nop
mov
cmp
lahf
pop
mov
cmp
xor
xchg
xchg
pop
push
into
rclb
lods
fstpl
fnstenv
sbb
or
aas
mov
aas
cli
and
sub
scas
sbb
aas
jb
in
and
scas
lods
das
mov
decl
sub
insb
mov
dec
jo
push
mov
arpl
add
jae
push
shr
or
push
jg
popa
adc
sub
jb
jg
lds
and
jmp
in
shrl
cmp
xchg
test
inc
push
xchg
out
add
and
clc
int3
or
cmc
lods
fndisi(8087
into
pop
mov
in
repnz
dec
mov
mov
daa
sub
fnsave
call
popf
or
inc
iret
push
jae
pop
push
jmp
fidivrl
or
sarl
push
sarl
cltd
movsb
or
rcll
push
in
pop
pop
adc
popf
jb
into
mov
mov
loopne
js
addr16
aad
jl
int
int3
jne
push
out
testb
xchg
cmp
sarb
xchg
addr16
push
je
mov
sub
popf
xor
mov
orl
int3
movsl
into
in
pop
xchg
cmp
mov
xchg
adc
lods
adc
stos
mov
inc
outsl
fs
mov
pusha
mov
fiaddl
sub
sub
insb
in
dec
in
jb
jmp
mov
mov
sarl
or
fnstsw
mov
imul
mov
mov
add
lock
jge
inc
pop
ss
imul
push
or
cwtl
dec
ja
shr
inc
lret
jecxz
xchg
das
xchg
je
lahf
jle
xorl
std
push
pop
out
cmc
ficomps
orb
out
adc
and
stos
into
cmp
jns
je
and
sbb
pop
and
fdivrp
lea
fdivrl
mov
jns
adc
mov
in
imul
sarl
jmp
div
dec
arpl
push
jne
cmpsb
ret
imul
add
push
cs
and
mov
aad
mov
dec
sarb
and
and
bound
inc
cltd
mov
dec
sbb
test
xor
cwtl
pop
sti
addb
or
pop
sub
imul
add
aad
mov
shrl
cmp
test
xor
dec
fldl
inc
pop
mov
imul
stos
mov
jae
jb
iret
lahf
mov
mov
mov
in
dec
push
mov
arpl
mov
and
test
int3
popf
cmc
or
fxch
add
fildll
ds
ret
int
cmpsl
fisubrl
sahf
stos
gs
inc
mov
pop
shll
lcall
mov
ss
mov
lahf
arpl
out
dec
and
aas
or
xchg
sub
mov
subb
mov
mov
arpl
std
icebp
loope
mov
mov
fmuls
dec
inc
mov
nop
shrb
mov
divb
fwait
mov
mov
imul
sub
push
aas
loope
out
and
popa
adcl
ds
adc
lcall
int3
pop
push
stos
inc
mov
push
mov
mov
nop
mov
loope
cmpsl
xor
ss
adc
call
or
clc
repnz
push
mov
sub
pop
les
cmpsl
xchg
push
dec
into
pop
les
test
mov
faddl
and
mov
mov
ja
iret
push
jne
stos
xor
icebp
xor
cmp
bound
or
sbb
stos
fsubrl
ret
sarl
pop
fnstcw
enter
fst
add
add
in
and
pop
dec
xorb
sahf
mov
or
std
lcall
adc
push
roll
movsb
cmpsb
pop
pop
aaa
ljmp
iret
ss
jecxz
push
pop
inc
int
cltd
pop
inc
push
addr16
mov
xor
xchg
cmp
daa
roll
jo
out
pop
jge
add
faddl
or
xor
test
mov
pop
sbb
sub
iret
cli
rorb
push
mov
and
stos
jno
mov
aad
lretw
xchg
sti
pop
idivl
mov
fnsave
int
or
jle
movsb
pop
xchg
das
test
lods
mov
cltd
cmc
js
enter
fwait
xchg
mov
leave
int3
int3
push
stos
xchg
daa
pop
inc
outsl
push
fmull
sti
mov
mov
xor
lea
add
popf
push
sbb
test
or
or
pop
popf
sbb
mov
leave
sbb
push
fidivrl
jmp
gs
pop
fimuls
mov
imulb
dec
daa
cmp
nop
push
xor
movsb
icebp
lods
fidivrs
movsl
xchg
push
xchg
aam
cmp
mov
sub
push
push
ja
add
arpl
sarb
in
pushf
pop
mov
sar
lahf
xchg
idiv
push
movsl
fisttps
inc
mov
sub
jns
shll
cmpsl
pop
inc
mov
xchg
adc
in
sbb
je
inc
test
out
pop
and
cmp
and
mov
mov
sbb
icebp
cmp
jno
int3
stos
rcrl
xor
das
mov
outsb
jb
xorb
push
xchg
nop
sub
dec
gs
aad
sbb
mov
xor
inc
xchg
scas
divl
stos
cmp
leave
addl
fstps
mov
xor
data16
add
xor
xor
and
add
rorl
push
shrb
push
push
ret
cmpsl
adc
or
cmp
out
into
push
sarl
sbb
in
jno
outsl
fldt
sahf
push
push
sub
push
ficomps
add
stos
mov
rep
aaa
aas
cld
sub
pushf
add
jno
or
push
adc
mov
rol
mov
fnstcw
into
divb
mov
pop
stos
fldenv
xchg
pop
mov
xlat
nop
xor
push
inc
pop
push
dec
pop
jno
pop
mov
mov
aaa
and
or
sbb
dec
loope
sarl
insb
pop
lods
dec
jecxz
xchg
push
ljmp
lahf
test
sbb
xchg
jle
call
outsb
sbb
stos
shrl
push
adc
sbb
mov
subb
int
test
fistps
cmpsl
cmpb
scas
es
repnz
in
lcall
popa
int
mov
or
in
sub
sarb
dec
pop
dec
fxch
and
jg
mov
daa
mov
imul
pop
dec
sub
sahf
mov
push
inc
push
and
mov
mov
pop
cmp
mov
leave
mov
leave
push
xchg
sarb
arpl
movsl
push
shll
std
pop
jg
xor
push
pop
sub
out
outsb
lcall
sub
mov
fstpt
mov
cmpsb
push
testl
movsl
push
nop
and
mov
pop
jb
pop
pop
push
mov
test
test
mov
fistl
sar
lret
pop
jle
bsr
mov
lods
xor
outsl
xor
push
inc
mov
aam
ja
or
mov
mov
mov
sbb
adc
ss
mov
orl
pop
es
dec
sar
movsl
mov
pusha
mov
inc
in
mov
mov
lea
ret
std
mov
icebp
pop
xchg
ds
pop
cmp
inc
inc
or
inc
sbb
or
ror
jns
mov
xchg
fildll
bound
cmpsl
or
xorl
mov
pop
dec
dec
mov
xor
cltd
adc
mov
mov
aam
int
jge
push
xchg
inc
jp
outsb
push
rclb
inc
mov
lods
fsubrl
int
ret
lods
sbb
sub
push
cmpsb
cmp
sarb
add
rorl
xor
sub
dec
cli
sbb
dec
sub
adc
jns
sub
sti
push
mov
dec
add
cmp
push
lods
je
inc
pop
repz
loop
or
cmp
mov
fidivrl
cs
mov
mov
lahf
dec
push
push
out
dec
icebp
xchg
clc
mov
sti
adc
sbb
fstl
arpl
cmp
or
mov
shl
adc
lock
push
fsubl
daa
fstpl
sub
sbb
mov
pusha
xor
or
std
push
xorl
ror
stc
or
dec
xchg
sbb
and
pop
mov
or
xchg
mov
cmp
add
jo
mov
notb
fisubs
xchg
jns
int3
xor
fwait
mov
sub
mov
xor
xchg
imul
sahf
das
pop
and
fprem
lret
mov
inc
enter
pop
out
sbb
mov
xchg
testb
sub
dec
outsl
imul
jbe
pop
push
hlt
add
mov
jmp
cmp
inc
xchg
or
jmp
dec
and
and
aas
not
jns
cli
lret
mov
lods
lea
sbb
addr16
notb
xchg
push
sbb
add
insl
repnz
hlt
jle
sbb
push
xor
out
dec
pop
sysexit
negb
mov
aad
inc
or
pop
mov
ss
outsl
sub
pushf
pushf
cmp
lahf
out
add
and
outsb
ficomps
xor
in
and
mov
jo
cs
mov
xor
test
test
decb
out
cwtl
gs
or
xchg
pop
andl
push
or
sub
mov
ret
mov
pop
cli
pop
stos
testb
rcrb
add
fidivl
imul
scas
incl
test
lahf
lret
faddl
nop
in
add
sarl
pop
inc
sub
mov
pop
lock
ret
test
cli
or
push
sbb
pop
add
fmull
sub
mov
movsb
fildl
mov
icebp
push
dec
cmp
test
outsl
out
andb
repz
lahf
sbb
push
push
jne
fsub
or
pcmpgtb
lret
pusha
das
data16
mov
or
and
test
pushf
pop
test
cmpsl
out
xor
mov
shlb
insl
imul
adc
mov
push
sub
dec
and
hlt
mov
add
mov
loope
mov
sub
repnz
stc
cmc
pop
and
add
ret
inc
rorl
xchg
rcl
jb
push
dec
faddl
rorl
pop
out
fstp
sbb
test
data16
push
lret
inc
ljmp
cmpsb
imul
cmp
mov
jno
mov
add
fs
mov
jg
pop
pop
mov
cmp
push
jmp
lds
clc
fadds
sub
mov
xlat
orb
mov
xor
jle
insb
pop
jno
or
or
jecxz
pushl
clc
jbe
scas
scas
push
inc
and
loopne
lods
jg
cwtl
dec
xor
out
cmp
test
sub
jne
pop
jne
pop
mov
sub
dec
test
imul
xor
aam
mov
push
push
add
and
mov
lock
icebp
mov
pusha
sbb
arpl
pushf
aad
out
or
scas
add
daa
repz
push
sbb
xchg
adc
outsb
and
vcvttpd2dqx
imul
daa
mov
jnp
out
test
or
dec
aas
mov
sbb
add
fistpll
sub
daa
pop
aam
mov
call
imul
repz
scas
lret
jl
xlat
arpl
mov
inc
inc
or
shll
push
lock
dec
lcall
shll
sub
mov
jno
sbb
icebp
mov
in
ficoms
jg
add
scas
add
jae
je
sbb
arpl
xchg
movsb
sbb
xchg
aam
xlat
push
lcall
cld
repz
sub
stc
stc
lahf
dec
xchg
and
jo
add
jb
repnz
daa
or
mov
mov
out
mov
and
fidivs
pop
and
rolb
addb
push
insb
or
mov
mov
int3
loopne
stos
movsl
or
pop
pop
loopne
cmpsl
add
and
dec
pop
cmp
pop
push
pushf
ret
jne
ss
push
xchg
mov
push
inc
mov
push
rcl
mov
test
adc
push
mov
mov
push
xchg
adc
adc
mov
into
rol
xorl
jp
push
icebp
inc
inc
mov
enter
push
sub
cmp
sub
push
mov
push
cmp
cmp
sbb
or
dec
ret
fldenv
xchg
jnp
insb
mov
and
inc
stos
xor
pop
xor
and
dec
lods
xor
int
in
sahf
push
das
pop
data16
cmc
fucomip
mov
iret
imul
pop
mov
out
aas
sbb
mov
mov
shll
sbbb
xchg
push
jo
push
dec
cmpb
shlb
out
mov
or
sbb
movsb
dec
cld
mov
pop
stos
add
pop
adc
cmp
rcll
mov
enter
sub
mov
dec
loop
mov
add
dec
daa
inc
sbb
xor
ja
cmp
in
jbe
jl
data16
mov
movsl
popa
test
pop
iret
mov
jns
jmp
xlat
notl
mov
add
mov
xchg
xor
jbe
xor
jae
or
mov
rcrb
lahf
sub
xchg
mov
popf
test
mov
cmp
aas
jg
in
pop
inc
loope
cmpb
push
repnz
pop
fwait
mov
mov
stc
cltd
int3
arpl
mov
cltd
fidivrs
lcall
push
dec
into
push
outsb
push
mov
xchg
push
imul
fidivrs
dec
xchg
adc
pop
push
icebp
fcomip
jbe
imul
into
mov
call
cmp
movsb
loop
mov
cld
or
js
daa
mov
clc
xchg
push
adc
js
mov
daa
jle
testb
ret
mov
cmpsb
add
jg
push
mov
loope
pop
leave
nop
test
mov
popa
adc
jne
sub
mov
jne
xchg
pop
cmpsb
pop
pop
mov
pushf
daa
xchg
and
sbb
arpl
xchg
pop
sub
fwait
mov
leave
lahf
push
push
mov
adc
les
adc
jno
fwait
mov
jno
sti
movsl
pop
aaa
shrb
mov
enter
sarb
inc
call
sub
mov
jg
jecxz
ja
pop
or
pop
jnp
ret
push
addl
nop
mov
fcomps
loope
sbb
arpl
inc
rclb
out
add
movsl
out
hlt
repz
loop
adc
xchg
push
pop
rcrb
jg
inc
ljmp
daa
mov
push
daa
jp
fstps
push
dec
in
push
push
mov
fucomi
rorb
dec
mov
pop
movsl
out
or
dec
inc
pop
hlt
or
inc
mov
push
cli
jns
fimull
fucomip
or
out
cmp
sbb
xchg
idivl
cmp
mov
pop
div
fstps
xchg
or
ja
push
push
lret
hlt
loopne
cmp
imul
xchg
por
test
jbe
shrl
les
jp
pop
cmpsl
imul
mov
arpl
xor
push
icebp
mov
push
xlat
jne
push
inc
mov
mov
cltd
data16
and
shr
inc
xor
inc
dec
insl
icebp
ja
jl
push
jne
incb
out
addb
ja,pn
pop
stc
and
add
mov
aaa
pop
adc
push
xor
test
xchg
hlt
push
add
add
add
adc
mov
setne
imul
inc
in
dec
testb
jp
xor
xchg
push
repz
pop
fists
jne
xor
scas
jnp
js
adc
mov
loope
enter
xchg
inc
pop
insb
cmp
aad
jne
or
pop
inc
add
jmp
in
dec
int3
ja
jns
inc
xor
xchg
jp
int
loopne
push
int3
pop
adc
jmp
dec
add
mov
out
repz
mov
dec
in
insl
bound
orb
xchg
iret
out
icebp
mov
mov
ljmp
arpl
stos
adc
lret
inc
rclb
data16
jnp
cltd
int
jae
nop
lock
bound
mov
cmp
sbb
inc
fidivs
xor
cmp
pop
jmp
sar
pop
adc
xchg
cmp
mov
adc
in
inc
add
in
test
mov
ret
getsec
adc
testl
iret
ds
inc
pop
pop
mov
pop
repnz
lea
inc
jecxz
std
jo
enter
inc
sar
lds
out
xor
mov
cmp
jb
or
stos
incl
pop
lret
or
rcl
icebp
jbe
pop
mov
add
sbb
fimuls
iret
incl
xchg
mov
mov
out
jecxz
mov
xlat
sbb
sarb
test
out
inc
mov
addr16
pop
push
ljmp
ror
push
push
and
bound
gs
cmc
push
push
inc
jmp
ss
or
inc
add
dec
data16
adc
arpl
int3
gs
mov
imul
mov
mov
fcompl
lea
lods
sub
inc
inc
fimull
aaa
test
push
addb
test
shr
test
lahf
scas
jo
xor
xchg
cmpsb
cmpsb
std
test
loope
or
sub
mov
and
mov
cwtl
add
repnz
mov
or
mov
mov
sti
jnp
cmp
cmp
xchg
ss
inc
pop
in
mov
loope
add
push
sub
fmull
insl
ljmp
mov
jmp
daa
push
sbb
pop
xor
fs
or
adc
jmp
fisttps
cmp
lock
cs
aam
and
xchg
fldcw
hlt
xor
fnstcw
mov
sub
rolb
movsl
jnp
mov
push
sbb
add
mov
sub
mov
inc
mov
mov
ret
jns
aad
lret
lret
adc
mov
pop
fwait
repnz
jecxz
pop
inc
sbbb
pop
test
sbb
sub
xor
stos
daa
leave
in
ljmp
mov
mov
push
loope
not
pop
sub
push
sub
das
pop
cmp
mov
jb
mov
mov
imul
iret
mov
or
add
outsb
cmp
dec
popa
in
std
xchg
jl
dec
jmp
fcoms
mov
inc
mov
mov
leave
mov
pop
cs
or
and
inc
xchg
pusha
jns
ljmp
test
xchg
aaa
cmp
fsubs
mov
je
and
jae
jns
shlb
dec
xor
jno
sbb
iret
dec
sti
sub
notb
inc
scas
mov
sbb
push
repz
jle
subl
dec
sbb
inc
leave
test
iret
iret
out
sbb
ret
cltd
dec
pop
fcomip
loope
push
add
push
clc
jne
dec
lock
into
push
test
mov
addr16
inc
loopne
out
inc
push
stos
in
dec
mov
and
inc
idivb
mov
mov
mov
pop
mov
adc
jmp
and
cmc
xchg
mov
add
stc
adc
push
divb
push
test
test
stos
mov
lret
sbb
pop
int3
mov
movsl
outsb
stos
mov
and
or
outsb
cmc
or
add
jno
out
xlat
push
fiaddl
mov
lret
loop
in
and
insb
pop
stos
xor
in
mov
mov
sub
lret
scas
hlt
sub
mov
push
sbb
mov
jle
mov
out
in
mov
loop
dec
aaa
out
mov
loopne
pop
or
arpl
stos
lret
jbe
aad
mov
mov
nop
out
mov
into
xchg
loop
out
pushf
inc
outsb
leave
adc
jo
leave
fs
js,pt
xlat
testl
push
push
call
icebp
shlb
mov
cmpsl
lods
ficoml
shl
stos
pop
gs
push
xchg
repz
cld
mov
xor
andb
xor
ljmp
mov
shll
cld
mov
pop
push
iret
loopne
sub
push
lret
pop
clc
nop
adc
lea
lret
iret
mov
push
xchg
sub
jmp
push
xlat
push
sbb
cmp
int
out
addr16
outsb
sbb
push
xor
adc
sbb
bnd
fdivs
add
or
loope
lock
inc
imul
cld
into
outsl
jecxz
iret
mov
sub
xchg
or
mov
pop
es
add
lahf
imul
xchg
das
adc
xorl
adc
daa
xor
popl
jp
test
movsl
mul
push
xor
mov
fdivl
xor
cmp
dec
movsl
mov
mov
sub
cmp
out
negl
jmp
mov
fs
bound
in
shrb
add
ret
leave
push
pop
ljmp
jecxz
data16
sti
sbb
xor
movsl
out
mov
xchg
stos
mov
xchg
sub
inc
fnstenv
daa
or
pop
and
sbb
std
add
mov
xchg
data16
call
adc
dec
adcb
popl
pop
push
cmpsl
dec
dec
jp
push
mov
adc
std
out
lahf
adc
inc
mov
out
aad
push
fnstcw
sub
jle
or
inc
int3
xchg
pop
xor
scas
cmpsl
cmp
dec
xor
or
outsl
sti
gs
adc
jg
aad
mov
andnps
cmpsb
loopne
orb
push
push
insb
or
test
iret
aas
inc
imul
add
mov
sub
fldenv
lret
xchg
jmp
xchg
dec
sahf
arpl
xchg
mov
cs
push
jnp
jne
pusha
jbe
jle
jg
ja
mov
cmp
imul
inc
sbb
push
jno
sub
popa
push
pop
add
or
je
scas
dec
cmc
ja
shlb
jnp
ljmp
lds
sbb
test
imul
lods
and
dec
pop
sbb
jg
dec
adc
and
das
rcrb
loopne
xchg
push
cmpsb
aam
sub
loopne
cmp
mov
or
mov
mov
sbbl
fwait
je
or
mov
or
xor
test
pop
mov
push
daa
cmpsl
jb
or
mov
pop
fstpt
cmp
adc
xchg
imul
push
sbb
imul
dec
or
mov
psrld
add
addr16
push
cmpsl
cwtl
mov
stc
sub
pop
pop
add
into
aas
test
sbb
pop
imul
xchg
sub
popl
jb
push
int3
movsl
pop
inc
push
push
cltd
push
insb
inc
loop
dec
mov
xlat
xchg
dec
je
sub
bnd
lock
aam
push
jne
rcrb
xchg
and
stos
cmp
xor
mov
cltd
sarb
mov
and
les
cli
add
ret
mov
int3
dec
out
repz
dec
pop
cmp
cmp
repnz
int3
add
xchg
into
pop
sbb
loopne
lcall
jno
xchg
push
repz
in
lock
lahf
cli
sbb
decl
adc
loopne
scas
adc
mov
repnz
add
movsl
jno
push
push
scas
push
jns
in
or
adc
mov
aaa
std
aas
sub
sub
xchg
or
push
jbe
xor
jnp
ror
stos
push
popa
sbb
and
xchg
cmpsl
jno
pop
das
or
pop
out
decl
cmp
xor
aas
push
std
or
push
jle
dec
adc
mov
adc
add
sub
std
mov
cmp
mov
xchg
in
stc
lret
imul
aad
je
movsl
std
mov
inc
gs
sbb
test
pop
add
dec
xchg
mov
cmpsl
sahf
out
insl
out
inc
jge
mov
xchg
pusha
in
inc
insl
mov
mov
fstpl
sub
daa
lahf
fldenv
sbb
and
fisttpll
xor
shrl
mov
jp
xlat
and
test
pop
jae
jge
jecxz
sbb
cltd
mov
xor
xor
xor
cmpsl
cmp
mov
mov
xchg
dec
xchg
fldcw
add
xchg
pop
mov
into
and
xchg
call
mov
in
mov
push
sbb
push
int
mov
sbb
or
test
sti
sub
flds
xor
gs
sbb
cmp
scas
icebp
loop
jle
jmp
clc
mov
leave
xor
movsb
mov
movsb
cmp
loopne
cmp
inc
fsubrl
and
out
into
sbb
bound
sub
pushf
push
mov
iret
pop
push
push
jne
xchg
ret
insl
adc
mov
mov
gs
fimuls
ror
ds
lods
hlt
imul
mov
or
sbbl
pop
arpl
mov
repz
sbb
test
lahf
jp
sub
outsb
lahf
dec
inc
cwtl
fdivl
roll
pop
fld
hlt
inc
xor
mov
inc
ds
das
out
push
mov
mov
xchg
inc
outsl
jno
in
call
cmp
stc
std
pushf
shll
aaa
das
jne
arpl
mov
lods
sbb
mov
sub
sub
call
rol
xor
fs
lods
inc
lods
rorl
jbe
jge
adc
jns
mov
shrb
aas
stos
jb
out
jmp
sahf
std
mov
xor
cmp
jno
hlt
ss
sbb
jnp
loop
xchg
dec
sbb
addr16
scas
pop
jbe
inc
fs
aad
in
out
pop
xor
push
cmp
ljmp
faddl
xor
cmc
movsb
pop
lods
lea
xor
xorl
ret
or
or
int
nop
sub
cmp
fdivrs
adc
inc
jl
stos
push
sbb
or
fsubs
dec
addr16
and
out
xchg
cmp
mov
mov
aas
xlat
sub
and
push
mov
jg
mov
icebp
lock
push
mov
aas
loopne
out
flds
adc
pop
jb
jmp
jmp
or
or
or
xlat
ljmp
mov
and
lahf
xor
push
stos
test
aaa
es
icebp
adc
or
das
push
pop
xchg
sub
and
sub
xchg
pusha
or
in
dec
and
push
jle
adc
jle
jbe
clc
leave
inc
dec
jbe
mov
or
sahf
add
inc
dec
mov
sub
callw
sbb
pop
push
mov
fistl
sbb
rclb
cmp
stos
sub
testl
fdivl
mov
cmp
int
jge
ret
sub
ficoms
mov
adc
jns
rcr
jmp
xchg
pushf
xor
adc
pop
inc
shll
lods
sbb
je
dec
aaa
jmp
sti
in
or
cmc
stos
out
ds
lea
adc
mov
aad
and
imul
rorb
xchg
ja
cmc
xchg
ret
jl
iret
ja
jno
and
js
sub
mov
pop
sub
push
rorl
out
add
or
xor
and
ret
daa
out
les
lret
js
fidivs
pop
dec
cmp
jp
add
fistl
jp
cli
loope
and
adc
xchg
out
ja
jge
stc
fildl
pop
mov
nop
push
or
ret
inc
xchg
push
sbb
pop
roll
xchg
fidivs
test
bound
jns
jb
movsb
xor
int3
inc
rorl
sub
dec
mov
mov
movb
mov
and
out
pop
shr
add
adc
mov
inc
mov
mov
xchg
mov
mov
sub
mov
push
jge
xor
outsb
mov
xchg
mov
fnsave
push
std
xchg
je
sub
jge
lods
out
push
add
sub
inc
cmp
or
sarl
mov
jns
scas
lret
test
sbb
jnp
jno
mov
in
lods
test
out
testb
lock
sbb
je
test
jg
nop
call
pop
adc
xor
add
and
sti
mov
sbb
jnp
mov
sbb
scas
inc
jmp
lret
xor
sub
inc
sti
cmp
pop
mov
rcrb
cmpl
pushf
inc
mov
mov
add
fistl
cmp
inc
jns
xchg
stos
push
mov
rorl
push
mov
daa
insb
inc
inc
lret
cs
cwtl
sbb
ss
dec
in
push
inc
dec
loope
out
das
popa
iret
cs
mov
xor
mov
adc
push
add
inc
pop
js
movsb
mov
js
adc
add
mov
lret
push
mov
roll
hlt
inc
xor
or
sahf
clc
lock
outsb
fs
dec
xchg
or
repz
add
or
mov
fcmovu
dec
cmp
sub
push
pop
loopne
jne
sarl
adc
sbb
jbe
popa
pop
jnp
out
jb
clc
roll
insb
sbb
or
test
mov
call
push
xor
or
mov
daa
and
xchg
xor
mov
cmp
mov
leave
cmp
fidivrs
fimull
or
mov
dec
push
fistl
sbb
cmp
cmp
sbb
sbb
out
mov
ret
imul
inc
rcll
cmpsb
cld
xchg
cmp
lods
jb
in
fadd
bound
adc
and
out
inc
test
rcr
mov
mov
or
pop
adc
lds
add
xor
repnz
out
mov
add
jno
hlt
fs
dec
mov
loopne
jne
imul
sub
mov
in
inc
adc
xor
push
ljmp
scas
inc
cmpl
das
mov
add
fnstsw
rcll
jno
in
adc
pop
push
push
or
mov
jmp
pop
jl
lret
sub
sub
data16
mov
sub
scas
add
xor
scas
pop
test
jns
mov
mov
push
js
pop
mov
shll
cmp
lods
and
jo
and
push
xchg
push
pushf
test
add
lds
jle
cltd
sar
mov
add
fstpl
sub
xchg
jo
sub
push
xchg
inc
add
xchg
out
imul
mov
rorb
inc
push
pop
cmp
fists
fcomps
scas
or
push
or
push
test
cwtl
cltd
sub
fmul
adc
mov
movsb
js
mov
lds
ds
mov
cmp
loop
mov
pusha
cltd
movl
inc
repnz
sti
pop
stos
mov
bound
dec
shlb
dec
pop
mov
test
icebp
sbb
mov
push
cmp
or
popa
outsb
mov
mov
lods
cmc
test
jne
sub
push
dec
push
pop
into
insl
and
popf
mov
mov
iretw
pop
scas
enter
jl
rcr
insb
dec
mov
xor
loope
xchg
cmp
cmp
pop
popf
pop
pop
push
push
cs
pop
out
jae
outsb
sahf
inc
jecxz
push
ret
ret
in
gs
fs
in
test
lret
repnz
lret
outsl
mov
push
les
inc
popf
int3
pop
pop
scas
loop
push
dec
jmp
push
lahf
loopne
jae
hlt
lock
subb
popf
xchg
icebp
imul
addr16
cwtl
xchg
sub
mov
mov
xchg
popl
jmp
inc
sbb
sbb
idivl
test
adcb
push
cmp
enter
adc
push
int
pop
rcrl
sbb
rcrb
fbld
and
jae
adc
enter
push
fdivs
ret
push
insl
or
pusha
mov
outsl
icebp
sahf
xor
scas
movsb
push
mov
loopne
into
ret
jb
mov
push
sub
adc
mov
lea
xchg
lahf
xorb
dec
cmp
sub
insb
loope
xchg
aaa
xlat
in
sahf
hlt
adc
mulb
popa
in
sbb
leave
pop
or
push
sub
push
dec
add
and
lods
outsl
or
aas
add
add
repnz
xlat
mov
push
out
nop
inc
mov
sub
fists
ss
pop
mov
add
sbb
outsl
dec
int
pop
fisubl
movhps
into
data16
adc
mov
push
divl
jp
pusha
or
pop
mov
movsb
addr16
int
ja
xor
jne
push
pop
jb
fbstp
ffree
pop
xor
mov
sti
imul
adc
mov
mov
mov
jae
addr16
out
js
pop
sbb
in
shll
inc
adc
jle
mov
sti
mov
mov
jg
push
mov
ds
add
mov
mov
scas
xlat
adc
pop
pop
sahf
dec
stc
add
xor
rcr
mov
es
push
mov
jae
test
xor
mov
push
aad
pop
scas
push
push
cmp
xchg
pop
mov
push
clc
ret
or
or
aaa
jb
add
or
pop
inc
adc
mov
sub
push
add
sahf
inc
call
out
cmpsl
lahf
lea
nop
adc
and
xor
sub
cmpl
test
arpl
adc
stc
fcomps
xchg
int
lcall
mov
jge
cmpsb
cmp
jp
and
lods
add
sbb
mov
and
enter
in
add
jno
test
daa
jb
mov
or
fildll
xor
imul
pop
inc
movsl
mov
push
and
pop
std
pop
dec
add
mov
sbb
mov
cmp
rcll
jo
sub
ss
js
cmp
mov
lcall
fstps
sbb
addl
fs
ret
mov
rcr
test
rcl
repz
mov
addr16
sti
lret
adc
loopne
out
test
adc
xor
jno
push
cmp
outsl
loopne
xor
inc
loop
dec
sbb
xchg
mov
sbb
mov
shll
mov
cld
cmpsl
inc
pop
mov
sahf
adc
and
popa
fs
ds
fnsave
std
scas
jg
das
dec
pushf
pop
sub
sbb
imul
lods
subl
in
lods
adcl
cmp
mov
and
add
imul
insb
or
or
cmpsb
cwtl
add
jbe
aaa
or
mov
adc
int3
mulps
sti
lds
fs
stos
arpl
mov
pop
push
out
cmp
mov
xor
call
sbbl
loope
xchg
inc
dec
xchg
scas
sub
jb
pop
mov
sarb
mov
imul
fisttps
jge
sbb
aam
or
je
mov
mov
xor
push
sub
lret
cmp
or
mov
jne
and
mov
xchg
mov
jnp
and
imul
jbe
pop
ret
stc
fisttpl
mov
or
cmpsb
cmc
add
push
movups
test
loopne
iret
and
addr16
scas
dec
push
xor
ja
jge
jg
or
xor
cmpsb
add
outsb
out
and
xorl
sbb
leave
adc
mov
adc
adc
push
dec
popa
cmpsl
loope
xchg
out
add
repz
outsl
pusha
inc
and
es
fucom
es
test
sub
push
popa
ss
data16
cld
nop
cmp
out
aaa
adc
push
je
push
test
clc
mov
inc
xchg
pop
mov
mov
sub
add
sub
dec
aam
int
inc
bound
pop
pop
dec
loop
repnz
cwtl
xchg
divl
out
jmp
mov
cmp
ljmp
or
inc
pop
mov
and
or
and
decl
mov
xchg
shrl
int3
ficoml
fstpt
mov
sbb
xor
ficomps
sbbb
nop
mov
jle
sub
stos
addl
loope
sub
lret
pusha
mov
test
faddl
clc
out
push
sub
mov
imul
popf
test
nop
jge
lahf
out
cmp
mov
popf
jp
test
push
int
fldt
imul
sbb
xchg
mov
cwtl
jp
rcr
dec
mov
pop
inc
flds
imull
jo
movsb
pop
xchg
sub
orl
dec
xchg
adcb
cmp
pop
outsb
in
fildl
or
lcall
test
inc
in
jecxz
lea
lcall
stos
cmp
xor
lea
shll
jnp
psubusb
lock
mov
adc
jno
popf
sbb
sub
sbbl
pop
fisubl
ds
or
jl
push
mov
sbb
mov
push
push
cmpl
lock
ficomps
pop
xor
sbb
inc
push
lods
into
adc
mov
in
inc
pop
ja
inc
loope
mov
imul
or
loop
stc
xchg
cmp
int3
notb
xor
or
fwait
push
inc
push
shlb
adc
push
lret
xor
dec
aas
ret
addr16
pop
pop
into
jno
mov
nop
mov
add
xorl
sub
adc
mov
ja
in
data16
data16
push
inc
mov
xchg
mov
xor
xchg
icebp
lea
jne
outsb
pop
popf
mov
dec
lock
stos
gs
fmul
lods
stc
scas
out
cmpsl
mov
pushf
jl
sub
or
in
rcrl
add
push
and
loop
test
jp
fldcw
andl
adc
in
inc
cmpsb
lea
fcoms
push
sbb
mov
jge
xor
popf
js
lahf
and
outsb
lods
mov
das
mov
lahf
push
pop
push
mov
nop
sbb
mov
orl
adc
inc
cltd
hlt
dec
in
mov
movsl
mov
shll
jge
xchg
insb
call
push
mov
dec
jmp
lods
add
call
jb
notl
mov
insb
jno
into
add
adcl
push
jge
cmp
shlb
add
into
xchg
sub
jne
movsl
test
loop
fs
mov
adc
cmpl
or
fucomip
dec
or
push
pop
pop
dec
and
mov
scas
sub
loop
bound
cmp
mov
mov
mov
stc
fmul
jmp
mov
xchg
ja
mov
sbb
stc
fnstsw
and
push
mov
rolb
stc
mov
fiadds
inc
clc
sahf
cli
inc
dec
into
dec
or
pop
loop
push
or
dec
scas
or
mov
jle
enter
sub
into
pop
mov
scas
inc
mov
stos
adc
divb
jge
pop
loopne
xchg
adc
add
loopne
sti
xor
dec
pop
sbb
aad
lgs
or
aad
mov
pop
cmp
das
jg
xchg
notl
mov
mov
imul
cmp
fs
xchg
dec
mov
xlat
push
stos
addl
dec
sti
cmp
imul
push
push
xchg
xchg
imul
outsb
sbb
pushf
push
push
aad
scas
mov
push
lds
xor
scas
sbb
and
test
pop
push
and
xor
call
pop
call
rol
ljmp
mov
inc
pop
les
out
mov
icebp
jp
inc
mov
int3
gs
lret
adc
rolb
pop
or
cmp
repz
and
mov
mov
lret
outsl
loopne
mov
fnstcw
adc
lods
dec
cmpsl
out
push
out
lret
inc
std
subl
jnp
insb
loop
adc
mov
inc
mov
add
add
ret
dec
mov
cs
sbb
push
or
scas
mov
jecxz
xchg
adc
dec
aas
in
jle
inc
pop
jp
fwait
jns
cltd
push
fistpl
data16
notb
fdivrl
les
inc
stc
hlt
mov
loop
push
lds
xor
test
out
addb
mov
sbb
sub
sub
rcrb
jnp
dec
xchg
mov
mov
pop
jns
mov
cmpsl
or
jp
xchg
xchg
lcall
ja
dec
adc
sub
sub
mov
jp
sbb
push
pop
adc
pop
stos
mov
fbstp
aam
andb
inc
jno
push
pop
jmp
jge
inc
pop
add
xchg
imul
xchg
fadd
cwtl
dec
test
jae
jb
jbe
xor
sbb
adc
fstpl
mov
loope
pop
xchg
dec
xchg
scas
in
inc
mov
loope
xchg
jmp
jb
in
ror
int
sub
addr16
cmpps
xor
nop
mov
or
adc
add
nop
sub
out
inc
xchg
ljmp
cli
shll
xor
scas
fadd
popf
and
adc
cmp
imul
cmp
leave
pause
mov
jecxz
sti
adc
xchg
out
jle
in
jno
add
mov
mov
repz
lods
insl
and
add
mov
and
add
idivl
ss
push
adc
sub
pop
arpl
dec
dec
clc
dec
hlt
mov
aam
pusha
xchg
repnz
sub
add
out
enter
lcall
andb
iret
adc
adc
outsl
xor
sub
popa
add
int3
dec
and
push
cmp
jne
dec
pop
sti
fidivl
push
and
orl
add
mul
sub
pusha
out
loopne
pushf
cmp
dec
lods
call
je
xchg
aaa
push
enter
enter
mov
or
fildl
or
jmp
and
xchg
add
cmp
pusha
dec
jno
fistl
outsb
jecxz
mov
arpl
ret
mov
inc
sub
sub
lods
xchg
jno
cmp
push
in
mov
arpl
ret
aaa
sub
cmp
js
stos
dec
mov
gs
adc
mov
sti
arpl
and
xor
and
push
test
or
pushf
xchg
inc
mov
or
sbb
fdivl
sbb
jmp
and
icebp
sub
adc
xlat
inc
sarb
movsb
dec
int3
repz
xchg
xchg
adc
jns
test
lods
adc
xchg
out
add
cmc
aam
fisubrl
pop
rorb
push
mov
sarb
cmpsl
mov
xor
mov
stos
mov
xchg
sti
scas
inc
aad
ret
std
adc
cmpsb
ds
cld
cmpsl
stos
and
lods
xor
nop
outsb
xor
call
imul
mov
in
fstpt
cmc
inc
xor
push
lcall
lcall
xor
in
lret
dec
pop
xor
lock
pushf
or
imul
movsb
test
sbb
cmpl
pop
sbb
jns
mov
ret
ds
aad
jae
pop
ljmp
ss
dec
rcll
pop
jnp
mov
mov
jb
mov
jp
aad
dec
aaa
xchg
std
icebp
or
push
xor
pusha
pop
inc
daa
inc
sti
call
pushf
jbe
mov
push
bound
aam
pop
jb
cmpsl
sbb
inc
add
add
in
ss
ja
outsl
xor
or
imul
fsubs
test
adc
fcompl
adc
sub
lret
sarb
in
shrl
mov
aas
cwtl
mov
jle
push
and
insb
fistpl
sti
jb
shlb
xchg
jl
push
mov
insb
xor
xchg
add
or
add
pop
push
sarl
and
pop
iret
mov
jns
bnd
rcl
pop
sar
das
sbb
leave
les
lret
and
roll
and
es
cli
inc
test
cltd
and
leave
pop
out
jge
inc
inc
cmpsb
fsubs
mov
test
adc
xchg
pop
adc
dec
outsl
inc
pop
clc
jae
cli
push
fstpt
dec
dec
cli
je
add
sahf
das
stc
xchg
aam
cmp
aad
sbb
and
int
jnp
fimuls
and
inc
xchg
movsl
fcmovu
jne
dec
iret
push
or
insl
add
dec
mov
jb
mov
cli
mov
movsl
push
popa
out
imul
inc
push
cltd
lret
dec
mov
mov
loopne
sub
cld
sbb
jcxz
dec
or
subl
imull
or
push
xchg
mov
mov
clc
loope
push
test
je
or
and
aas
addr16
and
ficomps
jecxz
xchg
dec
cmc
idivl
pop
xor
fmul
mov
mov
sarl
xor
pop
adc
ret
cmp
mov
mov
sub
mov
sbb
mov
ficoml
xor
add
jg
xchg
jecxz
loopne
leave
cmp
xor
xchg
xchg
ljmp
mov
xlat
mov
and
mov
xchg
pop
pop
xor
xor
push
jae
and
in
fmuls
test
cmp
loope
sbb
jnp
adc
xor
unpcklps
push
xchg
add
insl
int3
sub
push
test
fadds
cltd
mov
enter
sbb
add
mov
add
cltd
push
lahf
and
pop
test
sub
out
pushf
adc
push
add
jnp
push
ss
lret
ss
sbb
inc
inc
popa
push
xor
test
nop
sub
bound
das
sub
fwait
sub
insl
nop
ja
arpl
xchg
xor
cli
mov
jge
enter
aam
shrb
inc
div
mov
inc
mov
stos
push
add
mov
and
cwtl
and
adc
push
sub
mov
inc
adc
xchg
es
test
decl
dec
mov
sbbb
xchg
cmp
test
mov
push
test
scas
dec
push
pop
enter
out
xor
out
dec
cmp
aam
mov
push
cmp
cs
cmc
mov
push
in
enter
lahf
rcl
or
add
mov
cmp
icebp
mov
mov
dec
out
jae
insb
add
leave
sub
push
dec
sahf
sub
out
setle
stos
xor
scas
pop
add
inc
inc
sub
cmp
popa
movsl
push
mov
mov
mov
sbb
loop
loop
repz
leave
inc
cmovnp
pop
mov
and
inc
cmp
lcall
roll
test
and
mov
push
shl
adc
mov
dec
pop
cmp
imul
fsubp
sti
dec
pop
push
loope
in
cwtl
in
scas
or
clc
loope
jno
mov
enter
je
inc
sub
sbb
add
xlat
aam
orb
rcrl
imul
loop
rol
jnp
in
out
push
dec
fisubs
fs
cmp
pop
icebp
jb
xchg
sub
out
outsl
scas
mov
xchg
dec
in
jge
sbb
fdivs
in
or
sarb
or
dec
or
mov
adc
mov
test
std
mov
xchg
in
lock
cmpl
sarb
cmp
fs
mov
cmp
dec
les
test
out
mov
xlat
imul
xor
fsubrs
mov
cmc
outsl
pop
cli
loope
divps
cmpsl
push
add
inc
push
adc
cs
xchg
sub
cmp
inc
leave
lcall
sub
popa
xor
inc
adc
mov
stc
cmp
sti
mov
fistpll
test
mov
cmp
pop
es
aaa
mov
call
dec
push
lods
push
xchg
dec
int
xor
adc
cmp
out
mov
sub
mov
mov
mov
or
lret
mov
aaa
push
push
add
pushf
insb
outsb
inc
or
xchg
pop
and
jb
mov
push
js
test
mov
or
push
add
cmp
jnp
rorl
cmp
out
aaa
imulb
adc
or
fcmovu
sub
xchg
hlt
mov
jae
jne
sub
jnp,pt
dec
lahf
mov
gs
xlat
rcrl
mov
repnz
cld
cmp
sub
ja
jecxz
dec
shl
shrb
testl
aad
mov
inc
or
int
inc
pop
xchg
pop
popa
cli
mov
lcall
test
ja
xor
or
jp
xchg
add
movsl
scas
arpl
ret
fs
les
dec
cmpsl
pushl
xchg
scas
les
xchg
add
jb
push
filds
cmp
add
fdivrl
dec
lret
popa
jl
xchg
imul
js
loope
inc
cld
mov
pop
divl
xchg
popa
mov
subl
or
cmp
xchg
cmp
sub
jge
loopne
xor
and
or
call
mov
jg
sub
fdivrl
decb
ss
mov
mov
lret
jno
and
inc
add
xchg
and
mov
in
ds
add
mov
xchg
jmp
cmp
ja
xchg
and
cmpsb
lea
mov
or
outsb
stc
adc
dec
movsl
sbb
push
mov
insl
and
and
fwait
in
mov
mov
je
lcall
mov
out
sti
lds
sbbl
ret
mov
test
stos
push
scas
jo
addb
xor
cmc
sbb
das
fwait
aad
xlat
add
insb
lds
mov
adc
mov
xchg
addr16
loop
cli
push
pop
adc
in
mov
outsb
inc
movsb
dec
mov
and
scas
adc
int3
test
clc
add
add
loop
out
push
fldcw
insb
jbe
xor
add
mov
dec
stos
pop
sahf
pop
arpl
mov
sbb
dec
mov
xor
int3
mov
repnz
dec
stos
clc
xor
aaa
sahf
adc
bound
sbb
or
xor
mov
mov
scas
sub
scas
or
push
cmp
stos
loopne
cmc
es
hlt
mov
rcrl
jmp
push
xchg
scas
ds
pop
mov
in
mov
insb
aam
push
lds
mov
sarb
jae
out
cmp
cld
push
orb
mov
adc
in
daa
test
cmpsl
adc
out
lret
inc
push
dec
jbe
xchg
xor
jl
out
arpl
push
aaa
cwtl
scas
pop
test
mov
lahf
sbb
mull
xchg
xchg
mov
inc
mov
add
sub
jg
jle
cmp
xchg
int3
hlt
and
mov
test
ret
inc
lcall
pop
inc
ret
leave
sbb
nop
icebp
ljmp
xor
divl
ja
jge
sub
xor
dec
mov
inc
loope
sbb
push
ja
cld
mov
or
pop
cld
es
sub
addl
stos
push
lret
inc
idivl
mov
adc
dec
nop
sahf
out
popa
movsl
mov
xchg
out
testl
shll
mov
push
daa
adc
xor
push
mov
inc
ret
rcrl
sbb
add
xchg
stc
adc
call
int3
mov
repnz
jmp
inc
fnstenv
cmp
jnp
push
adcb
push
shl
rcrb
add
xchg
popl
push
cmpsb
xchg
xor
cmp
in
mov
dec
jae
pop
insl
and
leave
cpuid
mov
inc
scas
push
xchg
std
fnstsw
loopne
or
push
xor
xor
ljmp
add
cmpsl
out
sub
mov
or
stos
pop
mulb
jmp
xchg
lahf
sti
jg
pop
adc
pushf
fistl
test
adc
mov
ret
push
sub
addr16
sbb
xchg
pop
pop
pop
xchg
xchg
mov
js
das
clc
cmpsl
lea
add
test
mov
sbb
lock
mov
mov
sar
fwait
mov
fucomi
inc
pop
das
loope
mov
fbld
xchg
xchg
add
imul
sbb
out
divl
inc
stc
jmp
jbe
xchg
pop
das
lds
pusha
mov
jg
nop
dec
out
inc
call
rclb
sub
adc
or
rcr
cli
xor
lock
fs
outsl
ss
mov
sar
pop
shlb
mov
jp
lahf
pop
lods
push
mov
xor
pop
pop
mov
loop
sbb
lds
pop
popfw
cmp
sbb
shrb
hlt
adc
jnp
dec
aas
inc
adc
insl
sub
mov
loopne
push
and
jbe
call
out
pop
xor
and
mov
xorb
jl
cld
insl
iret
in
xor
mov
inc
fistpl
sbb
inc
dec
dec
cltd
mov
lret
popw
cs
inc
inc
mov
adc
jg
fcoms
xor
mov
push
aad
in
addr16
aaa
mov
cmpsl
testb
pop
fisubl
repz
pop
or
shll
cmc
pushf
pop
inc
cltd
push
divl
inc
pop
pop
push
xor
dec
pop
pop
jg
icebp
adc
pop
dec
daa
jl
push
or
jae
xchg
mov
aam
mov
mov
jg
aad
mov
or
out
mov
sahf
ljmp
pop
push
add
std
lds
sub
shrl
pop
cmpb
or
cmpsl
mov
pop
pop
push
dec
mov
cmp
sbb
sbb
jg
lock
inc
loop
bound
call
sbb
js
pop
cltd
pop
testb
jle
or
sbb
fisubl
je
add
lods
pop
es
imul
stc
xor
repz
ja
inc
outsb
mov
and
xorb
jp
mov
pop
aas
pop
sub
dec
repnz
roll
add
ss
loop
shrl
iret
sub
cmp
into
jge
dec
pop
ret
jmp
into
push
add
insb
out
xor
xchg
adc
sub
dec
pop
add
scas
clc
adc
mov
xor
icebp
mov
xchg
outsl
add
js
insl
out
mov
xor
pop
fadds
stc
ds
jp
test
mov
xor
pop
flds
xchg
aad
pop
out
in
clc
push
xchg
inc
inc
aam
enter
frstor
mov
ffreep
dec
dec
jae
ret
dec
test
mov
imul
mov
adc
lret
test
orb
movsb
inc
or
in
push
and
jae
jb
jmp
lret
mov
out
adc
adc
stos
call
pop
sbbb
cmp
cmc
adc
lahf
adc
pop
and
movsb
shll
sahf
push
jge
sbb
pusha
inc
jae
push
ja
xor
fsubrs
lods
stc
fnstenv
xchg
iretw
push
cli
sub
popf
xchg
jbe
push
add
subb
adc
mov
jle
or
inc
push
push
add
fdivrp
adc
mov
xchg
lcall
stos
pop
das
rcr
shlb
lods
pop
test
add
adc
imul
sub
test
ficompl
aad
rcrb
and
adc
lret
out
ret
pop
sub
mov
pop
mov
cli
stos
inc
fisttpll
push
cmc
lods
shr
or
daa
add
stos
ljmp
adc
popa
push
pop
bound
popa
mov
fs
cmp
int3
fisubl
in
cmp
sub
cmp
jecxz
lock
add
outsl
rcrl
dec
daa
mov
int
test
mov
jnp
mov
xchg
dec
sub
sbb
in
push
addr16
xchg
mov
fbld
mov
cmpb
inc
jge
pop
xchg
push
inc
sarl
pop
scas
lcall
jmp
and
dec
pop
cmpsb
and
stc
jge
lcall
lods
leave
popa
inc
sbb
inc
lea
iret
dec
and
add
adc
sbb
push
imul
xchg
insl
out
lcall
adc
fbld
flds
push
add
cmp
jb
jns
jo
fbld
jo
jg
jecxz
inc
nop
sub
jnp,pt
lahf
inc
lods
je
and
xchg
daa
jle
xchg
stos
fsts
mov
xchg
out
stos
push
mov
jmp
sub
mov
inc
adcl
jmp
mov
jb
mov
sarb
sub
mulb
pop
mov
stc
int3
lods
or
movsb
dec
dec
bound
xchg
add
rol
adc
cmp
adc
aam
lock
cmp
push
daa
mov
cltd
rclb
notl
jg
or
and
mov
dec
pushf
fs
fdivrs
mov
xchg
sbb
cmp
push
xor
clc
xor
lds
mov
adc
fnstcw
mov
iret
repnz
sub
add
push
in
rorb
jns
mov
in
pop
lret
jae
push
test
bound
adcl
cmpl
push
or
mov
roll
xlat
mov
hlt
inc
mov
mov
xor
les
lods
lret
into
xor
fstpt
mov
hlt
and
fmull
icebp
sbb
mov
jbe
inc
loop
mov
pop
ret
aad
pop
push
push
scas
pop
pcmpgtw
cs
insl
pop
pop
cmp
mov
cmp
jmp
mov
or
movsl
mov
add
loop
fidivrl
dec
jmp
outsb
and
bound
pop
sahf
mov
adc
sbb
shll
or
das
dec
das
js
xlat
out
pop
frndint
pop
sub
aam
inc
mov
cmp
scas
outsl
in
ficomps
movaps
lock
ss
inc
push
dec
cmpsl
xor
push
std
push
cmp
add
movsl
fwait
dec
push
scas
lds
push
xchg
push
fbld
aad
or
loope
sahf
pop
jge
std
or
xor
test
sbb
sub
ret
cmp
dec
mov
jecxz
hlt
loope
lret
imul
leave
es
ficoml
das
mov
cld
es
dec
insl
jno
movsb
or
stos
xchg
lret
movb
loope,pt
xor
sub
add
sbb
out
adc
repz
orl
sahf
jecxz
mov
jbe
mov
insb
stos
pop
mov
cmpsl
in
psllw
data16
dec
push
ret
sti
imul
add
lcall
jl
pushf
mov
push
inc
dec
repz
aas
mov
xor
out
lods
or
xor
mov
outsb
mov
xchg
fidivs
stos
nop
sarb
test
imul
test
jnp
pop
std
cmp
mov
push
push
adc
mov
pop
inc
popa
out
cmpsl
inc
cmp
mov
insb
cmp
dec
cwtl
fisubl
out
inc
cmp
repnz
addr16
xchg
repz
loopne
push
movsb
lahf
cmc
mov
aas
icebp
jne
enter
xchg
fimull
add
or
insl
pop
xor
jecxz
inc
fisttpl
mov
icebp
cmc
sbb
jno
lods
inc
push
fs
sti
scas
mov
lock
adc
or
loope
cs
sbb
inc
call
sbb
mov
ret
pop
mov
dec
shr
adc
or
mov
out
sub
ret
add
cmpb
in
mov
jno
xchg
bound
inc
add
mov
xchg
mov
dec
mov
lods
fstp
insb
mov
mov
and
pop
aad
xchg
mov
xchg
popa
cld
mov
cmc
dec
mov
int3
les
mov
mov
outsb
jno
loop
jne
orl
vaddsd
jmp
bound
hlt
mov
imul
sbb
out
fdivs
mov
std
sub
jbe
xor
movl
adc
sbb
stos
fs
sbb
mov
addb
aam
dec
push
addr16
scas
mov
pop
dec
mov
jp
pop
pop
movsl
cmpsb
addb
lea
add
push
pop
pop
sub
or
push
or
data16
and
cltd
push
xor
gs
sbb
bound
aas
cs
adc
mov
call
ljmp
sub
dec
in
pop
lods
pusha
push
xor
xor
push
test
add
jbe
imull
cmp
sub
sub
out
xor
adc
addr16
pushf
jle
sbbl
das
jne
lea
popa
pop
cmp
leave
jp
es
sarl
cltd
xor
push
fcomp
mov
imul
sub
arpl
add
push
fnstcw
sub
push
in
movsl
jmp
pop
jp
arpl
test
shrb
aam
jle
inc
push
inc
xchg
fstpt
jl
add
insl
mov
dec
stos
ljmp
shll
bound
dec
sub
mov
loop
outsb
xor
xchg
imul
push
andb
ret
mov
addr16
movsb
shlb
rolb
fists
scas
and
inc
mov
pop
les
inc
mov
ret
ja
mov
cli
nop
out
shrb
aaa
and
sbb
dec
lea
test
jp
xchg
mov
sbb
outsl
inc
adc
sub
int3
adc
lods
xor
es
aaa
fistps
out
or
adc
mov
xor
rorb
sub
popa
push
sbbb
insl
dec
pop
stc
xchg
popf
aaa
imul
sbb
in
popa
loop
lods
inc
arpl
int3
mov
mov
jb
rorb
fstl
jb
xor
stos
sbb
cmp
rclb
stos
xor
pop
insb
sbb
pop
sub
mov
xchg
sahf
cmpsb
test
jbe
lret
add
add
push
push
inc
push
cmpsl
xchg
jns
sub
lcall
into
jl
imul
xor
iret
add
xor
out
mov
mov
fisubl
out
mov
loop
xor
add
data16
adc
sarb
leave
call
pop
repz
jecxz
in
push
add
push
aam
xchg
cwtl
pop
into
addr16
test
aas
insb
push
xchg
pop
rorb
pop
jo
mov
lahf
mov
cmp
adc
mov
mov
lret
add
pop
bound
sub
jno
mov
fstpt
xchg
sbb
test
or
mov
std
pop
sbb
div
cmp
or
xchg
dec
repz
xchg
enter
call
aas
inc
mov
jb
pcmpgtd
cs
sbb
mov
pop
or
repnz
sbb
nop
and
outsb
in
mov
enter
add
movsl
fdivrs
mov
or
into
cmpsb
mov
js
pop
dec
rcrb
sub
jo
cmc
mov
scas
enter
stos
in
or
or
repnz
scas
adc
lret
and
std
lcall
or
bound
push
adc
inc
sub
aas
pusha
mov
mov
leave
adc
pusha
cmc
sbb
lcall
inc
adc
pop
inc
lahf
in
lds
mov
dec
jb
lods
cld
out
xchg
sbb
popf
popf
dec
add
push
add
test
sarb
and
pop
nop
push
daa
push
xchg
mov
xchg
les
cmp
xchg
mov
popa
push
or
mov
push
out
inc
add
cmc
sbb
fdivl
cmp
jbe
inc
or
or
scas
notl
mov
push
xchg
out
pop
outsl
add
test
add
mov
dec
mov
fcoms
jb
dec
push
cmp
gs
dec
stos
adc
pop
rcrl
inc
int
jbe
cmc
inc
mov
push
pop
ret
sbb
push
out
sub
jg
imul
and
je
lret
popf
dec
mov
xchg
and
lods
jl
lods
xchg
das
insl
adc
cmp
adc
and
jg
bound
popf
fcomp
lret
sub
xchg
cmp
mov
add
push
outsl
lahf
inc
dec
decl
in
mov
shll
jecxz
mov
imul
mov
loope
rcl
pusha
mov
or
add
mov
mov
lock
fs
mov
aam
insl
and
pop
push
out
ja
mov
stos
fwait
xchg
sub
enter
mov
ljmp
and
lret
mov
add
or
sub
mov
push
mov
fwait
or
jle
sti
jp
rcll
push
shr
xchg
adc
mov
and
adc
stc
jbe
dec
push
jl
leave
add
pop
icebp
xchg
dec
sub
bound
aas
repnz
daa
sti
dec
ret
dec
pop
ds
add
push
les
adc
mov
xchg
scas
leave
dec
or
icebp
push
xchg
xchg
nop
jb
mov
test
std
stos
mov
arpl
aad
and
outsl
add
sbb
clc
insl
bound
and
add
xor
cmp
sti
sbb
push
and
add
cmc
add
mov
xlat
movsb
sub
lret
pusha
aad
and
lret
adc
stos
jle
fisttpl
testb
ret
cmp
mov
andl
push
outsl
pop
pop
mov
push
popf
aas
mov
imul
or
repz
and
xor
imul
aas
pop
fisttpll
popf
or
cmpsb
mov
sub
adc
xchg
mov
jae
outsl
out
lds
ss
jp
cwtl
lahf
cmpsl
sub
rcrb
push
frstor
push
mov
add
out
sub
cmc
aaa
mov
shll
mov
inc
sub
jle
lret
mov
mov
nop
das
mov
lcall
dec
mov
sbb
pusha
jne
mov
jo
or
xor
imul
out
adc
out
sbb
xor
xchg
push
scas
in
scas
jl
insb
sti
mov
movsb
fdivl
or
inc
and
dec
mov
filds
mov
popf
aaa
sbb
js
loop
sub
push
push
test
sysexit
imul
cmpsb
fidivrl
xchg
inc
pop
push
jmp
sahf
push
push
jae
psubsw
xor
push
cmpsb
shlb
add
mov
cli
mov
movsl
filds
test
sub
mov
lea
jbe
daa
imul
cmp
pop
and
mov
daa
and
hlt
mov
pop
pop
mov
lods
movsb
pop
lret
cltd
test
xchg
imul
mov
enter
fldt
xchg
call
mov
lds
stos
sbb
jo
jae
arpl
mov
pop
push
cltd
mov
cmp
cmp
test
jno
push
divl
aad
and
aam
aaa
stos
and
dec
sbb
and
loopne
jb
mov
xchg
loopne
xor
cwtl
jg
addr16
fwait
insb
and
jecxz
mov
lret
or
aaa
fildll
push
int3
sub
gs
lret
scas
inc
repnz
out
imul
sub
shll
or
dec
and
lds
arpl
pop
jb
inc
cmp
cmp
cld
cs
dec
inc
mov
fwait
inc
enter
push
mov
idiv
ds
adc
andl
xchg
xor
daa
jl
push
mov
or
cmp
icebp
jp
lods
lret
push
xchg
fstl
loopne
lahf
and
out
push
scas
or
adc
inc
sbb
sub
mov
pop
push
scas
jno
xlat
dec
shl
pop
or
adc
sub
lret
add
iret
sub
inc
lock
xchg
es
dec
mulb
push
mov
out
out
sbb
push
mov
outsb
test
imul
out
sub
frstor
xchg
bound
add
test
sbb
adc
mov
jbe
fimull
stc
and
imul
xchg
mov
and
lret
fwait
push
mov
jns
dec
in
arpl
jle
movsb
hlt
pop
fsubs
pop
out
cmpsl
or
dec
mull
outsb
xor
dec
mov
pusha
cmp
repz
lret
sub
ds
movsl
ret
inc
pop
or
push
add
repz
int3
push
xchg
ficoml
stos
fdiv
and
jle
mov
push
es
inc
test
pop
pushf
rorl
mov
icebp
pop
xchg
xor
pop
shrb
stos
xchg
clc
jns
lock
ds
and
aad
sub
jecxz
sar
int3
and
je
adc
in
mov
test
lods
add
jp
or
clc
or
mov
aam
cmpsb
sbb
lcall
in
data16
jae
sbb
rcr
ds
xchg
test
push
in
jg
mov
sbb
cmpsl
enter
lcall
lret
mov
or
scas
jecxz
fidivs
pop
popa
sub
sbb
pop
nop
mov
out
aam
mov
jg
and
lods
xor
sbb
or
pop
xor
sbb
xor
adc
data16
mov
rclb
je
add
stos
xor
or
mov
push
lds
ret
ret
lock
mov
inc
fcomip
xor
xchg
fs
dec
stos
sub
lret
in
or
call
adc
jp
jle
adc
out
mov
ret
add
cld
mov
ficoms
bound
sbb
xchg
pop
rsqrtps
fnsave
mul
xchg
add
cmpb
repnz
andb
mov
add
add
mov
adc
leave
and
mov
jmp
mov
push
or
and
dec
jmp
lret
addr16
mov
test
sti
pusha
test
add
xchg
idivl
add
cmp
adc
dec
and
xchg
sbb
arpl
mov
and
imul
imul
int
xor
ds
sti
loop
scas
je
icebp
inc
push
inc
cmp
cs
ss
sub
call
cltd
pop
cmp
cmp
sub
push
mov
icebp
lds
jecxz
fs
xorl
xchg
insl
fsts
in
dec
std
jo
ret
fcoms
popa
mov
dec
out
xor
lret
cmp
ja
push
sar
sbb
sub
and
mov
jp
adcb
jnp
jg
int3
aam
dec
jb
sbb
mov
rcr
arpl
enter
cmc
pop
mov
scas
pop
leave
out
push
xchg
pop
repz
popa
mov
les
and
adc
xchg
outsl
inc
jne
loop
std
sub
xchg
pushf
orb
mov
jp
jl
loope
xor
dec
popa
fildl
ja
aaa
pushf
ret
jge
push
push
in
mov
inc
push
scas
xchg
push
pop
sub
lret
scas
lea
and
fxch
mov
imul
xor
or
xor
or
inc
mov
cmp
std
ljmp
mov
xchg
mov
bound
mov
mov
out
xor
imul
test
mov
sarb
mov
mov
aad
ds
xor
jo
int3
ret
sbb
xor
adc
push
cld
fsubr
mov
pop
adc
das
stos
xor
popa
sbb
dec
xor
xlat
inc
loope
pusha
outsb
lcall
out
jecxz
aad
xchg
mov
test
idiv
fnstsw
loope
daa
outsb
xchg
push
xor
imul
pop
jb
iret
lahf
pop
rcrb
sbb
xchg
dec
pop
sarb
push
mov
pusha
mov
loopne
xchg
push
adc
imulb
aad
jb
mov
add
add
sub
inc
add
int3
sub
mov
xor
or
gs
loop
loopne
hlt
hlt
adc
cld
push
add
push
sbb
pushf
out
out
xchg
pushf
push
jle
sub
cs
clc
xchg
adc
or
jl
test
test
aas
lret
movb
pop
fisttps
cltd
sbb
sbb
jmp
or
fcmovnbe
insl
aas
or
sub
sti
outsb
xor
stc
std
push
les
pop
in
enter
rcr
add
sbbl
push
inc
xchg
leave
cmpsb
adc
pop
jg
mov
jp
jle,pn
lods
daa
and
inc
xchg
mov
mov
xor
dec
repnz
cmp
cmp
movsb
loop
cltd
fsub
in
add
add
cmp
mov
insb
in
imul
std
jle
rcrl
out
xlat
fisttpl
and
cmp
adc
mov
inc
arpl
fwait
test
cld
sub
jo
negb
pop
cwtl
mov
popa
ficompl
mov
mov
in
shrb
sub
pusha
xchg
add
add
cltd
cmpsb
mov
mov
je
push
sbb
mov
sti
xchg
pushl
adc
pop
mov
bound
inc
lret
adc
pusha
into
insl
add
push
xor
push
and
xchg
xor
xchg
mov
inc
in
cmp
jno
push
pop
jmp
fwait
addl
or
add
push
lret
mov
xchg
jl
sbb
add
and
ljmp
mov
call
sub
inc
adc
scas
sbb
cmpsb
mov
fldenv
adc
and
mov
or
out
push
or
xchg
adc
push
inc
pop
lods
fs
xor
pop
icebp
and
add
or
sti
push
shlb
hlt
lods
cmp
scas
jecxz
mov
int3
mov
std
push
ret
sub
jl
and
cmp
mov
fs
inc
adc
inc
mov
inc
sarb
pop
mov
loope
cmpsb
pop
mov
mov
out
dec
stos
popf
mov
rcll
fistpll
lock
out
es
push
cmp
pop
test
mov
jmp
dec
test
add
fcmovnu
ljmp
inc
push
or
mov
clc
push
cmpsl
or
jns
push
aaa
pop
or
subl
mov
adc
jp
push
cs
jmp
sarl
ljmp
cmp
add
xor
jo
movsl
loope
xor
fwait
inc
and
add
xlat
add
movsb
jl
jl
movsb
out
shl
shl
mov
add
pop
xchg
loope
pop
sbb
jg
test
mov
enter
mov
mov
std
test
push
xchg
test
jbe
jnp
into
sub
cmp
ror
cmp
es
jmp
fs
movsb
int
mov
and
lret
pop
out
inc
or
push
bnd
xor
out
in
dec
sbb
pop
mov
xchg
out
out
or
popa
cld
and
dec
mov
ret
lds
loope
mov
cli
insl
mov
dec
sahf
pop
and
or
cltd
jge
push
dec
cltd
sub
out
mov
dec
sub
xorb
add
jno
pop
xor
aam
lds
sub
ja
cs
rcrb
int
dec
into
push
call
push
push
daa
pop
int
inc
imul
loop
mov
inc
xchg
in
cmc
mov
mov
cli
mov
or
or
testb
test
sbb
in
mov
xchg
push
jmp
or
dec
icebp
aam
clc
sbb
iret
int3
and
repz
jmp
add
jae
clc
dec
push
xor
test
lcall
aaa
pop
mov
xchg
rclb
data16
leave
mov
mov
rcrl
icebp
lods
cmp
adc
sub
fsubrs
xor
xchg
jl
aam
in
dec
jno
stc
imulb
outsl
addr16
jle
loop
setbe
mov
lret
xor
lock
mov
jge
jle
addr16
aas
fwait
in
sti
cltd
pop
or
shll
sbb
adc
in
push
push
mov
mov
xor
out
mov
dec
or
jecxz
popf
imul
jne
push
push
fdivs
insl
movsl
push
orl
cs
push
xchg
and
pop
dec
test
add
mov
jl
test
or
int3
sub
aam
lahf
push
movb
cld
stos
ds
pop
sti
sbb
addr16
cmp
cmp
or
data16
lea
or
xor
dec
add
out
pop
dec
sbb
adc
cmp
adc
dec
dec
repz
jle
cmp
clc
add
push
or
outsb
cmpsb
mov
arpl
out
cmp
movsl
xchg
lock
xchg
in
out
orb
pop
jno
sbb
jno
and
shr
pop
jle
cli
dec
test
push
cld
cmp
into
mov
cmp
cmp
leave
fadd
mov
inc
jnp
pop
jnp
push
mov
add
mov
pop
jl
xchg
fcompl
cwtl
test
dec
xor
pusha
cmc
iret
imul
xchg
mov
sub
in
mov
push
inc
nop
popf
jb
jns
notl
xor
int
data16
ljmp
sbb
mov
mov
push
rcll
imul
mov
mov
fdivrp
cmpsb
add
cs
aaa
push
cmpsl
push
lods
add
mov
iret
add
lods
or
out
add
aad
or
jecxz
pop
mov
mov
add
sahf
sub
mov
movsl
sbb
jnp
les
stos
ret
lcall
test
and
sbb
in
jb
add
jae
pushf
or
addb
lods
dec
in
es
and
enter
jg
cmpsl
sbb
or
mov
and
lds
fcomi
mov
mov
dec
scas
adc
add
fistpll
lret
sbb
xchg
pop
xchg
push
sahf
mov
or
xlat
divb
in
cmp
leave
movsl
push
sbb
mov
loopne
out
out
mov
enter
inc
mov
ret
in
movsl
inc
movsl
jno
notb
ret
nop
push
lock
pop
daa
in
dec
out
pushf
loopne
fistps
sbbb
xchg
inc
inc
jmp
and
ficoms
xchg
adc
insl
int
pop
or
cmp
mov
push
pop
cmc
stos
adcl
fisttpll
sti
lods
aad
ss
rcll
xor
xor
test
add
and
push
imul
mov
inc
cli
jl
scas
jl
mov
in
xchg
movsb
ljmp
mov
cmp
sti
inc
or
push
mov
xchg
dec
dec
xor
pop
icebp
push
out
out
push
mov
fs
and
fmulp
test
sbb
pushf
xor
jmp
and
int3
inc
enter
and
int3
cmc
cwtl
sbb
iret
mov
rcrl
mov
test
inc
inc
cmc
xlat
cmc
or
add
addr16
pop
sbb
pop
push
or
lcall
sbb
or
lahf
inc
sbb
addl
sbb
mov
push
scas
push
sarb
addb
int
mov
jg
insl
nop
pop
fbstp
push
dec
loopne
mov
xchg
add
inc
dec
jg
sbb
push
dec
out
push
je
in
dec
lret
mov
shl
dec
xchg
mov
jmp
pop
sbb
add
and
xor
jae
xchg
add
stos
stos
je
push
push
sbb
adc
mov
add
in
mov
mov
cmp
int3
pusha
or
sub
aas
out
into
adc
jo
pop
stos
adcl
mov
cmp
or
adc
fldl
add
adc
mov
inc
and
scas
pop
in
lea
jb
or
mov
je
cld
push
ror
sbb
movb
insb
test
sbb
lret
aas
test
test
dec
xchg
sbb
fstps
out
cmp
lods
add
aam
in
sahf
or
or
push
aas
jp
inc
ljmp
mov
add
addr16
jge
out
sub
pop
std
add
sbb
loope
dec
cs
cmp
xor
sbb
mov
jg
mov
aad
jp
fsubrl
sbb
ss
loopne
cmp
mov
sub
cmp
xchg
push
xor
mov
mov
dec
xor
mov
les
or
js
jb
jp
mov
push
mov
cmp
and
jl
loop
cmp
pop
jo
aad
add
adc
adc
aam
out
fisttpl
int
loopne
jg
cmp
jecxz
adc
das
add
lods
test
cmp
mov
xchg
inc
fs
adc
xor
pushf
sub
dec
push
rcll
jge
push
popa
lods
daa
pop
pop
out
pop
mov
jle
pxor
hlt
mov
add
jns
fs
fnstcw
mov
mov
sarl
sub
push
cli
or
dec
leave
fcmovb
or
jae
mov
jb
flds
in
out
pushf
int3
xlat
inc
adc
fcmovne
test
or
cmp
dec
mov
call
push
pop
jnp
xchg
dec
shll
out
jl
adc
arpl
rcr
adc
into
arpl
mov
cmp
inc
lret
addr16
push
push
mov
mov
sub
jle
aam
and
dec
mov
cmpsb
aas
jb
pop
shlb
xor
and
subb
dec
rolb
insb
lret
push
cmp
sub
loopne
das
push
shr
add
in
ljmp
mov
mov
xchg
outsl
xchg
jae
test
inc
xor
in
xor
loope
das
push
mov
lods
gs
dec
pop
into
in
jb
pop
stc
jge
adc
pop
add
mov
lret
test
sti
and
jmp
hlt
dec
lcall
pop
push
fninit
mov
dec
sbb
clc
repz
sti
mov
mov
lds
jbe
out
jns
ds
ret
andb
dec
pop
add
call
or
or
mov
or
je
or
sbb
stc
stos
jg
mov
jnp
cmp
dec
sub
fcoml
add
dec
in
insb
lret
imul
jns
out
mov
mov
sbb
pop
ljmp
jno
mov
mov
mov
sbb
xor
imul
mov
js
add
fstps
adc
jg
add
leave
addr16
jecxz
mov
and
gs
mov
mov
ret
mov
or
les
in
cwtl
adc
pusha
out
xlat
in
outsl
or
mov
or
sbb
loop
ss
lods
fcom
push
scas
add
jo
inc
jp
in
outsb
xor
sub
sub
mov
push
mov
push
inc
imul
sub
adc
addb
shrl
loope
jbe
xchg
xchg
pop
adc
sub
xor
fisubs
xor
lcall
sbb
sbb
inc
faddp
push
inc
in
jbe
aaa
and
nop
shl
lret
mov
push
adc
mov
test
cmp
movsb
pop
lret
sar
sarl
scas
fdivp
fsubrs
pop
out
pop
lcall
jno
mov
add
cmpsb
xchg
push
mov
mov
sub
mov
cmp
lock
xor
lods
addb
aaa
dec
mov
cwtl
xor
out
add
in
push
cwtl
pop
pop
stos
push
pop
ss
fidivrl
sub
xor
adc
xor
jae
xchg
and
out
mov
lret
push
mov
aad
pusha
out
xchg
mov
jb
adc
enter
cwtl
lret
jmp
into
adc
cmp
cli
pop
sarl
fcmove
jmp
mov
pop
loopne
push
push
or
add
cmpsb
adc
ljmp
in
in
add
int3
idivl
or
jbe
or
push
or
cld
fwait
mov
jp
out
dec
in
adc
movsl
push
nop
jnp
sbb
ljmp
mov
jg
xchg
or
stos
rcrl
test
cwtl
mov
cmp
add
ljmp
inc
dec
pop
and
jle
inc
bts
push
push
pop
cmp
ret
xlat
push
pusha
jne
xchg
loope
sbb
lods
pop
mov
add
std
jp
mov
sbbl
xchg
out
and
roll
jecxz
call
pop
mov
inc
xlat
pop
add
mov
fistl
mov
sti
mov
addb
into
mov
sbbl
decb
jns
pop
fimull
cli
bound
push
stos
push
in
xchg
pop
mov
jge
aas
es
shrl
int3
aad
sub
mov
adc
xchg
xchg
outsb
outsb
or
sbb
jnp
adc
mov
mov
cmp
addb
mov
push
mov
lea
mov
pop
int
mov
cltd
pop
leave
ja
daa
dec
ljmp
jb
mov
in
cmc
jmp
dec
daa
ljmp
les
loope
cs
pushf
fidivrl
push
or
jb
lret
je
imul
nop
dec
push
dec
pop
loopne
cmp
jmp
stos
in
dec
dec
imul
ret
mov
shll
cltd
adcl
pop
insl
jecxz
pushf
add
clc
iret
popf
fisubrs
push
mov
lcall
add
out
push
fldenv
lock
xor
dec
mov
mov
add
icebp
cwtl
and
aaa
pop
sar
in
popf
test
pop
or
shll
ja
mov
push
cs
jg
sbb
enter
and
mov
xor
sbb
sub
popa
jb
mov
adc
test
mov
cmpb
mov
cwtl
xor
mov
mov
sub
mov
mov
je
jb
inc
inc
pop
sub
add
cld
popf
andb
sbb
daa
outsl
sub
es
inc
fcmovbe
movsb
arpl
and
jg
push
scas
mov
rclb
ret
imul
repnz
addl
hlt
push
mov
popf
pop
lods
pop
and
into
xor
subb
stos
cmpsl
inc
sarl
push
mov
daa
daa
cmp
je
arpl
jo
shr
sti
shrb
dec
imul
mov
add
dec
cmc
mov
push
js
sti
lahf
dec
lea
shll
sbb
dec
stos
andw
xor
es
xor
test
outsb
int3
cmpsl
call
inc
fbstp
mov
xor
dec
pushf
mov
aas
or
hlt
push
rcr
data16
sub
in
divb
scas
jecxz
insl
sbb
popf
mov
dec
push
sbb
jns
lcall
push
sar
sub
sub
and
jle
lods
add
or
mov
mov
das
xchg
movsl
dec
mov
fadds
sbb
xor
insl
hlt
cld
pusha
or
pop
movsb
and
shll
jae
mov
jae
dec
frstor
cli
imul
cmpsb
pushf
dec
nop
add
lds
jp
mov
pop
sbb
adc
pop
xchg
mov
mov
jno
stc
xchg
lea
out
xchg
mov
int
lret
ret
add
xchg
or
add
repz
dec
rcrb
ja
jl
and
cmp
jbe
arpl
movsb
mov
xchg
mov
xor
pop
mov
in
jp
inc
pop
ja
call
fwait
shlb
mov
pop
out
sar
cltd
push
lods
add
in
mov
addr16
mov
data16
xchg
cs
iret
cmpsb
add
xchg
outsb
shll
icebp
adc
add
or
shll
stos
add
in
mov
sbb
sub
jg
int
imul
pop
push
push
fmul
xor
jg
xchg
add
inc
pop
lods
xlat
push
add
cs
enter
and
sbb
ds
jp
push
jns
or
jae
pushf
int
loope
inc
lahf
lcall
cmc
lret
jl
sub
xor
sbb
adc
in
dec
push
xor
ret
loope
gs
rcll
repnz
cmpsl
inc
xchg
fildl
and
jno
jno
andl
add
movsl
adc
dec
mov
in
clc
stos
lcall
jae
test
jb
leave
int3
inc
cmp
dec
push
inc
fistpl
lock
imul
pop
pop
mov
mov
xchg
mov
push
ss
sahf
lock
imul
add
jge
dec
icebp
mov
mulb
ljmp
scas
pop
inc
cmc
stc
sub
xor
leave
push
push
xchg
in
xlat
es
sub
fistps
xor
imul
and
push
cmp
cmc
test
ret
in
mov
xchg
cmp
inc
call
push
xchg
xchg
lret
add
mov
cmc
push
shl
mov
rorl
aad
clc
ja
and
lahf
fucom
or
imul
stos
adc
push
pushf
sahf
icebp
dec
mov
adc
mov
mov
xchg
push
sub
cli
imul
pop
clc
mov
sub
aas
mov
xorb
push
stos
jmp
adc
or
neg
pop
icebp
mov
xor
adc
lahf
call
dec
popf
mov
fwait
pop
roll
fldcw
or
add
or
out
outsb
dec
filds
cmp
inc
popa
rcl
jecxz
sub
and
int
push
sarl
arpl
and
add
or
jnp
pop
mov
mov
or
daa
sbb
cmpsb
dec
ja
out
and
das
pop
ljmp
jns
pop
xor
inc
dec
mov
adc
jne
push
loope
dec
imul
jb
cmp
xor
mulb
cmp
or
jno
lahf
jecxz
outsl
or
insb
mov
dec
in
inc
add
int3
imul
es
inc
addr16
jle
xor
ficoms
adc
inc
inc
cmp
push
std
fisubrs
rcr
inc
adc
js
push
rcrb
out
cmp
adc
push
xchg
xor
xor
inc
scas
inc
pop
jmp
dec
dec
rcrl
cmc
pop
xchg
mov
popf
sub
mov
sbb
scas
xor
inc
inc
cmp
pop
fnstcw
dec
pop
xor
test
mov
adc
mov
pushf
pusha
sbb
lea
xchg
rcrb
mov
mov
popa
add
fstpl
movl
aam
xchg
lret
sub
lds
sbb
sub
mov
sub
dec
shrb
push
movsb
or
fmuls
pop
test
push
fstpt
push
push
pop
push
test
pop
mov
mov
mov
mov
stos
bound
or
sahf
xor
movsl
jns
add
mov
jp
xchg
cmp
pop
sub
int
push
mov
xor
dec
xor
cld
xor
arpl
push
std
lcall
daa
mov
push
mov
ljmp
pop
test
dec
xchg
sbb
pop
xor
adc
ret
mov
cmp
movsb
fmuls
and
xor
aad
jb
faddl
mov
pop
push
call
mov
dec
lea
jns
xor
inc
ret
pop
fmull
adc
in
ficompl
cwtl
stos
shll
fidivrs
repnz
aaa
fdivrp
loope
pusha
lcall
push
or
fldenv
or
loope
test
iret
push
ja
inc
out
mov
jo
fmulp
addr16
cmovl
pusha
mov
fdivl
jge
mov
and
int
fimuls
jne
adc
add
and
in
add
movsl
rclb
jg
outsb
mov
or
js
rorb
jge
enter
inc
clc
shrb
add
push
pop
ss
jg
rolb
test
mov
pop
inc
cmp
les
popa
aad
sti
test
std
mov
xchg
clc
fs
mov
sbbb
jge
xor
hlt
cmp
lock
test
inc
cld
aad
movsl
icebp
push
or
stos
add
cmp
xor
mov
shl
xor
pop
aaa
lret
and
mov
repnz
iret
xchg
shrb
jbe
pop
push
cmp
lret
scas
pop
mov
arpl
cli
adc
or
push
ret
gs
xor
jae
xchg
pop
dec
mov
test
mov
nop
cltd
stos
xor
cmp
sub
mov
lds
daa
cmp
movb
sbb
pop
or
inc
aad
add
push
jp
sub
nop
repz
movsl
aaa
jnp
arpl
or
das
sbb
sbb
negb
xchg
call
lea
repz
push
cmpl
iret
aaa
adc
outsl
mov
adc
sub
jecxz
push
push
aad
lods
icebp
jmp
popa
sub
fld1
sub
xor
rcl
xor
xor
stos
adc
or
lods
sbb
sti
jo
dec
jbe
cmp
mov
cli
xchg
sub
dec
fcompl
lahf
mov
popa
loope
divl
mov
pop
pusha
mov
or
push
mov
cmc
jge
mov
dec
mov
xchg
xor
push
inc
mov
cmpsb
gs
cmpsb
pop
lret
cli
adc
xchg
xchg
mov
bound
mov
sub
cld
adc
mov
push
adc
in
roll
or
call
mov
out
or
pusha
ret
dec
jg
mov
add
je
and
test
or
pushf
fnsave
int
sub
xchg
movsl
xchg
int3
jbe
jmp
add
mov
test
add
jp
movsl
bound
push
and
mov
mov
jbe
dec
pusha
cmp
clc
xor
loop
jecxz
adc
clc
pop
into
icebp
mov
nop
xchg
in
andl
inc
int
add
pop
mov
mov
add
fsubs
jge
insl
mov
jge
je
imul
sub
mov
out
sbb
sbb
cmp
iret
je
hlt
push
push
push
xchg
test
xor
orb
or
fs
aad
xor
call
xchg
nop
and
jae
mov
fildl
ret
add
cmp
les
pop
inc
lahf
stc
pusha
sub
jg
aad
sub
repz
jge
push
mov
orb
and
and
mov
pop
pop
repnz
aam
push
sbb
mov
hlt
mov
adcl
mov
jo
jne
int3
xchg
ljmp
into
stos
add
into
pop
mov
push
pop
xchg
std
jl
test
mov
pop
je
lret
mov
xchg
mov
in
add
popa
dec
pop
xchg
jge
and
push
addl
mov
mov
mov
mov
and
stos
mov
stos
dec
ljmp
daa
xchg
cltd
mov
loopne
mov
into
enter
fldl2e
inc
popf
insb
inc
test
int3
stc
mov
mov
push
or
std
jne
fldl
pop
mov
or
jle
sbb
mov
or
inc
stos
fadds
insl
lret
inc
xchg
mov
inc
sub
sbb
sbbb
xchg
shll
xor
aad
andl
pop
mov
js
push
pop
je
dec
aas
out
mov
and
idiv
fdivrl
mov
int3
mov
pop
push
sub
inc
ja
je
cld
cmp
ljmp
aaa
in
stc
jo
daa
mov
out
push
mov
mov
imul
enter
cmp
add
adc
setnp
mov
aaa
mov
sub
nop
out
andb
mov
jp
popa
jno
pop
mov
inc
sub
invd
rclb
aad
pop
mov
inc
and
lock
mov
jnp
xchg
das
addb
lcall
mov
movsl
cmp
dec
mov
mov
cmpsl
mov
ss
dec
adc
enter
scas
add
lret
lods
cmp
lods
or
int3
addb
lods
and
inc
jp
jnp
xchg
loopne
dec
dec
or
les
xor
jo
loop
jecxz
pop
pop
push
inc
pusha
adc
jmp
mov
movsb
and
or
repnz
fnsave
push
call
mov
jns
xchg
pop
add
xchg
xchg
sub
and
push
push
and
addr16
adc
pop
fmull
pop
fcoml
inc
dec
loop
pop
fildl
jae
stc
xor
and
imul
cmp
push
jo
push
mov
inc
rep
inc
add
jl
sbb
pop
cmp
pop
scas
sub
jg
mov
arpl
jmp
shrb
lds
xor
shrb
cmpl
pop
pop
outsb
clc
push
les
rcrb
or
sbb
loopne
push
mov
mov
and
xchg
mov
xchg
jge
mov
adc
adc
jb
das
mov
jge
add
dec
imul
enter
testl
faddl
loope
cli
and
jae
adc
pop
shl
out
arpl
mov
xchg
call
mov
sbb
dec
cmpsb
rcl
jns
push
xor
sbb
out
jmp
aad
mov
fisttps
inc
add
jmp
push
mov
jbe
data16
fwait
add
popa
or
dec
sbb
mov
jne
push
adc
jmp
cld
stc
iret
xchg
and
push
loopne
mov
ds
movsb
dec
xchg
xlat
inc
test
sub
fwait
jmp
push
sub
sbb
or
xor
sbbb
inc
push
push
add
xchg
loop
mov
sub
or
mov
nop
sub
pop
mov
imul
mov
add
movsl
popf
mov
clc
cmc
dec
jb
xchg
rorb
negl
mov
stc
popa
jb
dec
push
cmp
jae
in
lods
rorl
cs
cmpsb
fwait
movsb
and
out
les
mov
movsl
sti
sbb
dec
notl
inc
fimuls
mov
cmpsl
arpl
pushf
pusha
dec
mov
es
adc
test
xor
std
rol
mov
sub
andb
ret
xchg
xlat
inc
pop
mov
call
pop
push
mov
aas
or
fdivrs
shr
adc
mov
jmp
in
push
cmp
fs
or
arpl
inc
repz
dec
pop
cmp
cmp
push
mov
addr16
mov
leave
mov
xchg
xor
dec
icebp
dec
movsb
adc
mov
filds
jae
les
mov
inc
push
jo
xchg
fwait
inc
jae
arpl
jne
adc
mov
cmp
xchg
leave
js
test
je
push
ret
mov
and
push
jge
pop
dec
adc
out
pop
imul
cmpsl
std
jne
sub
adc
dec
adc
aam
loop
cmp
cs
push
lahf
test
jge
cmpb
push
jl
lock
sub
aaa
pop
outsl
xor
jp
xchg
push
sbb
loopne
lea
pop
js
mov
pop
js
fdivr
ret
scas
lcall
fadds
imul
sbbb
or
sbb
add
aad
ret
rcll
jo
add
add
data16
imul
sahf
add
mov
push
jnp
lcall
adc
lds
lcall
dec
test
cmpsl
mov
xchg
dec
push
dec
and
or
sub
cmpsb
pusha
int3
jle
or
jg
insb
pusha
les
lods
pusha
movsl
fildll
bound
mov
enter
or
and
std
loop
clc
out
sub
dec
movsl
xor
jp
pop
cmpsb
mov
push
je
add
pop
add
jne
mov
lods
mov
lcall
sbb
jb
dec
movsb
out
mov
dec
inc
jae
notb
aaa
addl
scas
mov
mov
push
mov
fmulp
in
mov
jbe
lret
jno
out
out
sub
xor
pop
adc
outsb
out
cltd
aam
clc
call
aaa
outsl
xchg
xor
or
mov
jne
test
lret
jge
fldl
mov
ffree
dec
sti
push
cs
or
insb
jno
xchg
mov
add
add
repnz
or
and
xchg
test
jbe
push
sub
test
mov
xchg
adc
push
arpl
bnd
or
sub
add
aad
xor
mov
xlat
sub
xlat
std
push
dec
mov
aaa
xchg
sub
cld
jb
stos
repnz
test
mov
cltd
aaa
adc
sbb
xor
push
sbb
test
jmp
cmpsb
push
std
mov
out
xchg
fisttpl
add
ret
add
jns
les
sub
inc
or
sahf
mov
sarl
mov
lcall
fisubrs
mov
pop
inc
aas
cmp
fmul
dec
call
dec
test
mov
outsl
hlt
lret
mov
adc
push
adc
add
or
and
dec
pop
xchg
pop
jecxz
adc
adc
cs
xchg
pusha
pushf
mov
jp
mov
ljmp
outsb
ret
mov
cmp
out
xor
pushf
aam
dec
fdivs
std
sbb
jo
and
and
in
pop
lret
insl
mov
lods
add
inc
push
call
enter
xor
and
cmc
pop
and
sub
sub
stos
push
mov
add
inc
xor
dec
pop
sub
aad
inc
adc
fdivl
ljmp
test
insl
sti
mov
push
and
jmp
gs
jl
cld
push
lods
shl
iret
fmul
jmp
std
jmp
imul
sbb
mov
adc
sub
pop
repnz
pop
mov
ljmp
hlt
xor
in
test
jo
jmp
rcrb
lods
loop
cmpsb
sub
int3
movsl
mov
push
cwtl
xor
inc
shrl
mov
sbb
mov
shlb
xchg
pop
jp
or
sbb
dec
cwtl
sub
cltd
fwait
aaa
dec
jae
add
sub
add
icebp
xchg
fmulp
mov
cmp
addr16
jns
pop
cs
loope
mov
ja
outsl
and
iret
ljmp
and
ss
stc
dec
pushf
xchg
sti
dec
cmp
and
fdiv
jno
out
adc
push
pushl
inc
dec
test
mov
xchg
jmp
imul
pop
xlat
push
imull
divb
daa
and
jo
fldl2e
enter
mov
push
xlat
scas
call
arpl
sti
clc
push
jne
inc
jge
cwtl
jo
addr16
ljmp
hlt
jp
sbb
adc
shl
cmp
je
cli
mov
add
adc
arpl
push
mov
ret
pop
hlt
shrb
mov
xchg
adc
add
in
sbb
aad
or
adc
cmp
dec
add
push
rcrb
or
out
pusha
mov
addr16
sub
or
cmp
pusha
movl
adc
dec
imul
mov
bnd
and
adc
jge
ss
xchg
sahf
sub
xchg
mov
mov
lahf
jnp
mov
fildl
inc
mov
jae
jmp
dec
sub
xchg
movl
pop
scas
shrl
out
add
lds
pop
or
xor
mov
mov
sbb
loop
pop
cmp
pop
push
mov
ret
and
daa
mov
jg
mov
jl
cmp
sub
iret
jno
out
inc
jae
imul
sahf
jb
shr
mov
mov
jg
test
loop
xchg
ljmp
mov
or
sub
mov
out
sahf
and
sbb
pop
xchg
lahf
sub
jbe
repnz
sbb
in
inc
enter
hlt
cltd
and
jb
sti
insb
lods
mov
enter
test
inc
dec
shll
inc
out
mov
and
jb
ret
fiaddl
iret
lahf
cs
xor
jno
xchg
xchg
out
and
inc
and
cmp
ret
out
pop
pop
inc
jo
fadds
jecxz
push
out
shl
icebp
xor
ja
xchg
xor
push
fistps
pusha
dec
mov
enter
fwait
sarb
jo
dec
das
pop
mov
sub
mov
mov
fsts
icebp
sbb
int3
jo
sbb
mov
add
lods
cmpsb
les
out
loope
jns
gs
mov
popa
xchg
out
push
add
add
in
or
idivl
in
xor
push
adc
add
or
daa
push
jb
mov
sub
push
fldenv
aam
std
sub
outsl
jle
insb
leave
test
pop
je
cwtl
imulb
and
mov
pop
sbb
add
push
cwtl
inc
mov
xor
cltd
nop
xchg
repz
dec
outsb
movsl
pop
push
loope
cld
and
fucom
test
filds
mov
jo
add
rcll
clc
mov
pop
adc
imul
jge
incl
into
shl
ret
or
outsl
adc
sub
testb
in
and
lds
xchg
lcall
dec
dec
pushf
out
sbb
inc
sub
jno
cli
cmp
les
ja
lcall
adc
or
xchg
pop
mov
cwtl
add
cmpsb
push
xor
push
dec
icebp
adc
enter
std
adc
je
std
dec
inc
addr16
and
sbb
out
andl
inc
or
pop
movsb
leave
cmpsl
push
mov
mov
or
aas
jne
mov
sarl
pop
loope
ljmp
mov
mov
dec
cmp
int3
cld
and
rcll
dec
mov
call
push
pop
sbbb
and
jp
ja
pop
adc
and
pop
lret
call
lods
dec
repnz
fidivl
scas
lahf
or
push
jmp
push
cmp
sub
add
popa
arpl
punpckhbw
mov
sahf
lods
sbb
pop
ss
clc
mov
fwait
dec
xchg
out
insb
jge
xor
mov
in
in
sbb
lods
pushf
pop
jne
jnp
jnp
btc
mov
fbstp
fiaddl
rolb
fdivr
push
aaa
subb
insb
in
or
dec
mov
loope
sbb
add
push
int
inc
loope
das
cmp
fnsave
push
fimuls
xchg
shrl
mov
in
rclb
push
aam
mov
loopne
push
js
sub
pop
mulb
mov
mov
pop
fcmovbe
inc
sahf
popa
leave
mov
mov
jp
push
mov
jns
insl
stos
mov
xchg
enter
jae
jg
lods
std
ret
faddl
mov
imul
and
lret
push
jge
cmc
dec
xor
cmp
pop
xchg
sbb
sbb
outsb
je
int
jmp
cmp
inc
aaa
out
cmp
popa
mov
pop
pop
xor
enter
insl
stos
inc
pop
mov
das
push
jge
pop
jae
jmp
cmp
sub
xchg
push
mov
jl
cwtl
int
mov
scas
mov
rcl
test
jl
mov
dec
push
addl
xor
nop
clc
andb
or
jle
push
in
jle
pcmpgtw
jmp
pop
les
ficomps
insl
push
fwait
jns
mov
add
cmp
lds
dec
jg
sti
xchg
andl
in
fadd
mov
sub
shll
jns
jns
cld
fistl
adc
cmp
inc
loope
cli
mov
ficoms
pop
pop
outsl
aas
push
jp
cwtl
sub
cld
mov
mov
mov
mov
mov
mov
fcoml
pop
cmp
lock
jnp
jae
pop
fs
sub
sbb
js
sarl
push
or
decb
mov
aam
sub
mov
int
mov
mov
mov
push
rorb
mov
fldcw
scas
jmp
hlt
mov
xor
or
dec
or
scas
inc
add
roll
add
decb
mov
outsb
aas
mov
jle
cmp
xor
sahf
and
xchg
add
push
je
pop
cmp
call
out
inc
movsl
jne
dec
mov
dec
jmp
inc
sbb
dec
aaa
jmp
int3
sbb
sbb
fimull
and
sub
push
pusha
pop
cs
clc
lret
mov
xchg
jg
inc
subl
shll
jo
hlt
loop
ds
adc
sbb
outsl
inc
imul
neg
aad
xlat
cmp
mov
jp
daa
aaa
mov
mov
inc
dec
lcall
mov
mov
xor
jecxz
mov
or
push
xchg
jp
and
mov
sahf
arpl
pop
sbb
sbb
cmp
cvtdq2ps
fwait
lahf
jp
jb
push
fs
xchg
mov
cmp
xchg
push
adc
pop
jne
cmpsl
pop
mov
ja
addl
add
lcall
add
jnp
lods
fs
data16
das
add
cmpsb
data16
jg
sbb
cmp
adc
xor
inc
loopne
add
add
das
gs
adc
adc
mov
dec
movsb
ljmp
mov
or
and
jge
fistl
dec
aaa
jb
imul
inc
fldln2
push
test
stos
jne
stc
inc
dec
jg
fistpl
in
icebp
scas
subl
push
aaa
xchg
xchg
stos
adc
insb
insb
out
mov
xor
repz
aaa
adc
arpl
xor
push
sub
add
mov
insl
push
cmp
jno
ss
xchg
or
lds
push
adc
cmp
adc
sbb
adc
lods
jns
sbb
lods
or
push
fs
neg
push
sbb
inc
xor
ja
jmp
sub
sbb
mov
pop
popa
xchg
lock
movsl
int
inc
dec
imul
adc
jno
adc
ds
xchg
aam
cs
pop
jmp
in
mov
sub
aaa
adc
and
dec
pusha
lea
pop
fdivrl
and
popf
icebp
cmp
jmp
dec
jge
arpl
pusha
cmp
scas
push
mov
jne
jecxz
mov
push
test
dec
xor
shrd
das
and
add
loop
andl
pusha
in
mov
adc
icebp
mov
cli
pop
in
mov
loope
in
xchg
aam
add
push
stos
xchg
mov
mov
rol
lahf
or
psubsb
inc
into
jbe
sahf
and
jg
xchg
inc
dec
xor
jge
shlb
lds
mov
push
xchg
addr16
add
xor
jl
jmp
filds
icebp
arpl
xor
repz
and
push
test
inc
enter
aas
std
cld
movsb
xchg
popa
sbb
push
mov
int
xor
fwait
out
lahf
outsb
es
loopne
mov
dec
test
adc
fldl
cmp
lock
pushf
insb
jle
das
jg
jns
test
add
add
push
imul
mov
xor
std
imul
pop
push
mov
test
jle
fwait
mov
cmc
push
pop
dec
sbb
xor
maxps
lods
pop
cmp
pop
hlt
push
add
gs
add
ljmp
fsubrs
sbb
fimull
mov
sbb
cmp
cs
rclb
loop
jb
xchg
sbb
mov
fisttps
std
pop
inc
cld
jb
inc
loopne
xor
push
out
in
jbe
sbb
nop
jae
out
out
shrb
adc
push
pop
decb
jg
sbb
les
cmp
or
cmpsl
dec
loop
dec
call
sbb
int
lahf
jecxz
push
sbb
popa
cwtl
ljmp
jl
ljmp
repz
cld
int3
shll
jle
push
inc
pop
cmp
or
cli
pushf
jb
bound
ret
fisttpll
sahf
mov
movsl
stos
add
add
lea
add
lds
mov
or
cltd
test
gs
cmp
xchg
or
xor
sahf
mov
inc
in
outsl
ficoml
mov
outsb
adc
or
jno
push
push
pop
mov
and
push
lods
popa
mov
pop
ror
push
cltd
out
ret
mov
jl
out
incl
loop
pop
hlt
out
lock
movq
inc
sahf
inc
mov
in
push
lea
or
bound
fucomip
xchg
jb
dec
push
mov
add
cmp
dec
sub
cmp
insb
cs
mov
ja
in
stc
fildl
in
sti
lret
in
test
push
fsubr
push
mov
pop
lahf
xchg
or
and
sub
adc
imull
out
movsb
add
and
mov
mov
insl
aam
jns
aaa
fcompl
mov
and
mov
sbb
dec
cmp
xchg
dec
mov
push
out
jp
stos
loopne
lods
popf
push
int3
fwait
leave
loope
rcrl
mov
mov
mov
repz
push
xor
jnp
sbb
and
int3
test
int
cmpsb
test
xchg
or
jmp
jp
cmpb
inc
mov
loope
in
pop
jle
mov
adc
and
xchg
jno
mov
jmp
inc
outsl
je
add
xor
dec
sub
into
shl
pop
pop
mov
mov
int3
mov
mov
dec
data16
pop
dec
ret
add
jp
cli
movsb
cwtl
dec
mov
pop
xchg
jl
mov
xchg
xor
in
mov
mov
clc
es
inc
out
sub
push
pushl
push
imull
xor
pop
scas
push
sbb
pop
cmpsl
outsb
out
pop
fs
stc
push
test
mov
aas
clc
lret
imul
xchg
xchg
or
ss
int3
xchg
adc
xor
adc
mov
or
mov
insb
imul
mov
mov
in
cltd
push
sub
imul
and
cmp
sbb
mov
xor
into
jg
lcall
mov
mov
nop
mov
repnz
lcall
and
in
je
or
dec
popf
testb
push
fdivl
push
xor
bound
sub
xor
aaa
lret
mov
cmp
adc
xchg
or
shrl
cmpb
xchg
inc
xor
jns
or
xchg
cli
loop
pop
es
mov
mov
mulb
repz
call
out
mov
testb
incl
ljmp
xchg
xchg
add
mov
repz
cmp
pusha
cwtl
nop
mov
xchg
mov
int
dec
mov
mov
mov
xor
cmc
daa
loopne
icebp
dec
scas
xchg
ds
dec
test
mov
loopne
mov
or
movsb
pop
out
adc
inc
filds
xchg
test
or
pop
or
cmp
and
jmp
xchg
ret
test
push
mov
outsl
int3
aaa
mov
xchg
or
cmpsb
sbb
ds
mov
fldcw
popa
push
dec
loope
ss
aas
les
or
jne
dec
enter
test
sbb
lds
popf
into
ret
aam
out
add
and
inc
stos
ficoms
push
and
out
loop
sub
in
jmp
cmpsb
mov
aam
arpl
cmp
addr16
stos
jae
add
jle
and
cmp
sub
xor
adc
adc
mov
mov
stos
dec
fwait
stos
xchg
sub
scas
add
xchg
out
xchg
mov
inc
data16
cltd
lahf
push
sbb
push
and
jne
push
lods
adc
sub
out
mov
movsl
nop
dec
add
pushf
xchg
fcmovnu
jp
inc
fdivrl
sarl
xchg
rcrb
fsts
jns
stc
lds
and
popa
stc
cmpsb
dec
lods
out
xor
movsb
dec
dec
movsb
sub
ds
enter
mov
loopne
lret
inc
sub
js
nop
sti
arpl
adc
and
bound
xor
or
shr
fwait
pop
jne
dec
test
push
mov
stos
ja
mov
xchg
or
js
addr16
outsb
ja
fucomi
fsubr
xchg
mov
jae
ja
hlt
inc
lret
das
test
and
popa
pop
jno
jg
xchg
adc
or
sbb
sbb
call
mov
xor
notl
push
sub
gs
inc
cmp
into
mov
inc
pop
push
inc
cmc
push
out
xor
mov
fxch
js
inc
xchg
data16
mov
pushf
mov
pop
int
mov
xor
shll
jecxz
jno
pop
pop
xchg
mov
out
mov
ret
xor
loope
pop
sahf
or
push
xor
test
iret
adc
mov
out
daa
and
shrb
mov
sub
push
push
ficoms
popf
testb
cmp
jle
clc
cltd
mov
mov
loope
test
out
push
idivb
imul
mov
ss
mov
in
jle
push
sub
xor
fwait
je,pn
dec
push
sbb
loope
stos
out
mov
shl
xchg
pop
clc
in
cmpsb
inc
rorb
test
add
out
movsl
inc
in
cmp
popf
scas
shrb
xor
push
js
or
enter
pop
and
push
and
ficomps
std
sub
xchg
imul
and
inc
outsl
call
outsb
fsubrl
mov
lods
and
les
test
lahf
inc
fimuls
pop
ret
inc
cmpsb
and
add
cmpsl
push
repnz
pushf
adc
xchg
jge
es
fisttps
jmp
pop
dec
jp
dec
orb
dec
fwait
je
xor
daa
inc
cmp
movsl
sar
adc
jp
sub
xor
mov
loop
and
fiadds
data16
and
scas
outsb
daa
dec
mov
adc
mov
dec
jbe
repz
call
jg
inc
sbb
popa
ret
push
dec
sbb
pop
out
mov
dec
cmpsl
xchg
outsl
popf
out
fnop
shlb
or
inc
movl
add
jo
out
mov
cwtl
mov
xorb
push
pusha
adc
mov
push
and
jmp
cld
push
data16
lea
arpl
sar
add
rclb
adc
xor
push
insb
mov
das
enter
imul
outsl
addl
dec
cmp
mov
je
mov
and
test
mov
jg
lock
daa
shlb
in
neg
adc
sub
adc
pop
cmpsl
lcall
cmc
stos
inc
pop
icebp
popf
insl
cld
rcr
aaa
out
cld
xchg
divb
jns
add
xchg
push
or
sbb
mov
and
and
out
and
sub
rorl
jnp
inc
sub
in
notb
jge
push
ret
rcl
imul
add
jns
xor
or
into
add
push
inc
inc
mov
bnd
rcrl
add
lret
rorb
les
movsb
out
xchg
jge
sub
test
sti
mov
jbe
xchg
jb
and
jmp
add
push
pushf
sub
in
xchg
jbe
and
and
and
out
adc
mov
aad
xchg
pop
orl
je
cmp
inc
mov
test
xchg
cmovge
jne
fldl
add
hlt
cmp
fcoml
les
lods
popa
dec
cld
aam
loop
jns
je
shlb
rcll
clc
mov
pop
sub
loop
js
out
adc
mov
push
cmp
cmp
xchg
pop
cltd
jae
or
and
mov
cmp
faddl
xor
insb
loope
lock
jne
xorb
adc
clc
push
cld
mov
mov
pop
pop
pop
lret
push
inc
mov
lods
and
lcall
xchg
fwait
add
lods
mov
and
leave
mov
jmp
add
mov
ds
dec
into
jecxz
add
sbb
add
cmc
bound
cmp
rorb
out
lret
push
mov
adc
fildl
sbb
ds
cs
sahf
push
dec
das
fsubr
insl
icebp
jns
push
mov
and
mov
pop
pop
repz
arpl
in
dec
add
add
cmpsb
and
xor
andl
mov
mov
dec
mov
add
out
cmp
push
xorb
add
clc
add
cmp
aaa
mov
push
mov
test
sub
rcrb
jmp
aas
and
icebp
cld
fstpt
mov
dec
mov
hlt
out
lahf
jmp
mov
xlat
subb
mov
mov
sarl
sbb
mov
xor
jmp
mov
in
mov
outsl
stos
jbe
xchg
and
int3
or
sub
mov
imul
sub
shll
ret
adc
add
sbbb
sbb
fs
insl
add
and
dec
pop
pop
imul
inc
xchg
repz
pop
leave
push
mov
add
or
mov
fiadds
pushf
mov
mov
pop
int
or
rolb
cmp
push
out
sub
je
dec
in
stos
aaa
and
data16
inc
xchg
pop
mov
or
sbb
jle
rol
mov
mov
sbb
push
inc
aas
adc
iret
pop
mov
dec
jbe
adc
subb
iret
cmp
inc
imul
xchg
sub
stc
leave
outsl
jno
leave
cmc
and
scas
out
inc
pushf
dec
jle
jmp
test
sub
imul
push
mov
mov
leave
bound
push
add
outsb
popa
mov
push
test
sahf
aam
or
shll
xor
xchg
repz
pop
orl
mov
stc
mov
ror
jbe,pt
rclb
movsb
lea
imul
mov
mov
push
je
push
mov
mov
mov
stos
outsb
mov
scas
jmp
les
inc
mov
push
imul
mov
adc
mov
mov
aad
pop
xchg
incl
adcb
and
pop
inc
nop
sbb
push
lods
and
pop
jae
das
sbb
cmpb
pushf
and
mov
mov
pop
insb
dec
xor
adc
inc
and
in
icebp
lods
bound
lods
pop
jnp
fldl
loope
xor
mov
jp,pn
jecxz
jns
test
stc
xor
pushf
iret
sbb
movsl
cmp
fildll
arpl
ret
cmp
rcl
fwait
sub
mov
ss
ljmp
mov
pmullw
dec
lods
jne
lret
sub
push
pop
js
popf
add
pop
adcb
xchg
jmp
aas
lds
lods
cld
pop
xchg
push
jge
adc
fcmovnu
and
scas
sbb
ret
leave
mov
sub
pop
xor
mov
iret
mov
into
adc
or
add
push
cs
xor
scas
call
in
in
arpl
mov
mov
cmpsl
mulb
and
push
xlat
icebp
pop
leave
cltd
cmovae
out
into
jbe
pop
test
mov
sub
add
mov
jmp
inc
cs
and
mov
push
fcos
fsubrs
and
dec
imul
icebp
and
mov
aaa
sub
call
mov
mov
mov
sbb
mov
sahf
and
push
pop
fdivl
mov
loopne
jbe
fs
repz
sahf
dec
or
icebp
mov
sbbb
ja
arpl
push
jo
push
popf
dec
adc
jae
sahf
icebp
add
and
ja
aas
icebp
movsb
mov
ficoms
xchg
jb
mov
repnz
orl
fdivrl
sub
imul
add
mov
lock
stc
mov
xchg
sti
aad
loopne
sub
mov
scas
lcall
mov
mov
and
lods
fiadds
dec
mov
mov
dec
out
sbb
jl
ja
jge
in
in
push
push
inc
xor
mov
pop
sub
inc
bound
add
data16
inc
icebp
jg
or
dec
xor
adc
jnp
dec
jmp
jecxz
adc
gs
lahf
dec
xor
adc
fs
or
das
ficoml
xchg
repz
mov
fcmovnb
sub
xchg
push
mov
add
xor
addr16
jle
jmp
addr16
jmp
or
out
pusha
cmp
mov
lret
enter
scas
out
sti
jo
in
lods
rcll
rcr
loope
rcl
jmp
sbb
fwait
cmpsl
shlb
xchg
in
pop
sub
in
jbe
arpl
rcr
test
jae
scas
mov
stos
insl
std
mov
cld
div
cmpsb
jl
xchg
icebp
mov
addr16
out
push
cmpb
and
test
cs
inc
xchg
lock
subl
or
mov
in
inc
stc
push
jle
testb
sti
sarl
leave
jp
js
loopne
iret
jns
adc
addb
xor
xlat
test
cmp
int
xor
jb
mulb
outsl
shll
or
movsl
sbb
in
add
rorb
pop
mov
or
aad
xchg
push
jbe
neg
aaa
mov
and
push
bound
test
cmpsl
jae
out
or
sub
cmpsb
sub
popf
inc
jmp
pop
mov
sub
xchg
fimuls
pusha
cmc
pushf
addb
mov
out
mov
test
insl
call
js
clc
sbb
mov
scas
cmp
push
repnz
xor
cmp
mov
and
pop
pop
int3
ljmp
rclb
ds
jbe
dec
sti
imul
hlt
test
lods
shl
clc
sbb
inc
mov
sub
push
and
fs
out
pusha
mov
das
mov
in
dec
flds
cmc
lods
pop
push
inc
lahf
jno
outsb
and
or
xchg
jge
je
sub
gs
in
das
call
push
gs
or
pop
mov
out
pushf
fisubrs
jp
inc
fcomps
imul
push
sub
fstpl
mov
xor
and
movsl
testl
mov
sbb
fwait
nop
xor
cli
jbe
test
cmp
inc
push
lds
sbb
scas
dec
mov
in
xor
int
adcb
mov
daa
shlb
lcall
lods
enter
pop
notl
lock
or
jg
loope
cwtl
cltd
pop
ficoms
cmp
mov
mov
inc
jbe
mov
mov
outsl
jnp
iret
jae
es
sub
cli
sbb
and
mov
mov
inc
lcall
js
negl
in
and
jne
jne
mov
or
xchg
ret
add
inc
pop
repnz
aas
enter
pop
cmp
push
dec
mov
sbb
mov
pop
fistpl
std
fisttps
mov
cmp
add
daa
shrl
push
and
std
xchg
out
xchg
jle
flds
in
pop
rclb
rolb
or
and
sbb
pop
push
ret
fidivs
aam
movb
shll
add
daa
push
xor
xlat
ror
lahf
daa
test
insb
pop
cmp
lahf
insl
lret
sbb
dec
inc
adc
sbb
gs
pop
pop
popf
lcall
jmp
idiv
adcb
xchg
out
pop
lock
jne
cmp
mov
push
jnp
dec
push
stos
mov
mov
imul
inc
out
fsubp
cli
je
pop
in
cli
mov
nop
push
scas
dec
aam
mov
ret
push
jge
leave
pop
bound
sbb
das
push
push
call
in
cmp
xchg
jne
pop
pop
inc
testl
ficompl
enter
xor
mov
xchg
jge
add
adc
xor
lds
out
std
faddl
dec
pop
add
and
testl
and
mov
shrb
mov
jae
adc
sahf
rorl
add
in
jno
pusha
sub
xchg
nop
add
loopne
scas
scas
lea
fdivrp
dec
inc
jl
ds
inc
mov
outsl
js
in
mov
or
in
inc
aas
adc
repnz
and
aad
subl
icebp
out
adc
xchg
fcompl
movb
imul
imul
cpuid
out
jmp
push
xchg
lods
filds
adc
xor
out
mov
xchg
not
or
cmc
jge
jo
mov
and
popa
or
adc
jae
push
out
addb
jge
call
outsl
adc
iret
fsubrl
xchg
push
int
sbb
pop
aas
xor
xchg
xor
push
ficompl
pop
push
stc
cmpsb
cmc
sub
or
std
loopne
movsb
push
add
mov
fstpl
xor
adc
stos
pop
inc
adc
loop
pop
xor
dec
into
cmc
xchg
mov
add
hlt
mov
mov
std
in
loopne
int
ss
mov
add
pop
arpl
mov
add
mov
std
xchg
sub
aas
add
data16
dec
psubusb
mov
mov
push
bound
or
lods
pop
js
xchg
or
mov
sub
pop
mov
jo
sbb
jno
leave
je
inc
dec
jp
and
pop
int
or
mov
or
xchg
mov
cmpsl
push
inc
jecxz
mov
xchg
mov
icebp
inc
inc
fstpt
sbb
pop
mov
sub
shrb
outsl
inc
sti
int3
inc
jo
and
mov
jno
sub
pop
pop
inc
dec
mov
push
adc
push
out
mov
inc
jbe
mov
mov
cmpl
dec
fwait
das
adc
xor
cltd
or
lds
inc
jno
fwait
sbb
ss
aas
dec
sub
xchg
cmpsl
xorl
sub
in
mov
jl
pop
push
jbe
addr16
jle
lahf
in
jo
inc
sub
je
arpl
bound
xor
xchg
lret
stos
push
inc
inc
test
daa
insl
mov
std
cwtl
push
or
outsb
or
fldl
pop
inc
fwait
sub
xchg
outsb
mov
sti
sub
and
ljmp
ds
xadd
arpl
test
add
sahf
push
inc
pop
sbb
mov
in
jae
stos
les
xchg
or
cld
mov
hlt
dec
lods
iret
mov
pop
pusha
fisttpll
xchg
jno
jbe
push
sub
in
enter
sbb
mov
pop
out
jecxz
or
iret
or
dec
mov
and
lahf
push
hlt
mov
outsb
loopne
xchg
dec
sbb
pop
ss
xchg
xor
enter
mov
cs
mov
in
cld
scas
inc
lcall
fst
test
xchg
sti
andb
outsb
repz
out
mov
pop
push
notl
cmpl
jno
sbb
sub
pop
outsb
call
push
orl
push
mov
adc
les
idivl
push
xor
push
out
add
mov
pop
iret
orl
scas
sub
cmp
adc
dec
push
popa
or
negb
inc
rcrl
imul
lods
mov
mov
sbb
fdivl
mov
push
fistpl
pop
push
sbb
inc
xchg
fsubrl
enter
mov
inc
mov
insb
push
jle
xchg
or
aas
push
dec
add
lds
jns
out
sbb
xchg
xchg
pop
mov
jge
leave
sbb
data16
xchg
dec
sbb
mov
push
out
mulb
stc
outsl
pop
fimull
xor
test
lcall
stos
xorl
cwtl
sti
cltd
push
pop
sub
jmp
sbb
cmpsl
pop
add
cmpb
sbb
stos
je
jne
enter
adc
and
xor
ret
jbe
jle
or
stos
test
push
and
sbb
loopne
pop
aam
jno
jmp
xchg
pop
stc
cmc
mov
mov
inc
mov
inc
add
cli
cmp
xchg
add
sbb
dec
repnz
ret
imul
popf
pop
add
ds
sbb
xor
pushf
mov
aam
repz
xchg
mov
sbb
add
cwtl
inc
icebp
sbb
data16
insb
push
in
repnz
sub
adcb
mov
addr16
jp
and
jo
rcrl
ficompl
filds
leave
push
pop
imul
sbb
cmp
mov
lret
cwtl
iret
sbb
inc
mov
xor
test
ds
adc
test
aam
xchg
and
ret
inc
sub
dec
lods
jnp
gs
pop
sbb
mov
rclb
xchg
sbb
sub
xchg
jbe
push
ss
or
aaa
int
shrb
popa
push
pop
fdivl
xchg
xorb
pop
sub
imul
ret
rorb
movsb
jbe
retw
push
inc
aas
insl
imul
movsl
jmp
or
mov
add
call
repnz
mov
jge
imul
lahf
aam
stos
pop
dec
lods
cli
test
add
jns
lret
mov
cmp
pop
cmp
sbb
or
jmp
add
add
pop
pop
push
and
cmp
cmp
xchg
pusha
mov
daa
mov
aas
inc
out
dec
mov
and
cwtl
sub
jbe
aad
insb
fcoml
push
jns
push
iret
stos
int3
ficoml
es
jns
sbb
dec
js
mov
sbb
and
sbb
cmpsb
jae
clc
xlat
jne
mov
push
mov
cmpsb
push
aad
out
and
adc
popa
jae
repnz
xor
arpl
in
movsl
gs
xor
mov
sbb
cmp
fs
push
in
xlat
sbb
ds
mov
movsb
int
inc
call
sbb
scas
std
imul
outsb
mov
inc
push
xchg
xchg
jge
daa
mov
cmp
mov
lea
xor
mov
fbstp
and
cld
jns
test
push
imul
loope
inc
outsb
in
into
idiv
std
fsubr
mov
mov
les
jbe
pop
repnz
out
and
pop
mov
fstpl
ss
es
xchg
xor
mov
popf
rcll
movsl
iret
out
test
inc
push
cwtl
xchg
call
fsubl
pop
mov
lods
mov
out
lcall
mov
dec
mov
or
dec
xor
cltd
scas
add
insl
in
mov
add
adc
pop
xorl
add
movsl
ds
mov
popl
push
and
lcall
jp
ffree
push
inc
xor
sub
stos
dec
ljmp
sbb
dec
jne
adc
jne
shlb
fnstsw
add
mov
jle
pop
sarl
sbb
pop
sub
mov
insl
sbb
cmc
flds
and
int
arpl
push
dec
push
ds
into
jp
xor
adc
mov
sub
stos
cmp
mov
xor
pop
scas
add
and
shrl
or
dec
adc
adc
dec
or
fcompp
fisttps
push
inc
xlat
arpl
mov
decb
fcompl
cmp
push
daa
in
mov
clc
dec
dec
xchg
mov
add
add
in
shll
loope
dec
add
lahf
cmc
mov
jmp
mov
mov
mov
stos
pop
leave
rorl
test
ljmp
sub
fbstp
addb
popf
js
fnstsw
adc
fdivl
jno
mov
sub
inc
xor
in
aad
jo
fwait
pushf
inc
xchg
fcompl
in
and
mov
lods
enter
jae
inc
imul
iret
loope
pop
lcall
push
sub
daa
pop
cld
xchg
cmp
jge
mov
jl
out
push
ret
cmp
mov
lea
sub
cmp
push
push
mov
adc
inc
clc
imul
sbb
sbb
pop
loope
iret
iret
and
scas
mov
test
and
test
outsl
inc
into
jmp
adc
mov
mov
negl
jbe
mov
sub
mov
dec
ds
imul
xchg
ss
dec
and
xchg
pusha
imul
mov
sbb
inc
es
mov
scas
jne
sub
or
subb
pop
push
rol
cmp
jg
cmp
negb
inc
xor
fadd
jb
or
aas
popa
das
xchg
cmp
mov
inc
adc
cmp
fdivr
ds
xchg
mov
testl
xchg
xchg
gs
stos
aas
test
inc
and
push
arpl
add
xchg
lcall
mov
mov
push
jne
inc
mov
fs
ljmp
test
lcall
mov
idivb
xor
movsl
aaa
sub
fstpl
fwait
mov
push
faddl
xchg
out
stos
cld
je
fwait
in
stos
xchg
cmp
sbb
or
loope
jno
xor
push
adc
mov
cmp
stc
jb
xchg
push
ss
sbb
mov
sti
out
adc
xor
mov
dec
pop
cmp
mov
popf
fcomi
push
add
cld
pop
imul
dec
xor
sbb
or
mov
repz
cmc
adc
and
mov
mov
dec
xchg
jge
xchg
lret
aaa
jo
jb
lods
push
push
clc
pop
and
loopne
mov
pusha
fldl
outsb
sarb
push
pop
push
lock
fiaddl
scas
out
jns
sbb
daa
or
test
cli
stc
scas
outsb
mov
jle
mov
sarb
mov
mov
repnz
test
sbb
sbb
adc
subb
sahf
push
subb
pop
sahf
push
in
sub
lahf
in
mov
fidivrs
pop
pop
sbb
daa
add
push
ret
inc
mov
negb
add
lsl
shlb
repz
fwait
outsl
sub
xchg
push
jae
test
push
out
stc
call
push
add
adc
imul
push
or
cmp
dec
outsl
lcall
xchg
adc
xor
cmpsl
mov
push
fcmovb
cmp
cwtl
dec
repz
pushf
sbb
jnp
loop
inc
rorl
jns
imul
sbb
jae
adc
mov
imul
jg
pushf
adc
mov
pop
aad
lds
test
jp
popf
imul
insl
or
pop
cmpsl
outsb
cmp
inc
add
scas
test
xlat
les
adc
stos
and
add
xchg
arpl
adc
shrl
arpl
jbe
and
xchg
mov
fisttpll
pop
ret
sub
mov
mov
fistpl
add
inc
sub
jb
icebp
arpl
and
xlat
arpl
imul
repz
push
into
cltd
mov
pushf
test
xchg
adc
mov
or
push
clc
stos
sbbl
lret
cmp
imul
cwtl
stos
jnp
insb
mov
pop
int3
jo
cmp
pusha
test
out
pop
mov
pop
dec
mov
dec
jecxz
aam
insb
cmp
xor
insl
cmc
sub
jmp
gs
int
in
adc
cmc
hlt
out
add
push
fldenv
or
lcall
movsl
cmc
aad
lock
push
mov
sub
ret
ud0
je
add
inc
adc
fisttps
push
lds
jmp
push
daa
stos
idiv
je
jl,pn
rclb
pop
sahf
jmp
cmpsl
cltd
bound
lods
scas
inc
pop
adc
lock
cltd
mov
dec
imul
push
fdivrs
in
push
xlat
jge
adc
xlat
or
or
cli
xor
mov
adcb
lahf
lds
dec
je
fs
sbb
shrl
lock
mov
pop
xchg
testb
and
mov
push
mov
xchg
les
test
xchg
das
cmp
xor
in
or
or
push
mov
div
pop
insb
movsl
mov
mov
dec
push
mov
fdivrs
pop
pop
bound
xchg
imul
sub
jmp
push
jg
and
jno
inc
clc
push
adc
adc
or
dec
mov
out
pop
and
mov
pop
dec
arpl
push
subb
mov
push
scas
mov
inc
bound
or
xchg
xor
inc
xchg
es
stos
push
dec
out
mov
mov
adc
jno
imul
adc
repnz
repz
xor
stos
lret
testl
insb
dec
popf
test
cmp
xor
bound
std
dec
cmp
push
and
sub
jo
jns
lea
mov
ds
add
gs
int
pop
test
jp
dec
fs
mov
aam
cld
push
xchg
loope
add
or
inc
dec
adc
movsl
push
sbb
fs
call
lds
push
lea
cmp
mov
mov
ja
dec
popa
push
movsl
dec
xchg
dec
add
ficoml
fucomi
xchg
push
push
pop
clc
js
dec
inc
and
aad
test
pusha
pop
push
and
add
paddsb
add
adc
inc
loope
cltd
mov
pop
fisubl
fdiv
shld
or
jge
add
dec
fwait
outsb
xchg
jecxz
pop
int3
lret
pop
test
adc
add
dec
cmp
push
pop
cwtl
push
or
mov
pop
jno
xchg
insl
fsubrp
and
adc
add
ret
xor
adc
loop
sti
pop
push
je
mov
jnp
fsubrl
inc
into
daa
dec
jle
dec
jecxz
push
mov
scas
cmp
repz
rclb
mov
sbb
adc
xor
fwait
adcl
mov
or
imul
daa
ret
push
dec
fcomip
fnsave
adc
and
gs
dec
dec
fmull
in
dec
ficompl
jnp
roll
in
push
pop
and
orl
sbb
dec
cmp
jge
fcoms
xchg
cltd
lea
xor
adc
daa
add
push
and
sbb
adc
lea
dec
mov
and
mov
jns
pushf
sub
shr
cld
adc
ret
call
pop
out
stos
and
mov
sbb
mov
push
xorb
jns
pop
mov
jge
xor
xor
outsl
les
lahf
mov
fsts
out
orl
mov
and
push
ss
cmp
insb
rcrb
loopne
fsubrl
fcompl
js
out
xchg
cmp
shl
popa
xchg
test
fmull
pop
sub
inc
outsl
and
xor
add
test
gs
int
push
adc
pop
pop
dec
scas
mov
andl
in
jnp
mov
xchg
adc
mov
lea
aaa
scas
push
mov
subl
xor
push
dec
push
fsubrs
daa
push
xchg
push
je
bound
cmc
fwait
insb
pop
inc
lret
jo
enter
mov
jo,pt
test
xchg
mov
inc
cmp
xchg
insl
lret
jg
mov
xor
xor
call
imul
mov
loop
outsb
lahf
inc
or
leave
je
mov
jl
leave
jl
xor
push
xor
or
inc
sti
mov
outsl
pusha
insb
adc
ja
xor
adc
cld
rorb
jl
fcomps
jle
nop
sbb
insl
adc
xchg
mov
cmp
jnp
sub
aas
test
pop
inc
xchg
adc
sbb
shll
movsb
pop
mov
inc
add
lock
mov
pop
mov
push
dec
sub
popa
or
jae
js
mov
in
or
les
xchg
mov
adc
idiv
sub
iret
imul
flds
mov
xchg
sbb
out
lret
fs
jbe
aam
adc
or
aas
cmc
sbbl
ja
push
mov
mov
and
notl
sub
insb
into
xor
pop
cmp
je
rorl
sbb
xchg
push
insl
arpl
pop
xor
cmpsl
pop
adc
sub
in
xor
nop
test
pushf
pop
lods
add
out
dec
push
lods
push
or
bound
enter
jg
jp
pop
pop
shrl
aam
scas
outsl
or
cmp
or
xlat
outsb
dec
xchg
mov
cmp
mov
nop
push
and
popf
cs
loop
jl
sbb
mov
jno
out
filds
arpl
add
push
xor
cwtl
fimull
sbb
mov
pop
xchg
ds
icebp
clc
cmp
adc
dec
in
cltd
pusha
fnsave
sub
movb
pop
xchg
push
mov
mov
mov
xor
out
fwait
jne
lods
add
inc
push
subl
imul
test
jmp
insl
pop
xchg
mov
xor
mov
fsubr
lret
ds
dec
jecxz
xchg
jo
mov
cmp
xchg
pop
aam
out
data16
rcrb
scas
out
jge
jecxz
and
loop
inc
push
push
sub
movsl
in
inc
adc
jne
or
sbb
jp
adc
xor
dec
pop
add
call
xorl
xchg
push
dec
inc
mov
push
stos
call
movsl
cmp
mov
int
sub
test
mov
inc
cmp
mov
mov
jl
jb
xchg
outsb
lahf
adc
dec
repz
nop
test
and
aaa
jo
lahf
je
pop
xchg
mov
mov
cmpsb
fs
pop
xor
cwtl
std
xchg
xchg
dec
adc
icebp
sbb
mov
cmpsl
jl
mov
test
push
cmpsb
xor
add
jmp
inc
sti
push
cmp
roll
imulb
push
adc
mov
and
jo
push
lds
mov
cmpsb
push
gs
cltd
mov
inc
pushl
inc
cmp
sub
xchg
in
dec
jp
shl
jg
dec
push
daa
ja
dec
xchg
sbb
xchg
idivl
pop
arpl
or
cmpsb
push
imul
arpl
push
push
and
and
and
xor
push
enter
ret
pop
adc
lahf
cmp
sub
push
and
cmp
mov
xor
ljmp
testl
sti
outsb
cmp
inc
dec
rorb
aam
sbb
adc
les
ds
loop
sub
cmpsb
cltd
stos
or
pusha
sub
push
jb
xor
xchg
sbb
xor
aaa
aam
mov
xor
cmp
dec
mov
xchg
adc
insb
test
test
mov
push
mov
jle
xchg
sbbb
inc
inc
dec
add
cmp
mov
icebp
mov
js
mov
dec
test
test
jae
leave
cli
roll
jp
sbb
test
jle
push
leave
insl
in
xor
js
nop
div
fldenv
repz
push
sbb
gs
add
pusha
cmp
push
xchg
dec
insl
or
lds
insb
jns
mov
pop
stc
pop
mov
jle
int3
adc
dec
outsl
imul
outsl
outsl
mul
mov
jbe
pop
sbbb
arpl
mov
jne
outsl
cmp
inc
push
lods
push
cli
mov
fs
or
push
jae
push
xchg
pop
mov
push
out
pop
xchg
jns
inc
fwait
scas
nop
fwait
sahf
fsts
add
shlb
lea
aad
add
jecxz
mov
pop
bound
in
inc
xor
repnz
push
and
insb
add
jge
xor
lock
inc
mov
inc
test
movsb
mov
mov
xchg
loop
pop
into
es
push
adc
icebp
orb
test
jns
das
popa
enter
rcll
int
dec
subb
sbb
sbb
jno
shlb
mov
fsts
mov
aad
cmp
pop
pop
ret
fdiv
sbb
xchg
cwtl
leave
iret
imul
test
add
add
adc
adc
or
xor
xor
inc
insb
nop
fidivl
insl
stc
pop
divb
mov
adc
idivb
fsubrs
pushf
roll
insl
inc
cli
pop
outsb
dec
in
mov
cmc
stos
pop
imulb
out
stc
jb
divb
aaa
insb
xchg
and
jp
jp
ret
push
or
jno
incb
icebp
pop
or
mov
mov
inc
xor
imul
and
lods
stos
push
in
sub
xchg
int3
shrl
xor
faddp
in
xor
or
cltd
pop
aas
xchg
mov
jb,pn
or
daa
loopne
adc
mov
mov
das
mov
imul
sub
cmpsl
call
push
imul
repnz
sub
pop
dec
xor
dec
xchg
in
adc
add
dec
push
rcrb
outsb
add
loope
inc
or
dec
cltd
or
std
and
sbb
es
add
mov
imul
ljmp
ss
push
mov
mov
and
dec
and
testl
xchg
outsl
pop
mov
iret
shrb
jo
iret
rcrb
scas
sub
int3
lcall
aaa
popa
fildl
cmp
jecxz
inc
mov
das
push
push
gs
push
or
lahf
mov
cmpsl
and
xchg
push
dec
daa
add
mov
rcrb
sbb
iret
sti
insl
enter
xor
push
push
inc
sbb
add
mov
scas
repz
mov
movsb
mov
inc
pop
dec
and
addr16
call
jmp
lock
mov
mov
jbe
mov
mov
inc
scas
dec
mov
sub
mov
enter
mov
lahf
xlat
imul
fistps
or
mov
mov
popf
adc
add
xchg
cmp
jb
inc
imul
sarl
xor
and
clc
ret
cld
repnz
aas
nop
adc
inc
push
rorb
jmp
insb
icebp
cs
adc
xchg
push
pusha
cmpsl
aad
jecxz
mov
daa
mov
dec
mov
stos
cmc
add
lods
pop
outsl
adc
cmc
xor
out
ret
mov
push
jb
insl
fidivrs
sbb
loope
cmp
push
imul
lcall
jge
lcall
mov
divb
xor
jmp
sub
inc
mov
cmp
ret
jle
mov
mov
xchg
inc
pop
ja
in
enter
mov
jl
cmp
mov
fistl
jl
and
pop
mov
nop
cmp
and
add
fbld
movsb
push
add
imul
inc
out
push
dec
das
popf
adc
pop
sar
xchg
cmpsb
shrl
dec
fiaddl
shlb
sub
cmp
repnz
pop
jecxz
mov
fsubrl
mov
mov
add
inc
dec
fsubrs
xor
sbb
push
cmpb
inc
mov
mov
daa
or
mov
je
mov
dec
loope
or
pop
outsb
adc
popa
push
dec
xor
notl
mov
andb
or
inc
jns
cmp
addl
negl
pop
mov
sbb
jmp
cmp
shlb
cli
mov
ljmp
cltd
loop
adc
inc
inc
xor
enter
add
scas
adc
adc
cltd
fwait
mov
sti
mov
sbb
dec
enter
push
cmp
int3
inc
xor
jo
gs
mov
rolb
mov
push
sbb
xor
add
mov
sub
mov
push
sub
cltd
push
enter
jle
cld
push
mov
notl
mov
movsb
roll
and
mov
sbb
test
and
cmp
ret
sub
mov
test
or
gs
push
sub
ljmp
xor
pusha
cwtl
inc
andb
pop
in
popf
jns
sbb
add
call
lds
fistl
rclb
mov
add
push
test
popa
inc
pop
scas
cltd
out
sti
add
or
lods
orl
int3
dec
add
cwtl
fbld
sahf
subl
mov
xchg
or
push
lcall
mov
je
call
xlat
pop
sbb
cmp
jno
pushf
fadds
daa
lea
popf
or
cmp
in
xchg
inc
pop
or
push
jo
jg
jle
pop
mov
adc
dec
lods
fadds
inc
sub
lea
and
out
jne
fs
xor
out
add
lahf
lret
xchg
scas
xor
add
jns
lea
sub
pushf
cmp
inc
lahf
xor
inc
or
adc
mov
and
cmpxchg
inc
sti
cmpsb
jns
pop
mov
cmc
cmp
mov
scas
lret
dec
rorb
and
clc
sbb
mov
mov
loopne
adc
add
test
fidivrl
cmpsl
cli
mov
add
mov
xor
dec
int3
nop
ret
push
pusha
out
cmp
mov
les
mov
fcmovb
aas
inc
arpl
push
das
mov
enter
push
adc
push
or
out
or
movsb
stos
pop
movl
sbb
and
inc
mov
adcb
inc
pushf
stos
cltd
dec
push
lods
mov
mov
or
sar
dec
mov
inc
out
leave
pop
icebp
dec
jle
adc
pop
int3
dec
in
idivl
call
xchg
mov
adc
imul
lods
lea
repnz
cld
test
add
push
insb
ss
aad
scas
ret
insl
roll
pop
lcall
and
sbb
out
das
add
pop
jns
les
insl
enter
cmp
lods
lcall
cmpsl
enter
negb
ja
cmp
jle
fwait
push
xchg
popf
adc
mov
aas
adc
insl
lret
mov
pop
andb
enter
test
popa
jg
add
xchg
jg
mov
adc
jg
jnp
into
mov
and
mov
iret
sbb
out
adc
hlt
inc
or
jb
pop
rcl
dec
dec
ret
add
leave
push
pop
push
popl
xor
push
mov
fistps
repnz
sub
repnz
ficomps
dec
data16
mov
subb
push
test
jne
jne
int3
lcall
xchg
pop
mov
arpl
push
jge
pop
hlt
subl
daa
insb
rol
sbb
sbb
push
adc
mov
and
fucom
out
ficomps
shlb
inc
adc
daa
mov
lcall
xchg
repnz
jb
jbe
imul
cmp
int
or
mov
or
push
push
rcrb
mov
xchg
jl
add
les
cs
int3
cltd
cmp
jg
sub
xchg
pop
fwait
jno
daa
inc
testb
xchg
add
inc
je
push
adcl
shrl
pop
pop
mov
add
int
sub
xor
outsl
jge
adc
cmpsb
xor
sti
lds
or
cwtl
dec
and
xor
or
mov
sub
push
sahf
xchg
inc
and
loope
fldt
xor
pop
fdivrl
lock
sbb
imul
sub
fmul
lret
ljmp
pop
add
aaa
or
sarl
in
pop
movsl
rcrb
test
int3
xchg
or
in
test
sbb
inc
push
xor
ds
push
cmc
and
mov
cmpsl
push
fidivs
mov
mov
frstor
mov
jb
fldcw
ss
jne
push
shll
mov
popa
jbe
repz
xchg
mov
jo
cld
mov
mov
into
cmp
stos
inc
fidivrs
xchg
and
xchg
xchg
dec
cld
sub
and
idiv
add
shll
xor
pusha
scas
add
daa
fldl
hlt
adc
in
adc
arpl
into
scas
sti
fbld
push
push
mov
cmpsb
cmp
jl
icebp
adc
dec
inc
scas
add
sbb
pop
dec
adc
jbe
sub
sub
fsubs
insb
bnd
push
pop
into
xchg
lcall
cmp
and
andb
jb
testb
xchg
stc
insw
testb
jp
rcrl
mov
jp
add
pop
out
sbb
xchg
ret
and
and
fistl
mov
les
dec
jp
fildl
inc
xchg
bound
push
mov
inc
sub
idivl
negl
shl
in
les
in
sbbl
fwait
in
lret
les
dec
ret
sub
add
je
sahf
mov
jl
insb
test
xchg
xchg
int3
adc
inc
pop
pop
inc
cmc
cmc
dec
mov
mov
dec
mov
dec
js
mov
pop
mov
sbb
test
shl
mov
mov
add
inc
mov
test
xchg
add
insl
stc
lods
nop
sub
xchg
negb
mov
and
or
shrl
push
movsl
negl
out
clc
lret
sahf
xlat
pop
xor
jb
enter
fstpt
test
movsb
push
inc
outsb
js
cmp
sbb
in
negb
lods
out
cmp
mov
clc
mov
or
mull
mov
ds
lahf
subl
push
loopne
out
lahf
int
icebp
mov
push
popf
xchg
out
push
popf
xchg
pop
cmp
mov
orl
pop
push
pop
fadds
lret
add
inc
mov
nop
loop
cli
shll
jge
or
dec
xchg
sub
push
add
sti
out
cmp
incb
repnz
push
sub
repnz
push
pop
enter
addr16
xor
jo
cmpsb
sbb
iret
pop
cmpb
mov
mov
mov
in
push
test
or
in
mov
test
mov
fnstenv
sahf
cli
andb
add
out
push
cmpsb
sbb
and
sbb
push
cmp
mov
xor
add
jmp
and
leave
inc
jecxz
pop
pusha
call
fldl
dec
pop
adc
push
xchg
xchg
xor
pop
dec
or
mov
in
fstpl
test
lods
sub
and
popf
sahf
inc
std
and
das
call
sbb
lret
test
sarl
mov
push
sbb
pop
movsb
lahf
idiv
cmp
mov
cwtl
inc
aad
jo
sbb
xor
cli
fwait
push
out
and
jl
out
cmp
or
cmp
movsl
andb
add
mov
movsb
jge
xchg
sbb
and
add
call
icebp
push
stc
or
out
repnz
enter
xor
mov
push
mov
add
add
filds
or
xor
dec
xchg
je
xchg
fisttpl
test
loopne
jecxz
cmp
adc
xor
stos
std
mov
xchg
add
dec
xor
in
testl
xchg
shrl
pusha
data16
in
jns
mov
sub
lret
push
out
sbb
jns
hlt
sahf
add
and
mov
dec
jne
pop
into
in
xor
dec
jbe
cli
xor
add
sub
dec
sbb
sub
mov
mov
and
xchg
jns
test
fcomi
jns
push
xchg
dec
jnp
xor
mov
xor
push
cmp
shrl
and
repz
lods
aad
in
or
fiadds
inc
inc
popa
and
xorl
xchg
rcl
and
xchg
out
fcoms
sub
outsl
arpl
push
adc
and
les
mov
pop
fsubrs
inc
lahf
scas
cmpsb
mov
mov
fwait
mov
xchg
inc
cld
push
ficomps
ret
mov
insl
rcr
sahf
lcall
adc
shrb
mov
ja
int
out
loopne
sar
loop
lods
pop
sub
cmp
movsl
and
push
pop
dec
cltd
xlat
pop
mov
xchg
out
stos
aam
or
aas
xlat
inc
decb
rolb
andl
mov
cmp
pop
inc
pop
and
std
adc
push
insb
mov
push
sar
dec
shlb
enter
int
push
rorb
mov
xchg
fsubrp
or
test
lea
pop
mov
inc
xchg
repnz
mov
pmullw
mov
into
daa
cmp
cmp
cmp
std
jg
xor
xor
xchg
arpl
cmp
push
inc
xchg
and
daa
in
aad
fwait
cmp
leave
outsl
enter
rolb
mov
lret
out
xor
mov
shll
cmp
and
sbb
sub
inc
orl
cltd
jne
in
mov
jl
xor
out
scas
push
inc
flds
xor
mov
cmp
imull
cmp
in
roll
ljmp
mov
adc
fcompl
jle
or
jnp
hlt
aam
stos
icebp
mov
int
push
jmp
lret
es
fstp
cmp
xchg
mov
cltd
add
adc
shll
xchg
or
and
test
adc
loop
ljmp
add
and
push
mov
out
jle
push
mov
push
mov
add
or
mov
insb
push
sahf
pop
mov
xor
mov
xchg
cmp
scas
cli
mov
xor
test
xchg
sbb
scas
cs
cmc
inc
pop
push
icebp
aaa
jle
jp
mov
pop
inc
add
sbb
mov
cli
mov
popa
cmp
mov
mov
mov
loopne
xchg
mov
add
sub
and
sahf
andb
fisubrl
fdivs
mov
icebp
cmpsb
inc
adc
jb
mov
pop
and
jge
inc
sub
sub
and
or
mov
fcmovnbe
test
in
mov
dec
rcll
int3
mov
dec
xchg
cmp
mov
jmp
mov
rcll
test
test
pushf
mov
mov
adc
das
mov
jno
rcrb
stc
scas
mov
outsb
test
fnstsw
out
xchg
movsb
jecxz
add
mov
movsl
arpl
pop
sub
jb
jg
in
push
fwait
dec
dec
pusha
xchg
jl
clc
mov
xor
xchg
xchg
movsl
mov
bswap
jo
ret
cltd
std
pop
lods
mov
fisubs
cmp
fsubs
mov
stos
mov
inc
jnp
in
lea
xlat
imul
ficoms
fildll
insl
inc
fsubl
xchg
dec
pop
fisubrl
jne
rcr
dec
aaa
or
imul
leave
xchg
out
nop
push
repnz
inc
es
in
dec
imul
out
mov
push
repz
inc
lea
and
push
mov
mov
dec
and
mov
rcl
ss
es
insb
outsb
mov
addb
jl
xchg
stc
push
xor
ss
ret
jae
sub
popa
cwtl
stos
push
push
pop
adc
mov
imul
sub
popf
pop
aad
xor
jne
outsb
sub
jecxz
daa
inc
sbb
in
add
jbe
nop
and
sub
fs
jnp
jmp
or
out
in
sbb
jge
xchg
sub
cmpsb
inc
or
popa
subb
sahf
cld
xchg
push
xorb
fistpl
addr16
in
add
push
cmp
in
adc
test
shlb
sbb
jp
rcrl
roll
movb
jl
mov
mov
mov
push
adcb
mov
mov
sbb
pop
cltd
sub
popf
mov
movsl
shll
gs
test
mov
mov
push
xor
imul
call
mov
cli
addr16
xchg
test
sub
scas
pop
sbb
push
push
lret
ret
xchg
outsb
out
pop
fimuls
mov
js
add
mov
sbb
cld
arpl
cmc
insb
mov
dec
icebp
cmp
jmpw
fcmovu
xor
lds
leave
incb
mov
das
or
cltd
cmc
minps
xor
add
lret
cmp
inc
cmp
pop
cmp
jp
xor
mov
xor
pop
lret
sub
and
movsl
aam
cmp
pop
leave
adc
pop
out
fcmovu
cmpsl
pop
int3
lret
and
jbe
cltd
inc
js
mov
rol
or
dec
in
sbb
xor
xchg
push
lock
int
jl
push
fiadds
in
stos
bound
popa
cmp
add
pop
inc
jle
push
add
stc
xlat
and
bound
cmp
push
push
mov
loop
cli
sbb
mov
and
pop
add
sbb
ret
cmp
xchg
xchg
mov
int3
and
icebp
sub
outsl
cmp
test
add
add
call
stos
in
fcoms
push
fidivs
sbb
out
sarb
aad
call
xchg
and
js,pt
cltd
cmp
push
jl
popa
je
push
and
aas
aas
jno
xor
xchg
hlt
and
cwtl
enter
les
jle
mov
and
pusha
or
push
ds
aad
shlb
or
xchg
lock
rcll
jmp
adc
mov
inc
data16
dec
jge
pop
push
mov
xchg
lea
imul
mov
leave
lds
sbb
rcrb
fwait
inc
sbb
push
sbb
adc
stos
jle
pop
xor
ud1
xchg
xor
aam
pop
pop
xor
aam
int
jecxz
xor
js
push
enter
mov
leave
fadd
ret
push
mov
dec
xchg
adc
mov
std
bound
jae
push
or
inc
aam
jl
xlat
icebp
std
fldenv
push
int3
mov
pop
mov
jecxz
mov
jg
cmc
in
jle
add
in
pop
adc
cmp
out
xor
mov
jbe
lahf
sub
sahf
mov
push
or
pop
push
sbb
xchg
fwait
sbb
jge
xor
inc
cwtl
dec
data16
call
and
push
cld
daa
shrl
cwtl
movb
cmp
test
inc
xchg
xchg
pop
push
jg
cmp
movsl
adc
mov
stos
xor
imul
les
bound
push
inc
test
mov
fwait
lock
mov
fisubrs
cmc
pop
xchg
insl
sbb
mov
pop
and
mov
mov
stos
gs
xor
cmp
mov
rorl
jne
imul
mov
and
push
inc
xchg
lcall
or
jo
lret
out
push
jns
sbb
push
roll
pop
and
mov
xchg
inc
daa
fnsave
rorl
cld
hlt
mov
mov
adc
xchg
add
int3
mov
jp
add
pop
jmp
or
sbb
push
sbb
lret
xor
std
leave
cmp
sub
arpl
jns
xchg
int
mov
rorb
arpl
mov
or
dec
cltd
mov
nop
orl
add
addr16
sbb
int
xchg
test
fbstp
insb
loopne
pop
mov
test
shll
or
push
les
xchg
insb
in
adc
adcl
outsl
or
xor
adc
bnd
push
fistl
mov
jb
cli
enter
xchg
fnstenv
cmpsb
pop
lock
in
bound
sbb
jl
inc
mov
ja
push
sbb
xor
push
mov
int
outsb
dec
nop
sub
std
add
mov
sti
pop
mov
xor
jg
pop
mov
popa
xchg
add
divl
push
jbe
fucomp
push
inc
pop
sub
cmp
and
sub
xchg
add
test
mov
push
cwtl
bound
int3
mov
inc
cmp
cmc
pushf
xor
and
mov
repnz
push
mov
mov
inc
ret
and
cld
idiv
in
fcoms
add
fisubrl
mov
sub
jg
sub
addr16
aas
in
add
mov
ficoms
add
push
sbb
mov
adc
sbb
xchg
xor
mov
sub
fcos
mov
pop
push
sar
rcr
adc
out
sub
adc
cld
push
push
outsb
aam
sbb
out
insl
jmp
sbb
imul
push
test
aad
dec
sbb
pusha
sbb
xchg
scas
mov
mov
xchg
outsb
dec
add
xchg
psadbw
sbb
push
popa
int
xor
mov
lock
sbb
fld
adc
jp
incb
dec
fbld
mov
repz
enter
adcb
repnz
repnz
out
xchg
fwait
xor
sarl
iret
sub
inc
jge
cmp
fisubl
shll
arpl
cli
inc
jne
pushf
testl
cltd
jb
movsl
and
fistps
jg
stos
push
int3
mov
xchg
adc
pop
lds
rorb
sahf
push
loope
push
jnp
sub
repz
push
aad
incl
test
xchg
inc
or
push
in
sahf
stc
mov
fiaddl
out
cltd
test
ficompl
rcrb
pop
addr16
addr16
shrl
dec
cmp
dec
dec
pop
ret
inc
sbb
sbb
inc
aam
mov
jb
dec
int3
or
scas
fstl
sub
and
sbb
add
xchg
adc
jb
mov
fs
imul
adcl
add
pop
and
adc
xchg
push
xor
and
xchg
pop
sub
ljmp
push
or
je
out
aad
iret
scas
rcll
movsb
push
lods
jnp
shl
jp
fs
and
fwait
or
dec
xchg
and
and
xchg
cmp
shl
imul
and
mov
mov
or
aaa
movsl
jecxz
add
lcall
dec
mov
xchg
lock
fs
xor
jno
aaa
fwait
pop
inc
jge
jne
sysenter
jbe
daa
push
cli
stc
lods
sbb
test
neg
jp
mov
push
push
lods
rcll
out
ja
sub
xor
iret
and
jp
mov
mov
nop
imul
sub
insb
pusha
out
push
cmp
jecxz
fld
cmc
jg
lods
clc
ret
cmp
push
sbb
push
mov
roll
data16
push
xchg
lret
push
adc
or
imul
and
add
jp
sahf
jns
mov
adc
das
dec
aad
hlt
sub
adc
jg
mov
jae
xchg
mov
sbb
pop
cmpsb
cs
inc
dec
push
shrb
adc
lods
ss
aad
loop
pop
addr16
add
nop
adc
int3
aad
dec
adcl
jg
xor
xchg
lods
rol
add
shll
negb
sbbl
cmp
jge
lahf
push
jg
pop
popa
in
push
xchg
sub
mov
mov
add
rcrl
cmp
mov
push
rorb
inc
loopne
jb
ja
inc
mov
jle
hlt
or
shll
adc
aaa
icebp
sub
arpl
cmp
cmp
push
sub
inc
pop
out
adc
mov
ret
cmp
adc
hlt
sbb
in
xor
jle
sub
mov
xchg
popf
stos
imul
mov
mov
inc
pop
pop
sahf
add
leave
push
jge
push
out
push
lret
push
fs
lock
cmp
sub
sbb
pop
xchg
lock
mov
mov
js
insl
fdivrl
shrl
mov
je
enter
xchg
nop
cmp
xor
xor
stc
mov
mov
and
sub
add
or
ret
mov
mov
fisttpl
push
sti
dec
lods
lods
and
daa
push
adc
adc
std
adc
shrl
and
into
jnp
gs
adc
addr16
pop
jno
cld
fwait
adc
aad
xchg
sarb
cltd
fldcw
dec
pop
inc
dec
mov
pop
sub
imul
push
jmp
imul
jl
sub
rorb
sbb
sub
fldenv
fwait
imul
jecxz
fcoms
mov
into
idivl
sbb
jne
or
aas
push
adcl
call
loop
push
stos
js
repz
loop
sar
mov
mov
add
test
cmp
xlat
jp
call
mov
inc
sarb
data16
dec
add
into
mov
sbb
gs
sarl
pop
mov
cmpsl
mov
sti
vcmpss
pop
inc
jne
dec
and
loope
xchg
dec
movb
lcall
mov
lds
and
in
jg
xchg
adc
mov
lcall
cmpsb
and
lcall
cmp
je
ja
pop
jnp
stos
loope
inc
add
xchg
sub
xorb
test
daa
inc
fldenv
mov
jns
mov
cwtl
mov
lret
xchg
push
xor
sbb
pop
add
push
in
ds
jmp
push
inc
xor
lds
jmp
mov
imul
and
enter
fwait
push
xchg
sbb
movsl
insl
shrl
mov
add
xchg
addr16
mov
mov
rclb
pusha
adc
scas
arpl
xchg
jb
cmp
ret
sarb
outsb
enter
lock
pop
aam
jo
out
enter
push
lock
mov
lea
arpl
mov
pop
jge
dec
dec
or
push
sahf
jge
data16
dec
cmc
mov
stc
shr
test
fldcw
cmc
imul
fsubrl
push
lahf
popf
jp
jns
lcall
fistpl
pop
xchg
cmp
test
push
push
adc
imul
aam
cmp
aaa
das
inc
adc
xor
sub
sbb
and
add
ftst
fistpl
iret
jle
lock
mov
jge
sub
add
xchg
or
and
sub
xchg
outsl
ficompl
adc
enter
pop
cli
in
dec
sbb
ds
movsl
xor
jmp
dec
xchg
shl
dec
aaa
fstl
lds
jae
cmpsb
jp
lcall
inc
jg
aam
xchg
pop
pop
xchg
in
sub
cwtl
xchg
mov
add
or
xor
mov
aad
mov
cli
fidivrl
into
jmp
cmp
out
mov
xchg
sbb
pop
cmpsb
shlb
adc
push
arpl
sbb
or
out
push
push
jno
movl
push
roll
cltd
sub
jae
push
popa
dec
mov
testl
cmc
scas
mov
rcrl
addr16
and
pop
xor
mov
dec
mov
jno
jge
movsb
or
test
push
inc
mov
adc
xchg
ret
pop
push
xchg
push
aam
loopne
inc
inc
mov
sahf
xchg
lods
xchg
adc
mov
outsl
push
arpl
xchg
xchg
inc
sbb
add
mov
mov
jp
mov
mulb
pop
or
mov
in
je
mov
sbb
daa
inc
in
xchg
popa
mov
cmp
insl
ja
or
mov
out
xor
mov
loope
insl
imul
in
and
and
xor
ret
test
and
sub
xchg
adc
outsl
mov
scas
lret
xorl
cmp
xlat
mov
call
jmp
sbb
adc
and
test
stos
ljmp
insl
mov
xchg
int3
incb
push
mov
cmp
mov
ja
push
xchg
dec
xchg
cmp
push
sub
pusha
scas
das
sti
add
imul
test
mov
test
ljmp
dec
xor
xchg
cld
fstl
testl
xchg
sbb
pop
lret
mov
push
out
adc
ds
adc
addr16
inc
pop
lret
scas
rolb
pop
mov
push
or
mov
sub
js
mov
test
cli
or
and
adc
test
aaa
lods
cld
fisubl
andb
xor
cld
xor
mov
xor
dec
movsl
jg
push
mov
fcmovnb
jp
stos
in
or
mov
adcb
sahf
mov
mov
and
loop
repz
mov
sbb
lret
mov
sbb
add
sbb
jbe
inc
cmpsl
jae
cmp
adc
rorb
in
and
pop
stos
lret
lods
push
insl
pop
sub
hlt
cld
push
cmp
mov
pop
icebp
and
or
out
add
fsubs
jecxz
mov
lahf
mov
daa
xchg
xor
into
fisubrl
subb
fstpt
sub
xor
adc
sbb
pop
jmp
int3
mov
aas
lods
jo
cmpb
adc
jmp
xor
in
cltd
xor
sub
rcl
cltd
lds
pop
or
or
ret
in
enter
scas
movsb
jnp
pop
fucomi
xchg
jmp
xchg
fwait
pusha
sarl
jbe
shrb
cld
rclb
jns
cmpsb
pop
jle
jb
imul
pop
mov
jl
mov
jge
lock
xchg
fld
add
cmp
rcrb
loop
in
loopne
mov
lock
movsl
mov
test
add
pusha
std
adc
pop
fistps
arpl
sbb
jb
repnz
sub
movsl
insl
pushf
mov
pop
lods
xchg
fcoms
jb
sahf
pop
mov
sub
fcomps
push
lock
jbe
xor
icebp
jno
xchg
scas
add
clc
das
mov
in
outsb
jl,pt
fisubrl
dec
cmp
push
sbb
jge
sahf
es
gs
mov
jge
ljmp
push
lcall
hlt
in
pushf
daa
sbb
dec
sbb
movsl
cli
xchg
lret
sub
adc
push
int
dec
jmp
add
and
sub
roll
push
add
scas
addr16
xchg
nop
cmpsb
popa
scas
dec
push
in
popa
or
js
aaa
mov
lret
sti
dec
in
out
int
in
pusha
push
mov
fcoms
lret
ret
hlt
das
xchg
test
xchg
push
inc
or
repnz
mov
dec
dec
rcpps
lahf
mov
dec
xor
xchg
mov
cmp
test
xor
ret
mov
xorl
mov
and
cmp
and
add
mov
dec
bound
mov
cmpsl
mov
arpl
adc
not
test
lcall
jmp
xor
test
test
nop
dec
inc
popa
cmpsb
aaa
loope
sbb
mov
mov
pop
frstor
les
mov
jg
xchg
aam
in
cmp
fstpt
mov
adcb
mov
jns
push
pop
mov
cmc
mov
rcr
fcompl
stc
cltd
or
imul
rcrl
ja
imul
xor
orl
or
hlt
in
bound
xlat
call
add
sub
jmp
sahf
icebp
cmp
push
std
mov
mov
xor
mov
cmc
imul
fs
sbb
inc
mov
scas
aas
dec
add
xor
daa
adc
shr
fmul
mov
sbb
sub
push
pop
rcr
and
mov
xor
ret
sub
pop
inc
leave
mov
mov
outsb
loopne
insb
pop
out
lret
jmp
mov
repnz
addr16
push
das
mov
push
adc
mov
mov
push
mov
aas
jo
fildl
xchg
int3
ficoms
rolb
dec
sub
mov
mov
mov
aam
jecxz
xchg
daa
jae
xchg
mov
rcr
leave
mov
mov
mov
test
pop
inc
xchg
push
dec
dec
pop
in
mov
push
les
push
dec
push
jle
xchg
fimull
push
hlt
xor
pop
orl
mov
cmp
inc
mov
cli
add
push
arpl
xchg
iret
jmp
adc
or
jne
and
repnz
cmpsb
pop
daa
sbb
push
fcoml
popa
incb
mov
int
aam
adc
mov
mov
xlat
stos
test
dec
cli
xchg
addr16
lahf
fsubs
lret
and
mov
scas
pop
mov
sub
pop
xor
sbb
sahf
stos
push
lret
mov
dec
cmc
test
mov
iret
xchg
faddl
or
shlb
jb
mov
push
inc
dec
stc
xchg
add
or
outsl
test
ficoml
lods
inc
lret
stos
xor
jg
mov
enter
mov
dec
shll
or
insl
cmp
lea
sbb
adc
mov
inc
push
idiv
jnp
js
push
xlat
loop
les
ja
jp
call
inc
popf
ror
mov
pop
pop
aas
jb
mov
cld
xchg
sbb
inc
stc
sbb
fistpll
rcr
mov
popf
cmp
jno
das
adc
dec
mov
lds
jno
stos
cmp
jae
stc
pop
les
cmp
adc
mov
fldl
sub
push
mov
cmc
hlt
or
mov
xchg
adc
mov
insl
leave
jl
sub
and
shl
and
aad
jne
shrb
or
ja
in
mov
andl
dec
cwtl
dec
sbb
dec
mov
lods
cli
xor
pusha
fnstenv
lahf
lret
stos
xchg
popa
lea
add
xchg
call
mov
jae
jg
sub
rcrb
pop
leave
pop
fdivrl
mov
addb
in
cmp
loop
jo
testl
jecxz
mov
mov
sbb
imul
xor
sub
pop
push
scas
das
jbe
rol
popf
daa
sub
xchg
add
outsb
adcl
cli
pop
frstor
sti
sub
mov
outsb
lret
fwait
cmp
stos
xor
inc
xor
xor
sbb
jo
xchg
aaa
lea
dec
ja
subb
les
or
xor
adc
dec
or
divb
xchg
out
insl
push
adc
sub
orb
mov
add
and
pop
add
arpl
call
cmp
pop
xchg
sub
add
insl
sahf
xbegin
sub
int3
clc
insl
ffreep
mov
mov
mov
mov
icebp
lret
mov
sbb
add
sahf
lret
pop
mov
enter
mov
push
or
lods
lret
or
xchg
cli
repz
call
sub
mov
fucomi
dec
test
dec
sbb
test
out
mov
fbstp
and
push
sar
into
sbb
es
bound
add
inc
xlat
or
loop
leave
popa
das
inc
loopne
sub
mov
mov
mul
mov
inc
pop
je
rcrb
test
cmc
loopne
xchg
xchg
cmp
inc
push
nop
cmp
bound
lods
mov
xor
jp
jnp
pop
push
je
or
xchg
rclb
and
jl
rclb
add
push
dec
jg
push
jp
cmp
inc
adc
jae
rorl
adc
aas
or
and
fldenv
xlat
gs
call
jae,pt
lahf
roll
inc
inc
mov
outsl
pop
es
movb
xor
sti
lods
subl
adc
in
in
outsl
inc
sbb
sub
imul
lds
cld
jecxz
cmpsl
sub
mov
pusha
enter
movsl
pop
leave
or
insb
shll
mov
adc
notl
or
cmc
xor
and
sub
push
push
mov
fsubs
cmp
lahf
sub
lods
push
in
lock
cld
stos
jecxz
iret
mov
add
aad
mov
rcrb
stc
and
mov
cs
test
xchg
aaa
mov
lock
and
leave
mov
pusha
adc
pusha
push
pop
mov
adc
ret
and
or
cmove
out
jb
pop
dec
pop
or
inc
jns
out
mov
jns
loope
repnz
sbb
sbb
mov
mov
das
outsl
jp
or
cwtl
lock
testl
jno
negb
mov
fimuls
pop
pop
or
push
cmpb
clc
iret
lret
loop
popf
insb
loope
and
cli
adc
push
jbe
dec
cmpsb
or
lods
xor
xchg
sbbl
sbb
fimuls
adc
lcall
out
or
sub
push
dec
fsts
or
dec
cli
sub
movsb
pop
mov
mov
sti
and
insl
iret
int
dec
std
mov
mov
dec
loope
rorb
inc
and
xor
inc
jmp
js
lods
jg
mov
add
cmp
push
imul
mov
roll
addl
fst
add
xor
push
jecxz
dec
sub
jns
pop
ljmp
fwait
cmp
fwait
sbb
or
outsl
add
lds
mov
hlt
xchg
jl
clc
repz
xchg
xor
push
push
add
add
xchg
sub
push
push
ja
insl
pushf
out
mov
iret
push
pop
mov
push
pop
push
dec
test
sub
sahf
inc
push
rcll
dec
mov
lods
mov
sub
cmp
stos
std
pop
cmpsl
jl
test
and
mov
xchg
in
dec
mov
xor
mov
inc
imul
mov
clc
adc
ds
arpl
add
lcall
mov
lret
int3
jmp
push
imul
jl
test
repnz
jmp
cmpsb
push
cld
iret
mov
sub
mov
cmp
or
inc
sbb
push
pop
out
mov
sbb
aad
jno
xchg
jo
cmp
sub
dec
xor
pop
test
ss
push
mov
or
or
daa
aaa
nop
fidivrl
xchg
push
call
push
jmp
push
inc
mov
pushf
xorl
mov
hlt
insb
mov
test
mov
sub
movsl
test
add
and
mov
and
dec
pop
jns
jno
movsb
cmp
pop
jp
cmp
stos
xchg
lahf
out
jnp
sahf
sti
jns
push
push
mov
and
pop
mov
xchg
and
pop
sti
add
pop
and
dec
xchg
jns
or
xchg
mov
xchg
xchg
fcoms
stc
imul
dec
out
xor
lcall
inc
adc
inc
jae
push
stos
lock
cmpsl
adc
jbe
jecxz
mov
cltd
call
test
mov
mov
mov
movsb
dec
jae
and
jbe
push
aaa
lahf
pop
aaa
insl
rorl
adc
cwtl
pop
sti
mov
shlb
adc
ret
add
lret
xor
xor
xorb
xchg
pop
fadds
dec
xlat
jmp
sub
out
mov
scas
pop
inc
stc
push
push
jo
jne
daa
mov
inc
cmp
call
push
sbb
and
pop
sbb
movsl
test
test
popf
xor
or
inc
cmp
scas
or
sbb
xorb
dec
loope
sti
mov
and
ljmp
inc
pop
and
call
mov
jns
testl
and
jne
test
add
dec
movsl
mov
jno
mov
and
cmpsl
cmp
xlat
xor
scas
push
push
ret
dec
std
out
dec
fs
xor
mov
les
sub
ficoml
orb
mov
dec
push
inc
jne
dec
imul
and
or
jecxz
fadd
inc
inc
or
sarb
mov
add
sub
mov
aad
ret
pop
rorb
aaa
lret
arpl
xor
jbe
sahf
pop
pop
adc
pop
test
std
push
je
inc
and
sti
adcb
and
jbe
clc
cs
outsb
push
push
lods
push
ret
mov
pusha
mov
leave
pop
lret
mov
add
bound
dec
daa
pop
faddl
ljmp
mov
xor
mov
jbe
movsb
push
hlt
push
xchg
shlb
testb
inc
addr16
sbb
cwtl
mov
and
shrl
sbb
js
push
fs
mov
lods
xchg
mov
test
xlat
andb
cmc
push
mov
jmp
outsl
xchg
dec
and
jae
mov
adc
test
dec
orb
cmp
bound
jge
dec
ss
push
and
add
sub
stos
lods
sbb
xor
mov
adc
inc
fbld
dec
adc
xchg
and
dec
stos
shr
loop
out
daa
ret
or
test
adc
ficoms
cmpsb
cmp
adc
adcb
pushf
test
hlt
add
fxch
dec
and
pop
push
test
imul
mov
insb
jnp
nop
mov
or
pop
mov
leave
mov
testl
xchg
cs
hlt
movsl
das
push
int
push
mov
or
and
jbe
into
cs
adc
stc
mov
pop
je
das
push
or
test
lahf
and
fisttpl
addr16
fbstp
xor
out
mov
call
sub
jl
pushf
cwtl
in
icebp
pop
out
dec
push
or
xor
or
ljmp
out
nop
mov
lock
dec
push
dec
sbb
sub
sub
dec
unpcklps
push
xor
jne
jmp
imul
add
fmul
es
pop
inc
xor
inc
pop
add
xchg
inc
jb
push
adc
inc
mov
scas
cld
push
mov
push
push
in
sub
xchg
xor
jnp
dec
xchg
cmp
daa
sbb
dec
jg
repnz
mov
and
inc
or
xor
mov
sbb
mov
out
xchg
inc
pusha
jbe
jge
jle
pop
stos
aaa
pop
sub
daa
push
std
xchg
push
movsl
sbb
cltd
cmp
adc
out
pushf
shll
sbb
das
inc
push
sbbl
test
movsb
inc
push
ja
insb
outsb
cmpb
jbe
les
imul
fldl
adc
call
jle
mov
pop
pop
jns
dec
in
ljmp
adc
inc
mov
inc
sti
cmpsl
push
pop
ror
fs
out
add
add
inc
pop
jmp
dec
xchg
mov
mov
fisubs
jp
cwtl
pop
jmp
or
in
cmpsb
in
and
pop
cmpb
js
cmovge
and
push
xchg
sbb
cwtl
dec
ljmp
push
iret
xor
in
movsl
mov
cmp
scas
push
jnp
sbb
loop
stc
inc
dec
lods
sahf
pop
aad
fsts
scas
and
int
fstps
lahf
and
movsl
mov
jle
loope
loopne
jno
sbb
outsb
ret
adc
iret
xor
xor
movsb
stos
cmp
sarl
mov
lahf
sbb
sub
aam
or
cmp
pop
sub
out
decl
or
sbb
iret
mov
mov
pushf
jmp
clc
sarb
and
dec
sbb
cmp
pop
sub
mov
mov
mov
lods
xchg
add
cltd
add
mov
popf
insb
js
fbstp
test
lods
popl
out
aas
sti
pushf
jg
mov
add
aaa
inc
mov
data16
icebp
xor
fnstenv
and
or
bound
cmp
out
push
cmp
or
notl
dec
sbb
neg
loopne
jmp
mov
inc
jmp
or
fs
mov
mov
add
mov
dec
imul
pushf
or
dec
xchg
cmp
test
xchg
add
les
dec
imul
mov
jl
pop
push
jno
xor
ret
das
popf
pop
stc
stos
mov
sbb
push
addr16
out
xchg
mov
aas
xchg
pop
sbbl
xor
jnp
mov
fwait
xorl
fwait
lahf
adc
lock
sahf
xor
add
push
or
ss
xchg
ss
xchg
data16
dec
std
cmc
push
popf
lods
cmp
cmp
cmp
inc
lret
jnp
push
loop
loop
fisttpl
pop
push
jnp
sub
cmp
das
enter
lcall
mov
mov
fnstsw
mov
subl
aam
push
mov
into
ja
insl
inc
or
ja
add
dec
fldt
data16
daa
push
in
lcall
pop
and
stos
mov
jb
ret
xor
cmc
xchg
jl
frstor
and
pop
lods
jns
fsubs
fnstsw
std
inc
cli
test
movsl
jmp
int3
cli
inc
shrl
out
pop
dec
cmpsb
insl
ret
test
sbb
sub
pushf
xchg
push
xchg
stos
or
lods
aad
into
inc
sti
mov
icebp
inc
es
push
sbb
add
insl
add
cwtl
cmpsb
stc
cmp
dec
shrb
and
add
xor
xchg
fldenv
add
cmp
xor
inc
sub
adc
js
fstl
incb
lds
pushw
xchg
out
push
sti
mov
or
inc
popa
push
mov
loop
outsl
outsb
cmc
mov
mov
iret
shl
mov
mov
xor
dec
mov
outsl
ja
out
push
cmp
mov
icebp
jb
roll
call
gs
pushf
ret
es
or
js
loope
and
aam
sub
mov
movsl
and
das
jecxz
stos
rcr
dec
mov
insb
mov
jp
movsb
subb
es
pop
push
jge
push
pop
movsl
xor
adc
insb
cmp
lret
push
mov
sub
add
imul
add
push
enter
jle
lret
adc
loopne
pop
sub
clc
frstor
test
inc
mov
jl,pt
jg
pop
cmc
xor
andb
sbb
xor
lock
jmp
dec
outsl
sbb
sarl
xlat
push
stos
pop
aaa
push
fisttps
mov
jae
insb
inc
cltd
imul
inc
lock
and
jno
cli
cmp
scas
mov
lds
jmp
pop
fbld
js
or
stc
mov
lock
fidivl
cmpsb
cmp
rorl
sub
mov
jno
cwtl
fs
pop
push
shlb
lods
pop
mov
push
xchg
cld
in
cmp
cmc
icebp
rcll
scas
xchg
sub
and
jno
and
mov
xlat
dec
pushl
int3
cmpsl
loopne
dec
daa
out
push
mov
mov
btsl
sub
dec
out
jnp
fstl
popf
and
aam
test
jmp
jmp
inc
in
shrb
push
outsb
and
fidivl
test
dec
dec
nop
or
pop
push
arpl
dec
mov
fidivl
jns
push
in
mov
or
sbbl
push
add
repz
cmc
mov
ja
lahf
sbb
or
fidivrs
jns
imul
xchg
repz
mov
mov
mov
clc
cmp
test
add
out
xchg
jl
mov
jp
lock
cmp
inc
or
test
aaa
jnp
or
pop
mov
fnstcw
push
push
dec
push
xor
or
push
fisubl
sti
xor
add
sarl
outsl
pop
pop
mov
jb
aaa
cmp
das
dec
push
and
mov
cmp
jl,pt
lods
push
lds
sbb
mov
mov
nop
lahf
add
popa
mov
loopne
mov
pop
jmp
adc
sti
sub
test
ljmp
sbb
fld
imul
scas
mov
repz
adc
adc
out
push
loope
in
xlat
jns
aas
daa
mov
add
in
add
xor
mov
aad
cmp
popa
mov
sbb
mov
dec
lahf
push
icebp
or
jns
or
sub
mov
cmpsb
js
in
inc
pop
and
pop
cmp
fistl
scas
sahf
push
jg
aad
rcll
jae
inc
pop
ja
js
ror
xchg
pop
popa
lcall
out
mov
dec
mov
mov
dec
test
push
dec
data16
xchg
xor
imul
xor
rcrb
inc
cmpsb
pop
add
enter
add
ret
repnz
pop
sbb
lahf
pusha
push
mov
roll
repnz
into
adc
sbbb
sbb
and
cli
sar
jno
mov
jns
add
jae
les
push
push
mov
hlt
add
jae
fstl
xchg
mov
mov
insb
rclb
and
in
mov
pop
enter
fstpt
fs
ja
inc
push
push
pop
or
xor
xorl
push
xor
shlb
lret
aas
fsubs
fsubs
sbb
aad
outsb
sti
jl
sti
mov
adc
cmp
jae
jmp
pop
arpl
xorl
or
jne
and
test
dec
cmpsb
dec
push
dec
jb
sti
iret
repz
add
movsb
loop
int3
push
in
cmp
mov
jae
sti
inc
xchg
pop
pusha
push
fs
inc
jl
cwtl
adc
cmpsl
test
or
sub
mov
xchg
cmc
mov
jne
or
fcmove
mov
out
repz
cld
mov
xchg
and
push
stc
call
dec
or
sbbb
inc
sbb
xchg
and
arpl
test
push
outsl
fs
ret
ja
rcrb
testl
fs
cld
clc
pop
jb
movsl
clc
pop
int
cs
mov
inc
movb
jle
bound
jo
mov
cli
sub
scas
inc
pushf
repnz
out
push
add
cs
jecxz
adc
adc
call
test
mov
es
loop
dec
add
push
shll
stc
or
enter
loopne
enter
inc
push
idivl
and
stos
mov
xchg
push
in
mov
subl
push
std
int3
pop
mov
pop
cld
mov
cld
xchg
and
inc
adc
cmp
xchg
fiadds
xchg
daa
scas
sbb
rdrand
xor
adc
cs
out
xchg
loop
fbstp
push
xchg
sub
pop
jne
shl
push
vcmpps
or
add
mov
add
dec
dec
adc
or
into
cmp
test
pop
inc
test
adc
mov
mov
popa
repz
xor
xlat
add
into
sti
xchg
fwait
aam
hlt
fidivrs
les
inc
add
add
test
add
fs
sub
jb
rcr
out
daa
mov
test
cld
add
int3
xchg
mov
dec
aas
in
inc
xchg
add
gs
ljmp
cmpsb
popa
lahf
add
xchg
mov
fists
test
cmpb
adc
sub
push
dec
dec
loopne
notl
mov
xchg
in
cmp
out
add
xchg
cmp
lcall
jns
jmp
mov
cli
test
push
mov
aaa
and
shll
stos
cmp
sbbb
lcall
arpl
sahf
mov
pusha
arpl
xor
es
out
xchg
in
inc
mov
cltd
sub
or
stc
pop
adc
lret
adc
mov
jb
lret
mov
push
inc
imul
rcll
ljmp
loop
mov
mov
adc
into
hlt
stc
dec
stos
and
jo
sahf
lcall
and
popf
sub
dec
hlt
adc
cli
mov
xor
push
imul
cmpsl
push
and
cmp
sub
pop
fwait
sbbl
and
repnz
inc
insb
mov
aas
dec
or
adc
shll
pop
fsub
dec
fiadds
dec
in
cli
fwait
lods
inc
cmp
call
adc
hlt
mov
ds
xchg
sbb
divb
adc
pop
lods
sub
int3
in
aad
pusha
insb
es
icebp
shrb
inc
add
sub
lock
xchg
lock
push
das
push
inc
inc
push
push
sbb
insb
jb
cmc
iret
scas
test
test
mov
push
into
add
xchg
inc
mov
mov
mov
push
int
jnp
imul
repnz
in
push
out
jne
push
js
leave
fnsave
adc
enter
and
les
adc
cmpsl
xchg
hlt
lds
cltd
adc
sub
xchg
cld
xor
jo
dec
out
xchg
rolb
xchg
mov
mov
and
clc
jbe
lods
xor
rcl
push
dec
repz
push
jb
xor
inc
out
xlat
jl
ret
mov
out
jne
xor
fnstcw
jl
addr16
imul
in
lds
mov
js
push
cmc
sbb
adc
and
test
andb
lea
add
mov
insl
shrb
cmp
sti
dec
xchg
push
in
pushf
pop
cmp
and
jecxz
jmp
cwtl
fldcw
sbb
mov
adc
sbb
add
jno
xorb
adc
dec
fnstcw
push
jp
bound
loopne
imul
sub
cmpsl
std
lds
or
ss
popl
mov
push
jno
xchg
xchg
cmp
sbb
adc
jne
shlb
ja
push
xchg
or
jl
fstpl
xchg
jae
xor
pop
ret
xchg
dec
or
fwait
or
movl
aaa
nop
and
out
in
dec
xchg
leave
xor
adc
clc
and
lods
cmpsl
movsb
nop
lea
sub
cmp
mov
sub
jmp
pop
pop
push
aam
xchg
sbb
iret
les
inc
ret
fbstp
lods
lods
shrl
scas
ret
sbb
pop
stos
inc
jne
jns
int
dec
adc
add
add
jmp
dec
addr16
lods
pop
faddp
adc
mov
pushf
repnz
and
shlb
and
fidivl
icebp
mov
jbe
daa
jecxz
or
xor
xchg
mov
ljmp
movsb
shll
dec
test
inc
jns
xor
in
and
pop
and
sbb
add
mov
nop
repz
ret
pushf
sbb
push
pop
mov
pop
dec
adc
repnz
xchg
ss
and
lods
out
pushf
lret
test
out
mov
dec
dec
repz
fsubrp
sahf
pop
cs
inc
jne
pop
ss
or
orl
mov
pop
push
scas
or
lahf
dec
js
rolb
lods
mov
jmp
imul
test
hlt
lock
test
pop
xchg
xchg
push
push
sub
mov
xor
xchg
inc
xlat
lock
loop
shll
xchg
push
and
jp
sahf
rclb
out
cmpl
mov
push
mov
push
inc
sar
or
ja
outsb
sub
ret
mov
les
rcl
and
mov
mov
iret
scas
sti
hlt
out
pop
orb
shr
sub
in
lods
push
or
stc
cwtl
and
pushl
rcll
mov
inc
in
subb
push
push
mov
repnz
movsl
xor
pop
lods
or
push
lods
cmpb
and
and
push
ficompl
push
or
movups
cmp
lret
jle
pop
xchg
add
add
jns
in
jns
call
pop
cmc
test
les
test
jae
xor
push
out
imull
test
or
nop
mov
lds
sub
orb
addr16
mov
add
mov
ljmp
xchg
mov
test
add
call
cmpsl
clc
sub
push
gs
ret
stc
lock
subl
int3
inc
pop
dec
mov
push
outsb
cli
shl
dec
ss
rolb
ss
mov
or
fldl
xchg
lret
push
push
xorb
sbb
mov
scas
inc
out
std
lcall
pop
jbe
dec
sbb
test
pop
stos
pop
add
mov
sahf
xor
outsl
jmp
sbb
xor
aaa
pushf
cmp
stos
and
dec
xchg
cmc
push
jb
pop
pop
out
mov
mov
imul
xchg
cmpl
mov
mov
out
jmp
lret
nop
jnp
add
adcl
hlt
dec
xchg
sbb
cs
or
incl
cmp
test
adc
repnz
jno
lock
inc
and
clc
jns
mov
pop
shll
gs
adc
mov
movsb
bound
inc
fsubrp
fistpl
dec
add
xchg
int
ss
lret
ss
push
cli
sbb
or
fmuls
xchg
mov
add
lahf
adc
out
adc
lock
pop
xor
pop
mov
rolb
nop
in
and
pushf
lahf
lret
adc
add
mov
mov
cmp
mov
cltd
mov
jb
sbb
mov
into
push
mov
mov
mov
xor
fstpt
gs
ficompl
out
inc
lea
rcll
or
sbbl
movsb
xchg
xor
addr16
adc
bound
dec
jle
pop
pop
cmpsb
sbb
add
inc
das
je
sub
xchg
mov
and
mov
sub
cmp
fsubrs
aam
jno
mov
add
xchg
aaa
sub
into
jb
clc
addr16
and
mov
or
loope
and
nop
fsub
mov
scas
mov
adc
aad
lea
jecxz
stc
cmpsl
cmpsl
repz
dec
cs
in
or
sbb
cld
fwait
inc
popa
or
xor
insl
push
movsl
jl
cmp
sbb
lret
stc
jo
xor
repnz
ss
add
je
pop
mov
fptan
mov
in
cmp
incb
or
xchg
jg
sbb
icebp
ss
jl
dec
in
or
movsl
mov
out
add
dec
std
xor
cli
cmp
out
lea
push
or
dec
jmp
add
mov
popf
push
push
leave
sub
adc
lret
sub
sahf
cltd
ljmp
pop
scas
ljmp
lret
fwait
and
pop
adc
leave
xchg
adc
xchg
dec
mov
ja
adcl
mov
push
push
outsl
and
add
dec
mov
in
dec
aam
sti
cmpsl
outsl
jno
movl
sahf
addb
ds
test
scas
push
nop
dec
jbe
scas
push
test
addb
mov
push
mov
test
push
xchg
pop
adc
mov
divl
nop
aas
insb
xchg
or
movsb
xor
sub
cmp
mov
dec
jne
cmp
sar
mov
lds
mov
jo
push
or
mov
cld
mov
shlb
jbe
test
mov
xor
mov
ss
lea
test
std
cltd
push
int3
mov
repnz
shll
inc
push
repz
sbbl
adc
movsb
xor
aad
and
repz
fldcw
aam
cmp
loope
adc
xor
es
inc
imul
mov
ss
cmp
icebp
mov
or
jne
inc
scas
cmp
cmp
call
and
je
jnp
adc
mov
push
xor
xor
jae
cmp
fs
jnp
jle
bt
stos
cs
add
xor
dec
xchg
xchg
or
dec
sahf
xor
into
mov
add
icebp
mov
xor
scas
dec
loope
xchg
repz
sub
mov
push
fsubrl
sbb
lcall
int3
in
inc
and
xchg
loope
outsl
mov
xchg
ret
push
dec
popa
sub
xor
enter
sbb
sbb
pop
enter
cltd
lea
xor
hlt
jg
lcall
inc
inc
cld
cmp
test
lds
lret
pusha
jl
jne
cli
xchg
and
inc
out
add
hlt
jle
hlt
fmuls
mov
mov
lret
das
icebp
and
pop
js
mov
xchg
lcall
push
fcoml
notb
fwait
mov
dec
xor
fwait
jae
mov
mov
mov
fdivrl
cmc
hlt
leave
rol
inc
dec
push
mov
jp
fsubrp
mov
loope
push
lret
dec
fdivrp
xchg
or
addr16
hlt
imul
insl
adc
inc
add
test
shl
dec
mov
int3
xor
and
xor
hlt
fucomip
jmp
cmc
cltd
cli
insl
cmpsl
nop
sub
and
inc
outsl
insb
jbe
pop
sbb
sbb
jne
pop
inc
push
push
test
jp
xorl
pusha
test
addb
sahf
xchg
jge
ja
cmp
int
aam
fidivrl
push
adc
cmp
xchg
xchg
xor
sbb
pop
inc
push
popf
in
push
out
pop
ljmp
les
push
mov
das
inc
jns
or
lods
cmp
push
xchg
stos
adc
andl
mov
rol
arpl
rcrl
lahf
xor
xor
outsl
negl
pushf
rorl
xchg
adc
xor
jbe
dec
arpl
inc
repz
jecxz
mov
sbb
jecxz
inc
lahf
mov
push
or
out
ds
pop
jns
pop
pop
add
loop
mov
pop
es
add
test
mov
pop
mov
mov
mov
in
push
inc
and
fldenv
cmp
push
inc
ljmp
loop
mov
sbb
jge
xchg
negb
cmpsb
cld
ror
xor
cmp
fcoms
aad
icebp
pusha
cmp
pop
cmpsl
pusha
sub
fistps
iret
stc
fcoms
hlt
adc
into
inc
aaa
aaa
mov
pop
push
outsl
aad
into
mov
js
xlat
or
or
fistpl
xchg
mov
stos
lods
fsub
les
mov
mov
popa
ficomps
stc
aaa
shrl
enter
shlb
test
dec
xchg
mov
fsubs
adcl
pop
sbb
sub
push
push
inc
pop
jp
push
xchg
adc
loopne
push
xor
inc
sub
sbb
mov
jle
jb
lret
nop
sbb
adc
dec
stc
cmp
cmp
loop
mov
xchg
xchg
and
hlt
dec
add
das
mov
push
cmp
lods
xchg
lods
jbe
fcmovne
je
xchg
mov
dec
out
add
mov
mov
add
xchg
stos
adc
dec
testl
repz
int
jno
loop
cmpsl
fistl
inc
dec
test
dec
in
jecxz
push
jmp
lcall
shll
xchg
jle
bnd
test
cmp
pop
push
in
xor
jb
cmp
xor
push
in
lahf
fldcw
outsl
xchg
jnp
daa
xlat
ljmp
test
test
xor
and
sbb
sub
cmp
enter
pop
fcomps
aad
add
mov
cld
sub
cwtl
jecxz
sub
mov
sub
scas
lcall
and
mov
adc
pop
insl
inc
adc
xchg
mov
repz
adc
rol
mov
ret
pusha
insl
xor
inc
dec
adc
add
jns
jmp
mov
and
loope
dec
push
xchg
push
inc
jmp
cs
out
subl
popa
jmp
adc
divb
xchg
sarb
push
stc
sarl
js
sar
movsl
dec
mov
jmp
cwtl
jo
imul
mov
jae
cmc
jns
out
in
mov
repnz
lea
movsb
cmp
xorl
push
mov
sbb
dec
adc
jp
dec
adcb
pop
jno
mov
mov
cmpsl
mov
adc
mov
or
add
in
ret
mov
and
js
ljmp
je
cmp
mov
loope
jne
lea
push
je
aad
mov
mov
scas
fisttps
test
leave
xchg
test
inc
fistpll
dec
cmp
push
inc
rcll
push
test
mov
pop
int3
pop
test
aas
lahf
andb
xchg
test
or
data16
gs
jmp
xor
divl
and
sti
and
pop
mov
sbb
sub
or
adc
cmc
mov
arpl
mov
push
fs
adc
fnstenv
inc
cmp
clc
fistps
xchg
cmpsl
sub
jno
sbb
xchg
cmc
and
xchg
pushf
inc
sarb
into
pop
aaa
mov
shlb
jno
lcall
and
leave
xor
in
mov
xchg
push
lods
stc
insl
pop
xchg
or
dec
daa
cld
add
aam
rclb
outsb
mull
push
jbe
std
sti
dec
sub
cltd
loopne
ja
leave
int
aam
rclb
idivb
adc
movsb
dec
xchg
sbb
test
sub
repz
xchg
aas
jmp
subb
es
out
fwait
js
sub
aas
negl
add
inc
mov
xorl
movb
sbb
notb
aad
test
or
push
and
stc
adc
sbb
pop
fdivl
xor
pop
push
stc
subb
xchg
mov
cmp
xchg
inc
outsl
and
mov
add
aaa
mov
cwtl
gs
push
into
mov
adc
xchg
int
mov
jl
pop
gs
jmp
fstl
ret
imul
pop
push
push
xor
out
pop
lret
call
dec
fstpl
jmp
ja
pop
sahf
inc
add
sti
fucompp
mov
mov
ret
add
data16
pop
mov
imulb
sub
mov
les
hlt
or
movsb
jns
outsl
mov
fxch
adc
add
rol
cmc
dec
jbe,pt
mov
inc
mov
ja
cmp
xor
adc
mov
add
mov
nop
push
push
sub
sbb
jnp
xchg
in
repz
dec
mov
inc
inc
adc
pushf
mov
pop
jmp
sub
adc
jo
insb
push
std
cli
sub
sub
loope
or
pop
jnp
ljmp
sub
adc
and
jnp
inc
nop
ds
jbe
loop
mov
std
push
dec
testb
cmc
test
mov
or
mov
dec
or
xor
loope
fstps
jl
repnz
push
jle
popa
and
adc
adcl
mov
les
inc
add
lds
xor
loopne
dec
or
xor
aam
ljmp
cmp
js
fidivs
and
and
adc
and
or
dec
dec
lahf
or
jmp
out
jb
or
cs
cmp
dec
movsb
mov
and
in
mov
pop
std
insb
xor
mov
sbb
jge
mov
pop
mov
mov
jge
sub
ds
daa
sub
jo
mov
adc
loop
hlt
sub
sub
cmp
dec
cmp
mov
sbb
jo
clc
jb
add
lock
dec
frstor
jecxz
dec
out
in
pop
les
ja
sbbb
icebp
fisubs
mov
lds
dec
adc
fidivrl
incl
sbb
in
rcr
into
enter
inc
jmp
lret
mov
addr16
fstps
lret
mov
ljmp
sub
sbb
add
ja
mov
in
stos
jecxz
pop
repnz
cli
sti
jmp
dec
pop
subb
test
mov
sbb
das
fists
insl
xchg
divb
sti
dec
fidivrl
arpl
mov
aaa
icebp
and
outsl
daa
int
test
test
or
out
mov
pop
sbb
inc
lret
pushf
push
repnz
out
sub
xor
loopne
mov
inc
add
push
xor
fbld
jl
les
sbbb
mov
int
adc
mov
mov
lahf
addps
mov
add
or
add
leave
in
push
out
ljmp
rorl
int3
rorb
lret
jge
mov
loope
rcrb
or
stos
sbb
sub
stc
push
push
jl
out
ds
mov
cmpb
pop
ds
sub
popa
mov
pop
push
add
lods
jbe
inc
mov
push
fdivl
dec
inc
or
pop
cmc
fld
pop
pop
pusha
push
dec
jo
es
lods
xor
ficoml
in
movsb
inc
sub
dec
out
sbb
pop
int3
lcall
movsb
jns
test
sti
nop
push
mov
stos
arpl
sbb
cwtl
gs
or
mov
movsl
mov
stos
or
pop
hlt
gs
add
inc
mov
adc
or
in
imul
mov
das
jle
jnp
adc
push
scas
sub
pop
mov
cmpsb
dec
lret
jb
imul
and
outsl
negb
iret
pop
aaa
pop
pop
shrb
mov
add
add
inc
sbb
pop
mov
mov
jnp
mov
cltd
mov
inc
jge
data16
mov
pop
addr16
jne
xor
rorb
xchg
dec
jnp
jecxz
gs
push
push
lds
fnsave
and
icebp
ds
imul
pop
in
adc
cmpsl
cmp
sahf
push
push
push
push
jecxz
fdivl
dec
pop
pop
mov
mov
add
and
stos
in
in
mov
pop
out
popa
xor
cmp
adc
in
push
je
shll
pop
adc
testb
loope
xchg
insb
sbbb
sub
mov
mov
xchg
cld
pop
inc
cld
sub
dec
shl
cmpsb
inc
sbb
sub
adc
decb
ret
arpl
outsl
lock
dec
in
scas
fcmovbe
fildll
jl
sbb
outsl
mov
out
mov
xor
xchg
pop
insb
icebp
mov
ffreep
add
fiadds
adc
fidivrs
add
arpl
arpl
or
or
inc
jbe
sub
push
inc
fst
stos
xor
pop
jno
shll
and
xlat
je
ljmp
nop
and
mov
add
jns
mov
or
shlb
push
add
add
ja
xor
push
cmp
scas
dec
mov
popf
xchg
outsb
adc
inc
fisttpll
push
or
loop
pop
add
pop
mov
shrw
fwait
pop
push
xlat
hlt
andl
mov
jnp
bound
adc
or
cmp
arpl
jb
sub
push
xchg
je
ds
imul
in
mov
out
fidivl
dec
adcb
repnz
mov
dec
into
cli
cmp
push
inc
outsb
movsl
in
adc
mov
pop
push
shl
icebp
or
je
push
sub
leave
out
jle
jne
or
sahf
or
add
jne
test
nop
add
lret
ss
add
mov
xchg
cmp
hlt
outsl
rcll
je
test
mov
test
fnsave
inc
lods
mov
inc
pop
cmpl
les
fldl
inc
xchg
inc
xor
lds
movsb
inc
mov
aad
jge
int
or
sbb
sub
into
test
xor
lods
cli
inc
es
out
xchg
sbb
push
cmp
xor
mov
mov
mov
cmp
lret
sti
xchg
clc
jbe
cwtl
inc
ret
js
inc
inc
pop
fimuls
aad
ds
insb
lahf
dec
pop
ja
jecxz
mov
popa
jne
mov
jmp
loop
outsb
sub
test
scas
stos
pop
inc
or
cmpsl
icebp
aas
fcom
clc
loopne
dec
rcrb
aad
xor
leave
cmp
sub
dec
pop
adc
adc
pop
xchg
jmp
ss
repnz
ret
mov
test
push
or
lea
repnz
inc
mov
loop
leave
xor
dec
pop
enter
inc
add
fwait
mov
sbb
push
xor
jne
scas
movsb
mov
pop
repnz
xchg
mov
cmp
in
mov
push
outsb
inc
mov
push
and
inc
mov
mov
push
adc
in
push
inc
icebp
jp
xor
sbb
dec
push
push
dec
aad
lahf
in
sbb
jg
and
mov
xchg
fs
std
loopne
stos
jg
mov
xchg
dec
dec
cld
leave
andb
fidivl
rorl
adcl
cmp
dec
push
loop
mov
test
add
loop
xor
xor
sahf
outsb
lea
mov
loop
inc
mov
sub
mov
fcompl
fwait
and
or
adc
mov
clc
enterw
sub
lds
pop
xor
movsl
jns
sbb
adc
shll
ss
xor
cltd
mov
fcmovb
and
push
or
xchg
in
gs
and
adc
negb
out
jo
mov
jg
cmpsl
in
push
or
in
cwtl
pushf
push
mov
jp
xor
pushaw
or
push
testb
js
pushl
repnz
cmp
repz
out
and
push
pop
xor
inc
stos
adc
insl
cmc
sub
mov
push
pop
insb
and
inc
jmp
stc
ret
int3
pop
in
es
sbb
mov
jmp
cmp
fwait
data16
sbb
in
pop
sbb
dec
cmp
jle
pop
or
xchg
daa
and
gs
aad
mov
pop
adc
cmpb
inc
sub
and
leave
jb
mov
cmp
lds
push
mov
fcmovbe
sbb
xchg
sbb
add
mov
pop
mov
aam
fcomps
imul
adc
sbb
adc
cmp
mov
and
je
rcrb
leave
jmp
cmc
jae
fldenv
pusha
cmovne
mov
popa
call
mov
sub
outsb
lcall
xor
scas
in
js
cmp
outsl
cmp
jns
push
pop
lahf
shlb
push
xor
int
sbb
inc
cmp
pop
stc
stos
lret
dec
cmp
shr
mov
jbe
xchg
lahf
push
mov
adc
fdivrl
in
jp
push
lods
mov
add
fs
cld
jno,pn
xor
loope
xor
jbe
popa
aad
mov
fdivrl
mov
cli
lcall
push
lods
pop
ret
jae
push
xchg
fbstp
adc
in
sti
loop
jnp
and
into
repz
outsb
sub
mov
xchg
call
cwtl
arpl
rep
push
jge
mov
mov
adc
dec
mov
out
sub
add
xlat
or
imul
mov
sbb
xor
push
push
add
mov
pop
adc
iret
test
subb
pop
pop
push
mov
in
imul
pop
pop
push
sbbl
sub
sub
sub
pushf
popa
and
xchg
xchg
mov
or
sub
aad
outsl
adc
hlt
dec
in
pop
pop
not
mov
add
mov
insb
add
push
adc
sbb
cmp
jmp
sahf
andb
shll
aam
lds
movsb
and
mov
add
and
pop
in
mov
lods
cmp
test
sub
pop
std
and
push
insl
mov
movsl
cmp
mov
test
cmp
cmp
mov
cmp
pop
cmp
mov
push
fcmovnu
cmp
stos
rclb
repz
or
mov
sbb
and
call
mov
cmpsl
xor
test
test
jb
mov
push
dec
mov
xchg
cmp
mov
jmp
in
xchg
nop
jo
adc
sbb
fldcw
pop
in
jmp
sbb
xlat
test
pop
insl
frstor
fwait
leave
push
outsb
sbb
sub
call
mov
test
les
and
dec
dec
adcb
add
and
stos
inc
sub
lret
andl
sbb
mov
add
insb
xor
jb
adc
pusha
push
xor
cli
adc
mov
xchg
adc
jne
fdivl
test
mov
sbb
adcl
adc
pusha
enter
jge
mov
inc
add
ret
push
push
out
lahf
and
mov
into
pop
jle
js
mov
insl
dec
xchg
inc
sbb
sub
mov
mov
es
cmp
cmp
pop
sub
jae
stos
or
pushf
xor
loope
and
imul
sub
mov
pop
ret
nop
xor
sub
dec
or
shrb
cmp
xchg
pop
test
clc
mov
mov
or
sub
push
insl
mov
bound
sub
cltd
in
inc
push
jae
cmpsb
lods
sbb
icebp
mov
mov
xor
mov
jb
data16
dec
mov
imul
int3
shlb
jl
pop
cli
mov
lea
mov
outsb
je
push
inc
nop
add
gs
sbb
xchg
call
xchg
sti
sbb
jbe
loope
cmp
xchg
outsb
pop
popf
fs
pop
xchg
andl
mov
sbb
mov
cs
adc
pop
xor
or
std
mov
mov
or
lcall
xor
repz
fdivrl
jmp
cmp
or
pop
push
fsubs
and
push
or
test
fwait
daa
push
xor
xor
outsl
dec
outsl
sbbb
xor
pop
sbb
mov
xchg
mov
mov
sub
inc
cltd
pop
data16
in
arpl
jp
or
shlb
imul
fistpl
cltd
lods
mov
mov
or
sbb
cmp
push
rcll
sub
jae
mov
popa
bound
xchg
dec
pop
popa
jno
out
jno
popf
lret
insb
inc
jecxz
pop
pushf
popfw
dec
mov
jge
push
inc
mov
out
notb
push
scas
cmp
testl
push
or
and
cwtl
sub
mov
mov
inc
call
inc
mov
lods
sub
mov
fsubs
and
and
repnz
std
repnz
mov
mov
mov
int3
mov
pop
xor
cmp
iret
mov
pusha
pop
sbb
test
cmp
mov
fnstenv
das
push
push
cli
mov
sub
mov
cmpsb
dec
and
add
sti
ret
pop
bound
inc
push
mov
int3
popa
adc
or
mov
loope
bound
repnz
in
jecxz
add
mov
dec
aad
sti
add
inc
push
pop
sbb
inc
out
rcr
sti
mov
jg
adc
mov
jecxz
subb
add
xor
and
jecxz
ljmp
and
or
in
jmp
and
clc
popa
jmp
inc
imul
arpl
cltd
sub
aaa
pop
adc
cmp
adc
push
outsb
repnz
adc
xchg
dec
push
fsubs
out
or
cmp
and
jne
fwait
scas
jo
call
lock
sub
movsl
xchg
int
dec
into
push
clc
push
and
lods
and
xchg
add
orl
cmp
mov
jbe
push
add
push
ljmp
adc
test
pop
bnd
sahf
movsl
and
adc
das
lods
out
cmpsb
xor
sub
add
fsubp
fdivrs
ret
rep
add
dec
mov
ret
repnz
out
dec
cmp
sbb
add
xchg
enter
jl
inc
pop
and
cli
xor
xchg
lea
sub
scas
mov
xor
out
mov
adc
addr16
mov
bound
pop
or
loopne
je
testl
scas
mov
or
adcb
mov
push
imul
xor
push
out
std
dec
notl
bound
mov
outsl
xchg
cmp
mov
addl
lahf
lock
mov
xor
lods
push
mov
adc
das
dec
jg
lock
add
push
in
pop
fucom
pop
xadd
dec
out
cmp
addl
push
jle
push
add
adc
loopne
push
cmp
mov
stos
pop
cmp
jb
mov
dec
and
stos
jmp
mulb
shl
adc
pop
pshufw
aaa
pop
adc
sti
and
adc
imul
sbb
pop
xchg
stos
cmp
and
dec
mov
add
cmp
cmc
test
lahf
push
test
leave
lret
push
aad
bound
add
adc
adc
ds
andl
xchg
push
pop
orl
outsb
lds
push
mov
jo
loop
sub
aam
cmc
xchg
xor
inc
mov
sbb
cmp
movsl
loop
xchg
cmp
in
dec
push
lea
cmp
jl
mov
test
mov
jo
test
cwtl
or
dec
xchg
stc
insb
fists
ss
mov
out
ret
adc
and
xchg
add
sahf
ds
fldenv
shrb
sahf
add
mov
addr16
mov
ficomps
jg
jno
fidivl
xchg
ret
pop
stc
test
imull
cmc
into
repnz
and
stos
inc
sbb
mov
sub
inc
cmp
clc
adc
add
lret
lds
sbb
mov
pop
mov
rorl
les
xchg
test
sub
stos
test
inc
adc
jge
push
dec
cwtl
mov
pop
into
pop
sub
push
jp
or
movsl
test
jbe
jge
add
repnz
and
movsb
aaa
adc
in
xchg
sbbb
push
lds
sub
ficoml
gs
gs
movsb
loope
test
cmp
in
in
cmp
fdivl
dec
dec
sub
sub
pop
sub
jp
stos
cwtl
dec
lahf
mov
mov
adc
loopne
inc
loope
pop
mov
add
bound
push
stos
inc
jb
enter
outsl
mov
and
addl
je
fdiv
or
popf
cmc
bound
shll
shlb
mov
aaa
xor
mov
iret
or
call
ja
add
and
je
adc
jle
and
bound
mov
in
lods
xchg
mov
out
mov
mov
fs
and
in
sti
mov
pop
jbe
add
jbe
and
sarb
cmp
mov
mov
cmc
out
add
outsb
xchg
dec
imul
ds
fwait
adc
xor
scas
push
mov
je
lcall
fmull
add
cmp
sbb
sub
push
rorb
insl
sbbl
pushl
mov
sbb
fisubl
lds
xchg
fdivrp
sbb
xchg
lcall
dec
data16
jmp
rcrb
cmpsb
mov
popa
iret
jbe
mov
and
fldt
or
fdivrl
cmp
xor
leave
pop
mov
and
adc
add
mov
stos
lock
divb
add
and
aaa
repz
mov
int
mov
lahf
lahf
movsl
aas
pop
add
ja
mov
ljmp
and
lahf
adc
or
test
cltd
xchg
push
push
loop
dec
cwtl
je
dec
cld
test
std
popf
add
add
jae
cmp
out
jno
sbb
mov
xor
fiaddl
repnz
in
inc
cmpsb
mov
cmc
xchg
lcall
pcmpgtd
out
or
dec
out
inc
inc
insl
jl
adc
frstor
inc
cwtl
cmpsb
mov
cmc
jnp
ret
mov
gs
cmpsl
push
nop
aad
mov
fisttpll
mov
outsl
push
clc
repnz
cmp
sbb
or
bound
jg
and
negb
mov
in
jb
sub
push
adc
mov
adc
rcl
in
test
sbb
dec
mov
int
or
lahf
lret
sti
inc
mov
mov
das
decb
test
movb
data16
in
push
cld
jg
mov
in
cmp
nopl
cwtl
mov
lret
popa
roll
movsl
jp
jae,pt
hlt
stos
cli
push
fs
cltd
mov
push
adc
push
rcll
cmp
cmp
xor
xchg
jnp
mov
add
inc
div
aad
pushf
xor
mov
ficoml
pop
outsb
int3
lcall
in
cmp
push
pop
mov
stos
movsb
dec
and
and
mov
inc
lahf
loop
jmp
scas
sbb
xor
fcmovu
inc
mov
and
mov
nop
das
add
push
pop
cmp
shl
push
add
stos
lcall
dec
into
jl
lods
adc
fisubrs
xchg
cmpsl
call
daa
jo
xchg
xor
push
dec
push
add
mov
cwtl
xchg
out
mov
inc
mov
fcomps
cltd
pop
dec
mov
roll
pop
fwait
arpl
and
and
sbb
movsb
sti
lock
mov
ds
dec
cmp
inc
jmp
jmp
inc
aaa
popa
cmp
fwait
jne,pt
int3
imul
and
ja
dec
divb
add
xchg
and
xchg
mov
fwait
mov
stos
lahf
ljmp
xlat
je
push
xchg
div
test
cmp
out
mov
test
mov
mov
sub
loopne
stc
out
in
or
pop
mov
inc
test
push
fisttpll
sub
push
pop
stos
xchg
xchg
and
pop
add
rorb
hlt
lods
stos
pop
je
enter
das
mov
mov
lcall
cmp
fcmovu
insb
sub
adc
xchg
cli
xor
arpl
int3
out
xchg
xchg
daa
or
lea
stos
sbb
mov
jo
movl
lods
sub
adc
dec
lret
fistps
cmpsl
xchg
sbb
xlat
cwtl
mov
shl
xchg
movsl
and
fwait
sub
pop
fdivl
aas
fwait
jno
xchg
aam
xchg
and
fistps
push
mov
outsl
mov
jl
adc
idiv
lods
cmp
lea
cld
mov
and
repnz
dec
mov
push
or
sub
incl
sarl
rolb
jge
std
jns
sub
ffree
pop
or
pop
mov
xchg
jb
out
aaa
inc
mov
mov
cmp
neg
sub
jb
aas
sbb
xor
jne
test
outsl
push
adc
add
xchg
mov
sbb
clc
fistps
or
in
sub
push
inc
cltd
call
test
jnp
sub
out
jecxz
in
sbb
rorb
jnp
inc
arpl
call
loope
movsb
xchg
sbb
or
inc
sahf
inc
push
sbb
add
sbb
xchg
mov
fiadds
mov
xchg
pusha
ja
dec
push
and
sbb
or
dec
and
add
notb
mov
mov
data16
mov
out
or
lock
sbb
stos
hlt
fwait
sarb
rolb
cmpsb
pop
xor
pop
bound
mov
cli
mov
push
stos
es
sbb
sti
pop
and
shlb
sahf
in
jl
adc
test
sahf
ds
adc
dec
out
testb
gs
add
push
xlat
pop
add
aad
dec
jmp
adc
push
mov
xchg
mov
sbb
jle
inc
jno
or
int3
dec
cmpsl
scas
iret
lret
jae
fdivs
in
xorl
notb
cli
mov
imul
rcl
test
int3
mov
test
mov
cmc
adc
mov
add
dec
out
mov
testl
popa
adc
pusha
pop
sub
and
xchg
cmp
mov
mov
cmpsl
sub
repnz
mov
sbb
mov
cli
push
sub
push
push
add
clc
daa
clc
ja
ret
adc
fsubl
pop
stos
enter
incl
push
inc
mov
pop
inc
cwtl
roll
aas
test
in
pusha
and
and
imul
andl
mov
inc
pop
pusha
int
aaa
in
fists
mov
push
mov
cmp
inc
addr16
cli
cld
adc
je,pt
and
mov
lret
out
push
andb
cld
pop
push
imul
sti
dec
push
dec
mov
imul
add
and
xlat
lahf
and
pop
mov
fiadds
or
push
mov
mov
mov
mov
dec
xor
out
pop
js
rorb
out
mov
das
push
mov
mov
cmpsl
adcl
push
outsl
popf
jns
imul
push
cs
mov
or
stc
lods
addr16
enter
cmp
mov
aas
mov
jg
aas
dec
ljmp
sub
cmp
add
dec
xor
xor
mov
into
ret
insl
cmp
imul
cmp
in
pusha
icebp
mov
adc
ljmp
or
lahf
or
rcll
insl
and
les
mov
and
mov
push
pop
popa
dec
andl
leave
jnp
dec
repz
pushf
outsb
es
adc
out
inc
shrl
xor
xchg
popa
ret
jb
sub
outsb
cmp
jle
add
stos
ds
adc
xchg
jecxz
pop
xor
rclb
cld
xchg
out
cmc
jno
out
mov
nopl
divb
sub
aam
push
push
or
fucom
sub
sub
imul
xchg
jecxz
xchg
or
push
hlt
pushf
stos
int
cmc
xor
icebp
lea
fcoml
ret
xlat
dec
ret
lret
cmc
lret
inc
or
pop
shlb
daa
out
adc
adc
inc
imul
fnstenv
fdivrs
pop
ljmp
jbe
xchg
aas
hlt
xchg
cmp
sbb
out
jb
xor
std
add
sarl
and
or
das
pop
mov
and
add
xchg
ret
ljmp
cmpsl
xchg
int3
jo
pop
inc
inc
lahf
push
inc
shlb
pop
sbb
andb
mov
fs
push
mov
or
add
push
rolb
mov
and
out
cs
pop
jno
pop
mov
or
sbb
and
add
out
pushf
jmp
iret
add
jno
gs
xchg
push
jp
sbb
insb
lret
int3
imul
bound
in
xor
and
sbb
cmp
sbb
lods
mov
in
sub
cmp
dec
xor
jge
sbb
out
enter
fnstcw
insb
adc
dec
push
and
mov
ljmp
imul
jno
cli
mov
and
adc
mov
dec
inc
lret
repnz
inc
imul
ljmp
icebp
loopne
pop
in
mov
mov
nop
add
adc
mov
lea
repnz
adc
ljmp
xchg
pop
xlat
xchg
mov
and
rorb
adc
movsb
push
add
push
mov
and
lea
fwait
or
dec
jmp
mov
leave
cmp
mov
out
mov
and
pop
shll
in
notb
lret
xor
rclb
lcall
mov
lret
cmp
push
xor
cs
cs
scas
push
sbb
mov
pop
enter
or
es
hlt
mov
out
mov
aaa
loopne
jbe
add
cltd
xchg
jno
test
jecxz
repnz
in
sub
cwtl
ljmp
sbb
imul
cmc
sbb
enter
or
icebp
cmp
dec
pop
sbb
test
out
divl
rcl
gs
mov
inc
add
imul
cmpsb
test
test
xchg
cwtl
cmpb
loopne
adc
pop
dec
sbb
ss
adc
aam
mov
dec
push
int
or
outsl
or
fdiv
popf
dec
insb
mov
pop
xchg
xchg
sub
push
pushaw
scas
rcll
aas
popf
jmp
xchg
out
dec
sbb
cld
add
xlat
xchg
or
xchg
sbb
jp
sbb
jmp
sub
adc
push
sti
inc
int3
shl
loope
aam
mov
xchg
sub
fnsave
js
xlat
out
mov
enter
popf
xor
test
sub
cmp
jb
out
sub
test
dec
add
sbb
loop
mov
mov
je
cmp
lahf
aam
adcb
test
xor
xchg
js
cmp
sub
xor
sbb
or
int
and
xchg
cltd
test
adc
xor
jns
push
inc
cmpb
xchg
sub
test
mov
loop
std
in
das
ret
test
xor
ljmp
and
inc
ss
cmp
pop
jno
dec
push
jne
xchg
ljmp
xchg
fistl
stos
adc
lods
lods
das
das
or
mov
cmc
out
icebp
ficoms
push
add
adc
dec
mov
dec
mov
sbb
pop
inc
cmpsb
test
or
cli
lea
aaa
xchg
adcb
and
cmp
clc
test
cmp
mov
sub
sbb
js
push
xlat
cmp
dec
add
repz
mov
addb
inc
push
jne
popf
test
xchg
pop
cmpsl
adc
call
data16
xorb
std
lock
addb
xchg
cmpsl
xor
or
mov
push
push
jge
dec
iret
xchg
jbe
sub
mov
repz
insb
aam
xchg
out
push
repz
lahf
sub
cmp
mov
imul
mov
in
inc
cmp
repnz
jb
pop
sti
aas
mov
out
adc
jecxz
lods
out
push
mov
mov
outsl
mov
inc
xchg
fisubl
or
ficomps
cmp
sub
adc
cmpsl
push
aaa
dec
ret
fidivl
jbe
test
movsl
mov
lods
pop
fs
jne
icebp
jnp
add
arpl
lods
jecxz
popf
pop
sub
sub
pop
mov
pop
inc
ljmp
rcll
cmp
outsl
loope
es
push
and
xchg
cmpsb
imul
and
dec
push
push
push
mov
fmuls
and
mov
add
xchg
push
scas
jno
xor
xlat
and
les
in
sahf
mov
jo
push
imul
jno
dec
xchg
or
xor
bound
jl
ficoms
popa
sub
cmpsb
decb
fisubrl
int
mov
mov
pop
and
or
in
or
jge
leave
lock
inc
ss
ljmp
cmp
add
stos
xor
iret
sub
stc
les
add
js
mov
jnp
fidivrl
add
push
pop
sub
rorb
stos
fwait
xor
andl
setns
mov
mov
jb
sbbb
fdiv
xchg
xor
sbb
mov
pusha
pop
sub
sub
push
cmpsl
sti
popf
ja
xor
ja
test
pop
xor
outsb
pop
jmp
xor
lods
adc
js
sbb
inc
movsb
xchg
mov
std
or
fidivl
idiv
mov
adcb
fistl
push
test
xor
push
jb
lcall
jge
mov
xchg
sbb
pop
lcall
mov
jne
add
cmpsb
push
fdivrs
movsb
test
out
lahf
std
repnz
inc
sub
nop
mov
setnp
mov
mov
cmp
cmp
fists
mull
daa
addl
jl
stos
xor
lret
movsl
sarb
jg
mov
insl
sbb
sbb
mov
jnp
in
pop
imul
inc
adc
arpl
push
sub
imul
adc
adc
push
subb
mov
popf
push
cmp
icebp
fnstcw
mov
push
or
movsb
pop
mov
daa
sar
xlat
jbe
lcall
lods
pop
out
push
es
jp
out
idivb
mov
mov
lret
xor
test
mov
mov
push
scas
pop
cwtl
push
mov
punpcklwd
cmp
adc
clc
out
test
inc
int
add
mov
mov
out
push
arpl
mov
push
fwait
xacquire
imul
lea
shll
popa
outsb
int
mov
ret
mov
xlat
loope
xchg
cmpsb
pop
pushf
inc
pop
std
xchg
repz
leave
mov
push
mov
adc
dec
or
sbb
xor
pop
mov
adc
out
or
lods
adc
std
ljmp
xchg
insl
mov
mov
or
ret
fmull
pusha
hlt
clc
fidivrl
movsb
jo
stc
jnp
test
push
cltd
push
push
xor
push
scas
test
mov
and
call
hlt
cld
inc
bswap
movsl
or
in
fwait
xor
stc
punpckhwd
es
xchg
orl
sbb
ret
cmp
jecxz
inc
mov
jo
cmpsl
iret
add
mov
dec
test
popa
rclb
lahf
xchg
inc
lret
stos
mov
pop
mov
xor
js
subb
pop
jns
arpl
dec
loop
sbb
in
mov
lods
add
dec
adc
xchg
popa
std
loope
xor
mov
xchg
outsl
loope
out
xorl
ljmp
xlat
stos
push
mov
lret
aaa
xlat
arpl
adc
jne
ja
mov
pop
pop
push
dec
lret
stos
adc
jle
inc
add
fsubl
jae
daa
aas
and
mov
mov
shll
nop
lock
sub
dec
ljmp
out
dec
pushw
fisubs
pusha
ljmp
or
dec
jl
cmpsl
mov
sub
repz
mov
addr16
push
sub
xchg
daa
push
aas
xchg
push
pusha
dec
pop
mov
inc
lods
push
pop
adc
add
cmp
outsl
into
inc
imul
imul
or
ret
jmp
add
lods
and
xchg
in
sub
out
mov
sbb
pushf
sub
mov
mov
mov
rclb
mov
mov
jnp
or
sbb
pop
mov
push
aas
push
xor
lods
jl
into
mov
sub
addr16
mov
ja
cmp
push
fistps
outsb
cmc
add
fisubl
loope
call
fsubs
arpl
pop
lahf
add
jl
sti
xorb
mov
out
lds
cmp
cltd
cmp
xchg
aaa
mov
mov
push
int
aaa
sbb
enter
gs
mov
pop
out
lret
push
outsl
push
in
int
es
cwtl
push
or
out
call
adc
daa
lahf
mov
les
mov
mov
jns
mov
mov
loop
fs
or
testl
push
push
cld
push
incl
cmp
adc
add
or
idivb
xor
ds
out
test
stos
xor
lcall
cmp
cmc
push
sub
call
in
dec
out
loope
mov
mov
or
inc
pushf
testb
push
adc
sub
mov
pop
pop
pop
ss
ret
mov
mov
xor
fstps
adc
jmp
jb
je
xchg
orl
ficompl
popf
pusha
imul
enter
push
lahf
cmp
inc
pop
data16
call
or
and
pop
inc
fdivp
mov
sbb
mov
lea
inc
test
daa
jl
add
out
push
mov
popa
pusha
in
fimuls
cmpb
clc
mov
or
dec
aas
sub
push
dec
push
in
out
add
and
rolb
cwtl
dec
cmp
lock
scas
insb
outsl
testb
dec
or
lock
mov
cmpsb
inc
cmc
addr16
ljmp
insb
insl
sub
ds
dec
pushf
insb
sub
int3
jns
or
mov
xchg
dec
mov
loop
insb
ss
pop
sub
sti
mov
cmc
jp
or
movsl
addr16
or
into
call
jae
out
adc
sub
cwtl
push
int3
fnstsw
decl
shll
ja
add
xor
shr
xchg
std
add
push
pushf
mov
inc
push
mov
int
cltd
mov
jp
mov
dec
mov
mov
cmpsl
adc
sub
mov
push
push
push
dec
bnd
hlt
xchg
xor
sbb
or
inc
xchg
sub
pop
dec
sbb
in
mov
or
jbe
ss
lcall
popa
shlb
ljmp
mov
pop
shl
es
sarl
inc
adcb
dec
iret
out
or
imul
rclb
mov
push
cmp
rep
xchg
int
sub
xor
rcl
aam
cs
push
and
fisubrs
cwtl
cltd
jmp
addb
mov
insb
add
outsl
rcrl
inc
int3
push
cs
push
sbb
inc
stos
mov
sub
sbb
arpl
push
out
cmp
xchg
decb
mov
pop
insl
nop
dec
pop
inc
bound
fiaddl
mov
lds
es
std
add
push
jmp
xor
scas
mov
lock
adc
in
push
sarb
popa
xor
in
insl
add
mov
sub
sub
lahf
cmp
decl
fldcw
pop
outsl
and
pop
pop
cld
mov
push
and
cmp
adc
scas
cmp
enter
xor
jnp
es
push
xchg
mov
xchg
add
stos
sub
adc
mov
cmp
sahf
push
jl
and
and
shrl
inc
subl
mov
dec
pop
mov
sbb
jo
mov
bnd
arpl
sub
sbb
pop
cmp
inc
or
push
roll
gs
xchg
jb
jae
outsl
sti
lret
mov
sub
jge
mov
popf
dec
sbb
bound
iret
scas
sti
scas
sub
cmpsb
outsl
outsl
dec
or
push
sub
mov
mov
call
push
pop
ljmp
sbb
not
mov
sub
in
xor
xor
adc
bnd
movsl
dec
test
xor
pop
or
scas
fadds
cld
cmpsb
loope
imul
frstor
pushw
popa
dec
or
xchg
lods
jmp
test
jbe
loop
jp
frstor
cli
stos
xor
pop
popf
into
xorb
enter
push
iret
test
fstpt
push
xchg
mov
into
mov
ljmp
popa
inc
out
sub
cmp
sbb
repz
jno
hlt
ret
aam
call
sahf
pop
test
idivl
and
call
push
arpl
mov
push
stos
daa
xchg
fimuls
sbb
jl
clc
shrb
cmovns
test
xor
iret
mov
xchg
repnz
pushf
roll
inc
cmpsb
lret
xchg
icebp
fildl
call
mov
and
rol
repz
pop
ret
call
jmp
enter
fldl
ror
dec
jge
addb
xlat
repnz
das
pop
gs
sub
jb
and
mov
cmpsb
shrb
pop
pop
ficompl
out
xor
jge
xchg
inc
inc
xor
and
jge
xor
dec
js
adcl
or
jne
sbb
push
pop
adc
xchg
push
sbb
push
cmp
inc
out
jg
pusha
sub
fwait
jne
adc
jne
ret
out
mov
xor
daa
xchg
xor
sbb
in
mov
int3
imul
sti
jae
or
dec
aad
xor
jns
inc
and
loop
jo
testb
stos
repz
test
push
in
adc
fadds
mov
imul
enter
test
popf
push
push
popa
addr16
in
sub
mov
add
mov
into
bound
aas
push
bound
or
or
or
cld
xchg
js
fsubl
push
jae
push
ljmp
cli
mov
add
jnp
pop
jno
adc
push
cmpsb
sbb
outsb
insb
fistl
cld
mov
and
dec
lret
lods
and
inc
pushf
cmc
out
or
xchg
aas
or
arpl
or
xchg
fcompl
ret
inc
das
sbb
xchg
rolb
into
mov
popa
ror
lea
mov
loope
into
mov
fisubrl
lods
ds
pop
sbb
scas
pop
inc
mov
push
data16
insb
sahf
mov
out
or
popa
lret
aas
iret
lret
outsl
pop
sahf
cmp
jecxz
push
aaa
int
cmp
data16
jg
and
cmp
repnz
or
cmpsl
jl
mov
call
lds
xchg
jae
sbb
dec
or
cmp
aad
or
pop
pop
jecxz
lods
dec
mov
xchg
sub
sbb
mov
dec
or
and
cmpsb
mov
in
inc
in
into
push
or
lret
push
sub
insb
xor
fs
dec
stos
mov
xor
push
push
popf
mulb
fwait
add
jns
add
xor
roll
pop
je
or
and
sub
pop
xor
int
push
jle,pt
xor
hlt
jbe
add
mov
mov
stos
out
ds
push
aas
test
jecxz
sarl
int3
sar
jnp
push
push
lea
imul
sub
jne
roll
or
xor
xor
inc
mov
jge
loopne
ret
mov
push
ret
sub
subb
movsl
into
or
mov
dec
aam
out
dec
push
fsts
lret
and
jno
sbb
adc
mov
xor
mov
outsl
rcrb
add
push
sahf
test
push
adc
or
mov
in
mov
push
sub
pop
mov
pop
mov
fsub
pop
adc
sub
movsb
lcall
jecxz
sbb
jmp
mov
cwtl
movsb
dec
xchg
test
pushf
cmp
bound
test
xchg
mov
xor
sbb
xchg
decb
je
dec
sub
icebp
ret
pop
jmp
popa
xchg
push
shrb
cmc
adc
cmp
nop
repz
xlat
sbb
jge
jmp
sub
pop
insl
cmc
or
lcall
xlat
test
jecxz
es
cmpsl
mov
dec
loope
pop
push
popfw
and
shrb
add
inc
cli
fwait
test
or
lock
mov
adc
xchg
loopne
push
ret
ds
rcr
and
mov
mov
shrl
test
or
push
mov
xchg
mov
jo
incl
lods
and
inc
cmpsl
push
popf
arpl
ljmp
mov
shrl
pop
imul
movsb
jb
data16
xor
cmp
jbe
jns
insb
mov
daa
push
sub
stc
insl
sarl
sarl
sbb
cli
ret
xor
mov
fistl
ret
pop
push
sbb
jns
jge
inc
fs
lods
jne
repz
test
int
jo
outsl
adcb
and
popa
idivb
popa
test
mov
pop
cmp
pop
fildll
test
and
inc
ds
mov
std
dec
sbb
xchg
or
sbb
cld
xor
pushf
and
pop
bound
es
xchg
or
cmp
jp
sub
loopne
fimull
and
fwait
add
lcall
push
mov
adc
push
inc
dec
jmp
xor
idivl
stos
aas
sub
mov
addr16
aas
je
div
in
fwait
aas
push
cld
mov
into
sahf
xchg
ds
pop
daa
aad
push
mov
cmc
ret
add
ja
jns
cmp
sarl
popf
inc
mov
mov
testb
outsl
fwait
add
imul
cmp
fwait
leave
lock
daa
push
daa
add
jle
push
cmpl
std
mov
pop
insl
cmpsl
jmp
push
imul
not
mov
dec
aas
jmp
inc
mov
in
jle
ret
shl
mov
leave
scas
pop
pop
mov
fdivrl
aad
ret
push
movsl
dec
rclb
popf
sub
in
jg
mov
push
xor
xchg
ds
jmp
pop
push
lods
clc
scas
add
gs
test
call
jno
out
lods
jecxz
lidtl
fisubs
cmovae
mov
movsb
scas
jecxz
mov
mov
fxch
and
jns
popf
push
sub
leave
mov
pop
das
data16
mov
out
js
mov
jle
xchg
insl
mov
pop
xchg
adc
aad
mov
fisttpl
adc
sub
mov
daa
sbb
outsb
pop
popf
cmp
sub
pushl
repnz
mov
adc
movsb
inc
push
xchg
fcomps
outsb
pop
cld
fmuls
out
iret
setg
cmp
ds
imul
bound
mov
popa
xor
push
mov
jle
lock
into
mov
stc
or
cs
hlt
pop
push
xor
jb
in
out
idivb
mov
enter
sub
or
daa
insb
dec
push
js
adc
pop
stos
dec
bound
imul
enter
jmp
movsb
cwtl
or
mov
push
fcom
repz
add
pop
stc
scas
pop
pop
repz
rcl
lret
icebp
mov
jb
cmp
sbb
imul
xor
mov
mov
in
dec
lods
ljmp
cmp
fcoms
adc
nop
jp
mov
popl
dec
add
subl
pop
je
in
shrl
aaa
movsl
outsl
and
cmpsl
cld
pop
and
lret
pop
js
in
push
xchg
inc
sub
jb
cltd
lret
push
cmp
sub
lret
bound
fisttpl
xchg
dec
imul
mov
pop
push
mov
sub
addr16
lahf
imul
ja
jne
fiadds
push
mov
adc
jo
xchg
add
and
sub
mov
xchg
fwait
loopne
out
sub
popa
subb
fsubl
adc
dec
sbb
push
dec
sub
in
les
sub
dec
push
pop
fstps
ljmp
mov
loope
cmp
icebp
bound
xchg
les
mov
or
out
in
outsb
cltd
rcl
push
insl
rclb
ds
insb
call
jmp
pcmpeqw
addr16
sub
fists
push
shrb
fst
cmp
mov
xchg
je
jle
and
pop
gs
xor
jb
adc
out
iret
pop
mov
sub
icebp
lods
shl
inc
iret
shlb
fs
data16
ficoms
ss
xor
push
jl
mov
jae
idivl
push
dec
call
xor
xchg
adc
arpl
es
das
insl
dec
es
outsl
cmp
fwait
ss
in
loopne
pop
lods
mov
mov
movsb
sub
jge
inc
icebp
xchg
ret
xor
cwtl
or
daa
dec
push
adc
aaa
pop
inc
movsb
add
or
inc
cltd
scas
fcoml
sti
jg
xchg
pop
dec
rcrl
cld
adc
mov
adcl
and
push
pop
fstpl
sub
pop
mov
es
add
lahf
cmp
mov
lcall
jle
iret
and
sahf
mov
jbe
xchg
push
mov
sbb
xchg
xchg
mov
dec
fisubl
fwait
das
lds
mov
mov
jmp
popf
mov
das
out
pop
adc
push
cmp
add
dec
mov
xor
adcb
xchg
testb
add
push
pop
and
popa
pop
xlat
in
addr16
jnp
inc
cmpsb
arpl
daa
out
xor
sbb
nop
nop
sbb
mov
push
repz
add
out
jmp
popa
ljmp
stc
in
lods
jecxz
jb
test
lods
mov
push
xchg
add
orl
cmp
loopne
sub
push
shll
pop
push
inc
leave
dec
das
jl
pop
mov
cmp
fiaddl
hlt
ss
sbb
cmpsb
mov
xchg
xchg
aad
fcoms
in
push
push
ficoml
aaa
mov
ljmp
mov
insl
push
clc
int
pop
data16
popa
out
jp
je
adc
mov
sahf
clc
dec
sub
adc
or
jge
outsb
mov
dec
imul
mov
mov
andl
imul
ljmp
cwtl
ret
stos
mov
clc
lods
out
xchg
mov
cmpsb
adc
sbb
xor
jb
push
xchg
test
nop
std
lret
jle
inc
das
fbld
xlat
cmpsl
bound
aaa
pop
or
mov
xchg
inc
xor
mov
jae
jg
xchg
popa
scas
cli
add
repz
data16
in
fucomi
insb
outsl
adc
shll
add
dec
jae
jge
mov
mov
or
test
ret
outsl
jp
sub
bound
and
das
xchg
mov
repnz
fndisi(8087
add
mov
push
cltd
or
sub
data16
bound
push
push
rorb
push
popa
ds
sti
pop
nop
dec
pop
cwtl
lret
pop
or
adc
addr16
sbb
das
xlat
xor
xchg
add
call
insb
or
jecxz
sbb
jne
cs
mov
adc
out
sti
jg
jns
inc
scas
psraw
test
or
mov
hlt
fistl
and
fcmovu
aaa
mov
mov
xor
es
and
pop
mov
shl
das
mov
push
xchg
imul
daa
push
cli
pop
aam
lret
xchg
add
mov
push
mov
add
imul
or
les
and
lcall
sbb
mov
pop
hlt
cmpsb
jo
lret
and
vmovhpd
xchg
fildl
inc
xchg
jp
cmc
xchg
scas
push
jb
inc
mov
mov
mov
test
pop
mov
cwtl
addb
ret
data16
pop
cmp
inc
outsl
pop
scas
sub
ret
mov
sbb
push
mov
outsb
mov
jns
lret
adc
repnz
call
xchg
mov
sub
fcmovnb
notl
data16
fcomp
sub
int
jne
cmp
or
push
sub
pop
stc
sbb
mov
pop
aaa
jp
test
and
faddl
or
dec
xor
dec
and
inc
cs
add
and
loopne
sub
stos
adc
jmp
xchg
pusha
in
cmp
imul
inc
jae
mov
sti
cmpsl
cs
dec
inc
mov
push
dec
lods
xor
jle
xchg
fsubrp
cli
mov
add
and
ljmp
inc
and
pop
lock
into
jbe
arpl
cmp
dec
not
orl
jge
shlb
push
int
shlb
mov
out
pop
xlat
ret
pop
pop
mov
push
cld
jo
push
sbb
jae
subl
cmp
into
jecxz
pop
or
js
push
mov
adc
popa
sbb
jb
flds
pop
push
jg
sub
dec
xchg
lods
rcrl
stos
sub
lock
xor
push
cmp
xor
cwtl
sbb
mov
lods
sahf
dec
inc
mov
push
repz
xchg
out
aad
imulb
fstps
xor
xchg
jp
aaa
cmp
pop
add
hlt
leave
mov
pop
sbb
pop
rolb
mulb
xchg
int3
loopne
jge
push
je
xor
insb
sbb
add
jno
add
add
dec
mov
and
push
mov
fildl
pop
mov
insl
lcall
jo
mov
push
adc
loopne
fwait
inc
mov
scas
push
adc
cwtl
into
add
mov
faddl
into
pop
psrlw
fsubr
sbbl
addr16
sub
pop
mov
andb
mov
sti
mov
mov
pop
cld
and
sbb
dec
sub
filds
stos
push
fidivrl
xchg
rorb
jmp
sahf
outsb
mov
bound
mov
js
inc
push
push
lcall
pop
sub
adc
out
outsl
mov
and
push
sub
mov
leave
and
and
das
ror
jmp
mov
orl
push
addr16
add
cmp
xchg
inc
sub
insb
mov
je
xlat
sarb
jg
jno
and
sti
leave
out
jge
push
insb
das
add
aaa
gs
aam
pop
addl
lcall
dec
idivl
xchg
add
push
test
inc
dec
mov
xor
mov
jo
and
fmull
xchg
mov
fiaddl
xchg
inc
popf
fs
cld
sub
lret
std
ss
das
sbb
rcll
cld
int3
or
xor
clc
shlb
jbe
test
adc
sub
push
xchg
cld
pop
hlt
inc
negl
cmc
push
inc
orb
bswap
stos
pop
scas
lock
pop
jge
add
dec
jne
mov
add
fbld
ficoms
mov
insb
aaa
jb
pop
in
mov
pushf
xor
or
mov
sub
sbb
mov
jb
mov
int3
mov
mov
adcb
insb
inc
pop
mov
cwtl
inc
mov
cld
cmpl
or
in
popf
xchg
les
dec
cmp
push
xchg
imul
test
inc
push
sub
push
clc
aad
ss
jno
divb
pop
movsb
icebp
mov
int3
in
testl
out
xchg
add
push
xor
stos
jns
or
je
xchg
cld
fisttpll
testl
sbbb
std
outsl
call
mov
xchg
lcall
adc
in
and
callw
enter
xor
dec
xchg
sbb
lahf
add
adc
shrb
sub
mov
rolb
inc
clc
ljmp
les
std
scas
pop
cmc
mov
xor
ret
add
pop
sub
lods
insl
sahf
sbb
popf
cmp
push
leave
test
mov
mov
sahf
inc
push
call
push
mov
pop
sti
xor
js
movsb
popf
xchg
iret
jmp
or
mov
mov
cmpsb
js
pop
jb
adc
roll
cmc
call
jecxz
dec
or
jnp
lcall
add
jecxz
jle
arpl
shrl
and
sbb
cmc
cld
lcall
fs
in
cli
dec
xchg
sahf
inc
dec
push
add
in
fistps
call
pop
aad
jne
push
adc
out
sub
int3
out
sub
mov
xchg
pop
xchg
sbb
and
jmp
and
mov
sbb
jge
gs
pop
lret
cmpsb
inc
xor
add
mov
lods
test
cmp
movsl
jb
and
fwait
ret
push
rcrb
shlb
adc
sbbb
sub
rcl
test
ja
in
sub
xchg
mov
leave
bound
cmpsl
insl
mov
mov
fbld
and
pop
cmc
jl
sub
add
xor
or
imul
add
add
gs
ficoml
pop
adc
sbb
xor
fwait
rcrb
aam
loop
lret
lret
addr16
mov
rsm
cmpl
dec
cmp
pop
mov
cmp
pop
and
gs
ret
and
js
jle
ss
xchg
push
xchg
lret
test
and
stc
and
fistpl
cmpsl
mov
les
testl
loope
mov
jp
movsl
shr
daa
jle
cmp
aas
mov
mov
insb
pop
mov
inc
or
ret
mov
imul
inc
adc
dec
int
enter
cltd
ret
mov
cmp
mov
xlat
cmp
lret
hlt
andl
icebp
pop
ds
movsb
hlt
inc
ja
push
addr16
mov
fwait
lahf
out
push
adc
dec
push
xchg
inc
loop
cwtl
mov
aam
jb
mov
cmp
xchg
adc
mov
into
repz
jno
daa
rclb
aas
inc
and
mov
or
xchg
jg
inc
mov
jmp
shll
cmpsb
and
sbb
inc
adc
pop
popa
push
in
test
hlt
sub
adc
js
shl
push
mov
call
lahf
int3
jb
lahf
insb
pusha
cmp
in
es
int
pop
fs
push
jno
cld
pushl
outsl
dec
mov
test
mov
push
sbb
add
stos
cmp
xor
sbb
out
gs
cld
pop
pop
xlat
sbb
or
es
aas
xchg
in
lock
push
mov
sahf
insl
mov
sbb
xchg
dec
jecxz
inc
xorl
and
out
sahf
test
and
mov
sub
xlat
mov
iret
xor
sbb
inc
push
xchg
xchg
mov
push
fidivrs
mov
mov
ljmp
test
or
cmp
or
iret
fisubrs
dec
rorb
imulb
jb
mov
xchg
faddl
lahf
bound
insb
daa
pop
sti
jne
jg
xchg
gs
pop
enter
mov
cltd
test
in
out
cwtl
or
jo
mov
popa
jmp
out
pop
repnz
push
cmpsl
cmpsl
jb
test
hlt
sub
mov
jno
fnsave
mov
test
icebp
call
mov
sub
xchg
inc
mov
lret
fsubl
push
icebp
stos
and
cmp
push
jne
xchg
mov
popa
test
jns
mov
stos
icebp
mov
addr16
mov
outsb
mov
sarb
and
aad
jbe
xor
jnp
inc
mov
pushf
and
into
sub
xorl
mov
adcl
xor
mov
jmp
ss
nop
mov
inc
pop
xor
rcrl
xchg
hlt
leave
divl
jo
testl
movsl
cmp
scas
inc
inc
mov
repnz
test
mov
andb
xor
xchg
add
popa
sub
stc
pop
push
fwait
mov
push
int3
clc
jb
in
iret
adc
addl
dec
xchg
ret
sbb
inc
mov
mov
ss
ss
or
jns
in
mov
mov
adc
test
notb
clc
cmp
jg
gs
mov
icebp
cmpsb
cmpsb
xchg
xchg
fdivrl
gs
shrb
fsts
mov
jb
push
xchg
dec
and
rcrb
movsb
mov
jge
cltd
mov
imul
ds
jbe
inc
unpckhps
push
add
sbb
mov
call
pusha
fsubrs
dec
out
out
or
xchg
pop
xor
test
aaa
mov
nop
out
scas
insb
testb
push
mov
std
insb
les
mov
pop
test
sub
jmp
jge
jno
loop
fsub
xchg
mov
cmp
adc
or
arpl
fidivrl
push
ret
lret
cmp
pop
mov
dec
das
outsb
or
arpl
daa
jle
sub
popf
add
dec
dec
cmp
sub
xor
cmp
push
lret
mov
call
jo
scas
lods
mov
xchg
stc
inc
popf
pop
xchg
mov
mov
and
or
xor
sbb
sbb
mov
movsb
xchg
mov
lret
insb
in
in
js
xchg
xchg
fs
aam
sub
std
aam
leave
xchg
inc
cwtl
jg
adc
insl
jns
pusha
out
dec
push
xchg
jno
enter
sbb
aas
mov
mov
push
push
push
push
or
pop
popf
jge
push
fsubs
or
adc
sbb
jle
xchg
pop
mov
in
and
pop
gs
push
rcr
mov
out
mov
jno
loop
push
cli
add
sub
cmpsb
xlat
cli
in
repnz
xchg
arpl
xchg
stc
xchg
out
mov
jne,pt
out
mov
test
sahf
in
shl
dec
or
fs
sub
lds
mov
sarb
mov
ds
mov
clc
add
and
dec
rcrl
scas
lea
xchg
cli
std
mov
or
sub
xorb
loopne
scas
ljmp
pop
inc
or
arpl
out
sti
jo
shrb
lret
push
add
and
sub
or
inc
inc
in
sahf
ret
or
out
bswap
jmp
idivb
jmpw
push
jbe
sub
fcompl
inc
mov
lods
test
je
stos
mov
add
cltd
mov
std
subl
scas
icebp
in
fisubl
mov
ror
jns
call
inc
cmp
popa
pop
xor
jo
int3
add
aaa
int3
adc
xor
jae
mov
in
pop
mov
in
out
mov
les
mov
dec
sbb
mov
mov
dec
mov
push
push
je
ret
push
push
jmp
mov
lahf
in
mov
xor
mov
stos
sbb
pop
out
std
adc
shlb
mov
add
pop
repnz
outsl
insl
jnp
imul
sub
loopne
push
mov
scas
rcll
dec
add
push
loop
mov
xchg
fldl
mov
mov
xchg
sub
mov
adc
xchg
imul
xlat
fisttpl
cmp
adc
cmp
sub
sbb
aaa
push
mov
icebp
add
test
orl
aam
sahf
repz
xchg
jae
daa
lea
jmp
cmp
dec
inc
xor
xchg
jmp
test
aam
add
jle
pop
rorl
or
fnstcw
sub
hlt
cmp
mov
cwtl
xor
enter
inc
push
cmp
fadds
fbld
mov
ljmp
test
sub
loope
rcr
rcrb
lds
pusha
idivb
cld
out
cmp
push
rcl
jae
adc
outsb
daa
mov
jne
icebp
pop
imul
mov
push
xor
add
pop
sbbl
scas
ret
sarb
jg
call
ja
popa
jo
xchg
or
ret
jg
test
fiadds
push
jo
insb
pop
inc
mov
in
subl
rcr
das
jle
arpl
mov
jp
inc
xchg
rcrb
mov
push
adc
jp
or
orl
push
mov
data16
daa
add
jno
xchg
and
dec
add
loop
xchg
sub
sbb
out
push
pop
ret
inc
pop
or
or
push
movsb
aas
mov
mov
mov
test
push
lcall
sub
jb
push
xchg
mov
mov
push
mov
mov
mov
push
daa
movsl
mov
int
push
fdivl
xchg
cmc
adc
mov
jbe
int
inc
jle
mov
pop
mov
leave
je
js
fstps
rcll
inc
xchg
dec
jno
jg
loop
iret
mov
mov
shll
int3
mov
or
sbb
daa
cmp
jae
cmp
inc
test
pop
loope
lahf
cmp
lds
outsl
stos
add
cmp
es
ds
rorl
jge
xor
jbe
mov
movsb
stos
in
cmp
daa
and
mov
cmp
insb
bound
jnp
push
pop
repnz
push
ss
mov
lahf
mov
xchg
lock
or
jae
cmc
fcomps
mov
adc
cmpsl
ljmp
fcomp
imul
dec
sbb
xor
mov
in
dec
mov
fcompl
mov
jo
lods
pushfw
push
cmpsb
pop
imul
sbb
push
iret
and
dec
std
pop
iret
int
xchg
int3
adc
inc
lods
mulb
into
movsb
andl
shrb
ja
xchg
xchg
mov
fsubrl
adc
addl
sbb
insb
pusha
jecxz
sbb
lahf
popl
cvtps2pi
cltd
pop
sub
scas
les
or
xchg
fwait
lcall
xor
adc
jl
cmp
dec
ljmp
xchg
std
das
loop
dec
fistps
xchg
sub
xor
cmp
jecxz
pop
repnz
ljmp
xor
repz
insb
jns
int
add
cltd
mov
xor
inc
or
jae
push
aam
jns
push
dec
dec
lock
insb
in
adc
lods
ljmp
push
jmp
repz
cmp
sbb
xlat
pop
popf
insb
cmpl
imul
xchg
outsl
iret
add
rorl
out
jns
adc
mov
add
push
cmpsb
out
leave
pop
or
mov
int3
mov
out
div
int3
push
mov
sub
call
mov
out
or
aam
insb
sbb
push
pop
add
pusha
lds
jnp
sbb
and
xchg
in
leave
mov
push
in
imul
add
cli
insl
fs
dec
push
sub
jmp
scas
in
or
jp
daa
fcoml
clc
repz
mov
pop
sub
adc
cmp
sbb
or
dec
shl
ret
xor
rorb
adc
repz
xlat
fstpt
dec
pop
orb
sbb
jmp
out
loop
or
or
or
xor
mov
mov
rcl
stos
jp
out
mov
inc
rcll
or
pushf
test
cmp
out
int3
pusha
adc
add
sub
and
add
das
ret
xor
clc
jg
push
stos
jnp
xchg
pop
imul
rep
jge
lods
or
enter
xchg
lds
dec
lea
mov
out
leave
or
jmp
sub
adc
sub
pop
in
jae
clc
nop
cs
imulb
ja
add
ds
xchg
ret
inc
repz
inc
pop
push
hlt
jne
lret
aaa
pusha
arpl
shll
not
cmp
xor
xlat
mov
inc
pusha
dec
cmp
push
sub
jo
mov
pop
sub
add
pushf
mov
push
sarb
sub
cmpsb
sub
xchg
jnp
sbb
mov
or
jmp
mov
mov
sub
test
inc
push
xchg
std
mov
mov
jb
cmp
cmp
jecxz
or
bound
ss
jle
ret
mov
ret
lea
mov
insb
out
sar
pop
test
and
ja
sti
pop
mov
stc
jo
gs
fsubrl
or
push
pushf
rep
fs
mov
frstor
sub
add
push
mov
ror
pop
xchg
test
mov
daa
in
shlb
fwait
loop
push
adc
ret
test
aam
movsl
or
das
sub
cmp
jg
jmp
sub
dec
fiadds
xor
push
out
stc
inc
movsl
xchg
ret
xor
stos
sbb
pop
aaa
mov
push
cld
test
push
xor
mov
rcl
push
sub
push
hlt
inc
lods
ror
inc
int
aad
ficoml
sbb
cmp
xchg
rol
push
and
loop
pop
cmp
or
fs
hlt
xlat
ret
push
pop
jecxz
jmp
pop
pop
inc
add
cmpsl
jge
mov
cmp
ja
xchg
out
push
xor
cmpsb
hlt
cld
loope
dec
jmp
cmc
mov
xchg
jl
inc
push
idivl
push
imul
decl
in
mov
xor
rcrb
pop
popl
adc
dec
popf
jo
in
jne
pop
pop
in
insb
shll
and
lret
mov
or
sbb
mov
mov
adc
scas
adc
popa
jae
dec
roll
icebp
xor
out
fmul
add
and
pop
pushf
xchg
clc
fsincos
xchg
jb
out
mov
in
cld
mov
outsb
enter
or
or
idivl
sti
xchg
ret
mov
add
sub
test
aad
pop
scas
push
js
fmulp
mov
stos
cmp
pusha
out
stos
neg
call
cmp
push
fidivl
xchg
movsb
js
mov
jmp
sbb
int3
push
std
jp
mov
sub
fidivs
and
inc
mov
xchg
nop
push
cmp
repz
pop
pop
jno
jae
pusha
push
sub
add
sbb
adc
icebp
in
addr16
sbb
enter
sbb
sub
jmp
enter
fidivrl
imul
cli
xlat
and
repz
ss
enter
fldt
or
and
add
cmp
jns
cmp
ds
cmpsb
xchg
sub
inc
jb
data16
daa
adc
cli
das
mov
mov
bnd
test
fstpt
xchg
sbb
xor
fldenv
dec
sarl
fdivrl
jg
cld
hlt
cmc
adc
ss
push
out
sub
inc
jnp
dec
push
stos
mov
insb
and
adc
pop
xor
lea
add
xchg
jge
enter
icebp
movsb
sahf
cmp
dec
test
xchg
pop
sub
popa
adc
test
sub
xor
mov
sub
dec
lahf
fcmovbe
aad
add
andb
mov
cmc
inc
push
out
andl
out
cmp
arpl
mov
dec
pop
in
imul
std
add
push
add
call
pushf
in
fldl
repnz
or
or
dec
stos
mov
ror
pop
push
fdivl
pop
aam
sbb
push
insb
cmp
loop
push
rcrb
addl
mov
outsl
gs
ja
movsl
push
loopne
jl
sub
aam
int
xor
and
fsubrl
pop
mov
mov
mov
int3
and
fnsave
jo
cmp
stos
daa
pop
es
addr16
xor
jb
pop
enter
or
sbb
js
xor
adc
js
jp
sbb
aam
or
and
cmp
in
in
jecxz
aas
out
jp
adc
insl
lret
cmp
xlat
xchg
out
icebp
mov
ja
cli
shl
fdivp
mov
push
adc
in
pop
insb
dec
jmp
es
ljmp
cmp
aad
clc
add
mov
lock
cltd
cmp
cmp
aad
shl
add
push
das
outsl
jnp
daa
ja
sub
mov
xchg
pop
inc
jne
lret
push
push
mov
in
cmpsb
add
sub
test
xor
add
call
std
scas
leave
add
js
sub
push
xchg
fcomp
adc
fs
out
lcall
lcall
add
ret
push
adc
scas
cmp
and
mov
xchg
scas
push
scas
movsb
or
pushf
sbb
fidivrl
mov
and
or
shlb
push
sbb
and
out
outsb
lds
inc
ror
mov
repnz
popf
iret
pop
sti
inc
das
pop
fmulp
xchg
push
mov
push
movsb
nopl
mulb
nop
jbe
lods
stos
jge
push
sub
fsubrs
fnstenv
and
icebp
outsb
mov
dec
adc
jno
and
jns
and
mov
ror
add
or
movsb
shrb
add
inc
mov
fs
xchg
pop
adc
jno
jne
mov
mulb
div
push
bound
cltd
rorl
cmp
popf
es
mov
inc
ja
jmp
cmp
and
xchg
sbb
mov
mov
les
mov
mov
idivl
sahf
xchg
orps
cmp
mov
pushf
mov
dec
cmp
lret
popf
adc
mov
dec
roll
cmp
or
dec
pop
lret
jbe
sbb
mov
aas
pusha
adc
outsl
dec
shrl
movsl
inc
sbb
sahf
in
mulb
bound
paddb
push
imul
outsl
add
xchg
jecxz
mov
jnp
mov
ja
jb
dec
mov
mov
fmulp
scas
das
dec
adc
std
es
aad
insl
pop
xchg
fsub
jmp
fldl
call
inc
push
icebp
sub
clc
sar
inc
into
shll
sahf
lods
jnp
dec
out
loopne
fcom
mov
sbb
sarb
pop
nop
das
xchg
call
cli
push
and
xor
test
rcrl
xlat
mov
scas
in
pusha
mov
jg
push
cld
mov
mov
aaa
pusha
out
and
cmp
adc
xlat
test
jle
call
cmc
sub
sub
lcall
fnstenv
out
xchg
repnz
dec
xor
pusha
stos
mov
mov
in
jno
add
in
sbb
cmp
fisttps
xchg
fwait
dec
mov
out
pop
test
mov
loope
mov
fwait
mov
lock
into
adc
into
cmp
mov
push
shrb
inc
push
aas
pop
jecxz
mov
clc
loopne
adc
fwait
andl
and
ficoms
push
xchg
in
insb
test
xor
call
jnp
adc
dec
loope
cmp
xchg
adc
and
cli
outsl
fcoml
mov
fldenv
jp
mov
sub
add
roll
out
mov
test
imul
fnsave
sarl
mov
mov
sub
or
add
clc
adc
or
jb
add
in
xor
imul
mov
add
std
sub
pop
daa
imul
int
mov
lcall
nop
lock
aas
jl
push
out
sub
rcrl
push
sahf
add
cmp
jns
mov
sbb
mov
les
or
cmp
cld
jo
fildll
pop
and
xchg
fsts
daa
mov
jp
xchg
fdivrs
pop
mov
cli
scas
sbb
inc
xor
push
push
cmc
sub
and
addr16
roll
int3
dec
xchg
out
sub
and
mov
add
cmp
sti
cwtl
cmp
fcos
dec
mov
cwtl
jno
add
pop
sbb
ja
cmp
jns
mov
xor
add
pop
cmp
sub
jnp
add
cli
outsb
bound
hlt
dec
bound
sbb
xchg
shl
xor
cmpsb
arpl
popa
in
or
cmpsb
xchg
sti
cwtl
mov
popf
scas
xor
fistpll
iret
mov
cmp
in
mov
hlt
lcall
scas
in
outsl
out
stos
jmp
dec
or
gs
xchg
sbb
mov
ljmp
jo
mov
ret
cwtl
out
and
xchg
leave
mov
data16
adc
imul
cld
xor
loop
push
sbb
rorl
fstpl
test
push
pop
outsl
in
bound
mov
ljmp
outsb
mov
mov
test
xchg
sahf
adc
push
std
popa
mov
outsb
popa
stc
and
bound
pop
scas
xchg
dec
push
mov
dec
push
clc
mov
bound
gs
pop
bound
les
or
sub
pop
clc
add
mov
xor
pop
jo
xor
and
inc
adc
jnp
mov
lcall
xor
xchg
push
mov
xorl
int3
xorb
inc
pop
scas
xchg
adc
push
ficomps
xlat
popa
cli
mov
dec
mov
clc
mov
fnstenv
or
mov
cmpsl
adc
ja
negb
fsincos
mov
std
arpl
in
mov
orl
sbb
movsl
xor
mov
mov
or
inc
adc
outsl
and
sbb
sub
scas
mov
fs
add
cmc
rcll
dec
xchg
fidivrs
cmp
movsl
jb
stos
unpckhps
inc
jno
add
add
ss
mov
jl
icebp
imul
ret
shrl
shlb
arpl
mov
outsb
nop
mov
jmp
into
fs
dec
jno
mov
push
mov
ret
je
fs
inc
in
cltd
jmp
fisubrs
mov
xor
cltd
gs
lret
push
test
jno
adc
xor
lahf
ljmp
jp
cmp
leave
outsb
ljmp
int
mov
popa
lock
fxam
popf
mov
ret
adc
mov
imul
push
add
pusha
ret
rcrb
scas
addl
and
pusha
xchg
fldenv
movsb
sbb
int3
das
xchg
dec
sub
fidivs
sbb
in
fsubrl
inc
xchg
clc
enter
lahf
push
add
and
push
sbb
fcomps
fstps
shlb
dec
xor
icebp
cmp
jnp
pop
ror
stos
out
popa
cld
push
outsb
or
pop
adc
dec
mov
enter
les
daa
jbe
mov
push
xchg
addr16
fisubrs
dec
cmp
sbb
jg
in
fcomip
jno
push
in
xchg
jmp
fisubrs
into
fisubrs
sbb
stc
cmp
in
test
enter
divb
push
icebp
lret
sarl
inc
pop
or
inc
test
jno
test
scas
inc
and
roll
dec
mov
lretw
scas
pusha
aad
insl
inc
mov
loopne
and
pop
xchg
jge
add
or
sarl
mov
push
mov
lds
cwtl
inc
add
add
xchg
stos
adc
cmc
pop
fwait
lods
inc
sbb
mov
popf
ret
mov
inc
inc
into
stos
inc
dec
call
push
insl
and
xchg
xchg
mov
or
je
jnp
lahf
xor
xchg
imul
test
xchg
add
into
mov
sub
hlt
add
fstl
stc
xor
icebp
call
pop
or
ret
xchg
mov
lret
aad
pop
movsb
xchg
stc
mov
xchg
cmp
push
fisubrl
mov
popf
in
xchg
sbb
xchg
repnz
jle
bound
jmp
jb
dec
push
imul
dec
jo
mov
cmp
sbb
push
xor
mov
mov
sub
outsl
stos
icebp
xchg
divb
add
mov
mov
add
dec
cmp
adc
cmp
or
scas
mov
out
mov
cltd
xchg
jb
or
mov
in
scas
mov
inc
xchg
jnp
mov
or
mov
jmp
push
mov
in
mov
lahf
push
bound
jno
std
cmp
xchg
js
test
xor
jns
arpl
inc
fisubl
dec
and
add
jb
cmp
jp
adc
inc
cld
xchg
inc
fsubl
push
lea
fsts
sbb
dec
das
sub
imul
rorl
xorb
xor
stc
sub
mov
movsb
daa
mov
or
pop
je
hlt
add
adc
dec
sbb
mov
mov
and
lahf
or
nop
es
xchg
mov
dec
push
lock
es
inc
aad
pop
int3
aaa
lret
pushf
rorl
mov
sub
mov
push
pop
orb
cli
adc
mov
mov
pop
imul
add
push
addr16
push
pushf
xor
sub
and
ret
jno
push
mov
cmp
scas
jl
cmp
xchg
jmp
xlat
push
jae
sub
mov
xchg
dec
adc
lods
dec
dec
mov
adc
loop
jmp
arpl
mov
cmp
add
lock
mov
xchg
xchg
imul
pop
jg
mov
inc
cltd
nop
icebp
shl
out
mov
fwait
add
outsl
aas
sub
xor
xor
fildl
add
movsb
int
xchg
jle
dec
adc
arpl
mov
imulb
push
int3
jmp
lea
adc
lock
xchg
das
push
pop
iret
adc
pop
mov
inc
addr16
or
scas
jo
or
sub
loop
stos
xchg
dec
ss
out
sahf
lods
das
hlt
mov
repnz
cmp
lods
test
mov
add
aaa
outsb
sbb
add
cmpsl
fnstsw
mov
xor
mov
fs
and
jle
out
outsl
inc
xor
pop
jmp
mov
icebp
push
xchg
add
mov
pop
xorb
decl
lea
mov
and
xor
icebp
fimull
add
xchg
