jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
aaa
xor
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
cmp
movl
in
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
adcl
inc
sbb
adc
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
pop
sub
or
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
adc
addb
sbb
add
add
or
lea
mov
add
mov
add
add
add
addb
push
inc
add
add
or
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
jge
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
or
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
xchg
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
stos
adc
ret
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
sbb
inc
add
cmp
je
mov
sbb
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
les
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
and
inc
add
lea
mov
and
inc
add
adc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
xor
add
add
push
push
call
test
js
lea
lea
int3
xor
rorb
xor
add
das
inc
add
pushf
mov
incl
add
add
jle
sbb
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
lcall
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
and
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
and
xor
inc
cmp
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
loop
inc
add
inc
and
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
fs
add
or
push
add
inc
and
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
and
inc
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
sbb
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
pushf
add
add
cmp
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
push
push
call
mov
add
stc
out
add
add
lcall
mov
xchg
mov
add
addr16
add
out
mov
in
faddl
test
jp
add
pushf
add
add
loop
jo
add
push
mov
add
push
push
push
call
pop
add
add
xchg
add
jae
add
add
fbld
add
pop
addb
lds
push
add
mov
ret
add
test
pop
sub
pop
popl
push
push
lea
push
push
push
call
pop
scas
add
shr
call
mov
cmpsb
add
in
add
add
add
cld
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
clc
add
int
pusha
fnsave
push
add
add
add
xchg
add
mov
scas
scas
fdivr
add
xchg
add
xchg
rol
add
test
add
mov
roll
add
addl
subb
test
scas
add
lods
add
scas
add
sub
pop
push
push
push
lea
push
push
call
addb
add
int
add
add
jns
jb
add
add
pop
add
into
add
jmp
leave
jae
shll
jecxz
movb
mov
lahf
jae
mov
add
lcall
call
push
push
push
call
int3
subl
rcrb
out
add
jl
cwtl
in
mov
add
mov
rclb
lcall
sbb
add
push
push
push
call
add
ret
fstp
jb
js
jnp
roll
loop
add
iret
push
leave
mov
push
xchg
mov
int3
add
xlat
add
mov
add
repnz
pop
push
add
add
add
add
lea
add
add
mov
mov
in
hlt
lcall
add
push
push
lea
push
lea
push
call
add
jae
jmp
add
jnp
test
int
in
jae
add
xchg
neg
add
add
sub
in
mov
add
sub
pop
call
push
push
push
push
lea
push
push
push
call
lret
add
add
mov
shl
xorl
xchg
out
add
pop
add
add
add
mov
in
in
lcall
pop
add
add
push
lea
push
push
push
push
call
cltd
imul
call
test
sti
add
lods
add
pushf
jnp
mov
imul
xchg
fadds
add
push
add
mov
add
mov
add
pop
mov
push
push
push
call
movl
add
add
idivl
add
add
repnz
jmp
add
push
mov
add
in
hlt
lcall
pop
hlt
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
addl
add
add
add
mov
add
add
push
ficomps
add
mov
fiadds
xchg
ljmp
add
add
add
add
jge
arpl
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
xchg
jae
faddl
loop
add
push
add
je
in
fadds
cmpsl
add
ret
mov
leave
jns
rcll
jge
les
add
add
xchg
add
add
add
push
sahf
push
add
mov
xlat
add
cmpsl
rcll
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
xlat
add
add
add
pop
mov
mov
add
outsl
push
mov
xlat
jne
lods
test
add
addl
mov
stos
mov
add
add
sti
add
add
loope
pop
add
add
roll
andb
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
insb
std
jge
add
add
imul
add
shl
cmpsl
pop
mov
call
cmc
add
push
add
add
mov
fcomps
sbb
push
push
call
hlt
add
js
xchg
data16
addl
jne
add
cmpsl
loop
add
mov
add
add
nop
roll
mov
aad
fs
pop
add
pop
add
pop
roll
jae
mov
add
add
js
in
clc
pop
add
push
push
lea
dec
push
and
add
lea
add
sub
inc
pop
shl
pop
push
push
push
push
push
lea
push
push
push
call
add
add
add
push
add
pop
pushf
add
out
add
popa
fldl
add
add
out
jp
add
into
les
mov
add
fcomps
add
add
cltd
pop
add
into
call
icebp
cwtl
add
movsl
add
xchg
pop
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
xlat
add
add
jmp
ja
add
jne
add
ja
add
fstps
add
add
mov
add
jb
add
jnp
add
in
fdivr
lcall
jp
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
scas
fldl
pop
push
lahf
pop
nop
push
mov
add
add
jbe
mov
imul
out
add
addl
add
lahf
jno
pop
fs
jno
faddl
mov
mov
add
stos
add
add
add
add
lcall
inc
lock
push
call
xchg
sti
mov
outsl
mov
pushf
scas
mov
add
push
je
cwtl
fcmovbe
cli
fidivrl
fldl
add
clc
pop
movl
push
push
push
push
push
call
jo
rcr
aad
mov
add
add
mov
mov
add
jo
pop
mov
add
mov
add
leave
add
xchg
mov
add
add
inc
call
and
xchg
push
push
call
add
push
add
add
add
jle
call
sbbb
add
pop
out
mov
add
pop
add
lret
add
faddl
int3
cltd
add
add
add
add
add
add
in
call
push
decb
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
outsl
cltd
mov
add
add
add
mov
add
jge
xlat
add
add
stos
add
iret
imul
add
stos
je
aad
popa
scas
add
add
add
add
in
fdivr
lcall
jne
push
push
push
call
lods
push
add
fwait
add
add
sarb
add
mov
mov
movsl
push
scas
add
fsubl
rolb
add
arpl
scas
jbe
jp
pushf
loopne
add
add
xchg
outsl
sub
pop
pushl
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
jp
cmpsb
mov
jmp
icebp
addb
jb
addb
jo
add
add
mull
mov
cwtl
scas
jnp
xchg
add
add
loope
push
add
add
mov
in
mov
stos
add
add
iret
mov
xchg
add
fldl
in
sub
pop
call
push
push
call
addb
call
add
out
xchg
add
out
lret
add
rolb
aam
lock
add
add
add
stc
pusha
jae
arpl
add
add
pop
add
push
push
clc
add
clc
sub
pop
pushl
push
push
push
push
push
push
push
call
add
arpl
xchg
cli
std
add
push
add
out
stos
out
add
push
add
mov
add
add
add
add
add
clc
movl
add
add
xchg
add
lcall
jmp
pop
sub
pop
pushl
call
push
push
rol
shl
push
or
not
add
shl
sub
sub
not
sub
xor
inc
pop
add
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
call
add
add
push
fstpt
add
pop
mov
arpl
roll
pop
add
mov
stos
rclb
add
pop
pushl
call
push
push
push
call
mov
stos
cli
add
add
push
add
add
add
add
xchg
rcr
icebp
shll
pop
add
je
out
add
jle
add
add
add
fwait
fs
pop
push
push
push
shl
push
or
not
add
lea
lea
sub
ror
not
pop
lea
xor
pop
push
push
push
lea
push
call
push
loope
jge
add
icebp
add
hlt
shl
xchg
add
add
add
add
lea
cmc
add
push
mov
add
aam
in
jge
add
test
fbld
lock
push
push
push
push
push
push
push
push
push
push
lea
push
push
call
xchg
add
add
add
les
sti
add
pop
mov
push
js
push
pop
shr
jno
push
jmp
gs
add
add
rorb
aas
inc
pop
add
repnz
push
call
test
xchg
add
fcoml
add
fstl
mov
scas
sahf
add
add
in
xchg
fadds
sub
pop
push
push
push
call
add
mov
xlat
sti
add
add
pop
data16
add
add
add
mov
add
pop
add
rcr
add
stc
push
lds
add
lods
jb
push
mov
andl
add
push
push
push
lea
push
push
push
call
cmc
ja
add
add
mov
pop
xchg
cmc
mov
add
pop
mov
add
push
addr16
add
add
pop
in
fninit
rcl
popa
pop
mov
loopne
add
add
mov
add
sahf
std
jo
filds
mov
mov
push
lea
push
push
lea
push
call
scas
scas
fldl
add
add
mov
add
les
add
add
jne
popa
add
lds
int
add
mov
out
insb
lahf
add
cltd
mov
insb
jbe
push
add
movsb
jp
add
add
jns
cmpsl
pop
jle
sti
mov
mov
jle
add
jo
lret
pop
add
jp
in
lock
add
add
push
push
push
push
lea
push
push
push
call
cmc
jl
add
add
loopne
add
cli
jo
js
add
add
xchg
cmpsl
jno
add
std
add
outsl
push
fcomp
jbe
hlt
cmpsl
jle
cld
popf
loope
mov
push
sub
pop
add
push
push
push
push
push
push
push
push
call
cmpsl
mov
scas
add
fistps
add
rcll
add
xchg
test
add
test
bound
popa
les
mov
movb
rolb
mov
lcall
xor
push
push
push
push
push
push
call
add
mov
ja
lea
add
nop
ljmp
add
add
add
mov
xlat
jbe
stc
bound
mov
add
lea
push
adc
add
add
push
cld
xchg
xchg
add
in
in
lcall
jne
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
lret
add
enter
jecxz
push
add
add
cmc
add
ret
leave
push
cltd
jbe
add
shr
iret
add
add
imul
add
test
fwait
jle
add
movb
mov
hlt
push
in
fcompl
inc
or
pop
jae
push
push
push
lea
push
push
call
add
add
popa
jl
stc
push
cli
addb
push
lahf
add
out
filds
mov
rcrl
mov
out
out
add
jmp
mov
add
mov
cld
rolb
in
call
in
in
lcall
add
push
lea
push
lea
push
push
push
lea
push
call
add
rclb
push
int
sahf
ffree
add
add
add
add
iret
lcall
rolb
add
add
push
push
push
push
lea
push
push
call
xchg
push
jo
mov
mov
add
add
xlat
add
add
push
xchg
pop
add
add
xchg
mov
jecxz
sti
add
test
stc
jl
add
ficompl
lcall
lock
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
lret
scas
add
mov
fnstenv
pop
add
jbe
add
add
sahf
add
aad
add
sarl
repnz
mov
mov
add
add
xchg
fmul
testl
jno
add
lcall
mov
xor
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
arpl
mov
add
movsb
shrb
notl
mov
add
jo
add
add
addb
jge
je
add
scas
jae
push
test
jbe
add
addb
jmp
scas
les
aam
add
sub
pop
push
mov
xor
push
push
push
lea
push
push
push
call
lret
push
sahf
add
test
jge
pop
add
add
fistl
add
add
add
mov
add
add
scas
add
mov
fwait
outsl
add
add
add
pusha
add
add
shrl
mov
lcall
enter
inc
push
push
push
lea
push
push
push
call
add
mov
add
add
fadds
faddl
add
ret
leave
popf
add
add
js
add
add
sub
pop
pop
push
push
call
test
add
add
add
icebp
add
loope
lret
lods
add
mov
add
fiadds
add
cmpsb
add
add
add
jne
add
clc
lcall
movsb
push
push
push
push
push
push
push
push
lea
push
push
call
shrb
in
add
cld
pusha
add
jno
scas
jle
pushf
bound
ljmp
add
xchg
add
add
cmc
push
mov
push
lds
aam
push
push
mov
addr16
roll
shr
mov
push
lds
jecxz
add
sti
mov
stos
add
mov
push
jmp
sub
pop
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
add
sbb
jge
add
add
addb
bound
add
add
iret
int3
jecxz
xchg
enter
fwait
test
add
test
add
test
add
add
test
add
roll
ja
jge
push
add
roll
in
fdivr
lcall
pop
in
push
push
lea
push
push
lea
push
call
add
add
add
push
add
mov
mov
mov
icebp
sarb
add
add
add
les
mov
mov
cltd
cltd
leave
jp
in
mov
add
enter
popf
jno
jne
roll
add
add
add
push
push
push
call
cld
add
xchg
add
jecxz
xlat
add
add
push
iret
add
push
cli
std
negl
lods
in
mov
add
xchg
sahf
add
repnz
add
lods
xchg
mov
add
aad
popl
add
sub
pop
mov
xor
push
push
push
call
lret
mov
ja
repnz
add
add
loop
fwait
int
jecxz
decb
add
add
scas
add
mov
icebp
add
jl
add
add
loopne
add
iret
test
loop
mov
loop
add
add
stos
test
add
jnp
add
pop
mov
xor
push
lea
push
push
push
push
call
add
add
add
stos
push
jmp
add
mov
jns
in
cli
jl
pop
testb
call
movb
mov
in
in
lcall
dec
sub
pop
jae
push
lea
push
push
push
push
call
les
mov
add
scas
movsl
fwait
addb
js
mov
add
push
in
stc
arpl
add
stos
add
mov
cmc
leave
add
mov
add
mov
out
mov
in
in
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
sahf
xlat
add
push
fyl2x
add
add
ja
nop
add
jmp
insb
rclb
roll
bound
cmc
test
stos
add
lcall
les
add
push
push
push
push
push
push
lea
push
call
incb
les
mov
add
add
cmpsb
add
movsl
add
imul
lds
int3
std
nop
add
add
add
add
jle
incb
add
fucomp
out
add
fdivs
sahf
add
add
in
in
lcall
ret
pop
push
push
call
mov
in
mov
mov
in
push
pop
jle
fisubl
push
call
aam
fcom
js
push
out
out
lock
je
enter
push
add
mov
pop
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
enter
ljmp
add
add
pushf
leave
mov
add
push
test
add
clc
push
int3
test
push
imul
add
sarl
add
add
mov
iret
mov
add
movsb
add
add
add
lcall
fsubrs
xchg
mov
push
ror
lea
not
push
or
inc
add
sub
not
rol
sub
inc
pop
ror
pop
push
lea
push
push
lea
push
call
mov
shll
cld
loop
test
jecxz
xchg
roll
fsubr
add
add
add
xchg
add
add
add
push
add
jo
add
cltd
add
scas
add
add
lock
pushl
call
push
lea
push
push
push
lea
push
call
mov
add
sahf
imul
test
add
cmp
pop
int3
add
add
std
rclb
pop
cld
int
test
in
pop
push
push
push
dec
add
shl
push
and
add
sub
sub
sub
pop
xor
pop
push
push
lea
push
push
push
push
call
rcr
add
in
ja
loopne
fldl
mov
add
add
std
negl
push
push
add
add
add
mov
jecxz
add
add
pushf
mov
jae
mov
jp
add
shrl
test
in
call
push
push
push
push
push
push
push
lea
push
call
add
mov
aad
fldl
add
add
add
movsl
add
lock
push
xlat
push
popl
jecxz
mov
aad
sahf
shlb
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
test
add
push
xchg
aam
xchg
add
mov
xchg
movb
pop
mov
test
rcl
add
mov
xchg
jecxz
add
add
lret
roll
add
add
lcall
rorb
push
push
lea
push
push
push
lea
push
call
add
mov
hlt
add
jmp
add
pop
fcmove
xchg
lds
pop
test
push
ljmp
shll
mov
xchg
add
add
stc
add
lcall
stc
hlt
cltd
xchg
lock
in
addl
sti
add
lahf
add
pop
push
push
push
push
push
lea
push
call
add
add
push
out
add
add
mov
add
pop
fld
pop
mov
incb
add
add
cmpsl
add
mov
add
and
jecxz
mov
shll
add
add
jmp
js
out
add
cwtl
mov
in
lock
lcall
pop
hlt
push
push
lea
push
push
push
push
push
push
push
push
call
push
xlat
loope
pop
sahf
test
testl
sahf
lods
add
add
pop
clc
add
fdivrs
add
fnsave
leave
add
frstor
mov
push
lret
popf
add
pop
in
push
push
call
mov
pushf
enter
add
add
add
add
int
sahf
add
into
jo
pushf
jl
rolb
add
add
add
add
popa
pop
fidivs
add
add
xchg
add
add
lahf
out
nop
add
add
scas
fcoml
pop
add
add
push
lea
push
push
push
lea
push
call
add
in
mov
jnp
jns
jne
lods
add
call
data16
xchg
add
add
pop
push
add
mov
enter
in
in
pop
mov
push
push
lea
push
push
push
push
call
add
scas
add
subb
add
add
addl
add
add
ret
add
sub
pop
xor
push
push
push
call
add
mov
push
add
je
add
fnstcw
rcr
ret
add
jae
movsl
add
ljmp
icebp
add
add
pop
mov
add
add
add
lcall
les
push
lea
push
push
push
push
lea
push
lea
push
call
jmp
pop
hlt
mov
imul
aam
xchg
add
add
fwait
pushf
add
jnp
lods
push
add
in
loop
push
pop
add
mov
add
lock
ret
mov
into
add
out
fisttpll
add
aad
add
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
nop
push
mov
out
add
les
hlt
push
enter
add
fs
push
adcb
jne
call
jns
testb
pop
mov
xor
push
lea
push
push
push
push
lea
push
call
push
push
pop
jmp
decb
mov
mov
lahf
add
add
add
add
clc
mov
mov
mov
add
add
lock
push
lea
push
push
push
push
push
push
lea
push
call
jb
pop
add
test
fstpl
push
mov
add
add
add
add
add
arpl
out
scas
cmpsl
mov
movl
add
add
add
shrb
mov
mov
add
mov
pop
scas
call
in
loopne
mov
xor
push
lea
ror
pop
rep
push
lea
sub
inc
pop
mov
xor
push
push
push
lea
push
push
push
lea
push
push
push
call
lea
cmc
add
popf
jmp
ljmp
add
leave
add
add
add
xchg
add
test
mov
fbld
add
jns
andl
fdivr
lcall
leave
je
push
shl
pop
mov
xor
push
sub
pop
mov
xor
push
push
call
mov
std
add
xchg
stos
pop
ljmp
add
jnp
scas
xchg
xchg
add
push
jae
add
mov
mov
xchg
mov
jle
sub
pop
add
push
pop
add
push
sub
inc
pop
push
mov
xor
push
lea
push
push
lea
push
call
add
roll
scas
roll
add
int3
add
lret
out
add
jbe
mov
out
int
add
clc
add
movsb
add
fisubl
add
faddl
jno
in
lock
lcall
lock
push
push
lea
push
push
push
lea
push
push
lea
push
call
popf
mov
mov
add
pop
jno
ret
add
mov
xchg
add
addb
add
jae
fiaddl
xchg
jle
lea
addb
add
mov
add
lret
push
insb
add
lcall
push
push
push
push
lea
push
push
call
sarb
add
jno
add
push
push
add
loopne
xchg
add
adc
adcb
push
mov
add
clc
push
cld
add
jecxz
mov
add
jmp
loope
lret
roll
add
mov
add
clc
fs
faddl
arpl
repnz
outsl
add
lcall
movsb
push
push
lea
push
push
push
call
cwtl
mov
icebp
lcall
lcall
jge
outsl
jne
add
shlb
call
addl
add
loope
fiaddl
adcl
into
add
in
mov
add
add
fisubs
scas
add
sbbl
jle
push
in
in
pop
mov
xor
push
push
lea
push
lea
push
push
lea
push
call
cltd
lods
mov
ljmp
cli
outsl
jmp
add
testl
push
roll
iret
mov
fsubp
frstor
imul
loop
pop
mov
hlt
subb
pop
xchg
mov
data16
movsl
js
xchg
sub
pop
or
je
push
pop
mov
add
push
push
lea
push
lea
push
push
push
push
call
arpl
add
mov
add
add
jae
in
aam
add
mov
add
xchg
jge
lea
pop
fnstcw
add
data16
jecxz
add
js
cmpsb
lock
ja
add
lcall
movb
add
rep
push
push
call
std
add
add
out
mov
add
int3
add
add
push
add
add
std
cltd
scas
add
test
movsb
add
iret
rcr
add
rorl
pushf
add
cmpb
je
push
sahf
in
fstps
stos
fs
cltd
add
pop
add
cli
lods
fsts
lcall
push
push
add
add
add
shr
push
sub
add
shl
ror
sub
not
xor
not
pop
xor
add
xor
pop
push
lea
push
push
lea
push
push
push
call
popl
iret
pop
add
mov
add
fadds
jmp
cltd
pushf
add
add
in
call
pop
push
xor
sub
lea
pop
mov
push
add
pop
mov
push
lea
push
call
add
insb
add
jae
fwait
rcrb
mov
cwtl
push
mov
fiadds
add
pop
add
test
fildl
lcall
add
cld
pop
aam
aam
add
add
add
add
ljmp
clc
lcall
inc
and
jmp
push
add
pop
push
push
ror
pop
mov
push
add
pop
add
push
inc
shr
shr
pop
push
push
push
shr
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jnp
test
add
popf
andb
mov
add
mov
leave
add
pop
jge
nop
in
add
lock
mov
popa
fldl
add
imul
add
loopne
in
test
add
jb
add
lcall
push
push
push
lea
push
push
push
lea
push
push
call
loope
push
add
mov
cli
add
mov
add
fiaddl
push
jns
out
add
imul
loopne
add
mov
cwtl
fwait
ja
je
je
ljmp
loopne
mov
pop
push
not
inc
rol
add
pop
pop
pop
push
push
push
push
push
lea
push
call
les
lret
les
push
add
cwtl
add
xchg
add
add
rolb
push
pop
movsb
add
sbbl
aad
add
shl
mov
add
add
jne
add
enter
add
ja
leave
lods
out
les
call
pop
push
push
push
push
push
push
lea
push
push
call
push
add
jecxz
stc
mov
add
cmc
add
add
mov
pop
fisubrs
mov
add
mov
int
mov
push
mov
mov
in
loopne
leave
ret
push
push
call
mov
test
jp
cmpsl
add
out
icebp
add
add
pop
add
xchg
xchg
cmpsl
test
testl
add
add
jnp
add
incb
add
std
add
clc
pop
push
push
add
add
pop
mov
add
push
lea
sub
pop
push
push
lea
shr
pop
push
push
push
rol
rol
pop
push
movl
push
lea
pop
addl
test
je
push
ror
pop
mov
pop
push
push
lea
push
push
push
call
xlat
sbbl
add
pop
imul
push
push
add
add
jae
add
add
cmpsl
add
xchg
add
jns
loope
fs
stos
int
add
add
les
add
fists
faddl
fidivl
out
flds
lea
add
sub
pop
pop
push
push
push
call
stos
pop
in
xchg
aad
in
xchg
clc
add
add
pop
add
lea
test
add
add
add
add
add
sub
pop
pop
push
shl
rol
pop
pop
leave
push
push
push
call
add
ljmp
ror
je
push
add
add
push
add
js
add
add
out
push
lret
hlt
jge
add
add
arpl
add
add
in
shlb
add
lcall
add
push
push
push
push
push
lea
push
push
push
lea
push
call
iret
add
int3
push
add
mov
test
add
add
add
add
testl
loop
add
add
fldl
pusha
loopne
stos
out
lods
add
add
xchg
push
ror
pop
mov
push
push
call
add
add
ficompl
in
add
cmc
mov
mov
stos
add
addl
mov
add
fwait
cmpsb
xchg
fwait
mov
push
loop
movsb
scas
mov
add
lcall
cld
push
shr
sub
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
scas
xchg
push
push
mov
add
add
push
add
ljmp
add
add
lcall
push
push
rol
pop
testl
push
push
push
call
add
mov
mov
add
add
pop
into
hlt
stc
test
add
hlt
cmpsb
lods
add
popa
xchg
rcrl
add
jmp
add
xchg
out
push
in
jl
mov
into
mov
out
in
lock
in
imul
add
stos
ret
sub
pop
addl
push
push
lea
push
push
push
push
push
push
push
call
add
add
xchg
fs
add
add
mov
xchg
add
mov
div
mov
push
add
push
fisubs
out
out
jo
test
mov
repnz
popa
mov
rolw
add
mov
call
pop
loopne
lea
push
push
push
call
sti
roll
add
add
push
int3
fdivrp
add
add
jmp
mov
fldcw
rcrb
add
popa
movsb
jmp
data16
add
add
mov
shlb
add
testl
pop
mov
push
sub
sub
ror
inc
pop
pushl
push
add
pop
push
push
lea
push
push
push
call
bound
add
out
add
add
xlat
mov
add
add
insb
add
add
add
scas
scas
add
lea
add
add
sub
in
lock
lcall
add
iret
inc
sub
shr
pop
call
push
push
push
push
lea
push
push
push
call
add
add
aad
std
call
jl
imul
mov
mov
jl
repnz
add
add
lcall
jge
add
test
call
jp
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
pop
movsl
in
roll
out
add
cmpsb
iret
iret
add
roll
loope
out
add
add
mov
mov
jecxz
jb
mov
add
pop
pop
push
ror
not
pop
pop
pop
push
rol
pop
pop
leave
push
push
push
push
push
lea
push
push
push
call
mov
xchg
add
in
add
mov
pushf
arpl
pop
loop
add
addb
mov
addl
mov
mov
movsl
push
fiaddl
test
add
xchg
mov
outsl
int
add
add
mov
jno
push
add
pop
ret
push
push
lea
push
push
push
push
push
push
lea
push
call
testb
imul
add
sbbl
jl
fldl
add
mov
add
addb
add
jmp
add
mov
add
mov
clc
imul
add
xchg
lcall
data16
call
js
lret
mov
add
scas
add
cwtl
add
sahf
sub
pop
push
push
lea
push
push
call
add
mov
roll
add
add
les
ffreep
mov
mov
icebp
add
popl
fildl
cli
call
add
add
lock
mov
ljmp
pop
mov
push
push
push
lea
push
lea
push
call
addr16
mov
cmpsl
mov
mov
mov
add
sbbb
add
loope
scas
add
add
into
aad
jne
enter
add
std
je
add
in
lcall
cld
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
jmp
scas
loop
sti
scas
lds
add
add
ljmp
add
xchg
mov
add
add
sub
pop
push
push
lea
inc
pop
push
push
push
push
push
call
rolb
mov
shl
mov
testl
lds
mov
add
lds
pushf
test
sahf
add
int
mov
add
pop
mov
flds
je
cld
test
add
add
add
jecxz
add
add
add
int
jecxz
add
pop
push
push
xor
not
pop
movl
push
push
inc
pop
call
push
push
push
push
push
push
lea
push
push
call
add
add
scas
jp
xchg
add
jecxz
add
imul
jl
add
add
fldt
xchg
add
loopne
test
add
add
add
test
test
add
xchg
add
push
cmpsb
call
add
jmp
bound
in
in
call
push
add
shl
rol
sub
pop
subl
push
shl
dec
pop
cmpl
jne
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
imul
add
stos
mov
lods
add
mov
movsb
leave
mov
scas
stos
iret
push
add
aad
add
negb
add
loopne
pop
pop
push
dec
pop
pop
push
lea
push
push
call
test
add
mov
mov
mov
fadds
icebp
add
roll
xchg
rolb
notb
push
xchg
add
mov
rolb
sub
pop
leave
ret
push
ror
add
ror
pop
push
push
not
pop
mov
push
lea
push
push
call
cwtl
add
add
fadds
lds
movl
add
add
jbe
add
imulb
sub
pop
add
push
push
call
stos
add
mov
loope
stos
mov
mov
cmc
into
addr16
call
add
lds
test
mov
testl
sub
pop
push
push
push
push
lea
push
lea
push
call
xchg
mov
add
ljmp
pushf
ljmp
push
loopne
add
repnz
add
add
bound
into
sub
pop
push
push
push
call
xchg
add
insb
add
push
lret
hlt
add
popl
add
lea
add
pop
pop
add
add
not
scas
in
mov
leave
jnp
add
mov
mov
jns
mov
xchg
lods
nop
sub
pop
push
push
add
ror
add
pop
push
push
sub
shr
pop
mov
push
push
push
call
add
cmc
mov
add
fcoms
add
mov
movb
lret
aad
mov
test
mov
add
in
hlt
pop
lea
push
push
push
push
lea
push
push
push
push
push
lea
push
call
je
add
hlt
add
addb
in
add
add
add
testb
out
xorl
pusha
pop
add
loope
add
mov
jecxz
loope
mov
stos
xchg
aad
jge
sub
pop
sub
push
push
push
lea
push
lea
push
push
push
call
cwtl
add
in
mov
jne
js
imul
cwtl
add
mov
pop
add
jns
scas
stos
mov
pushf
lcall
jo
ja
mov
pusha
jle
add
add
lods
mov
add
fwait
stos
fadds
add
lret
inc
pop
shr
push
push
push
push
lea
push
lea
push
push
push
push
call
stos
pop
push
sahf
mov
scas
add
add
add
in
out
enter
add
std
movsb
mov
push
pushf
in
add
add
mov
shll
add
out
mov
pop
add
mov
push
xor
dec
rol
pop
mov
add
push
lea
push
push
lea
push
push
push
push
call
add
add
add
test
add
jge
add
bound
fstl
movl
sub
pop
add
push
inc
shl
pop
mov
push
push
lea
push
push
push
call
add
flds
sarb
add
xchg
mov
aam
out
push
icebp
add
lret
loopne
add
jbe
mov
mov
pop
leave
add
add
add
imul
in
xchg
sub
pop
mov
push
add
rol
pop
cmp
jne
cmp
jne
push
push
call
add
add
outsl
mov
push
add
add
add
mov
jo
add
mov
add
push
loopne
push
add
add
add
lahf
add
add
add
add
add
bound
mov
sahf
add
lahf
add
pop
pop
mov
call
add
pop
mov
movl
push
push
push
push
push
push
lea
push
call
add
int3
add
cld
add
cmpsb
add
cli
add
adcl
push
mov
add
push
test
add
clc
iret
int3
pop
pop
lret
stc
sub
pop
jmp
push
rol
pop
mov
mov
push
xor
shl
pop
sub
jne
mov
push
rol
sub
pop
movl
push
sub
shr
pop
jmp
push
lea
push
lea
push
push
push
push
push
push
push
call
jo
add
cli
mov
cld
xchg
js
imul
add
add
push
iret
push
cli
add
pop
insb
mov
movsb
add
scas
cltd
add
sahf
pop
lock
stos
add
roll
int
jp
imul
pop
mov
push
lea
push
call
add
je
add
mov
add
add
loope
add
mov
mov
add
mov
push
out
push
add
add
add
cwtl
mov
add
in
mov
add
fcmovnbe
mov
enter
mov
xchg
mov
add
jmp
add
xchg
add
loopne
push
mov
movb
pop
mov
push
lea
push
push
lea
push
call
mov
leave
add
loope
add
je
lcall
xchg
mov
add
add
add
push
into
add
add
jne
int3
add
add
add
add
mov
lock
cmp
jne
push
push
lea
push
push
push
push
push
push
call
xlat
add
stc
sahf
mov
lcall
add
pop
push
add
add
add
orl
divb
in
gs
test
pushf
mov
lds
add
sub
pop
mov
push
dec
add
dec
pop
movl
jmp
push
shl
inc
ror
not
pop
mov
push
push
lea
push
push
push
push
push
call
mov
add
mov
add
test
cmpsb
add
mov
mov
stos
mov
out
fld
mov
test
fadds
jl
add
mov
pop
add
leave
test
add
popf
popf
enter
mov
add
std
add
lcall
cmpl
jne
mov
push
dec
pop
movl
push
inc
xor
add
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
jbe
js
mov
jo
pop
mov
xchg
fnstenv
stos
mov
aad
int
add
pop
lods
xchg
ja
pop
add
add
mov
add
mov
lahf
add
jns
out
add
pop
jecxz
add
mov
add
push
imul
icebp
sub
pop
pushl
push
xor
shr
pop
pop
push
rol
pop
mov
mov
push
add
pop
mov
push
push
add
rol
add
push
or
inc
add
dec
shr
sub
sub
rol
add
rol
shl
pop
add
pop
push
push
push
lea
push
push
push
call
add
mov
add
ret
pop
movb
fildll
jecxz
xchg
stc
add
in
mov
popa
jae
add
push
sti
stos
add
data16
jp
add
lcall
push
ror
sub
shl
dec
pop
call
cmpl
je
push
push
not
ror
push
push
pop
add
add
shr
inc
sub
rol
shl
dec
not
pop
dec
sub
xor
pop
push
push
call
add
jge
outsl
add
add
add
imul
add
rcl
ret
add
lods
loop
add
add
int3
js
add
mov
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
roll
out
add
pop
test
jae
in
jge
mov
push
js
pop
add
add
jmp
add
mov
fnstenv
add
js
test
add
add
add
add
push
mov
jmp
in
in
call
push
lea
push
push
push
lea
push
call
repnz
xorl
add
les
lret
add
add
mov
in
add
add
test
pop
jge
jb
fs
push
into
in
xchg
int
add
lcall
js
int3
fldz
ret
lret
or
add
andl
add
push
and
add
dec
xor
sub
sub
sub
pop
dec
sub
pop
push
push
push
push
push
push
call
add
gs
in
push
enter
add
icebp
aad
mov
mov
add
add
add
add
mov
jecxz
add
incb
out
xchg
jmp
loopne
add
mov
negb
mov
out
mov
movb
xchg
add
add
add
push
ror
rol
pop
call
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
lds
lock
rcrb
movsl
data16
test
out
push
add
add
add
mov
xchg
xchg
add
add
add
add
cld
add
nop
aam
add
in
out
pushf
add
add
xchg
mov
in
loopne
lcall
js
int3
fldz
ret
cmpsl
pop
add
push
push
shl
push
push
pop
add
add
sub
not
add
rol
pop
add
pop
push
sub
xor
add
rol
pop
push
push
push
push
lea
push
push
call
add
ja
int
add
add
popl
mov
imul
add
hlt
add
shr
pop
push
add
stc
add
jo
pop
loop
pushf
pop
add
add
push
fwait
lods
pop
add
add
mov
cltd
sub
pop
call
push
xor
add
pop
cmpl
je
push
push
add
shl
push
and
add
sub
sub
sub
shl
dec
pop
sub
lea
pop
push
lea
push
lea
push
push
push
lea
push
call
add
jns
add
mov
add
stos
add
mov
loope
mov
adcb
roll
pop
mov
rclb
mov
sarl
je
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
call
into
outsl
repnz
push
lret
stc
lcall
stos
add
push
xchg
add
je
push
cmc
in
add
pop
out
mov
add
add
std
add
xchg
jns
subb
lds
jmp
pop
add
mov
xchg
add
inc
xor
imul
push
shrl
inc
jnp
call
add
in
xchg
push
add
hlt
lahf
mov
add
add
add
add
enter
add
mov
mov
ret
test
hlt
lcall
cmp
rol
je
push
push
sub
sub
push
push
pop
add
lea
shl
sub
add
add
pop
inc
rol
ror
pop
push
sub
add
pop
push
call
push
xor
pop
cmpl
je
push
push
not
rol
push
and
add
add
sub
sub
shl
rol
sub
pop
add
add
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
fs
add
xchg
testl
loope
add
xchg
add
add
cwtl
add
mov
lahf
mov
mov
in
loopne
push
call
push
push
push
push
lea
push
push
push
lea
push
call
fnstenv
stc
popa
into
icebp
imul
push
add
fstps
sarl
add
bound
test
out
add
repnz
add
add
add
xorl
add
mov
fxtract
cld
call
scas
add
in
add
add
mov
pop
cmpl
je
push
push
dec
dec
sub
push
push
pop
add
dec
sub
ror
pop
inc
pop
push
not
xor
pop
push
push
rol
add
inc
pop
call
push
lea
push
push
push
lea
push
lea
push
call
scas
jbe
fstps
add
add
movsl
adcl
rolb
add
xchg
fstps
add
roll
sahf
mov
out
add
jbe
sub
pop
cmpl
je
push
push
sub
ror
push
xor
add
sub
sub
add
shr
pop
shl
dec
xor
pop
push
add
shl
shl
pop
push
call
push
not
inc
pop
cmpl
je
push
push
dec
push
and
add
lea
sub
xor
sub
pop
add
add
pop
push
add
pop
push
push
dec
sub
pop
call
push
not
xor
dec
shl
pop
cmpl
je
push
push
add
push
or
not
add
sub
sub
lea
ror
sub
pop
sub
pop
push
push
lea
push
push
push
call
pop
jb
pushf
ja
ja
pop
mov
rcl
add
rcl
add
les
add
mov
roll
add
add
xchg
cmpsl
push
scas
lea
add
add
push
pushf
add
je
test
sti
add
mov
add
sub
pop
push
push
add
pop
call
push
ror
inc
rol
pop
cmpl
je
push
push
shr
sub
push
and
add
not
rol
sub
shr
add
add
ror
pop
lea
inc
not
rol
pop
push
push
push
call
testb
mov
add
fsubrp
add
add
xchg
imul
mov
push
fsubr
loopne
test
xchg
add
xchg
testb
add
out
add
add
hlt
int3
aam
scas
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
xchg
jo
add
lcall
test
scas
out
pop
ret
xchg
mov
out
gs
loopne
push
jae
popf
in
je
jne
fisubl
xchg
push
add
rcr
in
in
lcall
xchg
xor
add
sub
add
pop
cmpl
je
push
push
add
push
and
add
rol
sub
sub
pop
sub
pop
push
push
push
lea
push
lea
push
lea
push
call
subb
add
push
add
shl
add
jp
fadds
add
add
add
add
add
xchg
in
mov
mov
xchg
add
mov
jecxz
clc
add
add
loope
add
popa
add
add
cwtl
fcomp
push
lcall
call
push
lea
push
push
push
call
xchg
js
mov
add
call
add
popa
sarb
push
add
roll
shll
scas
fmulp
ror
add
popf
mov
rolb
mov
test
pop
add
rcl
addb
out
mov
popa
add
jge
shlb
mov
in
lock
lcall
js
xor
pop
ret
xchg
add
mov
push
lea
pop
movl
push
push
call
add
add
loope
mov
stos
add
mov
add
cltd
cli
orl
add
gs
add
add
xchg
add
push
mov
lcall
push
nop
push
mov
jae
add
arpl
jae
add
lahf
in
add
lcall
or
add
push
sub
pop
xor
push
add
pop
pop
pop
push
lea
push
push
call
add
mov
lods
mov
add
add
add
loope
add
push
out
loopne
add
flds
xchg
push
stos
add
mov
push
add
lret
stc
jp
add
fnsave
add
mov
add
popf
stc
popa
add
add
push
add
mov
mov
sub
pop
pop
push
shl
pop
pop
leave
push
dec
pop
ret
push
push
push
push
push
lea
push
call
mov
lds
add
add
add
shlb
mov
aam
mov
add
add
push
add
add
in
mov
popf
out
push
add
popl
in
push
sub
pop
add
push
shl
sub
pop
cmpl
jne
push
push
shl
push
sub
add
ror
sub
inc
pop
sub
sub
add
pop
push
lea
inc
pop
pushl
push
rol
pop
call
push
push
push
call
add
pop
imul
push
test
movsb
rolb
leave
xchg
add
push
add
add
add
jp
add
jecxz
nop
xchg
add
mov
add
out
std
repnz
loopne
lea
lock
add
mov
into
mov
add
add
add
call
push
push
push
push
push
call
add
push
mov
jae
loop
aam
add
hlt
mov
add
stos
ja
ljmp
fimuls
lcall
sbbl
add
test
add
push
push
call
jae
mov
cmpsl
xlat
into
add
pop
shrl
jmp
rcll
add
icebp
mov
sar
pop
add
icebp
add
clc
pop
cmpl
jne
push
lea
pop
leave
add
push
add
xor
add
pop
pop
push
lea
push
lea
push
push
push
call
push
add
jbe
push
mov
repnz
leave
mov
pop
and
add
rolb
add
cwtl
add
add
cmc
xchg
insb
add
xchg
add
sti
jp
add
mov
xchg
add
pop
add
fisubrs
pushf
repnz
fs
add
test
pop
jbe
in
in
lcall
push
inc
pop
pop
push
xor
dec
sub
pop
pop
leave
push
shr
pop
add
ret
push
sub
pop
jmp
cmpl
jne
push
push
push
or
not
add
sub
sub
pop
shl
pop
push
push
call
add
mov
fdiv
scas
cmpsl
mov
lods
mov
add
sarl
push
add
imul
add
add
mov
fs
add
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
loop
add
add
iret
mov
push
rcl
mov
mov
add
add
add
out
pop
add
faddl
xchg
insb
push
xchg
add
out
out
movsb
mov
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
imul
addr16
xchg
testl
add
add
add
add
pop
int3
add
fiadds
add
ljmp
add
lcall
add
call
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
pop
into
rcl
test
addb
mov
cwtl
add
add
rcrl
lds
mov
mov
pop
mov
add
add
mov
int3
add
int
loopne
icebp
nop
add
mov
add
add
insb
add
add
add
sub
pop
jmp
push
push
push
push
push
push
lea
push
push
lea
push
push
call
hlt
lret
add
sbbb
je
add
cmpsb
ljmp
mov
add
addb
add
roll
shrb
mov
sub
pop
cmpl
jne
push
lea
push
push
push
lea
push
push
push
push
push
push
call
push
mov
jecxz
jl
jmp
add
add
adc
add
add
add
pop
test
shlb
add
add
xchg
add
add
jno
add
sarl
sub
pop
mov
mov
push
not
inc
pop
jmp
push
push
push
shl
add
push
or
not
add
add
add
shr
sub
sub
add
inc
pop
xor
sub
pop
push
lea
push
call
mov
imul
add
mov
add
mov
jge
mov
add
add
add
lahf
add
jae
addb
cli
std
xchg
js
add
add
lcall
jne
call
push
sub
inc
pop
call
push
push
lea
push
or
not
add
lea
lea
sub
not
xor
pop
inc
pop
push
rol
add
xor
pop
pushl
call
push
pop
call
push
push
add
lea
inc
push
or
not
add
not
sub
ror
add
add
pop
ror
inc
inc
pop
push
sub
ror
not
pop
pushl
push
push
push
call
fldl
test
aam
add
nop
stc
lret
rcll
add
xchg
add
add
add
shlb
mov
add
add
add
add
jbe
add
sub
pop
call
push
push
call
addr16
xchg
push
call
leave
jb
pop
jne
stc
pop
push
clc
mov
add
xchg
mov
add
add
fs
add
push
outsl
add
pop
call
push
push
dec
push
push
pop
add
shr
sub
sub
dec
add
xor
dec
pop
shl
rol
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
lods
addr16
cwtl
testl
in
enter
push
jl
aam
cmpsb
and
cmpb
rol
repnz
add
push
out
add
rolb
fsts
xchg
sti
add
jb
lahf
out
xchg
add
mov
jbe
add
lcall
jne
call
push
lea
push
call
mov
out
int3
add
pop
add
add
xchg
jo
add
mov
icebp
add
add
add
add
jo
movsb
mov
out
test
jecxz
add
icebp
roll
add
mov
roll
mov
sti
imul
add
add
sahf
sub
pop
call
push
push
inc
push
sub
add
add
sub
shr
sub
rol
inc
pop
shl
dec
pop
push
rol
not
add
shl
pop
pushl
push
push
call
je
add
bound
push
je
add
stc
ljmp
pop
test
jo
add
add
add
jb
add
ljmp
add
jge
add
sub
pop
call
push
push
push
push
call
cmpsl
add
jno
lods
lods
imul
add
add
xchg
rol
push
xchg
popf
add
leave
les
fldl
test
add
xchg
add
clc
mov
lock
push
test
add
shrb
add
in
lock
lcall
shrb
call
rolb
or
inc
add
not
sub
dec
rol
xor
pop
inc
lea
pop
push
push
call
fisubrl
ret
iret
mov
add
and
rorb
hlt
jbe
mov
jecxz
in
add
pop
add
sub
pop
pushl
push
sub
not
pop
call
push
push
lea
push
lea
push
push
push
call
add
jo
add
test
add
add
into
pop
add
lcall
add
add
jmp
fistpll
add
push
imul
in
call
call
push
push
add
push
xor
add
dec
shl
shr
ror
sub
pop
shr
xor
pop
push
sub
pop
pushl
push
inc
sub
shr
pop
call
call
push
push
push
and
add
lea
sub
add
add
pop
ror
sub
sub
pop
push
not
pop
pushl
push
push
push
call
push
ja
xchg
add
imul
out
add
add
call
cmpsb
add
mov
add
std
add
test
pushf
sub
pop
call
call
push
push
ror
xor
dec
push
or
not
add
sub
not
lea
sub
sub
sub
pop
sub
pop
push
dec
sub
rol
pop
pushl
call
push
pop
call
push
push
add
lea
ror
push
push
pop
add
not
not
sub
sub
shr
not
pop
shr
not
shl
pop
push
pop
pushl
push
add
not
sub
pop
call
push
not
shl
inc
rol
pop
lea
push
not
shr
sub
pop
push
push
add
pop
call
push
push
dec
inc
lea
push
or
not
add
add
sub
sub
inc
shr
dec
inc
pop
dec
pop
push
shr
shl
inc
rol
pop
pushl
push
shl
add
pop
call
push
rol
ror
pop
call
push
push
lea
push
push
pop
add
xor
sub
sub
pop
inc
not
pop
push
push
push
lea
push
push
lea
push
call
xchg
rclb
mov
add
add
push
shlb
shr
mov
pop
div
js
roll
jmp
add
mov
call
push
ror
pop
call
push
push
call
add
into
add
in
shl
add
stos
add
add
add
js
add
sarb
test
fsubr
add
shll
jmp
cmpb
out
imul
test
std
add
add
pop
mov
push
popl
shrb
dec
imul
push
roll
add
arpl
ret
add
sub
shr
inc
pop
add
ror
pop
push
lea
push
push
push
lea
push
push
push
push
call
movsl
cld
add
add
shrb
add
ret
add
fsubrs
je
add
add
jmp
add
icebp
and
mov
add
hlt
add
popa
add
add
out
gs
icebp
add
add
je
movb
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
add
je
add
mov
mov
insb
lock
lret
fwait
push
flds
add
add
push
mov
add
add
jmp
xchg
jae
hlt
mov
ror
push
cltd
testb
add
mov
fcompl
rorb
ljmp
outsb
mov
rol
push
or
not
add
not
lea
lea
sub
shl
inc
pop
shl
pop
push
shr
ror
rol
pop
pushl
push
sub
sub
pop
call
push
push
push
call
add
push
rcr
add
push
popa
add
stos
negb
xchg
cwtl
cld
xchg
mov
add
fiadds
add
in
int3
fs
mov
add
push
in
add
out
rclb
lcall
call
push
push
shl
add
push
or
not
add
dec
sub
sub
pop
sub
ror
ror
pop
push
inc
pop
pushl
push
push
push
push
lea
push
lea
push
call
add
in
add
xorl
icebp
add
mov
test
jbe
popf
mov
add
add
ret
mov
imul
mov
call
call
push
xor
shl
sub
pop
mov
push
push
inc
sub
push
sub
add
shl
sub
sub
inc
dec
pop
rol
pop
push
lea
push
lea
push
push
call
arpl
jbe
cmpsb
add
enter
add
add
xchg
int3
add
jae
add
add
push
loope
sti
pop
mov
pushl
call
push
shl
pop
push
pushl
push
inc
ror
pop
call
push
push
sub
sub
sub
push
push
pop
add
add
inc
shl
shr
sub
shl
pop
sub
shl
pop
push
push
push
lea
push
call
mov
add
mov
mov
lahf
mov
add
mov
imul
int3
ljmp
add
jl
add
in
lock
pushl
call
push
push
sub
push
and
add
shr
shr
sub
dec
xor
pop
add
pop
push
push
sub
not
push
and
add
sub
sub
ror
shr
pop
shl
pop
push
dec
rol
lea
pop
call
push
push
add
push
sub
add
add
add
ror
sub
dec
ror
pop
add
pop
push
xor
pop
pushl
call
push
push
push
push
lea
push
call
add
aam
js
add
fdivrs
std
sti
enter
add
cmpsb
test
mov
lods
jge
add
fucompp
lods
mov
add
add
pop
add
lock
push
loope
sub
pop
mov
push
add
dec
sub
pop
lea
lea
push
add
shr
pop
push
push
pop
push
push
not
sub
pop
push
push
push
call
add
scas
lret
lret
loopne
fcomi
roll
jns
movsl
enter
add
test
add
add
scas
pop
add
scas
push
add
pop
push
push
push
call
add
lret
push
jecxz
lret
enter
add
add
clc
add
scas
add
xchg
add
repnz
add
add
add
fists
mov
cld
fists
fdivl
lea
add
ja
fwait
scas
xchg
pop
into
jb
push
add
add
add
test
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
xchg
add
cltd
roll
repnz
add
add
push
lret
push
add
out
add
in
add
add
jp
outsl
add
ret
out
jle
xchg
imulb
js
sahf
js
loope
les
mov
test
int
add
out
mov
push
add
add
mov
mov
push
push
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
insb
add
data16
pop
add
add
xchg
mov
add
jl
arpl
jne
mov
add
add
popf
popa
xchg
mov
test
add
cli
testl
xor
lahf
pop
rorl
push
call
add
add
mov
add
add
add
cmp
mov
loopne
std
xorl
add
add
add
add
sub
pop
push
push
ror
pop
call
push
push
inc
rol
push
push
pop
add
lea
not
sub
shr
pop
dec
xor
rol
pop
push
ror
not
pop
pushl
call
push
lea
push
push
push
push
push
call
mov
pusha
add
mov
xchg
add
mov
add
cmpsb
scas
add
popa
jno
add
push
jl
cli
pop
roll
pop
xchg
pop
call
sub
pop
call
mov
push
push
lea
push
lea
push
call
jl
xchg
add
fldenv
pop
stos
nop
pop
insb
mov
bnd
add
mov
lds
popf
add
add
push
add
jo
add
add
scas
mov
add
jmp
lock
lcall
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
xchg
shrb
mov
push
pop
fdivrs
cld
cli
xchg
stc
add
add
mov
add
arpl
icebp
add
add
jns
int
xorb
fiadds
mov
sub
pop
dec
jne
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
sti
add
add
add
lock
shl
xchg
add
mov
jo
add
in
jbe
add
mov
mov
rol
popa
jne
jae
sub
pop
call
push
push
shr
push
xor
add
shl
shr
lea
dec
sub
sub
pop
xor
xor
pop
push
lea
push
push
push
push
push
call
fwait
fwait
push
fiaddl
fwait
lret
lods
add
xchg
add
add
out
cwtl
add
add
lods
pop
xchg
pop
add
int
fs
popf
fimuls
jle
imulb
movsb
add
add
mov
aad
add
push
mov
movsl
add
lret
les
add
pop
pushl
call
push
push
push
push
call
push
xchg
add
lods
xchg
add
add
add
add
out
mov
jl
imul
add
stos
pop
add
add
add
add
test
repnz
add
jbe
in
sub
pop
push
push
sub
inc
lea
xor
pop
call
mov
push
sub
inc
pop
lea
push
push
rol
push
xor
add
sub
sub
not
sub
xor
pop
xor
pop
push
lea
push
push
lea
push
call
sti
out
test
add
add
add
mov
add
add
hlt
addb
jo
pushf
add
imul
data16
pusha
imul
cltd
add
scas
fildl
add
jge
sub
pop
pushl
push
lea
not
sub
dec
pop
call
push
pop
push
call
push
push
shr
ror
xor
push
xor
add
rol
inc
dec
sub
rol
sub
pop
xor
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
aad
add
icebp
loope
add
add
cmpsl
mov
add
std
addl
cli
push
lods
jb
add
jl
je
add
add
orb
add
loopne
out
lods
pop
imul
fsubr
outsl
imul
stc
out
add
sbb
in
fdivr
lcall
jne
push
not
inc
pop
call
call
push
push
push
push
push
push
call
add
add
add
sarl
add
call
outsl
mov
addl
add
je
add
add
add
push
add
lcall
add
add
mov
jns
in
call
lea
push
push
dec
rol
push
or
not
add
add
shl
sub
shl
not
add
pop
inc
pop
push
push
push
push
lea
push
push
push
push
call
fiadds
nop
add
add
add
mov
decb
lahf
add
add
push
add
pushl
push
pop
call
push
push
call
in
add
js
mov
add
add
enter
add
mov
mov
xchg
in
add
push
mov
jbe
stos
ljmp
add
push
add
add
icebp
addr16
negl
cmpsb
mov
mov
in
add
add
in
clc
lcall
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
arpl
pop
mov
repnz
mov
je
add
imul
xchg
add
mov
pop
loope
add
jns
mov
add
out
add
mov
fdivr
lcall
push
shl
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
jmp
add
add
lret
add
test
push
add
in
add
fwait
cmp
in
fdivr
lcall
add
xor
xor
pop
pushl
push
push
lea
lea
push
and
add
lea
inc
not
xor
sub
add
ror
pop
sub
lea
pop
push
push
push
lea
push
push
push
call
enter
filds
add
add
scas
mov
mov
mov
add
fiadds
imul
add
add
add
mov
add
cld
call
push
jns
cmc
mov
add
xchg
int
cmpsl
add
add
leave
pop
std
mov
add
xchg
sub
pop
push
call
push
push
ror
not
inc
push
or
inc
add
shl
sub
add
pop
ror
shr
sub
pop
push
lea
push
push
push
push
push
push
push
push
push
call
arpl
popa
in
rorl
mov
shrl
lret
add
fiaddl
fcomip
add
add
add
mov
xchg
add
imul
add
cltd
mov
add
add
cmpsl
add
cmc
sub
pop
pushl
push
push
push
push
push
call
xchg
push
add
add
insb
add
lock
stos
add
lret
filds
ljmp
add
fucomi
add
fistpll
mov
mov
add
lret
add
add
add
into
popa
sub
pop
call
push
lea
push
push
push
call
add
add
add
fdivl
mov
xchg
push
mov
add
add
rolb
pop
add
add
add
mov
aam
add
jmp
out
xchg
add
call
pusha
push
push
stc
lea
push
lea
push
lea
push
push
push
lea
push
push
call
jl
jno
add
pop
add
pop
mov
call
mov
add
jne
add
sub
pop
call
push
push
add
sub
not
push
xor
add
ror
inc
rol
sub
lea
not
pop
inc
pop
push
rol
rol
ror
pop
pushl
call
push
add
pop
call
jmp
push
ror
rol
pop
pushl
push
push
call
add
mov
add
rcl
pushf
rorb
loop
add
add
mov
mov
add
test
add
popf
aam
sub
pop
mov
push
add
pop
jmp
push
push
shl
push
or
inc
add
dec
sub
dec
xor
pop
xor
pop
push
sub
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
push
call
add
add
add
cli
addb
add
roll
scas
outsl
add
add
gs
outsl
fiaddl
aam
add
lods
mov
add
xchg
add
add
add
shrb
fcmove
xlat
push
lea
inc
push
xor
add
ror
ror
sub
add
sub
add
rol
xor
pop
ror
xor
pop
push
dec
sub
shl
pop
pushl
push
lea
add
shl
shl
pop
call
push
shr
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
divb
cmc
cld
add
add
imul
mov
add
jle
add
jno
in
fcomps
ror
push
dec
add
sub
lea
pop
add
push
sub
add
pop
pop
push
add
sub
pop
pop
push
ror
dec
pop
pop
push
not
pop
pop
push
push
lea
push
push
call
pop
add
lret
add
test
push
add
add
fnstenv
std
lahf
mov
lds
add
nop
push
mov
mov
push
add
cli
loop
aad
add
mov
add
add
add
stc
xchg
add
incb
sub
pop
leave
push
push
lea
push
push
push
push
push
call
add
pop
push
les
add
rolb
add
add
ror
mov
pop
mov
cmpsb
insb
mov
lods
addr16
mov
mov
push
repnz
jo
repnz
loope
jge
push
stc
add
testl
jmp
xchg
add
sub
pop
add
push
push
push
call
jl
add
add
out
lahf
gs
outsl
sahf
add
clc
mov
mov
mov
je
add
add
mov
xchg
mov
add
addb
push
ret
push
push
push
lea
push
push
push
call
ja
mov
jbe
in
add
filds
add
add
into
mov
stc
bound
loope
fcmovnu
add
push
outsl
ljmp
fcomip
add
xchg
imul
pop
leave
ret
push
push
lea
push
push
push
push
push
call
lods
add
aad
add
ret
add
retw
testl
popa
out
aam
add
test
cli
add
shll
xlat
jmp
add
cmc
push
out
add
out
add
add
mov
add
mov
lcall
push
ror
add
pop
mov
cmpl
jne
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
add
add
jb
xchg
add
arpl
std
add
aam
pusha
add
mov
add
add
sti
add
mov
pop
mov
jmp
push
push
push
push
push
push
push
call
gs
add
loopne
add
xchg
mov
add
cltd
fstpl
add
add
shll
ror
lretw
push
add
cmpb
lret
fadds
mov
mov
add
add
add
movsb
add
mov
test
in
mov
push
shl
pop
and
push
push
push
push
push
push
call
push
in
mov
out
test
add
cmp
mov
out
mov
sti
test
add
jae
add
in
xlat
mov
add
sub
pop
xor
push
lea
push
call
pop
add
movb
mov
arpl
insb
mov
addl
mov
push
add
fmull
hlt
add
shrb
add
add
add
pop
add
movsb
rolb
add
lea
in
add
insb
popa
rcrb
push
mov
add
lcall
push
pop
sub
sub
xchg
push
call
in
add
cld
add
lea
push
mov
add
stos
add
ljmp
imul
add
icebp
add
test
add
xchg
testb
add
addl
lods
je
loop
add
xchg
cli
sub
pop
add
push
lea
push
push
push
push
push
call
add
je
enter
pop
in
jne
testb
add
add
add
mov
out
add
jmp
movsb
add
je
add
mov
mov
pop
add
incb
addb
add
popf
fimull
lcall
dec
call
push
cld
push
push
push
push
push
call
mov
std
add
add
add
add
pushf
lahf
add
fsubs
cld
add
add
add
mov
add
add
stos
xorb
add
add
in
call
dec
sub
push
ror
not
add
pop
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
ret
movsb
les
add
pop
xchg
call
enter
arpl
add
add
movsb
lret
cld
add
lahf
add
push
fstpt
mov
add
sahf
in
add
add
add
aad
add
int
aad
add
sub
pop
sub
push
add
pop
pushl
push
add
pop
pop
push
shl
shl
lea
pop
sub
cmp
jne
push
sub
ror
pop
mov
lea
push
not
sub
pop
sub
push
inc
ror
dec
pop
mov
push
shl
pop
shr
add
push
pop
sub
push
rol
pop
pushl
push
add
sub
pop
pop
shr
push
sub
lea
pop
and
push
shl
not
sub
shl
pop
sub
push
push
push
call
test
mov
add
push
test
pop
sbbl
mov
cltd
je
add
add
mov
add
push
xchg
lds
popf
add
add
popf
icebp
add
xlat
pop
xchg
out
loope
add
add
insb
add
lods
add
stc
sbb
test
cld
dec
push
push
push
push
call
mov
fsts
pop
fwait
mov
add
add
add
add
loope
add
add
mov
jle
mov
jo
faddl
stos
add
fnstcw
add
pop
add
lret
add
hlt
in
popl
add
add
add
add
jae
sub
pop
ret
push
shr
shl
pop
push
push
lea
push
push
push
lea
push
push
push
call
push
add
mov
add
fldl
popf
add
add
mov
pusha
add
cld
jmp
cltd
movsl
enter
lahf
add
add
cld
stc
xchg
lea
add
cltd
push
add
xchg
add
rolb
rolb
lods
push
pushf
ja
rolb
lcall
in
push
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
loop
mov
outsl
add
add
fnstcw
add
push
xchg
mov
lret
subl
xchg
add
add
push
loope
add
jns
rolb
ljmp
add
add
add
lds
popa
test
add
arpl
in
sub
pop
push
push
push
add
ror
pop
push
push
push
add
dec
dec
shr
pop
push
mov
push
lea
push
lea
push
push
push
call
je
add
mov
cld
jae
imul
xchg
test
movl
mov
test
add
add
xchg
movb
mov
xchg
incb
fldl
in
pop
lea
sub
push
sub
pop
mov
push
pop
shr
add
push
push
call
lock
add
add
add
jp
out
add
add
push
popf
add
jmp
fld
add
out
xchg
jne
test
sub
pop
mov
push
not
pop
add
mov
push
push
lea
push
push
push
push
lea
push
call
outsl
movsb
flds
xchg
outsl
add
fistpll
std
ja
jnp
std
mov
jmp
push
lahf
aam
add
data16
push
loope
add
loop
ja
add
add
stos
stos
stos
add
pop
mov
add
xchg
mov
aad
sub
pop
add
xor
push
xor
pop
mov
and
push
push
lea
push
push
push
lea
push
push
push
push
call
popa
loopne
xchg
stos
pop
add
cwtl
jecxz
add
movl
movl
add
pop
mov
mov
add
add
add
add
add
stos
add
add
lahf
ljmp
loope
cmpsl
test
lods
pusha
popa
mov
mov
xchg
insb
jmp
imul
add
incb
roll
pop
rol
push
sub
rol
pop
rol
push
push
lea
push
push
lea
push
push
push
push
push
call
sahf
add
add
jae
mov
add
mov
frndint
add
pop
add
fdivr
lcall
add
ror
xor
add
pop
cmpb
jne
add
push
dec
pop
cmp
je
push
push
call
addr16
icebp
pop
add
rcl
add
ja
leave
jo
faddl
add
mov
add
hlt
mov
notb
fs
jge
mov
hlt
shl
iret
js
movl
clc
lcall
ret
adc
ror
pop
cmpl
jne
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
jae
xchg
out
mov
add
mov
lcall
hlt
imul
ret
add
add
into
add
add
sahf
pop
mov
loop
add
jl
add
loopne
cli
add
popa
jo
jmp
icebp
mov
push
ret
jae
sub
pop
pop
push
push
lea
push
push
push
call
push
add
add
repnz
jmp
iret
cld
out
add
add
add
add
pop
push
add
jp
add
pop
add
add
cld
add
popl
mov
push
iret
add
lcall
push
xor
shr
pop
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
loopne
add
testb
push
add
add
bound
xchg
mov
add
add
jmp
shll
rcr
push
xchg
movsl
jne
lods
push
cli
add
fiadds
lcall
push
xor
sub
lea
pop
leave
ret
push
lea
push
push
push
push
push
push
lea
push
push
call
enter
mov
add
test
scas
test
jl
add
std
add
js
int3
add
add
jl
add
arpl
lcall
push
adc
hlt
sub
pop
add
push
push
push
push
call
jl
shrb
add
jmp
andb
add
add
rorl
add
add
enter
add
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
lret
arpl
xchg
push
add
pop
outsl
add
add
add
mov
add
rorl
cld
add
hlt
mov
vzeroall
add
mov
add
jno
insb
jae
movb
lods
add
mov
lcall
out
loop
jo
add
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
jp
popf
add
add
add
add
add
add
add
xchg
xchg
add
cli
add
pop
cmpsb
jp
mov
xchg
xchg
add
xchg
test
add
fdivl
push
jo
add
add
push
mov
add
lahf
add
popa
ljmp
lcall
ret
add
addr16
push
call
subb
addl
in
leave
add
mov
mov
into
test
mov
fadds
fiaddl
sti
arpl
cmpl
and
add
pushf
lahf
test
add
push
ja
pusha
sub
pop
testw
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
pusha
pop
mov
add
add
bound
add
adcb
add
add
jb
add
sub
pop
pop
push
shr
inc
xor
sub
pop
mov
push
push
not
pop
call
push
push
lea
push
push
push
lea
push
lea
push
call
add
fildll
clc
lahf
mov
add
xchg
add
xlat
insb
out
add
addb
jl
pusha
cld
pop
mov
pop
int
xchg
pop
xchg
ljmp
xor
push
lea
push
push
push
call
popa
add
add
add
mov
idivl
addr16
in
add
iret
cmpsl
add
popf
in
add
ficoms
add
fisubl
add
incb
cli
incb
add
add
mov
ljmp
scas
sub
add
js
sub
pop
pop
pop
push
push
push
push
push
push
call
stc
jae
add
into
lds
push
add
loop
flds
add
add
mov
add
enter
icebp
pop
mov
mov
ficomps
std
add
lods
add
add
testb
jle
mov
insb
lock
add
icebp
loope
mov
pop
arpl
xchg
add
out
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
jge
lds
add
add
mov
add
roll
popf
mov
leave
push
add
mov
into
cli
stos
fiadds
add
test
rcr
enter
add
cltd
movsb
cld
pop
add
int3
xchg
xchg
out
add
add
aad
add
add
add
mov
add
movsl
add
add
movsl
iret
stos
add
pop
push
lea
push
lea
push
lea
push
push
push
call
xchg
add
add
mov
neg
add
add
or
out
jo
add
into
jo
mov
add
mov
mov
add
iret
addr16
stc
in
hlt
add
mov
lcall
popl
add
push
push
test
lods
aam
in
call
leave
push
add
lea
pop
ret
push
push
push
call
add
addl
mov
stos
add
add
les
add
nop
out
roll
je
add
add
je
add
mov
fldcw
pop
loopne
pop
stos
scas
add
add
add
add
ljmp
pop
mov
add
push
push
push
push
call
mov
incb
mov
lods
add
push
cmc
push
add
add
add
add
add
add
add
pusha
mov
loope
add
sub
pop
mov
push
lea
add
rol
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lods
sti
add
add
popl
add
add
in
pop
fildl
add
add
fidivl
add
add
out
add
icebp
iret
add
xchg
push
pop
add
add
xorb
cmpsb
add
add
add
mov
cwtl
fdivr
mov
push
pop
ret
add
mov
pop
push
push
push
lea
push
lea
push
push
call
push
lahf
add
cltd
push
push
in
fs
loop
fsub
stc
mov
sbb
add
add
sahf
stos
add
int
add
jmpw
add
add
in
scas
add
add
mov
lcall
push
push
push
push
call
add
add
jnp
mov
leave
faddl
add
mov
leave
add
push
mov
pop
lods
add
leave
imul
add
loope
fs
add
add
xchg
push
test
mov
jmp
mov
add
movb
pop
xor
add
xchg
add
mov
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
jnp
add
sahf
addr16
mov
testb
int
push
lahf
hlt
mov
add
add
xchg
add
add
add
pop
js
rcrb
mov
cwtl
add
xchg
xchg
mov
cmp
in
add
mov
fdivr
lcall
push
push
push
lea
push
push
call
fcmovne
pop
add
call
outsl
int3
fimuls
cli
lcall
add
lds
add
add
sahf
movsb
mov
add
lcall
add
add
in
in
pop
mov
push
not
lea
shl
pop
push
push
lea
push
push
call
test
add
mov
push
mov
add
xchg
imul
pushf
add
add
xchg
flds
loop
add
sahf
pop
iret
add
mov
add
mov
cwtl
movl
pop
add
into
hlt
faddl
lea
push
push
call
jne
std
mov
add
add
in
sti
add
js
add
int3
add
add
jmp
add
mov
add
leave
rolb
in
add
mov
arpl
in
fsub
add
push
ret
add
add
je
mov
mov
gs
out
mov
add
lcall
ljmp
push
push
lea
push
call
add
add
pop
add
add
mov
add
add
xchg
divb
jecxz
rcr
add
ljmp
sub
pop
mov
shr
push
ror
lea
pop
add
push
shl
ror
pop
mov
push
push
push
push
lea
push
call
add
mov
out
mov
add
mov
jo
sbb
pop
mov
pusha
mov
pop
add
popf
add
add
add
std
add
add
add
mov
in
in
lcall
fsts
rorb
pop
pop
pushl
push
add
pop
popl
push
push
push
push
push
lea
push
push
call
xlat
mov
add
js
jmp
add
les
mov
insb
incb
std
cmpsl
add
mull
mov
in
cmp
add
add
mov
pop
add
lods
jae
lods
clc
mov
movl
hlt
rolb
lcall
jnp
push
dec
pop
add
push
push
lea
push
call
add
mov
fiadds
sti
addb
jbe
mov
mov
stos
add
add
add
test
add
mov
add
jb
movsb
mov
add
roll
add
out
lret
popl
add
mov
add
lods
jmp
lds
mov
push
add
hlt
pop
xor
push
push
lea
push
push
push
lea
push
lea
push
call
pop
loop
cmc
cwtl
add
xchg
in
mull
mov
call
outsl
mov
movl
jae
add
lods
fildll
jno
fcmove
add
mov
mov
add
cmp
cmpsb
add
flds
add
mov
loopne
bound
into
cmpsl
xchg
jle
in
in
lcall
adc
push
inc
shr
pop
mov
push
push
lea
push
push
push
call
std
scas
add
mov
mov
push
ret
lcall
gs
popa
add
stos
scas
add
add
add
add
mov
les
jp
mov
data16
scas
cli
std
jbe
scas
xchg
add
rcll
cmp
addr16
push
push
lea
push
lea
push
push
lea
push
call
lcall
xchg
in
fiaddl
add
pushf
popf
addr16
jl
int
mov
pop
mov
into
add
incb
js
mov
jb
jle
xchg
data16
rcr
add
stos
pop
jo
add
rorl
add
mov
add
mov
xlat
add
jns
addb
push
pop
rol
nop
push
push
push
push
call
add
add
add
add
add
addb
mov
js
add
add
jno
test
add
cmpsl
add
fwait
add
lods
bound
lahf
mov
icebp
cld
mov
scas
add
fnsave
add
add
addb
lcall
xor
push
not
rol
dec
pop
nop
push
push
push
lea
push
call
aad
add
add
pop
lret
mulb
pop
aam
lods
xchg
lea
cmpsl
add
xchg
add
xchg
add
xchg
fs
xchg
shr
lds
fsubp
add
test
add
iret
ret
cli
mov
add
add
add
jle
add
loop
mov
lcall
inc
push
inc
sub
pop
nop
push
push
push
lea
push
call
add
mov
add
mov
rolb
push
add
jp
mov
popa
jb
add
xchg
icebp
add
add
addb
aad
add
add
arpl
add
out
push
addr16
cmpsl
mov
add
int
add
arpl
test
add
jae
add
sub
pop
nop
push
push
push
lea
push
push
call
jle
imul
lea
add
mov
jbe
mov
add
idivb
test
add
add
mov
xchg
add
xchg
loope
add
add
fstpl
loop
mov
add
mov
jae
in
in
pop
cmpb
jne
push
push
push
push
lea
push
lea
push
push
call
jb
popf
add
leave
add
jge
add
lcall
icebp
cmc
add
jecxz
call
in
addl
lret
add
add
iret
scas
push
mov
mov
mov
add
lret
add
enter
add
lcall
inc
pop
ss
nop
push
lea
add
pop
nop
push
sub
pop
cmp
je
push
lea
inc
pop
nop
push
sub
shr
pop
nop
push
shr
add
pop
inc
push
push
push
lea
push
push
push
push
push
call
xchg
add
add
ret
add
std
pop
lock
add
add
mov
xchg
jo
cwtl
jne
testl
add
jno
mov
lock
xchg
je
sub
pop
nop
nop
push
lea
dec
pop
cmp
jb
push
dec
pop
xor
jmp
push
push
push
call
add
pushw
fiaddl
cmc
fldl
add
push
enter
add
pop
out
push
add
sti
mov
cli
add
rcr
add
hlt
add
add
add
add
add
add
pushf
je
roll
ror
push
add
add
call
add
gs
sub
pop
mov
add
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
pusha
add
jb
mov
mov
add
add
jp
add
lahf
les
in
push
ror
scas
testl
jl
add
add
jge
add
xchg
lcall
add
fcoml
in
lcall
mov
jb
not
xor
shl
rol
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
add
jl
jno
mov
push
mov
leave
add
add
cltd
lea
cli
pop
add
pusha
shrl
mov
xchg
add
add
in
mov
int3
xchg
add
ja
lret
scas
pop
cmpsb
pop
xlat
lock
add
stos
add
add
cmpsl
pop
mov
add
mov
lcall
rcll
mov
mov
out
shl
pop
mov
xor
push
not
pop
xor
shl
push
inc
ror
ror
pop
xor
push
sub
pop
shl
xor
push
push
push
push
push
lea
push
push
call
add
mov
mov
add
jbe
outsl
cli
mov
sub
xlat
fldl
aam
outsl
call
add
icebp
mov
add
add
jb
xlat
add
aad
mov
add
add
cltd
popf
add
lret
add
iret
jge
xchg
add
mov
jmp
pop
fs
sub
pop
shl
push
ror
lea
pop
xor
push
sub
pop
mov
add
push
add
inc
shr
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
mov
add
cmp
repnz
mov
mov
lock
pop
add
add
sub
pop
pop
push
sub
shr
sub
pop
pop
push
push
call
add
out
lds
mov
sbb
fildl
rcr
mov
add
xlat
outsl
push
add
cmpsb
add
pop
add
rclb
jnp
jb
mov
in
clc
lcall
leave
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
jecxz
push
jmp
fnstsw
add
fldl
push
add
add
rclb
add
in
xchg
mov
mov
aam
mov
add
out
fcmove
faddl
xlat
in
mov
add
sub
pop
ret
push
sub
add
shl
pop
push
push
lea
push
call
add
xchg
add
imul
int3
sti
add
add
les
pushf
pop
add
add
movsb
mov
mov
add
rclb
add
lea
leave
add
sub
pop
mov
push
dec
not
pop
push
push
push
lea
push
push
lea
push
push
call
mov
mov
add
add
cld
jle
in
loopne
add
add
add
movsl
add
imul
add
lds
add
sub
pop
push
push
push
not
sub
shl
shr
pop
push
push
not
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
add
cmpsb
outsl
in
xchg
arpl
mull
add
les
jmp
add
out
addl
xchg
fsubl
add
mov
add
in
je
out
mov
xchg
add
mov
xchg
fcmove
jecxz
add
mov
loopne
add
in
loopne
mov
push
lea
dec
shl
pop
mov
push
dec
ror
pop
test
je
mov
push
xor
dec
shl
pop
test
je
push
sub
pop
mov
mov
push
lea
shl
sub
pop
mov
push
push
push
push
push
call
add
add
jb
loop
add
push
in
enter
pop
add
cwtl
mov
add
out
xchg
xchg
add
cmc
out
out
add
pop
add
add
loopne
aad
add
in
lret
add
fadds
add
add
insb
cmpsl
jle
pusha
sub
pop
inc
cmp
je
push
ror
shl
sub
pop
test
je
mov
push
pop
inc
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
into
add
fisubl
test
add
add
xchg
addb
fistpll
xlat
add
mov
add
lret
icebp
lods
add
scas
js
shlb
lods
xchg
scas
mov
add
addr16
jbe
aam
push
pusha
pop
call
in
fcomps
rorb
test
push
lea
push
call
add
add
in
mov
jmp
rcrb
add
xchg
cmpsb
add
adcl
jmp
xlat
add
mov
xchg
add
cmpsb
xchg
add
out
xchg
ja
test
lret
fdivl
fsub
add
test
add
add
add
addl
fadds
lcall
rorb
cli
call
div
ror
pop
xor
push
pop
pop
pop
push
lea
push
call
popf
add
mov
test
mov
pop
add
into
add
pop
idivl
int3
cli
add
data16
mov
in
in
add
hlt
add
loopne
add
push
add
add
sbb
ror
mov
call
bound
jne
pop
add
bound
pop
pop
push
pop
pop
leave
push
push
lea
push
lea
push
push
push
call
add
push
push
lock
add
lahf
outsl
add
add
mov
add
movsl
add
add
add
add
aam
nop
add
lods
frstpm(287
int
sub
pop
ret
push
push
lea
push
push
push
push
call
bound
je
mov
xchg
in
pushf
jns
xchg
shl
add
rolb
fs
popa
mov
add
add
add
popf
sub
pop
mov
push
sub
pop
inc
cmp
jne
push
lea
push
lea
push
lea
push
push
push
push
call
jnp
add
push
std
mov
popa
pop
add
cwtl
mov
add
jnp
add
mov
pop
out
mov
scas
popf
mov
sub
pop
lea
push
push
push
lea
push
push
push
push
push
push
call
loopne
add
add
mov
out
mov
cmpsl
add
add
enter
enter
add
popl
add
iret
fnstcw
imul
jecxz
sub
pop
mov
push
rol
shl
sub
ror
pop
test
je
push
push
push
lea
push
push
push
lea
push
push
push
call
jbe
jae
aad
stc
ljmp
add
add
fldt
xchg
add
add
mov
mov
push
in
mov
add
add
xlat
jl
roll
bound
stos
add
add
in
fcompl
push
push
pop
add
cmp
jne
push
lea
push
call
add
ret
add
push
push
mov
add
cld
add
enter
push
leave
push
pop
add
jl
scas
jmp
push
cwtl
mov
pusha
ret
clc
lcall
inc
add
mov
fwait
pushw
adc
sub
add
xchg
mov
add
movsl
in
add
add
add
and
shlb
js
mov
cld
lret
jp
add
add
clc
lcall
rorb
cmpsb
add
add
mov
add
lcall
add
xchg
out
add
popf
cld
add
mov
pop
xchg
stc
pop
iret
ficoms
add
add
pop
mov
mov
in
clc
lcall
roll
loopne
test
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
xchg
xchg
add
push
testb
pop
mov
add
add
add
add
out
test
decb
add
mov
add
add
ljmp
sub
pop
jmp
push
lea
ror
add
pop
xor
pop
push
lea
pop
pop
push
shl
shr
pop
pop
pop
push
push
lea
push
call
jge
add
jmp
decb
xchg
mov
shlb
xchg
add
add
fs
addl
test
add
int3
add
push
mov
jne
sub
pop
leave
push
push
push
push
push
push
push
push
call
jmp
gs
out
add
jl
iret
iret
jp
out
pop
pusha
mov
cwtl
cwtl
add
pop
add
icebp
add
stc
mov
int3
sub
pop
ret
push
ror
rol
xor
add
pop
lea
push
lea
push
lea
push
call
mov
add
add
add
push
add
add
jb
repnz
ret
pop
add
mov
fst
add
add
add
add
add
jae
mov
push
imul
mov
int
jae
in
hlt
pop
pop
pop
push
shr
pop
pop
pop
push
sub
sub
pop
leave
push
push
call
mov
lea
add
out
add
sar
outsl
popa
add
std
fldl
add
cld
jo
repnz
add
fs
movb
jle
out
add
pop
pop
mov
in
out
lock
add
movsb
sub
pop
ret
push
sub
pop
mov
push
xor
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
call
add
add
pusha
mov
rcrb
add
test
arpl
sahf
add
aad
xchg
add
addb
push
add
mov
shll
lahf
mov
jecxz
mov
addr16
out
jl
in
in
pop
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
push
jmp
xchg
jae
pop
add
add
lcall
xchg
pusha
add
ficomps
stc
imul
mov
cmpsl
xchg
popf
add
lcall
ret
test
push
test
jae
sub
jae
test
jo
test
jb
cltd
sbb
mov
jae
jle
jae
test
jae
sbb
jb
aaa
gs
pop
mov
into
adc
jl
aaa
inc
shl
jae
in
push
js
repz
and
mov
dec
neg
mov
jg
sub
push
xor
out
scas
dec
hlt
je
sahf
cld
mov
fidivs
adc
xchg
pusha
rclb
or
mov
sub
cmpsl
pop
aad
outsl
xor
jb
lea
xor
jp
dec
add
dec
aas
sub
pusha
xor
xchg
cld
incb
in
fistl
jo
test
pop
push
fcmovnb
test
inc
jecxz
rcrb
test
push
push
js,pt
ss
cmpsl
add
jecxz
jmp
mov
notb
and
loopne
inc
clc
jl
mov
mov
outsl
jne
inc
cmpsl
in
inc
fwait
pop
jp
xchg
movb
cs
and
imul
repnz
insl
das
jp
cmp
cltd
inc
rcr
hlt
inc
inc
push
pushf
mov
mov
out
mov
sahf
pop
rcr
inc
cmp
and
dec
sbb
xor
out
mov
push
pop
or
loop
jb
cmpsl
mov
loopne
adc
xor
mov
lret
dec
sbb
mov
imul
test
outsl
inc
push
dec
xchg
mov
jne
push
sahf
xor
jnp
jo
shl
dec
push
ret
adc
lods
cmp
or
in
mov
ss
pop
pop
inc
dec
push
jl
outsb
and
adcb
leave
hlt
inc
push
addr16
iret
arpl
out
xchg
add
cltd
aas
popf
ret
jge
inc
lret
lock
imul
call
xlat
and
insl
mov
xor
je
shll
sbb
hlt
aad
outsl
mov
inc
cmp
popf
mov
pop
int3
es
or
push
out
jge
jmp
mov
out
push
jno
mov
test
cltd
mov
push
outsb
ljmp
xor
out
into
bound
scas
mov
stc
stos
inc
dec
inc
mov
in
pop
outsb
aad
shr
cmc
cmpb
dec
adc
fldl
xor
lahf
push
adc
mov
pop
mov
movd
inc
adc
adc
dec
push
jle
stc
jg
mov
lret
sub
mov
inc
incb
mov
pop
mov
pop
jp
jmp
push
ret
push
push
jge
cmp
test
js
fnstenv
test
sub
iret
call
cmp
push
jecxz
mov
faddp
mov
dec
xor
cld
mov
lret
adc
ret
into
adc
adc
int3
xchg
fadds
in
fwait
or
push
out
rorb
scas
mov
mov
daa
test
dec
fcoml
idiv
movb
fdivrs
adc
jnp
jmp
int3
fdivp
jl
xchg
mov
shl
xor
fdivrp
fisubrs
fdivs
imul
xchg
pop
ja
aas
idivl
inc
ljmp
shlb
dec
lcall
sub
dec
mov
push
popa
push
adc
lea
bound
and
mov
popa
mov
sbb
push
pop
frstor
sbb
shl
push
xor
sub
in
pop
push
or
jbe
jbe
lods
sbb
lret
sub
fs
rcr
call
cmp
xchg
push
push
ds
mov
addr16
pop
aaa
es
mov
shl
lcall
imul
loopne
sub
pop
popa
gs
mov
push
sub
movsl
jle
adc
loopne
push
pushf
pop
fdiv
push
xchg
into
xchg
xchg
xchg
test
adc
aad
fdivp
xor
sbb
in
cmp
jmp
xchg
push
push
ja
push
sub
ss
clts
imul
sbb
cmpsb
and
and
xlat
xor
decb
sbb
ret
leave
push
loopne
inc
rorl
xchg
adc
push
sbb
lods
push
loope
aad
stos
mov
stc
aam
sub
andl
dec
aad
and
cmp
ficompl
repz
mov
or
or
add
scas
cmpb
adc
sbb
push
ret
xchg
hlt
push
add
push
icebp
insl
lcall
mov
bound
push
inc
push
and
ja
cmp
mov
push
jp
and
inc
cwtl
cmp
cli
mov
add
mov
xchg
pusha
xor
lahf
idivb
mov
sub
andb
pop
jns
add
xchg
push
test
cltd
loop
ret
fsubl
imul
inc
lods
lahf
push
in
push
inc
mov
lcall
pop
push
sbb
dec
pop
outsl
int3
mov
jno
inc
roll
push
fcmovne
cmp
insl
std
push
mov
popa
cmp
and
jns
mov
push
decb
sbbb
cmpsl
out
sbb
sub
testl
dec
jmp
inc
imul
fadds
xlat
js
mov
cmp
add
nop
mov
rcl
jns
mov
jle
sbb
pop
and
xlat
cmp
pusha
inc
in
pusha
xchg
inc
xor
pop
adc
jbe
cmp
mov
dec
add
xor
inc
aaa
or
in
mov
adc
sub
scas
mov
in
aad
dec
mov
jecxz
xor
cli
jne
and
push
std
sbb
ja
push
stos
or
inc
stos
pushf
loope
stos
cwtl
push
pop
pop
fcompl
mov
fwait
loope
sub
fldenv
dec
sub
pop
cmp
xor
hlt
cmp
sub
mov
sahf
aad
adc
hlt
dec
scas
cmp
mov
pop
and
and
jnp
ljmp
fldenv
daa
sbb
popa
ja
jne
lock
mov
data16
sbb
test
js
cwtl
mov
pop
pushf
loope
and
rcll
aam
mov
mulb
jl
inc
leave
xchg
or
cmp
clc
mov
add
mov
sbbl
popa
pop
push
out
inc
xchg
cli
push
push
mov
sarb
mov
add
and
enter
jae
incb
add
aas
cli
fcom
rclb
xchg
mov
outsl
cmp
xchg
or
jl
iret
sub
sti
sub
xchg
push
fldl2t
or
int
sub
push
jo
dec
rcrb
jno
or
push
push
ret
xor
xor
pushf
pop
orl
mov
mov
sub
cwtl
rol
ret
repnz
mov
pop
rol
popf
inc
lcall
push
lret
cwtl
xchg
mov
add
sbb
and
add
xchg
pop
dec
cmp
xchg
testl
xor
ret
adc
xchg
fisttpl
mov
dec
pop
pop
fcomps
js
sbb
adc
or
loopne
jb
lret
xor
jp
jns
idivb
push
jbe
loope
and
lahf
shrb
mov
arpl
in
adc
jns
and
outsb
leave
lea
call
jae
test
push
pop
inc
inc
or
int
aam
clc
out
int
cmpsb
or
add
adc
dec
inc
and
aam
loope
mov
iret
or
adc
pop
movsb
fstpt
add
xchg
push
movsl
out
adc
dec
fisubrl
mov
dec
push
sbb
lahf
cmp
or
lcall
test
inc
fldl
pop
lret
enter
incb
mov
pop
ja
xchg
scas
dec
mov
out
adc
stos
clc
mov
pop
sti
pop
and
and
mov
ret
jo
enter
jne
mov
mov
push
or
mov
mov
or
push
dec
lcall
cmp
insb
lds
mov
push
int
scas
push
scas
test
dec
mov
sub
inc
insb
mov
adcl
loopne
ljmp
pop
ja
fisttpl
xor
sub
push
shrl
out
rcr
push
or
popf
jne
dec
sub
popf
iret
or
jo
fcompl
pop
popf
in
aaa
push
jge
repnz
xchg
dec
xor
dec
mov
pop
adc
lods
data16
pop
out
sub
lret
mov
sbb
scas
inc
loope
subl
out
sahf
push
mov
movsl
lcall
pop
dec
cmp
push
or
push
cmp
cmpsl
dec
or
adc
test
mov
out
mov
or
inc
enter
push
outsl
fstps
les
push
cmp
arpl
add
mov
xchg
repz
push
mov
add
mov
cmp
popa
shrl
dec
and
mov
lods
stos
inc
fcmovb
and
push
das
pusha
gs
sbb
push
dec
pop
dec
lods
jl
stc
test
dec
or
shlb
adc
add
push
outsb
bound
aaa
mov
cmpsl
sbb
mov
popf
daa
cmp
out
fnstcw
add
sti
cmp
movsb
movsl
inc
js
adc
cs
sub
je
mov
sub
out
xor
xor
sbb
pop
sbb
xor
xor
pop
cltd
sub
push
jnp
cmp
xchg
js
mov
je
testb
sar
inc
sub
pop
fsub
pop
xchg
pop
lds
imul
rcl
mov
xor
mov
pusha
in
mov
push
xchg
mov
pop
into
push
int3
sbbb
mull
cld
mov
or
outsl
jno
popl
xchg
sub
xor
mov
mov
rolb
inc
ss
mov
clc
aas
xor
push
adc
dec
lahf
pop
arpl
cmp
push
pop
cld
push
jmp
insb
dec
push
mov
gs
insl
test
clc
sub
fidivl
xchg
inc
gs
lods
ljmp
adcl
std
add
and
push
ret
movsl
stc
dec
xor
add
aad
out
sub
ja
das
sti
sbb
mov
and
mov
and
jnp
mov
mov
data16
test
add
xchg
clc
outsb
out
fsubrl
and
shlb
je
hlt
inc
in
ljmp
out
xchg
cmc
mov
dec
sbb
out
ss
andb
int
scas
xchg
int3
dec
dec
fstps
lahf
cli
pop
fcoms
into
mov
repnz
xchg
in
iret
pushf
shll
scas
pop
inc
aam
popa
in
jg
xor
leave
add
loope
or
and
clc
lds
dec
cwtl
sbb
cmpsl
das
and
sbb
mov
fs
sbb
push
sahf
cmpsl
aad
adc
dec
dec
push
cld
or
leave
cld
lret
addr16
jmp
push
or
mov
rclb
xor
cmpsl
pop
jnp
shlb
lock
repnz
cli
out
mov
repnz
pop
mov
call
inc
popa
cmc
push
dec
movsb
pop
pusha
mov
loopne
push
into
cmp
dec
push
lods
mov
lods
inc
pop
hlt
jecxz
test
cmp
sub
and
adc
out
jne
pop
outsb
leave
sub
je
cltd
push
push
std
in
fxam
xchg
mov
xchg
fidivrs
jg
lods
test
mov
stc
lret
push
insl
outsl
in
mov
scas
pop
sti
loop
cltd
adc
mov
jae
fsubs
push
rorl
pop
stc
dec
fcompl
adc
insb
mov
pusha
or
mov
or
inc
int
cld
jae
xor
inc
aaa
add
cmc
jle
adc
or
jecxz
and
mov
push
or
lahf
mov
xor
sbb
mov
icebp
aas
outsb
mov
cmp
int
sub
pop
aaa
jnp
inc
ds
mov
cmpsl
or
insl
adc
mov
xchg
mov
fwait
cltd
loop
xchg
pop
cmp
incb
lcall
push
jo
fnstsw
push
loope
and
andb
aas
xchg
mov
data16
mov
pop
cltd
mov
dec
jne
popl
jne
or
add
es
sbb
inc
js
mov
enter
jnp
arpl
cmp
add
fnstenv
sbb
mov
loope
out
scas
scas
imul
add
ret
pop
stos
or
jb
lret
cmpsb
into
and
clc
test
xchg
mov
sbb
push
jge
outsb
cmc
sbb
or
mov
aam
cs
push
rclb
or
in
sbb
pop
push
and
cmp
fbld
loope
fistpl
stc
or
push
dec
ds
mov
and
lahf
pop
push
out
cmp
fcoms
mov
jns
push
cli
jne
or
adc
dec
fs
out
orb
cmp
and
or
push
dec
jo
cmpsb
dec
push
push
sbb
nop
popf
xor
xor
std
dec
inc
cmc
addr16
or
sbb
pop
fcmovnb
push
test
hlt
dec
jp
xor
adc
mov
aaa
daa
push
mov
mov
lods
lods
and
popw
outsb
into
pop
mov
mov
lret
aas
xchg
mov
dec
cs
cmp
mov
push
sbb
pop
sub
sbb
ret
std
psadbw
push
jl
test
pop
ret
repz
pop
xchg
fidivl
cmp
jns
cmc
mov
pop
leave
mov
mov
and
push
pop
js
jl
xor
cmp
mov
add
and
push
ljmp
jo
std
dec
sub
sub
movsl
lea
inc
sbb
xchg
fcmovnb
popf
add
mov
out
inc
sbb
decb
ljmp
mov
xchg
push
test
das
and
in
pop
inc
mov
xchg
inc
lret
data16
fbld
ret
ljmp
inc
jo
rcr
repnz
pop
push
mov
cmp
leave
scas
add
mov
sub
pusha
outsl
jae
mov
xchg
push
or
mov
jb
jno
daa
popa
mov
dec
stc
and
int3
inc
jno
add
hlt
loop
adc
jle
and
inc
push
in
xchg
cmp
fs
add
out
sbb
mov
cmp
mov
mov
adc
mov
out
leave
mov
xchg
fnstsw
cmpsb
imulb
pop
mov
adc
mov
jmp
push
and
mov
repz
mov
cmp
jg
scas
lcall
insb
bound
jnp
scas
stos
and
jns
mov
adc
jne
mov
inc
pushf
sbb
xor
mov
repnz
sbb
cmpl
or
add
xchg
in
aad
aad
fcomps
xorb
test
sbb
leave
inc
decl
ljmp
jle
mov
mov
xchg
mov
pop
sub
negl
out
out
ret
imul
add
mov
sbb
push
push
sub
insb
jg
andb
lcall
gs
movsb
inc
icebp
js
xor
or
enter
addl
add
das
test
jae
in
loope
add
repnz
sar
mov
add
test
mov
and
mov
test
mov
mov
mov
inc
dec
nop
jo
xchg
adc
xchg
xchg
xor
lea
inc
into
xchg
mov
cltd
in
dec
lret
sub
or
xchg
test
jnp
stc
sub
scas
adc
cmc
add
not
fsubr
es
fmulp
mov
leave
out
inc
push
cmp
adc
bound
jb
push
lahf
addb
imul
push
negb
stos
jnp
shll
cli
loope
push
outsl
xchg
cmc
mov
divl
xlat
cmp
std
sbb
mov
cli
rorb
mov
icebp
dec
cmpb
popf
cmp
mov
pop
sahf
mov
jns
xlat
dec
in
stos
icebp
repnz
movsl
or
movsl
inc
jno
aam
stc
cmp
insb
mov
movsl
ja
xor
scas
cmp
inc
stc
cmpsb
neg
mov
jg
subl
insb
inc
in
out
loop
mov
hlt
dec
int3
stos
lock
adcb
pop
xchg
cmpsb
xchg
ss
pop
mov
inc
test
cs
mov
push
aam
push
or
cmp
sbb
cltd
fwait
jb
ss
call
fbld
sti
adc
je
jnp
and
pop
or
mov
dec
mov
push
jne
jle
ljmp
push
pusha
push
sbb
cmpsl
push
lods
xor
ficompl
cmp
xor
out
push
mov
outsl
nop
cmpb
xchg
mov
xchg
push
cwtl
loop
js
daa
jno
jb
dec
push
mov
xlat
jp
cmp
push
insl
enter
data16
push
cli
cs
int
mov
push
pop
dec
loop
cwtl
mov
cmp
and
cli
mov
mov
jns
xor
add
inc
pop
sbb
dec
xchg
test
mov
mov
fcoms
call
popf
lods
mov
jne
popf
add
test
lcall
fimuls
ficomps
test
cltd
clc
and
push
cmp
adc
scas
jne
cmp
lahf
repnz
popa
sub
mov
inc
xor
cmc
cmp
andl
pop
ficompl
mov
movsb
out
stos
pop
push
lret
cld
cmp
jns
sub
in
insl
sbbl
stos
shll
xor
rolb
jl
dec
or
fisubrs
lea
inc
pop
loope
imul
sbb
out
fdivs
adc
int3
inc
mov
movsb
and
sbbl
ds
jmp
sbb
push
or
push
push
loopne
subl
inc
ret
fisttpl
loope
inc
nop
movsb
lods
mov
push
lock
push
popf
sbb
sbb
jge
addr16
push
lahf
jns
jne
mov
sub
das
out
jmp
and
fstpl
lods
push
mov
pop
adc
jae
mov
jp
sub
leave
jno
mov
or
adc
unpckhps
dec
adc
lea
fcmovbe
mov
stos
mov
imul
rcrl
jne
fdivs
dec
fcomi
and
int3
jb
loope
arpl
pop
cmpsl
lock
dec
mov
sti
imul
dec
jns
leave
outsb
push
jl
cmc
pushf
jb
add
inc
and
pop
push
mov
sub
fucomi
mov
cmpsl
lds
fcomps
pop
push
lods
bound
addr16
xchg
movsl
popf
loopne
jnp
shlb
ljmp
cmpb
bound
add
pop
lahf
out
mov
xchg
data16
loopne
mov
mov
pop
inc
in
icebp
push
xor
loopne
jns
int3
negb
enter
shl
mov
or
push
cmp
and
lret
or
push
fistpll
xchg
and
sub
jns
push
xor
xchg
pop
dec
outsb
ret
add
mov
push
adc
nop
testl
aas
cmp
jl
sbb
sti
dec
xor
mov
ret
jp
les
test
jecxz
push
mov
subb
cmpb
pusha
sahf
nop
ds
sub
sarl
stos
ds
in
sbb
jmp
add
enter
pop
ds
out
push
jmp
rorb
pop
lahf
stc
inc
mov
jl
inc
mov
sbb
mov
pop
xor
jno
insb
push
jnp
pushf
and
sub
nop
pop
or
or
jp
or
dec
in
pop
mov
xorb
and
outsb
ds
push
pushf
cli
xor
outsb
mov
add
mov
pop
xor
xor
sub
xor
mov
lock
mov
daa
push
test
xchg
pop
imul
scas
jg
cld
mov
and
mov
push
jne
movb
inc
shlb
lea
or
out
test
mov
pop
fmull
adc
movsl
in
iret
outsb
cmc
xchg
dec
mov
mov
sub
dec
jae
rolb
shlb
push
enter
ror
icebp
push
xor
xchg
daa
jge
leave
jmp
mov
pop
test
push
hlt
xor
aaa
fwait
pop
sbb
test
in
es
or
jecxz
in
lcall
xchg
fstps
outsl
lds
popa
cs
mov
into
cmp
adc
lods
data16
roll
and
jg
xor
in
mov
pop
pop
fbstp
pop
mov
int
insb
sbb
ja
xor
sbb
jns
arpl
sbb
sub
xchg
jecxz
test
xchg
cmp
push
adc
dec
jl
or
xchg
sub
popf
sbb
xor
hlt
jmp
std
dec
xlat
pushf
adc
addr16
dec
rcr
cmpl
xor
out
rcrb
out
xlat
clc
xlat
loopne
jbe
and
test
or
repz
dec
jg
shl
pop
fidivl
cmp
rorb
imul
outsl
mov
push
jg
cs
inc
shrb
movsl
adc
xchg
sbb
push
push
pop
fwait
mov
pop
dec
mov
adc
dec
fnstsw
imul
xchg
cmp
rorl
roll
and
push
dec
mov
sbb
aad
push
loopne
xlat
mov
or
sbb
test
scas
cmp
std
dec
lds
mov
nop
std
je
sub
pop
inc
mov
inc
xchg
sbbb
cmc
cli
and
dec
cwtl
sub
push
mov
inc
mov
fmuls
pop
and
pop
mov
test
imul
pop
mov
mov
loope
sub
add
fcmovb
ret
mov
sub
mov
sub
aam
shrl
inc
pop
cmp
xor
out
xchg
and
out
stos
jge
mov
mov
test
jb
adc
inc
ret
test
dec
jecxz
add
cmp
loopnew
fs
ret
shrb
mov
mov
xchg
out
jns
cmc
jnp
pop
mov
mov
adc
mov
outsl
cmp
pop
cmp
mov
push
sub
jne
jp
push
sahf
bswap
sbb
ljmp
fistpll
dec
dec
dec
jg
js
scas
pop
inc
push
add
aad
xchg
lods
adc
psubq
adc
rcll
push
add
sbb
repnz
inc
out
mov
mov
jl
or
xlat
in
nop
repz
jle
loop
push
adc
aad
dec
and
aas
push
mov
filds
jno
xor
iret
sbb
and
push
cmpsb
cmpsl
mov
aas
insl
cmc
imul
push
mov
jecxz
or
jmp
cmpb
outsl
cld
popa
pop
lret
sbbl
mov
xchg
mov
push
mov
mov
pop
jmp
push
sbb
cmp
cmp
roll
mov
scas
inc
mov
fstpl
pushf
mov
fldt
cmp
fisttpll
sbb
cwtl
dec
adc
insb
jmp
add
jo
insb
scas
imul
fwait
test
lret
int3
pop
cmpsb
ss
stc
call
fs
jcxz
xchg
jg
es
push
dec
dec
dec
and
mov
ja
add
in
adc
pop
fwait
jmp
mov
cs
nop
scas
mov
rol
mov
roll
jp
lods
inc
sub
sub
js
mov
mov
or
add
cmp
adc
aaa
gs
outsb
cmp
jne
fs
scas
fcmovnb
and
fs
xchg
ret
rol
cld
cmpsb
rolb
cli
jnp
cmp
mov
inc
add
jg
xor
xlat
pop
call
sbbb
int3
dec
mov
dec
insl
sub
or
fidivrl
xrstor
fs
lret
inc
inc
in
cltd
mov
dec
hlt
scas
mov
lret
out
test
adc
dec
sub
cs
cmp
arpl
pop
fsubs
cmp
out
push
ror
popa
test
inc
stos
fildll
xor
xchg
cld
inc
mov
cmpsl
ja
ja
pop
cmpsl
data16
bound
dec
jecxz
or
or
mov
sub
sub
push
fwait
add
sub
jo
sbb
lea
inc
and
arpl
pop
xlat
or
sbb
faddl
out
push
sub
push
jge
popf
adc
testb
xorl
out
adc
test
push
dec
mov
mov
inc
mov
jo
adc
ret
cmc
mov
lds
les
xor
dec
jns
cld
loop
or
fsts
nop
je
add
fstps
clc
mov
mov
pop
cli
mov
mov
pusha
jae
lds
popa
sub
popf
mov
enter
shll
mov
push
xor
mov
mov
mov
addr16
mov
cmp
mov
dec
sbb
call
xor
sub
cmp
xor
nop
js
cs
inc
fcompl
add
mov
pushf
pop
pop
jbe
movsb
es
lock
stos
or
sub
push
pop
cmp
and
sbb
inc
dec
lock
jecxz
dec
jge
cmc
sub
dec
fisttpll
sub
push
jle
push
mov
loope
icebp
mov
xchg
test
xor
ficoml
xor
adc
push
adc
mov
movsl
loopne
movsb
pop
loope
in
dec
xchg
test
sbb
jb
cld
insb
xlat
pop
mov
les
add
enter
sbb
insl
xchg
mov
sbb
jmp
fwait
pop
xchg
lcall
mov
out
jnp
imul
push
mov
cmp
imul
add
sar
data16
call
xor
stos
cs
mov
inc
int
pop
sbbb
nop
xor
cmp
in
pop
cmpsb
stc
arpl
adc
xor
scas
je
and
dec
cmpsl
mov
fs
and
mov
and
movsl
and
inc
and
orl
mov
cmc
test
push
addr16
sbb
push
jecxz
mov
loop
mov
jmp
pop
xchg
into
cld
cmp
cltd
jae
jmp
lret
or
push
fbld
sbb
cwtl
pop
fiadds
cmp
test
lret
adc
inc
adc
nop
sub
adc
stc
dec
test
dec
pop
cmp
push
dec
imul
or
push
loope
fdivrs
and
pop
mov
leave
push
jle
cmp
adcb
fldt
rclb
scas
push
push
rorb
lods
and
aad
or
aad
femms
shl
fbstp
and
cmp
test
pushf
ror
and
pop
sbbl
jmp
out
xchg
dec
xchg
adc
lcall
rolb
jg
xchg
add
jmp
daa
jnp
lret
sarb
sub
incb
imul
fistps
shlb
or
jbe
push
push
xchg
mov
scas
notb
insl
mov
rcrb
call
fisubrs
in
sbb
pushf
inc
adc
mov
add
xor
insb
or
pop
ljmp
inc
and
pop
mov
xchg
shl
bound
sub
sti
inc
cmp
packuswb
ficompl
pop
push
je
rorl
inc
xlat
and
std
data16
xor
rolb
test
jno
push
adc
mov
add
jg
insl
stos
push
xlat
divl
or
mov
or
popf
add
push
cltd
shl
adc
jmp
xlat
outsb
mov
scas
cmpsl
in
lods
push
shll
dec
mov
mov
scas
test
pop
and
sub
into
pop
push
nop
push
dec
jo
pop
sbb
and
adc
into
push
in
mov
out
cltd
addr16
lock
shrb
mov
sti
sbb
sub
push
test
int
ja
mov
sub
dec
pop
jl
shlb
and
cli
daa
rcll
jns
leave
int3
mov
xchg
fdiv
sub
push
test
mov
or
cmpl
loope
cltd
pusha
mov
aam
mulb
pusha
movsb
pop
mov
sarb
daa
rcrb
xor
loop
jbe
dec
sub
pusha
xchg
popa
mov
or
andl
nop
mov
out
or
fs
sub
rcrl
sbb
ja
push
mov
mov
mov
rorl
mov
mov
in
inc
jge
imul
cs
add
or
xchg
push
jp
mov
lcall
cld
scas
int
push
sahf
jo
jp
xchg
aam
movsb
or
xor
mov
inc
cmp
inc
push
inc
je
enter
js
or
pusha
and
jecxz
sbb
rorl
cmp
ret
inc
mov
push
and
jmp
test
aaa
frstor
push
inc
ljmp
ljmp
imulb
xor
repz
xchg
push
mov
cmpb
cli
mov
loop
sub
and
sub
lock
mov
jmp
test
fsubs
in
arpl
loop
and
sub
mov
mov
dec
add
movsl
in
ja
adc
push
mov
jo
int3
pop
pop
dec
xchg
sub
or
and
cmpl
push
sub
je
jbe
bswap
out
jge
mov
xor
push
popl
pop
aas
jnp
xchg
cmc
dec
jne
pcmpeqd
lret
lods
stos
jo
adc
inc
jbe
mov
in
inc
fucomi
adc
xchg
sub
into
mov
sub
icebp
lea
cli
testb
and
sub
add
sbb
mov
test
push
ss
mov
test
fcmovne
jns
das
movsb
push
jnp
hlt
and
test
jp
jne
or
fidivrs
bound
nop
fdivrs
push
dec
insl
sar
fmuls
cmp
dec
mov
xchg
idivl
loope
dec
xor
dec
shlb
bound
mov
aad
call
cmpsl
cs
add
inc
arpl
mov
mov
call
dec
mov
popa
hlt
pop
cmp
scas
loopne
push
lods
adc
push
sub
mov
test
xchg
push
jbe
icebp
shlb
jnp
pop
inc
inc
insl
or
and
stc
or
dec
sbb
jb
add
inc
scas
jl
fiaddl
ret
adc
popf
ret
dec
mov
or
sub
movsb
inc
adc
add
repnz
jl
sub
push
cmovs
in
dec
inc
jo
pop
xor
push
aam
or
pop
add
mov
jns
xor
insb
adc
subb
jge
inc
pop
sbb
mov
in
adc
inc
jl
cmp
daa
xchg
sbb
sub
sarb
sbb
pop
pop
fsubs
cltd
ds
and
or
xor
cmp
mov
jecxz
cmp
mov
shrb
inc
jns
xor
pop
xchg
xchg
pop
xor
les
gs
pop
lcall
push
loop
cmpl
popl
sub
fsubr
out
mov
jb
fists
mov
mov
jmp
ret
int
xor
mov
push
mov
mov
dec
inc
addr16
and
dec
mov
hlt
xchg
jmp
pop
jp
outsb
cmp
ret
inc
aaa
jo
fnsave
push
xor
lret
fs
add
and
ficomps
mov
jl
adc
loopne
jecxz
xchg
scas
in
fcmovnu
cmc
stos
cmpsb
jo
mov
ficompl
stos
mov
push
inc
out
add
jmp
pop
call
jo
jnp
repz
xor
aas
pop
dec
adc
lods
add
or
out
jmp
ljmp
xchg
stos
xor
xchg
dec
lret
movsb
mov
xorl
int3
ret
inc
jl
adc
hlt
sub
xor
cmp
push
jb
test
inc
jo
add
sbb
cmp
add
and
dec
insl
mov
jecxz
dec
inc
fcompl
or
fs
jno
cmp
jno
cmp
daa
or
and
push
pop
out
clc
les
arpl
dec
inc
push
mov
testw
or
cmpsl
xchg
mov
sub
pop
iret
repnz
pop
jae
mov
in
repnz
rorl
mov
leave
pop
jg
leave
push
push
in
aam
sub
ret
movsl
mov
mov
cmpsl
cmp
jmp
les
mov
pop
fildll
mov
dec
xor
inc
xor
push
fs
in
inc
test
inc
jle
jo
sub
jne
and
js
cld
add
mov
or
sbb
insl
and
pop
xlat
scas
lock
imul
inc
cmp
enter
pushf
and
add
stos
xchg
adc
test
adc
cmp
push
sti
inc
aaa
mov
jle
dec
push
mov
aam
sbb
sub
cwtl
xor
xchg
mov
fdiv
or
mov
adc
addl
movsb
outsl
js
outsb
jg
rclb
dec
mov
or
pusha
adc
rcr
and
dec
inc
cmc
fs
lds
sar
mov
pop
inc
lock
and
pop
sbb
outsb
rcl
aas
xor
mov
fiadds
xchg
jae
dec
les
cmpsb
sbb
cmp
xor
push
daa
jmp
gs
pop
data16
pop
enter
ja
dec
cli
jno
adc
mov
sub
dec
lret
es
dec
std
fwait
lahf
pop
repnz
leave
mov
xchg
imul
lods
stc
addl
lods
popf
test
sub
sbb
add
icebp
push
outsl
add
into
movsb
jo
mov
xchg
push
out
jo
pop
jnp
gs
xlat
inc
insb
lcall
and
icebp
popf
leave
inc
sbb
sbb
cmc
ja
xchg
adc
jmp
arpl
cmp
push
nop
enter
mov
sahf
cwtl
jbe
popf
shr
dec
popl
ja
sbb
iret
or
mov
jecxz
jno
fidivs
nop
cmp
rcrb
jge
test
xchg
push
rcll
sbb
out
das
lcall
in
mov
xchg
mov
pop
test
pop
popa
cmc
cmp
push
jecxz
adc
in
insb
ja
jge
in
jno
sub
popf
xchg
in
mov
push
lods
andl
sub
pop
out
addl
mov
lahf
add
rolb
cmc
scas
inc
test
lods
mov
push
test
inc
push
sub
cmp
int3
cmc
add
or
push
leave
mov
jae
ficomps
sub
push
cltd
push
cmpl
ss
add
subb
data16
mov
outsb
gs
je
push
int
movsl
lret
stc
inc
pop
js
add
xchg
lea
popa
adc
in
cmpsl
int3
and
cmp
push
xor
mov
outsl
sbb
stos
push
jg
scas
iret
or
outsb
test
das
dec
jmp
xor
jmp
pop
mov
mov
cmpsl
add
pop
pusha
jmp
shr
sub
push
and
jae
dec
and
roll
test
jns
popa
jb
test
or
pop
mov
imul
rolb
sub
rep
cmc
mov
or
cmc
pop
mov
test
jae
je
jmp
loope
sub
loopne
stos
sar
adc
fwait
lods
mov
xchg
dec
aas
test
or
adc
cmp
push
dec
rorl
and
lret
loopne
mov
pop
push
stos
rcl
mov
push
loope
add
jge
pop
cwtl
hlt
xchg
movsl
out
icebp
jl
lret
xor
stos
jle
push
ret
outsb
scas
xor
dec
jmp
adc
jmp
sbb
inc
fists
pop
int3
push
in
aaa
dec
pop
mov
sti
xor
lds
cmpsb
dec
cmpsl
dec
or
test
sub
ss
fimull
sarl
mov
pop
fs
bound
xchg
gs
sahf
test
sbb
jo
lret
mov
xchg
and
mov
negl
aas
add
test
leave
hlt
push
lds
aas
mov
xchg
push
sub
mov
bound
xor
fs
pop
mov
inc
or
dec
mov
cmp
mov
xchg
loopne
and
pop
imul
loop
sbb
ss
in
fadds
cs
pushf
stos
movsl
xor
sub
push
popf
cmp
jmp
in
data16
outsb
dec
orb
sbb
mov
cmc
push
push
and
inc
cmp
adc
js
add
or
lea
mov
push
pop
mov
push
xor
movsb
call
add
ja
mov
and
inc
xchg
pop
jae
mov
mov
sahf
ret
xlat
pop
aad
mov
push
test
sbb
mov
xor
test
andb
xchg
pusha
sub
xchg
jg
sub
pop
popf
and
fidivs
xor
test
inc
hlt
addb
mov
aam
rolb
sbb
sub
stc
jmp
inc
or
mov
fstp
jg
xchg
push
out
and
mov
xchg
movsb
push
js
mov
sahf
xchg
in
jg
add
jne
stos
lods
out
stc
leave
loopne
aam
xchg
test
cmp
hlt
sbbl
or
and
pop
sub
xlat
dec
das
cmp
iret
lcall
outsl
mov
int
mov
pop
push
add
xchg
push
push
pop
cmp
mov
insb
jne
imul
xor
adc
jnp
inc
addr16
shlb
out
imul
push
addr16
nop
je
jno
cmc
add
and
jb
mov
das
sbb
xor
xchg
add
fistl
scas
test
iret
fistpll
jbe
or
outsl
jns
xlat
jns
insl
imul
inc
aas
xchg
push
jbe
add
xchg
lret
loop
jnp
subl
mov
sarb
sbb
sub
sbb
leave
in
and
push
scas
xor
in
out
add
jl
cmpb
xor
fdivs
pop
test
jge
jecxz
lock
xorb
js
shlb
sahf
and
mov
ret
pop
jge
fisubs
xor
xor
in
push
cmpsl
mov
push
test
out
test
jmp
aam
pusha
imul
mov
cmp
push
mov
mov
bound
add
jno
fsubr
fistl
add
ss
push
adc
mov
inc
imul
fisttpl
into
and
outsl
popa
sbb
cmp
lods
push
mov
mov
movsb
sbb
aas
lods
fimull
hlt
push
push
sbb
out
arpl
sub
arpl
hlt
xchg
bnd
mov
cltd
pop
jg
fbstp
arpl
nop
mov
push
into
dec
push
in
adc
push
in
push
xor
xor
cmp
mov
push
jl
imul
aad
popa
mov
iret
test
ljmp
sar
jae
inc
or
sub
loop
cmp
test
mov
out
daa
movsl
or
shll
cli
add
mov
xor
jo
leave
daa
and
and
xchg
cmp
lock
mov
xor
pop
ss
xchg
xor
adc
dec
je
addl
negb
mov
pop
add
inc
xchg
push
inc
push
cmpsl
sbb
or
fisttps
out
cwtl
jo
movsl
clc
xlat
push
and
aaa
dec
cli
icebp
out
pop
jne
mov
pusha
xor
sarb
push
xlat
push
jnp
out
out
testl
int3
pop
pop
add
ds
fldt
repnz
xchg
mov
ja
and
push
lret
or
cwtl
insl
and
jno
insb
cmovp
fcomps
inc
inc
imulb
and
ffreep
pop
xor
mov
push
pop
push
xor
mov
pop
add
add
mov
mov
or
nop
dec
mov
in
dec
ja
aaa
ja
lahf
dec
or
ds
jne
cs
add
scas
adc
mov
sti
and
xchg
sti
mov
gs
cs
xchg
sbb
and
sub
test
add
test
adcb
and
sub
or
cwtl
xchg
lahf
stc
dec
movsb
mov
ds
jbe
xor
inc
aas
stos
sbb
dec
or
push
fsubrs
out
inc
inc
jle
xor
jae
jnp
fsub
push
jno
push
xchg
jae
in
jns
xchg
repz
test
ja
je
push
imul
pusha
nop
shl
xor
push
dec
mov
add
nop
xchg
orl
xchg
or
sub
lods
sub
cmpsl
dec
leave
sti
test
mov
jo
daa
sub
lcall
cmp
or
adcl
xor
fwait
sub
loop
mov
fst
adcb
inc
out
jbe
cmp
mov
cmpsb
js
or
movsb
adc
push
push
push
mov
push
inc
inc
dec
test
mov
and
lods
int3
inc
scas
fdivrs
xchg
cmp
mov
adc
jo
sti
arpl
xor
mov
aad
push
add
out
mov
push
clc
fs
xor
dec
pop
insb
pop
fidivl
aas
imul
test
adc
leave
loope
clc
sub
mov
pusha
inc
and
scas
arpl
imul
jo
sahf
sarb
mov
push
pop
cmc
pop
outsl
jnp
insl
xor
idivb
outsb
inc
out
outsl
scas
adc
sbb
lahf
es
sub
test
fildl
imul
sbb
test
lods
iret
fidivs
cli
pop
sbb
test
pop
push
and
jge
mov
mov
iret
xchg
or
add
lods
fsts
popf
jb
jb
test
fdivs
fstpl
lods
popa
push
shlb
xor
pop
daa
les
pop
test
sbb
xchg
jmp
ret
data16
lock
jns
cmp
jecxz
lock
aad
jecxz
dec
lret
outsb
hlt
sub
popf
xor
push
in
call
jle
rorl
mov
push
ljmp
cs
mov
pop
or
mov
hlt
mov
test
and
xchg
xchg
add
jb
adc
fisttpl
ret
jbe
icebp
or
in
xchg
in
xchg
push
fidivrl
dec
lods
jne
call
jmp
push
jno
cmc
sbb
jmp
sbb
push
iret
sbb
fisubl
xchg
jnp
lea
cli
pop
mov
jb
popa
lock
outsb
push
adc
dec
inc
shl
mov
cmc
jg
wbinvd
pop
lock
mov
roll
sub
loopne
add
cmpsl
xor
int
out
dec
cltd
stos
dec
jbe
aam
ljmp
mov
addb
inc
jbe
jg
mov
jae
imul
push
or
dec
mov
push
pushf
cwtl
mov
loopne
into
jp
stos
mov
xchg
test
rcrl
cmc
stc
lcall
inc
cmpsb
outsb
jg
loope
fdivrl
test
xor
mov
popa
int
fldcw
test
out
mov
std
and
incb
fcomps
stc
test
into
fldlg2
xchg
jb
and
xchg
inc
sbb
sub
inc
cmp
arpl
cmp
pop
and
out
fsubl
aaa
sbb
xorl
stc
pop
hlt
popa
pop
sahf
mov
xor
jecxz
pusha
xorl
jg
js
inc
pusha
arpl
ret
cmp
mov
cmpl
mov
enter
mov
xchg
or
sbb
add
stos
mov
stos
mov
mov
dec
add
lret
pop
pop
adc
add
mov
xlat
mov
lahf
inc
xchg
pop
pop
xchg
shlb
add
addr16
stc
pop
dec
inc
push
push
cmp
mov
icebp
xorl
mov
bound
add
and
push
rolb
aam
lods
mov
mov
imul
xchg
call
push
cmc
mov
mov
data16
dec
inc
mov
imul
adc
sbb
testl
sbb
inc
fs
pop
cmp
dec
cs
out
sahf
lret
push
aas
rcll
repnz
add
cmc
fsubrs
data16
addr16
push
lods
jno
pop
dec
bound
cmp
push
dec
sbb
loope
lock
faddl
mov
mov
pop
popf
mov
pushf
data16
shrl
xor
dec
and
adc
sub
adc
dec
popf
shll
mov
sub
fcompl
jg
dec
pushf
loop,pn
aam
into
sahf
sbb
std
jnp
bsr
cmpsb
out
rcrb
inc
lds
xor
imul
rorb
mov
pop
cmpb
lret
icebp
cli
or
jne
add
adc
sbb
cld
gs
pushf
inc
jb
movsb
fxch
push
adc
jecxz
idivb
stc
cli
add
sub
pusha
incb
cmp
xor
sub
mov
fldenv
out
mov
in
dec
pop
xchg
call
nop
cld
dec
insb
add
push
adc
and
test
leave
jmp
push
out
fstp
insb
mov
gs
mov
test
push
push
lods
arpl
sub
adc
popf
mov
fisttps
test
addr16
sahf
inc
nop
push
push
mov
mov
cmpsl
pop
fs
xchg
mov
les
jbe
dec
lahf
lods
cmp
cmpl
pop
adc
pop
js
fsubrl
pop
orl
cmp
lea
lret
in
dec
add
push
push
jbe
insl
cs
aam
fildl
fiadds
mov
and
stc
jno
test
dec
mov
mov
push
xchg
pop
mov
push
cld
adc
cmpsl
jp
push
idivl
test
rol
add
jecxz
shrl
pop
in
mov
sub
movsl
and
ds
lret
shlb
dec
pop
sub
xchg
int
jno
dec
mov
push
rolb
mov
stos
out
or
adc
jae
cli
or
mov
xlat
faddl
arpl
fsubrs
adc
mov
sub
scas
shl
pop
test
and
xor
push
xor
pop
scas
sbb
sbb
outsb
in
into
in
push
addr16
and
shll
or
mov
int3
and
inc
xchg
pop
nop
imull
jp
inc
jle
xchg
pop
es
xchg
xchg
int
in
sub
cmp
and
jg
and
in
mov
shl
fdivrp
push
cmpsb
js
js
fdiv
hlt
jne
cmp
shrl
push
xchg
mov
xchg
loop
insb
mov
sub
scas
pop
jmp
push
sbb
push
das
scas
dec
mov
cmp
pop
ret
shr
in
mov
repnz
pop
insl
clc
movsl
push
lcall
repnz
cmp
rorb
xchg
push
imul
mov
pop
cmp
sbb
inc
adc
jge
dec
xlat
loopne
lods
cltd
jg
das
fiadds
repnz
xchg
clc
sahf
jecxz
xchg
or
xchg
xor
and
cs
imul
adc
lods
inc
sbb
pop
jo
cmp
xchg
movsl
inc
pop
aas
or
aaa
xchg
xchg
lds
or
dec
dec
cli
jp
aas
popf
mov
lea
jg
daa
push
mov
push
sbb
addr16
cmpsb
or
stc
push
loop
jns
insl
mov
mov
lcall
pop
and
cwtl
dec
cmpsl
pop
add
jecxz
ret
loopne
lahf
mov
xchg
cmp
xchg
mov
adc
hlt
jnp
jmp
push
cld
lock
jg
mov
fidivl
xchg
outsl
repnz
adc
fisubs
add
mov
ljmp
gs
and
xchg
stos
mov
mov
mov
lods
jmp
idivl
inc
imul
pusha
notb
leave
ljmp
lods
and
xchg
sbb
pmaddwd
jno
mov
imul
pushf
jmp
add
push
sub
ds
dec
pop
out
fdivr
test
loope
sub
frstor
mov
loope
push
push
sti
negl
dec
ficompl
popf
inc
jbe
jno
fbld
jge
movsb
cmp
jl
jno
je
jg
dec
mov
testb
loopne
mov
or
shrl
pop
push
notb
cli
icebp
mov
cmpsb
int
or
arpl
push
push
repz
xor
cmp
jae
fisttpll
cmp
xchg
lods
shrb
jbe
repnz
mov
push
aam
fsubl
add
es
sub
stc
xchg
sub
mov
xchg
fstpt
pop
jle
sbb
jge
movsb
mov
outsl
es
jnp
xchg
pop
push
es
imul
addl
xor
jnp
push
dec
cmp
into
nop
fcomps
cmp
jg
xor
xchg
jno
roll
cwtl
inc
pop
pop
cmc
dec
xchg
out
xchg
enter
repnz
inc
or
jl
shrb
insl
cmp
push
testb
sub
sarb
push
inc
pop
dec
pop
sbb
sbb
notb
orl
and
pop
or
icebp
push
cmp
or
lods
mov
cmpsl
pop
push
test
lods
or
jns
daa
xor
sbb
mov
dec
push
adc
mov
mov
cmpsb
imul
mov
xor
and
cmp
jg
aaa
adcb
aam
adc
outsb
pop
jp
adc
ja
rcr
dec
pushf
sahf
jg
mov
mov
push
sub
pop
pop
pop
hlt
stos
adc
adc
or
cmp
xchg
push
and
nop
jns
shrb
in
xchg
mov
aam
lahf
roll
push
das
cmpsb
and
jg
add
daa
pop
cmp
notl
xor
or
mov
aam
cmp
cs
push
inc
push
xchg
fisubs
push
inc
test
cmp
cmp
pushf
sub
jb
jae
std
push
sub
add
jmp
ret
mov
imull
xor
cmc
test
fld1
mov
dec
or
insl
mov
outsl
sub
jp
xor
pushf
stos
dec
xchg
add
or
jne
push
xchg
pop
lret
dec
lahf
mov
cltd
mov
mov
daa
mov
xor
adc
sbb
cwtl
loopne
pop
dec
ljmp
sub
sarl
and
mov
cmp
lock
cmpsl
or
jno
outsl
cli
test
jp
loop
cmc
adc
xor
aam
mov
stos
mov
fnstenv
setg
or
clc
sbb
dec
mov
adc
mov
mov
mov
jge
jmp
mov
and
and
shll
popa
xor
push
scas
mov
roll
fidivs
sti
mov
aad
pop
push
jg
ja
xlat
mov
cwtl
int
clc
lods
xchg
loop
sbb
arpl
pop
xlat
aam
mov
fstps
mov
mov
fsubrl
push
scas
aad
test
sbb
mov
push
pop
mov
mov
in
inc
push
aas
sbb
mov
pop
pop
aam
cmp
outsb
cmc
jo
cwtl
dec
and
pop
jp
xor
push
push
or
mov
fbstp
ret
inc
subl
pop
test
lods
aad
xchg
jecxz
xor
pusha
and
cmpsl
nop
call
bound
fcmovnu
pop
xchg
int
pop
popa
in
sub
sbbl
mov
pop
push
and
mov
mov
lods
mov
lret
push
mov
sub
mov
mov
inc
jle
ficoms
xchg
rolb
cmpsl
push
xchg
std
or
icebp
out
sbb
iret
push
dec
sbbb
add
jae
cmp
and
sub
rol
dec
negl
xor
out
ret
cmp
idivb
mov
and
fucomp
push
dec
cmp
dec
shll
add
aas
add
mov
jo
hlt
repz
mov
mov
pop
push
or
aaa
arpl
push
daa
sbb
jnp
popf
sub
daa
dec
nop
sbb
or
test
jp
dec
jge
lcall
cmpl
push
fld1
mov
and
fisubs
call
rcrl
add
mov
mov
aaa
mov
shll
xor
movsb
dec
push
fwait
stc
mov
test
lahf
scas
sub
movsl
add
fdivl
ds
pop
add
fwait
xchg
xchg
sub
xor
jle
std
dec
les
and
imul
bound
test
aad
inc
xor
in
add
xor
and
out
push
push
loopne
or
popf
movswl
push
loop
aam
adc
fdivrs
icebp
xchg
inc
dec
repnz
sbb
mov
xor
ja
cmp
mov
push
xchg
push
pop
and
push
xor
push
jp
clc
push
ss
push
aas
dec
and
xchg
rorb
lret
mov
jo
pop
xor
imul
in
inc
test
xor
sbb
test
lahf
ds
mov
std
ret
fmull
jl
mov
xchg
dec
into
pop
popf
mov
ret
es
scas
movsb
pop
sarl
repz
lret
or
pop
mov
nop
pushf
mov
sub
xor
pushl
shll
or
inc
mov
imul
stc
popa
mov
inc
out
inc
fs
jmp
xchg
pop
cmpsl
in
loope
std
sbb
inc
mov
pop
addl
fucom
add
stos
fsub
dec
lret
jno
out
js
test
jbe
jecxz
lods
or
in
jne
push
push
cmpsl
popa
mov
movsl
mov
jp
mov
mov
loop
adc
movsb
push
xchg
sbb
sub
jo
loop
enter
in
in
sub
sti
cmpsl
pusha
pop
dec
xor
rclb
lret
out
call
mov
inc
stos
xor
mov
cmp
sub
lods
or
in
push
and
or
inc
xor
xor
sub
inc
repz
sub
gs
aas
clc
inc
add
inc
hlt
dec
adc
pop
cmp
nop
mov
mov
movsl
ds
adc
add
push
and
and
mov
addb
fisubrl
imul
iret
xchg
decb
pop
test
js
and
xchg
lods
push
out
int
data16
pop
les
test
and
cld
add
cmp
testb
repnz
sub
aad
sub
movsl
pop
and
cmp
stc
and
insb
ds
push
bound
dec
pop
gs
jnp
insb
push
add
xchg
cmc
push
jecxz
notl
lods
push
fiadds
pop
outsl
int3
inc
insb
aam
ja
mov
cld
mov
je
mov
call
sbbb
imul
negb
data16
and
cmp
mov
popa
aad
mov
adc
ljmp
cmpsl
leave
ja
test
jae
roll
inc
cwtl
cmp
adc
jae
mov
lods
test
xchg
pop
sbbb
hlt
inc
xor
jno
icebp
xlat
aam
inc
leave
dec
add
dec
push
mov
stos
push
ret
data16
mov
mov
fs
cmp
lock
or
and
lods
and
mov
fcompl
stc
fisubs
adc
push
enter
sbb
in
mov
lock
shlb
xchg
jo
jmp
fwait
and
mov
pop
and
sub
and
data16
adc
lcall
popa
sbb
push
cmove
stos
fs
push
adc
xor
push
rcl
mov
in
lods
lret
mov
fdivl
stos
pusha
int3
mov
cmp
push
in
or
bound
cmp
or
mov
mov
movsl
dec
cltd
testl
or
lods
out
ljmp
rolb
into
jne
fstpt
imul
adc
cmp
xor
adc
int
sti
push
fldln2
push
sub
mov
sub
repnz
mov
aad
adc
push
mov
cltd
int3
or
std
adc
cltd
pop
inc
push
mov
sub
jns
inc
cmpsb
push
sub
mov
jb
cli
sub
aad
addb
lods
mov
mov
cmp
popa
sbb
pop
out
or
lock
inc
outsl
xor
jo
dec
xchg
xchg
add
outsl
xor
mov
idivl
push
out
jl
jo
sbb
pop
mov
mov
ss
push
rclb
mov
in
jp
lods
adc
ret
jbe
jmp
test
iret
stc
sbb
inc
sbb
stos
adc
sub
fwait
pop
push
pop
jge
faddp
xlat
mov
shrb
out
insl
push
sbb
aam
sub
add
and
ficomps
push
dec
cmp
push
xchg
xor
xor
mov
cli
pop
adc
sbb
jno
fiaddl
pop
pop
add
jmp
jae
sub
cmp
lret
cs
adc
nop
dec
addr16
cli
mov
xchg
dec
test
aas
sbb
pushf
xor
shr
jb
push
push
and
jno
mov
adc
ds
outsl
fs
push
mov
int3
and
pop
lret
sahf
sbb
imul
inc
bound
test
pop
loop
orl
push
mov
arpl
mov
or
ror
cwtl
sub
push
jne
scas
aad
mov
pop
push
sti
inc
xchg
inc
shrl
xchg
xchg
scas
and
fmull
jns
xor
out
fwait
push
out
jbe
jne
std
dec
fmuls
inc
addl
or
pop
popa
or
mov
clc
sub
int3
insl
shll
je
or
xor
mov
in
sbbl
xchg
and
and
in
aaa
or
out
idivb
test
lds
jne
pop
mov
dec
rdpmc
dec
xlat
bound
in
ror
mov
inc
sub
sbb
xchg
out
loopne
in
fwait
mov
and
jecxz
add
lahf
je
pop
xchg
or
cwtl
cmp
icebp
inc
jns
add
imul
and
mov
cld
test
or
outsl
jns
xor
jecxz
lcall
and
out
cmp
fisubl
xor
pop
mov
outsl
movsb
xchg
sub
mov
dec
lcall
inc
mov
sub
sbbb
dec
cmpsl
repnz
lds
inc
xchg
sub
sbb
inc
sbb
call
stc
mov
andl
cli
push
loope
sbb
jae
sbb
icebp
dec
inc
movsl
dec
and
or
out
and
lods
push
jmp
inc
cld
push
les
ffreep
out
sti
xor
ljmp
push
scas
cmp
aad
push
jbe
cmp
dec
and
mov
loope
push
sub
jge
or
and
push
sbb
xchg
decb
xchg
xchg
inc
mov
lcall
dec
push
xchg
insb
divl
push
or
or
out
jg
icebp
mov
test
popa
ret
das
jmp
xor
xchg
test
mov
sbb
mov
aad
ja
shll
sbbb
xor
pop
pop
loopne
inc
and
and
lahf
shlb
lods
scas
xchg
mov
mov
push
push
std
jbe
test
aaa
pop
adc
xchg
xor
add
xchg
lock
xor
cmp
fsts
mov
rol
pop
orl
js
adc
inc
jb
xor
push
addb
sub
rcr
xchg
out
xchg
mov
mov
loope
mov
sbb
push
aas
mov
adcl
add
je
add
sub
lcall
scas
popw
daa
insl
in
lahf
lock
fdivrl
fyl2xp1
js
lods
roll
cmp
pushf
and
sbb
std
mov
xor
xlat
mov
mov
fadds
xor
mull
dec
lcall
in
cwtl
ficoms
push
rorb
test
js
mov
pusha
aaa
fdivl
push
push
shll
sub
iret
add
cmpsb
pop
pusha
scas
dec
jnp
imul
fwait
in
push
add
icebp
loope
adc
xor
repz
out
mov
cltd
jmp
xor
mov
jns
dec
dec
dec
ret
mov
dec
mov
mov
lds
xchg
call
push
ret
test
dec
mov
gs
lods
je
sub
cmpsb
pop
mov
push
fsubrp
fsubr
and
mov
add
ja
jno
inc
xor
jecxz
lret
fwait
mov
gs
out
and
inc
xchg
jg
push
std
iret
mov
insl
cmp
pop
sbb
lea
rcrl
mov
aad
cmp
mov
inc
dec
popf
test
xor
pusha
out
xchg
jb
jb
pop
out
and
repz
pop
lret
sbb
in
test
jbe
fiadds
mov
add
xor
int
out
movsl
push
mov
add
adc
in
daa
addr16
xchg
in
and
test
adc
pop
fs
cs
push
fisttpll
in
out
dec
bound
out
inc
lahf
jp
xor
enter
inc
jl
repz
std
sbb
ljmp
inc
mov
pop
jle
clc
repnz
clc
lods
mov
xchg
out
subl
stos
adc
fiaddl
xor
imul
mov
jl
pop
adc
scas
hlt
dec
inc
sahf
push
mov
mov
addr16
cmp
outsl
mov
into
ss
rclb
xor
inc
idivl
inc
push
sub
mov
int3
cmp
push
or
hlt
in
loope
imul
dec
insb
popf
scas
ds
jno
inc
clc
xlat
lret
jle
insb
ja
scas
es
sti
mov
adc
jb
jg
xchg
std
inc
mov
fists
out
cmpsl
push
cmpsl
mov
inc
mov
ja
xchg
cmp
addr16
test
sub
jne
sub
xchg
stos
lret
cltd
cld
lods
cmp
mov
popf
jle
cmc
pushf
leave
das
xchg
icebp
jbe
popf
lods
in
or
loop
mov
movd
outsl
pop
cmp
xchg
and
test
xchg
adc
pop
aam
dec
insb
das
cmp
lds
jae
fists
test
insl
and
mov
pop
and
jns
xlat
fstpt
cmp
clc
rcr
push
sub
out
addr16
sarb
sub
jle
fdivrp
cltd
add
jmp
xchg
scas
inc
xor
and
imul
shl
mov
enter
aam
pop
xchg
shr
sbb
test
dec
dec
popa
stos
xchg
jb
jns
cmp
pop
cmp
jge
loopne
xor
roll
je
das
aaa
shrl
pop
jnp
dec
into
pop
cld
and
pop
loop
fidivrs
push
inc
mov
lahf
ja
push
popl
sbb
push
mov
mov
fildl
and
fstp
mov
insb
stos
push
gs
leave
pop
jecxz
xor
loope
xor
iret
mov
inc
adc
sbb
xlat
sub
adc
shl
jnp
les
cmc
push
xlat
inc
fs
push
shll
ss
push
mov
cmp
insl
scas
push
lods
or
push
sahf
inc
lret
add
aam
ret
push
das
sub
aad
hlt
adc
mov
adc
adcl
cmp
cwtl
aas
fimull
ror
popf
pop
pop
jo
pop
inc
mov
adc
popa
adc
cwtl
push
dec
adc
orb
xchg
inc
iret
sub
negl
jno
inc
ja
es
test
cmp
popa
push
call
mov
push
xchg
pop
pop
adc
in
shl
rcll
jecxz
arpl
jl
nop
fcoms
and
lahf
iret
dec
push
jg
rcll
les
fs
xor
xchg
pop
xchg
cli
loope
fiaddl
push
and
and
push
xor
mov
add
or
cs
repnz
rorl
cmc
adc
bnd
and
je
xchg
inc
or
inc
scas
mov
ljmp
mov
jmp
mov
imul
mov
dec
data16
repz
jmp
int3
sub
sti
sbb
fdivr
test
jno
sub
mov
jbe
xchg
fs
lods
add
sub
lock
popa
and
cwtl
adc
clc
jle
icebp
scas
neg
lods
clc
sub
sub
cmpsl
in
nop
and
jo
mov
inc
out
fadds
aaa
sbb
xchg
cltd
cmp
rorl
push
xchg
cld
repz
xchg
mov
mov
sbb
jne
jb
dec
xchg
jg
inc
xor
data16
aaa
jg
push
xchg
cmp
lahf
push
and
imul
mov
out
xchg
cltd
daa
pop
int3
cmpsl
xchg
cwtl
push
jl
or
inc
sub
mov
test
mov
inc
cmp
repnz
iret
mov
mov
pop
mov
sbb
movsb
mov
ret
fists
fnstsw
mov
rcrb
icebp
lods
xrelease
stos
xor
jmp
sbb
mov
jl
pusha
fiadds
fimuls
loope
jle
xchg
cs
jo
shrb
and
loope
jae
arpl
les
inc
in
sub
enter
repz
jo,pn
cs
jno
rol
popf
push
cld
jo
and
dec
outsl
loop
mov
fsubr
sub
dec
iret
xchg
push
or
xchg
in
pslld
mov
pop
das
lock
jb
in
jmp
or
jnp
movsb
pop
mov
cs
lods
xchg
roll
cmp
jp
dec
rcl
int
mov
xor
dec
std
pop
inc
testl
jo
addr16
mov
mov
lods
xor
outsl
mov
out
lea
or
dec
push
sub
sti
je
push
lods
movsl
and
jne
push
pop
mov
cvttps2pi
mov
jo
stos
lgdtl
mov
and
pop
loope
lea
xor
lods
or
pusha
fnstenv
dec
popf
icebp
cltd
fs
dec
inc
inc
cltd
xchg
outsl
test
xchg
mov
pop
dec
negl
jno
add
pop
or
mov
mov
push
cmpsb
jmp
popf
gs
push
sbb
es
inc
aaa
stos
dec
pop
cld
mov
outsb
and
jge
ss
or
paddsb
cmp
lret
mov
popa
scas
out
mov
sbb
lahf
pop
insb
cmp
arpl
call
stc
insb
push
add
pop
ficomps
jle
cmp
xlat
aad
and
mov
mov
in
mov
sti
cli
pop
push
loopne
dec
cmpsl
push
lods
sub
test
adc
push
sbbl
fidivl
lock
mov
stc
cld
or
jp
pop
add
push
sub
repz
cs
sub
ljmp
std
jge
repz
lods
sar
in
fdivr
cmp
loope
sbb
cmp
cltd
or
aad
or
imul
mov
fcomi
adc
in
dec
sub
in
mov
xor
cmpsb
mov
xchg
inc
scas
xor
ret
jne
mov
pop
sbbb
test
imulb
mov
outsb
mov
int3
push
adc
inc
push
jecxz
push
call
test
ficoml
in
fmuls
shl
mov
mov
xchg
imul
ret
lods
jmp
xor
xlat
dec
xor
mov
cwtl
mov
dec
movsb
xlat
out
or
test
cmpsb
addr16
push
in
outsb
push
push
inc
sub
outsb
inc
add
repnz
outsb
sbbl
inc
cmc
test
add
cld
add
stos
pop
insb
aaa
dec
loope
lcall
xor
repz
clc
mov
and
lahf
fwait
mov
incb
fistps
andl
test
or
add
mov
sbbb
repnz
vpmaxub
pop
cmp
hlt
dec
cltd
in
jb
outsb
mov
lds
push
or
push
in
das
mov
mov
test
ret
adc
sahf
jecxz
push
mov
sbb
cmp
mov
jae
in
dec
mov
sub
dec
icebp
mov
cmp
clc
push
add
sarb
lds
jp
call
test
jno
pop
cmpsl
fiadds
sbb
dec
push
inc
ficomps
mov
adcb
jp
mov
xor
mov
pop
rcrl
adc
int
pop
aas
add
pop
sub
repnz
sub
adc
xchg
mov
lcall
or
jp
pop
xchg
xchg
pushf
mov
test
cli
sbb
jmp
mov
nop
or
rcr
stos
sub
mov
and
dec
mov
jle
jecxz
push
jae
mov
pop
mov
ja
sub
dec
sahf
add
fcoml
jecxz
cmpsl
jb
inc
add
fstp
cmc
mov
adc
arpl
or
scas
outsl
enter
stc
inc
push
das
cmp
jnp
dec
and
out
add
iret
filds
xchg
pop
icebp
test
dec
icebp
dec
sub
in
mov
cwtl
sbb
fiadds
repnz
mov
repnz
aas
nop
jmp
xor
mov
das
test
rcrb
xlat
push
test
data16
out
ja
and
and
jae
cmpb
mov
jno
out
push
cs
push
lret
and
sbb
cmc
sbb
es
sub
fnstcw
mov
inc
sub
jo
adc
hlt
aaa
lret
fxch
and
cmp
call
add
cwtl
inc
pop
dec
test
pop
pop
sbb
dec
loope
mov
dec
xchg
gs
mov
nop
subl
xor
outsb
push
jecxz
push
mov
dec
sub
insb
ja
lea
lds
icebp
dec
popa
fildll
xchg
loopne
shr
xchg
jo
pop
scas
rolb
fimuls
cmp
imul
xor
je
fsubrl
inc
movsb
jno,pt
std
cld
inc
inc
dec
push
fwait
sti
fdivrp
lahf
lods
pop
push
outsl
into
or
inc
fldl
in
sub
rcrb
cmp
add
mov
jmp
aas
mov
mov
dec
cwtl
inc
jge
cmp
jne
mov
jne
jnp
inc
inc
scas
jmp
cwtl
xlat
cmp
pusha
xor
std
pop
aad
fcomps
jle
shll
sub
and
push
pop
or
iret
ds
sbb
pop
jnp
mov
jnp
out
gs
xchg
xor
inc
mov
repz
pop
pandn
sbb
inc
add
data16
xchg
dec
mov
lcall
scas
fwait
aad
mov
insb
movb
mov
aam
push
divl
xlat
mov
pop
mov
pop
or
xlat
inc
nop
pushf
inc
cli
pushf
fsubp
decb
jne
xchg
xchg
dec
test
aad
mov
das
add
ret
frstor
push
stos
mov
scas
sub
mov
cmpsl
lods
cld
mov
cmp
and
jge
dec
or
js
and
xor
mov
cmpsl
movsl
xor
mov
out
dec
inc
jnp
lock
popa
lea
dec
and
push
out
lods
xchg
dec
mov
add
jno
xor
adcl
jl
nop
jmp
and
fwait
sbb
push
addr16
cli
stc
jge
or
ljmp
ds
adc
cld
lret
bnd
dec
lcall
icebp
mov
mov
aad
push
adc
test
push
and
aaa
cli
fdivrl
and
mov
sub
loopne
push
mov
push
push
dec
pop
cmp
push
mov
call
sbb
fisubrs
es
xchg
test
adc
adc
adc
aaa
xchg
loop
mov
ret
in
cltd
xor
out
and
fisttpl
mov
mov
out
jge
rclb
adc
stos
test
cmp
cmp
pop
add
jo
mov
int3
negl
pop
mov
lcall
lcall
sub
cli
inc
jp
cmc
inc
mov
in
jnp
bnd
cld
jb
pop
push
loopne
lea
sahf
dec
dec
roll
mov
fs
mov
lcall
push
pusha
negl
in
out
mov
dec
dec
push
shll
mov
dec
cmpsl
xlat
adc
or
aad
aad
push
scas
and
in
into
jbe
mov
or
mov
jnp
ds
iret
cwtl
pop
loop
cltd
cld
or
mov
in
lret
jnp
sub
test
push
add
lcall
lret
mov
popf
popf
or
test
out
pop
xchg
sarl
inc
sbb
xlat
push
push
xor
clc
incb
subb
stc
imul
add
push
and
addr16
das
aad
addr16
shl
sub
push
mov
mov
dec
loopne
mov
dec
xor
js
enter
mov
scas
daa
mov
cltd
or
sbbl
gs
jmp
adc
cld
in
push
cmp
xchg
sub
mov
fucom
cmpsb
mov
xchg
cld
sub
sub
ret
ja
cmc
sub
aad
sbb
jmp
pusha
das
add
or
in
xchg
adc
mov
call
cmp
cmpl
sub
shrb
cs
pushf
inc
jecxz
data16
push
ja
nop
add
stos
push
aas
in
mov
jns
xchg
mov
jg
dec
dec
mov
sti
jne
lret
mov
mov
pop
ljmp
add
cmp
xchg
dec
mov
pop
in
pop
pop
cmp
pop
lret
lcall
jl
add
sbb
sbb
movsl
mov
push
jno
jbe
sbb
mov
fistps
and
jnp
mov
es
adc
cmp
daa
push
mov
mov
sbb
lods
jne
cmpsb
lods
loope
and
mov
andl
lret
or
jnp
jbe
iret
pop
imul
sti
inc
add
mov
ret
movb
xchg
xchg
pop
divb
test
mov
cs
xor
daa
jns
xchg
int3
adc
lcall
push
push
mov
js
adc
out
fnstcw
ret
out
movsb
nop
push
jbe
cli
jo
jo
pusha
loope
data16
movsl
cwtl
add
sub
mov
mov
into
jp
in
mov
stos
jle
lock
push
test
sbb
cmp
out
xor
sub
xlat
inc
and
mov
cs
xchg
cmpsb
xchg
leave
int3
bound
mov
jno
jmp
inc
pop
inc
mov
and
dec
fsubrs
and
xor
mov
and
pusha
inc
lods
pop
mov
cmp
sbb
push
xor
movsl
ja
sub
sub
mov
test
cmc
call
mov
mov
jns
out
negb
or
fistpl
sub
mov
push
mov
insb
insb
lods
test
icebp
xor
add
subl
and
enter
das
inc
inc
mov
popa
xchg
fwait
or
test
pop
jbe
jb
mov
mov
lret
jmp
and
stos
imul
rolb
push
test
jbe
inc
lock
and
insl
or
ss
cmpsl
xchg
outsl
push
push
jge
into
jnp
stos
jecxz
and
nop
aam
lods
jge
push
divb
test
imul
xor
rcr
int3
bnd
test
cmp
sahf
adc
adc
xchg
in
mov
pop
fucomip
repz
cmpb
bound
sbb
fs
and
cmp
jb
jmp
lahf
cmpsb
fsubs
mov
imul
fistps
dec
in
sarb
aas
mov
outsb
jbe
std
dec
xchg
fbld
add
testb
lods
nop
pop
mov
jle
mov
pop
mov
lret
inc
into
cmpsl
pushf
push
add
sub
adc
mov
imul
or
sbb
xchg
fs
adc
push
mov
or
or
inc
xchg
aam
mov
int3
stc
shll
pop
cmp
mov
add
int
push
pop
idivb
fcmovbe
adc
out
pop
stos
mov
shl
mov
add
push
lods
dec
arpl
ja
lods
cltd
mov
ret
and
cli
cmp
adc
and
sar
iret
dec
sub
mov
pop
inc
push
test
inc
mov
sbb
cli
int3
fcoms
lahf
in
loope
repz
icebp
shl
jl
jge
push
inc
fcmovb
xchg
or
pop
loope
cmp
arpl
rorb
add
cmp
mov
jl
ficoms
mov
leave
iret
inc
fnsave
jo
sti
mov
or
aam
mov
mov
mov
mov
test
repnz
pop
xchg
xor
imulb
push
or
xchg
arpl
dec
and
or
bound
pop
stc
imulb
mov
addr16
nop
imul
pushf
mov
jmp
jb
popl
stos
shrb
xor
mov
cmp
jp
jb
sub
lahf
adc
stos
fcmovnb
int
adc
inc
xchg
dec
sbb
iret
cli
out
xchg
dec
inc
pop
test
fcomps
aaa
cli
push
sahf
sbb
push
es
adc
mov
ljmp
stos
aam
pop
testl
mov
jo
mov
jno
scas
dec
popa
rorl
sti
mov
mov
addr16
jnp
dec
or
jmp
cli
inc
pop
imul
cmp
in
repz
gs
in
jmp
mov
addr16
xchg
out
divb
ret
sbb
add
sbb
mov
cli
fcomip
cwtl
cmp
mov
leave
sarl
sbb
daa
sbb
mov
popa
push
xchg
aas
cmp
test
ret
pop
jl
imul
out
out
inc
into
mov
dec
sti
nopl
add
pop
jmp
push
or
jns
pop
jno
movsl
add
jo
fadd
movsl
xor
ljmp
fucomip
in
notb
cld
orb
outsl
jg
jne
jae
xchg
push
shll
packsswb
xchg
or
in
and
xorl
orb
mov
hlt
and
sub
sub
test
adc
scas
lret
xchg
cmpsb
or
cwtl
inc
xchg
sbb
mov
pop
mov
sbb
dec
subb
enter
out
ficomps
mov
xchg
adc
push
cmp
fidivrs
out
lahf
add
dec
mov
inc
xor
adcl
lret
lahf
mov
dec
cmp
andb
dec
push
test
xor
jnp
mov
adcl
mov
push
fadd
xchg
cli
clc
push
pop
cmp
lcall
cmp
rcll
ljmp
and
repnz
and
and
cmp
mov
pop
or
and
jns
push
popa
jge
jo
fucomp
xchg
cmp
or
aam
push
sti
hlt
mov
lds
sti
ja
pop
lods
fidivrs
dec
stos
stos
jg
lret
add
and
rcl
lds
cmp
xor
fldt
outsl
ret
pop
fsubs
sub
mov
in
fidivs
les
sub
in
fistl
popa
or
aaa
xor
das
adc
mov
dec
shrl
jg
js
xor
adc
outsb
out
pop
xor
lds
cwtl
loop
call
and
sbb
aaa
test
mov
dec
ja
dec
jo
fs
cs
aaa
fnsave
lahf
xor
mov
sub
or
inc
pop
sbb
adc
mov
imul
and
nop
mov
fisttpll
mov
dec
out
inc
inc
pop
or
adc
adc
sub
mov
insl
rcl
inc
push
mov
pushf
repnz
sbb
add
pop
insl
scas
fidivl
dec
insl
jb
jmp
jge
imul
lret
jle
loope
test
mov
enter
cwtl
mov
out
addr16
push
into
inc
dec
mov
add
sub
push
test
imul
pop
mov
lods
sti
cld
and
stc
ljmp
nop
mov
xchg
mov
ret
call
mov
or
add
dec
mov
inc
movsl
jnp
je
mov
lods
scas
xlat
push
inc
or
push
shll
pusha
cli
xchg
inc
jg
mov
sub
mov
xlat
sbb
test
inc
push
in
outsb
nop
xlat
jp
insl
sbb
out
pusha
out
pop
add
insl
jne
shll
cltd
je
imul
adc
loopne
cmp
inc
sbb
jge
xor
imul
in
adc
jg
jge
insb
sbbl
xchg
add
fmull
mov
or
push
inc
inc
mov
cld
sub
inc
mov
sbb
pop
repnz
adc
add
mov
inc
sbb
dec
test
ja
sub
jbe
xchg
mov
pop
cmp
push
mov
adc
pop
repz
xor
jle
push
mov
adc
aaa
adc
daa
imul
nop
jmp
shr
pop
pop
sub
push
xchg
or
xchg
rorl
lahf
or
addr16
ljmp
jbe
addb
dec
inc
add
roll
fisubl
out
jbe
dec
sbb
sbb
lock
lods
mov
and
shr
sub
lock
imul
cli
add
or
jns
xchg
fstpt
sub
jle
sbb
or
andl
pop
dec
mov
aad
mov
sbb
mov
and
dec
sbb
inc
out
lea
push
jmp
pop
ret
fcomip
xor
sub
xor
shl
pop
and
xor
cmpl
iret
rolb
lock
xor
or
aad
stc
add
aaa
push
lds
pop
mov
or
inc
adc
push
mov
stc
imul
outsl
mov
sbb
test
ss
pop
sbb
jo
pop
jg
jp
divl
xor
dec
mov
mov
cmpsl
push
call
dec
orb
in
or
jl
enter
imul
jns
int3
les
cs
or
into
mov
xchg
xchg
push
shll
or
and
stos
or
dec
mov
mov
dec
push
je
sbb
call
sbb
sub
mov
push
inc
outsb
in
cs
add
repnz
mov
or
mov
pop
xchg
pop
aam
add
rcl
mov
add
int3
lcall
fildl
push
mov
mov
outsl
in
dec
xor
shrl
sti
int
jno
cmp
cmp
inc
bound
push
mov
in
sbb
outsb
jle
cwtl
lock
popa
mov
cmp
nop
out
int3
xor
jmp
cmpsl
jae
mov
jle
push
mov
dec
xchg
popa
xchg
sub
fidivrl
test
pop
mov
push
sbb
push
adc
push
push
mov
mov
jno
pop
adc
push
add
lock
in
pop
outsl
andb
jnp
dec
cld
stos
mov
test
stos
inc
xchg
mov
jmp
jmp
push
aas
das
rcrb
into
jb
jo
xlat
sar
push
cmp
fimull
inc
ja
push
inc
fxch
mov
add
sbb
or
outsl
xchg
hlt
fldenv
sub
push
cmp
mov
mov
out
enter
loopne
lods
cmp
jge
call
lods
inc
pop
or
add
mov
call
inc
test
testb
imul
push
push
imull
cltd
or
sbb
outsb
cltd
mov
clc
movsb
jbe
outsl
rcrb
stc
sbb
aad
jae
insl
adc
into
test
cmc
stos
adc
rcrl
loop
cwtl
aad
dec
lea
ss
out
xor
cs
pop
add
jmp
and
imul
xor
clc
cmp
out
std
ret
out
dec
and
xlat
pop
push
stos
add
repz
movsl
push
loop
fstpt
jge
sub
dec
sbb
jbe
mov
jo
lock
fdivl
aad
sbb
out
mov
mov
xchg
push
popa
jmp
xor
test
imul
pop
nop
and
sbb
adc
mov
lds
cs
mov
rolb
and
or
enter
adc
shlb
mov
adc
push
pop
jno
in
pop
mov
sbb
imul
or
mov
jo
xchg
btc
jne
push
out
and
sbb
ret
orb
mov
je
push
scas
xchg
push
out
inc
pavgw
dec
pop
jl
mov
add
ja
fs
mov
adc
and
jo
ss
test
xor
and
out
cmp
fdivr
mov
cmp
int
or
out
test
inc
les
cmpsl
lods
repnz
inc
cmp
pop
ret
stos
inc
mov
or
gs
pop
test
mov
cmp
nop
pushl
stos
ja
cwtl
fs
fildll
ret
xchg
pushl
add
sti
stos
jne
xchg
cltd
lret
movsl
ljmp
inc
outsb
shll
push
lret
sub
or
mov
leave
mov
dec
hlt
hlt
stos
hlt
mov
push
test
sbb
add
sub
xorb
loope
sahf
sarb
xchg
push
jg
in
push
mov
or
and
xchg
push
jo
daa
mov
insl
addr16
test
jge
ret
adc
iret
es
je
xchg
xchg
cmc
cs
mov
shrl
jmp
inc
jecxz
mov
xor
test
xchg
mov
lods
jecxz
pop
mov
imul
push
stc
addb
xchg
mov
xor
add
cmp
push
dec
xor
inc
cmp
fdivs
push
mov
out
push
aas
jp
or
ror
rcrl
jle
nop
push
sbb
push
lret
mov
add
fs
pop
bound
pusha
dec
push
scas
into
cmp
and
js
lds
jb
push
and
clc
inc
xchg
xor
outsb
inc
aaa
adc
xchg
dec
notb
xor
pop
xor
lock
gs
fucomip
xchg
dec
ror
jmp
jns
ret
lds
dec
hlt
icebp
aas
movsl
sarb
lret
dec
rolb
xor
xchg
roll
fdivrl
gs
jo
popf
add
adc
pusha
or
dec
add
push
mov
clc
or
jmp
xor
and
cld
mov
pop
hlt
fldcw
xor
jne
cwtl
xor
sbb
mov
jmp
icebp
inc
sbb
pop
inc
adc
data16
jae
sahf
and
adc
xlat
xchg
xlat
push
mov
into
mov
push
mov
push
or
sbb
jns
sbb
repnz
mov
add
loope
pusha
movsl
aas
mov
cmp
adc
lret
dec
or
fnsave
stc
or
push
mov
mov
jns
mov
lahf
inc
and
push
adc
ret
cmp
lds
jge
cmp
xchg
mov
mov
imull
outsl
or
push
or
push
lahf
add
movsb
into
pop
dec
mov
sbb
hlt
adc
shrb
cli
mov
shl
scas
mov
xchg
sbb
sub
xor
mov
push
dec
dec
push
test
mov
fidivrs
pop
fldenv
movsb
outsb
mov
cmpsb
mov
imulb
outsl
cltd
das
adc
outsb
adc
pop
push
fisttpll
loop
inc
mov
dec
ds
cld
sub
insb
mov
mov
mov
int3
pusha
dec
mov
xchg
and
pop
push
xchg
roll
test
xchg
in
lods
lahf
cmpb
xlat
pushf
ficoms
cmp
adc
movl
mov
loope
add
and
out
jg
fs
adc
cs
outsb
sbb
in
mov
xchg
stos
fstl
pop
nop
jmp
dec
or
adc
mov
shlb
jge
push
sub
shlb
ds
test
jg
dec
mov
sub
adc
or
add
rol
mov
lcall
sub
dec
mov
shl
sub
in
xor
xchg
xchg
enter
lds
mov
int3
in
fdivp
add
inc
and
jbe
cmpsl
outsb
leave
dec
lcall
sbb
ror
adc
ljmp
stos
pop
pop
test
dec
in
cld
add
cmp
es
sbb
mov
push
adc
aam
dec
or
and
gs
fidivl
test
adc
fisubs
fdivr
inc
add
cwtl
dec
scas
dec
mov
insl
add
cmc
jo
cmc
iret
sarl
test
sbb
inc
add
mov
ficomps
cmp
and
aas
lods
sub
pop
in
adc
hlt
and
daa
test
xchg
ficoml
xchg
stos
imul
add
cwtl
int
and
jnp
movntps
call
push
gs
enter
inc
cmpsl
cmp
pop
and
outsl
cmpsb
jmp
insl
sti
fdecstp
push
jo
fs
sbb
pushf
in
call
in
sahf
in
pushf
push
pop
and
test
hlt
int3
mov
ljmp
mov
stc
pop
add
xlat
lcall
aam
pop
push
ljmp
inc
adc
jp,pt
out
ss
pop
xorb
jl
hlt
enter
ja
sub
fidivrs
and
sbb
lret
mov
lods
in
fwait
test
xor
movsb
nop
ja
xchg
movsl
les
into
mov
add
pop
das
push
sbb
jno
out
inc
mov
mov
adc
mov
jecxz
jl
adc
cmp
daa
aas
js
loop
lret
xor
daa
mov
inc
cmp
mov
clc
add
xlat
int
mov
adc
aas
fwait
out
dec
sbb
sbb
or
inc
iret
jne
mov
nop
push
mov
test
sbb
arpl
and
jmp
mov
lea
aaa
popl
sub
scas
lahf
xor
insl
imul
jle
mov
xchg
aam
pop
das
scas
pop
mov
and
and
test
pop
pop
jnp
inc
push
test
insl
ja
add
test
pop
adc
add
and
clc
jp
fbstp
cmc
adc
nop
xchg
sbb
stc
xchg
sbb
bound
cltd
mov
lods
pop
jp
mov
inc
out
push
cmp
jne
les
mov
stos
mov
push
adc
inc
addr16
flds
cld
cwtl
mov
lcall
imul
ret
addr16
adc
cmp
xor
cld
jecxz
popa
bound
pop
ja
adc
cmpsl
push
jnp
sbb
lods
xor
enter
jnp
notb
mov
sbb
cmp
add
popa
push
sub
push
or
pop
lcall
pop
setb
xchg
adc
pop
out
fnstsw
pop
jg
lret
xor
sbb
push
dec
pop
add
daa
mov
pop
outsl
xchg
test
fcompl
movsb
hlt
popf
mov
mov
push
lea
add
sbb
cmp
popf
adc
inc
pop
xchg
daa
fwait
inc
lock
push
add
test
mov
mov
in
push
dec
dec
or
xor
xor
adc
inc
sbb
cmpsl
inc
or
dec
lret
mov
mov
aad
scas
push
jmp
xor
ljmp
aaa
das
mov
pop
loop
pushf
test
xlat
ficompl
xchg
rorb
sub
mov
pop
jmp
cmpsb
arpl
pop
decb
xor
leave
adc
xchg
mov
or
mov
dec
test
nop
test
push
shrb
imul
popf
sub
mov
inc
lahf
in
nop
cmp
cmpsl
fst
aas
in
jmp
popf
cmc
mov
add
fnstcw
cmp
fwait
xchg
out
xor
jnp
outsb
adc
std
jg
jle
xor
sub
out
add
pushf
jge
inc
shl
jb
lret
int3
dec
flds
push
lret
pop
sahf
push
fs
and
and
jns
mov
imul
add
mov
fnsave
push
and
dec
jge
mov
cmc
push
pop
ret
frstor
and
push
into
and
sahf
and
lahf
pop
mov
mov
lcall
inc
hlt
cmp
mov
sub
out
stos
xchg
orl
rclb
dec
adcb
sub
insb
push
gs
push
lcall
add
mov
int
push
sub
in
dec
daa
jl
jle
fsts
jmp
lods
xor
lret
mov
dec
idiv
inc
pop
jnp
lcall
mov
movsl
jbe
mov
or
les
xchg
scas
les
push
adc
test
call
sub
pop
cmpsb
ja
stos
cld
sbb
mov
sbb
popf
mov
jns
in
fistpl
adc
iret
dec
cmp
addb
lock
adc
jle
sub
mov
subb
test
movsl
add
out
jmp
das
bswap
fildl
aaa
mov
stos
pop
lcall
jp
lds
movsb
lock
and
ret
sub
fadds
cmpsb
fs
mov
lcall
aad
ss
in
mov
or
xchg
pop
notb
test
inc
adc
stc
movsb
stos
adc
xor
imul
data16
xor
stos
fildl
cmp
lea
shrb
mov
ss
lahf
sub
xor
dec
xchg
mov
mov
sarl
fisttpll
and
xor
test
adc
jecxz
jge
fsubl
lcall
leave
xor
mov
adc
rorl
xchg
cmc
scas
add
dec
test
sarl
ficoms
or
inc
cmc
mov
movsl
test
out
dec
inc
dec
cwtl
push
push
push
stos
pop
ljmp
and
pop
cmp
movsb
mov
jb
sbb
mov
mov
push
jno
stc
xor
lods
test
and
sbb
ds
in
sbbb
dec
push
push
imul
pusha
xor
push
insb
loope
push
or
ds
ljmp
sbb
lods
mov
xor
jb
fisttps
mov
arpl
adc
and
insl
adc
jns
mov
sti
cmpsl
adc
ret
ret
lods
push
push
dec
jl
fwait
aas
sbb
enter
sbb
jae
or
aas
scas
inc
mov
ds
repz
push
inc
dec
lret
enter
xor
jmp
bnd
cltd
stos
andl
cli
xchg
cmp
cmp
sti
xor
incl
outsl
das
imull
aaa
mov
test
push
imull
cli
cmc
cli
mov
hlt
notl
mov
rcrl
push
sbb
or
or
jb,pt
pop
gs
aaa
imulb
mov
sahf
pusha
clc
out
sbb
cs
mov
adc
push
jecxz
shrb
mov
and
pop
jno
fucomi
inc
adc
addr16
dec
push
ja
mov
loope
std
dec
clc
mov
cmpsl
inc
add
or
cmp
test
mov
aas
add
dec
dec
mov
popa
jecxz
fs
stc
pop
es
xchg
mov
popl
mov
loope
cltd
mov
out
mov
scas
mov
jge
fdivs
and
rcrb
or
sbb
push
int3
xchg
cmp
xchg
or
and
jb
inc
stc
repz
stos
jecxz
xchg
and
clc
fs
mov
push
or
daa
pusha
mov
jb
movsb
inc
jnp
repnz
xchg
sahf
pop
in
dec
lahf
lea
ljmp
in
or
sub
cltd
bound
xor
nop
dec
aam
and
enter
test
sub
add
in
sbb
pop
cmp
and
and
divb
test
push
xlat
push
bound
jg
test
icebp
jo
hlt
outsb
and
push
cmpb
xchg
ss
cmp
scas
inc
jmp
xlat
mov
in
js
xlat
ds
das
mov
jle
and
scas
xor
addl
rclb
xchg
add
dec
and
sub
cmp
jo
jge
sub
icebp
xlat
inc
in
stc
test
jns
loopne
mov
mov
daa
cmp
pop
lret
and
push
pusha
data16
xchg
cld
sub
lret
mov
cmpsl
dec
xchg
pusha
jge
clc
jne
jae
sub
xchg
jecxz
dec
adc
dec
repz
sbb
idivb
hlt
xor
sarb
mov
sbb
inc
sahf
mov
out
orl
jg
dec
jmp
jbe
hlt
cmp
add
jo
push
cmp
leave
mov
loop
push
punpckhwd
loopne
add
pushf
fists
push
outsl
mov
mov
lret
adc
add
cli
insb
mov
and
iret
cs
in
xor
xchg
jl
rcll
xor
popa
sub
sahf
xchg
fidivl
lods
cmc
lahf
bound
sbb
cmpsb
mov
lods
or
rcl
xor
mov
push
pop
daa
mov
fst
outsl
or
cmp
mov
add
daa
xchg
mov
nop
jecxz
mov
out
xor
xor
lret
sbb
inc
mov
call
test
xchg
stos
daa
xor
iret
stos
cmpsb
jno
mov
lods
push
fisttpl
into
push
jge
cli
call
data16
mov
mov
pop
movsl
push
mov
dec
and
sbb
pop
scas
push
mov
rcll
and
mov
je
bound
into
pop
push
int
jmp
jmp
test
or
cld
fnstenv
dec
fiadds
pusha
mov
rorl
sbb
icebp
test
aam
divl
clc
imul
mov
adc
ret
add
cmp
xor
movsl
xchg
mov
pop
pushf
mov
movsl
movsb
xor
mov
cmp
and
ljmp
inc
into
lods
addr16
std
stos
mov
mov
test
xlat
test
fwait
aaa
pop
enter
pusha
sub
push
inc
test
ret
push
jl
cmp
dec
test
cwtl
jne
stc
xchg
xchg
mov
inc
adc
and
mov
loopne
mov
inc
sub
mov
mov
outsl
insl
adc
inc
ret
sbb
clc
rcrb
adc
popa
stos
mov
push
mov
fsubr
fs
insl
push
out
es
ret
dec
inc
popa
stos
ljmp
idiv
in
xchg
test
mov
adc
scas
daa
mov
lds
stos
or
cmpb
xor
out
leave
pop
addl
stos
push
notrack
enter
fimull
add
je
xchg
pop
mov
push
xor
pop
fmul
xor
mov
xor
add
dec
cmpsb
pop
lahf
mov
aad
or
ljmp
mov
inc
aas
bound
push
or
add
push
fadd
mov
popf
ss
pop
adc
or
outsb
pop
psllw
mov
and
popa
add
ss
push
and
je
andb
insb
fdivp
pop
dec
adc
jb
push
sub
pop
jge
dec
imul
fdivs
mov
cmp
push
dec
adc
ret
push
xchg
std
stos
mov
sarb
inc
xchg
sub
xchg
add
addl
pushf
jbe
addr16
add
aam
pop
jp
lret
jb
or
data16
mov
loopne
and
bound
jmp
mov
dec
scas
int
dec
add
push
call
stos
fucomi
sub
mov
xor
pop
neg
addr16
add
sub
cmc
fwait
inc
dec
xor
mov
fwait
xor
fwait
pusha
lret
jge
sahf
or
pop
pop
sbb
fwait
sub
pop
inc
and
adc
or
mov
jecxz
mov
fiadds
inc
out
sub
pushf
icebp
movsb
leave
add
add
jne
mov
pop
loop
cmp
ret
jle
movsl
aaa
inc
or
cmc
jge
test
mov
sbb
shlb
mov
stos
mov
xor
lahf
pushf
daa
test
ret
jmp
dec
xchg
push
out
aas
lret
pop
xor
cmp
gs
rclb
jle
out
cmpsb
jl
or
out
inc
xchg
jnp
sbb
cwtl
push
cmp
lret
mov
in
cli
sub
dec
lret
aam
mov
cmp
add
push
cmp
cmp
dec
inc
int3
arpl
cs
rcrl
mov
jb
insb
scas
stc
mov
mov
test
andl
jle
add
cli
rorl
sahf
mov
mov
dec
cmp
mov
sub
rclb
xor
jle
mov
xor
mov
xor
push
sarb
aaa
lret
cmp
outsl
lods
lcall
mov
daa
in
js
or
mov
idivl
add
jle
inc
test
sub
dec
mov
mov
mov
push
stos
mov
cltd
inc
pop
jl
std
lahf
adcb
lods
movsb
enter
and
mov
scas
test
xchg
push
insb
pop
mov
je
cmp
inc
popf
pop
adc
dec
dec
mov
jae
mov
add
int
cmpsl
hlt
ds
cli
sub
mov
jmp
aad
lods
sub
pop
mov
test
add
xchg
lcall
insb
lods
xor
mov
dec
out
mov
or
jne
out
push
je
roll
aas
add
inc
aad
jne
cmc
cld
pushf
mov
inc
arpl
je
dec
jo
and
xlat
daa
hlt
jbe
sbb
adc
stc
pop
mov
out
or
lods
pop
or
cli
aam
in
xchg
loopne
mov
shl
pushf
jg
int
ds
sti
sbb
and
mov
push
shlb
jp
outsb
test
std
push
push
scas
mov
xor
cmp
xchg
cli
jnp
lret
add
lret
mov
popa
sti
mov
lds
js
and
addl
xchg
in
sti
sbb
in
pop
lock
mov
dec
lahf
xchg
jp
outsl
repz
faddl
cli
push
mov
xlat
push
jg
punpckhdq
mov
xor
xor
jns
jb
in
xor
mov
adc
push
pop
out
xor
jnp
int
push
ljmp
in
pushf
xchg
cs
ret
pop
test
lea
jns
iret
cli
lahf
adc
repnz
ljmp
sahf
test
push
sbb
push
dec
mov
jmp
sub
dec
pop
dec
testl
mov
jbe
mov
add
xchg
xchg
in
gs
enter
mov
pusha
cli
add
jne
or
iret
push
xor
add
mov
dec
lret
cli
mov
ficoms
xor
mov
adc
cmp
cmp
rcll
clc
movsb
jg
xchg
xchg
push
jae
ss
jbe
movsl
std
fidivrs
cmp
imul
adc
dec
jecxz
jp
dec
sbb
loopne
cli
clc
pop
lock
inc
adc
pop
and
je
loope
xor
sti
and
daa
neg
fstpt
or
mov
popf
xchg
jno
sahf
and
jle
jecxz
pop
push
leave
mov
shlb
std
pop
add
leave
cmp
in
mov
xchg
mov
xor
popa
mov
leave
inc
sbb
mov
sub
cmp
dec
loop
xchg
std
loop
dec
push
mov
add
or
jge
fdivrp
jp
mov
mov
in
sub
push
adc
xchg
jbe
aas
push
sbb
mov
fucomi
pop
cmp
dec
and
adc
mov
pop
test
cld
fsts
imul
and
stos
hlt
and
gs
push
or
fucomp
enter
mov
jae
lret
xor
xchg
dec
sub
gs
push
cmp
sub
pop
lods
hlt
adc
push
mov
adc
xchg
inc
adc
adc
sbb
cmp
vmread
mov
adc
sub
outsb
cwtl
push
lea
fcoml
push
or
xchg
mov
in
add
xchg
loopne
enter
jbe
addr16
push
xchg
leave
dec
sbb
sub
lds
cmp
fistl
cmp
push
pop
xchg
out
mov
lods
pop
or
jp
or
sub
xchg
or
leave
fcmovu
jl
imul
shl
repnz
pop
pop
cmp
pop
and
test
xchg
pop
sbb
testl
add
lock
push
pushf
cli
fisttpll
xchg
mov
push
repnz
mov
repnz
push
mov
popf
push
cmp
mov
dec
cmp
mov
jle
pop
sbb
cmp
aas
push
add
jae
mov
push
push
popf
lret
idivb
lcall
sbb
pop
and
push
mov
jmp
adc
sub
sarl
push
pop
cmp
ror
push
mov
fistps
int3
cwtl
call
mov
mov
xchg
not
ss
repnz
pop
jg
ret
jbe
int3
dec
jo
add
jo
inc
out
add
rcrb
sbb
sahf
jo
roll
mov
jns
push
outsl
int3
xor
xchg
sub
lahf
sub
daa
popl
int
inc
ljmp
fdivl
cmpsb
xor
xchg
repz
or
ljmp
xchg
push
stc
ret
daa
stos
adc
pop
ja
mov
inc
lock
add
mov
and
xchg
out
mov
fstl
xchg
jns
pop
push
inc
call
loope
cli
add
add
jle
cltd
call
mov
or
shrl
add
scas
cmp
push
mov
push
outsl
or
aam
cmp
adc
testl
incl
inc
pop
sahf
sbb
es
shrl
pop
stos
test
into
jge
add
addr16
and
dec
arpl
dec
push
mov
adc
lods
popl
lods
jnp
outsb
nop
pop
shr
pushf
cmc
dec
or
lret
leave
sub
imull
in
pop
and
pop
outsb
lea
dec
cmpsb
mov
jecxz
mov
add
inc
jo
mov
clc
dec
mov
and
outsl
sbb
cmp
push
cmp
shlb
push
fisubrl
cmp
jbe
add
sbb
xchg
xor
pop
lods
inc
adc
and
sbb
cs
push
hlt
xchg
adc
pop
adc
sti
das
stc
cmp
cmc
aam
imull
cmp
xlat
mov
adc
mov
lahf
xor
sub
and
push
cld
fwait
out
fsubrs
outsl
mov
mov
dec
cmp
mov
mov
leave
or
negb
shl
fs
mov
fldcw
aad
inc
or
test
dec
dec
ds
mov
jnp
push
mov
jae
cmp
mov
int
xchg
pop
add
ds
pop
insb
lods
and
pushf
daa
rcr
jae
sbb
add
cmc
imul
fdiv
xchg
mov
pop
adc
insb
and
mov
ret
sbb
jb
add
fsubs
pop
xor
dec
dec
inc
outsl
ss
jge
xor
sbb
push
icebp
rep
xchg
imul
xchg
push
rcr
imul
mov
shlb
xor
mov
xor
mov
scas
mov
mov
sahf
mov
iret
jae
pop
add
push
add
fnsave
mov
pop
mov
dec
push
mov
mov
jg
mov
cmpsb
sub
xlat
or
lock
xor
std
iret
jns
xchg
mov
or
insb
push
out
adc
or
fadds
lret
mov
aad
mov
and
inc
stc
je
or
sahf
xchg
test
lret
adc
test
xchg
pushf
dec
pop
xchg
shlb
lcall
push
inc
dec
push
mov
in
jp
out
mov
aaa
jnp
jmp
scas
mov
sbb
hlt
adc
je
pop
sbb
sub
loope
dec
or
xchg
push
xchg
inc
imul
fisttps
sbb
inc
enter
int
and
lea
nop
fucomi
jns
frstor
inc
repnz
in
rcl
xor
sub
adc
dec
lahf
or
test
jnp
out
popf
das
out
popa
divl
scas
in
inc
or
mov
out
xchg
mov
out
adc
pop
daa
out
add
xor
test
out
cmp
jns
fdivs
lods
add
lcall
dec
lcall
add
stc
jbe
add
dec
dec
out
jmp
push
arpl
test
stos
mov
mov
cmc
pop
lods
out
out
pushf
arpl
dec
mov
fs
pop
and
dec
cmpsl
js
ret
movl
cmp
test
or
add
xor
stos
mov
pop
adc
out
inc
mov
inc
jns
xchg
xchg
dec
or
jae
fwait
rolb
xor
mov
push
stos
pop
mov
aam
mov
cltd
je
dec
xchg
cmp
sti
and
xchg
xchg
in
cs
pop
push
movsl
lea
out
cmp
and
xchg
xor
adc
pop
into
in
sub
fwait
lods
push
cmpxchg
adcl
ret
jl
ror
js
in
cmp
movsb
push
jnp
push
pusha
leave
sub
testl
mov
sbb
pusha
mov
clc
fdivs
or
jbe
adcl
add
aad
adc
pop
loopne
movsb
add
shl
xchg
pushf
lcall
cmpsb
test
sub
insb
dec
outsl
fistps
test
fstpl
jnp
adc
inc
and
fbld
adc
add
adc
cmc
mov
insb
push
ds
mov
ds
mov
add
lea
xorl
cmp
jge
jbe
jmp
push
or
fdiv
je
rcrb
sbb
mov
adc
mov
subl
lods
pop
mov
sub
pop
push
cmp
push
lods
outsb
add
sub
cmpsl
mov
jle
or
mov
sbb
inc
jns
or
sub
mov
push
aad
jnp
mov
push
sbb
jno
das
cltd
cmc
sbb
loope
stc
or
inc
xor
in
mov
adc
jo
adc
xchg
xorb
out
push
mov
blcic
mov
add
pop
add
pushf
dec
shl
in
in
inc
outsl
xor
push
lret
enter
loopne
aaa
or
or
pop
mov
ds
in
inc
sbb
and
orl
pop
sbbl
loopne
outsl
or
push
sub
inc
repz
subb
pop
testl
aad
jle
pop
dec
dec
scas
cmpsb
gs
inc
insb
ds
js
dec
adc
stc
mov
es
aad
inc
lcall
es
add
icebp
mov
aad
cmc
jecxz
push
cmp
outsl
inc
dec
sbb
adc
rcrl
mov
sbb
loope
insl
dec
addr16
addr16
pushf
jnp
cwtl
mov
lods
pop
fcomp
insl
std
lahf
adc
mov
lods
adc
lahf
jmp
jns
mov
push
adc
aaa
out
inc
jo
xchg
cmp
cmc
jl
xlat
mov
jg
mov
mov
cmp
hlt
inc
mov
lcall
pop
sub
mov
fisttpl
or
iret
add
push
out
dec
insl
paddsw
cmpl
lock
push
lock
inc
add
mov
dec
push
sbb
sbb
sub
fcoml
jbe
in
mov
cmpsl
fldcw
jno
outsl
in
cli
push
cltd
ret
inc
push
rcl
leave
addr16
xchg
loopne
stos
xor
ret
ja
int
nop
rcrl
add
cltd
adc
aas
repz
mov
push
push
pop
xor
fistpll
lock
add
xor
cltd
lret
divl
xor
repz
or
das
dec
jo
cs
popf
sub
data16
mov
ss
test
cmp
mov
stc
and
orb
orl
push
scas
cmp
loop
inc
and
lret
inc
lahf
punpckhbw
xor
xchg
mov
jno
clc
xor
aam
add
dec
loopne
scas
sahf
cmp
in
xor
push
jno
dec
cmpsb
sbb
lcall
cmc
dec
mov
push
outsb
and
aas
imul
sahf
mov
push
mov
or
jo
out
mov
adc
mov
and
cmpsl
test
lods
mov
mov
jl
dec
or
lret
push
cmp
jae
mov
loopne
dec
sti
add
repnz
out
sub
dec
icebp
loopne
cmp
stos
loope
cmp
cs
push
shrl
mov
jp
push
insl
lahf
test
stos
jo
enter
xchg
fcmovb
mov
in
popf
rcrb
in
ljmp
fsubrs
lock
in
sub
fisubs
cmp
pop
das
ds
testl
inc
insl
leave
push
aad
add
and
lds
es
pop
lahf
sub
test
xlat
mov
pop
iret
cmpsb
rorl
jl
cmp
jbe
or
into
pop
push
adc
pop
jnp
mov
jnp
lret
dec
shr
fdivl
cld
add
jbe
int3
mov
das
mov
mov
insl
imul
stos
outsb
out
arpl
lock
jae
jne
fwait
mov
pushf
inc
and
scas
lods
and
cld
insb
in
pop
lds
push
and
gs
pop
pop
mov
inc
mov
lods
in
jbe
call
adc
loop
sub
in
cld
jns
and
mov
ja
xchg
add
and
xchg
mov
add
mov
and
sub
arpl
fs
adc
rcll
hlt
mov
adc
lods
sub
and
addb
add
push
xchg
xor
arpl
popf
fsubrs
aad
loop
sub
nop
and
or
nop
ret
mov
xchg
adc
cmp
ja
sub
sbb
iret
pop
dec
sbb
loop
sub
and
sbb
and
or
addb
pop
lahf
call
sbb
nop
push
cmp
xor
test
and
sub
sbb
add
jmp
cmp
idiv
mov
jmp
add
add
mov
mov
jne
add
mov
xchg
jns,pn
cmpb
adc
imul
or
lock
or
sbb
xchg
sbb
jle
out
jb
call
sbb
pop
adc
xor
jbe
ja
xor
xor
loope
test
push
cld
ss
lret
das
loopne
lock
sbb
les
stos
stos
pop
mov
mov
add
data16
outsl
scas
scas
sbb
pop
je,pn
nop
cmc
jl
out
inc
popf
gs
xor
jno
sbb
jge
adc
ret
or
pusha
mov
fcompl
jae
lds
in
lods
xchg
lock
and
gs
sub
jno
jnp
negb
mov
lods
cmc
subl
loope
in
dec
mov
mov
mov
adc
dec
outsb
inc
cmpsl
mov
and
add
mov
insb
shrb
pop
loopne
scas
cmp
leave
sub
iret
mov
jp
jle
jg
cmc
pop
nop
add
add
cli
rcrb
push
pop
mov
mov
xor
and
add
push
aam
inc
jno
scas
lcall
sbb
or
ret
xor
loop
les
mov
cmpl
inc
ss
aas
mov
shl
xor
mov
stos
cmp
mov
repz
jge
inc
add
fs
fidivrl
les
subb
jg
aaa
pushl
jmp
lods
roll
jb
xchg
cmp
sub
xchg
or
push
stos
cmpsb
mov
mov
hlt
jecxz
mov
dec
nop
mov
inc
mov
mov
add
add
cmc
pushf
data16
stc
clc
fcmovu
mov
rcl
or
xor
in
mov
test
and
cltd
in
and
repz
pop
fstps
adc
cmp
jo
pushf
pushf
push
mov
dec
adc
notb
cmp
cmp
push
and
fimuls
xchg
frstor
xor
gs
inc
shlb
adc
ss
xor
push
add
adc
xchg
mov
scas
loope
push
addb
fistps
insl
adc
push
cmp
mov
pop
and
add
xchg
int3
ret
cmc
jnp
cld
adc
cmp
pop
repz
sub
cmp
add
sub
inc
lods
ds
sbb
fwait
and
mov
cld
add
cmpsb
imul
es
fisttpll
fimull
cld
xor
mov
lds
adc
inc
gs
aas
or
sbb
out
dec
mov
movsl
and
popa
pop
pop
movl
mov
sbb
mov
stc
lock
stos
iret
xchg
adc
add
inc
inc
push
pop
lods
sub
daa
mov
adc
mov
fwait
dec
ds
or
mov
xchg
pop
xchg
js
shlb
loopne
aaa
fnsave
fadds
adc
fiadds
cs
pop
push
decl
mov
pop
fisubrl
repnz
call
or
mov
push
dec
push
neg
ret
stc
cwtl
mov
hlt
aaa
sti
shrb
arpl
ret
mov
idiv
jge
out
jb
loopne
outsb
xor
stos
repz
sub
jmp
jae
cs
pop
out
push
inc
cs
jl
leavew
dec
or
stc
inc
ficompl
mov
jmp
xchg
repnz
pop
sbb
fwait
or
ss
int
add
mov
sbb
xchg
arpl
mov
push
cmp
adc
repz
mov
inc
push
lods
add
aas
flds
or
orb
sbb
ds
cmc
orl
jnp
rcr
mov
stos
pop
call
inc
sub
test
push
dec
addr16
or
cld
pop
sbb
and
rcll
iretw
popf
negl
insl
in
cmp
lds
xchg
mov
mov
rcr
fbld
fistl
sbb
inc
mov
addr16
pushf
stos
mov
adc
xchg
or
icebp
fisttpl
in
fucompp
loope
ss
cmpsb
fwait
mov
mov
lods
mov
xacquire
or
cmp
sub
sub
iret
jo
leave
jecxz
flds
pop
add
stos
dec
or
rorl
insl
clc
xchg
bound
ja
fisttpll
jno
add
fisubl
hlt
sbb
cmp
shll
orb
lds
inc
in
sub
mov
data16
jns
mov
xchg
imul
cli
and
jp
sub
pop
jne
cmp
lret
stos
fadds
mov
mov
mov
das
into
and
mov
lret
in
xchg
dec
inc
js
xchg
movsl
mov
dec
aad
xor
les
xchg
or
aad
inc
cmp
imul
fadd
bound
scas
sahf
lods
xor
xchg
xlat
jns
jns
js
xor
jbe
addl
push
push
sarb
mov
and
lock
push
sbb
push
add
gs
jbe
fwait
gs
push
jp
pop
or
sti
sbbl
sub
sbb
push
je
sbb
jne
inc
xor
mov
pop
or
pusha
jle
imul
mov
ljmp
or
in
shll
xchg
mov
xorb
fstpt
and
cltd
add
add
ss
sbb
and
push
adc
fcmovnu
xor
mov
out
stos
or
mov
mov
add
xor
data16
imul
inc
in
adc
mov
jle
arpl
add
loop
pop
mov
popf
sub
data16
adc
adc
gs
inc
add
js
xor
push
test
fisubl
lods
or
and
popa
test
mov
sbb
fimuls
xchg
push
sbb
push
inc
push
int3
inc
in
scas
dec
dec
sub
out
dec
jg
mov
nopl
pushf
decb
test
in
mov
bound
int3
cmp
jl
fnstcw
rcr
xchg
shrb
sbb
aam
push
add
jns
sbb
xor
xor
call
cmp
repz
cs
jno
sarb
lods
pop
mov
push
xor
jnp
incb
inc
xor
lods
inc
xchg
movsl
push
xchg
jb
cwtl
mov
adc
test
dec
out
pop
sub
popf
fiadds
pop
push
sub
ret
movsb
daa
adc
outsb
popf
sub
out
in
adc
dec
jecxz
cmp
adcb
out
unpckhps
pop
add
jge
add
int
div
rolb
es
jg
mov
aam
cwtl
pop
jb
dec
loope
insb
call
test
incl
insb
orps
or
lods
push
dec
cwtl
mov
mov
sarl
xor
or
inc
lret
xlat
out
cmp
int
test
sbb
or
jae
popf
dec
outsl
scas
push
xchg
stos
and
aad
and
mov
imul
dec
xchg
add
icebp
or
orl
xchg
ficoml
mov
lret
push
or
or
sub
sbb
add
push
test
xchg
ja
xor
or
add
call
or
sbb
or
nop
xor
dec
fdivr
pusha
sbb
in
aas
mov
cmp
jae
push
sbb
sti
addr16
adc
mov
lods
xchg
js
cwtl
pop
push
test
pop
cmp
jmp
mov
add
jbe
lahf
xor
mov
mov
mov
shr
or
outsb
xchg
es
ret
mov
hlt
add
faddl
push
shlb
xor
cmp
or
pop
mov
fwait
xchg
inc
jle
test
jns
sahf
jg
mov
push
call
mov
and
mov
fsubs
dec
fdivs
mov
sbbb
in
bound
addr16
jo
push
call
aas
pop
xor
cmpsb
in
aad
cli
rcr
push
popf
js
mov
cli
inc
add
out
adc
les
adc
adc
cmp
add
and
xor
sti
ljmp
adc
fimuls
jo
mov
push
pushf
ficoml
xchg
mov
and
fidivrs
jp
adc
push
es
jmp
bound
cltd
cs
inc
lds
pop
vmaxpd
mov
xor
into
stc
xor
stc
mov
sbb
lahf
jnp
dec
and
xchg
jecxz
mov
scas
pop
mov
stos
adc
cmp
imul
outsb
mov
in
aas
jl
idiv
pushf
xchg
cltd
fucom
add
ficomps
add
pop
mov
add
je
mov
mov
xchg
cltd
ret
rcrb
jl
pop
pop
dec
shlb
stc
sub
mov
repnz
loop
daa
jne
pop
dec
dec
iret
outsl
sahf
outsl
lret
test
inc
sub
jp
cmovb
lcall
jno
popf
inc
mov
std
test
mov
movl
stos
addr16
fistpl
xchg
mov
push
jne
daa
mov
adc
jge
lods
mov
stc
xchg
pop
pop
repnz
sbb
and
mov
mov
cli
je
insb
ds
out
mov
out
mov
nop
cmp
push
mov
sbbb
jb
hlt
shlb
popf
adc
push
xor
jns
mov
xor
jne
gs
stos
dec
sub
cltd
pop
dec
rolb
sbb
shl
and
aaa
and
dec
clc
pop
fnsave
lea
push
out
cmp
xor
hlt
adc
adc
or
insl
jo
push
and
imul
pop
shl
pop
fs
gs
aam
popf
mov
mul
sub
test
mov
mov
repnz
daa
ficoms
scas
test
mov
dec
push
add
loop
movsb
mov
add
cs
sub
sub
add
out
stos
in
sbb
adc
aam
xor
xor
out
aaa
cmp
rclb
dec
jnp
adc
jo
mov
cld
jp
adc
sti
sub
aaa
mov
dec
lret
mov
mulb
sub
pop
add
das
inc
jae
jge
aad
in
mov
lret
adc
mov
pop
lahf
subl
add
xor
or
pop
sbb
jp
repz
imul
adc
mov
add
rorl
hlt
and
sahf
popf
test
stos
pop
mov
stos
mov
inc
nop
fs
out
out
add
jae
push
inc
icebp
data16
mov
scas
stc
sub
push
jle
jmp
mov
adc
clc
call
mov
int
out
cmpsl
ja
aam
rcrl
out
xchg
xlat
push
ret
test
shrl
lods
lods
xlat
push
mov
push
movsb
lds
pop
inc
mov
loop
dec
adcl
inc
fsubl
test
fcoml
nop
xorb
lock
jns
pop
inc
push
or
jl
sub
xchg
imul
cmpsb
fs
into
inc
aam
mov
and
mov
dec
inc
adc
movl
divl
add
xchg
mov
movsl
sub
mov
mov
dec
inc
add
aas
mov
fdivrs
inc
adcl
jp
mov
mov
add
adc
adc
in
mov
jle
or
push
inc
stc
imulb
jmp
bound
addb
push
ljmp
std
push
xchg
xchg
in
js
and
neg
lret
cmpsb
dec
mov
mov
jae
mov
dec
sbb
sub
adc
daa
cmpsl
test
fs
repz
add
repnz
je
mov
cmc
push
popa
out
xchg
sbb
mov
sbb
cmp
test
sti
push
movsb
xor
movl
adc
push
xchg
inc
jl
jge
jge
jp
andl
fldl
sbb
inc
arpl
aas
cwtl
call
inc
nop
or
add
and
jle
lea
inc
enter
inc
mov
pop
mov
push
stos
mov
mov
fstp
add
mov
fdiv
sti
ret
xor
cwtl
fdivrl
inc
push
fxch
jns
add
pop
jnp
inc
andb
ficoml
pop
and
xor
dec
imul
xchg
sbb
sti
leave
mov
int3
dec
aad
leave
or
mov
sar
loope
push
mul
inc
js
pop
pop
and
sbb
dec
mov
std
jge
mov
pop
adc
pop
lea
push
popf
adc
cmp
mov
outsb
aaa
mov
xchg
icebp
mov
outsl
stos
outsl
sbb
mov
jnp
adc
or
loopne
xor
loopne
fmull
lods
mov
pop
jge
pop
insl
pop
ss
pop
stos
add
ret
nop
movsl
xchg
in
xor
test
pop
jmp
xchg
out
cmpsl
outsb
xchg
out
inc
ja
stos
push
dec
pushf
push
clc
pusha
insb
mov
ficoms
dec
add
shll
and
jge
mov
jg
xchg
jo
cmpsl
dec
and
movsl
adc
dec
lea
dec
and
jg
or
dec
mov
cmpsb
jp
jbe
add
js
mov
and
jp
roll
jnp
lds
iret
pusha
mov
jg
cmp
inc
adc
int3
loop
ja
idivb
xchg
rcrb
enter
ror
jle
sarb
cmpsl
push
sub
xor
mov
icebp
cmpsl
pop
aad
js
mov
js
mov
jbe
jmp
push
lea
pop
xor
cmp
jno
mov
mov
ret
out
sub
fnstsw
out
jne
adc
xor
repnz
mov
xchg
add
test
ret
mov
movsl
cmp
cmpsb
xchg
dec
lcall
insl
mov
pop
add
iret
or
outsl
mov
leave
push
das
in
repnz
nop
inc
xor
lret
mov
jb
out
jle
leavew
pop
arpl
lods
lahf
lods
dec
jmp
addr16
mov
mov
dec
ret
inc
movsb
cmp
cltd
jnp
cltd
mov
fisubl
in
roll
mov
mov
and
pop
jbe
popa
in
aam
cmp
outsb
int
inc
push
pop
mov
xchg
mov
and
xor
enter
jbe
je
cmp
dec
mov
and
mov
repz
mov
adc
pop
jnp
ja
call
sarl
mov
sub
xor
xor
bound
outsb
repz
movsl
lcall
mov
add
loope
add
pushf
movsl
nop
aam
mov
dec
xor
fsubr
fs
shrb
jne
inc
xchg
in
lods
stc
sbb
sbb
xchg
cltd
nop
movsb
adc
shl
mov
push
adcb
adc
xlat
repnz
mov
mov
pop
out
dec
ja
mov
inc
sbb
mov
lods
xor
or
sti
xchg
adc
sbb
and
cmp
sar
lock
dec
shlb
lock
leave
push
mov
imul
xchg
sub
dec
sub
mov
add
inc
cmp
mov
ret
sahf
fnstcw
ds
sbb
jae
mov
aad
jmp
or
inc
out
mov
mov
xor
mov
sbb
jl
push
flds
inc
jno
xchg
repnz
inc
int3
ret
cs
hlt
mov
fcoms
or
repnz
jmp
repz
inc
sub
fwait
mov
jb,pt
pusha
lret
jae
outsb
test
mov
lahf
sti
jne
aad
nop
dec
popf
mov
addr16
mov
bound
mov
adc
icebp
popf
loop
cmp
movsl
inc
in
lods
arpl
jns
adc
jecxz
pop
add
mov
or
sarb
add
addr16
pop
mov
xchg
hlt
insl
dec
loopne
add
cltd
or
push
scas
stc
nop
scas
outsl
enter
push
std
mov
mov
cwtl
scas
std
outsl
inc
fcomip
lea
rolb
test
jo
inc
gs
xchg
in
pop
mov
xor
clc
push
push
push
out
repnz
pop
jno
lds
mov
pop
insl
xor
imul
xor
push
xor
dec
fwait
fwait
sbb
dec
out
or
pop
call
jns
les
mov
out
lahf
xchg
les
jp
xorl
out
push
lods
sub
cmp
add
enter
mov
shrb
inc
loop
adc
out
dec
test
std
push
or
dec
push
fildl
subb
push
add
add
and
pop
das
lret
andb
das
out
inc
or
mov
xchg
aas
sub
jb
pop
add
mov
or
ja
enter
mov
cs
test
pop
adc
inc
mov
sahf
pop
jns
mov
es
pusha
cmpsb
mov
xchg
or
out
test
pop
push
xor
loopne
movsl
adcl
dec
fidivl
xchg
mov
out
int
dec
inc
loope
jnp
jae
test
sbb
adc
enter
loopne
xchg
sbb
out
adc
aad
testl
fmul
inc
aad
lods
lods
lahf
popa
pop
jle
sbb
pop
cmp
add
dec
nop
sub
icebp
push
jbe
pop
pop
pushf
xchg
shl
lock
add
aam
dec
fnstenv
mov
int3
pushf
push
jg
inc
push
loop
xchg
adc
dec
cmp
cmpsl
jp
xchg
xchg
aad
loopne
sbb
add
out
stc
mov
push
xchg
arpl
jbe
dec
and
into
dec
ficomps
stos
xor
dec
rol
out
cld
loopne
test
push
adc
push
xor
dec
pop
pop
cwtl
rolb
cli
and
lock
cld
xlat
add
lret
mov
or
sub
xorl
sbb
call
imul
cmp
out
pop
sub
enter
mov
cmp
hlt
fwait
push
sbb
pminub
push
lret
pop
jge
inc
add
aad
push
subl
adc
std
nop
ja
movsb
insl
popf
ljmp
adc
insl
sti
js
xor
jecxz
stc
add
jg
cmpsl
repnz
add
aaa
int
lods
mov
lods
shrl
pop
sti
and
mov
hlt
cmpsb
dec
xor
loop
rcr
js
push
std
pop
rcll
fs
outsb
mov
or
mov
mov
je
js
out
in
xchg
movl
movsl
xor
mov
test
scas
lods
sub
cltd
es
push
cmc
mov
lret
je
mov
fcmove
insl
aaa
clc
adc
outsl
and
pop
dec
pop
enter
jne
push
cmp
xchg
test
repz
sar
in
repz
loopne
hlt
inc
clc
and
sub
mov
dec
cmp
push
add
aas
or
sub
push
and
std
dec
out
xor
scas
aas
xchg
testl
mov
or
test
imul
pop
and
ret
in
mov
clc
sbb
mov
mov
je
sahf
movsb
mov
sti
jl
add
fiadds
jl
or
pop
ficomps
xchg
mov
mov
gs
pop
add
in
movsb
mov
jae
push
hlt
aam
fwait
xchg
fcoml
inc
in
push
enter
les
or
xchg
sbb
mov
pop
dec
and
jbe
jae
lds
gs
push
int3
jae
stc
dec
aas
notb
lret
gs
cli
sub
orb
dec
out
shrl
inc
out
pop
fnsave
cltd
lock
xchg
hlt
es
mov
jp
movsl
jae
lea
loop
int
xor
xchg
cmp
and
pop
hlt
mov
in
mov
clc
sbbl
das
inc
enter
jmp
roll
add
sti
or
imul
fimuls
out
fwait
in
push
sub
lcall
jbe
xchg
adc
es
xlat
xlat
mov
jae
fwait
dec
daa
mov
inc
mov
jecxz
or
pop
mov
ror
cmp
sahf
pushf
fs
pop
sub
pop
add
pop
push
das
mov
or
dec
pop
es
orb
repnz
aad
dec
shrl
push
lret
aas
mov
mov
dec
into
in
lahf
enter
cmp
xor
adc
add
inc
mov
and
addb
jg
mov
mov
pop
fs
and
push
iret
mov
inc
jp
mov
ljmp
loopne
lods
ds
add
cmp
inc
les
mov
cmc
fldenv
cmp
and
cld
shll
test
scas
pop
out
add
imul
shlb
nop
test
fucomi
jg
bound
cmp
imul
xor
adc
jmp
aas
cmpsl
hlt
lods
xlat
insl
scas
insb
out
jecxz
cli
push
into
mov
les
dec
fsubs
sahf
nop
mov
je
mov
imulb
jnp
xor
mov
andb
insl
fcmovnbe
or
and
movsb
adc
jle
add
xor
mov
fadds
xchg
fidivs
or
mov
sbb
inc
js
sub
jae
mov
xor
lds
scas
lea
xchg
cmp
adc
icebp
mov
aad
pop
jmp
loope
inc
xor
push
sahf
mov
xchg
jp
mov
cmp
pushf
mov
push
sub
adc
mov
jmp
jecxz
push
mov
popa
pop
sub
aaa
stos
jb
sahf
movsl
xchg
sarl
and
loopne
inc
add
imul
add
inc
notb
test
popf
or
paddsb
mov
and
jle
sub
jae
jns
add
imul
xchg
and
adc
icebp
push
rolb
cltd
ret
out
push
push
roll
dec
lock
leave
xchg
and
push
push
inc
xor
mov
adc
fstpt
cmpb
mov
cld
es
loopne
loopne
or
in
xor
mov
pop
cwtl
push
call
in
dec
and
add
int3
xor
push
fidivrl
sub
test
push
popa
clc
scas
mov
mov
cmc
je
lods
ss
jmp
mov
xchg
pop
int3
popa
push
movsb
bound
gs
sub
lock
add
pusha
movsb
or
pop
data16
gs
push
inc
addr16
inc
ja
daa
dec
das
loop
insb
cld
adc
into
pop
das
sub
dec
imul
xor
iret
test
lcall
jo
bound
out
shr
repz
dec
or
lret
push
mov
fsubl
xchg
xchg
insb
adc
fldl2e
nop
mov
aad
aas
inc
cmpsb
inc
inc
popa
leave
push
sti
xlat
push
lods
stc
aam
out
xchg
sub
jno
dec
inc
mov
cmp
sbb
lret
ret
pop
mov
mov
push
xor
arpl
movsl
push
xchg
lock
xor
jbe
or
lret
pop
sbb
inc
outsl
pop
int3
mov
jns
lea
and
jle
jb
and
dec
lahf
data16
cwtl
lock
sub
repnz
aas
cmp
or
sahf
add
or
rol
and
inc
lret
jp
scas
push
xchg
inc
cmp
outsb
out
jo
out
xchg
and
push
out
inc
lcall
loopne
das
icebp
or
loopne
repz
adc
std
fdivrl
std
pop
int
cmc
inc
adc
add
mov
pop
insl
pop
adc
nop
jne
repnz
sub
sbbl
sahf
insb
xchg
push
repz
or
vpminub
inc
adc
lock
inc
mov
rcrl
es
jae
aam
aad
cmp
out
mov
mov
fistpll
bound
mov
jg
pop
ljmp
shlb
sub
inc
aaa
aaa
adc
insl
lret
xchg
add
push
inc
jae
imul
push
jb
sbb
xlat
or
xchg
cmp
pushf
dec
std
das
in
lods
jae
sbb
pop
add
outsb
mov
loope
xor
daa
and
in
int
int
imul
repz
xchg
ss
and
dec
fs
xor
in
rcrl
jp
xor
lds
xor
cmp
outsl
sub
bound
fcoms
xor
xor
push
mov
mov
cmp
test
lcall
gs
dec
mov
cmp
icebp
loopne
pusha
and
sbb
pop
ljmp
dec
push
js
fiadds
xor
stos
inc
xorb
outsb
lds
push
and
sbb
leave
inc
fwait
sbbb
pop
dec
dec
adc
lea
jp
in
jmp
es
mov
fisttpl
mov
and
mov
xchg
test
push
insb
fs
add
mov
out
mov
add
xchg
fwait
out
mov
adc
shlb
lods
flds
test
jmp
jge,pt
shll
add
mov
pop
sub
pop
insl
jb
test
lea
mov
mov
loope
dec
jnp
insl
push
jecxz
xor
in
jecxz
mov
mov
dec
jne
xchg
fsubrp
adc
dec
or
daa
scas
pop
bound
jmp
pop
mul
cmp
addb
jns
or
jo
dec
ret
lods
rcrl
inc
pop
testl
stc
fcomps
pushf
xor
jns
xchg
imul
or
in
xor
jns
jne
sti
outsb
or
mov
cld
or
in
jmp
mov
pop
push
fcomps
add
pop
movsl
mov
imul
pmaxub
fs
mov
mov
or
jb
or
push
repnz
push
cmp
shrl
and
leave
nopl
std
sbb
add
or
das
lods
sti
xchg
xchg
add
mov
fwait
push
ja
clc
or
push
or
arpl
lea
mov
or
inc
outsl
ljmp
xchg
test
push
ret
lret
sar
mov
push
fisttps
leave
cmp
sub
ficompl
rcrb
and
mov
bound
repnz
ret
xorb
test
lahf
lret
movsb
fildl
xchg
jg
pop
pop
mov
popa
fcompl
ja
inc
lret
jbe
add
adcb
in
mov
cs
mov
mov
xor
sahf
test
inc
mov
test
movsw
sti
mov
adc
push
jae
mov
decb
cmc
jbe
test
cmpsl
pop
pop
ja
ss
cltd
add
repnz
pop
insl
lcall
and
jne,pn
sahf
add
test
mov
inc
fiadds
fldz
aad
mul
popf
dec
in
stos
lahf
clc
jne
pop
push
dec
notb
out
rclb
pop
push
sbb
cmpsl
pushf
std
inc
inc
xchg
popa
pop
fwait
xor
lods
push
lahf
shll
int
pop
int
aam
outsb
pushf
gs
xor
fisttps
pop
les
aas
cvttps2pi
lds
int3
ss
push
pushw
arpl
push
mulb
fs
mov
adcl
stos
or
jnp
push
pop
repnz
xlat
pop
loop
or
cmp
je
add
ss
ds
in
mov
mov
lds
pop
popa
inc
mov
inc
loope
and
cltd
ret
jmp
inc
add
inc
jl
out
xchg
das
add
sbb
call
movsl
test
lret
das
pusha
iret
fcoms
or
pop
pop
rclb
adc
push
push
add
movsb
shl
mov
mov
adc
loop
mov
cli
xor
enter
daa
lahf
fldcw
push
dec
push
inc
fs
andl
add
inc
jl
or
mov
inc
or
mov
out
addr16
das
stos
and
outsl
pop
lea
add
aas
loope
cmpsb
daa
test
test
addl
cmp
movsl
pusha
xlat
cld
push
cmp
rcrl
sar
and
insl
fisttps
rorb
sbb
call
mov
dec
in
nop
sbb
push
int
mov
push
leave
mov
pop
dec
mov
cmpsl
dec
out
cmp
mov
into
adc
pop
mov
mov
xor
add
bound
or
cmp
std
pop
add
outsl
stos
dec
cmp
mov
icebp
flds
lds
out
pop
test
push
mov
ret
dec
mov
xchg
mov
jb
je
fwait
ss
xor
stos
lcall
add
dec
mov
adc
nop
mov
adc
jno
xchg
popa
aam
sbb
test
ret
mov
sbbl
jp
cmp
lods
dec
dec
test
lret
jmp
rolb
mov
push
aaa
inc
adc
cli
add
push
xor
and
leave
and
pop
cwtl
mov
mov
fdivl
add
pop
outsb
daa
popf
push
cmp
push
cmp
popf
sbbb
imul
out
jno
call
mov
jb
pop
aaa
mov
hlt
outsb
xor
les
fs
mov
or
pushf
ret
and
pusha
lods
out
inc
push
mov
pop
scas
addr16
sbb
adc
fisubs
shrb
fwait
insl
leave
jmp
insb
jns
outsb
jmp
lea
push
gs
sbb
aaa
sbb
xchg
aam
push
jo
sub
mov
inc
jge
jnp
cmp
xor
imul
imul
dec
push
cmpsb
test
jge
sub
xor
test
leave
cmp
cmp
push
xchg
push
test
fdivl
call
pop
sub
roll
push
xchg
jg
inc
lods
adc
push
repz
js
or
or
add
cmc
cli
mov
cmp
xchg
daa
mov
mov
mov
pushf
cmp
sti
or
pop
fsubs
lea
mov
and
notl
pop
push
lahf
stos
pop
lcall
ret
pop
icebp
test
sub
cmp
xlat
jae
sub
cmp
pop
pop
add
sub
jg
xor
mov
or
xchg
cmp
cmp
insb
sub
aam
lahf
pop
mov
stos
push
mov
mov
sub
bound
jl
and
cmp
test
cmp
adc
and
popf
mov
pop
cld
data16
ror
sub
scas
mov
test
push
iret
sbb
or
es
pop
lcall
fidivrs
sahf
mov
mov
stos
ja
sbb
roll
into
xchg
and
dec
push
xor
iret
xchg
mov
lret
rcrb
sbbb
das
lods
out
xor
pop
jle
add
mov
sbbb
bound
xor
leave
lods
add
xchg
out
or
xor
test
std
pop
cld
jno
push
adc
pop
inc
icebp
lock
std
repz
mov
cmp
fimull
test
xchg
test
cmp
jns
jns
add
jo
push
cltd
out
push
jbe
lahf
fists
je
jne
pop
jge
xchg
idivb
push
push
lds
adc
mov
mov
cs
test
or
sbb
test
test
inc
cs
sub
sbb
add
and
in
inc
repz
cs
pop
in
cmc
add
js
add
inc
and
aam
addr16
xchg
mov
rcrl
sbb
jo
mov
mov
mov
inc
les
test
test
lret
sub
scas
mov
xor
xor
loop
mov
xchg
mov
inc
ret
lods
mov
push
adc
repnz
jg
cmpsb
cmp
stos
adc
adc
fwait
je
mov
xor
or
sub
out
out
repz
mulb
mov
sbbb
sbb
and
fimuls
out
ljmp
mov
sbb
icebp
push
xchg
cmc
xchg
in
icebp
mov
xchg
mov
inc
insl
inc
stos
stc
inc
sbb
xor
mov
hlt
and
mov
rol
arpl
cmpsb
outsb
js
lret
orb
or
test
mov
cltd
ljmp
call
jno
outsb
push
mov
xchg
mov
loopne
nop
mov
mov
add
xor
xor
daa
scas
int3
out
cmc
cld
cmp
pop
jge
mov
pop
cmp
aas
adc
push
xor
jns
push
dec
adc
andb
lcall
scas
cmp
cmp
and
xor
jl
or
cmp
aaa
adc
xchg
jbe
xchg
mov
dec
ffreep
loopne
mov
pop
dec
cwtl
dec
leave
sbb
cmp
mov
and
cmpsl
cmc
push
add
sarl
push
sti
add
xchg
in
popa
push
xchg
xchg
dec
ret
adc
mov
sub
lods
and
ds
cmp
lock
or
pop
xor
enter
and
xor
cwtl
cwtl
pop
scas
loop
in
mov
int3
jmp
lcall
jle
jmp
mov
dec
and
nop
loopne
jno
cwtl
addb
js
push
add
jge
and
data16
testb
movsb
imul
xor
mov
sbbl
lea
hlt
rolb
xchg
hlt
mov
mov
mov
scas
out
pusha
jecxz
loop
das
outsb
xchg
xor
or
mov
jmp
popa
scas
jp
vmovdqu
into
outsl
jmp
lods
mov
mov
push
and
cld
lds
cmp
shlb
pushf
xor
pop
pop
mov
loopne
aad
leave
push
out
lea
popf
fstpl
lods
sarl
lahf
loopne
mov
push
out
les
dec
inc
cmp
ljmp
push
or
mov
jl
sbb
cmp
mov
js
adcl
enter
cwtl
mov
or
fsubrs
loop
sub
mov
push
mov
jb
mull
test
ret
mov
fwait
data16
gs
pop
sbb
fnsave
popf
jns
arpl
mov
enter
cmpsb
mov
fidivs
sub
xor
push
aaa
ret
ljmp
xchg
push
lret
pop
sbb
loop
and
sub
add
stos
sbb
lock
aam
cmp
test
jo
bound
mov
jg
jno
jbe
mov
mov
cmpsl
cli
mov
mov
cmp
lods
loopne
pop
ljmp
jae
lret
jb
cmp
call
rcrl
push
je
push
daa
or
mov
pop
mov
sbb
rcrb
mov
inc
fisttpl
xor
push
repnz
xlat
das
imul
xchg
push
icebp
inc
inc
xor
out
in
sti
mov
xchg
out
cmp
outsb
inc
lds
xor
insl
xor
xchg
pop
mov
clc
push
orb
sub
imul
mov
inc
cmpb
rorb
clc
pushf
xor
rol
cmp
fucomi
or
popf
or
sub
add
in
mov
in
sub
xor
sub
aaa
jno
sahf
jnp
fiaddl
in
nop
dec
xchg
popf
jns
in
ja,pn
fsubrs
aas
test
repnz
in
adc
jecxz
int3
jne
bound
mov
pusha
call
sti
mov
jge
add
sbb
sbb
and
rcl
outsl
jg
mov
lahf
loopne
mov
mov
in
inc
xchg
mov
xor
test
cmpsl
mov
push
mov
jl
ret
mov
js
dec
or
test
sarb
push
push
pop
or
jns
xchg
adc
mov
icebp
popa
lret
cli
stc
xor
cmp
insb
dec
faddl
mov
insb
daa
sti
loope
aam
pop
inc
sub
rcrb
xor
sub
cmp
pop
lods
jne
mov
cmpsb
lock
fdivl
dec
sub
mov
sub
dec
add
popf
xchg
mov
fiadds
cmpsl
dec
push
push
out
iret
xchg
sti
cmp
ret
xor
cmp
jnp
mov
ror
shrl
inc
int3
in
mov
pop
or
lods
push
jp
shll
xchg
arpl
stos
incb
sarb
add
repnz
lea
loopne
dec
push
lret
mov
inc
add
dec
mov
in
push
pop
xchg
jo
and
mov
jbe
test
test
xlat
out
push
adc
ljmp
lcall
arpl
add
lea
shlb
pop
mov
mov
adc
lock
pop
jle
xor
iret
shlb
movsl
or
pop
movb
in
jge
xchg
dec
mov
cmpsb
scas
sub
or
sbb
stc
aad
ds
stos
jne
lahf
sbb
push
stc
les
jmp
icebp
pop
dec
and
and
movl
dec
xchg
adc
popf
std
fsubl
jne
mov
dec
in
leave
arpl
outsb
test
push
mov
pop
push
push
xchg
push
xchg
push
repz
pop
jl
mov
fadd
iret
xor
and
sarb
cmp
sub
pop
sub
lds
push
mov
and
daa
and
ljmp
push
ja
aad
inc
sbb
test
cmp
lds
or
in
inc
rep
insl
adc
pop
xor
fdivp
cld
icebp
hlt
sub
sbb
push
jb
sbbb
jns
push
inc
arpl
in
push
mov
xchg
call
xor
test
daa
inc
sbb
test
jns
lods
xchg
lods
flds
js
add
jmp
pop
adc
lock
sbb
mov
mov
testl
add
jbe
sarb
adc
repz
cmp
jae
je
pop
mov
in
cmp
lcall
sbb
nop
mov
fsub
dec
dec
out
lret
and
mov
mov
push
pop
mov
insl
jno
adc
nop
pop
jg
loop
clc
enter
add
fldcw
push
bound
mov
mov
mov
and
mov
pop
adc
mov
jne
in
popl
and
xchg
pop
cmc
jp
aaa
cmp
sbb
out
and
pop
cmpsb
cmp
sub
fistpll
push
xchg
iret
in
push
shrb
imul
imul
or
test
test
jecxz
adc
jp
data16
stc
mov
jne
sbb
in
lea
in
insl
test
fstpl
inc
lods
int3
or
or
nop
push
lock
movsb
ret
or
mov
ficoml
adc
movsb
loop
sub
sub
mov
pop
pop
jg
cmp
test
jo
pop
inc
sub
bound
xchg
ds
xchg
sub
sub
ljmp
add
sbb
es
mov
sahf
xlat
xchg
addr16
shl
push
pop
in
and
in
xchg
cli
inc
fxtract
dec
push
or
adc
loop
xor
pop
sub
cltd
inc
sbb
fcmovnbe
cld
inc
es
scas
fisubl
mov
ds
jle
sahf
xchg
or
pop
iret
into
and
push
add
enter
outsb
and
jecxz
cld
repz
mov
xor
insb
lock
add
stos
xor
mov
cmp
inc
filds
int
adc
je
and
mov
xlat
sbb
xor
mov
push
lahf
mov
sbb
cwtl
mov
aad
xor
das
sub
jb
scas
cmpsb
sarl
add
lahf
shlb
pop
in
pop
popf
std
cmp
pop
sub
jne
mov
fnstsw
hlt
int
cltd
jge
sub
mov
pop
push
pop
cmp
call
test
push
std
ss
loope
test
push
sbb
sub
jne
push
test
addr16
jb
or
loopne
mov
add
aad
push
jg
push
adc
into
es
pop
cmp
adc
js
mov
test
mov
pop
daa
mov
pusha
divb
mov
mov
cmp
out
and
pusha
arpl
fstpt
mov
sarb
mov
lock
aaa
xor
adc
enter
or
ret
sbb
xchg
rcr
ja
dec
jae
aad
ds
int3
clc
cmp
and
orl
and
pop
fistl
push
pop
adc
mov
js
jge
std
sub
pop
es
sbb
icebp
es
and
rorb
add
dec
mov
pushf
mov
pushf
adc
and
inc
rolb
inc
jecxz
push
test
int
mov
push
in
fimull
ja
and
insb
pop
sub
divl
push
xor
push
or
dec
sbb
ror
movsl
lret
mov
mov
sarl
ud2
mov
push
aad
xor
mov
imul
call
add
push
je
or
jbe
push
mov
pop
int3
xchg
mulb
or
jecxz
mov
test
aaa
and
in
sbb
and
xor
or
pop
adc
xchg
adc
adc
xchg
add
fdivrl
aas
repnz
or
sub
push
adc
mov
push
shlb
out
or
adc
jp
je
enter
xchg
xor
pop
lahf
outsl
jmp
cmpsl
stos
test
shr
jno
jne
mov
int
inc
or
mov
or
mov
cld
fisubrl
imul
or
dec
xor
jns
in
aad
push
pop
rcrb
out
mov
mov
enter
add
mov
mov
test
les
hlt
xchg
sbb
hlt
push
repnz
inc
popa
fdivp
je
divb
jp
les
into
fcomip
dec
sahf
outsb
cmpsb
les
dec
frstor
adc
dec
lods
mov
addr16
sbb
je
inc
enter
ret
enter
xor
loopne
into
push
arpl
test
fcmovnb
es
scas
dec
xchg
mov
nop
lret
shufps
xor
dec
mov
loopne
sahf
xchg
mov
insl
outsl
gs
cmp
xchg
icebp
pop
repnz
xchg
ja
xchg
ffree
xchg
cltd
movsl
outsb
lret
pop
dec
movsb
ja
std
lock
test
or
mov
in
sbb
movl
xchg
lea
cmp
sbb
dec
pop
jbe
stc
jne
mov
les
popa
rclb
mov
pop
rcrb
loop
mov
jl
ds
aad
je
out
ds
loopne
xchg
loopne
jge
lcall
rcrb
inc
shrb
fcomps
push
into
add
movsb
pop
pop
pop
adc
cwtl
ja
xor
subb
adc
xchg
cmp
jnp
mov
cli
pop
int
jne
push
xor
jnp
in
int
mov
filds
and
rcr
dec
mov
jmp
and
sbb
jbe
sahf
sub
mov
jp
mov
repz
popa
in
or
data16
repz
inc
pop
dec
mov
push
cmpsb
fiaddl
mov
push
push
or
cmc
aad
adc
pop
inc
jae
mov
out
dec
adc
int
test
test
push
popa
leave
cmp
mov
mov
xchg
loop
repnz
pop
jecxz
inc
jne
jle
xchg
shld
out
lock
dec
xor
dec
daa
je
imul
fstl
repz
lock
push
add
incl
and
das
xchg
gs
inc
sbb
inc
shl
cltd
or
cmovnp
sbb
idivl
mov
rcll
or
pop
xchg
cmpsb
cs
loope
xchg
add
das
aas
call
stc
ficomps
outsb
cwtl
test
ret
jg
xchg
scas
xchg
jno
cltd
or
push
jo
test
lock
push
test
xlat
cmp
cli
xor
and
pop
dec
xchg
push
lret
mov
call
test
jecxz
mov
dec
fs
mov
pop
iret
mov
push
add
xor
sub
mov
cltd
mov
sbb
mov
out
cwtl
mov
lret
daa
sub
test
loopne
cmp
jle
fstpt
addr16
mov
lret
add
push
xor
cmpsb
iret
gs
ss
jns
push
scas
push
movsb
in
divb
ss
jnp
adc
and
jnp
inc
sub
sar
movsl
addl
mov
mov
mov
pushf
mov
mov
or
add
mov
popf
insl
fs
sub
sub
adc
dec
mov
push
mov
jge
and
es
pop
xchg
jp
jae
fcoms
lods
dec
gs
out
cmp
mov
jae
sti
stos
mov
dec
mov
lret
stos
xor
push
mov
push
leave
jl
test
push
push
cmc
and
dec
xor
mov
xchg
lods
stos
push
rolb
pop
sub
push
clc
jp
cmpsb
hlt
mov
adc
mov
pop
fidivs
int3
inc
mov
lcall
dec
or
ficoms
stos
sbb
int
mov
jmp
rcll
pop
dec
cwtl
pop
pop
or
sub
ljmp
das
ret
mov
out
and
xchg
mov
outsb
fcmovb
cmp
gs
aas
mov
dec
pop
or
cmp
push
xchg
push
lahf
call
cld
stos
adc
ud0
in
out
pop
das
jae
enter
insb
mov
add
adc
or
mov
mov
mov
dec
add
jecxz
ret
ret
cld
mov
lds
xor
cmovbe
cmc
push
xchg
shl
lcall
stos
jecxz
rorb
mov
scas
or
mov
add
mov
loop
pop
daa
and
xor
lahf
stos
jae
out
add
dec
sub
adc
xchg
mov
jg
call
call
adc
mov
and
jle
adc
movsl
fwait
cmp
movsl
lods
pushf
add
mov
push
or
add
jle
test
ja
adc
cmp
lods
fisubs
shrl
dec
mov
adc
push
inc
in
xchg
nop
jge
sub
jb
xor
cmp
sbb
cmc
inc
daa
outsl
pop
pop
pop
rorl
push
mov
sti
stc
lods
mov
fbld
in
jne
jmp
repnz
adc
mov
dec
jnp
adc
or
sahf
subl
and
fsubs
jae
pop
push
jg
mov
test
sbb
push
cmp
repnz
scas
lret
inc
pop
mov
xor
xchg
mov
pop
ds
aaa
mov
negl
adc
pop
test
nop
or
call
cmc
movsl
cmp
mov
imul
xchg
jge
push
test
scas
out
inc
sbb
xchg
cs
and
aad
rcrl
sti
insl
mov
and
xchg
sub
or
daa
push
jno
fcomi
fwait
cmc
jmp
cwtl
push
push
cmp
imul
stos
out
push
mov
imul
ror
adc
jmp
into
inc
adc
cli
jno
pusha
lahf
xchg
dec
leave
test
cwtl
test
add
lret
adc
cmp
pextrw
xchg
fcompl
lea
inc
mov
dec
cmpsl
push
enter
jl
sbbb
cltd
inc
outsl
into
jg
push
pushf
push
out
hlt
das
jmp
sub
xchg
les
mov
adc
repnz
cmp
pop
lds
daa
loope
ja
dec
lahf
cmp
cmp
jge
adc
xor
mov
cmp
xchg
or
pusha
pop
mov
and
cld
lds
jae
outsl
inc
push
mov
icebp
arpl
mov
sbb
cmp
cmp
cld
testl
xor
enter
out
sub
adc
jle
cmp
ficoml
faddl
adc
jno
ljmp
jns
loopne
pop
adc
xor
or
icebp
repnz
add
mov
xchg
es
dec
clc
lods
cmpsl
loope
inc
pop
push
lret
mov
xchg
xchg
movsb
sarl
cli
add
vmwrite
sbbb
mov
aaa
fs
or
mov
or
addr16
daa
sub
inc
outsb
bound
sub
adc
int
sbb
divb
cmc
es
push
cmp
out
movsb
inc
or
outsl
sahf
loope
pushf
es
adc
mov
in
or
or
sbbb
pushf
or
lods
mov
fldenv
pop
icebp
jl
add
mov
in
sbb
xor
aam
sbbl
pusha
bound
or
push
aaa
jno
mov
cmp
pop
sub
loop
jo
mov
into
orb
mov
add
inc
notl
mov
pusha
movb
sbb
sahf
popa
aas
jl
cwtl
aas
out
das
pop
das
lods
lcall
inc
bound
fldenv
cmc
sub
cmp
mov
dec
call
popf
pop
ret
mov
hlt
repz
push
je
sbb
pop
and
inc
sub
fcmovnb
mov
mov
lods
inc
or
bound
dec
popf
or
jmp
popa
push
cmp
jae
cltd
movsl
in
cli
shlb
mov
xchg
pop
cmp
pop
das
or
mov
rclb
or
add
jno
decl
add
insb
fs
imul
jo
jne
and
fmull
in
mov
test
pop
bound
jmp
dec
std
shr
inc
fwait
popa
and
in
add
std
jecxz
cltd
xchg
rorl
xor
cmpsb
push
mov
dec
arpl
pop
jl
gs
aad
lea
adc
pop
pop
inc
icebp
pop
mov
dec
int
in
sbbb
pop
mov
lret
dec
gs
lods
iret
dec
js
add
xchg
movsb
sub
mov
adc
aaa
or
insl
mov
cmp
popf
stos
pusha
sti
orl
push
sbb
insl
int3
mov
xor
mov
arpl
bound
sti
jge
ds
inc
fldcw
cmp
je
mov
fsubrl
xlat
fbstp
xchg
insb
xor
call
divl
mov
xchg
cmp
adc
scas
mov
test
std
adc
fstpt
inc
push
ds
mov
mov
aas
cmpsl
ljmp
dec
push
div
mov
fs
mov
mov
xchg
mov
dec
xor
dec
mov
std
testb
scas
sbbb
cltd
jne
pusha
or
jb
pop
leave
lret
mull
dec
inc
dec
mov
out
sbbb
push
sbb
cmpsl
or
aaa
inc
mov
cltd
inc
xchg
or
and
cmpsb
pop
dec
pop
dec
jmp
inc
cmpsb
push
add
cmp
push
or
ret
pop
icebp
es
ret
jb
jecxz
fsubl
hlt
imul
inc
inc
cmpsl
loop
sub
jecxz
cld
clc
sbb
push
pusha
shlb
adc
add
in
cwtl
sbb
jne
and
add
hlt
and
pop
popa
jecxz
scas
hlt
cmp
std
push
popa
shl
add
scas
inc
cmc
fdivrs
fsts
int
xchg
mov
xor
pop
xchg
cli
mov
jno
mov
addr16
sub
ret
mov
out
and
cmp
xchg
arpl
and
jo
pop
cld
idiv
in
ja
and
stos
inc
insb
mov
enter
push
add
sbb
call
dec
gs
jnp
arpl
sbb
jno
or
push
cmp
xchg
mov
sbb
push
fcompl
ds
rcr
inc
js
sbb
mov
adc
jnp
sbb
mov
and
xchg
decl
jl
push
cmp
cmp
leave
fsubs
cmpsl
cli
sbb
jmp
xchg
or
icebp
pop
dec
cmp
pop
lock
xchg
cmp
dec
mov
xchg
pushf
sbb
loop
into
add
sbb
scas
xor
scas
pop
xchg
repz
mov
loope
and
lea
addl
loop
push
xor
dec
lods
xchg
cs
aaa
or
inc
pusha
pop
fdivrl
das
inc
rorb
dec
xchg
jnp
add
std
pop
push
cs
scas
popf
jl
inc
mov
loope
bnd
test
dec
ret
sbb
inc
loop
inc
xchg
mov
mov
out
ljmp
adc
inc
cltd
fcoml
insl
dec
sub
add
sbb
inc
ret
sub
and
int3
sbb
and
xor
cmp
mov
xchg
xor
cmp
dec
or
mov
add
popf
dec
xor
inc
dec
mov
mov
loop
sahf
outsb
xor
dec
and
addr16
pop
add
repnz
mov
dec
outsb
lods
out
pop
mov
test
lock
xor
and
jae
jo
xor
imul
test
push
dec
mov
les
inc
lea
in
cltd
xchg
xor
cmp
stos
xchg
or
movsb
cld
js
inc
test
add
loopne
jbe
mov
bswap
adc
jl
mov
mov
sbb
fwait
xlat
push
mov
pop
push
clc
and
sub
mov
mov
jns
cmp
test
mov
dec
push
push
add
xor
adc
mov
outsl
pop
cmp
and
cwtl
adc
inc
lock
in
mov
mov
bound
lock
in
mov
push
or
sti
enter
mov
leave
push
sti
mov
push
popf
cltd
jb
xor
mov
repz
mov
stos
xchg
push
push
mov
push
sub
push
pop
jo
lcall
dec
inc
jnp
or
jns
push
jnp
clc
inc
test
divl
push
shl
ja
and
cmp
push
xor
mov
repnz
aad
pop
fdivrl
xlat
cli
adc
and
adc
call
test
jmp
push
mov
mov
dec
mov
hlt
mov
fcmovu
cmp
push
rorl
jnp
mov
cmp
inc
scas
and
inc
pushf
and
test
cmpl
movsl
mov
rorl
addl
insl
jmp
inc
subb
arpl
fimull
dec
movsl
sbb
arpl
xor
bound
xor
int3
test
in
push
cmpsb
mov
push
jp
jb
stos
push
cwtl
push
ja
lahf
sahf
jp
xchg
or
addr16
push
push
lret
push
adc
jns
loop
es
aam
push
mov
inc
jmp
arpl
lods
add
xchg
sbb
loopne
fnstcw
jae
push
and
ja
or
in
aaa
sahf
mov
cwtl
out
jb
andl
jns
jo
xor
fwait
and
inc
cmp
xchg
cmp
cmpl
fwait
cmp
adc
xor
pop
push
cld
mov
in
enter
out
enter
orl
jecxz
pop
stos
dec
stos
loop
rcr
mov
aas
jns
sub
lods
pop
push
add
add
and
push
push
ss
xlat
aad
push
mov
mov
jecxz
repz
or
out
out
or
sub
jbe
or
neg
stos
ja
mov
dec
sarb
jae
aad
mov
xor
fdivl
arpl
nop
es
pop
push
or
sarb
scas
add
rolb
jp
fwait
jns
add
mov
pusha
adc
pop
and
lea
and
addr16
jmp
jne
mov
in
push
push
mov
in
cs
daa
add
adc
imul
cmc
mov
into
incl
sbb
xchg
push
mov
shlb
hlt
int3
jns
out
in
dec
clc
rol
xor
js
stc
push
inc
dec
xchg
mov
fs
rcrl
or
sub
pop
jae
out
jno
aaa
push
scas
pop
out
enter
sbb
inc
cmpsb
ret
aaa
inc
stos
loope
or
rcll
es
popa
sub
jmp
fdivr
stos
adc
mov
fwait
mov
rorl
xchg
fdiv
cld
adc
xchg
and
mov
das
repz
stos
mov
imulb
cwtl
jge
add
xchg
and
setne
mov
out
dec
enter
cmp
dec
jns
jle
mov
xchg
sbb
pop
into
or
mov
mov
fxch
inc
cmpl
test
lods
mov
mov
cli
rep
fsubs
negl
aam
ja
mov
cmc
inc
in
mov
or
sub
inc
out
mov
bsr
sub
sub
imul
mov
jge,pt
adc
xchg
cmp
imul
and
mov
cli
pusha
loopne
ds
lods
xchg
jns
or
jp
outsl
jno
adc
mov
jns
stos
movsl
jno
cmp
inc
push
jbe
push
in
xor
in
je
enter
pop
xor
mov
cmpsb
pop
mov
cmpsl
mov
popa
or
popf
dec
jp
iret
lods
imul
pop
sti
insb
ds
and
add
je
cmc
pop
xchg
int3
xchg
cmp
pop
jo
pop
xchg
push
push
rolb
frstpm(287
cmp
push
jbe
std
sbb
push
xchg
cli
stos
push
xchg
jge
jb
inc
cli
test
add
imul
ds
aad
int3
push
push
sub
xchg
adc
loop
dec
pop
cltd
push
mov
insl
xor
inc
push
cmp
add
mov
push
or
adc
dec
sbb
or
jge
imul
outsl
push
das
ret
shrb
or
stos
cwtl
mov
ret
xchg
mov
push
ds
cmp
mov
mov
cmp
in
pop
pusha
xchg
int3
jmp
jp
and
adc
cmp
add
sti
xchg
aaa
fstpl
dec
sub
xchg
lock
or
pop
pop
push
xchg
or
pop
das
fwait
inc
ret
cmp
jnp
rclb
add
sub
pop
mov
fcoml
cs
and
xor
lret
adc
fmul
idiv
mov
pop
xlat
push
daa
sbb
sbb
dec
sub
sbb
test
aam
inc
adc
mov
jmp
lea
pop
les
mov
rcll
cmp
inc
fldl
sbb
cmpsl
test
lds
scas
fmuls
adc
shl
dec
mov
xorl
ljmp
adc
xlat
sub
stos
call
sbb
adc
xchg
sub
out
sbb
mov
addr16
ljmp
bound
pusha
cmp
sbb
movsb
add
inc
cmpsb
movsl
add
push
dec
les
add
mov
and
gs
sbb
negl
inc
jmp
adc
iret
in
bound
mov
mov
add
jne
xchg
sarb
adc
fs
adc
stos
adc
xor
pusha
jle
std
push
andl
adc
lret
int3
clc
mov
imul
adc
xchg
out
mov
jnp
jbe
push
insb
roll
and
inc
push
inc
repz
je
andb
mov
ss
pop
mov
or
fcmovne
jge
popf
mov
jge
test
inc
pusha
adc
inc
push
or
movb
imul
repz
enter
xor
clc
scas
es
jp
sbb
loop
xor
xchg
or
cwtl
or
mov
sbbb
into
sbb
sbb
inc
dec
jecxz
mov
je
lret
loopne
mov
aaa
fcmovnbe
repz
jle
out
dec
jae
stos
adc
xchg
xchg
fwait
jecxz
dec
daa
ficoml
sub
fisubrl
and
ljmp
cmpsl
push
push
pop
sbb
sub
mov
gs
popf
movl
and
push
arpl
sarb
lock
das
cmp
call
lret
aas
jne
les
ja
sbb
ljmp
adc
subb
cmc
sub
sub
pop
add
test
mov
arpl
sub
icebp
jb
add
lcall
subb
rclb
inc
dec
call
jmp
cltd
std
jecxz
std
pop
out
and
mov
decb
xchg
mov
or
iret
je
pop
mov
jmp
in
fisttpll
xchg
or
ljmp
sbb
pop
test
dec
cmp
push
ss
pusha
pop
ljmp
pop
push
movsb
and
hlt
jg
mov
mov
sub
push
dec
inc
dec
orl
jne
or
cmp
xlat
mov
dec
cmpsb
repnz
fstpl
in
mov
mov
fst
mov
cwtl
xor
adc
imul
mov
out
cli
xchg
enter
xchg
xor
xor
mov
push
test
stos
aas
cmp
inc
xlat
xor
add
test
xor
xchg
cmpl
jne
loope
lcall
out
pop
push
and
cli
ret
mov
outsl
cli
pop
aaa
lock
pop
jp
jmp
call
out
push
mov
xchg
or
cli
mov
and
inc
andl
out
cmp
sub
jnp
sub
pop
xchg
inc
jl
aam
es
je
jmp
popa
test
or
gs
in
pop
xlat
cmp
push
xorl
sub
xchg
jnp
jne
mov
sub
mov
adc
cmp
sbb
sbb
xchg
ja
mov
push
idivl
jb
scas
jg
jo
mov
push
add
popl
sub
pop
mov
je
das
rcrb
cltd
hlt
mov
shrb
push
jb
pop
xchg
dec
mov
pusha
cli
cmpb
or
fnsave
mov
pop
call
xchg
and
cld
and
xor
sub
xlat
pop
mov
loope
dec
test
mov
out
notl
scas
cwtl
sahf
popa
fmull
dec
mov
xchg
aaa
mov
stos
popf
jle
and
scas
lock
test
shrl
enter
mov
nop
xchg
aas
fcmovb
outsl
lret
dec
je
add
lcall
je
jae
scas
xchg
divl
lea
popf
int3
xlat
dec
repz
mov
xchg
mov
push
mov
gs
push
pop
adc
rcrb
pop
inc
aaa
daa
cwtl
mov
xor
xchg
adc
jp
jl
mov
xlat
xchg
mov
stos
nop
faddp
or
test
lea
push
mov
pop
jno
sub
jae
lahf
inc
mov
shl
in
add
mull
ljmp
push
push
xlat
lcall
cltd
scas
data16
mov
mov
addr16
cmp
int3
push
shll
push
xchg
mov
test
adc
clc
adcb
mov
xor
mov
in
loop
dec
stos
idiv
push
arpl
inc
pop
lock
test
or
push
imul
dec
fsts
outsb
and
cmpsb
sbb
icebp
iret
mov
inc
repz
ljmp
xlat
test
dec
mov
outsb
inc
nop
lea
sbb
inc
push
repz
xchg
imul
addb
mov
push
es
rcl
pop
cmp
repnz
mov
or
dec
je
lock
mov
add
xchg
push
movsb
and
mov
loope
out
lods
hlt
enter
aad
dec
aas
sbb
pop
xchg
insb
xchg
lret
xchg
scas
push
mov
xor
xor
sbb
jl
iret
int
mov
and
and
mov
hlt
dec
or
pop
cmp
mov
imul
ret
dec
nop
mov
popa
fcomp
adc
das
push
dec
movsb
and
sub
push
pop
xor
add
test
sahf
nop
cmpsb
dec
loop
inc
add
fucomip
mov
adc
push
mov
pushf
test
and
jae
pop
int
mov
flds
aad
lcall
dec
movsb
xchg
adc
popf
cmp
stos
xchg
les
or
cmp
push
pop
mov
cmp
sub
bnd
cwtl
add
sub
lods
pop
jae
movsb
fcmovb
ret
sub
inc
push
outsl
adc
mov
notl
sub
cmpsl
pop
lods
inc
repz
adc
cmp
inc
add
movsb
push
cmpsb
into
and
nop
push
push
and
inc
or
adc
lods
lock
pop
movsb
push
cmp
sub
dec
lods
cmpsl
sub
sub
push
inc
cmp
out
sub
pop
mov
stc
pusha
sbb
lret
fistpll
push
add
rclb
push
and
ror
ret
out
pop
push
jno
lods
xor
mov
clc
pop
cmpsb
pop
dec
add
int
das
jns
ret
rorb
subl
inc
mov
pop
add
xor
sub
sbb
icebp
orb
aam
cmp
test
cmpl
cmc
setp
cmp
cmp
and
add
cmp
fwait
les
gs
push
push
jbe
jae
sub
xorb
lcall
loope
call
je
jo
jecxz
repz
pop
or
dec
sbb
in
and
nop
xorl
or
inc
cmpsl
in
aad
sahf
cli
xor
xor
inc
repz
or
dec
data16
int
jo
jae
or
lods
divl
pushf
imul
or
adc
mov
sti
stc
packsswb
or
push
or
or
sub
rolb
icebp
push
inc
leave
push
clc
pusha
lock
mov
adc
mov
jo
mov
mov
sbb
adc
js
addr16
out
inc
pop
adc
push
jne
jb
iret
icebp
insb
icebp
mov
pop
jo
sbb
pop
test
ret
shlb
inc
roll
rcll
jecxz
mov
mov
adc
movsl
mov
pop
jns
push
rclb
add
out
pop
sbb
mov
mov
xor
cld
lret
pusha
shll
push
loope
pop
popf
cmp
xchg
cmpsb
and
mov
cli
adc
loop
dec
inc
addl
cmp
add
dec
dec
in
jae
incl
popa
mov
pop
ja
iret
sbb
popf
and
insl
frstor
mov
repz
lods
rclb
adc
out
mov
addr16
cmp
add
sub
add
xchg
gs
int3
dec
outsb
adc
adc
scas
pop
cli
je
lods
int3
sbb
shll
imul
jns
add
dec
xchg
ljmp
inc
cld
std
push
xor
out
loope
or
xchg
loop
fs
inc
mov
xor
cwtl
jl
xchg
xchg
sbb
sub
jo
xchg
leave
lea
test
aaa
ret
xor
add
stos
sbb
popf
push
push
ficomps
sbb
inc
xchg
inc
movsb
fwait
insb
add
movsl
shrb
lahf
inc
es
lcall
dec
fcoml
xor
xchg
sub
and
jns
ficoml
and
jno
sbbl
outsb
inc
cli
pop
xor
adc
inc
xor
xchg
push
inc
out
and
dec
cmp
sbb
mov
lods
fisttps
aas
pop
mov
scas
dec
add
xchg
fstps
vfrczss
in
pop
notl
repz
xor
movsb
cmpsl
call
loop
cmp
mov
dec
add
fsubl
dec
das
fmull
daa
mov
repz
lods
shl
push
and
push
xchg
mov
xchg
stos
pop
cmpsl
push
push
fisttpll
pop
mov
pop
aad
idivb
pop
push
pop
cmp
loopne
dec
mov
icebp
mulb
cwtl
scas
jmp
rclb
dec
mov
shl
sub
nop
and
cmp
push
add
pusha
xchg
hlt
and
xchg
fsub
adc
dec
incb
xchg
aaa
xchg
xor
push
cmp
inc
jne
and
pushf
cld
out
movsl
inc
inc
pusha
pushf
xlat
aas
jno
lds
test
xor
adc
sub
ret
dec
and
mov
fidivs
ret
jle
adc
or
add
in
dec
int3
xchg
sub
push
push
aam
mov
pop
pop
rcll
lahf
xchg
les
lods
sbb
mov
jne
mov
add
lret
repz
pop
mov
pusha
loopne
lds
xor
sbb
fmul
push
imul
fisubrs
add
sarb
add
daa
out
xchg
xchg
into
xor
cmp
dec
sbb
xchg
stos
sbb
arpl
jno
out
push
pop
xchg
bound
arpl
mov
repnz
leave
out
mov
negl
push
repz
and
out
adc
dec
xchg
sbb
sarl
adc
rcll
adc
cmp
mov
pop
xor
fistl
fcmovne
les
add
aas
xor
lds
xor
data16
pop
mov
cmp
aad
fs
pusha
adc
adc
jnp
cmp
mov
jae
xchg
pop
add
adcb
ja
jbe
push
or
pop
mov
shr
sbb
jnp
inc
out
mov
mov
jbe
add
and
jle
inc
dec
in
adc
or
ret
mov
push
lds
rolb
xor
jge
adc
and
xchg
inc
or
inc
ljmp
sbb
out
add
push
enter
push
push
xor
int
cs
outsl
test
push
jnp
aaa
stos
pop
adc
push
adc
sub
push
dec
les
jno
scas
aad
jmp
mov
jl
cmpsb
push
inc
dec
int3
xchg
pop
wrmsr
inc
mov
shll
fcomps
out
dec
mov
shll
ficoms
pop
mov
sub
fistl
loop
sbb
xor
cmpsb
ret
int3
cmpsb
cltd
xchg
push
mov
inc
sbb
jge
adc
sub
js
inc
leave
rcrl
push
mov
gs
and
inc
add
lea
repnz
dec
dec
gs
in
lods
outsl
mov
push
push
cwtl
rorb
push
cmp
cmpsl
ss
push
cmp
mov
add
mov
mov
movsb
inc
dec
lock
mov
lahf
xor
int
pop
ret
sub
mov
xor
dec
add
xchg
lahf
pop
xchg
cmp
push
and
add
in
fisttpll
cli
insl
lea
mov
sbb
fcompl
mov
mov
mov
cmpsl
js
jnp
aaa
cmp
std
arpl
or
popa
mov
xor
dec
sbb
les
leave
stos
inc
test
push
test
xchg
mov
push
push
scas
jb
push
push
mov
es
jge
cmp
addl
xor
cmc
test
sub
inc
push
arpl
rorl
push
cs
push
xchg
fidivs
xor
xchg
jecxz
scas
pop
pop
test
push
lods
sahf
aam
sub
rcll
out
repz
sub
mov
prefetcht0
jg
mov
ret
and
lods
push
jg
xor
cmp
loop
jmp
in
push
stos
loope
xchg
adc
rcr
xor
cmp
push
dec
lret
out
test
jbe
push
fwait
jg
pop
popa
pop
dec
mov
sahf
in
push
jb
sub
in
fnstenv
mov
repz
lcall
pop
add
xchg
testl
or
pushf
xchg
mov
in
gs
in
fs
in
add
pop
cmp
or
add
push
ljmp
popf
and
mov
insl
dec
pop
mov
ffree
data16
mov
pop
out
xlat
popa
push
push
in
jo
push
roll
dec
rcrl
jmp
jmp
lcall
test
leave
mov
pusha
xchg
push
mulb
aad
add
xor
scas
and
adc
mov
mov
xchg
pop
test
aas
divl
xchg
and
cwtl
pop
jae
insl
dec
push
adc
call
shl
rol
sahf
sti
imul
nop
add
ds
dec
les
stos
cltd
in
std
mov
sub
mov
sbb
ror
and
xor
das
dec
sahf
jle
data16
dec
mov
and
out
aas
mov
stos
inc
outsl
repnz
aaa
jp
loopne
daa
arpl
outsb
jne
pop
xlat
push
mov
xor
dec
add
ljmp
loope
mov
xchg
xorb
cmpsb
xchg
dec
sti
test
sbb
cmpsb
xor
rcrb
pusha
jge
das
inc
out
enter
pusha
sbb
fdivrs
movsl
mov
shl
rol
jmp
mov
mov
and
nop
cmp
mov
push
add
call
out
hlt
inc
xchg
jo
pop
fsts
or
mov
outsl
inc
aad
pop
inc
iret
cmp
aaa
xchg
sub
mov
xchg
in
lahf
rorb
inc
adc
adc
pop
fwait
push
out
jle
daa
inc
xor
test
mov
fidivrs
dec
fcoms
mov
in
push
xlat
cwtl
jbe
pop
out
shll
daa
in
pop
sbb
sub
inc
ja
sahf
in
dec
adc
ret
pop
xchg
rorl
aam
push
nop
out
in
pop
stc
mov
mov
fdivrs
fstpt
xchg
sub
mov
ret
nop
add
test
push
lcall
xor
jl
aas
stc
push
or
cs
pushf
mov
jmp
fidivs
fldcw
mov
lret
adc
pop
mov
je
sbb
xchg
fimull
or
cld
in
and
inc
inc
stos
push
nop
adc
clc
mov
cmp
repz
into
andl
mov
mov
xor
mov
mov
bound
dec
dec
sahf
add
test
repz
inc
gs
and
xlat
fcom
not
jnp
imul
add
inc
movsl
inc
sbb
insb
not
es
int
loop
xchg
in
add
stos
fistl
sbb
adc
or
stos
xchg
loop
mov
cld
lret
out
das
pop
in
pop
rolb
and
pushf
xchg
adc
stos
rclb
cltd
mov
and
les
mov
push
stc
mov
dec
pop
push
je
mov
inc
clc
mov
pop
mov
mov
mov
mov
inc
mull
sbb
sub
lcall
or
movsl
xchg
mov
leave
scas
mov
mov
lods
dec
hlt
out
xor
outsl
cs
mov
iret
xchg
jno
jge
and
ss
jns
pop
sub
addl
push
mov
sub
jmp
push
cmpsl
cltd
loop
enter
jns
movsl
pop
dec
jbe
push
rorb
cmp
mov
adcl
enter
fcoms
fidivrs
fwait
rcl
pop
and
sahf
ljmp
rcl
sbbl
mov
stos
hlt
mov
iret
dec
rclb
pop
das
and
out
xorb
mov
add
clc
mov
adcb
push
cmp
or
xor
jae
cmp
orb
sbbl
jg
xchg
cli
das
dec
stc
mov
out
add
test
pushf
jge
cmc
js
pop
pop
adc
dec
or
outsl
fsts
xlat
or
fcomps
fildll
sub
jle
pop
add
fwait
stos
dec
rclb
jns
add
cmp
scas
push
jb
jg
add
push
rcr
or
push
stc
mov
out
push
pusha
jp
int3
add
scas
int3
pop
jns
stc
insl
sub
pop
sub
shl
stc
mov
sbb
cld
movsb
or
push
jae
cld
clc
cmpsb
inc
ja
jl
nop
adc
push
daa
lahf
fidivl
leave
enter
mov
xlat
jle
pop
lcall
and
les
lock
mov
scas
cmp
flds
insl
pop
dec
stos
dec
lds
xchg
lret
mov
dec
xor
mov
cld
out
xchg
aaa
fidivl
inc
add
inc
int3
push
mov
mov
cltd
inc
add
jp
jl
fwait
aam
sbb
lret
and
jns
xchg
sbb
shr
mov
adc
jg
incl
adc
push
pop
jno
mov
jg
mov
js
loopne
mov
adc
shlb
xchg
mov
xchg
adcl
inc
js
out
out
mov
aad
lahf
jmp
xchg
inc
leave
outsb
mov
scas
fstl
loop
sbb
dec
lahf
pop
bound
dec
inc
pop
push
insl
in
aas
sbb
xor
fstpl
js
mov
pop
push
and
jmp
orb
hlt
pop
fisttpl
sub
cmp
jl
iret
test
jnp
icebp
ret
add
icebp
cwtl
mov
pusha
test
jno
daa
jl
das
repz
xchg
inc
adc
mov
rclb
sbb
js
cmpsb
and
pushf
jmp
xchg
inc
data16
cmpsb
add
add
arpl
jge
popa
mov
mov
sub
cmpsb
mov
jne
movsb
aad
lock
in
jne
dec
or
add
push
cld
xchg
mov
fisubl
jnp
sub
inc
lock
fsubrl
icebp
xor
xchg
sbb
mov
mov
mov
mov
and
fsts
filds
or
xchg
jl
call
fwait
arpl
cmp
dec
into
ret
cmp
js
ds
push
cmp
adc
add
fstps
pop
jno
xor
js
fistl
pop
outsl
pop
inc
xchg
xchg
cmp
mov
cmpsb
add
xor
fwait
clc
dec
xor
ja
mov
push
scas
or
popf
ja
call
std
mov
add
mov
jo
inc
mov
pop
test
xorl
push
jmp
mov
lods
push
jmp
sbb
fidivl
lds
jle
movsl
inc
xor
mov
mov
push
and
clc
sbb
dec
xor
cwtl
into
sti
ja
and
push
and
push
or
inc
jne
xor
push
cld
cmc
inc
fs
repnz
mov
fisubrs
stos
nop
pop
sub
mul
jecxz
nop
or
ret
cmp
push
bound
outsl
or
adc
jg
cmp
jmp
test
and
push
call
sbb
inc
jnp
lods
cmp
nop
incl
ljmp
pop
push
sub
bound
jbe
xchg
inc
fcmovu
shll
xchg
push
into
jp
test
jmp
fs
repz
adc
outsb
mov
inc
mov
pop
push
sbb
aaa
rcr
mov
or
fisubrs
push
shlb
data16
push
push
push
aaa
cwtl
dec
shrl
insl
push
lods
addr16
mov
add
shlb
insb
mov
cmpsb
mov
arpl
lret
loope
icebp
push
xchg
jmp
lea
nop
xor
das
arpl
sbb
push
cmpb
insl
insb
xchg
push
dec
push
aaa
sbb
dec
adc
cwtl
pop
add
mov
jns
repnz
xor
popf
add
mov
div
outsb
jns
push
lahf
mov
int3
loope
dec
add
lret
aam
push
push
fsubl
movsl
jle
mov
mov
aaa
test
jmp
jecxz
scas
les
fisubs
leave
out
imul
pop
idivb
xchg
mov
icebp
ret
into
idivb
cmpsb
call
int3
push
cmp
mov
mov
bound
pop
push
cltd
push
cld
sbb
pop
jno
mov
push
stos
cvtps2pi
outsl
imul
dec
movsb
push
mov
fst
mov
cwtl
imul
cmpsl
orb
jmp
leave
lret
and
pop
ret
divl
mov
dec
dec
add
push
shrl
adc
jg
push
stc
rcr
push
sub
cmp
std
movsb
mov
fadd
push
xor
std
xorb
mov
mov
mov
iret
adc
mov
sbb
aaa
lcall
rcrl
add
push
ljmp
pushf
repnz
jecxz
jnp
in
lret
les
aad
cmpsl
out
dec
or
mov
out
sub
in
mov
inc
stos
cmp
mov
inc
imul
jmp
jbe
pop
push
pop
or
mov
enter
or
lock
ja
push
adc
into
in
inc
ret
int3
mov
lret
mov
mov
dec
inc
cmc
xchg
jp
aam
ret
fistpll
cmc
mov
lret
mov
cmp
mov
ds
enter
sub
lcall
ret
pop
mov
ret
pop
jle
sub
out
movsl
out
xor
inc
sub
sti
and
cmp
clc
arpl
mov
stos
cmp
cltd
inc
insb
add
mov
xor
ret
mov
ljmp
mov
sbb
mov
dec
clc
fisubs
pusha
sti
dec
push
test
xchg
sub
cmp
daa
cwtl
imul
mov
cli
outsb
nop
push
jl
je
dec
xchg
adc
adc
mov
add
push
fldenv
mov
xor
add
lods
push
mov
popf
nop
stc
in
inc
or
gs
arpl
ljmp
stos
dec
mov
xchg
add
mov
popa
lret
inc
in
lahf
pop
incb
es
push
cltd
andb
push
arpl
shlb
sub
aad
mov
imul
decb
add
andb
mov
add
outsb
pop
push
in
jmp
mov
sbb
test
fwait
test
scas
pop
xchg
out
into
xchg
stos
mov
push
pop
loopne
pop
test
cmpl
jae
mov
divl
movsl
flds
inc
sub
mov
xchg
mov
sbb
mov
jnp
pop
adcl
push
repz
xchg
sub
jp
popa
mov
cmc
push
xorb
out
mov
inc
lcall
mov
jge
sbbl
cmp
mov
cmp
adc
cmpl
or
cs
in
cmp
sbb
or
shll
sbb
jp
repz
int3
sbb
addr16
sbb
test
adc
xchg
in
push
cmp
mov
xor
call
pop
mov
sti
jb
sbb
out
or
dec
cwtl
out
fists
sbb
shll
daa
and
sbb
nop
or
int3
leave
nop
dec
arpl
cwtl
ja
and
sub
in
inc
std
xor
out
dec
pop
int
std
mov
inc
jne
push
dec
xchg
mov
jg
aad
jecxz
cmp
out
ss
shrb
xchg
mov
and
shl
lcall
xor
sti
adcl
repnz
repz
in
hlt
leave
dec
jp
inc
scas
push
jl
jl
pop
or
inc
jnp
sub
mov
sbbl
rorb
cmp
xchg
mov
out
mov
push
iret
or
addr16
lock
add
xchg
das
stc
mov
inc
xchg
ret
dec
cmpsb
sub
jns
inc
stc
xchg
xchg
repz
movsl
push
mov
cmpsl
arpl
mov
shll
ret
lods
or
adc
mov
mov
dec
xchg
lods
clc
xchg
cmpsl
stos
cltd
jno
out
mov
aas
jne
mov
pop
inc
subl
leave
fisubrl
push
mov
jns
add
fnstcw
les
in
sub
lea
cmp
mov
inc
inc
inc
sbb
ficoms
ffree
push
xor
mov
sbb
cltd
outsl
and
mov
add
test
bound
jo
pusha
loopne
mov
stos
outsl
loop
pop
push
arpl
cmp
fucomi
int
jecxz
and
cmp
dec
aam
xchg
pop
cltd
inc
mov
inc
xor
cld
lock
jp
decl
ret
cld
pop
mov
mov
es
out
or
nop
out
mov
mov
sahf
popa
data16
rorb
notl
lock
je
nop
cmp
iret
ret
jge
bnd
insb
add
flds
add
sahf
jne
out
jl
lret
add
sub
or
lea
fwait
ret
adc
dec
addr16
pop
inc
jns
adc
pop
fiadds
aaa
rcrb
lods
call
mov
les
cld
cmpsl
cmpsb
jbe
push
js
xchg
adc
mov
inc
cmp
and
pusha
adc
cwtl
pop
mov
test
arpl
inc
hlt
sbb
or
stc
loopne
outsl
mov
icebp
or
fildl
test
dec
jbe
fldl
test
out
fs
cli
std
das
out
repnz
push
and
pop
scas
adc
push
xor
cwtl
movsb
dec
mov
jg
outsb
int
jmp
inc
repnz
lret
lcall
xchg
and
nop
jmp
data16
mov
pop
icebp
in
pop
push
cmp
test
movsl
mov
lcall
bound
push
sbb
lahf
and
ss
xor
dec
push
scas
mov
shr
pusha
mov
pop
sbb
popf
cmc
xchg
aad
and
sbb
in
ljmp
sahf
sub
mov
and
adc
mov
cmp
bound
sub
int
lahf
ret
cmpl
mov
mov
outsl
lds
mov
outsb
xchg
aam
mov
aam
jno
xchg
sarb
cmpsl
xor
xchg
mov
sahf
bound
sub
daa
fs
stos
or
fxch
mov
jge
cld
punpckhwd
dec
xchg
cmpsl
outsb
jnp
inc
cmc
fiaddl
fcmovb
lods
decb
jp
ds
add
and
iret
out
in
fdivrs
xlat
mov
add
stc
and
scas
fsubrp
jne
call
inc
testb
mov
sbb
addb
data16
outsb
cmp
xbegin
add
mov
or
pop
sub
xor
fs
flds
adc
test
out
mov
xchg
jge
popf
repz
loopne
push
inc
push
dec
in
jg
loop
xor
and
dec
into
adc
insb
mov
sahf
adc
mov
cwtl
stos
out
xor
add
fstps
dec
aam
mov
sbb
out
lods
adc
lods
push
adc
pop
sub
jbe
bnd
ss
loope
mov
andb
mov
fimuls
out
rorb
aas
gs
pop
fimuls
push
lods
and
fs
gs
dec
dec
add
mov
dec
jmp
outsb
push
add
ret
divl
ja
rcll
scas
shrb
test
call
lods
in
and
hlt
xchg
mov
cmp
add
or
ds
adc
mov
aaa
jle
hlt
or
xchg
or
addr16
sahf
or
jne
mov
cmpsb
gs
cmpsl
sbb
int3
push
xor
jecxz
aaa
xlat
rclb
dec
jmp
jp
jmp
sub
stos
jl
xchg
dec
mov
ret
fnsave
ds
wrmsr
jns
mov
jno
ljmp
pop
xor
mov
jp
mov
fwait
jno
lret
jo
sbb
xor
test
pop
xor
dec
push
add
jno
sahf
mov
jns
jl
mov
cmp
scas
inc
mov
sub
lods
ja
mov
inc
ret
xor
movsb
push
inc
lahf
in
ja
clc
gs
xlat
inc
std
mull
fsubr
pop
mov
fcom
pop
jnp
cwtl
data16
inc
stc
xchg
out
xchg
ja
cmp
sbb
sub
push
or
fcom
test
arpl
mov
push
sub
dec
pop
adc
mov
mov
add
or
xlat
mov
and
mov
xchg
mov
adc
imul
test
and
and
mov
lea
push
fistpll
test
dec
ja
mov
jge
daa
or
testl
mov
or
insb
stos
popf
mov
scas
sub
jne
dec
add
mov
jmp
mov
mov
add
jg
out
xor
int
xchg
cld
mov
addr16
aas
pop
xor
aad
mov
mov
lods
stos
pop
insl
sub
cltd
fchs
ljmp
or
and
jnp
or
mov
xchg
and
add
push
cmp
lret
fwait
cmc
call
lock
dec
popa
mov
xor
push
add
cli
xor
mov
addb
sub
aad
mov
mov
pop
xor
sub
nop
ret
sbbb
jp
xor
cli
jecxz
imul
rcrl
cmp
in
jmp
xor
fsubl
xchg
andb
pop
mov
mov
push
dec
popa
inc
dec
pop
xchg
inc
pop
ljmp
mov
or
add
xlat
cmpsl
adc
rclb
cli
lock
test
jo
jg
or
mov
or
inc
jge
insb
xchg
inc
xchg
enter
push
mov
inc
test
icebp
orb
adc
sub
xchg
js
not
insb
aam
leave
xchg
mov
mov
or
inc
test
push
lcall
xor
push
lcall
mov
movl
gs
xlat
cmp
leave
dec
jb
xor
sub
or
repz
mov
pop
loope
repz
iret
jnp
outsl
mov
out
ret
mov
inc
pop
mov
add
test
xor
ss
push
daa
fucomi
sbb
enter
testb
stos
xchg
dec
out
cmpsb
stos
xchg
pop
shrl
les
orb
cmpsb
ret
mov
sub
pop
fnsave
fwait
loopne
movsl
cmpsb
adc
loop
dec
mov
jne
xchg
mov
xor
sub
std
sub
lock
adcl
xor
xchg
pop
movsb
cmp
mov
mov
push
lods
and
popa
fs
sar
cmpsl
iret
sbb
aad
enter
rorb
and
repz
and
je
test
jle
bound
mov
gs
cld
adc
mov
push
negl
mov
sub
mov
jmp
add
ljmp
jb
test
rolb
aam
stc
clc
push
and
int
lahf
xor
sub
dec
std
mov
pop
scas
push
xlat
inc
in
push
mov
mov
dec
ss
lret
loope
xlat
mov
fidivrs
fmull
leave
pop
sbb
xlat
add
and
pop
adc
add
clc
out
mov
jle
mov
or
lds
mov
iret
es
popf
jecxz
push
or
js
jnp
call
xor
adc
bound
adc
out
jle
outsl
cmp
cmp
js
or
stc
leave
pop
test
movsl
xor
ret
pop
pop
mov
jg
out
push
ds
shlb
lea
imul
push
rclb
movsl
outsb
test
pop
dec
mov
fcomp
fidivrs
movsb
xor
popf
mov
pop
xlat
inc
movsb
test
dec
dec
xor
push
mov
sub
cmc
jns
push
inc
mov
mov
rcrl
sbbb
xchg
jmp
test
mov
out
daa
sahf
xor
push
call
inc
out
pop
test
sbb
inc
aas
cli
xor
push
shrl
lcall
lret
cmp
adc
cmp
and
jle
arpl
sbb
mov
xchg
cwtl
and
fwait
push
xor
sbb
jg
imul
out
cmc
pop
jno
and
and
mov
hlt
ret
add
fisttps
xchg
and
test
imul
loopne
sub
fisubl
loopne
add
pop
adc
mov
fldl
jae
nop
jmp
imul
div
iret
dec
std
nop
stos
lods
es
nop
jg
push
cmpsb
inc
jg
in
insl
movsl
cld
xchg
leave
lahf
out
mov
mov
test
dec
cmp
lea
xchg
pop
addr16
xchg
insl
inc
pop
push
push
jle
sub
adc
push
in
sub
sbb
mov
shrb
cld
xchg
fisubl
addb
sbb
fwait
stos
pop
push
lahf
sbb
cs
jl
in
push
sbb
test
xor
inc
rorl
in
ficoml
pusha
decb
loop
xchg
test
mov
xchg
dec
int3
inc
ret
fsubrs
and
dec
xchg
mov
test
in
push
jae
aaa
mov
mov
or
xor
or
in
lahf
in
cmp
xchg
dec
mov
jge
add
out
dec
sub
clc
mov
cmpsl
test
adc
pop
sbb
push
mov
mov
cmpsl
dec
loop
jae
nop
adc
pop
jno
inc
mov
cmp
stc
sub
mov
jno
js
cmpsl
pop
add
and
pop
jo
and
push
test
in
inc
in
ja
sub
fldl
mov
push
jno
repnz
or
mov
cpuid
dec
add
inc
mov
stc
aas
cltd
gs
outsb
jl
jmp
popa
inc
aam
test
idiv
jg
cmpsl
mov
test
icebp
and
xchg
push
pop
adc
dec
daa
xchg
shrl
add
and
mov
popa
xor
ficompl
jp
sbb
out
pop
addr16
cmp
and
push
mov
cmpsb
sarb
cwtl
add
jmp
popa
vmovq
jae
xchg
or
popf
loop
repnz
pop
pop
or
jo
stc
int3
movsb
stos
dec
ud0
sbb
fsubr
push
cmc
das
pop
jb
dec
pop
in
in
sbb
fstpt
cmp
cltd
movsb
hlt
and
and
adc
stos
pop
xor
fdivp
fs
xchg
cld
sbb
loop
push
stos
or
sub
mov
xchg
adc
out
inc
insb
mov
xchg
fcmovb
inc
loopne
sti
call
mov
dec
push
test
or
or
xchg
sbb
out
mov
ja
sarb
sbb
xchg
je
sti
cmpsl
jmp
stos
push
into
mov
scas
lock
cmp
fisubs
repnz
jbe
mov
mov
jge
mov
outsl
mov
xchg
sbb
test
push
sub
xor
rorb
imul
jmp
movl
lcall
imul
dec
ret
imul
jecxz
rolb
pop
dec
cmp
cs
movsl
fisttpl
shrb
icebp
loopne
outsl
aaa
dec
fisubl
insb
mov
pop
std
in
sub
inc
inc
pop
neg
push
cmp
mov
cltd
sti
ljmp
mov
and
xor
in
push
mov
mov
cld
cmp
add
push
popa
sbb
int3
data16
out
mov
or
daa
mov
jne
outsl
loope
aaa
stos
xchg
xchg
add
push
inc
insl
and
and
repnz
push
jbe
push
fistl
add
outsb
jno
xchg
ret
xor
jbe
xor
xchg
not
cltd
hlt
push
mov
adc
push
gs
adc
jmp
mov
sub
and
imul
jb
cs
nop
sub
adc
jp
dec
incb
xchg
bound
pusha
pop
xchg
in
ljmp
mov
test
in
inc
scas
out
jecxz
data16
pop
rorb
daa
cwtl
fiaddl
pop
xor
xchg
push
and
fbstp
int
adc
mov
les
sbb
cld
aam
xlat
mov
scas
std
jge
mov
xor
das
test
push
js
push
jg
nop
clc
leave
lret
sub
stos
sub
test
rolb
fsts
icebp
in
in
or
push
in
pusha
push
fwait
jns
add
addr16
cmc
roll
nop
xor
jmp
mov
sti
rep
sbb
mulb
push
rcr
cmp
sbb
inc
adc
std
push
ljmp
or
jmp
es
inc
and
fstps
xor
js
mov
enter
sbb
push
jp
mov
imul
daa
adcl
xlat
fst
xor
scas
sub
fsubl
mov
gs
dec
call
mov
inc
stos
ds
cld
icebp
outsb
mov
iret
dec
call
loop
mov
leave
fsubs
insb
xchg
pop
inc
cltd
and
pop
addl
push
xchg
sub
test
lea
pop
dec
scas
pop
ss
enter
int
mov
movsl
into
xor
jbe
in
sti
sub
repnz
es
pop
fildl
test
inc
mov
adc
popf
mov
push
cld
outsb
push
das
jp
gs
xor
rorl
xchg
push
dec
stc
pop
jo
adc
pushf
mov
nop
stc
outsl
ljmp
or
jmp
or
stos
mov
cltd
push
push
mov
cwtl
mov
aad
and
test
je
pop
ficoml
lds
movsl
add
icebp
sub
mov
es
mov
stos
add
jo
rcr
sub
lahf
xchg
loope
dec
jg
xlat
or
dec
shrb
mov
ss
stos
lea
hlt
xchg
push
out
and
pop
sub
pop
jae
mov
sbb
aad
out
add
insb
push
stos
stc
push
stos
insl
add
cli
inc
cmp
call
xlat
cmp
cwtl
jb
pop
inc
adc
or
loopne
xchg
lock
repz
in
push
nop
sbb
add
fwait
dec
dec
popf
cwtl
addr16
repnz
jbe
jecxz
adc
sbbb
jg
or
xor
sub
insb
mov
test
stc
inc
mov
pop
jae
xchg
mov
sub
outsl
jne
pop
cmpsl
mov
aad
push
fcomps
popf
push
pop
cli
in
outsb
outsl
bound
jmp
iret
fistps
lock
mov
add
xchg
in
imul
sti
xor
jge
mov
bound
leave
fcoml
fwait
push
xchg
add
repnz
fstps
jbe
fs
nop
ds
lods
movsl
adcl
out
rclb
xor
jne
mov
jmp
push
pop
xor
add
xchg
dec
mov
scas
xor
pop
fldl
pop
xor
xor
inc
in
add
mov
jmp
ja
push
sarb
gs
pop
mov
xchg
adc
test
dec
icebp
mov
xor
push
arpl
loope
inc
mov
mov
jecxz
and
xor
or
xor
mov
xchg
pop
and
outsl
sbb
pop
xor
mov
loope
mov
cmp
pop
jg
enter
loop
sbb
pop
add
xlat
xchg
pop
pop
sbb
push
xchg
mov
xchg
out
cmp
loope
rorl
ds
jbe
arpl
sub
jmp
cld
push
jle
fsub
sbb
mov
sti
xor
cs
xchg
lret
mov
addl
mov
push
int
lahf
or
inc
dec
out
sti
xchg
add
pop
ss
cmpsb
pop
jo
sbbb
lods
adc
xor
in
and
ss
add
mov
test
ljmp
pop
jo
dec
jl
mov
fwait
mov
sub
push
les
lods
repnz
jmp
mov
insb
and
jno
out
adc
dec
dec
js
mov
fcoml
in
pushf
stc
cmp
adcl
dec
push
pop
inc
aad
dec
xchg
push
jno
push
out
xor
icebp
add
inc
insb
mov
or
dec
mov
xor
into
mov
outsl
sbb
sbb
fistpl
and
or
jae
add
fsubrl
mov
outsl
addr16
cltd
jg
xchg
push
nopl
repz
pop
xor
inc
cmc
pop
xor
mov
mov
in
shrl
jp
fnsave
add
or
xchg
jns
data16
pop
add
jl
and
test
or
cmp
out
loopne
call
push
fst
repnz
ss
sbb
sub
push
and
push
cmp
dec
stos
xchg
roll
jge
sub
xchg
sbb
in
mov
test
mov
push
xchg
cmp
pop
ficomps
test
pop
test
jne
nop
push
mov
ret
xchg
lret
fimuls
mov
jne
adc
pop
add
hlt
negl
andb
jb
xlat
cmc
ret
push
shrb
pop
push
cld
cmp
data16
popf
sarl
cmpsb
fucomi
pop
insb
and
cmp
popa
testb
in
push
push
mov
arpl
in
xor
cmpsb
push
out
push
cmp
sub
push
jbe
cmp
jl
and
inc
lcall
jnp
jmp
or
insl
mov
inc
and
sub
test
sbb
std
cmp
cs
test
stos
idivl
push
sub
outsb
lds
adc
leave
adc
sub
push
aas
rorb
mov
and
clc
add
pop
clc
pop
std
and
inc
scas
mov
push
cmpsl
jmp
popf
dec
dec
cs
repz
movsb
ret
fisubrs
cmp
scas
xor
sbb
stos
jmp
xchg
pop
dec
leave
push
jne
mov
adc
push
mov
xor
sub
loopne
fcoms
repnz
jg
pop
push
in
lds
cld
test
insb
xchg
ret
xchg
addl
fstl
jb
inc
cs
jle
mov
inc
ret
or
sub
push
sti
outsb
pusha
sbb
ss
enter
push
shlb
flds
and
gs
int3
or
cmp
dec
ss
jp
lods
push
mov
scas
out
dec
lock
dec
ret
out
cmp
pop
lret
rorl
xor
xor
lock
stc
dec
lea
jae
add
and
nop
ret
lock
insb
rcll
std
add
stos
mov
sub
out
aam
jnp
scas
dec
jp
sbb
inc
mov
leave
push
jmp
jae
pop
andb
inc
push
popa
cltd
pop
mulb
or
sub
mov
ds
pop
lcall
clc
repz
or
sbb
pop
andb
mov
jne
fcmovnb
out
cmpl
lods
jg
imul
push
jmp
out
cmp
pop
pop
lods
and
xor
adc
adc
inc
mov
movsb
xor
xchg
lret
mov
xchg
js
cmp
in
repnz
add
sub
fdivl
aaa
pop
pop
xchg
loopne
and
mov
ljmp
jmp
int
cmpsl
popa
mov
sbb
mov
jns
pop
insl
mov
inc
movsl
in
aad
ret
shlb
xchg
sti
dec
outsl
lea
mov
sbb
inc
les
cmp
mov
enter
ret
daa
add
stc
js
scas
mov
cmp
or
sbb
pop
fsub
loopne
mov
add
cmp
dec
sub
hlt
adc
insl
es
or
mov
rclb
fdivp
and
rorb
lods
or
dec
test
push
stc
sti
mov
sbb
lods
sub
pop
sub
xor
pop
adc
mov
add
inc
lea
push
insl
std
mov
dec
test
sbb
xchg
testl
adc
add
adc
or
jb
push
xchg
xor
nop
rcl
adc
shr
pop
stc
push
ds
mov
push
and
stos
sahf
dec
pop
mov
jbe
mov
xchg
push
and
das
mov
jo
lret
dec
jo
cmp
push
aad
xchg
je
int
and
pop
bound
lret
stos
stc
mov
mov
outsl
enter
mov
test
push
out
in
ljmp
mov
pop
and
dec
leave
mov
pop
bound
jns
clc
test
add
jecxz
lcall
adc
outsb
mov
adc
mulb
jmp
inc
pop
mov
mov
xor
xchg
outsl
xor
jmp
outsl
mov
push
lods
cmp
jns
lret
pop
sub
adc
push
push
andl
cmp
lock
inc
pop
hlt
adc
pop
xchg
imul
clc
stos
xor
push
data16
jae
scas
stos
ja
nop
pop
fldenv
xchg
xchg
into
sub
push
mov
or
xchg
int3
mov
mov
jb
and
or
pop
adc
imul
lea
mov
mov
cmp
out
xchg
sti
idivl
mov
es
dec
mov
loopne
loopne
or
jne
or
mov
mov
stc
xor
loope
fcom
mov
imul
jg
scas
pushf
pop
ret
dec
idivl
xchg
cwtl
scas
xor
stc
clc
out
ja
jbe
outsb
inc
sub
push
push
std
adc
mov
jae
jno
jge
pop
decb
rclb
pop
dec
adc
fbld
enter
loopne
xchg
mov
mov
cmpsb
mov
push
add
imul
cmp
dec
out
xchg
loop
fmul
xchg
lret
add
dec
mov
scas
or
adc
mul
pop
mov
outsl
push
lods
xchg
sub
dec
iret
dec
clc
das
imul
mov
jae
out
call
jmp
out
push
pop
std
mov
push
js
fmuls
cli
and
push
jmp
aam
sahf
cmp
lea
mov
insl
test
ljmp
adc
sbb
jns
mov
sub
xchg
incl
push
test
test
loopne
out
mulb
clc
mov
pop
pop
mov
or
mov
sbbl
sbb
xor
cmpsl
jno
lods
int
out
scas
inc
cmp
loopne
jg
xchg
je
inc
cmp
adc
cmpsl
cld
push
fidivrs
add
xchg
pop
xor
adc
add
dec
frstor
clc
jne
notl
dec
lcall
sbb
outsb
arpl
mov
fsub
test
pop
stc
pop
cmc
pop
add
lods
mov
popa
lods
test
pop
sbb
mov
test
push
pop
shrb
cltd
daa
mov
or
jge
ljmp
adc
xlat
out
jae
ret
adc
cmpsb
stos
into
adc
mov
dec
add
or
adc
pop
out
cmp
mov
inc
aad
rorb
ljmp
cld
mov
jns
dec
mov
lock
pop
das
and
popf
loope
sbb
fstps
fistpll
lea
lahf
test
sqrtps
lock
shlb
mov
and
lock
sub
cltd
cwtl
dec
loop
cmp
scas
xor
aaa
xor
mov
sub
data16
subl
xchg
movl
repz
add
aad
xchg
imul
popf
mov
mov
fdivrl
dec
or
lret
jle
and
fsubrp
dec
and
or
sub
push
xchg
ret
leave
or
xor
push
push
mov
pop
pop
push
cmp
jmp
call
iret
fildl
les
ret
lock
push
xchg
loope
adc
sub
mov
mov
mov
push
movsb
bound
add
int3
push
sarl
stos
dec
cmp
mov
inc
or
and
mov
loope
ds
clc
push
mov
dec
pop
dec
pop
jecxz
sbb
bound
repz
fcmovu
fabs
jl
adc
leave
add
mov
pop
push
fidivrl
rcrb
dec
pushf
and
sbb
lods
mov
daa
pushf
xchg
jg
lret
into
sbb
adc
and
cli
inc
xchg
lcall
pop
imul
mov
pop
imul
dec
add
inc
jp
add
mov
leave
fistpll
mov
mov
out
rcrl
repz
aam
mov
mov
lret
ds
into
or
stos
inc
in
bound
jno
sbb
fwait
pop
in
cwtl
sti
mov
add
int
cmp
jbe
jp
sbb
insb
je
sbbl
mov
dec
outsl
mull
sbb
add
rcrl
pop
xor
dec
fcomps
and
aad
cmpsb
lahf
repz
mov
leave
cltd
adc
pop
std
fistl
ja
jno
imul
orb
adc
xor
ret
lret
adc
cmc
push
aas
mov
aad
pop
jno
xchg
clc
aad
mov
decl
inc
sub
in
jns
mov
push
lea
mov
mov
sub
sub
aaa
fisubs
insb
fwait
pop
pop
les
and
add
or
pop
icebp
push
or
outsb
lds
cwtl
dec
neg
mov
mov
insb
ret
enter
addr16
inc
push
cltd
movsb
jecxz
stos
inc
cmp
jae
xchg
pop
fwait
pop
test
cmp
add
es
fucompp
enter
jmp
pop
out
adc
scas
nop
out
push
xchg
mov
sub
and
adc
out
cs
jmp
mov
and
call
xor
cmpsb
mov
jnp
cs
sub
pop
divb
out
adc
les
push
cli
lret
pop
ficoml
mov
mov
das
pop
mov
insb
mov
icebp
daa
jne
cmp
mov
dec
int
mov
cmp
scas
mov
mov
inc
cld
jnp
mov
cmp
arpl
mov
sbb
rorb
mov
mov
or
xchg
dec
or
mov
in
outsb
mov
mov
das
mov
das
mov
add
lock
fimuls
pop
pop
ss
inc
stos
ficoms
cmpsl
fucomi
xchg
jb
mov
aad
aam
stos
paddsb
and
jns
and
data16
jge
sbb
or
mov
mov
inc
pusha
aad
mov
sub
aaa
nop
add
mov
in
jle
data16
subb
push
xlat
xor
ficompl
outsl
icebp
fsubs
decb
lods
cltd
pop
sub
pop
out
jg
jbe
imul
push
pop
inc
add
add
lret
out
pop
fistpl
dec
and
bound
in
out
and
push
je
ss
mov
xchg
add
pusha
jbe
pop
pop
dec
sub
loopne
jb
andps
add
mov
mov
xor
and
mov
test
je
push
sarl
jp
push
jmp
lret
xchg
xchg
cwtl
in
push
mov
pop
mov
and
mov
test
int3
cld
sub
mov
fisttpl
sti
std
sub
out
jmp
adcb
cmp
insl
dec
shld
mov
stc
jae
andb
adc
sti
ret
dec
insb
xlat
sbb
xchg
imul
sbbl
into
rclb
scas
pushl
or
test
dec
movsb
fucom
ljmp
cmp
mov
mov
loope
jae
ja
mov
sbb
repnz
xchg
in
hlt
mov
lret
push
cmp
sub
add
iret
jnp
repnz
into
mov
lahf
dec
outsl
push
inc
sub
add
in
aam
add
insb
xchg
cmpsl
andl
mov
push
jns
mov
ret
add
add
jg
mov
bound
pop
popl
sbb
fisubrs
push
jns
jmp
lods
mov
pop
mov
loopne
xabort
jnp
icebp
addb
mov
sbb
ljmp
ret
shlb
stos
mov
mov
ficompl
repz
insb
and
shrb
pusha
mov
xchg
les
xor
into
xchg
push
ret
push
jno
or
or
inc
clc
loopne
pop
dec
ss
inc
pop
fdivp
test
xor
aas
pop
cltd
scas
repz
mov
fwait
dec
icebp
add
leave
test
cmp
roll
inc
std
jmp
xor
cmp
push
xorl
hlt
jl
lock
jbe
push
or
mov
inc
mov
add
fstps
mov
repz
jns
lock
aaa
xor
sbb
stos
sarb
outsl
jbe
and
jg
insl
hlt
sahf
mov
cmp
mov
mov
jnp
lcall
jp
push
cld
hlt
iret
push
jne
sbb
push
inc
les
shl
int3
adc
xchg
cld
dec
add
jp
and
fnsave
in
popf
jg
inc
lahf
xchg
call
shll
jno
jbe
mov
dec
pop
xchg
lcall
cmp
aaa
lret
pop
add
or
fisubrs
test
pop
int3
mov
push
pop
adc
and
pop
stos
int
xchg
or
mov
jne
and
pop
in
add
test
in
mov
cld
xlat
notb
pushf
daa
and
lock
or
lahf
outsb
daa
sbb
arpl
dec
ja
fs
sub
xor
sbb
scas
in
dec
lahf
jle
and
sbb
clc
loop
or
mov
mov
in
sbb
mov
sub
lret
das
int3
mov
jns
mov
int3
dec
aas
push
in
inc
outsl
jo
fsub
outsl
test
jo
in
cmpsl
xchg
std
push
pop
cmc
testb
and
xchg
add
cmc
mov
push
leave
or
test
adc
xchg
mov
jp
dec
mov
lock
mov
popa
xchg
jmp
fnstsw
adc
cld
loope
adc
jbe
ds
mov
add
sub
xchg
pop
adc
cs
mov
bndstx
sub
test
in
ret
xchg
jg
or
out
hlt
inc
dec
jne
test
pop
ljmp
and
clc
lret
pop
inc
mov
inc
mov
sarb
and
xor
in
daa
jg
push
jl
pop
aaa
jmp
xor
into
in
mull
insl
lcall
icebp
xchg
push
jmp
xor
lcall
pop
scas
inc
cmpsl
das
sbb
insl
dec
repz
adc
les
cmp
rcrb
adc
scas
sbb
xor
adc
jbe
out
popf
lods
xchg
iret
insl
loop
pop
icebp
cmpl
js
ficompl
push
les
pop
adc
inc
subl
dec
cmp
xchg
jmp
or
dec
imul
push
sub
xor
add
dec
jmp
clc
outsb
add
fmuls
pop
inc
shrl
call
mov
inc
pop
fwait
sbbl
sub
xor
js
fistl
test
pop
fildl
pop
aad
es
ljmp
push
cmp
sti
dec
and
test
mov
in
imul
dec
ficoms
mov
jno
jb
andl
orb
xchg
fldl2t
sub
cmp
stos
add
jp
mov
lahf
xlat
push
mov
adc
sbb
cmc
decl
jge
lds
aas
xlat
dec
arpl
loop
pop
cltd
or
mov
and
movsl
or
or
cmp
jp
call
and
imul
sub
test
filds
cmp
loope
pop
orb
fstpt
push
out
inc
nop
mov
repz
adc
out
jb
mov
mov
sub
adc
movsl
add
enter
fidivrl
leave
pop
jp
xchg
movsl
loope
xor
ret
xor
mov
int
fsub
and
or
cltd
sbb
jle
clc
pop
inc
ror
les
inc
lods
shrb
outsl
imul
dec
cmp
bound
jl
push
dec
mov
scas
dec
cmp
sbb
fcom
movsb
sbb
mov
testl
bnd
jmp
mov
rcrl
leave
and
cmc
movups
std
cmp
daa
cmp
xchg
mov
enter
xorb
imul
vmwrite
push
je
xchg
jecxz
inc
test
pop
push
cmp
xchg
out
mov
fistps
add
and
xor
pop
pop
inc
sub
iret
cltd
mov
push
push
add
adc
cmovne
push
test
repnz
scas
adc
mov
and
xor
xchg
inc
mov
push
loopne
popf
xchg
shll
out
xor
push
add
mov
pop
inc
adc
adc
mov
or
xor
mov
aaa
mov
pop
sub
aad
mov
cld
jbe
or
xchg
sahf
mov
scas
pop
test
dec
adc
inc
fwait
clc
rorb
lds
lds
push
ret
and
popl
fmul
lock
or
push
shlb
loope
or
xor
sar
imul
mov
mov
mov
int
out
into
jg
jne
mov
and
push
iret
addl
dec
das
enter
sub
push
dec
ret
sbb
les
push
mov
mov
ljmp
cmc
out
sbb
xchg
inc
call
outsl
xchg
js
inc
movsl
adc
add
pop
cld
mov
jae
hlt
es
stc
ja
mov
xor
jne
scas
or
or
loopne
mov
es
jmp
jl
outsl
popa
cmpsb
loope
loop
push
pop
scas
imulb
subb
and
xlat
shrl
inc
frstor
pop
xchg
adc
stc
xorl
sbb
or
pop
cmp
cltd
mov
and
pop
arpl
jo
scas
outsl
or
cltd
stos
push
insb
sbb
inc
sub
xor
mov
lret
outsl
jecxz
sbb
gs
xchg
pop
push
cmp
lret
cld
clc
fnsave
inc
xchg
add
adc
mov
pop
orl
stc
stc
lret
pop
jecxz
in
sub
out
fildl
inc
popa
mov
shl
xor
jnp
nop
sub
fstl
jge
test
dec
and
out
or
dec
mov
mov
inc
push
stos
iret
test
pop
or
or
mov
lock
daa
push
inc
stos
adc
and
nop
leave
sbb
push
inc
push
xor
jb
nop
stos
adc
add
ret
and
pop
inc
loop
out
ljmp
dec
int3
jne
xor
test
dec
and
cld
inc
xor
sarl
lcall
test
push
call
pop
lahf
push
pop
cmpsb
imul
sbb
jns
cwtl
add
js
sahf
mov
dec
mov
arpl
pop
js
jl
cmp
xor
add
stos
aad
mov
fildl
mov
push
test
fabs
and
test
mov
orb
ljmp
out
data16
outsl
leave
negl
pop
shlb
push
inc
mov
push
jle
mov
pusha
jle
aas
faddl
out
movsb
mov
xchg
mov
cmp
cmpsb
call
jl
inc
lock
or
out
or
cmc
cli
pop
daa
and
push
mov
out
jb
popa
test
xchg
mov
rcrb
adc
xor
outsl
mov
and
and
jne
cld
test
dec
sti
add
cmp
xor
incb
shrl
in
test
xchg
and
shll
mov
add
mov
mov
mov
test
mov
jbe
push
loopne
xchg
fcoml
hlt
jecxz
xchg
mov
lods
fmuls
or
mov
into
lods
daa
sbb
xchg
push
xchg
add
std
into
mov
add
imul
loop
loopne
mov
dec
add
pop
mov
pop
sbb
movsl
xor
pop
inc
jle
sub
pop
jne
sahf
adc
cwtl
xchg
sti
and
in
movsb
mov
and
sub
mov
rclb
sub
nop
orb
xchg
fwait
fwait
imul
in
sbbb
or
into
sbb
and
inc
sbb
dec
hlt
mov
mov
jne
fldt
mov
sub
jge
testb
mov
xchg
arpl
in
cmpb
jecxz
imul
dec
jnp
sbb
jnp
sub
cltd
cmp
jg
inc
int3
add
out
dec
mov
xchg
rol
dec
lds
jmp
sub
hlt
cmp
lds
out
push
inc
push
in
mov
movsb
jo
xchg
sbb
outsl
imul
dec
mov
mov
fisubrl
iret
test
add
push
lock
dec
fmull
repnz
je
les
pop
dec
ret
push
pop
inc
jae
cmp
fsubr
inc
ds
aaa
cmpsb
dec
and
adc
mov
xor
cmpsl
push
xor
jg
sub
mov
lahf
cs
sub
mov
std
scas
push
pop
cmp
icebp
cmp
xlat
loopne
cld
repz
or
jne
test
inc
jae
js
mov
and
insb
xchg
out
repz
aad
aas
cmp
xchg
xor
xor
fildl
repnz
add
or
jne
mov
movsl
jnp
dec
and
iret
jge
pop
cmp
push
sub
xchg
cmp
fnstsw
lahf
cmp
loope
imul
mov
adc
cltd
pop
mov
cmp
repz
fnstenv
xor
nop
incb
xchg
mov
cmpsb
jns
scas
jbe
fwait
enter
loopne
mov
pop
sub
shr
cld
int3
call
inc
loope
xor
pop
xor
jl
mov
mov
sbb
mov
xor
lods
adc
notl
mov
xchg
pop
loopne
pop
mov
jnp
fistl
dec
cmp
roll
jl
idivb
dec
in
sub
outsl
mov
adc
fwait
test
leave
add
push
lcall
or
fisttpll
in
addl
jp
push
jb
cmp
cmpsl
xchg
ret
mov
push
mov
cmp
xor
pop
sub
stos
cmp
fistpll
rolb
lock
adc
push
xchg
pop
mov
mov
dec
push
out
gs
cli
jne
popf
mov
js
addr16
mov
repnz
arpl
mov
pop
movsl
int3
lret
in
frstor
into
cwtl
cmp
lods
mov
insl
hlt
lods
sar
fidivrs
pushl
sbb
lcall
outsl
push
cs
mov
or
clc
xlat
mov
mov
inc
jne
inc
addl
fs
mov
stos
pop
ds
xchg
lahf
sub
xchg
idivl
jge
outsl
addr16
and
outsb
into
cld
inc
jl
xchg
pop
mov
and
dec
cwtl
xchg
inc
add
sbb
faddp
rcrl
std
in
lcall
mov
clc
pop
mov
test
nop
into
fidivs
sbb
sbbb
xor
dec
jno
cmp
ss
pop
shll
ret
mov
push
mov
pop
push
mov
jl
push
inc
leave
cmc
cmpsl
ljmp
daa
pop
repnz
jno
fs
fmul
and
pop
into
out
popf
imul
mov
and
loop
ja
das
xchg
lret
jno
dec
sub
out
iret
xchg
dec
fldenv
lret
and
xchg
mov
outsl
lea
xor
aaa
mov
jne
daa
sahf
dec
stos
cwtl
or
inc
out
jno
fisubrl
mov
fldt
push
daa
out
mov
pop
fldenv
pusha
and
aad
mov
shll
shll
aas
xor
pop
xorb
rcll
fimuls
mov
mov
aad
mov
cltd
pop
lret
xor
cwtl
cld
pop
stos
xor
mov
loop
mov
push
xchg
mov
faddl
ljmp
jmp
mov
push
rcll
jecxz
mov
xor
lcall
fs
scas
ljmp
ficompl
mov
and
jns
or
shlb
fsubs
outsl
icebp
cmp
add
add
or
pop
fs
cmc
jmp
or
stos
xchg
push
aaa
xchg
mov
out
imul
arpl
cmp
sbb
mov
addb
lahf
outsl
mov
mov
cmp
aad
jecxz
outsl
lock
jg
out
push
pop
lea
push
pop
mov
cmc
nop
into
mov
jmp
in
and
inc
mov
xor
stos
push
or
mov
sbb
test
leave
aas
sbb
dec
arpl
push
add
stos
hlt
jne
daa
fwait
mov
jmp
pop
mov
in
arpl
add
lods
and
jecxz
inc
mov
sbb
fildll
push
das
adc
push
inc
stc
and
xchg
imul
jmp
dec
jl
sbb
test
cmpsb
push
push
mov
mov
out
push
cmp
mov
rcl
xor
inc
out
xor
jns
xchg
mov
outsb
inc
jo
xor
add
sub
mov
cld
ret
inc
jns
icebp
cld
in
fstpt
frstor
fsubl
hlt
jge
fsub
icebp
and
adc
mov
mov
out
and
sbb
test
cld
mov
int
mov
cwtl
mov
or
xchg
cmpsb
adc
pop
dec
pushf
cltd
mov
add
and
mov
sbb
out
popf
mov
iret
cmp
js
sarb
std
xor
inc
mov
adc
cmp
icebp
xchg
mov
push
in
mov
stos
jns
sub
mov
es
fcom
sar
fcmovne
adc
mov
add
movsb
data16
mov
or
into
and
rclb
add
mov
adc
popa
push
cwtl
jns
out
mov
test
addr16
mov
lea
loope
cmp
mov
fxch
dec
stc
insb
popa
push
cli
xchg
sarb
lds
and
xlat
push
jb
cmp
or
aam
dec
or
adc
lock
sarl
inc
adc
mov
fdivr
popf
test
call
mov
fcoms
add
pop
inc
pop
push
movsb
lcall
add
jl
sti
sahf
cltd
mov
pop
out
or
adc
cli
and
mov
fsubr
add
sbb
cmpsb
das
jbe
jl
push
cmpsl
pop
mov
mov
scas
dec
push
or
sub
xchg
sbb
iret
cmp
sbb
mov
insl
jg
outsb
jne
push
sahf
pop
mov
lea
hlt
outsb
mov
mov
or
lcall
xor
cltd
negb
pop
jno
dec
xchg
pop
jne
aas
iret
jnp
imulb
shll
pop
rorl
push
jns
sub
fidivrs
js
xor
or
cmp
test
xchg
jp
in
popa
push
push
sbb
cwtl
test
jp
pop
mov
push
push
cmp
aaa
mov
outsb
popf
test
ret
mov
repz
xchg
dec
pop
xchg
sahf
xchg
and
xchg
nop
jns
pop
jg
jno
and
loope
mov
sbb
jl
mov
xor
jae
movsl
call
stos
xchg
movsl
push
aaa
push
js
push
mov
sub
lods
adc
or
aam
xchg
lcall
or
or
into
aas
sahf
arpl
stos
pop
add
jbe
fistpll
mov
out
stos
pushf
test
or
xor
frstor
pop
ds
into
inc
dec
mov
xor
insl
xchg
aad
inc
mov
jecxz
pop
aam
mov
lods
int
adc
dec
js
sbb
arpl
fmull
dec
mov
mov
js
dec
xor
sub
stc
mov
dec
cli
test
loope
in
push
mov
and
sub
mov
xor
lds
jmp
or
int
cltd
in
pop
test
sub
fcomi
cmp
mov
and
cltd
dec
dec
dec
and
and
ds
clc
inc
orl
pushf
pushf
aaa
je
adc
and
inc
sbb
cli
ds
inc
out
xchg
sti
std
jns
jne
and
push
std
sbb
xchg
inc
mov
adc
icebp
mov
test
push
mov
aad
sbb
insl
clc
push
mov
push
enter
jno
movntps
sbb
das
inc
int
jb
nop
das
data16
cmp
rorl
mov
movsl
scas
xor
scas
bound
sub
cltd
sbb
push
jno
ja
nop
mov
adc
lahf
test
mov
arpl
lock
dec
test
and
xchg
call
ds
cld
and
aas
xor
mov
jo
shlb
cmp
adc
fiaddl
push
cmc
in
mov
rcll
aam
aaa
xor
mov
xor
shr
or
mov
inc
xlat
mov
and
xchg
mov
loope
mov
adc
repnz
outsb
pop
seto
test
inc
cmp
xor
dec
sub
xchg
out
jo
rcll
jns
pushf
stos
stc
pushf
cmp
cmp
mov
scas
push
fsubl
fnstsw
std
inc
xor
jle
daa
or
and
mov
in
enter
adc
pop
mov
xor
jle
mov
js
mov
add
jmp
xor
outsb
mov
loope
sub
mov
push
push
sbb
mov
and
pop
mov
cltd
fildl
fstl
jge
out
scas
fmulp
push
pop
pop
mov
pop
cmpsb
dec
dec
inc
ficomps
pushf
and
mov
sub
fucom
daa
jno
leave
movsl
xchg
xor
fstpt
adc
repnz
jmp
movsb
leave
out
sub
dec
movsl
xchg
add
outsb
lock
test
loopne
xor
lea
push
sub
bound
lahf
push
cmp
out
mov
adc
mov
jnp
insl
out
pop
and
test
cli
jmp
ss
jle
sub
sub
jbe
out
add
xchg
adc
pop
popa
sbb
xor
or
sbb
stos
insb
lock
cmpsl
mov
or
mov
sub
into
jbe
xor
sub
mov
test
pop
fs
leave
out
repnz
mov
xor
aad
fdivl
push
cmp
and
adc
xchg
add
and
and
lea
ret
or
nop
and
xchg
sub
xor
cmpsl
sbb
aam
fs
std
lea
mov
pop
mov
stc
jnp
or
push
and
dec
rcl
pop
test
fwait
mov
inc
in
jp
add
test
jge
aas
clc
mov
out
xchg
mov
fidivl
in
test
sbb
add
xor
cmp
jmp
popa
mov
int
dec
mov
push
xchg
std
insb
adc
fsubrs
jecxz
cwtl
test
xlat
enter
aam
mov
jmp
mov
int3
push
gs
and
mov
repz
and
sub
mov
mov
movsb
adc
adc
out
or
xchg
lcall
xchg
or
in
out
push
cmpsl
fsubrs
xorl
loope
rorl
std
inc
enter
mov
aaa
lea
popa
ret
cwtl
xor
dec
or
cs
faddl
mov
cmp
insb
sub
dec
adc
popf
dec
std
mov
or
push
sbb
ret
mov
xchg
xor
sti
mov
and
push
push
cltd
shrb
jg
push
cmpsl
mov
fdivrs
sub
xchg
repz
jbe
cmpsb
add
xchg
lods
andl
sti
loop
mov
lods
jp
ds
or
add
adc
and
mov
push
insb
or
add
jnp
loop
push
sbbl
and
sahf
sub
adc
and
mov
aam
iret
mov
test
repz
cmp
mov
add
sbb
int
mov
loop
cli
cmp
je
insb
cmp
test
xor
stos
movsl
push
movsl
or
adc
cli
push
dec
test
loop
mov
popa
push
sbb
xchg
dec
pop
mov
scas
out
pusha
and
or
aad
dec
popf
adc
sbb
in
test
fs
pop
addr16
fsubr
out
bound
xlat
add
xchg
xchg
loopne
pop
test
cmp
mov
mov
popf
xchg
cmpsl
lcall
cld
sub
adc
in
testl
jp
shll
bound
pop
push
mov
push
or
push
mov
stc
fsubr
push
cwtl
movsb
out
push
jbe
ja
and
push
fincstp
shlb
mov
dec
mov
pop
cs
scas
dec
xor
mov
add
daa
dec
in
insb
dec
sub
mov
mov
jnp
sahf
xorb
adc
inc
aaa
scas
jns
lock
jnp
jl
jg
pop
outsl
xchg
sub
loopne
call
cmc
or
loop
and
pop
adc
lcall
fidivrs
jmp
daa
lea
xor
aam
and
and
inc
pop
out
pushl
popf
in
mull
xor
or
popf
cmc
push
imul
mov
xor
dec
push
xorb
xlat
aas
xchg
inc
cmc
fisttpl
or
data16
std
cmc
jae
sbb
sub
push
cmpsl
movsl
dec
stos
mov
jp
sarb
or
repz
mov
jl
mov
outsb
xor
xor
ljmp
push
dec
pushf
sub
push
dec
call
mov
dec
jl
lock
push
mov
aam
add
out
imul
imul
aaa
sbb
push
ja
jg
out
mov
cmp
sti
mov
mov
pop
out
call
cmpsb
pop
and
stos
lods
cmp
pop
push
test
xlat
or
cmp
lea
scas
dec
lcall
xlat
pop
inc
pop
jmp
shll
sbb
add
push
and
lahf
mov
cmp
xchg
jbe
fistps
sub
repnz
pusha
addr16
sbb
jns
inc
aas
aas
pop
movsl
xchg
sub
jb
addb
in
lret
std
fisubl
shlb
jmp
mov
js
ret
iret
xor
or
icebp
pusha
jecxz
inc
call
jbe
out
jl
cmp
xchg
stos
repnz
cwtl
cmp
cli
xchg
cmc
addb
add
lahf
inc
jl
sahf
adc
push
or
jl
mov
fsubrl
data16
jecxz
imul
aam
pop
adc
xor
xlat
clc
lea
subb
mov
sarb
jmp
push
sti
mov
cld
dec
adc
adc
dec
and
sub
pushl
lret
mov
inc
sub
and
andb
nop
push
mov
xchg
js
and
mov
lcall
pop
jne
cmpsb
cmpsl
cs
jnp
test
in
xlat
mov
dec
addr16
mov
fwait
adc
mov
sub
icebp
jo
mov
cmp
cmp
gs
pop
cmp
cmp
fists
dec
shlb
or
push
dec
test
inc
mov
test
sahf
lods
lock
xor
inc
out
rcll
inc
mov
pop
push
cmc
mov
or
xor
fldenv
xchg
dec
cmpsb
dec
sub
and
pop
mov
int3
mov
outsl
xchg
jp
scas
push
in
fdivr
or
jae
sbb
cmpsl
dec
mov
mov
mov
adc
and
loope
loope
add
add
rcrl
xor
xor
sub
lds
mov
cmp
in
mov
in
mov
push
jecxz
xor
imul
jb
jb
xchg
scas
sbb
cmp
lret
repz
pop
lret
push
ret
sub
pusha
ret
push
mov
mov
dec
add
lret
lret
scas
cmp
inc
inc
jl
cltd
fsubs
adc
pushf
fmull
mov
sub
daa
mov
scas
insl
cmp
push
scas
push
data16
std
dec
popf
xchg
ja
push
sub
adc
sub
movsl
fnstcw
into
or
jae
aaa
insl
jae
dec
push
pop
outsb
add
inc
cmp
pop
aad
xor
xor
loope
dec
adc
aad
mov
stos
dec
ficoml
lret
or
bound
jno
nop
xchg
xchg
mov
mov
loop
pop
adc
mov
clc
pushl
jne
mov
or
pavgb
xchg
mov
dec
and
jg
cli
clc
movsl
outsl
fisubrs
cs
mov
cmp
addb
sahf
lret
mov
call
mov
ljmp
mov
cmpsl
imul
std
mov
fistl
insb
je
sbb
out
pop
xlat
or
clc
push
ljmp
in
stos
ficompl
les
cmpsb
cmp
cmp
sub
in
mov
pop
mov
arpl
outsl
icebp
and
or
sub
leave
loop
sti
mov
jp
scas
cld
jno
pop
test
add
mov
inc
cld
jecxz
mov
cld
add
mov
loope
inc
mov
mov
jbe
test
outsl
add
pop
dec
pop
mov
data16
sbb
js
adc
cli
fldt
jl
mov
add
jge
mull
pop
xorl
cmp
test
test
xchg
xchg
jne
bound
inc
jns
int3
cmp
jmp
mov
push
scas
in
in
lods
rclb
icebp
int
ja
stos
fdivl
push
sub
lods
hlt
sbb
and
rcll
nop
fcoms
sbb
icebp
xor
aad
out
fldenv
mov
cmpsb
adc
sti
push
and
push
in
idivl
xchg
out
jecxz
dec
dec
cmpsl
in
stos
es
data16
inc
or
add
mov
aas
push
push
and
jne
jno
cltd
shrl
test
jge
popa
mov
and
xor
or
cmpb
sbb
es
aaa
jns
xor
jbe
cli
sbb
test
cwtl
mov
dec
and
sub
cld
lahf
les
mov
or
lret
lcall
pop
fdivrl
enter
nopl
jne
push
lods
and
fsubrp
push
add
dec
dec
loopne
jecxz
cmp
adc
in
adc
jne
xor
pushf
xor
sbb
cmp
mov
dec
mov
cmp
data16
icebp
aad
fcomi
or
pop
pop
dec
adc
int3
aas
mov
daa
out
mov
fidivs
out
jmp
scas
and
fwait
sbb
pusha
lret
mov
jb
sub
std
xlat
inc
mov
into
add
xorl
js
adc
in
sahf
and
roll
xchg
fbld
aas
add
je
jle
jp
dec
mov
sbb
mov
cmpsb
jo
xchg
enter
pop
push
and
pop
mov
dec
cmpb
jecxz
sbb
or
dec
xlat
clc
sub
imul
lret
inc
mov
lds
dec
jnp
sub
mov
adc
test
pusha
push
add
pop
pop
orl
out
mov
and
inc
jg
aad
lahf
push
fcompl
sub
or
xor
sahf
test
adc
mov
add
aam
xchg
push
lds
sbb
iret
add
mov
jecxz
and
sbb
inc
pop
imul
mov
dec
iret
pop
mov
ljmp
out
je
cmp
jl
outsb
scas
addr16
repz
stc
xchg
fidivrs
shrl
adc
cmp
push
pop
int
lds
out
imul
push
out
xchg
hlt
lods
ror
jae
and
jo
aas
push
adc
rcl
ret
in
mov
xor
xor
clc
lret
inc
jmp
mov
xchg
jae
pop
enter
dec
add
inc
nop
jmp
mov
jge
testl
xchg
jg
adc
xor
jl
adc
clc
addl
inc
xchg
mov
add
nop
sub
cmp
outsl
jns
jbe
addr16
leave
fiaddl
push
xchg
sbb
out
in
or
or
push
mov
stc
pop
movsl
in
ja
and
push
xchg
jl
rcll
in
sub
push
int
xchg
iret
cmp
xchg
outsl
lods
sbb
jecxz
cmc
dec
aam
pusha
jae
outsl
mov
push
mov
loop
xor
add
dec
popf
mov
adc
mov
rol
out
xlat
bound
cwtl
fcomps
lea
push
jo
clc
sub
and
push
idivb
jb
fisttpl
and
fsubl
jbe
mov
jne
jae
mov
add
xchg
xchg
shrb
pop
stc
popa
fwait
cmp
fmuls
push
sbb
rorl
and
icebp
pop
cltd
jo
xchg
mov
push
dec
fwait
orl
inc
pop
dec
xchg
sub
add
sahf
ret
dec
clc
add
inc
cmp
ficoml
jp
hlt
rorb
aas
hlt
push
dec
testb
arpl
push
mov
mov
sub
lret
test
mov
insl
ss
fildl
push
sar
int
jl
xor
popa
push
iret
xor
sub
dec
xor
xchg
mov
mov
stos
pop
in
fstl
fiaddl
mov
movsl
mov
outsb
and
dec
out
add
arpl
jbe
in
roll
ret
aaa
xchg
insl
push
jmp
rep
jb
fs
mov
jge
pop
sub
add
jb
xor
aad
outsb
daa
testl
pop
inc
or
inc
inc
or
push
sti
sbb
frstor
sub
fmuls
mov
cmp
pop
mov
out
js
mov
pop
aam
lahf
lock
or
out
pop
mov
sub
mov
pop
dec
pop
imul
fsts
enter
bound
jb
pop
cmp
push
push
sub
insb
push
imul
pop
cltd
loopne
hlt
out
outsb
jns
adc
inc
fnstsw
and
xchg
setns
sub
pusha
mov
ljmp
cmp
test
testb
jl
sub
sbb
outsb
outsb
mov
std
mull
sub
icebp
or
rolb
mov
jne
xor
lcall
fdivrp
mov
lret
xchg
xor
neg
cwtl
push
int
or
outsl
sbb
and
add
jmp
xchg
test
inc
in
push
sarb
push
ss
mov
and
sub
out
cmp
push
cmpsl
roll
xchg
pop
xchg
push
iret
shl
sahf
aam
inc
sub
roll
mov
shrl
mov
adc
push
push
cltd
sub
and
push
sub
nop
cmp
imul
lret
adc
fs
js
jb
mov
jae
fsubp
in
xor
ficomps
rcrl
mov
add
sbb
cmp
mov
ljmp
mov
aam
repz
push
push
xor
inc
lods
dec
sub
shlb
cmp
movsl
xchg
add
fsubs
pop
fimull
mov
lret
adc
les
loop
in
cmc
repnz
lahf
mov
cmp
pop
outsb
pop
out
test
in
dec
cmpsl
movsl
int
pop
jne
mov
mov
cld
pop
pop
mov
inc
push
pop
fnstcw
xor
shlb
jbe
das
scas
mov
jl
jne
popf
pop
lock
xor
xchg
push
movsl
mov
adc
scas
dec
mov
add
sub
pop
addr16
dec
sahf
mov
jle
movsl
mov
jp
hlt
aaa
ss
mov
vandps
mov
daa
rcrb
out
imul
lock
mov
dec
mov
mov
jg
add
jae
push
sbb
mov
dec
popa
add
xchg
js
dec
adc
push
xlat
xchg
outsb
mov
lea
loop
push
inc
xor
scas
and
outsl
mov
add
cmp
ja
cli
mov
cli
std
adc
and
and
pushf
out
push
jno
xchg
dec
lret
shlb
out
pop
clc
lods
lds
fmul
push
mov
cmp
aaa
imul
jmp
mov
aaa
add
jo
mov
insl
repnz
and
test
or
pop
xchg
add
xchg
fcmovb
iret
push
aaa
loopne
fsts
nop
bnd
mov
cld
ret
pop
cs
jecxz
mov
cmc
jge
push
cwtl
and
ja
sbb
in
stos
mov
sbbl
push
xor
xchg
push
stos
add
jne
mov
clc
xor
jnp
iret
or
hlt
inc
lods
lods
pop
mov
xor
cwtl
pop
fistps
aam
and
popf
add
rcrl
inc
dec
push
xor
or
sbb
das
nop
nop
bound
int
adc
jp
ret
sti
fadds
sub
test
xchg
inc
iret
outsb
leave
and
insb
sub
ficoms
and
std
cmp
jne
cmpsl
fisttpl
pop
cwtl
scas
int
aaa
mov
xchg
push
into
sbb
mov
nop
inc
loope
jns
inc
sti
inc
adc
aas
jbe
scas
jb
inc
sti
or
jmp
outsl
frstor
push
cltd
sbb
popf
jnp
mov
cmpsb
cmpsb
das
dec
shrl
loop
sbb
adc
inc
loope
xor
sub
inc
pop
sub
sbb
and
hlt
es
pop
cmp
jne
scas
std
rcrb
insb
int3
cs
cmp
mov
xchg
jo
addr16
aad
sbb
popf
and
cmp
out
das
mov
hlt
mov
out
jne
push
les
mov
cli
push
bnd
in
jbe
xchg
mov
xor
fdivrl
in
insb
in
in
mov
test
rclb
add
or
add
mov
push
mov
movsl
jbe
sbb
xchg
or
adc
adc
pop
sbb
outsb
leave
lods
addr16
sbb
loopne
and
ret
push
clc
mov
in
or
dec
fwait
cmp
push
push
call
nop
mov
mov
into
ja
lret
mov
push
test
adc
loop
fidivs
xchg
jbe
fs
pop
inc
pusha
and
scas
xchg
xor
fists
adc
lret
xor
sbb
cmp
adc
pop
pushf
aad
icebp
xchg
fs
out
scas
push
mov
cwtl
cmc
pop
or
std
push
test
mov
or
cmp
cmpsb
and
lret
adcl
pushf
pop
cmp
jne
popf
bound
sub
mov
daa
jo
mov
mov
mov
std
cltd
fisttpl
cmp
or
pop
push
iret
adc
or
mov
lcall
and
and
and
gs
sbb
std
mov
dec
add
dec
mov
sbbb
mov
push
add
and
inc
jbe
jl
lock
xor
dec
and
int3
fdivs
sarl
scas
sbb
std
ret
push
shlb
adc
xor
dec
push
in
or
test
fstp
into
out
inc
lock
push
jmp
pusha
or
dec
push
mov
fsubrl
rclb
cld
lret
test
sub
cmpsl
mov
stc
arpl
jle
pop
cmpsb
inc
subb
adc
xchg
insl
clc
pop
jne
jle
dec
mov
lea
orl
scas
clc
out
subl
stc
jl
in
pop
add
cmp
jbe
je
dec
mov
pop
test
addr16
mov
pop
pusha
push
test
pusha
jmp
mov
xchg
cwtl
push
sub
jmp
hlt
lcall
mov
nop
sarl
in
jb
stc
xchg
push
mov
imul
leave
clc
hlt
mov
inc
sub
aas
xchg
push
lods
addr16
ds
xchg
ret
mov
sub
aas
sbb
std
iret
lods
addr16
dec
imul
stc
sbb
inc
mov
push
fs
cmp
add
jp
lahf
aaa
shr
inc
outsl
jnp
ret
mov
cmp
ljmp
or
arpl
subb
jo
xorb
bound
push
je
inc
out
cmp
shl
dec
mov
fnstcw
adcb
push
mov
mov
movsb
enter
test
sbb
loop
call
xchg
inc
mov
xchg
mov
ljmp
stos
and
scas
jmp
mov
mov
out
mov
xchg
ljmp
fimull
ret
fwait
repnz
aas
mov
xchg
push
add
pushw
push
test
xchg
mov
fs
mov
sub
clc
inc
xor
imul
out
push
pop
dec
mov
and
loope
or
push
mov
xor
ljmp
out
daa
xchg
push
pusha
xlat
mov
mov
into
lret
cmp
iret
pop
lods
adc
sub
fidivrs
dec
jnp
testl
push
call
push
iret
rorl
xlat
cmpsl
clc
xor
add
pop
cmpsb
fsubs
test
sbb
xchg
dec
fcompl
mov
jae
add
in
push
fidivs
dec
cmpsb
xchg
push
ss
push
sub
sub
pop
aaa
lahf
xlat
inc
jae
push
jecxz
movsb
test
sti
movsl
lods
xor
scas
cmc
enter
pop
fucomi
adc
movsl
mov
cmp
inc
ud2
js
sub
fists
stos
add
push
sbb
gs
data16
sti
rcl
sub
jbe
clc
lock
pop
xor
dec
mov
aaa
xchg
repnz
xchg
jb
pop
pop
scas
mov
mov
lods
hlt
inc
push
adc
mov
push
sbb
add
shll
not
cmp
imul
lret
aas
fs
push
fstl
dec
add
int3
and
adc
scas
rcr
ds
mull
lods
stos
cmc
push
fcoms
inc
call
aam
push
push
cmp
bound
out
out
cltd
out
and
xor
pop
lret
fsubrs
int
loop
mov
cmp
xchg
sbb
xchg
sub
dec
in
je
ss
adc
push
mov
mov
fwait
jecxz
fstpt
xchg
gs
push
cmc
leave
popa
or
pop
rcr
lahf
aad
std
pop
lds
mov
mov
call
xor
lahf
fmulp
mov
bound
mull
pop
movsb
mov
clc
mov
add
out
scas
rol
popf
pop
and
lds
add
add
sbb
leave
push
cmp
sbb
out
push
mov
mov
popa
jmp
sub
loopne
sub
addr16
mov
shl
adc
stos
ljmp
jle
hlt
fsubrl
bound
inc
or
sub
inc
ljmp
push
inc
loopne
data16
sbb
cmp
popf
xor
and
movsl
adc
mov
ffreep
test
lods
or
bnd
push
ja
add
sbb
rcll
adc
cmp
rcr
xor
stc
adcl
loopne
lret
sbb
jo
push
out
stos
mov
pushf
jbe
xchg
mov
outsl
pop
sub
jl
dec
inc
cld
jae
cmp
adc
lahf
push
outsb
and
mov
fs
pusha
push
xchg
scas
js
out
push
adc
sbb
xchg
jmp
js
inc
mov
cmp
jecxz
mov
lods
insb
lahf
push
imul
push
aad
add
jp
mov
pop
aad
shrl
mov
add
lcall
cmp
push
out
leave
lods
popa
movsl
fwait
sbb
adc
push
packuswb
xor
mov
xor
push
test
mov
sub
jl
and
sbb
inc
mov
jmp
jo
mov
scas
lret
sbb
loop
adc
xchg
mov
stc
pop
enter
mov
mov
and
loope
insb
xchg
jl
sub
enter
sbb
lret
push
jmp
rcrl
rolb
sti
lods
jne
rcrb
lods
mov
cmpb
mov
dec
sbb
mov
dec
cmp
push
mov
cmp
pop
nop
jns
movsb
loope
mov
in
jle
je
mov
sbb
sub
cli
mov
pushf
sub
iret
mov
cs
je
mov
cli
out
jne
pop
test
das
push
ljmp
je
mov
fmul
pushf
xchg
stos
adc
fs
out
insb
cltd
dec
pop
inc
add
stos
and
push
and
or
lods
aas
mov
push
dec
lods
mov
dec
pop
std
cli
pop
addr16
dec
inc
movb
fs
cmp
dec
or
bound
cmp
enter
pusha
cmpsl
clc
and
cmc
sbb
loopne
mov
or
jno
imul
jg
jae
pop
cmp
adc
mov
pop
pop
insl
mov
push
jns
sbb
push
jae
fcmovu
xor
nop
andl
aaa
stc
xchg
into
cmp
insl
fisubs
aad
adc
sbb
scas
mov
mov
pushf
lea
sbb
mov
nop
fsubrl
ds
cmc
pusha
ljmp
stc
cld
sub
adc
jnp
sub
dec
cmpl
outsb
cli
imul
outsb
xchg
js
jge
addb
movb
xor
cmp
fcoml
fmul
dec
das
ret
mov
dec
jno
ss
mov
lea
call
lret
loop
fdivs
mov
mov
jo
pop
sbb
scas
movb
inc
mov
sti
mov
sbb
addr16
mov
ljmp
idivl
jo
add
jae
jp
add
mov
and
inc
mov
or
dec
adc
push
push
sub
or
push
add
cwtl
mov
pop
push
jno
sahf
xchg
xchg
leave
push
lret
sbb
mov
shlw
call
jmp
jle
lcall
lods
adc
inc
jecxz
xchg
mov
cmp
xchg
les
mov
addl
aas
ja
push
sbb
adc
mov
cwtl
out
cld
sarl
ljmp
movsl
stos
mov
add
mov
movsl
jns
jecxz
sbb
sub
shr
push
push
mov
hlt
push
xor
outsb
mov
push
inc
test
adc
pushf
pop
mov
in
out
or
push
sbb
push
lods
push
fnstcw
inc
test
ja
xchg
jo
push
cmp
and
xchg
lcall
xchg
mov
and
insb
jne
mov
mov
shlb
push
repnz
mulb
and
int3
imull
pushf
jns
sub
bswap
pop
cli
and
mov
fstpt
insl
movsl
jle
xor
daa
add
xor
cmp
shrl
xor
push
jecxz
sub
xlat
add
lret
add
lea
cmp
ficomps
pop
imul
xor
adc
stos
fbld
enter
cmp
ficompl
fnstcw
pop
cs
inc
lock
dec
in
or
jne
xchg
cmpsl
subl
or
imul
fidivl
sub
cmp
stos
iret
xchg
dec
fnstcw
jb
sbb
pop
jae
cmc
cmp
mov
dec
push
int3
mov
aam
lods
jl
cwtl
dec
xchg
sbb
xor
sub
cmp
push
movsl
dec
scas
xor
lods
loop
les
ja
jnp
push
jle
jmp
push
les
or
sub
lds
divb
js
push
push
and
fsubp
xlat
sbb
and
jno
jb
mov
movsb
push
add
add
out
push
dec
imul
mov
mov
mov
es
fcoml
ficoms
or
mov
dec
sbb
repnz
jle
push
and
push
ds
ret
out
mov
sbb
clc
add
xchg
iret
int3
sub
shl
insl
ljmp
mov
xchg
jle
imulb
dec
ficoms
adc
repz
adc
push
xchg
adc
fisubs
std
movsl
dec
jo
out
push
into
pop
aas
xor
or
data16
loop
inc
xchg
dec
cli
stos
jne
push
jl
jnp
xchg
sbb
out
shll
daa
and
out
inc
lods
dec
cmpsl
insl
fdivrp
in
xor
or
daa
adc
in
add
and
jae
xchg
adc
xchg
lret
mov
aaa
in
sbb
dec
mov
icebp
aaa
inc
jb
ret
out
mov
inc
jno
lcall
push
outsl
mov
movsb
dec
cmp
inc
cld
fs
cltd
and
and
or
cs
mov
add
add
pop
test
mov
jle
fistps
inc
int
loop
test
enter
inc
dec
daa
dec
ljmp
mov
mov
out
cs
nop
outsl
sub
and
mov
cwtl
js
jno
test
mov
pop
push
sbb
jnp
lcall
jl
sbb
xchg
add
mov
jp
xor
std
es
mov
mov
xchg
adc
push
in
addr16
pusha
rcll
inc
dec
int
sbb
ss
jbe
nop
mov
mov
cmp
stos
mov
aam
cmp
scas
rcl
push
mov
js
push
and
movzbl
pop
dec
in
cld
mov
add
vshufps
leave
lods
jg
xor
push
jbe
dec
call
idivb
shr
dec
ret
jg
cmp
mov
and
mov
pop
adc
xlat
fmull
es
movsl
adc
mov
sub
imul
lret
cmp
aad
jno
movsb
pop
out
aas
add
lock
or
dec
push
or
aam
fsubl
sbb
fnstcw
ret
adc
fmull
xchg
call
and
lods
out
add
shlb
xchg
stos
lcall
bound
imul
sbb
pusha
mov
cltd
popf
and
and
sbb
xchg
inc
mov
movd
sbb
or
pop
hlt
lock
dec
cli
dec
pop
mov
lds
addr16
fstp
inc
jmp
fimuls
mov
addl
inc
jne
jae
xor
jnp
or
ret
inc
cmp
dec
or
decl
dec
cld
inc
and
scas
mov
sbb
adc
dec
lock
adcb
cmp
sbb
ds
xchg
es
pop
std
mov
xor
aaa
sub
popa
fwait
adc
xchg
rep
mov
and
nop
sub
inc
out
in
sub
pop
aam
inc
cli
adc
sbb
pushf
sub
je
dec
sbb
movsb
jns
shrl
addb
fcomi
shlb
fnsave
popa
push
and
in
js
add
dec
repz
test
inc
and
mov
fisttpll
repnz
outsl
sbb
add
ja
popa
cli
arpl
jmp
scas
or
pop
mov
and
out
std
in
xchg
int3
jbe
push
repz
and
dec
stos
sahf
push
hlt
les
sbb
push
cmc
mov
imul
xor
les
xchg
pop
cld
xlat
ds
mov
inc
mov
ja
ret
push
jecxz
notl
jp
or
js
jne
mov
into
enter
pop
outsb
out
sub
sahf
jg
bound
sbb
mov
rcll
shll
lods
aaa
mov
push
fimull
push
pop
adcb
jns
add
push
and
out
outsl
test
dec
dec
xchg
and
call
push
repz
inc
fmull
test
mov
mov
arpl
xor
outsl
stc
inc
and
xor
pop
scas
mov
outsb
test
mov
push
imul
adc
dec
test
jbe
in
xchg
pop
int
mov
test
rolb
sbb
xchg
sahf
xchg
mov
je
xchg
mov
fidivrl
enter
js
mov
mov
lock
std
fs
call
dec
sahf
aad
xchg
sbb
idiv
or
pop
push
stc
ret
out
out
mov
xchg
or
mov
push
test
jae
or
mov
cmp
lahf
ss
lcall
adc
shlb
add
out
jae
xor
push
cmpsl
data16
inc
cwtl
sub
jl
repz
jo
jl
add
cmp
mov
int3
leave
push
hlt
pop
fcomp
jb
enter
xor
adc
mov
test
jae
bound
inc
dec
inc
push
xorl
in
adc
subb
sub
ss
mov
lods
mov
jns
push
enter
nop
and
and
sbb
scas
imul
pop
or
pop
pusha
cmc
rorl
push
dec
push
fsubrs
mov
and
and
or
lods
sbb
cmpsb
pusha
fildl
jge
lods
jo
mov
cmpsb
or
lret
lea
push
sbb
js
mov
call
jp
ret
sub
ss
sub
push
mov
lret
rcll
test
push
push
adc
xorb
cwtl
lds
or
pop
dec
insl
rolb
pop
rclb
in
repz
call
test
sub
xor
out
pop
mov
push
std
test
mov
int
lret
pop
jae
adc
cwtl
and
out
mov
movsl
stos
pushf
push
mov
mov
and
sub
add
insl
sub
ds
enter
cmp
sub
adc
lds
inc
das
xor
sub
or
sbb
pop
inc
mov
mov
shlb
loop
aam
adc
sub
in
outsl
sub
idivb
push
xchg
aaa
ficompl
jle
repnz
pop
jecxz
aam
aaa
mov
or
addr16
lock
in
jnp
movlps
outsl
and
inc
fstpl
outsb
movsl
repz
xor
cli
clc
into
push
mov
pop
bound
xor
lea
xor
push
and
mov
out
sbb
js
inc
adc
push
std
in
inc
and
dec
jnp
mov
testl
and
cmp
jno
cltd
ds
pop
js
inc
lret
inc
imul
or
std
nop
cmc
add
pop
push
inc
inc
fs
ret
insl
rclb
into
dec
sbb
out
sub
lcall
jle
mulb
out
mov
sarb
cmp
lods
sbb
pop
call
iret
into
ds
sbb
jb
push
push
addr16
pop
and
xor
dec
pop
leave
dec
fidivrs
fistps
pushf
lds
imul
mov
rclb
sub
aas
and
xchg
clc
adc
pop
int3
adc
in
xchg
sub
div
xchg
sub
lock
jp
xor
add
mov
mov
and
mov
hlt
loopne
stos
xchg
inc
mov
mov
pop
stos
fsubrl
je
int3
test
mov
fildll
mov
lahf
jo
sub
gs
std
fmul
and
arpl
out
pop
xor
scas
pusha
or
cmpsb
lea
cmc
pop
dec
loopne
jno
iret
mov
inc
xor
inc
fisttpl
std
mov
movsb
adc
loopne
jns
andb
aaa
fdivr
aaa
jp
mov
clc
jmp
add
push
ret
mov
clc
cmc
push
mov
mov
hlt
and
or
scas
pop
adc
daa
push
push
cmc
inc
sub
xchg
sub
xor
mov
imul
ss
and
mov
push
push
into
inc
rcr
sbb
arpl
adc
aaa
leave
jnp
cmp
sbbb
mov
out
fs
in
sub
dec
in
mov
pop
orps
push
mov
xchg
inc
inc
or
scas
ljmp
xchg
xchg
jnp
dec
scas
in
pop
aam
rorl
inc
sahf
inc
cmp
xchg
push
sti
pusha
cli
fnsave
mov
pushf
inc
jbe
and
aam
pop
jp
jecxz
movb
cltd
dec
lret
sbb
fsts
xchg
sarl
outsb
pop
push
push
iret
xlat
fcompl
or
loopne
shlb
fsts
adc
out
push
aaa
fstpl
jne
sbb
jmp
cmp
insb
add
inc
ret
jnp
outsl
cld
push
mull
addb
mov
mov
cmp
sbb
mov
bound
cmpsl
push
mov
push
popa
out
jmp
icebp
cld
add
fnstsw
xor
fisttps
jle
test
push
xor
xchg
in
cld
shr
jg
test
cmp
or
fs
push
pop
scas
dec
sub
mov
ljmp
xor
pop
pop
mov
mov
dec
xor
shlb
or
inc
jge
sub
pop
dec
cmp
sub
mov
andl
or
imul
pusha
and
mov
enter
bound
pushl
bswap
mov
adc
mov
out
call
push
jle
mov
shll
lcall
cwtl
negb
push
inc
enter
dec
and
dec
lds
sahf
inc
xchg
int3
and
jg
mov
bound
xchg
int
mov
cld
push
popa
mov
fiadds
adc
outsb
mov
out
aaa
into
lret
xchg
imul
imul
pusha
filds
push
xor
repz
daa
pop
ret
fmull
fwait
inc
clc
lods
data16
cltd
mov
divl
jecxz
xor
mov
fiaddl
sub
scas
daa
in
push
fyl2x
bound
push
fmuls
add
clc
jnp
xor
jmp
add
pop
pushl
push
or
insb
or
xchg
mov
xlat
xchg
rorb
mov
fstp
sub
jmp
mov
pop
in
mov
gs
cmp
xchg
push
dec
ss
lds
daa
loop
lret
loopne
pop
cltd
xchg
daa
jle
rcr
popa
jb
fisttpll
or
mov
xchg
ss
or
dec
or
leave
cmp
jnp
pop
mov
cwtl
insl
nop
fistps
or
and
push
mov
bndstx
add
cmp
jle
test
lock
inc
mov
clc
inc
mov
std
dec
ror
sub
push
mov
rclb
cmc
lods
rcr
stc
fwait
inc
jbe
mov
push
pop
test
fcmovnu
scas
fwait
push
aaa
stc
or
pop
mov
xchg
lods
test
jge
mov
stos
mov
jp
nop
lods
push
movsb
mov
test
enter
sub
stc
popa
outsl
xchg
push
stc
mov
ret
lret
mov
xorb
subb
mov
adc
xchg
mov
repnz
cmp
cmp
leave
imul
push
add
stos
int
cmpsl
or
ficoms
or
jns
mov
dec
in
jo
and
mov
insl
and
ret
les
in
insl
fisttps
setnp
fwait
loope
mov
icebp
icebp
pop
push
scas
push
out
add
inc
cmp
outsb
jl
cmp
inc
mov
jl
ret
and
fcmove
sbb
popf
xor
sbb
xor
add
mov
call
mov
pop
mov
xor
pop
mov
loop
dec
inc
repnz
das
or
enter
outsl
mov
leave
aad
mov
fwait
test
xchg
std
mov
jge
les
ss
jo
inc
cmpl
movsb
dec
stos
lds
adc
add
roll
test
and
fldl2e
ret
sbb
dec
call
add
adc
add
sub
or
aad
movsb
out
adc
inc
sti
aam
mov
stc
jl
stc
repnz
mov
je
mov
cld
add
sahf
mov
adcl
sub
mov
add
addr16
sub
in
fists
add
iret
xadd
cmc
cmp
xchg
dec
adc
and
xchg
mov
enter
movsb
jns
popa
cmp
cmp
test
leave
pop
mov
xchg
out
in
mov
mov
push
pop
std
icebp
xor
mov
pop
int3
subb
pop
pusha
xchg
cmc
dec
or
fxch
mov
rol
mov
push
ds
int
jge
xchg
lahf
cld
insl
scas
in
mov
mov
ret
dec
enter
inc
je
mov
push
js
popf
jbe
pop
cli
lods
arpl
pop
sub
scas
or
sub
add
fdivrs
sub
mov
test
or
lahf
xchg
iret
insl
sbb
push
xchg
nop
lcall
jp
lret
roll
in
pop
pop
xchg
in
xchg
fldln2
lcall
add
lcall
push
dec
mov
je
dec
inc
sub
call
adc
pop
in
lea
or
xlat
cli
insb
sub
sahf
mov
pop
mov
jb
cltd
mov
or
faddl
scas
mov
lods
pop
mov
les
sub
cwtl
scas
mov
adc
xor
call
lds
pushaw
rorl
xor
repz
lds
and
sbb
pop
sbb
ja
sti
ret
lcall
pop
xchg
fadds
pop
lea
stc
mov
mov
mov
mov
cltd
movsl
jle
push
pop
enter
sbb
mov
add
cld
aam
sub
xor
and
jg
sbb
daa
push
dec
fnstenv
or
xchg
push
or
sbb
rclb
sbb
pop
cli
xor
jecxz
fwait
mulb
sub
pop
dec
mov
leave
shl
int
mov
roll
or
nop
hlt
add
fisubrl
out
movsl
test
shrb
xor
push
addr16
or
rorl
push
jge
mov
mov
fdivrl
decb
sbb
mov
js
pusha
inc
sub
incl
adc
push
cmp
xchg
pop
mov
imul
sub
daa
inc
adcb
outsl
mov
jnp
push
mov
loope
push
cmpsl
mov
jl
icebp
les
pop
sub
push
adc
fdivrs
pop
adc
mov
iret
xchg
sets
rclb
cmc
xor
je
cmp
add
or
imul
mov
fwait
ret
mov
pop
xchg
cmp
dec
pop
mov
fcomp
pop
pop
xlat
test
sahf
and
mov
ljmp
in
xlat
sbb
insl
cltd
cmc
test
mov
dec
push
sbb
sbb
pop
mov
stc
out
lods
dec
stos
nop
mov
aad
fcoml
test
push
dec
ljmp
xchg
cmp
sub
ficompl
lods
fldenv
mov
out
test
pusha
mov
ret
inc
pop
cld
inc
imul
pop
cltd
mov
test
sbb
mov
sbb
xchg
xor
mov
dec
inc
int
fcmovne
push
xor
in
cmp
sub
push
lds
jne
jno
sti
dec
xchg
jecxz
mov
out
jb
xor
punpcklwd
lods
repz
push
sub
jbe
out
add
xchg
hlt
and
lret
out
mov
fnstcw
xor
sarb
xlat
cwtl
popa
orl
push
mov
mov
loopne
add
rcr
popf
add
xchg
cmpsb
out
sub
mov
pop
jb
loop
jge
xchg
push
jb
popf
std
mov
push
dec
daa
adc
dec
xchg
adc
mov
out
mov
cmp
scas
lahf
sub
cli
imul
idivb
add
fwait
and
pop
cltd
leave
movsb
push
mov
jl
das
add
and
inc
mov
xchg
insb
cld
inc
cmp
aas
inc
test
pushf
mov
nop
dec
pusha
lock
fwait
jp
lcall
je
mov
dec
daa
pop
addr16
dec
cmpb
pop
xchg
dec
loope
mov
pop
mov
test
or
cmp
das
and
loope
jno
jg
xor
or
inc
mov
rcll
push
test
ret
shl
push
inc
in
in
and
aad
add
data16
add
pop
in
inc
nop
sbb
pop
pop
ds
fwait
aad
xchg
jb
mov
ja
outsb
mov
orl
stos
cmp
pop
fldl
repnz
dec
jp
inc
mov
push
das
in
dec
jle
outsb
cltd
or
movsb
cmp
fwait
cmp
xchg
out
std
int
mov
bound
cmp
loope
push
jno
xchg
mov
rep
inc
push
out
cld
sbb
adc
aaa
ret
jno
xor
push
cmp
aaa
pop
adc
jl
pop
jl
test
test
jp
das
into
xchg
sub
adc
sub
push
int
mov
frstor
mov
pop
jb
cmp
inc
jo
rorb
sub
jecxz
imulb
xchg
push
mov
add
stos
fwait
and
fcmovbe
idivb
std
outsl
ds
rclb
cli
stc
cmpsl
adc
xchg
fdivr
sbb
push
jno
adc
stc
fcmovnu
lret
popa
sahf
xchg
jge
push
shll
dec
cmpsb
add
outsl
jns
push
stc
and
mov
je
or
xchg
pushf
insl
mulb
imul
pop
or
xor
mov
jbe
push
jg
sub
sti
popf
int
cld
pop
lods
mov
inc
sbb
pushf
xchg
push
outsb
fiadds
inc
ljmp
or
pop
loop
add
stc
cltd
sub
in
push
or
and
mov
ljmp
mov
inc
xchg
ds
mov
adc
push
leave
loopne
push
out
in
jecxz
fdivrl
push
pop
popf
sub
sub
sahf
ret
lods
fimull
ret
mov
faddl
jns
jno
push
sbb
dec
hlt
pop
jecxz
adc
or
dec
xor
dec
and
and
into
push
xchg
lds
sahf
insb
push
xchg
das
xor
sbb
das
mov
adc
sub
test
dec
lret
scas
xor
iret
pop
pop
mov
xchg
loop
push
cwtl
dec
popa
daa
mov
jl
push
adc
daa
sar
sub
gs
fnsave
clc
inc
sahf
aas
fdivp
das
repnz
imul
add
sub
in
stos
add
add
gs
iret
inc
dec
insl
inc
xor
cmc
fmuls
imul
pop
test
xor
mov
adc
stc
ds
int3
add
ret
mov
aaa
xor
mov
fstpl
popf
sbb
mov
mov
sub
fldenv
aam
cmpsl
mov
test
xchg
int
mov
add
andl
mov
rorl
and
loopne
sarl
icebp
add
inc
inc
push
es
ljmp
cwtl
sub
out
xor
negl
mov
es
lahf
in
arpl
lods
ror
or
xor
pop
popa
fldcw
jp
and
adc
mov
lret
cwtl
cmp
lds
xchg
xchg
cmp
or
xchg
lcall
test
lods
cld
ret
in
dec
mov
lret
mov
ret
imul
cmp
mov
and
aam
add
dec
loope
pcmpgtb
mov
jle
sub
add
fcomi
mov
mov
mov
dec
loopne
adc
fnstenv
dec
popa
outsb
pusha
sti
loope
adc
or
pop
dec
and
xchg
push
negl
lahf
pop
cmpsl
into
sub
call
das
movsl
cmc
fidivrs
fstpl
jnp
dec
dec
sahf
adc
mov
imul
push
dec
mov
xor
push
dec
push
adc
push
xorb
aaa
or
mov
lcall
push
sbb
add
jo
and
cwtl
fstps
cmpsb
cs
aaa
mov
imul
bound
xlat
and
es
sbbl
imul
sbb
add
push
fchs
push
lock
cs
dec
or
leave
xor
fsubrs
fstl
pop
test
loopne
add
nop
int
or
dec
fwait
sub
xor
sbb
cmp
cltd
mov
cli
aaa
or
adc
fldt
aas
cmp
or
dec
das
leave
mov
fcomip
xor
test
add
pop
jecxz
or
xchg
cld
lret
mov
call
add
add
cmp
jnp
cmc
int3
jg
inc
popa
inc
arpl
push
pop
stos
pushf
and
jle
cmpsl
inc
dec
push
push
aas
pop
cmpsb
sbb
mov
ficompl
test
int3
lods
mov
test
lock
clc
jmp
push
fldcw
aam
sub
arpl
mov
pop
inc
adc
cmpsb
pop
fstl
enter
aas
ds
in
aas
int3
inc
pusha
gs
mov
mov
aaa
jns
jecxz
int
nop
pop
cmc
push
outsb
testl
cli
cmp
dec
into
nop
add
jecxz
test
fiadds
mov
fcoml
inc
add
inc
nop
inc
lret
dec
int
adc
cmpl
mov
jge
je
loop
xor
and
insb
pop
and
add
aas
aas
mov
lock
loopne
pop
xchg
daa
xchg
in
repz
add
dec
cmp
bound
shll
lods
leave
mov
aaa
out
lods
pop
xor
cmp
mov
adc
mov
mov
jecxz
cmp
dec
inc
push
and
jns
adc
iret
fs
shl
mov
inc
jno
push
into
or
fdivrl
enter
mov
pop
push
or
mov
aaa
and
sahf
jl
shll
xor
push
shll
testb
mov
sbb
aaa
cmpsl
bound
in
push
mov
fwait
mov
mov
or
rolb
mov
paddd
je
mov
enter
xchg
jbe
push
sbbl
rorl
add
push
stos
jl
sub
push
xchg
push
mov
sub
pop
fwait
add
cld
mov
mov
arpl
repnz
inc
sub
aad
push
sahf
js
dec
pop
xchg
jecxz
push
pop
das
or
push
lcall
pop
or
sub
mov
mov
cmpsl
filds
mov
push
cs
jp
adc
loopne
ret
jbe
aaa
and
out
xor
mov
mov
mov
and
loop
dec
jle
sarb
sbb
aas
les
and
pop
subl
cmp
rcrl
xchg
pop
ret
shlb
mov
adc
mov
sbbb
data16
subl
mov
add
ret
iret
push
imul
int3
movaps
inc
push
nop
xor
mov
outsb
ret
mov
jg
movsb
jle
pop
adc
test
or
sub
in
mov
pop
dec
jae
adc
sahf
jo
lock
pop
inc
imul
pushw
push
test
push
cs
in
fnsave
aaa
cli
scas
sbb
mov
push
mov
xchg
sbb
movsb
stc
dec
test
loop
adc
test
lea
xor
push
repnz
or
stc
int3
stc
fstl
aad
xor
icebp
loop
xchg
out
add
sub
std
inc
mov
int
pop
sub
push
mov
adc
inc
mov
push
push
push
cmpsb
ret
adc
fstpt
loope
inc
cmpsl
or
insb
pop
cmp
mov
sbb
and
clc
les
and
mov
jecxz
ja
sbb
test
cmpsb
adc
mov
aas
ja
cmp
movl
out
mov
add
cltd
xor
outsl
pop
xchg
mov
sahf
and
inc
and
aas
mov
int
insl
scas
and
ljmp
sbb
pop
pop
loop
pop
jmp
mov
pop
pop
push
sub
push
fnstcw
inc
in
out
and
add
jl
call
mov
xor
push
jl
adc
imul
inc
pop
xchg
lret
fimull
nop
jns
jae
negb
hlt
lods
repz
xchg
sub
out
inc
das
jae
or
popa
int
jge
mov
inc
cmp
inc
insl
xor
insl
iret
jl
adc
scas
and
lods
jge
jle
pop
sbb
or
aad
scas
arpl
xchg
repnz
out
mov
mov
xor
outsb
fwait
shlb
sbb
and
sub
inc
dec
and
dec
fsave
jne
xchg
jp
jl
jne
icebp
mov
jmp
sti
movsl
dec
jno
loope
mov
cmp
daa
sahf
ljmp
mov
aad
mov
testb
sbb
push
les
movsl
leave
jno
pop
shr
jmp
adc
and
mov
and
dec
ljmp
mov
pop
divps
mov
mov
stc
leave
xchg
pop
aam
adc
out
xchg
enter
lcall
jns
addb
fbld
lcall
xor
int3
enter
jnp
jmp
cwtl
cwtl
in
fs
mov
pop
jge
leave
int
push
and
cwtl
push
and
je
pusha
add
ret
push
data16
add
lock
std
or
idivl
pushf
aaa
mov
sub
int3
push
adc
push
adc
or
data16
es
je
push
pop
xchg
out
inc
or
dec
mov
clc
mov
fcmovbe
cli
push
sbb
nop
inc
push
sbbl
or
sarl
addb
adc
xchg
lcall
push
aam
data16
xor
push
fldcw
iret
leave
lds
or
lock
push
movl
push
push
das
daa
and
jo
cli
jbe
lcall
cmp
dec
nop
jnp
jbe
pushf
repz
imul
mov
or
repz
adc
fcomip
xchg
push
mov
insb
test
stc
test
fisttps
mov
in
out
mov
repnz
jns
add
mov
gs
inc
lcall
sub
sbb
cs
jns
sarb
int
test
jmp
div
jbe
sarl
jo
imul
dec
lret
push
jl
push
fstpl
xchg
push
pop
mov
fmull
cmp
pop
mov
jns
ds
push
mov
cmc
pop
adc
aad
inc
aas
add
outsb
cmc
pop
test
insl
int
push
xchg
andb
push
popa
lcall
lods
lret
xchg
scas
mov
pop
push
push
mov
lea
xor
adc
in
inc
mov
and
cmp
cltd
pushf
xchg
xchg
sub
cmc
cmp
rorl
test
pushw
jae
iret
pop
mov
mov
shlb
insb
leave
xchg
sbb
subb
cmp
jmp
or
bound
inc
or
inc
xchg
adc
push
cmpsb
out
jmp
int3
rol
mov
fsubp
es
mov
push
cmc
and
dec
mov
cmc
inc
cmc
movsb
addb
sbb
call
or
ds
ret
mov
mov
fwait
cmpsl
out
mov
or
xchg
std
inc
xchg
mov
addr16
test
fisubrl
pop
xchg
pop
ret
daa
and
dec
mov
mov
scas
mov
pusha
and
and
loop
xor
mov
daa
xchg
lcall
inc
jno
jmp
and
cmpsb
inc
out
or
mov
sbb
jecxz
fwait
icebp
rcrb
iret
pop
repz
inc
adc
rcrb
or
push
push
cmp
repz
jo
movsb
and
mov
data16
outsl
cltd
stos
and
sub
cwtl
add
js
push
xchg
xchg
movl
in
pop
and
jle
mov
xchg
mov
adc
fstpl
jecxz
pusha
icebp
pop
imul
imul
sbb
rorl
mov
out
push
pop
int3
and
test
fnstenv
addl
test
aam
sub
pop
lahf
sbb
pop
mov
rcl
mov
out
adc
mov
in
cmpsl
lods
dec
nop
outsb
insl
jecxz
adc
adc
test
jl
or
shrb
pop
add
push
sti
mov
in
xchg
mov
jecxz
push
cmp
fstpt
add
cmc
sub
mov
leave
sbb
add
mov
in
mov
fcmovu
mov
mov
enter
add
repnz
es
jge
xlat
mov
int
idiv
and
in
shlb
and
xor
or
fldl
int3
data16
xor
xor
mov
pop
add
aaa
movsl
jg
outsl
shr
addr16
xchg
jno
adc
jno
cmpsb
jnp
dec
xchg
iret
mov
call
aam
in
push
roll
fstpt
push
shlb
pop
decw
pusha
fptan
iret
push
outsl
sbb
adc
push
stos
stc
xchg
push
jmp
pop
push
fabs
xchg
cltd
and
inc
out
es
jns
sbb
hlt
hlt
je
cld
push
sbb
mov
cmpsl
test
cmp
div
and
rol
or
inc
jo
push
call
imul
fstps
pop
movl
jae
inc
in
bsr
adcb
iret
test
nop
jmp
cltd
lods
dec
fwait
xor
stc
lret
cmpsl
mov
xchg
jnp
mov
lock
clc
mov
cmpsb
push
int3
xchg
xchg
fwait
cmp
adc
movaps
add
cmc
xchg
jns
insb
cltd
push
call
mov
xor
adc
jne
into
ss
jp
jmp
mov
divb
sub
cmpsb
cmc
loope
test
aaa
dec
adc
dec
sbb
lea
das
jge
mov
ljmp
inc
scas
push
int3
arpl
sub
in
ret
loope
ja
and
in
cmpsb
in
lock
xor
or
push
lods
in
xorb
ret
jp
xor
test
jle
mov
loop
xchg
cmp
dec
jl
lret
pop
sub
mov
out
fld
sbb
imulb
or
in
lods
in
aas
fwait
outsl
std
adc
push
lahf
pop
mov
addl
pusha
clc
pop
leave
xor
pop
out
mov
xor
mov
jmp
aad
js
mov
repz
or
ljmp
iret
scas
scas
mov
rclb
inc
lods
sub
insb
mov
negl
dec
andl
xor
das
jno
mov
xchg
or
push
inc
xchg
pop
addr16
inc
add
xlat
rcrl
dec
mov
push
mov
rol
std
imul
notb
icebp
sbb
sbb
aad
repnz
xchg
ffreep
or
sti
xchg
mov
mov
and
fildl
adc
xchg
pop
adc
add
mov
sbb
dec
fistpl
adc
pushf
sbb
lret
in
lods
sbb
and
scas
jge
lret
pop
sub
dec
arpl
das
jbe
xor
rorb
std
in
sbb
cmpsl
pushf
shl
and
or
mov
mov
lret
or
in
in
xchg
bnd
and
pop
fwait
jp
push
push
xor
pop
imul
dec
enter
dec
sub
adc
popf
lea
push
sbb
pop
mov
jle
rcll
ds
outsl
fs
push
pop
fsubrs
mov
sub
push
xchg
mov
push
jns
lahf
pop
lds
shlb
push
movsl
dec
or
and
lret
subl
stos
lret
or
xchg
out
test
lea
fnstcw
inc
mov
inc
adc
jecxz
or
xchg
insb
fbstp
outsl
lods
movsl
sbb
mov
insb
fldcw
mov
sti
dec
fists
cld
clc
or
jle
pop
sbb
push
ljmp
lods
aaa
xor
cmp
mov
divb
int3
pop
dec
gs
insb
add
jge
inc
mov
scas
lahf
xchg
test
ds
shll
out
add
adc
sbb
out
icebp
ljmp
sub
lea
sub
imul
addl
data16
shll
pop
jae
xor
push
popf
push
cmpsl
push
jbe
push
jmp
int3
lock
cmp
mov
xor
mov
in
cmp
mov
lods
or
mov
jo
inc
ljmp
cld
fildl
xchg
scas
push
push
loope
sti
mov
jns
jl
mov
dec
ljmp
sbb
fsubl
adcl
out
je
in
gs
mov
insl
xchg
es
fsub
cmp
int3
rcr
insb
lock
mov
fnstenv
dec
xlat
push
out
dec
add
mov
mov
ss
lds
or
jl
xor
pop
arpl
mov
loope
push
aaa
andb
push
je
rcrb
aam
adc
stos
bound
lea
bound
and
cs
jp
ss
pushf
testl
repz
out
ror
mov
fld1
mov
xchg
imulb
jmp
outsb
pop
sbb
rorb
xor
jmp
or
outsl
lods
pop
aas
and
hlt
leave
and
cmc
pop
adc
test
in
fldt
into
lcall
mov
loop
sub
cmp
dec
loop
out
adc
pop
sub
int
shl
cmpsl
push
sbb
adc
out
xchg
jnp
lds
cmp
lea
jg
jle
outsl
adc
fst
inc
dec
mov
inc
push
and
jns
and
gs
adc
mov
push
mov
fwait
xor
mov
adc
mov
pop
mov
add
jne
fcompl
cmpsb
rclb
xor
jae
mov
rorl
mov
mov
push
lret
cmp
push
cmp
xchg
cwtl
add
inc
outsl
cmpsl
imul
mov
pop
lock
repz
cmpsb
mov
sarl
and
pmuludq
loop
addl
add
xor
mov
insb
bound
and
cmp
cmp
sbb
loop
mov
push
xor
pop
sets
icebp
std
sbb
dec
push
incb
movsl
outsb
out
mov
cmc
ds
loopne
rcll
lcall
out
mov
das
and
mov
orb
mov
dec
or
adc
repz
dec
pop
pop
jne
test
ss
shl
out
ret
pop
dec
cld
sbb
jle
sub
or
push
inc
ss
dec
push
icebp
popa
lcall
fadds
arpl
jp
test
ds
lret
mov
mov
loopne
outsl
pop
adc
out
jo
imul
insb
lods
fistpl
scas
test
cmc
scas
adc
add
inc
cmp
xchg
sub
aaa
inc
testb
imul
outsl
icebp
sbb
xor
rcl
adc
adc
inc
inc
ss
ss
sub
lret
sub
pop
jae
dec
movsb
ret
pop
lock
inc
push
test
fisttpll
cmp
insb
xor
sarb
scas
xchg
idiv
stc
xchg
add
jbe
and
arpl
and
xor
icebp
scas
pop
or
mov
fs
push
inc
mov
cld
push
rolb
mulb
mov
sbb
sbb
xchg
lods
stc
add
arpl
dec
xchg
xchg
push
enter
sub
shrl
aad
sahf
mov
cltd
add
and
sub
cmpsl
shll
call
stos
faddl
dec
cs
adc
imul
add
adc
rorb
inc
stc
dec
nop
mov
xchg
adc
sub
andl
push
mov
sub
cld
jns
in
fidivrs
insl
fistpll
dec
ljmp
cs
push
sbb
std
adc
dec
test
in
pop
jne
mov
cmp
mov
js
shr
repz
adc
mov
xor
cmp
adc
mov
xor
or
insb
add
pop
pop
stc
cmp
cmp
shll
mov
shll
lcall
in
adc
cmp
icebp
insl
lret
ja
outsl
flds
in
das
dec
loop
pop
hlt
add
sbb
subl
mov
add
add
repz
ret
mov
insb
out
inc
cmp
fistpll
or
add
fwait
in
inc
test
pop
movl
mov
pop
jmp
je
adc
fcomip
dec
sbb
sbb
mov
mov
xchg
cmp
push
dec
and
pop
aas
dec
add
or
mov
dec
push
jp
out
sahf
cmp
xchg
mov
xor
dec
pop
xorb
add
negl
cmpsb
add
and
inc
mov
outsb
enter
mov
cmp
xorb
dec
push
in
cld
in
ss
inc
icebp
scas
movsl
jp
out
mov
js
sub
rcrl
mov
and
mov
sub
dec
push
imul
adc
insl
xchg
shrl
push
jecxz
inc
mov
xor
and
sub
dec
nop
and
out
out
cwtl
xor
jg
icebp
xlat
fs
insl
or
mov
out
push
push
cwtl
lods
inc
scas
adc
fadd
stos
test
mov
nop
fldenv
add
mov
jmp
adc
test
cmp
xor
pop
into
rcl
jno
sbb
movsw
testl
jge
pop
ja
jae
cmpsb
mov
imul
xchg
loope
sbb
and
or
sahf
lods
xchg
int
rorl
mov
push
sub
sahf
pop
push
clc
outsb
fisttpll
cld
dec
js
push
dec
push
sar
and
lea
push
cmpsb
mov
jmp
outsl
test
dec
loop
dec
mov
lahf
es
ljmp
mov
push
movsb
inc
mov
mov
fnsave
hlt
jge
xchg
pop
nop
idiv
mov
fimuls
les
inc
xlat
lods
les
jne
fadds
out
pop
or
and
or
push
xchg
outsb
and
iret
jmp
pop
mov
ficoml
rolb
fdivrl
jae
cmc
mov
push
lods
pop
push
addl
jno
and
testb
xchg
lea
cmp
jbe
push
fimull
push
mov
and
lods
jecxz
push
or
adc
andb
sbb
pop
or
cld
adc
cmc
out
je
neg
fcmove
addr16
daa
cwtl
sbb
in
dec
mov
cltd
xchg
or
cli
xchg
fdiv
dec
cmp
and
add
add
repnz
sub
jns
iret
xor
push
jne
ds
push
jecxz
ret
adc
adcl
es
into
jbe
loope
lock
sbb
subl
clc
lret
js
add
add
sarb
fcoml
pop
sti
adc
nop
test
popa
dec
les
scas
push
fs
sbb
repz
xor
aas
leave
push
loope
or
aaa
fadd
lahf
je
push
sti
lock
les
mov
and
or
and
mov
cmpsl
cmp
cmp
movsb
mov
sahf
in
mov
repnz
inc
or
jmp
movups
fiaddl
pop
pusha
dec
sub
lcall
loopne
lock
scas
rclb
fcoml
jne
inc
xor
out
mov
cld
pushf
cmp
movsb
dec
pop
bound
pop
lcall
xchg
xor
dec
fmuls
lahf
push
aam
lock
or
jbe
sub
dec
int3
push
imul
push
in
fldl
xor
fwait
les
add
cmp
or
lea
int
mov
fldl
insb
sbbb
dec
mov
mov
inc
daa
xlat
xchg
cmp
add
or
loop
repnz
mov
pop
in
into
sbb
xchg
test
iret
jl
jb
jmp
movl
inc
pop
xor
icebp
push
icebp
jl
ret
scas
xchg
adc
imul
hlt
bound
push
lods
add
or
pop
insb
popf
cmpsl
sub
test
scas
mov
cmp
sbb
push
and
stc
cwtl
jl
arpl
add
pop
mov
jmp
popf
pmuludq
inc
xor
jo
dec
icebp
and
lock
add
or
sub
cmp
aam
stos
mov
loop
out
dec
push
pushf
stos
aaa
adc
jb
imul
sbb
lds
ret
testl
cmpsb
and
xor
fimull
int
aaa
ret
arpl
sub
mov
aas
insb
sahf
popf
pop
pusha
pop
ljmp
cs
fldl
xchg
sub
bound
icebp
push
inc
adc
mov
sbb
adc
shlb
push
and
xchg
test
mov
sub
mov
out
lahf
dec
scas
lea
pop
cmp
inc
dec
out
inc
bsf
or
ja
xor
cmp
adc
cmp
lods
fnstsw
fiadds
push
xor
dec
fdivl
movsb
or
sahf
add
adc
in
mov
sbb
and
mov
add
leave
or
out
mov
or
loope
inc
xor
add
push
cli
mov
outsl
dec
inc
fs
fstpt
dec
pusha
fldt
leave
jo
aam
pop
bound
mov
adcb
xor
sub
cmpsb
fistpll
popf
xchg
xor
sub
leave
pop
mov
lds
loope
push
or
or
icebp
jbe,pn
sbb
ret
les
mov
fwait
clc
sub
jo
push
adc
fidivl
idivl
jg
xchg
loopne
pop
sub
inc
aaa
or
js
or
into
push
test
cmp
int
cmc
dec
std
push
subl
stos
mull
pminub
mov
push
imul
inc
pop
inc
mov
and
mov
push
xchg
icebp
jne
jo
enter
ficompl
call
movb
xlat
ret
subb
pop
adc
xchg
lret
push
lock
loop
sarb
fucomi
pop
jbe
fsubrs
lret
push
cld
pusha
rcrl
clc
lret
call
movsb
fcmovnb
movsl
stos
jl
jp
repz
in
aam
adc
cmp
xor
pop
jmp
and
dec
outsb
data16
mov
sahf
or
jg
leave
mov
lcall
mov
jae
mov
xchg
sbb
loop
notb
movsl
adc
sub
and
out
jp
and
dec
lods
ret
aas
or
mov
iret
addl
mov
jno
les
lds
push
mov
sbb
lea
loop
das
mov
sbbl
fwait
popa
test
add
mov
test
fidivrl
sub
push
cltd
sbb
cmp
icebp
cs
xchg
mov
fstps
mov
or
and
sbb
shll
sub
call
pop
rorb
inc
pushf
jne
dec
fnstsw
push
paddb
jmp
mov
cmp
or
xchg
add
or
popf
cmp
mov
mov
lds
dec
and
xor
stc
mov
sar
sbbb
mov
xchg
fbld
sbb
push
out
movsb
fimull
mov
in
js
cmpsb
fldt
cmp
jnp
cmp
add
bound
mov
sub
cltd
insb
fbld
in
lods
fwait
xchg
mov
out
sbb
idivb
mov
push
mov
pop
sbb
mov
xchg
arpl
stos
mov
jp
test
sub
sub
test
mov
cmp
or
push
cmp
loop
inc
push
inc
xchg
jecxz
mov
fcompl
cmp
pop
jmp
adc
je
aam
push
faddl
lods
ds
cmp
dec
loop
mov
push
fsubrl
repz
add
lods
shll
popa
sbb
loop
cld
out
push
gs
mov
stos
push
jne
mov
sbb
mov
frstpm(287
repnz
or
shrb
mov
rcll
adc
jmp
ljmp
in
pop
js
add
adc
ret
sbb
sbb
xor
sub
mov
sahf
cmpsl
fs
pop
mov
pop
fbld
sbb
pop
fsubs
mov
push
jle
in
push
mov
dec
dec
popa
jecxz
xchg
xchg
pop
jno
in
pop
sbb
in
stos
out
push
dec
scas
ret
mov
stc
jp
repz
cmp
repnz
std
fiadds
sbb
mov
icebp
sub
movsl
pop
sub
shrb
sbb
adc
and
mov
jnp
mov
sbbl
xor
mov
nop
inc
sub
stc
xor
ljmp
push
xchg
imull
mov
xchg
mov
lret
lock
sti
dec
inc
cmc
jge
movsb
pop
and
test
cmp
add
xchg
jbe
jp
dec
mov
lock
shrb
lods
test
dec
mov
out
movsl
cmp
cmp
xor
inc
adc
xor
pusha
std
push
shlb
mov
xchg
adc
leave
imul
inc
insb
loope
cwtl
xchg
sarl
ss
ficompl
outsl
mov
nop
sahf
leave
sub
rcrb
push
adc
xchg
and
leave
jg
jmp
es
xlat
cld
cmp
lcall
push
addb
fs
fs
and
sub
les
cwtl
sar
aaa
push
and
es
mov
xchg
lahf
out
movzbl
inc
mov
iret
das
cmpsl
test
xchg
mov
mov
mov
loopne
aas
sub
xor
add
and
es
lahf
aas
pop
push
das
imul
mov
cmp
push
stos
aaa
aaa
ss
popl
ja
pop
xor
enter
sub
in
adc
mov
push
bound
mov
or
aad
repnz
jecxz
rcrl
addl
push
imul
mov
xchg
push
inc
xchg
shll
daa
jl
pop
sbb
ja
and
cmp
scas
xchg
shlb
mov
test
rcrl
test
mov
or
addb
insl
imul
pusha
dec
sub
xchg
and
int
inc
fnsave
stc
xchg
jp
push
rclb
jmp
les
mov
xor
hlt
xor
scas
cmp
lret
outsb
cmp
and
mov
loopne
adc
fdivp
jne
lret
or
bound
xchg
xor
test
fcomps
repnz
insl
mov
pop
pushf
cmpsb
mov
add
scas
add
movsl
cmp
push
gs
sbb
add
xchg
xchg
test
repnz
js
xchg
sti
mov
sub
lret
fwait
or
pop
fbld
cld
add
bound
or
pop
dec
movsb
nop
aas
insl
mov
lock
arpl
roll
xchg
jae
xlat
imul
mov
xor
jg
push
jmp
cli
je
cmp
xor
subb
dec
into
ret
repnz
add
sti
sti
inc
adc
popf
push
inc
cmp
movb
leave
mov
testl
dec
lcall
jg
lcall
xorb
xadd
insl
mov
nop
imul
push
inc
sahf
and
mov
cmp
mov
or
push
jge
sbb
mov
in
adc
test
mov
mov
xlat
js
repnz
shlb
push
aas
mov
add
sub
push
fmuls
jae
jb
cmpsb
mov
js
sub
cmc
push
lret
shll
rorb
mov
mov
dec
inc
lods
pushw
shlb
in
inc
add
push
dec
insb
sub
aaa
es
ljmp
and
lea
mov
push
outsl
jo
or
in
cmpsb
sbb
sbb
stos
add
pop
lcall
mov
imul
xor
stos
push
and
pop
jge
jle
popa
jge
push
add
and
mov
imul
out
xchg
pushf
cmp
xor
out
xchg
push
lcall
jg
fwait
jp
mov
das
dec
jle
cmp
xor
mov
fildll
mov
sub
in
mov
xor
data16
jnp
jbe
pop
jp
and
sbb
jge
xchg
loop
dec
mov
xor
push
jp
cmpsl
cwtl
scas
jno
or
fwait
mov
rcll
je
push
cmp
pop
and
loope
mov
lret
sarl
in
push
clc
adc
in
xchg
push
sub
dec
je
repnz
icebp
ljmp
dec
std
add
push
std
pop
lods
fwait
repz
stos
aas
pop
or
push
in
inc
movsb
clc
clc
push
mov
xchg
mov
fisttps
push
mov
js
cmc
inc
loopne
jns
sti
fwait
sbb
sbb
mov
pop
xchg
mov
push
xchg
fdivrs
stos
push
movsl
jle
cmp
scas
adc
gs
fcoms
stos
mov
inc
fcomps
movsb
jmp
adc
or
pusha
add
aam
mov
shlb
push
cmp
in
xor
mov
flds
shl
or
xor
pop
mov
test
clc
inc
push
lods
lret
lea
or
icebp
lock
arpl
jl
mov
mov
sub
movsb
xchg
and
sbb
insl
dec
mov
xor
mov
aad
mov
movsl
jnp
add
mov
dec
inc
sbb
push
and
mov
push
sbb
sbb
cwtl
or
mov
in
push
subl
xchg
dec
stos
pushf
jg
test
adc
or
aas
repnz
aas
aaa
mov
popa
aad
mov
fwait
outsl
jmp
cmc
adc
mov
sub
mov
mov
and
lcall
aaa
lods
fcomps
xor
sub
push
pop
shr
fmuls
daa
cmp
inc
dec
pushf
fdivl
lahf
jno
aaa
sbb
adc
lret
movsb
xor
test
sbb
mov
jne
in
dec
jae
fwait
int
cmovs
stos
inc
call
ja
fmul
pop
inc
mov
in
jl
in
adc
push
fstpt
mov
pop
cmp
in
inc
inc
add
bound
ficomps
les
icebp
sbb
dec
mov
out
out
jns
mov
js,pn
adc
pop
mov
or
xor
loop
mov
js
mov
repnz
inc
jo
frstor
mov
scas
lret
mov
inc
mov
ds
shl
add
pop
mov
mov
repz
mov
scas
mov
adc
ds
mov
push
bound
sahf
and
and
popf
lods
jg
xchg
inc
in
and
loop
test
cmp
pop
and
sti
xchg
je
lods
add
testb
out
push
and
repnz
inc
ljmp
jne
icebp
xor
add
sbb
lea
push
jno
data16
jns
push
mov
xchg
adc
dec
mov
push
xor
out
ja
outsl
data16
push
aam
mov
mov
mov
jno
mov
cmp
int3
aam
add
sbb
testb
push
aaa
icebp
outsb
cli
xor
int
ja
or
fdivrl
pop
cld
adc
fnstcw
jg
mov
popa
push
add
xor
iret
push
xchg
jb
cmpsl
mov
mov
enter
lret
pop
cmpsl
sbb
cltd
push
pop
xchg
fists
pushf
cmpsb
enter
mov
rorb
iret
jno
scas
lret
jle
aaa
sub
push
cmp
inc
push
jbe
push
mov
dec
in
sbb
inc
addr16
aaa
add
inc
pop
jmp
loopne
xadd
cmp
jb
adc
mov
inc
xchg
leave
fidivrs
xor
sbb
ret
shll
push
pop
mov
repnz
add
in
mov
fcmove
test
xor
jb
repz
shlb
aad
inc
clc
pushf
xchg
xor
cwtl
pop
popf
xor
cmp
xchg
gs
jp
pop
sub
hlt
sbb
and
test
sub
and
cmp
or
daa
shrl
pop
push
cltd
insl
lods
jmp
flds
pop
test
stos
icebp
rcr
dec
and
sbb
jg
ffreep
add
lock
arpl
pop
push
shrl
pop
jbe
leave
cmc
lcall
xor
inc
pop
mov
les
fnstcw
je
enter
push
jge
scas
fs
out
mov
sub
adc
loope
push
mov
fs
xlat
cmpl
mov
lea
out
dec
fisubs
ja
xchg
adc
test
mov
xor
dec
loopne
add
pop
sbb
add
sbb
clc
push
insb
jo
out
dec
push
and
cli
outsl
jbe
xchg
push
sub
jg
cmp
jmp
pop
in
maskmovq
testl
loope
rcll
rcrl
and
dec
push
aaa
mov
mov
add
mov
inc
pop
icebp
fimull
pushf
fsubrl
imul
dec
push
clc
add
stos
push
add
roll
cmp
arpl
lods
aam
or
mov
fdivs
pop
xchg
jp,pn
sti
sahf
pop
xchg
xor
push
sbb
mov
jp
push
xchg
mov
cld
mov
mov
flds
cli
lret
jb
fsts
jb
nop
pop
sti
or
adc
data16
fwait
addr16
adc
and
rclb
js
mov
out
int3
shl
or
mov
dec
shl
xchg
lods
xchg
fbld
mov
or
js
pushf
mov
addb
and
dec
lea
xchg
sbbb
shlb
push
inc
push
test
nop
jp
push
bound
movsb
xor
sbb
cmp
and
cmpb
xor
adc
and
cltd
dec
out
jo
jl
jnp
repnz
xchg
fmulp
popf
dec
and
ss
popf
movsl
insl
and
mov
sarl
stc
add
add
push
test
sbb
jbe
out
cli
pop
xchg
mov
test
ret
fsubs
ss
xor
daa
jg
xlat
test
mov
cmp
mov
push
push
add
pop
sbb
arpl
in
or
test
dec
jmp
ja
arpl
movsl
xchg
cltd
pop
pop
and
enter
dec
pop
in
enter
push
fcomi
jmp
dec
cmc
push
or
sbb
pop
xor
xor
in
mov
call
js
and
cld
jno
ficoml
gs
or
mov
addr16
insl
int3
sbb
int
dec
push
jno
sbb
add
jp
inc
nop
pop
jecxz
mov
dec
sub
lahf
jno
push
jp
insb
pop
sub
in
mov
int3
sub
ds
push
pop
or
sbb
xchg
xchg
aaa
les
pop
add
adc
adc
adcb
loope
inc
dec
jno
paddusw
aaa
sub
arpl
jbe
les
jecxz
sub
push
gs
jmp
sub
pop
call
xor
inc
push
push
sub
push
cmp
mov
sarl
mov
movsb
mov
orl
push
lock
nop
mov
ss
in
js
sahf
jne
aam
add
enter
lods
mov
les
lock
mov
cmp
adc
push
ret
jle
stos
popf
popf
fs
mov
sub
cmp
cld
les
loope
notb
bound
mov
movsw
cld
mov
dec
mov
inc
ret
jno
es
inc
or
dec
inc
test
cmp
fisubl
adc
nop
loope
jmp
push
push
fidivrl
xchg
lcall
adc
and
xchg
pop
jbe
jl
jge
push
mov
mov
notb
leave
ja
push
mov
mov
sbb
dec
popf
stos
das
mov
mov
adc
cmc
mov
cmpsb
negb
daa
cmpl
xchg
pop
jle
ds
xor
mov
mov
lods
dec
add
imul
inc
sarl
add
xlat
mov
jl
lret
std
outsb
sub
jge
or
xchg
mov
ss
fisubrs
sub
or
int3
pop
sarl
insb
xorl
imul
jns
pop
ret
cld
add
out
shlb
mov
in
xchg
inc
cld
sar
mov
push
jo
repz
je
dec
sbb
and
jp
aam
pop
fwait
jl
mov
out
cli
mov
xchg
out
jle
add
add
aam
jnp
ret
dec
inc
dec
ja
ror
loop
push
xor
clc
or
call
neg
icebp
cmp
adc
aas
gs
shlb
jbe
repnz
arpl
xchg
addr16
lret
jecxz
sbb
jbe
in
popa
or
loope
insb
cltd
jae
push
popf
out
cmp
ds
inc
unpcklps
jmp
insl
sahf
mov
mov
cli
push
loop
rcr
cld
jecxz
fisttpl
cmc
lods
test
xor
imul
scas
notl
popa
mov
push
ficomps
in
nop
add
pusha
lock
add
movsl
xchg
adc
movsl
jnp
popa
test
pop
movl
aaa
adc
sub
mov
outsl
mov
mov
jns
mov
out
dec
or
ficoms
sbb
iret
lret
int3
add
cmp
scas
les
je
fisttps
mov
sub
mov
xchg
pop
clc
cmp
dec
scas
adc
fwait
adc
add
pop
popf
repnz
sbb
inc
mov
rorb
adc
push
adc
or
fldt
je
cmp
lret
xchg
daa
xchg
xchg
roll
sbb
sub
out
aad
pop
faddl
mov
idivl
xlat
cld
mov
add
and
push
into
ja
int3
dec
pop
pop
sar
push
xchg
sbb
mov
push
jmp
mov
mov
loop
inc
loopne
clc
mov
in
xchg
adc
xor
sub
inc
ja
xor
add
mov
sahf
jecxz
cmp
pusha
xor
nop
mov
stos
aaa
mov
xor
sub
pusha
iret
and
pop
leave
scas
in
decb
adc
mov
sub
divl
mov
sbb
xchg
add
test
sbb
sbb
lret
jp
test
inc
mov
mov
sub
inc
add
pop
xor
arpl
mov
loopne
imul
and
mov
or
and
sbb
jge
mov
jo
jns
inc
pop
or
cmpsl
mov
mov
je
pop
push
cld
daa
loopne
test
jnp
andl
fstl
les
dec
ljmp
sub
dec
mull
mov
aas
sbb
dec
pusha
cmpsl
mov
adc
std
sbb
jae
lret
sbb
popf
pop
sbb
mov
jmp
or
stos
dec
sbb
shufps
mov
sbb
push
dec
and
movsb
clc
cmp
jg
xchg
xlat
icebp
stc
stos
shrb
mov
xor
sbb
or
sbb
stos
dec
pop
testb
fwait
sarb
mov
cmp
sahf
mov
adc
xchg
leave
xlat
lods
cmp
arpl
push
dec
and
inc
into
push
mov
cld
inc
cmp
lock
repz
je
pusha
and
out
test
cmp
jns
lea
push
mov
daa
outsb
xchg
pop
jg
test
xchg
insb
cmp
mov
or
inc
jp
pop
dec
jnp
lret
in
rsm
xorl
sbb
repz
je
pop
mov
add
fcompl
mov
dec
adc
aad
mov
pop
sbb
std
sahf
lods
bound
sub
mov
cmp
pop
dec
into
cmp
sbb
mov
aam
sahf
xchg
into
insb
add
xchg
lock
mov
loopne
jo
xlat
inc
cwtl
and
movsl
lea
cli
xor
addb
ds
ficoml
movsl
push
jl
cwtl
or
fadd
push
std
pop
gs
mov
iret
mov
cwtl
lods
in
mov
leave
repz
sub
fcomip
xchg
xchg
mov
ja
or
movsb
or
or
push
push
jp
test
aaa
xor
xor
jg
test
xor
fs
loopne
bound
sub
sarb
adc
cmp
jge
arpl
push
icebp
jl
ja
orb
aam
clc
pop
sub
mov
roll
rorl
popf
jnp
sbb
data16
or
pop
or
dec
sub
add
paddq
in
fwait
adc
or
cmp
out
test
in
hlt
inc
pop
mov
cli
jae
xlat
shrl
xchg
out
jo
gs
inc
adc
xchg
imul
push
jne
out
jbe
test
mov
jecxz
pop
mov
xor
cmp
or
aad
fisubl
jae
cltd
ljmpw
mov
ja
inc
cmc
jg
rolb
push
lock
and
mov
sti
out
lea
or
out
jb
adc
fadds
cmp
dec
adc
cmp
mov
pause
pop
mov
pop
outsl
or
cltd
adc
fildl
mov
sbb
test
test
outsl
or
ret
sti
stos
loop
mov
and
lds
cmp
mov
cmpsb
icebp
mov
jne
inc
fsub
inc
std
jne
lods
pop
inc
fcompl
dec
push
add
and
add
pop
add
movsl
call
testb
push
negl
mov
dec
pop
cwtl
xchg
cmp
in
stos
push
jae
int3
sahf
movsb
sub
int
mov
ds
mov
mov
dec
or
hlt
xchg
and
jo
loop
mov
dec
out
xor
lret
push
pushf
dec
xchg
mov
je
mov
fs
inc
enter
hlt
loopne
loopne
outsb
stos
loop
mov
test
jecxz
adc
or
lret
mov
mov
xor
stc
sub
adc
or
roll
jmp
imul
inc
and
gs
adc
xchg
fwait
repnz
clc
push
fistl
xchg
stos
sub
mov
and
mov
xchg
mov
pop
insb
shl
xor
xorl
xchg
shll
xchg
pop
jl
cs
out
mov
fimuls
and
mov
aaa
push
sbb
add
ret
mov
sub
mov
cwtl
mov
mov
dec
mov
sub
xchg
inc
add
push
cli
dec
push
bndldx
mov
pop
imul
les
pushf
jl
mov
stos
cmp
mov
bound
les
and
lock
mov
cmpsb
push
xor
sahf
sbb
inc
mov
push
cmp
dec
inc
movsb
sub
inc
xor
lcall
into
or
repz
jg
outsl
sbb
add
adc
dec
fcompl
test
adc
xchg
xchg
push
pusha
out
pusha
xor
sahf
sbb
fcoms
stos
jbe
jmp
sbb
loope
dec
dec
fcomi
push
daa
enter
adc
mov
pop
arpl
flds
mov
or
sub
in
cltd
mov
out
mov
psllq
jae
sbb
jns
jae
jae
in
cli
jb
cmp
pop
repnz
sbb
adc
mov
push
adc
jg
data16
inc
mov
inc
jae
lock
adc
scas
inc
push
jnp
inc
push
inc
pop
lock
aas
out
fisttps
mov
cmp
mov
inc
lcall
add
jne
push
jnp
int
loopne
ja
jle
gs
arpl
gs
idivl
les
lods
jne
iret
or
or
push
jl
arpl
mov
inc
fdivrl
cmp
mov
mov
int3
les
cltd
or
aam
fsubrs
pop
scas
bound
xor
add
adc
mov
insb
faddl
int3
fildl
fcmovnbe
and
inc
scas
mov
sub
imull
inc
sbb
dec
add
neg
add
sub
enter
dec
cmp
in
mov
dec
cmp
repz
mov
cld
jnp
movsl
stos
xchg
pop
test
lods
pusha
stos
and
or
mov
sbb
andl
rol
popa
jne
jb
mov
cwtl
rolb
mov
mov
out
repz
pop
addl
hlt
mov
ss
mov
sbb
or
mov
nop
adc
add
into
jmp
mov
jnp
test
inc
fstl
push
sbb
loope
loop
xchg
in
iret
mov
cmp
dec
ret
jb
pusha
scas
fcmovnb
int3
outsl
movsb
jge
int3
jp
mov
sbb
data16
and
pop
jmp
or
stos
and
mov
mov
je
test
test
inc
popa
mov
or
dec
inc
sub
add
fcoms
push
add
dec
cwtl
incl
and
ret
push
pushf
lock
icebp
repz
cmc
stc
lock
cmp
pop
mov
sub
mov
in
stc
mov
test
jns
inc
lahf
pop
push
adc
out
fnstcw
push
sub
or
dec
or
ljmp
lods
jmp
push
pop
pushw
hlt
push
mov
aaa
mov
cmc
mov
shlb
pop
test
lock
test
js
push
inc
sub
mov
pop
sbb
out
out
sbbl
clc
sahf
subps
jne
mov
lock
push
push
xchg
imul
gs
sub
cmp
xchg
sbb
fs
int3
or
jne
mov
push
pop
ret
dec
fimuls
in
test
sti
jne
scas
pop
into
repz
cmpl
fidivrl
in
inc
fcompl
adc
pop
das
jo
aam
rcll
push
jmp
xor
mov
call
cmp
inc
mov
bound
jge
mov
in
sbb
ja
fidivrs
dec
scas
cs
rclb
cltd
mov
imul
jne
loope
inc
sbb
gs
dec
test
dec
test
es
das
adc
cmc
adc
pop
lcall
rorb
icebp
xor
and
in
jne
adc
in
mov
movl
cmc
ret
scas
inc
sub
pop
popf
cmp
out
fadd
lea
les
loopne
lods
adc
mov
sbb
pop
arpl
adc
jae
into
or
jg
out
shr
jno
add
leave
sarl
mov
or
shrb
push
or
not
pop
xchg
pop
push
roll
in
das
outsb
pop
jne
pop
xchg
jge
mov
in
jnp
int3
pop
scas
shrb
lret
dec
add
into
xor
mov
mov
test
xorl
jb
das
or
sub
fcomps
aad
cmpl
sbb
add
inc
loopne
inc
out
xchg
jl
sub
jl
fmul
cmpsl
cmp
pop
popf
mov
xchg
cmp
loope
push
nop
sbb
inc
cmc
xchg
xchg
xor
scas
fldcw
cmc
sbb
outsb
nop
jne
xchg
mov
mov
or
inc
jmp
ljmp
ds
cmp
xor
sbb
and
jns
fwait
shll
mov
jns
push
test
in
mov
mov
cmp
clc
ds
dec
pcmpgtb
sub
in
adc
test
mov
dec
arpl
pop
es
fldcw
popf
dec
fsts
mov
pop
mov
mov
in
or
mov
fs
fs
mov
dec
xor
bound
fsubl
std
push
int
jl
xor
dec
mov
inc
lds
xchg
inc
cwtl
mov
jp
fisubl
jno
stos
por
cli
aad
popf
pop
mov
xchg
xor
mov
fwait
dec
sbb
ja
cmp
adc
loope
je
test
mov
mov
sub
xchg
adc
jmp
sub
and
adc
bound
rorl
or
add
cs
sbb
sub
ljmp
into
dec
xchg
dec
sbbl
icebp
inc
sbb
jp
xchg
mov
hlt
mov
fxch
xchg
es
mov
int
jmp
out
xchg
push
xchg
sbb
pop
pop
xchg
cmp
and
test
stos
test
sbb
jmp
sbb
int
or
cmp
adc
loopne
jbe
xor
or
mov
and
in
mov
divl
jle
mov
scas
stc
dec
lods
pop
and
pop
loop
stos
pop
xor
jae
mov
push
mov
popf
outsl
add
setns
inc
add
mov
in
jp
sub
dec
xchg
sarb
push
cmp
xchg
jae
lahf
iret
cs
leave
cltd
rcr
jl,pn
inc
faddl
stc
scas
inc
mov
sarl
hlt
jae
xchg
xchg
inc
jle
or
adcl
lahf
stos
xor
pop
sub
mov
or
scas
repnz
icebp
push
adc
popa
ljmp
loope
clc
pop
pusha
or
dec
subb
push
mov
fcmovnu
ret
mov
sbb
cmp
mov
push
cmp
aaa
sub
leave
push
mov
loop
push
lods
out
cli
loope
xchg
xor
ljmp
adc
adc
rolb
sbb
xchg
ret
stc
loope
lret
sub
jecxz
cmp
jmp
or
ja
insb
scas
repnz
divl
xchg
das
nop
stos
jns
mov
jmp
jge
and
scas
cmpsl
jecxz
mov
aam
cmp
test
jns
cmp
cs
xchg
leave
shlb
loopne
jle
out
inc
loope
gs
mull
mov
nop
xchg
sub
xor
fimull
xchg
in
inc
cmc
dec
out
in
adc
mov
in
hlt
pop
in
mov
popf
cmp
xor
outsb
test
xchg
push
inc
xchg
mov
scas
push
loopne
mov
popl
mov
cmp
xchg
pop
pop
divb
cld
inc
mov
sub
stos
pop
pop
mov
xchg
xlat
push
hlt
or
xchg
aam
pop
mov
or
cmp
xchg
into
mov
fbstp
rcrl
push
into
pop
push
jne
sbb
jmp
dec
inc
std
aas
dec
test
jg
lea
movsl
mov
lret
push
jle
push
test
shlb
fisubs
or
mov
repnz
sti
cld
fnstsw
ret
adc
lods
mov
gs
adc
int3
comiss
cwtl
sbb
sub
or
lcall
push
sbb
loop
popf
mov
int3
push
adc
jle
xchg
adc
pushfw
add
jns
sbb
lret
das
mov
mov
btc
inc
dec
add
fdivr
aam
icebp
pusha
mov
xchg
jo
mov
mov
dec
xor
hlt
rcl
ret
mov
or
sbb
xor
jnp
loop
inc
mov
movsb
leave
jp
and
jmp
xchg
scas
pop
and
mov
push
dec
sub
sub
mov
or
jns
in
daa
sbb
std
mov
aam
mov
bound
stos
cmp
aas
leave
push
add
adc
sti
lods
jne
sbb
dec
outsl
dec
lods
xorl
outsl
inc
pop
add
sub
std
jns
rcll
sub
lods
sub
es
inc
outsl
test
push
adc
and
jae
dec
cmpsb
pop
ss
dec
fisubl
orl
push
adc
and
loop
in
nop
std
rcr
popf
test
push
push
fistps
les
sbb
cli
adc
mov
inc
jmp
push
int3
dec
sub
lock
inc
dec
mov
inc
cli
inc
xor
cmpsb
jnp
push
in
sti
shll
push
jo
aam
mov
and
std
push
sub
add
test
nop
inc
mov
jo
dec
push
xor
or
and
dec
fcompl
scas
cltd
cmpsl
lock
sub
adc
bnd
subb
mov
and
jl
popf
mov
out
jge
loope
fcomps
xchg
fwait
or
daa
push
mov
aad
push
push
insl
test
lock
cmpsl
sub
imul
sub
xor
loope
sahf
cmc
and
mov
and
dec
pop
dec
fwait
jo
jbe
jb
push
cmc
mov
fwait
and
jp
jbe
cmpsb
adc
dec
xor
xchg
rolb
cmp
cmp
popa
shrl
stos
mov
cli
testl
and
sub
inc
jno
mov
mov
jmp
jl
sbb
mov
rorl
inc
or
ds
xchg
mov
in
mov
bound
stc
add
pop
and
jb
fidivrs
adc
out
add
push
test
dec
cmc
cwtl
xchg
lods
stc
pop
cmp
les
jno
sbb
mov
or
lret
test
mov
orl
ret
inc
mov
mov
pushl
call
or
out
clc
sarb
int3
rcrb
outsb
ret
jo
mov
inc
pop
xlat
leave
push
or
xchg
jmp
test
lds
jmp
pop
add
mov
jmp
add
dec
jno
stos
mov
ret
cld
jge
repnz
xor
jle
push
fdivr
sahf
popa
xor
inc
mov
pusha
outsl
fimuls
js
and
test
fld
stos
pop
mov
fistl
pushf
ret
std
mov
mov
cmp
cmp
lds
insb
fadd
inc
mov
adc
mov
push
mov
push
mov
sub
adc
sbb
sub
into
pop
ret
dec
dec
sub
aad
sub
aas
mov
fdivl
imul
pop
add
xchg
jp
mov
test
and
mov
cmp
jnp
sahf
shrb
or
jl
das
daa
adc
jp
jecxz
jns
mov
add
jp
mov
jb
xorl
andl
jle
dec
into
inc
bound
add
rcrb
xlat
cmp
xchg
jae
out
mov
testl
push
sub
inc
push
cmp
dec
pop
mov
fisttpll
mov
movsb
movb
sub
jge
pop
xchg
out
dec
aas
addps
in
cmpsl
roll
stos
sub
xor
xchg
stos
ret
or
jp
mov
jnp
lret
mov
stos
loop
bound
jne
sti
popf
not
xchg
mov
sub
or
xor
pop
mov
inc
int
repz
fnstsw
push
iret
nop
into
push
or
fcoms
aaa
shlb
jp
xchg
cmp
stos
jmp
fidivrs
outsb
stos
ljmp
jnp
fstl
mov
stos
inc
sub
sbb
cvtdq2ps
leave
aad
idivb
push
jl
lret
sbb
add
add
dec
mov
cmp
cmp
bound
mov
mov
push
mov
jno
insl
int
cmpsb
cmpsb
inc
out
lods
loop
fadds
sahf
les
mov
sbb
cltd
insl
inc
pop
orb
xchg
cs
xor
xchg
popa
out
xchg
mov
fsubl
sbb
imul
xchg
test
ss
repz
mov
fidivrs
add
xor
or
dec
insl
or
cmp
push
mov
xlat
dec
mov
popf
cmpsb
dec
idiv
into
add
jnp
mov
sub
rcrb
and
lock
cli
mov
lret
xor
repz
gs
xorb
mov
pop
xor
push
popf
test
mov
cli
addr16
sub
fwait
mov
sbb
cs
stc
xchg
or
xchg
push
push
mov
xorb
arpl
and
xor
dec
pop
xchg
in
mov
or
testl
xchg
sub
mov
pusha
mov
cmp
adc
xchg
dec
xor
cmpsl
negl
mov
ja
loop
xchg
in
or
cltd
add
pop
push
ja
arpl
xlat
sub
mov
in
xchg
loop
loopne
cs
out
pop
dec
loop
int3
push
test
nop
mov
jbe
into
shll
sbb
pmullw
test
movsl
push
lcall
xchg
mov
jb
in
pop
int
fldl
outsl
mov
repz
lret
outsl
int3
lret
ss
fimuls
stc
cmp
gs
data16
ret
add
test
cmp
bound
jno
or
loope
adc
and
je
test
pop
cmpsl
jl
insb
fldl
pop
arpl
test
rclb
mov
ret
sub
hlt
or
cwtl
cmp
in
xchg
sub
pusha
dec
cmp
pop
pop
inc
scas
xor
notl
scas
rclb
nop
out
js
jg
mov
add
and
and
mov
dec
fmul
add
add
addr16
jge
pop
repnz
jmp
test
dec
and
in
dec
les
in
lods
fldt
mov
jno
cmpl
rorb
dec
pop
or
lret
pop
shlb
std
cmc
jo
mov
imul
or
pushl
idivl
ret
fstps
and
jne
fcmovb
mov
sbb
inc
mov
push
sub
xchg
repz
cs
out
ret
jg
adc
pop
das
jle
mov
mulb
je
and
les
bound
pop
out
popf
gs
rcrl
mov
jb
and
dec
rcrb
andl
xor
lcall
sbb
ja
in
sti
push
fiadds
jecxz
lret
inc
jne
push
std
push
sbb
es
adc
push
cltd
mov
ss
xchg
out
or
add
adc
test
adc
mov
jns
xor
mov
cltd
push
enter
push
dec
cmp
jle
sub
sub
sub
cmpsl
mov
mov
push
nop
bound
ret
loop
decl
fs
std
cmpsl
xor
mov
lcall
sub
mov
fdivl
ret
inc
lds
sti
xchg
inc
adc
cmpsl
xchg
imul
fsubl
pop
xor
jmp
popf
adc
push
or
jle
xchg
movsb
fucomp
ret
or
pop
out
xchg
fwait
adc
adc
mov
leave
dec
in
cli
jb
enter
in
inc
add
push
cltd
jno
mov
sbb
xor
xor
test
addl
lods
lods
popa
add
pusha
fsubl
fisttpll
mov
shll
loopne
or
popf
popa
ret
inc
dec
and
rorl
lods
sub
mov
cmp
add
pop
add
xchg
out
cld
outsw
and
clc
mov
add
stos
repz
lods
add
fisubl
push
ret
xchg
push
mov
push
jne
cmpsb
or
loope
and
cmp
outsb
hlt
std
call
xchg
xchg
cmp
lock
addl
sbb
lea
jmp
lds
push
std
lret
pop
and
fildll
mov
cltd
mov
cld
lods
push
cmpsl
and
push
jns
getsec
fcomps
aam
idivb
pop
adc
in
cmp
xor
sub
imull
arpl
sti
pop
jg
imul
daa
sbb
xchg
fmulp
test
call
ds
lock
jnp
push
mov
jae
test
sbb
cmpsl
mov
add
aam
ja
sti
dec
or
adc
or
out
daa
lea
int3
xchg
out
mov
ficompl
cli
sbb
xor
jmp
hlt
push
sbb
push
jp
push
sti
idivl
test
jp
cltd
xchg
sbb
in
fistpl
inc
or
jmp
jp
push
xchg
lfs
rorl
jg
add
pop
mov
ss
push
cmp
push
mov
stc
repz
and
sbb
lds
cwtl
mov
jo
and
sbb
or
sbb
enter
pop
pop
js
aam
jns
fwait
mov
bound
arpl
cmpsl
scas
mov
sahf
fbstp
pop
popf
push
lret
pop
adc
cli
mov
xor
mov
mov
movsl
scas
cmc
scas
enter
into
push
aas
lahf
icebp
ljmp
sbb
dec
imul
jecxz
fs
jmp
push
xchg
sub
xchg
or
icebp
pop
pop
xor
add
xor
sub
rorl
lea
popa
push
scas
jecxz
sbb
and
sub
mov
ljmp
popf
dec
sbb
lret
mov
xchg
mov
adc
inc
lret
adc
pop
gs
fistpl
xchg
add
adc
sub
or
iret
inc
adc
fdivs
jl
gs
loop
inc
push
jno
mov
out
and
lret
mov
or
dec
clc
cltd
pop
mov
dec
cmp
bound
sti
outsb
cmp
mull
insb
es
aam
add
or
mov
xchg
movsl
ret
jmp
mov
inc
iret
movsl
inc
or
cmpsb
mov
and
stc
add
xchg
adc
xchg
out
nop
mov
into
scas
lahf
xor
call
xor
je
pop
jmp
outsb
fsubr
rol
xor
cmp
bound
dec
out
inc
mov
cs
scas
scas
mov
mov
add
std
cmp
popf
or
das
fcompl
cmp
mov
or
sahf
and
inc
push
shl
mov
dec
mov
cld
adc
cmc
fs
jne
mov
aam
jmp
mov
ret
push
andb
stc
leave
hlt
mov
dec
popf
push
and
push
sbb
test
jbe
and
sub
lahf
out
out
lds
in
dec
xchg
enter
repz
outsb
rcl
xchg
mov
stos
jg
jp
int
not
xchg
hlt
cmpsb
lods
in
sub
jnp
fstl
addr16
adc
aad
scas
adc
cmp
jbe
mov
ffree
filds
mov
cmpsb
pusha
pop
mov
in
dec
xchg
dec
fsts
pop
push
mov
rorl
sbb
mov
dec
add
lods
cmp
inc
mov
jmp
loop
sub
lea
add
repnz
cltd
pop
ss
mov
ds
loope
jg
into
jmp
add
xor
mov
jl
push
cmpsl
js
mov
enter
and
or
jg
mov
lods
out
into
jg
mov
cwtl
xchg
xchg
movsb
add
mov
xorl
xchg
inc
sub
jnp
dec
cmp
repz
or
mov
outsb
or
idivb
out
int3
dec
push
pop
xor
sbb
mov
cmc
shrl
inc
add
pop
jecxz
aaa
ss
scas
jle
inc
fistps
xchg
mov
clc
movsl
sub
mov
fsub
testl
mov
pusha
mov
xorb
fcoml
inc
push
iret
je
adc
pop
inc
mov
jge
xchg
push
dec
push
xchg
mov
mov
xor
popf
int
std
scas
fnsave
push
mov
lcall
sub
ss
sbbb
je
shlb
mov
push
push
jo
loope
lods
inc
leave
fsubl
pop
fimuls
cmc
mov
xor
roll
sub
cmp
into
stos
pop
mov
push
xor
sub
push
jae
jb
aaa
sbb
pusha
sahf
clc
ret
fwait
js
cmp
sub
adc
mov
adc
inc
pop
pop
repz
add
xchg
stos
adc
pop
pop
sub
dec
rcrl
lcall
mov
xchg
xchg
sub
jne
das
mulb
xchg
sub
pop
or
inc
jb
decl
je
bound
inc
gs
cmp
add
fdivs
in
shl
xor
mov
or
lea
iret
add
rcrb
gs
lods
push
in
inc
cmp
inc
rclb
mov
add
das
pop
cld
icebp
push
push
hlt
xchg
push
jae
shr
xor
inc
out
jp
daa
aaa
loope
xchg
je
xor
in
sub
push
fdiv
stc
and
popf
xchg
ret
xchg
js
icebp
push
or
ja
push
aam
push
pop
cmp
push
mov
mov
fisubrs
dec
outsb
subl
sahf
insl
add
std
adc
xlat
fnsave
jge
cs
add
and
jnp
insl
lcall
daa
adc
cltd
mov
sbb
fmulp
add
sbb
mov
xchg
cmp
out
cmpsl
mov
outsb
cmp
std
jne
call
adc
xchg
sub
clc
push
aaa
pusha
inc
pop
xchg
or
jbe
arpl
adc
rcl
repz
push
insl
daa
sub
lret
add
xor
shrl
or
or
aaa
mov
adc
data16
inc
subl
and
jp
xlat
sbb
adc
arpl
aas
ss
ljmp
push
in
push
cmpsb
dec
shl
push
add
sbb
sub
hlt
mov
scas
cltd
shlb
mov
int3
xchg
cmpsl
loope
lods
or
icebp
lahf
fwait
stos
pop
outsb
mov
fistl
sub
sub
cmpsl
psubb
cmc
cmpsb
dec
dec
sbb
aas
xchg
fld
mov
and
sbb
cli
inc
stos
iret
xor
fstpl
test
popa
cmp
ret
pop
jo
lret
dec
daa
fstp
xor
adc
dec
in
in
mov
outsl
mulb
out
adc
negl
mov
sbb
push
pop
icebp
jecxz
gs
push
sbb
jbe
fcomi
mov
sbb
or
fistl
cwtl
inc
fisubl
push
or
outsb
xchg
inc
mov
fbstp
mov
ljmp
js
add
sub
scas
jo
add
mov
jns
data16
cmp
not
push
stc
and
adc
xchg
cmpsb
jb
es
inc
inc
dec
cmc
lods
push
inc
shl
push
ret
xchg
sub
push
aad
out
addr16
arpl
and
aam
xchg
lea
lret
call
mov
push
das
xchg
jge
js
mov
stos
adc
adc
mov
push
repz
adcb
xor
pop
mov
xchg
shlb
xor
leave
mov
mov
jbe
lret
faddl
jp
cwtl
jg,pt
cmc
jmp
roll
mov
and
or
mov
aam
iret
dec
jge
xchg
scas
testb
mov
bound
testl
pop
mov
sub
pop
pop
push
mov
mov
xchg
jle
loop
icebp
mov
hlt
movsb
clc
cmp
add
sbb
mov
loope
inc
pop
dec
pop
push
mov
pop
cli
scas
rorb
orl
xchg
cwtl
cmpsl
loop
test
mov
dec
or
arpl
cmc
cltd
push
daa
in
inc
push
stos
stos
test
shl
loope
sbb
iret
pop
mov
lods
popf
daa
xchg
inc
jno
jno
cmpsl
xchg
lock
out
sbb
andb
jns
popf
sbb
mov
enter
dec
push
cli
pop
fucomp
imul
fstps
jnp
push
add
push
pop
cli
decl
test
lea
ljmp
mov
in
repnz
clc
jno
mov
bound
mov
jnp
mov
sub
adc
imul
or
xchg
in
mov
jnp
mov
sub
dec
or
loope
fwait
out
jnp
fldl
pop
cmp
rclb
xchg
nop
loopne
jae
outsl
sti
jbe
push
ret
xor
lea
inc
sub
fdivrs
xor
icebp
adc
add
xchg
or
out
lret
outsb
icebp
iret
cmp
mov
cmp
jp
xor
aam
jae
mov
rcr
jge
insb
fistpll
mov
std
stos
lret
dec
sbb
shll
xchg
sbb
sbb
pop
jg
gs
sar
sbb
xor
lock
fnstcw
or
lods
or
lret
xchg
test
lods
loopne
or
xchg
add
inc
test
nop
add
lods
and
sub
pop
xchg
xor
cmpsl
mov
cli
inc
mov
leave
repnz
cmp
shl
xlat
pcmpeqb
stc
arpl
and
shlb
mov
int
push
pop
inc
push
or
aad
into
mov
jle
xor
add
ds
jmp
mov
xor
and
sub
sbb
mov
xlat
cs
xorb
rol
and
call
repnz
shlb
dec
call
aaa
sti
mov
mov
pop
pop
pop
scas
iret
dec
inc
pop
call
sub
mov
xchg
sbb
inc
jo
cwtl
pop
fistpll
and
mov
mov
mov
jbe
fcmovnu
mov
dec
pop
or
and
and
prefetch
cmc
cwtl
sbb
and
cld
xor
popa
inc
test
mov
jae
dec
repz
out
loope
movsb
and
xor
jns
arpl
pop
gs
into
push
lret
push
nop
mov
sub
push
mov
ret
lods
cmp
lahf
push
pop
testb
popf
fmull
test
dec
cmpb
push
aas
pop
cmp
xor
sarl
xchg
push
inc
sbb
push
jl
mull
lret
lods
pop
or
lea
push
cmp
xor
and
lods
jg
xor
jae
stos
addb
cltd
or
adc
fdivr
dec
jbe
mov
sbb
mov
inc
subl
mov
lods
daa
cli
sahf
in
and
or
imul
out
pop
add
or
shl
sbb
add
rolb
push
mov
push
enter
or
das
push
aaa
dec
bound
xor
orl
leave
lds
cltd
jg
imul
jnp
sub
push
push
cmp
xchg
test
inc
dec
jmp
sub
jecxz
mov
push
adc
fcoml
mov
test
mov
inc
jnp
aam
lret
movsb
adc
add
sbb
or
jbe
test
hlt
push
repnz
mov
mov
jae
adc
movsb
push
inc
pushf
repnz
mov
out
gs
mov
imul
sub
fwait
mov
movsl
bound
outsb
enter
sub
mov
add
inc
and
mov
pusha
mov
add
mov
testb
rolb
arpl
rorl
es
dec
mov
mov
into
mov
int
cmp
cmp
int
mov
cmp
fs
scas
dec
andl
xor
inc
jp
fstpt
sub
fcomp
scas
push
jge
or
and
inc
xchg
outsb
jg
imul
push
cmp
xchg
mov
ds
mov
inc
push
adc
in
mov
pusha
out
call
inc
and
rcrb
movsb
xchg
jl
push
into
stos
add
dec
mov
push
pop
cvtdq2ps
test
cld
bound
cmp
mov
xor
mov
xchg
pop
xchg
nop
sarl
arpl
inc
add
lods
clc
test
add
xorl
stos
xchg
shl
in
adc
in
inc
cmp
stc
xor
pop
mov
cmp
out
or
adc
cmp
mov
sub
mov
inc
test
mov
adc
pushf
push
push
sub
fucomp
dec
jo
sbb
jmp
mov
push
fmull
sub
cmpsb
mov
inc
and
xor
push
adc
add
mov
testl
shrb
fwait
push
int3
pushf
mov
int
incl
sarl
add
aaa
mov
mov
jmp
shll
pop
mov
mov
add
push
jle
mov
sub
mov
mov
insb
sti
insb
js,pt
out
mov
pop
lret
loopne
pop
or
aam
mov
pop
inc
aas
cmp
push
icebp
pop
andb
mov
leave
xchg
jle
pop
xchg
sub
xor
bound
jne
jb
xorb
in
scas
cli
or
cmp
repnz
adc
inc
jne
out
gs
xlat
dec
cmc
test
add
scas
jo
add
insl
inc
roll
scas
mov
adc
les
inc
lods
xchg
popa
cmp
cmp
add
push
in
xor
cmp
jnp
push
mov
sbb
shl
mov
es
pop
je
inc
mov
lea
call
scas
mov
mov
adc
lahf
xlat
sbb
jmp
mov
mov
ret
ret
add
lods
mov
call
inc
movsb
inc
jmp
add
pop
in
and
sbb
int3
sbb
jp
cmpsl
lds
and
xchg
lcall
fldcw
loop
das
ret
sbb
push
inc
xchg
adc
imul
lods
adc
shll
lret
push
adc
cmc
in
outsb
mov
mov
inc
mov
xchg
cs
es
pushf
fldt
sbb
xor
test
fiadds
mov
jp
jge
lock
call
push
mov
mov
pusha
sti
gs
sbb
pop
dec
rolb
xchg
jmp
cwtl
mov
push
mov
mov
cmp
cmc
push
gs
mov
jmp
mov
insb
ds
pop
push
pop
dec
pop
push
and
xchg
sub
inc
aaa
ficompl
adc
xchg
cltd
xor
shll
nop
sbb
sbb
decb
sbb
mov
push
or
jle
js
ja
sub
es
add
sub
jg
mov
mov
xchg
xchg
imul
pop
subl
nop
in
jg
push
sbb
lret
aad
cmpsl
sbb
mov
push
and
pop
add
in
daa
pop
inc
xchg
push
loope
mov
dec
xchg
mov
testl
and
pop
ds
hlt
push
or
dec
pop
mov
popa
push
int
xchg
sub
movsb
lahf
dec
test
inc
push
fs
cs
inc
enter
jne
test
lods
mov
sbb
fstps
sub
xchg
pop
test
inc
jne
jle
loopne
cwtl
sarl
mov
lods
ja
xor
cli
pop
push
push
sbb
dec
test
pop
int
xor
and
in
pop
cmp
test
loop
mov
jbe
lahf
enter
sbb
inc
mov
cs
nop
push
cld
inc
sbb
jnp
add
testl
addr16
jmp
insl
mov
sbb
add
mov
inc
insb
into
enter
aam
xor
and
sub
xorb
shl
jo
cmc
pop
cmp
mov
insl
or
testl
in
pop
cltd
adc
ficomps
rcl
ja
cs
mov
or
xlat
sti
leave
imul
sub
jp
cli
shlb
xchg
jne
je
imul
jnp
jl
in
imul
pop
pop
mov
sub
jp
iret
or
mov
lret
cmp
push
pop
xor
mov
mov
adc
dec
test
fcomps
stos
push
push
pop
jne
ja
pop
fcomi
arpl
aaa
or
dec
push
sbb
adc
push
lcall
negb
in
cmp
les
rclb
shlb
add
push
test
imul
mov
aas
mov
shrb
pop
sbb
jbe
imul
jl
lock
pop
sub
or
sar
hlt
xchg
inc
push
and
push
imul
lods
add
or
in
xor
or
movsl
lods
lods
arpl
ret
inc
xlat
add
or
cmc
ljmp
sub
adcl
mov
push
push
popf
ror
xor
scas
xchg
add
or
sub
mov
mov
fimuls
in
or
push
jo
or
out
push
xchg
cld
aam
jl
pop
dec
in
mov
enter
dec
stos
xor
lcall
movsb
mov
test
pop
outsl
ss
fwait
dec
sbb
dec
ss
outsb
mov
mov
sbb
sarb
add
cwtl
mov
adcl
insb
jbe
cs
cld
loope
jno
out
lret
ret
out
mov
loope
push
sbb
nop
xor
fisttpl
movsb
stos
push
sahf
cmp
push
test
lret
mov
xchg
sub
paddsw
popa
sbb
ss
ljmp
jae
xchg
imul
clc
pop
jne
inc
out
imul
arpl
add
push
xlat
imul
push
arpl
mov
insb
in
jbe
int
pop
add
test
mov
add
jno
shll
in
popa
test
sbb
mov
pop
nop
popa
movsl
mov
fcoml
xchg
dec
mull
aam
std
fldenv
bound
pop
pop
inc
lcall
popa
lea
mov
lds
cltd
pushf
xlat
ffreep
call
je
pop
cmpsb
add
addb
in
jae
add
test
adc
bound
adc
loopne
xchg
nop
fucomp
xor
xchg
and
in
int
movsb
jmp
adc
jo
subl
push
test
push
stc
push
fs
cmp
test
sbb
or
pop
inc
cld
bnd
lds
arpl
cmp
or
sarb
push
jnp
adc
and
ds
cmc
pop
icebp
out
leave
jns
in
aam
pop
popf
jns
and
push
mov
pop
push
jmp
out
test
pop
call
out
mov
nop
jbe
outsl
ficompl
cmp
jge
pop
add
lcall
mov
mov
dec
sbb
lock
into
push
pop
or
hlt
jge
data16
pop
repz
cmp
jno
push
adc
jg
adc
pop
or
add
push
push
mov
in
push
push
data16
inc
mov
mov
xchg
mov
in
cld
pop
fidivrl
cs
aas
inc
or
ds
inc
aaa
inc
dec
cmp
push
das
adc
std
jmp
iret
push
shlb
repnz
add
mov
adc
test
inc
lods
push
inc
mov
mov
dec
mov
into
xchg
cs
or
mov
ret
cmpb
arpl
cmp
pop
inc
aaa
cmc
add
cli
js
or
test
and
loop
dec
ljmp
fs
sbb
pushf
dec
subl
push
iret
repz
push
and
dec
mov
scas
imul
test
mov
sti
arpl
movsb
lret
lret
xchg
xor
inc
dec
in
adc
idiv
les
test
or
inc
fcomps
movb
cmp
dec
jcxz
adc
test
mov
and
roll
fwait
cs
imul
cmp
mov
xchg
mov
in
pop
xchg
jmp
into
xor
ja
mov
add
fldt
fnstcw
mov
sub
clc
fmulp
xchg
gs
xchg
adc
mov
cmpsb
dec
adc
inc
adc
imul
pop
sbb
xchg
add
fsubrs
mov
xor
sbb
cli
inc
dec
scas
pusha
sub
and
dec
sbb
mov
push
inc
rcr
test
fstpt
test
xor
leave
iret
arpl
ja
pop
decl
rclb
repz
aad
fimull
in
test
cmp
xchg
push
in
xchg
push
mov
mov
cmpsb
or
push
data16
push
adc
loopne
rorb
adc
xchg
and
cmp
lcall
testl
adc
xor
addr16
cli
jno
fcmovne
or
push
lods
sub
mov
jo
pusha
mov
and
mov
stos
sbb
and
xor
shl
stos
add
pop
jge
xor
ds
add
ror
dec
aas
sub
mov
int3
fistl
jecxz
jmp
and
repnz
rcrb
and
incl
or
negl
dec
lods
push
ljmp
push
jae
sbb
aas
cmpl
push
es
sub
push
daa
aam
imul
in
and
cmc
sbb
cwtl
adc
jo
add
cmp
fisttpl
out
stc
sub
and
jnp
movsb
popa
inc
add
inc
xor
aas
subl
and
icebp
jo
mov
dec
loopne
inc
or
jg
mov
imul
xchg
lods
lods
add
sbb
push
adc
xchg
into
cmp
mov
mov
int3
dec
pushf
int
xchg
pop
lock
movsl
add
lea
in
aad
movsb
outsb
int
repnz
mov
or
scas
imul
insl
sub
inc
push
add
pop
inc
jnp
cmp
dec
adc
mov
sub
test
inc
inc
jl
ss
mov
jno
movsb
in
xorb
hlt
xchg
lea
in
add
inc
lahf
std
ja
into
out
ss
xlat
or
test
xchg
adc
adc
fsubrp
into
jmp
jg
daa
mov
xchg
out
xor
sbb
push
lcall
inc
test
mov
ficompl
enter
sarb
xchg
dec
lds
cmp
adc
and
jecxz
jne
mov
cmp
or
test
push
jno
jbe
flds
or
jmp
leave
leave
xchg
and
add
sbb
and
adc
call
mov
sbb
call
add
mov
test
adc
pop
fs
mov
cmc
jo
int3
jnp
xchg
out
cmp
jbe
test
sbb
xchg
stc
imul
cmp
scas
push
dec
jbe
repnz
repnz
xchg
mov
xchg
mov
lods
repnz
ret
mov
sbb
cmpsb
xchg
push
mov
or
xchg
shr
loope
xlat
test
xchg
xchg
or
mov
aam
mov
imul
xchg
mov
push
es
aaa
mov
es
movsb
or
and
cwtl
mov
daa
cmp
lods
sbb
fstp
xchg
dec
lock
into
out
aad
add
fisubrs
and
shll
in
push
test
in
jecxz
mov
sub
aaa
fisubrs
gs
inc
xchg
lea
sub
shrl
leave
mov
fisttpll
push
push
sti
xlat
out
dec
sub
clc
adc
push
adc
or
scas
and
adc
sbb
mov
jecxz
adc
fs
xor
or
sbb
addr16
mov
js
xor
mov
into
inc
pop
es
in
je
add
ror
xor
xor
pop
mov
pop
and
test
dec
fdivrs
loopne
pop
mov
insl
scas
xchg
mov
aaa
out
cmp
dec
dec
inc
test
xchg
adc
pop
rcrb
mov
les
mov
mov
add
ja
fidivrl
pushf
ficoml
mov
xor
dec
mov
xor
pusha
xor
aam
jns
sub
sub
call
cs
inc
enter
lahf
dec
fisubrl
jne
ja
jecxz
mov
rcr
jae
lret
mov
out
dec
or
inc
mov
stos
arpl
mov
add
fstpl
adcb
cmp
mov
xchg
mov
mov
pop
xchg
push
or
je
xchg
add
ljmp
iret
gs
cwtl
dec
pop
jmp
mov
into
movsl
shll
pop
nop
jle
repnz
cs
das
insb
test
lea
xor
sti
or
cmp
out
lods
movsl
enter
pop
in
inc
inc
popf
lret
jg
pop
cmp
lods
aad
hlt
test
cmpsl
pop
jle
lea
xor
clc
daa
je
inc
sbbl
or
push
scas
inc
push
push
pop
mov
pop
shll
ret
and
add
cmc
lds
push
mov
sub
sub
filds
shr
mov
inc
loop
or
mov
je
gs
bound
test
add
mov
jl
dec
ljmp
or
push
xlat
emms
push
pop
lret
cld
inc
loope
mov
inc
jnp
sub
in
sbb
cmp
movsl
and
sbb
repz
movsb
sbb
cmp
out
das
jbe
sub
inc
fdivrl
aas
push
add
push
dec
mov
out
pop
adc
sbb
scas
push
xor
mov
cs
mov
mov
repnz
sbb
sub
cwtl
sbb
xor
xor
push
das
or
jecxz
cmp
jbe
mov
mov
mov
scas
std
mov
jmp
and
sub
dec
jae
mov
and
or
mov
xor
leave
lcall
inc
sub
adc
cmp
lods
inc
outsl
sub
int
pop
std
repnz
push
lret
dec
jb
popf
pop
mov
out
dec
movsb
fyl2x
add
mov
jp
test
js
adc
testl
cmp
jns
xchg
ss
popf
movsb
push
push
jle
hlt
adc
cmpsb
xchg
pop
movsb
fidivs
xor
lds
inc
sub
push
jecxz
cmp
insl
dec
repnz
push
or
push
jns
lea
test
not
mov
inc
push
icebp
mov
imul
test
ret
mov
mov
jns
xchg
test
bnd
mov
mov
lcall
movsl
insb
sub
add
jmp
adc
addr16
push
les
cmp
pop
dec
int3
leave
test
push
gs
ljmp
adc
imul
push
loope
mov
loope
enter
out
add
cwtl
es
ret
stos
inc
mov
xchg
repnz
int
jl
mov
xor
jp
pop
pop
sub
not
push
mov
sub
es
cs
dec
aad
aas
pop
sbb
lret
dec
fwait
stos
mov
fwait
ds
cmovns
mov
lock
xor
enter
fiadds
insb
xor
cmp
adc
xchg
push
sub
bound
ss
je
adc
rorl
mov
jnp
xor
icebp
cld
sub
push
call
jo
adc
out
mov
out
inc
pop
and
loopne
mov
rcrl
sub
sbb
icebp
in
pusha
or
fisttpl
fstl
sti
push
xchg
ret
fwait
mov
push
icebp
leave
lcall
xor
inc
sbb
or
dec
mov
shl
stc
pop
mov
stc
pop
mov
pop
sbb
iret
inc
adc
in
add
or
jbe
cltd
stos
data16
mov
inc
stc
jno
cmp
pop
ds
add
or
aaa
mov
push
add
mov
frstor
fsubl
or
subl
push
sub
fldl2t
sahf
dec
cwtl
stos
jl
push
lds
push
scas
lods
push
sub
daa
fs
mov
mov
ljmp
pusha
out
pusha
mov
dec
or
cmpsl
jp
push
dec
mov
in
incb
ret
sbb
push
sub
xor
imul
mulb
mov
mov
sbb
int
js
mov
hlt
or
outsb
test
fs
sbb
stos
mov
mov
fidivrs
popa
es
scas
cltd
adc
mov
and
sub
lock
cmp
cli
jns
adc
dec
and
pop
lea
bound
call
inc
jns
ret
adc
loop
xchg
cmpsb
xor
mov
jge
outsb
addr16
bound
sti
sub
sub
sbb
ficoms
ds
lret
leave
mov
aaa
mov
or
jecxz
rcr
cmp
ljmp
clc
sub
add
pop
sub
fmul
cmp
std
adc
adc
adc
push
sbb
add
scas
mov
mov
leave
subl
or
sub
and
and
xor
lret
inc
jo
xor
mov
mov
ds
xlat
or
pop
inc
loopne
inc
or
je
xchg
sub
aad
pushf
scas
shrl
lods
leave
mov
and
dec
iret
in
pusha
xlat
sub
sbb
stc
jp
inc
dec
popf
push
adc
cmc
cmp
loopne
idiv
ja
out
sbb
push
dec
aad
fiadds
xchg
sti
or
add
incl
lea
push
lret
shlb
add
hlt
fdivr
sbb
push
mov
lods
pop
gs
loop
rorl
jnp
adc
xchg
lret
fisttps
mov
loop
pop
cs
mov
rol
xlat
stos
sbb
call
add
pop
xor
imul
rcrb
mov
lock
xchg
sbb
pop
loope
lods
sbb
cwtl
scas
insb
fcomps
ret
and
jae,pt
pusha
or
and
pop
inc
cld
mov
es
loope
fcoms
stos
cmp
cmp
insl
lods
pop
pop
xchg
or
jb
arpl
stos
cmp
in
cli
stos
xor
sub
loopne
js
jg
add
mov
out
jle
out
pop
push
aam
inc
pop
cli
push
dec
icebp
popw
les
gs
dec
or
ret
aaa
xchg
jecxz
xlat
jge
mov
stos
ret
push
sbb
adc
fisttps
pushf
inc
mov
jae
sub
not
jl
dec
mov
push
fmuls
aas
scas
cwtl
in
lret
fistl
cli
test
mov
add
jo
jle
neg
or
pusha
test
inc
jno
popf
jb
xchg
rcrb
mov
cmp
cmp
addr16
sub
std
iret
in
in
outsb
jge
dec
pusha
push
add
mov
sbb
jl
subb
pushf
lcall
int
cli
popa
test
and
sbb
push
in
cmpsb
push
in
sysenter
lret
mov
xchg
sub
sti
push
mov
lock
inc
loope
ds
sbb
sar
mov
xor
movsl
jmp
test
cmpsb
icebp
sub
jp
test
xor
pop
fisttpll
in
loopne
inc
or
loop
in
test
popf
jno
dec
pop
cmc
sbb
mov
stc
loop
or
xchg
aad
sbb
jb
mov
in
mov
daa
cld
lret
repz
mov
repnz
or
std
aaa
test
push
out
jns
xor
adc
dec
mov
repz
out
stc
loope
cmpsl
rcr
add
fsubrl
inc
stc
inc
pop
nop
add
or
sbb
ret
push
xor
and
dec
mov
mov
stc
push
mov
mov
inc
sbb
test
das
xchg
mov
cmp
jae
rcrb
and
addr16
sbb
xchg
and
jle
shll
popf
jge
lods
out
xor
mov
rcrl
cmpsl
push
jb
push
mov
or
xor
mov
mov
sbb
ds
sbb
mov
dec
mov
inc
push
or
xchg
xchg
shll
jno
inc
pusha
js
sbb
test
pop
sub
push
pop
pop
aad
add
test
xor
je
punpckhbw
mov
sbb
and
sub
mov
mov
mov
pop
mov
adc
pop
cmpsl
stc
repnz
shl
push
cmp
hlt
outsl
rol
add
and
cs
sbbl
sub
xor
pop
hlt
fmul
push
repnz
out
loopne
mov
push
cmp
pop
rorl
xchg
jae
cmp
cmpsl
loope
fsubrs
push
inc
sub
loope
int3
mov
mov
xchg
xchg
jecxz
out
leave
xchg
loop
shll
insb
cmpsb
mov
sub
mov
add
cltd
fisttpl
jo
pop
push
pop
jno
ljmp
inc
mov
mov
pop
dec
aaa
pop
push
hlt
aam
dec
dec
cmp
lret
dec
rcrl
fmuls
sbb
shll
jge
and
sub
pop
clc
mov
stc
test
inc
jne
roll
or
dec
cmpsl
pop
or
jle
adc
inc
cmp
sbb
cmc
outsl
into
aad
and
xchg
jae
jne
inc
add
ss
jbe
jnp
js
and
shl
sub
cmpsb
cmpsl
aaa
or
test
add
add
pop
loopne
sbbb
push
sbb
mov
shlb
mov
lcall
push
das
ret
andl
stc
sti
adc
jns
into
int
insb
sub
push
inc
add
test
in
sbb
jmp
xor
aam
cltd
cld
outsl
js
lea
scas
push
icebp
movsl
mov
in
xor
mov
hlt
or
sbb
cltd
cli
in
outsl
faddl
mov
out
fwait
mov
and
xor
inc
in
int
push
test
pop
and
in
jbe
jae
or
sbb
mov
jb
lret
repnz
and
call
mov
jmp
fwait
es
inc
jno
pop
push
enter
pop
mov
mov
movl
push
mov
xor
xchg
sbb
push
fdivs
call
push
repz
push
iret
cli
iret
jo
push
lods
pop
jp
imull
ss
and
rol
test
shll
loope
push
sbb
mov
loope
mov
cvtps2pd
xchg
ret
mov
push
lahf
mov
outsb
inc
inc
xor
mov
sub
into
aam
out
outsb
movsb
sub
repz
jae
ds
dec
sub
adc
fisubrs
jle
or
push
mov
and
inc
inc
aad
sbb
xchg
out
xchg
ss
cmp
addr16
xchg
mov
test
xchg
sbb
add
bound
aad
add
jae
fcmovnb
push
insb
pop
stos
mov
sub
inc
push
outsl
repz
loope
fcmove
inc
xor
pusha
insb
aam
push
and
push
or
es
mov
fdecstp
ret
icebp
ret
enter
add
mov
and
fsubs
dec
inc
test
mov
rcl
stos
xchg
mov
xor
inc
xor
dec
and
push
fisubl
xlat
sub
addb
stos
in
xchg
dec
mov
outsl
repz
out
lods
aaa
push
sti
arpl
mov
adc
inc
add
cmp
in
ljmp
lcall
pop
and
and
shll
movsl
sub
pop
in
inc
mov
insl
fstl
aas
cmp
jle
xor
sub
jl
sahf
add
sub
push
lcall
rorl
xor
add
mov
xchg
sbb
sbb
push
mov
push
push
je
push
sub
jns
lods
lds
pop
and
sub
or
ficomps
arpl
scas
out
repnz
dec
ljmp
iret
xor
dec
cmp
cmp
out
add
int
pop
mov
push
ljmp
mov
es
hlt
mov
pop
mov
xor
or
arpl
aas
pop
cmpsl
push
popf
arpl
xchg
sti
push
jp
out
mov
and
pop
clc
out
pop
xchg
mov
pop
lcall
xchg
add
int
or
fs
dec
out
cmp
add
jl
jge
je
inc
adc
lcall
mov
es
scas
mov
movsl
call
jge
cmova
int
arpl
inc
mov
push
fs
or
mov
cwtl
sub
push
pop
aaa
sbb
scas
stos
sbb
xchg
sahf
stos
pop
testb
jo
cmp
cmp
adc
loope
imul
sahf
xor
mov
cmp
cmovs
imulb
lcall
adc
dec
cwtl
insl
bound
add
pop
ret
xor
adc
in
push
popa
lret
jno
outsl
sbb
movsl
enter
into
inc
and
dec
mov
out
aad
jns
mov
xor
ds
sbb
mov
mov
ja
out
addr16
push
mov
jae
outsb
cmpsb
call
and
fildl
cmc
out
mov
jbe
out
loop
push
mov
pop
sarl
push
popa
push
or
dec
xchg
hlt
aaa
mov
mulps
fldenv
pop
xor
mov
movsl
jmp
aam
push
loop
arpl
or
mov
add
xor
adc
pop
or
roll
xchg
imul
push
cmp
mov
inc
mov
or
popa
arpl
mov
std
negb
aad
cmpsl
leave
stos
fists
arpl
pop
and
ret
push
add
xchg
add
cld
xor
mov
cmp
ror
sub
xchg
pusha
fsts
inc
mov
sbb
aas
push
incb
scas
pushf
jge
xor
xchg
cwtl
or
xor
lock
sahf
jns
lea
ret
rclb
scas
lock
in
ret
in
add
les
rorl
adc
pushl
and
jb
sahf
mov
out
xor
sbb
scas
xlat
sti
xor
loop
fadd
sbb
cmp
out
mov
jg
outsb
out
js
lahf
cmp
or
inc
fiadds
cwtl
loopne
dec
stc
jne
outsb
ret
lock
leave
imul
aad
jge
cmpsl
mov
add
jb
data16
jg
xchg
cmp
xchg
or
call
mov
mov
cmpsl
pusha
outsb
arpl
jbe
call
and
loop
xor
xor
lds
in
insb
andb
mov
push
mov
pushl
fimuls
jge
daa
adcb
mov
mov
loope
and
fisubrs
out
or
insl
jns
add
repnz
and
xchg
lods
loopne
adc
jns
jmp
fnsave
pushf
mov
or
or
adc
sahf
inc
ret
xor
aaa
mov
pop
and
mulb
out
jmp
sub
mov
rclb
sbb
lret
jmp
sub
bnd
or
lret
out
mov
xor
sbb
iret
sbb
add
jg
jecxz
jg
or
subl
mov
fcmovnbe
push
push
adc
and
xor
add
pop
and
fwait
lahf
shlb
cmp
push
push
std
es
lcall
in
fsts
dec
or
fdivrl
outsb
frstor
decb
push
jnp
xor
arpl
mov
mov
sub
push
je
aam
es
jnp
rcl
mov
jg
cmpsl
movsl
cmpsb
icebp
adc
mov
aaa
scas
inc
adc
stos
sbb
mov
fs
jle
inc
ficomps
shrb
inc
sub
fcompl
in
aam
push
divl
scas
cld
in
xor
pop
into
adc
jp
push
test
dec
push
stos
mov
mov
fcoms
aaa
mov
ret
test
inc
xchg
jns
lds
push
inc
int3
aam
es
or
scas
scas
in
xchg
cmp
mov
adc
dec
or
cmc
cmpsb
fsub
scas
daa
lcall
inc
ret
pop
jp
cmpsb
cmp
movsb
cld
sbb
pop
push
cwtl
dec
outsb
mov
sbb
sub
jne
xchg
xor
pop
and
pop
sbb
mov
adc
xchg
mov
incb
mov
test
daa
inc
test
dec
fstps
outsl
loopne
lea
and
in
and
inc
out
mov
cmc
jns
xchg
pop
mov
push
sub
mov
inc
add
xor
pop
mov
addr16
or
jp
sub
add
dec
jmp
jnp
movsl
les
imul
sbb
add
ret
movl
adc
inc
les
jecxz
cmpl
pop
xchg
outsl
andl
jbe
pusha
sarl
inc
mov
or
pop
rol
pop
inc
insl
add
xchg
mov
mov
test
aaa
inc
jbe
rolb
jno
and
lahf
adc
jmp
jp
sbb
push
leave
mov
sbbl
loope
and
sbb
stos
jp
xchg
jmp
popa
add
push
dec
call
push
mov
and
rorb
test
out
jmp
lret
mov
push
aad
enter
push
cmp
shrb
push
push
mov
hlt
xor
and
scas
mov
fnstcw
push
jp
mov
push
push
scas
xor
fiadds
dec
in
dec
shl
push
push
dec
es
mov
imul
cmpsb
lock
or
cltd
fistl
leave
adc
jle
xor
push
repz
in
mov
mov
mov
mov
add
adc
jbe
dec
mov
pop
mov
into
fs
cli
jb
std
and
pushf
inc
sahf
xchg
mov
push
jae
add
lret
movsl
xchg
dec
cld
fwait
mov
lds
mov
dec
out
push
xchg
cwtl
arpl
or
fdivr
call
rolb
imul
add
xchg
jbe
mov
insb
movsb
or
or
out
adc
jns
xlat
push
cmp
dec
pop
outsb
bound
clc
push
cmp
pop
lods
stc
sub
mov
into
push
sbb
insb
std
pop
jbe
stos
stos
cmp
adc
push
stos
xor
jb
ret
mov
inc
dec
lods
cmc
shrb
subl
or
stc
xor
ret
cmp
mov
jo
xor
push
icebp
test
cmp
mov
xor
lods
inc
add
sbb
popa
rcrl
jge
popa
pop
inc
jmp
pusha
mov
leave
rorb
fsubl
in
or
jecxz
mov
mov
jb
xchg
jne
cmp
into
sarb
fisttpl
cmpsb
inc
and
or
cmp
cmp
shr
xor
push
daa
cmp
xor
and
push
sub
jns
inc
scas
loop
and
pop
pop
dec
or
movsl
adc
sbb
mov
and
inc
mov
or
sub
adc
cmp
jno
jae
push
nop
mov
popa
cmpsb
cmpsb
jg
add
int3
mov
mov
getsec
inc
scas
dec
push
pop
imul
fstp
js
idiv
aad
xchg
dec
ds
leave
test
sub
imul
adcb
jne
jge
adc
rorb
pop
sub
subl
jns
mov
push
inc
xchg
loope
es
dec
test
push
xchg
cltd
add
fdivs
jo
add
xchg
mov
jl
rcr
mov
test
mov
clc
inc
adc
xor
gs
mov
mov
mov
xor
inc
fisttpl
sbbl
xchg
mov
or
fists
cmc
shrl
adc
push
dec
psraw
mov
daa
icebp
outsl
push
sti
shll
rolb
movzwl
aas
sub
push
ret
cmpsb
mov
out
nop
xchg
jmp
mul
insb
xchg
xchg
mov
or
cmp
call
push
sub
push
repz
mov
add
adc
cmp
arpl
jle
loopne
outsl
repnz
cmp
fcomps
test
daa
push
lea
aaa
dec
cltd
das
mov
sbb
push
in
dec
sub
mov
arpl
int3
sbb
out
inc
out
fiadds
cmpsl
mov
jns
cli
push
mov
mov
scas
cmp
sub
loopne
mov
lock
js
xchg
jns
fdivr
mov
and
jp
xchg
xchg
mov
outsl
ds
push
push
mov
mov
aad
push
jno
mov
inc
mov
sub
xor
int3
arpl
mov
and
sar
pop
loop
cmp
sti
lahf
shl
jb
xor
clc
cld
insl
mov
sbb
sub
test
sbb
pop
or
pop
test
subb
fs
jg
dec
iret
dec
push
nop
das
push
xlat
dec
ficompl
xchg
and
xor
sbb
cmpsl
pop
or
jmp
cmpsb
adc
mov
dec
ss
push
cmp
dec
int
dec
mov
cmp
popf
dec
jecxz
xlat
out
loop
jmp
pop
push
mov
arpl
adcb
pop
ficomps
inc
dec
sub
xchg
xor
push
lcall
mov
into
test
clc
lds
sbb
rep
mov
scas
aad
lahf
scas
push
pop
and
xchg
and
mov
xchg
iret
movsl
and
pop
mov
push
fsts
xchg
aam
add
mov
cmpsw
call
sub
mov
dec
scas
sbb
and
fiadds
stc
mov
cmp
out
ljmp
or
inc
mov
push
push
xchg
ss
inc
lcall
call
scas
push
cmp
fldcw
ds
jne
fstpt
or
outsb
ret
je
arpl
lahf
pop
loope
test
shlb
and
sbb
mov
mov
cld
ja
ficomps
hlt
and
sbb
xchg
jb
movsb
ljmp
neg
in
lret
mov
mov
add
faddl
push
fldl
push
jecxz
adc
cmpsb
mov
rclb
test
hlt
xlat
rcll
jns
mov
lea
andb
addb
rolb
sbb
pop
data16
mov
sub
xchg
movb
xorl
or
push
repz
sbb
filds
mov
adc
int3
jno
mov
cmp
fisubrs
sbb
xchg
sub
pop
ljmp
jmp
pusha
insl
sbb
movsb
cmpsl
fucomip
sar
cmp
xor
daa
xchg
fcomip
jp
pop
push
nop
add
xchg
pop
xor
xor
xor
dec
jl
dec
in
push
pop
push
mov
inc
or
mov
inc
in
cs
push
jno
inc
aas
stc
out
jg
popa
lret
cmp
sbb
sub
cltd
in
xor
notb
xor
clc
cmp
mull
sub
test
insl
inc
jecxz
rcrl
mov
adc
xchg
xor
ffreep
jno
jle
loop
jmp
inc
inc
mov
or
stos
shlb
mov
jbe
jo
sub
adc
roll
arpl
cmpsb
push
mov
ljmp
adc
icebp
mov
jmp
test
mov
loope
sbb
adc
fwait
jle
std
push
andb
aad
cmpsb
push
and
dec
jns
loope
outsl
test
xchg
lahf
iret
push
fcompl
pop
test
repz
mov
xor
cltd
add
pop
jl
in
pop
les
ljmp
outsb
leave
fstpl
jnp
ja
out
pusha
test
or
mov
mov
cli
stc
mov
push
divl
cmp
or
jg
sbb
xchg
pop
mov
mov
add
cmc
xlat
popf
cs
rcrl
jl
push
pop
insl
jmp
xchg
sub
cld
pop
bound
loopne
out
clc
insb
jae
call
insb
pop
sbb
leave
in
aas
xchg
mov
push
imul
sbb
mov
mov
aaa
imul
incb
jle
mov
cmp
daa
cs
sbb
outsl
mov
pop
cli
push
mov
and
cmc
push
xchg
xchg
mov
repnz
xchg
cld
jnp
push
es
incb
adc
xchg
mov
scas
sub
push
mov
cwtl
push
adc
js
mov
push
ror
push
cld
jp
fsubrl
pushl
dec
jp
ror
and
sbb
xchg
add
fldl2t
xchg
shl
mov
rcrl
lea
rcl
mov
mov
push
xchg
in
pop
int
fs
push
faddl
adc
stc
and
dec
insl
push
sub
or
fists
rorl
addl
cld
cmp
or
dec
insl
cmp
push
int
inc
dec
inc
pop
push
scas
push
out
filds
in
mov
sbb
sub
push
and
jge
dec
and
sbb
fcom
fimuls
into
dec
mov
es
in
mov
fcmovu
cmpl
data16
mov
jo
and
pusha
sub
cmp
mov
shlb
add
adc
pop
popf
add
pop
bound
inc
fistpl
adc
ret
xchg
push
pop
and
mov
cwtl
jo
fdivr
cmp
jne
and
ja
and
inc
negb
and
adc
aad
movl
movsl
xchg
aad
pop
ret
rclb
pmaxsw
or
pop
fs
pop
dec
mov
xchg
push
mov
lcall
outsb
pop
pushf
jae
call
dec
inc
jae
stos
dec
popa
pop
inc
pop
and
jecxz
mov
and
mov
into
cmp
and
aas
in
popaw
adc
lods
cmp
mov
ljmp
test
adc
jae
jmp
lret
insl
in
pop
sti
mov
jns
mov
fwait
jo
or
or
xlat
iret
xchg
subb
cmp
push
je
jns
adc
stos
dec
faddl
pop
fucomip
add
fdivrl
sbb
int
shll
cmp
and
add
dec
or
or
push
cwtl
sti
xchg
outsb
sub
rorb
push
xor
popf
jl
jle
pop
adc
outsl
push
mov
add
arpl
loop
cmp
jns
push
mov
jns
and
fcmovnb
inc
lcall
xor
cs
sbb
inc
xchg
sarb
mov
xor
fcoml
fisttpll
popf
mov
loop
mov
xchg
nop
sbbl
push
dec
cmp
lds
mov
inc
lret
imul
test
add
sub
cmp
mov
and
std
adc
pushf
test
add
push
pop
outsl
mov
push
pop
xchg
into
sub
lahf
and
cmpb
test
add
shrl
xchg
data16
inc
rorl
and
mov
nop
add
std
pop
inc
testl
jge
loope
sub
lea
pop
push
xchg
xchg
cmpsl
xor
dec
stos
mov
dec
push
and
mov
jbe
or
dec
iret
or
loopne,pn
test
jae
push
lds
setb
push
cmp
in
aam
lcall
bound
xchg
mov
add
popa
mov
shlb
lea
shlb
mov
stc
sub
fchs
fisubrl
sarb
and
mov
and
std
adc
insl
ret
mov
repz
stc
mov
movsl
pop
out
jae
push
scas
sub
pop
mov
popf
jne
jmp
inc
cs
inc
dec
inc
xchg
shrb
leave
and
mov
or
mov
andb
popf
loopne
adc
mov
xchg
lea
push
lods
xor
add
scas
mov
sbb
mov
xchg
add
push
dec
push
pop
test
sbbb
pop
or
mov
push
cli
shrb
lods
pusha
sub
xchg
mov
pop
mov
outsl
mov
cmp
mov
add
xor
icebp
fcoms
add
out
clc
cmp
loop
xor
sti
pusha
aaa
out
les
xor
or
jge
pop
jge
sbb
scas
orl
gs
mov
in
xor
repnz
jne
loope
test
jle
rcl
aaa
mov
xor
test
xchg
pop
jb
pushf
mov
adc
xchg
jo
sahf
in
pop
cs
mov
mov
and
divl
jbe
pop
pop
inc
rcll
add
mov
add
dec
sub
inc
jno
decl
movsb
mov
or
mov
lock
jbe
fmuls
push
inc
mov
vpunpcklwd
or
push
bound
in
es
push
lds
filds
dec
outsl
std
sbb
std
mov
lds
jecxz
idiv
cmp
xchg
popf
ret
in
pop
test
jecxz
jnp
jbe
test
cmp
dec
or
mov
push
sub
xor
xor
or
sub
and
push
fwait
shll
dec
ret
fisubs
mov
xchg
sub
mov
or
aaa
xor
cmp
jnp
xor
divb
xor
mov
iret
mov
xchg
mov
in
push
inc
gs
adc
test
into
jle
aad
add
in
lods
or
rcll
and
and
ret
push
mov
aam
sub
arpl
jmp
rcrl
jp
in
fwait
adcl
inc
cli
addb
sbb
into
je
sub
push
xor
xchg
fidivl
test
sub
fiadds
cmp
or
jp
pop
jnp
add
cmp
jnp
push
mov
push
inc
loope
outsl
adc
cmpsb
pusha
in
fldl
mov
mov
int
into
jns
divl
cmpsl
lods
sti
mov
cmc
jg
scas
andb
cmc
sbb
jmp
mov
test
movsb
mov
sbb
inc
js
mov
or
mov
push
inc
std
mov
sbb
sbb
mov
or
mov
faddl
mov
jbe
lahf
push
out
adc
jnp
xchg
and
mov
pop
mov
pushf
dec
or
xchg
fwait
out
imul
loope
data16
dec
lea
fs
fdivrl
dec
mov
test
sahf
ja
shrb
adc
mov
xchg
dec
lods
inc
mov
lret
div
je
mov
jmp
xchg
pop
cmp
jae
js
frstor
xchg
hlt
push
add
xchg
mov
inc
sub
scas
repz
int
mov
adc
or
push
mov
cld
repnz
push
stos
add
js
adc
xlat
sbb
cli
lret
cmc
push
or
sahf
and
jne
repz
roll
push
jno
cmc
aaa
sahf
push
push
mov
adc
dec
jae
rcrl
sbb
test
push
pop
push
push
mov
push
insl
testb
or
or
lret
mov
jo
and
mov
jmp
popf
xchg
mov
sbb
outsl
inc
fisubs
xor
inc
lods
inc
add
repnz
xor
mov
scas
push
add
fisttpl
cwtl
dec
push
mov
aaa
jnp
outsl
ljmp
out
sub
lods
adc
inc
add
sti
scas
arpl
add
or
push
jne
mov
test
jl
cmp
in
jae
in
clc
jne
or
inc
lret
sbb
jmp
lahf
mov
in
mov
add
lock
nop
xor
mov
inc
out
dec
push
fmull
aas
bound
xchg
pop
ret
jmp
aad
inc
lods
and
dec
inc
adc
out
jp
flds
lret
in
mov
xor
push
fsubrl
fistpll
out
bound
push
mov
rclb
shlb
sbb
jbe
fidivs
jmp
repnz
dec
push
xchg
mov
mov
pop
push
popa
nopl
push
stos
in
ljmp
add
xor
fdivrs
ror
push
movsb
movsb
aad
sbb
icebp
bound
or
out
xchg
sbb
xchg
sar
jg
int3
out
ss
test
scas
mov
les
cmpsb
arpl
and
jae
popf
jmp
outsl
push
xor
mov
pop
lods
rolb
lods
ficomps
in
sbb
jmp
inc
mov
nop
mov
into
stos
mov
adc
xchg
stos
out
mov
sti
xor
or
pusha
mov
mov
xchg
popf
idivb
cltd
fidivs
dec
jno
aam
jns
cmpsl
popa
mov
inc
or
dec
aas
loop
mov
xchg
jo
sbb
or
imul
fmuls
inc
cmc
xlat
mov
mov
pop
fwait
mov
pusha
lahf
add
jge,pn
add
adc
sbb
scas
or
sarl
fadds
push
fxch
push
ret
add
or
repz
inc
add
push
push
adc
push
push
cmp
call
aas
repnz
jbe
mov
or
pop
test
test
aad
push
fdivp
and
xor
fs
pop
call
movsb
icebp
repz
dec
mov
pop
dec
mov
xchg
dec
js
iret
scas
sub
call
mov
sbb
mov
cmp
xchg
sbb
enter
ret
jmp
jo
test
cltd
sbb
add
push
pop
sti
sbb
into
pop
cli
push
mov
dec
int
push
mov
cmpsl
xlat
jns
mov
daa
dec
xchg
fwait
shlb
or
daa
in
add
push
dec
inc
frstor
pop
sbb
or
lds
lret
das
cmpsl
or
mov
add
test
int
cltd
call
stos
add
adc
popf
mov
daa
aam
jne
fwait
sbb
lahf
aaa
cmpsb
mov
cmp
addr16
add
dec
pop
fs
push
sbb
xchg
pop
pop
xchg
ja
mov
mov
inc
inc
or
ds
sub
and
lods
mov
inc
aam
sub
push
xchg
je
pop
repnz
mov
and
shrl
decb
xor
cwtl
lods
lods
std
push
lds
or
or
push
mov
push
dec
xchg
jne
or
loopne
scas
and
sub
cmpsb
mov
mov
enter
adc
or
fistpll
iret
sbb
cmpsl
fisttpll
jge
mov
xchg
repz
mov
popa
mull
mov
or
ret
jl
sbb
or
push
inc
in
in
sti
and
xchg
xchg
mov
push
daa
mov
add
cmp
mov
inc
add
xchg
dec
insb
rorl
in
dec
icebp
mov
lret
movsb
jno
cmp
stos
ljmp
mov
cltd
cld
test
push
enter
or
xor
pop
nop
and
in
jg
cwtl
sub
jae
push
push
cmpsb
rorw
cld
add
pop
dec
clc
xor
or
and
ss
and
sub
call
xor
jl
dec
mov
int3
shrb
pop
pop
mov
mov
push
cmp
lods
pushf
je
push
mov
pop
cmp
push
dec
xchg
mov
int3
add
shll
lahf
out
and
loope
xor
mov
inc
rolb
xchg
cmp
pop
movsb
adc
test
lock
sub
or
jno
arpl
mov
jb
call
lret
inc
push
mov
hlt
and
mov
mov
pop
movl
xchg
insb
out
scas
mov
mov
cmp
push
sbb
push
insl
lret
sbbb
add
jp
mov
mov
popa
mov
aam
into
jb
sbb
jecxz
gs
xor
sbb
stos
movsl
in
pop
add
in
mov
cld
xorl
daa
adc
bound
scas
cmp
xor
xor
iret
xor
lods
sti
outsb
sub
cmp
cmp
int
add
xor
xchg
push
push
mov
addl
repnz
ljmp
mov
add
dec
frstor
das
xchg
xor
lret
andl
lcall
pop
into
jmp
or
and
sbb
ret
out
add
push
aad
dec
lods
ret
gs
cli
mov
xor
sub
dec
pop
cwtl
mov
lock
jno
pop
sbb
in
and
sbb
xchg
lds
stc
inc
shrl
int
add
int3
sbb
imul
pop
inc
mov
push
xchg
out
lods
mov
cld
arpl
adc
scas
leave
adc
arpl
sub
insb
sbb
sbb
cmc
inc
pusha
aam
sahf
aaa
adcw
add
adc
cmp
std
xlat
fidivrl
mov
rolb
icebp
je
imul
sbb
in
xchg
data16
mov
sbb
jne
mov
sbb
jnp
test
pop
in
lea
aam
insb
int3
and
jne
inc
add
push
notb
loop
clc
rcll
lea
int
inc
out
stos
mov
cmpsl
dec
jnp
rcrl
int3
push
aad
cmp
inc
and
mov
mov
or
in
xor
adc
xchg
push
outsb
push
and
push
insb
mov
in
ljmp
inc
pop
sbb
mov
or
je
dec
iret
sub
pusha
aam
or
mov
mov
inc
push
jo
jb
sti
lret
fidivrs
mov
adcl
mov
ficomps
pop
outsb
stos
das
jg
test
xor
sti
xor
pop
adc
push
loopne
jne
outsb
rcrl
add
mov
and
in
add
mov
inc
out
dec
sub
daa
sub
inc
xchg
out
add
sbb
lock
mov
adc
lret
dec
addr16
stc
cmp
push
jo
push
movsl
aam
and
popf
and
and
pop
cmpsb
hlt
popf
cmp
or
icebp
repnz
pop
ss
push
xchg
jmp
lea
jp
lcall
outsb
stc
pop
adc
pop
xchg
je
and
aad
or
in
mov
xchg
popf
jmp
sub
xor
das
ja
push
test
xlat
jne
out
adc
jb
test
das
shlb
jno
insl
lods
xor
inc
and
mov
loope
inc
mov
sbb
mov
fistps
popa
pop
inc
sti
inc
cmp
cmp
dec
dec
test
sbb
popf
adc
lds
lock
rcrl
fiaddl
jns
outsl
daa
or
dec
mov
inc
mov
jge
mov
sub
pop
mov
int
xor
aad
lods
aaa
imull
ret
dec
iret
mov
or
cmp
vmwrite
mov
stc
jns
sbb
push
mov
cmp
inc
mov
push
insb
aas
xchg
cmp
add
into
add
sbb
cmp
mov
inc
fsubl
mov
pop
mov
and
push
xchg
popf
pop
test
sbb
sbb
xor
loope
jo
push
push
jle
sahf
inc
sbb
and
pop
add
gs
jg
imul
add
es
jg
sbbb
insl
rcr
mov
decl
movsl
fldl
mov
fidivrs
inc
or
shll
inc
pop
and
jp
jne
sbb
pop
fwait
std
jmp
adc
cmp
cwtl
and
mov
add
fldt
xchg
adc
lods
adc
or
sahf
inc
mov
push
cmpsl
fisubrs
jo
pop
ds
stc
and
ficompl
outsb
mov
jnp
jns
add
test
aaa
xor
push
sub
and
gs
scas
lret
je
adc
daa
addr16
and
sub
jl
or
rcrl
lock
je
je
pop
pushf
dec
sbb
xchg
push
push
fwait
mov
sbb
lret
fisttpl
lods
std
imulb
lods
cmpsb
lods
jle
and
ss
ja
and
insb
call
adc
mov
pop
shrl
ds
mov
mov
add
ret
cwtl
dec
mov
push
xchg
movsb
mov
roll
push
xlat
jno
and
rolb
iret
mov
cmpsb
mov
shll
pop
xor
xchg
adc
and
jno
pusha
insl
push
xor
je
pop
dec
mov
ret
sbb
mov
xor
xor
jmp
shll
and
cmc
inc
mov
daa
jo
cmp
dec
rolb
inc
dec
jbe
cmp
loop
mov
jno
or
movsl
jo
pop
or
sbb
push
ljmp
xchg
rcrb
int
imul
fdivl
cmc
enter
in
sahf
xor
cmp
out
adc
icebp
dec
lret
fcom
lock
xchg
mov
sarl
lods
loope
mov
shll
mov
mov
mov
xor
cmc
inc
lds
or
mov
stos
shll
pop
daa
les
hlt
pop
popa
adc
jmp
sbb
push
stos
sub
inc
movsb
inc
push
enter
mov
mov
xchg
daa
insl
or
inc
jo
push
mov
scas
int3
cmp
movb
lea
mov
mov
arpl
pop
movsl
loop
mov
fs
mov
rolb
jo
jecxz
movsl
lret
mov
arpl
fsubl
daa
ljmp
push
fstl
pop
xchg
and
and
popf
scas
dec
dec
fisttps
cmpsl
es
lahf
mov
mov
jmp
jb
jns
push
mov
sbb
sti
dec
pop
aam
xchg
jl
lcall
mov
sahf
cmc
jecxz
sbb
aaa
shll
es
popf
xchg
jp
les
rcrl
push
sbb
int
xchg
or
push
adc
ljmp
push
cmovnp
fsubrl
sti
inc
in
xchg
icebp
mov
mov
add
lcall
pop
push
inc
cld
cmp
cltd
mov
xchg
jp
or
daa
es
dec
dec
inc
insb
insb
adcl
lahf
xchg
cmpsb
orb
cs
sub
ljmp
in
into
and
lcall
stos
push
cmp
xchg
mov
jno
and
cmp
push
sahf
xchg
loop
adc
out
dec
sti
jnp
mov
pop
fwait
pop
out
imul
repz
lret
je
xorb
stos
mov
add
push
add
mov
fmul
cmp
xchg
je
popa
sbb
call
sbb
fwait
dec
in
sbb
in
add
inc
xor
rcll
add
push
ficomps
xchg
aam
adc
pop
sbb
cmpsl
fdivrl
in
js
imul
or
addr16
leave
cld
mov
sub
sbb
pusha
pushf
rcrb
jecxz
pop
jl
mov
mov
std
push
sbb
xor
rcl
add
xor
cmpsb
xor
fmull
hlt
hlt
cmpsl
cwtl
cmpsb
pop
pop
push
ret
xor
adc
cmp
sub
roll
adc
xchg
cmp
inc
iret
ss
leave
xchg
cmp
push
mov
jnp
dec
enter
pop
pop
loopne
iret
mov
jle
clc
lock
sti
mov
aaa
cmp
cmp
out
jnp
out
push
fdivr
loop
out
jno
enter
cmp
dec
jmp
out
sub
loopne
lret
and
out
xchg
push
lods
ss
lret
dec
jp
