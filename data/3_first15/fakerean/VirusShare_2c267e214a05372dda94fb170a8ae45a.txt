push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
or
adc
inc
insb
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
out
xor
add
insb
and
sub
mov
xor
mov
insl
sub
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
dec
sub
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
add
push
xor
testb
sbb
add
add
rorb
int
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
and
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
andl
push
adc
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
pop
inc
add
push
lea
mov
test
je
cmp
add
xor
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
jnp
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
sarl
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
inc
xor
movsb
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
push
call
mov
js
add
add
les
add
add
add
push
pop
add
insb
add
ja
add
jno
jge
add
xchg
call
popa
add
fldl
add
insb
add
xchg
leave
rolb
iret
scas
loope
push
jne
cld
add
movsb
add
ja
outsl
jecxz
into
je
mov
jp
push
lea
in
add
push
push
push
push
push
push
push
push
push
push
call
sahf
addb
pop
int3
je
pushf
jno
nop
incb
mov
add
popa
in
add
mov
add
pop
sahf
jmp
push
test
test
cltd
add
add
gs
add
iret
mov
lea
pop
popl
push
push
lea
push
push
push
push
call
add
add
hlt
xchg
mov
vpermq
mov
loopne
roll
pushf
xchg
add
xchg
push
js
adcb
stc
jb
jnp
mov
xchg
clc
pushf
stc
add
add
add
add
add
add
fstps
incb
aam
bound
push
push
push
push
push
push
lea
push
push
push
call
sti
mov
sahf
popf
add
add
pop
loopne
lahf
add
add
pop
neg
cld
call
data16
ret
add
fsubl
xchg
clc
add
add
mov
in
std
add
loopne
pop
loope
into
add
add
xchg
jle
cli
cmc
fsubrl
jns
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
cli
lret
filds
add
cmc
mov
sahf
add
incb
pop
add
jmp
push
add
add
jmp
in
add
rorb
pop
add
mov
mov
clc
jae
mov
xlat
lahf
mov
add
data16
add
scas
sti
add
pop
ljmp
rcl
js
add
pop
add
pop
push
push
push
push
call
mov
add
add
cmc
add
mov
jae
lcall
lret
fadds
scas
imull
lods
add
cmpsl
lret
add
js
add
fs
add
jmp
pop
add
fwait
mov
lea
pop
call
call
push
push
push
push
push
call
add
add
insb
xchg
add
cltd
add
mov
mov
nop
data16
mov
add
add
data16
add
add
add
add
add
add
mov
cld
lea
pop
push
call
push
push
lea
push
call
js
xlat
scas
add
cltd
pop
mov
add
mov
mov
xchg
add
mov
xchg
int3
cli
jge
incb
mov
add
aam
xchg
push
push
mov
lea
pop
jmp
push
push
push
call
xchg
mov
lahf
popf
mov
js
subb
add
pop
xchg
add
xchg
xchg
mov
test
aam
mov
lods
fiaddl
sahf
add
push
add
add
jge
add
popa
pop
int
in
add
movsb
add
add
data16
ret
push
push
push
push
push
push
push
call
mov
mov
push
add
add
push
xchg
or
enter
add
xchg
add
lahf
fwait
add
lcall
pop
pop
push
mov
mov
mov
mov
sahf
fnstcw
arpl
add
mov
xchg
add
rol
data16
ret
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
add
jno
jno
add
out
aad
add
add
add
mov
ficoml
test
call
mov
add
mov
imul
rcl
lret
add
mov
lcall
rorb
mov
push
in
jb
scas
add
add
arpl
mov
add
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
add
add
add
add
add
movb
addl
add
mov
add
add
mov
add
out
xorb
movsl
je
addb
nop
rcr
mov
add
cld
fwait
addb
jp
scas
add
add
add
popa
add
mov
add
add
jb
je
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
lea
push
call
xchg
ljmp
add
add
rcr
jbe
icebp
in
add
test
out
add
add
jno
faddl
je
test
ficoml
ret
add
xchg
cld
in
js
movsb
fnstcw
mov
mov
lea
pop
add
push
push
lea
push
push
call
add
add
add
mov
divb
add
add
scas
add
lret
out
add
popf
add
jno
add
cmc
add
add
xchg
insb
iret
add
test
pop
rcl
add
sahf
add
popa
add
pop
mov
xor
push
push
sub
dec
add
push
or
inc
add
sub
sub
ror
pop
add
rol
pop
push
push
push
push
push
push
push
push
push
call
mov
jp
xchg
add
cmc
roll
jl
add
add
add
pushf
add
fldl
mov
add
pop
add
out
jnp
jbe
mov
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
fldl
add
fs
add
add
mov
mov
addb
test
add
in
js
hlt
icebp
add
add
pop
jb
xchg
pop
mov
add
rclb
ret
add
add
add
push
push
add
out
push
enter
add
mov
lea
pop
call
mov
push
lea
push
push
push
lea
push
push
call
add
stos
sti
test
jno
mov
lds
mov
add
jnp
shrl
push
add
add
add
out
cmp
add
push
add
add
add
add
add
mov
add
testl
std
nop
aam
pop
ljmp
pop
push
add
sbb
inc
loopne
add
add
cmp
stos
lea
push
call
jecxz
add
mov
pop
mov
stos
mov
add
add
xchg
add
flds
test
mov
add
pop
hlt
add
les
mov
add
negb
subb
lea
pop
lea
push
push
push
lea
push
lea
push
push
push
call
mov
imul
add
cli
jns
add
scas
xchg
mov
out
loop
hlt
xchg
aam
add
mov
jb
add
add
xchg
pop
lods
add
add
lock
mov
add
repnz
xorb
cltd
add
addb
leave
cltd
add
mov
add
add
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
scas
lcall
shl
add
filds
add
add
add
add
mov
mov
cld
jno
bound
imul
stos
add
fidivrl
xorb
jns
mov
jo
add
mov
lea
pop
pushl
push
push
push
call
xchg
add
les
add
scas
pop
add
push
add
loope
ljmp
movsb
add
jo
jae
pop
call
pop
add
add
add
stos
push
in
xchg
add
clc
add
add
add
out
enter
push
push
std
arpl
lea
pop
call
push
push
push
push
push
push
lea
push
push
call
add
test
push
push
lahf
out
add
add
add
add
std
add
addb
lods
add
ret
addl
add
lret
faddl
xchg
add
mov
add
add
in
ja
add
lea
pop
pushl
pushl
push
push
push
push
push
call
std
lea
outsl
add
addb
mov
add
mov
xchg
jmp
add
add
add
in
add
mov
out
pop
cmpsl
push
out
mov
andl
pop
add
rcrl
gs
add
bound
push
aam
add
adc
call
push
push
sub
ror
push
xor
add
add
sub
inc
pop
lea
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
popa
mov
pusha
bound
add
add
push
jecxz
sti
add
jae
in
out
lock
add
push
add
loop
test
aam
bound
pop
pushl
push
lea
push
call
data16
add
add
add
add
mov
mov
add
xchg
repnz
cwtl
mov
add
loopne
out
add
push
js
add
cld
mov
add
int3
int
add
add
pop
mov
lea
pop
call
push
push
call
pop
add
testb
stos
ljmp
mull
xchg
add
xchg
add
cld
add
add
jmp
push
push
xchg
movsl
mov
into
pusha
add
cmpl
xchg
add
add
xlat
add
add
mov
add
mov
lea
pop
push
push
push
dec
xor
ror
rol
push
xor
add
shr
sub
shr
shl
pop
pop
push
lea
push
lea
push
lea
push
push
push
call
add
add
nop
ljmp
mov
test
js
add
arpl
popa
jnp
add
add
add
into
add
jnp
loopne
push
add
add
int
je
add
fildl
mov
test
insb
ror
push
mov
xchg
mov
add
cwtl
in
add
pusha
sbb
push
push
push
push
push
lea
push
push
call
add
add
add
out
icebp
mov
mov
sbbl
addl
push
add
add
pop
add
push
jmp
add
jno
rolb
in
in
lock
lds
push
push
jbe
add
in
add
jne
gs
add
ljmp
add
fimuls
pop
push
push
push
call
add
add
lret
add
arpl
in
xchg
popa
add
fs
pop
jecxz
mov
jle
add
add
push
push
mov
add
mov
mov
add
push
add
xchg
shlb
add
add
add
add
adc
jp
mov
add
loop
add
jae
add
mov
cld
lea
pop
call
push
push
call
xorl
in
sahf
stos
add
mov
mov
lcall
jecxz
fstps
hlt
hlt
ficoms
popf
jle
mov
enter
cltd
add
test
push
mov
pop
out
cmpsb
out
add
add
outsl
add
nop
pop
jne
add
in
add
aad
jge
jle
add
std
mov
lcall
or
clc
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
push
mov
sahf
mov
cmpsb
xlat
repnz
hlt
add
xchg
xchg
add
xchg
scas
add
mov
add
cwtl
add
mov
add
add
push
mov
add
push
in
ljmp
lret
add
mov
mov
add
pop
push
push
lea
push
lea
push
push
push
call
xchg
jae
scas
xchg
add
push
add
clc
push
in
out
add
bound
add
fwait
ja
out
add
push
add
push
add
add
add
add
and
add
add
add
filds
js
mov
lea
pop
push
push
push
lea
push
lea
push
lea
push
call
add
jnp
add
add
add
add
jbe
mov
add
add
push
add
scas
subl
icebp
addr16
sarl
fiadds
hlt
jle
mov
shr
mov
lea
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
jb
add
lahf
add
add
add
xchg
add
movb
mov
mov
add
mov
add
mov
lds
data16
add
add
loop
loope
add
bound
push
mov
data16
add
out
add
pop
xchg
add
add
int3
ret
add
bound
add
add
push
push
lea
push
push
push
call
add
data16
ja
jnp
mov
out
popa
add
mov
iret
mov
fiaddl
mov
scas
add
out
mov
popa
div
add
push
add
mov
out
sbbb
add
ja
pop
add
aam
mov
add
rolb
fcmovnbe
imulb
pusha
adc
add
push
lea
push
push
push
push
push
push
lea
push
push
call
insb
imul
mov
into
add
add
stc
movsb
add
mov
addb
test
test
flds
clc
mov
arpl
int
mov
add
push
mov
lret
sti
add
pop
pop
test
icebp
arpl
add
lods
in
add
xchg
xchg
jno
popf
xchg
add
cld
aam
add
add
xchg
add
jmp
sti
mov
mov
hlt
lea
pop
mov
push
push
push
call
movb
add
add
xchg
sahf
add
cmpsb
leave
test
jnp
cltd
out
add
rol
add
add
add
jnp
jnp
jne
lea
add
push
xchg
repnz
mov
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
lret
add
data16
mov
add
jmp
add
fmul
push
add
pop
mov
add
lock
pop
add
roll
stos
add
add
sahf
push
add
add
mov
lea
pop
add
push
lea
push
lea
push
push
call
xchg
shlb
hlt
jecxz
add
aad
mov
add
mov
add
add
arpl
mov
add
add
add
pop
add
push
lea
push
call
js
sti
loope
add
ljmp
add
add
add
add
jle
out
add
lds
add
add
ja
rolb
add
add
add
mov
mov
int
lcall
hlt
jns
ret
fnstsw
add
add
add
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
call
add
add
data16
pop
add
add
jnp
pop
jge
incb
movb
lods
add
push
out
filds
add
gs
add
jae
add
add
pop
add
fwait
push
add
int3
add
add
test
loope
add
xchg
outsl
add
pusha
sbb
inc
or
push
mov
js
in
push
push
push
lea
push
lea
push
call
lcall
lea
jl
add
pop
add
add
data16
lahf
nop
jns
pusha
add
movsl
mov
lods
add
add
mov
mov
add
push
nop
cmpsl
shrl
mov
add
add
les
mov
add
iret
cmpsl
cmpsb
faddl
add
stos
mov
int3
lea
pop
xor
push
push
push
call
push
pop
addl
jmp
add
test
add
add
mov
ret
mov
shl
add
jle
in
hlt
add
add
mov
add
mov
lea
pop
add
push
push
push
push
push
call
add
add
call
add
add
add
push
out
xchg
test
add
cmc
test
fs
add
push
iret
add
jne
fisttps
mull
push
shll
lea
mov
xchg
jp
push
mov
pop
stc
popa
mov
add
in
add
add
jae
negb
jo
jmp
mov
mov
lea
pop
add
pop
push
push
call
push
mov
test
add
shlb
imul
pop
add
iret
jb
add
add
add
push
add
push
add
lret
pop
testl
incb
add
mov
leave
add
addr16
cmc
lahf
xchg
cmc
mov
clc
add
mov
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
call
add
imul
data16
add
add
add
mov
rolb
out
xchg
mov
movsl
mov
vpmullw
add
gs
aad
scas
add
cmpsb
fists
out
fcmovne
jbe
push
add
mov
arpl
pop
push
push
push
push
call
fidivl
add
add
mov
add
ror
lret
push
add
popa
add
add
add
fisubrs
add
mov
loopne
add
push
cltd
add
add
push
jb
mov
jae
mov
add
jle
push
mov
int3
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
stos
cmpsl
add
add
add
in
cmpsl
iret
scas
iret
add
add
xlat
xchg
xchg
into
mov
jl
add
mov
push
jo
add
stos
xchg
mov
lock
add
pop
std
mov
cld
add
add
ja
add
fistps
popa
add
jmp
add
mov
lea
pop
xor
push
push
push
push
push
push
push
call
rolb
add
jmp
push
add
add
mov
mov
xchg
add
mov
mov
in
add
lcall
add
gs
lock
push
add
add
movb
xlat
add
add
xchg
shr
jns
add
jb
push
push
jb
addr16
add
xchg
mov
lea
pop
add
push
push
lea
push
call
mov
movsl
add
add
jp
mov
jb
jge
add
cwtl
push
call
insb
add
jmp
test
icebp
jbe
push
push
lret
add
sarl
out
push
lcall
add
jns
cwtl
add
mov
add
pop
out
leave
mov
mov
add
mov
mov
lea
pop
sub
pop
push
push
lea
push
call
in
repnz
add
add
jbe
xchg
add
add
add
add
add
pop
add
leave
fiadds
nop
xchg
je
add
add
add
add
add
loope
add
movsb
xlat
add
add
add
add
add
mov
xchg
xchg
add
out
mov
lea
pop
rep
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
pop
add
add
push
pop
xchg
imul
add
lods
scas
loop
xchg
loopne
les
icebp
pop
jecxz
mov
push
je
cmpsb
lods
add
push
add
add
jo
out
mov
add
sbbl
call
rolb
add
ffree
aam
add
rolb
add
add
add
add
imul
mov
lea
pop
pop
push
push
lea
push
push
push
push
call
cmpsb
add
pop
xchg
add
pop
add
add
loopne
movsl
stos
test
add
add
movsl
jle
roll
add
xchg
mov
loopne
mov
jne
add
outsl
add
iret
add
add
int
mov
lea
pop
mov
push
push
call
add
add
add
jl
add
rcr
jle
mov
add
add
add
add
push
push
add
in
mov
out
arpl
sub
mov
push
scas
xchg
add
add
push
lea
pop
add
add
push
push
push
push
lea
push
push
lea
push
call
jl
mov
movsl
out
xchg
in
faddl
xchg
pop
out
add
add
sahf
add
je
ret
iret
jns
addl
enter
pushw
push
icebp
add
mov
std
add
add
int3
lds
movl
add
add
add
add
xchg
roll
out
add
xchg
pusha
add
shr
add
sbb
add
mov
push
push
push
push
push
push
push
push
call
bound
in
mov
iret
pop
add
mov
jnp
popf
popf
gs
add
mov
outsl
jae
lret
push
add
mov
xchg
arpl
pop
mov
add
gs
movb
add
add
std
movb
sti
add
add
aad
cld
lea
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
lret
jnp
test
push
les
mov
ja
pop
sbb
shrl
push
mov
shlb
shll
xchg
mov
fcompl
add
xchg
add
mov
and
add
push
lea
push
lea
push
push
call
push
add
add
add
jo
push
data16
out
add
lret
add
add
in
add
fmull
jecxz
std
push
outsl
arpl
add
jb
add
rolb
hlt
add
mov
lret
add
mov
add
iret
add
enter
lcall
addb
sti
icebp
mov
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
cmpsl
xchg
add
ret
xchg
out
subl
push
icebp
mov
loop
push
mov
shlb
lcall
add
mov
fsubrl
stc
lcall
push
pusha
pop
xlat
add
outsl
mov
add
push
je
arpl
test
mov
lea
pop
mov
xor
push
push
push
push
call
add
add
pusha
mov
add
push
add
add
add
add
mov
xchg
add
sahf
jl
rcrl
add
xchg
pop
les
add
add
cmpsb
lahf
push
add
adcl
lahf
add
bound
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
scas
insb
add
add
add
add
add
mov
xor
add
add
jb
add
add
add
lret
fadds
mov
add
push
add
jbe
addr16
mov
hlt
lea
pop
add
push
push
push
push
push
push
push
call
icebp
mov
jbe
add
imul
add
call
add
movsb
enter
push
in
mov
jb
loopne
push
cmpsl
add
shlb
add
pop
add
lods
loope
outsl
mov
add
jmp
arpl
sahf
les
pop
int
add
pop
mov
push
push
push
or
inc
add
add
sub
dec
pop
sub
not
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
sar
pop
add
mov
xchg
fcomi
jne
add
divb
int
cmpsb
fdiv
les
mov
add
lcall
mov
add
push
xchg
add
xchg
test
add
call
add
out
add
add
fiadds
add
lea
pop
pushl
push
push
push
push
call
mov
push
add
jmp
cmpsl
add
mov
scas
add
add
bnd
add
jae
mov
testl
add
stos
add
add
jecxz
xchg
imul
addr16
mov
jle
imul
ja
fadd
into
out
jmp
popf
test
sahf
pushf
sahf
cmpsl
testb
add
add
pop
call
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
stc
mov
add
pop
add
jmp
add
add
lods
xchg
add
in
mov
fisubrs
add
push
out
mov
add
pop
popf
mov
mov
lea
pop
push
push
push
ror
ror
push
and
add
shl
xor
sub
sub
add
pop
inc
pop
push
push
push
lea
push
push
call
movl
pushf
mov
jne
add
add
testb
jmp
xchg
pop
jae
ret
pop
mov
add
mov
mov
scas
add
add
filds
add
add
scas
lea
add
add
add
add
ret
mov
jl
fimuls
pop
push
push
push
push
push
push
push
push
push
call
mov
jp
xchg
xchg
add
add
add
movsl
shl
nop
lahf
add
add
xlat
ret
add
add
cmc
jp
movsl
add
add
push
add
jae
add
add
pop
call
push
lea
push
push
push
push
push
push
push
call
add
push
add
add
jmp
mov
insb
jb
cli
xchg
in
add
bound
add
add
add
add
into
int
lahf
call
and
clc
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
gs
fldl
add
add
outsl
lods
clc
add
mov
mov
out
jp
add
into
out
add
mov
pop
stc
jns
aad
sahf
incb
mov
aad
imul
mov
add
mov
test
add
lret
mov
add
rolb
add
add
pop
insb
pusha
sbbl
sub
mov
push
push
push
push
push
push
call
push
add
mov
lods
arpl
jb
test
add
add
outsl
jl
add
int3
xchg
add
add
add
nop
add
add
add
add
in
mov
popf
add
add
jo
add
xchg
pop
roll
addl
in
push
add
add
sbb
pop
in
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
fimull
add
add
lret
leave
xchg
add
xchg
add
add
mov
mov
add
sahf
fadd
push
push
add
andb
xlat
leave
add
lahf
add
aam
bound
add
push
push
push
lea
push
push
push
push
lea
push
call
scas
jno
add
mov
mov
in
test
add
add
std
add
lea
add
cmpsl
add
add
add
lods
ja
add
shrl
js
add
cmpsl
add
push
cmpsb
add
add
stos
test
add
xlat
add
mov
jno
hlt
lea
pop
add
push
lea
push
push
call
hlt
mov
enter
add
add
jl
ret
repnz
sti
push
popf
lock
and
push
jle
bound
mov
add
add
rolb
rolb
add
les
add
mov
imul
add
scas
add
repnz
rolb
jle
add
pop
mov
push
push
push
call
mov
add
fs
orb
push
add
in
jno
roll
mov
pusha
add
cwtl
mov
mov
add
lcall
movsb
mov
cld
add
ret
jcxz
mov
mov
mov
lea
pop
xor
push
push
push
lea
push
push
call
add
arpl
imul
add
add
std
add
cmpsl
fdivrl
sarb
mov
jl
movsl
mov
lea
pop
add
push
lea
push
push
push
push
push
call
add
add
in
loopne
push
add
add
add
mov
pop
add
add
mov
rcll
add
add
pusha
mov
add
add
fadds
fwait
stos
add
add
mov
out
push
ljmp
lea
pop
add
push
push
sub
add
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
xlat
pop
out
mov
les
push
add
gs
xchg
mov
add
mov
add
mov
ja
adcb
stos
add
add
push
push
lea
rcll
add
stc
add
add
add
add
ljmp
in
add
lods
stc
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
call
add
add
fucom
jb
add
call
add
xchg
in
add
add
aad
pop
enter
xchg
pop
hlt
mov
xchg
mov
add
add
add
pop
add
push
loop
add
call
fs
add
xchg
add
add
mov
jmp
fldl
mov
lea
pop
add
push
shr
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
rolb
mov
shlb
add
enter
add
add
push
arpl
cli
outsl
rcrl
rcrl
add
js
rolb
add
add
loope
add
mov
aam
jp
fstl
repnz
and
dec
and
jb
shr
sub
add
pop
rep
push
push
push
lea
push
push
lea
push
push
call
add
mov
xchg
xchg
nop
mov
jge
test
movl
mov
stos
xchg
cmpsl
add
add
pop
cwtl
mov
add
add
in
add
cmpsb
fsubr
xchg
pusha
filds
cli
sahf
cmpsl
aad
add
add
movb
add
add
stos
fwait
out
add
mov
add
clc
rolb
jnp
in
loope
pusha
mov
lea
pop
mov
xor
push
sub
pop
or
je
push
add
pop
mov
push
push
push
call
lret
jns
xchg
add
popf
mov
scas
jns
lret
add
add
push
xchg
add
icebp
std
ljmp
add
test
test
add
xchg
add
lods
negb
add
add
add
test
pop
add
pop
stc
rolb
cmpsb
add
add
je
add
mov
lea
pop
xor
push
push
push
push
push
push
call
mov
rclb
add
add
sti
cli
addr16
out
imul
mov
xchg
add
shll
add
outsl
add
icebp
cltd
add
lods
loopne
add
add
add
add
add
jge
add
incb
push
add
insb
add
mov
mov
lea
pop
add
push
lea
push
push
call
stos
mov
add
lret
cmpsb
call
add
add
jne
add
sahf
add
les
pusha
mov
pop
add
lods
bound
mov
iret
addl
test
push
fs
enter
push
xchg
mov
mov
hlt
add
fsts
leave
mov
add
xchg
leave
addb
add
loope
add
mov
add
shlb
pusha
or
mov
xor
push
push
push
lea
push
push
push
push
call
add
xlat
xchg
add
lret
int3
add
add
push
add
loopne
jae
icebp
add
add
mov
sarl
mov
add
pop
loope
clc
add
bound
jmp
add
lea
pop
add
push
pop
add
push
rol
pop
push
push
push
push
push
push
push
push
call
add
hlt
push
mov
add
pop
ret
xchg
loope
mov
mov
pop
add
movsb
push
add
jp
lods
add
ljmp
fwait
add
add
call
pop
test
pop
push
bound
pusha
sbb
mov
xor
push
sub
ror
dec
sub
pop
add
push
ror
add
pop
pop
push
push
push
push
call
add
add
add
mov
js
jb
ficomps
fcomi
cwtl
leave
add
push
add
add
add
add
add
mov
jnp
push
mov
add
popa
hlt
fiaddl
imul
cld
add
je
rolb
mov
mov
aad
int
mov
fnstenv
pop
leave
fisubs
hlt
lea
pop
rep
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
into
add
add
pop
mov
scas
popa
add
add
iret
add
jns
push
rolb
add
test
shl
fwait
out
mov
xchg
cmpsb
xchg
add
add
mov
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
shlb
insb
lods
sti
push
add
add
out
lret
jmp
js
fwait
andb
add
add
cld
lahf
jnp
jne
outsl
les
add
lods
adcl
xchg
mov
mov
add
add
mov
add
pop
add
push
shl
sub
not
pop
or
je
push
lea
push
push
push
call
insb
push
mov
sahf
add
lcall
add
xchg
xchg
mov
cmpsl
add
cmpsl
les
scas
push
loopne
add
popf
filds
add
gs
imul
rolb
add
pop
mov
push
lea
push
push
push
push
push
push
push
call
pop
add
ljmp
lret
push
cmpsl
jle
fstl
push
add
add
xchg
jbe
add
add
cmp
add
add
pop
add
push
push
push
push
push
push
push
lea
push
call
add
in
mov
movsl
imul
enter
idiv
xchg
test
add
mov
push
lods
add
add
movsb
pop
pop
add
add
add
out
testl
add
add
add
mov
mov
lret
in
add
jmp
add
arpl
ja
pop
cli
push
add
je
call
and
movb
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
arpl
in
add
xchg
jecxz
out
add
add
mov
fisubs
sahf
vmovq
ljmp
stos
cwtl
jns
pushf
cmc
add
add
add
je
mov
js
push
cwtl
jp
add
scas
pop
add
add
in
xchg
add
mov
lea
pop
rep
pop
push
push
rol
push
xor
add
inc
sub
lea
inc
not
xor
pop
sub
sub
add
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
add
cwtl
add
jb
add
add
mov
add
xchg
xchg
fsubl
std
push
jbe
outsl
mov
add
add
add
fsts
nop
mov
add
add
shlb
jge
add
out
and
push
lock
cli
test
mov
add
add
mov
call
into
roll
mov
lea
pop
pop
push
push
push
call
add
lahf
ja
add
cmc
add
shl
stos
pop
jns
jo
add
lock
lock
jmp
js
add
add
jae
mov
add
les
jne
push
push
call
pop
imul
arpl
stos
add
mov
roll
sarb
add
push
fdivl
nop
add
mov
xchg
add
ljmp
add
push
jge
data16
add
call
add
add
jo
popf
cld
add
xchg
clc
add
pop
mov
mov
push
xor
pop
jmp
push
push
dec
dec
rol
pop
mov
push
push
push
call
lods
mov
push
add
add
fistpl
bound
fisubrl
add
add
mov
push
pop
in
movl
add
xchg
clc
add
stc
mov
shl
add
jnp
mov
fildl
add
add
enter
hlt
lea
pop
add
push
push
push
push
push
push
call
fildl
fdiv
add
les
add
insb
popf
add
add
lds
jae
lods
add
add
add
call
add
xchg
addl
add
cld
loopne
add
add
add
push
mov
add
icebp
add
add
add
ja
add
cltd
in
add
add
scas
lods
jge
add
popa
jmp
adc
push
push
add
add
pop
push
push
push
push
push
push
call
add
add
int
add
enter
mov
add
pop
icebp
jno
fdivs
testl
add
cltd
add
add
mov
add
leave
stos
iret
iret
int
add
mov
testb
jo
jp
lea
fldenv
push
add
jp
out
arpl
data16
pop
push
push
push
push
lea
push
push
lea
push
push
call
out
mov
add
push
bound
mov
jno
jno
fmul
ret
into
lods
mov
add
add
add
add
aad
add
test
mov
insb
add
scas
add
mov
add
mov
add
movsl
add
rcll
jne
add
add
pop
outsl
add
test
mov
hlt
lea
pop
mov
pop
push
inc
add
pop
pop
pop
push
add
ror
pop
pop
push
lea
push
push
push
push
push
push
call
add
add
orb
mov
push
add
add
add
add
jns
jns
add
mov
stos
add
add
mov
incb
push
mov
lea
pop
leave
push
ror
add
shl
pop
ret
push
push
push
call
lret
xchg
add
pop
add
mov
add
mov
jno
xchg
je
add
cmc
cmpsl
add
out
add
jmp
add
add
into
pop
jbe
test
mov
add
xchg
add
add
add
ret
add
add
mov
add
add
add
push
mov
mov
mov
stos
mov
mov
nop
push
shlb
add
shlb
aam
bound
push
push
rol
not
pop
mov
add
push
xor
dec
ror
pop
push
push
push
push
push
push
call
add
pop
je
add
mov
mov
add
mov
stos
mov
mov
cli
pop
xchg
lret
pop
jl
add
xchg
test
mov
xchg
pop
push
add
iret
add
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
loopne
add
idivb
add
add
lret
loope
test
scas
mov
add
mov
mov
hlt
add
imul
adc
add
add
test
jo
xchg
les
push
push
not
add
pop
movl
push
sub
pop
addl
test
je
push
sub
ror
shl
pop
mov
pop
push
lea
push
push
push
push
push
push
push
push
call
rclb
mov
pop
jmp
add
repnz
not
adcb
into
jl
jl
add
cli
pop
cltd
pop
lcall
into
xchg
imul
nop
mov
add
test
add
out
add
lea
pop
pop
push
lea
sub
rol
pop
pop
push
add
ror
pop
pop
push
add
pop
leave
ret
push
sub
ror
ror
add
pop
push
push
push
push
lea
push
push
push
push
push
push
call
idivl
imulb
mov
add
stos
add
stc
pop
xlat
add
stos
filds
jo
lahf
fldl
hlt
cmpsl
mov
jne
add
lock
cmp
cmpsb
add
fcomps
fstl
add
movb
je
push
xchg
add
mov
lea
pop
mov
push
pop
add
push
xor
rol
inc
pop
push
push
shr
pop
push
push
dec
rol
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
cld
clc
add
mov
jb
lock
add
cmc
pusha
mov
mov
scas
add
add
into
roll
add
cmc
lods
push
roll
addb
jnp
iret
lea
mov
add
mov
add
mov
add
jl
icebp
add
mov
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
fnstenv
bound
jns
push
stos
imul
popf
fildl
test
add
flds
aam
imul
add
add
push
add
fidivrl
push
je
add
lahf
mov
addr16
mov
lea
pop
testl
push
pop
addl
push
push
rol
ror
xor
pop
call
push
push
lea
push
push
call
loope
add
mov
movsl
add
ret
add
add
mov
add
bound
add
lea
push
add
fdiv
out
ret
add
mov
lea
pop
mov
pushl
push
shr
sub
pop
push
push
lea
inc
pop
push
push
push
lea
push
call
add
imul
add
add
jb
add
mov
lret
fcomip
add
shlb
out
mov
xchg
add
jge
gs
add
rorl
call
movsl
mov
lea
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
jl
pop
push
incb
mov
add
aam
pop
add
xchg
mov
cwtl
add
add
lea
imul
pop
mov
imul
add
cld
mov
add
mov
jmp
mov
add
sub
add
in
lahf
in
mov
add
add
add
and
jge
add
test
call
cli
pop
pop
push
push
call
popa
cwtl
add
mov
xchg
add
imul
push
cmpsl
fmull
je
rolb
aad
aam
add
add
jnp
push
add
mov
test
add
add
add
lds
add
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
call
xor
mov
add
enter
les
add
mov
add
mov
mov
add
add
add
mov
aad
rcr
xchg
aad
xchg
insb
add
add
mov
lea
pop
pop
pop
push
push
push
call
pop
add
divl
jns
mov
add
mov
jmp
add
call
fcmovb
add
add
pop
add
add
nop
mov
lea
pop
leave
push
add
rol
add
pop
ret
push
rol
not
shr
pop
push
mov
push
ror
sub
lea
add
pop
add
push
shr
ror
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jle
call
add
add
pop
lods
fsubs
add
mov
xchg
add
std
out
add
rorb
add
add
popa
add
ret
push
add
jno
add
mov
add
add
mov
int3
clc
mov
lea
pop
push
push
dec
pop
push
push
sub
not
not
pop
movl
push
push
push
call
xchg
cmc
test
xchg
flds
add
pop
scas
mov
call
mov
rcrb
push
add
imul
movsl
orb
push
push
add
ror
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
fs
add
movsl
jle
cmpsl
add
push
lds
roll
pusha
add
ret
add
add
add
fwait
pop
add
je
add
out
add
in
add
enter
loopne
pop
add
aam
bound
push
push
rol
add
pop
call
subl
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
cmpsl
add
add
add
testl
mov
imul
add
addl
pop
add
test
xorb
mov
imul
mov
lret
jmp
add
xlat
out
add
add
flds
imul
rolw
add
mov
lea
pop
cmpl
jne
push
rol
dec
rol
rol
pop
pop
push
shr
rol
ror
pop
pop
push
push
push
call
add
pop
roll
xchg
add
add
push
add
push
add
cmpsl
cli
repnz
sarb
add
xlat
stos
add
add
fs
add
jns
mov
pop
pop
add
xchg
add
data16
add
add
add
in
xchg
add
cli
add
pop
pop
pop
push
inc
add
pop
leave
ret
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
mov
les
add
add
jne
aad
add
stos
pushf
push
insb
mov
lods
add
add
lcall
lods
fiadds
lahf
inc
enter
xchg
add
add
clc
add
xchg
add
push
add
add
int
jbe
shl
add
jne
xchg
mov
add
pop
push
mov
push
push
push
push
push
call
mov
rolb
cli
mov
add
fcoml
arpl
mov
add
push
jmp
outsl
cli
enter
movsb
add
in
fbstp
mov
jne
add
ja
out
add
shll
push
add
mov
lea
pop
add
push
lea
push
push
push
push
call
push
ret
jl
scas
andb
add
add
rol
insb
stos
ja
sahf
mov
iret
mov
clc
lret
fiaddl
fildl
leave
rolb
lock
mov
lods
add
mov
add
lock
mov
movsl
fwait
test
xchg
add
pop
push
push
push
push
lea
push
push
push
push
call
mov
call
fcompl
popl
add
stos
stos
xchg
add
add
push
mov
movsl
add
add
add
add
jns
out
add
mov
add
movsb
mov
hlt
fcmovnb
mov
add
add
stos
iret
mov
popa
add
push
xchg
cltd
mov
lea
pop
push
push
dec
xor
pop
push
mov
push
push
call
loopne
nop
add
add
jbe
add
je
jae
add
je
subl
add
add
jns
into
push
add
xlat
mov
add
jp
add
mov
movsb
add
testl
or
inc
cmp
push
push
push
push
call
add
arpl
out
add
fucomip
add
mov
lret
pushw
add
xchg
out
ljmp
add
pop
or
push
jge
iret
cmc
add
add
add
add
std
xchg
lret
push
jno
add
out
aad
add
pop
cmc
clc
mov
lea
pop
sub
push
inc
sub
pop
mov
push
pop
shr
push
xor
ror
ror
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
cltd
data16
mov
add
fldl
add
add
add
add
lods
rolb
jnp
movsl
mov
add
movsl
in
add
in
add
jnp
add
ljmp
add
pop
mov
push
push
lea
push
push
call
arpl
mov
aam
pop
jecxz
add
lcall
gs
leave
fwait
add
ja
lahf
fildl
clc
outsl
gs
add
add
outsl
add
add
ret
add
popa
mov
adc
andb
leave
pop
add
add
push
push
push
push
push
call
clc
mov
int3
add
jmp
add
stos
add
mov
add
cmpsl
call
push
push
mov
mov
imul
add
add
out
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
call
fldl
repnz
jmp
xchg
jle
fadds
add
lret
add
add
add
enter
mov
pop
pop
add
add
mov
imul
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
call
rcrb
jmp
pop
lods
in
hlt
add
iret
mov
add
jo
stos
fsubrp
add
mov
sar
stc
add
add
lds
arpl
add
hlt
add
xchg
add
pop
outsl
negl
lahf
fists
cld
lea
pop
cmp
jne
push
sub
pop
cmp
jne
mov
push
sub
pop
movl
push
push
push
push
push
push
push
push
call
add
add
xchg
mov
add
jmp
add
xchg
mov
push
add
test
add
popa
mov
sti
lock
add
xchg
mov
andb
rorb
aam
mov
add
mov
add
int
mov
add
mov
lea
pop
jmp
push
lea
inc
pop
mov
push
lea
rol
pop
mov
push
dec
xor
add
pop
sub
jne
mov
push
not
add
pop
movl
push
push
lea
push
push
push
push
call
add
stc
jmp
jecxz
jmpw
add
add
jmp
aam
mov
movsb
xlat
jns
mov
js
int3
popf
xchg
movsl
fwait
in
ret
mov
jge
xchg
mov
mov
add
add
add
clc
jnp
xchg
fcom
add
jp
lahf
fldcw
mov
fwait
add
fmull
sldt
push
add
pop
mov
push
push
push
push
lea
push
push
call
add
clc
fndisi(8087
nop
loopne
test
add
test
repnz
mov
mov
cmc
pop
in
add
in
add
clc
add
add
out
aad
stos
add
add
add
add
popa
shll
add
cmpsl
ljmp
out
filds
push
fnstcw
xchg
mov
ljmp
xorl
push
pushf
add
mov
push
les
nop
mov
add
cmp
jne
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
mov
mov
add
add
fstl
add
add
test
add
mov
nop
xlat
xchg
scas
mov
mov
mov
add
mov
sub
inc
adc
movl
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jmp
add
jb
add
lret
addl
add
mov
xchg
je
movl
add
xorb
xchg
mov
test
mov
sub
test
add
push
sub
pop
mov
push
pop
cmpw
jne
push
push
push
lea
push
push
push
call
add
add
cwtl
add
add
in
mov
lods
add
add
aam
add
add
mov
loop
lret
orl
add
jp
subl
add
test
test
add
pop
add
into
fiaddl
mov
mov
ja
les
cmpsl
imul
mov
lea
pop
mov
movl
push
push
push
push
push
push
push
push
call
pusha
int3
addl
add
add
std
test
jp
mov
add
loope
add
popa
add
ljmp
mov
add
rolb
add
mov
lea
pop
jmp
push
shr
dec
shr
lea
pop
pushl
push
dec
sub
add
pop
pop
mov
push
push
lea
push
push
call
cld
add
add
add
add
pop
aam
add
rolb
mov
cwtl
mov
add
jae
xchg
add
mov
cmpsl
mov
ror
mov
imul
pop
call
out
fwait
add
add
pop
push
fdivrp
cltd
add
clc
add
cld
lea
pop
mov
push
not
pop
mov
push
push
xor
ror
push
and
add
shl
add
shr
sub
inc
sub
pop
shr
lea
shl
pop
push
push
push
push
push
call
lea
ja
cld
ja
lods
xchg
pop
lods
icebp
into
nop
lcall
arpl
fiaddl
add
push
add
mov
fwait
add
add
add
mov
lea
pop
push
call
push
pop
cmpl
je
push
push
inc
push
push
pop
add
add
shr
sub
ror
sub
ror
pop
xor
pop
push
push
push
push
lea
push
push
push
call
add
hlt
add
xchg
add
pop
pop
xorl
lcall
test
cmpsl
add
imul
movsb
sarl
add
jb
push
mov
add
xchg
add
sarb
shlb
lea
pop
push
call
push
sub
inc
pop
cmpl
je
push
push
inc
lea
push
and
add
inc
sub
lea
shl
rol
shr
pop
inc
lea
pop
push
ror
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
gs
jns
pop
add
mov
mov
mov
pop
add
loop
test
in
add
lcall
pop
mov
add
xchg
add
xchg
lods
xchg
add
add
loope
add
nop
add
mov
add
nop
mov
mov
into
add
pop
add
add
xchg
pop
mov
sbb
call
push
ror
pop
cmpl
je
push
push
sub
push
xor
add
sub
pop
add
add
dec
pop
push
xor
pop
push
push
push
push
push
call
flds
mov
add
add
add
les
rcrb
add
add
call
jl
push
xchg
iret
add
stos
testl
imul
lahf
mov
mov
mov
lea
pop
call
push
push
push
call
mov
lods
cmpsl
in
addb
jae
int
faddl
out
bound
into
movl
in
push
add
mov
push
add
add
mov
jne
xchg
int3
lods
add
stc
add
jae
add
add
add
mov
rorb
xchg
out
shrb
shlb
mov
mov
lea
pop
cmpl
je
push
push
sub
xor
xor
shr
push
or
not
add
rol
sub
sub
not
sub
pop
pop
push
xor
shr
xor
pop
push
call
push
pop
cmpl
je
push
push
xor
rol
push
xor
add
shl
sub
lea
ror
dec
pop
inc
pop
push
pop
push
call
push
lea
push
push
push
call
add
add
add
add
in
pop
add
add
out
mov
aad
mov
cwtl
add
jge
xchg
cli
cli
lea
add
add
add
pop
cmpl
je
push
push
sub
rol
push
or
not
add
inc
sub
add
ror
pop
xor
inc
not
lea
pop
push
push
call
add
push
add
xchg
mov
add
xchg
gs
add
jne
add
cwtl
xchg
mov
add
mov
add
cwtl
add
mov
jno
movsl
lods
mov
add
lea
pop
push
call
push
push
push
push
push
push
call
sahf
mov
add
add
add
push
test
jns
mov
add
mov
jecxz
popf
jbe
lock
rclb
add
push
add
add
add
add
add
mov
add
add
xchg
xchg
add
in
xchg
out
add
mov
lea
pop
cmpl
je
push
push
dec
push
and
add
dec
sub
inc
shr
pop
rol
pop
push
push
call
rolb
ja
testl
int
add
add
jns
les
add
xlat
add
int3
add
out
mov
push
movb
add
std
arpl
jl
loopne
cwtl
scas
hlt
cwtl
push
add
add
jbe
lcall
popf
add
fwait
add
jp
add
add
addl
pop
add
cli
add
jle
int3
lea
pop
push
push
push
push
push
lea
push
call
int
addl
add
lods
jne
add
add
lahf
add
xchg
add
add
jp
lcall
icebp
add
std
mov
gs
lret
jge
add
add
call
mov
lahf
add
mov
hlt
js
add
add
add
xlat
in
mov
mov
adc
call
push
push
push
push
push
lea
push
lea
push
call
add
jp
add
repnz
fcmovnbe
add
enter
add
add
mov
roll
lret
add
imul
add
aam
push
mov
mov
pushf
cmpsb
add
popa
loope
ret
add
add
sarb
add
jle
mov
push
mov
cmpsb
add
in
jl
divl
mov
cmpsl
add
add
mov
lea
pop
cmpl
je
push
push
shl
dec
push
push
pop
add
lea
shl
dec
sub
xor
shr
pop
add
sub
pop
push
shl
pop
push
push
push
call
push
jge
mov
add
add
jmp
pop
add
add
stos
xlat
add
add
add
addl
add
add
cli
add
mov
add
roll
add
testl
push
flds
stos
add
fwait
aad
mov
lret
xchg
add
mov
lea
pop
call
cmpl
je
push
push
dec
push
and
add
lea
dec
sub
not
pop
rol
xor
pop
push
push
lea
push
call
fabs
add
loop
mov
add
mov
add
fs
add
add
sub
pop
mov
add
mov
mov
xchg
roll
mov
lea
pop
push
push
push
push
push
push
push
push
call
data16
xchg
pushf
fiaddl
jmp
add
cmpsb
lret
add
add
popa
test
add
jnp
add
add
cmc
add
add
imul
add
int3
mov
fcomps
add
xchg
add
add
int3
xchg
add
add
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
add
imul
mov
jl
push
out
xchg
push
gs
leave
out
add
add
add
mov
add
cli
cmpsl
add
pop
add
pop
test
test
mov
add
stc
add
add
add
enter
loope
add
and
cmp
test
add
add
divl
mov
ror
sub
push
sub
add
sub
rol
sub
shr
sub
dec
pop
xor
pop
push
sub
sub
rol
pop
push
push
inc
ror
sub
pop
call
push
push
call
lea
add
add
mov
popf
mov
addb
sahf
mov
add
mov
mov
sahf
imul
mov
add
jp
add
add
mov
out
stos
mov
pop
cmpl
je
push
push
shl
push
and
add
xor
sub
not
sub
add
pop
add
pop
push
push
push
push
push
push
call
add
rolb
lds
add
js
add
add
cmpsl
add
ljmp
add
xchg
jmp
mov
add
add
add
mov
add
mov
add
xchg
popf
ret
hlt
lea
pop
push
push
push
lea
push
call
fwait
add
cld
filds
add
jp
out
out
lret
mov
add
add
add
add
add
enter
ja
ljmp
fdivrp
add
stc
addb
imul
mov
add
or
call
cmpl
je
push
push
sub
add
rol
push
or
not
add
sub
ror
pop
sub
pop
push
lea
push
lea
push
push
lea
push
call
push
add
popa
add
repnz
push
frstor
stc
jne
mov
add
add
stos
mov
ret
cmpsb
push
mov
add
pushf
jecxz
icebp
add
mov
fldcw
add
lcall
pop
pusha
add
icebp
jmp
mov
lea
pop
push
push
shl
shl
dec
shr
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
call
xchg
add
add
add
add
rclb
xorl
push
mov
test
add
push
enter
add
add
push
xchg
add
add
mov
mov
scas
out
add
mov
xchg
xchg
movsl
mov
cld
lea
pop
cmpl
jne
push
inc
shr
not
pop
mov
push
push
push
call
imul
xlat
add
add
add
cmpsl
pop
fucomip
lret
add
mov
mov
lds
mov
fnstenv
out
jnp
add
les
lock
add
test
popa
push
call
or
movl
jmp
push
dec
pop
xor
pop
push
push
push
push
push
lea
push
lea
push
push
call
test
jo
loope
push
add
xchg
addr16
add
out
loope
add
mov
xchg
add
gs
add
add
nop
jbe
hlt
add
hlt
add
pushf
fldl
add
mov
add
icebp
add
imul
add
mov
add
mov
add
add
mov
lea
pop
pop
push
lea
push
push
call
add
add
lret
add
add
add
add
lods
addr16
pop
mov
test
shll
add
add
jae
gs
cmc
test
aam
std
scas
add
lret
add
into
testb
bnd
add
bound
pop
push
sub
dec
add
pop
pop
leave
push
lea
push
push
lea
push
push
push
lea
push
call
pop
jbe
xchg
out
ret
loopne
jne
fsts
in
popa
out
stc
mov
div
rcr
clc
push
xorl
mov
xchg
stos
push
aad
cli
fwait
pop
mov
cld
lea
pop
ret
push
lea
push
push
lea
push
push
push
push
push
call
add
fildl
rolb
jle
jnp
push
add
xchg
scas
roll
test
xchg
add
mov
add
movsb
push
mov
add
add
add
add
pop
jns
add
add
lea
pop
push
push
add
rol
pop
mov
add
push
add
rol
pop
cmpl
jne
push
push
ror
push
push
pop
add
shr
add
sub
xor
ror
pop
shl
add
pop
push
sub
add
pop
pushl
push
xor
inc
pop
call
push
sub
add
pop
push
push
push
lea
push
call
in
push
xchg
ja
add
xlat
addl
mov
mov
mov
pop
loope
add
add
out
scas
add
add
outsl
loope
scas
std
add
pop
call
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
in
add
add
cli
add
mov
hlt
rcl
add
arpl
icebp
test
xchg
int3
mov
fldl
pop
push
data16
in
cli
cmpsl
lds
je
lods
lock
add
roll
mov
add
jecxz
iret
leave
ja
mov
add
add
pop
jmp
push
push
push
push
push
push
call
pusha
xchg
out
add
jl
loop
add
incb
pop
add
add
fists
add
add
pop
ret
add
add
add
ja
add
mov
add
stc
add
add
add
mov
movl
cltd
imul
fldt
aam
test
cmpl
sbb
jge
add
test
add
add
test
add
add
loopne
not
inc
pop
leave
add
push
push
push
push
push
push
push
push
push
push
call
cwtl
faddl
pop
add
fs
xchg
push
les
add
add
lcall
add
add
mov
in
lods
out
fwait
iret
iret
pop
cmpsl
out
add
jo
add
shr
push
cmpb
push
fisttps
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
addb
add
clc
add
add
nop
add
add
add
add
add
xlat
add
mov
add
fidivs
mov
loopne
rcll
arpl
add
add
add
stc
test
add
add
add
lea
pop
pop
push
push
call
add
xchg
mov
pop
scas
cmc
mov
fwait
cmc
add
cmpsl
add
xlat
mov
mov
sbbl
test
mov
add
ja
fidivrs
outsl
add
sti
jb
imul
cmpsb
add
int3
mov
lea
pop
pop
push
push
lea
push
push
call
add
cld
add
rol
add
divb
nop
jbe
loopne
mov
add
mov
jp
mov
ljmp
out
pusha
cwtl
jb
jl
movsl
add
add
jb
cltd
movsb
test
lahf
mov
add
xchg
add
push
add
arpl
pop
leave
push
dec
dec
pop
add
push
push
call
add
add
add
xchg
sti
add
pusha
add
mov
add
iret
push
lds
ljmp
mov
movsb
mov
mov
fwait
loopne
add
add
jnp
lods
add
mov
add
mov
push
fsub
mov
addb
mov
jecxz
mov
popa
or
push
push
lea
push
push
lea
push
push
push
call
add
aam
push
add
lcall
gs
add
incb
add
add
add
mov
movsb
add
add
pusha
fsts
mov
pop
add
jo
add
cltd
fwait
roll
in
mov
lea
pop
jmp
cmpl
jne
push
push
sub
dec
sub
push
push
pop
add
add
sub
xor
ror
sub
add
pop
xor
shl
rol
pop
push
push
call
in
add
push
data16
push
iret
pop
mov
add
fwait
pop
add
mov
add
stos
add
pop
mov
add
pop
mov
mov
add
pop
add
mov
loope
pop
mov
outsl
add
add
lods
pop
push
pop
mov
jnp
add
in
aam
bound
pop
pushl
push
push
push
push
push
push
push
call
add
iret
pop
push
mov
add
loope
xchg
add
test
add
ret
add
fstpl
lahf
mov
add
int
add
add
add
add
out
leave
add
add
pop
add
jo
add
add
mov
lea
pop
call
push
rol
shl
add
add
pop
push
push
sub
not
xor
pop
call
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
ljmp
xchg
mov
pop
jae
aad
push
add
add
add
lcall
fcoml
xchg
xlat
add
add
fisttpl
flds
pop
test
mov
add
ja
lcall
add
add
push
add
pop
jmp
push
push
push
lea
push
push
push
push
call
in
sti
fidivrs
pop
int
add
add
pop
mov
cld
roll
lods
add
jno
addr16
jno
add
jb
jnp
add
out
add
scas
jle
fisubrs
fabs
xlat
add
mov
add
test
jecxz
add
add
xchg
push
add
mov
lea
pop
cmpl
jne
mov
push
push
call
add
mov
jno
add
add
fidivs
add
lods
mov
rolb
aad
stc
in
js
movl
add
movsb
aam
mov
fnstsw
pop
test
nop
testl
stc
add
negb
stos
xchg
add
add
mov
lea
pop
mov
push
push
lea
push
push
push
call
add
pusha
add
add
xchg
add
push
mov
clc
mov
add
test
ljmp
fisubl
add
add
outsl
add
in
cmp
add
xchg
movb
rcl
add
add
add
add
leave
imul
popa
cmp
adcl
pop
push
push
push
sub
lea
sub
dec
push
sub
add
sub
shl
add
dec
sub
sub
pop
pop
push
push
lea
push
call
cmc
lahf
add
add
mov
add
add
shr
jno
stos
jne
subb
xchg
jge
add
add
mov
add
insb
push
add
jo
xchg
add
loope
push
rolb
add
push
add
add
xchg
mov
les
xchg
add
or
pushl
push
shr
sub
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
insb
mov
add
mov
leave
test
add
scas
imul
add
add
mov
jnp
out
sub
faddl
mov
add
mov
lods
mov
mov
scas
rolb
pop
push
add
mov
lea
pop
call
push
push
ror
add
push
or
not
add
shr
rol
shl
sub
sub
add
pop
sub
pop
push
lea
push
push
call
add
pop
add
jne
cld
rol
add
add
sbb
add
add
xchg
mov
add
popa
mov
cmpsl
add
mov
cli
imul
test
xchg
fwait
add
icebp
lcall
addr16
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
call
pusha
movsb
add
mov
add
loopne
mov
add
add
pop
add
add
mov
scas
push
in
add
add
add
int3
out
add
add
jmp
js
xchg
rorl
pop
call
call
push
push
rol
sub
inc
push
push
pop
add
add
sub
sub
xor
pop
dec
pop
push
push
push
push
push
push
push
push
push
call
cli
jmp
mov
jo
push
add
leave
xchg
jne
push
add
in
pop
add
outsl
rolb
xlat
cmpsb
outsl
add
cwtl
add
testb
mov
cmc
add
mov
insb
pop
add
xchg
add
testb
add
add
aam
les
add
call
add
add
pushf
push
add
fimull
pop
pushl
push
push
call
pop
cmpl
mov
cld
xorl
fucomi
add
add
add
lret
add
add
add
add
mov
add
rorb
pop
data16
pop
sbbl
les
add
add
mov
lea
pop
call
push
push
call
add
cwtl
jns
add
push
mov
shlb
addb
mov
add
sti
add
add
in
pop
jge
mov
add
mov
mov
test
fildl
mov
add
mov
lea
pop
call
lea
push
push
lea
push
sub
add
lea
not
sub
xor
dec
sub
pop
shr
pop
push
add
shr
rol
pop
pushl
push
push
call
add
hlt
sahf
shrb
add
mov
push
popl
add
add
aam
cmpsb
fiadds
les
push
lea
aam
add
jb
add
add
add
xchg
add
jb
sti
add
add
pop
sahf
xchg
add
lds
int
pusha
jp
aad
add
add
add
in
cmc
mov
add
xchg
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
call
sbb
subb
add
add
lcall
cltd
in
cmpsl
add
stos
cmc
ljmp
add
add
roll
fwait
popa
add
jmp
mov
push
jb
enter
xlat
xchg
push
lea
fcmovbe
mov
mov
mov
repnz
add
mov
lret
mov
mov
lea
pop
push
call
push
push
rol
not
lea
push
and
add
sub
sub
xor
shr
sub
pop
sub
add
pop
push
shr
pop
pushl
push
push
push
push
lea
push
lea
push
call
push
test
add
add
lea
ret
add
mov
cltd
add
mov
add
call
add
in
push
mov
xchg
jae
lret
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
lret
add
out
add
mov
add
addb
mov
cmpsb
add
mov
jnp
test
xorb
push
add
or
add
push
push
movsb
add
mov
xchg
add
mov
lea
pop
call
mov
push
push
lea
add
push
sub
add
ror
sub
shl
pop
lea
pop
push
push
push
push
call
xchg
add
add
add
fcmovne
roll
xchg
xchg
ret
pusha
lods
mov
testb
cltd
push
add
xchg
pushf
jp
cmpsb
sahf
add
popa
add
add
add
ret
cmpsb
add
mov
add
push
iret
xchg
fidivl
mov
popf
std
enter
add
xchg
add
add
add
loope
test
test
mov
lea
pop
pushl
push
lea
push
push
push
push
push
lea
push
call
xlat
add
iret
add
add
lock
fmul
mov
mov
in
jno
jl
std
jno
add
add
add
insb
lcall
xchg
add
in
rolb
std
add
add
jp
mov
lea
pop
call
push
push
push
push
lea
push
call
bound
push
add
pop
mov
xchg
cli
pop
lret
pop
lahf
cwtl
cmpsl
add
add
cmpsl
insb
pushf
ja
arpl
enter
aad
shr
out
xchg
push
test
add
pop
push
push
push
push
lea
push
push
call
testl
test
arpl
add
add
mov
test
mov
mov
add
mov
iret
cld
pop
lds
xlat
fwait
xchg
add
out
add
lcall
add
cmpsb
outsl
test
add
push
scas
add
neg
ljmp
test
jno
add
in
mov
int3
lea
pop
call
push
push
add
ror
ror
push
xor
add
inc
rol
xor
sub
rol
lea
shl
pop
sub
pop
push
lea
push
push
push
push
push
push
push
push
push
call
test
mov
into
mov
jae
add
add
sahf
test
out
roll
scas
nop
jnp
mov
add
xchg
xchg
jae
jp
in
lret
mov
mov
jne
out
pusha
add
fcmovne
add
add
add
add
sub
jne
push
dec
pop
call
push
push
push
call
push
idiv
add
pop
call
mov
cli
in
mov
notb
cli
sti
mov
add
pop
ficomps
pop
test
popa
add
add
add
mov
jno
loope
in
jmp
lret
add
add
mov
lea
pop
push
push
shl
add
pop
pushl
push
push
call
add
divb
push
aad
add
pop
jmp
add
lds
scas
add
add
add
in
fadds
cli
icebp
aam
add
push
lret
add
mov
mov
push
fsts
int3
lea
pop
call
push
push
add
sub
push
sub
add
shr
shr
shr
shl
sub
sub
add
dec
sub
pop
add
shr
pop
push
sub
pop
pushl
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
stos
pop
add
hlt
lahf
add
add
call
add
xchg
add
mov
jecxz
mov
outsl
pusha
add
add
popf
faddl
add
add
addl
mov
lret
lahf
int
aad
add
pop
fildll
add
ja
cld
lea
pop
call
push
push
sub
push
sub
add
ror
lea
sub
shl
dec
pop
shr
xor
shl
pop
push
push
sub
push
push
pop
add
xor
sub
inc
sub
not
rol
pop
ror
pop
push
lea
sub
shl
pop
call
push
inc
pop
pop
dec
jne
push
push
push
push
push
push
push
push
lea
push
call
mov
add
sarl
add
xchg
add
out
jns
in
filds
iret
std
pop
cwtl
call
int
scas
sbb
mov
scas
add
add
add
js
add
js
add
jmp
add
add
mov
add
call
pop
out
roll
mov
cltd
add
rorb
pop
test
add
add
add
pop
call
push
xor
dec
sub
inc
pop
jmp
call
push
push
add
ror
rol
ror
push
xor
add
not
rol
shr
inc
sub
dec
pop
add
xor
xor
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
push
fiaddl
popf
fmull
add
popa
add
shll
jne
add
in
jne
cld
pushf
jo
jl
mov
lods
mov
xchg
jle
lahf
stos
addb
add
add
add
add
add
outsl
add
pop
pushl
push
push
lea
push
push
push
push
call
pop
lods
pop
int3
mov
add
subl
pop
mov
push
icebp
xchg
rcrl
add
add
test
mov
add
add
call
ja
out
add
fmull
and
push
push
push
push
lea
push
call
add
cmpsb
pop
test
int3
jo
add
add
add
add
jle
push
arpl
pop
add
in
into
add
repnz
lods
mov
add
mov
lock
jecxz
addl
xlat
add
imul
add
add
add
leave
push
rclb
sti
add
movsl
jbe
stos
neg
je
imul
add
pop
push
push
push
push
push
push
push
lea
push
call
add
push
add
test
scas
stos
loope
jecxz
push
out
add
pop
mov
sti
testb
add
stc
add
bound
mov
push
lods
addb
jnp
add
add
imul
jns
in
popl
fiaddl
add
add
cmpsl
add
rclb
add
mov
add
les
sarb
push
lea
push
push
lea
push
lea
push
push
call
add
popl
add
rcll
fucomip
jns
pop
pusha
jnp
add
mov
push
add
push
add
sti
rorl
add
add
add
sbb
pushf
and
ljmp
lock
push
sub
shr
push
push
pop
add
lea
dec
add
sub
sub
rol
add
pop
shl
add
inc
pop
push
ror
not
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
push
call
jge
mov
jle
add
add
add
jp
jecxz
xchg
leave
out
test
add
mov
mov
add
imul
add
je
add
shrl
sti
xchg
add
and
int3
lea
pop
push
push
sub
pop
call
push
push
not
lea
push
and
add
shr
inc
ror
sub
rol
shr
rol
pop
lea
pop
push
add
xor
add
pop
pushl
push
lea
push
lea
push
push
push
push
push
lea
push
call
repnz
in
mov
cld
loop
add
lret
add
addb
testl
js
jae
add
add
jle
mov
flds
pop
cli
fs
mov
jns
addr16
stos
sahf
int3
insb
in
cld
add
jmp
add
add
fiadds
out
mov
jne
out
insb
mov
fiaddl
add
aad
add
and
or
rclb
pusha
push
push
lea
push
push
push
lea
push
call
mov
add
push
call
rcrl
add
icebp
add
add
pop
mov
mov
add
push
mov
pop
ljmp
jno
rcrl
mov
ja
pop
add
cmpsb
add
pushf
movsb
sahf
scas
mov
loopne
imul
rolb
out
push
lods
mov
lea
pop
mov
lea
push
push
rol
sub
lea
sub
push
sub
add
add
add
sub
inc
rol
pop
add
lea
sub
pop
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
out
add
call
add
leave
add
add
xchg
imul
imul
roll
add
xchg
add
mov
add
push
add
add
test
out
push
clc
test
mov
testb
loop
mov
lea
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
push
call
imul
add
out
add
add
jmp
mov
fsubp
xchg
add
xchg
mov
js
xchg
imul
add
lock
mov
add
add
mov
add
mov
add
test
mov
add
add
fucomp
mov
testb
sahf
add
pop
lea
push
shl
pop
push
push
push
push
push
call
movsl
shll
scas
add
jb
xchg
test
roll
add
out
fwait
xchg
les
push
push
xchg
cmc
mov
add
xchg
in
testb
mov
xchg
add
add
add
add
jl
test
outsl
outsl
add
jo
movb
add
pusha
add
loopne
popa
jb
arpl
add
pop
mov
lea
pop
push
pushl
push
push
add
inc
push
or
inc
add
shr
rol
not
sub
not
shr
sub
shl
pop
add
pop
push
lea
push
push
push
call
mov
add
push
lret
push
lcall
cmc
mov
add
jle
rorb
test
iret
add
add
ror
pop
push
jne
int
rolb
add
add
add
push
add
add
out
lods
shr
popf
add
jnp
gs
add
add
mov
jbe
inc
mov
data16
push
not
pop
call
push
push
sub
push
or
not
add
rol
sub
add
pop
xor
lea
rol
pop
push
push
call
add
popa
lret
pusha
add
rcrb
call
in
mov
add
add
add
loop
add
fs
out
add
mov
addb
add
ficompl
add
add
lods
fdiv
xchg
cwtl
data16
add
add
xchg
add
add
add
cli
cli
add
add
add
mov
lea
pop
pushl
push
shr
rol
shr
pop
call
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
cmpsb
fldl
jmp
add
add
add
gs
stc
mov
add
cwtl
ja
mov
mov
add
add
xchg
add
int3
add
push
fiadds
mov
lock
add
mov
lea
pop
call
push
push
lea
push
push
pop
add
not
add
sub
sub
pop
add
rol
pop
push
inc
shr
pop
pushl
push
shr
not
lea
pop
call
push
sub
ror
pop
call
jmp
push
shr
pop
pushl
mov
push
dec
shl
inc
pop
jmp
push
push
not
add
sub
ror
push
or
not
add
sub
sub
sub
rol
pop
pop
push
xor
shl
sub
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
call
mov
add
leave
add
push
iret
jnp
sahf
cwtl
xchg
into
push
les
aad
add
in
add
add
popa
xchg
ficomps
add
add
mov
add
add
gs
popl
add
mov
lds
pop
add
push
fwait
icebp
pop
mov
add
hlt
lea
pop
call
push
lea
push
push
call
out
mov
mov
pusha
jl
jbe
push
xchg
mov
pop
add
add
add
sahf
popa
mov
pop
add
aam
push
mov
add
hlt
add
pop
lds
add
in
add
add
xchg
add
add
add
pop
add
sahf
les
in
fsubl
lea
pop
push
push
shr
pop
call
push
push
shr
push
sub
add
add
shr
sub
sub
lea
pop
not
add
shl
pop
push
push
push
push
lea
push
push
call
add
rcll
roll
add
lea
out
lcall
mov
mov
add
add
ficomps
stos
pop
testl
add
mov
jp
js
add
add
add
les
jne
push
shr
shr
pop
call
push
push
shl
pop
call
push
sub
add
ror
shl
pop
leave
add
push
not
sub
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
add
push
jnp
add
add
add
add
xchg
add
loopne
roll
add
jno
add
jns
push
add
add
xchg
int
jnp
faddl
pop
pop
jmp
std
cmpsl
lods
data16
xchg
in
xchg
add
add
add
xlat
cmpsb
sahf
fsub
mov
xchg
les
mov
add
cmc
mov
hlt
lea
pop
pop
push
shr
add
add
inc
pop
pop
pop
push
lea
xor
pop
leave
add
push
rol
shl
add
pop
ret
leave
push
inc
pop
ret
push
push
push
push
push
push
lea
push
call
pop
add
add
cmpsb
mov
add
add
add
cmc
add
add
xchg
mov
add
mov
mov
mov
add
mov
lea
pop
mov
push
add
dec
pop
cmpl
jne
push
dec
not
add
pop
mov
jmp
push
lea
push
lea
push
push
call
add
add
add
pop
add
pop
add
int
add
jmp
outsl
push
mov
add
add
mov
xchg
jle
imul
in
add
ret
pop
add
aam
int3
lea
pop
mov
push
push
lea
push
push
push
call
lds
rolb
mov
add
mov
filds
push
add
fcomip
add
xchg
add
push
add
mov
fcmovb
push
xchg
rolb
add
add
jge
add
stos
add
add
inc
xchg
add
mov
push
add
add
jge
cld
add
bound
and
push
rol
pop
xor
push
add
pop
xor
push
push
push
lea
push
push
lea
push
call
int3
jmp
int
ljmp
add
jmp
add
out
add
add
div
add
mov
mov
push
add
fcom
loop
add
xchg
add
cmpsl
jl
add
add
enter
jnp
xchg
mov
add
add
pop
add
push
push
push
push
push
call
add
add
stc
add
add
add
xchg
sarb
mov
add
jae
mov
icebp
mov
out
xor
xorb
ja
xchg
test
addb
add
push
add
cld
jns
push
hlt
cmc
add
mov
je
push
insb
xchg
test
std
mov
add
lea
pop
xor
dec
push
rol
rol
add
pop
sub
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
addb
xchg
faddl
lcall
jne
mov
add
jge
roll
push
push
push
std
je
call
add
add
nop
lds
js
add
addl
in
xchg
int
add
insb
jbe
out
stos
fildll
add
iret
fiaddl
fadds
mov
pop
jmp
push
push
call
add
faddl
ja
jae
rcrb
out
data16
add
mov
cld
add
orl
pop
mov
jmp
mov
pusha
or
add
add
push
lea
push
lea
push
lea
push
push
call
mov
popf
orb
add
lock
aad
ret
add
add
add
insb
in
add
pop
push
add
aad
test
add
arpl
add
js
mov
pusha
add
pop
out
add
pop
add
lea
pop
pushl
push
shr
pop
pop
sub
push
add
add
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
push
push
call
icebp
pop
add
cltd
stc
add
test
push
mov
mov
mov
push
stc
iret
cli
add
add
mov
addl
add
leave
lea
add
cld
sti
mov
fmull
enter
pop
lea
sub
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
cwtl
add
aad
scas
stos
push
ret
add
xchg
add
jns
add
add
enter
add
mov
sti
aad
shrb
add
add
imul
shr
add
lock
mov
addr16
add
lret
cmc
int
sbbl
add
mov
icebp
rcll
add
mov
hlt
lea
pop
mov
push
push
push
push
push
push
call
add
in
cmpsb
fcompl
add
add
ljmp
subl
add
xchg
arpl
add
mov
mov
popf
loope
in
add
add
jp
stos
xchg
cmpsb
mov
bound
out
aad
test
stc
add
add
mov
jmp
andl
cli
fldl
mov
mov
lea
pop
shr
push
sub
shr
pop
add
push
push
push
push
call
add
add
lret
icebp
add
sar
mov
jle
add
add
popf
jp
mov
add
mov
clc
nop
add
iret
les
mov
add
jp
lcall
jp
add
add
in
mov
add
pop
cmc
add
sahf
add
add
filds
xchg
test
pop
sub
push
push
push
push
push
push
push
push
call
jno
add
out
mov
aam
scas
jle
cmpb
add
fs
lcall
pop
add
je
leave
add
push
bound
repnz
imul
mul
push
imul
lret
sti
nop
add
cli
call
data16
xor
int
pop
push
push
lea
push
push
lea
push
push
call
pop
push
add
jmp
jnp
add
mov
xchg
add
add
add
add
int3
lods
mov
jns
add
sahf
add
popa
into
add
movb
fldl
shlb
add
add
pop
shr
and
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
push
add
pop
out
insb
add
pushf
popa
pusha
cltd
add
add
nop
imul
scas
nop
outsl
add
add
rclb
xchg
mov
xchg
mov
xchg
popf
repnz
push
insb
mov
insb
mov
push
add
push
add
push
rclb
cld
lea
pop
sub
cmp
jne
push
push
push
push
push
push
push
push
push
call
lods
lods
cmc
sbb
add
add
mov
mov
lret
xchg
add
arpl
nop
add
sub
add
push
add
mov
add
lea
add
imul
clc
mov
lea
pop
leave
push
xor
rol
xor
sub
pop
ret
push
sub
pop
push
mov
push
add
shl
pop
add
push
lea
pop
push
push
sub
pop
push
push
inc
sub
pop
push
push
dec
ror
pop
push
push
push
push
push
call
push
add
int
aam
add
jno
add
stos
leave
add
call
add
add
add
add
xchg
lahf
lret
add
in
push
pop
aam
mov
mov
xchg
jmp
movb
mov
add
cmc
fildl
negb
jb
cli
vpshufb
mov
add
cli
fstp
mov
lea
pop
mov
push
lea
pop
lea
sub
push
shl
shl
sub
pop
mov
shr
push
push
push
push
push
push
push
push
call
cli
add
in
add
mov
add
add
out
lcall
add
ficoms
add
add
jmp
mov
add
lock
testb
clc
sahf
add
test
lods
add
add
add
lret
loopne
hlt
into
xchg
faddl
cld
lea
pop
add
mov
push
shr
add
pop
add
mov
push
lea
push
push
lea
push
call
push
mov
add
jbe
add
push
lret
add
out
push
jge
add
jns
out
add
fcmovnbe
hlt
add
ret
cmc
add
jecxz
mov
add
add
add
add
add
add
add
lds
add
add
mov
lea
pop
add
push
sub
xor
pop
xor
push
push
push
push
push
push
push
push
call
add
add
add
add
pop
mov
push
pop
sti
je
mov
add
jnp
imul
mov
loop
out
add
repnz
les
push
add
xchg
popf
andb
bound
pop
mov
push
push
push
call
add
pop
int
ret
std
pop
push
add
hlt
mov
xchg
ljmp
rolb
popa
out
xchg
fsubr
add
jo
jge
add
push
add
movsb
pop
add
add
add
les
add
lea
pop
and
push
lea
push
push
push
push
push
call
test
add
add
add
jns
add
push
add
add
incb
sbbb
add
movsl
sti
mov
addr16
repnz
roll
add
test
add
add
mov
lea
pop
rol
push
push
lea
push
lea
push
push
lea
push
call
pop
add
add
in
mov
add
add
scas
add
fs
add
add
cwtl
add
add
push
pop
push
int
int
pop
nop
push
out
add
mov
arpl
xchg
mov
lret
out
clc
add
add
add
jno
mov
add
pop
rol
push
lea
lea
pop
xor
inc
push
push
lea
push
push
push
push
push
push
call
mov
out
add
int
enter
into
add
les
add
testl
rolb
and
push
fmuls
add
jo
xchg
mov
scas
sti
outsl
mov
ja
test
testl
add
aam
bound
pop
cmpb
jne
push
push
push
call
add
sbbb
add
push
mov
add
add
push
add
pop
test
jo
add
add
notb
xchg
add
roll
pop
icebp
mov
mov
fimuls
jne
add
sti
aad
add
add
add
xchg
add
lcall
pop
add
cmp
je
push
push
push
push
push
push
push
call
pop
push
add
stos
fwait
movsl
add
jne
pop
add
mov
add
push
xchg
xchg
push
lea
jno
bound
int
add
add
jno
add
mov
lea
pop
add
cmpl
jne
push
push
call
loop
cli
jle
pop
mov
incb
add
add
shrl
mov
jecxz
jl
add
fbstp
popa
add
idivl
add
out
cld
add
mov
push
filds
out
add
stos
js
xchg
mov
add
flds
nop
add
loop
add
xchg
add
pop
xor
pop
push
push
push
push
lea
push
push
push
call
scas
add
add
lea
pushf
add
pop
jns
fldcw
stc
xchg
popf
add
aam
add
scas
outsl
mov
repnz
lret
bound
add
pop
add
mov
xchg
xchg
push
cld
fidivl
mov
lea
pop
pop
pop
push
push
lea
push
push
call
pop
add
lods
jmp
pop
add
pop
pop
push
add
add
push
add
mov
pop
add
mov
frstor
cwtl
jbe
testb
jmp
int3
mov
sahf
sbbb
add
fsubr
mov
mov
jecxz
jmp
xchg
xchg
add
add
jmp
arpl
ret
jne
add
mov
mov
mov
lea
pop
pop
pop
push
push
push
lea
push
lea
push
call
pusha
gs
xchg
insb
add
movsl
add
add
add
jmp
add
add
xchg
jns
add
add
scas
shl
push
cltd
jno
add
pop
leave
push
not
pop
ret
mov
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
push
add
out
add
xlat
add
push
popa
data16
mov
add
xchg
mov
jge
cmp
add
lcall
movb
mov
lret
add
push
mov
int3
lret
push
addl
mov
fs
add
fistpll
add
hlt
add
mov
lea
pop
add
push
push
push
call
push
add
mov
add
pop
push
in
add
add
jmp
bound
insb
jno
add
mov
add
addb
movsl
mov
fldcw
jno
add
add
in
pop
pop
leave
pop
mov
addb
add
add
enter
mov
movsl
lahf
fiaddl
add
nop
add
add
pop
push
push
add
ror
sub
dec
pop
push
add
push
push
push
lea
push
lea
push
push
push
call
addr16
movsl
rolb
popa
add
mov
add
fildl
xchg
add
pushf
mov
jb
roll
xchg
out
movsl
cli
pop
add
mov
bound
aam
add
xchg
testl
push
add
push
xchg
hlt
mov
add
rolb
into
mov
mov
lea
pop
xor
add
push
lea
push
push
push
push
push
push
push
call
call
lds
movb
add
fcompl
lret
add
mov
add
frstor
sti
movsl
push
xchg
add
addl
cld
lea
pop
testw
push
add
pop
pop
push
xor
lea
pop
pop
push
push
push
push
push
call
add
xchg
sarb
add
xchg
js
sahf
iret
int
add
lds
rolb
add
testb
push
and
add
arpl
add
pushf
mov
mov
jbe
add
add
fwait
add
pusha
pop
add
add
add
add
add
out
xchg
sbbl
adc
mov
push
push
push
lea
push
push
lea
push
call
add
xchg
mov
mov
hlt
test
mov
test
pop
jmp
xchg
add
hlt
js
jmp
add
lret
arpl
je
add
jmp
fsubrl
scas
xchg
lahf
jmp
add
popa
sbb
push
shr
ror
inc
pop
call
push
push
push
lea
push
push
push
push
call
add
add
mov
fldl
cmpsl
mov
gs
js
add
insb
lret
shll
pop
rolb
movsb
add
mov
mov
pop
add
xlat
leave
pop
insb
jecxz
jae
push
imul
sbb
xor
push
push
push
push
push
push
push
call
out
add
add
addl
fistpll
nop
addb
push
imul
pop
aam
mov
add
add
add
add
jo
mov
lea
pop
pop
pop
push
not
lea
shr
add
pop
pop
push
push
lea
push
lea
push
call
pop
add
pop
ljmp
add
add
xchg
leave
add
mov
add
mov
std
push
lock
add
in
arpl
xchg
stc
lock
cwtl
mov
add
ja
jl
out
mov
mov
mov
pop
ret
shll
mov
add
test
add
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
mov
jno
add
rcr
fisubs
fsts
arpl
cwtl
add
add
out
movsb
push
mov
mov
pop
mov
add
shrb
add
add
mov
jo
mov
lea
pop
pop
leave
push
shl
sub
rol
sub
pop
ret
push
lea
add
pop
push
push
rol
inc
pop
mov
push
push
push
push
push
push
push
lea
push
call
fisubs
add
push
add
add
addb
pusha
push
pop
jl
add
cmc
xchg
mov
cmc
add
add
add
cltd
add
add
push
loopne
je
mov
hlt
frstor
add
sub
add
stos
jo
push
rolb
mov
mov
add
mov
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
add
add
push
in
mov
add
popa
add
jbe
push
pop
add
mov
add
add
mov
arpl
xchg
pop
mov
add
in
add
cmpsl
add
add
test
mov
lea
pop
push
push
push
push
call
add
scas
mov
fisubl
jbe
add
add
mov
push
int
sahf
add
add
movsb
add
add
in
add
add
jo
add
mov
lea
pop
push
push
push
add
ror
pop
mov
push
not
inc
lea
add
pop
push
push
xor
add
pop
pop
push
lea
push
push
call
mov
add
ja
jl
mov
in
push
add
add
stos
imul
jb
test
add
xchg
lcall
add
jp
shrb
jne
push
jb
add
sti
mov
lea
pop
lea
sub
push
push
push
push
push
call
xchg
push
pop
icebp
jge
gs
add
jne
add
movsl
cmc
add
rcl
push
fsts
add
testb
add
xchg
stc
add
in
je
add
add
enter
mov
add
cltd
iret
add
addr16
mov
shr
push
shl
not
pop
add
mov
push
lea
push
call
addr16
enter
add
add
pop
in
in
jbe
imul
fldl
add
mov
add
pushf
add
add
repnz
add
icebp
lds
add
add
jl
out
jb
fwait
cltd
add
orl
add
pushl
push
shl
pop
popl
push
inc
add
pop
mov
push
push
push
push
lea
push
push
push
call
mov
add
mov
add
add
mov
add
mov
in
jbe
xchg
cltd
mov
aad
ljmp
imul
insb
je
mov
cltd
mov
sbb
add
xor
push
lea
push
call
out
push
jne
mov
mov
xlat
push
scas
push
imul
iret
aad
xchg
add
push
add
pusha
add
add
add
add
pop
fcomp
shr
add
add
add
test
jbe
add
add
add
pop
xchg
add
push
test
add
mov
lea
pop
lea
push
shl
add
shl
pop
mov
add
push
push
push
push
lea
push
push
push
call
add
rcr
je
into
add
push
add
movsl
xchg
lcall
fidivl
mov
imul
jae
jge
lods
in
jae
add
add
add
filds
into
iret
add
add
jno
or
out
cld
movsl
add
enter
add
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
call
add
add
add
xlat
add
mov
add
add
cmc
add
scas
test
add
mov
add
jp
mov
sti
add
push
add
mov
add
add
test
fwait
add
add
add
movsb
add
mov
lahf
test
mov
add
cld
lea
pop
rol
nop
push
rol
pop
nop
push
lea
push
push
push
push
lea
push
call
add
add
imul
mov
xchg
fwait
addr16
mov
add
add
fmul
xchg
xchg
jno
add
addb
call
pop
add
add
les
add
fs
pop
mov
add
xlat
push
add
lds
pop
xor
push
push
push
call
jne
popa
out
add
roll
add
call
sahf
ficoml
add
lret
add
add
add
stos
add
aad
mov
add
jno
out
lret
add
mov
add
jbe
add
add
movb
leave
mov
lea
pop
nop
push
push
push
push
push
call
test
add
lock
add
cld
add
add
add
imul
xlat
icebp
enter
xchg
mov
add
pop
add
add
int3
add
mov
mov
imul
sahf
add
add
jbe
in
add
add
xchg
fwait
add
jns
add
add
mov
movsl
out
mov
movl
lea
pop
nop
push
lea
shr
inc
pop
inc
nop
push
push
push
push
push
push
call
mov
add
add
ret
neg
lahf
add
add
int3
fmulp
cltd
mov
xchg
add
jp
mov
pop
jne
add
add
popf
add
test
scas
add
add
scas
add
scas
cltd
push
add
pop
add
mov
pop
nop
push
sub
sub
pop
cmpb
jne
push
inc
pop
add
nop
push
push
lea
push
push
push
call
mov
ljmp
jle
test
leave
pop
add
lahf
pop
add
data16
jo
mov
add
mov
rolb
push
add
call
sti
xlat
add
pop
jne
mov
mov
cli
jno
mov
mov
sti
add
mov
je
test
push
mov
lea
pop
nop
cmp
je
push
shr
pop
nop
nop
push
push
lea
push
push
call
out
add
orb
stos
push
mov
push
ret
mov
loope
add
add
test
out
sarl
add
aad
lcall
pop
cltd
jmp
je
fucom
pop
add
std
add
mov
add
cld
add
add
pop
test
fmull
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
xchg
add
pusha
mov
shll
jle
pop
jl
add
xchg
add
lcall
add
add
jno
movsl
scas
add
jp
push
roll
mov
test
add
mov
lea
pop
nop
push
push
push
lea
push
lea
push
push
push
call
mov
mov
add
jle
add
add
mov
add
enter
add
add
test
int3
popl
int3
add
popf
fisubs
js
xchg
mov
lea
pop
nop
push
not
not
pop
cmp
jb
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
divl
fnstenv
popl
cltd
gs
fildl
fadds
ljmp
testl
loope
lret
add
int
sahf
jns
stc
scas
add
xchg
pop
xor
push
push
call
in
push
insb
rolb
test
add
rcrb
jb
add
sti
std
stos
xchg
stos
addb
add
add
insb
mov
add
add
push
fisubs
pop
add
mov
cltd
popa
clc
incb
add
add
in
push
add
pusha
or
aaa
add
add
iret
ror
shl
pop
add
push
push
push
lea
push
push
lea
push
call
add
bnd
add
add
add
pushf
xchg
pop
test
cmpsl
xchg
mov
cltd
ljmp
mov
add
out
into
add
add
add
ljmp
push
lds
mov
add
int3
lret
mov
lea
pop
movzwl
mov
push
lea
push
push
call
ja
lods
pusha
fcompl
add
xchg
pop
fcompl
mov
cld
in
add
jnp
jecxz
les
pop
add
mov
enter
fadds
stos
jns
mov
cmpsl
add
add
mov
jb
movb
ret
add
add
roll
stc
mov
jnp
out
imul
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
mov
movsl
repnz
fnsave
lds
lahf
iret
lods
add
add
addb
nop
lea
stc
cmpsl
jl
jecxz
add
jl
add
mov
out
add
adc
arpl
jle
mov
and
dec
hlt
push
rol
xor
pop
xor
xor
push
push
push
lea
push
push
push
lea
push
call
add
clc
add
call
add
mov
test
add
add
jnp
stos
add
add
call
movsl
in
add
jnp
pushf
pop
add
testb
xchg
int3
add
in
rolb
mov
add
add
xchg
add
hlt
add
mov
lea
pop
shl
xor
push
sub
ror
sub
pop
shl
push
xor
shr
pop
xor
shl
push
lea
xor
add
pop
xor
push
rol
rol
sub
dec
pop
mov
add
push
add
sub
pop
pop
push
sub
pop
pop
push
push
lea
push
call
add
add
faddl
lret
add
add
out
lahf
add
pop
lds
add
xchg
add
in
imul
enter
add
xchg
add
test
insb
jle
mov
add
lahf
mov
lea
pop
pop
push
add
shr
add
pop
pop
push
shr
shr
add
pop
leave
ret
push
push
push
call
js
add
jmp
mov
int
je
add
orb
fbstp
fadds
std
pop
loope
add
add
jne
add
add
mov
enter
add
lods
add
mov
into
popf
add
add
add
add
mov
add
xchg
xchg
loopne
cmc
add
loope
clc
add
pop
push
push
push
lea
push
push
push
call
jns
mov
out
pop
mov
lods
aad
xchg
pop
test
lret
add
fildl
jbe
filds
jecxz
mov
add
lahf
mov
add
mov
mov
xchg
add
lods
test
mov
stos
aad
push
jmp
jmp
popf
mov
lea
pop
mov
push
push
sub
rol
sub
sub
pop
push
push
push
push
push
push
push
push
call
add
mov
add
test
idiv
les
add
std
add
mov
xchg
add
mov
xlat
mov
loopne
fadds
cli
xchg
mov
add
xchg
add
mov
neg
mov
pop
mov
add
test
xchg
idivb
mov
loopne
push
mov
add
xchg
xchg
mov
lea
pop
push
push
add
pop
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
data16
jp
popf
push
push
add
add
push
test
xchg
mov
mov
loopne
push
add
jmp
mov
rcrl
add
add
addl
add
scas
mov
add
lock
js
int3
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
jno
xchg
leave
add
cli
movsl
mov
mov
xchg
mov
add
lret
addl
mov
push
jp
fcmovnb
call
jmp
add
outsl
cld
add
lret
mov
add
jns
add
notl
add
jae
jl
rcrl
add
scas
add
jge
clc
add
lea
pop
mov
push
lea
push
push
push
lea
push
push
call
shl
add
add
add
add
add
pop
push
add
stc
pop
scas
add
cltd
add
push
add
cli
out
pushf
add
cmpsb
xchg
insb
fiadds
xchg
fcoml
add
push
push
sbb
rorb
test
add
push
push
push
push
push
call
cmpb
ret
add
int3
add
mov
add
add
clc
fnsave
pushf
je
int3
mov
add
add
mov
mov
add
mov
mov
xchg
mov
lea
pop
mov
push
rol
pop
test
je
push
dec
inc
shr
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
add
hlt
arpl
add
jge
stc
add
xchg
add
add
mov
cmc
sti
pop
movsb
mov
cwtl
addb
movsb
jns
mov
add
add
add
fists
stos
fnsave
add
add
fmull
dec
or
pop
push
push
lea
push
push
push
push
lea
push
call
add
fiaddl
popf
push
out
mov
cwtl
testl
add
add
mov
mov
add
test
add
leave
loopne
cmp
add
lods
add
xchg
fwait
add
je
add
int
xchg
add
add
rolb
aam
bound
inc
push
push
push
push
push
push
push
lea
push
push
push
call
ja
add
add
add
lea
add
cli
add
add
add
add
fwait
lret
and
jo
jle
add
mov
add
mov
mov
add
jle
sub
xchg
mov
push
loop
mov
test
pop
cmp
je
push
push
push
lea
push
push
push
push
push
lea
push
call
aam
add
je
hlt
enter
hlt
add
pushf
test
jmp
mov
mov
add
push
cltd
cld
add
fstpt
adcb
ljmp
add
into
xchg
mov
lea
pop
test
je
push
push
lea
push
lea
push
push
call
mull
mov
lods
add
addl
cld
add
mov
mov
jae
fnstcw
add
add
add
pushf
repnz
pop
add
jb
add
gs
jns
mov
add
add
add
in
jo
add
add
pusha
adc
mov
push
not
pop
inc
push
not
pop
cmp
je
push
push
push
lea
push
lea
push
push
push
push
push
call
add
fdivrs
mov
shll
push
add
cli
xlat
call
fcmovbe
jno
add
jecxz
jge
jne
add
add
push
pop
mov
add
mov
add
jle
fs
push
jl
add
lea
mov
add
loope
lcall
jae
lahf
hlt
add
loop
cmc
push
add
ljmp
and
test
jne
push
pop
xor
push
push
call
bound
out
fisttps
add
mov
pop
movsb
add
cwtl
mov
add
add
add
fildll
mov
xchg
add
ret
test
xlat
ret
add
add
popf
xchg
jcxz
add
add
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
jp
mov
add
add
scas
lods
xchg
int
stc
icebp
add
add
mov
cld
rolb
jb
lods
mov
lea
arpl
test
add
add
aam
add
add
xchg
pusha
add
fldl
xchg
mov
add
add
lea
pop
pop
pop
push
xor
pop
pop
push
add
sub
ror
xor
pop
leave
push
pop
ret
mov
push
not
shr
shr
pop
inc
push
lea
push
push
push
push
push
push
push
call
xorl
fisttpl
roll
jno
add
xchg
jns
add
repnz
call
add
add
add
jns
add
arpl
lea
mov
jb
mov
mov
xchg
jmp
mov
sahf
push
add
idivb
lea
pop
cmp
jne
push
push
call
lcall
jecxz
pop
add
pop
add
cmpsb
cltd
xchg
lock
add
jbe
popf
mov
icebp
push
add
data16
jb
popl
mov
add
sti
add
cmpsb
mov
cwtl
push
outsl
push
add
addl
data16
add
add
add
popa
or
jle
mov
push
push
lea
push
push
call
add
mov
xlat
xchg
int
mov
hlt
roll
add
add
out
pop
popl
push
popl
enter
add
add
lea
mov
push
nop
add
cmpsl
add
aam
mov
lods
push
ja
xchg
loop
add
add
in
xchg
mov
pop
mov
hlt
xlat
mov
mov
push
hlt
stc
add
add
mov
bound
pop
test
je
push
lea
push
lea
push
push
push
push
call
add
bound
mov
test
push
mov
jle
add
arpl
nop
add
mov
in
leave
jno
aam
leave
imul
in
in
bound
jbe
add
add
in
pop
ja
push
jo
add
add
push
add
shl
mov
test
pop
popa
add
add
add
sahf
out
jge
add
out
movl
sbb
push
add
push
rol
add
rol
add
pop
cmp
jne
push
push
push
push
lea
push
push
push
call
test
xchg
leave
push
sti
add
add
add
add
jp
jo
push
pop
add
xchg
xchg
in
test
add
xchg
test
add
pusha
add
ja
ret
add
add
add
add
filds
movsl
pop
hlt
loop
mov
faddl
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
mov
mov
add
in
shlb
cld
cmc
bnd
fucomp
lcall
add
add
mov
add
cld
add
xchg
outsl
lret
pop
add
add
pop
mov
fcomps
scas
add
leave
ja
xchg
out
add
mov
pop
enter
mov
lea
pop
test
je
push
lea
push
lea
push
lea
push
push
lea
push
call
pop
add
xchg
add
add
add
push
lock
enter
ja
stos
out
pop
out
add
lods
jge
mov
popf
add
mov
scas
imul
mov
add
add
loopne
jl
add
test
mov
lea
pop
mov
add
push
ror
shr
xor
pop
cmp
je
push
shr
pop
jmp
push
inc
add
lea
pop
xor
push
push
push
call
add
jae
in
add
add
out
shr
insb
add
add
pushf
add
cmp
add
add
lods
push
addb
cwtl
lods
hlt
pop
sarb
addr16
mov
add
add
add
add
jp
add
out
mov
lea
pop
pop
pop
push
shr
sub
not
pop
pop
pop
push
ror
pop
leave
ret
push
add
rol
add
pop
lea
pop
push
shr
not
xor
ror
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
cld
imul
add
div
add
push
imul
add
jns
mov
iret
add
add
std
add
pop
pop
movb
mov
add
mov
add
popa
push
sahf
add
mov
pop
js
mov
xlat
add
cld
lea
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
jno
fbstp
enter
add
cmpsl
shl
js
movsl
mov
cld
add
add
pusha
add
add
lret
add
add
lret
add
mov
clc
add
shrb
add
mov
lahf
mov
add
add
add
andb
sahf
add
add
scas
add
jo
add
lahf
add
and
push
push
push
call
std
testl
leave
out
mov
pop
add
mov
add
testb
rolb
add
testb
lahf
add
out
cmpsl
mov
fnsave
int3
mov
jp
xchg
gs
add
add
enter
mov
add
loopne
jno
add
add
iret
add
into
add
xchg
mov
lea
pop
ret
mov
push
lea
push
push
push
call
push
add
test
push
add
add
xchg
push
leave
outsl
addb
add
shl
push
jmp
pop
movsb
jb
add
jnp
add
add
pusha
mov
add
cltd
add
loop
test
int
mov
lea
pop
pop
push
push
push
call
mov
add
xchg
mov
imul
add
add
xchg
mov
popa
mov
add
push
jmp
repnz
xchg
stos
add
cmc
xchg
add
fwait
add
mov
lea
pop
pop
push
rol
pop
pop
pop
push
push
call
mov
repnz
jo
add
add
cld
add
add
pop
mov
int3
stos
add
add
in
mov
jb
cmpsl
add
fcoml
popl
add
jnp
stos
add
add
mov
add
mov
bound
pop
leave
ret
cli
push
pop
jb
sub
cli
mov
pop
jb
pop
pop
jb
loop
jb
hlt
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
stos
mov
mov
daa
xchg
cmp
jae
call
pushf
inc
jmp
dec
hlt
xlat
nop
xchg
aad
cmp
sbb
jns
add
sbb
adc
jnp
and
in
cmp
cmpsl
aam
fs
sub
xchg
lret
inc
and
adc
xor
in
and
lcall
and
mov
dec
xor
aad
sbbl
fisubs
cwtl
fwait
lock
iret
ja
cmp
lods
es
pop
std
jg
pop
xchg
sbb
push
lock
mov
test
xchg
seta
jle
mov
daa
dec
sbb
fisubrl
jb
or
cwtl
cs
mov
jne
jno
push
insb
jno
xchg
dec
pop
nop
push
cmp
xchg
or
mov
fcmovu
or
cwtl
mov
aaa
or
adc
jb
pusha
loop
push
xor
iret
and
pop
jmp
popa
cmp
shlb
lcall
or
lods
out
push
inc
xor
and
dec
ja
data16
adc
and
pop
lods
mov
mov
add
mov
popf
and
in
lods
push
fildll
push
sbb
mov
cmpsb
stos
ja
pop
aad
xchg
out
mov
mov
lahf
pop
jbe
pop
adc
cwtl
push
popa
mov
lds
sbb
in
pop
add
aam
lcall
cmpb
movsl
shrb
insb
inc
mov
lea
push
arpl
jo
cli
mov
mov
pushf
mov
testl
xchg
xchg
movsl
iret
push
jo
fcmovu
call
jge
xchg
adc
mov
or
dec
dec
pop
push
jmp
adc
lock
popf
out
sbb
sbb
cmpsl
js
js
in
sub
xor
jo
scas
xor
fisttpl
loopne
stos
clc
stc
sbb
xor
fstl
pop
adc
fisubrl
inc
lock
xchg
ffree
shrb
adc
popa
mov
mov
lret
fwait
orl
xchg
imul
scas
inc
into
daa
gs
nop
enter
in
fildll
jl
in
fildll
sti
sub
push
pop
lret
mov
gs
cmp
push
xor
xchg
loope
sbb
jae
add
pop
pop
imul
iret
mov
bound
int3
pop
jo
xlat
dec
cmp
fsubrs
aaa
xchg
fwait
lods
inc
out
jns
inc
or
xchg
aas
inc
sbb
fs
mov
popa
pop
adc
pop
mov
fcomp
jnp
or
adc
pushf
or
mov
push
ljmp
shll
pushf
cmpsl
lea
add
sbb
jl
xor
sub
push
mov
mov
rcrl
xchg
push
idivb
fidivs
cmpsl
shr
adcl
push
cld
mov
and
xchg
mov
cmp
push
cmp
rclb
mov
mov
dec
mov
or
aas
mov
lds
pop
fs
pop
cltd
scas
lret
int3
inc
outsl
lds
xchg
mov
movsl
insl
loope
pusha
js
sub
in
out
xchg
push
fstpl
test
bound
jne
hlt
xor
je
decl
popa
mov
jno
ret
iret
or
mov
cmc
dec
imul
mulb
ret
sub
add
stos
test
pop
jg
dec
sub
jae
jne
stc
out
pop
ljmp
pop
add
add
sbb
mov
ret
pop
dec
cmp
addr16
add
jecxz
cli
xor
hlt
jge
out
pop
lock
push
stc
push
lret
test
cmovle
adcl
mov
pop
pop
pusha
or
rcl
pop
fnstsw
ljmp
sbbb
jp
outsl
fisttpll
in
rorb
out
push
add
out
shrl
xor
cmpsl
push
comiss
js
loope
imul
mov
mov
loopne
xchg
stos
stc
popa
loop
dec
filds
ljmp
loope
lret
sbb
outsl
rcl
adc
mov
xor
loopne
out
leave
das
cmpsl
dec
hlt
inc
loopne
nop
push
fistpl
push
sub
les
cmpsl
adc
je
add
fs
xchg
bound
lock
jmp
mov
iret
inc
lret
hlt
jmp
ljmp
and
stos
mov
inc
or
mov
dec
imul
inc
or
adc
int3
pop
xlat
adc
or
cwtl
mov
jmp
fists
mov
ffree
jo
jb
xchg
out
cmp
shl
mov
dec
mov
movsb
inc
mov
repz
addr16
sbb
fcoml
and
pop
std
mov
and
popf
sar
into
mov
or
test
push
arpl
sbb
and
fldl
mov
sahf
and
sbb
xor
outsl
or
dec
inc
pop
jbe
shlb
fs
les
lds
dec
stos
pop
or
mov
adc
xchg
cmp
or
jne
test
lds
xor
and
cwtl
xchg
xor
or
adc
mov
ret
shll
and
testl
iret
addr16
shrl
into
jae
add
inc
cmp
xchg
scas
sarl
pop
leave
cltd
sbb
jl
sbb
enter
push
jb
add
pop
jnp
das
shlb
jnp
xor
mov
loopne
arpl
fmul
pop
sbb
ss
mov
inc
out
dec
mov
and
adc
and
or
inc
out
mov
mov
pop
sbb
xor
jnp
xor
jl,pn
xor
pop
jge
adc
incl
inc
sbb
aad
jecxz
daa
push
push
sub
mov
lret
bound
xor
inc
push
sbb
xor
inc
iret
out
mov
in
adc
lret
lods
push
in
dec
ds
or
popa
inc
pop
sbb
daa
addl
pop
sbb
sub
sbb
jecxz
sahf
dec
fdivrl
push
dec
imul
push
xlat
or
fcmove
into
sbb
insb
xor
cmp
jge
jno
test
hlt
icebp
movsl
insb
fdiv
adc
outsb
idivl
out
aaa
jle
jnp
and
mov
mov
loope
mov
sbb
dec
sti
mov
adc
xchg
incl
mov
leave
test
sub
inc
ss
mov
sub
cmc
dec
jb
mov
int3
inc
int3
mov
pop
sbb
adc
mov
add
push
mov
cmc
cmc
mov
loop
adc
ja
inc
gs
filds
jle
in
mov
mov
inc
mov
lock
and
popa
add
adc
dec
push
xor
cli
dec
scas
clc
in
mov
loope
jnp
mov
pop
daa
repz
push
add
add
xchg
imul
clc
aas
inc
emms
jb
outsb
xor
cmp
movsb
enter
clc
or
push
test
int
pop
add
cs
jb
sbbb
cs
cmp
cmpl
pop
push
cmp
dec
pop
adc
fbld
xchg
xlat
cli
shrb
aam
push
rcrb
fsubr
stc
mov
les
pop
nop
push
call
adcl
jns
jns
inc
gs
aad
jp
daa
cwtl
loope
push
iret
or
fsubr
add
sbb
jb
call
popf
push
sbb
lods
cmp
or
push
cmc
movsb
fdivs
adc
icebp
cmp
xor
dec
aas
repz
pop
xor
shlb
fiadds
or
andl
xor
push
mov
sub
mov
mov
fs
pushf
push
bound
shll
mov
sbb
pop
jg
dec
add
adc
addr16
cld
mov
mov
mov
aad
cmpsb
fdivl
mov
push
mov
fsubr
sbbl
mov
repnz
movsl
in
or
in
inc
cmp
stos
popa
xchg
inc
dec
stos
test
out
push
fwait
adcb
mov
and
hlt
shll
xchg
mov
pop
inc
imul
mov
cmp
sub
mov
sarl
in
sbb
add
xorb
or
and
cmpsl
test
xor
dec
mov
cmp
das
lahf
daa
cmp
or
loope
cwtl
sahf
pusha
mov
sbb
push
sub
mov
leave
test
cmpsl
das
test
xchg
mov
jnp
shrb
mov
xlat
sub
jb
test
jg
mov
icebp
push
pop
jne
cmpsb
repnz
xchg
testl
subb
xchg
dec
mov
imul
push
cld
or
lods
lret
or
xchg
mov
test
mov
andb
xor
cli
add
fiadds
scas
test
shl
jae
jge
push
mov
daa
pop
testb
incb
mov
mov
inc
fs
fwait
adc
sbb
out
adc
pop
out
push
negb
enter
jns
pop
fadds
push
ja
jns
movlps
test
enter
push
fs
loope
idiv
cmpsb
jns
cmp
mov
sub
dec
mov
adc
cmpl
sub
popa
mov
jo
popa
stos
fs
int
fwait
sub
or
cmpsb
shll
loop
loop
adc
jg
push
xchg
sar
inc
or
mov
push
stos
add
push
popa
outsb
mov
pop
sub
adc
dec
aaa
xor
fidivrs
stc
and
adcb
rcrl
pop
mov
js
dec
push
jne
std
dec
mov
xchg
rcr
cmp
cmovp
loope
pop
pop
lahf
shr
and
dec
fadds
inc
daa
mov
pop
sbb
cli
les
jg
es
roll
dec
mov
es
dec
test
pop
cmp
lock
enter
pop
divl
jge
and
mov
xor
stos
mov
in
fucom
lahf
test
sbb
xchg
mov
imul
mov
push
and
and
ljmp
xor
pop
or
pop
mov
mov
loopne
jl
scas
ds
push
out
push
jne
fucomp
xchg
xchg
sbb
cli
mov
and
lret
lret
or
jbe
dec
mov
shrl
or
scas
jae
jbe
push
push
xchg
sub
pop
in
test
cmpl
inc
loop
pop
stos
xchg
xchg
inc
cmp
add
lods
pusha
xchg
lods
or
mov
in
adc
test
mov
push
push
inc
inc
xchg
bound
aas
mov
pop
jae
scas
jge
xlat
or
sti
dec
xchg
bound
inc
jmp
testb
lds
and
jge
dec
jnp
push
and
dec
rorb
gs
mov
outsb
jg
and
mov
std
push
push
popf
xchg
inc
outsb
loop
int
es
dec
mov
cltd
popa
clc
outsb
pop
xor
adc
inc
loope
push
add
stos
push
insl
mov
mov
push
pusha
js
xor
sbb
mov
jg
imul
mov
hlt
mov
inc
ja
or
ret
push
mov
jae
in
cmp
xor
push
xchg
jg
std
call
addr16
cmc
jno
and
push
xor
or
xlat
inc
nop
add
xchg
sti
and
inc
cmp
cmp
push
sbb
cmp
out
jns
mov
loopne
pop
xchg
dec
push
or
cli
ret
mov
jae
push
or
js
lods
and
mov
inc
adc
and
sbb
push
mov
nop
loop
xchg
jne
fiaddl
mov
jb
call
pop
clc
test
les
fs
xor
sbb
or
shl
into
jg
push
lods
add
jns
gs
mov
fidivs
les
mov
popa
lock
cmp
jno
fadds
or
leave
or
out
js
add
push
into
push
xlat
lea
cwtl
dec
aas
sbb
das
mov
sbbl
ret
bound
adc
adc
jge
push
mov
push
loope
imulb
mov
dec
int3
sbb
mov
xor
dec
adc
insl
pop
mov
push
sar
or
jb
jp
jmp
subl
xchg
fidivrs
stc
adc
mov
stos
xchg
adc
inc
ret
add
or
shlb
inc
mov
fs
sub
ret
pop
cmp
inc
repnz
jecxz
xor
sbb
icebp
sbb
or
dec
jmp
iret
ds
add
mov
scas
mov
in
cmpsb
leave
neg
divb
and
jo
add
adc
push
push
mov
and
xchg
mov
ja
leave
inc
mov
repz
pop
les
sub
enter
mov
loopne
add
or
les
repz
je
jno
sub
dec
mov
or
adc
jl
std
stc
adc
mov
jl
push
call
shll
xor
cmpb
aad
rol
and
jnp
loope
push
jle
lret
cltd
in
inc
mov
in
std
sub
sarb
out
cltd
push
pusha
int
call
jno
add
lock
adc
int
sub
rolb
inc
cld
jno
push
lock
pop
repz
jbe
int3
and
cmp
clc
out
xor
popf
lds
sbb
cmp
xor
and
mov
mov
or
pop
sbb
adc
and
test
pop
pop
add
pop
and
xor
loopne
int3
daa
test
pop
mov
and
pushf
pop
int3
stos
gs
sub
xchg
ljmp
fstpt
xchg
or
gs
jno
lds
fstps
sub
dec
push
cmpsl
mov
cmp
xor
inc
sub
add
pop
stos
xchg
xchg
push
mov
and
sub
and
pop
pop
inc
aas
mov
ds
rcr
inc
pop
dec
pop
out
add
mov
pushf
push
out
add
gs
pop
shl
pcmpeqb
adcb
xor
stos
xchg
ljmp
popa
test
test
jo
jmp
dec
repz
mov
mov
mov
pop
popa
mov
mov
and
or
add
xchg
lahf
adc
scas
dec
lret
mov
loop
movsw
push
jnp
inc
jae
mov
jg
lret
cmc
dec
stos
pusha
sbb
sbb
inc
jmp
mov
scas
xor
clc
nop
jne
push
add
insb
push
jp
shrb
cmp
cltd
dec
jns
movsb
fildl
bound
push
out
dec
xchg
sub
fdivrp
out
add
mov
hlt
mov
cmp
sub
in
jp
pop
aaa
icebp
add
mov
pop
or
ljmp
bound
arpl
sahf
int3
and
vmovd
imul
sub
scas
ja
xchg
mov
dec
int3
ret
dec
shlb
sti
jb
add
xor
mov
jmp
push
adc
push
enter
gs
dec
ficoms
lods
insb
push
pop
ja
lock
inc
and
pop
sub
dec
pop
cmp
jbe
dec
movsb
scas
aam
and
push
ja
pop
es
test
mov
lods
sahf
xchg
aas
stos
movsl
xor
inc
lret
lret
fwait
rcrl
mov
inc
sub
insl
aad
sub
adcb
jl
cmp
movsb
jns
fisubrl
xchg
rclb
and
pop
pop
cmp
cmpsl
call
arpl
popf
inc
push
lods
fsubl
jno
lret
int
test
sub
push
xor
xchg
jb
stos
push
outsl
add
lods
fldenv
mov
shll
int3
pop
and
pop
lods
lret
adc
lahf
stos
xchg
dec
push
adc
inc
mov
mov
inc
fwait
jo
sbb
push
jb
hlt
jb
mov
negb
cmpsb
loope
push
mov
loope
or
sub
mov
sbb
fsts
inc
icebp
repz
fcomp
mov
shlb
repnz
data16
push
xchg
mov
imul
inc
test
insl
add
mov
push
loopne
xchg
fcompl
or
or
and
pop
decb
cmc
jo
sbb
push
sti
mov
addb
push
add
inc
clc
push
pop
xchg
aad
jne
loop
dec
add
loop
in
cmp
push
aam
cmp
cmp
neg
mov
mov
addr16
xor
push
inc
into
je
bound
mov
aad
daa
pop
add
inc
pop
mov
stos
repnz
pop
mov
jno
inc
test
jae
xchg
test
negb
sub
push
mov
cmc
popa
push
jmp
jle
loope
repz
sahf
jbe
divl
scas
mov
scas
ret
dec
or
test
xor
fistps
cmpsl
cmc
add
pushf
mov
sub
adc
test
dec
popf
xchg
cs
mov
loope
out
push
int3
cwtl
dec
lret
or
cmp
mov
mov
cmp
iret
lods
ja
jmp
fcomps
imul
dec
xchg
cs
into
repz
repz
pop
dec
jo
pusha
dec
lods
xor
hlt
dec
xchg
js
mov
add
mov
iret
mov
inc
mov
adc
xor
cmp
movsb
aas
and
ss
mov
stos
lret
sub
mov
scas
fcomi
mov
sbb
jnp
cli
lret
pop
and
addl
mov
repnz
sbb
popf
push
inc
jno
jo
inc
dec
test
and
jb
je
loopne
aaa
mov
mov
jecxz
jnp
js
gs
xchg
ljmp
fstps
hlt
nop
fidivl
dec
jne
idivl
xchg
mov
jnp
fwait
sbb
cmp
push
cwtl
out
mov
cmp
jg
std
lret
mov
jp
mov
pop
adc
pop
ljmp
dec
nop
ds
stos
movsl
add
push
pop
pop
stos
gs
pop
push
data16
psubsb
sbb
leave
mov
sub
pop
mov
mov
pop
pop
mov
fsubrs
test
jnp
test
sbb
lret
les
add
or
jb
cmpsl
mov
jo
stos
add
fdivs
jp
lcall
add
aaa
out
push
addr16
sub
xor
inc
test
rcrb
cmp
pop
in
push
cmp
inc
or
iret
jle
dec
cmc
enter
push
fisubs
les
push
and
mov
push
aaa
cli
mov
lahf
orl
pushf
inc
mov
add
xor
jle
jecxz
pop
add
fiaddl
xor
cltd
mov
ds
test
jg
mov
push
sbb
out
or
sahf
xor
int
jnp
jge
out
orl
les
mov
es
and
inc
jle
cmp
mov
xor
inc
scas
pop
xchg
inc
push
and
mov
mov
push
mov
and
mov
dec
fistpl
and
and
imul
es
out
sbb
shl
add
pop
inc
add
movsbl
push
inc
sbb
aas
aam
std
sub
jb
jnp
mov
popa
ljmp
repnz
cwtl
pop
shl
icebp
or
mov
fists
xabort
pop
pop
aaa
popa
mov
sbb
aas
xor
out
pop
mov
jmp
mov
icebp
push
cmpsl
lret
loopne
inc
add
out
js
xchg
jmp
jns
lea
mov
pop
xchg
les
pop
xor
push
mov
inc
hlt
push
adc
pop
scas
jne
mov
rcl
loopne
fstpt
inc
adcb
adc
push
sbb
pop
in
sbb
pop
cmp
fs
push
dec
xchg
push
adc
scas
pop
outsb
sahf
xorb
cmp
je
ljmp
idivl
pusha
jae
cmp
mov
pop
pop
sbb
inc
lods
jge
cltd
jp
hlt
out
mov
andl
pop
cmp
adc
inc
jge
and
in
xchg
xor
mov
ja
sub
adc
sub
dec
dec
mov
aaa
sbb
push
cmp
mov
out
dec
pop
mov
sarb
cld
add
xor
dec
inc
push
pop
shl
push
push
scas
ss
jge
jnp
sbb
movsl
add
icebp
testl
mov
mov
loope
adc
sbb
leave
mov
sub
sbb
push
daa
xchg
loopne
mov
rcrl
loope
adc
xchg
and
rorl
into
sbb
sahf
cmpsl
sahf
xchg
insl
pop
push
cld
insb
fnsave
mov
inc
add
out
je
push
fmul
jnp
pop
add
xlat
add
xor
add
stc
dec
das
dec
cltd
int3
sub
enter
sbb
outsl
test
jb
je
mov
push
push
push
imul
test
in
mov
lods
mov
ljmp
stc
gs
xor
cltd
sub
jb
jmp
sbb
cmc
pop
in
sub
push
subb
into
out
mov
push
mov
pop
dec
insb
orl
mov
xchg
addr16
je
mov
out
sbb
pop
push
xchg
cmp
xchg
cld
stos
mov
pop
movsb
or
xchg
popf
dec
inc
mov
xchg
push
or
inc
push
cwtl
cmp
pop
testb
adc
pop
test
bound
jno
into
loop
pop
leave
dec
lahf
jbe
test
add
mov
lea
mov
dec
mov
or
jne
in
pushf
outsl
or
cmp
sub
inc
js
inc
xor
dec
nop
dec
in
lahf
mov
jecxz
and
and
pop
rcrl
or
iret
rcrb
ret
imul
xchg
into
sbb
insb
fnsave
mov
and
sbbl
pop
push
inc
jb
pop
inc
pop
scas
adc
orb
mov
sub
sub
add
or
xor
fisubrl
stos
imul
ficoml
cmp
loopne
mov
lret
pop
jns
jbe
insb
adc
mov
negl
mov
ss
into
movb
add
pop
lock
mov
fildll
or
pop
ja
xchg
push
pslld
or
and
in
insl
xor
adc
testl
or
mov
into
sub
sti
enter
pop
xchg
test
dec
fwait
and
xchg
inc
xlat
repz
popa
push
cmc
mov
shll
dec
stos
aaa
fcomi
xor
ja
out
dec
push
test
scas
mov
fisubrl
pop
sbb
push
xchg
into
xchg
jge
in
ret
cmpsl
ds
push
out
mov
outsb
adc
test
stos
cwtl
ljmp
add
sbb
or
sahf
and
imul
fistl
xchg
fcomi
ja
fistpll
mov
jecxz
fldenv
aas
std
into
outsl
test
sti
ljmp
push
push
inc
mov
and
pop
negb
xor
mov
adcl
push
jecxz
pop
mov
imul
bound
iret
arpl
mov
cmp
add
loop
adc
test
cmp
xor
push
stos
imul
push
das
push
movsb
mov
test
pop
push
xchg
inc
push
inc
data16
inc
sbb
fcoms
cmp
xchg
or
sub
adc
lcall
pop
jnp
dec
sub
stc
mov
dec
mov
inc
mov
jae
jne
mov
insl
xchg
out
xchg
adc
divl
lods
repnz
adc
in
and
cli
aam
movsb
das
into
ret
mov
in
inc
mov
dec
adcl
mov
ficomps
les
push
repnz
push
call
mov
es
cmp
mov
leave
xchg
js
iret
lods
int
sub
jnp
sub
push
icebp
mov
ljmp
scas
shrl
stos
xchg
add
movsl
push
cs
xchg
jecxz
sbb
pop
push
or
cmp
jae
lds
mov
mul
push
out
ficomps
jo
aas
imul
ss
jnp
hlt
subl
scas
in
or
xchg
scas
les
and
add
movsl
xor
addr16
cmp
mov
mov
pushf
sub
mov
sbb
shl
and
xor
shrb
fadd
jecxz
cmpsl
or
jno,pn
loop
xor
cltd
iret
jl
adc
inc
loope
jmp
dec
lods
fcomi
lods
and
into
jp
inc
adc
lods
ja
das
sarb
sarl
push
xlat
movsb
sub
cmp
mull
sbb
nop
push
xor
cmpsb
stos
xor
clc
mov
outsb
mov
sub
push
ds
mov
cmpl
adc
nop
and
mov
inc
mov
add
rorl
stos
xchg
pop
dec
mov
ds
sub
jne
mov
jns
adc
fs
mov
in
add
adc
push
fsub
lcall
or
jno
xor
jge
mov
sbb
ss
insl
mov
xor
test
push
adc
push
cmp
push
add
pop
sbb
cld
outsb
mov
inc
fildll
pop
mov
addr16
jo
loop
into
cltd
mov
aaa
adc
push
jecxz
je
or
mov
je
xlat
or
inc
sub
push
dec
in
shlb
out
or
push
inc
lods
xchg
loope
mov
rorb
outsb
jg
in
imul
adc
mov
push
inc
dec
stos
and
sti
inc
mov
insl
int
add
mov
mov
shll
insl
outsb
and
mov
push
dec
adc
je
fistpll
xchg
push
xor
inc
mov
mov
scas
lahf
in
outsl
or
jns
adc
adc
xor
arpl
mov
adc
aad
std
xchg
mov
mov
mov
and
adc
popa
or
xchg
and
imul
mov
xor
pushf
mov
icebp
xchg
lds
pop
aas
push
movsb
lock
lret
mov
arpl
ja
inc
fnstenv
lcall
popf
push
dec
fs
aas
mov
pop
mov
pop
mov
sti
cmpl
cld
imul
hlt
cmpsb
adc
out
inc
lock
add
mov
testl
xor
mov
nop
dec
and
cwtl
cmc
cmp
dec
arpl
les
mov
lods
hlt
sub
mov
sub
mov
inc
mov
sub
dec
out
sbb
adc
movsl
xor
mov
push
sub
lock
jge
rcll
rorb
add
data16
push
pop
and
fdivs
pop
mov
cs
cmp
iret
jno
nop
lcall
push
in
push
lahf
mov
sub
cltd
lret
test
icebp
push
mov
movsl
push
imul
test
and
sbb
or
xor
fiadds
rcrl
cmp
test
dec
addr16
xor
fcmovnu
std
fstpl
jae
adc
lahf
mov
push
rolb
or
ss
jle
push
sub
jne
or
and
sub
pop
fsubr
mov
pop
cli
mov
dec
push
test
push
icebp
push
sbb
dec
xchg
dec
pop
mov
inc
or
fisubrs
push
stc
subl
loop
jbe
ret
in
mov
mov
jge
xchg
lea
std
and
push
jne
setae
scas
lret
jae
leave
push
lcall
and
pop
repnz
popa
pop
dec
ss
dec
sub
pop
aad
pop
data16
pop
xchg
pop
sub
and
ljmp
clc
fcmovu
movb
add
xorps
mov
dec
push
mov
xchg
mov
into
xor
mov
fdivrs
in
jo
add
lcall
pop
jns
pushl
xlat
rorb
ds
stos
xor
mov
js
inc
imul
mov
into
or
mov
scas
lahf
outsl
xchg
fcoml
dec
in
in
jecxz
xor
xor
lcall
xchg
xor
mov
arpl
jnp
pop
lock
mov
loop
mov
std
and
out
and
call
inc
xor
mov
in
jns
lcall
mov
shr
pop
into
pop
jnp
xchg
sahf
inc
sub
pop
jecxz
rol
pop
jae
inc
jnp
mov
and
push
jge
xlat
xor
sbb
daa
jnp
inc
mov
sub
cld
push
mov
sbb
rcl
ret
and
movsb
std
test
ror
add
inc
xchg
into
mov
in
push
xchg
ja
dec
cmp
xorb
repz
jp
popf
jne
mov
xor
int3
cmp
stos
dec
mov
jnp
sbbb
sub
and
push
or
xlat
sti
push
leave
ss
pop
gs
lods
in
xchg
insl
subl
inc
mov
xor
pop
imul
lret
ret
sub
testl
pop
or
mov
push
and
cwtl
test
sti
add
cmp
rcrl
or
fsts
mov
lds
pop
out
xor
or
insb
push
js
call
sbb
cli
stos
cmp
stos
fs
inc
imul
loop
ret
hlt
mov
dec
bound
pop
das
bnd
jp
jo
mov
in
push
sub
xchg
mov
aam
dec
add
mov
testb
adc
test
sub
cmp
and
jmp
cmpsl
add
ficomps
cmpsb
test
lahf
mov
rolb
pop
pop
ljmp
jecxz
lods
inc
lret
jge
mov
xor
mov
jns
jecxz
sub
test
cmc
mov
cmc
or
int3
sub
outsb
adc
cld
clc
icebp
mov
mov
gs
and
xor
cltd
popf
jmp
push
fcompl
sub
insb
fdivr
jge
int
or
sti
jno
rcr
popf
shrl
pop
dec
clc
inc
sbb
pop
push
inc
mov
dec
decb
rorl
test
icebp
mov
jle
lret
pop
mov
movsl
dec
aas
filds
rcrb
inc
imul
out
sub
cs
ret
jnp
ret
jbe
movsl
cmp
cmp
inc
cltd
push
add
loop
out
cltd
sbbb
aas
cmp
fiadds
xchg
mov
movsl
jmp
stos
jl
xchg
xor
ljmp
push
push
stos
jo
push
fidivrs
stos
int
arpl
fistps
lock
rol
pop
test
push
pop
aaa
mov
cmpsl
mov
or
jnp
fisttpll
sub
push
icebp
dec
outsl
shrl
jmp
mov
idivb
lds
xchg
fldenv
lret
clc
loop
loop
imul
fchs
mov
pop
icebp
inc
sti
div
jg
scas
aam
aas
iret
ret
arpl
mov
loopne
jecxz
push
clc
fcmovu
inc
xchg
xor
out
loopne
lods
mov
or
in
dec
pop
xchg
lret
sarl
andb
mov
rcl
sub
sbb
mov
mov
cmpsb
cs
push
dec
or
pop
ds
mov
sbb
fadd
int
and
aad
mov
inc
stos
cmpsb
pop
mov
add
pop
inc
cmc
mov
arpl
xchg
mov
xchg
push
add
pop
outsb
sub
sub
int
push
inc
fistl
and
push
test
pop
push
pop
js
sub
fsts
sbb
pop
test
adcl
out
js
mov
xchg
cmp
sti
insl
fsubl
insb
rolb
and
adcl
shl
jno
xor
mov
or
adc
stc
rcrb
sub
shll
pop
into
bound
das
iret
inc
ljmp
push
nop
cmp
xchg
mov
cltd
outsl
mov
out
cmp
adcl
and
mov
incl
mov
jb
pop
sarl
inc
push
dec
xor
jbe
add
pop
cmp
imul
cmp
bnd
xchg
ds
bnd
mov
cmp
cs
adc
dec
mov
dec
pop
cmp
cli
xor
int
into
sub
adc
sbb
cwtl
mov
xchg
pop
and
aad
xor
jmp
push
and
fucom
incb
pop
pop
movsl
sbb
inc
popa
popf
mov
out
out
roll
and
popa
into
inc
test
je
add
mov
xchg
ja
dec
iret
sub
mov
dec
xchg
sbbb
inc
lahf
cs
ss
fisttps
add
mov
lods
mov
pop
or
dec
push
and
cmp
cmpsb
mov
add
fistpll
cmp
sbb
mov
ljmp
notb
faddp
ja
xchg
gs
outsb
adc
test
push
xor
ret
mov
push
rcl
adc
rorb
out
int3
jmp
stc
pop
dec
xor
ficoms
sub
call
jmp
mov
jl
or
fldl
imul
dec
mov
jge
imul
lcall
xor
jge
fmul
push
cli
and
pop
aaa
aad
call
iret
fimull
push
sub
pop
mov
sbb
ret
mov
add
ds
mov
shll
inc
xchg
test
cmp
mov
adc
test
out
adc
pop
mov
ret
cmpsb
ja
xchg
or
push
adc
mov
mov
add
push
inc
int3
imul
jns
cmp
or
movsb
mull
lea
icebp
test
sar
inc
sub
and
mov
jae
add
sbbl
jns
sahf
jb
inc
dec
and
push
pop
fs
mov
jge
pop
enter
shr
add
hlt
lds
outsl
sbb
add
sbb
adc
jne
insb
cld
mov
icebp
push
add
rcrl
fpatan
and
fs
jmp
mov
in
jns
sbb
mov
iret
test
dec
jne
jno
mov
xchg
adc
cmp
add
jae
push
mov
sub
add
mov
or
jge
jecxz
pop
dec
mov
cli
cmp
cwtl
pushf
ret
movsb
push
popa
jo
push
add
jl
enter
dec
into
insb
cmp
rorl
push
in
in
icebp
gs
jnp
mov
cmpsb
push
push
int
sub
leave
mov
in
add
fidivs
outsb
pop
mov
ja
mov
in
fimuls
cmp
pusha
mov
aad
icebp
fsts
dec
xchg
in
xchg
xlat
xor
add
push
sarl
cld
nop
mov
ds
dec
pop
sub
mov
mov
imul
adc
testl
out
xchg
add
negl
lock
cmp
adc
flds
ret
mov
jbe
frstor
jl
out
std
jp
sub
add
outsl
dec
dec
add
pop
mov
jmp
mov
xchg
pop
in
int
ds
ret
xor
or
mov
xchg
fs
int
daa
mov
fildl
arpl
xor
scas
lahf
xchg
lahf
ss
inc
cmp
cmpsb
jne
je
cli
mov
dec
add
lahf
test
loop
daa
add
jp
adc
int3
out
inc
push
arpl
stos
js
lds
sti
fidivrl
xlat
add
xor
sbb
enter
cmp
pop
inc
and
dec
push
mov
mov
call
push
in
push
js
aas
fdivs
mov
mov
mov
aaa
shll
or
inc
cltd
pop
push
insb
sub
and
add
mov
and
insb
mov
pop
inc
xor
add
jge
mov
repnz
push
add
cmpsb
xor
inc
mov
stc
adc
add
cmpsl
mov
xchg
and
add
jle
xor
inc
push
mov
in
call
outsb
mov
sbb
rcll
and
and
lret
repnz
jo
popf
movsb
mov
add
iret
xchg
add
sbb
xchg
xorb
ficoms
push
push
jle
inc
lahf
dec
out
xchg
bound
and
jmp
mov
decl
push
test
or
mov
nop
imul
push
push
fisubl
xchg
push
je
call
add
jno
faddl
sbb
push
call
pop
cmp
outsl
insl
cld
cld
lret
dec
dec
mov
xor
dec
pop
scas
ja
lods
cltd
loope
adc
out
push
xchg
mov
cwtl
sar
jp
test
jo
push
cmpsl
in
lret
inc
inc
arpl
iret
xchg
lret
stc
push
pop
or
pop
dec
and
inc
sub
xchg
hlt
or
lods
cmpsl
loopne
test
cmc
push
addl
shrl
les
daa
in
dec
jecxz
popa
push
cltd
inc
push
lret
cli
mov
sub
in
xchg
push
add
fisttps
popa
xchg
int3
call
ljmp
adc
in
sbb
sub
dec
loope
daa
adcb
das
jg
stos
push
jb
inc
out
sbb
sbb
stos
outsb
ror
scas
out
pusha
inc
out
popf
insl
cmpsl
int3
pop
cmp
adc
jg
fadds
add
xchg
data16
mov
dec
sbbb
add
and
lea
cmp
sub
iret
mov
nop
adc
mov
jmp
xor
add
pop
iret
movsb
sbb
push
insl
jne
mov
je
jmp
scas
adc
add
or
inc
xchg
push
ret
or
xchg
inc
inc
outsl
les
inc
lods
sbb
xchg
jne
test
xchg
lahf
sahf
sub
dec
sbb
sbb
pop
pop
adc
imul
jl
pop
call
dec
out
push
cmc
add
dec
bound
pop
jns
cmp
jp
mov
scas
fstps
adc
jecxz
fistps
mov
mov
movsb
sti
add
xor
dec
arpl
cmpsb
push
or
dec
or
imul
nop
add
std
leave
test
push
cmpsl
mov
cmp
xlat
cmp
in
ss
test
std
mov
pop
sub
pop
iret
mov
leave
aas
mov
cmpsb
inc
shr
jbe
test
cmp
adc
mov
decl
movsl
jnp
stc
pop
aas
aam
pushf
xchg
mov
cmp
shr
rorb
inc
inc
inc
popa
pop
rclw
leave
pusha
xchg
imul
cltd
inc
cmpsb
cmpl
push
push
je
sub
outsl
mov
xchg
insb
add
push
jnp
rcrl
cmp
mov
jo
pop
lcall
mov
mov
xor
gs
mov
cmpsb
outsl
lahf
call
jns
or
add
repz
dec
fs
jp
cli
inc
out
pop
jae
lcall
push
int3
daa
mov
insw
adc
popf
clc
je
hlt
mov
imul
je
add
push
ja
push
subb
fbstp
pop
xchg
loop
adc
sbb
daa
mov
fildl
mov
ss
mov
or
cmpsb
dec
repnz
into
mov
es
icebp
repnz
push
fld
sbb
jnp
stos
imul
clc
and
enter
mov
mov
inc
setg
sub
scas
lcall
pop
sbbb
aas
fwait
or
andl
sub
jg
sub
pop
jns
jns
adc
outsb
push
adc
rorl
inc
popa
adc
loopne
in
cmpsl
dec
cli
mov
sub
shlb
pop
leave
into
jb
stos
mov
jge
shll
mov
jge
and
pushf
mov
lods
in
add
adcb
mov
arpl
in
push
push
or
movsb
leave
call
cmc
loopne
movsl
stos
xchg
cli
dec
das
adc
dec
jmp
mov
lods
add
jnp
mov
cltd
dec
sub
mov
aaa
inc
in
jge
mov
popa
or
leave
sbb
xchg
sti
mov
fiadds
push
cmp
dec
arpl
jg
jecxz
mov
shlb
dec
out
not
jmp
add
loope
jns
dec
sub
or
imul
movb
ljmp
stos
inc
push
add
or
test
add
cli
lret
aas
ss
adc
dec
push
enter
lret
je
sbb
mov
movsb
or
bnd
out
mov
xchg
loope
xor
xor
or
inc
aad
jb
fwait
xchg
cld
movsl
imul
cltd
inc
mov
mov
out
and
sahf
pop
mov
pop
mov
inc
jno
imul
fsubrl
rol
bound
add
ja
push
xor
mov
push
lret
push
mov
pop
test
ljmp
out
cld
xchg
mov
cmp
jle
mov
out
and
xor
ss
inc
push
push
push
mov
push
cmpsl
fldt
and
push
pop
inc
mov
dec
fsubl
rorl
add
adc
mov
jmp
mov
and
loop
push
rcrl
jp
sbbl
push
push
adc
or
fwait
pop
lds
push
sub
xchg
pushf
pusha
and
dec
sbb
sbb
mov
imul
push
lahf
mov
inc
mov
pop
adcb
dec
pusha
jp
xlat
cmp
sahf
bound
xchg
pop
dec
xor
push
dec
pop
mov
enter
imul
daa
and
dec
enter
cmpsb
inc
or
sbb
cli
sbb
test
or
lahf
inc
jge
xchg
xorps
xchg
jo
push
add
xor
jmp
mov
fisttpl
lcall
into
lods
gs
inc
das
test
inc
lret
ljmp
cltd
mov
insb
pop
add
add
dec
negl
fisubl
lock
cmp
sub
testb
fldcw
mov
push
in
and
cwtl
les
dec
pop
into
pushl
insb
jp
jecxz
cmpsl
pop
push
int3
out
dec
std
mov
sub
mov
out
cmp
ja
dec
push
cmc
add
jg
das
sub
aam
cmpsb
mov
addr16
or
sub
out
leave
clc
out
scas
gs
lods
imul
ret
in
mov
and
aam
in
sub
loope
ja
insl
and
pop
sub
in
add
jnp
jecxz
hlt
xchg
cmp
jo
dec
in
negl
rclb
enter
sub
loope
adc
add
subl
cmc
mov
call
sahf
mov
xchg
pop
scas
push
xlat
jae
cmp
mov
or
bound
xchg
pop
sub
inc
dec
pop
sbb
dec
mov
inc
sbb
sub
sub
out
test
jp
mov
mov
dec
dec
add
je
test
mov
push
xchg
sub
mov
mov
sub
mov
pushf
dec
mov
mov
stos
js
enter
jl
sub
test
push
sbb
dec
in
push
fwait
inc
ret
pop
in
int3
lret
test
jns
cmp
adc
xor
in
aad
cmpsl
pop
xor
out
mov
andl
inc
rcrb
data16
and
nop
sub
ja
std
jg
jle
call
or
lret
jbe
or
lahf
dec
xchg
mov
movsl
popa
out
add
and
xor
xchg
push
xlat
push
repz
push
or
out
mov
into
inc
addr16
xor
ret
neg
cs
push
mov
cli
cld
add
pop
xchg
cs
sarb
lods
xor
stc
jmp
lock
lret
out
xchg
test
pop
sub
jle
dec
mov
in
out
mov
sub
fisubl
insl
push
fisubs
ljmp
inc
add
push
cmpsb
loop
jg
mov
das
push
popf
pop
lahf
leave
shll
scas
jle
or
negb
pop
xchg
outsb
dec
mov
das
cmp
and
out
test
and
enter
js
repnz
pop
insl
xor
repz
xchg
cmpsb
cltd
pop
pop
mov
cmp
fwait
hlt
ljmp
cmp
or
pop
sub
xlat
and
movsl
jb
pop
jg
fmuls
lea
mov
fcmovb
xor
sub
mov
popa
in
shll
fldenv
sub
or
sub
popf
ficompl
das
mov
mov
in
mov
sti
hlt
push
stc
sbbl
or
das
inc
inc
rol
pushf
sub
repz
das
pop
in
adc
adc
orb
cli
into
popa
nop
and
sbb
jecxz
enter
mov
jl
in
and
mov
outsl
mov
dec
mov
and
fcoms
inc
mov
scas
cmpsb
jnp
cmpb
sub
sub
inc
xchg
pop
mov
push
rcrb
mov
in
imul
push
or
inc
out
daa
add
inc
jo
rclb
xor
add
mov
sbb
mov
jnp
jg
fsts
loop
mov
loopne
adc
xchg
dec
jbe
and
insb
xor
testl
leave
scas
mov
lods
je
push
sar
les
jmp
cltd
clc
popf
cmpsb
jp
xor
js
and
sbb
aam
push
mov
testl
rcl
jle
shrl
jno
lds
imul
hlt
es
and
hlt
insb
popl
or
lret
sub
leave
movsb
mov
scas
mov
js
push
pop
adc
scas
sub
push
or
mov
fstps
mov
xor
jb
cmpsl
or
clc
popa
jg
xor
xlat
xchg
pop
mov
cs
rorb
push
loop
out
leave
out
add
and
in
mov
jbe
mov
jnp
cmp
insl
in
adc
fs
loope
out
jb
mov
ss
cmp
sub
movsl
lret
and
stc
rolb
push
clc
ljmp
push
pop
in
push
std
ret
jmp
sub
sbb
fisubl
lods
shl
mov
mov
mov
fstpl
mov
outsb
out
push
sub
push
in
pop
cmp
movmskps
fs
aas
fsubs
ljmp
call
std
int
int3
lret
shlb
push
pusha
scas
dec
pop
adcl
push
ret
out
add
push
aad
test
fistpll
xchg
mov
and
loopne
jmp
in
pop
inc
xor
xor
leave
les
cmp
mov
mov
aad
dec
sbb
gs
cmp
push
mov
inc
js
out
pop
dec
pop
mov
and
imul
and
pop
int3
mov
add
add
out
cli
jl
rcrb
and
outsb
daa
jns
out
adc
aas
pop
and
enter
imul
ja
mov
mov
lret
out
or
inc
aam
cmp
imul
cmp
mov
push
les
push
cmp
sub
test
fldt
aas
jno
pop
iret
xchg
ljmp
add
adc
loopne
xchg
xchg
mull
pop
mov
xor
imul
popa
outsb
adc
lea
mov
addr16
ljmp
scas
push
xchg
arpl
or
ja
jo,pn
jmp
push
sbb
loopne
push
std
pop
stc
pop
sahf
push
xor
int
jl
jp
inc
fwait
test
inc
xor
and
aam
imul
jns
ja
cs
push
inc
sub
outsl
stos
aaa
or
sti
subl
js
sbb
mov
mov
sbb
stc
sahf
and
xchg
pop
mov
out
mov
andl
jae
jmp
repnz
repz
pushf
in
cmc
add
daa
int
and
and
inc
sahf
outsl
xor
loope
arpl
or
adc
sahf
add
js
add
inc
aam
jp
arpl
push
mov
sub
cmp
or
out
adc
cmpsb
and
outsb
jae
add
std
in
fdiv
bsr
xor
dec
ljmp
arpl
iret
inc
push
fwait
mov
or
mov
popl
mov
mov
push
popa
pop
lock
lds
cmpsl
int
push
xchg
or
nop
sub
inc
cmp
adc
movsb
sub
in
fisttpl
xchg
stc
dec
neg
and
test
in
mov
call
pop
loopne
jmp
cmp
mov
arpl
lret
outsl
mov
movl
jo
add
ja
sahf
testl
aam
dec
add
cmp
rcrl
jge
sahf
dec
insl
ret
gs
aaa
addl
cmp
or
fcoml
push
pop
aad
icebp
mul
dec
push
dec
xor
inc
fistpl
movsl
outsl
leave
add
ret
mov
mov
mov
pop
sub
outsl
stc
ffree
jmp
jmp
cmc
cmp
sub
call
pop
dec
mov
cld
dec
fwait
bound
lea
lret
xchg
cmp
dec
shlb
push
sub
not
cmp
icebp
xor
jno
daa
push
clc
lcall
mov
dec
lods
jg
sub
repz
push
pop
push
push
or
cmp
xchg
push
push
addr16
ja
xchg
outsb
push
or
push
xchg
push
jecxz
jl
mov
fidivl
dec
and
xor
mov
cltd
mov
shrl
movsl
ret
pop
jne
fcoms
mov
sarb
sbb
inc
enter
adc
push
sahf
push
jno
push
daa
inc
insl
outsl
sarl
pop
addr16
jb
or
test
cmc
outsl
cmpsl
insl
sahf
push
test
dec
jb
ret
jg
dec
call
sbb
lods
shll
shr
clc
in
add
fistps
mov
femms
jae
adc
inc
or
movsb
std
jno
xchg
lahf
inc
push
mov
or
jnp
pop
in
daa
adc
and
sub
lcall
pop
push
test
dec
mov
push
cmpsl
cld
dec
scas
or
inc
vpsubb
inc
push
out
test
sub
and
xor
cmp
shll
movsb
jmp
mov
into
je
add
mov
fwait
cli
jne
and
mov
cltd
clc
into
push
pop
sahf
cmc
sbb
stos
sub
shr
or
mov
xchg
jno
dec
mov
lahf
mov
xor
cmpsb
jno
mov
jge
and
and
in
adc
xor
dec
lds
jmp
andnps
mov
in
push
xor
leave
cltd
sbb
stc
pop
inc
mov
cmpsb
ljmp
sbbb
pop
mov
cmpsl
add
inc
lcall
sbb
ret
leave
jl
inc
lock
rcrb
ljmp
push
lods
jl
stos
push
dec
shll
lock
push
fs
notl
insb
mov
sbb
mov
sub
push
cltd
ds
mov
jbe
repz
insl
mov
adc
fdiv
movsl
pop
js
sti
adc
test
in
push
mov
int
cs
mov
jae
js
push
mov
sub
sahf
into
mov
pop
dec
in
or
into
pusha
sub
pop
test
push
negb
xchg
add
xlat
or
mulb
cmp
xchg
mov
or
xchg
mov
or
push
sub
push
aad
rol
mov
adc
cld
jecxz
out
jecxz
and
pop
pushf
mov
pop
push
jno
nop
mov
push
mov
xor
aad
inc
popa
movsl
rorb
mov
sbb
xor
push
lea
lret
xor
adc
push
aam
pop
mov
dec
pop
out
shlb
jle
push
jno
jbe
les
cmp
jns
jp
das
scas
lcall
mov
not
test
imul
mov
sahf
jo
sti
push
dec
add
xor
or
mov
rclb
pop
xchg
cmpsl
das
sub
lret
in
out
jb
cwtl
iret
rcl
sbb
mov
jecxz
or
mov
sbbl
add
push
divb
mov
jns
aad
or
cwtl
inc
mov
add
cmp
or
sbb
push
shr
jg
loope
lcall
add
xor
push
xlat
daa
ficoml
lock
lret
mov
push
fidivs
sbb
sbb
mov
sub
xor
sbb
xchg
xlat
xor
jge
mov
sbb
push
xchg
xor
mov
xchg
lret
outsb
cmc
xlat
jb
icebp
push
ds
sub
sbbl
outsl
push
sbb
cmp
mov
jmp
les
fdivrs
in
pushf
jl
shll
fbld
into
pushf
xor
popf
xchg
into
movsb
mov
sub
imul
divb
mov
test
xor
push
into
mov
subl
gs
seto
sbb
mov
fstps
data16
push
xchg
subl
lods
movsl
xor
jle
xchg
std
in
into
mov
popf
stos
push
xchg
int
cmpsb
lcall
iret
leave
aam
sbb
gs
xchg
push
cld
mov
or
lock
loopne
sbb
clc
jb
dec
mov
sahf
icebp
dec
stos
test
icebp
xchg
xor
mov
inc
adc
dec
outsb
jg
in
int3
rorl
mov
in
sub
shlb
fcmovbe
cmp
jecxz
cs
fs
mov
lods
orl
adc
scas
out
js
mov
xchg
rclb
and
inc
aam
orl
aam
xchg
test
add
adc
mov
movsb
dec
inc
pop
lea
xchg
aam
mov
xchg
and
mov
pop
push
inc
add
sbb
gs
stc
js
aas
iret
call
js
sub
arpl
mov
cld
sbb
out
and
jle
xchg
mov
mov
lea
or
mul
xor
ret
popl
dec
fsubs
hlt
mov
jns
jo
nopl
mov
das
xchg
mov
push
xchg
or
fcmovnb
popa
jle
call
push
js
incl
ljmp
dec
xlat
inc
adc
dec
lcall
sub
int
pop
jg
lods
je
gs
mov
mov
ret
into
aam
pop
cli
push
in
xchg
fs
and
or
inc
sub
mov
hlt
jb
push
push
loop
lret
loop
fisubrs
add
mov
dec
mov
ret
fstpl
push
dec
inc
lret
fsts
sbb
ret
mov
mov
adc
testl
sbb
mov
add
stc
add
mov
clc
scas
dec
xchg
lret
mov
sbb
fdivrl
cmpsl
pop
and
or
or
sbb
cmc
and
mov
sti
popa
cltd
sbb
mov
repz
loope
adc
or
int
xchg
out
add
popf
mov
movsb
xlat
xchg
loop
cmpsb
out
mov
shlb
xchg
add
jae
mov
mov
push
nop
mov
adc
or
das
sbb
cmpsl
ljmp
sti
ffree
inc
jmp
sarl
lret
inc
adc
push
jp
lahf
lock
mov
mov
xor
lods
les
inc
pushf
cmpsb
push
shrb
and
outsb
or
lcall
push
imul
popf
ret
xor
hlt
fwait
sar
fmulp
es
push
cmp
int
movsb
xor
dec
mov
push
scas
cwtl
aad
dec
scas
sahf
lds
sbb
cwtl
outsl
arpl
or
xchg
mov
jle
adc
outsb
cld
ss
xchg
jge
iret
mov
fisubrs
adc
ds
movsb
xchg
les
sbb
cmp
mov
push
mov
push
add
or
roll
lock
addr16
movsb
repnz
pop
xor
out
stos
and
jnp
cbtw
jle
fdivl
jnp
mov
mov
mov
insl
and
inc
add
and
sub
aam
xor
sbb
xchg
arpl
inc
or
add
loopne
xor
fdivl
nop
mov
adc
imul
xchg
mov
lahf
aas
stos
clc
mov
cmp
in
lods
inc
pop
fdivrl
xor
and
aaa
aad
mov
dec
iret
sub
lods
xlat
in
add
repnz
and
jl
lcall
jge
call
mov
and
ret
iret
inc
out
inc
rcrl
push
fadds
les
jb
mov
cmp
je
cld
sub
xlat
arpl
stc
inc
test
push
shrb
sarb
xor
pop
leave
pop
inc
dec
xchg
pop
dec
xorb
enter
jo
push
shll
fadds
out
jne
or
out
scas
push
adc
push
fdivrl
inc
adc
adc
jo
insl
cmp
xchg
xchg
or
mov
das
loopne
inc
stc
stos
int
mov
jne
cmp
adc
xchg
and
fwait
jno
mov
sahf
sbb
sub
loopne
ljmp
into
cmp
push
scas
roll
jl
xchg
mov
sub
push
pop
or
fldt
pop
jb
aas
ss
int
movsl
ljmp
mov
shlb
push
fmulp
push
jmp
xchg
mov
les
inc
pop
sbb
mov
arpl
mov
pop
xor
push
daa
dec
adc
inc
into
push
xorb
jnp
xchg
shlb
mov
mov
pop
jbe
jne
jae
mov
pop
cwtl
pusha
pushf
sub
and
lods
fdivrl
xor
sub
ret
pop
mov
sbb
push
pop
hlt
inc
dec
mov
dec
push
aam
xchg
push
aad
lods
loope
inc
ja
adc
dec
sbb
insb
pop
shlb
add
js
aaa
inc
dec
adc
xchg
sub
dec
sbb
ss
jnp
push
xor
pop
and
mov
jmp
icebp
loop
pop
dec
cld
adc
lea
scas
fistpll
jne
dec
fbld
xor
aad
popf
push
aad
sarb
sbb
mov
fadds
leave
sbb
je
dec
lcall
adc
sti
lret
aas
mov
bound
lock
push
add
pop
fbstp
pop
mov
lahf
cs
xchg
sub
pop
add
pop
mov
popf
sarl
rorb
js
mov
test
mov
mov
pop
mov
jl
cmp
mov
mov
fidivs
movsl
jl
jo
filds
imul
push
inc
out
push
mov
jge
pop
push
shrb
out
test
jno
dec
mov
adc
lock
insb
adc
insb
adc
push
mov
gs
cmc
jmp
inc
lret
and
cli
jne
add
in
stos
jns
ss
enter
iret
cld
sbb
fldl
lahf
mov
icebp
mov
cmp
aas
adc
adc
in
cmc
inc
cmp
movb
dec
and
xchg
fbld
push
out
push
mov
dec
pop
outsl
or
mov
loopne
int
negl
add
vandpd
pop
mov
js
mov
stos
mov
pop
mov
xor
ss
std
sub
aad
in
je
stc
incb
pop
loop
out
push
jg
xchg
inc
int
and
dec
push
in
dec
out
push
icebp
lcall
mov
test
lret
and
in
hlt
xor
pcmpgtb
data16
js
xor
cltd
ficomps
push
shll
cmpsb
aas
xchg
xchg
cltd
repz
adc
in
orb
std
add
mov
jl
stc
lods
mov
cld
in
stc
push
ss
ljmp
adc
cmp
rcll
or
inc
cmp
loop
inc
ror
push
pshufw
fbld
cmc
sti
add
sub
mov
dec
stc
lcall
pushf
mov
sarl
add
mov
fistl
cs
pop
insl
sti
fidivs
test
or
jns,pn
arpl
mov
rorl
jmp
push
add
jge
inc
jae
mov
adc
push
adc
cmc
cmp
in
and
inc
test
sbbl
fisubrl
jne
xchg
pop
nop
sahf
pop
cmpsl
or
inc
xchg
sbb
sub
mov
jno
in
icebp
or
mov
cmp
add
bound
xor
pop
dec
xor
xor
lds
inc
cmpsb
pop
jae
add
xchg
sub
sti
xchg
fists
xchg
push
mov
sbb
pop
jo
icebp
and
xor
stc
into
push
sub
aad
cmpb
and
mov
sub
int3
lock
movntq
cld
fs
shll
sahf
mov
inc
jb
sub
aad
xor
subb
or
in
test
cs
jmp
pop
and
in
push
mov
push
hlt
pusha
jp
mov
inc
insb
mov
xlat
xchg
sbb
lds
iret
stos
pop
and
rolb
cmp
add
xor
add
test
out
lahf
in
inc
daa
mov
imul
jge
add
and
xor
std
and
mov
jo
aaa
jp
lock
clc
jl
xchg
mov
dec
xchg
lahf
mov
jge
sub
cmp
fdivrs
mov
test
push
add
add
outsb
jns
aaa
jl
dec
rcrl
ror
add
mov
cmc
push
mov
sbb
mov
cwtl
adc
test
int3
and
push
jge
and
mov
fwait
sbbb
dec
out
xor
or
adcb
push
push
ds
ss
mov
lret
xlat
repnz
scas
aad
dec
xchg
sbb
call
cwtl
xor
jp
insl
lcall
dec
shlb
in
in
das
flds
imull
fdivr
inc
or
ss
ja
sub
add
jno
imul
dec
dec
hlt
or
popa
ljmp
ja
inc
add
sub
inc
das
xchg
sahf
jl
cmp
jns
mov
rorb
xor
mov
xchg
sub
dec
adcl
hlt
mov
mov
call
jl
sbb
nop
push
or
adc
jmp
sbb
mov
xor
mov
into
push
inc
sbb
popf
hlt
and
repz
xor
mov
int
neg
movsb
je,pn
movsb
ss
fistpl
fnstenvs
andl
sbb
sbb
popa
adc
outsl
jae
push
das
adc
inc
clc
xrelease
sbbb
into
xor
fnstsw
jl
xor
lock
push
mov
lock
je
incl
pop
loopne
repz
lahf
out
mov
cmp
aaa
xchg
inc
inc
jle
aam
dec
je
test
dec
shlb
xor
je
jmp
pop
movsl
inc
aas
les
cmpsb
sub
mov
or
cltd
insb
push
push
int
sbb
shll
dec
ds
hlt
mov
sbbb
add
dec
jmp
mov
or
push
out
popf
divl
adc
fnstsw
jmp
pop
cmp
xchg
je
aam
push
sub
imul
fwait
rep
fisubl
js
in
hlt
inc
mov
adc
mov
cltd
insb
repnz
outsl
jbe
orb
outsb
xchg
mov
into
outsl
mov
out
arpl
or
sbb
dec
ljmp
jno
jg
in
hlt
repz
sbb
mov
add
fs
sub
ds
cmp
mov
insl
sti
das
ficoml
outsl
mov
ds
and
ds
cmp
adc
pusha
adc
adc
je
scas
inc
mov
xor
mov
sbb
addl
add
xor
xor
popf
ljmp
leave
outsl
sahf
fcomip
jecxz
push
xor
add
jmp
xchg
pop
pop
inc
leave
jae
jne
mov
jmp
out
mov
cmpl
addr16
lcall
loope
dec
insb
sahf
dec
or
add
divl
cld
cmp
pushf
cli
arpl
xorl
dec
dec
rcll
daa
and
es
sub
popf
sub
sar
mov
js
mov
aam
pop
jecxz
clc
addr16
dec
jecxz
mov
fwait
mov
cmp
mov
shlb
jo
loop
pop
lret
add
or
jmp
mov
and
pop
push
scas
add
and
adc
sbb
iret
int3
adc
inc
cmp
sbb
loope
scas
ss
jns
mov
popf
testb
lea
jmp
mov
mov
movsb
push
hlt
mov
repnz
or
cmp
adc
fistl
call
sbb
filds
inc
aaa
and
push
clc
cmpsl
cmp
repnz
je
out
mov
les
outsb
or
xchg
add
pop
test
mov
and
lahf
mov
dec
and
jnp
jge
and
dec
fucomi
sahf
fidivl
ret
xchg
or
arpl
xchg
jge
scas
test
xchg
call
xor
nop
inc
in
lahf
cmpsb
jne
out
push
lahf
mov
cmp
xor
bound
lcall
pop
xorb
xor
adc
mov
cmp
sbb
test
or
stos
fadd
pop
std
push
pusha
xor
add
mov
out
out
xchg
xor
int3
outsb
xchg
loope
rolb
cmp
jns
loope
ds
or
cmp
mov
int3
mov
icebp
or
aaa
dec
loope
pop
sbb
xchg
fbld
or
mov
fptan
aas
cmp
cmp
cmpsb
jb
sub
jle
ja
addb
bound
add
fimuls
fnsave
das
out
fiadds
sahf
xchg
dec
dec
dec
aad
ds
arpl
cmc
stc
das
mov
outsb
jle
insb
adc
jecxz
mov
ret
fs
cmp
xchg
sub
sub
call
pop
pop
imul
adc
add
leave
jnp
mov
and
lock
loopne
cld
mov
sbb
mov
add
mov
sahf
adcl
adc
mov
add
mov
add
bound
stos
insl
test
mov
jb
pop
dec
pop
push
xchg
sbb
xchg
and
rcll
test
xor
cmp
mov
cmp
jg
in
add
int
aas
sub
sbbb
xor
leave
inc
scas
dec
cld
rclb
ret
cvtps2pi
loopne
test
arpl
and
add
jb
mov
mov
dec
pop
nop
mov
les
add
add
movsl
jle
pop
pushf
popa
xchg
inc
aas
lds
or
sbb
mov
fistpll
adc
shl
les
shll
mov
out
fwait
les
decb
int
icebp
test
mov
dec
fisttps
lds
bound
jge
mov
or
xchg
cli
out
or
popa
mov
scas
sub
iret
in
adc
call
frstor
das
test
fstpl
cmp
push
clc
push
jne
insl
incl
sti
jge
cmp
aam
cltd
pop
xchg
xor
pop
pop
scas
cmp
test
daa
scas
jp
fcomps
lods
cs
lea
inc
inc
lret
inc
mov
add
pushf
and
mov
adcl
cli
imul
addr16
inc
ljmp
test
inc
aam
outsl
insb
inc
mov
pop
fwait
sti
cmp
xor
sbb
int3
mov
cwtl
test
shlb
lea
shrl
popf
mov
jno
pop
fidivrs
jecxz
jle
xchg
insl
sbb
leave
or
cmpsl
int
xchg
mov
mov
stos
decb
xchg
add
sbb
xor
lods
scas
and
add
xlat
mov
popf
mov
iret
jl
mov
int3
pop
jle
inc
adc
dec
call
mov
inc
addr16
push
out
into
js
adc
in
scas
mov
shrl
je
outsl
test
test
sbb
filds
jno
icebp
xor
test
and
mov
adc
sub
sbb
orb
sbb
fnsave
test
mov
cmp
cmp
orl
es
cmp
fwait
mov
xchg
xchg
xorl
cwtl
mov
test
icebp
ja
add
xchg
adc
lea
sub
lds
in
or
scas
cmp
adc
mov
cmpsl
lcall
test
aam
push
push
cltd
mov
inc
push
inc
pop
mov
fsubrs
or
inc
stos
scas
rcll
xor
test
or
or
mov
mov
les
jo
call
cmp
add
iret
rol
and
je
ret
cmp
mov
imul
out
int3
int3
mov
addl
mov
mov
lcall
cmp
and
cmp
daa
xor
adc
stos
jecxz
dec
rcr
add
sub
nop
xorps
mov
mov
pop
mov
subl
rclb
mov
mov
idivl
cmp
stos
inc
enter
in
in
push
xor
sbb
dec
pop
hlt
xchg
out
mov
insb
imul
mov
pop
fwait
jno
loop
push
inc
mov
inc
or
out
mov
dec
xlat
dec
aad
push
dec
mov
movsl
or
dec
or
cli
sbb
or
mov
ljmp
sbb
inc
mov
xchg
and
into
arpl
hlt
and
cmp
or
mov
pop
mov
test
test
cltd
pop
push
xor
clc
scas
popf
pminsw
lcall
imul
daa
sbb
test
jbe
lret
pop
pop
lods
cmp
push
pop
adc
lcall
xlat
xchg
pop
test
loop
cltd
test
fwait
insl
xchg
scas
fidivs
mov
mov
mov
inc
lods
sbb
cli
addl
ljmp
rcr
int
rorl
shrb
icebp
cmp
sti
repz
cmp
add
push
out
adc
sub
repnz
dec
or
gs
cmp
mov
es
in
fmull
adc
inc
mov
jmp
into
imul
sbb
mov
mov
mov
in
push
xlat
nop
ror
inc
adc
insb
push
xchg
mov
mov
call
cmpsb
add
ljmp
inc
movntq
sub
mov
inc
ret
mov
dec
jne
das
jecxz
scas
pop
cmpsb
dec
daa
repz
lds
insb
ss
add
mov
mov
push
and
mov
out
cmpsl
and
nop
sti
int
push
iret
mov
mov
cs
mov
and
adc
nop
jp
sub
bound
jns
add
pop
push
sbb
orl
out
inc
ja
jnp
push
rolb
orl
jle
push
mov
cmp
cmp
lods
adc
adc
adc
mov
fidivs
push
sub
mov
gs
fisubrs
pushf
dec
test
leave
stc
cmp
cmp
cmp
push
cmp
add
pop
and
mov
ss
or
das
mov
mov
mov
jae
cmp
inc
lret
popf
hlt
popf
subl
dec
orb
js
inc
fldt
and
sub
ds
js
cmc
push
mov
jno
xchg
and
and
data16
jl
inc
inc
test
popa
aam
lret
mov
loope
inc
shl
sbb
xor
lret
mov
pushf
arpl
lcall
push
sub
jb
adc
iret
mov
mov
pop
sub
and
cmp
mov
jmp
enter
adc
mov
push
sbb
add
mov
sarl
cmp
xchg
sbb
dec
test
pop
arpl
cld
jno
inc
insl
xchg
push
andb
in
addr16
push
int
rcr
push
add
or
out
fmulp
push
cmp
lret
mov
add
testb
loopne
std
jne
adc
pop
aaa
out
jle
lahf
sub
insl
test
decb
ds
sub
jp
test
sub
daa
movsb
add
dec
gs
adc
rclb
inc
xlat
or
mov
shl
stos
xlat
outsb
xor
stos
xor
cmc
adc
inc
in
sbb
push
daa
inc
loopne
clc
lds
stc
int3
ja
jecxz
pushl
xor
mov
push
xor
out
mov
push
aaa
fsubrl
cmp
pop
jmp
sbb
push
xor
movsb
sahf
jnp
fdivrp
ret
dec
lret
xchg
fwait
and
je
sbb
lods
insb
xchg
pop
or
sub
ljmp
cs
sbb
or
dec
jb
aam
mov
hlt
jbe
fists
inc
xor
xor
push
xor
test
daa
test
mov
aas
daa
cmp
xchg
sbb
push
mov
ljmp
cmc
sbb
pop
int
push
fisttpll
inc
loope
pop
jge
sarl
jns
and
aaa
repz
rcr
jb
xor
jl
dec
xchg
pushf
bnd
sub
lods
ret
lea
aaa
in
ret
movsb
leave
pop
mov
xchg
mov
sbb
sub
popf
sbb
negb
xchg
push
dec
inc
in
jecxz
ret
adc
lret
enter
jb
xor
jbe
sub
pop
inc
mov
test
dec
mov
adc
cs
lods
out
jns
mov
fldl
push
and
jecxz
xlat
pop
sub
xlat
pop
mov
or
mov
mov
jno
pop
pop
push
pop
ud0
insl
loopne
sbb
insl
mov
sbb
xchg
pop
jbe
mov
pop
push
mov
addr16
sbb
or
repnz
jno
test
cmp
shrb
and
add
outsb
pop
loope
and
push
xchg
rclb
push
push
sub
jmp
test
mov
or
push
jbe
jbe
mov
shr
out
xchg
xchg
pop
adc
sub
xchg
cmp
cmp
xorb
lcall
lret
cmp
mov
jno
dec
cmpb
add
test
pop
fistpl
and
addr16
in
iret
mov
adcb
test
iret
mov
push
mov
shll
push
push
pop
out
dec
dec
pop
sbb
aaa
addb
in
orl
mov
lods
adc
cmp
push
dec
std
adc
xchg
lcall
ret
adc
jg,pt
movsl
sub
pop
xchg
rcrl
lods
jnp
repnz
and
dec
ss
dec
push
imul
out
jecxz
or
pop
or
push
dec
lock
adc
and
push
call
xchg
scas
mov
out
add
dec
adcl
cwtl
or
push
or
sbb
dec
outsl
cs
pop
inc
subb
adc
dec
dec
mov
bnd
pop
inc
pusha
add
mov
mov
iret
push
mov
inc
aam
pop
mov
stos
icebp
xor
es
aas
imul
pop
dec
jle
inc
xchg
jae
cmp
pop
outsb
es
cmpsb
mov
lahf
adcl
jne
out
sbb
lea
jb
in
cmp
orb
pop
lods
push
cpuid
scas
in
ds
pop
or
jg
scas
adc
ret
or
cltd
add
jns
jg
jge
cmp
ret
testb
xor
sarl
inc
mov
inc
dec
popf
out
pusha
jl
and
lret
movsl
ret
jb
clc
sub
or
mov
jbe,pt
jns
cli
push
add
mov
sbbl
leave
sbb
andb
xor
pop
es
loopne
cmp
stos
and
mov
pop
lds
shll
repz
nop
hlt
cmp
cld
pop
pushf
pop
sbb
pop
dec
or
sbb
sub
or
mov
pop
lods
mov
out
pop
jae
push
lret
and
inc
cmp
or
stos
xor
or
test
lcall
adc
lahf
gs
test
fmull
mov
lods
sbb
jns,pn
sbb
cmp
gs
add
movsl
pop
fimuls
fsubrl
add
leave
repnz
mov
sbb
and
adc
nop
idivl
int3
push
inc
push
cmp
cmp
inc
and
cli
and
in
outsb
aas
ds
push
lods
pop
inc
ds
cld
inc
sbb
inc
jg
test
and
jae
popa
jecxz
in
add
arpl
jecxz
xor
daa
aas
rcll
jp
daa
mov
fcomps
push
mov
scas
xchg
das
inc
pop
mov
sbb
add
outsl
lods
sbb
jg
sbb
int
pop
nop
dec
mov
mov
sbb
jns
or
sub
vdivps
int3
jb
mov
push
mov
daa
sbb
call
xor
popa
inc
cmpb
mov
mov
stc
sbb
xlat
pop
jp
xor
ljmp
js
rcll
or
jae
inc
jno
adc
cwtl
mov
inc
loop
cmp
sub
cmc
jmp
loope
data16
sarb
sti
mov
sub
mov
pop
jecxz
cli
mov
cmc
adc
xor
clc
jle
cmp
insb
jbe
ljmp
mov
call
push
adc
aam
mov
mov
xor
mov
incl
cmp
or
adc
xor
dec
in
jo
adc
leave
inc
sub
fisttpl
out
dec
push
sbb
sub
cmp
cmp
dec
sub
xchg
mov
scas
cmp
aam
add
es
mov
mov
out
adc
jecxz
aam
xchg
lcall
mov
xchg
jae
add
insb
pop
insl
shll
adc
pop
popa
mov
shl
cmp
inc
scas
ror
pusha
pop
insl
sub
ja
dec
aad
mov
out
dec
jns
stc
lods
or
imull
push
test
pop
or
inc
xlat
push
gs
flds
mov
sbb
call
xor
inc
lcall
pop
loopne
sbb
cwtl
xchg
fcmovnbe
xor
enter
hlt
add
mov
fnsave
dec
sbbb
std
sahf
stos
fsts
and
and
push
inc
cmp
dec
ficomps
dec
call
add
xor
xor
fs
mov
nop
mov
shrl
std
sub
insb
or
add
mov
push
push
clc
dec
ja
pop
and
out
daa
lea
rcl
jge
insl
lods
cmpsl
cmp
or
dec
mov
mov
in
push
idivb
int
jbe
push
pop
add
out
dec
sub
in
push
push
pop
lret
xchg
mov
stos
mov
cs
cmp
jnp
mov
cltd
mov
prefetch
pop
cs
hlt
adc
insb
dec
clc
daa
or
mov
jae
aad
jns
mov
sbb
mov
imul
add
jns
pop
pop
mov
pop
pop
aas
ret
rcrl
les
push
fistps
movsl
sub
adc
cmpsl
cmpsb
jbe
imul
xchg
mov
aam
inc
push
jo
mov
fldt
int3
enter
orl
xlat
sbb
fldt
dec
mov
sub
xchg
jo
xor
jo
aas
gs
fs
jne
push
dec
xor
hlt
pop
xchg
ret
insb
shlb
fs
outsb
mov
repz
push
movl
sarl
out
jne
lods
decb
loop
jge
jns
xor
sbb
cwtl
fadds
iret
sbb
test
xorl
and
dec
mov
call
cmp
and
inc
add
push
push
cwtl
sub
rcrl
push
scas
sub
inc
pushf
dec
xor
sub
cmpb
lds
sub
lcall
sti
jnp
or
das
mov
xchg
xchg
sbb
xchg
add
inc
mov
aaa
xlat
into
lret
jmp
std
aad
inc
xor
cld
cld
or
stos
adc
nop
arpl
cwtl
mov
ficomps
mov
cmp
addb
fimuls
sub
leave
mov
sub
cwtl
nop
shll
lock
jl
mov
gs
mov
data16
push
add
sub
iret
aad
je
stos
mov
fisubrl
cmpsb
int3
fisttpl
movsl
hlt
lret
mov
dec
push
pop
and
fwait
dec
mov
shll
mov
pop
int3
int3
add
loope
push
movsl
nop
aad
mov
jbe
fildll
testb
add
push
sub
addr16
mov
push
push
pop
sub
popf
and
dec
sub
ljmp
xor
xlat
push
xor
and
push
or
lock
shlb
test
cmp
and
adc
xor
addr16
mov
or
faddl
cmp
xchg
loop
fnstsw
cmp
cmp
stc
out
push
mov
mov
jp
mov
shll
mov
imul
loopne
dec
push
das
mov
mov
in
cmpl
inc
mov
mov
jle
in
loop
add
stc
xchg
push
in
mov
cmp
xchg
or
ss
int3
daa
xor
sbb
std
xor
add
inc
pop
sti
outsb
ja
cwtl
pushw
adc
lds
cltd
jbe
cmc
imul
xor
xchg
pusha
mov
sysenter
and
movb
std
adc
push
mov
test
xchg
std
mov
imul
mov
ss
ja
and
addr16
xor
pushf
aam
mov
inc
scas
push
out
sub
mov
jge
imul
push
mov
ljmp
cmp
jno
xchg
in
mov
sbb
int3
cmp
std
fadds
leave
sub
repz
cmp
ror
lods
out
aas
pop
movsl
sub
cmpsb
jg
mov
mov
sbb
data16
cmp
ja
inc
js
dec
movsb
repz
lret
adc
dec
fsubrs
lods
and
in
mov
cmp
pusha
adc
enter
stos
mov
jb
cltd
icebp
and
cwtl
mov
push
fwait
and
jo
loopne
jb
jg
stc
xchg
daa
add
sbb
push
xor
fildll
jb
mov
loope
arpl
ret
fstps
sub
gs
inc
fadds
push
cmp
mov
jle
inc
aad
mov
leave
lret
ss
mov
push
push
inc
jno
sub
cmp
or
mov
push
push
mov
shll
fwait
sbb
fnstenv
lahf
or
xchg
sbb
mov
jge
mov
inc
ljmp
fstpt
imulb
repnz
iret
mov
xorb
dec
push
pop
hlt
sbb
jp
pop
out
or
pop
inc
out
pop
dec
popa
cmp
roll
cmc
sub
stc
push
inc
lods
pop
inc
mov
and
sahf
pop
or
lock
int
jg
leave
mov
orl
jg
outsb
jns
out
sbb
nop
inc
xchg
insb
xchg
ds
xchg
cs
push
jge
insb
mov
mov
outsb
inc
push
cmpsl
push
mov
mov
push
rcrl
fldln2
mov
jns
int3
pusha
xchg
mov
xchg
pop
jmp
mov
les
cmp
int3
jbe
imul
es
mov
insl
jp
cld
jo
fcomps
mov
dec
lea
push
push
das
add
inc
jnp
enter
out
mov
pushf
jmp
lcall
cltd
movsl
dec
add
out
mov
cmp
call
stos
sub
pop
pop
push
jge
addr16
hlt
mov
mov
dec
sub
in
out
jmp
sbb
or
add
fldt
daa
lods
dec
and
inc
mov
pusha
filds
mov
sbb
dec
mov
mov
pop
jbe
xchg
dec
push
aad
movsb
push
fisubl
out
jns
out
xchg
aad
outsb
adc
jmp
mov
jle
push
mov
mov
incb
push
add
bound
pop
sub
call
sbb
jae
cmc
sbb
shrl
nop
xchg
cmp
inc
repz
outsl
das
jo
in
stos
add
out
loope
lcall
mov
aam
mov
cmp
jg
insl
sbb
ficomps
jne
shl
in
mov
and
fldcw
inc
mov
add
mov
sbbb
ja
imul
fadd
sbb
ds
xchg
mov
mov
adc
sbb
stos
lds
xchg
mov
pop
inc
push
les
sub
mov
pop
sub
aaa
or
fnstsw
jns
popf
xor
cmp
mov
add
mov
dec
push
push
or
fwait
ret
mov
out
fwait
aam
sub
or
adc
push
pop
dec
in
pop
mov
cld
stos
test
mov
push
xchg
mov
and
cmpsl
fstpl
mov
jl
push
lods
push
jecxz
out
mov
mov
in
es
insb
cmp
mov
add
inc
jno
push
enter
or
shr
mov
mov
lret
repz
outsl
sbb
or
shl
outsl
inc
int3
push
and
lea
cs
imul
push
repz
push
test
xchg
xor
dec
data16
jg
data16
mov
inc
fcomi
mov
push
mov
adcb
push
imul
out
ja
cmpsb
add
inc
pop
inc
popa
int
inc
push
and
jmp
outsb
xchg
mov
sub
es
add
pop
pop
outsl
mov
inc
mov
scas
xchg
add
sbb
jmp
push
pushf
aaa
mov
nop
inc
fyl2xp1
xchg
xor
push
jg
push
pop
or
or
insl
xchg
shrb
pushf
nop
adcb
push
cmp
cmp
push
in
pop
cld
mov
cmp
daa
add
outsl
dec
mov
out
dec
je
dec
and
sbb
aas
stos
xchg
fnstsw
mov
push
cmp
sbb
or
dec
jbe
dec
mov
pop
cmp
or
dec
in
push
ja
inc
in
sub
cmp
notl
and
jecxz
xor
adc
adc
int
stc
les
add
stc
rcrb
call
fldl
jo
add
pushf
dec
dec
cmpsl
mov
pop
push
insb
leave
pop
movsl
or
mov
imul
jb
inc
and
pop
and
mov
aad
xchg
leave
loope
pop
subl
add
ds
out
bound
push
jno
aaa
jbe
mov
push
sbb
hlt
mov
lea
loop
pushf
xor
sahf
es
orl
jne
repnz
inc
jge
fdivr
push
sub
pop
xor
and
sbb
pop
aaa
fists
insb
fsubl
mov
mov
mov
ffreep
jge
movsb
pop
into
xchg
pop
xchg
sub
jl
inc
movsl
mov
and
ret
fs
sbb
daa
mov
push
mov
sbb
mov
sysexit
cs
outsb
pop
adc
js
mov
iret
loope
dec
mov
leave
ss
mov
xor
movsb
fucom
stos
inc
pop
lock
sub
pop
push
lock
daa
pop
mov
inc
subl
sub
cmpsl
fs
stos
and
enter
xchg
jl
inc
jecxz
popl
pop
cmp
insl
add
pop
cmpsl
hlt
stc
lock
pop
leave
cmp
loopne
cmp
push
mov
pop
into
xchg
push
dec
fidivs
in
mov
or
cmpsb
or
pop
and
pop
adc
int3
mov
arpl
mov
orb
stc
out
jne
std
icebp
ret
cmc
mov
ss
stc
mov
inc
mov
jmp
cld
xlat
icebp
xchg
cmp
pop
cwtl
ror
cmp
pop
lods
mov
ja
stos
bound
adc
jge
add
lea
adc
icebp
gs
pop
in
movsl
stc
into
das
out
lea
pusha
and
xlat
das
test
loopne
mov
imul
jge
add
push
jbe
subl
decl
jb
sbb
dec
es
sbb
mov
test
jmp
icebp
mov
inc
mov
xchg
cmp
cmpsb
mov
inc
outsb
adc
pop
mov
jns
lret
stos
fcoml
sbb
stc
or
ljmp
dec
inc
lods
cltd
aad
cld
cmpsl
and
inc
pop
andb
into
pop
xlat
add
pushf
cmpsb
pop
test
incb
movsl
pop
or
das
vminss
leave
sub
scas
mov
aas
bswap
ss
push
cltd
pop
cmpsb
push
fdiv
pop
sub
mov
ljmp
in
push
dec
sarb
movaps
cmp
sarb
orl
sarb
loop
sbb
test
cmpsb
fisubrs
sti
mov
dec
daa
fidivrl
sub
lea
xor
mov
cmp
sbb
pusha
lds
ja
imul
out
push
jns
pop
lahf
xchg
or
imul
mov
cmp
arpl
or
outsw
mov
fists
movsb
and
xlat
out
call
pop
push
pusha
mov
sub
pop
or
int3
movsb
aaa
add
inc
cmc
pop
in
pop
sti
test
adc
out
jne
mov
mov
inc
mov
xchg
sbb
negb
out
or
push
jo
out
ds
test
out
out
add
cmpsb
fisubl
sbb
xor
dec
xchg
mov
fimull
mov
fadd
fs
std
xor
mov
test
and
notl
call
jl
test
std
sub
pusha
fstl
test
jno
xchg
mov
mov
push
mov
gs
push
adc
xcrypt-ctr
cmpsl
pop
cmp
mov
dec
push
xchg
icebp
rorl
jnp
xor
iret
subl
jne
inc
ret
imull
lcall
jmp
pop
cli
xchg
mov
les
mov
add
push
fstps
movsb
adc
jo
sbb
call
int3
es
addr16
mov
movsl
jmp
push
bnd
pop
dec
iret
js
pusha
add
test
adc
sbb
lea
in
je
inc
xor
enter
in
inc
sbb
push
push
xchg
or
outsb
data16
lock
or
sub
js
loopne
pop
sbb
daa
lods
in
dec
lret
std
dec
arpl
pop
adc
ljmp
dec
sbb
mov
ror
sub
and
movsb
scas
popf
mov
aam
xor
ds
lret
mov
nop
and
dec
pop
fistps
sbb
dec
shll
cmpsl
or
orl
fs
pop
jge
negl
xor
cs
dec
and
adc
sbb
nop
ret
ret
sar
and
xchg
shl
jbe
lcall
out
inc
mov
lcall
push
decl
gs
and
jns
push
inc
mov
mov
inc
cwtl
loop
push
sub
push
pop
mov
imul
mov
push
andb
xchg
rcll
cmpsb
and
mov
ret
xor
out
cs
shrb
jae
fsubs
adc
push
mov
mov
dec
lret
movsl
lcall
fwait
enter
add
dec
stc
mov
out
dec
xchg
in
xor
dec
cltd
xor
add
push
out
lea
in
test
pop
popa
and
pushf
dec
push
daa
sub
popa
int
push
and
pusha
mov
dec
xlat
mov
adc
or
fcoms
mov
inc
cmp
pop
jp
cmp
aad
cmp
out
mov
aam
cmp
xor
imul
xchg
test
subl
mov
lds
mov
mull
in
add
inc
out
popa
adc
adc
jp
mov
les
sub
xor
push
cmpl
jmp
out
aas
adc
mov
mov
rorl
int
add
push
or
adc
test
stos
rcl
aas
pop
jo
cld
add
test
into
fadds
pop
ds
and
daa
cmp
orb
inc
mov
addl
aad
clc
push
xchg
test
loopne
push
sahf
xor
in
xchg
sbb
cmc
add
lock
fbld
loopne
fsub
jnp
out
jp
movq
dec
cmpsl
cmp
mov
mov
test
mov
repz
xorb
inc
cli
aas
cmp
sub
scas
dec
pop
mov
pop
popf
dec
cmpsl
jne
xor
or
add
adc
pop
lods
loope
sub
pop
mov
inc
mov
dec
fs
mov
dec
pop
ror
notl
fstps
sysenter
xchg
inc
adc
adc
rorl
fimuls
lahf
outsl
out
dec
sub
fucom
mov
or
xchg
lock
jg
pop
push
int3
jns
xor
sbb
mov
fmull
jmp
in
sbb
push
jne
lret
lods
cs
sbb
dec
outsb
xor
pop
mov
sub
xchg
lods
cmp
push
int3
movsl
popf
movb
sub
mov
ret
clc
sub
aad
xchg
repz
pop
pop
dec
neg
enter
js
cmp
push
pop
dec
movsb
mov
and
xchg
inc
stc
jnp
push
pusha
pop
add
sbb
pop
cmc
dec
cwtl
iret
lods
adc
stc
ret
pop
mov
dec
lcall
mov
fsubrs
or
mov
in
jnp
mov
dec
ss
push
or
out
pop
jnp
movsb
or
mov
mov
dec
pop
iret
das
in
mov
lahf
rorb
movsb
mov
das
xor
pushfw
std
pusha
shlb
loop
push
push
xchg
in
inc
adc
mov
mov
js
shrb
stc
pop
push
xchg
mov
into
cmpsb
cmpsl
out
push
imul
xor
stc
or
xchg
xchg
mov
jns
pop
dec
and
int3
negl
xchg
insl
pushf
pop
add
loopne
into
xchg
adc
dec
mov
and
mov
int3
xor
pop
push
mov
and
fadds
jne
mov
push
clc
jbe
es
jno
add
and
js
fistpll
test
or
scas
pop
stc
mov
or
sub
test
mov
and
repz
repz
xchg
sub
and
dec
sti
in
gs
xchg
out
mov
pop
jl
cmpsb
xor
sbb
xor
test
xor
push
into
loopne
stc
mov
and
add
aad
push
jge
fisubrs
in
insl
loop
jbe,pt
hlt
movb
adc
cmpsl
scas
dec
psllw
mov
punpcklbw
push
push
fs
or
adc
cmp
mov
outsb
ss
cmp
dec
js
cli
inc
es
int3
sti
pop
sub
loop
xor
push
int
lea
cmpsb
push
das
test
scas
test
xor
stc
sar
push
inc
mov
jnp
jno
pop
jns
mov
int
lret
xchg
sub
sub
popf
int
imul
mov
add
inc
xchg
sub
popa
jo
dec
loop
ds
std
mov
iret
in
frstor
pop
mov
icebp
jge
sahf
out
ds
or
js
addr16
sub
mov
jo
std
add
push
pop
pop
insb
inc
fcomp
jecxz
add
mov
rclb
and
push
ljmp
mov
push
jl
data16
scas
fsubs
inc
add
imul
iret
scas
divb
mov
aaa
lahf
in
mov
sti
bnd
inc
xchg
sub
imul
push
xor
ret
lret
mov
xchg
pop
fistpll
adc
sbb
and
xchg
ret
pop
add
stos
insl
bound
inc
in
cmp
fisubs
xchg
pop
cwtl
pushf
jle
clc
xchg
cmp
mov
popf
mov
jg
xor
push
mov
add
roll
rcr
filds
out
lcall
cld
mov
mov
mov
fnstenv
lret
pop
jo
jbe
dec
pop
aad
pop
outsb
jne
sbb
std
sbb
push
add
or
mov
cwtl
sarb
lods
jno
addr16
adc
adc
pop
ret
push
mov
std
mov
xor
sbb
jae
pop
jnp
mov
es
lds
arpl
mov
xorb
pop
adc
pop
arpl
mov
das
jne
push
or
pop
pop
dec
lds
out
faddp
js
cmp
sub
jbe
hlt
mov
cmp
std
stos
das
ret
insb
jno
stc
mov
xchg
mov
push
test
loopne
cmpsb
jno
aaa
sbb
cli
push
xlat
inc
jmp
add
mov
les
xchg
or
adc
sbb
cwtl
mov
mov
mov
test
mov
shlb
stc
mov
jae
add
test
sub
into
idivb
lcall
dec
jle
std
addr16
mov
or
xchg
xchg
test
mov
fcompl
iret
fwait
knotb
mov
das
insl
insl
xchg
inc
sub
cmp
int
lods
pop
lcall
sbb
mov
push
sub
mov
sub
sti
sahf
inc
rorb
negb
ja
loopne
mov
fidivs
push
cmp
addr16
cltd
or
jne
mov
mov
mov
mov
xchg
fs
cltd
aam
leave
cmp
pop
pushf
xchg
xor
insb
repz
pop
cltd
xchg
dec
fmull
push
and
push
nop
push
imul
test
sub
arpl
cmp
cltd
pop
lret
or
in
pop
sub
jno
cld
cmpsb
push
ja
andl
stos
lret
push
aas
test
mov
cli
inc
push
stos
sub
out
sbb
xchg
leave
cld
pop
inc
cld
cmpsl
mov
cld
mov
jge
inc
mov
addl
icebp
push
sub
shr
das
jle
in
mov
xchg
psubsb
mov
int
push
lret
mov
clc
pop
out
dec
dec
dec
dec
stos
lret
sub
mov
mov
sbb
imul
sub
fcoms
jge
adc
cmc
cld
xchg
ja
pushf
jmp
dec
sbb
sarb
xchg
mov
popa
pop
jnp
sbb
lds
loope
inc
push
bound
aas
ljmp
and
cs
or
and
icebp
inc
jb
sbb
mov
arpl
jecxz
out
or
leave
decl
scas
loope
ljmp
pop
loopne
cs
sbb
jle
cmp
jg
add
dec
jo
ds
xor
lret
mov
test
outsb
cmpsl
ljmp
stos
sbb
imul
into
inc
pop
enter
shll
push
out
fldt
jae
cmc
pop
out
xchg
shrb
sub
adc
fisubl
lods
test
jbe
add
push
dec
cmp
es
cmp
std
ss
aas
push
push
jbe
adc
jae
dec
test
mov
jno
push
divl
xchg
push
jp
pop
jbe
jo
cmp
int
lods
xchg
jmp
adc
jmp
cmp
jecxz
fsubrs
sti
dec
push
es
aam
ror
out
xor
xlat
jecxz
dec
cld
pusha
pop
stos
mov
mov
and
lods
fiaddl
shrl
icebp
jo
cs
inc
movsb
sub
hlt
or
jmp
lods
ret
xchg
push
pop
mov
test
jo
jge
xchg
or
fwait
or
pushf
shrl
cmpsl
loope
stos
sarb
mov
adc
xchg
xchg
ss
sbb
popf
mov
cmp
scas
mov
xlat
sahf
sahf
aad
push
adc
push
sbb
std
jnp
dec
cmp
rolb
loope
lcall
movsl
sbb
pop
xor
add
insl
sahf
stos
jne
dec
pop
sub
pushf
xor
ljmp
inc
in
push
and
pusha
pop
fwait
mov
in
mov
xor
aas
push
cmc
inc
dec
push
mov
movaps
mulb
jmp
insl
inc
sbb
shll
dec
push
jmp
int
ljmp
lods
jmp
insb
cli
inc
movsl
xor
orb
mov
push
adc
movmskps
movsb
lea
xlat
addl
xor
adcl
dec
push
es
xchg
mov
and
gs
es
test
jno
daa
in
pop
lds
in
shrb
jb
mov
mov
fdivs
inc
iret
lods
sbb
cli
leave
test
add
fnstcw
rorl
or
in
mov
js
adc
mov
xorl
lds
pop
sbb
cld
pop
xor
or
and
rorb
iret
in
push
mov
adc
fsubrs
clc
mov
daa
push
and
inc
addr16
xlat
sbb
mov
imul
sbb
xchg
out
and
arpl
cld
in
leave
mov
fwait
xor
jo
cmp
test
out
lods
sbb
ret
adc
push
sub
add
sbb
pop
and
inc
mov
add
jmp
xlat
push
mov
jge
mov
add
push
and
lahf
call
hlt
sub
push
inc
cmp
jnp
push
stc
rcrb
int
mov
push
pop
out
subl
and
xchg
cmpsl
test
stos
outsl
jmp
movsl
int
pop
mov
addr16
inc
jne
dec
outsl
push
push
cmc
and
mov
out
insb
fwait
pop
sti
sub
cli
fnsave
mov
bound
push
loop
lcall
inc
or
adc
in
stos
ljmp
data16
or
lret
mov
in
jle
test
xorl
jbe
jmp
fstps
ss
imul
js
testb
aaa
repz
dec
scas
xchg
roll
sub
inc
or
leave
sbb
js
insb
scas
xchg
repz
jmp
sbb
sbb
pop
dec
jmp
inc
subl
inc
inc
fwait
or
xorl
inc
xchg
dec
sbb
xadd
stos
jno
lods
out
dec
icebp
cld
pop
les
pushl
sar
aad
shl
scas
in
xchg
bound
mov
jno
mov
sti
mov
in
dec
jge
scas
jmp
scas
ficomps
filds
repz
pop
jne
and
sub
jno
cmp
not
adcl
mov
in
jnp
mov
aad
cmp
out
sub
pcmpeqd
add
dec
xor
xlat
jge
imulb
mov
cmpsb
xchg
aas
out
orb
cmp
jmp
call
arpl
inc
std
int
lods
enter
movsl
xor
sbb
test
sub
sbb
mov
fwait
icebp
push
jp
cltd
test
cld
or
ret
pop
mov
popf
iret
xlat
xor
dec
aaa
dec
add
inc
aam
sub
sbb
sub
and
and
aad
pop
mov
push
jo
sbb
rcll
das
xor
fnstenv
and
add
insl
and
andb
pop
adc
movsb
fiaddl
call
push
and
cmp
jmp
mov
repnz
cld
push
inc
lods
daa
dec
outsl
adc
adc
lods
adc
sbb
leave
pop
xchg
or
xchg
mov
cmp
add
ret
lahf
dec
fstpl
nop
test
mov
pop
scas
xor
movsb
cmp
lods
clc
aam
fs
sub
lahf
sbb
test
jp
jb,pt
mov
lcall
ljmp
jmp
cmc
test
pushf
inc
es
flds
mov
dec
scas
in
arpl
mov
out
shll
xor
cmp
movsl
subl
add
fs
aam
mov
xor
inc
dec
cmp
xchg
push
pop
cli
shrb
xor
ss
in
hlt
icebp
adc
adcb
xor
aaa
xor
pop
pop
push
repz
xchg
sti
clc
push
nop
pop
push
mov
cmpsl
imul
mov
pop
add
push
lahf
rolb
std
cmp
movsb
rorl
jnp
mov
push
pop
inc
mov
push
ficomps
adcb
adc
popf
and
cmp
push
shrl
movsb
out
popa
aam
jns
iret
mov
pop
jns
or
xchg
mov
jae
lds
mov
mov
mov
shlb
dec
and
shll
cmovbe
pushf
incw
in
lods
enter
ret
fld
push
fnstcw
push
xchg
lea
andb
popf
cmp
gs
loopne
icebp
inc
mov
insl
inc
daa
jae
lea
adc
sbb
jbe
daa
fcoms
sahf
jbe
add
and
adc
xor
inc
es
sbb
testl
outsb
xchg
and
outsb
je
insb
sbb
jae
mov
mov
dec
jbe
cltd
mov
test
adc
mov
repz
data16
es
aas
xchg
out
pop
or
arpl
jge
icebp
lods
stos
pop
cmp
add
push
sbb
shrb
inc
ds
sarb
dec
jnp
insb
fmuls
test
inc
add
cmp
movsb
mov
pop
loop
in
push
outsb
pop
cld
mov
and
hlt
bound
inc
ljmp
lods
mov
icebp
fdiv
jle
cltd
mov
pop
dec
adc
pavgb
cmp
xor
lret
insb
mov
lret
and
das
lcall
popf
addr16
ss
pop
stc
sar
inc
insb
jl
lods
call
push
mov
inc
outsb
lcall
cs
imul
imul
add
sub
dec
push
xchg
and
jmp
test
in
out
adc
push
lea
rclb
in
cli
add
or
xchg
je
cmpsl
xor
fiaddl
popf
xchg
or
test
add
sbb
sbb
stos
pop
add
sahf
out
adc
fldcw
mov
and
push
and
dec
insb
push
push
cmp
pushl
shlb
push
mov
mov
pop
push
push
jmp
cmp
xchg
sub
xlat
sub
push
or
xchg
outsl
pop
in
scas
jp
clc
jae
xor
add
js
xor
jle
mov
xchg
lds
test
sbb
clc
out
sbb
xor
mov
cmc
je
scas
cmp
mov
adc
mov
movhps
lock
push
notb
sub
pop
imul
pushl
insb
shrl
or
xor
xchg
out
or
test
jo
mov
incb
xchg
mov
mov
push
cwtl
jne
scas
popa
jns
loop
in
adc
add
mov
push
mov
in
or
jns
lea
ljmp
xchg
cmp
loopne
inc
gs
and
pop
sub
imul
pop
loopne
pop
pusha
scas
subl
or
jecxz
inc
ja
jmp
pop
jge
dec
xchg
gs
call
push
dec
xlat
rcrl
inc
adc
test
mov
xor
pushl
add
imul
cli
inc
add
lock
lret
dec
xor
std
imul
jecxz
or
mov
jnp
jl
push
mov
push
subl
xlat
jno
sbb
scas
out
mov
ljmp
mov
pop
je
dec
ret
repz
cmp
jno
xor
mov
inc
xchg
pop
push
jbe
arpl
inc
fcmovbe
xchg
inc
add
aaa
cltd
adc
cmp
push
loope
js
lea
popa
cmpl
push
in
jle
shr
add
ret
push
cmpsb
mov
cmpb
popa
sub
out
icebp
mov
scas
add
xchg
lds
stc
mov
dec
inc
cmp
aas
imul
sbb
or
ljmp
push
mov
inc
and
dec
daa
pop
icebp
pop
iret
adc
mov
jp
dec
mov
movsl
jl
popa
mov
je
pop
daa
movsb
mov
test
inc
lret
adc
mov
outsl
sbbb
sub
pop
cmp
add
das
cmpsb
daa
fwait
test
rorl
lahf
cld
jmp
jns
fnstcw
pusha
adc
mov
xor
test
mov
pushf
dec
sbb
push
les
scas
into
outsl
xorl
dec
pop
in
dec
push
jp
jl
mov
dec
rol
mov
mov
mov
outsl
dec
mov
int
into
test
ja
mov
push
scas
js
jne
mov
in
bound
fdivr
push
js
arpl
cmc
je
push
xchg
das
std
sub
cmp
xlat
out
xchg
sub
stc
cmp
int3
mov
cmpsb
push
nop
xchg
jge
lret
or
fdivrl
push
sahf
and
dec
jnp
or
inc
in
das
arpl
shrl
rclb
popa
mov
mov
in
adcb
int3
lahf
adc
mov
and
xchg
jo
xor
jmp
add
aas
enter
mov
mov
inc
dec
cmc
or
push
pop
lahf
push
fidivl
test
cmp
shlb
je
dec
test
shlb
outsb
fidivrl
jmp
into
or
mov
pop
out
sub
in
lcall
cmc
les
cmpsb
dec
popf
addr16
loope
int3
out
in
pushf
mov
xchg
jge
mov
push
lcall
inc
cmp
inc
icebp
jmp
popf
pop
and
and
lcall
mov
xchg
pop
std
mov
xchg
loop
mov
mov
and
gs
ljmp
pop
pop
adc
xor
sbb
and
mov
sbb
pop
jnp
or
mov
dec
clc
sbb
pop
outsl
xor
stc
sub
and
cmp
mov
in
or
adc
faddl
lahf
fwait
aaa
mov
test
call
mov
mov
mov
xlat
cli
add
add
or
mov
xor
jmp
enter
xchg
andb
testl
pop
push
ret
stos
imul
jge
imul
test
in
out
in
mov
cmp
mov
mov
push
adc
ss
adc
pop
inc
lret
das
arpl
xchg
xor
pop
or
stos
fincstp
dec
faddp
jnp
pop
mov
push
orl
outsl
repz
pop
pop
es
notl
push
mov
jb
push
clc
clc
pop
pop
cwtl
sub
test
cld
pop
jge
in
cmpsb
push
adcl
mov
cld
mov
dec
lcall
insl
sbb
sub
lcall
pushf
shrl
fldl
pusha
jo
sahf
repnz
add
mov
out
xchg
in
cld
jmp
mov
in
adc
pop
xchg
sbb
ja
add
lds
lods
stos
jno
pop
iret
lret
out
fbld
addr16
in
out
mov
pop
mov
xchg
lret
mov
clc
ljmp
xlat
gs
dec
cld
movsb
push
pop
in
mov
mov
lahf
mov
dec
test
sub
add
lahf
pop
pop
jmp
shll
movsl
rolb
add
das
pop
out
dec
push
rcll
dec
xchg
or
push
aas
mov
dec
pop
mov
cmp
push
in
xchg
test
mov
xlat
mov
bound
cmp
sbb
ss
scas
push
xor
inc
stc
and
pop
mov
or
test
xchg
jg
ljmp
push
or
ret
out
scas
sahf
jo
movsl
jb
and
out
jnp
or
sbb
rorl
pop
push
popf
add
pop
test
repz
test
packssdw
sbb
jbe
std
clc
lods
imul
jle
adc
les
test
loope
ljmp
or
cli
icebp
jno
shrb
fistpl
mov
jb
inc
inc
jmp
add
sub
dec
mov
fwait
sub
enter
call
call
fucomp
mov
and
pop
xor
cmp
jno
or
and
jo
mov
xchg
bound
fisttpl
in
mov
aas
xor
dec
mov
rcrb
outsb
adc
fs
scas
rol
fldl
pusha
xor
aas
add
xor
test
xchg
and
sub
cmp
add
aam
movsl
cmc
out
adc
outsb
iret
inc
movl
jp
xor
sbb
and
lea
test
mov
ja
movsl
sub
movsb
push
rep
sarl
mov
sbb
enter
cmpb
jne
xor
fcmovbe
push
and
or
pop
fsubrp
iret
outsb
scas
out
clc
pop
pop
sub
mov
and
sub
movsl
mov
insb
sub
icebp
sti
or
xchg
adc
dec
aad
jge
test
jno
xchg
jnp
xchg
adc
sub
inc
push
rcll
dec
inc
push
jmp
cmp
inc
in
sarl
lret
adc
add
xor
sub
sbb
sahf
jmp
sbb
lahf
lcall
outsl
mov
ds
lods
int3
pusha
inc
rcrb
dec
imul
int3
fsub
bound
mov
push
lock
xchg
add
and
mov
jle
xlat
xchg
cmc
push
dec
ret
dec
pop
stc
out
cmp
push
add
adc
push
std
ret
jl
xchg
jg
test
adc
rcrl
insb
lods
clc
mov
mov
in
sub
dec
fs
test
cmp
jle
or
adcl
andb
icebp
push
mov
sub
adc
popf
out
subb
mov
sub
sbb
frstor
pushf
cli
stc
test
mov
or
movsb
pop
mov
lea
inc
outsb
adc
addr16
pop
dec
mov
jae
shlb
inc
mov
repnz
jl
lock
mov
pop
clc
ficoml
out
cmpsb
inc
mov
aas
leave
imul
je
cmpsl
and
adc
mov
test
loop
xchg
fs
out
outsl
inc
sbb
mov
and
jnp
mov
sbb
or
mov
pop
inc
jnp
imul
iret
pop
in
and
inc
jo
dec
xchg
and
mov
pop
fwait
mov
pop
repnz
mov
je
mov
xchg
and
shrl
lea
mov
int
xor
xlat
subl
xchg
mov
je,pt
lcall
out
fdivrp
push
push
rcrb
mov
mov
jne
out
je
cmc
loop
dec
aam
push
loop
inc
add
sti
sbb
sahf
xor
outsl
rorl
pop
inc
pop
lds
pop
fisttps
rclb
jo
and
cmp
xor
ret
mov
sbb
jmp
mov
jmp
push
mov
subl
test
pop
js
ljmp
fnstsw
pop
orl
mov
mov
movl
or
cmpsb
gs
sbb
push
outsl
push
xchg
les
ret
leave
jae
test
int
fwait
sbb
xchg
jmp
pop
mov
pop
pop
sbb
daa
xchg
mov
cmpsl
push
imul
sahf
js
mov
daa
push
fucom
and
mov
pop
jp
sahf
test
push
dec
inc
jge
fldenv
ret
iret
in
jo
mov
jge
test
fnsave
data16
adc
es
jmp
jp
jmp
push
cmp
lods
pop
pop
out
sbb
mov
dec
movsb
xchg
adc
and
push
mov
mov
inc
and
mov
imul
hlt
js
xchg
cmpsb
mov
add
insl
outsl
pop
aas
adc
lods
cmp
mov
xchg
add
mov
mov
mov
jmp
je
ret
movsl
mov
pop
cmp
stos
lcall
mov
bound
mov
outsb
scas
in
cli
cmpsl
js
loop
add
fimull
scas
and
push
lcall
push
stc
daa
loope
fucomi
mov
dec
mov
inc
jne
lcall
stc
hlt
jo
shl
mov
add
mov
mov
xchg
test
dec
mov
fistl
add
inc
inc
imul
outsb
movsl
rcrl
loope
fstpl
inc
sbb
adc
or
pop
mov
mov
sahf
push
cltd
ss
outsl
jb
sub
pop
jbe
repz
lods
inc
adc
push
shll
popa
and
sbb
and
mov
fwait
es
jp
and
xchg
fcomps
mov
dec
jge
aad
sub
mov
fnstsw
xchg
sarb
inc
dec
lods
push
in
mov
ljmp
mov
pop
stos
adc
ret
aas
outsb
xor
add
inc
sbb
cmc
push
push
mov
rcr
xchg
pop
es
push
mov
push
inc
dec
ljmp
mov
loop
imul
cmpsb
pop
ja
sahf
fisubl
js
mov
sub
es
mov
push
xchg
xchg
xchg
or
loopne
jecxz
xor
cs
inc
into
pop
gs
aas
mov
pop
adc
cmpsl
sbb
dec
pop
add
ds
jno
mov
stos
mulb
lret
cmpsl
sub
pop
mov
lret
mov
movsl
mov
sub
les
scas
adc
pop
dec
test
xor
pop
ljmp
mov
cmpsb
dec
mov
or
notl
stos
jb
loope
dec
sub
cmpsl
jge
xchg
shll
sahf
add
jmp
dec
in
es
mov
jno
pop
popa
or
sub
pop
mov
sbb
int
mov
ret
and
fwait
sub
or
idiv
repz
jmp
lods
push
je
aas
jecxz
push
fwait
mov
dec
fisubrl
aam
insl
fdivrl
ret
popf
add
gs
adc
sub
push
mov
cmc
lcall
movsb
nop
out
adc
xlat
fstpt
xlat
orb
call
sub
dec
in
or
icebp
mov
stos
ror
and
imul
push
push
adc
popa
fucomi
cmp
xchg
std
add
cmp
jns
and
sbb
mov
pop
sbb
call
and
dec
adc
lret
mov
leave
push
rclb
pop
mov
mov
jle
dec
popa
nop
jbe
and
scas
mov
jns
pop
std
icebp
je
js
and
push
ljmp
cmc
test
jp
sbb
pop
add
mov
ja
test
cmc
inc
clc
cltd
outsl
leave
xor
ss
mov
cmp
popa
movsb
dec
loopne
add
shr
and
mov
jns
dec
fiaddl
sti
std
insl
xchg
mov
das
sub
ss
mov
mov
inc
push
int3
dec
mov
into
ja
jno
es
int3
push
mov
jo
inc
nop
sbb
call
in
push
jne
jns
adc
sbb
nop
inc
gs
stos
mov
int
xchg
inc
sbb
dec
push
jne
cld
gs
mov
cmp
std
sub
xlat
mov
test
cli
inc
rep
ret
aad
sbb
out
fdivrp
fimull
inc
imul
fisttps
pop
jno,pn
movsb
int3
inc
js
jo
push
imul
pop
pop
sbb
push
rcrb
xchg
push
insb
jae
loopne
pop
outsb
cmp
hlt
and
dec
loop
cs
je
fcmovu
cmpsl
jo
repnz
hlt
bound
pop
mov
xor
mov
push
stos
insb
clc
outsl
lret
in
shll
mov
xchg
pop
lods
lock
pop
ret
adc
adc
xor
mov
daa
sbb
push
dec
mov
push
add
sub
fnstenv
mov
in
dec
or
lcall
jl
insb
bound
lcall
aam
mov
mov
adc
jns
test
push
in
fistps
push
pop
incl
aad
jmp
cmp
stos
adc
icebp
leave
lcall
adc
sub
cs
sti
lods
mov
fidivs
fs
jmp
call
xlat
leave
testb
inc
push
adc
movsb
lea
jnp
add
lret
jne
movb
jmp
xchg
ret
adc
jge
sti
out
mov
sbb
mov
and
add
push
mov
pop
add
add
sub
mov
ror
cmp
inc
and
sbb
sub
daa
mov
adc
ret
lea
xor
andl
jl
in
mull
out
mov
dec
mov
mov
enter
rclb
mov
sbb
xchg
sub
xchg
fst
bound
lods
wbinvd
mov
sbb
xchg
cmp
aaa
sbb
cltd
dec
sarl
sub
pop
and
rclb
mov
fxtract
push
or
xchg
inc
andb
cmpsb
testl
nop
movb
dec
daa
scas
sbb
dec
push
sub
inc
sbb
jns
clc
pop
mov
stos
adc
in
data16
pop
xchg
mov
pop
imul
ss
cmp
lods
mov
cs
out
lods
push
push
push
int
dec
xor
jecxz
lods
mov
pop
mov
lea
mov
inc
dec
push
jbe
dec
fldl
bound
xchg
sub
shll
cmc
mov
add
push
movsb
mov
sbb
xor
sbb
bound
popf
leave
fidivrs
jb
lret
pop
xchg
arpl
scas
cltd
mov
mov
cmp
cmp
fwait
xchg
xchg
out
push
lahf
fisttpl
not
sbb
mov
insl
pushf
push
jle
inc
lock
jmp
std
fidivrl
dec
pop
or
cmpsl
xchg
push
inc
mov
pop
cli
push
push
scas
repz
mov
mov
cltd
add
popf
cs
sbb
xchg
inc
lahf
or
mov
mov
jecxz
loope
lahf
xchg
mov
xor
fisubs
ret
sub
pop
pushf
lahf
stc
ss
mov
or
std
icebp
mov
fstps
or
repz
ret
pop
pop
or
mov
fwait
dec
xchg
data16
nop
xor
les
nop
js
or
push
xlat
incb
loopne
lods
les
andb
ret
loop,pn
scas
fwait
inc
addb
add
movsl
lret
leave
mov
pop
adc
or
xchg
sbb
and
in
and
and
jns
xchg
in
pop
pop
inc
testl
bound
lahf
mov
sub
xchg
adcl
outsb
and
rorb
cld
add
xchg
int3
dec
dec
jp
mov
lods
pop
pop
fcomps
lcall
mov
js
push
cmp
pop
pop
cmp
loop
cmc
push
int
ljmp
or
sbb
pop
lret
jbe
fcmovne
out
scas
mov
or
mov
cmc
mov
movb
scas
mov
pop
imul
pop
cmp
xor
lahf
movsb
movsl
cmp
fdivs
jne
cwtl
ljmp
pop
mov
cmp
loope
push
push
stos
into
fwait
dec
cmpsl
xor
fs
push
addl
addb
leave
cmp
repz
aad
dec
push
sub
add
sub
and
nop
sbb
jp
jge
sbb
cld
xchg
pop
jl,pn
inc
adc
pop
xor
mov
xor
andb
cld
sbb
sbb
adc
gs
ret
repnz
add
cmc
pop
sahf
xor
add
lret
mov
sub
loop,pn
lock
clc
mov
adc
mov
mov
jge
lret
pop
and
pop
outsl
imul
jo
dec
or
int3
shrb
stc
das
mov
enter
sbb
xchg
outsb
push
jecxz
xor
and
sbb
and
divb
inc
adc
push
mov
mov
lods
loop
mov
ljmp
lea
subb
sub
int
pusha
jbe
sub
pusha
stc
test
in
in
and
push
sub
fxch
add
sbb
test
adc
into
lds
dec
fildll
mov
mov
xchg
je
fs
lock
jae
stos
xor
jmp
imul
adc
test
jecxz
sbb
inc
pop
dec
cli
pop
xchg
daa
lods
incl
inc
jge
mov
call
cmpsb
gs
adc
sarb
xchg
push
push
iret
ss
pushf
or
popf
cs
push
adcl
jge
fnstcw
sub
int
lea
pop
call
sub
fistpll
lret
in
mov
sub
divb
xor
mov
dec
scas
lock
fs
inc
les
jb
lret
nop
cwtl
mov
sbb
in
mov
pop
aas
xchg
sbb
dec
rolb
popf
xchg
sub
mov
stos
es
jp
ljmp
inc
xor
cmp
inc
in
jmp
mov
jg
jmp
xchg
std
out
movsl
xchg
xchg
cmp
adc
pop
out
jns
int3
test
ja
mov
xchg
adc
cwtl
ror
sbb
sub
shr
mov
fnsave
jb
or
addr16
dec
add
pusha
pop
mov
adc
psubd
adc
add
insl
cltd
es
mov
popf
mov
jmp
inc
xchg
in
or
sbb
loopne
jnp
stos
call
push
cmp
sub
int
in
mov
js
mov
cmp
sub
addr16
in
gs
out
xchg
inc
pop
mov
xor
add
mov
xor
lock
repnz
push
mov
dec
inc
mov
sub
repnz
addr16
fisubl
dec
lret
mov
std
jns
popl
push
scas
aad
pushf
sub
aaa
mov
dec
push
inc
or
mov
or
ds
out
jne
int
mov
sbbb
mov
fsubr
add
mov
sbb
test
push
out
cmc
push
imul
pop
jg
test
fcmovu
sbb
jl
mov
or
stc
jmp
push
lea
test
adc
andl
mov
or
pop
adc
mov
lds
xchg
sub
int
lret
cmp
popf
test
pop
pop
fbld
lcall
sbb
jbe
test
fidivs
jns
das
icebp
je
fadds
fs
or
dec
repnz
cmp
jle
mov
dec
repnz
lret
sbb
mov
testb
sbb
sbb
sbb
ljmp
push
mov
sbb
mov
test
inc
loopne
fs
pop
xchg
push
cltd
out
sub
dec
pop
jo
adc
push
popa
push
daa
inc
mov
insb
push
stc
fldl
inc
jmp
pushf
shrb
add
add
cli
loope
sub
xor
repz
pop
lods
sarb
insl
pop
mov
push
lcall
sub
fsubrs
mov
lea
das
add
daa
inc
sub
cmp
test
mov
jle
rorl
jmp
test
lret
sub
push
pop
push
scas
lahf
aaa
xchg
rorb
icebp
dec
adcl
std
lret
ljmp
enter
dec
stc
pop
adc
cwtl
cli
pop
mov
sub
xor
mov
lods
push
in
andb
movsl
jae
mov
xchg
in
add
iret
sub
xchg
sti
mov
xchg
popa
ja
imul
repz
mov
iret
cmpl
shrl
lahf
push
popa
leave
bound
push
add
push
or
cmc
test
aaa
aaa
add
adc
push
ljmp
fwait
adc
cmp
sub
or
loope
fwait
sbb
int3
sti
repz
push
rorl
jns
insb
xchg
jb
ret
push
inc
mov
cltd
add
fistpl
pop
xlat
xchg
fcmove
arpl
adc
inc
cmp
enter
mov
test
arpl
test
jge
stos
mov
daa
orb
jle
loop
mov
daa
out
loope
pop
int3
push
push
sbb
sbb
aam
bsf
inc
cld
sub
sbb
cli
lods
int3
push
jns
out
dec
and
fxam
not
into
push
test
insb
test
mov
push
jno
adc
int
scas
sbb
aaa
rorb
adc
mov
jp
sub
icebp
mov
and
shlb
sbb
push
or
fldl
jnp
or
lahf
xchg
mov
jecxz
dec
xchg
sbb
aas
inc
fmull
mov
push
mov
sbb
stc
mov
inc
jmp
subl
inc
push
call
cmp
pop
int
hlt
outsl
adc
rcll
shlb
jp
repnz
lds
sti
loop
xor
mov
dec
xchg
rcrb
push
sub
sti
jbe
xor
sub
inc
push
pushf
xchg
and
std
out
jge
das
repz
arpl
repz
sti
xchg
insb
fdivrl
push
adc
test
push
jnp
pop
test
outsb
inc
sub
jg
cmovno
ficompl
sbb
out
jmp
outsl
mov
pop
xor
mov
dec
aaa
and
inc
sub
jg
and
faddl
inc
out
xchg
adc
xor
mov
int
cmp
cltd
sbb
lds
push
or
out
and
xchg
xor
jl,pn
loopne
shl
popf
inc
lahf
xchg
sbb
sbb
js
jg
pop
clc
test
aaa
call
js
sti
stos
cs
dec
into
ss
mov
mov
rorl
mov
loop
and
test
adc
mov
lods
sahf
or
lret
ljmp
mov
cmp
sub
jne
ljmp
dec
pop
sbb
fcomps
fldenv
jmp
shlb
sub
int
adc
sbb
add
cmp
adc
shlb
sahf
pop
sub
rclb
adc
leave
arpl
jbe
cmp
fadds
and
iret
and
cmp
dec
cmpsl
sub
add
pop
pop
xor
arpl
xchg
outsl
pushf
gs
pushf
dec
ss
add
aam
xor
call
fimull
daa
mov
sbb
cmp
ficomps
adc
in
sub
jmp
xchg
mov
sti
fst
xchg
insb
in
sub
cmp
ja
test
pop
inc
jg
rcrl
mov
mov
repnz
xchg
mov
sub
popf
scas
mov
jg
xchg
pop
jns
mov
sub
or
aas
iret
and
pusha
inc
fwait
sbb
push
dec
cltd
fiadds
inc
arpl
into
outsl
shlb
inc
out
xchg
aaa
push
xchg
or
cmp
inc
dec
sbbb
and
add
cmc
and
mov
cmp
xor
sub
cmp
es
xchg
das
or
sbb
pop
sahf
and
xor
adc
jg
in
arpl
cmp
leave
dec
or
sub
and
mov
dec
mov
pop
sbb
loopne
pop
je
int
inc
and
shl
repz
inc
das
jae
hlt
or
add
sahf
mov
xchg
outsl
fdivrs
mov
jle
and
daa
aad
dec
mov
push
mov
push
inc
js
push
xchg
in
inc
adc
jo
sub
outsb
dec
push
ret
jmp
fildl
push
pusha
mov
adc
push
lods
imull
shrb
fdivl
push
adc
mov
mov
inc
mov
xchg
fists
inc
call
divl
lret
repnz
sarl
shll
jp
sbb
jno
cmpsl
pusha
mov
cli
inc
push
std
jbe
and
in
jno
gs
jo
ss
cld
pop
inc
ret
stos
adc
cmp
in
cmp
mov
jb
and
testl
fwait
test
je
in
mov
xor
pushf
loop
testb
fisubl
mov
popf
std
stc
aam
data16
enter
xor
adc
pushf
test
xchg
sahf
push
int3
push
leave
aad
out
or
ja
xchg
mov
rorb
mov
jne
mov
dec
call
testl
xor
ds
int
ljmp
mov
adc
xor
ds
cmpsl
pushf
mov
mov
mov
inc
out
push
sbb
lds
adc
std
jne
hlt
push
xlat
inc
test
cli
das
jl
enter
dec
psrlq
cmpb
daa
aaa
fs
inc
out
les
fdivrp
mov
or
cmpsl
mov
cmpsb
lcall
shrl
mov
cld
pop
jg
shll
cmp
cli
pop
pushf
dec
pusha
gs
ss
or
ds
loop
sahf
mov
jp
in
inc
cmc
mov
xchg
push
add
stos
xchg
xor
lea
shrb
mov
sbb
mov
shll
xchg
sbb
int
mov
stos
mov
mov
outsl
int3
imul
xor
aam
xchg
mov
jne
xchg
mov
cs
ret
dec
lock
mov
jbe
sahf
cld
mov
mov
cltd
xchg
pop
mov
nop
mov
push
popa
add
and
les
jge
jo
add
cltd
shrl
cmp
jle
mov
cmp
aas
inc
rcrl
das
je
jmp
arpl
dec
mov
call
mov
cmp
push
and
in
outsl
test
push
icebp
outsl
pop
rorb
dec
mov
push
fs
sahf
push
inc
out
insl
xor
cld
xchg
sahf
xchg
push
mov
push
xchg
scas
pop
and
dec
lret
push
sub
test
test
in
filds
es
inc
mov
fsubs
push
adc
ljmp
testb
arpl
pop
cmp
mov
push
mov
fldcw
pushf
xchg
sbb
out
jno
test
xchg
add
push
aad
pop
pop
sbb
sbb
dec
dec
xlat
pop
cwtl
adc
lods
dec
std
outsl
lods
mov
add
call
sbb
xchg
add
cmp
mov
pop
mov
imul
pop
rolb
leave
ud1
gs
pop
mov
xchg
je
test
mov
dec
xchg
out
bnd
cltd
mov
xchg
leave
scas
or
std
rcrb
adc
add
ljmp
sarb
stc
mov
lods
add
pushf
jb
pop
ficomps
and
pop
xor
cmp
lock
cs
ret
faddl
clc
mov
enter
icebp
lcall
xchg
cmpsl
lea
scas
push
push
cmp
loop
mov
mov
mov
fidivs
ss
leave
xor
pop
pop
imul
aad
adc
mov
std
mov
pop
xchg
in
jnp
cli
scas
lret
jo
int
adc
fldt
lahf
cmp
daa
cmc
jmp
push
adc
jmp
mov
outsb
shrb
popa
push
sahf
nop
push
lret
lret
daa
mov
sub
add
jp
pop
cwtl
call
cmp
sub
gs
lret
ret
inc
mov
mov
lahf
lds
pop
mov
shlb
or
lods
xor
or
push
outsb
subb
inc
insl
popf
adc
mov
out
mov
adc
data16
cmc
orl
sub
xchg
push
cmp
push
hlt
sbb
mov
jns
or
pushf
popf
stc
cmp
out
andl
mov
mov
filds
add
xor
call
adc
pusha
xor
mov
decb
in
rcrl
push
adc
out
leave
and
push
repz
in
adc
pop
loope
jecxz
in
movb
add
jl
mov
push
mulb
jb
stos
fs
push
adc
cld
fsubr
js
stc
mov
jae
or
xchg
out
out
outsb
jbe
jnp
pushf
xor
in
scas
test
sahf
inc
in
push
pop
in
leave
jg
sahf
fsubrs
push
xchg
into
adc
pushf
xchg
popf
and
pop
mov
jg
mov
dec
xchg
sti
sub
inc
out
insb
gs
xor
push
pop
cmpsb
jge
or
sbb
push
and
fidivrl
sub
cmpsb
into
mov
adc
pusha
out
ret
fildl
push
out
pop
jp
sub
pushf
sub
cmpl
pop
rorb
xchg
or
sbb
inc
stos
dec
inc
fimull
xchg
and
mov
xchg
or
and
insl
icebp
lcall
mov
data16
sahf
add
movsl
movsb
inc
fwait
rcrb
popa
arpl
mov
jns
inc
pop
rorl
mov
inc
sbb
jl
xor
jg
push
mov
pop
loope
push
push
loopne
add
leave
cmpsl
push
aad
ss
dec
incl
lods
cmp
xchg
mov
inc
xchg
pop
inc
dec
sub
addl
cmp
repnz
clc
dec
lahf
and
push
mov
in
mov
pop
jo
push
repz
jmp
aam
fadds
aas
rcl
mov
inc
or
adc
repnz
jb
pop
cmp
icebp
push
adc
adc
aad
xchg
mov
jle
imul
inc
stc
sub
clc
ljmp
sbb
dec
pushf
ret
mov
fiadds
imul
xchg
aad
out
mov
pop
push
mov
cmc
dec
fistpl
or
jne
or
lea
xchg
cli
push
xchg
or
or
cmp
jnp
inc
mov
push
loopne
sbb
ljmp
add
jne
push
scas
cmp
je
stos
add
cmc
enter
sbb
mov
stos
xchg
mov
orb
dec
fxch
inc
mov
add
bswap
push
xchg
dec
js
push
js
xor
mov
and
dec
ret
and
nop
mov
test
lds
mov
gs
dec
cmp
je
fcmovnu
cli
inc
clc
dec
dec
imul
sahf
push
mov
inc
fcomps
out
or
mov
pop
popl
je
mov
pusha
movsb
mov
lods
aam
jmp
data16
rcll
mov
xor
stos
sti
xor
xchg
push
loope
cli
ja
inc
std
pop
mov
call
shl
clc
lea
add
aad
pop
push
dec
les
loope
daa
add
inc
loop
mov
jp,pt
ds
xchg
stc
fimull
push
sbb
mov
imul
xlat
cwtl
sbb
jecxz
push
outsb
dec
notb
out
sbb
add
test
xor
jmp
pushf
ljmp
pop
std
sbb
jns
imul
sbb
or
rcll
ljmp
dec
and
xchg
cld
adc
or
inc
pop
pop
add
aad
cmp
adc
movl
inc
or
dec
test
fiadds
aam
or
jecxz
jb
xchg
pand
xchg
pop
push
aad
xor
repz
fwait
scas
std
pop
loopne
push
xor
js
test
jle
mov
test
stc
dec
cld
stos
cmpsl
dec
dec
data16
mov
jecxz
and
dec
mov
mov
xchg
sbb
out
mov
dec
loopne
cmp
sti
xchg
int3
les
addr16
adc
sub
movsb
sub
test
aas
xor
cmp
sbbb
add
psubusw
fistps
loop
inc
data16
mov
ds
adc
inc
inc
or
movsl
pop
dec
jns
outsl
leave
aaa
aam
lds
sbb
or
aam
mov
mov
ret
inc
out
test
pusha
repnz
add
xchg
int3
sahf
out
out
sub
jg
lock
into
jnp
adcb
jbe
aad
jnp
push
test
jle
ret
mov
jmp
jbe
sub
sbb
adc
rcr
lods
stos
or
sub
push
xchg
lods
mov
addr16
push
daa
dec
pusha
stc
cmp
and
and
in
lock
inc
adc
pop
xchg
jns
lret
pop
adc
pop
popf
movl
mov
es
stc
add
mov
cs
fiadds
jnp
sub
xor
pop
cmp
ss
mov
push
fisttpl
insl
sar
rorl
sbb
lret
xchg
add
pop
or
xor
popf
mov
stc
mov
out
daa
pop
out
repnz
push
xor
sahf
add
fldcw
push
mov
push
rclb
dec
pushf
aam
mulb
daa
aas
push
jle
mov
jnp
enter
es
lahf
es
cmp
jecxz
or
lea
and
push
aaa
pop
xor
adc
shll
jo
mov
loop
scas
pop
add
mov
fcmovbe
fcmove
sbb
push
scas
jo
or
adc
subl
inc
std
in
popf
adc
sub
fdivrs
jb
xchg
dec
fcmovu
xor
push
sti
jg
mov
lods
xlat
xchg
inc
in
repz
push
in
dec
mov
aaa
push
jne
xchg
cltd
mov
adc
js
adc
xor
push
aas
in
push
xchg
add
lds
bound
xchg
push
cmpsl
cmp
stos
subl
push
sbb
fcoml
loopne
dec
orb
shr
rclb
cmp
push
inc
movsl
push
je
mov
rcrl
sbb
sub
mov
lds
aas
test
fcomps
jae
popf
test
mov
fistl
lods
mov
cmp
jle
xchg
dec
sti
addb
mov
mov
add
pop
pop
push
or
dec
mov
xor
pushf
add
mov
pop
inc
dec
xchg
inc
data16
loope
xlat
jge
xchg
insl
and
pop
out
dec
mov
mov
test
or
enter
push
lahf
cltd
in
negb
mov
fwait
inc
in
xor
xor
adc
jmp
mov
inc
xor
push
or
fadds
jne
sbb
loop
inc
pop
shrb
lret
dec
mov
or
js,pn
adcl
xchg
arpl
hlt
xchg
jecxz
and
into
pop
jns
lahf
in
sub
mov
push
add
je
incb
lods
sub
dec
xor
sub
pop
inc
sti
or
push
lahf
mov
hlt
mov
mov
aad
sub
dec
xchg
mov
mov
mov
stos
jae
or
jnp
dec
repz
pop
outsl
pusha
pusha
xlat
jne
mov
mov
add
enter
inc
fsubrl
mov
stc
push
xorl
ss
dec
aaa
cmp
sub
aas
cltd
orl
cmc
xlat
call
sbb
jmp
mov
push
adc
adc
mov
jnp
ds
inc
adc
fsts
imul
cmpsl
xchg
lcall
ljmp
lds
fdivs
dec
push
inc
ljmp
pop
ffreep
lahf
mov
sub
shll
sub
xchg
dec
test
std
ss
andb
cmp
inc
clc
cmpsl
fsubr
rcrb
dec
mov
mov
sub
sbb
lods
adc
ret
inc
lods
aam
mov
jo
enter
rolb
js
adc
sbb
adc
divb
push
dec
cmp
lret
inc
fiadds
cld
out
loopne
andl
inc
shrl
ret
xchg
xchg
insb
rolb
mov
out
mov
push
push
mov
xchg
into
in
add
mov
adc
xor
cli
test
mov
jge
cmp
adc
dec
das
xchg
je
lret
ja
sbbl
jp
sub
sti
adc
push
push
dec
push
push
stos
mov
xor
mov
sub
scas
pop
mov
mov
cmp
mov
addr16
in
pusha
fwait
push
repz
or
pop
cmp
lret
jl
pop
sbb
subb
repnz
shll
push
outsl
lds
add
inc
dec
cmp
ljmp
stos
test
jne
push
cmp
or
adc
xchg
fidivrs
into
loope
gs
cmc
mov
jg
pop
sbb
mov
xchg
outsb
adc
cli
xchg
xchg
add
pop
jge
xchg
lock
add
loop
adc
fs
sub
lods
sub
dec
add
jecxz
sub
mov
adc
outsb
xchg
enter
fsubs
jae
inc
mov
inc
es
lock
xchg
pop
loop
sub
inc
dec
or
pushf
mov
dec
insb
and
fmull
lock
mov
dec
push
push
ret
and
mov
push
mov
aaa
add
xor
or
push
ds
ret
xchg
sub
cmpsb
pop
cltd
int
mov
imul
push
sbb
push
push
push
cld
into
ret
jl
ret
jp
mov
daa
mov
cmpsl
jnp
mov
sbb
sub
cmp
stc
adc
sub
stc
js
int3
loop
xor
mov
adc
scas
push
dec
mov
outsb
lcall
add
inc
pop
ret
les
notl
jae
push
push
pop
sbb
push
dec
outsl
push
sbb
push
dec
and
pusha
or
push
jo
dec
xchg
sub
mov
jbe
int3
or
dec
jp
lcall
and
mov
insb
adc
xchg
jno
lea
sub
lods
rolb
add
jns
cmpsb
pushw
mov
inc
jae
daa
insb
lods
or
sub
or
dec
cs
mov
out
sub
cmp
xchg
mov
lds
xchg
xchg
xor
add
pop
push
adc
int3
xchg
icebp
add
push
in
mov
mov
fcoms
das
sub
xlat
or
cmp
push
adc
shl
not
popf
inc
push
push
push
psllq
cvttps2pi
sub
inc
xlat
ret
movsb
icebp
or
adc
imul
add
push
mov
lds
in
mov
mov
lret
push
cmp
fsub
mov
mov
jl
jecxz
pop
or
jne
leave
sub
add
idivl
insb
mov
and
lock
test
mov
cmp
ljmp
xchg
dec
loope
pop
inc
bound
sub
sbb
mov
pop
dec
shll
pop
imulb
test
es
add
lock
sbb
in
into
push
jecxz
cs
out
enter
loopne
cltd
mov
popf
movsb
push
xor
push
lods
lahf
adc
and
out
xchg
stc
mov
xchg
repz
sub
push
icebp
clc
hlt
lret
stc
sub
push
dec
std
nopl
mov
mov
fldl
pop
loope
cmpb
shll
data16
cmp
mov
inc
or
mov
lahf
stos
push
sbb
fwait
pop
mov
mov
rcl
jo
pop
push
push
mov
and
and
enter
cld
call
and
cmc
sub
es
mov
cmp
test
jae
mov
daa
call
imul
adc
jle
add
add
std
pop
sbb
in
inc
inc
mulb
inc
pop
test
cmc
sub
fisubrs
push
push
outsl
fadd
xor
jne
in
and
push
inc
xor
pusha
cmp
add
rorl
pop
lods
leave
fs
sbb
cwtl
and
push
addr16
xor
icebp
sbb
jg
lret
pop
outsb
inc
sbb
adcb
mov
sbb
pop
jns
mov
xchg
jmp
cmpsb
push
mov
xor
cmpsb
addr16
sub
push
insb
shll
adc
or
out
mov
gs
xchg
fbld
dec
dec
add
cltd
daa
das
insl
jmp
jle
dec
pop
mov
xchg
movsl
jns
stc
dec
dec
dec
add
dec
and
not
lcall
iret
mov
fdivr
dec
cmp
or
std
inc
rolb
xchg
jbe
jl
or
mov
unpcklps
and
lock
jno
mov
lods
lea
lret
cmp
cli
cli
add
fidivrl
je
out
add
les
loope
scas
lret
scas
cmc
cmpsb
loope
lret
out
sbb
inc
inc
in
rcrb
or
or
out
mov
out
mov
xchg
push
int3
addl
lahf
xor
repnz
jbe
push
sbb
stc
and
lret
test
data16
testb
mov
cmc
popf
lds
subb
loopne
pusha
xor
xor
mov
or
adc
mov
sti
mov
pop
stos
push
pushf
jae
mov
inc
arpl
mov
jne
cli
push
xchg
rcrb
mov
push
push
popf
adc
sbb
frstor
fsubl
sub
mov
xor
or
lahf
mov
jns
pop
jp
add
cmp
push
cmovle
mov
and
add
mov
mov
cmp
ds
test
int
test
adc
addr16
mov
cld
and
mov
push
add
test
out
les
xchg
shl
inc
popa
jecxz
jbe
mov
cmpl
mov
mov
or
jmp
pop
pop
popf
int3
fsubrs
jge,pt
lcall
pop
cmp
sub
dec
jecxz
push
and
ficomps
xor
ss
mov
pusha
mov
xchg
inc
mov
icebp
bound
stos
cmp
mov
adc
adc
mov
outsl
mov
popa
xchg
insl
or
cwtl
repz
test
sub
adc
dec
jmp
or
lret
lods
xchg
xor
xchg
stos
xchg
cmp
mov
cmpsl
test
add
gs
cli
arpl
cwtl
shll
or
push
inc
pop
fstp
sub
mov
pushf
pop
add
mov
lcall
ja
push
dec
sbb
ljmp
pop
push
or
aaa
loop
gs
xchg
dec
in
mov
inc
mov
mov
adc
aaa
mov
scas
cmp
push
push
loope
sbb
cmpsl
arpl
adc
sti
ret
testl
scas
pop
add
push
and
lds
mov
pop
xor
leave
jb
daa
ss
jne
incl
cmp
fwait
mov
test
jg
jmp
movsb
dec
fistpll
adc
pushl
push
in
and
mov
xchg
pop
jmp
or
pushl
and
pop
je
cs
and
pop
ljmp
mov
int3
ret
ljmp
movsb
into
mov
mov
mov
sub
jnp
or
adc
clc
sbb
frstor
inc
andl
push
ret
js
out
shlb
out
popa
cwtl
repnz
push
fmuls
sbb
mov
lea
xlat
imul
adc
sahf
mov
inc
push
testb
jo
dec
sbb
push
popl
jne
xchg
sti
mov
out
andl
iret
sbb
test
xorb
ja
mov
cmp
adc
pop
adc
sbb
dec
jp
jg
jns
outsl
sbbl
imul
jno
pop
das
ret
pop
inc
fstpl
mov
xor
xchg
clc
mov
in
pop
lret
loope
stc
jg
ret
sar
mov
xor
mov
aas
shrb
jmp
add
inc
nop
das
call
push
xchg
and
lret
cmc
movsb
pop
xchg
mov
and
add
loop
pushf
jo
leave
int
cli
push
idivb
push
pop
sub
jg
pop
mov
daa
push
cmp
mov
or
stos
inc
xchg
jbe
jmp
jne
jg
out
push
push
pop
inc
xor
and
or
int
cmp
shlb
sub
stc
pop
cld
leave
push
jnp
into
aas
repnz
les
push
mov
into
sub
xor
insl
xor
es
push
pop
shlb
sub
xor
shl
clc
xchg
mov
push
cmp
fcmove
dec
insl
mov
mov
aam
or
test
inc
int3
adc
fsubrs
mov
xor
aas
fucomp
sbb
jb
or
inc
arpl
cli
mov
push
lods
adc
xchg
scas
hlt
aam
add
and
and
bound
xchg
xchg
sub
and
jb
repz
push
and
xchg
fldcw
scas
add
pop
inc
xor
nop
stos
fists
fcmovb
sbbb
mov
pop
dec
lds
cmpsb
xchg
mov
add
mov
movsb
add
sbb
sub
sahf
inc
inc
imull
pop
insb
or
mov
addr16
add
cmpsl
dec
dec
sbb
lret
and
insl
mov
mov
push
pop
sbb
fstpl
imull
pushf
push
lahf
or
out
push
or
mov
fcompl
pop
sti
leave
mov
lcall
roll
sbb
xchg
sbb
bound
dec
jl
lahf
and
push
mov
inc
xchg
pushf
rclb
lret
in
xor
dec
jecxz
shlb
int3
ret
mov
dec
push
fldenv
or
xor
and
and
push
test
popf
loopne
jo
mov
adc
pop
push
pop
cld
ja
sub
das
inc
sbb
dec
ja
jmp
adc
jle
inc
clc
and
adc
ds
jle
test
gs
ret
pop
aaa
cmp
insb
push
loop
jg
mov
push
pusha
adc
pop
leave
lea
mov
and
shr
lcall
shll
lods
push
cmpsl
dec
fcmovb
cmpsb
mov
sar
mov
jg
pop
jle
pushf
mov
push
int3
andl
mov
clc
xor
adc
xchg
ja
daa
mov
in
cmp
lods
in
aam
call
jl
lock
or
inc
jle
jmp
repz
xchg
adc
sti
js
and
sub
add
jbe
rclb
adc
add
cmp
shlb
fcoms
insl
lret
testb
jge
xchg
or
aam
pusha
inc
inc
in
cmp
test
mov
scas
stos
lret
xchg
jmp
into
ret
mov
fidivs
mov
roll
imul
lock
bound
adcb
and
cmp
repz
daa
ret
push
sub
mov
pop
repnz
lock
xor
out
cmp
in
jmp
sbb
push
hlt
pop
push
and
hlt
sti
loope
xor
cmp
push
add
or
iret
icebp
pop
rolb
pushf
int3
sbb
cs
xor
dec
cs
les
test
addr16
loope
fcompl
inc
xor
pop
sbb
gs
call
xor
and
mov
pop
loope
pop
cmp
and
mov
fisttpl
mov
sub
sbb
sbb
es
mov
push
push
iret
cmp
xchg
aas
repnz
jge
lods
inc
ja
xor
jmp
pop
call
sub
sbb
data16
inc
push
mov
loopne
lret
xchg
jmp
pop
clc
aam
int
inc
pop
xor
push
xor
mov
js,pt
pop
mov
lods
mov
push
enter
jge
lea
mov
xchg
js
nop
cmp
out
push
mov
add
mov
jl
pop
mov
loope
inc
fidivrs
cltd
mov
cld
jo
lods
in
stc
mov
js
push
mov
test
in
jbe
sub
fs
loope
sarb
jns
add
and
andb
xchg
mov
lds
adc
test
lods
int
adc
mov
inc
pop
retw
dec
mov
fsubrs
arpl
fbstp
rcr
xor
lret
test
xchg
cmpl
popa
and
loopne
or
fnsave
push
push
pop
cmp
repz
pop
push
insb
neg
xor
inc
jp
pop
roll
out
and
adc
pop
pop
add
mov
add
xchg
in
je
lock
add
test
mov
add
pop
test
cmpsl
mov
add
ror
lahf
mov
mov
fnstsw
pop
sub
push
or
xor
mov
pop
adc
std
dec
stos
out
frstor
cmp
roll
call
xlat
test
mov
popf
fsubrl
test
push
ficompl
scas
mov
sbb
out
scas
sbb
cmp
add
mov
cwtl
fwait
sub
cmp
scas
jg
xchg
mov
lea
pop
out
out
jnp
mov
jae
aam
inc
cld
sbb
incl
push
cmpsl
test
push
push
cmp
push
lret
adc
aas
lcall
sub
jge
pop
divb
sbb
mov
pushf
enter
pop
mov
nop
xchg
dec
and
pop
dec
jecxz
sub
ss
cmp
jns
ja
and
call
addb
sarb
jl
popa
lcall
xor
outsb
mov
loopne
inc
sub
data16
fiaddl
movsl
cmp
sub
test
cltd
lcall
mov
lcall
pop
arpl
lods
js
cmp
repnz
mov
jnp
mov
ret
adc
sub
jl
leave
cmp
pop
sub
cmpsl
das
inc
orl
inc
lods
fcmovu
fcompl
dec
dec
mov
lcall
jmp
imulb
test
pop
mov
or
cmpsb
test
sub
or
test
sub
ret
sub
pop
mov
orb
sahf
in
inc
pop
mov
in
call
aam
jno
pop
xchg
pop
xchg
sbb
in
mulb
push
int
push
sbb
inc
pop
std
push
loope
ror
mov
mov
fistpl
rorb
bswap
movsb
int3
stc
lahf
push
or
inc
in
sar
popl
mov
dec
in
scas
in
push
out
pinsrw
test
call
cmp
sbb
or
ss
push
scas
mov
cmpsl
push
xchg
or
push
push
clc
sbb
pop
ja
jecxz
fstps
or
imul
xchg
jp
pop
idivb
call
pop
dec
inc
xchg
push
or
xchg
mov
iret
lahf
or
clc
scas
xchg
lods
xor
jns
jbe
or
mov
insl
sbb
dec
rorb
sbb
repnz
sbb
mov
dec
xchg
lods
sub
popa
mov
loope
lcall
movsb
mov
or
inc
mov
and
dec
les
addr16
stc
add
das
sbb
xchg
rorl
test
roll
in
leave
rcrl
mov
add
add
out
loop
push
repz
jmp
sarl
pusha
mov
subb
pushf
scas
sbb
push
fdivrs
das
push
add
repnz
xor
fistps
outsb
push
add
sub
pushf
out
mov
add
hlt
sahf
loopne
dec
xor
addb
mov
pushf
call
and
mov
rcrb
pop
or
data16
sti
fmuls
add
hlt
pop
cmpsl
inc
fisubrl
cli
bound
xor
add
cmpsb
cwtl
adc
push
xchg
push
out
rcll
pop
mov
rorb
fdivl
push
mov
jp
mov
repz
lret
movb
lret
shrl
or
test
popa
mov
jecxz
cwtl
lret
sbb
stos
xor
cmp
pop
mov
je
test
add
mov
rolb
pop
adc
xchg
add
add
add
sbb
sub
aaa
in
xchg
inc
iret
lds
mov
jnp
sahf
mov
mov
sbb
mov
hlt
push
xchg
lds
jle
inc
mov
add
jp
mulb
or
mov
mov
add
les
cwtl
push
jne
hlt
inc
ja
inc
sti
pop
dec
cld
sar
jno
loopne
cmp
das
dec
jno
test
arpl
dec
popw
jg
push
clc
stos
mov
mov
xor
insl
push
pusha
push
test
stos
dec
jecxz
mov
insb
xor
sbb
pop
jo
sub
rcrb
pop
mov
js
or
mov
stos
jno
mov
enter
stc
mov
jge
test
paddb
mov
jnp
and
sti
xchg
fwait
adc
sti
outsb
cld
jecxz
sub
adc
lret
and
mov
ret
mov
jns
adc
dec
mov
pusha
in
lcall
jae
adc
mov
pop
mull
cmpb
ljmp
insb
cmp
and
push
jl
ja
inc
mov
dec
mov
std
adc
pop
inc
push
fdivl
jb
pop
call
mov
dec
stos
sbb
ds
adc
inc
jno
add
std
gs
insb
push
push
jge
dec
popa
or
shrl
lret
add
jl
xchg
and
mov
fldl
xor
mov
scas
cmp
push
xchg
push
fists
jbe
int
bound
mov
lods
sub
jecxz
clc
push
jae
mov
hlt
mov
or
inc
push
dec
mov
aam
int
popa
ljmp
int3
lret
jo
stos
gs
mov
dec
out
dec
and
data16
stc
dec
xchg
fildl
mov
mov
inc
gs
pusha
cmp
mull
jecxz
pop
lods
ret
push
scas
aad
push
push
cwtl
sub
add
fdivrl
aas
test
mov
je
mov
imul
sub
and
dec
adc
data16
or
sbb
mov
push
int
or
mov
add
lock
xlat
pop
jbe
fwait
xchg
shl
inc
scas
int3
repnz
call
cmp
mov
jmp
mov
adc
gs
push
out
add
inc
fsubs
inc
push
out
push
popw
cmp
scas
lahf
shlb
xor
test
pop
cmc
xorb
fists
arpl
fisubl
pop
int
ror
cltd
add
xlat
mov
movb
lea
js
add
std
lds
addr16
repz
minps
dec
lods
push
mov
sar
dec
adc
sbb
push
dec
xchg
sub
mov
pop
dec
inc
lcall
rcrb
xor
lcall
insl
pushf
jle
push
mov
mov
test
notb
push
and
sub
or
aad
jne
in
lock
fcomi
push
xchg
push
fisubrs
adc
pop
fsubrp
xor
in
push
and
mov
cwtl
dec
sub
mov
scas
arpl
xor
lahf
mov
test
or
pop
xlat
sbb
fnsetpm(287
xor
mov
mov
inc
mov
dec
popa
int
mov
stos
addl
mov
dec
jle
pop
or
adc
outsb
sub
mov
sbb
dec
dec
push
pop
xchg
dec
cmp
idivb
cmp
mov
jmp
out
jae
movsb
cmpl
adc
sbb
pop
mov
out
push
int3
cmp
lret
xor
faddl
lahf
popa
mov
xlat
mov
mov
and
pop
cmp
lret
ljmp
ljmp
xor
xchg
int
sub
push
mov
cld
mov
add
jb
lods
lret
in
and
aaa
add
sti
xor
dec
lock
xor
pop
push
mov
rcr
add
dec
and
adc
dec
pop
push
hlt
mov
mov
mov
cltd
ss
add
stc
sahf
test
jnp
lock
xchg
dec
pop
cmpsl
and
inc
in
mov
xor
ja
pushf
pop
into
xor
push
orl
jle
std
cmp
push
into
or
and
test
cmp
das
je
gs
xchg
or
imulb
adc
jecxz
sbb
pop
adc
in
ja
outsb
ss
sbb
xor
lret
and
inc
cli
inc
pop
cltd
jb
jge
and
adc
lea
sub
push
jg
xlat
or
sub
fcomps
adc
dec
divl
mov
mov
movb
jae
sbb
push
adc
sbb
adc
sbb
cmp
enter
jmp
cmp
inc
pop
mov
in
mov
cmp
mov
jp
adcb
outsb
xchg
mov
bound
cmpsl
repnz
inc
inc
in
sahf
or
pop
cmp
xor
inc
sbb
fldenv
xchg
jmp
jmp
outsb
pop
imul
xchg
dec
loopne
iret
repnz
ror
xchg
std
dec
and
cmc
int3
shl
fidivrl
aam
xor
popf
or
push
enter
push
adc
out
adc
push
or
lods
aam
mov
test
in
xchg
mov
inc
and
inc
popa
roll
fwait
mov
fmuls
sarb
pushf
aas
pop
jp
dec
jp
or
xor
cmp
clc
outsl
sub
cmp
cmp
pushl
or
pop
dec
push
stos
cmp
jno
adc
repnz
jle
movb
mov
stc
cltd
repnz
inc
jp
pop
inc
out
dec
es
lods
add
test
lret
xchg
sahf
push
jp
jmp
call
repz
push
inc
ljmp
aaa
pop
add
cmp
and
scas
cld
cmp
inc
inc
je
push
sbb
push
cmp
xlat
cli
push
testb
testb
sbb
loopne
imul
and
adc
movb
outsb
mov
add
mov
dec
mulb
aaa
jmp
arpl
pop
repnz
lods
dec
mov
add
inc
push
mov
es
and
lock
sbb
stc
pop
sbb
jmp
dec
std
lods
sub
mov
rol
subb
dec
dec
in
mov
in
pop
ljmp
fbstp
sub
add
jbe
pop
mov
cmp
xchg
push
jmp
push
in
and
nop
pusha
xor
fists
mov
iret
sarl
xorl
clc
std
enter
and
xchg
push
xchg
push
and
shrl
int
cmp
xorl
fstpl
sbb
push
bound
and
cli
xorl
lods
rolb
mov
cmp
or
repnz
int
bound
pop
pop
inc
push
out
ret
xchg
sub
mov
test
fmulp
sub
push
bound
aaa
dec
outsl
icebp
aam
imul
shll
jnp
xchg
std
cwtl
imul
jne
push
or
and
ds
orl
inc
ret
sbb
jb
insb
ljmp
cmc
adc
inc
add
mov
mov
xor
int3
out
shlb
mov
sub
negl
jecxz
cmp
test
mov
sahf
mov
cmpsb
mov
or
pop
fs
xchg
sahf
enter
xchg
fidivrs
and
jne
pop
icebp
adc
int
mov
gs
pop
adc
add
in
fdivrs
das
mov
inc
sbb
push
add
aas
into
mov
rcl
dec
pop
jo
es
jo
mov
int
mov
push
pop
add
mov
ds
pop
pop
cmc
dec
dec
and
icebp
add
cmp
pusha
lds
ret
es
nop
or
imul
xchg
es
dec
scas
push
inc
cmp
repz
insb
vpshuflw
add
std
sbb
cs
pop
pop
mov
bnd
aas
daa
xor
jae
sub
btr
and
ljmp
mov
xor
cmp
pop
fmull
push
pop
sub
jmp
bound
and
or
das
ljmp
and
add
daa
pop
sub
and
cs
push
int
inc
ret
xor
ret
lret
das
xchg
leave
and
mov
add
or
push
pop
cltd
push
aam
mov
sub
out
or
xchg
cmp
sub
aad
mov
mov
mov
stc
push
mov
in
add
fnstcw
push
in
lret
dec
add
jns
enter
addr16
fimull
pop
or
adc
outsl
and
mov
icebp
in
es
inc
pop
mov
testb
jbe
pop
inc
icebp
repnz
clc
cmp
cltd
insb
arpl
lret
lock
and
cli
dec
inc
mov
cld
jle
ret
mov
sbb
mov
cs
add
xchg
jae
xchg
pushf
add
pop
stc
jno
pop
lods
popa
dec
jbe
es
sub
mov
jle
pop
or
es
icebp
xor
push
push
sbb
arpl
int
push
mov
je
xorl
xlat
pop
fs
mov
imul
stos
popa
pop
arpl
and
jle
mov
mov
dec
push
cmp
mov
cmc
inc
xor
mov
dec
in
ret
cmpsl
mov
jl
xchg
dec
iret
scas
adc
pusha
stc
icebp
mov
or
mov
add
ja
lods
mov
cmp
lea
cld
testb
in
imul
push
adc
movsl
pop
inc
fistpl
pop
scas
jb
add
hlt
push
cmpsb
int
pop
insl
inc
jmp
fcomps
aaa
out
add
stos
push
scas
xlat
pop
leave
aam
dec
adc
bound
xchg
or
loop
movsb
jno
mov
inc
addr16
int
mov
insl
clc
xchg
xchg
sbb
pop
sub
outsb
mov
pop
movsb
sbb
sub
push
inc
add
push
imul
aaa
hlt
out
les
inc
ss
mov
or
mov
add
sbb
xor
aas
pusha
jge
push
outsl
loopne
mov
movsb
add
add
mov
cltd
je
jbe
out
mov
neg
jge
inc
daa
mov
pop
mov
xor
sti
cmp
insb
ljmp
cltd
test
ffreep
mov
inc
clc
mov
sbb
mov
mov
daa
xor
add
aad
test
jbe
dec
xchg
ficomps
sbb
xchg
insb
stos
jl,pt
mov
jmp
fsubrp
aas
imul
mov
jo
mov
sbb
aaa
mov
movsb
fnstcw
mov
lods
test
mov
fldl
sahf
xor
into
lds
inc
inc
jo
or
sbb
xchg
ja
xor
les
push
out
into
enter
xorb
mov
daa
jbe
dec
mov
xlat
or
ficomps
inc
out
mov
jg
ljmp
pop
pop
cli
dec
jl
xchg
cs
loope
jmp
mov
cmp
inc
out
push
sbb
or
mov
rcr
inc
push
sub
test
sti
sbb
fisubl
loop
mov
sub
jl
lret
inc
cmp
stos
mov
jns
pushf
and
cmpsb
dec
mov
fdivrl
shlb
xchg
je
les
jne
push
mov
mov
xchg
jnp
jne
imul
imul
xor
pop
push
movb
scas
xchg
jbe
inc
pop
jl
xor
push
xlat
mov
cmp
int
xchg
ret
loopne
je
sbb
jecxz
popf
fiaddl
test
in
cmc
lds
push
dec
icebp
xchg
mov
aaa
scas
sahf
mov
mov
cmc
lock
pop
push
push
call
mov
leave
xor
mov
sbb
push
out
imul
sub
sbb
scas
cld
adc
jb
outsl
inc
sub
or
fsubrl
push
mov
pop
ljmp
ds
imul
sbbb
mov
jb
addl
int3
xchg
enter
mov
xchg
inc
inc
inc
push
adc
xor
cmpsb
test
into
sti
inc
or
lock
lds
dec
jmp
arpl
cwtl
dec
inc
stos
sub
add
push
repnz
les
fists
sub
cmp
rol
sbb
pop
jg
iret
iret
std
gs
nop
out
outsl
scas
dec
out
lahf
mov
shll
nopl
aaa
das
and
pop
mov
and
and
stos
shll
xchg
add
xor
insl
fwait
movsb
ljmp
inc
mov
call
jecxz
jo
mov
jl
stos
cltd
nop
ret
xchg
jnp
jns
jnp
cmpsb
dec
sbb
stmxcsr
xor
cmp
sbb
int
pusha
push
lods
leave
pusha
dec
fsubrs
mov
shll
fcmove
in
cmp
add
inc
xchg
fists
sbb
push
and
jg
mov
daa
jg
fwait
cmpsb
add
lret
sbb
xlat
mov
xor
ret
cmp
dec
rcl
in
fcmove
inc
push
sub
mov
into
es
sti
xor
mov
ljmp
mov
lret
jge
xchg
outsb
jmp
xchg
or
into
std
les
outsb
dec
inc
inc
mov
fcomip
push
je
mov
test
fisubs
dec
sub
push
test
stos
mov
sub
push
shlb
jb
cmp
jns
cltd
bswap
jle
insb
add
ret
mov
sti
xchg
int
andl
shrb
cmp
in
push
fsub
sub
lea
cltd
iret
push
sar
cwtl
xor
xchg
ret
test
out
push
or
push
cmpsl
ja
xchg
insb
xchg
lods
jne
aaa
jbe
out
out
loopne
aam
ljmp
push
sbb
fcmovbe
es
ja
sub
int3
call
fcom
mov
xchg
lea
adc
sbb
movsl
int3
fstl
add
inc
decl
sub
and
imul
ficomps
xchg
inc
in
test
sbb
add
es
xchg
std
mov
movsl
ret
rolb
xor
pop
inc
lcall
das
lods
fisubrl
jo
adc
arpl
sarl
lods
jle
and
iret
sub
inc
lcall
lret
sbb
inc
gs
jb
or
xchg
shlb
icebp
popf
mov
jo
clc
ficoml
adc
mov
jl
jnp
adc
dec
ja
outsb
push
aam
imul
pop
sbb
repz
xchg
loopne
mov
xchg
fcmovne
sub
js
xor
adc
clc
mov
cmp
xchg
daa
pop
fisubrl
gs
jle
or
test
ja
jmp
hlt
pop
jg
add
cltd
insb
mov
jl
xor
testl
pop
dec
pop
pop
daa
inc
inc
cmp
push
dec
icebp
negb
lods
mov
mov
sbb
in
add
mov
sub
add
nop
mov
sbb
outsl
addl
jb,pt
jno
pop
xlat
jg
int3
push
hlt
inc
fildll
or
mov
dec
imul
ss
or
leave
xor
stos
and
hlt
inc
aas
add
add
mov
pushf
mov
mov
adc
mov
fdiv
sbbb
inc
ds
js,pt
mov
das
xchg
lods
or
icebp
adc
fstpt
pop
aaa
fldt
adc
bnd
cmp
adc
movsl
mov
fmuls
and
out
cld
cmp
outsl
push
cmpl
cmp
loop
push
jmp
loopne
test
shrb
jo
xchg
mov
popf
test
scas
mov
into
pop
cmp
pop
test
test
fwait
ret
and
shlb
mov
mov
dec
inc
lods
cmc
daa
jp
push
ror
jnp
push
lods
pop
mov
add
iretw
sbb
aaa
and
aaa
jl
or
mov
scas
gs
mov
test
test
xor
dec
adc
fsubs
lret
repz
mov
stc
mov
add
adc
sub
dec
lods
es
push
sbb
test
inc
leave
sbb
lds
push
push
xchg
xor
mov
xorl
sbb
pushf
or
sti
jg
aaa
sub
and
cwtl
roll
mov
sbb
cmp
sbb
loop
dec
mov
xor
daa
pop
cltd
adc
imul
nop
cmpsb
pop
inc
add
loope
mov
rcll
or
push
jno
jne
movb
aas
lcall
pushf
xorb
mov
incb
jno
fbld
ja
fcoms
jp
sti
pop
rclb
imul
xchg
nop
pop
sub
xchg
inc
fdivrp
int
rolb
dec
and
jge
add
in
inc
mov
mov
iret
mov
pop
and
test
outsl
dec
inc
mov
jb
pop
nop
out
leave
push
imulb
push
push
add
hlt
cmp
lds
idivl
or
movsb
ss
xchg
pop
not
dec
clc
insb
mov
in
jns
int3
aad
es
inc
daa
push
jg
enter
inc
inc
mov
sub
mov
int3
jecxz
adc
mov
pop
mov
out
sub
add
push
xor
sbbb
mov
sub
and
test
ret
inc
mov
xchg
or
int
xor
pop
das
das
testb
adc
fsub
xor
scas
xchg
dec
pop
stos
xchg
ljmp
sbbb
icebp
xchg
test
jp
inc
scas
shr
inc
mov
sbb
and
outsb
xchg
xchg
out
lea
adc
std
pop
sbb
lcall
jne
jae
push
mov
cld
jno
xor
cld
mov
cmp
jg
or
adc
insb
push
gs
mov
subl
mov
adc
push
pop
popf
adc
pop
loopne
bound
mov
mov
enter
cmp
rolb
add
push
aas
lahf
insb
nop
iret
dec
or
das
outsb
movswl
inc
call
in
jno
shr
sbb
xchg
ja
jne
mov
inc
lahf
scas
inc
ss
int3
fisttpll
and
cmc
mov
push
add
movsl
xchg
lret
inc
dec
adc
jnp
add
cmpsb
bound
cmpsl
movsl
add
fwait
nop
or
aas
iret
subl
in
test
xorl
mov
cwtl
aad
mov
test
jmp
push
lds
inc
enter
lcall
xchg
jnp
mov
mov
jne
andl
push
insb
sub
leave
cmpsb
rorl
sub
cmp
and
rol
pushf
sub
mov
aad
xorl
stos
push
jge
xchg
mov
sbb
sub
adc
loopne
shlb
cmp
jecxz
enter
inc
fiadds
sbb
pusha
fidivl
pop
add
clc
xor
cmp
hlt
adc
loope
pop
jl
add
outsb
sub
test
sbb
pop
push
fildll
jb
mov
testb
mov
sbb
outsl
mov
adc
hlt
loop
xchg
imul
push
or
leave
ret
ficompl
or
xchg
or
dec
outsl
pop
inc
xor
es
inc
jne
xchg
inc
sbb
wrmsr
fisubrl
adc
pop
sub
mov
mov
cmp
mov
fiadds
cli
dec
cltd
out
jnp
or
inc
cld
add
fistps
push
cltd
out
add
das
push
mov
shll
mov
push
push
sbb
sbb
push
ds
gs
inc
inc
nop
negl
sub
cmp
sub
cs
push
in
rolb
rcrl
imul
mov
jno
inc
xchg
mov
add
shll
dec
fs
inc
sbb
jg
mov
sub
push
or
lods
jge
int3
enter
flds
lret
jl
enter
pop
ss
call
pop
dec
test
push
outsl
pop
pop
fwait
pop
dec
dec
cmc
mov
bound
xchg
in
popf
or
mov
push
loope
adc
movsb
sbb
jle
ret
pop
sbb
xchg
mov
cwtl
repz
aam
idivb
into
addr16
icebp
push
push
adc
cmp
test
adc
and
mov
mul
mov
insb
mov
pop
sbb
push
dec
lret
lret
push
jbe
mov
mov
push
lret
jecxz
mov
mov
cli
ljmp
inc
leave
pop
and
test
add
std
lret
sbb
out
sbb
stos
es
sbb
xchg
xor
and
adc
xor
pop
fildll
and
and
shr
ret
scas
push
rol
inc
mov
jp
fdivp
pop
and
sub
xchg
int3
xor
jle
data16
bswap
mov
add
lock
sub
flds
movsl
in
test
lock
loopne
loop
cmpsb
adc
outsl
push
adc
lds
aad
jbe
cmp
pop
mov
lock
data16
pop
rcrl
add
pushf
ret
mov
xor
push
sbb
out
std
int
imul
sub
push
pushf
mov
pop
xchg
inc
sahf
push
das
push
sbb
jecxz
add
pop
cmp
test
push
pop
pop
cmp
lea
lcall
mov
aad
sbb
sub
int3
lcall
sbb
repz
sbb
dec
jne
cmova
mov
jecxz
inc
xchg
push
and
cmp
jl
ret
popa
fcomip
div
scas
xchg
daa
loope
xor
jb
sbb
push
adc
jge
fsubs
imull
jne
shr
jb
jg
pusha
jl
loopne,pt
in
shl
xchg
xchg
pop
repnz
or
dec
aad
or
ret
or
dec
sbb
pop
inc
cmp
les
scas
add
addr16
xor
adc
mov
cmc
adc
out
ds
xchg
or
out
test
jb
pop
enter
out
pop
xchg
out
cmc
jne
pusha
enter
mov
push
frstor
int
es
sub
outsb
inc
inc
outsb
jp
xchg
sub
gs
mul
ret
xchg
fistl
fs
addr16
mov
imul
mov
rcll
fstpl
xchg
stos
pop
outsl
call
sbb
rcrb
mov
adc
xchg
jecxz
mov
pop
mov
ljmp
mov
cmpsb
mov
push
pop
iret
jnp
push
fmuls
cmp
push
ja
jle
sub
push
or
jnp
insl
cmp
mov
lret
in
sbb
rcrb
sbbl
inc
shlb
repz
add
mov
sbbb
push
cld
pop
mov
js
xchg
adc
inc
push
fbld
inc
cltd
das
push
push
jl
add
rol
cltd
xchg
lret
sti
ljmp
icebp
cmp
addl
mov
jp
aaa
into
leave
pop
inc
addr16
xchg
fdivrl
inc
mov
cmp
lahf
cld
xchg
sti
sub
shrb
bound
pop
mov
dec
xchg
mov
test
push
jmp
sbb
rorb
ret
and
bound
cwtl
jg
mov
push
cmp
nop
xor
jl
dec
mov
cmpsb
in
cs
ds
bound
movsb
sbb
pop
aam
imul
push
and
insl
cltd
popl
daa
aaa
and
int3
stc
sbb
cmc
test
add
dec
mov
lret
aad
loopne
cmc
xchg
test
jb
sub
call
outsb
movsl
jecxz
enter
insl
and
xchg
sahf
mov
std
xchg
or
and
xchg
mov
cmc
ljmp
sbb
cwtl
mov
fsts
jp
jl
mov
xchg
sahf
or
shll
adc
add
add
imul
insl
das
mov
or
out
inc
lea
sbb
inc
ljmp
in
lods
sbb
jne
add
xchg
jb
lcall
xchg
scas
mov
jno
sub
sub
jbe
adc
and
pop
jne
orl
sbb
rcrl
sbb
add
dec
int
iret
data16
loopne
jo
je
push
insb
stos
mov
dec
push
push
inc
dec
push
inc
inc
insl
xor
rcr
hlt
cmp
mov
hlt
les
or
pop
mov
arpl
movsb
into
loope
cmpsl
and
xchg
or
adc
das
movsb
mov
xlat
scas
mov
insb
lods
clc
rcrb
test
mov
icebp
cmp
mov
jge
mov
sbb
fbld
add
leave
sti
cmpsb
daa
mov
mov
inc
inc
jae
sbb
mov
xchg
cmpb
push
leave
roll
inc
xor
cwtl
repnz
mov
pop
mov
das
cwtl
xchg
mov
cmp
or
mov
aas
or
and
sub
or
lods
lret
out
std
cmp
xlat
hlt
xchg
in
xor
cmpl
xor
js
aaa
mov
ljmp
push
push
and
ss
imull
je
out
jnp
xchg
ret
jp
push
push
jmp
jnp
ljmp
xchg
fs
sbb
inc
les
dec
mov
push
in
or
std
adc
and
addr16
sti
sub
lret
xchg
jbe
aaa
sbb
inc
dec
subl
sub
lcall
add
xchg
movl
mov
dec
stos
test
inc
pop
js
dec
popa
pop
ret
jbe
jne
xchg
cltd
jp
loop
rolb
int3
into
in
out
call
popf
cmp
fs
inc
xchg
lret
pop
sti
xor
fisttpl
mov
lods
popf
sbb
shrl
out
mov
or
adc
inc
mov
out
jae
inc
jne
pop
or
popf
jnp
jnp
movsb
cld
add
sti
xor
lret
jecxz
adc
sar
shl
fwait
inc
mov
fisubs
jmp
push
push
pop
or
cmpsl
or
mov
call
push
dec
imul
jns
mov
mov
push
pop
xchg
jae
jno
xor
mov
push
xchg
xchg
and
popf
jb
push
mov
sahf
xchg
mov
out
jbe
in
inc
push
out
and
repnz
gs
lock
fidivrs
and
mov
vpmaddwd
mov
mov
ja
mov
fistpll
jl
clc
jae
add
push
mov
stos
mov
jno
iret
mov
loope
mov
inc
sbb
call
imul
sbb
stos
push
fdivs
int3
inc
add
je
movsb
jo
fidivrl
add
mov
das
arpl
pop
xor
and
repz
push
add
gs
jmp
pop
fdivrp
int
insl
imul
adc
jl
mov
mov
jno
data16
xor
add
mov
in
lret
push
sysret
std
cmpsb
and
enter
stc
or
push
xchg
sbb
cmp
inc
xchg
jb
inc
mov
ljmp
or
add
not
call
add
xor
jg
jecxz
cmp
out
jo
and
add
dec
dec
cmc
jg
insb
jp
sbb
movsl
out
or
pushf
mov
lahf
or
xchg
clc
xor
ret
pop
outsl
mov
pop
dec
and
cltd
pusha
pop
loopne
sbb
ret
out
repz
or
loop
jae
push
xchg
aas
push
cwtl
imul
sub
inc
insb
pop
fstl
sbb
pop
and
test
jecxz
shrl
push
ret
jmp
in
adc
xlat
imull
cld
mov
inc
jl
imul
lock
fsubl
out
les
flds
jns
cli
fs
mov
inc
ret
push
rep
fs
xchg
nop
cmpsl
test
cmpsl
mov
ja
or
bound
jmp
sub
fcoml
ss
test
sbb
aad
rcrl
inc
adc
in
sub
fcmovbe
cs
push
push
inc
outsb
inc
cmc
out
scas
sbb
and
iret
or
popf
cmc
sbb
push
xor
aas
test
dec
add
in
imul
enter
xchg
dec
int3
inc
arpl
lock
mov
mov
iret
pushf
pop
sub
lock
mov
cmp
repnz
cmpb
dec
mov
inc
xchg
cmp
push
les
and
pop
pop
leave
cli
insb
rclb
push
cmp
gs
daa
imul
jns
mov
adc
ret
jmp
negb
push
xor
add
mov
pop
pop
ret
xlat
sbb
xchg
mov
dec
sti
movsl
inc
and
pusha
es
mov
cmc
push
dec
fwait
pop
aas
leave
adc
in
outsb
pop
mov
inc
xor
cmp
push
in
mov
aad
adc
stos
out
sub
push
test
dec
loopne
loope
push
xorl
notb
push
and
rorb
cmpsl
imul
push
mov
gs
and
sub
lea
inc
mov
ret
mov
jne
test
xchg
lcall
cs
xchg
cmp
or
xchg
pushw
jmp
pop
pop
adc
mov
mov
dec
cmpsl
mov
dec
push
arpl
inc
std
test
xor
inc
rolb
shrl
out
pop
stc
mov
sahf
iret
or
or
clc
or
pop
jl
cmp
xlat
mov
jno
push
push
jne
mov
dec
inc
aaa
lahf
pusha
mov
std
pop
imulb
xor
outsb
mov
pop
gs
sbb
mov
les
data16
adcb
mov
jmp
mov
iret
shll
pop
fisubrl
inc
loope
add
lea
jg
jg
adc
call
call
das
lahf
fwait
mov
pop
sub
rolb
fildl
xor
or
aaa
sbb
fdivrs
movsl
pop
clc
loop
mov
mul
mov
pop
push
in
pop
iret
insl
ja
in
jmp
inc
aam
sub
sahf
clc
mov
bound
dec
dec
and
mov
rorb
dec
push
mov
add
jae
inc
mov
cwtl
shrl
hlt
adc
pop
push
jne
outsl
lods
nop
sub
push
mov
mov
mov
shr
cmpsb
add
mov
mov
int
lret
xchg
in
pusha
cltd
jns
xor
jmp
cmp
insl
imul
in
or
lahf
outsb
movsb
mov
mov
out
lock
or
hlt
stc
enter
pusha
push
in
pop
add
dec
repnz
push
test
fcoms
in
dec
loopne
adc
in
popf
call
jne
push
jo
jp
pop
add
mov
xor
mov
pop
subb
shlb
inc
mov
jne
fcoml
scas
jmp
pusha
fnstsw
inc
sub
jae
add
push
mov
push
xchg
xor
stos
shrb
movsl
pop
sahf
stos
loop
cmpsb
add
sub
inc
daa
mov
jb
jnp
shll
fcmovu
cmp
in
cmpsb
jmp
sub
loope
js
jp
arpl
bound
xor
inc
push
mov
pop
imul
imul
xchg
add
rcr
pusha
pusha
shlb
lcall
mov
mov
loope
lock
pop
pop
mov
pop
inc
out
adc
xchg
add
dec
movsl
icebp
movsb
rolb
movsb
loope
int
xlat
fidivrl
sub
roll
fsubrs
aaa
pop
xchg
test
xchg
push
sub
mov
lret
sub
cmp
cmpsl
sahf
add
subl
hlt
mov
popf
sub
jb
push
push
xchg
pop
xchg
pop
mov
xor
inc
loopne
popa
xchg
rcrl
nop
xor
mov
lods
sub
xor
imul
add
mov
add
aas
sbb
outsl
fwait
fs
inc
dec
clc
iret
out
inc
fidivrs
xchg
adc
push
adc
dec
aaa
mov
fisubs
inc
sbb
mov
sbb
stc
pusha
add
ss
adc
clc
inc
push
dec
xor
and
push
insl
ljmp
jmp
mov
adc
sub
sub
inc
sub
xchg
stc
nop
mov
jnp
fimull
in
xchg
xor
movsb
pop
push
gs
data16
push
dec
mov
add
push
sub
shrl
cmp
mov
jmp
sub
cmp
test
inc
and
pop
gs
xor
ret
cmp
dec
jl
jae
push
ljmp
sbb
jl
fimuls
push
dec
jl
add
testl
jo
call
call
pusha
cmp
movsb
push
sbb
jecxz
inc
mov
jae
stos
jo
dec
stc
cmc
adc
icebp
cld
cmp
or
cltd
subl
jecxz
mov
mov
adc
pop
inc
adcl
das
push
and
xrelease
adc
pushf
loope
popa
bound
popf
scas
lret
sub
push
mov
adc
bound
outsb
nop
xor
mov
into
das
dec
xorl
mov
mov
movsb
fcompl
xchg
jnp
movsb
sbb
inc
sti
add
and
mov
stos
repz
in
nop
sti
push
lods
push
loope
sbb
push
fsubrs
data16
sub
imul
hlt
adc
jo
pop
cld
push
jnp
sbb
mov
inc
push
push
cmc
mov
push
push
das
mov
popa
inc
hlt
sbb
aaa
push
in
repz
sahf
cmpl
push
pop
mov
and
push
push
adc
xchg
lea
mov
sbb
pushf
out
cmpl
xlat
in
and
add
sbb
shlb
dec
xor
pop
fidivrs
lret
mov
inc
add
jo
push
cmp
fdivs
daa
out
lods
je
mov
fldl
test
scas
mov
fimull
sbbl
dec
sar
add
dec
xchg
leave
mov
jns
loop
ds
sub
adc
testb
add
xchg
adc
push
jae
push
xchg
in
out
sub
mov
mov
movsb
push
arpl
xchg
imulb
add
mov
loope
mov
movsl
aaa
dec
and
pop
or
mov
lret
mov
inc
and
lods
scas
stos
pop
fmuls
je
call
sbb
xor
jp
movsb
lock
inc
out
mov
jns
add
push
mov
push
js
mov
mov
dec
xor
lods
jmp
rcll
xchg
pop
mov
enter
mov
gs
test
cmp
inc
push
fcmovnu
xor
mov
hlt
sbb
cwtl
in
scas
mov
mov
cld
mov
mov
jb
test
imul
add
push
pop
cwtl
xchg
mov
out
add
xlat
sbb
add
dec
mov
or
fsubl
loope
or
stos
xlat
aas
lock
jbe
cmp
inc
loope
repnz
js
and
mov
mov
pop
repz
push
xchg
fcomps
in
and
ljmp
loope
cmp
inc
xchg
sahf
dec
jmp
ret
inc
mov
mov
inc
les
and
movb
cli
icebp
inc
orb
idiv
add
lcall
ljmp
rcrl
inc
mov
xchg
push
mov
mov
adc
sub
ss
xorb
jmp
mov
mov
sbb
mov
mov
inc
jge
cs
out
ret
jecxz
imul
movsb
dec
dec
je
lcall
cmp
out
push
and
movsb
pushf
dec
or
scas
mov
jne
jmp
mov
xchg
mov
iret
inc
jb
adc
aad
and
add
mov
inc
loop
lods
xchg
xchg
fsubs
mov
aas
pop
push
mov
out
ret
dec
cwtl
andl
insl
andb
stc
xor
adc
gs
sbb
aam
xchg
push
imul
pop
cli
cmp
outsl
call
mov
pusha
jbe
cltd
sub
cld
mov
int
int
shr
push
rorb
vmovd
jmp
clc
dec
insl
xchg
push
orb
pop
sti
and
or
pushf
xor
mov
lahf
jecxz
popa
push
and
daa
in
jp
push
mov
out
cmc
add
mov
scas
add
jmp
cmpsl
iret
lods
and
movsl
clc
pop
lock
stos
fidivl
ficoml
mov
push
push
loop
lods
icebp
xchg
aas
ljmp
dec
aam
in
fisttpl
shll
or
sub
movb
adc
sarl
add
sti
push
iret
pop
cmp
add
xchg
dec
jne
xchg
sahf
pop
insb
mov
adc
rol
add
cmp
or
fwait
push
cmpsl
shrb
imul
sub
stc
pop
dec
xchg
push
adc
or
popf
push
in
inc
mov
mov
sub
or
sbb
cmp
sar
or
aas
daa
insb
jns
xchg
mov
add
mov
idivl
and
push
lret
jp
movsl
fsubl
fisttps
int
leave
jae
popf
shl
or
icebp
std
add
push
dec
add
xchg
pop
rcr
dec
adc
mov
cltd
repnz
mov
cmp
cld
cmp
cld
or
push
test
aaa
inc
and
mov
adc
insb
mov
mov
nop
insb
jns
mov
into
dec
or
xchg
or
cmc
aaa
stos
in
mov
daa
sbb
add
push
mov
adcl
cld
xor
and
hlt
pop
stos
stos
cmp
add
mov
jbe
stos
and
sub
lods
push
mov
movsb
xor
dec
imul
subb
mov
outsl
arpl
adc
add
outsb
jl
and
loope
inc
lret
mov
adc
sbb
xchg
cmp
es
sbbb
inc
mov
adcb
hlt
in
jecxz
jge
mov
xor
imul
push
filds
cmp
mov
mov
sbb
or
int
test
fdivs
pusha
add
jo
lods
mov
mov
or
fdivs
adc
bound
inc
lods
loope
inc
sbb
sbb
fldcw
bound
push
jcxz
lock
dec
stc
sti
xchg
test
lea
push
adcl
subb
inc
mov
inc
push
fdiv
in
jle
lret
add
mov
push
sbb
dec
inc
cmc
xchg
stos
adc
lods
into
daa
push
mov
mov
push
jb
mov
enter
ss
mov
xchg
add
mov
jecxz
imul
dec
xchg
pop
jne
fidivrl
adc
int3
aam
jle
xchg
call
jne
mov
mov
xchg
adc
or
lret
push
lea
stos
scas
and
push
jge
inc
sbb
mov
jbe
out
xchg
inc
push
adc
fisttpl
inc
add
sub
fstpl
pop
clc
lret
mov
enter
jnp
shll
daa
xchg
xchg
xchg
adc
xchg
sahf
in
stos
lahf
pop
xchg
xor
popa
adc
fdivrl
dec
addr16
adc
cs
out
and
std
popf
fcompl
xlat
scas
lret
or
inc
mov
popa
movb
adc
aad
ds
sbb
add
sti
call
and
and
js
lret
pop
adc
cld
mov
popa
mov
daa
cmp
xchg
in
les
stos
push
repnz
dec
or
push
cmp
adc
out
mov
sbb
xorb
ret
lods
mov
inc
orb
push
xrelease
push
push
in
pop
or
cmp
cli
adc
cs
mov
pop
lods
dec
cltd
jae
add
mov
adc
fstpt
cs
cmc
xchg
mov
imul
faddl
ljmp
xor
dec
ljmp
push
cmp
ds
adc
rcll
jno
mov
test
in
in
shl
leave
je
lea
icebp
stc
xor
mov
lcall
dec
push
cmpsb
cmpsb
mov
and
ljmp
mov
repnz
push
js
sub
frstor
pop
add
fsubrl
mov
repz
add
das
adc
mov
add
mov
out
mov
shll
shl
stos
dec
and
pushf
xor
adc
ds
add
jl
ss
dec
test
add
icebp
add
das
sbb
imul
and
cmp
pop
bound
test
and
push
ljmp
fbstp
pop
rol
pop
pop
jp
mov
sbbl
sarl
inc
imul
mov
mov
xchg
gs
xchg
jp
push
jne
cmp
fistps
sti
push
add
orb
loope
fs
movsl
cmp
insb
jg
sbb
jg
mov
int
or
adc
test
insl
cld
mov
push
mov
fisttpl
ret
shll
repz
dec
jb
mov
xchg
inc
mov
mov
push
mov
ljmp
lods
in
repnz
shl
push
sub
insb
sub
or
adc
adc
inc
push
mov
nop
jmp
jo
jno
jecxz
scas
lods
pop
xchg
sbbb
jp
pop
inc
popa
data16
add
mov
sbb
aad
or
dec
adc
nop
mov
ss
xor
pop
sub
push
cli
hlt
sub
mov
pop
mov
fldcw
xchg
arpl
cmp
jne
jl
sti
jecxz
adc
dec
fstpl
cli
inc
je
xchg
adc
in
es
mov
add
push
into
cmc
movsl
and
push
jns
jp
xor
push
inc
xor
sbb
xor
push
mov
ficoml
mov
cld
es
and
adc
mov
push
out
pop
icebp
inc
stos
xor
jmp
mov
std
incl
mov
or
sub
cmpsb
mov
inc
faddl
mov
fsubs
jbe
loop
insl
loop
jns
orb
mov
mov
lods
dec
cmp
cvttps2pi
cmp
fst
js
insb
add
sbb
jmp
xchg
xor
xchg
mov
fisubrs
fistpll
insl
sub
mov
stc
sub
cwtl
bound
in
push
xor
pop
dec
ja
xchg
dec
inc
loop
ljmp
inc
and
adc
inc
dec
xchg
pop
sub
sbb
jne
push
inc
push
cmp
ret
mov
cmpl
iretw
repnz
jmp
adc
push
cmp
jecxz
out
ds
out
pop
rclb
nop
and
das
xor
aas
cmp
mov
nop
add
xchg
jl
fcomp
sub
cmc
fisttpll
cwtl
dec
popa
pop
pop
xlat
dec
xor
dec
aaa
addr16
insb
fstps
dec
mov
cmpsb
test
pusha
mov
lret
loope
and
bound
arpl
fistpll
add
jl
cmp
mov
rorb
loop
std
push
push
inc
mov
mov
cmc
hlt
std
adc
fs
aaa
cmp
lods
clc
fldt
mov
mov
daa
push
dec
outsb
testl
stos
jp
xlat
pop
mov
mov
inc
maxps
insb
addr16
iret
cld
ret
adc
mov
xlat
ss
sbb
stos
jno
pop
notb
jl
fisubrs
es
in
out
push
fmull
inc
xchg
cmpb
mov
push
add
push
les
inc
sub
or
loop
outsl
sub
push
repz
xchg
xchg
push
fwait
sbb
mov
xor
push
movd
push
outsl
lahf
xchg
pop
fisubrl
pushf
sub
fmull
in
push
pop
stc
cmpsb
ja
xor
xor
inc
aam
xchg
mov
fld
pop
fistpl
pop
mov
sti
push
mov
push
or
xor
adc
sbb
jmp
cld
push
mov
subl
xchg
cwtl
insl
pusha
or
xchg
xor
aaa
lahf
lock
leave
imull
pop
mov
cmpsl
sub
sub
mov
enter
sti
push
inc
xor
inc
nop
gs
jne
or
jle
cmp
std
stos
or
jl
scas
shll
pusha
push
out
enter
add
sub
fistps
imul
icebp
push
xchg
mov
push
adc
dec
lcall
jnp
inc
imul
sub
mov
sbb
cmc
ss
xor
xchg
test
test
push
adc
pop
dec
jns
mov
push
mov
fimuls
into
sbb
sbbb
sub
or
push
push
push
sbb
xor
pop
mov
and
lock
cmp
add
sub
xor
fildl
mov
pop
das
sarl
mov
cmpl
cmp
push
pop
out
subb
jecxz
mov
cs
call
outsl
scas
jo
mov
pop
jg
pop
ljmp
fwait
mov
or
pusha
cld
fistps
sbb
das
lea
jns
les
pop
imul
js
push
sub
jecxz
sub
stc
pushf
xor
into
xchg
repz
inc
fwait
pop
dec
add
popf
add
hlt
inc
pop
mov
iret
push
cmp
and
lret
jno
lea
aam
out
iret
or
or
out
jl
frstor
mov
push
jl
push
aaa
inc
xor
sub
jp
mov
into
call
movsb
sub
and
mov
adc
mov
lret
push
dec
arpl
enter
xor
mov
fistps
notb
and
add
push
scas
mov
repz
add
push
ss
cwtl
and
sti
stos
push
std
scas
cltd
fists
cmc
push
in
mov
jmp
iret
dec
bt
repz
or
cmpsb
jae
adc
shl
ret
adc
inc
outsb
lret
ljmp
jl
cmp
mov
xor
ret
fcomps
xchg
mov
das
pushf
fimuls
js
and
roll
jnp
sub
pop
mov
cwtl
cmp
pop
call
sbb
in
scas
inc
pop
test
imul
imull
or
enter
dec
shll
dec
cmpsl
test
dec
cmpsl
jge
rolb
xchg
pop
sub
xchg
pop
mov
es
or
add
sti
outsl
test
or
sbb
cs
aam
or
add
dec
ror
push
push
mull
mov
and
pop
mov
jbe
inc
or
xor
test
fs
dec
loop
scas
dec
jnp
dec
mov
aad
ret
push
and
movsb
mov
xchg
inc
adc
ret
test
add
push
mov
gs
out
dec
out
mov
mov
ficomps
cmp
stc
mov
jno
imul
cmp
leave
roll
xchg
inc
rcrb
xchg
cmpsl
lret
jo
inc
stos
mov
in
jmp
xchg
das
sbbl
outsl
ds
mov
call
scas
test
pop
jmp
dec
mov
adc
ss
push
clc
xor
jp
mov
jbe
mov
dec
movsl
or
in
push
or
into
sub
push
push
in
push
or
cmpsl
les
sahf
mov
int
scas
adc
jno
jmp
out
popf
imul
js
ljmp
mov
cmp
sub
andb
loopne
adc
jl
fisttpll
mov
jns
mulb
psubq
mov
xchg
dec
push
push
xor
fisubrs
movhlps
add
or
insl
push
aaa
jb
out
ljmp
fcoms
lods
loop
test
insl
push
sarl
imul
dec
jb
mov
inc
mov
movsb
insb
test
sti
inc
dec
stos
jns
pop
addl
insb
add
push
jmp
cld
xor
daa
pop
push
mov
rcrl
xchg
xchg
shll
in
outsb
dec
mov
je
or
sub
test
xchg
pop
jo
daa
dec
mov
clc
or
adc
icebp
mov
test
fdiv
out
cs
jmp
mov
push
lea
pushf
inc
adc
pop
icebp
add
pop
adc
xor
ja,pt
shlb
pop
jne
jb
xchg
push
mov
xor
jno
clc
push
cmp
imul
jbe
leave
cmpsl
jl
jl
or
loop
into
jne
icebp
dec
push
lock
xor
inc
cmp
jno
mov
lods
ret
pop
bound
in
mov
xchg
jmp
test
cmc
push
and
xor
dec
xor
test
les
xchg
jo
push
mov
cmp
push
test
out
fmuls
cmc
cmp
xchg
xor
popa
in
shll
fstl
enter
popa
mov
and
xchg
xchg
or
enter
psubusw
add
mov
cmp
mov
popa
lahf
out
bound
cli
ds
scas
dec
test
adc
xor
mov
cmp
in
fwait
cmp
jge
gs
cwtl
out
pop
adc
sti
pop
or
adc
mov
stc
repnz
hlt
icebp
lock
bsf
or
sub
out
dec
xchg
and
out
test
xchg
lea
jle
and
lahf
cmp
stos
mov
aas
inc
sub
mov
cli
pushf
xor
xchg
xor
clc
mov
add
fnstcw
xor
push
cltd
cmp
adc
cmc
pop
pop
and
subb
call
into
xor
mov
mov
in
jge
pop
and
es
in
jo
popa
pushf
pop
dec
push
push
inc
clc
xor
push
dec
out
hlt
dec
push
xchg
inc
in
mov
lods
mov
xor
insb
in
jp
jnp
je
mov
outsb
push
out
lcall
jo
jbe
mov
pop
daa
lret
fcomps
fdivs
lret
lods
imul
ss
mov
sub
fiadds
js
cmp
fidivrl
and
xor
jb
insb
mov
fists
ret
icebp
inc
xchg
es
mov
cmp
ja
and
repnz
inc
enter
add
sti
lret
out
es
dec
jae
mov
dec
rorb
mov
xchg
adcb
ss
inc
inc
pop
jp
ds
das
sub
add
addb
pop
sub
mov
cmpsl
imul
out
iret
sahf
rol
xchg
pop
add
ret
popf
dec
dec
adc
adc
mov
mov
pop
adc
mov
pop
leave
int3
in
cld
cwtl
pop
test
leave
dec
or
lret
into
insl
jnp
mov
xor
stos
xchg
pop
adc
out
frstor
pusha
cs
pop
out
rcll
sbb
mov
xchg
mov
aad
sub
mov
pop
je
xchg
xor
call
imul
gs
sbb
pop
addl
ret
jb
js
aam
mov
jae
cmpsl
jecxz
imulb
and
in
stos
ficompl
add
xchg
insl
movsl
jmp
cmpsb
mov
cmp
mov
pop
adc
jae
or
dec
and
xchg
inc
flds
jo
into
push
rcr
add
movsl
push
les
push
jp
inc
out
popf
stc
leave
cmpsl
pop
lds
or
and
add
adcl
fwait
sub
pushf
inc
outsb
pop
lods
jno
xchg
lahf
aam
dec
dec
test
shrl
int3
ja
leave
shrl
loopne
xchg
inc
dec
subb
xchg
xchg
xchg
add
push
minps
sub
inc
adc
jne
data16
inc
push
push
xchg
jmp
roll
sub
inc
mov
push
push
mov
daa
call
cmpb
icebp
rcll
fidivrs
test
sbb
fs
jne
push
inc
add
fwait
and
js
push
loope
icebp
out
push
or
call
cmpsl
push
stos
sub
dec
adc
cmp
mov
shrl
inc
lds
bound
int
hlt
test
sbb
xchg
cmpsb
call
or
ds
dec
xor
push
vpsadbw
dec
shl
lahf
inc
and
ret
jne
mov
inc
faddl
mov
xchg
test
mov
or
add
push
xchg
inc
xlat
or
loop
and
jno
nop
dec
invd
shlb
ror
push
add
sub
jg
push
lds
sub
adc
mov
inc
sbb
clc
enter
pop
pop
enter
pop
or
mov
mov
fdivl
les
outsb
add
aad
push
lret
cmpsl
mov
stos
arpl
fwait
jns
xchg
ss
outsb
jl
cltd
xor
pop
in
mov
pop
lcall
inc
outsl
and
mov
notl
dec
roll
loop
jmp
mov
pop
lea
cltd
popa
fwait
icebp
cmp
icebp
sbb
pop
pop
xchg
xchg
push
sub
stos
fpatan
das
pop
ret
inc
cli
into
jns
xor
mov
out
idivb
pop
xor
push
jge
sbb
int3
imul
sub
lea
pop
outsb
mov
out
cld
js
incb
rcl
dec
shl
cltd
add
mov
lea
xchg
mov
pop
or
std
int3
pushf
repz
add
inc
pushf
bound
ja
and
dec
stc
nop
orb
push
mov
call
ds
inc
jmp
add
mov
or
addr16
mov
andl
adc
loopne
inc
jp
mov
xor
in
pop
loop
add
cmp
ss
sub
sti
ja
sbb
adc
mov
das
pop
or
mov
push
pop
pop
add
cli
inc
lret
movsb
xor
jne
das
jnp
scas
add
mov
pop
and
dec
jle
data16
add
je
cmpsb
sub
lret
inc
ret
xchg
sti
xchg
and
iret
loope
addl
sbb
addr16
movsb
inc
faddp
test
fisubl
lret
pop
sub
jb
es
or
shll
sbb
testb
bnd
xchg
ss
test
in
cmpsb
js
inc
push
lds
lcall
and
or
and
aaa
inc
jle
push
lods
les
and
push
push
movsl
dec
cld
inc
clc
fstl
cmpl
xor
push
stc
xchg
fimuls
mov
pop
shr
sbb
xchg
jecxz
stc
jb
push
sub
ljmp
pop
movsl
xchg
lea
jmp
xor
rorb
clc
test
inc
lea
mov
adc
dec
sahf
icebp
or
or
mov
in
pop
adc
test
pop
shl
call
xor
add
cmp
jb
xor
pop
icebp
push
add
outsb
push
lods
mov
inc
dec
loopne
aaa
leave
ja
cmovae
icebp
mov
or
pushf
fs
sub
mov
dec
popa
push
bound
fistpl
pop
inc
mov
dec
jno
je
pop
cli
fisubl
inc
add
sbbl
pop
movsb
mov
aas
pop
or
shll
inc
dec
scas
sahf
push
repnz
pop
mov
fwait
and
sbb
imul
jae
addr16
insb
inc
jno
in
pop
pop
pop
pop
cwtl
xchg
add
sbb
push
adc
pop
mov
stc
cmp
stos
push
scas
add
clc
mov
sbbb
sahf
or
sub
adc
jnp
cmpsb
dec
mov
fists
cld
pop
dec
js
dec
inc
je
and
in
xor
add
lret
je
movsb
stc
lahf
pop
rsm
inc
xchg
sbb
fisubrl
add
stos
popl
fistps
inc
fmul
jnp
and
les
cs
adc
inc
clc
ret
hlt
fsub
scas
sbb
rcr
push
dec
and
mov
cltd
xchg
adc
subb
into
sbb
xor
and
xchg
ss
sub
mov
fcompl
adc
inc
fmull
stos
pop
inc
fldcw
cmpsl
and
or
xchg
xchg
std
push
inc
negb
adc
jmp
decb
add
mov
lret
cmpl
xchg
mov
push
repz
mov
push
lret
inc
add
pushf
insl
leave
int3
xor
or
xor
movsb
stos
ljmp
xchg
inc
pop
dec
in
jmp
lret
fwait
scas
jle
sbb
mov
push
lret
or
andl
push
out
add
push
pop
adc
pop
lods
roll
stc
ja
adc
mov
hlt
insl
push
aas
pop
fcom
out
push
inc
jl
arpl
test
pop
notl
faddp
jbe
dec
loope
adc
bound
adc
xchg
sbb
mov
or
mov
pop
adc
icebp
add
pop
or
or
mov
dec
imul
sbb
js
cmp
sbb
insb
stc
jns
mov
scas
movsb
nop
shlb
xchg
mov
adc
sbb
mov
mov
mov
jl
xchg
or
sarl
fwait
in
hlt
movl
testl
xchg
shll
jo
sub
inc
sarl
sub
stc
ss
cmp
push
cmpb
sub
sbb
aam
and
mov
daa
sbb
or
add
mov
popf
ss
lods
cmp
mov
rorb
adc
cmp
std
lods
fwait
imull
outsb
lods
sbb
jmp
xor
ds
pop
add
jmp
sahf
popa
leave
jbe
imul
ja
mov
aas
pop
pop
or
lds
mov
test
mov
adc
out
aaa
pop
mov
mov
in
popl
shlw
adc
mov
int3
test
mov
sbb
cmp
mov
cwtl
pushf
inc
cmp
xchg
cmpsb
mov
hlt
add
mov
adc
gs
js
xorl
mov
imul
out
fists
je
sbb
jno
adcb
lock
jecxz
gs
pop
imul
cwtl
jge
mov
push
mov
mov
rorl
sbb
push
sbb
ret
stos
mov
popf
pop
inc
movb
xchg
dec
xchg
add
fiaddl
stc
pusha
loop
fwait
mov
cmpl
test
dec
mov
cmpsb
jl
push
loop
push
movhlps
xor
leave
lock
sbb
dec
push
clc
push
mov
and
mov
leave
shll
ret
mov
and
mov
cmp
movsb
pop
idivl
ljmp
push
add
fstps
mov
icebp
stos
xchg
mov
pop
mov
xchg
loop
sub
shrl
and
add
in
xchg
mov
add
dec
nop
pop
test
out
shlb
mov
push
pushf
ficoms
mov
xchg
in
jbe
jg
push
inc
out
dec
not
and
mov
imul
inc
movb
add
repz
xchg
scas
mov
xor
dec
xchg
nop
aas
lds
clc
insl
adc
ss
movsb
sti
sbb
nop
movb
lods
fs
xor
sbb
jae
sbb
fs
enter
data16
sahf
xchg
cmp
int3
and
jl
test
mov
add
lods
mov
in
inc
mov
jae
inc
ss
in
add
test
xor
xor
gs
push
fwait
mov
add
jle
std
mov
insl
je
xor
mov
stos
xchg
jl
mov
lret
cmp
movsb
inc
in
dec
leave
xchg
scas
xor
inc
cld
or
ds
xchg
xor
cld
sbb
scas
inc
push
xorl
sub
or
lea
mov
repnz
mov
inc
mov
dec
ja
cmp
mov
sarb
notl
pop
ret
pusha
repnz
cmpb
xchg
hlt
push
and
push
shlb
mov
xor
and
repz
inc
dec
add
mov
cs
push
sbb
outsl
mov
mov
lret
testb
jns
xor
pop
stc
jp
sbb
dec
jmp
insb
jb
repz
loopne
cld
mov
sarb
push
dec
out
stc
mov
popa
je
rorl
dec
fnstsw
inc
or
lahf
ss
ss
inc
scas
aas
or
push
popa
jno
mov
insb
fildl
mov
cmpsb
pop
push
or
rolb
push
rcrl
mov
lds
add
xchg
insl
popf
and
add
cwtl
cmovge
mov
xchg
sbb
xor
mov
fcmovnbe
rclb
mov
addb
push
jo
in
stc
dec
lret
lods
clc
ljmp
fdivr
cltd
adcb
js
cmp
mov
pop
push
pop
sbb
xchg
add
lods
pop
es
xchg
push
mov
stos
leave
das
inc
aad
fisubl
leave
repz
fildll
adc
fucom
es
and
jb
pop
pop
inc
pop
out
jns
in
push
jecxz
imul
in
js
or
cmp
mul
pop
cmp
fidivrs
addl
rorl
dec
pop
mov
popf
jmp
sbb
fcomi
lock
inc
xchg
inc
push
add
xchg
fsubl
sub
mov
mov
fadds
adc
mov
in
push
ss
or
mov
fdivl
add
or
push
ret
movsb
mov
pusha
push
lods
rcr
mov
cltd
inc
rclb
add
adc
jno
hlt
jo
jecxz
or
jmp
add
fs
daa
adc
mov
pushf
or
add
mov
xor
mov
mov
aaa
add
out
add
add
push
arpl
mov
or
adc
inc
sbb
add
mov
push
pop
jecxz
lret
rcrl
fisttpll
push
sub
adc
xchg
sub
jmp
insb
inc
ds
sbb
mov
or
lods
mov
xchg
sbb
fsubl
xor
in
xchg
jno
movsb
jnp
fisttps
rol
shlb
adc
sub
ljmp
scas
or
inc
push
movsb
lcall
jle
cmp
subl
test
add
sub
mov
pusha
test
mov
push
std
lods
cli
push
adc
xorb
lahf
imul
or
mov
inc
das
popa
adc
cmpsl
mov
jne
gs
test
mov
loope
aad
dec
add
aaa
nop
lods
adc
cwtl
jp
xchg
addb
xchg
or
xor
xchg
dec
add
nop
xor
fcompp
js
dec
scas
ljmp
shl
bound
popf
inc
orl
cltd
lods
or
cwtl
testb
sub
xchg
out
cmpsl
cld
cs
icebp
stos
inc
dec
lahf
andl
xor
lock
mov
fisttpll
lahf
sbb
lods
sub
pop
jle
lods
xor
icebp
hlt
cmp
adc
cwtl
popa
ja
adc
jo
pop
push
rol
test
push
mov
clc
mov
ror
insb
inc
jmp
jmp
and
and
mov
pop
adc
repnz
cmp
mov
cmpsb
int
fstpt
ds
sbb
and
inc
cmp
push
jb
mov
mov
ss
jge
dec
int3
xchg
cwtl
add
test
movsb
add
into
xchg
sub
ret
and
mov
inc
sbb
repz
in
insb
cmc
xchg
push
fsubp
fs
loop
sti
rcl
movsl
xsaveopt
es
repnz
nop
jg
xor
inc
in
sub
or
cmp
cmc
sbb
es
and
inc
insl
jg
xchg
push
adc
jg
ds
jns
call
dec
js
push
sub
mov
call
dec
ret
imul
dec
pop
lock
pop
das
push
push
testb
cs
stos
and
jmp
xor
mov
adc
dec
stc
xchg
jmp
data16
mov
into
sbb
cmp
ja
lds
aad
ss
pop
negl
dec
ret
xchg
add
aad
fdivrl
inc
mov
xor
push
mov
jo
sbb
or
sbb
test
add
stos
xorl
mov
outsb
lea
lcall
fists
fcoml
cmp
out
sbb
cmc
or
hlt
das
sbb
stos
loop
enter
call
xchg
out
sub
stos
sbb
xlat
push
jnp
test
leave
aaa
out
inc
push
cmp
test
cmpsb
into
shll
xchg
and
mov
jb
add
mov
incl
scas
jg
icebp
cli
cmpsb
orb
push
aaa
or
and
lea
sub
imul
loop
scas
test
dec
call
sbb
iret
pop
stc
repnz
mov
add
jae
push
in
jne
push
inc
xor
insb
jl
es
mov
rclb
xchg
dec
insb
add
adc
sahf
mov
aaa
xchg
aas
add
dec
jbe
sbb
insl
and
pusha
repnz
sbb
add
loop
mov
call
movsb
int
ret
adc
and
or
sub
pop
add
xchg
xchg
daa
dec
daa
adc
andb
aad
jbe
lea
std
push
fcomps
gs
inc
push
mov
fildll
lock
jge
je
sbb
cmp
or
push
aam
out
daa
sub
xchg
icebp
push
addr16
sub
mov
jg
mov
fucomi
and
mov
fdivs
jle
nop
mov
mov
fnsave
or
inc
aam
jmp
mov
loope
sahf
aas
fcmovnb
and
aam
pop
out
jae
in
or
pop
cmp
data16
xor
sti
pop
ljmp
sbb
cwtl
mov
jb
or
sbb
jne
mov
js
in
into
pop
loop
sti
ljmp
lcall
int3
mov
or
icebp
repnz
cmpsl
add
call
jle
ja
enter
shl
jae
fistl
inc
pushf
sbb
inc
adc
cmp
add
jno
jge
add
push
cmp
cmp
loope
sbb
icebp
lahf
lea
pop
sbb
stos
mov
stos
mov
xor
sub
pusha
push
sub
frstor
scas
cltd
xor
add
adc
sbb
jl
call
ss
test
pop
loopne
addr16
pop
les
pop
insb
or
add
les
out
dec
pushf
aas
xor
lret
push
pop
sub
sbb
mov
cmpsb
ljmp
das
push
sarb
push
or
or
popf
scas
jno
pop
pop
cli
sub
mov
call
in
push
mov
fwait
movsb
call
enter
cmp
sub
in
or
xlat
dec
ret
rorl
jne
inc
sub
shll
aam
call
dec
jae
mov
xchg
adc
adc
je
fiadds
xchg
dec
jns
addb
inc
test
mov
and
pop
hlt
mov
mov
test
mov
sub
push
dec
jge
jge
pop
outsl
sbb
pop
std
mov
adc
popa
cmp
nop
mov
pusha
sub
jecxz,pn
fistps
and
xor
push
sub
jno
mov
jg
lods
cs
ss
jg
pop
mov
dec
int
mov
scas
mov
imul
movsl
out
outsl
adc
mov
cmp
adc
or
das
je
fsubrs
cli
xor
cli
enter
xor
decb
in
lret
mov
sub
pop
mov
jno
pop
fwait
jae
loop
aaa
mov
das
les
call
shlb
les
and
xor
icebp
push
inc
add
fwait
js
sbb
push
and
outsl
jo
cmp
imull
xlat
pop
js
pavgw
pop
divb
inc
mov
lods
mov
mov
mov
inc
mov
lods
mov
add
cld
adc
push
hlt
pop
jb
cli
cmp
xchg
into
and
jg
shll
fistpll
aaa
mov
daa
or
lods
sbb
mov
sbb
lahf
cmc
test
inc
jae
push
lret
jae
aad
mov
stc
fldt
leave
rcrb
adc
into
xor
jmp
jg
cld
add
test
sbb
mov
fdivs
jl
test
jnp
lock
loopne
adc
mov
repz
je
jne
lea
lea
pop
mov
or
popa
aas
mov
add
sub
inc
adc
popa
mov
popf
mov
adc
push
xor
stc
adc
xchg
imul
gs
add
sbb
js
in
inc
arpl
imul
xchg
push
fcompl
dec
in
sub
mov
pop
out
leave
mov
ja
inc
ss
jno
jne
shll
aad
adc
adc
push
xor
jecxz
cmpl
out
mov
or
inc
jb
sarl
sub
mov
or
stc
ret
jecxz
push
shl
imul
rcll
cmc
or
cli
iret
ret
xlat
aad
cs
pcmpeqb
or
sbb
lahf
dec
imul
mov
ja
push
mov
mov
rcrb
sub
or
push
loope
mov
lahf
add
int
mov
push
push
scas
jmp
adc
add
and
jo
mov
ds
sbb
jo
cmp
pop
mov
mov
push
notl
scas
inc
push
push
add
iret
lcall
or
ret
sarb
jl,pn
xchg
jb
in
pop
scas
add
into
test
mov
sbb
sub
or
cmp
stc
adc
ljmp
out
pushf
sahf
xlat
or
push
clc
lcall
push
mov
int
in
push
test
xlat
adc
mov
inc
jae
ljmp
lods
push
ret
push
popa
push
insb
test
sbb
rolb
punpckhbw
inc
xchg
test
outsb
cld
cmpb
movsb
stos
lods
imul
outsb
mov
sbb
shll
xor
xor
dec
je
movsl
pop
sbbl
test
rorl
repnz
es
and
hlt
sub
jnp
xor
outsl
pop
dec
lock
sbb
fldl
and
fisubl
in
enter
cmp
popa
lds
adc
and
dec
imul
push
dec
jb
sbb
pop
dec
cmp
xchg
iret
andl
ret
test
pop
popf
frstor
pop
push
test
je
test
push
inc
pop
mov
cmp
stos
sub
inc
adc
jmp
icebp
test
jge
cmpsb
jae
jno
mov
adc
xor
pop
dec
jg
cltd
push
xchg
or
in
push
sub
push
mov
mov
mov
clc
or
push
push
xchg
sub
push
jg
xchg
insb
or
pop
dec
inc
and
sbb
dec
xor
and
les
sti
inc
pop
push
aam
lds
out
inc
push
movsb
mov
cwtl
mov
jae
mov
fstpt
repz
xor
mov
fisubrl
mov
or
and
pop
icebp
dec
adc
cmp
nop
das
jge
push
cltd
cmp
sbbl
mov
sarl
stc
stc
inc
test
adc
pop
mov
into
gs
lret
sbb
lds
cmp
test
push
xchg
cld
xor
bound
push
test
mov
repnz
ds
insb
add
fmuls
jg
scas
mov
xchg
lods
clc
or
insl
mov
cmp
adc
cmp
mov
nop
pop
cmp
mov
movsl
aam
stos
imul
cmpl
in
sbb
cs
iret
clc
call
pop
mov
fsubs
pop
or
shlb
out
in
and
or
cmp
mov
or
adc
add
mov
loopne
lea
std
push
icebp
dec
or
sub
repz
jns
stos
mov
mov
adc
lret
push
sbb
aaa
scas
push
push
mov
lret
sbb
xor
push
add
push
test
outsl
push
xchg
in
in
jo
rorb
xchg
xor
sbb
push
int3
xchg
divb
or
aas
sbb
pop
aad
cmpsl
pop
jbe
push
jp
mov
iret
push
adc
pop
dec
mov
enter
cltd
sarb
sub
xchg
pop
cmp
sub
shl
add
jbe
arpl
or
insl
stos
sub
jns
sarl
bnd
sub
xchg
and
xchg
popf
push
xor
out
bound
pop
out
sub
sbb
std
idiv
add
inc
dec
insl
not
cmp
jle
and
in
icebp
scas
and
xchg
pop
cs
out
adc
lds
mov
sbb
popf
add
movl
cli
imul
or
jnp
call
mov
test
or
jo
xor
add
gs
inc
mov
add
lods
xor
popf
xor
lcall
adc
movsb
inc
stc
xor
fs
cltd
ret
and
cmp
mov
sbb
xor
add
cmp
pop
jbe
into
inc
push
out
movsb
xlat
jo
hlt
dec
fcomip
dec
mov
les
dec
xchg
jbe
out
dec
in
jns,pt
lods
test
mov
pop
pop
sub
mov
cmpsb
das
sub
add
push
js
imul
add
sbb
jae
add
cld
ficoms
icebp
mov
sbb
arpl
inc
pop
sbb
mov
je
push
add
ja
and
js
sub
mov
fadds
mov
jne
fistps
popf
jae
inc
push
inc
and
jno
pop
push
aam
xchg
mov
sti
inc
adc
dec
rcll
xlat
dec
or
scas
popf
push
mov
data16
loopnew
test
or
mov
xchg
mov
cli
test
mov
and
mov
sbbl
xor
lahf
loopne
push
loop
and
push
inc
xchg
je
stc
fld
inc
jne
pop
dec
sub
js
ficoml
pop
push
xchg
pop
xor
cmp
frstor
negb
loop
pop
mov
xor
sub
out
pop
inc
outsb
andl
out
sbb
cltd
xchg
dec
jae
push
aad
jne
inc
popa
imul
jns
ret
jnp
inc
iret
push
aaa
ja
xor
and
sbb
cmp
xchg
inc
xchg
loope
jo
insb
mov
and
rclb
add
scas
fiadds
loope
jle
mov
inc
jno
mov
mov
mov
inc
out
nop
out
movb
rcrl
mov
pushf
bound
lcall
inc
std
adc
and
cmp
mov
xchg
jnp
cli
stc
push
sub
push
xchg
test
jg
ret
in
daa
mov
arpl
test
mov
add
push
mov
sub
lods
or
adc
hlt
or
ja
andb
inc
ljmp
mov
fnstcw
cltd
shll
sub
out
push
fwait
xchg
xlat
cmp
leave
daa
xchg
and
lret
fnstenv
mov
cmp
xchg
and
ret
and
lods
mov
dec
idiv
es
mov
inc
dec
add
cwtl
xor
test
jbe
dec
mov
notb
pushf
xchg
sbb
xchg
mov
push
dec
in
add
jo
cmc
fisubl
jns
aam
sbb
add
pop
mov
bound
dec
rcrb
mov
adc
push
pop
loope
aad
stc
pop
popf
repnz
cli
pop
mov
shlb
scas
inc
mov
push
outsb
jp
add
scas
or
sub
imul
dec
push
adc
ret
shrb
adc
sub
jno
test
or
xor
cmp
xor
push
outsl
pushf
pop
xlat
or
xchg
ret
xor
outsl
cmp
push
aad
or
insl
aam
cmp
ffree
lahf
lock
repz
test
gs
fmul
push
lods
nop
aam
repz
adc
mov
mov
aam
jne
push
mov
xchg
fists
insb
and
out
push
ja
addr16
or
jae
int3
ja
push
cmp
xor
cli
lds
xor
add
add
es
dec
mov
mulb
int3
cltd
addr16
mov
test
xchg
lock
or
jae
addb
push
nop
and
fwait
inc
cmp
xchg
movsb
xlat
adc
mov
cmp
test
sub
xor
loop
mov
std
fsubl
dec
adcl
inc
mov
sbb
divl
nop
jl
xchg
mov
shl
testb
pop
cmp
pop
sbb
notb
pop
adc
scas
jno
icebp
dec
daa
xchg
dec
rorb
cmpsl
cmpsb
jno
and
pop
loopne
inc
sub
push
loope
incl
push
xlat
xchg
addr16
mov
xchg
scas
test
and
clc
stos
or
dec
int3
pop
sbb
add
mov
pop
xor
rorb
dec
inc
adc
fistpll
jns
jns
cmp
mov
cli
int3
xchg
mov
mov
movsl
fidivrs
dec
adcl
aad
sbb
push
xchg
push
xor
icebp
std
pusha
mov
mov
xlat
stc
stc
rcrl
xor
shlb
sbb
mov
jno
icebp
ss
sbb
lret
xchg
ja
inc
xchg
jae
cmp
ds
pop
adc
pop
mov
push
stc
int3
jne
sbb
shr
fsubs
xchg
fdivl
push
shlb
sub
dec
pop
sbb
daa
popf
clc
cmp
and
add
jp
sbb
cmc
in
outsb
push
inc
scas
stos
sarl
scas
inc
mov
mov
or
adc
rcll
and
fcmovbe
popf
test
dec
mov
pop
mov
jo
ret
scas
popa
cli
shlb
or
aas
mov
aas
mov
loopne
lods
cli
lret
dec
xchg
mov
xor
addb
pop
jno
ret
pop
dec
jl
pop
dec
or
inc
or
pushf
into
ljmp
cmp
fs
push
fcoms
jmp
xlat
lods
sub
dec
or
inc
adc
or
hlt
mov
add
mov
push
cld
fldl
daa
pop
sub
sbb
dec
js
mov
lea
mov
sub
mov
repnz
scas
gs
mov
ror
xchg
jne
sub
jbe
adc
pusha
aaa
pop
fucom
cmp
call
aaa
xor
in
not
xor
clc
dec
mov
out
or
or
adc
cmp
push
sbb
jne
cmp
xor
sub
data16
scas
xor
mov
jp
push
sti
repz
int3
and
xchg
ret
sbb
or
xchg
shr
xor
testl
out
mov
xorl
dec
out
and
mov
jmp
cmp
pop
test
ret
or
loop
lcall
dec
jne
aam
int3
push
pop
clc
push
pop
or
fdiv
pop
sub
adc
sub
movsl
jle
jp
mov
mov
testl
fwait
jp
xor
fiaddl
jecxz
dec
pop
rolb
out
loope
pop
jge
pop
sbb
xchg
sti
cmp
fadds
jns
mov
lcall
mov
jle
jno
lods
dec
cltd
pusha
gs
push
push
jmp
adc
pusha
scas
jns
out
xchg
push
adc
cmpsl
cmp
jmp
pop
xor
adc
jmp
sbb
ss
jp
mov
and
add
mov
dec
aaa
and
cmp
xlat
std
clc
mov
sub
sub
mov
sub
sbb
xor
scas
sub
mov
pop
mov
sub
stos
mov
out
fldt
cmp
xorb
push
jg
scas
xor
pop
inc
dec
lods
jle
inc
adc
dec
push
mov
adc
dec
test
fidivl
cmpsl
mov
jno
adc
clc
ret
xor
addl
dec
sti
lds
cmp
lret
pop
jmp
mov
cmp
mov
mov
into
loopne
pop
mov
pop
inc
inc
mov
dec
pop
push
inc
push
loop
dec
inc
jp
jp
jne
call
dec
pop
aaa
mov
dec
xlat
cwtl
outsb
xchg
mov
jae
dec
mov
mov
xor
mov
or
fcom
out
inc
in
mov
xchg
outsl
xor
xchg
ffree
gs
stos
orl
mov
jae
mov
inc
gs
sbb
or
int3
pop
add
sbb
push
int3
xchg
add
out
das
stos
arpl
push
dec
pushf
add
lods
push
std
sub
xor
cs
or
call
mov
aam
pop
pop
add
push
cmpsb
loopne
mov
dec
cmp
in
mov
or
and
addr16
and
test
imul
vpmaddwd
mov
pop
aam
or
outsb
repnz
or
push
xchg
scas
or
in
ret
std
inc
pop
cmc
pop
out
fsubrs
pop
lea
sub
fimuls
inc
sahf
arpl
sbb
cwtl
notb
push
loopne
imul
retw
pop
faddl
out
outsb
loope
fwait
jo
mov
or
push
stos
xchg
enter
lods
jecxz
dec
sub
addr16
aad
inc
add
mov
lcall
shl
mov
flds
fidivl
fadds
loop,pt
pop
push
xchg
ror
pop
mov
mov
mov
cs
negb
xchg
sbb
pop
mov
sbb
sti
cli
imul
fcom
icebp
xor
push
nop
inc
mov
repz
cmpsl
sub
sbb
call
mov
lods
sbb
sti
fmull
xchg
jnp
out
push
add
add
loop
jecxz
inc
loop
xchg
movsl
add
pop
arpl
dec
or
mov
nop
cmp
gs
xor
adc
aaa
mov
xor
inc
inc
cmp
inc
test
stos
cwtl
ret
gs
lods
push
in
jbe
mov
stos
mov
ret
sbb
push
mov
jo
enter
mov
ret
fmull
adc
lret
sub
ret
adc
cmp
jae
add
sbb
in
pop
test
dec
lret
push
inc
testl
sbb
cmp
test
aas
mov
sbb
pop
add
mov
lea
shlb
stos
xor
adc
jle
cli
sub
jb
sbb
daa
jne
addb
imul
push
movsb
xor
aaa
inc
outsb
jmp
out
stc
stos
dec
push
sub
rolb
repz
push
aad
ret
aad
into
push
inc
dec
jae
xchg
je
push
jb
adc
fstps
imul
jno
icebp
aas
mov
xchg
push
push
sub
cld
xor
sub
arpl
adcb
inc
jns
ja
cli
test
in
insb
movswl
jge
daa
push
pop
add
mov
mov
mov
inc
cs
jns
lcall
mov
mov
int3
pop
cs
jbe
or
push
xchg
test
mov
fdivl
mov
aam
xor
lret
mov
inc
pop
sbb
cmp
mov
jo
mov
lret
mov
xlat
sub
dec
sub
call
pop
xor
cli
fnstenv
sub
adc
xchg
or
push
out
cmp
add
pop
dec
clc
xchg
jae
stos
fst
mov
in
add
mov
add
xchg
sub
roll
adc
lea
mov
push
in
pushf
imul
test
fcmovnu
cmpsl
dec
divb
test
test
icebp
adc
pop
iret
xor
fildl
adc
sbb
xlat
mov
lcall
cmp
mov
add
and
fdivl
jbe
loopne
in
add
or
push
inc
sub
repz
xchg
movl
das
adc
test
sahf
push
sbb
clc
nop
test
cld
sbb
adc
and
into
jecxz
sahf
sbb
clc
jnp
fisubrs
pop
sub
xor
inc
jle
icebp
je
xor
andl
test
data16
sbb
adc
mov
lcall
inc
int
xchg
dec
jnp
int
xchg
pop
pop
test
jae
scas
adcb
and
leave
mov
mov
push
mov
inc
scas
pusha
sti
in
scas
inc
cmc
push
push
mov
lret
pop
and
cmp
xchg
pop
and
push
inc
imull
movaps
rcrl
mov
xchg
pushf
pop
mov
mov
insb
bound
fdivrs
add
cmpsl
inc
out
lret
inc
dec
sbb
out
push
gs
push
arpl
cmp
adc
dec
add
sub
mov
popl
fbstp
mov
add
push
jne
sbb
push
adc
xchg
sbb
xchg
cwtl
imul
inc
incl
flds
loope
push
cmp
xlat
xor
out
inc
scas
sbb
adc
cmp
lahf
pushf
pop
in
mov
mov
sahf
ds
sbb
das
cmpsl
mov
add
or
pushf
pop
add
xchg
jb
fistpl
es
into
pop
cmp
repz
mov
dec
nop
loopne
lea
adc
rcrl
xorb
and
ror
and
inc
addr16
inc
mov
scas
orl
aaa
inc
ret
and
or
arpl
lods
xlat
int3
jp
mov
adc
sub
mov
push
jl
pop
mov
fiadds
push
fimull
push
imul
loop
inc
xlat
out
and
pop
inc
dec
cs
adc
mov
pop
push
in
mov
jae
push
pop
mov
outsb
inc
shlb
inc
add
mov
aam
aam
dec
push
sbb
filds
cmp
in
mov
xchg
adc
dec
mov
jmp
fwait
repnz
imul
mov
cld
sbb
and
jns
jmp
pushf
cmc
add
stos
je
in
in
cmp
sub
loopne
and
cmp
sub
push
hlt
scas
fdivrl
mov
lret
jnp
pop
pop
cmp
aad
xor
or
aam
call
mov
push
cwtl
fwait
push
sub
dec
xchg
mov
lret
movsb
lea
loopne
sub
icebp
sub
lret
in
pop
movsb
mov
bound
push
xor
sbb
push
sahf
xor
lret
stc
pop
js
dec
rolb
sub
adc
cmp
stos
sbb
enter
shr
mov
test
mov
je
test
sub
mov
sbb
repz
ljmp
push
jmp
xor
in
xchg
add
xchg
jb
enter
es
mov
inc
cld
fdivr
inc
aad
xor
fldt
add
mov
pop
adc
jnp
mov
scas
jbe
enter
and
sbb
ljmp
lcall
scas
xchg
or
lods
cmp
sbb
push
cmp
lods
push
cmp
jns
imul
pusha
adc
xor
lcall
incb
jae
fsts
push
and
adc
cmp
xor
cmc
addr16
xchg
cld
cwtl
mov
imull
xlat
mov
movsb
xor
inc
jg
cmpsb
mov
ret
mov
test
stc
pusha
ret
lret
cmc
cltd
dec
addr16
inc
jle
mov
movsl
jnp
jge
movsl
push
cmp
aaa
enter
rorl
add
jge
xor
cld
insl
ds
insl
push
mov
xchg
js
rcrb
fdivrl
out
mov
sub
out
sbb
and
lret
jbe
mov
rolb
rorl
dec
fwait
aaa
notl
and
sarl
jg
pop
repnz
lahf
xor
mov
jb
mov
stos
sub
mov
add
jae
jnp
push
cwtl
repnz
inc
not
movsb
lcall
aaa
xchg
jo
movsl
mov
int
dec
add
fidivrl
cwtl
adc
jmp
pop
mov
leave
rolb
add
pop
imul
xchg
jo
cmc
std
loop
pop
bound
mov
sbb
jns
test
dec
movsb
mov
test
xor
mov
jns
push
rcll
stc
gs
test
aad
push
jne
iret
mov
or
enter
mov
scas
ja
add
nop
add
fstpt
out
inc
sbb
in
adc
push
mov
dec
jb
xlat
ss
aam
imul
fsubl
lret
xchg
mov
xchg
push
or
aam
mov
cld
sbb
sub
jmp
jg
scas
and
dec
test
daa
outsl
outsb
out
cmp
js
in
nop
cmp
leave
dec
sti
shll
push
fisttpll
ficoms
xchg
xor
in
and
mov
mov
xchg
fbstp
adc
fiaddl
cltd
mov
or
push
test
xchg
hlt
jo
ljmp
xor
dec
push
jl
pop
test
jmp
outsl
sub
ret
xchg
dec
ja
push
jno
mov
push
inc
mov
test
mov
xchg
es
push
fisubrl
stc
pop
jl
shr
adcl
pop
or
xor
mov
add
cli
scas
sub
jge
cmpsl
fdiv
add
jnp
jp
leave
cmp
dec
pop
jne
and
xchg
shrl
jecxz
das
inc
jg
xorl
out
fnstcw
pop
inc
mov
push
jg
aam
xor
add
leave
xchg
lds
push
jns
pop
sub
fcompl
repnz
pop
incb
dec
aam
lea
add
and
stc
jb
add
mov
sub
pop
push
sbb
jl
pop
loope
mov
dec
push
xrelease
cmp
test
mov
xchg
xor
jl
mov
cmp
mov
aas
iret
xor
mov
push
cmpsl
xchg
lods
mov
sub
movsl
ret
dec
pop
and
xchg
nop
lds
sbb
cmpb
rol
loopne
sti
out
fiaddl
xchg
ljmp
push
nop
push
adc
xor
fmull
xlat
jecxz
rcr
imul
loope
xchg
cmp
cmp
ds
dec
mov
mov
add
add
popa
pop
jo
divb
cld
mov
cmp
insl
cmc
mov
sub
push
insl
mov
xor
dec
jl
inc
popf
adc
scas
dec
js
xlat
jecxz
add
and
jne
push
cmp
popa
adc
adc
and
jle
xor
sbb
or
adc
xchg
and
mov
out
xor
sti
mov
pop
jmp
xchg
xor
jnp
mov
shlb
mov
mov
jmp
sbb
pop
ljmp
dec
sbb
dec
movsl
cwtl
dec
adc
sbb
in
ss
subl
cmpsb
push
mov
push
jl
mov
inc
orl
cmpb
fwait
sub
pushf
sbb
dec
ja
rclb
lods
xor
jl
lahf
jbe
movsb
push
std
or
cmp
pcmpeqw
xlat
add
jno
xchg
incb
inc
stos
add
out
and
stc
inc
fistpl
jnp
stos
inc
movsl
jnp
jg,pn
adc
xor
insl
popa
cltd
sub
fldt
pop
fisubrs
xor
mov
sti
cmp
jne
xchg
hlt
sub
or
imulw
stos
add
mov
pop
loope
mov
add
enter
rcrb
mov
sbbl
out
adc
adc
jmp
sub
dec
loop
cs
lcall
bound
leave
out
cld
add
lock
ffree
pop
mov
push
mov
jnp
push
pop
xchg
mov
je
shrl
mov
cmpsl
nop
in
dec
cmp
push
mov
popf
sub
int3
dec
popf
mov
addr16
ds
xor
lahf
mov
inc
cmp
jg
cmpsb
rorl
xchg
jge,pt
xchg
xchg
out
dec
push
cs
cmpsb
inc
out
xor
jmp
push
fists
push
test
inc
mov
div
imull
xor
repnz
lret
loope
mov
dec
push
popa
mov
or
std
dec
adc
ja
adc
inc
xchg
sbb
ja
xor
arpl
pop
mov
mov
mov
clc
test
test
jp
loope,pn
mov
and
scas
inc
cmp
andl
jae
sbb
mov
or
loop
cmp
mov
and
outsb
pop
pop
ficoms
jns
scas
mov
out
jl
imul
mov
rorb
nop
ja
mov
mov
test
mov
js
add
cltd
xor
add
hlt
sbb
pop
jns
sub
jp
jnp
pop
and
out
rcr
adc
nop
shl
sbb
xor
push
mov
lods
lcall
inc
aad
stos
add
jb
dec
and
dec
filds
sti
push
mov
inc
mov
andb
cmc
and
sub
push
movsl
xor
lret
and
mov
ljmp
psrlw
mov
iret
rclb
cmp
fwait
mov
outsb
cmp
ret
insl
fwait
xchg
dec
callw
jecxz
cltd
mov
fstps
leave
or
idivl
icebp
fstps
push
int
lds
stos
icebp
mov
cli
mov
mov
push
ret
or
adc
add
movsl
into
sbb
dec
jmp
cmp
sub
int
xchg
inc
push
clc
sub
inc
inc
ret
mov
ret
mov
popf
loopne
jl
mov
lret
xchg
jmp
iret
outsb
bound
ljmp
push
imul
test
and
repz
aad
sbb
daa
repz
or
inc
addb
pop
inc
iret
cs
rorl
add
rcr
mov
push
mov
or
xchg
push
or
cmc
push
je
jo
mov
push
in
neg
inc
xchg
xchg
push
and
dec
xor
sbb
cltd
fcomip
inc
jo
dec
sbb
sub
mov
sbb
mov
push
cmc
arpl
insl
xchg
mov
clc
lret
sahf
hlt
fildl
movsl
pop
mov
loope
insl
fs
pop
add
mov
pop
jbe
jb
push
xor
or
mov
sbb
dec
sbb
jne
mov
std
push
ds
in
sti
mov
inc
pop
jno
out
add
add
enter
add
aad
mov
cmp
sub
ja
int
in
sarb
popa
lock
xchg
hlt
and
xchg
or
or
mov
push
sarb
adc
inc
nop
inc
mov
aas
cmc
bound
push
gs
pop
orb
adc
mov
xor
jmp
push
cli
movsb
dec
cli
lcall
aas
cs
xchg
lret
out
adc
dec
sbb
push
cmp
pop
or
stos
or
and
fildl
stos
scas
sub
sbb
les
lcall
stc
xor
movsb
mov
lret
adc
dec
into
adc
inc
xchg
jae
push
cmp
testl
pop
icebp
push
jne
and
push
test
xchg
jb
out
aaa
dec
cwtl
inc
mov
fmuls
pushf
cld
or
xor
lcall
dec
lcall
and
es
cld
testl
popa
repnz
scas
sbb
sub
xchg
scas
cs
into
xchg
xchg
mov
cmp
movsl
movsb
mov
pop
fildl
xchg
mov
aaa
and
iret
push
lds
repz
call
lock
into
mov
push
insb
pop
rol
jne
push
mov
jae
repnz
cltd
ds
sub
test
mov
pop
aam
xchg
fsts
push
loope
lret
js
add
out
sub
in
mov
sub
lods
xorl
daa
aas
testl
dec
fwait
rcr
and
cmc
jmp
test
push
mov
xlat
dec
fildll
pop
cli
cmpsl
fbld
dec
iret
aaa
mov
das
ret
lods
xchg
xor
dec
subl
mov
insl
out
mov
sbb
push
mov
dec
lret
aas
shlb
sub
int
push
jnp
dec
mov
lds
mov
icebp
push
iret
fcmove
adc
jno
cmpsb
jmp
movsb
pop
in
mov
add
inc
test
adc
fld
fwait
push
imul
push
outsb
lahf
int
add
xlat
cld
jnp
daa
repz
and
jno
std
cli
mov
out
out
in
inc
int
in
xchg
add
mov
stc
xchg
cs
daa
shrb
add
pop
or
data16
mov
inc
dec
mov
inc
add
and
xchg
in
inc
jbe
repz
inc
mov
mov
repnz
in
mov
xchg
mov
mov
push
sti
jmp
icebp
fs
jb
mov
fnsave
xchg
cmpsb
in
fisttpll
fs
push
sub
pop
or
sti
shlb
test
dec
lds
mov
shll
lahf
xlat
lcall
out
fwait
cwtl
addr16
in
movsl
loope
mov
cmp
int3
add
lods
scas
pusha
xchg
sarl
pop
arpl
inc
cmpsl
xor
mov
xchg
xchg
sbb
mov
xchg
or
test
or
nop
pop
fisttpll
out
call
xchg
or
mov
jmp
mov
jo
out
iret
cmp
sbb
pop
pusha
in
div
push
xchg
or
mov
sub
mov
mov
test
sub
push
les
sub
popl
pop
cmp
sub
push
mov
push
test
pushf
add
fwait
mov
add
lock
bound
cld
and
and
adc
pop
sub
sbb
lcall
fldt
cmpsb
add
mov
lcall
and
xor
mov
lock
pop
cwtl
fdiv
cmp
mov
adc
dec
push
pop
outsb
mov
cmp
mov
outsb
pop
divl
jle
mov
mov
imul
push
mov
sbb
xchg
xor
repz
icebp
and
dec
sub
dec
add
sti
ja
cld
or
jno
jge
lahf
sbbb
xor
push
sub
xor
jg
fwait
insl
negb
mov
or
jp
movsl
stos
rorl
adc
int3
jne
imull
jle
sbb
xchg
das
mov
mov
and
mov
imul
hlt
es
scas
les
fiadds
scas
pop
add
stc
or
cmpsl
cmp
scas
push
push
and
or
adc
mov
daa
cld
cmp
push
shll
xchg
push
xchg
adc
shrl
sub
inc
adc
pushf
ret
scas
mov
out
in
mov
outsb
scas
mov
cwtl
dec
fs
cld
pop
pusha
jl
xchg
js
fnstcw
jo
sub
test
andl
jge
rolb
leave
sarb
pop
stos
xor
mov
jns
aaa
xor
sahf
fdivs
aam
jecxz
inc
jmp
xlat
push
test
mov
mov
xor
clc
mov
mov
in
fnsave
fbstp
xor
cltd
aad
pop
jne
aaa
adc
mov
jb
mov
movsb
shll
loopne
cmpsb
loope
jmp
outsl
xor
dec
push
xchg
mov
push
outsl
dec
dec
lahf
adc
or
adc
sbb
out
arpl
adc
xor
cmp
or
les
dec
mov
push
hlt
and
sub
sbbl
and
in
sahf
lea
xlat
scas
xor
pop
repz
insb
outsl
imul
jg
inc
pop
add
xchg
clc
dec
leave
bnd
andb
cmp
mov
and
xchg
popf
call
or
dec
repz
cwtl
adc
adc
fsts
mov
pop
andb
dec
jecxz
imul
movsl
fsubs
add
sub
adc
cltd
sbbb
push
cmpl
pop
xchg
call
inc
cltd
outsl
jo
pop
mov
mov
push
movsl
addr16
adc
cmc
je
icebp
fnstcw
cs
decb
dec
xor
fs
loopne
cmpsb
mov
mov
adc
cmp
call
mov
inc
mov
sub
mov
dec
imul
mov
xor
out
ljmp
or
imul
out
jl
int
cmp
lret
fwait
and
jecxz
jnp
divl
cld
jb
jns
adc
fldcw
insb
mov
push
lahf
int3
cmc
and
mov
loope
lret
jbe
mov
loopne
imul
lods
jle
cmpl
mov
push
push
mov
out
dec
frstor
in
jns
dec
outsl
add
ljmp
inc
xor
add
xchg
test
hlt
sub
dec
pop
jle
ret
jg
xchg
and
mov
ljmp
sarl
and
shll
in
jbe
mov
push
in
into
inc
lds
xor
inc
sub
xchg
imul
mov
cwtl
add
sarl
nop
out
test
sub
mov
inc
or
sub
cmp
nop
jo
mov
out
imul
mov
std
push
mov
lock
loopne
push
fimuls
mov
sbb
movsb
in
lret
cmp
sub
cmpsb
sbb
mov
faddp
in
and
fsubr
movsl
sub
adcl
push
mov
aam
inc
notb
je
cmpsl
int3
sti
push
dec
imul
adc
mov
and
cmp
sarb
idiv
lret
jle
jmp
xchg
sub
add
inc
dec
stos
or
icebp
mov
pop
sub
addr16
fisubrs
lret
outsb
stc
inc
inc
std
cld
repz
shrb
jo
cmp
pop
rorl
or
and
repz
fnstcw
inc
cmp
jae
out
loope
movsb
popa
pop
lds
sub
mov
push
fcompl
adc
cwtl
push
out
sub
push
jmp
lds
aad
cli
insl
mov
inc
jne
arpl
adc
jns
not
adc
add
add
test
mov
insl
bswap
and
cmp
bound
mov
adc
lods
out
pusha
nop
sbb
xchg
or
xchg
sarl
les
cmp
xchg
ja
lock
push
sub
fidivrl
adc
pop
call
inc
shr
mov
jle
sbb
add
jle
mov
dec
mov
stos
jle
sbb
lea
psrlq
dec
adc
inc
cmpl
hlt
mov
movsl
cmp
testb
loop
sbb
add
mov
cwtl
push
insl
jns
es
jnp
jp
xor
clc
jecxz
and
ret
ja
mov
or
sub
inc
and
arpl
in
cwtl
dec
out
push
insb
negl
dec
dec
shll
xor
lahf
pop
jnp
rcrl
sbb
cmpsb
sar
clc
mov
xor
jp
push
sub
adc
push
xorb
sbb
loope
and
cmp
jp
subb
addl
cmp
xchg
lock
aas
cmp
test
adc
rcrb
pop
clc
fsubrs
xchg
cmpsl
mov
mov
add
sub
xor
xchg
mov
cmp
ljmp
scas
clc
insb
mov
out
jecxz
xlat
or
adc
repnz
push
scas
cli
mov
jno
lock
dec
xchg
lcall
clc
repnz
pusha
push
loope
fiadds
dec
imul
lea
cmp
arpl
add
in
js
push
inc
sti
jmp
mov
mov
jp
sub
jl
xor
or
xlat
pop
imul
icebp
fists
scas
inc
mov
insl
jp
xchg
mov
sti
daa
dec
pop
mov
dec
add
xchg
es
and
mov
push
or
rcrb
or
fisubs
scas
mov
idivl
aas
dec
adc
sbb
aaa
je
jmp
or
add
jecxz
test
inc
in
mov
mov
outsl
mov
fldcw
pop
call
jno
ljmp
dec
clc
in
ja
cmp
mov
mov
cmc
decb
inc
sub
add
out
icebp
pop
xchg
rclb
xchg
pop
or
mov
ret
mov
mov
scas
cmp
sbb
or
inc
adc
arpl
cld
mov
xor
test
xchg
adc
mov
in
jmp
cld
pusha
push
insb
test
bound
pop
aam
dec
rclb
movsb
sbb
jbe
je
and
jno
mov
jbe
mov
and
adc
pop
int3
sbb
and
adc
push
mov
jno
in
or
sbb
and
sbb
aad
adcl
lods
push
fdivp
insb
or
fwait
fwait
dec
mov
testl
pop
mov
dec
or
ljmp
nop
jnp
and
bswap
pop
inc
bound
sar
push
lea
mov
jne
cltd
add
inc
ja
xor
add
test
push
popf
sbb
dec
xchg
ds
mov
pop
lcall
mov
pop
pop
inc
push
xor
lds
ffree
jmp
and
lock
lcall
lahf
fmul
xor
test
stos
xor
ja
call
jo
loopne
sbbb
xchg
or
xchg
sbb
push
fimuls
cltd
shll
leave
cmp
add
xchg
enter
adc
push
psadbw
and
repnz
and
lcall
arpl
mov
cmpsb
pop
pop
ss
mov
jmp
push
jge
into
movsb
pop
inc
or
dec
push
mov
rcl
xor
hlt
test
fisubl
mov
mov
jns
int3
xor
outsl
outsb
lcall
xchg
mov
push
pop
mov
add
add
call
jae
movsl
and
mov
testb
int
cld
scas
jns
pop
je
outsb
cmp
in
mov
mov
outsb
insb
fwait
aad
loop
xor
ja
cltd
outsb
push
mov
lds
int3
mov
je
dec
jns
sub
mov
mov
inc
and
adc
cmp
push
icebp
aas
jp
das
xchg
mov
xor
jb
sahf
cmc
pop
fcom
rcll
lcall
dec
xor
inc
fcomps
outsb
inc
hlt
sbb
lds
xchg
es
xlat
mov
ds
inc
pushf
inc
jl
xchg
pop
imul
pusha
fcoml
dec
negl
sub
push
cmc
call
aas
and
dec
cmp
ljmp
sbb
push
fdivrl
jecxz
inc
sbb
imul
or
aad
outsb
ss
imul
mov
lcall
push
sub
insl
jo
adc
gs
pop
xor
sub
stos
sbb
or
stos
cmpsb
outsb
mov
cmp
mov
int
and
push
ljmp
cmp
inc
mov
xor
daa
sub
xchg
add
xor
repz
jno
shrl
adc
je
in
sub
out
add
dec
call
mov
xchg
jns
aam
inc
jno
add
sub
or
push
es
lods
cmp
lret
add
jns
cmpsb
and
xor
and
in
mov
mov
addr16
lahf
cltd
jns
adc
dec
repz
xchg
inc
cli
popf
jmp
test
mov
mov
jns
dec
xchg
mov
mov
ror
fucomi
xor
fisubs
ja
dec
pop
jo
pop
sbb
pop
lods
rorl
ljmp
insb
jns
jp
adc
xor
outsl
add
dec
sti
arpl
sub
pop
pop
jns
sahf
in
rolb
lret
fistl
pop
inc
cmpsb
pop
xchg
arpl
add
xchg
shlb
xor
jecxz
or
adc
cmpsl
jecxz
cmc
outsb
mov
push
lods
xchg
jge
imul
je
cmp
xor
ds
leave
or
inc
add
push
ret
les
rcrb
pusha
xchg
insb
xor
bound
cmp
rcrb
jo
inc
test
repnz
jle
shlb
sub
inc
rcrb
enter
xchg
in
mov
les
in
repnz
jmp
test
mov
dec
imul
jp
push
pop
pop
jg
sbb
mov
sub
xor
mul
xor
call
sbb
push
mov
gs
cmp
out
jae
incl
jg
jno
bnd
lret
aaa
mov
ja
push
mov
pop
pop
sahf
push
scas
stos
loope
mov
lods
aaa
xchg
cmp
pusha
fs
fimull
fstps
enter
pop
imull
lret
jae
call
push
push
pop
sbb
xchg
int3
add
xchg
jecxz
sahf
sbb
jnp
insb
sub
roll
clc
mov
lods
mov
or
int
jmp
pop
xor
cmp
dec
jmp
push
in
adcb
xchg
or
notl
cmpsl
xchg
cmpb
xor
daa
jno
sub
mov
or
out
stc
cmp
mov
pop
scas
add
sub
push
push
pop
lods
mov
loopne
cmp
pop
xchg
cltd
inc
jo
push
adc
mov
inc
and
cmp
scas
movb
mov
sbbl
or
popa
inc
leave
pop
and
or
lret
sbb
leave
xorb
cwtl
or
out
inc
sbb
pop
xchg
push
aad
pop
sub
add
mov
cltd
push
ds
movsl
je
xor
push
pop
cmp
das
in
les
mov
imul
je,pt
push
jp
pop
dec
sti
movsl
popf
std
popa
jle
int3
rcll
popa
pusha
aam
je
enter
mov
xchg
rorl
fiadds
pop
fwait
adc
imul
mov
push
mov
adc
push
fdivrl
mov
ret
cmp
cmpxchg
leave
adc
xchg
adc
mov
lock
call
mov
xor
pop
or
sub
stc
cwtl
cmpb
add
jge
bnd
inc
sbb
daa
push
jo
mov
push
and
imul
add
mov
mov
mov
cmp
mov
mov
xchg
push
xchg
es
mov
out
in
lret
mov
adc
bound
sbbl
and
pop
sti
push
lahf
sub
sub
add
adc
cmc
call
in
mov
inc
mov
loope
aad
pop
cmp
pop
pop
int
mov
test
and
popa
jno
enter
push
in
inc
ja
inc
mov
xchg
call
btc
xchg
pop
cmp
aas
ja
iret
outsb
xchg
jmp
xor
mov
fildll
mov
jne
push
aaa
lea
push
aas
bound
pop
xor
cmc
mov
push
and
adc
xor
inc
xchg
or
dec
mov
jae
test
add
xchg
repnz
stos
iret
push
pop
movsl
and
add
add
jb
rdtsc
in
fisubl
cmp
mov
mov
sbb
pop
lods
icebp
or
xchg
mov
or
lock
push
xlat
mov
rolb
fbstp
call
mov
ljmp
test
mov
mov
push
repz
inc
dec
ret
cltd
jae
out
inc
ljmp
inc
cmp
sbb
stos
std
jnp
jo
stc
les
mov
and
jnp
ror
inc
mov
mov
arpl
xor
pushf
arpl
sub
dec
gs
inc
push
ja
sbb
xchg
jae
inc
mov
in
jl
mov
jle
sbb
mov
jle
pop
popa
ret
lods
dec
add
inc
sbb
lock
jb
add
and
xor
mov
mov
mov
push
loop
inc
imul
push
push
lcall
jns
lods
ret
scas
lret
insb
into
pop
jae
mov
inc
mov
lahf
mov
outsl
int3
inc
push
roll
mov
pop
sub
mov
push
cs
cwtl
roll
mov
in
outsb
orb
aas
jp
into
clc
cltd
xor
movsl
cmp
sahf
es
adc
jmp
push
jle
pop
mov
mov
fisubrs
mov
jnp
sub
push
jne
dec
imul
jmp
and
xchg
push
and
xor
test
mov
lret
or
or
std
jecxz
ss
jp
xchg
ds
in
aas
add
mov
sarl
sub
sbb
std
cltd
mov
imul
xchg
fidivl
jl
mov
out
out
jbe
mov
cmove
lret
mov
out
jno
imul
jle
cmp
pop
js
cmp
adc
enter
out
out
nop
sti
cmp
sti
sub
fsub
outsb
cmpsl
jo
dec
xor
dec
lods
mov
sub
mov
aam
lret
or
xchg
sub
out
cmp
mov
cltd
loopne
mov
mov
pushf
ss
add
movsl
mov
sub
scas
hlt
leave
aas
loop
loop
or
push
mov
shll
push
sub
hlt
cld
sbb
mov
cmp
add
imul
jmp
mov
sub
adc
shl
sbbb
sbb
lea
pop
dec
out
aaa
push
sti
je
push
mov
leave
rcrb
jmp
sub
arpl
jno
into
fwait
jge
out
and
ja
mov
pop
mov
mov
pop
arpl
icebp
mov
mov
pusha
or
sbb
push
add
cmpsl
pop
lds
add
insl
inc
adc
sbb
inc
lahf
or
fiaddl
mov
mov
inc
leave
sub
repnz
adc
mov
or
push
xor
or
out
lahf
push
cs
pushf
sahf
lahf
mov
cld
lret
cmp
outsb
inc
mov
xchg
sbb
pop
in
push
fidivrl
ret
stos
dec
mov
xchg
jle
xchg
push
imul
sub
mov
jecxz
dec
je
arpl
rcr
push
jg
or
adc
lahf
cmp
jle
lcall
pop
mov
and
cmp
jbe
xchg
jae
loop
popf
lods
mov
inc
or
mov
or
mov
cmp
iret
adc
mov
nop
push
xor
aas
frstor
out
sub
dec
test
into
int3
xchg
cmp
or
cmp
jge
roll
sbb
js
hlt
mov
enter
inc
imull
dec
cld
insb
and
add
rorb
add
pop
jnp
add
ds
lods
cmpsb
cmp
fsts
pause
in
mull
pop
dec
es
cmp
push
sbb
pop
cmp
fidivs
ret
ljmp
jbe
mov
push
pop
enter
mov
mov
das
fimull
popf
and
push
bnd
aad
jnp
hlt
mov
in
loope
stos
scas
shrl
or
arpl
xchg
mov
ja
push
scas
movsl
es
outsb
jmp
dec
xchg
push
dec
inc
sub
pusha
sbb
xor
xchg
xor
clc
lods
jecxz
cmp
arpl
mov
push
shll
cmp
jns
xchg
int3
test
adc
or
xchg
mov
lds
jne
out
aam
pop
pop
mov
jmp
xchg
js
aaa
jg
popa
mov
push
fs
jle
sub
and
xchg
jbe
xor
sarl
leave
mov
push
cmpsl
mov
leave
mov
inc
lea
xor
dec
add
adcb
mov
int
int
push
out
jnp
xchg
jl
xchg
jns
adc
push
insl
inc
cli
rorb
scas
dec
out
sbb
add
push
cmp
insl
out
sub
test
xor
roll
adc
xchg
xchg
or
ret
in
mov
scas
lret
jbe
cmp
mov
aam
hlt
mov
mov
arpl
push
stc
pop
jmp
and
mov
dec
es
push
out
adc
lret
pusha
xchg
stc
int
sub
lds
fisubrs
std
and
and
sbb
xchg
fsubr
outsb
dec
xchg
aaa
clc
dec
addr16
and
in
in
sbb
nop
lods
ljmp
cmp
adc
pop
inc
imul
gs
pop
dec
jecxz
pop
cmp
mov
xchg
fidivs
aad
insb
inc
arpl
or
sub
sub
pop
mov
add
cmpl
jb
push
pusha
sub
xor
subb
adc
push
push
leave
push
std
jle
xchg
push
or
pop
mov
adc
das
lahf
mov
jle
lods
inc
cmp
jns
rcrb
or
lcall
imul
and
cwtl
lds
lds
repnz
inc
mov
lea
outsb
rcl
sbb
mov
out
es
or
push
ret
adcb
and
call
mov
cs
test
scas
sbb
dec
xchg
cmp
out
cs
loope
jmp
test
sub
or
fldz
ja
or
or
inc
rolb
jge
sbb
cli
addb
pop
and
inc
pop
mov
shlb
pop
fisubrs
xchg
or
jmp
sub
ds
cltd
adc
aas
sub
into
leave
sub
pop
lret
or
js
mov
out
daa
sbb
adc
jns
into
inc
sti
sahf
arpl
or
push
push
lock
test
or
fsubl
addr16
xchg
rorl
xchg
xchg
push
mov
jl
lcall
jo
jns
aaa
sub
mov
es
in
mov
insl
sub
icebp
int3
dec
xchg
adc
mov
sbb
jg
sub
movsl
jae
faddl
sub
lock
xor
lea
lock
cmpsb
cmp
ja
pop
pop
xor
fmull
push
xchg
shrl
mov
sub
stos
cwtl
cmp
cs
push
rclb
push
cmp
test
insl
push
cmpsl
pop
mov
int
sbb
enter
mov
dec
xchg
cmpsl
cltd
test
sbb
bound
sub
dec
and
movsl
daa
and
cmp
repz
inc
cmc
out
repnz
sub
jo
lret
pop
hlt
mov
test
xchg
or
dec
sub
int3
imul
inc
fstl
shrl
call
in
cmpsb
movsl
jns
mov
stc
push
imull
cmpsb
jmp
hlt
pop
mov
in
cli
pop
push
xchg
mov
testb
mov
sar
xchg
dec
or
sarl
fidivrs
mov
out
je
pop
orb
cs
and
fimull
pushf
aaa
sub
inc
xchg
rorl
iret
pop
adc
cld
stos
push
insl
das
jmp
mov
push
ljmp
movsb
aaa
adc
call
inc
cltd
loop
sbb
and
pop
mov
stos
adc
lea
or
mov
lret
push
or
xor
lea
scas
adc
xor
xor
in
fwait
shrb
orb
daa
sbb
into
fsubl
sub
push
sti
sbb
cld
inc
fsub
mov
ss
xchg
push
push
inc
cmp
dec
pop
xor
stc
push
cmp
pop
icebp
outsb
jl
or
inc
sub
and
adc
fiaddl
and
pop
jae
sub
or
mov
pop
inc
xchg
das
jle
lret
das
sub
test
or
iret
sbb
and
cli
xchg
ljmp
mov
call
mov
or
in
sbb
out
xchg
in
mov
xor
and
dec
cmpsl
addr16
pop
xchg
mov
mov
jge
test
cmp
jmp
push
xor
out
and
xor
jno
adcb
ljmp
gs
pop
sub
add
insl
cmpsb
testl
sub
mov
push
aaa
dec
mov
not
inc
fcmovu
or
push
jb
mov
push
inc
sti
iret
iret
push
push
or
sbb
bound
mov
lds
xlat
pop
push
movsb
mov
iret
in
pop
stc
movsb
lea
pop
bnd
scas
stos
push
stc
cmp
mov
push
xchg
cwtl
jmp
sbb
cli
cli
mov
push
lea
aad
fistl
popf
add
xchg
psubsb
sbb
sub
xchg
add
cmc
and
pop
mov
mov
sbb
sbb
gs
lret
sub
pop
arpl
scas
mov
les
pop
in
pop
cmp
mov
repz
or
clc
ds
or
xor
es
jl
push
sub
hlt
dec
stos
pop
test
cmp
inc
pop
add
xchg
lock
out
mov
lea
sbb
xor
jle
or
rclb
shlb
movb
dec
das
push
lret
push
mov
sbb
fcomps
mov
and
and
mov
adc
sub
inc
dec
in
fstpl
int3
pop
cmp
mov
mov
xor
mov
add
or
sub
or
cmp
jecxz
or
les
lret
cmpl
dec
sarb
fdivrs
not
cmp
and
imul
loop
dec
cmp
lcall
cmp
xchg
add
and
adc
mov
outsb
ret
mov
push
fsubr
mov
scas
xchg
loope
mov
nop
adc
out
ja
lret
int
push
enter
pop
cmpsb
mov
xor
stos
push
cltd
outsb
mov
cltd
stc
std
lea
push
push
add
pop
adc
sbb
pop
and
cs
push
jns
mov
sub
jno
jne
pop
loope
aaa
adc
pop
test
test
cmc
repz
ss
add
negl
pop
adc
push
mov
mov
push
int3
loop
mov
je
orb
ficoml
and
xchg
leave
mov
add
int
ljmp
mov
jno
pop
je
adc
gs
bound
inc
test
pushf
lods
xor
push
mov
out
lods
and
das
lods
fisttpll
iret
xchg
add
jne
xorb
gs
sub
mov
daa
sbb
nop
movsb
shl
inc
lds
ja
push
sbb
insb
sti
add
fs
sbb
sub
mov
xchg
aaa
sbb
pop
test
lahf
ljmp
push
stos
mov
arpl
ficompl
xchg
adc
dec
push
pop
xchg
icebp
mul
ret
addr16
pop
jge
sub
jae
jg
dec
movsl
xchg
mov
or
out
add
mov
shrl
leave
fidivrs
arpl
inc
aaa
aaa
gs
shlb
mov
dec
or
xchg
imul
cmc
fcomip
xor
sub
cmp
push
cmpsb
cld
push
test
cltd
cmpsb
add
lretw
aam
mov
xor
ret
adc
adc
arpl
jno
adc
call
adc
cmpsl
sbb
dec
adc
lret
pop
jne
ss
mov
jnp
push
sub
sbb
jbe
loop
jl
inc
leave
aad
pusha
or
ret
adc
nop
mov
cmp
sbb
aaa
mov
mov
faddp
scas
add
mov
or
lods
sbb
bound
inc
inc
push
mov
enter
inc
loope
js
fcompl
push
mov
enter
lods
pop
ds
lods
adc
dec
gs
leave
adc
adc
cli
inc
dec
mov
leave
sar
movsb
jbe
cltd
ffree
add
into
push
leave
xchg
dec
fwait
out
imul
adc
or
adc
inc
daa
jo
jns
jge
or
sub
dec
push
es
xor
push
push
inc
out
dec
fwait
jb
insl
test
xchg
notb
dec
test
and
sub
popf
inc
cmpsl
lret
cmp
pop
outsb
push
dec
dec
xor
sti
or
or
lds
outsb
lcall
int3
daa
pop
testb
mov
cmp
jnp
fwait
clc
inc
cli
cmp
push
cmpsb
push
cwtl
push
jne,pt
adc
rcrb
gs
out
sbb
or
push
stos
aaa
inc
mov
and
iret
push
sbb
lret
movsl
test
bound
cmp
jns
adc
in
jle
fdiv
cmp
and
nop
add
sbbb
xor
nop
adc
jp
xchg
pop
lods
push
mov
incb
xor
iret
xor
xchg
mov
xchg
dec
outsl
pop
push
insb
mov
lds
xor
mov
push
imul
mov
out
out
inc
je
subl
jecxz
stos
insb
rcl
jl
push
xchg
std
xchg
jle
popa
inc
mov
lods
mov
test
adc
scas
call
mov
shl
xor
dec
pop
inc
lea
cli
or
push
xchg
cmp
add
sti
inc
adc
fnstcw
adc
mov
mov
fidivrl
pop
ret
and
push
cld
shrl
mov
stos
mov
lahf
mov
dec
lret
ss
cmc
imull
lcall
xor
mov
fs
pop
pushf
push
push
pop
cmpxchg
in
ds
out
testb
cli
pop
pop
insl
pop
and
bound
jo
inc
cmp
mov
into
out
mov
lock
fnsave
mov
and
push
xor
mov
xor
xchg
sub
adc
imul
xchg
add
lods
xor
jb
mov
pop
inc
jae
sti
test
jge
lea
rcll
jmp
int
mov
fdivs
dec
fucomip
mov
sti
out
or
push
adc
pop
mov
xor
pop
and
push
mov
imul
gs
insb
notb
int
stos
rcrl
addr16
pop
jmp
ja
inc
mov
int
testb
ja
adc
push
pop
mov
int3
fadds
js
jg
xchg
dec
dec
idivl
and
mov
insl
inc
addr16
lret
cmp
outsb
add
xor
call
or
daa
imul
cmp
mov
ja
dec
lret
xlat
test
fnstcw
and
or
pop
jmp
pop
fcmovu
cmc
ds
test
ljmp
and
xchg
jne
xor
sbb
cmp
lret
lahf
cmp
cltd
mov
dec
insl
arpl
stc
adc
or
popf
sub
inc
popf
lcall
push
outsl
jl
pop
ljmp
mov
pop
xchg
jl
sbb
mov
fmuls
in
outsl
jo
inc
pop
out
cwtl
or
stc
dec
xor
pop
hlt
dec
jge
push
js
mov
cwtl
push
jns
cmp
jae
and
xor
hlt
data16
ss
inc
sub
test
shr
cmp
xlat
dec
lahf
mov
inc
jae
push
push
add
inc
sbb
push
leave
jmp
mov
jnp,pn
stos
cwtl
mov
push
test
adc
mov
cmp
or
repnz
mov
into
into
aam
or
test
mov
insl
nop
xchg
sub
jmp
sbb
mov
or
sub
mov
sbb
leave
add
inc
ja
arpl
mov
xchg
sub
hlt
es
fidivs
je
or
dec
lret
fdivl
in
ret
add
imul
cmp
inc
jmp
pop
mov
cmpl
adc
xor
leave
mov
lea
push
dec
inc
or
out
sub
push
arpl
call
ja
mov
aad
xchg
sub
adc
adc
sbb
push
inc
jecxz
iret
aaa
push
cld
cli
xor
cmp
bound
dec
pop
in
rcr
xor
shlb
adc
sub
inc
jecxz
loop
pop
out
mov
push
imul
add
xchg
xadd
mov
xchg
faddp
add
sbb
lds
mov
rcll
in
sub
nop
sub
sbb
mov
addr16
into
mov
daa
dec
pop
mov
lods
xor
loop,pt
xchg
dec
and
addr16
test
scas
int3
nop
movsl
ficompl
xor
cmp
adc
push
loopne
stos
and
sbb
aam
das
aas
dec
fs
rcrl
or
xor
dec
xchg
push
dec
sbb
pop
je
lahf
dec
and
mov
adc
xor
jns
push
jo
jmp
les
xchg
xchg
je
ss
movb
cmp
fnstcw
push
frstor
dec
shl
add
push
cs
jns
outsb
loope,pn
mov
inc
jb
jecxz
into
ret
xchg
and
lock
pop
loop
iret
dec
mov
push
adc
sahf
mov
dec
jo
mov
insl
loopew
lods
xor
movsl
jl
unpckhps
sub
clc
inc
aad
pop
pop
sti
add
les
int
les
call
or
push
jge
jnp
movsb
lds
adc
pop
or
mov
push
push
mov
adc
fsubs
xchg
mov
mov
mov
aaa
adc
bound
mov
aas
pop
add
xchg
pop
add
mov
enter
inc
call
jecxz
jp
adc
dec
enter
push
daa
xchg
push
dec
sub
les
popa
insb
das
aad
or
pop
insb
repz
dec
mov
insb
test
and
push
xor
sub
inc
add
and
sbb
inc
mov
mov
add
inc
or
jns
pop
push
cld
pop
pop
cwtl
jo
mov
sbb
lcall
mov
pushf
enter
ljmp
or
jmp
adc
lods
test
je
jne
shlb
icebp
mov
ljmp
inc
shll
inc
test
mov
repz
cmp
mov
ficoml
mov
xor
and
jmp
mov
repnz
stos
movsb
inc
adcl
jns
out
xchg
jno
std
pop
sub
stos
call
scas
scas
cmp
insb
nop
data16
arpl
test
mov
lods
mov
out
cmp
jmp
add
ret
mov
pop
cmpsl
xchg
mov
xchg
loopne
das
ffree
pop
inc
movsb
jge
or
into
ds
mov
in
adc
xor
outsl
jle
sbb
sahf
fists
int3
cmp
das
sbb
push
lods
icebp
cs
cmp
rorl
jae
sbbl
dec
push
cmpsl
popf
test
outsl
push
popa
in
fnsave
cmp
call
test
ret
pop
xchg
subb
pop
int3
inc
es
mov
scas
mov
jns
xchg
xor
not
loope
dec
movsl
xor
fsubl
dec
decl
scas
or
sub
and
jb
adc
inc
mov
sbb
mov
aad
ret
or
mov
inc
jl
lods
mov
aam
xor
push
cmp
ret
push
popa
loope
dec
sub
pop
inc
clc
mov
lahf
mov
iret
js
xor
adc
lahf
push
shll
fadds
ret
push
mov
imul
mov
iret
push
dec
das
cmp
loop
call
leave
popa
mov
dec
pop
xchg
pop
add
dec
cmpsb
xchg
roll
scas
mov
les
jle
mov
inc
xchg
mov
pop
movsl
scas
pop
push
pop
aad
in
mov
sbb
mov
in
mov
out
aad
sub
mov
subl
incl
int3
out
stc
cmpsb
jae
lret
pop
mov
push
fwait
mov
lea
mov
ror
mov
push
lock
les
push
push
xchg
and
test
inc
jns
jg
fcmovbe
ret
lret
lods
in
sti
xor
icebp
rolb
cltd
mov
jbe
jno
pusha
add
out
test
xchg
insb
aas
sub
scas
mov
out
mov
lret
daa
mov
subl
data16
dec
pop
inc
cs
pop
and
inc
divl
jecxz
mov
xlat
cmp
and
cmc
lea
loope
cmp
jbe
or
push
outsb
gs
jae
rcrl
dec
add
add
xchg
pop
pop
shl
lds
shrl
in
shr
push
cmp
pop
pop
orl
jecxz
and
in
add
aaa
outsb
xor
aas
ficoml
movsl
int3
lahf
lods
pop
sbb
sbb
mov
enter
adc
inc
and
push
push
pop
dec
rcrb
jmp
test
sbb
xchg
and
clc
pop
hlt
xor
xor
mov
mov
or
jecxz
jb
negl
jbe
xor
rcrl
into
in
pop
lcall
in
cli
popa
pop
inc
bound
sbb
inc
pop
andb
insl
push
movsl
sti
pop
stos
ss
xor
lcall
mov
scas
ffreep
cwtl
sbb
and
fcomip
sbb
outsb
inc
clc
dec
and
mov
jnp
inc
sub
jbe
imul
ljmp
insl
inc
rolb
and
xchg
imull
imul
inc
mov
loope
in
jg
inc
or
in
insl
mov
lods
mov
scas
or
xchg
sub
daa
sub
mov
add
arpl
adc
sbb
and
sahf
mov
sti
lds
lahf
push
sbb
stc
xlat
push
and
add
push
scas
test
xchg
idivb
adc
je
pusha
sbb
aaa
dec
aad
add
mov
arpl
mov
or
negl
in
mov
sbb
pusha
mov
adc
shrl
call
and
dec
dec
scas
mov
dec
imul
add
mov
push
icebp
jge
and
mov
cmp
ss
cmpsb
push
leave
or
dec
ret
push
or
jg
shlb
and
add
daa
adc
lahf
cmpsb
int3
mov
or
sahf
jl
cmp
daa
and
fnsave
jns
outsl
popa
leave
imul
insl
cs
pop
sub
adc
addl
pop
cmp
adc
rclb
dec
jmp
aas
cmp
shrl
testl
push
orl
add
stos
adc
jbe
flds
in
loopne
out
pop
imul
mov
mov
scas
pushf
pop
lret
out
js
xor
insl
sti
fldcw
jl
pusha
std
test
inc
cmp
cmpsb
daa
hlt
mov
mov
sbb
fs
loopne
mov
inc
bound
jmp
cmp
cwtl
mov
push
sbb
repz
push
clc
xchg
push
or
faddl
rcrb
int3
aam
and
add
and
gs
loope
mov
lea
int3
pop
push
in
not
call
adc
sub
pop
inc
jno
mov
inc
push
in
outsl
cmp
inc
push
jnp
test
jge
pop
inc
xor
filds
out
cmp
jne
and
xchg
stos
jb
xchg
movsl
cmp
movb
sbb
mov
in
lret
and
or
lahf
mov
dec
dec
or
push
xchg
loopne
fwait
incl
ja
pushf
push
mov
mov
push
sbb
or
movsb
inc
adcb
inc
addb
rcll
or
adc
add
lcall
jno
cmp
subb
jl
sub
out
and
inc
and
insb
mov
aam
inc
cmpsl
lock
addb
shlb
in
into
jnp
sbb
xor
ss
roll
mov
xchg
std
cmp
lret
clc
xor
dec
cmp
inc
pop
aas
xor
fcoms
add
shll
add
inc
xor
enter
sbb
xchg
test
push
rolb
fsts
fildll
in
mov
mov
mov
mov
xchg
es
or
xchg
sub
hlt
shrb
dec
movsb
js
pushf
out
das
mov
inc
cltd
add
arpl
das
xchg
test
jno
sti
arpl
jmp
mov
push
xchg
and
adc
mov
insl
xchg
in
ret
sahf
mov
enter
inc
movsl
push
lods
or
sub
mov
sub
sub
sbb
and
add
cmp
cmp
push
lcall
add
sti
inc
ss
xchg
in
xchg
sub
out
push
jle
outsl
pop
lea
dec
push
pop
push
cmc
movsb
push
imul
popf
add
jg
push
jecxz
mov
aad
icebp
jnp
addb
in
cmp
scas
dec
negb
or
ret
jecxz
cs
lahf
cmpsl
imul
cmp
shl
fildl
test
xchg
mov
xor
pop
ja
movsb
outsl
hlt
lock
mov
cmpb
sub
mov
dec
mov
or
cwtl
adc
and
in
es
xchg
iret
scas
mov
in
jno
xor
addl
ret
adc
mov
hlt
in
and
aaa
adc
inc
daa
inc
pop
loop
or
fisttpll
stos
adc
insb
dec
mov
inc
sahf
xchg
xor
in
cmp
rorb
sti
xchg
mov
sub
mov
cmp
jl
or
stc
mull
lods
mov
and
fmulp
nop
sbb
iret
sbb
fldcw
adc
rorb
push
leave
and
xchg
jne
aam
out
cld
xchg
jmp
add
push
sub
ljmp
mov
xor
shrl
adc
test
xor
into
ss
es
mov
imulb
lea
or
xor
add
mov
xor
mov
pop
aas
jp
adc
ljmp
rclb
mov
call
add
xor
aad
mov
addr16
fwait
popa
dec
movsl
cs
sub
inc
ror
adc
push
int3
or
dec
jl
or
ljmp
jp
pop
in
adc
ja
push
jb
sub
stos
pusha
mov
scas
pop
sub
push
sahf
pop
sub
sub
lods
sub
xor
inc
cltd
int3
fdivp
xor
rcrb
dec
mov
or
fld
data16
insl
cmp
dec
xchg
movsb
lcall
outsb
xchg
mov
push
pop
out
dec
xor
push
inc
sub
cmp
lahf
lock
jo
sbb
lahf
xor
sub
cmc
xchg
testl
jne
xchg
fwait
xor
rorb
dec
les
xchg
dec
mov
push
mulb
repnz
push
test
adc
leave
sub
xchg
sbb
pusha
imul
cwtl
sbb
mov
xlat
fs
add
ds
adc
outsb
add
dec
test
arpl
mov
mov
ret
xor
imul
dec
cmp
dec
aas
into
dec
xor
sti
sbb
sbb
cwtl
pop
jno
jp
hlt
push
and
mov
mov
ds
mov
adc
adc
pop
sbb
adc
fsubl
add
push
inc
add
rclb
pop
mov
dec
sub
int
mov
push
rol
das
mov
pop
mov
nop
mov
stos
repnz
xchg
les
xor
jecxz
out
mov
pop
push
xor
mov
dec
ret
inc
cwtl
mov
adc
jecxz
std
bound
jnp
das
pusha
add
add
rorb
push
nop
int
and
add
pop
adc
ja
cmpb
das
ret
mov
sbb
imul
cmp
lcall
cmpsl
lret
loop
sub
out
jg
xor
aam
xchg
lds
out
cmpsl
stos
inc
sbb
xchg
xor
adcb
cmp
sar
bswap
adc
je
xor
xor
add
imul
sub
inc
scas
sahf
fdivl
sbb
jl
mov
das
jae
mov
es
inc
push
repz
jge
stos
push
adc
mov
aaa
rcr
fsts
ss
icebp
leave
hlt
mov
out
xor
aam
sbb
mov
test
dec
xchg
js
fcoml
adcl
stc
push
sub
mov
lret
mov
push
bound
adc
push
bound
aam
pop
insb
sbbb
dec
mov
neg
mov
and
jns
cmp
dec
xor
xor
cld
gs
mov
ss
rcll
mov
sub
inc
jne
jl
sub
cmpsb
xchg
push
adcl
lret
cmpsl
mov
mov
jecxz
lods
lock
pop
xchg
inc
add
xchg
push
roll
sarb
mov
cmpsl
xor
enter
roll
mov
mov
nop
or
xchg
addr16
lock
push
mov
and
jecxz
pop
inc
mov
sahf
and
cmp
cmpsb
push
adc
add
clc
jge
sub
or
mov
inc
daa
pop
pop
push
mov
imul
cmp
or
in
xchg
mov
ret
jne
lcall
mov
imul
andb
test
xor
sub
or
xor
pop
jmp
or
out
mov
es
scas
xchg
sbb
loope
test
loop
dec
aad
xor
adc
xor
inc
inc
cmpsl
repnz
popa
sbb
jp
mov
inc
adc
or
imul
fisttpll
pop
out
rcrb
pop
cmpb
mov
push
sarl
cmp
stc
je
or
std
aam
enter
inc
lods
xchg
sbb
ja
movsb
mov
xor
cmp
push
add
es
mov
push
sbb
cmp
nop
add
aas
and
sub
jg
cmp
movsb
pop
out
or
pop
pop
mov
aam
jecxz
sbb
nop
inc
jne
push
cmp
inc
xchg
mov
sub
punpckldq
shll
push
pop
js
jl,pn
fildl
xchg
cltd
data16
or
leave
jg
and
sbb
push
sti
jmp
fwait
cmp
pop
lahf
inc
jno
das
fwait
cmp
inc
je
call
push
pop
sarl
adc
or
test
push
mov
and
shrl
pop
xchg
sub
pop
mov
pushf
adc
fstl
sbb
xor
jg
in
pop
fdivrl
xchg
pop
xchg
xchg
cmp
pop
daa
or
sub
and
jno
dec
xor
push
jmp
enter
js
and
inc
cld
aas
rcrb
ss
pop
push
clc
push
lock
movsb
popl
mov
mov
outsb
mov
xchg
push
sub
inc
pop
int3
or
xchg
fdivr
cmpsb
xchg
jno
mov
dec
push
repz
bound
add
inc
aas
dec
jae
and
jo
ss
inc
pop
inc
add
jno
js
sbb
inc
arpl
icebp
ljmp
jp
pushf
push
andl
xor
inc
add
shlb
lret
mov
add
inc
data16
jno
stos
mov
sbb
xchg
pop
inc
or
jp
mov
cmc
push
imul
mov
sbb
cwtl
ss
das
hlt
dec
subb
or
mov
mov
outsb
lret
add
imul
sbb
cmp
add
dec
sub
and
ljmp
jo
les
sahf
test
mov
mov
out
cmp
cmc
mov
js
or
je
lods
sbb
dec
leave
mov
jge
dec
cld
mov
out
pop
pop
shlb
jp
pop
aad
stos
loope
jns
movsb
rdpmc
adc
sub
lret
pop
sarb
ss
sub
cmc
sbb
stos
mov
mov
dec
test
orb
stc
adc
movsb
lods
nop
leave
out
mov
mov
jecxz
nop
pushf
sbb
inc
cmpsl
lds
mov
mov
ds
sub
gs
and
fstpl
fildll
jge
xor
in
add
push
or
jb
xchg
sbb
adcl
imul
ss
fsubrs
adc
out
add
pop
insb
arpl
xchg
jmp
mov
cmp
movhps
scas
jb
and
pop
inc
dec
cmp
out
popa
xor
inc
dec
rcl
pop
popa
fs
aam
cmpl
adc
lcall
data16
inc
sahf
lcall
sbb
sub
aas
loope
dec
jmp
sbb
sub
adc
adc
ja
mov
in
lahf
and
dec
jne
xchg
and
daa
inc
outsl
sbb
cmp
jae
mov
push
inc
dec
mov
jb
lret
iret
mov
jbe
pop
gs
sub
or
fildl
add
jae
dec
arpl
and
mov
ja
xchg
sti
sub
pop
out
pop
cld
imul
or
sub
adc
scas
in
sub
xchg
lods
sub
jns
shlb
jb
xchg
xchg
test
lock
lds
mov
push
mov
xor
int3
adc
stc
testl
cld
shll
hlt
mov
or
xchg
jne,pn
jnp
movsb
inc
cmc
mov
test
sub
lods
push
cld
xlat
subl
les
xchg
js
and
in
je
sbb
scas
mov
cld
xchg
je
into
fimull
jne
iret
idivb
fwait
bound
push
mov
mov
cmp
scas
outsb
xor
sarl
push
insl
outsl
leave
xchg
das
daa
loope
add
sub
push
not
in
nop
loope
cmc
adc
or
imulb
pop
inc
push
rclb
out
mov
data16
xlat
jb
sub
rolb
pop
jns
pop
and
inc
imul
loopne
jge
mov
rolb
mov
dec
xchg
cmpsb
jg
fidivl
xor
popa
into
bound
jmp
jne
pop
add
addb
inc
leave
adc
pushl
in
push
lcall
cmp
mov
repz
test
lea
ds
xchg
imul
out
sbb
ret
iret
hlt
xor
add
aaa
xchg
mov
mov
in
ss
int3
jmp
cld
xchg
and
mov
scas
or
stos
cmc
push
arpl
pop
in
jg
fsubrl
lods
out
fldl
adc
mov
and
push
adc
lahf
jmp
add
xor
cmpsl
mov
cmp
jp
in
sbb
add
and
fcomp
mov
xlat
or
leave
jns
jle
sbb
test
mov
push
mov
arpl
inc
mov
or
iret
mov
jae
fmuls
movsl
jecxz
rorl
xor
in
hlt
ljmp
pop
pop
icebp
rorl
lea
aam
pop
lds
push
aas
cwtl
xchg
sub
add
cli
cmp
sub
jmp
shrb
movsl
xchg
inc
add
adc
ror
cmp
add
js
pusha
andb
lahf
sbbb
data16
addr16
sbb
paddsb
inc
mov
dec
pop
ficomps
es
jb
imul
push
shrb
jbe
out
pop
pop
xchg
mov
push
and
pusha
cmpsb
lea
shll
pop
lods
lret
cltd
sub
addr16
ja
inc
xlat
lods
ret
xor
or
test
arpl
jl
lahf
fmull
mov
movsl
add
sub
dec
dec
out
xchg
adc
mov
sub
lods
pusha
and
jne
add
loope
adc
rcl
mov
aad
jge
push
xor
bound
lcall
lcall
dec
lea
inc
cmp
inc
pop
movsb
in
xchg
jg
jae
lcall
and
std
cmp
sbb
andb
repnz
or
push
cmp
xchg
mov
xor
or
gs
nop
push
insl
test
jnp
mov
mov
lret
inc
xlat
sbb
adc
sbb
push
repnz
lods
dec
enter
pop
add
cmp
roll
jns
mov
notl
stos
sub
fs
mov
pop
icebp
adc
adc
mov
test
and
sub
mov
and
test
lods
mov
and
out
push
inc
push
adcb
data16
nop
int
mov
fcmovne
lods
pop
jno
insl
mov
push
sbb
not
adc
dec
jne
outsl
out
mov
mov
insb
stos
cmp
ret
fldl
cmp
mov
call
pusha
inc
or
shr
les
add
adc
gs
into
adc
jne
aaa
out
push
js
or
inc
sbbb
sub
mov
mov
hlt
jmp
mov
enter
popf
push
push
dec
sbb
inc
mov
roll
bound
push
loopne
mov
cltd
jbe
add
xchg
movsb
imul
and
test
mov
sub
lods
roll
or
jbe
xchg
fstl
daa
ljmp
mov
ret
cli
fidivrl
sub
loop
push
jg
sub
xchg
into
inc
in
call
fcmovnu
or
push
dec
jbe
add
sbb
es
stc
mov
mov
fucomi
push
loopne
adcl
mov
xor
adc
push
mov
inc
and
push
sub
inc
out
cmp
je
and
dec
and
sahf
cmc
or
ljmp
cmp
pop
cwtl
pop
es
sub
daa
jns
out
les
add
mov
cmpsl
ja
mov
fcoml
and
dec
enter
push
adcb
dec
dec
dec
cmp
mov
leave
or
push
cmpsb
or
or
lea
cmp
lret
jb
xor
mov
popf
jbe
sbb
inc
inc
jae
mov
movl
add
mov
ss
das
push
mov
sub
inc
call
test
lret
cs
cs
xor
dec
shlb
les
insl
push
outsb
pop
fcmovu
andb
inc
push
lock
jnp
stos
nop
mov
pop
adc
inc
lock
push
andb
mov
out
mov
xor
mov
andl
mov
sub
movsl
inc
pop
add
mov
sub
outsb
push
outsb
mov
mov
mov
out
mov
fildll
js
add
xor
mov
and
and
pop
sub
cwtl
jle
test
dec
aas
sub
inc
jbe
or
sub
inc
jp
xor
mov
es
adc
iret
mov
or
and
fdivrs
fwait
add
vpackssdw
inc
push
inc
bnd
push
adc
out
xchg
shl
fistps
sbb
cmp
xchg
cmp
cmpsb
push
cmpsb
mov
push
xchg
int3
ret
shrl
sarb
inc
sarb
incl
xchg
insb
pop
sub
and
stc
int
jbe
jne
ret
adc
movsl
shll
xor
lahf
stos
test
mov
cwtl
mov
les
outsb
cmpsb
add
mov
out
gs
in
add
push
xchg
lret
sbb
repz
pushf
sti
in
out
mov
pop
cltd
sub
pushf
and
lret
mov
sub
push
xchg
loope
rolb
lea
aas
aad
jecxz
int3
mov
dec
jl
je
or
negl
mov
or
pop
aam
dec
test
cld
and
mov
ret
test
stos
inc
test
jle
mov
push
and
addps
jb
into
fs
aad
xor
lods
negl
les
mov
idivb
mov
xchg
pop
pop
addr16
insb
xchg
xor
xchg
xor
loope
bound
jnp
xor
scas
cmp
lds
mov
mov
xorl
add
mov
pop
mov
jbe
ret
ret
mov
sbb
movsb
shrb
adc
and
mov
es
ja
mov
js
dec
outsl
mov
repz
fildl
mov
loopew
outsb
fsubrl
jl
repnz
stos
fbstp
enter
sbb
add
cs
xchg
inc
ljmp
jecxz
and
loope
js
in
mov
fidivl
fistpl
std
cli
movb
cli
scas
jge
mov
jmp
mov
dec
or
mov
mov
ret
dec
push
mov
popf
lods
and
pop
mov
mov
inc
jg
add
cmpsb
fstpl
daa
mov
add
sete
add
andl
xlat
sahf
test
mov
arpl
mov
jg
pop
in
mov
jne
aam
jno
xchg
mov
lods
lock
fdivs
arpl
andl
lahf
dec
sbb
dec
aaa
test
add
add
call
sbb
and
sbb
push
sub
in
rorl
in
add
sbb
pop
int3
jl
fidivrs
das
mov
push
mov
and
xor
addb
jle
xchg
mov
fs
and
sub
ljmp
fildll
cmp
jmp
mov
pushf
into
divl
stc
and
jle,pt
dec
cs
mov
or
adc
add
inc
movsl
out
cltd
jae
ss
sub
or
jb
inc
jecxz
test
cmp
hlt
fstpt
push
sbb
pop
out
mov
in
es
push
addb
adc
or
sahf
movsb
xor
push
scas
mov
sti
sbb
xchg
mov
mov
arpl
pop
pop
sbb
or
jbe
inc
sbb
dec
shll
icebp
fisubl
push
cmp
aas
fildll
mov
mov
sub
stc
xchg
xchg
inc
daa
add
shl
lahf
daa
mov
xchg
loope
jno
scas
inc
sbb
test
push
fstl
outsb
adc
mov
jmp
sti
rorl
mov
enter
xor
aas
fs
mov
and
inc
cli
mov
adc
and
push
call
xor
pop
insl
and
outsl
cwtl
subb
inc
idivb
mov
movsl
mov
xlat
xchg
mov
or
loopne
aam
addl
dec
fwait
int
pop
mov
lret
or
xchg
sub
push
add
add
jmp
cmp
jmp
lds
dec
iret
fidivrs
int3
leave
int3
les
inc
les
mov
int
pop
or
in
cmc
or
xor
adc
jp
inc
iret
add
lods
jl
imul
rol
adc
testb
sbb
mov
lds
cltd
or
roll
outsl
pop
xchg
repnz
out
push
les
cld
inc
inc
jg
dec
nopl
enter
dec
shl
inc
jno
call
add
jl
leave
xor
jecxz
fidivl
out
mov
jmp
cmp
xchg
aas
xor
jb
nop
ss
and
jns
push
sub
popf
mov
rcr
pusha
fs
mov
push
orb
jp
pop
add
mov
mov
sarl
fprem
mov
sbb
jno
stc
mov
push
sub
mov
dec
iret
inc
lea
inc
sahf
test
sti
adc
mov
fsubrs
push
lods
xor
into
and
fwait
adc
call
xchg
outsb
xchg
jmp
inc
scas
cmp
iret
push
in
lods
loop
repnz
pop
sub
addr16
in
jbe
lods
inc
repnz
mov
or
adc
cmc
push
les
sbbw
gs
aad
cmpsb
outsb
int
imul
sub
and
xchg
push
xchg
fnsetpm(287
push
sub
repz
es
xor
sbb
xor
mov
orl
jo
xchg
and
push
dec
out
in
vpsubusw
les
movsl
test
push
pop
dec
leave
push
adc
mov
gs
fistpl
push
jno
xor
gs
mov
xor
xchg
mov
push
mov
ret
lea
iret
jp
das
adcb
jae
pop
imul
stc
aaa
shrl
sbb
dec
testb
cld
fdivr
jmp
js
push
mov
out
xor
or
jo
mov
sbb
pop
or
sbbl
dec
mov
cmp
stos
je
inc
push
push
add
enter
lds
cld
pusha
popf
out
ja
mov
cmpb
mov
push
stos
jne
std
mov
mov
jl
mov
popl
adc
sbb
adc
sbb
lretw
mov
push
lahf
mov
mov
xchg
sbb
into
cmc
pop
jnp
sti
and
je
aam
adc
sti
sbb
jecxz
jo
xor
outsl
jmp
cld
popa
mov
sub
pop
arpl
jb
push
sub
mov
pop
jno
push
jns
fiadds
icebp
pusha
inc
je
out
sbb
dec
enter
data16
jbe
and
mov
pusha
clc
mov
rclb
shll
lds
insl
fdivl
in
out
cmp
in
rclb
xor
enter
and
ficompl
insl
dec
or
cwtl
test
jns
or
das
mov
add
ds
add
xchg
movsl
jl
pusha
ret
and
dec
xchg
call
je
sub
pop
ja
pop
jne
in
mov
movsl
outsl
cs
mov
dec
mov
ljmp
lret
imul
or
out
or
repnz
into
in
ss
mov
inc
inc
xor
ret
loop
adc
popf
dec
xchg
and
addb
fdivl
repnz
inc
mov
scas
cli
or
push
xor
test
xor
cmpsb
scas
imul
sub
sbb
jns
aas
push
push
aam
scas
mov
push
push
rcrl
shl
mov
in
hlt
jg
dec
fs
sbb
pop
cmp
add
push
cltd
add
sub
inc
and
shlb
faddp
jg
jp
test
mov
push
mov
arpl
mov
int
add
in
sub
push
pusha
add
pusha
jl
shl
sub
out
in
xchg
jae
mov
push
lods
mov
or
xlat
dec
iret
iret
fwait
push
adc
mov
adc
cmp
xor
jmp
pop
adc
jae
pop
fiadds
js
jecxz
xlat
in
inc
xor
cmp
mov
sbb
pusha
arpl
icebp
sub
pop
lods
cmc
repnz
xlat
into
mov
pop
popa
mov
and
sub
mov
mov
jle
add
cli
xchg
adc
dec
icebp
add
aas
popf
add
and
stos
dec
subl
clc
das
daa
hlt
inc
cmpsb
mov
test
and
add
push
enter
or
and
sub
jecxz
mov
jnp
cli
lods
incb
pop
add
mov
lret
or
rcll
fisubrl
mov
outsl
dec
xchg
fsubs
fsubrl
sub
popf
lods
dec
ss
fsubs
fsubrl
movsb
push
or
int
dec
xchg
popf
ljmp
inc
sub
ss
or
xchg
cmp
in
mov
scas
jno
push
popa
adc
jbe
dec
add
push
xchg
jns
lock
leave
in
mov
ja
pop
sbb
js
cltd
pop
or
sbb
call
loop
add
icebp
or
and
je
andl
pop
mov
pop
mov
lret
repnz
sub
xor
add
mov
jb
cld
test
and
dec
fdivs
popf
mov
jae
xchg
xchg
loop
adc
insl
cmp
outsl
adc
mov
sti
ljmp
adc
mov
push
inc
and
and
xchg
rorb
mov
adc
mov
push
xchg
xchg
inc
adc
sbb
push
mov
clc
mov
int3
cmp
loop
or
cld
mov
incb
xchg
test
sub
test
in
and
xor
cld
jbe
out
into
xchg
adc
cmp
jg
addl
inc
rorl
loop
xchg
std
jmp
rorb
test
and
cmp
adcb
into
int
cmp
jo
mov
stc
dec
fiadds
sub
aad
pusha
pusha
sub
jns
jle
sub
and
mov
or
pop
xor
loop
out
fs
clc
fs
push
adc
mov
stc
mov
iret
lcall
pop
testb
add
xchg
xor
mov
push
push
jp
pop
cmc
lods
adc
add
dec
hlt
aam
aaa
popa
test
lods
aam
cwtl
xchg
scas
pop
sub
hlt
xchg
mov
jbe
and
shrb
xor
rorb
cmp
push
movsl
jne
push
cmc
in
cltd
outsb
and
mov
adc
inc
xor
hlt
loopne
popa
clc
sub
scas
pop
mov
or
xchg
hlt
gs
inc
pop
push
rep
push
and
sbb
adc
xchg
sub
pop
ret
jmp
lds
addr16
ss
pop
cmp
pop
sbb
adc
lret
or
sbb
imul
fildll
addr16
enter
xlat
pop
adc
ja
outsl
cwtl
movsl
test
repnz
sahf
jge
cld
mov
les
and
cmp
or
or
jne
mov
xchg
sbb
rclb
popa
or
popf
loopne
and
out
jle
outsl
ds
sbb
fcomp
cltd
mov
dec
mov
push
cmp
inc
pop
sub
mov
mov
and
mov
cmp
repnz
xor
inc
hlt
cmp
lcall
push
cmp
and
aas
es
jno
xchg
adc
clc
addr16
sbb
sbb
repnz
jp
dec
mov
int3
mov
push
jo
inc
mov
in
mov
inc
fdivp
mov
mov
push
push
les
mov
setnp
fimull
jmp
nop
xchg
push
xor
or
aas
std
jb
les
mov
sub
sbb
decl
sbb
stc
sbb
in
setge
ds
adc
jle
enter
nop
pop
push
dec
pop
pop
mov
xchg
daa
shlb
es
inc
adc
xor
mov
mov
inc
js
cmpsl
test
aad
or
loope
xor
loop
addl
mov
dec
add
int3
loop
cmpsl
dec
push
popf
push
shrl
aas
push
in
and
mov
pop
ss
dec
cmp
insb
cmp
pop
cmp
jne
lea
mov
add
mov
mov
cmp
cwtl
mov
fcoml
push
test
clc
cli
pop
mov
cwtl
fldl
hlt
adc
rorb
pop
add
pop
nop
cmp
xlat
adc
sub
xor
out
dec
stos
arpl
fildl
mov
fists
int
push
imul
ret
fwait
insb
pop
or
lods
enter
xor
add
fmuls
add
cmp
xor
xorl
flds
mov
pushf
rcrl
mov
shrb
insw
fwait
out
jne
sbb
test
xor
sub
int3
mov
jae
fidivrs
pop
mulb
lock
push
lds
dec
pop
test
cmc
or
pop
rorl
daa
stos
lret
dec
fisubrs
dec
adc
loope
in
inc
add
mov
push
inc
mov
in
cld
sbbb
pop
ja
mov
jnp
pop
mov
mov
mov
inc
cwtl
nop
outsl
push
int
or
sub
loope
popf
mov
add
xchg
pop
lcall
push
and
in
shll
movsb
gs
bound
lods
sub
test
push
icebp
insl
jb
xlat
dec
sbb
xor
or
fildll
loopne
and
mov
xlat
and
aad
xchg
or
jmp
jb
adc
inc
in
stc
xchg
cmp
das
inc
mov
sub
xor
lahf
lock
jp
or
pop
push
xchg
or
xchg
xchg
mov
loope
xchg
push
adc
loop
add
ret
gs
push
pop
jle
rorl
pop
out
jmp
mov
or
fwait
lret
or
cli
notl
popa
mull
inc
cwtl
sbb
cltd
aad
adcl
push
fstps
mov
in
popa
data16
or
mov
daa
sub
jmp
sbb
jnp
stc
push
add
xor
stos
leave
ret
loop
push
mov
sarb
insl
bnd
bnd
lock
std
xchg
cmp
out
or
push
fsubl
rolb
rcll
push
cmp
mov
jbe
hlt
repnz
mov
into
popf
cmp
int3
sbb
outsl
push
add
in
xchg
mov
push
lahf
mov
cmp
cmpsl
ss
push
fsubp
jp
mov
or
mov
inc
adc
push
mov
push
rolb
ljmp
ljmp
test
mov
pop
inc
mov
cmp
into
movl
iret
in
inc
sbb
cld
xlat
loopne
iret
cmp
xorl
pop
mov
pop
push
in
and
xor
or
cs
cwtl
lds
adc
jns
mov
enter
outsl
lahf
jne
add
sbb
fistpl
sbb
jecxz
add
fdivrp
sub
and
jp
arpl
add
mov
imulb
in
sub
and
clc
xchg
dec
sbb
sbb
pop
push
inc
clc
push
xor
lcall
rcrb
lret
push
icebp
pop
enter
xchg
hlt
pop
add
push
rol
mov
push
xor
cltd
scas
notb
enter
push
mov
mov
bound
js
fidivl
clc
xor
and
inc
add
rcrb
out
adc
sbb
sbb
stos
push
dec
test
push
fmulp
outsl
aaa
fmuls
sub
xchg
ret
lods
fildl
add
adc
pusha
pop
push
push
shlb
lea
xlat
adcb
lods
jp
cmpsl
and
pop
popa
or
xchg
aaa
pop
scas
in
jge
cld
sbb
adc
loop
mov
dec
pop
les
mov
lock
aam
adc
mov
lcall
out
jp
clc
stos
roll
sbb
sbb
cs
mov
out
fwait
push
xchg
fisttps
jge
mov
push
jb
inc
outsl
push
jecxz
test
add
sarb
data16
orl
push
push
addl
or
ds
adc
xor
iret
push
cld
xor
xor
mov
add
push
loop
mov
es
or
fmulp
mov
push
in
fs
jno
mov
or
or
xor
int3
xlat
mov
cs
dec
or
or
ror
int3
xor
inc
into
sub
sub
loop
xor
enter
sahf
xchg
insb
dec
cmp
ret
jle
add
dec
or
data16
ficoms
jecxz
in
cmp
shrb
adc
out
outsb
aam
cmpsl
mull
xchg
in
pushf
scas
or
mov
sbbl
loopne
inc
mov
xchg
adc
in
jmp
push
out
repnz
les
sub
test
push
popf
test
add
test
and
fbstp
xor
jns
cmc
into
aad
sti
adc
imul
sbb
aas
mov
pop
popf
imul
xor
inc
inc
and
xlat
dec
sahf
jge
pop
inc
bound
andb
test
mov
out
inc
push
lahf
stos
pop
mov
or
movl
lahf
xor
gs
movsb
pushf
xlat
int
test
inc
push
xchg
dec
gs
and
mov
jmp
xor
scas
das
sub
mov
int
xchg
sub
cbtw
negb
pop
imul
fidivs
cmp
add
mov
inc
sbb
adc
ljmp
test
sub
xchg
xchg
dec
cmp
xchg
movsl
dec
dec
jno
pusha
mov
add
dec
lods
adc
test
dec
jns
lret
idivl
mov
mov
pop
repz
out
dec
aaa
lcall
xchg
mov
fstpl
jne
cmp
pop
push
pop
mov
dec
ljmp
icebp
fucom
pop
insb
or
xchg
ss
push
andl
pop
addr16
data16
addl
or
xchg
pop
incb
nop
in
insb
aas
jge
sub
mov
xchg
mov
cs
adcl
scas
jo
jns
pop
scas
mov
sbb
jmp
pop
ret
es
xlat
or
xchg
xchg
mov
pushl
hlt
lret
jge
movsl
pop
pop
aaa
sbb
scas
sbb
lods
stc
outsl
pop
add
add
and
push
mov
or
je
enter
mov
testb
xor
jae
push
popf
jno
je
lcall
in
imul
jno
test
fcoms
and
shr
movsl
pop
sub
lock
push
pusha
xorb
dec
add
in
adc
in
idivl
mov
mov
enter
loopne
sub
aas
repz
inc
pop
xor
scas
ss
sub
jg
test
mov
and
adc
pop
test
push
jp
test
les
push
cwtl
inc
push
pushf
push
in
mov
bound
push
dec
je
jle
dec
pop
hlt
xchg
push
xchg
out
inc
test
jne
ds
frstor
shr
mov
pop
fstpt
es
adc
jg
sbb
mov
fistpl
jnp
pop
insl
js
sbb
incb
jbe
jmp
pop
adc
sub
jno
mov
std
cli
adc
push
hlt
movsb
pushf
add
xlat
popa
lret
mov
pushf
sahf
aaa
mov
fidivl
add
mov
out
inc
or
jp
sbb
fs
sub
inc
and
adc
nop
in
hlt
mov
ret
sti
aam
push
inc
xchg
pop
in
jno
cmp
sub
pop
sub
push
scas
inc
mov
loope
add
adcb
dec
mov
sub
sbb
jmp
sbb
sbb
sbb
mov
sub
or
sub
adc
pop
xchg
adc
ffreep
inc
pusha
push
xlat
jg
inc
dec
inc
xchg
mov
adc
cmp
cs
mov
push
or
add
in
jns
dec
inc
pop
mov
and
adc
cmp
pop
or
xchg
cltd
lret
stos
scas
mov
xchg
push
je
mov
dec
ret
gs
paddsb
lahf
xor
dec
push
imulb
jp
sub
dec
xchg
mov
adc
call
pop
scas
push
inc
or
push
test
jmp
push
add
adc
or
sub
jo
jmp
push
and
sti
jne
je
mov
pop
loope
das
cmpsb
setne
or
mov
mov
fwait
and
pusha
pop
push
and
add
or
rep
pop
mov
or
jb
in
sub
cltd
add
adc
inc
add
mov
adcl
fs
ficoms
xchg
inc
inc
test
mov
push
dec
mov
pop
mov
lds
cmp
in
xor
es
roll
outsl
jl
mov
addb
imulb
fisubl
imul
ret
and
xor
testl
mov
les
sbb
jnp
movl
pop
scas
cwtl
ljmp
xchg
aas
movsb
fnstsw
mov
mov
jo
repnz
test
in
cmp
leave
in
shll
sbb
jmp
lds
xor
out
in
inc
gs
movsl
jmp
mov
aaa
hlt
xchg
call
imul
push
fidivl
xor
ljmp
popa
fbld
ret
stc
fdivl
imul
dec
xlat
js
inc
inc
or
cs
icebp
xor
sub
popa
push
jmp
insb
dec
xor
aaa
mov
mov
jae
sbb
repz
inc
mov
je
outsl
outsl
or
nop
push
movsb
add
add
and
rcll
test
cmp
inc
pop
pop
jne
das
rorl
fidivrl
in
mov
add
cli
mov
mov
xor
daa
mov
inc
movsl
mov
cmpsl
sarb
out
test
or
loope
adc
mov
sub
mov
mov
mov
pcmpeqb
mov
loop
popa
sbb
xlat
std
popf
xchg
leave
inc
inc
mov
add
sub
nop
nop
movb
jnp
xor
sbb
in
inc
leave
jns
lcall
adc
sub
ds
pushf
adc
mov
xchg
lahf
jne
daa
or
or
jbe
jne
pop
scas
call
out
leave
mov
shlb
out
ret
add
je
add
push
sub
nop
or
dec
sbb
cltd
orl
or
movsl
cmp
mov
hlt
fstpl
mov
rolb
mov
in
leave
enter
inc
rcrb
mov
inc
je
loopne
mov
fstl
push
fistpll
xchg
scas
sbb
call
lcall
mov
movsl
adc
adc
icebp
movsl
mov
jbe
cld
xchg
mov
lock
ss
lahf
mov
mov
jmp
test
scas
ret
inc
mov
push
add
ja
xchg
test
adc
push
addr16
lock
scas
mov
stos
imul
xchg
dec
xchg
ficompl
dec
fisubs
mov
frstor
push
dec
cwtl
gs
leave
ret
push
lock
cmp
insb
in
icebp
sahf
jge
pop
dec
push
mov
loopne
clc
mov
test
out
lock
insl
out
xor
push
cmp
mov
inc
push
mov
inc
add
jp
sub
sti
sub
into
inc
dec
std
mov
out
inc
dec
push
mov
std
xor
addr16
xchg
cmp
bound
jne
add
mov
dec
or
jl
dec
pop
jb
outsb
movsb
enter
lds
mov
in
out
adc
addr16
xor
push
bound
pop
or
jle
inc
mov
jl
adc
enter
mov
mov
inc
push
push
mov
or
ret
mov
push
cmp
out
aaa
lea
ja
mov
aad
jnp
xchg
xchg
xchg
fcoms
adc
or
inc
lahf
cmpsb
stc
dec
mov
or
sub
loop
cltd
repnz
push
cmpsl
fdivrs
add
xchg
push
and
push
test
outsb
int
and
add
inc
lahf
int3
loop
adc
divb
ss
add
push
loope
cmp
fcomip
movsl
mov
add
mov
cmpsl
dec
and
pop
lcall
cmp
insb
js
mov
stos
mov
lret
fs
pop
outsb
mov
adc
jnp
pop
jge
mov
mov
lods
xchg
jnp
aam
cmp
and
jecxz
mov
or
stos
hlt
or
mov
xor
cmp
dec
push
sub
push
call
push
add
sbb
addr16
mov
jge
test
fistpll
lret
sahf
cmpsl
sub
push
cmp
mov
pop
jo
mov
ja
jns
or
adc
jge
shlb
testl
push
jb
sbb
xor
icebp
lret
sub
and
push
lea
das
sbb
pop
mov
aas
inc
fs
inc
jns
push
pop
dec
xchg
lods
or
cmp
pushf
loop
mov
push
in
sub
jnp
es
xor
add
push
cmp
pushf
and
dec
jmp
mov
lds
add
sub
sbb
mov
cmpsb
and
mov
or
ss
xor
daa
in
push
xchg
sti
test
mov
add
mov
or
and
and
outsb
test
jp
push
ja
pop
subl
sub
shlb
divl
daa
lods
cmp
inc
sub
add
mov
pop
cmp
pusha
pusha
test
xlat
rcl
ret
xchg
push
inc
add
cwtl
cltd
jno
cmovnp
loopne
or
jecxz
push
sti
inc
inc
aaa
pop
add
lods
push
in
pushl
cmpsl
iret
loop
and
stos
sbb
xchg
add
pop
ret
cmp
inc
cli
in
push
mov
outsl
cmp
cwtl
lcall
push
daa
adc
jbe
sbb
mov
pop
cmp
call
push
cmpsb
fidivrs
xor
push
jno
or
arpl
pop
scas
loop
or
mov
cmp
push
and
or
mov
call
and
sbbb
mov
movsl
mov
jmp
inc
xor
cmp
lcall
iret
and
jmp
iret
jns
xchg
sub
jne
pop
je
sub
pop
jecxz
pop
fiadds
xchg
and
dec
insw
cmp
cmc
push
sahf
cmpsl
add
inc
mov
scas
int3
xchg
push
add
mov
dec
in
subl
repz
push
push
inc
dec
sbb
movsl
jle
cmc
das
mov
sub
lds
scas
mov
xor
cmpsb
fstpl
imul
ljmp
fs
roll
sub
xchg
fistl
jl
sbb
push
cli
push
ret
xchg
dec
into
push
push
or
xchg
lret
dec
and
inc
add
mov
push
add
xorl
jbe
movsb
aas
or
adc
jo
sbb
test
fbld
xlat
push
loop
push
jmp
lods
sbb
subb
jmp
mov
stos
shlb
xor
bound
leave
mov
adc
out
imul
cmc
out
imul
pushf
mov
adc
sub
adc
iret
sti
iret
xchg
jmp
push
lea
rcrl
push
hlt
dec
xchg
xor
jmp
jno
sbb
cmc
add
inc
adc
add
inc
pushf
sub
dec
sbb
jbe
push
inc
stos
xchg
scas
xchg
stos
adc
pop
inc
rcl
cwtl
gs
loope
dec
push
mov
addr16
aad
lcall
pop
jle
leave
mov
subb
daa
pop
js
cmpsl
pusha
std
in
xchg
les
xchg
rclb
sti
lea
ja
or
pusha
cmpsl
shlb
or
es
and
mov
mov
out
inc
fwait
leave
xor
jns
movsb
and
ljmp
sbb
and
leave
aaa
mov
outsb
rorb
adc
or
outsb
shll
scas
loope
sbb
je
clc
cs
shrb
push
lcall
daa
test
cmp
repz
or
sbb
pop
jp
and
gs
lods
test
xor
cmpsb
dec
clc
mull
push
je
jmp
or
push
and
sbb
cli
ret
lea
inc
js
into
mov
int
add
loopne
pop
shrl
and
xor
ret
adc
mov
out
rolb
sbb
and
clc
mov
jns
lcall
xchg
add
dec
insb
add
in
mov
xchg
rcl
add
js
js
pusha
int3
inc
shll
lock
or
roll
xchg
inc
shrb
jle
dec
lret
lea
adc
dec
rcr
aad
loopne
outsb
mov
adc
jo
idivl
aam
gs
cs
ljmp
popf
push
rorb
mov
sub
fxtract
lods
iret
mov
inc
inc
sub
or
lea
dec
cmp
cmp
icebp
add
rcrb
adc
cmpl
shrl
mov
sub
pop
add
rcrb
jg
xchg
in
fisttpl
xor
lret
push
inc
outsl
int3
mov
nop
inc
pop
pop
mull
mov
popa
in
and
and
jg
push
xor
into
mov
jno
aad
cltd
lock
pop
and
adc
lds
pop
sbb
loopne
mov
stos
orl
in
push
popf
bound
pop
xor
add
jne
jge
mov
push
icebp
imul
lods
in
xor
in
data16
jo
dec
mov
iret
jp
pop
inc
out
jecxz
jg,pn
add
sbbb
test
lret
aam
test
pop
clc
dec
xchg
jp
xor
js
mull
jl
idivb
jno
pusha
add
pop
dec
shr
sbb
dec
jmp
adc
pushf
and
pop
mov
inc
and
adc
lcall
dec
cmp
jne
jmp
add
fdivl
iret
pop
mov
fmul
cmp
ret
mov
add
ljmp
cmpsb
or
dec
add
pop
xor
xchg
add
push
jecxz
xor
mov
ljmp
popa
inc
sbb
jnp
fistpl
les
and
iret
repz
cmpsl
adc
outsl
mov
in
mov
and
push
arpl
and
ret
sub
and
xchg
lods
pop
aas
call
sub
lods
test
push
mov
sbb
dec
cwtl
or
lret
jns
cmp
cmp
push
push
cwtl
pushf
sub
test
jg
add
aad
pop
cmpsl
inc
fcomps
dec
inc
xor
test
mov
adcb
xlat
dec
int
fnstcw
add
or
insl
test
sub
decb
mov
jle
cmp
in
pop
jnp
adc
adc
adc
xchg
popa
orb
or
mov
sub
test
fcoms
les
cmpsb
ja
test
sti
in
cmpsb
in
imul
jge
push
pop
mov
imul
fwait
ja
and
push
or
cmp
inc
sbb
inc
sbb
push
cmp
dec
or
pop
inc
inc
push
mov
xor
call
adc
pop
ror
aad
sbb
push
cmp
pusha
ljmp
rorl
hlt
pop
adc
rcll
mov
push
mov
cmpsl
in
mov
gs
jnp
fs
sbb
aas
pop
sbb
dec
and
or
dec
les
ljmp
pushf
inc
pop
jecxz
adc
stos
jge
pop
jne
push
shrb
int
pop
in
fstpl
mov
stos
pop
ficomps
cmpb
stos
or
mov
and
lahf
lahf
dec
push
or
xchg
push
mov
shl
mov
mov
and
xor
test
nopl
aad
add
jns
and
lcall
syscall
fwait
adc
jmp
push
repnz
icebp
mov
inc
int
push
int
inc
lea
pushf
adc
push
out
add
xchg
cwtl
in
sub
fistpll
adc
mov
cmc
int
insl
shrb
xchg
add
mov
lea
sbb
push
cwtl
pop
icebp
sbb
pop
adc
xchg
into
arpl
mov
call
adc
mov
push
ljmp
adc
add
mov
cmp
loope
out
stos
lea
shll
inc
pusha
xor
sub
sbb
mov
xor
add
or
dec
cltd
dec
add
neg
jnp
out
stos
in
sbb
push
cmpl
mov
inc
testl
outsb
popf
iret
lock
dec
aad
pop
outsl
addr16
and
addr16
ror
je
lret
mov
xor
and
add
cmc
cmpsb
orl
or
jns
ret
int
or
sub
inc
or
sbb
xchg
test
cltd
xchg
je
dec
jge
pusha
inc
or
inc
cwtl
xlat
jecxz
jns
mov
sub
inc
jp
pop
or
dec
or
mov
nop
xchg
and
test
loope
push
jb
popa
push
or
cli
push
sti
cltd
inc
jecxz
std
fcomps
inc
jo
jmp
pop
dec
dec
pop
jg
jecxz
jle
sti
jns
mov
adc
xorb
ss
ud2
scas
mov
and
inc
aas
fs
mov
js
mov
movsb
aam
mov
mov
jbe
lds
cmp
mov
repz
aad
dec
call
stc
adc
mov
fsubs
sbb
mov
fwait
mov
push
loop
fincstp
jg
insl
ja
dec
mov
dec
inc
sarb
add
js
sub
mov
sub
repz
or
xchg
mov
pop
cmpsb
shll
inc
adc
mov
cmp
lret
push
lock
scas
mov
sarl
fcoml
jns
pop
xchg
lret
shrb
mov
out
dec
sbb
lcall
pop
rclb
dec
repz
jmp
mov
mov
and
jge
jne
mov
cmc
mov
lahf
push
add
loop
int3
and
inc
out
mov
stos
pop
sub
and
xchg
push
ljmp
sub
ret
mov
push
pop
movsl
push
xor
fs
fstpt
sbb
mov
aam
mov
dec
pop
test
xor
push
lret
shlb
cmc
imul
push
rcll
sahf
and
push
dec
or
jb
in
fstps
xlat
in
mov
mov
and
jb
repnz
movsl
ja
adc
jle
cmp
push
xor
or
cs
ja
loope
xchg
sbbl
and
mov
mov
shl
xchg
out
add
shrl
push
xor
lds
xchg
shl
in
mov
cwtl
cmp
or
pop
mov
sub
bound
pop
pop
jp
xchg
sar
mov
aad
stos
pop
jbe
ja
enter
loop
fstps
pop
cli
ljmp
xlat
lea
test
sbb
mov
pop
xor
mov
cmp
pop
into
movsb
out
inc
out
lea
daa
clc
fs
push
and
fisttpll
or
insb
jmp
insl
push
add
out
xchg
ljmp
insb
and
xor
push
ret
adc
xor
dec
xchg
andl
mov
xchg
imul
adc
data16
in
sub
add
roll
dec
loopne
imul
rcr
push
aaa
or
lods
mov
addl
mov
jecxz
rcll
sub
lea
and
cmc
test
inc
iret
fbld
add
add
sarl
mov
and
in
mov
test
sbb
aaa
rcr
movsb
cmp
and
data16
dec
xlat
mov
add
pop
inc
push
ret
pop
orl
test
cmpsb
je
mov
sbb
mov
mov
xor
fnstsw
movsl
in
dec
paddq
inc
jmp
subl
repz
cwtl
das
adc
or
into
ficomps
das
imul
pusha
jg
push
jle
aas
in
push
mov
std
std
add
shl
jmp
inc
push
dec
cmp
bound
and
mov
jle
fisttpll
sahf
xchg
loope
fsts
jns
icebp
sbb
push
push
push
xor
adc
add
in
push
aas
cmpl
iret
pop
cmc
xchg
repz
mov
stc
xchg
add
push
mov
stos
jg
clc
mov
ljmp
arpl
adc
out
hlt
loopne
push
jmp
mull
jne
push
jnp
addb
mov
jp
fsts
iret
in
inc
inc
pop
unpckhps
sub
xchg
loopne
repnz
pop
inc
and
mov
cmpsb
jnp
dec
sahf
sbb
dec
fsubrs
xchg
sahf
push
cld
sbbb
xchg
test
mov
int3
jns
dec
arpl
movsb
mov
ljmp
adc
xlat
pop
cmp
push
ljmp
pop
mov
frstpm(287
lcall
pop
pop
fists
mov
xor
out
or
lock
jecxz
ljmp
cwtl
imul
insb
pop
into
pusha
cmp
cmp
sahf
in
int
mov
sahf
adc
inc
js
testb
sub
mov
enter
xchg
fistpl
lock
in
push
mov
push
pop
loopne
popf
inc
pmaxub
add
repz
or
xor
outsl
sbb
fcmove
cmp
les
js
ret
fsubrl
insb
jmp
inc
pop
repnz
push
faddp
sbb
jp
fnstcw
mov
push
cli
pop
mov
lock
rorb
ffree
mov
sub
cmp
pop
pop
movsb
arpl
push
rolb
std
xchg
fs
mov
rcrl
push
push
mov
adc
sahf
jmp
push
jmp
add
mov
xor
cs
ss
sahf
push
xchg
icebp
icebp
rcr
mov
aaa
imul
shll
es
xchg
movsb
mov
fsubs
mov
ret
sub
push
sti
cmpsb
sbb
adc
nop
pop
ret
and
scas
push
lods
add
xor
lods
pop
in
bswap
mov
call
clc
inc
inc
mov
sbb
or
dec
movsl
in
push
cmpsb
push
bound
xor
scas
iret
mov
outsl
jmp
lret
sbb
inc
orb
fidivs
adc
ss
out
test
mov
mov
into
movsl
and
push
sbb
shrl
jno
test
or
sarl
cld
push
movsb
hlt
punpckhwd
in
sti
iret
stos
out
roll
ljmp
xchg
mov
mov
pusha
ljmp
das
outsl
pop
fwait
and
dec
out
popa
in
stos
sub
mov
pop
xchg
adc
loope
addl
clc
es
ja
arpl
mov
dec
and
mov
lret
pushl
mov
sub
push
inc
cmp
jae
cld
cmp
out
mov
fwait
xchg
pushf
mov
in
into
sub
adc
sub
fildll
enter
xor
cmp
sub
pop
mov
insb
lds
adc
shr
sbb
sub
add
and
int
lods
mov
cmp
push
enter
sub
inc
jmp
aam
mov
push
outsl
icebp
dec
adc
fwait
sbb
adc
mov
aaa
xchg
jg
loopne
int
dec
cmpsb
adc
sbb
cmp
push
lock
iret
mov
jne
js
hlt
lods
sub
bnd
sub
lcall
push
scas
mov
jae
mov
mov
lea
jne
pop
pusha
in
pop
das
cmp
imul
call
inc
cwtl
rcl
lock
pop
mov
cmp
mov
test
stos
loopne
mov
jg
sbb
dec
outsb
xor
add
and
pop
jge
and
dec
aad
repz
fucom
rolb
mov
cmpsb
cs
fdiv
adc
dec
xchg
andb
pop
pushfw
inc
push
xchg
add
xor
clc
call
mov
frstor
rclb
repnz
adc
jae
push
insb
ljmp
sub
fprem1
mov
dec
sub
aam
cld
xor
sub
subb
aas
pop
jo
add
testl
enter
stos
insl
ja
cmp
xchg
hlt
loop
xor
lds
outsl
pop
xor
fldenv
movsl
jg
cmp
sub
and
stc
in
and
sbb
test
jmp
imull
leave
jno
xor
call
or
and
lahf
stos
sub
lcall
mov
mov
mov
ljmp
sbb
movsb
jnp
add
sub
push
rcrl
mov
fsubl
mov
sub
fwait
hlt
xchg
subb
sahf
sbb
out
adc
test
jnp
pop
aam
add
cli
inc
data16
fidivs
mov
adc
movsb
adc
repnz
jo
and
add
xor
or
or
mov
je
jno
sti
jp
adc
push
add
mov
sbb
or
adc
inc
mov
cld
jl
test
scas
sarl
out
add
sbb
push
mulb
imul
mov
scas
dec
push
rorb
sub
mov
jnp
aad
mov
pushl
inc
inc
adc
cmpl
push
outsb
and
jp
push
sbb
cmc
out
lret
mov
pop
cmp
rcrl
or
pushf
jl
arpl
sbb
push
addb
gs
enter
cmp
sbb
mov
add
insb
addr16
jbe
idivb
sub
jle
xor
dec
cmp
and
adc
repnz
cwtl
cmp
fldl
aam
pop
lds
mov
mov
push
cmp
sub
sahf
je
outsl
push
pop
inc
push
mov
push
cmp
test
ror
add
clc
in
fnstsw
mov
das
xchg
mov
push
dec
xor
hlt
push
cltd
nop
movl
ss
mov
adc
pusha
mov
pop
xchg
mov
xchg
xor
cmp
jmp
xlat
push
xchg
movsb
das
xchg
movsl
inc
adc
stc
je
and
es
loope
sbb
pushf
cmp
sub
movsl
jle
cmp
pop
sbb
push
inc
sbb
sbb
adc
and
inc
jecxz
mov
push
fstl
das
lock
out
xor
xor
clc
mov
xchg
add
jns
mov
mov
ret
bound
sahf
pop
mov
mov
and
into
stos
sub
cmp
shr
jmp
adc
push
xor
mov
xchg
imul
fimull
cmc
inc
stos
fmuls
cmpsb
sbb
jmp
mov
and
cmp
lret
leave
dec
lds
or
gs
adc
and
mov
popf
jmp
jecxz
pop
mov
jae
xchg
mov
push
es
and
divb
inc
stos
or
mov
and
mov
js
add
adc
cmp
out
jl
es
fisubrs
test
in
jp
push
xor
cmp
adc
lahf
ret
pop
testb
loopne
xchg
fwait
int3
pop
jmp
pop
xchg
jno
js
or
pop
lahf
mov
dec
mov
outsb
inc
sti
bound
mov
mov
jle
xor
jmp
decl
ret
inc
fisttps
add
fidivrs
sub
fwait
test
sub
outsb
mov
mov
mov
xlat
insb
test
dec
jbe
stos
insb
and
fsubl
popf
mov
xor
fs
cld
or
je
xchg
mov
jbe
pushf
jle
aas
adcb
sbb
xchg
push
daa
loope
ja
aam
adc
std
cs
loopne
pop
jnp
insl
lret
lret
jns
bswap
sbb
test
out
cmp
aaa
push
xor
mov
xchg
and
pop
fcompl
andb
mov
mov
shll
sub
jp
iret
sbb
fdivrl
fisubl
add
mov
dec
ror
jns
xchg
cmp
aad
sbb
in
sbb
or
xchg
sbb
sub
mov
lock
out
leave
cmpl
pop
add
sahf
cmp
mov
les
jne
lcall
or
adc
aad
out
pop
sti
jmp
push
test
pop
sub
jmp
ret
shlb
imul
aad
xchg
leave
lea
cmp
repnz
mov
hlt
in
push
push
mov
sub
dec
jb
loope
dec
icebp
lods
pop
fdivrs
ror
push
jns
cmpl
ficomps
cmc
shlb
xor
jae
jno
push
push
jns
test
xor
cmp
js
jno
sub
xchg
adc
xchg
and
and
mov
cmp
jl
shr
xor
xchg
imul
hlt
in
sbb
iret
jne
add
push
imul
inc
addl
in
sti
in
sti
movsb
add
xchg
mov
mov
out
cmpsl
add
dec
jecxz
cmpsl
inc
in
aad
jle
cmp
cmp
cmc
or
pusha
mov
lret
fisubrs
and
shl
cli
das
out
aam
add
loope
or
in
xor
mov
jns
lret
sub
sub
lret
aad
sbb
cmp
xchg
xor
mov
pop
xchg
xlat
dec
push
cmp
pop
add
xchg
rcr
repz
outsl
loop
iret
pop
push
sub
push
sub
sbb
lds
pop
xchg
mov
stos
andb
clc
xor
fisubl
test
adc
jl
loop
pushf
sbb
ret
xor
mov
xor
imul
lods
sbb
and
fdivrs
xchg
pusha
enter
or
cli
ja
test
aam
push
xor
sbb
add
push
mov
movsb
es
loopne
pop
and
clc
rep
adc
mov
jmp
es
aam
mov
daa
ds
cmpsb
add
pop
jl
xchg
and
xlat
xor
add
mov
mov
pop
scas
cwtl
stos
sub
xor
loope
pop
adc
aaa
xchg
mov
es
dec
dec
mov
sbb
les
push
xor
add
aaa
rcrl
mov
imul
xor
call
or
fiadds
aad
in
pop
mov
aam
xor
nop
pop
add
jg
pop
ja
mov
test
lcall
sub
loop
pop
add
sub
push
inc
movb
icebp
cmc
xchg
pop
jg
and
cmpl
xabort
pop
mov
mov
add
aad
adc
inc
xchg
add
icebp
hlt
sbb
adc
add
je
sbb
pop
ja
dec
cwtl
xchg
sub
enter
inc
ja
daa
jl
into
adc
inc
xchg
sub
cmp
test
sbb
or
loop
cmp
stos
or
push
imul
push
enter
mov
inc
sub
dec
mov
mov
push
dec
inc
pop
mov
jge
inc
mov
xchg
pop
sbbb
mov
cmp
movsl
outsb
xor
mov
pop
add
push
repz
clc
fwait
cmp
dec
jb
xchg
stc
gs
rorl
and
jg
pop
iret
mov
push
das
daa
or
fcomps
and
loop
ret
les
sub
xor
inc
sbb
into
mov
jge
xchg
jbe
fistps
in
or
push
fwait
or
xchg
push
cmp
repnz
ljmp
pop
loop
inc
xchg
lcall
mov
xchg
push
call
sub
and
fimull
sub
dec
scas
xchg
mov
and
cmpsb
stos
jo
xchg
test
pusha
jmp
push
mov
jb
loop
mov
or
adc
testl
cmpsb
mov
jne
call
inc
mov
es
cs
mov
adc
fisttpll
mov
ficoms
cli
cmp
and
push
dec
mov
or
insb
mov
mov
mov
mov
fwait
scas
xchg
aas
outsb
jns,pt
pop
sbb
mov
mov
cmpsb
rcrl
add
mov
inc
fbld
cmp
inc
cltd
mov
dec
lock
into
addr16
popf
fcom
je
pop
fsubrp
or
jae
es
cmp
sbbl
mov
iret
push
mov
fs
ds
sub
add
xor
inc
mov
push
and
fidivrs
cmp
pop
das
dec
jp
loopne
popa
dec
nop
iret
idivb
test
arpl
or
pop
stos
ret
mov
push
out
jmp
xchg
jp
push
push
pusha
nop
cmp
sub
push
jmp
push
push
or
cmp
inc
cwtl
dec
pop
pop
test
push
sbb
xchg
jge
cmp
stos
inc
add
filds
sar
or
fldenv
adc
fisubrs
in
mov
ret
xchg
into
cmp
shll
or
mov
and
flds
inc
fisubrl
dec
mov
mov
fidivl
mov
mov
int
stos
cli
xor
mov
push
nop
ret
stc
cmp
shlb
cld
or
or
pop
push
aam
or
pop
lcall
cmpl
jl
xor
cmp
mov
mov
mov
adc
pop
insl
jl
lret
xor
imul
lods
add
xchg
xlat
dec
mov
lret
mov
std
fistpl
ret
bound
aad
aaa
insb
xchg
sub
mov
movsl
je
pop
int
shll
dec
in
paddd
push
movsb
test
fs
push
pop
sub
pop
insb
int
xor
xor
add
adc
call
mov
lods
inc
mov
sbb
pusha
adc
test
lds
mov
rolb
or
pusha
test
repnz
je
cli
or
fimuls
lds
cmp
pop
mov
stc
imul
test
lret
mov
push
stc
jne
inc
inc
push
lret
dec
out
insl
jge
leave
jnp,pn
pop
scas
mov
scas
xchg
jb
add
imul
pop
pop
test
sti
cmp
cmc
into
cmp
jl
popa
mov
mov
adc
das
xchg
stos
push
ret
adc
fnstsw
sbb
sub
push
pop
cmpsl
dec
std
pusha
mov
jns
add
mov
pop
cmp
in
mov
ja
sti
mov
cltd
repnz
xor
inc
mov
xchg
jne
fwait
add
out
filds
hlt
aaa
or
loop
sub
clc
out
mov
xor
inc
mull
shll
or
sub
or
push
dec
xor
mov
fcompl
mov
and
fstps
or
adc
push
movsb
and
jbe
ljmp
or
decb
xchg
dec
arpl
in
ret
je
add
pop
mov
scas
lds
stos
pop
and
xor
jae
jge
adc
xlat
lock
ret
or
dec
outsl
ds
aad
xchg
hlt
mov
cmc
aam
into
mov
adc
in
repnz
jno
or
mov
dec
inc
lods
out
out
sti
pop
pop
jno
ja
mov
xor
sub
jmp
sub
inc
imul
aaa
inc
xchg
stc
xchg
sub
xor
jbe
dec
cmp
scas
adc
outsl
mov
scas
add
mov
sbb
sub
test
cli
dec
lds
es
xchg
lahf
decb
std
call
popa
fabs
and
imul
dec
push
inc
xor
mov
xor
cmp
cli
pop
push
in
xor
test
mov
xchg
dec
je
pop
or
add
push
jl
call
aad
and
loope
xchg
ds
mov
pop
in
xchg
notl
lea
xchg
loop
adc
pop
push
xor
les
cltd
daa
decb
aad
jl
adc
push
daa
mov
repnz
arpl
pop
jp
lods
mov
xchg
outsl
sbb
and
in
scas
dec
add
cltd
jae
lods
xchg
sub
lods
in
ljmp
lock
push
rcl
and
push
pop
jne
pushl
loopne
incl
popf
mov
ss
jne
xchg
dec
jge
shrl
daa
in
js
idivb
xlat
push
mov
inc
jge
sbb
jp
inc
sub
jne
les
xchg
dec
mov
ljmp
jae
outsl
mov
dec
push
and
mov
outsl
int3
mov
inc
ss
insl
sub
test
xchg
push
jp,pt
xchg
jnp
bound
decb
pop
loop
pop
push
out
imul
fbstp
pop
divl
cld
push
mov
jno
popf
mov
add
lcall
cltd
add
lahf
pop
jnp
push
orb
push
cmp
pushl
mov
mov
mov
pushf
or
lock
out
insl
in
sti
pop
in
adc
outsl
test
pop
sarl
lret
outsb
xchg
mov
xchg
adcb
movsl
aam
nop
les
push
mov
pop
lods
sahf
test
pop
aas
pop
pop
dec
jnp
repz
rcrl
mov
jle
dec
and
mov
sbb
test
pop
sbb
shrl
xorl
mov
and
mov
inc
sbb
rcll
cwtl
pop
adc
es
pushf
jp
ja
dec
sub
es
inc
dec
int3
imul
fs
mov
pop
mov
ret
xor
jl
shll
xchg
mov
cmp
mov
mov
sarb
jae
jbe
sub
mov
je
addb
dec
xlat
jl
movd
aad
popa
sub
jmp
dec
and
lcall
jmp
push
inc
push
xor
flds
fsubl
cmp
outsl
into
inc
adc
es
inc
pop
mov
bound
shrb
in
cli
stos
fwait
lret
ljmp
sbb
dec
negb
loopne
jae
fwait
rorb
jmp
mov
lock
adc
push
in
jo
dec
dec
mov
xchg
cmc
lock
fdivp
je
cs
add
mov
fmull
imul
sub
jmp
xlat
cwtl
pop
dec
out
mov
rolb
inc
daa
dec
and
jle
std
test
sarl
sbb
movsl
and
and
push
mov
fcoms
aaa
jbe
pop
dec
insb
jg
jbe
out
movsl
xchg
push
fldt
pop
dec
das
les
cmpsb
and
ljmp
js
jle
push
mov
xchg
mov
xchg
dec
cmp
and
mov
sub
mov
js
bound
mov
mov
movsb
add
sub
xchg
pop
fdivs
repz
add
jo
out
fistpl
cmp
add
add
jno
mov
xlat
cld
xchg
xor
cmp
fnstsw
inc
inc
jl
xor
das
jns
mov
loope
dec
std
jno
lcall
inc
aam
dec
and
in
test
sar
mov
jbe
ds
and
jl
dec
xor
imul
jp
add
fiadds
xor
mov
xchg
scas
add
aaa
jge,pt
inc
je
mov
mov
int3
lahf
dec
push
gs
jmp
cmpsb
and
jp
into
cmp
shl
inc
lret
and
fs
xchg
adc
cli
sub
jmp
xor
imul
lret
add
nop
loop
data16
test
in
inc
and
js
fdivrs
fcomps
int3
out
mov
push
mov
mov
test
inc
adc
scas
ljmp
movsb
dec
xchg
insl
pop
insb
lds
imul
pop
and
mov
xchg
enter
sbb
imul
xchg
sbb
sbb
inc
dec
sub
outsl
loopne
pop
lret
dec
daa
push
inc
stos
sbb
test
xor
daa
test
or
in
dec
jg
rcrl
and
nop
dec
xor
pop
in
das
inc
jp
dec
cmp
popf
xlat
mov
fsubl
movsl
aad
ds
shrl
out
sub
movsl
and
and
rorl
cltd
call
mov
lahf
lds
in
adc
push
imul
mov
jno
loope
aaa
jecxz
mov
adc
les
int
rcrb
lahf
in
mov
xlat
int
xchg
and
cmpsl
lea
std
or
fisttpl
inc
ds
push
sbbl
xchg
jg
ss
adc
mov
incl
ret
jo
pop
imul
add
fadds
mov
adc
scas
dec
imul
xchg
lods
jnp
xor
cmp
movnti
add
popa
sbb
dec
hlt
pop
mov
stos
or
cltd
into
xor
ja
jnp
or
push
xchg
jl
push
mov
xchg
clc
imul
mov
call
mov
mov
push
js
or
jnp
cmp
add
add
dec
sbb
mov
aam
push
andb
mov
mov
outsb
rcr
push
pop
xor
leave
jmp
dec
sbb
stos
shr
inc
mov
inc
or
rcrb
xchg
adc
movsl
fucomp
iret
iret
jo
mov
ja
fmul
jns
insl
sbb
xchg
mov
and
enter
jb
sub
test
dec
in
int
lock
mov
ret
xchg
push
pusha
mov
jbe
push
add
loope
or
xor
in
xor
push
jecxz
sbb
out
outsb
pop
es
cmp
cmc
jmp
jb
mov
hlt
jbe
test
cwtl
ja
cmp
fstl
int3
add
push
cmp
jo
mov
adc
rcrl
xor
sbb
or
sbb
jecxz
xchg
lahf
inc
mov
icebp
or
lea
test
out
xchg
mov
push
fs
pop
mov
mov
mov
pop
add
lock
mov
or
daa
mov
sbb
ret
pusha
or
arpl
scas
imul
mov
das
filds
enter
inc
inc
mov
insb
inc
push
aaa
fistpl
xor
mov
mov
jg
call
xor
dec
add
mov
push
dec
or
jae
in
rcll
push
xor
pop
sub
cmp
mov
mov
mov
cmpsl
out
mov
out
loope
lahf
mov
push
fcmove
stos
gs
icebp
adc
aad
jne
xchg
imul
add
call
jb
out
adc
aam
push
or
sub
ja
fstpt
test
repz
aaa
mov
mov
jno
adc
pusha
ljmp
sub
dec
loop
ds
lea
mov
push
inc
push
gs
sub
xchg
scas
repz
xor
adc
xchg
pop
cmp
push
jbe
addr16
xor
cmc
in
outsl
outsb
lea
leave
jb
sbb
and
cmpsl
pop
dec
jb
stos
mov
cmc
pop
xchg
mov
cmc
ljmp
adc
ret
add
xor
add
lds
xor
jmp
icebp
jns
cltd
xlat
or
and
lods
js
xchg
sub
mov
test
mov
lahf
dec
and
cmp
ljmp
xchg
dec
imul
mov
xchg
and
xor
xor
sbb
cmp
mov
int
mov
ljmp
mov
xchg
sarb
popa
push
jae
xor
lret
sbb
xor
mov
jo
outsb
adc
add
or
mov
fists
cmp
add
gs
xchg
addr16
int3
fsubl
push
xchg
test
jno
leave
mov
jbe
sahf
push
jg
xor
cmpsl
mov
outsb
imul
mov
jb
pop
int
inc
mov
mov
jo
add
pop
or
mov
lods
mov
call
or
xchg
adc
cmp
int
popa
jbe
sbb
testl
add
vcvtps2dq
dec
mov
scas
cli
bound
in
lea
cld
mov
data16
out
arpl
std
in
data16
imul
incb
xchg
stos
mov
dec
lahf
stc
fstpl
jne
in
lds
sbb
cmp
dec
dec
sub
lcall
jge
xor
and
and
dec
mov
in
imul
ss
fwait
mov
push
in
push
into
fistpl
arpl
call
jne
mov
arpl
push
gs
in
test
daa
mov
sahf
mov
fidivl
xchg
xor
mov
pushf
daa
into
cs
test
mov
or
sub
into
xchg
into
push
pop
add
sub
fldt
sub
jl
jmp
cwtl
xchg
in
mov
popf
xor
nop
pop
and
jmp
xor
dec
test
pop
jns
push
push
inc
jae
pop
pop
cmp
xchg
out
sbb
mov
xlat
sub
or
out
pop
in
notb
cld
sbb
mov
mov
dec
aad
mov
mov
ficompl
xor
shl
cwtl
lret
or
or
or
arpl
out
lahf
sbb
dec
inc
sbb
mov
mov
sbb
inc
repnz
leave
push
int3
xchg
roll
rcrl
inc
add
icebp
hlt
xchg
mov
xchg
mov
pusha
inc
test
scas
mov
ret
aad
xchg
mov
pop
ljmp
insl
stc
adc
int
clc
and
dec
mov
sub
mov
mov
add
std
lods
jns
int
dec
repz
fdivrl
pop
or
inc
lods
and
xchg
jb
cwtl
sbb
hlt
mov
sbb
sbbl
je
into
scas
cmp
mov
dec
leave
jno
mov
fsubr
jge
dec
mov
xchg
js
cwtl
fwait
jmp
or
cmp
xor
sub
adc
je
jmp
jo
jl
test
sbb
iret
rolb
sbb
xchg
cli
pop
aad
movsl
push
into
xchg
inc
jo
ret
mov
cmpsb
lcall
dec
loope
jb
xor
mov
sub
ja
movsb
adc
add
pop
dec
dec
cwtl
push
mov
xor
cli
sub
adc
add
xchg
dec
leave
inc
dec
std
aam
or
cmpsl
xchg
fdivrl
scas
lea
mov
add
pop
or
sub
push
aad
mov
lea
subl
fistps
push
shlb
fidivl
xchg
shl
xchg
mov
sub
sbb
cmp
popf
inc
pop
mov
push
adc
push
sub
xor
push
movsb
and
imul
cmp
pop
inc
push
test
sub
ljmp
dec
pusha
in
cltd
fs
clc
bound
dec
mov
adc
imul
in
je
xchg
lret
cld
bound
in
cmp
adc
inc
lock
imul
mov
call
mov
xor
add
push
mov
dec
mov
and
mov
notl
add
lods
xchg
push
mov
xchg
pop
dec
inc
sbb
ja
push
jl
mov
push
push
sbb
insl
pop
dec
sar
dec
pop
loope
mov
test
mov
icebp
lods
mov
mov
and
dec
dec
fwait
pop
mov
aaa
clc
mov
jmp
xchg
xchg
mov
mov
inc
adc
and
fwait
das
imul
outsl
shll
add
xchg
add
lods
in
iret
movsl
or
outsb
imul
stos
popa
and
rcll
nop
loope
mov
mov
out
test
jns
shrb
dec
pop
sti
sbb
lds
ret
xor
stc
inc
dec
and
imul
add
pop
mov
pop
push
mov
xchg
int
sbbl
adc
in
ja
mov
daa
out
pop
loope
scas
dec
push
lret
fistpl
lret
xchg
mov
mov
push
cwtl
aad
jmp
int
pushf
mov
aam
sub
add
cmpsl
mov
lds
inc
fprem1
push
shr
sahf
ds
fmuls
jb
pop
adc
fldt
out
sub
cmp
js
outsb
sti
add
aad
flds
add
xchg
sbb
adc
pop
inc
xor
xchg
push
mov
pop
inc
mov
xor
pop
push
ds
js
xchg
jle
cld
mov
movl
xchg
in
aas
addr16
lds
jae
pusha
pop
jg
lods
jge
mov
add
int
mov
xor
aam
sbb
nop
lea
mov
popf
dec
sub
mov
mov
pop
iret
fisttpl
jno
rcr
lods
imul
daa
sub
je
cvttps2pi
xchg
daa
jno
int
scas
lock
or
push
add
sbb
pop
xchg
mov
jge
mov
jae
sbb
data16
fs
push
add
insl
mov
das
jp
cli
xchg
mov
sbb
inc
data16
push
pop
mov
push
xchg
sub
cmp
mov
or
adc
push
push
fs
jg
cmp
mov
xor
das
xor
test
sti
mov
mov
nop
mov
inc
push
es
mov
es
push
cltd
or
mov
jo
adc
push
mov
das
or
xchg
xchg
test
cmp
loope
cmp
fldt
mov
fs
mov
lds
nop
xchg
rcrl
push
add
mov
add
rcrb
xchg
mov
cmpsl
out
mov
addr16
sbb
jg
add
out
ret
ss
cmp
out
push
jmp
or
call
pop
roll
loope
or
xchg
push
push
lret
cmpsb
or
add
in
cmp
pop
shrb
pop
sub
sub
dec
pop
fildll
fnstenv
in
aam
test
inc
daa
outsb
mov
add
es
add
xchg
test
lahf
leave
cli
repz
loop
rcrb
ljmp
push
jg
gs
clc
xchg
outsl
mul
mov
loope
pop
adc
popa
in
stc
inc
fwait
orb
mov
in
fs
mov
or
out
mov
sarb
ljmp
loop
fmulp
jl
mov
iret
cmp
cmc
pop
test
and
out
jge
sub
cwtl
rcl
pusha
cltd
mov
js
fwait
xchg
sub
mov
adc
popa
xor
pop
push
outsl
inc
fidivs
push
mov
jno
dec
lahf
pop
xchg
sbb
cmp
stc
sbb
adc
adc
jp
add
jle
les
jg
jne
loop
push
bound
les
jp
imul
xchg
jmp
punpckhdq
mov
push
pop
jecxz
fidivl
add
jb
mov
push
ss
push
out
xchg
pusha
cwtl
cmp
jp
mov
jge
dec
sbb
dec
sbb
imul
repnz
or
add
sub
push
daa
hlt
jo
inc
dec
sbb
mov
pop
adc
inc
ja
mov
testl
cmp
and
pop
loop
sarb
mov
pop
pop
pop
dec
loop
pop
xor
xchg
push
mov
dec
pop
fstp
fs
adc
fdivrl
aad
nop
lret
xlat
push
pop
cmp
inc
dec
add
pop
mov
das
mov
inc
imul
stos
mov
and
sub
hlt
jmp
into
mov
sub
xor
jnp
xchg
and
inc
fsubrs
mov
fidivs
mov
ss
adc
push
fcompl
adc
sbb
cmp
pop
sub
push
les
nop
movsl
sbb
cwtl
push
pusha
out
lea
push
iret
pop
add
movsl
pop
cmp
aam
cmp
pop
loope
pop
pusha
pop
or
cmp
repnz
pop
iret
mov
addr16
or
negl
cmp
push
adc
mov
mov
xchg
cld
and
mov
mov
iret
xchg
stos
xchg
fmul
push
shl
popa
into
adc
push
fcompl
movsl
rcll
mov
leave
andb
or
sub
jp
nop
aas
inc
xor
xchg
inc
out
mov
ja
outsl
outsb
icebp
and
cmp
das
or
jge
jns
sti
les
std
cmpsb
sbb
push
fldenv
mov
fadd
cmp
jge
xor
cmp
sbb
sbb
mov
or
leave
pop
testb
int
pop
outsb
and
or
xor
dec
or
jae
in
xor
or
push
and
fdiv
fldl
les
inc
inc
shrb
or
in
inc
and
loopne
cmp
pushf
lcall
stc
outsb
push
add
mov
mov
pop
ret
add
cs
xchg
stc
cmc
xor
fucom
mov
add
lret
adc
data16
adc
dec
adc
jge
mov
and
dec
cli
inc
cmp
insb
test
bound
in
adc
sub
add
bound
lcall
mov
insb
repnz
adc
ss
push
aaa
pop
cmp
adc
push
fs
stos
jmp
jno
cmp
mov
mov
loope
cmp
lods
mov
jl
lret
test
mov
insl
push
add
repz
repnz
push
sbb
inc
lods
call
icebp
mov
mov
imul
mov
cli
cmp
mov
nop
dec
mov
cmp
fcmovb
pop
xor
arpl
testb
imul
cmp
scas
daa
out
loop
push
pushf
pop
adc
lods
popa
inc
test
in
sahf
cmc
push
outsb
cmp
push
xchg
leave
pop
lods
cmp
pushf
addb
adc
sbb
fiaddl
and
push
loope
pusha
jmp
mov
ljmp
jg
and
jo
mov
loope
mov
adc
icebp
or
jns
or
insl
add
jae
sbb
mov
repz
idivl
clc
or
fucomi
inc
pushf
lock
out
push
push
adc
jle
ja
pop
lret
dec
ljmp
loop
sbb
cmp
ja
ret
je
addr16
jbe
pop
cmpb
mov
nop
and
in
add
test
movsb
adc
xchg
rol
aaa
add
adc
cltd
pop
inc
mov
in
mov
hlt
pop
jbe
inc
mov
sbb
mov
stc
and
adc
jb
test
dec
xchg
leave
pop
lods
out
ret
xor
fldl
xor
and
nop
rcll
push
inc
rol
xchg
cmpb
xor
xchg
add
js
fwait
shl
out
xor
pop
dec
inc
jne
cwtl
cmp
push
idivb
jnp
add
fmull
sub
clc
fildl
or
sbb
jbe
xchg
insl
mov
xchg
push
imull
push
mov
adc
rorl
xor
lods
pushf
sbb
sub
xor
mov
addr16
push
int3
std
adc
and
aas
add
stc
mov
movsl
lret
test
sub
stc
mov
pushf
sbb
lcall
and
cmp
in
or
and
adc
cltd
mov
mov
cmc
loopne
add
mov
fnstcw
xor
add
call
rorl
mov
or
clc
jb
ss
repnz
push
scas
or
repnz
out
aaa
mov
aaa
adc
jecxz
lds
sub
xchg
lcall
mov
xchg
adc
xlat
pop
insb
xor
adc
mov
adc
loope
pop
lret
inc
pop
xchg
mov
loopne
es
lds
in
in
loope
push
jecxz
sbb
add
hlt
hlt
lds
jne
or
pop
jp,pt
std
push
adc
dec
ret
mov
pop
xor
loope
outsb
and
aad
js
pop
cmp
lret
sbb
int
sarb
lret
or
and
push
leave
sbb
jae
push
rcll
inc
daa
mov
sub
xor
js
stos
jge
rcll
mov
xchg
loope
sti
jb
in
mov
in
stos
mov
ss
mov
adc
shll
loopne
ficoms
add
push
xchg
shll
movsl
jecxz
sti
inc
insb
mov
pop
scas
dec
stc
pop
mov
ror
jae
cmpsl
loopne
mov
sahf
pop
cmp
cmp
add
adc
lods
inc
xchg
je
pop
aaa
rcrl
aam
imul
gs
pop
xchg
pushf
mov
and
lods
test
mov
sbb
out
andb
inc
add
jp
loope
ret
xor
adc
jnp
adc
push
ds
pop
loope
ret
xor
sub
sbb
sub
pop
xor
nop
ss
sub
ljmp
jg
mov
push
push
orl
adc
xchg
and
or
sahf
or
add
dec
xchg
aas
out
or
clc
pop
push
add
into
popa
push
lret
into
outsl
mov
popa
fwait
rolb
push
loopne
pop
cld
popa
jo
push
sub
jecxz
sbbb
fcomi
stos
dec
inc
aaa
bound
or
sarb
sbb
pop
sbb
enter
std
jne
adc
mov
adc
or
cmp
imul
sub
sub
add
inc
push
in
rcll
adc
bound
inc
lock
adc
pop
mov
jne
xchg
sbb
out
push
sti
cmpsb
je
xor
cmp
adc
push
test
dec
push
push
xchg
pusha
out
xor
ret
cmp
and
loopne
mov
fildl
push
mov
stos
sub
sub
cmp
mov
mov
xor
out
adc
data16
adc
jp
pusha
cld
mov
je
add
jns
ss
stos
pop
cli
dec
mov
and
lret
cs
dec
mov
out
adc
jg
add
mov
and
lock
and
int
xchg
leave
xchg
push
or
cmpsb
dec
aam
jns
sti
pusha
xchg
pop
push
nop
or
mov
jmp
push
lret
out
cmpsb
jno
mov
repz
or
cmp
aas
add
adcl
and
imul
call
in
shll
clc
xchg
loope
out
xchg
in
ja
sarb
inc
loope
sub
dec
les
mov
push
out
aad
add
mov
jae
cmpsb
sbb
idiv
add
pop
mov
jl
insl
or
cs
xchg
popa
movsl
fildll
imul
dec
inc
or
arpl
sbb
dec
xor
mov
rcrb
lods
add
std
mov
std
imul
test
mov
xlat
adc
adc
aad
stc
daa
pop
subl
mov
xor
test
sbb
sbb
sbb
push
lock
popf
sub
jmp
inc
mov
xchg
test
out
xor
out
mov
dec
lret
push
cmp
mov
mov
inc
stos
and
and
mov
xor
mov
test
pop
push
xchg
or
dec
imul
test
and
fsubr
xor
fsubrs
movsb
inc
jne
or
jns
mov
cli
mov
icebp
shr
sbb
aaa
scas
call
jae
leave
pop
inc
jns
and
and
sbb
jns
cld
adc
sub
xchg
mov
dec
orb
inc
xchg
jb
jl
in
lods
hlt
or
pusha
shlb
mov
lea
dec
hlt
mov
adc
push
push
mov
pop
mov
inc
movsl
add
arpl
incl
xor
xor
xchg
xor
fistps
ret
test
icebp
or
pop
xor
mov
arpl
icebp
stc
xor
sbb
dec
mov
cwtl
adc
enter
cmpsl
lds
pushl
mov
add
sub
insb
fistl
cmp
jno
daa
pop
or
jnp
jmp
mov
pop
sahf
mov
pop
mov
in
hlt
mov
lds
mov
jo
sbbb
nop
push
roll
adc
outsb
push
adc
jb
add
cmp
es
inc
int
xor
fnstsw
push
aaa
gs
mov
sbb
sbb
and
or
inc
aas
xor
dec
stc
loop
repnz
or
mov
sbb
xlat
mov
inc
pop
dec
sub
jmp
sub
cmpsl
cmpsb
cmp
scas
dec
pop
add
stos
mov
je
mov
vpshufd
stos
iret
mov
outsb
int
movsb
negl
lret
mov
fldt
fs
out
lret
xlat
lahf
insl
rolb
movsl
cmpsb
cmp
mov
rorl
call
add
xor
lea
arpl
fnstsw
xchg
cmp
repz
or
inc
push
mov
sahf
pop
imul
mov
popa
cs
clc
push
sbb
dec
inc
out
cltd
xchg
or
mov
test
test
cmp
push
leave
sub
jae
pushf
or
adc
fwait
lods
dec
or
mov
jmp
popa
jmp
mov
insl
pop
adc
push
testb
popf
imul
push
xor
xchg
cmpsl
adc
mov
xor
sub
mov
cs
dec
and
out
sbb
and
lcall
pop
fsubrl
pop
das
lahf
dec
je
add
fistl
sub
cld
inc
push
out
enter
aas
jp
dec
out
mov
dec
sbb
aas
out
stos
mov
stos
mov
addr16
nop
dec
cmpsb
cmp
stos
call
or
pop
shll
adc
int
ret
jno
mov
jno
ss
notl
adc
in
fwait
syscall
sbb
fistl
daa
xchg
mov
jnp
sbb
mov
xchg
xchg
cmp
clc
pop
js
dec
into
aas
pop
loopne
jnp
call
push
pop
stc
adc
or
in
lds
push
popa
inc
mov
imul
push
adc
mov
cmpsl
cmp
and
call
scas
xchg
inc
pop
mov
sub
push
inc
xor
addl
sti
ljmp
dec
sbb
ret
mov
iret
nop
sub
jb
mov
dec
cld
cmp
jecxz
push
test
ljmp
and
mov
mov
ss
fisttps
int3
dec
inc
xchg
imul
xor
jno
dec
es
cs
jne
jl
and
xor
xchg
mov
jns
jb
mov
or
add
cmp
mov
dec
leave
rep
mov
ss
fxch
lret
dec
int
sbb
cmp
aam
fmull
loop
nop
cmpsl
sbb
icebp
xor
mov
jb
and
imul
daa
and
dec
mov
adc
idivb
cmp
es
daa
add
std
rorl
mov
lcall
add
mov
shlb
mov
add
xor
cli
popf
sbb
sub
push
mov
lock
stos
sub
testl
cmp
ljmp
imul
cs
in
mov
sahf
dec
mov
shlb
in
sbb
cmp
xor
fcmovne
mov
xchg
add
pop
push
or
fsubr
adc
inc
xlat
xor
push
add
cmpsb
lret
aaa
xchg
jmp
xor
pop
test
fdivs
pop
sarl
dec
inc
push
movsb
mov
test
adc
test
jb
or
test
push
pop
stos
out
adc
mov
ret
xlat
or
ljmp
add
sub
push
nop
xorl
stc
clc
jno
cli
add
int3
clc
gs
mov
push
pushf
fwait
cwtl
push
mov
push
fdivrl
xorl
sub
roll
xlat
out
add
push
ror
cs
jg
xor
imul
lret
jo
pop
rcll
arpl
or
cwtl
xchg
repz
ss
sub
jmp
mov
fistpl
nop
jl
mov
sahf
mov
xorl
lahf
cltd
arpl
or
and
dec
fidivrl
std
fldl
sub
inc
sub
sub
pop
test
jl
addr16
clc
xlat
xor
out
loopne
ss
and
mov
stos
arpl
jle
jecxz
mov
inc
jne
hlt
push
jmp
rcl
cmpsb
mov
jmp
or
inc
mov
mov
lods
jo
aaa
add
stos
cltd
add
lods
push
cmp
pop
popf
into
pop
inc
out
mov
arpl
push
das
jmp
mov
add
loopne
shrb
cmp
movsl
dec
fdivp
les
mov
sub
in
lcall
stos
sti
movzbl
imul
rcl
and
pop
and
add
daa
jae
mov
jnp
ret
or
decl
repz
seto
js
int3
pop
push
rorl
test
stc
mov
lret
and
test
jo
loop
pop
inc
scas
sbb
in
insb
mov
add
sbb
dec
imul
xchg
jp
xor
jmp
lods
jb
mov
mov
adc
movsl
je
pop
int
mov
leave
scas
cmp
dec
ss
lcall
xorb
sti
aad
adcb
sbb
add
daa
fs
dec
test
ljmp
mov
pop
cmp
jb
xchg
std
sub
test
imul
mov
and
lock
inc
cmp
xchg
pusha
add
dec
jp
pop
sub
lahf
dec
out
sbb
dec
jnp
gs
pushf
sti
fs
add
sub
jae
inc
push
imul
test
test
test
das
aam
lock
xchg
mov
sbb
mov
push
cmp
xchg
lahf
retw
cmpsb
out
xchg
push
ret
scas
fildll
arpl
or
xlat
andb
mov
imul
cltd
scas
pop
test
xor
xor
push
mov
push
mov
enter
jecxz
push
jge
pop
xor
lea
pusha
jg,pt
in
sub
dec
mov
mov
xchg
rcrb
dec
ljmp
adc
sbb
adc
cmp
adc
sbbb
or
jbe
jnp
nop
cmpsb
cmp
lods
and
xor
fnsave
sub
xchg
adc
xor
les
cmp
shll
stos
sub
imul
sbb
dec
frstor
mov
mov
xchg
adc
adc
sahf
movsl
mov
fdivrs
sbb
pop
mov
lret
dec
sub
or
pop
jg
mov
cmpsl
loopne
adc
jp
fucomp
scas
or
je
pop
mov
mov
into
lcall
pusha
mov
popf
sub
lds
call
test
dec
inc
mov
sub
xor
or
mov
add
dec
push
adc
out
jb
decl
ds
or
sbb
lods
hlt
push
xor
out
push
pop
int3
outsl
negb
js
pop
adc
or
dec
or
jge
adc
gs
xchg
inc
pop
loope
in
pusha
inc
mov
sbbl
xchg
jbe
fstp
int
mov
jne
jnp
jne
add
and
js
jb
inc
mov
xchg
clc
add
pop
in
scas
adc
mov
popf
cmpsb
shlb
ljmp
jl
mov
pop
in
add
call
dec
dec
rorb
js
xchg
inc
jno
sbb
mov
into
sbb
outsl
xor
jle
and
pop
sbb
adc
sar
push
mov
push
pop
and
jne
xchg
dec
mov
movsb
and
aam
adc
test
or
dec
pop
sub
jnp
mov
inc
inc
repnz
mov
or
xor
cmpsl
push
bnd
pop
leave
push
fcmovu
jno
nop
push
int3
in
data16
cmp
pop
fisttpl
arpl
scas
lahf
sarb
cltd
and
hlt
mov
dec
pop
sub
xlat
mov
push
out
xchg
cmp
inc
addr16
pop
dec
cmpsl
push
mov
adc
test
jae
pusha
mov
push
sbb
pusha
scas
xchg
or
cwtl
shll
test
bound
jecxz
inc
sbb
arpl
aad
or
aam
stos
sub
lods
fistps
cmp
cmp
stos
push
sbb
fdivrs
pushf
subl
xor
sbb
stc
push
fldl
lahf
dec
lcall
into
sub
jge
insl
jp
dec
aas
add
subb
cmp
test
sbb
jecxz
cmpsl
sbb
jns
loope
mov
jnp
cld
dec
sbb
pop
adc
test
dec
into
testb
or
sbb
test
stos
xor
sub
sub
or
sub
scas
push
xchg
imul
movsl
sahf
pop
rorb
mov
lret
sbb
stos
jl
in
icebp
arpl
push
and
cli
adc
jecxz
push
dec
xor
stos
rclb
lds
sbb
lds
mov
testb
andb
fnstenv
push
xor
stos
scas
outsl
repz
lods
sbb
movsb
and
or
mov
mov
cld
mov
adc
into
add
sti
imulb
fdivp
test
xchg
inc
fistpl
clc
cmpsl
dec
push
out
sbb
xlat
cmp
pushf
add
lods
aas
mov
dec
mov
lahf
aad
jb
push
in
mov
mov
mov
xchg
xlat
pop
ficoml
push
loop
ljmp
adc
iret
pop
ljmp
in
inc
xchg
xor
mul
jecxz
jnp
xchg
cmp
lods
jno
aaa
jle
adc
cwtl
lods
iret
andl
dec
inc
in
jg
mov
ret
sbbl
pushf
std
push
lret
arpl
sbb
mov
jnp
push
xor
sbb
dec
add
xor
inc
and
adc
mov
mov
lahf
repz
sti
push
push
add
int3
or
xchg
jecxz
adc
mov
xchg
das
insl
mov
push
add
out
fwait
outsb
and
jbe
ss
dec
adc
mov
pop
arpl
lahf
stos
test
mov
mov
enter
shlb
repnz
imul
inc
addr16
and
in
bound
inc
inc
daa
mov
test
xchg
push
jl
jbe
jecxz
loopne
sti
fstp
lret
leave
mov
aas
mov
mov
subb
push
add
dec
fstpt
xorb
xchg
mov
pop
inc
pusha
add
cmc
test
cmp
mov
lea
les
rcr
fnsave
ficoml
xchg
mov
pop
or
in
mov
and
repnz
cli
jecxz
inc
jne
xchg
push
out
in
mov
and
adc
mov
lret
pushf
nop
sti
in
mov
lret
popa
jo
cmc
mov
push
sbb
shlb
cs
dec
std
sbb
adc
popf
loop
call
outsl
loopne
jp
dec
iret
cmc
xchg
mov
je
mov
push
setle
and
cmp
mov
aam
or
fs
sub
ret
mov
insl
sub
cwtl
es
outsl
adc
test
adc
push
movsl
lcall
mov
sahf
mov
scas
inc
cmp
mov
scas
pop
and
pop
jecxz
cmpsl
imul
idivl
mov
outsl
arpl
sub
loopne
xchg
mov
pop
popf
pop
xchg
jmp
das
cmc
es
push
pop
repnz
shrl
push
xor
mov
nop
mov
std
add
mov
sahf
fbstp
push
icebp
mov
outsb
shrb
sub
repnz
mov
aaa
sub
inc
dec
stc
mov
pop
jge
xchg
std
divl
mov
mov
cmc
dec
aas
or
pop
adc
jo
imul
psubusw
lahf
aad
shrb
dec
add
scas
cmc
mov
xchg
pop
subb
mov
lret
flds
fistpll
stos
pusha
in
adc
pop
popf
xchg
sub
test
leave
xor
or
mov
and
stos
sbb
nop
das
mov
cmp
push
rcrb
sbb
mov
fdivp
or
jmp
mov
insb
mov
movsb
stos
xor
or
mov
imulb
cs
into
xor
adc
mov
inc
sti
xor
and
push
sbb
je
rcll
xor
xor
sbb
xor
sbb
movsl
les
sub
add
mov
repnz
out
cltd
iret
xor
or
and
dec
les
data16
mov
cmc
icebp
mov
jge
outsl
or
popa
mov
or
or
xor
xchg
sbb
ret
cld
add
inc
dec
popf
scas
pop
push
and
or
sub
mov
jae
stos
in
imul
imul
jnp
mov
mov
xchg
clc
mov
out
sbb
push
fidivs
sbb
nop
xchg
jp
push
mov
int3
fsubp
sub
dec
xchg
arpl
lea
comiss
out
inc
cmp
mov
aad
in
lock
inc
bound
cmp
in
repz
mov
push
adc
xchg
jnp
lret
jbe
in
mov
sbb
adc
dec
nop
ja
roll
xchg
popf
mov
or
aad
movb
test
xlat
dec
mov
inc
aas
sahf
jns
in
push
pop
mov
sbb
cmp
mov
sbb
pop
mov
imul
and
and
or
outsb
inc
loope
js
pusha
inc
dec
outsb
in
adc
inc
imul
cwtl
push
in
cmpsl
mov
lret
negl
scas
push
mov
fmulp
mov
repz
mov
push
push
popa
xor
mov
insl
push
jp
ret
fistl
jno
icebp
outsl
sbb
aaa
outsl
out
out
cmc
sub
xor
xor
jge
pop
pop
notl
out
inc
lds
mov
mov
push
pop
add
filds
lcall
inc
lcall
cmp
bound
cs
adc
sbb
sub
dec
ljmp
shrb
push
add
jecxz
mov
iret
xchg
pop
es
pop
adc
xchg
pop
inc
repz
mov
lods
adc
lds
cmpsb
movsl
out
and
stc
sub
mov
pop
jp
or
mov
shl
stos
imul
fdivrp
jo
xchg
iret
in
ficoml
add
or
sqrtps
sti
in
mov
xor
hlt
scas
or
int
pop
cs
scas
lods
pusha
addr16
cld
movb
jae
test
push
inc
pushf
pusha
pop
insb
add
dec
stos
sbb
push
mov
mov
clc
xor
mov
insl
pop
cmpsb
mov
rolb
rcr
inc
in
dec
add
cli
lods
out
aad
popa
test
les
rcrl
arpl
jns
gs
orl
pop
fneni(8087
sbb
int
shlb
sub
shrb
mov
out
sub
ret
out
repnz
incl
and
lock
xchg
adc
roll
cmp
incb
sub
inc
push
and
roll
stos
stos
pop
cmp
dec
notb
pusha
movsb
xchg
dec
mov
cmpsb
or
xor
sbb
mov
and
sbb
adc
push
push
mov
enter
mov
inc
jp
jns
fisttpll
test
scas
jl
mov
xor
mov
sub
sahf
xchg
inc
xchg
cmpsl
fmul
cmpsb
xor
repz
cmp
jno
mov
xchg
shll
push
cmp
ret
mov
ljmp
dec
inc
xchg
jb
mov
inc
and
es
aad
inc
cmpsl
out
insl
xor
jl
test
orb
xor
cmp
pusha
mov
outsb
mov
jns
pop
jecxz,pt
mov
lock
js
mov
iret
fwait
cmpsl
test
les
and
cmp
mov
popa
jne
mov
andb
sub
or
mov
ja
mov
dec
jne
fldl
rcr
jb
adc
roll
test
jmp
out
inc
inc
jg
jge
lods
aaa
mov
ss
mov
sbb
adc
fsubrl
mov
and
xlat
sub
adc
scas
daa
mov
mov
mov
mov
dec
in
xchg
fyl2xp1
shrb
adc
fadds
jmp
mov
xor
mov
or
sbb
std
push
std
xchg
movsl
mov
pop
popa
notb
jae
add
xchg
mov
das
out
dec
or
or
cwtl
mov
inc
daa
cmp
stc
add
outsb
fsub
dec
jns
iret
xabort
cmpsb
mov
jnp
cltd
cmpsb
mov
or
jb
roll
int
stos
clc
sbb
sbb
inc
icebp
lea
stos
cltd
sbb
pushf
jp
in
in
outsb
mov
push
mov
outsb
inc
into
cs
lret
xchg
popf
mov
xchg
adc
fistpll
push
addr16
xchg
mov
repz
sub
sub
mov
int
xlat
adc
xlat
jo
or
sahf
fcoms
sub
adc
jge
adc
mov
decb
add
jmp
sti
inc
shlb
sbb
xchg
mov
push
xchg
int
jo
push
insb
insl
pop
push
xchg
pop
out
and
adc
push
jb
insb
or
in
and
add
roll
pop
or
mov
add
or
pop
pop
in
adc
cmp
push
ret
mov
push
sbb
mov
mov
jge
cltd
adc
push
mov
inc
clc
gs
mov
shll
add
mov
or
aas
inc
adc
popf
stos
or
hlt
xor
and
and
pop
les
cltd
ljmp
into
outsl
mov
push
mov
ja
outsl
pop
imul
xchg
sub
sbbl
cld
aam
pop
shr
add
push
ljmp
fs
pushf
cmc
mov
lods
fsubs
mov
cmp
stc
ja
push
dec
add
ljmp
and
cmp
aam
cwtl
loopne
aam
mov
and
movsb
sar
leave
decb
lcall
loopne
dec
std
les
or
dec
je
shll
jmp
aad
jp
lods
xchg
clc
add
cmp
movsbl
adc
or
dec
call
adc
push
mov
inc
out
enter
jne
pop
xor
push
xorl
dec
jge
outsl
shll
mov
fstpl
ljmp
add
sar
outsl
mov
nop
sub
xor
add
push
in
inc
inc
mull
daa
or
adc
fmuls
dec
inc
or
stc
js
push
jns
sub
outsl
insl
add
sub
scas
xchg
shl
push
sbb
aas
sub
cmp
inc
or
mov
adc
hlt
sbb
pop
popa
adc
rcll
xchg
cs
ret
inc
shrb
ljmp
add
mov
and
adc
adc
das
notb
cmpsb
add
pop
test
cmpsl
or
lods
push
xchg
clc
ret
maxps
or
sahf
fnstcw
call
dec
and
or
hlt
inc
dec
xchg
shl
out
cmp
add
addr16
cmpsl
dec
push
sub
pop
cltd
adc
jno
push
sub
mov
push
iret
icebp
inc
jns
test
cmpl
movsb
push
rep
popl
movsb
bound
rcl
rcll
pop
jmp
mov
sub
xchg
lea
int3
fwait
jle
not
into
and
aas
loopne
jne
mov
push
repz
addr16
mov
cmpsl
jge
les
fists
pop
push
lret
push
rorl
push
add
rorb
pop
pop
push
stos
mov
jae
adc
loop
cmp
mov
loopne
xor
jmp
cmp
mov
sti
test
mov
data16
out
icebp
push
inc
xchg
mov
dec
inc
or
inc
or
rcrl
jge
ljmp
into
shr
div
mov
mov
inc
lea
sub
xchg
mov
mov
xor
mov
xor
movsl
adc
push
jmp
int
lods
arpl
xchg
sub
repnz
in
and
mov
mov
scas
orl
sub
push
xchg
aam
imul
leave
in
imul
mov
xchg
cmp
imul
mov
and
mull
inc
or
and
pop
mov
ljmp
loopne
test
and
fistl
inc
iret
test
xchg
sbb
jae
loopne
sbb
test
dec
xchg
mov
jp
adc
jnp
push
jl
lret
push
or
mov
sub
aad
cld
xorb
movsb
jmp
inc
ret
pop
movsb
fs
mov
movsl
xchg
imul
mov
cmpl
fistpll
add
xlat
xchg
aam
push
lea
popf
cltd
shrl
aam
push
mov
int
andl
push
lahf
arpl
test
pusha
and
ja
adc
sahf
or
jle
loope
push
lret
icebp
cld
pop
pushf
add
fidivrs
mov
jo
out
or
test
mov
or
and
adc
jo
ret
popf
xchg
or
cmpsl
mov
add
mov
loopne
leave
or
in
rolb
inc
in
inc
push
add
gs
xchg
and
loope
mov
sub
insb
cltd
dec
mov
xchg
mov
and
dec
movsb
das
movsl
ss
fsubs
js
mov
push
in
lret
xchg
icebp
or
fdivrl
enter
test
xor
jo
adc
imul
adcb
mov
jmp
popf
hlt
sub
pmuludq
mov
hlt
rorl
lock
pop
test
xchg
je
icebp
pop
mov
xchg
out
insl
jnp
inc
xor
sub
loop
leave
sbb
mov
fadd
xchg
dec
push
fcmovnb
mov
imul
pop
push
add
repz
pop
dec
xchg
mov
jbe
jae
insl
sub
push
out
inc
ret
and
je
mov
enter
cmc
add
sbb
in
rcll
clc
jne
fcompl
es
movsl
loopne
mov
int
mov
hlt
in
pop
aas
xlat
inc
xchg
stc
int3
lret
lods
push
clc
add
scas
fidivrl
scas
and
icebp
and
pop
popf
fchs
sbb
and
mov
dec
jo
cmp
cmc
data16
mov
add
lcall
icebp
add
xchg
iret
inc
imul
negl
cmp
int
lea
pop
jg
icebp
mov
aam
syscall
and
inc
shrb
fiaddl
negb
pushf
cmp
aaa
out
sbb
cltd
adc
lods
aaa
or
push
mov
push
xlat
popl
push
adc
jle
pusha
mov
out
pop
cwtl
dec
dec
insl
mov
add
enter
je
cmpsb
subb
test
and
in
adc
xor
dec
cmpsb
jmp
movsb
sahf
out
mov
data16
dec
inc
mov
cltd
mov
and
cs
out
jl
imul
mov
add
arpl
push
gs
mov
cld
mov
stos
mov
movb
outsl
jl
sub
sarl
daa
lret
mov
outsl
push
jae
call
xor
pop
nop
icebp
ss
mov
mov
jbe
std
mov
jbe
daa
jo
mov
sahf
cmp
ror
cmp
jg
jmp
dec
xor
popf
or
and
jmp
sbb
pop
mov
mov
mov
sub
jmp
pusha
add
dec
mov
lcall
pop
shlb
xchg
mov
outsb
fisttpl
clc
out
lods
sbb
add
mull
jno
clc
sub
xor
cmp
mov
adc
mov
mov
ja
mov
mov
mov
test
cmp
mov
testb
jae
add
jo
cmp
sbb
icebp
push
insb
aad
jge
das
xchg
movsb
dec
lret
int
xchg
ds
inc
mov
pop
add
xor
js
push
sbb
pop
nop
mov
jnp
in
xor
test
bound
dec
hlt
dec
jae
jne
pop
out
mov
popf
push
rcrb
aad
xor
sub
add
jnp
xchg
pop
adc
adc
icebp
testb
sbb
xchg
fs
add
mov
inc
inc
push
xchg
int
inc
dec
push
pop
aas
out
pop
xchg
adc
adcl
cmp
mov
into
mov
add
and
dec
pop
ss
and
xor
icebp
mov
inc
imul
gs
sub
jo
push
inc
or
mov
ja
inc
mov
shlb
ljmp
insl
xor
cmp
divb
add
scas
gs
sub
pop
xchg
pop
iret
and
mov
test
loop
sub
pop
inc
filds
or
out
push
xchg
pop
andl
scas
mov
call
fwait
repz
cmpsb
fwait
dec
in
and
loope
sub
mov
jge
in
clc
inc
dec
in
sbb
sub
pop
cmp
cmp
xchg
xchg
xchg
adc
ds
pop
dec
aas
jmp
inc
pop
ds
mov
mov
and
mov
out
nop
int
push
roll
inc
lret
fnstenv
mov
clc
sub
iret
and
add
lcall
push
out
xor
push
xor
cmpsb
push
arpl
lock
xor
or
jp,pn
adc
push
mov
pop
push
subb
inc
lret
jmp
cltd
leave
or
and
lahf
ret
and
mov
ja
adcb
idivl
jae
ss
das
scas
pop
insl
pop
pusha
maxps
mov
mov
fmulp
ljmp
push
push
fdivrl
dec
aas
cmpsb
arpl
aaa
popf
push
mov
les
or
rcrb
and
pusha
outsb
mov
stc
inc
les
icebp
xor
push
jle
gs
lea
adc
outsb
mov
fdivrl
lret
lret
xchg
lea
xchg
mov
sub
dec
sbb
daa
hlt
add
popa
cmp
ret
clc
mov
xchg
and
cmc
test
movsl
mov
adc
aam
mov
lret
aas
jg
add
jne
xor
stc
outsl
lods
adc
jg
jns
aam
mov
call
jge
scas
adc
or
pop
loope
in
sub
lret
cmp
inc
push
rolb
fadd
test
xchg
sub
out
movsb
aas
or
out
je
adc
adc
adc
mov
xor
push
add
inc
sub
mov
jmp
jle
and
lods
jae
mov
push
cld
cmp
rorb
fucom
inc
mov
pop
ja
or
and
inc
cld
mov
jno
in
in
jns
sbb
rcrb
sbb
mov
leave
cld
mov
loop
adcb
inc
test
test
enter
mov
inc
daa
cmp
jp
cmc
fs
sbb
pop
in
jae
push
lahf
push
dec
scas
fdivs
es
mov
push
movsl
aam
sbb
ret
out
ret
sub
fildll
and
pop
add
mov
lret
dec
mov
sbb
add
jp
gs
lds
jl
mov
sti
incl
je
sti
mov
cmpsl
cmp
sti
dec
loop
es
jl
push
fimull
lea
jecxz
mov
sub
mov
push
testb
fxch
cld
mov
push
testb
outsb
loope
bound
lahf
or
aam
std
xchg
jle
rcr
or
push
into
mov
cwtl
lods
adc
xor
sarl
dec
lcall
lods
push
dec
xchg
dec
in
insl
xchg
and
jbe
xchg
movsl
test
sbb
hlt
push
mov
iret
decl
or
cmpsb
jb
lods
nop
adc
imul
mov
pop
push
jp
dec
int
packssdw
in
and
out
dec
pop
inc
lret
sbb
mov
mov
mov
inc
sub
inc
inc
jle
jbe
repz
and
or
stos
push
fwait
arpl
imul
enter
stos
push
int3
scas
mov
xchg
mov
