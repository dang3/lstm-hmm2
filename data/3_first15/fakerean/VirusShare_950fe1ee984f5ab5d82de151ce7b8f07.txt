sbb
add
mov
cmp
aaa
les
dec
unpcklps
add
popa
mov
cmp
mov
inc
mov
cld
mov
cmc
mov
ret
loop
inc
lods
push
repz
js
int3
fs
dec
aad
ret
add
movsb
push
ret
mov
jge
cmp
fdivrl
xchg
cmp
add
mov
inc
inc
lea
stos
enter
stos
sbb
push
mov
fildl
into
ds
lahf
dec
inc
and
push
jno
ss
mov
mov
push
test
push
or
xor
pop
sbb
push
rorb
popf
mov
insb
push
or
sbb
hlt
mov
in
imul
add
cmpsb
lahf
add
jp
pop
xor
loop
push
bound
xor
mov
lods
push
cmpsl
cmp
dec
jae
popl
and
xlat
cmp
sbb
mov
add
sub
mov
mov
or
pop
jb
xlat
mov
aaa
push
adc
out
lock
cwtl
cmpsl
int
lds
pop
test
out
or
subl
mov
mov
cli
arpl
ljmp
movsl
loopne
mov
ja
in
loopne
cmp
push
dec
dec
movsb
aas
bnd
pusha
mov
inc
cmp
jbe
inc
jl
mov
mov
sarb
mov
call
loopne
lock
dec
or
or
mov
dec
and
inc
lahf
in
jbe
cli
ljmp
adc
inc
add
in
stc
ficomps
fidivrl
dec
sbb
rcr
sub
push
inc
xchg
mov
mov
fidivrl
lods
int3
pop
inc
cs
mov
in
mov
or
push
sub
jmp
mov
add
repnz
shll
aaa
mov
inc
xor
movsl
push
sub
notl
movsb
inc
notb
leave
cmc
sti
cmpsl
arpl
adc
and
sub
fiadds
lds
shlb
inc
ss
pop
xchg
ss
xor
cmpsl
faddl
mov
pop
push
pusha
insb
cmp
xor
mov
adc
xor
dec
insb
dec
out
xor
cli
inc
push
lret
or
lcall
add
and
cmc
mov
stc
and
or
xchg
pushf
movsb
cwtl
mov
das
jl
js
icebp
test
jne
cwtl
xchg
pop
cmp
data16
sbb
into
dec
or
pop
dec
mov
out
push
dec
arpl
scas
dec
lds
xchg
xchg
enter
mov
xchg
fadd
lods
ffree
jl
movsb
cmpl
mov
stc
adc
pop
loopne
adc
cli
mov
mov
ds
repnz
mov
or
xor
adc
cmp
mov
fwait
dec
fistpl
fwait
pop
and
mov
arpl
cld
leave
dec
and
push
sub
push
movsl
dec
push
mull
inc
inc
or
cmp
mov
in
inc
fldenvs
cmc
cli
pop
cmc
add
cmpl
add
pushf
or
arpl
jg
mov
dec
mov
mov
sbb
xchg
repnz
jae
xchg
mov
shll
pop
mov
mov
divl
xchg
add
sub
lock
fcomp
adc
ljmp
dec
fmulp
cmp
sub
clc
nop
push
nop
adc
jbe
into
stos
cltd
popa
mov
and
jbe
lahf
adc
or
addr16
sub
mov
xchg
sbb
adc
push
dec
pushf
jl
repz
sarl
mov
jecxz
dec
and
outsb
push
bound
das
sahf
cli
mov
dec
leave
jbe
jecxz
repz
mov
and
fs
shl
pop
aam
insl
dec
insb
iret
jnp
pop
inc
pop
jb
scas
pop
aas
mov
fldt
in
ss
ficoml
jno
lock
movsb
mov
add
pop
adc
movsl
push
and
jmp
or
dec
fwait
mov
and
mov
sub
push
cli
loopne
jge
xor
lea
out
xchg
aas
mov
push
ss
adc
popa
lock
sbb
pusha
push
lods
cmp
sbb
rolb
sub
fdivrl
pushf
stos
sarl
sbb
mov
pop
mov
rcr
mov
loope
stos
dec
push
pop
int
cmpsb
xchg
loope
mov
iret
out
xor
and
pop
xor
jge
sub
aas
cmp
hlt
push
inc
ds
repnz
dec
loop
add
fxch
ret
movsb
push
stos
push
jnp
add
std
stc
das
int
sti
js
fs
jle
xor
test
insb
fiaddl
test
sub
push
movswl
insb
into
test
push
mov
mov
mov
out
xor
std
cmp
out
push
xor
jae
lock
test
lahf
push
jmp
std
pop
mov
leave
dec
lea
push
lahf
sub
and
xchg
shlb
xlat
ret
mov
jge
inc
or
mov
xlat
stc
push
xor
pusha
mov
jp
insb
push
cld
fwait
loop
ss
mov
arpl
cmp
xchg
test
xlat
pop
add
push
xchg
stos
inc
mov
sub
jmp
cmpsl
adc
cli
dec
push
lahf
push
xor
mov
sbb
adc
xor
pusha
xchg
std
cli
or
cltd
bound
mov
imul
mov
iret
mov
and
cmp
lahf
mov
sub
setl
mov
clc
push
adc
gs
mov
sub
sub
adc
xchg
sub
mov
and
loope
xchg
fs
mov
sub
push
les
push
push
leave
addr16
out
lock
out
add
push
stos
dec
and
pop
packuswb
ficompl
jnp
fcoms
stos
ds
into
ficomps
pusha
pop
jmp
mov
icebp
inc
jbe
jne
out
popf
lcall
sbbl
mov
pop
sub
jnp
and
jge
mov
pop
pop
jb
xor
and
xchg
adc
push
mov
scas
fs
bound
cmp
cmp
mov
push
jb
or
cmpsb
call
xchg
rorb
dec
test
push
cmp
out
cltd
testl
idivl
loope
mov
mov
xchg
loop
mov
outsl
jns
dec
ja
outsl
je
push
les
cmp
aas
sti
push
std
mov
pushf
test
mov
popf
adc
sahf
sub
and
lahf
iret
and
xor
ret
lods
outsl
or
cmp
sbb
fcmove
addr16
mov
mov
pusha
dec
adc
mov
add
jno
hlt
aaa
lret
xor
loope
adc
inc
mov
lock
movsb
xchg
dec
scas
mov
scas
movsl
jae
dec
xchg
push
es
sub
in
imull
sbb
jp
xchg
stos
or
adc
xchg
add
jno
mov
adc
mov
jl
xchg
adc
sahf
pop
les
stos
orb
and
jnp
outsb
push
movsb
cmpsl
mov
insb
fnsave
xchg
rcrl
jp
jl
sbb
add
cwtl
iret
and
in
fwait
sub
les
mov
int
out
sbb
xor
xor
imul
frstor
sub
push
cli
sub
sbb
xchg
into
mov
and
icebp
mov
dec
inc
pop
daa
insl
fcmovne
jmp
outsl
and
jbe
push
aaa
aas
bound
out
add
fwait
or
aas
dec
dec
mov
cmp
push
sub
test
jecxz
dec
sub
ss
shrl
repz
xor
cmp
cmp
push
or
push
and
rol
and
fcompl
sbb
cmp
or
sbb
jg
dec
dec
dec
fstpt
or
jo
popa
adc
pop
pop
imul
icebp
jl
dec
sbb
cmp
int3
out
pop
insl
stc
sub
add
sub
adc
dec
mov
fisubs
push
jbe
and
sbb
sahf
out
jae
maskmovq
negl
popa
mov
xchg
decl
stc
ror
out
sti
cmp
jns
xchg
imul
notb
add
cmpsb
cmc
push
cwtl
adc
rclb
mov
adc
sbb
adc
xchg
sub
xor
negb
dec
repnz
cmpl
fdivr
adc
aas
mov
sub
jns
push
and
stos
adcl
mov
mov
mov
ja
jecxz
pop
mov
cld
lret
and
xchg
iret
mov
sub
lods
mov
or
pop
inc
mov
inc
arpl
dec
or
and
sub
leave
ljmp
and
shrd
mov
leave
mov
lea
push
mov
pusha
mov
inc
in
in
mov
cld
insl
jne
bound
sbb
sbb
mov
pop
mov
jmp
pop
sbb
xorb
ja
mov
bound
mov
inc
mov
pop
leave
lret
int3
mov
cli
rcr
jl
repnz
xchg
fildl
mov
loopne
dec
mov
xchg
cmp
inc
and
out
aad
mov
dec
and
into
loopne
sbb
push
adc
mov
scas
xchg
sub
jge
dec
outsl
or
sbb
add
cwtl
outsb
rcl
xor
test
pop
mov
jne
cwtl
in
jge
or
or
mov
cwtl
pop
lds
xchg
sbbl
push
adc
mov
xor
or
jno
movsl
cmp
sub
out
cli
sbb
mov
xlat
das
dec
sub
insl
repz
stos
lret
or
pushf
dec
xchg
or
mov
cmp
pop
hlt
xchg
lret
xchg
sti
or
sbb
jno
inc
xchg
addr16
mov
push
pop
jns
shll
add
into
xor
fildl
dec
mov
int3
outsb
ss
mov
adc
fistl
aam
mov
dec
push
pop
sbb
cmp
cmp
insb
xchg
les
inc
lods
dec
or
std
push
ret
ja
mov
jb
xchg
pop
add
fldl
leave
sbb
imul
stos
shrb
fadd
fisubrs
stos
push
adc
mov
mov
rorl
cmp
daa
pop
xor
pop
or
jge
mov
inc
lea
in
pushf
mov
add
cld
jg
sub
ficomps
add
push
adc
cmp
xor
push
insb
test
enter
ja
je
sub
jb
repnz
jle
idiv
mov
out
mov
insb
and
xchg
in
dec
scas
fisubl
jbe
dec
add
imul
xor
push
mov
or
push
pushl
movsl
das
es
fsubrs
lods
sbb
pop
add
aam
cmp
jno
jo
int
pop
shll
fsubp
inc
imul
outsb
push
jl
lret
mov
stos
scas
or
cmpl
jg
mov
ja
push
pop
jg
rcll
inc
xchg
bound
add
and
sbb
dec
hlt
hlt
ss
jl
mov
mov
push
xchg
cmp
sahf
xchg
xchg
imul
cmp
sub
xchg
or
shlb
mov
push
sbb
imul
or
lods
gs
or
mov
scas
push
push
enter
jl
fisttpll
clc
leave
mov
sbb
lods
and
mov
icebp
sbb
inc
cltd
mul
loope
inc
aam
cld
shlb
pop
push
and
sbb
pop
cli
insl
jmp
leave
sub
imul
fnsave
fisubrl
and
inc
jl
lret
jecxz
cltd
jmp
sub
mov
adc
mov
add
sbb
push
push
adc
insl
cmc
add
loopne
add
xor
adc
aad
das
mov
rclb
mov
fidivrs
fnstcw
add
or
loop
aaa
mov
dec
xlat
daa
inc
xchg
dec
fdivr
cmp
sbb
xchg
adc
sbb
sti
lds
push
imul
inc
xor
dec
and
adc
hlt
push
sub
pop
sbb
insl
ret
ljmp
mov
les
icebp
dec
add
out
mov
sbb
pushf
xchg
lret
jmp
xor
loop
out
push
push
fisubs
adc
pop
lock
push
adc
add
jg
movsl
lret
pop
push
clc
fisubs
sahf
pop
call
cmc
push
icebp
mov
inc
pop
sti
sbb
lods
pop
hlt
lock
sub
xor
sub
dec
or
push
hlt
aaa
popa
fbld
dec
or
imul
lds
pop
dec
inc
add
call
test
stos
pop
cwtl
mov
mov
les
inc
cmpsl
jae
into
xchg
mov
scas
out
imul
fisubrs
inc
and
or
icebp
adc
repz
in
and
and
outsb
mov
ror
inc
out
inc
or
gs
fcoms
shlb
aas
movsl
mull
mov
xchg
sbbl
rcl
sti
jnp
mov
insl
cmp
adc
dec
jp
in
lret
sbb
scas
xchg
je
sub
or
dec
sarl
int
and
pop
pusha
jnp
mov
xor
push
adc
push
sbb
add
iret
decl
mov
jns
movsb
dec
xchg
test
in
je
out
adc
sub
dec
xchg
shrb
inc
testl
cmpsb
and
out
jno
das
aad
sar
push
xchg
dec
js
pushw
push
cmp
push
lret
push
dec
data16
sub
das
cmc
lock
cwtl
mov
jmp
pusha
mov
daa
shrb
jmp
pop
pushf
mov
pop
jb
xchg
testb
fucomip
in
mov
mov
imul
mov
std
xchg
cli
stos
mov
in
es
repnz
dec
jb
mov
mov
sbb
in
cs
out
test
nop
mov
cmp
icebp
leave
pop
pop
and
or
jne
out
mov
sub
inc
add
std
dec
pop
int3
sahf
fdivp
sbb
cmp
xor
jl
jno
addb
jmp
mov
dec
outsl
es
insb
int
adc
mov
lods
mov
aaa
cli
dec
cmpsb
xchg
push
jbe
push
sub
pop
jle
cs
jge
inc
mov
repz
pop
mov
shlb
or
mov
mov
sbb
ds
cmc
push
in
mov
mov
pop
imul
mov
insl
mov
mov
mull
fidivrl
jg
jge
push
adc
popf
jecxz
mov
inc
dec
inc
push
mov
add
das
or
push
ds
dec
pop
mov
inc
mov
mov
iret
or
or
sbb
aam
add
imul
sbb
sahf
xchg
inc
out
xchg
add
loope
pop
lock
sbb
rcrb
subl
lret
les
out
xor
imul
jnp
psrlq
scas
adc
fadds
lods
outsl
xchg
movsb
jge
sti
imul
je
or
inc
sbb
mov
out
aad
das
pop
adc
cmp
cmc
adc
inc
fidivrl
sub
mov
xchg
clc
hlt
sub
adc
subl
outsb
inc
mov
int
push
cmp
xor
cmp
mov
jb
fnsave
out
and
orb
xchg
or
fcmovne
push
stos
jg
int
cltd
loope
xchg
jno
movsb
in
pushf
pop
cli
mov
out
lods
cs
out
jl
xchg
cmpsl
add
loopne
mull
xor
ret
fimuls
imull
dec
xor
push
jo
popa
stos
stos
pusha
add
in
inc
inc
or
shrb
add
jl
pop
pcmpeqw
stos
lret
mov
dec
push
jg
sub
ds
mov
xor
hlt
loop
inc
sbb
dec
pop
fbld
adcb
ljmp
adc
dec
pop
js
sbb
jo
xor
loop
cmpl
xchg
xor
push
adc
jle
jae
sub
jecxz
or
mov
jb
stc
cld
jae
and
jl
nop
xchg
mov
mov
gs
xlat
xchg
lods
das
inc
mov
lahf
pop
std
mov
mov
inc
jbe
std
lret
add
mov
adc
cld
sub
pop
jbe
rcrl
mov
cmp
subb
adc
mov
fwait
pushf
xor
outsb
push
push
inc
push
xor
dec
test
js
cld
lahf
or
sbbb
cltd
sub
jae
mov
leave
and
bound
sahf
pop
cmpsb
pop
adc
mov
xchg
in
cmpb
cmp
repnz
movb
push
lcall
lods
shll
cmp
dec
dec
adc
mov
jp
lahf
jo
aad
pop
in
push
mov
mov
xchg
or
dec
out
jmp
iret
inc
adc
push
arpl
enter
mov
dec
mov
dec
enter
sbb
lods
aas
rcll
dec
jns
mov
pop
enter
clc
fs
jge
les
je
out
xchg
pop
add
or
ret
cmp
testl
leave
lret
es
mov
mov
cmp
sub
push
xor
test
mov
mov
fists
jns
inc
xchg
xchg
stos
adc
outsb
mov
and
movsb
inc
adc
ljmp
rclb
sti
cmp
xchg
sbbl
nop
lcall
shr
out
clc
fldenv
popf
mov
icebp
ret
mov
cmpsb
jmp
xchg
xor
pop
push
mov
in
add
adc
add
mov
xchg
inc
and
push
push
xor
popf
xchg
mov
or
gs
inc
int
or
push
sbb
cmp
add
aaa
jo
push
add
xchg
sbb
inc
adc
jge
push
adc
aad
in
es
adc
or
repz
clc
jb
icebp
or
loop
imul
dec
and
sbb
in
imul
lock
jae
jbe
outsb
cmpsl
adc
arpl
mov
mov
sarl
push
jbe
mov
out
into
mov
test
sub
push
stc
cmpb
push
aam
fdivrs
xchg
out
stos
ficoml
mulb
daa
je
xchg
dec
repnz
sbb
das
in
add
jl
jp
push
popf
sub
xor
cmp
xchg
mov
mov
sbb
and
adcb
test
add
divl
and
test
dec
sub
shlb
es
test
stc
push
sarl
lods
cli
jmp
adc
imul
push
sbb
adc
cmp
roll
lods
in
sbb
in
sub
arpl
lcall
jg
mov
popf
lahf
sbbl
lahf
inc
mov
xor
movsb
sbb
enter
pop
xlat
mov
xor
jae
imul
mov
cmc
sti
jne
and
sbb
dec
in
call
pushf
mov
or
int
lds
lret
push
les
sub
and
xchg
push
jmp
in
ss
enter
arpl
sub
push
fs
mov
movsl
repnz
or
lods
testb
sti
mov
cld
cltd
loope
xor
push
pop
fs
push
mov
clc
in
push
sub
rcrl
retw
sub
adcb
in
sarb
fstpl
hlt
adc
push
adc
mov
dec
ja
push
sbb
lret
push
mov
subl
and
mov
cmp
sbb
adc
test
xchg
ja
sbb
lods
roll
cmp
test
dec
dec
push
aaa
imul
dec
and
daa
jp
mov
lock
inc
movsl
iret
pusha
pop
lcall
int3
push
adcb
and
mov
mov
popw
sub
cmpl
cwtl
cltd
cld
shrl
bound
dec
add
lret
ja
mov
mov
lcall
xchg
shlb
mov
jno
xchg
scas
lret
daa
pop
mov
andb
loop
test
andb
lahf
jle
lds
addl
add
and
aam
sbb
jp
push
xor
mov
jmp
mov
rolb
xor
hlt
fisubl
push
add
add
stos
aaa
inc
and
mov
dec
xchg
std
inc
nop
aaa
dec
outsb
stos
aas
daa
loope
fidivs
mov
xor
pop
or
loop
cmpsl
fdivrs
ljmp
xor
xchg
mov
sbb
cld
inc
mov
mov
xor
or
or
cmp
cmpsl
xchg
out
xchg
insb
xor
dec
lock
pop
and
add
movsb
popf
push
push
jecxz
dec
mov
push
inc
addr16
inc
sbb
outsl
mov
ljmp
mul
out
rorl
push
sbb
and
das
loope
or
sbb
fadds
mov
sti
xor
out
and
imul
push
cli
rcll
out
aas
loopne
pop
gs
mov
jnp
sub
mov
xchg
mov
mov
stc
pop
enter
push
pop
dec
adc
ror
inc
dec
fwait
cmp
cmp
lock
xchg
mov
dec
mov
cmp
pop
push
pop
cmc
mov
sbb
xchg
mov
mov
dec
addr16
or
popa
push
sub
jno
stos
xor
pop
pop
mov
sub
mov
inc
xchg
jnp
enter
js
jecxz
dec
data16
adc
and
fsubrl
mov
insb
in
cld
test
mov
jb
xor
xor
mov
loop
pop
lea
add
jg
xor
lea
insb
cmp
mov
int
outsl
mov
ficoms
adc
mov
test
outsb
lahf
in
mov
sub
jno
xchg
scas
call
mov
into
outsb
mov
cmp
xor
jp
mov
shlb
adc
push
cld
ret
xor
andb
aas
push
nop
test
sub
in
lods
inc
in
lea
xchg
adc
inc
mov
lods
and
push
pop
fs
mov
and
stos
loop
cmp
xchg
es
movsl
les
jnp
jle
int
xor
sbb
jb
pop
das
push
adc
xor
add
insb
inc
adc
daa
inc
nop
mov
mov
test
jns
hlt
std
mov
out
divb
stos
lret
mov
scas
pop
push
mov
cmp
sub
sub
xor
das
dec
adc
sub
pop
fs
mov
xchg
sbb
ret
push
inc
or
mov
loope
mov
push
lods
dec
out
mov
mov
cmp
jb
xchg
jno
aas
insl
test
dec
out
or
cmp
adc
lret
hlt
hlt
xchg
mov
dec
std
loop
dec
inc
push
jno
mov
xor
call
mov
fstpt
scas
dec
int3
mov
icebp
push
sbb
push
rclb
sbb
mov
jns
jne
movsb
mov
test
push
lea
inc
and
push
decb
orb
dec
sarl
xor
adc
add
stos
pushf
mov
out
les
sub
sbb
pop
jge
jl
dec
pop
bound
lods
cmp
das
out
or
out
insb
std
mov
mov
push
add
jae
addr16
jmp
jl
ljmpw
ret
imulb
mov
int
push
bsf
xlat
fmul
sub
mov
sbb
sbbb
das
mov
outsb
aad
loopne
out
ret
test
fs
pop
pusha
dec
and
mov
pop
lods
mov
cmpsb
dec
jl
test
inc
and
sbb
pusha
daa
add
mov
dec
mov
ficoms
das
fisttpl
cmp
cli
and
dec
mov
pop
dec
push
cmp
sub
dec
push
pop
imulb
sub
and
jmp
pop
mov
sub
sub
insb
pop
outsb
pop
jecxz
mov
jo
jmp
lods
out
fs
shl
repz
sbb
add
push
ss
cs
out
mov
pop
push
je
movsl
mov
dec
add
xlat
stos
in
int3
mov
push
imul
push
dec
inc
mov
add
xchg
mov
jmp
arpl
sahf
jle
push
pop
aaa
lret
mov
jbe
mov
jb
jl
push
xchg
push
sbb
jne
add
ss
fsubrs
fcoms
push
addl
test
xchg
jne
push
cmc
std
or
es
jmp
sub
dec
pop
adcb
cmp
int
in
add
mov
iret
sub
data16
sub
xchg
jecxz
push
xchg
pop
add
rcl
adc
adc
iret
mov
out
mov
mov
inc
and
inc
xchg
add
xor
inc
xchg
jae
sbbb
jnp
loope
sub
xchg
sub
lods
mov
mov
loope
scas
movsl
out
sub
push
mov
mov
lret
inc
inc
add
dec
mov
add
stc
lret
push
sub
adc
in
jp
pop
fldt
dec
out
incl
mov
mov
push
xchg
and
shll
jbe
nop
pop
ss
jp
ljmp
cmp
mov
cmp
call
clc
cli
rcrl
outsl
icebp
sar
mov
sti
mov
mov
xchg
mov
xchg
repz
addb
scas
fcomps
adc
cli
mov
sub
inc
mov
les
mov
xor
ss
rcrb
push
cwtl
mov
sbb
outsb
jmp
pop
cltd
outsb
gs
dec
lret
clc
movsl
push
test
adc
xchg
and
mov
pop
icebp
mov
lret
orb
jg
mov
jnp
stos
out
enter
xchg
sub
jecxz
sbb
cmp
das
adc
adc
loopne
arpl
xor
dec
fisubs
mov
setle
jns
mov
cmp
push
xchg
das
ljmp
adc
fsubrs
adc
cmpsb
bound
sbbb
jns
pop
xchg
mov
xchg
das
dec
cmp
sarl
xor
inc
ljmp
inc
outsb
mov
enter
jp
dec
inc
je
xchg
mov
out
int
lock
test
mull
mov
lea
int
lods
repz
xchg
out
int3
mov
jmp
or
push
jp
int3
sti
mov
jne
bound
mov
mov
dec
pop
add
ja
sub
imul
and
xchg
push
mov
movl
lods
insl
fwait
mov
push
pop
inc
dec
cmp
rorl
add
addb
dec
sub
cmp
stos
nop
stc
push
jae
lcall
inc
inc
or
ljmp
imul
fwait
mov
push
sub
negb
sbb
inc
ret
or
fstpl
mov
fs
mov
addb
jb
sbb
xchg
add
push
js
outsb
push
roll
or
add
cs
stos
sub
adcb
jl
ret
ret
stos
add
lret
pop
dec
sti
push
pusha
or
lret
leave
push
or
orb
std
push
lea
jge
popa
lods
cmp
pop
leave
ret
add
ds
mov
fcmovne
mov
stos
or
jno
cmp
out
cltd
int
xchg
xchg
xor
mov
icebp
and
cli
adc
popf
pop
dec
aaa
sbb
scas
inc
cmp
testl
fiaddl
mov
pop
scas
xor
xor
enter
cmp
or
cmp
mov
in
mov
call
inc
adc
addl
pop
fsub
nop
in
cli
clc
sub
das
lret
outsb
cmpsl
scas
sti
push
mov
rorl
add
mov
inc
sbb
xchg
or
shl
push
add
jle
mov
iret
pop
std
lret
jmp
or
aaa
inc
int
jo
es
add
sbb
and
fstps
sbb
add
xchg
dec
aaa
es
dec
repz
mov
pop
ret
ja
adc
pop
xor
fisttps
cmp
mov
lret
cmp
sub
jne
scas
lret
sub
popa
and
or
scas
int3
orl
loope
inc
dec
ss
aam
sbb
dec
and
int
xchg
ret
xchg
out
sbb
inc
rorb
adc
and
repz
dec
jo
inc
shll
xor
movsl
aad
mov
out
out
or
mov
sbb
jecxz
ficoms
out
mov
test
cld
fnstenv
push
pop
jmp
out
ja
outsl
lds
xor
inc
xor
ljmp
cs
test
pop
push
mov
cld
jns
adc
sub
int
sbb
or
pop
cs
mov
ja
jb
dec
sub
insb
daa
inc
pop
and
shlb
lret
psubq
pop
daa
xchg
pop
add
insb
es
and
out
xchg
rcr
pop
mov
mov
xlat
cmpsl
aam
ja
push
push
je
fstl
and
add
lret
mov
xor
pop
repnz
sub
fidivrl
sbb
dec
js
mov
inc
add
adc
sub
popl
or
mov
cltd
add
icebp
hlt
or
dec
popf
popw
dec
xorl
fcmovnu
pop
stos
or
xchg
lret
mov
push
cmp
pop
xchg
in
js
repz
sub
enter
test
sub
add
fnstsw
fsts
xor
jecxz
loopne
and
notb
stos
sahf
outsl
mov
lea
or
xor
jne
jl
fdiv
jnp
mov
mov
aad
push
lods
pop
dec
jbe
add
out
mov
pop
inc
or
mov
push
and
dec
jne
fsubs
mov
pop
jns
sbb
pushf
pop
stc
jo
iret
pop
add
sarl
pop
outsb
je
inc
repz
mov
add
int
push
ljmp
adc
push
ror
jg
subb
daa
stos
rol
mov
mov
gs
inc
xor
imul
cmp
shrb
xor
adc
and
sbb
or
cld
pop
inc
sbb
shll
jge
aad
adc
std
enter
sub
mov
clc
adc
adc
jne
push
femms
dec
inc
lods
jbe
in
xchg
rcr
mov
xchg
sub
repnz
mov
lret
add
jp
xchg
mov
add
iret
inc
push
pop
xchg
ds
mov
mov
ds
add
sub
adc
sbb
inc
mov
cmp
dec
aas
xlat
sbbl
pop
inc
jo
mov
ljmp
inc
cmp
jecxz
lcall
and
jns,pn
or
stc
outsl
xchg
xor
rorl
test
insb
push
mov
and
popa
fldt
fildll
stos
outsb
inc
jne
ret
adc
sahf
mov
insb
rcr
cmpsl
jbe
std
inc
pop
cmp
das
xchg
xor
jo
xchg
push
xor
fdivr
and
xchg
mov
cmp
aam
outsb
fcoml
inc
pop
mov
into
cltd
sub
lret
adc
sbb
sahf
movsb
push
pop
lret
loope
xor
mov
adc
cmpl
xor
cmp
pop
scas
lahf
or
jecxz
cld
jno
adc
xor
mov
sbb
mov
or
adc
popf
popf
adc
repnz
xchg
inc
mov
mov
inc
xor
jae
inc
lret
jl
dec
sub
pop
lods
pop
in
cli
fists
mov
hlt
mov
pop
pusha
dec
sbb
movsl
ret
jbe
mull
xor
and
push
mov
les
sub
push
add
sti
xchg
mov
sbb
icebp
int
out
cltd
add
xor
ljmp
fdivrl
push
pop
movsb
inc
orb
xchg
idivl
sub
outsb
lods
push
cmc
xor
fisubs
mov
lock
mov
jns
pop
stc
ror
lret
jp
out
ja
push
sbb
or
leave
stos
test
sub
roll
pop
inc
cmp
xchg
test
mov
jle
popf
sti
shlb
inc
mov
sbb
repz
sahf
and
lahf
push
and
dec
mov
loopne
fistl
cmp
ret
push
ds
pusha
scas
lahf
sbb
jae
into
ffreep
xor
rcr
ret
ja
scas
mov
orb
stos
nop
dec
insb
xchg
ds
fistpl
leave
lcall
rcrb
xor
int3
sub
xchg
mov
push
fimuls
ljmp
lods
sbb
inc
sbb
faddl
js
js
xor
or
mov
pop
sahf
dec
out
pop
push
leave
pop
adc
adc
push
pop
dec
aad
mov
ja
jbe
dec
stc
pop
mov
int
or
lock
scas
repnz
jnp
fisttps
xrelease
sbb
out
loop
mov
push
or
pop
sub
cmp
fmull
xchg
mov
mov
enter
int
xchg
cltd
stc
sub
mov
ret
add
inc
pop
add
sub
loopne
les
iret
jp
dec
mov
xchg
inc
fwait
inc
scas
mov
std
lret
sub
mov
ja
inc
inc
cmp
pop
push
adc
dec
cmp
xlat
inc
stc
push
jp
clc
ss
roll
enter
es
ror
mov
mov
ficoml
push
imul
enter
xchg
xor
pop
dec
fnstsw
cmp
pop
popf
add
test
popa
aad
xor
rorl
add
sub
call
cld
jnp
sbb
clc
sarb
repz
repnz
lea
jmp
scas
push
mov
or
jmp
push
std
add
inc
daa
sub
aad
or
js
fs
mov
repz
mov
sub
fldenv
jg
clc
cld
xor
les
dec
sahf
pop
jb
in
sbb
pop
jne
cmp
in
outsb
sbb
in
mov
mov
sbb
jp
add
adc
mov
fbstp
push
inc
lcall
es
inc
push
inc
or
into
mov
xchg
mov
test
cmp
iret
sub
push
pop
fcomi
dec
adc
pop
pop
push
lods
movsb
fiadds
sbb
mov
lret
fiaddl
inc
jae
adc
je
pop
push
iret
ret
add
scas
and
mov
xlat
mov
mov
hlt
inc
js
fs
out
cli
mov
push
jmp
mov
les
inc
cwtl
outsb
adc
mov
sar
pushf
adc
xchg
ret
and
jge
test
cmc
fcompl
pop
pop
hlt
into
inc
aam
adc
idivl
mov
jo
aam
out
sbb
sbb
cwtl
repz
ds
flds
dec
bound
daa
into
pop
cmpsb
nop
xor
lods
mov
sbb
or
insb
pop
inc
addb
outsl
and
mov
imul
adc
lock
pop
pop
mov
imul
push
test
add
cmc
leave
add
pop
lods
xlat
sbb
test
mov
xchg
daa
bound
xlat
jmp
scas
xor
mov
mov
in
adc
iret
cli
mov
in
clc
pusha
inc
inc
cltd
jns
mov
mov
push
pop
test
insl
loope
push
adc
fimull
ljmp
jecxz
stc
sub
rcrb
shll
xor
and
inc
hlt
in
and
int3
test
cmc
jecxz
stos
sbb
cld
jae
imul
scas
add
mov
aaa
sbb
and
clc
push
ret
jne
jo
sub
aad
lret
popf
sbb
mov
gs
test
pop
mov
sahf
mov
mov
lahf
int3
jns
in
add
jne
jl
lahf
lea
adc
xchg
cmp
sbb
insl
std
pop
or
push
pop
mov
push
pop
decb
dec
lds
pop
fstl
in
push
xlat
xchg
dec
mov
jne
ljmp
ret
mov
pop
fbstp
nop
and
push
in
rorb
aaa
adc
jns
mov
mov
jo
cli
nop
imul
repz
mov
sub
in
std
adc
cltd
pop
outsb
call
inc
mov
mov
xor
nop
data16
scas
lock
push
pop
cmp
mov
es
lahf
and
in
lahf
or
popa
and
sarb
or
jg
mov
loope
mov
inc
inc
scas
inc
sub
push
push
fisttpl
inc
push
fisubrs
lods
jl
imul
outsb
adc
pop
test
or
aad
std
inc
out
popf
movsb
inc
lock
xor
mov
sbb
cltd
dec
adc
hlt
jns
xor
adc
mov
push
adc
inc
lret
xchg
frstor
dec
test
faddl
add
or
inc
lock
sub
mov
pop
in
push
push
push
adc
call
test
movsb
push
aaa
loopne
lods
add
int
addr16
inc
bound
in
pusha
mov
mov
insb
negb
das
push
xor
mov
orb
adc
inc
je
or
das
adc
jp
xlat
ret
es
and
and
pushf
inc
jae
ljmp
pop
or
and
mov
pop
jl
push
dec
pop
dec
std
xorl
test
xor
lds
sbb
and
hlt
adc
xchg
jge
adc
add
outsb
xor
xchg
jns
dec
jns
sarb
sub
stos
lods
lahf
bswap
cmp
mov
push
test
int3
jae
std
mov
inc
mulb
push
in
jmp
sbb
push
mov
xchg
sbb
int
popf
push
cmpsb
sub
scas
mov
bound
jno
leave
jmp
sub
adc
test
jp
cmpl
fs
repnz
outsb
adcl
rcll
inc
sbb
push
mov
and
ja
dec
addl
xchg
pop
adc
not
movd
mov
push
out
jae
xchg
gs
lcall
sub
mov
lods
lret
call
subb
insb
jg
adc
shlb
cmpsb
cmp
sti
sbb
stc
xchg
mov
and
jns
or
ds
insl
test
mov
mov
enter
shlb
lods
std
sbb
fld
outsl
mov
ret
dec
leavew
cmp
popf
lods
jge
negl
push
fwait
lret
fldenv
stc
shll
into
das
shlb
adc
bound
lcall
inc
cs
loope
pop
pushf
loop
cmp
call
sbb
insl
lea
dec
push
mov
outsl
imul
adc
push
xlat
gs
sbb
aam
call
cmpsb
xchg
adc
imul
mov
mov
xchg
mov
sub
dec
mov
shrb
dec
xor
andl
popf
pop
imul
ror
lds
xor
cltd
push
sub
and
or
sbb
ret
gs
leave
xchg
gs
idivb
pop
test
cltd
jp
sbb
leave
mov
psubusw
sub
inc
jmp
xlat
aas
adc
loope
pushf
lods
jle
insl
cli
andb
shlb
cmc
mov
mov
mov
xor
leave
and
imul
jnp
cmp
xchg
das
adc
add
and
in
test
stc
add
cmp
dec
mov
ds
fnstcw
int3
cmpsb
testb
add
lcall
mov
xchg
rorl
test
gs
ja
ret
mov
std
jle
sbb
daa
icebp
xchg
lret
clc
sbb
add
imul
jno
int
mov
and
test
aad
ficompl
lret
je
movsb
jb
cltd
dec
sbb
and
repnz
lea
sub
push
fwait
adc
cmpsb
popf
imul
daa
lcall
fidivs
out
aad
into
scas
push
mov
cwtl
mov
int
fcomp
and
xchg
push
sbb
ret
das
stos
xor
and
scas
loope
stos
loop
inc
sub
cmp
inc
ss
or
std
in
icebp
shl
dec
push
xor
cli
inc
cwtl
pop
lret
loop
lret
outsb
movsl
mov
pop
incl
shlb
fldcw
adc
cmpb
addr16
lock
adc
fcomps
sub
mov
sbbb
push
aad
rolb
fsin
adc
lea
outsb
sahf
and
or
push
xor
xchg
dec
push
mov
idiv
jmp
fistps
inc
or
jo
lds
pop
das
mov
jnp
mov
add
leave
pushf
inc
mov
ja
xchg
push
mov
mov
push
and
jmp
push
push
rcr
and
cmp
inc
or
pop
pusha
mov
rcrl
add
or
push
xor
fnstcw
jl
add
push
mov
jp
xor
adcl
xlat
mov
leave
rorl
push
mov
jnp
mov
mov
push
xchg
or
inc
inc
inc
rorb
jle
in
cmp
sub
pop
jl
jb
sbb
lret
jge
adc
ja
rcrl
hlt
add
pop
dec
outsb
sub
push
jle
or
aaa
out
mov
xchg
lret
test
pop
outsl
pushf
movsl
jg
lcall
jecxz
push
mov
lcall
pop
in
test
xchg
ret
cwtl
jns,pn
xchg
hlt
and
pop
call
jb
insb
std
out
xchg
jne
or
out
pop
imul
or
ss
jns
aad
andb
insl
arpl
nop
dec
xchg
pop
ds
fdivl
and
lahf
lock
cmc
rcr
sub
shlb
mov
push
xchg
aam
dec
outsb
testl
cmpsl
out
and
cmp
lret
cmp
mov
xchg
cli
push
lods
mov
mov
xchg
inc
lods
les
sti
cmpsb
and
cmpsb
jno
cmpsl
xorb
adc
rorl
popa
test
pushf
inc
xor
aam
adc
aaa
and
out
sahf
orl
jecxz
sub
cmpl
add
push
jg
sub
adc
aaa
push
add
out
fwait
cmp
push
jae
add
out
push
hlt
clc
jmp
pop
mov
xor
sbb
addl
imul
repz
in
out
stc
jle
repnz
xchg
stos
ret
pop
pop
push
ja
fisttpl
arpl
scas
ljmp
aad
jp
mov
lock
sub
stos
shrb
shrb
fs
push
push
js
movaps
or
sub
xchg
mov
shr
or
loopne
or
dec
std
lods
push
lcall
ds
test
ss
repnz
pop
gs
push
lret
xchg
lcall
jg
lcall
dec
movsl
and
mov
fcmovnu
or
in
pop
shll
jnp,pt
xchg
sbb
mov
mov
lds
inc
push
mov
aaa
lcall
icebp
icebp
sbb
adc
push
outsb
icebp
scas
inc
imul
pop
roll
mov
jmp
maxps
lods
ds
das
mov
mov
insb
mov
daa
or
adc
divl
push
dec
and
sbb
mov
fwait
jno
jg
es
inc
loopne
jp
sbb
xor
repz
mov
mov
push
cwtl
xor
dec
arpl
jmp
mov
xchg
dec
mov
dec
dec
mov
dec
clc
nop
or
jnp
xor
dec
push
mov
enter
xchg
dec
pop
out
aaa
insl
mov
in
sub
add
dec
jns
andb
jmp
lock
lahf
pusha
pushf
enter
add
fsubs
stc
dec
pop
loopne
dec
lods
pop
popf
stos
or
jge
cwtl
pushf
pop
inc
lcall
cmp
stos
jns
xchg
jb
mov
imul
xor
adc
sbb
jmp
repnz
lods
ficompl
rol
push
inc
ljmp
add
jmp
movsb
xorl
dec
loop
sbb
in
jno
mov
dec
push
idiv
push
ret
pop
call
loope
or
sbb
mov
mov
arpl
pop
ds
xlat
movsb
and
xorb
sahf
mov
cmp
popf
mov
lods
lret
fiaddl
pop
mov
pusha
pop
dec
outsl
popa
aaa
ret
mov
cmp
fidivs
and
push
movsl
xorw
mov
jg
enter
cmp
mov
mov
jae
movsl
fisubs
shll
mull
pusha
sahf
mov
popf
push
ret
xchg
adc
xchg
sbb
lock
insl
shr
lret
dec
pop
repnz
std
clc
mov
jnp
fwait
bound
or
out
stos
xchg
add
cmc
lret
ficomps
es
push
lds
stos
enter
rorb
into
loope
adc
cmp
sbb
sub
adc
insb
popf
in
loope
or
mov
inc
ja
in
adc
xor
jns
fs
mov
push
addr16
fistpll
inc
aad
addb
es
mov
pop
hlt
das
cs
insl
nop
mov
sub
rol
inc
xor
dec
orl
xorl
xlat
jns
aaa
mov
jnp
jnp
inc
sti
sbbb
leave
insb
je
fucom
jns
lods
or
jns
adc
arpl
jmp
notl
lock
xchg
mov
call
push
movsl
and
mov
repnz
outsl
in
lea
sahf
imul
gs
mov
sbb
lea
outsb
data16
sahf
ret
aad
loop
addl
adc
out
cmp
dec
cmp
and
inc
and
dec
mov
cmp
in
xchg
pop
ret
shr
dec
test
scas
insb
mov
mov
adc
movsb
push
andl
in
cmpsb
pop
push
dec
cmp
xchg
ljmp
dec
cmp
jbe
jno
cmpsb
ja
nop
mulb
rorb
mov
xor
xor
daa
and
call
inc
pop
add
jno
stc
mov
mov
xchg
aad
xlat
enter
sbb
or
xchg
push
add
push
out
mov
and
jmp
xchg
iret
std
jnp
ret
dec
imull
and
outsl
sbb
stos
lret
fcoml
push
scas
push
push
nop
push
mov
and
or
or
lret
in
sub
cmp
cmpsb
and
add
push
adc
xchg
adc
sub
inc
push
outsl
pusha
lods
add
call
xchg
scas
xchg
stc
insl
icebp
sub
repz
mov
fwait
sub
dec
in
shll
or
or
enter
mov
test
push
lea
jae
repnz
sarl
mov
das
test
ret
dec
sar
jle
push
repz
jp
and
fs
mov
lock
or
pandn
pop
test
lret
mov
rolb
pusha
scas
lock
xor
or
out
push
push
ror
jg
fldenv
sbb
add
mov
lea
or
jg
mov
cmp
add
or
out
rcrl
jg
out
out
lahf
mov
scas
inc
aas
pop
or
int3
hlt
aad
imul
push
jg
ret
xchg
fsubs
ljmp
push
adcl
shll
cmp
js
adc
cwtl
call
aaa
cmp
stos
xor
shll
push
dec
lods
clc
pop
push
iret
mov
adc
sahf
sbb
fwait
stc
pop
outsb
dec
nop
sub
call
mov
mov
lods
pop
mov
sbb
stc
push
repz
lret
and
popa
clc
add
jg
dec
dec
cli
sub
dec
sahf
popa
pop
xchg
repnz
dec
pop
lcall
and
cmp
repz
das
lods
fdivrl
pop
scas
lods
lahf
add
cmp
sbb
clc
jmp
aas
sbb
in
or
xchg
jmp
ret
dec
push
out
pop
hlt
xchg
lods
pop
iret
in
enter
iret
xchg
scas
dec
adc
in
adc
sub
xor
lcall
push
stos
out
incb
jp
pop
cmpb
xchg
je
mov
xchg
sti
mov
inc
adc
cmp
loop
sahf
movsb
popf
mov
inc
xchg
push
scas
and
cmp
pop
test
into
sti
xchg
imul
jl
mov
hlt
dec
fisttpl
inc
push
adc
into
das
add
cmpsb
daa
or
adc
pop
repz
enter
jmp
gs
jp
push
andl
inc
jne
in
fwait
je
mov
pop
aaa
xor
mov
sub
adc
and
dec
jl
jo
dec
ret
sbb
inc
lret
movsl
jg
and
pushf
sbb
and
mov
jo
xor
insb
fwait
push
mov
dec
shrl
mov
dec
lahf
clc
cmp
push
jp
inc
sub
decl
and
cmp
sbb
mov
ljmp
mov
sub
and
js
inc
inc
add
ljmp
ret
aam
xorl
int3
sarl
sarb
xorl
sti
icebp
xor
sbb
frstor
and
sti
push
ret
fcomi
xchg
lods
lahf
jo
leave
pop
mov
pop
movsb
xor
and
mov
iret
cmp
repz
cltd
dec
aas
fildll
push
ret
insl
mov
add
jnp
jae
xchg
cmp
dec
cmp
iret
fwait
cmpsl
dec
sbb
sub
stos
jno
mov
or
push
ficompl
int
adc
aad
mov
popf
push
mov
js
sbb
ret
lock
add
pop
rcl
cmp
dec
popa
ret
adc
push
fcomps
cmc
in
mov
addr16
mov
sti
jmp
dec
jle
sbb
sub
jle
sub
jno
sub
inc
mov
sub
mul
out
pushf
fsubl
or
pop
jbe
mov
icebp
js
mov
sbb
ss
adc
stc
jne
jge
stos
fistpl
mov
sbb
lahf
mov
inc
cmpsb
or
jg
or
xchg
sbb
test
pop
imul
push
lock
jmp
add
fdivrp
mov
push
pop
jae
add
pop
imul
dec
movsl
test
and
inc
arpl
stos
fadds
adc
not
test
fisubrl
xchg
sub
sub
fdiv
imul
dec
jecxz
xchg
scas
fldl
sub
dec
dec
inc
out
sub
insl
pop
or
mov
flds
sbb
pop
test
jmp
test
mov
mov
lret
jmp
imul
inc
adc
sbb
outsl
adc
pop
lret
bound
arpl
loope
cmp
mov
jbe
push
cwtl
inc
insb
repnz
xchg
out
rorl
sahf
mov
leave
inc
imul
popa
and
repnz
int3
cmp
insb
aas
faddp
cmp
jle
xor
stos
cmp
dec
xchg
xor
ja
sub
roll
and
or
es
je
mov
cmp
rorb
cmp
hlt
cmpsl
sub
leave
roll
mov
pushl
ret
adc
inc
jmp
imul
cmp
inc
iret
mov
shl
sbb
jg
inc
xchg
test
jne
stc
enter
mov
std
loopne
mov
cmpsb
or
les
popf
pop
sub
push
dec
cltd
push
lcall
cs
jp
or
lcall
or
mov
addr16
pop
mov
adc
lods
xchg
ja
and
cmp
lahf
and
int3
or
sahf
jns
adc
push
stos
int
pop
inc
adc
xchg
or
mov
fmull
lock
sbbl
das
ss
cwtl
sbb
pop
push
add
push
cmp
sbb
leave
jmp
add
push
sbb
sbb
imul
sbb
int
jne
add
test
sub
push
mov
add
mov
int3
cli
aaa
jo
adc
sub
or
inc
ret
jmp
and
pop
fildl
pop
jno
repnz
cmp
add
aaa
xchg
mov
mov
insb
mov
jno
jns
cmp
test
and
or
daa
pop
xchg
cmpsb
leave
mov
and
pusha
sub
psadbw
aam
xor
in
cltd
aad
lock
cmp
addr16
inc
mov
mov
adc
insb
into
jbe
mov
adc
es
test
mov
out
mov
sbb
test
jo
dec
fisubl
push
ret
or
arpl
jg
jbe
push
ret
inc
mov
xchg
nop
insb
ret
lahf
ret
int3
xlat
pop
lods
inc
push
and
fstpt
mov
adc
lea
xchg
pop
dec
xchg
fs
popa
inc
pop
xchg
cmp
inc
pop
test
pop
add
mov
mov
sbb
and
dec
push
iret
data16
jp
aam
mov
cmp
js
insb
rclb
jnp
push
cmp
repnz
repz
out
dec
dec
push
mov
cmpl
popf
shlb
cmp
je
dec
adc
push
std
xchg
push
mov
lock
push
cmp
pop
adcl
imul
loopne
in
xor
in
daa
orb
stos
ret
rclb
hlt
repz
sub
loop
es
fnsave
ficoms
dec
push
dec
ficoml
xchg
push
xor
inc
in
inc
lahf
scas
adc
ret
pushf
mov
inc
jge
sub
jge
jb
dec
dec
inc
outsb
push
push
ss
sbb
mov
lods
out
xor
pushf
mov
movsl
loop
inc
cli
pop
mov
ret
adc
aaa
xor
mov
cmpsb
jo
push
daa
mov
out
ret
inc
and
jmp
imul
enter
cli
test
pop
bound
daa
fcmovne
scas
ljmp
mov
jge
gs
mov
insb
mov
add
inc
in
push
mov
das
test
lea
bnd
je
add
add
mov
or
das
movsb
jne
inc
cld
adc
xchg
cld
stos
jl
xchg
sbb
jne
xchg
sti
lahf
pop
xor
push
pop
shl
pop
mov
adc
rcr
adc
cli
dec
sub
adc
xchg
inc
inc
cmp
int3
mov
aam
movsl
and
sbb
inc
in
insl
pop
pop
out
jmp
push
pop
leave
pop
jb
roll
adc
or
adc
mov
cwtl
xlat
lock
stc
add
in
addl
adc
pop
dec
xchg
out
inc
mov
cmpsb
jae
or
add
inc
dec
mov
lock
jne
xchg
sbb
dec
insl
lcall
cld
in
movsl
dec
rorb
mov
popa
sbb
ljmp
das
arpl
adc
inc
pop
jge
push
sub
jae
inc
sub
cmp
push
je
xchg
shll
fsts
pop
add
mov
fcmovnb
jo
xlat
in
mov
inc
and
outsl
pop
sbb
decl
rorl
cmp
fisttpll
xchg
in
sbb
hlt
mov
pop
movsb
cmp
outsl
push
mov
or
cmp
ljmp
rolb
pop
jb
pop
cmpsb
jae
roll
mov
sbb
clc
aaa
push
inc
lret
xchg
icebp
sahf
mov
js
lods
inc
movsl
add
cmp
xor
insl
xchg
or
clc
out
scas
data16
daa
pop
rcrb
push
add
jle
addr16
inc
jg
dec
jb
sbb
inc
jne
push
cli
aaa
mov
add
sbb
int3
and
jae
in
aam
out
popf
mov
adc
sbb
adc
scas
arpl
fsts
pop
add
sub
mov
fs
jle
or
and
mov
mov
xchg
shlb
dec
out
lret
rcll
mov
js
inc
imul
cmp
je
aad
in
les
icebp
mov
xchg
mov
pop
and
int3
loopne
dec
xchg
fiadds
outsb
pop
xchg
je
ds
or
mov
inc
xchg
dec
aas
cmp
decb
mov
lock
fucomp
es
gs
cltd
fwait
bnd
or
mov
imul
cld
lret
jl
add
lock
stos
or
bound
js
inc
dec
adc
cld
or
lock
gs
loope
pop
pop
imul
popa
pop
mov
sub
imul
js
sub
dec
test
sbb
push
outsb
mov
add
ja
jle
push
add
xor
and
add
clc
jmp
jp
adc
repnz
sub
lcall
jl
sub
xor
ja
out
popf
inc
dec
mov
xchg
add
adc
popa
xchg
ret
mov
mov
mov
mov
xchg
cmpsl
decb
push
adc
out
loope
insl
rcrl
jge
mov
add
loopne
imul
xor
sub
iret
dec
push
movsl
pop
inc
aad
xchg
outsb
gs
dec
nop
jns
outsb
sub
lds
or
cmp
das
xor
addr16
call
mov
clc
inc
dec
les
test
xor
dec
xchg
lock
mov
std
mov
enter
dec
cmp
out
cmp
je
rorl
ds
int
fstpt
push
push
xor
xchg
pop
xchg
shll
push
mov
insb
mov
push
inc
jne
inc
fildl
fistps
add
push
arpl
sub
ds
loop
arpl
push
loop
inc
leave
or
and
pop
add
xchg
cmpsb
fidivrs
loopne
imul
pop
ret
imul
rorb
shl
pop
jle
popf
data16
sub
les
out
scas
test
cmp
mov
in
cld
test
xor
xchg
xlat
inc
test
cmp
lods
mov
fisubl
mov
inc
dec
pop
xor
dec
xchg
sub
push
ja
cmp
fidivs
jns
push
in
mov
mov
jbe
sbb
mov
fcompl
lds
add
push
stc
lcall
call
cmpsb
dec
cmc
dec
fists
adc
mov
inc
sahf
mov
es
mov
ret
jg
fdivr
mov
cmp
dec
fnstsw
adc
add
fcoml
fdivl
movsb
xchg
leave
cs
es
sub
pop
repz
mov
adc
faddl
stc
out
fsubs
push
js
out
mov
int
push
xchg
sub
fwait
jae
lcall
outsl
xchg
insl
xlat
cmp
mov
sahf
sbb
jmp
mov
jle
sub
hlt
push
pop
cmp
outsl
inc
int
clc
inc
aad
adcb
xor
xor
test
mov
push
idivb
movsl
sub
cltd
push
adc
push
push
add
or
jle
leave
push
mov
outsb
aam
adc
fcompl
rcll
mov
and
inc
outsb
rcll
test
dec
shl
pop
mov
inc
pop
mov
fisttps
xor
mov
das
mulb
xor
xchg
stc
xchg
outsb
hlt
enter
mov
test
cmp
and
in
mov
push
add
das
dec
inc
push
jb
and
sbb
and
and
push
and
lock
xchg
pop
mov
lahf
inc
test
scas
xchg
shrb
jp
scas
addr16
scas
pop
mov
xchg
mov
sbb
push
movsb
adc
fiaddl
in
jnp
sbbb
push
mov
mov
inc
mov
push
mov
adc
inc
gs
lea
lret
sbb
jns
push
adc
jecxz
sub
in
mov
sahf
sub
adc
mov
es
and
test
or
xor
inc
in
daa
dec
cmpsl
jo
adc
jecxz
dec
add
icebp
mov
insb
test
repz
and
xlat
jle
dec
xorl
ljmp
add
and
cmp
jmp
dec
les
add
cmp
cmpsl
mov
inc
je
rorb
bnd
loop
pop
push
test
dec
mov
inc
orb
jg
sti
mov
push
jl
mov
cmpsl
negb
xchg
push
push
push
sahf
icebp
fidivs
fdivrp
in
pop
out
addl
and
push
in
mov
sbb
sbb
jbe
xchg
pop
inc
or
sub
aas
stos
inc
aad
out
mov
pusha
mov
loopne
adc
jo
pop
jnp
xlat
or
or
add
jb
add
sbb
scas
in
inc
flds
lret
aad
hlt
jo
lret
loope
int
psrlw
inc
jle
loope
sarb
shlb
scas
sahf
popf
mov
adc
mov
stc
out
mov
sbbl
sbb
cmp
xchg
fadds
xchg
cmp
cmp
xchg
cmpsl
and
aad
ret
aaa
les
jg
out
dec
mov
xor
cmpsl
xor
sub
xlat
mov
sahf
sahf
ljmp
dec
sbb
lea
cmp
out
mov
cmp
inc
test
imul
test
sub
and
das
sub
xor
sar
mov
add
fdivp
dec
xlat
and
jl
clc
iret
shll
pop
xlat
andb
repz
sbb
cmp
imul
cli
mov
jo
sub
xchg
dec
xchg
cmp
daa
sti
ljmp
shlb
loop
xor
stc
mov
ret
cli
pusha
add
lcall
fildll
xchg
test
cmp
mov
scas
int
popf
movsl
rorl
sbb
push
cmp
mov
cmpsb
hlt
outsl
adc
int3
cltd
xchg
xor
pop
pmullw
scas
shr
or
jge
nop
jp
aad
arpl
imul
stc
sahf
xlat
sbb
outsb
and
imul
push
jae
stos
xchg
decl
dec
inc
mov
test
nop
inc
pop
test
xchg
jbe
sbb
hlt
loop
jo
rcr
add
mov
ret
push
ficoml
in
cwtl
jle
jae
clc
lea
iret
cs
cmc
adc
inc
dec
and
test
mov
inc
leave
xor
sub
mov
call
lret
ja
outsl
jl
pop
loope
fnstcw
mov
sbb
lea
aam
jle
fimull
xor
daa
xchg
dec
ljmp
stc
mov
xor
xchg
or
mov
outsb
rep
xchg
push
xchg
daa
xchg
add
push
int
cmpsl
xor
jecxz
mov
adc
subl
cmp
pop
mov
or
or
sbb
ret
into
sti
cmp
xor
sub
mov
ja
jle
mov
divb
adc
push
mov
push
icebp
or
push
inc
inc
xor
sbb
push
inc
sbb
int
movsl
fwait
mov
or
mov
and
sub
add
xorl
adc
shlb
pavgb
roll
cmp
enter
or
js
dec
mov
sahf
xchg
cmp
fiaddl
xor
sbb
jns
fwait
in
fisttpll
inc
xorl
pop
daa
and
pop
sub
fidivl
cld
popf
xor
mov
xor
fidivs
iret
xchg
cmp
inc
mov
fimull
and
in
inc
adc
in
dec
repz
cmp
arpl
mov
inc
rclb
lcall
mov
das
jo
andl
insb
mov
gs
sbb
jb
xor
ficoml
fcomps
sub
int3
mov
lahf
push
push
jge
pop
jne
inc
stos
stc
mov
pop
and
xor
and
aas
mov
xchg
pop
aad
inc
push
mov
mov
dec
fldenv
loope
add
or
roll
jmp
or
lahf
add
sbb
sbb
adc
sub
jecxz
iret
pop
adc
ret
mov
jp
enter
push
xor
fsubrl
push
sub
inc
clc
popa
sbbl
call
out
outsl
xchg
mov
add
fdivl
pop
inc
mull
jno
adc
add
insl
pusha
ds
dec
and
faddl
dec
xchg
or
or
fs
cmp
pop
leave
rcll
es
cmpsl
xchg
mov
mov
outsl
push
mov
inc
push
sahf
cwtl
cmp
xor
jg
or
das
and
nop
pusha
or
rcrb
pop
mov
jmp
cltd
mov
add
add
shll
jp
hlt
xchg
adc
fsubr
sahf
lret
push
in
test
sub
dec
pop
mov
xor
jle
jge
sub
aas
dec
imul
insb
and
mov
fwait
shl
ljmp
mov
insb
cmp
inc
mov
jmp
insl
gs
push
mov
push
lea
jmp
xchg
adc
cmpsb
push
je
push
push
push
sbb
imul
popa
lahf
stos
jle
scas
bound
test
push
stos
mov
cmp
pop
and
jl
jle
mov
lahf
inc
mov
mov
sub
inc
sub
mov
inc
sti
sub
mov
lret
pop
pushf
xor
ja
neg
pop
stos
loopne
std
fs
inc
clc
test
std
and
dec
lret
addl
push
mov
in
imul
test
and
jne
test
mov
jb
out
inc
mov
stos
scas
test
or
cmc
stos
xchg
scas
and
inc
mov
pop
out
cmpsl
xor
and
arpl
add
lds
pop
adc
dec
es
bound
cmpsl
pop
addl
stos
or
fsubl
gs
fbld
push
adc
sub
jo
jns
pusha
imul
add
lcall
jns
inc
fsubl
push
shrl
add
mov
sbb
sbb
push
sti
sbb
add
fsubp
sub
jmp
push
and
popf
xchg
mov
int
repz
jb
hlt
nop
xchg
push
add
fisttps
mov
mov
lock
insl
rclb
or
aaa
notl
mov
and
pop
add
sub
pop
push
mov
dec
iret
int3
jle
push
xor
xchg
and
addb
mov
xor
pop
jbe
repz
mov
push
jnp
cs
pop
pushf
adcl
mov
ljmp
push
mov
mov
stos
sbb
sbbl
mov
mov
out
shl
or
mov
mov
add
xchg
lret
cmp
mov
aam
in
mov
sbb
fs
mov
mov
jge
sar
sbb
movsl
mov
and
mov
cli
cmp
mov
mov
xchg
ret
test
or
mov
insb
mov
xor
aad
orb
out
or
inc
outsb
adc
lahf
cmpb
sub
xchg
cli
pop
cmpsb
loope
shll
mov
leave
push
ja
int3
inc
mov
fs
and
insb
dec
jno
fmulp
xchg
sub
mov
sbb
dec
lock
jp
bound
add
dec
outsl
test
popf
aas
xchg
push
das
or
je
sbb
cmp
loop
xchg
std
cld
push
sbb
iret
sbb
mov
icebp
pop
xor
push
add
ljmp
fcomps
mov
dec
jo
rclb
push
loope
and
cs
out
mov
insl
and
or
gs
add
push
inc
cmp
popa
add
testb
cmp
or
cmp
faddl
fmul
iret
mov
jle
vmread
or
aad
int
imul
insl
add
lahf
mov
inc
jmp
aaa
movsl
dec
xor
jno
mov
xor
mov
subl
repz
lret
push
clc
imul
and
mov
sub
add
or
iret
aas
cmp
fldcw
inc
mov
les
outsl
cmp
add
ja
push
mov
push
push
pop
push
fiaddl
loop
xchg
xor
jl
dec
and
out
sbb
repz
sarb
dec
sbb
xchg
lahf
pop
fistpll
pop
in
mov
sub
das
test
mov
sbb
push
pop
jle
fnstenv
xchg
xor
pop
pop
xor
inc
nop
or
jae
xor
imulb
mov
test
std
fstpl
push
shl
lret
cmp
ss
sbb
cmpsb
das
adc
lods
mov
outsl
xchg
or
and
testb
cwtl
mov
mov
pop
icebp
sti
pushf
cmc
cld
gs
inc
jp
in
dec
mov
jg
adc
cmp
les
es
call
data16
test
xchg
aad
inc
and
imul
cmp
dec
or
insb
inc
sti
sbb
push
mov
lods
divb
dec
cli
pop
addr16
jge
xchg
jnp
les
sbb
jecxz
xchg
sar
insl
push
mov
repnz
pushf
out
cwtl
xchg
push
mov
ss
pop
push
cmp
xlat
lods
inc
xor
push
iret
or
imul
js
mov
adc
les
add
adc
xchg
jne
xlat
cmp
push
popa
mov
in
mov
dec
sahf
cmpsl
mov
int3
sbb
and
aam
cwtl
rolb
adc
inc
in
bnd
inc
lea
and
mov
pop
subps
add
xlat
dec
pusha
mov
in
sub
pushf
xor
outsb
negl
xor
sarb
jle
mov
sbb
mov
or
sbb
inc
scas
and
cmp
enter
sub
xchg
lods
pop
ja
outsb
jmp
xlat
adcl
call
adc
stos
ret
jecxz
or
addr16
sub
jge
mov
negb
cmp
sbbb
mov
pop
push
cmc
xor
jmp
loop
push
lahf
dec
into
xor
xor
sub
repnz
mov
lret
dec
insb
xchg
sub
lcall
in
cs
jae
and
or
dec
push
add
shlb
and
stos
stc
xchg
mov
movsl
loopne
mov
clc
test
test
ss
loop
mov
dec
cmpsb
aam
push
repnz
push
add
cmp
pop
out
nop
jecxz
stos
fld
rcr
pop
lret
xchg
fwait
xchg
sbb
cltd
mov
jo
out
mov
enter
lcall
fs
test
dec
movsb
aas
push
ficoml
push
outsl
mov
inc
decb
rclb
mov
stos
pop
js
xor
imul
call
xchg
or
mov
adc
test
push
in
inc
rcll
mov
inc
pop
pop
fadd
xor
fiaddl
lds
popl
imul
sti
repz
mov
jp
hlt
push
inc
and
inc
loop
loop
sti
mov
push
insb
adcb
inc
into
in
or
rclb
test
mov
push
test
std
fcompl
vunpcklps
fisubrs
roll
push
sub
and
inc
ljmp
std
mov
inc
icebp
gs
pop
mov
out
ja
lcall
adc
dec
jnp
inc
mov
aad
sbb
mov
xor
xorl
pop
mov
cld
push
jle
clc
arpl
fsts
rorl
js
mov
jl
push
and
add
adc
dec
icebp
push
gs
sbb
lea
lea
out
mov
cmp
sarl
pop
clc
sub
add
sti
scas
pop
dec
and
push
and
mov
mov
or
fsubrs
incl
jae
push
pop
sub
je
out
and
andb
adc
jbe
sbb
adc
adc
or
mov
inc
ja
les
jae
call
pop
stos
ss
jnp
sub
push
iret
stos
mov
outsb
jl
add
adc
popw
push
cmp
and
mov
dec
push
cmp
push
pushf
iret
jmp
lea
enter
inc
lea
lcall
lods
iret
movsl
sti
xchg
xchg
clc
fldt
mov
repz
lret
sub
cmpl
or
ficomps
xlat
aam
jmp
cmp
cmp
mov
push
push
add
enter
mov
jb
scas
pop
pop
pop
out
sbb
push
pop
dec
mov
mov
ljmp
and
mov
cmc
js
lcall
fdivs
movsl
inc
jne
fisubs
or
xor
movsb
sbb
orl
sahf
and
push
or
cwtl
arpl
lods
jno
fucomip
or
adc
fs
fisubs
jnp
ficoml
xchg
adc
in
enter
stos
rcr
xchg
loopne
aas
fisubrs
outsb
inc
ficomps
gs
and
in
add
movsb
ret
mov
fildll
dec
adc
arpl
rorl
sahf
jns
mov
fsubrs
mov
sti
lods
mov
mov
xchg
ja
ud1
rcrl
rorl
aad
nop
sbb
or
rorl
pop
lock
adc
jmp
pop
mov
inc
pop
cmp
test
mov
test
stc
push
aam
adc
xchg
inc
out
jl
or
mov
daa
loopne
adcl
dec
push
push
jg
or
fidivl
jl
stos
mov
mov
int
push
test
pop
data16
arpl
test
out
fistl
xchg
xchg
sub
pop
lcall
add
orl
or
mov
sbb
jg
xor
lahf
and
movsb
out
mov
cs
mov
insl
movsb
movb
push
sbb
cmp
test
movsb
adc
adc
imul
data16
ret
jmp
repz
cmp
popf
adc
cmp
cmp
mov
or
je
lcall
jg
pop
int3
pushf
adc
imul
sahf
js
icebp
push
lea
xchg
push
cli
clc
loop
xor
pop
inc
pop
cmp
sbb
fwait
push
ljmp
pop
inc
mov
sbb
sub
jae
sub
lock
dec
xchg
jo
test
xor
jae
pushf
cmp
mov
push
bound
xor
rorl
cmp
lods
imul
xchg
dec
adc
jns
mov
xchg
ficomps
xor
cmp
push
cmpsl
sub
mov
loope
xor
ds
mov
fwait
dec
lcall
dec
aad
outsb
imul
cmp
out
xor
push
cmc
out
jne
xor
jg
aaa
cltd
das
add
dec
into
or
pop
ret
repnz
popf
mov
dec
xchg
mov
sbb
add
pop
sbb
lret
adc
push
test
clc
js
lock
and
push
hlt
jno
in
add
sarl
shl
and
jp
mov
gs
push
sub
out
adc
jae
and
add
into
xchg
xor
sub
mov
push
pop
inc
push
inc
in
or
push
lds
and
repz
mov
xchg
cmp
fnstcw
cld
je
mov
nop
out
push
aaa
mov
mov
das
fst
shlb
popa
ljmp
jg
inc
aam
xchg
and
push
xor
cltd
stos
sti
loope
cmp
lret
cmp
test
sbb
fwait
into
out
movb
dec
outsl
gs
xchg
imul
pop
push
cmp
test
sbb
repz
aas
jns
xchg
sbb
or
cmpsl
int3
int
ret
inc
ja
mull
adc
imul
ret
jl
cs
push
pop
andb
icebp
mov
dec
mov
shrl
lahf
pop
popf
push
scas
movsl
movb
test
xor
mov
aad
int3
pop
push
inc
mov
xchg
xchg
fildll
push
ljmp
jg
inc
sbbl
xchg
gs
mov
mov
pop
xchg
pop
loope
ficompl
pusha
clc
sub
outsl
inc
rolb
jns
inc
pushf
jg
inc
icebp
shrb
sub
out
dec
out
pop
into
or
cs
mov
inc
mov
push
fucom
loopne
cs
dec
incl
test
pop
out
cltd
mov
pop
fs
in
fdivrs
xor
inc
push
lds
pop
rcrl
xlat
jle
and
mov
ja
stos
mov
xor
mov
fnsave
inc
scas
mov
aas
in
inc
repnz
adc
dec
cld
mov
inc
jge
ljmp
iret
adc
and
inc
add
inc
movsb
xor
cmpsl
aam
fsubp
mov
jge
test
rcr
jle
sbb
xchg
insl
bound
imul
in
jae
sbb
out
imul
sub
cmp
outsl
push
movsb
pop
adc
aad
rolb
stc
rclb
dec
pop
xor
enter
icebp
in
mulb
xchg
xchg
sbbl
gs
aam
lods
and
movsb
sbb
repz
in
and
adc
stc
imul
loope
pop
arpl
inc
ret
int
jecxz
dec
outsl
out
cmp
mov
dec
test
fisttpl
add
flds
sbb
add
jle
inc
sbb
ljmp
data16
adc
das
fwait
lcall
adc
mov
data16
insw
stos
push
movsb
loopne
mov
pop
dec
xor
fisubl
es
jmp
mov
lahf
cmp
out
aam
xor
test
ret
repnz
cmp
insl
cld
and
mov
mov
push
sahf
imul
jno
dec
int
fs
fldenv
mov
and
arpl
xchg
mov
sbb
xchg
pop
mov
testb
and
push
hlt
mov
mov
bound
aam
sbb
sahf
imul
sub
call
jnp
popf
or
cmp
jle
mov
clc
pop
inc
lcall
loope
push
arpl
repz
sub
cmpsl
mov
lds
stc
mov
xor
in
ficoml
pop
gs
sbb
jecxz
sarb
jns
in
imull
push
sub
xor
dec
cmp
sbb
cmp
mov
mov
cwtl
idivl
fstl
and
ss
lds
push
subb
andl
adc
aam
add
push
sub
mov
or
dec
rcrb
outsl
pop
mov
pusha
or
dec
cmpl
fsubr
adc
jnp
push
inc
and
out
cli
movsb
push
cmp
and
outsl
fldt
pop
or
cwtl
push
cs
movsl
lahf
xchg
scas
adc
dec
data16
in
adc
clc
adc
sbb
or
mov
mov
outsb
in
lret
faddl
mov
test
add
jbe
push
aam
adc
mov
adc
pushf
mov
cmpsl
xor
add
adc
adc
movsl
fistps
in
xor
xchg
scas
dec
lahf
sbb
dec
push
pop
movsb
insl
cmp
mov
xchg
pop
push
jbe
xchg
bound
push
inc
push
sbb
mov
mov
hlt
xchg
jle
iret
xor
pop
adc
les
shlb
ljmp
int3
pop
add
lcall
movsl
xchg
les
loop
sbb
pop
push
push
into
iret
cwtl
xrelease
inc
movsl
pop
nop
pop
jecxz
xor
dec
rcrl
mov
push
cmp
call
sti
mov
or
xchg
push
adc
shrl
xchg
dec
sbb
mov
ss
aaa
pop
dec
sbb
cmp
jmp
mov
mov
inc
lock
jmp
cmp
push
xor
jae
sub
cmc
cmpsl
call
mov
mov
pop
mov
inc
xor
cmp
push
mov
xchg
push
clc
or
addl
movsl
and
test
ret
testl
mov
mov
or
pavgb
roll
add
sahf
sub
mov
and
xchg
push
lods
fmull
outsb
cmpsl
jnp
or
stos
pop
addl
arpl
mov
fs
sub
add
shl
push
mov
fwait
add
lods
cmc
movsl
dec
pop
inc
dec
xor
sarl
stos
out
shlb
in
adc
mov
lock
fincstp
mov
je
inc
dec
pop
stos
pop
pushf
outsb
push
or
test
jne
rcrl
fisubl
mov
mov
dec
in
dec
dec
ret
ds
sbb
out
adc
or
lods
icebp
xorb
ret
mov
pop
xchg
sub
test
xor
imul
fisubs
jne
cmp
lea
sbb
pop
mov
sarb
cli
mov
mov
loope
dec
push
cs
xchg
fisubrl
cltd
dec
mov
mull
adcl
sarb
imul
dec
loope
cmc
popa
push
pop
xchg
xchg
leave
ret
push
add
and
sub
test
adc
nop
pop
jnp
cmp
mov
jne
cmp
test
test
daa
xchg
sbb
fcompl
xor
or
sbb
pop
stos
cltd
xchg
out
ret
repnz
fidivl
push
xor
push
cmpsl
mov
dec
or
je
lods
push
jae
ljmp
aad
mov
sahf
jae
jmp
cmp
fs
jle
in
rclb
imulb
cmp
fs
mov
jno
jl
jno
shr
das
jns
xchg
cltd
dec
ror
jbe
cmp
nop
out
add
pop
in
add
nop
or
mov
add
mov
pop
xor
lods
fnstsw
test
sbb
mov
pop
imul
pop
push
and
and
jg
insb
mov
mov
rcrb
pop
xor
pop
cmp
adc
repnz
push
pop
movsb
pop
pop
loopne
in
lea
dec
sub
push
mov
fcoml
push
add
jl
das
arpl
mov
add
push
fldt
push
sahf
andl
push
lock
inc
pop
jecxz
and
xchg
hlt
dec
movsl
add
enter
int
sbb
and
stos
or
fidivs
insl
mov
mov
outsb
jbe,pt
arpl
sub
add
cmpsb
sbb
mov
sub
out
out
mov
jnp
jmp
jae
pop
inc
andl
jbe
pop
mov
jno
pusha
lcall
jb
add
lret
adc
push
les
sub
push
push
rcrl
and
jmp
mov
sub
sub
in
and
sbb
popl
mov
in
imul
nop
aad
jb
in
pushf
dec
push
je
enter
xchg
mov
cmpb
mov
push
testl
adc
mov
aad
and
add
lahf
pop
pop
das
mov
flds
data16
or
cld
popa
icebp
lods
sti
mov
pop
lcall
pushl
mov
cmp
ret
mov
popl
dec
in
in
dec
pop
imul
movsb
enter
aam
mov
adc
push
fisubs
addr16
je
mov
pop
aas
insb
push
lds
lock
scas
or
pushf
inc
inc
std
popa
loop
lahf
das
or
int
mov
jl
enter
hlt
add
leave
jne
sahf
mov
add
cmp
mov
add
shrl
mov
ret
and
cmp
jl
push
mov
sbb
and
jb
sti
out
mov
sbb
push
mov
in
fisttpll
fidivs
inc
sahf
outsb
push
sbb
int
aam
xchg
jnp
mov
dec
add
pop
push
jp
pop
arpl
dec
jno
je
mov
js
nop
ret
xchg
sub
sub
addr16
cli
inc
and
push
dec
test
das
cltd
or
into
sarb
or
jl
add
aaa
fs
in
imul
add
fimuls
pushf
sahf
xor
sub
lret
orb
and
pusha
pop
ljmp
xlat
iret
fildll
int
loop
aam
imul
or
mov
bound
pop
sbb
mov
pop
test
pop
fcomps
lods
xchg
or
cmp
js
sbb
mov
sti
fsubs
mov
into
xchg
pusha
and
sahf
push
mov
es
and
repnz
push
sti
shll
in
movsl
jo
sti
add
fistl
pop
xor
imul
lcall
fsubrs
loopne
dec
inc
aas
andb
ds
sub
fcmove
out
cmp
out
push
call
dec
shll
mul
pop
push
xchg
clc
iret
roll
pop
jge
mov
pop
ret
pushf
cmpsb
cmpsb
and
xchg
mov
jl
hlt
pop
pop
daa
pop
xchg
insl
inc
imul
mov
faddp
cmpsb
lods
fsubrl
aas
adc
xor
dec
stc
jmp
mov
in
xchg
lods
cmp
pop
jnp
pusha
mov
cmp
leave
les
mov
aad
fisubl
pop
cmp
xor
jge
insl
fsubr
xor
jno
lea
sbb
mov
imul
test
fmuls
xchg
push
fistpll
mov
sbb
push
bts
xchg
int3
pop
mov
sarl
or
inc
into
cld
mov
std
mov
nop
into
xchg
bound
out
jns
push
push
pop
push
cltd
sbb
adc
cmp
sub
xchg
out
lods
into
push
add
aam
jne
sub
pushf
loop
scas
xchg
push
movq
dec
fnstcw
xor
jmp
mov
mov
repnz
cltd
out
fcmove
stos
clc
pop
mov
mov
adc
lds
or
mov
jmp
cmp
pop
mov
sbb
sbb
pop
inc
mov
jp
fwait
xchg
xchg
xchg
dec
xchg
popa
push
dec
adcl
mov
jne
mov
and
jnp
fucomip
dec
out
test
or
and
pop
imul
xor
fwait
mov
test
lcall
jecxz
mov
pop
jbe
sub
and
lret
out
jbe
mov
fs
cmp
cld
imul
inc
add
mov
push
xor
je
inc
cmp
dec
adc
fadd
mov
or
lahf
cli
push
mov
inc
dec
mov
stos
add
and
movsl
leave
dec
push
inc
push
pop
mov
into
inc
aad
mov
push
push
std
sbb
iret
cmp
xchg
pop
sub
jo
xorw
jp
dec
or
jne
insl
nop
pop
loop
pop
rcl
into
lods
xchg
mov
jge
addr16
cmp
lahf
jl
dec
imul
cmp
mov
es
inc
lea
and
jo
rorl
or
js
and
pop
and
mov
sub
xchg
mov
xchg
sbb
iret
mov
xor
push
jne
mov
mov
push
cwtl
dec
adc
imul
lret
cmpsl
lret
xchg
mov
pop
scas
scas
or
push
pop
jp
dec
sub
sarb
sbb
mov
inc
sarb
sub
sbb
aaa
xor
sub
dec
cmp
outsb
or
loope
sbb
ja
mov
xor
fistpll
adc
test
loop
lahf
ss
fwait
xchg
fidivrs
ja
in
aaa
lock
enter
push
push
pop
movsb
or
nop
add
fcoms
and
sbb
rcrb
call
ja
push
imul
arpl
mov
or
jo
ds
sbb
inc
inc
jbe
jg
sbb
push
shl
movb
mov
fstpt
dec
dec
in
faddp
sbb
loopne
mov
out
mov
enter
or
adc
push
and
mov
cs
or
je
fwait
and
xor
hlt
in
and
lret
icebp
lock
lods
aad
push
or
mov
lcall
push
and
adc
cmp
push
mov
es
jge
sbb
mov
push
sbb
ss
leave
insl
jbe
xor
mov
xor
inc
lock
lods
mov
mov
sbb
arpl
arpl
scas
imul
cmp
inc
mull
lcall
into
lods
imulb
xchg
xor
sbbb
test
cmc
mov
popa
outsl
inc
mov
cli
cld
lods
push
test
lcall
pop
mov
xchg
enter
mov
mov
mov
test
adc
addr16
or
cmp
mov
fidivs
xchg
inc
int
int3
xor
pop
pop
out
fists
sub
addr16
icebp
mov
popa
cmpsl
pop
xor
outsb
pop
cmp
adc
pop
lds
fstps
adcb
rcl
fsts
jne
fimull
in
scas
mov
pusha
or
jb
fs
mov
subb
mov
insb
or
stos
pop
ret
xor
or
arpl
adc
or
dec
adc
pop
pop
xor
adc
fwait
bnd
out
dec
add
push
sub
push
xor
jecxz
and
cmc
mov
sti
imul
push
cmpsb
cmpsl
lods
enter
pop
jge
pop
test
pusha
xchg
outsb
and
ret
mov
jae
es
shr
sub
add
adc
insl
push
inc
push
in
mov
aam
jecxz
xchg
cmp
cmc
mov
mov
es
mov
or
lods
xchg
inc
shrb
push
fld
and
fidivrs
imul
adcb
mov
and
push
xlat
xor
mov
mov
add
xchg
inc
dec
mov
jp
or
xchg
pop
frstor
sub
aaa
int3
sbb
jne
iret
inc
lea
sub
or
leave
pop
sub
sti
daa
or
stos
push
dec
test
dec
popa
adc
mov
adc
sbb
xor
bound
imul
in
ret
lcall
sub
push
aad
and
stos
mov
push
aad
xchg
inc
popf
cwtl
pushf
fiadds
ja
sbb
das
cmp
test
inc
sub
mov
into
fcmove
popa
inc
out
or
sbb
ljmp
push
insb
out
sbb
sub
test
xchg
stc
or
pusha
in
data16
mov
aas
add
sbb
ret
cs
fsub
jle
xchg
in
arpl
inc
xor
scas
movsl
aam
push
mov
cwtl
in
inc
adc
fnstsw
inc
fstps
fiadds
fisubl
dec
push
movsb
leave
fdivrp
mov
fsqrt
xchg
cmpsb
mov
test
aad
jnp
jae
sahf
test
inc
dec
jl
aas
iret
mov
sbbl
test
or
repz
inc
test
or
ja
pusha
adc
add
cs
clc
push
rclb
cmp
mov
and
pop
loop
sub
xor
and
cwtl
jg
aam
fsubl
sub
cltd
outsl
xlat
jae
popa
pop
lret
cmpsb
in
and
ljmp
sub
fsubr
xchg
inc
push
out
cs
out
jl
popa
iret
mov
add
push
jp
popl
testb
insl
das
push
inc
repz
mov
jle
cltd
test
xor
aaa
xchg
sahf
stos
mov
and
and
sahf
jno
mov
test
fsubrp
push
das
out
add
or
xchg
je
sbb
ret
lahf
sub
incb
cmp
cmpsb
negl
and
jns
cmp
ret
ret
jg
in
xor
xchg
in
push
push
roll
mov
gs
sub
pop
stos
lods
outsl
sarl
cmp
mov
and
sahf
adc
pop
fmull
pop
fdivl
xor
mov
call
xchg
jp
jp
icebp
lcall
std
and
inc
repz
mov
cltd
mov
xor
fxch
imul
push
lods
xchg
mov
push
pop
ljmp
and
inc
xchg
arpl
sti
repnz
pushf
jnp
jnp
mov
inc
and
out
lock
shrb
in
cmp
pop
lock
adc
test
les
mov
or
inc
cmp
add
int
lret
inc
sahf
mov
inc
pop
push
mov
cmp
jne
mov
fs
mov
sub
mov
fstps
cmp
xacquire
sub
cmp
sbb
jne
or
add
in
mov
testl
dec
mov
dec
xchg
mov
or
adc
mov
adc
in
xor
popa
sbb
mov
in
push
xor
pop
cmp
mov
adc
sbb
gs
js
push
negl
stos
mov
mov
xchg
pop
pop
popf
test
movsl
inc
dec
fdivr
mov
mov
lcall
inc
mov
nop
xor
int3
inc
test
int3
and
les
sbb
ja
addb
insb
lea
setle
mov
stos
and
movsb
lahf
xchg
push
enter
out
stc
pop
data16
clc
lods
pop
jge
ret
testl
popa
out
test
sbb
ss
dec
mov
out
or
mov
inc
repnz
insb
mov
or
std
and
call
rorb
inc
ror
mov
adc
xchg
jmp
add
xchg
or
mov
inc
ret
jg
adc
sbb
in
sub
lret
inc
jmp
ret
popa
xor
dec
out
cmpsb
fs
shlb
mov
sub
and
and
push
sub
ss
cmpsb
cwtl
push
adc
stos
sahf
adc
sub
shll
lds
mov
push
sbb
add
lcall
xchg
cltd
loopne
xchg
push
in
ficompl
movsl
xchg
jecxz
xor
nop
add
jecxz
pmaxub
jnp
inc
shlb
scas
pop
and
into
sbb
dec
cmpsl
push
jle
xchg
mov
rol
xchg
inc
sar
push
xchg
out
insb
fimuls
inc
xor
lds
movsl
dec
enter
popa
push
inc
pop
sub
pop
dec
mov
mov
jbe
adc
add
xor
and
mov
mul
shrl
aam
lock
and
push
sbb
aam
mov
adc
dec
outsb
stos
cmp
cmc
lds
lds
jb
sbb
in
cs
adc
mov
cltd
incb
dec
pmaxub
jnp
sub
test
aad
rorl
dec
inc
cmpsb
lea
mov
scas
dec
push
mov
mov
push
sbb
ror
adc
fcoml
xor
cmp
mov
lahf
cmp
sti
pop
mov
into
out
push
cli
fsubs
pushf
cvttps2pi
ljmp
sbbl
mov
enter
inc
pop
dec
pop
loope
shr
aas
inc
dec
adc
imul
xchg
cli
outsb
aas
lock
add
xor
dec
inc
inc
in
sbb
es
ds
adc
fwait
or
in
mov
adc
mov
rolb
je
jb
mov
insb
xchg
js
jbe
adc
inc
fwait
addr16
push
add
ret
and
xchg
lahf
inc
stos
insb
in
lods
mov
dec
adc
test
and
dec
mov
lcall
shrb
out
hlt
arpl
aas
outsb
out
aam
dec
movsb
dec
mov
dec
mov
push
test
xchg
test
sbb
inc
mov
stos
xor
and
pop
dec
or
loop
addr16
loop
add
mov
aaa
aaa
js
test
push
stos
call
and
mov
xchg
add
rcl
and
popf
and
movsb
nop
sbb
mov
cmc
sti
enter
outsb
mov
inc
xor
stos
jmp
lahf
inc
aaa
js
loopne
push
xor
pop
mov
add
push
cmp
push
dec
je
movsl
mov
inc
cmp
js,pn
call
aaa
aaa
andb
out
mov
sbb
sbb
inc
in
jecxz
js
mov
cmc
push
jnp
adc
jp
cmp
add
mov
cmp
popa
mov
mov
mov
aaa
enter
push
repz
in
mov
xchg
cmpsl
and
mov
add
push
iret
ret
push
add
sbb
lds
sbb
jmp
add
adc
xor
dec
pop
stos
pop
xor
adc
pushf
mov
push
push
mov
in
in
stc
sbb
mov
push
lahf
jl
out
jne
xor
and
ss
sti
push
dec
mov
cmpsb
js
lds
xor
pop
lods
cmpl
or
int
xchg
mov
dec
mov
jp
mov
pusha
or
shll
sub
adc
repnz
ljmp
mov
mov
jo
paddusb
or
stos
jmp
push
xchg
aas
add
call
xchg
and
dec
mov
mov
adc
dec
les
and
mov
lock
xchg
lcall
pop
jae
rolb
loopne
hlt
lahf
xor
addl
push
or
cmc
jno
or
out
xorb
jno
xlat
stos
or
sub
push
dec
sub
xchg
rcr
out
push
or
ror
pushf
shll
xchg
and
repz
mov
jns
aad
lret
imul
call
stos
mov
add
push
and
mov
or
fld1
dec
movsb
mov
xchg
cmp
inc
pop
mov
std
ss
cmp
sbb
rclb
les
sub
jae
adc
xchg
ja
mov
jmp
iret
fs
imul
lret
dec
pop
pusha
dec
repnz
mov
inc
sbb
cmpsl
lock
push
pop
sub
aas
push
xor
sarl
and
pop
cmpsl
or
mov
es
iret
int3
mov
enter
sub
pop
sbb
xor
mov
pusha
pop
ljmp
push
xlat
adc
orb
push
hlt
aas
fstp
sub
and
stos
sbb
mov
mov
ja
cmp
fwait
leave
xchg
mov
cltd
sbb
push
and
jecxz
ret
or
xchg
or
icebp
insb
mov
mov
inc
std
rcll
orb
aad
fidivrs
stos
arpl
iret
mov
out
jns
and
in
xor
or
es
lcall
or
es
iret
faddl
leave
adc
int
pusha
loope
cmpsl
iret
jbe
icebp
mov
inc
mov
ja
sub
push
cmpsl
fnstenv
xchg
add
aaa
ss
lods
mov
dec
and
in
and
mov
pop
fcoms
es
arpl
jge
push
dec
ds
pushl
imul
fwait
push
sar
cmp
rorb
loop
mov
adc
and
push
mov
adc
fldt
cmp
dec
add
cmc
xchg
das
mov
pop
call
adc
and
mov
addr16
cmp
adc
insb
and
and
sub
push
sbb
test
ret
aam
mov
dec
sti
add
mov
or
mov
push
js
cmp
dec
mov
jne
dec
pop
lcall
or
cwtl
test
xchg
push
or
or
cmp
sbb
inc
loopne
lds
js
sub
pop
xor
jb
cld
push
xor
jnp
sub
adc
adc
xlat
sub
push
or
lock
in
sbb
popf
in
mov
and
fsubrl
jp
ja
sub
mov
and
ja
or
mov
arpl
push
or
and
or
and
out
mov
xchg
int3
repz
pop
stos
pop
imul
push
and
push
adc
fildl
and
mov
js
test
clc
scas
mov
sbb
test
push
pop
aaa
loopne
adc
mov
push
jno
pop
or
sub
adc
and
pop
test
es
sub
hlt
shlb
cli
mov
movups
inc
fstps
js
sub
insb
push
insl
jg
out
mov
andl
mov
das
mov
stos
in
pop
insb
pop
sbb
sub
insl
subl
xchg
jp
jle
lret
pop
and
mov
pop
bnd
orl
sub
in
scas
dec
mov
mov
pop
sbb
push
testb
cmp
hlt
aam
in
xchg
lea
in
js
add
lods
sub
inc
mov
popl
sub
loopne
push
mov
daa
daa
push
popa
push
icebp
mov
xor
push
or
aaa
or
jo
and
scas
es
dec
xor
sub
mov
fcoml
nop
es
into
sahf
daa
jg
les
shrl
fwait
int
cmp
scas
loopne
and
pop
scas
mov
ljmp
mov
mov
pop
cld
call
cld
sub
inc
pop
xchg
imul
daa
fiaddl
aad
das
cmp
inc
push
repz
add
push
pop
pop
js
das
sbb
push
repz
push
inc
or
stc
mov
mov
scas
sbb
sub
enter
mov
cmp
push
push
rcrl
popf
call
cmp
fidivrl
jmp
inc
popf
add
iret
lock
and
pop
xchg
and
paddd
arpl
sub
push
ss
cmp
icebp
inc
test
jo
bound
mov
imul
loopne,pt
push
rcll
mov
sub
dec
cmpsl
jg
popa
outsb
repnz
lds
push
mov
adc
xor
push
inc
lcall
xchg
sahf
add
and
sbb
push
in
sub
fs
in
mov
loope
sti
inc
mov
insl
pop
neg
inc
imul
arpl
cmpsl
pop
lds
nop
push
mov
xchg
scas
push
cmp
sti
repnz
out
xor
dec
fdivl
add
std
add
sub
xchg
ret
stos
adcl
pop
inc
bound
sub
cltd
js
xor
xor
add
pop
cmp
adc
sub
jl
push
or
pop
xor
ds
das
jno
jno
push
fcmovu
stos
adc
mov
lret
sub
clc
inc
add
cmp
popa
fsubr
cmp
xchg
push
out
iret
xor
enter
xchg
cltd
pop
ljmp
mov
jl
imul
dec
mov
cmc
mov
mov
or
cltd
jno
push
dec
aaa
push
jge
aad
inc
sahf
or
ja
pop
cwtl
lret
inc
fstl
mov
aam
lods
lahf
lcall
cmp
les
scas
int
and
lret
mov
xchg
into
lods
mov
jno
mov
fcoml
pop
cmp
or
movsl
aam
enter
inc
mov
cltd
sbb
mov
xor
push
xchg
mov
icebp
pop
arpl
icebp
sti
out
cwtl
mov
pop
call
mov
decb
insb
punpcklbw
call
es
xor
add
mov
stos
and
push
jb
outsl
inc
stos
dec
pop
jle
sbb
mov
pop
or
jnp
scas
je
add
cmp
push
or
movsl
int3
pop
js
push
sar
dec
cmpsl
mov
out
push
in
cmp
jle
mov
ret
jp
mov
fstp
jmp
dec
pop
icebp
sbb
adc
or
in
push
call
mov
outsl
xor
imul
test
shrl
test
test
aas
or
xor
std
jno
repz
mov
push
pop
arpl
xorps
addr16
iret
and
dec
mov
clc
mov
push
xor
test
imul
xor
jb
jl
and
test
dec
mov
aad
mov
sbb
jno
cmc
push
sub
mov
loop
or
stos
in
mov
sub
mov
mov
ja
dec
es
xchg
sbb
aad
mov
xlat
add
mov
int
ja
xchg
inc
add
sarb
adc
div
insb
add
inc
aaa
xchg
call
jnp,pt
lahf
mov
ljmp
test
icebp
push
xchg
xor
push
fldt
stos
test
inc
lds
and
int
adcb
insb
xor
hlt
fsub
out
ret
mov
and
push
add
inc
push
mov
push
mov
mov
adc
jb
cwtl
mov
lahf
add
xchg
and
push
sbb
loope
rcr
inc
je
sub
pop
add
mov
add
mov
nop
clc
lock
notb
mov
iret
leave
and
cs
ret
mov
adc
ja
sub
sub
xor
adc
cmpsl
pop
jle
cmp
movsb
pop
jns
sub
test
daa
push
push
sbb
cld
and
or
mov
mov
lret
into
xchg
les
fldcw
test
cmp
rcrb
mov
js
add
mov
in
leave
leave
fcompl
xchg
lds
in
adc
divb
cwtl
push
add
lahf
lods
movsl
add
insl
push
shl
push
pushf
call
pop
fnsave
sub
adc
fistl
sbb
xlat
je
mov
test
loop
xchg
pop
inc
adc
scas
mov
pop
inc
xchg
clc
xchg
cwtl
icebp
pop
outsl
or
mov
shll
cmpsb
xchg
cmp
fdivp
inc
das
pop
ret
nop
outsl
inc
jge
pop
bnd
or
leave
cmpsb
lret
xchg
pop
fs
adc
xchg
sbb
and
shl
jmpw
jp
inc
sti
add
mov
adc
movsb
adc
and
out
push
push
dec
add
jle
fs
test
mov
and
adc
lods
jg
pop
jmp
repnz
sbb
in
into
or
rep
and
jge
sub
negl
pop
inc
sub
ja
js
adc
js
mov
sbb
mov
ret
roll
icebp
push
jne
sbb
cld
decb
insb
mov
sahf
xchg
inc
aad
push
into
pop
mov
mov
and
loop
fbld
sti
lahf
pop
cltd
jg
pop
sbb
mov
popf
pop
mov
push
divb
add
add
jno
addl
inc
xchg
push
sbb
jne
cli
daa
outsb
andb
add
lcall
shl
jns
cld
fisubrl
xchg
dec
inc
or
std
aad
jae
aaa
dec
or
in
jo
mov
lds
mov
lret
rolb
imul
out
call
sbb
dec
popa
loopne
mov
push
mov
mov
lock
mov
add
mov
testl
test
pop
mov
popf
xchg
insb
pop
dec
in
push
add
mov
fs
idivb
sbb
jg
mov
cmp
mov
and
movsl
xor
cmp
cld
and
cmpsb
sub
and
stc
lods
jg
cli
sbb
and
insb
out
adc
cmc
pushf
ja
cld
xchg
jb
xor
sbb
sub
stc
push
mov
pop
imul
ss
push
out
ja
pop
push
sub
pop
mov
rcll
add
mov
cmp
dec
push
lcall
sbb
adc
add
int
sbb
rolb
sahf
incb
and
dec
push
mov
sub
pushf
add
and
jp
cltd
popa
dec
dec
test
push
sub
xchg
cld
jbe
or
outsl
jg
lds
nop/reserved
cmpsb
pusha
add
pop
pop
jg
aad
mov
ret
cli
stos
repnz
mov
add
int
leave
cmpsl
jns
inc
xor
cmp
mov
xchg
sbb
sbbb
xor
fmuls
leave
mov
push
cmp
fistpl
in
push
ja
cwtl
or
adc
out
push
push
mov
dec
dec
rclb
sbb
mov
sahf
adc
iret
sbb
mov
cmp
jp
jae
xor
cmp
in
pushl
push
adc
xchg
jae
pop
adc
xor
pushf
cwtl
test
or
dec
adc
nop
pop
rcrb
out
jl
sbb
loopne
sub
cmp
in
pop
int3
fistps
divl
shll
push
push
ret
in
and
inc
ret
repnz
xor
xor
test
push
stos
dec
push
insl
dec
insb
gs
push
ja
mov
adc
shrl
mov
dec
pop
repnz
inc
not
jae
inc
mov
enter
lods
push
mov
imul
leave
jo
icebp
mov
mov
or
enter
popa
data16
sub
lret
pushf
out
push
dec
arpl
inc
adc
add
scas
aaa
pop
jle
cmc
xor
dec
icebp
mov
imul
dec
dec
nop
xor
stos
dec
and
lds
lret
lods
mov
ret
add
or
lds
sub
sbb
stos
scas
add
dec
sbb
xchg
adc
cld
fiaddl
pop
sbbb
dec
add
andl
inc
push
mov
fnstsw
out
cs
xchg
xor
iret
jg
jl
add
and
addr16
pop
pop
enter
shlb
test
xchg
inc
insb
jl
inc
add
push
jecxz
jl
dec
sti
inc
mov
popa
test
mov
ljmp
je
int3
add
jg
xor
movsb
add
push
iret
fsubrp
sbb
add
adc
scas
stos
je
inc
mov
or
fisubl
cmp
ljmp
cld
xor
jg
repnz
jl
xchg
iret
xchg
or
scas
shll
icebp
imulb
dec
stc
jae
cltd
inc
sarb
lret
lock
cmp
hlt
int
out
scas
sbb
ret
hlt
ja
or
loop
dec
pusha
subb
daa
int
and
unpcklps
imul
xor
cmp
aas
movsb
mov
insb
add
lds
lcall
dec
pop
jp
xor
add
mov
in
cwtl
or
xchg
xor
cmp
mov
xlat
jg
xor
pop
pushf
push
push
add
popa
mov
scas
bound
jmp
pop
mov
jg
dec
popl
icebp
push
mov
cmp
mov
test
aaa
int3
xor
sub
sub
jns
sti
xor
sti
mov
mov
fimuls
rorb
in
outsb
pop
jne
mov
das
xchg
and
insl
cli
fbld
pop
cmc
mov
call
int3
das
loope
jb
mov
lcall
mov
mov
in
out
mov
mull
jae
push
ds
jp
lock
popf
in
fwait
mov
cmc
and
aaa
or
faddp
subl
xor
fimuls
pop
pop
in
nop
jno
call
lahf
sub
xor
cmp
xor
repnz
jmp
int3
xchg
and
insl
push
push
sbb
sub
push
outsl
leave
sbb
xchg
mov
push
pop
cmp
add
mov
or
shll
idivb
mov
push
push
lods
mov
ret
mov
dec
pop
lahf
jno
sub
push
pushf
adc
inc
test
fwait
pop
dec
fdiv
movsb
in
fsubs
nop
loop
push
sarb
stos
dec
je
jns
sbb
mov
std
hlt
mov
pop
lea
je
cmpsl
ja
cmp
jae
dec
push
cmp
pop
mov
inc
jbe
xor
into
loopne
insl
push
add
sub
sbb
ss
push
fldt
in
mov
and
sub
in
js
popf
xchg
pop
adc
data16
xchg
andl
outsb
jp
add
clc
cld
pop
adc
jne
mov
dec
lds
push
or
push
adc
gs
xchg
hlt
mov
or
gs
add
xchg
cltd
mov
cwtl
jno
rcrl
fidivrl
dec
adc
pop
sbb
imul
test
mov
fnstenv
sbb
fbld
pushf
fcoml
mov
sbb
aad
in
loope
jb
int3
mov
idiv
xchg
sti
pusha
insl
in
push
xor
mov
xor
and
jnp
popa
call
jge
push
xor
pop
decl
ret
inc
pop
inc
cmp
daa
lock
in
mov
xchg
mov
push
fcmovnu
and
dec
cli
call
ds
leave
ret
lahf
pop
shl
push
aam
jg
nop
xchg
mov
sub
mov
mov
and
adc
into
jns
mov
out
imul
sbb
jge
or
int
dec
xlat
xlat
dec
jmp
sar
jge
or
adc
xchg
pushf
movsb
insb
jecxz
cli
xchg
jle
pop
or
std
mov
aaa
push
inc
arpl
int3
mov
iret
lret
add
push
cmp
sti
imul
in
in
mov
insb
test
js
in
add
mov
testb
scas
mov
push
add
adc
xor
jmp
jo
or
stos
cmpsb
xor
add
xor
cmp
dec
stos
mov
out
xchg
inc
je
gs
sub
sub
or
bound
ljmp
or
pop
sub
and
jecxz
mov
stc
test
inc
fneni(8087
sub
dec
adc
adc
jge
and
xor
push
stos
pop
adc
xor
mov
jecxz
xchg
xor
scas
aam
fs
cmp
lret
int
int
pop
stos
fstps
cmp
filds
lahf
xchg
cmpsl
mov
subl
in
mov
cmpsb
outsl
pop
fiaddl
xor
out
jge
mov
and
inc
dec
push
icebp
rorb
jmp
jle
push
aam
sbbb
cli
xchg
es
ret
pushf
frstor
push
inc
ret
les
mov
or
add
pop
fwait
mov
mov
fwait
inc
aad
in
cmc
mov
push
pop
push
inc
stc
cmpsb
fdivp
imul
addr16
mov
rclb
stc
leave
js
jecxz
loop
outsb
sub
inc
sbb
fimuls
leave
jg
test
cmp
mov
inc
in
adc
addr16
mov
cltd
sbb
loopne
lret
xchg
lret
sbb
xlat
pop
int3
int
pop
out
std
movsl
pop
js
decb
or
sbb
ret
jno
add
push
rcrb
pusha
movsb
insl
mov
lock
fadd
scas
fistpll
xchg
imul
push
xorl
imul
stos
push
outsl
hlt
stos
pop
popa
std
push
mov
dec
pop
lret
shrl
js
mov
and
push
sbb
arpl
add
and
xlat
and
gs
dec
fcompl
loopne
add
xchg
xor
mov
lret
push
ret
stos
mov
aaa
ret
mov
cmp
pop
and
pop
aaa
andb
in
xchg
pop
jo
jo
mov
sub
in
rcrl
sub
in
cmp
and
push
mov
xchg
mov
mov
rolb
add
div
decb
mov
je
je
inc
sub
in
je
cmpb
in
js
xchg
push
loopne
add
sarb
push
jl
xchg
fsubs
in
lret
mov
xchg
xchg
shl
xorl
push
jge
and
int
inc
ret
bnd
out
bound
pop
dec
lock
scas
add
out
pop
or
fnstenv
xchg
divb
pushf
mov
pop
mull
xchg
sub
pop
xor
lds
popaw
icebp
jbe
xchg
pop
xor
push
push
cmp
int
movsb
lcall
mov
repnz
mov
jb
add
lcall
dec
mov
scas
cmpsb
dec
test
ljmp
or
cs
jp
dec
faddl
shl
iret
mov
xorl
dec
mov
push
clc
fimull
sahf
adc
or
mov
xor
sub
pop
push
popa
jnp
and
in
pop
mov
rcrl
mov
sbb
call
scas
outsb
out
fdiv
mov
sub
in
and
cmp
pop
jae
mov
enter
je
mov
pop
jge
adc
push
jl
pop
sbb
out
out
xchg
adc
stos
push
iret
flds
mov
and
lret
add
cmp
add
iret
and
repz
stos
cli
pop
mov
pushw
lahf
int3
in
rcll
sahf
inc
lods
mov
leave
mov
fistl
cmp
jmp
mov
cmp
int3
xor
fnstenv
xchg
push
jl
or
js
mov
lds
xchg
xchg
popf
fwait
add
or
mov
stos
es
jmp
mov
inc
and
pushf
inc
adc
mov
lea
in
pop
and
outsb
cmp
shl
shl
dec
push
mov
sub
sar
fwait
imul
leave
hlt
sbb
rcrb
dec
dec
add
add
adcl
loope
lcall
lahf
xchg
xchg
icebp
pop
inc
pop
sub
imul
inc
pop
hlt
xchg
cmp
fistpl
aas
xchg
sbb
imul
fsubp
fsts
lcall
or
xchg
push
adc
loope
pop
mov
push
jne
push
push
aam
xor
adc
test
mov
jmp
lods
bound
dec
shll
ja
or
fldt
pop
inc
insb
mov
test
jne
mov
jae
cmp
shrl
fsts
pop
outsb
sbb
or
fstl
pop
test
bswap
pop
mov
stos
cld
movsl
andl
push
lea
and
jge
pop
stc
je
add
xchg
repnz
add
adc
testb
xchg
push
xchg
mov
roll
inc
loop
xor
xchg
loop
jnp
and
jecxz
idiv
fadds
inc
ret
clc
xor
mov
mov
sub
xor
fs
adc
push
leave
sbb
jbe
movsb
stos
rorl
fmulp
fld
push
outsl
and
subl
arpl
xchg
sub
and
sub
cmp
inc
lods
inc
add
sub
in
imulb
mov
add
testb
xchg
lahf
test
inc
pop
and
mov
jmp
mov
jo
xchg
add
pop
addr16
or
lret
jmp
pop
cmp
scas
xor
movsl
popa
in
mov
sub
jbe
cmp
mov
mov
mov
mov
sub
cld
adc
xor
pop
pop
scas
push
mov
lret
mov
mov
and
jnp
adc
ret
sbb
xchg
dec
das
sti
into
cmp
fisttpll
push
jge
sub
xor
aaa
outsb
int3
mov
hlt
jle
jge
push
xor
jmp
cmp
jnp
mov
cmp
sbb
and
mov
xor
xchg
mov
jno
nop
dec
sbb
push
sti
xor
test
pusha
dec
push
xchg
add
outsl
idivl
movsl
pop
pop
or
or
xor
inc
test
hlt
andl
lret
pop
mov
out
mov
sbb
and
sbb
and
dec
mov
jmp
add
ret
adc
xor
dec
inc
insb
ret
test
inc
pop
daa
pop
jl
adc
cmp
xor
pop
mov
rcrb
xchg
sub
sub
je
outsl
or
je
ret
cmp
xchg
push
arpl
scas
mov
lret
cltd
lret
movsb
push
rol
lds
push
andb
push
cmp
arpl
std
sub
fdivrl
inc
jg
std
bound
adc
or
xor
daa
sub
dec
jg
and
sti
xlat
jecxz
dec
mov
fistpl
fstps
mov
sbb
mov
push
or
insb
fisttpll
add
loop
outsb
lcall
mov
pop
insl
ret
cmp
and
adcl
ret
int
inc
outsl
xchg
sti
testb
cmp
ret
movsl
subl
enter
jne
std
mov
mov
mov
mov
sbb
and
clc
jae
cltd
cs
xor
push
cs
inc
pop
mov
fwait
mov
andl
dec
or
jae
push
push
pop
jno
push
adc
push
jmp
xor
pop
imul
and
push
scas
shr
fsubrl
ds
or
and
sahf
lea
pop
lret
or
into
xchg
inc
jl
testb
mov
or
cmc
scas
pop
jb
sbb
push
pop
and
dec
jb
out
mov
pushf
in
mov
push
sub
adc
in
adc
dec
lahf
jnp
sub
dec
orl
mov
int
aas
insl
push
jne
int
xor
leave
mov
imul
movsl
xor
dec
push
jecxz
iret
or
out
mov
mov
sahf
mov
adc
adc
pop
push
jnp
lods
shl
mov
pop
lahf
add
xchg
mov
stos
test
stos
dec
adc
xchg
jl
imul
fcmovb
pop
mov
push
cmp
or
xor
nop
cmp
xor
faddl
das
mov
cwtl
insl
pop
clc
pop
pop
and
imul
jmp
xchg
adc
pop
push
inc
mov
mov
inc
subb
dec
push
add
loop
imul
cmp
xchg
add
adc
or
push
adc
cli
push
roll
jae
cmp
jae
push
adc
pop
out
mov
fnstcw
in
sub
dec
push
mov
inc
xor
push
pop
int3
call
in
adc
mov
sub
std
je
frstor
jecxz
cmpsl
xchg
mov
mov
lcall
enter
shll
add
mov
add
lahf
sub
test
cmp
xlat
test
mov
sarb
mov
sbb
ja
loop
int
data16
lods
mov
or
ja
sub
mov
cwtl
mov
rol
inc
ret
test
adc
cmp
jg
add
push
fimull
and
xor
dec
sbbb
daa
in
xchg
ljmp
idivb
gs
andb
sub
jmp
jbe
sub
xchg
add
or
mov
in
dec
mov
call
cwtl
sub
rcrl
je
jne
pop
add
data16
fcoms
xchg
repz
out
imul
dec
lods
rol
dec
lret
cmp
imul
dec
aas
mov
inc
lods
jno
into
rcr
mov
push
cmp
or
in
ficomps
sub
sub
pop
pop
shll
repz
addl
xor
loopne
adc
testl
outsb
jecxz
in
pop
jmp
pushf
ds
xor
mov
std
xchg
movsl
scas
lods
data16
mov
fcmovb
dec
lock
adc
outsb
aas
hlt
std
jecxz
xchg
ljmp
cld
cmc
ss
mov
dec
sahf
sbb
mov
pop
jb
dec
mov
stos
or
mov
aam
mov
mov
call
jmp
xchg
outsb
xor
xchg
hlt
cld
not
lock
push
jae
scas
test
test
data16
pop
inc
scas
mov
cmp
pushf
cmp
jecxz
scas
dec
pusha
xor
fcoms
xchg
ljmp
insb
push
or
negl
xchg
mov
sub
inc
adc
fnstcw
mov
cmpb
sbb
out
movsl
inc
dec
pop
movsl
or
pop
fcom
cltd
xchg
std
cmc
ds
bt
xchg
xor
iret
mov
sub
je
cmp
push
dec
les
adc
insb
and
jge,pt
push
inc
sbb
mov
adc
fcoml
push
xchg
xor
pop
xchg
sub
leave
iret
push
add
mov
xor
jecxz
pop
push
neg
ss
dec
mov
mov
dec
mov
mov
cmpl
in
cmp
nop
clc
inc
dec
mov
testb
mov
and
scas
stos
fucom
pop
push
dec
inc
push
in
div
lahf
cmpsb
adc
scas
mov
or
outsl
cltd
pop
repnz
sbb
lock
mov
out
loop
movsl
mov
pushf
das
pop
xrelease
int3
stc
sbb
xlat
jle
pushf
push
aad
xor
lds
sti
push
inc
pop
dec
dec
repz
sbb
out
or
jl
fwait
in
sbb
pop
outsl
or
push
loope
push
lock
les
jmp
xor
fstpl
push
jmp
inc
xchg
imul
fwait
ret
movsl
xchg
lods
lods
dec
pop
scas
xchg
mov
popl
iret
out
lret
add
fiadds
iret
xor
pop
out
and
mov
stc
inc
out
dec
xchg
aas
dec
cltd
add
jp
or
out
fstps
or
mov
lret
dec
or
xchg
ss
movsl
mov
dec
xstore-rng
cmpsl
add
sbb
subb
mov
inc
or
lcall
xchg
sahf
dec
mov
popa
mov
xchg
and
mov
or
sbb
clc
mov
sub
lcall
mov
cmpb
fwait
or
dec
je
int3
cmpsl
sarl
xor
sbb
mov
mov
adc
cmp
mov
or
cld
jle
sbb
cmp
mov
int3
es
xchg
cwtl
jmp
fsubr
imul
subb
pop
xor
inc
adc
ret
cld
nop
mov
push
lret
cld
int
and
cmc
popf
fwait
int3
insb
cld
or
add
pop
pusha
call
das
xchg
dec
xor
dec
cmpsl
nop
cmpsb
inc
lret
ds
negb
repz
lret
inc
fidivs
test
mov
mov
fs
sub
xchg
sar
fdivrs
and
adcb
in
xor
xor
int3
les
or
push
cmp
stos
sbb
xchg
cs
inc
and
sti
shlb
je
xchg
push
xor
dec
inc
push
dec
xchg
jbe
push
and
fidivs
and
mov
push
ffree
fwait
out
ds
or
sub
js
xor
inc
inc
rclb
adc
daa
or
imul
xchg
xchg
mov
and
into
mov
and
icebp
mov
cli
pop
push
je
test
cwtl
imul
lret
lock
out
clc
dec
xchg
int
shrb
and
jb
jecxz
xor
pusha
inc
enter
sub
mov
cmp
push
mov
xor
in
mov
lret
loop
nop
adc
inc
cmpsb
popa
test
push
adc
pop
mov
call
and
add
dec
inc
fldl
cmp
jbe
call
out
xchg
scas
add
insl
jl
scas
outsb
addr16
in
mov
inc
push
sub
xor
ret
or
rol
pop
mov
sti
shrl
rcr
test
mov
insb
mov
adc
std
inc
int3
jg
or
jmp
loopne
mov
cld
arpl
arpl
or
loop
xor
cli
xor
mov
pop
clc
xchg
mov
int3
shrb
jo
cmp
movsl
add
push
mov
loopne
movsb
push
lret
js
pop
out
lock
sbbb
shrb
fs
jns
jp
and
inc
enter
jge
aad
jno
ja
iret
loope
loopne
invd
push
loopne
dec
mov
or
popf
xor
popf
pop
repnz
stos
ljmp
mov
loop
and
push
movsb
dec
sbb
sub
stos
push
adc
and
jl
xor
xchg
ljmp
roll
in
push
daa
insb
xor
jbe
cwtl
and
jnp
lock
xor
pop
scas
popf
out
adc
pop
mov
dec
scas
cli
sbb
inc
nop
pop
jae
adc
or
call
or
insl
movsb
adc
mov
cmp
cmp
push
mov
lcall
cmpsb
pop
test
test
mov
or
mov
mov
invd
cltd
mov
cmc
dec
rcll
sub
xchg
and
jp
push
pop
cwtl
pop
movsl
mov
mov
dec
inc
test
pushf
sub
fstps
adc
push
outsb
stos
aas
pop
outsl
cmpsl
test
sbb
leave
and
inc
shll
or
loope
and
or
add
dec
in
outsb
int3
xchg
lret
outsb
aad
movsl
cmc
jbe
test
xchg
inc
mov
fs
or
xor
sbb
in
xorb
les
mov
inc
loopne
inc
dec
insb
push
lock
sti
sahf
xchg
bound
adc
sub
cmp
mov
out
iret
lods
mov
stc
fcoml
xchg
sbb
jbe
pushf
nop
mov
loop
xor
xor
test
xchg
inc
sahf
push
into
and
out
sub
out
pop
push
add
dec
pop
jne
add
push
pop
ret
rolb
mov
adc
mov
repnz
inc
repnz
sub
mov
js
test
sub
das
int
into
adc
mov
int
int
in
push
sbb
gs
data16
and
sbb
out
cmc
out
xor
cmpsb
or
iret
aas
inc
push
cwtl
sub
into
mov
dec
cmpsb
es
push
out
add
jae
xor
dec
data16
jmp
or
lods
cmp
mov
cmp
or
ja
jge
dec
cmp
xchg
or
out
sub
adc
sub
xchg
das
mov
movsb
fucomp
in
push
push
cmp
jp
pop
pmulhw
mov
data16
mov
lret
lock
or
fstpl
xchg
repnz
stos
or
jae
jns
pop
adc
jg
lods
in
frstor
mov
aaa
pushf
dec
hlt
mov
sub
ficoms
add
pop
fwait
or
mov
nop
dec
push
ljmp
pop
stos
insb
dec
add
fadds
xor
ret
repnz
jno
test
adc
cltd
lds
les
and
cmp
negb
mul
add
movsl
or
leave
fdivs
xchg
add
mov
ret
xor
iret
arpl
mov
test
jae
jl
jmp
fldl
sub
test
jae
inc
mov
push
cwtl
les
je
cmp
or
sub
xchg
sub
mov
and
dec
scas
les
inc
xor
jl
mov
mov
pop
xchg
mov
xchg
pop
sahf
cmpsb
xchg
ret
jmp
dec
xchg
push
mov
lock
pop
scas
cltd
out
out
cmp
test
mov
xor
enter
bswap
pop
inc
sbb
and
xchg
push
ds
xor
adc
mov
xchg
sbb
into
rorb
mov
pop
pop
out
mov
and
push
add
xchg
dec
mov
push
test
xchg
ret
test
dec
in
jmp
aad
sbb
lock
aas
pop
add
mov
fnstenv
dec
int
int
jge
sbb
rcl
rclb
popf
lret
jno
inc
xchg
loopne
aas
outsl
cwtl
fwait
decl
jge
scas
cmp
xor
jnp
push
arpl
add
loope
insb
mov
fistpl
stos
pop
je
mov
jge
std
out
jbe
roll
dec
sbb
xchg
lahf
cmp
testb
pushf
xchg
or
mov
xor
xchg
jp
sbbb
mov
mov
testl
and
add
data16
mov
mov
inc
cld
fwait
sbb
rol
cmp
jnp
lret
sub
jae
mov
jb
and
fldl
loop
mov
jbe
pusha
in
xor
cmpsl
add
inc
in
or
jle
cwtl
leave
out
pop
into
out
imul
jp
testl
fnstcw
int3
stc
outsl
inc
ss
clc
icebp
enter
divl
add
inc
mov
fidivrl
or
sbbl
mov
mov
mov
cwtl
clc
fmull
jg
inc
fistpl
rcll
int
or
in
xchg
xorb
movsl
xchg
cwtl
cwtl
xor
jns
rcrb
sbb
fdivrs
jo
clc
cmp
lcall
or
xor
aad
movswl
mov
stc
out
cmp
dec
xchg
aas
mov
xchg
dec
or
nop
sub
cmpsb
sti
xchg
daa
stc
inc
mov
std
aas
insb
test
jno
cmpsb
call
and
xor
adc
add
fdivs
mov
data16
fdivl
pop
les
inc
sub
fs
enter
ds
fwait
xchg
jmp
jbe
pusha
sub
sub
js
sahf
scas
lock
and
bsf
addr16
mov
mov
into
pop
js
push
mov
insl
adc
leave
inc
mov
mov
fs
aas
gs
out
dec
jae
push
jp
pop
sbb
push
jp
push
int
mov
add
xchg
ret
jb
dec
jle
fcoml
rcrl
mov
mov
sub
mov
xor
mov
aaa
je
or
stos
movsb
jb
cmp
lret
cmp
jo
sub
subl
cmp
movsb
push
sbb
add
gs
push
aaa
rdmsr
icebp
adcb
js
bound
test
sahf
dec
ljmp
sub
testb
adc
cmpsb
pushf
les
inc
mov
outsb
push
imul
pop
cmp
push
mov
and
sub
xor
cmpl
shll
sbb
loopne
push
loope
insl
dec
mov
lret
cmpsb
jnp
push
fdivl
jae
xchg
scas
jmp
in
mov
push
repz
out
test
dec
icebp
inc
repz
xor
xchg
insl
fistps
inc
test
add
sbb
mov
push
test
inc
jae
cmp
cmpsb
gs
enter
movsl
cmp
popf
mov
insl
sbbl
lds
adc
xor
sub
dec
sub
inc
int3
call
leave
ret
bound
add
cmp
mov
lods
push
pusha
mov
jne
xor
dec
mov
xchg
add
pop
jle
sbb
pop
fiadds
push
ss
insb
inc
jg
jge
call
add
sub
popf
xchg
fmuls
ja
sbb
inc
sbb
fucomip
push
pop
imul
add
fsubrs
lods
out
pop
addr16
cld
xchg
sub
loopne
loopne
arpl
repz
add
add
cs
out
sahf
aaa
mov
in
lock
inc
mov
dec
test
ret
dec
gs
aas
mov
adc
in
mov
outsb
mov
stc
hlt
mov
push
jle
testl
sahf
inc
outsw
add
cs
xlat
xor
outsl
ret
hlt
pop
push
aaa
push
enter
lds
loope
loopne
test
push
jnp
icebp
mov
sbb
sub
sahf
mov
add
ret
sub
in
or
mov
fcompl
adc
mov
bound
fmul
bound
pusha
lret
imul
ret
jl
aaa
or
fdivs
pop
inc
in
jmp
add
inc
mov
call
mov
out
jmp
aaa
stos
pop
ficoml
xchg
pop
adc
in
in
sbb
ljmp
test
or
push
test
mov
dec
out
subb
xchg
cld
lcall
mov
adc
sub
dec
in
in
loope
addr16
stc
jle
outsl
out
jo
mov
or
inc
mov
lcall
imul
xchg
ss
mov
aam
imul
sbb
mov
les
je
ret
cmp
lds
mov
sbb
inc
pop
jg
inc
ljmp
gs
scas
cmp
inc
and
popf
mov
xor
rolb
or
sub
cwtl
mov
js
lods
mov
xchg
xchg
testl
fldl
adc
ss
mov
loop
fsubrs
add
inc
ret
fldl
inc
dec
push
cli
pop
jne
mov
and
movsl
sub
repnz
cmp
out
std
mov
pusha
fisubrs
frstor
jmp
test
test
mov
repnz
in
mov
aad
sub
inc
push
les
mov
xlat
dec
addr16
cmpsb
sub
lret
sbb
xor
mov
inc
ds
mov
outsb
cmp
mov
in
iret
or
dec
or
lds
mov
inc
cmp
cmovle
push
mov
push
daa
in
int3
xchg
lods
cs
mov
sti
add
call
pop
imul
cmp
adc
and
mov
push
gs
mov
mov
sahf
icebp
repnz
lods
imul
or
xor
xchg
jg
daa
ret
enter
outsb
mov
and
cmp
inc
rcr
xchg
test
lahf
inc
and
cmpsb
in
cli
adc
push
test
in
pop
in
mov
mov
sub
cmp
xchg
xor
jecxz
inc
sbb
gs
into
imul
pushf
dec
clc
in
inc
mov
ficoms
mov
in
or
mov
cli
sbb
fdivl
sbb
sbb
pusha
pop
adc
jmp
push
and
and
notb
ss
fadds
je
jae
nop
test
pushf
add
mov
add
jae
stos
shlb
xor
xor
outsb
and
addr16
or
leave
fnsave
sub
jnp
jl
add
cmp
or
pop
push
int3
mov
push
call
sub
mov
xchg
icebp
cmc
xchg
jl
push
cmc
out
xchg
in
je
pop
xor
pushf
jbe
lods
nop
stc
push
cwtl
xchg
xor
lds
adc
and
lock
push
sbb
in
mov
xor
stos
xchg
imul
fbstp
stos
pop
jg
decb
lds
cmp
adc
cmp
sarb
fs
into
jmp
pop
test
jp
pop
sub
mov
mov
shr
cmc
pop
jl
mov
in
lret
add
or
ss
sbb
cmpsb
push
cmp
adc
and
roll
scas
je
cmp
loopw
stos
sbb
pop
jmp
stc
repz
stc
and
ficoms
call
pop
pop
cld
scas
repz
shr
stos
mov
fcoml
sub
lods
mov
adc
inc
adc
lea
sub
lea
pop
cmpsl
mov
shlb
int
insb
enter
xorl
shll
dec
aaa
dec
or
xor
push
jns
adc
push
dec
pop
push
jne
fstl
cld
cmpb
imul
outsb
push
jae
scas
xchg
call
std
sub
mov
fcoms
lahf
xchg
and
rol
sahf
ds
push
inc
mov
jp
pop
pop
dec
into
or
xor
repz
popf
push
punpcklbw
ss
loope
aas
jle
movsb
cwtl
and
lcall
insb
add
insl
adc
addr16
mov
sbb
mov
dec
mov
adc
pop
sbb
sbb
cmp
fs
rolb
cmp
inc
cmp
pop
mov
icebp
mov
jnp
bound
xor
jp
jge
or
mov
add
dec
inc
jmp
mov
jmp
mov
ds
fmuls
pop
ficomps
pop
fiadds
dec
nop
enter
in
jne
mov
pop
push
popf
js
mov
lret
aam
fcom
xchg
pusha
sbb
pop
xchg
popa
sub
mov
ds
push
xor
test
dec
mov
push
sub
xchg
repnz
jnp
jb
xchg
fstl
stos
xchg
and
repnz
fcmovne
dec
repz
lea
subb
cmp
test
cld
sub
lret
mov
sarb
cs
cmpl
stos
mov
ret
aas
jl
add
hlt
push
ja
addr16
fst
inc
push
add
pop
sbb
lahf
xchg
repz
ja
cmp
leave
mov
add
inc
pushf
mov
mov
cmpsb
movsb
pop
dec
and
repz
jnp
cmp
push
push
fsubrl
test
xchg
or
outsl
jb
inc
fmul
xchg
xor
fisubrs
ret
scas
outsb
jge
gs
int3
and
cmp
movsl
sahf
sti
xor
add
sbb
orl
test
adc
adc
shr
or
rcrb
fmul
mov
out
std
sub
mov
adc
cwtl
push
and
mov
hlt
adc
repnz
sub
fs
cli
add
push
stos
adc
dec
aas
jmp
and
sub
mov
out
data16
aaa
pop
push
mov
cmp
scas
adc
xchg
sti
xchg
xchg
xor
push
jb
jno
pop
negb
testb
adcl
pushl
and
and
pop
pop
fisttpl
mov
out
cld
inc
jae
or
add
pop
xchg
xor
jge
les
inc
xchg
test
jns
scas
out
mov
push
push
mov
lret
mov
push
sub
inc
xchg
push
xor
aas
xchg
and
adc
stos
shll
in
das
pop
adc
pop
mov
push
fmull
out
xor
sub
mov
add
into
mov
mov
insb
std
dec
xor
std
aad
nop
pop
mov
mov
mov
enter
push
insb
mov
sbb
outsl
ret
mov
lcall
cld
sbb
das
xchg
jb
dec
push
fwait
arpl
mov
push
loopne
xchg
mov
push
dec
cwtl
jo
aaa
hlt
ja
or
and
dec
push
fistpll
mov
fistps
pushf
dec
fst
gs
add
mov
add
lods
stos
ror
ljmp
in
xchg
sahf
mov
test
xor
and
loopne
aaa
lock
mov
mov
mov
jb
pusha
xor
jg
rcrl
stc
push
ljmp
lock
inc
sub
popf
or
push
pop
stos
add
addb
jb
cmpsl
outsb
cmp
dec
popf
fcomps
iret
scas
or
imul
jnp
xchg
pop
iret
stc
sub
add
data16
clc
cltd
mov
movsb
fcmovne
jno
das
sub
cmpsb
cmpsl
sub
repz
dec
jno
ret
xchg
pop
jecxz
imul
add
lahf
jg
sub
xchg
add
xchg
jne
sbb
lret
lret
inc
fists
dec
insb
mov
pusha
dec
scas
jo
in
jno
sahf
mov
cmp
pop
sub
sarb
sbb
or
adc
sahf
inc
sti
adc
insb
bound
mov
mov
rclb
int
aad
bsr
ja
fsubs
sahf
and
lcall
neg
test
gs
mov
stos
jp
add
lods
loop
push
xor
aas
loopne
mov
dec
imul
mov
jp
popf
xchg
xchg
adc
and
aaa
call
or
pop
sbb
in
or
jmp
pop
jmp
cmp
jo
and
fwait
lahf
add
movsb
ds
loopne
xor
popf
cmpsb
inc
orl
subb
push
mov
mov
repz
or
push
cmp
sub
out
push
jne
inc
and
rorb
pop
cmp
push
out
pop
fisttpll
test
xor
adc
lahf
mov
jnp
fsubs
sbb
xchg
rcrl
insb
jle
inc
add
xor
mov
aas
lods
loope
inc
shll
inc
pop
test
ficoms
clc
mov
sbb
dec
fldcw
fwait
ljmp
push
in
mov
test
sbb
add
insb
push
pop
pop
or
clc
sub
aaa
inc
in
outsl
loop
push
int
adc
testb
cmp
lret
xor
cmp
pop
xchg
inc
subl
add
scas
mov
shrl
add
cwtl
pop
mov
adcl
jge
and
popa
sbb
test
pushf
sub
and
stos
in
inc
fidivl
and
mov
push
lds
in
mov
dec
jle
jo
pop
imul
rcrl
inc
lds
fisttpll
popa
cmp
cmp
add
add
xchg
shll
xchg
sti
pop
xlat
xor
mov
mull
sub
mul
jne
dec
shll
pop
fidivl
cmp
sub
pop
sub
imul
int
push
aad
dec
xchg
mov
popa
addr16
enter
jp
xchg
aas
ja
jmp
lds
mov
sbb
bnd
inc
mov
lods
add
daa
je
add
xchg
bound
icebp
inc
les
xchg
in
mov
jp
lods
leave
or
push
repz
adc
pextrw
jnp
push
pop
and
repz
xlat
fildl
inc
data16
push
add
fmulp
xor
data16
jb
mov
inc
pusha
repnz
sbb
mov
push
xchg
adc
das
inc
pop
lds
xchg
subl
push
repz
xchg
or
loop
jmp
repz
in
lds
jl
ret
cmp
or
mov
adc
sbb
enter
out
aas
cmp
xor
sub
jge
inc
sub
fldenv
arpl
cmc
or
jl
push
or
push
cmc
push
mov
pop
arpl
or
aam
push
shll
pop
fdivs
pop
xor
lods
adc
dec
out
mov
adc
xchg
notb
popa
push
push
sbb
sub
sbb
gs
pop
fiaddl
ja
cli
mov
icebp
sti
inc
leave
add
orb
iret
sti
scas
pusha
xchg
lea
popa
push
sti
out
imul
imul
cmpsl
add
push
dec
cld
push
in
int3
cmp
pop
int
and
mov
sub
jecxz
daa
ss
ljmp
sarb
call
aas
cmp
xor
sub
jg
dec
fcomi
pop
push
cmp
inc
dec
aaa
jae
cltd
out
cmc
mov
rolb
mov
cmpsl
inc
pop
inc
or
or
lods
stos
jg
test
pushf
push
addr16
or
in
add
out
cmp
adc
mov
adc
in
push
mov
sbb
cs
test
int3
ljmp
stos
pop
pop
and
sar
or
add
mov
adc
dec
ret
lret
scas
cs
pop
sbb
int3
sbb
push
outsb
movsb
push
or
fisubl
aas
fisttpll
adc
fwait
add
ljmp
movsb
gs
push
popa
sub
sbb
inc
add
mov
lds
inc
mov
dec
xor
icebp
pop
pop
sbb
mov
pop
jb
lock
insb
movsb
jne
cmp
inc
call
ss
dec
aaa
adc
insb
xchg
mov
push
push
roll
out
dec
out
rorl
sbb
das
decb
push
cli
xor
push
cli
ljmp
jns
rorl
sbb
sub
jae
or
dec
pop
cmp
movsl
adc
mov
outsb
push
adc
push
fsubs
add
cmc
dec
testl
into
xchg
data16
cld
push
inc
xor
add
movsb
xlat
loopne
jns
sbb
cmp
inc
sti
adc
jmp
call
dec
leave
jp
cmp
jne
sbb
rcr
add
xchg
sti
pop
push
cmp
inc
addl
push
pop
jns
je
sbb
mov
loop
or
cmp
int3
lods
rep
dec
cmp
pop
xor
add
mov
movsl
fldenv
fld
aas
fstpt
lods
call
dec
loope
xchg
cmp
lahf
sub
ret
jno
jp
mov
loop
dec
xor
fnstsw
dec
push
mov
insb
shrb
push
fcmovu
ss
xchg
cs
aam
pop
lds
cli
pop
pop
push
push
mov
loope
sub
cmpsb
add
lret
add
addl
and
fisubl
adc
push
je
sub
push
jp
add
mov
das
les
push
inc
int3
xor
jge
jbe
fsubl
sbb
nop
cltd
xchg
xchg
ret
and
lahf
inc
xchg
and
ss
lods
xor
andl
imul
orb
mov
jecxz
mov
add
mov
inc
negl
in
ret
mov
jg
popa
lcall
les
cwtl
aam
cmp
mov
sub
add
rcrl
jno
xchg
arpl
inc
jns
jmp
mov
lds
adc
inc
inc
rcrl
stos
mov
mov
ss
inc
lds
mov
fwait
xchg
mov
xchg
push
adc
orl
mov
inc
xchg
sbb
js
fldt
mov
popa
add
xor
push
pop
movsb
call
push
lods
push
in
jno
inc
jg
mov
in
jmp
xchg
push
fwait
xchg
push
lcall
test
push
and
pushf
data16
stos
pop
pushf
aas
cmp
sub
lret
filds
inc
out
aaa
movsb
ja
aad
mov
movsl
mov
push
sbbb
push
aam
xor
mov
subl
movsl
mov
sub
imul
or
sub
lods
cmpsb
cltd
das
leave
jnp
dec
stos
pusha
outsb
lods
test
inc
and
loop
jbe
sbb
aad
mov
mov
cltd
lea
xor
ror
lret
cld
aas
push
mov
xchg
out
ja
fsubrl
lcall
xor
add
dec
pop
sub
mov
cwtl
mov
xor
cltd
cmp
aad
cmp
mov
add
jae
mov
lea
push
xchg
adc
cli
cli
and
cmp
mov
sti
or
fistl
sbb
shrl
aad
and
mov
dec
jmp
out
fimull
jmp
lds
cmp
jb
test
pop
lahf
add
in
sub
push
fistps
xchg
sub
filds
or
inc
or
xor
pop
xor
bound
stos
fildll
xchg
jno
cli
adc
fnstenv
leave
mov
movsb
test
mov
cld
adc
in
and
lods
mov
or
test
test
cmp
lea
xchg
mov
pop
sarb
mov
mov
and
jmp
dec
add
in
lret
cld
scas
mov
scas
dec
mov
and
jae
loopne
lods
nop
or
popa
ret
dec
sub
movsl
imul
stc
adc
push
push
inc
hlt
les
hlt
movsl
jmp
les
dec
mov
shlb
ret
push
subb
mov
inc
cmp
xor
mov
sbb
and
push
dec
lahf
cmp
test
mull
mov
push
addr16
mov
pop
xlat
xlat
add
ficoml
push
outsl
mov
jae
adc
mov
pop
xor
mov
popa
dec
lods
loop
inc
jmp
aaa
push
pop
inc
mov
fidivrs
mov
call
std
insl
ljmp
mov
subl
into
movb
pop
xchg
jb
std
dec
mov
lret
int3
cmpb
xor
stc
adc
fiaddl
inc
inc
mov
orl
scas
aam
ljmp
xor
pop
and
mov
call
mov
and
scas
xor
xchg
or
jmp
mov
fcmovnb
scas
adc
cmp
cmp
or
xchg
mov
call
hlt
scas
outsl
xor
movsb
push
pop
cmpsl
jmp
subb
cmpsb
jecxz
lret
sub
fldenv
dec
fistpll
mov
dec
aaa
or
pusha
mov
rorb
inc
insl
insl
and
inc
ds
scas
xchg
loopne
xor
inc
cltd
repnz
pop
movsb
out
and
nop
mov
push
mov
pop
loopne
push
xchg
jae
push
cmp
and
movsb
scas
cmpsl
pop
xchg
int
dec
mov
lahf
xchg
or
jne
sbb
cmp
repnz
mov
sub
ds
aaa
ret
xor
fldt
mov
inc
add
xor
push
loop
hlt
scas
add
xor
cmpsw
mov
add
mov
dec
mov
loop
adc
enter
lahf
insl
outsl
incl
dec
or
sub
rorb
push
pop
and
and
ret
add
sub
lret
jnp
faddl
xor
in
sub
aas
dec
or
push
cs
add
mov
hlt
aad
lret
xchg
xchg
out
xchg
std
adc
pop
jg
adc
rcr
and
mov
sub
sahf
jmp
lods
mov
or
dec
leave
imul
inc
ret
fimull
outsl
pop
mov
inc
popf
in
test
aad
xchg
mov
in
ljmp
in
sub
mov
jecxz
flds
out
imul
movb
mov
es
insl
xchg
aam
iret
ljmp
or
mov
dec
cltd
jae
mov
pop
jmp
rcrb
iret
test
notl
dec
movsl
in
pop
pushf
dec
out
lret
imul
sarl
xor
mov
sarb
xor
or
lea
stos
mov
test
push
jge
pop
das
mov
and
orb
adc
or
mov
scas
cmp
push
pop
push
sahf
hlt
push
xchg
dec
stc
xor
in
fwait
into
or
cld
cltd
xchg
xor
outsl
lcall
cltd
adcl
push
mov
hlt
shrb
or
pop
cwtl
loop
test
pop
xor
aad
rcl
pop
mov
sub
aad
pop
add
cmpsb
xchg
inc
ret
adc
sbb
addr16
daa
pop
out
nop
lea
scas
xlat
xchg
sbb
scas
mov
arpl
les
je
js
xchg
push
pop
test
movsb
mov
pusha
addb
ljmp
call
adc
stc
push
loopne
xchg
push
stos
push
test
popf
hlt
lods
sub
sub
inc
mov
or
jge
dec
and
push
sbb
fistpl
aad
test
cmp
stc
loop
push
xor
dec
rorl
sbb
add
pop
sbb
cmp
inc
test
xor
aas
into
inc
movsl
cmp
aad
and
pop
notl
and
aam
outsb
jl
enter
jge
rcll
shll
mov
sarb
out
lret
test
scas
cwtl
jl
pop
pop
aad
std
insb
and
adc
test
jnp
pop
shll
lods
arpl
mov
mov
jnp
inc
aam
adcl
std
outsl
fmuls
add
call
fstpt
jne
xchg
insl
les
or
and
jo
push
test
test
pop
add
add
adc
or
mov
dec
add
inc
scas
cwtl
cltd
push
and
sbb
outsb
jmp
pop
inc
sub
xchg
sbb
adc
xor
push
mov
mov
ja
nop
lcall
inc
repnz
shrb
ja
cwtl
notl
mov
pop
xor
jp
outsl
jo
push
mov
pop
sbbb
fnsave
jns
mov
icebp
push
mov
pop
jae
add
fistl
aas
popa
fdivr
lods
in
dec
and
xchg
mov
mov
jmp
cmp
add
in
and
mov
inc
mov
or
cmp
movsb
jnp
push
xchg
mov
mov
sbb
sub
add
pushf
and
mov
xchg
scas
andb
fbstp
push
sbb
dec
inc
out
stc
mov
out
xchg
jmp
pop
xlat
in
popf
xchg
pop
ljmp
movsb
pop
and
stos
scas
jbe
cli
test
mov
icebp
icebp
dec
outsb
addb
jnp
cmc
and
mov
int3
int
push
insb
ja
cmpsl
xor
clc
mov
mov
ret
mov
jae
dec
shlb
xchg
fld1
ret
mov
iret
push
jno
ds
mov
mov
xchg
js
push
out
jno
sub
pushf
mov
lahf
cli
test
dec
lahf
into
outsb
push
xchg
dec
test
sub
mov
xchg
es
dec
mov
push
and
push
push
enter
push
cmp
movsl
ljmp
pop
insl
adc
mulb
sti
adc
push
je
mov
lahf
sub
push
ja
xor
or
outsb
push
outsb
fildll
lret
cmpb
hlt
pop
sbb
cmp
lahf
mov
in
add
cwtl
fldenv
mov
jecxz
pop
push
cmp
stc
sbbb
sub
mov
sub
int
sbb
push
bnd
adc
bound
xor
lret
ja
mov
mov
cmpsl
or
xor
jne
iret
aaa
xor
int3
es
leave
shlb
or
out
stc
mov
ja
ss
xchg
loopne
stos
xchg
add
in
cmp
stos
and
je
sub
mov
or
cmpsl
or
sub
push
push
or
xchg
nop
mov
push
jnp
fldl
mov
sbb
add
gs
or
jnp
idivb
adc
sbbb
mov
stc
xchg
mov
sbb
xchg
lahf
ja
xchg
loop
in
ljmp
enter
arpl
ljmp
pop
lods
sbb
xor
decl
jns
adc
fwait
adc
loop
stc
daa
sbb
push
fadd
clc
xchg
jne
aas
outsb
xor
rolb
jle
fucomi
or
cmp
inc
pop
iret
fiaddl
dec
push
xchg
mov
lahf
mov
push
adc
jne
jb
fptan
add
sarb
and
mov
mov
mov
push
and
and
movl
imul
std
scas
outsb
aaa
out
aad
insl
ds
sarb
inc
test
movsb
jp
pop
jne
int3
xchg
test
pop
dec
ljmp
xor
mov
sbb
or
mov
adc
push
jb
subl
movsb
call
leave
out
sbb
xchg
mov
js
aad
in
dec
daa
insb
mov
shlb
test
fimull
or
adc
add
aam
add
jae
pop
mov
xchg
rcrl
in
aaa
aaa
mov
fsub
enter
inc
jmp
clc
pop
repnz
cmpsl
or
sbb
ljmp
and
into
cmpsb
into
imul
sub
jg
pop
pop
popa
insl
pop
arpl
add
stos
test
lods
jmp
cmp
fstl
fs
cltd
sub
outsb
daa
inc
xchg
in
test
aad
inc
lock
imul
mov
xchg
sub
cmp
mov
push
xchg
mov
mov
lods
sahf
out
cmp
xor
mov
mov
jns,pt
pop
push
test
subl
scas
bound
or
ret
enter
out
test
pushl
mov
mov
cld
xor
popa
push
mov
push
jmp
movsb
sbb
ljmp
les
ljmp
add
test
outsb
mov
or
scas
inc
pusha
xchg
push
sahf
pop
push
mov
xchg
jg
push
pushf
fbstp
cmp
cmp
loope
pop
mov
mull
fcmovu
repnz
mov
dec
fisttpll
loopne
jne
fsubs
pop
sbb
add
mov
add
adc
and
xchg
xchg
mov
mov
and
push
out
outsl
out
or
ljmp
or
into
add
sbb
mov
cmpsl
insb
dec
call
lea
jne
adc
push
fstpl
pop
xorl
ds
mov
jno
push
jnp
adc
pop
sete
jp
push
shll
lret
jmp
xor
adc
aam
sbb
mov
push
jmp
cld
cltd
cmpsl
add
int3
scas
or
adc
xchg
ja
loopne
mov
cltd
inc
test
jl
das
stos
add
mov
aas
mov
enter
dec
popa
imul
cld
cmp
pop
inc
pushf
push
cmp
lcall
movsb
mov
push
adc
mov
push
xchg
outsl
das
and
jmp
test
test
adc
js
xchg
inc
xchg
rol
xchg
mov
ret
ret
lahf
mov
andl
rcrb
syscall
arpl
inc
in
loopne
dec
iret
jbe
imul
lds
xchg
ficoml
inc
mov
xchg
pop
adc
mov
cmp
icebp
aam
xchg
fnstcw
movsl
pop
cmp
loop
dec
arpl
mov
inc
adc
fwait
jo
mov
sub
jnp
insl
push
les
push
xor
in
dec
aaa
sarb
sti
aad
shlb
scas
imul
add
into
mov
test
jp
dec
roll
xor
jge
mov
lret
pop
pop
push
int
cmpsl
scas
jbe
loop
push
push
fwait
aas
add
mov
imul
sub
ja
dec
sbb
je
cli
or
push
rcrb
mov
cld
out
push
hlt
das
ss
lea
fsubrl
mov
push
jle
stos
insl
inc
imul
sub
push
insb
add
iret
pop
pop
adc
xchg
arpl
loop
fldl
sub
cmp
cmp
add
mov
xchg
sbb
jnp
bound
js
mov
pop
add
dec
dec
loopne
xchg
call
xchg
mov
xchg
fwait
and
pop
push
pop
sbb
cld
inc
je
pop
js
jl
xor
push
or
or
dec
data16
mov
imul
push
or
stc
cmp
pop
das
adc
stos
mov
test
in
jle
add
bound
shll
jbe
out
mov
fdivr
push
shr
es
fsubp
fs
mov
push
xchg
pushf
mov
sub
popf
popf
pop
imul
insl
mov
sbb
ret
mov
or
jbe
dec
in
mov
sbb
cmpsb
enter
lcall
xor
push
out
scas
push
adc
lock
jns
repz
inc
fiaddl
mov
push
mov
jo
enter
loope
je
into
lods
adc
sub
out
sub
aas
mov
jge
shl
lret
lock
arpl
xchg
into
mov
xor
mov
lahf
repnz
or
sbb
jno
cmpsl
xor
cld
arpl
cmp
lea
pusha
leave
enter
prefetcht0
lock
out
xchg
mov
push
int
push
std
xchg
ljmp
in
xchg
lods
rcrl
jbe
add
clc
adc
rcrb
or
aaa
ret
jnp
sub
int
fisttpl
ds
arpl
add
sbb
insb
pop
vcmpsd
lock
int
lock
popa
add
inc
push
inc
sti
adc
insl
cmp
push
sub
or
lock
or
sub
pop
aam
rcrb
addr16
popf
dec
daa
loopne
je
shll
push
popf
fs
lock
mov
lock
add
mov
pusha
ret
mov
mov
andb
jnp
fptan
jle
fstp
pop
fwait
iret
pop
rorb
inc
stos
sub
loop
bnd
pop
cmpsl
dec
pop
xorb
xor
and
mov
pop
in
inc
add
xor
out
scas
inc
in
dec
jge
mov
adc
jmp
fistpl
mov
rclb
cmp
push
insb
add
sbb
mov
mov
pusha
or
enter
mov
push
into
and
mov
xchg
lock
lret
jb
mov
in
pusha
xchg
sbb
mov
ficoms
rol
mov
add
out
cwtl
jmp
aam
and
hlt
sbb
decb
pop
or
fbld
dec
and
cld
push
inc
inc
les
sub
ret
ret
dec
hlt
loop
jmp
das
clc
rclb
jne
cmp
sub
dec
inc
daa
scas
push
int3
mov
mov
pop
add
adc
std
adc
inc
cmp
mov
cmpsb
ret
inc
into
iret
sub
test
in
mov
stos
adc
leave
in
dec
sbb
bound
cmpsl
pushf
pop
lods
inc
popa
cmpsl
inc
mov
cmpsl
xorb
xchg
add
jmp
imul
shlb
mov
add
jo
lahf
mov
inc
add
add
dec
cli
negl
cwtl
dec
inc
scas
pop
pop
mov
add
sbb
jp
xlat
dec
call
mov
insl
shlb
and
inc
lods
leave
mov
xchg
pop
shlb
sub
leave
lret
in
dec
dec
pop
imul
xor
std
or
sbb
or
inc
repnz
and
mov
arpl
ja
lea
scas
cltd
jmp
data16
lock
jbe
jb
lcall
sub
cmp
rcrl
xchg
xor
ss
std
cmp
jmp
inc
jg
inc
xor
scas
push
out
je
shlb
xchg
insb
and
xchg
xchg
les
mov
and
dec
into
orb
and
push
in
das
jbe
pushf
pop
test
sub
dec
pusha
stos
lcall
aaa
insb
cmp
jne
fcmovbe
loopne
jmp
rcr
sbb
stos
dec
ja
jl
push
sqrtps
add
pop
loop
adc
pop
xchg
popf
mov
add
imul
mov
jnp
sti
loopne
cltd
cmpsb
and
pop
call
xchg
dec
ja
xchg
jo
cli
dec
hlt
cmp
gs
les
pop
cmp
or
adc
movzbl
mov
repnz
inc
add
outsb
push
sti
inc
lds
rcrb
mov
rcr
xor
xchg
cmp
movsb
mov
push
sub
mov
out
push
pop
mov
fnsave
test
mov
in
fcoms
xlat
pop
push
cmpsl
dec
jmp
into
outsl
insl
popf
stc
sub
sub
stos
ja
adc
jns
dec
cld
xorb
sub
aad
push
popa
push
adc
dec
js
call
sbb
pop
cmp
aas
push
and
data16
decl
mov
imul
sbb
or
arpl
sarl
sbb
fldcw
jmp
insb
jmp
add
ror
cmpl
mov
je
cwtl
dec
pop
mov
cs
xchg
out
addr16
mov
jbe
loop
xor
dec
les
ret
sbb
pushf
pop
call
pop
cmp
cmp
int
mov
pop
faddl
pop
and
mov
push
xchg
and
lret
loop
cmp
into
lea
insb
frstor
jmp
mov
mov
sbb
fwait
pop
and
rclb
push
dec
sbb
xchg
aam
dec
outsb
xor
push
push
sbb
hlt
xchg
pusha
mov
orl
add
pop
xlat
mov
test
dec
jae
lahf
sub
mov
push
sub
jp
push
adc
loopne
shlb
push
hlt
pop
push
add
add
outsb
sbb
dec
in
nop
sbb
fs
adc
sub
mov
scas
pop
mov
mov
xor
out
jnp
adc
cmp
xor
shlb
repz
adc
insb
and
push
xchg
dec
mov
inc
mov
push
push
fs
loop
mov
pusha
loope
cs
mov
cmc
cli
adc
xchg
mov
mov
enter
xchg
jne
push
es
sub
adc
jge
jbe
int
ss
xchg
sub
test
pop
xchg
lock
sti
xor
fwait
stc
testl
jp
mov
push
jg
sbb
test
or
mov
faddl
into
addb
popa
nop
jl
inc
mov
mov
loopne
imulb
ret
cmpsb
pop
fst
shll
mov
out
add
jecxz
mov
lret
pop
lret
push
mov
cld
in
popa
push
xchg
cmp
divb
insb
not
add
sub
xor
jb
repz
inc
filds
xlat
cmp
test
xor
push
dec
fcoms
insl
mov
push
loopne
lcall
in
pop
xchg
das
xor
push
daa
inc
mov
dec
push
sub
pop
xorl
sub
stos
push
xchg
xchg
sti
inc
and
jbe
mov
mov
inc
sub
push
dec
xorb
mov
clc
mov
cmc
mov
dec
mov
inc
xor
pop
xchg
nop
inc
cld
aas
and
push
dec
repnz
adc
jmp
xchg
mov
mov
push
daa
adc
xchg
daa
cli
inc
push
scas
loope
xor
cmpsb
je
aad
mov
mov
fsts
pop
jb
repnz
mov
loopne
inc
jo
pop
add
xor
jbe
mov
add
addb
cmp
divl
sti
push
mov
sbb
cmp
push
rorl
sub
and
orb
mov
sbb
lcall
sub
repnz
notb
aaa
cmpsl
push
fs
jnp
out
jmp
xor
push
inc
mov
sahf
xorl
in
nop
jae
outsl
add
dec
inc
xor
cmp
mov
mov
div
loopne
and
jne
in
pop
cwtl
mov
sbb
lret
or
dec
push
pop
mov
or
mov
call
adc
enter
dec
stos
xchg
jge
mov
add
xchg
jmp
cmp
shlb
xlat
xchg
in
xor
std
cs
dec
subb
std
xchg
adc
mov
mov
ret
push
nop
lret
ja
fstp
xchg
or
insb
insl
sbb
dec
stos
notb
jp
sub
pusha
and
pop
test
ror
mov
pop
jbe
in
push
xchg
xlat
out
stc
pushf
inc
pushf
and
push
arpl
das
xor
pop
or
mov
lret
dec
mov
fnsave
and
repnz
pushf
repz
or
cmpsl
ljmp
jge
dec
je
test
outsl
jg
in
sub
adc
sahf
test
add
je
clc
call
icebp
lcall
mov
insb
cmc
lea
pop
hlt
sub
dec
add
jg
loop
ja
scas
das
inc
jecxz
and
adc
push
movsl
sbb
xlat
aad
push
in
aaa
mov
repnz
xchg
adc
mov
pop
push
push
push
jecxz
sub
mov
mov
mov
mov
jp
aas
data16
mov
push
jbe
push
loope
push
xchg
std
mov
sbb
xchg
imul
aaa
sti
cmpsb
jne
jp
cld
insl
jg
ss
add
sbb
stc
mov
ret
test
aas
movsb
es
xor
sar
mov
cmp
aaa
or
pop
xor
test
loopne
inc
test
sub
insl
stos
xor
test
test
rcll
add
movsl
cmc
std
gs
andb
inc
scas
sahf
add
or
outsb
add
sub
pusha
movsl
out
cmp
sbb
sbbb
jo
out
pop
sbb
mov
cld
add
sarb
jae
imul
leave
sub
int
inc
mov
sbb
xchg
outsb
add
add
fwait
je
xor
dec
mov
xchg
xlat
std
fldcw
mov
cmp
cmp
enter
mov
xchg
add
cmpsl
inc
cmpsb
add
pop
mov
jl
and
cmp
xchg
lcall
test
andb
sub
push
and
inc
fcmovnu
out
sti
inc
mov
push
push
sub
mov
add
jbe
mov
inc
cs
rorl
push
or
dec
pop
lahf
into
ficomps
je
repnz
xor
jle
xchg
mov
dec
xor
enter
ljmp
cltd
push
daa
jb
imul
neg
test
aam
push
pop
mov
mov
xor
mov
insl
fld
ljmp
pop
adc
push
jns
es
xor
fdivrs
jno
aad
imul
imul
add
adc
jl
test
xor
jne
aas
sub
add
cmp
es
jg
mov
xchg
inc
lock
imul
fiadds
xor
ret
add
xor
push
fiadds
cwtl
subb
cmp
jp
mov
ret
les
ss
fdivrs
pop
rorb
mov
jp
mov
ds
sti
sbb
jmp
and
popa
imul
pop
in
gs
cmp
and
out
repz
mov
fsubs
call
dec
fistpll
negl
stos
decl
jecxz
test
mov
lods
out
sbbb
mov
iret
fcoms
jae
mull
mov
lods
jecxz
jge
sub
mov
adc
je
mov
loop
das
xchg
je
lds
add
pop
ja
fs
rcr
inc
js
push
dec
and
mov
sbb
int3
xor
shlb
and
pushf
arpl
inc
fsts
inc
cs
int
cli
test
add
daa
and
add
sbbl
jb
mov
fs
pop
ret
xchg
in
add
mov
std
roll
aaa
adc
mov
adc
jge
sbb
jbe
shlb
jno
insl
xorb
xchg
cmpsb
sbb
mov
fwait
push
movsb
lds
lods
pop
push
jns
dec
adc
pushf
fwait
xor
jge
lcall
jbe
add
bnd
inc
push
aad
cmc
repnz
jg
mov
xor
les
or
inc
sbb
outsl
xor
aaa
xchg
imul
out
pop
dec
dec
dec
out
fnstsw
icebp
add
stc
jnp
sub
dec
or
cmpsl
mov
xor
loope
jb
push
mov
xor
daa
add
mov
sbb
xchg
cltd
arpl
pop
push
dec
test
push
cs
cmp
pop
scas
inc
cltd
hlt
xchg
mov
pop
mov
push
ficomps
cltd
mov
mov
jle
lahf
xor
ret
sbb
xor
or
sbb
dec
mov
shlb
xor
push
and
fstps
icebp
inc
cltd
push
popa
into
aad
dec
sub
jg
pop
jns
xorb
cmp
ficoms
imul
push
push
lea
andb
inc
and
mov
xchg
rorb
mov
sbb
xor
outsl
fcmovbe
stos
jnp
ljmp
and
jnp
idivb
sub
inc
mov
daa
test
inc
ud1
mov
test
jb
dec
mov
mov
and
or
leave
inc
dec
and
jge
jp
bound
mov
icebp
sbb
jge
inc
sub
add
fdivrs
lahf
and
mov
pusha
mov
pop
aaa
adc
fiadds
in
push
and
pop
jecxz
aaa
fs
mov
cmp
test
jp
daa
aam
sbb
xchg
mov
or
sub
jbe
ja
push
pop
and
sbb
mov
lods
inc
shrb
test
shlb
push
repnz
mov
cld
out
and
inc
mov
sbb
filds
clc
std
inc
cli
scas
lret
int3
lret
movsl
jle
int
push
xlat
pop
mov
call
jbe
jns
cmpsl
nopl
cmpsl
cmp
int3
adc
mov
push
sub
cmpl
ljmp
or
je
dec
rcrl
or
cwtl
xchg
jg
lods
clts
popf
xchg
add
jnp
pop
mov
xlat
jnp
js
xchg
fisubl
sub
shrb
xor
fcomip
int
mov
mov
loope
cmpsb
cmpl
test
call
rcrb
sbb
in
int
push
cmp
sbb
int
xchg
xchg
add
sbb
add
and
xchg
push
mov
dec
popa
mov
dec
and
push
sub
repnz
or
inc
inc
dec
mov
insl
hlt
dec
repz
iret
xchg
mov
test
dec
pop
add
ret
mov
aas
mov
cmp
subb
adc
xor
imul
cltd
adc
add
add
cmc
jo
out
pop
adc
mov
or
loop
lds
mov
add
test
nop
popa
xorb
lret
inc
inc
daa
jg
pop
movntps
in
jp
leave
cli
mov
jmp
inc
shlb
jmp
rolb
movsl
sbb
into
sbb
and
mov
pop
popa
das
jo
aaa
jg
cld
push
repz
or
cmpb
std
test
mov
and
out
sti
mov
mov
jmp
xor
or
hlt
lret
xlat
sub
in
loopne
scas
sub
repnz
stos
pop
aaa
jnp
ficoml
dec
es
fdivrp
rorb
xchg
mov
out
cmp
in
rolb
fwait
js
cmpsb
push
pushl
dec
hlt
dec
pop
stc
mov
xchg
pop
movsb
les
std
pop
lds
push
lea
jmp
imul
xchg
xor
and
or
enter
xchg
cmp
scas
ficomps
divb
aad
into
xor
mov
push
xor
ja
and
push
lahf
and
sbb
and
jmp
push
fildl
ja
pop
adc
dec
sbb
adc
cmpsl
aas
xor
mov
call
sbb
xchg
scas
ja
xor
sahf
jno
pop
lcall
xchg
lret
mov
bound
loopne
cltd
sbb
inc
repnz
call
dec
subl
cld
inc
jmp
xor
in
adc
cltd
and
ficomps
xchg
imul
mov
and
imul
jae
imul
addr16
data16
fbld
lods
sbb
notb
popf
lea
out
fnstsw
clc
sub
mov
std
iret
gs
out
in
cld
mov
mov
xchg
cmp
ja
loop
and
and
nop
or
das
adc
sbb
and
cmpsb
addr16
push
ja
inc
push
fs
nop
ds
aas
arpl
inc
insb
ret
xor
mov
pop
clc
xchg
jb
xchg
xchg
sbb
inc
stc
stos
dec
add
lods
cwtl
ljmp
sub
ret
xor
dec
jl
adc
inc
fidivl
jae
movsb
sarb
jl
inc
es
jo
es
test
outsb
sbb
and
inc
test
mov
clc
repnz
pop
or
xchg
inc
mov
test
mov
shrb
xor
hlt
mov
in
cmp
into
mov
unpcklps
dec
inc
lods
fs
pop
testb
movsl
movsb
cmc
jo
dec
adc
roll
sbbl
xchg
out
xchg
push
mov
fnstsw
push
loopne
cmpsb
mov
loop
cmp
inc
adc
and
push
cmp
out
shrb
hlt
gs
arpl
add
mov
pop
push
ret
pop
addr16
es
popa
sub
enter
arpl
add
movsl
inc
mov
and
mov
out
lahf
lock
addb
jmp
lods
lds
cmp
mov
in
mov
test
cmpsl
jg
cmpsl
test
sbb
jbe
push
adcb
rorb
js
das
inc
or
sbb
and
xchg
paddusw
test
xor
and
add
out
cmpsb
jb
vandnps
add
xchg
movsl
sub
clc
movsl
push
dec
push
or
sub
mov
mov
test
scas
in
je
out
lcall
cli
xchg
cmp
sahf
sub
mov
push
fwait
adc
jmp
lret
cwtl
ret
add
xchg
cmc
data16
dec
dec
cwtl
cmp
push
es
push
cmp
sbb
or
mov
lds
lock
sub
or
add
or
xchg
adc
inc
dec
push
in
pop
cmpl
xchg
mov
inc
imul
pop
mov
add
and
loope
jmp
rorl
stc
shlb
fsubl
movsl
sbbl
mov
or
xchg
lea
in
cld
sbbl
sahf
sbb
sti
enter
jae
mov
iret
popa
arpl
ror
adc
outsl
or
sub
adc
xlat
ss
mov
xor
dec
and
xchg
pushfw
jle
ficoms
sti
sbb
add
in
call
or
leave
out
rcll
adc
pop
incl
call
cmp
adc
aas
or
cmp
push
cmp
in
shlb
adc
mov
jmp
mov
stos
adc
dec
dec
insb
mov
inc
das
stos
mov
shrb
sbb
insl
repnz
inc
nop
lds
fwait
jne
ja
sbb
mov
lods
mov
mov
jno
push
or
xor
sahf
cmc
cmp
and
test
cmp
sub
jbe
rolb
inc
test
dec
jl
fmuls
mov
test
cmp
mov
mov
mov
loopne
mov
in
sbb
jno
xor
fiaddl
and
imul
addl
adc
xchg
pop
jns
cmp
push
adc
mov
jecxz
or
cmpsb
test
fistpl
jp
pop
divl
aam
and
xor
testb
add
mulb
fisubs
pop
mov
adc
test
rorl
pop
add
lret
cmp
into
cltd
loopne
les
push
xchg
repz
sbb
mov
cmpsl
xchg
xorl
mov
push
mov
mov
lods
mov
xor
jp
loopne
orl
aas
std
add
mov
ja
das
cmpsb
into
mov
call
mov
enter
pushf
xchg
pop
lods
inc
cmp
xor
pop
mov
pop
es
mov
in
jns
dec
cs
or
xchg
cmpsb
cmc
add
mov
ds
push
hlt
jae
add
mov
in
and
sbb
cmp
add
in
inc
and
std
cmc
mov
mov
pop
ja
ljmp
sub
aas
xor
out
inc
dec
push
jp
call
dec
xchg
inc
pop
hlt
adc
pop
jbe
sub
push
lret
fcmove
push
inc
movsb
pop
inc
mov
sete
ja
int
out
jmp
jns
pop
repnz
sbb
lods
pop
dec
push
xchg
lret
sub
jne
jns
sbb
add
lods
cmp
dec
xchg
inc
adc
xchg
clc
cmpsl
xor
pop
or
andl
fdiv
xchg
mov
mov
inc
testb
xchg
jg
jle
sub
xchg
adc
jg
push
outsl
and
test
mov
xchg
jo
mov
cmp
jmp
mov
jg
ds
pop
dec
or
mov
pop
loopne
jge
sbb
scas
mov
hlt
lcall
sahf
sti
jle
aas
in
pop
push
cmp
cmc
and
les
aam
mov
lds
js
inc
pop
fcmovu
push
lods
lods
sub
jle
sahf
clc
inc
lret
add
or
pop
std
scas
sbb
and
lds
pushf
jecxz
jge
aaa
xchg
or
jl
xchg
mov
mov
rolb
aas
aam
adc
into
push
mov
inc
stos
jnp
jecxz
popf
imul
in
cld
gs
call
inc
fs
cli
inc
xchg
pushf
stos
xchg
hlt
pop
mov
je
repz
jge
std
xchg
repnz
jae
sbb
or
dec
movsb
xchg
inc
fstps
loope
jmp
sub
and
cmp
add
jge
movsb
outsb
aas
mov
dec
jae
pusha
leave
dec
lret
fldenv
cmc
sub
div
inc
aam
jecxz
mov
scas
push
jg
mov
inc
pop
aaa
into
lds
push
sub
mov
loop
xorl
lahf
movsb
xchg
mov
stos
movb
adc
mov
aam
sub
and
fcompl
xchg
jp
cmpsl
in
insl
add
cs
fidivs
insl
or
insb
jle
mov
push
test
or
cli
call
test
test
aas
sbb
jb
loop
inc
xor
jmp
enter
addr16
out
pop
in
mov
loopne
mov
mov
jg
mov
hlt
in
xor
xlat
int3
int
stos
inc
dec
adc
mov
pop
adc
aas
push
or
fidivl
divl
xchg
adc
loopne
adc
mov
lret
jecxz
adc
mov
adcb
pop
add
inc
jp
iret
imul
addr16
jb
gs
mov
lret
sbbb
repz
clc
and
cld
in
mov
or
dec
fs
cmp
in
ds
ror
iret
xchg
adc
mov
orl
insl
xchg
fdivrp
arpl
xchg
sub
out
xor
lods
mov
in
stos
cltd
add
mov
lahf
das
hlt
jl
push
rorb
jo
insb
shlb
inc
into
pop
dec
outsb
into
fdivl
xor
out
sub
out
cltd
mov
mov
sarb
fildl
xchg
sti
mov
pop
xchg
cmp
adc
push
mov
and
jns
lods
jl
bound
cltd
imulb
sbb
ljmp
add
lret
xchg
stc
cli
push
lods
loop
mov
fldt
adcl
test
mov
imul
sbb
mov
cmp
mov
mov
dec
ret
push
pop
sub
mov
xor
scas
outsb
inc
xor
jp
mov
fldl
jns
ja
mov
and
xor
fwait
or
adc
shlb
pop
popl
push
clc
js
out
jnp
outsb
movsb
loopne
std
push
sbb
and
mov
ja
imul
sub
xchg
cltd
mov
iret
jmp
xchg
jl
inc
jb
adc
nop
inc
push
enter
das
pop
loop
cmp
pop
lcall
or
in
lret
loopne
test
sbb
test
insl
fwait
add
adc
jo
stos
iret
out
cmpsb
push
dec
int3
ficompl
int3
or
repz
pop
inc
jbe
pushf
loop
xor
xlat
push
rcrb
sbb
or
xor
xlat
mul
adc
je
push
aas
outsb
ret
jmp
inc
xor
pop
out
adc
int
scas
mov
mov
or
hlt
inc
xchg
fstl
imul
add
enter
push
je
fcmovne
pop
push
add
imul
pop
mov
stc
movzwl
sbb
push
subb
pop
mull
ljmp
jns
cmp
inc
mov
out
mov
mulb
clc
clc
pop
pop
fnstcw
jecxz
jae
stos
or
adc
add
cmp
arpl
jb
push
leave
push
out
notb
ds
pop
inc
scas
mov
mov
push
int3
mov
inc
add
sbb
imul
mov
pop
inc
cmc
cmc
dec
push
jno
cmp
aaa
pop
and
push
test
dec
and
or
movb
jp
fidivs
jp
in
in
cld
insb
daa
out
loope
addr16
ret
ret
fistl
sub
and
mov
iret
mov
push
lret
ja
aam
mov
lods
insb
jmp
mov
adc
roll
pusha
addr16
sbb
mov
sbb
out
popa
outsb
sti
pushf
cmc
dec
jl
sbb
or
testl
mov
movsl
mov
arpl
sub
mov
out
jle
outsl
std
and
nop
shlb
stos
cmp
ja
and
test
xorl
adc
or
or
out
lret
mov
jnp
or
mull
shlb
mov
stc
pusha
pop
xchg
mov
or
cmp
rcrb
xchg
lods
les
jb
repnz
xchg
jns
loope
pop
int3
movb
sahf
or
stos
stos
test
movsl
punpcklbw
cmp
test
sub
enter
cmp
adc
call
ret
cltd
mov
testl
daa
aam
sub
shlb
aam
loope
out
out
loop
jo
scas
ja
hlt
fs
ss
xchg
adc
addr16
sub
testl
mov
jle
ljmp
mov
dec
jnp
addr16
mov
pusha
stos
stc
pop
sti
dec
leave
adc
inc
stc
mov
mov
scas
aas
rclb
lods
aam
dec
fwait
into
adc
add
in
pop
outsl
insl
push
dec
push
imul
dec
ds
rorl
and
js
push
repnz
mov
adc
outsl
add
stc
leave
out
pop
pop
or
mov
mov
je
jmp
jnp
leave
mov
mov
inc
mov
cmp
jmp
fadds
ljmp
jg
or
hlt
xchg
repz
xchg
ret
xchg
xor
sarl
rep
enter
or
adc
sarb
push
enter
pop
enter
cmpsl
push
sbb
aam
movq
loopne
or
in
sbb
mov
cmp
mov
pop
jnp
nop
xchg
inc
push
push
xchg
sbb
ret
pop
adc
mov
jge
push
sub
idiv
out
subl
lcall
adc
jno
mov
in
pusha
push
xchg
cmp
xlat
enter
stos
cld
push
jp
and
lds
loope
adcb
mov
sbb
sahf
cwtl
add
clc
sbb
add
inc
lods
pop
pop
push
jne
push
sub
fnstsw
lret
xchg
and
movsl
lcall
pop
dec
pshufw
aas
mov
mov
xchg
or
xor
mov
pop
or
sbb
push
add
push
ss
xlat
cmc
gs
gs
cmp
leave
repz
mov
insl
cmc
xor
xor
push
out
xor
xchg
and
ds
dec
lret
pop
dec
mov
sub
sbb
test
ja
pop
stos
sbb
sbb
iret
push
or
out
mov
or
xorb
lods
insb
xlat
test
cmp
xor
jmp
out
pop
adc
sarl
jecxz
xchg
icebp
mov
add
daa
hlt
out
jns
dec
mov
pop
push
push
cmp
dec
sbb
and
and
add
sub
addl
out
int
push
sub
js
hlt
mov
mov
popf
mov
mov
push
mov
test
pop
push
scas
shll
loopew
add
std
in
popf
mov
adc
jbe
mov
pop
xor
mov
and
adc
jl
xchg
mov
pop
sub
jb
inc
notb
xor
les
testb
xchg
xor
stos
out
lods
fisubrs
xchg
mov
inc
mov
mov
add
xlat
shrl
sbb
or
sub
inc
add
dec
stos
addl
shlb
pop
sub
sbb
stc
push
std
xor
mov
and
mov
dec
lea
movsl
scas
popl
jg
mov
mov
data16
jbe
mov
cs
scas
add
sbb
cli
stos
xor
cmp
mov
pop
fcoms
repnz
dec
stos
push
cmp
prefetchwt1
adc
iret
pop
rcrb
lahf
push
clc
adc
dec
xchg
loopne
or
fistpll
fidivs
iret
pop
adc
outsb
js
dec
jbe
xor
cmp
sbbb
enter
add
ret
das
mov
and
or
xchg
push
fsubr
out
ja
xor
insl
in
xchg
out
scas
into
pop
push
dec
insl
sti
cmp
leave
or
fisttpll
adc
insl
call
mov
mov
outsb
cmpsb
cmc
push
adc
or
std
fsub
out
fistl
push
loop
repz
subb
pop
inc
pop
cmc
mov
mov
mov
outsb
sub
lahf
enter
cli
xchg
jp
push
xor
adc
aam
push
inc
dec
enter
mov
mull
js
pop
or
repz
jle
aam
dec
test
fidivrs
sbb
pop
fwait
jb
xor
es
test
lods
push
stos
mov
cmp
cmp
fldenv
pop
mov
loopne
xor
dec
sti
sbb
xchg
cli
cmp
add
sti
sub
mov
or
lods
adc
push
pop
movsb
bound
and
repz
cld
push
data16
daa
sub
push
stos
inc
xor
outsl
mov
xchg
inc
pop
jae
aas
cltd
popa
and
pop
mov
jae
aad
fisttpl
and
mov
lods
mov
push
sub
mov
or
xor
frstor
lcall
mov
pop
add
in
call
xor
dec
cwtl
aad
push
xor
inc
sub
je
daa
imul
dec
jmp
fisttps
mov
or
and
nop
outsl
mov
lods
jne
jge
cld
mov
movsl
jo
push
pop
popa
lret
add
add
incl
sub
insb
push
icebp
sahf
in
sarb
ret
gs
or
sub
shll
lret
cld
jge
pop
mov
and
push
or
mov
xor
test
sbb
push
repnz
push
inc
mov
push
inc
rolb
dec
bound
sub
push
mov
icebp
mov
stos
daa
fnstcw
lea
push
cmp
or
dec
pop
and
mov
xor
sbb
push
jg
pop
jb
and
mov
cltd
mov
inc
push
testb
pop
mov
pop
and
lahf
xor
cmp
test
rcll
in
jle
sub
insb
outsb
idivb
pop
iret
shll
jne
rcr
add
insb
mov
mov
cwtl
leave
dec
xchg
fnstsw
mov
jns
sbb
mov
adc
cmp
popa
jle
mov
je
cwtl
inc
push
popf
jl
lods
push
cmp
aaa
sub
pushf
jmp
icebp
loope
xor
mov
adc
xchg
mov
mov
pop
aam
and
mov
insl
fistps
mov
lret
dec
add
test
sub
mov
cmp
cld
stc
in
mov
and
js
jecxz
pusha
cmovge
ss
fs
jge
xchg
xor
shll
push
fisttpl
clc
daa
imul
outsb
gs
sub
pop
in
xchg
cld
insl
aaa
nop
mov
pop
jmp
sbb
icebp
stos
aam
and
push
cs
push
push
add
ficompl
xor
ljmp
jo
lods
pop
decb
add
xor
xchg
adc
sub
insl
push
mov
pop
adc
jle
pop
sub
jmp
push
mov
mov
lods
push
test
fistl
xchg
sti
fcom
iret
jmp
imul
stos
xor
mov
test
lcall
in
nop
inc
cltd
dec
add
fcmovnu
out
test
pop
cmp
out
lret
jmp
mov
and
jns
adc
pop
stos
push
mov
sti
sti
xor
or
jns
popf
jmp
out
into
dec
frstor
pushf
sbbl
jae
lods
js
and
mov
shr
fwait
popa
js
ret
testl
inc
arpl
insb
mov
repz
xchg
movsl
cmp
xchg
inc
shlb
jne
daa
xchg
jb
fsubrl
inc
push
sbb
loope
test
xchg
bound
cmp
mov
arpl
or
nop
lcall
ret
repnz
jbe
rolb
xorl
int
jp
movsb
push
mov
fdivrl
repz
sbb
jo
add
outsl
fnstsw
or
insb
cmpsl
pop
and
cwtl
rorl
hlt
dec
ss
mov
adc
mov
push
fdiv
xor
mov
jnp
into
inc
fsubl
call
pop
addb
and
ficoml
fs
sarb
test
dec
cmp
mov
xchg
pop
jae
rorl
js
int3
stos
push
dec
xchg
mov
jns
imul
inc
in
fadds
mov
xor
testb
sub
mov
ror
xchg
rcr
aaa
in
mov
repz
cmp
pushf
ljmp
cltd
fbstp
xchg
repz
xchg
clc
sbb
pop
inc
lock
cmpsl
inc
jge
mov
or
in
movb
enter
mov
push
push
lcall
fisubrl
out
adc
popa
add
stos
jmp
jnp
cmp
mov
pop
cmpsb
jns
aad
int
and
lret
dec
xor
mov
cmp
iret
imulb
test
xchg
insb
sbb
test
roll
cwtl
les
jle
jns
xor
movsb
and
das
adc
aad
push
push
xchg
inc
sbb
sub
and
mov
push
shr
in
jne
outsb
mulb
repnz
xlat
lcall
pop
jbe
sbb
xor
inc
iret
mov
fsubl
dec
lret
divb
insl
dec
hlt
xor
push
xlat
sahf
xchg
in
sub
or
mov
data16
mov
xchg
outsb
xor
loop
repz
fs
stc
test
test
jl
imul
sbb
test
sti
inc
loop
cmpl
lcall
xor
jp
adc
int3
mov
ds
xlat
mov
sbb
jne
pop
adc
stos
dec
xlat
pop
jbe
lret
mov
test
sbbb
aas
pop
xchg
rcrl
fs
and
cwtl
push
and
mov
dec
inc
sbb
arpl
js
lahf
mov
mov
shrb
fbstp
les
test
call
add
xchg
jg
repz
pop
dec
mov
push
into
jo
or
adc
aas
arpl
je
sbb
gs
ss
in
cltd
xchg
notb
push
ss
data16
out
ds
mov
adc
call
mov
test
pop
xor
rcll
mov
inc
or
aas
lret
shl
and
xor
and
push
xchg
ljmp
or
dec
dec
movsl
adc
adc
jns
or
jg
sbbb
jmp
sub
out
aam
gs
std
add
pop
imul
mov
sub
push
cmpsl
push
stos
imul
sarl
inc
scas
gs
popf
mov
das
les
test
jmp
in
mov
jmp
mov
out
into
daa
mov
dec
dec
ljmp
repnz
jle
adc
outsl
xchg
adc
xchg
xchg
test
sti
mov
cmpsl
loop
sub
push
mov
jae
sti
jne
or
roll
or
sbb
loopne
test
gs
cmc
shlb
xchg
movsl
mov
jle
or
dec
in
popf
inc
fsubrl
xor
popf
lods
in
stos
scas
adc
cld
xor
nop
mov
xor
mov
and
stos
outsl
add
and
out
les
out
push
inc
pushf
lret
xchg
adc
pop
aam
jbe
inc
lock
test
xlat
in
sub
out
dec
sub
ljmp
incl
daa
mulb
pop
lock
jb
push
jne
insl
add
mov
out
push
pop
inc
lcall
cli
pop
adc
mov
jg
push
mov
es
ds
mov
leave
pop
bound
ds
push
rolb
inc
adc
pop
jmp
mov
stc
dec
jae
icebp
gs
push
mov
sbb
mov
mov
ljmp
or
inc
cmpsb
add
sahf
push
push
insl
mov
sbb
out
stc
or
arpl
fistps
dec
add
in
popf
push
xchg
mov
sbb
xchg
sub
add
sbbb
xor
sahf
dec
dec
cmp
jecxz
in
out
andb
add
jg
lret
ja
sub
xor
pop
mov
and
outsl
push
or
mov
pop
loop
and
dec
xchg
sbb
push
jnp
rorb
int3
or
xchg
cmp
adc
imulb
push
mov
inc
sbb
mov
xchg
jb
inc
pop
dec
add
mov
mov
jnp
fsubl
ret
push
popf
popf
popa
aad
mov
stc
mov
cmp
rorl
pop
leave
icebp
sbb
xor
movsb
mov
or
ja
mov
sbb
orl
push
stc
daa
mov
lahf
movsb
out
jne
lock
sub
outsb
xchg
faddl
mov
adc
jl
scas
add
xor
pop
jl
js
cmp
jl
mov
sub
lret
rorl
pop
push
mov
es
aam
adc
int3
inc
jb
inc
dec
cltd
adc
mov
outsl
adc
sbb
and
inc
mov
popf
and
es
adc
sub
xchg
mov
sub
popa
loop
push
aad
int
add
xchg
push
insl
adc
xchg
push
sbb
and
sbb
or
and
cmp
jg
fmull
outsl
push
std
mov
mov
adc
mov
stos
push
xchg
add
idiv
push
push
out
mov
dec
sbb
fstl
faddl
and
push
hlt
rolb
rclb
outsb
sub
pop
jl
mov
sbb
mov
jge
add
ljmp
push
or
iret
inc
shrl
sbb
fsubl
push
jns
lods
xor
imul
and
mov
mov
xor
dec
gs
scas
xor
gs
and
mov
dec
and
popa
xchg
and
repz
stos
mov
in
inc
xchg
shrl
in
jp
loop
addr16
dec
lods
out
andl
xchg
xchg
and
ror
loop
out
mov
out
gs
leave
xorl
data16
daa
in
rep
mov
inc
inc
add
ror
mov
lahf
pop
cltd
test
push
bound
dec
subl
add
inc
jnp
movsl
lods
out
clc
jne
fnstcw
jmp
shll
push
cmp
sti
lcall
pusha
adc
orb
fmuls
cmova
or
sbb
sub
mov
out
shl
add
smsw
xchg
mov
gs
fwait
xor
aad
sub
cwtl
lock
jo
rdtsc
lock
sub
xchg
dec
fidivl
mov
mov
or
shlb
cmp
inc
sbb
jbe
loop
fstl
in
mov
lods
stc
fsubrl
add
sbb
std
popa
mov
mov
cmp
and
mov
sbb
dec
loope
jo
xchg
mov
jl
cmp
mov
pextrw
adc
dec
xchg
shlb
mov
xchg
into
mov
aam
fcoml
mov
sbb
xor
movsb
dec
pop
in
icebp
in
movsl
fidivrs
jp
mov
inc
xchg
mov
in
fisttpl
cmpb
stos
negb
mov
pusha
jmp
test
mov
adc
or
sbb
cmp
not
sub
orl
lds
testl
pop
pop
push
sarl
push
iret
jae
push
enter
sub
negl
mov
movsl
add
scas
mov
cmp
ljmp
lea
inc
pusha
sub
mov
pop
cmp
xchg
adc
xchg
xlat
cmpsl
repz
std
cmp
sbb
dec
adcl
xchg
movsb
jno
push
sub
lock
xchg
dec
pop
inc
sahf
xor
repz
jne
clc
lcall
test
lret
pop
sub
scas
adc
repnz
ret
mov
fdivrl
andb
xchg
rorl
sub
cs
cmp
gs
xor
inc
pop
orb
mov
loopne
mov
clc
push
or
cmp
xor
dec
mov
out
mov
mov
lods
testl
loope
pop
sub
dec
cmp
inc
fwait
inc
pop
xchg
out
mov
sub
int
cwtl
imul
movsb
inc
cmpsl
push
bound
push
arpl
pusha
sub
mov
repnz
lret
cld
pop
repz
xchg
stc
dec
notl
push
mov
jae
cmp
push
outsl
je
xor
xor
out
test
dec
clc
in
fisubrs
xor
mov
rcll
out
inc
xorb
jne
test
pop
ljmp
cmp
adcl
adc
cmovb
push
pop
mov
das
aad
ret
xlat
adc
call
mov
test
sbb
sub
jecxz
arpl
sbb
or
lods
aam
mov
mov
jnp
movsl
idivb
sbb
xchg
repz
ror
cmpsb
jmp
mov
xor
es
ljmp
cli
mov
xor
push
in
jmp
xorb
repz
jnp
mov
jmp
test
movsl
loope
jecxz
mov
jno
in
repnz
sar
je
jb
out
cmp
xor
cltd
dec
push
mov
xchg
call
sub
cmpsl
push
mov
xor
fsubrp
add
jle
pushf
lahf
push
mov
push
ljmp
out
fbstp
dec
push
lea
jecxz
into
mov
aaa
ficomps
addb
adc
mov
adc
and
sti
xor
mov
inc
mov
aad
push
jecxz
out
jae
cmp
mov
arpl
sbb
pushf
xorl
dec
aad
ds
cmp
popf
dec
fldl
rcrb
and
fwait
lods
dec
inc
adc
jb
mov
cmpsl
imul
imul
mov
or
addl
aam
lret
cmpsl
bound
cmp
dec
push
iret
insl
pop
clc
adcb
sbb
and
or
and
outsl
jecxz
mov
inc
add
cmpb
pop
mov
inc
test
cmp
mov
ret
cli
clc
mov
push
fldenv
xor
sub
incb
subl
imul
push
push
inc
in
ds
test
inc
push
dec
sub
jbe
pop
inc
imul
mov
insb
ja
add
bnd
inc
scas
out
and
inc
cmp
inc
dec
test
fmuls
inc
xor
aam
and
and
mov
outsb
lock
push
out
push
out
mov
adc
push
mov
mov
enter
repnz
pop
in
push
sti
cmp
leave
iret
cmp
mov
mov
push
jle
icebp
jmp
pop
loopne
outsl
sbb
sahf
pop
out
add
cmpl
dec
xchg
sub
testb
cmp
mov
in
bound
push
sbb
add
adc
out
lods
sbb
mov
gs
or
or
sbb
sub
cmpb
add
in
addr16
adc
movsl
push
xchg
call
aas
ss
adc
movsb
sti
bound
xchg
xchg
mov
adc
out
hlt
push
mov
arpl
rorl
ret
sbb
mov
loop
bswap
push
js
inc
in
test
mov
in
dec
mov
mov
adc
hlt
xchg
push
mov
mov
and
scas
jge
jns
jno
aad
or
cmp
lock
and
cmpsb
sub
mov
jmp
in
cmp
nop
loopne
faddp
movsl
mov
ss
mov
mov
jle
sub
mov
cmc
ljmp
jno
push
test
push
cmp
push
bound
jge
lcall
dec
cld
mov
int3
push
outsl
dec
push
cmpsb
nop
shlb
cmp
adc
in
es
dec
or
sbb
fwait
jge
adc
lds
stc
push
into
fidivl
rcr
or
xchg
and
cmc
icebp
or
push
mov
lods
mov
pop
inc
jnp
xchg
inc
mov
ss
cld
fisubrs
insb
mov
mov
sub
push
add
dec
jecxz
test
add
imul
js
test
lea
lods
push
ret
xchg
jl
xchg
add
jne
dec
pop
inc
add
adc
mov
dec
sub
test
mov
scas
divl
pop
sub
shl
mov
push
xchg
or
adc
loope
daa
rcll
inc
cld
and
lods
jae
frstor
aam
sahf
adc
and
int3
lcall
in
cltd
mov
outsl
mov
lcall
jl
mov
arpl
push
enter
push
fs
popaw
sti
clc
lea
add
push
sbb
add
arpl
dec
add
into
cmp
int3
mov
sub
pusha
int
je
je
inc
and
push
leave
sahf
idivl
jb
iret
or
or
cmp
movsb
aas
mov
and
and
test
sub
mov
repnz
aaa
xor
xor
adcb
sbb
add
jl
mov
pop
and
push
mov
ret
je
sahf
stos
sbb
pop
mov
dec
vpsllq
and
dec
das
enter
sub
mov
dec
sub
popa
sub
jo
into
fmuls
cmpsb
inc
sub
in
adc
inc
mov
mov
mov
xchg
mov
jmp
push
les
and
mov
dec
popa
and
adc
mov
adc
add
jp
andl
push
mov
insb
sbb
in
and
sbb
sub
lods
push
xchg
adc
cmc
shrl
in
pushf
jle
loopne
push
push
data16
icebp
cmp
popa
add
push
shlb
ret
mov
and
leave
enter
hlt
and
icebp
je
pop
pop
add
xchg
and
addr16
add
lcall
xchg
xor
mov
dec
jo
or
leave
inc
cld
fwait
popf
xchg
cmp
inc
lret
int
addb
mov
lret
xchg
cmpsl
mov
dec
and
rcr
add
add
pop
fcmove
mov
cmp
stc
adc
fistpll
mov
adc
call
pop
enter
push
sbb
xchg
mov
js
xlat
mov
lock
popf
fildl
out
jns
stos
pop
call
cwtl
and
loopne
or
fldenv
push
adc
jno
fadds
test
mov
sub
aad
dec
sub
xor
fists
mov
pop
icebp
shrb
and
mov
dec
lret
jnp
loop
jecxz
pop
call
xor
lahf
cmp
gs
dec
dec
shrb
and
aam
test
scas
xor
loope
sub
mov
clc
fs
mov
sub
std
dec
xchg
addr16
cltd
stos
pop
mov
lds
enter
movsb
fstl
sti
stos
insl
loop
addb
push
inc
and
shll
icebp
in
xchg
xor
lret
call
rol
ret
imul
sbb
jmp
xchg
lahf
fimuls
je
cs
xchg
rclb
mov
push
test
sub
jne
loope
push
mov
sub
pop
bound
sti
daa
repnz
stos
mov
es
adc
jmp
mov
ror
lret
rcrb
pop
sbb
hlt
pop
sbb
enter
push
jl
pop
ljmp
and
mov
mov
shl
in
pmuludq
arpl
dec
push
je
in
mov
lods
mov
cmpsb
push
sub
bswap
pop
imul
jg
dec
sub
add
pop
cltd
popl
mov
sti
sub
jbe,pt
jmp
xlat
sbb
pop
mov
mov
sbb
pop
lret
cmp
dec
shl
movsb
cwtl
mov
mov
icebp
dec
push
clc
or
inc
mov
jne
test
sbb
rclb
or
orl
sarb
mov
xor
aad
jmp
ss
adc
xchg
push
fs
inc
pop
pop
dec
pop
icebp
mov
jne
sbb
stc
flds
inc
fcmovb
jg
inc
dec
lea
dec
inc
mov
add
mov
hlt
pop
ja
mov
push
bswap
add
and
sbb
add
sbb
es
test
in
push
movsl
xchg
jge
adc
aad
sbb
mov
in
jmp
dec
cmc
sub
add
stos
fcmovnu
mov
notl
sbb
mov
fldl
imul
fneni(8087
mov
add
xchg
push
jae
sbb
in
cmp
cli
dec
mov
sbb
inc
push
mov
outsl
test
gs
or
dec
test
mov
push
inc
pop
or
ljmp
imul
mov
cmc
and
shr
cmpsb
jns
pushf
pop
cmp
mov
daa
push
adc
xchg
pop
inc
pop
stc
push
pop
cmpb
insl
jae
adc
int
mov
mov
pop
insb
movsl
fisttpll
pushw
aad
xchg
xor
push
cmc
lods
out
cltd
push
xor
and
notl
icebp
inc
and
push
dec
inc
test
test
dec
mov
xor
cmp
push
aaa
pop
mov
mov
push
push
fsubrs
xchg
or
jl
and
and
jecxz
and
adc
je
vmovaps
ds
std
in
insl
mov
sbbb
dec
and
shrl
dec
call
pop
pop
mov
dec
in
outsl
mov
insl
xchg
fneni(8087
dec
and
repnz
stos
out
es
lods
cmp
push
xor
push
call
adcb
add
stos
hlt
jbe
sti
or
ss
jnp
mov
xchg
pop
jns
sbb
inc
shll
jg
repz
inc
ficompl
cmp
mov
shlb
push
fmull
je
pushf
lds
mov
pop
or
sti
loopne
lea
movsb
xor
adc
dec
stos
icebp
mov
ja
maxps
lcall
dec
std
pop
xlat
push
mov
xchg
jge
or
mov
jo
mov
ds
lds
fs
bound
cmp
mov
cmp
cmp
add
loopne
add
es
lock
repz
dec
or
mov
or
push
jmp
jae
scas
push
divl
loopne
sub
mov
cmc
cmp
sub
iret
pop
xor
mov
les
jmp
scas
pop
stc
daa
adc
push
and
int3
idivb
or
dec
pop
sbb
add
addr16
jecxz
mov
stc
loopne
mov
mov
ror
sarb
stc
daa
sub
xor
xorb
cmp
cli
add
cs
push
dec
sbb
or
lcall
pop
scas
mov
insl
inc
std
mov
into
das
cmp
pop
cmpsl
cli
stc
aas
add
outsl
fldenv
push
test
push
push
das
rcrl
sub
xchg
test
sbb
push
movsl
cmp
pmaxsw
rolb
xor
push
dec
push
repnz
fsubrs
insl
sti
outsl
aad
mov
jo
add
mov
gs
inc
add
ffreep
inc
xchg
mov
data16
add
push
pop
or
mov
gs
sarb
addr16
mov
ds
add
dec
lcall
pop
aad
jbe
push
adc
fdivl
pop
cmp
jnp
mov
mov
mov
andb
or
mov
mov
mov
mov
icebp
rolb
pushf
and
xchg
flds
insb
mov
loopne
lret
test
push
mov
aam
pop
rcrl
jns
jle
es
lods
xlat
shl
dec
and
in
fisubrl
push
fldl
xlat
inc
cmp
aad
scas
dec
cmp
sahf
into
sbb
fstpl
xor
pop
iret
mov
stos
lret
mov
or
xchg
sub
push
int
push
add
dec
cli
cmp
lods
mov
jecxz
nop
out
fsts
push
mov
repnz
sub
add
stc
push
mulb
cmp
rclb
pop
pop
jbe
adc
jle
add
rolb
jae
cmovg
cmp
xchg
insb
cmp
inc
mov
sub
push
sahf
es
arpl
arpl
ficoml
adc
xchg
push
mov
inc
loop
dec
insl
push
fsubs
rclb
shrb
add
test
mov
aad
xor
jl
mov
jne
rcll
pop
hlt
test
mov
repnz
repz
in
lret
test
and
sbb
loopne
shlb
lock
mov
lea
and
into
push
addr16
lcall
xor
aad
cmc
add
shrb
fldenv
cli
sbb
mov
jno
shrl
sub
ljmp
adc
push
or
ljmp
push
inc
cmpsl
outsb
test
lcall
sub
insl
mov
inc
push
add
xor
clc
dec
push
ljmp
or
pushf
cmp
insl
aam
in
shrl
dec
xchg
dec
call
test
in
and
lods
pop
iret
add
movsl
in
movsb
hlt
shl
lods
aas
dec
mov
sahf
inc
flds
push
icebp
dec
fldcw
pop
mov
cmpsl
hlt
xchg
outsl
scas
pop
je
pop
xchg
test
repnz
jbe
and
sbbl
push
mov
jge
mov
stos
xchg
push
sahf
fistl
sub
test
mov
mov
imul
cmp
inc
inc
xor
lods
jl
xor
ss
cs
lock
adc
pusha
dec
and
jle
dec
iret
fstp
mov
pop
add
in
int
in
push
rcl
rcll
push
adc
mov
ljmp
leave
lea
adc
leave
movsl
inc
inc
enter
pop
jb
jmp
xchg
fists
cwtl
add
inc
cmp
or
adc
pop
adc
sti
pop
stc
loop
icebp
es
aaa
jae
pushf
call
inc
and
lcall
lahf
fistps
ja
jae
xor
je
gs
dec
dec
sbb
das
scas
mov
dec
fnstenv
pushf
test
sub
xorl
or
stos
aad
xor
enter
xor
mov
lcall
lock
and
enter
pop
insb
insb
adcl
mov
jne
fdivrl
add
push
push
repnz
inc
sldt
aaa
scas
adc
popf
imul
movsb
mov
add
add
dec
test
hlt
popf
xchg
int
insl
ja
sti
jne
out
vpcmpeqb
out
push
mov
inc
scas
popf
mov
fstps
lea
mov
rcl
shrb
jno
shrl
xor
gs
mov
aad
jle
mov
dec
out
fs
orb
insl
jge
inc
add
push
bound
push
xor
inc
clc
movsl
push
cltd
pop
pop
lret
push
xor
sub
scas
inc
sub
fidivrl
inc
or
sbb
enter
and
repz
loopne
pop
and
cmp
out
call
outsb
xor
dec
hlt
aam
dec
sub
mov
cmpsb
mov
jns
sarb
out
arpl
in
jmp
sbb
decl
sti
aam
jae
loope
out
nop
ljmp
call
xchg
dec
stos
mov
cli
in
shr
dec
sbb
int3
mov
in
sub
ret
xor
aam
ds
mov
jge
add
inc
adc
adc
or
xorb
push
and
pusha
pushf
mov
mov
aaa
out
lcall
dec
or
inc
rclb
or
add
lods
sti
arpl
push
push
lods
xchg
push
insl
cmp
sbb
add
inc
imul
bound
mov
xchg
test
lret
out
xchg
sti
out
fdivrs
push
cmpsb
in
cmc
mov
les
inc
mov
sbb
lods
movb
popf
cmp
insb
stos
sahf
xor
rolb
cmp
stos
jne
pop
insl
test
stc
das
mov
mov
repz
out
lock
and
pop
mov
pop
ds
frstor
xor
hlt
in
js
div
add
adc
nop
aam
cmp
push
xor
out
jl
add
scas
jmp
mov
or
data16
fildl
out
repnz
int
xchg
mov
cmp
pop
inc
out
test
push
sub
mov
pop
mov
nop
xchg
adc
or
jne
scas
fs
sub
push
mov
xchg
xor
mov
jle
in
mov
into
xor
cwtl
add
xor
andl
pop
mov
loop
adc
inc
pushf
cmpsl
cmpsb
lret
insb
or
ror
movsb
lea
jnp
cmc
cmpsl
adc
out
adc
aam
lret
clc
int3
imul
mov
xchg
out
cs
cmp
sub
scas
cmp
inc
push
out
xor
inc
repz
push
inc
and
or
fildll
jns
repnz
push
insl
arpl
cld
xchg
out
clc
mov
iret
push
xchg
xor
ljmp
push
mov
mov
push
loopne
add
or
mov
out
and
dec
cmp
sub
xchg
cmp
in
adc
ficompl
cmp
fcmovnbe
addr16
push
xchg
xor
insb
mov
mov
call
push
add
jge
test
ja
gs
test
sbb
ljmp
mov
pop
add
enter
add
pop
repnz
mov
frstor
or
mov
and
add
test
int3
shlb
sbb
in
ret
insl
arpl
cli
nop
and
jle
shrl
pusha
imul
cmp
add
jns
sbb
jge
mov
xchg
cmc
leave
test
sti
mov
sbb
add
cli
xor
andl
inc
ja
pop
cmpsl
xlat
repnz
imul
adc
les
fsubrp
scas
popf
addr16
cmpsl
cmpsb
movb
cltd
jmp
test
imul
sbb
adc
xchg
movsb
push
inc
in
pop
push
test
fimull
cltd
jg
dec
cmp
outsb
in
cld
call
aaa
repz
pop
xlat
jnp
js
stos
mov
scas
addr16
or
sub
pop
add
rcr
scas
push
jno
aas
mov
lcall
jae
and
xchg
daa
jge
mov
lret
sbb
inc
push
add
divb
jo
cmp
adc
jno
mov
adc
dec
add
and
push
jge
sbb
and
inc
mov
xor
and
les
jnp
mov
lds
jecxz
mov
fwait
scas
jo
xor
in
lea
jae
mov
repnz
xchg
adc
mov
adc
cmc
lret
imul
push
push
imul
ret
int3
cmp
lock
cwtl
pop
leave
sar
mov
das
or
mov
aam
pop
cld
das
push
sub
adc
or
sbb
push
push
xor
cmc
cwtl
pop
adc
das
loop
mov
dec
dec
xor
push
jb
fisubrl
bound
push
sub
aad
sbb
mov
push
xor
test
hlt
lret
inc
addr16
fistl
in
or
jbe
jg
and
mov
arpl
mov
lods
xor
jle
cmpsl
fstpl
mov
or
int
adc
mov
cltd
repnz
out
ds
mov
hlt
cwtl
in
and
subb
sub
xchg
fwait
nop
adc
xchg
sub
movsl
scas
push
push
ficompl
out
dec
and
aaa
sub
jae
repnz
mov
cmp
out
daa
mov
arpl
loope
clc
xor
pusha
add
ds
outsb
add
fucomi
mov
inc
pop
inc
mov
pop
popa
std
fs
dec
shrl
mov
in
adc
aad
add
xchg
mov
test
cmp
push
ss
loopne
lahf
pop
sub
cmp
or
sbb
sub
fsubrl
aad
cwtl
jae
cmp
and
sub
dec
xchg
adc
fs
mov
jnp
dec
mov
insb
or
mov
repnz
fistps
or
xor
mov
popa
and
pop
sub
xor
int
scas
jne
mov
scas
jp
mov
sti
sbb
pop
pop
fiaddl
cwtl
outsb
mov
lret
lret
das
xchg
movlhps
cmp
pop
and
adc
gs
out
int
add
into
and
pop
out
fcomps
xchg
push
lret
es
push
popa
push
popa
add
mov
sbb
or
add
jo
mov
xor
inc
aaa
insl
fstps
in
lock
jae
cmp
jae
cmc
mov
xor
cltd
gs
pop
cmp
mov
imul
mov
cvtps2pd
stc
push
out
in
test
sbb
xor
cmp
cmp
xchg
dec
out
xchg
fiaddl
sbb
insl
mov
inc
pop
cs
fldenv
movsb
adc
sub
movsl
push
decb
mov
ss
ret
xchg
dec
push
sbb
cld
and
ret
in
add
inc
sbb
inc
nop
xor
adc
mov
call
mov
lods
and
inc
cs
out
mov
rorl
lret
sti
icebp
xlat
or
xlat
mov
xchg
mov
inc
lds
lret
inc
stos
cmp
bound
xchg
mov
lods
iret
or
adc
imul
inc
test
jge
aas
cmp
jb
hlt
mov
gs
cld
jmp
shll
or
sub
sub
mov
jle
repnz
fnstenv
mov
xchg
stos
leave
jg
mov
icebp
inc
add
ficoml
inc
ds
rorb
popf
lcall
push
push
dec
outsb
nop
mov
lret
xor
mov
out
ficompl
xor
rclb
cmp
les
daa
mov
hlt
dec
lods
lods
push
mov
add
cs
lods
mov
aas
inc
stos
jae
cwtl
sub
sub
xlat
stc
pop
jb
mov
pop
test
push
incl
add
add
inc
mov
cmc
es
mov
fdivs
sub
push
in
push
xor
ret
fidivrs
orl
or
adc
mov
cmp
and
dec
mov
out
lods
xchg
fcmovb
lea
xchg
cmp
add
loope
es
jne
in
dec
push
lahf
jecxz
pushf
mov
aam
sbb
mov
in
xchg
dec
lcall
ret
and
xor
pop
data16
arpl
mov
and
push
andl
ljmp
clc
cld
push
push
enter
adc
ljmp
pop
fidivrl
rorl
sbb
in
sbb
and
fisttpl
roll
sahf
pop
subb
adc
mov
inc
cmp
stc
add
sub
out
jnp
orb
dec
dec
cli
daa
or
inc
pop
std
in
addps
enter
and
scas
and
sub
xor
pop
dec
sti
or
pop
mov
jns
add
cmpsb
and
movsb
push
lret
rorl
mov
fs
mov
or
fildl
lods
jns
mov
ret
pop
rclb
movsl
push
lds
rorl
dec
call
adc
clc
sub
inc
cs
scas
jns
js
mov
sti
outsb
adc
xchg
shll
ret
lea
mov
xor
aas
dec
loopne
jmp
pop
negl
sbb
insb
jmp
cs
test
inc
imul
push
xor
jnp
js
cmp
cli
push
shrl
add
lods
mov
adc
aam
in
adc
test
jp
sarb
sbb
jp
push
adc
sbb
leave
jmp
aas
push
inc
cmp
mov
sbb
xor
lahf
fistpl
dec
movsl
test
sbb
imul
xlat
clc
ja
mov
adc
or
or
enter
xor
or
push
inc
outsl
xor
movsb
and
adc
jge
mov
xchg
out
mov
sub
mov
repz
sub
xchg
dec
adc
adc
rcr
ret
adc
leave
mov
es
cmp
scas
sbb
mov
ljmp
pushf
lods
jle
xchg
mov
popf
sbb
stos
cmp
lods
dec
incl
bound
in
sbb
inc
in
cmpsb
icebp
icebp
adcl
mov
adc
sbb
mov
sub
lahf
or
movsb
nop
insl
stos
cmp
les
cmp
sub
insl
nop
add
jbe
movsb
popf
mov
in
sub
lods
out
pop
lahf
sbb
jb
loopne
pop
jnp
aam
pop
fsts
shrl
aam
adc
mov
or
add
push
insl
dec
insb
dec
out
repz
scas
out
lock
cmpsl
mov
adc
push
jmp
or
in
lret
imul
dec
mov
jmp
push
imul
movsl
mov
dec
cmp
mov
inc
aaa
shr
pop
fninit
xchg
sbb
dec
mov
jnp
subb
das
sub
adc
out
lds
je
add
adc
inc
pop
andb
pop
jae
ds
sbb
mov
scas
sub
aam
xchg
mov
cmc
cwtl
dec
popa
ss
jmp
and
bound
dec
jnp
mov
dec
push
mulb
shrl
test
int3
fcmovnb
les
lods
mov
sahf
call
sbb
mov
adc
outsl
adc
push
push
mov
shll
pushf
add
outsl
fstpl
push
aaa
lahf
sub
mov
sub
imul
cmp
gs
lock
push
cmc
cmp
imul
inc
sub
mov
mov
pusha
push
xchg
and
dec
jbe
cmp
cmp
test
and
push
push
dec
jmp
pop
dec
int
into
mov
adc
lock
neg
clc
test
and
pop
lods
movsb
cwtl
stos
dec
jp
mov
xor
fadds
add
pop
mov
cmp
mov
mov
sub
cmp
mov
movsl
mov
push
inc
stos
js
pusha
sahf
dec
inc
insl
insb
psubd
push
push
daa
adc
stc
movsl
mov
inc
mov
mov
add
xor
pop
xor
pop
sbb
lods
ds
cmp
out
movsb
jb
add
xchg
cmp
cwtl
in
in
xchg
mov
pop
or
lahf
push
and
int
mov
dec
push
add
movsb
push
subb
scas
mov
fnsave
pop
scas
push
pop
lea
mov
scas
call
lock
jmp
inc
mov
pop
pop
int
jae
mov
add
jae
or
pop
mov
xor
addr16
ljmp
stos
mov
pop
adc
xor
sahf
lret
sub
pop
mov
out
aad
loope
mov
std
xchg
fwait
inc
idiv
testl
pop
inc
push
out
dec
jge
das
inc
into
or
inc
sub
divl
rorb
xor
mov
xchg
or
clc
sbb
cmp
jecxz
add
orb
sbb
fsub
pop
fstl
mov
cmpsb
mov
scas
mov
test
enter
fbstp
addr16
xorb
ss
push
sbb
jecxz
push
es
xchg
jle
nop
fdivr
xchg
pusha
mov
cmpl
add
cwtl
stc
sbb
clc
out
dec
leave
inc
mov
test
adc
mov
push
stos
inc
decl
leave
lds
dec
loopne
pusha
push
call
xor
xchg
sub
pop
and
or
mov
mov
push
sub
in
leave
mov
jae
int3
xor
inc
and
pop
xorb
add
loop
cli
pop
cld
shll
into
sub
jle
es
mov
cmc
xor
cld
inc
add
push
and
addr16
loop
mov
daa
lds
jns
out
loopne
xor
push
sarb
mov
das
xor
pop
cs
sub
lods
frstor
pop
mov
mov
push
imul
and
mov
mov
mov
xor
mov
nop
cmc
test
insl
sub
sub
aas
jo
fists
cmp
mov
fbstp
in
sbb
mov
das
js
xor
popf
mov
and
loop
leave
push
add
mov
cmp
cmp
xor
mov
adc
inc
sub
es
es
cmpsl
dec
mov
stos
in
pop
rclb
xor
push
dec
mov
sbb
loop
in
jge
aaa
pushf
jno
lds
jecxz
dec
out
lea
mov
aas
clc
mov
lcall
int3
enter
cli
jmp
pop
clc
pop
lahf
mov
lock
xor
loopne
aaa
adc
push
mov
xor
out
out
jns
sahf
lahf
pop
clc
loop
mov
ds
lahf
pop
dec
mov
cmp
jae
push
fdivr
mov
jo
mov
cmp
out
ret
inc
std
dec
pop
sbb
add
sbb
scas
in
ja
insb
jne
cmp
loop
jo
jg
push
xor
xor
roll
ficoms
dec
rcrl
or
mov
jmp
jno
mov
mov
divb
cld
mov
jg
push
xorb
dec
xor
pop
xor
out
jg
iret
fidivrs
pop
inc
jmp
sbb
divb
data16
push
leave
das
fsts
or
or
orb
stos
insb
int
mov
mov
push
ret
add
pusha
add
sarb
test
scas
add
inc
movsb
mov
mov
pop
or
sub
pop
mov
pop
push
pop
xchg
in
or
pop
daa
sbb
repz
lcall
xor
outsl
fwait
mov
stos
mov
enter
pop
xrelease
scas
jns
cs
inc
shlb
shrb
sub
pop
mov
mov
add
daa
add
ljmp
insl
or
icebp
pop
fdiv
xchg
xchg
leave
test
pusha
xchg
pop
sbb
dec
pop
xor
inc
in
mov
sarl
shlb
in
pop
frstor
daa
pop
orb
or
jge
sub
pop
shr
jecxz
add
sbb
add
negl
dec
sub
out
mov
xchg
shlb
aad
test
enter
adcb
scas
cmc
subb
ds
jl
test
dec
jecxz
dec
cmpsb
cmp
pop
mov
fisttpl
int
leave
imul
pop
loopne
data16
jnp
push
xor
movsb
fsubl
test
aas
xchg
sbb
adc
insb
add
jmp
stos
push
jle
ficoms
add
mov
mov
data16
cmpl
fisttpll
jp
movsl
cs
cmp
into
lea
insl
and
cld
sbb
cmp
push
pop
jecxz
pop
test
jg
test
call
xchg
mov
mov
sub
push
push
or
insb
gs
or
test
mov
popa
xchg
xor
pusha
fiaddl
cmp
stos
ret
mov
xchg
sbb
adc
xchg
mov
xor
pusha
mov
mov
dec
js
test
fcom
mov
pop
mov
sbbb
lock
enter
fistpll
ds
mov
fwait
das
adc
pusha
inc
mov
pushf
sbb
in
cmpsl
fdivs
test
fs
mov
pop
or
jp
xchg
jnp
testb
or
insb
jmp
pop
and
ss
push
imul
jo
lods
pop
and
test
imul
mov
jecxz
xlat
bound
sub
ret
inc
das
imul
test
mov
mov
mov
loope
hlt
pop
cmc
cmp
imul
outsb
push
cmp
pusha
pop
cmp
mov
lock
addb
ret
inc
mov
cwtl
popa
add
dec
cwtl
fidivl
pop
mov
shl
ss
les
inc
popa
adc
lods
test
cli
out
loope
movsb
ds
jno
mov
popf
dec
jmp
cmp
mov
sbb
inc
lock
dec
hlt
fs
sbb
in
stc
and
pop
maskmovq
divl
cmp
mov
mov
or
mov
inc
dec
adc
dec
mov
jae
adc
cmpsl
cmc
jle
pop
add
pop
repz
sbb
fdivr
filds
adc
or
arpl
mov
sbb
inc
mov
scas
orb
sbb
cmp
jle
xchg
push
clc
xchg
scas
push
dec
jg
neg
iret
pusha
push
jmp
std
sub
sbb
inc
sub
movsl
lret
lret
cmpsl
lods
sub
xchg
notl
movsl
ljmp
in
mov
cmp
cld
cmpsb
fadds
pop
scas
mov
fisubrl
shr
sub
add
mov
xchg
nop
fwait
loop
rcll
push
adc
imul
movsw
cmovb
mov
pop
into
cmp
shrb
jp
cmpsl
push
out
pop
ss
push
mov
sbb
dec
adc
iret
lock
bound
gs
sub
cmpsl
in
in
test
int3
xchg
loop
adc
shl
inc
je
sbb
movsb
es
jp
das
subl
call
push
sbb
imul
lods
es
dec
lods
dec
fstl
mov
leave
and
cmp
scas
mov
es
je
lret
fbld
enter
lret
imul
addb
push
xchg
movsl
or
mov
pop
jl
cmp
dec
aas
dec
inc
push
jnp
mov
ja
sahf
popw
add
jbe
out
or
les
and
shl
into
js
mov
test
stos
jmp
cltd
cmpsl
dec
imul
jae
lock
addr16
adc
push
and
out
adcb
in
ds
cmpb
sbb
stos
sahf
das
jnp
xor
mov
imul
std
or
sarb
ss
insl
mov
mov
in
pop
loope
sub
mov
adc
hlt
rcl
shl
mov
es
inc
xor
sbb
sbb
sbb
mov
sub
and
sar
add
cmp
inc
dec
sahf
sbb
dec
mov
add
sub
mov
push
mov
xchg
pop
push
sbb
or
inc
mov
jno
rclb
notl
dec
sbb
dec
mov
call
pop
dec
pop
add
push
popl
jnp
sub
cmp
push
xchg
push
rolb
movsl
lods
andl
push
and
cmp
pop
andb
cltd
pop
xchg
adc
mov
out
cmpsl
shll
inc
xor
jmp
dec
dec
jne
cld
sti
aam
imul
dec
adc
jbe
inc
sbb
in
push
xchg
gs
outsb
mov
data16
lret
shr
dec
les
xchg
dec
jo
in
xor
cld
cmp
fwait
add
push
push
adc
adc
arpl
out
inc
mov
sbb
inc
fcmovbe
push
or
xor
adc
mov
inc
in
imul
and
and
in
cwtl
inc
add
out
xlat
jmp
push
pop
and
fcomps
in
xchg
adc
addr16
test
pop
in
jmp
mov
push
jae
or
xor
mov
pop
imul
ficoms
mov
and
sti
int3
decl
les
sub
outsl
and
test
xchg
xchg
int3
mov
mov
orb
inc
xorb
push
push
xor
in
jg
inc
xchg
stos
jmp
test
cmc
push
inc
jecxz
in
push
popf
pop
cmpb
sbb
movsb
xbegin
pop
jg
sub
dec
push
in
arpl
ljmp
sbb
pop
in
into
insl
adc
inc
sub
into
pop
aas
jl
jo
mov
iret
stos
mov
adc
dec
add
cs
cmc
xlat
xchg
push
loop
jecxz
rorl
in
int
cmpsl
jecxz
shlb
add
mov
test
jb
out
dec
scas
insl
sub
les
fidivrs
adc
cmp
mov
out
sub
sub
push
or
lahf
shlb
imul
es
pop
enter
cmp
or
sti
push
and
sahf
xchg
sbb
repnz
mov
xor
sbb
test
ret
fstl
dec
add
or
in
and
mov
scas
mov
test
imull
mov
xor
ret
inc
leave
mov
out
imul
pusha
gs
pop
mov
aas
popa
roll
push
in
mov
divl
addl
pop
loope
in
mov
or
insb
repz
sbb
pop
push
mov
aad
or
and
cmp
cmp
ret
push
push
shll
inc
iret
movsl
xchg
test
push
xchg
cld
out
pushf
push
push
pop
push
push
or
mov
into
mov
adc
enter
jg
out
cmp
sbb
sub
inc
das
pop
pop
das
in
and
push
fstpt
repz
mov
ss
inc
inc
sbb
and
sahf
int3
mov
push
push
mov
jmp
fisubrl
lods
xchg
mov
mul
lret
sti
sbbl
adc
movsb
nop
xor
sbb
push
mov
mov
dec
push
inc
sbb
inc
sbb
mov
pusha
mov
xchg
mov
imul
in
fidivs
push
dec
imulb
imul
mov
xor
cmp
push
sahf
mov
add
cld
int
cmp
int3
ss
insl
lahf
lcall
das
test
fwait
mov
lahf
mov
mov
jg
cmp
cmp
insb
cvtps2pd
lock
cmpsl
in
cmp
cwtl
imul
vrcpss
addr16
push
ss
add
dec
push
fwait
dec
ss
je
and
fldcw
push
jb
jle
fidivl
in
xchg
mov
xlat
imul
mov
jg
inc
aad
jnp
mov
xchg
xchg
jge
loope
out
xlat
sbb
pop
inc
xor
loope
lcall
test
call
fsubrl
mov
add
jp
shr
xchg
jmp
leave
lcall
pushaw
pop
dec
sub
clc
mov
dec
xor
lret
cs
mov
std
pusha
stc
mov
sbb
and
loope
stos
dec
neg
sub
pop
loopne
mov
push
lods
pop
icebp
mov
aaa
idivb
inc
mov
repnz
jb
xchg
push
jo
sub
pop
xor
test
push
xchg
sub
shrl
add
sub
inc
stos
jno
push
daa
fcoms
sahf
mov
jmp
xchg
xchg
ja
xor
dec
xchg
rcrb
lcall
popl
and
repz
inc
add
dec
sarb
pop
les
jae
leave
mov
xchg
or
outsb
or
mov
fbld
mov
jl
gs
mov
cmp
dec
sbb
add
loope
jg
jno
sub
jge
push
inc
pop
jbe
enter
aad
jl
cmpl
xor
jb
fwait
roll
inc
dec
ficomps
fwait
lcall
add
xor
dec
and
pop
push
test
pushf
repnz
cmpsb
push
lods
cmp
or
negl
inc
lods
loop
nop
in
and
dec
xorl
cwtl
scas
mov
mov
fsubrs
cwtl
or
mov
das
or
out
frstor
stos
dec
jne
xorb
jl
sbb
push
int3
sbb
mov
xchg
and
inc
inc
pop
stos
loope
pop
addl
into
stos
mov
or
loop
mov
imul
inc
xorb
xor
adc
fcmovnbe
hlt
push
gs
mov
pushl
jle
adc
cmp
xchg
sbbl
pop
xchg
pop
jbe
cmc
xor
pop
mov
pop
dec
mov
ja
test
or
in
sub
mov
cli
insb
inc
dec
lods
mov
pop
mov
pop
or
mov
mov
test
push
stc
lahf
ficoml
std
mov
je
pop
mov
ds
add
dec
inc
inc
dec
push
les
mov
adc
xor
test
pop
movb
mov
lods
push
out
mov
imul
fsubrp
xlat
cltd
sub
test
pop
sub
in
push
adc
xchg
dec
push
icebp
flds
test
pop
rcrb
lcall
push
cmpsl
dec
iret
xchg
cmpsl
sbb
sbb
push
lock
fisubrl
cmpsb
jp
push
subb
ret
jmp
cmc
fidivs
jnp
cmpxchg
out
fsubrp
ds
sti
cli
and
xor
mov
xchg
out
cmp
cmp
push
loopne
adc
addr16
aad
cmpsl
dec
imul
cli
jno
loop
int
out
mov
ret
mov
jmp
lea
xchg
call
mov
mov
ljmp
loop
push
push
mov
cs
or
ret
les
and
les
js
outsl
subl
push
pop
sbb
jbe
jecxz
sbb
stc
push
xchg
jno
pop
lret
cmp
sub
and
aam
push
rcrl
or
shll
mov
divl
or
jns
cmpsb
pop
icebp
test
or
sbb
es
fisubrl
and
je
sbb
mulb
xchg
mov
adcl
movsb
pusha
movsb
lea
push
sti
push
scas
xchg
push
jae
sarb
scas
pop
xchg
and
mov
xchg
jns
or
dec
or
jp
fsub
shlb
adc
xchg
popf
adc
sbb
decl
xchg
fcmove
xlat
scas
mov
bound
imul
dec
mov
add
jge
jae
setg
cld
mov
stos
pop
movsl
test
pushf
push
cmpsl
fwait
mov
shl
adc
lock
jle
cmpsl
jno
xchg
mov
stos
jmp
xrstor
add
imul
mov
clc
mov
pop
mov
lret
sub
movsb
mov
pop
pop
addr16
mov
sub
loopne
fstl
jno
jp
leave
push
inc
xchg
std
xor
add
loopne
imull
push
pop
call
mov
or
fildl
push
sti
mov
and
cld
cmp
lahf
pop
add
out
mov
std
xor
xchg
cltd
shlb
push
mov
popf
inc
fcomp
dec
data16
inc
jg
dec
cs
mov
fs
mov
mov
cwtl
sbb
pop
or
jb
jbe
inc
outsb
sub
int3
jg
pop
mov
lea
divb
icebp
cmp
dec
enter
pop
insb
xor
insl
shll
sub
movsb
das
sbbb
jmp
lea
sbb
scas
xchg
dec
dec
aad
inc
sub
xchg
xor
push
jae
popf
jnp
mov
data16
hlt
cwtl
fs
and
js
in
lock
xor
in
enter
xchg
jbe
ds
cld
mov
mov
scas
mov
iret
mov
inc
ja
push
cmp
push
pop
cmp
mov
bound
push
ret
into
std
push
popf
fmul
sbb
sti
xor
adc
xchg
sub
pop
add
stc
push
decb
lcall
ret
jecxz
shll
mov
stc
out
add
mov
cli
outsb
jg
cmpsb
inc
rolb
loope
inc
ds
pop
ss
xor
sbb
adc
jl
cli
xchg
repnz
dec
dec
mov
adc
mov
ss
push
cmp
hlt
imul
in
push
or
lock
lcall
insl
cmp
mov
mov
pop
in
add
lret
sbb
lahf
aas
cltd
int3
cmp
jl
shll
popf
rclb
xor
iret
xchg
xchg
mov
mov
test
cmp
int
cltd
mov
jecxz
andb
mov
sbbb
stos
sub
jno
neg
pop
sub
fdivrs
iret
cmpsb
test
test
jns
dec
out
fwait
rcrl
adc
mov
push
cmp
dec
mov
adc
xor
xor
in
sarb
inc
ficoml
hlt
mov
mov
ljmp
inc
mov
sbb
sub
pushf
vpsllq
loopne
imul
sbb
pop
out
fyl2xp1
aaa
notb
hlt
inc
aaa
lahf
sub
pop
push
mov
rorl
dec
test
pop
cmp
shlb
sub
mov
shll
mov
sbb
dec
aad
mov
jg
sbb
es
mov
sbb
jb
in
fisttpll
sarb
imul
and
jmp
lock
jecxz
mov
shrl
push
jle
cmp
insb
push
lea
sbb
and
aad
sbbl
jl
and
aaa
pop
imulb
sub
xor
add
add
cmp
test
icebp
pop
mov
jne
dec
jns
cmpsb
andb
pushl
xor
je
sbb
lahf
jmp
push
scas
mov
xlat
pushw
dec
inc
mov
jo
push
adcl
lcall
enter
pop
xchg
lds
aad
and
test
inc
sub
inc
loopne
cmp
sub
mov
and
mov
movsb
jl
outsl
mov
lea
sub
arpl
mov
inc
push
repz
les
ret
lret
mov
test
mov
pop
xor
aad
mov
loop
adc
cmp
cmp
aaa
movsb
std
sahf
rcrb
dec
mov
add
cmpsb
mov
mov
sbb
jb
mov
pusha
mov
dec
cld
daa
movsb
ret
push
clc
jne
cmp
sub
cmp
enter
mov
out
insb
rcrl
stos
lret
sahf
mov
sbb
adc
aam
adc
je
rcr
mov
jmp
in
nop
out
dec
sbb
inc
inc
pushf
pop
sbb
inc
gs
inc
sahf
out
out
gs
dec
dec
lcall
jns
xor
mov
daa
and
jmp
shll
out
lock
aas
fisubl
fnstenv
hlt
and
jp
xchg
fs
addr16
push
add
xchg
in
loope
inc
push
add
add
rcrl
mov
mov
je
std
in
or
aad
call
jne
jns
ret
mov
dec
ret
sub
jo
sbb
adc
and
adc
mov
xor
ret
mov
add
inc
xchg
scas
lock
sub
insl
ss
ret
push
xchg
jp
jno
and
jbe
cmp
repnz
daa
dec
lds
popf
sub
je
pop
jle
sub
dec
pcmpeqb
mov
mov
ret
mov
fwait
aaa
push
sbb
cmp
pop
sbb
leave
cmpsl
xorl
mov
jnp
mov
cltd
arpl
xor
or
jmp
stc
mov
jge
mov
cltd
imul
js
mov
scas
pop
stos
xorb
fwait
out
fwait
cmc
sarl
pushf
ss
or
int
lods
cld
je
repnz
dec
push
and
mov
pusha
xchg
addb
push
pop
out
pop
stc
jo
rorb
ficoml
sarl
inc
push
or
fistps
mov
sbb
mov
add
cmp
jecxz
inc
mov
push
sti
std
adc
test
gs
movsb
lea
das
mov
das
sub
fidivl
enter
dec
out
dec
inc
mov
call
xchg
js
aaa
sbb
mov
iret
xor
xchg
and
arpl
ret
repnz
fistpll
jnp
icebp
sub
mov
adcl
push
fxch
scas
mov
pop
gs
pop
daa
dec
jle
outsl
outsl
sub
dec
loope
xchg
and
movsbl
mov
es
add
jae
call
adc
in
dec
pushf
add
or
aaa
into
dec
cltd
push
pop
mov
repz
xchg
jns
pop
xor
icebp
push
cmpsb
and
inc
inc
addr16
jno
pop
pusha
xor
and
mov
rcll
cmp
lcall
outsb
sbb
mov
repnz
inc
mov
sub
pushf
lea
ror
icebp
add
push
push
and
adc
mov
dec
mov
shll
mov
jbe
fcoms
daa
insb
sub
jnp
mov
imul
mov
or
mov
inc
mov
and
xchg
lcall
xor
push
pop
jo
sti
jo
sub
stc
insl
mov
rcll
in
lcall
rcrl
dec
in
xchg
aaa
cmp
pop
gs
mov
mov
lock
cld
or
in
jp
out
insb
lret
movsl
loop
jne
jae
push
enter
sbb
jo
xor
shrb
dec
pop
enter
sbb
iret
out
mull
push
test
dec
mov
jb
lcall
shrb
je
call
shr
adc
cmp
push
xchg
lods
ljmp
jmp
sub
fs
cmp
shrb
aaa
mov
jle
cs
sub
pusha
jb
leave
push
jno
mov
rolb
inc
mov
iret
sbb
sbb
push
mov
sbb
hlt
pop
insl
xchg
and
lds
ja
mov
repz
lods
insl
out
mov
aad
cs
out
rclb
cmp
rcl
cmpsl
movb
movsb
lds
add
adc
inc
xchg
rcr
pop
gs
jge
mov
mov
or
pop
and
inc
xor
scas
mov
pushl
lcall
jb
sub
std
dec
pop
xchg
add
adc
xchg
jmp
jb
xor
mov
call
sahf
popa
loope
xlat
jnp
jle
cmpsb
loopne
mov
mov
hlt
movsb
fidivs
ss
mov
jge
out
scas
lahf
fdivs
roll
inc
lret
inc
leave
add
dec
ljmp
xchg
jnp
adc
dec
inc
test
mov
into
push
or
movsb
icebp
xor
scas
mov
sti
sub
and
cmpsb
andl
xor
xchg
cmp
cmp
cmp
idiv
es
pop
add
test
call
fistpl
test
xlat
fcmovne
pop
ret
adc
pop
ror
xlat
push
sub
fmuls
pop
mov
addr16
mov
arpl
es
fmul
es
lahf
jae
inc
pop
loope
mov
movb
ffree
jb
test
inc
fs
adc
pop
pop
lds
pop
popa
out
fiaddl
mov
cmp
adc
mov
xchg
or
es
fst
or
imul
or
aad
std
cmpsb
pop
mov
js
outsb
lock
dec
test
pop
cmpb
ret
mov
and
mov
xchg
cmp
xchg
mov
in
sub
sub
cmp
push
fsubrp
mov
fdivs
orl
filds
xor
dec
clc
mov
cmpsl
jnp
jg
jmp
insb
das
in
and
cli
fistpl
lds
mov
pop
and
add
mov
add
add
xor
std
and
push
add
movb
xchg
mov
xchg
push
imul
repz
lea
out
jb
jl
mov
pusha
fbld
lods
arpl
aad
add
ds
shl
nop
pop
mov
lret
and
repnz
fs
lahf
scas
sub
push
dec
mov
jo
lret
shlb
into
fstpl
iret
xor
shll
ficoml
movsb
lods
push
cmp
and
es
loopne
seta
addr16
jno
cmp
scas
pop
sub
bound
cmp
adc
lods
sbb
push
and
fcmove
dec
jne
addr16
or
sub
jg
lahf
mov
fsubs
movsl
cmc
xor
pop
fisubrl
js
pop
cmp
mov
adc
addr16
mov
mov
inc
fcomi
or
nop
xchg
or
int
cmpsb
push
sbb
mov
mov
test
mov
mov
sub
sub
jne
cmp
cmp
fcmovnbe
out
das
adcb
in
ret
test
cmp
xchg
sub
xor
std
es
xchg
sar
xchg
jb
jne
adcl
pop
add
test
cmpsl
mov
test
dec
or
rclb
adc
adc
roll
enter
mov
sbb
in
jmp
xor
cli
movsl
mov
clc
cmp
xchg
cwtl
mov
mov
lcall
shlb
dec
imul
pop
push
sbb
xlat
mov
dec
push
sbb
mov
or
pop
inc
sbb
out
lea
pop
dec
insb
test
adcb
in
mov
nop
push
rcl
dec
adc
xor
mov
jb
xor
sbb
lods
xchg
test
xchg
or
notb
adcb
fnstcw
xchg
lods
in
add
sub
test
js
inc
mov
fbld
pop
fdivl
adc
into
xor
dec
jg
enter
sti
insl
aas
jae
xor
aas
dec
xchg
shll
fbld
pop
add
mov
out
cmp
push
xchg
dec
mov
xor
lock
hlt
es
addb
xchg
xor
xchg
or
ja
cmp
sbb
pop
sbb
cmpsl
xor
lea
xor
scas
xchg
daa
pop
je
sbb
dec
lcall
mov
sub
cmp
pop
ret
mov
das
lcall
sub
adc
mov
dec
cmp
mov
jmp
mov
xchg
add
jmp
jmp
mov
or
lock
std
dec
cmp
pop
mov
fucomip
adc
hlt
push
mov
and
dec
fcompl
dec
inc
bound
imul
mov
jne
sub
imul
jle
xor
inc
scas
mov
cli
das
mov
xor
mov
daa
paddd
dec
push
lret
or
fstpt
stos
inc
push
int3
cs
incl
adc
or
jmp
fsubrs
xchg
out
in
imul
sub
sub
push
test
and
pop
xlat
mov
call
inc
lcall
mov
and
scas
sti
sub
push
pop
fsubrl
rcll
xchg
ficomps
pop
sarb
fs
sbb
mov
test
enter
out
fdivrl
enter
lret
pushf
jle
mov
mov
repz
out
mov
xor
and
jle
clc
lods
cmpsl
mov
icebp
jbe
and
mov
push
xchg
pop
push
cmp
outsl
pop
mov
ss
imul
fstpl
std
push
pop
jge
dec
or
loop
aam
gs
insb
and
push
push
and
push
push
pop
into
sub
cmpsl
dec
addl
xor
xchg
sub
push
cmpsl
fldcw
xor
sub
sbb
insb
sbb
fbld
sti
jp
xor
mov
mov
sti
lret
call
and
push
inc
xchg
and
push
aaa
ret
jge
mov
aam
cmp
push
pop
in
testb
cmp
int
xlat
js
in
sbb
or
lods
outsb
mov
lret
cmp
out
lahf
pushl
test
ss
les
dec
cltd
icebp
ficoms
int
mov
adc
sbb
out
mov
xor
lret
je
sbb
idivb
mov
mov
push
out
in
enter
add
into
dec
mov
adc
inc
inc
jae
movsb
inc
cs
add
ss
leave
push
cld
cmpsl
repz
pushf
dec
xor
lods
jle
cmp
and
and
es
mov
jo
or
push
out
xor
fcomip
add
lock
dec
or
adc
inc
push
and
pop
clc
pop
pop
int
dec
push
ret
and
mov
adc
xchg
pop
outsl
adc
ret
scas
sbb
jo
sbb
push
mov
movups
call
fldl
insl
jne
dec
loope
scas
mov
jge
enter
sbb
dec
outsb
sbb
lods
inc
push
inc
repnz
fiadds
mov
loop
subl
jecxz
nop
insl
dec
dec
sbb
jae
cmpsl
or
call
stc
push
xchg
lcall
je
or
cmp
insb
or
jae
mulb
cmc
gs
or
mov
insl
jnp
xor
push
pushf
push
gs
arpl
scas
shlb
jb
lcall
rcll
cltd
mov
rorb
adc
mov
inc
das
or
mov
aas
lods
pop
mov
and
add
xchg
enter
cmp
pop
mov
fldlg2
mov
fwait
lret
orl
jecxz
dec
call
and
cld
scas
dec
aaa
adc
mov
pop
pushf
mov
xor
mov
add
aad
fimuls
nop
jns
sub
pop
mov
pop
mov
lock
mov
out
out
imul
push
and
pop
sahf
pop
jmpw
push
repz
pop
test
fs
xchg
clc
scas
mov
data16
inc
aas
lock
loop
fiadds
adc
notl
cmpsb
jo
sub
pop
aas
sub
sbb
xor
or
lock
mov
iret
fcompl
enter
mov
cltd
iret
pop
loop
cld
out
sub
lret
cmp
sub
fwait
mov
sbb
sbb
mov
mov
imul
push
jl
nop
std
cli
aas
dec
add
jno
xlat
popa
jnp
fdiv
inc
cmp
dec
pop
and
and
popf
dec
xchg
lahf
inc
js
imul
sub
jno
test
jge
fadds
out
lods
jns
andl
aas
xchg
icebp
aam
out
inc
rcll
je
lcall
pop
jmp
pop
jle
imul
dec
mov
mov
insl
jns
repnz
mov
cmp
xor
filds
pop
pop
xchg
cmpsl
lods
and
and
mov
xchg
into
call
sarb
dec
fwait
popa
jbe
push
lock
cs
xor
mov
push
notl
xor
aam
fneni(8087
and
or
xchg
mov
xor
pop
hlt
data16
xchg
mov
push
nop
das
outsb
arpl
rcrb
inc
cmp
mov
icebp
adc
std
loopne
mov
fcompp
call
mov
scas
and
outsb
js
mov
js
sub
or
in
mov
scas
push
inc
gs
insl
inc
repnz
xchg
dec
dec
ljmp
mov
fstp
movsb
inc
ja
enter
mov
inc
sub
xchg
hlt
jge
sub
es
adc
jb
and
or
dec
cmp
das
test
dec
pop
lahf
sbb
jg
xchg
xchg
lcall
icebp
push
mov
mov
pushf
pop
insl
cmp
mov
cs
jmp
mov
mov
je
ficoml
sbb
scas
fstl
shrl
ret
mov
pop
dec
das
mov
sub
pusha
ja
repnz
dec
aas
out
insl
push
mov
pop
ret
aam
push
outsl
mov
int3
jmp
xlat
inc
pop
pop
jp
and
mov
hlt
jae
inc
mov
add
stos
mov
aad
sub
mov
xchg
jno
jns
jns
cmp
cmp
cmpsl
mov
insl
xor
popa
fcmovne
pusha
pop
add
inc
pop
loope
mov
pop
cmp
mov
pop
testb
push
inc
mov
xor
jns
in
or
push
sbb
out
mov
ss
mov
daa
xor
frstor
cmp
mov
das
xlat
xchg
fdivr
or
imul
stos
or
mov
int3
int3
add
push
push
xchg
inc
movsb
in
push
orl
xor
mov
mov
push
cli
cmc
stos
aas
xchg
cmp
and
sub
cmpsb
bound
jmp
mull
jno
int
loopne
sub
inc
sub
jbe
jne
xchg
std
out
xchg
hlt
or
or
inc
inc
ret
repz
pop
pop
insb
fnstcw
in
sarl
out
shrl
pop
data16
push
and
bswap
adc
cwtl
fdivs
adc
test
gs
pop
jno
mulb
fisttpll
out
mov
repnz
sarb
ja
movsb
mov
arpl
int3
xor
es
lods
into
and
outsb
cmp
mov
loopne
mov
jecxz
xor
call
jne
jmp
mov
inc
adc
push
std
out
data16
icebp
mov
push
test
cmp
pusha
nop
sub
call
xor
sub
es
ds
in
stos
ffree
sbb
dec
xor
outsb
add
adc
mov
sahf
call
fmul
pushf
mov
add
mov
je
cmp
inc
cltd
adc
pop
lcall
addr16
negb
pop
inc
mov
fldl
call
cwtl
dec
outsl
lods
mov
loop
inc
mov
pop
jecxz
or
or
inc
in
dec
push
add
lds
jno
add
sub
xchg
adc
mov
pop
cmpb
xchg
xor
mov
adc
add
aad
bound
xor
das
mov
mov
mov
repz
xchg
lret
jno
ret
add
add
push
push
xor
or
imul
cmp
inc
push
push
xor
mov
xorl
lret
loop
and
test
cmpb
fdivrl
xchg
sub
ficompl
lods
xchg
stc
inc
mov
mov
clc
pusha
je
dec
aad
pushf
pop
enter
mov
ret
dec
dec
fwait
inc
add
int3
cmpsl
iret
sub
js
cltd
out
mov
adc
ret
xchg
xor
roll
fsubs
push
xor
fwait
int
je
lds
mov
push
pop
int3
and
jns
sub
int
popa
ret
xlat
xchg
std
aas
test
push
inc
mov
xchg
mov
lret
xchg
push
out
add
xchg
xchg
pop
mov
sub
jno
add
scas
idivb
adcl
xor
inc
mov
mov
and
enter
push
aaa
aaa
jp
jmp
cmp
mov
in
orb
jo
cmp
ret
decb
data16
sub
mov
mov
fisubrl
pushf
mov
add
mov
jno
or
cmc
mov
jge
inc
arpl
xor
adc
lcall
mov
lahf
inc
and
cmp
sbb
sub
stos
cli
mov
js
xor
popf
rcll
dec
std
or
cmp
lcall
jns
pusha
aaa
rep
jge
cmp
sbb
mov
mov
inc
subl
pop
or
push
iret
jb
inc
cmc
cltd
xchg
repz
addr16
mov
or
push
loopne
iret
jae
stc
xchg
loop
jno
ljmp
jo
or
pop
xchg
icebp
rol
and
jo
pushf
sbb
push
cmp
ljmp
lods
pop
mov
sub
adc
aas
inc
push
and
xor
add
cmpb
imul
sbb
jo
mov
pop
inc
dec
push
push
pushf
lret
leave
mov
fmuls
mov
into
ds
cmp
jl
inc
mov
ss
outsl
iret
insl
loope
mov
sbb
movsl
movb
das
xchg
mov
popa
mov
lods
mov
sbb
call
mov
mov
jno
iret
cmp
cmp
jae
mov
roll
pop
mov
test
push
adc
sbb
mov
jno
cwtl
movsb
push
lods
mov
insb
ret
xchg
lds
pop
dec
hlt
xor
ja
int
sub
sbb
loope
sbbb
xor
iret
jbe
sbb
loopne
and
into
jmp
xor
jae
rclb
xor
subl
lds
cltd
push
or
cmp
cmp
xor
ret
inc
popa
mov
mov
pop
sti
shll
cli
daa
decb
lock
cli
and
adc
data16
dec
sbb
jmp
mov
add
cmp
xlat
and
push
adc
sub
cmp
fs
mov
fdivrl
ret
in
iret
mov
fists
jnp
push
shr
aad
call
inc
pop
fisubs
outsl
mov
rcrl
fdivs
and
lahf
sub
adc
insl
cmp
imul
jno
jae
gs
aaa
inc
mov
sbb
jne
sbb
fistpl
insb
hlt
xchg
jg
mov
clc
lret
popa
stc
inc
add
call
daa
adcl
adc
inc
and
dec
stos
je
or
mov
mov
push
mov
mov
add
and
enter
or
fisttpll
mov
or
inc
jnp
cmpsl
movsb
mov
jbe
jns
std
enter
pop
dec
lods
xchg
andb
push
pushf
sub
cmp
xlat
adc
and
imul
fisubl
ret
test
push
rolb
sbb
ljmp
ljmp
pop
cmp
imul
fsubrs
sbb
rcll
mov
lea
stos
mov
repz
out
lods
push
mov
lcall
dec
cmp
cli
scas
jnp
test
add
mov
fucomi
add
pop
neg
pop
pop
pushf
cmpsl
xor
jb
loope
push
test
xchg
cmc
imul
lods
sbbl
xor
cmp
faddl
inc
xor
sub
loopne
pop
push
and
shrb
adc
dec
inc
pop
icebp
mov
jo
rolb
call
mov
inc
test
xchg
fwait
mov
add
push
xor
mov
xlat
cs
push
pusha
jae
sub
es
jecxz
add
mov
mov
js
jbe
adcb
xchg
add
add
mov
dec
dec
pop
mov
cmp
push
call
mov
in
dec
lds
ret
pop
sbb
sbb
push
xor
idivl
pop
pop
pop
lgdtl
outsb
aaa
mov
clc
xor
jg
mov
dec
jb
add
gs
and
sbb
imul
dec
jmp
std
leave
inc
add
imul
lea
pop
lods
stc
cmp
ficompl
mov
cmc
mov
bound
test
inc
add
add
cmp
mov
imul
cmpl
lea
xor
gs
dec
je
sub
sbb
lret
mov
mov
sbb
cmp
jmp
dec
push
lcall
test
adc
fcoms
cmpsb
add
fwait
stos
xchg
ljmp
pusha
jecxz
adc
repz
pop
mov
or
mov
loopne
ja
iret
js
imul
sbb
lret
insl
lret
test
pop
mov
stos
xor
jecxz
adc
dec
cmp
sbb
fucomp
jnp
dec
out
jmp
jge
test
in
cmp
stos
popf
jp
mov
enter
fsts
lods
popf
cmp
cmpsl
push
jp
jecxz
inc
dec
push
rcll
mov
mov
push
dec
xchg
mov
mov
inc
inc
ror
xor
xchg
add
mov
aam
dec
cwtl
jo
je
jae
pop
jne
xor
andl
xchg
in
add
lret
fisttps
lret
push
ret
push
andl
hlt
ficoms
shr
xchg
xchg
lods
push
pop
and
push
in
out
adc
jp
sbb
sub
cmp
fstpl
out
imul
loop
and
and
stos
xchg
lods
jno
add
fnsave
xor
mov
sbb
jno
arpl
repz
jo
pop
sbb
rclb
and
nop
nop
cwtl
popf
push
inc
insb
jno
cmp
cmp
push
iret
pop
mov
enter
popa
js
add
xor
sbb
add
mov
popa
stc
int
outsb
push
enter
js
mov
dec
sub
popa
cmpsb
sti
rcr
jno
push
or
xlat
jge
or
or
cmp
pop
push
scas
mov
insb
mov
adc
das
cli
dec
ret
ss
sahf
mov
shll
sbb
fisttpl
add
rcrl
pop
push
push
cmp
test
lock
mov
loop
pop
pop
mov
pusha
lods
ss
dec
mov
push
jns
out
sub
inc
lcall
jae
xchg
imul
mov
int
mov
subb
fs
mov
lahf
scas
cmpsl
into
pop
ret
inc
pop
adc
xlat
negb
ljmp
int3
cltd
mov
mov
sahf
push
sti
movsl
pop
mov
dec
dec
mov
outsb
test
add
mov
mov
hlt
roll
or
xchg
into
add
cmpsl
sub
pop
pop
sub
cmp
in
mov
lcall
loopne
je,pt
dec
push
dec
jmp
lcall
aaa
pop
shlb
dec
or
dec
and
sub
in
sbb
pop
pop
mov
lods
mov
xchg
pop
push
jne
or
mov
sar
cmp
xor
iret
shll
sub
jnp
addr16
xlat
push
loop
lds
loop
sbb
push
out
addr16
xor
divb
sbb
ror
pop
dec
and
dec
sub
mov
scas
sbb
pop
mov
mov
nop
push
or
add
imul
gs
mov
mov
push
jno
popf
out
jp
movsl
sbb
jmp
outsb
std
cmp
jne
jbe
loopne
and
inc
cwtl
sbb
jne
xchg
rorl
loop
mov
and
lods
in
mov
push
jnp
cmpsb
xchg
and
filds
and
stos
bound
in
scas
test
lret
outsl
clc
add
aad
add
hlt
and
das
enter
dec
leave
imul
outsb
aaa
mov
cld
xor
pop
pop
xor
lods
xchg
jl
cwtl
movsb
pop
int
xchg
rcll
shrb
push
sbb
imul
movsl
inc
lock
scas
mov
movsb
nop
adc
ljmp
stos
add
sub
iret
loope
xchg
sbb
or
xchg
adcl
jbe
sub
fucomi
push
bound
cs
loopne
inc
imul
cld
js
xor
xor
add
push
scas
mov
ret
adc
push
aaa
hlt
sub
jns
inc
popa
adc
ss
scas
lea
in
sbb
negb
cs
movsl
das
or
add
cmpsb
mov
mov
add
jg
xchg
test
into
shrl
aas
cs
jg
pop
fs
inc
popa
mov
dec
sbb
das
pop
xor
push
mov
les
inc
movsb
pusha
imul
pop
movsl
scas
mov
pop
es
jecxz
lret
dec
pop
mov
sub
sub
into
dec
dec
and
add
jnp
jle
ljmp
add
sub
mov
mov
movsl
mov
imul
jg
lahf
jnp
lret
loop
mov
jmp
ficoms
iret
vaddps
jno
add
ror
cwtl
mov
js
adc
test
pushw
push
mov
push
mov
and
test
divl
addr16
push
mov
lea
fnstenv
xchg
sub
out
pop
pop
pushf
jns
lds
jmp
mov
xorl
lret
test
and
inc
sub
inc
pop
ja
movsb
or
outsl
dec
js
mov
ds
sub
or
imul
jecxz
lods
aaa
popa
add
dec
sub
xchg
mov
ds
out
stos
mov
adc
hlt
clc
pop
ret
pop
xchg
lcall
jns
lock
cmpsb
cli
pop
ret
jb
xchg
ret
mov
inc
rcr
mov
insl
int
enter
inc
xor
add
mov
scas
aas
clc
rorl
sub
rcr
fldenv
rolb
lods
dec
lods
and
push
lcall
mov
push
in
cmc
mov
pop
sti
out
das
push
fcoml
scas
leave
mov
pop
sub
mov
aaa
or
mov
fdivs
das
gs
shll
mov
popf
loop
pop
daa
in
mov
add
lods
or
int3
lods
ds
lock
sub
sub
add
xchg
aam
pusha
adc
sub
out
mov
dec
sub
je
sti
cld
iret
shl
mov
in
adc
jmp
ds
sub
aam
mov
jecxz
shll
fdivrl
or
adcb
adc
inc
ds
pop
hlt
sahf
sbb
xchg
imul
pop
xorb
dec
pop
addr16
lods
mov
aaa
mov
jno
cmp
lock
int
pop
negl
repnz
jb
push
lret
lahf
call
daa
add
cmp
push
jl
ret
in
mov
xchg
adc
adc
lahf
es
test
outsb
imul
mov
push
aam
add
imul
push
es
orb
mov
xor
out
add
push
cmpsb
adc
push
loopne
mov
popl
pop
test
add
ds
dec
mov
movsl
lds
scas
inc
xchg
in
or
in
lods
mov
dec
sub
jecxz
shrl
cli
adc
jge
aad
lret
xchg
sbb
pop
outsb
lahf
iret
jle
jmp
int
aaa
or
mov
fsts
cmpsl
cs
test
fnstsw
push
icebp
fbld
clc
adc
jl
out
stos
or
adc
leave
cmp
ds
mov
adc
gs
lea
daa
sbb
pop
adc
sbb
std
out
adc
lcall
das
jne
out
sbb
jl
xchg
in
inc
or
fldl
dec
pop
push
or
mov
sti
jge
sub
push
aaa
mov
xor
aas
cwtl
xchg
aaa
nop
movsb
test
sti
out
daa
int
sub
pop
lret
sub
aam
lods
rorl
and
addr16
fidivrs
jmp
andb
outsl
mov
mov
jge
ljmp
sub
insb
mov
mov
mov
dec
cltd
mov
fstp
jo
cmp
sbb
sbb
inc
fwait
and
rcrb
xorl
nop
adc
shlb
divb
cld
dec
scas
jge
test
dec
jge
xor
xchg
mov
jne
pop
pop
and
jecxz
repz
cs
jp
xchg
jo
or
jno
inc
dec
in
xchg
xorl
xor
arpl
mov
sti
pusha
push
sub
dec
testb
testl
push
pop
adc
or
jne
mov
xlat
xchg
sbb
jb
sbb
push
out
sub
xchg
pop
stc
xchg
lods
mov
and
jns
cwtl
xchg
cmp
pop
pop
movsl
mov
stc
mov
imul
adc
xchg
jp
pop
aaa
orl
stos
adc
lcall
mov
lds
jbe
jl
movsb
pop
notl
mov
notl
loope
cmpsl
xchg
pop
push
dec
lahf
cmp
movsb
and
aam
or
pop
add
xchg
jl
or
adc
mov
popa
jb
adc
adc
out
imul
xchg
lock
lret
mov
enter
shlb
xchg
inc
push
sbb
add
roll
lods
push
aaa
loop
and
xlat
inc
jnp
rorl
lahf
pop
clc
add
mov
adc
or
ret
mov
addps
arpl
mov
shrl
rol
and
jno
mov
arpl
push
dec
push
std
fistps
hlt
fldt
or
adc
xchg
jbe
popa
lahf
push
pop
dec
jp
cmpsb
lods
xor
mov
arpl
push
push
add
add
loope
ljmp
divl
leave
es
sbb
xor
mov
mov
mov
mov
mov
xchg
nop
push
cmpb
jnp
jecxz
loopne
mov
dec
movsb
in
mov
or
and
fnstcw
les
addb
pop
adc
xor
test
xchg
dec
data16
mov
mov
in
mov
mov
rcrl
or
and
inc
push
or
adc
cmp
roll
cltd
stos
imul
js
and
inc
lock
xor
jnp
pop
fimull
jno
mov
mov
in
cltd
xchg
rcll
mov
push
add
insb
cld
enter
cmp
lcall
inc
jns
jno
cli
cli
jns
test
mov
nop
imul
outsl
inc
inc
cmp
mov
icebp
subb
push
push
out
push
repz
out
js
cmp
push
xor
pusha
mov
or
je
sub
mov
mov
mov
bound
jmp
mov
xor
jg
push
jmp
xchg
orb
add
rcrb
lods
ljmp
inc
jle
sub
push
imul
imulb
les
inc
out
ret
jnp
aam
mov
mov
ss
test
movsl
xchg
sar
mov
test
loopne
push
dec
mov
ret
shll
dec
fdivrp
ljmp
inc
ljmp
ljmp
push
shlb
pop
add
ds
loope
push
mov
sti
rorl
mov
aaa
push
aad
add
icebp
les
xchg
fadds
insb
inc
add
daa
gs
not
out
stos
fistl
cmp
cmpsl
and
xorb
sbb
adc
adc
stos
adc
sahf
inc
dec
jg
dec
mov
push
cwtl
pushf
ja
test
mov
xchg
lret
stos
nop
fsub
dec
das
adcb
test
decl
shr
and
dec
inc
in
mov
and
sub
bound
fidivrs
mov
push
xor
push
push
jo
jbe
test
adc
xchg
mov
push
std
push
popf
or
in
sarl
fistl
and
lods
jg
push
or
or
inc
pop
mov
rcrb
cmp
mov
add
xor
popf
decb
inc
add
fcompl
ja
jecxz
out
call
js
pop
push
insb
cmc
jbe,pn
and
sbb
fiadds
gs
xor
dec
push
push
sbb
arpl
test
adc
shll
sbb
inc
jne
test
lock
rcr
mov
out
test
leave
jmp
nop
imul
aaa
jge
insb
inc
dec
push
push
pushf
mov
scas
dec
icebp
jge
pop
fbld
jmp
push
adc
mov
cmp
mov
mov
jo
into
xlat
dec
add
cld
or
sub
xchg
repz
and
xchg
fincstp
sbb
sbbb
jns
out
fisttps
adcl
cld
aas
repnz
or
sahf
sahf
scas
and
fcoml
popf
mov
fcompl
mov
movsb
pop
mov
data16
cmp
cmpsl
sub
mov
sbb
in
lcall
dec
mov
ficoms
das
in
push
pop
jmp
mov
inc
pop
fwait
pop
inc
rorl
arpl
jae
popa
xor
decl
sti
lret
mov
mov
dec
stos
xor
sbb
test
cmp
das
mov
imul
push
fldt
std
pushf
pop
leave
in
bound
jb,pn
xchg
adc
cmpsb
dec
jecxz
sbb
push
cmp
cld
lcall
ret
pop
enter
jo
popf
cmp
es
jg
daa
or
pop
imul
iret
dec
sub
mov
or
fstps
jns
jns
popa
push
sbb
inc
mov
movsb
dec
enter
push
push
in
sbb
out
stos
adc
mov
repz
mov
inc
adc
testl
sub
add
pop
jle
loopne
sbb
dec
add
sbb
mov
mov
sbb
rcrl
bound
jnp
cmp
or
rol
daa
mov
mov
fwait
je
fwait
cld
mov
stc
push
cmp
lcall
je
jne
leave
dec
mov
andb
mov
xor
sub
cmp
dec
js
les
or
sub
xchg
stos
add
inc
insb
imul
xor
out
cld
sbb
jno
faddl
cs
add
push
mov
adc
xchg
into
dec
pop
jg
fisubl
cld
stos
insl
mov
xor
aad
add
lret
pop
pop
shrb
mov
das
pop
in
clc
dec
adc
or
lods
jb
add
xchg
and
orb
jne
jno
or
enter
pop
jbe
dec
push
inc
out
jmp
punpcklwd
adc
test
test
xchg
idivb
rclb
and
lods
push
or
push
test
cli
mov
or
mov
jb
cmpl
lcall
lret
sub
inc
xor
mov
xor
in
sbb
cmpb
cmp
testl
icebp
jns
sahf
jp
into
pusha
and
jl
cmpsb
push
scas
ja
push
xor
insl
mov
adc
loop
adc
ret
adc
imul
out
add
pop
mov
outsb
push
jo
ret
std
adc
test
mov
push
push
out
ret
mov
lea
outsb
cld
shll
mov
subb
cmc
dec
push
fcomi
in
add
inc
push
push
mov
mov
shrb
rcl
pop
xor
lcall
and
pop
cli
fstp
sub
mov
popa
inc
mov
cmp
mov
mov
repnz
cmpsb
inc
mov
addl
aad
aam
and
mov
mov
lods
fwait
add
in
push
cli
fsts
scas
sbb
sbb
sbb
jecxz
mov
sbb
sbb
mov
outsb
loopne
sub
xchg
xchg
pop
mov
push
aas
sbb
xor
lds
sub
stc
shlb
jnp
leave
inc
and
je
fldt
popa
orb
call
push
mov
lret
mov
jno
xchg
or
jge,pn
loop
scas
mov
mov
insb
popa
mov
bound
adc
dec
ret
in
inc
data16
lock
xor
iret
adc
int
add
add
ja
loopne
lods
fs
and
ret
sbb
movsb
jmp
pushl
dec
dec
test
sbb
loop
pushf
cmpl
lcall
mov
test
jmp
add
pushf
movsb
daa
addb
pusha
imul
lret
dec
or
in
bound
out
dec
data16
or
shlb
or
push
jg
inc
clc
mov
or
dec
xor
cmpsl
pop
and
jno
loopne
aad
dec
pop
sar
jl
jmp
pop
mov
stc
movsb
inc
subb
mov
mov
pusha
out
aam
repnz
cmp
bound
pop
sub
fstl
xlat
jnp
inc
imul
adc
xchg
and
cmp
dec
push
jecxz
repz
cmpsb
jnp
fmull
pop
cmp
cmp
loop
shl
orl
or
pop
jbe
mov
mov
into
cmpsb
cmp
push
test
xchg
aas
mov
add
add
mov
loope
add
insb
sbb
or
iret
mov
jge
stos
inc
push
sbb
enter
sbb
push
or
push
es
mov
sub
jns
jno
in
pushf
add
adc
jnp
jno
fwait
dec
and
testl
jmp
pop
pushf
lcall
mov
in
push
scas
jnp
push
pop
addl
fmul
fs
data16
sub
push
adc
jno
imul
out
push
in
jl
adc
pop
and
add
loop
push
and
cmp
dec
push
leave
fincstp
cmpb
imul
push
inc
fisubs
dec
and
in
push
in
lods
and
lock
xchg
fiadds
sbb
push
popf
pop
aam
adc
aas
popf
scas
ja
inc
or
jle
adc
jo
or
mov
sub
push
sbb
mov
adc
mov
mov
pop
fwait
cmpsl
je
subb
int3
jp
ficoms
aas
pop
adc
push
pop
cmp
loope
into
sbb
adc
add
cmpb
daa
xchg
je
sbb
leave
fidivs
adc
sub
xor
adc
jl
push
sbb
nop
and
pop
test
pop
cmc
leave
ja
mov
push
sbb
xor
insb
sahf
fidivrs
test
pop
insb
repz
push
and
lods
and
push
mov
xchg
jg
andl
loop
or
sub
cmp
xchg
ret
dec
fiadds
push
ds
jle
les
or
scas
mov
pop
add
cmp
popw
test
cmc
test
xchg
sub
xor
mov
cmp
int
pop
xchg
mov
pop
xchg
mov
xchg
and
hlt
mov
fisubrs
or
lock
jp
mov
mov
xor
call
mov
sub
or
or
ds
dec
mov
dec
mov
sbb
orb
pop
loope
or
fildll
xor
sbb
mov
pusha
lds
jnp
add
bound
addl
xor
mov
push
xchg
mov
je
push
hlt
lea
sub
add
loopne
sarb
xor
addr16
andl
dec
test
int
pop
ffree
mov
mov
jae
cmpsl
pop
rclb
push
out
lock
in
add
xlat
stc
adc
sub
dec
push
or
fidivrl
mov
sbb
pop
mov
cmp
inc
dec
mov
shr
and
jne
jbe
mov
imul
call
lcall
dec
out
fldenv
lret
pushf
mov
xchg
inc
mov
stos
cmpsb
mov
inc
testl
cmp
mov
and
test
les
jne
out
dec
add
dec
outsl
or
push
outsl
aam
dec
xchg
mov
or
je
jle
and
inc
fstpt
popf
jns
cmp
add
js
rcr
sub
js
daa
in
xor
addl
fs
push
rcr
mov
in
mov
xor
mov
out
fiadds
mov
sub
les
and
or
daa
mov
push
test
call
lock
add
std
sbbl
push
cs
mov
inc
pop
shrl
xor
enter
repz
repnz
inc
inc
cli
cmp
popf
loope
out
push
stc
sub
pop
dec
mov
jp
pop
inc
mov
inc
ja
daa
mov
call
ss
mov
stos
sti
adc
mov
aas
test
mov
xor
imul
mov
mov
addr16
mov
shl
dec
movsl
les
shlb
push
or
loopne
iret
add
push
dec
and
es
ss
lock
lods
ret
add
int3
test
jle
mov
enter
ret
int
sbb
mov
out
divl
lret
push
inc
aad
pusha
sub
mov
lcall
inc
sbb
xor
rorb
sbb
dec
inc
inc
cmpsb
insl
mov
out
add
xorl
mov
rclb
scas
cmc
mov
sarb
inc
repnz
mov
aas
xchg
and
sbb
cmp
cmp
xchg
pop
inc
sarb
andl
add
out
adc
or
xchg
imul
and
add
mov
cld
bound
pop
cli
or
shlb
roll
cmpb
addr16
inc
outsb
adc
test
mov
cmp
lret
in
sub
mov
or
xchg
mov
stos
mov
push
iret
stc
loope
mov
or
inc
lahf
push
mov
dec
mov
ret
sbb
ljmp
jmp
add
shlb
dec
mov
fisttpll
xor
inc
cs
pop
sbb
sti
or
arpl
and
xor
in
icebp
lret
and
hlt
lret
lret
movsb
push
adc
test
sub
sbb
and
punpckhdq
stos
or
sbb
or
cmp
mov
or
loopne
dec
shrb
dec
add
or
iret
je
and
push
cmpsb
orb
adc
xlat
push
pop
inc
popf
movsb
cmp
adc
mov
fiadds
mov
js
insl
bound
pop
das
pop
push
add
adc
mov
fsubs
inc
push
cmpsb
mov
lds
fwait
aad
push
sub
dec
cmpsl
sahf
mov
ret
inc
jp
sbb
inc
inc
test
out
mov
stc
into
and
or
or
loop
in
add
in
loopne
sbb
in
cmc
push
xor
sub
std
je
adc
addr16
aas
mov
xchg
les
xor
mov
or
sbb
rcr
call
push
add
int
cmp
mov
jae
push
sub
sbb
cmpsb
mov
dec
iret
test
push
add
fistl
pop
daa
fsubr
jp
lds
mov
cmp
test
push
inc
aam
cmp
pop
mov
mov
sub
js
out
jnp
mov
popa
adc
clc
pushf
into
es
mov
cmc
xchg
dec
lea
inc
xor
jnp
imul
add
sarb
test
jne
shlb
outsl
aam
mov
inc
repz
inc
lcall
int3
dec
bts
pop
sbb
int
xchg
adc
xor
enter
fucomi
clc
nop
mov
add
lahf
xor
mov
push
xor
push
fldenv
sub
and
xor
push
sarl
rol
cmpsb
pop
dec
adc
test
aas
popa
pusha
stc
idiv
dec
ficomps
fstpt
sbb
sbb
fcomps
mov
lods
mov
sbb
arpl
and
mov
add
jns,pt
mov
pop
lret
jnp
pusha
loope
aaa
out
inc
pushf
and
stos
inc
push
pusha
xor
xor
jae
mov
pop
ds
mov
nop
lock
aas
cmpsb
lods
aam
sub
add
and
or
xor
aam
sub
rol
lds
lcall
imul
xor
mov
in
mov
outsb
adc
and
or
jno
inc
push
insb
test
test
pushl
jp
inc
cmp
fwait
je
loop
adc
sub
ss
pushf
dec
xor
xchg
test
in
mov
or
adc
sub
movsl
mov
dec
adc
dec
mov
and
lods
lods
or
stc
mov
ss
nop
and
hlt
mov
icebp
aam
dec
cmp
lods
push
sbb
fs
inc
cmp
xchg
ret
lahf
mov
movsl
xchg
addb
inc
inc
mov
jnp
pop
fisttpl
dec
jecxz
add
mov
repz
imull
or
out
push
call
in
cmpsb
rolb
pop
mov
popa
mov
mov
fsubrs
es
and
fldcw
push
fldl
cmpsl
push
loope
aas
out
dec
xchg
orb
push
stos
inc
cli
pop
mov
lret
lods
cwtl
cmp
or
insl
ret
je
adc
testl
push
cmpsb
xlat
add
sub
popl
pop
xchg
cmp
jne
pop
jle
int3
movsl
fisubl
adc
repnz
xor
cmp
out
sub
add
adc
repnz
mov
mov
adc
jg
cld
cmp
sub
dec
clc
notl
daa
lods
ficoml
adcb
sahf
das
jle
lods
jns
faddp
and
adc
cmp
in
sub
in
inc
inc
repz
pop
or
push
jge
lahf
xor
pop
add
lock
shr
pop
or
jns
aaa
mov
imull
jmp
adc
ror
jo
inc
sub
mov
sbb
xor
sub
adc
xchg
cli
jp
or
inc
aaa
das
je
xchg
sub
rcrb
lret
sti
sub
mov
push
cmp
imul
jg
rcll
xor
xchg
fisubrs
mov
out
cmp
add
test
cmp
or
xor
mov
jge
lahf
sbb
nop
inc
stos
lcall
jbe
push
add
cs
mov
sub
arpl
xchg
fimull
xor
inc
mov
idiv
pop
mov
cli
jns
mov
or
sub
leave
xchg
mov
mov
lea
inc
data16
sbb
sahf
ret
xor
test
or
testl
sbb
in
sbb
ljmp
push
xchg
in
incl
test
and
mov
cltd
xchg
jne
loope
scas
mov
lret
and
scas
shrl
inc
aad
repnz
push
cmp
xor
mov
jnp
mov
pop
xchg
stc
push
lret
and
pop
sbb
jnp
push
pop
clc
and
lds
jne
jg
jb
mov
sub
aas
inc
sub
sbbb
sub
aaa
jne
mov
scas
sbb
mov
cmp
dec
decl
pop
loop
in
rcll
fistpll
and
dec
sbb
lods
mov
sub
das
mov
push
mov
scas
xor
sbb
inc
mov
pushf
dec
xlat
mov
out
loop
test
xor
movsb
mov
push
loopne
mov
in
add
xor
ljmp
imul
sar
cli
or
aaa
inc
or
pop
adc
mov
and
mov
rcrl
aas
in
xor
es
leave
aas
inc
jge
jle
rcrb
movsl
leave
cwtl
push
xor
mov
xchg
push
jo
cmp
in
lret
aad
call
jle
scas
test
scas
and
sahf
cmc
iret
aas
push
cwtl
mov
pop
lea
or
stos
rclb
mov
out
outsb
sbb
repz
mov
outsl
lahf
pop
fdivl
int3
stos
mov
or
lds
mov
mov
in
and
cmpsl
call
mov
test
dec
movb
mov
xchg
mov
pop
in
aam
stos
inc
lahf
clc
aaa
mov
lock
fdivl
mov
dec
cmp
lods
fists
pop
dec
popa
lcall
mov
jge
xor
and
jno
dec
enter
push
scas
pmulhw
sbb
inc
or
cli
lcall
cmp
jle
adc
in
imull
je
mov
subl
mov
andb
xor
and
fsubrs
lea
mov
dec
push
outsw
sbb
lret
cltd
jb
test
or
daa
outsl
jmp
mov
pushf
ret
cmp
insb
mov
xlat
dec
adc
filds
cmpsl
cmp
pusha
sar
rol
and
bound
dec
xchg
jecxz
stos
sbb
cmp
sbb
inc
daa
xorb
fs
cmpsl
mov
shll
xchg
dec
xor
movsb
mov
int3
int
cmp
outsl
int3
and
pushf
sbb
push
xchg
xchg
in
jo
out
aaa
data16
setns
sahf
ja
dec
or
xchg
std
lods
mov
xlat
ljmp
outsl
les
rcrb
fistl
xor
in
dec
dec
xor
data16
out
xor
fsts
lds
incb
scas
imul
lock
sub
sub
adc
dec
cli
ret
pushf
ljmp
or
inc
insl
cmpsb
insl
sbb
sub
or
das
and
mov
and
sub
pop
data16
mov
std
cmp
aad
jno
mov
cmp
inc
fsubr
lods
repnz
cmp
and
inc
cmpsb
jno
push
repz
xor
mov
mov
enter
and
adc
push
mov
jns
out
jl
jg
inc
clc
jmp
xchg
imul
cmp
jmp
imul
pop
jb
ret
xor
dec
mov
fisubrs
xchg
xchg
dec
test
scas
pop
scas
or
cmp
std
xor
lock
push
jecxz
stos
cmp
and
mov
mov
jo
and
jno
out
in
lods
insl
dec
xor
add
sub
out
xor
xor
adc
icebp
xor
in
xor
push
stos
pop
xor
arpl
pop
mov
inc
fisubrs
inc
cmpsl
add
int
loop
sbb
or
imul
imul
xchg
push
fcoms
pusha
cmp
push
adc
daa
stos
push
xor
push
sub
inc
mov
xlat
arpl
iret
pushf
jl
jbe
mov
dec
repz
nop
and
bound
cs
rclb
aad
mov
lods
xor
push
mov
cwtl
pop
sahf
mov
push
pushf
jnp
push
rorb
mov
mov
inc
sbb
xor
test
sub
mov
data16
or
mov
out
jb
out
jmp
insl
hlt
repnz
mov
jge
sbb
mov
pop
mov
imul
fsubrs
int3
shlb
push
stc
pop
adc
out
inc
pop
scas
imul
fs
push
les
jo
push
lds
leave
pop
in
xchg
aad
inc
jp
push
jnp
add
inc
into
mov
sbb
sub
rcrl
out
iret
jp
stos
jg
cmp
adc
fidivrl
les
push
out
pop
outsb
inc
clc
or
mov
scas
and
jne
ds
add
inc
fadds
js
insb
fs
xor
mov
and
cmp
mov
lcall
push
fiadds
sub
arpl
lret
or
inc
mov
out
lds
xlat
inc
std
mov
lds
ret
and
cli
and
sbb
xchg
ja
test
or
jecxz
or
divb
dec
fistps
call
testl
outsb
rclb
mov
adc
into
mov
add
lret
out
jl
addr16
add
dec
jle
mov
aas
in
movsb
ljmp
adc
and
data16
lods
xchg
stc
sbb
aam
cmp
pushf
js
mov
push
mov
nop
jno
jo
xlat
mov
or
test
mov
adc
es
sub
inc
push
imul
add
sub
nop
loopw
xchg
sub
call
and
dec
xchg
add
cmp
sub
inc
push
clc
rclb
mov
add
aas
aam
sub
or
mov
inc
mov
movsb
lea
fdivrl
mov
jl
leave
insl
jno
test
add
in
pop
mov
push
movsl
sbb
lea
cmp
inc
std
inc
jne
push
mov
loop
in
les
bound
dec
and
out
hlt
icebp
lahf
mov
std
stc
jmp
mov
shl
inc
mov
in
and
dec
sbb
pop
pop
movsb
sub
lret
and
add
loope
fisubrl
xor
xchg
daa
mov
inc
je
ss
clc
iret
les
fisttpl
pusha
add
pop
les
xor
in
or
repnz
imulb
mov
ds
adc
gs
lods
xor
mov
lea
push
sbb
jb
push
mov
pusha
rclb
xor
fcoml
ja
jp
jno
mov
sub
jp
jbe
cmp
mov
lods
adc
jo
add
push
jne
andb
pop
xor
push
xor
lahf
fiadds
mov
inc
stos
divb
popf
jns
mov
and
into
int3
enter
ret
in
push
add
pushf
out
divb
inc
aaa
push
lcall
add
add
mov
fisttps
out
pusha
js
out
bound
into
cmp
js
pop
mov
jnp
fnstcw
insl
or
popf
mull
add
int
cltd
cmp
movsl
mov
dec
lods
inc
xchg
and
mov
push
sub
adc
or
fsubp
and
out
adc
dec
sub
push
cmp
dec
lahf
push
insl
mov
loop
das
xchg
mov
pop
or
mov
scas
dec
aam
adc
mov
add
xchg
fwait
sbb
test
in
cmp
xlat
xor
imul
sbb
mov
xchg
pushf
dec
test
out
or
hlt
xor
push
mov
pushf
adc
cli
clc
sbb
test
sub
stos
fisubrl
pop
cs
cmp
fimuls
add
mov
fildl
jmp
adcl
das
inc
ja
lds
or
inc
aam
int
or
test
fldl
aas
pop
mov
rcrl
mov
je
jns
adc
mov
shrl
call
loopne
jns
scas
loopne
mov
xchg
push
sarb
lock
dec
mov
stc
inc
out
mov
xchg
dec
xchg
xchg
xchg
stos
cltd
mov
test
xor
cmp
mov
and
fs
hlt
dec
xchg
lret
add
xchg
dec
sbb
or
mov
fwait
clc
ds
les
out
adc
jno
fstpl
clc
jmp
jb
push
lds
xor
jecxz
adcl
imul
neg
jge
adc
cli
add
in
setp
lods
xchg
pushl
push
lcall
mov
push
jmp
shrb
inc
out
add
add
call
or
pop
jl
js
adc
push
outsb
aas
nop
xor
mov
sbb
out
mov
fiadds
jno
dec
cmp
inc
bound
inc
es
addr16
push
push
dec
addr16
push
jo
aaa
push
call
int
cld
sub
rolb
mov
fbld
test
and
hlt
adc
xor
idivl
jnp
lahf
imul
cmpsl
leave
xor
xorl
mov
orb
and
pop
mov
dec
mov
outsb
cmp
adc
pop
lock
jl
repz
test
sti
add
in
sar
xchg
adc
dec
xchg
mov
testl
fnstcw
faddl
pop
cld
jge
in
cmp
dec
add
in
mov
fwait
cmp
pop
inc
adc
sbb
sti
out
sub
sub
fmuls
jne
sbb
call
jp
xchg
dec
cmpsl
xor
sbb
dec
clc
add
lock
inc
adc
out
add
or
lcall
lret
push
pop
and
jle
int
push
push
out
pop
loopne
shl
aam
jnp
adc
fs
jns
in
jo
sub
mov
into
int3
cmp
pop
popf
rcrl
push
into
lock
sbb
jmp
aaa
or
push
adc
cmp
cmpsl
xchg
insl
mov
and
push
in
pop
xor
sub
mov
ljmp
mov
pop
scas
or
outsb
push
fidivrs
nop
xchg
fs
in
int3
pop
and
or
or
sahf
outsb
stc
mov
jnp
imul
ja
xlat
inc
sbb
daa
daa
shl
or
cltd
in
testb
cld
aam
and
negb
sub
mov
mov
or
in
into
sbb
sub
or
pop
test
js
xchg
outsb
inc
lret
data16
fsubs
enter
inc
sbb
mov
addr16
mov
into
jae
inc
xor
pop
dec
out
or
movsb
mov
outsb
fwait
jae
shr
jp
das
inc
repz
cmpsl
aas
dec
inc
lods
and
pop
imul
in
inc
call
cmp
dec
das
dec
push
and
xchg
jge
data16
ss
push
lcall
and
fstl
les
test
inc
addr16
or
mov
loope
push
mov
imul
push
pusha
jne
add
fstpl
pop
cs
mov
out
cmovb
pop
inc
xlat
xchg
test
push
sub
sub
jbe
mov
pop
cs
mov
inc
pop
sub
or
pop
or
dec
xor
jb
inc
cmc
cmc
repz
sbb
sbb
int
or
es
pop
inc
jo
push
xchg
jg
mov
lret
sub
test
sbb
add
sub
gs
jb
fwait
xchg
xchg
movsb
in
int
or
push
nop
mov
mov
lods
mov
notb
iret
ret
arpl
adc
sub
mov
adc
pop
jl
lock
stos
mov
jb
pop
popf
sar
fs
div
add
cltd
imull
sub
push
ja
shlb
imul
call
js
xor
insb
push
xor
pop
int
sub
jl
adc
mulb
mov
jl
cmp
mov
sub
rep
dec
sub
outsl
cmp
shll
cli
or
int3
lahf
dec
xor
js
push
stos
add
stos
arpl
idivb
ds
js
inc
adc
test
scas
pop
and
aaa
and
into
stc
fnstenv
js
aam
mov
push
sub
jns
sbb
xchg
movsb
add
cmp
and
dec
push
loope
lcall
std
push
imul
pop
mov
xchg
js
test
mov
and
jmp
jg
stos
das
fwait
mov
aam
ret
jg
push
push
pop
pop
lods
or
out
movl
mov
adc
jg
daa
sub
mov
mov
pop
mov
std
mov
xor
mov
hlt
scas
ja
gs
cwtl
xchg
jo
pusha
xchg
loop
aaa
mov
lret
add
scas
jecxz
mov
pop
mov
adc
mov
xor
inc
inc
rcr
dec
jg
fxch
sub
rolb
inc
jne
int3
and
aaa
adc
in
mov
pop
repz
aas
lock
cmp
mov
xor
xchg
adc
sbb
dec
inc
mov
push
sarl
jnp
ja
adc
and
sbb
adc
hlt
xor
or
cmpsl
in
shlb
push
shl
mov
mov
lods
sbb
push
aad
adc
loopne
push
insl
cwtl
mov
push
mov
in
sti
xchg
cmpsl
les
daa
fmul
and
fnstenv
inc
jg
add
mov
xchg
add
sub
mov
andb
sub
cltd
test
test
idiv
sbbl
push
xchg
and
xchg
jmp
scas
cmc
sbb
pop
ror
or
aam
es
movsl
add
pop
mov
enter
and
xchg
mov
data16
sub
mov
add
adc
pushf
ret
pushf
in
dec
aad
lcall
pusha
insl
sbb
pop
in
mov
clc
xchg
in
popf
pop
or
adc
es
or
add
push
add
add
jge
jno
rorl
out
lods
mov
and
mov
cmp
xor
stos
inc
int3
sub
nop
sub
lea
mov
dec
les
push
pusha
scas
fidivl
scas
sbb
xor
mov
bound
adc
xlat
aaa
mov
inc
aas
jns
cmp
pop
mov
adc
ret
dec
call
into
stos
ds
nop
iret
movsl
jbe
xchg
orl
xchg
mov
test
nop
adc
ficoml
and
aam
aam
cmpsl
push
shl
pop
adc
adc
add
nop
sbb
sub
fimuls
decb
jne
aas
xchg
mov
adc
mov
cmp
add
push
add
cmpsb
scas
adc
or
mov
js
call
mov
or
push
cmp
lcall
fwait
mov
arpl
xchg
or
sbb
in
insb
scas
icebp
outsl
insb
mov
mov
mov
inc
icebp
inc
inc
fs
fiadds
call
nop
xor
adc
add
mov
call
movsl
jbe
nop
mov
daa
scas
aas
stos
dec
stos
stos
cwtl
xor
mov
inc
movsb
hlt
sub
add
ds
lods
repnz
stos
pop
repz
pop
dec
dec
push
aas
jecxz
inc
ja
mov
inc
pop
push
daa
sti
cmpsl
mov
nop
and
cmp
adc
pop
iret
mov
shrb
add
push
sbb
dec
pop
mov
push
add
mov
cmp
sbb
es
lcall
imul
push
inc
mov
jecxz
jle
cwtl
js
call
testl
out
inc
sbb
lock
retw
lahf
cli
in
pop
aam
sahf
stc
and
aaa
or
or
cltd
aas
ja
lret
push
add
jbe
inc
push
scas
add
sub
pop
dec
xchg
pop
in
in
push
sbb
add
pop
notb
pop
imul
insb
jne
mov
sub
cmpsl
inc
jo
int3
popa
inc
cmp
jle
fadds
or
mov
sarb
sbb
push
rorb
jbe
inc
pop
in
sub
lds
mov
push
sbb
outsl
test
repnz
sub
popf
push
mov
push
out
test
mov
or
sar
mov
adc
pop
fisubrs
and
fst
add
jg
cmp
cmp
fstpl
xor
lcall
out
in
sub
or
sub
dec
jp
mov
in
mov
and
imul
mov
mov
hlt
scas
sahf
dec
dec
inc
sub
mov
mov
in
in
stos
mov
pop
add
adc
fists
mov
jle
les
mov
pop
divb
in
adc
scas
out
sahf
rorb
jne
test
dec
addl
mov
push
outsb
dec
jmp
test
mov
or
sbb
das
loop
push
dec
inc
in
pop
mov
pop
repz
outsb
dec
sbb
pop
sbb
leave
push
cmp
lock
and
lret
or
test
pop
adcl
dec
mov
addb
dec
sub
or
adc
push
cmpsb
jo
add
adc
adc
pop
insl
out
mov
jns
cmpsl
adc
mov
shrl
xchg
xor
lds
pop
push
es
fstl
into
js
scas
push
scas
adc
push
pusha
ret
add
mov
lcall
scas
push
mov
movsl
cltd
or
lods
pop
loop
in
leave
pushf
dec
mov
lea
lds
mov
in
fcoms
mov
lock
pushf
shll
mov
mov
jge
leave
popa
adc
mov
mov
std
shl
loope
mov
les
cmc
dec
inc
inc
mov
add
pop
in
jge
daa
cmp
push
pusha
add
xor
jmp
jp
mov
fbstp
sti
xchg
scas
inc
data16
jg
adc
outsl
ret
mov
bound
mov
movsl
inc
shlb
sti
or
fldl
mov
out
inc
int
push
and
xchg
pusha
loope
cli
sub
dec
ss
decl
shlb
mov
dec
fsubp
sub
hlt
sarb
inc
fldcw
or
cmpl
jns
or
ja
pop
popa
clc
enter
jp
pop
and
js
push
movsb
pop
test
fwait
pop
fnsave
movsb
mov
adc
add
cmc
stos
or
add
loope
push
xchg
cmc
hlt
or
jo
insb
shlb
push
fadds
jns
jge
inc
div
pop
xchg
mov
jbe
mov
jne
push
xor
mov
andl
mov
push
sub
add
mov
hlt
ret
cs
add
loope
fs
mov
xor
jl
xchg
adcb
jno
cmp
xchg
xchg
fisubrl
gs
jae
jne
add
cmp
adc
mov
lcall
and
adc
clc
cmp
std
popa
lea
jmp
sti
int3
dec
xor
mov
push
ret
loop
addr16
cmp
fcompl
lret
enter
cmp
mov
gs
or
dec
gs
push
push
cmp
data16
push
xchg
dec
jp
inc
addr16
inc
adc
sbb
and
nop
enter
adc
arpl
ss
stos
data16
and
jmp
xchg
cmp
lock
pop
repz
fwait
or
mov
stos
pop
adc
popa
stos
sub
aad
push
jg
jg
pop
aam
add
movsl
fistpll
dec
push
dec
test
shll
xchg
mov
dec
push
out
xchg
dec
push
push
lock
pop
mov
add
inc
fisttpl
cs
roll
inc
shl
jo
jns
mov
pop
clc
jns
iret
incl
xchg
outsl
sub
mov
xlat
jno
mov
mov
aaa
and
nop
faddl
pop
mov
jp
inc
xor
pop
pusha
outsl
adc
dec
andl
aad
mov
mov
jns
and
pop
into
loope
push
mov
fmul
push
lahf
inc
mov
xor
mov
mov
xor
inc
and
add
or
inc
dec
lods
jl
xor
adc
or
sbb
lahf
divl
or
jle
dec
cmc
cmp
in
fadd
dec
stos
les
cmp
mov
or
cmc
ja
out
in
iret
outsl
inc
sub
into
mov
sub
scas
roll
adc
cmp
mov
dec
sbb
mov
popa
or
aaa
ret
push
mov
push
inc
sbb
xchg
jns
inc
in
and
or
movsb
cmp
or
adc
cmp
and
jo
mov
pop
jne
jge
arpl
dec
test
outsl
cwtl
jl
scas
arpl
movsb
cmc
jnp
data16
xchg
repnz
mov
cmpsb
adc
stc
sbb
adc
pop
push
test
out
aad
cwtl
mov
lods
in
nop
ja
lcall
pop
cmp
les
aam
inc
push
xor
push
xchg
sub
aaa
xchg
cmpsb
ljmp
sub
jl
cs
test
dec
lahf
mov
pop
rorl
mov
pushf
jge
xchg
ret
add
icebp
mov
lock
push
fistpll
aam
aad
int
inc
cltd
hlt
lds
add
imul
enter
pop
mov
popa
adc
cmp
pop
test
xor
adc
outsw
adc
mov
add
cli
mov
and
sbb
dec
in
fiadds
inc
push
in
lock
outsl
dec
imul
pop
jl
loopne
fdiv
call
adc
cltd
inc
gs
inc
cmp
movsl
js
and
in
rcrb
leave
or
mov
pop
fisttpl
sbb
movsl
pop
aam
adc
and
lret
jne
and
adc
js
aas
lods
sub
xor
push
mov
cltd
xchg
stc
mov
arpl
add
or
into
add
stc
fisubl
inc
out
cmpsl
mov
out
mov
adc
out
push
adcb
pop
mov
divb
lds
push
in
mov
push
pop
dec
insb
roll
subl
cmp
sub
lret
in
pop
stos
lea
popf
lahf
lock
aad
jns
push
and
mov
adc
sbb
mov
dec
movsb
cmp
push
mov
fs
pop
and
xchg
sbb
dec
mov
xlat
lahf
hlt
or
cmc
cmpsb
push
loop
aad
mov
testb
xchg
jg
mov
aad
mov
shlb
jnp
xchg
gs
ss
into
mov
pop
cld
mov
scas
add
lods
sbb
test
dec
inc
pop
ja
imul
call
adc
nop
mulb
popf
push
insl
shlb
mov
ljmp
jb
test
aaa
xchg
sbb
xchg
loopne
lcall
mov
sets
sbbb
push
cmpb
sbbb
nop
fwait
shlb
inc
mov
out
hlt
data16
lock
mov
movsb
push
cmp
jp
add
sbb
stos
in
ja
ret
sub
aam
xor
add
jg
push
and
sub
dec
cmp
pop
push
push
mov
js
popf
pop
mov
jle
mov
gs
mov
insb
mov
jp
imul
inc
in
mov
lret
push
pop
ret
adc
mov
lods
lock
xor
push
xor
ds
or
or
xchg
sub
lock
add
pop
call
rcll
pushf
sbb
push
hlt
pop
jmp
xchg
fidivs
aaa
add
mov
inc
sbb
cmp
sbb
adc
adc
push
bound
and
jmp
adc
fs
adc
and
or
int3
mov
lea
xchg
mov
cmp
adc
jae
cmp
and
sub
in
stos
stc
imul
inc
sub
inc
add
sbb
adc
adc
pop
insl
mov
inc
xchg
sub
xor
add
pop
xchg
popa
es
cmp
xchg
in
ja
iret
or
mov
scas
out
push
ds
out
and
mov
dec
lods
imul
mov
sub
cmp
xchg
sub
pop
lea
adc
or
dec
popf
add
adc
subb
cmpl
sbb
lahf
shll
loope
mov
inc
cmp
dec
loop
cmc
mov
xchg
divl
lock
addl
fidivl
sbb
inc
shl
fstpl
movsb
jmp
lret
add
adc
cmp
jmp
fcoml
imul
and
cmp
adc
mov
insb
sub
xchg
xlat
test
test
jle
add
arpl
aam
sti
in
or
push
jne
insl
xchg
out
lods
stos
or
out
push
ret
add
cmp
mov
add
lds
mov
inc
in
dec
andb
xor
nop
mov
out
sub
iret
aas
push
jno
push
xchg
mov
mov
cmc
movsl
push
insl
and
les
pusha
lahf
push
stos
pop
daa
dec
mov
xor
fnsave
dec
sub
rcl
not
xchg
int3
loopne
into
xor
rclb
inc
mov
xor
xor
aas
push
mov
cld
or
and
dec
pandn
jecxz
cmp
in
sbb
mov
shlb
in
adc
inc
subb
sbb
sti
inc
int
push
stos
addr16
and
mov
jae
inc
ret
jb
xor
lret
pop
in
xchg
jle
movsb
push
pop
outsl
mov
xchg
or
flds
cmpsl
mov
cs
and
loop
mov
ret
jnp
inc
test
sarb
sub
xchg
mov
ja
sbb
cld
pop
stc
add
call
pop
fiadds
ret
bound
fisttps
mov
cmc
cmpsl
mov
aas
jne
pop
inc
pop
push
stos
jge
jl
iret
jp
dec
xchg
pop
push
out
cld
lods
out
jno
data16
cld
mov
mov
sbb
arpl
inc
jb,pt
movsb
and
jg
dec
xor
in
out
mov
push
and
pop
inc
test
lds
jns
in
imul
xchg
jo
clc
mov
mov
sti
outsb
negb
pop
dec
sub
dec
jle
das
push
mov
arpl
mov
scas
fimuls
pop
fmull
fistpl
mov
mov
lea
les
shll
pop
ljmp
data16
jns
push
push
xor
test
cltd
xor
repz
xlat
push
repz
in
outsl
xchg
in
int
pop
repz
push
scas
ret
and
in
pop
rclb
dec
int
push
xor
es
insb
jne
xchg
in
add
mov
pop
jb
lahf
sbb
push
leave
pop
dec
dec
inc
mov
pop
push
xor
mov
les
xchg
loope
jo
aam
fs
sbb
dec
and
or
pop
push
data16
cwtl
les
int
mov
inc
mov
ret
int
and
and
loope
jne
fwait
or
mov
cmc
push
fs
enter
xor
outsl
mov
addr16
xchg
sbb
imul
int3
xchg
xchg
jne
mov
mov
jnp
xchg
mov
xchg
cld
and
cmp
fsubrp
jmp
and
mov
sbb
bound
sti
add
movsl
pop
cmp
dec
mov
mov
cmp
dec
push
icebp
sbb
cwtl
pop
pop
hlt
dec
imul
insl
push
mov
mov
dec
dec
cmp
js
jp
movsl
push
xchg
icebp
lds
adc
std
pop
iret
push
or
jg
in
pop
popa
xor
and
xor
inc
insb
ror
xor
add
imul
or
push
jmp
into
adc
stos
inc
cs
dec
sub
pop
cli
fs
roll
sbb
rorl
ss
into
sub
stos
nop
in
inc
test
inc
mov
xor
out
loopne
pop
arpl
xchg
lea
mov
mov
lock
ret
test
movsb
aad
xchg
addr16
and
out
bound
dec
loope
cmc
and
cmp
das
push
mov
cmc
mov
dec
inc
dec
xchg
pop
push
mov
ss
sub
xchg
push
aaa
adc
inc
into
cmc
xchg
lret
roll
xor
sub
or
jae
je
test
cmc
push
in
aas
dec
xchg
jg
ret
xchg
aad
rclb
addb
ret
pop
mov
rcr
outsb
push
rcll
adc
imull
jmp
sub
stos
push
mov
and
cmpl
sbb
push
mov
mov
and
dec
in
cwtl
mov
movsb
jnp
mov
in
pop
adc
pop
fdivl
mov
xchg
ret
popa
sub
negb
push
sub
push
scas
mov
pop
jae
jmp
push
dec
cmc
jns
jbe
jmp
sbb
push
mov
cltd
dec
sbb
in
out
hlt
lods
emms
push
inc
repz
push
and
and
xor
cli
jmp
imul
int
inc
insb
mov
loope
mov
sub
sub
xchg
inc
insb
sbb
jb
rorb
dec
add
in
or
inc
ret
lahf
imul
xchg
cmpsl
fnstcw
mov
add
fiadds
or
arpl
mov
das
push
sbb
es
dec
out
adc
je
inc
push
inc
std
mov
ds
mov
mov
jmp
add
fdivl
lods
and
and
cld
sbb
add
outsl
push
sarl
pop
jnp
es
inc
mov
push
push
cld
aad
sbb
add
in
mov
add
mov
scas
arpl
ret
mov
lret
int
pop
in
push
inc
imul
mov
add
adc
out
jle
sub
adc
adc
sbb
int
xor
mov
cwtl
pop
and
sub
jnp
icebp
pop
arpl
mov
inc
cmpsb
sub
movaps
outsl
out
loop
and
xor
lock
sahf
inc
out
lea
xor
popf
sahf
dec
in
mov
iret
sbb
and
xlat
cmp
into
lahf
ficompl
mov
scas
icebp
cwtl
insl
das
addr16
push
adc
jno
or
sti
inc
in
lcall
inc
cmpsb
or
icebp
inc
nop
daa
xor
sub
loop
mov
sub
inc
mov
cwtl
push
shlb
mov
sbb
test
pextrw
jne
cmp
fildl
and
enter
in
movsb
sub
popa
stc
or
fcoml
lods
xchg
push
xorb
ds
dec
icebp
lcall
lcall
push
pop
rcr
scas
js
push
stos
in
and
inc
fistl
daa
jnp
loopne
ljmp
cmp
int
aad
popf
cli
lret
scas
xchg
sar
or
jp
call
mov
cmp
add
outsb
aam
neg
add
rolb
push
pushf
test
ret
mov
mov
daa
adc
and
xchg
mov
daa
addr16
jg
pop
mov
adc
mov
lea
lahf
je
cmp
fwait
adc
call
push
cmp
push
lret
pop
loopne
pushf
or
sbb
imul
jnp
push
or
or
inc
push
xchg
sub
lods
mov
add
and
mov
mov
inc
push
jl
mov
stc
lods
fdivs
aam
push
popf
push
rcrl
sub
jno
arpl
adc
push
and
clc
mov
inc
push
aaa
mov
leave
lods
stc
ljmp
xchg
jle
add
pusha
xor
inc
addr16
mov
xor
mov
jnp
mov
movsb
and
shlb
mov
inc
imul
aam
push
pminub
dec
out
fcom
sub
bound
sbb
pop
imul
and
mov
jnp
enter
mov
sarl
mov
adcb
dec
int3
mov
push
dec
mov
in
int3
daa
inc
pop
dec
into
stos
push
loope
je
scas
aaa
sbb
rclb
pop
mov
or
into
dec
jne
into
pop
outsb
cli
sbb
sbb
inc
and
pop
jne
jmp
cltd
stc
jae
call
and
or
repz
mov
jmp
cmp
and
aad
pop
jl
push
or
addb
mov
jo
mov
leave
inc
pusha
mov
mov
out
add
and
dec
jg
adc
fs
cmp
push
sti
mov
and
cmpsb
and
int
mov
add
jl
pop
or
xchg
push
test
xor
sub
sbb
mov
cmp
sub
test
push
iret
loopne
xor
int3
or
inc
jg
sub
push
mov
hlt
add
arpl
xor
jecxz
movsl
cs
sub
jp
or
dec
pop
mov
inc
rorl
shr
mov
loopne
fisubl
sahf
fisttpl
inc
cmp
mov
sbb
push
sarb
loope
add
push
scas
inc
and
rcrl
xchg
xchg
scas
mov
mov
or
inc
scas
push
mov
pop
sbb
out
xchg
loope
test
fdivrs
and
test
outsl
insl
mov
jge
mov
add
lahf
addr16
adc
add
popf
add
out
cmpsl
inc
leave
mov
pusha
out
xlat
faddl
cmp
in
repz
and
dec
mov
cmp
fsts
mov
lret
xor
ret
sbb
out
aam
jg
bound
scas
cs
pop
pop
jecxz
dec
mov
push
fsubr
stos
xchg
pop
mov
jbe
or
nop
push
or
add
dec
enter
repz
fcmovnu
sbb
into
test
bound
cmpsb
add
xchg
cmp
in
repz
push
cmc
mov
fcmovb
ja
lret
mov
lahf
adc
jbe
dec
lds
jbe
cmp
jmp
test
hlt
pop
cld
inc
mov
pop
popf
or
cmc
adc
and
inc
mov
sub
in
xor
jbe
mov
jo
cmp
adc
arpl
sbb
inc
std
push
in
test
add
and
add
push
aaa
dec
incl
mov
mov
aas
sub
sbb
push
mov
scas
je
cli
pop
jecxz
cmc
hlt
fistpll
ljmp
stc
add
sbb
xlat
mov
xor
fiadds
xor
iret
xor
cmp
ret
loopne
movsl
mov
jae
repnz
sub
nop
cmp
nop
shll
call
lods
jg
push
mov
fs
popa
test
movlps
fnstcw
xchg
cmp
jo
cwtl
sbb
inc
inc
ljmp
push
push
jne
xchg
mov
arpl
js
ret
jo
stos
inc
lahf
adc
je
mov
pop
cmpsl
test
test
mov
sti
mov
push
jle
sbb
adc
cmc
and
adc
and
pop
in
jae
mov
mov
imul
and
je
dec
xor
fnstenv
or
pop
adc
fbstp
jno
outsl
sarb
sahf
adc
xchg
push
push
jp
cld
int3
jl
xor
sahf
inc
scas
aaa
jne
xchg
cmpb
jb
sbb
xchg
xor
outsl
negb
mov
mov
mov
and
and
adc
call
push
pop
int
bound
jnp
push
lea
push
cmp
mov
movsl
sub
mov
nop
pop
outsb
push
sbb
jne
sub
pop
or
push
lahf
sti
ret
and
in
fdivs
push
pop
sub
ja
jne
xor
cld
add
jg
js
sub
push
loopne
xor
jo
inc
sbb
in
xchg
cmp
jo
std
cmpsb
mov
jl
cmpsl
fwait
sbb
xor
cld
pop
ret
add
popf
int3
cmp
ror
push
popa
je
loop
rclb
add
mov
cmp
loop
sti
push
add
jle
call
add
out
ljmp
push
popf
push
pop
push
mov
loop
fwait
outsb
pop
sub
sbb
inc
scas
fcoml
mov
inc
mov
push
movsl
adc
push
test
sbb
pop
or
pusha
jmp
jp
jbe
addr16
fsts
inc
int3
jg
repz
xchg
jno
addr16
int
xorb
mov
mov
in
jnp
inc
xchg
ret
out
jge
or
cmp
movsl
pop
into
jl
sub
jno
std
mov
cmp
cmp
scas
cmp
js
insl
pop
adc
mov
sub
roll
pop
into
out
mov
mull
in
movsl
mov
loopne
lds
stos
out
inc
nop
into
mov
shlb
xor
pop
repnz
push
mov
mov
out
mov
add
sbb
imul
fdivrl
stos
pop
cli
movsl
push
aad
and
mov
add
sub
xor
xor
push
mov
dec
lods
in
jp
out
adc
fldl
sub
jmp
push
and
fcomps
subb
cld
das
enter
shl
pusha
push
pop
aas
mov
push
sar
mov
std
repz
and
mov
xor
into
cmc
sbb
popa
and
and
dec
cmc
ss
mov
mov
mov
push
test
lcall
xchg
sbb
test
add
add
stos
dec
jb
push
add
push
adc
ret
arpl
lods
push
mov
repz
add
inc
int
or
or
test
popa
cmpsl
xchg
pusha
daa
sub
insb
add
jmp
leave
cmp
jl
les
sub
icebp
and
inc
jecxz
mov
lahf
xchg
mov
pop
cmp
shrl
andl
loop
out
xchg
sub
cli
loop
aad
test
dec
popa
pop
push
lsl
repnz
dec
cwtl
jmp
pop
jg
mov
sub
sub
frndint
xchg
test
sahf
push
and
adc
daa
sub
mov
stos
das
ret
sbb
lods
cltd
fisubs
xor
out
adc
ljmp
mov
and
cli
nop
inc
sti
lea
push
cmpsb
push
mov
mov
mov
pop
mov
xor
mov
xor
outsl
sahf
insl
sbb
btr
push
popa
and
enter
cmpsb
push
into
repz
cmpsb
pop
cmc
push
cmpsb
mov
orl
push
push
xchg
cwtl
popa
pop
and
into
es
add
xorb
pop
out
lret
inc
jp
jns
pop
xor
iret
jb
adc
dec
lret
and
push
mov
inc
adc
or
pop
or
adc
scas
and
pop
je
ds
fnstsw
inc
dec
imul
sbb
fadds
inc
std
mov
repnz
clc
mov
cmp
bound
xchg
sbb
add
add
scas
mov
lods
into
mov
loopne
adc
std
lcall
repnz
mov
pop
mov
dec
dec
pop
or
push
xchg
leave
mov
mov
shlb
ss
mov
or
push
and
subb
fdivrp
pop
jp
cmpsb
push
rcr
test
imull
dec
sbb
and
and
imul
imul
lock
clc
popa
mov
mov
add
sarb
jae
lea
ds
or
push
popf
push
mov
in
mov
enter
movsl
daa
adc
jae
outsl
shlb
and
in
pop
rcrl
inc
movsl
push
nop
pop
adc
mov
xorb
cmp
mov
insb
imul
pop
lods
iret
les
repnz
push
jp
jecxz
push
shrb
test
cltd
popf
dec
rorl
aaa
outsl
jbe
daa
or
mov
cld
push
xchg
loopne
lret
divb
insb
shl
or
out
pop
dec
jg
push
in
and
fistpll
xlat
ret
icebp
jge
jmp
lahf
sub
roll
scas
or
test
adcl
push
and
adc
pop
mov
addb
sub
sub
add
push
cmp
xchg
lods
mov
lds
mov
push
xor
jl
pop
xchg
sahf
fwait
sbb
and
cmpsl
lret
in
or
xchg
jnp
cmp
mov
lea
testb
cmp
cs
pop
cmp
lcall
push
insb
repz
cld
sbb
es
or
jle
insl
ljmp
push
in
or
cmp
pop
cmp
adc
fdivl
mov
enter
ja
fidivrl
cltd
cmp
lcall
ret
xchg
mov
pusha
sbb
inc
popa
sub
push
xor
shll
dec
xchg
cmpsb
movsl
jno
mov
data16
sarb
sbb
je
movsl
js
fstps
enter
mov
cmp
pop
xchg
mov
in
fwait
or
adc
xorb
iret
and
sbb
out
sbb
insl
fnsave
sar
fmulp
mov
push
rcr
dec
jecxz
push
xchg
mov
fsubrs
inc
mov
push
or
test
addl
cmp
aad
popf
sub
mov
mov
xchg
aas
imul
repz
pop
xchg
push
insl
shrl
je
jge
cmp
lret
aam
cmc
add
inc
shlb
fistpll
mov
xlat
in
push
mov
xchg
cli
inc
ds
icebp
or
or
jecxz
sub
ds
jge
mov
out
and
mov
inc
pop
mov
jno
in
mov
push
mov
push
aas
popf
icebp
push
daa
xchg
xchg
inc
pop
xchg
cmp
mov
mov
loop
cmp
dec
and
mov
icebp
ret
jnp
pop
pop
push
pop
jle
xlat
jno
xchg
shll
js
lcall
insb
scas
test
pop
ds
or
inc
mov
ljmp
sahf
ja
sti
dec
insb
cs
push
popa
push
and
ret
push
into
dec
sub
pop
mov
sub
push
xchg
dec
sbb
pusha
push
or
inc
mov
test
mov
sbb
out
adcl
dec
pop
pop
push
popf
or
add
fisttps
or
lods
popf
jge
mov
add
ret
enter
add
jp
hlt
or
ret
loop
call
insb
fwait
sbb
mov
xchg
dec
out
dec
push
dec
sbb
mov
cs
sub
jno
imul
push
mov
or
lods
pop
xchg
adc
stos
outsl
lret
out
sbb
and
and
idivb
cltd
mov
rcrb
sarb
push
add
cld
jno
sub
and
dec
add
lahf
jp
jae
ret
popa
fdiv
pushf
in
cmpsl
scas
inc
in
daa
inc
mov
rcrb
in
sbb
out
push
fistps
and
jo
fwait
and
jmp
adc
sbb
cltd
mov
lds
daa
jl
fnsave
into
es
sbb
sbb
leave
pop
jmp
sub
xlat
adc
scas
lods
movb
sub
cmc
cmp
cld
inc
lds
mov
shl
fistl
enter
dec
fisubl
xor
cmc
imul
enter
mov
shll
mov
addl
add
in
xlat
das
and
mov
xchg
aaa
adc
sti
loop
ljmp
jmp
stc
pop
xor
xchg
fs
cli
sub
push
lret
iret
push
int
sbb
xchg
xor
mov
jp
pop
inc
es
or
adc
lods
loop
stos
mov
dec
ret
lcall
lea
xor
scas
addr16
push
in
and
push
cmp
mov
insb
push
sub
adc
jns
cli
enter
or
jecxz
or
sti
mov
in
xchg
bound
lcall
cmp
js
or
mov
rolb
cli
add
rcrb
arpl
sbb
sbbb
fidivl
test
das
rcrb
jae
mov
jo
pop
xorb
rolb
addr16
test
xor
pop
sub
mov
adc
add
sahf
gs
sub
push
add
stos
xchg
cmpsw
dec
push
xorl
adc
jg
in
pushf
test
xlat
bound
shl
ret
lahf
jne
repz
int
and
call
pop
dec
cmpsb
xlat
add
ljmp
jno
shrl
arpl
sti
cld
repz
stos
dec
mov
loope
or
dec
test
daa
mov
dec
adc
mov
loopne
pusha
lret
out
dec
repz
int3
push
mov
xor
push
lret
scas
clc
xor
mull
adc
idiv
xor
rcl
lods
xchg
or
jle
sbb
sub
mov
leave
popa
cmp
cwtl
fs
idiv
fs
adc
jecxz
cmpsl
jo
jmp
push
add
mov
adc
add
jnp
fidivl
ret
cmp
add
int
mov
fimuls
sbbl
enter
pop
or
mov
imul
mov
add
push
jno
gs
xor
push
sub
test
dec
and
mov
xor
or
dec
ret
ficoms
movsl
push
xor
sub
shrd
cli
cmp
std
lcall
dec
sub
pop
repnz
push
nop
xor
ret
inc
or
mov
imul
out
jb
aam
jae
lahf
ljmp
in
fwait
push
dec
aaa
mov
jo
nop
clc
mov
mov
outsb
mov
push
adc
and
cli
fstpl
jl
or
cmpl
jae
inc
mov
sbb
mov
daa
sub
arpl
mov
and
and
leave
aad
sti
gs
enter
insb
dec
jp
add
cs
mov
pop
mov
sbb
addr16
jp
add
mov
mov
inc
rorb
leave
or
dec
rcll
xchg
or
and
sbbb
cmp
cli
mov
in
jae
sbb
lods
fidivrl
imul
or
push
in
push
in
scas
repz
jg
hlt
hlt
js
and
xlat
mov
dec
repz
lods
sbb
ljmp
jbe
mov
mov
jae
xor
rorb
ja
ds
sbb
fists
lods
popa
xchg
xchg
pusha
ret
pop
int3
inc
into
lods
lock
sti
lock
xchg
bound
sahf
and
pop
mov
std
xchg
loope
rclb
arpl
shlb
test
inc
out
push
add
ret
es
push
cmp
stos
jecxz
inc
mov
add
pop
data16
shrb
dec
push
sub
popf
pop
out
stc
push
sti
mov
push
push
push
push
jnp
pop
fdivl
inc
xlat
jmp
mov
add
add
sbbb
lahf
call
cmpsb
mov
mov
and
scas
loope
je
push
jmp
mov
cs
inc
pusha
pop
ds
xor
in
clc
push
sbb
aam
call
pop
sahf
add
test
aam
test
jne
push
negl
in
sbb
mov
and
ljmp
cmpsl
ficomps
mov
pop
shll
jo
sahf
insb
stos
lods
inc
imul
mov
push
insl
add
cli
adc
lcall
ljmp
fistpl
je
xor
or
inc
or
lret
mov
cmp
xchg
mov
test
sbb
mov
pop
adc
aad
pop
mov
push
cmp
repnz
jae
mov
or
lock
cmp
daa
mov
jle
jmp
cs
pusha
or
sub
in
pop
out
xor
sbb
dec
xor
in
dec
dec
into
insb
cmp
cmpsb
cmpsb
sbb
js
adc
mov
xchg
and
scas
mov
sti
into
mov
sbb
lods
lcall
and
cwtl
jge
clc
push
push
fimuls
nop
mov
dec
clc
mov
negl
cli
dec
arpl
push
dec
ja
xlat
pop
inc
pop
inc
out
push
arpl
fs
sbb
xor
roll
pop
pop
ret
inc
xchg
sahf
int
dec
push
mov
push
push
sub
bswap
in
out
push
mov
inc
idivb
shlb
sarl
push
xchg
xchg
mov
fisubrl
fiadds
jbe
mov
repz
sub
dec
popf
pop
mov
push
lahf
inc
cmpsl
jecxz
mov
insl
in
ss
lcall
rcll
sub
lock
and
cli
das
mov
adc
pop
mov
mov
fidivs
adc
loope
cmp
push
leave
push
vsqrtss
sbb
aaa
std
into
mov
cmc
adc
mov
adc
ret
fdivrp
das
sbb
fmull
xor
add
loop
fsubr
push
sarl
cmp
and
fs
pop
mov
test
cli
jns
or
mov
fwait
pop
lcall
out
inc
pop
jns
cli
icebp
mov
hlt
jg
adc
xchg
sub
sbb
jp
sbb
push
push
mov
int
sarl
add
ljmp
cld
and
ss
rclb
in
or
xlat
stos
adc
pop
in
push
sbb
je
jns
xor
or
lods
sbb
jb
xor
xor
rorb
lds
nop
push
hlt
pop
cmp
sarb
sub
out
sub
add
xor
push
popa
cmpsl
mov
xlat
arpl
lea
xlat
xor
pop
pop
stos
pop
in
adc
pop
andl
cmpl
add
hlt
shll
xchg
cmp
inc
jo
jb
shll
xor
jmp
dec
xchg
fs
sbb
sti
adc
cld
xor
out
ret
out
xor
jns
xor
dec
pushfw
cmp
dec
jle
fisubrs
in
out
ret
xor
mov
sbbb
dec
mov
outsl
sub
add
xor
aad
mov
cs
inc
mov
lods
mov
xchg
jle
negb
sbb
es
ss
push
out
aas
pusha
lods
mov
movl
ljmp
xor
xchg
lcall
add
gs
std
rcll
push
adc
push
leave
xchg
dec
mov
cmp
pop
push
pop
lods
xchg
or
std
jb
or
push
inc
cmovl
xor
jp
aaa
mov
test
mov
push
call
inc
inc
xchg
outsb
xchg
cli
mov
shrb
mov
rol
lahf
push
das
add
mov
jo,pn
fadd
pcmpgtb
fadds
loope
pop
mov
pop
or
pop
inc
es
popa
mov
jo
mov
sub
test
loop
pop
fidivs
mov
lahf
fidivrs
nop
add
xchg
add
mov
cld
into
sarb
jno
in
pop
imul
or
push
mov
lret
stc
adc
ds
setno
es
push
ss
add
jb
cmpsb
adc
mov
pop
cmpsl
push
push
pop
outsl
adc
shrb
ds
pusha
xor
xchg
pushf
sahf
xchg
cwtl
jl
ds
fmull
xchg
rcr
push
lock
jae
push
mov
leave
sbb
add
inc
call
push
adc
dec
adcb
scas
fs
out
test
pushf
das
mov
cmpsb
inc
shll
xchg
sub
or
out
jl
cmp
pop
mov
fildl
add
lock
imul
jbe
cmp
push
lods
adc
pushf
arpl
xchg
jl
andl
inc
imul
out
mov
pushf
push
fisttpl
cmpsl
mov
ret
popf
mov
scas
pop
or
add
lods
pop
cmp
or
pop
or
fstpt
push
and
arpl
sahf
lds
or
leave
pushf
xchg
gs
push
daa
movsl
mov
and
mov
lock
dec
or
fucomp
jmp
mov
dec
inc
fcmovbe
sahf
ss
xorl
cmp
jl
pop
scas
ret
aad
outsb
xor
push
dec
cmpsb
jecxz
jne
push
push
sti
push
leave
fnstsw
add
ret
outsl
les
gs
xchg
subl
imul
sbb
leave
add
cmp
leave
aad
imul
or
gs
dec
ret
add
clc
xchg
mov
add
cltd
lea
cmc
pop
mov
mov
adc
inc
inc
test
cltd
adcl
aam
lret
dec
sbb
or
push
sbb
movsl
aam
xor
fwait
ljmp
xlat
pusha
mov
pop
daa
mov
jb
jmp
and
nop
adc
jge
inc
movsb
xor
cmp
lds
aam
jge
outsl
sbb
bound
jecxz
das
lods
into
jmp
add
jbe
jo
sub
and
aam
inc
cmpsb
xor
add
shrl
jl
stos
jbe
or
data16
xchg
and
xor
movsl
sbb
sbb
iret
xchg
dec
cmc
dec
into
fstpl
fcmove
test
idivl
dec
cmp
scas
lahf
shl
movsb
adc
cmp
add
and
jg
loopne
push
mov
cmp
lods
icebp
pop
and
aaa
and
into
data16
in
cmp
dec
ret
or
jns
xchg
outsl
adc
fbstp
fwait
cmp
hlt
pop
ror
js
sub
xchg
insl
sbb
mov
sub
daa
mov
push
aad
dec
ds
push
push
int
sbb
push
xchg
jbe
mov
add
push
jl
inc
and
inc
xor
scas
dec
in
sbb
cld
lds
je
jl
hlt
sub
push
rclb
push
jl
mov
cmp
jno
call
cltd
pop
jae
inc
lods
xor
cltd
sahf
arpl
sbb
dec
and
xchg
rorb
xchg
sub
mov
sub
cmpsb
imul
dec
fisubrs
pop
jns
shll
lret
adc
pop
mov
jmp
push
pop
aas
pop
jecxz
mov
js
loop,pt
jne
mov
jmp
inc
cmpsl
pop
addl
inc
lea
add
sub
in
fwait
shll
jl
dec
pop
sbb
stc
cmpsb
add
scas
dec
inc
aaa
mov
inc
out
adc
ja
mov
jnp
insb
rclb
xchg
popf
or
mov
push
push
lods
sahf
mov
sub
jbe
add
aaa
jge
rol
dec
mov
cmp
in
xor
mov
or
enter
xor
scas
cmp
jns
fimuls
imul
jle
aam
lret
fcomip
cmc
out
iret
pop
xor
pop
lea
fs
mov
push
xor
daa
add
mov
push
jg
loopne
incb
mov
cltd
icebp
int3
lret
adc
sbb
cmp
inc
push
fwait
cmpsl
jp
lock
jp
jno
add
xchg
fwait
sub
sub
imul
popa
out
mov
icebp
out
imul
inc
jo
std
pop
cmp
gs
int3
xor
dec
test
out
add
testl
outsb
push
mov
xor
mov
loopne
cmpsb
into
movsl
add
aad
mov
shrb
icebp
jle
adc
dec
xchg
mov
sar
mov
ret
lods
mov
xchg
loop
cmp
pop
inc
dec
mov
and
pop
movsb
sbb
sti
bsf
iret
mov
mov
shrl
cmp
jecxz
shll
jbe
jb
orl
mov
mov
mov
movsb
sub
and
xor
pop
add
bound
insl
sub
pop
popf
sub
dec
xor
jp
mov
pop
hlt
ret
xchg
cmpsb
mov
jns
push
mov
and
dec
lcall
push
push
incl
out
outsl
push
ret
flds
in
mov
mulb
test
sbb
sub
sub
inc
sub
hlt
or
mov
cli
sub
push
out
hlt
xor
sbb
mov
push
cld
fisubrl
mov
xor
ret
jo
mov
sbb
fnstsw
inc
push
in
test
mov
push
adc
sub
std
mov
seto
add
subl
aaa
ds
int3
jo
movsl
sub
fwait
xchg
fisttpll
ret
jae
adc
lods
xor
pop
bnd
sub
pop
lret
out
jns
jae
push
repnz
add
dec
jmp
test
sbb
ljmp
movsb
and
insl
lahf
push
lods
jle
leave
repnz
es
mov
lret
stc
sbb
ret
pushf
ja
inc
sub
sub
xor
cwtl
cmp
mov
mov
rorb
dec
lock
push
dec
dec
adc
imul
mov
loopne
mov
adc
in
sub
xchg
mov
pop
out
shrl
mov
aad
std
leave
jb
outsl
out
in
sbb
pop
and
xchg
adc
mov
sub
dec
cltd
mov
mov
addr16
sahf
xor
push
movsl
xchg
push
mov
bound
lret
mov
xchg
out
es
loope
popf
mov
in
sub
jmp
data16
dec
add
lea
xor
test
or
mov
xor
inc
push
mov
andb
popf
xchg
daa
xor
sysret
mov
add
icebp
loopne
hlt
jecxz
dec
in
lea
or
add
lcall
jle
popa
in
movsl
lret
es
inc
pop
jg
inc
lcall
imull
rcrl
insl
inc
dec
adc
jge
push
mov
ret
popa
mov
add
fcom
cld
jp
dec
sbb
mov
push
jecxz
sbb
mov
or
and
push
out
or
lret
xlat
inc
sub
xor
sbbl
inc
mov
xlat
add
repnz
inc
jbe
and
push
stos
cmp
xchg
subl
pop
repz
fdiv
loope
inc
xor
or
xor
lods
out
fmull
out
xchg
mov
dec
incb
rcl
push
es
jo
jnp
cmp
pushf
test
lret
iret
sbb
sbb
clc
ljmp
mov
xor
mov
push
add
pushf
dec
add
cld
cmp
and
push
sahf
lods
inc
or
sbb
shlb
dec
aaa
xchg
xchg
aam
lea
sub
and
js
sbb
fildl
pop
aaa
mov
push
or
aad
bound
mov
jo
jne
add
xor
dec
fidivrs
ret
mov
add
imul
jp
mov
cmp
adc
xchg
and
mov
mov
mov
int3
popa
sub
sub
sub
sbb
out
lret
out
adc
or
adc
cmp
mov
insl
in
imulb
in
push
push
inc
cmp
add
fstpt
adcl
andb
inc
dec
mov
mulb
movsl
jb
gs
sti
inc
mov
pop
mov
push
cld
ss
fs
imul
xor
out
imul
loop
inc
mov
xor
aam
push
adc
pop
pop
icebp
sbb
adc
cmp
cmp
mov
push
data16
imul
add
and
push
into
mov
sbb
mov
pop
imul
cmpb
leave
in
jb
pop
loop
and
fistpll
pop
in
add
in
icebp
jl
dec
cld
pushf
mov
out
cs
in
sub
mov
nop
inc
fisubs
add
orb
stc
scas
clc
push
int
or
mov
jmp
popa
inc
pop
inc
stos
mov
sahf
sub
addb
into
shlb
popf
fwait
jge
cmpsl
into
gs
dec
fnstenv
sbb
fbstp
inc
js
push
call
lret
or
stos
sbb
inc
jmp
inc
icebp
in
sahf
xor
dec
mov
xchg
stos
adc
adc
stos
and
jle
subl
pop
push
cli
and
jl
push
das
insb
mov
sbb
push
aas
jp
mov
cmpsb
stc
cli
inc
lods
adc
aas
cltd
push
sbb
rep
int3
sbb
inc
lea
sub
mov
roll
cld
jne
add
loope
add
incb
cs
ret
fs
decl
mov
jmp
enter
push
int3
sarb
or
fs
out
mov
fwait
les
dec
aas
stos
jecxz
cmc
data16
clc
push
xchg
lds
mov
ds
lock
out
mov
ss
mov
clc
andl
sub
ljmp
daa
pop
ss
mov
add
xchg
xor
out
jne
pop
js
and
sbb
ljmp
and
xor
arpl
rcrl
inc
or
sub
fistpll
or
mov
xchg
imul
jl
mov
movsl
or
lock
insb
push
loop
nop
add
and
xlat
nop
mulps
lea
cltd
sbb
push
mov
jno
dec
cmp
pop
push
sub
cmp
and
sub
aam
jb
xchg
sbb
in
fistps
mov
jp
pop
inc
lock
dec
jb
jecxz
and
pop
dec
ficompl
push
daa
inc
mov
push
adc
js
xchg
mov
insl
xor
xchg
dec
mov
in
insl
loopne
push
pop
lret
mov
sbb
pop
je
jmp
pop
dec
or
lret
lock
sub
pop
andl
cmp
xchg
xchg
jle
mov
pop
lret
add
lcall
pushf
imul
fwait
dec
sub
popf
decl
xor
cmp
pop
add
outsb
adc
out
xchg
and
sti
insb
idivb
jno
xlat
or
mov
cs
ja
jge
push
fdivp
out
add
dec
popa
call
jle
test
pop
sub
mov
cld
fs
lret
sub
xor
icebp
into
andb
mov
testb
mov
roll
clc
sbb
add
push
out
mov
shlb
push
scas
movsb
shlb
push
scas
mov
inc
sbb
movsl
ljmp
xor
and
xor
mov
add
jp
mov
roll
cmc
loop
dec
lcall
xchg
mov
cmp
fptan
cld
gs
punpckhbw
scas
lret
decb
xor
sub
sbb
rorl
cmc
pop
inc
xchg
sbb
rorl
loope
sbb
loope
xchg
jns
sbb
movsl
pop
fldt
and
pop
js
rorl
push
dec
pop
int3
cmp
scas
push
popf
sahf
jns
inc
int
xchg
and
dec
cmp
jl
adc
cmpsl
jge
mov
arpl
mov
cmpsb
adcb
ja
jnp
test
cmp
in
inc
dec
or
into
fistpll
iret
les
mov
cmp
jp
mov
xchg
mov
adc
in
or
adc
dec
xor
pop
jmp
sub
mov
cmp
rcll
outsl
cltd
insb
dec
jno
add
inc
out
ss
imul
xor
pop
jl
sub
mov
cmp
fs
pop
or
hlt
es
inc
sub
aam
xchg
or
pop
pop
cmp
rcrb
mov
pop
push
add
jp
cwtl
xor
mov
push
andb
das
outsb
sbb
lds
mov
popa
mov
cmp
ljmp
sbb
test
pop
int
into
mov
sub
or
popa
pushf
movsl
cmpsb
mov
and
scas
mov
rorb
bnd
dec
mov
aas
testb
cmp
jle
inc
andl
fs
xor
pushf
sub
test
cs
pop
pop
jge
cs
lds
push
mul
push
push
push
outsb
in
int3
pusha
ljmp
mov
stos
or
xchg
mov
xor
mov
sar
std
push
and
push
outsl
mov
rcrl
into
iret
sahf
jo
js
pusha
mov
insb
mov
inc
fstpt
sbb
mov
mov
and
rorl
cmp
aas
sbb
cmp
or
loop
imul
mov
cmc
xchg
adc
sub
push
or
mov
dec
mov
push
and
sbb
push
adc
daa
sub
jp
xor
fnstenv
add
outsl
movsb
sbb
pop
mov
mov
dec
inc
loope
call
push
imul
jmp
and
lret
sbb
add
in
and
jmp
insl
negb
and
orl
jge
fwait
lret
cs
fnstcw
jne
fisubrl
iret
test
imul
in
mov
push
enter
push
movsl
mov
push
xor
nop
idivb
lock
sbb
orb
je
sti
dec
cmc
adcb
push
adc
js
dec
fisttps
xor
mov
pusha
or
pop
filds
sub
cmpsl
lods
outsl
fcmove
pop
sub
xor
lret
test
fsubr
and
sbb
cmp
push
clc
sub
in
dec
imul
inc
loopne
mov
mov
gs
sbb
popf
xchg
dec
dec
xchg
inc
test
insb
mov
subl
sbb
jge
and
dec
adc
adc
xchg
pop
cmp
cmp
shrl
mov
mov
int
inc
out
rcl
sub
fisttpl
aas
cli
adc
mov
in
iret
in
mov
fcomp
call
bound
lods
test
lock
mov
dec
mov
sahf
inc
adc
or
push
ret
ja
mov
push
dec
divl
push
ficomps
int
or
jmp
inc
mov
inc
dec
mov
daa
add
cld
pop
push
mov
cmp
les
shrb
outsb
hlt
lods
scas
pop
push
scas
ret
dec
mov
mov
dec
push
sbb
test
jno
fsubp
test
adc
jo
rcll
sub
add
or
loope
or
push
mov
out
es
push
mov
stos
push
sub
ja
add
ret
add
jns
fistps
mov
sub
adcl
mov
pop
sarb
mov
test
lods
cmp
insb
cmpsl
ret
mov
ud2
ja
pop
dec
push
insl
mov
mov
or
mov
cmp
dec
dec
sub
test
jp
jl
mov
popa
or
cs
mov
jns
lods
mov
jge
push
popf
dec
push
or
mov
cmp
inc
adc
lea
cmp
scas
mov
inc
push
and
add
orb
test
sub
xor
jbe
in
jo
or
pushf
sahf
out
fdivrs
and
ficompl
fs
incb
jmp
pop
pop
fbstp
addr16
sub
mov
imul
jae
fstl
add
inc
push
pop
add
testb
jge
sbb
mov
hlt
push
adc
cmc
gs
jge
push
inc
ror
fwait
leave
out
notb
popf
sbb
daa
cmc
adc
cmpsl
push
adc
ret
xor
jp
jno
test
test
clc
cmp
js
sbb
insl
das
xchg
es
mov
mov
mov
or
push
test
xchg
jne
idiv
shrb
test
dec
cwtl
fstps
lcall
clc
icebp
loopne
cmpsl
dec
rcrl
mov
cli
cmp
loope
xor
popa
xchg
pop
je
mov
daa
mov
mov
adc
aas
adc
mov
bound
push
out
jmp
shll
mov
roll
fidivrs
scas
scas
vpunpckldq
cld
movsl
xchg
lea
mov
sub
dec
and
adc
pop
movsb
adc
pop
ficoms
scas
pusha
lret
mov
mov
ss
xchg
in
movsl
popa
sbb
stos
xchg
sbbb
and
inc
movsl
loop
in
iret
adc
jae
or
shl
popf
popa
jge
aas
mov
orl
lods
push
or
scas
cli
fmull
jns
lea
xchg
jecxz
gs
xor
sti
dec
out
fisubrs
mov
lret
xchg
scas
je
mov
mov
push
scas
pop
push
aas
adcb
cs
mov
cwtl
pop
lret
cltd
adc
pop
or
cwtl
xor
mov
lock
stos
mov
cltd
scas
out
adc
xor
sbb
xchg
mov
add
jno
sub
arpl
lret
and
stc
shll
pop
fwait
es
jne
pop
mov
cltd
in
sub
sub
and
mov
repz
or
insb
jno
scas
pop
add
ljmp
ja
test
or
mov
outsb
call
ja
and
and
inc
sub
test
hlt
repnz
roll
aas
clc
sbb
cmc
mov
and
inc
pop
subl
and
cwtl
bsr
incl
sbb
jbe
sti
inc
cld
iret
push
ret
pop
int3
xchg
mov
pop
stos
les
aam
or
data16
sbb
testl
lds
xchg
push
mov
imul
pop
lock
aaa
mov
sahf
call
lcall
fiaddl
and
mov
xor
cmpsl
lods
data16
push
ss
add
movsl
mov
push
and
mov
dec
xchg
jg
rolb
iret
dec
cmp
addr16
jbe
shlb
scas
data16
mov
outsb
rcll
sub
in
subl
inc
adc
xor
imul
rcrb
jmp
or
cwtl
clc
xchg
andl
daa
out
mov
mov
xchg
scas
int
xor
jmp
push
xor
bound
sti
popa
adc
scas
out
jns
xchg
loope
add
data16
mov
push
in
sub
addr16
cmp
push
aas
cmp
xor
xchg
dec
sub
dec
bound
data16
insl
into
mov
add
xchg
cmp
aas
outsb
inc
mov
andb
pop
fcmovnb
roll
jmp
inc
fimull
shl
addr16
mov
movsl
lret
aaa
fwait
jbe
jmp
das
gs
mov
xchg
sbb
or
dec
test
fwait
orl
ljmp
fnsave
test
adc
jmp
dec
dec
cmc
xchg
out
mov
jnp
stos
jge
mov
adc
icebp
cmp
arpl
loope
add
idivl
add
dec
roll
aad
bound
les
sbb
mul
test
outsb
test
xchg
add
cld
adcb
adc
mov
cmp
sbb
lea
dec
mov
insl
or
subb
std
mov
enter
and
cmc
xor
xor
sbb
add
mov
mov
jp
scas
pop
arpl
loope
sub
inc
mov
int3
mov
pushl
adc
mov
sbb
dec
jne
stc
push
cmp
je
dec
add
xchg
jle
imul
addr16
jne
cmp
movl
add
jmp
xchg
sbb
shl
pop
and
mov
pusha
stc
nop
bswap
jns
mov
mov
arpl
jmp
adc
fidivrs
les
push
dec
sub
push
into
mov
cmp
call
pop
movsl
add
lret
jl
aaa
add
sbb
outsl
cld
shll
scas
push
cmp
or
in
inc
in
dec
test
mov
repnz
test
scas
xor
fsts
push
ds
in
scas
push
cmpsl
pushf
jne
cmp
or
cmp
stc
sbb
inc
mov
in
jbe
loop
sbb
cmp
inc
int3
in
lock
inc
sbb
push
sub
mov
cmp
stos
imul
fldenv
gs
push
mov
loope
fidivrl
push
vandps
fdivrs
outsl
decl
mov
cmpsb
adcl
push
popa
cli
jbe
lret
jp
je
mov
js
dec
pop
xor
mov
dec
iretw
test
sbb
shrb
aam
jno
test
and
xor
pop
xor
pushf
and
add
jmp
clc
mov
mov
rorl
xchg
mov
sub
lock
mov
movsl
fs
sub
loopne
idiv
fwait
lea
fld
int
push
adc
dec
stos
ret
sbb
inc
sbb
shl
lods
ret
sub
mov
arpl
daa
and
lds
sbb
cmp
jae
enter
jne
insb
out
inc
sub
mov
inc
sbb
nop
sbbl
imul
xor
xchg
xchg
movsb
call
add
lahf
add
or
adc
dec
in
dec
jle
ja
jo
push
cmp
push
pop
inc
xchg
push
sbb
sbb
out
ljmp
jo
mov
add
in
insb
mov
stos
push
dec
cmp
pmaxub
dec
jno
test
subl
mov
mov
loope
jne
add
stos
jns
popa
popa
cmpsl
je
imul
inc
fcmove
int3
mov
gs
shll
cmp
dec
pusha
test
das
cmp
pop
push
mov
cmp
pop
add
pusha
movsl
lods
jmp
call
jae
cli
adc
repz
and
xor
dec
sub
and
inc
dec
pop
push
and
dec
adc
sbb
lods
push
dec
mov
mov
in
sub
pop
push
sbb
fistpl
pop
mov
lret
hlt
xchg
mov
sub
fisubl
or
jns
inc
jecxz
xchg
mov
add
jmp
mov
adc
jns
push
outsl
popa
hlt
pusha
jmp
stos
mov
int
mov
pusha
lods
push
mov
fstps
mov
das
loope
fldcw
adc
in
test
cmpsb
shr
sbb
jae
cli
push
pop
insl
out
and
xor
jecxz
sub
xchg
cmp
or
jae
inc
jl
mov
out
xchg
jp
jecxz
sbb
dec
jb
sbb
push
mov
or
andl
lahf
xor
bnd
popf
push
and
pop
daa
inc
mov
xor
pop
push
cmp
jecxz
and
sbb
cmp
push
daa
sbb
filds
lock
xor
inc
ret
iret
daa
scas
outsl
cmp
ds
xchg
hlt
nop
nop
inc
mov
adc
mov
mov
sub
push
pop
cmpsl
sahf
xor
add
outsb
sbb
mov
xor
mov
popa
insb
loop
xor
aam
mov
cmp
dec
pop
sbb
decb
mov
xor
lods
bound
lret
sub
rsqrtps
adc
clc
jp
popf
lcall
xchg
xor
dec
mov
andb
xchg
mov
lods
cmpsl
jle
stos
minps
push
sbb
stos
pop
movsl
icebp
mov
jecxz
pop
sarl
xchg
mov
popa
jae
mov
mov
jge
aas
push
fimull
ficomps
xor
stos
pushf
int3
and
cmp
xchg
mov
sbb
fwait
mov
mov
mov
addl
mull
icebp
cltd
and
shlb
fimull
loope
das
ficompl
lret
fcmovnbe
pusha
mov
outsl
or
or
scas
stos
push
xchg
xchg
popa
add
and
das
jae
add
call
lea
or
rep
or
sbb
fwait
sbb
mov
dec
push
sub
cld
repnz
mov
dec
jno
adc
popf
and
mov
jecxz
hlt
pop
cmc
jg
test
xor
scas
test
fbld
push
and
call
and
divb
fwait
mov
dec
inc
adc
xor
movsl
cmpsl
sbb
inc
nop
sub
loopne
pop
out
push
push
mov
out
repz
fdivs
xchg
jge
inc
rolb
inc
or
lods
jg
les
xor
push
test
sub
ret
sahf
lahf
xchg
push
cmp
adc
les
push
adcb
clc
push
xor
jp
cwtl
sbb
clc
dec
inc
les
lahf
push
mov
fstpl
mov
cmp
loop,pn
pop
pop
outsb
add
jp
js
gs
lock
cmp
pop
sbb
insl
ljmp
sbbl
insl
xor
testb
cltd
xchg
je
mov
mov
jb
pop
sahf
inc
insl
adc
arpl
inc
inc
mov
mov
call
outsb
mov
or
fsts
out
pop
and
bound
cli
jo
imul
sahf
push
adc
sbb
jnp
aaa
pop
adcb
pop
push
mov
shrl
mov
mov
into
mov
into
adc
pop
cmp
mov
bound
mov
es
or
outsl
push
pop
dec
and
or
sub
mov
sbb
out
jge
movsb
fwait
pop
insb
fstpl
push
cmp
imul
subl
xor
fisubrs
into
dec
loop
mov
addr16
push
fidivl
ljmp
addr16
mov
and
lahf
cmp
orb
push
adc
mov
add
push
and
dec
push
into
sub
out
test
imul
mov
or
dec
pop
test
add
gs
xor
xchg
clc
sbbb
xchg
mov
in
xor
std
inc
push
std
fmul
dec
test
sub
mov
arpl
fistl
repz
jno
xchg
imul
cmp
sub
mov
fdivrs
jge
fisubl
xchg
xchg
and
mov
cmp
dec
push
add
lods
sub
addr16
hlt
mov
mov
fimull
xlat
fidivrl
das
and
test
dec
mov
pop
scas
mov
push
outsl
xchg
xor
imul
and
sub
dec
xor
orps
mov
pusha
imul
inc
leave
mov
inc
push
jb
cwtl
cltd
jbe
mov
loope
mov
icebp
movsb
and
ret
ret
mov
lret
inc
orb
popf
out
jno
in
repnz
mov
cmp
jecxz
cmpsl
cmp
fdivrp
push
mov
pushf
aas
fistpl
es
mov
sub
ds
fmull
adc
push
das
in
mov
in
sar
ds
loop
insb
inc
xor
or
jae
popf
xor
push
cmpsl
inc
fidivl
pop
mov
cwtl
sub
jae
out
cltd
sub
iret
lds
dec
lods
sbb
push
fidivs
mov
test
test
fcmovnu
icebp
xor
fxch
xor
fwait
sub
sarb
in
and
jp
sti
cmpsb
mov
inc
out
mov
cmpsb
sarb
jne
scas
shrl
sbbl
fisttpl
aad
and
cmpsb
jno
push
mov
mov
out
push
jo
aas
jnp
negb
xchg
in
in
shll
mov
xchg
orb
pop
loop
xchg
out
fcomi
bound
dec
pop
adc
call
mov
xchg
jae
push
std
fmull
lock
and
push
mov
fidivl
sub
daa
lods
mov
in
mov
daa
jge
pop
mov
mov
leave
popa
ja
outsb
fnstenv
nop
mov
adc
mov
cld
add
out
mov
shrb
es
adc
insl
jl
adc
xchg
cwtl
pushf
inc
mov
jbe
adc
addr16
stos
push
add
xchg
bound
sbb
cmp
mov
movsl
pop
mov
xor
mov
xchg
call
sub
push
cmpsb
hlt
sbb
mov
mov
lcall
test
roll
push
push
dec
shrl
and
and
aam
arpl
mov
jno
out
sub
or
inc
test
fistl
into
jne
mov
inc
mov
push
pop
scas
sti
cmp
xchg
pop
addr16
xchg
cmc
mov
sbb
jns
out
shlb
sbb
lods
jle
mov
hlt
cmp
int3
movsl
rcrb
cmpsb
dec
es
mov
aad
xor
in
jmp
sub
mov
inc
ds
cltd
je
imull
aam
push
mov
cmp
subb
lds
dec
call
dec
xchg
jb
fistps
shrb
rcll
mov
in
fidivs
mov
cmp
xor
addr16
pop
inc
push
sub
xor
test
ss
out
js
push
sarl
leave
sbb
inc
pop
jp
mov
cmpsb
mov
push
push
and
or
mov
cmc
or
and
mov
iret
sub
or
loop
add
fmuls
aad
js
js
jmp
sbb
sbb
outsl
push
aam
stos
movsl
cmpb
movsl
mov
push
ss
mov
repnz
jns
xchg
cmp
rorl
imul
dec
cmp
sbb
add
jb
icebp
jl
push
es
push
jnp
lock
and
aam
or
cld
jmp
mov
int
or
les
xor
dec
jmp
dec
sub
sti
jle
or
sti
xor
push
insl
pop
dec
push
out
sub
in
pop
mov
imull
mov
add
adc
mov
jmp
insb
lret
mov
sub
xchg
fcoml
inc
pop
cmpsb
xchg
inc
loopne
inc
repnz
jmp
loope
mov
scas
mov
stos
ljmp
daa
jnp
stc
sbb
lahf
sub
into
addr16
outsl
or
mov
jge
aas
insl
dec
divb
dec
dec
push
mov
add
movsl
pop
cmp
scas
inc
add
cltd
jp
test
xor
fiadds
mov
pusha
add
gs
test
jle
sbb
xchg
ret
and
or
adcb
sub
jl
jne
repz
push
pop
push
testl
inc
or
jbe
add
and
add
inc
pusha
or
adc
xlat
add
pop
fwait
adc
rcl
jo
shlb
sbb
mov
imul
fldcw
cmp
jb
in
in
xchg
and
mov
in
dec
stos
jbe
addr16
mov
fimuls
cmpsb
pop
push
aam
dec
xor
popf
xor
lahf
push
jp
das
dec
add
inc
shl
enter
loop
mov
xchg
out
add
mov
jmp
sub
push
jl
imul
jecxz
xor
sar
jg
add
orb
adcb
popa
xchg
and
push
clc
mov
hlt
mov
and
push
out
adc
pushf
js
femms
mov
mulb
pop
repz
sub
inc
add
lock
scas
mov
in
adc
mov
sbb
sbb
aam
mov
popf
push
je
sub
sbb
and
xchg
sti
sbb
sbb
pushw
jp
dec
add
xor
push
xor
or
cmp
jnp
push
cmp
adc
mov
pushf
add
cwtl
cwtl
push
jae
and
sbb
ficomps
ror
sub
jl
sub
adc
push
and
push
aaa
mov
in
dec
jmp
loopnew
leave
std
xchg
movaps
cs
repnz
loop
sbb
mov
xchg
iret
cltd
inc
add
pop
sub
les
ret
sti
in
test
jmp
xchg
sub
adc
jno
jno
test
inc
mov
mov
pop
imul
add
enter
push
xor
adc
pop
outsb
push
mov
mov
cmp
in
popa
xchg
and
lds
idiv
ret
vphaddubd
xor
xlat
push
outsl
cmp
add
adc
add
dec
mov
mov
out
or
mov
mov
cld
mov
cwtl
js
pop
push
bound
cmpsl
inc
ret
sarl
sti
and
insb
dec
arpl
add
sub
xchg
filds
cld
push
fsubr
mov
xchg
mov
sbbb
or
push
mov
mov
iret
xchg
mov
mov
sbb
ret
mov
and
push
dec
sub
scas
mov
or
lea
fwait
add
out
pop
mov
jb
sbb
rcrl
leave
ljmp
imul
out
push
mov
xchg
fstp
shlb
sbb
adc
rorb
xor
xor
xchg
daa
sub
cs
jae
fldt
and
loop
ds
in
inc
sub
fcmove
mov
mov
and
inc
sbb
imul
decl
inc
insl
sub
loop
adc
push
cmp
paddw
aas
jbe
push
lret
sub
xchg
mov
push
sbb
mov
ljmp
cwtl
mov
call
daa
adc
jmp
mov
fildl
xor
jle
lret
jae
pop
movsl
stos
arpl
mov
pop
icebp
mov
dec
cmp
cltd
jno
scas
mov
mov
das
ljmp
mov
addl
mulb
pop
jb
aaa
outsb
data16
std
add
into
pop
mov
ret
or
loope
add
mov
lret
xchg
mov
xchg
testl
push
jmp
adc
ds
daa
es
mov
loope
jo
add
and
mov
pop
adc
xchg
ret
bound
pop
out
push
mov
ljmp
aaa
fdivr
inc
pushl
and
sub
jbe
push
int
repz
sahf
mov
inc
jmp
std
fisttpl
out
push
fimuls
dec
jecxz
xchg
popf
cmp
int3
pop
mov
shlb
xor
inc
popf
xor
inc
dec
adc
aas
and
dec
jno
lods
and
mov
andl
outsl
xchg
mov
lret
sbb
sbb
jb
mov
inc
adc
jnp
jle
sbb
jge
test
fcoms
negb
jbe
mov
and
test
ss
ret
pop
in
dec
pop
xchg
incb
fadd
inc
clc
xchg
xor
or
sbb
cltd
std
movsb
xor
sbb
push
imul
aaa
ds
mov
out
xor
add
xchg
fstpt
mov
xchg
sub
jb
adc
flds
mov
in
xorb
pop
adc
and
cmpsb
das
ficompl
sets
test
loopne
add
dec
pop
sub
adc
xor
ljmp
push
pop
dec
cmp
cmp
push
pop
fldl
sub
pop
mov
movsb
scas
orb
mov
ljmp
mov
sub
mov
inc
fcmovb
cmp
imul
jnp
ret
xor
add
js
pushf
xor
rol
imulb
jno
stos
mov
push
divb
call
and
inc
rolb
mov
pop
dec
sbb
jae
pop
jne
pop
leave
aaa
lret
fdiv
xor
out
outsb
jb
mov
lea
stc
mov
jns
xchg
mov
inc
pop
ret
iret
inc
jl
cmpsl
mov
xchg
ljmp
jmp
loope
rcl
xor
sbb
push
cmp
dec
aas
movsb
fldt
inc
stos
jmp
cmp
dec
lahf
jecxz
mov
loopne
cs
mov
in
xor
cmp
adc
movsb
add
rcr
dec
mov
call
shr
imul
cmp
test
sub
and
pop
sti
bound
xchg
add
icebp
sub
iret
and
aad
mov
pop
sbb
mov
mov
and
mov
pop
cmp
xor
outsl
add
xchg
and
fisttpl
inc
pop
sti
mov
mov
sub
cmp
pop
add
lock
popf
add
outsl
add
ss
cmp
out
bound
or
jge
push
ds
dec
fs
scas
mov
dec
sbb
sub
push
ret
jge
xchg
adc
cmp
in
fstps
push
mov
add
push
xor
xlat
pop
dec
ret
mov
sbb
mov
xchg
sub
sbbl
pop
mov
adc
loop
inc
sbb
fs
push
and
outsl
inc
mov
push
xorl
mov
dec
negl
in
add
pop
shrb
int3
dec
inc
add
fistpl
cmp
add
adc
push
das
repz
sub
aas
pop
je
jl
mov
pop
dec
pop
mov
lock
iret
sbb
pushf
mov
xchg
gs
and
in
cmp
movsb
lods
pushf
nop
sbb
xor
add
cmp
jns
jno
pop
and
mov
pushf
popa
mov
inc
mov
adc
xchg
adc
add
cli
dec
in
push
int3
jo
jmp
stos
insb
lret
lea
xor
cmp
mov
clc
fldcw
fmulp
xchg
sbbb
nop
adc
lock
add
mov
addr16
sub
adc
fs
xchg
jbe
es
mov
xchg
outsb
lds
scas
out
add
and
orb
out
movsl
jae
or
mov
mov
pop
push
pop
into
mov
lds
push
mov
and
dec
xlat
push
mov
mov
mov
cmc
xchg
scas
fs
jmp
arpl
or
or
push
fcomip
xchg
add
xor
bound
out
jnp
xor
adc
mov
rorl
cmp
ja
cmpb
dec
adc
repz
scas
jno
lret
stos
add
repz
xchg
dec
inc
mov
dec
dec
pushf
dec
fidivs
dec
call
scas
mov
into
insl
push
jnp
mov
out
stos
jne
movsb
xchg
xorb
dec
jmp
scas
mulb
pop
adc
pop
push
push
test
fidivl
nop
lcall
mov
ss
popf
xchg
out
add
aaa
jne
sbb
jecxz
fldt
daa
mov
adc
ret
xor
pop
sahf
test
pop
sahf
xorb
cmp
fs
pop
arpl
icebp
ss
idivb
cmp
or
outsl
sarb
push
fiaddl
bound
in
repz
inc
or
leave
in
jnp
fstpt
idivb
dec
js
jno
cmp
jp
ds
mov
out
daa
jns
movsb
jne
les
arpl
dec
cmp
mov
xor
aam
mov
sub
adc
iret
shrl
jb
cwtl
and
in
xchg
fstps
mov
or
das
sub
mov
pop
test
mov
jle
jb
sub
ret
adcb
push
ja
xor
jbe
cmp
jp
cmp
mov
xchg
xchg
xchg
inc
dec
bound
xchg
or
or
mov
roll
pop
ss
pusha
pop
andl
and
cmp
xchg
cmp
arpl
pop
addr16
dec
sahf
sbb
icebp
mov
lcall
inc
fnstenv
addl
xor
and
arpl
dec
cltd
sbb
sbb
push
sti
and
out
std
inc
xchg
into
xchg
fstp
mov
insl
pushf
adc
ffreep
test
pop
push
jp
pop
pop
fsts
pop
push
xchg
shll
dec
dec
fsts
or
mov
pusha
or
rcll
lods
cs
mov
dec
ret
int3
sub
popa
lahf
pusha
xor
test
xchg
jbe
jbe
mov
pop
add
ret
sub
jg
movsb
and
push
jns
mov
cmp
movsb
mov
andl
test
das
mov
stos
shr
ss
inc
out
mov
push
xchg
idivl
ud0
mov
ss
xchg
xor
imul
dec
xchg
data16
call
jne
sbb
dec
jp
push
sti
pop
jecxz
or
fbstp
aad
sti
mov
jle
and
jle
jae
dec
cmp
stos
jnp
bound
shr
inc
mov
adc
inc
fs
mov
lea
inc
and
imul
into
and
cmpsb
xor
lea
in
iret
cmp
pushf
pop
dec
and
inc
sti
std
leave
or
fnsave
fdivl
push
and
pop
scas
adcl
mov
cmp
iret
mov
push
mov
loop
jle
sbb
dec
stc
dec
out
into
mov
fiaddl
mov
pop
push
dec
mov
daa
fldcw
enter
mov
aaa
psubsw
jl
jmp
xor
sbb
sbbl
loop
cld
iret
aam
mov
dec
arpl
mov
iret
cmpsl
outsb
lret
xor
lea
call
jno
data16
xchg
sahf
mov
add
jns
data16
mov
inc
fucomip
jecxz
mov
addr16
js
out
insl
fldenv
cmp
lret
add
lret
outsb
popa
push
ret
jnp
sub
cmp
add
lea
or
mov
jns
aad
xor
dec
out
sbb
cmp
and
push
popa
fmul
and
lock
ss
pop
pop
jnp
sbb
scas
sub
mov
sub
add
fsubrs
aaa
pop
repz
push
push
xor
outsb
dec
test
and
dec
xor
scas
notl
or
xchg
inc
imul
fmulp
addb
push
shlb
sub
jle
jl
roll
jp
out
push
outsb
pusha
incl
sbb
test
jbe
int
shr
cmpsl
ficoml
and
add
loopew
ja
add
and
mov
sar
rol
scas
xchg
pop
mov
inc
add
push
pop
test
into
ret
mov
lock
mov
xlat
fisubs
mov
mov
push
lret
dec
in
mov
cmp
dec
repz
jl
push
push
mov
push
or
adc
fldenv
mov
call
test
icebp
ljmp
popf
mov
mov
push
mov
sbb
fxch
sub
les
dec
cmc
pusha
cmp
mov
push
cmpsl
je
xchg
popa
cmp
mov
stc
jns
xchg
jns
inc
jl
pop
add
in
imul
arpl
outsb
sub
mov
mov
mov
shll
stos
movsl
xorl
cmc
test
xchg
mov
sbb
or
mov
mov
mov
ret
pop
sti
outsb
aaa
pop
mov
mov
jae
in
out
cmp
testl
xchg
cld
ss
aam
adc
mov
adc
dec
and
xlat
mov
adc
inc
in
xor
cltd
and
pop
pop
ljmp
cmpsb
mov
roll
rolb
mov
pusha
mov
push
jmp
les
pop
rorl
pop
lock
sahf
mov
mov
mov
lods
dec
adc
rcr
test
sbb
push
mov
out
xchg
and
sti
loope
and
icebp
push
enter
push
outsl
push
jl
sub
lea
jns
sub
jle
call
fwait
nop
arpl
push
sar
lds
sbb
and
insl
adc
sbb
xor
pusha
push
ret
jge
push
sahf
or
ds
sub
adc
mov
icebp
cmp
dec
inc
dec
mov
sub
jp
push
cmp
jp
inc
stc
mov
cltd
test
lcall
mov
iret
jge
in
pop
add
inc
push
mov
push
insl
cli
sub
andl
mov
adc
mov
imul
pusha
pop
into
inc
inc
int
and
lods
mov
dec
leave
xorb
jmp
addb
xor
pop
jns
movsl
dec
cmc
pop
data16
cmp
sbb
add
mov
jmp
mov
mov
add
fidivrl
arpl
das
int
enter
in
pop
inc
psubsb
outsl
mov
popa
int3
pop
divl
push
nop
sbb
add
dec
jnp
cmp
std
insl
pop
and
das
xor
lods
sub
and
iret
cltd
test
mov
cmp
daa
aad
addr16
mov
jmp
dec
pop
lahf
or
mov
inc
loope
in
sbb
push
push
popf
mov
xchg
mov
adc
xchg
push
leave
push
push
pushf
sub
push
and
cmpsl
mov
andl
iret
mov
clc
repnz
xlat
stos
sahf
inc
fnstsw
pop
rcr
xchg
or
mov
fdivl
lret
imul
sbb
fidivrl
jge
loopne
mov
loopne
call
aas
pop
pop
push
iret
and
mov
and
and
push
jo
pop
mov
pop
test
icebp
test
adc
mov
mov
xlat
mov
pop
push
int
sti
mov
xchg
mov
lock
pop
or
test
test
push
rol
je
leave
movswl
jb
cmp
mov
pop
sbb
aam
add
ss
lcall
dec
outsl
ljmp
repz
push
jae
mov
push
sub
loope
cmpb
pusha
inc
cmp
hlt
add
negb
mov
or
insl
incb
stc
addr16
int
stc
popa
or
gs
dec
add
mov
fistpll
shlb
cwtl
ret
scas
mov
shlb
jb
xor
jecxz
daa
push
fsubs
and
lock
repnz
aas
lods
fwait
pop
ss
sbb
imul
mov
into
in
sbb
das
pop
js
lock
xor
dec
dec
out
push
mov
push
and
aam
or
imul
imul
mov
fwait
mov
dec
xor
or
push
push
xlat
insl
daa
inc
mov
or
int3
outsb
out
out
adc
fwait
xchg
xchg
sbb
push
and
mov
mov
outsb
stos
mov
push
and
and
roll
fsub
and
cmp
outsl
xchg
fstpt
clc
lods
jmp
test
mov
xor
ret
mov
in
lds
popa
mov
cwtl
scas
jb
or
xchg
mov
stos
jmp
xchg
test
ja
or
xor
test
imulb
fisttpll
shlb
test
xchg
add
adc
jbe
sub
mov
adc
dec
outsb
das
sub
aad
dec
mov
sbb
notl
leave
push
or
out
pusha
xor
stos
pop
cmp
ds
adc
sub
pop
push
cmp
push
pop
mov
es
or
lret
fwait
and
inc
icebp
push
push
inc
mov
stc
sbb
fwait
cmpsl
cmc
and
call
repz
inc
enter
jg
addr16
cmpsb
in
rcrl
xchg
scas
cmc
test
jbe
mov
cli
or
ja
test
and
jmp
mov
data16
adc
push
mov
jmp
cwtl
aam
adc
outsl
leave
dec
cmpsb
push
mov
inc
push
xor
lods
jmp
jnp
xchg
push
in
xchg
or
lcall
aad
cmp
pop
scas
mov
xchg
js
dec
std
adc
adc
pop
push
mov
flds
rcll
sbb
movsl
mov
sbb
mov
js
loop
push
out
jmp
xor
imul
in
jle
loop
push
int3
mov
sbb
aad
repz
std
or
clc
push
mov
or
jecxz
bound
jecxz
push
pop
mov
inc
clc
lret
add
and
icebp
scas
xor
xor
stos
les
stc
push
adc
push
cmpsl
adc
mov
jns
int3
fs
and
je
add
mov
cmpsb
pop
push
leave
xchg
or
jnp
in
dec
ret
leave
and
arpl
inc
add
or
jp
dec
lret
icebp
imul
add
jg
sub
fiaddl
push
popf
lahf
and
call
scas
arpl
shlb
xchg
pop
les
jmp
ja
pushf
out
mov
cmp
fs
sahf
jne
cltd
int
arpl
push
call
mov
in
mov
push
sub
xchg
ss
mov
in
adc
push
mov
cmpsl
mov
cmpsl
sub
pop
lods
stos
fnstsw
xchg
pop
imul
mov
add
push
data16
and
out
jecxz
loope
mov
xchg
mov
ja
pop
js
add
out
mov
mov
mov
test
mov
ror
ret
and
decb
add
fs
jge
sub
fadds
lods
sbb
cmp
push
int
cld
push
ret
mov
sub
les
shrl
cmpsb
inc
data16
notb
inc
rcr
iret
nop
push
loope
sti
scas
test
gs
std
xchg
decb
and
call
fstpt
xor
add
xchg
mov
nop
dec
push
mov
xchg
sub
sub
mulb
lock
push
test
test
fwait
push
mov
inc
mov
jnp
xor
sahf
pop
adc
add
inc
mov
leave
xchg
pop
sub
inc
lock
mov
imul
ficomps
mov
es
aad
nopl
dec
cmp
ret
fwait
mov
int
stos
inc
rcrl
pop
and
roll
dec
dec
mov
inc
ret
testb
dec
dec
mov
es
insb
mov
xchg
pusha
add
xor
fwait
xor
xor
les
jns
stos
push
in
fcmovnb
push
stos
xchg
shll
das
call
lock
pop
fcmovne
bound
or
arpl
cld
mov
sbbl
mov
push
jp
and
stos
xchg
jo
and
stos
std
mov
mov
clc
ret
es
arpl
icebp
stos
push
or
pop
test
mov
aad
mov
add
cmp
cs
mov
stos
aam
cmp
rcr
and
hlt
mov
sbb
int3
mov
jo
jmp
cmpsb
mov
ret
jmp
in
mov
fdivrl
mov
call
imul
xor
cmp
cmpl
add
out
lods
arpl
insl
sti
cld
jmp
loop
or
test
inc
repnz
movsb
pop
rclb
mov
xor
xor
pushf
add
lret
mov
pop
xchg
and
xchg
mov
test
adc
std
orb
das
dec
dec
cltd
mov
pop
mov
dec
dec
movsb
mov
inc
pop
pop
add
mov
daa
into
cmpsb
and
mov
pusha
cmp
inc
cmp
testl
xchg
js
test
mov
mov
dec
cltd
cmp
mov
sbb
pop
stc
mov
rcrb
inc
push
or
aad
pop
int
scas
repnz
sbb
dec
aad
dec
les
in
push
mov
mov
lret
xlat
cmpsb
mov
mov
outsb
arpl
js
push
inc
or
adc
int3
pop
loope
fucom
int
dec
addr16
std
fidivs
xchg
mov
xchg
dec
xchg
in
call
lea
movsl
add
sahf
adc
hlt
pop
mov
push
xchg
mov
dec
and
xor
lcall
cmc
xchg
mov
nop
dec
mov
icebp
lods
jo
mov
fldenv
jbe
sbb
or
pop
jecxz
rcrl
add
mov
pop
push
push
addr16
push
adc
xor
or
fs
or
fdivrs
fidivs
movsb
cltd
sbb
xor
inc
notl
test
push
jno
lcall
mov
sbb
sub
leave
mov
ret
lcall
rcll
cld
loop
inc
imul
inc
andl
jg
push
shl
push
inc
into
mov
mov
xor
cli
mov
repz
stos
ds
xchg
mov
data16
mov
xchg
push
sub
pushf
push
inc
xlat
pop
call
and
movsl
jp
sub
enter
xchg
pop
push
add
mov
sbb
add
in
out
out
sbb
loopne
cmpsb
xor
xchg
cmp
add
subl
test
add
and
mov
xor
jmp
mov
cmp
scas
dec
outsl
mov
inc
lret
loopne
out
pop
loopne
pop
pop
cmpsl
or
and
dec
in
xchg
int
mov
mov
jl
mov
push
push
xor
adc
pop
and
subb
inc
inc
jns
dec
mov
data16
mov
inc
inc
cmp
cwtl
dec
push
pop
add
stc
sub
shl
pop
push
insb
mov
dec
pop
or
xchg
pop
sub
jns
roll
in
fwait
mov
pushf
pushf
push
scas
pop
jb
loope
lahf
add
test
cmp
push
inc
repz
adc
adc
fimull
jbe
fs
mov
rclb
sbb
mov
or
outsl
das
mov
movsb
mov
lea
out
xlat
ljmp
hlt
je
and
sub
scas
sbb
fld
daa
mov
fldl
xchg
ds
push
xor
arpl
inc
roll
imul
aam
sub
sub
arpl
xchg
fcoml
test
mov
test
stos
jae
and
xor
and
inc
xor
ds
or
cmp
xchg
test
lods
ja
mov
mov
popf
mov
pop
daa
in
scas
pop
pop
dec
lret
out
mov
pop
fstl
push
idiv
scas
adc
lods
xor
js
adc
outsb
xor
adc
xchg
mov
adc
xchg
mov
movsl
adc
pop
fs
mov
andl
dec
push
cli
mov
sub
sbb
pop
pop
jmp
xlat
push
in
fnsave
sub
mov
push
push
and
das
lret
cmp
subl
test
orl
fimull
fwait
sub
pop
lcall
lret
inc
iret
arpl
cltd
clc
in
lods
push
dec
push
push
jge
push
and
scas
sub
aas
insb
push
roll
rcrb
idivb
dec
mov
loope
jno
outsl
push
inc
ljmp
sub
xchg
lret
push
pop
lds
xchg
mov
xor
push
cmp
cli
out
push
mov
aad
cmp
jns
imul
mov
dec
and
fcompl
cmc
xlat
mov
xchg
push
sbb
stos
mov
in
into
call
xchg
popa
ja
jo
je
lds
stc
sbb
aaa
xor
jo
cmp
xor
pop
pop
aaa
lods
mov
or
cli
mov
lcall
or
int3
icebp
in
jge
scas
cmc
dec
xor
fnstsw
push
lret
ja
sbb
jp
xor
mov
int3
movsl
lock
sub
decl
pop
int3
mov
mov
icebp
cmp
lahf
rolb
ss
push
int
xchg
sub
mov
loop
jg
and
aam
xor
test
cmpsl
stos
stos
sbbl
add
mov
loopne
test
mov
dec
mov
int3
popf
dec
repnz
aad
xor
adc
arpl
sbb
sti
or
xor
into
std
inc
dec
inc
sub
cltd
xchg
je
subl
bound
repnz
lahf
in
mov
xchg
cltd
fbld
lods
popa
mov
stos
lods
test
insb
not
lds
iret
pop
xchg
and
and
sbb
sbb
push
xlat
fs
push
inc
repnz
pop
movsl
add
loope
jnp
stc
xor
rclb
shl
ljmp
mov
outsb
dec
pop
push
rcrl
in
add
mov
mov
aam
pop
dec
mov
xlat
imul
test
or
rcrl
xchg
insl
push
in
subb
xchg
cmp
inc
std
in
sti
and
add
jnp
in
dec
call
inc
push
jl
or
stc
mov
mov
repz
jge
aas
repnz
cmp
sti
dec
push
les
call
roll
or
in
dec
jecxz
jo
scas
lods
jg
scas
pop
in
cs
mov
pushf
sbb
adc
in
fisubrs
scas
fwait
dec
adc
roll
shrl
out
sub
movsl
xchg
bound
bound
aad
dec
and
fldcw
jns
cmp
in
ds
sub
movsl
jecxz
roll
testb
por
aaa
stos
data16
pusha
shrb
adc
dec
push
rolb
add
inc
pop
dec
scas
xlat
sub
sub
mov
mov
pop
or
xorl
ja
mov
xchg
loope
jmp
sub
mov
xor
cmpsl
call
mov
sbb
repz
es
dec
jo
daa
add
xor
and
add
add
lahf
clc
push
lret
cli
and
sbb
push
mov
ret
lock
cmc
add
ret
movsb
pop
ror
jbe
add
jge
dec
xor
mov
movsb
jo
lods
cmp
jg
xor
jge
mov
idivb
cltd
mov
loopne
mov
mov
xor
or
popl
mov
lret
je
jge
out
inc
sbb
sbbb
cmp
mov
adc
inc
cmp
xlat
cmp
imul
mov
push
test
insl
std
pusha
pushf
pop
adc
lcall
push
fdiv
adcb
sbb
xchg
push
dec
push
divl
cmp
pop
sbb
jmp
ja
notb
push
jbe
pop
les
call
xchg
dec
add
out
mov
ss
shrl
ret
pushf
mov
push
inc
aam
dec
xchg
stos
mov
mov
int3
xchg
inc
outsl
fwait
mov
jne
pushf
stc
mov
xchg
daa
add
pop
jne
jmp
mull
lods
out
fs
bound
daa
and
dec
push
in
mov
pop
sub
rolb
xchg
mov
push
dec
in
ds
movsl
lcall
pop
sub
pop
js
inc
inc
mov
rol
add
adc
xchg
dec
jns
mov
jl
xor
xchg
pop
lock
bound
fcmove
clc
add
xchg
add
push
push
push
and
leave
loop
sub
push
push
xor
sbb
daa
pop
je
stos
push
cmp
xchg
hlt
lods
lods
xorb
aas
add
push
jle
push
mov
sub
insb
sub
cmp
adc
hlt
xor
fisttpll
push
movsb
subb
gs
or
push
add
mov
xlat
jle
sub
ljmp
dec
push
mov
jno
jns
inc
mov
cmovae
mov
insl
cmpsl
loop
inc
insl
or
and
test
pushl
addr16
jbe
mov
push
lret
faddl
or
fistpl
cltd
aaa
mov
imul
rorl
ficomps
adc
out
or
push
and
stos
ja
mov
jb
cs
imul
inc
jge
aam
testl
pushw
repz
adc
loope
pop
xchg
mov
andb
ret
xchg
xchg
movsb
aad
add
fs
inc
stos
arpl
mov
xchg
loopne
jb
push
jg
adc
dec
arpl
pushf
or
xor
jmp
mov
xchg
mov
push
insl
or
jl
xchg
or
sub
cld
ljmp
pusha
sbb
jle
int
cwtl
xor
lea
shll
insl
cmp
fnsave
push
aad
or
mov
mov
out
subb
out
roll
xor
icebp
and
js
pop
test
xchg
lahf
jo
stos
jae
xor
mov
or
hlt
cmp
out
scas
repz
rcl
fnstsw
mov
jecxz
jne
jnp
lahf
mov
lret
ja
fwait
popa
mov
sub
jg
sbb
inc
arpl
icebp
xor
jp
mov
xor
stc
popa
sbb
cmp
push
xchg
movl
incb
test
pop
dec
lods
imul
add
mov
negb
mov
cmp
jecxz
cli
mov
cmpsb
sub
leave
push
jne
jmp
mov
negb
divl
lea
stos
and
out
sti
xchg
clc
xor
pop
test
fs
into
fs
sub
in
jae
ljmp
rcrl
test
mov
mov
and
mov
sub
sub
hlt
jo
rcll
mov
hlt
leave
loope
aad
pop
into
out
adc
push
jno
pop
sub
pop
repnz
sbb
hlt
popl
sub
out
shlb
mov
sbbl
xor
cmp
scas
push
xchg
leave
addr16
push
movsl
push
fcompl
pop
aam
rcr
jne
dec
ficompl
clc
xchg
mov
cmp
mov
adc
dec
or
scas
ds
dec
pop
xchg
pop
pop
inc
or
sbb
std
aaa
mov
mov
mov
ret
test
pushf
add
or
pop
iret
stos
mov
lods
mov
or
dec
push
and
rorb
ficomps
and
ret
or
cs
hlt
lods
mov
sbb
sub
xchg
adcb
and
test
imul
ja
and
rcrb
cli
and
sbb
dec
push
fists
out
movsb
sub
or
repnz
cld
test
cmp
int
pushf
mov
stos
mov
dec
pusha
hlt
enter
mov
adc
mov
jne
imul
jne
ret
jbe
xor
or
es
in
adc
jo
pop
out
rorb
xchg
mov
dec
outsb
sbb
cmp
sub
sbb
pop
xor
and
xor
mov
pop
rcr
inc
in
fnstcw
pop
enter
sub
hlt
push
stos
cmp
mov
fidivrl
out
jle
mov
push
xor
mov
jo
and
mov
test
imul
or
push
stos
adc
sub
jne
add
xchg
xchg
xchg
lock
jecxz
lret
dec
add
push
push
in
dec
jmp
movsl
sbb
std
std
xlat
dec
mov
into
cmpsb
js
jge
pushf
pop
mov
pop
lahf
or
add
movsb
jbe
js
cld
sbb
mov
bound
push
faddl
hlt
flds
mov
mov
nop
pop
pop
mov
fistpll
mov
cmc
shr
lods
int3
push
int
ds
cmp
in
xchg
fstps
adc
dec
jae
and
jmp
movsl
je
cmp
inc
xor
xchg
out
xchg
les
push
mov
pop
iret
in
pop
xor
lret
cmp
adc
fdivrs
adc
out
ja
add
bound
mov
ficoms
loopne
sti
mov
dec
mov
aam
xorb
fsubrp
insl
xor
pop
ret
adc
xor
dec
movsl
pop
xchg
xor
push
xor
stos
mov
int3
test
test
rorb
and
mov
rorb
lcall
push
cmc
sbb
jl
rorl
out
mulb
cltd
pop
and
and
mov
mov
test
mov
or
inc
mov
clc
mov
xchg
aad
dec
mov
lea
mov
dec
adc
jl
xor
or
nop
adc
dec
sbbb
cmp
push
jmp
mov
loopne
insl
dec
sub
xor
xchg
pop
insb
je
mov
rcll
jl
or
fs
cmp
addr16
xchg
sbb
pusha
mov
inc
les
fldenv
pusha
ss
jp
inc
rcrl
test
xchg
xchg
adc
mov
test
rep
repnz
popa
cmp
cmp
xor
mov
xchg
je
lcall
mov
stos
push
daa
pop
push
pop
pusha
sti
lea
mov
iret
or
add
in
inc
inc
sti
fisubl
jle
and
outsb
hlt
jae
push
fnstsw
mov
add
cmp
jbe
je
mov
push
loopne
test
sahf
divb
sub
shr
xor
xchg
jp
dec
push
cmp
or
pop
in
ja
shlb
dec
stos
adc
mov
jno
xor
ror
push
mov
mov
cmp
cmpsl
mov
push
fisubrs
mov
cmpsl
lret
or
push
adcl
cwtl
and
adc
stc
movsb
pop
dec
es
sub
out
jne
in
xchg
scas
testl
test
pusha
or
dec
scas
outsb
shrl
sarl
push
or
or
or
leave
insl
xchg
inc
add
fidivl
jno
int
and
ffree
outsl
sarb
icebp
and
frstor
sub
jo
or
pushf
or
packsswb
icebp
in
scas
cmpsl
mov
and
mov
scas
aaa
cmp
lahf
popa
sbb
mov
adc
jp
fidivrs
pushf
gs
push
adcb
iret
enter
fmuls
mov
xchg
ss
rcrb
xor
or
mov
xlat
xchg
push
sub
stos
adc
pop
jno
sbb
adc
pop
mov
dec
std
jno
cwtl
cs
div
sub
mov
lcall
push
xchg
jmp
xchg
pop
imul
ret
inc
xchg
sarb
inc
das
loope
aam
or
lret
mov
iret
mov
adc
dec
subb
pushf
push
mov
mov
mov
enter
and
push
mov
push
stos
or
lds
out
cmpsb
add
hlt
dec
lds
gs
test
jle
mov
ss
push
inc
pop
fcomps
push
jo
movsb
mov
shl
test
cld
push
adc
gs
mov
in
add
jns
mov
scas
jne
cmpl
jne
sbb
push
jae
mov
xchg
jns
icebp
xchg
test
es
xor
idivb
lods
mov
mov
jns
lret
jnp
add
dec
xchg
rclb
call
ja
loopne
fisttps
fiadds
and
xchg
cmc
cmpsb
fs
mov
cmp
jbe
push
push
add
cli
imul
push
xchg
mov
inc
iret
enter
mov
std
loope
aaa
in
insl
jae
mov
xchg
cwtd
hlt
cmp
inc
call
push
lock
cli
xlat
orps
bound
jno
es
xchg
std
xor
loope
push
mov
cltd
mov
sub
jecxz
shlb
add
push
filds
ficoml
cmp
jae
xor
sub
sbb
mov
lret
aam
mov
mov
imul
lret
dec
push
adc
sti
pop
cmp
xchg
or
loopne
dec
inc
idivb
adc
push
sbb
sub
push
dec
ja
push
jo
or
pop
dec
jo
lret
mov
xchg
test
and
xchg
mov
sahf
jo
int
pop
icebp
jge
push
jno
and
jo
loopne
jl
add
and
or
enter
or
xor
push
ret
cmp
push
loopne
popa
js
push
mov
xor
cmp
fnstsw
xor
dec
jne
mov
aam
int
loope
dec
sbb
xchg
shlb
and
mov
out
cwtl
push
push
mov
or
pop
mov
pop
pop
add
pop
pushf
out
movsb
and
nop
mov
cltd
syscall
into
mov
or
pusha
pop
jne
jo
cmp
jno
sahf
cmp
jg
movb
xlat
push
mov
imul
pushl
std
mov
fists
lret
cmp
movsb
mov
ja
mov
pop
xchg
mov
mov
cmp
adc
cwtl
xchg
mov
ftst
mov
adc
pop
in
out
mov
dec
dec
jns
jge
aas
scas
mov
ds
xchg
movsb
out
andps
fisubrl
movsb
cld
cmp
or
pop
fimull
into
test
shlb
cmp
dec
ficoms
aad
or
dec
test
ret
mov
add
loop
mov
dec
jno
add
rcl
and
adc
push
cmpsb
gs
mov
sub
loopne
inc
inc
sbb
je
js
xor
pushw
push
cs
adc
inc
nop
nop
inc
bound
jecxz
in
test
in
jle
xor
negb
cld
add
loopne
les
je
add
jb
icebp
jg
testb
int
sbb
cwtl
out
icebp
lods
jecxz
shrl
addr16
xchg
cs
xchg
movsb
rclb
js
add
jmp
xchg
sub
pop
xor
xchg
push
xor
stc
popa
and
in
dec
imul
icebp
xchg
push
or
jge
mov
loop
clc
fisubrl
shll
pusha
lds
push
orl
ja
dec
or
mov
mov
or
sub
mov
shrb
stos
inc
mov
cmp
shll
scas
insl
and
add
mov
sub
mov
pop
cmp
call
insl
cmc
bound
ret
or
push
and
and
sub
outsl
pop
outsl
or
fcoms
adc
add
push
iret
orl
mov
inc
cmpsl
cli
or
in
daa
xchg
stos
outsl
test
push
cmc
adc
pusha
out
inc
adc
lods
mov
shr
jecxz
pop
dec
iret
insb
jnp
jnp
mov
out
pop
dec
pushf
push
sar
lds
test
das
cltd
bound
adc
popf
xor
xchg
push
push
je,pn
mov
pop
test
push
pushf
lods
mov
call
sbb
out
rsm
repz
aad
sbb
sbb
sub
enter
fisttpl
daa
push
mov
mov
inc
pop
pop
sbb
loop
test
xchg
push
popa
bound
fs
cmp
and
cmp
pop
repnz
lahf
mov
stc
int3
in
xor
or
stos
adc
repz
subl
ds
push
cmc
push
xchg
movsb
push
sbb
xchg
aad
mov
sbb
fidivrl
push
repz
lock
mov
dec
sahf
stc
imul
sbb
ror
sub
stc
cwtl
pusha
add
clc
push
jb
jne
test
fidivrs
cmpsl
cmp
movsw
add
fisttps
jle
inc
push
jp
test
mov
push
enter
cmp
add
fnstsw
push
or
jb
xchg
mov
js
stc
mov
leave
inc
in
gs
popf
leave
xchg
adc
dec
mov
jne
inc
outsb
mov
jae
call
or
pop
or
mov
and
mov
out
imul
add
aad
add
jge
push
jbe
push
popf
xchg
lods
jle
scas
pop
ret
jb
pop
and
xor
inc
cmc
adc
gs
out
mov
xchg
cmp
movb
mov
mov
movsl
sub
push
vmwrite
add
xlat
inc
xchg
loopne
cmc
jno
arpl
pop
popa
aam
lcall
out
lods
frstor
sbb
in
mov
data16
xchg
mov
push
mov
icebp
repz
scas
pop
in
lahf
fistps
mov
push
scas
int3
or
bound
daa
insl
pop
pusha
ss
push
pop
and
push
and
sti
outsl
ret
mov
xchg
ss
call
das
shl
loop
loope
mov
lret
mov
xchg
hlt
push
scas
cmpsl
inc
jg
xor
add
cmpsb
mov
movsb
loopne
or
loop
add
inc
push
stc
pop
adc
jmp
mov
dec
xchg
sub
int
mov
dec
aaa
js
ja
ljmp
xchg
fs
pop
das
sub
clc
push
mov
jbe
mov
cli
sub
ss
xor
rclb
add
fninit
ss
adc
repnz
lods
add
aas
stos
push
repz
mov
mov
rclb
cmp
and
xlat
cmpsl
adc
and
mov
xor
jge
std
mov
popf
ret
jno
sbb
int
lods
push
fwait
push
mov
das
jp
stos
les
mov
sbb
sbbl
jg
mov
jecxz
inc
sbb
cld
test
mov
rep
push
mov
test
fwait
jg
jle
roll
jae
out
inc
cmp
push
xchg
repz
lods
xchg
stos
jle
shrb
xor
dec
fcmovbe
leave
call
arpl
cmp
or
sbbl
and
sbb
or
andb
xchg
add
subl
xchg
jecxz
sbb
mov
sbb
adc
fidivs
or
jl
cmpsb
and
stc
pop
push
out
rcr
imul
aaa
daa
jno
imul
test
xlat
mov
sbb
shrb
fwait
mov
dec
mov
in
scas
sbb
jae
sub
insl
dec
mov
jno
test
fisubs
jmp
cs
fucomip
push
jecxz
nop
int3
repnz
data16
testb
jb,pn
out
dec
sti
addb
add
testl
mov
add
add
mov
rolb
cmpsl
push
inc
pushf
xchg
cmp
mov
xor
adc
jne
push
sub
inc
pop
or
push
mov
pop
jnp
ret
dec
mov
ss
add
dec
je
cmpsb
incb
jnp
dec
or
loope
mov
push
mov
sub
xchg
pop
adc
adc
idiv
inc
mov
add
loopne
mov
sub
jl
popl
jle
and
cli
lret
adc
loop
addr16
lahf
mov
or
popa
test
xchg
mov
imul
out
pop
lods
loopne
xchg
and
cld
and
ss
pop
jnp
cmpsb
sub
dec
dec
clc
xchg
out
xchg
jecxz
popf
inc
nop
mov
cwtl
xor
push
or
mov
cld
paddb
cmpl
xchg
pop
js
and
mov
cmp
scas
adc
jp
inc
xor
inc
shl
shrb
ret
pop
daa
and
inc
sub
jno
and
mov
push
mov
sbbl
sub
mov
jne
fbld
mov
fs
in
dec
mov
mov
jae
and
pop
cli
add
xchg
add
mov
sub
arpl
clc
out
jg
addr16
mov
add
jae
or
cmp
scas
outsl
mov
fcomps
cmp
mov
mov
mov
lock
mov
jp
adc
xchg
jmp
sub
sbb
lea
xor
sbb
xor
xchg
sub
int3
imul
test
pop
jp
mov
pushf
push
lret
jo
dec
jo
add
sbb
cmp
ds
out
pop
pop
xchg
xchg
daa
mov
mov
push
call
cmc
xchg
push
jne
cmp
cmp
mov
fcom
sub
adc
xlat
mov
and
les
and
stos
dec
fdivrs
pushf
xor
add
push
pop
test
jecxz
sbb
push
jmp
xchg
rorl
cs
int
add
add
in
pop
lock
inc
or
test
popa
cmpl
test
pop
lods
jbe
and
mov
mov
add
xor
or
jne
jo
sahf
clc
daa
scas
and
xchg
mov
out
or
pop
stos
push
pop
out
pop
mov
mov
pop
testl
mov
pop
adcl
dec
push
ror
fwait
push
in
xor
int3
adc
imul
cli
iret
jnp
xchg
adc
dec
test
jns
fs
sub
mov
push
lret
shr
hlt
pop
in
ret
mov
xchg
insl
lahf
mov
sbb
pop
aam
nop
out
fildl
int3
out
dec
out
mov
lods
bound
jae
dec
and
repz
pop
pop
push
in
fnstsw
sarl
int3
sub
dec
loop
cmc
test
outsl
sbb
mov
and
jne
in
lret
push
inc
movsb
mov
push
divb
sbb
xchg
sbb
mov
shr
cmp
mov
and
and
and
or
int
mull
cmpsl
add
mov
adc
sub
leave
push
sarb
push
sub
xor
pop
mov
xchg
pop
inc
call
fiadds
and
sub
jne
cmp
add
int3
dec
sbb
scas
pop
test
dec
aas
hlt
addr16
jl
cwtl
inc
out
arpl
mov
loope
fadd
and
iret
or
or
xchg
mov
outsl
pop
mov
fistl
add
xchg
hlt
xor
add
add
dec
sub
repz
inc
xchg
iret
insb
mov
sbb
les
sbb
mov
mov
sti
jno
pop
int3
cli
xor
fwait
rcrl
pop
inc
loop
or
faddl
cmp
xchg
inc
in
cmpsl
nop
xchg
gs
cli
mov
test
push
imul
cmp
fnstsw
push
scas
mov
push
int
add
pop
pop
mov
cmpsl
int
les
adcb
sarb
xchg
test
ds
ret
shld
mov
adc
jle
sahf
push
and
popf
clc
mov
mov
xchg
movsb
aas
insb
xor
push
mov
adcb
dec
xchg
push
roll
add
loopne
insl
fisubl
and
fidivrs
sbb
mov
out
shl
jae
pop
and
push
inc
lahf
add
sub
sahf
and
sub
test
push
movsb
fbstp
sbb
in
push
cmp
cmp
push
stc
xor
pop
sub
pusha
cmp
mov
arpl
or
test
jmp
jo
mov
mov
and
aam
int3
fists
dec
and
add
call
sbb
scas
into
outsl
add
push
lahf
xor
push
in
loope
dec
sti
and
xor
mov
mov
sbb
pop
xchg
add
iret
jno
lret
push
outsb
movsl
jae
sbb
mov
frstor
in
and
je
xchg
jae
jp
push
push
pop
mulb
pop
jo
cmpsb
xor
pop
inc
and
mov
dec
popf
pop
cmpsl
lret
in
test
add
push
sbb
jae
ret
ret
sbb
nop
lds
movsl
cmpsb
xor
imul
test
sub
fnsave
add
out
incl
das
mov
insl
out
sub
das
add
lcall
jge
movsb
mov
cld
lret
xchg
inc
adc
mov
pop
dec
push
mov
sub
sbb
filds
pop
scas
xor
jg
lock
insl
jo,pt
xchg
xor
mov
adc
mov
lods
jae
dec
lods
out
fcomps
mov
xchg
dec
push
fsubp
mov
rcrb
sahf
jne
sbb
icebp
aas
pop
pop
mov
inc
cmp
fbld
lods
dec
xchg
dec
pop
mov
or
lret
sbb
inc
shrb
cmp
sbb
sbb
push
pushf
add
jb
dec
shr
mov
aam
aam
es
call
xchg
jae
hlt
pop
push
lahf
lods
pop
jg
imul
jmp
out
int3
dec
add
sbb
int3
push
stos
in
push
out
cmc
clc
pop
dec
mov
push
leave
fisttps
fxch
dec
iret
adc
push
fs
sub
fldcw
aas
cli
out
dec
or
repnz
mov
mov
aam
adc
add
loope
aam
xchg
xchg
scas
inc
cwtl
dec
xor
adc
add
inc
cmp
pop
dec
jmp
xchg
inc
arpl
or
dec
cld
xchg
mov
push
loop
lahf
push
or
inc
xchg
push
mov
jno
loope
pop
adc
icebp
outsl
jg
mov
leave
fwait
fimuls
mov
sbb
or
mov
mov
xor
sbb
test
aad
cmp
hlt
js
cmp
mov
push
pusha
inc
sub
cmc
adc
mov
or
mov
je
push
popa
in
pop
inc
roll
pop
jp
popf
push
ret
push
les
jns
jbe
sub
xor
mov
adc
xchg
jge
faddp
inc
push
orl
into
and
rclb
pusha
rcr
gs
mov
test
inc
pushf
out
in
jns
pop
adcb
cli
add
push
jae
out
sub
mov
sub
sarb
test
cmpsb
into
int
fistpll
cmp
mov
arpl
adc
movsb
idivl
mov
jns
fwait
adc
jns
call
cmp
jne
dec
movsb
repz
and
ffreep
fstps
xchg
pop
sahf
pop
xor
adc
ljmp
loopne
xchg
mov
in
and
adc
ja
movsl
clc
inc
add
out
fchs
pop
add
adc
insb
mov
pop
leave
pop
fbstp
xchg
push
push
out
iret
sahf
outsb
pop
push
insb
iret
sbb
lret
int3
sub
ret
lahf
in
clc
pop
mov
dec
jl
jle
fistpll
enter
cs
out
mov
sbb
inc
cmc
fisubs
rcrl
pop
xor
xchg
fidivrl
test
mov
xchg
push
out
pop
in
or
inc
lahf
cmp
subl
shlb
int3
out
push
ret
mov
jae
frstor
adc
test
mov
mov
mov
mov
je
nop
es
cmp
dec
xchg
lea
inc
mov
aaa
pop
dec
outsb
hlt
fistpll
mov
mov
inc
or
xor
pop
sti
mov
jge
in
imull
int3
test
pop
push
inc
push
cmp
ss
and
mov
xlat
mov
call
fnstsw
insb
test
or
xor
das
subb
aad
out
mov
popf
mov
push
jb
and
fldpi
add
inc
repz
pop
lret
mov
pushf
push
or
push
stos
mov
inc
daa
mov
cmpsl
mov
inc
stos
xor
test
js
jne
in
rcl
add
je
maskmovq
idivl
inc
adc
fldt
ret
pushf
ja
daa
pop
dec
stos
pop
dec
repz
inc
mov
out
jge
test
mov
pop
fcmovu
aas
add
xchg
cld
mov
es
xor
les
pop
sub
mov
lods
test
cltd
subl
fists
cmp
arpl
imul
pop
inc
cmp
push
in
xchg
cmp
fisubs
mov
pop
xchg
and
xchg
jmp
sbb
cltd
mov
and
addr16
out
outsl
cmp
mov
popa
lds
nop
xchg
cmp
mov
loopne
push
outsb
mov
ret
xchg
xor
push
mov
and
cmpsl
mov
dec
movl
push
inc
cmp
loop
mov
pop
dec
pushf
scas
test
and
lahf
inc
lds
or
mov
inc
add
mov
mov
pop
and
and
or
movsl
and
xchg
xchg
dec
addb
aam
ret
dec
insb
in
or
mov
jecxz
js
push
mov
sti
sti
jmp
xchg
sub
push
mov
lea
aam
sbb
xorb
sahf
mov
test
adc
pusha
push
loopne
inc
inc
cwtl
aam
movsb
or
fstl
es
std
aam
dec
sbb
outsb
ja
std
cmp
lods
mov
iret
sbb
cwtl
pmullw
pop
loope
sub
pop
cmp
push
fidivrs
out
loop
ja
push
leave
shll
and
jno
xor
fsubs
sub
leave
push
pop
add
pop
pop
iret
and
sti
inc
scas
pop
aam
adc
jne
mov
outsb
mov
ret
mov
and
jg
inc
repnz
in
mov
lods
adc
ljmp
push
sub
repz
pop
inc
push
pop
push
push
scas
mov
pushf
jle
cmp
mulb
inc
sbb
scas
fdivl
pop
add
jbe
cli
pusha
mov
lods
mov
cltd
sbb
xor
sub
mov
fmul
pop
pop
mov
repnz
or
leave
andb
sbb
inc
adc
dec
cmp
mov
jnp
mov
loope
movsb
sub
xchg
jl
mov
ret
sbb
lcall
pop
cmp
lahf
clc
xor
xor
dec
jns
imulb
pop
outsb
subb
outsl
mov
or
adc
jnp
mov
adc
mov
mov
scas
lods
mov
sub
or
cmc
dec
lcall
and
clc
mov
cwtl
call
add
mov
rcrl
push
push
popa
push
pop
inc
sub
add
icebp
outsb
das
mov
ljmp
add
mov
xor
cli
jae
mov
or
test
outsb
cltd
mov
addr16
into
xchg
add
inc
test
jb
pop
mov
push
jl
in
clc
add
add
mov
pop
jge
jae
push
and
lock
push
out
in
push
mov
sbb
mov
test
arpl
in
mov
loope
test
cmp
int
pop
add
cld
xorl
in
loope
add
inc
inc
std
pop
sbb
ret
xchg
and
cmc
aam
jno
xor
shrb
or
mov
fistpll
and
stc
movsl
jmp
int3
xlat
xchg
in
dec
pop
les
lret
out
cmc
into
sub
pop
push
cmp
imull
int
jbe
mov
mov
imul
fimull
push
dec
and
sti
pop
sbb
and
push
cli
or
jb
pop
mov
pop
out
cli
out
adc
xorb
enter
or
jbe
xor
pushl
cmp
push
mov
sarl
leave
out
pop
mov
hlt
mov
add
int
test
cmp
inc
xlat
adc
lcall
sub
pop
ds
repnz
psubq
sub
cmp
sbb
push
out
clc
test
xor
bound
cltd
dec
dec
push
pop
push
fmull
rcll
out
mov
enter
shlb
jbe
and
pushl
stc
insb
jno
ficoml
int
adc
push
fildll
sbb
ja
test
fptan
sub
xor
call
or
cmc
or
sbb
mov
jecxz
adc
or
movsl
jne
xchg
fisubl
lret
out
lods
push
inc
mov
xor
andb
mov
jecxz
push
imul
jnp
inc
inc
xor
lret
and
rcrl
mov
fcompl
mov
nop
push
jecxz
ret
cli
xchg
mov
outsb
xchg
es
mov
test
sub
push
movsl
push
inc
push
repz
addr16
mov
mov
push
add
xchg
imul
push
xor
jecxz
fiaddl
lret
pop
jl
lods
dec
mov
repnz
sarl
imul
cwtl
push
js
mov
fistl
add
in
cwtl
mov
clc
adc
pusha
xchg
stos
dec
add
lea
aaa
sub
jb
mov
jp
stos
stos
std
dec
repz
push
or
shr
lret
stos
aad
addb
pop
arpl
push
ds
imull
fwait
arpl
negb
mov
jnp
ret
fiaddl
repnz
cmp
adc
scas
vsubsd
jle
es
push
pop
dec
je
sbbb
cmp
je
add
mov
sbb
xor
xor
xchg
cmp
in
in
xchg
icebp
dec
jnp
in
jmp
push
cltd
insl
inc
stos
ja
fmull
call
int
iret
es
jecxz
scas
mov
out
sub
or
pop
mov
fsubrl
inc
lahf
dec
mov
xchg
icebp
sub
les
pop
mov
mov
test
fstpt
arpl
mov
fsubl
dec
mov
push
mov
cmpsl
enter
cmpsl
inc
imul
jb
jmp
test
lahf
mov
adc
test
mov
add
data16
xor
xor
xchg
dec
jg
mov
sbb
iret
lahf
cmpsl
inc
xchg
jo
fmull
sub
in
jecxz
cmp
jae
idivb
sbb
xor
or
jl
mov
adcl
sahf
lahf
out
or
hlt
mov
jne
pop
push
inc
add
xchg
ds
roll
ficoms
scas
jno
popf
dec
inc
int
jecxz
stc
add
mov
mov
inc
dec
lods
fsubrs
push
sti
adc
out
jmp
fwait
enter
fstpt
lret
push
adc
pop
push
jmp
in
in
frstor
xor
lock
adc
popf
mov
jb
xor
xor
xchg
cmpsl
aaa
arpl
aad
pop
push
pop
or
xor
lea
mov
enter
push
jle
mov
fmulp
sub
lock
inc
std
push
pusha
mov
push
mov
icebp
shlb
sub
sbb
xlat
cmp
sub
lcall
add
sub
in
call
xor
pop
sbb
out
stos
leave
jnp
mov
and
loopne
popa
test
test
and
ljmp
xor
ljmp
add
enter
sbb
testl
cmpb
enter
mov
iret
in
fmul
cltd
imulb
adc
cmp
rolb
sub
adc
push
mov
hlt
mov
jns
nop
ret
xchg
inc
aaa
dec
negl
jmp
jb
jg
movsb
out
insl
bound
mov
bound
not
sub
jne
mov
rcr
insb
pusha
xor
idivl
pop
movl
push
sarb
pop
fcmovu
push
jbe
pop
decl
jne
into
aam
fs
icebp
jmp
mov
popl
sahf
sbb
subl
mov
pusha
les
into
int3
dec
das
leave
xlat
lea
test
insl
mov
scas
dec
gs
in
popa
jl
imul
js
int
test
loop
push
push
push
movsb
pushf
sbb
dec
out
imul
aad
cld
adc
xchg
fldt
pop
pop
push
mov
out
repnz
xor
stos
fisubrs
out
out
xchg
cmpsl
push
bound
dec
adc
mov
shlb
stos
pop
mov
cmp
gs
rcr
out
test
ficomps
test
in
mov
sbb
xor
push
sbb
adc
insl
notb
in
fdivp
hlt
fiaddl
pusha
js
adc
shrl
jae
stc
out
push
mov
bound
inc
std
xchg
sub
stos
stos
test
dec
cmp
call
jo
dec
in
sub
ret
mov
outsl
inc
xchg
outsl
lods
rcrb
xor
pusha
rcrb
into
test
cmp
stos
jmp
xchg
in
movsl
inc
js
scas
sub
cmp
fdivr
lret
subl
imul
or
mov
ja
addl
leave
mov
cwtl
sub
pusha
mov
insl
sub
je
jns
xchg
cmp
mov
jb
and
in
push
dec
cmp
push
sti
push
fisubrl
jmp
ja
les
push
stos
call
movsb
jbe
mov
std
add
lcall
inc
insl
push
fcompl
push
xchg
sbb
cwtl
lods
shll
fisubrl
lret
lcall
out
mov
subb
sbb
dec
int
data16
call
lcall
shll
push
popf
cmpsl
cmp
or
push
ss
lahf
je
imul
push
pop
jne
cld
mov
loopne
jp
fdivrl
sahf
fwait
lret
aaa
push
es
xchg
and
insl
push
vpsraw
fs
fwait
mov
adc
push
out
icebp
sarb
mov
sahf
mov
shr
mov
dec
sub
fs
inc
jo
inc
nop
js
jp
hlt
iret
repnz
je
mov
adc
cmpsl
cltd
into
push
lods
cli
jecxz
inc
sbb
xchg
sub
and
es
sbb
xor
add
push
out
inc
push
imul
cmpsb
add
mov
sar
pop
clc
insl
mov
adc
mov
add
mov
or
dec
jl
jno
push
das
out
pop
test
movsl
mov
xor
in
sub
in
imul
xchg
lret
add
and
push
or
mov
scas
bound
xchg
mov
pushf
pop
popa
push
mov
sub
lcall
jb
push
xor
cmovge
jmp
mov
test
pop
iret
xlat
dec
stc
add
cmp
jp
xchg
ds
mov
xor
pushf
jl
jne
mov
int3
cmp
mov
scas
lret
ss
push
in
cmp
pop
or
mov
pop
ret
decl
in
mov
add
cmpsb
rorl
push
mov
push
cmpsb
or
mov
gs
mov
and
adc
sbb
gs
mov
add
mov
sbb
push
pop
mov
aam
dec
xor
stos
mov
pop
rorb
cmp
inc
dec
test
lahf
mov
and
pop
sbb
ss
jp
adc
sbb
push
scas
std
in
test
fcoml
lods
loope
pop
addr16
lret
inc
xchg
pop
movsb
add
aas
imul
cmpsb
mov
add
mov
and
cmp
aam
dec
jmp
jl
jg
sbb
pop
icebp
push
fmulp
rclb
dec
inc
jp
test
dec
loope
shr
lahf
cltd
int
add
pop
cmp
xor
cmp
mov
sbb
insb
mov
aas
push
mov
out
cld
and
inc
pop
mov
sub
xchg
call
mov
jne
mov
jmp
shll
lret
add
sbb
or
mov
popf
hlt
lret
outsb
aas
bound
movsb
loopne
add
cmp
loop
inc
pop
pop
sbb
aaa
daa
mov
adcl
nop
jle
lcall
iret
mov
sbb
nop
stos
lea
add
inc
int3
push
cmp
sbb
lods
add
ja
lods
push
pop
mov
incl
sbb
addr16
fwait
int3
popa
sub
pop
or
pop
jno
and
mov
adc
cld
sub
push
mov
push
sub
loopne
nop
cmp
ret
xchg
subl
cmpsb
xbegin
pop
mov
mov
in
jle
lods
sub
jge
adc
iret
loopne
scas
jge
enter
jl
andl
movsl
pop
add
adc
inc
jae
in
mov
enter
arpl
es
cld
adc
inc
sbb
int3
cmp
dec
mov
cmpsl
mov
clc
pop
ret
ret
cmp
jne
add
popf
lea
or
jp
mov
sub
xchg
xchg
mov
and
push
mov
and
inc
sbb
push
sub
pop
leave
in
xchg
cmp
imul
jo
jecxz
int3
pop
inc
cmc
test
cltd
xchg
es
or
inc
int3
das
pop
pushf
xchg
adc
jmp
lret
shrl
push
mov
out
dec
dec
shlb
andl
xchg
sbb
cs
mov
clc
fwait
pusha
je
insb
in
fucom
jl
movsb
inc
xor
lcall
cld
cmp
inc
fistpl
out
jb
es
fidivl
or
aaa
addb
inc
fldenv
fldenv
jmp
jmp
inc
add
imul
loope
cmp
rcl
push
push
cmp
iret
aas
lock
daa
scas
in
out
adc
or
or
pusha
outsl
cmp
mov
out
repnz
fstl
rolb
mov
mov
je
imul
jge
out
pop
inc
and
xchg
sti
jecxz
aaa
jb
mov
mov
sbb
jbe
in
inc
inc
sar
cs
xchg
repnz
push
sbbb
imul
jne
pushf
mov
xchg
add
cmp
fisttpl
addr16
jmp
mov
jmp
xor
xlat
loopne
ds
add
out
inc
sub
cmp
push
stos
and
adc
ss
push
scas
ja
rcll
fdivrs
adc
and
adc
out
ljmp
push
enter
fwait
aas
mov
add
xchg
test
rclb
orl
inc
fcmovne
jae
in
popa
insl
mov
sbb
fwait
testl
mov
imul
mov
mov
dec
mov
into
cmpsb
clc
mov
mov
xchg
das
dec
mov
xchg
dec
fildll
shr
insb
cmp
add
repz
lds
rcrl
and
ljmp
or
aas
lcall
incl
out
sub
xchg
hlt
and
insl
rorl
sbb
sub
mov
leave
leave
and
jbe
mov
mov
pop
xchg
in
cld
mov
mov
jae
cmp
xchg
sbb
xor
aam
mov
stc
lret
inc
pop
adc
push
mov
popa
pop
test
mov
fdivs
jbe
loope
mov
adc
iret
ss
sahf
insl
dec
and
scas
xchg
xchg
xchg
std
jbe
mov
out
push
and
sub
add
xor
lret
out
rorl
or
push
inc
flds
and
push
inc
daa
dec
mov
xchg
mov
add
jp
daa
add
pusha
push
in
jne
stc
cwtl
test
jno
inc
loop
and
or
pop
xchg
into
shl
inc
mov
movsl
mov
cmp
scas
fmul
adc
out
push
sub
lcall
std
jbe
push
arpl
xchg
mov
icebp
fstpl
out
cmc
shr
into
fisubl
or
ss
jo
insb
push
dec
mov
mov
xchg
dec
cltd
cli
popa
fdiv
adcb
mov
pop
push
inc
jle
and
popf
and
sbb
leave
mov
xchg
sbb
mov
lahf
stos
add
jne
jmp
cmp
sub
movsb
pop
xchg
adc
xor
js
mov
pop
push
xor
out
or
pushf
repnz
push
cmp
mov
cmp
xchg
jbe
jecxz
popf
push
das
fcoms
mov
sub
ds
outsl
aad
pop
lea
inc
fisttpl
pop
lcall
mov
stos
clc
repz
and
leave
addl
jb
in
mull
xor
data16
cmovbe
fdivrs
das
stc
xor
lahf
push
push
loop
xor
xchg
hlt
leave
out
cmpsl
call
add
jl
push
out
add
sar
test
dec
mov
mov
sbb
mov
shlb
pushf
pop
jne
push
cmc
out
addr16
mov
xor
adc
adc
mov
inc
popa
test
cmp
daa
sbb
mov
mov
dec
fiadds
sub
jno
inc
jo
lcall
jg
loopne
push
dec
push
push
mov
inc
mov
inc
mov
hlt
or
adc
stc
lods
xchg
rcll
aaa
inc
mov
inc
sub
pop
dec
xchg
loope
ss
aas
xchg
jae
hlt
in
cmp
ret
sbb
xchg
arpl
cmp
imul
jmp
jne
mov
sahf
andb
mov
js
pop
sub
adc
cmp
scas
cmp
cmp
lahf
fdivrl
cmp
pop
bound
or
mov
scas
hlt
icebp
es
inc
mov
jb
repz
hlt
mov
test
movsb
add
and
cmp
adc
cmp
mov
mul
push
cmpsb
icebp
push
and
dec
mov
outsl
fdivs
xchg
fidivrl
loopne
jge
test
ja
fs
push
dec
ja
shrb
rcll
imul
lds
cmc
in
sbb
lock
lret
das
jae
stos
cmp
fmul
or
inc
std
ror
sub
mov
push
into
dec
mov
or
aam
int
popl
mov
mov
lea
lods
mov
aaa
push
loope
aam
mov
cli
lret
ljmp
fucomp
push
inc
sbb
cmp
lds
adc
mov
push
jge
push
mov
test
ss
icebp
pop
inc
mov
xchg
push
ret
sbbb
scas
dec
into
mulb
rorl
gs
sbb
mov
or
cmp
out
sti
hlt
int3
sbb
gs
icebp
dec
imul
mov
and
push
dec
push
mov
lds
mov
imul
es
mov
mov
fnsave
sti
out
fs
in
mov
pusha
nop
repnz
mov
std
lahf
test
jb
xchg
sub
xchg
and
or
push
mov
movsb
insl
and
or
mov
int
adc
mov
fldt
pop
fwait
test
dec
and
ja
fdivp
push
mov
jno
scas
and
xchg
in
stos
daa
jns
pusha
cmpsb
addb
cmpsl
cmp
fstpt
inc
inc
fwait
sarl
jl
mov
popf
mov
pop
jle
gs
xor
cli
imul
je
inc
dec
fs
lahf
jb
push
cwtl
hlt
xchg
in
or
jo
push
push
mov
mov
frstor
test
enter
nop
leave
sbb
jl
mov
pop
adc
push
push
and
mov
loope
lods
dec
sbb
push
mov
dec
jmp
pop
add
add
mov
sub
xor
jb
xchg
fbstp
out
mov
jmp
subb
sub
mov
lcall
fsubrs
jge
mull
repnz
push
adc
addr16
xchg
lods
daa
pop
push
push
jle
or
push
rclb
arpl
add
pop
inc
je
xchg
std
xchg
dec
xor
cmp
outsl
inc
das
sbb
outsb
out
sbb
inc
insl
mov
mov
cmc
ds
outsb
adc
xor
nop
jp
mov
xchg
xchg
imul
dec
push
mov
jne
subl
lcall
mov
addr16
adc
cmp
xlat
push
push
aam
dec
aad
sbb
leave
cmpsb
js
mov
rcrl
dec
fisubrs
pop
sbb
mov
inc
mov
bound
cmp
stc
mov
es
les
mov
ss
cli
jle
ficomps
fwait
fwait
lods
xor
imul
out
push
mov
dec
imul
fcoml
dec
push
mov
sbb
adcl
test
fnstcw
or
hlt
outsb
ret
jl
or
dec
in
xchg
fs
adc
add
xchg
test
fstl
inc
push
push
rorl
cmpsl
or
jl
xchg
add
xor
push
mov
inc
jne
xor
push
push
mov
fs
nop
sub
repnz
mov
pop
dec
xchg
js
pusha
xor
lds
decb
int
pop
movsl
sub
mov
cs
xor
xchg
imul
in
sbb
cmpsl
sub
out
xorl
xchg
sub
jae
xor
dec
push
outsl
push
fsts
cmpsl
lret
out
rolb
sbb
fisttps
dec
sub
pop
ss
add
dec
in
dec
mov
cmpsb
lcall
cmp
lea
xchg
or
sbb
pop
or
rcrl
push
stos
iret
add
es
subb
lret
pop
push
fdivr
decl
pop
lea
mov
or
shrl
inc
jae
movsl
cwtl
xchg
mov
push
mov
pushf
test
sbb
bound
inc
and
mov
icebp
je
push
adc
daa
pop
jg
mov
outsb
push
sub
adc
and
or
ret
cmpsb
fst
inc
mov
sbb
cmp
push
and
je
clc
inc
orb
mov
das
mov
adc
mov
sbb
dec
fisubs
insb
imulb
mov
fwait
cli
jmp
pop
test
jo
fsubl
push
dec
mov
adc
mov
inc
loopne
popf
test
not
pop
dec
popa
jnp
inc
and
xlat
xchg
jge
cltd
fwait
pop
mov
and
or
cltd
ljmp
sub
jae
mov
pop
fistpll
cmc
sbb
fwait
push
mov
mov
dec
mov
cmp
mov
jbe
in
and
inc
jae
mov
lods
pop
jmp
leave
es
jg
cld
add
movsb
imul
movsl
nop
inc
jmp
orb
xchg
pushf
aad
jle
sub
test
adc
dec
push
xor
in
jne
mov
mov
sbb
dec
dec
data16
lret
xchg
mov
sbb
shrl
cli
sbb
mov
push
ja
dec
shll
loop
bound
ret
xchg
xchg
inc
mov
clc
mov
pushf
ja
xchg
movsl
push
cmc
shll
scas
stos
push
in
push
mov
int
adc
push
test
jnp
jne
mov
jbe
mov
inc
test
and
jge
in
add
mov
and
outsb
orb
enter
mov
in
cwtl
or
jb
or
inc
enter
adc
sub
jecxz
cwtl
jg
sub
loope
movsb
negb
mov
inc
mov
jecxz
scas
mov
xchg
mov
into
test
or
push
xchg
jns
aam
insb
sarl
inc
inc
dec
loope
fstl
cs
testb
add
js
bound
pusha
or
fs
bound
mov
ljmp
jo
inc
jg
in
pop
jecxz
dec
data16
shl
shlb
cmp
ret
shrb
pop
mov
int3
or
adc
push
push
jmp
mov
add
jo
stos
xchg
push
pop
fs
outsb
mov
pop
flds
jp
mov
in
ret
and
mov
notb
hlt
fstps
inc
add
shll
inc
dec
fs
mov
xchg
mov
jg
lcall
jbe
xchg
sub
jns
pop
repz
xchg
sbb
ljmp
jno
sbb
int3
adc
xorb
push
mov
push
test
or
adc
mov
sub
xor
into
push
cmpl
fdivrp
and
push
cmp
dec
cmp
xchg
iret
leave
loopne
lea
and
pop
sahf
outsb
pop
stc
ret
fcmovnu
and
xor
mov
lods
mov
cld
xchg
cmp
lahf
jp
mov
imul
iret
pop
lahf
and
dec
mov
adc
sbb
adc
mov
jmp
push
inc
cwtl
sub
lds
inc
clc
mov
cmp
dec
pop
mov
mov
sahf
cmp
push
mov
xchg
pushf
mov
in
push
pop
cmp
test
pop
mov
xchg
push
das
ljmp
movb
or
xlat
sub
dec
in
stos
pop
sbb
inc
fstpt
mov
lahf
adc
lcall
push
push
lds
jns
xchg
jns
fwait
push
cmpsb
mov
into
cmp
les
sub
ljmp
or
cltd
push
mov
inc
mov
push
test
repnz
xchg
aad
rorl
jb
mov
stos
jo
xor
mov
or
loopne
aas
sbb
add
xchg
lahf
cmc
and
inc
pop
es
lcall
shll
pop
jmp
cmp
cmc
sub
stc
xlat
jne
sbb
add
mov
repnz
rcl
cmpsb
jp
ss
aad
mov
cmp
mov
cwtl
rorl
and
imul
leave
sbb
jb
mov
in
lods
imul
pop
repz
cmp
call
mov
btc
fadds
dec
movsb
fwait
xchg
aad
cmp
leave
jmp
addr16
xor
jp
push
xchg
cwtl
lock
ja
jl
pop
mov
push
add
bound
sarb
inc
inc
jge
sub
aam
push
ret
dec
add
into
test
cmpsb
dec
pushf
enter
ljmp
jb
lds
lods
out
pop
clc
dec
orl
mov
push
fcmovu
shll
sbb
cmp
jle
inc
cld
xchg
jns
cmp
test
sub
lock
jb
loope
stos
cli
sahf
loope
aaa
xchg
add
inc
xchg
roll
sarl
mov
in
sbb
inc
movsl
rclb
mov
add
push
dec
jmp
out
xchg
jo
dec
mov
cs
loopne
adc
jne
pop
dec
mov
xor
rcl
cmp
adcb
mov
in
in
xchg
adc
mov
xor
sub
bound
push
repnz
cmp
cli
pusha
negb
enter
rol
movb
or
adc
pop
jle
dec
fwait
push
pop
aam
cmpsl
mov
mov
leave
loopne
jae
sbb
sbb
test
xorb
add
cmp
repz
mov
std
adc
or
addps
or
pop
jne
inc
jne
mov
jmp
lcall
fld
daa
scas
sbb
shlb
xchg
lods
rolb
pop
pop
jge
out
xor
in
sahf
or
int3
mov
add
add
jp
mov
js
mov
ficomps
popa
inc
push
sarb
pop
cwtl
mov
mul
lods
lcall
int
mov
js
or
jp
sub
lds
insb
push
cmpsb
shr
adcb
ret
imul
inc
lods
stos
add
mov
push
andl
shll
pop
sar
jns
xor
lods
or
in
push
adc
into
add
es
rcrl
mov
lods
into
xor
loope
subb
add
mov
mov
cwtl
jge
ret
in
loope
xchg
fdivrs
decl
insl
fimull
xchg
movsb
sbb
jne
cwtl
int
lret
lret
cmpsl
and
test
enter
shlb
pop
out
sbb
lret
and
sub
mov
in
es
cmp
sub
xor
inc
lds
out
and
xor
cld
insb
nop
es
or
dec
inc
jg
inc
sti
dec
test
mov
js
inc
sbb
xchg
adc
xlat
aas
push
push
pushfw
mov
nop
pushf
aas
inc
ret
add
lock
inc
push
push
mov
bound
dec
mov
sbb
js
pop
pop
add
or
cld
adc
adcl
and
cmp
jnp
iret
mov
add
dec
xchg
mov
mov
pop
cmp
lret
nop
lods
cmp
lods
lods
inc
pop
cs
scas
sbb
test
push
and
dec
dec
adcl
pop
xchg
jecxz
add
pop
pop
rcr
sahf
xchg
mov
inc
mov
mov
xchg
mul
inc
lcall
inc
and
shll
and
aas
test
xchg
jo
scas
mov
jmp
cmc
mov
lcall
jns
dec
sub
lret
fistl
shrl
lods
jg
sbb
frstor
cmc
daa
jmp
cmpsl
addr16
adc
inc
add
out
adc
mov
aam
or
ss
outsb
jns
shrb
cmc
loopne
in
cmp
lods
xchg
push
repnz
mov
jne
leave
ret
into
or
mov
cwtl
jnp
in
xchg
dec
rorl
js
rclb
rcl
pop
xorb
cwtl
mov
mov
mov
ret
mov
mov
adc
sub
pop
pop
ljmp
fwait
das
into
sti
pop
lods
insb
insl
cltd
lock
or
pop
loopne
push
mov
mov
pop
pop
mov
adc
mov
sub
inc
cmpsb
stc
add
xchg
loopne
push
mov
stos
ds
sbb
mov
fistps
push
inc
rcll
sahf
iret
rcll
add
cmpsb
aaa
sarb
les
movsb
jge
les
movsb
stc
and
mov
sub
xchg
pop
add
xor
push
into
imul
xchg
push
imul
add
push
cli
push
insl
adc
jecxz
fstps
insl
jnp
sbb
mov
ljmp
sub
pusha
mov
icebp
insl
mov
add
xlat
mov
sbb
nop
out
jno
jo
add
inc
sub
movsb
orl
out
aas
xchg
xor
cmpsb
xchg
inc
sub
repz
xchg
mov
fidivs
xor
adc
adc
cmc
pop
pop
loope
jbe
rcll
imul
int3
jmp
mov
pop
pop
push
xchg
xlat
ficompl
adc
test
mov
lds
idivl
inc
pop
dec
xor
ret
adc
jbe
cmpl
or
mov
inc
inc
dec
sbb
insb
dec
cmp
mov
sbbb
xchg
mov
out
xchg
pop
outsb
jl
sbb
xor
jnp
jmp
or
clc
js
jmp
bound
sar
push
dec
int3
sbb
push
leave
dec
jg
into
add
movsb
cmpsl
pop
shl
insb
sub
or
push
mov
dec
lods
sar
dec
fs
pop
pop
cmp
shlb
pushf
loop
mov
and
ja
mov
xchg
cld
outsl
fildll
pop
or
xor
imul
or
cmpb
jg
xor
mov
cmp
das
adc
stos
dec
or
cld
push
pop
shrb
lahf
add
data16
fdivl
adc
push
push
xchg
jecxz
xor
insb
nop
fsubs
aad
pop
lods
stos
arpl
cmpb
data16
and
sbb
out
icebp
mov
sbb
dec
shlb
xlat
cmp
pusha
push
push
push
gs
sub
jecxz
mov
pop
xchg
cld
add
mov
imul
cmp
jmp
iret
cli
call
xor
sub
rorb
ss
fwait
std
lds
out
mov
inc
mov
mov
pop
push
ljmp
and
mov
test
test
ret
or
insl
xor
push
sbb
push
lret
out
sbb
out
dec
add
lds
jg
jp
pop
xchg
stos
xor
push
push
jo
jmp
in
aas
push
inc
pop
pop
mov
fwait
es
xchg
and
inc
pop
xchg
mov
das
adc
xlat
dec
mov
push
add
and
imul
cwtl
test
sub
lcall
sub
jb
out
cmp
and
mov
daa
mov
push
adc
hlt
nop
inc
mov
xorb
sbb
dec
jae
dec
or
inc
mov
inc
inc
mov
pop
and
lock
pop
adcb
call
orps
movsl
mov
sarl
clc
testb
cli
ret
mov
adc
rcll
cwtl
int
dec
cmp
arpl
divl
cmp
pop
fildl
cmp
inc
mov
out
enter
lods
mov
popl
ja
xlat
xchg
stc
add
loope
faddp
add
jl
rcrl
in
dec
repz
repz
stos
pop
adc
mov
sub
insl
or
pop
mov
pop
push
fidivl
fstl
lods
out
imul
push
mov
gs
add
scas
out
cs
js
dec
call
out
push
pop
cli
sbb
cmp
insb
addb
add
pop
cwtl
fwait
ljmp
inc
xor
call
sbb
mov
xor
addr16
push
mov
inc
xor
mov
outsb
jmp
or
lahf
adc
push
and
and
mov
sbb
insl
mov
xchg
mov
pop
or
cmp
insl
cwtl
mov
arpl
fucomi
add
xlat
in
dec
scas
push
push
popf
out
hlt
aam
enter
daa
mov
xor
mov
and
push
jp
shll
andb
push
sub
xlat
lret
mov
xchg
inc
cltd
inc
in
dec
shr
mov
cmpsb
sub
and
sbb
or
insl
pusha
adc
inc
xor
dec
scas
push
je
mov
xor
jp
adc
repnz
je
push
sahf
xor
jge
and
mov
jae
lods
lods
push
int
lcall
or
lret
inc
pusha
jecxz
lret
leave
adc
ret
mov
int
out
jo
mov
add
push
sbb
fdivl
adc
std
dec
pop
jmp
jne
and
add
shlb
fisttpl
hlt
aas
aas
bound
orb
add
enter
shlw
lds
fdivl
jno
repnz
push
lods
or
jo
push
cmp
cs
mov
add
xchg
popf
leave
inc
ljmp
lret
int3
js
gs
lahf
mov
pop
lock
cltd
jl
cmp
cmp
xchg
test
mov
shrb
scas
test
cld
or
mov
and
jbe
mov
jbe
lret
pop
test
or
ljmp
mov
lahf
das
loopne
cltd
test
fsubrl
or
outsl
addl
mov
fwait
syscall
jg
inc
cmp
adc
arpl
inc
mov
test
data16
pop
dec
inc
loopne
jp
cmpl
dec
xor
mov
bound
mov
imul
test
cmp
inc
imul
test
imull
incb
cmp
scas
adc
test
cld
imul
dec
sbb
and
cmp
ret
pop
cmp
fs
mov
outsb
sti
adcl
inc
js
or
jmp
icebp
dec
mov
jae
xor
imul
scas
or
mov
push
push
jns
aad
jae
push
mov
sti
xchg
adc
aas
int3
jge
fcomps
mov
arpl
fwait
lcall
cs
insb
test
cli
add
pop
fnsave
adc
lock
in
inc
mov
lods
ds
mov
aad
dec
stos
cmpsb
nop
scas
sub
decb
imul
inc
jmp
and
add
gs
push
pop
and
mov
adc
jnp
push
jge
imul
ljmp
jmp
sbb
mov
out
push
jae
sub
or
xchg
cmp
loopne
jno
pushf
in
add
imul
push
ds
imul
xchg
lock
xor
loope
inc
lds
dec
mov
adc
mov
cmpsl
or
ret
ja
addr16
testb
and
jae
inc
stos
aas
mov
mov
jbe
sarb
mov
mov
xor
js
pushl
xchg
and
push
jmp
sbb
jns
lods
outsl
or
cmpsl
and
fmull
jns
add
outsb
push
out
mov
inc
rcll
leave
cld
adc
popa
int
cmp
gs
or
push
cmp
sub
out
test
inc
mov
cmc
arpl
mov
adc
int
or
push
or
xor
pushf
sti
xchg
dec
fwait
aas
outsb
imul
adc
lods
decl
rcll
jle
xchg
or
sbb
sub
addb
fdivr
cs
repz
out
pop
jo
mov
sbb
mov
sub
ss
sbb
movsl
add
xchg
cmp
std
mov
adc
insl
hlt
sub
scas
clc
mov
inc
aas
mov
xor
jnp
mov
sahf
div
mov
movsl
hlt
sub
popa
dec
jno
cltd
mov
fnsave
mov
icebp
sub
loop
sbb
pop
or
push
or
push
adc
sbb
nop
fcomps
cmpsb
jo
clc
mov
enter
int
sub
lds
gs
mov
incl
xor
imul
jle
xchg
push
sahf
stos
mov
mov
pop
sbb
sub
add
xchg
aas
mov
mov
sub
cmpxchg
inc
add
pop
jne
ret
sti
fisubl
pop
or
push
xchg
xchg
out
inc
mov
mov
inc
push
in
xchg
push
mov
add
pop
mov
push
rcl
out
inc
fs
push
insl
inc
inc
sub
test
mov
jmp
pop
test
mov
imul
xchg
adc
sbb
daa
dec
outsb
out
ret
fnstsw
jno
push
sub
cld
stc
add
adc
pop
sub
call
push
dec
lret
sub
mov
jmp
cmp
mov
and
adc
dec
xchg
jecxz
arpl
mov
jae
sarl
insb
add
sbb
mov
cwtl
cmpsb
sub
outsl
xlat
mov
or
adc
jae
adc
pushf
cmp
pop
sub
ja
sbb
inc
outsb
negl
lcall
test
hlt
xchg
push
and
adc
jno
cmp
movsb
mov
int
dec
adc
dec
jl
insb
push
jae
cli
fimull
mov
out
pushf
stos
testl
test
xchg
cmp
mov
pop
aaa
cld
jmp
mov
push
jl
outsb
push
lret
out
or
mov
sub
cld
scas
imul
jecxz
call
or
mov
sub
push
roll
out
lcall
addr16
cli
stc
pop
dec
les
inc
or
addr16
adc
xchg
int
dec
xchg
nop
pop
js
mov
cmpsb
loope
imulb
add
jecxz
test
fsub
xor
xor
cmp
xchg
es
shr
mov
aas
iret
stos
mov
push
pop
sub
daa
adc
popa
sub
jge
inc
inc
mov
xor
push
idivb
lods
movsb
sub
lods
movsb
sub
mov
je
lcall
test
ljmp
mov
aaa
or
sbb
push
cmp
mov
inc
test
clc
seta
ljmpw
vphadduwd
jns
cmpsb
push
mov
sbb
enter
mov
data16
jle
cli
xchg
addb
js
jbe
cmp
xchg
stc
hlt
aam
cmpsb
pop
cmpsb
fcoml
adc
test
inc
push
neg
or
jae
scas
sti
imul
daa
xor
mov
pop
adc
sub
cld
popf
xor
jmp
jp
mov
dec
mov
fldl
mov
lahf
pop
xchg
loopne
subb
or
movsb
or
dec
into
jecxz
lods
pop
decl
mov
roll
mov
cmpsb
inc
lods
aaa
cmp
insl
xor
ficompl
cmpsb
fiaddl
jo
fsubrp
mov
push
jo
dec
inc
ret
push
mov
jne
push
push
movsl
fs
mov
mov
lock
cltd
std
outsb
sbb
adc
sahf
cmp
cmp
xor
xchg
rorb
out
add
shl
je
ret
out
pop
daa
inc
push
sub
lock
mov
mov
dec
aas
in
inc
or
sahf
cs
lock
push
jge
shr
cs
rcl
dec
jns
pop
jecxz
cmc
les
gs
or
outsl
and
repz
inc
fidivs
filds
jnp
mov
roll
mov
or
adc
mov
mov
mov
lds
movsl
xchg
xchg
xlat
add
mov
testl
mov
dec
ja
and
gs
and
hlt
in
ucomiss
negb
or
sub
mov
movsl
mov
mov
les
bound
movsl
and
aam
stos
push
mov
mov
sahf
adc
push
inc
in
pusha
mov
fimuls
mov
xor
mov
xchg
push
fiaddl
test
pop
mov
sub
xchg
and
cmp
jae
shrb
call
neg
mov
pushf
rorb
and
add
sbb
mov
rorb
xor
cmp
icebp
xchg
aas
push
les
or
cmc
mov
mov
cmp
sarl
repnz
pmaxsw
hlt
inc
adc
push
sar
shl
mov
pop
gs
mov
icebp
cmp
jne
fldcw
sti
cmp
aas
xor
mov
pop
cmpsl
fmuls
mov
std
loopne
xlat
cmp
or
daa
aas
jb
insb
adc
inc
push
loopne
les
insl
xchg
int
daa
iret
xor
push
pop
mov
cmpsb
or
enter
pop
outsl
pop
inc
fdivr
outsb
xor
fidivs
dec
lret
xchg
pop
sahf
rorb
inc
adc
mov
adc
cwtl
aad
rorl
gs
ficompl
dec
adc
je
sub
or
lret
push
cmp
in
xor
jno
cltd
mov
sbb
jns
dec
sbbb
sbb
mov
cmp
cmp
or
jnp
stos
xor
or
sti
fisubrs
icebp
in
pop
fcomip
xchg
or
loopne
xor
outsl
inc
pop
fnstsw
push
add
test
aaa
into
rol
enter
adc
push
les
sarb
mov
sbb
dec
popf
adc
push
inc
add
mov
or
sub
pop
repz
push
push
ja
cmpl
push
int3
jecxz
push
xchg
cld
imul
lea
xchg
ret
xchg
mov
leave
movsl
mov
mov
lods
jb
mov
into
xchg
lods
and
popf
and
pop
cmpsb
cmp
mov
push
je
pop
inc
xchg
xor
sbb
fisttpl
iret
pop
cmc
mov
and
jne
aaa
cmc
mov
pop
mov
push
push
sbb
data16
ljmp
fs
lea
in
je
cwtl
imul
push
sbbl
out
inc
sbb
or
jecxz
mov
cmpsb
lea
pop
popw
rclb
imul
or
lret
jno
mov
ss
loop
mov
pop
mov
xor
in
pop
sub
fs
pop
lock
adc
out
dec
pop
sahf
gs
push
pop
jle
dec
std
push
pop
mov
mov
lcall
dec
in
jecxz
enter
sub
sbb
dec
sbb
imul
xchg
and
inc
cmp
int
xchg
cwtl
adc
inc
or
cmp
std
xor
pop
lds
repnz
push
xlat
mov
lret
icebp
push
push
pop
push
mov
leave
jnp
add
jmp
push
je
sub
mov
and
sbb
je
xchg
enter
mov
xor
or
call
mov
sub
mov
inc
enter
sti
ljmp
pop
fbld
or
scas
push
cmp
lea
mov
lret
xor
jbe
inc
dec
out
insl
test
jbe
data16
cltd
xchg
push
add
std
or
inc
mov
sahf
jmp
xor
dec
xlat
push
sbb
adc
inc
shrb
std
pop
arpl
ds
mov
dec
sbbl
jb
lcall
mov
and
cmpsl
sar
les
or
rep
les
mov
adc
pop
add
in
sub
shrl
push
insl
jg
out
cmp
jns
inc
aam
pusha
or
push
clc
xchg
cmp
das
cmp
movsb
icebp
jp
mov
test
push
scas
mov
cwtl
adc
shlb
or
mov
mov
jge
in
or
cmp
jbe
call
cmp
adc
push
adcl
loopne
sbb
filds
lahf
push
xor
mov
ds
pusha
add
xchg
inc
cltd
loopne
mov
daa
sub
jo
out
mov
mov
fs
xchg
mov
arpl
imul
add
cmpsb
cmp
inc
arpl
push
xchg
xchg
lods
adc
shl
jno
cmp
cmc
pop
shl
orb
icebp
add
sbb
xor
mov
pop
xorb
nop
into
mov
inc
pop
call
mov
lds
mov
push
mov
jmp
jecxz
frstor
popa
dec
xchg
adc
andb
sub
jns
fstl
adc
add
std
sbb
lds
loop
jae
jb
repz
orl
cli
xchg
mov
daa
hlt
pop
ret
into
push
cs
insl
and
adc
call
popa
cmpl
repnz
jp
sub
hlt
dec
test
jle
scas
push
jnp
dec
mov
adc
xor
not
mov
pop
cwtl
jmp
adc
cmc
mov
rclb
mov
xchg
adc
mov
jg
dec
sub
negb
and
lcall
fidivl
cmp
lea
mov
adc
inc
ja
or
sub
push
lods
lret
call
or
xchg
add
cmp
mov
and
mov
in
and
pop
dec
pop
pop
xchg
mov
pusha
jo
imul
mov
adcb
xlat
pop
in
fwait
ljmp
push
iret
cltd
ret
or
sar
jg
push
pop
inc
push
hlt
std
mov
or
lods
mov
sbb
inc
push
xacquire
mov
leave
mov
fwait
sbb
sub
push
push
cmp
lcall
ret
xchg
mov
lahf
dec
lods
mov
sub
adc
cld
stos
ds
stc
xor
xchg
mov
and
dec
shll
pop
pop
pop
cmc
shll
jb
cmovb
pop
sub
hlt
insb
in
sub
in
push
adc
cmp
leave
mov
addr16
cltd
sub
mov
push
popf
fwait
mov
xchg
fcompl
popf
js
fldl
repnz
nop
sbb
inc
sbb
pop
or
sbb
xchg
es
xchg
mov
mov
test
pop
jl
je
and
mov
icebp
outsl
shlb
andb
stos
imul
sub
cmc
daa
xchg
test
xchg
sbb
add
jne
sbb
std
lods
sbb
out
sbb
adc
dec
aas
sti
jecxz
sub
or
lahf
scas
ja
pop
push
ds
xor
into
pop
lds
and
rol
icebp
js
jne
int
jo
lret
or
fisttpll
mov
faddl
inc
jp
out
rclb
cmp
fsubr
cmp
xor
xchg
inc
cmp
pop
xchg
inc
adcl
mov
shl
icebp
mov
fmuls
mov
int3
cmp
adc
cmpsl
popf
mov
sbb
cmp
jb
shlb
outsb
xor
mov
cli
imul
jb
fdivrs
roll
clc
test
jnp
cmp
and
jmp
adc
xchg
or
or
das
sbb
lds
push
aas
rcl
cmpsb
push
fbstp
sahf
dec
inc
stc
add
xchg
mov
mov
sbb
pop
orl
inc
icebp
fmuls
std
loopne
fwait
pop
pop
pop
pop
and
popa
jae
aad
outsl
and
mov
lock
adc
lret
adc
into
pop
mov
push
cmc
adc
xor
cli
push
cmpsb
mov
mov
hlt
loope
add
or
xchg
mov
aad
pop
out
scas
ljmp
jb
lret
xchg
sti
adc
nop
test
xor
out
xor
test
or
in
inc
adc
lock
iret
aas
inc
sub
sbb
xor
fwait
inc
push
aam
and
fwait
dec
cltd
jl
shll
in
mov
shlb
or
nop
push
sbb
add
nop
lock
cld
jp
pop
out
add
ss
andb
sbb
jp
rcrb
test
bound
loope
jge
lea
cmpl
dec
ret
sbb
sub
test
ds
mov
loopne
cmp
or
inc
insb
push
inc
jg
flds
inc
xchg
repz
ja
inc
cmp
lcall
in
ficoml
xchg
popf
cmpl
sub
out
dec
push
sub
lock
test
sub
out
aad
repnz
cltd
fdivl
xchg
int3
movsl
adc
or
rcrl
adc
in
ds
cli
or
mov
mov
xchg
add
movsb
and
mov
adc
pop
pop
pop
jno,pn
movsl
xchg
scas
or
xor
mov
inc
and
lods
adc
cltd
cli
jae
jle
pop
in
jecxz
pop
xor
cmp
adc
mov
sub
mov
jns
or
jae
mov
nop
adc
mov
jb
inc
mov
icebp
and
cmc
mov
mov
mov
and
loope
jns
push
dec
bound
sub
push
sbb
loopne
loopne
sbb
add
xor
adc
mov
bound
sub
aam
inc
pop
mov
int3
push
int
loope
pop
adc
je
mov
mov
icebp
dec
outsl
dec
addb
stc
int3
mov
cmp
jae
ljmp
movsl
stos
mov
add
popf
add
cmpsl
xlat
lock
outsb
daa
jl
or
mov
mov
ljmp
inc
push
in
outsb
imulb
fwait
cmp
neg
add
push
aaa
cmp
dec
push
imul
leave
dec
cmpsl
stos
in
push
pop
and
loop
mov
pop
lea
adc
inc
cwtl
popa
jle
std
inc
cmc
rclb
sub
mov
fs
cmp
and
sti
push
jmp
push
inc
sti
pop
add
sub
add
adc
rcrl
mov
std
mov
jle
dec
sbbb
rcrb
mov
adc
cwtl
jbe
lea
cmp
ds
inc
jg
movsb
dec
pop
test
outsl
xchg
nop
jle
xchg
pop
xchg
adc
inc
mov
inc
jle
sbb
scas
cmp
aas
int3
mov
movsb
xor
jl
stos
jl
jp
daa
les
bound
cmc
jecxz
jp
stos
dec
aam
jge
and
fstp
dec
jae
push
call
stos
sti
mov
je
xor
jne
add
or
push
lret
ss
pop
sub
addr16
jmp
pusha
js
xchg
xchg
pop
cmc
sahf
sub
push
gs
adc
mov
lods
push
fidivs
std
rcrl
cltd
stc
xor
pop
mov
pop
adcb
shrb
xor
dec
imul
arpl
sbb
mov
xchg
enter
push
stc
hlt
sub
mov
push
mov
orl
arpl
aaa
push
sarb
imul
xor
jae
bound
hlt
inc
nop
xlat
aaa
in
popf
test
add
xlat
jno
pop
scas
cmp
lock
stc
loop
push
leave
pop
dec
insl
int3
clc
mov
xchg
outsl
dec
dec
loopne
ja
aaa
fwait
adc
adcb
pop
add
xor
shrl
adc
rorl
or
or
outsb
xchg
push
data16
or
push
mov
rclb
popa
scas
sbb
insb
cltd
enter
mov
cmc
add
lods
sub
lods
cmp
add
or
pop
cmp
fisubrl
xchg
mov
cmp
das
imul
outsb
add
notl
fnstenv
fs
sahf
inc
in
test
or
dec
outsb
es
mov
xchg
stc
push
xlat
xor
xlat
aaa
xor
push
pop
push
pop
or
jo
xor
inc
push
js
sbb
mov
push
das
pop
xor
add
and
mov
in
jno
addl
js
inc
sub
push
mov
mov
sti
pop
out
mov
mov
push
adc
movsb
xchg
mov
sbb
pop
xor
daa
push
jmp
rcrl
jnp
insb
leave
sub
add
or
or
std
xchg
mov
jae,pt
lret
and
imul
test
fidivrs
add
pop
out
std
xchg
loop
or
in
sbb
popf
mov
orb
pop
scas
add
sbb
scas
sbb
dec
cmp
fldl
mull
cltd
pop
sub
cmp
lds
sbb
aam
int
xchg
xor
orl
fs
dec
rcll
xchg
shll
pop
notl
and
mov
mov
sbb
or
xor
sbb
and
inc
popf
xchg
popf
aam
or
sub
in
sub
rcll
mov
sti
inc
cmp
push
xor
mov
or
jmp
pop
push
pusha
mov
int3
imul
dec
or
fldenv
mov
out
test
pushf
outsl
leave
sub
or
js
push
mov
jne
adc
pop
sub
pop
cmp
pop
dec
orb
rclb
test
pop
mov
in
scas
jge
sbbl
ds
outsb
test
decb
popf
outsl
faddl
mov
sbb
pop
stos
popf
and
and
jo
xchg
push
sub
jae
xchg
adc
adc
ds
out
lock
cld
xchg
stos
arpl
out
pop
dec
add
mov
out
dec
out
nop
push
xor
aad
and
mov
aam
into
mov
sbb
nop
push
mov
movsl
pop
leave
mov
movsl
insl
mov
xor
incl
sbb
and
dec
and
or
xor
jp
out
xor
xor
imul
lds
lahf
jb
sub
pop
sbb
stos
mov
movsl
outsb
stos
add
push
stc
divl
ss
rcll
mov
cltd
sarb
dec
icebp
mov
sarb
in
cli
sbb
call
lods
lods
or
cmpsb
je
cmp
movsb
pop
xor
cmc
xchg
cld
cmp
sub
fs
pop
sbb
adc
inc
insb
ss
cld
rorl
nop
dec
ret
mov
pop
mov
sbb
enter
out
push
fdivl
jecxz
nop
xchg
lds
push
add
xor
ret
pop
adcl
lcall
jne
adc
lock
mov
jne
imulb
pop
mov
mov
mov
jns
or
enter
pop
mov
xor
xchg
std
jecxz
sahf
dec
ret
lods
push
jne
out
sbb
pusha
cltd
stos
popa
and
mov
sub
inc
lea
xlat
repz
push
fnstcw
push
in
and
inc
shl
fadds
into
jecxz
out
js
sahf
enter
or
ret
inc
mov
cs
or
cwtl
movsl
imul
sbb
cltd
jbe
pushf
push
filds
movsb
fs
ljmp
loope
sarl
lea
mov
mov
mov
insb
dec
pushf
gs
xor
lods
add
add
adc
sub
sub
into
jge
lahf
sbb
xchg
rcll
push
cmp
xor
testl
ja
inc
enter
dec
es
andps
cs
and
xor
cmp
dec
inc
mov
push
mov
adc
dec
lcall
ret
int
std
inc
push
clc
lcall
repz
lcall
lahf
lds
dec
and
mov
clc
stos
mov
pop
sbb
sbb
cmp
roll
mov
or
insl
jns
add
pop
cmpsl
push
jmp
mov
sub
iret
mov
dec
movsb
dec
out
mov
xchg
rcrl
scas
popa
cltd
sbb
jo
push
scas
mov
pop
add
fnstcw
inc
out
stc
adc
mov
iret
jo
push
jb
xor
jg
shlb
sbb
loope
std
hlt
xchg
xchg
pop
out
mov
mov
push
cmp
insb
dec
mov
stos
loope
adc
add
lcall
push
cmp
shlb
mov
push
out
in
mov
and
push
sbb
je
add
fwait
inc
jb
push
sbb
add
repnz
sbb
leave
jno
pmulhuw
mov
mov
pop
cld
cli
mov
xor
mov
out
arpl
enter
jnp
shll
jbe
jle
sbb
xor
xchg
xor
add
lahf
repz
movsl
cmp
mov
cmc
and
mov
inc
sub
pusha
jg
add
xor
mov
int
test
sbb
ds
mov
xor
jo
imul
out
movsl
xlat
rclb
rcrb
cmpsl
rcrb
outsb
mov
dec
lahf
and
inc
cmpsb
push
nop
rcl
stc
dec
pop
shlb
push
mov
jnp
adc
js
int
xchg
push
inc
push
xor
mov
sub
mov
and
and
push
push
mov
mov
mov
push
sbb
shl
data16
ficompl
repz
xor
or
mov
add
jg
push
jae
loop
mov
adc
push
sub
stos
lea
push
fs
xchg
out
add
and
mov
test
idivb
hlt
pop
add
xchg
enter
fildl
or
pop
sbb
inc
push
dec
ss
mov
jne
mov
xor
jae
pop
rorb
gs
test
fstpt
cmpsb
jge
sub
fldcw
gs
mov
out
lret
lea
icebp
mov
add
push
and
push
jp
adc
sbb
xchg
gs
leave
xor
lods
lea
loopne
addr16
sbb
mov
adc
out
xor
cmc
int
jle
xchg
adc
test
jnp
aas
mov
cmp
hlt
cbtw
ret
adc
or
dec
in
mov
mov
fstpt
fbld
sub
jb
mov
aas
fstpl
ja
pop
adc
sti
sub
fs
js
cs
lock
sub
mov
xlat
pop
mov
loopne
imul
and
mov
dec
pushf
popl
lds
adc
cmp
sbb
popa
inc
mov
sub
cmpb
cs
mov
popa
in
push
jb
rol
lods
ljmp
ja
or
push
lret
adc
loope
popa
int3
cmp
icebp
shl
xchg
jb
rcrb
cld
pop
sub
push
test
push
xor
or
ljmp
pop
mov
and
es
mov
sbb
int
stos
mov
outsb
gs
iret
sbb
jo
xor
insl
idivb
jecxz
fwait
jecxz
cli
or
call
or
test
leave
insb
add
cwtl
cmp
inc
xchg
inc
cmpb
sub
sub
mov
popa
mov
mov
fcoml
sbb
jb
dec
test
ljmp
adc
ds
push
inc
push
aad
hlt
pop
ds
sub
insl
pop
or
daa
adc
xchg
pop
mov
orl
push
mov
rorb
pop
and
aad
xchg
jne
lret
sbbl
push
popa
xorb
cmp
cmp
pop
movsl
jmp
ss
cltd
test
gs
pop
nop
mov
push
sbb
jbe
imul
fisttpll
cwtl
pop
loopne
xchg
stos
jno
mov
mov
aad
aam
push
cli
fwait
xor
mov
hlt
cwtl
hlt
add
ficoml
sbb
int3
push
shr
cmpsl
sbb
cs
call
or
jecxz
insl
jg
and
popf
in
xlat
rcl
adc
jae
aad
sbb
add
xor
cli
xchg
xchg
xorl
jae
fdivrs
or
sbb
push
jb
mov
jb
xchg
sub
fstpl
dec
push
cld
sahf
into
std
loopne
pop
sbb
arpl
pop
lea
cmp
leave
jae
mov
push
in
xor
dec
ret
mov
jns
xchg
ss
xlat
and
lahf
in
test
dec
pop
xlat
negl
mov
sbb
jo
icebp
dec
fwait
xchg
es
and
aaa
daa
ret
add
lahf
aad
xchg
aaa
dec
push
xchg
pop
pop
loopne
mov
notb
lret
xorl
pop
or
and
sbb
mov
sbb
or
outsl
sbb
movsb
sub
add
aam
mov
sbb
and
popa
mov
or
std
push
add
stos
test
faddl
mov
shl
ret
into
pop
xorb
loop
cli
or
xchg
ljmp
cmpsl
push
aaa
pop
lds
adc
sbb
das
in
sahf
pop
xor
ja
push
mov
xchg
push
ds
call
xchg
push
jge
sahf
jne
cmpsb
mov
lahf
mov
jp
cmp
fists
out
repz
psubusb
jns
pushf
insl
and
and
xchg
xchg
jge
insl
cwtl
jns
push
jmp
xchg
fmuls
test
xchg
shll
xor
mov
push
loopne
fcmovnb
jb
adc
mov
push
mov
mov
jecxz
data16
bound
jne
push
inc
push
ds
gs
push
bound
fisttpl
dec
jle
test
push
add
mov
sub
sub
xchg
add
jl
and
hlt
and
pop
hlt
aad
cmpl
mov
lcall
xchg
push
call
std
dec
ficomps
push
sbb
lock
daa
jp
mov
cmc
aad
jne
cmp
popa
mov
and
and
xchg
outsl
iret
xchg
push
fdivr
adc
pop
loope
out
stos
andb
mov
data16
cli
xchg
mov
cmpl
sbb
popa
stos
dec
daa
fldt
insl
fdivs
std
xchg
aam
repz
adc
fs
decl
or
and
fdivl
add
or
cwtl
inc
mov
aaa
sub
sbb
mov
jecxz
pop
pop
cmp
les
aaa
xor
xlat
jne
mov
mov
xor
adcl
cwtl
shrb
cmp
and
stos
adc
in
xchg
fsub
inc
les
cmp
jle
mov
jecxz
cmp
add
sbb
out
pop
hlt
pop
nop
ret
daa
in
mov
mov
cli
call
ja
dec
fwait
decl
push
push
add
data16
xlat
inc
jns
data16
jl
add
fs
daa
loopne
dec
inc
mov
outsl
jp
xchg
and
xchg
push
jae
ret
push
leave
inc
inc
cmpsl
cltd
jp
cmp
cmp
xchg
sbb
sub
or
jecxz
in
or
stc
push
adc
dec
sti
cmpsb
jb
test
shl
push
jnp
xor
pop
jp
std
ret
pop
pop
test
aas
out
push
movsl
dec
ret
leave
lea
dec
xor
or
mov
ret
push
mov
enter
mov
push
popl
jae
and
lahf
dec
mov
inc
insb
negl
mov
les
cwtl
rorl
push
cmp
push
xor
clc
or
pop
ljmp
and
add
cmpsb
sub
jg
popf
jae
imul
mov
sub
push
sub
ljmp
cli
shll
fisttpll
jnp
loope
sub
testb
leave
test
or
and
push
inc
mov
cwtl
pop
dec
xchg
into
inc
out
mov
lret
sub
sarb
xor
sub
scas
adc
xchg
xchg
and
cwtd
mov
ja
rcrl
inc
sbb
push
mov
sbb
mov
sbb
jb
bound
lret
pop
test
mov
sub
inc
jbe
pop
movsb
dec
in
repnz
fcomps
cs
cmpsb
pop
fs
or
sbb
cmpsb
jnp
fisttps
leave
inc
jbe
cltd
pusha
repz
add
xor
or
pop
jge
and
popf
xor
fdivl
cld
mov
xchg
cs
fdivl
stos
xor
stos
pop
out
mov
mov
stos
insl
mov
jno
imulb
lds
std
pop
mov
cs
js
sar
mov
js
hlt
test
lea
ret
in
and
jg
add
push
call
sahf
push
mov
adc
lcall
add
scas
xchg
push
lfs
pop
into
loopne
in
mov
fistl
shl
push
pop
inc
decl
hlt
mov
popf
pop
incl
call
sub
inc
xchg
xchg
popf
lahf
js
fnsave
xor
xchg
outsb
pop
rcl
pop
mov
inc
out
jp
cld
call
cmp
hlt
cs
jno
inc
jbe
pop
clc
lret
inc
scas
push
and
push
jnp
lds
aam
pushf
insb
push
std
sti
or
push
jns
xor
jns
rol
stos
mov
enter
mov
aad
pop
jnp
je
movsl
sub
add
mov
dec
mov
push
mov
mov
lgdtl
enter
dec
sbb
cmp
fadd
mov
add
enter
rcrl
mov
sbb
loop
sub
xchg
rorb
movl
jmp
mov
mov
xchg
xchg
mov
jle
sub
inc
test
sbb
jns
sub
dec
pusha
cmp
sbb
cmp
ret
xchg
adc
aaa
aas
jbe
ds
aad
add
mov
imul
push
add
mov
or
xchg
fnsave
pop
scas
push
out
mov
or
push
jo
pushf
jmp
sarl
fistl
aaa
loope
xchg
or
loope
dec
aaa
mov
int
ret
sbb
pop
xlat
inc
jg
out
mov
adc
mov
xchg
data16
ret
icebp
mov
add
rol
fldcw
int
jle
ret
mov
pop
test
inc
test
jge
int3
pushf
push
jge
mov
xchg
mov
fldenv
add
sbb
fstpl
popa
inc
sub
pop
dec
sub
addl
sbb
in
mov
outsl
and
sbb
and
iret
dec
into
jmp
stos
cltd
pop
sub
add
mov
aaa
and
sar
mov
pop
ljmp
arpl
jns
fs
sub
and
outsb
adc
pop
addb
add
dec
and
cltd
frstor
sahf
pop
add
cmp
jmp
mov
dec
add
jl
or
shrl
popf
inc
sub
jno
xor
popa
jecxz
out
dec
out
in
stos
push
mov
push
mov
cmp
xchg
mov
sahf
adc
and
mov
jo
es
mov
mov
jmp
push
lahf
jge
hlt
push
lcall
xchg
add
dec
jbe
mov
jle
lahf
mov
jle
xchg
or
mov
jo
and
mov
jl
cld
insb
sub
mov
sti
xchg
into
mov
shr
test
or
hlt
in
xchg
sbb
inc
dec
jb
and
xor
sub
and
push
inc
lods
pop
fnsave
xchg
xchg
mov
mov
insb
inc
cwtl
inc
sub
pop
xchg
adc
nop
cmp
cmpl
lret
rclb
shll
test
mov
popa
inc
sti
pushf
in
lcall
cmpsl
xchg
imul
inc
mov
jb
aam
addr16
xchg
mov
iret
mov
clc
add
sub
les
sub
stc
lods
fs
sbb
pop
mov
testl
pop
jp
jecxz
mov
push
cmp
shlb
jmp
cmp
mov
dec
jne
cmpb
incl
mov
xor
mov
inc
out
jne
xor
rorb
dec
aam
sahf
pop
mov
dec
cli
sub
cmp
aaa
hlt
add
sub
iret
xor
ret
sbb
aad
xchg
lock
push
mov
xchg
ljmp
dec
jno
sbb
or
hlt
out
dec
sub
gs
lret
idiv
mov
in
push
cmc
ret
push
inc
test
in
xorl
mov
mov
aas
xor
cld
inc
data16
or
mov
imul
scas
lret
daa
add
ret
xor
sub
shll
shl
pop
mov
rorb
in
outsb
inc
hlt
gs
inc
xchg
jp
outsb
adc
cmp
or
fisubrl
dec
out
lock
shrb
popl
inc
adc
pushf
mov
dec
lcall
out
cmp
sarl
inc
clc
mov
lods
mov
xchg
out
xor
mov
and
scas
mov
dec
pop
inc
testl
sub
ret
cmpsb
arpl
popf
jge
inc
aam
sub
repnz
jo
push
repnz
into
or
mov
xchg
call
and
mov
jl
testl
repz
cld
sti
push
lock
jno
out
subb
clc
int3
xchg
ret
mov
icebp
nop
sbb
inc
inc
loope
jb
dec
mov
push
ja
push
jns
sbb
mov
dec
xor
push
jbe
int
imul
mov
addl
lods
outsl
lock
fbld
pop
jg
xor
mov
cmp
pop
jo
stc
adc
dec
js
xor
call
roll
cmpsl
fs
fdivr
rorb
and
jl
stc
ficoml
scas
cmp
dec
lock
fs
inc
rorb
insb
int3
push
ficoms
dec
push
inc
xor
rcrb
aad
xchg
jecxz
inc
cmp
jl
cmp
in
xorl
outsl
inc
das
add
lcall
inc
sub
mov
dec
push
cmp
and
inc
adc
jecxz
xor
sbb
jns
sub
mov
push
aad
pop
shrl
in
bound
mov
adc
push
mov
test
cmpb
mulb
or
rclb
sub
or
loopne
push
mov
pop
push
pop
leave
ss
lret
in
or
dec
in
mov
inc
movsl
and
test
pop
nop
cld
cmp
je
sarl
jle
mov
in
mov
push
mov
cmp
clc
jns
sub
data16
das
mov
stos
inc
int
aad
jmp
dec
mov
add
sbbl
xchg
jnp
inc
sub
mov
movsl
add
pop
xor
fs
sub
adc
sub
aas
fstpt
in
and
cmp
call
jo
pushf
sub
push
movsb
fxch
adc
fldcw
sub
insb
jo
sarl
out
cs
dec
xchg
cmp
imul
sbb
mov
add
lds
mov
jb
jb
cltd
cmp
das
sbb
js
pusha
sarb
pop
push
sub
int3
push
aam
mov
xor
pop
repz
mov
dec
sub
and
cmp
push
repnz
pop
sub
lahf
aam
cmpb
jo
shrb
sbb
mov
jg
lds
fidivl
mov
jp
sub
and
push
mov
xlat
jno
dec
and
add
int3
cmp
ss
jb
insb
jl
repz
add
call
orl
and
xor
out
addl
jle
imul
mov
jns
adc
xor
mull
cmp
negl
jg
sub
mov
arpl
push
movsl
icebp
xchg
lcall
ret
push
push
mov
insl
ror
mov
xor
sub
scas
xchg
adc
mov
test
fmuls
addr16
or
in
and
xor
and
xor
add
xorl
fnstcw
arpl
mov
lods
gs
xchg
push
insl
cvtdq2ps
push
fs
rcrb
insl
jne
inc
xchg
xor
ret
adc
mov
ds
mov
inc
repnz
or
mov
xlat
pop
repz
movnti
or
int
cmp
push
and
lret
add
sahf
or
fmull
xor
mov
lds
sbb
inc
movsl
fisttpl
dec
call
cwtl
lret
jo
xchg
popa
lret
and
sbb
scas
in
ss
dec
pushf
inc
stos
in
pop
test
adc
out
inc
add
xchg
fstpl
pop
xchg
loop
bound
adc
and
xor
push
cltd
jno
loopne
ja
dec
popf
clc
outsl
add
push
fcomip
cmp
sarl
mov
xchg
das
or
sbb
stos
or
jns
cmp
xlat
push
mov
sub
xor
jge
cli
enter
mov
add
fisubs
sti
xchg
dec
in
cmp
pop
sahf
pop
fwait
mov
aad
inc
inc
dec
and
cmp
cmp
nop
ficoms
stc
or
xor
xor
cmp
push
mov
inc
dec
movsl
xchg
clc
dec
mov
lret
insl
test
xor
xchg
shll
or
and
xor
inc
push
push
dec
cmpsl
adc
cs
movsl
sbb
inc
ljmp
and
lods
test
and
jecxz
idiv
xchg
or
ss
dec
push
and
int
mov
cmp
jae
mov
in
inc
jb
or
jl
fs
inc
adc
cli
test
inc
cmp
push
mov
daa
mov
sub
pop
sti
push
jmp
jmp
aad
push
sub
or
xchg
sbbb
stos
sub
push
aad
aas
xchg
jb
and
cmp
fidivrs
jnp
xor
mov
aaa
adc
jmp
or
faddp
fimuls
lret
sub
fdivs
mov
or
fs
bound
sub
mov
xchg
ljmp
adc
repz
cmp
mov
ret
or
mov
ss
push
jp
cmpsl
jae
mov
jecxz
cmpb
out
dec
insl
in
ja
pop
xchg
movsl
mov
movb
fcoml
out
inc
stos
push
lcall
aam
repz
xchg
out
orb
push
mov
mov
in
dec
or
add
push
rcrb
lahf
and
lods
add
cmp
loope
xchg
addr16
and
adc
jb
mov
stos
movsl
cmp
imul
cmpsl
inc
stos
mov
jns
cltd
bound
add
inc
sub
les
scas
dec
mov
pop
dec
adc
dec
adc
gs
inc
test
jbe
cmpsl
fsubrs
mov
fstpt
mov
xor
and
or
push
insl
ljmp
or
into
jmp
lds
xadd
add
mov
jbe
or
aam
jmp
xor
mov
subl
ficompl
mov
inc
cmc
mov
and
repz
fwait
jmp
mov
shrl
fstps
out
push
xchg
mov
daa
dec
sbb
lret
xor
mov
sub
xor
inc
mov
sbb
ds
add
ficompl
sub
out
aad
mov
sbb
inc
mov
pop
ds
mov
push
adcb
icebp
dec
gs
int3
fld
rcll
ret
xor
mov
or
loope
lret
inc
out
cmp
dec
outsl
mov
adc
cmc
ljmp
jge
dec
stc
xor
daa
mov
xor
mov
mov
lods
cmp
or
dec
inc
es
sbb
in
fs
aam
cmp
or
aas
out
inc
cmp
dec
gs
mov
test
roll
outsl
imul
aas
pop
dec
sbb
outsb
std
xor
testl
mov
adc
pop
xchg
int3
iret
mov
stos
fadds
xchg
cmp
xlat
movsb
mov
in
call
dec
ljmp
dec
rcrl
leave
cmc
pop
aam
mov
nop
call
lods
jl
push
xor
movb
icebp
aad
out
rorl
shll
jl
dec
xchg
or
mov
shrl
in
dec
xor
enter
xor
mov
inc
in
inc
nop
jns
jb
adc
mov
mov
pushf
cmp
add
jmp
rorb
cmc
xor
inc
outsl
cmp
adc
pushf
imul
scas
mov
cvtdq2ps
mov
sar
xchg
movsl
repnz
jae
into
sahf
jecxz
dec
xorb
popa
pop
repz
lock
loope
fbstp
or
popa
stc
jb
push
loopne
jl
fisttpll
cmp
adc
sbb
jb
and
ljmp
sbb
mov
int
dec
outsl
jg
jle
jl
jo
jno
and
lock
adc
das
loop
push
push
or
shll
loope
es
or
jns
jle
std
sbb
shlb
repnz
bnd
jo
pop
enter
andb
imul
sbb
test
insl
add
les
mov
lahf
push
idivl
cld
mov
loop
test
ret
xor
mov
cmp
xor
add
fsubl
in
and
ror
cmp
inc
xchg
pop
lods
insl
jp
ret
xor
pop
or
loopne
rol
xchg
rorl
in
cwtl
pop
mov
or
fcomp
fcmove
adc
cmpsl
gs
xchg
roll
add
rorl
jo
mov
cmpsl
jae
or
jae
dec
lret
pop
mov
push
fisttpll
mov
fwait
pop
jecxz
jbe
adc
sti
xchg
fdivrs
cmp
cld
push
stos
dec
test
popf
in
iret
jmp
gs
shll
jb
test
sub
sbb
mov
cli
dec
sbb
push
pop
push
jmp
mov
lods
xchg
adc
sbb
jb
jae
insl
dec
cmp
cmp
xchg
test
neg
inc
push
mov
hlt
fwait
or
gs
sbb
jno
aaa
cltd
fists
pop
cmp
bound
lret
outsl
test
rorb
nop
popf
sbb
cmp
add
jnp
shrl
mov
mov
xchg
in
stos
insl
cwtl
adc
push
mov
pop
add
mov
and
filds
sar
test
push
in
dec
jbe
sahf
stos
sbb
xchg
hlt
lret
xchg
add
arpl
add
sbb
ret
inc
dec
insl
lock
movaps
lds
pop
xor
stos
jmp
mov
push
popa
or
iret
add
test
mov
gs
cmp
adc
sub
in
mov
imul
mov
addr16
sub
out
iret
add
xor
out
pop
stc
xchg
mov
mov
xchg
add
or
cmc
jl
arpl
cmpsl
fadd
mov
out
int
and
or
mov
cmp
mov
xor
push
mov
mov
pop
lret
call
dec
push
jmp
scas
adc
fs
xchg
and
add
mov
filds
mov
push
loop
test
cmp
out
clc
sahf
sub
das
test
or
xor
mov
and
fstl
push
pop
movntps
mov
cwtl
ss
adc
std
scas
cmp
or
inc
stos
int3
insl
push
and
shll
xchg
ror
in
push
mov
mov
ljmp
mov
addb
shl
mov
out
mov
test
or
xchg
dec
pop
adc
dec
adc
aaa
pop
add
sub
xor
push
rcrb
out
fnsave
xor
lcall
push
push
xchg
filds
mov
movsb
jnp
xchg
arpl
hlt
sub
js
mov
mov
jmp
and
ja
sbb
stos
cmp
jl
add
sahf
ja
fs
jb
jb
jmp
and
je
push
pop
adc
insb
out
ja
push
sub
add
push
add
sub
mov
lods
adc
popf
and
dec
pop
test
test
inc
sbb
ja
cmp
jno
dec
jns
clc
gs
idiv
in
out
sub
jns
pusha
test
scas
dec
pop
push
dec
jns
fiaddl
test
pop
push
fcoml
pop
adc
adc
add
mov
lds
dec
fsubl
xchg
js
in
mov
lods
mov
or
cmp
inc
scas
es
pop
je
push
enter
mov
loope
pop
pushf
xor
pop
mov
repnz
xchg
std
xor
mov
repnz
pop
add
in
cmp
movsl
out
or
push
inc
addr16
adc
sbb
fstpl
cmp
loope
mov
shl
pusha
sahf
cmp
pop
fstl
push
jae
add
scas
and
imul
lods
or
rcrb
sahf
adc
sbb
mov
mov
icebp
or
inc
dec
outsl
pop
inc
repz
push
sub
lea
fnstenv
and
jne
fcoms
xlat
add
add
test
push
push
xchg
sbb
cmp
sbb
and
fsubrs
hlt
mov
sub
or
inc
lret
mov
dec
add
dec
mov
sbb
jge
pop
clc
dec
jl
cmc
cwtl
gs
lahf
or
pushl
cmp
add
fdivrl
repnz
or
stos
mov
fdivrs
fbld
dec
adc
fadd
ljmp
mov
les
xchg
shr
push
std
outsb
mov
inc
shl
mov
pop
mov
mov
fdecstp
bound
mov
push
inc
aad
mov
mov
fldcw
aas
lock
shl
mov
hlt
aas
adcb
lcall
in
movsl
scas
or
jnp
fldenv
lock
and
rcr
inc
cmp
insb
lcall
fdiv
cld
sar
pop
les
loopne
fadd
sub
ret
mov
dec
in
leave
cmp
xchg
popa
add
inc
jbe
and
and
lret
out
push
or
lods
inc
or
in
iret
sbb
cmp
fwait
xchg
xlat
cltd
gs
dec
xchg
cmp
lds
push
ja
xor
mov
xchg
or
jmp
insb
out
dec
rcrb
dec
sti
adc
sub
addr16
js
mov
push
xor
mov
gs
addr16
jb
cmp
or
xchg
mov
sarb
ljmp
or
icebp
and
aad
movsb
dec
out
mov
mov
mov
xchg
and
daa
sub
dec
adc
mov
mov
or
pusha
stc
imul
sbb
insb
inc
and
lea
aas
enter
ss
xor
and
test
add
push
jp
mov
dec
sbb
jle
fsubr
jle
push
test
scas
add
fcoml
jl
inc
imul
jne
jge
fsubl
lds
cmp
dec
push
push
inc
and
mov
adc
pcmpeqw
dec
cmp
repnz
xchg
lret
ds
push
mov
push
sub
pop
pop
fdiv
or
aaa
pusha
xchg
adc
cmp
insb
jno
and
pop
cmp
and
mov
mov
push
outsb
loopne
out
cmc
lods
aaa
out
outsl
or
stos
lods
shr
mov
adc
pusha
js
cmpb
ljmp
dec
arpl
xor
fsubl
lret
fstps
jle
sbb
iret
out
imul
sub
jo
push
push
cmc
cli
jno
les
or
or
ss
les
cmp
in
and
ja
jp
cmp
push
adc
movsb
fnsave
int
rcll
xchg
imul
cmc
mov
mov
push
ds
mov
jp
ja
jnp
mov
testl
sub
push
sub
das
das
daa
push
rcr
jnp
repnz
push
sbb
pop
inc
jmp
push
pop
cmp
jo
insb
adc
jne
mul
pop
push
adc
sbb
and
mov
mov
test
hlt
add
adc
rcll
and
dec
fisubs
icebp
imul
xor
mov
int
arpl
mov
xchg
lods
pop
xor
shl
jp
in
or
pop
mov
out
mov
fidivs
cmpsl
jo
sti
aas
dec
fidivrs
cld
in
cmp
je
insl
mov
cmp
xchg
inc
push
aam
or
pop
mov
mov
imul
jle
fnstsw
loope
lahf
sbb
fwait
or
and
cmp
or
xchg
js
pop
jmpw
roll
pop
add
mov
dec
mov
fcmovne
or
fsubrs
lret
dec
sti
fcmovb
xchg
xor
jnp
cmp
xchg
mov
mov
out
popf
mov
mov
mov
push
clc
adc
call
jge
test
adc
stos
inc
inc
pop
push
fs
xor
xchg
loope
push
mov
gs
add
sub
mov
mov
pusha
fstps
stc
or
push
jnp
pop
push
add
xchg
and
sbb
stos
jne
jp
dec
sub
les
popa
popf
inc
scas
or
sub
jge
lahf
mov
addl
inc
int
test
lahf
mov
mov
loopne
xlat
cmp
pushf
imul
repnz
xchg
decl
or
or
jb
cmp
mov
adc
insb
sub
jg
scas
icebp
push
sahf
sbb
arpl
fildl
enter
cs
push
clc
sub
aaa
mov
fsts
mov
or
addr16
mov
jb
mov
mov
adc
lret
push
sbb
fadd
int3
pop
mov
dec
mov
stos
push
jge
outsl
push
out
inc
jp
and
loope
jno
cwtl
mov
push
sub
sti
sub
dec
and
sub
fndisi(8087
inc
inc
mov
mov
repz
out
testl
rolb
loope
pushf
bound
adc
lret
and
in
ficoms
mov
mov
popf
pop
fstpl
xor
imul
in
cmp
pop
sti
bound
fnstcw
inc
repnz
mov
mov
inc
loop
mov
sub
pusha
mov
pop
xor
inc
mov
in
sub
aaa
jl
mov
jb
mov
jecxz
mov
sub
or
sub
adc
scas
xchg
in
xchg
fildl
inc
jbe
cmpl
test
fistpll
jno
mov
adc
hlt
cmp
dec
dec
xor
cs
add
sbb
mov
sbb
inc
fdivrl
add
jbe
add
jp
cmp
and
mov
pop
inc
push
push
insb
sti
cmp
jo
mov
mov
ja
lods
rolb
lahf
addl
insl
and
out
mov
mov
pushf
std
sub
or
cmp
bound
pop
cmp
pop
mov
out
stos
out
lea
iret
subl
enter
std
sub
scas
or
inc
dec
cmp
jecxz
sti
sbbb
xor
lahf
xor
mov
mov
push
push
push
les
inc
loop
insl
shrb
test
push
jecxz
push
loopne
aad
leave
mov
nop
repz
inc
lret
cmpsl
adc
cld
sub
xchg
xchg
dec
nop
sub
mov
cmpsl
push
sub
jp
cwtl
mov
dec
xchg
imul
dec
jmp
negl
sahf
adc
fcmovnb
into
mov
mov
out
stos
divl
or
negl
lahf
in
xor
lods
adc
cld
cli
xchg
pop
sub
mov
in
pop
mov
sbb
int
adc
test
test
mov
outsl
aad
push
xor
aas
scas
xor
fisubl
jbe
stos
in
cli
ss
repz
test
loop
and
xchg
fmulp
xorb
push
inc
cmp
rcrl
and
out
lahf
fldcw
ss
dec
cwtl
shll
inc
ret
adc
inc
insb
daa
iret
mov
mov
adc
test
and
sbb
pop
mov
outsl
lods
xchg
pop
mov
lods
add
jae
lods
add
ja
fcompl
dec
dec
sbb
es
adc
jmp
sbb
cmp
fsubrl
aad
sbb
cmc
pop
sub
int
and
sbb
dec
sub
outsb
xchg
xchg
jecxz
mov
push
xchg
jbe
xchg
lods
inc
daa
cltd
aaa
mov
xchg
mov
subb
pop
xchg
mov
call
mov
pop
push
cmp
pop
cld
adc
jecxz
bound
rcrb
pop
xchg
sbbl
jne
daa
sbb
lock
std
cmpsl
mov
xchg
test
imul
ret
xchg
pop
mov
adcl
mov
mov
adc
and
int
aaa
out
dec
inc
dec
xor
imul
or
dec
pop
jbe
pop
pop
inc
add
sub
in
cmp
fldl
mov
inc
sbb
pop
divl
fmulp
stos
push
mov
enter
cmp
mov
pop
jl
push
and
push
lret
rorb
or
sti
and
mov
inc
sti
stos
pop
lods
mov
data16
jecxz
lds
out
and
adc
aam
aad
dec
sti
dec
jnp
dec
test
addr16
dec
xor
push
sarb
test
push
mov
stos
das
nop
push
sti
aam
jno
xor
push
ret
pop
adc
dec
pop
cmpsl
cmc
add
popf
adc
xor
divl
mov
adc
or
pop
pop
cmp
clc
testb
sub
xor
insl
jmp
das
xchg
mov
or
out
cmp
rol
das
inc
adc
cwtl
scas
xor
mov
cmp
mov
shr
scas
aaa
lods
push
dec
xchg
andb
cmc
push
pushf
dec
aas
mov
pop
lahf
dec
sbb
mov
mov
mov
mov
in
fisttpl
dec
mov
fs
sub
sbb
lcall
out
ja
imul
add
in
in
and
mov
mov
gs
mov
jb
cltd
shll
lds
pop
mov
mov
ficoml
sbb
mov
cwtl
loope
arpl
leave
cmc
inc
xchg
mov
xchg
rorl
shll
into
mov
xor
outsl
inc
cmc
cld
shr
mov
in
xor
adc
mov
shlb
mov
xlat
xchg
das
cs
int3
pop
test
lret
dec
or
inc
sbb
xor
xor
test
out
rclb
dec
and
out
mov
dec
jmp
mov
in
cmp
lea
adc
loopne
loope
and
clc
inc
cmp
clc
mov
out
lock
sbb
dec
mov
roll
and
pop
mov
mov
daa
and
push
mov
or
pop
fimull
outsb
sbb
and
mov
filds
imul
gs
das
or
jnp
xor
sbb
ret
mov
mov
push
dec
push
int
cmp
lahf
ret
mov
sub
sbb
pop
add
mov
pop
mov
int
push
mov
lock
push
mov
test
in
std
xchg
shr
stos
popf
jg
push
jcxz
cld
bound
xor
cmp
add
jo
loope
mov
jle
idivl
cli
ds
shll
push
pop
cld
or
cmp
sbb
adc
bound
cmp
stos
aaa
gs
stc
mov
and
xor
pop
jnp
sbb
fdivrl
mov
scas
sub
fsubl
jno
mov
sbb
push
pop
xlat
mov
or
jge
cs
out
imul
xchg
sti
cmpsl
sahf
push
ret
pop
icebp
sub
fbstp
xchg
ret
popa
adc
jne
inc
ss
loope
std
pop
or
in
nop
cmc
scas
sbb
and
xlat
lds
pop
data16
pop
aas
pop
lret
mov
jecxz
dec
inc
cs
imul
dec
dec
ficoml
push
pop
shll
push
mov
jle
stc
push
pop
popa
aaa
fs
test
xchg
dec
scas
xchg
lret
or
out
jge
mov
scas
jecxz
out
sbb
popf
cmpsl
xchg
shll
dec
mov
cwtl
sub
push
cli
add
ficoms
push
adc
fiadds
andl
or
push
add
scas
sarb
outsb
dec
mov
in
int3
mulb
mov
push
aaa
push
or
sub
loope
jge
and
into
mov
add
sub
and
and
add
push
xor
xor
jmp
mov
fstpl
mov
or
inc
adc
xor
nop
mov
movl
cmpsb
cs
data16
push
cld
test
xor
ljmp
xor
dec
shlb
and
aad
pop
sub
cmp
stos
mov
jg
push
sbb
fistps
mov
mov
mov
in
cmp
sub
std
sub
test
movsl
rorl
in
flds
or
movb
pop
cmp
sbb
mov
lcall
movsb
dec
cmc
mov
ljmp
ret
xor
sub
scas
test
mov
out
test
incl
pop
ds
hlt
sub
popa
push
mov
xlat
mov
addb
call
jae
push
fnsave
xchg
outsl
call
movsb
add
outsb
push
rclb
and
iret
dec
fldcw
xor
fwait
mov
xchg
mov
xchg
popa
das
ficoms
repz
jmp
mov
loopne
mov
rorl
xchg
adc
sar
nop
ss
fisubrs
and
aas
stos
mov
push
and
out
dec
inc
or
or
xchg
std
or
add
negl
lock
insl
sbb
pop
fistl
popf
mov
loope
or
push
loop
sub
pop
jmp
out
mov
sbb
pop
stc
es
jle
imul
xor
addl
xor
and
out
push
push
andb
or
push
adc
daa
sti
push
mov
lahf
push
in
addb
pop
mov
mov
sahf
jo
xchg
mov
fistpll
add
testl
fwait
sub
pop
outsb
rorl
xor
sbb
in
pop
sbb
xor
dec
push
adc
pop
aas
lcall
mov
jo
jecxz
xlat
xchg
mov
cld
push
fdivl
add
jl
mov
shll
aad
jecxz
and
in
add
mov
or
adcb
cmp
data16
lea
dec
jns
test
add
rclb
repnz
loope
scas
stos
fdivrs
push
jne
leave
pusha
movsb
jecxz
push
idivl
push
sbb
loop
imul
mov
xchg
fsub
mov
push
enter
adc
arpl
scas
rcll
aad
enter
test
aad
pop
jmp
and
loope
or
jmp
test
aad
inc
mov
jmp
aam
push
jbe
pop
xor
in
rorl
jle
sub
xchg
dec
and
outsb
xchg
xchg
xor
stc
lds
test
inc
cs
inc
xchg
jge
pop
in
inc
dec
imulb
not
pushf
push
js
push
aaa
xor
into
push
xor
pusha
dec
clc
mull
inc
and
dec
js
cmpsb
mov
bound
sub
jns
movb
in
sbb
hlt
cmp
pop
or
in
or
nop
out
inc
mov
sub
mov
and
fcompl
jmp
xchg
mov
or
cmp
loopne
mov
imul
push
mov
shrl
sub
daa
sub
lock
dec
cmp
xor
imul
dec
adc
jns
dec
mov
push
int3
mov
stc
push
sbb
clc
xchg
fistpl
cld
jae
xor
cmc
cmp
adc
movsb
loope
fdivrs
mov
scas
pop
xchg
mov
fnstcw
xchg
ret
and
testb
clc
xor
jns
out
xor
es
and
cmp
les
test
or
sub
lods
or
xlat
pop
add
mov
cli
inc
adc
loop
sti
mov
mov
or
xor
jae
jae
mov
cmp
dec
fnsave
pop
xor
or
jmp
sbb
in
dec
in
xor
dec
sbb
mov
clc
jne
mov
sahf
mov
xchg
sub
aaa
sahf
xchg
hlt
push
mov
push
push
in
nop
insl
mov
jbe
mov
cmp
and
sub
aad
adc
lret
jb
dec
pop
loop
outsl
aaa
ss
insl
pop
repnz
icebp
test
xor
sbbb
sbb
jno
fidivs
mov
jmp
mov
push
in
testb
pop
mov
aad
pop
or
jmp
movsb
sarb
xchg
int
mov
and
iret
rorl
fsubrl
fidivl
aad
out
push
jl
lea
aad
divb
mov
xchg
or
repz
inc
xchg
shlb
and
pop
in
and
bound
mov
movsl
stos
inc
repnz
ss
inc
inc
sbb
add
inc
sbb
inc
mov
or
cltd
dec
jg
pop
lcall
mov
pop
lods
pushf
inc
jl
push
cmp
imul
pop
outsl
or
xor
scas
int
dec
negb
cmp
popf
xor
aad
fnstcw
inc
inc
out
lock
cmp
aad
jp
inc
jmp
dec
xorl
movsb
sarb
pop
mov
idivb
jl
icebp
out
adc
in
fcoms
pop
fstpl
shrb
fsubl
inc
insb
mov
pop
lock
ficompl
int3
sbb
popa
lods
push
mov
mov
loop
add
pop
push
adc
cmp
mov
fiadds
pushf
or
in
scas
icebp
pop
jl
or
lods
arpl
dec
jecxz
imul
inc
fs
icebp
push
jno
lock
pop
rcl
sbb
cltd
jp
dec
aaa
pop
dec
aas
negb
adc
insb
lock
aas
mov
mov
pop
mov
cmp
idiv
push
ret
jbe
dec
mov
insb
roll
add
ficoms
sbb
outsl
adc
pop
loopne
cmp
mov
xor
dec
xor
ljmp
testl
sub
arpl
pop
hlt
andb
fnstsw
pop
dec
ret
add
fsts
clc
movsb
ljmp
jmp
lods
pop
pop
fisubs
jae
adc
adc
add
addr16
out
lods
fildl
add
repnz
pop
scas
or
pop
or
dec
xor
and
sbb
outsb
mov
stos
cltd
adc
inc
xchg
pushf
clc
gs
inc
aam
pushf
sti
aaa
das
loope
sbb
cmc
jae
and
lea
mov
mov
dec
push
mov
inc
or
xor
fistpll
push
inc
inc
mov
sbb
cltd
sub
sub
scas
iret
cltd
mov
cmp
push
adc
iret
jno
mov
and
into
test
and
repnz
orl
and
rcrb
push
inc
lret
mov
push
loop
mov
mov
outsb
sub
cmp
mov
inc
xchg
sbb
adc
mov
lret
scas
cld
enter
and
out
arpl
cmp
shll
cmp
mov
lds
jp
aad
insb
es
add
jmp
scas
pop
ret
push
aam
ret
push
icebp
xchg
cmc
sbb
sbb
call
jne
in
test
lret
leave
int
xlat
jo
sbb
sbb
inc
enter
inc
ret
pop
test
pop
test
cmp
sbb
sbb
jns
iret
cwtl
adc
stc
insl
jns
inc
aaa
xchg
dec
xchg
mov
mov
ljmp
xchg
loope
xor
outsb
mov
push
idivb
imul
inc
cltd
roll
andl
push
mov
xor
ror
insl
mov
mov
test
push
jecxz
push
mov
jg
cmc
lret
jo
adc
in
adc
bound
stos
xchg
shll
or
or
pop
inc
inc
mov
push
fwait
inc
scas
mov
fs
xor
leave
lret
xor
stos
mov
push
inc
movsb
cld
arpl
dec
jecxz
lret
cli
out
sbb
mov
cmp
sahf
jmp
pop
movsb
xor
pop
mov
jge
in
addr16
es
orl
repz
stos
daa
xor
push
insb
push
jnp
lods
shrl
hlt
add
fs
cmp
sub
xchg
das
push
add
and
clc
and
mov
push
mov
ficomps
pop
fstps
mov
cmp
dec
movsl
mov
adc
inc
adc
xor
add
xlat
movd
xchg
xchg
push
dec
ficoml
xor
lret
jbe
cmp
lret
mov
and
rdtsc
push
pop
xchg
imul
addb
mov
sub
arpl
nop
mov
sbb
pop
xlat
enter
mov
xchg
jno
adc
push
sbb
xor
imul
jg
and
fsqrt
sbb
in
mov
mov
sbb
dec
dec
pusha
addl
pop
xchg
jae
outsl
mov
mov
aas
mov
cs
xchg
punpcklwd
in
add
push
lea
aaa
pop
mov
cmp
insl
int3
gs
mov
popa
sub
dec
add
imul
aam
fmul
pop
jp
pop
call
jge
aad
mov
mov
pop
sbbb
or
cwtl
gs
ds
jae
shl
push
mov
jmp
dec
pop
mov
and
pop
bound
mulb
push
scas
mov
lret
mov
xchg
imul
mov
and
cmp
test
int
xchg
aad
cmc
xchg
rcr
fsts
pushf
mul
stos
scas
loope
dec
loope
adc
jecxz
push
push
xor
pop
mov
push
scas
lods
fwait
pop
pop
lea
fldcw
shl
icebp
cs
xchg
clc
into
arpl
push
lods
popa
cmpl
jo
aas
dec
xor
jns
cmp
ljmp
inc
icebp
pop
mul
mov
hlt
adc
scas
mov
fs
cmp
mov
push
ficompl
aam
push
cmc
dec
int3
insb
cmp
mov
adc
enter
push
or
or
pushl
and
inc
jmp
pop
lahf
das
aaa
popf
jo
xchg
and
in
mov
aam
jge
lahf
lcall
xor
das
xor
and
je,pn
fwait
mov
cld
cmp
dec
jp
adc
cmp
fs
pop
fldl
mov
push
dec
test
sbb
sbb
and
dec
test
sbb
dec
test
mov
or
test
pop
mov
or
sub
pop
mov
out
xor
scas
rolb
ds
andl
scas
dec
orb
or
lret
dec
lea
loop
nop
jecxz
mov
les
das
sbb
test
lods
bound
fdivl
push
movsbl
or
cmp
out
dec
das
ret
sarl
leave
or
xor
orb
cwtl
andb
leave
inc
mov
adc
scas
sub
mov
test
mov
adc
ficomps
gs
ja
rorb
fildl
nop
dec
adc
lcall
jle
mov
test
pop
xlat
movsb
loop
dec
sarb
xchg
jmp
jmp
push
lret
sbb
pop
mov
cmpsb
je
mov
xchg
push
repnz
mov
fadd
mov
push
insl
or
loop
jmp
dec
push
jnp
loopne
push
arpl
sbb
dec
adc
or
and
xor
cli
fs
daa
mov
ss
fs
push
cmpsl
cmp
mov
mov
jbe
cmp
scas
push
add
pushf
or
push
pop
fsts
pop
call
inc
mov
lea
xchg
and
jae
mov
mov
cmp
in
and
mov
shll
fstps
cli
push
mov
insl
ret
stc
outsb
in
cmc
fcompl
mul
mov
outsb
mov
in
and
sbb
or
test
xchg
xchg
jo
sbb
and
mov
movsb
mov
hlt
xor
mov
jns
sbb
cmp
xchg
mov
dec
cmp
pop
mov
jne
test
sbb
jmp
ds
loop
sub
cli
and
and
sub
inc
xlat
dec
mov
fwait
ds
inc
pop
dec
push
sub
jmp
in
subb
lea
jbe
dec
inc
xor
rclb
xor
and
in
push
push
cmpsb
mov
push
jae
and
xchg
adc
aaa
dec
add
pop
pop
outsl
xchg
roll
jae
jb
inc
loope
and
adc
loopne
mov
mov
orb
das
mov
mov
dec
cmp
cltd
sbb
push
imul
cli
dec
ret
ss
fcomps
mov
sbb
repz
or
insb
xchg
in
cmp
fstpt
out
dec
js,pn
xor
lds
push
xor
shlb
pushf
add
pop
arpl
std
or
mov
adc
sbb
mov
addb
fdivs
xchg
push
test
pop
inc
int3
mulb
mov
add
fstpl
inc
sarb
ret
add
pop
mov
mov
cwtl
pop
std
lret
cmc
testl
in
adc
pusha
popa
mov
adc
roll
inc
adc
or
pop
int
mov
mov
jns
mov
in
inc
popf
pop
push
sbb
rcr
jb
in
clc
fstps
jmp
or
mov
lcall
addr16
fdivrl
mov
sub
stos
loope
push
adc
rorl
rclb
ret
ja
lods
jle
jmp
add
cmp
xor
cmp
into
lods
popf
add
ret
orl
aam
sub
js
pushf
xchg
fwait
xchg
in
ja
xor
xchg
imul
push
lock
jg
dec
nop
cmp
mov
popa
cli
mov
movsl
notl
xor
xlat
out
cmp
adc
and
icebp
fldt
fcoml
sahf
arpl
iret
scas
arpl
or
jg
mov
mov
outsb
lcall
xchg
dec
fptan
push
pop
xchg
xor
fcompl
xchg
push
mov
or
inc
pop
push
pop
mov
mov
sub
stc
fisttps
mov
fists
addr16
js
add
push
gs
int
test
sbb
xchg
enter
lret
xchg
inc
movsb
outsl
inc
xor
sub
jns
xlat
jl
push
mov
push
outsb
push
cmp
cmp
mov
insl
jp
pop
aad
pop
aam
add
xlat
cmp
jmp
or
xor
icebp
ja
cmc
add
mov
ss
mov
aaa
xchg
nop
mov
or
mov
cmp
ja
or
int3
ficoms
push
in
repz
cmp
xor
xchg
ficomps
inc
pop
out
es
cmp
mov
adc
xchg
push
mov
leave
mov
in
dec
push
test
pop
andb
rclb
je
mov
cmpsl
and
hlt
insb
andl
add
push
pop
jecxz
int
jmp
das
mov
mov
dec
ret
lea
data16
in
jne
push
sub
mov
icebp
bswap
and
ss
xchg
and
ljmp
inc
xchg
fldenv
gs
loope
jae
xchg
adc
lret
stos
jge
lahf
movb
pusha
imul
add
fnstsw
xor
loopne
decl
sbb
aas
sub
inc
enter
in
shlb
push
sub
jo
or
insb
add
stc
fadds
imul
dec
inc
cmc
lock
cli
imull
push
add
mov
mov
filds
xor
mov
pop
sbb
mov
pop
xor
push
cmp
iret
cmp
arpl
xorb
sbb
cmpsl
and
enter
dec
jns
sbb
xchg
or
lcall
shrb
test
test
and
iret
add
push
idiv
push
xor
nop
jb
cmp
je
push
jae
push
or
xor
dec
push
subb
cs
jmp
sbb
test
dec
adc
stos
scas
xchg
call
or
mov
cmpsb
push
adcb
std
xor
jle
mov
leave
inc
push
push
cmp
mov
mov
xchg
cli
pushl
mov
fnsave
pop
loopne
mov
repz
repnz
jge
imul
popa
iret
mov
xorb
mov
xor
push
inc
es
push
jg
dec
mov
push
xchg
pop
xchg
cltd
sete
pop
js
xchg
fld
movsl
ret
or
pusha
jns
push
adcl
cmpsl
repz
and
lret
push
fldt
jmp
adc
ret
xchg
ljmp
mov
fcmovnb
testb
push
jecxz
jp
push
jmp
sbb
dec
mov
je
mov
jae
mov
mov
repnz
loope
outsl
cmp
int3
push
inc
nop
out
mov
mov
dec
es
inc
out
test
pop
pop
cld
gs
mov
sbb
enter
or
jb
fistps
sbb
push
orb
xchg
enter
aam
in
jmp
xor
dec
inc
ret
in
sub
aas
xlat
scas
insl
inc
pop
lret
fisubrs
dec
pop
icebp
push
cltd
sub
sub
and
and
jae
push
cli
fwait
test
addl
int3
xor
lea
mov
test
jb
or
mov
mov
mov
sub
test
cwtl
push
int3
mov
jg
mov
lahf
frstor
bswap
xchg
lahf
dec
inc
and
cld
cmp
jne,pt
push
mov
mov
pop
aas
xchg
mov
xchg
inc
enter
fucom
inc
jecxz
notl
jb
dec
mov
je
cs
add
mov
ss
jne
je
cmp
test
cmpsb
push
movsb
daa
mov
mov
pop
cmp
sbb
ret
pcmpeqw
cmc
dec
mov
in
jo
mov
jl
adc
rcr
jbe
cmpsl
das
xor
inc
loop
int3
imul
mov
std
pop
ret
es
and
sub
mov
je
pavgb
mov
sub
dec
jne
inc
dec
ret
xchg
je
scas
aas
cmp
rcrl
shl
or
clc
lds
call
aaa
and
repz
jg
lods
mov
in
mov
ja
push
enter
mov
inc
lret
test
add
stc
pop
not
inc
mov
push
leave
cmp
jae
aam
lock
out
outsl
sub
mov
inc
push
xchg
pop
mov
loop
or
test
adc
jae
mov
mov
fsubr
and
mov
aam
pop
xchg
xlat
cmp
repz
adc
pop
stos
mov
loop
sbb
mov
ficomps
dec
pop
dec
in
jns
mov
out
fs
in
mov
into
sbb
inc
js
fiadds
out
cli
dec
mov
mov
add
add
ret
push
inc
aaa
mov
add
lret
sbb
enter
mov
pushf
punpckldq
xchg
sbb
inc
xorl
jl
pushf
mov
mov
mov
add
fdivs
xchg
test
xchg
push
test
xor
imul
sub
xor
movb
hlt
mov
lds
sbb
add
mov
repz
push
dec
iret
cwtl
jp
jmp
cmp
leave
fs
into
push
adc
insl
xlat
dec
gs
and
push
cli
dec
mov
in
test
jecxz
push
or
push
aad
out
cli
adc
pop
imul
jnp
sbb
sub
xor
repnz
sarb
mov
add
pop
pushf
inc
std
lds
sbb
ret
cld
mov
xchg
in
and
inc
scas
out
sub
sbb
lea
jmp
sub
push
loopne
repz
inc
popa
push
sbb
pusha
jo
add
ds
mov
xchg
pusha
xchg
out
in
imul
outsl
imul
jp
pusha
dec
imul
lea
les
add
insl
loope
aam
lods
insb
ficoml
push
js
hlt
bound
xchg
xor
mov
daa
std
movsb
pop
cltd
incl
sub
scas
pop
enter
repz
js
fnstcw
jecxz
adc
mov
dec
shrl
scas
enter
jge
pop
jmp
and
bound
push
adcb
jle
jl
fbld
mov
xlat
insb
cmc
push
int3
or
scas
cmp
dec
clc
cs
inc
inc
dec
ja
mov
jp
mov
mov
test
jae
ja
inc
cltd
xor
or
sbb
sbb
mov
ret
xchg
mov
cmp
in
jmp
pop
or
sbb
push
inc
jbe
cmp
lret
mov
dec
sub
mov
mov
ljmp
nop
stc
inc
push
enter
pop
call
aam
testb
out
adc
ret
movsl
popf
lcall
add
and
insb
incb
aas
jge
jp
jp
or
ret
lret
inc
cmpsl
pushf
insb
int
nop
push
mov
movsb
xor
mov
int3
popa
sbb
mov
aam
fsub
fwait
das
push
push
cmpsl
jmp
loop
into
pusha
mov
arpl
fidivrl
push
xor
or
ret
call
cld
sub
sbb
mov
cmp
jbe
mov
roll
pop
dec
and
xor
inc
push
test
cld
andb
cmp
lock
sub
adc
setbe
adc
cmp
pop
push
adc
inc
movsl
mov
cmc
push
push
out
or
shr
addr16
add
daa
and
cmp
pop
in
in
out
mov
xor
jmp
aad
add
jnp
push
sub
push
addl
mov
xchg
dec
movsb
test
or
stc
test
inc
pop
daa
sbb
jne
pop
fimull
loopw
add
mov
xor
fld1
xchg
movl
push
dec
lods
mov
roll
and
testb
dec
pop
push
std
mov
jl
into
adcb
int
enter
push
ffree
dec
mov
sbb
dec
jecxz
rclb
loop
test
mov
pop
movsb
cmp
xchg
mov
gs
mov
mov
addr16
mov
jae
dec
mov
mov
push
mov
lret
mov
xorb
daa
add
push
cmp
xchg
mov
test
fstl
or
icebp
das
xchg
cmpsb
loop
cs
fsubrs
sbb
rcr
cmp
mov
xlat
cmp
dec
pusha
roll
loopne
jb
aam
xor
mov
loope
loopne
sub
add
xor
test
or
ret
pop
gs
mov
jp,pn
mov
mov
xchg
lds
inc
dec
and
inc
pop
out
jp
pop
movsb
arpl
loope
cmpsb
lcall
mov
rcl
fs
cmp
inc
lea
mov
ret
loope
dec
cmpsb
test
bound
ljmp
or
mov
leave
xchg
adc
mov
test
mov
xor
jno
roll
mov
ret
sub
push
jmp
push
into
pop
push
jmp
stc
add
cltd
hlt
leave
pop
dec
outsl
xchg
jmp
or
fstpl
adc
icebp
test
jge
sub
int3
xchg
push
jecxz
sbb
sbb
cmp
outsl
push
fisttps
sbb
mov
xchg
scas
push
pop
cltd
mov
adc
and
push
in
cmpsl
jns
loopne
leave
dec
xchg
inc
jl
pop
mov
iret
jbe
int
in
dec
jle
sbb
adcl
insl
mov
cmpsb
es
and
arpl
sub
rorl
sub
cs
xchg
mov
xchg
addr16
test
inc
pop
inc
cmp
add
out
and
sub
or
in
mov
sub
xor
rorb
pop
popa
jno
shl
les
mov
add
sti
push
mov
push
push
mov
and
outsb
js
pop
sbb
inc
xchg
mov
mov
jge
and
ror
add
bswap
and
mov
daa
mov
jge
xchg
mov
pop
cltd
pop
xchg
ret
out
ffree
fsubs
xchg
mov
ffreep
aas
and
rolb
xchg
rol
xchg
out
daa
rcrb
mov
pop
jle
sbbl
ret
sbb
out
std
popl
bound
stos
cmp
or
xor
jae
inc
xor
mov
dec
test
in
mov
pop
repz
ret
pop
jnp
xor
ret
pop
std
push
mov
jg
cmp
mov
stos
call
pop
cmpb
mov
pop
cli
xchg
pop
push
inc
adc
xchg
loop
in
or
aad
or
outsb
jmp
out
nop
cmpsb
stc
repz
xchg
mov
rcrb
add
push
call
sahf
xchg
add
in
es
inc
sbb
jmp
fld
pop
es
popa
mov
push
addr16
dec
push
lcall
cld
roll
or
and
sbb
mov
mov
add
das
shlb
sahf
lods
shrl
xor
inc
cmp
push
lods
ss
and
mov
inc
stos
clc
mov
movsl
mov
pop
stos
in
dec
subb
repz
xchg
lret
push
loope
xchg
gs
cmp
dec
mov
pusha
adc
ljmp
ret
push
fwait
repz
push
mov
into
mov
mov
imul
push
mov
add
int3
lods
popf
cwtl
jle
inc
fiadds
inc
fsubrl
idivl
or
arpl
jle
movsb
pop
inc
out
xor
dec
loope
xchg
sarl
ja
fidivrl
ret
mov
jnp
push
in
repz
inc
fnstcw
push
mov
jne
in
ficoms
sarl
mov
test
js
arpl
insb
das
lcall
ret
out
movsl
lahf
aam
fnstsw
test
shlb
fisubl
fistpll
leave
or
push
inc
adc
push
adc
scas
jns
repnz
xor
out
mov
ret
jge
inc
loopne
nop
jmp
xor
lods
dec
mov
or
jno
cs
mov
dec
push
jno,pt
add
sub
pop
popa
dec
sahf
jge
out
fstl
push
jp
pop
out
and
push
cmpsl
in
and
test
adc
lahf
out
mov
push
sub
mov
hlt
into
cmp
sub
jbe
mul
xchg
xchg
insl
das
xchg
xlat
nop
outsl
sbb
dec
stos
loope
jns
repz
mov
push
ds
call
xchg
stos
mov
adc
inc
ficoms
jbe
mov
stc
stos
xchg
inc
jle
inc
lret
push
jle
icebp
jmp
inc
and
pushf
leave
cmp
jb
sub
cmp
or
adc
pushf
adc
push
inc
into
mov
pushf
test
mov
push
lret
imul
ret
adc
inc
pop
sbb
mov
mov
add
aad
dec
inc
es
add
adc
pop
lcall
out
or
and
cmpsb
mov
or
xor
stos
jecxz
xchg
add
divl
stos
cmp
pop
fmuls
imul
sub
jg
insl
test
xor
dec
and
or
push
shrb
push
jmp
and
or
or
loope
jnp
mov
in
and
bound
mov
cli
popl
add
pop
dec
mov
mov
xchg
inc
jp
cmpsb
dec
lret
xchg
imul
shl
push
mov
dec
or
pop
mov
xor
sbb
fstp
add
in
pop
lret
dec
mov
push
push
xchg
test
test
jo
aam
xchg
loope
sub
test
mov
in
mov
imulb
jl
mov
pop
arpl
xchg
fmull
les
xchg
and
notb
in
mov
movsb
bound
jns
scas
mov
pop
js
jb
sub
ret
adc
push
fcomp
or
jg
mov
std
mov
lock
jg
push
out
push
cmp
sub
sbb
adc
push
stc
xchg
mov
subb
dec
dec
into
popf
rorb
lea
inc
icebp
mov
jnp
or
loop
push
std
hlt
mov
jbe
add
out
adc
sub
jl
outsl
fiadds
and
jo
xor
sbb
jmp
inc
rolb
std
mov
ret
xor
add
fdivs
mov
xchg
sbb
mov
inc
xor
jne
aaa
in
add
sbb
jle
in
test
pop
fwait
add
sub
xchg
gs
sub
mov
faddl
int
lahf
jmp
aaa
ret
aad
push
imul
into
xor
cmp
inc
test
and
call
mov
xlat
imul
inc
add
xchg
int
aas
xor
or
pusha
fadds
gs
out
cmp
scas
lock
jnp
cmpsl
cltd
shl
push
pop
mov
sub
pop
mov
pushf
xor
push
rcll
and
addb
loop
pop
scas
cmp
aad
in
iret
mov
jbe
jmp
pop
xor
shll
sti
push
insb
pop
pop
popa
mov
cld
pop
push
mov
cld
cs
dec
out
outsl
mov
xchg
inc
jmp
xor
int
adc
shlb
mov
add
pop
cmp
xchg
mov
xchg
xor
lret
mov
sub
outsb
fs
push
repz
cltd
xor
enter
mov
inc
jp
ja
mov
dec
call
je
and
test
sub
add
fisubrs
push
and
mov
jo
mov
cwtl
stos
and
ffreep
mov
sub
stos
mov
outsb
mov
sbb
jo
push
push
push
popf
in
xchg
in
lock
push
push
mov
pop
ret
rolb
repnz
fcomps
iret
mov
mov
scas
leave
fldcw
mov
mov
cmp
addb
fdivrp
xchg
pushf
mov
or
cmp
xchg
aaa
icebp
pop
imul
and
pop
jns
movl
mov
orb
push
push
add
test
inc
imul
mov
and
mov
or
pop
mov
sbb
pop
adc
outsb
nop
cmp
out
shl
fstl
mov
push
in
mov
push
and
loopne
xchg
popa
adc
pop
mov
pop
inc
inc
sub
push
fs
inc
or
popf
ret
insl
sbb
out
pop
loope
rclb
addr16
nop
fiaddl
add
sub
mov
inc
inc
iret
and
adc
mov
mov
popa
ficoms
mov
sub
test
mov
mov
negl
dec
scas
mov
dec
rcrb
mov
sub
cmp
or
lahf
dec
leave
movsb
add
pusha
mov
and
test
adc
jmp
jns
xor
mov
add
cli
popf
test
lds
and
nop
sbb
stos
add
or
mov
test
call
out
push
xor
push
test
outsb
pop
test
cmp
mov
cmpsb
adc
lods
test
sub
push
mov
fisubl
mov
mov
clc
roll
sbb
popf
xor
repnz
or
inc
scas
mov
test
sahf
test
pop
shll
jb
add
fiadds
jge
xchg
mov
cld
dec
or
arpl
pusha
flds
aas
lcall
pusha
test
push
cmp
inc
push
push
lods
fsubrp
lahf
dec
xorl
cmp
popf
pop
in
mul
loope
xchg
sub
push
fistps
sbb
mov
cmc
inc
mov
rcll
rcrb
mov
cmpl
mov
xchg
sarb
aaa
ss
pop
loop
jp
and
ret
dec
jecxz
sbb
push
push
mov
test
cmp
push
push
in
or
adc
inc
push
push
pusha
rcr
orb
fldcw
lods
jle
jmp
sub
cmpsl
fdivl
rcll
inc
call
xchg
jo
fldenv
cwtl
addb
sbb
inc
xchg
sub
in
std
out
xor
jae
and
push
fmuls
idivb
hlt
pop
dec
mov
mov
pop
adc
jmp
or
lods
or
es
mov
sbb
inc
pop
iret
adc
adc
push
mov
pop
mov
out
push
bound
lcall
shrl
dec
bound
ret
das
cmc
mov
cmpl
adcl
movsl
fwait
test
test
adc
xchg
sub
out
push
jg
sbb
adc
in
or
sbbl
xchg
repnz
xchg
add
dec
imul
mov
out
enter
movsb
imul
inc
add
lods
dec
cmp
cmp
add
fisttps
clc
in
cli
loopne
aad
sarb
mov
cs
cmpsb
jp
aas
repnz
lock
pop
jp
sti
hlt
rorl
jle
testl
icebp
pop
or
cmp
dec
add
inc
dec
dec
fs
mov
stos
repnz
pop
aas
ficoml
rol
dec
subb
pop
aam
jbe
mov
cmp
jo
aad
jae
and
lret
into
xchg
push
movsl
fnstsw
decl
mov
gs
jo
shl
pushf
cltd
and
pop
jne
repz
inc
arpl
mov
mov
inc
push
enter
mov
dec
mov
push
jle
fs
loopne
push
cs
pop
jecxz
mov
cmp
pop
dec
aam
leave
mov
xchg
jle
xchg
in
scas
icebp
cs
addb
pop
pusha
aaa
xchg
jmp
xchg
lcall
and
insl
add
push
mov
pop
iret
shlb
push
jno
mov
and
cmpsb
cmp
xor
jmp
mov
pop
cld
imul
adc
fdivl
fcompl
fisttpl
or
adc
stos
fsubs
dec
jne
mov
icebp
jns
movb
loope
jecxz
push
movsb
and
sbb
lods
sbb
and
jp
ds
sub
popa
cltd
out
popa
dec
repnz
cmp
int3
mov
cmp
xchg
sahf
je
gs
sub
and
sub
and
in
adcb
scas
cmp
sbb
nop
mov
into
xbegin
and
cmp
xchg
add
add
xchg
dec
subl
lcall
in
sub
rcrl
shufps
jae
push
loope
subl
stos
push
inc
adc
pushf
aam
data16
xchg
jge
push
cmp
adc
adc
sub
pop
pushf
jecxz
pop
insl
test
push
pop
inc
adc
aas
sub
bound
pushf
adc
pop
sbb
xchg
mov
and
test
mov
leave
mov
jb
shrl
add
or
xor
loope
sbb
cmp
pop
lret
ss
outsb
xchg
dec
sbb
gs
divl
and
fdivrp
mov
lock
hlt
xchg
dec
xchg
inc
test
lock
sbb
cs
cmp
mov
lahf
xchg
sub
iret
out
fsubl
pop
cli
rclb
out
lods
ss
jecxz
push
add
add
sbb
pop
inc
and
mov
xchg
jmp
dec
or
mov
mov
push
mov
dec
jb
outsb
pop
mov
pop
or
into
stos
add
ret
cmpsl
hlt
pop
clc
sti
mov
inc
outsb
pop
jg
jo
dec
pusha
shll
cmp
jnp
stos
imul
shrl
cmp
aaa
xchg
add
xor
xchg
insb
rcr
arpl
sub
shrb
mov
mov
lods
and
in
out
jge
inc
adc
adc
imul
sub
inc
outsl
test
xchg
jno
xchg
mov
sbb
pop
inc
or
scas
push
push
pop
xor
cs
cmp
mov
pop
jmp
jp
add
out
ja
in
inc
push
jmp
es
jg
cmp
xor
mov
sahf
fwait
pop
xor
out
jge
clc
outsl
sub
mov
loop
mov
popa
fsts
in
aam
adc
mov
sub
rcll
push
sbb
roll
and
rorb
dec
cmp
loopne
add
stos
pop
enter
aam
outsl
aam
jbe
fsubrl
lock
test
push
fmull
imul
pusha
add
push
fiaddl
mov
in
ja
scas
stos
aam
push
das
ror
aad
pushf
repz
out
fldcw
loop
notb
push
or
jo
movsl
mov
xchg
stos
add
les
cld
out
sbb
cmp
cmp
std
ret
xchg
clc
pop
sub
xor
jecxz
mov
cmp
jmp
test
add
out
jbe
mov
outsl
sbb
or
mov
js
andb
int
loope
and
or
fiadds
pop
cli
mov
pop
je
adc
shufps
jno
in
movsl
or
out
aad
ret
sar
ljmp
pop
stos
sbb
sbb
iret
xorl
les
stc
es
or
je
push
outsl
gs
movsl
push
mov
jne
iret
fwait
icebp
or
test
test
dec
jmp
add
adc
mov
jmp
mov
gs
jge
lock
test
add
data16
lds
add
add
testl
and
mov
jb
mov
push
fstpt
imul
jnp
xchg
xlat
jo
fisttpl
xor
push
xor
jae
mov
sub
movsb
fwait
out
adc
andb
aad
imul
jo
mov
sarb
addr16
mov
jg
sahf
dec
pop
xlat
dec
es
sbb
and
fnstsw
lods
cltd
addr16
xor
jne
test
pop
pusha
fwait
cld
xchg
outsb
push
mov
je
ja
fwait
sub
lret
mov
hlt
mull
repnz
cli
dec
std
je
and
jecxz
push
adc
mov
pop
pop
les
sbb
jno
xlat
lahf
mov
out
loop
mov
popf
aad
inc
push
shl
shll
insl
pop
add
repz
fisubl
mov
xorl
sbb
cs
add
mov
or
lret
gs
mov
lods
lock
mov
andl
mov
in
adc
flds
dec
inc
bound
nop
xlat
aas
xchg
cmp
mov
das
aas
add
add
mov
out
ja
add
les
dec
pop
sbb
pusha
movsb
dec
fwait
cli
inc
and
testl
movsl
xor
mov
out
push
and
hlt
mov
cmp
xchg
aas
xor
testb
in
out
fnstsw
adc
jae
rol
loopne
bound
scas
and
loopne
xor
or
xchg
lock
push
inc
sub
pop
adc
insl
mov
mov
and
cwtl
push
lret
fs
sub
cmp
dec
hlt
int3
xchg
cmp
cmc
lret
popf
and
test
insl
push
hlt
pop
pop
outsl
dec
lods
fldenv
insl
iret
inc
fmuls
leave
frstor
pop
daa
or
cmpsl
adc
sbb
negl
sti
enter
xor
ljmp
fsubrl
mov
jg
mov
imul
cmpsb
and
and
sbb
sub
insb
aam
cmp
push
jge
add
add
sarb
dec
outsl
mov
addr16
pop
leave
test
fsub
dec
xchg
cmp
lods
sbb
fimull
mov
sarl
mov
inc
jl
push
sub
ljmp
daa
add
lock
lods
mov
xchg
pop
test
xchg
dec
mov
push
add
dec
ror
popa
jb
mov
push
lock
bound
loopne
je
mov
and
xchg
cli
ret
cmp
push
lcall
push
adcl
push
cltd
mov
movsb
or
lcall
movsl
dec
loop
inc
add
movsb
ftst
mov
sub
insl
lret
clc
pop
or
jae
shll
mov
out
fcmove
je
sub
or
inc
enter
lcall
scas
ja
dec
gs
mov
icebp
add
mov
push
xchg
sarb
sbb
sahf
bound
ss
aad
lret
nop
fs
pusha
mov
fisubrs
es
mov
inc
bound
xor
adc
je
xor
int
or
repz
movsl
ret
cmpsb
shlb
cmp
leave
jle
scas
or
push
xor
xchg
lret
mov
cmp
rorl
sbb
push
enter
scas
add
inc
jo
loope
icebp
cmpsl
lea
inc
inc
add
jmp
fcompl
sbb
lret
pop
xchg
inc
jecxz
adc
xchg
loop
push
xchg
das
outsb
inc
cmpsl
lcall
insl
mov
int
mov
push
pop
ljmp
andb
mov
mov
popa
fisubs
push
xor
dec
add
int
push
out
push
push
xchg
xor
insb
lret
mov
sbbl
jle
sub
movsl
sub
jo
cli
dec
xor
inc
repz
inc
push
pop
mov
push
cs
xor
jnp
jae
inc
into
jmp
imul
loop
mov
or
fwait
xor
mov
rorb
lock
mov
mov
mov
jns
movsl
cli
aas
mov
rorb
inc
lahf
inc
mov
movsl
rorl
mov
pushf
gs
or
pop
add
ror
mov
cmp
mov
repz
ja
inc
aaa
sub
lds
popf
dec
mov
jmp
mov
scas
push
insl
dec
faddl
or
cltd
jnp
imul
sar
mov
cltd
mov
jge
loop
cli
add
jecxz
or
xor
aad
fmul
out
jp
dec
sbb
mov
jbe
aas
insl
sub
into
adc
mov
roll
push
push
or
cmc
int3
or
lea
scas
inc
pop
mov
xchg
stos
sub
mov
ret
shlb
not
dec
cmc
pop
and
scas
add
pop
mov
nop
xor
addb
ss
xchg
xor
test
cwtl
lods
addl
sbb
not
push
dec
jns
cmp
jns
push
int
xor
movsb
ret
push
dec
inc
inc
mov
xchg
dec
push
and
je
je
mov
mov
jno
insl
sbb
repz
pop
hlt
out
cmc
int
mov
subl
push
popf
xchg
insb
movsb
jnp
push
pop
push
loopnew
in
dec
jno
cmp
scas
pop
std
cmp
push
dec
pop
lahf
mov
mov
add
pop
jp
icebp
add
xchg
and
push
nop
jp
clc
push
push
and
cmpsl
cmp
enter
out
pop
mov
outsb
cwtl
fcompl
in
adc
mov
adc
flds
mov
jnp
fcom
cmpb
addr16
inc
mov
cmp
cld
adc
sbb
aam
xchg
jne
insb
mov
xor
mov
repnz
dec
ds
fwait
xchg
inc
adc
lods
push
pop
aaa
mov
jp
int3
xlat
fs
movsl
mov
stos
jge
pop
xchg
dec
push
aaa
cld
nop
test
jl
dec
or
push
push
cmp
loopne
jb
xlat
cmpsb
ret
nop
aas
les
push
out
das
lods
test
data16
mov
ds
push
fnstcw
popa
jbe
popa
call
sti
ret
inc
mov
movsl
inc
xor
inc
xor
fcom
sarb
sbb
out
aas
out
push
xchg
es
jg
mov
ret
lds
mov
and
xorl
pop
cmc
mov
lods
and
jp
cld
cltd
mov
pop
pop
scas
test
pop
vpmaxsw
jo
jg
xor
and
icebp
es
aas
in
jnp
faddl
lret
int3
insl
adc
xor
xor
in
xor
faddl
pop
movsb
stos
negb
test
into
and
sub
es
xchg
and
or
loop
xchg
mov
aaa
jns
lret
xlat
add
call
rorb
dec
cmp
adc
addl
xor
test
pop
add
push
addr16
dec
fstl
lcall
mov
sub
data16
fwait
hlt
add
fwait
dec
nop
ss
inc
mov
cmp
test
call
movsb
shl
out
out
cmp
cmp
pop
mov
ds
jb
cmpsb
bound
lods
push
insb
js
jg
cmc
lea
sub
mov
loopne
cmp
adc
cmp
push
cmp
mov
ret
lcall
into
rcl
and
inc
arpl
xchg
inc
xor
xor
ja
ds
mov
idivl
test
fisubrs
pop
xchg
sbb
fldt
and
mov
sahf
or
pusha
pop
pop
icebp
xchg
es
mov
popf
aam
xorb
loopne
je
dec
neg
push
dec
ss
mov
jg
dec
icebp
adc
pop
lea
lods
out
mov
adc
mov
sbb
aam
mov
and
push
push
adc
test
push
dec
cwtl
jnp
pop
fsubrl
mov
cld
lcall
cmpsb
negb
or
jp
enter
mov
movsl
fcoml
popa
jl
adc
divl
add
xchg
filds
in
inc
and
in
scas
mov
ret
adc
cmc
ret
xor
cld
jmp
sub
adc
aad
mov
xor
xchg
or
leave
mov
fists
aaa
out
dec
outsl
fcoms
mov
jns
test
mov
pop
xor
inc
xor
std
into
mov
sbb
lret
rolb
sbb
dec
sbb
jae
jg
jb
mov
stos
aas
fcmovnu
sahf
mov
cmp
adc
mov
lahf
loop
add
xchg
inc
loop
jbe
mov
mov
cwtl
movsl
aas
cmc
mov
mov
imul
lods
pop
jne
stc
int
bswap
mov
mov
test
xchg
jle
lock
jg
mov
xchg
fldt
repnz
push
mov
out
movsl
je
or
fisubs
sbb
mov
dec
imul
sub
in
lds
fnstcw
xor
int3
or
and
jns
and
mov
sub
test
inc
push
dec
inc
les
cmp
xor
and
push
mov
out
xchg
xchg
or
aad
push
loop
xor
cli
das
sub
addr16
loope
inc
sbbb
mov
repz
cs
cmp
or
cmp
add
mov
jge
aas
or
mov
or
hlt
les
push
cltd
xor
inc
adc
or
out
movsl
cmc
iret
pop
mov
lods
push
icebp
cli
test
sarb
arpl
dec
mov
add
call
add
cmp
add
lods
adc
add
cmc
lods
fimuls
mov
sub
mov
jns
add
js
ja
insb
xchg
xchg
sub
sbb
pop
pop
jg
add
xor
xchg
repz
fistl
lock
outsb
cli
cmpsb
fbld
fisubl
stc
lcall
outsl
in
insl
sti
fwait
sub
fcomp
gs
mov
pop
jmp
dec
call
lret
or
push
adc
ja
inc
push
mov
mov
fwait
push
pop
imul
out
xchg
jne
add
out
es
stos
frstor
sbb
fcmovnbe
mov
cwtl
idivl
xchg
ret
insl
cmp
out
and
in
int3
sahf
ficoml
nop
movsb
dec
int3
daa
xchg
in
xchg
cmp
adc
and
dec
adc
and
sbb
loopne
ret
and
adc
mov
jl
aad
insl
jno
clc
stc
adcb
xchg
repz
push
adc
pop
xchg
shll
cmp
push
jle
push
dec
stc
push
inc
inc
mov
lcall
inc
xchg
es
and
negb
mov
xchg
sarl
or
and
xor
mov
xchg
dec
and
sbb
cli
adc
cmp
xlat
lock
adc
and
cmp
push
jo
sbb
fildl
mov
shrl
push
and
push
add
add
mov
adc
mov
sbb
and
inc
in
adc
pop
sub
cmp
insb
in
sub
and
jns
push
mov
lds
pop
cmp
out
xor
roll
outsl
popa
outsl
xor
sub
jbe
bound
shl
js
adc
jb
aas
loop
outsb
add
or
sbb
fsubs
outsl
pop
mov
nop
loop
fstl
mov
jns
orl
mov
ret
and
cmp
cs
mov
mov
sbb
cwtl
dec
sub
sub
repnz
jmp
lahf
sbb
ljmp
xor
sbb
inc
mov
test
setb
jmp
das
jecxz
xorb
xor
xor
inc
call
jne
stc
jns
dec
fisttpl
test
xchg
xor
insb
addr16
out
dec
shlb
jns
sbb
test
sbb
in
gs
mov
jg
mov
das
imul
xor
cs
es
jg
lea
nop
scas
mov
clc
fs
or
xchg
addr16
mov
mov
xchg
inc
dec
popa
fstpl
fwait
mov
cmp
and
jno
frstor
push
int3
jmp
outsl
adc
jb
xor
sub
or
test
fcoms
int
outsb
mov
pop
lea
sbb
sbb
out
mov
idivl
ret
and
push
push
inc
pop
xor
imulb
imul
add
adc
popl
in
int3
gs
outsb
mov
lret
pushl
mov
push
aaa
push
mov
loopne
mov
inc
inc
sbb
std
xchg
insl
pusha
adc
pop
int3
xlat
adc
mov
addr16
jecxz
or
and
lea
arpl
mov
mov
leave
lret
bound
lcall
mov
push
add
in
popl
pop
clc
mov
mov
mov
jl
stc
push
xchg
imul
cmp
pop
cs
mov
fldl
push
cmc
mov
sahf
scas
rorb
pop
xchg
popa
gs
inc
add
inc
pop
sub
jmp
pop
push
push
and
xchg
mov
bound
fbld
icebp
add
cmp
xchg
mov
ss
mov
xor
lea
xlat
sub
fists
aaa
lret
gs
lahf
xlat
jge
pop
cmp
xchg
or
or
cmp
into
icebp
scas
fistl
push
pop
sbb
les
sub
imul
or
push
and
in
dec
mov
xchg
mov
xor
clc
fidivrs
daa
movsb
push
push
mov
std
cmc
mov
test
lods
ja
xchg
lahf
lods
sarl
dec
scas
inc
fwait
mov
cmp
pop
iret
out
sub
jb
pusha
rcr
ljmp
into
jle
lea
cmp
lea
lods
push
in
sbb
cli
enter
xor
mov
lcall
dec
sub
in
mov
repz
jb
das
push
and
fsts
cwtl
fwait
xor
imul
mov
add
sub
add
bound
call
das
stos
push
dec
shl
pusha
jno
pop
push
loope
sbb
rcll
leave
notb
dec
or
sbb
pop
dec
mov
mov
rclb
aas
clc
xor
out
mov
es
and
or
or
imul
xor
jne
lcall
sbb
arpl
mov
xor
test
mov
pop
cmpsl
filds
sbb
push
push
adc
and
insb
push
adc
cmc
cli
xchg
pop
mov
lods
jb
pushf
xor
cmp
sub
enter
sbb
repnz
andb
lods
lret
push
push
fwait
fs
dec
jle
pop
lahf
insb
dec
lods
sub
popa
loopne
ret
mov
inc
lcall
and
jno
mov
enter
cmpsb
iret
mov
mov
mov
pusha
jmp
lcall
pop
xchg
psrld
out
inc
mov
fcom
fstps
ds
mov
ljmp
dec
aas
or
cmp
sub
out
mov
sbb
and
loope
jp
dec
or
test
xor
repnz
fimull
outsb
daa
enter
push
fsubrs
mov
jl
xchg
pop
nop
jmp
mov
or
sub
dec
icebp
mov
sbb
xchg
out
or
js,pt
pop
ret
mov
inc
cmp
ja
mov
jnp
mov
pop
xchg
inc
mov
mov
test
mov
jae
es
or
mov
inc
inc
dec
pop
inc
xchg
dec
movsl
add
fwait
mov
gs
cwtl
jmp
je
in
or
out
ret
pop
aam
add
dec
or
sbb
scas
test
movsb
jl
mov
hlt
int
shlb
sub
fadds
push
pop
mov
xchg
std
cmp
loop
out
lahf
stos
mov
aam
xchg
mov
push
push
xor
aam
jae
loopne
hlt
mov
mov
repnz
decb
pop
mull
cmp
add
mov
lret
xor
ret
mov
dec
pop
jmp
or
das
inc
xchg
pop
add
and
xchg
pop
or
xchg
mov
adc
push
mov
in
out
inc
mov
dec
and
pop
insb
pop
inc
movsb
pusha
pop
ret
iret
sahf
push
push
out
mov
xor
test
daa
arpl
out
into
pop
mov
xchg
xchg
cmpsl
mov
aad
pop
fcompl
repz
xchg
int3
push
pop
hlt
rclb
test
mov
sub
pop
mov
jae
jae
fstp
sbb
loope
rolb
jns
mov
or
in
dec
push
arpl
sbb
xchg
sub
icebp
cmpsb
outsb
and
add
sub
mov
sub
mov
xchg
inc
out
std
in
movsb
movsl
push
pusha
xchg
addr16
cwtl
scas
jno
adc
mov
outsl
addl
dec
lret
pop
int3
rcl
push
sub
pop
enter
jecxz
pop
pusha
sbb
xchg
in
mov
bound
aaa
pop
movsb
fisttpl
cmp
ret
xchg
ss
push
loopne
xlat
jb
ja
mov
bound
inc
fs
es
fwait
test
pusha
std
xor
in
pop
sarl
stc
daa
scas
iret
adc
or
insb
dec
inc
pop
mov
imul
mov
push
push
inc
push
dec
xchg
int3
jl
daa
push
xor
clc
inc
aam
mov
dec
pop
xchg
pop
jbe
arpl
inc
fisubl
pop
arpl
mov
add
xchg
mov
inc
popf
add
jp
push
div
inc
mov
xor
dec
mov
push
nop
in
or
ja
rorl
inc
out
leave
shll
mov
es
xchg
mov
rclb
mov
jmp
cmovne
or
pop
sub
mov
cmp
loopne
shlb
jmp
sbb
mov
jns
sub
mov
arpl
xchg
sub
ror
adc
and
fisubrs
sub
inc
cli
clc
mov
adc
adc
and
in
jae
xchg
pop
test
pop
orl
lods
dec
popf
adc
sbb
test
rcr
adc
lret
test
in
sub
ret
cmp
sbb
scas
adcb
jae
test
push
inc
mov
xor
lods
xor
push
call
aaa
mov
insl
leave
and
pop
xor
push
xchg
subl
std
mov
arpl
int
mov
sbb
add
push
or
addr16
mov
ret
push
cmc
jp
ss
add
cmp
add
out
cmp
je
in
add
mov
adc
arpl
xor
aas
clc
adc
xorb
fcmovbe
daa
int
stos
adc
inc
mul
cmp
leave
out
ja
imul
shll
imul
lea
adc
test
shrb
iret
push
fidivrs
negl
jle
movsb
test
sbb
int3
repz
cmpsb
lods
aas
gs
pop
insl
dec
push
pushf
insb
fcomps
hlt
cwtl
push
cld
mov
pusha
adc
arpl
jno
and
ficoms
loopne
add
pop
data16
inc
out
xchg
pop
shll
int3
push
cltd
mov
shlb
xchg
mov
hlt
outsl
iret
out
ficoms
dec
mov
je
dec
insl
gs
insl
rcl
sbbl
cmp
and
fstl
jp
inc
cmp
pmulhw
cmpsb
add
sahf
dec
pushf
add
cmpsb
popf
insb
dec
fisttpll
loopne
inc
and
and
adc
jbe
jmp
out
and
div
movsl
addr16
movsb
pop
shlb
das
mov
mov
jge
push
mov
inc
stos
aad
outsl
cmpsb
rol
jle
jmp
add
lret
dec
add
fsubrl
fadds
addl
cmpsl
cld
dec
dec
cmpl
pop
fldl
mov
dec
adc
sbb
out
jg
mov
outsl
push
pop
sbb
push
push
loop
or
mov
cmp
jle,pn
pop
mov
and
cwtl
mov
popf
into
test
shl
push
ljmp
xchg
movsl
cmp
imul
pushw
inc
fisttpl
adc
pop
jno
out
test
sub
sub
mov
aas
mov
mov
pop
adc
sbb
movsl
in
mov
inc
mov
jecxz
jle
xchg
cmpb
push
mov
sbb
sbb
pop
jg
int3
shll
pop
pop
out
xchg
lcall
xor
pop
sbb
aam
repnz
xor
in
pop
jno
lret
sub
inc
and
jns
xor
inc
push
ja
cmpsb
cmp
test
das
mov
push
or
xorl
outsl
cli
pop
jmp
sbb
arpl
mov
pop
aam
adc
xchg
scas
push
dec
add
pop
movsl
icebp
ret
ret
inc
adc
mov
clc
sbb
and
cmp
fcmovbe
xor
out
popf
pushf
fistpll
idiv
mov
cmp
jns
pop
add
nop
mov
pusha
stc
cmp
out
repz
xor
testb
rcrl
in
aaa
cld
push
mov
aam
cmpsl
mov
cmpb
push
mov
shll
sbb
lcall
push
add
int
shl
push
out
push
sar
stos
cli
jae
negl
loop,pt
outsb
sbb
rcll
mov
mov
push
add
jle
fisttpl
sbb
push
fists
mov
sub
arpl
loopne
push
sahf
dec
xchg
lods
cli
jb
xchg
inc
inc
mov
inc
xchg
inc
mov
adc
jno
leave
push
push
loopne
in
mov
into
push
out
imul
mov
mov
cld
pop
xchg
leave
dec
adc
sahf
leave
aas
imul
daa
and
in
dec
cltd
sbb
insl
add
stc
cmp
int
push
jns
add
mov
pop
arpl
add
verw
jecxz
out
xchg
or
dec
sub
mov
mov
cmp
mov
pushf
out
hlt
mov
out
jne
int
sbb
lahf
out
shlb
pop
and
push
dec
mov
and
dec
pop
mov
mov
outsb
loope
pop
jns
push
dec
push
dec
mov
inc
out
addr16
xchg
dec
push
sbb
ja
pop
sti
sbb
loop
aam
cwtl
fnstcw
push
jb
into
sbb
cmpsb
xor
repz
mov
sbb
ret
add
push
dec
mov
sub
mov
pop
cltd
jnp
push
je
imulb
sub
addr16
ja
dec
cmp
push
sahf
ja
daa
push
fmull
push
and
sbb
inc
aas
adc
gs
jnp
lods
push
mov
xor
out
add
jecxz
out
sub
mov
icebp
mov
rcrb
push
mov
cmpsb
adc
loop
xchg
pop
mov
mov
in
jno
push
mov
xlat
icebp
jnp
mov
mov
sub
xchg
rol
add
xchg
sbb
cmpsl
cwtl
jbe
sub
mov
rolb
aas
or
pop
jge
movb
dec
cmp
sub
or
jo
rorl
ret
cld
jo
test
mov
push
mov
jno
jb
xchg
cs
popa
pop
and
outsb
aam
out
es
adc
enter
inc
stos
cmp
icebp
lods
je
clc
add
or
or
sbb
mov
insb
popf
test
arpl
dec
lret
shl
imul
test
out
xor
mov
fwait
cwtl
cld
push
lfs
in
fnsave
mov
lods
fcomps
xor
pop
pop
push
ffree
xchg
or
sbb
test
sbbb
inc
push
outsb
lahf
jo
dec
enter
adc
cmc
outsl
inc
mov
cmpl
xor
sbbl
adc
sbb
ret
pop
arpl
dec
push
cmp
iret
add
add
subb
shll
jns
repnz
mov
fs
pop
daa
dec
and
in
sar
lods
sbb
push
push
outsb
jb
dec
mov
imul
add
fnstsw
sbb
popa
aaa
push
or
addr16
in
mov
or
stos
mov
mov
aad
jbe
pop
jno
mov
fcomps
imul
ja
nop
in
ja
test
jecxz
lods
in
mov
shlb
sub
push
add
jns
xchg
add
mov
jnp
cltd
jb
jmp
mov
sub
mov
lods
lds
push
cmp
push
mov
adcl
add
mov
and
push
pop
scas
mov
arpl
pop
divb
test
ss
lods
sar
test
aas
dec
xchg
dec
xchg
fs
shl
in
ror
sahf
dec
lcall
push
dec
ffree
mov
subl
outsb
or
push
in
jo
cmc
pop
and
mov
sub
mov
push
clc
jbe
sub
inc
rorb
mov
popa
add
mov
sub
adc
repz
push
into
adc
mov
add
icebp
sti
mov
sub
idiv
jp
sarb
cmp
sbb
lea
test
lds
dec
sarb
sbb
int3
fists
add
pop
pop
dec
addr16
fildll
mov
ficoml
imulb
repz
dec
fwait
cltd
xor
adc
out
jns
ljmp
jns
or
stos
jbe
fdivrs
cltd
fdivrl
lret
bnd
mov
xor
jecxz
data16
inc
sbb
adc
sbb
dec
pop
fistps
lea
inc
sub
mov
pop
call
push
mov
mov
and
push
lcall
aas
lods
jno
xor
or
push
mov
add
jmp
popa
lods
add
pop
mov
ret
andb
pop
xor
ss
mov
mov
push
sub
mov
jb
cmp
sub
or
jb
into
aas
dec
jnp
xor
leave
fldcw
push
pusha
mov
mov
push
push
push
ret
push
and
jge
adc
scas
iret
or
subl
pop
pop
jmp
xchg
adc
jge
sbb
ja
mov
cmpsl
popa
inc
jne
mov
adc
push
das
and
cmc
mul
popa
push
inc
mov
sbb
inc
jle
divb
xchg
pop
xchg
or
in
sbb
in
pop
xor
push
pop
int3
jns
ja
mov
push
lret
sbb
push
sub
iret
scas
push
test
aas
mov
pop
mov
push
jge
mov
dec
ss
rcll
aaa
mov
pusha
lods
and
push
inc
hlt
pop
rep
sbb
xchg
frstor
pop
inc
ret
test
inc
gs
ret
inc
repz
sbb
dec
es
sub
push
ljmp
push
add
bound
fsubrs
data16
mov
jle
jo
and
jle
push
push
fildl
loop
ret
pop
push
jmp
jo
jle
xchg
mov
cmpsb
inc
jbe
cld
dec
or
cli
arpl
sahf
dec
int
aad
loope
les
idivl
and
push
xchg
adc
clc
sbb
cmc
in
rcrb
mulb
jne
sub
fstpl
arpl
and
mov
jb
sti
push
imul
iret
push
ret
mov
pop
adc
out
push
loope
mov
insb
or
add
adc
enter
cwtl
iret
scas
and
repnz
add
mov
push
arpl
fmuls
stos
and
xchg
fidivrs
std
mov
push
test
arpl
int
es
xchg
xor
insl
jle
lds
sub
dec
movsl
inc
push
shll
scas
add
fwait
push
xchg
sbb
pushf
fnstsw
mov
push
dec
lcall
fld
cmp
mov
lret
mov
xlat
jl
aad
adc
adc
pop
dec
mov
inc
pusha
xchg
in
dec
push
scas
test
pop
mov
push
jae
test
xor
and
xor
xor
jmp
loop
or
push
jle
push
mov
mov
in
xor
lea
aaa
test
cmp
xor
aam
mov
cmp
clc
icebp
xor
xchg
je
sbb
icebp
and
shlb
rdpmc
xor
pop
pop
xor
push
pushf
mov
add
insl
add
cld
and
lods
add
xchg
cmp
dec
cltd
xchg
xchg
in
inc
mov
adc
mov
push
in
push
xor
mov
ss
iret
jp
loope
testl
repz
or
push
sbbb
xor
int3
mov
xchg
inc
and
orl
rclb
pushf
movsl
add
sub
pusha
inc
pop
test
pop
outsb
xor
pop
outsb
inc
mov
notl
xor
mov
pop
add
or
int3
cltd
cmpl
push
repnz
data16
jnp
test
dec
mov
std
adc
jne
push
jge
xchg
mov
fsubl
sub
xorb
lds
jmp
in
inc
inc
jo
ret
shrb
cmp
ss
movsl
xchg
xchg
mov
push
std
outsl
dec
push
jns
addr16
xchg
xor
stos
scas
test
pop
mov
outsl
sub
fcmovne
out
fs
sub
sbb
and
lea
dec
push
sub
out
mov
popa
fsubrs
add
lods
inc
out
flds
xchg
cs
icebp
in
xchg
pusha
orl
outsl
xchg
mov
bound
cmpsl
mov
xchg
mov
or
jae
jp
les
je
in
popa
testl
push
adc
outsb
jmp
jb
fnstsw
or
leave
sub
stc
int3
fs
fidivl
push
jae
mov
xchg
dec
fs
stos
sbb
mov
rcll
popf
loope
push
xchg
fs
in
loop
imul
jb
mov
loope
lahf
sahf
popf
xorb
fldcw
lret
hlt
pop
cmc
out
je
mov
cmp
sbb
inc
js
movb
push
roll
inc
or
sub
movsb
lods
jae
xchg
sbb
mov
cmc
scas
lock
lcall
dec
imul
sahf
inc
xlat
mov
or
pop
ret
scas
xchg
test
insb
test
jno
add
adc
mov
push
pop
pop
push
repz
mov
pop
lods
mov
pop
mov
mov
jno
enter
sub
in
pop
testl
loop
insl
stc
imul
test
cmpl
scas
adc
sahf
std
inc
enter
mov
push
sub
jp
sub
mov
arpl
sahf
push
sar
push
lods
in
inc
pop
sbb
lock
ds
inc
ja
jg
rclb
inc
ss
stc
sti
cwtl
xor
inc
repz
mov
jno
mov
lea
dec
fucomip
sub
pop
dec
cmp
in
lret
mov
ret
mov
aad
mov
sbb
mov
cmp
or
jb
mov
out
jb
pusha
into
shlb
push
imul
mov
mov
push
andb
xor
mov
mov
and
jl
icebp
push
hlt
hlt
imul
fistl
add
in
testl
mov
push
push
mov
adc
cmp
and
push
xchg
movl
hlt
or
jb
cmp
push
or
icebp
and
es
ja
iret
in
std
dec
mov
shll
cwtl
sub
fidivrl
mov
xor
in
mov
mov
cmpsb
js
js
xchg
or
push
add
in
fmuls
xor
sti
je
cmp
jnp
out
mov
add
add
insl
test
mov
pop
shl
push
dec
cmp
mov
xchg
mov
pop
xor
jp
add
adc
push
in
push
sbb
mov
fisubrs
hlt
mov
mov
fcoml
fsts
jg
sbb
xchg
sti
fsubl
jb
sti
stos
jmp
xor
enter
ljmp
sbb
inc
insl
pop
leave
aad
out
loopne
xchg
mov
inc
aad
out
stos
jecxz
push
dec
mov
adc
or
rorb
sub
jg
xchg
sbb
sub
inc
scas
pop
outsl
movsl
test
pusha
xchg
cmp
or
out
cmpsb
xlat
cmpsl
add
pop
push
fdivrl
jbe
mov
push
add
out
or
fdiv
icebp
les
cmp
loop
cmp
xchg
sub
in
mov
inc
cmp
pop
int
push
jp
fsubs
std
mov
dec
ror
aad
andb
insl
inc
in
and
xchg
adcb
adc
mov
add
mov
push
cmp
xchg
aaa
repz
push
movsb
pop
push
cld
pop
cwtl
mov
jns
xchg
jb
loop
push
aad
loop
lret
imul
sbb
rcl
jmp
fdivl
into
dec
repz
ret
call
mov
jecxz
push
aad
lods
jno
scas
pushf
shll
cmpsl
repnz
pop
aas
cmp
dec
lods
add
pop
mov
xchg
fsubrs
push
and
and
and
mov
in
pop
jbe
sbb
cmp
fisubrs
cs
push
imul
jg
mov
push
jb
pop
out
pop
jno
inc
adc
popf
lea
scas
daa
adc
xchg
lcall
es
inc
jne
push
or
or
add
mov
gs
adc
andb
dec
aas
inc
dec
addb
aad
bound
int3
mov
mov
into
mov
int3
push
mov
push
xchg
and
fcomps
pop
xor
adc
outsl
sbb
lea
into
ja
mov
imul
mov
sti
rol
adc
inc
mov
xchg
mov
jge
test
mov
fs
jl
mov
notb
add
arpl
outsb
add
jae
mov
push
je
pop
scas
insb
push
pop
inc
cmp
jno
push
out
shl
xchg
lret
mov
dec
pop
aas
mov
dec
stos
mov
push
push
mov
arpl
jno
roll
cli
mov
int3
scas
dec
negl
xchg
sbb
insl
nop
jns
mov
mov
sahf
jmp
and
adc
xchg
mov
js
mov
out
and
pop
aas
sbb
or
xor
bswap
inc
sbb
andb
inc
int
int
repz
push
xchg
int
mov
cmp
push
lahf
pop
sub
stos
je
and
mov
cmp
flds
adc
scas
repnz
in
mov
rcl
pop
addr16
or
scas
dec
mov
pop
xchg
jno
popf
repz
jnp
aad
out
lock
in
test
sbbl
jb
int3
fwait
or
sti
jbe
arpl
dec
lods
or
fwait
sahf
movsb
jle
xor
stos
enter
imulb
push
dec
mov
ja
sbbl
jno
out
mov
push
sub
lds
jmp
mov
aaa
ja
xchg
pusha
jns
aas
lods
out
popl
rcrl
arpl
adc
repz
sbb
pop
ja
xchg
adc
mov
loopne
imul
stc
sub
mov
test
adc
in
or
scas
popa
fwait
ja
cmp
clc
xor
popf
jno
mulw
jns
in
push
fisttpl
or
ret
dec
icebp
int
dec
adc
mov
xor
pop
movsb
mov
pusha
cwtd
dec
inc
add
ds
mov
das
pop
pusha
or
dec
addr16
mov
sub
fadd
jg
xchg
jbe
jo
adc
dec
jge
sbb
sub
cmpl
sbb
lods
repnz
test
xor
cmp
lahf
mov
in
out
lods
xchg
fbld
ret
push
pop
or
or
fcoms
sub
pop
test
mov
rolb
add
mov
mov
pop
lds
inc
mov
ficoms
shrb
mov
loopne
dec
out
push
testl
mov
nop
dec
fnsave
aaa
scas
std
cwtl
dec
jno
fcmovnbe
mov
or
inc
pop
xchg
je
xchg
pop
jg
xchg
sar
nop
scas
inc
sbb
mov
jns
add
mov
pop
es
rorb
testb
rcll
mov
repz
inc
stos
vpavgb
and
loop
addl
or
ds
loope
je
inc
gs
pop
pop
mov
mov
sbb
jecxz
cmp
add
push
sub
test
test
or
push
mov
test
ja
lds
bound
xchg
push
xchg
push
xor
mov
int3
and
add
ret
fnstsw
and
fcoml
mov
jge
sahf
test
or
jg
inc
mov
jns
pop
lods
mov
jg
fcmovbe
js
dec
clc
lea
mov
test
jp
cli
mov
out
fiaddl
aad
xor
ja
mov
in
in
inc
xchg
ja
add
sbb
lret
outsl
push
sbb
inc
sarb
inc
xlat
xor
adc
rorb
fbstp
inc
pop
sbb
sahf
add
inc
mov
gs
jle
jmp
aam
mov
adcb
ret
jge
shr
arpl
lods
rorl
test
je
les
push
push
cmp
xchg
or
and
popf
stos
les
ret
push
lahf
sub
repnz
xchg
jle
push
mov
out
inc
pop
pop
lret
mov
cmp
je
lods
aas
cli
lea
pop
jl
fsts
stc
sbb
xchg
shlb
mov
das
out
mov
pop
bound
mov
call
outsb
scas
inc
mov
mov
pop
aam
ja
ret
xor
or
cmc
mov
sbb
xor
inc
test
lods
mov
iret
fs
je
cmpsl
int3
sbb
jne
dec
mov
mov
bound
xor
xchg
sub
aad
push
mov
imul
imul
xor
int3
sub
lods
jg
mov
dec
and
sbb
mov
bound
loope
jecxz
loope
std
jp
sti
outsb
or
in
jmp
add
loope
mov
hlt
sub
mov
pop
pop
cmp
je
out
cmp
sbb
or
xchg
adc
or
push
xor
push
xchg
push
popa
xor
add
cmp
rolb
xor
add
add
scas
mov
lea
sub
and
clc
mov
jnp
add
adc
repz
add
jg
pop
fidivrs
clc
loopne
sbb
pop
ljmp
scas
andb
inc
push
sbb
mov
xchg
rol
sbb
mov
aam
fcomps
fsubl
int3
stc
insb
daa
dec
out
lea
xchg
ja
mov
mov
and
test
pop
enter
cmp
loope
xor
call
neg
fists
mov
repz
push
loop
orl
rcrb
sbb
dec
push
fidivl
sub
cltd
cmpsl
add
push
test
pop
inc
xchg
andl
or
ret
aas
or
test
mov
mov
ljmp
call
adc
aas
js
jne
xchg
sti
ljmp
sbb
cmp
push
and
xchg
push
stos
out
xor
pop
xlat
lahf
xchg
cmpsb
aad
cmp
sbb
repnz
xchg
enter
push
add
fcoms
cltd
test
mov
cmp
or
mov
pusha
aas
or
das
pop
call
add
or
push
lret
adc
jmp
fcmovnbe
push
aad
leave
insl
jg
adc
lret
lods
pop
ficompl
mov
and
jp
leave
mov
and
negl
pushf
test
das
out
add
repnz
jge
adc
mov
ret
cmp
mov
cmp
cmp
insl
shrb
dec
fbld
hlt
jae
push
enter
cmp
pop
pop
mov
stos
pop
jo
or
adc
in
push
jge
sub
lock
loope
cli
jecxz
fistps
jne
aas
push
jle
xchg
xor
das
mov
and
sub
aaa
ror
sarl
in
rcl
lahf
subb
cmp
lods
cmp
dec
dec
shrb
outsb
jbe
lret
cmc
outsl
daa
aam
int3
pop
rclb
pop
adc
cmp
cmc
enter
cmpsb
hlt
ret
pusha
lret
orl
xchg
sbb
jl
aaa
in
sub
loop
out
jae
sbb
inc
add
fidivrs
mov
mov
jle
add
sub
pushf
std
js
fwait
xchg
aaa
jg
fcmovu
add
add
rcll
addl
into
call
loop
cmpsb
cmp
fisubl
pop
loopne
mov
add
repnz
push
adc
cmp
cli
shl
cli
ss
popa
xchg
call
xor
jecxz
xor
push
add
mov
sahf
adc
loopne
aaa
push
imul
imul
jae
int3
cmc
movsl
cltd
xchg
outsb
test
bound
sbb
dec
cmp
movsl
or
mov
cmpsb
popf
mov
or
ss
ja
cmpsb
insb
or
fstpt
mov
xchg
cltd
cmpsb
lods
es
faddl
pusha
mov
mov
pop
popf
inc
lahf
sub
cld
push
mov
aam
js
movsb
or
scas
sub
mov
in
movsb
sbb
add
dec
scas
fisubrl
pop
dec
jge
and
int3
adc
dec
rolb
jle
adc
sbb
inc
push
fisttpll
je
cmp
mov
and
jl
sbb
adcb
into
or
in
ficoml
jp
fdivrs
gs
popa
push
mov
push
push
jl
push
outsb
test
cld
adc
xchg
sub
shr
add
loope
ss
cmpb
fdivs
movsb
je
lahf
xchg
push
or
leave
add
sub
dec
lods
hlt
dec
xor
jo
jmp
or
sbb
xchg
mov
into
subb
into
mov
sub
and
mov
cmp
lret
cmp
rolb
add
push
xor
xchg
stos
add
sbb
push
into
dec
inc
clc
divb
ds
pop
pop
in
shlb
nop
mov
push
addr16
sbb
icebp
lret
jno
pop
jg
popa
mov
ja
sub
jbe
jle
repz
outsl
fistps
scas
stc
jnp
fwait
inc
test
pop
jle
and
imul
mov
xchg
push
orl
fxch
push
dec
imul
lret
addl
ds
test
fs
sahf
bound
add
inc
cmc
mov
jle
into
and
xor
aaa
cmpsl
cmp
sbb
jne
mov
sbb
sbbl
movsb
test
jae
push
sub
xor
je
xchg
adc
fwait
push
xchg
mov
ss
cmpl
adc
daa
and
xor
fidivl
sub
out
ds
push
pushf
dec
frndint
add
and
sbb
cmovl
lock
mov
inc
and
adc
jp
add
jl
pop
mov
cwtl
imul
cmp
sub
push
stos
scas
mov
sub
lcall
xchg
out
pusha
pop
adc
xor
push
scas
lea
insl
jbe
stos
lods
fidivs
jmp
test
aas
sub
fdivrs
fdiv
jl
dec
flds
adc
xor
hlt
fs
pop
pop
xchg
test
je
mov
out
repnz
jne
movsl
cli
scas
and
pop
push
inc
lret
sbb
xchg
xchg
cmc
pop
nop
test
ja
popa
sbb
pop
xchg
or
es
mov
popa
aam
jne
add
fistpll
inc
mov
loope
push
lret
loopne
out
icebp
jnp
inc
in
ret
pop
cmp
cltd
or
mov
xlat
scas
cs
mov
lods
test
emms
inc
fidivrl
je
add
lea
xor
aas
out
into
fists
pop
aas
pop
insl
dec
jns
imul
pop
inc
mov
dec
or
adc
push
lods
lods
jecxz
jb
hlt
repnz
mov
in
sarb
xchg
push
push
scas
mov
mov
add
push
sub
ss
mov
mov
jp
gs
dec
in
push
loope
fabs
jb
inc
inc
lods
lds
sbb
xchg
jmp
outsl
nop
adc
test
in
cmc
jmp
jecxz
cltd
cmp
gs
je
aad
adc
insl
mov
arpl
xor
cmp
dec
add
out
inc
pop
add
mov
sub
inc
pop
add
scas
xor
and
dec
cmpl
loop
xchg
inc
lods
inc
ret
cmpsb
addl
std
xchg
cmp
clc
lods
push
mov
imul
ja
lret
bound
sahf
push
ret
fwait
mov
push
jle
sub
jb
push
jge
adc
sbb
loop
int
outsb
inc
aam
inc
adc
cld
ljmp
mov
gs
mov
sbbl
inc
mov
mov
repz
or
out
imul
daa
cmp
ja
cs
jg
int
xchg
xor
out
flds
out
pop
fstps
mov
cmpsl
xor
xor
insl
jle
test
gs
and
mov
lahf
lock
fistpl
mov
cmp
fldt
divl
mov
pushf
ret
sub
aam
push
insb
cld
xchg
sub
fwait
dec
stc
push
adc
cld
push
int
imul
pop
clc
push
xor
rep
and
xchg
adc
adc
data16
ljmp
mov
fidivs
push
movsl
aam
push
inc
ds
adc
loopne
inc
lret
dec
add
pop
or
fstl
imul
jne
dec
cmp
sub
cmp
cli
out
movsl
xchg
imul
xchg
add
fildll
jno
shlb
hlt
fdivrs
or
inc
neg
xor
mov
push
enter
adc
cmpsl
mov
mov
addr16
lret
mov
pop
enter
inc
xchg
and
mov
sti
addr16
push
mov
je
out
cmp
fcmovnb
mov
fsubrp
sahf
or
xor
pop
inc
add
fwait
and
push
pop
or
shrl
ret
test
cwtl
hlt
mov
jl
push
jbe
test
or
ds
push
popa
pop
test
lods
mov
sbb
add
mov
jno
int
repnz
lcall
popa
cmp
xchg
arpl
pop
stos
rorl
dec
jo
sbb
inc
adc
xchg
dec
lret
mov
icebp
arpl
out
pop
jns
cmp
and
pop
mull
std
les
inc
and
insb
negl
int
fwait
insl
sahf
ljmp
test
dec
test
fnstcw
out
sti
sbb
mov
mov
jmp
ret
mov
mov
xor
mov
je
out
pop
bound
jl
sbb
call
fyl2x
pop
rol
push
sub
sbb
outsb
cmp
pop
ret
jb
inc
subb
jl
adc
push
pusha
sbb
ds
push
loop
mov
push
dec
int
push
adc
into
pop
iret
fmull
in
dec
cmpsl
aad
mov
push
dec
insl
mov
hlt
mov
sbb
int
xchg
mov
jbe
add
enter
and
popa
jno
in
cmp
cmp
es
xchg
enter
aas
push
sarl
lcall
mov
fists
xchg
data16
movsb
cmp
imul
xchg
scas
push
aad
push
test
inc
scas
out
lods
jb
or
imul
jne
out
outsb
push
xchg
loop
dec
dec
mov
clc
mov
into
dec
push
adc
sub
movsl
fnstsw
mov
pop
sbb
rcrl
outsb
xchg
xchg
or
insl
inc
pop
mov
inc
js
mov
loope
in
jle
aaa
fwait
push
into
divb
fs
push
dec
fisubrl
push
add
mov
mov
stc
in
cld
xor
loopne
push
push
fnstenv
daa
ds
cltd
lea
pop
fnsave
ds
stos
pop
fwait
pop
lret
ret
in
inc
shl
xchg
inc
scas
inc
jg
mov
xchg
loopne
xlat
aam
add
repz
jbe
mov
mov
sub
sub
les
inc
mov
or
cmp
rcl
ss
dec
ret
jmp
and
sbb
dec
or
imul
pop
sarb
int3
inc
mov
xchg
dec
inc
mov
aad
call
sbb
or
jbe
mov
push
add
dec
xchg
int
int3
push
sbb
ret
popa
add
dec
inc
stc
mov
jns
movb
repz
jge
movsb
xor
mov
sbbl
in
and
and
or
pop
test
in
add
pop
fcoms
adc
je
inc
fnstcw
pop
xor
inc
lcall
mov
popf
sub
hlt
sahf
outsl
sub
sub
mov
mov
xchg
lcall
outsb
xlat
add
into
daa
inc
sbb
adc
test
adc
push
stos
dec
pop
mov
add
pop
faddp
rorl
sub
inc
decb
bound
out
jns
add
mov
pop
jo
jnp
mov
sahf
xor
in
adc
lea
jecxz
push
enter
xchg
sbb
cs
negb
notb
js
ljmp
add
pop
andb
mov
mov
insl
xchg
mov
add
push
bound
mov
sbb
dec
mov
xchg
shrb
cli
push
fnsave
in
ficomps
lcall
dec
jo
mov
lcall
mov
outsl
cs
inc
jp
jne
xlat
and
sub
stc
and
call
cs
in
pop
ret
mov
fdiv
pop
shll
hlt
mov
mov
pushf
jge
in
leave
int3
cmp
and
or
dec
pop
out
xchg
pop
aam
rclb
aaa
out
pop
pop
lock
jl
or
arpl
nop
mov
mov
xchg
cli
xchg
xor
and
ss
test
in
sub
int
std
mov
cltd
das
movsl
fbstp
xbegin
add
jns
xor
in
stos
dec
stos
pop
xor
scas
xchg
jae
lret
jmp
pop
dec
lret
or
mov
and
dec
cmpsl
ljmp
cmp
sahf
xor
aad
cmpl
mov
pop
daa
push
jl
xor
fcomps
pop
mov
mov
pop
shll
bsr
sbb
push
jecxz
mov
jnp
xchg
jle
mov
mov
pop
sbb
fnstsw
aam
enter
xchg
jge
inc
pop
inc
jp
test
pop
pop
pop
fs
xchg
dec
mov
xor
repnz
mov
rorl
sub
cmpsb
popf
nop
mov
jp
lahf
mov
iret
xor
bound
jno
addr16
push
out
mov
cltd
mov
push
fidivs
filds
aas
sti
fdivrl
or
lock
sub
cmp
mov
and
push
dec
cld
xchg
cmpsl
push
jecxz
push
jns
aaa
out
cwtl
lea
inc
into
hlt
adc
xchg
pop
ds
fcomps
iret
lret
jmp
mov
mov
sbb
and
sub
in
xlat
call
jb
cmc
faddp
dec
and
mov
jnp
dec
or
js
or
mov
push
sbb
fcompl
cmp
dec
lret
sub
cs
lahf
adc
xor
loop
ds
lahf
cmp
cwtl
xchg
jge
mov
rorl
dec
dec
sub
mov
inc
je
inc
inc
pop
lret
sahf
dec
in
fwait
pop
xor
inc
lcall
insl
pop
ror
mov
jl
adc
jg
psubb
repz
pop
inc
sbb
or
jl
inc
jns
out
jmp
stos
aaa
stc
js
cmp
cmp
push
cld
data16
and
in
mov
cmp
data16
shl
aas
hlt
dec
xchg
orb
add
sbb
icebp
xor
mov
sbb
sahf
aad
sub
mov
nop
add
arpl
push
jo
pop
adc
and
mov
push
adc
inc
push
dec
lds
pop
dec
add
sbb
movsb
dec
xchg
pushf
cwtl
push
inc
mov
sub
mov
or
push
pushf
push
sbb
out
xor
js
mov
adc
aas
pop
adc
test
lock
int3
int3
push
mov
clc
jnp
sub
int
inc
mov
das
inc
pop
mov
arpl
push
mov
jo
lret
cmp
pop
data16
nop
sarb
lahf
sub
nop
or
mov
repz
xchg
cld
push
xchg
and
shr
out
dec
out
xchg
mov
lret
push
lods
cmpsb
or
lret
clc
lea
xchg
or
je
mov
mov
insl
dec
fidivl
inc
aam
mov
addr16
inc
rcr
loop
push
lods
imul
pop
jle
add
jnp
fdivs
outsl
dec
addr16
cmp
out
fistpl
inc
dec
aad
stc
rcrl
or
loop
push
ss
sub
xchg
movsl
es
in
add
jne
push
ljmp
faddl
into
in
jo
in
fcoms
mov
lret
jp
push
or
dec
jns
aam
pop
push
xchg
hlt
fmuls
bound
push
pop
dec
jno
sarb
shr
daa
sarl
mov
movlps
cmp
ret
movsl
adc
shlb
dec
add
call
ja
jl
inc
lock
adc
fiaddl
loopne
mov
or
add
rcr
push
jae
mov
clc
cmp
push
movsl
and
push
or
into
xchg
imulb
or
clc
add
mov
push
mov
sar
sbbl
jmp
add
mov
dec
jae
xchg
insl
and
bound
sub
mov
push
inc
leave
and
or
cs
orps
out
push
sub
sbb
push
mov
or
sbbl
mov
dec
gs
and
test
lahf
pusha
sbb
out
adc
xor
inc
pop
cmc
fldt
and
push
mov
fistl
int
test
cmp
arpl
cld
or
xchg
xchg
push
ljmp
dec
into
and
cmp
or
shl
ret
or
cmp
xor
cmpsl
cmp
arpl
mov
lahf
aad
dec
inc
lahf
pop
sbb
jae
adc
sub
std
nop
mov
fistpll
mov
cmove
popf
mov
nop
mov
ss
cld
pop
jbe
mov
rol
xor
addl
ss
xchg
dec
dec
aad
mov
rcrb
xor
test
call
sbb
mov
or
xor
repz
pmullw
cwtl
pop
mov
dec
in
fninit
sub
pop
mov
pushf
mov
cwtl
fstl
add
push
loope
push
rcrl
iret
add
adc
sub
cmp
in
mov
jl
clc
bswap
push
mov
jmp
lahf
gs
scas
pop
stos
jbe
sbbb
adc
sub
sub
inc
loopne
dec
xor
stos
jmp
adcl
fcmovbe
shrl
nop
mov
jl
pop
cmc
fwait
mov
sbb
pop
cmp
es
nop
lahf
sti
pop
loopne
pop
xchg
ficompl
xor
or
sbb
test
xor
jne
lret
movb
xor
stos
jge
mov
mov
or
pop
push
jae
pop
inc
arpl
shrb
leave
incb
iret
in
and
enter
rorl
sti
jno
stos
cmc
sarl
ret
jae
pop
fidivrl
mov
sub
test
mov
cltd
mov
mov
arpl
fisttps
jmp
mov
mov
inc
int3
in
imul
adc
scas
dec
sbb
scas
push
lcall
pop
pop
inc
sahf
add
mov
scas
sarb
iret
scas
cmp
sar
loope
inc
push
jecxz
sahf
adc
mov
das
mov
cltd
sub
fidivl
cld
pop
stos
addb
mov
rolb
lret
xlat
pop
dec
push
inc
xorl
lods
imul
enter
shlb
mov
pop
pop
into
sub
cltd
push
inc
mov
sti
mov
push
cmpsb
int3
xchg
pop
inc
sub
movsl
jmp
push
xor
gs
vzeroupper
dec
shlb
fisttpll
cli
push
movsl
sub
insl
insb
inc
or
xor
addr16
popf
mov
pop
push
jecxz
inc
fsubrl
xor
mov
cmpsb
loopne
ss
add
in
xor
pop
jle
sbb
and
decl
or
scas
hlt
std
jae
push
int
fwait
xchg
rol
pushf
in
mov
test
shl
sbb
jbe
mov
and
movsb
jns
rclb
test
pop
or
add
xchg
cmp
pop
std
lea
mov
out
fwait
and
push
aas
sub
dec
int
lock
arpl
out
flds
or
xchg
arpl
xor
adc
lods
cs
lods
inc
fists
std
outsl
aaa
sub
pop
push
fsub
inc
xor
cmpsb
cmp
and
ja
mov
sbb
sub
add
dec
inc
adc
rcl
xor
fs
mov
packuswb
and
test
pop
cmc
lret
ds
lock
push
xchg
addr16
jns
jns
pop
imul
in
inc
pop
stos
imul
into
mov
test
inc
mov
sub
jmp
pop
and
mov
adc
test
mov
and
inc
xchg
imul
fdivr
imul
jnp
add
imul
cld
lcall
mov
out
cli
out
cmpsl
mov
mov
xchg
loop
movq
js
arpl
mov
push
or
pop
inc
es
imulb
aas
out
test
std
xchg
mov
sti
or
scas
sarl
orb
rol
daa
cmp
push
jmp
pop
sarl
dec
jnp
fimuls
scas
mov
xchg
pop
cmp
fldt
mov
imul
iret
cmc
imul
push
pop
iret
shlb
repnz
xor
ss
adc
sbb
sub
pusha
mov
rorb
cld
jae
jl
xchg
xchg
inc
imul
mov
fbld
scas
in
pop
xchg
mov
hlt
loope
inc
cld
mov
sti
sub
mov
arpl
or
rorl
pop
inc
loope
jne
sbb
mov
push
bnd
mov
sub
cld
xchg
xchg
push
int
xchg
sbb
mov
xchg
imul
sbb
js
pop
cltd
add
cwtl
popa
adcl
sbb
insb
jae
aam
inc
adc
and
dec
mov
and
xchg
das
lock
mov
xor
or
pop
imulb
aad
or
in
lret
xchg
ljmp
mov
cmp
sbb
out
inc
test
mov
test
lahf
lock
pop
jg
add
cmp
mov
jmp
push
add
pop
adc
add
lcall
out
add
mov
dec
mov
inc
call
enter
jo
loop
adc
pop
loop
lods
mov
dec
inc
cli
mov
xor
lret
lahf
sti
notl
sbb
xchg
mov
pop
lods
sub
into
xor
hlt
xchg
leave
and
and
jae
mov
shl
rep
and
cmp
sbb
int3
inc
lret
add
push
jns
into
lret
pushf
lret
xor
nop
jnp
push
inc
push
pop
sbb
sbb
enter
jp
pop
sub
lret
dec
scas
insl
call
stos
jg
jno
in
push
pop
sub
mov
das
mov
xchg
jmp
icebp
dec
push
pop
sub
iret
push
xor
adc
jecxz
aas
nop
or
insl
in
addr16
outsl
mov
jnp
push
jecxz
mov
xlat
andl
cmp
push
es
mov
pop
xlat
pop
aaa
mov
fwait
dec
sbb
ret
test
sbb
push
cltd
jne
lock
jns
insb
leave
ret
pop
xor
ret
xchg
xor
push
jl
xor
mov
repnz
jecxz
sbb
bound
adc
in
lods
xchg
mov
movsb
repnz
cltd
push
mov
iret
loop
cmc
push
outsb
sbb
fstl
adc
mov
or
cs
fstpt
mov
and
cltd
das
jle
inc
imull
push
out
pop
imul
test
add
icebp
scas
jne
std
mov
pop
pop
dec
aam
leave
pusha
popa
addb
stos
cs
icebp
xchg
xchg
lcall
add
call
jmp
filds
cmp
and
not
mov
je
data16
xchg
in
dec
pop
adc
popf
ljmp
pop
sbb
mov
inc
mov
rcrb
jne
cmc
or
inc
mov
and
inc
xlat
push
add
mov
cmpsl
cmp
clc
mov
or
loope
push
out
lods
in
cli
and
inc
push
in
xor
ds
pop
enter
pop
stc
or
mov
pop
and
jmp
in
add
in
cmpsl
jle
push
shlb
pop
adc
out
inc
negb
pop
rcr
je
fstl
adc
out
popf
mov
xor
jecxz
cmp
outsb
dec
or
test
push
pusha
xor
bound
test
out
test
cmp
jno
and
mov
scas
pop
shrb
dec
test
out
rcll
xchg
jp
ss
enter
inc
int
aad
push
jae
jl
pop
sbb
clc
ret
daa
xor
push
adc
nop
adcl
fxch
adc
insb
outsb
arpl
cmp
inc
jo
ja
sub
xor
lahf
ret
xchg
gs
jecxz
dec
scas
xchg
les
repz
or
xlat
mov
xchg
leave
cs
insl
aaa
hlt
je
rcl
ds
mov
inc
push
mov
adc
std
in
addr16
dec
fisttps
cmp
jbe
pop
imul
cmp
xor
fs
pop
add
dec
aam
xor
add
std
ficomps
sub
testl
iret
pushf
inc
pop
mov
movsw
test
push
cld
pop
divb
popa
xchg
je
test
mov
cli
call
pop
jne
scas
cs
std
adc
pop
xchg
jbe
cmc
mov
mov
jbe
in
cmc
hlt
mulb
test
imul
lods
cmp
cltd
inc
jl
jbe,pt
out
add
mov
test
or
mov
mov
mov
jl
ds
sbb
call
jg
stc
cmpl
mov
mov
cmp
mulb
xchg
jg
ds
rorl
arpl
call
push
imul
adc
pop
dec
dec
sbb
stc
notl
add
popa
aaa
lcall
clc
mov
sbb
fmuls
js
ret
mov
or
or
pop
pop
in
fmulp
movsb
xor
sbb
push
and
push
mov
push
or
sbb
jno
jne
mov
adc
and
ja
insb
mov
dec
or
test
sub
mov
sbb
jno
scas
jae
loop
cs
imul
pop
jge
mov
rorl
popa
mov
adc
jae
and
sbb
add
mov
cmp
ljmp
xor
popf
xor
add
int
mov
ja
cs
mov
dec
jb
out
sub
inc
cltd
mov
jle
aaa
add
push
inc
test
jmp
jb
dec
mov
test
lock
xor
mov
popf
pop
loopne
push
aam
xchg
adc
ret
mov
mov
icebp
mov
mov
popa
xlat
xor
ds
mov
mov
adc
add
push
lds
and
fsubrl
stos
bound
shr
call
or
inc
mov
subl
out
scas
xchg
mov
cvtdq2ps
test
or
repz
push
or
ficompl
cmp
in
mov
mov
fwait
push
fstl
add
xchg
mov
mov
push
aad
jle
imul
mov
mov
in
add
stos
mov
mov
pop
daa
cs
lods
and
dec
imul
lods
push
cld
dec
push
jp
or
daa
in
mov
mov
ret
and
or
pop
xor
xlat
sbb
jmp
xor
scas
leave
inc
ficoms
jno
movsl
mov
out
in
out
jle
push
jo
inc
out
cmc
imul
push
inc
cmpsl
out
int
mov
and
mov
sub
and
nop
call
dec
pop
jle
mov
daa
push
outsl
pop
fldenv
and
divl
iret
daa
ret
add
cmp
nop
cmp
push
inc
xchg
sahf
mov
xchg
lcall
sbb
cmpb
cmc
mov
add
mov
stc
decb
xchg
mov
xchg
in
jg
loop
iret
adc
fimuls
inc
movsb
pop
icebp
aaa
aam
loop
stc
rorb
and
ss
daa
or
inc
movsl
loopne
dec
fildl
push
cmpl
call
cwtl
int3
and
xchg
shlb
or
add
mov
sbb
xor
xchg
adc
scas
iret
or
leave
das
iret
les
into
mov
adc
mov
pop
mov
mov
sub
std
inc
adc
inc
in
in
roll
scas
fs
rclb
imulb
shlb
add
fbld
mov
jl
mov
adc
or
pop
or
dec
mov
or
adc
sbb
cltd
jo
shr
lods
aaa
push
dec
mov
lcall
push
xor
mov
imul
sub
sub
pop
dec
lcall
xor
insb
fcom
mov
inc
push
push
test
sbb
mov
mov
jg
stos
pop
bound
sub
fcmovb
jo
mov
mov
adc
ja
gs
push
pop
or
and
imulb
add
inc
cwtl
stc
cmp
popa
js
outsl
mov
adc
pop
xchg
mov
rcr
imul
rorb
dec
shrl
mov
test
add
cmc
pop
jmp
ljmp
stos
jns
rcll
mov
lret
mov
lcall
in
push
adc
inc
pop
lods
adcb
or
xchg
movsl
mov
inc
loopne
sub
push
cmp
or
jne
in
mov
sbbl
or
adc
call
enter
fs
sub
jecxz
repz
scas
cli
pushf
push
rcll
dec
aaa
xchg
popa
xchg
sarb
cmpsb
nop
xchg
mov
imul
inc
leave
jae
mov
popw
das
mov
loopne
fcoml
xor
cmp
shl
jmp
fists
or
xchg
adc
adc
xchg
pop
mov
adc
cmp
push
pop
push
std
pop
adc
ja
fldcw
cmp
add
or
lahf
out
xchg
test
and
into
xor
jmp
test
in
pop
pop
xchg
sbb
stc
notl
movsb
push
repnz
dec
jecxz
pusha
inc
or
shrb
ss
scas
jb
sub
jno
xorb
inc
add
and
cld
push
rolb
mov
xor
adc
daa
leave
add
inc
jmp
cmp
dec
cmp
sbb
push
repz
mov
mov
outsl
add
les
mov
aaa
dec
stc
movsl
pop
das
cmp
add
je
popa
mov
sti
mov
xchg
sub
stos
rolb
aas
je
sub
add
pop
in
scas
sbb
push
popf
mov
dec
xor
pop
mov
lock
adc
xorb
pop
fdivr
lock
push
stc
and
mov
jno
in
sbb
js
orb
mov
sti
cmp
test
ret
jl
mov
mov
dec
mov
or
push
daa
sub
mov
or
or
stc
ja
repnz
lcall
mov
scas
push
lret
out
and
xorl
add
xchg
pop
inc
mov
mov
loop
push
repz
jo
sarl
jo
call
lock
inc
lock
sbb
mov
cmp
ljmp
add
cs
jno
sbb
mov
loope
nop
xor
out
push
ljmp
xchg
jo
test
lea
cmc
enter
and
or
dec
test
into
sub
into
push
pop
xchg
sub
ja
push
scas
lds
mov
cltd
add
or
mov
cltd
loope
push
jno
jne
fwait
enter
loop
jb
add
out
inc
jo
subl
pop
sbb
or
mov
jnp
sub
mov
jp
ret
int
and
outsl
push
push
and
movsl
sub
pop
push
xor
je
int
xor
stos
hlt
sbb
cmc
fisubrl
xorb
cmp
xor
cli
int3
in
sub
dec
pop
dec
dec
add
cmp
xlat
sbb
pop
xor
fs
mov
in
dec
add
and
inc
loop
and
scas
jbe
jmp
mov
enter
push
lods
and
sti
dec
push
ss
arpl
adc
cld
cmc
out
cmp
hlt
mov
sub
pop
mov
stos
in
movaps
adc
pushf
push
je
cmp
push
and
insl
data16
dec
push
lods
inc
mov
negb
jno
jmp
lcall
mov
lea
out
jae
and
pop
mov
ficoms
inc
inc
lahf
lods
pop
adc
bound
xor
jbe
jo
or
dec
and
sbb
dec
adc
inc
stos
adc
lds
stc
cmpsl
push
push
arpl
add
push
out
fstps
cli
lods
repz
push
mov
mov
jmp
es
mov
push
ret
jg
sub
movsl
js
outsb
push
mov
fsubrs
push
cld
pop
in
jbe
test
push
adc
dec
jecxz
out
loopne
aaa
sub
icebp
jmp
push
hlt
sbb
data16
xchg
out
cltd
pop
mov
mov
insb
and
movsb
ret
xor
fwait
jp
xchg
pop
jmp
sub
rcrb
test
pop
in
jmp
ljmp
js
icebp
mul
dec
mov
push
loopne
shl
xor
and
mov
sbbl
jg
mov
jae
push
fnstenv
cmpb
sub
jo
rcr
call
sahf
je
jo
ret
das
lds
add
shlb
mov
cmp
lods
pusha
jnp
nop
test
mov
pusha
pop
cmp
gs
pushf
int3
push
pop
pop
ss
cmp
int
xchg
mov
add
jno
outsb
fstpl
jle
mov
adc
pop
jne,pt
lret
ja
add
lea
into
jge
push
and
add
outsl
repz
pop
sahf
pusha
clc
sub
addl
push
icebp
hlt
movsb
cmp
mov
neg
sahf
sbb
mov
ret
fisttpll
mov
sahf
pop
cmp
sbb
add
cltd
mov
pop
ss
out
inc
rorb
fstl
push
xor
cmp
sbb
lea
sahf
in
jns
sbb
jp
cmpb
lods
imul
jp
jecxz
int
jno
xor
xchg
repnz
mov
dec
pop
rclb
in
adc
ljmp
xor
push
pop
cmpl
imul
repz
dec
dec
das
rcl
lods
shl
push
cmpsl
pop
pop
pop
int
out
or
gs
scas
push
pop
or
in
adc
sbb
push
or
stos
into
mov
dec
pop
inc
sub
push
sbb
push
icebp
test
lock
mov
jl
mov
popf
sbb
daa
and
cmpsl
jecxz
cs
jae,pn
sbb
cld
or
dec
je
pop
and
mov
adc
lret
xchg
subb
mov
add
adc
pushf
out
pop
loopne
jo
cltd
pop
or
sub
xor
mov
enter
fnsave
cmc
mov
cmc
push
jmp
ljmp
lret
inc
stos
mov
addb
iret
cmp
mov
pop
jle
inc
cmp
outsb
arpl
push
stos
push
dec
or
or
mov
pop
mov
lret
add
arpl
rcrb
and
push
push
div
das
mov
int3
adc
fsubs
std
cltd
mov
enter
pop
adc
ret
dec
es
pushf
cmp
jge
jbe
inc
add
sarb
push
ret
mov
popa
dec
xor
add
sub
sub
cmp
rcrl
xor
pop
test
mov
jmp
bound
mov
lds
daa
ja
push
xchg
mov
lret
xor
pop
pop
lret
aas
add
adc
les
ret
leave
aaa
sti
cmpsl
xchg
inc
pop
sbb
jbe
add
add
fldcw
in
jno
cltd
andb
mov
mov
jb
adc
lcall
sbb
dec
data16
imul
inc
es
xor
test
inc
subb
jmp
adcb
sbb
push
xlat
jbe
pushf
fs
fsubrs
sub
xchg
mov
test
push
lock
mov
push
mov
jb
dec
jne
stos
popf
mov
pop
xchg
cs
adcl
dec
mov
push
pop
lea
mov
push
cld
in
cmpsl
mov
pop
cmp
imul
cmp
ja
int3
mov
insl
sub
pop
insb
mov
in
mov
lock
mov
adc
inc
or
dec
add
adc
jno
mov
or
push
icebp
int3
enter
fs
loopne
inc
imul
ja
pop
push
js
inc
leave
lea
add
mov
push
sub
movsl
ljmp
push
stc
nop
dec
loope
sub
mov
movsl
or
movsl
stos
push
pop
mov
push
pop
xor
dec
testl
push
sbb
fstps
jne
js
pop
dec
push
mov
sarl
jns
jb
and
dec
addr16
mov
aam
test
movsb
xchg
and
aas
inc
dec
popa
mov
call
out
rorb
or
out
xchg
imul
xor
lret
mov
or
jae
les
mov
aas
xor
jmp
jle
pushf
push
pop
sub
mov
js
scas
dec
popa
bound
popa
mov
jae
clc
push
lods
jl
pop
push
mov
inc
push
outsb
loop
shll
sbb
out
xor
adcl
fcoml
leave
xchg
cmp
add
xchg
jne
pop
mov
mov
pop
jmp
aas
xchg
pop
sbb
inc
cmp
mov
dec
pop
mov
sahf
out
incb
frstor
dec
and
inc
cmc
mov
xchg
adc
mov
inc
jb
mov
adc
jns
std
mov
pop
stc
aad
outsl
jo
jg
outsb
sbb
mov
pop
stos
xor
push
pushf
dec
push
cli
pop
inc
inc
ja
sarl
outsl
out
fwait
jbe
pop
std
shrl
adc
dec
mov
pop
pop
xchg
cli
jge
xor
inc
out
and
fsts
cmp
stos
push
jo
loopne
mov
pop
fwait
xlat
outsb
dec
in
mov
inc
inc
lea
dec
pop
pop
jb
cmp
inc
push
sbb
icebp
mov
iret
or
sub
push
or
cmp
call
enter
scas
xor
jno
push
cmp
add
inc
sbb
std
add
jns
adc
outsb
ds
xor
faddl
cmpsb
clts
arpl
xor
lret
aas
mov
pause
mov
pushf
push
jo
jge
inc
adcb
pop
inc
push
dec
dec
add
pop
movsl
xchg
push
jl
movsl
sbb
sub
sub
cli
movsb
scas
mov
jbe
cmpsb
movb
push
out
push
or
pusha
popf
arpl
in
xchg
mov
or
icebp
sub
xchg
jp
jmp
bound
jnp
jg
movl
cmp
test
aas
bound
mov
out
pop
inc
and
push
xor
cli
jg
push
push
js
fldcw
mov
jno
cmp
mov
mov
mov
out
repnz
stos
aaa
or
sub
cmp
loopne
repz
add
sarb
cmovae
xchg
stc
push
jno
paddsb
repz
inc
stos
sbb
or
jl
jne
fdivrs
lods
fistps
stc
dec
add
mov
pusha
xor
push
xor
jb
jecxz
std
cmc
xlat
or
jp
nop
cmp
mov
xchg
clc
scas
push
dec
add
shl
out
ljmp
sbb
xchg
or
dec
ljmp
in
in
mov
out
mov
rcrb
push
or
push
int3
cmp
call
or
cmp
jle
adc
ss
mov
inc
int
xchg
or
fldcw
dec
mov
jp
dec
cmp
xchg
push
test
xchg
pop
addr16
fdiv
jne
fidivs
addl
cmp
lcall
incb
pop
mov
inc
and
sahf
push
mov
in
sub
lods
add
dec
ds
lock
sti
ljmp
aad
sub
adc
gs
cmove
js
pop
ret
xchg
xchg
outsb
sub
nop
inc
rcll
sar
inc
adc
pop
pop
add
addr16
sub
aam
dec
or
add
push
int
shll
mov
mov
push
pop
sbb
adc
xchg
scas
into
aam
cmpsb
cmpb
cld
loop
pop
jp
and
jmp
lods
loop
xorl
inc
adc
scas
jo
data16
and
imul
sbb
sub
mov
out
je
lret
lcall
aad
ljmp
mov
cmpsl
jge
hlt
not
or
hlt
adc
jp
cmp
shrb
ficomps
pop
mov
jp
roll
cwtl
pop
iret
loop
add
aas
lds
dec
call
lds
adc
clc
sti
jno,pt
dec
mov
leave
mov
loop
jne
xorb
jne
dec
mov
outsl
lahf
sub
pop
enter
push
mov
push
or
repnz
clc
in
std
adc
enter
push
call
es
mov
clc
or
fisubrl
add
pop
stos
mov
xorl
ja
dec
inc
sbb
cmp
cs
ja
imul
adc
loopne
ret
jecxz
mov
sub
dec
ret
ss
jge
test
dec
cmpsl
fs
cltd
int
sbb
jecxz
imul
cmpsb
jbe
outsb
fnstcw
xor
mov
mov
cld
into
lods
mov
pop
adc
pushf
notb
cwtl
cld
ret
sarl
adc
dec
adc
aas
imul
popl
cmp
icebp
sub
adc
jb
pop
xor
enter
sbb
fstl
push
xor
adc
mov
xchg
insb
cmpsl
in
scas
lods
dec
mov
adc
dec
and
jbe
inc
fstpl
pushf
rcrl
es
loopne
es
in
enter
pop
add
shll
sti
push
popf
addb
sbb
out
mov
lcall
ja
mov
int
or
and
push
fimull
sbb
repnz
out
jg
cs
int3
roll
nop
xor
mov
aad
addb
jecxz
clc
xchg
sahf
int3
sub
mov
pop
imul
jnp
out
cs
lret
sar
mov
xor
cld
xor
scas
and
dec
fstpt
mov
pop
and
imul
jecxz
xor
adc
sub
sbb
dec
loopne
fwait
mov
leave
lahf
je
vpunpckhdq
mov
sub
les
loopne
neg
xor
in
stos
cmp
roll
mov
loope
and
dec
std
jl
add
ret
dec
ds
mov
repz
push
dec
in
push
rcrl
xor
lcall
jecxz
add
or
inc
sbb
sub
sbb
ljmp
fldcw
mov
xchg
les
daa
dec
xor
icebp
cmp
jp
add
mov
jo
adc
ror
mov
inc
aam
xor
mov
mov
push
stos
dec
ljmp
push
add
jp
add
push
adc
mov
movsb
ret
dec
and
shl
adc
xchg
or
and
adc
rcl
pop
call
mov
adc
insb
outsb
daa
add
cs
into
inc
cmp
add
mov
or
cmp
xchg
adc
push
enter
cli
and
lds
ret
test
cmpb
fimull
mov
sti
enter
aaa
mov
pop
mov
fisubrs
sub
movsl
outsb
add
cmpsb
pop
hlt
xchg
inc
mov
push
xchg
aam
incb
stos
jl
jno
sbb
cmp
aam
imul
insl
insb
sub
lock
lods
stos
lcall
mov
rcll
dec
push
xor
ds
mov
out
mulb
xor
sub
imul
lds
adc
sub
inc
xor
js
hlt
pop
nop
xor
lcall
mov
scas
push
sub
pop
mov
rorl
and
pop
mov
shrb
dec
push
es
lea
mov
lods
cld
cld
inc
das
push
cli
enter
loop
mov
imul
xor
ljmp
add
mov
insb
jp
push
call
mov
lods
ret
pop
sub
out
or
push
cmc
sub
pop
test
lret
lcall
cmovge
adc
stos
adc
add
mov
cmp
cli
fisttpll
cltd
push
inc
mov
sub
sarb
mov
mov
in
pop
pop
sub
or
pop
add
sbb
outsb
inc
or
mov
ljmp
imul
pop
sub
dec
sarl
jbe
add
mov
cmp
out
xchg
jno
fs
xchg
dec
je
and
into
jge
or
lret
insb
frstor
and
jmp
out
scas
pop
pop
idiv
dec
or
loop
add
decl
push
jnp
lahf
mov
or
xchg
pop
std
leave
fwait
cwtl
jbe
pop
bound
pop
cld
xchg
or
jmp
mov
stos
fsubl
rcll
push
decl
imul
mov
movsl
hlt
notl
cmp
dec
movsb
mov
jmp
les
movsb
insl
inc
loop
xor
cmpsb
ja
push
and
movsl
pop
scas
cmp
imul
cmpsb
sub
pusha
mov
popf
jg
inc
in
mov
inc
dec
xchg
mov
add
mov
rorl
jne
xor
popa
in
fwait
cmp
cmp
xchg
js
inc
push
ds
jne
or
movsb
mov
sbb
sub
sub
inc
push
test
dec
out
sbb
push
test
dec
mov
or
xchg
aad
jbe
add
and
outsl
in
jne
loopne
loopne
mov
pop
mov
in
adc
jb
mov
call
jbe
mov
das
lea
mov
adc
stos
mov
mov
fmuls
dec
xor
nop
and
push
rcll
add
cli
and
mov
lods
mov
fwait
push
xor
dec
sub
jae
cmp
pop
in
out
arpl
iret
jae
out
aas
add
sbb
movsb
sbb
lahf
sbb
imulb
addr16
in
mov
pop
add
or
pop
hlt
fimuls
insb
shr
loopne
iret
sub
test
cld
push
xchg
ret
mov
fdivrs
dec
jp
lock
add
aam
cmpb
bound
lea
insb
fldt
lret
xor
add
mov
aaa
jae
dec
cmc
pop
push
xor
ret
daa
cld
repz
or
push
in
mov
push
dec
pusha
jg
push
sub
mov
mov
dec
enter
cli
lock
leave
and
push
sbb
mov
lea
out
push
popa
repnz
mov
ljmp
mov
cmc
jno
jmp
aad
orl
es
jb
std
lock
aam
ret
add
loopne
out
sub
push
add
repz
shlb
lahf
lret
call
lahf
sbb
pushf
xchg
ror
inc
fwait
push
movsl
mov
fwait
mov
inc
adc
mov
pop
mov
cmpb
enter
sbb
add
pop
mov
icebp
sarl
mulb
mov
cmpsb
insl
fnstsw
push
pop
mov
jns
add
push
in
idivl
std
hlt
jmp
out
jecxz
fstps
cmp
ds
sub
insb
cmp
ret
dec
or
out
lods
mov
xor
pusha
inc
mov
mov
jge
enter
add
enter
sbb
out
jecxz
call
adc
add
sti
push
pop
loope
pop
aas
jne
loop
or
das
mov
int
ljmp
das
inc
lea
stos
cmp
imul
dec
jle
inc
imul
in
mov
jae
iret
dec
push
cmp
icebp
sub
clc
mov
mov
sbb
jp
add
scas
addr16
xor
inc
lret
into
add
sbb
adc
lahf
mov
idivb
std
push
fsub
push
sub
mov
jecxz
scas
xchg
dec
movsl
jb
sub
dec
push
in
mov
jmp
jno
sbb
or
stc
fcmovbe
pusha
mov
ficomps
pop
ret
loopne
jnp
arpl
mov
pop
pop
add
imul
and
dec
pop
test
push
out
lcall
lds
xchg
gs
inc
push
dec
mov
xor
pop
jmp
sub
dec
cmpl
xchg
or
push
fmulp
inc
iret
std
lret
fistps
xor
push
or
out
jecxz
loopne
xchg
jne
pop
inc
mov
insb
shrb
add
loop
pop
addr16
cli
aad
insb
xor
in
xor
test
fnstsw
loope
cmpsb
sub
cmpsl
mov
or
sub
mov
pop
das
fmuls
mov
or
mov
loope
enter
jnp
ljmp
cwtl
mov
nop
stc
rorb
int3
popa
mov
push
sbb
je
aaa
xlat
in
xor
dec
and
stos
cli
pop
xchg
mov
sub
xchg
call
add
je
pop
popa
in
out
lds
cmpsb
int
pop
mov
xor
mov
xchg
add
jnp
scas
pusha
adc
aam
lret
in
out
xchg
dec
jnp
mov
inc
push
and
repz
out
jne
fadds
jle
inc
and
arpl
mov
and
hlt
lods
adc
and
adc
xchg
pop
or
stos
fs
fisttpll
enter
or
jo
jecxz
and
add
ljmp
call
add
mov
and
jno
lcall
jmp
jmp
adc
cmpsl
pmuludq
dec
push
addl
enter
imulb
out
insl
push
subl
shlb
les
stos
inc
int3
mov
cmp
repnz
ficomps
mov
mov
and
mov
arpl
jecxz
adcb
sbb
les
fwait
cmpsl
xchg
sbb
pop
movsl
jo
js
pushf
mov
push
dec
icebp
mov
out
and
or
push
fsubrl
xchg
pusha
aas
sub
nop
inc
sbb
mov
int3
push
leave
insl
in
mov
iret
in
mov
out
xchg
mov
js
jne
in
jmp
pop
cmp
cli
les
pop
sbb
cmpsl
mov
mov
adc
jns
decb
int
lds
subl
daa
shll
iret
xchg
mov
lods
lahf
imul
sub
xchg
sub
mov
sub
sbb
inc
in
pop
sbb
movsb
test
les
fwait
inc
mov
fcmove
inc
jo
mov
rcr
jne
bound
insl
loopne
addr16
mov
mov
push
mov
aas
sub
pop
idivb
je
pop
dec
lret
decb
add
divl
mov
stc
adc
or
push
mov
xlat
fsubs
les
rorb
pop
cwtl
movl
in
aaa
push
sbb
xor
lcall
xchg
fwait
sbb
mov
sub
dec
stc
sub
cmpsl
stos
push
jle
cmp
push
in
sbb
inc
sub
add
dec
mov
adc
inc
call
jg
pop
inc
jmp
pop
or
hlt
and
lods
loope
sbb
or
in
stc
dec
pop
icebp
scas
arpl
lods
mov
arpl
mov
fidivrl
in
lock
mov
sbb
mov
pop
pop
cmp
pushw
xor
lds
xor
in
mov
lods
andb
mov
movsl
mov
adc
sub
fadds
notb
ret
and
in
and
rorb
adc
adc
mov
jge
sub
std
mov
ret
es
bound
clc
movb
rclb
push
sbb
mov
sub
add
jle
push
pop
push
aad
push
and
shrl
push
loopne
pop
cld
ljmp
xor
mov
cld
dec
out
xor
pop
addr16
mov
push
out
jmp
icebp
addr16
outsb
dec
cld
repnz
roll
push
cmp
icebp
or
push
repz
pop
inc
pop
xchg
xchg
add
test
xor
push
xor
es
testb
mov
rclb
pop
sahf
daa
test
pushf
mulb
iret
fwait
sub
and
jo
pop
rorb
cmp
stc
fbstp
dec
out
mov
push
pop
dec
jl
mov
js
pop
cli
aad
jae
mov
orl
int
in
sbb
inc
adc
and
pop
pushf
or
aad
sub
push
popa
cmp
cli
jns
xchg
jp
xchg
jecxz
call
or
mov
sub
cmp
dec
enter
das
daa
les
cs
lcall
fs
pop
push
or
jp
or
add
or
and
sbb
xchg
insb
pusha
test
lret
outsb
icebp
andl
neg
mov
mov
adcl
xor
xor
testb
and
imul
pop
call
add
jb
mov
mov
rcll
push
lock
movsb
in
jge
or
inc
mov
insb
into
scas
repnz
push
popf
int3
cmp
int3
insb
in
jne
dec
jbe
icebp
cld
fnstsw
cwtl
adc
mov
sbb
add
mov
inc
inc
adc
pop
jge
in
adc
mov
arpl
cmp
sbbl
xor
repnz
mov
mov
jnp
in
cmpsl
int3
push
xchg
mov
fnstsw
out
mov
inc
scas
inc
rcrb
cltd
cmpl
mov
push
pop
cmp
sub
outsl
sbbw
jno
nop
dec
cld
gs
fcmovnu
loopne
jbe
pop
mov
fwait
push
lock
mov
loop
adc
mov
mov
mov
mov
sbb
ljmp
out
int
ret
xchg
inc
scas
std
out
mov
stos
xor
push
jae
inc
mov
jae
sbb
cmovne
lcall
xor
mov
dec
out
and
rolb
push
incl
jl
ljmp
repz
xor
into
fs
bound
std
push
pusha
dec
sbbb
mov
jnp
rclb
inc
add
mov
lds
mov
push
cld
and
stc
mov
xchg
mov
push
fs
les
pop
lea
pop
addr16
add
and
pop
fistpll
rol
stos
pushf
mov
xchg
mov
insl
add
push
scas
mov
ljmp
sub
fnstsw
movb
or
push
jno
test
push
loopne
and
nop
movsl
xchg
ret
out
outsl
call
push
push
inc
sub
sti
ret
cmpsl
scas
adc
lock
add
es
inc
mov
orl
cmc
out
fmull
jp
neg
out
pop
pushf
sub
outsb
jge
xor
mov
fwait
add
mov
jp
mov
push
jmp
mov
bound
pop
and
test
inc
movsb
jp
rolb
pop
or
aas
push
shl
call
es
sub
dec
push
dec
xchg
aam
jmp
xlat
ss
mov
push
dec
mov
jp
and
dec
cmc
add
add
and
jns
out
enter
xor
shll
sbb
loop
lods
js
pop
faddl
or
clc
mov
cwtl
lods
push
aam
lods
mov
jno
mov
cmpsl
dec
adc
push
pop
in
inc
out
scas
fldcw
xchg
das
jmp
dec
scas
xchg
push
or
mov
imul
and
add
mov
pop
lods
xchg
sbb
notl
mov
stos
or
mov
nop
imul
pop
ss
fwait
aas
mov
xor
sbb
xor
sbb
sahf
or
out
into
jg
pusha
aad
orb
std
push
rcrl
jb
test
outsl
dec
mov
inc
cmp
aad
les
js
test
fdivs
dec
ljmp
sahf
aaa
sub
dec
jns
insb
push
mov
cltd
stc
mov
pop
loope
movsb
outsb
in
out
xchg
sbb
add
imul
cmp
or
inc
pop
mov
adc
lea
scas
shlb
sbb
jae
movsb
add
xor
stos
jo
loopne
mov
cld
mov
sub
inc
mov
scas
sbb
ss
jns
scas
pop
push
clc
xchg
add
mov
je
rorl
cld
scas
and
mov
inc
push
sbb
aaa
push
cmp
ljmp
sti
out
mov
in
aas
nop
cmp
sub
add
adc
and
pop
sbb
aas
pop
dec
dec
jecxz
sub
popa
push
dec
rcrl
push
sbb
test
aaa
jmp
jbe
fwait
sub
add
xor
inc
cmp
jno
loop
popa
in
or
adc
aas
push
out
jecxz
sahf
je
ja
scas
push
xor
push
adc
push
mov
pushf
cmc
push
cmp
jmp
pushw
cmp
clc
cmp
push
xchg
dec
push
mov
jle
mov
ljmp
out
xor
add
fsubl
cmp
jp
pop
push
movsl
imul
mov
sub
arpl
xchg
push
jae
xor
sahf
push
sbb
xor
enter
scas
cs
jae
jno
sub
stos
xchg
pop
sub
and
cmp
lods
in
test
movsb
dec
jb
nop
mov
sbb
popl
in
cmp
repz
jl
adc
rol
sub
push
lret
xchg
push
sub
or
mov
inc
mov
ss
xor
les
mov
lods
add
mov
jmp
add
jns
jp
xlat
clc
jle
jb
and
test
cmp
cmp
jo
pop
ror
push
jo
popf
mov
pop
idivl
ljmp
subb
xor
popa
fs
and
mov
fildll
in
in
movsb
or
ss
in
jmp
popa
lea
inc
inc
sahf
inc
lods
cmpsl
lds
push
loop
jno
lds
mov
imul
jno
aas
popf
cmc
das
stc
test
or
inc
clc
xlat
loopne
fs
lret
pop
xchg
jecxz
dec
jge
mov
lods
fsubs
cwtl
dec
pop
out
push
cmc
in
cmp
dec
aaa
jbe
sbb
jno
out
mov
mov
mov
fisubrl
sbb
aaa
mov
jne
cmpxchg
pop
dec
mov
and
loopne
icebp
inc
repnz
cs
cmp
push
jg
enter
push
adc
sbbl
fld
call
ds
int
sub
or
mov
inc
sub
loopne
sub
es
lods
mov
data16
ret
ret
cmp
jbe
and
xor
std
jno
push
out
popa
or
or
sbb
add
fwait
mov
test
sub
sbb
lds
imul
mov
xor
movhps
or
ja
gs
mov
adc
mov
hlt
push
and
enter
mov
js
loop
movl
push
movsb
roll
aam
xchg
adc
enter
test
ss
sarl
xchg
push
jae
stos
andb
xchg
bound
es
lock
mov
sti
and
cmpl
dec
pop
inc
mov
xor
loop
jns
xor
out
adc
inc
xchg
scas
sbb
adc
rcrl
xchg
push
xchg
add
stos
mov
inc
cmc
fisubl
fistpll
fs
fistpl
and
jns
cmpsl
insl
add
pop
ds
mov
addl
pop
mov
in
mov
gs
in
nop
fildl
gs
les
sbb
jg
pop
rcrb
xchg
fisubl
gs
rclb
sbb
mov
repz
stos
sar
mov
xchg
ret
insl
add
fsubs
sub
aaa
fdivl
inc
cmp
cmp
pop
push
es
test
and
xchg
push
enter
jg
dec
adc
loop,pn
dec
add
lds
stos
push
push
scas
jge
mov
imul
mov
gs
fdivrl
bound
and
jecxz
arpl
das
fistl
mov
outsl
insl
mov
add
mov
xor
dec
aaa
lea
aad
xor
movsl
aad
adc
fisttpl
push
dec
addr16
daa
das
out
add
dec
insb
xchg
movsb
iret
out
mov
inc
sub
and
int
cmp
and
pop
mov
ss
mov
repnz
cmp
xchg
rclb
test
popa
mov
push
arpl
xchg
and
movsl
fadds
xlat
cmp
ja
flds
dec
lea
sbb
daa
std
sbb
mov
call
insb
das
int
aas
data16
int3
dec
mov
sbb
xchg
aas
pushf
fdivrp
jmp
call
jo
inc
sar
adc
inc
push
jg
jno
and
es
cmp
sub
dec
xchg
inc
inc
jg
addr16
orl
mov
iret
in
xor
jbe
movsb
stos
and
aad
scas
pop
xor
push
pushl
fimuls
mov
xor
mov
mov
push
mov
frstor
sub
cmp
xor
iret
mov
sub
adc
push
adcl
mov
xchg
xor
and
pushf
mov
bound
stos
fisttpll
fisttpll
ljmp
loopne
stos
push
dec
push
add
lret
ds
sbb
arpl
xor
test
or
stos
cmp
adc
cmp
jne
and
lahf
in
lahf
nop
xlat
add
jmp
mov
push
hlt
lds
sub
push
xor
push
push
stos
pusha
dec
pusha
sbb
movsl
cmpsl
push
mov
or
popf
xchg
fists
fildl
cmp
jnp
inc
popf
hlt
stos
pop
cmp
inc
lods
push
fisubrs
sar
test
xchg
xchg
or
push
bound
stos
mov
jnp
dec
js
inc
in
js
dec
out
test
shl
pusha
rorl
or
movsb
push
and
cli
dec
add
cltd
loope
out
and
dec
ret
sbb
xor
sti
hlt
or
jmp
ret
out
sub
mov
int
or
les
push
fs
popa
cmp
inc
rcrb
in
int3
dec
mov
xor
mov
pop
repz
repnz
sar
inc
insl
adcl
or
mov
aaa
in
xor
loopne
pop
inc
inc
mov
dec
repz
jns
decb
jmp
out
and
insb
mov
jl
inc
repz
cmp
addr16
test
lds
repz
cmp
aam
iret
add
push
imul
lcall
ds
inc
std
daa
out
imul
push
addr16
inc
mov
jle
shll
cmp
test
ret
push
mov
cs
mov
je
adc
sub
enter
add
and
gs
push
xchg
cmpsl
or
and
mov
pop
lea
loopne
popa
insl
rcl
cmp
flds
push
sub
sbbl
add
fmull
pop
xchg
and
pop
idivl
mov
out
sub
test
add
outsl
cmp
xchg
into
lahf
cs
mov
mov
dec
sbb
in
mov
pop
push
ror
aad
addb
mov
flds
ds
adc
sbb
pop
repnz
cmp
out
sub
add
xor
or
in
and
sub
mov
sbb
lcall
sub
std
scas
and
inc
popa
add
push
mov
pop
cmpsb
xchg
ficompl
ja
lds
or
cmpsb
dec
in
leave
push
push
mov
out
or
push
lret
ljmp
arpl
hlt
jne
xlat
sti
inc
pop
jae
adc
mov
jge
fcmovnu
mov
lahf
sti
je
jns
xlat
in
push
push
insb
into
add
fistl
mov
and
out
dec
sbb
hlt
daa
jo
int
jbe
pop
xchg
adc
stc
xor
jl
mov
pop
push
mov
fldt
sbb
inc
pop
inc
repz
into
aaa
out
sti
enter
dec
pop
call
clc
jmp
push
adc
cli
jo
push
sub
iret
pop
imul
mov
xchg
mov
pop
cmp
mov
pop
cmp
cwtl
ss
sub
shl
lds
dec
mov
outsb
pop
mov
jo
and
in
push
repz
jb
xchg
imul
sub
popa
jns
loop
add
mov
testb
mov
pop
shr
rclb
rcrb
add
roll
mulb
mov
push
in
jmp
ljmp
sub
xor
jp
cmpsl
jg
jg
jg
push
pop
insb
mov
or
mov
xlat
sbb
cmc
mov
in
pop
pop
out
dec
shll
rcrb
xchg
data16
xor
insb
jne
std
sarl
test
cmp
fstpl
mov
sbb
addl
dec
addl
sbb
loop
mov
xor
out
xchg
pop
lcall
and
and
repnz
aad
pusha
add
jns
movsl
fwait
test
mov
imul
pop
out
cmc
xor
daa
insb
cmpsl
jno
std
or
out
push
jp
into
push
pop
aaa
sbb
and
sbb
adc
addr16
dec
clc
pop
xlat
sbb
jnp
pop
inc
loop
nop
mov
stos
mov
sub
pop
mov
test
pop
xlat
add
and
lret
push
and
mov
nop
rorl
and
add
loopne
iret
testl
call
int3
mull
popa
movsb
fwait
scas
push
mov
adc
inc
and
stos
ja
cli
arpl
mov
mov
cmp
lds
call
aas
mov
sbb
mov
stos
add
mov
outsb
shl
adc
aas
cmp
sti
xchg
adc
stos
iret
or
or
loope
rcll
test
add
push
je
ret
dec
push
orl
xchg
movb
sbb
push
pop
or
jl
add
inc
outsb
adc
addr16
mov
out
xchg
nop
fidivl
ret
orl
enter
jg
idivl
scas
mov
push
mov
mov
push
inc
icebp
push
arpl
cwtl
inc
or
dec
mov
into
sbb
sbb
ljmp
test
push
push
mov
or
iret
in
xchg
sbb
mov
add
or
fisubs
mov
jle
xor
cli
pop
mov
inc
and
ret
xor
andl
mov
and
mov
pop
dec
or
fiadds
rclb
mov
insl
pop
push
xchg
jle
cli
iret
sub
sti
std
push
out
cmp
lock
xor
push
push
insl
hlt
mov
cmp
out
mov
ds
test
int
push
in
mov
ret
adc
mov
mov
je
ret
aad
sahf
push
call
cmp
add
loop
lret
or
pop
dec
push
scas
pusha
jmp
sub
scas
ljmp
xchg
jp
push
sahf
jecxz
imul
fnstcw
and
jne
into
mov
loope
mov
ja
sahf
andl
mov
jg
push
jle
int
mov
popa
fsub
mov
sub
mov
xor
out
dec
insl
inc
shll
loop
add
subl
jbe
in
pop
pop
mov
inc
cmp
loope
mov
add
dec
dec
int3
xor
test
sub
pop
aaa
jecxz
pop
pop
test
das
push
aad
cmpb
mov
ror
pusha
jae
and
lea
jo
jb
add
fildll
mov
sub
roll
push
cli
popf
cmc
out
lods
fdivrs
dec
lahf
cmc
push
repz
adc
sbb
jg
imul
push
out
or
sbb
inc
hlt
push
out
dec
arpl
in
and
xchg
cli
xchg
es
or
stc
leave
imul
movsl
xor
mov
mov
xlat
in
fwait
lea
insb
sub
mov
sub
push
push
shlb
fistps
ja
test
sub
insl
mov
orl
cli
aaa
scas
idivb
add
fiaddl
pushf
and
arpl
push
or
mov
inc
daa
int3
test
aas
aad
popa
loop
push
or
pop
pop
push
scas
std
lds
inc
loope
dec
pop
scas
adc
dec
push
xor
inc
movsb
xchg
adc
xlat
sbb
je
ret
add
add
pop
adc
sbbl
mov
out
es
mov
out
xchg
add
call
jnp
adc
jno
jae
inc
add
enter
shl
mov
loope
loope
test
pop
cli
popa
lahf
mov
inc
arpl
dec
fcomps
xor
jb
fistl
fwait
xchg
lods
orl
repnz
pop
das
aad
fdiv
shlb
mov
std
std
mov
add
pop
inc
into
dec
call
xor
cmp
std
fsubs
dec
sbb
sub
lock
pop
mov
push
or
sti
jmp
outsb
lods
into
jno
mov
std
and
push
and
jno
je
pop
js
lret
and
lahf
nop
xorb
rorl
mov
jne
jp
pushf
push
mov
sarl
pop
fxch
dec
lock
je
je
loopne
int
mov
and
inc
mov
cmc
aam
popa
and
xor
lods
int3
dec
add
dec
jle
or
std
or
mov
icebp
mov
mov
ret
xchg
and
sbb
mov
data16
popf
jge
and
fadd
dec
into
cmp
pop
enter
push
sub
jmp
test
test
int
mov
push
test
cli
sub
pushf
xchg
and
xchg
adc
mov
out
xchg
inc
or
add
add
ljmp
jecxz
stc
jle
out
pop
in
call
repz
pusha
call
shrb
lret
fdivl
popf
sub
bound
sbb
call
xor
and
imul
fcoml
mov
jb
movsb
jae
mov
fnstenv
cmp
push
jmp
sbb
mov
inc
mov
xchg
cli
inc
pop
dec
cmp
lahf
mov
or
push
mov
mov
les
jle
sbbb
arpl
xchg
cli
jnp
mov
or
adc
call
mov
pop
dec
sbbl
jmp
mov
fimuls
popf
mov
sub
sbb
inc
cmp
xchg
leave
sarl
adc
and
sub
popa
hlt
idivl
hlt
sub
xchg
scas
mov
ljmp
and
push
dec
inc
mov
jb
push
imul
loopne
lods
pop
mov
jne
mov
subb
inc
insb
cmp
mov
frstor
jg
mov
mov
pop
inc
ret
add
xor
hlt
xor
sub
mov
adc
stos
jae
or
es
daa
addl
adc
hlt
sbb
mov
sbb
push
inc
add
fisubrs
testl
inc
pop
sub
push
loope
xchg
rclb
aad
lods
out
mov
mov
test
jne
inc
fwait
cmp
imul
in
nopl
das
pop
fcmovbe
jo
pop
pop
mov
jge
js
and
ss
xor
in
ret
jp
sub
ds
jmp
insl
xchg
pop
iret
inc
mov
pop
iret
xchg
xchg
jb
dec
js
push
ss
aaa
hlt
movsb
jg
sub
jp
pop
sbb
cltd
adc
das
bound
xchg
repnz
jmp
xchg
xor
dec
bound
add
aas
pop
cmp
inc
mov
mov
ret
add
xor
daa
jge
adc
or
jnp
jmp
push
icebp
frstor
adcl
xchg
call
push
lret
or
push
push
mov
mov
lds
cli
nop
sub
sub
xchg
xor
sbb
jecxz
dec
ficomps
or
ret
mov
stos
push
cs
rcll
fisttpl
lods
mov
pop
outsb
push
jb
lods
xchg
mov
cmc
sub
inc
ja
repz
sub
in
inc
repz
mov
pop
add
repnz
push
dec
inc
loope
sbb
xchg
rcrb
cli
pop
xor
mov
in
adc
addr16
punpckhbw
pushf
lret
dec
cmp
jg
repz
sbb
rclb
jbe
or
ds
gs
push
lret
mov
int
lods
imul
and
shll
inc
or
outsb
lods
test
movsl
push
pushf
outsl
mov
pop
mov
mov
inc
cltd
or
aad
shrl
scas
add
mov
cmp
dec
push
outsl
xchg
sar
cld
cmp
push
or
mov
sub
adc
mov
jns
fldcw
aad
out
fsin
into
shrl
inc
popa
sti
sub
add
cmp
imul
push
jnp
int3
push
pusha
mov
inc
loope
scas
pop
into
outsb
nop
outsb
push
dec
addl
sbb
scas
xchg
mov
icebp
pop
outsl
jge
mov
gs
cmpsl
adc
push
or
in
mov
ret
jmp
cmp
and
test
stos
inc
push
mov
frstor
call
cmpsb
mov
jg
fldlg2
mov
test
xchg
sub
jmp
inc
mov
mov
js
pop
mov
stos
lcall
mov
jp
je
cwtl
lahf
xlat
and
sub
sbb
fadds
inc
xor
sub
dec
lea
mov
ja
jecxz
outsb
or
or
sbb
sbb
leave
jnp
add
subl
jle
xlat
daa
jb
jge
data16
pop
addl
bound
jo
or
je
arpl
or
rcrb
cmc
aas
aad
adc
stc
mov
stos
adc
popl
dec
sub
in
insb
idivl
arpl
icebp
call
add
fisubs
mov
neg
pop
leave
sbb
mov
sub
cmpsb
lds
sbb
lret
mov
xchg
lock
add
xchg
push
sahf
lret
mov
push
test
shl
shll
sbb
in
sti
test
out
jle
aad
cs
rclb
je
xor
das
andb
lcall
xchg
rol
push
jnp
mov
mov
push
fs
jle
lcall
inc
ret
pop
imul
sub
aas
mov
or
mov
push
not
xchg
mov
cmc
insl
dec
in
xchg
in
cmp
xor
adc
test
cmp
xchg
popl
push
and
add
adc
and
clc
cmpsl
mov
inc
dec
jecxz
fsubrl
das
xchg
xchg
cli
ret
jecxz
and
or
sub
mov
stos
imul
mov
fisubs
cmp
in
or
push
jnp
xor
jne
mov
leave
mov
inc
dec
fcom
sbb
ja
mov
xchg
jmp
xchg
shl
and
xor
jle
stos
das
lods
ss
in
inc
rol
pop
stc
outsl
push
loop
and
sub
push
jecxz
jmp
jge
push
sub
cld
insb
int
xorl
mov
arpl
aam
fs
jp
sbb
push
sub
and
jp
push
negb
jno
or
cmpsl
and
subw
out
test
out
push
aam
dec
ret
ret
mov
xchg
sbb
push
out
lret
add
sbb
xchg
xor
or
xchg
pushf
fistpll
test
push
sbb
mov
push
dec
jmp
stos
jmp
in
mov
xor
bound
rcrb
lret
cli
xor
adc
lahf
mov
nop
cli
jne
push
ret
xchg
imul
mov
bound
mov
jmp
out
sub
dec
push
jecxz
test
adc
adc
sbb
dec
mov
jl
add
sarl
lods
jns
mov
pop
inc
inc
sub
in
xchg
ljmp
inc
mov
cmp
insl
mov
cmp
xchg
dec
addr16
cmp
stc
xorl
fsub
jg
inc
adc
pop
jmp
fcomps
lret
sub
sti
inc
es
ror
push
jo
pop
addr16
mov
bound
mov
imul
push
lods
push
jne
stos
daa
loop
jecxz
push
out
cld
rcrb
aaa
or
popa
mov
lret
sahf
add
mov
jno
in
mov
jmp
adc
lahf
daa
jae
or
mov
movsb
ret
xchg
aad
es
ror
cmpsb
imull
xlat
jno
cltd
mov
das
lods
test
mov
sti
push
test
addr16
cld
cmpsl
bound
xor
arpl
inc
jno
pop
xchg
xor
lcall
inc
aas
xchg
jae
fidivs
inc
mov
pop
dec
sbb
push
pushf
je
xor
das
jne
and
icebp
jmp
gs
xchg
loope
cmp
pop
lahf
stos
testb
lcall
mov
mov
sbb
adc
jno
rcl
mov
and
lret
mov
jns
sbb
or
daa
or
aam
inc
out
lret
dec
fnstsw
jl
outsb
icebp
movsl
jle
lcall
mov
jns
lcall
ljmp
adc
pop
jae
jle
push
push
daa
xchg
jecxz
idivl
insb
scas
adc
jmp
xchg
inc
mov
sahf
push
or
cmpsl
mov
or
add
mov
addr16
icebp
sahf
rcll
adc
stos
add
loop
out
inc
rcrb
push
or
das
gs
sub
mov
dec
xchg
test
cmp
and
repnz
cmp
or
std
mov
mov
fnstsw
lods
into
inc
add
push
in
movsb
out
lea
mov
dec
xor
xorl
insl
aad
aad
icebp
mov
mov
cmp
rorb
aad
movsb
hlt
cmp
push
stos
or
or
mov
movaps
stos
push
cmpsb
push
and
nop
sub
ret
push
fiaddl
xor
jns
inc
mov
test
xchg
dec
xor
inc
outsl
movsb
call
fistl
jge
cmp
mov
fwait
movsl
dec
in
pop
loop
iret
out
pop
pop
cmp
sub
aad
mov
adcl
das
inc
popf
cltd
cmp
mov
jns
add
mov
dec
test
imul
adc
arpl
xorl
add
jbe
mov
mov
mov
data16
gs
pushf
pop
das
orl
imul
scas
jo
lret
nop
fmuls
repz
mov
hlt
xchg
fiadds
push
les
sarl
addr16
mov
dec
aam
call
cmp
mov
sbb
popf
out
in
sbb
fisubl
mov
jbe
mov
cmp
cld
adc
leave
or
incb
xchg
jg
test
int
cld
pop
jp
cmp
push
push
push
push
outsb
jo
xchg
cmp
xchg
clc
add
xor
pop
xchg
lea
xchg
pop
adc
or
es
out
aas
call
sub
loope
jb
jno
sbb
lret
add
xchg
push
jno
xchg
int
sub
outsl
out
rcll
rclb
cmp
push
out
out
insb
stos
cli
and
add
int
add
rcrb
mov
cmp
add
cli
lods
repz
cmp
mov
mov
sbb
cmp
aam
push
repnz
cmpsl
loope
mov
repnz
sbb
jae
pop
adc
sub
inc
clc
pop
lods
xchg
jb
ja
mov
outsl
movsl
aas
test
das
jp
sub
add
mov
xlat
adc
xor
jnp
inc
les
and
aaa
lods
lods
xlat
sahf
daa
in
xchg
cmp
cltd
or
mov
adc
int
adcb
outsb
and
dec
insl
xor
aad
sbb
adc
adc
stos
jg
lock
and
call
ja
add
aad
sub
mov
mov
sub
insl
cmpl
in
sbb
jge
lahf
into
sbb
out
xor
dec
add
pop
cmp
lret
push
ret
and
sbb
fs
sub
movl
ret
in
mov
test
cmpsl
ret
cmp
cmpsl
dec
pop
cmpb
or
pop
leave
test
cmpsl
cmp
mov
or
push
mov
mov
mov
ljmp
ret
add
sbb
mov
inc
mov
ret
lcall
int
faddl
ss
sub
xor
fs
sub
xchg
add
js
movsb
cmpl
in
popa
es
fs
cmp
jno
adc
and
fsubrs
xor
std
inc
pop
insb
dec
pop
lahf
setbe
xorl
and
je
pop
push
out
out
mov
or
cmp
xchg
dec
sub
das
inc
adc
lock
bound
push
cwtl
lahf
sbb
mov
push
or
roll
out
ror
ja
xchg
dec
sarl
cwtl
push
xchg
arpl
sub
adc
je
pop
mov
mov
mov
and
push
fcoms
push
es
jmp
inc
in
mov
xor
jp
xchg
add
or
cmp
and
lea
mov
jge
pop
cmp
sub
push
loope
mov
incb
imul
sbb
inc
imul
pop
pop
sbb
adc
pop
jmp
mov
shrl
daa
mov
lret
repnz
or
outsl
dec
mov
jnp
je
fidivrs
dec
inc
fistl
jmp
je
add
push
adc
add
cmpsb
pushf
lds
cltd
nop
lea
pop
std
or
repnz
sub
sbb
hlt
pop
mov
cmp
in
pusha
cmp
add
and
fsubrs
psubusw
jecxz
mov
ss
and
addr16
ds
in
inc
aam
push
iret
jno
insb
sub
divl
push
push
sbb
cmp
push
dec
test
mov
mov
out
dec
repnz
pop
xchg
cmp
mov
xchg
enter
xchg
insb
lret
fs
orb
push
aam
push
shrl
loop
pop
xor
xchg
pusha
xor
xchg
lock
js
sbb
push
mov
loopne
inc
imull
xchg
adc
inc
sub
pop
movb
lahf
arpl
push
pop
in
xchg
cltd
ficoms
mov
push
sbb
sub
pop
pop
fwait
and
sbbl
call
fdiv
mov
jg
icebp
lds
cmp
test
flds
or
add
jle
fs
repz
mov
mov
mov
push
fistpl
je
mov
and
mov
repz
cli
jecxz
loope
imul
test
and
repnz
das
push
daa
cmpsl
dec
inc
pop
pop
mov
add
dec
stc
cmp
enter
jnp
push
and
push
movsl
and
cmp
dec
daa
jg
mov
jbe
test
je
dec
mov
daa
shlb
pop
mov
mov
mov
rcrl
in
outsl
push
jl
pop
clc
addr16
sub
ret
fcomps
lds
push
fs
jno
jge
data16
dec
popa
iret
fadds
test
imul
cmp
or
lret
xchg
mov
imul
fdivs
or
pop
mov
fists
inc
adc
pusha
adc
mov
push
enter
pop
jne
jo
sbb
in
scas
ret
push
adc
outsb
sub
imul
cmp
push
ljmp
cli
scas
push
inc
pusha
sti
adc
xchg
sub
jae
and
sbb
inc
push
jl
int3
stos
inc
pop
jmp
aas
adc
jbe
and
mov
cmpsb
sbb
das
or
loope
inc
das
cmp
out
push
cli
out
lret
push
cmpsb
mov
add
dec
cltd
pop
mov
jo
push
pop
loope
iret
scas
xchg
xor
push
mov
xor
jns
xchg
jl
sti
test
fadd
xor
push
sbb
in
into
and
aad
out
ja
jnp
mov
xorl
mov
push
dec
xchg
lret
loop
add
push
sbb
xor
jns
cmpsb
sarb
mov
mov
pushf
or
cmp
cmp
adc
sahf
or
inc
scas
push
test
pusha
bound
pusha
out
adc
sub
add
aaa
pushf
jl
mov
cmp
pop
mov
mov
fiadds
xor
pop
cmp
lea
add
shr
test
inc
lahf
push
add
popf
pop
dec
and
cmpsb
mov
std
mov
movl
daa
sar
mov
repz
lret
jne
jmp
adc
push
ds
sub
aad
fsub
adc
sbb
jb
push
jl
fisubl
shlb
outsb
pop
push
lods
add
mov
mov
js
icebp
pop
xor
dec
test
icebp
dec
xor
or
dec
rcl
dec
inc
pop
push
xchg
test
fwait
push
mov
das
jno
or
lahf
xchg
mull
outsl
mov
cld
cld
cmp
notl
dec
sti
cmp
or
test
int
dec
pop
add
clc
shlb
std
cmp
aaa
inc
rol
sti
sbb
cltd
mov
jbe
fwait
insl
cmp
in
mov
add
jno
leave
and
out
lret
and
daa
repz
dec
lcall
add
adc
jne
pop
mov
repnz
mov
nop
addr16
sbbb
sub
or
fs
add
out
adc
sbb
cmp
jno
add
sub
or
loopne
inc
xchg
adc
je
cs
push
xor
inc
cwtl
push
aaa
mov
jecxz,pt
aas
dec
push
push
pop
fisttpl
loope
sub
add
xchg
adc
stos
out
mov
sbb
popf
stos
sub
fsubl
ja
das
jmp
decb
cwtl
insb
test
sub
or
popf
repnz
add
ret
pop
jle
sbb
fnstcw
jp
adc
jne
add
mov
or
jb
fisttpl
loopne
jge
lcall
lcall
lahf
lcall
jo
and
pushf
cmp
and
sub
fdivp
xchg
out
dec
xlat
ficomps
push
push
fs
inc
and
call
sarb
mov
imul
fsubr
mov
xor
push
pop
movsl
adc
fwait
mov
xor
cltd
or
aad
push
xlat
sbb
and
nop
inc
fs
loop,pt
sub
dec
int
sub
pusha
mov
pop
or
inc
popf
push
fildll
cmp
mov
rorb
mov
mov
lea
shr
and
mov
inc
aad
adc
adc
mov
push
cs
daa
into
add
mov
xor
dec
push
mov
out
pop
int3
mov
xchg
mov
out
push
daa
inc
mov
stos
int
jp
push
jno
movsb
push
popf
out
xchg
pushf
adc
adc
jle
mov
sarb
insl
jae
out
in
mov
data16
out
test
inc
jae
or
cltd
xor
push
mov
xor
lds
clc
inc
sbb
mov
sub
scas
fs
cmp
sub
popf
cmpsb
imul
bound
ljmp
push
add
push
sbb
cmp
adc
int
dec
clc
inc
push
mov
cmpsb
or
push
jp
mov
and
test
je
push
fldcw
mov
pop
and
cmc
jbe
cltd
mov
mov
and
gs
stos
sub
pop
xlat
xor
inc
lods
out
mov
cmp
jo
push
sbb
sbbl
fdivrs
jnp
push
mov
cld
mov
test
sbb
out
jns
push
jl
je
fwait
and
out
aam
sub
mov
xor
out
push
outsl
pop
adc
push
or
pop
test
xchg
push
mov
dec
or
add
xor
mov
push
outsb
push
push
test
push
xchg
pop
or
jnp
cmp
and
lods
mov
lds
jno
cwtl
orb
push
dec
push
clc
out
incl
pop
xchg
mov
cltd
cs
lret
in
add
lea
jb
std
out
adcb
inc
sahf
cmp
xchg
push
data16
jbe
cmc
mov
cmp
jmp
sub
pop
cmp
subl
sub
mov
mov
addl
push
push
mov
mov
mov
jne
jge
sub
adc
mov
not
push
xor
push
repnz
mov
or
mov
lds
dec
sub
sub
sub
sbb
jae
int3
fidivrs
inc
bound
fbld
call
adc
call
jge,pn
ret
and
push
insl
add
mov
and
cmpsb
cmpsb
xor
call
and
xor
mov
xlat
mov
inc
mov
int3
add
fimull
pop
and
jge
ficompl
iret
nop
ljmp
jne
or
jp
inc
lea
add
add
fildl
dec
lods
xor
fisubrs
adc
add
clc
push
jmp
mov
jge
pop
call
scas
aas
jl
sub
jo
mov
lods
or
mov
sahf
movsb
sbb
cmp
jge
cmp
pop
push
repnz
cmp
xchg
sub
xor
lahf
sbb
int
nop
popa
out
adc
test
xchg
lret
pop
or
inc
imul
sbb
lret
js
pop
dec
mov
cwtl
and
sbb
hlt
fstpt
sbb
jnp
jne
xchg
dec
adc
push
cmp
and
testb
add
outsb
pop
push
into
es
xlat
sub
or
inc
inc
dec
mov
cli
pop
inc
dec
fsubrs
mov
adc
xchg
int
sarl
jbe
ja
pop
dec
int3
add
lret
sub
popf
inc
xorb
pop
and
je
out
fadd
push
enter
aas
push
add
cmp
mov
and
stc
add
popa
les
xor
jge,pt
or
add
pop
movsl
jp
push
loopne
push
jo
out
std
push
mov
jg
cmp
fdivrl
mov
xchg
push
jl
test
test
push
leave
or
shrb
rolb
lea
scas
adc
ds
mov
popa
jbe
mov
movsb
fcom
ljmp
sub
stos
pop
lret
repnz
push
out
jb
lock
popa
and
add
or
icebp
add
mov
cmp
nop
sbbl
mov
jg
inc
sbb
dec
add
inc
dec
mov
movsb
dec
mov
add
in
sti
imul
in
cmp
scas
push
nop
aad
jecxz
dec
in
lds
pop
out
mov
mov
mov
cmp
cmp
sbb
mov
pusha
and
adc
out
pushf
cmpsb
jp
scas
das
push
jp
pop
cltd
add
mov
mov
std
dec
icebp
insl
push
sub
sbb
sub
sub
lret
mov
mov
scas
out
sbb
popa
inc
mov
mov
sahf
mov
addr16
into
jno
mov
into
dec
fdivrl
in
roll
push
dec
insb
pushl
xchg
mov
pshufw
xor
push
mov
sahf
push
rolb
fiadds
shll
xor
jp
mov
sbb
or
sbb
adc
pop
into
mov
lret
mov
sbb
arpl
std
push
ja
sahf
fdivp
cmp
out
mov
lahf
mov
lahf
mov
mov
rorl
arpl
loop
sub
xlat
insb
in
std
inc
test
rorb
xchg
movsl
push
out
andb
gs
push
cltd
test
xchg
outsb
ja
xchg
or
mov
pop
sar
mov
mov
call
insl
jns
cmpsb
jle
pop
push
xor
fisubrl
cmp
mov
jge
mov
ffree
inc
les
enter
ds
fcompl
daa
rcll
mov
inc
pop
jb
leave
mov
in
pop
dec
xor
fcoms
xchg
addr16
sahf
stc
inc
pop
enter
inc
movsl
stos
xor
jo
test
out
sti
xchg
mov
or
data16
clc
jns
xor
mov
in
fs
inc
test
orl
and
inc
ret
scas
clc
dec
xchg
sbb
imul
in
pop
inc
testl
xlat
cmp
and
sbb
xor
mov
and
xchg
cmpsl
fistl
cmpsb
pushf
and
in
or
sti
mov
push
das
or
dec
stos
dec
fldenv
inc
jmp
xchg
sub
sbb
lds
lcall
das
push
adc
popa
add
xchg
xchg
int3
adc
sub
or
adc
pop
dec
cmpsb
jmp
pop
addb
push
lods
sbb
shlb
or
xchg
mov
and
addr16
or
shlb
shl
repnz
jmp
inc
sub
adc
sub
and
nop
sub
and
add
mov
mov
test
add
pop
sub
jg
lcall
push
rolb
and
insl
push
xor
es
pushf
mov
xchg
repz
sub
jb
xorl
rcrl
fidivrl
icebp
inc
negl
sub
ds
mov
xchg
sbb
sbb
imul
jae
xchg
es
loopne
dec
and
repnz
inc
mov
mov
add
int
lock
pop
push
adc
pop
std
movsb
push
rep
mov
pop
rolb
dec
and
out
shrl
xor
int
sbb
fwait
aam
sub
mov
stos
adc
das
es
int3
outsb
js
pop
mov
fs
dec
in
lret
xchg
xchg
pop
les
divl
andl
mov
add
xor
sub
data16
shl
or
fwait
add
inc
jmp
adc
and
or
shrl
xor
inc
lea
out
call
imul
adc
ficomps
stc
test
sbb
jb
lcall
jnp
push
addr16
push
movsb
mov
push
jp
int
adc
test
jp
ret
rcrb
mov
mov
xor
mov
shll
sbb
pop
mov
inc
out
or
sub
mov
adcl
aas
and
xchg
fdivs
negb
jp
call
jb
lods
cmpsl
adc
mov
jne
outsl
xor
cli
xchg
mov
xor
mov
cmp
push
dec
aas
imul
fldenv
push
push
add
test
pop
cmpsb
sbb
mov
enter
int
xchg
dec
add
pop
cmp
sti
stc
lods
add
xchg
int3
mov
xor
ss
mov
in
push
xor
outsb
notb
cmp
adc
mov
adc
insb
jecxz
push
clc
pandn
jb
inc
push
ret
pop
cltd
xor
stos
test
hlt
fdivrs
das
bswap
std
in
icebp
or
lods
pop
push
into
shr
xchg
cmc
and
mov
test
test
and
xchg
test
test
test
jg
sub
jmp
inc
cmpsb
sub
cmc
mov
inc
dec
nop
pop
mulb
jbe
orl
mov
adc
lcall
push
repz
jns
out
incb
les
and
lods
es
push
dec
sarb
jecxz
pop
lods
xchg
push
adc
inc
stos
in
pop
outsb
cld
xor
dec
cmp
call
xchg
sbb
add
mov
aam
mov
in
fnstsw
xlat
sub
cmp
push
add
xlat
and
lahf
adc
or
das
push
nop
fmuls
jp
test
inc
fisttps
sbb
mov
adc
call
push
mov
mov
mov
add
call
sub
cmp
rol
mov
mov
int3
pop
add
loop
push
ficompl
imul
push
mov
pop
xor
out
inc
mov
xchg
js
stos
pop
jae
adc
pop
mov
out
jnp
adc
imul
dec
movsb
sbb
sbb
ret
jecxz
mov
pop
dec
lods
inc
lods
xchg
sub
gs
popf
sbb
fs
sbb
stc
mov
adc
mov
mov
fldcw
lret
ja
mov
sub
inc
inc
jg
pusha
scas
int
inc
ret
jle
div
pop
xor
loope
scas
push
mov
mov
adcl
cld
out
out
rcrl
push
pop
call
add
js
stos
jno
out
loopne
push
int3
mov
cwtl
cmpsl
pop
inc
jbe
insb
xor
into
mov
testl
loope
into
mov
jmp
adc
cs
aam
pop
adc
icebp
movsl
les
in
dec
sar
mov
lods
imul
roll
xlat
jecxz
pop
and
cltd
stc
sub
or
mov
xorl
xchg
test
inc
inc
and
les
xlat
push
shll
adc
subl
push
pop
rorb
lods
cld
scas
push
push
inc
xlat
lods
xchg
push
jl
jb
jnp
sbb
xor
mov
add
mov
dec
bound
or
inc
shlb
sbb
fs
test
xor
jno
ds
inc
adc
push
xor
cmc
cld
jno
nop
push
lret
xchg
dec
orl
pop
ret
mov
pop
lcall
jno
in
and
roll
cmp
into
cli
pop
jbe
jno
cmp
out
repnz
sarb
jo
or
mov
mov
mov
cmpsb
fwait
mov
fwait
insl
adc
mov
mov
ret
loope
lods
repnz
dec
cmpsl
sbb
and
lea
cld
dec
adc
movsb
mov
mov
lock
jmp
inc
adc
mov
xchg
mov
addr16
jge
cs
mov
in
ljmp
repz
inc
mov
gs
push
test
cmp
pmulhuw
mov
push
daa
cmp
outsl
inc
ds
les
daa
std
jbe
icebp
xchg
out
xor
movsb
sbb
cli
pop
jmp
xchg
dec
jecxz
mov
jns
in
mov
xlat
push
std
pop
cmp
jle
fsubl
and
and
cmp
imul
divb
sbb
stc
flds
cmp
pop
xchg
jecxz,pn
int
test
dec
pop
shlb
pop
cmp
jne
test
lods
push
or
mov
insb
dec
and
mov
adc
ljmp
loopne
imul
cmp
in
hlt
mov
add
xor
test
js
imul
or
xchg
pop
pop
adc
xchg
clc
mov
push
or
popf
adc
jg
pop
int3
and
arpl
mov
push
mov
pop
enter
ljmp
sbb
adc
std
or
es
mov
hlt
es
mov
xor
and
add
xchg
repz
aaa
nop
pop
xor
push
ja
mov
mov
and
sahf
ljmp
jo
lods
loopne
jb
jle
movb
enter
fstp
add
into
mov
shrb
cmpsb
push
mov
dec
mov
xchg
testl
push
out
lods
xchg
jmp
pop
sbb
mov
hlt
dec
pop
cmp
jecxz
in
push
xchg
enter
fs
mov
dec
cmpl
mov
iret
sbb
aam
mov
or
std
push
fldenv
clc
pop
jl
lds
xor
xor
pop
test
fsts
add
movsb
xor
cli
xorb
and
mov
aad
aad
sub
mov
adc
mov
adc
pop
imul
adc
enter
mov
fdivl
fs
jg
insb
pushf
pop
xor
adc
mov
lock
out
xchg
mov
das
pop
xchg
pmaxub
pop
cmpl
nop
cmpsb
inc
sub
xor
fcompl
jecxz
test
call
xchg
data16
push
cmp
fsubrs
mov
les
pop
cmc
inc
insb
movsb
les
repnz
test
test
or
loope
out
xor
jmp
adc
daa
inc
and
iret
mov
push
mov
cmp
jb
cmp
shr
scas
add
push
pop
cmc
add
cmp
je
outsb
push
adc
into
cwtl
fistps
xchg
sbb
stos
sub
cmpl
insb
xchg
sarl
xor
adc
mov
cwtl
jle
pusha
mov
cmp
mov
adc
pop
fisttpll
xchg
sub
push
mov
pusha
pop
jne
and
out
mov
les
push
out
decl
daa
mov
sahf
cmpsl
mov
sub
jecxz
cmp
test
jb
xchg
sbb
cli
push
shll
fstpt
lods
jno
fs
mov
push
outsb
xchg
test
int
cmp
nop
pop
movsl
mov
fwait
loop
fwait
repnz
leave
out
cwtl
aaa
test
and
pusha
ljmp
leave
cmp
loope
adc
mov
and
and
dec
mov
sub
jo
xor
cmp
out
lods
out
xor
cmc
jle
dec
lods
ret
scas
push
mov
je
push
push
jmp
insb
inc
inc
fbstp
xchg
adc
ret
ret
popa
dec
adc
int
int
mov
jg
and
arpl
pop
sbb
dec
xor
adc
inc
lcall
loop
pop
mov
adcb
movsl
push
jmp
push
fcoms
sbb
into
sub
arpl
add
push
adc
xlat
or
xchg
enter
andl
push
cmp
fsubl
cmc
push
xor
push
movsb
cmpsb
jne
mov
popa
xor
jmp
popa
jmp
xchg
dec
mov
lock
adc
pop
cmp
outsl
xlat
lahf
cmp
and
lds
jg
jmp
mov
push
jbe
push
mov
es
test
sub
sub
int
movsb
fs
incb
fistps
nop
push
shlb
negb
notb
test
pop
jo
cmpsl
lock
shll
popf
bts
add
xchg
test
sub
ficoms
cwtl
sbb
int3
daa
hlt
repz
push
out
fistps
stc
adc
mov
ljmp
popf
push
mov
sarb
xlat
xor
sbb
popa
mov
pop
mov
add
lods
sar
push
icebp
mov
in
rcr
adc
dec
test
loopne
rcr
lret
out
dec
and
jnp
sbb
inc
inc
iret
lods
int
dec
scas
cmp
mov
mov
hlt
fcmovbe
lcall
ret
aaa
faddl
jle
popa
mov
int
lods
and
flds
mov
mov
sub
outsl
aaa
dec
aam
cmp
jno
loop
add
jne
inc
mov
popa
jnp
mov
mov
dec
imul
push
cs
sbb
mov
ljmp
xchg
add
imul
ja
mov
cmc
mov
xlat
mov
xchg
outsb
dec
or
divl
popa
jmp
xchg
movsl
aas
sub
ljmp
mov
and
mov
ret
jge
cmpsl
imul
rcrb
sbb
test
and
or
xchg
adc
mov
push
je
shl
lcall
inc
out
aad
sub
pop
int3
test
jne
adc
add
push
sahf
cmp
cmpsb
int
popf
fxch
sahf
mov
sti
gs
inc
jmp
push
adc
cmp
cmc
pop
imul
int3
stos
sti
out
aam
jl
mov
push
xchg
inc
nop
fimull
leave
pop
or
out
loop
sub
inc
mov
xchg
mov
xor
pop
pop
ret
xor
xor
sbb
mov
inc
daa
or
dec
adc
pop
lods
or
cmpb
pushf
idivb
jg
outsl
mov
or
mov
mov
jg
xchg
arpl
and
or
repz
xor
jns
pop
int3
lock
mov
or
xchg
mov
xor
add
fcmovnb
inc
mov
test
daa
test
mov
lret
icebp
ror
adc
xor
call
lahf
jne
xchg
or
sub
mov
call
sahf
das
xorb
aam
xor
mov
std
out
ds
cltd
mov
mov
ficoml
lock
sbb
xchg
sub
sbb
mov
in
and
cli
mov
mov
fcmovnb
jno
mov
data16
jecxz
push
dec
push
sbb
jne
sbb
mov
xorb
xchg
or
das
mov
decb
jne
jg
into
add
push
cmp
push
leave
repnz
cmc
xchg
div
or
sbb
lods
sbb
jae
lcall
bound
sbb
test
push
out
cmpsb
pop
and
jb
stos
push
pop
fs
int3
in
shrl
fyl2x
push
pop
pop
adc
pop
stos
mov
xchg
jle
and
aaa
mov
arpl
xchg
stos
fs
jmp
sub
div
push
push
xchg
sub
inc
mov
loope
adc
xchg
xchg
add
int
mov
push
sbb
lock
lods
out
enter
push
stos
inc
stos
sub
xchg
mov
sti
mov
das
sub
inc
stc
leave
in
fnstsw
lods
pop
test
or
loope
pop
jae
sub
scas
mov
mov
mov
inc
jo
js
mov
mov
add
addr16
dec
loope
data16
mov
enter
lahf
daa
nop
loop
aad
pop
jne
jno
pop
and
fists
pop
insl
scas
and
sbb
push
mov
jae
es
leave
sarl
fwait
ret
adcl
cmpsb
mov
xor
mov
push
inc
hlt
dec
mov
sub
dec
int
mov
push
pop
shrd
mov
push
dec
jmp
stc
mov
mov
hlt
fldcw
mov
cmp
out
sbb
inc
push
mov
cmpsb
ds
inc
jbe
jmp
lock
xlat
pusha
jmp
lcall
out
adc
repz
daa
shl
adc
xchg
das
shlb
test
jnp
adc
mov
push
pusha
mov
push
es
dec
shl
dec
lahf
test
jecxz
push
mov
ror
rcl
ret
mov
cwtl
xchg
pop
fcmovbe
lahf
repz
xchg
out
inc
mov
imul
jmp
mov
test
in
ffree
adc
pop
lods
jb
jnp
and
loope
lock
xchg
dec
add
rcr
adcb
loopne
xchg
push
aas
loope
or
xchg
mov
out
scas
and
sbb
cmc
dec
sub
loopne
inc
mov
xchg
and
repz
mov
iret
lods
mov
dec
cmpsb
scas
pop
push
test
adc
aam
int3
movsl
lahf
je
in
add
hlt
pop
sbb
test
dec
gs
xor
add
or
adc
push
sbbb
sbb
imul
jns
and
add
jg
push
clc
es
ss
lds
pop
call
jl
dec
pop
sbb
into
push
bound
lods
sbb
fsubrs
movsb
aaa
pop
rcll
pop
mov
outsb
popa
scas
cmp
test
push
lcall
inc
pop
les
xor
scas
inc
adc
cmp
loope
push
inc
imul
or
sbb
movsl
fidivrl
pop
mov
mov
dec
jecxz
popf
xchg
mov
and
lods
xor
arpl
fcomip
dec
jge
inc
mov
addr16
ds
aam
cmpsb
mov
push
int
mov
xchg
fidivl
add
xor
add
pop
mov
mov
sbb
mov
sbb
ficoml
enter
add
stc
xchg
mov
and
andl
jnp
shrb
mov
stc
pop
rcll
xchg
sbbl
sbb
push
inc
int3
lahf
ficompl
in
aaa
xchg
sti
in
adc
mov
push
xor
rcl
fcom
mov
fwait
and
insb
cld
mov
push
ficoms
add
fwait
ret
push
jb
xchg
cmp
mov
dec
cltd
mov
dec
arpl
mov
roll
iret
pop
imulb
add
mov
push
mov
test
push
hlt
nop
sub
jmp
push
mov
lahf
dec
mov
jecxz
sbb
daa
xor
adc
gs
push
and
mov
mov
inc
mov
test
and
out
xchg
xor
stos
insb
adc
cwtl
mov
test
and
js
adc
mov
pop
cld
push
xorb
aas
add
loop
mov
ret
add
loopne
movsb
mov
add
mov
pop
mov
out
movsl
jge
xchg
xchg
mov
xor
dec
or
lea
xlat
push
in
negb
loop
stos
jnp
or
loopne
xchg
push
lahf
jg
mov
std
mov
inc
int
pop
push
les
cli
push
jp
jns
imul
jo
inc
test
xchg
stos
and
ret
cld
mov
in
fmulp
push
push
js
mov
in
cmc
sahf
pop
dec
sbb
jnp
fcoms
or
bound
loope
out
and
mov
daa
mov
jp
rcll
ss
mov
test
fists
push
push
jbe
adcl
sub
lret
xchg
pop
testb
push
orl
cmp
mov
push
push
push
hlt
adc
sbb
mov
andl
mov
mov
jbe
inc
or
push
rorb
mov
dec
in
push
add
dec
sbb
push
call
cltd
sbb
bound
rcll
aam
lret
dec
test
inc
pusha
icebp
inc
push
out
or
or
push
mov
sbb
push
add
or
jno
fdivl
mov
mov
out
xor
add
neg
daa
or
xchg
out
cmp
lods
sub
stc
test
jbe
pop
nop
cmpsb
xor
ret
push
xchg
xchg
call
and
sbb
mov
xchg
sbb
sub
fs
lcall
sub
xor
bound
iret
test
push
mov
add
push
push
mov
andl
cli
lret
mov
fs
scas
or
fimull
cmp
scas
rcll
mov
ja
or
xor
scas
hlt
add
mov
mov
daa
data16
or
mov
xor
iret
xor
hlt
shlb
sahf
call
cmp
sbb
xchg
popa
enter
inc
cmp
mov
inc
adc
scas
and
inc
jns
push
ret
lcall
mov
testb
test
and
or
dec
push
jb
stc
js
outsb
subl
sahf
lods
push
out
lock
aad
xlat
cmpsb
rorb
cmp
jle
or
mov
adc
popa
jne
pop
jns
repz
in
xchg
push
xchg
bound
lret
fdivr
dec
mov
dec
rcll
lret
sbb
dec
adc
in
xor
cmp
mov
fwait
arpl
inc
xlat
pop
adc
arpl
sbb
arpl
dec
stc
xchg
rclb
notl
push
inc
mov
sar
mov
scas
ficoms
jnp
fildll
push
cmp
mov
orl
mov
push
jg
pop
bound
xor
mov
aad
or
inc
pop
mov
or
aaa
fistl
xor
and
aad
xor
fimull
sub
aas
xchg
in
jno
mov
cmp
inc
push
cmp
aaa
jae
mov
dec
ss
jmp
ja
mov
out
rclb
dec
dec
lock
dec
loope
loop
adcb
daa
addr16
xchg
pop
stos
or
bound
and
loopne
imull
xchg
stos
cwtl
leave
jb
sub
xchg
repnz
mov
es
mov
lock
add
rcrl
xchg
push
shrl
jge
push
out
push
ficoms
pop
fsubrl
mov
shll
push
add
ss
xorl
shll
out
sub
push
inc
and
loop
sub
cli
icebp
pop
cmp
jp
xchg
pop
jecxz
mov
pop
fdivr
jle
mov
fstpt
cmp
sbb
lahf
inc
fisttpll
pushl
and
dec
stos
jnp
mov
dec
imul
jmp
int
sahf
outsb
inc
lods
mov
mov
mov
leave
ss
imul
cmpsb
fnstsw
addr16
adc
aaa
les
inc
fdivrp
rcl
enter
mov
xor
aad
adc
xor
loope
cmp
xchg
dec
sbb
mov
xor
sbb
sub
pop
lods
dec
cmp
sub
fsts
nop
jbe
jg
adc
push
adc
cmp
add
cltd
outsb
out
push
pop
daa
int3
cmp
mov
arpl
push
add
and
in
jo
push
and
mov
in
jbe
pop
insb
push
jno
push
mov
lds
mov
jmp
out
ds
loopne
ret
mov
and
push
add
arpl
jb
in
int3
xor
js
mov
xor
sbbb
mov
iret
jo
cmc
or
int3
insb
sub
inc
lds
mov
inc
icebp
adc
pop
cli
cli
cld
or
hlt
inc
ja
jno
das
mov
xor
inc
add
pop
idivl
sub
cmc
jnp
dec
xchg
insl
jmp
and
adc
sub
shll
or
adc
inc
xor
arpl
notb
push
mov
sbbb
xor
dec
xchg
xchg
adc
nop
imul
push
adc
jl
push
sbb
xchg
call
cltd
xchg
repnz
mov
lds
jl,pt
jl
pop
out
jns
ret
mov
ror
add
mov
out
loopne
xchg
cltd
daa
invd
cmp
lahf
jmp
repnz
fmuls
pop
mov
push
jl
or
test
xchg
cmpsl
inc
sbb
psrlq
inc
mov
nop
outsb
cld
scas
dec
outsl
add
mov
cmpsb
sbb
push
lret
jne
sub
sub
xor
push
fisubs
push
shlb
sub
sti
xor
or
dec
push
in
cmp
dec
mov
es
sbb
in
and
cmp
fldcw
cmpsb
lods
mov
pusha
lcall
cmp
mov
aad
cli
imul
shrl
sub
cld
decb
scas
and
mov
dec
out
fnstenv
scas
test
ror
mov
push
idivb
movb
stc
fists
out
xchg
fs
sbb
cmp
loopne
dec
faddl
jbe
jl
inc
stos
adc
inc
stc
fcoms
sbb
jge
xchg
mov
jecxz
jmp
cmpsl
ret
stc
add
imul
jns
pop
scas
pop
adc
xchg
sub
mov
test
cmpsl
testb
aaa
sbb
pop
sub
push
pop
aam
or
xor
pop
and
ja
out
inc
mov
lock
enter
ret
cmpsb
int
in
fidivs
add
mov
sbb
inc
dec
sbb
lods
sbb
cmpl
leave
lods
sbb
adc
mov
iret
shlb
mov
repz
fldl
ljmp
pop
dec
test
lcall
jae
mov
pusha
fcompl
jo
push
xor
jp
adc
call
ljmp
sub
mov
repz
mov
jnp
mov
cmp
call
out
cmp
lret
inc
cmp
sub
icebp
nop
cmp
push
jo
add
test
iret
sbb
dec
scas
test
ds
mov
sbb
jge
xor
dec
fsubl
mov
cld
jge
jae
jl
add
enter
push
nop
dec
inc
jmp
sbb
mov
imul
test
xchg
enter
or
jge
xchg
cmp
in
dec
mov
les
scas
xchg
push
stos
push
loop
mov
cli
btc
subl
xor
pop
inc
stos
enter
cmp
in
push
pop
faddl
jle
xlat
loopne
aam
cmc
mov
mov
mov
mov
stos
or
movsb
sbb
mov
in
cwtl
mov
test
and
xchg
arpl
data16
cltd
scas
push
add
xchg
adc
xor
insl
mov
push
jp
dec
std
or
inc
cmp
out
cmp
fwait
stos
addr16
aas
push
aam
cli
jae
arpl
popa
mov
xchg
lahf
cltd
test
stc
icebp
mov
ljmp
test
dec
inc
jno
add
mov
dec
xchg
mov
xchg
jp
out
movsl
inc
pop
fsts
add
shll
jae
jmp
pop
in
jns
shr
xor
inc
test
pop
jns
push
xchg
xor
test
cwtl
test
in
sbb
repnz
popf
jp
mov
adcl
loopne
cmpsb
xlat
out
add
jns
cltd
xor
aad
adc
xbegin
pop
out
inc
test
lods
mov
sbbl
hlt
mul
mov
test
mov
fidivrl
mov
loopne
xor
stos
jae
jmp
sbb
aas
movsl
in
out
popa
pop
int
loopne
mov
idivl
jg
movsb
jge
jmp
mov
mov
pushf
cmp
subb
fisttpll
loope
push
mov
mov
xchg
out
or
sbbb
ret
loopne
jge
dec
jecxz
mov
movb
in
nop
jge
ror
loope
scas
fldt
orb
es
xchg
ja
inc
inc
inc
andl
cmp
repz
jno
push
fdivr
pop
and
sub
xor
outsl
idiv
popf
fimuls
inc
lcall
data16
je
lds
test
xchg
adc
out
or
push
pop
cmpsb
pushf
out
js
fbstp
cli
cmp
cmp
in
mov
inc
mov
rorb
dec
xchg
lret
cmpl
sbb
arpl
or
lods
popa
int
arpl
fcoms
nop
ret
and
mov
add
inc
movsb
bswap
arpl
push
jae
add
inc
xchg
fbld
or
ds
xor
ret
fnsave
jb
push
shll
outsb
mov
dec
push
push
push
xor
in
sbb
or
pop
stc
cld
cli
jmp
enter
cld
or
adcb
stos
cmp
fisubl
mov
shll
mov
jo
rol
mov
mov
xchg
insb
cmp
mov
imul
sbb
push
mov
xor
pop
fistpll
mov
mov
inc
cli
push
xor
add
sub
fdivl
adc
pop
in
xorb
cmp
rclb
and
test
cmc
sbb
aaa
or
out
or
sub
mov
imul
das
test
sub
dec
cmp
pushf
sbb
push
stos
and
jmp
in
out
les
adc
flds
aam
stos
mov
xchg
iret
xchg
pop
std
jno
inc
in
popa
xor
ja
pop
add
data16
aam
in
jno
inc
pop
lcall
or
ret
stos
movsl
push
mov
out
lcall
ja
cmp
add
ja
dec
mov
jb
pushf
ret
pop
daa
add
iret
sbb
dec
xor
call
adc
mov
lods
dec
mov
leave
out
dec
fcoms
jo
jp
add
scas
jne
test
mov
aas
jae
adc
insl
addl
mov
jg
mov
and
gs
cld
jb
push
shrb
lods
jl
cltd
bound
andb
std
sub
pushf
leave
arpl
mov
push
int
xor
xchg
or
jecxz
jno
je
mov
jne
je
jecxz
pop
je
lret
pop
loopne
ss
adc
inc
and
pop
mov
xor
cmp
popa
jl
mov
sbb
mov
xlat
jbe
orl
movl
push
sbb
cmp
pop
cmc
in
dec
xchg
ret
sbb
dec
xorb
pop
dec
xchg
push
outsb
pand
inc
fdivrl
adc
sub
pushf
arpl
rcrl
sti
cmp
jg
stc
std
sbb
adc
push
xchg
xor
mov
jae
aad
jp
sub
adc
xor
out
into
lret
or
adc
xchg
xor
push
jp
enter
sbb
popa
xchg
inc
dec
mov
call
ss
icebp
jl
mov
add
xor
cmp
xor
mov
jl
jnp
cwtl
scas
adcl
repnz
repnz
mov
adc
aam
mov
pushf
rolb
aad
in
js
adc
jg
out
cmpl
js
mov
mov
in
cmp
pop
bound
sbbl
or
lahf
xchg
push
cmp
jbe
repz
test
sbb
jmp
movsb
inc
aam
mov
cmp
loop
fs
shll
cwtl
ret
stc
in
ja
daa
jae
stos
test
pop
cltd
aad
aad
in
lods
xchg
dec
jp
scas
lret
jno
pop
scas
jnp
sbb
inc
mov
in
sbb
inc
jecxz
ret
dec
dec
es
push
dec
cmp
js
ja
cmp
mov
jno
dec
mov
dec
adc
loop
lcall
in
add
or
or
push
xchg
push
adc
scas
sahf
fimuls
outsb
dec
lds
bound
repnz
jle
jb,pn
or
pop
inc
lcall
lea
in
xchg
pop
and
das
xchg
sub
lahf
popf
inc
dec
aas
stos
fcmovnb
mov
sbb
nop
cmc
xchg
or
dec
adc
cmp
jmp
aaa
roll
xor
push
and
insb
sub
dec
into
mov
mov
aad
or
sarl
mov
fwait
test
or
popa
ljmp
pop
or
leave
dec
jg
sub
aam
out
je
pop
dec
mov
push
int3
out
jmp
pop
pop
and
push
sub
test
in
mov
aad
je
pop
fidivrs
aam
adc
push
loopne
in
mov
sub
adc
jae
faddl
add
dec
sub
add
in
mov
or
sti
aam
in
sahf
xor
leave
std
call
daa
add
int3
test
lret
mov
fdivrs
adc
cmp
dec
jle
and
mov
in
adcb
stc
adc
cmp
loope
dec
and
mov
mov
jne
mov
xor
jns
and
js
pop
fdivs
mov
dec
stos
push
xlat
sbb
jge
cmp
cmpsb
push
popa
sti
fisttpl
aad
dec
shrb
out
mov
sahf
push
xlat
adc
pop
xchg
push
xchg
mov
gs
test
sub
sbb
scas
shrb
pop
jp
adc
mov
popf
dec
add
lret
out
repz
sub
lea
push
push
xor
dec
or
out
js
add
dec
outsb
or
stos
inc
out
sbb
imul
testb
outsb
and
dec
add
gs
lret
loope
fstl
jl
hlt
outsl
ret
fisubrl
clc
scas
sub
mov
xchg
add
in
into
popa
jge
jno
jns
lret
rdtsc
or
and
call
sbb
xchg
test
fsubs
mov
idivl
sbb
push
push
cld
sbb
xchg
jmp
cmp
insb
imul
add
arpl
inc
mov
rorl
movsl
pop
xor
fstpt
insl
sti
mov
es
jl
pop
mov
ljmp
mov
cwtl
lcall
rcrb
sub
fcomi
xor
inc
in
cmp
in
add
sbb
inc
dec
cmp
fs
jle
push
mov
inc
mov
inc
lcall
test
dec
add
cmp
mov
orl
stos
jp
lods
aam
adc
inc
movsl
notl
sub
sbb
cmp
pop
cmp
cmp
clc
shrb
aad
decb
cmp
scas
aas
mov
or
aad
hlt
je
movb
xchg
and
sbb
mov
pop
push
scas
cmp
adcl
jbe
mov
setge
adc
jle
inc
lcall
in
cwtl
mov
outsl
stos
loope
lock
in
pusha
nop
sub
push
popf
cli
xor
mov
xor
inc
xchg
cmpl
out
sahf
and
inc
data16
repz
bts
jge
mov
int3
push
cltd
or
imul
inc
mov
ret
adc
sub
es
inc
test
idivb
xor
sbb
or
cwtl
push
or
push
mov
ficomps
scas
aaa
cltd
push
stos
xor
jne
call
dec
inc
addr16
jmp
push
insb
test
icebp
add
inc
mov
or
loopne
sarl
pop
or
fnsave
pop
jp
dec
neg
or
pop
jne
push
xor
add
jae
cmp
rorb
xchg
mov
outsl
mov
addr16
popf
clc
mov
jl
gs
jae
pop
sar
sbb
push
leave
or
in
xchg
arpl
mov
pop
pop
dec
add
adc
sbb
aad
lock
jp
int
fld
xchg
add
sbb
push
mov
adcl
push
jo
mov
xchg
fadds
repnz
dec
and
dec
into
insb
in
outsb
into
cli
push
xchg
icebp
adc
outsb
lock
mov
rolb
in
dec
mov
dec
hlt
jno
je,pt
and
push
mov
outsl
dec
cmp
mov
mov
mov
dec
mov
push
leave
and
pop
jns
and
mov
xor
sbb
inc
pop
adc
sub
das
xor
out
data16
jno
jnp
jecxz
cltd
xchg
jns
mov
das
or
jge
sahf
sti
xor
jne
cwtl
add
mov
popl
or
jl
mov
call
sarl
je
lea
nop
adc
dec
mov
lock
pop
or
or
shrl
mov
xchg
mov
sub
adc
mov
cmc
outsb
dec
in
lahf
aaa
not
jo
xor
sbb
sarb
insb
jns
dec
aad
loopne
cltd
cmp
add
test
dec
cli
stos
dec
andl
ds
push
sub
sarb
mov
jo
jp
mov
adc
dec
aad
xor
jnp
push
push
cli
jecxz
xor
mov
jge
add
cmp
mov
push
and
aas
pop
test
inc
adc
pushf
push
leave
rcrl
lock
pop
xchg
les
mov
mov
fimuls
or
pop
jo
aam
xorl
sbb
aam
nop
shr
xor
imul
mov
ret
mov
jge
outsb
xchg
pop
ss
popf
mov
insb
ss
mov
add
mov
add
rcl
lret
iret
jmp
mov
pop
push
push
lret
mov
jae
inc
push
fwait
movsb
sbb
jle
and
cltd
lea
shll
cmpsb
faddl
jg
test
cmp
out
mov
pushf
out
lret
rclb
insb
stos
cmp
dec
xchg
rcrb
and
cmpsb
and
popf
movsb
int3
aas
cmp
sahf
in
dec
das
sub
adc
cmp
push
shlb
aad
loop
inc
lock
or
imul
add
into
mov
xchg
pop
ret
das
push
xor
sbb
movsb
jns
outsb
push
add
in
sub
cmpsl
xchg
jle
xchg
in
adc
pushl
iret
adc
push
xchg
fcoms
fildl
push
pop
movsl
test
rorb
lcall
mov
rcll
out
dec
pop
lock
arpl
mov
fstpt
cltd
popf
fwait
leave
imul
inc
cld
cmc
and
dec
fdivr
nop
xlat
xor
lret
adc
call
imul
stos
jp
stos
data16
push
pushf
daa
imul
arpl
data16
dec
xor
stc
shlb
aaa
jae
into
sahf
lods
or
and
pop
add
aad
cld
mov
mov
test
fs
fiadds
push
jno
shlb
sub
add
dec
xchg
andl
adcl
mov
pop
adc
pop
push
test
add
add
cmpsb
push
popf
fwait
adc
mov
lret
sbbb
scas
sbb
lock
pop
mov
cs
xchg
or
aas
jb
add
sbb
inc
fistpl
mov
lret
push
push
add
or
and
mov
mov
pop
dec
loopne
sahf
lret
jp
out
pusha
sub
aaa
lret
dec
adcb
shrl
adc
subb
xchg
add
aas
and
or
sbb
xchg
fdivrl
fdivs
in
mov
das
and
jmp
in
loop
mov
and
push
int3
pop
andb
lcall
jo
cwtl
pop
fs
ljmp
jne
jnp
sub
sbb
cmp
and
sbb
movsb
jl
inc
cmp
pop
outsl
dec
push
sub
xchg
jnp
dec
pop
not
stos
dec
fisttps
inc
mov
xor
sub
leave
adc
rcll
ret
push
cltd
popa
xchg
minps
xchg
sbb
jno
fcomps
push
icebp
sub
xchg
mov
scas
gs
mov
mov
jne
mov
sar
les
imul
ret
aaa
lods
xor
mov
test
cmpsb
sbb
push
adc
and
lret
ja
mov
sbb
jbe
and
rorl
data16
outsb
cmp
stos
popa
push
inc
lock
int3
dec
pushf
jmp
xchg
mov
mov
xor
lret
cwtl
dec
mov
das
pop
repz
out
loopne
sbbl
test
in
lock
mov
daa
jecxz
cmp
sarl
cmp
jp
or
dec
fisubrl
push
pop
pop
add
sub
pop
mov
pop
mov
dec
shr
inc
xor
and
jbe
xor
and
pop
aas
add
inc
add
mov
jg
mov
sbb
idivb
mov
popf
sti
adc
add
sti
mov
pop
sarb
push
int
add
ror
mov
leave
sbb
pop
sti
cmp
jb
cmp
or
outsb
in
jb
adc
mov
sarl
add
add
adc
or
out
repz
push
mov
inc
sbb
mov
push
dec
jnp
ljmp
std
xor
sbb
push
adc
iret
cwtl
shll
add
adc
movsl
push
jo
imul
stos
mov
fiaddl
aas
or
jbe
bound
xor
ja
pop
and
or
adc
out
ret
dec
js
mov
addr16
nop
adc
aad
call
cmp
pop
adc
xchg
pop
outsl
aas
aas
mov
std
out
inc
xchg
sub
test
les
inc
mov
shll
lcall
ror
jnp
mov
fs
push
lods
addr16
int
jns
addb
sahf
aad
or
xchg
pop
add
mov
sbb
enter
sahf
push
xchg
cltd
ss
lret
mov
out
xor
jnp
push
cwtl
cmp
lods
push
push
imul
lcall
test
mov
pop
cmp
cmp
and
test
mov
sarb
movsl
xor
inc
out
inc
icebp
sbb
test
test
add
enter
dec
or
add
pushf
mov
adc
shrb
lret
lea
nop
imul
dec
mov
in
hlt
pushf
in
pop
sti
mov
jecxz
adc
shlb
in
sub
int
and
dec
lahf
lcall
mov
in
lds
xor
adc
mov
pop
mov
les
mov
xor
test
ret
dec
popf
dec
inc
cwtl
add
mov
mov
pop
jnp
jge
test
cmp
lret
daa
mov
imul
push
mov
rcll
jno
fwait
cmpsl
aaa
and
lods
sahf
imul
adc
cmp
outsb
sar
enter
or
stos
push
sti
iret
orb
xor
jp
mov
sub
insl
enter
mov
xor
xchg
sub
outsb
addb
imul
out
aas
sbb
sub
sbb
cmpsb
pusha
xor
icebp
mov
js
jbe
fildl
pop
int3
push
xorl
orb
mov
add
pop
add
adc
sbb
sub
add
or
mov
out
out
xor
ret
pop
xchg
jmp
sbb
hlt
int
xchg
sub
xchg
das
xor
jmp
mov
lea
xor
scas
hlt
mov
jb
cmpsl
scas
hlt
jb
sbb
bound
je
fiadds
sarl
aam
or
jo
repz
sub
dec
fcoms
mov
addr16
push
or
cld
add
lret
test
xchg
xlat
mov
leave
je
mov
inc
jp
imul
adc
and
and
mov
inc
add
lahf
pop
dec
lods
fidivrl
test
adc
or
adc
das
call
jl
call
scas
push
out
adc
cmp
sub
adc
imul
nop
mov
inc
not
adc
cmp
fnstcw
inc
out
jb
sub
fwait
daa
outsb
cmpl
ja
xor
addr16
hlt
jmp
in
pop
inc
mov
pop
adc
fistpll
lcall
mov
das
mov
sub
dec
dec
lcall
lock
mov
mov
mov
loopne
int3
push
inc
stos
pusha
inc
pop
push
lock
push
fwait
dec
cli
jmp
jmp
out
xchg
push
outsl
cmc
out
bound
push
cltd
hlt
test
pop
aad
cmpsl
xor
out
into
insb
or
mov
push
jp
in
inc
in
inc
imull
inc
dec
rcll
xlat
hlt
cmpsl
add
push
or
ds
jns
leave
sbb
push
inc
movsl
xchg
jl
stos
pusha
pop
into
xchg
jae
lahf
push
jns
iret
arpl
and
fdivl
xchg
lods
aaa
std
outsl
mov
sbb
leave
jnp
mov
mov
mov
popf
rorl
pop
push
imul
shl
pusha
push
scas
es
xchg
pop
pop
je
jo
and
hlt
scas
fcoms
movsb
inc
loop
pop
lock
adc
sbb
ljmp
cmp
aas
jb
rcl
mov
les
xor
test
push
imul
lcall
fsubl
pop
pushf
out
sub
icebp
sbb
pop
imul
ficoml
mov
test
pusha
movntps
jecxz
cmp
and
adc
gs
fimull
ljmp
sub
pop
xchg
jle
test
les
ds
roll
sub
sbb
pusha
and
pop
jl
mov
push
cmpsl
mov
test
outsb
daa
fbstp
cmp
mov
mov
movsl
ja
push
test
in
test
lds
adc
xchg
arpl
sti
loop
jae
xchg
ja
cltd
in
jae
pop
mov
fwait
jno
xor
inc
add
mov
add
loope
ljmp
into
push
sub
mov
mov
inc
aam
in
pop
mov
jno
pusha
fmulp
cmc
outsl
fwait
and
es
addr16
xchg
imul
or
and
mov
mov
xor
or
jp
add
inc
push
pushf
lock
cmp
insb
mov
add
fstl
push
fwait
xor
mov
lock
inc
fnstsw
mov
inc
xor
sbb
test
adc
mov
call
sbb
ret
ja
hlt
ljmp
das
dec
dec
sbb
lahf
movsl
mov
add
push
mov
inc
adc
out
xor
sbb
xchg
mov
out
pushf
adc
ret
xchg
out
js
cmp
imul
mov
scas
rcrl
js
mov
aas
inc
icebp
lahf
mov
push
lahf
or
into
cs
mov
fucom
std
aam
ficompl
jmp
out
icebp
clc
xchg
cmp
sub
pushf
std
and
into
ja
push
icebp
sub
inc
lods
mov
jl
jnp
stc
test
cs
leave
dec
mov
icebp
jns
push
fstpl
je
xchg
xor
xchg
mov
add
mov
inc
mov
out
in
add
fs
mov
outsb
dec
cli
pop
push
mov
dec
add
jp
push
stc
inc
mov
lock
add
imul
adc
lods
aaa
mov
fwait
sub
in
aam
pop
mov
mov
jecxz
sarb
cmp
inc
cmp
mov
xchg
ret
mov
push
push
sbb
push
arpl
adc
add
inc
aaa
testl
mov
xor
mov
ss
adc
push
mov
add
fstp
ret
mov
subl
jmp
fidivrl
jecxz
and
pop
and
push
dec
xchg
jmp
cmp
fwait
rorb
mov
test
jmp
stc
xchg
push
push
adc
mov
dec
imul
pop
pop
mov
popa
pop
dec
js
jle
push
sbb
imul
and
mov
ljmp
loope
std
mov
and
xchg
inc
jg
bound
int
cmp
cmpl
lods
in
outsl
imul
dec
mov
loopne
pop
cmp
pop
inc
mov
adc
js
jle
xchg
cli
decb
pop
clc
icebp
push
sbb
mov
xor
outsb
cmp
ficomps
je
add
inc
test
inc
mov
outsl
stos
pop
sarl
leave
and
or
push
jb
movsl
dec
pop
out
int3
push
into
xlat
mov
in
fs
lea
and
dec
leave
decl
mov
jb
ss
mov
push
adc
mov
mov
inc
push
cld
and
daa
test
sub
aad
adc
pop
pop
hlt
aas
gs
sbb
adc
add
mov
mov
xor
mov
scas
sub
mov
std
notl
sahf
push
push
pop
xchg
popa
repnz
lods
jle
pcmpeqw
adc
xchg
xorl
cmpsl
xor
fadd
adc
and
adc
icebp
nop
pop
outsb
xchg
mov
idiv
popf
mov
add
test
pminub
mov
adc
add
dec
inc
arpl
pop
aas
in
mov
mov
push
pop
out
xor
outsb
dec
das
add
or
int
xlat
cmpsb
add
mov
aad
mov
sub
lods
xor
cmp
andl
add
adc
jbe
hlt
sub
dec
test
daa
clc
sbb
jp
lcall
sbb
and
fsubrl
scas
test
fdivr
cmp
fsubrs
mov
mov
data16
adc
bound
popf
scas
xor
fisubrs
addr16
adc
sti
inc
mov
mov
cmp
pop
jnp
rcll
in
movsl
test
sbb
aad
in
xor
dec
clc
cmc
xor
xchg
xchg
mov
fcmove
les
bound
push
inc
js
ret
mov
mov
lret
fsub
push
mov
cld
shl
jo
mov
cmp
es
orb
mov
std
movsb
movsl
int3
mov
xor
dec
dec
int3
push
xor
or
imul
out
loop
imul
dec
sbb
jp
mov
cs
mov
mov
mov
out
add
fmulp
mov
mov
icebp
xor
inc
testb
mov
jno
mov
shll
ret
movsb
cmpsl
loop
cwtl
enter
xor
inc
push
and
push
push
dec
push
fxch
xor
push
xchg
ss
test
jnp
leave
fs
call
repz
sbb
push
mov
mov
ficompl
sub
xchg
int3
jmp
jb
adc
pop
inc
stos
jge
mov
movsb
xchg
stos
fsubr
out
fmull
mov
sbb
mov
jo
data16
out
fnstcw
je
pop
cmpsl
popa
add
loop
add
std
mov
jmp
mov
js
mov
scas
mov
fnstenv
jmp
out
cli
testb
or
add
mov
and
xor
adc
pop
add
cmpb
cmpsl
test
mov
popa
xchg
dec
insb
insb
xor
mov
test
iret
cltd
ja
xor
dec
loop
xor
jo
dec
jns
mov
and
push
push
rolb
in
jmp
xchg
lds
add
adc
inc
lock
xchg
fimuls
pop
ljmp
mov
mov
add
xchg
mov
popf
inc
xchg
sub
ffreep
shlb
sub
stc
fs
mov
test
cmp
mov
xor
pop
lret
fsubl
push
and
inc
and
lock
add
xchg
xchg
xor
stos
sahf
adc
lea
xor
push
dec
shr
dec
and
fistpll
pop
push
push
or
dec
xor
or
push
jo
mov
pop
test
dec
cli
popa
add
mov
xlat
mov
dec
or
adc
cmpsl
push
loop
ficomps
aaa
pop
pop
pop
lods
ret
push
sbb
mov
das
aad
shl
pop
inc
sbb
stc
mov
fdivrl
xchg
push
or
or
push
sysexit
xchg
and
stos
mov
jmp
data16
cmp
xchg
or
and
push
addr16
mov
adc
insl
fsubs
lock
sahf
pushf
push
mov
pop
in
xor
movsl
dec
jp
or
mov
push
xchg
xchg
xlat
xor
rcll
imul
mov
pop
repz
mov
xchg
push
push
addb
xlat
mov
iret
fld1
pushf
stos
push
add
and
xchg
jmp
popf
shlb
out
xor
das
adc
ret
movsl
stos
cmp
mov
jae
orb
je
test
pop
stos
sbb
cmpsb
mov
dec
outsl
iret
scas
cmc
or
jecxz
pop
jb
jae
lods
jge
and
fmul
lahf
cltd
jbe
or
mov
icebp
es
jge
sbb
iret
test
lods
pop
inc
pusha
push
in
sar
xchg
mov
mov
and
sub
mov
clc
cmpl
adc
repz
lods
scas
inc
push
sub
or
push
sbb
xor
les
dec
nop
iret
out
mov
clc
call
add
sarl
adc
jl
in
sbb
dec
ss
jge
push
lods
and
mov
ret
and
and
push
gs
lock
js
and
add
iret
adc
test
pop
popa
aad
inc
sbb
ja
xlat
setnp
cmp
cmp
aas
ds
hlt
mov
fisubrs
shlb
aaa
ret
xacquire
sahf
dec
or
nop
imulb
cwtl
clc
mov
pop
lods
jo
jge
lods
add
xor
mov
push
cmp
or
out
stos
or
jno
bound
shlb
mov
daa
in
inc
adcb
xchg
cmp
jg
leave
jbe
sub
or
xchg
xchg
jge
mov
jo
push
or
repz
sahf
in
cs
sub
xor
adc
in
movd
iret
dec
fmull
xor
sub
gs
sti
lock
dec
push
ss
sbb
in
ds
mov
xchg
adc
out
and
xchg
mov
nop
xchg
js
in
ja
mov
call
sarb
cmc
ss
test
out
push
sbb
cmp
adc
mov
mov
mov
arpl
fimuls
punpckldq
inc
mov
lret
test
cmp
cwtl
add
mov
mov
in
jbe
int3
data16
sti
and
mov
loopne
pop
jo
stos
ret
mov
xor
inc
xchg
push
push
mov
lods
cli
jmp
mov
arpl
clc
or
lds
inc
sbb
inc
inc
ffree
jmp
inc
cmp
jl
sub
xchg
sbb
and
cwtl
out
das
dec
hlt
call
cmp
nop
pop
jge
sbb
and
pop
ljmp
mov
les
xor
outsl
lock
xor
pusha
xor
xor
insl
push
loopne
sbb
mov
fs
addr16
out
scas
pop
adc
dec
cmpsb
movsb
aas
sub
xchg
leave
imul
sbb
add
sub
out
xchg
lahf
jg
mov
add
xchg
jb
leave
sarl
stos
xchg
xor
repnz
and
outsb
pop
dec
inc
cmp
rorl
mov
dec
jge
stc
enter
cmp
adc
test
push
xor
aam
ficompl
daa
xchg
scas
jbe
jbe
arpl
mov
sahf
and
icebp
mov
aaa
xor
dec
xor
leave
lret
pop
dec
mov
fs
cld
mov
pop
call
clc
sahf
mov
test
xlat
add
dec
lds
pop
int
or
in
inc
and
ja
xchg
mov
rol
mov
icebp
pop
movsl
mov
fsubp
inc
sbb
sbb
bound
mov
mov
xlat
lods
loopne
les
xor
lds
add
lds
push
push
jg
mov
imul
test
cmpb
hlt
xchg
push
arpl
adc
push
add
xlat
and
mov
movsl
mov
pop
sbb
mov
cli
test
adc
fsts
push
imul
mov
and
cmp
add
stc
xchg
pushf
sub
clc
mov
das
xchg
jp
das
pop
icebp
bound
aas
mov
jns
and
ljmp
sbb
inc
sub
fsubrl
adc
fnstenv
shll
loope
imul
cwtl
test
cmp
mov
cmp
cmpsl
fcmove
inc
push
sbb
sti
add
sub
xchg
in
xchg
fcomps
push
sbb
sahf
cltd
je
pop
lret
cmp
scas
addr16
inc
mov
jne
cmp
or
jns
add
jl
lret
int
push
fstl
add
int
mov
popf
pop
dec
jo
ret
ds
repnz
jne
das
push
cwtl
call
xor
pusha
mov
inc
push
sbb
mov
ret
jo
inc
int
repnz
out
outsl
js
pop
sub
push
cmc
stos
cmp
cmp
sbb
popf
jecxz
pop
xchg
or
mov
cmc
add
mov
pop
add
jmp
cmp
mov
rorl
es
stc
push
testl
es
jbe
into
lret
pop
jne
sbb
outsl
out
inc
xchg
dec
push
mov
xchg
mov
adc
stc
je
xor
xlat
and
jge
cmpsl
test
mov
mov
test
nop
jns
pushf
mov
ja
loope
pop
popl
jmp
or
loop
mov
pop
cmp
cmp
and
icebp
xchg
dec
mov
lea
push
test
mov
xor
push
lcall
add
dec
nop
xor
out
sub
xchg
in
movsb
lock
stos
cmpsl
aaa
imul
loope
push
mov
add
cmpsb
pop
daa
inc
leave
lahf
gs
mov
mov
lcall
fwait
into
bound
jl
cwtl
mov
fnstenv
xor
mov
mov
jg
cmp
dec
push
pop
hlt
in
mov
stc
ds
hlt
jno
repnz
stos
fucomip
sbb
ja
in
add
sub
fadds
inc
lret
or
inc
mov
inc
xor
xchg
into
insb
insb
xchg
je
std
sub
jecxz
xor
dec
pop
into
jne
mov
stc
mov
mov
fcomps
out
inc
cmp
sbb
or
mov
add
xor
pop
das
dec
cmp
sub
test
ds
mov
stc
jnp
mov
lea
stos
fistps
andl
xor
push
ljmp
push
cmp
jl
mov
nop
cld
mov
popf
dec
imul
ftst
sbb
sub
push
add
repz
cmpl
push
ret
dec
mov
mov
xchg
cmc
lods
popa
dec
push
pop
pushl
ret
sbb
xorl
js
xchg
xor
jno
or
cwtl
lret
adc
cmp
scas
jge
and
mov
cs
inc
fcoml
cmp
push
pop
xor
cmp
popa
jle
jmp
mov
in
adc
divb
cmp
sbbl
mov
xlat
loopne
dec
and
mov
pop
xor
scas
inc
mov
out
adc
xor
aaa
and
xchg
add
sbb
pop
push
mov
leave
inc
int
fcoms
shrb
ljmp
mov
negb
cmp
lock
test
scas
mov
jmp
int3
icebp
jns
in
sub
sub
sahf
enter
mov
push
adc
sbb
pop
pop
cli
jmp
int3
leave
xor
dec
sbb
or
lods
inc
je
and
js
mov
sub
sub
push
xor
gs
shl
lcall
stos
inc
mov
inc
push
js
sub
mov
cmpsl
inc
jmp
es
lods
mov
lahf
sti
xorb
ror
mov
scas
xchg
mov
pushf
call
pop
dec
fmul
iret
inc
pop
xchg
addl
jnp
dec
gs
push
pop
mov
xchg
repnz
rcrb
mov
push
or
adc
and
fsubr
jmp
fcomp
xor
add
sarl
daa
adc
mov
mov
out
pop
leave
pop
in
not
fstp
js
cmp
je
push
ljmp
jo
js
adc
aas
ja
sbb
insl
into
mov
inc
add
and
pop
dec
sbb
fsubl
int
jecxz
andl
dec
and
push
mov
mov
idivb
lret
in
or
push
mov
mov
repnz
push
je
xchg
jo
call
nop
dec
lahf
outsb
aaa
daa
lea
mov
cmc
add
push
mov
add
cmpsl
lahf
dec
mov
add
dec
adc
enter
lock
pop
dec
add
push
fmull
xor
popa
mov
push
sub
xchg
mov
js
dec
inc
fwait
jl
or
adc
pop
and
int
mov
push
mov
sbb
pop
push
or
cmp
loopew
cwtl
xor
adc
mov
cmc
xchg
repz
dec
sti
shlb
jo
out
aad
pop
adc
mov
subl
aam
js
fisttps
cltd
push
popa
mov
scas
hlt
cmpsb
or
or
cmp
ss
notl
jo
ss
in
shl
dec
push
push
adc
push
mov
fcompl
and
sbb
test
dec
ss
sbb
xchg
mov
pushf
jp
lds
fsubrs
loope
adc
or
jp
push
fwait
sub
cmp
sahf
ret
inc
xchg
cld
add
in
divl
adc
xor
pop
cmpsb
ljmp
mov
mov
mov
aad
jmp
pop
add
xlat
jbe
ss
pop
leave
mov
andl
pop
cltd
test
rorb
xor
gs
push
mov
mov
fdivs
pop
les
insb
mov
adc
xor
out
push
adc
mov
sbb
push
nop
aaa
mov
mov
mov
jmp
mov
add
xor
inc
xchg
sti
insl
mov
test
cmp
jl
stos
and
push
mov
aam
out
addr16
or
push
pushf
xchg
test
sarb
mov
ljmp
movsl
outsl
dec
popa
cltd
lahf
pop
fisttpll
xlat
or
nop
enter
movsl
dec
out
pop
inc
pop
movsl
lea
out
xchg
inc
cmp
and
sbb
shlb
pop
xor
push
xor
mov
sub
aam
cmp
das
xchg
xor
pusha
pop
jmp
xchg
push
fwait
inc
fdivrs
mov
sub
movsl
push
out
aas
and
push
fstl
loop
xor
push
movsl
scas
push
fildll
mov
fsubrs
jmp
test
nop
or
pop
mov
sub
stos
sbb
mov
xor
call
pop
push
cmpsl
into
aad
adc
sbb
mov
fisubrs
cwtl
cmpsl
loopne
push
movsb
les
mov
push
icebp
or
xor
movb
sahf
stos
stos
scas
cltd
xor
cmp
pop
shll
add
mov
cltd
cltd
push
mov
pop
cmp
aam
push
shrl
in
mov
xor
pop
adc
sub
push
arpl
mov
adc
push
test
xchg
iret
popa
loopne
cmpsl
mov
adc
jbe
lock
stc
mov
dec
scas
repz
mov
inc
daa
cmp
add
or
pop
out
cmp
js
jle
lods
mov
in
pop
inc
mov
movsl
fimuls
mov
popa
mov
lods
das
jns
sbb
add
adc
mov
mov
aam
repnz
cmc
jle
jle
inc
iret
inc
aas
icebp
push
stc
inc
loope
andb
pop
xor
jmp
pop
jl
stc
fs
pop
push
testl
inc
pop
push
aas
dec
pop
mov
imul
push
and
fstps
out
xor
cmpsl
js
sti
hlt
inc
jne
xor
aaa
inc
inc
repz
mov
add
mov
cltd
cmp
cmp
outsb
aam
fisubl
and
lret
call
addr16
push
mov
sbb
fstpt
pop
dec
dec
aas
inc
pop
addr16
xor
push
adc
cmp
mov
cld
xchg
cmp
mov
push
pop
xchg
fnsave
jbe
test
xchg
movsb
pop
imul
fisttpll
and
pop
out
cmp
mov
mov
fwait
sbb
call
testl
in
cld
mov
add
pusha
pusha
xor
call
std
dec
imul
inc
mov
in
stc
jecxz
inc
lcall
pop
imul
pushf
out
cmp
pop
shrl
sbb
clc
dec
fs
nop
add
and
insl
jge
dec
cmp
and
lock
and
aas
push
sub
mov
and
jb
mov
outsb
push
leave
lcall
jbe
jle
jo
xor
arpl
xchg
fcompl
cmpsb
mov
cmp
int3
xor
lret
pop
lds
xor
movb
fsubp
jp
mov
int3
mov
leave
and
das
iret
in
out
sbb
sub
mov
adc
xchg
ja
ret
push
shl
aaa
fldl
xor
xchg
pushl
inc
xchg
jle
ret
push
push
mov
jg
and
adc
jle
xchg
push
cmp
test
js
stos
push
lret
and
mov
scas
xchg
js
stos
je
dec
lods
push
adc
das
aaa
mov
psubd
mov
pusha
in
rorb
push
es
sbb
repz
xchg
jmp
push
ror
xor
ljmp
push
incb
into
lret
xchg
xor
js
popf
lds
xchg
jb
pop
xchg
faddl
add
clc
ret
adc
out
js
popa
or
jb
inc
jl
stos
mov
sahf
sub
fnstcw
cli
loop
or
cs
pushf
je
add
repz
pop
mov
in
or
xor
and
jns
inc
pop
fdivrs
shlb
fcompl
call
in
jle
dec
sbbb
aam
movsb
pop
daa
dec
sub
xor
cmp
imul
fstpl
loopne
push
push
test
cmp
xor
shrl
mov
ds
mov
mov
test
adc
mov
cltd
xchg
fisttpll
lods
add
xchg
addl
ljmp
inc
mov
bound
xchg
jns
insl
adc
lds
mov
stos
push
rcl
pop
jmp
mov
mov
jmp
cwtl
subb
push
push
add
sbb
leave
mov
dec
push
sbb
cmpsl
or
fbld
fwait
cmc
jg
jl
mov
lcall
xor
xlat
incb
cmc
icebp
mov
mov
or
and
out
adc
and
in
add
bound
in
push
push
pusha
mov
cwtl
insb
sahf
mov
or
xchg
arpl
sub
mov
sub
push
mov
jg
adc
std
lret
imull
int3
pop
jnp
push
sub
sbb
mov
stos
jmp
aad
pop
das
cmp
cmp
cld
jmp
ss
sbb
bsr
frstor
mov
xchg
jno
rcrl
movsl
stc
xlat
sbb
ror
and
not
cmp
std
jbe
sbb
and
xlat
mov
lods
dec
pop
adc
mov
aam
inc
sahf
cmpsl
sub
pop
inc
insl
test
fimuls
lret
cmpb
jno
pushf
ficompl
mov
adc
mov
gs
sbb
pop
sub
pop
rcrb
enter
aam
jge
repnz
mov
stos
pop
xor
inc
movswl
roll
mov
pop
imul
ret
cmc
stc
lods
out
xchg
push
dec
outsb
and
push
pop
or
adc
sbb
test
mov
push
sarl
mov
cwtl
pop
adcb
shlb
in
aad
fisubs
adc
pop
lret
jnp
jmp
lods
daa
cmp
or
jle
jno
imul
push
ss
mov
das
lock
add
push
insl
mov
lds
push
push
repz
sbb
and
cmp
fcmovnb
xchg
pop
andl
dec
sub
push
clc
xorl
repnz
rol
cmp
insl
jae
cltd
outsb
sub
mov
sub
or
das
and
movsb
pop
pslld
xchg
shll
xor
lret
xor
pop
inc
fnsave
push
xchg
mov
xor
sbb
push
add
inc
cmpsl
fwait
jp
cs
xor
ret
out
dec
cmp
adc
adc
dec
gs
push
cli
pusha
fdivrp
cmp
pop
or
addr16
mov
shll
xchg
addr16
adc
xchg
ficoml
out
xor
cmp
sbb
inc
clc
pop
stos
inc
sarl
xchg
fxch
jle
inc
shll
dec
es
and
hlt
sub
mov
push
les
les
clc
cld
jp
xor
addb
sbb
outsb
shll
mov
shrb
jmp
mov
lods
or
dec
xchg
xchg
lds
ss
xor
xor
lods
mov
icebp
cmp
dec
mov
fwait
or
repz
push
pop
or
ret
and
mov
add
dec
sub
push
fistps
jle
ljmp
xor
push
xor
roll
and
cld
andl
xchg
xor
pop
xorl
push
mov
nop
xchg
movsb
insl
test
and
daa
sub
test
dec
jb
pop
pop
leave
push
jmp
popa
imul
ror
xor
xchg
in
test
mov
sbb
xchg
dec
outsl
lahf
xchg
sbb
aas
pop
stc
or
repz
inc
into
cmp
mov
fadd
scas
sti
sub
mov
cmp
jg
test
ljmp
popa
and
mov
or
sub
aad
push
js
xor
jge
or
sbb
inc
out
cs
cmp
rclb
push
push
jne
fcoms
mov
imulb
mov
cmp
push
dec
icebp
and
mov
and
inc
and
lcall
js
push
lods
fwait
and
lds
and
cmp
enter
fidivrl
das
push
sub
push
sti
sub
mov
mov
pop
xchg
xchg
fistpl
fistl
adc
lods
lcall
movsl
sbb
enter
movsl
cmpsl
sbb
adc
push
scas
inc
mov
inc
inc
pop
fldt
xchg
insl
sahf
lcall
rol
insl
in
aam
call
insl
mov
cmp
cmc
ret
cwtl
sub
in
and
movsl
iret
lock
pop
fst
ret
inc
lods
pop
sahf
das
cmp
jl
xor
test
daa
fisubrs
test
stc
mov
push
mov
stos
cmp
fs
push
stos
sbb
and
push
shll
pop
fcomp
loop
aas
std
dec
sbb
dec
jne
sub
pop
xor
insb
fildll
sbb
les
xor
or
jge
push
cli
xchg
sub
lcall
lea
js
mov
movsl
lock
popa
pusha
ficomps
sbb
insl
push
in
or
xchg
lret
add
insb
idivb
jne
cld
mov
and
inc
lods
inc
leave
sbb
leave
inc
mov
mov
cmp
pop
xchg
cmpsl
xor
or
lods
mov
shl
arpl
mov
push
lcall
cld
rclb
adc
pop
sbb
dec
idivl
in
test
mov
pop
adc
lock
aaa
aam
ja
das
stos
and
add
jae
sbbl
or
cmp
pop
das
xchg
mov
push
jnp
cmp
mov
mov
lret
jo
in
xor
xor
popf
pop
push
cmp
push
das
xchg
mov
jecxz
cwtl
push
dec
loope
int3
test
sub
lds
insl
add
lods
scas
sub
pop
sub
mov
sub
or
adc
enter
push
lret
jne
adc
jns
mov
and
push
sbb
frstor
adc
in
push
decb
pop
mov
mov
aas
jp
push
dec
test
adc
cmc
mov
lods
out
fwait
sbb
pushw
mov
push
adc
sbbl
das
xchg
or
mov
aam
or
inc
iret
lods
pop
nop
cli
js
test
rcrl
jecxz
scas
cmp
lea
sbb
xchg
cmp
aaa
xchg
jmp
sub
pop
adc
daa
and
jecxz
dec
mov
or
dec
adc
loopne
pop
jecxz
fwait
loop
xor
inc
pop
mov
or
aam
inc
iret
in
mov
repz
sub
std
jno
int
push
stc
pop
shll
lahf
gs
std
pop
psubusb
shll
ljmp
es
sub
xchg
test
out
cld
imul
movsl
xchg
in
into
add
aaa
stc
mov
push
or
adc
sub
xor
shr
push
out
xor
mov
adc
ja
enter
in
adc
mov
mov
sbb
fstpl
jge
xchg
or
xchg
or
sbb
adc
test
clc
call
or
mov
push
push
cs
pop
daa
out
movsb
je
outsl
cmp
inc
imul
lods
fistpl
ficoms
push
push
push
punpckhdq
dec
popf
dec
mov
movsb
pop
out
sbb
push
adc
shlb
mov
mov
jmp
test
or
mov
aaa
xor
cs
das
es
test
and
mov
rolb
fld
dec
mov
addb
pop
arpl
int
xchg
int3
cmpsb
repnz
xchg
jae
call
fcoms
nop
or
mov
mov
dec
ljmp
sub
or
add
aas
cmp
push
mov
mov
int3
rep
in
scas
lret
out
rcll
imulb
fiaddl
push
or
jnp
loopne
nop
mov
icebp
testl
xchg
jnp
sbb
scas
or
dec
test
jns
dec
out
outsl
mov
push
xlat
test
stos
faddl
cmp
stos
les
pop
rcl
adc
mov
mov
cmp
mov
addr16
dec
mov
ret
andl
xchg
fistl
xorl
pop
and
or
sahf
hlt
clc
test
push
iret
jo
aaa
addr16
out
push
loope
popa
movsb
fidivl
xor
fldl
jecxz
inc
dec
ret
ret
dec
xor
scas
push
inc
pop
enter
out
dec
add
cwtl
sbb
mov
cmpsl
arpl
or
lds
fisubs
leave
jb
pop
cmpsl
and
nop
add
test
mov
adc
push
or
cmp
popa
add
je
js
loop
sbb
loopne
cwtl
sub
inc
xor
insb
add
and
lret
mov
xor
cmpb
loope
inc
jp
cmp
in
pop
fdivl
xchg
aad
sub
mov
push
js
cwtl
fiaddl
sahf
stos
pop
adc
and
inc
daa
xchg
cmpsl
lret
push
xchg
mov
pusha
pusha
cmpsl
fldenv
mov
or
fdivr
pusha
jmp
loop
sub
cmp
push
lahf
fwait
or
cmpsb
xor
mov
xor
inc
pop
imul
das
push
and
mov
test
mov
rorl
sbb
adc
inc
push
out
inc
mov
pop
sbb
pop
inc
out
rclb
sar
mov
or
xor
mov
mov
cmp
dec
jle
mov
popa
mov
pop
adcb
jle
push
adc
arpl
cmp
mov
daa
cmpsl
or
sub
ja
shlb
add
sub
pop
mov
aam
lds
insl
lahf
xchg
jl
jno
andb
xor
lods
fwait
dec
je
adc
in
aas
jp
scas
out
adc
add
sub
sbb
in
out
in
mov
lcall
outsb
add
roll
pop
scas
jno
fists
mov
sbb
movsb
jno
in
mov
fcmovnu
std
sub
jle
inc
aam
movsb
cmc
dec
call
sub
sub
jns
mov
adc
rcll
es
jge,pn
ljmp
pop
add
std
dec
and
stos
xchg
and
push
cltd
mov
aad
fcomps
inc
fldl
fistl
jge
cmp
loop
jp
pop
fwait
and
or
cmovo
cmp
sub
imul
and
sbb
add
and
addr16
sbb
jp
mov
cmpb
sub
add
int3
push
xchg
shll
call
xlat
nop
mov
lods
or
pop
jo
mov
sarb
bound
mov
mov
push
mov
fildl
sbb
xor
and
pop
and
mov
xor
or
jae
xchg
add
mov
fildll
add
xchg
or
mov
mov
sub
add
mov
add
add
inc
fcompl
insb
int3
xchg
mov
es
call
mov
outsl
lret
loope
test
cmpsl
sbb
push
dec
jp
loopne
add
ja
jmp
scas
add
fistpll
inc
shlb
sub
nop
push
push
aad
rclb
sbb
inc
pop
fcom
jb
jge
pop
daa
mov
and
jo
dec
jae
ljmp
mov
aam
int
jbe
add
dec
xor
leave
xchg
jae
aad
mov
add
inc
gs
sarb
adc
jmp
mov
or
xchg
mov
xchg
cmp
imul
pop
sbb
jae
xchg
inc
sbb
sub
loopne
outsb
dec
pop
das
fcompl
dec
jns
pop
pop
jne
into
outsl
add
sbb
lds
mov
push
lret
mov
cld
adc
fs
xor
js
cmpsl
add
pop
pusha
pushf
pop
add
and
inc
add
das
stos
adc
pop
fcomip
jb
jne
lea
push
xchg
je
inc
fwait
push
insl
pop
add
push
scas
jp
mov
sbb
mov
add
pushf
out
testb
lcall
sub
in
adc
ljmp
cmp
loope
cld
mov
jo
mov
add
sbb
mov
icebp
adc
popa
aad
mov
pop
xor
mov
xlat
test
push
push
dec
jge
imul
mov
pop
das
pop
xchg
pop
inc
sub
jo
mov
movsl
cmp
add
pop
push
scas
xchg
push
pushw
insb
fnstcw
das
fbld
cmp
pop
nop
pop
sbb
clc
xchg
scas
inc
jb
sti
shrl
or
shlb
add
sbb
inc
sub
xchg
xor
ss
or
flds
xor
mov
and
cmp
sub
lret
mov
mulb
xchg
loope
cmpsb
dec
inc
add
sbb
je
aaa
xor
adc
imul
imul
shl
sub
xchg
scas
aad
rorl
xor
inc
and
push
mov
lret
mov
testl
xor
xchg
mov
mov
xchg
fcomps
test
mov
xchg
push
test
dec
ret
imul
pop
inc
rclb
repz
int
or
xor
daa
sahf
jb
nop
push
xlat
xchg
adc
sbb
sub
leave
loope
cltd
mov
jecxz
lret
fdivl
pop
mov
test
add
ds
aaa
into
ret
or
mov
adc
or
dec
or
or
push
sub
cld
adc
je
ds
fldl
pop
arpl
xlat
cmp
cmp
jecxz
xchg
mov
pop
loop
mov
sbb
inc
mov
cmp
push
sbb
stos
stc
les
or
sub
movsb
lahf
and
mov
mov
enter
jb
inc
pusha
divb
jbe
sbb
out
mov
ds
fcomi
test
cmpb
aad
xor
rorl
adc
jns
std
add
jg
or
xchg
outsb
xor
inc
xor
sahf
push
pop
or
shll
dec
enter
fists
sahf
lock
cmp
inc
mov
lods
fistps
cmp
dec
lea
xor
in
xor
lods
lret
inc
pop
xlat
aaa
dec
imul
inc
push
xorb
sti
push
mov
mov
cmp
aas
fistpll
mov
or
mov
xor
jle
jbe
push
mov
popa
mov
cmp
dec
jns
out
ds
or
out
pop
sbb
mov
out
mov
hlt
sub
neg
mov
mov
idivb
loopne
test
fs
inc
sbb
mov
mov
jl
and
push
mov
inc
push
addr16
and
or
fdivrl
insl
cmp
dec
mov
cmpsl
add
xchg
jbe
jb
int3
hlt
mov
test
scas
mov
adc
or
mov
jp
push
addl
inc
nop
into
outsl
lcall
mov
xchg
ss
sub
add
and
test
dec
xlat
imul
add
test
push
xchg
adc
adc
lcall
and
out
pop
jp
sahf
push
in
mov
cmpsl
add
insb
leave
push
sbb
xlat
mov
stos
push
faddp
jg
jo
mov
dec
lods
cli
dec
scas
test
add
enter
lcall
or
xchg
inc
mov
mov
sub
sub
pop
loop
jmp
je
fnstsw
fdivrs
and
push
cli
stos
push
cmpl
cli
mov
cmp
cli
xor
mov
es
aad
mov
call
push
daa
mov
or
mov
test
mov
push
into
bound
mov
xor
test
mov
adc
and
pusha
push
lret
xchg
ljmp
test
inc
fidivrs
push
adc
jo
dec
aas
out
daa
xor
inc
je
mov
push
pop
dec
dec
into
lahf
dec
lock
sahf
fldt
ljmp
fnstsw
xchg
pop
jo
ds
dec
mov
sbb
push
pop
ret
sbb
je
xchg
cltd
xchg
mov
or
pop
outsl
pop
mov
ret
and
imul
and
add
cmc
mov
cld
push
mov
or
fnstenv
hlt
loopne
loop
mov
movsl
adc
insb
sub
pop
fcoms
movlhps
insl
inc
shll
fdivrs
int
enter
and
gs
lds
mov
and
lock
push
fcompl
lea
mov
pop
lahf
mov
add
sbb
xchg
xor
add
jecxz
add
sub
stos
outsl
cltd
push
out
repz
call
scas
mov
push
sarl
lret
ret
mov
add
push
jne
ja
cmp
mov
fisttpl
stc
pop
fsubs
shrl
xorb
lahf
mov
jmp
jge
loope
sbb
loop
aad
mov
sbb
mov
pop
out
adc
pop
sti
pusha
and
or
jle
lahf
repnz
fiaddl
cmpsl
push
out
adc
sbb
xor
inc
adc
jle
or
std
int
xlat
add
in
stos
mov
mov
xor
dec
enter
mov
sub
mov
sbb
pop
push
inc
xchg
mov
mov
rcr
pushf
cmpsl
ss
jecxz
fistpl
and
cmp
dec
out
push
jb
push
scas
frstor
mov
pop
and
mov
ficomps
ret
popf
mov
inc
push
cltd
call
push
hlt
out
mov
adc
adc
mov
mov
and
mov
scas
clc
js
xor
repnz
outsb
cmp
dec
jns
sub
inc
movswl
es
and
push
sbb
lods
mov
xlat
das
ja
sub
cli
fnstcw
xor
fs
mov
push
add
in
jnp
inc
cmpsb
cmpsl
loop
adc
sbb
xchg
adc
xchg
movsl
sarl
pop
fs
fistpll
shrl
jle
scas
call
jge
in
movsb
cmp
clc
xchg
push
mov
movsb
xor
xchg
in
push
sahf
fstps
bound
xor
inc
jbe
fs
shr
mov
sub
into
jne
jl
shlb
mov
push
arpl
imul
sub
cwtl
insl
cmpsb
aam
into
movsb
dec
or
fisttpll
stc
decb
in
mov
and
sarl
cmpsb
jp
add
dec
cmp
idivl
or
es
mov
aas
movsb
fwait
mov
nop
ljmp
add
and
add
into
inc
mov
in
adc
mov
mov
and
inc
or
stc
mov
pop
push
pop
gs
mov
jbe
jle
push
stos
mov
sti
sbb
rclb
sbb
jb
ja
mov
out
jbe
addr16
inc
pop
scas
ret
jae
mov
push
loope
jle
pop
out
cmp
xor
fcomip
into
sti
mov
dec
dec
les
cmp
lret
adcb
addr16
pop
xchg
scas
pop
stos
popf
call
pusha
and
ret
scas
or
jl
pop
shll
dec
mov
cmp
roll
fnstenv
ret
stc
lods
sbb
xchg
gs
xlat
bound
popf
loope
ret
sub
adc
or
xor
mov
fidivs
je
jle
pop
mov
mov
testl
aaa
or
stos
and
xchg
xor
neg
and
lea
or
fcomi
mov
ljmp
dec
pop
mov
xor
sub
push
fsubl
lock
std
movsb
add
pop
dec
outsb
xchg
push
aas
or
jno
lods
ret
test
ds
mov
ret
repnz
sti
inc
push
cmc
ror
sbb
lahf
or
stc
mov
ss
enter
icebp
outsl
cmpsb
jno
in
mov
fucomip
or
rcr
xchg
icebp
push
sub
pop
pslld
jb
push
mov
inc
inc
sahf
push
out
jecxz
mov
mov
fldl
or
mov
lret
outsl
fisttpll
xchg
lcall
inc
and
push
mov
fisubl
pop
in
mov
fisubrl
loope
sbb
inc
pop
lahf
stc
xor
outsl
push
iret
pop
cmp
pop
pop
or
jbe
aaa
mov
or
fiaddl
sbb
jb
fwait
jmp
xchg
push
xor
dec
dec
loopne
cld
mov
mov
fdivs
in
nop
ds
xor
pop
inc
pop
add
sbb
push
lea
cmpsb
mov
fiadds
ret
testl
mov
xchg
sbb
test
inc
adc
cmp
inc
mov
fsubs
cld
lea
lods
cwtl
pop
rorb
lock
push
inc
xor
adc
movl
mov
nop
enter
int
mov
inc
das
xor
push
scas
stos
pop
insl
xchg
jno
xchg
jns
nop
mov
popf
and
fdivrs
ret
jo
cmp
in
sub
loope
mov
fisubs
jae
mov
jo
ja
pop
push
xlat
xchg
das
mov
movsb
and
push
lods
outsb
jle
daa
divb
cmp
fiaddl
mov
push
cwtl
out
in
fdivl
sub
les
arpl
cltd
mov
mov
mov
xor
xchg
jle
xchg
push
lods
sbb
movsl
xchg
bound
xorb
inc
pop
sub
fld
fcmovnb
aam
cmpsl
jge
xorl
dec
cmp
into
add
push
xchg
inc
cmc
arpl
lea
xor
inc
fdivrl
mov
arpl
in
lock
imul
mov
jb
ret
pushf
in
inc
and
in
pop
sub
xor
dec
sbb
sahf
pop
shl
dec
sub
push
jp
les
lret
cmp
pop
lcall
jne
pop
cltd
cwtl
hlt
test
lods
in
insl
jmp
loopne
mov
sbb
mov
cmc
out
aaa
xor
scas
out
jg
jb
inc
loop
cmp
movsb
mov
mov
or
mov
scas
add
and
jb
frstor
jno
mov
out
push
and
fdivrs
add
jle
mov
push
dec
repnz
out
out
jg
or
push
loopne
je
xchg
mov
inc
daa
mov
outsl
cmp
repz
xlat
imul
xor
mov
es
clc
arpl
or
in
in
and
ss
fistpl
sbb
imul
imul
dec
in
pop
push
jo
leave
xlat
sub
daa
pop
sbb
outsl
es
popa
push
jne
inc
mov
stos
cmpsb
push
add
xchg
das
imul
xchg
mov
jmp
gs
std
cmp
adc
scas
icebp
mov
or
in
push
cltd
pop
imull
loope
repz
push
lcall
faddl
ds
in
cs
push
jecxz
aaa
cld
push
cmc
out
pop
add
inc
in
shlb
or
xor
jnp
push
push
mov
cmpsb
fcmovu
push
cltd
ret
push
adc
dec
mov
lahf
xor
int3
pop
inc
insb
fmulp
and
movb
or
lcall
lcall
jp
pop
jae
inc
into
mov
push
push
xchg
std
add
arpl
rcll
addr16
adc
test
ljmp
add
jne
mov
dec
mov
mov
cwtl
mov
pop
jbe
popa
xchg
js
mov
adc
std
lret
cld
lods
cld
add
lods
dec
out
jle
daa
fwait
lea
adc
lods
cld
insl
fisttpll
mov
test
shl
cs
ja
dec
inc
das
mov
push
mov
je
fisttpl
lret
pop
xchg
stc
mov
jnp
aaa
sbb
cmpsl
mov
ljmp
mov
hlt
cmp
cmp
adc
repnz
jle
fdivrs
aaa
ret
adcl
mov
or
divb
addl
std
add
xorb
iret
ljmp
out
sbb
jmp
or
add
mov
or
add
sbb
in
adc
rcll
gs
inc
leave
cmp
and
xor
xor
pop
movsb
fs
cltd
jecxz
sub
pop
xor
jae
mov
lea
jle
pop
sbb
insl
lahf
mov
mov
pushf
sbb
icebp
out
movsl
mov
push
pop
cmp
iret
jae
insb
punpckldq
ret
mov
jne
loop
lret
cld
insb
jecxz
fiaddl
mov
ja
or
pop
clc
loope
das
and
jg
xchg
sub
xor
sbb
fcompl
pusha
and
mov
jnp
mov
dec
mov
xchg
cmp
jle
push
push
mov
xor
popf
mov
aas
inc
dec
or
push
dec
jmp
sub
vmovups
dec
cltd
add
imul
xor
imulb
pop
xchg
jno
in
xchg
inc
pop
or
push
mov
jb
inc
loopne
popa
xor
test
enter
pop
int
pop
call
pop
rcrb
scas
fiadds
xchg
rorb
sub
inc
jp
fisubrs
shl
pusha
icebp
xor
pop
js
inc
push
inc
sub
sub
mov
lock
rorb
enter
add
cmp
push
cmpb
sbb
xchg
lock
test
add
cmp
xchg
mov
xchg
xchg
sbb
clc
icebp
in
iret
and
popf
mov
hlt
mov
xor
roll
lahf
fdivs
jo
fwait
insl
hlt
inc
inc
and
fldl
aam
shr
cmp
test
mov
pop
sbb
push
jne
js
mov
xchg
push
dec
xor
imul
or
cld
loopne
jnp
pop
leave
mov
mov
cli
push
into
push
mov
push
jno
cmp
hlt
out
and
lret
in
aad
dec
mov
push
push
pop
das
xor
sbb
inc
xchg
decl
sub
cmpsl
adc
cmp
aam
outsl
lods
mov
mov
je
scas
jae
clc
inc
pop
test
cmp
push
int
int
dec
shlb
xchg
repnz
sbb
push
push
mov
jo
xchg
test
xor
or
mov
mov
cs
xchg
lock
mov
repz
in
xchg
pop
ss
mov
ljmp
inc
jno
daa
xchg
movsl
pop
shrb
adc
or
scas
sar
pop
cs
inc
shll
es
sub
xor
imul
lcall
addr16
pop
push
js
push
mov
xchg
movsl
outsb
sub
je
jnp
mov
xchg
or
inc
jg
lods
push
ret
jge
jae
shll
sti
jmp
cli
repnz
sub
or
or
gs
mov
and
lret
push
loop
inc
push
pop
inc
pop
mov
inc
add
shr
add
pop
push
data16
dec
sub
jnp
add
pop
add
sar
sub
fcmove
dec
pusha
aad
loop
notl
mov
dec
jae
fxch
and
outsl
leave
sub
lret
mov
xchg
xchg
lcall
xor
call
dec
mov
ds
inc
mov
fwait
dec
add
insl
pop
and
lds
popf
xchg
adc
int
xchg
ss
sub
mov
xchg
mov
and
pop
int3
sti
push
in
xor
xchg
je
fcoml
mov
sbb
test
or
jecxz
inc
pop
mov
outsb
imul
inc
mov
in
mov
xchg
lds
mov
cwtl
sub
mov
fmuls
mov
add
push
es
jne
cmp
mov
jbe
ret
inc
dec
jae
mov
xchg
lock
jbe
cwtl
inc
daa
sub
lahf
stos
insl
in
in
lock
xchg
adc
ljmp
clc
test
stc
cmp
cmp
rcll
pop
mov
testb
and
cs
lea
add
jl
clc
adc
fcoml
test
xchg
mov
rorb
push
cli
cmc
nop
xchg
adc
fs
push
jmp
inc
addr16
out
outsb
pop
stos
pop
xchg
sbbb
shlb
sarl
dec
repz
rorb
xor
xchg
mov
inc
xor
dec
mov
fs
jmp
mov
clc
xor
xchg
xchg
xor
add
push
pop
push
push
repz
adc
ret
les
fistps
imul
or
pusha
jno
jp
and
fiadds
into
xor
and
out
fdivr
jne
cmp
out
stos
adc
push
push
ret
std
xor
test
and
loop
xor
cmp
xchg
inc
mov
xchg
rcrl
mov
sub
inc
adcl
adc
shlb
pop
js
add
cmp
adc
orb
ret
cli
adc
imul
adc
cltd
mov
fbstp
sub
or
xchg
or
cwtl
rorb
push
cs
iret
cmp
ret
sbb
add
push
jl
ret
and
cli
xor
daa
sbbb
lock
xchg
jb
imul
push
xchg
mov
push
jle
and
xchg
int
movsl
int
pop
mov
xchg
xor
jmp
mov
add
cmpsl
inc
pop
shlb
outsb
std
jp
mov
aam
repz
sarl
adc
inc
xor
not
push
mov
xchg
std
leave
inc
add
shll
stos
dec
loope
add
icebp
scas
pop
das
adc
sbb
insb
push
nop
mov
unpckhps
cltd
mov
push
testb
test
cmp
fstpt
ret
arpl
aam
pop
jbe
loope
xchg
xor
mov
adc
xor
mul
out
addb
in
dec
fmul
fistl
or
adcl
mov
mov
mov
cmpb
pop
cmp
jnp
jne
sbb
pop
and
mov
inc
sub
adc
loop
neg
iret
aaa
roll
cmp
leave
aad
push
jnp
jns
sahf
cmpsl
mov
cmp
mov
nop
repz
loopne
mov
sbb
xchg
sti
test
jp
mov
leave
or
ljmp
push
je
loop
push
xor
scas
shrb
mov
pop
ss
pop
cmp
ds
pop
scas
adc
in
adc
pop
adc
xchg
dec
cmp
sub
inc
shrb
out
std
ss
test
pop
int
cmp
ret
int
out
lret
lret
lods
push
rcrb
inc
hlt
xchg
mov
pop
push
add
mov
mov
gs
push
push
pop
xor
jo
push
mov
jmp
test
popf
xor
add
sub
xor
mov
out
mov
or
scas
punpcklwd
lret
rcl
cmp
mov
add
stos
push
js
and
adc
inc
adc
pop
fadd
hlt
js
cmp
jge
std
hlt
scas
mov
sbb
dec
mov
sbb
xlat
cwtl
pop
add
shlb
mov
dec
jo
aaa
push
xor
inc
pop
loop
sbb
imul
daa
mov
daa
fs
dec
cwtl
jns
ja
or
dec
rorb
call
add
pop
mov
or
out
lret
mov
out
jae
loope
cmp
push
or
loope
mov
mov
in
sbb
popf
ret
xchg
or
jp
loope
mov
dec
mov
mov
cmp
and
mov
mov
rcll
mov
inc
out
cmpsb
movsb
xor
pop
push
sub
jp
les
pop
data16
sahf
add
into
ret
mov
mov
jne
cmpsl
pop
add
lret
pop
fwait
inc
pushf
int
in
cmp
iret
xlat
popa
jl
add
mov
aam
pop
jo
addr16
je
mov
addr16
push
sbb
out
sbb
imul
pcmpeqd
dec
lcall
push
iret
ret
outsl
aam
test
mov
in
xchg
inc
mov
sarb
fs
sbb
xorb
pop
adc
xchg
mov
pop
sub
sbb
pushf
clc
fists
sarb
pop
push
jo
rcrb
inc
or
push
add
cwtl
dec
daa
push
adc
or
adc
add
xchg
inc
mov
add
dec
nop
nop
xor
fisubrs
out
mov
sbb
jg
xchg
sti
add
or
mov
mov
test
cld
ret
out
sub
fwait
lret
jp
mov
lret
pop
in
lods
cwtl
repnz
push
mov
cmp
xchg
hlt
fsts
das
and
inc
mov
cmpl
mov
sahf
mov
arpl
mov
dec
cmp
sar
push
mov
out
je
aas
and
adc
lret
lret
ljmp
push
mov
mov
sbb
pushf
mov
or
xchg
sbb
sbb
jle
mov
add
adc
nop
mov
loope
pusha
cwtl
pop
push
jp
repnz
cmpsl
mov
fisubrs
add
xor
mov
push
int
jl
es
mov
sub
cmp
cld
and
adcb
stc
sbb
maxps
adcl
call
pop
push
jg
cs
mov
or
das
lcall
xchg
outsb
imul
add
stos
jo
decb
test
jns
fldl2e
jnp
pop
sbb
bound
mov
nop
out
cmp
sub
ret
sbb
scas
ret
inc
pop
jmp
pop
push
rcrl
cltd
movsl
in
inc
push
int
ret
pop
mov
pop
adc
xchg
push
sbb
leave
popa
jle
xchg
je
mov
sahf
inc
mov
scas
jecxz
cmpsb
xorl
inc
inc
pop
and
daa
test
inc
lea
cmpsl
cmpsl
sahf
addl
loope
push
fdivrp
test
sub
mov
pop
cmpsb
shl
pusha
aas
nop
popf
mov
jo
gs
insb
jp
bound
andl
ret
testb
int3
sbb
xchg
mov
orl
jl
jne
test
jns
mov
fimuls
notl
dec
push
sbb
jmp
std
popf
out
jbe
sbb
pop
push
imul
call
popf
inc
add
scas
jp
xchg
mov
xor
pop
xor
mov
out
mov
lods
mov
dec
sbb
cmp
mov
push
gs
sbb
inc
aas
or
push
adc
mov
subl
popa
xor
sbb
lahf
in
pop
cmp
adc
pop
shlb
cltd
je
or
lahf
es
addr16
sub
inc
iret
nop
sub
xor
fcompl
inc
daa
jl
sti
push
shlb
inc
jmp
mov
mov
xchg
loop
test
xor
insl
aam
sti
lods
push
pop
jmp
sti
mov
jge
ficompl
sbb
test
lock
push
stos
movsb
pop
xchg
inc
rclb
daa
xor
test
cmp
and
sub
std
sbb
faddl
pop
out
add
ret
push
push
or
insb
inc
sub
movsl
xchg
cmc
xor
pop
negl
jmp
mov
sbb
int
adc
xor
dec
out
inc
adc
fsubr
cli
popa
pop
inc
vxorps
iret
or
push
insl
fwait
repz
dec
dec
scas
in
pushl
inc
arpl
stos
cmp
test
into
or
pop
cwtl
push
data16
sbb
inc
ds
in
pop
std
cwtl
xor
jne
mov
lock
subb
pushf
cltd
add
ret
xchg
je
fwait
inc
leave
in
push
xlat
xor
add
xchg
mov
repnz
dec
es
sbb
add
inc
inc
and
jae
and
sarl
out
aaa
in
les
jl
daa
inc
push
jecxz
stos
push
popa
or
adc
lahf
adc
jno
jge
jg
test
cmp
sti
mov
fimuls
and
sub
inc
jb
pop
inc
mov
test
xchg
and
lds
or
mov
and
shll
lret
cmp
popf
and
movsb
inc
ss
adcl
dec
sub
lret
andl
movsb
and
aaa
add
cmp
add
or
mov
lret
sbb
or
push
dec
outsl
stc
ss
and
xlat
and
mov
mov
cmpsl
js
pop
pop
sbb
scas
inc
pop
push
sbb
stos
test
ret
in
push
shlb
xchg
cmpsb
imul
stos
cmp
out
or
cwtl
jp
xor
call
push
inc
dec
mov
out
mov
pop
cmp
ljmp
insb
inc
loop
pop
cmp
sub
or
jmp
rcrb
and
jecxz
not
add
enter
cs
sti
fstpl
testb
loopne
orb
mov
mov
fiadds
stc
repnz
daa
mov
jmp
scas
je
ss
test
cmpsl
cmp
hlt
push
jg
loope
xor
movsl
dec
mov
dec
clc
xchg
ds
int
incl
push
dec
sbb
sbb
xlat
gs
cs
andb
pop
jne
lock
test
mov
sbb
push
sub
sbb
lret
push
adc
adc
cmp
and
xor
movsl
lds
xor
mov
xor
popa
lea
add
xchg
popf
cwtl
icebp
test
sbb
mov
pop
ja
imul
pop
mov
repz
xchg
push
mov
or
sbb
cmc
mov
adc
or
push
xchg
push
sbb
and
sub
dec
dec
fstpt
fstps
and
jo
rol
pop
stos
adc
orl
int3
adc
mov
loope
lock
insb
insb
movsl
jae
stos
jae
in
jmp
repnz
jns
cmp
dec
mull
decb
sarb
pop
sub
pop
xchg
popf
in
imul
jae
push
pop
mov
stos
frstor
dec
int3
dec
gs
sub
sbb
pop
and
and
mov
popa
data16
and
test
jmp
dec
xor
push
cmpsb
test
outsl
jmp
insb
imul
jae
inc
cld
sbb
push
cltd
mov
imul
daa
mov
lds
lahf
xchg
sbb
das
and
mov
sbb
push
fiaddl
add
rcr
std
and
dec
jg
or
scas
and
fninit
push
push
loop
rep
stos
mov
lea
popa
bound
mov
mov
pop
mov
pop
cmp
rcll
je
jnp
sbb
or
aam
xor
xor
sub
test
lret
xchg
in
jl
xchg
fsubl
mov
xchg
movsb
lods
cmpsl
inc
mov
test
sub
or
and
cltd
or
jne
xor
pop
out
mov
shrl
fcompl
add
mov
loope
or
test
add
and
xchg
xchg
sub
mov
and
cmp
mov
lret
ja
or
mov
dec
movsl
shlb
fisubrl
sbb
mov
adc
stc
bsr
pusha
sub
mov
adc
xor
push
push
inc
in
vmaxss
sbbl
andb
mov
ds
cmp
jle
sti
cs
sarl
outsb
outsb
loopne
cltd
xchg
inc
shlb
jg
xor
cltd
jecxz
mov
xchg
dec
cmpsb
test
xchg
int3
mov
mov
jo
jle
xor
stos
andb
and
fsubs
xor
enter
adc
js
sbb
mov
push
neg
sub
adc
ret
dec
das
mov
push
push
fcomp
jmp
jns
mov
call
inc
mov
mov
insl
stos
mov
xor
mov
pop
dec
clc
xchg
fldcw
jl
pop
out
push
sub
xchg
fimull
xlat
roll
pop
lcall
stc
jns
mov
xchg
mov
or
push
iret
xor
dec
stos
andb
imul
add
cs
dec
xchg
sub
fnstcw
les
adc
dec
inc
sub
scas
mov
jae
mov
mov
int3
mov
xchg
sbb
out
mov
aas
test
mov
pop
mov
pop
dec
into
push
shl
xor
mov
sbb
cld
xchg
xor
mov
addr16
aam
ds
jp
and
insb
and
fcoms
hlt
inc
jl
xor
out
mulb
movb
push
xchg
push
movsl
pop
shlb
xchg
mov
pminub
jl
into
in
inc
cmpsl
ljmp
call
mov
jmp
movsb
subl
sbb
shrb
sbb
dec
outsb
xchg
dec
ja
fldl
lret
jo
test
into
jecxz
das
and
xor
clc
mov
and
and
mov
or
mov
repnz
add
sbb
lahf
jne
jle
stos
push
sub
xchg
cwtl
popf
loopne
push
test
sbb
pop
jo
repz
push
shlb
inc
es
pop
jg
loop
std
xchg
xchg
ret
cs
pusha
bound
jmp
inc
rcr
bound
clc
hlt
mov
add
push
ret
and
nop
ret
leave
adc
sahf
jmp
xchg
cmp
outsl
ret
gs
adc
jecxz
jp
xor
fcomp
push
mov
insl
sub
jb
cmpsb
inc
xchg
xchg
xchg
mov
push
mov
inc
nop
push
cmp
nop
hlt
sbb
add
outsl
mov
mov
cmp
push
icebp
xchg
adc
adc
inc
in
daa
add
sbb
inc
and
push
int3
sbb
inc
sbb
lock
test
xor
out
dec
sbb
daa
iret
nop
mov
outsl
in
pop
or
clc
cmp
mov
cltd
sbb
das
std
pop
push
xchg
repz
jg
pop
shrb
fidivl
mov
in
movsb
inc
add
lds
mov
or
out
inc
push
sbb
ljmp
dec
leave
aam
xchg
pop
imull
or
rcrb
adc
and
sbb
cmpsl
jne
pop
push
stc
cmp
shrl
xchg
sbb
movsl
cmc
mov
or
ja
dec
push
xlat
scas
pop
jg
mov
dec
mov
lods
push
add
jmp
das
je
test
pop
rorb
aas
mov
sbb
mov
bound
movsl
mov
inc
loopne
stos
scas
shlb
push
mov
adc
sub
adc
and
push
sub
sbb
mov
js
and
adc
cmp
test
icebp
rcrl
repnz
mov
xchg
dec
fistpll
js
outsl
jecxz
pop
jns
arpl
jne
addr16
dec
movsl
out
dec
xchg
dec
lret
cli
push
mov
shlb
cmpsl
lods
jl
add
hlt
int
nop
sub
bound
pushf
repz
call
shl
ret
jb
insl
int3
or
jb
lock
add
fidivl
jmp
or
xchg
mov
ror
xchg
cmpsb
xchg
push
sub
add
sbb
iret
test
mov
cmp
aam
out
pusha
mov
mov
fldt
in
gs
pusha
sbbb
inc
or
pop
sar
fbstp
test
stos
pushf
mov
fs
icebp
mov
sub
pop
insb
inc
jge
xor
mov
jecxz
mov
push
shll
push
enter
out
pop
adc
pop
mov
pop
hlt
xchg
cmpsl
pop
les
ljmp
mov
fldt
out
fbstp
sbb
mov
cltd
movsl
incb
clc
and
dec
push
jo
jne
push
add
int3
std
loope
add
lret
lods
test
xor
ret
pop
sbb
push
push
mov
jecxz
or
cwtl
sub
mov
mov
cld
push
jo
xor
sbb
mov
sbb
insl
mov
xor
in
ss
dec
mov
inc
jae
nop
aas
mov
out
mov
push
lret
push
mov
lea
inc
icebp
add
cmp
adc
or
mov
dec
dec
rcrl
je
fldenv
jbe
sarl
ficoml
cmp
clc
xchg
cmpsl
emms
out
js
ret
fstpt
sub
popf
push
imul
in
add
jbe
inc
mov
loope
dec
mov
mov
mov
adc
inc
test
dec
int3
sahf
push
outsl
pop
ja
dec
xchg
mov
mov
or
mov
rol
pop
fwait
jp
test
mov
jnp
cmpsb
jno
dec
mov
or
jp
repz
dec
insb
adc
dec
repz
jp
or
adc
dec
pusha
pusha
loop
dec
into
or
xchg
cmp
call
xchg
and
lcall
cmp
mov
adc
cmp
mov
loope
jne
gs
jno
std
pop
inc
lods
hlt
loop
push
arpl
dec
shlb
insb
ret
sti
mov
adc
sub
and
adc
cli
inc
cli
jns
jle
outsl
dec
cmpsl
out
sbb
sub
ffreep
aam
bound
cmp
and
dec
or
push
xor
mov
and
pop
add
mov
add
cmp
jecxz
push
xor
jp
pop
xchg
or
shlb
push
lcall
fsubs
sti
cltd
inc
movsb
sub
push
dec
adc
cs
pop
adc
int
mov
xchg
dec
fstpl
push
xchg
ror
int
aad
fdivs
dec
out
jg
cmc
mov
add
stos
dec
stc
aad
cmovg
mov
in
cmp
lods
sub
fwait
and
add
pop
in
mov
lcall
mov
xchg
movb
cmp
sarl
inc
lds
sub
cmpsb
addl
ljmp
cmp
and
test
push
int
sub
shrb
dec
imul
xor
jecxz
pop
push
sbb
mov
cld
xchg
outsl
cmp
data16
int
jnp
inc
pop
out
mov
xchg
aam
pusha
jecxz
cmp
adc
sbb
jb
dec
pop
out
cmpsl
arpl
xchg
dec
dec
iret
and
cmp
out
arpl
movsl
ret
in
outsb
pop
or
xor
sub
or
mov
xchg
cltd
jne
pop
shll
lods
in
and
add
jecxz
call
stc
add
mov
add
lea
cld
lcall
push
or
and
or
data16
add
lahf
cmp
add
icebp
in
insl
and
pop
mov
xchg
out
sub
mov
cmp
and
push
sbb
frstor
and
dec
xlat
mov
daa
rcrl
sbb
inc
addr16
sbb
pop
arpl
or
pop
icebp
xchg
ret
fs
shrb
cmp
imul
cmpl
mov
lcall
out
insb
cmp
jne
mov
xlat
leave
jo
mov
adc
loopne
cmp
enter
push
mov
mov
lcall
js
cli
icebp
lret
inc
pop
mov
jbe
push
enter
push
jp
pop
sub
jnp
push
cli
and
stos
stc
ret
pop
insb
pop
pop
lret
xor
insl
inc
arpl
and
push
ret
jmp
mov
ret
push
xor
xchg
mov
sbb
sub
fdivrl
lahf
fldenv
out
push
mov
aam
adc
mov
lret
sub
push
pop
ljmp
fisubrl
insl
rorb
addr16
pop
mov
stc
lods
cwtl
lea
lea
stos
pushf
dec
or
push
in
inc
loop
jecxz
inc
add
shlb
cmpsb
push
out
mov
inc
dec
loop
pop
push
ja
repnz
push
jb
mov
jnp
fstpl
or
notl
pop
lcall
push
mov
rcll
pop
xor
or
mov
and
push
out
aaa
and
loope
std
jmp
push
and
aas
jnp
xchg
es
or
cmpl
test
xlat
mov
cmc
dec
xor
or
repz
jno
pop
cmp
sub
je
repnz
mov
fidivrl
cs
adc
or
push
orb
icebp
adc
mov
ss
or
in
push
and
cld
fisttpl
dec
and
aas
pop
rcr
push
iret
dec
jbe
dec
mov
fadd
mov
xchg
hlt
push
mov
aaa
pop
pop
adc
loope
push
aad
gs
pop
nop
cmp
jb,pt
out
fistl
test
cmp
fstps
xlat
inc
shlb
xchg
xlat
sub
xor
shll
push
mov
jne
lcall
cmc
push
inc
jnp
sub
cwtl
or
xor
pop
repnz
inc
imul
mov
xor
jge
xorl
pop
in
lcall
mov
jae
mov
data16
sbb
sub
fs
cwtl
sub
xor
mov
mov
std
xchg
aad
jnp
jne
movsl
fs
push
lcall
sub
and
nop
es
add
ja
js
sub
ret
mov
fstp
jmp
test
int3
or
addr16
leave
fs
or
shlb
mov
jns
fsub
inc
arpl
push
aaa
fidivs
lods
dec
cmp
adc
es
int
xchg
push
shll
nop
in
ja
mov
dec
xchg
xchg
jmp
test
popf
push
in
jae
cmp
lock
jg,pn
je
pop
inc
enter
jle
jno
and
fiaddl
movsl
or
fidivrl
xor
addl
ficoml
outsb
adc
inc
xchg
dec
test
cli
xchg
or
add
mov
mov
fs
jno
sbb
shl
inc
xlat
sbb
jno
mov
loope
sub
cmp
jp
add
out
adc
test
out
cmpsl
loop
imul
and
nop
rolb
insl
push
pop
test
cmpb
outsb
paddsb
and
sbb
insl
out
pop
insl
sub
imul
shl
inc
into
xor
mov
es
inc
xchg
cmp
mov
fistl
les
mov
mov
xchg
jge
adc
ss
push
mov
jns
xor
in
test
jle
mov
mov
push
sub
push
stos
insl
mov
and
jecxz
cmpsl
xor
add
adc
test
aas
jmp
mov
in
mov
fwait
add
pop
das
mov
xor
out
loope
mov
and
xchg
jns
mov
outsl
and
sahf
jmp
inc
jae
int3
mov
adc
test
std
cmp
loop
dec
push
jbe
ret
cmpsl
inc
std
add
jnp
pop
lods
push
sub
inc
push
lods
pop
lods
pop
adc
int3
mov
push
pop
fcmovnb
or
jmp
fimuls
rolb
fwait
sub
aad
xor
jle
test
fsub
sub
shll
lret
mov
ds
push
jns
pusha
pop
xchg
insl
pop
mov
add
loop
pushf
dec
test
stos
scas
cmp
mov
fwait
aaa
lods
jnp
test
jecxz
inc
xor
mov
adc
sbb
call
cmc
fstl
int3
fidivrl
adc
ret
sub
pop
daa
pop
cs
lods
sbb
bound
cmp
mov
je
cmpsb
fstps
pop
rcll
adc
adc
sub
xchg
cmp
mov
inc
ret
push
jnp
daa
push
in
shll
lldt
call
data16
subb
lret
adc
xchg
push
add
cmp
shlb
inc
jne
add
les
add
mov
adc
pusha
jecxz
push
jl
push
repnz
shlb
je
add
loopne
fimull
mov
inc
jae
dec
inc
fs
data16
xchg
popa
ja
push
mov
fisubs
jl
jno
faddl
shlb
jg
jmp
fcompp
ljmp
lahf
andb
pop
xchg
das
fs
ret
lret
hlt
jl
clc
jnp
mov
push
in
cltd
xor
adc
push
pop
mov
repnz
sbb
gs
xlat
rclb
push
popf
mov
mov
xor
ja
mov
dec
jp
nop
push
ficoml
aam
adcl
test
mov
scas
inc
mov
mov
fildll
lock
ret
shrb
mov
pop
lock
cmp
lock
xchg
ficomps
inc
loop
mov
mov
push
in
jae
pop
aam
test
pop
and
cmp
and
pop
shlb
pop
and
dec
mov
icebp
mov
xor
sub
mov
mov
add
ror
negb
in
cmp
mov
je
add
dec
dec
add
cli
pop
sbb
iret
fldl
movsb
mov
jge
lret
inc
mov
inc
or
or
stc
aas
jle
or
pop
out
rol
ret
and
pop
out
inc
sti
push
sarb
test
sti
idivl
lret
lods
push
rcr
outsl
mov
jp
int
jo
int
or
adc
mov
mov
in
ljmp
jbe
jl
xor
inc
pop
dec
jg
dec
lret
push
and
fadd
out
test
dec
iret
cld
and
enter
push
repz
inc
pop
out
out
push
sbb
jns
lds
aas
and
out
movsb
incl
mov
inc
and
dec
insb
ss
mov
sbb
nop
xor
inc
pop
cmp
imul
add
mov
andl
cmp
and
dec
gs
adc
or
ljmp
lods
call
scas
push
mov
sub
cmp
mov
or
jbe
jge
movsl
mov
push
andb
push
xchg
int3
push
dec
inc
xchg
lcall
inc
and
cmpsl
mov
mov
test
mov
xchg
lock
xor
lods
insl
imul
mov
out
int
aaa
sub
in
test
xchg
je
nop
xor
test
push
sbb
or
jmp
adc
push
sbb
arpl
push
cli
cmp
ja
mov
sbb
mov
insl
mov
sti
xchg
push
xlat
push
shl
cld
orl
call
test
lret
jne
push
push
sbb
and
push
or
xchg
xchg
xor
mov
rcrb
lods
inc
mov
jne
jbe
jecxz
leave
ljmp
and
ds
jb
stos
cmp
lds
jae
pmaxsw
out
xchg
ficomps
cmp
jno
in
mov
addr16
xor
pusha
mov
xchg
dec
ret
add
mov
ret
add
mov
mov
sahf
ret
mov
test
loopne
add
sahf
and
dec
xchg
jns
xlat
sbbl
rorl
in
or
pop
jae
jg
xchg
movsb
jecxz
xor
cmp
aad
mov
jecxz
xchg
in
cmp
and
out
in
lods
xchg
cmp
pop
addr16
mov
push
dec
xchg
sbb
sbb
mov
sbbb
repnz
popa
inc
and
ja
and
xchg
adc
hlt
out
push
shll
xchg
mov
in
jp
mov
mov
mov
or
dec
or
lcall
lods
and
rcrl
mov
mov
fadd
dec
lea
xchg
inc
stc
cmovns
movd
lret
push
fs
inc
push
out
or
cwtl
mov
and
js
xor
out
hlt
cmp
inc
inc
xchg
fs
rcrl
xor
inc
movsl
cmp
push
push
outsb
cmpsl
das
inc
shrl
repnz
dec
add
shlb
pop
mov
outsl
sarb
gs
lods
repz
aam
add
sahf
stos
pop
inc
and
jle
dec
cmc
cmp
cmp
mov
or
imul
inc
dec
rorl
add
mov
ficoml
xchg
pusha
pop
fidivs
inc
aaa
repnz
push
enter
dec
adc
sub
into
sub
add
stc
push
les
aas
xor
aas
popf
jle
outsl
pop
jnp
xlat
push
jae
pop
xchg
mov
mov
mov
outsb
cmp
das
dec
mov
sub
dec
out
cmp
dec
enter
rcrb
stc
scas
inc
add
pusha
xor
cmp
jl
cmp
inc
stos
xor
or
xchg
or
sahf
jg
test
lret
sti
or
cvtpi2ps
jecxz
sbb
push
pop
pop
adc
ss
and
pop
pusha
xor
push
nop
mov
ret
add
imul
popa
ret
stc
sahf
jg
jg
insb
adc
cmp
jnp
int
or
pop
push
mov
cmpsb
subps
and
es
popa
in
ja
sub
adc
or
mov
loop
div
sti
jbe
cmp
add
jmp
ret
cmpsb
idivb
push
lods
dec
imul
scas
add
ret
icebp
lret
mov
add
movsl
insl
repnz
mov
jo
sub
iret
sbb
cmp
pop
jae
jecxz
imul
mov
xlat
jp,pt
adc
outsl
sub
mov
add
mov
loope
cmpsb
sub
add
jo
push
in
push
push
inc
push
in
sub
jmp
les
pop
push
ds
lods
rcrb
dec
cs
add
inc
les
lods
dec
jge
inc
loope
pop
mov
and
and
pop
sub
ret
push
test
pop
add
pop
sbb
and
jns
pop
lock
sbb
lret
lret
enter
add
ds
jb
inc
loope
test
dec
sahf
xchg
fmull
outsl
sbb
or
movsb
clc
inc
cltd
cmp
insb
cmp
mov
xor
sarb
out
pop
sub
out
and
dec
sbb
jg
push
and
pop
test
mov
and
std
call
sub
popa
or
subb
adc
test
out
stos
sub
push
push
test
jae
in
mov
cltd
add
dec
add
iret
iret
push
lret
aad
adc
addr16
ja
dec
xor
outsl
stos
test
imul
in
shlb
pop
dec
mov
jnp
ds
mov
test
aad
sti
xor
xchg
cmc
mov
loop
inc
push
nop
lods
jno
scas
out
xlat
lock
leave
frstor
cld
adc
arpl
mov
push
pushf
iret
cs
test
and
jmp
addb
add
in
inc
add
iret
cltd
mov
mov
jl
inc
xor
sbb
arpl
int3
or
repnz
aas
cmpsb
xor
roll
xor
mov
movsb
add
nop
je
sbb
stos
jno
sbb
idiv
data16
mov
mov
sti
imul
dec
dec
jp
jbe
xchg
outsl
inc
fdivl
aas
bound
nop
cmp
int3
mov
addb
sbb
pusha
es
xchg
sub
in
or
aas
mov
mov
dec
sbb
and
xor
sub
cld
pop
test
leave
es
xor
mov
andb
push
cwtl
mov
test
sub
adc
imul
mov
cmp
lret
insl
je
xchg
push
push
fsts
sarl
mov
aam
out
jmp
aas
xor
or
in
jno
dec
imul
repnz
inc
insb
or
roll
cmpl
test
into
mov
ljmp
adc
or
mov
inc
push
js
movzwl
cmp
ret
jle
push
adc
or
fxam
mov
js
ja
sub
push
sbb
mov
clc
pop
lcall
jg
out
divl
add
xor
push
test
cmp
jo
in
int3
fisubl
add
cmp
jg
sahf
or
outsb
push
icebp
ja
lea
push
sarl
add
xchg
inc
add
scas
aas
ja
push
fdivrp
cld
or
sti
xchg
ret
mov
jmp
xchg
adc
shlb
cs
mov
test
xchg
xchg
call
int3
stc
pop
jecxz
in
fdivrs
sti
pusha
mov
cli
rolb
in
dec
out
or
push
pop
jae
rcl
shrl
sti
aaa
mov
cli
fsin
cld
fistl
jae
lock
outsl
push
data16
pop
loop
sbb
xchg
add
in
sar
out
cmpsl
pop
or
fs
inc
push
dec
iret
sub
adc
out
adc
cwtl
aaa
cwtl
lds
xchg
movsl
xor
jl
mov
push
pop
push
mov
scas
scas
mov
call
gs
xchg
mov
push
loope
xor
dec
test
in
notb
cmp
cmp
fldt
and
pop
xor
inc
rcrb
adcl
or
out
repnz
push
icebp
pusha
js
mov
sub
mov
sbb
xchg
sahf
ret
adc
aas
inc
insb
push
xor
push
push
sbb
pop
lock
push
cmpb
lods
lds
mov
push
lods
jnp
shr
cmpsl
call
push
pop
inc
xchg
or
mov
subl
pop
dec
jo
aaa
jge
fdivrl
int
sub
pop
sarb
dec
mov
lods
adc
mov
call
ret
inc
or
ret
jmp
pop
mov
jbe
ret
out
mov
inc
and
testb
out
mov
xlat
je
or
push
inc
test
dec
push
test
stos
loopne
or
push
insl
sbb
adc
test
adc
out
dec
sub
mov
xor
xlat
out
out
add
es
mov
jnp
movq
sub
xchg
xor
sub
inc
jno
repnz
xchg
cltd
push
sub
mov
pop
mov
xchg
jl
sub
xchg
jbe
dec
jecxz
loope
clc
test
xor
jnp
dec
push
jmp
sbb
popa
inc
aaa
push
es
shrb
lea
or
jo
fimuls
out
push
pop
addr16
jno
out
div
outsl
in
mov
cmp
sub
sti
or
decl
outsl
movsb
popf
test
push
mov
inc
notb
adc
in
inc
loope
psrld
xchg
stos
cmp
movsb
aad
or
dec
mov
and
ljmp
jp
pop
mov
dec
lock
jae
adc
adc
jg
sbb
add
pop
test
in
mov
pop
dec
faddl
adc
sub
cmpsb
stos
clc
push
and
pop
dec
pop
sahf
mov
rcr
jmp
and
orl
adc
jne
push
xchg
pop
sub
push
xor
pushf
mov
loopne
sarl
adc
test
sbb
das
mov
xlat
les
jns
jge
push
inc
bound
add
fnstsw
test
mov
adc
arpl
mov
lret
mov
mov
lahf
out
shlb
addr16
or
inc
repz
push
and
cmpl
adc
pop
addb
dec
stos
inc
fstp
insl
int3
dec
xchg
xchg
fstl
jnp
in
add
pop
inc
out
gs
jle
lds
shl
mov
cmp
data16
aam
mov
cmp
push
or
hlt
popa
and
mov
mov
aad
pusha
es
pop
xchg
test
xlat
pop
jbe
mov
mov
insl
push
jae
lods
popf
test
mov
sub
jp
gs
pop
xchg
dec
dec
stc
jmp
push
pop
cltd
sbb
mov
sub
mov
test
outsb
lods
fidivs
icebp
sub
mov
pop
dec
pop
cmp
pop
cmp
aad
pop
shl
outsl
fdivrs
lahf
or
xchg
out
jnp
hlt
lcall
std
add
shll
js
jecxz
push
fidivrl
out
sti
in
imul
aam
mov
arpl
xor
xor
mov
lock
leave
out
push
jle
loop
xchg
inc
loop
mov
jae
fisubs
sub
or
subl
loopne
fwait
push
or
dec
hlt
dec
rep
and
lods
es
cmpb
xlat
test
stos
or
mov
daa
pop
loope
cmpsb
push
pop
inc
and
add
mov
js
gs
and
mov
push
mov
stos
ret
push
js
adc
je
cmp
cli
jo
leave
lea
hlt
inc
sbb
jbe
mov
mov
ficomps
inc
push
je
inc
roll
lds
mov
cmpsb
stos
cmp
xchg
arpl
into
jp
test
and
cmpsl
xchg
add
orb
jne
dec
inc
sti
dec
pop
or
dec
sarb
lahf
jno
add
mov
lret
and
pusha
push
inc
mov
mov
inc
push
iret
adc
cmp
rcll
push
dec
fildll
mov
inc
fwait
enter
cmp
lret
enter
call
push
mov
out
nop
lods
adc
add
mov
add
aas
or
mov
xor
dec
sub
inc
cmp
mov
push
lret
fstl
mov
pop
daa
addr16
in
mov
sbbl
arpl
iret
lcall
sbb
pop
addr16
mov
nop
adc
stos
arpl
imul
int
mov
add
adc
outsb
jge
hlt
jo
fdivr
mov
jae
insb
jbe
push
aas
in
lahf
xchg
push
push
sahf
or
mov
fadds
push
les
push
xor
adc
pop
xchg
aaa
movsb
inc
cmp
int3
push
xor
iret
scas
adc
int3
mov
mov
push
sahf
add
xchg
repz
movsb
outsb
dec
in
insb
loopne
cmp
bound
sbb
and
or
shl
into
or
sub
cmp
push
in
js
adc
cltd
sahf
lods
push
enter
pop
jmp
jle
test
andl
xchg
mov
ljmp
loope
lds
jae
loopne
sbb
imull
std
fwait
aas
repnz
shll
aad
adc
or
xchg
dec
fisttps
leave
popa
and
lods
sub
mov
hlt
add
pushf
xor
into
add
pop
xor
push
test
stos
add
test
nop
inc
jecxz
mov
jbe
xchg
sub
ja
pop
fidivs
inc
bound
mov
mov
jecxz
xchg
push
push
cmp
mov
imul
xor
int3
push
mov
sbb
daa
rolb
xorb
cmc
sbb
jae
push
mov
jb
testb
lcall
insl
cmp
rorb
test
loop
push
mov
cwtl
in
push
testb
jo
adc
fisttps
into
test
mov
pop
inc
cli
hlt
mov
shlb
and
stos
push
sub
in
xchg
popa
push
xchg
xor
and
cmp
jmp
call
pop
xor
inc
jns
popf
mov
fcoml
cwtl
scas
push
notb
push
and
mov
sub
xor
dec
xor
inc
aad
shlb
fwait
jle
cmp
jp
das
xor
mov
and
cmp
or
fwait
ljmp
movb
sbb
int3
fisttpl
test
push
lahf
xchg
or
mov
fidivs
add
xchg
xchg
enter
bound
das
or
sbb
loop
outsl
sbb
mov
pop
jmp
push
ss
test
andb
jb
mov
int3
test
arpl
adc
xchg
adc
push
notb
xchg
scas
scas
xchg
aad
jmp
movsb
popa
or
and
aad
dec
test
stc
jno
pop
arpl
popf
lods
cmp
rcl
sahf
add
subl
les
push
sub
dec
mov
pop
and
popf
xchg
sbb
stc
sbb
call
roll
popf
xchg
sub
dec
or
cltd
xor
pop
or
bound
cld
xchg
out
fstl
push
xor
xor
iret
mov
loop
push
mov
outsl
into
loope
push
mov
add
sub
and
dec
sti
popf
cmp
sub
stos
fistpl
and
lods
lret
adc
mov
mov
pop
cwtl
jecxz
call
adc
loope
mov
cmp
fstp
ret
push
mov
lods
je
xor
mov
push
jo
lods
fstpl
out
cli
gs
ret
inc
push
dec
in
mov
lods
psubb
cmpsl
sub
inc
adc
push
and
ljmp
and
sahf
inc
call
jge,pt
mov
xchg
clc
outsb
push
faddl
sub
pop
cmp
in
lods
jmp
sub
mov
and
pop
mov
xor
jo
pop
or
mov
jmp
out
and
jno
pop
out
dec
mov
xor
ret
and
push
adc
add
sti
das
mov
rcll
std
es
mov
ret
push
mov
adc
jle
addb
movsb
mov
imul
cltd
lahf
cmp
jo
popa
xor
daa
es
inc
sti
xor
mov
mov
xchg
fidivrl
jno
int3
loope
jle
out
mov
jb
stos
rcll
xor
imul
cwtl
xrelease
push
cmp
xor
sbb
inc
push
stos
xchg
cmp
mov
sbb
das
ret
xchg
iret
inc
in
ds
pop
es
stc
shrb
ss
add
push
rcrl
enter
pop
mov
xchg
icebp
cli
pop
popa
insl
push
jo
lret
fs
std
push
xor
sub
push
es
addl
cli
cmpsb
pushf
fnstsw
inc
imul
leave
clc
adc
lds
lret
sub
in
mov
sar
ljmp
ficomps
aas
xchg
push
aaa
ljmp
pop
and
inc
mov
xorl
jne
fsubl
inc
jnp
and
sahf
xchg
fadd
data16
stc
dec
dec
push
in
jbe
cmp
xchg
mov
cmp
movsb
sub
and
aas
push
iret
mov
stos
icebp
fbstp
and
outsb
test
daa
jmp
dec
xchg
adc
mov
inc
mov
ret
push
mov
ja
shlb
jnp
stos
jo
cmpsb
stc
adc
adc
dec
jo
dec
mov
ret
in
add
jle
inc
or
adc
ret
adc
out
packssdw
pushf
mov
mov
pop
add
lcall
mov
aad
ret
cmp
dec
dec
mov
fnstcw
dec
sub
mov
and
push
fstp
pop
shlb
pusha
and
ljmp
xchg
jae
sbb
sbb
pushw
sbb
icebp
ret
lret
out
stc
cmp
cmp
adc
gs
lahf
daa
xchg
loop
enter
sti
out
insl
fwait
stos
sbb
sarb
push
dec
fs
vpmaddwd
mov
mov
xlat
or
jo
rcr
mov
hlt
cs
je
sahf
popa
push
test
jnp
idiv
mov
add
mov
mul
dec
adcl
repnz
add
movsb
sahf
jns
addb
ret
pop
xor
fstl
sub
cmpsb
shll
cmp
jb
dec
iret
cmp
sub
pop
ror
dec
xchg
cmpsb
cli
sbb
ds
or
out
xlat
out
cmp
insb
shrb
movsl
pop
in
or
cmpsb
pop
lods
jle
xchg
add
inc
xlat
insl
fidivl
sub
mov
inc
orl
and
push
and
sbb
ljmp
fistps
dec
dec
aas
and
or
or
push
and
sub
fimuls
xor
xor
add
sub
mov
or
xchg
mov
cltd
outsl
push
sbb
pushf
adc
cmp
enter
and
inc
loopw
test
imulb
push
pop
add
fsubl
mov
xor
dec
lds
outsb
mov
mov
fs
pop
adc
imul
out
jl
cmpsb
and
mov
mov
xchg
cltd
in
inc
xor
pop
loopne
sub
jb
xchg
inc
jb
cmp
mov
loop
nop
xchg
cld
mov
mov
push
dec
scas
and
fisttpll
inc
and
lods
fiadds
insb
out
or
pushf
jmp
mov
nop
add
mov
outsl
push
shlb
in
mov
lea
xor
cli
rcrb
sbb
jmp
gs
fisubrs
shr
xor
je
mov
imul
jge
add
pop
rolb
sub
pop
cmp
dec
loopne
dec
hlt
adc
sbb
aad
dec
jb
aas
int3
xor
pop
pusha
push
jmp
rcll
mov
movsl
mov
es
stos
imul
pop
imul
sub
jecxz
jmp
sar
xchg
nop
inc
sti
and
lret
sub
xor
xchg
push
xchg
subb
adc
daa
jle
jge
inc
adc
xchg
adc
idivb
stc
ja
push
jge
shrb
sbb
xor
push
arpl
mov
cmp
add
bound
mov
cmp
sub
jae
inc
in
push
sbb
dec
ret
stos
in
sub
add
fs
add
cld
and
mov
xor
int3
je
add
lea
loopne
xor
xor
stc
xchg
mov
push
inc
out
mov
cwtl
push
clc
push
pop
mov
or
mov
inc
dec
cmp
je
pop
mov
mov
push
jle
ljmp
gs
nop
fs
pushf
gs
je
xchg
clc
les
cmp
mov
lods
xor
movsb
repnz
fnstsw
jle
jmp
ss
fdiv
mov
xor
inc
jb
shld
push
xor
cmp
mov
jbe
xor
push
dec
mov
xor
mov
dec
rcrl
mov
jns
aad
addl
and
pop
mov
push
cmp
sub
decl
notb
or
xchg
out
mov
or
scas
sub
cmc
jo
loope
stos
xor
or
sahf
pop
push
repnz
ret
rcr
imul
inc
sub
xlat
xchg
or
dec
arpl
negl
push
mov
push
cli
adc
pop
inc
mov
stc
jmp
mov
and
pop
sub
scas
inc
ffreep
lcall
or
mov
xor
cwtl
pop
cmp
out
pop
or
iret
push
inc
jb
jl
jge
mov
std
leave
pop
add
shlb
cs
lds
dec
jp
cli
dec
mov
out
ja
aam
lahf
fisubrs
pop
mov
mov
mov
push
outsb
jge
rcll
mov
xchg
pop
xlat
jmp
sbb
mov
popa
push
pop
jecxz
scas
imull
testb
cmp
inc
cltd
imul
rcr
xchg
lahf
mov
cmp
cmc
inc
xchg
filds
jbe
push
das
jbe
dec
xorl
adc
jge
push
into
repz
es
mov
mov
sub
dec
mov
inc
xchg
mov
repz
add
inc
sub
mov
mov
in
cli
mov
push
filds
sbb
push
ss
sbb
mul
cmp
ret
inc
pop
xchg
inc
leave
xchg
push
repnz
dec
mov
or
cmpsb
jl
divb
inc
xchg
pop
push
ljmp
movsl
xchg
cwtl
insl
xchg
or
xchg
lods
sbb
je
maxps
movsb
dec
nop
int
leave
xor
fmul
inc
dec
adc
ud1
cmp
repnz
ljmp
pop
mov
enter
cmpsl
push
movsl
ss
or
test
mov
fwait
sub
inc
out
repnz
add
roll
rcll
dec
xor
out
jb
cmpsb
addr16
sub
aad
cmp
out
or
fmull
jmp
addr16
sbb
sub
out
sbbl
sbb
dec
cmovb
scas
sub
push
inc
ret
out
repnz
inc
mov
sub
aad
jno
cmpsb
and
iret
stos
mov
add
cltd
daa
xor
sbb
scas
jb
movsb
dec
rcl
pop
mov
dec
or
andb
push
ret
test
into
dec
mov
es
xlat
pop
dec
mov
incb
sahf
xchg
lret
jb
push
xchg
mov
dec
mov
inc
push
sub
sub
adc
pop
mov
ret
es
add
insl
das
mov
dec
lods
lret
addr16
cli
pushl
mov
and
stos
mov
inc
mov
or
ljmp
aad
test
shlb
mov
adc
and
and
out
add
in
int3
push
mov
cmpb
repz
jbe
pop
stos
lods
hlt
inc
mov
mov
repz
fwait
shl
mov
scas
divl
stos
lcall
sub
test
mov
sbb
xor
out
test
dec
mov
sbb
mov
sbb
sub
mov
lods
mov
jmp
jp
jbe
pop
mov
jbe
insl
xchg
adc
sbb
pop
fisubl
loope
vaddpd
stc
inc
addb
mov
lods
inc
mov
lret
js
adc
pusha
push
pop
rcll
adc
dec
dec
pop
lods
loopne
in
fwait
mov
mov
out
push
test
pop
jg
daa
xchg
stc
mov
fisttpll
sbb
in
sahf
mov
mov
lcall
jge
push
jecxz
xchg
adc
ret
push
mov
sahf
loopne
popa
insl
mov
fcomps
fpatan
pop
mov
fdivrl
sbb
mov
jmp
add
in
sbb
dec
popa
pop
xchg
fwait
daa
mov
cld
dec
inc
jecxz
pop
jp
inc
mov
pop
insb
jl
xor
pop
outsb
pop
mov
xchg
mov
mov
lock
repnz
sbb
mov
test
popf
data16
incb
iret
pop
ret
add
and
bound
dec
testb
mov
les
adc
jbe
movsb
aas
sub
shr
pop
lcall
sahf
movsl
xchg
push
test
jb
fdivl
dec
leave
cltd
test
mov
and
into
xor
fsubp
mov
cmp
sub
sti
sbb
xor
leave
push
imul
adc
nop
cltd
add
xchg
ret
aad
pop
or
shrb
mov
cmpsl
jne
mov
and
mov
cmp
mov
inc
push
xchg
adc
xlat
jl
push
fimuls
loope
insl
in
cli
loope
pop
jb
jp
gs
pop
mov
dec
outsb
jmp
fnsave
jae
cwtl
inc
popf
stc
add
shll
sti
xorb
mov
add
adc
xchg
mov
inc
jno,pt
mov
in
xor
inc
xor
sbb
in
lods
cltd
add
jb
js
stos
xor
nopl
xor
fstl
divb
addr16
push
ja
adc
movsl
lret
sti
jmp
fcoml
aam
in
mov
cld
stos
orb
int
mov
mov
xor
mov
stos
cmp
push
in
push
push
out
sub
cmp
dec
push
lahf
mov
stc
xchg
fisttps
jae
lret
lahf
ficoms
je
stos
inc
std
pop
aas
lock
shrb
mov
scas
push
push
call
gs
rolb
push
in
or
and
mov
xor
lret
cwtl
dec
sahf
and
and
je
inc
mov
xchg
cmp
test
jns
mov
add
gs
popf
int3
pop
and
daa
mov
daa
or
dec
cli
add
cmp
mov
hlt
xchg
or
xlat
addr16
lds
clc
sub
lret
in
fdivl
shll
je
popf
adc
icebp
pusha
xchg
dec
jg
adcb
mov
test
push
jno
fnclex
sub
add
add
mov
bound
test
aas
jecxz
pop
es
adc
and
addr16
pop
mov
push
dec
inc
or
mov
std
mov
dec
fildl
das
add
aam
std
cmpsb
dec
test
push
fsubl
mov
mov
cmp
mov
xchg
push
aad
pop
pop
xor
lahf
adc
pop
xchg
mov
push
sub
jecxz
sahf
shr
fwait
xor
dec
sbb
outsl
hlt
jmp
repnz
inc
pop
and
dec
addr16
dec
sbb
aam
leave
cmp
lret
adc
sbb
mov
cmovl
stos
mov
xor
repz
mov
pop
sarb
ljmp
test
stos
pop
push
mov
inc
pop
in
inc
mov
lods
enter
jmp
mov
inc
cmp
lret
int3
cmp
cmpsb
shlb
cmp
sarb
scas
xchg
lahf
clc
loop
rcrb
xchg
add
inc
cmp
sbb
fdivp
pop
or
mov
inc
lcall
inc
lds
lods
and
insb
cli
scas
stc
mov
bound
sub
push
mov
aam
addr16
push
dec
stos
push
add
push
or
mov
into
cwtl
sub
pop
cmp
ds
xchg
mov
dec
mov
insl
rorl
int
add
pop
or
push
ds
mov
repz
pop
xchg
std
in
mov
clc
jnp
jmp
int
sarb
in
jo
sub
scas
inc
and
push
push
lcall
bound
inc
fmull
call
xchg
push
push
xchg
adc
inc
fmul
mov
cli
pop
iret
sbb
jnp
mov
jmp
mov
push
cmp
sub
adc
dec
cmpl
jno
andb
hlt
pop
push
sub
cmp
mov
ret
xor
or
shlb
jg
scas
pop
jg
lahf
dec
or
add
pop
ss
repz
subl
dec
lahf
push
mov
insb
mov
bnd
jo
inc
test
cli
push
adc
jg
js
push
jl
sub
imul
sub
mov
xchg
mov
xchg
push
std
aaa
insb
cmc
xor
dec
repz
pop
dec
nop
dec
fs
mov
int3
adc
testb
sbb
adc
fimuls
lods
push
out
xchg
loopne
outsb
jg
jmp
jp
pop
notl
sub
ds
sahf
addr16
fsubs
sub
dec
fcoms
mov
imull
fisttps
mov
dec
fstpl
xchg
push
ret
aad
jb
push
mov
mov
out
pop
addl
mov
shll
ljmp
pop
repz
leave
push
mov
and
js
fisubrl
in
fldt
or
stc
mov
out
scas
pop
adc
fwait
mov
ret
adcl
xchg
daa
dec
and
stos
jp
inc
decb
mov
movsb
call
mov
in
push
aam
xchg
arpl
fldcw
js
fisubrl
into
movb
mov
pop
pusha
jg
notb
js
sahf
test
dec
ficompl
jb
fmul
jb
or
jnp
sub
mov
out
sub
mov
xchg
pop
mov
xchg
ljmp
sub
lret
push
shll
call
scas
jbe
xchg
push
out
xorb
cli
cltd
or
aas
jne
into
test
sti
aam
add
addl
and
popa
out
mov
jp
mov
xchg
repnz
jo
repz
mov
adc
imul
out
xor
push
pop
push
or
mov
cmp
jl
int3
add
ficoml
test
inc
test
lock
nop
es
mov
xchg
fistpll
cmp
imul
pop
adc
cmpb
cmp
push
ret
push
lret
mov
loopne
mov
rcl
push
pop
cmp
loop
push
imul
lahf
scas
lods
dec
repz
test
sbb
andl
pusha
cwtl
ret
repnz
push
into
std
lcall
sub
int
mov
mov
loope
pushf
add
push
stos
scas
xor
sbb
aas
movsb
xor
rolb
xor
out
mov
mov
iret
add
sti
pop
xor
mov
pop
daa
repnz
xchg
dec
dec
dec
xchg
loope
pop
test
sub
ret
dec
pusha
rcr
or
popa
enter
cmpsb
xchg
roll
adc
mov
dec
inc
lgs
loopne
inc
sbb
ss
scas
dec
mov
icebp
out
and
xchg
mov
sbb
imul
xchg
jno
push
maskmovq
jmp
xlat
movsl
negb
sbb
lods
nop
push
dec
and
shlb
cli
clc
gs
in
jge
pushl
mov
loopne
adc
add
xor
mov
int
out
mov
int3
in
scas
fnstcw
and
cmc
jnp
jmp
test
loopne
jmp
mov
push
addr16
xor
mov
insb
popf
insl
mov
es
sahf
aad
push
das
push
loopne
sti
or
inc
testl
out
ja
aam
or
xchg
scas
rclb
insl
icebp
sbb
insb
push
and
lret
pop
jno
pop
dec
add
push
mov
imul
mov
mov
cmpsb
adc
in
and
daa
cmp
and
rcl
adc
loope
add
ss
test
inc
test
mov
mov
push
pop
fistl
fildl
sub
sub
mov
mov
mov
jg
xchg
pop
xchg
outsl
push
out
scas
js
xchg
sbb
es
push
adc
inc
inc
xchg
cmp
mov
cmp
subl
push
mov
jmp
mov
and
mov
dec
push
xchg
push
je
into
ss
or
push
lds
xor
insb
cmc
cmp
loopne
xchg
in
pusha
int
mov
fsubrs
pop
mov
insl
sub
fdiv
aad
ret
cltd
subb
cmp
pop
cmp
dec
inc
ret
jmp
push
cmpsb
pusha
xor
nop
in
repnz
cmp
insl
mov
and
sub
push
fwait
aas
sub
lds
int
notl
xor
and
aas
mull
jp
fucomp
xor
sub
xchg
sub
xor
or
or
ss
dec
lods
sahf
push
ljmp
adcb
lret
mulb
xchg
pop
dec
sub
xchg
js
pop
xchg
xchg
jns
or
sbb
and
cmp
ret
jl
sub
test
pop
lea
test
lods
xlat
cs
dec
in
hlt
popa
int3
je
xchg
mov
mov
xchg
sti
outsb
sti
push
scas
and
call
dec
stos
add
and
ds
jge
jo
rcl
orl
cld
lods
jmp
test
out
sbb
xchg
jmp
inc
fiadds
xchg
add
cltd
fsubrs
or
pusha
cltd
ror
cltd
in
cmp
add
mov
sbb
xchg
dec
clc
loope
cmp
addr16
inc
cmp
loopne
xlat
popa
fistpl
leave
aas
loopne
enter
int3
pushf
mov
mov
mov
inc
popf
gs
or
xor
dec
lahf
ret
fnsave
sub
cwtl
das
or
mov
or
or
adc
dec
add
adc
pop
pop
pop
xchg
cmp
cmp
push
aaa
mulb
and
mov
mov
jo
aas
out
dec
mov
mov
push
popa
mov
mov
inc
insb
jno
lods
mov
scas
mov
daa
mov
pop
mov
sbb
mov
jge
pop
pop
add
cli
fisubrs
adc
lods
sbb
rcll
daa
or
sbb
xchg
popf
pop
mov
lods
test
popf
fnsave
repnz
repz
xchg
xchg
dec
int3
iret
adc
mull
sub
sahf
and
dec
mov
arpl
cmp
push
stc
cmp
divb
xor
mov
scas
mov
pop
insb
gs
xchg
sbb
js
in
cmc
ds
jb
push
pusha
lcall
jmp
fisubrs
mov
mov
out
pop
push
mov
je
cs
mov
test
add
lds
pop
ljmp
bound
dec
and
push
or
and
cld
sbb
orl
repz
pop
dec
xchg
push
sbb
repnz
int
iret
push
loop
je
push
sbb
imul
cli
dec
pop
mov
or
cli
rcrb
pop
pop
sbb
sbb
iret
mov
mov
jbe
pushf
fmuls
and
cmp
sbb
stos
imul
or
inc
push
stc
inc
in
gs
add
mov
cmp
mov
dec
sbb
and
cld
push
movsl
push
sub
jg
roll
or
leave
daa
inc
arpl
insl
pop
mov
xlat
pop
push
dec
cmp
xchg
dec
aaa
pop
cs
push
and
sub
push
leave
mov
fwait
jl
sub
pop
dec
lcall
push
cltd
out
pop
mov
xchg
add
lods
sahf
loop
mov
int3
mov
aas
pushf
xchg
imul
mov
adc
add
pop
iret
in
fdivrs
jbe
mov
and
mov
xorb
add
dec
mov
push
and
rolb
neg
pop
out
fs
push
cwtl
dec
rcl
subl
jle
cmp
push
adc
mov
mov
lods
and
loope
stos
ret
inc
jl
andnps
jl
and
call
mov
clc
lret
dec
fucomp
push
aas
inc
lock
mov
add
push
mov
sahf
je
fst
sub
loop
and
imul
popa
ret
loopne
add
icebp
jno
jbe
js
outsb
jmp
xor
xorb
sahf
psrlq
inc
jns
jb
loopne
mov
shr
dec
push
jge
jns
test
fmul
insb
cmp
inc
and
add
cmp
pop
movsl
nop
dec
insb
test
jecxz
sbb
mov
push
insl
adc
jmp
jb
push
lret
push
js
and
aaa
lret
sub
scas
shll
arpl
cmpsb
sbb
jg
outsl
mov
push
fldenv
iret
push
push
mov
pop
mov
mov
cld
adc
cmp
scas
lea
jg
xchg
fwait
imull
jb
pop
add
lods
pop
gs
fadds
sbbb
fwait
and
cmpsb
dec
test
xchg
nop
mov
dec
scas
pop
sub
pop
or
mov
inc
fcoml
cmp
js
dec
hlt
dec
push
in
cs
int3
filds
cmp
and
cltd
inc
clc
jecxz
mov
insl
adc
xchg
inc
nop
lcall
arpl
add
incb
test
mov
mov
shlb
fldl
cmc
adc
add
jb
cmpsl
fldcw
in
movsb
pop
push
fcomps
inc
icebp
icebp
xor
mov
mov
mov
test
inc
out
xchg
sbb
arpl
push
sbb
fcoms
pop
dec
mov
xor
adc
outsl
xchg
add
aas
dec
rorl
int
ret
outsl
lods
jns
mov
jbe
shlb
dec
inc
mov
data16
ss
push
lea
pop
loope
push
in
test
add
in
call
sbb
and
roll
and
das
adc
sti
sahf
cmp
sarb
fldl
rcrl
or
es
clc
dec
push
fwait
cs
xlat
ret
dec
dec
sbb
fildll
adc
loopne
rcll
push
mov
stos
dec
decb
and
icebp
inc
or
sbb
lds
jge
xchg
frstor
in
into
divb
popf
sbb
push
int3
out
and
cmpsb
int
es
shll
aam
xorb
inc
daa
push
les
mov
sub
jmp
xchg
lods
inc
dec
mov
sub
test
outsb
cmp
jne
ljmp
rcrl
loopne
outsl
ds
lds
sub
and
std
inc
mov
in
mov
jns
mov
inc
jae
loope
call
xor
add
scas
jno
fistps
out
pop
test
ljmp
sub
mov
pop
push
std
loope
xchg
adc
add
inc
js
pop
ret
pop
xlat
xor
jl
mov
ficoms
pop
aas
std
add
mov
repz
pusha
xchg
mov
daa
or
cmp
push
ds
inc
mov
je
out
imul
into
icebp
pop
jo
or
and
xor
enter
adc
dec
into
adc
ljmp
dec
addb
insl
shr
push
jnp
cmpsl
insb
push
insb
jmp
jbe
or
cs
or
outsl
addr16
mov
jecxz
mov
psrlq
adc
in
pop
in
mov
and
pop
rsm
or
and
pop
pop
fwait
hlt
cmp
jecxz
push
pop
cmp
aaa
mov
jb
dec
lods
xor
mov
repz
adc
push
ja
fstpl
pop
pop
adc
xchg
dec
mov
dec
shlb
ret
in
out
jne
das
pusha
cmp
xchg
pop
pop
clc
inc
imul
and
test
add
and
mov
outsl
xor
jo
xor
out
clc
xchg
sahf
cmp
dec
aas
xchg
and
imul
adcl
repz
jno
pusha
mov
or
or
subl
test
loopne
out
iret
lds
xchg
xor
adc
cmp
mov
fsubr
loopne
cli
mov
xchg
pop
test
mov
add
test
std
popa
jle
pop
dec
lds
dec
in
popa
mov
pop
mov
filds
cltd
push
sarl
mov
xchg
loope
dec
add
das
loopne
call
addb
xor
test
sub
dec
xchg
add
icebp
cmp
loop
lods
aad
in
sub
push
pop
mov
push
push
jecxz
outsl
mov
adc
pop
xchg
int3
dec
addb
or
mov
add
mov
adc
cmp
sti
push
xchg
sti
fucomip
test
nop
and
out
pop
scas
and
push
and
or
fnstcw
xchg
into
or
add
mov
lahf
scas
mov
mov
mov
fwait
mov
clc
cli
stc
loopne
inc
insb
pusha
xchg
add
shr
sub
aas
pop
mov
mov
mov
sub
out
rcrb
mov
jl
inc
scas
in
es
jne
xchg
fdivrs
sub
sbb
xlat
outsb
cmp
cmpsl
loope
cmpl
cmpsb
jbe
xchg
sub
fstl
jae
xor
adc
pmaddwd
rcr
and
jnp
imul
adc
in
popf
adc
xchg
jge
loopne
stos
sub
int3
clc
mov
inc
mov
push
add
inc
mov
punpckhdq
xor
in
mov
push
pop
and
cmpsl
mov
bound
into
test
adc
or
push
aad
js
add
jle
push
enter
enter
lea
xor
insb
mov
add
icebp
sbb
mov
push
das
andl
adc
fs
push
icebp
sbb
test
mov
pop
mov
add
cwtl
pop
pop
push
outsb
sub
imul
aaa
repz
cmp
mov
dec
fwait
xchg
dec
pop
or
push
fstl
adc
mov
push
add
cli
mov
lret
xor
or
cmpsb
dec
jge
xchg
inc
insl
sbb
test
shl
mov
cmp
in
adc
dec
les
mov
out
dec
sbb
jecxz
aad
jno
mov
sub
adc
ret
xchg
data16
xchg
scas
stos
pop
sbb
daa
daa
sbb
adc
ja
push
mov
mov
push
jg
shrb
cwtl
mov
adc
test
pop
pop
push
les
jo
testb
push
dec
xchg
mov
scas
inc
stc
mull
adc
lret
jecxz
fwait
sbb
push
lds
push
adc
scas
cld
sbb
pusha
ret
icebp
push
pop
mov
lret
clc
sbb
daa
stos
dec
shlb
jnp
mov
insb
rolb
cmpb
cltd
sub
jb
pop
cltd
out
add
mov
into
imul
aam
mov
cmc
pop
jb
loopne
xchg
cmpsl
jo
movlps
or
das
push
iret
daa
idivb
mov
popa
and
sbb
jbe
cvtdq2ps
push
sbb
pop
rcrl
sbb
cli
pop
push
lds
out
push
inc
int3
push
and
call
outsb
aaa
jmp
jecxz
xchg
mov
call
and
sahf
add
inc
outsl
push
add
sub
std
push
xchg
mov
mov
mov
sbb
daa
or
mov
push
adc
out
mov
push
sub
lock
ds
dec
and
pusha
mov
rol
mov
and
enter
jp
dec
and
stos
pop
and
imul
adc
cmpsb
popf
and
fsubrl
loope
mov
add
out
jbe
inc
add
jae
pusha
and
mov
fdivrl
flds
push
aam
cmp
imul
add
stc
sub
adc
mov
fisttpl
fwait
ja
dec
cli
push
shl
cli
cmp
into
dec
push
out
push
add
push
sbb
mov
int
jno
push
pop
sahf
push
add
nop
jmp
pop
mov
jl
jae
push
mov
push
popf
cmp
push
or
cmp
out
fadds
xor
outsl
inc
push
xor
mov
imul
or
inc
addr16
gs
sbb
out
mov
bnd
scas
negb
clc
mov
push
xor
into
sbb
sub
sub
dec
stos
pusha
hlt
rcrb
and
add
sahf
dec
cmp
jno
adc
inc
mov
hlt
and
mov
xchg
sbb
dec
jg
or
stos
rcrl
push
sbb
jp
mov
das
push
sarb
clc
dec
mov
inc
fcompl
push
xor
loopne
sub
push
xor
insb
andb
test
mov
sub
lahf
jle
dec
int3
mov
lahf
ret
jo
jl
lret
xor
cmp
push
pop
stos
int3
test
fcmovne
imul
jne
adc
inc
stos
jle
pushf
out
cwtl
sub
lcall
bound
iret
dec
jmp
mov
jbe
pop
in
mov
xorb
and
xor
lea
pusha
scas
test
mov
sbbl
pop
and
loope
stc
jmp
jo
push
pop
mov
push
adc
mov
add
xor
mov
fstl
jmp
mov
daa
push
or
adc
das
mov
jne
push
mov
data16
sbb
xor
xor
cltd
movsl
push
mov
mov
and
aas
pushl
scas
lock
out
sbb
ret
inc
scas
scas
test
daa
stc
pop
js
xchg
pop
loope
outsl
lret
neg
ret
pop
fs
add
sub
sub
ret
mov
or
and
rcrb
dec
loop
mov
sub
add
sbb
shlb
sti
in
fs
flds
addl
or
push
push
fisttps
cwtl
in
or
pop
jge
cmp
inc
mov
xchg
xor
movsb
out
cmp
adc
pop
fldenv
popa
enter
inc
cmp
xor
subl
leave
movsb
icebp
inc
sti
xor
jne
cmp
jg
push
movsl
jns
xlat
sbb
sahf
movsb
das
pop
jg
pushf
stc
mov
ret
mov
ds
sub
in
jmp
jb
pop
push
jnp
mov
and
pop
cltd
jmp
bnd
mov
mov
add
jb
sub
dec
cmpsb
sbb
cmc
addr16
pop
insl
xchg
and
lret
lret
sarb
bound
repnz
xlat
addr16
out
cmp
cwtl
mov
aas
xlat
cmc
xchg
sub
out
jg
outsb
or
outsb
arpl
mov
mov
into
cmp
sbb
inc
push
dec
in
repz
xchg
test
pop
jo
inc
jp
pushf
imul
xor
pop
mov
ret
lret
cmp
loopne
mov
push
aam
add
cmp
mov
jne
aas
push
mov
stos
pop
mov
shlb
ret
enter
xchg
jmp
ret
jecxz
pop
les
cmp
add
loope
cmpsb
mov
xchg
ljmp
dec
or
pop
iret
out
sub
and
adc
sbb
imulb
test
aas
push
cmpsl
inc
imul
sub
xchg
inc
mov
test
js
leave
popa
ja
sbb
ret
adc
mov
jb
mov
adc
push
loope
mov
ljmp
sbb
add
addl
rclb
in
icebp
pop
push
fisubl
loop
mov
fiadds
and
xchg
fwait
jle
and
sub
xor
iret
repnz
xor
int
adc
cmp
pop
mov
sar
pop
mov
incb
adc
xor
icebp
fsubl
icebp
loop
jl,pt
mov
pop
fnstenv
sub
xchg
and
xor
repnz
xchg
jg
or
xlat
jp
xor
dec
movsl
pop
xlat
or
sarb
push
or
jne
gs
pop
pop
fdivp
cwtl
lods
mov
test
les
outsb
lcall
shrl
cmp
jo
add
jnp
outsb
sbb
cwtl
and
aam
cmp
call
stos
pop
frstor
mov
shrb
out
mov
lds
dec
ret
adc
xchg
lods
adc
notb
insl
xor
inc
sub
push
inc
adc
push
sub
movups
jae
imul
mov
jg
insl
pushf
push
xchg
loopne
out
mov
into
jae
xchg
cld
adc
jb
dec
jno
jno
rorb
insl
rolb
mov
aam
jecxz
sahf
cmpsl
sarb
popa
sub
bnd
xor
mov
mov
fsts
jge
cmc
call
adc
inc
pop
fadd
cmc
sarb
mov
popa
aad
loope
incl
and
nop
mov
roll
xchg
jmp
push
call
mov
stos
dec
jmp
ret
in
sub
dec
cmp
sbb
insb
pop
in
cli
icebp
test
rorb
inc
cli
mov
out
jae
aas
mov
push
and
shr
ror
stc
or
mov
popf
push
clc
ret
mov
add
movsl
fsub
xchg
jle
jl
dec
int3
std
jb
xor
testl
mov
aas
inc
and
mov
and
and
push
iret
call
and
and
and
push
push
sbb
adc
repz
push
fwait
push
aad
jo
sahf
mov
cmpsl
cmp
call
out
data16
adc
js
mov
push
icebp
jmp
imull
cltd
into
or
shll
inc
xchg
cmpsb
roll
sbb
ja
inc
sbb
scas
shlb
data16
ret
push
mov
push
insl
pusha
mov
test
movsb
pushf
insl
mov
loop
xor
push
cs
shll
adc
mov
mov
or
cmp
repnz
push
frstor
mov
jo
movsb
xchg
adc
shl
incb
xchg
loope
enter
jp
cwtl
out
push
clc
movsl
xchg
fincstp
and
cmc
inc
into
stc
mov
xchg
subl
dec
xchg
ret
add
daa
rolb
mov
jecxz
je
imul
test
sahf
out
ds
xchg
jo
cs
dec
xchg
leave
mov
push
mov
ret
adc
mov
std
mov
dec
sbbb
into
testb
mov
ret
inc
mov
pop
jle
cmc
lods
or
subb
stos
jno
mov
bound
dec
invd
loope
sub
sub
repz
fdivs
inc
and
or
stos
add
shr
fs
pop
rcrb
cli
out
ja
shlb
jno
cmpsl
pusha
add
ds
xchg
mov
imul
push
and
xchg
jle
xchg
fcmovne
mov
cli
sbb
xchg
test
xchg
jo
cmpsb
jnp
test
and
das
mov
push
push
or
bound
dec
dec
enter
flds
iret
repnz
lock
cmpsb
mov
int3
sub
scas
inc
cmp
scas
out
sbb
fcom
xchg
lcall
pop
inc
inc
ss
sub
add
pop
test
sbb
sti
lret
add
stos
cs
mov
mov
movb
imul
jbe
pop
push
jns
arpl
push
jbe
push
sarb
dec
jnp
pusha
jns
jnp
and
mov
and
in
pop
mov
pop
adc
outsb
xchg
or
mov
gs
mov
lock
lahf
add
bound
test
sub
ror
daa
cmp
iret
jnp
fsubrp
outsb
pushw
std
fwait
adc
pop
fildll
lods
lods
aaa
mov
stc
aam
cmp
pop
pop
pop
xchg
fimuls
lret
sub
mov
jbe
add
xor
fstp
jg
jge
jmp
cwtl
sti
fcomps
xchg
mov
push
sbb
cmp
repnz
pop
fldcw
outsb
jo
mov
push
stos
stc
sbb
cli
sar
mov
mov
mov
sub
or
scas
scas
lods
pop
cmp
xor
pop
cmp
fbld
mov
and
inc
les
xchg
jne
movsb
jecxz
pop
mov
cwtl
clc
div
pcmpgtd
xor
mul
pop
inc
pop
or
mov
sbb
push
inc
or
pop
jbe
loop
imul
cmpsb
and
fwait
stos
sti
sbb
adc
leave
xor
daa
sub
push
imul
fprem1
sub
mov
dec
in
test
push
dec
mov
in
das
or
or
mov
pop
mov
mov
cmp
push
fisubrs
and
cmp
sub
movsl
pop
push
mov
mov
ss
lods
or
clc
inc
jp
cli
and
ss
into
cmp
cmp
popf
cmp
nop
adc
add
hlt
pop
clc
pop
cltd
mov
ret
fucom
nop
nop
jp
or
mov
mov
push
cwtl
jle
test
loop
nop
out
movsl
int3
sbb
adc
out
sbb
xchg
sarb
test
call
push
mov
fs
pop
scas
xor
cltd
jbe
ds
repnz
shrl
dec
in
lock
mov
add
xor
sub
inc
sub
pop
push
dec
and
lcall
movb
addr16
leave
lahf
out
or
mov
mov
push
filds
dec
and
stc
jge
loop
inc
add
push
outsl
jo
and
mov
lock
push
jae
jmp
add
xor
dec
xchg
xchg
push
popa
ds
int
inc
cmp
pop
xchg
pop
dec
in
inc
insl
in
aam
add
cwtl
ljmp
jl
xchg
stc
push
in
push
out
cwtl
or
repnz
cmp
adc
xor
dec
xchg
and
add
mov
sbb
out
mov
sub
scas
mov
push
xchg
ret
jp
xorl
and
pop
sbb
push
mov
fsub
ss
mov
into
mov
pop
xchg
xchg
mov
fsubrp
inc
imul
pop
jnp
mov
inc
inc
popf
ret
mov
dec
stos
fcoms
mov
arpl
sarb
leave
dec
shll
adc
mov
movb
adc
imul
adcb
aaa
fmull
sahf
dec
fcmovnb
push
fisubs
imul
jae
pop
aam
add
lahf
insl
fidivs
jle
gs
mov
mov
mov
lods
popf
dec
mov
mov
movsb
jns
es
std
dec
xor
insb
cmp
adc
jns
mov
scas
pop
dec
les
mov
lahf
cld
fnstenv
call
mov
fadds
mov
loop
inc
mov
aad
mov
xor
dec
inc
adc
orl
popa
mov
push
sub
sbb
movsl
jo
inc
pop
pop
or
repnz
scas
out
aas
and
xchg
out
jg
das
pop
cs
mov
inc
aad
dec
mov
out
int3
xchg
xor
clc
lea
jns
pushf
mov
and
pop
cmc
push
iret
jbe
jl
push
data16
mov
and
adc
xor
mov
clc
aaa
cmp
fisttpl
gs
mov
jb
in
xchg
and
xchg
sbb
lret
jb
dec
dec
cltd
pop
mov
and
sahf
lahf
xor
test
subb
lds
pop
add
jns
ljmp
sbb
in
cli
aad
lret
mov
imul
imul
in
adc
dec
popf
mov
sbb
sbb
pop
xchg
sti
movsb
push
dec
ficoms
mov
pop
fistl
repnz
icebp
sub
je
mov
xchg
adc
cmp
or
mov
dec
mov
ss
mov
cltd
jecxz
cmp
fs
das
mov
scas
lods
test
xchg
andl
inc
sbb
pusha
enter
inc
idivb
gs
repnz
int
push
lret
pop
dec
xor
nop
enter
fld1
or
jns
ljmp
bound
mov
dec
xlat
sahf
fwait
mov
outsb
add
cmp
stos
into
and
dec
push
test
push
mov
outsl
inc
cmc
xor
mov
sub
jne
cmc
out
xchg
mov
pop
xor
adc
stos
repnz
lcall
xor
adc
inc
fisubs
adc
cltd
jg
dec
scas
into
and
xchg
and
lock
jl
add
gs
aaa
dec
mov
push
je
std
mov
mov
sahf
ds
daa
sti
or
and
xchg
push
addr16
dec
out
js
jp
ds
int
aaa
leave
jbe
jge
and
cmc
sub
subl
jge
pop
stos
outsb
pop
sarl
and
mov
pop
mov
lret
push
push
jg
mov
sti
arpl
jmp
es
cmpb
fstl
xchg
xor
lret
mov
cwtl
adc
outsl
jo
push
pop
pop
cld
movsb
loopne
mov
dec
mov
clc
xor
sbb
xor
cld
xchg
cmp
mov
pop
push
dec
out
aam
insl
jp
mov
mov
mov
pushf
ljmp
shll
xor
ret
inc
cltd
into
or
ljmp
inc
xor
mov
mov
pop
fwait
mov
and
mov
pop
pop
subb
or
xchg
insl
or
or
inc
aam
inc
mov
fs
pop
imull
cltd
xlat
outsb
cmp
or
pop
dec
movsb
lods
mov
sbb
fucomi
xor
fcmovu
lcall
decb
inc
cltd
push
jns
pop
inc
push
ss
outsl
mov
repz
fidivrs
shrl
mov
mov
push
push
addb
mov
mov
mov
pop
xlat
sar
cmp
dec
mov
mov
push
add
push
fdivrl
mov
ds
test
out
jl
xor
movsl
jl
pop
xchg
mov
dec
xchg
cmc
imul
mov
push
repz
mov
fsubrs
test
add
pop
nop
jo
stc
bound
nop
andb
out
daa
lretw
mov
add
out
push
into
push
and
push
enter
mov
add
enter
popa
fdivr
scas
xlat
mov
jo
xchg
popa
stos
adc
dec
imul
fldt
xor
and
movsb
cmp
push
ds
xorl
mov
sub
test
out
pop
sub
xchg
add
adcl
je
lret
repz
xchg
add
adc
rcr
sbb
pop
movsb
fiaddl
push
pop
mov
cltd
outsb
cld
adc
call
jae
nop
sbb
test
out
test
xor
sbb
push
mul
jno
and
add
inc
in
pop
jbe
dec
mov
fcoms
jecxz
int3
sbb
lret
pop
jecxz
popa
mov
adc
ljmp
fstl
repnz
jb
push
cmc
jmp
test
in
in
xor
or
sub
mov
mov
arpl
insb
rcl
imul
push
inc
into
mov
std
fwait
inc
mov
add
outsb
js
pop
in
push
sbb
push
lods
sahf
popa
jne
dec
push
rorb
push
mov
xchg
mov
sti
mov
jg
sti
and
push
dec
cmpsl
cwtl
jmp
ljmp
inc
stos
cmpsl
sbb
jbe
test
icebp
test
in
shr
loope
leave
inc
jl
lock
xchg
cld
dec
jnp
int
cmp
sbb
xchg
cmp
sub
push
xorl
mov
andb
scas
cli
mov
adc
lods
mov
std
jae
adc
jecxz
subb
roll
mov
mov
xchg
mov
dec
or
push
mov
movsb
xchg
pop
sarb
cs
fs
sbb
movl
or
cmc
dec
fimuls
cs
popf
adcl
pop
cld
push
jp
push
sub
fwait
xor
adc
and
push
outsl
and
out
lods
dec
xor
mov
mov
rol
sbb
adc
xor
ss
out
outsl
test
xchg
incb
sbb
push
push
out
decl
ficoml
xchg
xchg
jmp
js
into
sub
add
cwtl
repz
pop
imul
mov
sbb
outsl
lods
or
xor
sub
lcall
adc
or
arpl
push
cmc
and
sub
sub
and
push
and
icebp
mov
mov
add
pop
subb
mov
iret
dec
pusha
int
repnz
mov
push
jb
inc
call
push
jnp
or
lock
mov
lds
cmpb
cmp
pop
and
jns
xchg
call
jp
add
mov
in
cmc
cltd
sub
ja
in
leave
xor
std
pop
xchg
sarb
jbe
lock
adc
adc
add
inc
aam
rep
or
fstp
in
cmp
repnz
fdivs
mov
xlat
int3
jg
mov
pushf
repnz
mov
xor
daa
cs
clc
loop
jp
in
je
add
jp
mov
nop
sbbb
add
ds
pop
sbb
pop
ds
adc
ja
stos
push
push
push
call
cld
dec
sbbl
ret
scas
cltd
or
out
mov
and
lods
jg
outsb
popf
cltd
and
push
subl
adc
jl
jne
popa
or
push
jp
xor
xchg
xchg
fprem1
push
jl
roll
inc
int3
cltd
pop
sub
push
mov
xchg
les
cmp
xor
sbb
mov
lods
sub
jg
sub
adc
sbb
or
test
mov
mov
cmc
fsubr
out
jae
or
scas
lock
test
flds
mov
dec
mov
mov
xchg
ljmp
fdivrp
daa
inc
ret
insl
arpl
outsb
sub
xchg
aaa
test
inc
pop
push
inc
roll
xor
jle
sub
paddq
jl
and
inc
out
push
mov
adc
iret
lods
sbb
push
adc
call
mov
cmpl
pop
mov
dec
fisubrs
push
fdivl
jb
xor
push
hlt
adc
inc
mov
mov
popa
pop
fnstsw
dec
inc
xor
js
mov
jae
or
mov
out
lahf
lahf
jne
pop
lret
addr16
aas
dec
add
adc
pop
enter
ret
adc
or
cmp
aad
inc
push
fstpl
out
cmp
xchg
dec
xor
jno
leave
xor
aad
pop
sbb
fdivl
int
adc
int3
sub
mov
push
loopne
adc
mov
js
add
lea
leave
popa
in
lea
mov
inc
js
jno
cmp
push
mov
insl
out
jae
stos
pushf
es
repz
js
lcall
pop
pop
pop
pop
jbe
addb
adc
adc
ret
fistpl
insb
sti
push
or
hlt
loopne
jg
cmpb
pushf
push
sbb
je
stc
mov
fiadds
sbb
mov
cltd
sub
add
and
loopne
aad
gs
ss
dec
xchg
xor
push
push
mov
loope
mov
lret
aaa
xchg
push
cmp
jo
pop
ds
xlat
xchg
mov
iret
icebp
push
or
mov
sub
mulb
test
repz
pop
out
je
sti
imul
pop
js
insl
mov
sti
jge
push
jecxz
adc
in
std
push
pop
sub
sub
push
lret
fadd
jns
pop
cs
shlb
inc
jecxz
cmpl
pusha
lea
and
inc
jo
dec
or
inc
push
test
imul
push
jbe
lahf
mov
cmpsl
adc
and
arpl
adc
push
sub
jae
inc
ror
jmp
addr16
rcr
push
and
bound
xchg
ret
or
arpl
out
shrl
and
icebp
inc
sahf
mov
out
iret
enter
pusha
call
push
lea
insb
or
cmc
dec
and
imulb
pop
add
push
xor
or
arpl
push
hlt
jecxz
xchg
ja
scas
into
xor
in
mov
dec
popa
xor
out
ja
dec
push
movsb
adc
push
push
aad
push
fucom
cmp
adc
fwait
xchg
add
nop
outsl
aad
xchg
in
js
jo
movsl
imul
dec
mov
dec
jp
lods
lahf
loope
bound
inc
scas
loopne
shll
pop
mov
ljmp
jecxz
out
fsubl
add
pop
lods
adc
test
xor
inc
ds
mov
idivl
push
sub
es
sbb
pop
push
fdivl
push
inc
cmp
xchg
inc
hlt
jns
hlt
push
arpl
sub
push
div
jg
rorl
imul
jecxz
mov
xchg
cmpsl
test
xchg
pusha
push
and
ljmp
les
pxor
dec
idivl
adc
ja
cmpsb
xchg
in
movsl
mov
rcr
push
push
cmc
mov
arpl
mov
fsubs
inc
mov
incl
or
jge
add
movsl
out
test
sbb
in
xor
jns
adc
int
out
sbb
rclb
leave
aas
cmpsl
std
lock
jg
popf
stos
mov
imul
inc
xchg
mov
test
and
push
ja
xchg
aam
out
test
outsl
xor
mov
insb
lahf
and
adc
popa
outsb
dec
dec
push
adc
pop
pusha
dec
cmpsb
gs
leave
xchg
dec
jb
mov
xor
xor
rcrl
xchg
addr16
outsl
sub
mov
jbe
push
repnz
cmp
sbb
or
mov
xchg
mov
xchg
adc
and
push
and
jecxz
dec
xor
imul
jbe
andl
push
mov
or
adcl
adc
push
sbb
xor
lret
aas
xchg
cmp
or
dec
dec
rcll
mov
push
aas
xchg
shrb
jne
mov
call
xor
fmull
xor
dec
addr16
repnz
add
pop
push
mov
xchg
fcmove
inc
repz
jmp
adc
cld
dec
pop
add
xor
cs
add
cmp
clc
inc
fsqrt
dec
sbb
cwtl
fisubrl
cwtl
test
mov
jmp
test
int
cmpsl
xor
cltd
cmp
popf
nop
aas
push
js
cmp
lret
out
xor
jnp
push
jnp
bound
addr16
or
jge
stos
cmp
jg
call
inc
js
lret
mov
dec
mov
mov
stos
dec
js
int
xchg
mov
sbb
sbb
xchg
pop
sahf
add
js
popf
dec
ds
mov
pop
sbb
jae
push
test
xchg
imul
fiaddl
add
mov
adc
lock
mov
and
add
mov
data16
push
popa
test
leave
xchg
push
nop
scas
xchg
xchg
popa
sub
les
add
jo
cmp
add
dec
mov
into
ret
mov
clc
and
sub
dec
add
outsl
jle
or
sub
xchg
pop
sbb
in
jmp
or
dec
dec
add
xor
dec
mov
out
jae
add
lods
cmp
and
dec
in
das
psubsb
sub
sub
movsl
jge
sub
sbb
sbb
fdivrl
jmp
sarb
inc
scas
or
lds
lcall
jne
pop
stos
push
pop
in
test
test
mov
jmp
push
loopne
jae
out
inc
sub
mov
imul
aas
cmpsb
out
pop
clc
inc
jmp
out
das
notb
jle
xchg
pushf
and
pop
leave
lret
ret
loope
js
lret
pop
mov
movsl
and
xchg
inc
scas
mov
outsl
pop
push
std
xchg
mov
push
push
inc
int3
sbb
insb
xlat
movsb
xor
add
or
adc
and
int
xchg
dec
dec
adc
gs
leave
lods
or
push
testl
cmc
and
mov
pop
out
pop
out
rorl
push
aaa
or
lods
sarb
dec
sti
xchg
pop
sbb
pop
push
jo
clc
outsb
sbb
cmp
mov
or
mov
xchg
pop
and
xlat
jb
sub
cmpb
push
nop
cmp
dec
fidivrl
mov
repz
or
and
jns
cltd
ljmp
fisttps
imulb
fmull
mov
sub
and
jg
lock
fwait
add
ret
sub
xor
inc
das
mov
lds
int
sahf
pop
icebp
or
jno
fld
xor
in
xorl
std
cmpsl
mov
or
retw
mov
cmp
mov
repnz
pop
in
cmc
addr16
outsl
ds
push
in
fdivrs
sbb
fwait
leave
mov
lea
mov
push
add
inc
mov
popf
push
adc
push
dec
mov
jae
or
outsb
in
lods
mulb
mov
ss
out
fisttpl
sbb
loopne
es
cmp
xor
imul
jp
mov
testb
bound
inc
sbb
outsl
dec
hlt
jp
xchg
iret
or
out
loop
fnstenv
jmp
mov
aad
es
pop
insl
fdivl
aad
xchg
test
insl
dec
jle
fwait
ds
nop
jg
xchg
clc
push
or
jl
mov
jno
es
sub
into
mov
imul
mov
lcall
inc
aaa
lahf
int
push
jno
pop
jg
mov
adc
sub
xor
push
xor
outsl
mov
fcomps
divps
sub
ja
adc
std
incl
jle
push
pop
dec
test
cmp
js
scas
jnp
jnp
jb
xchg
jge
push
mov
out
movl
aad
xchg
cmp
pop
adcb
pop
fsubl
pop
mov
push
pop
add
mov
insb
aam
sbb
inc
adc
sbb
in
fnstenv
loope
shlb
movsb
cli
out
adc
jl
xorb
out
push
movsl
mov
out
fbstp
sub
cmc
jo
fcoml
shll
enter
mov
and
pop
mov
sbb
es
imul
orl
xor
lods
outsb
xchg
cmpsl
adc
lcall
rorl
les
out
jl
xchg
mov
mov
adc
push
shlb
dec
arpl
lret
xchg
jg
and
sub
sbb
cmpsb
pop
xchg
or
cmp
jecxz
cli
pop
sub
xchg
or
in
mov
sub
ljmp
cmc
movsl
jle
mov
mov
fcomip
rcrl
testb
lods
push
and
xor
xchg
xchg
subb
arpl
mov
lock
pop
fcomps
inc
mov
pop
mov
jle
sbbb
bound
cli
loope
subb
enter
sbb
insb
loop
sbb
and
in
nop
cmp
loopne
std
or
sbb
out
or
xor
out
mov
fwait
or
mov
add
call
aaa
in
sub
aad
pop
js
fcmovne
stos
dec
push
adc
cmp
cwtl
inc
aas
pop
and
mov
adc
mov
pop
pop
jbe
scas
es
repnz
push
rcrb
clc
setae
push
lds
xor
dec
mov
fstpl
gs
ss
mov
push
shlb
lahf
and
mov
out
jo
std
pop
or
push
lret
ljmp
ret
call
dec
movsb
xor
or
mov
arpl
push
or
mov
dec
jecxz
push
jo
test
sub
lods
roll
data16
cmpsb
std
popl
push
out
scas
data16
fldt
arpl
pop
dec
mov
jg
mov
jbe
shrl
push
dec
stos
push
std
push
jno
and
push
mov
fstp
mov
cli
mov
lods
test
lret
repnz
jge
or
mov
pop
mov
xlat
outsb
daa
jae
stc
inc
out
mov
and
inc
jnp
and
leave
arpl
add
shrl
mov
aam
xlat
nop
scas
push
push
pop
jl
int
out
sub
xor
scas
mov
pop
dec
pop
and
jmp
cmp
jle
fistps
das
lret
ret
mov
mov
jl
pusha
pop
arpl
xchg
jecxz
xor
scas
stos
add
cld
xchg
cmpsl
push
push
loope
xchg
jae
andb
or
jno
inc
and
mov
sub
cmp
lods
adc
mov
or
pop
mov
inc
sti
or
pop
fldt
mov
mull
scas
test
fcoms
xchg
cmpsl
faddl
iret
js
movb
mov
cld
jg
ljmp
sub
mov
mov
push
cs
mov
push
xchg
mov
add
out
xor
into
or
inc
std
mov
dec
mov
lds
iret
aad
dec
mov
push
push
xchg
arpl
cmpb
xchg
mov
bound
scas
out
and
pop
lods
fisttpll
sbbb
test
lret
inc
add
rclb
mov
sub
adc
mov
xchg
loopne
outsb
or
mov
xor
daa
movsl
mov
mov
sbb
decl
loope
hlt
mov
jne
push
adc
cmp
scas
test
mov
mov
inc
cmp
xchg
xchg
xor
outsb
fildl
sbb
daa
pop
aad
gs
mov
and
jo
aad
and
pop
je
jl
mov
jb
test
out
mov
mov
push
les
sbb
movsb
jl
dec
sbb
inc
loop
adc
xor
pop
hlt
mov
push
sbb
repz
pop
pop
dec
push
xchg
test
imull
dec
idiv
imul
cmp
les
out
mov
mov
push
fwait
pushl
es
das
arpl
hlt
inc
leave
pop
shrl
push
adc
xchg
jecxz
inc
les
pop
cmpb
and
mov
call
in
jnp
cmc
push
loopne
loope
fwait
in
or
pop
lcall
insb
mov
xchg
pop
enter
mov
sub
sub
pop
int3
xor
pop
pop
imul
mov
cli
add
daa
add
popa
lea
mov
inc
lret
and
xor
sub
iret
test
das
xchg
aam
test
push
xchg
pusha
imul
gs
lret
insb
push
mov
in
add
pop
imul
dec
nop
sub
in
and
out
out
mov
stos
inc
pop
cmp
movsb
sub
sub
dec
dec
sub
mov
pusha
or
jae
repz
xchg
xchg
mov
lods
pop
sub
mov
xor
fimull
push
mov
pusha
aaa
dec
mov
aaa
pusha
inc
mov
lret
adc
push
fsubrs
outsb
mov
popa
sub
sbb
lcall
in
pop
shrb
enter
fdivs
xchg
andl
rcrl
mov
sarb
push
js
ret
xchg
add
jne
mov
cmp
or
test
inc
in
dec
or
dec
out
arpl
fnstenv
fldt
adc
fistpl
cmp
cld
nop
fisubl
ljmp
mull
mov
int
and
data16
jo
push
dec
dec
arpl
cmpsl
sarb
mov
push
insb
icebp
rclb
sub
ret
in
pop
out
scas
lret
std
xorb
rorb
push
js
xlat
inc
arpl
push
push
jb
stos
mov
lods
sbb
mov
push
testl
test
add
sub
jecxz
imul
jl
adc
arpl
cmc
pop
mov
clc
or
mov
pop
std
enter
pop
mov
sahf
xor
mov
int3
loop
sbb
mov
sbb
shll
mov
mov
xchg
and
dec
popa
test
mov
loope
mov
inc
sbb
mov
test
insl
icebp
push
xchg
push
add
or
popa
sbb
jbe
loopne
mov
jg
test
mov
mov
cld
cmp
dec
lahf
test
jecxz
fsqrt
insb
pop
jl
xchg
jbe
cs
xor
aam
or
cmp
push
push
and
sub
leave
cmp
jae
push
je
jle
aam
mov
icebp
dec
cmp
loope
and
xchg
insl
mov
mov
dec
cmp
popl
inc
cmpl
inc
mov
shlb
ret
add
and
mov
out
out
sub
loope
fcmovnbe
xchg
ljmp
test
out
pop
test
mov
dec
push
shrb
icebp
pop
lods
mov
stos
jno
std
mov
add
push
test
dec
mov
dec
pop
out
push
and
lahf
xchg
ficoms
add
mov
js
sub
mov
es
das
sbb
loopne
add
adc
dec
addl
jg
hlt
arpl
xchg
push
sub
sub
js
push
inc
sbb
cwtl
xor
dec
fidivrl
das
cmp
test
loop
sbb
call
sbb
inc
dec
mov
nop
lods
dec
xorb
cmp
and
push
outsl
and
das
jg
jp
push
xchg
xor
rorb
sbb
test
jns
mov
out
cmpsb
adc
mov
in
cld
pop
push
dec
pop
sbb
addr16
mov
dec
add
out
mov
pop
sahf
mov
inc
pop
dec
andl
fwait
add
xor
lods
movsl
xchg
and
jecxz
pop
imul
out
mov
in
inc
adc
lock
mov
jp
lods
dec
call
insb
sahf
int3
xchg
pop
cmp
lds
pop
fcoms
test
sbb
mov
rorl
lret
fstpl
in
inc
fwait
rcrl
add
sub
rclb
imul
lds
pop
test
mov
ret
ret
xchg
inc
sub
rcrb
adcb
or
icebp
adcb
addb
imul
adc
xchg
in
cmp
xchg
lcall
adc
lret
mov
inc
mov
test
outsb
or
xchg
mov
pushf
pop
pop
push
or
in
inc
cmp
fwait
dec
or
stos
add
shr
sbb
xchg
xchg
mov
cli
cmc
movsb
call
aam
push
rorb
nop
pop
push
mov
add
pop
jo
jbe
pop
add
mov
adc
adc
or
lods
divb
fidivs
jp
jge
add
push
adc
inc
mov
dec
sahf
fs
xchg
ja
das
mov
pop
dec
adc
mov
push
sti
scas
cmc
sub
adc
jmp
movsl
and
cli
jp
enter
cltd
mov
xchg
je
js
cmp
and
inc
mov
pop
mov
xchg
ja
imul
xchg
sti
cmc
xchg
push
push
outsl
jmp
ret
mov
cmp
rol
lods
xor
pop
pop
outsb
cmp
enter
aas
scas
repnz
and
hlt
jmp
stos
mov
adc
inc
aaa
mov
icebp
cmp
dec
in
xchg
cmp
xchg
ss
push
cmp
xor
sahf
dec
fstl
pop
lods
jbe
loopne
and
out
mov
mov
mov
jno
mov
push
sbb
iret
pop
or
jb
into
addb
and
push
aas
cld
ret
adc
cwtl
sahf
push
ret
mulb
mov
shl
sub
aad
lcall
pop
sbb
addr16
dec
pop
mov
adc
jecxz
dec
pop
or
add
inc
test
cltd
jno
fidivs
add
and
push
cmp
lahf
cmc
mov
aas
xchg
test
mov
jno
lock
add
or
out
ds
xchg
cmp
mov
cmp
repnz
jecxz
xchg
outsb
mov
stc
pop
lods
fmul
mov
xchg
mov
xchg
repnz
mov
jno
fwait
cmp
nop
inc
pop
insl
add
int3
test
sub
mov
dec
outsl
scas
std
cmp
push
and
bound
and
dec
xchg
xor
lds
pop
mov
jnp
fneni(8087
cmpsl
xchg
icebp
out
mov
jbe
ljmp
shl
ds
int3
jmp
clc
mov
push
sbb
aaa
stos
lahf
adc
std
sbb
sbb
shlb
xor
insb
or
repnz
mov
pop
adcb
jne
test
push
mov
loop
cmp
mov
mov
dec
rclb
nop
xchg
neg
jge
xchg
test
sbb
add
cmp
mov
or
mov
cld
dec
pop
fwait
jbe
jl
fistps
cmp
cmpsb
flds
dec
btr
mov
clc
sub
in
lds
iret
aaa
xchg
aad
out
daa
pop
js
int
push
les
mov
push
sbb
inc
mov
xchg
push
das
hlt
loope
xchg
pop
cmp
mov
push
aaa
fidivrs
cmpsl
inc
fadd
mov
add
adc
hlt
or
mov
xor
das
int3
fmuls
cld
jmp
xchg
packsswb
dec
enter
daa
dec
cmp
adc
sub
jb
adc
inc
cltd
aad
out
cmp
or
cmc
mov
gs
mov
pop
dec
adc
std
xor
xchg
shlb
add
imul
jnp
mov
stos
sub
popa
and
mov
icebp
hlt
mov
mov
insl
jnp
fs
ljmp
stos
and
mov
leave
cmc
call
out
xchg
gs
addb
sbb
ja
pop
sti
sub
jae
enter
fidivs
or
adc
int
cli
repnz
icebp
mov
sti
in
shll
dec
mov
daa
scas
inc
cld
stos
into
sbb
push
mov
in
fwait
push
dec
out
push
pop
mov
push
sbb
add
xlat
lock
rclb
mov
int
xchg
int
xor
lods
enter
imul
ds
sbb
sub
inc
push
cpuid
iret
out
dec
mulb
arpl
mov
push
push
call
enter
cmpsl
sbb
add
gs
dec
scas
nop
add
xchg
cwtl
loop
aaa
jae
adc
clc
dec
inc
xchg
lds
sbb
mov
push
adc
jge
adc
lds
pop
sbb
adc
xchg
scas
push
mov
lret
push
les
ds
dec
nop
xchg
pop
test
lret
outsl
and
jecxz
addr16
sub
mov
rcl
addr16
into
insl
dec
dec
dec
stos
xor
rcll
push
pusha
sahf
and
stos
xchg
ljmp
stc
push
mov
sub
adc
mov
jmp
jmp
fcmovu
sub
mov
sbb
push
packuswb
les
cwtl
dec
inc
push
cmp
loope
ror
scas
loop
ljmp
in
enter
les
inc
inc
arpl
fbstp
cmpsl
jmp
mov
inc
xchg
xlat
xchg
scas
loopne
cld
jno
sbb
pop
jnp
dec
xchg
orl
dec
push
push
pop
sub
mov
jae
cmp
fsts
sbb
insb
jns
test
hlt
aaa
fistpl
or
pop
ljmp
enter
sti
fstl
insl
sti
fidivrs
scas
xchg
out
fwait
dec
mov
ljmp
lods
out
cmp
int3
inc
test
cs
test
stc
leave
stc
aas
inc
test
sbb
roll
arpl
jno
mov
pusha
loop
inc
sub
push
insb
dec
pop
push
mov
in
fimuls
call
cmp
popa
frstor
or
push
stos
repz
inc
cmp
sub
mov
mov
es
push
enter
out
je
xchg
add
testb
jl
inc
and
push
int
in
dec
sub
and
cmp
lea
add
xchg
daa
push
out
outsb
mov
arpl
pop
cmpsb
hlt
dec
sub
push
or
and
pop
and
sub
push
imul
sub
ret
xlat
inc
push
por
outsb
or
daa
sbb
jo,pn
add
pop
mov
jg
mov
popa
cmp
xor
ss
mov
fldl
and
les
add
mov
inc
inc
mov
repnz
stos
sbb
add
adc
push
jns
dec
and
pop
push
add
mov
push
in
jle
aad
dec
cmp
inc
sahf
aas
mov
hlt
das
fnstsw
insl
sbb
pop
test
xor
xchg
dec
xchg
mov
inc
xor
xor
xor
in
std
stc
in
sbb
test
sbb
sub
mov
scas
fldcw
pop
test
rcl
fs
jp,pn
sbb
mov
xchg
leave
testl
push
imul
push
faddl
xor
shr
and
nop
roll
insl
xchg
xchg
xchg
mov
imul
ljmp
dec
and
lahf
sub
flds
mov
or
imul
movsb
cmp
imul
mov
mov
out
push
push
jb
fildll
sub
inc
add
xorb
sub
lahf
dec
dec
fcmove
es
lds
loope
adc
inc
adc
mov
sbb
ret
pop
lds
push
leave
nop
dec
mov
jae
sbb
pop
xchg
vandnps
inc
mov
sub
or
push
fiaddl
mov
add
icebp
push
loope
mov
addr16
jnp
stos
cmp
xor
outsb
dec
sahf
sbb
xchg
aam
sbb
inc
out
mov
sub
inc
pop
mov
jb
xor
dec
imul
pop
mov
pop
push
aaa
stc
repnz
xor
xchg
lods
ljmp
loop
add
aam
inc
loop
int
mov
in
das
cld
popa
adcl
pushf
or
stc
or
dec
cmp
clc
or
repz
adc
aaa
call
je
je
xor
loop
cmp
jecxz
sbb
sarb
xor
lahf
test
and
ret
popf
js
adc
cs
cmp
and
outsl
sub
mov
mov
xlat
dec
inc
jbe
ja
or
xor
mov
into
out
mov
fisttpl
hlt
xor
std
movsb
das
lahf
stos
in
add
shlb
cli
in
ficoml
nop
iret
les
les
sub
lahf
jns
pop
jo
mov
fnsave
incb
dec
sbb
sar
in
mov
ror
dec
sub
or
adc
stc
xorb
js
std
in
push
dec
mov
in
iret
pusha
out
mov
repz
pushf
push
push
cmp
popa
call
xchg
adc
loop
loope
mov
push
cmc
and
adc
in
aas
jp
pop
xchg
pop
or
fsubr
mov
jge,pt
sbb
mov
xchg
pop
sbbb
adc
cmp
imul
dec
or
cld
stos
cmp
mov
mov
cld
mov
dec
jno
movb
enter
stos
push
jno
pop
lcall
xchg
arpl
into
scas
test
out
in
mov
push
cmp
lock
push
clc
mov
add
js
push
adc
mov
test
jle
push
xchg
enter
nop
stc
mov
xchg
sub
mov
or
pop
xor
mov
cmp
add
pop
mov
fildll
stos
hlt
or
cmc
adc
and
pushf
add
ret
mov
xor
jbe
iret
rol
inc
xchg
ss
sub
flds
call
leave
pusha
loopne
stc
test
fwait
ja
cmpsb
dec
push
sbb
mov
xor
data16
mov
decb
aaa
enter
inc
test
aam
xchg
out
stos
shlb
lcall
mov
iret
negl
cmp
add
jg
jp
mov
incl
icebp
leave
in
cmp
test
incl
hlt
dec
add
jl
jle
cmpsl
shr
cmpsl
inc
sbb
loopne
dec
cld
add
rcrl
icebp
test
push
xlat
call
sbb
jae
popf
in
jecxz
scas
sbb
mov
adc
push
rorl
shlb
ljmp
rorl
cmpb
push
inc
cld
out
movsl
fisubl
repz
and
push
inc
jg
adc
loopne
in
rcrl
inc
push
mov
or
sub
adc
adc
dec
dec
adc
leave
dec
movsb
daa
and
cld
call
cmp
dec
dec
inc
cmp
cmp
sub
mov
mov
xor
sbb
push
or
push
das
jmp
aam
or
leave
inc
mov
cld
push
mov
add
pop
mov
xchg
mov
stc
cs
sub
pop
je
sub
mov
flds
dec
add
push
xchg
add
jne
lret
ret
iret
lahf
sub
push
in
mov
popa
and
les
xor
and
leave
add
add
aaa
ret
popl
inc
popa
mov
cmp
std
push
fstp
gs
push
cmpsb
out
mov
push
lds
xchg
mov
fnstcw
pop
inc
lret
cmp
cltd
add
push
xor
insl
pop
dec
sub
push
les
fdivrl
arpl
jle
mov
cmpsl
mov
jmp
jns
cwtl
jns
stos
fs
stmxcsr
dec
out
imul
xchg
or
bound
imul
and
imul
cs
dec
push
in
rclb
in
pushl
or
sbb
push
shll
rcr
pop
jo
mov
xor
jnp
js
addr16
add
mov
enter
push
cltd
xchg
push
jno
xor
in
jg
adc
ja
addr16
loopne
mov
hlt
sbb
loop
lret
or
rcl
stc
shrb
adc
cs
and
cwtl
add
into
mov
pop
mov
es
repz
dec
and
pop
add
gs
cmc
jb
push
das
xor
les
scas
and
in
push
ds
add
xor
int
aad
mov
and
icebp
sti
shrb
inc
insb
cmpb
xchg
cmpsb
fiaddl
cmp
fisubs
daa
lds
push
shlb
test
mov
xchg
fwait
pop
mov
inc
or
adc
sbb
or
mov
aaa
mov
inc
imul
mov
sub
push
push
jno
push
dec
addr16
jne
addb
pop
jle
out
pop
roll
mov
mov
xor
mov
cli
inc
sub
dec
jge
inc
or
stc
mov
xchg
test
in
cs
inc
lret
add
mov
ja
push
mov
add
mov
or
cmp
xor
sar
aam
mov
ret
xchg
stc
rcr
call
cmp
in
lret
add
or
pop
xchg
outsl
push
or
out
push
cmpsl
inc
mov
sub
ret
xor
jno
dec
mov
push
rcr
cmp
cltd
pop
xor
or
or
loop
enter
pusha
mov
mov
insl
lcall
fistl
inc
cltd
add
mov
push
les
test
sbb
push
es
xchg
arpl
xor
mov
repz
inc
pop
and
cmp
outsl
and
add
jo
xor
cmp
clc
outsl
lea
movsb
aaa
mov
lret
xchg
cmp
pop
inc
test
out
cwtl
jg
mov
repnz
mov
out
sub
jbe
dec
into
dec
pop
sti
test
neg
dec
add
pop
outsb
pop
sub
mov
scas
cmp
jo
lods
cmpsb
pop
lock
jno
in
cmp
and
push
adc
or
pop
mov
fcmovne
outsb
push
leave
inc
ret
jne
leave
mov
mov
loopne
jl
cwtl
testb
and
and
and
fdiv
cwtl
adc
in
leave
lea
dec
js
adc
xlat
cwtl
or
jp
mov
in
and
inc
adc
popf
test
sbb
iret
cmpb
scas
sbb
lret
cs
jp
repz
aas
cld
cmp
movsl
xchg
rolb
fst
pop
rolb
jecxz
add
mov
jge
fadds
pop
jne
divl
fs
inc
jg
jne
mov
nop
adc
filds
dec
dec
shll
push
inc
dec
jne
inc
bound
aad
xchg
mov
push
outsl
cld
imul
insl
pop
xchg
or
mov
stc
sbb
fistps
mov
mov
push
jle
sub
imull
aaa
mov
movsl
jp
daa
sub
inc
dec
ss
mov
lret
stos
mov
dec
fnstenv
lods
xchg
outsl
inc
adc
test
icebp
or
cmp
ja
repz
mov
out
and
repnz
js
int
xchg
cmp
and
cmp
outsb
dec
pop
pop
sbb
jmp
test
std
mov
sub
and
push
fs
xchg
mov
aaa
outsl
imul
push
mov
pop
cli
dec
jno
clc
rclb
mov
dec
add
add
aaa
cwtl
xchg
pushf
xchg
cmp
push
dec
add
inc
mov
aas
sub
mov
cmc
mov
lret
pop
mov
mov
das
jo
out
daa
push
sbb
pushf
mov
dec
sub
sub
les
dec
xor
pop
aad
inc
hlt
mov
iret
mov
sbb
icebp
clc
or
sub
cmpsl
test
test
testb
jae
aad
cmp
mov
sahf
jbe
xor
mov
out
mov
jmp
hlt
xchg
push
xchg
test
cmpsl
mov
cmpsl
mov
addr16
daa
inc
adc
movsb
mov
mov
inc
enter
mov
jno
inc
and
jl
ljmp
or
sub
add
push
pop
out
cld
push
mul
in
cmp
cmpsb
lock
dec
inc
adc
inc
cwtl
pop
pop
shrb
in
mov
dec
in
test
sub
sub
push
sbb
rcrb
loop
inc
adc
sub
lret
inc
insb
cmpsb
jg
push
mov
pop
das
or
jp
fiaddl
mov
out
loop
mov
fimuls
jecxz
fildl
add
mov
stos
adc
inc
ja
pop
clc
sbb
loope
mov
and
pop
or
jae
push
nop
lods
es
xchg
push
cmp
lea
jne
cmp
lea
idiv
cmp
lods
sti
add
outsl
in
mov
push
stos
jb
push
clc
in
es
adc
ds
mov
jne
test
ds
fstpl
cs
das
cli
mov
repz
xchg
mov
mov
and
shrl
mov
pushf
clc
lea
mov
push
out
fwait
pop
mov
enter
mov
das
cmpsl
xor
cmpsb
mov
data16
mov
ret
pop
mov
xchg
lods
insb
push
mov
add
mov
iret
lds
stos
shl
std
sub
add
sub
popa
mov
lret
add
cmpsl
pop
jnp
push
frstor
add
sub
ret
push
mov
loope
mov
xlat
mov
int
jae
inc
repnz
mov
je
in
arpl
mov
dec
sbb
cs
xchg
pop
dec
cli
xchg
push
jle
xchg
rcll
xchg
jle
dec
cld
shl
ja
dec
push
push
divb
jmp
lods
ret
and
sbb
mov
pushl
push
repz
sub
lcall
addr16
push
mov
mov
clc
and
fidivs
xlat
lock
cmp
stos
jo
sbb
inc
sbb
add
mov
das
fcoms
xor
ss
sarb
in
ljmp
sahf
jne
test
xchg
xchg
cltd
dec
jne
mov
cs
repz
mov
jns
leave
cmp
popa
xor
cmp
mov
and
andb
sbbb
fildll
call
stos
outsb
das
pop
xor
mov
mov
out
push
in
out
mov
inc
cmp
mov
dec
mov
adc
repz
outsb
or
pop
jecxz
out
rcrl
sbb
pop
xor
add
pop
adc
ret
xchg
fidivrl
or
xor
sbb
insl
sub
lods
enter
jb
bound
js
push
ljmp
pop
daa
pop
mov
orl
stos
imul
mov
xbegin
adc
inc
fldl
mov
mov
sub
subb
getsec
adc
icebp
out
fnstenv
ret
mov
pop
mov
add
lahf
mov
mov
jns
push
ds
mov
fwait
lcall
add
add
xchg
stos
int3
fmuls
jmp
adcl
sub
xor
push
in
jp
fwait
and
bnd
clc
xchg
rolb
pusha
fstps
jnp
mov
sti
add
sbb
add
in
iret
push
mul
imul
inc
cmp
or
jne
add
das
sub
repnz
dec
jnp
testl
or
and
inc
movsl
fwait
dec
jbe
int
or
jmp
in
in
cmp
mov
outsb
clc
int3
xchg
mov
mov
mov
cmp
mov
rolb
adc
lret
adc
js
cmp
stos
outsl
mov
fdivs
inc
pop
push
sbb
js
cmp
xor
dec
test
pcmpgtw
test
jno
or
repz
xor
mov
mov
xor
sbb
xchg
gs
jns
imul
cld
ljmp
cli
repz
xchg
jecxz
icebp
mov
xor
sbb
push
push
sbb
pop
imul
pop
je
add
inc
jo
mov
addr16
sub
or
mov
push
pop
or
mov
ret
imul
cmp
jl
out
in
arpl
sbb
dec
hlt
xor
cwtl
inc
ret
mov
std
and
repz
dec
fdivl
mov
clc
mov
cli
jl
in
pop
push
mov
sbb
movsl
int
idiv
xor
subb
xchg
adc
hlt
int
mov
in
inc
and
inc
ja
ret
test
test
ss
add
push
hlt
arpl
in
mov
mov
mov
loopne
es
push
adc
jae
shr
cmp
or
in
adc
mov
loop
cmp
xor
pop
sti
outsb
iret
repnz
xchg
lods
cmpsb
popa
test
adc
sub
mov
push
js
inc
std
vpsubb
sarl
dec
inc
sbbl
dec
lcall
inc
mov
xchg
scas
and
lea
jmp
inc
sbb
test
cltd
mov
mov
nop
pop
ret
pop
inc
sub
pop
push
fwait
in
xcrypt-cbc
cmpsl
push
xchg
sbb
dec
mov
outsl
arpl
mov
jb
xchg
int
das
enter
fneni(8087
adc
push
and
pop
push
and
mov
ja
inc
in
int3
fistpll
or
add
leave
int
sub
in
cwtl
add
cmp
sbb
pop
xchg
lahf
xor
jecxz
xchg
cmp
mov
ds
cmp
pop
lods
inc
jle
ficomps
adc
jne
inc
xor
mov
pop
inc
out
pop
test
movl
xor
push
fsubrl
gs
jl
dec
push
jb
sub
iret
jge
jo
jmp
cltd
mov
mov
andb
push
push
test
sub
dec
test
push
fadds
dec
add
jmp
mov
cmp
push
les
je
test
jp
in
daa
add
into
mov
das
push
push
rcl
xor
mov
mov
inc
adc
cmpsl
data16
out
je
lahf
mov
mov
add
ss
addr16
cmpl
dec
sbb
enter
ja
sub
fwait
enter
dec
add
in
fstpl
insb
iret
sbb
and
push
fs
push
xor
test
sahf
inc
mov
hlt
xor
lret
xlat
push
lods
test
mov
inc
sbb
cmp
nop
repz
mov
lods
sbb
and
fcoml
dec
ljmp
jne
lret
jg
call
or
and
mov
lret
mov
stos
xor
mov
movsl
mov
cli
ja
int
mov
mov
out
aaa
jmp
jp
ljmp
rcl
rcl
sub
hlt
mov
popa
pop
push
daa
fucomi
jne
aaa
sub
arpl
cmpsb
enter
imul
add
les
adc
shl
jno
leave
mov
cmp
inc
dec
fnstenv
sarl
pop
outsb
adc
lock
fs
not
jbe
mov
lods
jne
dec
pop
out
in
imulb
imul
jp
dec
push
pop
cmpsb
mov
xor
sub
xorb
mov
and
fdivrl
sub
inc
aam
daa
pop
cmp
push
fs
rcll
loope
xor
adc
fninit
mov
int3
mov
clc
cmpsl
or
or
and
and
pop
cmp
add
ret
aam
mov
jecxz
pop
mov
sahf
lret
scas
int3
push
pop
loop
pop
mov
adc
adc
and
test
fbld
mov
shlb
xchg
ret
out
xor
jno
inc
mov
push
add
aad
stos
sbb
movsl
jo
mov
adc
out
ds
mov
ja
cmp
cmp
cmpsb
invd
dec
jg
push
inc
push
shll
adc
mov
cmp
insl
inc
pushf
das
or
pop
jg
ja
jle
popa
pop
push
or
sub
ret
sbbb
push
mov
xchg
inc
and
clc
xchg
dec
push
sbb
aad
pop
repnz
je
movsb
xchg
cmp
loop
add
push
cli
ljmp
dec
lcall
xlat
mov
imul
fisubrl
mov
add
mov
xor
jno
push
inc
stos
xchg
mov
in
stos
movsb
jp
cmp
lcall
mov
dec
push
sbb
iret
add
stos
pop
lock
fldcw
add
test
jno
outsb
inc
int3
in
push
mov
or
xor
aaa
dec
das
imul
or
pop
push
cwtl
in
ret
ds
stos
pop
test
loopne
hlt
cmp
sbb
mov
cmp
fidivs
std
mov
roll
lahf
push
jp
adc
addl
xchg
xchg
in
fidivrl
sarl
mov
cmpsw
jbe
call
adc
leave
enter
xchg
inc
insb
cld
push
pop
inc
sub
pop
pop
pop
push
xor
mov
pop
jo
xchg
inc
mov
pop
cmpsb
sub
arpl
add
cmpsl
nop
adcl
int
fildll
mov
test
bound
test
adc
xchg
int3
iret
repz
out
add
xchg
inc
pop
aam
push
repz
cmc
cmc
xorb
dec
jmp
insl
sub
push
insl
out
test
sub
out
jmp
aaa
arpl
in
stos
pop
jb
int
jge
aaa
mov
adc
out
in
cmpsb
pop
sub
clc
sub
lds
icebp
out
lods
cmpsb
loopne
push
movb
sub
mov
push
pop
dec
adc
shl
out
in
or
lds
inc
cmp
pop
adc
sbb
and
testl
or
lea
loope
pushf
fimuls
test
add
add
inc
outsl
xchg
or
mov
std
inc
inc
mov
clc
shrl
fbstp
icebp
lock
addr16
sub
std
stos
rep
mov
ljmp
ds
aam
lock
lahf
cmp
jno
inc
cs
mov
f2xm1
jecxz
fs
sub
cmp
les
jns
pop
xchg
jecxz
pop
sarl
mov
imul
cli
jnp
xor
xor
push
or
fnstsw
pushf
xchg
inc
jl
pop
jle
test
xchg
sub
xchg
ljmp
mov
mov
ja
sbb
movsl
sub
mov
cmc
aas
into
jl
lret
mov
stos
mov
mov
sub
int
mov
adc
dec
out
add
push
in
lea
xchg
mov
and
inc
movsb
aam
sub
stos
ss
or
repnz
add
add
lret
repnz
lock
sti
ret
xlat
leave
fbstp
out
or
push
sbb
and
fs
mov
repz
xchg
in
mov
rcrl
add
inc
or
or
enter
xchg
cltd
icebp
js
jno
ds
push
pop
stc
bound
mov
jae
int
push
push
out
jecxz
aaa
mov
pop
lahf
inc
mov
mov
mov
ja
pop
or
inc
into
in
into
ss
scas
xlat
sbb
mov
jnp
cmp
sbb
fidivs
daa
jo
inc
mov
jecxz
data16
xchg
or
and
dec
mov
outsl
pushf
add
xchg
in
leave
jae
push
cltd
dec
mov
fcomps
std
loop
mov
fs
and
and
stos
mov
fcmovb
test
or
xlat
lcall
stos
cmpsb
push
stos
jns
clc
and
push
shrl
out
or
ror
les
mov
sub
scas
inc
and
pusha
sub
mov
outsl
mov
movsl
adc
pop
test
shlb
xchg
sti
test
cs
xor
lea
xchg
rorl
push
push
orb
lds
jbe
iret
mov
dec
mov
iret
add
int
js
xchg
pop
fwait
push
inc
mov
mov
mov
push
or
pushf
repnz
shlb
rorl
cmpsb
push
sbb
fsubrs
cmp
data16
push
inc
jae
lcall
shrb
shrl
nop
mov
mov
adc
or
mul
jg
sub
push
stc
mov
sub
in
push
sub
add
mov
mov
add
ret
int
daa
mov
lcall
dec
stos
or
inc
std
into
adc
mov
mov
cmp
stos
mov
add
rolb
mov
push
jns
loopne
xchg
add
popl
js
loopne
cmpl
mov
loopne
jne
lret
pusha
inc
or
xchg
add
rcll
lods
insl
iret
cmc
jp
xor
mov
dec
pop
cmpsl
pop
lods
mov
cli
inc
mov
xchg
ret
iret
int
fimull
icebp
mov
mov
cld
inc
cmpsl
add
mov
sbb
mov
mov
sbb
mov
test
xchg
add
js
sbb
mov
jge
out
icebp
shlb
sbb
mov
pop
inc
outsb
pusha
loopne
in
sbb
sahf
add
je
xor
fmuls
push
sar
cmp
call
or
enter
push
aas
inc
das
xchg
int
arpl
dec
notb
mov
dec
outsl
adc
rorb
sarb
adc
mov
nop
cmpsl
pop
addr16
hlt
mov
sub
mov
jns
fmull
shrl
sbb
arpl
mov
sar
dec
mov
pop
inc
push
or
mov
or
mov
std
inc
mov
mov
jnp
test
mov
cli
mov
std
push
lock
ret
iret
sbb
mov
sub
sbb
jg
jb
or
pop
insb
es
pop
inc
jecxz
fwait
arpl
jae
mov
fadds
dec
dec
and
mov
pop
aas
sub
ds
push
in
ljmp
out
lods
sub
leave
lods
mov
into
out
ret
fdivl
push
cmp
les
adc
mov
icebp
ret
and
in
sti
inc
fsubs
push
ret
cs
clc
shrb
rol
out
or
sti
xor
push
in
mov
aam
iret
in
add
test
adc
jb
xchg
cwtl
cmp
ret
in
jecxz
stc
insl
push
mov
dec
into
testb
aaa
cmp
aas
mov
pop
add
sahf
push
sbb
mov
lret
in
ret
mov
loopne
lods
fsubrl
xchg
rcll
in
bound
out
out
lods
dec
add
add
std
pop
hlt
xchg
xor
and
lcall
push
leave
adc
scas
xor
adc
into
jne
push
sbbb
in
shrb
xchg
das
and
test
inc
stos
add
dec
ja
xchg
mov
dec
shrb
mov
xchg
sbb
mov
loopne
mov
or
das
out
adc
jb
and
dec
add
addr16
int
fimull
or
jge
cmpsl
movsb
je
and
mov
xlat
test
cmp
cmc
int
outsl
test
xchg
into
das
xor
mov
and
in
in
pop
orl
mov
negl
xor
and
gs
cs
ja
cmp
sahf
fbld
push
rcr
inc
jo
sbb
hlt
andb
clc
inc
sub
in
ja
loop
sbb
cmpsl
loope
std
mov
mov
push
mov
jno
mov
push
lret
pushf
fcomp
and
arpl
push
or
push
sbb
mov
xchg
pop
aam
jae
loopne
or
mov
stc
gs
icebp
sahf
push
bound
rorl
rorb
mov
cmpsl
dec
xchg
and
xor
push
jbe
fbstp
fprem1
sub
leave
jp
jp
ja
or
mov
add
sub
ljmp
insl
shlb
xchg
push
shl
inc
das
adc
add
sub
mov
jle
sub
mov
mov
push
cmove
iret
xchg
test
mov
lahf
dec
lcall
sbb
adc
inc
fucomip
mov
xchg
hlt
xchg
xchg
sbb
pop
scas
lods
roll
sbb
fs
jge
push
xor
cmp
jl
push
rcrb
sbb
mov
adc
out
mov
sub
inc
cmp
out
push
inc
mov
daa
xchg
std
mov
lods
push
mov
hlt
gs
inc
out
push
pop
dec
push
js
xor
jl
jb
pushf
mov
jecxz
xchg
lods
roll
and
lret
and
leave
add
outsb
jb
stos
dec
aas
xchg
mov
cwtl
loopne
into
dec
mov
sub
xchg
mov
jl
adcl
xchg
adc
addr16
inc
cmc
addr16
ja
xlat
outsl
addr16
pop
push
cltd
iret
jne
pop
cmpsl
cmp
mov
int
je
aaa
icebp
mov
dec
lret
fisubs
cmp
sti
xor
pop
dec
popf
roll
jle
pop
ret
int3
mov
dec
dec
aas
inc
bound
adc
enter
shll
dec
cmp
out
fistpll
push
mov
mov
push
test
lock
arpl
or
test
mov
or
dec
push
inc
dec
push
dec
lret
fs
dec
outsb
dec
mov
or
in
ror
push
cmp
fwait
insl
inc
stos
aas
mov
jno
comiss
mov
mov
mov
xchg
xchg
repz
test
idivb
int3
xor
ss
lock
repnz
mov
rorl
ljmp
sti
lock
test
icebp
arpl
imul
fbstp
scas
mov
cmp
into
clc
add
pop
jecxz
fcmovnbe
add
pusha
addr16
icebp
repnz
jo
dec
pusha
loopne
imul
jbe
sbb
loope
jno
add
jle
push
xchg
sarb
mov
xchg
jne
xor
loopne
inc
cli
mulb
outsb
aas
fidivrl
sbb
inc
inc
clc
insb
je
or
xor
xchg
xor
jbe
int3
mov
shrb
jl
or
xchg
mov
lret
push
lds
or
adc
mov
in
or
push
aaa
stos
mov
xchg
test
int3
dec
mov
out
jne
js
add
ss
xorl
cmpsb
mov
jg
mov
mov
fsub
gs
xchg
clc
jb
mov
gs
loope
cltd
jge
loopne
outsb
hlt
add
lcall
lods
aam
add
push
shr
fmul
inc
lds
mov
jno
jecxz
cmp
lods
adc
adc
aaa
test
ja
in
imul
dec
stc
dec
dec
inc
aam
dec
ret
notl
ret
lret
mov
or
int3
movsl
push
addr16
sub
xor
rol
popa
shl
ds
pop
pop
es
pop
add
mov
pop
jnp
icebp
out
cmp
pop
jo
bound
mov
mov
icebp
dec
push
pusha
adcl
xchg
dec
fisttpl
imul
rcll
daa
gs
pusha
xor
insl
push
cmp
leave
test
outsl
stc
divb
or
nop
test
daa
cmp
push
adc
jg
inc
mov
popa
cli
mov
inc
ds
outsl
mov
testl
and
shll
or
pop
pusha
ret
cmpsl
xchg
mov
fucomp
stos
mov
push
adc
lcall
xor
push
dec
jns
jne
dec
xchg
sbb
jnp
sbb
push
inc
push
arpl
orl
in
insb
push
mov
or
xorb
iret
push
ljmp
and
xor
testb
or
stc
add
out
repnz
xchg
mov
test
popa
cmpb
iret
sub
jb
xchg
mov
out
lea
je
test
shrb
mov
dec
stos
inc
and
insb
sub
cltd
std
pusha
push
pop
cmp
test
push
pop
test
adc
pusha
aaa
outsb
iret
arpl
jg
mov
xlat
clc
jmp
or
adc
and
pop
aas
or
int
insb
inc
jbe
sbb
scas
cli
mov
push
std
inc
lcall
mov
movsl
inc
pop
cmp
fdivrl
int3
push
gs
loope
jns
xor
jp
or
test
sarl
xchg
push
add
pop
test
mov
pop
insl
popa
frstpm(287
sub
jno
sahf
mov
sub
or
imul
imull
push
xchg
xchg
push
jnp
mov
mov
inc
call
gs
mov
rorb
call
std
xor
fcom
fs
ja,pn
ret
in
pop
pop
xor
mov
jl
int
jae
adc
daa
pop
push
push
fstps
push
inc
sbb
fdivs
negl
xchg
fbstp
push
mov
xor
out
clc
or
mov
push
dec
push
loop
adc
push
jl
iret
pop
in
adc
in
and
adc
jnp
pop
xchg
divb
int
xchg
fadds
adc
mov
popa
repz
add
mov
ljmp
lahf
xchg
out
rorb
pop
and
cmpsb
icebp
aad
add
jmp
dec
xchg
gs
mov
mov
sub
pop
sbb
mov
and
addr16
xchg
aas
loope
cmp
into
xor
mov
mov
mov
loopne
adc
jae
movsb
nop
imul
add
xor
or
jb
je
outsl
gs
js
movsb
addr16
jp
lods
inc
sbb
adc
sbb
mov
movsb
adc
ret
cs
xor
mov
pop
inc
loopne
inc
cmp
pop
pop
aam
and
pop
bound
and
adc
pop
scas
or
mov
cmp
cmp
nop
cmp
shrl
movsb
outsl
imul
lret
cld
xchg
and
mov
mov
daa
adc
add
xor
push
add
pop
mov
add
xchg
or
inc
adc
int
jo
add
cltd
push
fnstcw
mov
sub
repz
sub
xchg
stc
iret
movsb
xor
imul
test
xchg
pusha
insl
mov
jp
inc
dec
bound
scas
push
movsl
xlat
out
and
addr16
mov
loop
cmp
jnp
sub
lcall
xchg
add
icebp
jmp
jne
stos
ss
ficoml
fsubrs
fisttps
mov
push
insb
inc
mov
mov
mov
test
and
out
push
inc
in
xor
mov
push
mov
pop
in
jge
pushf
outsl
fsubs
adc
aad
imul
pusha
aaa
cmp
sahf
sub
mov
pusha
dec
lahf
mov
fimull
jp
je
jns
popf
mov
mov
xchg
nop
gs
daa
sbb
js
cli
cmp
and
leave
pushf
cs
in
pop
testl
jp
iret
mov
in
push
inc
orl
mov
jne
sub
icebp
push
fcomp
add
pop
xlat
fsubr
pop
in
out
cmpsb
cmp
mov
inc
rorl
jb
insb
cli
cli
aam
mov
scas
fimull
aas
pop
dec
test
xor
sbb
decl
mov
not
loope
stos
add
mov
lds
outsb
sub
imul
nop
or
xchg
nop
rcl
lret
jmp
jmp
test
mov
movsb
ja
mov
imul
daa
fistpll
clc
sub
and
pusha
sub
inc
pop
cmp
movsb
xor
add
insl
lods
gs
testb
outsl
test
insb
nop
add
jnp
pop
cmp
xor
scas
test
pop
arpl
pop
dec
and
mov
and
cmp
add
test
adc
jb
leave
popa
and
outsb
cmpb
push
ficomps
lret
xchg
cmp
fidivrs
and
jne
test
jl
jae
mov
fmull
aas
imul
inc
outsl
fsubrs
shl
fmull
lds
mov
aad
pop
cli
sahf
xchg
inc
into
rorl
inc
adcb
pop
push
mov
fists
incb
data16
add
lods
fnsave
test
sbb
in
pusha
inc
gs
mov
sbb
mov
push
cmp
leave
pop
cmp
xchg
sub
cmp
stc
stc
dec
fiaddl
mov
orl
jmp
pop
sub
push
inc
cmpsl
xor
dec
sbb
push
repnz
mov
rcrb
cmp
mov
sbb
pop
je
cmp
fsubl
mov
jp
out
loop
addl
pop
mov
das
repnz
dec
int
sahf
or
sahf
xchg
int
aas
test
mov
dec
adc
in
dec
adcb
lods
inc
lods
in
shrl
and
int3
test
fisubs
lret
cs
and
test
hlt
test
push
push
pop
movsl
mov
xor
call
idivl
aam
rorl
insb
mov
mov
mov
mov
xorb
icebp
out
in
inc
daa
jmp
pop
mov
xchg
mov
xchg
fstl
or
mov
pusha
das
enter
and
xor
imul
js
fnstenv
mov
movsl
pop
sbb
inc
sub
les
sub
push
loop
dec
push
gs
adc
orb
insb
mov
mov
and
test
jecxz
sub
mov
loope
adc
jp
shl
and
add
mov
lret
jg
adc
mov
push
popa
dec
xchg
mov
aaa
xchg
mov
aam
mov
add
jnp
sahf
ja
or
and
daa
insb
push
out
xchg
outsl
cwtl
and
mov
jmp
hlt
cmc
mov
sbb
pop
int3
mov
jns
sub
mov
bound
jl
ds
mov
pop
pop
xchg
push
adc
lods
movsl
mov
call
push
lcall
xchg
or
and
sbb
pop
xor
gs
dec
scas
imul
add
xor
enter
mov
incl
and
jne
popa
out
frstor
pusha
decl
adc
mov
data16
fcoml
inc
jecxz
pop
test
or
push
popf
testb
out
jmp
adc
cmc
sbb
addr16
push
into
mov
push
xchg
cmp
cmc
dec
rorb
jmp
rcr
or
hlt
dec
xchg
mov
adc
push
lret
popa
out
push
cli
js
fimull
mov
sahf
or
pmullw
rcll
pop
pop
in
jns
test
pop
fldt
xchg
int
dec
icebp
shrb
inc
pop
aam
mov
cmpsb
outsb
sub
lret
sub
adc
pop
aas
test
mov
in
jo
cmpsb
pushf
mov
ss
iret
out
and
xchg
or
jecxz
imul
jg
fwait
mov
out
xchg
test
out
hlt
repz
inc
push
fisubrl
bound
rclb
enter
sbb
push
jg
dec
lds
add
arpl
ss
push
jbe
dec
lcall
xorl
mov
movsb
inc
sbb
into
dec
loopne
or
jle
jo
push
aaa
nop
outsb
xorl
add
and
mov
push
xchg
adc
pop
int
lds
lcall
push
mov
mov
mov
push
in
and
inc
sbb
inc
popa
sub
cmp
dec
add
pop
in
popw
leave
cmp
jb
fwait
cwtl
and
test
repz
clc
cmp
andb
xlat
adcl
mov
das
popf
jmp
dec
fstpl
and
enter
fwait
aaa
inc
mov
mov
sub
push
cmpb
inc
jecxz
mov
addr16
pop
adc
mov
bound
repnz
addb
jmp
jns
stos
imul
adc
imul
mov
sub
inc
fldt
loopne
movsl
push
sub
lret
bound
mov
jno
mov
notl
call
xlat
cmp
or
popf
mov
dec
mov
cmpsb
popf
jo
mov
sub
mov
push
lock
push
add
mov
sbb
fbld
cmc
mov
sbb
inc
lcall
out
xor
add
addb
mov
push
std
inc
iret
out
mov
sub
cmp
rcr
and
push
aad
adc
sub
jecxz
push
fldenv
das
ror
cmp
cmpsl
cld
jmp
lock
dec
loop
fwait
and
jns
pop
imul
js
pop
dec
popf
outsl
popa
cmp
iret
cli
cmp
sbb
add
xchg
push
add
test
adc
cmc
movsl
add
jnp
imul
and
mov
repz
hlt
cs
cmp
sbb
xchg
dec
adc
push
pop
mov
inc
jge
lahf
dec
pop
cwtl
jge
adc
and
fcomp
pushf
ret
add
adc
cmp
cmp
xorl
mov
ljmp
cmpsl
xor
bound
arpl
int
sub
stos
sub
push
mov
scas
add
out
xchg
or
or
jbe
fcmovnbe
sbb
fistpll
sbb
pop
mov
movsl
or
push
mov
cltd
sbbl
mov
pop
or
aam
adc
push
int3
les
imul
xor
push
lret
jge
jg
sar
aas
ja
add
lods
add
lcall
inc
pop
ret
popf
push
sbb
inc
loope
jbe
xchg
js
xchg
add
lahf
stos
pop
in
cwtl
outsb
mov
cltd
add
call
imul
jb
movsb
mov
or
cmc
push
push
mov
insb
mov
testl
inc
cltd
sbb
cmp
xor
add
test
cmp
je
mov
popf
ljmp
pop
jo
dec
cmp
or
sub
jns
loop
addr16
fucom
add
dec
sub
ss
les
xchg
jnp
mov
jmp
loop
sahf
sbb
lock
shr
pop
repnz
xchg
sahf
jp
xchg
mov
and
mov
lods
mov
jno
insl
mov
out
push
int3
std
mov
mov
repnz
nop
xorl
sbb
xchg
pop
enter
pop
sbb
rorb
pop
mov
lods
ret
insl
shrb
movsb
mov
mov
add
add
jmp
sub
int
jmp
insb
sbb
add
mov
testb
rcr
popa
test
cmp
cld
mov
aas
mov
inc
pop
adc
lahf
jnp
aas
into
mov
mov
mov
push
aaa
or
nop
out
call
mov
sbb
ret
push
lcall
xchg
xchg
nop
scas
les
bnd
pushf
mov
xor
out
mov
jmp
movl
cmpsb
pop
jl
sti
stos
mov
popa
out
or
bound
pop
je
and
incb
outsb
sbb
cs
fidivl
fld
dec
loop
in
shrl
test
les
pop
mov
jne
out
sub
imull
dec
adc
aas
int3
fnstenv
pop
push
xlat
cmp
leave
stos
insl
fucomip
leave
xchg
leave
stc
push
lret
fstp
lock
fbld
cmpsl
cmp
xorl
push
test
jne
jmp
mov
testl
int3
call
sub
stos
lea
and
and
push
std
icebp
aad
sbb
add
popf
mov
ret
push
adc
xchg
in
jbe
aad
pusha
std
loope
or
mov
jmp
sbb
shlb
call
add
jno
daa
add
push
pop
dec
mov
mov
pop
popa
mov
aas
std
out
dec
jae
xchg
xchg
xor
xchg
in
shl
daa
repnz
pusha
pop
inc
out
jmp
out
mov
lea
cmpsl
mov
stc
pop
jno
inc
adc
into
jmp
mov
stos
test
xchg
add
add
lea
sub
sub
cwtl
sub
mov
shrb
add
mov
roll
sub
xor
aas
lock
mull
cmp
movsl
pop
mov
popf
jp
sbb
inc
cmp
cs
jle
xorb
dec
enter
push
in
arpl
iret
cld
incl
je
mov
pop
add
xlat
cmp
push
fisubrl
aaa
adc
js
push
jno
xchg
sbb
ret
fists
testb
xor
or
xor
mov
gs
add
sub
jo
mov
ret
xchg
inc
aad
adc
mov
std
inc
xchg
outsb
movsb
adc
adc
arpl
cltd
xchg
repnz
iret
cmp
mov
int3
dec
pop
mov
mov
cwtl
mov
test
in
enter
mov
dec
movsl
repnz
xor
inc
ss
sbb
gs
jp
outsb
fistpll
je
jne
imul
fisttpll
imul
jns
jne
xor
dec
fdiv
jmp
or
push
push
in
xlat
xchg
stos
adc
inc
pop
cmp
fsubrl
xchg
in
xchg
jmp
test
pop
in
xchg
mov
xor
lcall
repz
fwait
dec
mov
xchg
stc
fcomi
pop
movsb
mov
inc
jmp
inc
pop
fwait
rcll
aas
nop
dec
jno
sub
daa
jl
cmpsb
jle
pop
mov
xor
clc
cmp
outsb
scas
push
xchg
mov
fwait
mov
daa
daa
pop
adcl
insb
rcrb
push
in
dec
je
les
popf
xchg
bound
jp
mov
push
and
or
mulb
int3
aaa
jmp
inc
in
cmovge
leave
loop
adc
fcmovbe
scas
outsb
addb
dec
and
add
negb
jno
lahf
popf
ret
jge
sar
icebp
mov
jbe
nop
jg
push
xchg
cltd
mov
mov
and
fistpl
adc
repz
push
adc
fstp
mov
push
xor
xchg
fimull
pop
ds
xchg
xor
aam
repnz
mov
pop
adc
pusha
stos
cmpxchg
mov
and
int3
pusha
cmpsl
sbb
mov
push
pop
popa
arpl
das
rcr
fldl
into
sti
je
ret
fidivrl
mov
lcall
xor
xchg
pop
fldt
xchg
inc
inc
xor
adcl
sbb
test
sub
push
fnstcw
test
ja
lret
mov
pop
add
dec
cmpsb
adc
shlb
push
push
popf
iret
xlat
movsl
sbbb
stc
pop
call
fs
xor
mov
and
jne
cmc
iret
and
lods
stos
mov
xchg
lods
sti
and
or
notl
add
cld
repz
lahf
subl
mov
iret
or
mov
jecxz
imul
mov
lds
pop
dec
adc
sets
shl
clc
sbb
mov
js
mov
pop
enter
repnz
pusha
jecxz
das
xchg
jle
xor
dec
dec
xlat
adc
xor
pusha
pop
fwait
inc
or
and
cmp
inc
push
jo
cltd
pop
gs
cwtl
xor
sub
dec
sub
push
adc
bound
fcomp
sahf
fwait
pusha
cmp
inc
out
sti
movsl
sar
mov
inc
push
cs
xor
adc
ds
std
xchg
repz
in
ret
sub
sub
mov
push
fistpll
inc
bound
repnz
add
pop
clc
push
clc
pop
cmp
adc
test
les
xchg
data16
int
pop
stc
xchg
aas
hlt
inc
inc
movsb
mov
add
pop
ss
sbb
repz
mov
dec
es
inc
xlat
out
jnp
repz
pop
imul
mov
xchg
cwtl
mov
movsb
clc
leave
pop
pop
fmuls
sbb
movb
lock
mov
mov
xor
lds
xor
faddp
fildl
dec
push
xlat
cmc
adc
add
out
into
sub
popa
in
sahf
nop
jp
ja
loope
xchg
jecxz
xchg
inc
popf
add
or
negl
shlb
leave
xchg
std
adc
and
cmovl
mov
sbb
loope
mov
fisttpll
mov
shrb
rcl
lock
shll
cmp
jb
push
js
lock
jno
jmp
bound
in
jmp
pop
stc
aas
mov
sahf
jecxz
pushf
and
inc
push
stc
mov
fisttps
mov
xchg
or
out
mov
bound
adc
in
mov
outsl
sub
fsubl
subl
in
ljmp
leave
add
icebp
inc
or
test
outsl
in
clc
mov
shll
leave
add
aam
or
gs
jae
cmc
insb
adc
ficomps
jmp
inc
push
lock
loopne
inc
cmp
xchg
int
insl
push
mov
pop
fists
or
jbe
mov
test
decl
movsl
mov
pop
sub
mov
ja
mov
mov
lock
sbb
out
loope
jnp
outsl
repz
mov
sbb
divl
or
ja
stos
inc
mov
or
subl
jne
mov
in
test
in
xchg
dec
jle
mov
rol
dec
jp
stc
inc
jp
imul
sub
inc
jmp
add
leave
xlat
pop
lock
add
fldt
jmp
insl
push
xor
insb
add
sbb
pusha
sbb
adc
inc
fcmovb
push
sbb
sub
sbb
push
pushf
and
jnp
into
pop
adc
insb
pop
cwtl
mov
push
add
in
fcoml
imul
xor
mov
pop
sub
pop
mov
pop
loop
cwtl
mov
test
or
push
push
int3
dec
xor
test
loope
add
push
addr16
outsb
xlat
push
push
and
decb
push
je
mov
in
sub
push
xchg
add
add
mov
cmp
mov
inc
mov
fstpt
or
jmp
sub
adc
xchg
mov
stos
jno
stos
mov
xlat
adcb
mov
mov
int3
mov
push
jnp
lret
lea
call
xor
jl
jne
rclb
mov
push
push
adc
mov
pop
xor
ret
ss
fldt
subl
gs
add
mov
xor
repz
lahf
inc
fisttpl
add
jnp
enter
sub
jno
sub
aam
imul
fwait
sub
es
adc
xchg
push
lds
mov
fwait
mov
xchg
pop
mov
mov
leave
cmc
les
js
adc
mov
lock
fsubr
ljmp
mov
das
cmc
flds
enter
jmp
mov
fistl
arpl
mov
movsb
sbb
mov
nop
shll
dec
iret
lahf
std
scas
dec
pushf
inc
push
bound
cmpsl
sbb
loopne
or
mov
sbb
jo
add
cmpsl
pop
imul
iret
aam
out
mov
in
add
adc
aam
mov
scas
mov
sub
mov
or
mov
push
pop
sub
movsl
mov
icebp
insl
imul
scas
jle
pop
cltd
jnp
mov
sbb
iret
mov
mov
stos
dec
filds
cmp
mov
fisttpll
pop
fwait
sbb
fcomp
lea
mov
movsb
js
arpl
test
in
jns
add
daa
pop
add
fcmovnb
dec
rorl
mov
repnz
iret
shll
push
jg
cld
xor
or
je
jns
mov
mov
rcll
fistpl
enter
sahf
sarl
sbb
pop
push
fdivrl
test
xchg
jo
mov
shr
dec
dec
mov
adc
mov
out
and
xchg
mov
xor
sub
mov
shll
lock
xchg
pop
jb
sub
in
and
dec
adc
lea
std
dec
push
mov
call
leave
fisubrl
aam
xchg
xchg
and
or
mov
cltd
xor
mov
rclb
xchg
adc
push
adc
daa
lea
cmp
out
sbb
lods
ret
sbbl
cmp
cmp
test
and
adc
in
or
fwait
add
pop
sbb
es
lret
cwtl
push
out
into
pop
cmp
ds
std
mov
pop
push
mov
sbb
fiadds
fcmovu
rcrb
aas
push
cmp
pop
sub
in
movsb
sub
int
daa
mov
dec
pop
pop
and
rcr
fxtract
mov
adc
mov
cmp
inc
add
xchg
rol
icebp
push
adc
repnz
sub
sbb
pop
shrl
test
pop
rorb
lahf
cs
fwait
mov
mov
mulb
dec
dec
mov
fstpt
nop
jnp
jmp
push
xlat
and
dec
pop
sub
adc
add
in
dec
outsb
and
adc
pcmpeqw
dec
loopne
orl
inc
dec
test
mov
in
fldt
fs
daa
call
not
and
std
lods
hlt
insl
pop
add
jne
aas
dec
mov
xchg
lret
xlat
cmp
mov
xchg
xor
lds
aam
mov
mov
sub
aam
test
ds
xchg
into
mov
pusha
xchg
movsb
inc
in
js
enter
rorl
xor
adc
xchg
iret
dec
cli
dec
cmpsb
mov
test
add
lahf
push
jnp
mov
jle
jno
daa
ss
jmp
add
cs
jmp
mov
lcall
test
pop
mov
fldenv
aas
xor
or
stc
xor
fdivr
fwait
clc
ja
and
pop
lods
push
rorl
fdivrs
pop
xchg
jmp
aad
notl
aad
ret
push
and
movsl
mov
jge
xchg
fidivs
das
int3
sbb
lods
push
aaa
push
mov
add
andb
mov
lods
cli
movsb
repnz
icebp
xchg
stos
mov
adc
popa
andb
mov
dec
mov
pop
out
pusha
stos
aam
lahf
inc
pop
je
iret
inc
jno
iret
loopne
adc
scas
dec
dec
out
or
arpl
mov
subps
js
jnp
push
into
flds
or
sbb
out
adc
inc
and
ds
orl
jp
xchg
sub
mov
or
cld
cmp
mov
inc
div
bound
clc
ljmp
inc
or
mov
mov
xor
mov
inc
dec
ja
mov
stos
pop
gs
iret
push
pop
xchg
loop
movsl
lcall
adc
jbe
sbb
aaa
and
dec
xlat
sub
and
sub
sub
pop
xchg
bound
out
mov
fisubrs
in
or
jno
xchg
mov
jecxz
mov
jnp
adc
cmp
incb
xor
mov
incl
xor
xor
jnp
lahf
ficomps
scas
push
je
sub
cmp
or
jb
dec
aad
repz
mov
sti
lret
popf
sbb
or
call
mov
pushf
mov
ret
push
in
cmpsl
dec
xchg
mov
cmp
mov
jne
mov
out
inc
scas
dec
shr
insl
ret
xor
push
cmc
adc
or
dec
das
mov
and
fisttpl
lock
jmpw
roll
push
sub
icebp
and
jae
movsb
xor
jnp
push
sub
rcr
mov
inc
mov
pop
and
into
xor
or
mov
cltd
xor
lahf
cmp
ds
testb
xlat
sub
aaa
cltd
fsubrp
add
nop
xorb
cmp
cmpsb
imulb
addl
scas
fisttpl
and
or
outsl
addr16
mov
lret
fldenv
jecxz
push
inc
jo
lds
cwtl
test
js
ret
mov
aam
jl
loope
mov
or
inc
out
das
and
fadds
in
daa
loopne
fs
in
xor
bound
out
dec
fisubs
arpl
mov
mov
sub
jae
adc
outsb
sti
pop
jecxz
mov
pushf
dec
es
add
rcll
daa
shr
sub
cmc
cwtl
sbb
sbb
stc
sbb
xor
push
dec
js
xchg
push
inc
add
pop
cmp
idiv
repnz
repnz
inc
cmp
sahf
gs
jg
test
push
sbb
daa
cmp
dec
loope
pop
jmp
xor
pop
divl
out
cmpsb
pop
sahf
dec
sub
xchg
aam
out
enter
sbb
sub
mov
in
int3
mov
add
jbe
mov
out
push
rcl
aas
xor
scas
shll
into
movsl
xor
je
xor
mov
jae
cltd
cmp
jle
pop
fsts
in
inc
ficoml
xchg
mov
mov
push
add
lcall
jne
ret
adc
addr16
test
pop
mov
pusha
mov
enter
out
lock
ds
mov
sar
outsb
les
mov
into
inc
inc
and
mov
lods
insl
sub
cld
fcoml
pop
xchg
cmpsl
jecxz
outsb
inc
mov
dec
dec
sbb
shlb
ret
xchg
and
int3
xor
roll
fidivs
lods
std
mov
lods
call
sub
mov
out
fcoml
mov
adc
dec
mov
arpl
aaa
inc
or
add
cmp
inc
pop
dec
mov
sub
cltd
std
adc
lock
or
and
daa
jg
in
jmp
mov
jmp
inc
loop
loope
insl
push
jae
xchg
jp
mov
push
jo
sbb
and
mov
aaa
int3
mov
or
xor
xor
in
test
lcall
dec
and
pushf
push
imul
addr16
adc
fimull
pop
push
and
pushf
sti
push
shll
mov
mov
negb
jb
les
js
xor
jl
ds
cmp
push
pop
adc
dec
mov
adc
inc
mov
xchg
repz
pop
dec
mov
xor
sbb
psllw
test
or
lret
insl
push
jo
mov
cli
test
aaa
adc
jbe
decl
xchg
int3
decb
push
adc
imul
and
testl
test
in
rcrl
mov
cmp
jno
cmp
cmp
and
test
mov
cltd
and
sbb
loop
imul
faddp
movsb
cmpsl
cmp
xorl
outsl
jmp
lret
jl
arpl
mov
pushf
iret
sbb
subl
movb
cli
loopne
les
jbe
mov
clc
push
into
and
repnz
push
mov
mov
or
test
xchg
push
xor
sbb
mov
popf
sbb
test
adc
out
xchg
je
xor
incl
mov
xchg
loop
aas
mov
enter
dec
or
adc
shll
sbb
ror
inc
aas
and
insl
xchg
mov
pop
xchg
xor
xchg
jae
aad
mov
insl
aaa
int3
cmp
jae
dec
xchg
mov
cmpsb
arpl
sarb
mov
fldenv
dec
into
loope
mov
xorl
dec
or
jmp
cmp
lret
xor
cmp
and
lahf
xchg
xchg
outsl
int3
mov
cld
mov
lods
pop
or
pusha
inc
sub
push
add
push
push
xor
in
inc
mov
sbb
sbb
xchg
imul
xchg
and
outsl
lds
mov
ljmp
xchg
daa
and
in
xchg
lahf
in
mov
and
loop
xchg
pop
inc
adc
pop
adc
mov
into
mov
cli
ja
ficomps
add
add
jno
stos
inc
pop
xchg
sub
pop
es
push
cld
loope
cmp
fisubrs
sub
jge
ljmp
mov
shlb
lock
imul
and
or
adc
mov
cltd
xchg
push
ret
stos
adc
push
mov
mov
pop
pop
jg
imul
lock
repnz
ja
lret
push
sub
ret
push
mov
inc
or
in
push
push
jno
inc
adc
or
rcll
jnp
cmp
adc
xchg
iret
adc
mov
icebp
inc
push
das
add
xor
dec
fiadds
xchg
add
enter
adc
lret
or
std
loopne
pop
cld
and
pop
out
js
push
cmpsl
mov
jbe
aam
icebp
xor
jp
jle
mov
jns
test
inc
repnz
adc
mov
fldl
ja
aaa
dec
outsl
scas
mov
es
xchg
sbb
mov
sbb
add
add
es
jmp
cmc
stos
push
mov
pop
insl
pop
test
ljmp
sub
jo
pop
mov
nop
je
clc
test
adc
mov
cmp
loope
lcall
jne
vmovdqu
xor
jnp
sbb
call
out
cld
sub
out
lahf
dec
dec
mov
cmpsb
fwait
aam
jmp
std
jns
adc
mov
popf
rol
jp
jo
aam
gs
mov
cli
in
test
arpl
add
and
test
lds
push
leave
add
or
shlb
clc
cli
fmull
outsb
rcl
shlb
arpl
loope
adc
mov
dec
push
fwait
stos
int3
mov
inc
sbb
das
mov
lret
jne
or
or
popf
into
outsl
inc
outsl
or
push
cmpsb
repz
mov
test
jae
pop
dec
adc
aaa
fdivs
mov
cmc
rorb
popl
mov
add
popf
leave
insb
mov
aam
fsubr
add
mov
push
les
int
test
add
lret
pop
addr16
xchg
xor
sbbb
scas
push
test
mov
in
pushl
dec
divb
jo
dec
dec
cmp
std
fwait
or
and
jns
add
push
inc
inc
stos
scas
loop
dec
xor
cltd
sbb
xchg
xchg
mov
dec
das
jnp
jle
jmp
mov
jl
ja
popf
pop
sub
push
stos
cmp
xchg
test
fisubrs
in
pop
mov
xchg
roll
sahf
lock
xchg
jp
sbb
fnstenv
rorb
cmp
int3
sub
jge
movsb
faddp
sbb
push
movb
pop
push
or
cwtl
xor
cmpsb
push
adc
pusha
mov
cmp
jne
shrl
call
addr16
adc
leave
mov
sbb
adc
mov
jno
shl
add
sub
insb
lcall
xchg
or
mov
cwtl
in
adc
pop
add
mov
fnstenv
int3
cld
mov
ret
repz
add
cmpsb
jg
jge
test
data16
cltd
xor
or
test
add
lods
or
hlt
push
sbb
call
shlb
mov
je
cmp
jno
xor
adc
mov
or
ljmp
jl
jnp
notb
jmp
fs
pop
ffreep
ret
outsl
int3
jmp
and
leave
cwtl
shll
in
popf
xlat
add
test
ficoml
aas
xchg
rol
xchg
sti
stc
sbb
out
mov
add
mov
aaa
cmpl
lahf
push
and
dec
insb
scas
roll
cli
imul
mov
lea
popf
sub
es
aas
xor
aam
cs
pop
or
xchg
lahf
loopne
pop
sbb
rorb
xchg
les
clc
and
adc
sbb
jl
push
jb
aas
arpl
fcmovnb
cmpsl
dec
and
or
arpl
bound
dec
pop
out
mov
adc
and
gs
pop
loop
dec
ret
into
xchg
and
cld
pop
mov
cwtl
cmp
sbb
xor
outsb
mov
sub
push
fldcw
leave
lahf
push
push
sub
ror
xor
lahf
xchg
or
xor
inc
lea
insl
push
call
cmpsl
cmp
jg
gs
cltd
negl
lods
inc
mov
and
inc
fnstenv
ss
pushf
arpl
mov
out
xor
movsb
cmp
mov
lds
sbbl
out
cmpsb
or
subl
test
lds
mov
out
addr16
xchg
divb
jae
push
std
dec
push
testl
push
pop
repz
add
outsb
ds
test
out
xlat
xor
push
fisubs
jo
adc
pop
or
jl
inc
dec
mulb
jno
lahf
xor
mov
outsl
cmc
mov
stos
inc
test
daa
test
sub
push
pop
lock
mov
sub
cmpsb
push
fldcw
cmpsb
lods
mov
imul
ficompl
fsubrl
mov
or
fildl
add
inc
out
mov
or
sti
addr16
lea
push
lret
ret
fucomi
add
xor
imul
bound
int
dec
lock
mov
push
popa
inc
ja
cmp
mov
push
xchg
scas
add
jg
lds
jmp
pop
js
dec
xor
add
and
sbb
outsb
dec
sbb
aam
jno
inc
add
sbb
jmp
and
xchg
les
popf
mov
xor
fmulp
pop
xor
push
in
stos
clc
push
leave
sub
test
xor
stos
or
clc
mov
xchg
mov
xchg
sbb
fwait
xchg
sub
xchg
cmp
mov
inc
jl
out
ss
faddl
enter
ret
cli
sbb
popa
adc
push
hlt
aam
or
cmp
dec
addb
xchg
flds
fiaddl
fistps
outsb
fucom
mov
cli
jecxz
inc
cmp
cld
fwait
repz
aam
frstor
and
aas
addr16
push
insl
adc
jg
jmp
cs
subb
push
add
xlat
dec
mov
xchg
lret
mov
in
test
cmp
and
rcl
cmp
pusha
sahf
add
adc
mov
jae
jo
sub
scas
inc
push
push
xchg
xchg
cmc
dec
das
scas
push
lret
sub
jmp
scas
adc
in
in
std
mov
das
repz
clc
sbb
push
sub
bound
loopne
pop
pop
or
and
fnsave
xor
mov
enter
pop
xchg
ret
sbb
pop
mov
jge
sahf
cwtl
cmp
sub
lret
adc
popa
push
lods
in
push
movsl
push
adc
out
inc
inc
outsb
push
cmp
mov
pop
fcoms
adc
mov
push
xchg
stc
call
and
js
xchg
dec
and
testb
pop
ljmp
xor
mov
xor
pusha
cld
aam
cmp
cmpsb
cmpsb
sbb
fnsave
pop
mov
addb
lods
lock
in
scas
jae
aaa
pop
adc
orl
mov
mov
out
movsb
jne
enter
dec
cs
sbbl
xchg
jno
xchg
xor
dec
mov
aas
dec
int
push
or
xor
dec
mov
sub
adcb
mov
dec
dec
out
rorl
scas
insl
stos
out
ret
mov
mov
iret
mov
aam
sbb
xlat
jp
push
dec
sub
fisubl
aas
jo
mov
cmp
xor
and
mov
lds
sub
sbb
mov
ret
popf
jb
jp
add
dec
mov
mov
mov
hlt
pop
rorb
mov
rclb
push
ja,pt
push
xchg
cltd
iret
das
aaa
js
out
lods
push
bound
jl
in
and
in
sub
fcmovu
fidivs
mov
mov
cmp
xor
into
sub
lods
js
mov
pop
std
call
mov
arpl
mov
xchg
leave
pop
sti
fcompl
adc
mov
lods
ljmp
or
mov
lods
mov
pushf
cmp
inc
mov
jp
icebp
push
stc
fcmovne
repnz
data16
ja
sbb
int
sbbb
dec
lea
jle
fmul
inc
call
pop
cltd
cmp
push
mov
inc
xor
mov
push
mov
jle
jae
aam
xchg
aad
loopne
and
arpl
xchg
aad
pop
xor
add
das
xlat
sbb
xchg
push
mov
push
mov
pop
movsb
adc
sbb
xor
test
bound
push
mov
or
xorl
mov
xchg
lods
lcall
sbb
or
xchg
leave
mov
push
aaa
cmp
push
mov
in
loop
inc
test
pop
jl
ja
imul
cmp
hlt
inc
ret
jge
jg
mov
mov
xor
jle
mov
sbb
and
shl
scas
adc
loope
mov
notb
cmp
insl
loope
rcll
insb
xor
sub
or
inc
in
inc
mov
in
sbb
fs
jbe
cmp
mov
lock
jg
pop
jg
xor
pop
xor
in
mov
lds
sbb
out
dec
or
loop
cmp
push
ja
cmpsb
adc
divb
dec
inc
stos
pop
cltd
out
in
popf
mov
xchg
faddp
mov
imul
fcoml
hlt
pop
popa
lock
jb
adc
add
lds
roll
add
xor
push
inc
out
xchg
aas
inc
push
movsb
jbe
filds
test
cmp
mov
jo
fadd
sub
push
xchg
ss
cs
sbb
xor
ret
inc
aad
push
inc
lods
jbe
xchg
or
cmp
aam
in
add
shrb
mov
sahf
addb
addb
scas
dec
outsb
filds
adc
gs
mov
cmpsl
jp
lock
ret
in
push
add
mov
scas
mov
loop
fs
sahf
inc
mov
or
jecxz
xor
pop
lea
lret
cmp
mov
inc
cmp
pop
in
daa
pushf
adc
sti
push
aam
imul
sub
dec
sbb
cmp
pusha
xlat
lods
inc
jo
or
ficomps
out
ss
cmp
clc
enter
pop
add
sbb
push
push
mov
cmp
adc
fisubrs
lods
add
cmp
jae
push
mov
jbe
cmp
mov
je
outsb
or
aam
and
pop
add
ja
fld
push
andb
sbb
adcl
mov
cld
sbb
and
sub
sbb
and
cld
sbb
jo
jne
push
sub
push
xor
or
push
sbb
dec
frstor
push
test
je
aam
sahf
jp
les
sub
stc
xchg
xchg
jbe
mov
dec
out
scas
pop
movsl
call
mov
sub
insl
enter
ficoml
inc
ficoml
das
cmpsb
sbb
loop
jmp
aas
mov
sbb
dec
stos
mov
std
xlat
sub
scas
pop
pop
decb
movsl
pushl
scas
sti
cmpsb
inc
loopne
stos
add
fsubrs
icebp
push
mov
push
lods
jmp
mov
xchg
xchg
leave
or
cwtl
fwait
test
add
cwtl
jmp
fsts
and
xchg
cwtl
leave
pop
pop
and
retw
in
aam
pop
lock
lods
ja
inc
add
shlb
mov
imul
jnp
fistpl
adc
sahf
jb
les
incl
cmp
xor
rclb
mov
sub
xchg
mov
aaa
cmp
loope
into
jo
lods
jecxz
add
mov
pop
out
imul
push
jne
mov
mov
loope
sbb
rcrl
sub
xor
insl
outsl
pusha
sub
mov
jnp
stos
outsl
bound
adc
fwait
pop
inc
inc
xchg
push
mov
dec
cwtl
sub
push
mov
ljmp
iret
xchg
in
loope
and
mov
imul
pushf
xor
xchg
sub
sub
push
and
fwait
aaa
in
inc
imulb
jns
mov
xor
dec
cs
les
and
ja
andl
iret
xchg
mov
push
idiv
jns
xchg
and
mov
pop
mov
xor
cmp
and
out
xchg
inc
fcom
mov
mov
inc
ss
mov
xor
and
into
fs
or
sub
or
add
push
xchg
loop
lods
push
adc
repnz
loopne
std
popf
and
and
mov
jmp
rclb
adc
xchg
loope
jae
dec
jne
imul
jg
test
xor
shll
js
and
and
repz
jle
xor
ret
addr16
lock
or
daa
mov
enter
sbb
lea
cmp
jl
adc
sbb
pop
jmp
push
pop
inc
subb
mov
insl
cmp
leave
push
mov
out
mov
xchg
iret
ja
add
fwait
fs
cmp
bound
addr16
mov
lea
dec
arpl
push
pusha
xor
mov
data16
jecxz
add
cmp
jno
xlat
add
out
xlat
add
stos
and
mov
mov
mov
mov
jl
or
in
lods
or
inc
and
push
xchg
push
shrl
cs
or
or
es
sub
xor
push
inc
mov
xor
xchg
je
jo
scas
mov
insb
xchg
sbb
or
push
gs
jmp
inc
jne
ret
push
rcll
mov
mov
arpl
pusha
push
movsb
xor
lock
ja
or
std
dec
popa
mov
jl
mov
fistpll
scas
xor
xchg
mov
idiv
mov
inc
jno
clc
loope
call
pop
add
adc
and
adc
mov
push
je
xor
and
mov
sbb
mov
lret
daa
fucom
cli
adc
pop
mov
aam
and
mov
jl
sub
repnz
mov
push
or
in
cli
insl
mov
and
xor
hlt
enter
jns
mov
inc
repz
inc
outsb
cmp
ret
aas
lock
int
sub
pop
mov
loop
mov
pop
stos
fcoms
mov
scas
imul
sbb
inc
push
das
lret
jmp
xchg
pushf
loop
jge
and
pop
fisttps
je
sub
lea
mov
daa
addr16
lcall
xchg
mov
pop
inc
push
insb
xchg
jne
outsb
in
mov
vunpckhps
jge
test
shl
xor
inc
dec
jecxz
push
ja
inc
mull
jo
fwait
scas
enter
outsb
ss
sbb
fisubrs
jp
inc
pop
jae
mov
shlb
fisttpl
lgs
mov
lods
repnz
and
hlt
fdivl
test
cld
push
mov
mov
or
or
out
callw
or
lret
ret
jp
jns
aas
xchg
fstpt
iret
sub
roll
insl
cmpsl
mov
data16
leave
rcll
cmp
bnd
and
rorb
push
and
push
loopne
cmp
mov
jl
das
add
push
sbb
xchg
or
cmp
leave
divl
adc
ret
sub
push
into
dec
add
addr16
xchg
sbb
add
cmc
popf
xchg
mov
outsb
or
rcrb
add
lock
enter
stos
scas
mov
call
add
fnstsw
add
pop
cmc
pop
lods
testb
clc
xlat
xchg
test
mov
xor
add
in
or
std
lret
fisubs
mov
cbtw
fs
mov
stos
shl
mov
xchg
jp
jecxz
push
cmpsl
mov
icebp
pop
dec
sbb
ds
mov
push
scas
and
pop
cmp
jae
xor
or
sub
push
cmp
stos
mov
xor
in
rcr
xor
mov
test
lods
and
cwtl
sahf
aam
ret
pop
or
insl
dec
ret
pop
xchg
jg
pushf
leave
cmp
jmp
sbb
call
ficoml
push
imul
sbb
sub
stc
mov
cmp
xor
lock
cmp
ret
in
or
repnz
push
and
cmp
dec
jne
jno
jg
dec
push
arpl
stos
clc
cmc
xchg
jp
sub
pop
cmp
adc
inc
ljmp
push
pop
out
and
push
push
int
dec
xlat
ja
adc
jnp
into
push
mov
sbb
and
pushf
sarl
jnp
bound
pop
push
dec
xchg
aaa
lea
jecxz
sub
lods
push
or
inc
mul
lret
aam
or
sarl
fildl
jne
mov
in
inc
cmp
push
test
or
dec
cmp
jle
push
outsb
insb
inc
inc
int
push
js
fs
inc
std
xor
jg
xchg
push
pop
dec
ss
nop
rclb
gs
scas
insb
addr16
pop
sarl
out
pop
movsb
or
call
shrb
mov
shll
cld
adc
cmp
lahf
mov
orb
loope
adcl
pop
cmp
sahf
movsb
pop
push
xchg
jae
out
sub
sti
mov
push
cmp
sub
repz
jae
sarl
mov
sub
cld
pop
scas
dec
inc
xchg
fs
push
jecxz
or
mov
test
arpl
dec
cld
fwait
shl
movsb
fidivrs
mov
int
mov
adc
idivb
sbb
adc
gs
sarl
shrb
daa
das
les
mov
sbb
into
push
mov
xor
push
std
adc
pop
das
jne
cmpsb
ja
cmp
test
sahf
or
xchg
pop
in
inc
dec
xchg
lods
mov
mov
dec
mov
and
cltd
ss
push
mov
repz
jmp
adc
sbb
cmp
mov
lds
sub
pusha
mov
cli
xchg
shlb
mov
pop
sbb
sbb
call
ss
xchg
loop
dec
push
and
sbb
cmp
adc
jns
push
cmpsl
cmpsb
stc
rcrb
and
adc
loopne
adc
xor
mov
jge
out
cmpl
in
add
adc
xchg
xor
adc
xchg
pop
jb
push
mov
mov
pop
push
mov
xor
aad
movsb
jae
xchg
sahf
and
cmp
cmp
sub
mov
mov
mov
les
cltd
loope
sbb
cmpsb
in
or
clc
and
inc
stc
mov
xchg
out
xchg
cltd
aas
and
or
in
in
sbb
sbb
test
jmp
lock
repnz
xor
in
and
pop
decl
jmp
inc
sbb
mov
xchg
xchg
into
jp
adc
repnz
imul
xchg
mov
dec
cmp
lods
xor
clc
add
dec
pop
mov
mov
mov
mov
xor
mov
fucom
mov
fdivrp
xchg
test
pop
repz
jbe
int3
ja
adc
mov
test
scas
int
in
popf
stc
pop
cmpb
jecxz
mov
mov
rol
push
mov
jb
push
pop
cmc
xchg
add
sbb
insl
and
daa
lahf
push
test
out
cmpsb
aaa
xor
xor
cld
jge
iret
jmp
mov
daa
sub
pop
repnz
cmp
cmpsb
mov
cld
adc
in
mov
push
ret
xchg
and
add
lcall
pop
cmp
lods
shlb
outsb
xor
loope
pop
mov
movsl
jecxz
je
lods
pop
pushf
pop
xor
adc
xlat
lret
cmp
das
add
arpl
jbe
adc
and
dec
pop
ss
int
icebp
add
out
arpl
xchg
pop
mov
gs
in
lahf
sbb
je
gs
sub
pop
push
jl
mov
xchg
cmp
xchg
add
mov
loope
leave
movsl
cmpsb
push
aam
aad
sti
fs
mov
push
and
testb
or
scas
out
test
pop
cmp
adc
outsb
push
fmul
clc
inc
hlt
movl
out
xchg
push
push
xchg
pop
xor
add
mov
jne
das
in
push
pop
push
std
pop
mov
pop
sbb
lcall
sbb
mov
sub
les
xchg
inc
mov
xor
or
mov
push
imul
test
mov
mov
mov
pop
mov
push
test
push
mov
and
cmp
dec
lea
scas
sarb
orb
ja
lret
mov
shlb
nop
jg
or
push
movsl
das
das
in
and
push
sub
and
aas
mov
sub
dec
repz
pushf
pop
lea
loop
jg
xchg
aam
rorl
in
mov
xchg
fs
cmc
loop
aaa
push
mov
sub
inc
cmp
xor
mov
lcall
jb
inc
dec
loopne
movsb
push
jnp
in
imul
icebp
aaa
push
and
mov
xor
jo
push
and
call
mov
aam
dec
mov
push
pcmpeqw
mov
or
mov
mov
imulb
repz
mov
ficompl
shll
mov
xchg
pop
mov
mov
in
outsb
aaa
mov
dec
jne
sahf
mov
jae
mov
aas
es
cmpsb
jns
xchg
ja
cmp
inc
push
inc
scas
ds
push
dec
mov
or
pop
gs
mov
adcl
inc
jno
imul
dec
rolb
mov
and
lock
xchg
mov
stos
sbb
xchg
movsb
mov
imul
jle
cmp
imul
pushf
fisubrl
mov
fldcw
jb
andl
pop
insl
cmc
mov
sub
outsb
sti
loop
mov
cmp
aad
jecxz
into
popf
lods
nop
inc
jns
ret
pop
mov
in
mov
pop
clc
movsl
inc
out
mov
in
xchg
sub
adc
cli
sahf
cmp
inc
daa
test
jge
push
or
daa
lret
incl
mov
lahf
push
cmp
pop
stos
aad
pop
pushf
int3
lods
daa
icebp
sarl
jbe
mov
icebp
das
sbb
out
popf
mov
jne
mov
test
sbb
ds
loope
and
shll
adc
push
inc
je
imul
addr16
add
and
jg
and
mov
ljmp
fcoml
add
pushf
stc
inc
add
sub
add
loopne
push
cmpsl
sbb
push
cmpl
mov
adc
push
inc
xchg
mov
cmp
mov
loope
push
mov
adc
pop
xor
popa
cmpsb
push
adc
xor
leave
jne
ret
push
idiv
pop
mov
dec
sbb
cmp
jge
inc
idivb
lcall
mov
sti
aaa
loop
pushf
mov
sahf
jno
add
push
pop
mov
lret
fiadds
ret
test
test
jge
in
and
les
std
repnz
fldenv
pusha
das
sub
int
aas
fistpll
imul
orb
loopne
ds
inc
sbb
scas
or
push
out
xor
jbe
scas
lret
and
pop
aaa
push
xchg
pop
xchg
insb
jmp
mov
push
popf
into
add
out
into
call
das
movsl
ret
push
dec
addr16
outsl
mov
gs
xor
pop
dec
push
dec
and
cmpsl
or
and
popa
int3
jp
addr16
pushf
sub
jnp
push
lea
arpl
ljmp
sub
dec
jmp
js
xor
outsb
mov
mov
aam
inc
and
fdivr
clc
xchg
and
lahf
mov
jb
mov
enter
push
xchg
push
scas
push
pop
lods
pusha
xchg
mov
sub
lahf
es
sbb
sub
mov
cltd
in
cmp
adc
fistl
lds
sbb
cmpsl
and
sub
xor
mov
inc
jp
xchg
outsl
xor
ds
sbb
decl
adc
popf
inc
or
xchg
push
push
sbb
shl
pop
push
js
rep
xor
aad
jp
sbb
imul
mov
add
inc
pusha
fwait
call
and
jg
mov
pushf
pushf
sbb
mov
xchg
pop
fs
mov
cltd
lods
fmul
sub
test
cmpl
data16
sub
divl
mov
pop
out
and
or
mov
xchg
test
sub
xchg
adc
stos
push
bound
jg
into
cs
cmp
push
sub
xor
inc
pop
xchg
push
lret
cwtl
push
sti
lret
add
hlt
jg
push
mov
xchg
cmpsb
das
je
sub
shrb
push
stos
aas
push
shrl
pop
inc
inc
push
pop
test
adc
out
sbb
popw
shl
jno
lea
in
stos
jg
je
hlt
ss
shrb
xchg
cmp
adc
adc
mov
dec
ds
call
mov
jb,pn
jbe
cmp
cmp
inc
mov
pop
and
adcb
cwtl
ss
stos
std
mov
lret
pop
sub
scas
sub
pop
push
jmp
mov
jecxz
je
fmull
add
mov
inc
int
cmpsb
sbb
jne
and
push
sarl
inc
mov
aas
out
sbb
test
es
mov
fldlg2
mov
jb
inc
lods
mov
and
inc
insb
adc
xchg
test
iret
cmp
fmul
hlt
push
int3
cli
mov
mov
test
mov
or
xlat
jp
repz
arpl
mov
or
xchg
repz
and
inc
or
sub
ficoml
pusha
inc
jmp
ja
jnp
xchg
xchg
adc
inc
mov
lret
xor
andb
cmp
cmc
jge
inc
xor
mov
jnp
lret
add
push
imul
xchg
movsl
cli
je
add
xor
nop
push
addr16
xchg
test
push
dec
inc
jne
sti
test
add
xlat
dec
adc
jmp
test
cmpb
icebp
in
dec
jne
pusha
lods
mov
jg
imul
addl
cmp
adcl
leavew
stos
push
daa
sbb
push
mov
out
push
dec
icebp
jne
inc
xchg
jb
hlt
outsl
push
adc
xchg
cwtl
xorb
clc
dec
xor
movl
cmc
push
mov
sbb
pushf
rorb
adc
sahf
outsb
xor
adc
sub
jle
sahf
jp
ss
xor
adc
out
mov
adc
adc
cmp
xchg
push
loopne
mov
shlb
fstl
xor
pop
mov
xchg
xchg
hlt
xchg
movsl
ja
lcall
fwait
push
rolb
lock
lods
lahf
ljmp
in
sub
dec
xchg
ret
adc
call
xchg
imul
ss
ffreep
pop
and
test
xchg
leave
in
sub
sub
and
mov
adc
xchg
mov
sbb
dec
mov
add
cmpsl
xor
sbb
cmp
movsl
fiadds
jle
stos
and
js
jb
scas
pop
icebp
movsl
inc
inc
aas
xchg
cwtl
sub
mov
movsb
paddusb
mov
adc
adc
mov
insl
adc
lret
add
mov
fbld
out
das
dec
aam
push
test
ja
loop
divb
je
cwtl
in
out
dec
cmpsl
xlat
mov
fnstenv
pop
sbb
xor
xchg
pop
and
mulb
sub
jns
cs
xor
sahf
push
movl
mov
mov
mov
or
movsl
mov
mov
fldenv
cmpsl
ror
cmp
popf
jl
in
jmp
mov
add
pop
pop
es
push
xor
xchg
xchg
stos
popa
sub
jmp
lea
andb
mov
sbbb
add
mov
xor
repnz
inc
aaa
or
adc
movsl
leave
sub
cmp
push
es
pop
dec
je
jle
aad
mov
or
mov
les
mov
push
cmpsl
movb
loop
in
cmp
jmp
xchg
xlat
pop
jne
lock
dec
hlt
mov
sub
xchg
int3
xor
gs
mov
cmp
pop
mov
xchg
imul
sub
jge
popa
mov
test
lock
adc
lcall
mov
adc
clc
mov
lret
push
add
push
dec
jp
gs
movsl
cld
orl
fwait
call
sahf
cltd
adc
pop
shrb
inc
xchg
jb
ljmp
jl
pop
xchg
sbb
mov
out
sub
add
mov
or
test
repnz
shl
xlat
scas
add
arpl
ja
imul
icebp
insl
pop
cmp
xchg
jle
push
dec
outsl
imul
cmpsl
xchg
sbb
stos
xchg
cmc
xchg
hlt
and
pop
or
sub
rcrl
sbb
adc
mov
sbb
in
sbb
enter
call
mov
mov
jbe
insl
pop
std
stos
sbb
lods
aas
sub
cmp
xchg
pop
or
insl
ljmp
jns
jnp
decb
jmp
test
xor
pusha
cmp
enter
fstpt
dec
xchg
adc
sti
jne
or
sub
es
mov
mov
xchg
fsubr
mov
jae
xchg
data16
sarb
cli
insl
repnz
xlat
inc
lods
movsb
cmp
or
pop
mov
pushf
lds
add
cmp
jmp
xor
push
in
fwait
xor
loope
lcall
jl
rcl
cmpsl
xor
mov
cmova
mov
cltd
jae
js
rcrb
gs
les
sbb
imul
sub
push
ds
inc
mov
sub
ljmp
push
dec
jo
lcall
and
cmpsb
loope
push
loope
jb
jle
inc
mov
and
sbb
xor
sub
dec
repnz
jle,pt
inc
scas
addb
mov
mov
stos
repz
or
lds
les
mov
int3
lahf
and
jecxz
orl
mov
scas
xor
push
dec
test
dec
or
adc
jb
push
mov
das
adc
mov
repz
int
lret
mov
cmp
in
bound
xchg
lea
dec
push
enter
daa
jmp
push
xchg
sbb
repz
ss
sbb
cmp
lock
xor
sbb
adc
mov
xchg
cmc
jns
popa
sub
or
cld
mov
and
jg
push
cmp
icebp
jmp
imul
outsb
loope
daa
cmpsb
jmp
cmp
adc
dec
scas
in
push
cmp
nop
mov
cli
jo
dec
daa
or
xchg
sub
xchg
rolb
scas
mov
cmpxchg
jecxz,pn
rcrl
pushf
ret
push
insb
mov
add
or
mov
jmp
sub
push
aas
out
jp
out
mov
sbb
mov
leave
lock
loopne
mov
xlat
adc
sub
popa
push
popf
std
fisttpl
out
cmp
inc
imul
pop
in
adc
cmpl
pushf
sub
inc
loope
pusha
cmp
dec
es
sub
stos
outsl
mov
repnz
xor
cmpsb
mov
xchg
into
cmp
fisubrl
inc
push
pop
push
fistps
lods
xchg
jne
vmaskmovdqu
hlt
sub
sarb
roll
inc
dec
jbe
jle
lock
add
mov
xlat
add
das
or
and
cltd
jmp
cld
push
rolb
pop
out
xor
fs
jno
test
roll
arpl
cmc
lea
or
scas
jge
test
cmp
mov
push
das
mov
sti
push
ja
or
push
add
mov
mov
aaa
or
xor
fdivrs
cmp
das
xchg
and
mov
inc
ljmp
mov
dec
out
adc
lods
or
xlat
outsb
ja
hlt
add
out
jne
add
popa
adcb
mov
or
roll
lods
mov
push
adc
pop
fstpt
leave
movsl
cmp
cmpsb
movb
jb
mov
sti
xchg
flds
ss
sbb
jmp
cmpsb
out
cli
pop
loop
adcl
jnp
push
dec
lret
cmp
pop
fwait
out
frstpm(287
shlb
lahf
xor
fdivrl
scas
cld
ljmp
and
gs
dec
iret
mov
inc
sub
cmp
dec
pop
dec
mov
mov
adc
adc
pop
rorb
and
mov
or
scas
outsl
test
mov
sbb
mov
inc
xor
shl
loope
sbb
pop
lret
xor
faddp
dec
mov
mul
ja
scas
jp
je
adc
scas
lea
cwtl
add
lea
xor
cltd
lods
hlt
out
jne
das
fs
in
sti
mov
push
in
test
and
dec
lods
mov
sbb
in
andb
add
inc
push
shl
adc
fstpt
cld
sub
std
ret
adc
mov
rcrb
add
or
sbb
mov
ss
pop
add
rorl
subl
add
dec
cmp
xor
mov
js
fbstp
pop
push
push
push
mov
pop
fs
push
adc
push
adcb
cmp
mov
cmc
add
movsl
xchg
mov
adc
sbb
inc
xor
adcl
sbb
cmp
outsl
jg
stos
jne
add
test
xchg
out
stc
sbb
sbb
ds
add
pop
xchg
dec
xor
push
or
movsl
lcall
ja
cmpsb
adc
xchg
xor
std
jae
cs
mov
dec
lcall
fisubs
push
cpuid
mov
repnz
jle
iret
sbb
test
mov
fnstcw
inc
fnstenv
ja
dec
es
call
inc
movsl
jno
in
mov
and
push
sub
aaa
pop
lret
inc
pop
pushf
add
xor
dec
into
ret
xor
adc
jecxz
jb
push
std
aas
iret
out
xchg
push
sub
iret
lret
subb
inc
or
inc
shrb
cmp
and
mov
jbe
addb
in
in
gs
gs
push
out
mov
and
shr
jp
in
dec
subb
daa
add
xor
adc
xor
leave
or
cmp
or
push
lock
loopne
pop
fstpt
pop
lea
xor
repz
adc
dec
aas
sbb
pop
adc
xor
aaa
jmp
mov
jnp
addr16
fisubrl
mov
sbb
loope
mov
mov
fidivrl
sbb
pop
lret
xor
adcl
cmovg
ret
leave
and
xor
aas
inc
push
adc
push
cmp
xor
mov
sub
xor
xor
add
repnz
and
sbb
out
loopne
push
stos
pop
ret
cmp
ret
filds
cmpsl
mov
dec
fisttps
jae
lds
iret
pop
mov
pop
pop
loopne
test
in
jmp
xor
adc
mov
lds
scas
pop
lods
jg
ffreep
push
pop
mov
mov
ds
jl
dec
add
cmp
mov
mov
movsb
sub
in
add
sbb
bound
fisubs
mov
popf
or
and
bound
cltd
in
adc
jge
leave
jl
fs
cli
pop
in
xchg
cmp
or
gs
in
mov
and
mov
push
rcrb
aas
cmp
jp
add
cmpsl
push
pusha
lea
imul
aam
stos
int3
out
pop
rcrb
icebp
idivl
in
lret
in
mov
jg
lret
sub
nop
dec
out
dec
dec
pop
sti
jp
cmc
adc
xor
cmp
out
xor
lods
outsl
out
or
adc
and
cwtl
fs
ja
or
inc
adc
xor
mov
ja
cltd
mov
mov
call
movl
inc
movntps
pushf
lret
stos
je
push
rep
mov
sub
popf
mov
loope
sbbb
rclb
lret
fwait
scas
xlat
shll
stos
sbb
in
int3
mov
push
daa
xchg
out
xchg
lret
cmp
repz
pop
cmp
mov
jns
in
xor
push
jl
inc
xchg
xchg
xor
mov
notl
popf
loop
sarb
jg
dec
mov
mov
das
stos
popf
and
test
jo
add
fdivs
stos
push
push
mov
push
fldenv
sbb
adc
push
insb
outsl
mov
movsb
mov
addb
stos
shrb
nop
pop
sbb
mov
dec
mov
cmc
into
cmp
adc
fists
cwtl
std
inc
aaa
cs
loop
mov
pop
adc
out
push
jo
out
jb
jge
xchg
ret
push
dec
out
aam
push
mov
xlat
add
adc
or
fisubrs
fisttpll
jae
test
mov
hlt
clc
das
push
pop
sbb
arpl
mov
add
push
iret
testb
aas
sub
out
cmp
mov
mov
jb
mov
xor
add
mov
mov
sub
out
mov
mov
pop
bound
xor
push
imul
xchg
jb
adc
mov
inc
fisttps
aas
test
mov
pop
dec
pusha
in
xchg
dec
jb
mov
fisttps
cmc
popa
pop
cmp
sbb
pop
pop
dec
ror
ja
sub
ljmp
rclb
and
xchg
enter
mov
push
shrl
xchg
cmp
jecxz
cmpsl
mov
xor
movb
ljmp
jge
inc
mov
jnp
fadd
or
lcall
inc
jl
into
out
arpl
jns
fists
stos
clc
jb
or
shl
in
cli
mov
xchg
pop
mov
les
add
cmp
jb
outsl
clc
mov
add
fcoml
cltd
imul
cmpb
push
roll
gs
xchg
cld
mov
sbb
mov
ss
mov
addl
ror
push
rolb
shlb
es
mov
cmp
adc
and
lods
fwait
test
arpl
mov
faddl
ljmp
repz
pop
mov
in
cmp
cmp
xor
or
mov
ss
push
icebp
scas
sbb
inc
loop
push
sbb
repnz
and
jnp
and
cmpsl
stc
xchg
les
mov
out
mov
pop
inc
pop
lock
int3
xor
sub
add
mov
or
out
pop
mov
push
or
sub
stc
outsb
cmpsb
bound
cmp
mov
sbbl
pop
inc
and
inc
imul
and
push
mov
imul
dec
push
jne
jecxz
xchg
ljmp
aad
push
mov
dec
ja
imull
roll
mov
mov
inc
cltd
mov
sbb
pop
fwait
cltd
lds
and
je
leave
push
or
repnz
out
lds
cmp
xlat
adcb
lods
xchg
stc
adc
push
cmovs
lret
mov
loopne
stos
jg
pop
lea
std
pop
ss
cmp
les
sbb
subl
shrb
xor
mov
loope
mov
jmp
and
xor
pop
cmp
cmovle
lret
or
lcall
jnp
sbb
jns
test
jp
ds
fldt
xchg
inc
pop
pop
mov
jle
in
mov
loopne
mov
xor
inc
icebp
cmp
xchg
xor
add
sub
and
shr
out
mov
mov
test
jo
out
pop
cmp
and
jecxz
cmc
sub
xor
out
mov
int
fsubrl
mov
jns
in
add
repnz
mov
mov
clc
or
or
insl
lods
jge
adc
mov
dec
leave
push
dec
adc
inc
adc
sarb
jbe
mov
dec
push
repz
pop
movsl
ja
adc
or
inc
lods
and
lds
das
add
mov
jnp
add
enter
add
out
mov
jg
and
sbb
cmp
cwtl
cmp
jo
sbb
add
xchg
icebp
into
mov
cmp
lea
dec
sub
cmp
jmp
sbb
inc
mov
sub
jno
sbb
cwtl
int
stos
popa
insl
mov
and
lock
clc
jo
pop
adc
add
orl
sti
push
push
pop
test
add
cmp
shll
in
mov
xchg
jb
adc
push
xorb
fwait
cmp
and
addr16
out
or
sub
xchg
jne
inc
cmpsb
faddl
insl
icebp
cmp
mov
int
mov
in
addr16
dec
icebp
cmp
insl
dec
push
loope
or
fwait
subb
insl
pop
imul
jge
sbb
shll
push
xchg
adc
aaa
cmp
pop
mov
sbb
inc
jmp
fdivp
imul
adc
cld
and
into
xor
adc
jl
or
mov
pop
incl
adc
arpl
adc
jne
jl
cmp
cs
test
xchg
test
frstor
mov
dec
push
imul
xorl
maxps
xchg
fildl
rol
mov
imul
sub
fadds
push
fsubrl
and
cmp
call
rcr
lcall
scas
outsb
movsb
pop
push
mov
int
bound
fwait
jns
or
xchg
call
scas
mov
xorb
add
ror
xchg
jne
lcall
sub
cmp
jmp
dec
and
in
jb
sbb
xor
gs
lea
jge
aad
out
mov
sub
out
imul
mov
in
xchg
sub
sub
test
cmp
mov
mov
dec
movaps
xor
add
ds
xlat
mov
push
push
je
icebp
pop
mov
gs
rorb
dec
int3
outsl
xchg
test
mov
pop
jg
shl
loop
push
fwait
outsb
aam
xor
mov
aaa
pop
and
popa
lds
sahf
and
fs
adc
stos
jmp
inc
andl
push
push
cwtl
imul
sub
insl
cmp
sub
orl
dec
mov
mov
cltd
outsl
or
movsl
idiv
pop
aaa
cltd
cmp
into
jb
mov
rorl
adc
aam
lahf
and
testl
cld
sub
dec
andb
jae
inc
mov
ss
pop
push
xchg
dec
push
in
loope
dec
xor
movsl
in
mov
fistpll
sahf
jns
jmp
pop
das
xchg
cmp
dec
gs
jmp
idivb
arpl
fsubrl
icebp
and
mov
stos
fiaddl
in
je
adc
dec
loop
dec
mov
mov
jl
sbb
dec
jnp
mov
or
mov
movsb
sub
mov
push
mov
movsl
sub
insb
pop
int3
dec
outsl
push
mov
dec
test
push
stos
add
jp
inc
jle
in
icebp
ret
movsl
mov
mov
push
adc
adc
jnp
enter
decl
xor
and
jns
cvtps2pd
mov
xchg
movsl
pop
xchg
sub
or
add
or
or
sbb
jno
ja
rcrb
jge
scas
add
jbe
es
je
ss
or
lock
clc
pusha
popa
inc
popa
imul
adc
mov
leave
sub
negl
push
push
push
pop
gs
xorb
icebp
cmovs
in
test
mov
pop
sbb
jno
enter
mov
inc
popa
repz
popa
imul
imul
nop
aaa
xchg
inc
xor
jbe
xchg
add
adc
mov
loope
xor
jecxz
adc
int
jne
mov
outsb
loopne
aaa
xor
movsb
sub
mov
pop
in
pop
sbb
add
and
ret
leave
inc
in
fwait
mov
mov
xchg
js
jl
jno
es
out
dec
xor
mov
xchg
add
aad
jge
imul
mov
cmp
lret
sbb
inc
out
sbb
repz
in
push
push
dec
imul
das
insl
mov
push
loope
pop
mov
sarb
jne
addl
adc
inc
or
mov
and
cmp
push
fisttpl
sbb
int3
jns
inc
movsb
and
add
mov
std
outsb
cmp
adc
lret
jge
nop
jp
ficoms
ficoml
push
mov
popa
imul
dec
test
mov
mov
inc
cmp
cmp
movsl
fdivrs
ds
mov
dec
rclb
and
mov
push
push
and
push
mov
or
xor
mov
mov
in
mov
ficoml
subl
add
and
sbb
stc
test
mov
gs
fsts
sbb
sub
stos
lea
mov
pop
push
or
mov
les
mov
out
jl
push
loop
and
mov
cli
push
add
and
ljmp
sbb
fildll
aam
sub
inc
mov
pop
sbb
outsb
xchg
jecxz
lcall
clc
xchg
test
mov
inc
test
lret
cmp
aad
push
dec
pop
mov
pop
mov
outsl
movsb
pop
or
lcall
lock
repnz
xor
insb
lret
lret
ja
mov
ja
cltd
es
xor
pop
jl
cmpl
mov
lods
mov
mov
mov
cmc
dec
add
in
cmc
mov
push
stos
xor
test
sbb
ds
pushl
cltd
shlb
in
mov
loop
dec
mov
inc
pop
cmp
inc
pop
jb
test
adc
arpl
pop
add
sub
push
xor
cld
call
std
add
in
ss
call
jnp
jne
fucomp
pop
or
pop
addr16
or
mov
aas
add
mov
sbb
in
and
stos
xchg
inc
dec
shlb
scas
lock
pop
aaa
dec
jo
hlt
sub
es
dec
imul
push
stos
es
dec
pop
jo
pop
adc
sahf
sbb
add
daa
jbe
iret
xor
std
data16
out
jmp
mov
inc
dec
lcall
dec
mov
jmp
lret
insb
orl
jbe
out
cmpsb
jge
and
arpl
mov
pop
imul
mov
sbb
pop
dec
ss
cs
je
fs
mov
roll
jp
lret
shll
lea
dec
popa
fwait
in
mov
jb
outsl
push
repnz
lods
and
xchg
xchg
sub
mov
negb
push
insl
stos
xchg
out
push
push
jno
xchg
ljmp
inc
jae
xor
or
push
out
dec
adc
adc
xchg
or
bound
mov
xor
dec
je
pop
das
inc
mov
inc
mov
test
adcl
test
out
sbb
aad
out
icebp
mulps
fadd
leave
adc
cltd
jne
aad
pop
jp
fimull
or
js
mov
insb
cltd
xchg
fbld
or
sbb
lcall
in
or
int3
js
sahf
popf
bound
mov
jnp
xchg
loopne
inc
cs
arpl
fnstcw
and
pop
xchg
sbb
cmpsb
imul
and
ss
movl
fs
mov
lea
xchg
xor
ja
jb
ss
push
das
pop
and
sbb
rorl
pop
cli
js
shlb
rorb
push
stos
fwait
mov
jo
add
xchg
in
sbb
bound
xchg
push
jle
lahf
outsb
jecxz
test
hlt
inc
xchg
in
int3
add
adc
jmp
enter
mov
xrelease
lahf
clc
or
cmp
lret
in
insl
ss
cs
push
insl
gs
sub
jns,pn
js
mov
mov
int3
pushf
mov
es
leave
mov
or
insl
inc
sub
mov
pop
jae
addr16
je
lret
aaa
mov
inc
xchg
xor
xchg
xlat
add
mov
push
and
mov
jo
push
cmp
xchg
imul
push
xchg
xor
dec
inc
icebp
imulb
cmp
aas
jno
push
negl
and
mov
aas
stos
mov
fstpl
inc
addl
and
cmp
mov
scas
lock
std
cmp
mov
sub
aad
mov
lret
pop
cmp
pop
insb
mov
jecxz
faddl
pop
cmpl
mov
cmp
dec
daa
jmp
mov
ret
aaa
ret
pop
test
flds
xor
adc
aas
mov
jo
mov
push
xor
pop
jnp
movswl
lods
dec
jg
fidivs
jge
sbb
add
nop
push
insb
pop
cmp
cmp
pop
xchg
es
rorl
or
jne
sub
outsb
das
mov
cmp
mov
fadds
out
xchg
lret
ret
repnz
int
fdiv
es
mulb
mov
dec
cltd
mov
mov
fcompl
and
out
das
ficoml
dec
test
inc
mov
movsb
xchg
fmul
xchg
dec
add
push
sbb
push
mov
lea
rcrb
jge
je
stos
xchg
mov
dec
pushf
mov
dec
mov
and
scas
ret
cmpsb
clc
jmp
dec
xor
mulb
ss
stos
jg
cmp
out
mov
or
subl
ja
xor
xor
xor
add
addr16
fucompp
xlat
test
sub
mov
arpl
xchg
jo
and
xor
mov
shrb
cmpsl
pop
push
adc
shll
xchg
shll
mov
ficoms
subb
dec
add
fistpll
daa
lods
outsl
js
subb
lds
cmp
push
mov
xchg
fbld
mov
inc
mov
mov
add
popf
pop
inc
rolb
push
jae
andl
pusha
shll
out
push
push
cmp
push
push
ret
fdivs
mov
add
push
dec
pop
aaa
fldcw
ja
test
mov
fisubrs
mov
outsb
popa
lock
mov
addr16
and
mov
or
dec
incl
into
jo
mov
fdiv
outsb
pop
dec
gs
jbe
mov
scas
jp
fwait
scas
jmp
out
bound
sbb
gs
inc
inc
adc
leave
arpl
xchg
xchg
popf
call
aad
lock
xchg
push
cmp
sbb
ficoms
push
cmp
movsl
mov
sti
into
mov
enter
jno
rol
cmp
aaa
xor
ss
popa
jnp
lods
cmpsl
inc
cmp
lret
push
ja
leave
ljmp
dec
ror
lods
or
sub
lcall
outsl
and
xchg
xor
jo
push
aam
nop
stc
mov
test
jmp
mov
comiss
sar
fwait
test
outsl
test
adc
mov
dec
mov
push
es
push
xchg
js
dec
mov
or
mov
cmp
push
je
mov
dec
xchg
faddp
sbbl
out
adc
pushl
push
mov
xchg
jnp
ror
mov
mov
fdivl
add
push
sub
dec
xor
out
jp
add
test
xchg
push
sbb
filds
jle
mov
daa
jg
add
cmp
shlb
mov
xor
cmp
adc
call
mov
popf
test
lds
stos
pop
mov
push
ja
lods
popa
ds
mov
or
call
out
or
or
sub
push
lea
shl
mov
repnz
fistps
xchg
repz
push
adc
or
sbb
jmp
add
add
repnz
and
xor
add
cmp
dec
jno
jne
lock
cltd
es
cli
testb
jge
adc
pop
out
jae
adc
inc
je
mov
lea
stos
jne
outsb
jne
ja
cmp
inc
pushl
fucomip
out
repnz
lahf
xor
sub
mov
pop
mov
movb
mov
imul
cmp
and
aam
aam
mov
ss
aas
ja
adc
cltd
or
test
lock
mov
loopne
test
mov
sbb
mov
jae
mov
loopne
xchg
sub
and
cltd
icebp
ds
jno
dec
xchg
bound
xchg
push
insb
popf
adcl
xor
int
cmpsb
stos
insb
adc
pop
inc
icebp
inc
dec
dec
aad
xchg
outsb
mulb
push
out
add
outsb
out
dec
and
mov
mov
mov
test
into
flds
cmpsb
out
lods
push
rcll
sub
popa
cwtl
mov
loope
insb
cmp
pop
out
adc
mov
xchg
adc
cmp
roll
ljmp
push
int
jp
adc
int3
sbb
in
jle
popa
adc
pop
cmc
or
ret
mov
sub
sti
inc
mov
or
sub
nop
and
cli
cld
insl
mov
mov
lods
mov
dec
or
in
xchg
sub
pop
fcomi
rep
dec
jb
cmc
sbbb
pop
inc
mov
je
or
mov
and
push
cmp
adc
mov
shl
fs
cs
jmp
adcl
into
jbe
lahf
ret
daa
call
push
dec
xchg
mov
or
cwtl
outsb
push
cltd
std
enter
lea
adc
and
or
sbbb
arpl
sub
fst
fisubrs
adc
out
cmpsl
cwtl
fs
sub
xor
mov
fadds
mov
push
stos
dec
or
fwait
cmp
xor
pop
push
mov
loopne
mov
lods
iret
pop
xchg
xchg
jp
xor
pop
cmp
xchg
xor
jb
testl
jge
add
sub
xchg
movsb
jae
mov
fs
push
pushf
imul
push
inc
or
aas
push
das
jbe
sbb
jl
sbb
push
push
sbb
mov
aaa
shl
mov
adc
mov
jb
jae
ja
mov
mov
mov
loop
fwait
loop
sti
std
stos
mov
push
lcall
out
sbb
pop
cwtl
insl
push
fdivr
pop
cmpsb
rclb
incb
int
ja
jns
add
pushf
inc
setnp
aas
repz
int3
out
inc
dec
outsb
push
add
int3
mov
in
inc
sub
inc
xchg
mov
dec
lea
je
mov
loope
add
or
loope
dec
stc
and
cs
aaa
cmp
jne
add
call
adc
aas
or
scas
xor
and
sub
xchg
fwait
das
push
das
fsubl
mov
jbe
dec
sbb
push
jecxz
jno
loop
xor
lcall
lds
nop
in
stc
adc
iret
mov
rolb
or
repz
mov
pop
mov
inc
int
movsb
jecxz
mov
pusha
pop
mov
inc
push
pop
out
in
push
jns
mov
mov
outsb
int
fimuls
mov
sahf
orl
in
jmp
imul
fsubrs
rolb
add
daa
jecxz
rcll
fildl
xchg
shll
iret
cmpsb
cmp
or
push
cs
incl
mov
push
shrl
fwait
lods
jmp
gs
int3
push
lds
and
jge
push
pop
bound
cli
rorl
or
push
cli
ja
lods
inc
adc
jmp
mov
ficomps
clc
or
mov
add
lret
lock
sbb
jno
dec
lea
jge
test
loope
xchg
sbb
test
push
data16
lds
push
mov
sbb
clc
or
shl
cmp
in
test
sbbb
icebp
frstor
andl
cli
mov
mov
popa
test
xor
pusha
daa
scas
sbb
cmp
aam
loope
mov
mov
ds
jmp
hlt
push
sbb
xor
test
pop
jecxz
sub
and
jecxz
repnz
imul
shlb
cmp
in
inc
mov
add
jge
jmp
iret
jne
enter
xor
ja
fistpll
rcl
idivl
push
pop
daa
repz
cmp
mov
outsl
sub
lcall
adc
jb
dec
stos
aas
adc
jle
jp
gs
fmul
mov
xchg
fistpl
jle
mov
mov
sub
lods
gs
ret
add
adc
movsb
aam
add
push
mov
xor
push
and
adc
xor
jl
mov
add
add
movsl
jno
xor
adc
repz
jl
testb
rcr
lea
pop
push
pop
inc
xorl
pop
shl
cld
mov
js
jmp
imul
xchg
lahf
mov
mov
or
sahf
movsl
sbb
jae
ljmp
fdivrl
mov
popf
or
jns
repz
jl
fmul
sbb
stc
sbb
xchg
push
call
into
jle
inc
insl
idiv
adc
dec
mov
mov
cmp
cmpsb
mov
add
out
ret
fs
in
mov
rcrl
mov
dec
inc
dec
xchg
sbb
jo
add
int
mov
add
mov
mov
repnz
shrl
das
and
pushf
mov
push
xchg
repnz
dec
inc
jb
mov
int3
arpl
or
lahf
or
mov
into
mov
fistpll
sbb
mov
pop
inc
pop
out
push
daa
clc
inc
mov
lahf
xchg
xor
sbb
jo
cltd
mov
and
arpl
pop
jns
aam
add
fwait
insl
jae
cld
push
mov
outsb
adc
mov
ret
jmp
sti
fildll
jp
and
mov
mov
xorl
call
xorl
mov
xchg
notl
inc
stos
addr16
pushf
and
fdiv
lock
add
sub
jg
movsl
pop
pop
aad
jg
lret
mov
inc
scas
fistl
push
shl
mov
daa
leave
and
outsl
rcrl
mov
popa
in
adcl
mov
mov
cmpsb
and
jns
das
pop
leave
xchg
fwait
pop
ds
sarb
in
mov
jl
int3
lods
loope
fmuls
or
sbb
jle
fs
int
fstl
aas
mov
sub
aas
xchg
shld
and
shll
imul
jmp
cmp
shlb
mov
sbb
mov
lcall
xor
adc
sti
and
or
xor
out
aas
jle
sub
mov
mov
mov
idivl
das
push
dec
pop
call
sub
add
mov
lods
or
sbb
add
adc
test
mulb
cmp
cmp
mov
iret
add
hlt
push
cli
push
fnstenv
idiv
push
lret
into
add
nop
repnz
dec
ja
leave
stos
adc
add
xchg
ds
mov
sbb
lret
aad
add
cmp
mov
pcmpeqw
lock
push
adc
or
adcl
lret
ret
push
cmp
add
dec
xor
xchg
cmpsl
sbb
mov
shl
pop
and
jle
mov
fbld
sub
lock
or
iret
add
ds
cld
mov
sub
insb
idivb
cmp
dec
mov
addr16
ret
pop
adc
lock
jmp
adc
call
mov
fbld
mov
daa
push
dec
imul
xchg
xchg
cmp
mov
push
sbb
cmc
aas
push
hlt
mov
dec
mov
or
xor
fstp
inc
sbb
inc
mov
jns
add
lock
pop
jne
imul
jne
cmp
xchg
enter
std
jle
aad
stos
jnp
fs
xchg
bound
mov
xchg
iret
adc
jmp
fiadds
fistps
fstpl
dec
movsl
loope
mov
sub
imul
out
push
xor
add
pop
scas
push
jge
lea
pop
sarl
sbb
sahf
and
xor
lock
scas
or
xlat
dec
lahf
sbb
hlt
dec
das
mov
push
dec
outsl
ja
lea
clc
imul
shlb
out
adc
mov
adc
addr16
cltd
mov
inc
loop
sahf
pushf
sarb
or
lahf
add
sub
mov
xchg
cmp
push
adc
bound
andl
dec
mov
xor
scas
rcrl
sub
jo
pusha
adc
jg
rcrl
pop
lds
mov
jae
sub
cmpl
aaa
pop
les
adc
mov
pop
int3
mov
push
and
es
rcll
pop
jge
jne
mov
ds
or
cli
mov
adc
push
jle
mul
je
push
inc
test
xor
adc
aad
mov
push
imul
mov
fistl
shll
push
inc
into
mov
cmp
nop
inc
nop
dec
mov
insb
sbb
push
pushf
sub
sub
mov
lods
add
jg
mov
std
cmpsb
shlb
and
mov
lds
fsub
scas
bnd
fimull
ficompl
pop
movb
fidivrl
mov
mov
mov
sbb
cmpsb
dec
fidivrs
xlat
sub
sub
sbb
push
push
jg
dec
mov
cmp
aam
test
gs
jmp
xor
fisttpll
add
lret
or
dec
add
and
out
filds
push
sbb
shrb
fadds
aam
sbb
js
loopne
dec
test
dec
inc
outsb
push
jnp
stc
or
add
dec
pop
mov
mov
or
fisubrl
push
fst
xor
es
shr
aam
push
lahf
inc
aaa
mov
sub
xor
les
sbb
adc
xor
hlt
lods
or
shl
mov
aas
orl
outsl
pop
ss
lret
rcl
adc
push
repz
ret
xor
dec
or
pusha
sbbb
in
rcr
fidivrs
jne
pop
xor
pop
ret
lcall
repz
sub
inc
add
or
lds
add
mov
jmp
pop
int
push
inc
es
dec
lods
addb
push
push
imul
int
subl
cmp
daa
scas
xorl
dec
fstpt
cli
leave
ror
sbbl
and
xchg
daa
lods
andb
inc
xchg
cltd
lock
and
lods
loop
xchg
cmp
xchg
mov
add
insl
js
das
push
lret
fs
hlt
dec
std
and
fwait
int
bound
pop
nop
lea
je
into
inc
inc
xor
cltd
xchg
xchg
fwait
push
jmp
fisubs
insl
xor
imul
or
mov
out
mov
ja
jle
addr16
cmc
jae
jmp
sbb
fidivl
add
insl
mov
fstpt
daa
xchg
jae
add
cmpb
rclb
pop
adcl
dec
arpl
sub
sub
jmp
lods
or
dec
cmp
shlb
xchg
hlt
jmp
xchg
or
push
mov
in
lret
xor
pop
lret
leave
mov
fmull
es
leave
jo
lret
pop
fdiv
jo
dec
sbb
mov
call
sub
iret
adc
ja
dec
inc
daa
pop
ret
shll
aas
movsl
movb
movsl
frstor
into
xchg
jge
stos
push
rolb
pop
xchg
cmp
aam
mov
sub
in
lods
out
add
arpl
xor
inc
rol
push
arpl
cli
daa
xchg
pop
leave
lea
jns
mov
jmp
movsb
fs
xchg
fdivr
xor
or
scas
ret
out
inc
cmp
cld
inc
idivl
aaa
jns
and
add
icebp
pop
cmp
ds
pop
mov
sti
push
lods
or
das
mov
es
mov
int
sbb
pop
sub
dec
cli
adc
jns
adc
fsubp
or
xchg
jle,pn
push
and
lret
rolb
aas
mulb
cmpl
pop
mov
pop
dec
in
ja
mov
dec
or
xor
out
aas
in
faddl
xlat
sub
xor
repz
out
lahf
and
xor
fldt
cld
xchg
loopne
sub
shll
addl
divb
adc
xor
ds
imul
or
adc
sbb
btr
notb
jns
adc
and
push
jge
or
ja
mov
cmp
mov
xchg
mov
leave
push
mov
sbb
movsb
cmp
out
aam
sub
sbb
inc
repnz
jecxz
jnp
and
popa
add
dec
sbbl
sarb
inc
lock
pop
inc
adc
ret
mov
and
jp
pop
push
push
push
inc
push
nop
mov
ja
in
testl
jns
inc
cmp
outsb
cmp
movsl
dec
jbe
inc
nop
lock
in
add
push
dec
push
jl
add
sbb
fwait
sbb
loope
pop
mov
dec
jp
loopne
enter
dec
leave
pop
rol
pop
fcmovnbe
pop
popa
xchg
pop
jnp
aad
push
fildll
insb
mov
mov
mov
test
dec
shll
xor
nop
cmpsl
mov
icebp
lock
inc
push
jle
test
faddl
int
call
dec
cli
in
dec
pop
jae
inc
rolb
jnp
push
clc
dec
jg
outsl
inc
sarl
lret
jns
pop
test
pop
push
cltd
out
pop
adc
adc
sub
test
jl
aam
lods
outsb
addr16
scas
sub
mov
mov
pop
rorl
cmp
outsb
loopne
es
or
popa
xchg
das
movsl
sti
mov
mov
rol
and
fiaddl
ret
mov
pop
push
das
imul
or
into
popa
or
mov
adc
repnz
mov
faddp
mov
push
pushf
pop
rorl
lea
in
aam
cmp
fstl
subl
jge
and
pop
lahf
sarl
xchg
add
fistpl
jns
ds
sarb
sahf
mov
arpl
cmpsb
and
jo
push
mov
jg
shrb
xchg
cmp
inc
js
aam
push
jb
js
inc
adcb
sub
daa
hlt
xor
pop
ret
mov
in
mov
or
xchg
imul
xor
jp
xor
hlt
hlt
int
insl
mov
ss
sbb
inc
or
imul
cmpsl
es
xchg
scas
sahf
push
mov
xchg
push
jge
jmp
or
xor
sti
xchg
mov
xchg
pop
cmpsl
xor
xorl
rcrl
dec
je
rorl
mov
mov
push
mov
push
mov
push
push
add
jle
mov
push
xchg
cmpsl
aas
dec
loope
dec
push
adc
sbb
dec
movb
sahf
dec
add
push
sub
mov
sahf
or
icebp
mov
add
ljmp
pop
mov
add
data16
ret
or
cmp
mov
int3
lret
filds
ret
popa
dec
nop
clc
push
arpl
mov
push
and
icebp
inc
push
push
xchg
pop
insl
xchg
fs
xchg
fwait
inc
sub
lods
xchg
sbbb
push
inc
inc
dec
test
push
lret
imul
pop
cmc
xor
sbb
pusha
xchg
gs
jae
inc
nop
mov
push
and
and
sub
into
pop
mov
stos
popf
adc
mov
lcall
divl
push
rcrb
mov
xchg
sbb
pop
test
xor
xchg
fidivs
jnp
dec
mov
icebp
int
and
push
pop
loop
inc
movsb
pop
or
jp
dec
sub
xchg
imul
mov
pop
loop
cmpsl
stos
add
push
cld
mov
fs
cwtl
sub
and
daa
sti
mov
addr16
adcb
add
lret
jl
push
dec
push
lea
movsb
xor
das
test
mov
jns
das
mov
or
or
sbbb
push
mov
popf
aaa
mov
pusha
sub
push
inc
inc
call
add
sub
insb
stc
sti
cmpsb
inc
and
xor
mov
jecxz
lods
jl
push
gs
inc
mov
adc
lods
push
cmp
jbe
jp
add
psubq
dec
aaa
lret
xchg
out
xor
inc
cmp
bound
xor
pop
inc
push
xlat
pop
mov
jae
dec
jg
xor
adc
pop
xor
outsl
pop
or
fisubl
mov
mov
lret
lret
push
test
mov
push
in
lods
std
in
mov
cs
and
mov
mov
xlat
jg
xor
dec
pop
push
inc
aam
out
push
fidivl
pop
adcb
mov
and
jecxz
jge
enter
sahf
sub
push
jle
xor
dec
cmp
pop
enter
fisubrs
loop
stos
aam
js
shl
or
imul
dec
xchg
fnstenv
and
xor
inc
jmp
mov
mov
data16
xchg
call
adc
sbb
shll
imulb
insb
std
add
imul
mov
fs
pop
sbb
mov
in
shrb
push
sti
inc
lret
sarb
hlt
inc
hlt
xchg
or
jmp
or
testl
dec
movsb
sbb
mov
dec
ret
fs
lods
icebp
popa
inc
jbe
out
sbb
or
lock
aad
and
cld
jg
sahf
fwait
sbb
data16
lret
insb
popf
mov
jge
xchg
mov
pop
mov
or
gs
mov
inc
stos
and
mov
mov
and
repnz
add
aaa
ja
outsl
fidivrs
dec
insl
loopne
idiv
and
mov
leave
sti
insb
shll
insl
aad
sub
and
mov
sti
fnstcw
xchg
dec
shlb
or
stc
cmpl
psubq
pop
pop
stos
jae
in
cmp
jnp
rorb
push
mov
pop
out
and
jp
aas
push
out
push
inc
stos
lods
in
adc
cmpl
or
icebp
popf
cmp
push
fstpl
and
adc
in
jg
fwait
pop
in
addr16
test
popf
jl
fwait
cmp
jge
subl
dec
sbb
sub
addl
fwait
jmp
mov
jbe
inc
cmp
cwtl
into
xchg
je
sbb
leave
js
addb
mov
mov
loope
sbb
cmc
jp
pop
movsl
and
loope
mov
lods
fidivl
cmp
mov
push
cwtl
and
out
mov
sub
adc
jo
jbe
or
stc
push
int
xchg
movsl
sub
cld
cmp
xchg
ret
enter
icebp
in
js
pop
pop
add
cltd
jne
mov
int3
aas
nop
insb
movsl
int
cwtl
ret
xchg
insb
lock
sbb
ret
scas
jecxz
sub
popa
leave
incb
adc
clc
sbb
lahf
sbb
imul
shlb
adc
lahf
arpl
loop
scas
in
cmc
or
jl
daa
sbb
repnz
inc
cwtl
test
cmpsb
add
and
pop
xchg
sub
out
cli
add
das
mov
add
insb
add
not
int
dec
ret
scas
in
mov
fcompl
sub
add
mov
lahf
jnp
popa
test
je
push
lea
jnp
dec
push
or
mov
jbe
leave
fwait
push
test
js
lahf
or
pop
push
push
push
sbb
jo
lret
inc
push
jae
leave
nop
ss
add
imul
dec
sbb
cmpl
jae
mov
out
scas
sub
das
movb
dec
das
and
popf
ret
fwait
addr16
out
lods
rcl
push
mov
mov
out
in
out
fldl
lock
mov
cld
cltd
out
pop
outsb
out
call
shlb
xor
jb
rcrl
lock
imul
out
lods
push
popa
mov
je
cmp
lea
test
mov
insb
popa
pop
add
cmpsb
add
in
data16
or
pop
inc
in
sti
lea
in
scas
xor
stos
mov
shrl
adc
stos
dec
sti
sbb
push
add
or
and
mov
fisttps
ret
pop
inc
andb
lods
inc
enter
aam
adcb
adc
dec
pusha
cltd
sbb
sub
sub
aaa
shrb
mov
arpl
jg
mov
and
mov
dec
pusha
dec
add
in
and
xor
mov
xchg
xchg
shrl
adc
insb
xor
mov
lock
push
push
arpl
aas
cltd
lret
in
lret
shlb
mov
fisubrl
out
push
outsb
ja
sub
je
loope
push
out
shrb
in
mov
pop
push
dec
mov
sbb
push
loop
mov
sub
pop
or
sbb
ret
pop
sbb
cwtl
push
xchg
push
jb
mov
jo
xchg
in
pop
jmp
pusha
stos
push
or
test
gs
push
lds
cs
es
sbb
std
mov
mov
std
cmp
mov
cmpsl
fyl2x
pop
or
xor
jnp
fs
sahf
out
ss
ss
add
mov
adc
and
mov
mov
sahf
adc
push
sub
cs
jns
xchg
leave
rcl
sbb
lret
or
mov
call
loopne
adc
out
rorb
test
daa
arpl
mov
xor
and
mov
pop
adc
and
adc
int
jl
jge
cwtl
cmp
es
sbb
test
test
xor
daa
je
arpl
mov
mov
negl
fyl2xp1
jecxz
xchg
mov
movsl
xchg
xchg
mov
xor
test
lds
ret
inc
add
std
movsl
call
into
incb
popf
inc
roll
das
dec
jmp
icebp
loope
loope
mov
notl
nop
sahf
mov
adc
adc
or
push
or
test
sbb
and
sti
out
push
in
std
dec
out
push
cmp
cli
xchg
jae
adc
xchg
or
in
mov
jge
pop
adc
es
pop
adc
in
mov
cmpsl
push
loope
ss
cmp
mov
xchg
xor
scas
bound
sahf
adc
sbb
push
fwait
lcall
repnz
dec
mov
lods
mov
mov
mov
cmp
push
or
fwait
inc
movsl
xor
jle
dec
icebp
lods
cld
cltd
adc
push
jecxz
pop
call
pop
adc
into
pop
xchg
dec
insl
mov
cmpsb
sub
cli
aaa
mov
imul
out
push
inc
and
hlt
ud1
nop
ret
mov
sti
data16
xor
sub
and
adc
stc
hlt
and
sub
data16
and
test
std
mov
jl
xchg
int
mov
out
mov
es
test
xlat
andl
cmc
mov
mov
jge
std
pop
out
sub
pop
aaa
cs
push
sub
pop
adc
subl
fists
push
jne
dec
sti
add
and
ljmp
test
and
mov
test
sbb
ja
daa
sbb
sbb
test
sahf
sub
push
jmp
out
cltd
divl
fidivs
fldcw
or
leave
aaa
or
les
sbb
cmp
loope
xor
sbb
jae
es
mov
mov
pop
shlb
xor
orb
orl
mov
xchg
imul
xchg
adc
push
or
xchg
clc
add
cmp
ss
jns,pt
push
sub
pop
leave
sbb
jmp
hlt
xor
pop
lods
ret
add
in
in
inc
inc
int3
cmp
mov
dec
jmp
fldl
out
xchg
pop
and
cmpsb
push
xchg
xor
in
cmp
inc
xchg
pop
mov
inc
test
fs
test
ds
movl
adc
repnz
rcrl
push
sub
and
cld
das
fiadds
mov
cmp
xor
mov
xchg
xorb
cltd
out
into
push
jbe
popf
jae
stos
fstpt
inc
sbb
sahf
jns
in
fcoml
hlt
shrl
lcall
std
fucompp
in
mov
push
push
push
adc
adc
pop
sarb
push
inc
test
adc
lods
lahf
mov
js
sbb
adc
aaa
lds
xchg
inc
into
cmpsl
out
shrd
ffree
push
dec
repnz
insl
movsl
mov
sub
dec
je
or
mov
jge
dec
push
xchg
fsub
mov
outsb
mov
and
push
sbb
hlt
pop
cmpsb
xchg
and
clc
mov
pop
lock
mov
push
or
xor
dec
in
push
xchg
adc
jecxz
pop
outsb
incl
jo
fstpl
loopne
imul
mov
inc
test
mov
jge
inc
pop
sbb
rcrl
xlat
cmp
push
add
icebp
insl
add
std
mov
push
dec
mov
dec
xlat
jbe
xor
js
js
push
and
mov
cld
mov
es
fmull
bound
gs
inc
loopne
fwait
adc
aam
std
stc
dec
in
out
jo
sub
stos
loopne
lahf
imul
ds
shr
xchg
lea
add
push
sbb
mov
pop
iret
imul
lret
stos
out
inc
sbb
arpl
shrb
and
loopne
pop
scas
push
and
ret
xchg
scas
push
inc
push
xchg
fimuls
pop
scas
add
hlt
or
mov
jg
rclb
ss
push
dec
int3
stos
xchg
sub
mov
xor
in
adc
sbb
fcompl
pop
add
fcoml
adc
sbb
xchg
mov
or
mov
jns
mov
lcall
pop
in
xchg
rol
lret
into
rclb
mov
add
mov
or
adc
add
daa
and
repnz
push
jnp
lret
mov
arpl
ficompl
das
push
jmp
lcall
mov
iret
cltd
dec
jecxz
pop
push
sub
sarb
es
jle
xchg
lock
popl
mov
aad
iret
push
mov
jp
repz
sub
jl
lods
xor
push
mov
filds
mov
fbld
mov
int
test
cmpl
push
bound
xor
movsl
jae
dec
cli
sub
shl
or
daa
jns
xchg
xchg
mulb
leave
rcr
add
jg
lret
jmp
fcomp
ret
pop
fcmovne
push
cmc
out
adc
orl
sbb
push
das
sub
xchg
movsb
aaa
or
xor
int
loopne
les
cli
add
mov
xor
jnp
cmpb
out
daa
or
and
cltd
pop
loop
mov
inc
stos
xor
xchg
mov
cld
pop
push
push
lods
mov
and
roll
lret
mov
inc
lock
pop
neg
xchg
adc
ret
mov
aad
lea
rorl
fwait
dec
jle
lret
test
pop
out
mov
inc
jle
lds
imul
or
je
jne
push
jne
adc
sbb
lret
xchg
fistpll
or
xor
cmp
add
pop
sbb
mov
mov
call
mov
hlt
adc
adc
inc
stos
cmp
jnp
fwait
xchg
cmpsl
iret
mov
mov
cmc
mov
rcrl
ss
int3
xor
mov
popf
iret
sub
fidivs
xlat
cmp
dec
xor
sbb
mov
movsb
popf
cli
dec
xchg
popf
adc
xor
inc
pop
jmp
mov
xor
inc
dec
ror
gs
xchg
outsb
push
jno
enter
ret
jg
shl
mov
xchg
dec
das
fst
rorl
xlat
xor
imul
test
pop
bnd
fdiv
xlat
xor
imul
dec
dec
repnz
jecxz
aam
adc
stc
icebp
xor
sbbl
negl
sub
jnp
std
enter
in
bound
stos
outsl
je
push
ret
lcall
adc
sub
mov
mov
jne
mov
sub
dec
sub
out
mov
dec
hlt
aam
mov
insl
mov
adc
js
and
sub
sbbl
xor
shl
sub
jae
xchg
sbb
outsb
push
push
mulb
ret
mov
imulb
cli
dec
test
sahf
or
out
ret
or
inc
pusha
add
xor
pop
in
and
jbe
pop
and
lds
inc
loop
enter
add
xchg
and
cmp
sub
pop
pop
push
xor
mov
push
xchg
adc
dec
xorb
sub
mov
sbb
dec
and
les
andnps
jb
fwait
icebp
leave
xchg
push
mov
jb
dec
fnstenv
std
lods
pop
repnz
add
mov
aad
mov
ficoms
nop
popa
std
mov
roll
inc
pop
push
xchg
mov
inc
hlt
and
outsb
jmp
sbb
int
int
loope
push
add
inc
icebp
mov
in
mov
jnp
jb
inc
mov
insb
sbb
in
sub
inc
pop
imul
in
test
int3
loopne
lahf
adc
mov
or
or
push
mov
pop
mov
loope
adc
sub
inc
jno
fidivrl
mov
lods
sub
faddl
jp
clc
jmp
mov
mov
sub
jmp
mov
dec
inc
fs
cwtl
push
arpl
mov
adc
or
inc
mov
cmp
int
movsb
inc
gs
mov
or
in
sbb
xchg
incb
das
add
imul
out
jnp
xor
stos
cld
nop
jp
and
sahf
jb
sub
pushf
sub
mov
dec
sub
pop
fcoms
push
ret
popa
popa
xchg
orb
daa
mov
xor
loope
or
xchg
mov
dec
jecxz
adc
insl
jmp
sub
mov
test
repz
push
xchg
shll
std
fnsave
adcb
repnz
dec
outsl
pop
sub
push
or
cmpl
pop
popa
insb
dec
xchg
and
imul
lods
xlat
jnp
out
push
jne
push
decb
push
jp
in
in
loop
xchg
pop
push
jl
mov
mov
arpl
inc
lret
mov
xchg
rorl
push
and
add
mov
mov
imul
shl
xor
mov
and
ja
cmp
add
push
xor
sbb
push
push
xorb
lea
pushf
test
jnp
call
ss
fs
inc
push
mov
jmp
dec
cli
or
push
xchg
ds
aad
fimuls
xchg
sbb
push
lcall
cmpsb
sbbb
jns
sub
add
aas
push
jg
arpl
andl
sbb
aas
or
cmp
jns
push
sub
fists
test
mov
adc
into
popf
sub
loopne
fistl
jo
dec
pop
and
js
cmp
std
rorl
xchg
data16
push
jg
test
adc
lds
push
pop
rclb
ret
push
push
jecxz
xchg
std
int
or
frstor
adc
mov
xchg
das
ss
xchg
les
sarb
mov
cmpsl
lcall
xor
cmp
in
or
xor
adc
xchg
jb
push
sbb
mov
mov
outsl
jo
inc
mov
lret
pop
sbb
cmpsb
mov
mov
movsl
mov
cmp
ret
mov
and
fmulp
sub
les
je
push
push
in
pushf
mov
mov
hlt
cmp
mov
ret
jae
mov
ja
stc
shll
mov
push
mulb
sbb
cltd
lods
test
std
bound
imul
das
or
push
fistpll
sbb
adc
lea
mov
int3
icebp
inc
sub
out
repz
pop
pop
ficoms
mov
gs
xor
mov
adc
or
sub
daa
test
jge
push
test
in
or
pop
adc
or
mov
lahf
push
icebp
mov
fucomip
push
dec
cmc
mov
shlb
mov
daa
dec
lock
hlt
outsl
ret
sub
arpl
mov
cmp
pop
stos
inc
dec
dec
push
inc
shl
je
sbb
lahf
pop
cli
cmp
je
and
pop
lods
mov
xchg
into
or
and
mov
inc
sti
or
mov
lock
cmpsl
and
xchg
pop
sub
add
sbb
ffree
inc
xchg
lahf
jns
inc
add
cmp
push
fsubrp
leave
cltd
xor
hlt
sub
in
push
test
cld
fiaddl
fabs
insb
cmp
in
jnp
xchg
mov
jg
test
cltd
mov
mov
loope
cmp
mov
test
sub
cmpsl
and
data16
imul
sti
pop
test
movsl
inc
es
sti
mov
jo
fcompl
dec
xchg
xor
sbb
cmpsl
loop
or
dec
fists
push
jnp
scas
jmp
nop
es
gs
das
xchg
push
aas
sbb
jbe
rorb
call
push
cmp
jge
push
std
push
out
ficompl
push
xor
xor
int
repz
iret
mov
rep
cmp
loope
les
leave
outsl
sbb
mov
mov
mov
pop
jge
add
or
push
or
into
js
jns
das
sub
es
pop
or
mov
scas
daa
sbb
fmulp
mov
pusha
dec
and
sbb
sub
lret
add
or
and
jge
outsl
pop
dec
or
push
xchg
push
dec
sbb
adc
ficoms
dec
rclb
sbb
sbb
mov
add
mov
jns
les
call
lea
fsub
jb
cmp
es
and
cmp
incb
mov
in
ret
popa
pop
lcall
inc
gs
or
aam
movsb
sbb
arpl
add
bnd
push
jl
jp
scas
sub
jecxz
pop
in
jg
xor
lock
fdivs
push
cmp
adc
scas
sub
sub
mov
adc
imul
in
mov
inc
movsb
xor
cli
cli
popa
pop
ret
and
pop
lcall
test
push
or
shrl
mov
in
mov
stos
or
adc
leave
xor
mov
jae
sub
out
shll
int
rolb
inc
push
sbb
lods
mov
jle
adc
fildll
stc
push
aam
or
or
mov
dec
lcall
into
cwtl
pop
das
data16
push
movsb
pop
repnz
xchg
repz
call
stos
out
xchg
shll
adc
dec
pop
sub
dec
out
cmpl
rclb
jmp
hlt
repz
push
dec
stos
lods
pusha
jp
or
add
divl
cmp
dec
roll
push
pop
push
insl
mov
inc
inc
fcoms
pop
int
adc
adc
loop
lcall
jle
add
cmpsb
mov
popf
push
push
aad
lea
out
push
repnz
sbb
push
into
inc
clc
xor
dec
rorl
js
cli
movsl
mov
push
mov
int
fbstp
wrmsr
orl
mov
outsl
jge
mov
xor
xor
leave
xor
out
dec
loope
inc
fstps
jne
ljmp
xchg
shrl
ds
lahf
sub
lahf
and
sub
fldcw
out
fildl
mov
shrl
dec
call
inc
mov
xchg
xchg
mov
mov
aas
and
add
xchg
jae
or
repnz
les
insb
int3
or
loop
cwtl
push
rorl
enter
out
or
pop
bound
push
idiv
add
jecxz
sahf
hlt
cwtl
sbb
nop
jns
cmpsl
incl
cmpsb
xor
lahf
cmc
dec
cmp
icebp
icebp
les
cmp
or
push
fadds
repz
mov
mov
cmp
rclb
jnp
sub
shr
iret
adc
and
push
addr16
stos
negl
mov
adc
test
fldcw
inc
cmp
xchg
shrl
jne
cltd
pop
push
mov
sbb
mov
loope
inc
cmpsb
adc
scas
cltd
movsl
lock
cmpsl
or
insl
fidivrl
mov
xchg
negb
sbb
les
into
push
inc
sub
jmp
shr
xchg
adc
ja
add
pop
das
add
in
addr16
rol
cmp
test
mov
sbb
cmp
je
enter
cbtw
int3
pop
icebp
and
or
cmp
mov
lea
push
cmpsb
jge
pop
popf
mov
jns
mov
cli
lods
xor
test
fstps
adc
jg
sbb
mov
cmp
ffree
subb
mov
lods
movsb
mov
pop
in
push
pop
mov
mov
clc
insb
shlb
push
or
out
arpl
xchg
jge
sbb
sbb
jb
test
stc
jmp
add
push
push
push
fs
cmc
lcall
daa
icebp
xor
inc
xchg
adc
loope
in
mov
sbb
add
cmp
jg
inc
cltd
jmp
cmpsl
shl
test
data16
cmpsl
mov
fnsave
in
inc
xchg
or
mov
xchg
orb
ds
andl
or
push
into
pop
mov
push
aas
fildl
jo
xchg
test
fadds
xor
lds
add
repnz
sahf
adc
and
bound
loopne,pt
adc
nop
jmp
stos
jg
mov
enter
incl
mov
mov
dec
stos
adc
adc
cmp
cmpsl
arpl
inc
lods
test
imul
mov
sub
les
add
jmp
repnz
xchg
mov
stos
mov
push
cs
rcrb
mov
pop
enter
and
sarl
pusha
loopne
pop
call
pop
data16
stos
add
mov
jne
stos
xchg
in
jge
sub
xor
cltd
test
jae
int
fldenv
in
cwtl
in
cs
sahf
cmpsb
sub
cltd
stos
lods
lds
repnz
push
mov
mov
add
insl
or
pop
mov
enter
mov
cmp
inc
cli
jle
sbb
push
addr16
fstpt
imul
adc
mov
mov
cs
movsl
xchg
mov
fstl
sub
sbb
jp
cmp
test
cmp
adc
adc
cmp
sbb
testl
xchg
mov
and
rorl
pop
negl
ret
in
jb
pop
add
xor
sub
mov
cli
sbb
fisubl
xor
mov
jae
loop
es
xchg
dec
nop
pop
dec
xchg
jmp
stos
cmp
es
mov
in
mov
sbb
fldt
clc
cmpsb
mov
cmp
add
enter
jl
in
lcall
insl
adc
add
or
test
rorb
cli
ret
movb
fs
cld
or
sub
pop
xor
lret
subb
fdivl
cs
sub
jne
push
movsl
push
iret
inc
mov
fsubp
test
or
xchg
inc
or
pop
adc
add
ret
fucomi
jp
inc
cmpsl
hlt
xorb
in
dec
mov
in
jle
aad
jne
cmp
test
mov
stos
xchg
dec
adcl
and
aas
and
pushf
addl
pop
repz
push
int3
mov
jne
test
inc
jbe
jmp
mov
lahf
mov
or
loop
dec
sub
testl
sbb
pop
mov
push
inc
sbb
mov
sub
iret
xchg
insb
sti
cmp
nop
test
out
add
mov
and
jbe
mov
xchg
mov
cmc
inc
xor
arpl
sbb
inc
fnstsw
add
in
rcrb
adc
mov
mov
nop
nop
mov
mov
jmp
sbb
mov
mov
mov
test
mov
pop
test
dec
jecxz
movsb
jnp
or
cmp
push
ss
cld
cld
loope,pt
inc
jnp
mov
jle
pop
loop
xor
jge
mov
stos
dec
std
ja
imul
add
sti
fucomi
pusha
ja
ficompl
pop
push
inc
lret
mul
mov
pop
mov
sub
jb
testb
inc
in
push
lods
inc
fisttpl
sub
add
xchg
and
loope
sub
shrl
add
out
repz
cli
test
imul
inc
sbb
add
fiadds
push
roll
int
call
adc
bound
out
mov
and
push
int
pusha
fldlg2
xchg
negb
imul
fwait
cmp
and
mov
xchg
mov
fmul
out
sbb
jmp
data16
ljmpw
cmp
and
gs
ljmp
or
pop
adc
popa
popa
inc
jmp
outsb
push
dec
pop
mov
pop
push
xchg
cs
fisubs
enter
push
loope
hlt
aad
push
push
mov
dec
rcrb
dec
and
jbe
mov
or
leave
movsb
pop
and
xchg
pop
stos
aad
aas
aaa
adc
pop
jno
or
repnz
inc
cltd
pop
jbe
std
pop
mov
iret
jecxz
faddp
movsb
sbb
add
jnp
rclb
jno
repnz
stos
cmp
test
xor
sub
mov
cltd
gs
outsb
rorl
xor
orb
in
dec
xor
pop
jno
push
lret
in
lea
ret
cmp
mov
mov
jb
mov
xchg
ret
pop
daa
dec
les
inc
mov
lret
xchg
ret
stos
call
mov
rcrl
cmp
cmpsb
in
notb
shll
push
out
lret
jnp
repz
test
pop
and
loopne
mov
inc
mov
clc
cmpsb
inc
cmp
or
jmp
jmp
inc
mov
js
testl
jne
rcrl
sub
aad
and
pop
js,pt
xchg
test
mov
cmpsb
fsubr
test
hlt
lock
inc
pop
add
inc
jge
jns
sub
test
adc
xchg
mov
mov
hlt
jmp
xchg
jmp
lds
mov
and
inc
dec
popa
add
jmp
push
and
scas
mov
mov
or
adc
cmpb
ret
pop
cmp
push
mov
mov
fidivl
mov
inc
fdivs
or
je
cmp
andl
scas
les
jne
lock
fstl
movsl
push
aas
or
int
xchg
fwait
mov
pop
lret
test
dec
ja
and
test
xchg
xchg
testl
es
jae
aad
stos
mov
dec
xlat
jns
cmp
adc
cmc
fnsave
cmp
jo
sbb
ss
mov
call
xlat
or
inc
std
mov
fwait
dec
popf
mov
fs
stc
inc
in
fs
mov
and
push
roll
jbe
mov
sub
cmp
sub
add
push
mov
or
mov
bound
push
movsl
jno
in
popf
adc
pop
jnp
mov
sub
inc
stos
xor
fadd
add
adc
les
cmpsl
mov
add
mov
iret
addr16
jecxz
mov
pop
dec
dec
and
jge
mov
dec
mov
adc
shl
cmp
dec
cmp
cmp
mov
push
scas
fcomps
test
xor
nop
mov
mov
andb
inc
lret
into
push
movsl
in
adc
cmc
or
faddl
mov
subb
xor
jno
adcb
jae
cs
aam
jge
mov
mov
and
sbb
dec
sub
cmpsb
mov
popa
mov
cmp
cmp
pusha
data16
nop
and
inc
push
cwtl
insb
repnz
addr16
push
scas
sarb
hlt
imul
cmp
pop
mov
jl
cld
lahf
ja
notb
lds
cs
sub
push
mov
jge
pop
jge
add
adc
lret
xchg
inc
add
sub
dec
dec
xor
sub
sub
arpl
outsl
outsb
push
outsb
les
daa
push
jp
fmuls
mov
fidivl
mov
mov
xchg
pushf
pop
data16
push
xlat
std
adc
xchg
or
fmull
insl
adc
test
out
dec
ja
pop
or
inc
ret
call
jnp
fisubrs
mov
jo
mov
inc
mov
and
bound
imul
push
pop
or
and
mov
jne
jne,pn
dec
cmpsb
hlt
push
inc
pop
jle
xchg
cmpsl
in
mov
test
rcrb
popa
mov
mov
mov
mov
icebp
pop
mov
dec
adc
sub
push
aas
add
adc
rcl
inc
push
mov
dec
call
sbb
xorl
and
xchg
fdivr
mov
jnp
dec
dec
xor
dec
das
stos
dec
and
jg
xchg
sbb
jo
rorl
pop
jle
xchg
test
or
cmp
lret
aaa
mov
jle
testb
stc
loop
lods
push
lea
aam
je
mov
arpl
iret
ret
jno
mov
adc
or
xor
cmp
shll
int
sti
idivl
cli
inc
jns
pop
xorb
test
inc
mov
sbb
cli
push
pusha
mov
pop
pop
xor
mov
push
mov
jl
push
sub
inc
das
rorl
cltd
sbbb
in
popf
sub
shrb
in
js
add
or
and
loope
jecxz
movsl
xor
fistps
mov
imul
cmp
or
dec
push
push
imul
and
cmc
test
jne
pop
idiv
mov
inc
pop
ds
push
lret
xor
rcrb
outsl
hlt
jbe
fmulp
mov
mov
sbb
or
push
repz
sbb
loope
dec
and
stos
and
xor
mov
dec
movsb
jecxz
rcr
sub
insb
mov
jbe
nop
mov
xor
xorl
dec
jge
imul
cld
ret
dec
lret
sub
push
sbb
pop
js
cmp
inc
lods
push
or
imul
aas
inc
pop
popa
dec
rcl
xchg
fcom
mov
mov
rcr
lret
or
adc
xchg
mov
fdivrp
add
ja
insl
jmp
push
mov
push
fldl
cs
movl
outsb
imul
fcoml
cmpsl
inc
jne
adc
outsb
popf
cmc
or
aad
nop
out
std
xchg
into
mull
dec
out
stc
cltd
jnp
sub
add
shll
push
sarl
mov
nop
dec
cmp
push
dec
mov
rclb
add
jne
cmc
sti
out
test
jno
mov
mov
jl
cmp
mov
adc
sub
je
loopne
and
push
sub
pop
leave
mov
outsb
sti
in
add
clc
mov
popa
outsb
adc
sti
test
push
push
xchg
mov
cs
shrl
aad
mov
shll
push
bound
cltd
xchg
dec
mov
fistpll
and
sub
into
out
lock
in
lret
sbb
movl
cmpsl
sbb
aas
mov
nop
mov
fcoml
push
lea
sub
out
adc
ja
xchg
rcrb
arpl
fsubrs
in
mov
lods
out
iret
nop
daa
loop
das
sbb
scas
fwait
mov
lcall
jmp
rorl
push
repz
xor
jl
pop
rorl
jno
lds
fmul
sbb
push
insb
dec
xchg
pop
lock
stc
lret
ret
add
repnz
or
push
loopne
aas
push
in
into
outsb
rclb
push
xor
fists
pop
or
xor
push
pop
add
stc
sbb
pop
rolb
je
sbb
je
loope
push
jp
ss
in
sbbl
fidivrl
xor
pop
adc
pop
and
jb
icebp
daa
pop
lret
dec
sti
je
lret
dec
aam
aam
push
push
adc
insb
jnp
jge
jge
jle
mov
adc
adc
into
cltd
or
lret
mov
lahf
pop
push
jne
sbb
or
rcl
xor
loop
test
push
xchg
push
adc
loope
mov
xor
nop
sub
jne
push
push
jb
bound
cmp
mov
inc
mov
mov
adc
call
iret
repz
push
cmp
adc
push
shll
and
imul
adc
sub
dec
out
add
aad
inc
mov
sub
lret
adc
pop
das
loopne
dec
ljmp
fdivr
push
push
mov
mov
mov
subb
cld
das
pushf
mov
or
xor
pusha
jg
pop
lret
bswap
dec
lcall
test
test
mov
mov
sub
sbb
and
and
cwtl
loop
pusha
mov
sbb
imul
aas
enter
mov
mov
push
in
shl
shrb
lods
pop
stos
mov
or
xor
jno
loopne
or
cmp
push
add
add
adc
push
add
mov
bound
jl
jb
les
je
addr16
repz
stos
neg
jns
mov
aaa
push
xor
push
pop
cmc
outsl
inc
xchg
sub
dec
ret
cmp
daa
mov
nop
enter
out
or
or
sbb
mov
push
jecxz
push
sbb
sbb
addr16
push
stos
das
test
mov
loop
fmulp
add
xor
imull
addr16
leave
cmp
jne
outsl
pop
dec
push
mov
dec
mov
hlt
add
sbb
xor
or
xchg
pop
aam
push
loope
jp
mov
ljmp
adc
pop
jmp
mov
xchg
dec
out
in
add
je
shlb
cmp
incb
cwtl
sub
xchg
adc
inc
addl
mov
jl
es
sti
jae
test
cmp
cmp
sub
jg
pop
test
pop
int
jp
dec
dec
pop
jle
mov
cmpsb
fs
call
pop
in
push
sub
xor
mov
paddd
addr16
pop
and
fcomps
js
movb
out
bound
sub
ret
addr16
adc
sub
shr
mov
dec
ja
cmp
or
xchg
or
mov
inc
gs
rcll
adc
cmp
gs
adc
push
int3
jmp
sub
cmp
mov
cli
fadd
dec
ljmp
scas
cmpsl
pushf
push
fdivrp
daa
push
icebp
and
std
dec
and
out
push
jns
xsha256
cmpsb
xchg
mov
ss
cmpsl
fisubs
cmp
cltd
mov
ss
xchg
out
jge
rol
cmp
rcrl
inc
push
bound
js
mov
cwtl
push
cmpsl
mov
stos
cmp
dec
fsubl
rcrb
arpl
mov
push
push
mov
sahf
nop
inc
cmpsl
aas
push
pop
pop
xor
aas
push
add
lock
jns
out
fdivl
hlt
inc
push
fwait
es
sarl
les
sbb
stc
lods
inc
fs
sbb
insl
fidivs
int3
adc
xchg
push
out
das
cmp
inc
pushf
scas
mov
mov
mov
mov
push
xor
inc
cmpb
ljmp
mov
andb
push
dec
adc
test
inc
scas
cltd
in
or
stos
dec
lea
jne
lods
lock
scas
imul
xchg
xchg
xor
mov
jno
js
sbb
cmp
insb
jbe
add
sbb
jae
fstl
mov
fsts
inc
xorb
ja
out
jmp
addr16
es
mov
adc
movsb
test
cmp
push
das
adc
jmp
mov
rclb
inc
or
sbb
popf
push
and
dec
imul
inc
lahf
in
add
dec
lods
cli
sahf
scas
loope
in
jno
aad
sarb
in
mov
or
mov
popf
andl
mov
shrl
rcrb
das
movl
dec
pushf
add
lods
mov
ljmp
aas
and
into
push
insl
xor
out
data16
fsubl
roll
test
push
loope
mov
mov
mov
pusha
sbb
cmp
mov
push
pop
int3
sahf
add
movsl
fwait
jnp
cmp
sti
add
jb
ljmp
jb
jno
lcall
sbb
addr16
in
inc
mov
sbb
sbbl
inc
into
adc
fidivrs
mov
xor
into
mov
in
shr
sub
and
les
and
test
mov
and
decb
sbb
xchg
nop
jle
or
mov
sub
jns
push
das
cmp
addl
lcall
cmp
sub
jge
out
gs
inc
add
stos
mov
and
lahf
dec
mov
cmp
pop
test
test
jo
mov
lods
cs
fsts
xchg
pusha
cmpsb
scas
loope
push
popl
push
ljmp
fisttps
mov
mov
inc
mov
lahf
mov
scas
shlb
ret
imul
sbb
pop
lret
push
sbb
and
pop
loop
sbbb
std
pop
xchg
push
shr
jge
out
pop
inc
aam
or
in
test
inc
jno
pop
fcmovnb
pop
testl
inc
xchg
test
and
adc
jo
ds
les
daa
inc
mov
inc
shll
xchg
cmp
ds
test
cmp
inc
subl
dec
or
jb
cmp
jb
fwait
cmpb
or
pop
shrl
adc
or
cmp
xlat
add
sub
decb
push
pop
cld
jle
mov
scas
divb
cld
fistl
sub
ss
jb
pop
rclb
add
flds
xor
decl
sbb
ds
test
sbb
and
add
lcall
mov
pop
mov
jg
mov
dec
pop
dec
mov
ret
outsl
pop
ljmp
inc
inc
ja
je
mov
mov
cmp
inc
out
lret
jnp
jae
cmc
mov
inc
out
cwtl
stos
push
sahf
xlat
popa
aas
leave
loope
xchg
mov
inc
or
call
rcl
mov
mov
lock
mov
add
imulb
popf
cmpsb
loope
xor
inc
pop
fdivl
push
in
sub
cmp
fimull
daa
mov
inc
lcall
xor
out
cmp
mov
hlt
jnp
jecxz
aaa
pop
jne
cli
adcl
imul
pop
or
sub
fidivl
int
inc
loope
jb
cmp
or
rcrl
cld
mov
adc
pusha
jmp
out
adc
enter
test
outsl
negb
push
mov
jmp
rcl
adc
xlat
out
mov
aad
invd
loop
les
aam
jecxz
scas
pop
mov
mov
lods
mov
pusha
out
das
or
adc
mov
xchg
aas
test
aas
push
mov
clc
or
sub
int
cltd
lret
push
adc
movsb
leave
sarl
cmc
arpl
xchg
push
or
rorb
jp
frstor
adc
ja
addr16
cmc
movsb
mov
mov
cmpsl
fiaddl
sbb
xchg
fsubr
adc
repnz
fs
cmc
fdivrs
dec
push
lret
adc
mov
pop
popf
jge
stc
daa
fwait
shlb
xchg
shll
push
push
leave
lahf
jp
fucomi
aaa
sbb
popf
cmpsl
xor
xor
rolb
jecxz
add
out
sub
icebp
iret
cmp
repz
loopne
aam
mov
add
adc
mov
xchg
test
leave
outsl
and
loope
and
mov
fdivrs
inc
dec
and
inc
scas
rcrl
ja
pop
fwait
das
add
add
jno
jo
dec
mov
fisubrl
jbe
cs
es
stc
or
adc
xor
imul
jp
fxsave
mov
loope
mov
pop
dec
ret
fcmovnbe
xchg
idiv
push
cmp
cs
pop
jne
cld
lahf
fidivrs
pusha
repz
div
cld
cmp
cli
xor
loopne
pop
and
cmp
xor
pop
inc
outsl
xchg
rorl
jmp
mov
sbb
scas
jbe
add
into
pop
jno
test
sti
inc
mov
sbb
jb
repz
sbb
mov
lcall
push
mov
cli
cmp
add
lcall
icebp
inc
mov
push
add
adc
mov
xor
imul
rcrl
sti
and
dec
pop
xchg
pop
lds
mov
dec
or
shl
mov
fstl
stos
mov
push
out
ljmp
mov
xchg
cmp
scas
cld
sar
das
nop
aas
dec
adc
bound
lcall
sbb
fisubl
inc
cld
xchg
ss
and
fimuls
jno
mov
mov
mov
push
cld
push
add
repnz
adc
pop
sbb
dec
int3
movsb
out
adc
mov
sbb
stos
pop
jecxz
lock
imul
cld
sub
jne
out
out
dec
enter
ljmp
jmp
pushf
xchg
iret
loop
lods
sarl
cmpb
push
fimuls
adc
fs
loopne
dec
fucomip
adcl
lea
ja
cs
or
mov
pop
mov
arpl
cmp
xchg
push
xchg
mov
mov
test
out
cmc
dec
xchg
out
popa
lea
lock
fucom
cmpsl
sbb
mov
xor
cmpsl
jnp
cmp
push
mov
xor
fnsave
adc
cs
jecxz
pop
cmpsb
add
mov
ficoml
icebp
mov
int3
jnp
pushf
cld
jns
dec
xchg
cmpsb
add
lret
cmp
pop
clc
adc
lret
jbe
dec
lea
in
inc
cmp
and
lea
ljmp
pushf
adc
outsl
decb
in
jb
push
fcompl
fildll
jp
idivb
xor
mov
fcomi
lahf
in
in
jbe
mov
leave
mov
push
mov
scas
jne
rclb
cmp
addb
push
into
fstps
xchg
sub
cmp
int
int
dec
aam
pop
jno
cmpsb
sub
xor
add
mov
xchg
dec
cmpsl
rorl
cmpsl
stc
cld
push
sbb
js
rcrb
sub
pop
pop
stos
dec
jb
lret
inc
dec
jns
xchg
add
in
inc
sub
rcl
es
jmp
test
pop
scas
inc
fisubl
mov
push
cs
call
pop
mov
addr16
lcall
or
neg
mov
lret
mov
fmull
arpl
add
insl
sahf
cmc
inc
adc
dec
push
pop
xchg
clc
daa
or
loope
jle
adc
imul
sahf
add
pop
add
and
xchg
lret
jecxz
sub
push
gs
jg
shlb
sbb
fcmovb
adc
sub
pushf
movsl
mov
jmp
jecxz
pop
pop
or
cltd
sbbl
pop
andb
jns
xor
lcall
sbb
dec
jp
or
imul
push
faddl
imull
pop
int3
pop
ret
xchg
sub
fstpt
jne
enter
out
xchg
aaa
dec
inc
lret
add
or
inc
inc
insl
inc
out
out
sbb
popf
push
jle
mov
movsb
push
stos
jno
out
dec
data16
xchg
push
dec
hlt
lock
pop
mov
sti
les
or
cs
inc
mov
xchg
adc
aas
stc
out
je
mov
cmc
dec
push
je
pop
or
fisttpl
dec
testb
lcall
xor
mov
pop
aam
int3
rcll
stos
cs
into
jo
cmpsl
xchg
popf
xchg
mov
add
dec
leave
mov
and
mov
call
inc
mov
bound
repnz
adc
jnp
aas
xchg
daa
cmpsb
lahf
and
in
pop
mov
and
rolb
ds
inc
dec
xor
xlat
pop
dec
rcr
lcall
repz
adc
loop
lret
fwait
add
jbe
adc
rcll
mov
xor
add
ficoms
xchg
cld
add
aad
cmp
and
and
addr16
jmp
jne
sbb
xor
jle
stc
aas
adc
xor
push
shrb
call
and
int3
pop
jo
mov
add
aam
push
adc
mov
ljmp
idivb
mov
leave
testl
lahf
adc
xchg
in
rdpmc
call
in
push
ds
rolb
fwait
loopne
add
das
sti
push
push
fsubrl
call
test
adc
add
dec
pusha
jecxz
push
outsb
daa
jb
scas
jbe
clc
adcb
mov
xchg
es
push
gs
sti
sub
xchg
adc
and
lods
mov
adc
push
sub
sub
xor
mov
dec
sbb
or
sti
xor
repnz
rcrb
or
call
and
lcall
lods
jle
sbb
or
movsl
loopne
jb
imul
and
xchg
sbb
inc
and
dec
jb
dec
mull
out
rolb
mov
push
mov
mov
leave
out
loopne
pushf
xor
jle
dec
xor
fnstsw
test
xchg
int3
xor
and
fs
pop
adc
push
cmpsl
mov
mov
mov
or
lcall
hlt
ja
adc
and
push
mov
and
mov
sbb
pop
cmc
dec
xor
cmp
daa
xor
imul
iret
inc
mov
xor
push
scas
mov
adc
adc
pop
in
arpl
cmp
test
xchg
cltd
sbb
mov
inc
and
xchg
das
dec
push
mov
mov
mov
mov
xchg
push
pop
je
lret
cmp
mov
pop
in
pop
imul
lahf
in
push
push
repz
shll
dec
lock
dec
pop
mov
mov
ret
push
inc
sub
pop
into
fwait
jle
adc
adc
xlat
cwtl
nop
pop
les
movsb
scas
movsl
sbb
popf
fisubrs
xchg
push
mov
xchg
in
xor
jns
icebp
pop
test
outsl
add
mov
scas
mov
add
sbb
lretw
cli
mov
in
incl
inc
es
mov
inc
iret
lock
repnz
imul
xor
adc
or
cld
imul
sub
add
push
and
out
inc
push
push
push
popf
aaa
jl
sbb
es
sbb
js
hlt
mov
movsl
pop
into
insl
je
push
add
mov
push
mov
in
mov
cli
lahf
inc
fs
test
int3
aad
movsb
add
nop
ret
cmpsb
bound
pop
ret
and
dec
push
gs
dec
inc
push
lods
jecxz
shrb
mov
xchg
shlb
imul
push
mov
aaa
sti
xor
mov
call
hlt
ret
inc
inc
sbb
xchg
and
test
insb
cld
push
pop
xchg
push
cmp
leave
outsb
mov
ljmp
insb
cmp
xor
and
cmp
sbb
incb
sub
push
inc
flds
fsubrl
aas
xor
and
lmsw
out
jmp
insb
push
adc
pusha
outsb
scas
and
daa
mov
sbb
jmp
aad
inc
aad
jl
sbb
xchg
push
mov
fimuls
cmpsb
adc
ljmp
sti
ret
call
loope
cmp
fsubrs
fiadds
in
xor
sub
rcll
or
scas
shrb
test
and
mov
test
add
xor
fdivrs
fwait
jo
imul
xchg
cmp
jns
int3
mov
mov
dec
aaa
add
and
mov
add
inc
sub
ds
pushl
es
nop
jnp
mov
ret
dec
push
pop
mov
mov
inc
data16
jmp
dec
bound
mov
mov
sahf
push
pop
jp
fiadds
xchg
push
adc
in
cmp
mov
stos
shll
outsl
or
data16
inc
push
movsl
out
sub
xor
mov
les
xchg
dec
or
in
mov
ficomps
mov
or
mov
sbb
mov
call
push
lods
frstor
push
ficomps
repz
push
mov
lret
into
jbe
in
mov
pop
dec
mov
cmpsl
pop
push
mov
jmp
ljmp
je
imul
push
loop
mov
mov
add
sub
sbb
cmpsb
push
push
data16
dec
add
fsubrs
inc
lret
mov
cmp
stc
xchg
lret
xchg
icebp
test
xor
jmp
cmc
lods
cs
das
mov
cwtl
and
mov
shl
mov
xor
in
stc
push
inc
insb
stos
sub
mov
mov
xlat
pop
pop
jo
stos
and
andl
int3
fwait
or
into
or
sub
pusha
rorl
sarl
test
jg
test
mov
pop
sbb
inc
sub
mov
jp
scas
jmp
xchg
test
lcall
dec
leave
mov
int
loope
sub
test
inc
mov
or
gs
nop
pop
mov
aaa
cmp
mov
cmp
bound
add
nop
dec
or
stos
inc
jno
fsqrt
pop
jne
sub
mov
fdivl
test
out
clc
jnp
fwait
push
stos
sub
std
pop
mov
xchg
adc
sahf
sbb
lock
mov
aas
xor
mov
xchg
cmpsb
mov
inc
or
xchg
sbb
mov
pushf
mov
lods
jb
mov
sahf
arpl
cmp
fdiv
stos
nop
cmpsl
mov
mov
push
lock
dec
add
ljmp
test
adcb
mov
pusha
dec
bound
lods
popa
dec
je
fistl
fnstcw
mov
add
in
imul
iret
js
cmp
clc
cmp
or
dec
imul
fwait
sub
dec
jmp
out
mov
pop
les
fcmovne
scas
mov
div
lock
insl
and
sbb
iret
cmpsb
or
sbb
xchg
pop
fnstenv
pop
int3
mov
sbb
stos
fimuls
pop
xor
cmpsb
inc
or
pop
lret
pop
mov
imul
sti
ss
mov
xchg
dec
in
cli
xchg
lds
xor
out
cld
mov
mov
xchg
repnz
fldenv
or
jo
push
inc
sti
mov
enter
xchg
icebp
push
dec
popf
mov
mov
sbb
in
mov
or
icebp
arpl
mov
dec
inc
sbb
xchg
sbb
ret
mov
mov
ljmp
adc
dec
push
xor
dec
cmp
or
cld
inc
pop
or
nop
inc
sbb
cmpb
lret
push
mov
test
cli
sti
in
or
pop
add
add
xchg
sahf
jge
xor
lock
push
jae
add
imul
cld
cmpsb
push
sub
sub
lcall
dec
repnz
testl
and
in
adc
call
and
mov
insl
sbb
add
pop
or
cmp
xor
dec
xchg
cmp
mov
lock
mov
xor
int3
mov
outsl
std
cmp
adc
adc
repnz
fs
pop
stc
xor
xchg
repnz
mov
sbb
icebp
or
push
xor
add
pusha
repz
jecxz
xchg
lods
or
negb
xchg
cmp
cltd
sbb
fisubl
mov
hlt
arpl
push
shlb
mov
adc
xor
jno
cmpsb
das
shll
mov
adc
xchg
fsubs
jbe
into
insb
gs
daa
sti
fs
jge
pop
lds
mov
xchg
sub
sbb
dec
xor
xchg
and
loope
mov
scas
repnz
sub
sub
and
out
jo
arpl
inc
push
lret
leave
inc
mov
aas
xor
pop
and
push
lcall
or
xor
je
enter
mov
dec
lods
filds
stos
hlt
mov
inc
add
xchg
in
insl
aam
ficoms
adc
je
fildl
push
ss
loop
movsb
xchg
sub
mov
mov
sub
pop
and
inc
and
sub
idivl
dec
les
xor
push
test
mov
sbb
lea
pusha
std
pop
inc
les
cmp
arpl
repz
shrl
outsl
cmp
pop
push
aad
pop
stc
movq
push
test
out
and
xlat
sub
movsl
mov
mov
adc
popa
icebp
push
mov
mov
mov
cmp
iret
or
adc
adc
clc
test
in
or
push
das
insb
and
dec
sbb
sbb
clc
xor
push
sub
xor
out
stos
aaa
add
imulb
ljmp
inc
icebp
addb
add
lods
rcrl
push
cmc
sbb
jno
adc
xchg
push
pushf
push
call
push
mov
xor
add
mov
jg
sahf
iret
repnz
add
lret
add
shll
add
test
push
sbb
loope
xor
aaa
jmp
inc
xor
stc
pop
lea
mov
andl
dec
rol
movsl
cwtl
int3
push
stos
pop
sahf
adc
lret
push
cs
jae
cs
push
jmp
std
add
jne
or
mov
mov
jno
iret
push
ret
mov
push
sub
or
inc
pop
pushf
jecxz
pop
cmp
mov
test
xor
aaa
call
psubd
xor
jmp
mov
daa
jb
daa
lret
mov
add
ja
mov
push
pusha
add
push
arpl
push
and
or
dec
xchg
dec
ss
dec
adc
push
mov
pop
jae
sub
pop
outsl
out
fsubl
cmp
test
pop
sub
cli
mov
pop
shrl
jmp
jne
aaa
lds
sbb
int3
lahf
cli
inc
popa
adc
ja
ret
jnp
icebp
daa
cmpsb
xchg
rcll
dec
stos
test
lea
mov
scas
mov
in
or
and
lret
test
js
xor
dec
nop
je
adc
outsb
and
sbb
in
data16
jb
int3
xchg
ss
mov
jmp
lcall
mov
adc
outsb
xor
adc
add
sub
or
mov
jns
xchg
loope
or
mov
in
inc
stos
jo
push
popa
inc
dec
out
aaa
lret
pop
jg
cmc
inc
push
into
lcall
fsubrl
mov
hlt
nop
mov
or
jg
stos
jecxz
into
and
enter
cli
add
test
and
xor
stos
ret
in
outsb
shrb
xchg
inc
mov
fcompl
mov
sub
in
call
fwait
mov
sbb
out
stc
and
cmpsb
aam
cmpsb
cmp
add
ficoms
add
and
out
in
or
xchg
mov
stos
rorl
add
xchg
in
jae
mov
fidivrs
hlt
cs
outsl
lahf
lock
cvtps2pd
mov
sbb
push
and
loopne
push
inc
mov
es
xor
loop
inc
rcll
cs
fmull
add
loopne
aam
sub
cmp
aad
jae
jo
push
xchg
sbb
es
xor
or
out
sbb
cltd
leave
xorl
jnp
sarb
jae
mov
mov
mov
rcr
cmp
mov
xor
cmp
int
mov
adc
fs
outsb
mov
push
jmp
mov
into
fildll
gs
xor
daa
out
nop
jne
out
mov
rclb
fldenv
inc
cmp
sub
fstp
cmp
push
sub
push
mov
insb
sbb
mov
test
fwait
into
adc
scas
push
out
mov
adc
pop
cmp
mov
rclb
divb
cmp
adc
aam
ret
mov
mov
ljmp
and
mov
xchg
cmp
cmp
add
out
jns
xchg
lret
dec
cmp
xchg
and
sub
outsb
inc
sbb
pop
andb
scas
repz
sbb
cmpsb
sbb
into
inc
dec
in
inc
cmp
orl
stc
das
pop
dec
xchg
mov
push
loop
xor
xor
fwait
mov
sub
xchg
fdivs
jo
pop
ss
rcrb
mov
lock
lea
pop
push
aaa
sbb
sbbl
int3
fists
xor
xchg
adc
dec
aas
movsb
lret
out
das
cmpsl
test
fsts
push
in
loopne
mov
filds
stos
jo
icebp
ret
sbb
push
pop
dec
ljmp
cltd
lods
insb
idivl
icebp
or
insb
push
ds
xlat
add
adc
xchg
sbb
aad
js
sarl
ss
cmpsl
xchg
xor
cmpb
mov
xchg
dec
mov
dec
or
aaa
cmp
dec
loop
rol
out
add
xor
mov
mov
mov
leave
dec
mov
daa
cmp
hlt
inc
inc
mov
mov
movsb
jo
scas
add
xchg
fadds
test
cmpsb
das
push
lcall
adc
jo
pusha
xlat
inc
rorb
testl
xorl
bound
push
mov
test
ret
cld
imul
pop
sbb
sbb
pop
outsl
xor
loope
jnp
arpl
sbb
pop
lret
pop
les
pop
xchg
mov
mov
jb
adc
iret
outsl
jns
sbb
shrb
mov
jmp
add
ja
and
lret
inc
in
sbbb
bound
out
xchg
lret
xchg
mov
cmpsl
jo
bound
sub
add
iret
stos
test
push
and
xchg
xchg
pop
in
mov
cmpl
mov
sbb
fucomip
or
mov
nop
sbb
xchg
or
pusha
pushf
test
test
mov
imul
push
mov
inc
dec
out
inc
xor
pop
mov
test
xor
pop
ja
loop
cld
jne
test
cmp
aas
lret
jecxz
dec
int3
mov
push
leave
jae
sbb
cmpsl
orb
add
push
xchg
cmp
xor
inc
pop
arpl
cli
fnstenv
mov
mov
fists
xacquire
and
out
fstpt
xchg
sub
jmp
aad
pop
testl
movsl
in
icebp
icebp
nop
pop
pop
lcall
sbb
xchg
mov
fldl
and
dec
in
dec
loop
xchg
std
les
and
xor
cld
es
pop
jl
shll
sbb
or
sbb
dec
push
mov
les
into
push
addr16
xchg
jb
add
dec
iret
in
stc
jo
out
sub
aaa
or
pop
int
or
add
pop
iret
repnz
adc
push
ret
mov
loope
mov
adc
dec
cmpsb
pop
std
lds
jbe
je
and
fldcw
imul
pusha
mov
loope
fists
mov
cld
push
imul
jl
ds
icebp
mov
repz
inc
arpl
and
jmp
clc
sub
out
mov
icebp
push
xchg
dec
dec
mov
in
sti
sbb
pop
cld
nop
enter
inc
testl
std
in
out
and
mov
dec
sub
outsl
js
add
sbb
testb
pop
andl
das
jge
pop
cmpsl
pop
dec
repnz
and
sbb
xchg
inc
imul
fs
sbb
or
xchg
movsb
push
repz
cmp
iret
pop
shl
pushf
pushf
mov
std
imul
fwait
jle
insl
cmp
jb
mov
cmp
fs
jno
in
cmp
das
popf
lds
lea
ss
mov
push
jnp
in
mov
lret
dec
push
add
rolb
pop
aam
mov
or
aaa
and
pop
push
mov
dec
pop
test
mov
addr16
loop
xchg
pop
sbb
xor
aas
and
addr16
rcrl
into
pop
adc
int
adc
jge
out
cmc
ds
mov
in
out
orl
popf
out
mov
or
adc
jnp
jmp
mov
cmp
out
leave
jge
or
add
and
add
and
sti
or
out
leave
das
mov
loope
imulb
pushl
xlat
lock
mov
cmp
xor
imul
cwtl
test
push
inc
mov
gs
xchg
shrd
mov
sub
ja
fwait
pop
fldcw
in
adc
lcall
jg
push
imul
sti
aad
adc
test
rolb
fs
daa
mov
jb
fs
xchg
test
daa
mov
add
cmp
lods
lea
pop
fstp
jge
jns
dec
xchg
nop
sti
cld
lods
and
aas
ljmp
push
push
lock
push
mov
mov
xchg
xchg
sub
insb
aaa
fnstenv
or
out
into
or
mov
or
jle
dec
jecxz
loope
sbb
ja
scas
cwtl
inc
pop
cmpsb
imul
sbbl
xchg
sbb
push
jo
inc
push
adc
mov
dec
rorl
scas
and
jg
mov
fistl
out
in
mov
sub
push
dec
flds
int3
jns
jecxz
cmp
pop
xor
add
xchg
push
addl
inc
insl
sub
adc
test
fistpll
lods
lock
stos
add
jo
pop
xchg
lds
push
lahf
and
dec
gs
pop
sbb
mov
insl
mov
xor
cmp
imul
int3
cmpsb
xor
into
push
add
lcall
fdiv
mov
loopne
push
dec
add
jg
sub
out
and
mov
push
jne
add
mov
stos
je
jnp
mov
inc
cltd
lret
lahf
and
sbb
cmp
cld
fnstcw
cmp
mov
inc
fsubrp
add
js
loopne
test
push
pop
xlat
lods
test
mov
xchg
and
jo
inc
jae
mov
cmp
add
push
pop
subl
and
lret
jmp
fisubl
push
addr16
mov
jecxz
cmp
pop
sub
lds
xor
mov
mov
addr16
xchg
fmulp
andl
mov
orb
lock
cs
cmc
scas
clc
sub
rcrl
jp
cmp
dec
add
or
push
mov
nop
sub
xor
mov
sub
push
mov
sahf
clc
xchg
imul
faddl
repnz
add
and
pop
scas
adc
jecxz
icebp
mov
mov
sub
sub
outsb
mov
and
push
lods
jbe
mov
adc
into
or
mov
icebp
fistpl
dec
sahf
lea
test
add
ss
dec
push
mov
sub
push
and
cmp
sub
or
ja
js
out
push
cmp
js
pusha
rcr
dec
pushf
cli
mov
pop
loop
mov
std
loop
movsb
inc
adc
ljmp
add
xor
fsubrl
and
inc
mov
mov
int3
xor
imul
jl
test
cmp
pop
bound
mov
xchg
arpl
jp
xor
add
nop
mull
pop
in
sub
jnp
call
or
stos
aaa
dec
xchg
mov
add
mov
enter
cli
sub
or
into
cli
xor
movsb
dec
mov
aaa
xchg
test
mov
ljmp
mov
sub
inc
sti
dec
or
lock
adc
sub
mov
inc
cmpsb
dec
mov
and
rorl
cmp
leave
aaa
test
insb
pop
enter
fidivrs
test
fdivs
adc
ret
push
add
clc
jmp
imul
mov
mov
dec
fdivr
and
call
out
lret
mov
clc
movsl
xchg
imul
ret
mov
out
test
or
nop
arpl
addl
cltd
bound
sub
bound
push
sub
leave
cwtl
stos
xor
sbb
push
cltd
mov
push
xchg
test
das
push
imul
dec
movsl
lcall
outsl
mov
ss
jbe
in
mov
lret
adc
addr16
and
inc
repnz
push
adc
insb
inc
xor
ja
xor
iret
cmp
pushf
cli
mov
ss
and
jno
lds
lods
cmp
imul
mov
cmp
ljmp
fcmove
loopne
push
cmpsl
jns
xor
arpl
mov
xchg
or
xorb
pop
mov
sub
addl
inc
mov
cltd
repz
pusha
dec
push
ja
in
push
inc
cwtl
cmp
mov
cltd
popf
fcomip
lcall
mov
addb
cmp
fldl
mov
fwait
dec
pop
pop
lods
and
mov
lock
fsubs
ljmp
push
add
mov
test
lcall
lahf
add
add
push
cmp
aam
fdivrl
pop
aas
xor
adc
call
loope
mov
gs
stos
dec
pop
pop
sti
icebp
xchg
mov
scas
inc
scas
adc
and
pop
jo
rol
iret
lds
call
cmp
pop
ja
jbe
rorl
ljmp
rolb
or
mov
bound
cmp
xchg
or
cltd
add
out
jae
scas
push
ret
push
and
lret
inc
adc
sbb
pusha
cmp
jl
push
ja
jo
cmp
mulb
adc
xchg
push
out
orb
ds
sub
scas
push
enter
mov
icebp
inc
js
cmc
mov
or
cmp
adc
nop
js
imul
mov
and
popa
mov
ret
xchg
data16
enter
call
xchg
pop
cwtl
sub
stos
pop
adc
scas
pop
mov
loopne
in
psubusw
sarl
xor
push
outsl
xor
dec
push
cmp
xchg
pusha
pop
push
je
xchg
pushf
mov
enter
push
xor
test
sub
inc
push
cmc
cmp
cmp
shrb
lcall
rcll
cmpsl
imul
inc
das
daa
mov
mov
orl
sbbl
mov
sarl
inc
mov
mov
pop
mov
mov
ljmp
scas
pop
stos
fisttps
push
push
das
mov
or
dec
or
nop
lock
les
addr16
dec
nop
gs
ret
js
data16
jno
pusha
xchg
enter
test
mov
mov
dec
movsl
sub
push
rorb
pop
xor
cmpsb
shrb
pop
and
sbb
xchg
ret
loop
insb
lock
mov
enter
loope
jmp
outsl
pop
clc
xor
cwtl
cmpsl
and
xchg
mov
pop
lods
or
or
inc
cmp
movsl
add
xor
cld
out
jbe
push
and
push
jmp
sub
dec
aad
jp
inc
in
int3
sub
xor
lds
sub
iret
je
and
and
adc
jecxz
mov
mov
out
sub
push
sar
in
sub
xchg
add
rcl
add
in
daa
mov
fadd
fmul
lcall
lds
faddl
out
cli
add
xchg
or
mov
or
jo
stc
test
rep
ret
pop
stos
lods
sbb
cmp
daa
mov
add
sbb
xchg
dec
outsl
push
mov
add
mov
or
js
adc
or
xor
addl
inc
jae
in
add
dec
shr
dec
xchg
leave
test
cmp
jb
sbb
js
jo
xchg
insl
rcll
mov
mov
pop
fidivrs
mov
cld
jo
arpl
fsubs
lods
xchg
sbb
inc
ss
xchg
loop
push
std
cli
xor
sarl
daa
loop
sbb
or
sbb
shlb
flds
cltd
clc
cltd
std
aaa
dec
or
mov
ljmp
lret
scas
sbb
push
sahf
dec
fldt
insb
or
nop
mov
or
pop
and
add
and
in
outsb
shlb
ljmp
imul
inc
adc
push
or
ucomiss
mov
dec
push
ljmp
push
jbe
testl
add
pop
or
or
lahf
bound
dec
icebp
fnstsw
aad
nop
or
into
and
int
push
adc
inc
lock
ficoml
into
shlb
lret
insb
sbb
jg
xchg
mov
sub
in
or
add
mov
popf
pop
jle
xor
mov
fsubs
inc
and
inc
mov
mov
pusha
cli
lea
sbb
cli
cltd
sub
je
adc
sbb
add
pusha
xchg
cltd
jb
push
push
xor
inc
xchg
mov
dec
cwtl
nop
pop
mov
push
add
mov
loop
sbb
jo
adc
lret
lds
push
cmpsl
xchg
inc
lcall
cmc
sahf
test
in
sub
loopne
or
inc
scas
movsb
dec
dec
fwait
mov
pop
cltd
mov
pusha
int
cmpsl
fmuls
fadd
jae
aas
faddl
popf
testl
add
jbe
sbb
mov
pop
adc
fstpt
imul
rcr
incl
loopne
dec
mov
push
scas
and
nop
fisubrl
es
jae
shl
sub
mov
xchg
pop
pop
or
stos
lods
dec
nop
push
push
lock
and
mov
fistps
mov
mov
push
int
inc
lcall
mov
push
sub
lcall
test
and
push
sbb
sbb
pop
je
lcall
xchg
add
cmp
sbb
imul
or
jbe
cwtl
lret
hlt
and
push
pop
gs
in
cmp
dec
pop
xchg
mov
pop
sub
pop
into
and
loope
sahf
daa
call
adc
pop
adc
mov
daa
jae
pop
rcl
or
lds
jmp
push
sbb
xlat
add
mov
mov
test
cs
aam
ja
int
cmpsl
jle
sbb
in
ja
sbb
xor
inc
cwtl
inc
mov
mov
and
xchg
xchg
xchg
xchg
sub
inc
and
xchg
jns
lahf
sbb
or
dec
das
sti
loop
cmp
dec
or
inc
pop
out
out
dec
fists
aad
imul
inc
repnz
jl
jg
outsb
test
and
into
and
fucomi
ljmp
cmc
pop
orl
cmp
push
push
push
popf
les
xchg
das
sbb
aas
fisubs
or
jno
jle
scas
and
jl
mov
lds
push
mov
jmp
out
orb
aam
rcll
aad
movsl
xor
pop
or
divb
mov
test
insl
mov
adc
sub
addr16
inc
aad
mov
repz
xor
fildll
aad
jge
pop
xchg
inc
and
inc
fmull
dec
cmp
cs
jbe
out
cmpsl
dec
mov
mov
cmp
mov
push
pop
cwtl
cs
fidivl
aad
dec
scas
jne
lea
icebp
inc
xchg
rol
mov
pop
fwait
imul
mov
fdiv
and
xchg
sub
arpl
pop
cmp
push
lret
cmp
popa
pop
lods
cmp
std
lret
clc
insl
pop
or
mov
xchg
add
jae
cltd
jmp
or
mov
out
push
jae
sti
push
jb
lcall
cmp
nop
mov
mov
sub
push
sbb
and
cmp
dec
jecxz
xchg
jecxz
int
stos
cli
sti
syscall
call
out
pop
dec
jns
lods
cmp
outsl
add
pop
std
xchg
rclb
and
push
pop
mov
mov
aad
aaa
xorl
and
popf
les
push
sub
mov
add
and
mov
daa
rorb
mov
push
pop
daa
lret
sub
or
cmpb
xchg
shrl
cwtl
sbb
ss
mov
bound
dec
inc
jne
jmp
loope
imul
pop
mov
aad
xchg
test
xchg
loope
pop
repnz
inc
aam
inc
mov
sti
inc
in
imul
inc
pop
decl
test
popf
cmc
or
mov
jno
mov
xchg
stos
or
inc
xchg
test
fistpl
in
dec
scas
mov
clc
and
pop
out
add
cwtl
pop
push
imul
outsl
lahf
orb
js
sub
jno
sub
mov
cmpxchg
sub
mov
ja
cmpsl
pop
xchg
scas
lahf
ljmp
xchg
jo
cs
dec
cmp
or
or
inc
mov
popf
in
imul
lods
es
xor
xlat
push
xor
sbb
push
out
scas
xchg
xchg
scas
add
idivb
ror
xchg
rcll
lcall
mov
loope
data16
adcl
push
cmp
mov
inc
add
sbb
or
push
push
insb
test
jnp
outsl
stos
arpl
xchg
xchg
xchg
outsb
dec
stos
cmp
inc
out
add
ret
gs
in
lods
pop
imul
mov
mov
leave
mov
add
mov
xor
mov
loopne
ficomps
pop
lods
ds
cmp
mov
push
pop
mov
mov
lahf
mov
mov
dec
jmp
cmp
test
sbb
in
mov
int
pop
xor
mov
insb
pop
pop
sub
jl
stos
jg
jmp
out
dec
mov
sbb
scas
push
popf
fwait
cmp
mov
hlt
pop
dec
push
shlb
jecxz
lcall
negl
popf
or
mov
in
aas
popf
pop
cmp
sub
xlat
push
aaa
mov
ja
add
and
jl
cwtl
pushf
je
and
sbb
push
sub
sub
ret
jle
mov
mov
and
fistpl
divb
mov
mov
and
lret
sbb
int3
rcl
dec
lahf
outsb
sbbl
into
adc
nop
inc
psllq
jmp
or
add
pop
cltd
roll
clc
je
jg
adc
adc
mov
pop
or
std
mov
xlat
mov
jg
sahf
fisubrl
aas
lods
add
subb
mov
fcoms
push
cmp
adc
scas
pusha
out
movsb
je
sbb
push
test
les
sub
xorb
mov
arpl
loop
popf
sbb
in
ret
jle
mov
add
lea
add
out
and
pusha
sub
mov
ja
jae
cmp
fldt
push
jnp
hlt
lret
adc
icebp
pushf
fmuls
xchg
jnp
xor
daa
mov
jne
inc
and
enter
inc
xchg
mov
divl
rorl
sbb
out
and
fcmovne
aas
add
loopne
fwait
pop
push
push
stos
xor
and
mov
vpminub
pop
inc
mov
test
into
lret
inc
mov
mov
push
mov
int
pop
pop
fimull
push
lret
jno
push
push
outsl
mov
add
neg
push
ss
outsb
and
popa
xchg
cmp
inc
mov
aaa
out
jg
mov
mov
stos
movsb
cltd
subb
mov
add
adc
aad
rclb
subb
test
mov
push
sub
pop
movsb
cmp
or
sbb
xchg
push
jno
jns
ja
adc
ret
mov
adc
andl
mov
sub
outsl
or
xor
daa
xor
mov
jl
inc
sbb
xchg
sbb
test
xchg
decl
cltd
sbb
add
sbb
js
pop
in
out
mov
add
insb
roll
jg
arpl
xchg
negl
movsb
lret
into
jl
cltd
outsb
cltd
in
mov
xor
push
aad
lods
xor
not
test
leave
imul
es
xchg
pop
xor
sub
xor
inc
mov
ret
sbb
test
inc
lock
cmp
inc
dec
mov
xchg
mov
rorb
mov
mov
out
sarl
dec
fucomp
pop
jns
adc
inc
inc
add
jmp
xchg
dec
into
ss
fs
fadds
sbb
sub
push
xorb
xchg
imul
sbb
xor
rorb
or
and
cwtl
mov
add
sbb
push
dec
ret
add
xchg
and
jo
in
f2xm1
aad
dec
aad
lock
mov
dec
imul
sub
fsubl
xchg
jne
lock
rorl
and
les
test
addl
jge
in
xchg
xor
xlat
in
sbb
and
fsts
jmp
jmp
test
mov
in
jno
aam
and
out
pop
inc
jns
and
loope
mov
add
adc
jg
xor
cld
aam
jns,pn
aas
in
add
iret
jmp
pop
sbb
jne
push
psllq
mul
sbb
xchg
cmpsl
cmp
ret
out
jno
mov
jg
jge
pop
iret
xchg
dec
leave
push
mov
cmp
dec
inc
xor
pushf
add
cs
jl
cld
aas
repnz
jge
mov
repz
mov
cmpsl
in
add
pop
loopne
aaa
jb
mov
add
bound
add
pop
sub
sbb
push
repnz
xor
inc
pop
xchg
mov
fadds
int
and
repnz
xor
shll
lcall
xchg
xchg
pop
test
mov
mov
aaa
divb
js
xor
into
xchg
add
testb
xchg
sub
mov
pop
nop
insb
xchg
push
incl
or
out
repnz
push
and
mov
ficomps
das
sub
jno
pop
mov
or
in
mov
hlt
cs
aas
sbb
xor
xor
pcmpgtw
insl
mov
popa
push
and
jmp
in
push
sti
xchg
clc
sub
mov
xchg
mov
addr16
add
sub
sbb
popl
adc
scas
pop
xor
dec
sub
stos
add
add
pop
repz
inc
aaa
dec
je
and
rorl
arpl
enter
dec
or
cmp
pop
test
mov
mov
call
ret
dec
dec
pop
pop
jne
push
mov
xor
add
adc
xlat
sub
pop
mov
sahf
aad
stos
les
and
out
jmp
dec
add
adc
mov
dec
sbb
cltd
xchg
fdivrs
lods
popf
jae
nop
adc
adc
push
iret
aaa
xlat
xchg
out
ljmp
or
adc
adc
mov
jmp
xchg
gs
xchg
repz
jo
js
xor
or
sub
add
jnp
adc
pop
sub
gs
or
popl
cltd
in
jmp
les
loop
mov
out
push
fists
mov
lret
xchg
into
cmpsb
test
bound
mull
in
adc
sbb
and
les
dec
mov
xor
or
test
insl
and
or
out
arpl
cmp
je
fmul
gs
test
inc
out
adc
mov
push
mov
inc
negl
ss
pop
cld
and
sub
inc
data16
jne
jbe
add
inc
imulb
inc
mov
jp
pop
jbe
adc
mov
cmpb
add
mov
ja
push
push
xor
xor
inc
es
outsb
xor
or
iret
push
mov
xor
js
insb
nop
lea
ret
out
mov
dec
add
sub
mov
mov
sbb
push
jno
jnp,pt
jge
ret
call
ljmp
adc
in
xchg
scas
outsb
js
mov
cld
mov
movsb
int
jmp
jo
out
in
mov
mov
jmp
cwtl
mov
and
ret
lret
enter
mov
call
lret
mov
in
mov
fwait
aam
out
ja
loop
mov
pushf
loopne
fstpl
ret
and
aas
je
daa
fs
sbbb
inc
and
outsb
jae
jl
jp
pop
rorl
push
pop
pop
ret
notb
dec
dec
in
jle
jns
jae
addl
jp
add
stc
cmp
adc
iret
sub
xor
ja
pop
lds
push
xor
jo
mov
add
imul
push
sbb
test
dec
int3
and
ret
push
sbb
dec
leave
sbbb
std
pop
push
in
mov
loopne
cltd
cmp
mov
fs
rcrb
inc
sti
and
add
aas
or
sub
mov
cmp
add
jb
and
mov
fidivl
push
aad
fcomip
ljmp
mov
inc
xchg
xchg
jae
push
xchg
xlat
rol
mov
cmp
cmp
adc
sbb
std
loop
popa
push
rorb
jne
pop
in
add
mov
cmp
mov
xchg
jg
in
out
sub
jmp
call
mov
in
insb
xchg
mov
xor
sub
or
mov
mov
popf
sub
loope
mov
and
arpl
jo
pushf
insl
fisttpll
mov
cmc
push
cmpsb
andl
sub
call
jne
fisubrl
mov
lock
shll
lahf
cmp
aad
push
sub
bnd
lock
shlb
scas
mov
pop
add
and
xchg
mov
fidivl
xchg
in
and
xor
aad
jae
cmp
test
test
pop
outsl
iret
mov
mov
in
dec
jno
js
bound
jae
inc
mov
out
adc
icebp
or
test
sbb
stc
stos
int3
das
pop
xchg
mov
roll
jmp
sti
xchg
cmp
lcall
gs
mov
ret
std
clc
jg
pop
ja
push
gs
mov
or
add
adc
or
cmpl
xchg
mov
mov
xchg
inc
xchg
mov
and
cs
pop
out
idivl
clc
lods
addr16
cmp
xchg
cld
outsb
jecxz
gs
adc
dec
loop
push
bound
scas
aaa
popf
mov
pop
mov
imul
mov
les
mov
adc
lcall
sahf
and
ret
cld
in
popf
sub
adc
cmp
mov
sub
xchg
movsb
in
rorl
push
imul
xlat
xchg
mov
daa
lahf
jae
fisubrs
sbb
inc
popf
inc
jae
fisttpl
out
out
inc
cs
mov
cmp
xor
stos
pop
and
cmpsl
jmp
jge
inc
push
divb
movsl
call
clc
cmp
in
xor
out
popa
lods
lret
pop
nop
stos
cli
xor
popf
test
in
adc
sub
call
sub
aaa
jmp
iret
inc
nop
add
jecxz
test
dec
mov
ja
inc
test
jmp
test
push
mov
dec
xor
sti
test
dec
cmp
xor
into
sbb
mov
leave
int3
cmpsl
sub
mov
xlat
and
data16
rcl
jnp
mov
jno
std
jg
xchg
sarl
jmp
push
pop
movsl
sub
jno
repz
sbb
repz
or
les
sbb
test
pop
ss
fistpll
cli
adc
xchg
popa
xchg
lods
lret
repnz
stos
xchg
ljmp
jb
mov
outsl
ret
xchg
adc
xor
jb
sbb
push
fbstp
add
call
pop
pop
cmp
enter
popf
pop
push
adc
add
test
les
cmp
cltd
push
jle
and
pop
sub
stos
pop
push
sbb
push
movsb
iret
shlb
fistps
outsb
pop
mov
jno
xor
add
and
ss
lds
cmpsl
out
xor
sub
outsb
out
ret
cli
pop
aas
inc
fidivs
shll
cltd
mov
cmp
addb
jns
lock
lret
vphaddubw
ljmp
cs
cmp
sbb
mov
rcll
jo
push
call
sbb
lahf
fadds
add
push
loopne
movsb
jmp
pop
insl
inc
shlb
gs
mov
icebp
cltd
rcrb
mov
lcall
xor
scas
fs
incb
dec
mov
dec
push
cmp
stos
sbbb
ret
cmp
fbld
mov
jns
cmp
dec
push
and
pop
mov
jecxz
aas
inc
out
sub
sti
enter
dec
test
arpl
mov
cli
leave
imul
nop
pop
adc
arpl
mov
aas
adc
xor
dec
aad
imull
adc
mov
mov
jbe
cmp
mov
cmp
in
test
std
fs
xchg
scas
xor
sbb
push
cmpsb
jno
jne
rorl
fnsave
sub
mov
mov
cmpsb
fmuls
push
scas
pop
das
daa
or
pop
push
inc
mov
popf
xor
ja
cltd
rcrl
and
stos
in
fisttps
sbb
stos
fwait
rcl
and
jp
xchg
add
lea
call
xchg
fsubrl
xor
aaa
out
sar
pusha
pop
fdivl
or
lcall
mov
mov
xchg
xor
fnstenv
dec
scas
sti
cwtl
sbb
mov
jl
or
xchg
subb
in
rcrb
popf
call
pushf
out
imul
cld
fimuls
test
xchg
inc
fbld
and
imul
jg,pn
mov
mov
insl
mov
iret
cmp
jg
dec
mov
pop
sub
hlt
pop
sub
cmpsl
jo
pop
cmc
mov
and
jl
out
out
nop
fstpl
jb
mov
mov
movsb
lods
dec
push
adc
jbe
dec
in
popf
mov
mov
pop
repz
or
sbb
aas
mov
dec
jp
cmpsb
ss
mov
adc
fwait
xchg
xor
mov
das
cmc
sahf
xchg
outsb
leave
aas
out
sahf
and
cmp
ret
bound
xor
iret
pop
arpl
mov
sub
outsl
and
sbb
test
dec
subb
cmp
add
loopne
fisubrl
pop
jle
sbb
sub
adc
push
ljmp
std
and
loopne
fists
jmp
insb
inc
scas
dec
adc
add
pop
and
movsl
push
push
pop
cmp
push
mov
and
test
loope
and
jae
sbbb
stc
sbb
sahf
xchg
sub
xchg
mov
test
mov
aad
lret
add
into
es
jns
test
and
mov
jns
test
sbb
stos
loope
xor
jge
std
psrlw
pop
scas
dec
push
mov
xorb
test
sbb
inc
test
pop
stos
cwtl
pop
jae
or
imul
hlt
sbb
not
notl
inc
lea
push
push
sub
pop
js
mov
orl
ret
dec
in
pop
inc
cmp
aad
mov
push
sub
cmp
fidivrs
lds
popa
dec
test
leave
mov
data16
lcall
in
add
push
cmp
jmp
mov
sbb
inc
dec
mov
xlat
lret
pop
mov
sbbl
int3
ret
xor
adc
mov
cmp
mov
pop
aam
cmpsb
test
cli
push
test
pop
das
jbe
ret
mov
cli
sbb
jge
aas
in
idivl
or
push
inc
jnp
lock
lahf
sbb
data16
push
lock
cmpsl
pop
lock
imul
sbbb
push
xlat
and
push
xchg
int3
leave
lcall
sbb
data16
add
xchg
cmp
inc
mov
bound
cli
test
xorb
and
sbb
mov
adc
mov
fsubrs
push
or
push
test
icebp
push
add
inc
inc
flds
dec
jns
xchg
adc
rolb
xchg
pushf
mov
pop
cltd
pop
push
leave
push
std
cmpsl
xlat
in
and
cmc
test
sbb
bound
outsb
movsl
jnp
sti
repnz
pop
fldt
mov
andb
movb
xchg
sbb
ljmp
adc
cmp
lret
add
out
sti
int3
mov
stc
jae
or
inc
mov
jo
je
xchg
jp
cmp
sarb
jg
and
sbb
ja
lock
enter
ljmp
jb
dec
js
or
repz
inc
clc
adc
xchg
pop
inc
dec
adc
pusha
dec
aad
fldcw
pop
scas
bound
loope
push
out
push
push
cmp
shll
pop
mov
cmc
xchg
fnstenv
pusha
lahf
enter
inc
or
rclb
xchg
popf
jns
outsb
stos
in
jne
call
stos
or
inc
lds
fidivs
movhlps
test
dec
jbe
hlt
mov
arpl
lcall
fidivl
inc
mov
xlat
xor
pop
pop
xchg
and
aaa
ret
cli
orl
add
jo
lds
and
jb
daa
aas
adcl
inc
sbb
dec
ficompl
out
mov
dec
or
stos
jle
pop
lret
cmp
lret
and
fstpl
movsl
imul
nop
in
gs
lret
test
jmp
in
and
fisubrl
pop
xchg
sub
mov
leave
icebp
xchg
push
int3
mov
jp
mov
sub
fwait
adc
xor
jno
das
rcrb
and
shrl
cmp
movsb
fsubs
repnz
mov
outsl
jnp
jns
sbb
popa
out
xchg
jmp
cmp
jecxz
mov
xchg
add
std
nop
jmp
inc
cmpl
xor
mov
sub
fxch
neg
sbbl
xchg
sti
dec
add
cltd
push
aam
sub
movsb
mov
fs
and
push
mov
shll
out
xor
sahf
stos
jbe
and
jno
arpl
sbb
popf
mov
adcb
test
ror
xchg
ss
mov
push
ja
inc
cltd
gs
aad
inc
jmp
adc
xchg
inc
and
add
xor
mov
aad
repnz
xchg
dec
incl
loope
inc
ljmp
sbb
loope
in
adc
mov
mov
mov
pop
xchg
cmp
ds
mov
jge
mov
cwtl
fstp
mov
or
cltd
std
jecxz
add
fidivs
push
xchg
push
shll
out
shlb
out
pop
mov
in
lret
dec
imul
xor
dec
xlat
dec
mov
sub
push
insl
xchg
sub
je
dec
cmc
ja,pn
cmpsb
dec
mov
jae
add
jmp
pop
scas
enter
out
in
ret
jae
popa
jbe
or
aam
add
rol
inc
out
ror
mov
addr16
mov
enter
loopne
inc
jecxz
test
and
out
inc
aam
xchg
sub
jecxz
addr16
mov
fwait
fs
cmp
roll
daa
jle
enter
or
sub
push
insl
add
add
test
sub
adc
pop
or
repnz
ret
aaa
xchg
dec
repz
jne
sbb
in
mov
sahf
inc
leave
gs
sub
xlat
pop
lret
inc
ret
mov
xor
enter
in
xchg
dec
repz
dec
mov
shl
sbb
or
fists
ret
mov
not
and
cmc
push
pop
loope
out
and
pop
test
jp
add
in
aas
in
fs
inc
cs
into
inc
push
or
testl
movsb
or
push
stos
inc
inc
adc
mov
loopne
adc
lcall
pop
rcrb
loop
aad
ja
js
jnp
push
jo
popa
dec
mov
subb
enter
pushf
in
movsl
xchg
fisttpll
mov
sbbb
stc
push
sbb
orl
popw
sub
out
mov
jbe
cmp
push
dec
sub
shl
test
or
add
mov
lcall
sbb
test
push
xor
mov
cmpsl
testb
rcrl
ja
stos
jns
mov
cmp
fnsave
xlat
mov
sti
daa
arpl
dec
ret
fnstsw
lret
adc
sub
mov
pushf
pop
sbb
call
add
adc
lds
aad
dec
ret
lcall
fstpt
jae
icebp
mov
ljmp
movsl
push
enter
xor
mov
mov
ret
je
and
mov
inc
push
insb
pop
cmc
shl
stos
imul
cmp
or
dec
adc
mov
fucomi
int
mov
fs
subl
and
cld
push
loope
sub
aam
jecxz
test
test
xchg
arpl
mov
add
jbe
adc
dec
and
dec
incl
out
int3
or
cmpsb
xchg
lods
dec
push
scas
xchg
dec
mov
pushf
adc
insl
mov
xchg
pop
in
adc
aas
push
out
and
dec
mull
ret
out
add
out
or
push
je,pt
adc
pop
clc
ljmp
xor
mov
lret
and
push
imul
jle
lea
sub
xchg
scas
pop
push
dec
adc
imul
stos
es
aas
in
out
xchg
xor
dec
add
sub
mov
mov
dec
dec
jg
inc
dec
mov
lods
or
xchg
mov
enter
fcoms
andl
sub
insb
sbb
lahf
push
outsl
pop
cmp
shll
ror
mov
xchg
ret
push
pusha
mov
std
iret
xorb
cmpsl
ja
sbb
mov
lahf
lods
lahf
or
xlat
sbb
pop
into
xor
imul
jmp
inc
push
push
je
cmp
mov
ljmp
pop
mov
rolb
pop
lret
pop
nop
inc
repnz
test
or
repnz
mov
adc
fs
dec
stos
jnp
jmp
js
and
xchg
dec
shld
fs
aaa
sahf
xchg
adc
mov
shl
les
mov
and
pushf
jmp
mov
push
stc
sbb
sub
pop
adc
fs
js
and
dec
mov
push
lcall
dec
mov
mulb
pop
popf
sbb
insb
mul
xor
pusha
jmp
les
xchg
daa
dec
adc
push
outsb
push
jbe
sbb
push
adc
fwait
cmp
sahf
movsl
jmp
dec
int3
jg
das
lret
pop
icebp
add
mov
pop
leave
xchg
pop
adc
and
inc
jo
dec
pop
std
addr16
repz
nop
scas
movsb
push
in
loop
in
mov
add
dec
mov
jecxz
cs
fiadds
jae,pn
pop
and
push
dec
jle
ds
xchg
adc
in
repz
jmp
and
mov
loope
cmpsb
fisttpll
sahf
inc
pushf
jbe
add
push
std
cmovge
and
rorl
lock
jb
mov
cli
add
test
aad
pop
xchg
lret
aam
testl
or
mov
mov
test
pop
lods
cld
mov
cmp
cwtl
pop
mov
mov
cmpsb
mov
test
inc
dec
stos
mov
movsb
pop
lods
sahf
jbe
xchg
push
inc
mov
jmp
repz
das
in
in
xchg
scas
call
pop
pop
pusha
pop
jno
fnstsw
lcall
or
cmp
jbe
pushf
pusha
fsub
jo
fcoms
xor
xchg
js
out
sbb
filds
ds
push
in
test
adc
jmp
clc
clc
sbb
xchg
ffreep
mov
and
and
stos
out
fidivs
fmull
clc
lods
in
xchg
data16
xlat
test
dec
xchg
sbb
xchg
push
push
rcll
xchg
jp
jmp
test
scas
push
flds
ljmp
popf
loop
addb
cmp
cwtl
jne
out
lcall
jle
xchg
push
cmp
mov
scas
xchg
sbb
xor
cmp
or
leave
push
arpl
jns
or
scas
jmp
cltd
lods
pop
imul
push
adc
add
mov
fiaddl
js
mov
pop
mov
push
and
push
mov
and
gs
popa
je
sub
rorl
mov
mov
sub
push
fidivl
popf
push
negb
pop
fsubp
dec
sbb
and
push
inc
pop
jnp
sarl
fstpl
xchg
jne
mov
xor
sbbb
daa
add
daa
imul
sub
pop
sbb
pop
ror
jnp
fadds
popf
jno
adc
repz
mov
jae
or
nop
lea
dec
mov
imul
addr16
ret
stos
pop
sbb
mov
xor
push
jno
aas
stc
mov
scas
pop
das
jle
pop
sbb
xor
sub
sbb
xor
xor
push
popf
dec
xchg
push
inc
pop
into
dec
push
loope
push
notb
pop
rol
enter
mov
jge
sub
insl
cld
subl
dec
mov
sub
repz
mov
jmp
cmp
pusha
inc
int
dec
push
sbb
lea
in
dec
mov
pop
or
push
std
cs
cmc
rolb
das
mov
mov
jecxz
jp
mov
inc
int
or
ljmp
sbb
lods
push
inc
cmp
les
add
pushl
inc
adc
or
pop
cmpb
jno
lods
add
cmpl
test
push
inc
test
repz
outsl
fwait
lret
loop
out
mull
in
sbb
xor
pop
cmpsb
mov
or
pop
xchg
test
sbb
or
xchg
into
int3
test
jae
repz
push
dec
jp
ljmp
bound
and
fstl
jbe
testb
test
add
iret
mov
das
adc
loopne
push
pop
inc
cmpsl
into
sub
icebp
sarb
stc
xchg
shrl
xor
fiaddl
pop
push
cltd
xchg
mov
lds
inc
stos
xor
or
jl
mov
int3
stos
jns
call
fimuls
xor
out
lods
xchg
std
lock
popf
jo
js
rolb
mov
fildll
push
mov
jl
lahf
mov
cli
jne
mov
cltd
pop
movsb
mov
out
std
or
into
fisttps
stc
pop
popf
daa
out
jp
or
xor
push
cmp
inc
mov
int3
out
cmc
cltd
add
mov
sbbl
iret
inc
adc
outsl
rcrl
dec
roll
push
je
dec
add
jne
mov
pop
sub
inc
stc
or
adc
push
adc
inc
div
or
mov
dec
imul
or
lds
dec
out
push
and
dec
pop
mov
pop
out
dec
nop
inc
inc
aaa
stos
sbb
pop
xor
xchg
add
mov
push
std
repz
rol
sub
pop
sarl
push
ret
jl
sub
xor
in
into
jg
ficoml
into
pop
adc
test
xchg
sub
dec
jns
mov
push
jmp
pop
rcrl
add
mov
mov
or
subb
xchg
out
pop
lahf
xchg
cmpsb
in
jno
xchg
fmul
mov
js
imul
imul
dec
sub
mov
out
aad
pop
inc
inc
mov
je
dec
jecxz
dec
aaa
cmp
leave
push
mov
cmp
dec
shlb
jno
xor
mov
data16
xchg
fiadds
rcl
pusha
xchg
std
ja
push
nop
jl
ret
clc
push
sbb
nop
mov
sbb
sbb
mov
add
mov
mov
sbb
xchg
movsb
out
bound
xor
out
es
imul
push
subb
ljmp
scas
lahf
mov
lcall
add
out
adc
mov
cmpsl
xchg
mov
xor
inc
dec
jmp
add
sub
inc
cltd
out
dec
cmp
jg
jp
add
icebp
ss
fdivs
push
cld
cwtl
xor
dec
cmpsl
lods
push
add
leave
shll
movsl
lock
lcall
paddq
js
cwtl
dec
nop
icebp
dec
jmp
mov
mov
hlt
mov
xchg
xor
mov
imul
int
mov
cmp
mov
cltd
sub
push
and
loope
or
outsb
in
test
and
out
and
rcr
pushf
fiadds
sti
stos
mov
inc
pop
mov
jle
loop
pop
movsb
faddl
mov
notl
fisubs
inc
add
inc
sbb
jno
push
pusha
loope
add
clc
iret
xor
push
out
cmp
sub
sbb
or
mov
mov
js
lcall
cmp
add
or
or
mov
clc
mov
sub
push
adc
mov
data16
sarl
cld
je
rcrb
fmuls
or
out
repz
enter
mov
fcoml
push
lea
push
push
sub
xor
insl
sbb
push
jbe
push
ret
cmpsl
mov
stc
mov
scas
repz
or
repz
test
add
mov
xor
ss
fcoms
inc
data16
lods
sub
xor
mov
insl
jne
push
gs
out
addb
mov
repnz
dec
frstor
imul
ret
sub
inc
mov
cmp
push
int
mov
and
sub
add
mov
mov
icebp
test
sub
xchg
xchg
pop
andl
mov
in
pop
push
bound
jp
test
push
pop
sbb
rep
mov
lret
das
dec
ret
jg
mov
adc
loop
fwait
sub
lds
test
sarb
aad
or
sub
pop
lods
shrb
addl
fildl
xchg
dec
loopne
and
out
xchg
mov
leave
loop
sub
test
xor
mov
dec
cwtl
jno
cmp
hlt
add
scas
sub
jge
mov
inc
ret
loopne
test
mov
and
fstps
int
dec
pop
out
sbb
xorl
xor
push
ss
mov
popf
mov
push
es
pop
xorl
jne
mov
and
add
dec
sarb
das
push
add
xlat
mov
jae
jno
addr16
sub
mov
nop
pushf
negl
inc
sarb
rcrb
es
mov
add
pop
negl
pop
shlb
test
out
movsb
add
pusha
push
dec
loopne
and
jge
xchg
mov
sti
hlt
std
mov
cmp
insb
popa
ret
dec
out
pop
or
jb
add
dec
loop
enter
inc
in
cmpsl
ss
push
mov
sahf
jge
ss
repz
stos
sub
jmp
pop
mov
xchg
int
push
push
mov
xor
js
arpl
mov
cmp
mov
cmp
pushf
or
jnp
mov
sub
hlt
hlt
mov
in
ficoml
jae
push
cmp
cmp
sbb
jmp
adc
inc
pusha
cltd
call
or
cmp
sub
sti
sahf
sub
loopne
or
fiaddl
fadds
stos
mov
lods
xorps
dec
cs
pop
fsubs
sub
outsl
fcmovnb
sub
inc
push
pop
bound
test
repnz
pop
sahf
stc
jmp
jmp
sub
dec
mov
fs
out
test
cmpsl
pop
push
out
shlb
out
lcall
iret
inc
sub
shll
js
cmp
inc
js
icebp
bound
cli
pop
int3
sub
xchg
and
std
push
push
aad
jae
ret
mov
insl
nop
and
push
in
mov
mov
les
mov
xchg
sbb
cmc
jle
scas
out
mov
mov
jmp
test
sbb
adc
xchg
out
or
mov
push
jne
push
shlb
or
xchg
pop
or
movsb
scas
cli
mov
jae
and
adc
bound
fs
mov
aam
pop
dec
sub
adc
fbld
add
mov
add
inc
sbbl
add
pop
lds
lea
mov
addb
or
out
sahf
out
mov
cmp
pop
xchg
fprem1
or
mov
orb
hlt
push
loopne
push
sahf
out
clc
stc
popa
ss
pop
xchg
bound
push
fsubrl
sbb
cmc
and
xor
stc
adc
addr16
inc
mov
stos
pop
fisttpll
adc
pop
add
jo
mov
pmaddwd
mov
xchg
adc
bnd
popa
add
loope
fnstenv
mov
sbb
negl
iret
and
jge
fldenv
adc
iret
imul
mov
fisubrs
test
sub
sbb
cmp
mov
jmp
fadds
adc
adc
mov
adc
cli
mov
popf
data16
inc
popw
pusha
mov
ret
inc
cmpsl
out
cmp
fs
adc
imul
mov
xor
jbe
push
pop
mov
js
out
out
or
inc
sarl
sbb
sbb
mov
mov
lea
mov
in
rorb
adc
add
jae
jle
dec
xchg
jle
mov
fwait
stos
ret
bound
cmpl
dec
inc
ds
and
mov
mov
into
fdivrs
cmpsl
adc
pop
stos
dec
js
pop
rcl
fwait
xchg
xchg
sti
sbb
addl
dec
addl
jae
inc
mov
in
cld
stos
ljmp
mov
xor
dec
and
mov
scas
xor
xlat
adc
push
pusha
jmp
fisttpl
js
outsl
pop
inc
shll
cltd
sbbl
mov
ja
out
jb
mov
lods
scas
sahf
inc
movsb
pop
dec
pop
inc
push
lret
int
rep
imul
xchg
popa
inc
xor
mov
aaa
dec
add
cmp
shl
pop
pop
fs
pusha
mov
and
dec
or
das
add
icebp
daa
xchg
call
faddl
mov
lahf
mov
test
adc
xchg
mov
dec
adc
les
imul
loope
inc
out
fwait
dec
mov
outsb
fcomip
mov
fsubl
pop
jns
mov
sub
sbb
std
filds
les
lahf
mov
jae
jnp
dec
setns
dec
stos
jae
lahf
sahf
aas
and
insl
andl
adc
adc
add
cmpsl
movsl
mov
ss
and
sub
int
jmp
in
int3
mov
test
mov
pop
jp
xchg
fnstenv
addr16
adc
jp
sub
movsl
test
cltd
xchg
xor
bound
pop
inc
push
sub
adc
xchg
lods
jg
cmc
xor
aad
pop
sbb
add
adc
das
int
ss
ljmp
hlt
fildl
mov
aas
adc
in
jae
mov
cli
mov
cmp
repz
lahf
bnd
out
and
push
ds
add
sub
or
nop
xlat
lret
int
mov
lock
loop
jae
add
fwait
and
lock
repnz
mov
sbb
pop
inc
popf
loopne
ret
les
and
xchg
bound
test
dec
adc
scas
ret
loop
insl
js
gs
push
push
and
sahf
add
add
out
push
inc
int
test
push
rcl
xor
mov
sbb
pop
mov
das
test
xchg
mov
lret
and
jns
fildll
or
aam
ret
mov
leave
fnstenv
lret
lods
repnz
loope
jnp
repz
jno
repz
mov
clc
cmp
and
leave
addl
insb
or
mov
xor
in
std
stos
sub
push
jns
mov
cmp
scas
xchg
iret
inc
and
push
and
orl
cmp
jp
cld
loopne
mov
outsl
into
xchg
sub
mov
sub
shll
jno
scas
push
enter
dec
add
pop
xchg
inc
jl
inc
lret
sub
push
divl
dec
out
enter
fiadds
insb
and
or
sete
jmp
inc
std
inc
repnz
push
pop
xchg
xlat
aaa
add
jns
and
pop
jns
mov
jb
pop
enter
fwait
ljmp
xchg
sbb
mov
iret
cltd
lock
rcll
jg
jl
cmp
jmp
inc
outsl
insl
hlt
add
mov
pop
mov
jg
jno
mov
test
int
pop
pop
jnp
mov
dec
push
out
arpl
movsl
xor
sbb
insb
test
popf
aas
inc
mov
mov
leave
mov
aaa
push
mov
hlt
pop
cli
and
mov
roll
and
pushf
jb
pop
pop
pushf
pop
or
lods
cmc
dec
mov
out
jne
into
xor
mov
es
lods
pop
push
push
mov
imul
ret
mov
mov
push
test
xchg
mov
divb
pop
fistpll
mov
add
in
jl
out
push
cwtl
aam
popf
sbb
jb
add
sub
inc
lret
in
sbb
movsl
repnz
stos
push
lods
les
icebp
stos
push
aad
xor
stos
int
sbb
adc
mov
jg
nop
dec
adc
cmp
pop
dec
mov
incb
popa
jg
dec
or
jl
stos
stos
jl
push
stos
dec
inc
in
push
enter
dec
or
mov
lds
mov
xchg
and
dec
loope
push
cmp
leave
and
fsubl
leave
inc
mov
insl
and
xor
push
es
shlb
adc
call
insb
sbb
lds
cld
xor
or
pop
outsl
mov
dec
sub
mov
int
cltd
addb
and
xor
loop
xchg
out
inc
push
mov
cmp
xchg
inc
jo
and
test
imul
popf
sahf
jns
add
aam
mov
dec
xor
pop
push
jnp
mov
push
ret
xchg
xor
add
jne
ret
in
mov
pusha
mov
dec
pop
flds
int3
out
pushf
jmp
shrb
icebp
test
pop
cld
cwtl
jno
mov
mov
movsb
adc
test
movsl
mov
test
cmc
push
sarb
cmp
pop
and
aas
adc
ret
push
sbb
xlat
add
mov
and
loop
add
dec
jnp
imulb
repnz
nop
mov
into
imul
pop
xchg
and
pop
jle
imul
je
pop
jge
js
cmp
inc
repnz
lock
sbb
pop
inc
lret
in
pushf
loopne
inc
push
xor
repz
push
movsl
xchg
adc
xchg
sbb
sarb
lds
stc
xor
mov
mov
js
hlt
shl
sahf
jle
lods
fwait
mov
sub
andb
fidivrl
adc
test
iret
mov
aam
mov
inc
push
dec
call
push
rcrb
mov
xor
mov
fadds
cs
push
mov
pop
scas
out
push
outsl
and
sbbl
pop
out
xor
aaa
popa
pop
int
pop
mov
cmpsl
jns
mov
jne,pt
push
sub
std
jl
pop
sbb
xor
fstps
pushf
popl
sbb
jb
mov
adc
dec
jb
in
stos
dec
sbb
push
jnp
cmp
cmp
rcrl
xlat
lcall
jb
out
pushf
in
push
push
shll
xchg
xor
clc
mov
pop
sbb
add
int3
mov
test
inc
cmp
test
mov
pop
repz
jmp
or
add
mov
mov
jnp
pusha
fcom
jmp
inc
out
aam
das
cmp
inc
xchg
cwtl
or
mov
or
js
mov
xchg
push
dec
or
mov
lcall
scas
or
pop
xor
or
dec
pop
insl
test
in
cltd
fmuls
xchg
repz
bound
push
jl
je
iret
and
dec
bound
pushf
xchg
lret
imul
inc
push
pop
lcall
loopw
push
add
das
add
inc
jp
inc
imul
xor
popa
lock
fadds
and
insb
adc
pop
sbb
push
cmpsb
fwait
leave
addr16
jae
cli
addr16
inc
imul
pop
cmp
cmp
loope
mov
cmp
mov
imul
sub
or
jecxz
je
pminsw
sarl
mov
sub
inc
and
mov
cmp
rcrl
pop
xchg
pop
data16
sarb
pop
mov
scas
or
lcall
mov
lea
push
dec
xor
sub
ds
inc
std
dec
dec
or
cmp
cli
cmp
mov
sbb
lds
dec
pushf
cltd
mov
push
push
leave
mov
pop
pop
jecxz
data16
dec
int3
mov
outsb
dec
mov
sbb
mov
push
icebp
mov
inc
out
push
in
mov
inc
out
inc
sbb
in
gs
inc
mov
rcrb
cmp
out
sub
push
mov
xlat
jecxz
or
pop
jecxz
add
stc
sbb
sub
in
cmp
sub
in
ss
repnz
jne
sub
push
add
cmp
out
sti
xchg
sub
or
js
movsb
dec
mov
inc
aam
lods
or
gs
icebp
int3
add
pop
imul
lods
ljmp
lcall
int3
rol
sbb
adc
cwtl
adc
mov
mov
mov
xchg
insb
cmp
jle
push
add
xchg
dec
pop
adc
push
mov
xchg
test
sbb
pop
and
push
jae
dec
rcrl
lahf
cmp
mov
cmp
xor
cmc
add
fstpl
lahf
mov
aam
push
push
lahf
fistl
ds
andb
jae
xlat
popf
pop
lock
scas
jns
std
iret
pop
out
movsl
divl
or
bswap
ljmp
rorb
mov
mov
je
sbb
adc
icebp
int
outsl
test
xchg
mov
das
imul
inc
mov
jnp
fs
sahf
jg
xchg
loopne
ds
sbb
sahf
cld
xchg
test
mov
dec
stos
dec
int
dec
mov
sub
jl
add
loopne
adcb
pushf
dec
movsl
lret
push
xlat
lock
push
out
dec
sarl
and
mov
mov
sub
movsl
sub
xor
pushf
jl
jecxz
iret
js
cmp
dec
xchg
aad
leave
popf
xor
add
fbstp
cld
pop
sti
ljmp
and
xchg
xor
popf
and
icebp
loope
popf
ret
in
and
ds
outsl
jg
adc
xchg
adcb
or
xchg
mov
test
sub
mov
outsb
mov
test
arpl
pop
inc
aam
mov
scas
daa
inc
bound
sub
mov
push
cmp
loopne
or
cli
add
xchg
xor
jns
adc
loop
fs
das
je
lods
loope
out
psubb
add
inc
cmp
pushf
scas
push
sbb
inc
or
xchg
es
jno
mov
imul
mov
rcl
fistl
cmpsb
adc
xor
mov
pop
aas
in
insb
movsl
jne
push
push
push
lret
pop
jns
in
push
stos
sub
pop
outsb
add
push
out
mov
inc
inc
dec
mov
pop
les
add
out
scas
inc
dec
mov
jb
and
mov
out
mov
or
mov
mov
mov
xchg
inc
sub
push
add
roll
and
cmp
push
dec
ds
sub
sbb
mov
dec
pushl
ds
inc
lds
add
mov
popl
cmpsl
or
pushl
xchg
xchg
scas
out
mov
and
stc
xor
mov
out
sbb
mov
add
xor
js
dec
in
je
pop
mov
sub
cmpsl
inc
fwait
inc
daa
pop
std
xchg
and
pop
jg
imul
hlt
jge
clc
xchg
punpcklwd
lods
loope
rcll
push
mov
push
lods
jo
in
pop
or
out
sbb
push
push
dec
aam
ret
adc
lock
cmp
ljmp
cld
in
jle
ja
sub
xchg
out
sbb
or
dec
repz
xor
dec
lods
jl
in
inc
xchg
insl
rcrl
mov
out
out
sahf
dec
lock
loope
add
inc
or
cmp
and
mov
mov
dec
daa
shr
gs
adc
sub
adc
fdivrs
addl
cld
cmp
mov
xchg
imul
movsb
jl
xchg
scas
sub
ljmp
dec
push
aaa
fildll
mov
xor
adc
je
stos
aas
mov
inc
xchg
cld
pop
stos
mov
push
movsb
iret
jmp
mull
mov
pop
cwtl
adc
sbb
push
push
test
cmpsl
dec
push
sub
lret
test
loopne
pushf
divb
push
inc
inc
jl
aas
pop
mov
pushf
arpl
imul
mov
rolb
jne
gs
or
in
ja
stos
subb
push
nop
test
int
into
mov
cmp
inc
push
inc
fdivrs
int
xchg
test
and
sbb
out
adc
add
dec
ljmp
ss
or
daa
xor
aaa
shl
mov
pop
jns
daa
dec
out
jno
fadds
adc
scas
loopne
pushf
in
pop
sub
dec
inc
aam
mov
inc
jle
mov
leave
stos
sub
mov
arpl
xlat
pop
xchg
dec
cltd
or
and
sbb
lea
xor
lods
sub
nop
mov
inc
jno
bnd
movsb
xchg
cmc
movlps
movsl
sbb
push
xor
xchg
jge
push
pushf
or
mov
and
fstl
mov
enter
test
cwtl
mov
push
test
pop
add
push
pop
or
push
mov
jecxz
inc
push
sbb
dec
js
cs
leave
and
int
mov
lods
les
pop
sub
enter
divb
lock
jmp
xchg
push
push
and
pop
and
ljmp
mov
cs
add
mov
fsubrs
lahf
push
inc
repnz
inc
into
mov
sti
mov
std
mov
pusha
ja
pop
cmpsl
jne
pandn
sub
mov
or
neg
ds
sub
mov
je
outsb
jb
jp
cwtl
push
push
or
jle
inc
and
ret
jo
fnstcw
mull
in
push
pop
or
pop
inc
push
sti
sahf
cmpsb
sbb
cmp
xor
mov
gs
mov
mov
lods
lea
pop
or
dec
mov
roll
add
es
shlb
pop
sub
jns
test
loopne
repz
push
insb
ljmp
lods
pop
push
test
std
sbb
cmp
cmp
bound
popa
or
push
push
dec
nop
ficomps
lods
aaa
push
shr
xchg
mov
inc
sarb
sub
test
mov
insb
dec
addr16
sub
fdivs
ja
mov
stos
in
add
shl
dec
iret
and
mov
cmp
subl
scas
pop
adc
cmp
or
mov
int
xlat
dec
rolb
les
jo
out
shrb
ja
lahf
and
fwait
mov
push
adc
xchg
fs
push
mov
or
or
outsb
jns
jb
in
sbb
js
dec
or
ljmp
push
repz
movsb
cmpsb
xor
int
in
pushl
in
pop
loopne
imul
xor
sbb
aam
adc
hlt
pushf
sub
rcrl
mov
rorb
outsl
daa
adc
jl
mov
xlat
xor
vpsubsw
pushf
add
push
mov
dec
rcrl
and
or
clc
iret
sbb
mov
std
outsl
mov
or
repnz
sub
push
add
cmpsb
pop
andb
pop
ret
cmp
bound
xchg
push
mov
and
xor
stos
pop
insb
addl
imul
gs
inc
push
cltd
fidivrs
repz
fnstcw
adc
jmp
mov
mov
out
cltd
xchg
xchg
jp
xchg
test
test
cld
push
or
loop
add
dec
add
cmpl
xor
sub
test
test
call
push
cmp
rolb
jmp
push
repnz
pusha
jb
es
fs
jg
sub
mov
push
push
rcrl
jp
repz
fstpt
aad
addl
or
fcom
inc
pop
mov
jmp
inc
test
daa
xchg
mov
scas
mov
out
pop
sbbl
test
xor
and
dec
push
jmp
arpl
sbb
pusha
in
xlat
cs
pushw
lret
pop
loope
pushl
insl
xchg
dec
dec
mov
sub
and
push
mov
movsl
in
fdivp
addr16
jbe
aaa
xchg
add
jnp
fidivrs
push
imul
xor
push
shrl
push
repnz
into
cltd
xchg
push
jl
ret
lods
ljmp
gs
xchg
xor
jb
inc
and
not
mov
push
out
or
push
loop
xchg
push
or
pop
testb
loope
pop
ja
shrl
adc
cmpsl
fidivrl
push
sahf
popa
arpl
insb
dec
out
ret
sti
lret
xlat
add
add
gs
fldl
and
mov
add
adc
or
in
mov
dec
cmp
adcb
xor
mul
push
das
pop
and
xchg
or
ja
ror
scas
dec
mov
cltd
sbbl
sbb
sub
in
outsl
gs
xchg
shrb
mov
dec
lds
pop
jnp
ds
xchg
xor
push
push
and
dec
push
popl
clc
cmp
ret
leave
test
xor
adc
pusha
jb
mov
jp
out
inc
push
scas
sub
orl
bnd
xor
mov
and
jns
xchg
cwtl
andl
push
js
pop
jmp
adc
hlt
pushl
xchg
jo
rorb
psubd
sub
mov
mov
ljmp
sti
jp
imul
mov
push
pop
lods
outsb
leave
mov
mov
inc
push
fsubrs
lods
jns
cli
or
jecxz
lret
sbb
xor
inc
xor
scas
adc
pop
fwait
das
outsl
lahf
nop
mov
dec
or
mov
cmp
sub
imul
aam
and
sbb
push
stos
push
mov
or
mov
js
mov
push
mov
in
rolb
sbb
jno,pt
ret
ds
cld
dec
adc
fisubs
sahf
cli
lcall
add
loopne
hlt
loop
ret
sbb
adc
jg
xor
sub
push
iret
imul
push
jge
mov
out
and
add
rcrb
into
out
jno
scas
lcall
outsl
js
lods
in
pop
sub
add
ret
ss
pushf
xchg
out
rcl
aam
mov
mov
add
cmp
jns
mov
pop
js
test
jbe
sar
pop
ljmp
jns
sub
out
or
daa
pop
lea
shlb
test
jge
test
outsl
mov
inc
lds
sub
into
dec
ja
sbb
jp
pusha
cmpsb
mov
or
add
int3
mov
ror
push
jge
dec
adc
mov
loope
in
outsl
repnz
outsl
ret
xor
leave
jnp
mov
imul
or
sarb
sub
mov
mov
pop
rorl
out
or
jnp
add
xabort
xor
jge
cmp
dec
scas
pop
ja
jp
mov
popa
sti
lahf
enter
sub
out
lahf
cwtl
les
xchg
push
inc
cmp
mov
cmpsl
lret
push
mov
sbb
mov
notl
add
cld
and
add
addr16
cmp
scas
sub
in
add
jnp
jl
xchg
mov
jb
add
jns
jge
jns
enter
and
mov
mov
or
push
inc
repz
add
dec
lcall
in
test
inc
ret
push
je
dec
jb
jbe
xor
push
jl
lcall
inc
mov
nop
aad
add
repnz
push
xchg
mov
in
mov
subl
mov
test
cmp
dec
ret
loope
shl
xchg
in
pop
sub
outsl
sbb
cmp
fsubl
push
clc
mov
int3
mov
lahf
inc
push
cmp
rol
jle
mov
pop
add
inc
aam
outsb
xlat
lock
mov
pop
in
hlt
push
adc
loopne
or
mov
movl
jb
xor
mov
sbb
lds
jnp
test
and
ljmp
sbb
femms
into
pop
loope
cmp
fnstcw
loop
pop
push
stos
sti
and
mov
cli
out
into
inc
xor
ds
dec
jns
jg
adc
push
popl
repz
ds
mov
sbb
mov
in
fildll
std
addr16
jmp
sub
popl
ljmp
mov
enter
out
mov
scas
loopne
cld
xchg
les
cmp
inc
sub
arpl
insb
xchg
dec
std
lcall
adc
ds
pop
adc
push
bound
mov
aaa
mull
pop
cmp
and
movsb
inc
test
ret
push
pop
jp
loopne
test
aad
iret
mov
add
iret
mov
adc
scas
push
pop
sbb
mov
out
cltd
pop
and
add
add
sbb
pop
mov
rcr
push
addr16
xor
das
nop
mov
pop
out
adc
movl
andb
clc
sub
push
out
fisubl
jmp
jge
mov
sbb
lea
xchg
in
and
loope
xor
xchg
movsl
rcll
scas
pushf
pop
pop
push
lea
mov
push
push
out
xchg
mov
mov
movsb
mov
or
xor
js
push
lret
cwtl
shl
push
or
orb
cmp
sub
and
daa
dec
repnz
sub
adcb
pop
xor
sbb
inc
test
push
int
jae
jnp
jnp
xor
call
cmp
mov
fistps
addr16
pop
subb
cmp
dec
outsl
add
arpl
pop
push
xchg
inc
cmpl
cmp
dec
add
outsb
jne
cmpsb
aam
out
vpmulhuw
loope
push
xchg
lds
jae
pop
add
cli
shlb
mov
stc
cmp
je
pushf
and
pop
stos
arpl
fnstsw
add
enter
es
inc
inc
hlt
pushfw
push
lret
cmp
dec
pushf
sti
inc
xchg
aas
aam
out
sarl
mov
in
mov
insb
ret
mov
bound
add
jae
push
sub
out
pop
das
push
sub
aad
imul
mov
mov
dec
add
jb
shll
mov
roll
xor
stos
movsb
push
ljmp
movsl
movsb
cmp
jb
add
ret
scas
cmpl
cs
jecxz
sbb
push
inc
popf
add
out
pop
lahf
jb
fmull
fsubs
mov
adc
sub
pop
cmp
ja
cld
or
cli
ljmp
mov
cs
mov
loope
mov
out
cmpsl
mov
orb
mov
inc
push
test
test
cli
enter
push
pop
pop
sub
mov
pop
mov
xchg
sbb
xor
daa
pop
push
outsl
loop
adc
push
ds
xchg
imul
int3
mov
pop
pop
xchg
test
xorl
xor
lahf
mov
dec
or
or
outsl
movl
mov
adc
out
cmp
mov
add
push
repz
mov
mov
rorb
pushf
aam
mov
nop
std
xchg
mov
pop
mov
sbb
rolb
mov
jmp
sub
fcoms
inc
mov
les
jo
mov
mov
mov
and
dec
mov
and
or
loop
cmc
xchg
std
lret
and
and
cmp
xchg
mov
mov
add
pop
pop
mov
lds
inc
dec
insb
push
jl
adc
dec
xchg
dec
xchg
in
sarb
xchg
cmpsl
and
bound
loope
test
cli
cld
insb
std
sbb
cwtl
aaa
add
ja
pop
shrb
sbb
push
out
adc
js
inc
jecxz
mov
pop
jmp
push
scas
mov
xchg
pop
mov
push
and
mov
sbb
lret
dec
aas
xor
jae
pop
mov
not
loope
pusha
sbb
jp
rorb
insl
xor
push
leave
dec
cs
jge
pop
push
fdivl
lea
cmpsb
fnstenv
cmc
rolb
xlat
pop
push
lea
pop
movsb
lahf
loop
imul
sbb
or
dec
adc
mov
push
cld
push
jns
sbb
aas
insb
mov
sbb
mov
dec
add
sub
xor
pop
pop
push
or
int
lret
push
movsb
fwait
cmp
lods
sti
mov
dec
aaa
pop
pop
out
sarb
stos
push
sbb
push
lcall
xchg
pushf
pop
movsb
arpl
std
test
cld
xchg
rolb
jmp
xlat
sbbb
dec
pop
aas
std
fistpll
pop
mov
xorb
pop
cli
mov
test
sbb
xlat
mov
gs
loope
or
popw
push
dec
dec
lods
hlt
xchg
mov
repz
stc
pop
lret
xor
test
xchg
aad
xlat
mov
scas
pop
fistl
push
fsubrs
shr
add
inc
movsl
inc
cli
xor
and
sub
jo
mov
jno
daa
or
xor
and
mov
movsl
imul
negb
test
xchg
jo
ret
push
call
mov
xlat
xchg
cwtl
dec
jo
hlt
jno
mov
xor
fcmovbe
cmp
push
ret
imul
roll
cmp
pop
fs
fs
adc
sbb
mov
adc
lahf
js
inc
sbb
or
or
into
dec
lods
fdivl
xchg
jecxz
push
xor
fucomi
cmc
mov
daa
mov
mov
lcall
aas
push
fisubrl
pop
addb
lret
stos
or
notl
dec
xchg
test
or
lods
inc
and
ret
or
pop
xchg
sub
xor
push
sarb
push
stc
dec
cmpsb
pop
dec
and
add
pop
into
stc
cmp
ss
mov
fimuls
and
mov
sbbb
mov
xor
mov
out
test
clc
pop
nop
stos
push
addr16
scas
jb
fs
sub
fwait
xchg
pusha
xor
jl
stos
jne
cltd
test
adc
mov
stos
mov
xchg
loopne
sahf
cmp
addr16
in
inc
push
pop
push
es
or
pminub
jge
aaa
pusha
xchg
sti
and
or
cltd
or
mov
jge
add
icebp
xor
mov
rcrl
aas
aad
add
jb
je
and
jne
shrl
sbb
mov
lds
shrl
inc
xchg
sub
movsb
or
stos
andl
arpl
cli
sbb
ficoml
jecxz
inc
int3
mov
adc
clc
lret
inc
cmpsl
push
pop
insl
dec
pop
push
mov
cmp
push
mov
cmp
inc
mov
fwait
and
xchg
cli
sbb
pop
icebp
dec
dec
lahf
idivb
or
je
and
jb
fdivs
push
imul
nop
movsb
lods
jg
sbb
sub
std
ficoms
inc
lds
pop
test
pop
and
leave
daa
out
cmpsb
mov
movsl
fldl
out
pop
xchg
sub
inc
pop
jno
adc
xorl
xchg
jmp
sar
movsl
sahf
pop
xorl
insb
aam
pop
loop
xchg
mov
sbb
pop
movsb
mulb
adc
pushf
iret
scas
sbb
stc
shll
dec
mov
psubusw
xlat
into
mov
imul
pushf
and
push
mov
jg
and
add
or
fsubrl
add
fdivs
subb
pop
lahf
or
popl
jo
pop
sbb
aad
lahf
pop
push
add
adc
leave
cs
aam
adc
adc
aas
jge
fisubrl
loope
out
adc
xor
in
cmp
mov
nop
lret
dec
loope
push
pop
je
sub
aam
dec
or
scas
cwtl
fstpl
xor
push
sbb
mov
dec
cmp
xor
sbb
xchg
stc
out
jno
cmc
les
or
mov
fwait
or
dec
loope
lock
loop
xor
jmp
pop
or
cmp
cmp
rcrb
mov
add
adcl
dec
inc
sti
and
pop
mov
es
dec
enter
enter
mov
fldl
mov
test
lods
mov
movsb
mov
orb
pop
pop
dec
imul
outsl
out
mov
stos
jae
in
lret
int
xor
repnz
aad
mov
enter
in
or
mull
sbb
pop
rorl
aam
xchg
or
jae
test
mov
jecxz
inc
xchg
add
jo
ljmp
mov
hlt
call
fucomi
mov
or
test
and
mov
mov
leave
xchg
outsb
dec
or
mov
add
push
xchg
sbb
pop
dec
bound
ret
mov
shll
push
testb
mov
jmp
mov
out
adc
dec
icebp
out
outsb
pop
jo
fldl
add
lret
cmp
jmp
in
imulb
pop
notb
and
rcll
dec
das
xchg
or
fldl
adc
xchg
mov
cld
cmpxchg
ret
incb
arpl
enter
stc
xor
lds
pop
jne
out
xor
lods
jle
lret
loopne
xlat
mov
mov
push
push
jno
lds
iret
test
sahf
cwtl
sub
pop
js
mov
push
mov
repz
cmp
out
js
mov
lods
pop
es
cli
pop
add
push
pop
in
int3
and
sbb
push
fildll
sarl
sbb
mov
and
into
or
fcomps
addr16
mov
xlat
sbb
xchg
inc
clc
mov
or
out
or
and
neg
jns
sbb
dec
lods
inc
sbb
mov
and
mov
scas
push
inc
fldcw
jl
repnz
adc
mov
sub
push
jge
cmp
addr16
push
nop
cmpsl
addr16
ret
sub
in
test
sti
ljmp
push
push
pop
in
jb
popf
sbb
add
repz
push
jo
test
push
inc
jbe
clc
fistpl
push
dec
cmovae
mov
sbb
sub
adc
daa
add
inc
cmp
imul
popa
jle
xchg
xchg
clc
test
scas
repz
sbb
xor
cmp
nop
nop
scas
outsl
push
lret
jo
jecxz
xorl
cli
pop
mov
mov
andl
or
ljmp
mov
or
and
sbb
ja
aaa
sahf
into
fmul
test
or
pop
xor
fs
leave
push
fbstp
add
push
cmpsb
add
sub
xor
lret
dec
lods
arpl
in
aam
mov
jbe
add
jae
pop
test
cli
xor
mov
dec
sbb
loop
icebp
enter
sub
lret
inc
jbe
ds
lock
and
lock
fnsave
adc
cltd
outsl
dec
andl
fcompl
outsb
mov
sbb
xor
stos
mov
dec
xor
jb
data16
dec
mov
loopne
xor
clc
push
xor
adc
jle
cmp
shll
out
leave
enter
sahf
jo
divb
mov
lahf
insb
daa
jl
or
into
out
add
mov
jmp
and
lahf
push
orb
and
or
jecxz
add
or
cmpsl
adc
adc
fisttpll
repz
and
or
pop
fwait
mov
sub
cmp
push
fiaddl
add
push
sti
or
adc
jp
push
xor
ljmp
gs
rorl
mov
out
xchg
mov
mov
shrl
add
xchg
or
mov
aas
jmp
lret
mov
ja
jecxz
mov
xor
in
fldcw
xchg
stc
mov
ret
jae
xchg
push
mov
stc
xadd
insb
sub
stos
aaa
lcall
xor
popf
add
fildl
xchg
adc
sbbl
cmp
aaa
push
das
add
push
inc
loop
add
jl
les
pop
pop
sbb
repnz
fs
jl
out
inc
mov
mov
jg
test
adc
ret
dec
xor
add
cmp
ja
aaa
and
sbb
inc
hlt
cmp
dec
ja
or
leave
pop
mov
insl
mov
daa
push
shrl
add
js
scas
mov
imul
addr16
ret
sub
cld
adc
and
jnp
pop
mov
pop
fmull
fdivl
jne
into
pusha
inc
fildll
popf
or
cmpsl
xchg
pop
cmp
jnp
add
cmc
sbb
sarl
adc
scas
adc
orl
imul
xor
jg
mov
mov
cld
popa
push
push
xor
ret
pop
push
nop
call
mov
loop
add
push
mov
popa
push
push
jns
call
imul
sub
arpl
sub
test
cmp
adc
add
pop
test
or
loopne
clc
je
std
adc
movsl
push
sbb
repnz
in
adc
cmp
xchg
adc
fdivrs
movsl
dec
sub
mov
fucomip
imulb
jecxz
test
jmp
lock
hlt
loope
xchg
inc
scas
movsl
jbe
jbe
js
pop
fucomi
mov
mov
jns
push
scas
jnp
cli
paddsw
jp
mov
xchg
int
cmp
jle
mov
and
flds
lods
lcall
sbbl
lods
cs
pop
jle
addr16
pop
mov
push
roll
xorl
movl
adc
repz
fld1
dec
out
imul
faddl
inc
imulb
sub
iret
fcmovu
popa
stc
sbb
xchg
xchg
or
xor
mov
bound
adcb
xchg
cmc
ja
jp
aaa
xor
in
daa
repnz
xchg
push
daa
pop
inc
mov
in
xor
pop
lret
dec
ljmp
rclb
out
rcll
lcall
mov
inc
xchg
sub
add
iret
sahf
mov
iret
icebp
dec
lods
ja
addb
iret
mov
pop
push
sarb
push
jbe
mov
test
pop
cli
mov
scas
stc
jp
adc
mov
jno
mov
jecxz
lcall
repz
mov
jecxz
jmp
into
cmp
pop
cmpsl
pop
xchg
pop
popa
add
cmpl
popa
data16
sub
mov
mov
in
insl
insl
push
xchg
mov
ret
repz
push
vpsrad
lcall
ret
pop
jle
dec
pop
pop
negl
stos
les
popf
jge
ss
and
dec
xor
test
ret
mov
xchg
test
push
mov
test
loopne
adc
jmp
mov
xchg
adc
jbe
jnp
mov
orb
movsb
sti
dec
xor
pop
pop
lret
aas
out
add
cs
xor
ret
jmp
pop
data16
std
shll
stos
sbb
scas
push
fdivl
test
mov
sub
jns
adc
cmp
mov
cmp
in
sub
jbe
outsb
or
mov
dec
xor
fidivl
mov
cld
mov
mov
nop
inc
xlat
stos
stos
and
pop
jb
push
push
leave
test
inc
and
sbb
sbb
adc
leave
inc
shr
sbb
popf
sahf
lahf
mov
or
lahf
add
mov
aas
cmp
shlb
aam
jo
xchg
pmullw
pop
mov
cmp
add
stos
cmp
jne
jno
xor
jg
mov
lods
mov
lds
je
jmp
adcb
dec
daa
mov
adc
int
and
lret
push
sbb
inc
add
enter
pop
in
adc
push
pop
inc
mov
movsb
jb
adc
mov
int3
add
mov
ficoml
aas
test
movsb
mov
jmp
test
ja
jnp
jp
or
sub
pop
testb
imul
test
mov
adc
in
and
xchg
jbe
add
add
pop
out
jle
sub
jne
pop
cli
iret
xor
mov
mov
int3
sti
xlat
cmpsb
outsb
or
cmp
sub
mov
xor
xchg
mov
popa
push
fbstp
jno
cmp
outsl
xorb
mov
in
mov
jne
jo
testb
ret
jecxz
dec
jne
out
add
or
add
jo
test
pop
inc
loop
loopne
call
mov
mov
gs
jmp
lds
bound
xor
dec
mov
fs
loop
aad
push
in
push
loope
sub
or
xlat
xchg
inc
xchg
push
sub
or
sub
jp
adc
lea
sbb
lret
push
fsubs
xchg
movsl
push
int
mov
push
push
movsb
add
imul
jnp
fcmovne
mov
out
mov
jp
mov
sub
sub
imul
fstpt
jb
mov
push
sub
inc
push
mov
cmp
insl
stc
dec
lret
pop
bound
adc
jmp
sahf
out
lods
rcrl
dec
mov
push
sub
jmp
test
dec
loop
or
add
movsl
xchg
inc
jmp
into
out
mov
dec
xlat
dec
lahf
outsb
sub
add
or
ror
pusha
dec
call
sahf
mov
std
mov
mov
mov
mov
lahf
sub
aas
mov
xchg
stos
xchg
adc
mov
pop
fcoms
cmp
incl
sbb
stos
repz
subl
faddl
call
test
sti
outsl
mov
or
pop
sbbb
daa
int
dec
add
add
cmp
shrl
notl
mov
and
and
pop
lds
dec
test
and
ret
fwait
loop
sbb
mov
xchg
jl
imul
inc
pop
mov
std
sub
or
aam
push
fs
imul
push
cmp
shrl
mov
imul
ds
mov
popa
mov
lret
popa
scas
inc
jge
xor
mov
popa
push
ss
lock
mov
mov
sahf
add
jno
sub
lret
and
enter
sbb
jl
xchg
jae
pop
shlb
cmp
mov
lds
ror
cmp
jne
inc
gs
out
pop
add
sbbl
popf
pop
xlat
fcmovnbe
mov
or
mov
mov
movsb
loop
das
inc
mov
scas
repnz
xlat
jns
and
aas
push
pop
je
out
scas
sarl
into
int
loope
movsb
das
mov
scas
lret
outsl
popf
mov
stc
sahf
adc
jle
shrl
outsb
sbb
jp
das
dec
xor
adc
insl
int3
add
sub
gs
push
sub
pop
or
push
cmp
adc
xorl
gs
repnz
adc
xchg
mov
cmp
mov
inc
repz
jno
aas
xor
fistps
insb
adc
mov
inc
aam
data16
mov
adc
inc
fwait
cmpsb
mov
jbe
sbb
sbbl
test
decl
or
out
mov
repnz
mov
inc
rep
cmp
push
enter
enter
loopne
push
fldl2e
xchg
jl
pop
lret
jb
mov
inc
repz
lods
sbb
fadds
sub
adc
xchg
jmp
add
std
push
fisubl
cmp
aas
int
int3
movb
xchg
adc
and
and
inc
mov
pushf
loop
cmp
clc
sbb
iret
xchg
rcll
jnp
mov
pop
cmp
mov
int
xor
cmc
jg
and
movsl
push
shl
imul
push
pop
xchg
push
jmp
push
insl
sahf
push
lsl
jp
nop
dec
sbb
dec
fildl
push
add
xor
stos
int
mov
push
aad
lret
ret
pusha
ljmp
lcall
cmp
enter
xor
hlt
movsl
add
adc
lcall
xor
adc
in
xchg
daa
fcoml
mov
je
insl
dec
iret
je
out
mov
into
mov
or
xchg
cmp
das
cmc
xchg
xor
pusha
mov
jecxz
sbb
pop
aaa
cmp
stos
lahf
dec
imulb
stos
pop
fcmovbe
jo
push
sti
mov
into
cwtl
sub
and
dec
mov
dec
add
or
scas
hlt
xor
movl
inc
xor
mov
mov
fmul
xchg
jae
addb
aam
adc
or
fildl
and
sti
cld
fiaddl
out
ffreep
movsl
inc
loope
dec
je
jmp
mov
je
sub
mov
sub
or
int3
push
outsl
ret
xor
sub
in
lds
push
fwait
repz
shll
mov
popf
in
push
sub
cmp
xchg
dec
out
mov
add
inc
mov
lock
jb
fsubs
lods
adc
xchg
ret
xor
js
cmp
mov
cmpsb
xchg
mov
and
mov
fidivrl
cmp
test
jns
and
adc
cmp
aaa
out
idivl
sti
leave
loope
imul
loop
fstpt
or
inc
arpl
movsb
adc
test
lods
mov
cwtl
call
xchg
mov
pop
cmc
xchg
xchg
xchg
pop
pusha
jae
loop
xchg
scas
decb
jg
mov
in
push
push
xchg
cli
push
test
ret
test
inc
incb
icebp
push
sub
cs
mov
xor
sbb
cmp
lahf
mov
mov
popa
out
ljmp
add
negl
cltd
loopne
stc
pop
aas
stc
addr16
outsb
pop
add
sbb
or
mov
test
daa
add
xchg
or
mov
push
sti
fsubl
mov
cs
dec
pop
and
cmp
inc
jae
popa
xor
adc
fnstsw
aas
fistl
mov
adc
divl
adc
lcall
in
xlat
dec
xor
jae
test
push
jns
pop
aas
rorl
in
imul
sub
test
jo
movsb
sarl
outsl
jecxz
clc
in
sahf
jg
push
inc
cmp
inc
cltd
jns
aam
in
test
lock
push
jo
mov
push
sbb
cmp
cmp
jne
dec
test
mov
and
push
xchg
scas
sti
test
loop
bound
in
push
stc
cwtl
scas
loopne
add
movsl
negb
push
push
push
jno
or
stos
mov
adc
lcall
lret
jbe
mov
pushf
push
mov
arpl
bswap
mov
fbstp
pop
insb
mov
pop
shrl
lahf
xchg
sub
test
push
mov
sub
sub
out
jg
test
jl
lds
xor
ja
lds
int
dec
xor
mov
daa
test
das
push
add
ret
jne
fs
mov
pop
xchg
xor
pusha
cwtl
jne
xor
cltd
mov
xchg
dec
add
dec
out
inc
fwait
mov
repnz
imul
and
jb
dec
ss
outsb
xor
mov
push
cld
aas
xchg
mov
xlat
repz
ljmp
sbb
add
or
xor
mov
roll
mov
pop
push
clc
fnstsw
jno
dec
and
mov
lret
pop
and
add
dec
mov
sbb
xor
add
and
pushf
stc
pop
rorl
push
scas
das
ja
sahf
xchg
fsub
jmp
push
jecxz
mov
das
push
imul
lea
or
inc
add
fldenv
or
fdivrs
insl
sub
adc
movsl
enter
out
sub
pop
es
aad
cmp
test
test
dec
ds
adc
or
mov
pop
xlat
mov
pop
pop
mov
pop
xorl
mov
mov
call
cli
push
call
xor
xor
cmpsl
mov
pusha
sub
lods
sub
fucom
pop
push
mov
fs
leave
pop
sub
pop
movsb
out
sub
pop
test
push
sub
mov
xchg
xor
xchg
fbstp
std
adc
jg
and
sbb
cmc
aaa
lahf
cmp
out
cmpsb
outsl
popf
add
jle
jmp
mov
push
loop
je
clc
add
arpl
xor
scas
and
out
add
inc
cli
push
roll
jb
inc
add
xchg
je
push
fwait
popa
jno
mov
hlt
rcrb
sbb
push
xchg
xor
dec
sub
xor
mov
jno
aas
adc
test
push
sub
out
les
fadds
fildll
jecxz
sti
pop
movsl
lea
jne
daa
add
lods
fisubrl
inc
out
jne
add
rcr
mov
dec
xchg
test
or
and
imul
mov
icebp
ja
and
fistpl
insl
cltd
inc
cld
sbb
int
inc
jecxz
mov
xor
aad
mov
icebp
push
xor
mov
mov
mov
mov
mov
add
and
jno
jge
ret
fnstsw
insl
mov
addr16
cmp
pop
or
hlt
fistpll
ljmp
xor
enter
gs
mov
fdivrl
push
xchg
dec
inc
jg
sbb
ja
mov
fcompl
inc
xlat
rcrl
xchg
or
jne
mov
in
shl
pusha
in
lea
shll
mov
cmp
mov
aaa
and
adcl
add
inc
cmc
clc
imul
cmp
std
ret
xchg
clc
sub
cmpsb
inc
mov
jns
cwtl
mov
mov
cmp
pop
jb
push
mov
inc
repnz
mov
ds
pop
jle
add
mov
cmpsb
sbb
xchg
or
mov
dec
inc
aad
fidivs
loope
xor
movsl
cmpsl
sbb
test
xchg
xor
clc
adc
cmpsl
clc
aas
and
sub
rcrb
mov
add
xor
scas
sbb
jge
stos
xchg
das
dec
inc
in
dec
test
adc
xchg
loope
mov
jae
sbb
lcall
sub
nop
mov
jge
dec
cltd
arpl
or
insb
scas
or
cmp
in
cld
xor
jb
hlt
loopne
push
sbb
test
ret
cltd
ja
dec
jmp
mov
scas
fmulp
inc
inc
enter
mov
xchg
pusha
xlat
cld
xchg
test
xor
mov
dec
fimull
and
frstor
mov
fildl
pop
ror
adc
jg
je
dec
inc
jnp
insl
lcall
cmp
aaa
or
in
pop
repnz
in
pop
lock
xchg
js
sahf
mov
sub
aam
mov
pop
inc
hlt
xchg
jns
test
adc
stos
xor
aam
mov
push
xchg
pop
and
adc
or
lods
pusha
daa
xlat
sub
push
xor
ret
jnp
scas
lret
inc
stc
dec
mov
pop
adc
adc
mov
xor
loop
push
cmp
mov
push
mov
jne
adc
and
in
xlat
and
mov
sub
xchg
imul
xchg
inc
push
xchg
dec
js
mov
les
fisubl
jb
sbb
and
push
nop
hlt
clc
xor
dec
xchg
addr16
or
inc
xchg
push
xlat
jo
inc
inc
js
dec
cltd
pop
cmp
xchg
std
and
jae
inc
adc
out
outsl
pop
nop
in
adc
outsb
lock
ffree
lock
cwtl
sub
sbb
bound
inc
or
or
andl
dec
js
loope
shlb
jnp
fstl
adc
fimuls
cmp
add
rorb
cmpsb
inc
push
outsl
addr16
pop
daa
jp
push
jo
or
lahf
sub
xor
mov
movsl
mov
ret
in
cmc
adc
stos
ljmp
dec
or
pop
insl
jne
mov
pop
push
sbb
xor
fists
in
mov
cs
xchg
int
push
pop
clc
stos
bound
imul
dec
sub
lock
xor
add
and
add
or
mov
bound
jo
dec
das
xor
lahf
or
movsb
sub
sbb
ror
dec
mov
lcall
lahf
lock
inc
out
je
pop
loop
mov
es
test
mov
jle
fwait
mov
sbb
mov
pusha
std
jl
xor
loop
xchg
pop
adc
lret
or
mov
dec
sti
adc
ret
and
jb
xchg
xor
je
orb
mov
adc
stc
and
xchg
fistl
fistpl
leave
push
mov
sti
out
int3
jnp
sbb
insl
out
xor
mov
fnstcw
test
push
fildll
lret
push
into
pop
mov
loope
ret
insb
arpl
loopne
adc
addl
pop
sbb
push
fnstenv
push
fs
addr16
int3
loope
sar
leave
adc
mov
jg
cmpsl
out
xor
mov
mov
push
shrb
lahf
xor
push
push
test
repnz
jo
enter
xchg
sbb
pop
cltd
push
mov
subl
push
mov
in
pop
mov
ljmp
sbbb
test
sarl
daa
and
shlb
fldl
sbb
sbb
notb
repz
sub
add
popf
and
pop
aas
imul
movsl
adc
out
cld
ja
pop
rclb
push
push
cmc
out
mov
and
or
sbb
cld
mov
push
outsb
xlat
cmp
add
mov
and
inc
cmp
in
cld
lods
sub
jo
xlat
lret
pop
sub
sbb
sbb
outsb
lea
adc
push
xchg
mov
adc
loop
push
xor
pop
pop
cmc
pop
and
rcr
mov
xor
push
fisttpl
sub
mov
pop
outsb
mov
repnz
fidivs
nop
dec
or
loope
scas
push
pop
psraw
add
xor
leave
mov
in
stc
push
dec
inc
add
mov
pop
inc
popa
mov
out
js
xor
add
rcrb
cld
incl
nop
repz
fadd
mov
lds
xchg
dec
xchg
loopne
and
js
out
pop
sarb
clc
insb
jge
mov
xchg
xor
icebp
inc
mov
sti
and
repnz
stc
mov
pop
cltd
pop
jb
pop
fsubs
and
shrb
ret
leave
mov
dec
into
addl
fcomps
mov
pop
imul
mov
lea
mov
sub
add
jl
scas
mov
cmpb
loope
or
dec
mov
ljmp
xchg
fsubl
cmp
std
mov
dec
xchg
stos
mov
xchg
xchg
sbb
push
jbe
mov
inc
sarb
push
pop
addr16
mov
push
push
enter
adc
mov
js
cmp
test
ljmp
dec
xor
into
out
loope
ret
or
cmp
mov
mov
stc
popf
mov
push
call
out
rcrl
mov
dec
jecxz
or
mov
mov
fisttps
ret
sub
sbb
out
push
or
enter
stos
daa
iret
ret
int3
popa
pushf
cs
std
ret
mov
sub
pop
mov
push
or
dec
outsl
pop
pop
or
sbb
lock
aas
ja
faddl
add
push
dec
pop
jg
fdivrl
insb
fcompl
xchg
add
ss
jge
scas
fisubrs
je
jmp
sub
push
lsl
arpl
ljmp
aam
pop
int
ret
fidivrs
fldcw
cmc
mov
lret
inc
sbb
inc
imul
rcr
or
dec
dec
shll
fists
shlb
mov
push
das
enter
pop
shr
mov
xchg
dec
fiaddl
shr
mov
aad
jmp
test
insb
ljmp
pushf
cwtl
sbb
fwait
push
mov
mov
fcoml
movsl
sbb
inc
xchg
cmc
addr16
xor
dec
das
cmpsl
movsb
dec
xchg
adc
dec
jl
leave
fnstsw
loopne
repnz
cld
mov
and
in
popf
mov
jecxz
int
cmp
mov
outsb
dec
or
test
xchg
or
icebp
pushf
repz
nop
jb
dec
xchg
sarb
call
test
aam
cli
ja
outsb
sti
loop
nop
push
inc
lret
inc
and
lea
jmp
mov
mov
cwtl
jmp
pushf
add
nop
xchg
jb
jno
test
and
shlb
clc
mov
mov
fldt
pop
sahf
dec
fucom
mov
dec
gs
imul
pushf
adc
xchg
push
flds
hlt
and
repz
add
cmovne
dec
idiv
daa
call
sahf
jg
mov
pop
sub
or
loop
jae,pn
nop
cli
cmp
push
ja
dec
dec
inc
jne
push
or
xor
test
cs
jb
pop
or
mov
cmpsb
addb
xchg
xorb
iret
in
idivl
dec
dec
in
xor
or
int3
jmp
and
rcrb
and
jle
xor
shll
mov
jmp
pop
xchg
scas
jecxz
jge
sbb
push
sub
das
xor
and
lods
xchg
pop
fildl
jle
decb
push
mov
addb
pop
jecxz
mov
ja
rclb
or
insb
pop
mov
lods
sbb
add
xchg
popa
pop
mov
inc
nop
pop
cmp
jb
loope
jle
mov
mov
andb
cmp
call
mov
xchg
inc
cmpsb
inc
mov
or
daa
les
fidivrl
stos
lods
test
out
lds
rol
mov
scas
pop
jne
push
pop
outsl
mov
aam
adcb
lea
hlt
mov
out
cltd
inc
or
rorb
add
xor
dec
sub
mov
dec
cmpsb
leave
or
jnp
mov
lock
std
ficomps
dec
popf
hlt
lds
int3
pop
push
aam
cmp
mov
push
jno
mov
pop
lahf
mov
push
mov
xor
out
dec
insl
xchg
push
stc
lcall
push
xchg
or
mov
mov
mov
mov
jae
popf
xchg
popa
ret
jb
lea
xor
fistpll
jnp
sub
inc
and
jle
mov
sbb
fwait
imul
xlat
and
jle
outsl
mov
xchg
or
ljmp
movsl
mov
cmp
jnp
jb
arpl
insb
jge
test
mov
je
ja
negb
icebp
ret
pop
icebp
cld
or
push
enter
push
cmp
adc
imul
repz
xor
xchg
clc
je
fldenv
mov
sbb
adc
sti
mov
shlb
fistpl
inc
push
aam
dec
xchg
xchg
mov
push
int
jecxz
push
lds
xlat
mov
lahf
out
xchg
cld
loop
pop
or
lgs
das
xorb
movsl
mov
mov
pop
ret
repz
jne
jbe
fwait
ret
xor
fcomip
pop
xor
fistl
mov
es
xchg
out
cmp
mov
inc
add
test
adc
lret
xor
ret
or
cmp
sub
add
fistpll
nop
jg
stc
shrb
fs
mov
into
pop
mov
ret
mov
mov
scas
mov
in
lcall
inc
push
outsb
mov
cmp
cmp
outsb
cmp
jne
pop
outsl
scas
shlb
sbb
ficoml
push
mov
insl
sub
mov
cmp
daa
push
add
sti
and
inc
xchg
push
outsl
xor
xor
movsb
iret
pusha
xor
pushf
mov
arpl
decb
pushf
and
add
popa
lods
push
dec
xor
fwait
dec
es
dec
pop
add
shrb
xchg
fiaddl
mov
lret
and
scas
jae
ret
xchg
adc
xchg
into
stc
int
out
or
jo
loop
xor
cmp
jbe
mov
push
inc
imul
out
push
inc
loopne
mov
pop
out
dec
xchg
xchg
mov
outsl
jl
jnp
xor
jns
imul
sub
or
adc
adc
mov
dec
cmp
xor
cmp
or
lcall
or
jecxz
adc
jle
lods
add
lret
jg
push
sub
mov
insb
xchg
mov
pop
loop
mov
out
jno
lea
dec
inc
popf
aas
andl
adc
dec
lods
mov
adc
loop
aas
cltd
decb
stc
lods
xchg
out
sub
fisttps
repnz
inc
mull
adc
jp
inc
int3
lods
in
pop
mull
cwtl
xor
cs
je
rclb
dec
xchg
fdivrl
js
lea
inc
dec
jp
add
call
sub
sub
loopne
cmp
jle
jle
clc
ret
arpl
fs
or
in
subb
fbld
mov
mov
imul
xchg
push
fldl
jl
scas
ja
jae
popf
and
push
xchg
call
or
mov
mov
mov
lret
jmp
fptan
add
cmp
fisubrs
push
or
cmp
mov
jbe,pn
in
pushf
clc
std
js
lcall
repz
sub
mov
jbe
xchg
jp
movsb
cmpsb
add
sbb
sub
repnz
popf
push
in
ret
xchg
stos
jbe
sbb
xchg
loop
inc
push
mov
sub
jge
dec
ja
xchg
cmc
inc
leave
xchg
notb
nop
push
cli
dec
rcrl
orb
in
dec
inc
jg
inc
cmp
jo
adc
inc
pop
in
cmpsl
into
cmpsl
mov
push
or
aad
mov
cmp
sarb
xchg
xor
pop
test
out
andl
enter
dec
lahf
dec
je
jle
mov
lds
lods
pop
pusha
or
and
arpl
push
mov
add
jecxz
pop
addb
ds
fs
and
and
dec
fbld
mov
sbb
fiadds
int
adc
into
xor
mov
leave
push
in
test
add
or
cmp
sbb
mov
out
ljmp
insb
mov
xchg
or
dec
inc
inc
and
mov
pop
cmp
and
cmp
cmp
lret
in
ljmp
push
or
mov
mov
test
dec
dec
mov
jl
add
inc
outsb
xchg
mov
xor
jl
pop
inc
cs
addl
pop
cmp
lods
jmp
adc
bound
mov
cli
test
mov
jo
mov
jg
out
pop
dec
cwtl
test
shlb
stos
dec
arpl
out
out
add
out
fcomps
test
sbb
shll
ja
add
into
mov
jne
cmp
pop
lret
xchg
mov
jecxz
or
mov
arpl
sahf
test
rcl
rcr
mov
jo
ljmp
jnp
aas
xor
mov
xorl
ja
push
jne
in
cmpl
aas
scas
lea
add
fimull
or
outsl
clc
inc
iret
jns
aad
add
iret
pop
fildl
mov
div
pusha
mov
inc
cmp
call
add
pop
sbb
mov
out
inc
notl
imul
cmp
pushf
xor
bound
int
sti
or
es
sub
out
out
inc
inc
jbe
scas
push
aas
adc
jnp
sbb
scas
mov
aad
aaa
jle
sti
int3
mov
out
xlat
jnp
rcll
sbb
mov
add
cs
aam
add
clc
int3
push
or
xchg
sar
outsl
mov
pop
loop
imul
cmp
mov
pop
call
jge
lret
lods
fwait
cli
cmp
nop
mov
jbe
mov
add
mov
shrb
mov
xchg
cmp
clc
inc
outsb
into
cltd
lock
leave
aaa
or
and
out
out
testl
loope
subps
mov
ficomps
and
or
pop
adc
imul
shlb
leave
out
aas
jno
push
aad
movsl
jge
push
inc
adc
or
mov
jns
test
and
cmp
cmp
movsb
test
dec
lret
mov
cmc
sahf
dec
pop
stos
bound
sahf
movsl
mov
mov
adc
push
add
pop
in
fstl
out
sbb
inc
mov
test
mov
js
loopne
mov
xlat
adc
inc
xchg
push
sub
out
xor
outsb
dec
jns
es
dec
mov
hlt
xchg
fstp
aas
add
je
out
stos
insb
divb
add
mov
aad
test
movsl
xchg
cmc
sub
mov
ja
cmp
push
out
addr16
or
sub
inc
mov
hlt
add
push
inc
dec
imull
and
paddw
lret
clc
daa
adc
cmpsb
or
jb
adc
mov
outsb
xchg
movsl
pop
mov
test
push
sub
rcll
addr16
daa
inc
dec
iret
xadd
cmp
add
and
xchg
push
cmc
bound
cmp
pop
and
std
inc
fcoml
insb
jg
in
lcall
push
mov
jp
or
push
cwtl
stc
add
xchg
push
rorb
into
xorl
outsb
out
adc
outsl
int
dec
mov
xsha1
cmpsb
dec
jg
aam
icebp
out
fstps
into
push
inc
clc
xor
neg
test
jo
and
scas
shll
push
in
cltd
mov
lcall
repnz
cmp
sub
pop
scas
cmp
mov
cmp
lock
cld
mov
es
dec
bound
or
xchg
xchg
lea
jo
cld
movsb
outsb
jae
mov
inc
daa
int
lock
frstor
sbb
xchg
jge
mov
cli
cmp
je
aaa
adc
mov
pop
je
cwtl
push
inc
push
xor
gs
enter
add
xchg
sub
add
adc
pop
out
cmpb
jo
mov
pushf
ljmp
std
mov
push
roll
jnp
mov
jg
sarl
roll
or
cwtl
mov
insl
stc
and
pop
push
loop
sbb
mov
nop
sub
push
push
inc
pusha
outsb
pop
cmpsl
push
push
add
lret
xor
jl
js
dec
popf
mov
add
push
aas
sbb
out
mov
pop
lock
mov
sub
sbb
test
aas
popf
sbb
pushf
out
mov
xchg
shl
ljmp
sbb
dec
mov
sub
and
stc
xor
jmp
int
cwtl
out
aaa
fstp
push
int3
popf
jnp
dec
push
sub
or
add
push
popa
push
out
mov
fnstcw
xchg
cmpsb
and
lret
pop
test
xchg
mov
adc
add
pop
sub
inc
jnp
push
inc
xor
test
adc
xchg
sbb
pop
or
dec
lret
push
push
mov
nopw
xchg
and
xor
out
sarb
subl
in
arpl
in
pusha
iret
lcall
popa
and
decl
cmp
mov
cld
xor
imul
cs
sub
sbb
out
xchg
int3
jbe
dec
cld
inc
cmp
lret
or
scas
fdivs
xor
adcl
cmc
xchg
cmpsl
cmc
sbb
mov
jl
xchg
iret
shrl
push
fcomi
lds
inc
sarl
mov
stc
jne
xor
jmp
inc
xchg
inc
cmp
loopne
xor
imul
scas
out
add
pop
push
lahf
jne
ficompl
aaa
fwait
das
test
and
mov
xorb
mov
inc
sbb
enter
jle
push
enter
push
or
std
cmp
sbb
and
jge
xor
sub
push
in
mov
xchg
ja
repz
imul
loopw
inc
ret
or
loope
fists
sub
xchg
sbb
movsb
xchg
sbb
mov
cmpsl
jge
xor
or
ljmp
sbb
and
inc
aaa
std
fisubs
imul
test
pop
test
fwait
push
das
add
fwait
jnp
int
xor
bswap
lock
lds
inc
in
push
out
int
mov
fcmovu
push
mov
in
jmp
cld
call
cmpsl
je
sbb
cwtl
adc
iret
icebp
iret
dec
sub
xchg
sub
jae
shll
mov
das
xor
push
inc
ja
mov
int3
jp
les
cmp
or
push
inc
cmp
cmp
adc
ljmp
xchg
in
notb
dec
jge
pop
and
cmpsb
lret
pop
add
pop
sub
jmp
pop
inc
mov
loop
int3
fidivs
xchg
stc
mov
lahf
adc
fldcw
xchg
sbb
mov
mov
clc
mov
in
xlat
pusha
mov
lret
mov
in
mov
jmp
and
aam
aam
cltd
lods
ds
jmp
rorl
sbb
inc
jb
daa
lods
sahf
aaa
stos
movsl
pop
fs
aaa
pop
mov
mov
outsb
cltd
icebp
mov
jmp
dec
pushf
arpl
xor
dec
insl
pop
xchg
fsubrl
je
xchg
xchg
push
adc
fnstcw
aam
sahf
jp
mov
pop
incb
or
sub
test
iret
inc
dec
rcll
lcall
dec
fsubs
std
mov
xor
inc
ja
lea
stc
inc
fdivrs
addr16
sub
xor
jge
sbb
add
pop
arpl
mov
lods
nop
lret
cmp
fcmovnbe
es
xchg
cltd
xchg
imul
dec
outsb
imul
xor
je
xorl
pushf
xor
arpl
inc
lods
ds
cs
sub
xchg
sarb
xor
cmp
xor
sub
out
lods
dec
test
scas
push
mov
dec
seta
sbb
and
std
dec
add
mov
xchg
jne
sahf
movsl
addl
and
adc
xchg
adc
push
dec
ss
cwtl
shrb
add
sti
int
jge
mov
out
or
lretw
pop
outsb
fildll
imul
mov
push
dec
bound
push
sub
sbb
or
popf
mov
cmpsb
mov
lcall
ss
adc
adc
and
jb
inc
sahf
shlb
ja
aad
mov
lea
cs
xchg
lea
gs
pop
inc
inc
subl
cmpsl
push
mov
js
sti
adc
jmp
inc
in
leave
popf
sbb
push
pminub
pop
dec
mov
lcall
adc
shrl
stos
jge
mov
push
fsubrl
fwait
stos
push
mov
int3
mov
mov
cmp
jno
adc
sbb
daa
lds
loope
daa
mov
loopne
add
fiaddl
cwtl
lods
pop
data16
sbb
int3
xor
jle
mov
add
ss
cmp
dec
inc
lret
mov
rclb
mov
stos
or
pop
push
insb
outsl
cmp
gs
jne
dec
shlb
daa
scas
aam
xchg
mov
mov
and
jl
mov
in
fsubl
xor
sbb
stos
pushf
ljmp
sbb
inc
mov
in
insb
imul
movsl
and
jl
xorb
pop
daa
sub
mov
movsl
cmp
andl
inc
in
daa
jp
cwtl
test
roll
push
int3
push
in
push
test
cmp
mov
icebp
mov
xchg
scas
push
inc
lock
mov
jo
adc
pop
dec
mov
pop
jnp
outsl
push
add
adc
xchg
pop
out
jge
pushf
roll
push
sbbl
xor
jecxz
js
inc
dec
mov
out
sub
fwait
xchg
dec
in
into
cld
std
adc
ljmp
jbe
mov
repnz
add
mov
mov
iret
leave
shlb
cmp
sbb
and
stos
movsl
sbb
shrb
les
cmp
scas
push
mov
aad
mov
xchg
cmc
lea
nop
data16
inc
gs
cli
or
arpl
pop
mov
xchg
out
and
xor
and
in
sub
lcall
enter
ret
ss
push
add
push
fmul
mov
sub
adc
xor
push
push
mov
outsl
icebp
mov
gs
mov
and
push
mulb
mov
std
xor
cmp
and
push
andb
pop
stos
sub
stc
add
mov
add
sbb
xchg
xor
das
out
inc
pop
adc
xchg
sbb
cmpsl
xchg
add
mov
xor
xlat
sbb
sub
pop
aam
jne
lcall
push
ja
mov
mov
cwtl
nop
pop
push
push
inc
cmpsl
mov
inc
adc
ds
stos
xchg
mov
xor
jecxz
shll
gs
sub
sub
ja
pop
ret
mov
das
dec
jbe
jno
adc
notb
xor
inc
out
fdivrl
or
xchg
sbb
pop
lods
in
push
push
push
daa
mov
sbb
cs
cmp
add
jmp
pop
push
loop
fnstenv
mov
fstpt
sbb
pop
mov
cmp
fstpl
jo
outsb
sahf
ret
pop
inc
add
push
push
push
shll
pop
jno,pt
jle
xor
or
into
jnp
push
jle
mov
or
mov
xor
or
sti
ds
lods
int
cmp
shl
dec
ljmp
xor
mov
fnstenv
sub
mov
jecxz
mov
xchg
dec
daa
mov
jge
add
mov
aam
inc
sub
mov
std
psraw
pusha
mov
popf
nop
xor
punpckhbw
mov
add
shll
cmpsb
and
jg
xor
test
in
arpl
stc
push
cli
out
cmp
pop
mov
cmp
rclb
jmp
fcmovnb
mov
or
gs
adc
pop
and
jge
sub
jecxz
pop
int3
mov
and
pushf
mov
push
movsw
add
cmpsl
mov
or
xchg
test
outsl
push
xchg
pushf
xor
sub
sub
adc
lcall
std
mov
xor
mov
adc
jnp
inc
rcll
jp
sub
aam
xor
mov
mov
outsb
xchg
jg
inc
adc
movsl
sub
mov
xor
sub
cmpb
pop
fs
insl
pop
jae
push
cmc
loopne
jns
testl
xor
xor
jmp
repz
lcall
jp
sub
add
sbb
aaa
gs
and
dec
iret
adc
gs
inc
cmp
and
push
jp
inc
fwait
jb
cmc
pop
mov
frstor
adc
sub
mov
dec
subl
cmpsb
mov
test
dec
mov
pop
pop
pop
rclb
lock
push
dec
sub
dec
xchg
inc
add
imul
stc
stos
pop
aad
fildl
jmp
je
pop
pop
leave
jmp
mov
inc
xor
cmp
add
cmp
int3
in
pop
cmp
mov
outsl
negl
adc
mov
adc
jbe
fwait
and
cmp
dec
or
rorb
xchg
stc
test
ss
std
call
push
xchg
and
jb
pop
loope
sarb
sarb
mov
mov
sti
lock
xor
mov
mov
sbb
repz
hlt
inc
mov
mov
xchg
cmp
fsub
scas
adc
inc
es
popa
cwtl
ret
pop
mov
push
mov
pop
into
mov
jecxz
adc
mov
cmpsb
test
sbb
sub
jge
rcl
mov
adc
xor
sti
subl
and
dec
xlat
rorb
cmp
dec
adc
sbb
mov
aam
cmp
xchg
xchg
pop
mov
repz
pusha
mov
sub
into
mov
mov
and
aas
mov
gs
popf
xor
adc
cs
pop
xchg
pop
push
jno
mov
pop
inc
pop
xor
add
repz
sarb
stos
imul
int
xor
xchg
clc
or
add
jbe
rorb
into
push
adcb
adc
icebp
mov
cmp
pop
notb
push
lods
fcmovne
jae
lcall
push
test
faddl
push
push
movsl
xchg
dec
inc
test
das
xor
clc
sub
rcl
addr16
and
mov
sbb
jbe
arpl
dec
mov
shlb
mov
int3
jg
and
pop
icebp
mov
gs
test
loop
jae
stos
ss
mov
cwtl
mov
mov
setbe
add
push
add
xor
bound
inc
sti
jge
add
in
sbb
pop
inc
ss
push
jae
les
xchg
push
aam
sbb
push
pop
repz
mov
mov
inc
push
mov
leave
add
movsl
insl
pop
fisubl
mov
cmp
movsbl
ljmp
aas
xchg
or
ret
shlb
pop
fdivs
xchg
xchg
fcomps
leave
dec
jmp
test
xor
xlat
sbb
iret
rcrl
gs
leave
cmp
inc
jecxz
dec
ljmp
and
or
sub
jo
and
fisubrl
dec
jb
dec
sbb
push
dec
lods
push
pop
fldl
jmp
xor
push
not
in
mov
stos
xchg
addr16
and
ret
add
stos
push
push
xchg
in
mov
clc
mov
inc
mov
out
xchg
pusha
cmp
adc
pusha
dec
push
mulb
ror
fdivrs
pushf
xchg
mov
inc
movsb
jnp
mov
cli
add
outsl
mov
or
lods
add
xchg
sarb
pop
sbb
or
push
dec
sbb
cmp
cmp
inc
push
pop
in
mulb
jmp
sbb
out
loope
repz
pop
push
shrl
inc
scas
push
dec
loop
xor
dec
notb
test
loope
add
push
in
dec
lea
xorl
das
jae
cmpsl
in
mov
std
dec
test
nop
lods
push
and
out
cmp
add
loopne
fisttps
into
repnz
dec
pop
test
sub
cwtl
fidivs
addr16
push
fisubrl
sarb
pushf
pop
out
dec
adc
loope
mov
cmpl
insl
pop
ret
push
xor
mov
jecxz
pop
sbb
ret
add
mov
inc
add
cmp
sub
mov
out
dec
dec
movsl
in
test
jne
cli
stc
loop
add
cmp
push
add
mov
sbb
mov
orl
data16
push
xchg
adc
jle
scas
push
cmc
mov
jne
and
test
sbb
jbe
test
and
lods
jle
scas
js
push
fadd
in
shrb
fwait
call
data16
repz
cwtl
mov
xor
cmp
and
xchg
xchg
daa
sbb
pusha
jl
cmpsb
xor
and
mov
push
sbb
xchg
imul
mov
in
jecxz
mov
repnz
arpl
xchg
inc
nop
fnstsw
insb
jp
jns
popf
sub
decw
dec
cmpsb
in
rolb
loopne
fwait
in
arpl
aam
fistpll
xchg
scas
and
xchg
hlt
insb
stos
mov
mov
add
jp
cli
mov
dec
push
xor
in
data16
add
test
jp
add
add
and
imul
pop
xchg
and
outsl
not
cmp
arpl
out
mov
xchg
pop
ljmp
xor
xchg
roll
mov
adc
cmp
outsl
jnp
stos
sti
mov
xchg
call
pop
stos
mov
js
mov
test
pop
pop
lret
nop
fmull
xchg
fistpl
jbe
jmp
pop
lods
adc
shll
jns
dec
sub
mov
sahf
sub
lret
push
ret
and
pop
jg
mov
hlt
and
sbb
cmpsl
and
shll
push
cmp
xor
fmuls
sub
scas
pop
hlt
fcom
and
movsb
cmc
mov
hlt
inc
push
lds
fwait
sub
dec
fidivrl
es
jne
out
jge
repnz
ds
pop
and
push
inc
xchg
mov
fldenv
gs
mov
push
add
fs
outsb
int3
dec
xchg
test
xor
lods
add
cltd
stos
jl
sbb
mov
push
inc
int3
repz
pushf
adc
lahf
bound
jp
xchg
jo
jbe
add
rcrl
test
xchg
jae
pop
mov
jmp
adc
mov
lahf
mov
pushf
mov
pop
add
dec
fistl
dec
insb
popf
jle
inc
push
sub
xor
push
dec
fadd
ljmp
dec
in
dec
test
ret
dec
sti
adc
dec
outsb
and
pop
cmp
jo
mov
xchg
dec
push
add
push
out
lods
pop
dec
sbb
hlt
xchg
add
shll
data16
push
cmp
in
add
imul
mov
or
mov
fwait
sbb
sub
jg
in
in
cs
cmpsb
ljmp
jmp
xchg
jecxz
lods
dec
adc
test
jg
test
or
dec
std
pop
lea
cmpsb
out
aam
mov
or
sbb
dec
pushf
dec
insb
cmp
push
repz
pop
jmp
stos
push
aad
ds
iret
or
fs
pushf
loopne
addl
popa
insl
decl
clc
push
adc
fs
loope
loopne
or
cmp
loope
inc
push
aam
push
les
sbb
cs
pop
imul
out
mov
mov
dec
hlt
jl
out
push
lcall
mov
lret
or
shl
rcll
icebp
subps
xor
adc
sbb
dec
inc
inc
enter
lods
loope
push
sbb
pop
mov
xchg
xchg
jmp
cmpsb
ficompl
pop
stos
add
cli
adc
clc
mov
mov
xlat
mov
rolb
pop
lahf
sarb
xchg
dec
pushf
rolb
mov
daa
xor
pop
lods
xchg
popa
and
jae
sub
imul
outsb
call
movb
icebp
mov
push
cmp
pushf
push
xchg
and
adc
aaa
mov
adc
fstps
lods
pop
cmp
test
inc
mov
icebp
jbe
xor
and
rolb
jg
enter
inc
adc
push
cmp
sbb
popf
sbb
push
out
in
push
in
mov
add
popf
xlat
mov
mov
out
sbb
ret
ret
dec
adc
or
gs
cwtl
or
aas
ja
xchg
iret
xor
sub
xlat
out
in
inc
and
cmp
or
iret
push
call
cmpsb
pop
xchg
clc
xchg
and
out
sub
push
mov
xchg
xor
push
push
jmp
jecxz
mov
arpl
push
xor
mov
ret
xchg
pop
push
xchg
das
adcb
test
mov
je
data16
mov
call
xor
mov
repz
lea
movsl
ds
mov
push
rcrl
icebp
shrb
cmp
push
out
add
sbbl
cwtl
shl
xchg
adc
lahf
add
insl
inc
push
aaa
cs
pushf
mov
stos
test
out
cltd
bound
into
push
or
and
pop
cmp
mov
loopne
loope
fidivl
mov
xchg
push
push
and
xchg
mov
ss
add
faddl
adc
cli
stos
std
outsb
cmp
inc
mov
xor
inc
push
call
xchg
pusha
inc
xor
pop
dec
cmp
ficomps
or
dec
aad
bound
inc
sbb
mov
xchg
and
test
pop
add
aaa
xor
cmpsb
xchg
adc
es
in
push
push
nop
pusha
out
jecxz
mov
ds
pushf
rclb
xor
push
and
cmp
jno
cltd
iret
fld
xchg
inc
xchg
mov
repz
mov
jne
push
aad
push
aam
in
or
pop
jge
dec
and
fldenv
or
sahf
pop
push
cmpsl
notl
addr16
cmp
cmpl
mov
pop
mov
dec
inc
stos
movsb
fcmovnu
sbb
cmpsl
xor
inc
pop
lods
out
aaa
stos
jle
xlat
pop
inc
xchg
movsl
aaa
xor
fwait
push
inc
popf
pop
int3
sub
imul
mov
sti
dec
mov
push
dec
mov
or
fcomip
jae
mov
lret
adc
xor
jl
notl
inc
mov
mov
xor
or
mov
in
ret
test
les
inc
rorb
sub
sbb
fcomps
cmp
stos
lcall
incl
cmp
push
gs
push
insl
xchg
push
daa
xchg
add
mov
cmp
push
add
jb
or
jecxz
pop
sbb
cmp
out
lds
dec
fisubrl
mov
and
sbb
cmc
mov
pop
jae
xchg
cwtl
add
jne
sub
cmp
out
or
hlt
mov
inc
dec
adc
movsb
push
xchg
cltd
mov
dec
movsl
push
mov
aaa
pop
fs
flds
idivl
inc
dec
mov
xchg
jle
mov
rcrb
xchg
and
mov
arpl
add
xlat
dec
ret
aas
divb
cmp
cmp
inc
shlb
push
insb
cmp
push
les
jmp
das
data16
fadds
jae
flds
mov
push
icebp
xor
shlb
mov
inc
mov
add
frndint
popa
mov
cld
iret
xor
and
addl
shrl
jmp
pop
sbb
lods
mov
loop
add
stos
ret
fsubr
pcmpgtd
iret
push
push
sarb
in
cld
inc
das
inc
lret
mov
jmp
cmp
pop
outsl
dec
ret
push
in
adc
mov
insl
pop
inc
add
movsb
popf
insb
aam
adc
flds
ljmp
shrl
btrl
stos
or
or
movsl
je
in
sti
dec
push
iret
push
shl
lods
aam
dec
ljmp
out
ret
mov
push
xchg
lahf
jle
xor
sbb
push
cmc
inc
loope
pop
jp
jne
stos
outsb
dec
dec
fists
push
xor
orb
dec
dec
or
fcoms
aas
mov
imul
lahf
loop
or
adcb
shll
hlt
sbb
mov
fisttpll
aad
lds
sub
and
enter
add
in
icebp
mov
add
dec
shrl
xchg
ja
mov
mov
ret
imull
xor
test
call
enter
outsb
enter
cltd
add
or
mov
jo
xchg
and
scas
xchg
adc
xor
pop
and
aam
push
ffreep
lcall
pop
push
jo
movsb
cmpb
push
mov
sub
push
jb
mov
outsb
mov
lret
lret
lret
cmpl
dec
mov
cmpsb
shl
dec
push
mov
into
mov
jnp
jge
mov
push
pop
push
pusha
xor
hlt
xlat
ret
rclb
and
jecxz
lret
pusha
subl
pop
cmp
or
ss
xchg
bnd
push
fwait
sub
aam
fildl
fcomp
lods
push
cmp
adc
fcomps
gs
add
das
shll
add
imul
cli
dec
cld
xor
cmpsl
addr16
mov
or
push
faddl
pop
mov
cmp
or
insl
inc
xchg
sbb
fdivrl
mov
das
insb
sbb
stos
adc
scas
mov
mov
mov
push
test
push
jne
mov
sub
shr
icebp
mov
lods
cwtl
push
sbb
fistpl
out
jb
scas
shrl
lcall
jno
out
sub
imul
dec
push
fs
out
push
mov
mov
and
sbb
scas
imul
push
cmpsl
enter
inc
repnz
fdivl
push
data16
and
and
pop
idivb
and
mov
in
push
mov
ret
fisubl
fcomp
xchg
incb
ret
test
lods
insl
or
adc
daa
jg
xchg
jae
dec
shrb
or
cmp
sub
es
cmp
std
lret
pop
cmp
or
add
aam
aad
or
push
xor
in
adcb
mov
mov
ss
add
cmp
push
push
fistps
sub
call
inc
shrl
call
fdivl
je
data16
and
aad
and
adc
fwait
push
fsts
fimuls
sbb
popa
cwtl
pop
ds
xor
push
pushf
mov
mov
xor
lea
shrb
and
rolb
ljmp
inc
std
bound
or
add
in
lret
movsl
xor
mov
xor
sbb
stc
insl
fs
sbb
mov
bound
adc
in
not
lcall
sbb
aam
xchg
movsl
adc
imul
push
ret
mov
sbb
pop
fmull
rcrb
mov
or
in
mov
xor
jb
jl
xchg
or
jge
nop
cmp
cmp
pop
add
fcoml
outsl
mov
sub
mov
xchg
rcrl
mov
inc
mov
aad
fnstsw
xchg
mov
dec
orb
cltd
xchg
stos
fcmove
sub
jl
mov
inc
aam
jns
pmulhw
pop
push
aas
jnp
xchg
dec
adc
pushf
jbe
aad
scas
sbb
cltd
inc
movsl
scas
sbb
dec
mov
mov
push
cmc
call
and
xor
pop
sbb
or
mov
dec
iret
mov
inc
fwait
cmc
movsb
or
lcall
fimuls
pop
popf
stos
sub
or
xor
fdiv
dec
gs
xor
fwait
push
shll
fidivs
mov
int
out
sub
add
xchg
in
setb
xchg
into
daa
xchg
iret
arpl
ja
sbb
adc
jae
inc
jge
mov
lcall
mov
push
ret
mov
and
add
xchg
mov
test
jbe
gs
call
test
cltd
bound
scas
movsb
ds
imul
mov
sub
and
dec
xor
lock
lods
incb
je
dec
cmpsb
xchg
add
mov
imul
jns
aam
add
enter
sub
or
or
mov
or
or
mov
mov
mov
sub
sub
ret
dec
sub
test
es
icebp
dec
cmp
xlat
enter
push
push
push
jno
into
mov
add
in
pop
push
and
bt
lods
pop
mov
adc
add
mov
inc
clc
cmp
imul
push
and
mov
or
push
mov
cmpsb
mov
lods
das
sub
stos
fisttps
out
insl
adc
mov
ja
sbb
push
sub
mov
imul
xor
add
cmp
lcall
popf
pop
mov
or
lods
call
shrb
mov
add
mov
pop
jecxz
sub
inc
mov
inc
fwait
and
push
mov
mov
adc
inc
aad
cmc
dec
test
out
jecxz
dec
ja
ret
sti
add
scas
xor
adc
stos
into
aad
lret
hlt
mov
dec
push
dec
mov
or
adc
in
fnstenv
inc
popa
sahf
mov
dec
enter
xchg
shr
push
ss
mov
je
jbe
jae
pop
and
ss
outsl
mov
aam
fmull
xor
stos
add
leave
jp
fwait
or
jge
fistl
or
call
xchg
rcrb
lret
out
jbe
nop
adc
push
and
pop
icebp
push
pop
das
push
repz
jne
fs
prefetch
cld
and
daa
ror
lods
mov
xor
lcall
cmpsl
inc
xor
jo
sbb
arpl
iret
mov
addb
xor
sbb
in
push
xchg
adc
fwait
dec
lcall
xor
xor
sbb
and
or
call
push
into
pop
ljmp
xchg
insl
loope
inc
mov
push
push
xor
clc
adc
push
ds
mov
jno
push
xlat
movsb
aam
ds
sub
stos
sbb
jl
mov
outsb
pop
jns
cwtl
or
xor
cmc
outsb
push
xor
mov
test
mov
scas
cli
pop
loope
test
imul
aad
xor
movl
xlat
mov
ret
mov
fdivl
mov
xchg
insl
test
popa
xor
ljmp
sub
popf
push
addr16
lds
nop
xchg
jno
push
in
int3
cmpsl
sub
mov
aas
xchg
test
out
shufps
mov
test
test
repz
rclb
pop
mov
adc
shrl
jb
outsb
movsb
outsl
cmpsl
cmpsb
adc
xchg
jns
sbb
out
jnp
mov
loop
in
push
xor
int
lahf
test
sbb
mov
in
dec
ficoms
std
mov
push
in
popa
sbb
scas
xchg
cli
fstpt
clc
cltd
das
rcr
jg
cli
scas
aaa
mov
jbe
jnp
clc
fcomps
cwtl
cmp
data16
bound
fs
int
xor
xchg
loop
mov
shrb
scas
dec
mov
sbb
dec
repz
cmp
adc
std
adc
or
sub
pop
jb
xchg
cmp
enter
imul
xlat
pop
je
inc
lock
movsb
push
test
dec
add
or
js
or
inc
ret
rcll
or
cltd
push
add
mov
movsl
jle
jno
mov
jno
inc
js
add
mov
xchg
mov
jno
xchg
dec
xchg
jge
mov
sub
rcrl
mov
or
mov
mov
ret
ret
mov
push
hlt
stos
jge
inc
push
mov
je
insb
pushf
sub
lcall
add
xchg
int3
mov
rcll
add
sbb
icebp
dec
loope
repnz
or
iret
cld
lds
mov
in
mov
sahf
dec
mov
std
jno
leave
cmp
cli
xchg
xor
hlt
xorb
lods
fldl
jl
adc
scas
mov
scas
cmpsl
pop
les
loop
pop
mov
loope
adc
mov
test
lahf
outsl
push
cmp
sub
and
ret
sub
pop
mov
arpl
sub
add
out
inc
loopne
mov
and
test
dec
lcall
outsb
into
nop
lea
xor
stc
jne
dec
cmp
adc
mov
sbb
sbb
jmp
addl
push
mov
and
lods
aaa
cwtl
add
push
cmp
imul
lret
mov
mov
pop
adc
arpl
imul
rorb
out
int
jns
jnp
fwait
les
mov
clc
dec
shrl
test
ljmp
test
out
insl
test
dec
out
jmp
lret
mov
movsl
ja
adc
dec
and
mov
adc
adc
sub
mov
into
fsubl
rcrb
mov
xchg
xchg
fidivrl
into
sub
loope
movsb
fsubr
mov
inc
lahf
inc
sbb
fcompl
or
jp
pusha
pop
dec
sbb
pop
lcall
push
cmp
std
jecxz
fnstcw
or
into
inc
iret
cmpsl
into
mov
into
cmp
insl
adc
in
push
pop
jnp
jno
mov
test
int
dec
lea
fcomp
xlat
lret
aam
sbb
jo
dec
mov
and
push
xchg
add
lret
cmp
dec
dec
inc
jns
aas
pop
pushf
xchg
scas
mov
jmp
jb
div
stos
test
sbb
ret
imul
mov
sarb
mov
or
movsl
push
mov
mov
fnsave
out
mul
pop
xor
xor
and
xchg
out
div
mov
ret
xor
mov
sub
xor
inc
movsl
repz
ljmp
imul
lret
mov
xor
js
subb
dec
mov
incl
jne
ss
pop
mov
bound
dec
pop
ja
lock
or
mov
lods
pop
push
and
cltd
js
mov
and
repz
icebp
dec
mov
int
pop
dec
dec
inc
push
pop
test
cmc
mov
loop
sub
add
lods
data16
mov
ror
cmp
adc
loope
jbe
sbbl
filds
mov
dec
lods
lahf
fcoms
sub
push
dec
cs
and
movsl
inc
mov
xlat
push
push
add
pop
ror
xchg
fwait
mov
in
loope
pop
addr16
ds
orb
mov
addr16
mov
add
out
xor
sbb
insb
pusha
jecxz
add
ja
and
push
ds
icebp
mov
mov
add
mov
pop
sub
xor
rcrb
jecxz
ds
inc
ljmp
xchg
pusha
mov
lret
ss
cwtl
mov
lds
pop
xchg
shrb
cs
or
pop
sub
dec
into
mov
sbb
adc
movsl
es
mov
inc
jbe
push
jbe
in
inc
cld
shrb
xlat
jmp
sub
add
mov
pop
ret
adcb
mov
sub
ljmp
loop
push
aad
sub
xor
ss
lret
mov
stos
and
dec
or
jbe
ss
shrb
and
inc
xchg
lcall
push
sub
add
sub
out
or
mov
cmp
lea
leave
jae
or
int
xchg
xlat
jbe
fwait
cmp
xor
or
popf
jle
sti
leave
adc
fnstenv
dec
hlt
inc
push
mov
pop
stos
les
dec
dec
sarb
nop
jno
aas
inc
dec
mov
sub
xorb
sbb
xor
test
test
xchg
ja
jecxz
mov
negl
mov
rorl
push
addr16
mov
jbe
xchg
aam
in
pop
popf
imul
les
out
jecxz
sti
adcl
mov
jnp
xor
out
cs
inc
icebp
pop
inc
daa
push
jecxz
cmc
add
fadd
repnz
jg
in
mov
xchg
daa
push
orb
mov
inc
pop
sbb
test
enter
sub
sbb
mov
fwait
jle
pushl
pop
loope
lea
mov
lods
adc
daa
push
mov
jbe
ja
jecxz
inc
cwtl
push
into
and
nop
lret
jmp
adc
mulps
mov
inc
cltd
test
adc
dec
imul
inc
pop
std
sbb
repnz
cmp
cltd
push
outsl
fsubr
cs
push
pushf
rcll
cmp
loop
pop
mov
das
push
jne
jae
fisubs
add
movsb
adc
xor
es
mov
and
aas
adc
dec
xor
and
movsb
add
and
mov
mov
test
pop
aaa
push
push
push
jne
mov
pop
sbb
int
or
cmovb
fiadds
mov
out
clc
adc
pop
out
mov
mov
fmul
int
aad
out
xchg
lea
negb
dec
jnp
fcmovnu
xchg
jo
mov
rclb
rorl
sub
rolb
outsb
push
mov
lahf
movsb
jo
xor
je
shr
sbb
imul
popa
stos
nop
imul
pop
jp
mov
mov
pop
test
push
xchg
aaa
jae
pusha
roll
cmp
cld
pop
cmp
sahf
pusha
xor
stos
prefetcht1
xchg
imul
jle
mov
adc
jns
mov
call
jmp
mov
aaa
cld
fstl
in
gs
pop
int
insb
mov
fwait
mov
xor
aam
lahf
dec
lods
add
dec
cmp
push
test
cli
addr16
jns
lahf
push
push
popf
add
push
dec
test
cwtl
cwtl
adc
aas
inc
dec
inc
pop
jno
push
xor
movb
or
rcrl
in
aad
xlat
ljmp
shlb
shll
fisubrs
movsb
popf
adc
cmp
loopne
movsl
test
mul
mov
rcr
sbb
imul
out
in
andb
add
fsubs
repnz
jg
mov
xchg
rcrb
push
push
mov
pop
sarl
inc
loop
xchg
xchg
das
out
dec
and
icebp
and
js
adc
nop
xchg
cwtl
daa
fistl
cmp
xor
lahf
paddusw
lea
fwait
das
aaa
mov
jle
mov
shlb
mov
popf
sbb
cs
mov
jae
icebp
cmc
dec
push
ror
pop
push
add
ficompl
out
jge
push
shll
jo
mov
js
xchg
add
jne
scas
data16
ret
add
lret
mov
pop
gs
add
js
mov
or
inc
dec
pop
mov
icebp
jno
jecxz
lds
mov
dec
dec
lea
lock
xor
pop
hlt
or
or
imul
xchg
push
repnz
jmp
pop
scas
add
xor
enter
scas
ret
std
pushf
push
and
or
int
aaa
test
jns
adc
pop
xchg
sbb
and
push
mov
adc
in
mov
test
push
mov
popf
dec
lahf
xor
jg
sub
xor
mov
add
in
stos
mov
sbb
adc
cltd
sub
dec
in
mov
push
pusha
pusha
cmpsl
fldl
push
pop
push
push
cmp
xor
cmpsb
fdivrl
adc
repnz
add
push
sbb
mov
mov
les
jnp
mov
lcall
dec
inc
lock
push
test
stos
sti
add
mov
push
mov
dec
dec
enter
xor
mov
sar
mov
mov
fisttpl
dec
push
sub
cwtl
lcall
scas
xchg
icebp
push
mull
jae
or
pop
scas
lods
negl
jge
mov
or
mov
sub
jno
mov
pushfw
pop
inc
outsb
movsl
lods
mov
es
sbb
xorl
out
inc
xor
mov
ret
mov
mov
push
lret
es
pop
leave
cmpsl
test
xchg
aad
xchg
mov
mov
call
loop
fadd
movsl
inc
mov
cmp
adc
loopne
into
ljmp
jbe
ds
out
adc
mov
dec
push
loop
cmp
jle
inc
cmpsb
incb
in
hlt
sub
jo
in
imul
int
xor
mov
jg
sub
jp
leave
clc
xor
inc
jmp
push
in
xchg
lret
pop
repnz
lods
fbld
es
xchg
ss
mov
xchg
push
and
mov
hlt
jmp
xchg
ffreep
js
sbb
frstor
jne
xor
mov
es
mov
and
xor
lock
fs
cwtl
cmp
pop
insl
jo
sub
adc
lods
mov
andl
movsl
call
cmp
cli
push
rcll
xchg
loop
roll
and
xor
rcr
subl
enter
mov
cmp
push
scas
movsb
xor
push
dec
cld
aaa
sbb
std
fcomi
dec
in
insb
dec
fnstsw
loopne
jge
xchg
mov
dec
pop
mov
insb
pop
je
mov
push
out
xchg
in
les
dec
lret
es
lods
mov
es
cltd
and
insb
aam
testl
sub
jbe
mov
fldt
callw
arpl
jnp
test
in
fiaddl
cmc
movsb
pop
push
addb
xchg
scas
es
sub
xor
es
push
mov
dec
sub
movsb
test
xchg
iret
rcl
sti
xor
or
aaa
std
xchg
adc
ds
mov
mov
mov
test
les
stos
les
mov
add
push
test
mov
aad
push
adc
adc
lock
xchg
pop
or
data16
xchg
cld
lret
aad
xchg
pusha
xor
xchg
sarl
mov
call
sub
mov
fnsave
mov
add
pop
icebp
xor
pop
sahf
lock
jns
xor
popa
aaa
js
push
call
add
inc
and
cs
cmp
adc
cld
jo
pop
or
loop
sub
or
sub
or
dec
xchg
into
outsl
xor
fldenv
leave
sbb
std
sbb
repnz
lcall
jb
test
add
call
stc
xchg
in
rolb
test
ds
subb
je
and
nop
das
adc
into
shr
jl
mov
jle
scas
pop
jmp
leave
lods
daa
push
push
insl
xchg
cmpsb
daa
sarb
insb
push
adc
xor
cli
fs
and
pop
loope
mov
subb
mov
dec
and
xchg
fnstsw
loope
push
fnsave
int
cmc
lret
fbstp
aam
les
jbe
mov
cmp
mov
jns
sub
add
add
in
mov
mov
and
sbb
mov
in
sahf
mov
test
stos
xor
ss
mov
js
pop
insl
loop
rclb
testb
aad
aas
mov
jne
jg
or
and
cmp
jl
sbb
adc
dec
mov
movsb
mov
sbbl
dec
mov
stos
and
ds
pop
mov
fcomi
repz
adc
insb
cmp
testl
stos
pop
inc
mov
or
divb
clc
sbb
stos
lock
jbe
pop
pop
insl
mov
add
mov
clc
ret
pushf
mov
rorb
mov
push
mov
lea
xchg
repnz
push
repnz
sar
aaa
popa
sbb
mov
pop
in
mov
lahf
pop
dec
push
mov
xor
jne
mov
roll
pop
jnp
inc
dec
std
push
push
fs
movsb
or
lock
pop
dec
xchg
pop
and
pop
mov
cmpsb
sbb
test
and
jb
scas
and
push
test
dec
xchg
addl
sub
mov
dec
cmp
in
sbb
mov
push
insl
int3
movsl
data16
adc
out
dec
push
imul
cmpb
nop
test
adc
inc
fcmovnb
pcmpeqw
pop
jge
xlat
popf
sub
sub
mov
push
dec
xchg
icebp
xchg
repnz
jnp
pop
adc
lods
ret
int3
sbb
mov
mov
mov
jecxz
inc
sbb
mov
cmp
cmp
xchg
xor
sbb
fscale
mov
aam
in
test
fwait
in
popa
pop
scas
inc
xchg
mov
cmp
fbstp
out
jge
jecxz
daa
mov
xor
cmp
jne
ficoms
sahf
dec
xchg
inc
idivb
stos
mov
pusha
adc
dec
mov
cmc
aaa
sbb
arpl
xlat
aas
mov
mulb
idiv
cli
mov
test
dec
inc
and
mov
incl
mov
ss
inc
loop
mov
xor
dec
sbb
jnp
or
enter
addr16
mov
add
adc
sbb
xchg
dec
std
mov
push
stc
jl
sub
mov
inc
hlt
inc
and
popa
in
ficoms
repnz
andl
adc
ja
sbb
sti
cs
push
xchg
and
add
pop
inc
mov
loope
or
leave
xchg
mov
mov
cmp
mov
mov
daa
push
inc
testl
sbb
sub
pop
xchg
shrl
inc
and
dec
pop
cmp
psrad
shlb
xchg
adc
lods
lods
loopne
jbe
sbb
push
fsts
push
adc
flds
xchg
cwtl
jbe
mov
subb
pusha
bound
jae
jmp
cs
mov
add
lock
scas
mov
outsl
fldl
cli
adc
adc
clc
rclb
ret
or
and
cmpsb
arpl
out
push
mov
stos
flds
rclb
xchg
xorl
int
inc
sub
insl
insb
test
or
movsl
push
mov
add
cltd
mov
mov
leave
cmp
mov
jge
or
mov
or
xor
shrl
inc
jnp
addr16
cltd
and
in
pusha
jp
push
push
push
ret
mov
in
jg
pop
fistpl
sbb
push
outsb
adc
clc
mov
dec
jle
push
mov
scas
sbb
arpl
je
mov
inc
movsb
cmp
mov
mov
cmp
mov
popf
and
add
or
adc
addl
mov
mov
movsb
lock
movl
push
pusha
and
cs
divb
jp
or
loop
sbb
add
dec
dec
out
add
mov
or
pusha
movb
aas
int3
js
adc
vpsrlw
or
and
or
mov
cli
and
xor
cmp
out
sbb
les
add
imul
pusha
or
movsb
pop
xlat
in
jne
in
outsb
outsl
mov
notb
stos
jb
mov
add
push
xor
popa
pop
dec
jle
cmp
sbb
ds
int
in
ja
xor
fcmovb
mov
lret
pop
std
and
stc
outsl
pop
cmc
add
aas
test
adc
xchg
int
adc
repz
adc
cli
fstp
xor
jecxz
jl
outsl
fstpl
and
xlat
ss
mov
movsb
pop
popf
loopne
nop
cwtl
mov
xorb
sub
and
std
stos
push
pop
and
xor
mov
call
rep
xchg
cmpsb
mov
bound
ljmp
cmp
xlat
nop
push
dec
sbb
loop
jle
push
mov
cmp
mov
xchg
inc
cmp
pop
rcrb
xchg
lcall
pop
aad
fsts
bound
add
fildll
pushf
repz
dec
and
inc
in
and
lock
jne
outsb
js
and
cltd
es
fldl
jecxz
sub
push
in
or
fidivs
xchg
and
sub
xor
stos
jle
in
sub
and
pop
cli
add
xchg
lods
lret
rcll
mov
cmpsl
outsb
repnz
fldenv
dec
jno
cmp
movsl
mov
cld
or
and
stc
sbb
das
add
xlat
jecxz
pop
repz
cwtl
ds
mov
sub
mov
fsub
dec
shlb
fisttps
or
call
data16
push
xchg
push
push
xchg
cmp
lds
stc
pop
js
xchg
test
xor
arpl
daa
and
aaa
or
cs
cmpsl
in
addr16
cmp
inc
into
jp
adc
dec
pop
mov
jmp
pop
add
arpl
pop
dec
sub
bt
insl
daa
cmp
daa
mov
push
or
jnp
xor
stc
frstor
imul
and
popf
inc
mov
add
mov
xor
lahf
std
jp
dec
fs
cld
out
aas
je
dec
or
das
cmpsl
xchg
xor
pop
in
sub
mov
xchg
lcall
out
in
aam
iret
push
add
xchg
movq
mov
adc
test
dec
stos
leave
push
mov
call
dec
fimull
sub
adc
test
pusha
rorb
xor
add
insb
out
xor
icebp
inc
mov
lret
push
outsl
adc
pop
mov
outsl
add
mov
js
inc
pusha
mov
lahf
aas
bound
sub
mov
cmp
hlt
adc
adc
enter
jl
insl
xlat
push
scas
jae
jb
sub
pop
fistpl
and
sahf
mov
adc
inc
or
decl
shr
pusha
les
shlb
xor
popa
sbb
dec
shlb
loopne
xchg
aaa
outsb
sub
insb
sbb
lods
cmp
aaa
pop
fbld
cmc
mov
stc
sub
imul
and
js
inc
je
mov
outsb
and
cmc
add
add
fidivrs
jno
sbb
adc
fiaddl
lret
push
test
mov
fbstp
sbb
sub
call
aas
ret
add
scas
fnstsw
movb
stc
in
jl
push
fstps
adc
fdivs
push
aaa
shll
mov
jp
pop
sbb
push
jnp
mov
std
pop
es
ret
test
hlt
push
ret
or
inc
adc
jbe
out
inc
adc
push
cmp
jl
or
xchg
mov
mov
and
dec
ffree
fidivl
lcall
add
jg
xor
sbb
dec
outsl
xchg
ljmp
loope
lds
jg
fdiv
mov
pop
xor
lea
ds
and
adc
xlat
jae
ret
pop
fmul
lods
mov
mov
mov
seta
gs
mov
js
insb
xchg
or
fucomp
fidivs
sbb
das
test
mov
je
in
lods
xlat
lcall
scas
mov
in
call
xchg
stos
mov
mov
cli
enter
sub
divl
rolb
xchg
movsb
xchg
mov
sbb
push
xor
outsb
test
jnp
pop
cwtl
pop
mov
aam
movsb
jo
add
cmpsl
jecxz
inc
scas
pop
sub
push
xchg
inc
das
outsl
jge
in
iret
sbbb
and
dec
popa
enter
shrb
push
lcall
repz
xor
add
mov
les
push
sub
scas
jle
xchg
shlb
sbb
and
lods
jne
or
adc
je
xchg
lret
mov
out
stos
mov
xchg
mov
outsl
test
outsb
or
lea
mov
js
mov
maxps
lds
cmc
leave
xchg
sub
and
lock
adc
aas
add
pusha
xchg
inc
lds
xchg
sbb
xchg
dec
inc
dec
movsl
and
addr16
test
sbb
push
subl
lods
and
jo
and
and
js
mov
jecxz
call
dec
lahf
test
shlb
out
dec
addl
scas
lds
stc
adc
inc
xchg
and
jbe
xor
test
leave
lds
sbb
cmp
and
popa
pop
hlt
test
or
jecxz
insb
in
dec
push
out
dec
loopne
cmp
enter
cmp
popa
push
movsb
push
lods
addr16
push
orb
pop
sub
and
hlt
das
pop
dec
or
sbb
ljmp
sbb
jae
int3
out
ret
cli
adc
mov
stos
sbb
je
add
stc
lret
xchg
xchg
pusha
popf
cmp
ljmp
add
pop
fwait
js
rol
jge
daa
inc
sti
adc
ds
decl
les
jl
repnz
js
pop
mov
cmpsl
xor
loope
fs
xor
xlat
and
cmp
jns
popa
push
dec
dec
dec
mov
jbe
repnz
cltd
out
push
stos
fwait
loop
fldenv
sbb
inc
dec
not
mov
stos
cmpsb
fdivrp
ret
inc
lods
push
into
in
sahf
xchg
push
das
mov
sahf
orb
int3
xorl
add
les
out
and
or
xorb
xor
mov
lds
in
in
lea
mov
pop
addr16
mov
cld
int3
lret
sbb
inc
xor
fidivrs
mov
testb
stos
cmp
mov
adc
iret
pop
dec
filds
xchg
out
cltd
scas
call
leave
movsb
sar
push
in
or
inc
data16
mov
push
pushf
adc
add
and
sbb
or
icebp
insb
gs
outsb
pop
or
fnsave
mov
jb
into
inc
sbb
loope
xlat
fstpl
xchg
sub
mov
sarl
mov
mov
xchg
and
outsb
jbe
inc
sub
in
fwait
cltd
jp
push
mov
inc
xchg
bound
cld
jbe
out
rolb
pop
out
push
xchg
sbb
sbb
cmpsb
leave
inc
fstl
sbb
mov
inc
add
xchg
lret
dec
mov
sbb
xchg
imul
psubb
ret
inc
aaa
dec
mov
adc
xchg
cmpsl
sub
push
pusha
add
ss
sub
aas
popl
adc
mov
push
arpl
mov
leave
add
mov
cli
inc
sbb
add
push
adc
ja
fisubrl
in
and
out
sbb
popa
adc
rclb
jae
or
inc
xchg
test
shl
add
inc
cs
mov
and
nop
fcoml
dec
xor
or
movsl
in
ret
mov
cwtl
fs
push
cmc
inc
ds
lret
cmp
jmp
cmp
add
cwtl
push
jg
mov
add
shlb
fsubrl
mov
int
xor
fs
mul
xchg
clc
fcomps
loop
jns
cld
psrld
cmp
pop
fisttps
xchg
test
in
mov
jno
mov
clc
xor
push
xchg
ret
out
in
fcoml
fisubrl
jl
pop
std
mov
out
xchg
pop
or
and
jle
negl
aaa
mov
mov
movsb
pop
cmpsl
mov
jb
push
int3
loope
fwait
dec
sbb
in
push
jecxz
cmp
mov
jmp
jbe
cmp
jecxz
push
and
cs
aaa
mov
das
fnsave
push
dec
dec
push
test
cli
adc
iret
cmpsb
and
or
fwait
push
push
lods
das
into
js,pt
and
or
pushl
cmc
jns
shll
pop
out
sub
mov
sub
lret
pop
mov
fadds
mov
stos
mov
subb
push
mov
icebp
inc
mov
in
xchg
push
dec
scas
out
add
in
or
movsl
les
sbb
test
popf
lret
inc
test
xchg
xorb
std
lcall
push
mov
jmp
push
fdivrs
je
mov
dec
ror
ret
scas
out
aas
sbb
and
mov
dec
jne
jmp
out
sbb
mov
dec
jg
dec
shr
call
push
xor
cmpsl
or
hlt
fistpl
jo
stos
xchg
jbe
fldt
fdivl
xchg
jge
pop
push
dec
nop
push
cmpsb
sbb
outsb
mov
xchg
sub
and
and
push
push
and
sbb
mov
adc
inc
xor
jns
pop
lret
mov
xor
int
xor
jae
jg
mov
lahf
pushf
dec
xchg
repz
sbb
add
cmp
in
lret
mov
nop
cmp
push
and
jl
xchg
movsb
pop
ror
fstl
aad
imul
push
xchg
mov
testb
mov
jecxz
aam
xchg
gs
ret
ljmp
outsl
cs
imul
jp
and
mov
loopne
ljmp
pop
push
rcrb
dec
fdivrs
cltd
call
aas
xchg
xor
insb
sub
enter
add
cwtl
xchg
dec
mov
cltd
lds
jp
movsb
pop
addl
cmp
mov
inc
dec
sub
xlat
roll
adc
push
jecxz
nop
pop
mov
sub
push
push
push
lret
mov
sub
xor
dec
test
mov
orl
push
js
aad
cwtl
andb
addb
dec
sbbb
int
pop
movsl
lret
mov
out
and
movsl
xchg
dec
lahf
mov
loope
rorl
dec
ds
int
mov
adc
fcompl
cltd
push
ficompl
push
mov
pop
jne
daa
cmp
jmp
dec
fsts
pop
inc
mov
enter
shl
push
xchg
jns
sti
insl
jg
jle
sub
stc
xchg
int
dec
insb
notb
pop
mov
ret
xchg
xor
dec
xorb
iret
cmpsb
dec
jp
stos
mov
lcall
repnz
xchg
out
mov
jbe
xor
or
imull
sub
lret
xor
push
jnp
cmp
sbb
add
xor
inc
inc
adc
popa
out
mov
sub
push
add
int3
stos
clc
inc
shrb
js
adc
lds
je
mov
mov
pop
sub
jge
add
jl
das
jmp
mov
nop
fs
push
add
push
faddl
add
out
add
js
or
outsb
popa
movzbl
jg
iret
cli
xchg
leave
lods
cli
push
mov
mov
loope
pop
fildl
out
aas
out
loope
pop
jecxz
loope
repz
repnz
sub
call
mov
pop
dec
jo
pop
ljmp
jne
mov
imul
lds
insb
rcr
cmc
jmp
ret
test
dec
add
sub
cli
push
mov
adc
loopne
sarl
mov
addr16
movsb
ja
test
jg
sbbb
or
jl
or
jbe
inc
mov
or
pusha
xor
sti
pop
inc
das
out
xchg
sahf
in
cmpsb
loopne
cmp
sub
into
adc
mov
cmp
in
pushf
mov
mov
xor
shrb
inc
mov
mov
inc
into
lcall
add
test
pop
mov
icebp
rcl
cli
stos
ret
sbb
fwait
jb
es
iret
call
adc
xchg
push
stos
insl
outsl
pop
adc
repz
movsw
das
mov
mov
xchg
add
jecxz
pop
and
or
inc
imul
xchg
mov
pop
push
loop
bound
into
mov
arpl
xor
push
fistpll
push
jge
sbb
inc
call
fmull
outsl
mov
andl
cmp
pushf
cmp
cmp
mov
and
mov
push
jg
faddl
shll
pop
mov
inc
ss
ss
cmp
ja
inc
xor
shrb
xor
jns
fistpll
sahf
pushf
sub
push
outsb
adc
mov
mov
mov
nop
lds
jp
loope
and
rcrl
jnp
cwtl
pop
jns
jl
adc
mov
inc
xor
repnz
pop
outsb
cmp
sub
inc
adc
shlb
sbb
pop
mov
dec
cs
outsl
subb
xor
aad
mov
out
jle
cltd
dec
ja
repnz
mov
mov
idivb
int
std
and
sub
push
or
ljmp
or
xor
cmp
jo
sbb
test
bound
daa
sub
xchg
mov
pop
in
xor
xor
inc
test
cmp
push
mov
mov
mov
xchg
fsts
adc
mov
aam
xchg
jmp
cmc
adc
sub
out
and
mov
movl
outsl
cmp
pop
repz
xchg
nop
cli
add
fcmovnb
sub
and
fsubrp
adc
and
mov
ret
iret
and
fs
inc
rcrb
orl
lcall
jb
ljmp
sarb
dec
mov
nop
daa
sbb
jp
cmp
jmp
dec
popf
xor
xor
shrb
pop
adcl
pop
stos
mov
int3
cmp
cmpsl
push
mov
and
inc
xchg
push
mov
or
in
or
mov
mov
mov
xchg
mov
cld
loope
stc
mov
dec
repz
jns
inc
pop
pop
repnz
sub
jge
sub
and
ficomps
mov
aas
rorl
jo
aam
in
negl
sbb
fmuls
hlt
mov
mov
mov
fidivs
dec
lods
cmp
and
rcr
jge
fcomip
adc
or
jnp
cld
pop
imul
divl
lds
test
insb
mov
xchg
rorb
sarl
pop
dec
aaa
mov
mov
push
repnz
mov
push
mov
testl
ds
and
inc
cwtl
and
sarl
xchg
adc
movsl
in
pop
repz
fidivl
inc
xor
pop
mov
mov
cld
xor
bound
jns
aas
mov
leave
lds
lret
shl
dec
pop
es
cmc
jp
leave
mov
jno
pop
pop
ret
xor
push
dec
pop
lods
sub
hlt
aad
cmp
dec
call
mov
nop
aas
inc
mov
sub
cmp
jb
hlt
dec
push
dec
lahf
scas
push
jnp
pop
rep
outsl
and
pop
orl
xor
xor
int
call
pusha
cmc
das
xor
dec
adc
lea
clc
rol
jne
jge
ja
ja
mov
gs
test
sub
scas
and
cld
sarl
sub
fisubrl
push
add
mov
lods
rorb
push
ds
cmp
mov
daa
insb
xor
jnp
int
fldcw
sarb
shll
sahf
mov
scas
and
mov
rcrl
and
or
dec
daa
mov
shlb
mov
add
inc
fidivl
cwtl
push
xchg
pop
sub
add
mov
sbb
sarl
and
sub
lahf
dec
jo
es
cmp
sub
mov
in
inc
inc
adc
mov
xchg
jp
mov
xor
or
sbb
sub
call
pop
ds
push
dec
mov
rcrb
in
mov
ja
fisttpll
cli
and
es
mov
sub
fdivrs
mov
rorl
rorb
mov
dec
lret
insb
sub
cmpb
dec
sbb
fsubrs
xchg
nop
push
test
xor
sub
add
out
fwait
xchg
pop
jne
fiaddl
fcomip
cmp
jne
cli
mov
aaa
mov
fsubr
sti
pop
and
addb
push
leave
fimuls
test
bound
cwtl
inc
hlt
in
fs
and
pop
mov
push
xchg
dec
fbld
ret
mov
or
xor
lock
insl
in
lahf
pop
inc
adc
das
jle
cmp
fstl
adc
rcrl
nop
cwtl
jmp
and
rcll
sub
pop
test
xchg
adc
or
mov
pop
fwait
jno
in
mov
push
mov
repz
out
pop
push
push
cmpsl
or
neg
cmp
push
les
sub
fbstp
gs
pop
jge
fs
xchg
lret
push
les
testb
mov
imul
dec
xor
mov
and
inc
cmc
inc
sti
mov
stc
mov
pop
fcompl
into
add
inc
fnstsw
mov
mov
mov
in
xchg
xor
insb
cli
add
jo
cmc
xchg
mov
sub
mov
jg
jecxz
sbb
test
shrb
lret
fsubrp
add
data16
inc
je
test
pusha
sbb
movsb
test
sub
aad
inc
lcall
call
mov
mov
sbb
jb
sub
out
aas
jnp
push
or
inc
xchg
jae
xchg
outsb
push
mov
and
add
std
xor
cmpsl
inc
xor
out
aam
cmp
dec
leave
test
int3
pop
fs
pop
repnz
cmp
cmp
jb
in
nop
imul
aas
mov
lcall
into
jp
mov
xchg
ret
sub
xor
adc
data16
dec
sbb
rorl
pop
icebp
in
inc
and
adc
inc
sbb
or
or
popa
repz
lret
test
mov
clc
lods
mov
adc
popf
mov
in
arpl
or
pusha
mov
sub
leave
movsl
jle
push
lcall
sub
sbb
push
mov
jp
out
stos
xchg
jmp
frstor
repnz
outsl
push
pop
es
out
ss
inc
jle
sti
fcom
dec
adc
dec
popa
mov
cmpsl
rcrl
pop
mov
jg
xchg
sbb
popf
jno
dec
push
fisttpl
inc
cmpsl
push
push
push
out
mov
jge
test
es
sub
fwait
and
pop
and
xchg
xchg
add
pop
pop
or
data16
dec
iret
imul
adc
adc
movsl
sbb
add
sarl
pop
lods
xor
push
and
jmp
lods
out
rorl
sub
mov
push
out
es
push
dec
loopne
aas
pop
mov
in
sbb
pop
test
mov
movsl
bound
jecxz
cmc
cmp
gs
push
fisttpll
lods
mov
out
out
cld
jbe
or
jle
mov
mov
add
test
and
faddl
in
push
in
popa
dec
iret
xor
int3
jmp
adc
push
dec
imul
or
jne
push
in
pop
inc
cmpsb
fwait
test
divl
jmp
cmp
sti
popa
push
jae
pop
xor
std
jecxz
mov
cmp
sub
inc
ss
jno
xchg
shl
cmp
xor
xlat
dec
sub
dec
xor
pop
pushf
push
sub
sub
dec
rol
add
out
test
add
cld
hlt
mov
inc
aaa
push
addl
cmp
dec
jecxz
add
das
imul
jae
fistpl
insl
ffreep
push
aaa
mov
loop
xor
or
mov
cmp
loop
xorl
xchg
aas
cli
mov
mov
cmp
pop
es
xchg
outsb
add
out
xor
and
fldenv
adc
jae
push
cltd
and
nop
ficomps
lods
xchg
cwtl
cwtl
dec
int
inc
or
inc
sub
push
xchg
lret
lret
iret
cmp
push
jnp
test
xchg
cmpsb
pop
push
cmpsb
pop
pop
das
sub
add
mov
pop
or
mov
clc
repnz
dec
aad
adc
out
call
shl
cmpsl
xchg
push
icebp
xchg
lahf
push
cmp
mov
int3
lcall
pop
in
je
outsl
cs
jmp
pop
mov
scas
fstl
popf
adc
jbe
add
clc
xchg
loopne
nop
jbe
ret
movsb
int
bound
pop
imul
and
mov
adc
bound
das
inc
insb
mov
and
mov
out
or
das
loop
or
daa
push
mov
sbbl
dec
jbe
xchg
fnstsw
or
xlat
jecxz
pop
jg
pusha
adc
jo
jb
lret
jecxz
pop
and
dec
stos
push
test
jae
inc
jl
out
push
shrb
mov
cli
add
ljmp
in
sub
push
popf
lock
daa
repz
mov
outsb
dec
xor
sbb
leave
and
cli
maskmovq
mull
pop
sbb
mov
sar
stc
push
push
push
xchg
repnz
jge
sub
in
fldt
ret
out
cli
sub
cmp
mov
inc
lods
adc
mov
inc
lock
scas
add
xor
aam
push
mov
int3
ds
rcrl
daa
dec
lret
mov
mov
clc
and
lret
xor
ljmp
cli
ja
in
lds
js
jae
mov
test
dec
mov
out
cmp
mov
add
xor
add
out
push
in
imull
push
add
adc
shlb
inc
xor
js
adc
jns
jns
jecxz
iret
xlat
xor
bound
xchg
fs
aam
sbb
mov
add
sub
mov
jbe
mov
jmp
mov
cmpsl
inc
mov
jb
xchg
or
push
push
rcrb
ret
es
adc
push
sbb
jl
mov
sub
xchg
jns
adc
clc
int
out
pop
pop
push
enter
xchg
mov
imul
mov
inc
push
lds
dec
mov
aam
leave
rolb
pop
mov
pop
ljmp
push
insl
call
insb
jge
fs
xor
sbb
mov
push
mov
and
pop
inc
jno
mov
stos
add
icebp
scas
add
pop
int3
jmp
and
jns
mov
arpl
orb
inc
fsts
bound
roll
push
sub
jnp
push
iret
jo
mov
sub
cmpsl
cld
dec
sahf
sbbl
push
adc
cltd
int
sbb
es
je
mov
mov
aad
fldenv
ss
mov
inc
mov
push
and
push
jle
ret
std
lock
jno
ds
xchg
sub
repz
dec
jmp
pop
fisttps
dec
pop
mov
pop
stos
xchg
fcom
movsb
xchg
fs
jae
xchg
out
inc
loope
or
test
dec
andl
pop
adc
movsb
add
xchg
pop
sub
jle
cmpsl
push
mov
mov
test
jg,pn
stos
mov
adc
dec
mov
xor
imul
jbe
popa
aas
adc
and
stos
and
sahf
repnz
int3
cmp
dec
push
mov
xchg
lock
stos
push
push
les
or
stos
mulb
add
out
xor
aam
enter
mov
add
xchg
jl
fists
shlb
pop
adc
mov
push
in
hlt
mov
rcrl
push
mov
pop
mov
fmuls
mov
mov
clc
mov
in
rol
add
sbb
dec
insb
insb
adc
xor
aad
movsb
idivb
dec
add
dec
cltd
xor
mov
inc
leave
mov
push
xor
pop
lock
inc
cld
add
mov
stc
dec
test
fdivr
mov
xorb
call
push
adc
mov
xchg
xor
fcoml
cmpsl
std
jg
inc
sbb
inc
shlb
adc
jne
mov
stos
pop
jg
mov
nop
stc
xlat
adc
mulb
push
or
jp
push
scas
lahf
mov
sbb
and
loop
sub
lds
pusha
and
test
and
xlat
into
aad
adc
push
loopne
push
add
in
lret
sub
add
clc
xchg
adc
scas
adc
mov
inc
sub
xchg
clc
pusha
daa
ss
std
mov
jae
fisttps
test
xor
lods
cmp
fs
jne
jle
mov
in
out
mov
xor
jns
xorl
jo
cmp
pushl
and
enter
sub
and
lret
dec
push
pop
adc
vmovss
inc
push
mov
sub
loopne
xorb
adc
and
or
sbb
mov
int3
xchg
imul
addb
or
or
push
jecxz
les
dec
aad
push
loopne
push
jl
cmp
hlt
jne
and
loopne
bound
xchg
push
and
fiaddl
insb
add
int3
jecxz
sahf
adc
test
mov
lret
in
mov
cmp
push
ljmp
and
ffree
jl
ja
sahf
push
shl
mov
xor
mov
cmp
add
cmp
pusha
pusha
in
or
jmp
ret
pusha
or
xor
mov
dec
fdivrl
push
mov
in
mov
and
adc
adcb
pop
mov
loop
dec
pop
shlb
icebp
cmp
mov
xor
je
mov
push
jg
dec
xor
dec
dec
push
jbe
mov
aaa
mov
adc
faddl
push
hlt
pop
sub
jge
dec
insb
and
inc
jmp
mov
mov
sub
mov
js
mov
hlt
xchg
mov
mov
add
stc
data16
mov
and
into
out
fists
dec
add
mov
sub
std
push
rcll
pop
inc
addl
mov
sub
jae
or
adc
insb
imul
enter
fbld
xchg
add
aaa
xor
jne
xor
add
pusha
fdivrs
fstl
repnz
push
sbb
fiadds
rcrb
outsl
in
scas
dec
xor
add
inc
movsb
xor
fsts
scas
sub
inc
mov
push
cmc
jo
test
mov
icebp
dec
orl
je
pop
and
mov
xor
jp
int3
jmp
push
inc
sub
push
std
pop
lahf
xor
cld
pop
xlat
inc
rclb
les
lock
outsb
ret
enter
jge
sbb
pop
pop
sbb
cmp
sub
adc
cltd
mov
test
push
adc
dec
mov
mov
faddp
mov
push
sbb
sbb
inc
in
dec
push
or
pop
sbb
xchg
dec
loopne
mov
outsl
adc
mov
sbb
pop
pop
push
or
ja,pt
xchg
adc
call
adc
in
ljmp
or
jg
xlat
push
jb
js
fimull
lret
ds
adc
cli
jae
and
lahf
je
or
dec
outsl
sub
sbb
scas
out
jb
jne
roll
cltd
jbe
lcall
and
push
loopne
rcll
dec
inc
scas
add
sbb
xlat
sub
out
jecxz
test
popa
sbb
test
mov
adcb
dec
xchg
ss
faddl
mov
int
xorl
pop
in
out
adc
lds
sub
cmp
xor
mov
std
push
lcall
sub
movsb
mov
daa
push
mov
xor
mov
iret
mov
jne
lahf
subb
js
jae
jg
enter
je
mov
adc
cmpb
lret
dec
scas
push
xchg
mov
sarl
add
test
mov
mov
icebp
mov
jne
stc
inc
lds
loopne
test
mov
imul
xlat
lcall
mov
mov
ds
outsl
and
mov
sahf
and
pop
adc
in
rcll
fdivrs
inc
and
inc
push
imul
cmpsl
test
mov
shll
cmp
jae
loope
sbb
fwait
mov
pusha
mov
mov
xchg
or
cld
sti
adc
adc
ss
cwtl
sub
mov
push
hlt
inc
sub
stos
clc
pop
aam
cwtl
dec
mov
sub
repnz
pop
inc
mov
xorb
icebp
cmp
jge
sbb
adc
inc
inc
xchg
mov
mov
inc
xor
sub
sti
fnstsw
push
std
sbb
mov
push
repz
xchg
insl
cmp
pop
in
mov
cltd
push
push
sub
aad
shlb
cli
push
popa
adc
push
insb
cmpsb
pop
xchg
aaa
icebp
inc
inc
or
cwtl
das
cmp
test
xchg
repnz
mov
xchg
xchg
das
clc
push
ds
dec
inc
inc
mov
cmp
int
or
pushf
xchg
popa
cli
fs
mov
test
inc
push
or
pop
pop
inc
aas
push
test
shlb
sub
and
add
push
pop
add
dec
in
cmp
jne
add
push
add
pop
lds
call
sahf
cld
repz
out
cltd
das
fstpl
push
inc
lods
jne
scas
xchg
mov
mov
and
outsb
cmp
testb
pushf
aaa
pop
dec
nop
inc
mov
stos
call
fists
int
ds
mov
in
lret
cmpsb
icebp
xchg
and
or
jg,pt
mov
lea
fwait
mov
add
std
push
or
scas
pop
fbstp
in
add
inc
fmuls
push
add
xlat
cmpl
sbb
adc
adc
ljmp
and
sbb
sti
lahf
xchg
jno
pop
fcmovne
scas
pop
lods
shlb
gs
loop
and
push
pop
sbb
mov
pop
pop
or
inc
mov
dec
push
dec
mov
push
sbb
sbb
fs
jge
lret
jbe
in
fmul
je
ljmp
xchg
adc
mov
loop
jne
shlb
lea
sub
mov
sbb
sbbb
sub
cmp
lahf
movsw
cmp
shl
inc
sub
xchg
and
mov
jnp
cwtl
mov
nop
insb
sub
cmp
mov
sbb
ret
adc
fwait
and
xor
push
jp
cmp
popf
pop
jl
pop
mov
cs
mov
imul
loop
repnz
inc
push
jl
or
out
mov
rcr
fidivl
loope
xor
push
jge
adc
cld
jbe
xor
in
cmp
adc
pushf
push
pop
sbb
enter
iret
mov
jle
or
pop
xchg
pop
sub
mov
mov
lods
push
pushf
call
add
movsb
dec
cmp
rol
sti
inc
addb
add
arpl
mov
cmpl
movsl
add
mov
xor
inc
lahf
out
in
call
push
js
stos
sbb
gs
mov
push
je
out
mov
repz
jb
inc
push
scas
sahf
lea
or
sbb
lcall
xchg
sbb
xor
ja
push
ss
gs
int
stos
cs
push
popa
push
mov
cmpsb
out
cmp
sti
push
loop
call
sahf
lods
int
cmp
sbb
fstp
xchg
pop
jae
or
daa
dec
into
lods
adc
sub
leave
out
xorb
arpl
mov
xchg
mov
push
pop
clc
pop
add
pop
push
lcall
sbbb
sbb
jno
jmp
adc
mov
aaa
gs
push
cmp
cmpsb
mov
pushf
call
cmpb
ret
or
or
and
and
pushf
aaa
cmp
mov
outsl
dec
test
in
popf
inc
sub
dec
into
fdivrl
xchg
imul
mov
jp
loop
fs
test
mov
xor
fnsave
into
shrb
mov
out
dec
test
sub
cmp
jae
jb
rcrl
mov
std
dec
inc
iret
sbb
rolb
or
xchg
mov
cld
mov
dec
scas
into
popf
dec
imul
in
cs
dec
jae
in
dec
outsl
push
fildll
push
js
stos
lret
pushf
mov
in
je
imul
cld
imul
pop
push
push
add
mov
sbb
popf
andb
fwait
stc
imul
repz
out
stos
dec
push
gs
dec
push
scas
js
pop
push
test
popa
lret
xchg
fwait
repnz
outsl
mov
or
cmp
push
sbb
pop
arpl
jns
lcall
clc
subl
mov
rcrl
fyl2xp1
pop
pop
and
xchg
nop
cwtl
clc
mov
push
dec
shr
sub
sbb
or
xchg
add
xchg
pop
sub
hlt
jp
add
je
in
mov
sub
aas
pop
loop
sbb
lods
push
lret
or
dec
inc
fucomp
loopne
jp
flds
test
mov
inc
jle
pop
popf
mov
mov
xlat
insb
mov
sbb
je
and
outsb
fwait
mov
pushf
les
xor
or
ds
rclb
insb
pop
leave
dec
out
push
into
es
mov
jbe
push
andnps
mov
adc
cmc
add
aam
xchg
ret
adc
test
cmc
out
add
loopne
hlt
fdivrs
add
jle
push
aaa
add
and
lcall
xchg
jbe
mov
in
inc
xor
cltd
dec
ret
sub
and
rol
out
les
cli
adc
ret
dec
out
aam
cmp
das
sub
xorl
mov
pop
push
mov
jbe
inc
mov
adc
xor
int3
mov
mov
inc
mov
adc
fiadds
xor
cmp
pop
push
dec
in
mov
gs
mov
jbe
ret
adcb
cmc
dec
notb
or
mov
arpl
mov
mov
or
jecxz
call
xchg
in
dec
ficompl
pop
mov
inc
push
bound
test
cmp
adc
rolb
icebp
gs
dec
jp
mov
inc
pop
or
inc
popf
sbb
inc
mov
testw
shll
mov
fdivs
decl
mov
roll
iret
cmc
fcomp
mov
or
sub
mov
push
inc
push
lds
cmp
cwtd
data16
jp
jp
je
loopne
push
hlt
push
outsb
ja
test
lds
mov
sahf
repnz
ret
decl
das
pop
pop
push
stos
mov
stc
dec
jae
lret
mov
lcall
in
jmp
cmp
repnz
inc
push
mov
das
jnp
daa
fwait
out
sahf
loopne
test
repz
lds
gs
mov
jb
cmp
test
jno
sti
ja
fwait
mov
and
pop
icebp
outsl
andb
icebp
mov
pusha
pop
pop
mov
std
mov
call
repz
jo
and
sbb
add
cwtl
scas
into
xchg
popa
jnp
mov
iret
gs
push
sbb
jmp
cmpsl
ds
jbe
mov
dec
mov
inc
mov
cmp
pushf
loop
rcr
ret
pop
mov
das
fstpt
sar
jmp
mov
cmp
shlb
mov
xchg
ror
push
jnp
mov
pop
ljmp
jecxz
out
pop
call
xor
sbb
loop
icebp
jecxz
mov
xchg
mov
sub
mov
lock
arpl
js
and
inc
xor
aam
adc
mov
cmp
leave
les
xor
xchg
fdivl
pusha
sbb
xlat
inc
imul
xor
loop
loopne
insl
nop
dec
or
mov
jns
sbbl
xchg
xor
jns
pop
ret
fiadds
jb
jg
cmp
jmp
in
outsb
testb
mov
sub
cmp
int3
xchg
insb
test
inc
lock
bound
icebp
inc
fwait
std
cmpsl
daa
mov
addps
hlt
add
movsb
mov
fiaddl
aad
rorl
xchg
sbb
jno
int
sub
test
inc
sbb
bound
lock
push
and
push
loope
ss
cli
pop
cmpsb
mov
xchg
out
jl
fdivrl
adc
fcomi
sub
sub
inc
loope
sub
lds
pop
loop
xchg
call
xchg
test
andb
stc
sub
mov
sahf
sbb
mov
and
imul
push
test
push
push
jbe
push
jl
jno
pop
loop
imul
push
insl
pusha
cli
outsb
dec
call
and
les
jo
mov
fsubs
cmp
mov
mov
xor
les
lea
dec
xchg
out
imul
in
mov
xor
shll
inc
pop
jae
and
sub
inc
or
stc
push
xor
push
cmp
mov
inc
in
adc
pop
inc
adc
test
xchg
idivb
cmp
lcall
sahf
pop
aam
sub
mov
insl
dec
movsl
enter
shl
jno
pop
mov
pop
sub
call
stos
push
mov
clc
movsl
addr16
pop
lahf
inc
and
pop
es
jle
sbbl
fildl
ds
sbb
sub
push
test
je
mov
adc
insb
inc
lds
push
inc
mov
xchg
and
ljmp
mov
outsl
ret
adc
mov
popa
dec
and
cmc
inc
lahf
push
movsb
pop
into
and
inc
cwtl
xchg
pop
fs
lds
xor
lret
or
cmc
outsb
andb
dec
test
out
sub
mov
cmp
xlat
in
add
pop
mov
sbb
inc
je
inc
adc
pop
mov
dec
add
shr
jle
adc
jecxz
xor
loope
rorl
sub
mov
xor
ror
call
rcll
adcl
pop
xchg
pop
mov
pop
sbbl
push
ficoms
xchg
pop
cltd
pop
into
out
andl
es
lret
mov
mov
or
pop
test
add
xor
and
or
js
add
or
lods
shl
fdivl
and
fwait
jo
mov
add
mov
out
mov
mov
icebp
ss
stc
pushf
inc
sub
enter
and
push
frstor
stc
xor
addr16
stos
sub
scas
outsb
xor
dec
out
dec
nop
out
adc
stos
xchg
and
mov
inc
jecxz
pushf
mov
movsb
dec
mov
fisubrl
ret
add
movsb
adc
or
out
pop
mov
pop
xchg
add
adc
adc
bound
pop
jg
sahf
sbb
aam
adc
xchg
xor
push
jne
xchg
roll
jle
cmp
addb
mov
inc
adc
out
sbb
cmc
xchg
test
xor
jns
lahf
int
bound
inc
test
leave
lahf
push
stc
gs
pop
sarb
jp
lock
insb
cmp
or
mov
mov
jae
jae
in
push
mov
pop
mov
mov
mulb
dec
cs
out
ret
arpl
and
bound
lock
mov
adc
jb
cwtl
mov
ret
cmp
int
and
jmp
out
loopne
or
cli
insb
cmp
adc
dec
mov
lahf
or
hlt
stc
mulb
rcll
lock
call
cmp
ss
dec
xchg
pusha
pop
fdiv
add
push
orb
adc
in
mov
xchg
or
ss
mov
mov
jns
fs
jbe
xchg
mov
mov
adc
mov
push
inc
xchg
push
decl
push
js
iret
or
cmp
std
pmulhuw
adc
jp
jnp
add
lret
mov
jb
popf
pop
loop
adc
xchg
adc
repz
sub
fwait
js
cmpb
mov
movsl
jmp
xchg
xor
jo
cmp
dec
or
es
test
sub
into
pop
push
adc
sahf
pop
sub
mov
push
mov
cmp
push
add
inc
hlt
aaa
inc
cmc
aam
mov
sub
push
loop
add
ds
mov
mov
outsl
pop
je
sub
cmpsl
push
fdivrp
mov
pop
dec
dec
push
aas
xor
cmpsl
mov
popa
mov
jl
pop
fstpt
xor
int3
fnstcw
popa
repnz
push
outsl
lcall
clc
mov
mov
addr16
mov
mov
shrl
loope
xchg
push
fistpl
movsb
lahf
rcrl
pop
xchg
mov
shll
in
mov
mov
je
aas
stos
cmc
pop
stos
xchg
lret
aam
mov
lods
and
into
mov
add
lock
adc
xor
je
inc
dec
sbb
inc
ds
out
scas
lret
int
ret
or
lcall
mov
sbb
fsubrl
lods
and
cltd
sbb
xlat
dec
ja
adc
enter
or
pop
cltd
sub
add
or
mov
xlat
outsl
push
fimull
out
mov
xorb
or
mov
bound
jecxz
ljmp
inc
add
int
push
stos
fwait
pop
pusha
add
pop
subb
scas
pop
shrb
stos
push
sub
push
mov
into
and
pop
mov
fwait
sbb
mov
push
and
icebp
jmp
idiv
lahf
rorb
insl
out
fs
hlt
xchg
adc
cltd
fstps
jl
jno
push
imull
insb
mov
mov
pop
mov
fnsetpm(287
cmp
xchg
std
lret
fs
sbb
xor
push
ja
ja
ret
std
sub
mov
inc
call
inc
push
push
dec
add
sub
jb
mov
sub
lcall
cmp
mov
sarl
cmpsl
jae
sbb
ja
and
push
mov
ja
jo
imul
add
pop
jp
jns
arpl
call
xor
xor
push
jns
inc
pop
adc
mov
adc
mov
rolb
ja
push
and
cmp
aaa
sbb
fcoms
fstl
lcall
jb
in
in
mov
rolb
push
sti
int
fs
divb
add
jecxz
or
fdivrl
imul
mov
data16
xorb
xor
push
push
daa
jmp
push
aaa
mov
lret
adc
add
mov
pop
lods
insb
inc
push
lret
mov
cmp
mov
es
out
push
js
jb
add
and
or
xor
mov
std
or
xor
cwtl
jne
loopne
push
adc
ss
dec
cmp
in
mov
in
adcl
push
jecxz
es
loopne
negb
mov
xchg
loopne
mov
lods
push
sbb
shlb
fucomip
sub
pop
mov
shl
movsb
mov
push
inc
jnp
ja
lret
fs
lahf
mov
and
and
xchg
aad
pop
mov
jae
add
sub
shlb
or
mov
jmp
jb
sbb
push
pop
mov
cld
sti
xor
jbe
std
sbb
inc
mov
push
call
push
hlt
mov
push
movsb
xor
pop
mov
enter
xrelease
xor
out
xor
add
jge
jl
mov
or
testb
xor
push
pop
push
xchg
cmp
mov
das
or
data16
int
fdivl
mov
mov
outsl
andb
mov
outsl
lcall
pushf
bound
outsb
mov
bound
jmp
lea
pop
jnp
jmp
enter
xchg
mov
or
add
cld
cmc
dec
sbb
sti
sbb
pop
dec
je
fbstp
add
ret
aas
jge
sub
adc
into
mov
call
xchg
pusha
add
cs
mov
and
mov
divb
fldcw
mov
cltd
insb
test
dec
sub
xchg
bound
xchg
xchg
inc
mov
inc
aas
mov
bound
cmp
out
std
adc
and
int
jne
ret
out
bound
in
pop
adc
dec
sbb
gs
ss
loopne
jb
lods
dec
dec
add
mov
outsb
xor
mov
xchg
sahf
popa
cmpsl
and
xchg
adc
xchg
icebp
nop
dec
xor
cmp
adc
ljmp
arpl
in
mov
cmp
push
js
jge
cmp
mov
cwtl
sub
jo
push
lock
leave
mov
fsubrp
sub
adc
addb
jl
pop
adc
mov
lds
xlat
stc
cmc
adc
mov
pop
rcll
loopne
or
add
push
mov
mov
js
mov
nop
inc
mov
xorb
addr16
add
jle
jg
inc
push
aad
ss
les
jle
xor
push
mov
pop
sbb
inc
mov
lcall
stos
mov
je
jnp
aaa
pushf
out
mov
cli
das
fimuls
dec
mov
sbb
add
adc
mov
fstps
fbld
sbb
xchg
stos
ret
sbb
fwait
mov
rol
jg
mov
ds
sbb
cmpl
push
in
mov
imul
push
push
dec
inc
int3
mov
pop
ja
cmp
div
call
push
clc
dec
cmp
mov
fidivl
addr16
jmp
cmp
dec
jno
mov
sti
or
jbe
int
test
mov
cs
jmp
into
cmp
jle
mov
cld
cltd
xor
les
inc
pop
adc
mov
xor
stc
push
pop
mov
push
cmpsl
insl
jbe
loopne
movsl
clc
loop
cltd
ret
mov
imul
ss
cmp
adc
cltd
fldcw
push
dec
add
mov
shlb
xchg
push
cmp
lea
pop
sbb
jmp
cs
dec
xchg
pop
mov
inc
mov
arpl
ficoml
int
subl
adc
sbb
jns
jno
push
pop
lods
cltd
xchg
addr16
jle
aad
dec
cld
push
xlat
add
popf
call
xor
adc
jbe
xchg
ficoml
sbb
outsb
push
lds
mov
push
ljmp
add
xchg
sahf
cwtl
mov
xor
push
mov
adc
mov
jle
lods
xor
and
and
daa
fwait
fwait
jecxz
out
out
cmp
fmuls
mov
or
push
ljmp
cli
out
pop
add
sub
popa
insb
les
mov
jecxz
jnp
lret
pushf
push
inc
and
cmp
repz
enter
push
insb
mov
xchg
scas
hlt
mov
rcl
mov
sbb
mov
xchg
popa
repz
sub
cltd
pop
dec
lds
lret
mov
fisttps
jmp
outsb
pop
or
arpl
ja
pushf
sub
icebp
lods
gs
push
clc
stc
dec
and
or
insb
adc
add
fdiv
loop
jns
mov
roll
fcoms
mov
xchg
cmp
sub
sub
loop
add
mov
cmp
lret
push
xor
jbe,pn
imul
cmpsb
push
addr16
hlt
in
imul
and
pop
dec
xlat
dec
push
sub
cmp
fs
insl
test
jmp
xchg
loopne
lods
insb
dec
insl
mov
shrl
mov
xchg
lods
pusha
jecxz
mov
sysret
lds
cld
push
and
fmul
mov
xor
decb
aaa
addr16
xlat
xor
pop
test
sbb
pop
push
test
insb
dec
movb
push
inc
inc
or
dec
imul
pusha
fs
xor
sub
fimuls
pop
and
adc
mov
and
mov
push
mov
mov
aas
lret
ret
repz
les
orb
mov
push
cltd
nop
sahf
cmp
pop
mov
repnz
mov
mov
and
fs
mov
int
add
shrb
loope
adc
lcall
sub
jbe
vaddsubpd
and
lahf
clc
aaa
fmull
subl
das
sub
adc
pop
add
xor
movsl
repnz
inc
iretw
push
cmpsl
pop
and
aas
loope
and
shr
xor
push
add
lahf
out
decl
mov
push
in
loop
aam
jl
mov
and
loopne
outsb
out
ljmp
popf
mov
call
in
in
mov
gs
push
movsb
outsb
sahf
or
test
xor
hlt
pusha
push
fs
insb
fcoml
xor
popf
icebp
sbb
push
nop
adc
cmp
dec
jmp
push
jg
inc
jle
push
aas
and
imul
dec
mov
adc
je
incb
cli
outsb
or
clc
adc
dec
cmp
sub
insb
mov
push
ljmp
ja
daa
lea
adc
sub
ss
lret
je
js
adc
rclb
cmc
stc
mov
add
je
mov
rorb
popa
sub
adc
sarl
mov
jl
bound
stos
mov
add
xchg
mov
stc
and
imul
add
push
movsl
push
negl
jo
sbb
sar
adc
pusha
add
push
mov
rolb
fcomip
cmovg
inc
leave
jb
cmpsl
push
push
ret
fnstcw
mov
sub
out
int3
lea
or
cmp
push
out
cltd
insb
sbb
add
scas
and
fucomp
cmp
cmc
mov
fidivrs
shlb
mov
mov
and
pop
stc
fwait
inc
and
insb
mov
xorl
or
or
mov
addr16
rcrl
xorb
clc
out
xchg
mov
sub
xorw
std
stos
mov
mov
push
bound
out
sbb
jp
int
stc
or
jecxz
xchg
push
cmp
stc
pushf
sbb
int
and
or
jmp
or
stc
sub
mov
scas
fisttps
cmp
lret
and
cli
stos
mulb
inc
scas
scas
dec
and
pop
mov
lods
pop
and
sub
push
rolb
inc
imul
mov
jns
mov
pop
dec
outsl
insb
dec
cltd
aas
mov
mov
xchg
clc
scas
sub
xor
pop
cmpsb
xchg
cwtl
dec
fs
cli
sub
div
ljmp
popf
pop
fidivrl
pop
cmp
fs
stos
inc
fwait
pop
add
int
je
add
mov
hlt
addb
push
pop
pop
arpl
mov
dec
push
pop
ret
subb
enter
push
mov
ret
jno
pop
lock
jno
xor
test
and
xor
pushf
adc
cmp
popa
push
cld
outsl
sbb
in
imul
jecxz
and
movsl
xchg
jno
shlb
fwait
and
mov
xlat
jb
aam
ss
dec
imul
add
xchg
pop
idivl
fs
aad
adc
mul
cmpsl
mov
push
movsl
push
rdpmc
or
std
ffreep
insb
cmp
inc
shl
int3
xor
sbb
dec
bound
js
dec
dec
pusha
ss
adcl
add
addl
out
and
and
push
xchg
out
dec
jmp
adc
aam
ficompl
mov
fdivl
lret
lahf
pop
in
mov
loopne
cmp
bound
and
cmc
push
sub
dec
adc
leave
pop
pusha
scas
wrmsr
in
popa
ss
xor
cmp
aam
int3
insb
push
mov
fsubl
inc
dec
push
cmp
jmp
cmpsl
mov
mov
je
mov
test
aad
mov
pusha
push
xchg
dec
std
test
fst
pop
mov
decl
adc
sub
adc
in
outsb
sub
popa
mov
imull
jmp
fcom
and
mov
sub
dec
push
cmp
xlat
hlt
sbb
push
push
test
push
popf
xor
pop
jae
push
stos
lock
icebp
cld
mov
inc
js
adc
fmull
push
loopne
ljmp
pop
jbe
xor
mov
xor
js
adc
pushf
pop
shl
push
mov
cmp
mov
imul
push
jge
inc
test
ja
add
pop
arpl
dec
mov
mov
pop
fwait
arpl
dec
leave
and
jne
xor
mov
pop
xchg
mov
dec
dec
into
cmpsl
push
lret
jmp
gs
clc
jne
pop
lds
adc
fst
fisubs
and
sbb
pop
pop
mov
mov
nop
pusha
mov
mov
xchg
or
je
mov
lcall
pop
es
ret
scas
inc
arpl
daa
stos
out
lret
cmc
scas
ret
inc
xchg
xlat
add
cwtl
fwait
repnz
jb
leave
inc
adc
and
pop
fsubrp
arpl
fnsave
push
lcall
push
cmp
mov
roll
mov
jge
push
pusha
pop
push
or
dec
dec
push
dec
shlb
add
mov
rcl
sub
shrb
in
or
mov
push
jmp
sbb
jg
in
pop
popf
and
push
xchg
insl
cmp
push
xor
out
xchg
cmc
insl
mov
mov
adc
push
repnz
shll
in
sbb
add
movsl
cmp
test
xchg
mov
addr16
xchg
out
jb
dec
daa
mov
push
pushf
mov
imul
push
mov
pop
cmpsl
push
mov
pop
test
roll
sub
int
hlt
stc
es
dec
ret
push
dec
cmp
add
int3
cmp
jl
and
gs
fwait
test
cs
fistps
inc
jnp
dec
sahf
mov
leave
adc
add
hlt
es
cmp
pop
mov
das
es
sub
jae
mov
push
sub
or
mov
dec
mov
pop
adc
inc
xlat
insb
jecxz
inc
shlb
enter
shlb
push
into
imul
push
push
cmc
fisttps
fstpt
in
add
mov
push
int
fidivrl
es
pop
or
and
pushf
jns,pn
jg
cmp
mov
push
sbb
ss
push
cmp
add
push
shlb
mov
or
movsl
mov
pop
leave
or
nop
jb
aam
mov
and
mov
and
dec
fimuls
repnz
out
sti
hlt
mov
ja
dec
stos
push
add
sysenter
call
sub
push
or
dec
mov
sub
bound
movsl
test
mov
mov
sub
pop
mov
cld
dec
adc
sti
cmpb
mov
inc
cwtl
inc
dec
push
repz
add
not
dec
shlb
test
jne
add
cld
inc
sahf
cmp
xor
insl
pusha
mov
adc
les
or
ss
lcall
test
mov
push
dec
pusha
adc
xchg
out
dec
icebp
fwait
in
jno
stc
cmp
pop
std
lea
call
sbb
leave
out
pop
mov
push
popa
in
addb
sub
out
lahf
imul
mov
rolb
pop
xchg
pop
mov
int3
pop
scas
movsb
aam
ja
sub
test
andb
arpl
push
xor
dec
jecxz,pn
pusha
sar
loopne
mov
mov
push
xlat
insl
dec
sbb
repz
pop
add
pop
fbstp
rorl
jge
nop
and
inc
jmp
fcomi
rolb
adc
pop
clc
push
sbb
leave
jg
mov
add
stos
xor
out
push
inc
pop
cmc
push
lcall
and
adc
test
clc
decb
imul
sarl
addl
adc
mov
mov
inc
in
sahf
adc
loope
std
cmp
or
in
sbb
jns
mov
cmpsl
adc
dec
inc
adc
mov
or
pop
pop
mov
fiadds
jno
in
xlat
mov
gs
lds
cmp
testb
fstpt
dec
push
mov
mov
popf
rorl
sti
in
dec
push
add
xchg
sar
pop
mov
pushf
mov
sahf
push
arpl
pop
cld
mov
int3
cmpsb
pcmpeqw
mov
adc
mov
in
pop
dec
cmp
in
adc
out
ja
push
xor
arpl
mov
xchg
rorb
sub
or
add
or
dec
dec
and
addb
push
sub
dec
adc
jle
leave
dec
rorb
pop
push
dec
mov
fistps
jo
cmp
in
scas
xchg
aaa
add
xor
cmpsl
mov
push
or
repz
cmc
push
adc
xlat
rclb
gs
les
fidivrs
fcmovnb
add
inc
jmp
inc
out
jmp
sbb
fsubr
lock
add
inc
cli
jae
sub
add
mov
dec
mov
pop
sbb
mov
int3
movsb
clc
xchg
cmp
repnz
add
jle
cmpsl
insb
popa
out
mov
pop
hlt
jo
loop
lcall
out
push
psadbw
xor
adc
lcall
mov
push
and
jae
in
sub
xchg
mov
push
xchg
pop
adc
lods
out
scas
mov
pop
xchg
flds
call
cmp
aad
pop
fstpt
pop
testl
inc
dec
mov
jle
fnstenv
or
out
sub
fimuls
int3
add
adc
notb
je
cmp
ljmp
fiaddl
loopne
cmpb
loope
inc
cmp
sahf
cmp
lcall
pop
push
cwtl
call
clc
mov
inc
push
mov
mov
mov
mov
mov
jb
or
in
aas
fbstp
pushf
xor
and
mov
mov
out
pop
mov
push
jno
push
pushf
movsb
loope
push
inc
mov
cmpsb
xchg
push
and
stc
outsb
hlt
in
inc
popf
shl
dec
dec
jl
and
push
lock
fsubl
and
jle
insl
into
push
repz
fildll
fsubrs
mov
push
xor
sbb
mov
jg
pop
ret
pop
pushf
cmpsb
ljmp
shrl
dec
jb
add
ljmp
mov
and
cltd
sar
sub
pop
xor
inc
popf
push
pop
stos
dec
jo
aad
and
jno
in
insb
js
ljmp
dec
pop
xor
ret
push
sub
or
pop
ucomiss
xchg
arpl
es
iret
mov
jnp
inc
sub
xchg
inc
je
add
ljmp
xlat
adc
add
adc
or
in
xchg
insl
dec
icebp
mov
outsb
imul
ds
jmp
sub
adc
cmp
fidivrs
jge
int
xchg
sbb
ds
inc
mov
cli
sbb
call
mov
mov
ret
lcall
test
repnz
pop
mov
sbb
sbb
push
shrb
mov
jle
jecxz
xorl
fisubl
test
stc
scas
inc
push
std
mov
push
cltd
push
add
or
mov
mov
fnstsw
xchg
jg
mov
cwtl
flds
int3
lods
scas
and
pop
push
jnp
loop
loope
mov
out
into
in
pop
in
data16
pop
movsl
stc
xor
or
bound
xchg
popa
dec
pop
pop
stc
ret
in
movsb
xchg
adc
sub
push
test
dec
ljmp
popa
bound
jge
push
cs
and
mov
pusha
inc
loopne
sub
mov
out
ret
popf
xchg
das
pop
leave
call
out
int3
jmp
mov
mov
pop
xchg
into
dec
inc
ljmp
mov
fwait
xchg
test
mov
xchg
out
pusha
cwtl
mov
sti
lcall
or
and
jne
mov
iret
jnp
inc
sbb
or
repz
subl
andl
cltd
xor
mov
or
fists
pop
pop
jecxz
push
xchg
cmp
ret
sbb
sub
sbb
inc
cmpsb
lcall
sub
xor
cmpsb
cmp
adc
stc
outsb
cwtl
inc
sub
lcall
xlat
push
fisubrs
push
pop
divb
add
shll
push
dec
mov
clc
xor
mov
mov
jmp
scas
push
and
mov
and
xor
pop
jb
jnp
nop
add
mov
imul
mov
lahf
inc
mov
cmp
jae
mov
push
lock
adc
xor
push
sbb
xchg
jne
adc
dec
sbb
and
adc
lahf
mov
pop
inc
inc
cmp
aas
es
jg
cltd
push
or
xchg
mov
dec
rorl
mov
stos
out
cmp
push
adc
and
sub
xor
sub
aas
push
dec
fiadds
insl
aad
movsl
call
fwait
jmp
mov
repnz
hlt
fcoml
mov
sbb
testl
dec
fiaddl
clc
enter
cmpsb
xchg
lds
fld
pop
push
mov
jmp
lods
pop
xchg
or
mov
imul
out
mov
sub
pop
push
repz
gs
aaa
ss
xchg
adc
loope
sbb
cli
mov
lds
jp
mov
dec
rcrl
aas
and
push
lcall
hlt
or
cmpsb
pop
mov
lds
push
jp
dec
sbb
adc
outsl
adc
scas
in
fcoms
xor
mov
scas
sbb
jae
pop
fnsave
les
fscale
addr16
sub
test
lock
cmp
lods
loop
jle
cmp
dec
ljmp
in
icebp
mov
lods
aam
in
icebp
pop
gs
xor
sahf
cmp
and
add
lret
pop
addr16
pop
int
stos
fsubrp
icebp
fwait
pusha
pop
addr16
ret
inc
xchg
sub
imull
pop
lret
lock
lock
or
xchg
push
sbb
sbb
dec
gs
sbbb
scas
test
icebp
add
in
xchg
pop
inc
movsb
orb
shlb
add
sbb
xor
sbb
out
shlb
sti
pop
sub
aad
clc
sub
fisubl
lret
lcall
sub
xchg
dec
sbb
shlb
out
add
push
lcall
addr16
jl
xor
jg
mov
data16
xchg
cmpb
mov
adc
ret
ret
fsts
sbb
cs
test
sbb
jnp
shl
daa
xor
aaa
inc
inc
cld
pop
mov
insb
xor
push
rolb
xlat
dec
xchg
scas
mov
mov
sbb
in
test
pop
sub
sub
stos
das
inc
jne
ds
mov
lahf
mov
outsl
xchg
or
xchg
std
jp
adc
imul
push
fs
fldl
sbb
sbb
add
fsubl
push
push
test
or
jae
add
int3
lea
sbb
mov
push
lret
push
cs
cltd
mov
lret
cmp
sbb
add
shll
and
out
mov
pop
xchg
and
cltd
outsl
cmp
dec
mov
mov
out
lods
out
cld
loop
jo
lds
mov
adc
mov
push
mov
popf
jns
leave
sub
mov
sbb
adc
lock
orb
dec
fistpll
loop
pop
xor
sahf
jns
out
fisttpl
cltd
orl
push
insb
mov
loop
push
push
add
in
cmpsl
pop
test
fiadds
push
jg
das
pop
mov
pop
outsl
fwait
inc
mov
test
out
mov
dec
fstl
lea
in
loop
out
in
sahf
enter
lods
gs
lods
push
push
push
movsb
lret
jecxz
push
jmp
iret
push
lock
mov
push
mov
cmpsb
cmovne
and
push
test
jb
in
push
lret
push
mov
xor
shlb
fs
sti
cmp
add
or
das
pop
pop
sahf
sbb
mov
xor
pop
stos
xchg
push
cmc
in
in
fs
jmp
mov
mov
movsb
movsl
sti
rol
xorb
icebp
pop
sbb
cld
xchg
bound
push
jns
enter
dec
push
mov
cmp
test
loopne
ret
mov
push
test
and
call
push
in
test
icebp
aas
outsl
xor
push
je
jb
mov
jne
sbb
mov
jae
addr16
add
lods
mov
or
ss
ljmp
lret
push
test
dec
adc
jo
mov
jmp
cmp
imul
push
pop
jg
imul
jp
xchg
out
ret
mov
retw
adc
inc
and
movsb
loope
mov
mov
popf
fcomps
stc
je
xchg
icebp
ds
stos
lret
repnz
xchg
stos
std
stc
ret
rorl
push
xor
fnsave
shl
push
test
mov
ljmp
and
xchg
dec
repz
ss
xchg
push
cmpsl
jbe
mov
lret
in
fisubs
add
nop
outsb
inc
xchg
cwtl
out
test
mov
mov
aam
lahf
iret
enter
fxch
pop
ret
jnp
xor
sbb
cmp
stos
loopne
xchg
js
shr
insb
push
int
and
or
repnz
sub
pop
inc
mov
scas
jp
lock
pop
in
insl
dec
push
or
ret
push
push
mov
mov
sub
inc
in
stc
adc
cmpsb
outsl
jecxz
test
movsb
or
xor
add
xlat
outsb
push
push
dec
aad
mov
push
mov
sub
dec
and
test
add
xchg
mov
xor
adc
lds
adc
inc
sti
xor
lahf
test
enter
mov
imul
xor
leave
jp
xor
icebp
mov
test
lret
xchg
xor
adc
movb
ljmp
sti
lods
sub
adc
push
pop
xor
fwait
push
cmp
jge
push
xchg
jp
addl
lret
je
xchg
mov
mov
xchg
push
xchg
adc
test
mov
sbb
xor
stos
jle
repz
mov
add
cs
imul
xchg
and
in
push
pop
xor
outsl
pop
mov
jo
inc
jmp
mov
fsubrs
pop
jnp
sbb
flds
sub
lret
add
pop
icebp
in
push
sarb
int
loopne
pop
enter
or
jmp
mov
push
cmc
mov
mov
aas
pop
je
sub
xchg
or
xor
nop
loope
mov
cmpsl
add
dec
rcll
je
sub
lock
pop
xchg
jb
mov
lcall
ds
jmp
sub
or
fnstcw
pop
insl
stos
pop
mov
inc
rcr
cwtl
or
jbe
pop
adc
mov
sub
jl
or
xor
mov
mov
sbb
push
adc
outsb
loope
movsl
lea
mov
mov
xchg
mov
or
pusha
jge
sar
insb
pop
dec
cmp
test
cmpsb
inc
clc
or
mov
mov
xchg
push
shr
rorl
push
sub
push
ret
jbe
subl
push
add
cmp
pop
mov
fs
lret
xchg
inc
sub
mov
and
jecxz
repz
imul
arpl
fdivs
xor
mov
out
jecxz
mov
inc
aam
lcall
daa
sub
loope
ss
sar
inc
add
sbb
ds
push
jp
sbb
enter
test
dec
sbb
frstor
popf
lods
frstor
imul
jmp
loopne
popa
fs
inc
sbbb
mov
popf
adc
lahf
gs
insl
repz
jo
pop
es
insl
shr
into
ret
dec
dec
test
pop
pop
mov
and
xor
push
ljmp
lcall
sub
leave
push
jge
push
inc
sbb
and
sbb
cld
int
xchg
pop
mov
jbe
mov
mov
test
mov
sbb
mov
sbb
repnz
sbb
pop
jecxz
dec
jle
sub
popa
nop
lock
aad
in
mov
shl
cmp
dec
loopne
lea
xor
dec
cmp
push
push
imul
ret
repz
stos
out
mov
std
sbb
jmp
sub
out
out
cmpsl
in
cmc
test
pop
adc
or
jno
jb
rcr
jne
add
pop
sbb
push
and
repnz
std
ret
pop
out
xchg
leave
scas
ret
hlt
into
sbb
dec
push
push
xchg
inc
mov
push
in
stos
pushl
xor
pop
cmc
mov
test
std
popa
xor
push
jg
and
out
push
jno
mov
jo
pop
push
xor
cmp
sbb
outsl
cltd
jns
mov
cmp
fsubrs
lahf
inc
dec
add
mov
jns
pop
add
dec
or
lret
cwtl
rorb
push
mov
shrb
scas
stos
fdivrp
addb
lods
mov
cmp
repnz
xchg
rcrl
jl
clc
adc
in
jge
test
xor
xchg
faddl
sbb
xchg
pop
daa
scas
inc
outsl
movsl
and
js
fdivrs
cltd
mov
test
xchg
push
andl
adc
imulb
mov
mov
xor
jbe
insb
test
ja
in
dec
repnz
sub
jp
xor
lahf
adc
fdivrl
sbb
jo
test
push
sbb
insb
mov
ss
adc
push
andb
filds
and
pop
xchg
cli
out
bound
outsb
test
sub
cli
jmp
xlat
mov
and
pop
xor
repz
cmp
mov
mov
inc
ret
hlt
sbb
push
cltd
inc
jne
push
xchg
mov
push
mov
call
mov
xchg
div
add
pop
repz
mov
lods
adc
repz
icebp
fs
push
jge
jecxz
repnz
jns
pop
pop
outsb
mov
sbb
lret
add
jl
mov
push
sti
in
add
lock
sub
imul
les
rcrb
push
divl
dec
loope
pop
jg
lods
push
dec
es
xchg
test
fs
push
popa
les
xlat
mov
daa
xor
and
loop
dec
imul
dec
sub
rcll
out
xchg
sub
adc
jmp
and
fs
adcb
add
cwtl
movsb
inc
mov
adc
or
ja
in
shll
test
ljmp
or
adc
movsl
mov
jle
mov
push
inc
cltd
push
fiaddl
and
jmp
xchg
sub
add
mov
mov
inc
mov
mov
cmp
xor
inc
mov
jb
push
and
movsl
jbe
insl
mov
xor
adc
pop
shrl
addr16
jo
stc
dec
jp
pop
ret
add
shll
mov
imul
dec
or
inc
cmpl
pop
xchg
shrb
outsl
inc
ret
and
mov
cmp
jnp
add
shlb
sub
nop
pop
int
pusha
inc
push
mov
mov
pop
mov
das
inc
cli
sub
inc
cld
faddp
dec
dec
lahf
xor
daa
sbb
or
sbb
and
pop
mov
and
loope
jge
test
loopne
fsubr
mov
inc
mov
mov
xor
out
outsl
add
sbb
fucomi
addr16
and
scas
xor
dec
jg
and
fdivrl
ret
adc
jmp
imul
and
popa
xor
lcall
mov
sub
lds
rcr
mov
ret
call
jmp
ficompl
dec
sahf
cmp
jnp
mov
nop
mov
or
push
add
pop
and
mov
jnp
xchg
shrl
inc
mov
jb
xchg
dec
jbe
lods
add
xor
push
or
and
or
jnp
out
in
add
mov
test
and
push
fstps
int3
or
mov
jne
jecxz
jecxz
inc
jp
arpl
cmc
sar
shrb
fiadds
jp
mov
push
mov
test
adc
mov
leave
mov
lahf
subl
fnstenv
mov
aaa
mov
mov
jge
mov
sbb
fisttpl
orl
xor
xchg
push
and
jecxz
add
test
xchg
dec
ficoml
lds
cmpsb
loopne
int3
jo
xchg
mov
xchg
pop
test
xor
cs
out
bound
xchg
iret
jge
sbb
test
or
movsl
cmp
lods
addb
push
pushl
jmp
xchg
push
pop
mov
xor
inc
fdiv
leave
imul
xor
movsb
pushf
xchg
add
jno
je
std
push
push
in
lock
test
add
rcll
ljmp
xchg
inc
and
aaa
push
loope
cmpsb
push
push
icebp
jl
pop
das
mov
dec
cmc
pop
pop
out
mov
or
mov
aaa
and
pusha
adc
xchg
stos
and
add
pop
or
sub
test
xchg
mov
aam
push
rcrb
mov
cmp
jbe
mov
lock
in
pop
out
inc
mov
sub
jp
cmp
jecxz
test
rcrb
mov
inc
call
sbb
push
mov
js
rcrl
aas
aas
add
fcmovu
test
xor
loop
lcall
add
arpl
mov
jecxz
sbb
fcomps
subl
insb
cmp
js
lahf
dec
push
enter
into
jle
fcomps
push
scas
in
pop
mov
scas
jnp
iret
push
outsb
mov
fistl
mov
adc
in
stc
rolb
out
leave
lods
loope
out
insl
cld
mov
sub
loope
dec
dec
jecxz
and
mov
mov
enter
mov
xor
lock
out
sbb
xchg
in
out
jp
mov
sbb
jmp
movsb
inc
sbbb
sub
pop
nop
jne
and
xor
and
cmp
jl
mov
or
xchg
cli
push
lea
loope
test
shr
rorb
shlb
es
call
stos
fs
fistps
hlt
adc
mov
aaa
sbb
fcmovu
testb
xchg
scas
iret
bound
addr16
sub
xor
fadds
loopne
or
cli
popf
cmc
shll
scas
fcompl
aas
fmul
cmp
and
and
out
loop
jbe
mov
out
lds
scas
sub
sbb
ret
xchg
arpl
xchg
or
fsubr
addr16
mov
lret
es
cmp
sub
jmp
pop
pop
nop
or
gs
xor
les
and
rcr
adc
out
stc
mov
mov
cmpsb
cmp
mov
lret
mov
cld
inc
pop
outsl
fisttpl
repnz
lret
xor
gs
imul
pop
cli
ficomps
ret
sbb
sbb
popl
inc
cmp
in
faddp
xchg
cmp
mov
mov
fs
andl
xor
int
cmp
cld
movsb
dec
cltd
or
cmpsl
lds
xor
jae
jne
add
lods
cltd
hlt
popf
adc
sbb
and
mov
sub
jnp
pop
out
das
cld
and
sub
pop
inc
xor
inc
scas
lahf
jns
scas
inc
sbb
bound
fs
or
cwtl
dec
fwait
iret
mov
enter
ss
cs
xor
cld
sbb
xchg
sti
push
cmp
pause
sarl
mov
test
sub
mov
and
rorl
sbb
int
xabort
mov
push
in
cmp
fwait
imul
movsl
push
out
xchg
push
inc
dec
pop
pop
js
push
mov
pusha
and
pop
test
and
xchg
xor
stos
decb
or
inc
movb
dec
sahf
dec
jge
and
mov
popf
and
jecxz
iret
in
mulb
int3
mov
sahf
jge
imul
scas
in
lea
movsl
push
insb
sbb
jg
fsub
fdivs
in
inc
mov
ds
mov
jne
xor
data16
ficoms
cmpsb
lcall
mov
addr16
lcall
jae
sbb
outsb
jb
repnz
test
outsb
movsl
imul
mov
divl
mov
xchg
into
call
hlt
outsb
xchg
pop
xchg
out
lret
pop
jp
ret
push
cwtl
jo
repz
mov
shlb
dec
mov
imul
xchg
jmp
xor
in
shr
jnp
pop
outsl
dec
shrb
repz
outsb
cld
push
push
jo
sbb
mov
stos
cmpsb
in
xor
test
ret
lret
insl
push
fisubs
mov
cmp
jmp
into
pop
pop
pop
sarb
push
loop
aad
insb
hlt
outsb
or
push
adc
xchg
ljmp
fistps
cs
dec
scas
cmc
pop
pop
sti
icebp
loope
xchg
outsb
js
jns
stos
mov
js
or
inc
clc
in
mov
jg
rcl
xor
divl
rorb
xor
pop
jecxz
lahf
pop
int
pushf
pop
mov
xchg
popf
mov
dec
xor
push
int
adc
mov
fstps
bound
in
imul
push
cmp
fst
mov
inc
adc
xchg
xor
pushf
inc
mov
pop
adc
jbe
xor
push
push
xlat
dec
sub
mov
in
add
les
addr16
add
xor
and
loop
mov
ja
lret
xchg
add
je
inc
dec
mov
fwait
adc
xor
inc
in
mov
popa
cltd
imul
pusha
sbb
xchg
jl
mov
in
aad
cmp
mov
pop
movsb
push
sbb
and
pushf
push
fcoms
xor
test
mov
lea
hlt
in
and
fmulp
dec
mov
and
mull
punpckhbw
jne
pop
or
popf
cmp
xorl
nop
lock
sahf
mov
out
mov
adc
jle
push
call
ret
in
pop
fisubs
push
mov
test
subl
jle
sti
fwait
and
aas
mul
hlt
or
adc
mov
mov
movsl
add
icebp
pop
rolb
jp
xor
outsl
scas
xchg
in
sbb
xor
insl
and
leave
pop
inc
or
cli
loopne
xchg
dec
aad
xchg
popf
adcl
das
mov
cli
xchg
sub
sbb
add
popf
jne
cmp
adc
lahf
jge
add
in
adc
mov
dec
mov
int
cmp
mov
repz
dec
dec
lret
dec
mulb
popl
xor
scas
or
inc
movsb
mov
cwtl
arpl
sbbl
jmp
pop
mov
mov
and
dec
jnp
lret
fsubrs
and
push
outsl
cmp
sub
lods
fcomps
mov
loopne
inc
inc
jno
addr16
or
das
xchg
aaa
jnp
cmovb
dec
aad
aaa
ljmp
mov
or
insb
iret
cli
xchg
mov
test
aam
mov
std
ss
and
test
cmpsb
out
pusha
jmp
xor
mov
psllw
imul
pop
sbb
rcrl
aam
xchg
inc
adc
adc
sbb
push
sbb
mov
mov
push
dec
push
test
adc
mov
fxch
fcom
pop
daa
xlat
mov
test
aas
popa
pop
and
clc
ja
roll
mov
mov
push
lods
ja
loop
scas
jb
repnz
in
mov
movsl
fiaddl
popa
sbbb
out
dec
pusha
addl
mov
sub
lods
inc
cltd
in
ret
bound
jl
fdivs
aas
push
aaa
xor
mov
repnz
test
cmp
lea
sbb
cmp
xor
adc
out
in
aam
push
mov
xor
jns
fwait
out
lret
mov
fisttpll
jmp
jge
jnp
jb
push
mov
or
xor
mov
ret
testl
lea
loop
adc
jne
rcr
jbe
mov
push
in
sub
or
push
adc
add
popf
leave
xlat
push
fbld
xor
mov
or
imul
rcrb
bound
outsb
cld
jnp
cmpsb
inc
adc
add
stos
sub
aam
outsl
aas
push
mov
add
xchg
add
pop
push
out
sar
pop
pop
xchg
push
int3
push
cmpsb
mov
les
outsl
outsb
adc
adc
in
mov
and
popa
cmc
mov
iret
mov
and
jmp
aam
rorb
mov
insl
bound
fs
push
cmp
push
mov
push
push
cltd
subl
xchg
out
out
pop
das
scas
or
xchg
sbb
pop
gs
rcrb
add
xor
jl
sbb
lcall
xor
xor
pop
fcomp
es
pop
push
xor
pop
ret
jmp
add
dec
popa
loope
bound
fnsave
adc
dec
cmp
popa
inc
pop
int3
jmp
or
in
lock
inc
sub
mov
jno
bnd
or
or
lds
je
mov
pop
pop
pop
mov
ret
or
fidivrl
lahf
lods
push
pop
mov
mov
outsb
push
xor
and
jb
fimull
sub
mov
shll
pop
inc
ficompl
inc
pop
or
sti
sarb
push
cwtl
outsl
push
and
add
xchg
cmp
test
sub
fimuls
mov
sbb
dec
pop
mov
ja
mov
xchg
adc
xor
cld
sbb
jp
and
sbb
dec
mov
fneni(8087
mov
pop
adc
lds
lret
cwtl
cltd
popf
inc
test
dec
and
sub
pop
es
jne
add
stos
scas
cltd
movsl
sarl
inc
jl
iret
seta
sub
or
sub
jo
or
push
inc
repnz
popa
or
and
xchg
in
roll
repnz
cwtl
imul
test
or
dec
push
shrb
in
decb
jecxz
sahf
mov
sbb
test
aad
aam
or
arpl
in
call
movsb
fcoml
jae
sbb
lret
fcom
push
lea
dec
fwait
mov
push
insb
sub
cs
fwait
mov
loope
and
cmp
push
nop
mov
mov
shrl
pusha
mov
sbb
les
lods
sbb
mov
ficompl
int3
ds
pushf
cmp
sub
jge
fisubs
mov
idivb
imul
scas
ficoml
push
xchg
sbbl
movl
and
mov
fs
add
jne
pop
das
sbb
stos
xor
cmp
cli
fnstcw
out
sub
xchg
push
popa
addr16
enter
imul
or
mov
mov
out
mov
js
dec
jnp
mov
mov
les
adc
outsb
add
pop
fwait
arpl
lods
mov
sbbb
sub
jbe
sub
movsb
leave
vpunpckhdq
pushl
mov
pop
js
jns
rcrb
jge
sub
fwait
loope
sbb
mov
push
in
pop
dec
cmp
mov
icebp
orb
lcall
dec
cmp
xchg
hlt
and
shlb
aad
ja
xchg
loope
mov
xchg
sub
imul
adc
enter
movsb
loopne
bound
sti
pop
pop
push
imul
mov
ficoml
fs
in
or
push
iret
dec
mov
aam
mov
add
sub
dec
push
dec
movsb
mov
clc
push
scas
cmpsb
in
sbb
subb
call
mov
in
pushf
sub
into
stos
ror
rcr
dec
std
ds
std
call
pop
xor
add
fwait
push
aam
js
dec
mull
aad
icebp
cmpl
pop
iret
andl
push
cld
and
jno
ds
cmova
roll
cmp
or
outsl
xor
jle
push
sub
pop
nop
ret
inc
sub
aas
and
gs
ds
and
pop
sbb
dec
stos
dec
dec
mov
or
add
mov
roll
pushf
inc
push
int
mov
pop
stos
sub
repz
push
sub
or
lods
inc
pop
push
pushf
dec
mov
jns
test
lahf
push
in
inc
inc
xorb
pusha
dec
int3
popl
dec
jmp
dec
push
pmaxsw
fiadds
or
dec
xchg
mov
sbb
add
pop
stc
xorl
lods
loope
andl
daa
xor
add
sub
jne
rclb
cmp
add
fisubs
jle
call
jecxz
cmp
mov
fwait
xor
pusha
mov
outsb
fistl
jmp
out
imul
mov
add
cmp
scas
incb
hlt
jbe
sub
push
cmpsl
dec
and
test
and
aaa
inc
mov
jnp
cmp
jo
xchg
jl
insb
repnz
lock
inc
inc
lods
mov
mov
add
sub
fistpll
fdiv
push
jb
or
xor
adcb
loopne
pop
cmp
xor
push
stos
je
push
pop
cmp
push
jbe
adc
or
cmpl
stos
or
rclb
leave
sbb
xor
cs
mov
sti
xchg
cmp
add
in
push
xorb
sub
sbb
test
push
xchg
jns
test
sub
pusha
jmp
shl
lcall
mov
repnz
arpl
daa
loope
stos
sbb
arpl
sbb
add
fs
sbb
sarl
xchg
sub
cwtl
inc
lcall
ret
lock
add
fildl
arpl
cmpsb
lret
stos
sarb
xchg
add
jmp
push
sbb
dec
out
fsubs
sub
das
push
enter
movsb
mov
sub
adc
adc
pop
xor
mov
stc
sti
dec
repz
ficompl
insb
dec
decb
notb
rolb
inc
pop
cmp
pop
out
pushf
subb
pop
in
lods
and
cltd
fsubl
adc
dec
jecxz
inc
xchg
aam
sub
jbe
ja,pt
mov
test
sbb
jns
shr
outsb
dec
arpl
shrl
out
mov
adc
xor
and
cmpsl
sub
rclb
lahf
inc
mov
jle
scas
aaa
das
notb
jb
inc
lahf
pusha
xchg
imul
and
stos
insb
in
or
call
inc
jns
sbb
lods
sbb
fwait
sbb
lds
and
xor
cmc
push
push
enter
or
clc
addb
enter
mov
mov
jecxz
sub
cmpsl
push
and
in
xor
cs
adc
inc
clc
push
addr16
sbb
mov
out
and
decl
rclb
shlb
xchg
lods
scas
popf
fwait
cwtl
pop
loopne
mov
dec
out
fcoms
mov
sub
in
std
sbb
push
add
lods
dec
dec
in
adc
jmp
jae
xor
mov
sub
stc
add
xchg
aaa
movsb
cmp
jo
jl
xchg
adc
mov
mull
adc
cmc
std
sub
iret
bnd
fwait
ljmp
dec
popf
mov
daa
jns
sub
pop
xchg
sbb
and
sub
test
xchg
scas
lret
mov
inc
sarl
test
std
in
inc
roll
add
pop
in
clc
mov
out
xor
dec
inc
cmp
cmp
imul
imul
fldenv
cmc
mov
rcrl
lods
adc
jb
mov
rcrl
sbb
sbb
cmovns
add
sbb
insl
inc
sub
adc
pop
mov
mov
xor
cmc
daa
jmp
inc
jb
xchg
hlt
outsb
add
adc
push
pop
xor
adc
inc
mov
imull
add
sti
aad
mov
lods
das
pop
bound
hlt
cmpsl
sub
cmp
arpl
inc
test
or
mov
push
mov
push
xorb
orl
insl
aad
popa
int
mov
mov
fstpl
jno
orl
sbb
cmpsl
xchg
out
pop
push
ds
cmp
pusha
push
aas
fldl
lock
jno
sub
mov
stc
call
xchg
lahf
mov
movsl
repz
xor
imul
mov
mov
shll
jmp
inc
call
sahf
sti
jnp
enter
pop
and
push
loope
cmpsb
adc
inc
call
xchg
mov
stc
mov
mov
rcr
and
and
dec
insb
fwait
out
pop
pop
test
mov
dec
push
addb
int3
ret
pop
loope
call
aam
and
xor
push
pop
popa
adc
mov
adc
ds
leave
test
sahf
mov
clc
out
cmpsl
push
aas
fwait
pop
cmp
negb
sub
lods
mov
mov
lods
mov
mov
test
dec
and
hlt
ja
mulb
jle
xor
cld
lds
xor
mov
hlt
cmovo
adcb
test
out
mov
xor
jmp
mov
imul
push
dec
arpl
xchg
jb
aas
push
cmp
mov
jnp
les
loope
cmp
add
rcr
push
aad
mov
mov
outsb
push
ja
pushf
xchg
cmp
mov
int
imul
jle
cmp
iret
sbb
ja
add
leave
frstor
sarb
shl
add
mov
dec
stc
adc
cmp
push
fnstsw
sub
mov
dec
in
xchg
or
dec
leave
loop
in
mov
pop
fmull
mov
roll
sbb
adc
push
xchg
sub
sbb
mov
iret
out
sarl
pop
bound
push
lock
xchg
xchg
and
orl
lcall
frstor
fiadds
jbe
jae
jmp
pop
mov
xor
jp
insl
cmpl
sbb
pop
divl
jbe
clc
mov
ja
fs
mov
xchg
fs
jmp
lret
inc
adc
sbb
adc
inc
mov
out
pop
test
pop
cltd
and
ret
outsb
into
hlt
add
sbbb
pusha
push
xchg
popf
rol
mov
xor
pop
pop
mov
pop
std
push
lahf
pop
addr16
lahf
dec
roll
lret
sbb
popa
cltd
shrb
mov
or
and
lahf
mov
sbb
jae
lock
leave
xor
fidivrs
jae
aaa
xor
xchg
or
insb
jae
loop
dec
into
xor
addr16
stc
push
sbb
sbb
push
fsubrp
arpl
mov
mov
das
test
mov
sub
mov
and
popa
and
or
shlb
fsubr
push
mov
cmp
into
incb
insb
ds
xor
cmc
xlat
in
mov
gs
leave
mulb
inc
aad
jecxz
test
fs
hlt
in
push
lcall
aaa
push
imul
fisubrs
lods
xchg
sub
mov
mov
push
cmovge
enter
sahf
sbbb
push
push
cmp
gs
mov
mov
pop
mov
add
fiadds
mov
pop
pop
mov
lret
sbb
test
xor
xlat
and
and
mov
push
mov
not
inc
mov
lock
lock
lods
and
xchg
jp
jo
xor
sbb
rorb
push
fidivrl
or
ret
lock
dec
enter
pushf
add
mov
enter
imull
adc
cmc
push
jp
es
shll
lods
inc
jnp
test
ret
leave
sahf
int
mov
and
pop
push
sbb
pop
sbb
enter
scas
lret
in
je
fsub
add
adc
xchg
inc
mov
cwtl
pusha
sbb
sar
cmp
xor
sbb
cltd
neg
fwait
lret
inc
dec
push
lods
ja
and
scas
aad
push
mov
cmp
into
mov
int
testb
xchg
nop
xchg
in
push
stc
outsb
ds
adc
enter
pop
dec
loope
pop
dec
push
cmp
dec
fisubl
and
sub
out
repz
jge
scas
imul
jae
jne
xor
ret
movsb
push
bound
cmp
fwait
mov
cwtl
iret
stos
and
push
sbb
ret
xor
add
jno
dec
call
jae
in
fiadds
cmp
push
xorb
inc
rcll
or
push
test
lret
dec
xor
in
mov
and
rclb
jb
jg
shrl
insl
imul
mov
fldl
xchg
cld
inc
hlt
xchg
data16
sbb
out
les
mov
cmp
xor
out
inc
adc
enter
aad
xorl
cmp
mov
popf
out
sub
in
xor
in
mov
scas
fwait
test
mov
mov
jecxz
dec
sarb
jmp
mov
and
pop
iret
jge
cwtl
mov
rorl
fs
push
daa
pop
mov
lods
movsb
cmp
adc
xchg
xor
out
in
inc
mov
cld
cmp
fucom
cld
pop
mov
or
shll
cmp
xchg
jno
jp
mov
cmp
pop
mov
and
lahf
sbb
inc
and
mov
mov
jae
inc
or
xor
stos
push
rcll
loope
call
xchg
cmc
enter
mov
imul
xor
inc
pop
lds
fiadds
jle
or
stos
pop
push
xlat
pop
inc
xor
mov
lahf
fcoml
aas
or
daa
sbb
cmpsl
mov
shl
shlb
lret
insl
sar
scas
push
fdivrs
stc
sub
mov
shl
adc
push
fstps
sub
cmc
mov
sub
lahf
cmpsb
mov
push
test
sbb
dec
or
scas
into
stos
ss
or
jp
or
mov
xchg
dec
aam
es
jnp
icebp
mov
push
ds
sbb
call
sub
dec
loop
sbb
pop
hlt
pop
mov
mov
test
dec
sbb
xchg
mov
dec
cmp
popa
les
adc
js
rorb
push
jbe
call
pop
in
dec
sub
lock
and
icebp
mull
rcl
xor
jb
jae
out
xor
es
pusha
sbb
add
insl
fs
sub
lock
adc
aad
hlt
sub
fisttpl
aaa
add
xchg
daa
lods
or
fs
pop
popf
jbe
outsb
std
adc
int3
out
pop
adc
jne
cmp
push
arpl
and
sub
iret
adc
jae
cld
xchg
dec
pop
pop
pushf
xchg
dec
es
or
inc
jp
sbb
sbb
inc
jbe
pop
cmpsb
jbe
xor
imul
fisubrl
and
cltd
dec
add
rclb
lock
cmp
ljmp
das
inc
pop
arpl
stos
es
jle
push
fsubrl
mov
stc
sbb
hlt
xchg
popa
pop
mov
mov
loop
jne
dec
pop
jg
fimull
test
adc
outsl
push
or
hlt
mov
inc
mov
ljmp
mov
stc
gs
lahf
hlt
test
stos
sbb
and
xchg
mov
cmp
movzbl
pushf
popf
pop
ds
pop
adc
jb
and
mov
lcall
xchg
mov
mov
movsl
mov
xor
cmp
mov
addr16
jns
push
js
pop
lods
fstpt
and
pop
pop
cwtl
and
mov
push
or
push
pop
mov
jl
add
mov
out
push
jmp
outsl
xchg
mov
repnz
lock
fnstcw
testb
lock
pop
shl
stc
outsl
out
or
test
inc
lret
in
pop
jecxz
repnz
jmp
aas
test
sbb
push
jns
pushf
sti
add
out
pusha
jge
sbb
jne
pop
int3
or
xor
dec
hlt
and
fdiv
cmp
lea
roll
jnp
dec
or
std
push
fdivrs
push
fcmove
or
mov
fstl
aad
imul
addr16
in
xlat
stos
fistpll
aas
and
cmpsl
xchg
sub
pushf
cmp
or
jge
push
mov
outsl
sarl
aas
push
push
mov
aas
lcall
loop
popa
dec
sub
scas
push
lahf
in
and
dec
fistps
xor
sub
cmpsl
lret
shlb
dec
sub
sub
stos
xor
cmp
pushf
arpl
rorl
fs
loope
and
pop
sahf
mov
push
push
in
pop
mov
xor
lods
shll
jne
mov
cmc
mov
fists
mov
add
adc
js
mov
push
xor
fimuls
and
add
fldenv
movsl
insl
lret
sbb
jne
gs
outsl
fisubrl
adc
xor
mov
jns
ja
dec
push
cmp
nop
das
stos
xor
lret
cli
mov
lods
add
dec
dec
dec
add
hlt
mov
and
jbe
lea
repz
push
aad
xor
mov
or
mov
sarb
push
rorb
inc
add
mov
xor
jne
jmp
out
inc
shrl
divl
arpl
pusha
shl
cmpsb
push
sub
les
xchg
leave
cmp
pop
andl
lea
aam
sti
and
push
push
push
lcall
cmc
cli
inc
or
xor
pop
push
lods
push
dec
adc
add
xor
adc
lea
push
xchg
sarb
decb
out
aam
adc
jecxz
xor
sub
imul
in
dec
and
cmc
xchg
movsl
jmp
push
xchg
call
adc
les
mov
cld
test
mov
stos
lea
clc
adc
div
aam
lcall
int
aas
inc
lock
mov
jns
xchg
cmc
or
out
sub
adc
in
cmc
add
adc
jo
leave
in
or
pop
or
mov
xchg
popf
andl
test
clc
outsb
dec
lcall
push
inc
add
lcall
ja
sti
add
lcall
jns
ficoml
pop
repz
add
js
inc
sbb
jge
inc
jmp
in
mov
imul
mov
adc
xor
lcall
fstpt
es
jmp
pop
mov
repnz
aaa
jno
mov
push
fmull
sahf
adc
imul
mov
adc
lret
mov
xor
xchg
andb
cmp
jge
scas
xchg
jae
mov
test
js
repz
fstl
out
popa
and
ja
mov
shll
movsl
cs
loop
popf
es
out
shlb
aas
movsb
fwait
dec
push
int
and
ss
fcoms
lods
fcoms
xor
or
int
dec
popa
xchg
sub
pop
push
xor
xor
xchg
xchg
jecxz
int
cmp
pop
repnz
inc
ds
mov
mov
adc
hlt
xor
push
push
adcl
fsubl
arpl
push
pop
and
hlt
mov
or
jb
imul
lret
and
sub
aam
sahf
or
adc
rorb
in
fisttpl
popf
push
les
adc
lds
jnp
add
fbld
ja
icebp
add
and
cli
push
mov
cld
mov
xchg
sbb
sub
xchg
mov
ficomps
lods
pusha
dec
mov
repz
adcl
mov
push
push
xlat
fistps
push
int3
and
jp
stos
inc
fistps
xor
mov
test
fsubs
jnp
mov
dec
shl
mov
jo
loopne
fsubl
sub
je
mov
sub
in
mov
mov
pop
ss
outsb
xor
mov
or
push
adc
cmc
pop
rcrb
fstl
data16
out
add
xorl
rcl
cs
cltd
sub
je
add
sbb
xlat
push
std
lea
mov
test
mov
pop
rcrl
pop
add
mov
mov
mov
je
arpl
movsl
and
or
in
data16
jle
mov
xor
mov
test
sub
fwait
jmp
lret
jo
shl
sub
popf
xor
bound
jno
outsl
push
clc
outsl
jmp
sbb
pusha
adc
jo
gs
scas
fs
outsl
xchg
aas
xchg
ja
in
loop
sub
rclb
mov
int
rorb
inc
mov
in
jecxz
hlt
jge
sbb
roll
xor
adc
movsb
clc
or
test
mov
iret
pop
mov
pop
xor
pop
jecxz
fscale
xor
test
cmp
decl
lock
mov
mov
in
mov
loop
ret
push
cltd
add
and
das
mov
xor
jg
cmpb
clc
pop
dec
ftst
fcmovnbe
movsb
sbb
daa
ret
stc
mov
jo
mov
xchg
mov
outsl
sarl
inc
mov
rcrb
adc
shlb
pusha
std
inc
add
push
mov
pop
sbb
dec
repnz
mov
and
pop
push
xchg
imul
sbb
push
ljmp
xchg
loope
pop
daa
pop
mov
vcvtpd2dqy
cmp
or
cmp
push
cmp
ret
and
repz
xchg
rcrl
pop
mov
loop
ret
bound
daa
cmpsl
sub
sbb
repnz
jbe
adc
pop
lret
ljmp
dec
mov
enter
movsb
sub
cmp
lret
push
and
call
adc
sub
jnp
lods
bound
mov
lea
jmp
sahf
inc
pop
dec
add
jp
notb
mov
adc
xor
jmp
mov
js
add
jp
dec
jg
pop
xchg
fs
cmp
inc
mov
rolb
sbb
mov
ficomps
out
push
out
ja
push
mov
popa
aaa
lock
lods
mov
push
and
mov
fbstp
daa
jb
jmp
sbb
sbb
cs
insb
mov
cmp
inc
rcrb
xchg
fimuls
mov
jmp
ret
cmp
repz
mov
add
cmp
or
sbb
pop
call
stc
je
lcall
ljmp
ret
push
fimuls
xchg
int3
incl
in
push
aas
mov
xchg
mov
cs
jae
or
or
xor
cmc
out
mov
clc
xchg
std
daa
lahf
mov
pop
cmpsl
adc
or
ja
in
jecxz
or
pop
fildll
xor
pop
cld
ret
mov
adc
push
int
leave
jmp
dec
xchg
in
orb
inc
dec
int
pop
jno
jge
cld
xor
or
add
mov
jnp
fs
sbb
mov
add
fidivl
and
jge
mov
mov
push
xor
mov
add
stos
ret
cmp
mov
aaa
aas
icebp
mov
mov
mov
ret
or
out
sbb
pushf
push
jg
hlt
fnstenv
mov
xchg
xchg
xor
cs
outsb
rorl
mov
add
inc
les
ret
fld
scas
pop
inc
cli
ss
test
aad
and
in
dec
xlat
cmp
push
out
pop
adc
pop
lods
push
bound
ret
mov
push
lret
jmp
scas
sbb
jno
and
adc
adc
movsb
pop
clc
fnsave
or
insl
cmp
push
sahf
in
adc
dec
and
mov
loope
dec
loop
decb
repz
test
aam
xchg
xchg
jbe
addr16
aad
loope
mov
test
push
adc
in
add
divb
decb
inc
xor
and
jb
push
inc
mov
inc
icebp
out
mov
cmp
xor
jmp
mov
gs
test
pop
mov
sti
xchg
das
adc
jae
test
sub
sub
add
test
push
mov
aam
sbb
pop
packsswb
stos
mulb
aaa
std
fmull
insb
daa
les
xor
imull
jns
fwait
mov
pusha
in
push
cmpsb
sub
enter
mov
iret
dec
mov
das
or
sbb
push
repz
push
mov
push
popf
scas
jae
mov
or
and
in
add
or
push
mov
jnp
mov
pop
sbbb
cmc
cwtl
mov
mov
ja
shrb
inc
or
sbb
loop
ds
pause
ljmp
sub
push
adc
push
xchg
mov
xchg
dec
and
cltd
in
sbb
dec
int
mov
mov
jecxz
adc
pushf
mov
push
ret
aam
lods
pop
cmc
jo
daa
out
add
icebp
xchg
xlat
mov
filds
sbb
int
out
add
inc
push
jo
dec
push
cli
lret
stos
shl
push
lock
push
movb
xor
push
dec
iret
mov
test
sbb
and
adc
add
popa
jbe
jp
movsb
jl
js
repz
cmc
aad
call
mov
std
mov
cmpsb
addr16
cmpsb
ljmp
popa
inc
insb
loopne
mov
and
in
dec
jecxz
or
fwait
add
cmp
and
dec
xchg
inc
add
mov
sar
ds
repnz
mov
mov
xchg
and
xchg
stos
sbb
sub
push
out
jno
adc
fcoms
scas
data16
fidivl
sbbl
ja
sahf
repz
xchg
into
inc
and
inc
in
mov
lods
adc
jne
adc
pop
stos
adc
add
push
or
pusha
lea
rcl
cmp
sti
xor
int
lret
je
aad
and
push
movb
jns
adc
insl
aas
test
and
jle
xchg
out
jg
rcrb
push
sub
pop
nop
rcrb
enter
xchg
mov
in
sbb
cmpsb
push
mov
les
out
jp
insl
fstl
mov
in
jb
inc
pop
out
xchg
sahf
jge
and
int3
push
mov
pop
cltd
pop
jne
icebp
dec
movsb
inc
ja
push
cltd
addr16
cmp
hlt
adc
mov
jl
dec
out
repnz
jne
dec
mov
iret
fistl
adc
mov
in
cmp
xor
pop
mov
cli
cmp
icebp
add
dec
push
aaa
fdivl
pop
jbe
pop
icebp
push
test
rclb
pop
nop
int3
in
fwait
sub
iret
loop
sahf
loop
loop
push
jo
pop
cmp
jp
es
pusha
or
stos
xor
fsubrs
stos
pop
sbb
mov
cmp
pop
pop
mov
adc
pop
jns
fs
mov
pop
lret
in
pop
sub
push
das
push
es
mov
jns
push
xchg
cmp
push
jg
imul
mov
cmp
xchg
shll
in
rclb
lret
ljmp
clc
inc
jg
decb
out
adc
idivl
add
mov
lret
fsubr
pop
shll
pop
addl
aaa
push
jo
pop
sub
stos
icebp
and
sub
scas
test
outsb
daa
sar
sbb
fldenv
mov
or
and
inc
not
and
ret
shrb
jns
testl
ss
pop
cmpsb
push
in
lods
cltd
addr16
es
clc
outsl
sbbb
lods
aam
scas
out
xchg
pop
inc
addr16
loop
push
mov
or
adc
xchg
loop
dec
out
subl
pop
pslld
incl
xor
add
pop
jne
push
lea
stos
repnz
sub
push
dec
outsl
and
push
mov
pop
popa
dec
dec
mov
jmp
aas
xchg
loop
bound
mov
inc
inc
stc
mov
sbb
mov
pop
mov
sub
xor
jo
jno
mov
pushf
popf
loopne
fucomi
xchg
push
push
xor
outsl
push
push
sbb
sar
xchg
xor
adc
std
sub
pop
pop
xchg
mov
cmp
pop
mov
test
andb
inc
sbb
in
push
flds
loope
in
dec
dec
lcall
add
add
ret
cmc
hlt
adc
jns,pn
mov
mov
xor
in
cmpsl
fsubrp
mov
mov
dec
dec
add
mov
mulb
testl
out
cmp
insb
insb
daa
sbb
clc
mov
pop
adcb
call
test
out
xor
aad
and
int
cmp
xchg
xor
das
cmp
jp
cwtl
icebp
jl
add
and
bound
cld
sbb
sub
or
paddsw
sarl
and
aad
ret
in
arpl
je
push
arpl
icebp
ret
dec
outsb
xchg
cmp
pushl
int3
xor
sarl
dec
out
cltd
pop
je
mov
cli
lcall
aaa
xor
sbb
clc
mov
jae
addr16
stos
int3
pop
xor
pop
sbb
cmp
test
lahf
xchg
mov
xor
ljmp
cld
sti
sub
in
cmp
enter
mov
popf
mov
sub
mov
pop
fwait
shll
and
push
inc
push
insl
dec
or
sti
inc
cmp
popf
add
scas
int3
mov
andb
xchg
shrb
sub
adc
inc
lock
push
pop
jg
int
xchg
pop
test
addr16
cli
and
lahf
fstps
gs
imul
push
inc
jo
add
ja
out
add
rcrb
std
jbe
aad
sbb
cli
inc
sarl
pop
cmc
cli
xchg
push
xor
faddl
aam
ret
pop
repnz
jl
dec
push
pop
adc
mov
push
insb
stos
stc
cli
mov
cmp
scas
sahf
inc
dec
int3
adc
pop
cmpsl
adc
pop
into
mov
pop
add
imul
or
and
jp
sarl
inc
pop
ljmp
inc
enter
sub
inc
ret
pop
out
imul
aas
mov
cmp
or
test
jo
outsl
mov
dec
dec
push
les
xor
mov
cmp
cld
lea
jmp
inc
jl
push
and
jb
js
and
gs
dec
jl
mov
jge
push
scas
sub
xor
mov
add
int
cwtl
mov
adc
out
addl
mov
pop
fildll
mov
sbbl
adc
mov
pushf
and
pop
mov
gs
and
shrl
dec
mov
inc
lods
bound
mov
fstl
sbb
ret
popa
xchg
div
lret
pop
repnz
inc
mov
negb
pop
incb
stc
mov
ffree
mov
insl
push
mov
es
rorb
mov
nop
and
ds
mov
pop
jns
adc
push
or
mov
ret
mov
data16
sub
movsl
popf
hlt
insb
jp
jp
jg
aaa
jle
jno
mov
sti
rorl
and
xchg
xor
aad
cli
inc
and
dec
fidivl
shrb
ds
sbb
mov
lods
bound
and
cmpsb
dec
dec
dec
xchg
jbe
lods
stos
jg
lods
jg
mov
movsb
orl
rolb
lods
sub
mov
cmp
jmp
add
daa
adc
mov
mov
mov
cmpb
add
xchg
pop
mov
mov
add
mov
jns
cmp
rcl
out
icebp
mov
xchg
sbb
push
push
ja
pusha
and
xor
mov
repz
jo
inc
cld
stos
mov
sub
pop
jge
incl
in
es
nop
pop
fdivs
and
ja
pop
lock
lods
mov
add
into
outsl
aaa
cld
out
xchg
mov
fdivrs
xchg
stc
cmc
fidivl
fsubl
lods
xchg
aas
cli
pop
testl
jmp
sub
pop
jns
repnz
jo
lea
and
movsb
aad
mov
mov
shlb
lret
fcoms
in
sub
sbb
pushf
ljmp
in
add
sub
cs
or
xor
add
pop
clc
mov
adc
adc
cmc
adc
lds
outsl
mov
lock
jmp
fcompl
cmpsb
mov
mov
xchg
inc
xchg
jmp
and
jg
fs
xor
jmp
inc
movsb
cmc
jae
fnsave
sbb
push
insb
sbb
push
pop
mov
cmpsl
xchg
orb
hlt
add
addr16
or
mov
shrb
cmp
or
mov
push
inc
push
mov
repz
xor
arpl
push
or
arpl
mov
ss
add
pop
sbb
and
ja
cwtl
add
adc
test
push
push
ret
test
outsb
clc
les
repnz
pop
enter
fdivr
repz
xchg
adc
aad
jo
fnstsw
dec
pop
ds
pop
xchg
cmp
xchg
jmp
jbe
or
lahf
jge
mov
mov
in
push
mov
xor
sarb
icebp
stos
inc
sbb
div
fnstsw
loopne
inc
test
shll
jns
cmp
jge
push
das
add
outsl
test
adc
lds
hlt
cmpsl
xor
sahf
int3
js
push
mov
ss
shll
pop
sbb
sub
xchg
adcb
bound
dec
mov
inc
insb
pop
sti
mov
add
icebp
movsb
je
xor
stc
dec
push
or
ja
cmpsb
rclb
add
jbe
inc
xor
add
mov
mov
aam
cltd
mov
lds
adc
shl
scas
mov
sub
sub
ljmp
icebp
inc
jl
inc
mov
test
cmp
invd
push
push
testb
mov
mov
sbb
pop
and
mov
xchg
cmc
push
shl
cmp
fs
mov
movsl
ror
xchg
loopne
pop
jne
inc
push
icebp
ss
lds
jo
mov
call
movsb
arpl
icebp
clc
fadd
sbb
xchg
in
out
mov
dec
mov
dec
xlat
mov
fists
push
inc
and
dec
fld
inc
cld
outsl
cmp
push
jns
inc
int3
aas
pushf
adc
or
push
and
adc
std
scas
out
inc
leave
aad
popf
loope
fidivrl
inc
int3
jno
data16
and
pusha
scas
fiadds
sbb
repz
push
push
nop
call
test
cli
inc
sub
in
lahf
jne
xor
xchg
pop
sti
fsubr
call
and
imull
sbb
push
mov
addr16
push
faddp
lods
mov
call
call
daa
jnp
int3
cmc
lods
and
call
ja
fcoml
push
pop
push
test
xor
push
cmp
arpl
std
rolb
imul
jp
cmp
out
jo
mov
test
out
jmp
dec
subl
cmp
cmc
jo
pop
std
cli
shlb
mov
cltd
mov
jno
sub
pop
leave
popa
adc
daa
and
test
sbb
add
mov
mov
pop
pop
rcrb
sbb
test
push
lret
xchg
cmpb
dec
aad
xor
int3
pop
mov
mov
mov
aas
loopne
imul
icebp
repz
mov
dec
adc
or
lret
jae
add
test
and
xchg
jge
sbbl
aaa
or
jno
aam
push
nop
xchg
cld
add
adc
filds
and
aam
jp
dec
mov
cmc
mov
jle
jge
in
cmpsl
inc
mov
and
xor
inc
inc
cmp
mov
sub
data16
icebp
sar
jne
pop
loopne
xchg
or
push
jne
jns
add
pop
movsl
icebp
inc
push
outsb
push
mov
sbb
push
sub
mov
jb
icebp
inc
xchg
loopne
xor
stc
adc
sub
dec
mov
push
arpl
int
rolb
and
and
ja
adc
jg
movsb
xchg
or
pop
and
jle
ja
jl
in
mov
pop
or
push
mov
or
or
xchg
jo
out
pop
mov
fstpt
fdecstp
dec
ret
fcoml
insl
fninit
mov
out
sti
jmp
and
inc
xor
cltd
adc
cmc
fxch
setg
adc
and
adc
inc
repz
cmpsl
cld
mov
xchg
jo
lret
addr16
push
aam
sbb
xchg
scas
xchg
testl
ljmp
inc
mov
xchg
add
mov
xchg
xchg
adc
cmp
add
cmpsl
push
sti
cmp
out
mov
lret
cmp
pop
sarb
add
lods
test
mov
cld
pop
sti
xchg
cwtl
aad
jmp
addr16
xchg
sub
subb
and
adcl
cld
pop
pop
and
js
xchg
jp
pop
out
xor
push
jle
mov
mov
push
iret
dec
pushw
push
mov
mov
push
xchg
pop
mov
dec
add
addb
lret
inc
push
pop
ljmp
jnp
sbb
lret
cld
pop
adc
mov
adcl
mov
cwtl
pop
and
jmp
and
inc
std
cmpb
and
push
fcmovne
int
out
push
dec
mov
movsl
push
sahf
xchg
insl
jb
orb
dec
imulb
jmp
xchg
loopne
loopne
push
call
das
cmp
call
lcall
push
cmp
adc
cmp
pop
fcompl
addl
lcall
fsubl
push
cmp
and
sbb
xor
adc
or
test
push
fstpl
xchg
mov
push
push
xchg
pusha
lods
mov
push
xchg
hlt
loopne
mov
sbbl
icebp
adc
movsl
pop
inc
cmc
xchg
xor
fucomp
arpl
call
movsl
movsb
fiaddl
mov
js
or
push
cmpsl
cmp
dec
pop
pop
adc
cwtl
hlt
jecxz
data16
in
cmpsl
outsl
push
mov
push
rorl
sub
repz
jecxz
mov
stc
jbe
xchg
es
jnp
inc
enter
rcll
orl
add
cs
into
cmpsl
pop
fstpt
mov
insb
pop
repnz
pop
rcr
push
adc
je
pop
addr16
in
jns
jo
lcall
insb
pushf
into
stos
sub
inc
test
inc
and
or
les
mov
insb
cli
jo
jecxz
pusha
movsl
add
pop
fcompl
adc
paddd
mov
cmp
imull
cmpsl
push
jp
cli
ja
popa
pop
pop
shll
ss
sbb
cmp
inc
dec
jge
out
jbe
testl
lcall
jno
inc
aas
fcoms
xor
das
repnz
xchg
mov
jmp
sbb
rcrb
adc
mov
xor
pop
xlat
pop
push
xor
in
pop
cmpsb
pop
or
xchg
lock
sub
xor
out
dec
std
mov
pop
sahf
leave
notb
and
rorb
test
test
xor
lea
test
arpl
subb
mov
cli
leave
scas
test
outsb
jno
inc
push
aaa
ja
repnz
lahf
ss
stos
nop
mov
dec
cmp
outsb
push
rcll
jecxz
or
sbb
aaa
adcb
dec
adc
dec
or
pop
inc
adc
jp
jl
xlat
xchg
xor
je
cmpsl
mov
rol
movsl
xchg
cwtl
rorb
sub
ffreep
dec
pop
add
fwait
insb
sbbb
lret
inc
push
or
dec
mov
das
leave
xchg
stos
push
repnz
lahf
out
jl
subb
sub
les
jg
lcall
mov
mov
ljmp
pop
push
ss
fs
inc
cmpsl
pop
push
outsl
and
sbb
int
mov
cltd
jmp
popf
mov
test
or
pop
sub
adc
mov
jmp
xor
push
push
out
sahf
xchg
dec
movsl
fildl
add
push
lahf
sbb
hlt
jg
aaa
cli
add
or
out
sbb
or
xchg
mov
mov
cmpsl
dec
lods
cmpsb
imul
repz
pusha
mov
push
inc
test
mov
add
xlat
fisubl
stc
push
dec
sub
fimull
mov
fistps
lret
xchg
dec
xor
das
mov
shr
pop
jns
push
in
sub
cld
xchg
xor
lods
int
and
jp
add
lret
outsl
pop
mov
daa
mov
bound
negb
fs
clc
and
push
jbe
fmull
addr16
sbb
roll
pop
pusha
push
and
insb
int3
in
add
icebp
sub
pop
nop
shll
fldcw
lods
scas
iret
lret
rorb
sub
cmp
or
mov
inc
xor
arpl
pop
rclb
shrb
xchg
xor
ror
mov
adc
xlat
loop
lods
aad
and
mov
fimull
or
movsl
pop
int3
push
imul
push
adc
out
sub
xor
adc
add
jp
and
or
mov
je
and
int3
shll
aaa
push
add
push
push
cld
add
inc
xlat
mov
dec
das
sarl
call
std
jecxz
push
gs
gs
js
mov
mov
inc
cli
dec
sbb
imul
sub
stos
sti
cmpsl
incl
repnz
jbe
jl
dec
hlt
jne
mov
dec
cmp
pop
xchg
sub
xchg
ret
jl
dec
iret
sbb
dec
xor
jle
fs
lock
add
xor
sub
clc
and
addl
in
and
jnp
sbb
iret
test
mov
aam
pop
filds
mov
cmc
stos
jno
fidivl
sbb
shlb
es
or
andl
stc
or
add
imul
mov
bound
sub
xchg
fdivs
pop
cmp
repz
je
jb
jo
push
out
sti
pop
lods
into
std
setnp
outsb
jo
vsqrtsd
adcl
mov
addr16
pop
cltd
mov
pmullw
mov
push
movsb
insb
dec
bswap
movsb
mov
push
ljmp
icebp
xchg
xor
mov
cmp
ds
cmpsl
and
jg
lods
add
push
and
push
dec
stc
xor
push
mov
jmp
inc
in
and
nop
test
inc
insl
je
push
jnp
push
fiaddl
arpl
int
sahf
push
add
cmp
fdivs
xlat
inc
cltd
lods
cmp
rcrb
fadds
add
stc
cmp
push
and
xor
push
scas
or
mov
pop
xor
ret
adc
icebp
adc
aas
sbbl
mov
mov
insl
data16
jo
push
pop
ret
xchg
pop
movsb
iret
xchg
test
xor
jb
cli
addr16
lods
jle
fbstp
adc
adc
hlt
mov
sbb
push
mov
sub
subl
push
sub
dec
mov
shll
iret
hlt
xor
gs
in
pop
arpl
fwait
adc
push
in
es
jle
stos
mov
rclb
jno
and
jp
inc
fbld
aas
hlt
cmpsb
pavgb
cmp
adc
and
cmpb
filds
lahf
je
hlt
decl
and
mov
and
daa
sahf
mov
pop
out
or
dec
int
push
mov
mov
test
push
and
jl
pop
add
adc
icebp
pop
jnp
popa
idivl
imul
gs
inc
xor
or
pop
mov
and
mov
test
cmp
push
jns
xor
stos
insl
cmp
outsl
mov
or
clc
stc
mov
mov
popf
push
inc
jb
dec
and
lods
jle
movsb
mov
add
into
jle
add
loope
xchg
adc
jmp
je
les
orl
adc
cmp
fiaddl
sub
cmove
in
cmp
cmp
movl
cwtl
push
test
call
sti
pop
cmp
repz
fwait
movsl
add
jl
mov
mov
ret
adcl
jno
inc
mov
sbb
pop
insb
jns
out
test
sbb
mov
call
daa
pop
popf
jmp
stos
push
lret
out
test
scas
inc
ja
je
cmp
addr16
pop
mov
sbb
and
inc
daa
pop
loope
pop
xor
mov
sahf
mov
jp
pop
std
fcmovbe
mov
add
sub
xchg
mov
in
push
ret
mov
mov
mov
xchg
inc
add
mov
push
cmp
aad
in
in
inc
dec
dec
jno
adc
loopne
and
and
jne
in
subb
xorl
push
leave
adc
gs
xchg
clc
pop
pop
xlat
lret
popf
leave
test
xor
cmp
pushl
and
lret
aas
das
sub
xor
in
mov
and
xor
add
or
add
jmp
test
insl
cli
or
jg
mov
outsb
popf
rorb
xor
add
iret
pop
mov
insb
into
sti
add
loopne
mov
fwait
inc
fisubs
xchg
push
rolb
test
pop
xchg
int
fsub
ror
inc
push
and
lods
popa
jns
mov
das
and
arpl
add
mov
inc
dec
push
xchg
fcmovnb
scas
sbb
out
dec
test
jecxz
fisttps
aam
aad
pop
loopne
adc
mov
add
xchg
scas
nop
add
or
push
fwait
ret
stos
fildl
adc
repnz
xchg
adc
xor
cltd
leave
push
lahf
inc
jo
mov
dec
push
test
pop
rclb
jne
dec
mov
mov
sbb
pop
cmpsb
adc
aas
push
loop
mov
and
in
xor
mov
test
fisttpll
ss
std
das
sbb
in
mov
icebp
and
jo
loopne
shl
lahf
xor
aas
nop
or
leave
inc
push
mov
daa
fisttps
sub
mov
jmp
push
mov
pop
dec
sbb
test
out
daa
mov
xorb
stos
fiadds
push
xor
call
mov
add
mov
sbb
setp
adc
outsl
or
repnz
bound
pop
rcrb
ljmp
test
jmp
jmp
pop
arpl
pop
cs
adc
adc
popf
xchg
sub
inc
mov
xchg
mov
xor
adc
or
imul
add
inc
sub
int3
test
fildl
ret
stos
lret
adc
int
pop
push
push
push
fs
and
xor
enter
mov
xor
test
and
aaa
inc
dec
sbb
aas
scas
pop
cs
add
insl
es
rolb
outsb
out
stos
mov
shrb
jns
or
sub
pop
nop
mov
std
mov
mov
flds
int
cwtl
mov
aas
ja
jno
negl
xor
sbb
shlb
in
dec
aam
out
stc
aam
enter
les
dec
push
and
mov
pushf
pop
hlt
lock
dec
out
cltd
cltd
sbb
notb
push
loop
stos
icebp
test
push
cld
cmp
jl
mov
ljmp
xchg
dec
mov
negb
mov
in
or
aad
dec
fldenv
out
test
loop
adc
imul
insb
mov
and
push
ficoms
int3
push
xlat
lahf
scas
mov
or
xchg
mov
jle
fidivrl
or
jmp
jle
sbb
xchg
nop
mov
ja
enter
cmp
cmp
or
dec
lret
and
mov
popf
das
notb
imul
inc
jno
nop
stos
xor
pop
mov
inc
mov
cmc
ss
adc
jmp
lcall
xchg
pop
popa
add
xchg
add
lock
aad
push
jg
push
ret
mov
dec
mov
mov
add
hlt
push
lock
out
lret
out
nop
sub
pushf
hlt
in
movsb
cwtl
cmc
xor
jne
inc
cmp
orb
adc
xchg
mov
movsl
rol
push
mov
call
and
and
fidivs
cwtl
inc
add
jns
lahf
idivb
push
adc
das
add
inc
dec
sub
jne
lock
jmp
in
popf
mov
sbb
in
xor
stc
xor
lcall
psubd
into
mov
push
scas
sbb
and
hlt
inc
data16
adc
mov
insb
jno
in
add
sbb
fsubl
and
pop
call
daa
sti
aas
pop
mov
push
inc
dec
add
cltd
ja
cmp
xchg
popa
push
push
lret
sbb
jg
pop
movb
sub
rcrb
and
or
cltd
and
inc
shr
sub
arpl
ds
adc
sub
and
sbb
or
inc
push
rorb
inc
mov
shll
dec
pop
test
call
insl
pop
xchg
pop
mulb
sub
sbb
cmp
dec
cmpb
js
fiadds
cwtl
push
ret
add
mov
or
ret
sbb
scas
push
insb
fabs
jecxz
cmpsb
pmaxub
pop
shlb
fcomps
jle
mov
jle
out
jp
popf
lea
pop
jo
loop
and
mov
jl
out
add
jbe
es
xchg
test
add
loopne
jae
add
mov
mov
call
mov
and
cmp
cltd
bound
push
aaa
sbb
and
mov
pop
push
enter
leave
movsb
pop
loopne
aad
arpl
fnstsw
sub
fistl
dec
jnp
or
mov
add
cld
sarl
cs
mov
fnstcw
ret
insb
mov
mov
lods
into
cmp
lods
jb
bound
sbb
cld
xchg
iret
xchg
nop
push
stc
iret
sub
add
loope
subb
stos
out
and
jp
pop
test
cld
popa
lock
or
div
cli
sbb
pop
mov
inc
out
sub
clc
xchg
jne
stos
push
push
aas
loop
mov
enter
bound
jno
mov
mov
inc
dec
call
add
ja
sub
mov
push
or
mov
mov
in
repnz
leave
and
lcall
repnz
mov
idivb
ja
adc
pop
fnstsw
jg
sub
xchg
movsl
insl
out
pushl
jle
and
xchg
outsb
xlat
loop
jno
ja
sbb
add
cld
dec
dec
cmpl
xor
cmp
outsl
fst
jge
add
jg
pop
imul
shl
popa
dec
aad
push
nop
mov
inc
pop
call
sbb
mov
addb
lret
data16
imul
xchg
mov
mov
nop
shrl
xor
jge
int
jne
scas
or
sub
dec
or
pop
xchg
aad
insl
xor
pop
icebp
call
mov
add
test
adc
add
sbb
dec
aad
ss
sub
sbb
dec
mov
mov
xor
adc
or
fiadds
bound
fldl
cmp
and
sbb
fldcw
xor
lods
or
cmpsl
sti
jg
sub
out
xor
xor
jp
ja
loope
dec
imul
outsb
data16
adc
mov
je
lds
stos
mov
arpl
push
sub
mov
nop
pop
mov
mov
and
dec
jb
jecxz
shlb
sbb
lods
jmp
ds
pop
pop
aas
pop
jnp
and
pusha
cli
repnz
testb
sbb
mov
hlt
jl
daa
andl
clc
dec
or
xchg
inc
xor
test
dec
xchg
mov
sub
loop
sbb
popf
pop
add
lock
out
aaa
insl
and
cmpsl
cmp
or
loop
push
mov
dec
call
push
add
rdtsc
aas
cmp
jb
fwait
mov
add
les
xor
mov
test
mov
movsl
dec
mov
mov
leave
dec
or
stos
xchg
xchg
insb
dec
pop
and
jmp
ret
pop
loopne
pop
xor
leave
xchg
mov
pop
mov
and
cmp
cli
xor
add
mov
cmp
idivb
xchg
in
lds
jno
mov
aam
pop
mov
fadd
inc
rcl
daa
mov
cmp
js
popa
inc
cs
mov
dec
xchg
sbb
lret
mov
add
insl
fwait
stos
mov
cmp
xor
mov
dec
andb
repnz
pop
cwtl
push
mov
enter
bound
mov
xchg
mov
mov
or
mov
repnz
or
out
inc
jge
dec
call
addr16
rol
add
fadd
data16
push
adc
xor
aad
movsb
push
jp
addr16
out
inc
inc
lcall
and
and
jg
and
pusha
bound
les
or
xchg
push
aad
pop
mov
sahf
pusha
shrl
sub
fwait
sbb
clc
jmp
pop
nop
das
test
fwait
pop
lret
insl
in
mov
add
test
js
and
cmp
ret
mov
cmpl
cli
sti
je
dec
mov
int
add
bound
inc
mov
mov
js
arpl
andb
aam
imul
mov
dec
fsts
or
mov
sbb
out
cmp
fdivr
scas
repz
setge
sbb
data16
insb
xor
inc
cmpsb
rolb
pusha
sub
push
and
sub
aad
ja
pop
orb
and
aaa
out
movsl
inc
or
jp
mov
cmp
push
adc
imul
and
fwait
cmp
addl
test
xchg
xchg
rol
and
inc
xor
hlt
push
test
dec
ficoms
sti
arpl
lods
xchg
addl
and
adc
cltd
and
dec
in
jecxz
pop
or
jne
je
or
adc
mov
xor
xchg
push
loop
ja
adc
rclb
mov
cmpsb
pop
jmp
push
inc
sub
push
and
in
stos
dec
popf
sub
push
add
int3
push
push
sub
lret
pop
data16
adc
ret
and
ljmp
xor
es
sbb
inc
fmuls
sub
mov
sbb
or
sub
sarb
incl
xchg
aas
outsl
and
outsb
sbb
shl
sbb
or
jbe
or
sbb
bound
scas
out
dec
nop
pop
pop
or
lret
sub
push
repz
mov
pop
adc
mov
mov
out
add
jle
push
xchg
add
add
ret
mov
push
aas
shlb
add
insb
ffree
std
lods
aam
fadd
pop
add
call
cmp
bound
sub
outsl
cwtl
jge
sahf
dec
pop
test
lea
add
stos
or
ds
gs
dec
cmc
xchg
add
pop
cmp
ffreep
add
or
ljmp
fs
outsl
pop
pop
sub
push
movsl
movsl
mov
loop
fiaddl
fcmovne
sbb
sub
mov
lret
mov
test
pop
loope
jge,pn
xor
adc
jns
mov
sbb
loope
sarb
test
insl
jecxz
push
ret
xchg
out
dec
cmc
sbb
imul
jp
jecxz
test
bound
dec
adc
test
sbb
andb
adc
arpl
add
add
and
mov
rcrb
out
add
aam
in
rorl
test
fwait
cld
in
push
and
dec
xor
add
fwait
dec
adc
jp
inc
scas
sub
les
sbb
popa
into
mov
add
mov
mov
sarb
push
mov
adc
lods
test
xor
notl
int3
in
in
pop
jo,pt
insl
iret
ljmp
loopne
cmp
dec
fmuls
pop
jo
cmpsb
jo
or
das
jecxz
sub
fsub
xchg
inc
lods
adc
test
int3
xor
xchg
repnz
sub
add
nop
lods
mov
test
into
xchg
lret
mov
add
gs
fstl
stos
add
popf
fs
gs
aas
std
xorl
sti
dec
or
test
dec
jg
aad
lock
xorb
stos
fs
mov
test
sub
std
in
mov
adc
sti
dec
sbb
cmpsl
rcrl
rep
inc
sbb
lahf
lret
sub
ret
aad
dec
jmp
jo
les
cltd
mull
dec
sbb
lds
push
add
mov
push
mov
ret
fbld
fsts
xchg
inc
jmp
and
jecxz
and
and
inc
mov
aam
jnp
dec
out
mov
imul
sub
aas
push
loope
pop
xor
lock
addl
cltd
mov
and
testb
mov
push
adc
shrb
out
pop
hlt
aam
sahf
popa
nop
jp
xlat
ja
sbb
jmp
push
jge
imul
int
sbb
out
mov
xchg
test
or
outsl
mov
imul
jg
jo
imul
movl
fisubs
repz
sub
inc
fldl
cmp
adc
ret
jge
inc
aas
subl
test
in
cmpsb
out
mov
mov
dec
jb
mov
rorl
inc
int
cmp
arpl
inc
and
cmc
mov
sti
xor
jns
fidivs
cwtl
jecxz
adc
add
test
sahf
movsl
xlat
lods
inc
xchg
inc
xchg
imul
popa
cltd
loope
or
xor
fwait
imul
nop
xchg
and
and
mov
call
out
dec
daa
out
in
push
mov
inc
xchg
out
pop
sbb
cmpb
test
mov
push
mov
movsb
jecxz
cmp
sub
sbb
iret
repz
subb
sub
int
xorl
sarb
cmp
sti
cmp
sub
cmpsb
dec
or
inc
inc
mov
lcall
std
adc
repz
sbb
add
aad
iret
xor
imul
aaa
mov
fidivrs
sub
pmuludq
incb
or
gs
stc
into
out
mov
mov
jecxz
mov
dec
mov
loope
fimull
scas
pop
icebp
aad
data16
addb
jg
fisttps
cmc
or
mov
loopne
mov
test
cltd
push
pop
mov
sbb
xor
pop
and
and
adc
xor
sub
push
stos
lret
push
xchg
gs
dec
int
pop
pop
hlt
loop
push
std
inc
cmp
sbbb
ja
shl
jne
out
aas
jns
scas
insb
xchg
adc
mov
jp
cwtl
jmp
pop
lods
pop
decl
mov
nop
repnz
jecxz
push
cli
add
jns
and
push
push
into
orb
fdivrs
dec
ljmp
fldcw
sbb
jb
mov
pop
or
lods
fwait
or
xor
clc
lahf
or
out
das
and
bnd
scas
cmp
xor
push
inc
add
out
and
adc
fldt
adc
adc
xor
or
out
sti
or
mov
in
stc
pop
mov
xor
hlt
lahf
clc
rcrb
inc
sbb
cmp
cld
fildll
test
adcl
frstor
pop
or
jg
jno
into
loope
mov
xchg
push
stos
rol
aam
mov
mov
repz
fstpt
bound
inc
fwait
mov
mov
cltd
mov
addl
stc
aam
push
mov
ljmp
mov
jmp
pusha
mov
sub
dec
in
xchg
fsubrl
dec
hlt
ds
ja
or
or
or
repnz
mov
faddl
mov
dec
testl
jnp
mov
pop
ror
xor
add
jne
pop
pop
ds
push
xchg
in
cltd
fnsave
cmpsb
lahf
out
insb
and
sbb
dec
push
cltd
mov
add
mov
push
aad
out
push
fwait
ja
sbb
lret
cmc
int
fcmovnu
icebp
clc
lret
dec
dec
in
add
xor
pop
fldl
xchg
out
addb
je
pop
push
std
push
int
push
lret
inc
mov
inc
add
mov
or
stos
repnz
inc
stos
pop
push
vpmacssdqh
lock
insl
dec
mov
mov
rorb
dec
movsb
insb
addb
in
sbb
dec
dec
xchg
test
leave
xchg
orb
sbb
jmp
fidivrl
add
loop
repz
rcr
pavgw
es
xchg
dec
pushf
xor
pop
fisubrl
xlat
ret
pusha
mov
adc
cli
pop
dec
loop
dec
ret
mov
cmp
mov
fisubrl
sbb
xchg
mov
je
pop
ja
fimuls
mov
fists
mov
or
nop
push
pop
mov
dec
xlat
push
sbb
sbb
test
adc
movsb
cld
dec
xchg
pop
inc
outsl
and
pop
jp
icebp
jo
cwtl
push
jge
adc
cs
and
cltd
cld
incb
jo
inc
xchg
xor
and
xor
int
sbb
mov
int
lods
mov
mov
idivb
dec
pop
mov
jmp
push
pop
ror
cli
pushf
decl
cltd
push
adc
icebp
mov
outsl
js
in
add
movsb
fisubs
rolb
loop
js
xlat
jnp
cmpsl
xchg
mov
sbb
xor
xchg
cmp
sarb
and
andb
adc
int3
jmp
jecxz
add
adc
push
in
fcomip
jae
push
insl
or
add
lods
sbb
dec
fstl
insb
add
std
add
xchg
mov
sbb
lea
adc
mov
pop
dec
adc
insl
rcr
fisubs
call
shr
lret
mov
dec
fildll
pop
jecxz
fnstsw
ret
loop
inc
pop
movsb
cli
cmp
mov
pop
or
fnsave
mov
out
jge
iret
mov
adc
sub
imul
aam
xor
pop
mov
sub
js
inc
xor
mov
shrb
jbe
in
inc
or
pop
adc
mov
sbb
rcl
adc
call
lods
imul
mov
jecxz
repnz
pop
sbb
jmp
xor
pop
sahf
xor
add
lds
fldl
lea
sbb
adcl
and
add
shll
out
test
loopne
icebp
arpl
pusha
mov
pop
pxor
mov
mov
popa
scas
pusha
flds
jnp
out
dec
test
xor
xor
enter
push
inc
roll
add
jb
out
mov
inc
dec
test
lret
inc
in
or
sub
add
mov
scas
lds
mov
ss
insl
in
andl
mov
xor
ja
aad
out
sbb
push
outsl
push
inc
outsl
decl
push
popa
fldcw
repz
sahf
mov
xor
xchg
pop
push
in
adc
shlb
cmp
jnp
lods
xchg
lahf
dec
push
jle
addr16
adc
dec
ss
add
stos
mov
xchg
cld
int
lahf
pop
out
pop
jb
lahf
push
loope
xor
push
or
mov
imul
mov
jbe
pop
mov
cmc
inc
jg
sbb
mov
cmp
mov
dec
addl
xchg
faddl
outsb
in
int3
pop
addr16
mov
test
jmp
jno
adc
dec
test
inc
sbb
push
cmp
lcall
mov
cmp
xor
cmp
and
xchg
mov
inc
xchg
inc
in
mov
cmp
push
mov
push
pop
movsb
cmpsb
sahf
pop
rclb
adc
cmpsl
stc
xlat
jecxz
mov
clc
mov
sbb
xchg
in
pop
mov
out
dec
xor
mov
mov
sbb
fcomps
and
push
sbb
or
pop
out
ljmp
jns
cltd
mov
lock
ds
push
stos
jbe
outsl
push
in
jge
in
push
mov
cmp
xor
les
sbb
mov
outsb
mov
and
es
mov
aaa
jo
insb
imul
push
xchg
je
and
mov
lahf
outsl
scas
xchg
inc
aad
insb
je
xchg
lods
cwtl
nop
xchg
pop
ja
xorl
sub
cmp
push
int
lcall
lea
test
pusha
mov
mov
mov
inc
movsl
pop
sub
int3
pop
or
jmp
pushf
dec
popl
cwtl
lahf
sbb
mov
icebp
loopne
stc
out
xchg
cli
dec
adc
shrb
xlat
xchg
xchg
int3
ljmp
test
jg
pop
call
push
adc
idiv
fwait
mov
sbb
xor
xchg
sub
testl
xchg
mov
jl
dec
loope
pusha
int3
inc
test
subl
and
sub
test
and
fiaddl
xlat
cmp
sbb
xchg
and
xor
rolb
fcoml
outsl
fsubs
mov
cwtl
mov
in
cmp
mov
cld
rorb
xchg
call
jo
dec
dec
iretw
test
add
pusha
and
cltd
jnp
test
addr16
rclb
pop
shlb
sahf
cltd
sbb
aas
sub
mov
add
or
std
mov
and
add
cmp
and
mov
mov
and
sbb
shrb
xlat
mov
cs
xchg
cmp
push
mov
xchg
mov
ror
stos
popa
cmpsb
or
iret
add
cmp
test
loop
adc
inc
lret
icebp
je
loope
aas
jp
push
mov
pusha
shlb
dec
xchg
repnz
sub
jmp
fwait
cmp
dec
addr16
inc
mov
xor
lock
out
loopne
in
repnz
mov
sbb
add
cmp
inc
mov
lds
add
inc
or
dec
test
mov
call
and
xor
loop
out
bound
push
add
ja
mov
dec
mov
push
clc
lea
jnp
push
fbstp
repnz
sub
and
mov
or
lds
or
xchg
push
push
add
push
imul
into
jb
call
xchg
lret
mov
inc
fs
xlat
fidivrl
jl
mov
rolb
iret
inc
out
and
jo
popf
inc
repz
sar
push
push
mov
cmp
lods
vmptrld
in
xchg
mov
mov
rol
imul
xchg
jl
hlt
adc
es
icebp
sbb
jnp
call
jmp
push
mov
dec
enter
push
fdivl
insb
push
scas
outsb
out
imul
fists
push
lea
pop
hlt
pop
sbb
add
sub
pushf
dec
aas
rcrl
or
mov
loope
hlt
mov
lret
lahf
jns
dec
cmc
inc
outsb
and
int
sbb
inc
add
sub
jl
xchg
cwtl
je
push
std
aad
pushf
pop
push
push
and
imul
fimull
push
in
ret
mov
cld
lret
add
shrb
popa
sbb
mov
bound
fdivl
xchg
xchg
xchg
jmp
fwait
das
cli
cmpsb
xor
fsubl
cmp
xchg
sbb
jmp
test
test
cmp
push
inc
outsb
sub
imul
insb
fdivrs
pop
ja
xchg
add
xchg
pop
or
cli
rcrl
jle
push
jle
sbb
sarb
inc
push
pop
xor
sub
lret
loopne
add
out
insl
and
xor
lret
push
inc
mov
and
aas
xor
fucomip
dec
or
xorb
xchg
ficomps
xchg
fwait
mov
ja
adc
aam
mov
push
mov
push
int
hlt
mov
enter
into
xchg
xchg
jnp
cltd
insl
jo
enter
inc
push
or
in
in
insl
dec
xchg
push
sbb
mov
mov
xchg
pop
lods
pop
mov
mov
push
notb
ficomps
std
out
and
addr16
rcll
mov
xchg
sbb
shl
jp
add
aas
mov
in
shll
imul
sub
pop
icebp
push
arpl
outsb
je
sbb
into
push
adc
mov
sbb
cmc
imul
rcrl
pushf
testb
sbb
xor
push
inc
ljmp
aas
sbb
fs
mov
aaa
negl
clc
or
xor
inc
pop
sbb
sahf
push
and
leave
outsb
jno
jp
mov
stc
xor
fstpt
out
inc
or
mov
mov
or
mov
xor
pop
mov
subl
pop
mov
mov
movsb
fbstp
jnp
xchg
mov
into
adc
aas
insb
sbb
std
je
ret
sbb
xlat
ja
pop
notb
lea
mov
mov
or
pop
cwtl
mov
outsb
dec
push
jnp
push
add
and
int3
lods
adc
cmpl
mov
xchg
ds
inc
and
lret
rolb
pusha
sahf
dec
xor
inc
in
repz
hlt
lahf
jne
mov
pop
pop
fdivrl
xchg
cld
nop
sub
lret
push
add
mov
loopne
pusha
movb
push
ret
jp
or
leave
dec
pop
cwtl
pop
outsl
jb
cmp
rolb
add
rcll
lea
movsl
jl
pop
shll
adc
fsubl
mov
jno
sub
test
inc
mov
dec
sahf
adc
cmpb
roll
lret
into
adc
fsubs
fwait
xor
test
pop
test
cwtl
out
dec
and
xor
or
fs
notb
bound
xorl
adc
test
push
xor
mov
fcomp
jp
lret
xchg
cmpsl
or
sub
in
jo
inc
sbb
into
insb
aas
adc
xchg
xor
iret
mov
mov
mov
stc
hlt
pop
jb
je
popf
jae
inc
psubd
jb
mov
mov
mov
dec
andb
or
sbb
adc
shll
aad
or
stc
test
clc
and
mov
scas
lds
adc
aaa
orb
inc
inc
jb
push
mov
fwait
dec
sub
das
push
mov
lret
jmp
xchg
addr16
sahf
mov
inc
cmpsl
fcmovnu
ljmp
pop
insl
or
add
enter
sarl
pop
or
lds
test
icebp
in
or
cmp
insl
je,pn
andb
mov
les
mov
in
icebp
nop
mov
test
mov
test
sub
sub
gs
lcall
paddq
shl
pop
std
test
sti
xchg
cmp
inc
xchg
and
aad
cli
push
imul
mov
inc
and
in
push
mov
je
scas
test
mov
and
sarl
pop
inc
push
and
stc
push
cmp
pop
shll
xchg
or
pop
repz
pop
inc
sub
es
es
aam
dec
sbb
jb
fistpl
xchg
scas
and
outsl
push
push
jnp
sarl
dec
xor
ffreep
adc
push
cmpl
ds
add
repz
int3
jns
and
mov
pop
popa
int3
and
aaa
les
inc
jbe
ja
add
movsl
xchg
or
pop
popa
push
dec
jae
shld
dec
popf
push
jns
adc
leave
mov
mov
pop
scas
sbbl
pop
jo
sbbl
dec
sbb
pop
filds
lods
jns
in
js
sub
inc
fcoms
data16
pop
xor
sbb
out
fdivs
lock
aaa
mov
dec
ss
adc
fmull
cmp
adc
pusha
sbb
out
scas
cmp
push
mov
int3
out
sbb
jp
fmuls
bound
mov
les
jb
outsl
dec
xchg
xchg
or
jno
movb
or
repnz
mov
add
sub
and
jmp
test
cmp
sub
jae
lods
cli
out
aas
inc
and
outsb
inc
sbb
test
shlb
lods
ret
pop
mov
lcall
loope
dec
arpl
divl
mov
jne
jp
xchg
or
push
push
jo
mov
test
xlat
inc
out
jns
push
movsl
jo
aad
or
and
lret
push
sub
ljmp
xchg
xor
mov
mov
mov
imul
adc
xchg
add
out
outsb
jg
push
dec
sbb
out
rcl
xchg
fldl
push
mov
lret
add
xchg
rcr
jecxz
jmp
push
fwait
shlb
lret
ret
jle
cs
ret
lods
subl
fiadds
cli
cmp
repz
scas
iret
push
pop
and
lret
inc
cmpsb
lahf
dec
arpl
in
mov
pop
mov
lock
outsb
add
pop
or
sub
cltd
stc
outsl
and
call
xor
out
cmp
push
sbbb
clc
insl
out
mov
jo
jnp
popf
cmp
fcompl
js
lcall
fstps
shll
aaa
cltd
inc
inc
jo
test
push
jecxz
dec
fcompl
lods
rcrb
mov
xlat
das
push
repz
fidivl
adc
jno
mov
dec
aad
mov
and
subl
negb
mov
pop
jecxz
cli
mov
fsubp
jg
adc
dec
idivl
movsb
jmp
xor
push
arpl
mov
mov
pusha
xchg
test
flds
insb
in
ds
popf
pop
dec
and
push
mov
push
cmp
xchg
mov
pop
sub
inc
cmp
sbb
popa
mov
cli
fwait
lods
arpl
dec
jbe
int3
mov
mov
bound
inc
sub
loopne
mov
mov
std
sbb
xchg
insl
out
mov
lds
fwait
mov
jle
add
push
repnz
loop
leave
sbb
fcomip
add
dec
sub
dec
xchg
cmp
loope
insl
rorl
mov
cmc
gs
pop
fistps
jb
adc
stos
stos
out
and
or
movsw
push
or
or
divl
add
jg
les
or
cmc
test
icebp
mov
mov
aam
jp
sub
enter
cmpsb
add
hlt
sbb
pushf
mov
xchg
xchg
mov
cmp
xor
daa
mov
subl
hlt
mov
aas
icebp
int3
shll
adc
mov
aas
jb
add
mov
cld
jmp
push
inc
ficomps
lret
es
jecxz
andl
xchg
dec
xchg
fists
and
jg
add
clc
push
add
lret
data16
fsubr
popf
inc
and
popw
hlt
xchg
sbb
mov
adc
sub
js
sub
fldl
adc
mov
jg
jl
jb
movsb
sbb
les
pop
mov
pop
or
or
xor
inc
sbb
rcl
sbb
cmc
and
popl
sbb
add
decb
xchg
aaa
xorb
cltd
push
xchg
jle
lods
jae
loopne
loope
outsb
nop
xor
jb
movd
xor
repz
outsb
add
push
addr16
pop
dec
out
or
out
cmpb
jbe
jge
and
sahf
jg
out
mov
mov
pop
mov
dec
out
cmp
testb
insl
je
pop
jmp
fldl
pop
shlb
orl
add
aas
imul
lahf
call
mov
je
push
or
adc
ljmp
xorb
or
lret
out
push
lods
in
sbb
stos
mov
mov
outsb
leave
repnz
das
pop
inc
jp
xchg
lret
stc
leave
cs
push
sub
roll
bound
lea
push
repz
mov
rolb
aas
addr16
fstps
loopne
leave
push
sbb
cmpl
xchg
add
mov
je
jmp
pop
in
or
es
mov
ja
pop
test
inc
jle
loop
mulb
xchg
fs
cmp
sbb
pop
and
pusha
cld
inc
add
ljmp
les
cli
xchg
lret
cwtl
cmc
sub
in
insl
scas
mov
loope
push
daa
and
jmp
imul
pop
and
addr16
lods
bnd
push
data16
in
jo
lds
and
mov
movsl
push
pushf
push
dec
and
fstpl
adc
jno
shrb
in
jl
pop
push
call
gs
or
pusha
jl
jno
sub
cmpsb
jmp
jns
jnp
imul
and
movsl
inc
pusha
call
sub
xchg
dec
test
ret
mov
inc
mov
mov
mov
mov
mov
xchg
rol
lahf
clc
add
mov
xorb
popa
push
mov
enter
lea
or
rclb
loopne
and
jge
imul
xor
movsl
mov
in
nop
dec
adc
push
mov
stos
popa
enter
pop
pop
jle
lea
push
negb
and
in
sahf
aas
sti
xchg
test
stc
ds
in
loopne
jle
aaa
cmp
adc
jge
jbe
mov
push
dec
in
and
pusha
xchg
loope
cld
lret
xchg
movsl
aam
fidivs
data16
test
mov
mov
mov
enter
xchg
dec
out
cmpsb
jo
dec
leave
push
push
leave
sub
push
loopne
jmp
jne
pusha
jb
xchg
movsl
push
cs
jns
js
std
aam
xchg
in
pop
xchg
pop
testl
mov
xchg
mov
lods
clc
jg
popf
lahf
repnz
mov
iret
xor
mov
adc
call
jbe
and
jnp
inc
mov
sbb
or
into
les
xchg
imul
pop
or
xlat
aas
insl
dec
js
jne
idivb
pop
das
fwait
nop
pop
lahf
aas
insl
jecxz
imul
stos
hlt
push
les
test
fdivs
xor
and
mov
push
and
adcl
je
shlb
xorl
mov
jle
inc
stos
pop
mov
loop
sarl
int
sub
fstpt
adc
push
and
lahf
cli
mov
ret
adc
jno,pt
rep
or
test
push
xor
dec
or
repz
inc
sbb
xchg
cmp
shrl
xlat
inc
mov
orl
clc
xchg
adc
in
xchg
pop
jo
jmp
sub
mov
sbb
rorb
les
lret
subb
push
inc
add
sbb
pop
push
pop
repz
movsl
mov
dec
mov
sub
jecxz
fs
mov
in
jno
pop
ss
in
hlt
test
cmpsl
out
pop
cmc
in
outsl
arpl
lods
stos
pop
sub
dec
push
popa
mov
pop
ja
jbe
inc
xor
pop
pop
add
out
test
cwtl
loop
pop
ficoml
daa
add
xchg
fimull
sub
shll
movsl
iret
mov
sub
and
stc
outsb
clc
mov
shl
jmp
les
movsl
cmpsl
mov
xchg
xor
cli
jmp
cmpl
das
sbb
jmp
addr16
jno
pop
sbb
push
push
inc
les
scas
insb
inc
jae
adcb
outsl
push
xchg
jo
add
push
xchg
mov
jge
mov
push
cmpb
mov
das
pushf
int
jecxz
dec
cmp
mov
roll
mov
add
push
shll
sub
sub
add
pop
insb
sub
inc
pushl
or
cmpsb
xchg
in
fisubs
dec
lahf
fiadds
jno
aam
mov
repz
in
or
popa
push
fs
jl
pop
sub
and
ds
cmp
insb
jmp
or
inc
inc
sbb
mov
dec
xchg
out
push
sbb
insb
mov
ficoms
callw
push
es
test
xchg
and
bound
loope
leave
push
or
mov
pop
sub
std
test
mov
addb
lahf
sbb
mov
mov
fbld
add
and
arpl
xchg
mov
fsubl
mov
andb
and
xchg
push
adc
dec
adc
dec
sbb
or
sbb
ja
leave
adc
cld
popa
sbb
bound
out
xlat
or
inc
aas
enter
scas
lret
les
in
fwait
xchg
jnp
xchg
xchg
mov
cmpsl
sahf
fcoml
pop
in
push
xor
pusha
inc
fwait
ds
pop
popf
rol
dec
pop
adc
andl
inc
fisttps
jo
sbb
fs
xchg
mov
ljmp
rcrl
xchg
add
sbb
shrl
adc
scas
lcall
enter
fadds
cs
ja
dec
arpl
roll
sbb
out
out
in
cmp
or
mov
ret
jg
aad
mov
mov
adc
inc
aam
loop
push
cmp
scas
in
lcall
pop
mov
and
lret
mov
addr16
scas
je
push
popa
hlt
dec
mov
into
cmc
cltd
xchg
sub
cmc
push
or
enter
or
ret
call
pop
out
add
cs
test
mov
in
out
out
mov
pop
sub
pop
adc
pop
es
add
cmp
out
sbb
cld
enter
push
adc
test
fbld
and
mov
sti
cmpsw
xlat
mov
add
clc
dec
je
test
out
inc
cmp
or
pop
movsl
imul
mov
insb
push
xchg
inc
out
pop
xor
mov
sti
out
jo
std
jmp
lret
aaa
dec
cs
scas
mov
mov
push
popf
mov
stos
or
into
xlat
sub
xchg
mov
stos
adc
int
adc
jb
push
push
ja
xor
int
xchg
xor
and
jnp
fidivs
es
add
fnstsw
mov
out
loope
es
add
insb
das
dec
sub
iret
jno
jne
and
push
test
icebp
xor
dec
xchg
cmpsb
fdivrs
cli
hlt
insl
fisubrs
popf
cmp
ljmp
or
icebp
mov
or
cmp
in
fstpl
pushf
push
out
into
in
mov
daa
mov
adc
fisttps
push
ljmp
stos
decb
insb
push
xchg
lds
pop
pop
popa
repz
popf
push
movb
mov
xor
leave
in
mov
add
js
leave
jo
popa
jbe
adc
sub
xor
push
fcomi
pop
sbb
jle
notb
scas
sti
in
insl
sbb
sbb
stos
cmp
hlt
or
movsl
in
sarb
or
popa
xchg
sbb
mov
lock
jns
int
cs
sahf
push
cmp
outsb
cmp
jmp
ret
sub
lods
lock
repz
and
orb
mov
adc
xchg
xor
idiv
stc
mov
mov
iret
movsl
aas
add
or
sub
cmp
daa
ljmp
fnsave
lcall
dec
sub
mov
mov
cmc
push
mov
jecxz
or
sbb
mov
fucomp
hlt
mov
aad
cmpsb
mov
push
cmp
mov
cmp
jge
mov
xchg
jl
popf
je
jbe
pushf
sub
sub
aam
push
sbb
xor
out
iret
xchg
lret
mov
subl
enter
push
inc
sbb
xchg
fldl
mov
cli
jno
xchg
dec
icebp
dec
sub
es
cld
or
adc
bound
in
mov
xchg
pop
xor
cli
jmp
jl
ss
jl
out
jmp
sbb
dec
stc
jmp
push
cmp
sub
ret
lret
stc
fs
out
mov
push
call
inc
sub
pop
push
mov
mov
fsubrl
dec
fsubrs
sub
lret
adc
in
ss
mov
push
ds
mov
xchg
into
inc
je
sti
jae
addb
insb
fs
xlat
cmpsb
mov
mov
push
xor
push
je
test
mov
push
xadd
xchg
lret
icebp
push
pop
and
test
adcl
mov
hlt
mov
mov
fldcw
sahf
cmc
fnstcw
inc
mov
xchg
test
divb
dec
fistpll
pushf
cmc
adc
ja
lret
mov
or
je
or
mov
insb
mov
lcall
js
insl
sarb
push
dec
dec
lret
pop
subl
mov
stos
xor
ror
xor
or
sub
ja
mov
cltd
rcrb
xor
out
pcmpeqd
fwait
mov
sbb
push
in
rcll
cmc
int
and
and
insl
adc
add
mov
nop
push
push
pop
inc
in
jmp
push
xlat
mov
jmp
insl
xchg
aam
mov
mov
dec
add
es
out
dec
popf
xchg
and
and
test
mov
lods
pop
lahf
add
ficomps
adc
fnsave
sbb
sub
insb
rclb
je
loope
and
call
ret
xchg
sahf
fmull
add
int3
xor
xor
dec
adc
shr
or
pushf
sub
sub
pusha
add
icebp
dec
fildll
sub
jle
int
and
pushf
leave
sbbb
js
inc
lret
xchg
imul
push
push
fists
out
pushf
ds
xchg
test
idivl
xchg
adc
test
jle
mov
sub
testb
add
sbb
cmp
pop
and
aas
lods
adc
fcompl
xchg
xor
fistps
lds
in
fcompl
cmpsl
fbld
push
in
or
inc
int
out
in
jecxz
xchg
push
mov
inc
sbb
js
in
movsb
sbb
loope
jp
and
out
inc
mov
movsb
adc
lret
repnz
imul
rorb
lret
outsl
cltd
sti
cld
add
repnz
out
xchg
adc
movsl
mov
fs
ret
popf
mov
mov
bound
and
rcl
aaa
jbe
and
enter
ficompl
xor
push
jb
rorb
pop
pop
addr16
ss
push
pop
sbb
and
movsl
jle
sbb
les
mov
sbb
push
and
popa
sahf
insl
add
sub
stos
pop
cmp
mov
jbe
rclb
and
and
int
inc
inc
popf
push
jo
mov
sahf
shlb
lahf
xchg
outsb
aad
imull
call
jle
fldenv
insb
lock
mov
adcl
jl
ret
pushf
fldl
int
iret
mov
outsb
fcomip
imul
inc
cs
inc
iret
dec
hlt
adc
test
adc
test
ljmp
mov
scas
push
inc
pop
dec
sbb
sbb
xchg
stos
cmp
clc
cli
pop
mov
pop
and
nop
aaa
rcll
hlt
daa
add
mov
out
mov
lds
pop
test
fsubs
sarb
in
out
pop
jo
push
pusha
mov
sub
gs
mov
jl
sarb
mov
mov
fucomi
xchg
pop
pop
mov
lahf
xchg
into
jmp
mov
sub
fldt
sub
insl
sub
jb
lds
push
push
mov
mov
je
pop
out
pushl
loope
mov
shrl
data16
sbb
mov
dec
mov
adc
push
test
mov
stc
and
and
cli
cmp
xchg
or
cs
xchg
push
fists
int
loop,pn
lahf
out
and
dec
stc
testb
cmpsb
add
push
lcall
and
psrad
xchg
xchg
out
pop
adc
decb
mov
in
out
scas
testl
aas
jl
xchg
adc
push
imul
add
data16
add
mov
or
add
mov
cmp
js
dec
push
cmp
call
pop
pop
cmp
repnz
pop
jg
xchg
push
or
fmull
push
jae
jl
pop
lret
inc
inc
in
outsl
stc
cmpsb
xchg
mov
fmulp
mov
mov
call
add
jg
in
pushf
xchg
sub
pop
inc
xchg
xchg
cmp
pushf
pop
jae
orl
or
xor
inc
lcall
adc
call
pop
mov
mov
cld
mov
je
fwait
pop
inc
sar
mov
inc
inc
cmpsl
leave
xchg
in
dec
pop
rcrl
pop
xor
xor
fldenv
bound
lods
pop
aas
push
test
mov
sti
shrl
cltd
jge
sub
mov
pop
mov
out
adc
xchg
lds
push
test
clc
pop
or
cmp
cs
insl
push
shl
loop
ds
push
les
xchg
jge
pop
mov
loope
mov
addr16
and
jl
ror
xchg
ljmp
sub
cs
out
inc
xor
pop
mov
push
pop
or
push
stos
xchg
inc
pop
das
leave
sub
pop
push
jne
int3
dec
fisttps
sbb
xchg
idivb
inc
dec
stos
movsb
mov
mov
pop
add
das
push
inc
mov
xchg
jnp
mov
popa
sarl
jae
push
sbb
and
mov
and
stos
les
cmp
aam
clc
cltd
ljmp
dec
mov
ret
sbb
lret
mov
add
lods
and
mov
ja
scas
or
mov
push
xchg
dec
push
stos
outsb
push
xchg
cmp
test
testb
mov
push
test
jns
fcompl
fsubrs
ret
lds
mov
xor
vshufps
aaa
mov
ljmp
ja
sub
mov
in
fstl
xor
jp
dec
jbe
jg
out
jle
sbb
out
sub
movsb
mov
les
jnp
add
cs
inc
jae
enter
dec
fdivrl
lahf
in
pop
flds
es
cmp
push
jne
and
jl
aam
inc
in
push
repz
push
push
ret
test
cmp
loop
sbb
hlt
rolb
jne
and
mov
movsl
or
sbb
jae
mov
shl
pop
dec
mov
jbe
xchg
cmpl
pushl
lods
jne
xor
or
jo
dec
jle
out
push
inc
dec
aaa
sub
add
pop
sub
subl
jg
in
xchg
add
mov
iret
add
mov
mov
fists
or
and
ret
push
scas
pop
aam
insb
fists
das
sahf
shl
inc
add
out
fmull
movsb
or
ja
inc
sbbl
arpl
fiadds
sub
or
push
xlat
into
rcll
cmc
push
xchg
outsl
cmp
loop
mov
movsb
push
andl
mov
cmc
orb
int3
lret
arpl
dec
xor
sbb
aas
or
cld
pushl
enter
icebp
mov
into
inc
scas
inc
ljmp
add
add
mov
icebp
data16
sbb
push
dec
in
lret
jb
pop
out
ja
cmpsb
cld
jbe
call
pop
aam
fwait
je
jmp
test
push
push
sub
cmc
clc
cli
inc
call
sub
mov
sub
movsl
push
icebp
pop
xlat
xchg
outsl
movb
rcr
and
inc
daa
lock
fldl
cltd
loop
les
in
push
mov
sub
xchg
xchg
mov
adc
icebp
pop
adc
movsl
jae
and
jmp
sbb
inc
mov
leave
data16
cmp
cmpl
sarb
jmp
mov
xchg
and
push
out
js
fisubs
dec
jbe
aaa
stos
pop
shll
shrl
mov
xchg
out
sahf
lods
lds
sbb
inc
jle
aad
pop
repz
inc
mov
in
loop
mov
int
fpatan
mov
dec
lret
lret
mov
add
mov
dec
jne
out
out
fidivrl
inc
jns
test
jb
sbb
leave
int
xor
xchg
cmc
imul
out
jne
inc
divl
and
stos
fld
jns
cwtl
xlat
mov
push
stc
xchg
popa
out
xchg
sbb
xor
ss
mov
repnz
js
or
dec
and
fdiv
sbb
insl
mov
adcl
push
popf
lcall
inc
jle
mov
repz
int
cli
jne
test
daa
mov
inc
mov
and
inc
lds
sbb
ljmp
insb
imul
in
imul
sti
rcrl
inc
mov
popf
std
xchg
cmp
mov
cmp
scas
or
imul
pop
cmp
fstpl
jnp
pop
cwtl
adc
jns
out
add
insb
lods
bnd
ja
lret
fnstenv
js
cmp
cmp
jmp
hlt
test
cli
mov
inc
dec
test
sub
sbb
outsb
mov
push
add
pusha
push
int
aad
push
sti
pop
jae
push
cs
mov
bound
xchg
fs
iret
xchg
jp
mov
adc
cli
fcompl
insb
mov
movsb
shrl
mov
push
in
es
sub
push
push
ror
inc
mov
xchg
inc
mov
adc
adc
add
lahf
test
pop
lods
xchg
push
test
addr16
clc
mov
or
insb
sub
lret
mov
ljmp
jecxz
clc
inc
add
and
inc
ja
outsl
repnz
enter
stc
inc
loopne
xchg
and
xlat
hlt
add
stos
arpl
clc
inc
ficomps
hlt
jbe
sub
adc
adc
gs
rcl
adc
push
fwait
mov
and
aas
push
mov
aaa
subl
scas
inc
cmp
and
xor
je
mov
pop
int
push
push
int
mov
cmpsb
in
dec
lods
and
dec
add
xchg
push
pop
xor
xlat
test
mov
lds
add
add
das
popl
in
jns
sub
pushl
lret
push
or
cltd
ret
pop
pop
add
pop
les
repnz
out
fnstenv
sti
movsl
bound
lret
cwtl
xor
sbb
push
int
cmp
roll
and
sub
ljmp
push
cmc
insl
push
mov
jle
in
and
mov
ds
mov
mov
mov
push
sbbb
or
lret
adcl
jp
xor
push
aas
inc
xchg
in
scas
jl
pop
push
mov
sbb
repnz
adcb
insl
cwtl
sar
add
std
and
mov
jnp
orb
jbe
inc
loop
aam
imul
lods
mov
jmp
xor
les
mov
cmpsb
jecxz
pusha
mov
mov
lods
out
sub
add
ret
lret
pushf
rorl
scas
insl
scas
push
mov
and
mov
add
mov
pop
xor
jae
mov
lods
mov
inc
in
das
mov
popa
sbb
mov
add
dec
pop
pop
push
add
sbb
stc
cmp
or
in
jmp
sub
xor
iret
sub
das
mov
mov
inc
lcall
push
sahf
cmpsl
xor
jb
xor
movsl
cmp
sti
mov
adc
test
xor
fwait
popf
addb
daa
addl
outsb
mov
stc
sub
es
xor
jae
shl
adc
or
pop
xchg
cmp
fcoml
int
out
lea
lods
inc
pop
pop
cmpsl
or
aas
sub
sbbb
push
push
jno
incl
test
push
pusha
and
mov
insb
adc
nop
insl
xchg
dec
je
data16
dec
mov
or
out
cmp
scas
adc
dec
mov
mov
xchg
outsl
aad
lea
mov
mov
push
cmpsb
iret
les
ret
loopne
cmpsl
adc
cmp
mov
pop
fsts
xchg
push
mov
sub
cmp
sub
popl
rorl
inc
mov
addl
ds
popf
jg
adc
xchg
das
mov
daa
pop
aad
dec
testb
mov
loop
xchg
outsl
dec
sub
pop
cmp
pop
push
repz
shrl
inc
cmc
iret
mov
retw
iret
and
xor
scas
aad
push
enter
mov
xchg
pop
xchg
loopne
aas
sahf
test
mov
mov
stos
fldl
lahf
sbb
jecxz
inc
mov
nop
aas
dec
adc
ds
mov
movsl
sub
and
lds
cmp
std
mov
test
pop
or
fsubrs
iret
add
push
pop
cmp
jl
pusha
call
repnz
shrl
or
das
scas
leave
and
add
sbb
cs
add
mov
test
pop
stos
push
ja
sbb
mov
pop
jle
jg
and
pop
jns
iret
iret
movsl
comiss
xor
dec
mov
jae
fiadds
pushf
mov
mov
sub
inc
out
cmp
mov
test
shrb
and
maxps
int
inc
xlat
pop
xlat
sub
xor
loope
cmp
mov
sub
mov
dec
dec
jl
inc
sbb
jp
pop
stos
xchg
pop
hlt
in
lret
push
inc
mov
jp
pop
mov
xchg
add
fistpll
lods
cmp
orb
fs
sbb
je
mov
imul
into
call
push
gs
or
fcoms
mov
and
push
dec
daa
and
adc
pop
popl
or
loopne
mov
fisttpl
sub
daa
mov
inc
ja
cmpsl
fistl
jmp
jo
jmp
mov
rclb
mov
mov
rcl
adc
jle
pop
out
xchg
fmull
jne
fwait
inc
bound
out
outsb
mov
jmp
out
mov
sbb
cmp
ffreep
sbb
jo
pop
stos
jno
test
subl
sarb
mov
pop
call
filds
filds
rcll
cmpsl
sub
inc
xchg
test
cmp
jle
mov
pop
nop
and
outsl
ja
push
lahf
mov
sbb
popf
popa
std
or
pop
pusha
std
daa
mov
cmpsl
lret
outsl
icebp
test
shll
mov
or
xor
adc
clc
mov
fisubrl
inc
inc
loop
into
test
sbb
in
adc
mov
out
add
popf
push
roll
stos
xchg
mov
cmpsl
add
push
mov
add
push
cli
pop
es
cmpsb
jne
and
adc
or
rcrl
lds
bound
mov
push
aas
lret
loop
adcb
faddl
pop
push
mov
dec
xlat
push
mov
dec
xorb
push
fiaddl
xchg
je
int
aaa
fwait
jmp
ja
insb
dec
cmp
sbb
xchg
dec
push
cli
mov
adcb
sub
inc
xchg
xchg
pusha
out
dec
out
mov
scas
mov
mov
mov
cltd
push
addr16
inc
int
adc
add
out
mov
mov
push
add
les
ss
or
daa
insb
sub
pop
imul
sbb
movsb
pop
lcall
leave
pop
and
ss
xchg
call
loopne
les
lods
mov
movsl
ret
jno
lds
sbb
lcall
mov
jp
push
jne
mov
pop
lcall
xchg
jge
popa
push
lret
jbe
call
repnz
sbb
mov
inc
rol
mov
xchg
mov
inc
movsb
sub
inc
movb
gs
add
ljmp
in
jge
hlt
push
mov
into
sbb
adc
inc
addr16
jns
pop
add
adc
in
popa
sub
outsb
jns
xor
sbb
cmc
cltd
jb
dec
mov
ret
test
in
push
mov
mov
pop
cmp
xchg
pop
pop
loop
add
jl
rcl
ja
and
idivl
lods
loopne
test
and
lahf
aaa
jl
dec
les
fwait
mov
lahf
cmp
mov
add
sbb
enter
lcall
pushf
repz
mov
cmp
adc
cwtl
mov
xor
push
mov
pop
fs
and
outsl
jbe
pop
lods
jnp
or
into
adc
sub
lret
sbb
mov
mov
clc
nop
sub
mov
movsb
shr
dec
and
cs
mov
push
outsb
dec
xchg
cwtl
cmp
lret
add
out
pop
xor
cmp
inc
stos
mov
sub
imul
fcoml
ds
xchg
out
pop
sub
sar
aaa
lahf
adc
sarb
dec
inc
pusha
xor
bound
shl
mov
ret
add
setne
loopne
fistl
add
xor
clc
into
frstor
mov
das
add
jne
js
push
fadd
icebp
mov
call
sbb
pusha
dec
icebp
bound
xchg
cmp
dec
cmp
lods
cmp
lcall
xor
sub
inc
rcll
sub
movsb
jle
roll
sub
and
sbb
xchg
test
cmc
cltd
ss
jb
mov
scas
add
pop
pop
push
and
daa
adc
in
push
jp
push
xchg
sti
testl
inc
dec
cld
loop,pt
std
cmpsl
in
movsb
ds
enter
fsubl
xor
add
sbb
aaa
out
int
lds
or
dec
add
pusha
sahf
cmp
sbb
in
jbe
mov
je
and
fbstp
cltd
jg
xor
xor
lds
ret
and
add
xor
adc
mov
jp
xchg
mov
sahf
test
loop
pop
std
lret
aas
jnp
sbbl
mov
cmp
pushf
cltd
xor
xlat
xchg
cmc
xchg
or
jnp
inc
xor
inc
and
sahf
sub
lret
mov
stos
mov
stos
test
mov
mov
dec
inc
mov
pop
mov
pop
test
or
mov
dec
add
xchg
or
dec
testl
test
loopne
lock
jp
fiadds
js
xchg
inc
int
add
lret
out
adc
jae
adc
lret
aad
mov
or
sub
cmp
ljmp
cmc
fdivs
das
out
es
das
sbb
ja
mov
movsl
mov
cmp
movsb
sub
cmp
scas
dec
outsl
data16
int
in
inc
outsl
sbb
out
je
jge
aad
push
xor
jl
cmp
adc
jo
ret
fstpt
and
cmpsl
popa
inc
cmp
mov
int3
mov
addb
arpl
decl
ljmp
notl
add
push
inc
sub
push
or
pushf
push
ret
dec
mov
pop
ret
in
jb
xor
mov
mov
in
pop
mov
ret
jmp
adc
mov
movsb
jg
push
pop
inc
clc
lcall
shr
xor
cltd
xor
inc
push
mov
adc
push
enter
xor
xor
jmp
xor
and
jl
lea
idivb
fildll
pop
js
popf
jbe
pop
or
sub
xor
push
divl
scas
jecxz
jnp
push
faddl
stc
test
lcall
pop
add
std
loope
arpl
mov
js
ret
xor
rclb
cmp
sbb
fs
pop
xor
sbb
imul
dec
roll
sbb
repz
jb
add
shll
jl
pop
pusha
mov
pop
inc
jle
dec
ret
leave
data16
lods
rolb
push
pusha
flds
or
inc
lods
es
repz
adc
sbb
dec
or
mov
test
iret
push
test
rcrb
out
clc
cmp
or
orl
outsl
repz
ljmp
add
idivb
xchg
mov
dec
mov
xor
cli
or
inc
lcall
jl
popf
addr16
sbb
mov
sti
adc
shrl
fistps
push
into
xchg
pop
data16
fs
or
mov
jmp
cmpl
fs
ret
neg
push
cmp
loop
cmp
cmp
popf
test
jo
mov
adc
pop
xchg
dec
arpl
in
jno
js
test
lcall
daa
imul
pop
adc
fcoml
das
add
xor
in
xchg
dec
cmpsl
mov
in
fs
mov
sub
aas
sbbb
out
and
out
pop
sbb
inc
stos
xor
out
aad
nop
xchg
push
icebp
adc
jb
xor
out
mov
fdivrs
push
mov
outsb
jbe
dec
push
sub
mov
outsl
scas
call
push
or
in
and
movsb
mov
mov
jl
lret
cmc
repnz
popa
mov
movsl
pop
stos
scas
adc
hlt
fldenv
xchg
dec
adc
ljmp
pop
mov
add
cmp
dec
sub
pop
call
lcall
push
call
lret
shll
inc
xlat
push
mov
lock
inc
or
les
les
sub
cli
lret
outsb
cmp
sub
fistpll
inc
lret
mov
cmp
dec
adcl
add
adc
pop
pop
cs
sahf
dec
test
add
rcrb
std
lods
pop
inc
push
mov
std
add
push
sbb
fistps
mov
mov
and
sub
outsl
sbb
sub
lcall
les
cmp
js
sub
mov
scas
xchg
rolb
pop
sub
or
into
xor
pop
add
nop
in
fucom
pop
cmp
repz
loop
cmp
mov
sbb
xchg
sub
out
xchg
sbb
insl
pop
out
pop
xchg
js,pt
cwtl
pop
fistpl
push
push
loop
add
nop
or
mov
jns
cli
cli
loope
jo
mov
push
mov
cwtl
lds
adc
aam
das
aas
cmp
cs
cli
rcll
mov
or
sbb
push
andb
neg
mov
mov
mull
mov
ret
lahf
imul
sub
les
call
lret
mov
or
daa
mov
cmovno
arpl
rcll
cmp
cmc
repz
cmp
cs
je
xor
mov
push
ret
in
notl
jb
xchg
scas
lods
test
jne
xor
push
imul
scas
das
dec
mov
addl
xor
sbb
mov
mov
inc
dec
pop
test
xor
jl
mov
rol
pop
pop
cmp
in
sbb
and
bound
ret
gs
adc
notl
mov
push
pushf
ljmp
dec
loope
mov
out
mov
into
xorl
dec
xchg
xchg
movsb
outsl
fidivrs
out
jb
call
pop
ss
mov
imul
adc
mov
std
and
xor
or
aaa
mov
adc
adc
outsl
adc
mov
push
jle
mov
icebp
jg
mov
shl
inc
jp
rcrl
addr16
lods
stos
mov
sub
test
div
sub
iret
sbb
icebp
add
pop
outsl
scas
push
inc
adc
or
lods
sub
push
stos
leave
or
or
jne
jb
mov
mov
test
cmp
mov
mov
cmp
add
clc
cmpsb
mov
aad
out
stos
loopne
subl
inc
jg
xchg
add
das
int3
jne
add
mov
sbb
rclb
jo
loop
push
and
std
mov
jno
testb
xchg
lock
sbb
sub
inc
leave
jecxz
inc
inc
test
nop
xchg
movsl
inc
dec
sub
clc
xor
insb
fsubl
mov
fcoml
ja
jae
or
les
jp
xor
and
jge
out
daa
adc
push
mov
stos
jae
mov
sbb
nop
in
loope
mov
push
dec
jge
sbb
push
inc
mov
jae
rcll
imul
loop
lret
fcomp
xchg
sbb
add
clc
mov
ss
xchg
sbb
push
leave
and
arpl
out
dec
jne
xchg
fimull
bound
rol
loop
jb
jp
pusha
cmp
adc
into
lret
cwtl
bound
pop
dec
shll
mov
adc
jae
or
aas
cwtl
mov
mov
sbb
popa
add
clc
insl
loopne
arpl
out
mov
aam
mov
fadd
xor
in
mov
sbb
dec
jae
dec
pop
into
fsubr
push
mov
pop
sar
xor
push
adc
mov
dec
sub
into
inc
dec
das
push
sub
clc
sahf
stos
adc
loopne
movsl
cmp
cmp
adc
mov
inc
jmp
adc
pop
mov
mov
popf
mov
cmp
pop
pop
loopne
mov
inc
shll
and
out
movsl
push
int3
jne
inc
jae
sub
xorl
cltd
jbe
fdivrp
cmp
xchg
lahf
loopne
shll
call
push
ret
sbb
subb
fwait
sbb
shlb
cmp
inc
mov
and
call
pop
data16
outsl
pop
xorb
mov
cmc
pop
adc
dec
xor
xchg
pop
sub
clc
add
cmp
jg
lods
fisubs
pushf
mov
inc
mov
inc
inc
outsl
pop
sub
xchg
or
movsl
jbe
pop
out
inc
pop
rorl
jno
mov
addr16
mov
xor
je
dec
and
jmp
sub
sbb
and
into
pop
ror
dec
movzwl
and
pop
cmpsl
mov
sub
add
fwait
xchg
loope
mov
hlt
fninit
mov
into
pop
dec
cmp
cmp
in
adc
jb
dec
mov
or
data16
outsb
mov
sbb
mov
incb
and
xchg
cmc
mov
mov
in
mov
xor
xor
lret
lahf
push
xchg
mov
mov
pop
out
push
shll
push
push
mov
dec
imul
mov
aaa
cli
push
cs
fistps
jo
xlat
inc
mov
mov
out
in
xchg
pusha
inc
inc
pop
push
ret
dec
fs
mov
out
pusha
lcall
jae
lods
lds
frstor
xor
das
cmp
add
xor
ret
shrl
sbb
sahf
insb
popf
and
je
out
jg
lods
jnp
in
test
fnsave
xlat
test
jp
jnp
mov
cmova
pop
push
sbb
jl
popf
shrl
insl
mov
or
push
jno
cld
arpl
pushf
addr16
andb
or
adc
or
sbb
iret
fucomp
xchg
es
aaa
jnp
sahf
stos
xchg
mov
xor
popa
das
ljmp
push
mov
test
int3
cmp
push
and
sbb
scas
jnp
sub
cmp
out
test
fdivr
div
and
or
xchg
add
insl
xchg
inc
sub
adc
pop
and
arpl
and
mov
jb
xor
jp
jl
mov
inc
pop
pop
std
std
clc
in
mov
in
mov
mov
inc
inc
scas
xlat
adc
or
xor
cwtl
and
mov
js
jl
jo
mov
mov
push
lods
loopne
mov
and
dec
mov
sub
adc
fld
cmpsb
cmp
ds
gs
xchg
cmp
xor
js
movsl
pop
mov
mov
inc
out
popf
or
enter
xchg
mov
adc
xor
pop
cmpsl
aam
mov
sbb
pop
jecxz
lea
aam
test
mov
fcompl
in
dec
sub
int
sub
fs
mov
pop
js
jnp
or
jbe
sub
push
xchg
lods
jle
test
mov
out
dec
repnz
push
scas
cs
mov
pop
je
dec
dec
addr16
roll
loope
inc
je
inc
xor
inc
mov
adc
ret
aaa
stc
lods
lock
out
out
and
and
jge
mov
cld
aad
or
xchg
cmp
clc
stc
mov
jo
test
add
sbb
sub
dec
cmp
ficompl
dec
scas
rcrl
scas
fwait
mov
es
iret
xor
mov
sbb
sahf
outsb
shl
sub
nop
aaa
loop
xchg
or
xor
push
mov
test
roll
xor
pop
shll
sub
xor
pusha
fwait
mov
pop
xchg
xchg
push
dec
mov
xchg
shlb
mov
nop
mov
mov
push
cs
inc
sub
stos
fwait
std
data16
cmp
adc
stc
cmp
addb
xor
bound
jne
bound
adc
and
pop
shlb
test
js
incl
cmp
decb
in
jle
xchg
xor
add
jb
push
adc
or
ds
lock
or
test
add
pop
je
push
jne
addr16
adc
out
dec
les
cld
in
add
mov
mov
xchg
mov
mov
fadds
ss
jno
aaa
ficomps
fadds
stc
and
dec
js
mov
pop
sbb
test
stc
out
dec
adc
jo
sub
out
sahf
dec
ret
dec
filds
push
jmp
push
cmp
jno,pt
fldcw
xchg
rolb
xor
popa
cmp
sub
jle
shlb
ret
das
xor
sahf
bound
aas
mov
mov
lret
iret
mov
movsb
leave
cmc
xor
mov
dec
mov
mov
xchg
movsb
or
xor
subb
xchg
mov
push
imul
and
dec
push
js
jl
fistpl
sub
adc
rorl
xchg
std
adc
rep
aaa
test
adc
mov
pop
jge
ljmp
imul
push
xor
call
mov
inc
fsubrl
outsl
or
mov
in
jge
popf
sbb
icebp
xor
jns
inc
mov
pop
dec
sbb
subb
lods
mov
mov
mov
adc
pushf
push
std
sbb
sar
or
adc
xchg
lret
adc
lret
push
sbb
and
pusha
xor
mov
call
cmp
fsubs
adc
mov
stos
add
ret
mov
cmp
dec
ljmp
mov
xchg
inc
mov
push
stos
sub
imul
jmp
imul
jp
in
push
adcl
xchg
in
popa
lahf
in
je
and
dec
mov
popf
jb
add
test
mov
fnstcw
outsl
stos
aad
divl
jp
mov
cld
xchg
in
xchg
mov
ds
sub
lahf
jmp
in
outsb
bound
mov
push
cmpsl
pop
xchg
sub
mov
lods
xor
sbb
xchg
jmp
dec
out
mov
push
pop
cs
sbb
add
cmp
dec
sbb
xor
push
mov
cwtl
popa
dec
cld
jo
push
sarb
and
in
inc
xchg
aad
or
aam
mov
les
lods
xorl
cmc
mov
out
sarl
xchg
inc
pop
push
mov
cmp
cli
xorb
xchg
adc
lea
sbb
mov
jmp
fbstp
insb
shll
shll
push
lods
dec
adc
popa
mov
out
daa
push
xor
jp
clc
ss
in
mov
fwait
mov
std
and
or
mov
sbb
jle
outsb
jge
iret
cs
rcrl
push
stos
outsb
jle
or
fistpll
or
sub
mov
int
lret
push
sbb
cmp
mov
mov
sub
rclb
ja
mov
gs
icebp
call
sub
jmp
mov
cmp
jne
ret
sub
pop
fidivrs
push
jmp
push
data16
insl
scas
jge
mov
stc
dec
fcomps
das
dec
adc
roll
pop
mov
adc
cmpsb
jb
call
and
imul
push
call
jmp
push
mov
adc
scas
mov
clc
pop
sarb
jb
enter
fsubrl
xchg
fs
sti
cmp
pop
dec
rorb
test
std
jbe
push
jnp
jl
hlt
inc
cmp
jo
outsl
loopne
enter
jo
rcrb
in
inc
inc
sbb
rclb
sbb
test
fs
mov
xor
pop
int
in
sbb
add
jno
mov
sbb
pop
js
inc
sub
adc
imul
insl
xchg
jno
pushf
mov
add
lds
test
sahf
lcall
test
rolb
xchg
out
inc
push
ja
stc
rcrl
xchg
xor
jae
cmp
in
jp
ss
data16
adc
fdivl
inc
or
lods
gs
rorl
pop
andb
loop
lock
gs
fisttpll
cmp
xor
loop
jo
jl
ljmp
imul
add
aad
add
das
sub
pop
or
and
ds
sahf
mov
das
pop
lret
push
pop
sbb
ss
inc
movsb
fwait
pop
sti
push
addr16
and
popf
cld
jmp
fs
push
jmp
aaa
mov
stc
mov
jle
lret
add
and
mov
iret
push
bound
and
add
out
cmp
or
add
mov
lret
jae,pn
shll
jecxz
or
and
dec
nop
sbb
xchg
jb
es
sub
sahf
adc
imul
pop
xor
mulb
or
or
pop
sub
lcall
mov
insb
fdiv
lock
ljmp
movsl
lcall
notb
fmuls
adc
fsub
jge
in
dec
scas
sahf
les
push
inc
pop
cmp
pusha
fmull
jmp
scas
scas
dec
cmp
es
in
shl
jp
mov
fs
xchg
jae
lahf
or
aas
jp
int
test
js
out
add
dec
sbb
mov
fcom
pop
fdivrl
out
pop
mov
cmp
cmpps
and
shlb
cmp
das
jae
mov
pop
lock
cwtl
dec
mov
fcmovbe
sbbb
repz
cmc
push
xor
aam
fwait
adc
stos
pop
and
mov
adc
mov
jge
pop
subl
shll
mov
ret
dec
push
lahf
cmpsb
jecxz
fs
repnz
in
adc
gs
test
sahf
jo
mov
ds
jmp
xchg
xchg
jp,pn
popf
mov
dec
mov
mov
dec
mov
outsb
mov
in
mov
popa
mov
adc
iret
or
jg
insl
mov
testb
xchg
xchg
jmp
cld
xlat
fcoms
or
dec
xchg
push
pusha
insb
addr16
xor
cmp
pop
ret
mov
jge
aas
mov
insl
push
jno
push
dec
out
adc
outsl
cwtl
xchg
stc
inc
js
iret
clc
insb
jae
adc
sbb
sbb
inc
sahf
push
arpl
andl
and
nop
xlat
mov
pop
scas
out
scas
frstor
pop
jge
in
fwait
or
adc
out
shll
outsl
cmpsb
add
push
cwtl
pushf
mov
fistl
cmc
cmp
in
in
pop
add
xorb
xchg
jmp
aad
sti
outsl
imul
fwait
adc
inc
jl
ret
adc
mov
add
stos
out
and
push
mov
mov
dec
and
dec
lea
les
movsb
repz
jp
out
fimuls
inc
dec
scas
test
pop
add
aas
pop
jl
inc
or
fdiv
mov
mov
mov
add
or
lds
mov
adc
and
add
or
inc
pop
push
xlat
adc
imul
xchg
jae
les
test
enter
sar
into
xor
or
popf
or
mov
dec
mov
sti
jp
and
fbld
or
mov
movsb
add
hlt
cmp
into
cmc
and
nop
mov
mov
jae
subl
cmp
inc
xlat
mov
js
xor
push
inc
out
es
fcompl
adc
hlt
insl
lods
clc
mov
mov
or
add
inc
ret
jne
testl
not
jmp
xor
push
mov
repnz
int3
jg
add
pop
fs
popl
jle
movsl
adc
jo
xchg
xchg
cmp
fwait
cmp
mov
dec
sti
dec
inc
gs
pushf
xor
sahf
cmc
jb
push
dec
das
repz
pop
stos
mov
iret
xchg
int
in
inc
adc
cwtl
pop
jl
outsb
in
mov
ja
mov
push
push
addr16
mov
out
mov
stos
mov
mov
mov
lds
jno
repnz
nop
imulb
cli
stos
imul
sub
dec
dec
mov
int3
xchg
loop
xchg
fbstp
jo
mov
sbb
cli
arpl
inc
pop
ds
mov
adc
icebp
rorl
lcall
mov
lret
or
test
pop
mov
inc
sbb
outsl
inc
push
adc
push
ret
jge
fisubrs
jnp
lea
pop
add
mov
lahf
dec
mov
or
mov
sahf
inc
es
sub
pop
adc
movsb
pop
sbb
jmp
gs
xchg
lods
mul
aam
xor
imul
hlt
aas
decb
jno
push
jecxz
xchg
sahf
adc
es
or
and
insb
push
xor
push
mov
test
add
rorb
cmpsl
cmpl
or
lea
pop
imul
mov
insl
cmp
adc
cmc
mov
mov
mov
xchg
fadds
mov
stos
xchg
rcrb
cmp
inc
mov
lock
enter
mov
xchg
mov
jb
repnz
or
xchg
pop
cmp
cmpsl
sub
movsl
dec
popa
and
nop
repnz
cld
hlt
sub
xchg
push
aam
stos
scas
cmovns
mov
popa
sti
lret
popf
adc
outsb
loop
fwait
xchg
pusha
mov
pop
call
popa
cmpsb
shl
int3
clc
gs
or
sbb
movlps
arpl
cld
movsb
and
in
movsb
icebp
xchg
lcall
or
jmp
inc
js
insl
leave
js
mov
jmp
scas
fdivr
hlt
mov
arpl
add
xor
fidivl
mov
stc
pop
dec
divl
and
and
lret
add
xorb
inc
xor
iret
cmp
lea
sub
shlb
insb
and
mov
push
outsb
cmp
pop
imul
aaa
cmc
mov
cld
bound
pusha
sub
mov
daa
sarb
repnz
push
sub
es
jg
je
pushf
mov
int3
aad
push
movsl
shr
cmpsl
clc
aam
inc
stos
push
jae
mov
xchg
bound
jmp
inc
incb
testb
scas
xor
push
xchg
xchg
xchg
dec
xchg
mov
sahf
outsb
sub
pop
mov
mov
or
rorb
je
add
insb
test
pusha
je
or
rclb
lods
cs
pop
js
and
addb
cmp
dec
sub
jge
adc
jecxz
inc
mov
das
xor
xor
mov
aaa
jl
or
or
incb
mov
sub
data16
lock
inc
sarl
in
inc
jmp
repz
mov
fwait
cmp
pop
test
add
mov
cmc
xchg
repnz
mov
int
xchg
pushf
stc
xor
test
aaa
mov
call
ja
arpl
mov
dec
pusha
movsl
sub
inc
add
mov
scas
sbb
mov
inc
and
ret
insb
pop
pop
pop
je
dec
push
inc
pop
jp
adc
inc
xchg
xor
mov
cmp
in
ds
hlt
loope
lods
jg
cmc
cld
xchg
sti
mov
dec
icebp
cli
xor
in
add
imul
fldcw
sub
and
adc
fwait
mov
xchg
push
mov
cmp
sahf
push
mov
mov
lret
ret
in
hlt
je
inc
adc
pushf
jge
push
xor
loopne
fldenv
fs
jno
add
xchg
cmp
cmp
add
cld
das
add
mov
lret
hlt
pushf
add
pop
sahf
pusha
leave
add
ret
and
test
fists
inc
inc
out
mov
and
out
mov
or
ss
push
add
and
cltd
xor
clc
out
test
lret
sub
jne
xor
je
lock
lods
idiv
jo
stc
inc
mov
arpl
xchg
hlt
rcl
dec
push
les
test
sub
pop
pushf
or
mov
mov
nop
out
movsl
xlat
in
add
cmc
sahf
fwait
mov
mov
cmp
in
rorb
dec
inc
ret
cmp
lahf
push
add
pushf
loop
test
stos
movsb
mov
inc
mov
insl
es
ficomps
das
repnz
add
mov
rcrl
mov
adc
insl
cmp
std
fs
lock
lcall
test
cltd
dec
dec
push
rcll
scas
jnp
cli
jge
fsubrs
out
mov
jecxz
xor
loopne
popl
rcll
outsb
fs
ds
push
stos
push
mov
scas
jg
je
adc
test
int
mov
aad
adc
dec
pop
bound
faddl
add
dec
and
fisubrl
jge
pop
adc
mov
or
sub
int3
inc
mov
adc
in
mov
call
lds
mov
cltd
pop
cltd
lcall
pushf
cmpl
add
fcoml
insl
in
mov
ja
nop
enter
das
xor
lea
xor
mov
popa
sub
jp
adc
inc
popf
pop
mov
clc
iret
lods
cmp
sbbl
add
lods
fistpl
sbb
test
cmpxchg
mov
insl
outsb
xchg
add
repnz
inc
xchg
test
push
pop
lods
imul
add
dec
arpl
imul
mov
dec
add
push
popa
adc
rclb
push
iret
push
roll
imul
ret
test
cs
xor
push
or
sub
adc
jmp
es
ss
mov
fstl
mov
jne
mov
scas
je
mov
push
fadds
mov
adc
dec
js
push
in
movsl
pop
xor
int
aaa
jmp
out
pop
push
test
mov
int3
stc
pop
mov
lock
mov
pop
iret
fmulp
xchg
push
int
sub
mov
push
add
popa
cmpsl
loope
lcall
push
mov
fbstp
push
xchg
stos
int
xor
cwtl
shlb
mov
adcb
cs
insl
xchg
xor
jmp
in
dec
nop
and
ss
cmp
mov
div
push
ss
leave
cli
mov
and
mov
les
add
js
jl
dec
mov
ja
movsl
cmp
sbb
mov
into
repnz
push
sbb
sbb
pop
add
mov
or
ljmp
fimuls
insb
cmp
xchg
lods
arpl
mov
das
dec
cltd
inc
mov
decb
ljmp
or
je
movsb
sub
ret
movsl
push
cmpsl
imul
cmc
ret
jge
outsl
scas
movl
loope
xchg
ss
pop
push
jb
xor
xor
and
in
testb
imul
aad
or
ret
test
sub
cmp
stos
xor
dec
lahf
orl
in
sahf
fldt
gs
mov
add
addr16
jecxz
aas
cmpsl
inc
outsl
dec
ds
push
xchg
sbbl
frstor
push
hlt
cmp
rclb
push
mov
or
ficoml
jb
xchg
mov
xchg
or
jecxz
int3
shr
inc
jnp
in
mov
imul
xchg
hlt
in
movsb
call
fwait
leave
jecxz
add
sbb
ds
sbb
jno
lret
adc
inc
and
jge
ja
add
dec
pusha
mov
imul
mov
and
xchg
popa
lods
popa
test
les
jo
add
insl
adc
xchg
leave
mov
mov
pushf
xchg
aaa
and
and
jle
outsl
sti
mov
jbe
cmp
sub
repz
dec
and
mov
mov
and
pop
aad
mov
pop
pop
addr16
sub
es
push
popl
mov
pop
jg
sti
and
scas
push
shll
out
loopne
dec
mov
sbb
inc
arpl
inc
insb
inc
js
movsb
mov
test
out
in
cmp
lea
arpl
pop
dec
mov
fdivs
loope
sbb
and
add
dec
or
fbld
fisttps
dec
mov
pop
in
cmp
mov
movsb
push
push
fmuls
imul
lcall
sub
add
into
mov
dec
xchg
hlt
or
mov
jge
mov
cmp
mov
cs
jne
pop
cltd
call
in
xlat
cld
int
cli
push
jo
into
xlat
push
jl
xchg
rorl
push
repz
xchg
cmp
xchg
addb
add
mov
push
sbb
sbb
scas
cmp
pop
sub
push
movsw
jle
stos
mov
cmp
imul
dec
int
cmp
xor
sub
das
xlat
test
imul
and
jmp
inc
xor
js
addr16
pushl
xor
cli
loope
cmc
dec
call
jmp
cmp
cmpsb
mov
int
scas
fs
push
outsl
xchg
dec
inc
xor
out
pop
pop
sbb
xchg
jmp
sub
scas
popf
bound
cmp
imul
mov
es
aam
push
cs
push
and
iret
cmp
cld
int3
sbb
movsl
shll
ljmp
add
in
pop
imul
add
scas
ret
xor
clc
xor
mov
data16
in
fdivl
mov
test
sbb
lds
popf
ficomps
loop
negl
movsl
gs
push
or
or
inc
scas
jge
sti
mov
mov
adc
bnd
or
xchg
out
inc
push
in
cmp
aam
test
dec
adc
or
shll
mov
mov
and
lock
loope
imul
outsb
mov
xchg
jae
pop
and
movsl
or
lock
test
push
pop
jl
mov
testb
or
or
inc
inc
push
inc
daa
add
rcrb
mov
add
jne
sar
mov
jno
rcrl
or
or
icebp
lea
int3
jle
push
call
mov
subl
adcb
inc
aam
jo
inc
lods
sarb
pop
inc
pop
ret
sbb
cmp
das
xor
stc
pop
nop
dec
push
icebp
lcall
aas
sbb
jle
dec
jl
fmull
xorb
dec
and
sarb
push
mov
pop
xchg
inc
std
jecxz
lret
fimuls
pusha
imul
add
or
or
mov
mov
vrcpss
bound
jns
int
adc
sbb
or
mov
sarl
daa
shr
negb
lcall
pop
aam
aas
pop
call
cs
jns
push
xchg
xchg
mov
mov
mov
jno
nopl
add
addr16
jbe
push
lret
cmp
sahf
movsb
xchg
std
xor
bnd
dec
ja
imul
xchg
outsb
outsl
jmp
adc
adc
std
dec
push
push
dec
pop
in
or
dec
andl
cmp
lcall
repnz
test
movsl
div
mov
jno
xchg
aaa
adc
sti
mov
fadds
adc
push
xchg
jecxz
add
xor
inc
lret
fldcw
push
xlat
sbb
scas
icebp
push
or
dec
roll
mov
xor
outsb
jge
mov
inc
out
mov
push
jb
jg
mov
push
mov
cmp
mov
shll
xor
pop
adc
cmp
in
arpl
mov
lock
cmp
fnstcw
test
cmp
call
xchg
frstor
pushf
lock
fdivrl
jle
pop
xlat
xchg
nop
jle
add
pop
test
mov
dec
enter
into
pop
dec
js
fucomi
lea
and
popf
adc
dec
mov
inc
or
jnp
xchg
mov
jge
xor
push
and
pop
popf
cmp
repz
cwtl
add
dec
fwait
mov
and
outsl
jbe
lahf
or
inc
dec
shrb
fwait
loop
sarl
pop
and
sahf
jle
test
pop
inc
xchg
je
push
jle
lcall
inc
mov
sub
push
loope
xor
mov
jl
testl
imul
push
sbb
jg
xchg
sub
ja
pop
inc
pop
outsl
dec
int
or
adc
out
push
sarb
fadds
jae
shl
insb
xor
jle
cmp
push
mov
adc
sbb
das
adc
push
test
jle
push
mov
xor
aaa
jmp
rep
loope
insb
push
xor
test
cmp
cmp
pop
inc
mov
sub
gs
lret
pop
pop
jl
ja
mov
aaa
mov
pop
les
adc
hlt
fbld
push
cmpsl
pop
xchg
insl
lcall
cmp
jns
xchg
dec
rorl
sbb
xor
jo
popa
imul
sbb
sbb
mov
dec
mov
int3
pop
push
xchg
arpl
orb
test
shrb
pop
and
xor
cmp
xchg
push
mov
pop
mov
out
incb
addr16
arpl
mull
add
negb
xchg
jae
ljmp
aas
cltd
pop
fists
dec
mov
daa
insb
mov
xchg
push
add
and
in
pushf
std
outsb
jmp
pop
shrl
pop
js
jp
popf
fbstp
ss
cmp
test
mov
dec
jo
mov
imul
or
in
pushl
fwait
out
std
aam
jmp
mov
loop
movsb
leave
stc
adc
cs
sti
dec
lret
loope
mov
push
insl
xchg
push
push
dec
push
mov
mov
fxch
adc
js
in
cmpsl
jb
add
in
or
arpl
mov
movsl
std
fsubr
daa
add
jnp
popf
cltd
mov
rcrb
scas
add
inc
rep
sbb
sbb
inc
mov
mov
jl
pop
insb
in
gs
pop
sub
cmpb
aas
bound
push
jmp
mov
mov
mov
movsl
pop
inc
and
in
push
lods
jmp
in
or
loop,pt
je
add
or
jno
mov
in
mov
ret
fcmovb
jmp
cwtl
and
or
mov
ljmp
mov
xchg
fstl
jl
inc
pop
jge
mov
xchg
sbb
adc
xchg
imul
and
shlb
jnp
jmp
idivl
xchg
jmp
or
enter
aaa
mov
hlt
movsb
xchg
dec
popf
lret
push
sbb
cwtl
repnz
dec
or
jae
sub
dec
std
cmp
mov
popa
cmpsb
sub
les
insb
push
jle
or
or
lds
fnstenv
lods
aas
movsl
cmpsl
repnz
adc
cmp
cmp
or
aaa
scas
jge
sub
mov
adc
xchg
stos
or
jmp
pop
packssdw
push
push
lock
fwait
push
sbb
push
adc
ret
enter
inc
pop
hlt
push
cmp
inc
aad
call
push
xchg
xorb
scas
pop
add
addb
adc
xchg
xor
arpl
push
lea
sti
rcr
aaa
pop
outsl
pop
mov
jb
clc
mov
xchg
bound
andb
sahf
lcall
pop
orb
sub
jns
test
adc
mov
pop
cltd
scas
xchg
cs
out
aas
daa
and
pop
xchg
mov
mov
and
rcll
sahf
cmp
add
insl
lcall
add
xchg
iret
shrl
fstps
jae
push
push
inc
adc
pop
daa
jge
adc
push
jnp
pop
div
push
fisttps
inc
pop
leave
ret
mov
xchg
and
xor
jnp
cmp
lods
outsb
pushf
bnd
movb
fists
adc
movsb
enter
in
int3
nop
mov
arpl
lea
loop
or
push
xlat
adc
jle
dec
fadd
inc
aaa
xor
lahf
inc
xlat
popf
and
or
aad
push
call
xchg
ret
or
scas
push
fisttpl
mov
mov
sbb
ret
pop
sub
stos
sub
pop
insb
mov
jecxz
jne
in
push
fdivr
outsb
fcmovnb
adcb
push
pop
jg
gs
push
cmp
inc
xlat
test
xor
popa
lret
push
and
and
mov
cwtl
jb
sbb
push
dec
mov
shrb
and
cli
or
gs
cmpsl
iret
sbb
lea
mov
jl
adc
jecxz
rcrl
jmp
ficoms
mov
leave
jb
leave
xchg
pop
and
stos
mov
ss
pop
adc
sysenter
cs
dec
dec
xchg
fmull
cltd
and
aaa
add
or
mov
inc
and
test
faddp
push
adc
pop
ret
int3
pop
js
std
mov
or
cli
pop
in
int
pop
pop
jmp
mov
jo
mov
into
sub
pusha
fsubrs
movl
jnp
loopne
cmp
or
popa
pop
iret
aad
xchg
stc
xor
bound
cmp
ficoml
mov
inc
pop
pop
jb
iret
mov
push
ror
mov
sbb
stos
and
fwait
test
cmp
add
lods
sbb
es
sbb
fisubl
inc
idivl
test
mov
shl
and
fldenv
pop
stos
xchg
iret
lcall
movsb
shl
fcmovnb
sbb
mov
mov
jg
or
adc
push
outsb
cmp
dec
out
pop
dec
hlt
andb
dec
push
and
rorl
lahf
push
movsl
dec
push
call
adc
sub
aas
jge
rolb
rorb
mov
roll
inc
cmp
aaa
and
mov
iret
repnz
cmp
scas
adc
clc
jmp
cli
pop
fldt
mov
push
lods
popf
xchg
push
movsb
filds
shl
imulb
or
fisubrs
add
sbb
mov
cmp
aad
ss
jno
cmp
daa
add
pop
jp
jb
iret
enter
mov
sub
or
lock
or
sti
fucom
mov
es
and
inc
cmp
pop
cmpsb
add
or
imul
xor
push
nop
jg
sbb
pop
mov
mov
je
add
push
xchg
cmp
add
stos
rolb
lds
shrl
xor
push
int3
cmp
mov
dec
mov
sar
sbb
call
adc
arpl
movsl
jb
jb
roll
fcompl
dec
xchg
idivl
sbb
sbb
jb
push
gs
out
push
xor
adc
fcompl
pop
sti
aad
xor
mov
repnz
cwtl
sbb
out
xchg
les
enter
adc
mov
es
arpl
sahf
dec
rcll
cwtl
lds
into
and
movsb
stos
loop
or
cwtl
lret
or
scas
mov
or
fsubp
imul
mov
fnstcw
push
addr16
jo
push
popf
lods
orb
test
repz
sti
or
jmp
or
lock
and
aad
dec
sbb
sbb
imul
call
mov
sahf
inc
sub
jge
mov
je
dec
ja
cmp
lahf
sarl
xchg
loopne
movsl
stos
shrb
inc
push
cld
shl
cs
jle
or
stc
sub
add
lret
jmp
stos
arpl
push
push
mov
mov
jae
aad
adc
mulb
sahf
inc
xor
inc
cld
and
popa
outsl
push
popf
cmc
addb
sbb
or
les
popf
or
inc
outsb
and
aam
out
sarl
xor
cs
scas
pop
or
repnz
imul
hlt
mov
mov
movsb
mov
lods
mov
add
dec
and
loop
enter
cltd
in
lods
or
inc
lcall
insl
cmpl
ret
leave
mov
push
cmpsl
loopne
in
or
jmp
push
sbb
ja
mov
cld
inc
lret
in
iret
push
in
fwait
mov
lea
dec
mov
mov
enter
and
leave
inc
add
cmp
test
bound
pop
leave
mov
and
arpl
pop
mov
add
fadds
jecxz
aas
cltd
in
mov
xor
xor
mov
imul
call
mov
jae
cmpsl
cmp
sub
xor
lret
mov
add
xor
ljmp
fidivs
push
xchg
imul
mov
and
sub
push
mov
rorl
pop
mov
js
push
cmc
hlt
jle
movq
clc
sub
push
pop
jno
lcall
pop
xchg
lcall
cmpsl
mov
push
xor
mov
xchg
push
adc
fdivrl
loop
or
mov
out
jns
inc
hlt
adc
mov
enter
jmp
std
mov
or
lcall
pop
cld
sub
jp
mov
adc
outsb
pusha
cmpsl
fwait
push
mov
lds
xchg
mov
push
push
mov
dec
push
lahf
daa
mov
ja
aam
jg
pop
or
dec
insl
add
test
jno
cmp
sub
inc
lds
pop
lds
sti
fs
mov
jns
dec
loope
jl
int3
gs
lret
andb
sub
and
jecxz
and
out
pop
insl
aam
pop
mov
xlat
cmp
mov
xchg
cltd
and
mov
lcall
jne
mov
jmp
aaa
inc
add
pusha
jb
jge
xor
out
ds
repnz
or
add
push
in
je
dec
out
xor
pop
inc
aad
or
rolb
add
or
or
cmpl
add
rorl
sub
aad
push
fdivrs
outsl
mov
loop
fnsave
ljmp
gs
jb
nop
xor
das
movsl
nop
outsb
pop
push
xchg
inc
scas
int
pop
sub
pop
fidivrl
mov
inc
dec
sub
xchg
add
sbb
mulb
in
faddl
icebp
sub
iret
jne
jmp
mov
lcall
pop
ja
mov
mov
mov
leave
xchg
pop
scas
adc
cltd
mov
iret
inc
repz
mov
adc
pop
shrb
lea
push
inc
pusha
xchg
mov
cmpb
fucom
jmp
add
cmp
fmulp
rorl
mov
out
adc
pop
add
push
pop
ror
arpl
fbstp
stos
xor
cwtl
lods
cmp
imul
sbb
rorb
scas
scas
psubd
mov
aad
and
cli
jns
inc
fdivrp
and
sub
shll
movsl
ret
repz
add
fistl
das
rolb
and
pusha
adc
ret
adc
shl
cltd
mov
lcall
mov
inc
stos
push
push
std
and
push
cwtl
imul
in
adc
daa
movsb
les
push
dec
mov
mov
or
jmp
scas
in
and
lret
cmp
pop
ds
data16
in
scas
lret
stos
fcomps
xor
outsl
ret
xchg
mov
sbb
fdivl
dec
fistps
mov
jb
icebp
and
popf
subb
cmp
call
pushf
sub
repnz
in
pop
lods
cmp
jmp
adc
adc
jge
cmc
or
aam
imul
scas
xchg
imul
ds
cli
in
bound
popf
jg
clc
ret
les
xor
repnz
call
addl
mov
imul
jl
sbb
push
leave
jl
xchg
push
inc
aas
jb
jo
mov
dec
cmp
fs
jb
mov
out
fdivr
not
xchg
mov
xorb
lret
scas
xor
adc
leave
xchg
pop
arpl
jle
in
or
fcompl
push
xchg
lret
mov
inc
push
push
in
int
adc
mov
mov
test
inc
ss
aad
fwait
arpl
or
gs
aad
incb
sub
out
sbb
les
cmpsl
mov
cld
push
fnstsw
jp
cmc
dec
jle
pop
pop
push
lret
mov
leave
das
stos
jmp
inc
nop
iret
test
out
jns
inc
add
mov
testb
fsubl
mov
dec
or
add
fiadds
sub
cmp
mov
int
push
lock
dec
rclb
out
mov
outsl
in
popf
inc
sti
sahf
dec
daa
aaa
dec
xor
sbb
in
mov
and
mov
mov
cmpsb
rorb
cmp
xchg
xchg
outsl
leave
sbb
ficomps
or
repnz
xor
push
mov
mov
lock
or
fimull
cmpsl
xchg
inc
js
xor
pop
adc
jne
mov
dec
gs
loopne
add
jmp
leave
out
pop
pop
fsubr
fsubs
ret
jl
or
push
cmp
xchg
push
adc
ja
lahf
cmpsb
add
loope
jmp
mov
fldcw
and
dec
std
or
jne
leave
pusha
mov
mov
sub
ss
mov
inc
xlat
dec
sbbl
jno
fsubp
out
mov
xchg
addl
mov
setp
sbb
insl
jne
in
aam
clc
subl
inc
shll
push
int
or
push
stos
mov
adc
shrl
js
and
lahf
fistl
push
push
mov
sub
movsl
pop
cmp
and
mov
add
ror
xchg
mov
in
mov
addl
mov
sub
incl
adc
pop
mov
push
jns
js
iret
push
shl
int3
or
jns
stos
xor
and
ja
mov
pop
out
cld
adc
imull
xchg
mov
add
adc
cmpsb
hlt
in
leave
ja
imull
daa
adc
movsl
dec
pop
xchg
movsl
sbb
inc
mov
mov
pop
xchg
mov
pop
test
dec
repz
movsb
iret
jo
dec
dec
sub
inc
ret
aam
daa
into
xor
push
jmp
lds
sub
cs
push
test
outsl
les
pop
dec
subl
xor
mov
aam
test
in
sti
inc
jns
lcall
stos
out
xchg
dec
cmp
ret
shll
jo
xlat
mov
call
mov
inc
incb
mov
bound
hlt
mov
or
shlb
and
lds
mov
test
out
mov
cmp
jge
rol
mov
push
jne
or
ja
jge
push
repnz
jne
imul
push
pushf
lret
fstpt
mov
orb
mov
je
fcoms
punpcklwd
adc
lea
jl
adc
mov
scas
push
jb
xchg
xchg
push
cmp
bound
mov
sbbb
scas
lea
pusha
dec
lods
pop
lods
sub
add
cmp
jns
pop
mov
mov
out
mov
aas
add
push
lea
mov
out
repz
ja
mov
and
mov
jmp
shll
insb
sub
or
jnp
sbb
dec
int3
and
test
idiv
xchg
sub
dec
lret
mov
pop
pushf
cs
imul
ja
mov
cli
mov
adc
xlat
testl
and
test
and
adc
xor
aam
mov
divb
nop
cld
lret
xor
lods
cmc
xchg
out
ds
andb
test
js
push
mov
sbb
leave
rol
mov
push
pop
mov
loope
push
sbb
sub
cmc
or
repz
push
jge
fidivl
cmp
call
mov
cmpsb
scas
fcoms
inc
lock
xchg
ljmp
mov
push
push
cmp
inc
mov
sbb
icebp
lods
fimuls
xor
enter
mov
mov
in
rcr
xchg
fisubl
cmp
and
inc
fsubrs
cmpsb
or
jb
imul
ds
arpl
mov
repnz
mov
les
mov
inc
jmp
les
hlt
or
push
movsl
lahf
je
es
mov
add
inc
jp
into
lcall
data16
int
test
lret
adc
cmp
insb
and
and
inc
add
repz
and
mov
arpl
int3
xchg
pop
and
lods
push
add
sahf
rclb
lods
add
lods
dec
rcl
pop
out
push
lea
sbb
imul
cltd
test
xchg
xchg
adc
sti
sbb
fs
shl
and
adc
sbb
enter
std
push
shr
push
and
xor
pop
xchg
fcoml
mov
inc
dec
or
and
adc
push
xor
idivb
into
jmp
cmp
mov
push
dec
divb
and
and
cmpsl
xor
dec
cmp
xor
into
lds
push
pop
jns
mov
negl
insb
mov
ud0
jecxz
lret
repnz
mov
popf
imul
push
inc
ror
movb
loope
ss
lea
mov
addr16
inc
mov
sbb
enter
pop
lret
xchg
insl
lahf
arpl
or
cmp
repnz
lods
push
pop
faddp
sub
fstps
test
xchg
dec
into
fsubr
cmp
lahf
fsubrp
bound
hlt
push
test
push
push
imull
mov
jge
push
mov
int
ljmp
inc
je
jb
xlat
push
lods
out
aas
jecxz
cmp
test
rcrl
mov
mov
orl
les
sub
cmp
push
cwtl
add
jb
mov
xchg
xchg
ret
xor
pop
das
js
jbe
pop
lahf
jecxz
adc
stc
call
xchg
xlat
loopne
ds
pop
cmpsl
mov
inc
lret
or
and
popf
mov
cmpsb
jp
inc
sti
jp
movsb
scas
out
mov
jg
cmp
lea
andl
jbe
push
hlt
ret
icebp
in
mov
movsb
inc
and
pop
push
add
mov
push
sbb
or
scas
xchg
xor
ret
cmp
icebp
call
adc
jmp
push
ss
cmp
sub
loopne
and
fdivs
dec
in
xor
cli
adc
sbb
dec
stos
add
dec
mov
push
lds
sub
mov
clc
cmp
fisubrl
popa
ficompl
repz
ds
pusha
and
xchg
stos
leave
loope
mov
daa
in
pop
inc
dec
xchg
and
test
mov
and
pop
scas
xorl
rorl
es
mov
das
adcl
mov
xchg
push
mov
cmpsb
sbb
xor
cwtl
iret
push
mov
or
xorl
mov
xor
icebp
ljmp
push
out
mov
ds
jae
push
pop
shrb
cmp
pop
nop
scas
es
add
inc
je
enter
cmpsb
xchg
leave
test
int
sbb
enter
push
gs
dec
lret
push
cmpb
jae
mov
adc
insl
sbb
dec
outsl
les
and
cmpsb
xchg
inc
hlt
fidivl
sbb
pop
mov
daa
lcall
je
add
repnz
mov
dec
or
or
mov
pop
push
jp
pop
mov
fsts
cmp
and
pushf
xchg
testb
sub
bound
shlb
cltd
jne
movl
push
shlb
cmpsl
push
js
push
add
lahf
mov
jno
mov
inc
pop
das
cmpsl
dec
rcrb
rcrb
push
sub
dec
je
test
mov
pop
lds
lods
movsl
dec
adc
loopne
adc
cmp
jns
sbb
imul
sub
js
push
in
cmp
mov
iret
adcb
insl
pop
sub
call
les
push
and
and
mov
jbe
xchg
jmp
mov
jle
rol
mov
mov
mov
sbb
imul
cld
icebp
pusha
int3
shrb
sub
push
push
in
stos
out
hlt
mov
cmp
ljmp
lods
inc
pop
insb
inc
shll
sbb
push
xchg
push
mov
lret
inc
jno
add
outsb
mov
mov
repnz
sub
pushf
loope
mov
repz
xchg
lods
sub
aaa
out
adc
add
fistl
popf
pop
mov
outsl
sub
xchg
xchg
and
call
mov
xchg
mov
fwait
dec
ret
ficompl
cmpsl
xor
push
dec
pop
ja
dec
in
pop
call
xchg
ds
loope
bound
sub
and
adc
push
mov
shl
sub
ret
aas
cmp
cmpsb
dec
sarb
out
mov
adc
je
int3
xor
clc
clc
test
das
fsubl
mov
cli
out
out
iret
push
fadds
adc
fnstsw
mov
js
cmp
adc
adc
mov
loopne
fs
test
in
and
aad
loop
inc
inc
jo
inc
push
mov
sahf
int
lcall
mov
hlt
jne
mov
fldenv
pushf
push
mov
pushf
and
cs
xchg
cmc
sbb
cmp
xor
mov
pop
or
rclb
mov
xor
pusha
mov
divb
pusha
pop
add
rolb
xchg
leave
fsub
jb
ret
aaa
icebp
movsl
mov
mov
aam
adcb
addr16
mov
dec
inc
xchg
pop
stos
mov
dec
push
mov
inc
mov
inc
leave
sub
and
and
or
add
push
pop
ja
push
mov
stos
int3
push
cli
in
out
add
imul
dec
mov
xor
aam
cwtl
dec
xor
mov
test
push
mov
scas
pop
xchg
xchg
loop
mov
cmp
push
inc
popa
or
fadds
jo
out
es
xchg
dec
daa
das
jb
jbe
lods
int
xchg
adc
lea
sbb
int
add
fs
outsl
xchg
pushf
clc
mov
imulb
xor
pop
sbb
adcb
ds
adc
mov
sub
aaa
pop
cmc
add
leave
lods
xor
addr16
dec
pop
nop
ljmp
sub
mov
dec
test
mov
and
cld
mov
roll
test
xor
popf
aas
insb
mov
dec
clc
jecxz
jge
in
jo
inc
fs
cmp
ds
xor
std
stos
test
imul
movsb
mov
andb
je
cltd
or
push
out
cmp
leave
out
adc
sbb
insb
shr
pop
aad
out
push
push
ds
dec
out
dec
adc
in
mov
shlb
mov
sbbb
xchg
sub
xchg
xchg
out
or
insb
sub
out
jae
push
ss
xlat
and
in
lcall
mov
js
pop
hlt
imul
mov
jbe
stos
mov
mov
jo
pushf
dec
shlb
call
mov
mov
dec
pop
jp
sub
or
addr16
pop
xchg
pop
cwtl
add
or
std
jo
and
ds
in
xchg
scas
loopne
mov
fsts
push
mov
jae
adc
out
pop
cli
enter
mov
pop
mov
mov
cmpsb
jo
or
jmp
loopne
std
push
popa
out
outsl
call
add
out
std
pop
cmp
fsubp
mov
rcrb
jmp
mov
sbb
jge
pusha
or
rcl
ret
xchg
jne
lods
test
xchg
dec
dec
adcb
inc
xor
xchg
int
xchg
loop
or
scas
and
or
add
jne
cmc
mov
and
mov
test
inc
and
adc
mov
flds
cmp
addl
sub
adc
xor
sub
insl
sub
jnp
sbb
push
jge
icebp
mov
negb
lahf
jg
and
das
or
adc
in
loope
adc
adc
adc
add
push
sub
cwtl
xor
pop
popf
ljmp
pop
mov
cli
push
jbe
insb
jl
fmuls
insb
cmp
out
xor
xchg
jns
lods
jno
push
pop
outsl
ret
pop
jle
jmp
mov
mov
jg
mov
aaa
inc
fisttpl
push
jb
and
xor
ss
fsubl
test
loope,pt
gs
mov
das
sub
mov
pop
adc
push
mov
das
or
mov
inc
fwait
pop
in
push
ret
fiaddl
loop
sbb
lcall
and
fcomps
sti
add
mov
fisubrl
in
imul
pop
push
enter
xchg
repz
mov
xor
push
dec
movsb
xor
jecxz
mov
out
xchg
cs
out
inc
stc
dec
mov
dec
pop
in
mov
adc
fiadds
stos
xor
or
imulb
cmp
and
loopne
shl
dec
jmp
dec
xorb
add
imul
and
pop
push
jns
fimull
or
pop
ss
xor
or
addr16
frstor
inc
pop
adc
lock
cmp
push
push
jl
ret
cmpsb
cmp
dec
iret
test
lods
int3
lret
sub
movsb
push
push
sbb
stc
push
test
scas
test
xchg
push
mov
inc
loopne
mov
into
adc
or
neg
mov
mov
dec
jo
push
push
push
lahf
icebp
fs
mov
pop
js
pop
test
mov
arpl
subb
mov
or
pop
sar
fs
loopne
push
add
loop
pusha
inc
ret
push
test
or
fwait
and
into
xor
dec
push
and
xor
movsb
push
decl
jp
sub
bound
mov
les
add
daa
lods
mov
je
bound
mov
pop
js
mov
filds
mov
dec
or
add
stc
cli
xchg
mov
stos
into
iret
cmc
cmpsb
movsl
push
pushl
mov
addl
scas
sub
fs
inc
lods
push
rcrl
mov
jp
mov
push
pop
jle
adc
push
and
mov
movsl
mov
outsb
mov
add
jno
fadd
jg
mov
call
in
push
xor
mov
push
inc
in
mov
mov
xchg
bound
mov
and
dec
xchg
inc
mov
movsb
mov
adc
and
jnp
nop
leave
into
dec
imul
inc
popf
mov
cmp
mov
in
inc
adcl
repz
push
out
dec
fldcw
xor
cmpsl
and
bound
lea
add
notb
xor
adcb
lods
sbb
lret
add
push
orb
in
scas
mov
lock
sar
mov
in
cs
cmpsl
out
xor
jmp
fs
xchg
or
and
push
subl
mov
sbb
les
add
mov
mov
fwait
ltr
cmp
sub
mov
cmp
out
dec
inc
popa
lahf
pop
add
clc
js
mov
pop
in
pusha
popf
xor
pushf
mov
push
push
pop
or
sub
test
or
fists
jecxz
in
mov
push
cli
inc
data16
cltd
mov
dec
ret
sbb
cmp
mov
push
dec
test
ret
jb
adc
in
loop
mov
addr16
push
popf
mov
fisubrl
mov
popa
out
sbb
and
cmc
cmc
rorb
lahf
std
ja
mov
cmpsb
xchg
mov
and
jns
push
pop
sub
mov
ret
insb
js
cmpsl
jmp
cli
mov
push
arpl
movsl
ret
push
dec
out
rcr
dec
mov
sbb
adc
mov
cmpsb
in
inc
cmp
orb
dec
sarl
adc
icebp
nop
data16
dec
loop
sbb
nop
jns
sbb
xor
addl
and
mov
addr16
mov
push
call
cmp
loop
js
fidivs
pushl
das
mov
sbb
scas
scas
call
addl
cmp
shl
jmp
xor
sahf
sbb
jmp
sub
aaa
mov
fistl
push
mov
loope
test
into
cmp
cld
lock
jne
ja
add
sbb
mov
testb
dec
arpl
cmp
jmp
xchg
pop
ficompl
in
cmp
mov
fwait
jbe
inc
lea
fwait
lahf
adc
push
scas
jnp
inc
mov
jl
push
adc
inc
xor
pop
jp
lret
mov
lret
jbe
icebp
sbb
lds
subl
jbe
mov
sub
out
dec
shlb
inc
nop
mov
xchg
outsl
xor
sub
adc
cmp
rol
adc
jno
movsl
cld
in
sahf
rcll
xchg
or
sbb
sub
ret
in
jmp
negb
jecxz,pn
je
repz
dec
loop
in
mov
js
push
int
xchg
iret
jp
cs
mov
aas
inc
fsubp
imul
loopne
mov
lock
insl
pop
jo
addb
inc
aas
in
mov
push
lea
cmp
xchg
jo
jne
xor
xlat
adc
dec
out
push
push
lahf
ret
test
repnz
outsb
int3
nop
fs
push
std
mov
and
fcomp
jb
les
pop
lret
push
loopw
not
pop
cmp
and
mov
xor
outsl
dec
pop
dec
ret
add
mov
outsb
and
ljmp
leave
enter
lahf
ljmp
lcall
rcrb
stos
pop
in
inc
dec
mov
inc
xchg
lods
cmp
xor
xor
cmpsb
jns
jns
js
inc
cmp
mulb
xchg
test
in
rclb
inc
cmpsb
movsl
addr16
std
inc
notl
les
aas
idivb
js
ljmp
aaa
dec
cmp
mov
sub
out
loope
call
cli
and
icebp
jle
add
rol
add
ret
loop
cmp
cmpsl
push
clc
push
paddq
loopne
in
rclb
in
push
mov
mov
ss
adc
pop
sub
or
aaa
in
stos
push
mov
sbb
sub
addr16
ds
es
insl
inc
push
dec
mov
bnd
ja
push
into
ja
cmp
adc
mov
int3
push
lea
lret
mov
push
dec
adc
xor
movsl
ss
pop
adc
mov
arpl
jbe
jbe
jp
mov
pop
jne
pop
push
sub
cltd
ds
sbb
or
dec
fnstenv
in
xor
leave
xchg
mov
pminub
push
xor
add
pop
inc
sub
sysret
test
push
test
push
jge
cmp
cwtl
adc
fsubs
imul
xor
inc
inc
daa
clc
xor
xchg
pop
addl
sub
stos
enter
int
scas
push
dec
sbb
cmp
in
or
lret
dec
xor
pop
push
clc
fs
jp
lret
movsb
rclb
mov
sbb
test
inc
lret
xor
pop
cmpsb
dec
mov
push
or
enter
jp
pop
movsl
xor
jb
mov
xchg
mov
xlat
movsl
jl
jmp
repz
aaa
out
in
mov
mov
and
hlt
sbb
mov
jb
daa
mov
leave
or
mov
pop
sub
es
inc
mov
shll
push
imul
stos
in
enter
pop
cmp
iret
pop
and
mov
ss
aam
stos
mov
imul
fisttpll
mov
fidivs
mov
push
pusha
mov
cmp
add
mov
push
stos
insb
mov
mov
jno
xchg
outsb
add
sub
xor
xchg
stos
adc
jl
push
rcll
jo
sub
sbb
into
popf
mov
aam
and
inc
icebp
lcall
in
dec
fcoml
or
and
outsb
inc
push
add
cmp
cli
lds
test
pop
or
dec
fwait
movsb
or
sub
push
mov
pop
mov
cmp
jge
push
jmp
lea
xchg
int
roll
or
jecxz
cmp
and
fwait
lret
pop
jno
dec
inc
mov
xchg
inc
bswap
push
js
cmp
xchg
ljmp
xorl
xchg
test
aam
lods
movsb
aaa
hlt
add
adc
ljmp
add
hlt
pop
mov
xor
ficoml
mov
daa
dec
sub
xchg
push
xchg
jnp
and
mov
mov
cltd
xchg
xchg
stos
int3
adc
or
fsts
lret
fadds
repnz
inc
xor
repz
into
inc
push
jb
subl
mov
mov
cmp
cmc
push
sti
inc
mov
add
shlb
mov
xchg
out
and
loopne
push
cmp
push
das
stos
dec
jle
scas
xchg
cli
rorl
push
adc
cmp
in
xchg
sub
movsl
dec
adc
test
aaa
dec
fidivrl
dec
mov
test
arpl
imul
jmp
out
testb
cmp
ljmp
mov
stc
jmp
dec
cmpsl
jne
mov
fstpl
xchg
cmp
cmpsl
insb
cmp
ror
mov
repz
push
je
loop
jmp
xchg
dec
popa
dec
jno
mov
push
filds
inc
cmp
mov
stc
mov
out
adc
pop
push
dec
jbe
mov
jb
pusha
or
jg
fdivs
leave
out
mov
out
mov
loope
sub
xchg
fisttpl
xchg
out
mov
jle
xchg
iret
push
pushf
xor
nopl
cld
add
mov
call
mov
cwtl
pop
sbb
pop
daa
fwait
ds
aaa
sub
stos
jp
mov
and
mov
aad
dec
cmp
enter
mov
mov
or
xor
jmp
xor
xorl
fisubrs
ret
jo
add
fdivrs
jecxz
pop
pop
int3
add
cmpsb
je
push
pop
adc
popf
pop
jl
jno
mov
loop
sub
pop
push
push
and
loop
insb
shrb
addl
test
in
adc
dec
call
sbb
inc
pushf
inc
test
aad
nop
add
or
test
jp
cmp
je
orb
sti
ljmp
cs
mov
lods
xlat
sti
push
sub
jmp
std
sbb
xchg
js
xchg
loop
sub
jecxz
aad
mov
pop
add
ss
out
ss
outsb
mov
inc
lods
lock
or
test
pop
bound
xor
test
fmuls
ret
lock
mov
and
adc
dec
inc
adc
andb
add
out
cltd
into
push
mov
jmp
push
adc
mov
dec
movsl
or
mov
mov
add
fcmovnu
jl
xchg
testl
adc
mov
jb
ja
adc
out
jg
stc
dec
jecxz
js
xchg
mov
loop,pn
aad
neg
lcall
lret
ss
mov
jnp
test
dec
mov
push
pop
stos
sub
sub
sti
ss
sahf
adc
in
lret
or
ljmp
shl
je
push
sub
xor
add
jcxz
xor
jmp
dec
insb
cwtl
and
adc
les
dec
push
jecxz
lods
cmp
mov
int
mov
cs
and
imul
add
xchg
incl
out
jbe
in
cmp
mov
push
cmp
iret
cmp
loop
in
cmp
push
xchg
pop
fnstsw
mov
push
push
cmpl
mov
mov
or
dec
sub
faddl
jp
mov
inc
fcomps
jg
add
mov
push
int3
jecxz
iret
popf
fsin
fwait
test
xor
xchg
addr16
test
add
in
fwait
or
mov
insl
inc
loopne
jnp
mov
mov
pop
add
adc
addb
fstpt
in
cld
adc
mov
test
das
sahf
mov
lock
cmpsb
jne
mov
add
and
jne
imul
or
lods
and
cwtl
ja
int3
aas
sbb
fwait
scas
andb
outsb
pop
adcl
sub
or
xor
or
fdivl
ljmp
dec
or
rolb
adc
in
inc
dec
or
and
out
mov
lret
and
mov
push
or
push
mov
shl
or
hlt
rcrb
fisttpll
test
push
push
mov
inc
in
ss
inc
outsb
mov
aad
xchg
scas
ret
out
dec
pushf
sarl
push
xor
and
mov
push
adc
xor
rolb
fwait
iret
cmpb
popf
sbb
mov
xor
mov
out
daa
dec
cli
pop
mov
gs
or
fisubrl
aaa
or
pop
dec
flds
xor
cmp
push
test
add
sub
add
jbe
pop
fdivr
pusha
test
fmull
cmp
clc
insb
or
inc
scas
call
jmp
dec
or
mov
mov
xlat
int
pop
mov
xor
or
sbb
mov
xchg
imull
push
test
pusha
mov
ljmp
add
jp
or
stos
dec
push
minps
repz
sub
adc
imul
or
js
out
dec
lahf
sbb
ja
in
push
inc
jb
cwtl
xor
push
mov
xor
loope
cmp
lcall
imul
loopne
jg
stos
adc
jle
inc
lods
lahf
pushf
cld
add
out
leave
in
jae
test
daa
mull
prefetcht0
scas
mov
imul
loope
loop
loopne
push
test
shlb
sbb
ljmp
push
jne
loope
mov
sbbl
mov
push
jg
xor
insb
push
xor
jmp
and
aas
or
pop
dec
sbb
push
test
call
ljmp
lds
mov
cmp
movsl
pop
sarl
insb
aam
sbb
test
adc
gs
dec
jo
lret
sahf
ja
jmp
cmp
mov
push
xchg
and
sti
add
frstor
xchg
daa
mov
inc
pop
mov
lret
arpl
inc
add
push
push
insb
jle
pop
outsb
int
adc
iret
sub
sbb
cmpsb
pushf
es
loopne
inc
outsb
pop
fsts
scas
mov
mov
jmp
fistl
nop
daa
daa
ficoml
mov
cs
aas
xchg
ficoms
sub
adc
shrb
mov
xor
idivb
rolb
scas
lret
fsts
fmull
xchg
pop
insl
js
icebp
out
cmpsl
bound
mov
and
xor
inc
jnp
mov
repnz
scas
js
repnz
test
xor
cwtl
xor
xor
fwait
jo
stos
data16
mov
out
inc
inc
pop
stos
or
lcall
out
jne
pop
fldcw
stc
in
dec
mov
adc
cmp
mov
adc
pop
add
xor
cs
popf
push
test
stc
mov
loop
fldcw
xchg
lock
xchg
xor
inc
shr
xchg
lret
aas
aam
lds
mov
in
push
or
sub
dec
push
push
aaa
xchg
mov
ss
or
dec
int3
ror
xor
xchg
push
data16
test
ds
das
jmp
aad
add
cmp
jg
jp
into
mov
jb
xchg
mov
insl
jae
cmp
les
push
or
jecxz
mov
rol
fisttpl
push
test
mov
push
inc
ret
sbb
fsubrl
jae
mov
vandnps
popa
lods
inc
stos
xchg
pop
inc
or
cwtl
cmp
mov
shrb
mov
dec
add
mov
fidivrs
jle
push
cmp
fsts
sbb
out
lcall
xchg
ficoms
ret
or
gs
in
pop
inc
shlb
cs
lcall
jle
fsubl
daa
test
xchg
daa
jb
inc
mov
and
incl
adc
scas
push
fisubrs
xchg
cmp
dec
in
push
sub
int3
or
in
mov
in
mov
loop
dec
lods
xchg
das
and
mov
loope
test
mov
scas
es
ds
enter
pop
fidivl
push
mov
daa
or
mov
inc
mov
ja
pop
lods
jnp
dec
pop
push
pmulhw
jae
and
mov
pop
xchg
jb
cmpsl
push
mov
icebp
dec
ret
mov
jge
ds
xchg
mov
stos
xor
clc
lods
das
aad
jbe
or
lret
xor
sub
and
add
inc
dec
dec
mov
movsl
push
push
lret
repz
push
inc
xchg
add
xchg
bound
jl
xchg
sbb
into
jle
fnstcw
in
mov
inc
call
sahf
popf
or
add
jnp
fists
scas
jge
outsb
das
ljmp
sbb
mov
pop
out
sarl
sbb
es
xchg
add
inc
imul
stos
call
push
ret
inc
inc
push
push
mov
insl
xor
mov
pop
cmp
lds
dec
push
adc
call
cs
rcl
mov
outsb
jno
xchg
fwait
and
xchg
and
jg
xor
and
jne
pop
xchg
mov
mov
jno
push
loopne
out
add
jge
mov
lods
ret
and
testb
xlat
into
fidivs
push
pop
pop
lds
adc
xorb
adc
sbb
mov
mov
push
or
mov
movzbl
jge
clc
loopne
cmp
imull
jp
mov
mov
mov
pop
xor
sti
xchg
xor
faddp
dec
jo
or
inc
imul
mov
or
sbb
gs
icebp
shl
pop
leave
xor
dec
int3
lret
mov
inc
add
xor
sub
and
mov
or
icebp
jb
out
xor
scas
cmc
push
add
xor
jmp
inc
test
pop
mov
add
mov
popa
push
movsl
jl
xchg
or
notb
push
push
dec
pop
xor
jns
cmp
fistl
jmp
popa
push
je
cmp
mov
stos
push
mov
gs
mov
xor
dec
mov
fldenv
outsb
or
or
and
xchg
imul
inc
lods
add
gs
xchg
fwait
rcl
std
jo
and
cld
lods
xor
xor
mulb
int3
xchg
aam
mov
into
clc
clc
addr16
push
adc
xor
xor
int
inc
mov
pushw
das
jecxz
ljmp
inc
leave
and
push
xchg
fistpl
aaa
inc
je
aad
loope
leave
sub
movsb
insb
repz
es
pop
sbbb
jne
insb
cs
push
push
out
pop
std
imul
push
dec
mov
fdivr
inc
bound
cmp
adc
mov
dec
icebp
aad
jl
push
lea
pop
xchg
leave
adc
fdivrl
jge
push
add
mov
clc
cmp
jae
es
insl
dec
rcll
out
jb
jle
pop
sti
mov
iret
pop
cmp
and
inc
dec
mov
mov
xchg
inc
leave
je
cmp
xchg
imul
pop
push
sbb
sar
or
push
sub
lcall
jmp
xor
shlb
daa
pop
out
sub
sbb
stc
mov
stos
and
add
pop
loopne
mov
inc
xchg
daa
dec
jo
icebp
dec
shrl
adcl
or
adc
xchg
in
adc
in
and
gs
add
adcl
jo
fldcw
xchg
add
test
fcompl
outsl
faddp
fimull
sub
push
dec
adc
insl
add
aaa
add
jecxz
outsb
adc
jecxz
xor
adc
pushf
pop
adcl
aaa
sub
in
div
mov
xchg
cmp
cld
cmpsb
std
sub
fdivrl
lods
inc
add
andb
ret
add
mov
incl
loope
inc
enter
insb
stc
test
lcall
arpl
out
pop
sub
mov
pop
lock
lods
mov
xchg
add
inc
jnp
sub
lea
xchg
fwait
pop
ficoml
push
sub
inc
stc
xchg
push
mov
mov
mov
sub
out
adc
out
mov
mov
dec
shl
lods
jo
jno
mov
sbb
movsb
fucomip
add
dec
adc
sub
jne
ficoms
push
mov
jnp
in
sahf
ljmp
inc
push
ja
xchg
mov
insl
mov
pop
jp
adc
iret
lock
and
stos
push
popf
gs
fstps
mov
mov
into
out
xlat
inc
pop
fidivs
or
inc
dec
std
mov
or
leave
addr16
imul
fucomi
aas
inc
ret
sbb
sbb
add
dec
in
out
pop
add
xor
repz
dec
pop
mov
mov
pop
jae
je
dec
fs
mov
aaa
pop
stos
ds
xchg
enter
stc
jne
insb
pushf
push
js
sti
in
mov
sub
iret
adc
test
lods
jbe
add
lret
add
and
xchg
fmuls
adc
loop
incb
sub
xchg
cmp
test
push
or
jae
jmp
jno
cmp
addr16
cmc
test
push
mov
ret
lea
and
ret
push
dec
mov
xlat
dec
or
sbb
stos
clc
sbb
loope
xor
test
mov
xor
fwait
or
xor
divl
jo
mov
rolb
mov
push
sahf
jmp
out
out
jae
adc
sub
scas
dec
mov
popa
push
cmp
xor
insb
cmp
jmp
sbb
xchg
xchg
out
cli
stc
mov
dec
pop
ffreep
push
adc
outsl
pop
lcall
inc
fistpl
cltd
js
les
cli
sub
inc
fisttps
inc
pop
sub
mov
outsl
movsl
divb
bound
pop
sub
pop
push
xor
movsl
jb
pop
pusha
mov
loope
out
push
or
push
add
jle
xchg
xchg
sbb
adc
push
mov
pushl
inc
jmp
cld
sub
pushf
test
jbe
std
stc
add
inc
cmp
dec
sub
and
inc
pop
out
xchg
pop
cmpsl
cmpsl
cmpsl
mov
leavew
std
ficoml
dec
xchg
in
or
xor
cld
nop
data16
rcr
lods
rorb
icebp
and
dec
jb
push
and
xorl
lahf
jae
xchg
cli
out
add
imul
xchg
inc
popa
imul
cs
and
fistps
dec
aad
cmpsl
adc
call
cmp
xchg
jns
add
push
adc
test
inc
test
enter
scas
jmp
movsl
pushf
ja
pop
cmpsl
adc
mov
stos
fcmovnb
xchg
lea
js
cwtl
xlat
add
fcomp
inc
push
push
pop
pop
mov
add
pop
outsb
andb
pmulhuw
pop
adc
sub
subl
in
add
or
icebp
cmp
dec
rcll
push
mov
aam
cmp
jo
scas
add
mov
mov
inc
and
cmc
sub
jno
push
pop
push
mov
mov
cmpsl
mov
dec
dec
mov
test
dec
out
and
fwait
push
cmpsl
jp
in
or
adc
stos
sahf
repz
mov
push
jl
mov
imul
mov
jns
mov
fwait
inc
inc
out
loop
adc
xchg
inc
or
mov
repz
movsl
cmc
aad
notb
fnsave
lock
push
popa
pop
lods
shrb
mov
sub
and
sbb
mov
adc
sub
shrl
repz
push
aas
loop
pushf
sub
xor
seta
cmp
lahf
mov
push
imul
icebp
inc
mov
sbb
dec
jge
pop
dec
adc
imul
pop
fmulp
mov
or
jp
mov
jne
inc
xchg
fwait
dec
and
fwait
mov
pop
xchg
imul
incb
dec
or
adc
loop
mov
or
push
push
push
test
repz
adc
pop
pushf
pop
or
sbb
fwait
movsl
jecxz
mov
mov
push
sub
stc
mov
sahf
push
rorb
outsb
pop
push
sub
shlb
mov
xor
inc
inc
xor
repz
sbb
repz
lcall
mov
repnz
imul
and
stos
out
out
mov
cmp
xchg
rorl
fs
lea
dec
mov
cmpsl
fbstp
push
loope
mov
addr16
iret
idivb
jb
pop
je
ret
inc
pop
push
repnz
gs
je
and
cmp
add
mov
or
std
xor
adc
inc
add
test
add
daa
sbb
mov
mov
insb
sub
push
mov
sbb
sbb
cli
iret
insb
int
fstl
mov
rolb
or
test
mov
outsl
push
cmp
mov
lcall
mov
sub
fiaddl
push
mov
push
mov
insl
aas
pop
push
mov
cmp
mov
mov
sbb
call
lahf
sarl
pop
xchg
push
movsl
mov
jb
xchg
shll
pop
mov
xor
xchg
rorl
add
sub
repnz
push
mov
cmp
xchg
xchg
xlat
shl
arpl
lds
sahf
mov
lock
dec
cmc
rcrl
in
jo
xor
jb
out
repnz
into
jl
repz
call
insl
nop
bound
cwtl
int3
inc
adc
adc
dec
pop
sbb
mov
rorl
push
push
shl
push
jge
xchg
jae
xchg
push
jne
inc
imul
rcrl
dec
jp
inc
imul
mov
inc
pop
call
stos
mov
mov
ret
pushf
xchg
les
pop
jl
cs
cltd
sar
cmpsb
cmp
push
lods
mov
ss
mov
push
scas
leave
inc
jbe
hlt
shlb
dec
ja
mov
push
xchg
xchg
aad
and
mov
adc
dec
mov
adc
push
fisubrl
lods
add
sub
mov
xor
mov
gs
stos
cmpsb
jg
mov
nop
inc
pop
aaa
sub
push
mov
dec
cli
mov
adc
sbb
pop
push
add
xchg
add
outsb
pop
pop
fisttpll
stos
lret
add
dec
cwtl
sub
xchg
imul
test
hlt
mov
jl
sahf
bound
adc
fwait
inc
push
lcall
js
out
xchg
icebp
cmp
add
push
xlat
mov
pop
mov
add
fwait
ja
xchg
jns
dec
sbb
push
movsl
aam
insb
and
adc
mov
adc
xlat
test
mov
leave
add
mov
pusha
dec
xor
mov
jge
insl
incb
dec
inc
or
add
pop
or
in
push
mov
adc
leave
movsb
daa
sbb
adc
inc
scas
sbb
lahf
repnz
hlt
shl
outsb
loopne
data16
lret
movsl
insb
ljmp
sub
fists
mov
sbb
imul
pop
inc
iret
lret
test
lods
xchg
fwait
adcl
mov
test
test
sbb
je
rcl
movsl
mov
xchg
mov
test
scas
repz
xchg
lret
and
cli
and
lahf
test
jmp
fcoml
jg
mov
lods
mov
or
inc
mov
out
lahf
pop
scas
dec
mov
pop
in
xor
shl
scas
adcb
xor
bsr
and
inc
cmc
lods
pop
loopne
and
sub
mov
inc
cmp
fildll
or
ljmp
mov
adc
pop
pop
jg
push
sbb
adc
fs
sbb
or
insl
lock
or
cld
sbb
adc
sbb
aad
cmp
add
cmp
imul
add
push
add
jge
mov
pop
fsubrs
repz
popa
xchg
ds
mov
and
xor
xor
mov
add
inc
out
or
push
cli
cmpsb
mov
movsl
and
sub
dec
and
gs
cld
in
leave
and
mov
sbbb
out
xor
cltd
lret
push
xchg
sub
sbb
sbb
outsl
cwtl
sahf
enter
test
ret
stos
inc
lds
mov
mov
xor
cmpl
les
xor
fdecstp
push
xlat
aad
cmp
dec
add
inc
add
adc
mov
ljmp
lret
je
sbb
scas
mov
into
mov
xchg
push
sbb
roll
sbb
mov
js
pop
mov
add
dec
push
mov
rolb
dec
and
dec
sbb
fnstenv
sbb
in
pusha
fwait
dec
xlat
lea
pop
aas
add
adc
xchg
enter
es
push
in
jnp
pop
mov
jle
mov
sahf
mov
inc
xchg
inc
loopne
pop
pop
push
xchg
imul
sarb
pop
andl
mov
inc
mov
xor
sti
aad
insb
cmp
les
divl
cli
outsw
add
sti
insb
inc
xchg
mov
push
daa
mov
mov
clc
adc
cmp
cwtl
pop
dec
sbb
inc
cmp
mov
cmp
int3
mov
test
insb
dec
sbb
inc
inc
mov
and
xlat
sbb
js
adc
and
hlt
fst
call
cs
in
dec
mov
cmp
add
sub
adcl
andb
xor
in
out
inc
cli
sbb
xchg
mov
push
adc
dec
testl
xchg
adc
xor
sbb
fs
jmp
addl
mov
add
adc
clc
push
idiv
out
jge
pop
push
inc
ret
movsl
icebp
mov
out
add
cmpsb
std
lea
pop
repnz
pop
add
sub
and
shrl
cmp
es
cmpsl
or
mov
fwait
andb
test
dec
dec
cld
jge
sub
js
xor
jns
shrb
daa
lea
insb
push
inc
pop
dec
mov
loope
cmpsl
push
movl
xor
xchg
ret
repz
and
dec
lock
mov
inc
xor
mov
sbb
adc
das
decl
mov
push
repnz
xor
inc
cld
cltd
xchg
push
mov
and
xlat
jmp
ret
cltd
cmp
fisttpl
jge
lods
xlat
mov
sarl
add
cmp
adc
mov
inc
out
add
rcrb
test
dec
jecxz
pusha
mov
das
repz
add
jb
mov
insl
mov
inc
mov
adc
sbb
lock
xchg
iret
add
je
fistpll
roll
arpl
ds
add
pop
dec
push
pop
jg
xor
mov
lret
mov
cwtl
xor
fists
fisttpl
jle
arpl
arpl
or
dec
pushf
pop
xor
aam
fistpl
cmpb
add
pop
shlb
outsl
push
movsb
sub
out
mov
mov
mov
jp
add
std
pop
out
fsub
xchg
daa
mulb
mov
pop
sbb
dec
xchg
pusha
icebp
stc
test
push
xor
leave
adc
pop
inc
fnstcw
mov
inc
fdiv
lret
daa
ljmp
add
pop
sbbb
xor
lcall
push
sub
pop
push
dec
push
mov
adc
clc
mov
mov
in
dec
cld
test
lods
xor
sub
pop
cld
mov
cmpsl
test
or
out
insl
dec
sub
mov
mov
aad
test
push
sbb
mov
xchg
xor
inc
push
sbb
lcall
stc
dec
hlt
loope
loopne
xchg
adc
in
xchg
cmc
xor
jp
push
ret
adc
ret
mov
iret
mov
add
mov
xchg
pop
repz
cwtl
mov
rcrl
cmp
fdivrp
push
mov
ret
inc
mov
add
insb
pop
push
push
push
and
imull
mov
jb
inc
pop
inc
push
ds
fldt
jmp
push
push
add
frstor
push
out
aad
int3
daa
sub
out
push
mov
mov
and
int3
nop
in
fisttpl
in
mov
pop
in
ret
popa
out
jo
add
test
mov
xchg
or
stos
pop
insb
cld
popa
pop
roll
jae
mov
pop
rcr
je
das
sbbb
pop
adc
fisubs
test
imul
xor
scas
push
js
in
mov
add
push
jno
cmpsl
fstl
xchg
int3
mov
std
cmc
push
xchg
or
lds
iret
lret
and
test
jns
sub
cwtl
or
mov
sbb
sbb
test
stos
jne
push
add
fnsave
js
push
push
repz
loopne
cmc
sub
sub
mov
push
fisubrs
jbe
shll
dec
fistpll
sub
stc
imul
repnz
hlt
pop
jmp
insl
ss
push
jae
mov
mov
cmp
mov
rorb
mov
mov
mov
pop
int3
pop
mov
scas
ret
mov
cmpb
mov
lods
rorl
xchg
in
into
in
lret
bound
dec
popa
popf
mov
lods
mov
xchg
cmpsl
out
mov
int
xor
xchg
repnz
into
aad
sti
loopne
push
push
mov
clc
mov
push
into
leave
jo
dec
mov
insb
sti
hlt
incl
lea
push
xchg
cld
repz
jmp
push
jge
and
mov
or
out
call
clc
adc
aam
out
push
sbb
pop
pop
mov
mov
push
adc
or
xor
insb
cmp
jo
mov
cld
push
pop
mov
mov
cli
xchg
test
in
es
imul
adc
mov
into
adc
xchg
xchg
aad
outsb
add
jno
ret
pop
gs
loop
mov
and
add
arpl
outsb
fisttps
shl
mov
dec
mov
mov
push
jmp
fisttps
add
cmc
mov
cli
jnp
adc
sub
lods
mov
ret
sub
rolb
adc
into
shll
pop
hlt
incl
xchg
sbb
repz
sub
add
dec
gs
mov
sbb
movsb
dec
push
jae
out
or
lods
test
idivb
inc
dec
mov
sarb
fs
int3
jo
fcmovnu
push
cmp
leave
xor
adc
imul
push
cmp
mov
adc
sub
add
jle
jne
out
push
loope
jge
jg
cmp
sub
and
inc
sbb
sbb
scas
ret
push
test
pop
cmp
stc
cli
imul
leave
lock
cmp
mov
or
addr16
cli
int
popf
fwait
mov
jle
pop
nop
ja
jmp
dec
iret
lcall
scas
add
cmc
and
push
cwtl
or
nop
test
pop
push
out
xchg
jnp
inc
sbb
or
sbb
jl
popf
shrl
sahf
enter
push
loope
bnd
movsb
xor
insb
sti
cmp
or
dec
push
aam
dec
sbb
xor
push
xchg
rol
repz
int
cld
daa
cmp
aaa
mov
mov
xor
sub
pop
push
in
loopne
mov
xchg
push
les
cmpsb
sti
push
sahf
jo
stc
sbb
cwtl
cmp
psubb
xchg
pop
call
insb
push
jb
cmp
js
push
xor
rolb
push
mov
test
sbb
mov
les
stos
lcall
sbb
xchg
negl
mov
mov
in
cmp
sub
cmp
addr16
shll
add
lock
fidivrs
stos
in
xchg
jne
and
push
pop
add
popf
mov
ja
fcmovbe
mov
test
in
iret
sub
bound
stos
iret
lret
ficoml
jbe
pop
ljmp
inc
sub
shl
mov
gs
or
and
mov
push
pop
mov
jo
out
xchg
repz
loopne
cld
cltd
scas
push
call
ret
jae
ret
adc
jl
movsb
jb
push
imul
cmp
pop
mov
es
mov
jge
pop
dec
int
bound
cltd
addr16
jns
shll
inc
jnp
lahf
or
dec
pop
stos
pop
jns
sbb
xchg
inc
mov
aam
sub
inc
cld
fidivrl
xchg
jo
xchg
inc
pop
sbb
in
insl
xor
pop
dec
push
mov
fnstsw
inc
cli
popa
les
adc
popf
or
mov
xor
sub
das
push
fwait
mov
xchg
in
das
fucomip
cmpsl
jae
cltd
jl
xchg
sub
mov
adc
loope
mov
inc
cmp
adc
andl
hlt
push
mov
aaa
fistpll
int
push
sub
mov
test
sbb
xchg
sub
push
repnz
or
aaa
fsubrs
adc
pop
int
xlat
sbb
lods
xchg
pop
cmpsl
fldcw
scas
or
mov
out
and
pop
xchg
sub
testl
pop
inc
movsl
orb
sbb
in
jb
mov
mov
call
shl
push
test
jno
mov
push
movsl
xchg
and
jo
or
cltd
jl
mov
testb
cmc
sti
dec
or
shlb
mov
mov
mov
in
lahf
inc
gs
inc
icebp
jl
mov
fstpl
xchg
lods
out
nop
xacquire
in
jle
inc
clc
or
cmp
lret
and
adc
push
xchg
and
mov
mov
and
jb
cmpsl
sub
leave
ret
dec
xor
cmp
xchg
push
cmpsl
push
mov
shll
mov
hlt
push
pop
push
inc
ret
push
cltd
mov
pop
cmp
stos
addl
iret
mov
push
leave
jb
nop
push
sub
leave
out
bound
das
test
ret
xchg
inc
dec
sbb
jbe
movsl
cmpl
js
sti
leave
xchg
rcrb
jecxz
cmpsl
outsb
repz
sbb
xchg
lcall
sub
push
ja
pop
jg
mov
in
fsub
inc
or
xchg
ja
movsb
or
xor
aaa
pusha
rcl
sbb
popa
movsl
sti
mov
push
pop
dec
sbb
into
icebp
sub
pop
clc
in
push
loopne
xchg
pop
into
mov
pop
mov
cmp
mov
in
mov
mov
pop
cmpb
clc
cmpxchg
sahf
loop
push
mov
mov
lds
or
add
in
xchg
out
orl
pop
test
xrstors
rcrl
repnz
pop
mov
jo,pn
insb
adc
insb
push
sub
dec
cld
fiaddl
xchg
movsb
xlat
push
mov
xor
imul
or
ds
xchg
nop
cmpsb
mov
inc
and
or
out
cmp
push
xchg
in
ret
adc
lret
dec
aad
xor
imul
out
fwait
sbb
mov
sub
sbb
fs
fdivl
push
ja
insb
cmp
mov
push
movsl
movsb
xlat
scas
popa
mov
cltd
mov
sub
pop
jne
jnp
dec
and
popa
out
or
lcall
in
mov
inc
inc
mov
pop
cmc
adc
int3
sub
mov
adc
aam
es
shrl
adc
les
sahf
add
int
arpl
fwait
xor
push
or
pusha
dec
outsb
cmc
cld
loop
sbb
mov
or
pop
jbe
ljmp
and
ss
jecxz
popf
test
in
in
cld
jg
insb
jno
loopne
in
pop
lds
jecxz
and
inc
je
push
xchg
in
jl
out
stos
lock
xorb
fidivs
scas
outsb
in
push
mov
add
xchg
movsb
insl
mov
sub
imul
aam
out
inc
stos
aaa
mov
dec
arpl
addr16
fucomp
outsb
adc
add
sub
push
lods
xor
pop
sub
jnp
sub
scas
xchg
sub
jnp
dec
mov
adc
cmp
inc
add
mov
into
outsl
cltd
dec
mov
mov
movsl
jnp
push
into
jno
test
add
mov
jg
inc
dec
jae
rcr
inc
adc
inc
and
std
cmp
and
ret
ljmp
lcall
push
jo
in
cmpsb
loopne
push
outsl
pop
lret
out
nop
ja
dec
and
mov
and
add
mov
int3
add
mov
jo
arpl
sbb
out
lret
outsb
push
jp
push
insb
sub
fisubrl
das
mov
out
dec
stc
mov
bound
fwait
mov
inc
pop
in
cld
jmp
stos
jno
loop
aaa
sub
push
mov
fsubs
icebp
push
inc
test
jne
sub
mov
jmp
push
jno
pop
xlat
or
inc
add
lret
test
lcall
dec
outsb
lret
popa
sub
jg
mov
scas
iret
push
lahf
jno
add
loope
push
sub
jle
sub
je
aam
imulb
rcrb
mov
mov
loopne
imul
repz
adc
xor
cltd
aaa
mov
inc
jecxz
cmc
mov
ljmp
das
push
pop
movsb
jp
dec
mov
dec
ret
jae
dec
jge
iret
cli
into
or
inc
sarb
inc
jl
inc
sti
es
in
jecxz
out
jns
inc
cmp
pop
dec
mov
decb
in
jo
jne
insl
jnp
jnp
mov
jae
xchg
pop
jb
push
or
jne
loop
push
xor
pusha
ss
fld
out
inc
dec
cs
aas
pop
insb
loope
xchg
orb
sub
dec
or
ljmp
shrb
lcall
int
jl
mov
cmpsl
insb
js
jle
mov
ljmp
ret
mov
dec
in
cmp
cmpsl
mov
mov
adc
adc
aas
loope
jle
cwtl
or
fidivl
call
xor
jge
and
sbb
xchg
sub
stc
or
sbb
aas
cltd
xchg
cld
aad
ds
mov
mov
je
pop
int
popf
mov
fdivp
sbb
cltd
int
cli
dec
dec
jmp
xchg
subb
jle
fsubrl
ficomps
dec
add
sub
sub
nop
xor
adc
pop
inc
cmp
xchg
mov
scas
sub
inc
jo
push
test
lret
lcall
xor
sub
test
add
in
int3
sbb
mov
push
cld
ret
push
mov
insb
test
pushl
or
fucomi
loop
nop
test
cld
mov
test
jnp
fimuls
ds
sti
cmc
imul
in
cli
xlat
mov
pop
adc
jae
ljmp
inc
jmp
sbb
or
aam
cwtl
test
jle
add
inc
andl
cmpsb
adc
adc
aad
and
lret
cmc
push
das
mov
mov
dec
push
sti
mov
test
repnz
jle
sbb
sbb
bound
cmp
dec
sahf
mov
cmp
mov
out
xor
inc
inc
push
jmp
repz
sbb
mov
pushf
xchg
cmp
and
jl
pop
jecxz
mov
pop
int3
out
rorb
out
mov
iret
push
das
xchg
push
inc
aas
mov
mov
ja
adc
hlt
cmp
aas
loop
push
dec
push
cmc
andb
sub
push
jne
adc
outsl
pop
push
xchg
ret
mov
shl
les
push
cmp
std
jbe
push
test
push
dec
ret
dec
ljmp
std
in
ficoml
movsl
arpl
sahf
das
in
out
test
cltd
and
lods
movsb
bound
add
stos
icebp
imul
xor
cmpsb
popa
push
inc
and
xor
xchg
enter
xchg
push
inc
repz
call
adc
stc
jle
mov
pop
icebp
int
xchg
lds
add
nop
dec
sti
pop
ds
test
lock
aam
push
in
inc
stos
mov
lcall
movsb
loop
pop
mov
jo
aad
mov
je
loopne
xchg
mov
or
pop
loop
dec
repnz
lods
in
inc
jl
in
and
ljmp
cmc
add
mov
shrl
mov
icebp
subl
dec
push
sbb
fs
stc
or
cmp
ss
sub
jl
icebp
add
xor
aas
inc
daa
pop
adc
inc
mov
lret
sub
xchg
sub
repz
pop
dec
xlat
inc
xchg
mov
in
sbb
lock
movsb
lret
or
lock
hlt
lods
out
sbb
pop
cmc
inc
gs
data16
adc
repnz
lods
test
pop
popf
ret
xor
or
jns
cmp
std
hlt
loopne
sbb
in
and
push
sarl
sarb
push
push
jl
pop
jo
es
or
mov
lds
test
outsl
fcmovnu
mov
sub
stos
adc
jg
lods
add
cli
scas
cmp
xchg
ds
lds
or
xor
mov
lahf
dec
cmp
pop
push
jbe
push
shrl
inc
jg
iret
cmpsb
sbb
pushf
mov
pop
jo
xchg
notl
aam
in
aas
push
xor
cmp
or
pop
mov
sbb
sbb
pop
lods
icebp
cmc
or
pop
inc
bound
mov
inc
int3
mov
in
mov
iret
fdivs
divl
adc
out
pusha
sar
adc
fnsave
cmpl
aad
jbe
mov
pop
push
mov
fisubrl
fnstsw
lock
or
fildll
mov
xor
pop
xlat
push
sbb
pushf
out
mov
icebp
xor
push
fdiv
cmp
enter
out
mov
mov
jmp
mov
mov
xchg
inc
jne
jno
push
sbb
loopne
xchg
adc
imul
fistps
xchg
mov
mov
add
in
jae
sbb
mov
into
inc
fisttps
push
dec
jbe
mov
rclb
jns
loop
in
mov
stos
pop
rcrb
push
sub
mov
adc
lods
or
and
ss
enter
imul
or
jb
jb
fs
pop
mov
icebp
xchg
rcr
add
aaa
adc
jmp
idiv
stos
add
mov
loop
xor
adc
pusha
xchg
aas
mov
leave
and
in
mulb
fistps
pop
mov
stos
sbb
fiadds
pop
mov
scas
pop
ret
rolb
ja
adc
nop
ss
dec
dec
cltd
pop
pop
dec
or
add
outsl
or
dec
imul
add
iret
sahf
inc
cmp
inc
mov
scas
xor
ret
je
inc
bound
mov
jns
in
insb
std
adc
mov
lods
push
sarb
dec
lock
mul
negl
fisubl
push
daa
iret
loope
popa
pushf
jo
sbb
cli
sub
notb
xchg
clc
dec
dec
iret
mov
inc
mov
sbb
or
mov
inc
bound
scas
sahf
das
incb
and
sub
adc
in
pop
repnz
cli
test
inc
mov
bnd
arpl
or
shll
scas
or
adcb
insb
inc
addb
rcll
enter
add
fs
into
and
bound
das
inc
scas
mov
and
subl
imul
pushf
xchg
insb
test
mov
dec
adcb
idiv
cmc
push
push
mov
shll
mov
add
repz
mov
out
repz
dec
movsl
fs
add
into
cmpsl
sbb
xor
mov
jmp
or
cmpsl
aas
jmp
movsl
add
mov
repz
xchg
iret
ljmp
test
adc
das
xor
hlt
shll
lahf
pop
call
loop
in
pop
cltd
addr16
ja
mov
decb
in
cmc
mov
push
pop
pop
in
mov
shrb
pop
daa
inc
mov
jo
pop
sub
packsswb
pop
push
lock
sbb
lods
shrb
std
and
sti
push
loopne
inc
or
push
push
stos
sbb
dec
xor
add
in
jp
fcoml
jno
cli
out
inc
cli
sti
getsec
ret
cmp
add
fdivp
std
mov
pop
xchg
movsb
negl
pop
mov
mov
popa
icebp
rorb
mov
ret
sbb
add
adc
mov
repnz
cmp
pop
push
divl
sbb
cmp
pop
mov
movsl
fcomps
push
lea
jecxz
sub
adc
inc
aas
repz
clc
loopne
mov
les
aam
xor
sub
imul
push
roll
lea
cmp
xchg
xor
popa
jmp
sarl
ficoml
repz
in
mov
xchg
ud0
or
cmp
push
and
cs
mov
js
movsl
mov
lods
call
jl
push
in
sub
iret
pushf
sbb
addr16
dec
and
jbe
int3
test
push
mov
push
hlt
cmpsb
xor
stos
orb
adc
xchg
and
xchg
mov
cltd
cwtl
and
xor
adcl
jmp
nop
jo
mov
push
int3
inc
xchg
shlb
pop
in
sti
push
push
rcrl
das
pop
das
sbb
int3
out
sub
or
adc
pop
dec
cwtl
les
pop
je
push
push
test
clc
fildl
stos
mov
aad
cmpsb
fs
jno
lret
ja
shrb
push
adc
dec
sbb
sub
cmp
sub
jmp
stc
ret
mov
movsb
adc
xchg
xchg
lods
and
mov
fistpll
dec
adc
nop
hlt
into
lods
aad
and
ljmp
push
pop
dec
test
test
ret
sbb
arpl
rorb
cmc
add
jmp
sbb
roll
ss
adc
push
or
iret
pop
adc
push
fmuls
inc
scas
andb
call
rcrl
push
repnz
sub
fisttpll
insl
fmull
fnstsw
fcoml
aaa
push
jg
aaa
xor
outsl
add
and
neg
loope
shrd
xor
mov
xchg
cmp
pop
cmc
into
cmp
or
out
jno
movsl
sub
cmpsb
or
into
repz
scas
jle
pushf
movsl
jecxz
dec
mov
packssdw
cmpsb
fxam
lds
dec
jl
pusha
and
or
mov
loope
and
adc
mov
cld
pop
dec
add
shrl
imul
push
sbb
or
sub
insb
insb
pop
shr
rclb
push
and
pop
addr16
jne
and
stos
jbe
stos
mov
scas
stos
ret
gs
cmc
pop
jl
sbb
pop
mov
push
dec
out
add
xchg
pop
pop
icebp
xchg
sub
aam
mov
push
fsubs
or
jge
insb
shlb
sahf
adc
mov
sarl
test
je
cmp
mov
std
cmp
insb
insb
xor
xchg
cmp
jbe
jmp
add
cwtl
jmp
mov
lret
test
je
jae
clc
pop
bound
sbbb
movsb
das
sub
imul
push
adc
pop
cmp
dec
jmp
adc
jmp
xor
cmp
jl
mov
in
repnz
in
out
sub
push
andb
xor
call
adc
jle
or
maskmovq
idivl
jl
sub
lds
push
jmp
subb
in
or
das
push
out
stos
jge
sahf
mov
inc
movsl
mov
sbb
or
out
out
cld
jmp
rcll
ficomps
and
enter
movsb
test
xor
pop
and
stos
mov
cmp
sbb
sbb
fists
inc
sub
lock
insl
dec
enter
adc
xchg
ds
addr16
jl
stc
jg
mov
leave
pushf
jbe
sbb
out
adc
andl
or
out
ds
pop
out
int3
xchg
insb
xchg
push
push
mov
rol
stc
fs
scas
sahf
out
cs
hlt
outsb
jecxz
into
push
cmpsl
push
gs
pop
je
lods
mov
popa
mov
add
xchg
addr16
mov
cmp
lret
xor
pop
jno
mov
dec
jle
inc
jmp
stos
mov
lock
stos
jno
scas
ss
mov
stos
aaa
data16
test
mov
cmpsl
adc
jg
cmp
sbb
cltd
sub
push
sbb
pop
xor
push
sbb
pop
stos
jb
lods
jecxz
xchg
fcomps
mov
add
or
nop
negb
stos
mov
das
out
repnz
rcll
je
and
aad
shr
push
push
push
pop
mov
and
loope
jge
push
inc
adc
mov
or
add
pop
icebp
popa
int
cmp
mov
lea
fs
jp
sbb
sbb
and
mov
into
xchg
and
add
inc
lret
jns
pop
arpl
pop
pop
outsb
sbb
scas
push
dec
js
into
mov
shl
ficomps
push
sub
shl
and
mov
lcall
cmp
ss
clc
popf
loop
inc
lods
pop
leave
inc
data16
push
xchg
in
push
fs
test
jmp
sbb
int3
adc
jg
iret
cltd
cld
orps
fwait
dec
unpcklps
cmp
or
sbb
stc
cmpsl
stos
jns
cmpsl
pusha
xor
xor
fnstsw
inc
push
jno
les
je
push
sub
lods
cld
sub
arpl
enter
das
ficoml
jne
add
or
pop
lret
outsb
aaa
aad
loop
cld
out
arpl
and
add
aas
std
in
arpl
push
mov
mov
mov
adc
sbbl
test
cmp
sti
es
arpl
outsl
jae
and
xor
andl
imul
and
ljmp
cmp
pop
inc
mov
inc
xor
jg
jne
jne
and
xchg
imulb
adc
xchg
test
push
repnz
jbe
jne
aad
pop
daa
sub
or
popl
xor
sub
addb
cmp
daa
xor
jae
mov
inc
jl
dec
fistl
std
cmp
das
aad
in
or
mov
daa
jl
int
sbb
mov
orb
inc
mov
imul
mov
fists
icebp
jl
fs
rol
icebp
fadds
inc
lcall
xchg
popf
dec
in
stc
xchg
jge
shlb
pusha
sahf
push
in
xor
adc
cmp
or
gs
adc
mov
aas
xor
fistl
push
sub
and
or
mov
xchg
mov
or
push
mov
std
pop
cmp
insl
pusha
inc
movsl
push
dec
push
push
inc
notb
mov
jno
sub
popf
jb
adc
or
rcrb
idivl
pop
push
aas
cmp
aam
leave
out
dec
sub
xchg
inc
jle
pop
cmp
push
ja
xchg
xor
andb
lahf
mov
icebp
mov
mov
out
or
pop
lock
dec
sub
xchg
lahf
xchg
pushf
add
sbb
jns
dec
mov
inc
dec
pop
pop
out
je
push
jne
cmp
lds
or
mov
clc
pop
dec
mov
cld
inc
jno
xchg
dec
xchg
es
sar
test
xchg
test
in
ljmp
sub
dec
fisubs
ret
scas
jmp
sbb
aam
aad
dec
mov
ret
in
hlt
jp
int
outsb
rolb
inc
jb
jne
arpl
pop
mov
outsb
sub
popa
mov
dec
scas
dec
push
or
in
xchg
pop
in
movb
sub
rcrl
fwait
aad
fs
ss
ljmp
jb
xor
adc
or
dec
jnp
sub
fs
out
pop
pop
inc
cmp
mov
fwait
div
mov
mov
movsl
imul
dec
sbb
cmc
stc
cmp
add
add
jo
xor
andb
movsb
adc
rolb
jl
in
out
jno
and
and
inc
lock
fisubrl
subb
mov
mov
and
insb
add
sbb
jae
imul
push
jge
inc
in
and
mov
cwtl
sbb
cwtl
mov
test
mov
adc
xor
adc
adc
jl
jnp
shlb
mov
push
nop
mov
push
or
ret
pop
aaa
out
decl
clc
inc
mov
mov
adc
or
xor
lcall
sbb
jmp
adc
dec
dec
xor
enter
add
lea
iret
je
into
std
adc
lahf
shrb
lahf
inc
sbb
mov
lret
adc
into
xor
repnz
dec
inc
jnp
movsb
sbb
cmp
adc
and
sbb
pop
pop
pop
test
sbb
pop
mov
cmpsl
clc
out
push
nop
jb
int3
xchg
sub
test
in
jp
pop
and
mov
je
test
xchg
mov
scas
pop
xor
inc
push
jecxz
jns
rorl
imul
pop
sbb
andl
fdivl
arpl
pop
fidivrl
mov
mov
lock
aaa
ss
gs
ret
jge
or
push
push
roll
pop
push
fbstp
dec
imul
test
test
xchg
inc
xchg
dec
data16
cmpsl
and
arpl
add
mov
pop
xchg
mov
push
inc
xchg
arpl
push
adc
xlat
repz
mov
jns
jg
call
pop
jne
xchg
scas
cli
push
xchg
jb
mov
sub
sub
add
inc
and
mov
and
sahf
mov
push
sahf
cli
aam
push
cmp
ffree
mov
stos
les
int3
xchg
clc
lahf
lods
push
cs
mov
sbb
or
insl
lock
jmp
negb
addr16
icebp
jbe
clc
jmp
dec
mov
xchg
lret
push
cmpl
sub
cmp
outsl
pop
jbe
inc
clc
pop
xor
cmpsb
inc
fs
jge
mov
cmpsb
adc
sub
xchg
and
mov
fsubl
xor
fldpi
push
xor
sbb
mov
cmp
add
iret
in
rolb
sbb
maskmovq
negl
jbe
into
insl
cld
xchg
dec
sar
or
cmp
mov
mov
mov
xchg
adc
bound
pop
xchg
push
fnstcw
mov
xchg
pop
sbb
cmp
enterw
cmp
pop
sub
les
jns
ret
mov
leave
das
mov
je
iret
sub
dec
xchg
sub
mov
stos
xlat
xchg
sub
test
ja
out
xchg
mov
aaa
push
rclb
mov
cmp
les
xor
adc
cmpsl
movsl
jg
and
icebp
daa
rorb
das
out
shl
mov
idivb
scas
pop
mov
jnp
xchg
jno
mov
out
fucomi
gs
or
dec
gs
sbb
fwait
adc
push
xor
arpl
add
add
sbb
popa
mov
sbb
xor
and
jb
jmp
addl
cld
mov
insl
add
dec
inc
pop
xor
sarl
aam
shll
inc
add
jnp
mov
add
sbb
sub
push
cld
cli
shrl
lds
data16
ret
loop
andl
icebp
decl
in
insb
int
mov
fcoml
jo
or
xchg
pushf
lahf
jle
jecxz
push
idiv
and
cmp
cmp
pop
insl
das
rcr
or
pop
sbb
inc
jae
scas
dec
cs
push
sarb
insl
nop
lock
repz
rcll
pop
shrb
lds
ss
negl
js
mov
cwtl
subb
mov
daa
sbb
out
and
orb
push
fcompl
addl
push
jmp
mov
cmp
enter
rcll
leave
sahf
mov
mov
fdivrl
push
rcll
push
rcll
and
aas
push
fistpl
jmp
adc
xor
out
sbbb
and
scas
jle
add
mov
out
mov
insb
xchg
rcr
jae
push
cli
repz
cmp
and
add
arpl
es
sub
aaa
and
cmp
cld
dec
mov
mov
mov
add
into
les
or
push
push
or
sub
xchg
mov
es
aad
shr
or
insl
test
cltd
jns
cmp
lret
inc
ljmp
nop
push
mov
lret
lahf
ret
decl
pop
lahf
addr16
and
xchg
fs
leave
shrl
or
jmp
popf
aas
arpl
mov
fisubrl
dec
ds
cmp
fstpt
and
sub
pop
loope
enter
jl
push
frstor
lock
das
jmp
push
cli
xchg
push
out
subb
loop
sbb
ret
rcrb
jnp
cmp
and
mov
inc
sarb
test
ss
int
in
adc
daa
out
jecxz
dec
insl
sub
dec
mov
dec
ret
pop
int3
add
dec
sbb
xchg
sbb
call
xbegin
add
scas
xorl
sarb
ss
lock
dec
shll
icebp
aad
shll
push
dec
cmp
in
call
add
cmp
pop
pusha
adc
push
pop
call
insl
imul
insl
sub
adc
jae
cmpb
add
ret
add
jb
pop
lret
pop
stos
mov
push
mov
adc
cmp
sti
fstps
pop
mov
lcall
adc
cmp
mov
insb
shll
jmp
jbe
stc
or
aas
fiadds
sarb
sub
cld
jge
das
xor
xchg
adc
dec
je
pop
mov
pop
fistps
out
jo
addr16
into
xchg
jne
in
jge
outsb
test
or
xchg
push
jae
jg
dec
fmull
add
cmp
fwait
or
cwtl
jne
xor
jne
into
push
int
add
outsl
pop
dec
cmpw
das
mov
xor
add
mov
mov
push
jg
rcpps
jbe
sub
inc
clc
clc
xor
std
test
insl
inc
das
in
out
sub
call
cld
pusha
push
pop
arpl
fstps
cmp
fcmove
scas
dec
xor
icebp
test
negb
inc
nopl
or
out
test
xor
pop
jns
repnz
ret
insl
lcall
lcall
stos
jl
mov
faddl
mov
mov
add
stos
int3
bswap
imul
cmpsl
in
lret
inc
fisubl
test
cltd
fcoms
mov
packssdw
jle
cmp
std
cmp
inc
or
cld
clc
fisubrl
xor
lcall
push
addl
dec
xchg
lcall
test
mov
test
lds
pop
xor
lods
and
mov
push
adc
in
rcl
popf
mov
xchg
popa
jb
test
sbb
ljmp
xchg
jl
test
xlat
xor
clc
jne
out
mov
cmc
aas
xchg
inc
aas
sub
jg
mov
fsubs
cmc
fnsave
fsubs
pop
nop
leave
adc
imul
das
fwait
aam
inc
in
fsubr
lcall
ss
fs
fbld
clc
stc
sbbl
ds
mov
add
jmp
adc
push
test
imul
shrb
loop
stos
add
cmp
jbe
stc
sti
mov
mov
and
ret
jp
pop
adc
mov
sahf
mov
movsl
shlb
repnz
sbb
mov
adc
sti
test
lds
xlat
sti
fstl
shl
das
aad
sbb
sti
cmp
fstpl
shlb
push
mov
mov
vxorps
xchg
mov
jbe
cmp
insb
add
sub
cltd
and
popa
sub
mov
push
xchg
negl
push
push
inc
adc
aad
out
fucomi
je
jg
mov
aam
sahf
inc
xchg
sbb
pop
orps
icebp
adc
sbb
jno
jbe
adc
into
sub
loop
jno
cmp
inc
mov
jne
fldcw
or
mov
in
pop
xor
cmp
jae
sub
cmpsl
sbb
out
sbb
sbb
ja
nop
jb
sub
das
imul
testl
add
call
pushw
test
jb
pop
or
mov
mov
inc
cmp
xor
in
scas
and
jp
mov
lcall
mov
icebp
xchg
fstp
cmp
pop
ja
mov
inc
cmp
sbb
or
push
or
cmp
lock
or
sbb
mov
pop
pop
pop
jne
cmp
or
test
fs
dec
inc
inc
es
test
sub
sub
dec
rclb
js
imul
prefetch
or
imul
cmc
jmp
mov
out
xchg
bound
loop
mov
push
repz
and
push
xchg
ret
and
js
push
xorl
or
sub
sbb
std
arpl
insl
cmp
inc
mov
sbb
inc
stos
sub
in
push
ret
xchg
mov
lock
jbe
mov
mov
pop
pop
mov
cli
xor
jge
mov
out
leave
and
cltd
sub
fwait
jb
arpl
pop
sub
jne
cmpsb
mov
add
adc
loop
popf
mov
lret
loop
cld
adcl
pop
jl
cmpsl
jo
mov
sub
push
and
incb
mov
jnp
mov
loopne
call
shl
sarb
push
and
fdivs
or
ljmp
rolb
sti
test
cs
addr16
jp
mov
imul
shlb
add
call
cs
ja
leave
jl
mov
lea
movsb
addb
leave
dec
xchg
push
sbb
arpl
jmp
lret
or
in
xor
mov
pop
xchg
mov
sti
jp
add
bound
jmp
rcrl
fldenv
cmp
rcl
mov
sbb
loopne
in
pushf
add
iret
std
add
sub
mov
repnz
sub
cwtl
lock
or
stc
into
sbb
jae
and
les
je
bound
xchg
pop
notb
pop
jae
xor
movsl
dec
pop
pop
mov
sti
or
std
lcall
ljmp
cwtl
push
pusha
mov
stos
jecxz
sarl
dec
lret
dec
jg
cmp
pop
mov
negb
lea
xchg
mov
stc
jg
adc
xchg
or
orl
arpl
add
in
cli
jmp
push
inc
jmp
repz
mov
imul
sbb
mov
stos
mov
inc
in
mov
pusha
mov
pop
xchg
xor
stos
lahf
sbb
in
cmpsl
insl
mov
jmp
mov
lods
and
push
imul
jae
cld
mov
daa
rolb
dec
ret
mov
das
cmp
mov
test
ret
std
jnp
std
mov
dec
mov
jbe
pop
jle
in
orl
and
pop
cmp
out
js
insb
sub
jns
lods
adc
and
les
jge
sbb
out
aas
popf
adc
mov
cmp
sbb
push
and
jp
mov
in
test
ret
gs
aaa
mov
loope
daa
call
sbb
mov
icebp
adc
fistpl
lcall
and
push
mov
lcall
sti
out
mov
inc
out
cmp
mov
sti
filds
je
add
clc
in
mov
ljmp
into
mov
fsubrs
sub
repz
addr16
pop
jmp
sbb
bound
pop
lea
mov
jno
xor
dec
xor
stos
push
cmp
test
mov
stc
scas
push
popf
frstor
in
dec
into
stos
test
push
imul
mov
lcall
mov
test
je
pop
inc
jnp
jp
test
sbb
xor
lds
sbb
mov
pop
sub
inc
sub
and
hlt
nop
sbb
push
loope
push
aas
adc
cli
xchg
pop
arpl
popa
jnp
sbbl
and
push
punpcklbw
mov
fwait
jb
pop
cmp
jne
sbb
add
lock
adc
pop
in
stc
jp
test
lds
imul
xor
ja
push
cmp
dec
loopne
jp
mov
sub
mov
cmp
fcoms
addl
pusha
test
cmp
pop
inc
or
sub
sahf
cmc
xor
xor
imul
popl
push
shll
enter
xchg
sbb
mov
xchg
rorl
out
cmc
mov
test
cwtl
push
mov
mov
mov
inc
jg
xchg
lret
out
xor
leave
mov
fisubrl
jecxz
idivb
push
jg
out
add
push
fbld
cs
lods
pop
inc
aas
iret
xchg
fiadds
int
aaa
je
add
loop
mov
sbb
test
dec
cmc
mov
fcoml
loopne
and
jmp
push
inc
sub
cmp
jae
into
pop
mov
fidivrl
aam
or
aad
and
adc
das
dec
pop
xchg
mov
sbb
pop
dec
shll
pop
mov
mov
jno
pop
xor
dec
jle
fiaddl
sub
adc
hlt
pop
and
mov
gs
mov
mov
sti
insl
push
mov
mov
mov
lret
test
aad
aaa
out
xorl
push
ret
add
fsubrs
ficomps
mov
xor
aas
xchg
mov
mov
mov
int3
pop
jbe
outsl
xchg
push
iret
adc
cli
sub
and
pop
push
ljmp
out
outsb
je
aad
sti
sbb
ret
notl
hlt
addl
push
jns
jo
inc
xor
faddl
or
push
add
xorl
dec
push
lahf
push
stos
jg
mulb
jns
add
inc
mov
inc
pushf
inc
stos
cmpsl
pop
iret
dec
and
cmp
sbb
ret
fs
lret
xor
cltd
fwait
inc
stc
jle
push
hlt
dec
lock
push
leave
lock
mov
add
daa
adc
jg
sbb
sub
mov
jecxz
and
les
fildl
outsl
inc
dec
add
pop
rorl
mov
rcll
dec
jmp
vmwrite
ret
test
and
xor
mov
popf
pop
xchg
add
hlt
icebp
stos
bound
bound
xor
pop
aaa
cltd
stc
mov
pop
pop
inc
aam
pop
sbb
mov
xchg
push
fists
pop
sub
je
jp
sub
mov
push
mov
pop
test
roll
push
js
ret
jb
jp
pop
pop
add
dec
xor
call
pop
ds
pop
repnz
pop
sub
fstp
push
aaa
jmp
enter
lds
xchg
lds
push
xchg
adc
aad
pop
lods
adcb
lods
cmpsb
dec
pusha
sti
aad
mull
pop
cmp
in
outsb
in
xchg
ret
adc
sbb
cmpsb
test
mov
sub
insb
out
push
mov
push
mov
lods
leave
push
ss
pop
rolb
dec
mov
sub
jmp
fbstp
inc
cmp
mov
mov
ret
pushf
std
or
testl
pop
sub
sbb
cs
add
xchg
clc
add
aam
jge
xor
push
xchg
inc
daa
mov
adc
test
jnp
dec
imul
add
inc
in
mov
stos
or
dec
xor
inc
xchg
loope
sub
lcall
out
or
add
rcr
jl
shrl
jmp
lods
out
popf
jl
cmpsl
and
aam
shr
cmp
jbe
mov
data16
hlt
in
xchg
mov
jne
jb
cli
mov
sahf
or
cmpsl
xor
gs
fadds
or
call
jl
push
lcall
mov
sahf
fs
idivb
push
cmp
test
imul
addr16
mov
sub
xchg
inc
lcall
mov
pushl
mov
jb
cltd
xor
pop
jmp
mov
sub
jb
inc
out
xchg
sar
adc
mov
mov
fldcw
pop
add
and
dec
sub
test
mov
out
inc
ljmp
cmp
and
lods
je
push
cld
mov
enter
jmp
and
sbb
scas
xchg
stos
pop
sti
inc
repnz
test
sub
daa
mov
add
sub
pop
sbb
dec
les
and
lods
in
in
in
and
dec
xchg
mov
subl
or
lret
dec
aaa
lcall
arpl
daa
out
stos
jmp
sub
in
shlb
push
or
cmpsl
push
test
xchg
scas
jnp
mov
xor
hlt
test
sbb
clc
aam
insb
push
xchg
push
sub
sbb
cwtl
xchg
roll
jmp
and
xor
mov
arpl
das
pop
and
cli
mov
popa
mov
xor
les
pushf
arpl
lea
lret
ljmp
aad
xor
testl
mov
outsb
addr16
dec
loopne
lods
mov
sub
jmp
fnstcw
sti
scas
ja
ret
sbb
dec
mov
iret
adc
cld
fdivrs
subl
mov
jmp
lcall
popf
arpl
out
pop
cmp
pop
pop
fildll
pushf
lahf
das
jle
lret
sbb
lock
jns
in
jecxz
xchg
addr16
inc
adc
add
xlat
sbb
ficoms
pusha
cmp
mov
test
add
fstl
jg
scas
jge
rorl
in
call
das
daa
jmp
mov
add
pop
clc
test
fildl
aad
test
mov
fwait
ret
cwtl
inc
add
inc
lret
ficompl
insb
test
movl
mov
ljmp
sbbl
add
sbb
lea
fstenv
lock
fldl
shrl
xchg
push
js
add
mov
pop
negb
pop
bound
xor
lea
int3
inc
js
inc
or
int
mov
jb
arpl
sbb
addr16
popf
sbb
js
lahf
or
scas
xor
mov
addr16
xchg
mov
pop
push
scas
call
or
and
add
mov
ljmp
in
xchg
xorb
xchg
add
sbb
push
or
xor
loope
test
ror
push
lea
inc
imul
cmpsl
sub
nop
subl
fwait
xor
mov
pop
adc
ds
clc
mov
mov
rcrb
xchg
rcrb
loop
cli
sahf
pop
pop
mov
jl
sub
xchg
xorb
enter
es
sbb
mov
out
and
xchg
call
sub
jg
mov
or
sub
loopne
pop
ret
mov
pop
jge
sbb
dec
bound
hlt
cmpsl
fisttps
aam
fcomp
or
inc
inc
cmpsb
and
mov
push
mov
enter
sarb
in
test
push
xchg
call
cmp
add
mov
sbb
or
push
cmp
es
push
loopne
pop
gs
aaa
fnsave
mov
fs
xor
outsl
xchg
subb
into
adc
pop
mov
adc
lahf
mov
inc
mov
cmp
les
in
pusha
push
mov
lock
dec
iret
dec
out
leave
mov
out
add
int
mov
mov
gs
shlb
pop
dec
hlt
adc
or
mul
inc
xchg
inc
fbld
es
lea
out
mov
push
movsb
sbb
cmp
aaa
add
sti
test
push
lods
cmp
js
fdivrl
cmovge
les
out
loope
int3
push
jb
rolb
xor
xor
jbe
out
mov
pop
jbe
dec
mov
pusha
ret
cld
jnp
push
mov
insb
arpl
popa
mov
and
or
rolb
js
data16
cli
jg
mov
pop
mov
mov
movsl
loop
in
shl
cmpsb
fsubl
lret
pushf
pusha
js
xor
gs
and
lea
push
outsb
xchg
stc
fcoms
repz
jl
xor
push
sbbl
mov
ja
fsubrs
jo
loop
sub
inc
outsl
add
sub
inc
es
adc
stos
and
psrlw
lea
rcrl
and
rol
push
or
mov
lret
cltd
mov
ds
pop
shll
xor
add
sub
push
stos
jecxz
stos
stos
fsubrs
outsl
fwait
addr16
xor
xor
jge
and
lock
dec
loopne
push
shll
dec
inc
xchg
fnstenv
enter
mov
mov
xchg
int
dec
sbb
or
add
notb
jae
aas
mov
scas
fnstsw
lcall
add
sbb
loopne
cmp
dec
popf
pop
hlt
pop
fmull
adcb
shll
and
ret
pop
mov
out
cmpsl
jno
dec
and
pop
sahf
pop
addr16
jnp
xchg
mov
test
and
mov
mov
add
mov
mov
enter
popf
sub
jmp
mov
xchg
cmp
loopne
mov
sti
pop
adc
fs
mov
inc
sbb
and
aad
jl
in
xlat
rcl
enter
jg
cs
outsb
dec
fs
aad
cmp
shrb
gs
and
or
mov
mov
shll
add
inc
xorl
stos
adc
mov
mov
add
add
push
aaa
mov
inc
imul
mov
jo
leave
sbb
mov
std
icebp
inc
push
push
mov
xor
cmp
fsubs
and
push
push
xchg
dec
filds
idivb
sti
cwtl
mov
mov
xor
push
pop
jnp
scas
loop
mov
inc
mov
jne
cmpb
rorb
mov
jge
sbb
dec
in
add
mov
popa
and
cmp
jbe,pn
adc
push
mov
js
aas
xchg
cli
call
das
push
cld
inc
push
les
movsb
enter
lods
mov
adcb
aam
ds
push
jmp
shll
scas
jbe
dec
rcrl
es
xchg
shlb
jge
jle
out
es
mov
pop
or
ja
scas
cmp
cmpsb
icebp
push
imul
lret
push
sbb
push
add
or
cmp
jp
xor
jae
iret
test
push
add
xor
xchg
or
imul
fxch
addr16
test
fnstenv
push
dec
in
fistl
leave
int
jl
pop
sub
jge
enter
adcb
mov
in
mov
dec
andb
sbb
sti
ja
pop
jns
aaa
mov
mov
xlat
xchg
hlt
clc
jp
xchg
fisttpl
xor
in
xor
lock
mov
and
jne
dec
xor
cmc
push
je,pn
cmp
push
lods
push
subb
xor
ds
xor
mov
stos
cmp
dec
movsb
jecxz
mov
in
cmpsb
jecxz
mov
push
sahf
aad
or
out
popf
addr16
mov
imul
movsl
mov
enter
push
pop
aam
pop
xchg
push
cmp
add
mov
push
or
fldcw
fcoms
iret
sub
lret
and
xchg
sbb
js
xor
inc
fcomps
inc
lock
scas
xor
mov
sbb
push
andb
imul
popa
xchg
mov
jecxz
hlt
pushf
lahf
ja
xchg
stos
cwtl
sub
xchg
xor
jae
pop
fwait
mov
std
pusha
loope
add
push
fcmovnb
pop
scas
fidivl
sub
xorl
push
in
bound
xchg
xor
ja
inc
decb
add
mov
push
shll
dec
cld
sbb
cwtl
rolb
cs
cmc
lret
jp
sub
sahf
push
daa
aas
daa
xchg
jp
repnz
or
sub
xor
inc
aam
sbb
test
mov
rclb
mov
cwtl
add
sub
sub
jbe
pushf
fdiv
jb
popf
sbb
mov
dec
shl
xchg
inc
mov
cmp
movsb
or
adcb
pop
adc
movsl
sti
xor
ror
mov
inc
and
jge
fsubrl
rclb
shl
sahf
test
fwait
dec
cwtl
or
jge
lds
pop
sahf
movsb
jne
scas
pushf
sbb
pusha
lret
mov
mov
mov
jle
in
popf
test
negl
add
dec
lock
shll
sub
das
push
pop
xchg
cmp
add
dec
add
push
jecxz
aas
add
xor
adc
orb
popa
aam
and
jmp
xchg
pusha
sbb
repz
pop
clc
movsb
rcl
push
inc
cmp
cmp
ljmp
add
std
sti
lods
test
xchg
pop
jmp
loope
ret
mov
cmp
jl
in
bound
push
sbb
aaa
int
inc
mov
push
mov
adc
push
das
out
mov
adcl
cltd
loop
aas
xchg
loop
push
ror
out
cmp
movsl
cmpsl
sahf
insb
xchg
and
jno
hlt
or
int
in
cmpsb
jbe
popf
cli
or
inc
pop
imul
push
sub
xchg
daa
cmpsl
pushf
cwtl
sbb
mov
test
leave
pop
xchg
lods
sbb
push
mov
jne
xchg
cmpsl
test
leave
mov
out
out
arpl
push
xchg
js
std
enter
ret
cs
pop
pop
mov
mov
xchg
mov
dec
cmp
outsl
or
adc
lahf
mov
pop
push
es
or
cmp
ljmp
test
popf
jg
push
ror
sbb
inc
adc
jl
push
int3
imul
lea
rolb
jp
adc
aam
xor
cmpsb
inc
inc
jb
inc
push
push
mov
cmp
push
loop
lods
cs
in
sub
stos
xor
out
sub
scas
push
sbb
and
shll
xor
inc
ljmp
fwait
or
add
hlt
shrl
cmp
inc
in
cmp
mov
in
call
icebp
and
and
sti
push
pop
mov
notb
movsb
or
mov
fwait
sbb
cmc
cltd
out
cmpsb
sets
xlat
add
adc
iret
shll
stos
add
sbb
fwait
es
inc
mov
popa
je
mov
sub
repz
dec
in
mov
or
inc
inc
aas
mov
sub
adc
xorb
daa
and
dec
addr16
outsb
push
add
add
push
mov
mov
xor
push
cwtl
hlt
mov
rclb
mov
add
fsub
in
fs
xchg
fcoms
xor
mov
vpunpcklqdq
mov
aad
in
lcall
jl
push
cld
arpl
mov
xchg
sub
fs
icebp
inc
xchg
int
or
jle
sahf
mov
data16
adc
pushf
int3
xlat
cmp
test
mov
sbb
stc
lret
xor
cmc
stos
outsl
iret
and
pop
mov
out
pushf
das
das
jo
xor
cld
sub
ljmp
test
mov
dec
daa
lods
into
mov
movsl
insl
mov
mov
pushf
inc
push
adc
fidivrl
lds
and
jne
mov
fs
jle
shrl
repz
inc
fsubrl
roll
xchg
mov
xchg
mov
adc
or
sahf
push
subl
in
stc
mov
fsubp
stos
xchg
push
pop
mov
cmp
imull
push
mov
call
aas
mov
inc
add
pop
cmc
pop
jb
mov
mov
dec
xor
mov
bound
inc
stc
or
add
push
lock
push
call
pop
mov
outsb
xlat
es
or
xchg
push
xor
mov
dec
pop
jmp
das
sarl
xlat
mov
sbb
and
test
imul
out
cwtd
cmc
insb
movzbl
es
or
outsl
inc
or
daa
cmp
push
push
cmp
std
fistpl
xor
sub
and
lods
mov
mov
or
sub
push
scas
push
cmp
dec
nop
test
pushf
or
in
and
pushf
jmp
add
dec
xor
divb
push
jecxz
and
mov
pop
ja
mov
in
or
pop
mov
fwait
inc
mov
add
fs
insl
testl
push
xchg
sbb
popf
xchg
icebp
add
call
sbb
lret
lods
adc
outsl
jno
das
icebp
pop
and
mov
shrl
cmp
and
das
jnp
cs
push
dec
hlt
cmpsl
in
cs
fnsave
and
dec
icebp
mull
bound
out
int3
rcl
cli
mov
or
dec
or
inc
orb
out
ret
mov
pop
notb
push
call
adc
je
or
or
imulb
pop
push
fsubl
ret
dec
js
int3
imul
dec
pop
sahf
or
jp
jle
cli
call
xchg
ds
mov
or
inc
shrb
push
or
dec
lock
movsl
mov
jo
push
and
and
adc
hlt
into
pop
arpl
pop
and
and
lret
dec
push
mulps
pop
repz
pop
adc
sbb
xchg
mov
out
dec
pop
lret
mov
dec
movsb
cwtl
sbb
pushl
add
mov
add
jnp
mov
cmp
mov
daa
xor
pop
pop
mov
lock
cmc
imul
cmc
lcall
add
or
jge
bound
fimuls
dec
data16
lcall
enter
pusha
sub
jae
xchg
test
cmp
xlat
inc
dec
sbb
dec
dec
daa
cmp
jo
jle
lock
sti
pop
outsl
adc
sarl
jp
testb
gs
shll
mov
xchg
test
push
shlb
pusha
and
scas
mov
rcll
jmp
shlb
call
jmp
mov
push
inc
jp
cmp
pop
ret
test
pop
fdivrl
std
mov
dec
push
lcall
xchg
data16
mov
mov
jecxz
outsl
mov
aad
inc
mov
cmc
pop
xor
add
shl
ljmp
shll
push
lret
push
cmp
ss
loope
and
adc
negl
insb
adc
jno
fldl
xor
xchg
es
leave
rcr
mov
fcoml
lds
xor
andb
scas
cs
xchg
rcr
cmpsl
lcall
pop
cltd
in
or
push
or
incb
and
jmp
sub
xchg
cld
negb
cmpsl
xchg
dec
jecxz
adc
xchg
movq
and
clc
xchg
xchg
and
xchg
out
addr16
jae
call
aas
adc
fprem
jge
lds
and
adcl
imul
mov
pop
push
inc
or
xor
fwait
xchg
icebp
stos
jp
inc
xor
add
cltd
ds
jne
cmp
xchg
sti
fsubrl
mov
iret
or
xor
add
orl
in
mov
xchg
add
imul
icebp
pushf
push
jmp
ljmp
loop
test
pushf
mov
popf
pop
out
cli
inc
int
lods
push
imul
or
push
adc
stc
mov
es
mov
imul
mov
add
sub
add
leave
in
push
je
sub
fimuls
xor
clc
inc
push
cmpsl
sub
push
cs
lock
cmpsl
repnz
push
into
loop
dec
in
push
fs
cli
or
fldenv
stos
mov
mov
xchg
adc
xchg
cmp
sbb
xor
cmc
and
orl
leave
add
lds
add
sub
cmp
divl
push
lret
add
movsl
stos
add
pop
mov
sbb
sbb
nop
fwait
push
mov
enter
mov
movsl
dec
inc
or
mov
mov
insl
pop
out
scas
pop
fbstp
roll
bnd
stos
mov
mov
repnz
mov
into
jno
and
lods
fwait
jecxz
xor
rolb
cs
hlt
not
clc
add
xchg
mov
ljmp
mov
xchg
insb
bnd
xchg
js
iret
sub
jl
dec
add
test
dec
jp
push
push
rcr
jns
inc
add
add
adc
add
subb
test
enter
adc
lahf
fbld
dec
shl
lea
sbb
movsl
mov
push
add
inc
xlat
mov
adc
push
mov
out
pop
roll
mov
orb
mov
lcall
pop
mov
cmc
push
inc
movsl
test
cmp
imul
in
add
pop
lods
inc
dec
stos
aaa
das
mov
inc
xchg
jp
dec
stos
sbb
mov
inc
aad
std
aad
jae
mov
das
add
cs
pop
push
mov
sti
or
dec
mov
ljmp
cmc
sahf
out
lcall
mov
les
inc
sub
imul
lds
add
lods
xchg
imul
sbb
pushf
mov
sbb
mov
fmuls
sbb
mov
dec
icebp
push
fdivl
jmp
add
sub
jmp
jno,pt
aas
sahf
outsl
mov
ror
pushf
or
or
mov
rorb
lahf
push
cmpl
mov
push
scas
movsl
cs
dec
and
rclb
adc
inc
out
cmp
sbb
cmpsl
mov
loope
aam
mov
xlat
cltd
or
jl
push
lcall
mov
fidivl
adcb
inc
negb
xlat
xor
xor
lea
sar
jns
pop
jbe
inc
fmuls
sub
mov
imul
les
rcl
mov
pop
das
repz
jp
sub
in
push
cmp
cmpsb
dec
cmp
mov
jmp
int
sbb
dec
rcll
ss
stos
pop
addr16
mov
in
arpl
lods
adc
cmp
or
push
aam
scas
mov
xor
and
fsubrs
mov
push
shlb
adc
test
push
pop
mov
mov
sub
push
pop
push
sbbb
out
shll
hlt
xchg
cmp
popf
test
leave
adc
push
std
in
scas
hlt
jno
arpl
ss
push
sub
rolb
bswap
scas
xor
sbb
ja
mov
sbb
sub
push
sub
mov
or
movb
xor
adc
gs
ja
movsl
cmp
enter
inc
mov
push
lea
pop
mov
aam
mov
insl
sbb
inc
addr16
or
rcrl
nop
ds
lods
mov
inc
and
adc
lret
lahf
insb
or
jg
dec
adc
and
scas
mov
xchg
icebp
add
sbb
loope
dec
fwait
repz
lret
popa
mov
arpl
out
in
or
jle
popa
fbstp
idivl
fildl
jb
lcall
test
popa
push
shr
mov
and
bound
ds
insb
xor
dec
je
lcall
pushf
shr
push
jne
imul
adc
int
pop
push
ret
nop
out
or
ja
stos
push
sub
sbb
mov
movsb
add
scas
adc
mov
pop
push
push
movsb
gs
jmp
add
mov
add
in
aas
push
popa
pusha
shlb
cmc
sub
mov
or
and
in
daa
stos
mov
or
inc
sbb
dec
jmp
cs
pusha
mov
sub
pop
jo
mov
sbb
shll
jb
push
xor
sbb
int
rorl
fists
mov
xor
xor
mov
jecxz
popa
or
pusha
in
es
mov
into
imul
or
pop
push
xor
sbb
enter
das
mov
in
xchg
push
iret
sub
orb
push
popa
cmp
ds
or
in
outsl
nop
les
inc
int
mov
push
jae
mov
orl
nop
pop
into
pop
push
pop
test
into
iret
xchg
ds
std
add
outsl
test
mov
in
jle
dec
pop
cwtl
xchg
xor
loop
adc
loop
ret
xor
sub
dec
das
mov
into
outsb
xorb
dec
add
or
cmp
int3
sbb
movsl
lret
pop
jg
pushf
sub
push
popf
xor
out
in
into
sbb
pop
outsb
mov
or
add
push
mov
add
in
aam
insb
push
add
pop
mov
cmp
push
ror
out
int
sbb
cmp
scas
pop
aam
cmc
addb
jle
sti
sbb
iret
pop
cltd
fs
mov
mov
sbb
imul
in
shl
xor
pop
or
loopne
xor
mov
inc
jns
and
cmc
lahf
add
adc
das
mov
or
pop
mov
cmp
call
in
outsb
cmc
pop
ret
sbb
jp
sbb
mov
push
and
pop
jle
mov
sbb
ret
mov
mov
sbb
jmp
mov
movsb
mov
iret
dec
inc
aaa
fwait
xchg
xor
fucomp
add
or
dec
outsb
cs
xchg
xor
dec
mov
push
loopne
pop
outsl
xchg
ja
adc
xor
cmpsb
addr16
imul
mov
nop
mov
inc
psubw
imulb
stc
enter
mov
inc
pop
fcmovnu
xor
shll
adc
mov
sub
sti
les
mov
out
imul
cmpsb
cmp
repnz
sub
cmpsb
inc
pop
outsb
inc
out
and
roll
fistpll
and
jb
and
fadds
sarl
xchg
cwtl
sbb
jl
sbb
jne
mov
arpl
or
sbb
mov
mov
fisubs
cmpsb
fisubs
inc
ficoms
mov
add
cwtl
jns
push
movsl
je
js
stos
repnz
adc
pop
and
jmp
adc
loope
test
add
jne
jno,pn
jmp
mov
cli
fldl
inc
jmp
mov
and
or
adc
fsubrl
adc
xor
insb
aam
sub
dec
xchg
adc
or
sbb
in
repz
iret
mov
jo
mov
cmp
dec
in
mov
inc
xchg
jle
daa
cli
lds
repnz
movsl
sbb
fdivs
dec
shr
outsl
movsb
cltd
add
idivl
imul
lcall
jo
adc
push
in
iret
lea
dec
and
or
sub
out
bound
imul
or
mov
xlat
mov
dec
mov
inc
sbb
cwtl
xor
fmulp
fistps
push
std
sahf
inc
mov
pop
lock
addb
bound
adcl
iret
xor
jecxz
pop
mov
lret
lods
mov
push
shlb
or
ret
add
mov
mov
mov
iret
fs
nop
dec
popf
xor
les
mov
mov
mov
rcl
or
frndint
xchg
mov
xor
xor
imul
pop
xchg
push
mov
les
mov
mov
cmc
sbb
popf
or
add
gs
mov
mov
out
push
das
in
in
and
jae
mov
loopne
fnstenv
mov
fs
and
add
fsub
lods
lods
out
xor
pusha
inc
sbb
ja
mov
sbb
or
push
push
mov
push
inc
sub
mov
xor
mov
mov
inc
cltd
cltd
or
pusha
outsl
shlb
inc
aas
aas
xor
and
lcall
fcom
sbb
andl
inc
cmp
jbe
cs
repz
cmpsb
push
mov
testb
sbb
and
aad
push
cs
jl
popa
cmp
leave
out
stc
imul
movsl
jecxz
jge
pop
ret
push
adc
imul
xchg
xlat
lock
iret
adc
pop
aad
pop
loopne
sarb
mov
je
lock
pop
mov
push
aaa
sub
xchg
xchg
adc
lahf
mov
pop
cmpsb
lret
cltd
sbb
clc
repnz
orb
sub
cmp
pop
mov
xchg
rorb
mov
js
mov
mov
sub
cmp
xchg
dec
mov
aam
pop
sti
push
es
mov
xor
rcr
inc
addr16
out
mov
stos
cmp
int
and
cmc
jbe
inc
imul
lock
mov
cmc
outsl
sbb
sub
or
pop
push
in
add
sbb
add
cltd
inc
inc
add
ljmp
pop
jns
dec
cld
loopne
stos
add
lret
fs
in
mov
add
or
adc
test
out
adc
mov
push
out
cvtps2pd
das
ds
and
dec
and
jle
xchg
rcll
loop
insl
and
lret
xor
and
mov
xlat
push
xchg
mov
and
scas
inc
fucom
xchg
lock
jge
mov
fdivrl
sbb
lret
add
ljmp
xor
rolb
adc
scas
jno
into
add
mov
sub
or
into
int3
adc
ja
push
adc
push
test
or
push
fisubrs
repnz
rorl
xchg
cmpsb
cmp
aam
fwait
push
and
aam
cmp
pusha
ja
ret
je
cmp
and
iret
xchg
push
jmp
aaa
add
xor
sbb
dec
xor
stos
adc
lds
inc
jmp
add
mov
ficomps
ds
or
sbb
add
inc
mov
inc
decb
sub
out
fsubrs
inc
sbb
aas
test
jb
adc
mov
into
sub
aas
enter
and
add
lret
pop
ss
stos
flds
mov
sub
xor
push
sbb
mov
cmpsl
dec
sahf
insl
hlt
popa
outsb
add
jne
sub
xor
das
mov
stos
insl
lcall
cld
call
mov
sbb
sub
and
mov
std
cmpsl
mov
and
lcall
pop
int3
push
mov
fisttpll
jb
rclb
das
filds
scas
test
pop
lock
lea
pop
pusha
ja
sub
loopne
push
inc
rclb
lret
mov
jge
aas
mov
push
xor
dec
add
loope
cmp
pop
dec
in
push
pop
js
mov
in
lds
data16
lock
pop
jbe
jns
cwtl
add
pop
sbb
ficompl
jnp
jmp
mov
stc
arpl
rolb
pushf
cltd
in
std
fs
dec
lahf
pusha
shll
pop
pop
mov
jne
push
lcall
mov
pop
pop
add
fidivrl
add
adc
mov
pop
dec
mov
int
insl
repz
arpl
jl
adc
xchg
sbb
sub
in
push
bound
cmp
int3
sbb
jo
pop
aas
fsubrl
insb
insl
and
data16
sti
mov
jp
dec
fs
int
xchg
add
lea
sti
lds
repz
jmp
cwtl
inc
pop
loope
outsb
outsb
pop
adc
into
shl
mov
clc
mov
xchg
dec
sar
add
sti
outsb
xchg
lea
xchg
mov
out
push
repz
jns
imul
jne
faddl
mov
ljmp
mov
in
incl
addr16
imul
xor
ret
xor
fwait
cmp
jns
lds
dec
inc
jne
repnz
jb
mov
fcmovne
jp
daa
enter
fistpll
dec
pushf
test
pop
loope
jbe
outsb
sbb
ret
in
xchg
stc
and
inc
cmp
and
lahf
cwtl
fdivrs
xor
lcall
xor
inc
bswap
xor
jl
mov
cmc
clc
addr16
pop
sbb
mov
inc
mov
dec
push
inc
in
mov
out
xor
and
daa
outsl
aas
inc
jae
lds
dec
into
fisttpll
popa
and
mov
out
or
shlb
decl
fs
lret
xchg
test
and
or
mov
pop
cmp
cltd
fisubs
xchg
sub
in
and
pop
lds
jp
cmp
mov
icebp
popf
sti
mov
jnp
cmc
lock
jbe
subb
in
xor
imul
inc
jae
ja
mov
nop
lea
nop
dec
mov
dec
push
popf
sub
mov
and
imul
movsb
pusha
mulb
loopne
scas
add
dec
sub
fmuls
bnd
sbb
in
sub
and
add
mov
loop
iret
sbb
push
jne
in
mull
adc
sbb
mov
jb
xchg
push
xchg
lret
fimuls
pop
jp
sbb
inc
mov
inc
or
addb
sarb
jb
outsl
and
aaa
push
fwait
dec
mov
jl
dec
adc
ss
clc
dec
sbb
mov
push
push
xlat
adc
aam
aad
cmp
mov
xor
jns
shl
outsb
jno
ja
adc
and
push
adc
sub
popf
xor
in
adcl
pop
cmp
or
fidivrs
add
pop
rcr
xchg
es
sub
pop
in
icebp
sbb
adc
push
adc
jecxz
in
adc
call
mov
and
ret
lahf
or
fists
and
scas
cmpl
sub
xor
repz
inc
mov
and
mov
jnp
lcall
xchg
push
cmc
aam
mov
mov
in
lret
shl
adc
iret
pop
xchg
lret
jns
add
in
mov
daa
dec
aad
rolb
leave
mov
ficomps
sub
sbb
in
add
inc
or
lret
pop
cld
or
dec
xor
inc
cld
out
popl
or
inc
xor
enter
fwait
loop
add
push
ret
fsubrl
cmp
and
cmp
sbb
pop
in
lcall
adc
sub
mov
sbb
push
fdivs
test
pop
xchg
pop
mov
xchg
sub
je
ret
pop
in
adc
sahf
sbb
lds
mov
popa
daa
or
dec
pop
pop
adc
inc
mov
jecxz
jge
scas
repnz
jo
in
sub
xorl
xchg
dec
loop
arpl
lret
insb
cmp
in
fldcw
lock
xlat
push
cld
scas
bound
push
and
push
xor
dec
push
leave
sti
mov
jle
rclb
xor
cmp
ja
sti
movsb
adc
and
dec
scas
aad
sub
adc
mov
sbb
shrl
lret
sbb
sub
pop
sbb
jmp
in
or
arpl
sub
fldenv
pop
lea
iret
gs
mov
push
sub
jmp
push
mov
ret
ljmp
adc
push
loop
mov
fildll
dec
out
shll
jo
les
sub
pushf
in
pop
inc
xchg
rcrb
std
mov
pusha
repnz
jl
or
lret
and
xor
add
cmp
mov
and
push
aad
xor
insb
out
or
lea
sub
es
test
rcll
rorb
cs
dec
popa
icebp
xor
xor
mov
mov
aam
fsubr
loop
sbb
cmpsb
cmpsb
lods
cld
aad
and
cmp
add
pop
dec
push
popfw
mov
xchg
sub
dec
hlt
fisttpl
mov
xchg
mov
fisubs
fcoml
dec
adc
loope
mov
inc
sbb
aam
mov
pop
pop
mov
jbe
sbb
push
inc
lret
or
mov
mov
cmp
xchg
in
aas
aad
xor
mov
loope
xor
enter
and
in
arpl
push
mov
inc
arpl
xor
mov
cmp
std
mov
sub
dec
test
lea
or
jns
aam
movsl
aaa
sbb
pop
adc
adc
jno
loop
xchg
loopne
ja
inc
in
mov
sub
or
mov
pushf
push
idivb
insl
mov
pusha
cmp
push
add
xchg
ret
hlt
imul
jno
test
cmp
pop
outsl
popf
jno
add
enter
inc
addr16
imul
call
into
inc
stos
pop
loope
sbb
test
popa
lea
push
sbb
sub
jne
mov
lahf
or
call
cmp
ret
push
std
adc
xlat
mov
lret
fnstsw
fs
add
and
cmp
call
or
lcall
ss
enter
lock
adc
mov
adc
push
mov
sahf
imul
cltd
xchg
sbb
sahf
xchg
lods
ss
push
fcomps
sub
xchg
movsb
xchg
imul
push
outsb
mov
pop
ljmp
pop
mov
pop
clc
push
sbb
cmp
shrl
lods
nop
mov
fstpt
into
aaa
jl
and
xchg
mov
mov
xor
mov
and
int3
fisubrl
addl
mov
xlat
std
jecxz
jge
inc
add
cwtl
sarb
jp
out
jbe
push
pop
sub
aaa
jg
fnsave
sub
jle
inc
cltd
out
das
mov
les
loopne
dec
xchg
sbb
cli
adc
repnz
lock
pushf
sbb
lret
pop
test
out
std
imul
enter
inc
sub
or
leave
pop
pop
mov
xor
test
adc
jb
push
dec
ja
aam
adc
imul
shlb
stc
sbb
jnp
inc
push
fildll
lock
mov
add
adc
in
lods
and
loop
cmp
cwtl
xlat
mov
dec
inc
jbe
xor
pop
mov
lea
fs
xchg
icebp
dec
dec
pop
jns
mov
mov
sbb
loope
lods
shl
data16
leave
fcmove
ss
dec
dec
pop
fcoml
dec
and
pushf
test
jmp
push
inc
out
pushf
dec
imul
shr
cmp
ror
lods
pop
rcll
in
xchg
cmp
aam
adc
cwtl
mov
sub
mov
mov
push
data16
movsb
aam
sbb
fcmove
lcall
stos
rcrb
xchg
gs
fldcw
mov
ffreep
fsubs
cmp
jo
sbb
mov
dec
inc
sti
daa
repz
mov
out
in
sub
xchg
int
int
imul
repnz
push
push
inc
out
or
divl
pushf
add
xchg
or
push
mov
inc
in
xor
mov
push
arpl
test
sbb
push
inc
call
xor
imul
push
adcl
aam
mulb
cmp
adc
mov
pop
add
adc
fs
pop
rorb
jbe
mov
sub
outsl
cmc
sbb
fwait
mov
jmp
int3
adc
pop
mov
outsb
or
push
pop
lock
add
cmp
nop
fbstp
fnstcw
scas
xchg
mov
dec
push
mov
insb
in
fdivs
fidivs
stc
xchg
jbe
mov
daa
push
xchg
and
out
cltd
data16
hlt
cmp
mov
jae
xor
add
fnstcw
cltd
nop
sub
xchg
fwait
inc
scas
jns
inc
push
push
mov
clc
pop
aam
push
and
mov
popf
addr16
dec
push
or
push
push
mov
hlt
sbb
pop
aam
push
pop
loopne
iret
add
mov
mov
sub
ret
stos
jp
out
pop
dec
or
insl
test
pop
gs
fcomps
movsb
adc
cwtl
fs
cmpsl
or
jno
nop
dec
test
push
dec
mov
dec
add
cmc
sbb
test
inc
es
jae
push
jae
fwait
test
lods
and
gs
or
mov
inc
shlb
adc
test
mov
outsl
sbbb
ret
std
nop
add
pop
mov
mov
mov
dec
xor
xor
cmp
in
xchg
xchg
pushf
scas
loopne
mov
out
cmp
fsts
xchg
neg
mov
jl
cmp
pop
cmp
cli
add
bnd
imul
out
cmp
mov
inc
push
sbb
insl
cmp
adc
jp
loop
dec
js
ljmp
bound
cmpsl
mov
cmp
stc
out
dec
mov
arpl
push
xor
fwait
call
inc
pop
mulb
pop
sbb
adc
out
adc
fidivs
mov
lcall
mov
or
mov
jle
xchg
mov
out
xor
push
insl
test
xor
in
or
lds
repz
out
aam
inc
or
xor
mov
pushf
aad
pop
mov
sub
jge
xor
clc
jecxz
in
pop
sub
js
push
sbb
cs
xor
inc
shlb
mov
dec
push
add
sbb
or
xor
or
pushf
mul
dec
test
mov
push
ret
insb
jp
push
gs
je
lahf
cmp
push
xor
mov
pop
ljmp
insb
xchg
xchg
pop
aam
inc
cmpsl
sbb
cmpsb
pop
insb
loope
in
mov
loopne
dec
ds
xchg
mov
push
cmp
jne
and
ror
jmp
stc
jnp
push
cmpsl
pop
xor
sahf
push
push
sub
mov
mov
jnp
dec
xor
push
ljmp
or
lcall
jmp
mov
fs
mov
sub
aad
inc
mov
lahf
or
jns
mov
ljmp
cmc
and
adc
orb
andb
cmp
fs
push
push
gs
push
mov
lret
sub
fwait
and
sbb
lds
sbb
mov
data16
sbb
jg
mov
pop
repz
xchg
mov
pop
mov
or
lea
adc
dec
or
les
or
divb
ss
mov
cmp
lahf
mov
fstl
push
test
mov
or
ficomps
xchg
xchg
mov
pop
aam
mov
cmp
pop
jo
popa
cmp
fs
push
outsb
jb
in
int
mov
and
or
cmp
int3
aas
mov
shr
dec
sbb
cmp
out
cwtl
or
fnstcw
mov
inc
pop
mov
idivl
jae
add
pop
sub
out
mov
dec
xchg
nop
cmp
fistpll
mov
adcl
pop
sbb
push
test
out
xor
icebp
sub
stc
dec
adc
sub
in
xor
cmpsb
push
jo
xor
mov
mov
outsl
pushl
mov
jo
pusha
jl
mov
adc
sbbb
jne
lret
mov
outsl
adc
sbb
cmp
arpl
xorl
dec
aas
pop
xor
call
xchg
cmc
mov
sbb
add
stos
rolb
dec
loope
fisubl
cmp
dec
sbb
rcll
mov
lods
ja
popa
mov
or
shlb
pusha
xchg
js
cmpb
add
popa
outsb
addr16
mov
xorb
aad
cmp
mov
add
movsb
in
or
outsl
and
mov
mov
sub
in
jmp
inc
loope
sub
aas
sbb
push
mov
std
mov
into
movsb
js
rol
pop
ret
jge
push
pop
fildll
sub
in
rclb
sub
mov
stos
lret
imul
xchg
xchg
arpl
add
and
add
mov
lcall
enter
inc
or
add
test
data16
push
inc
mov
nop
mov
pop
test
mov
sar
jmp
dec
mulb
adc
inc
cmp
insl
out
cmp
popa
shr
lret
cld
push
push
imul
mov
xor
ret
xchg
mov
out
aam
pop
fsubs
fiaddl
outsb
lea
mov
dec
or
lret
add
rol
clc
push
and
cltd
mull
push
icebp
push
mov
clc
sub
push
jmp
lahf
dec
sbb
ds
shl
jo
adc
jo
imul
mov
nop
push
push
ret
push
imul
pop
pop
movsl
call
imul
pop
arpl
xor
movsl
pop
xor
sahf
pushf
lret
pop
mov
in
pushf
je
aam
xchg
ds
lods
gs
push
call
push
xchg
push
mov
mov
jo
jecxz
test
xor
jnp
adc
inc
enter
sbb
rcrl
push
nop
push
mov
xchg
movsl
ss
aaa
mov
popa
mov
sbb
inc
imul
mov
test
lea
mov
sahf
nop
fadd
jp
xor
jp
jb
pusha
ljmp
cmc
cmp
inc
and
mov
and
jecxz
mov
mov
inc
push
in
ljmp
or
cli
idiv
out
popa
push
sub
mov
out
gs
ja
popf
xor
push
mov
lcall
adc
cli
stc
sbb
jecxz
push
push
adc
inc
repz
jp
gs
imul
les
add
lea
inc
imulb
sub
xchg
imul
fxch
xor
scas
outsb
pop
repnz
repz
scas
leave
icebp
into
aas
and
cwtl
pop
outsl
in
fists
addb
xchg
jb
stos
add
sub
jecxz
add
xchg
ljmp
push
mov
pop
mov
fs
or
sub
in
dec
test
inc
scas
cld
jecxz
sub
push
inc
frstor
mov
or
xor
xor
dec
mov
dec
jg
enter
adc
lods
popf
xor
notl
out
cmpb
rorb
pop
lea
mov
mov
subl
dec
mov
incb
loope
and
in
add
les
dec
shl
dec
push
out
cld
clc
and
cli
gs
leave
lcall
imul
int3
inc
sbb
pop
adc
or
add
fistps
mov
xor
xor
sbb
ss
es
pop
and
fldcw
mov
stos
into
nop
lret
insb
scas
lods
pop
data16
cmp
inc
mov
mov
hlt
subl
or
hlt
push
jb
cmp
pop
sar
jo
inc
in
and
mov
cmc
fidivs
lret
or
movsb
cmp
sbb
icebp
sahf
icebp
lret
movsl
icebp
cmp
pop
adc
or
add
scas
fisttpll
jb
arpl
adcl
ret
aad
sub
repnz
pop
in
fs
jp
cmp
or
stos
jno
mov
fmull
push
jne
pop
cmp
dec
cmp
sar
ljmp
sti
xchg
jg
mov
insb
faddl
int
xor
mov
test
icebp
mov
outsb
fs
mov
jns
jo
jne
cli
xchg
sti
mov
or
jbe
xlat
sbb
xor
xchg
xchg
sbbl
les
stos
pop
adc
push
sbb
leave
daa
popa
dec
lcall
jp
jne
xadd
inc
or
mov
jae
mov
cmp
or
cmpsl
stc
mov
insl
and
mov
jmp
push
mov
pop
push
xchg
inc
cmc
or
cli
xor
xorb
imul
es
in
mov
xchg
pop
cmp
cmp
mov
test
mov
xchg
and
dec
sar
mov
cmp
mov
orl
pop
cmpsb
mov
insb
cmc
xlat
xor
xchg
cmp
xchg
std
fs
pop
scas
mov
insb
or
and
mov
mov
xorl
cmp
pop
test
inc
add
fcmovb
cmp
scas
aam
icebp
hlt
jl
jge
mov
mov
movb
dec
test
mov
aas
mov
int
ja
add
mov
dec
or
fwait
push
cmpsb
mov
push
sbb
adc
xor
cmpsl
cmovs
loope
pusha
inc
mov
mov
xchg
sub
repz
loop
pop
push
inc
idivl
xchg
xor
jmp
pop
push
mov
lods
in
ret
ret
pusha
shrb
icebp
sub
scas
lds
push
movsl
aam
inc
pusha
sub
rol
sahf
fidivrs
pop
inc
jbe
shr
outsb
xor
dec
repnz
add
xchg
in
jne
adc
jl
push
cmpsl
adc
ds
into
jne
inc
xor
movsb
dec
pop
insb
jmp
hlt
scas
ficoms
adc
cmp
cmp
or
fmuls
test
adc
adc
lds
cmp
repnz
mov
dec
bound
stos
dec
push
xor
rorb
ret
nop
or
adc
mov
xor
imul
frstpm(287
sbb
stos
pusha
add
and
enter
dec
vshufpd
aam
xchg
mov
jbe
pushf
xchg
out
lods
mov
in
mov
nop
xor
fldcw
or
and
mov
xor
popa
jnp
sbb
ret
shr
push
inc
std
xchg
jo
fdivp
ja
push
cltd
sbb
add
mov
jb
sub
fs
inc
pinsrw
insb
add
les
stc
push
xor
rclb
mov
xchg
fcompl
cmc
mov
push
adc
fsubr
add
dec
scas
insl
add
mov
outsb
xlat
rclb
push
ficoms
ret
iret
jmp
xlat
daa
bound
ss
xor
es
mov
adc
ljmp
cmpsl
mov
fnstcw
pop
mov
push
stc
ljmp
jns
xor
call
adc
mov
xor
ja
dec
push
fwait
cmp
mov
sbb
out
dec
sub
push
lret
lahf
mov
fldenv
and
push
test
jnp
jle
sub
sahf
lods
daa
mov
repz
mov
gs
je
ljmp
cmpsl
cli
std
pop
mov
pop
sbb
pop
sti
dec
jmp
sub
mov
adc
xor
mov
push
lods
sbb
fcom
and
ja
cli
sbb
sub
dec
testl
mov
int3
jb
xlat
pushf
pop
shrl
lahf
lea
jmp
xchg
inc
movsl
mov
xchg
inc
inc
cmpsl
mov
xchg
mov
mov
sti
dec
push
rolb
iret
xchg
sti
es
cltd
pushf
inc
stc
sbb
xchg
movsb
mov
lock
push
sbb
fsubrp
js
jmp
sbb
int
mov
es
push
in
push
movsb
mov
dec
xchg
mov
mov
push
cmp
dec
mov
call
loop
mov
lods
inc
xchg
adc
imul
fistl
cmp
test
mov
movsb
ss
xchg
sbb
mov
aas
pop
scas
inc
divl
jge
or
addr16
dec
mov
inc
shr
jnp
xchg
lahf
loope
subb
inc
jo
stc
sub
jne
aas
xchg
out
and
pop
add
or
pop
rcrb
sub
or
cmp
or
popf
lock
in
inc
dec
loopne
mov
in
xor
push
adc
pop
sbb
adc
cmp
outsb
mov
popl
push
popl
jae
mov
cld
dec
mov
gs
notl
dec
inc
shll
arpl
fs
shlb
jg
lcall
cs
jge
mov
dec
fs
sbb
ljmp
insb
sbb
fidivl
cmpsl
cmp
and
clc
xchg
adc
fisubs
imul
and
sbbb
sub
shrb
div
xor
ret
xchg
cmpsl
pop
and
mov
in
sbb
addb
mov
es
aad
push
ret
push
jno
outsb
jg
inc
shlb
movsb
dec
xor
add
adc
push
rcll
andb
mov
scas
mov
lcall
inc
sub
imul
shrb
sbb
clc
mov
mull
mov
cmpsl
loopne
mov
loopne
fdivrp
pop
jbe
sbb
xlat
adc
sub
fs
mov
repnz
xchg
cmp
sahf
and
push
mov
xor
pop
sub
dec
jecxz
les
leave
idivb
cmp
cli
adc
xlat
and
ret
aaa
loopne
sub
imul
sbb
arpl
xor
inc
aam
add
repnz
outsl
sahf
lahf
loope
lock
or
mov
ficomps
xor
jl
arpl
pop
leave
cmp
rclb
inc
inc
in
fcomi
adc
mov
imull
insl
shll
subb
add
icebp
repnz
jecxz
adc
mov
jmp
jne
divl
loopne
sahf
ljmp
mov
jl
jns
mov
mov
sub
mov
iret
jge
lock
add
push
mov
pop
add
and
dec
movsb
and
sti
dec
lahf
and
aam
inc
aad
push
cld
sti
rolb
mov
lea
cmpb
ret
outsl
test
addr16
stos
sbb
fmull
int3
icebp
shlb
sbb
fidivrl
or
sbb
mov
outsb
sti
or
sub
jmp
rorb
in
mov
mov
enter
nop
or
or
movsb
es
mov
add
pusha
jmp
mov
adc
sub
daa
dec
imul
rolb
mov
in
mov
insb
enter
push
test
fldt
or
or
mov
xchg
outsl
adc
or
lret
stos
pop
mov
xor
cmc
lods
push
xchg
jbe
insb
pop
ja
gs
stc
adc
jno
jle
inc
mov
lods
jne
push
or
loope
ret
push
cmpsb
inc
rcr
pop
mov
jl
add
fmull
notb
pop
cmp
jae
and
push
jge
pop
xchg
into
lahf
iret
jle
dec
aaa
xchg
sbb
xor
test
orl
out
leave
push
jp
ret
sbb
enter
nop
lcall
or
movsl
ret
rcrl
subb
inc
js
cltd
add
adc
mov
loopne
add
push
xor
sahf
mov
inc
cmp
sub
subb
jo
sub
sub
inc
xchg
cmc
jmp
push
sahf
mov
into
arpl
mov
xlat
jae
in
nop
or
daa
push
adc
in
sub
stos
int
add
out
lret
lock
dec
insl
scas
scas
dec
pop
sub
dec
jg
xchg
imul
imul
jbe
aas
stos
sbbl
sbb
jp
test
pop
pop
cltd
pop
ficomps
je
test
int3
in
mov
cmpsb
hlt
sti
lret
out
xchg
std
cmc
sbb
data16
into
mov
jl
fwait
or
cld
sahf
pop
dec
xchg
xor
mov
lea
cmp
adc
cmp
enter
adc
in
mov
mov
pop
jno
bound
xlat
hlt
inc
movb
mov
pop
mov
jae
adc
mov
xchg
ljmp
jo
lcall
test
add
cmpsb
mov
fadds
push
sub
add
lds
xor
lea
cmp
cltd
bound
pop
adc
mov
xchg
xchg
and
mov
inc
mov
jbe
xchg
push
test
mov
je
repnz
jb
outsb
sub
and
gs
adc
push
popa
xchg
mov
pop
call
pop
cmp
dec
pop
cli
cmp
adc
jge
inc
lret
dec
xlat
cmp
xchg
sbb
in
xchg
jle
push
out
and
mov
pop
and
pop
jle
mov
push
leave
lods
mov
lea
mov
outsb
cmp
les
insb
fists
lcall
mov
imul
mov
shl
or
sbb
std
xor
imul
jle
test
inc
sub
jle
rcl
adc
aad
dec
sbb
insl
and
push
aad
dec
popa
gs
xchg
mov
aaa
mov
out
loope
jno
dec
int
ret
dec
jp
xchg
inc
fs
fdivl
cmp
xchg
adc
dec
lcall
iret
in
sbb
negb
aas
pop
test
pop
das
cmpsl
and
mov
and
inc
xor
out
fsub
mov
cmp
mov
in
into
and
outsl
xchg
jecxz
js
dec
cmpsl
xor
mov
aas
sub
fldenv
xchg
and
mov
xchg
xor
out
jecxz
sbbb
jno
stc
push
sar
jae
and
cmpsl
test
ja
mov
fwait
dec
mov
jmp
psubq
dec
popf
mov
pop
arpl
mov
mov
mov
int3
mov
jno
cmp
cwtl
dec
or
das
inc
sub
jns
mov
out
test
fisttpll
repnz
inc
andb
inc
pop
sub
push
jne
push
outsl
or
sub
jecxz
push
sub
lods
pop
out
addr16
sahf
movsl
stos
xchg
ret
inc
xorl
std
dec
mov
cmp
aaa
imul
cld
pop
jle
and
xchg
jns
sti
mov
rorb
fs
loope
jl
mov
leave
mov
sub
dec
mov
adc
jns
notb
and
test
xorl
fldl
cmp
aam
mov
xor
xchg
pop
xor
inc
xchg
mov
or
dec
dec
cmpsl
jo
cwtl
jo
dec
dec
mov
not
lret
xor
insl
ss
mov
cmp
xor
xor
std
xor
or
mov
xchg
stos
divb
call
xchg
and
pop
xlat
cmc
enter
leave
pop
push
outsl
das
stos
cmp
ljmp
scas
mov
mov
sarl
mov
and
push
dec
sbb
sbb
in
mov
push
imul
stos
jecxz
repz
int
fisttps
ja
aad
pusha
mov
aad
dec
decl
pop
out
mov
xchg
and
inc
xchg
sub
scas
mov
iret
adc
push
call
pushf
inc
sub
or
dec
insl
add
ret
sbb
pop
jns
add
push
mov
mov
push
out
pushf
lods
mov
add
pop
mov
rorl
dec
sbb
cmp
or
push
jne
fiaddl
pop
leave
or
rorl
mov
pop
call
or
sub
lea
popf
jmp
xor
mov
push
adc
cmpb
clc
and
mov
xchg
sbb
jmp
arpl
pop
jbe
and
mov
push
aaa
or
sub
mov
scas
pop
sbb
push
push
out
adc
scas
mov
mov
nop
mov
rcr
idiv
pop
insb
test
arpl
jmp
insl
in
mov
loopne
adc
or
or
lret
lock
or
sbb
push
adc
jp
pop
xchg
push
xor
stc
clc
jl
add
cmpsb
push
mov
gs
pop
push
fidivs
cmp
rclb
in
mov
mov
cmc
sti
imul
mov
ret
sbbl
xor
into
movsb
test
popa
jnp
mov
icebp
inc
dec
mov
jbe
pushf
xchg
xchg
cmp
mov
dec
ljmp
add
movsb
loope
clc
inc
insb
in
es
and
repz
jne
adc
in
loopne
out
mov
repz
cmpsb
jge
clc
xor
inc
popa
jecxz
leave
stos
lret
cmpsb
repz
mov
xchg
dec
decl
pop
dec
aad
imul
xor
sbb
cmp
fistl
mov
js
movsb
or
aad
movb
and
and
jno
mov
test
cld
sub
dec
ds
push
or
clc
or
mov
xor
hlt
repnz
lret
pop
xor
cmpsb
js
push
repz
push
xchg
add
fidivs
enter
in
mov
movsl
adc
scas
flds
add
mov
data16
inc
outsb
dec
sub
fs
out
xchg
xor
xor
mov
stos
dec
call
dec
test
mov
mov
and
lret
adc
jnp
xchg
mov
fcmovbe
aam
gs
and
pop
int
jmp
jge
sbb
push
push
in
dec
pop
notb
data16
lcall
movsl
pop
movsb
xor
cmp
cmp
add
lcall
ja
addr16
das
pop
sub
int
scas
std
mov
mov
and
jno
cmp
fs
mov
mov
mov
and
stos
dec
ja
fbld
ljmp
nop
cmp
mov
arpl
or
data16
repz
icebp
and
push
inc
mov
push
iret
jns
enter
cmpsb
inc
jae
roll
lahf
in
testb
cmp
or
add
fcom
push
leave
sbb
cmp
sub
movsb
pop
jle
jge
cmp
jne
aas
mov
orb
in
xor
fwait
or
mov
out
lds
fbld
scas
out
dec
xor
bound
sub
pushf
fadd
or
pop
fnstsw
in
subl
inc
aam
testb
and
mov
insb
mov
or
mov
stos
sbb
shrl
jecxz
mov
bnd
jno
inc
adc
fwait
pop
hlt
mov
sbbl
dec
mov
xor
imul
test
int
mov
and
int
push
mov
shrl
adc
fisubs
shlb
cli
add
or
cmp
int3
test
lret
adcl
arpl
xchg
cmp
insb
out
inc
stos
fmuls
lret
dec
push
xchg
jl
fstpl
jg
or
and
mov
sbb
inc
push
mov
shrl
adc
jnp
lock
cmp
push
in
scas
cmp
orb
mov
cmp
pop
mov
mov
sbb
lret
push
xorl
jae
enter
sbb
jp
loope
cmp
cmp
scas
sbb
loope
cmpsl
scas
add
call
cmc
xchg
jmp
movsb
xor
shll
mov
repz
lret
adc
xor
into
add
pop
je
loope
xlat
popf
inc
or
cmp
jae
mov
cld
mov
mov
cmpb
stos
or
or
pop
imul
ja
cmp
sub
xor
xchg
or
ljmp
xchg
mov
mov
inc
xor
loopne
mov
adc
dec
addr16
push
sahf
shrb
cmp
ja
call
cmpsl
mov
arpl
mov
sbb
int
jecxz
scas
mov
inc
jmp
fxch
rcr
pop
call
in
dec
jnp
das
popl
push
dec
nop
repz
cwtl
imul
jae
cltd
push
and
cmp
in
xchg
xchg
mov
mov
iret
enter
mov
roll
cmp
out
arpl
je
fucomi
lret
jecxz
js
xchg
or
inc
mov
popf
sti
xor
dec
hlt
clc
fs
sbb
in
xchg
add
sub
es
inc
xor
push
cmp
loopne
push
pop
add
mov
inc
cmp
popa
aad
xchg
hlt
ret
fucom
jns
mov
dec
shld
dec
xchg
dec
push
push
mov
pop
fwait
bound
add
mov
add
sarb
mov
or
dec
gs
jmp
fnstcw
call
xchg
imul
and
sbbl
shl
jns
cmpl
dec
sbb
xchg
movsl
lahf
fnstenv
subl
xchg
lds
call
add
shlb
and
iret
in
sbb
daa
cmp
gs
lcall
pop
push
shlb
push
xchg
ficomps
lds
add
cwtl
arpl
xor
out
aaa
sub
add
enter
and
pop
inc
push
out
mov
shr
call
scas
xor
pusha
sbb
cli
xchg
scas
mov
xlat
lahf
out
dec
mov
xor
sti
push
lods
mov
ljmp
notl
push
decb
pop
pop
and
lock
xchg
or
sarl
bound
shl
push
out
in
cmpsb
mul
or
sbb
gs
out
outsb
in
adc
out
xor
mov
addr16
mov
inc
add
mov
sub
scas
divl
push
cmp
adc
dec
add
repz
aaa
out
fiadds
loopne
cmp
aad
inc
cmp
dec
sbb
mov
push
inc
mov
dec
ss
jl
call
push
sbb
sti
sti
fisttpll
lock
stos
adc
xor
sti
sahf
jno
xchg
pop
push
js
out
stc
loop
imul
jg
into
pop
into
mov
das
lea
ljmp
or
cmp
xchg
xlat
fldt
movsb
push
jbe
pop
fmul
cli
pop
subb
addl
mov
iret
mov
arpl
aaa
mov
and
cmp
not
scas
inc
cmp
loope
lret
call
or
out
push
rcr
fbld
or
call
out
fwait
popa
push
pop
je
cltd
mov
xchg
movsb
pop
push
add
test
mov
add
in
repnz
mov
mov
lahf
inc
jno
pop
xchg
clc
add
pusha
cmp
out
xchg
mov
cld
test
cltd
es
add
cwtl
lahf
adc
pusha
out
testb
loopne
in
sub
mov
ret
pop
jg
dec
inc
test
add
cmpsb
fcmove
xor
ret
lret
sub
fildl
loope
push
jnp
jmp
sbb
ds
vmovapd
cld
cmp
dec
pop
and
fwait
in
ds
add
out
push
fnstenv
jns
mov
mov
adc
xlat
outsb
push
mov
outsb
andl
xor
ja
mov
sub
pop
les
mov
dec
push
shrl
or
xchg
xor
roll
leave
adc
inc
leave
gs
jecxz
xor
push
inc
push
ror
test
pushf
icebp
jnp
mov
push
push
nop
adc
clc
jmp
jl
jl
cmp
scas
repnz
in
loope
mov
dec
jae
push
in
and
jp
mov
popa
pop
rcl
mull
xchg
sub
test
js
xlat
jmp
xchg
aaa
pop
push
mov
xchg
ljmp
sub
inc
or
lods
pop
mov
sbb
in
sub
mov
xchg
dec
push
ret
sub
out
loopne
adc
jne
pop
jl
and
jo
mov
pop
ds
sub
push
inc
call
mov
or
dec
mov
mov
mov
dec
and
sbb
js
mov
inc
dec
cmp
dec
sub
adc
repnz
shrd
sub
cwtl
or
mov
shll
lods
mov
leave
or
jle
sbb
mov
data16
aas
out
add
pop
call
test
cmp
mov
sahf
loope
jg
jp
xchg
out
es
push
xor
inc
sub
push
xchg
dec
and
cmpsb
and
pop
mov
int
mov
cmp
mov
pusha
cmp
or
mov
cwtl
and
es
sbb
lret
push
pop
sub
call
mov
mov
shrb
std
dec
push
lea
outsl
in
pop
and
movsl
xchg
sbb
mov
clc
adc
ljmp
mov
shll
fwait
cmp
pop
inc
jmp
adc
insl
lcall
sub
decb
sub
cltd
orb
pop
nop
lcall
pop
jns
loopne
or
jle
out
idiv
jl
push
pop
loop
jmp
hlt
jae
push
jno
push
dec
out
push
mov
sub
push
or
mov
pop
lret
pop
dec
hlt
sbb
popa
jg
mov
insl
and
in
mov
xchg
fldt
jle
cs
test
in
cltd
les
or
and
or
mov
adc
or
enter
bnd
inc
mov
cmpsl
out
push
cmp
mov
dec
push
jns
inc
push
insb
data16
dec
jp
jb
mov
xor
insb
push
movd
or
jle
xchg
jp
test
ljmp
mov
lret
leave
push
iret
sahf
test
in
dec
test
mov
incb
sbb
mov
dec
pop
nop
jmp
and
add
popa
mov
or
lds
mov
pop
xchg
mov
or
cmp
int
rcll
popa
int3
xor
lret
xor
sub
fisttpl
gs
arpl
adc
jae
xchg
add
test
xor
mov
adc
mov
mov
ficoml
insb
push
and
in
xor
sbb
fimull
sub
jo
ja
sarb
inc
mov
cmp
mov
sbb
dec
pop
ret
push
cmp
js
or
adc
gs
test
add
cmp
sub
mov
cmpsb
ret
lret
sbb
std
adc
enter
mov
inc
mov
lahf
jg
stc
rolb
cmp
out
nop
pop
lods
jbe
push
or
sbb
inc
std
push
fs
out
fsubrl
and
ja
adc
repnz
cmp
movsb
pop
jg
ret
es
gs
push
mov
lods
cmp
test
inc
mov
cmp
dec
pushf
and
xchg
imul
xlat
or
and
jp
inc
xchg
mov
stos
rcl
adc
ret
stos
lods
lea
push
dec
outsl
into
mov
pop
adc
pop
push
sbbb
addl
sub
push
mov
sbb
mov
push
push
add
push
inc
jno
repnz
hlt
in
lret
xchg
fidivrs
pop
mov
pop
in
sar
cmc
xchg
sub
dec
pop
mov
lea
jne
pop
sbb
pop
pop
mov
pop
testb
cmp
arpl
daa
pop
mov
negl
fwait
ret
sub
sbb
fldt
xchg
dec
pop
cwtl
or
fwait
push
mov
jl
test
adc
cmp
jbe
jg
lea
xor
out
aad
xor
fimull
dec
inc
xchg
add
data16
ds
pop
sub
jbe
xor
loopne
ljmp
insb
jb
stc
ret
movsb
add
mov
mov
push
fsubrl
xchg
sub
iret
inc
xor
xor
incb
test
sbb
test
test
mov
in
jge
push
jno
dec
imull
and
add
popf
push
sub
loope
jne
orl
mov
add
inc
das
pop
adc
push
and
cmp
jecxz
fsubrl
ficomps
or
imul
jno
mov
lea
xor
std
push
sti
jno
data16
aas
xchg
lea
pavgb
pop
daa
inc
fwait
mov
and
xchg
rorl
daa
or
fsubr
ljmp
nop
daa
xchg
mov
dec
fidivl
aaa
call
mov
mov
int3
cmp
push
lods
lods
sbb
arpl
mov
jo
mov
insl
adc
xchg
jo
mov
cmp
in
movsl
addr16
dec
repz
popf
adc
std
shl
xchg
cmpl
inc
ds
and
push
rcr
addr16
inc
jne
lcall
push
ja
in
out
jns
mulb
outsb
push
push
in
mov
stc
cmp
jl
mov
test
and
loopne
mov
aam
and
orl
add
pop
dec
stos
cmp
cmp
cmp
in
in
daa
in
cmpxchg
gs
pusha
in
push
lods
ljmp
aaa
xchg
jb
andb
mov
jnp
mov
pop
sbb
fisubrs
push
lret
inc
adc
stc
xor
lock
mov
pop
mov
mov
cmp
adc
lock
adc
movsb
movsb
shll
sbb
inc
or
out
notl
into
aaa
jno
sbb
inc
sbb
shlb
mov
bound
cmp
in
jae
sbb
imul
cmp
push
lods
cmp
jmp
lds
mov
rcrb
sahf
pop
and
dec
repz
and
aam
pop
sub
inc
cltd
mov
ficoms
out
call
add
push
mov
mov
mov
popf
movsl
xchg
jnp
push
dec
daa
popa
aad
repnz
imul
and
mov
xchg
or
xor
shl
movb
push
outsb
fidivrs
cmp
mov
inc
cmp
stc
mov
call
sbb
inc
mov
and
push
pop
jns
push
ret
jecxz
cmp
jae
fisttpl
add
dec
or
sub
icebp
out
inc
adc
mov
lea
fidivs
push
sub
addl
inc
mov
adc
loopne
fs
sbb
mov
testb
push
ja
inc
clc
or
xchg
adcb
jecxz
lods
ljmp
bound
dec
enter
xor
xor
dec
rorb
xchg
int3
and
jo
in
xchg
scas
nop
inc
faddp
stos
jmp
mov
push
mov
mov
or
jl
popa
mov
rolb
test
sahf
fcoml
loop
cmp
cltd
setb
xor
push
xor
imul
fwait
outsl
add
adc
sti
rorl
or
lea
mov
inc
in
fwait
xor
pop
jmp
mov
in
xor
dec
mov
lods
mov
add
mov
repz
jl
in
fmull
out
mov
mov
add
loopne
dec
dec
mov
xchg
cmc
aad
mov
inc
mov
fisubl
out
add
fstpt
cmc
cld
aaa
loope
dec
xchg
test
pop
in
cwtl
adc
mov
sub
xchg
movsl
mov
or
pop
pop
adc
mov
test
pop
cwtl
sub
je
lods
xor
xchg
cmpsb
sub
scas
adc
outsb
mov
and
jp
or
shll
inc
or
cmp
mov
in
mov
ja
mov
les
mov
or
pop
pop
cmp
inc
mov
int3
mov
out
cmp
mov
pop
dec
lods
cmpsl
and
js
mov
ljmp
in
call
push
inc
push
push
fidivs
sub
insl
cwtl
mov
xlat
out
add
push
sbb
fsubl
rclb
in
inc
xor
jne
adc
lods
mov
or
jnp
fldt
xor
rcll
pop
push
test
in
orb
jns
movsb
jb
jle
or
in
xor
pop
scas
pop
pop
lds
or
out
mov
pop
lods
mov
lods
sti
adc
inc
xlat
fisubrl
sbb
roll
add
insl
dec
push
clc
and
jo
inc
pop
pusha
or
popa
push
inc
fsubrs
out
push
cmpsl
sbb
mov
out
repnz
cli
lahf
dec
push
hlt
pop
add
xchg
push
test
stos
sti
sbb
out
cld
js
xchg
push
xchg
lock
std
dec
in
mov
pop
rol
xchg
movl
adcb
fisttps
and
fildll
in
lret
sub
ret
add
and
nop
aad
dec
int3
mov
aad
mov
and
and
pop
fcoms
ret
cmpsl
mov
int3
test
and
sub
dec
jmp
mov
mov
scas
sub
bound
xchg
sbb
dec
mov
mov
adc
mov
nop
mov
fld1
ljmpw
mov
sti
jmp
fwait
lods
pushf
lock
fbstp
jo
mov
jecxz
jle
mov
inc
mov
ds
mov
push
mov
clc
daa
test
arpl
push
jg
mov
stos
adc
push
ljmp
and
mov
and
sarb
popw
pop
push
xor
xor
movsl
push
inc
sbb
xchg
jmp
or
mov
cmp
inc
mov
pushl
ficoml
mov
es
dec
or
add
add
mov
aaa
out
jp
in
pusha
test
test
mov
aas
jge
push
xor
push
cmp
mov
pop
push
idiv
hlt
fwait
loopne
std
or
jecxz
cli
fidivl
mov
mov
pop
push
iret
out
aaa
mov
sbb
pop
in
push
outsb
cmp
addr16
dec
lcall
out
fs
inc
mov
or
dec
mov
sbb
sahf
aaa
stc
rolb
jnp
or
mov
add
icebp
push
add
mov
sbb
sti
jo
mov
out
cmpsb
mov
loope
push
push
les
fwait
ret
push
or
icebp
fbld
and
sub
outsl
stos
movsl
mov
and
cmp
or
push
push
loopne
addr16
scas
cwtl
es
data16
les
pop
jno
outsb
insb
inc
mov
inc
subb
jmp
in
repz
adc
inc
adc
mov
xor
push
jae
mov
aad
ds
cmp
cwtl
push
mov
cltd
mov
add
mov
push
leave
stc
lahf
mov
jecxz
mov
icebp
insb
mov
cmpsl
mov
push
hlt
cltd
setno
xchg
imul
and
je
aam
push
dec
dec
inc
sub
gs
cmc
add
xor
out
rorl
or
mov
jl
and
movq
add
xor
mov
rorb
dec
cld
xor
push
movsl
lea
test
pop
nop
mov
xchg
lret
enter
lods
pop
xchg
test
sbb
int
sbb
cmp
inc
mov
and
cltd
jb
inc
xchg
addb
mov
pop
repnz
sub
cld
int3
mov
out
lods
add
cmpsb
lds
insl
and
mov
inc
jb
fcompl
cld
ljmp
orb
daa
cmp
sti
add
cmp
add
data16
add
addr16
push
lds
ret
mov
test
imul
inc
pop
test
or
lds
pop
lea
dec
pop
fistl
xor
pop
pop
and
pop
and
lock
cmpl
mov
jecxz
daa
dec
mull
push
out
xchg
sarl
mov
xor
mov
out
lahf
cmc
ret
xchg
sub
loope
mov
jb
enter
add
arpl
or
call
or
push
inc
cmp
jns
in
in
xor
in
mov
je
sub
jbe
movsl
out
data16
int
or
xor
push
into
lret
jmp
adc
inc
nop
fcomi
lret
outsl
mov
adc
jecxz
push
ffree
cmp
dec
test
mov
pop
jecxz
mov
adc
inc
jae
adc
inc
mov
loope
add
push
inc
and
cmpsb
xchg
or
dec
pop
fdivr
jne
cmp
subb
movsl
mov
cmp
popw
cmp
test
xchg
in
mov
pop
push
in
cmc
loopne
cwtl
cmpsb
bound
inc
mov
push
lcall
imul
push
rorb
jp
outsl
jecxz
les
mov
lret
cld
addr16
scas
test
idivb
inc
test
push
aas
push
push
jb
fndisi(8087
and
push
sbb
jae
xorl
dec
imul
add
in
push
aaa
fsub
push
pushf
mov
pop
fs
ja
push
inc
mov
cmc
stos
mov
in
mov
aas
xor
xor
adc
insl
out
mov
mov
loope
xchg
xchg
push
adc
ja
push
push
push
icebp
outsl
test
push
xor
gs
inc
fnstsw
icebp
add
jbe
cmpl
push
xchg
ja
sbb
in
dec
lea
xor
dec
mov
sar
xor
sbb
cmpsb
xchg
mov
and
push
sub
les
pop
xchg
mov
fdivrp
push
aaa
mov
cs
sbb
je
xchg
repnz
outsl
and
pop
sti
xor
mov
jg
aas
jge
xchg
outsb
gs
inc
adc
xchg
xchg
jmp
push
pop
xchg
or
cld
js
cld
mov
and
push
int
imul
mov
pop
pop
movl
stos
sahf
fs
fnclex
pop
js
jmp
jp
fstpl
mov
popf
fstps
xchg
int
lods
jle
iret
ds
xor
pop
jnp,pn
icebp
into
inc
mov
cmp
cmpsl
inc
jnp
sbbb
rorl
jns
mov
inc
sbb
mov
aam
aas
mov
xchg
mov
inc
jge
sbb
in
ljmp
jne
mov
cmp
scas
lock
das
and
iret
call
jge
aad
je
pop
das
mov
jge
sbb
cmc
cs
xor
sbb
stos
movsl
sub
cmp
loop
imul
sub
sbb
jmp
cs
dec
gs
adc
idivb
push
cmp
and
fiaddl
jge
pop
mov
aam
loopne
scas
aaa
or
cltd
icebp
adc
ljmp
mov
test
out
scas
lods
xor
xchg
sarb
loop
dec
outsb
bound
xchg
lret
jne
dec
pop
xor
push
adcb
adc
inc
sub
cmp
jo
shl
adc
sub
out
mov
push
push
adc
add
int3
jne
rol
insl
in
into
pop
inc
push
ror
sub
mov
push
xchg
out
popf
dec
cmpsl
shr
loopne
jb
ss
jp
lcall
jge
dec
enter
enter
sbb
imul
iret
xor
mov
sahf
test
test
push
fs
mov
push
push
pop
mov
pop
imul
sbb
shl
pusha
sti
lods
jp
jp
and
jmp
ret
inc
xchg
loopne
cmp
js
test
cmpsb
mov
insl
sub
inc
das
cmpl
pop
xor
fwait
into
xchg
mov
mov
inc
loope
aaa
dec
cmc
dec
mov
xchg
lock
imul
fwait
pop
inc
sbb
arpl
mov
cmp
dec
xchg
dec
lahf
mov
popa
lods
pop
or
mov
cmpsb
pop
mov
sub
pop
mov
lcall
jno
inc
stc
test
je
mov
cmpsb
cmc
pushf
insl
push
push
or
stos
jns
mov
ds
adc
out
xor
sbbl
xchg
dec
or
jge
fistpl
sbb
test
sub
pop
push
ljmp
jp
sub
out
mov
and
sub
arpl
or
decl
push
jbe
xor
and
mov
out
test
mov
mov
mov
mull
push
xchg
jns
xchg
call
popa
sbb
stos
or
inc
notb
mov
lods
lock
cmp
test
int
mov
mov
jo
mov
dec
add
lods
push
cmp
js
and
xor
jl
int
add
into
sbb
mov
into
jb
ret
add
insl
daa
xor
jne
outsl
mov
xchg
sub
xor
push
mov
std
sahf
pop
cltd
daa
fmul
ficoms
lret
psrld
pop
pusha
insl
or
mov
scas
xchg
mov
sahf
fbstp
js
or
jp
xchg
sbb
add
cmp
mov
push
hlt
ss
pop
cmp
aam
sbb
adc
fnstsw
dec
sub
cltd
fnstenv
dec
sub
inc
loop,pn
adc
pusha
lods
addr16
out
stc
ret
or
out
sbb
pop
mov
and
in
xchg
add
and
xchg
and
push
or
mov
shll
xor
jns
in
cmpsl
lret
cmp
pop
mov
pop
pop
lea
ds
lds
xor
lret
sub
pop
out
xchg
cmp
xchg
or
out
mov
ljmp
push
dec
mov
inc
push
dec
sarb
inc
jecxz
inc
add
cli
xchg
ds
dec
outsl
je
dec
enter
jae
adc
adc
stos
popa
dec
call
mov
mov
sbb
pop
movsb
leave
sti
xlat
or
adc
xchg
add
jne
dec
out
popa
inc
call
dec
into
out
leave
lret
rolb
xchg
loopne
out
pop
aaa
clc
or
adc
push
les
arpl
stc
addr16
xchg
xchg
sub
fs
jl
repnz
jae
movb
imull
sub
ss
or
dec
pop
aam
ret
jle
pop
add
fadds
outsl
or
fwait
and
scas
push
or
cmpsb
rorb
inc
shlb
cmp
int
add
aas
icebp
sub
xor
adc
adc
popf
mov
into
adc
mov
lret
adc
loopne
adc
cli
fucomip
stos
pushf
pop
insb
andb
in
mov
call
push
adc
rorl
rorb
js
in
aas
bound
inc
notl
ja
mov
cmpsl
std
mov
push
pop
loop
lods
sbb
add
jecxz
xchg
addl
xchg
dec
loop
pop
xchg
rcll
fcomip
jae
dec
scas
sbb
adc
push
and
or
rcll
loope
jns
push
outsb
cmp
fs
pop
sub
call
push
mov
jns
leave
rcrl
mov
sbb
shll
popf
push
mov
popf
ja
addr16
cmp
dec
inc
cmp
add
or
xchg
sub
xor
jo
or
or
dec
rcrl
rcrb
aas
jecxz
push
das
daa
movsb
loop
jmp
jo
adc
fadd
and
scas
mov
add
rorl
icebp
cwtl
jmp
push
lea
or
cmp
ficomps
hlt
add
subb
lock
test
xor
sahf
mov
sbb
lods
cmp
sbb
fcomi
repz
sbb
pop
push
lods
aam
mov
lret
in
mov
add
ret
cmp
and
xchg
and
mov
rclb
jle
adc
cmp
push
mov
jno
sbb
std
popa
pop
mov
out
lods
add
jb
xchg
sahf
or
add
add
and
inc
mov
inc
iret
jns
sahf
mov
int3
rorl
inc
outsl
popa
mov
mov
mov
out
test
ret
xor
pop
and
rolb
push
mov
push
inc
cwtl
addr16
movd
add
xchg
fcmovu
sti
out
or
pushf
in
sbb
ret
sar
sbbb
fwait
mov
mov
dec
stos
jmp
rorl
pop
lea
clc
mov
ror
inc
out
xchg
and
cli
sbb
mov
xchg
in
dec
rol
xchg
lock
inc
loope
sbb
idivl
push
ret
jge
xchg
add
aad
mov
hlt
cld
xor
inc
xchg
mov
xchg
or
fsubrl
aas
and
scas
cld
mov
jp
fcmovne
scas
sbb
xchg
arpl
inc
inc
mov
mov
cmp
xor
cmp
mov
std
scas
inc
icebp
aaa
jge
cs
fsubr
shll
jge
scas
adc
jbe
addr16
loop
xchg
dec
mov
push
aam
xchg
or
or
sbb
xchg
xchg
pop
in
in
lret
cli
in
jecxz
mov
xchg
leave
push
and
add
lret
sbb
orb
lret
xor
push
jns
and
cmc
vmovntpd
mov
xchg
sub
mov
mov
loop
sub
push
mov
dec
out
jge
imul
pop
adc
outsl
or
xchg
lds
dec
and
xchg
adc
jl
movsb
jle
pusha
or
nop
mov
sbbl
mov
in
mov
nop
pushf
inc
stos
test
decl
and
pop
cmp
dec
stos
ja
pop
mov
push
lcall
aaa
rcrb
mov
xor
pop
xor
enter
pop
dec
sbb
rcrl
aaa
xchg
push
out
mov
and
push
push
lods
push
mov
mov
mov
js
mov
enter
xor
cmp
xchg
xchg
and
out
fistpll
ret
rorl
pop
fincstp
sub
scas
test
jne
sub
xor
fwait
inc
or
xchg
adcb
and
ret
hlt
xor
in
scas
test
cmp
jns
notb
or
mov
jp
mov
or
cmp
sub
js
jl
call
call
loope
je
cli
jns
adcb
inc
scas
int
mov
int3
jo
adc
loop
inc
movsb
xor
iret
jmp
out
fisubs
xchg
mov
popa
sbb
sbb
mov
cmpl
mov
out
lret
and
addr16
les
dec
jno
jno
sbb
out
adc
clc
mov
inc
andb
cmp
push
or
push
ficomps
popf
xor
imul
out
lock
xchg
inc
fisttpl
int
lds
lods
or
mov
xorb
and
mov
stos
xchg
sti
xlat
dec
push
shrl
andl
mov
sub
fsubp
outsb
jmp
push
cmpsb
aad
arpl
push
fnstcw
cmc
shl
ja
jmp
dec
xlat
jo
out
or
jo
aam
cwtl
xor
insb
mov
cs
ljmp
push
inc
jecxz
js
mov
mov
xor
imul
shrl
jae
mov
jp
scas
lret
loope
aad
jnp
jns
adc
cmp
mov
popa
jmp
popa
xchg
and
and
dec
les
jne
lds
stos
and
aam
sbb
popf
cmpb
mov
xchg
pop
push
mov
sbb
into
dec
cmc
push
adc
mov
dec
lods
sbb
xchg
xlat
mov
xchg
cmp
sti
clc
enter
faddl
test
mov
mov
mov
mov
cmc
andb
cmp
pop
xor
rcrb
dec
iret
inc
dec
sti
pop
xchg
into
mov
adc
test
ret
push
cwtl
xor
mov
imul
fbstp
cs
inc
mov
ljmp
xchg
cmp
or
push
or
xor
add
mov
xchg
jp
sti
mov
push
lcall
sbb
cli
jmp
sub
push
cmp
push
mov
insl
testl
mov
lcall
add
aad
xchg
push
sahf
cmp
repnz
and
add
jns
fnstsw
jl
xor
cmp
divb
mov
aaa
inc
push
fwait
repz
shrl
fs
addb
or
xchg
shr
cmp
pop
or
push
jl
mov
xchg
xchg
mov
ficomps
adc
xor
out
lret
push
bound
adc
leave
jb
inc
sbb
int3
mov
pop
xor
add
pushf
jns
mov
sub
mov
stos
stos
push
inc
notl
enter
fs
sub
push
push
jl
adc
negb
shll
popa
stos
sarb
sub
stos
dec
sbb
inc
jno
data16
pop
orl
xchg
mov
or
and
call
push
out
adc
lahf
cmp
cltd
jle
cmp
aaa
xor
ret
cmp
lods
out
iret
iret
int
test
mov
cmp
loopne
xchg
xchg
cld
js
and
hlt
pop
inc
push
dec
adcb
popf
pop
push
pop
popa
clc
sub
aad
mov
mov
enter
jns
daa
imulb
jbe
pop
clc
outsl
in
or
in
push
out
mov
mov
add
loop
push
push
cmc
bt
add
pop
inc
mov
mov
jb
push
add
pusha
shll
push
les
adc
jge
pop
pop
xchg
sbb
jl
mov
lret
jbe
das
sub
push
push
dec
js
adc
mov
mov
pushf
stc
xor
dec
jae
fs
iret
or
enter
xlat
lret
test
repnz
sbb
loop
adc
js
jmp
jp
xor
push
sbb
rorb
cmp
icebp
dec
and
mov
mov
cmp
xchg
lcall
outsb
mov
js
cwtl
pop
xchg
lock
inc
inc
jmp
jmp
xchg
int3
sbb
in
out
ja
add
fwait
sub
pop
insl
and
cltd
jo
or
sbb
jl
movsb
insb
rclb
dec
in
push
mov
stos
in
add
test
cmp
popa
dec
stos
pop
test
pop
fcoml
loope
push
in
insl
cmp
and
test
arpl
cmp
rcll
mov
or
sub
mov
mov
sbb
fsub
enter
daa
cwtl
aam
fadds
push
mov
je
fcoms
cwtl
insl
inc
orb
call
dec
cmp
xchg
inc
jge
mov
or
or
push
dec
sbb
aaa
or
sahf
xchg
dec
addb
lret
inc
sub
int
imul
shrb
add
aad
xchg
repz
mulb
lock
pop
std
push
jecxz
push
scas
cmp
sbb
std
pand
add
push
fstps
push
cmp
sub
mov
pop
in
jecxz
mov
mov
sub
and
mov
pop
pop
int
ror
pop
mov
fwait
inc
mov
sub
xor
sub
aaa
aam
out
mov
mov
into
ret
xchg
jo
sub
dec
js
fs
in
mull
ds
fdiv
push
xchg
addr16
nop
cmpsb
ljmp
jp
fistpl
mov
pusha
psubd
mov
or
lcall
fmuls
inc
test
cmpsl
outsb
repnz
lret
dec
test
sub
mov
mov
cmp
out
fnstcw
insl
adc
push
xchg
mov
insl
mov
arpl
lea
loope
push
xor
rolb
fcom
or
lds
sbb
xchg
clc
lock
in
aad
movups
imulb
arpl
nop
mov
lock
sti
and
push
test
bound
dec
push
or
arpl
test
jl
jns
fs
repnz
cld
je
push
pop
push
inc
cmp
pop
or
add
ret
push
xor
push
popa
imul
adc
lods
push
jae
push
movsb
clc
mov
pushf
mov
fldenv
add
sahf
adc
into
pop
mov
rcrl
inc
jae
push
das
xor
and
xchg
cs
cmp
mov
ljmp
pop
stos
or
inc
xchg
sub
andl
xor
push
jno
xor
stc
add
scas
aaa
dec
mov
imul
mov
fucom
or
sub
pusha
dec
mov
inc
jbe
fwait
or
lret
in
push
aam
add
popa
fisttpl
fucomip
pusha
pop
popa
dec
push
mov
iret
fs
xor
inc
xchg
mov
mov
xchg
sbb
inc
add
jo
mov
fwait
mov
add
inc
test
mov
sub
addl
and
lods
dec
scas
sub
stos
aaa
and
cmp
xor
cmpsl
xlat
sbb
into
pop
adc
inc
pop
inc
jns
mov
xchg
std
xor
pop
pusha
inc
adc
lds
aam
loop
jb
lret
mov
dec
call
push
fstl
in
jle
je
mov
sub
mov
xor
lods
jl
inc
jg
inc
sti
jge
mov
lret
cmp
mul
push
stc
cwtl
fists
pop
or
inc
fwait
shll
cld
jle
xlat
fldt
add
sti
adc
test
sbb
xor
arpl
lret
jno
test
or
cld
into
push
in
xchg
mov
icebp
pop
sub
lock
iret
fiadds
iret
jge
imull
sbb
adc
xor
enter
shll
cmp
into
add
jmp
pop
mov
out
inc
divl
or
or
mov
push
jp
mov
jbe
repz
mov
mov
cwtl
loope
outsl
int3
adc
xchg
repz
push
aam
movsl
lahf
call
mov
loopne
add
push
sahf
inc
fnstcw
sarl
or
int
xchg
arpl
dec
test
pushf
rolb
shrb
movsl
xor
lea
or
shlb
mov
pusha
nop
imulb
mov
and
test
ret
call
sub
mov
lcallw
xchg
cmp
je
adc
inc
xor
loope
dec
adc
xor
stos
mov
add
pop
xlat
push
inc
movsb
and
cli
jne
stos
xchg
jns
lret
adc
jb
mov
lret
dec
js
out
ret
mov
adc
pop
js
out
mov
dec
cmp
inc
jb
cmp
outsb
add
cs
loopne
mov
decb
and
pushf
gs
adc
xchg
cmpb
cmpsl
mov
pop
test
pop
pop
int3
dec
mov
xchg
pop
imul
mov
outsb
out
shr
lret
push
inc
stc
es
mov
dec
repnz
mov
shll
lahf
sbb
sub
inc
hlt
jae
add
push
push
ficoms
mov
jl
jnp
fnstsw
mov
cld
jnp
hlt
outsb
dec
loope
mov
aad
sbb
xor
ss
ljmp
ret
mov
mov
sub
lahf
inc
popl
xchg
mov
imul
mov
dec
sub
int3
ret
pop
jno
inc
mov
sub
int
out
sbb
and
clc
push
or
push
outsb
cmp
and
push
mov
test
xchg
or
rol
dec
pop
sahf
scas
and
sbb
or
jle
push
mov
lock
inc
or
loop
xor
xor
add
stc
lea
into
sti
scas
pop
aas
test
negl
mov
scas
inc
sbb
cmp
ret
pop
test
sarl
pop
test
sarl
jmp
mov
icebp
sub
shlb
pop
leave
out
lods
jo
std
pop
out
mov
xchg
mov
cmp
das
sub
sbb
adc
push
xor
lock
stos
mov
or
test
mov
mov
ljmp
es
push
rcl
pop
push
pusha
fsubr
and
repz
dec
enter
nop
xchg
jno
sbb
int
pop
cmp
fsubr
in
sub
out
cmpsb
sub
add
cmp
fstps
in
fsubs
mov
jmp
jmp
leave
insb
outsl
hlt
sar
push
sbb
fisttps
dec
and
hlt
xor
mov
test
mov
insb
adc
lahf
popf
aad
sbb
mov
mov
in
sbb
cld
aaa
or
sbb
outsb
sti
mov
jl
pop
lret
jne
mov
push
push
xchg
shrl
pop
pop
cltd
rcrl
loope
cmp
cmp
add
xchg
dec
xor
cwtl
mov
jle
aam
imul
lods
shl
cld
or
mov
cmp
xor
aam
movsl
push
pop
repz
insl
bound
mov
test
and
jo
aas
sbb
clc
stc
jnp
cli
data16
std
pushf
fsubrs
mov
popf
xchg
jl
je
std
jg
and
cltd
movsl
sbb
pop
adc
fiaddl
lea
fbstp
es
inc
adc
mov
mov
ljmp
mov
adc
dec
sahf
xchg
adc
sahf
dec
dec
aaa
aad
imul
mov
orl
add
cmp
inc
jno
js
and
sbb
cs
testb
jns
pop
add
and
loop
xchg
lock
mov
cwtl
mov
xchg
imul
scas
arpl
shlb
xor
add
add
jmp
sub
sub
movl
mov
lods
repz
dec
loope
nop
or
repz
inc
enter
cmp
push
jmp
ficoms
mov
xor
cli
fcoml
loopne
pop
jge
xlat
mov
cmp
je
pop
gs
mov
repz
sub
jmp
or
xor
dec
add
dec
arpl
xchg
and
hlt
fcompl
cmpsl
mov
jle
fsubrl
js
lods
xchg
test
in
fisttpl
jo
mov
imulb
pushf
push
xchg
cwtl
dec
add
mov
in
inc
ret
push
cmc
sbb
cmp
jp
inc
sub
adc
mov
mov
sbb
mov
push
push
xchg
or
inc
adc
sarl
cmc
pop
dec
mov
adc
mov
stc
mov
adc
movsb
repnz
mov
out
pop
scas
or
test
lods
cmp
xor
aaa
cmp
pop
and
xchg
push
adc
fwait
lret
aam
dec
nop
in
jge
ret
push
jle
loopne
mov
mov
jo
addr16
gs
mov
pop
sbb
jmp
xchg
sbbl
std
pop
imul
and
leave
fists
rclb
xor
mov
sub
shlb
int
mov
pop
addb
dec
fnsave
xor
jns
push
cmpsl
mov
mov
mov
jle
mov
xor
insl
sub
aas
out
pop
imul
push
repnz
jno
cld
sub
scas
movsl
mov
les
xchg
fs
out
dec
mov
jge
movsb
xchg
jnp
addb
push
jne
sti
jg
movsl
cmp
std
add
fsts
jl
aas
jecxz
and
clc
and
icebp
lock
inc
fs
jl
mov
mov
sti
jle
out
jns
int3
and
jecxz
dec
sbb
ljmp
or
arpl
xchg
aaa
test
jno
je
sbb
jbe
pop
sbb
lea
mov
sar
in
sub
inc
shll
jle
popa
adc
fwait
xor
pop
sbb
frstor
mov
cmp
pop
mov
and
push
inc
loope
rorl
ss
fadd
xchg
mov
adc
lahf
out
and
cmpsb
aaa
adc
jae
xor
aaa
cmpsb
jo
mov
inc
scas
clc
andb
sub
cmp
sub
inc
push
jnp
xlat
stos
pop
outsb
rol
out
add
ret
sbb
stos
xor
dec
sbb
mov
sub
ret
into
js
cld
sbb
push
and
lss
int3
imul
jbe
xor
enter
push
xlat
lret
fnsave
js
adcl
mov
mov
icebp
cmp
mov
pop
adc
ret
jne
and
fnstsw
sub
pop
loop
dec
and
xchg
xchg
pop
xor
xchg
lret
inc
inc
jb
mov
push
pop
xchg
loope
add
push
sbb
push
insl
push
add
xor
add
mov
bound
or
adc
insb
xchg
add
les
and
jo
dec
fnstcw
xchg
pop
mov
movsl
pushf
fwait
rorl
int3
ret
sbb
addl
lds
sub
lods
add
call
sbb
sub
push
jmp
mov
jns
push
lds
roll
arpl
mov
mov
mov
cld
inc
mov
rcll
pop
jg
pop
push
inc
sub
add
adc
mov
push
jnp
stos
xor
cld
les
jo
sbb
insb
xor
cmc
push
enter
pop
daa
and
aas
rorb
xchg
xchg
out
add
mov
or
jp
jl
xchg
inc
repz
and
pop
and
mov
cmpsl
xchg
aas
jmp
cmp
arpl
fistpl
sbb
push
jno
test
cmp
cmp
xchg
outsl
nop
xchg
orb
ror
negl
aaa
add
mov
mov
mov
into
dec
cmp
add
push
fstpl
fsub
insb
fldcw
cmp
and
add
scas
mov
push
imul
mov
movsb
push
aad
push
pop
fildl
popa
jae
sbb
mov
xor
dec
enter
push
in
cmp
sbb
mov
or
outsl
notb
mov
cld
mov
test
bnd
add
inc
arpl
xor
push
push
out
or
jb
inc
inc
xchg
fmull
and
nop
mov
push
or
cmpl
into
inc
jo
push
aas
xor
test
rcrl
push
idivb
out
adc
stos
mov
rcr
push
nop
mov
int
loopne
es
int3
lods
lds
adc
stos
mov
in
and
xor
sti
add
pop
js
clc
sub
pop
inc
pop
aad
pop
in
push
sbb
mov
jnp
shl
mov
sub
sub
lret
xchg
inc
lret
lret
stos
xlat
mov
mov
push
ds
lea
loopne
cmpsb
push
dec
rolb
rclb
xchg
pop
add
pop
dec
jle
xor
sahf
sbb
jns
inc
filds
push
mov
xor
push
shr
xor
test
dec
and
xor
out
addr16
rcr
mov
mov
cmc
inc
call
in
test
enter
es
lods
inc
inc
pop
fdiv
adc
add
xchg
out
mov
mov
push
push
dec
push
or
sub
ret
ds
xor
mov
cmpsl
sub
inc
jno
push
xchg
push
jae
iret
addr16
xchg
and
pop
jnp
and
xchg
pop
incb
lea
dec
push
xor
and
mov
xchg
out
push
sbb
jae
ds
sub
push
inc
cmp
xchg
add
popf
ret
mov
int
test
repnz
add
cli
jl
xor
stc
cmp
call
outsb
aam
cld
fisttpll
ret
sub
add
and
pop
pop
cli
add
add
pop
scas
dec
lret
inc
shlb
xor
sbb
mov
jo
cmp
or
cmpsl
ret
xor
cmpb
repnz
mov
sub
mov
test
dec
or
outsb
pop
stos
mov
sbb
notrack
xchg
shlb
ds
cmpsb
fsub
adc
lods
and
mov
inc
aam
mov
pop
filds
adc
movsb
fs
les
cmp
cltd
xchg
aaa
xchg
and
ficompl
roll
inc
ja
dec
fdivl
inc
test
leave
daa
sub
push
sbb
push
jmp
cld
fisttpl
dec
or
and
xchg
aaa
out
insb
stc
addr16
add
add
push
add
xchg
mov
inc
xchg
push
ret
in
lods
sbb
mov
pop
sbb
xchg
outsb
aas
stc
lods
int3
addr16
sbb
inc
cmp
add
cmp
popf
push
stos
mov
rcll
mov
cwtl
jnp
decb
pop
sub
mov
lret
lret
iret
inc
mov
dec
push
mov
mov
lock
cltd
xchg
mov
mov
adc
dec
scas
out
stc
mov
leave
mov
or
ret
pop
sbb
xchg
push
mov
das
pop
nop
repz
loope
pop
test
sbb
and
lock
arpl
pop
cli
mov
cld
or
xor
outsb
loopne
mov
gs
push
ud1
mov
lods
test
inc
inc
fsubs
shll
jae
jb
dec
scas
pop
in
sbb
daa
rcrl
xor
outsb
dec
outsb
cmpsb
sbb
popa
dec
clc
adcl
pop
loop
push
adcl
jl
inc
icebp
test
pop
roll
flds
fidivl
daa
popf
mov
imul
inc
out
jge
stos
daa
jbe
sbb
les
pop
cld
push
sar
push
shlb
arpl
mov
mov
mov
enter
lock
mov
inc
push
out
xacquire
adc
or
push
mov
push
fimull
es
mov
sbb
xchg
inc
movsl
iret
nop
push
jmp
fisttpl
mov
xor
and
xchg
xor
push
jns
in
pop
lock
nop
mov
lcall
xor
filds
or
inc
aas
pop
enter
insl
lods
insb
jo
mov
mov
cmp
inc
or
jecxz
xchg
push
and
ja
push
xchg
popf
pop
dec
push
enter
sar
jne
pop
leave
in
dec
mov
jmp
pop
mov
fsubr
cld
aam
cmp
and
push
lds
jnp
xor
mov
mov
in
add
mov
gs
shrb
mov
mov
mov
xchg
lahf
lods
es
aas
adc
and
test
jns
jmp
bound
out
cmp
movsl
enter
dec
jmp
arpl
nop
xor
in
xchg
popa
adc
cwtl
into
jg
jmp
push
fcmovnbe
pushf
jg
mov
fstpt
stc
loop
add
cmp
jmp
mov
cmpb
aaa
jp
xor
cmp
popf
fiadds
cmp
ret
pop
xor
mov
dec
std
out
mov
sbb
into
mov
pop
sbb
scas
jno
push
and
lods
mov
lods
clc
loop
in
sbb
push
out
xorb
lods
xchg
mov
jbe
ja
inc
jge
sub
and
stc
imul
into
sbb
testl
bound
or
add
lds
inc
cmp
or
jnp
and
cmpl
xchg
aad
xchg
pop
push
dec
stos
stc
sub
cli
fdivrp
out
dec
insl
cmp
cmp
inc
cwtl
jmp
or
push
pop
pop
addr16
fwait
mov
int3
pop
push
cmpsl
mov
repnz
mov
dec
or
mov
add
data16
addr16
push
in
int3
dec
xchg
gs
out
test
add
outsb
sbbb
cld
in
jmp
jns
pop
dec
sub
lcall
stos
pushf
cmp
pusha
insb
adc
dec
cmp
dec
cmp
inc
stos
repz
lahf
clc
pop
lock
xchg
mov
lock
aaa
cmp
stos
flds
test
pop
ret
ret
mov
inc
fimull
lret
sbb
imul
push
fwait
inc
out
cmpl
jmp
lcall
jmp
sub
cmpsl
mov
fsts
aaa
sub
inc
lock
adcl
loope
add
xorl
test
mov
sarb
flds
loope
pushf
jo
push
movsb
dec
and
mov
adc
xchg
sub
and
mov
fildll
ljmp
sahf
cmp
outsb
addb
bound
aad
sub
pop
in
mov
lret
outsl
decb
mov
dec
mov
sub
or
mov
xor
stc
mov
sub
cs
jg
divl
fiadds
inc
fisttpll
push
xchg
insl
inc
insb
jne
mov
add
mov
movl
dec
test
in
xadd
adc
out
aaa
xchg
test
aam
cmp
pop
in
inc
lret
loope
adc
test
ds
mov
cld
out
movl
dec
adc
push
loop
add
repnz
mov
pop
jge
shll
testl
ja
scas
fs
in
test
cs
imul
or
and
inc
fs
jecxz
jae
mov
mov
xor
fstpt
es
and
xor
xchg
mov
mov
push
and
repz
in
mov
bound
in
cld
and
out
dec
test
cmp
fidivl
jmp
cmp
out
lahf
icebp
xor
dec
fwait
ss
pusha
and
out
fnstenv
lret
push
or
sbb
decb
push
dec
dec
sti
scas
in
sub
adc
pop
ficoms
adc
fimull
push
in
bound
rcll
rcll
pop
mull
push
dec
jb
nop
push
pop
jbe
cmp
std
dec
rcr
out
stos
pop
pop
mov
sti
cwtl
sub
cli
in
or
and
cmp
mov
add
jo
adc
mov
mov
mov
and
insl
inc
out
add
and
dec
mov
mov
add
sarb
pop
js
mov
jno
pop
mov
shll
lcall
jmp
nop
pop
cmp
rorl
cli
dec
testl
aas
stc
mov
das
cltd
mov
lfence
jns
sub
adc
lret
das
popa
adc
in
mov
cmp
or
mov
and
arpl
pop
mov
cmp
pop
stc
and
cmp
scas
jne
orl
xchg
mov
cmp
push
mov
ds
inc
xchg
lahf
sahf
mov
lret
mov
lahf
arpl
xor
outsl
fcmovb
jno
repnz
mov
push
xor
or
or
mov
pop
jbe
xchg
rorl
ss
stc
iret
cmp
add
nop
pop
insb
icebp
test
pop
pop
mov
repz
orb
repz
xchg
insb
mov
leave
xchg
leave
dec
pop
mov
popf
es
xchg
inc
imull
loope
mov
sbb
cli
scas
mov
jmp
pop
test
pop
out
sti
in
push
test
sbb
mov
adc
mov
add
das
movsl
lea
fisttpll
pop
push
sub
fwait
repz
or
cwtl
es
xor
lds
xchg
mov
push
sub
das
ret
scas
dec
stc
cmp
cmp
xchg
xchg
xchg
pop
xchg
cmp
je
lds
imul
adc
cmpsl
jmp
daa
pop
inc
ds
lock
in
jbe
in
out
jl
inc
cmpsb
loope
ret
adc
push
gs
sub
lods
mov
idiv
dec
into
mov
mov
test
cwtl
mov
pop
lds
iret
stos
or
cwtl
xor
adc
jle
jns
mov
xchg
adc
mov
mov
mov
movsl
or
mov
or
int3
xor
xchg
mov
daa
mov
dec
mov
aad
push
mov
sub
ret
popf
jg
sub
es
mov
sti
hlt
inc
outsl
test
xchg
inc
pop
xchg
test
leave
mov
xchg
pop
mov
sub
mov
jne
cli
inc
sub
aaa
stc
sti
sahf
sub
mov
ljmp
jae
mov
cmp
mov
xchg
orl
and
add
mov
out
aam
or
cltd
clc
sub
aad
lret
movsl
lea
jbe
inc
and
mov
mov
icebp
jb
repnz
jl
loop
or
je
das
or
sbb
mov
inc
and
leave
jae
inc
in
insb
adc
or
inc
dec
popa
mov
and
out
sbb
lea
je
cltd
mov
ret
fwait
dec
xchg
fsts
int
sub
std
xchg
decb
in
subb
pop
pop
loopne
dec
pop
stos
mov
jge
sub
pop
pop
jl
mov
cmp
fs
cmc
cmp
in
pushf
xchg
xor
out
andl
lock
mov
adc
sub
lcall
pop
data16
add
xchg
shll
xor
inc
sbb
es
fstpt
fisttpl
iret
insl
sbb
jp
jle
mov
lahf
loope
or
sub
ds
jbe
push
push
scas
xor
out
imul
jecxz
mov
into
pop
enter
cld
jb
std
xchg
mov
mov
lock
mov
mov
in
adc
pop
cmp
cmp
fstps
pushf
addr16
nop
aaa
jmp
sarl
shlb
scas
xchg
adc
push
lahf
cs
or
mov
push
lahf
adc
orl
sti
int3
inc
movsb
mov
adc
scas
jb
outsb
cmc
das
filds
xor
pushf
stc
fistl
test
mov
sti
push
stc
fsubrl
in
xchg
test
dec
mov
insb
jle
sti
rorl
xchg
adc
icebp
rcrl
aam
and
xchg
ret
aas
jge
ljmp
ss
sbb
mov
adc
pop
push
push
ja
pushf
clc
cltd
add
sbb
lock
insb
out
mov
lock
mov
xor
roll
out
in
or
adc
xchg
inc
rolb
cmp
test
pop
testb
pop
cs
int
mov
or
enter
mov
test
insb
fstpl
jmp
arpl
sbb
sti
orb
gs
data16
pop
jbe
jmp
cmp
or
xchg
fcompl
hlt
test
ret
fcomip
xchg
daa
loop
jb
add
cwtl
pop
hlt
xor
mov
fadds
orb
or
push
sub
iret
sbb
mov
mov
les
sub
fisubl
movl
insl
inc
lods
jg
test
xor
push
pusha
adc
mov
sbb
push
bnd
aam
test
scas
repz
pop
jno
enter
sbb
pop
or
xchg
xorb
je
shrl
xor
je
or
mov
iret
pop
mov
mov
and
and
ficomps
cmp
adc
cmc
loop
pop
stos
lea
loope
mov
adc
outsb
cmp
into
lahf
dec
cmp
cmp
iret
xchg
repnz
movsb
dec
stos
inc
in
mov
push
mov
mov
not
cmpsb
cmp
push
cmpsl
dec
or
out
out
mov
mov
aad
iret
jmp
call
aaa
pop
adc
sbb
mov
fidivrs
stos
add
sbb
fldcw
cli
ret
in
or
sbb
psllq
sti
mov
icebp
jl
pop
jns
ret
andb
dec
jmp
int
push
cmc
pop
xor
adc
shrb
pop
pop
mov
cli
ljmp
sub
mov
pop
dec
push
push
addr16
hlt
cmp
sbb
test
sub
jns
into
subb
push
or
ficoms
jno
push
orb
cmp
mov
enter
cmp
pushf
mov
lret
mov
or
cmpsl
xchg
lcall
push
test
je
and
addl
add
cltd
dec
das
pop
rcrl
push
test
inc
sahf
and
xor
sub
jmp
pop
sub
std
pushf
les
mov
roll
sub
xchg
jb
rorb
inc
pusha
and
rcrb
in
stc
cmp
ljmp
jbe
outsb
and
cld
xchg
rol
or
sub
lret
out
cmpsb
xor
xor
pop
adc
lods
popf
adc
adc
lret
insb
dec
mov
fadd
push
sbb
jmp
mov
jno
sarl
test
inc
mov
loopne
sbb
in
in
cmp
push
jns
jmp
xchg
nop
and
sbb
scas
mov
or
cmp
cmp
dec
mov
push
inc
outsl
insb
sti
adc
mov
cmp
jecxz
imul
fcompp
jno
inc
xchg
ljmp
lods
and
sbb
testl
dec
insl
shld
call
mov
mov
btc
idiv
lds
rcl
inc
js,pt
jecxz
fdivrs
test
addl
jbe
mov
mov
sub
mov
in
sbb
mov
jge
call
mov
call
and
cltd
into
mov
mov
push
push
sbb
mov
mov
shl
imul
ljmp
out
in
mov
mov
add
mov
sub
movsb
push
cmc
cmpsl
sub
ljmp
jb
mov
jmp
test
mov
inc
xor
lahf
cmp
add
sbb
cmp
out
hlt
push
jmp
and
fcmovbe
test
cmp
inc
xor
fnsave
mov
psrad
std
dec
stos
xchg
jno
call
inc
scas
xor
das
or
xor
mov
mov
andl
cli
push
fpatan
or
jmp
sub
addr16
cmp
pop
fs
popl
inc
adc
and
push
add
adc
mov
cmpsb
and
xor
mov
dec
cli
je
lea
rcrb
jae
xchg
mov
je
jae
jl
out
inc
test
stos
and
jge
insb
pusha
enter
xor
mov
adc
push
jge
cmpsb
or
sbb
aaa
lods
dec
leave
ror
dec
movl
sub
adc
xchg
and
ret
pop
pop
cmp
mov
jle
jb
pushf
mov
xchg
xchg
nop
adc
sti
dec
lds
cwtl
dec
push
scas
cli
int
fisttpl
insb
mov
mov
xchg
or
pusha
mov
test
jno
loopne
add
mov
jb
mov
sub
out
sub
scas
mov
mov
icebp
or
arpl
mov
cmpsl
aas
stos
push
push
psadbw
or
jb
sub
mov
push
xchg
push
das
push
jb
push
insl
pop
loope
ret
out
mov
xchg
inc
push
mov
inc
out
andb
jnp
stc
adc
mov
adc
xor
xchg
mov
cmp
out
dec
jmp
pcmpgtd
add
xchg
mov
jl
mov
mov
mov
sti
mov
pop
push
mov
daa
lea
imul
or
lret
cmp
adc
and
or
jp
je
es
cmp
cld
repnz
fstl
inc
xor
cmp
sub
lahf
jg
xor
insb
into
push
sbb
sub
outsl
outsl
inc
xchg
shl
and
jle
xor
sub
sti
in
jp
adc
outsl
sbb
xor
mov
and
jmp
aam
daa
inc
xchg
push
das
mov
cmp
insb
mov
fwait
mov
lock
es
sbb
add
icebp
jbe
jg
paddsw
test
dec
loop
je
sub
mov
into
imulb
aaa
cmp
out
inc
jl
jbe
add
stos
addr16
sub
push
jge
mov
jge
mov
mov
cmp
int
sbb
dec
notl
cmc
cmp
ss
sub
call
andb
mov
fists
jbe
and
lret
fistl
xor
lea
jne
setl
sbb
daa
mov
filds
negb
aas
cmpsl
in
pop
jae
movsl
pop
mov
lcall
aad
ljmp
movsl
daa
dec
gs
lret
aas
pop
js
fcompl
pop
arpl
lock
dec
mov
fwait
dec
movsb
shl
inc
leave
sbb
cltd
add
imul
jg
outsb
outsb
jl
adc
and
xchg
xchg
test
jno
hlt
xor
clc
das
ljmp
dec
inc
push
pop
sahf
xor
and
jae
popf
dec
and
lods
add
imul
stc
repz
sub
test
jmp
inc
xchg
outsb
lea
cwtl
jne
jne
outsb
sub
outsl
lods
cmpsb
cs
ss
or
mov
imul
xchg
jns
dec
insl
cwtl
lds
test
sub
test
adc
ljmp
into
sub
fimuls
negb
call
cmc
lcall
mov
dec
mov
scas
jb
push
icebp
in
fstpt
daa
push
jno
jb
mov
jbe
pop
clc
add
mov
xorl
lret
sub
sub
jo
les
or
sbb
dec
push
out
gs
in
dec
pop
push
in
pushf
pop
jecxz
push
xchg
jg
imul
sbb
in
bnd
addr16
mov
es
pop
push
inc
les
cmpsb
jns
add
scas
addr16
sbb
aaa
mov
ljmp
stc
fcos
leave
out
push
cs
pop
imul
adc
das
call
inc
inc
shrl
in
or
out
lods
mov
mov
insb
in
push
addr16
or
cli
ljmp
and
pusha
lods
sbb
push
fsubl
xor
cmp
pop
mov
xor
push
jb
add
add
ret
mov
leave
xor
jl
mov
outsl
popa
test
test
loopne
popl
add
mov
jae
call
ficompl
add
jg
add
leave
sub
add
popf
sbb
and
mov
jmp
push
std
push
push
cmp
xchg
lahf
mov
mov
or
int
cs
test
push
inc
mov
jo
or
aam
popa
lds
adc
popa
dec
xor
mov
lcall
cmp
fwait
aam
mov
ja
js
cmp
and
and
ljmp
ja
cmp
aam
insl
push
ret
xchg
sbbl
push
ret
lock
push
les
mov
popf
push
movsl
adc
outsl
jecxz
xor
adc
cltd
test
add
jp
xor
xor
fwait
sbb
adc
xor
inc
mov
add
or
loop
mov
xchg
mov
adc
bound
cltd
push
add
push
int3
ror
or
nop
hlt
shrd
loope
jecxz
mov
dec
push
mov
lods
out
push
dec
adc
lret
int
push
gs
fcompl
add
jmp
imul
test
pop
hlt
cld
mov
sbb
aad
cltd
iret
clc
pop
aas
scas
test
fcomi
pop
cwtl
or
test
jb
sub
aad
jmp
pushf
push
mov
popa
or
xchg
dec
dec
daa
mov
outsb
out
js
pop
je
push
rcrl
dec
jns
xchg
xchg
inc
xchg
mov
ret
in
sub
cmpb
push
ret
bound
sbb
sbb
loopne
jle
dec
add
scas
loop
mov
adc
mov
cmp
dec
popf
pop
jecxz
ficoml
inc
repz
mov
enter
in
pop
cli
ds
sahf
repz
test
mov
sub
sub
dec
push
cltd
movsl
aad
in
lds
lahf
fs
std
sbb
sahf
xor
push
subb
dec
xor
scas
sbb
in
jb
add
stos
test
xchg
arpl
cmpsl
jbe
repnz
sti
negl
add
push
pusha
pop
mov
dec
pop
in
xchg
insb
lcall
pushl
push
adc
shlb
test
cltd
int3
push
pop
mov
lret
adc
mov
rcrb
fildll
pop
pop
pop
push
push
mov
data16
dec
xlat
leave
into
xor
lret
sub
test
mov
mov
mov
jno
sbb
loope
cwtl
mov
pop
mov
sbbl
mov
push
push
and
loopne
ljmp
clc
leave
and
xchg
sub
cmpsl
mov
pop
sub
jl
add
add
cmp
mov
mov
and
push
cltd
cwtl
fsubl
add
loopne
fnstcw
mov
dec
inc
rcl
scas
mov
insb
cmp
iret
xor
xchg
fiaddl
xchg
dec
mov
mov
les
inc
scas
inc
scas
jecxz,pt
dec
addr16
jle
xchg
rorb
pop
aaa
pop
sbb
and
mov
cmp
inc
bound
arpl
sbb
repnz
or
push
pop
pop
mov
pop
dec
cmp
mov
sbb
insb
ficoms
stc
mov
bound
cmc
inc
and
iret
jns
dec
push
daa
aaa
or
int
in
jge
scas
scas
push
lods
push
daa
popf
sti
divl
push
out
sbb
adcl
mov
sbb
cwtl
cmpsl
loope
sarl
sbb
adc
adc
push
xor
mov
xor
cld
push
call
jmp
addr16
or
pop
lcall
lock
xchg
pop
cmpsl
mov
mov
rorl
arpl
fsub
sub
lahf
jnp
mov
sub
iret
and
sbb
aaa
ja
and
in
shlb
xchg
iret
dec
daa
push
in
cmp
aaa
and
mov
push
pop
or
mov
jmp
out
mov
push
out
pushf
mov
mov
dec
lret
push
cmp
mov
push
pop
jb
sbb
jns
jle
inc
sub
add
xor
cmp
adc
mov
adc
push
test
icebp
or
pop
adc
in
adc
push
push
bound
out
jmp
xor
add
add
loope
ss
fistps
loope
jmp
movsb
pop
add
mov
and
or
add
repnz
sbb
jo
xor
mov
pop
inc
cmp
mov
das
sbb
mov
imul
inc
incl
and
pop
jno
loope
sbb
cs
mov
xchg
xor
mov
pop
outsl
fs
pushf
out
scas
mov
pop
rcll
mov
pop
ret
xchg
sub
sbb
mov
add
mov
in
jecxz
and
fstpt
dec
and
xchg
jne
xor
push
sarb
push
mov
adc
xor
lcall
cmp
decl
bound
mov
pop
pop
lods
rolb
jle
mov
in
xorl
mov
cmp
pop
sbb
sahf
sar
and
and
pushf
clc
imull
xchg
les
adc
adc
cmpsl
adc
loopne
sub
adc
cmp
sub
xor
stc
pop
cld
imul
pop
arpl
dec
mov
jmp
lds
add
aas
pushf
rcrl
xchg
pop
jns
lods
xchg
clc
aas
inc
pop
dec
sub
xor
or
mov
popa
mov
xchg
mov
lret
mov
fisubs
jno
pop
add
push
cs
pop
mov
fiadds
rcl
cmp
adc
cmp
js
mov
int3
in
fdivs
sarl
pop
mov
xchg
cmc
sahf
insl
inc
hlt
add
sahf
movsl
mov
mov
or
in
sbb
adc
sub
push
int
lret
arpl
xor
inc
mov
movsb
adc
pop
lahf
sbb
jle
sub
dec
lret
cmpsb
fisttpl
xor
xchg
insl
or
jns
lret
or
push
repnz
pushf
dec
push
repz
cmp
xor
aam
dec
sub
in
cmp
sub
cmp
push
rclb
lret
pop
insl
pop
push
dec
vpsubd
jbe
aaa
push
adc
jmp
loopne
mov
mov
mov
shrl
xchg
movsl
ret
flds
outsl
inc
dec
movsb
pop
fcmovbe
inc
and
pop
add
fs
rorb
pop
out
mov
sbb
pop
das
mov
push
pop
rcr
jl
outsl
xchg
sbb
jecxz
fisubrs
fldt
enter
inc
mov
stos
adc
imul
je
adc
cmpsl
lcall
lods
fsubrl
cmpsb
iret
imul
ja
scas
pop
cli
inc
dec
sbb
cs
fidivrl
mov
jbe
std
sarl
pushf
imulb
loop
and
pushf
mov
inc
jb
fsubrl
and
sub
addb
mov
sbb
andb
lahf
jp
inc
jmp
movsb
repz
xor
sub
mov
iret
xchg
mov
pop
ss
int
ss
push
xor
fucom
lcall
out
mov
shlb
out
orb
int
sbb
dec
push
stos
in
push
iret
inc
or
jecxz
push
out
pop
loope
mov
leave
pop
lret
sbb
cmp
addr16
push
ljmp
xor
mov
and
xchg
pop
iret
mov
adc
push
aas
or
mov
jno
xorb
les
int
mov
ss
xchg
data16
sbb
rcr
jecxz
out
inc
fcompl
cmp
jne
dec
lods
leave
push
push
icebp
xor
and
loope
leave
into
aam
insb
mov
mov
mov
push
ja
fnstsw
adc
push
xor
inc
mov
fldlg2
mov
in
mov
mov
jbe
mov
lcall
fs
add
dec
rcr
lahf
scas
and
xchg
cmc
aas
stos
sub
cmp
hlt
mov
inc
ss
or
sbb
and
cmp
popf
dec
jo
push
fldln2
lea
add
adc
insb
lock
xchg
test
jg
jp
ja
dec
and
cld
movsb
popf
push
filds
mov
fwait
dec
mov
int3
adc
cmc
in
in
adc
sbb
aaa
adcb
les
sub
cwtl
jle
cltd
scas
mov
cmc
pop
add
jne
mov
das
les
inc
sarl
mov
or
and
add
lds
fbstp
pop
cld
xor
in
xchg
xor
inc
mov
std
mov
or
cmc
sbb
xor
mov
cmpsb
lods
push
push
adc
lret
sbb
sarl
mov
sbb
pop
pop
cmp
push
push
cmpl
test
cmp
push
or
fs
movsb
add
and
mov
hlt
lahf
mov
mov
pop
xchg
mov
push
sbb
bound
dec
andl
push
or
into
push
cmp
add
inc
and
cmpb
sbb
lock
mov
pop
push
dec
notl
fs
dec
push
mov
mov
inc
orb
or
movsb
je
mov
xchg
fsts
enter
adc
mov
jl
scas
fwait
mov
shll
jle
inc
fadds
js
outsb
cmpsl
jl
loopne
mov
in
stc
add
sar
cli
xchg
xorw
jnp
pop
mov
jp
pop
mov
out
icebp
movsl
mov
in
outsl
addl
inc
push
loope
add
fbld
test
xchg
jns
adc
pop
ljmp
xchg
stos
lcall
pop
cs
clc
shlb
xor
test
mov
insb
dec
fimuls
dec
adc
xchg
std
scas
sti
aam
or
icebp
mov
xchg
xor
out
jecxz
in
sti
jg
push
adc
je
es
push
mov
jg
mov
mov
or
xchg
xchg
fstpl
iret
or
lcall
sub
sub
sbb
ja
and
aam
les
fwait
add
mov
loope
jmp
mov
adc
inc
adc
lahf
or
push
cmc
shrl
movsl
jne
jno
add
mov
mov
push
xchg
mov
sub
fdivrs
insb
push
mov
mov
mov
sbbl
jae
bound
adc
pop
mov
mov
cs
adc
movsb
adc
mov
push
mov
addb
clc
mov
push
or
iret
call
xchg
xchg
or
cmp
insb
inc
mov
test
cmp
mov
ds
push
adc
inc
std
outsl
xor
xor
mov
sub
xchg
xlat
xor
push
sub
or
test
xchg
mov
leave
enter
inc
push
cvtps2pd
cmc
imul
flds
movsb
cmpsb
outsl
inc
push
cld
arpl
cmp
jo
cmp
out
fsubl
pop
sbb
pop
cmp
out
add
pop
sub
add
push
lcall
aad
jge
les
scas
sbb
es
dec
rcl
flds
in
xor
and
fsubp
push
aam
imul
pop
das
daa
pop
mov
and
inc
je
jp
adc
xchg
mov
int
sub
push
sbb
push
sbb
jg
es
xlat
push
mov
stos
adc
dec
dec
sbb
xorb
cmp
and
cwtl
adc
aas
push
out
mov
mov
iret
pop
lock
and
dec
ljmp
fdivrs
sub
sub
adc
xorb
out
fiadds
test
stos
xrelease
sbb
push
dec
imul
or
push
mov
fisubrs
iret
in
sti
mov
cmp
aas
mov
sbb
push
std
and
push
sub
and
sbb
sbb
js
shl
mov
xchg
loope
cmp
call
icebp
cmpsl
xchg
dec
and
gs
iret
cmpl
loopne
mov
out
adc
push
popa
xchg
outsl
movsl
rcl
xor
or
dec
cmp
mov
mull
adc
xchg
mov
ret
sbb
lock
jmp
mov
sahf
rclb
push
add
das
jno
sbb
jmp
ja
imul
xor
pop
roll
popl
insl
mov
cs
bound
rol
adc
int
fcompl
cli
imul
cmpsb
popa
cld
dec
pop
and
mov
ljmp
adc
xor
nop
int3
lcall
test
push
mov
repz
arpl
xor
dec
popa
mov
jns
push
dec
sub
pop
xchg
and
xchg
fxtract
hlt
jno
adcb
mov
cli
movsl
add
xchg
jnp
xchg
sub
dec
push
and
mov
mov
xchg
mov
sbb
faddp
pop
mov
icebp
fwait
xor
das
fnstcw
push
into
add
dec
and
pcmpgtb
fldenv
sub
lds
sub
std
jns
or
jno
enter
cmc
sbb
cli
sub
pop
insb
xchg
push
sti
test
adc
jmp
mov
test
mov
mov
popf
jo
test
dec
insl
pop
shlb
ret
loop
repz
mov
imul
jecxz
sti
jbe
mov
dec
cli
push
hlt
mov
pop
fisttpl
es
roll
jne
ret
popf
push
push
adc
cmp
sub
stc
cmpsb
cmp
jne
shrl
stos
bound
loope
cmpsb
test
jge
loop
jno
popf
icebp
add
sbb
or
cmp
dec
sub
popf
xlat
insb
adc
enter
add
mov
js
mov
mov
fiadds
dec
sar
int
mov
or
sbb
jle
mov
inc
push
data16
fstpl
in
and
cmp
xchg
ljmp
dec
call
add
sub
sbb
jge
mov
pushl
pop
shr
nop
adc
pop
stos
insb
aad
sub
imul
enter
fidivrs
add
jne
sbb
test
jb
xchg
jno
std
cwtl
or
mov
std
mov
ret
xor
cs
mov
loope
pop
bnd
mov
gs
jb
ja
jge
bound
jg
mov
mov
into
repnz
movsl
loop
sysenter
jp
lea
dec
mov
fs
mov
or
inc
push
lahf
aaa
out
push
testl
out
jnp
iret
loope
sub
iret
sbb
inc
pusha
shlb
out
call
inc
inc
xor
enter
addr16
pop
xchg
sbbb
add
jecxz
xchg
loope
aad
xorl
xor
mov
insl
lea
insb
aaa
or
imul
cmp
mov
movsl
push
or
add
notl
adc
das
sub
fldt
and
test
and
pop
or
xor
sbb
sub
push
jle
jl
imul
add
xchg
sbb
mov
cld
or
xor
shlb
xor
in
xchg
or
cltd
push
sub
aad
adc
lret
ret
repz
jmp
jecxz
sbb
inc
outsb
nop
std
push
test
fldenv
push
and
dec
inc
jecxz
std
into
int
lret
cld
pop
das
jmp
pop
dec
push
je
or
add
sub
push
pop
pop
jae
push
adc
jb
mov
jns
jp
and
sub
or
aas
repz
loop
or
enter
push
jnp
xchg
push
je
lahf
into
mov
xchg
xchg
sub
das
pop
popf
mov
xchg
add
js
out
cmpsb
adc
ljmp
push
test
jle
dec
push
jnp
xchg
aaa
cmp
adc
jae
shl
test
enter
in
mov
lea
pusha
xchg
or
lods
and
iret
gs
sahf
rclb
adc
fdivrs
cmp
inc
add
xor
stos
xchg
lds
mov
jb
je
inc
mov
test
aaa
fwait
or
out
push
jl
in
xchg
dec
shl
push
inc
notb
cmp
inc
shrb
mov
xchg
jl
xchg
in
jle
jmp
imul
mov
in
jno
les
mov
adc
push
pop
and
into
cmp
mov
push
in
sbb
xor
out
test
dec
iret
popf
mov
sbb
fistl
pop
icebp
xor
out
xor
add
push
into
mov
xlat
sahf
and
addb
sub
lea
cltd
push
jmp
xchg
inc
inc
in
das
pop
sub
cwtl
inc
sarb
sbb
leave
or
insl
dec
jo
es
bound
sub
arpl
in
xchg
scas
mov
xchg
mov
rclb
rdpmc
incb
outsb
dec
test
data16
or
jmp
fisubl
push
test
cmpsl
iret
or
inc
cmp
xor
imul
adcb
leave
sti
sti
cmp
and
test
cld
fdivrl
aad
sahf
lcall
test
cld
lahf
ja
adc
mov
inc
xchg
lea
aad
arpl
xchg
adc
lods
push
rcrl
sbb
icebp
cmp
add
inc
sbb
jnp
fcomip
fistpl
shlb
fisttpll
shl
xchg
cs
adc
adc
mov
movsb
out
cwtl
outsb
inc
mov
stc
adc
repz
loop
stc
shl
pop
in
pop
cmpsl
add
movsb
sbb
aad
xor
lock
repz
mov
xchg
inc
sahf
bswap
aam
pop
mov
sub
mov
out
cmp
mov
jecxz
outsl
fnstenv
add
pop
iret
xchg
jle
test
inc
pop
mov
adc
xchg
inc
aaa
mov
popa
movl
mov
call
sbb
dec
pop
jo
loop
ret
rorb
out
ret
pop
push
mov
mov
cmp
or
imul
sub
jecxz
xchg
fldt
rcr
int
std
out
test
stc
clc
movsb
mov
lret
cmp
es
div
movb
mov
cwtl
mov
jb
or
push
andl
mov
add
mov
cli
push
jae
mov
fs
mov
leave
inc
jns
repz
mov
in
jnp
lret
nop
cmp
add
dec
mov
adc
ficomps
nop
xchg
and
pop
gs
in
mov
xor
mov
cmc
push
in
xchg
xor
inc
sub
sub
aas
dec
mov
adc
movsb
shlb
in
clc
add
test
popf
xchg
cmp
cmpsb
dec
leave
es
in
mov
mov
icebp
xor
mov
cmp
dec
xor
lret
cmp
das
xchg
jp
popf
adc
sub
xchg
pusha
jecxz
pop
inc
lret
nop
out
fiadds
loope
stos
add
lods
rcrl
mov
out
orl
pop
sbb
js
jle
inc
icebp
sub
pop
mov
and
jno
inc
icebp
inc
cmpsb
decb
push
rcrb
test
pop
or
mov
stos
call
stc
push
test
enter
pop
lock
mov
pusha
movsb
out
mov
dec
rolb
xor
xor
cmc
gs
mov
je
pop
cmp
cwtl
loope
jl
mov
adc
ja
mov
sbb
fistl
xchg
sbb
adc
pushf
add
cmp
shll
pop
testb
cmpsb
pop
bnd
cli
je
out
cmpb
pusha
sahf
pop
ljmp
daa
lret
add
cwtl
push
lods
jp
jbe
cli
ret
int3
into
mov
out
arpl
jae
add
mov
mov
test
addr16
enter
xchg
and
jle
iret
xchg
fs
mov
and
mov
add
das
and
push
mov
xor
mov
rclb
fcomp
loopne
mov
xchg
scas
mov
out
imul
xor
push
add
xchg
mov
scas
sar
insl
insl
mov
xor
pop
leave
loop
jnp
sbb
jbe
mov
repnz
test
xchg
push
loope
jo
in
mov
adc
sbb
popa
mov
mov
or
pop
push
inc
lret
mov
fstp
jl
or
mov
shlb
sub
popf
fwait
dec
movsl
ret
inc
addb
cmc
popa
in
stc
cmp
push
int3
outsl
arpl
in
shrb
cmp
iret
ss
out
repz
pop
scas
mov
cmc
pop
pop
inc
mov
adc
and
popf
mov
pop
add
xchg
push
and
fwait
aad
sub
dec
xchg
sbb
xor
lock
push
iret
shrl
insl
mov
push
mov
xor
sbb
push
je
xor
push
pop
negb
nop
sar
sbbb
fmull
push
scas
cmp
mov
in
xor
mov
sbb
cmpsl
pop
or
jae
sbb
pop
push
and
inc
popf
jno
jge
dec
fists
mov
mov
mov
pop
pop
dec
sahf
and
sbb
repnz
inc
or
es
lock
mov
add
es
sub
cmp
dec
pop
pop
sbb
rol
arpl
push
daa
mov
mov
pop
inc
and
into
xor
pop
mov
lods
imul
jp
pop
dec
mov
leave
std
sbb
cmp
mov
fcmovu
mov
repnz
repnz
mov
sbb
enter
dec
mov
mov
leave
jbe
enter
dec
xchg
add
lcall
or
js
cs
dec
push
stos
or
or
pop
inc
pcmpeqd
xor
xchg
adc
pavgw
mov
stos
jecxz
cmpsl
loop
addr16
sti
stos
dec
call
xor
jno
movsb
hlt
aaa
cli
stc
aas
repnz
inc
insl
lock
sub
xlat
jne
shll
adc
xor
pusha
sete
sbb
xchg
stos
cmpsl
sbb
xchg
and
or
mov
jns
nop
in
or
sbb
lea
shrl
cs
shlb
pop
mov
sbb
jle
xchg
aad
push
sub
mov
mov
mov
xor
inc
pushf
jbe
in
inc
divl
mov
jno
mov
popf
loope
adc
jmp
ljmp
lds
lds
sahf
loop
cmp
iret
fldcw
dec
jl
cmp
call
jge
sbb
mov
inc
rorl
popf
cmp
and
cmovnp
push
cmp
xor
sbb
xchg
mov
out
lret
addr16
cmp
filds
movsl
clc
jns
and
hlt
rolb
gs
fwait
pushf
fsubl
rcll
mov
gs
lds
mov
adc
outsl
dec
xor
add
ret
inc
cld
fdivrp
mov
inc
jae
jb
ret
adc
gs
add
add
stos
frstor
sbb
hlt
pushf
mov
outsl
mov
push
dec
xchg
mov
leave
mov
aas
sub
pusha
sub
cwtl
insl
ret
sbb
add
push
push
rep
popl
mov
adc
push
mov
lds
push
cmp
lods
or
pop
push
push
movsl
aas
lcall
ds
fdivl
cs
xchg
movsl
test
xlat
push
add
test
push
sub
xor
ja
add
cmp
xchg
aas
cmp
fcmovnb
mov
lcall
pop
fstps
stc
stc
push
test
xchg
sti
pop
test
shrb
xchg
mov
cmp
out
fisubrs
add
scas
roll
inc
fdivrl
add
and
add
test
dec
out
pop
jp
icebp
pop
add
mov
mov
mov
dec
inc
lahf
inc
add
fildll
call
cmp
push
inc
jg
sub
sbb
cli
lahf
jecxz,pt
mov
cwtl
pop
sub
xchg
xchg
lods
das
hlt
shrl
xlat
and
bound
nop
pop
outsl
repz
mov
jecxz
loop
inc
push
idivb
test
je
pop
inc
pusha
pop
cmpsb
push
imulb
pop
int3
call
cli
sti
inc
xor
ljmp
mov
out
adc
inc
movsb
scas
xor
cmc
sahf
fidivs
int
dec
iret
and
mov
mov
out
cmp
ret
sbb
cmp
ret
cmp
scas
insl
out
in
xchg
imulb
and
les
or
mov
ffreep
mov
dec
std
push
adc
mov
jne
xor
cmpsl
aad
fs
loope
adc
mov
fwait
out
nop
stos
lahf
fdivl
inc
jl
fsubl
mov
test
scas
adc
movsl
and
inc
inc
mov
xor
push
sbb
sbb
out
sahf
shll
jmp
mov
mov
clc
repnz
mov
shrb
rolb
test
add
dec
xlat
inc
or
int3
lahf
enter
pop
popa
xor
jne
ret
push
mov
lods
movsl
imul
push
enter
cmp
fisttpl
mov
mov
inc
cmpsb
rcll
xchg
pop
mov
clc
insb
adc
dec
xchg
jecxz
hlt
idivb
insl
repnz
add
add
loopne
inc
testb
push
dec
or
jae
cmp
pop
sub
add
movsl
lahf
dec
andl
dec
clc
mov
shl
inc
dec
xlat
test
inc
jl
pop
rorl
std
scas
fisubs
sbb
cs
dec
leave
jecxz
lret
fwait
jg
icebp
push
pop
inc
add
aam
xchg
popa
mov
aam
inc
pop
aam
adc
push
scas
mov
lock
repz
xchg
arpl
mov
push
shrl
pop
mov
cmp
mov
lret
cmc
ret
outsl
pusha
gs
add
push
repnz
lods
fucomp
aam
fwait
pop
rorb
fistl
cmp
and
cli
sub
ja
cmp
ja
fmull
sub
push
stos
enter
cltd
dec
cmp
stos
adc
mov
imul
mov
xor
mov
xor
add
stos
movsb
pop
ljmp
or
loopne
push
popa
adc
fists
fimuls
mov
loop
mov
mov
gs
mov
sub
loopne
lods
mov
add
imul
mov
mov
rorl
jbe
cwtl
mov
cld
pusha
push
pop
cmpsl
mov
subl
into
or
mov
mov
data16
xor
bound
pushf
xchg
testb
cmc
fimull
add
jge
fmul
pusha
addr16
scas
push
or
frstor
mov
loope
push
jns
sub
leave
xor
mov
daa
push
clc
xchg
int3
popa
adc
jge
mov
rdmsr
pop
ds
push
jbe
push
shlb
rcrl
mov
cmpsb
cwtl
push
cmp
scas
es
push
ja
mov
hlt
nop
movsl
mov
stos
or
push
mov
inc
rolb
mov
jecxz
loopne
test
ss
or
lock
ds
and
mov
pop
pop
dec
icebp
aad
jecxz
inc
or
shrl
in
pop
lods
mov
pop
ficompl
dec
cmpsl
mov
fildll
imulb
rorb
add
outsl
hlt
inc
cmpsl
mov
and
rorb
ljmp
mov
fs
push
xchg
test
ficoms
mov
dec
lock
enter
decl
adc
xchg
jge
mov
outsl
push
mov
data16
in
fld
pop
pop
mov
or
mov
or
test
mov
dec
cmpl
push
mov
jg
fcompl
inc
jg
sbb
loop
mov
mov
fmul
aas
pop
shl
in
sahf
and
sbb
jl
mov
test
std
or
dec
jp
xchg
pop
addb
jnp
pop
stos
xor
push
sarl
repz
pushf
jg
das
aad
addr16
xlat
je
sub
pop
in
ss
dec
and
fcmove
out
jp
imul
jecxz
orl
int
sbb
sub
cwtl
insl
inc
jno
clc
mov
out
mov
mov
jo
pop
lret
push
sbb
jb
lret
aas
scas
mov
mov
xchg
jle
inc
testl
cmpsb
xor
adc
sti
adc
out
addr16
scas
shll
stc
scas
pusha
out
sarb
jp
test
push
rcrl
inc
jle
testl
or
scas
inc
movsl
nop
aad
cmp
ds
mov
movsl
or
in
aad
stc
push
or
mov
adc
inc
ffree
xor
or
mov
cld
jb
sbb
fs
jecxz
popf
jo
push
lods
cmpsl
mov
jb
imul
jecxz
fsubs
xor
cmp
mov
sahf
push
xorb
sbb
lea
adc
push
push
outsl
mov
mov
test
push
faddp
scas
sbb
mov
sbb
outsb
das
jge
mov
std
inc
in
stos
mov
les
in
mulb
ds
inc
cmpsl
daa
aad
lret
cld
mov
jno
loop
and
std
mov
imulb
andl
or
in
std
sub
fadd
pop
xchg
mov
sub
mov
pusha
mov
or
in
fidivl
scas
jnp
jns
int
fistps
in
add
loop
stc
movsb
inc
xor
stos
std
leave
jmp
aad
sbb
mov
aad
push
shlb
subl
cltd
mov
jp
jg
int3
ljmp
add
in
nop
mov
cmp
mov
incb
arpl
inc
call
loopne
or
push
mov
mov
leave
gs
cmpsb
add
mov
outsb
daa
movsb
enter
fstps
aas
pop
jmp
pop
sub
pop
xor
mov
ret
or
ret
inc
mov
jle
mov
out
sbb
out
test
and
fildll
and
sahf
and
dec
fildll
pop
dec
les
xchg
pop
jo
mov
sbbl
iret
xor
xor
adc
insb
and
or
and
std
ja
jmp
xchg
jecxz
fcompl
push
ffree
and
sbb
cmp
in
sbb
jnp
inc
jecxz
add
mov
cmc
xchg
mov
ljmp
mov
ror
bnd
and
inc
push
or
fsub
adc
jno
or
arpl
repz
dec
or
mov
mov
popf
jle
les
iret
test
arpl
jecxz
jnp
arpl
jo
sbb
lcall
pop
call
dec
aaa
mov
add
jae
xchg
decb
shll
js
xor
cld
sub
mov
roll
cmpsl
test
icebp
into
stos
pushf
cmp
add
je
sahf
jp
xchg
insb
loope
cmp
ds
ret
mov
inc
xchg
xor
lock
add
jbe
out
fptan
cmpsb
mov
lret
dec
fs
jp
push
pushf
mov
push
fwait
call
shll
push
std
mov
xchg
cmp
xor
outsb
xchg
mov
pushf
out
adc
fsubl
cmc
pushf
pop
test
mov
and
or
in
rcrl
xchg
pop
jg
mov
stc
loope
lahf
popa
mov
cli
and
insb
xchg
ja
es
nop
mov
in
es
loope
push
int
pushl
ss
loopne
inc
adcl
dec
pusha
or
leave
push
adc
fs
sbb
pushf
cmp
mov
fadds
js
out
arpl
jl
call
fiaddl
push
push
jle
dec
xchg
nop
test
sub
in
stos
and
insb
fsubrl
push
adc
cltd
loopne
push
sub
add
pop
push
ja
inc
mov
fwait
test
pop
insl
xchg
inc
or
das
pop
mov
test
mov
jp
mov
imulb
fsubrl
cmp
popf
xchg
movsl
mov
mov
push
lahf
mov
lods
dec
es
xchg
mov
js
das
jge
jle
cld
sti
and
cli
cmpb
inc
sub
mov
jg
pushf
pand
mov
mov
data16
sti
shlb
stos
loop
sbb
mov
xchg
mov
jo
cmpsl
or
xchg
lock
lret
lahf
mov
cmp
pop
xor
adc
adc
push
mov
fiaddl
enter
lock
xor
mov
stos
stos
inc
mov
mov
lods
addl
mov
dec
mov
add
sarb
mov
mov
les
add
mov
outsl
sahf
fs
mov
fucomi
sub
xchg
fs
push
lods
std
sti
inc
inc
dec
outsb
add
sbb
mov
inc
mov
cmpsb
out
mov
test
jge
xchg
sub
dec
out
movsl
test
pop
lea
stos
xchg
mov
push
sub
inc
push
psrad
stos
xor
test
xchg
inc
and
popa
xchg
xor
jg
mov
dec
xchg
sahf
in
repnz
jl
pop
adc
add
push
inc
fbld
aaa
add
mov
popf
enter
mov
adc
dec
cmc
xor
xchg
data16
sbbb
add
int3
sub
xchg
jae
pushf
sub
dec
adcl
sbb
dec
cmp
ljmp
mov
lods
lahf
sub
test
repnz
mov
cld
jg
mov
sub
sbb
loop
loop
in
add
mov
jl
jb
cli
cmpsl
imul
in
mov
insb
lds
aaa
sbb
out
ret
test
ja
out
add
out
pop
loop
jl
inc
mov
data16
sbb
pusha
fisttpl
insb
into
push
icebp
mov
cltd
add
clc
dec
jmp
testl
cwtl
dec
add
adc
push
fistpll
xchg
lods
ret
sub
dec
daa
icebp
push
and
aas
ds
xor
xor
pop
pop
pop
push
push
push
and
pop
shll
jp
dec
jl
js
add
shrb
pushf
mov
pop
sarl
add
xor
sub
lds
sub
imul
and
push
mov
xor
pop
lahf
push
ljmp
pop
sarb
aaa
testl
pop
repz
jo
inc
ljmp
mov
push
inc
xor
loop
out
fiaddl
xchg
xchg
lock
push
mov
fcomps
push
movsb
cmpsb
inc
mov
aam
movsb
std
cmc
aas
test
popf
jno
dec
je
mov
std
dec
mov
pop
xchg
push
sub
sub
xor
out
cmp
xor
mov
sbb
cwtl
jns
aaa
sbb
mov
jle
xor
fcmovu
imul
cltd
inc
inc
int3
mov
xchg
cmp
cmp
xchg
mov
addr16
xor
jb
es
addr16
mov
cmp
movsl
and
inc
iret
nop
out
out
lods
daa
int
lds
push
bnd
mov
scas
pushf
inc
out
test
mov
lods
push
xlat
pop
xchg
ss
push
sti
or
push
or
xor
imul
scas
sbb
and
sbb
push
xor
and
mov
scas
icebp
inc
cmp
mov
sub
jge
mov
mov
out
daa
mov
pop
fldt
out
cmpsb
in
jne
pop
aam
test
icebp
push
lock
arpl
rcrl
xor
pop
das
sub
push
mov
inc
mov
es
insb
jg
pop
jb
loope
scas
in
incl
adc
fbld
test
push
cwtl
mov
xchg
mov
push
inc
in
pop
sub
cmc
sub
gs
fwait
cmpsl
push
pushl
fidivl
jmp
jae
cmpb
js
stos
xor
je
push
lods
xor
pop
push
imul
pop
or
mov
es
stc
sub
push
insl
mov
adc
scas
pushf
scas
gs
xchg
inc
stc
scas
and
sbbl
out
inc
jecxz
adc
out
push
scas
cmpsl
outsl
lret
xchg
push
inc
in
mov
adc
mov
int3
add
mov
sti
cmp
mov
mov
lds
pop
das
inc
enter
ror
and
sbbb
or
xchg
cs
adc
lret
popf
jo
lcall
data16
cmp
in
mov
or
mov
fwait
or
jo
xchg
popw
sub
cmp
ds
push
jns
pop
sbb
cmc
mov
add
xor
dec
add
lds
cmp
sbb
bound
dec
repnz
ds
sub
repz
xor
loopne
pop
pop
std
repz
js
out
inc
mov
or
mov
jle
insl
lcall
roll
jmp
out
and
mov
lret
mov
jo
lcall
sub
shlb
sbb
pop
mov
es
add
popf
jnp
pop
mov
cltd
mov
push
sub
mov
fistpll
or
mov
pop
outsb
add
xchg
sti
push
xchg
push
out
into
mov
jbe
insl
pop
adcl
cmpsb
mov
cmp
cmpsl
mov
add
push
je
pop
stos
adc
imul
pop
xchg
fucomip
insl
stos
dec
add
pop
jnp
not
iret
loop
xchg
dec
popa
pop
add
pop
jecxz
jmp
adc
aad
enter
sbb
push
mov
lds
push
and
les
dec
dec
sbb
adc
add
std
cmpsl
stos
test
rcrl
sub
jnp
cmp
cmp
xchg
aas
inc
pushf
xchg
imul
sub
jae
js
je
cltd
xor
inc
inc
push
mov
mov
pop
cmp
pop
mov
sbb
mov
bound
mov
outsl
sbb
xchg
mov
xchg
cmp
lea
stc
and
iret
sbb
mov
push
cmp
dec
ja
xor
or
jp
int3
mov
clc
jg
and
out
btc
out
jae
mov
push
lock
jl
pop
inc
push
ljmp
and
mov
pminsw
fs
push
sbb
pop
out
imul
and
sub
push
imul
mov
add
mov
ficomps
imul
jle
mov
mov
adcl
add
rolb
add
scas
js
mov
jbe
stos
fwait
push
cmp
repz
dec
call
das
cmp
add
test
popf
jl
in
dec
cmp
xor
es
out
leave
jae
out
mov
lods
mov
fcmovnb
scas
fisttpll
sbb
dec
lock
pop
gs
xor
cli
xlat
shl
sti
loop
xchg
and
cmp
or
leave
fcompl
xchg
jne
movsl
loop
jmp
jge
cmp
dec
dec
xlat
aaa
cmp
pushf
addr16
sub
fcomps
ja
inc
add
sti
fstpt
cmp
push
sub
sahf
jne
push
jl
std
aas
inc
xchg
test
rclb
jns
push
xchg
bnd
adc
pushl
ljmp
sub
push
test
nop
cmp
mov
cmp
outsl
xchg
cmpl
jge
fmul
mov
addb
xor
out
inc
cmp
cld
jecxz
mov
insl
adc
clc
xchg
hlt
inc
sub
sub
leave
into
mov
popf
xor
pop
lods
hlt
dec
addr16
xchg
int
jecxz
mov
in
and
jmp
jge
divb
dec
push
inc
cli
xor
arpl
ret
cmp
fsubrs
scas
mov
minps
insb
repnz
popf
cmp
push
out
mov
or
xor
int
imul
pushf
jle
mov
xchg
pop
cmpsb
pop
fmull
rcrl
fisubl
bound
shll
aaa
outsb
and
push
dec
lcall
mov
add
movsl
adc
sbb
je
or
movsb
xor
jae
jo
mov
jle
in
out
add
and
push
push
xchg
xchg
pop
das
cli
add
sbb
imul
push
jecxz
jmp
ficomps
sub
cwtl
jae
sbb
lret
sbb
sarl
mov
in
inc
lret
pop
js
sbb
mov
lret
cld
lods
or
sub
movsl
xlat
sub
lret
mov
jg
testb
sub
dec
jo
cmpsb
mov
push
pop
pop
sbb
jae
sbb
mov
mov
xchg
data16
ret
cmp
push
adc
aad
dec
lahf
addps
lret
mov
sbb
xor
xlat
jae
ds
sub
fisubs
fcompl
jge
daa
ja
rcrb
add
nop
mov
dec
outsb
test
popf
jge
xchg
sub
or
sub
cmp
fdivr
cmpsb
add
movsl
ljmp
cmp
fdivrs
mov
fwait
test
add
mov
fisttpll
iret
pop
adc
sarl
das
cwtl
scas
pop
sub
call
mov
daa
pop
and
push
aam
cmp
scas
xlat
adc
mov
insl
inc
and
stos
mov
add
push
dec
add
xchg
jmp
mov
push
mov
int
cmp
or
adc
icebp
push
adc
dec
rorb
pop
in
lds
sbb
popa
cli
jae
pop
sub
push
jns
push
mov
push
dec
xchg
xchg
jle
movsb
xor
dec
gs
rolb
sbb
sub
int
jbe
xchg
js
inc
rorb
stos
popa
mov
outsb
hlt
fidivl
jae
add
cltd
pusha
jecxz
mov
icebp
sbb
test
and
and
stos
xor
mov
in
ficompl
pop
xchg
cmp
test
and
pop
cmpsb
cmp
pop
and
std
add
dec
insl
mov
cmpsl
stos
add
dec
popl
lret
push
mov
push
add
pop
rcrb
xor
xchg
stos
andl
movsb
jl
scas
aas
nop
lock
je
mov
test
sbb
pop
mov
and
inc
add
pop
jle
pop
addr16
sub
sbb
sub
lret
pop
out
jmp
mov
into
cmpsb
insb
and
jecxz
jnp
inc
movsl
notb
mov
mov
test
jg
loop
insb
xchg
cmc
lret
push
stos
add
inc
jl
sahf
xor
add
in
test
popf
xchg
movsb
xor
cmpsl
inc
in
loopne
fbstp
adc
and
cmpsl
loope
in
add
enter
pop
pop
mov
xchg
sub
jns
sahf
pop
or
sbbb
outsl
or
lods
lods
jmp
add
or
fbld
nop
mov
cltd
fwait
push
sbb
or
inc
ss
pop
lea
fbstp
xchg
popf
adc
sbb
jb
loope
sarl
aas
nop
jbe
add
stc
imul
arpl
fs
and
aam
mov
stos
dec
ljmp
cmpl
or
push
popa
jns
dec
or
les
and
jge
ljmp
mov
lret
ss
fbstp
inc
sub
xorl
ja
test
imul
push
rol
sub
push
fwait
xchg
fistl
jno
call
adc
mov
cwtl
xchg
ficoml
rorb
popf
lock
push
lcall
fildl
push
stos
xor
shrl
out
mov
jmp
call
pushf
decb
shlb
int
xorl
mov
mov
outsl
rorb
lret
xchg
push
test
aad
iret
imul
mov
add
mov
mov
adc
mov
jne
repz
cwtl
inc
fnstsw
or
mov
jmp
leave
jno
sbbl
sub
cld
lcall
loopne
xor
mov
dec
mov
arpl
test
je
adc
scas
neg
adc
repnz
mov
dec
mov
cwtl
dec
imul
dec
lds
dec
mov
je
daa
jecxz
sub
ret
cmp
movsb
cld
repz
sarl
sahf
sub
and
cltd
data16
repnz
push
pop
mov
dec
je
push
mov
jbe
and
in
jmp
xor
push
xor
sahf
rcrb
jne
std
mov
mov
dec
je
pushl
xchg
cmp
or
xchg
xor
das
sbb
loop
outsb
mov
dec
aas
cwtl
bound
push
mov
call
mov
dec
xor
scas
das
jne
ds
sbb
leave
into
repnz
mov
jne
inc
nop
sbb
stos
and
ret
mov
divb
lcall
pop
or
loopne
add
push
icebp
mov
jne
outsl
sub
cmp
push
je
mov
lea
xchg
out
fsubp
into
xchg
in
sub
cmp
xchg
cltd
in
push
jg
ret
ljmp
mov
cmpsl
and
test
pop
ljmp
fnstcw
cmpl
sti
into
sub
insb
into
in
dec
notl
lock
fld1
mov
cli
insb
mov
stc
and
pop
cmp
mov
jns
lds
sbb
lods
mov
loope
lods
mov
sbb
popf
push
adc
test
add
sub
sti
jno
in
or
inc
mov
daa
sub
cli
in
lcall
mov
outsb
incb
out
or
lret
cwtl
jb
iret
mov
call
mov
mov
mov
nop
or
movsb
outsl
and
or
sbb
loope
adc
add
mov
movsb
add
xchg
popa
sbb
mov
inc
dec
xchg
inc
imul
push
jg
decl
mov
jne
lret
mov
xchg
lret
cld
xchg
cmpsl
clc
xchg
fdivrp
cmp
imulb
mov
mov
lret
jns
or
shr
and
mov
adc
push
out
bnd
inc
ss
out
cmp
adc
in
insb
xor
pop
xchg
jno
outsl
jle
fwait
adc
mov
daa
scas
jne
cltd
cmp
or
push
push
xchg
addb
ret
push
outsb
push
dec
mov
and
push
jnp
test
add
mov
popa
jg
add
cmp
cmp
and
mov
es
shll
movsl
nop
inc
inc
or
out
mov
pop
jo
es
sub
cmc
sub
xchg
fisubrs
adc
push
jb
mov
loope
push
jg
push
and
jnp
inc
fidivl
idiv
enter
push
xorb
inc
stos
mov
lret
or
and
decb
inc
add
mov
outsl
ficoml
cmp
cmc
ds
fimull
pop
insl
mov
inc
rcll
int
xchg
into
pushf
or
dec
out
xchg
lods
aam
mov
pop
pop
in
loopne
jo
pop
add
mov
insb
cld
xchg
popa
push
inc
push
repz
loope
aas
adc
mov
loopne
adc
adc
cmpsb
or
shrl
xor
idivb
add
loop
push
xor
jns
int3
xor
fwait
add
into
mov
sahf
iret
push
adc
and
cmp
or
testb
call
repz
loope
xchg
dec
icebp
jo
je
jo
fwait
xor
lret
xor
popf
ds
sbb
aam
sub
add
sbb
pop
xor
mov
scas
mov
sub
lret
xlat
mov
and
mov
test
inc
adc
popf
aad
cmp
out
adc
push
repz
adc
xor
inc
loop
ffreep
inc
add
add
mov
test
mov
fcoml
dec
and
mov
lock
enter
lcall
test
fadds
push
mov
jmp
ja
xlat
jae
pop
mov
jp
inc
cmp
imul
push
pop
adc
xchg
mov
jge
push
outsl
mov
sbbl
sbb
add
or
stc
cmp
adc
mov
lcall
fidivrl
lret
int
test
pushf
lods
xor
call
sub
adc
fcoms
dec
lcall
cmp
pop
cmpsb
outsb
push
add
aad
pushf
movsb
lret
aas
xlat
pop
mov
orl
cmp
lret
outsl
inc
mov
adc
dec
sub
or
pop
and
out
loope
mov
and
jecxz
xchg
fidivrs
ficoml
mov
inc
adc
jg
les
lahf
jno
xchg
subl
sbb
fstpt
xorl
out
cwtl
mov
jns
or
jno
mov
bound
push
pop
shll
dec
mov
dec
data16
jo
mov
mov
mulb
out
cmp
repnz
in
shrl
pop
sub
pop
out
xor
mov
or
and
dec
mov
aaa
iret
sahf
dec
cmp
pop
andb
adc
mov
pushf
inc
jns
mov
xor
sarl
scas
aas
fiadds
lds
sbb
xor
xor
cmp
cs
repz
or
mov
pop
add
pop
dec
out
leave
mov
xchg
xchg
push
nop
jns
jl
mov
and
sahf
test
jb
sub
mov
xchg
sbb
mov
imul
popf
pop
push
sub
xchg
or
sti
jg
iret
enter
xor
aaa
add
imul
cld
dec
insl
cltd
jo
aad
sbb
jle
pop
lods
cmp
cmp
push
dec
mov
fsub
out
push
out
mov
fdivl
push
or
xor
inc
loopne
cs
inc
adc
fs
push
add
sbb
adc
jb
jb
mov
mov
mov
fstps
test
push
push
out
in
or
adc
mov
fwait
cmp
ret
shrb
in
cs
int
scas
pop
imul
jle
mov
jg
pop
jmp
int
and
mov
adc
or
imul
add
mov
push
jno
jbe
lret
sbb
nop
push
adc
adc
mov
xor
adc
push
push
add
mov
cmc
sar
int
hlt
and
push
fwait
jnp
jmp
out
mov
aaa
jno
out
cld
pop
gs
std
add
movsl
push
popa
std
out
lds
popf
pusha
sbb
pop
add
jl
and
xchg
pop
pop
enter
sub
add
fcmovne
push
xchg
jo
dec
roll
cmp
dec
frstor
and
inc
dec
pop
fistl
lock
test
out
or
cmc
sbbl
push
xchg
inc
popf
shrl
insb
mov
jg
fidivrs
or
repz
lock
lds
pushl
sub
inc
lds
inc
or
jp
nopl
pop
push
jmp
cwtl
cmpsl
aaa
sahf
mov
jl
adc
popf
lret
frstor
push
in
leave
adc
pop
int
push
stos
mov
popa
idiv
lock
and
sbb
inc
loope
dec
es
pushf
jl
fmul
addr16
popf
outsb
pop
dec
es
pop
popa
mov
pop
incb
xor
xchg
fisubl
lods
inc
adc
adc
xchg
jge
push
add
hlt
adc
loope
adc
mov
xchg
lock
jae
adc
dec
stc
dec
insl
sbb
clc
dec
xchg
daa
jmp
jne
je
fdivr
sub
push
aam
sbb
out
lods
add
sub
fsubrs
mov
pop
mov
jnp
push
aam
aaa
dec
and
xchg
pushf
movsl
mov
xlat
aas
or
shrl
fisttpll
aas
mov
or
into
mov
sub
and
test
sbb
inc
xor
jmp
shlb
into
fmull
iret
mov
mov
mov
dec
imul
es
xor
add
xor
pop
jecxz
daa
mov
ljmp
loopne
arpl
mov
in
orl
dec
add
jge
xor
ljmp
das
mov
xchg
popf
sub
cli
into
push
dec
arpl
cmpsb
rcrl
and
aas
data16
int3
shrl
cmp
jb
mov
pop
jecxz
ret
outsl
out
xchg
or
sub
out
and
mov
push
mov
lds
fdivrs
push
adc
pop
addr16
out
fwait
inc
sbb
or
mov
cmpsl
in
lret
sub
addr16
mov
sbb
insb
pop
lds
add
lods
cmp
push
dec
xor
inc
nop
gs
mov
je
mov
dec
dec
push
lahf
dec
push
lds
jp
sub
and
sub
xchg
adc
jge
sbb
mov
fcmovu
or
and
cmp
and
mov
xchg
leave
lods
aad
lds
push
popf
push
stos
add
sbb
in
jno
in
popa
jg
stc
adc
jmp
leave
and
rcr
pop
sub
shlb
outsl
repz
sub
ret
mov
jns
mov
pop
mov
enter
jns
adc
ljmp
outsl
jl
push
leave
bound
adcb
idiv
scas
orl
or
dec
imul
pop
xlat
test
fdivr
xor
push
jb
stc
xchg
bound
iret
mov
stos
fmulp
pop
push
lock
les
leave
mov
shrl
dec
cmpsb
movsl
icebp
in
je
jno
sbb
inc
pop
test
add
jg
dec
pop
inc
aaa
pop
int3
arpl
mov
call
pop
sbb
sbb
add
in
loop
fwait
adc
leave
ja,pt
fiadds
cmpsl
xchg
pushf
and
mov
daa
or
cmpsb
pop
es
cmpl
aas
lock
mov
rcrb
inc
lret
mov
pop
mov
push
insb
pop
das
sbb
cwtl
pop
xchg
data16
and
aad
mov
loop
fcoml
ret
mov
jg
lret
add
je
and
mov
lret
adc
push
add
imul
fwait
xchg
add
pop
sub
pop
arpl
int
mov
and
mov
and
shl
push
mov
lcall
and
adc
adc
push
adc
ret
jo
jge
ficoml
cmp
dec
pop
repnz
lret
pop
test
lock
popf
and
cmp
fiadds
mov
es
push
rol
fisttpll
push
les
popa
mov
push
gs
jns
jle
daa
gs
mov
xchg
movsb
arpl
popf
xchg
std
push
lods
lods
pop
pop
test
ficomps
sub
fisttps
clc
xchg
sbb
je
or
out
push
int
imul
sahf
stos
addr16
shrl
mov
mov
sub
mov
dec
pop
stc
xchg
sbb
dec
test
pop
cmp
pop
ret
add
or
add
mov
cmovne
fistps
clc
negb
aaa
sbb
xchg
jns
xchg
jg
fldenv
add
ds
int
push
xchg
push
xor
leave
cld
xor
in
shll
jecxz
xor
fucomip
add
xor
xchg
andl
pop
xchg
test
jp
pusha
push
mov
dec
pop
jecxz
push
cwtl
jl
lods
loop
jns
sbb
out
pop
ficoml
mov
outsl
push
pop
jge
add
xchg
fists
dec
push
push
sbb
mov
jbe
adc
std
rorb
or
xor
adcl
shrb
xchg
bound
inc
sub
data16
ficompl
push
and
ficomps
dec
push
lds
jecxz
push
dec
inc
sbb
fld1
xlat
xor
fists
lods
push
lcall
cmp
add
cwtl
and
push
std
iret
in
push
lods
sub
in
sub
fs
repz
call
ret
adc
adc
data16
jle
add
loop
dec
or
outsb
dec
imul
xor
mov
ljmp
pop
push
hlt
mov
jnp
ds
pop
lret
jle
pop
scas
arpl
cltd
mov
mov
adc
and
sub
lahf
aam
inc
sarb
mov
xchg
mov
lock
pop
mov
dec
mov
and
outsl
ret
lret
clc
xchg
mov
mov
cmp
adcb
fwait
dec
jmp
ja
jb
xchg
lock
test
popa
xchg
mov
dec
ljmp
xchg
je
ss
xchg
mov
inc
les
out
fsubrp
test
lods
xor
cmp
mov
repnz
inc
mov
sub
xlat
lods
cmpsb
jne
inc
sub
fs
imul
movsb
leave
int
adc
outsb
cmpsl
orl
dec
sub
sub
pop
inc
int
sub
cmpsb
cwtl
lods
jae
in
pop
int
dec
or
les
pop
mov
xor
sbb
js
aas
add
dec
or
xor
in
xchg
sahf
sub
scas
movsl
aam
jnp
mov
ss
dec
xchg
jle
sub
and
test
cmpsl
cmc
int
mov
inc
mov
xor
mov
idivl
xor
add
lock
rorl
outsb
sbb
xor
sti
repnz
int
mov
mov
mov
pop
cmc
sahf
mov
pop
das
in
dec
jno
xchg
shl
fcompl
xchg
sub
out
jnp
or
mov
xor
cmc
dec
sub
shrb
jb
je
inc
rolb
dec
inc
stos
leave
clc
dec
mov
orb
mov
repnz
cmp
outsl
iret
cli
cmp
or
add
mov
out
or
lock
in
insb
pop
addr16
push
test
mov
fidivl
mov
add
jle
xchg
rorb
cmp
lods
dec
vandnps
sub
ja
test
inc
xchg
push
jge
inc
adcl
jb
cli
pop
mov
inc
imul
shll
sub
xchg
das
pusha
rcrl
cmpsb
lds
imul
push
and
lods
and
shlb
jl
xchg
int
mov
mov
xor
xchg
xchg
mov
imul
inc
mov
sarb
mov
cwtl
jno
or
jp
icebp
hlt
sbb
sub
enter
imull
cwtl
lcall
sti
hlt
cmp
cmc
andb
mov
cmc
inc
xchg
and
or
ret
out
cld
outsb
fwait
adc
add
lcall
insl
icebp
mov
sub
data16
cmp
fmuls
mov
pop
subl
add
sti
mov
mov
adc
fdivr
and
call
test
jge
mov
push
fimull
ds
push
sbb
mov
dec
mov
inc
mov
xchg
stc
mov
inc
fcom
test
aam
lcall
adc
int3
push
shll
imul
and
repz
push
ficompl
and
sbb
xor
outsl
sbb
or
xor
mov
ljmp
mov
and
insb
push
mov
stc
jge
sahf
std
sub
push
xchg
mov
fnstenv
int
cltd
jmp
xor
fmul
data16
lret
sbbb
mov
dec
call
adc
lods
mov
pushf
mov
jno
push
rolb
push
mov
xor
es
push
das
shl
lds
push
scas
sub
sbb
mov
fisubrs
insl
addb
movsl
daa
jp
or
cli
jmp
fimull
sub
dec
in
inc
pop
sub
roll
sbb
add
popl
push
and
loopne
mov
sbb
lcall
jp
dec
mov
out
dec
mov
or
in
pop
push
mov
mov
pop
shlb
call
xchg
jne
mov
fisttpl
xchg
jae
das
mov
push
outsl
dec
xor
cmp
jge
fildll
mov
jle
ja
xor
jne
cli
dec
xchg
ficompl
sbb
popf
mov
je
adc
lret
add
mov
lret
movsb
xor
das
cmpb
pop
ljmp
mov
jno
lret
push
ss
cld
xchg
popf
lea
aam
push
inc
fwait
rcll
pop
push
gs
mov
add
push
and
inc
pop
jl
arpl
xor
test
sub
sarl
aas
stos
lea
and
jno
int3
push
dec
sub
outsl
lcall
xchg
pop
cmp
mov
adc
lahf
cmc
mov
popa
int
js
xchg
ret
ret
pop
into
arpl
xchg
jae
lcall
sbb
jecxz
mov
cmpsb
adc
sbb
dec
xchg
mov
in
int3
ds
and
arpl
xor
faddl
xor
out
insl
dec
jnp
cltd
jns
in
add
lcall
inc
sub
ror
mov
push
insb
xchg
adc
repz
jmp
jno
mov
sub
sub
cld
adc
mov
jge
lds
jg
pop
push
and
shr
cld
mov
sahf
ss
cmpsb
jae
jmp
popf
out
jb
mov
sbb
jae
pop
push
adc
notl
test
fisubrs
add
cmp
pop
mov
jb
inc
imul
hlt
push
sbb
repz
fnstcw
orb
sub
cmp
adc
or
jg
pusha
inc
lret
adc
dec
shlb
adc
xchg
push
shll
lahf
mov
mov
dec
xchg
outsb
nop
pop
xchg
sub
sbb
arpl
lea
gs
cmpsb
ret
pop
fnstenv
cwtl
add
push
or
add
dec
pusha
rclb
cmc
push
dec
scas
stos
imul
stos
out
daa
lea
aad
xchg
and
lahf
xrelease
pop
das
add
dec
or
aad
inc
inc
lret
stos
cli
mov
cmp
fld
jge
push
adcb
xor
mov
push
xor
sub
in
ds
in
mov
inc
xchg
cltd
aam
mov
shlb
jge
test
bound
mov
into
shlb
into
popa
push
xor
lcall
test
gs
pop
push
or
push
sub
sbb
aaa
cmp
dec
les
mov
lret
ret
sti
out
inc
out
inc
arpl
cwtl
mov
ret
adc
cmp
iret
lret
inc
ret
int
popf
sti
dec
sbb
out
cmp
mov
ss
leave
or
jnp
cmc
addr16
cwtl
xchg
dec
addb
les
mov
and
lock
in
rorb
pop
pop
cmp
push
shlb
or
jg
jno
add
adc
and
pop
lds
sub
sbb
cmpsl
int3
mov
sbb
es
or
test
adc
es
pop
addb
cli
leave
sbb
test
pushf
dec
insb
dec
push
inc
int3
shrl
arpl
inc
mov
mov
fldcw
ja
rcll
push
dec
xchg
push
int3
pop
nop
test
lcall
pop
popf
sbb
adc
push
sbb
lock
and
lret
mov
dec
cmpsb
loope
mov
adc
ret
sbb
and
mov
fcomps
ds
inc
hlt
lret
std
inc
pop
cltd
out
cmp
push
into
sbb
jecxz
pusha
mov
push
xorb
inc
arpl
cmpsb
pop
jnp
xchg
xchg
aam
pop
push
stos
adc
pop
inc
sbb
cli
mov
dec
cli
ljmp
cmp
bound
pusha
leave
cmp
insb
dec
inc
inc
incl
jl
fcoml
xchg
dec
jo
nop
inc
adc
into
pop
jmp
or
lea
js
lcall
ds
dec
and
fsave
mov
adc
mov
js
and
cmp
push
bound
mov
test
lret
pop
int3
fiadds
cmp
xchg
mov
push
loopne
mov
pusha
push
inc
filds
mov
mov
sbb
in
xchg
jl
pop
imul
sahf
pop
xor
fwait
pushf
lods
lods
mov
inc
inc
xor
inc
repz
sbb
loope
jnp
mov
pop
adc
lahf
pop
cltd
rclb
frstor
cmpsl
or
fdivrs
sub
int3
jns
popw
and
jns
mov
pop
and
pop
and
jne
jmp
or
mov
out
cltd
in
mov
shr
adc
jp
sbb
call
mov
mov
mov
in
js
sub
nop
adc
pop
lret
and
inc
jne
movb
add
jg
and
jp
pop
mov
jb
loope
lahf
stos
je
out
and
pop
mov
rcrb
push
notl
ja
jns
jns
cmp
pop
jno
shlb
cmp
dec
rcrb
adc
loop
test
cmpsb
dec
icebp
lods
out
push
mov
and
aaa
mov
std
and
inc
sub
mov
shrb
jno
mov
and
mov
fistps
dec
cmpsl
scas
push
push
sahf
cmp
rorb
adc
mov
rcrb
add
cmp
movsl
push
add
sarl
and
jge
xchg
dec
and
ret
xor
cmp
and
lea
mov
inc
mov
xlat
jb
fs
or
ljmp
or
mov
sbb
adc
int3
inc
xor
movsl
mov
popa
inc
scas
pop
lods
xchg
rclb
out
add
pushf
sub
add
jne
lret
movsb
add
jns
jne
dec
mov
push
mov
fcompl
sbb
cmpsl
push
mov
outsb
ficomps
jae
cltd
aas
mov
ljmp
mulb
and
add
and
inc
insb
and
in
fsubrp
mov
mov
das
inc
adcl
popa
cmp
push
std
shlb
add
mov
pushf
and
pop
or
and
mov
leave
inc
cmp
fiadds
pop
inc
adc
insb
aad
lods
push
pop
mov
jnp
idivl
sbb
stos
jecxz
xchg
ss
daa
xorb
test
ficompl
iret
and
outsb
imul
aaa
pop
cmp
imul
leave
lret
lret
or
pop
movsl
imul
lods
xor
pop
mov
jno
push
mov
sbb
in
dec
cmp
xchg
int
xchg
mov
jg
outsl
data16
xor
and
jo
and
enter
popf
cmpb
shrb
and
in
push
inc
rorl
xor
mov
pop
es
jae
mov
int3
fwait
push
mov
in
movsl
mov
sarb
inc
mov
push
sub
inc
in
pop
lods
repnz
or
ds
daa
cmp
ja
fnstcw
lretw
and
loop
push
jb
fs
in
xor
mov
fcomp
jb
nop
xor
xor
adc
mov
movsl
push
pop
xor
xchg
xor
xor
xchg
repnz
pusha
mov
imul
daa
push
sub
or
mov
test
push
ret
mov
fstl
js
pop
or
lods
xor
adc
push
pop
mov
ret
jg
cld
lahf
push
mov
nop
test
pop
daa
cld
daa
dec
jmp
and
push
xchg
sbb
mov
jb
push
cmpb
and
out
or
rcrb
cltd
dec
fidivl
mov
aad
pmulhuw
xchg
aas
in
rorl
outsb
lea
jnp
das
push
adc
addr16
mov
aaa
mov
lock
ss
out
push
repnz
scas
out
xor
cmp
xchg
fldcw
test
and
sbb
cmpsb
and
xor
cmp
push
cmp
inc
add
stos
lret
aad
cli
mov
mov
or
push
movsl
xor
xlat
jmp
xor
repz
movsl
sbbl
inc
or
rol
repnz
lret
xchg
xor
add
in
test
and
fwait
xchg
dec
mov
inc
mov
mov
xchg
out
pop
dec
sbbb
pop
imul
popf
mov
sbb
mov
xchg
inc
pushf
lods
cli
jo
out
inc
cmpsl
push
lods
push
add
cmpb
mov
xor
shr
out
sbb
jg
sbb
iret
dec
mov
sbb
mov
rorb
pop
inc
loop
aad
ret
add
shl
push
bound
mov
push
testb
xchg
push
pop
adc
push
mov
pushf
mov
mov
test
xchg
or
pop
sbb
cmpsb
mov
movsl
cmp
or
mov
and
and
or
stos
jp
inc
cmpsb
scas
outsb
sub
and
cmp
mov
pop
mov
icebp
push
pop
loop
fistl
sbb
cmp
movsb
mov
adc
clc
mov
lret
clc
clc
sbb
das
push
cltd
ret
outsb
add
add
rolb
pop
cmp
cmpsl
out
cmp
xor
or
aaa
xchg
pop
pop
addl
xor
arpl
mov
jp
or
xchg
push
add
pop
adcb
lock
sub
mov
mov
movsl
push
les
mov
pop
loopne
jmp
jb
out
mov
pop
aas
jne
fs
stos
outsl
andl
or
add
mov
fldcw
jne
pop
scas
push
jns
ret
pop
cmpsb
inc
and
adc
lcall
push
jg
push
pushf
cmp
inc
push
xchg
pop
cld
adcl
jecxz
int3
rolb
aaa
lret
out
push
pushf
inc
inc
push
adc
insl
adc
fmull
add
xchg
sahf
add
push
rorl
sbb
fs
mov
sbb
std
lret
mov
nop
xor
pop
pop
ds
or
sbbb
daa
popa
test
adc
mov
sbb
call
lahf
int
stos
sbb
cli
or
pop
cltd
fisubrs
sbb
clc
pushf
movsl
andb
mov
cmp
push
fdivrs
xor
xlat
ja
jne
dec
pop
pop
push
ljmp
xor
xchg
dec
repz
repz
das
shrb
xor
jge
movsl
inc
nop
repnz
jg
lret
icebp
ficoms
jp
les
xchg
mov
push
adc
cli
fs
nop
push
shlb
dec
and
push
sub
pop
lahf
mov
add
imul
sub
cmpsb
addr16
lods
hlt
ds
pop
mov
arpl
outsl
sbb
fmull
outsl
mov
enter
les
ss
imul
xor
xchg
orl
mov
ret
pop
fucomi
mov
push
mov
jne
enter
out
fcoms
stos
aaa
or
dec
and
outsb
loope
cmpsb
cmp
data16
jecxz
hlt
or
cltd
mov
push
into
inc
mov
rep
into
adc
dec
jge
imul
lret
leave
inc
cmp
add
fsts
hlt
cld
out
mov
insl
mov
mov
or
xchg
jle
loopne
sahf
xchg
mov
shlb
hlt
cli
push
jmp
adc
loopne
subb
mov
stc
addr16
pop
fcomps
mov
daa
dec
subb
add
ret
mov
sub
call
lea
mov
stc
or
adc
cmp
lea
cmp
sub
imul
cmp
sub
sub
xor
lret
out
cmp
andb
sbb
jb
inc
hlt
inc
inc
xchg
and
pop
sbb
aaa
subb
lahf
fiaddl
sbb
mov
or
and
inc
lret
test
sub
movl
je
js
out
ds
mov
xchg
ficompl
add
cmc
ljmp
loope
sti
es
or
insw
xor
mov
fwait
jge
es
sbb
std
pand
pop
jno
pop
pusha
clts
nop
add
repnz
shll
dec
scas
pop
test
ja
inc
ficoml
lahf
repz
repz
xor
xchg
and
insb
sbb
in
fldt
lret
jmp
jg
cmp
loope
cmpsl
inc
pushf
mov
data16
or
ljmp
ds
cs
es
repnz
ss
push
mov
jmp
mov
pushf
jb
in
lahf
imul
and
dec
jge
out
popf
dec
into
jecxz
sti
fmull
fisubrl
bswap
or
aam
xchg
mov
xchg
sbb
cli
sbb
pop
mov
mov
mov
les
mov
adc
and
cs
adc
dec
dec
push
pop
mov
sbb
rorb
cs
dec
arpl
out
mov
xor
adc
adc
div
mov
into
hlt
jp
pop
xor
and
sub
fildll
or
faddl
mov
leave
and
fistpl
cltd
add
cmp
mov
adc
pop
in
stc
add
xchg
lods
mov
adc
cmp
pop
lcall
mov
mov
ret
lret
sbb
stos
stc
inc
push
loopne
arpl
dec
or
subl
mov
pop
pop
sar
in
sti
mov
cmpsb
jns
iret
xchg
or
icebp
mov
fs
sub
pop
pushf
scas
push
je
rep
icebp
xorl
ss
mov
sti
clc
mov
xchg
xchg
nop
pop
xchg
push
test
xor
sub
pop
mov
stos
rclb
inc
xlat
pop
add
pop
sahf
test
lahf
mov
enter
test
mov
pushf
into
sbb
loope
out
cmp
jge
xchg
push
int3
gs
and
and
jno
mov
jnp
fadds
xor
jnp,pn
cmp
xchg
out
mov
xlat
inc
jno
stos
cmp
jns
ror
pusha
dec
bound
not
xchg
pop
inc
push
mov
mov
adc
mov
je
out
je
mov
push
out
sub
adc
leave
cmp
ret
pop
mov
mov
inc
sbb
pop
int3
stc
pop
loope
sbb
inc
stc
jp
cmpsb
mov
fisttpll
cmp
sbb
in
adc
push
dec
lahf
out
xchg
les
pop
cwtl
pop
jo
xchg
xor
jmp
pushf
sahf
inc
dec
in
mov
repz
iret
adc
and
cmp
into
or
xchg
xchg
cs
inc
scas
lds
popf
mov
mov
cld
mov
jmp
jo
insl
or
mov
data16
cmp
sbb
sbb
mov
jbe
mov
lret
and
cmp
aam
cld
jge
movsl
adc
xor
shll
movsb
mov
mov
clc
mov
xlat
xor
push
and
scas
push
xor
ljmp
dec
iret
icebp
adc
jg
dec
or
rorl
aaa
sbb
adc
push
and
xchg
pop
rclb
pop
and
jae
imulb
out
imul
sbb
jb
imul
aas
pop
sbb
hlt
in
xchg
test
jle
jl
out
or
add
repnz
mov
sbb
dec
or
ss
adc
jne
sub
lcall
out
icebp
aaa
add
cltd
sub
movsb
test
into
ss
push
or
ljmp
out
in
sbb
or
cmp
jae
sub
sti
xchg
leave
rcrb
out
cmp
lods
movsb
shll
bt
mov
xor
and
movl
aaa
test
lahf
xchg
mov
ret
test
pop
stc
or
cmp
and
je
shll
mov
and
add
adc
fnstsw
pusha
cmp
sub
iret
sti
lahf
ja
inc
es
xchg
loop
mov
mov
mov
adc
stos
ljmp
push
lcall
jge
jb
pusha
gs
shl
fisttpl
jne
xor
fcomip
xor
add
sub
inc
test
stos
cli
sbb
jle
jle
imull
dec
xchg
jl
nop
pop
mov
xor
scas
xchg
inc
mov
inc
push
mov
cli
js
int3
xchg
pop
sarb
push
mov
jns
xchg
jmp
outsl
inc
subl
dec
lahf
icebp
jle
and
or
rol
push
aad
popf
xchg
mov
or
add
mov
inc
and
inc
addr16
or
pushf
outsb
pop
sub
loopne
repz
pxor
jo
pop
in
movsb
in
imul
hlt
pop
nop
mov
cmpsb
insl
xor
push
in
sub
shlb
push
add
cwtl
add
movsb
lods
xor
lea
outsl
out
and
mov
pushf
pop
and
jle
push
dec
adc
repz
or
lds
movsl
adc
aad
enter
imul
jmp
pop
pop
xor
add
push
sub
adc
fwait
mov
mov
cmc
push
mov
cmp
mov
pushl
sti
cmp
add
cmp
in
out
les
push
mov
repnz
adc
fadds
imul
pop
sbb
lock
xor
clc
jmp
or
cmp
daa
pop
lret
mov
add
cmpsl
popa
jmp
pop
dec
cmp
dec
sahf
cmp
adc
add
add
or
or
jle
shrl
insb
dec
add
adc
or
dec
push
call
sahf
frstor
cli
mov
and
sub
test
jmp
nop
dec
fxch
jp
cmc
or
and
icebp
stc
dec
or
sbb
jge
or
mov
pop
push
lods
out
mov
xor
cld
mov
push
pop
scas
xor
mov
mov
add
adc
testl
popa
mov
mov
mov
out
subl
cmc
push
mov
in
push
inc
xor
jge
sub
decb
cmp
push
or
rcr
add
sub
nop
mov
mov
fwait
jns
inc
dec
cmp
shl
push
sub
ret
push
adc
mov
sub
lods
aas
adc
pop
add
std
ret
ficomps
mov
mov
cmpsl
leave
sub
push
mov
dec
cmp
in
mov
leave
sbb
mov
pop
rcrl
pop
cltd
out
sub
jge
mov
in
sub
xchg
loop
adc
mov
in
inc
adc
pop
lods
data16
sbb
ret
sbb
cmp
dec
lret
inc
scas
cmp
jecxz
call
mov
pop
ja
dec
mov
jl
mov
mov
sti
sub
stos
lds
inc
mulb
and
in
sarb
clc
pop
and
cmp
enter
call
scas
dec
lret
mov
cld
add
fcmovb
jmp
pop
fwait
cmp
pop
sbb
xchg
add
out
dec
adc
xor
scas
popl
mov
and
pop
pop
andl
add
jle
pop
and
mov
mov
pushf
pop
orps
rcr
push
out
ja
push
repz
push
push
aas
not
jmp
gs
push
loopne
mov
mov
sbb
pop
mov
sub
pop
inc
iret
mov
les
mov
xor
fnstsw
pop
xchg
adc
out
xor
js
test
repnz
mov
mov
jp
fdivp
jno
ret
mov
mov
es
imul
mov
gs
mov
lcall
or
lahf
sbb
rolb
adc
xchg
mov
sub
pop
mov
mov
call
and
jl
enter
scas
outsb
ja
jmp
adc
pop
xor
jnp
dec
repnz
add
lods
mov
rcl
cmp
call
fisubs
and
jmp
push
out
je
ljmp
scas
sti
outsl
dec
mov
cmp
aad
add
dec
sahf
xchg
cmp
mov
push
sbb
pop
fsub
sti
shlb
mov
imul
mov
icebp
fldcw
jns
jmp
pop
xchg
test
pop
fwait
bound
cmc
xchg
xchg
mov
in
cmp
cmpsb
xlat
out
xchg
loop
fbstp
test
andl
inc
ret
pop
dec
pusha
pusha
mov
inc
push
inc
shrb
jl
xchg
add
popf
inc
cmp
daa
push
push
xor
xchg
xor
jne
rcl
popa
lock
sbb
stc
xchg
mov
andb
ret
lret
jae
insb
mov
sub
sbb
fists
das
mov
arpl
mov
xchg
mov
jns
ja
add
xlat
sti
jns
js
mov
je,pt
mov
jne
cmpsl
dec
xor
lods
adc
adc
push
jne
cmpsb
ret
xchg
fs
fs
mov
mov
pop
out
dec
pushf
inc
xchg
cmp
imul
pop
mov
sub
pop
test
cld
and
sti
dec
pop
pop
and
mov
rcr
pop
repnz
mov
test
adc
jbe
cmc
or
mov
sub
xor
das
cltd
adc
inc
mov
roll
in
jne
sbb
jb
call
insb
arpl
call
jmp
inc
stos
xor
sub
gs
push
iret
rclb
cmp
lret
push
adc
out
mov
lahf
push
and
test
adc
ss
pusha
mov
cltd
sbb
popf
xchg
push
jnp
and
inc
stos
data16
fists
lds
outsl
lods
daa
jp
stos
loop
adc
mov
repnz
mov
dec
sbb
hlt
popf
test
xchg
mov
repz
adc
fdivrs
push
xchg
stos
repnz
fsubs
inc
dec
sarb
out
mov
je
hlt
push
adc
push
sbb
in
lock
and
inc
sub
push
jecxz
sbb
mov
inc
inc
mov
pop
xchg
mov
stos
mov
fwait
adc
xchg
inc
push
xchg
repz
jecxz
dec
fwait
mov
mov
fnstsw
jb
cli
adc
and
fidivs
daa
and
mov
xor
out
jns
jl
pusha
daa
jnp
data16
adc
cmp
fsubl
int3
sbb
sbb
notl
outsb
jae
sub
mov
jae
sub
inc
jecxz
xchg
mov
push
dec
lret
ss
xchg
mov
lods
fwait
ror
fisubrs
call
xor
and
outsl
movsl
xor
xchg
or
push
js
or
dec
in
fisubrs
jbe
xchg
pop
push
arpl
insb
adc
stc
push
filds
imul
push
pop
adc
xor
es
push
aam
cwtl
aas
dec
jmp
and
mulb
jbe
scas
pop
mov
out
jne
jmp
lret
jmp
adc
or
xchg
pop
aad
dec
daa
jmp
scas
movsb
lret
adc
pushf
jb
jmp
sarb
xor
sbb
andb
push
mov
cmp
mov
cmpsb
ljmp
push
mov
rorb
int
mov
xor
lds
cmp
sub
lret
std
mov
sti
je
std
and
inc
cmp
add
orb
aad
sbb
and
popf
mov
js
and
adc
lods
pushf
popf
or
dec
push
adc
sbb
mov
cmp
xor
adc
movsb
and
mov
inc
sub
sarl
rcr
push
pop
insb
dec
push
mov
mov
popa
mov
sub
sub
push
movsb
xchg
dec
inc
cmp
js
xchg
push
lcall
jns
int3
movsl
mov
jo
popf
push
stc
shlb
mov
cmpsb
sbb
push
and
sbb
or
imul
add
xchg
pop
push
leave
paddb
inc
repnz
mov
rcrl
pusha
jmp
jb
scas
out
ss
push
popf
push
xor
sub
sub
add
xchg
jmp
pop
add
adc
jne
adc
shlb
dec
and
and
stos
mov
popa
dec
xor
dec
jmp
insl
mov
add
push
out
inc
movsb
and
xchg
inc
ds
lret
icebp
push
aaa
xchg
dec
lea
pop
mov
gs
fwait
lret
sub
std
into
mov
and
mov
jecxz
dec
inc
lods
leave
stos
pushl
mov
sub
add
fsubr
call
or
lret
jae
mov
adc
hlt
lods
int
aaa
xor
out
fists
pushf
ja
jge
pop
fidivrl
out
mov
xchg
cld
loopne
sbb
insl
xchg
push
cmp
pop
mov
ret
shrb
and
hlt
add
inc
in
xchg
mov
mov
inc
cltd
insb
jg
cltd
mov
push
jle
push
or
clc
add
sub
mov
arpl
jne
mov
and
mov
sbb
test
xor
jns
scas
mov
adc
jle
in
xor
cmc
push
popf
fistpll
dec
cmp
or
pop
iret
fnstcw
jne
lcall
mov
int
mov
jmp
ljmp
into
inc
xorl
fs
popf
adc
fadds
jecxz
rcrb
lock
add
cltd
setb
dec
std
xlat
push
daa
pushl
jle
xchg
pop
mov
or
push
and
mov
std
fst
lds
push
and
mov
movsl
pop
xchg
mul
sbb
mov
test
mov
in
pop
jmp
push
test
pop
xchg
in
add
icebp
and
jae
jge
fidivl
lret
sub
push
andb
rcl
cld
mov
push
add
jae
add
in
push
incb
xor
pop
addl
lods
fadds
sub
leave
and
and
push
hlt
xorl
jnp
mov
leave
test
popa
lock
aas
leave
lret
fs
in
mov
xchg
mov
adc
pop
sti
adc
das
ret
push
mov
int
vmaxsd
stos
sbb
popa
rolb
and
out
push
jp
pop
sarb
inc
xchg
add
inc
fs
mov
ljmp
repnz
xchg
shll
popa
sarl
aad
push
das
or
push
push
sub
cmpsl
sub
pop
cmp
loopne
mov
subb
pop
jns
jbe
out
fucomp
cmpsb
cwtl
xchg
fmull
fwait
and
int3
and
cmp
js
popa
sub
add
les
or
in
loop
sbb
adc
test
sub
pop
inc
mov
sbb
fiadds
mov
popf
jmp
mov
jne
loop
dec
jmp
mov
cmpl
mov
mov
xchg
loope
daa
lock
lret
adcb
shl
dec
xor
cmpsb
fisttpll
pop
mov
outsl
jmp
test
in
stc
mov
fisttps
dec
pop
fdiv
bswap
xor
cmp
or
dec
cmp
mov
and
jecxz
mov
inc
xchg
pop
call
nop
dec
mov
pusha
push
movsb
hlt
xor
out
xorl
rcrb
sbb
enter
jbe
movsb
cltd
push
out
iret
dec
test
in
gs
cmpsl
pop
mov
js
dec
cltd
leave
movsl
cs
cld
addr16
and
pushf
cmp
fmul
fstp
push
push
sbb
sub
pop
call
inc
std
mov
lds
jo
inc
xchg
pop
mov
mov
addr16
aad
pop
scas
bound
ret
mov
xorb
lahf
ror
mov
jb
jecxz
fisubs
pushf
icebp
dec
xchg
mov
stc
xchg
xchg
mov
push
pop
mov
lods
xchg
fistpl
push
aaa
stos
addl
ret
push
pop
loop
pop
cmp
rcr
jecxz
pop
popl
or
cmpsl
push
sbb
mov
inc
mov
add
fcompl
jp
daa
pusha
xchg
sub
cltd
test
jnp
popf
fld
stos
push
adc
cld
and
jns
aad
data16
adc
jl
xchg
push
scas
fsubs
mov
dec
aam
daa
gs
aad
adc
mov
push
in
insl
and
push
popf
sbb
loop
dec
jne
int
add
cmp
jp
lcall
leave
and
add
in
mov
mov
mov
and
xchg
pop
scas
push
orb
mov
imul
sahf
clc
mov
mov
sbb
xor
ficomps
imul
in
push
ljmp
inc
and
imulb
xchg
aas
push
call
out
popl
xor
lods
dec
or
and
jo
aam
adc
push
xchg
pop
dec
pop
xor
add
mov
cmpsb
aad
mov
sub
adc
cwtl
xchg
ss
and
sbb
cmpsl
inc
sub
sub
inc
sahf
adc
sahf
and
sti
xchg
fdivrl
subb
dec
mov
and
dec
loop
pop
sbb
insb
push
es
in
mov
lret
enter
popf
adc
cmpsb
xchg
and
push
aaa
lret
fistpl
lahf
jne
gs
mov
adc
or
push
aaa
jne
in
and
adc
fdivrl
cmc
arpl
pushf
mov
outsl
sbb
orb
jne
ror
in
inc
cmpsb
mov
push
or
in
inc
lea
add
arpl
dec
cmpsb
jae
outsb
out
sub
sub
mov
add
pusha
std
pop
adc
jle
inc
movsl
lret
hlt
addr16
iret
and
pop
scas
int3
add
movsb
inc
pop
jno
mov
in
in
movsb
inc
test
sbb
sbb
sub
imul
test
push
test
mov
imul
mov
shl
push
cmp
push
xchg
cmpsl
adc
mov
inc
call
daa
test
pusha
clc
inc
pop
pushf
pop
pop
in
xchg
mov
iret
lret
inc
nop
fdivr
bound
cmp
out
pop
adc
cmpsl
add
jno
orb
daa
mov
shlb
mov
stc
je
mov
pop
lret
and
sub
jge
adc
nop
fnstsw
insb
jmp
out
inc
inc
push
adc
loop
rorb
sti
mov
jge
mov
or
xchg
push
lret
lds
push
inc
mov
mov
js
cmpb
mov
add
daa
mov
cli
dec
push
repz
and
nop
loopne
mov
cli
rclb
push
insl
mov
lods
repnz
movsb
push
inc
dec
and
cmc
bnd
and
aam
mov
jo
rolb
xor
add
pushf
mov
test
test
cld
cmpsl
adc
sbbb
xchg
cmpsl
dec
push
jg
mov
fs
testl
cmp
lds
prefetch
push
js
aas
fsubr
pop
mul
stc
mov
lret
mov
sbb
inc
cmp
imul
loop
adc
cmp
aas
push
gs
repz
out
sub
jmp
xchg
jge
and
xchg
pop
pop
sub
jge
adc
jmp
mov
xor
mov
xor
scas
adc
cld
in
mov
or
out
cmc
enter
xchg
push
cwtl
mov
les
lods
ffreep
outsb
pusha
fmul
dec
add
and
jg,pn
jl
inc
ljmp
add
lret
adc
dec
xor
mov
cld
movsl
pop
loope
shll
jae
push
mov
dec
push
adc
or
jl
pushf
mov
out
or
xlat
in
cs
iret
xchg
out
pop
fst
pop
test
add
aas
and
mov
mov
push
jg
mov
sbb
aad
aaa
fs
xchg
jle
icebp
and
cli
inc
xchg
loope
rcll
push
mov
or
adc
loop
inc
and
call
inc
imul
add
shr
cld
xor
ret
and
cltd
repnz
mov
cld
pop
fmull
pop
jg
jo
js
cmpsb
push
add
sbb
jne
adc
sub
inc
mov
mov
movsb
in
xchg
sbb
jmp
fildll
sub
fcomip
dec
xor
ds
cmpsl
inc
push
aaa
outsb
je
loop
stc
rolb
sbb
cmp
cmp
test
cmp
mov
aad
ja
lahf
sub
xlat
in
int3
test
int3
mov
xchg
push
cmp
cmc
clc
cli
or
add
push
out
and
xlat
or
lret
mov
ficoml
push
inc
roll
aam
mov
pushf
jno
jnp
cmp
mov
loopne
das
push
and
scas
mov
ror
push
lahf
sbb
xchg
test
mov
xchg
jp
cmp
or
mov
dec
js
cmpsb
movsl
inc
pop
leave
sub
xor
cmp
jmp
jecxz
push
jg
je
pop
jne
aaa
xchg
das
iret
mov
leave
aam
xlat
cli
fsubrs
cmp
addl
or
xchg
jl
inc
add
std
jbe
or
sbbl
cmp
addr16
jle
inc
pushf
jmp
xchg
jle
adc
xchg
fsubrl
scas
bound
mov
sbb
push
fdivp
jae
je
cmc
mov
adc
mov
lods
mov
ja
jnp
loopne
mov
iret
mov
loope
inc
addb
lahf
xchg
mov
jmp
loopne
movsl
dec
hlt
test
push
loope
dec
sub
sub
je
lret
mov
mov
repnz
leave
xor
sti
pusha
inc
fistl
sbbb
push
insl
lds
sbb
cmp
mov
jp
pop
scas
pusha
inc
jae
fcomp
push
leave
and
fstps
repnz
push
into
int3
into
lods
enter
loop
dec
mov
push
into
jbe
jl
lock
xor
mov
mov
pop
int3
or
lea
sbb
cltd
push
int3
sub
faddl
loop
dec
pop
cwtl
inc
inc
jecxz
sub
add
dec
int
sbb
arpl
aad
push
jo
jnp
shl
adc
xor
out
stos
and
xchg
xor
sbbl
fisubl
pop
mov
cmpsb
aas
out
xor
int3
xchg
es
aaa
inc
ljmp
cmp
or
mov
shll
mov
icebp
mov
fwait
xor
xor
in
jecxz
mov
sub
mov
popa
mov
es
mov
cmpsb
rorl
movsb
sahf
sub
add
testb
push
mov
out
inc
aaa
dec
into
push
fadds
sbb
xchg
pusha
aas
dec
aam
test
sub
sbb
add
mov
xchg
ret
cmp
gs
das
out
fwait
bound
mov
mov
mov
sbbl
ret
cmp
in
mov
fidivrl
xchg
lahf
sub
adc
cltd
repz
pop
xchg
xchg
jmp
xor
mov
in
mov
xchg
subb
jle
ret
jge
mov
lcall
and
mov
mov
fwait
pop
adc
idivb
xor
add
inc
push
fiadds
mov
inc
mov
jle
pop
pop
xchg
dec
scas
fadds
out
movsl
push
and
stos
cltd
push
jae
xorb
mov
xlat
push
and
mov
ret
test
ss
ror
xchg
icebp
jbe
push
jle
mov
pop
in
or
icebp
xor
xor
cmp
jo
inc
flds
xchg
sub
jo
push
int3
dec
jae
dec
je
sub
iret
cmp
frstor
loope
pop
dec
mull
mov
inc
lock
sub
pop
iret
inc
sub
or
pushf
insb
gs
stos
push
xor
inc
nop
bound
aaa
mov
shrb
jle
mov
and
or
jg
mov
xchg
xchg
fcomps
addr16
and
push
xor
pop
in
sarl
push
jl
xchg
push
and
stos
test
push
mov
sahf
imul
scas
sbb
mov
test
sbb
adc
fwait
and
sbb
fadds
pop
in
sahf
shrl
push
dec
test
dec
push
in
push
in
loop
das
fcompl
dec
inc
inc
mov
ss
cltd
lods
in
pop
leave
inc
jne
data16
or
sarl
jnp
dec
leave
insb
pusha
cmc
imul
sbb
push
gs
insl
sub
sub
xchg
inc
out
lods
xchg
dec
add
lahf
jo
xor
xor
push
or
xchg
adc
add
lods
push
xchg
push
out
loope
mov
ds
xor
jne
and
ror
push
jp
mov
adc
sbb
aaa
sub
cli
push
push
xorl
push
arpl
dec
mov
andb
aaa
movsb
xor
leave
mov
jbe
in
out
mov
aas
xchg
pop
jno
mov
or
mov
xor
adc
mov
call
mov
dec
push
jl
pop
inc
lcall
ljmp
das
sahf
mov
out
scas
jl
and
cmp
inc
loope
inc
sbb
sbbl
lods
cmp
mov
adc
mov
adc
scas
mov
fistl
flds
jno
je
int3
pop
inc
int3
mov
lret
jae
sbb
push
test
cmp
out
bound
mov
das
add
push
mov
sarb
mov
and
dec
hlt
aas
daa
mov
filds
and
cmpsl
data16
je
sub
aam
or
inc
je
jne
mov
aas
push
push
xor
lods
inc
xor
jmp
push
add
sbb
jl
aaa
add
sub
repz
out
fucomip
jmp
push
xchg
mov
dec
call
jg
cmc
or
jns
pop
es
adc
sub
sbb
mov
fucomp
cmp
cmpb
xor
popa
fimuls
pop
movsl
ret
cmc
dec
add
ja
lods
out
imul
mov
sub
and
addr16
clc
jecxz
mov
dec
fidivs
push
push
mov
jle
sbb
dec
mov
adc
test
adc
sbb
into
repnz
push
pop
mov
dec
lret
ficomps
stos
pop
pop
xchg
jno
add
repz
insb
adc
push
lods
xor
mov
lds
jae
repnz
pushf
mov
mov
hlt
addl
mov
cmp
call
mov
loop
je
jnp
addr16
push
imul
mov
ss
icebp
jne
mov
fldl
pop
fwait
sahf
pop
sbb
inc
insl
fcmovb
xchg
hlt
push
das
fisubrs
lahf
dec
test
sahf
push
inc
push
mov
xchg
subb
mov
mov
popa
repz
test
into
xorb
shl
popa
je
repnz
sbb
or
sub
repz
je
mov
sbb
popf
aad
mov
push
out
popf
jno
movsl
in
and
add
pop
and
mov
addr16
sbb
pop
mov
mov
enter
nop
mov
jnp
bnd
jp
stos
mov
notl
dec
cltd
in
iret
xor
pop
adc
xchg
imul
mov
sub
gs
cmpl
inc
movsb
sbb
push
scas
xor
js
dec
rorl
add
xchg
push
push
lock
pop
cld
daa
xchg
dec
fsubrs
pop
rclb
push
aaa
hlt
pop
mov
cwtl
sbb
sbb
pop
mov
lock
leave
and
outsb
es
mov
add
adc
dec
int
out
int
xchg
add
inc
adc
test
lret
stos
add
xchg
xchg
iret
ficompl
sahf
lret
ds
mov
arpl
lcall
inc
pop
xor
cmp
lds
ficoms
mov
mov
mov
jp
inc
in
jp
aad
pop
inc
cltd
call
jbe
sub
and
dec
mov
xor
xorb
add
subl
insl
xor
sahf
ja
mov
pop
cli
in
add
fxch
sub
dec
cli
lcall
stc
leave
fnstenv
jmp
mov
ljmp
cld
pushf
push
outsb
sub
pop
mov
inc
clc
push
mov
cmp
add
adc
mov
out
add
pop
in
cmpsl
push
or
jmp
jae
jnp
sbb
xchg
js
pop
pop
sbb
inc
and
mov
and
pop
aam
cwtl
cmp
jne
daa
stc
cmp
lods
sub
rolb
cmc
mov
add
fs
into
cmpb
ljmp
stc
cmp
add
jne
pop
cmp
leave
insb
mov
nop
addb
test
imull
fdivs
cmp
sbb
subl
mov
lret
dec
in
sub
push
mov
movsl
inc
jg
xor
cmpl
xor
fisubrl
insl
xchg
mov
mov
dec
mov
mov
into
push
and
rclb
sub
mov
dec
and
xlat
xor
les
out
or
addl
xor
xlat
cmp
ja
roll
mov
pop
inc
mov
sbb
xchg
dec
pop
shrb
shll
sbb
dec
ret
movsb
lods
dec
mov
jecxz
out
xor
pushf
enter
iret
in
loopne
shrb
pop
adc
cltd
sub
or
imulb
xchg
loopne
jp
jo
mov
or
ret
jl
negb
pop
in
fldenv
sbb
xchg
mov
xchg
sahf
jg
sti
bound
sub
xlat
sbb
mov
ret
dec
xor
mov
bnd
xor
or
lea
sbb
adc
std
cmp
cmc
cmpsl
mov
inc
fstps
ror
sti
repz
pop
inc
push
jbe
mov
loope
pop
dec
jno
jnp
xchg
outsl
lds
aaa
jp
iret
inc
adc
cmp
xor
pop
mov
mov
pop
inc
pusha
repz
test
cmc
ret
add
and
jbe
fadd
adc
out
loop
adc
call
pop
pop
dec
sbb
xor
es
jecxz
imul
aaa
into
lock
mov
shll
pop
inc
pop
popa
sbbb
and
mov
jb
push
add
push
jg
daa
dec
sti
loopne
mov
mov
lcall
add
jnp
push
fstl
pop
sbb
xor
mov
int3
jmp
cwtl
xor
xchg
call
into
popf
jmp
adc
lea
popa
imul
cmc
adc
roll
or
xor
add
call
xor
sub
dec
scas
cwtl
pop
nop
xor
push
cmpsl
jno
daa
es
je
sub
pop
in
cmpsl
out
mov
mov
push
lds
das
jecxz
mov
lds
std
add
icebp
push
enter
cmp
xchg
xchg
push
adc
mov
xchg
adc
shl
lahf
insl
add
cmp
shlb
push
into
cmpl
mov
and
arpl
stos
sub
sub
and
mov
inc
shll
sbb
nop
popf
js
leave
shl
shlb
lods
push
mov
jne
fiaddl
adc
popf
je
mov
stos
or
icebp
rorb
fnsave
jb
in
popa
notb
cmp
lods
daa
inc
mov
add
mov
cmpsl
mov
je
sub
dec
stos
notb
adc
nop
imul
jge
mov
xchg
and
mov
outsl
out
loop
add
pop
pop
imul
pushf
dec
fisubl
sub
jb
movsb
pop
mov
ss
and
ds
pop
jnp
jge
push
push
and
in
add
inc
inc
and
and
ret
cmp
fbstp
or
or
adc
and
mov
dec
cmp
jns
mov
inc
sub
mov
popa
xor
arpl
push
mov
push
adc
insb
or
cmp
mov
fnstcw
divl
add
cmpsl
pop
imul
sub
jmp
fnstsw
jae
mov
loopne
xor
mov
sub
pushf
scas
push
dec
scas
inc
insl
xor
daa
icebp
pop
lret
adc
push
mov
stos
cmp
sub
out
inc
out
stos
mov
or
mov
xchg
pop
mov
stos
aas
mov
jns
sbb
ret
pop
push
mov
xchg
clc
add
pop
or
sti
mov
das
stos
sarb
xchg
add
dec
adc
jne
jg
loopw
roll
lods
imul
and
add
movb
pop
jae
cs
rorl
loope
lds
test
inc
inc
pop
filds
hlt
hlt
bound
enter
push
add
add
jge
pushf
sub
or
lret
int3
insb
mov
icebp
pusha
cmpsb
mov
mov
inc
in
lret
adc
xor
sub
popa
sti
fld
sub
std
add
xor
inc
fidivl
idivl
bound
push
xchg
out
sbb
adc
jns
dec
cltd
mov
push
push
pop
aad
dec
xchg
lock
loopne
cmp
mov
repnz
setp
mov
push
pop
jnp
add
adc
sbb
mov
dec
flds
int3
cmp
jl
inc
jne
mov
mov
push
cmc
sbb
sbb
fs
les
outsl
roll
push
inc
stc
popa
jle
push
push
mov
xchg
dec
enter
aad
sub
nop
mov
mov
lcall
and
cmp
cmpsb
jae,pn
mov
rorl
pop
cmp
fcoml
hlt
pop
outsb
sub
mov
xor
sbb
call
loopne
cmc
sub
negl
jb
add
jle
aad
adc
cmpsl
sahf
or
pop
mov
push
adc
mov
pop
clc
mov
rcll
dec
xchg
push
sbb
test
xor
mov
stos
or
mov
add
insb
adc
inc
insl
ret
or
push
mov
adcl
mov
push
push
xor
in
fcoml
call
adc
or
stos
in
xlat
and
push
xchg
mov
sbb
sub
test
mov
shrl
xor
insb
inc
adcb
adc
js
dec
call
mov
into
dec
jbe
ss
xor
loopne
jmp
jmp
movsl
outsb
cli
inc
mov
push
mov
xor
aaa
pop
mov
mov
lods
inc
mov
outsl
cmpsl
push
out
adc
fwait
lock
repnz
fcoml
mov
pop
and
mov
sub
imul
clc
mov
enter
xor
mov
dec
outsb
jecxz
mov
or
and
mov
lcall
lock
in
clc
add
mov
and
leave
pop
xchg
cli
test
mov
fcoml
add
jns
inc
rcr
jl
dec
mov
stos
mov
orl
out
sub
sbb
and
pop
mov
seto
or
lahf
mov
add
cmp
pop
cmp
in
mov
call
or
add
clc
adc
jp
adc
jecxz
test
lds
sbb
dec
fldenv
les
loope
jbe
std
repnz
add
enter
or
shll
mov
out
or
test
loopne
mov
jno
ret
repz
leave
xchg
push
mov
fsubs
out
call
je
outsl
fwait
xchg
out
dec
divl
jmp
mov
xor
std
jl
std
dec
cwtl
fwait
bound
std
cmp
or
lcall
movsb
ds
cmp
int
lods
xchg
or
cmpsl
or
fldt
cld
orb
test
push
dec
repnz
xchg
add
jg
mov
adc
push
mov
xor
adc
sqrtps
and
test
mov
pop
test
pop
lds
inc
sbb
xor
jo
movsb
mov
sbb
rcrl
arpl
xor
sbb
pop
push
jno
loopew
vpsubsb
xchg
jg
adc
daa
stc
jae
popa
fxch
adc
enter
ret
push
loop
jae
lods
xchg
mov
arpl
stc
je
in
pop
sbb
test
fldenv
and
push
pop
jb
es
xchg
or
aaa
out
push
pop
jp
add
pusha
les
sub
or
or
mov
iret
jg
mov
lcall
call
lods
inc
mov
add
mov
cli
adc
shll
xchg
and
inc
adc
push
fwait
xor
mov
mov
push
jnp
je
xchg
lret
into
or
cmp
xor
out
xor
insb
mov
adc
xchg
addl
mov
shl
xchg
jno
popa
out
rcrl
inc
push
pushf
adc
cmp
adc
dec
mov
outsl
out
push
push
mov
daa
pop
sub
lret
adc
cli
pusha
in
or
adc
mov
jo
dec
mov
sub
sbb
inc
dec
mov
lret
xchg
lods
popa
jb
xor
inc
nop
pop
adc
loopne
fwait
mov
or
push
imul
push
and
lods
lods
fs
nop
sub
popa
push
insl
jae
les
cmpsl
push
cmp
xchg
xor
imul
addr16
movsb
das
jno
sub
sub
inc
adc
or
out
loop
inc
ficomps
dec
subb
push
subl
jb
pusha
cs
leave
jo
cmp
mov
loop
push
ret
iret
sub
pop
push
or
int3
loopne
inc
test
push
cmp
ljmp
es
outsl
stos
repz
pusha
push
clc
jae
rcrb
jmp
repnz
ror
scas
sub
mov
jnp
fldl
scas
mov
cmp
cs
push
ljmp
push
lcall
cmc
inc
je
mov
inc
das
out
pop
xchg
dec
or
mov
and
lcall
imul
sbb
cmp
shll
addr16
cmpsl
xor
jae
pop
outsb
xor
jge
adc
movsb
insl
rorb
mov
loop
xchg
clc
pop
adc
dec
ret
mov
xchg
loope
jmp
sub
mov
outsl
aam
xchg
fsts
ja
mov
jne
or
or
fcomip
adc
hlt
scas
rol
cld
aas
jbe
sub
mov
dec
clc
sbb
ret
and
out
xchg
cltd
mov
faddl
mov
xor
fldt
sti
adc
adc
xchg
lods
jecxz
int
mov
scas
xchg
loopne
xchg
js
outsl
int3
add
bound
mov
ds
xor
fstps
inc
mov
fsubrs
rcrb
mov
adc
jp
insl
xor
xor
push
lods
or
xchg
sbb
ja
push
loop
stos
and
and
lret
dec
mov
loopne
pop
mov
rcrl
push
cmp
push
mov
inc
cmp
mov
bound
fmuls
in
sbb
or
jp
jle
pop
outsl
pop
fldt
das
push
cwtl
push
stos
shll
add
or
jge
mov
push
inc
pop
mov
mov
cmp
mov
push
cwtl
pop
mov
jb
mov
xchg
push
pusha
xchg
mov
outsb
shrl
mov
cwtl
xchg
pop
mov
sbb
mov
xchg
jae
or
cmc
fidivl
orl
mov
aas
push
stos
ret
push
jbe
stos
stos
es
fists
js
sbb
push
sbb
inc
sub
js
ja
pop
test
mov
jp
lea
cmp
jmp
fadds
inc
inc
sbb
call
cmpsl
and
dec
pusha
mov
push
xor
loop
mov
or
sub
imul
push
cmpsl
cs
adc
push
push
pop
and
jmp
or
test
push
cmp
xlat
adc
insl
pop
test
lea
jae
lret
test
or
into
xor
xchg
sahf
imul
sbb
inc
mov
mov
ss
in
fmul
adc
push
jge
push
fcmovbe
fs
out
sub
int3
sub
js
in
cmp
sbb
inc
dec
test
subl
popa
outsl
xchg
xchg
ret
push
cmpsb
mov
test
ret
sbb
mov
inc
ret
fdivl
orb
jle
stos
dec
subl
or
or
pop
jbe
lcall
sahf
or
add
sbb
add
xor
scas
or
and
ljmp
xlat
cmp
xor
mov
out
data16
sub
inc
gs
js
test
sarl
xor
mov
adc
cmc
aas
add
xor
add
push
outsl
pop
in
repnz
sbb
mov
int3
in
add
jbe
mov
cmpsl
push
loopne
dec
pop
sub
out
in
out
adc
into
enter
mov
fstpl
mov
shrl
and
cmp
ljmp
outsl
dec
sbb
push
mov
mov
nop
inc
cmpsb
in
fs
mov
xor
push
fcom
fs
out
imul
xchg
jecxz
es
mov
insl
loop
sahf
shlb
adc
addr16
addb
add
cmp
iret
sahf
mov
and
aad
and
in
in
xchg
sar
add
adc
add
cmc
in
roll
divl
sar
lea
cmp
cmpl
mov
push
adc
aas
movl
xchg
lcall
ja
push
sub
lods
cmpsb
in
add
pop
test
push
and
test
add
lock
mov
sar
out
mov
fisubs
pop
test
mov
jg
adc
insb
and
mov
add
ficoms
or
test
mov
cld
dec
fxtract
popa
pop
arpl
xchg
js
sbb
jnp
in
shl
mov
in
ss
loop
push
pop
fnstenv
sti
pop
cmp
incl
mov
bound
sbb
sub
push
xchg
pop
roll
or
lahf
ret
mov
in
mov
mov
xor
imul
inc
loopne
andl
xchg
xor
inc
mov
and
pop
in
or
in
mov
and
repz
jno
jne
gs
outsb
jmp
sbb
or
inc
lahf
or
push
cwtl
jb
in
lret
icebp
mov
mov
mov
mov
imul
daa
pop
push
cwtl
lret
repnz
scas
adc
movsl
sub
ret
pop
es
test
mov
cmp
mov
cld
jle
and
sahf
push
in
gs
lock
test
mov
ret
lahf
jge
pop
xor
ret
or
call
mov
xchg
cmp
dec
in
xchg
aad
ja
pop
inc
scas
jno
and
xchg
fnstsw
sti
sbb
jg
xchg
aas
inc
push
lods
sbb
pusha
sub
das
pop
mov
mov
insl
sub
sarb
dec
out
pop
cld
test
test
adc
sahf
dec
dec
or
mov
aas
adc
ds
xor
lcall
repnz
mov
neg
inc
scas
mov
cmp
out
pop
fimuls
sbb
outsb
aas
xlat
rcrb
dec
ljmp
scas
inc
dec
aaa
call
mov
jno
cmp
ss
sbb
jnp
pop
arpl
shrb
lcall
mov
lret
or
inc
jne
sbb
cs
inc
cmpsl
inc
push
pop
pop
and
into
mov
lea
add
mov
iret
dec
outsl
mov
pushf
mov
or
cmp
sbb
jecxz
leave
test
aas
das
push
lret
jb
push
jecxz
in
sbb
cld
inc
std
pop
mov
mov
jg
cmp
cmp
add
pop
in
cmpsb
pop
push
dec
pop
mov
or
dec
adc
fistpll
imul
mov
cmpsl
mov
pop
add
mov
mov
cld
mov
mov
rorb
mov
movsb
mov
push
jp
sti
push
xor
dec
repnz
imul
cmp
and
mov
clc
dec
shlb
jnp
mov
lock
cli
insl
lahf
sbb
inc
or
mov
movsb
js
dec
xchg
jbe
push
add
jae
imul
rolb
push
adc
andl
adc
inc
shll
sub
inc
fmull
sbb
pop
inc
dec
push
outsb
xchg
stos
mov
and
mov
push
push
adc
hlt
jne
push
jl
insb
push
jg
xor
es
and
add
leave
cwtl
stos
jg
or
rcll
sub
movsl
test
test
cltd
outsb
xor
dec
inc
ficompl
mov
mov
cmp
mov
aad
pop
ljmp
imul
outsb
sarb
out
xchg
mov
pusha
int3
mov
cwtl
cmp
jne
int3
lea
mov
cwtl
pop
fsubr
lret
inc
cmp
cmp
clc
fwait
xor
mov
mov
mov
pop
dec
cmpsl
jecxz
sahf
arpl
ja
leave
ljmp
das
mov
jne
mov
xor
inc
jb
scas
int3
outsl
dec
pusha
xchg
sub
nop
sahf
sub
lods
shrb
ja
in
bound
aas
in
inc
xchg
aam
sbb
std
cmp
das
xor
xor
out
sbb
lea
jne
add
sbb
lret
test
push
ficoms
fwait
inc
das
or
mov
decb
dec
jno
sub
xchg
mov
sarb
inc
or
mov
decl
pusha
leave
pop
inc
int
loop
out
mov
lret
inc
push
daa
or
inc
pop
lcall
xchg
jecxz
xchg
xchg
lods
icebp
into
rcrb
mov
add
and
lods
pushf
and
mov
enter
cltd
arpl
inc
outsb
fildll
lods
cmp
add
push
add
xchg
or
dec
iret
lahf
cmc
jne
loop
test
push
flds
mov
cmp
ss
or
mov
fidivrs
pop
mov
icebp
aaa
popa
cmpb
pop
jbe
scas
and
xlat
and
fdivr
jge
cmp
mov
test
js
repz
jnp
adc
in
pop
mov
jecxz
adc
sbb
push
movsb
cwtl
into
je
fimuls
inc
movswl
cmpl
mov
cmp
insb
pusha
ret
mulb
nop
mov
cld
fmulp
inc
pop
test
stos
rcrb
stc
mov
pop
cmpl
es
push
aad
into
test
jp
mov
push
jl
cmp
and
outsb
jge
push
into
mov
lcall
xchg
add
insl
test
or
loopne
les
cmp
mov
push
inc
dec
lcall
cmpsl
addr16
xchg
rclb
hlt
popa
pushf
mov
jae
sbb
adcl
mov
stos
sbb
push
sub
cmp
je
in
arpl
or
adc
aam
mov
in
fadds
out
sahf
popa
mov
mov
sar
lret
test
adc
sbb
dec
fistl
rolb
jns
mov
out
or
lret
loop
jle
mov
rcrl
xchg
sbb
add
dec
ljmp
out
ljmp
gs
outsb
enter
inc
mov
add
lahf
cmp
push
push
cmp
push
test
jbe
repnz
sbb
out
test
push
mov
pop
dec
pmaxub
jb
inc
fisttpll
das
pusha
pop
push
jmp
psrad
das
stc
push
mov
inc
xchg
pushl
ret
xor
cmpsl
rcrl
clc
inc
or
cmp
push
sti
movsb
cmp
push
and
lret
js
fimull
sub
xor
scas
push
xchg
dec
lret
sub
sub
pusha
ret
ss
push
lock
sub
sub
or
repnz
or
cmp
sub
imul
lock
sbb
hlt
ss
and
cli
dec
vmovlps
int
out
inc
cmp
sub
mov
hlt
or
push
push
xlat
sbb
jnp
jg
lds
adc
enter
mov
ret
cli
mov
pop
mov
imul
jg
dec
xchg
push
aam
xchg
test
push
mov
pop
jne
jmp
aam
mov
ja
xor
repnz
popf
sbb
or
dec
inc
pop
jp
xor
bound
cmpsb
cwtl
push
das
mulb
push
notl
adcb
into
and
div
lds
rcl
fstl
pop
jno
pushl
mov
aaa
les
lds
mov
notb
insl
inc
aas
or
and
inc
adc
add
xchg
jb
rcrl
rcrb
xchg
dec
into
cmp
into
jae
lods
xchg
jns
sti
out
sub
inc
sbb
xchg
aad
push
jp
jecxz
sbbb
pop
out
sub
pop
fdivl
movsb
ljmp
roll
push
sbb
inc
dec
lods
jb
sbb
dec
jmp
push
sbb
mov
xor
sub
mov
fcomps
lock
outsl
xlat
inc
jmp
xchg
pushf
sbb
lret
xor
aas
xchg
jp
repnz
mov
imul
sbb
sahf
cmpb
mov
adc
push
scas
rol
and
jno
repz
sub
and
sub
outsb
jae
mov
dec
sbb
movsb
mov
aad
xorl
xor
les
mov
xor
pop
leave
add
leave
jecxz
out
fsubl
fnstcw
bound
test
addr16
sahf
mov
sub
pop
jge
leave
sbb
lret
mov
or
popa
and
xchg
inc
sbb
mov
popf
jge
mov
es
adc
pop
pushf
mov
test
pop
dec
xor
sbb
push
pop
mov
dec
adc
js
add
iret
das
data16
adc
mov
icebp
jns
cmc
iret
xchg
mov
push
push
iret
movsb
or
incb
int
push
mov
repz
dec
cmp
mov
mulb
fnstcw
pusha
loop
std
push
xchg
test
jge
arpl
sub
dec
hlt
adc
add
cmp
xor
or
dec
aad
cmpsl
into
inc
loopne
pop
sbb
into
inc
lret
inc
out
sub
and
ljmp
dec
jo
mov
or
sarl
pop
jl
inc
leave
adc
ljmp
int
xor
sbb
out
push
inc
jmp
dec
pop
mov
sbb
stc
fnstcw
jmp
mov
int
aad
add
inc
mov
xchg
stc
push
xchg
aas
mov
pop
aaa
js
xchg
imul
sub
add
ret
push
sbb
mov
cltd
and
push
aad
or
popa
stos
jg
scas
arpl
xchg
and
insl
ljmp
in
aas
data16
icebp
flds
push
xchg
fisubl
enter
in
out
outsb
inc
push
cltd
sbbb
or
jle
mov
mov
sti
cmp
jle
mov
leave
mov
inc
loopne
pmaxub
sbb
push
int
ljmp
sbb
jecxz
mov
insl
mov
push
subl
jle
ret
and
sbb
movsl
pop
push
aad
aaa
jo
add
adc
adc
jp
fs
dec
icebp
loopne
shll
fsubs
add
das
not
adc
imul
cltd
shr
movl
mov
rclb
mov
xor
xchg
or
xor
data16
cmp
xor
and
adc
dec
jae
imul
mov
xor
add
mov
test
punpckhbw
cmp
sub
pushl
add
fnstenv
cmp
fisubs
or
mov
scas
jecxz
scas
jns
jo
inc
mov
leave
inc
frstor
sbb
insl
int
std
pop
sub
xor
sahf
arpl
xor
leave
btcl
sahf
cmpb
cmpsl
jne
sub
pop
mov
mov
fstl
std
jmp
ss
and
sbb
mov
xchg
push
in
sub
dec
pop
mov
push
adc
pop
popf
mov
adc
test
dec
ljmp
adc
cltd
jo
lret
shl
imul
adc
jge
pusha
lret
push
inc
or
in
and
add
roll
jne
ja
jmp
les
lds
and
stos
daa
push
rorl
scas
mov
shl
pop
mov
xlat
jb
jbe
stos
ret
pop
xchg
aas
mov
aas
leave
sbb
cmp
test
dec
inc
fists
sti
movb
pusha
mov
push
scas
mov
ja
mov
inc
cmc
dec
ljmp
std
sub
cs
sub
test
xor
or
xchg
std
sti
dec
je
fdiv
mov
inc
daa
pop
add
cmpsl
clc
adc
popa
shl
pop
mov
leave
push
and
mov
push
int3
gs
adc
stos
xor
pop
idiv
lds
pop
aas
mov
ljmp
push
pop
sarl
lods
mov
jbe
cmp
icebp
dec
ja
mov
enter
dec
xchg
sahf
xor
and
mov
jne
cmp
pop
int3
add
test
jecxz
pop
xchg
mov
das
add
movsl
lods
std
sarl
inc
bound
jmp
rclb
outsl
fwait
rcll
mov
add
das
je
repz
shr
mov
adc
pop
jp
es
fisttpl
es
fdivrl
pop
mov
daa
jg
stos
ficomps
mov
cmp
cmp
lahf
popw
or
inc
xchg
mov
jle
decb
and
fstpt
adc
adc
loope
cli
jmp
imul
icebp
push
data16
mov
sub
loop
out
inc
pop
jle
or
lret
pop
mov
jecxz
jmp
gs
loop
xchg
lds
stos
pop
fisttpll
ret
mov
test
int
dec
adc
into
cs
push
sub
sbb
push
dec
scas
push
lret
dec
and
push
and
mov
int3
ja
sti
lea
push
stc
pop
daa
dec
mov
jmp
adc
pop
mov
sahf
xchg
or
jae
les
cltd
mov
adc
jp
out
add
test
popa
mov
push
inc
mov
loop
adc
mov
push
dec
mov
imul
sbb
push
clc
negl
sarb
push
daa
pop
fcoms
pushf
outsb
and
mov
xchg
cmp
pop
jo
xchg
scas
pop
jecxz
mov
pusha
inc
lock
fstpl
pop
jmp
int
ss
or
jno
inc
into
mov
roll
jno
cmp
fs
jno
xor
test
push
xor
push
ret
lock
mov
mov
inc
mov
in
xor
jmp
gs
imul
outsl
mov
jle
sbb
jle
sub
fnstenv
arpl
hlt
hlt
jge
sbb
lods
lret
sub
fwait
shl
and
lods
jge
sbb
sbb
loop
and
cmp
scas
xor
ror
filds
cli
pusha
jnp
and
and
add
call
or
pop
idiv
jmp
mov
loop
and
leave
lds
cs
push
rcrb
idivb
and
push
adcl
add
popf
mov
push
lret
lods
fimull
ja
mov
loopne
out
pop
mov
insb
mov
rorb
inc
testl
pop
outsl
fwait
mov
mov
repz
add
divb
lock
xor
lods
iret
sub
or
pop
inc
mov
arpl
into
xchg
dec
aam
push
cmp
test
imul
movsb
into
xchg
mov
outsl
out
jmp
pop
pop
cmc
or
mov
sub
cmpsl
adcl
mov
mov
sbb
mov
xor
xchg
xor
pop
pop
pop
adc
or
cmpl
and
fwait
andb
xor
xchg
imul
scas
decb
popf
lea
sahf
xlat
idiv
cmp
lea
push
int
jns
jmp
mov
ljmp
jmp
enter
lea
rcr
xor
xor
rcrl
cmpl
lock
lods
outsb
es
std
adcb
dec
dec
not
stos
jns
and
outsl
or
push
sub
sbbl
push
pop
nop
pusha
xor
mov
fnsave
sar
pop
notb
lds
or
cwtl
lret
popa
daa
sub
adc
jns
mov
fstl
jge
sub
ret
punpckhwd
push
xor
xchg
fldcw
jp
mov
mov
xchg
inc
xchg
rcll
popa
jl
and
cmc
pand
insl
mov
dec
scas
push
jnp
pop
scas
lcall
mov
jecxz
cli
push
xchg
push
add
inc
addr16
xchg
fldl
mov
push
dec
mov
cmpsb
jg
lret
or
aas
aam
pushf
in
fisttps
in
mov
fdivr
xchg
cmp
scas
mov
xchg
pushf
cmpsb
stos
push
scas
xchg
push
dec
fldt
test
pop
xchg
repz
imul
ds
jnp
fs
cld
int
aad
mov
or
dec
sbb
or
arpl
fs
fs
test
outsb
xor
rcrl
xchg
es
ficoms
arpl
js
pop
repnz
or
fmuls
xchg
popf
xchg
lock
ret
lds
and
repz
push
cmp
fwait
das
inc
mov
sub
dec
sahf
pop
add
add
and
pop
fisubrl
mov
frstor
jg
adc
das
test
daa
sub
insb
or
mov
mov
xorb
movsl
test
outsb
sub
sub
aaa
testl
negl
jno
mov
test
xchg
aaa
adc
je
xchg
xchg
sub
cmpsl
cmp
testl
shll
adc
sbb
nop
cs
jb
shll
sub
nop
pop
cmp
and
inc
and
and
cmpsl
add
stc
push
fs
xchg
pop
inc
leave
push
mov
movsl
les
les
cmpl
mov
lods
mov
lahf
lret
mov
int
push
jns
iret
test
xchg
cmp
imul
iret
bound
scas
mov
setne
push
inc
sub
ljmp
sti
scas
movsb
mov
xchg
rcll
frstor
push
xchg
inc
iret
jecxz
data16
dec
outsb
mov
cmpl
int3
jp
lea
xor
hlt
xor
jbe
dec
stos
mov
and
xor
aam
adc
scas
sub
and
add
ds
dec
ljmp
shl
cmpsl
div
stos
sbb
out
daa
movsb
popa
jle
adc
lds
mov
cmp
ret
mov
sub
inc
jge
repnz
mov
int
nop
std
popf
inc
jl
std
dec
test
out
sar
xor
adc
jne
fiadds
dec
pop
push
icebp
mov
jae
imul
push
mull
push
daa
add
aaa
cmp
adc
or
pop
jae
mov
ljmp
aaa
pop
ljmp
push
fldl
add
add
jg
add
pop
scas
mov
jne
push
xor
cli
pusha
add
mov
add
jmp
repz
enter
sahf
push
mov
daa
xor
or
mov
lret
jb
mov
jl
je
cmc
lahf
fcompl
jge
sbb
jmp
add
je
mov
push
cmc
popf
arpl
and
aaa
test
xchg
mov
push
iret
and
leave
lret
mov
out
notb
lcall
mov
lea
push
fwait
cmp
cmpsb
fdiv
adc
cli
jbe
sub
xchg
jbe
mov
inc
out
outsl
cli
xor
pushf
sub
pop
in
adc
pop
push
out
inc
jb
lock
fdivl
jp
jmp
out
fwait
jne
daa
je
push
jmp
mov
adc
dec
into
jbe
push
dec
sub
jle
fadds
add
je
push
push
fdivr
scas
icebp
xchg
and
sahf
xchg
adc
loop
addr16
sbb
iret
pushw
sub
test
imul
stos
dec
pop
popa
mov
xor
push
cmpsl
lods
adc
idivb
mov
cltd
and
aad
lds
add
mov
js
jne
mov
or
xchg
jmp
repnz
mov
dec
pop
xor
adc
mov
in
into
and
daa
test
adc
cltd
jnp
xorl
jmp
int
es
fisubrs
mov
sbb
inc
cmp
mov
outsl
rolb
xor
push
cli
adc
test
add
enter
sti
inc
and
mov
pop
mov
adc
and
push
cmp
mov
sub
pcmpeqd
dec
mov
in
fadd
out
dec
scas
xchg
cmpsl
notb
jae
sbbb
ltr
mov
fisttpll
jp
stc
out
inc
push
mov
sbb
and
and
and
adc
in
mov
ja
shrl
fs
lcall
loope
iret
sbb
mov
in
cmp
and
xor
loop
sahf
push
lods
aaa
adc
jge
cmp
xchg
xor
push
test
iret
jle
push
je
test
fisubl
in
sbb
imul
cli
pushf
cmpsl
sbb
lock
inc
jbe
pop
dec
adc
mov
mov
ja
and
push
fcompl
or
insl
fstpl
popa
fsubs
cmp
push
lods
repz
xor
adc
jl
divb
or
mov
add
push
sub
push
mov
mov
insl
mov
mov
jbe
cltd
jo
idivl
bound
inc
sbb
repz
out
jae
std
in
adc
loopne,pt
popa
lock
jo
repnz
pop
sbb
inc
loopne
push
nop
adc
mov
test
scas
add
ds
inc
pop
xchg
das
out
mov
pop
inc
push
sbb
dec
aas
sbb
aad
cmpsb
push
fs
pop
xor
jnp
inc
sbb
mov
push
sti
dec
mov
dec
xor
sbb
daa
data16
mov
mov
mov
adc
jp
repnz
adc
jb
xchg
sarb
jns
pop
dec
pop
xchg
js
fs
or
mov
roll
xchg
ret
les
sbb
sub
scas
xchg
call
push
mov
or
mov
xor
adcb
sbbl
arpl
shl
or
pusha
js
cmp
lods
xor
xlat
repnz
sbb
fadds
sahf
daa
ljmp
cld
xor
xchg
out
or
in
cmp
lea
or
xor
xor
xor
je
add
fadds
iret
je
rcrl
mov
push
xchg
add
iret
and
mov
xchg
push
push
outsl
outsb
cwtl
xchg
mov
hlt
sub
mov
fwait
std
xchg
sbb
mov
mov
add
das
push
xchg
in
mov
sbb
sbb
data16
aas
jns
adc
push
aam
and
es
addl
insl
scas
mov
insl
inc
xor
push
pop
mov
cmc
dec
adc
hlt
stc
xor
add
ss
and
jg
jb
inc
fsubl
sahf
mov
cmpsb
cmp
mov
push
push
pop
jmp
mov
cmp
cli
inc
loope
dec
dec
je
mov
or
test
cmc
push
sbb
stos
das
mov
mov
sbb
sub
aas
xchg
sub
mov
ja
push
lahf
subb
mov
pop
jp
ds
shl
aad
or
imul
push
icebp
add
pop
adc
and
lods
movsl
data16
das
fcmove
adc
sbb
scas
cmp
mov
cmp
xor
arpl
sbb
pop
in
pmaddwd
insl
mov
fists
pop
out
pop
lcall
mov
sbb
inc
int
frstor
pop
jl
hlt
rorl
adc
dec
xlat
out
fs
jo
jmp
lcall
outsl
cltd
push
mov
xchg
xchg
sarb
pop
inc
push
mov
fldenv
cmp
xor
enter
sbb
inc
xor
push
inc
jecxz
and
jg
push
andb
fsubrs
fisubrs
push
aas
or
sbb
in
cmp
mov
pop
push
cltd
sub
popl
push
jecxz
and
push
enter
inc
and
mov
lcall
or
cmp
ret
jb
sahf
nop
pop
and
lea
xchg
stc
out
or
jl
call
inc
xor
loopne
ja
xchg
inc
fsubrs
cmp
jl
jno
jl
imul
mov
and
dec
dec
repnz
in
es
jne
push
mov
decl
mov
mov
rclb
xlat
inc
mov
push
mov
sbb
lods
stos
fisubrs
jge
mov
xchg
test
test
or
rcrb
divl
add
xor
or
sub
cmp
jbe
push
mov
scas
ss
dec
xor
rclb
xchg
inc
sbb
push
rclb
jo
fcom
rorl
inc
aam
xor
rorl
ret
push
and
cmpsl
mov
mov
outsb
mov
dec
add
bnd
xlat
fdivrl
imul
jl
jbe
push
shll
add
call
je
jno
sbb
mov
mov
adc
pop
imul
push
iret
dec
sub
adc
in
cmp
mov
in
push
dec
in
xchg
push
ret
call
push
xor
add
mov
inc
push
mov
sub
mov
out
lods
aam
or
inc
leave
outsb
xor
lds
cmc
xor
ficoms
cvttps2pi
pop
pushf
or
adc
ljmp
cli
jmp
add
ljmp
push
pop
pop
push
mov
inc
mov
es
cmp
cmc
sbb
mov
xor
sbb
jbe
xchg
cmp
mov
pop
inc
pop
outsb
xor
loop
jnp
add
push
sbb
js
xor
data16
mov
insl
jecxz
pmuludq
test
sub
movsb
std
arpl
push
in
cmpsb
mov
pusha
add
mov
int3
fistpll
xchg
jbe
xchg
ljmp
push
xchg
push
loopne
jb
js
and
or
lcall
es
shlb
or
jb
jo
xor
sbbb
test
dec
xchg
push
in
movsb
inc
addb
arpl
out
fwait
mov
prefetchnta
pusha
test
fcomps
jns
push
pop
lahf
ljmp
add
jae
aas
out
pop
pop
pop
addr16
in
into
lahf
repz
mov
inc
pop
jno
stos
mov
loop
idivb
mov
or
cmp
cmc
jle
xchg
ja
mov
imul
stc
dec
xchg
push
movsb
fsubrs
mov
mov
rcrb
out
cmp
mov
cmc
mov
addl
fwait
fwait
lret
add
nop
and
and
xor
jo
or
stc
test
loop
push
popa
jp
xchg
jne
xor
sbb
clc
push
sbb
xlat
dec
stc
lds
stos
mov
fsts
push
fldenv
repz
fsubr
add
std
jns
fsts
and
iret
inc
shr
mov
mov
ret
aad
jecxz
stc
insl
push
das
fadds
mov
test
ss
insl
stos
jae
jo
stos
daa
xchg
test
insb
jns
dec
insb
inc
adc
and
fmulp
add
inc
leave
outsb
cmp
and
xchg
pop
xor
inc
clc
ss
or
ror
lods
bound
lahf
inc
popl
out
fldenv
insl
loop
xor
dec
push
and
mov
mov
mov
cli
int3
das
popa
les
inc
add
and
outsl
mov
sahf
gs
scas
rclb
sub
mov
jl
test
cmp
mov
inc
popa
mov
jmp
fs
jb
mov
stos
sbb
lret
jle
add
add
mov
jecxz
adc
sbb
add
test
lcall
jnp
js
inc
xchg
nop
pop
dec
stc
xlat
lret
test
cltd
arpl
jp
popa
and
pop
ret
imul
test
ds
sbb
aaa
push
dec
fnstcw
xor
pop
push
stc
inc
pop
outsb
popa
dec
pop
mov
sbb
push
aad
sub
pushf
data16
mov
mov
push
inc
inc
in
xor
sbb
xor
scas
repnz
add
inc
add
das
jecxz
leave
or
cmp
or
mov
data16
lcall
aaa
idivb
ret
xor
out
das
sti
sub
test
cmp
in
add
add
pop
ss
int
fs
pop
add
dec
test
push
push
mov
nop
aad
lods
push
test
mov
cmpsb
mov
add
sbb
xchg
cmp
sub
pop
push
add
xchg
scas
push
or
cmp
in
fsub
push
dec
cmc
add
ss
dec
add
mov
fucomip
arpl
xchg
fiaddl
xor
cmp
cmp
pop
or
lret
int
cmpsl
jns
ret
scas
cmp
enter
pop
cmp
jb
movsl
leave
int3
loopne
sub
pop
fistpl
mov
jmp
sub
ja
leave
arpl
add
mov
movb
es
sub
adc
and
pop
add
lods
xor
test
lret
lahf
xlat
mov
imul
enter
pop
push
and
xor
add
sbb
aad
jg
lahf
frstor
cmpsl
call
imul
push
fs
sub
sahf
js
rorb
movsb
inc
cmp
jo
inc
nop
dec
nop
sbb
cwtl
rclb
gs
pop
ficompl
cmc
sub
leave
xchg
jno
and
or
hlt
mov
mov
inc
stos
pop
lahf
addb
ret
gs
fs
fdiv
and
gs
pop
mov
je
cli
pop
into
addr16
push
push
mov
inc
xchg
aam
mov
sbb
mov
lds
mov
mov
loop
cmp
in
dec
add
mov
jnp
cwtl
in
fisubrs
add
mov
shr
fldcw
dec
cltd
xor
test
adc
cmpsb
inc
cmp
daa
or
and
hlt
stos
inc
sbb
or
sbb
or
lret
adc
addr16
into
aaa
ss
adc
in
push
xchg
and
mov
jb
dec
jae
fldenv
add
jmp
ss
push
adc
xchg
stc
loop
test
xor
lea
lret
or
rcll
mov
fs
cmp
cld
testl
lods
jbe
sub
cmpb
add
shr
lret
sub
jle
xor
fnstenv
dec
rolb
aas
int3
xchg
mov
mov
movsl
ss
sbb
pop
adc
and
sbbl
xchg
pop
icebp
jecxz
fnstcw
mov
cmp
xchg
sbb
sub
in
jecxz
lcall
add
out
dec
mov
fs
das
gs
rcll
pop
jle
jne
int
pop
fidivs
mov
mov
cwtl
push
imul
dec
xchg
adc
inc
testl
mov
add
cmp
jl
mov
jnp
inc
jbe
mov
ror
fnstsw
jno
js
out
cmp
sub
enter
push
push
shlb
or
mov
scas
in
mov
scas
inc
arpl
mov
jne
inc
push
inc
cmp
daa
int3
or
outsb
push
xchg
add
mov
mov
adc
xchg
xchg
pop
xor
mov
int3
lahf
cmp
stos
xor
mov
mov
xchg
in
mov
ljmp
sbb
add
xor
push
lods
jl
test
cld
insl
js
test
sbbl
int
mov
nop
xchg
or
jl
jns
sbbb
inc
je
xor
push
fidivl
cld
ljmp
lcall
scas
xor
sub
sbb
jbe
cmp
stc
add
inc
rcl
add
push
lds
push
push
leave
add
dec
or
jne
xchg
iret
test
fwait
jle
cltd
mov
repnz
data16
das
add
mov
or
xor
repz
dec
add
jo
pop
mov
aad
sub
cmp
cs
fwait
loopne
jbe
adc
push
dec
stc
inc
mov
or
arpl
add
decl
insb
rorl
sbb
pop
mov
mov
adc
pushf
fs
mov
stos
mov
arpl
sub
and
fldl
xor
cmpl
mov
jns
inc
dec
fidivs
push
mov
ret
dec
fucomip
or
push
sub
and
xchg
cmc
mov
jo
xor
insb
les
jecxz
decb
adc
push
cmpsl
mov
mov
ja
push
xchg
mov
sarl
jo
xor
inc
nop
cmp
test
xlat
jmp
imul
test
insb
mov
cmp
mov
jb
cwtl
mov
shrl
rclb
dec
nop
jnp
mull
sbb
mul
lods
and
pop
aas
cltd
out
sbb
jmp
cmp
mov
xor
imul
pop
es
or
xchg
cmp
insl
add
mov
jl
hlt
sbb
push
sbb
dec
inc
in
adc
enter
pop
dec
pop
insl
lock
pop
pushf
test
mov
in
push
jecxz
shl
cmp
xchg
gs
sarl
xor
outsl
add
sub
into
ja
ja
push
or
pushf
daa
xchg
in
sbb
pop
jmp
xchg
mov
popf
dec
test
rcll
push
int3
or
fwait
test
pop
lods
fstps
pop
sbb
pushf
xor
leave
dec
xor
or
dec
dec
jge
cmc
push
xchg
inc
fsubr
mov
inc
popa
mov
dec
xor
push
sub
xor
cmp
fisttpl
cmpsl
sub
adc
fcmovbe
in
lock
or
sarb
adc
push
loopne
push
mov
pop
inc
out
xlat
inc
xchg
add
sbb
mov
push
hlt
fmul
add
ja
sub
popl
lock
add
icebp
cmp
jmp
xchg
push
mov
out
mov
pause
out
mov
inc
xchg
ss
jp
push
mov
mov
push
fistps
sbb
mov
stc
sar
lcall
jne
movb
xor
cmp
xchg
mov
inc
lret
outsb
loope
push
lret
sub
in
push
cmp
mov
loope
movsl
jnp
lock
testl
push
push
mov
dec
lret
mov
pop
out
or
iret
jg
and
test
ljmp
sub
je
mov
shrl
mov
sahf
jo
push
sub
aaa
lret
arpl
xchg
movsb
clc
repz
iret
sub
mov
insb
pushf
lcall
jno
mov
outsl
xor
sub
aas
or
lea
cmc
mov
out
pushf
and
mov
out
xor
jle
mov
jmp
outsb
outsb
pop
scas
add
push
xor
adc
dec
jp
into
sub
xchg
mov
dec
mov
mov
sbb
add
jbe
in
mov
fisubl
arpl
ds
sub
xchg
lock
mov
lods
js
and
cltd
scas
out
pop
and
test
out
imul
inc
xor
pop
popf
pop
loop
sbb
adc
sub
push
ljmp
adc
repz
push
jae
ljmp
pop
push
pop
ja
add
and
cwtl
mov
fldl
add
push
pop
or
sub
mov
out
jo
ja
popa
mov
test
insl
loope
adc
cmp
cmpsl
push
fstpt
mov
xor
pop
icebp
stos
out
aaa
jnp
push
add
cli
pop
insl
into
and
cmp
ljmp
rcrl
xchg
mov
push
lcall
pop
add
jp
test
xchg
mov
test
mov
xlat
mov
push
push
mov
loopne
inc
rcll
into
lock
sub
ret
testb
dec
fsubrl
sub
and
and
adc
adc
push
push
and
loop
out
enter
inc
xchg
int3
mov
and
inc
iret
xor
pushf
jp
pop
les
js
aam
out
leave
pusha
jbe
pop
cmovbe
cmc
insl
in
test
xchg
inc
cld
lahf
in
test
fwait
jbe
clc
xchg
jno
sub
jnp
ret
cmp
xchg
xor
push
insl
sub
pop
ljmp
xor
mov
push
sbbb
out
or
jg
mov
inc
jmp
js
inc
lahf
in
xchg
and
push
mov
gs
les
sarb
lcall
mov
mov
or
xor
dec
sub
adc
mov
push
pop
dec
loop
push
push
in
xor
add
sub
lret
pop
fistl
aaa
std
shll
je
mov
test
and
sub
movsl
es
inc
loopne
mov
push
arpl
es
mov
sub
ljmp
push
add
in
push
mov
jns
mov
xchg
push
enter
daa
test
rcrl
in
cmp
inc
sbb
movsl
stos
sub
xor
jle
lea
popa
sarb
icebp
mov
pop
sbb
or
push
add
push
loopne
jle
cmp
mov
dec
movsb
bound
push
push
movsl
nop
add
xchg
or
int
enter
push
push
int
ds
pop
sbb
sub
mov
out
bound
imul
inc
mov
outsb
repnz
mov
lret
ss
inc
xor
lods
movsb
or
mov
stos
out
sub
outsb
scas
mov
test
ret
out
cmpsb
lcall
push
and
loopne
sub
test
popa
inc
fwait
stos
cmp
jbe
aam
adc
jb
stc
negb
adc
mov
xchg
xchg
fs
ret
lahf
push
inc
mov
jnp
std
aad
test
pop
movsb
sar
fsubrp
xchg
adc
sub
sub
popf
sub
in
leave
or
sub
mov
push
and
sbb
scas
mov
push
ficoml
cmp
hlt
cmpsb
xchg
jl
xchg
inc
mov
or
dec
dec
mov
and
hlt
sbb
in
in
xor
cli
add
das
sub
idivl
cwtl
pop
test
and
sub
jp
hlt
pop
mov
adc
addr16
dec
movsb
aas
jb
pushf
mov
or
adc
or
fwait
mov
stos
or
ljmp
jle
pop
lea
lret
mov
cs
shlb
jno
sub
mov
sub
jg
pop
pusha
adc
icebp
lods
xchg
lds
mov
inc
into
outsb
movsb
sub
mov
lock
or
mov
pop
cmp
addr16
mov
adc
loop
push
orb
mov
adc
int3
dec
sbb
jecxz
jae
dec
inc
xchg
push
add
push
aas
pushf
add
pop
mov
insl
add
mov
lea
fdivs
ds
test
cld
shlb
xchg
xchg
push
rcll
push
dec
xlat
sbb
inc
int
mov
in
mov
push
mov
dec
aas
ljmp
dec
incb
ljmp
xchg
pop
lret
dec
and
pop
jp
sahf
xchg
jmp
push
sti
in
aam
mov
lret
pop
aaa
cwtl
shlb
or
xor
add
or
cld
cli
xchg
das
pop
or
dec
push
loop
in
and
fcmove
mov
inc
add
dec
cmp
add
cmpsl
stc
jnp
flds
out
int
dec
addb
cmp
movsl
movsb
pusha
mov
rcll
xchg
pop
mov
sbb
cmc
sbb
cltd
mov
and
sbb
aam
pusha
cmp
and
in
or
pop
xchg
xchg
sub
pop
xchg
mov
pop
cmp
insl
leave
mov
jbe
bound
mov
push
repz
rol
lea
push
and
or
loop
sub
idiv
or
sbb
cli
xchg
rolb
push
push
mov
push
in
mov
shlb
cwtl
test
sub
fs
sbb
push
adc
imul
sub
pop
or
jmp
lcall
pop
jae
das
je
ljmp
setno
add
pop
and
add
movsl
pop
sti
mov
dec
lds
fisubrs
inc
push
cmp
dec
dec
mov
lods
or
or
lods
pop
pop
add
mov
dec
mov
es
xor
mov
push
adc
cmp
in
jae,pt
rcll
popf
mov
push
sub
jge
xchg
xchg
xor
ficoml
sti
sbb
in
jp
add
leave
xchg
sbbl
add
mov
les
jae
js
mov
cli
scas
cmp
jge
lea
sub
mov
cmp
push
dec
call
sbb
cld
fadds
aad
jmp
push
ret
rclb
in
adc
jge
dec
xor
xchg
add
or
mov
jle
mov
sub
popa
rcl
sbb
dec
mov
mov
inc
sarl
scas
add
push
shrb
or
xor
push
xchg
pop
jnp
out
mov
inc
adc
aaa
pop
ret
lcall
call
mov
cmp
inc
mov
cmp
cmp
test
popf
idivl
ja
and
mov
jne
mul
cmp
cmpsl
ds
sbb
addr16
cmp
add
add
imul
and
push
inc
xchg
mov
sub
fcoms
daa
into
fistpll
mov
mov
mov
dec
push
stos
inc
ja
cli
mov
adc
xchg
std
dec
xlat
addr16
jo
inc
ficompl
cmp
pop
fnsave
cli
mov
xor
dec
push
dec
das
sar
fmul
inc
cld
fnsave
mov
jle
mov
jbe
adc
fcomps
adc
imul
fdivs
fdivs
insb
out
xor
mov
mov
sub
mov
sbb
test
mov
movsl
mov
filds
and
gs
sub
xor
lods
dec
repz
sbb
sti
in
popa
fcoml
push
mov
bswap
or
insl
push
int3
cs
pop
out
iret
cmp
out
and
and
jb
jae
push
mov
jmp
dec
lahf
hlt
xchg
lock
int3
adc
imul
inc
fmull
popa
lret
loope
imul
dec
jg
push
popa
bound
sbb
stos
in
fldenv
test
pop
imul
mov
outsb
mov
mov
mov
push
dec
pop
aam
or
mov
aas
cmpsl
sti
pop
popf
stos
lea
mov
mov
jmp
dec
mov
loopne
nop
addl
xchg
hlt
jp
push
mov
push
movsl
dec
mov
xchg
jecxz
cld
test
mov
adc
mov
in
cmp
sub
fdivrs
les
jmp
iret
cltd
rcll
sbb
mov
ds
mov
std
jb
cmp
pop
and
hlt
mov
mov
xchg
mov
cld
cmc
and
out
in
mov
jae
dec
mov
push
add
pop
call
cmpsl
push
test
dec
ljmp
mov
dec
popf
inc
mov
mov
push
cmpsb
out
es
clc
cmp
pop
xor
cltd
hlt
xor
sub
push
ljmp
sub
push
push
nop
insb
mov
pop
dec
mov
sarb
lods
arpl
cmp
xor
sub
mov
iret
cmp
inc
dec
shll
loope
add
lods
adc
imul
pushf
mov
push
cmp
aas
outsl
pop
mov
jnp
cwtl
add
ror
dec
ret
xor
loop
cmp
or
xchg
or
ret
mov
pop
jmp
mov
cli
call
jae
mov
ss
add
pop
pop
out
push
es
pop
fistps
lds
push
pop
lods
test
push
clc
sub
mov
dec
cs
adc
xor
inc
dec
cmpsb
or
xchg
mov
sbb
popa
jle
add
out
or
aas
dec
mov
test
insb
mov
xlat
jnp
jle
mov
sbbl
or
cltd
push
and
add
pop
into
clc
jno
loope
out
xor
repnz
scas
hlt
push
jg
xor
mov
lods
xchg
loopne
repz
jp
insl
stc
clc
lds
pop
jne
or
jg
xlat
bound
mov
out
movsl
mov
in
xchg
sbb
sbb
push
imul
fdivrl
shll
sbb
repz
jns
fldt
leave
ss
jno
stc
dec
add
inc
xchg
dec
jge
daa
int
ja
xor
shlb
jecxz
adc
ret
cli
stos
ficoms
lock
adc
jmpw
jmp
cmp
cmpsb
shr
fnop
aas
das
popf
adc
inc
xchg
pop
dec
js,pn
les
xchg
jns
inc
xor
sahf
aas
or
jecxz
sbb
push
pop
sub
sub
dec
xchg
jno
clc
adc
cmp
rcll
mov
sahf
leave
mov
cli
mov
mov
ret
test
pop
jns
push
mulb
insb
out
test
popf
ret
xlat
orb
lods
xchg
int3
and
fdivrp
pop
aad
sbb
or
cmpsl
fidivrl
addr16
mov
mov
sub
rorl
shl
xchg
sub
lcall
mov
add
mov
cwtl
mov
fdivl
lcall
mov
and
mov
pop
lret
aaa
loope
out
stos
cmp
inc
adc
push
fdivl
lret
nop
or
jle
in
jp
dec
pop
movsl
in
lret
xor
clc
repz
push
std
mov
out
mov
test
pop
mov
cmp
inc
mov
or
pop
mov
sbb
xor
mov
xchg
jno
mov
addb
loopne
arpl
dec
insl
movsb
xchg
in
cltd
fwait
mov
test
subl
dec
daa
add
inc
jo
outsl
xchg
rclb
in
xchg
lods
stos
push
or
fldz
jo
jmp
pop
mov
sarl
pop
popa
stos
xorb
test
out
add
cmpsb
imul
mov
lods
push
sub
mov
add
inc
fwait
call
xchg
enter
add
jbe
out
sub
rclb
xlat
push
mov
xchg
cmp
dec
xchg
cmovnp
sbb
outsb
adc
sub
fsub
loope
sbb
mov
dec
pop
sub
dec
out
push
jecxz
cli
ja
sub
mov
loopne
mov
inc
cld
dec
aam
sub
dec
jmp
mov
cwtl
mov
insl
out
cmp
sbb
ljmp
cli
xchg
xchg
pushf
punpckhwd
ffreep
test
inc
xor
sbb
xchg
lea
les
popf
arpl
xor
cld
arpl
lea
lock
xchg
repnz
nop
inc
push
jbe
enter
mov
adc
xchg
push
inc
adc
cmp
sub
arpl
loope
push
fadd
and
loopne
cld
cwtl
addr16
sbb
enter
mov
cwtl
mov
outsb
sbb
clc
inc
mov
incl
aaa
sbb
js
sub
jo
sub
pop
xchg
hlt
inc
scas
add
aas
sbb
adc
or
fnstsw
sub
mov
das
and
xor
mov
mov
ficompl
inc
addl
lods
mov
call
fwait
dec
negb
jp
mov
or
pop
inc
sahf
or
in
das
or
cwtl
pop
mov
repz
mov
xchg
fisttpl
in
jne
pop
jle
stc
xor
and
cltd
mov
mov
scas
test
mov
into
mov
dec
int3
sti
adc
enter
les
pop
sub
rcrl
aas
pop
mov
mov
dec
xchg
cltd
push
mov
pop
stc
mov
xchg
mov
test
add
fsubrl
jbe
xchg
and
repz
or
loope
inc
xchg
xchg
out
mov
pusha
sub
adc
bnd
addb
jbe
and
lea
loope
fiaddl
in
scas
lret
gs
imul
mov
cmpsb
iret
push
mov
popf
sub
cmp
ljmp
pop
clc
cwtl
imul
dec
popf
dec
in
scas
adc
mov
jge
ljmp
sbb
es
cmp
dec
in
adc
jg
jb
sbb
or
pusha
inc
sbb
inc
sub
bound
icebp
mov
lcall
sbb
ljmp
mov
sbbl
les
in
mov
je
push
mov
or
xchg
shrl
mov
dec
mov
jge
cmp
mov
and
cld
mov
inc
rcrl
out
gs
pushf
inc
sub
dec
outsb
or
xchg
js
fdivrl
jp
icebp
pushf
movsl
jne
dec
adc
lds
xchg
jb
addr16
mov
pop
cmp
or
loop
gs
fsts
pop
dec
shl
mov
pop
jle
sub
popf
cmp
xchg
fcomp
jb
sti
inc
mov
xchg
push
dec
push
adc
test
xchg
stos
pop
lea
out
mov
fwait
inc
fdivrl
loope
mov
lds
fldenv
in
jae
je
dec
add
push
jo
mov
pop
fstpt
sub
push
push
xor
sbb
sub
fwait
pop
xchg
je
testb
cld
or
aas
mov
imul
push
jae
xor
hlt
out
frstor
pop
cwtl
addl
xor
mov
push
addb
icebp
daa
inc
fisubrs
mov
jno
mov
inc
mov
mov
push
mov
mov
pop
loopne
and
jl
sub
int
xchg
dec
xchg
mov
cli
sub
mov
dec
sub
pushf
xchg
cmp
xchg
std
and
out
push
mov
cmp
pushl
outsb
xchg
int3
js
xchg
in
mov
and
sar
inc
adcl
aaa
xor
push
je
jl
repnz
pushf
xchg
cmp
shll
mov
outsl
add
mov
dec
dec
shl
js
int3
jle
push
out
ds
jecxz
push
fs
addr16
fs
call
sahf
jb
jecxz
dec
ljmp
aad
mov
pushf
or
rorb
leave
sub
aam
and
add
lods
xor
movsl
adc
dec
push
ret
sahf
mov
bound
in
pop
sbb
out
std
int
or
xor
push
adc
mov
dec
pusha
inc
lcall
add
pusha
int
insl
push
xor
jp
insb
neg
xchg
jp
mov
cmp
cmp
and
cld
mov
cmpsl
cmp
push
in
mov
pop
or
inc
xchg
dec
fwait
repz
cld
imul
xor
icebp
sbb
add
xor
cmp
aam
test
jae
adc
js
sbb
adc
lock
mov
aas
mov
mov
jnp
loope
popa
dec
ret
aam
push
loope
daa
leave
lds
movsb
rorb
or
sbb
push
dec
inc
mov
xchg
add
and
and
push
dec
mov
lret
cs
ds
pop
dec
cmc
mov
pop
fcoms
out
inc
mov
in
or
jge
sub
add
mov
repz
push
add
cs
cmp
mov
mov
in
adc
fisttps
inc
xor
sbb
push
push
push
ds
in
mov
push
or
imul
cltd
cmc
cmp
mov
icebp
mov
xor
mov
jp
loopne
push
or
pop
call
dec
out
push
ret
push
hlt
rcr
push
adc
xchg
sbbb
jae
jecxz
repnz
ss
daa
dec
sub
or
in
add
test
enter
scas
adc
test
xchg
cltd
xor
out
and
jecxz
sti
pop
add
jl
push
mov
push
incl
in
dec
add
outsl
sub
shlb
out
dec
or
shlb
dec
mov
sbb
mov
xor
ret
repnz
xchg
or
jbe
cmp
in
bound
mov
lds
inc
xor
push
xchg
sub
mov
aam
mov
cmpsb
and
pop
addr16
cmp
and
outsb
stos
mov
xchg
sub
push
fs
stc
sbb
fwait
sbb
ret
sub
sub
into
sbbb
sbb
rcll
push
loopne
inc
leave
gs
leave
mov
pop
mov
ja
adc
pop
scas
xor
inc
data16
and
cmpl
push
and
xor
test
or
int
cli
xchg
jle
in
mov
push
adc
mov
fiadds
push
rorb
out
lahf
mov
adc
xchg
pusha
stos
cmp
and
fs
mov
pop
pushf
mov
cmp
lock
mov
adc
enter
xchg
pop
xor
gs
cmp
shl
mov
push
jle
sbb
icebp
popf
jo
test
orb
xchg
rolb
shlb
insl
hlt
sub
and
arpl
adc
cmp
outsl
ret
cmp
sahf
pop
scas
jmp
jno
adc
sub
dec
and
enter
insb
mov
xor
test
imul
inc
ss
xchg
mov
pop
icebp
xlat
push
cmp
leave
les
mov
pop
inc
add
xchg
cmpsl
icebp
mov
pusha
jne
pusha
das
fcomps
sbb
mov
mov
sar
das
sbbb
and
into
jecxz
aam
mov
movsb
xlat
jnp
mov
inc
mov
imul
push
loop
adc
cmp
add
fmuls
pop
mov
scas
imull
and
push
jne
movsb
popf
xchg
icebp
jecxz
test
in
out
xchg
int
jae
stc
into
dec
lret
ss
cmp
push
dec
scas
jmp
and
out
das
stos
sbb
data16
jl
fxch
pop
ret
add
mov
adc
jb
or
std
jns
repnz
xor
arpl
pop
or
jmp
lret
push
not
ret
loop
out
sub
jp
adc
mov
stc
push
xor
jl
adc
mov
cmpsl
test
xchg
or
and
mov
mov
cmp
lds
ja
es
jmp
aaa
fisttps
sub
and
stos
pop
mov
dec
pop
in
xchg
aam
cmp
cmpsl
pop
daa
repz
dec
add
xor
jl
xor
sbb
dec
sub
mov
mov
dec
mov
cmc
fidivl
aas
mov
mov
clc
pusha
mov
push
mov
movsb
lds
pushf
inc
icebp
lcall
or
xorb
sub
mov
roll
or
xchg
xchg
mov
push
data16
dec
push
bound
ja
and
cmp
mov
fstps
psllw
pop
test
push
iret
sub
mov
ds
data16
mov
or
mov
mov
iret
cmp
cmp
jbe
inc
lods
jae
adc
adc
jae
xor
mov
and
imul
cmpsl
mov
sbb
pop
jne
inc
loopne
insl
fildll
jnp
cmpsl
xchg
jmp
mov
fnstenv
jge
dec
cmp
shrl
cmp
icebp
cmp
push
sbb
imul
dec
mov
mov
loopne
pop
dec
jge
lret
push
cltd
aaa
adc
cmc
push
inc
sti
add
push
add
popf
ss
xchg
idivb
ja
fpatan
popa
das
fdivp
jae
fbld
aam
fstpl
adc
insl
dec
mov
aaa
sbb
cmpsb
dec
je
pop
mov
or
pop
in
and
outsl
xchg
jne
andl
js
sbb
cmp
pop
aad
mov
sub
inc
leave
sbb
into
fdivs
jno
xor
jge
ss
mov
add
ja
pop
jne
pop
xor
fistl
push
mov
jae
icebp
mov
loope
sub
pop
jge
pop
xor
mov
aam
in
jb
push
mov
enter
push
pushf
mov
and
mov
mov
popa
fs
cmp
bound
insb
cwtl
add
int
movnti
dec
test
jae
or
and
repz
test
fsts
jle
in
lods
cmc
mov
repnz
add
jge
ss
loopne
shr
sti
sahf
insl
add
ds
cmp
dec
mov
iret
inc
notl
es
cmp
aas
push
sbb
jbe
ds
mov
out
in
inc
xchg
mov
lock
jo
stos
movq
enter
or
daa
mov
movsb
xchg
sbb
dec
addr16
xchg
pushl
ret
cli
outsl
jge
jne
out
dec
enter
push
nop
add
mov
inc
daa
fcmovnu
loop
mov
push
and
xchg
jnp
outsb
clc
call
mov
inc
push
jae
dec
lcall
out
push
je
sbb
int3
mov
rcr
mov
push
lret
mul
shr
and
mov
stos
cmc
jnp
xchg
push
rcrl
xchg
aam
adc
or
vmread
jp
xor
sbb
and
xor
out
add
jne
fmull
ret
mov
push
push
stos
xchg
rcrb
jmp
xor
test
mov
rcl
or
mov
nop
sbb
or
jae
mov
ljmp
jb
lods
and
pop
mov
gs
push
repz
xchg
jb
int3
xchg
fnstsw
dec
cmp
xchg
testl
mov
popa
push
push
outsl
pop
xchg
notl
js
cmc
mov
popf
xchg
popl
or
call
rcll
push
mov
hlt
mov
sub
stos
or
sar
clc
scas
jbe
jns
fcoml
xchg
in
outsl
push
loop
add
jnp
mov
or
daa
cmpsl
mov
ss
sub
lahf
cmp
loop
mov
loope
cmc
add
mov
out
aaa
rolb
jmp
js
repnz
sbb
add
pop
dec
or
or
add
out
mov
mov
inc
inc
jo
test
cmc
ljmp
xor
push
iret
add
cmc
cmp
mov
mov
popf
mov
insb
push
jae
adc
pop
shld
ja
adc
std
in
add
or
out
dec
xor
dec
cld
lods
rcll
jecxz
sbb
adc
cmp
lea
push
mov
lods
jns
mov
mov
mov
test
fsubr
lods
cmpsl
or
cmpsb
adc
mov
xor
xchg
xor
push
sub
inc
stos
inc
movsl
or
adc
pusha
test
ja
imul
pop
or
jmp
xchg
lods
shr
mov
int3
mov
adc
inc
sbbb
daa
aam
pop
push
mov
mov
sarl
call
add
inc
adc
scas
out
aas
ret
jg
xchg
icebp
shr
scas
faddl
jo
mov
jb
loopne
xor
dec
lock
sahf
lret
out
inc
lds
jp
and
mov
xor
and
rclb
mov
push
xchg
and
mov
cmp
add
jmp
cs
fdivrp
xchg
or
clc
inc
fdivrs
int3
inc
movsb
and
lds
adc
and
xchg
fcompl
xor
fcompl
movsl
jge
add
jle
sub
data16
xchg
mov
dec
je
sub
mov
pop
xor
sub
and
loope
ret
pop
jbe
jne
ret
sbb
mov
imul
mov
xchg
ljmp
stc
inc
dec
push
mov
mov
ret
xchg
repz
sbb
fildll
jae
pop
jge
or
outsb
push
mov
data16
ljmp
push
js
mov
bound
xchg
mov
xchg
sub
lds
jae
xor
mov
cmp
jge
add
cld
sub
jg
pop
hlt
inc
lods
inc
lret
notb
and
pop
inc
push
sarl
shll
and
fisubl
mov
fnop
xchg
inc
xchg
clc
outsl
push
lods
xchg
das
xchg
aad
imul
push
lcall
shrl
cld
mov
mov
in
jns
pop
add
in
sbb
xor
inc
addl
or
aad
into
xor
jae
adc
cltd
and
mov
inc
mov
jnp
jnp
sbb
out
pop
pop
pop
in
pop
jno
sub
inc
or
mov
xchg
mov
test
mov
push
add
push
or
sbb
jge
cli
inc
xor
andl
or
mov
out
ss
in
xor
or
bound
xchg
inc
sub
insl
leave
push
ljmp
frstor
les
aad
mov
loope
jbe
xor
les
test
xchg
mov
out
pop
add
sub
fmul
addr16
fbstp
stos
les
mov
mov
inc
push
pop
pop
lds
push
out
lock
push
jge
xchg
xchg
xchg
int
xor
pusha
sti
fwait
pop
xchg
mov
jno
mov
fdivr
adc
inc
pop
ja
sti
clc
jo
mov
icebp
mov
mov
push
popf
pop
rep
lds
repz
or
jo
adc
mov
push
pop
sbb
into
xor
push
out
add
stos
pop
loope
dec
shll
std
in
lret
inc
aam
xchg
and
mov
jns
in
sbb
in
in
hlt
cmp
cmp
mov
inc
add
mov
and
mov
xchg
rolb
aad
mov
push
sti
roll
lods
pop
lods
mov
mov
clc
push
push
add
inc
ds
arpl
cmc
movsl
or
cltd
mov
sub
cwtl
dec
jo
in
jo
dec
hlt
cli
or
cwtl
loope
xor
and
pop
movsb
cmp
outsl
test
xchg
ja
push
data16
mov
pop
sbb
fcomip
xor
popa
sahf
add
cmpsl
cwtl
out
or
lock
jno
or
ja
aad
jmp
repnz
in
icebp
jb
xor
loop
frstor
push
inc
pushf
scas
xchg
dec
mov
cmpsl
in
outsl
in
dec
rcrb
out
inc
xor
pop
xchg
fdivrl
aaa
xor
inc
xor
das
test
lods
dec
arpl
jae
and
mov
mov
jbe
jno
test
mov
pop
in
sub
mov
dec
mov
inc
xor
stos
xor
pop
cmp
in
into
cwtl
mov
test
fsubp
push
sub
loope
mov
inc
stos
movsl
popf
jge
lret
in
int3
out
addr16
lods
mov
jno
orl
pop
jae
pusha
cmp
jle
sti
sub
pop
pop
mov
dec
mov
test
inc
leave
test
sahf
clc
mov
test
jg
dec
loope
push
sub
enter
xchg
dec
xchg
xor
and
push
push
xor
dec
lss
repz
and
insb
pop
jae
mov
aas
sub
mov
add
nop
and
lea
ljmp
in
into
jno
int
mov
fbld
dec
pop
dec
sahf
jl
int
cwtl
adc
xchg
sbb
cmp
push
mov
push
jmp
push
add
sahf
popa
cmp
push
dec
out
and
fwait
les
lea
add
mov
bound
add
push
popa
jmp
fnstenv
jo
lret
cltd
jbe
add
in
cld
xor
mov
jp
cs
popa
sbb
fs
fdiv
jg
mov
fistpll
and
jl
ds
shr
add
mov
outsb
cltd
jae
out
insb
cmp
inc
cmp
sbb
loope
mov
add
in
scas
or
xor
and
adc
insl
cmp
mov
into
outsb
mov
cltd
cmpsb
loop
out
fcom
jecxz
sub
jnp
mov
cmc
cmp
or
ret
dec
es
insb
pop
nop
pop
addb
sbb
pop
dec
xor
xor
aaa
aam
dec
sbb
mov
jo
push
insl
fidivrs
cmp
pop
ret
sbb
and
imul
sbb
adc
daa
pop
sub
dec
xchg
in
push
mov
pop
sti
inc
dec
cmp
arpl
jo
test
lret
cmovo
movsl
out
outsb
mov
ja
imul
xor
lret
test
lahf
xchg
inc
mov
mov
push
mov
sub
insb
repnz
scas
movb
and
lret
cmc
push
mov
xor
pop
in
mov
testl
cwtl
push
sti
icebp
push
pop
movsl
divl
jbe
nop
add
mov
or
sbb
hlt
imull
out
daa
ret
dec
xchg
icebp
mov
int3
fstpl
mov
sbb
aad
and
lds
and
mov
jo
xor
jnp
cld
and
cltd
inc
shl
jp
xchg
stos
mov
dec
clc
fs
xor
push
bound
insb
push
jne
fdivp
cmp
push
lods
pop
and
sbb
scas
mov
push
mov
and
and
push
xor
mov
jmp
fildl
sub
jmp
lret
cmc
out
and
cmp
lcall
stos
call
aas
data16
lcall
lahf
shlb
push
andb
into
dec
lock
lea
push
mov
inc
sbb
shll
adc
jl
leave
lahf
sti
push
pop
push
sbb
push
pop
lods
push
aam
lods
dec
cmpsl
dec
ret
outsl
xchg
push
mov
pushf
sbb
scas
cld
repnz
roll
xchg
inc
lock
xchg
pushf
loope
xor
dec
les
out
inc
sbb
add
inc
movsl
jns
push
clc
ss
test
dec
xor
popf
in
in
sbb
xor
sub
repz
mov
mov
add
xor
xor
xchg
js
mov
push
add
aam
pop
js
daa
subl
and
jmp
mov
movsl
outsb
jle
jmp
add
push
xor
dec
xor
xor
dec
bnd
ficoml
clc
std
push
repz
out
sbb
cmc
cmp
sbb
cld
cmp
cmp
test
adc
test
repnz
pop
cmp
cmp
out
stos
add
lea
jecxz
pop
xor
insb
ds
jge
lret
dec
imulb
cmpsb
loopne
push
nop
cmpsl
xor
sbb
cld
and
adc
mov
insb
xlat
mov
push
cltd
mov
dec
test
cmp
cld
test
cltd
xor
xchg
pusha
std
jge
scas
sbb
mov
loopne
sub
inc
cmp
jo
nop
sbb
push
aad
lods
mov
pushf
push
test
sub
pop
aad
and
pop
test
clc
and
pop
fwait
mov
add
jo
lods
call
xchg
or
rol
clc
cmp
push
inc
jo
jl
mov
popf
mov
loope
aas
scas
jb
mov
cmp
xchg
add
mov
inc
adc
testb
inc
fs
pop
and
iret
cmc
xor
xchg
sub
cld
dec
push
popa
lret
cmp
jo
leave
xor
mov
add
addb
and
ljmp
cmp
xchg
sub
adc
sub
mov
test
dec
frstor
jmp
cwtl
jbe
sahf
lahf
sbb
pushf
jo
rolb
je
cmpl
mov
sub
sarb
movsb
outsl
sbb
push
ljmp
cmp
pop
jmp
pop
pop
inc
fidivs
lods
cli
cmp
mov
jno
add
fwait
out
push
shlb
jns
push
test
bound
push
sub
inc
add
mov
push
or
rolb
js,pt
push
mov
mov
cmp
mov
xchg
mov
mov
inc
mov
mov
test
xchg
mov
pop
jmp
dec
js
setle
and
pushf
out
orb
mov
sub
outsl
imul
xchg
out
test
pusha
adc
mov
push
dec
int
jl
jne
test
js
mov
jp
sub
jge
push
popa
cwtl
ljmp
aaa
cltd
mov
lea
add
push
cmp
fs
cmp
test
xor
xchg
or
fwait
outsb
xchg
inc
lock
testb
ljmp
or
pop
sbb
loopne
test
jno
xlat
fxch
jnp
in
sbb
cmpb
mov
test
jmp
mov
roll
repnz
mov
mov
mov
sbb
lock
mov
cli
push
mov
jg
sub
xor
xchg
pop
es
mov
insb
pop
aaa
or
hlt
lods
or
fdivrs
cmpsb
insb
sub
fidivs
inc
ffree
adc
insl
mov
add
push
mov
jecxz
shll
popf
sub
sbb
pushf
push
and
jmp
or
aas
mov
int3
adcb
inc
test
add
ss
xorb
in
mov
adc
xor
xchg
inc
mov
out
mov
sub
push
or
scas
flds
cmpsb
cmpsb
adc
cmpsb
add
add
hlt
xchg
inc
push
shl
dec
mov
lods
aaa
ljmp
pop
test
in
xchg
or
psrad
imul
cmp
lret
stc
adc
repz
movsl
mov
inc
cli
aas
push
je
cmc
add
das
pop
cmpsl
lret
pop
mov
xor
ljmp
mov
adc
idiv
lret
xor
adc
add
jl
leave
std
mov
push
aaa
imul
push
outsb
sbb
cs
stc
push
xor
dec
push
or
xchg
xchg
sub
mov
out
sbb
lods
xchg
inc
lea
lds
jno
scas
xor
cmp
inc
dec
mov
std
push
je
outsb
and
fmull
pop
xor
stos
jle
inc
je
push
push
shll
rcrl
add
push
jmp
or
push
adc
shr
jge
jae
js
es
and
mov
xlat
xchg
dec
push
fstl
mov
daa
pop
fwait
pop
push
inc
int3
daa
aaa
das
mov
mov
dec
dec
jmp
jmp
in
adc
jns
in
mov
cmp
dec
mov
outsb
lcall
sahf
in
gs
pop
clc
arpl
jle
fwait
inc
je
pop
add
inc
pop
ret
addb
pop
jbe
mov
xor
sbb
sbb
jb
pushf
dec
inc
jecxz
outsl
std
cli
xchg
dec
out
or
pop
mov
push
sub
lret
stos
andb
jp
sbb
popa
jns
inc
mov
mov
movsl
dec
ret
cmp
push
imul
out
icebp
ret
mov
mov
or
xchg
cmpsb
xchg
shll
fs
shrb
stos
sti
aaa
push
mov
into
or
out
loope
lcall
in
clc
lret
sbb
lret
jbe
push
clc
mov
dec
jl
out
sub
sub
shl
xchg
pop
and
pushf
dec
leave
insl
rclb
negb
mov
xchg
addl
push
lret
push
mov
mov
push
aas
or
xor
out
dec
pop
in
dec
jns
ret
xchg
mov
test
push
andl
insb
push
int3
mov
out
pop
jmp
xor
pop
mov
into
negb
arpl
and
cmpsb
push
pop
push
jle
sub
cmpl
push
mov
outsb
gs
and
sub
out
dec
imul
dec
xorl
jl
fs
ljmp
sub
sub
jb
jae
neg
movsb
adc
outsb
pushf
adc
mov
addb
sti
aad
pop
pushl
xchg
and
adcb
out
fdivl
dec
pushf
and
in
add
inc
loopne
sbb
xchg
mov
js
andb
jge
xchg
loope
out
imul
pop
adc
jmp
pop
mov
mov
jecxz
dec
sbb
push
mov
std
dec
and
icebp
mov
lcall
pusha
mov
jnp
std
jecxz
imul
loopne
jae
and
xor
ljmp
xchg
add
xor
and
cli
popa
scas
push
mov
and
into
xlat
loop
pop
push
add
cmp
in
pop
ret
pop
or
and
out
jmp
les
rcrb
aad
mov
or
cmpsb
nop
je
es
push
sbb
cmp
leave
repz
shl
std
stos
outsl
jge
sub
sbb
hlt
cmp
leave
xchg
test
push
scas
out
test
add
and
mov
movsl
rcr
std
inc
pop
pop
ret
dec
mov
or
add
sbb
dec
cmp
jnp
mov
repz
fbld
outsb
sbb
cmc
stos
lcall
push
icebp
movd
sbb
daa
pushf
cltd
stos
mov
stc
sarl
mov
xchg
mov
xchg
sub
mov
mov
pop
leave
or
insb
mov
loop
and
inc
jp
mov
in
sub
xchg
mov
cli
cs
push
adc
adc
add
jns
inc
sub
ja
cmc
xchg
mov
mulb
sub
lret
scas
xlat
scas
dec
inc
mov
pop
popf
xor
incl
adc
test
clc
adc
xor
xor
test
pop
mov
cltd
mov
ss
or
stos
pop
cmpsl
inc
jbe
xchg
outsb
inc
ret
dec
cmpb
lahf
mov
ret
inc
mov
push
ret
js
pop
and
and
sub
jecxz
dec
dec
inc
sbb
ficomps
inc
test
mov
pop
stos
mov
les
add
mov
out
mov
or
push
out
push
jno
mov
sti
ficoms
jnp
insl
mov
hlt
cmp
mov
clc
sbbb
jno
mov
divb
lds
jge
push
xchg
cmp
cwtl
pushw
push
and
pop
lahf
pop
idivl
push
cmpsb
scas
test
mov
aad
aam
sbb
mov
push
popf
cwtl
flds
pop
shr
xchg
imul
es
mov
adc
or
nop
xchg
xchg
pop
xchg
inc
jnp
adc
mov
cld
rorl
out
hlt
bound
nop
sti
outsl
pop
icebp
cld
pop
gs
enter
jnp
adc
out
sbb
shr
mov
pop
sub
imul
mov
inc
or
cwtl
ja
mov
cmpl
shll
sar
sti
jmp
lret
mov
fisubl
cmpb
jne
cltd
adc
push
cwtl
cmc
adc
rcrb
inc
movsl
xchg
push
imul
dec
rcrl
ror
dec
in
lcall
ret
out
mov
repnz
insl
jge
sahf
push
scas
add
mov
sbb
call
mov
nop
jle
push
ret
pop
lret
mov
jnp
sub
jae
insl
jmp
pop
fs
gs
cli
dec
add
testl
adc
xor
mov
aad
inc
shlb
push
mov
or
jae
sub
in
pop
dec
sub
outsb
add
movsl
lods
lret
loop
cmc
idivb
mov
adc
cmp
dec
cpuid
push
mov
inc
movsb
push
lods
imul
ja
incb
ljmp
das
das
jb
aam
enter
outsl
fsubl
leave
mov
inc
push
shr
jmp
frstor
or
hlt
inc
lock
movsb
pop
and
and
lret
cmp
sahf
cmpsb
sbb
into
mov
mov
scas
ljmp
movsb
fcmovu
adc
jl
shl
imul
adc
pop
outsl
pop
ds
cmp
adc
jbe
movl
dec
rcl
popa
adc
mov
bound
and
lods
add
cmp
push
movsl
shlb
jmp
les
and
loop
or
fimuls
and
push
cmp
adc
nop
and
ss
sti
lret
roll
fdivr
sbb
jns
add
lds
ffreep
xchg
and
inc
push
cmp
jno
or
and
hlt
lcall
jmp
ror
insl
mov
pop
in
pop
in
jle
inc
push
xchg
and
testl
call
xlat
push
ret
mov
imul
rcl
sbb
fcoml
fwait
mov
fnstsw
fstl
ja
pop
test
sahf
or
mov
mov
stos
shlb
pop
outsb
repz
ja
xor
and
scas
dec
sti
fcmovu
mov
mov
xchg
pop
iret
add
push
orb
adc
mov
adc
ja
pop
cmp
lcall
xchg
and
jne
popa
jg
gs
jns
adc
cmc
pop
outsb
and
mov
cmp
adc
add
mov
or
pop
scas
stc
adc
or
pop
xchg
faddl
inc
jmp
inc
out
dec
xchg
add
pop
lods
jl
out
and
xchg
and
mov
imul
cli
pushf
cmp
add
xchg
xor
frstor
pop
dec
or
jg
shlb
or
dec
add
mov
into
popf
pop
sbb
out
xchg
call
subb
insl
and
mov
movb
lock
bound
add
sub
sub
std
sub
inc
gs
outsl
cltd
test
mov
stos
mov
inc
adcb
lcall
repz
test
fisttpll
data16
outsb
arpl
xchg
fidivrs
mov
push
mov
xor
mov
add
dec
add
sahf
pusha
xchg
mov
add
imul
addb
xchg
xchg
outsb
popa
mov
push
pop
outsb
inc
repnz
jnp
mov
out
ret
pop
xchg
daa
test
inc
xchg
inc
xchg
ret
sub
ja
add
in
movsb
inc
adc
stos
mov
popf
fists
adc
daa
mov
loopne
or
xchg
adc
mov
jno
mov
push
cmc
test
adc
jb
jmp
fwait
ret
ret
lods
aam
mov
das
xlat
mov
xchg
mov
dec
jle
jg
push
iret
fbstp
mov
rep
cwtl
das
xchg
test
das
stc
les
adc
repz
adc
scas
push
out
ja
jnp
mov
mov
into
cwtl
mov
or
push
iret
cmp
cmp
mov
loope
sbb
stos
cltd
ds
and
imulb
add
jge
or
or
adc
enter
addl
aaa
orb
sbb
mov
xchg
mov
lods
adc
xchg
ds
add
int3
sub
rol
pop
ds
push
outsl
mov
sbb
pop
enter
fdivrs
mov
movsb
fistl
mov
push
and
sbb
scas
outsl
andl
test
icebp
scas
jns
sub
jns
xchg
dec
cltd
cmp
idivl
icebp
push
cwtl
out
xchg
push
cmp
cwtl
cmpl
stos
out
and
adc
shlb
aad
pop
jno
daa
pop
jb
adc
add
js
adc
jp
jmp
popa
cmp
xchg
shrl
pop
xchg
hlt
pop
mov
push
dec
adc
or
mov
sbb
xchg
cmc
in
pop
test
cmp
andl
sbb
pop
jmp
jecxz
loop
sub
inc
clc
push
enter
popf
in
adc
inc
call
lcall
out
jns
int3
les
inc
data16
mov
punpcklwd
in
add
xor
cltd
mov
dec
jmp
cmp
add
scas
mov
pop
mov
std
or
sbbb
dec
jnp
dec
dec
and
or
sbb
mov
adc
add
shll
dec
pushf
aas
xorl
aad
movsb
fwait
lds
sbb
call
lea
mov
ss
cmp
es
imul
cmp
cmp
sbb
push
movsl
mov
arpl
xchg
outsl
pushf
dec
imul
iret
lret
or
loopne
adc
test
in
arpl
lret
jbe
roll
inc
fprem1
stc
pop
mov
in
xchg
push
xor
dec
icebp
sbb
outsb
xchg
iret
mov
addb
xor
pusha
scas
push
pushf
inc
addb
mov
int
insl
lods
or
sub
mov
pop
outsl
pushf
push
lods
inc
xor
out
mov
xchg
jo
das
mov
push
xchg
popf
add
and
mov
pop
cli
jnp
ret
icebp
mov
sub
pop
jno
push
pushl
adcb
cmp
insl
or
mov
test
ds
jnp
push
inc
jle
inc
insb
and
scas
dec
dec
aad
lds
mov
movsb
pop
push
insl
ljmp
xor
jg
sub
add
or
jae
nop
std
outsb
add
mov
cmp
push
add
pop
mov
aam
stc
or
orl
rorl
or
lods
push
ja
data16
xchg
inc
rorb
mov
js
mov
pop
cmp
imul
mov
jb
idivb
dec
and
mov
sbb
shrl
mov
sti
jo
inc
mov
sub
imul
loop
push
cmp
movl
jbe
outsb
in
outsb
xlat
fwait
daa
jns
jl
xchg
sub
pushf
sti
xchg
aaa
sub
and
xchg
dec
or
jmp
adc
and
loope
or
cli
out
popf
xor
aaa
outsl
subl
data16
es
hlt
test
sbb
xor
addr16
mov
inc
jmp
push
outsb
imul
fcomi
imul
jle
mov
outsb
test
mov
pop
mov
sbb
shl
mov
mov
adc
rolb
call
fidivl
pop
js
movsb
hlt
popa
add
mov
out
in
pop
pop
xorl
sub
sti
pop
xchg
cmpsl
out
shl
cmpsl
and
jle
lret
popl
jp
into
or
dec
movsl
lock
and
test
and
push
jecxz
lcall
jb
mov
rcrb
push
add
inc
mov
mov
cmp
add
mov
push
movsb
aad
jno
or
aam
fstpt
jle
rolb
aas
mov
int3
lods
ds
idiv
loop
int3
mov
fwait
imul
inc
aaa
clc
cmp
jl
push
lds
cmp
pushf
sub
arpl
call
jg
movsb
xor
stos
pop
shrl
fists
mov
mov
push
dec
mulb
push
sbb
push
movsl
int3
mov
cmc
repz
cmp
inc
dec
mov
out
mov
adc
dec
cld
jl
sbb
dec
mov
push
pop
jl
cmp
inc
mov
fisubs
add
aam
inc
repnz
and
popf
ljmp
mov
add
sub
xorb
adc
sub
leave
sbb
sti
std
out
mov
imull
pop
jno
pop
pop
pop
mov
or
popa
sbb
mov
add
insb
xorb
imulb
mov
inc
add
lods
insb
rolb
add
les
xchg
lcall
jmp
sub
imul
cmc
jo
push
in
inc
and
mov
dec
jge
pop
sti
es
or
ret
and
and
shrl
divl
stos
or
push
out
std
jne
out
aad
jl
imul
or
jmp
test
xor
add
pop
cld
lcall
lea
shlb
or
add
repz
hlt
mov
es
fisubrl
mov
fimuls
jbe
in
int3
sub
inc
loopne
mov
adc
out
movsb
ds
hlt
jmp
sbb
or
scas
aas
cmpsb
loope
rcl
adcb
pop
shrb
add
xchg
jne
cwtl
nop
loope
sub
mov
xchg
mov
pop
mov
iret
ror
push
sbb
addr16
push
cmp
push
cmp
adc
sbb
mov
fwait
enter
outsl
inc
cmpsb
pushf
data16
mov
cli
dec
push
inc
adc
ficomps
and
xor
push
std
fucomi
push
iret
das
int
adc
scas
mov
xchg
icebp
dec
pop
lahf
inc
and
mov
and
mov
and
daa
sahf
scas
or
in
fdivs
lods
sub
in
dec
out
jne
mov
xchg
insl
lret
lret
divl
pop
or
call
outsl
pusha
aam
jmp
mov
rcll
cs
xchg
loopne
push
jnp
inc
mov
shlb
les
or
adc
dec
pop
jbe
bound
jge
dec
xchg
mov
in
dec
pop
xor
fisubl
push
jecxz
bound
jl
idivl
in
push
push
xchg
dec
inc
into
jmp
mov
sub
inc
jae
sbb
int3
add
aaa
lea
mov
adc
out
dec
mov
jns
pop
jle
sub
push
push
xchg
mov
shll
icebp
or
jbe
and
in
push
ja
pop
cltd
xchg
pop
dec
or
lea
push
enter
xchg
popf
push
pusha
push
inc
add
out
sbb
sahf
or
xor
mov
fdivs
in
iret
lret
xchg
aas
sub
and
ret
clc
adc
call
push
adc
repnz
adc
jns
cmp
xchg
shlb
pop
sub
lods
arpl
shrd
cmp
mov
lods
inc
out
mov
out
cwtl
mov
mov
and
and
popf
xor
fsubrl
cmp
shr
push
xchg
js
out
shlb
in
sub
mov
adc
insb
jnp
xchg
xchg
imul
daa
xchg
mov
dec
les
cld
sub
or
xchg
rclw
jae
or
inc
xchg
pop
pushf
adc
bound
xchg
cmp
lods
xchg
enter
xor
sub
and
sti
cmp
iret
repnz
jp
pop
add
push
sub
xor
mov
lret
fnstcw
sub
test
out
or
add
addb
xchg
jl
push
test
imul
arpl
imul
jb
add
iret
ret
cmp
mov
dec
pop
and
mov
int3
xchg
mov
cmpsb
xor
sbb
rorl
out
ds
push
mov
enter
jg
jno
and
sti
push
dec
xchg
insb
jmp
clc
lods
lahf
push
int3
dec
mov
mov
loopne
inc
dec
repz
jbe
jecxz
xor
in
sub
dec
lcall
mov
xchg
dec
shlb
add
dec
jecxz
sbb
fmuls
cmp
insl
fwait
das
lret
loop
ds
push
daa
data16
jmp
outsl
mov
sbb
inc
mov
xor
mov
cmp
sbb
xchg
and
sub
and
cmpb
jnp
inc
mov
sti
xchg
dec
mov
and
sbbb
xor
or
into
sub
fdivr
inc
xor
xchg
mov
out
pop
xchg
pop
jle
xor
shlb
pusha
jbe
sub
test
sahf
rcl
cmp
push
mov
bound
fwait
int3
xchg
lcall
aaa
in
xor
js
push
or
xchg
out
ljmp
jp
lock
cld
push
sub
pushf
xchg
jmp
jle
pushf
cwtl
cmp
rolb
jge
fsubr
and
mov
ds
xor
call
inc
xor
cwtl
movsb
scas
mov
lock
sub
mov
mov
push
fsubrp
scas
sbb
adc
out
addb
inc
add
test
or
idiv
and
out
pop
subb
mov
pushf
lods
ja
sbb
sub
das
bound
inc
test
pop
popf
mov
mov
cmp
cmc
jno
cmpsb
jl
mov
push
sbb
and
out
push
push
lds
mov
or
sahf
push
shlb
jnp
lods
dec
test
scas
dec
sahf
adc
adcb
adc
daa
sbb
inc
dec
mov
rcr
jb
jge
fwait
or
xchg
or
cs
adc
add
shr
ficomps
inc
mov
inc
mov
xchg
push
cli
sarb
and
mul
jl
aad
add
decb
push
stc
push
mov
and
std
mov
mov
les
es
test
aaa
jp
mov
stc
or
fwait
repz
ds
mov
in
rolb
lods
fistpl
mov
gs
jnp
mov
test
in
into
adc
jmp
mov
ljmp
sub
pop
mov
into
xchg
xor
adc
in
inc
pop
stos
insl
fwait
fs
push
mov
inc
sub
add
xchg
mov
divl
and
and
testb
loope
lods
addr16
pop
mov
or
dec
into
int
add
jbe
xchg
ficomps
mov
push
push
cmp
cwtl
jp
add
fcmovu
xorl
mov
dec
das
mov
sub
cltd
mov
es
or
adc
loop
lock
add
jbe
fldt
push
xlat
pop
xor
fsubrs
sub
rorl
jne
xchg
loop
sbb
arpl
jnp
add
xchg
movsl
aam
sbb
cmp
add
push
std
adc
sub
push
enter
ss
in
and
rcll
mov
dec
push
imul
and
inc
push
scas
xchg
pusha
sbb
sti
mov
pcmpgtw
enter
scas
ret
rorl
in
in
xlat
and
js
inc
jno
mov
movsl
and
scas
or
jmp
in
sub
subl
jge
sbb
mov
xchg
sub
pop
xchg
or
fists
cmp
push
rcll
mov
cmp
dec
xchg
pop
mov
jp
xchg
test
add
or
cmc
inc
aad
inc
mov
mov
sti
push
adc
lods
push
daa
push
xchg
pop
out
in
dec
jns,pt
daa
inc
sbb
arpl
push
stc
inc
fdivr
cmpsl
sub
sbbb
sbb
xor
mov
sbb
and
dec
fwait
ret
add
shrb
loope
xor
sub
or
add
imul
imul
add
jge
jp
popa
or
cs
sub
clc
pop
out
fsubs
scas
lret
or
mov
cmp
imul
sahf
inc
add
loop
call
mov
pop
inc
adc
push
jno
ljmp
cmp
lcall
ret
mov
or
push
and
aam
test
dec
out
mov
lahf
idivl
add
push
dec
pop
push
jbe
pop
jmp
xor
dec
jl
inc
xchg
mull
sub
rorb
fisttpl
in
icebp
push
mov
shll
fistps
sub
xor
sub
adc
mov
cmpsb
cli
je
and
lods
mov
rcrl
pop
jnp
mov
jo
xchg
mov
cmp
popf
push
push
lods
mov
mov
popa
in
hlt
jo
daa
mov
in
push
outsl
bnd
adc
insb
aam
dec
mov
jns
cmc
and
lds
sbb
xchg
cmpsb
shlb
push
sub
inc
push
adc
adc
pop
and
cwtl
mov
mov
cli
pop
cmp
shrl
or
mov
pushl
stos
lock
sbb
sti
gs
sbbl
stos
loop
popa
iret
jmp
mov
jmp
orb
inc
les
cmpsl
mov
outsl
dec
push
mov
sbb
or
sub
icebp
sbb
jecxz
add
data16
enter
and
mov
add
or
adc
fadds
ret
inc
lock
add
and
inc
dec
push
dec
mov
sahf
jae
sub
push
iret
sub
movsl
push
xor
sbbl
test
pop
cmp
aad
jl
jnp
xchg
push
ja
stos
mov
or
fnstenv
in
mov
lods
add
cmpl
cwtl
sub
imul
push
push
hlt
or
push
add
sbb
xchg
lds
and
lods
xchg
sub
mov
sub
dec
fsts
ljmp
add
pop
sbbb
mov
rcll
fcompl
arpl
push
std
jmp
xchg
scas
push
push
xchg
fisubl
adc
idivl
insb
pop
mov
and
loop
pop
shll
dec
pushl
push
mov
and
sti
hlt
stos
das
mov
xchg
mov
ds
in
lret
xor
lret
gs
cmpsb
daa
inc
inc
cmp
in
dec
jle
inc
cwtl
pop
clc
std
or
jno
cwtl
mov
jl
cs
shl
ss
imul
mov
and
and
fdivs
jmp
loop
icebp
sub
inc
fiaddl
cld
xor
mov
cmp
scas
insb
mov
push
adc
sbb
cmp
cmp
adc
push
cs
enter
fwait
adc
jnp
push
dec
into
neg
or
xchg
in
mov
xor
ror
in
loopne
sbb
inc
push
xor
sub
mov
test
jae
call
xchg
mov
scas
sbb
jl
pop
test
jo
add
cmp
jne
cmp
test
or
stos
cmp
inc
mov
cmp
jle
arpl
pop
mov
mov
mov
pmulhuw
mov
es
pusha
lret
iret
sti
nop
sbb
rorb
lcall
lods
shlb
pop
les
sahf
sti
or
sbb
jge
and
aaa
xor
imul
mov
or
add
arpl
xlat
imul
sti
mov
ret
cmp
pop
jl
dec
in
popa
mov
scas
insb
jb
xchg
xchg
pop
ret
sub
dec
fsubrs
dec
sub
mov
adc
pop
mov
jp
hlt
pushl
lds
dec
mov
push
add
aad
jno
testl
nop
cld
fsubl
cwtl
jecxz
call
dec
test
and
push
rolb
add
pusha
or
int3
and
pop
sub
call
jo
lcall
scas
inc
xchg
cltd
cmp
roll
mov
ds
stc
pop
pop
int3
jne
gs
jg
mov
push
sbb
frndint
repz
fstpt
inc
dec
push
xchg
adc
cmp
inc
adc
mov
push
push
insl
mov
shll
dec
xor
push
arpl
sub
mov
cmp
xor
outsl
shrb
pop
js
adc
add
dec
pop
mov
and
sarb
xor
mov
inc
or
enter
sub
je
out
add
add
pop
pop
subb
nop
push
out
xor
push
jmp
pop
sarb
push
stc
rol
lods
enter
jae
sub
xrelease
testl
ficoms
jecxz
lret
and
jo
and
repnz
xor
imulb
push
add
out
pop
cwtl
jge
lods
fcompl
and
roll
xchg
fwait
mov
popf
into
in
xor
mov
in
mov
mov
dec
adc
adc
cmp
push
pop
or
jno
aas
out
lahf
rorb
adc
sub
je
jp
pop
movb
shlb
outsl
lcall
lret
dec
pop
pushf
dec
cmp
add
loopne
or
lock
jb
popa
pop
sbb
pop
jo
ss
mov
push
jnp
mov
dec
aam
in
xchg
out
or
dec
xchg
sahf
movsb
decl
dec
lret
popf
mov
dec
ret
push
and
push
ret
pop
xchg
lods
jle
push
pusha
xor
mov
cmp
div
gs
and
jo
jbe
fdivrs
mov
push
and
popa
gs
cmp
clc
adc
stos
repnz
subb
rcll
out
lret
push
xor
push
adc
repz
adc
dec
push
shr
repnz
fiaddl
mov
lret
adc
fsub
rcrb
rcll
mov
enter
mov
js
sub
and
fsubr
sub
stos
movsb
test
or
or
mov
test
ror
push
enter
data16
cmpsb
sbb
test
xchg
sbb
add
mov
outsb
sbb
dec
call
xlat
je
repz
enter
pop
int3
push
pop
rorb
adc
or
lods
mov
push
dec
mov
div
or
xchg
mov
pop
mov
ficomps
loopne
lods
aas
xlat
push
dec
leave
lods
xlat
pop
and
mov
stos
insl
test
adc
jne
sub
mov
cld
outsl
or
add
ja
pop
cs
jg
fnstenv
mov
dec
sti
popa
js
ss
testb
ds
jae
mov
pop
leave
js
inc
mov
das
xor
movsb
or
jle
inc
les
ja
jb
scas
xchg
repz
cmp
jnp
mov
adc
jmp
lea
inc
xor
mov
icebp
xchg
addr16
adc
test
loop
ss
outsb
or
js
jno
sub
fisttps
ja
xchg
inc
pop
push
mov
test
lds
dec
shr
jno
ja
xlat
push
cmpsb
lahf
js
mov
sti
bound
je
cmp
ds
sub
xchg
mov
push
out
add
inc
jne
mov
cli
dec
mov
ds
std
aad
xor
stos
cmp
rcl
pushf
sbb
bound
pop
adc
xchg
cmpl
add
push
out
movsl
sub
inc
pop
fcmove
cmp
aad
sub
inc
pop
mov
fsubr
adc
out
pop
stc
stos
bound
lcall
fbstp
in
insl
sbb
and
push
pop
cmp
jg
sbb
xchg
jp
out
or
mov
push
insb
ja
insl
stos
mov
push
cmpsb
mov
and
fimuls
push
dec
loope
arpl
add
mov
fisubrs
stos
adc
xor
dec
ljmp
ret
or
adcl
adc
popa
pop
or
enter
xchg
cmp
fistps
jle
mov
call
lret
add
in
je
xchg
jb
or
lahf
outsb
xlat
stc
mov
fs
xchg
xchg
push
mov
mov
cs
aam
ds
push
and
testl
orb
lea
data16
jae
sub
scas
in
xchg
stos
xor
pop
or
inc
push
cltd
sahf
jg
jae
mov
jp
imul
stos
push
pop
je
lret
or
push
pop
ret
in
sbb
cmp
stos
scas
push
loope
add
xor
mov
stos
pop
pop
mov
mov
adc
inc
xor
loope
jmp
xchg
mov
push
stos
sbb
pusha
jne
sub
je
or
idiv
divl
pop
ljmp
push
adc
dec
pop
mov
gs
xor
dec
pop
fistl
xor
ret
sub
xchg
or
sbb
fistl
xchg
push
sub
cmp
and
adcl
mov
int
pop
mov
ret
mov
dec
lds
aam
test
or
popa
es
push
dec
out
and
int
adc
pop
daa
jnp
rorb
daa
cmpl
xchg
xlat
sbb
popa
sbb
mov
test
push
adcb
jmp
jbe
sbb
sub
lea
pusha
inc
in
fdiv
adc
push
into
test
push
ja
dec
mov
loop
mov
xor
lock
test
sbb
mov
iret
inc
ret
hlt
pusha
mov
inc
jp
out
sbb
and
xor
inc
add
call
mov
push
mov
mov
movsl
inc
xorps
pusha
stos
dec
bound
and
xchg
hlt
mov
test
mov
xchg
int3
call
inc
addl
nop
fdiv
jmp
cmc
mov
cmp
sbb
gs
lods
dec
hlt
pop
ds
xorb
dec
repnz
ds
mov
dec
or
cmp
mov
outsl
aam
mov
mov
lods
pop
push
cmpsb
jbe
imul
popf
or
je
and
and
loope
push
outsb
xor
jno
mov
adc
xor
and
mov
mov
push
ss
push
fimuls
fildl
sub
popa
push
bound
adcb
movl
dec
and
or
inc
dec
adc
xchg
insb
jb
mov
push
mov
add
inc
xchg
adc
lcall
fsubrl
pop
xor
jns
lods
insl
adc
xchg
jne
aas
or
std
jne
xor
lds
xor
xchg
mov
pop
push
loop
dec
sbbl
push
iret
fsubp
and
iret
ret
sub
xchg
pusha
push
mov
je
pop
lret
shl
data16
shrl
out
cmp
imul
in
xchg
xchg
lock
adc
femms
or
dec
scas
xor
mov
ficompl
les
mov
pop
and
pop
std
dec
cltd
pop
fsubl
ror
dec
inc
mov
lock
imul
cmpsb
push
rcrl
test
jne
arpl
pop
negb
mov
test
mov
repnz
call
stc
push
jno
xchg
insl
popf
sub
rcl
les
and
dec
add
inc
lods
out
jns
int
aaa
xor
pop
imul
fsts
ss
xchg
push
sbb
sub
roll
mov
xor
mov
rorl
roll
inc
das
call
or
mov
lock
test
ss
push
mov
mov
mov
xchg
mov
out
fadds
xor
in
xchg
loopew
test
ja
dec
push
loope
into
js
pop
mov
and
out
dec
mov
mov
jmp
dec
mov
lret
and
adc
mov
cltd
jle
in
adc
mov
cmp
mov
inc
cmp
sbb
mov
xchg
sbb
stc
cmp
lods
mov
xor
pushw
ds
repz
fstl
add
jg
shll
mov
sub
ret
mov
icebp
mov
cmp
lret
or
leave
push
jo,pn
jg
jns
inc
pop
or
jg
jb
xchg
test
or
fstpl
sbb
sbbb
pop
fwait
sar
add
jle
mov
jbe
fisubrl
mov
cli
std
sub
mov
lods
out
mov
xor
ret
repz
scas
insl
dec
lea
or
mov
adc
mov
popf
push
cmp
sbb
fisttpll
mov
push
mov
push
mov
lds
lret
sbb
adc
ret
jg
xchg
sbb
outsl
xchg
adc
and
movsb
push
jmp
ss
movsb
imulb
arpl
stos
mulb
shll
out
xor
ret
push
fdivrs
gs
stos
mov
jmp
sub
push
pop
pushf
fcmovb
sbb
cld
mov
fdivs
push
jne
fwait
test
sbb
pop
jb
sub
mov
pop
and
adc
or
outsl
cwtl
mov
mov
lock
fs
je
fistpll
rorb
mov
fsubrl
mov
push
pop
andl
inc
dec
loopne
in
push
push
insl
in
shrb
ficoml
decl
call
mov
inc
in
movsl
adc
cmp
lcall
in
mov
aad
jns
out
fcoms
out
movsl
mov
mov
lea
add
pop
ficomps
shll
jb
pop
rcll
out
push
addb
inc
dec
cmp
pop
das
sahf
pop
pop
mov
bnd
push
inc
sub
mov
in
adc
in
push
iret
stos
fcmovnbe
aam
sbb
movsl
adc
xor
cli
imul
sub
pop
sub
lods
cmp
cmp
sbb
sbb
lcall
into
pop
mov
sbb
xor
aaa
add
or
fistpl
sti
les
inc
gs
jg
addr16
cmpxchg
aad
nop
in
nop
arpl
jp
cmp
fisttpll
sbb
aam
dec
adc
inc
xchg
push
je
ss
dec
in
lahf
jg
cli
popf
cmpsb
mov
fcomi
dec
mov
cmc
sahf
dec
xchg
aad
mov
pop
loop
in
rcr
xchg
cli
add
sub
stc
push
cmp
pop
push
fnsave
jae
insb
pop
mov
push
mov
cwtl
pop
inc
jbe
add
adc
sti
mov
js
xor
ljmp
xor
stos
jnp
mov
xchg
cmp
je
xlat
mov
insb
in
std
lret
add
popf
rorb
in
int3
fstps
jmp
insl
mov
mov
out
mov
cmpsb
leave
push
xlat
add
das
out
pop
pop
lds
sahf
les
push
lods
cli
stos
cltd
push
lds
push
pop
cs
shll
jmp
xchg
push
mov
jge
xchg
push
cmp
outsl
in
lcall
jne
jbe
test
js
mov
mov
push
sbb
test
sti
ljmp
in
fisubs
cmc
in
and
add
std
pop
xchg
xchg
jmp
adc
enter
adc
xlat
mov
je
xchg
cld
inc
nop
cltd
dec
lea
stos
repnz
or
aam
cwtl
ljmp
mov
xor
in
sub
sub
inc
mov
mov
xchg
push
pop
cmp
orb
in
dec
popa
shlb
arpl
cld
dec
jb
mov
push
jnp
cltd
repnz
and
sub
or
dec
sbb
lea
inc
sub
in
xor
outsl
or
inc
ret
and
in
daa
lret
adc
inc
js
sar
mov
aam
xor
pop
lods
clc
add
mov
shlb
push
xchg
mov
test
and
mov
xchg
xor
jmp
nop
loopne
arpl
dec
inc
inc
sub
lds
mov
mov
sbb
outsb
dec
or
ret
shlb
adc
in
into
xchg
jnp
out
mov
cmp
scas
movnti
ja
mov
and
rorb
cmc
or
cltd
lods
add
out
or
outsl
mov
mov
mov
pushf
push
nop
jle
or
xor
fsubl
shlb
adc
inc
mov
pop
xchg
stos
test
sarb
xor
mov
jb
loopne
icebp
dec
lahf
ret
adc
pop
into
lock
pop
or
mov
daa
add
imul
jecxz
addr16
movsl
test
or
cmpb
mov
das
mov
jmp
jbe
or
cld
push
xor
cmp
insl
or
dec
test
popa
xchg
cwtl
ja
cmp
adc
mov
sub
ljmp
lahf
ja
adc
dec
cmp
adc
push
jmp
sbb
push
into
jnp
xor
xor
mov
cwtl
mov
mov
outsl
adc
lods
xchg
bound
cltd
js
fwait
rcll
clc
repnz
ss
js
adc
inc
mov
sbb
push
xchg
jae
adc
sbb
lea
jp
mov
lods
ficomps
mov
dec
inc
push
int3
mov
mov
jne
cmp
popa
cmp
add
xor
ret
jnp
adc
call
push
into
adc
and
pop
into
fcomps
pop
add
sub
adc
xchg
jg
mov
inc
test
jp
xchg
div
xor
pop
movsl
out
aam
xchg
in
cld
add
jmp
jecxz,pt
popa
sbb
mov
shlb
das
fadds
movsb
rcrl
xchg
fsubs
mov
pop
add
idivl
lcall
divb
push
push
insl
lahf
xchg
sbb
jne
mov
int
out
or
cmp
mov
pop
mov
jbe
daa
insl
pop
mov
jge
push
imul
jbe
testb
enter
loop
mov
in
in
test
dec
inc
jno
pushf
enter
sub
jge
and
cmpsb
rolb
cmp
cmp
or
mov
mov
imul
mov
sbb
cmp
dec
push
inc
jne
dec
ja
add
pop
outsl
les
lret
lcall
daa
addr16
lret
adcl
and
subl
pop
mov
push
fdivrs
cli
xor
shrb
sbb
add
pushf
add
stos
in
push
inc
or
decl
out
dec
xor
jmp
ja
sub
enter
cmpsb
cltd
repnz
jge
fdiv
js
mov
andl
shrb
push
pop
and
mov
nop
into
pop
addr16
test
pop
cmp
mov
mov
nop
mov
lds
lret
fstps
mov
mov
mov
int3
sub
leave
push
stos
test
mov
cmp
or
int3
mov
dec
adc
dec
popa
xchg
les
xorb
pop
shrl
mov
out
jae
sbb
sub
gs
mov
into
int3
ret
sbb
push
rorl
mov
xor
xor
sar
mov
pop
sbbb
fsubl
xor
pop
call
sbb
sbb
push
adc
jno
mov
fldt
outsb
xchg
pop
cld
sarl
mov
enter
cmpsl
hlt
mov
dec
dec
stos
test
pusha
pop
pop
mov
dec
icebp
cmc
sub
lea
push
sub
int3
inc
sarb
jo
popa
xchg
push
xor
jp
mov
loope
jns
js
cmp
movsl
inc
lods
adc
xor
xlat
and
sub
or
aad
pop
and
ja
dec
lret
int3
xchg
push
call
incl
lods
repz
mov
fcom
in
xchg
or
mov
test
dec
int
je
rorb
out
call
js
add
sbb
fisttps
inc
adcb
popf
ljmp
push
xor
mov
ror
sbb
lcall
xchg
cmp
add
movsb
out
adc
pop
mov
sub
clc
iret
mov
popf
mov
and
aas
mov
jle
clc
pop
jno
clc
call
jb
mov
mov
dec
or
and
xchg
or
loop
addb
dec
fimuls
jae
rclb
jne
mov
sti
in
aad
cmp
pop
push
iretw
ficoms
push
and
int
insl
push
add
lcall
mov
push
rolb
sar
imul
pop
pusha
pop
lea
cli
adcb
testb
adc
push
xchg
jb
jle
aam
xchg
in
inc
lret
add
insb
imul
push
xlat
outsb
js
lds
aam
cli
lret
push
out
js
dec
sub
push
dec
sub
scas
dec
adc
xchg
flds
mov
jae
idivb
inc
mov
fisubrs
push
push
adc
ret
cmc
mov
outsb
sub
jae
or
and
incb
inc
adc
fs
push
popf
cmp
and
sbb
xchg
jnp
cmp
aas
push
fldenv
pusha
jo
xchg
and
repz
mov
jmp
shl
bound
xchg
adc
mov
and
mov
outsl
popl
mov
dec
and
cmpsl
decb
jmp
pop
push
inc
push
sarl
inc
test
cmp
ljmp
xor
ljmp
popf
inc
fcomps
out
adc
pop
aad
fnsave
cmp
and
inc
or
pop
xor
sub
fisubrl
or
dec
xor
repnz
nop
test
imul
add
pop
xlat
fdivrp
cltd
mov
mov
negb
jle
xchg
jo
push
inc
les
icebp
mov
sbb
xor
sub
jge
sbb
mov
xor
pop
fs
push
adc
cmp
loopne
pmuludq
pop
xorb
mov
sub
sarl
mov
and
jp
fwait
stos
les
dec
sarb
std
xor
mov
popf
or
adc
mov
push
rolb
push
dec
jmp
das
cmpsb
push
cld
aam
aas
data16
dec
mov
and
mov
ret
cmp
dec
mov
push
loope
mov
cmp
addl
add
dec
adc
adc
sbb
lods
mov
add
and
pop
push
rcrl
jg
sahf
fiaddl
in
add
jp
sbb
pop
cli
scas
inc
and
push
add
add
mov
mov
sub
xchg
jl
inc
aam
jns
xchg
jb
xor
out
popf
ret
xor
dec
mov
imul
adc
mov
pushf
xchg
inc
andb
pop
stc
inc
das
arpl
and
or
sub
push
and
cld
xchg
sub
inc
andl
xor
fs
jne
pop
enter
dec
adc
cmp
rcrb
cmc
or
in
sub
loopne
pop
cmpb
inc
test
es
addl
xor
iret
jg
xchg
pop
outsb
rorb
cmp
dec
push
mov
cmp
xchg
push
scas
mov
inc
and
jl
add
and
inc
ret
push
in
mov
and
aaa
fcmove
mov
es
fucomip
push
mov
fldenv
out
hlt
sub
mov
xor
push
aas
sbb
inc
cmp
bound
sarl
std
xchg
shlb
leave
inc
aam
pop
sbb
ljmp
push
and
ds
or
xchg
insb
ljmp
or
je
gs
mov
inc
sti
adc
xchg
cmc
mov
sub
repz
aam
mov
sti
cwtl
loopne
add
add
pop
pop
lock
xor
and
jo
pop
mov
cs
xor
inc
and
pusha
out
xor
mov
lcall
aaa
mov
mov
test
push
out
pop
mov
cmpsb
add
rolb
repnz
sbb
xlat
lods
ficomps
or
sbb
push
pusha
pop
adc
shrl
and
inc
out
mov
cmp
pop
je
xchg
mov
gs
inc
cltd
dec
pop
das
addr16
out
add
xchg
add
cmpl
mov
sbb
mov
cmp
cwtl
jnp
push
call
xchg
mov
xor
into
push
jbe
repz
xchg
or
outsl
push
roll
pop
mov
mov
std
lods
jbe
jae
xchg
in
dec
loopne
mov
or
sbb
out
rcl
sub
mov
je
sub
aas
dec
sub
xor
aam
push
cmpsb
or
push
out
jle
and
xchg
aas
cmp
and
adc
int3
xchg
add
jb
jb
jbe
in
pop
popa
pop
pushf
imul
cmp
ret
sarl
xlat
mov
push
roll
into
jae
sbb
or
ds
lret
mov
jg
sbb
sbb
add
add
int
mov
cmpsb
jnp
arpl
adc
cmpsb
sub
xchg
ret
pop
ret
inc
and
dec
inc
stos
xchg
xor
iret
lret
mov
fmuls
cltd
fld
into
inc
jae
fs
fs
or
add
out
cmp
push
lcall
lcall
sub
sub
and
dec
je
mov
pop
mov
xor
sub
adc
je
mov
pop
and
lods
adc
pop
or
subb
pusha
jae
jae
cmp
imul
frstor
inc
cwtl
call
std
shl
test
push
sbb
mov
xlat
addr16
cltd
or
push
hlt
popa
pop
jle
cmp
fdivl
je
push
mov
pop
xor
pushf
das
or
xchg
and
repnz
pop
jmp
fistl
lret
loopne
mov
mov
out
fwait
mov
push
pushf
ss
aam
cld
xor
jecxz
adc
daa
aaa
icebp
sub
sub
shr
sbb
cmp
lcall
test
cmp
dec
adc
rcrb
aad
in
mov
aaa
ret
loop
mov
mov
imul
sub
cmp
sahf
mov
dec
lret
incb
bound
xor
loopne
fidivl
sub
jmp
push
test
stos
test
cmp
fadd
mov
leave
insb
push
cld
push
sub
call
divl
in
mov
jmp
dec
push
sub
and
nop
fstl
ja
add
mov
jecxz
lods
pop
addr16
push
xchg
out
ss
xchg
mov
adc
adc
or
sbb
arpl
xor
and
lahf
in
pop
rorl
out
enter
popa
sub
addl
sbb
jae
rcl
inc
xchg
pop
pop
or
fildl
stos
push
mov
pop
in
ret
outsb
iret
xchg
and
ljmp
mov
notb
adc
daa
dec
aam
mov
jno
xchg
cld
fcomps
and
ret
xor
scas
push
inc
fwait
movsl
inc
sub
xor
sahf
call
xchg
mov
sbb
outsb
out
arpl
stos
cmp
jae
inc
insb
jp
in
sahf
adc
leave
jo
mov
movsl
pop
xchg
push
insl
rorl
dec
aas
sbb
xchg
jle
add
movsl
jae
cmpsl
sub
loope
inc
ret
add
pop
mov
mov
sarb
pop
xchg
cwtl
cmp
loop
push
pop
jno
ss
roll
cmp
pushf
push
in
mov
shrb
sbb
stos
lret
fcoml
mov
loopne
notl
or
cmp
push
cmp
clc
mov
dec
int
ret
mov
pop
jo
xor
xchg
and
fcoms
call
popf
cld
xchg
rcrl
xchg
insl
les
pop
repz
add
cwtl
mov
outsl
dec
push
push
icebp
jl
cmp
mov
stos
insb
add
mov
hlt
pop
jmp
inc
push
lods
mov
xchg
in
cmc
mov
mov
mov
mov
xchg
and
cmp
xchg
push
pushf
lds
gs
push
in
sar
mov
rcrb
mov
sbb
sub
addr16
jge
mov
fucomip
dec
jbe
sub
xchg
dec
jae
mov
daa
divb
shll
leave
mov
jecxz
jecxz
mov
ret
adcb
push
adc
std
dec
pop
and
out
fnsave
mov
neg
mov
xor
gs
xchg
sar
insl
outsl
out
nop
in
jl
inc
cli
sbb
xlat
lret
pop
fdivl
lret
pop
pop
lods
mov
or
fdivr
mov
push
adc
sbb
inc
xchg
outsb
push
push
pop
lock
and
push
les
push
fs
lea
out
ja
rcr
sub
loopne
daa
jp
flds
sti
jp
inc
push
ret
cs
icebp
rcrb
adc
imul
sbb
xchg
lea
mov
jge
adc
push
inc
andb
pop
push
and
idivl
aas
mov
pop
inc
mov
outsl
jg
pop
dec
in
adc
mov
out
mov
xor
aam
out
mov
je
repz
xor
sub
in
hlt
add
mov
stos
and
lcall
jnp
pop
cmp
or
cmpsl
repz
mov
or
rcr
mov
notb
lcall
xchg
inc
pop
imul
imul
xlat
lods
loope
incl
clc
sbb
int3
aad
pop
dec
rcrb
imul
sub
test
int3
push
mov
cmp
int
and
fsubl
cwtl
pop
or
dec
pop
fdivrs
imul
aad
push
clc
or
sbb
leave
adc
cmp
ret
filds
aam
xlat
xor
daa
cmp
shrb
jo
hlt
pop
sub
lods
adc
loopne
xchg
pushf
repnz
sbb
fsubrp
mov
pop
inc
sti
add
jns
jae
add
sub
popa
push
cmp
push
cmpsb
leave
jo
ds
mov
mov
xchg
mov
movsb
mov
test
push
cmp
imul
fwait
mov
jle
ljmp
xchg
mov
rcrl
sub
cs
cltd
fistl
lret
mov
repz
pop
fs
ret
jne
or
mov
out
push
lret
loopne
inc
fistl
inc
cmp
arpl
inc
mov
add
cmp
adc
dec
rcr
adc
aad
scas
lret
insl
and
pushf
das
xchg
in
hlt
inc
cld
mov
inc
cwtl
adc
cmp
push
mull
jo
popa
add
jo
xor
cmpsl
jge
stc
sub
insl
cmp
loopne
orl
sub
push
push
mov
aaa
jecxz
cmp
cld
outsl
add
xchg
lods
and
cmp
push
fs
rcl
jle
xlat
mov
repnz
xor
jle
insl
sbb
gs
push
mov
outsl
into
cld
sub
jecxz
sbb
jns
inc
push
gs
mov
jg
pop
test
repz
std
stos
ficomps
mov
jle
ljmp
lahf
or
out
scas
cmc
cs
fsub
in
in
inc
std
cvtps2pi
std
int3
jae
loop
jo
sbb
aaa
add
inc
adc
fwait
and
mov
xor
call
nop
out
inc
out
ja
subb
lea
adc
mov
push
fwait
xor
ljmp
cld
sbb
and
imul
lcall
inc
outsb
cltd
je
adc
repnz
mov
xor
les
push
sbb
push
pop
sub
sbb
add
mov
jmp
out
jno
push
testl
push
imul
rcr
mov
or
jo
hlt
xchg
sbb
xor
mov
xchg
cmp
in
mov
loopne
cmpsb
xchg
sahf
fidivs
cltd
mov
into
lret
cli
pop
pusha
push
xor
js
mov
bound
add
cmp
push
push
in
adc
sub
sbb
sti
mov
fldt
subb
mov
movsl
xor
out
inc
xchg
sbb
pop
inc
or
add
mov
popf
scas
jmp
xor
icebp
ljmp
add
dec
inc
dec
stc
xor
mov
movsb
jno
filds
xor
jnp
out
pushf
leave
dec
push
adc
inc
cwtl
mov
mov
stc
push
adc
cmp
addr16
xchg
in
mov
insb
dec
mov
movaps
scas
xor
push
test
ss
outsb
inc
cmp
in
bound
inc
pop
xchg
jo
mov
mov
scas
cmp
push
cwtl
pop
or
das
push
mov
divb
add
mov
hlt
in
inc
inc
cmp
and
sbb
sbb
aas
lds
adc
push
xor
psllw
jmp
sbb
sti
pop
mov
sub
aam
push
in
cmp
push
push
adc
cltd
xor
andb
int
fnstenv
cmpl
ficoms
shlb
sub
into
popa
lock
fcom
xchg
push
fdivrs
jbe
mov
loope
jecxz
xchg
je
xor
cmp
sarb
jg
lcall
das
leave
adcl
cmpsl
fmuls
cmp
in
sbb
jb
sbb
das
push
mov
fsub
lds
fs
xchg
stos
cmpb
outsl
lret
pop
mov
or
aas
inc
sub
insb
imul
pusha
mov
xorb
test
dec
pop
push
mov
mov
int
pop
gs
gs
rorb
and
add
je
jecxz
gs
cmc
hlt
fidivs
fists
sti
rol
mov
mov
decl
xchg
adc
aaa
xchg
mov
and
dec
dec
rcrb
in
mov
mov
aaa
addb
mov
imul
out
movsl
push
xchg
arpl
cli
sbb
push
inc
mov
adc
sbb
sbb
test
push
xor
inc
sahf
nop
push
popf
sbb
xchg
stos
and
jmp
or
push
or
adc
dec
sub
dec
lcall
mov
lea
outsb
pop
fisubrl
les
cmp
dec
cmp
mov
sub
xlat
daa
ss
or
or
dec
mov
mov
imul
mov
xor
mov
fildll
mov
push
aas
sarl
mov
rcrb
dec
icebp
inc
int
insl
gs
pop
ret
inc
xchg
pop
rorb
pop
push
pop
pop
out
jecxz
iret
jecxz
stos
jmp
jnp
test
mov
fwait
imul
dec
inc
add
sbb
int3
int
iret
mov
pause
mov
inc
mov
in
and
sti
jle
inc
mov
js
xchg
sub
setae
test
jae
divl
dec
sbb
movsb
shl
add
dec
mov
add
adc
push
jl
imul
jno
lea
fisttpl
faddp
inc
sub
sahf
cmp
mov
imulb
cmpsl
inc
xchg
stos
jne
je
scas
add
stos
std
loop
sub
sub
mov
jb
and
in
push
mov
arpl
inc
xor
jo
repz
push
shr
mov
in
cld
dec
lret
mov
shrb
lock
leave
fiaddl
nop
stos
adc
jl
bound
xchg
mov
pop
xchg
ja
push
sub
repz
adc
adc
xchg
mov
mov
stos
pop
sbb
sub
mov
or
pop
xchg
cmp
arpl
xchg
dec
pop
push
mov
sbb
into
ret
jmp
dec
mov
xchg
mov
int
push
sub
cmp
ret
setns
mov
loopne
test
mov
test
jb
mov
mov
loop
pop
lods
jns
jl
cmp
sub
sarl
jp
aas
addr16
push
repz
or
xchg
repz
adcl
aas
stc
push
ds
xlat
and
lods
xchg
jl
mov
imul
mov
ffree
mov
push
popf
xchg
push
push
adc
rcr
add
jb
jne
add
scas
stos
cmpsl
into
ret
divb
das
es
in
stc
fs
sbb
popf
push
lods
mov
mov
xor
push
lods
rorl
mov
and
and
inc
cmp
adc
sbb
lret
push
nop
jnp
lahf
addr16
dec
xchg
mov
shlb
pop
pop
bound
mov
cmp
add
int3
jae
adc
jle
scas
or
xchg
mov
shl
inc
lret
inc
cmp
or
or
sbb
adc
lods
aas
pop
adc
mov
xchg
jno
push
out
dec
mov
sbb
jnp
mov
into
mov
pop
xor
inc
rorl
loop
mov
xlat
dec
aaa
arpl
pop
mov
and
je
dec
ds
dec
mov
f2xm1
mov
stc
scas
aas
fwait
lds
push
pop
xor
nop
scas
xchg
mov
push
fs
or
adc
sti
mov
cmpsb
enter
pop
mov
lret
mov
ss
jae
add
pop
inc
inc
xor
loop
test
sub
adcb
movsb
dec
test
mov
jne
adc
mov
bound
mov
js
outsb
sub
pop
jbe
mov
iret
cli
add
in
jmp
mov
movsl
cmp
cmp
andb
lcall
loope
mov
jmp
push
pop
insb
stos
mov
mov
sub
shl
add
or
lods
xor
std
mov
mov
mov
daa
add
fidivrl
sub
sahf
jne
jno
pop
je
dec
insb
mov
pop
mov
and
outsb
cli
decb
mov
or
insl
xor
mov
sarb
pop
jg
fwait
or
cmp
call
lcall
xor
jl
inc
dec
repnz
aas
or
push
xor
push
shrl
les
insl
leave
dec
mov
xchg
fucomi
push
leave
or
push
mov
sbb
incl
int
fdivrl
and
or
popa
cld
sub
ss
into
inc
push
add
jo
cmp
jne
rcrb
ss
add
stos
jae
or
into
notb
sbb
lods
aas
imul
push
inc
and
or
cmp
push
push
andb
xchg
adc
fs
or
fisttpl
into
mov
cli
pop
fisubs
ret
in
fisubrs
xor
fldt
in
icebp
sub
outsb
cs
mov
sub
xor
js
mov
or
adc
add
sbb
popf
xchg
mov
dec
xor
push
out
pop
cwtl
pop
jge
mov
push
rolb
loop
mov
fdivs
push
sub
mov
stos
push
inc
xor
pop
les
jne
xchg
int3
and
mov
sbb
xor
pop
mov
mov
mov
sbbb
pop
imul
jmp
mov
mov
xchg
and
jno
jb
pop
sbb
push
ljmp
jg
popf
mov
mov
mov
or
into
add
or
jmp
xchg
and
enter
jne
or
push
sbb
mov
or
xor
mov
int
ss
or
mov
or
xchg
incb
push
adc
fs
lea
jmp
mov
fdivrl
mov
jp
sub
ja
jo
cmpsb
ljmp
leave
push
out
jge
rolb
push
push
out
cmpsl
mov
mov
imul
pop
pushf
xor
mov
adc
push
test
or
mov
dec
mov
les
lret
adc
sbb
mov
push
test
cmpsl
xchg
loope
in
inc
repz
push
fdivrl
jp
lods
pop
adc
mov
and
outsl
scas
lods
sti
and
push
popl
aad
lret
sbb
frstor
jns
leave
out
inc
pusha
sbb
fistpl
lret
adc
and
arpl
test
xor
sahf
repz
push
mov
sub
sbb
pop
adc
int
insl
addr16
cmp
lcall
fwait
push
mov
idivb
mov
or
and
mov
sbb
xchg
les
cwtl
std
add
jnp
push
aas
pop
mov
movsb
pop
sub
mov
fistpll
jecxz
jecxz
push
push
pop
sahf
sub
rsm
mov
jne
ja
aam
ret
adcl
shlb
xchg
xor
adc
xchg
mov
dec
adc
sub
jae,pn
movsl
daa
push
cmpsl
mov
movsb
rcrl
xchg
pop
lahf
out
jl
les
inc
popf
mov
mov
sub
fisttpll
xor
shr
inc
test
fucomip
pop
cli
stos
rcrl
imul
mov
movsb
movsb
push
mov
icebp
jne
pop
subb
sub
adc
repnz
clc
inc
repz
jecxz,pt
add
sbb
push
lds
mov
aas
popf
test
mov
mov
aad
cmc
adc
stc
mov
lahf
mov
or
hlt
add
inc
pop
add
pextrw
mov
sub
lea
mov
sarl
rclb
or
mov
insb
adc
shrb
lret
fidivs
fdivp
sbb
jle
mov
inc
scas
sahf
cmc
arpl
adc
movl
xor
into
and
push
imul
inc
push
insb
lcall
xor
in
aam
and
test
mov
in
or
jmp
push
push
push
jae
shrb
pop
push
shr
dec
inc
adc
ja
mov
sub
ret
mov
xor
add
and
scas
xor
lds
dec
inc
adc
push
pop
cmpsl
push
jge
mov
out
sub
jmp
cmp
mov
mov
insl
mov
lea
into
xchg
or
xor
jecxz
fmuls
push
sbb
pop
leave
andb
xchg
adc
push
mov
pop
lret
iret
dec
insb
inc
pushf
sti
xchg
push
fmull
outsb
test
mov
icebp
xchg
sbbl
mov
dec
jo
stos
in
das
jg
jbe
loope
mov
lret
cmpsl
inc
mov
addl
pop
mov
movsb
mov
sbb
push
xorb
xchg
lret
mov
repnz
sbb
xlat
mov
mov
inc
addr16
scas
jno
xchg
popf
scas
cmp
or
mov
out
xchg
xchg
pop
mov
cmp
ja
mov
lock
mov
or
lock
hlt
repz
and
in
lock
adc
lret
mov
adc
jnp
jne
daa
ljmp
fbstp
mov
or
aas
pop
dec
repz
arpl
testl
je
adc
fisubl
pusha
push
stos
jne
sahf
mov
push
js
cld
stos
inc
addr16
aas
xchg
icebp
loop
cs
pop
in
mov
mov
std
cmp
test
add
push
andl
mov
inc
imul
addr16
pop
subb
mov
add
ljmp
mov
ret
iret
add
xor
call
rcrl
mov
jge
push
pusha
imul
jle
test
cli
loopne
jb
push
push
ja
mov
push
mov
cmc
ss
mov
stos
sbb
rcr
fmuls
mov
fsubrl
push
leave
shll
xchg
aas
xchg
xchg
xchg
fistps
sub
jne
mov
sub
cmp
inc
add
sub
gs
xchg
jp
outsb
mov
inc
je
jno
popa
out
in
push
pop
dec
mov
and
into
xor
add
xor
sbbb
rorl
fmul
and
fisubl
stos
xor
pop
dec
lret
cmp
push
nop
cmp
test
inc
ror
jbe
call
xchg
push
das
adc
mov
mov
pop
inc
daa
stos
outsl
into
in
hlt
xor
mov
jnp
push
stos
fisubl
sbb
pop
pop
insb
jp
and
cmp
fisubrs
icebp
pop
or
fs
in
scas
xchg
xchg
pushf
inc
addr16
out
dec
loopne
es
int3
fsubrp
movl
jmp
mov
jle
ret
lods
idivb
rclb
rol
pop
pop
adc
bound
call
add
mov
cmpsb
test
inc
adc
push
aad
jnp
test
movsb
aam
ret
pop
jae
jmp
aam
dec
test
cli
int3
cmp
call
test
insb
mov
push
xchg
test
imul
xchg
add
mov
jge
daa
inc
push
pop
lods
or
adc
pop
mov
dec
push
adc
and
sbb
and
gs
scas
pop
je
insl
add
pop
push
mov
sahf
mov
add
sub
loope
sbb
in
iret
push
xor
push
out
jns
inc
insl
pusha
push
cmp
cmp
adc
xor
jmp
xchg
pusha
pop
mov
lcall
xor
nop
adc
test
addr16
inc
mov
dec
ret
pusha
xor
movsb
loopne
lock
jns
test
and
or
call
mov
test
xor
jecxz
or
es
cwtl
mov
popa
int3
cmpsb
inc
call
mov
pop
gs
pop
push
xchg
es
cmp
jnp
push
roll
sub
stos
mov
daa
out
loop
iret
push
or
xlat
insl
lcall
popa
xor
inc
roll
and
pop
aas
loope
cmp
popf
sub
inc
negb
dec
rcrl
xlat
nop
int
xchg
fstpl
sub
xchg
cmp
divl
pusha
repz
jo
push
icebp
fwait
sub
mov
ret
cli
in
push
dec
stos
out
and
dec
sub
out
and
bound
pop
out
ds
xor
dec
adcb
xchg
pushf
pushf
sahf
fcmovb
adc
lock
add
xlat
push
sub
adc
pusha
pushf
pop
xor
or
dec
push
iret
ret
mov
inc
push
push
cmpsl
mov
mov
mov
push
adc
jno
and
inc
pop
ror
das
fnstcw
mov
dec
repz
add
push
rcrl
imul
pop
sbb
jle
jnp
and
lahf
xor
cmp
push
pop
sbb
aam
mov
addb
mov
mov
mov
lcall
fcomi
lea
cld
xchg
jbe
mov
mov
loope
sub
out
dec
xchg
stos
push
jecxz
push
ds
out
fs
inc
cmp
jae
dec
push
ja
aad
mov
incl
and
mov
jo
mov
pop
mov
dec
push
add
jbe
or
sarb
fwait
test
mov
xorl
lcall
push
sub
js
es
push
lahf
dec
pop
popf
inc
jae
mov
test
out
mov
flds
lea
and
ret
xchg
mov
fnstcw
idivb
lahf
or
addl
xchg
xor
mov
inc
push
out
jno
mov
jnp
pushf
add
scas
cld
inc
insl
fst
loopne
jl
call
adc
dec
outsb
sbb
jnp,pt
and
or
and
pop
lds
jns
les
shl
mov
jl
leave
pop
aas
jle
push
xor
pop
pop
push
sahf
mov
fnstenv
xlat
mov
mov
mov
xchg
fimuls
mov
pushf
enter
mov
ret
sub
leave
adc
test
dec
adc
sahf
push
repnz
icebp
imul
sub
out
ror
cwtl
aad
pop
and
adc
movsl
inc
sub
cld
xchg
arpl
test
mov
cld
dec
mov
ss
fldl
mov
dec
pop
jnp
sub
jg
iret
and
or
mov
adc
cmpb
and
pop
sbb
stos
bound
xchg
not
xlat
mov
divb
mov
pusha
jp
fistpll
sbb
dec
adc
push
sbb
repz
dec
out
dec
test
scas
popa
push
lahf
jne
add
arpl
push
or
xor
pushf
fucomp
ja
and
test
in
or
icebp
inc
xor
incb
push
mov
mov
clc
test
push
push
add
fucomip
mov
lock
mov
jecxz
outsl
enter
rcrb
lds
les
pop
push
lock
sub
and
lret
popf
rcrl
jp
data16
sbb
orb
out
inc
push
aad
xor
repz
mov
mov
in
loopne
outsl
cmpsl
add
mov
push
ljmp
clc
ret
sub
loopne
push
xchg
jge
cmpsl
xor
mov
mov
rorl
push
ss
jp
jb
ret
add
loope
je
or
lea
jnp
test
and
pusha
cltd
mov
loopne
repz
jnp
xchg
or
pop
add
inc
fstpt
aas
loope
inc
hlt
fwait
lret
pusha
outsl
cmpsl
out
pop
test
lods
push
popf
push
aam
adc
lret
aam
and
mov
cmp
sbbl
fldl
in
mov
test
cmp
jb
jge
and
outsb
or
mov
pushf
loopne
adc
fstpl
out
js
aaa
pop
lea
xlat
fldenv
in
xor
mov
je
sbb
cwtl
sbb
fwait
mov
hlt
push
jns
jg
cmp
lock
testl
lock
pop
mov
mov
mov
imul
jl
out
jno
and
inc
jp
ror
mov
scas
or
in
test
fadds
cmp
sub
sbb
or
xchg
inc
int
addr16
jo
cmp
or
xor
fiaddl
shrl
sbb
js
sti
dec
dec
out
push
add
into
scas
pop
sarl
call
mov
or
adc
mov
fiaddl
sar
jno
sbb
test
loopne
mov
iret
mov
cmp
lea
and
ljmp
cwtl
aam
and
dec
jg
repnz
sub
imul
jns
add
cmp
orb
inc
inc
shr
push
jmp
push
jno
sub
pop
xor
mov
and
es
jb
int
in
or
scas
adc
cmpsb
add
dec
xchg
sub
leave
insl
dec
gs
gs
dec
dec
xchg
jg
adc
xchg
sub
loope
fisttps
cld
and
mov
jno
cmpsl
mov
pop
orl
push
pushf
or
sti
lea
lock
dec
jmp
nop
cmp
mov
jnp
xchg
rcrl
int3
sarb
and
leave
or
mov
xorb
lret
notl
aas
aaa
xchg
test
sub
lret
xchg
in
cmp
clc
jg
call
or
cmp
push
nop
sbb
xor
ret
dec
enter
scas
jge
sbb
add
add
fbld
call
gs
inc
sbb
add
pop
ja
or
cmp
lock
cltd
sub
sti
icebp
aam
nop
pop
mov
jmp
pop
adc
shlb
outsb
push
imul
std
dec
sbb
imul
sub
clc
arpl
cwtl
int3
jle
lds
xor
cltd
pop
je
outsb
mov
sti
cli
movsb
cltd
or
push
lods
mov
pusha
jmp
add
xor
jge
mov
mov
pop
sub
fsubs
lahf
mov
add
dec
cmp
test
ficomps
xor
and
adc
or
add
pop
lret
insl
lcall
fadds
mov
leave
or
xor
rcll
fs
cmpb
jnp
imul
icebp
cld
pop
movsb
das
jb
scas
cwtl
rorl
movsl
fnstsw
sub
xor
arpl
iret
out
movsb
inc
fistps
ja
shlb
inc
xchg
dec
and
roll
adc
aaa
shrl
hlt
mov
mov
mov
adcl
in
jb
xchg
cmp
es
cmp
xchg
add
pop
pop
xor
dec
mov
out
mov
jbe
adc
jbe
int
pop
mov
jns
add
cmc
adcb
jbe
mov
mov
fists
outsb
push
sub
and
add
mov
fmul
shrb
fildl
inc
in
dec
mov
pusha
fadds
pop
mulb
lock
mov
bound
cs
or
dec
xor
push
lret
in
mov
mov
fstps
or
fistps
mov
scas
lcall
jg
pop
jne
xchg
test
dec
cltd
in
pushf
jbe
adc
popa
mov
cmp
push
in
jl
cmp
imul
pop
push
pop
int3
dec
mov
ret
or
sarb
ja
daa
sub
jmp
sbb
dec
push
mov
lcall
mov
push
xchg
shll
xchg
lods
pop
call
pop
or
jno
cli
mov
xchg
popf
mov
jo
pop
cmp
inc
popf
lret
sahf
mov
xor
inc
pop
in
push
lock
dec
out
adc
mov
mov
cmp
test
aad
xchg
popa
adc
shrb
jl
mov
rcrb
xor
lds
clc
test
int3
pop
jg
push
call
cmp
or
loope
aaa
lods
data16
sahf
cmpsb
test
ret
jae
in
dec
stc
sub
mov
repnz
mov
repnz
mov
flds
inc
sbb
push
adc
add
adc
sub
cli
insl
jns
cmp
or
test
gs
dec
sub
daa
ss
aam
out
fistl
repnz
cmp
pop
inc
push
or
cmpl
adc
and
arpl
cmpps
lret
lods
lahf
fdivrs
pop
or
jbe
xor
xor
sbb
xchg
repnz
and
pop
test
sbb
fidivl
out
fisttpll
xor
push
and
add
jge
popf
and
std
mov
inc
addr16
js
fwait
imul
shrl
pop
stc
pop
ss
jnp
dec
pop
sti
or
push
loopne
mov
notl
xchg
int
xlat
xchg
ljmp
jne
iret
mov
rcrl
lahf
pop
jb
sti
mov
add
out
mov
lcall
mov
mov
cwtl
pushf
loope
mov
lds
std
fmulp
js
fmuls
popf
mov
pusha
jno
pop
lret
rclb
pop
aaa
and
jl
mov
jle
sub
fwait
adc
dec
lods
scas
fs
push
lock
mov
pop
sub
repz
xor
sub
in
nop
shrl
sbb
insl
fcoms
mov
outsb
inc
imul
fcomip
in
pop
scas
sub
cmovp
push
packuswb
and
add
insl
mov
test
inc
scas
in
pushf
mov
dec
jns
inc
or
aaa
dec
xor
ja
test
cld
in
mov
sub
vrcpps
add
dec
sbb
and
imul
adc
cltd
repz
stos
mov
xchg
sub
lea
lds
sbb
push
aad
lret
insb
push
fcoml
ds
push
and
imul
shll
cmp
adc
insl
inc
sahf
dec
cmp
fstl
in
arpl
dec
push
movsl
mov
stos
in
cmp
jmp
mov
xchg
xchg
or
cmpsb
xor
scas
push
roll
dec
dec
mov
jb
scas
mov
inc
mov
sbb
jns
movsb
out
les
das
and
add
push
cmp
ret
pusha
adc
ja
vphsubsw
fs
inc
loop
ss
mov
shll
sub
push
or
push
es
jge
sub
adc
add
orl
jne
cmp
sub
int3
jge
and
inc
inc
pop
cmp
iret
dec
iret
or
orb
xchg
or
push
xchg
ds
icebp
mov
jmp
test
ja
enter
mov
frndint
and
jbe
leave
mov
xchg
push
pop
inc
dec
dec
mov
push
cmp
out
aas
jg
fld
fdivs
pop
loopne
loopne
xchg
cwtl
es
xor
mov
cmp
fisttpll
mov
loop
cld
mov
aas
cltd
icebp
pop
xchg
movhlps
out
movsl
iret
hlt
or
ds
fwait
dec
gs
dec
pop
pop
sahf
leave
cmpsl
xchg
push
fbstp
pop
jle
les
jo
cmpsb
ret
push
xor
push
push
mov
out
xorl
cmc
mov
mov
repnz
ret
not
popa
add
in
inc
sbb
pop
cmp
mov
pusha
inc
enter
push
pop
dec
lds
ret
xor
call
and
cmpsb
mov
addr16
xor
push
ret
pushf
jb
aas
faddl
ret
icebp
or
xor
pop
scas
cmp
imul
jg
push
test
dec
std
roll
leave
int3
ja
test
adc
inc
pop
lret
int3
pop
pop
pop
mov
fsub
inc
mov
xor
roll
mov
iret
call
and
shr
iret
rcll
imul
fsubs
repnz
loope
sbb
inc
in
lahf
lock
aam
in
mov
push
cmpb
lock
int
mov
cmpsb
inc
adc
sbb
int3
cmp
fxch
sbb
sbb
mov
call
xchg
scas
or
rcl
sbb
int
leave
sbb
xchg
inc
les
dec
test
pop
ljmp
xchg
mov
outsl
pusha
mov
ds
xor
jns
mov
and
imul
pushf
insb
mov
sub
push
lock
dec
mov
andb
dec
adc
adc
jg
sahf
daa
sbb
aaa
dec
jnp
rcrb
jne
adc
sub
jno
mov
cs
adc
lock
mov
mov
sbb
push
jo
aad
popf
lret
push
inc
jne
jae
loopne
mov
loop
jle
add
fstp
mov
jl
add
cld
repz
pusha
dec
loope
movb
ja
shrb
pusha
dec
out
adc
jae
mov
rorb
popa
nop
and
mov
and
imul
jno
popa
in
das
jbe
cmp
push
xchg
xor
frstor
stc
ja
sahf
and
cmp
jb
call
movzbl
mov
push
xlat
outsl
adc
mov
ret
aas
popa
fistpl
push
jp
mov
daa
mov
cmc
cmp
dec
call
mov
ret
mov
scas
fcmovnb
ror
jnp
je
lahf
cmp
push
pop
orl
andl
mov
in
sahf
popf
sub
outsb
mov
js
add
es
pop
lahf
enter
iret
jo
jns
das
adc
movsb
subl
inc
rcr
hlt
je
and
xor
mov
cmc
push
add
les
jbe
ss
pop
dec
lods
jnp
ret
cmp
xor
xlat
sub
xchg
or
sub
bound
lret
repnz
jp
inc
fcoms
mov
jne
lahf
cs
lods
adc
xor
add
and
fwait
push
xor
ljmp
push
inc
pop
mov
adc
add
xchg
pop
adc
ficoms
int3
pop
movsb
sbb
jns
or
adc
int3
jge
jmp
cltd
adc
nop
mov
push
cwtl
push
hlt
std
lcall
xchg
cmp
or
cmpsl
mov
loopne
aam
mov
xchg
test
or
jne
mov
dec
sti
xchg
sub
mov
insb
aaa
hlt
out
xchg
push
sahf
mov
movsl
mov
pop
dec
outsl
or
mov
dec
aam
dec
mov
nop
out
movb
inc
sub
mov
pop
jge
lds
test
popa
lret
repz
pop
cmc
dec
icebp
cmc
sti
cli
and
inc
xchg
and
cli
mov
push
xor
jns
mov
data16
lahf
add
pop
ja
fwait
add
rcr
in
idiv
pop
addr16
mov
mov
push
sbb
jecxz
lcall
xchg
dec
sahf
int
shll
mull
sub
ret
pop
rorb
sub
inc
dec
sbb
xchg
cmp
loopne
push
enter
pop
test
push
ds
nop
adc
lea
je
dec
and
data16
cli
bound
icebp
ljmp
stos
aam
pop
jle
aam
inc
add
push
pop
add
and
push
cmp
xor
jmp
stc
ljmp
dec
call
arpl
iret
jae
lods
pop
int
orl
lea
movsb
mov
adc
divb
out
xor
inc
dec
mov
inc
lret
sbbl
add
jge
ret
sbb
push
dec
ds
adc
lock
mov
adc
ret
imul
mov
aad
outsl
xor
mov
xor
push
mov
pop
xchg
jmp
test
xor
loope
int3
push
mov
pop
int3
insl
mov
outsb
mov
fs
repnz
notb
or
or
cmpsb
pop
scas
stos
fstpl
bound
enter
jmp
mov
int3
xchg
dec
cmp
mov
rolb
mov
mov
inc
subl
stc
cmovo
sbb
shl
lahf
sti
push
sub
sub
jne
loope
js
xor
xor
inc
popf
xchg
xchg
sti
cmpsl
daa
and
xchg
cmp
je
lret
add
es
popf
jns
data16
xchg
pop
jp
sub
imulb
out
imul
inc
clc
xor
dec
inc
push
scas
mov
into
nop
fiadds
adc
and
fcoml
jle
repnz
sbb
pushf
ss
dec
test
mov
push
cmpsb
loopne
xchg
cmp
or
xor
imul
sub
push
adc
idivl
imul
inc
pop
or
sbb
scas
cmp
popa
int3
mov
mov
push
bound
mov
dec
dec
aaa
jl
sbbl
and
ficompl
push
lds
add
adc
adc
or
sti
les
xchg
cli
ljmp
sbb
jecxz
sbb
xchg
sbb
sub
cmp
sbb
lret
inc
push
mov
inc
outsl
mov
lret
int
jae
xor
cld
ja
fstl
incb
inc
push
fsubrl
mov
pop
mov
adc
stos
rclb
lret
and
out
cmp
mov
sbb
add
jecxz
push
jno
xchg
decl
divl
dec
inc
popa
shll
dec
test
lods
addr16
pop
dec
mov
ljmp
mov
icebp
test
push
push
xlat
loop
cli
cltd
movsb
ds
ss
aam
mov
xlat
lret
sub
xchg
nop
mov
pusha
shrl
mov
popa
insl
dec
shll
aam
repnz
negb
and
or
icebp
push
lds
fwait
or
cmp
movl
scas
or
mov
fisubl
shll
mov
ss
pop
sti
jl
or
das
push
test
cmp
lods
ljmp
pop
lods
mov
push
lods
cmp
xchg
rclb
stos
mov
aaa
mov
subl
xor
loope
out
in
testb
mul
pushf
data16
int3
mov
data16
iret
mov
push
hlt
clc
or
lea
sahf
sub
or
and
sub
xor
jmp
movsb
xor
cmp
push
ds
xchg
aam
mov
fmuls
push
aad
add
mov
or
jno
pushl
ret
fsubrl
cmp
mov
jbe
add
sub
lock
and
or
and
inc
pop
push
xchg
lret
popa
out
call
mov
jp
test
jo
add
or
fistl
mov
xor
inc
fistps
pop
adcl
outsl
mov
dec
mov
insl
cwtl
loope
mov
scas
mov
or
jl
in
inc
in
adc
dec
cli
adc
out
fs
add
xchg
jp
int
cwtl
and
insb
or
dec
mov
out
nop
push
repnz
sub
lret
xor
mov
in
cmp
insl
adc
test
and
xor
cld
mov
push
dec
push
fisttps
inc
pop
rorl
fstps
bound
dec
bound
sub
roll
dec
scas
inc
pop
pop
or
sub
imul
jmp
cmpsb
push
addl
out
push
cmc
outsl
push
hlt
pop
mov
jmp
in
int
imul
cmp
imul
lret
cmp
into
fxch
inc
xlat
jne
jge
ds
push
imul
xchg
push
push
rorl
push
pop
sarl
fwait
out
loope
popf
cltd
pop
jge
mov
jmp
pop
mov
into
adc
xchg
scas
lods
push
jmp
or
dec
loop
cmp
and
push
lock
or
xor
mov
xor
and
pop
dec
jns
sub
pop
shll
lods
nop
cmc
pop
js
sub
inc
scas
xor
sbb
mov
lock
add
sbb
ljmp
cmp
leave
iret
jnp
xor
xor
jl
mov
pop
clc
mov
lret
sub
loopne
jns
mov
mov
jb
and
mov
adc
lea
mov
xchg
jae
scas
xor
sbb
test
aaa
xchg
xchg
sbb
fnstsw
aam
sti
rorl
into
dec
cwtl
fsubrs
inc
adcl
ret
outsb
mov
dec
and
pop
xchg
pop
sub
scas
loope
fldl
lret
cmovle
push
ret
shlb
xor
negb
cmp
shlb
ja
lret
data16
pop
mov
shl
shlb
mov
or
bound
mov
jg
or
out
lret
pushf
lret
scas
addl
stc
cmpsb
sbb
mov
mov
test
fistpl
sub
cmpl
stos
stc
fsts
outsb
sbb
jle
jae
out
xchg
cmp
fwait
pop
and
sahf
idivl
sarb
lock
loope
xor
sbb
mov
popa
jge
aas
mov
sub
fst
xchg
std
int
cmp
mov
faddl
pop
mov
xchg
pop
mov
dec
sub
icebp
mov
sbbl
pop
in
sbb
sarl
xor
push
lds
out
daa
in
pushl
in
add
aas
test
mov
mov
testb
les
popf
or
in
ret
adc
cmp
sti
gs
iret
arpl
or
mov
dec
enter
lods
shl
popf
rorl
aaa
cmp
je
lret
add
adc
mov
lcall
sub
imulb
lods
incb
xor
fisttpll
imul
inc
das
cwtl
scas
add
pop
sbb
mov
inc
push
scas
cltd
sbb
fcoms
test
xchg
xor
xor
aad
cmp
test
iret
jecxz
je
insl
pop
imul
and
pop
data16
dec
leave
clc
inc
ret
fcomp
sahf
cmpsb
mov
dec
adc
ja
mov
xchg
mov
stos
scas
and
add
mov
jbe
xor
movsb
add
aas
adc
mov
das
cwtl
mov
xchg
add
les
inc
dec
push
or
test
push
mov
stos
lahf
inc
or
hlt
add
fs
sbb
jg
sbb
sub
loopne
subb
cmpsb
call
sub
xchg
cltd
ljmp
push
lds
jl
cld
mov
and
movsl
pop
rcpps
bound
cmp
sahf
shrb
repz
ss
lahf
data16
jle
xchg
lret
mov
push
icebp
insb
pop
movb
cmc
hlt
pop
inc
mov
inc
sbb
sub
in
inc
and
stc
mov
leave
sbb
jne
aas
and
int
mov
shr
lret
inc
pop
rcll
fnstenv
pop
into
cmp
mov
mov
arpl
out
fcomp
mov
sub
test
add
xchg
mov
push
fldcw
add
ljmp
loope
or
inc
fcom
jae
js
mov
std
test
inc
mov
jns
pop
sbb
inc
adc
mov
fists
cmp
rcll
push
inc
adc
lret
jo
add
mov
retw
outsl
push
adc
imul
mov
or
pop
cmc
xor
sti
fsubrl
dec
repz
sub
mov
pop
and
out
repnz
lgs
mov
pop
push
push
ljmp
adc
inc
mov
loopne
in
lods
stos
les
adc
gs
subb
iret
or
pop
add
add
jle
push
jns
fwait
leave
xchg
mov
fs
sub
stos
in
fwait
outsb
movsl
and
add
testl
jecxz
rolb
xchg
xor
loopne
mov
ss
lock
out
xor
insl
in
scas
sbb
jb
dec
push
icebp
xor
and
mov
cmp
xlat
lods
push
mov
adc
or
pushf
xor
lods
xchg
idivb
jge
mov
rcl
call
mov
imul
dec
into
call
cmc
or
test
sub
or
sub
les
mov
xor
xor
loope
aas
sub
add
xlat
push
fisubl
sbb
push
jmp
mov
dec
fnstenv
aam
mov
jl
lret
add
rorl
mov
cmp
sub
and
sti
out
mov
loope
xor
sbb
jb
push
dec
pop
fs
dec
xor
jge
cmovno
fists
jle
scas
dec
adc
orl
test
adc
loopne
outsl
cld
and
lcall
pushf
ds
pop
les
cltd
aad
pop
test
mov
insl
inc
dec
or
cmpsl
paddusw
test
cmp
mov
fiadds
xchg
and
push
dec
pop
mov
xchg
push
pop
enter
inc
je
fldl
mov
xchg
pop
sub
add
int
and
xor
adc
mov
mov
ret
lods
dec
or
cmc
fistpll
inc
lods
pop
mov
arpl
mov
scas
hlt
push
ret
cmp
push
pop
lods
movsl
pop
rcl
mov
pusha
jle
or
fimull
out
fcmovnbe
push
jle
push
fwait
push
icebp
cmpsl
xorb
repz
rcll
hlt
mov
insb
push
pop
sub
dec
mov
gs
lods
loopne
mov
inc
fdivl
xchg
in
shlb
and
mov
in
pop
mov
and
mov
cmp
sahf
orb
push
call
loopne,pt
add
mov
mov
mov
loope
lods
test
push
add
mov
cmpsl
outsl
sbb
sbb
xchg
loopne
pop
loop
adc
jbe
mov
int
stc
mov
aaa
lahf
ret
mov
int3
push
cld
sbb
imul
cwtl
push
pusha
mov
push
push
inc
xchg
cli
call
mov
mov
icebp
add
test
inc
orl
jno
xchg
dec
pushf
inc
dec
push
mov
mov
adc
xor
pop
cmpsb
add
pop
aaa
mov
inc
movsl
jecxz
push
jb
cltd
mov
loopne
push
pop
push
add
dec
lret
mov
loopne
mov
add
ret
lcall
out
fcoml
loopne
push
sti
orb
and
mov
cmp
popf
movsl
and
lods
int
std
or
pop
fwait
mov
and
inc
dec
and
lret
dec
and
mov
ja
or
sbb
or
mov
xchg
xor
and
call
dec
lahf
jo
ljmp
sbb
fsubrs
pop
xchg
xor
scas
mov
cmp
cmp
pop
lret
jg
dec
push
or
stos
mov
inc
das
fimuls
fisttpl
in
lcall
mov
sub
cmp
mov
arpl
sbb
lahf
or
push
test
push
dec
or
add
dec
mov
sbb
inc
cmc
push
sub
inc
add
and
xchg
shll
mov
rcrb
fidivrs
fidivrs
outsb
imul
enter
inc
into
mov
jecxz
push
pop
jo
xchg
pop
ljmp
cltd
or
sbb
jmp
cmovnp
push
mov
into
pop
jmp
dec
jmp
mov
cwtl
shrb
cmp
xor
adc
or
shll
lahf
repz
push
mov
idiv
adc
imul
mov
enter
scas
cmp
xor
into
jmp
jmp
cltd
or
fisttps
mov
sbb
test
xchg
into
push
mov
idivl
add
and
fsubr
mov
add
mov
in
sbb
icebp
outsb
in
push
fwait
test
rcrl
or
sub
jne
arpl
xor
sti
sbbb
lret
aaa
xchg
outsl
xor
in
rolb
and
jbe,pt
adc
push
fsubr
fidivrl
jle
adc
mov
mov
cmp
in
mov
jne
dec
scas
sarb
pusha
dec
mov
popf
cmc
or
mov
dec
cld
je
jne
inc
mov
sahf
mov
pop
stos
jno
aas
fisubs
xchg
iret
add
pop
data16
int
or
cmpsl
push
mov
mov
icebp
iret
mov
in
adc
rcll
ja
mov
or
in
aam
jno
in
ret
rcr
negb
daa
lods
rclb
dec
aad
lret
bound
test
pop
iret
sub
sbb
ret
in
cmpsb
sub
xchg
dec
int3
dec
jmp
jp
mov
or
movsl
test
loope
fucom
shlb
inc
mov
push
daa
ret
aaa
push
mov
xor
xchg
pop
inc
inc
and
popl
add
dec
out
jle
sbbb
movsb
idivb
adc
enter
push
leave
repz
pop
clc
inc
dec
and
sbb
dec
ss
mov
pmaxsw
adc
inc
jmp
add
loop
cmc
movsl
insb
or
push
mov
mov
ja
xor
dec
enter
bound
cwtl
cmpsb
aad
scas
mov
jbe
push
daa
xor
jecxz
popa
outsb
adc
cmp
es
bound
repz
xor
mov
xchg
mov
jbe
push
mov
adc
test
adc
dec
lcall
mov
sub
adc
std
push
addr16
pop
add
sbb
dec
push
sahf
mov
sub
cli
outsb
pop
ljmp
outsb
xor
movsl
aam
or
push
pusha
scas
loope
fs
loop
push
test
sub
ret
andl
sbb
push
fdivs
and
mov
xor
or
fs
test
add
scas
mov
shl
mov
push
mov
movsl
dec
xor
push
nop
bound
xchg
loopne
jp
cmp
mov
cmpsl
repnz
or
xor
xchg
out
dec
or
sub
add
dec
jns
jnp
ficoml
out
mov
jmp
jbe
fdivl
jmp
mov
push
or
pop
inc
push
xor
push
dec
es
imul
or
addr16
and
fcmovnbe
jb
jno
or
std
je
es
and
repnz
dec
out
xor
stc
or
pop
imul
rcl
xchg
cwtl
add
jbe
scas
mov
outsb
xor
dec
mulb
icebp
adc
mov
stos
add
sub
rorl
xchg
mov
xchg
fisubs
je
and
dec
cli
outsb
push
jp
mov
pusha
pusha
es
jne
cmp
pusha
in
std
into
iret
pop
daa
jmp
mov
mov
cmp
and
add
fs
push
xchg
mov
movzwl
test
cld
into
into
sub
and
xchg
mov
gs
inc
jbe
mov
sbb
dec
jge
pop
inc
pop
aas
mov
test
movsb
pop
std
pop
jg
fs
mov
movsb
jmp
sti
mov
pop
cltd
aam
jp
test
test
push
xor
cmp
mov
out
decb
rolb
sbbb
test
add
inc
cld
in
repnz
cmp
xor
sub
add
sub
fisttps
push
jle
dec
mov
jb
push
das
and
andl
mov
movsb
mov
dec
mov
cmp
lret
fwait
dec
mov
out
xor
add
test
inc
imul
aam
add
iret
loop
xor
and
js
lods
test
and
mov
nop
inc
pop
pop
fst
push
decb
js
push
xchg
cmp
pop
push
lea
insl
je
jp
xchg
xlat
loopne
inc
out
iret
inc
pushf
mov
lds
or
lahf
jle
pmaxub
add
pop
nop
xor
in
jl
pushf
ljmp
lret
inc
xor
lahf
mov
inc
aad
stos
mov
mov
arpl
push
or
stc
dec
adc
jle
test
cmc
into
js
sbb
nop
mov
sub
loopne
fucomp
sub
sub
pop
xchg
mov
jge
jg
dec
decl
push
mov
pop
sub
jecxz
fs
cmpsb
lds
data16
in
fidivs
pop
xor
xlat
inc
data16
push
xchg
jge
cltd
mov
cmpsb
cld
outsl
jo
int3
test
inc
lret
add
dec
shl
jno
cmp
stos
lods
mov
and
pop
jle
arpl
pusha
jg
jae
push
lret
movl
lret
fdivrl
mov
mov
lods
lock
xchg
mov
pop
das
cmpsl
test
push
pop
push
or
subl
push
scas
shll
js
mov
mov
movsb
in
pushf
mov
imul
and
out
mov
xor
jae
icebp
inc
jecxz
iret
in
add
pusha
call
addb
imul
pop
push
cmp
mov
shrb
lds
outsb
aad
fdivp
xor
shlb
or
jb
push
shlb
negl
inc
add
into
mov
inc
sahf
pop
fs
es
mov
pop
rorb
pop
mov
sti
notl
jle
andl
rorl
mov
mov
mov
xor
dec
or
int
mov
mov
push
sub
ljmp
lods
inc
ja
push
mov
cmp
jp
push
dec
add
insl
faddp
lcall
test
aad
addb
jle
ljmp
xchg
push
sbb
fstpl
sbb
push
inc
cmc
sbb
fisubl
int
lret
push
jno
and
shr
push
sbb
scas
cmpsl
pop
in
andl
ja
adc
or
dec
outsb
pusha
inc
iret
fstl
push
je
push
lret
lahf
outsb
sub
lods
mov
push
pop
lods
mov
test
in
add
push
push
shll
pusha
sub
sbb
or
outsb
xor
rorl
outsb
inc
mov
and
xor
inc
sub
push
repnz
icebp
fst
call
fdivrs
jne
lods
sbb
add
add
ret
cmpsb
popa
lea
mov
sti
mov
dec
fcom
sub
fidivrs
shlb
xlat
movsb
mov
add
iret
push
icebp
pop
jno
test
mov
mov
jnp
test
bnd
inc
jb
pop
pop
xchg
add
jle
shl
push
cmc
addr16
stc
arpl
fbstp
mov
lock
cmp
and
cmc
cmpsb
ret
or
pop
rorl
pop
cs
aam
inc
mov
hlt
fwait
lds
sub
fwait
mov
cmp
rcll
and
push
aam
out
iret
insb
js
mov
jp
adc
outsb
test
es
push
loop
sub
out
xchg
mov
adc
adc
sub
pop
dec
inc
rcll
mov
mov
mov
xchg
fs
stos
push
cld
mov
push
xor
mov
outsl
adcl
sahf
jge
sub
mov
dec
fstps
popa
mov
stos
fwait
jg
decb
add
mov
pop
scas
pop
cmp
xchg
sub
leave
lods
in
iret
andl
shrl
mov
out
int3
mov
ret
push
hlt
and
dec
loopne
mov
xchg
wbinvd
mov
lods
or
sub
sbb
negb
lock
add
mov
jo
or
scas
xchg
mov
pop
out
add
iret
dec
and
or
inc
inc
or
call
pop
mov
test
icebp
jno
flds
mov
rolb
or
jns
adc
test
sbb
ja
mov
ds
mov
mov
int
adc
insb
pop
inc
push
xor
xlat
movsl
idivb
in
jmp
movsb
cmp
mov
imul
pop
jnp
sbb
xchg
sarb
xor
xor
jnp
adc
cmp
subb
cmpsb
mov
les
inc
enter
cmp
mov
imul
jne
movsl
or
div
repz
mov
test
jmp
lret
xchg
sahf
mov
inc
sub
jge
sub
scas
test
xchg
push
dec
imul
ds
sti
iret
mov
loope
and
lahf
aas
or
test
fisttpl
scas
test
adc
dec
cld
scas
popa
jecxz
push
aaa
mov
or
push
fwait
sub
mov
mov
movsl
mov
outsl
in
icebp
adc
add
lahf
pop
sarl
cld
push
leave
movsl
xchg
mov
iret
cmc
and
sarb
repz
or
iret
inc
add
and
mov
in
arpl
cmp
xor
xchg
add
das
aam
and
jno
imul
add
loopne
fcoml
xlat
push
inc
mov
je
xchg
mov
push
and
mov
mov
mov
xor
std
adc
mov
lcall
pop
jno
stc
rcrl
xchg
cli
xchg
xchg
or
test
outsl
mov
xchg
iret
das
jmp
cltd
hlt
dec
push
imul
mov
lods
enter
leave
sahf
xchg
in
iret
or
ss
adc
aaa
lock
loop
popa
sub
xchg
xchg
xchg
cmpsl
inc
test
and
dec
inc
push
aam
lret
mov
sub
adcb
adc
fstps
aad
jg
sub
inc
push
pusha
nop
setb
enter
jl
stc
lock
mov
int3
bound
int3
cmp
loope
sub
mov
xor
out
xor
enter
fmul
or
xor
jle
dec
sbb
ret
test
push
pop
cmp
lret
sbbl
rcl
loopne
dec
test
xor
xchg
add
mov
push
and
adc
fidivs
lea
test
sub
push
push
enter
dec
jb
mov
negl
jp
sub
and
pusha
icebp
or
adc
dec
mov
adc
xchg
xchg
push
and
inc
jne
pop
fldl2t
push
adc
insb
cmp
in
mov
test
pusha
and
push
jae
popf
fs
cwtl
sbb
xor
lea
in
pop
lahf
sub
mov
mov
ljmp
cmpsl
and
jae
pop
and
aas
jmp
fiadds
jge
xor
sub
pop
dec
hlt
mov
in
mov
xchg
push
jmp
mov
xchg
or
sub
outsl
mov
push
and
xlat
xchg
jae
cmpsb
mov
inc
push
jae
movsb
dec
mov
jge
jno
and
mov
int3
iret
das
and
mov
lods
cld
sub
dec
sub
sub
cmp
dec
jl
inc
pop
scas
dec
pop
aaa
or
cmpsl
clc
sub
pop
je
not
lods
adc
or
lods
dec
jmp
and
rcll
and
xlat
nop
arpl
sbb
push
les
mov
shrl
add
ljmp
test
or
popa
icebp
outsb
xchg
cltd
xchg
cwtl
loopne
adc
add
xor
xor
cli
test
clc
hlt
and
mov
outsl
jne
into
mov
xchg
aam
cmp
mov
inc
rclb
bound
adc
sub
popf
mov
mov
cmc
push
jno
cmp
arpl
jns
mov
jp
or
popf
mov
mov
call
adc
gs
rorb
xchg
inc
aas
pop
cmp
data16
das
lods
out
orl
cmp
hlt
in
shrl
jmp
mov
jno
fstl
fs
shld
bound
cmp
in
daa
into
loope
incl
add
or
jmp
push
shlb
add
repnz
dec
inc
repnz
sbb
and
mov
add
lods
push
mov
out
je
pop
sarl
ret
add
add
sub
or
call
hlt
addr16
mov
add
pop
or
inc
dec
mov
jge
sub
cmp
xor
jg
iretw
cmc
fwait
adc
lcall
dec
push
cwtl
sub
sbb
sbb
inc
dec
adc
pop
inc
in
out
xor
xchg
cs
cwtl
andb
sbb
repz
cli
and
push
fisubrs
imul
mov
popf
and
mov
push
cli
fisttpl
ljmp
push
movsb
and
jg
adc
int
outsl
mov
aas
sbb
xor
jmp
adc
aam
imul
push
lock
cmp
or
mov
ds
out
out
fisttpl
xchg
mov
popf
fwait
mov
lock
xor
mov
add
or
pop
xchg
out
incb
inc
rol
ficomps
cmp
jmp
sbbl
and
daa
and
pop
push
sbb
js
ret
push
adc
jae
shl
cmp
insb
push
jns
je
arpl
xchg
cmc
inc
xor
ret
pop
movsb
rcll
inc
fiadds
jnp,pt
sarb
lret
arpl
adc
push
inc
notb
push
fcmovnb
addb
mov
inc
adc
movsl
std
sub
sbb
inc
jne
addb
shr
icebp
out
cld
mov
mov
mov
or
mov
push
xchg
xor
fs
and
ja
xchg
inc
popf
and
cmc
aas
pushf
push
sub
fbld
sbb
fs
push
aas
rcrb
movsl
jns
mov
pop
xchg
pusha
dec
adc
mov
nop
jg
lret
sub
jp
jae
jnp
mov
in
pushf
sbb
jg
lret
inc
sarb
push
mov
lret
jl
out
push
push
inc
sbb
hlt
jle
mov
add
popa
mov
stos
mov
xchg
xor
roll
andl
cmp
add
pop
push
addb
jp
ss
jo,pt
les
or
and
dec
inc
inc
fs
sbb
inc
cmpb
or
out
fistpll
inc
cwtl
inc
add
mov
adc
addr16
jl
das
enter
sub
inc
pop
mov
jns
and
mov
xor
sbb
jae
inc
push
fwait
rolb
insl
jno
xor
stos
mov
mov
xor
mov
and
outsl
add
pop
pop
jns
jnp
popf
pushf
cmc
pop
jecxz
xor
rcrb
cmp
mov
sarb
and
xchg
mov
idivb
or
xchg
sub
pop
jecxz
in
cmp
fdiv
out
loop
mov
mov
call
stos
cmp
push
jne
jmp
mov
adc
rcrb
fmul
dec
push
push
add
jmp
divb
gs
nop
dec
sbbl
pop
arpl
xor
or
lahf
or
lods
js
insl
mov
insl
mov
xor
fcoms
fs
add
aaa
mov
imul
loopne
sbb
jo
mov
out
adc
sub
or
mov
sub
lea
pop
gs
pop
shrl
cli
add
jle
outsl
mov
add
daa
inc
in
xlat
shr
mov
rcrb
sahf
out
stos
sub
cmp
cmp
popf
leave
inc
xlat
bnd
jae
ret
or
idivb
pop
jnp
rol
pop
push
or
inc
cmp
rorb
sbb
adc
data16
aad
lds
mov
jg
jns
rolb
sub
imul
aad
je
jns
pop
sti
sub
call
inc
mov
orb
movsb
mov
or
add
pushf
xchg
out
dec
and
aaa
jecxz
inc
mov
xor
jecxz
loopne
into
mov
xor
aas
outsl
inc
jle
jo
xchg
pop
iret
jg
dec
gs
push
out
into
push
push
inc
lea
jbe
add
mov
pusha
ds
insb
rcrb
pushl
movsb
adc
sarb
and
xor
push
out
jg
cs
fwait
sub
clc
sbb
pop
dec
loop
ret
test
pop
ja
push
sub
sbbl
mov
and
jge
shrl
xorl
sbb
ja
ja
fnop
push
inc
sub
jo
inc
sub
mov
or
add
test
dec
mov
lea
aaa
shl
movl
mov
shll
xor
roll
nopl
and
cld
cwtl
cmp
iret
mov
aas
outsb
or
daa
in
and
inc
ret
popl
scas
pop
xor
xchg
mov
in
push
sbb
adcb
dec
stos
jb
mov
mov
movsl
lcall
mov
lods
xchg
sbb
dec
push
mov
int
mov
inc
mov
imul
sub
push
inc
adc
aas
sbb
testl
mov
xchg
mov
jge
cld
mov
pop
cmp
test
out
movsb
push
fildl
add
ljmp
mov
jl
sub
leave
adc
in
jp
mulb
mov
repz
cld
xchg
int3
inc
inc
adc
or
mov
mov
jbe
xchg
sbb
inc
fwait
and
stos
jge
pop
mov
repnz
mov
dec
pop
cmp
xor
orl
inc
ss
dec
dec
lods
cltd
mov
lds
ja
jne
imul
cmp
scas
aad
cmp
mov
dec
dec
adc
loop
mov
mov
pop
outsl
mov
insl
test
test
push
imul
cmp
pusha
and
mov
push
mov
aam
cmp
aam
les
push
and
int3
mov
into
push
jne
shll
out
xor
mov
mov
enter
sub
imul
lret
imulb
push
int
das
inc
dec
cs
daa
or
mov
jnp
jno
jp
aam
jmp
rorb
pop
ret
push
stos
nop
adc
xchg
or
test
adcb
inc
addr16
jbe
negl
pop
aad
sti
enter
daa
iret
push
pop
fmuls
jl
inc
pop
roll
stos
popa
ds
int
icebp
fimull
pop
loope
pop
cmp
and
xchg
vpandn
sbb
xchg
cmp
call
fstpl
and
dec
fdivrs
push
xchg
jge
push
pop
pop
fistpl
inc
dec
cmpb
test
fwait
int
fstpl
sbb
scas
pop
pop
and
out
lahf
inc
int
leave
jg
inc
lcall
dec
sub
aas
pop
outsl
mov
arpl
push
sub
jne
add
add
das
push
xchg
cmpsb
outsb
dec
idivl
or
bound
add
imul
stc
jge
and
mov
jg
or
xchg
xor
adc
roll
sub
insl
ds
pop
movsl
mov
sbb
in
imul
mov
jb
jge
arpl
rcr
pop
ds
xlat
mov
xor
neg
mov
sbb
xor
pop
push
add
add
int3
pop
jle
pop
dec
mov
lret
nop
inc
sbb
xchg
or
adc
lret
sub
clc
jle
push
sti
xchg
sbb
lahf
pop
lahf
test
push
dec
arpl
aas
jb
int3
adc
push
xor
sbb
aad
cmc
and
fnstcw
inc
jo
pop
in
ss
or
imul
pop
lahf
das
mov
pushf
push
loopne
sbb
ret
pop
jge
dec
mov
mov
or
xor
cld
insl
iret
scas
sti
or
imul
nop
out
push
test
shll
fisubrs
mov
xchg
inc
daa
xor
jne
xor
ret
in
sbb
lods
xchg
xor
jae
xor
int
lcall
cld
int
mov
fmuls
add
cld
cmp
out
in
xchg
push
test
sub
fs
adcb
mov
dec
lea
shl
cmp
cmp
data16
push
jg
mov
loope
aam
int
in
daa
popa
cmp
ljmp
in
mov
roll
sbb
adc
sahf
xchg
jne
imul
or
mov
je
daa
pusha
call
xor
xor
mov
enter
imul
mov
outsb
xchg
fcmovne
jns
inc
test
je
pop
sahf
pop
sub
shlb
jne
es
les
sub
xor
xor
sbb
sbb
dec
sarl
je
push
ret
mov
mov
aaa
mov
and
pop
cmp
xor
xor
jb
sub
and
cmp
xchg
je
push
cmp
and
sub
imul
xchg
adc
jno
inc
enter
lea
mov
int
dec
movsl
add
icebp
lds
pop
inc
icebp
mov
cwtl
rol
in
seta
lock
inc
xchg
or
xchg
insb
jl
push
push
jl
clc
cmp
sarb
data16
sbb
fnstenv
jp
pop
mov
pusha
lds
and
xor
sub
pop
bound
inc
sbb
push
jnp
inc
mov
xchg
bound
cmp
jns
lea
cmp
shll
add
es
out
or
out
rol
cmpsb
ljmp
repnz
xchg
and
test
xor
bound
scas
out
sbb
mov
std
cmp
xor
lods
test
scas
pop
cmp
out
pop
jnp
lds
fdivrs
aas
popf
pop
adc
fisubrl
xor
fcmovnb
push
stc
adc
sbb
mov
add
cltd
add
fidivrl
movsb
daa
sub
pop
push
push
or
sbb
xor
pushf
xchg
loop
xchg
out
sbb
fists
ds
jl
test
mov
mov
das
ds
mov
xchg
test
fbstp
inc
sbb
outsb
jns
dec
add
jg
and
lret
jne
push
jg
sti
sbb
add
test
shrb
mov
mov
test
cmp
andb
scas
jge
xor
je
mov
inc
shlb
sar
inc
sti
add
fnclex
push
leave
outsl
rcl
mov
xor
stos
ljmp
mov
sbb
rorl
pop
sub
lret
pop
lret
aad
mov
ret
and
std
call
dec
imul
iret
inc
push
mov
cmpsb
jns
mov
stc
ljmp
out
mov
repz
cmpsl
ss
aaa
inc
dec
pop
je
outsb
fimull
bound
mov
pop
jns
test
addr16
inc
mov
mov
loope
cmp
lret
jb
fists
add
jb
or
dec
shll
add
nop
and
popa
jl
lods
xor
call
and
cmp
loop
sbb
mov
gs
in
pushf
cmp
movsl
inc
or
ja
xorl
movsl
jo
rcr
sub
and
movsb
jge
js
mov
mov
xor
arpl
decl
mov
mov
fcompl
pop
inc
in
mov
inc
add
iret
dec
lods
in
sub
mov
xor
lcall
imul
adc
sub
stc
mov
jo
mov
push
movsb
push
movsb
cmp
add
leave
out
mov
aad
das
mov
pop
jbe
push
pop
ja
cmpb
mov
xchg
test
pop
pusha
hlt
insb
jb
leave
cmp
repz
push
int3
pushf
aas
stos
inc
sub
int3
cmpb
xchg
sbbl
dec
xlat
in
fdivl
sub
inc
push
xor
cmp
mov
pop
or
sbb
sub
jae
sub
out
mov
fldt
popa
push
inc
mov
dec
dec
xor
sub
orl
out
jl
icebp
ja
push
lahf
xlat
imull
dec
and
or
mov
test
add
jmp
pop
jmp
popf
and
sub
int
addr16
test
mov
addr16
lsl
fld
and
faddl
bound
pop
shlb
loope
aad
aam
jecxz
jno
ror
out
and
sarb
jae
or
or
dec
mov
cs
movsb
jae
xor
cmp
cmp
inc
loopne
jecxz
adc
gs
dec
jl
in
ret
ljmp
mov
ret
xchg
fsubp
dec
sti
and
inc
out
mov
test
cld
push
cmp
ficompl
js
sub
push
dec
lds
pop
cmpsl
jbe
pop
or
test
pop
mov
inc
and
xchg
xor
add
or
push
call
or
inc
cmp
aas
out
inc
cmp
lea
movsl
pop
or
in
dec
enter
out
sbb
dec
adc
fwait
mov
loop
push
adc
xor
inc
iret
cmp
out
sbb
sub
inc
shlb
dec
push
sub
xor
pop
int3
shr
test
jnp
cmp
ss
push
xor
xchg
sti
mov
fcmovb
scas
ljmp
mov
test
mov
xor
mov
pop
loop
icebp
sarb
fcmovb
add
shrl
sbb
maxps
fisubl
xor
fstpl
and
jge
adc
jp
lahf
int
push
cs
repz
stc
out
sbb
mov
mov
lahf
aas
push
popa
push
xchg
pop
jns
inc
mov
inc
aaa
jg
mov
cmpsb
and
fcmovnu
es
cld
inc
or
shll
mov
lods
loop
fimuls
push
scas
pop
ja
sbb
aas
pop
pop
imul
mov
xor
sub
sbb
and
lahf
ljmp
jae
mov
xchg
sbb
sti
adc
lock
movsl
jo
dec
je
mov
mov
cmp
les
out
filds
out
ja
fnstcw
dec
mov
enter
add
add
pop
jge
sbb
aas
insb
cmp
daa
inc
outsb
in
add
jb
push
jo
xchg
inc
xlat
mov
jle
mov
cwtl
fisubl
xchg
shlb
fsubl
repnz
jne
cmp
xor
ret
jl
addl
xchg
je
or
dec
cmpsb
out
and
xchg
or
xor
inc
sbb
push
or
adc
notl
movsb
aas
sub
mov
ret
insl
cmpsl
je
aaa
cld
jo
hlt
dec
jg
inc
ret
dec
xchg
decl
xchg
xchg
push
cld
movsb
adc
ret
or
fdivr
add
stc
test
push
pop
mov
test
sarb
out
sbb
bnd
test
add
pop
enter
fisubl
dec
out
mov
lea
inc
mov
ficomps
inc
mov
ret
mov
dec
psubusw
imul
or
jae
fcomps
mov
cltd
pop
and
cltd
add
inc
pop
lds
sub
and
mov
mov
pop
jmp
add
mov
inc
push
gs
jmp
pop
sarl
dec
mov
push
push
test
int
cld
mov
imul
or
xchg
das
repz
je
aad
cli
data16
fmuls
dec
aaa
push
aad
xor
lea
popf
aad
insb
js
int
arpl
lret
sbb
mov
mov
gs
mov
ja
jo
or
fcmovnbe
add
inc
sbb
jecxz
insb
hlt
dec
arpl
loope
adc
jnp
das
in
test
xchg
pop
sub
enter
cld
popa
repz
in
cmpsb
mov
in
cmpsl
adcl
mov
add
negb
push
clc
shlb
push
or
jbe
ljmp
cmpl
fstpl
ret
movsb
pop
push
mov
xchg
or
loopne
mov
popf
ret
pop
xchg
into
xlat
xlat
lcall
out
nop
decb
lods
and
rorb
std
fwait
jns
je
mov
xor
lock
cs
jne
popa
ret
push
orl
rorb
ror
repnz
add
aad
in
inc
cmpsl
and
jp
push
jle
xchg
repnz
cmp
push
cwtl
adc
gs
sbb
cmp
fisttpl
pusha
into
pop
mov
mov
arpl
fnstcw
sub
popf
mov
adc
and
lret
pop
dec
mov
or
inc
or
pusha
mov
test
dec
notb
les
inc
push
ljmp
cmp
ds
xor
inc
cmpsb
add
addl
bound
in
ss
int3
cmc
ss
or
test
sarb
enter
xchg
mov
mov
leave
mov
clc
add
movsb
movb
add
pusha
dec
xchg
popa
aam
stc
fistps
sbb
pusha
lcall
lret
xchg
rcrl
cli
inc
mov
jne
or
pushf
sub
xchg
les
push
outsb
mov
call
out
addb
nop
pop
int3
jne
dec
xchg
inc
leave
out
sub
mov
aad
mov
dec
shlb
cmp
sub
add
scas
sahf
enter
in
pop
sub
sti
dec
shll
add
out
ret
lcall
je
adc
xchg
sub
inc
sbb
in
mov
mov
xor
dec
pop
and
jecxz
jmp
jl
test
mov
push
repz
adc
inc
mov
jg
int3
mov
mov
xchg
rcrl
and
insl
bound
push
mov
adc
sbbl
sahf
sahf
outsb
loope
push
out
lret
sub
mov
fisubrl
mov
popa
and
mov
in
outsb
mov
push
xor
hlt
fdiv
jnp
inc
mov
mov
jmp
test
xadd
sub
adc
add
loope
out
in
adc
sbb
fcmovu
adc
loope
movsb
ss
insl
adc
jmp
call
xor
rorb
push
xor
ds
adc
lock
adc
sbb
daa
adc
mov
nop
jnp
or
mov
mov
or
mov
ret
rcrl
orb
cwtl
int
dec
out
sub
ss
cwtl
mov
loopne
out
ror
xor
ficoml
ss
sub
xor
cmp
cmp
into
sbb
sub
aad
imul
sahf
pop
and
cmp
cltd
adc
ss
dec
cmpsb
rcrl
icebp
imul
xchg
push
xor
push
popa
fisubs
mov
inc
mov
cmp
je
dec
outsb
test
inc
adc
bnd
ds
and
jmp
xor
nop
lret
lods
pop
ss
pop
loop
outsb
cmc
pop
sbb
iret
inc
or
dec
idiv
js
sub
clc
mov
push
loop
outsl
movsl
std
das
aam
or
inc
inc
imull
lcall
xor
icebp
adc
gs
sub
jl
ret
mov
je
repz
push
cli
in
sbb
rorb
popa
jnp
fisubs
sbb
xor
iret
push
dec
mov
push
mov
repnz
xchg
aaa
pop
sbb
ffree
mov
mov
je
iret
sub
insb
mov
fnstsw
pop
mov
dec
sbb
lock
jp
push
in
scas
lret
lcall
mov
in
int3
mov
adc
fdiv
aam
repz
gs
cmp
test
stos
ljmp
sahf
dec
inc
fadd
jecxz
rcr
bound
inc
psrlq
xor
mov
dec
sarb
lock
push
push
lret
test
int
loopne
bswap
pushf
cmpsl
jns
xor
jne
push
mov
outsb
pop
imul
inc
mov
pop
xor
cmp
imulb
ffree
lea
in
test
hlt
push
xchg
sarl
test
ds
xchg
enter
mov
loop
es
pushf
cmp
and
iret
mov
in
dec
jno
imul
mov
xchg
in
adc
jno
jge
xchg
lock
jno
adc
test
testl
cmp
jno
push
jmp
adc
cmp
cs
int3
shlb
pusha
aam
and
ficoms
sti
insl
pop
cmpsl
test
xchg
clc
mov
faddl
inc
aad
sti
xchg
push
sti
cld
mov
push
xor
pop
mov
lret
outsb
in
or
pop
xchg
cs
fs
or
jg
mov
clc
adc
mov
or
sbb
lret
js
das
mov
lock
rcr
scas
subb
or
out
and
push
sub
stos
insb
lea
repnz
fcom
fstpl
adc
aas
js
cld
movsb
sbb
imul
aas
loopne
add
lods
lods
xchg
es
pop
sahf
ret
pushf
inc
sub
xchg
inc
call
jns
ret
je
sub
imul
jno
and
lods
fucomp
sbb
fs
je
aas
jns
sbb
mov
mov
out
dec
add
pop
pop
cli
loop
pop
pushf
iret
push
fadd
mov
push
ret
push
ret
pop
aam
lds
fsubrl
add
cmp
je
pushf
mov
icebp
mov
xorb
addl
leave
dec
or
mov
xor
jge
lods
sub
repz
mov
add
int
cmp
push
cmp
aam
sbb
mov
clc
addr16
dec
cmp
cmp
dec
sub
sub
lock
rol
ja
push
mov
mov
add
push
mov
xor
and
int
adcl
sub
xlat
jge
jno
cmp
cmpsl
and
mov
fldl
pop
adc
aaa
push
jg
jnp
xor
adc
and
inc
add
push
xor
in
cli
out
push
mov
sbbb
push
or
icebp
test
iret
roll
ja
cmpsl
push
jne
je
mov
xor
pop
cmp
adc
mov
lea
jb
adc
lahf
and
pop
movsb
xchg
aaa
xchg
mov
repz
divb
movsl
push
sub
xchg
negb
pop
add
push
adc
add
sub
jmp
mov
xor
mov
out
pop
add
xchg
cmp
pushf
outsl
mov
loope
dec
sbb
ss
jb
jge
jns
icebp
pop
push
std
or
add
int
cmp
pop
rorb
dec
cmc
shll
out
cmp
xchg
mov
jl
sbb
movsl
pop
xchg
mov
mov
fsubrs
pop
push
push
cwtl
push
xchg
inc
xor
jg
pop
out
adc
add
ret
push
xor
sarl
loop
pop
nop
outsl
adc
and
sti
cmp
xchg
jo
je
mov
addb
mov
sub
xchg
inc
xchg
xchg
icebp
dec
push
xor
andb
dec
pusha
loope
add
aaa
mov
popl
cmp
add
push
push
or
dec
das
rcll
sar
pop
popa
dec
inc
mov
out
mov
popa
fdivrs
out
or
adc
dec
movsl
and
jmp
jae
or
sub
into
pop
dec
adcl
mov
inc
xchg
add
cmpsl
sarb
sub
add
jns
call
mov
inc
cmp
imul
mov
imul
sub
outsl
adc
push
aad
xor
pop
stos
or
shlb
sbb
es
xchg
adc
mov
mov
push
xlat
mov
adc
add
or
pop
lcall
jle
adc
inc
push
mov
addl
clc
adc
mov
jl
popa
rorl
xorl
mov
fmuls
outsl
jb
rcrl
fwait
test
jmp
test
js
push
inc
icebp
ret
sbb
pop
xor
xchg
xchg
or
loope
cltd
dec
ret
in
or
cs
push
iret
xor
or
sbb
pop
or
rorl
out
mov
jbe
loopne
loope
add
dec
pushf
js
loop
sbb
nop
ja
pop
jbe
pop
popf
xlat
xchg
daa
out
sti
out
mov
movsb
pusha
int
jmp
adc
fwait
out
cmp
xchg
mov
jle
in
xor
lcall
daa
or
dec
mov
inc
sbb
jg
lahf
sub
ret
test
les
js
or
testb
add
fs
aaa
or
cli
xchg
mov
clc
ljmp
sub
imul
jg
ror
std
push
nop
xor
test
dec
push
jno
test
pop
sbb
dec
xor
ret
sbbl
iret
test
adc
push
fstps
pop
or
dec
cmc
call
call
decb
repz
xor
imul
test
and
enter
jmp
lock
push
mov
rolb
mov
mov
popf
in
xor
movsb
scas
outsb
push
adc
fistpll
and
pop
test
push
add
dec
sahf
pop
mov
xchg
xor
adc
gs
lds
jae
jne
leave
out
shll
pop
mov
pop
sbb
scas
icebp
orb
pushf
aaa
dec
dec
aas
test
out
cmc
cmp
les
lret
add
dec
test
loope
xor
lock
and
jg
pop
outsb
pushl
faddl
and
imul
ljmp
ss
and
push
add
je
lahf
loop
lret
iret
daa
out
imull
aad
je
cmc
imul
push
mov
or
imul
xchg
jle
lcall
leave
ret
int
rolb
dec
pusha
repnz
ds
or
adc
or
ror
sahf
push
sbbb
mov
into
notl
inc
mov
cmpsl
jae
arpl
mov
push
mov
mov
push
sub
sti
dec
dec
xchg
jg
pop
cmpsb
push
inc
pop
cs
mov
scas
pop
adc
pop
fldt
imul
aaa
and
or
adc
xor
jmp
mov
jmp
aad
stc
inc
jo
jg
push
dec
scas
jp
dec
add
xchg
mov
inc
and
daa
adcl
stos
loop
dec
addb
dec
out
cmp
popf
pop
jmp
pop
jns
fbstp
mov
js
xor
mov
rorb
lcall
repnz
cli
xchg
sti
out
gs
mov
inc
lds
mov
push
dec
pop
sub
push
mov
icebp
orb
enter
dec
dec
nop
loop
fildll
loop
or
and
jecxz
sub
jmp
das
and
shrl
pop
outsl
pop
sti
out
in
mov
int
jno
imul
mov
gs
mov
lock
or
dec
in
int
push
arpl
stc
xor
js
add
sub
rcrb
sub
pop
sbb
sbb
addl
nop
xor
fs
pop
scas
jns
or
push
js
aad
out
cmc
scas
push
push
push
pushl
dec
xchg
mov
scas
sbb
subb
adc
push
cs
add
xor
jno
mov
out
fildll
repz
dec
fidivrl
push
orb
loopne
mov
pop
cmp
and
adc
push
out
xchg
xor
jne
pop
sub
cmc
or
fwait
arpl
mov
fisubrl
popf
shlb
addb
lret
outsl
or
cld
or
pop
dec
cmpsb
out
popa
push
xlat
rcrb
add
inc
out
cs
lods
or
mov
insl
fstps
cmp
and
pop
adcl
adc
movsl
lods
ror
add
sbb
pop
or
fs
icebp
xchg
jp
pop
hlt
dec
sub
inc
loop
stos
scas
je
enter
xor
sbb
adc
push
test
or
dec
mov
jg
out
pop
and
int
pop
rclb
adc
adc
dec
mov
push
and
and
xor
mov
dec
pop
lock
push
xchg
ret
add
and
aam
adc
push
push
sub
js
push
int3
cmp
add
inc
ljmp
cmpsl
jns
lahf
adc
test
sub
shlb
mov
fbstp
loopne
ds
cmpsl
push
mulb
jle
push
fistl
ret
jge
movsl
mov
pop
popa
scas
test
pmaxub
mov
lcall
xchg
pop
sub
lea
repz
jl
es
lea
mov
jecxz
jo
fildll
int
jbe
bound
pop
frstor
shl
scas
pop
ljmp
mov
std
lock
cmp
scas
xor
adc
cltd
push
ljmp
cltd
pop
and
or
dec
mov
cwtl
pushf
rolb
ja
in
lock
sub
rclb
into
inc
sti
sub
imul
dec
jnp
mov
dec
fstl
out
mov
shrl
mov
punpckhbw
into
dec
xchg
ret
mov
fistpl
mov
sub
bound
and
out
push
dec
jnp
repnz
shrl
pop
cmpsb
sub
in
scas
xchg
inc
or
pop
mov
mov
rcll
sub
cmp
flds
pop
fdivs
shl
fnstcw
loop
cli
data16
sbb
mov
and
push
mov
rclb
dec
xor
dec
notb
fstpl
lds
xchg
int
mov
mov
jae
push
outsl
les
movsl
jl
jo
sub
pop
add
and
mov
inc
jbe
push
mov
shll
push
cmp
mov
lret
call
or
cmp
mov
jnp
es
mov
fst
clc
jp
test
push
inc
cs
sub
pop
lret
inc
fsubs
das
cs
aaa
cmpsl
and
enter
aaa
xchg
and
jo
and
iret
rcll
subb
mov
xlat
dec
jae
dec
daa
loopne
clc
call
in
fnsave
or
push
xchg
add
sbb
cld
mov
mov
sbb
ficoms
stos
cmp
es
dec
push
sub
adc
pop
sbb
jl
xor
xchg
push
xchg
lock
aaa
dec
and
mov
mov
insb
sub
sub
jnp
push
cmp
pop
pop
and
dec
ret
movsl
mov
adc
pop
int3
dec
lods
std
cmp
mov
shll
cmp
popa
fcompl
imul
cltd
fld
scas
sbb
aad
fisubs
xor
xchg
adc
les
cmc
jl
lods
mov
adc
sbb
jb
ds
mov
pop
cltd
into
cmp
pop
push
frstor
jne
imul
bound
outsl
in
cmp
adc
mov
add
insb
mov
mov
and
jp
in
daa
mov
cmp
lds
mov
pop
popf
lret
xchg
sarb
adc
xchg
inc
fwait
jg
add
and
xchg
sbb
mov
xchg
shrb
xchg
fistpll
and
xchg
inc
xchg
fidivs
test
mov
pusha
adc
rclb
out
dec
xchg
stc
xorb
adc
nop
icebp
add
cmp
adc
jecxz
push
and
movsl
jne
icebp
rolb
out
hlt
push
jg
sub
adc
insw
cwtl
xor
stos
cld
jl
sbb
jle
icebp
clc
push
or
inc
lcall
push
cmp
mov
push
cli
push
les
and
mov
xor
jnp
fwait
cld
mov
xchg
test
sub
or
add
sbb
push
pop
cmc
jo
rcr
cmp
cmp
or
and
in
lahf
xchg
push
lds
jns
shrb
xor
sahf
lret
sbb
add
shr
inc
jecxz
fidivrs
cld
inc
imul
push
sti
popf
and
pop
daa
or
sbb
mov
inc
sahf
insb
dec
pop
xchg
cmpsl
cmp
mov
adc
test
outsb
xor
xlat
clc
movsl
scas
repz
pop
dec
lret
pop
dec
stc
inc
jnp
dec
repnz
int
mov
and
in
lods
enter
xchg
jl
mov
stos
das
push
aad
or
dec
adc
lea
call
mov
popf
pop
out
stos
rcl
cmpsl
pop
gs
cmc
pop
mov
and
out
scas
jno
test
sbb
and
cli
jae
fs
ss
ljmp
fstpl
adc
scas
adc
mov
cmp
aaa
sbb
insb
sbb
mov
dec
fisttpll
jo
lock
inc
cmpsl
mov
sbb
cmp
mov
shll
pushf
xchg
dec
in
lods
xchg
out
jnp
xchg
dec
js
cltd
fcomps
je
jne
aas
push
pop
jb
ja
adc
pop
add
fldt
leave
push
sarb
imul
aam
push
jge
and
and
pop
jp
sbb
data16
pop
mov
and
mov
ljmp
xor
dec
sub
rorl
mov
sub
pop
pusha
setle
jns
push
jge
or
xchg
push
jl
stc
fidivrs
jno
fsubs
cmp
xchg
aad
dec
push
pop
call
cmp
or
push
mov
pop
adc
bound
cltd
mov
sub
divl
pop
xor
mov
jno
sbb
les
movsb
mov
mov
inc
in
push
xor
mov
out
add
and
roll
pop
xchg
sub
inc
mov
pop
nop
fwait
jb
xor
dec
pop
xchg
jp
aam
dec
shlb
fcomi
ljmp
add
inc
xchg
push
js
pop
or
pop
andb
mov
imul
stos
addr16
jle
jmp
jns
outsl
pop
fs
fbstp
mov
sub
popa
cwtl
ds
xor
lods
popf
adc
cltd
xor
mov
ficoml
mov
scas
imul
mov
xchg
xchg
rcr
stc
sub
adc
mov
or
push
pop
int3
testl
ret
jge
or
in
test
xchg
loopne
xlat
xchg
mov
sbb
or
insl
leave
adc
es
ja
pusha
mov
mov
movsb
adc
add
testl
mov
jp
jne
xchg
iret
adc
sub
mov
adc
push
or
xor
outsl
push
push
adc
fisubrs
pop
enter
pop
adc
and
in
je
out
fdivs
rol
mov
pop
fcompl
xor
mov
inc
jle
xchg
call
popa
stos
pop
cwtl
hlt
jmp
xor
sbb
lahf
cli
sub
pop
movsb
cmove
mov
mov
stos
adc
fwait
push
subl
insb
ja
adc
insl
pop
sbb
mov
and
popa
xchg
gs
pusha
push
sti
mov
in
xchg
lea
mov
test
movsb
dec
int3
ss
adc
enter
inc
fistl
scas
mov
push
fimull
stos
into
dec
mov
jb
xchg
lret
bnd
imul
out
loopne
sahf
je
inc
and
out
mov
jp
inc
aas
in
fidivrl
aaa
out
leave
pop
pushf
cmp
cltd
xor
js
cmp
mov
add
sub
and
lret
pop
adc
sti
pushf
stc
fisttpl
inc
pop
cli
out
cmpb
test
sub
addr16
test
inc
outsb
push
fs
add
jp
xchg
inc
and
mov
or
jge
mov
inc
repz
push
cmpsb
and
es
rol
pop
jle
xor
inc
cmpsl
inc
ret
shll
cld
cmc
sub
push
pop
mov
mov
inc
js
inc
cmp
jle
sub
add
cld
fsts
fbstp
xchg
repz
cmc
int
pop
cld
call
testb
frstor
mov
mov
mov
cltd
mov
fadds
imul
add
sbb
mov
out
inc
lods
or
aaa
inc
ljmp
repz
fwait
jecxz
insl
jno
cmp
in
jle
jbe
push
mov
jnp
loopne
shl
jecxz
jbe
out
xchg
aad
test
xchg
xchg
jecxz
dec
pop
int3
lods
out
jno
and
xchg
adc
mov
in
or
ja
das
dec
or
push
scas
popf
outsb
dec
jo
fidivrl
sbb
jl
js
jle
pusha
mull
pushf
cmp
fstl
es
mov
cmp
or
dec
mov
adc
imul
xchg
sub
fildl
ret
mov
jo
cmp
enter
gs
in
sub
xchg
mov
or
je
add
dec
dec
mov
push
jbe
sarb
sti
jl
pop
lret
mov
js
mov
sub
xchg
xor
adc
mov
fwait
iret
fwait
mov
lahf
lock
leave
push
test
das
in
cltd
in
loope
sub
push
popf
out
jg
xor
out
mov
and
movsl
and
ljmp
sub
fs
aas
sub
movsb
dec
sbb
mov
test
push
cmp
dec
test
or
cli
or
xchg
in
dec
mov
js
push
pushf
jp
popa
xchg
jo
adc
insl
cli
daa
mov
xor
mov
xchg
mov
jge
mov
jecxz
xor
je
and
or
sbb
pop
push
hlt
cmc
mov
add
push
cmp
in
mov
in
xor
rcll
lahf
mov
xchg
cmp
mov
jge
mov
push
clc
xchg
addl
xchg
insb
nop
lahf
cmp
sti
or
sbb
ljmp
nop
pop
sub
cmpsb
outsl
pop
lret
adc
fildl
adc
mov
pop
sub
or
mov
inc
or
add
out
adc
aaa
fcompl
mov
xorl
push
fs
fldpi
sub
insl
jg
outsb
cltd
xor
push
cmpsl
add
pop
mov
lock
call
jmp
mov
shll
orl
sbb
jp
inc
mov
inc
pop
push
sub
push
movsl
push
mov
inc
stc
jge
cmp
sub
fdivs
jp
lods
sub
xchg
in
ret
mov
xor
sub
xchg
or
sub
int
and
gs
jb
jecxz
cmp
fisttpl
and
jl
popa
popf
icebp
ss
fwait
jg
xchg
nop
xchg
daa
sbb
pushf
pop
flds
jns
outsl
cmp
fisubrl
mov
pop
fwait
mov
in
ficompl
or
es
ja
mov
or
pop
scas
lock
push
sbb
mov
jbe
dec
mov
cld
fstl
mov
xor
sbb
pop
jle
insl
adc
and
outsb
mov
bound
jo
dec
rclb
pop
sbb
inc
push
pop
aad
bound
lgdtl
js
jb
mov
mov
add
aad
inc
mov
popf
mov
dec
cli
in
cmp
cmp
outsb
and
or
sub
pop
or
mov
daa
jno
push
jo
dec
loopne
dec
adc
shll
cld
inc
movl
sub
ja
test
pop
enter
mov
mov
fxch
inc
mov
test
inc
roll
add
dec
repz
ret
ss
cmp
repnz
dec
arpl
sbb
fwait
adc
test
or
hlt
mov
testl
dec
cli
and
addr16
rorl
data16
lret
fmuls
mov
fsubl
stos
popf
jne
sub
xlat
jns
orb
repz
dec
cld
push
outsl
xor
push
adc
or
sbb
sub
fildl
gs
or
and
nop
lea
es
and
aad
add
or
repnz
mov
lcall
push
pop
unpckhps
adc
fildll
mov
cmpsl
jl
adc
lahf
pushf
loopne
cli
int3
das
cmpsl
jo
lcall
xchg
out
mov
or
ret
stos
inc
jecxz
mov
testb
xchg
lret
pop
xchg
clc
add
dec
movsl
adc
iret
sbb
outsb
les
or
call
cs
popa
pop
inc
xchg
pop
mov
inc
adc
outsb
and
lcall
lods
pop
sub
lret
sub
icebp
in
mov
jecxz
sub
aaa
mov
push
fsubrp
out
enter
inc
pop
inc
arpl
or
lods
pop
mov
rorb
shrb
xor
dec
xor
adc
push
sarl
adc
or
cli
mov
test
cmp
push
lret
test
sub
lea
iret
and
jg
mov
in
push
sub
imul
jne
fadds
adc
fsts
inc
and
leave
lods
cli
mov
pop
lods
sbb
adc
push
cmp
add
cmp
js
cmp
or
std
inc
popf
adc
inc
cli
add
orl
fdiv
sbb
pop
lea
push
mov
fstpt
stc
mov
out
xchg
push
cli
fs
push
adc
cli
dec
repnz
mov
inc
mov
sbb
mov
push
imul
dec
insl
xchg
sbb
shr
pusha
icebp
imul
mov
sub
ja
cmc
xchg
stos
lock
sahf
shlb
lea
inc
into
jecxz
addl
xchg
arpl
mov
hlt
loop
iret
lea
mov
scas
inc
out
push
mov
mov
das
pop
fwait
ja
or
leave
rorb
or
ss
rcrb
dec
xchg
cs
push
sahf
cmpsl
int
mov
inc
rclb
or
movsl
cmp
cli
push
cmpb
lcall
nop
xor
pop
scas
imul
and
repnz
xorl
inc
inc
loope
pop
int3
shl
xchg
aaa
jp
outsb
jne
std
dec
decl
aam
outsb
dec
enter
ficoms
xorb
out
push
es
dec
push
dec
call
test
jo
cmc
or
pop
jns
shlb
hlt
in
cmp
mov
xor
mov
sbb
das
les
xchg
pop
dec
stc
mov
mov
add
in
call
lods
ss
test
aas
sbb
out
fisubrs
lods
leave
and
les
dec
jno
cmp
mov
fcoml
adc
ret
xchg
sbb
pusha
cli
mov
cmpsb
dec
pushf
out
int3
es
out
lods
xchg
dec
or
sahf
or
jns
add
fidivl
push
jno
out
js
xchg
fcmovnb
aaa
in
fs
mov
cli
xchg
and
cmpl
pop
sub
ret
jne
sub
movsb
mov
add
push
cld
lcall
push
xchg
test
mov
cs
int3
fs
push
mov
repz
adc
jb
push
jb
daa
pop
clc
out
pop
hlt
insl
push
or
out
mov
add
cmp
lock
js
and
mov
mov
test
cmp
testb
call
lock
scas
imul
jp
js
in
aaa
in
mov
dec
cld
push
in
mov
insb
cltd
ss
mov
scas
push
scas
xchg
es
or
inc
push
push
xorb
sub
out
jg
call
jne
cmp
push
es
sar
movsb
sahf
iret
stos
cld
arpl
mov
call
adc
fwait
and
xor
add
test
les
ret
xchg
xchg
dec
pop
mov
and
mov
xchg
mov
sbb
mov
mov
jp
rorb
aaa
push
cmpsb
mov
loop
mov
jge
cli
les
sarl
pop
add
pop
int3
adc
cwtl
loopne
sbb
mov
mov
cmp
jo
cmp
cmp
sub
pop
xchg
inc
and
mov
pusha
xor
in
daa
jl
push
fwait
sbb
lock
and
push
mov
mov
ss
xchg
push
push
cmpsb
ds
daa
clc
imul
or
add
gs
dec
mov
or
or
jmp
pop
adc
or
cmp
push
test
loopne
ret
jns
pop
jmp
aad
addl
and
sar
loop
and
xchg
adc
jae
pop
es
push
fadd
jne
push
or
stos
push
lods
cmp
lcall
ja
clc
push
jb
or
xchg
lret
dec
test
popa
inc
add
add
mov
cmp
lock
out
sbb
inc
sahf
inc
fmull
xor
sub
push
into
and
imul
or
fisttps
jae
push
push
pop
push
sarl
fidivs
jl
mov
dec
imul
shlb
scas
ret
jle
add
pop
push
bound
mov
std
mov
lods
sub
pop
cmp
fwait
lods
popa
aas
mov
ljmp
push
push
jecxz
jle
inc
dec
xor
xchg
jle
aas
jo
outsb
insb
data16
add
sbb
mov
dec
daa
sbb
dec
or
dec
fists
dec
or
xchg
hlt
in
out
sbb
leave
adc
add
add
sbb
mov
mov
and
jnp
mov
stos
and
pushw
mov
stc
lea
pusha
js
inc
je
jl
arpl
fiadds
push
jmp
xor
lcall
bound
sub
fsubrp
mov
jmp
xor
pop
lcall
inc
shl
cltd
xchg
pop
cmp
mov
jp
push
js
mov
lret
scas
cmp
pop
jb
sub
jb
xorb
jo
icebp
cmp
push
ss
inc
arpl
cmp
sti
out
ret
lahf
aas
adc
out
stc
add
fsubs
mov
rcll
pop
lahf
insl
xor
jp
jmp
loop
clc
and
xor
sub
xor
sub
test
sub
sub
push
sbb
cmpsb
and
stc
lea
movsl
sahf
rorb
adc
insb
cltd
dec
add
idivb
and
cmp
addr16
ljmp
scas
scas
addr16
jge
int
ret
pop
pop
push
xor
xchg
lods
js
sarb
jb
mov
mov
rclb
or
in
xor
mov
mov
and
movsl
pop
lahf
out
stos
xchg
dec
movsb
in
sbbb
loope
push
add
in
xor
shrl
jns
xor
nop
push
lods
dec
cmp
push
xor
into
jns
cmp
call
inc
xor
xchg
scas
imul
sbb
or
and
dec
pop
out
sti
pusha
insl
shlb
lret
push
pop
add
idivl
fildll
mov
out
pop
je
into
add
pop
imul
daa
jnp
pop
dec
mov
cmpsl
adc
shl
pop
mov
lock
lds
xor
outsb
or
xor
push
fnstenv
arpl
mov
mov
pusha
jg
or
sub
mov
inc
loopne
fstps
mov
cmp
cmp
ja
pop
jg
rol
in
fwait
outsl
push
sbb
jp
fldcw
or
xor
mov
inc
push
mov
insb
cwtl
lods
pop
pop
js
cmp
or
mov
ja
push
jo
hlt
push
cmp
dec
push
xorb
ret
imul
pop
es
out
pusha
pusha
cmp
fbstp
loopne
fcmovu
loop
daa
clc
or
mov
jae
insb
xor
jno
sub
aas
xchg
xor
lret
xor
fmulp
lret
push
push
sbb
mov
fcoms
jmp
repnz
sub
sbb
jo
stos
adc
jne
add
dec
dec
pushf
pop
sarb
cmc
aas
dec
in
and
not
into
mov
or
enter
pop
mov
test
lds
rcr
jno
int
rolb
sti
add
mov
push
and
lock
dec
adc
jle
es
dec
xchg
push
cld
add
cmp
pop
fs
cmpsb
mov
sbb
ds
xchg
mov
cmp
jns
pop
daa
xor
mov
shll
ret
xchg
cmp
dec
add
enter
cmp
popa
xchg
adc
xor
mov
mov
lods
adc
rcr
jecxz
fs
pusha
mov
mov
in
jecxz
frstor
test
jbe
dec
cli
sbb
pusha
testl
test
jg
fidivrl
in
jle
or
xchg
push
jns
aad
ret
insb
incb
aam
jnp
mov
jg
sub
dec
add
jl
lods
push
mov
sbb
jno
fisubs
es
mov
pop
cmc
lahf
dec
xor
fmull
fs
sti
aaa
push
add
push
shrl
mov
push
inc
jo
dec
pop
lret
xor
addr16
aas
dec
fbstp
and
sub
pop
ds
or
repnz
ds
popf
lcall
daa
mov
jbe
fdivrs
add
pop
jo
rclb
jp
outsb
fsub
cld
xor
fdivrl
mov
mov
fidivs
mov
sub
mov
std
adc
andb
fstp
add
xchg
aaa
std
mov
xchg
orl
daa
dec
out
aas
insl
in
movsl
push
mov
or
sub
sub
popf
mov
jle
movsb
xchg
xchg
lcall
cli
pop
add
pushf
repnz
into
mov
pop
out
seto
inc
xor
adc
mov
std
xchg
dec
roll
pusha
and
jg
pop
and
dec
in
dec
push
adc
jge
jge
mov
mov
inc
inc
inc
stc
jb
out
and
sub
xor
pop
inc
aas
lret
fstpt
push
js
or
cs
outsb
out
ret
icebp
xor
push
inc
xchg
pop
add
inc
rcl
incl
orps
fidivrs
or
dec
adc
sbb
out
pushf
xor
sbb
mul
ss
das
dec
add
sbbl
jmp
fisttps
clc
xchg
add
loop
lea
inc
inc
leave
mov
and
pop
mov
or
dec
scas
and
loope
push
mov
mov
test
gs
int3
scas
pop
add
mov
jo
and
dec
insb
sub
push
out
or
ds
sub
mov
jmp
push
jb
cs
int
je
pop
sbb
xchg
xor
dec
nop
js
xchg
dec
dec
pushf
xor
jmp
repz
xlat
xlat
or
push
cmpl
fs
mov
mov
ds
adc
sub
pusha
nopl
cmp
mov
jne
jg
scas
and
lds
inc
pop
inc
pop
jecxz
mov
lcall
das
push
inc
in
mov
xchg
mov
rol
xor
imul
xchg
jp
clc
rcll
lahf
push
push
scas
dec
popf
push
and
shlb
jmp
scas
loopne
lahf
sub
mull
in
inc
and
leave
ror
push
mov
xor
dec
mov
loopne
cwtl
inc
pushl
xchg
hlt
mov
mov
in
mov
rolb
mov
add
sbb
mov
cmp
cmpsb
int3
scas
and
dec
mov
xchg
push
jnp
popf
jno
shrb
fwait
pop
sbb
data16
xchg
shlb
pop
cmpsl
mull
out
mov
inc
cltd
into
xor
clc
ds
pop
mov
jle
push
inc
add
aam
stos
pop
mov
addb
sbb
push
js
cs
push
jecxz
mov
cmp
ljmp
test
cs
in
addr16
mov
mov
aas
cwtl
dec
popf
loopne
scas
fs
test
mov
fwait
mov
and
cmpsl
jnp
fadd
sub
call
rol
adc
aaa
arpl
fs
inc
lret
scas
xchg
test
sahf
cli
addr16
push
in
xor
cld
neg
popa
shlb
or
dec
xchg
lret
mov
mov
mov
cmc
pop
cmpsb
jp
mov
out
sub
outsl
cmp
xchg
mov
pusha
sbb
aas
orl
leave
ror
shll
mov
xlat
in
and
or
popa
jno
xor
jmp
or
xor
adc
enter
pop
inc
push
mov
sti
ficompl
sub
fildl
mov
hlt
lds
add
jb
xor
std
and
pop
test
push
jno
sub
out
jle
js
mov
push
lcall
leave
rcrb
or
adc
add
fildll
lock
fsub
jmp
jg
mov
fldl
jnp
dec
or
popf
xor
adc
mov
pop
fs
aad
nop
jne
inc
rorl
idivb
lcall
adc
stc
mov
xor
into
adc
les
jno
cld
push
mov
aam
arpl
into
pop
mov
lock
lock
push
or
insl
cmp
fcompl
shll
or
rorb
dec
pusha
add
add
lds
xchg
dec
sub
sub
mov
add
jg
mov
adc
inc
mov
sahf
cmp
adcl
adc
mov
dec
aas
jne
dec
mov
pusha
adc
adc
jg
xor
cli
mov
or
mov
fisubrs
ja
pop
xlat
lcall
movsb
dec
sahf
mov
fstl
cmp
lcall
adcl
in
addr16
jl
cmp
mov
fdivrl
cltd
pop
mov
imul
push
mov
sbb
fwait
repnz
sbb
xchg
mov
cmpsl
std
imul
and
add
aaa
or
repnz
push
hlt
dec
mov
aam
sub
dec
mov
mov
popf
dec
adc
addr16
mov
shrl
add
data16
dec
ds
hlt
mov
iret
out
test
push
int3
inc
mov
loopne
and
push
sti
lods
jnp
stos
mov
fs
adc
pop
arpl
mov
jb
fwait
mov
inc
test
inc
jbe
icebp
lcall
shrl
mov
cmp
aaa
ret
je
xchg
push
pop
mov
ret
jecxz
jecxz
movsb
inc
movsl
inc
jmp
xlat
sub
jne
and
lds
ss
pop
das
add
jno
pop
cltd
fisubrl
mov
adc
inc
in
mov
sbb
mov
pop
out
cltd
fidivrl
or
loopne
loop
adc
iret
push
pop
push
cld
imul
mov
mov
loopne
add
or
out
pusha
fcoml
out
aas
enter
test
xor
imul
fdivr
imul
jecxz
dec
fimull
lods
xor
push
add
insl
add
nop
rol
push
xchg
xorl
mov
lock
cmp
data16
imul
lcall
ret
shrb
andl
push
xor
or
pop
stos
ja
xlat
in
addb
push
lds
icebp
aaa
mov
ds
xchg
gs
les
mov
roll
push
jo
imul
xchg
ret
cmp
lret
sub
insb
cmp
into
scas
jl
stos
inc
mov
loopne
xor
repnz
lret
or
loope
or
inc
sbb
push
jnp
cmp
cmp
aas
cli
mov
ja
cmp
pop
decl
cmp
scas
int3
jae
test
inc
inc
scas
and
jb
into
push
pop
sbb
enter
je
ret
mov
or
and
cld
fnstsw
int3
sbb
jp
pop
stos
idiv
test
repz
int
xchg
lods
aad
hlt
and
pop
mov
test
mov
or
xchg
push
inc
mov
lds
icebp
cmp
mov
mov
arpl
push
insl
shll
dec
shll
cmp
cs
je
dec
mov
aaa
dec
jge
pop
outsb
sub
shll
inc
push
jl
in
dec
dec
inc
xchg
shll
cmp
xchg
mov
xchg
adc
out
push
imul
fs
mov
test
fsubrl
mov
cltd
inc
scas
in
fadd
sub
and
cmp
jbe
dec
xlat
cwtl
xchg
cmp
inc
cmp
sub
popf
pop
loope
pop
or
xorl
inc
jnp
pop
int3
andb
mov
inc
jl
jge
jmp
cwtl
cmc
xchg
and
outsl
mov
add
inc
adc
push
sub
lock
mov
or
xchg
lods
add
into
pop
dec
sub
mov
icebp
ret
out
add
outsl
mov
jp
pusha
and
call
movsl
hlt
gs
pop
lret
loope
clc
adc
xchg
in
push
out
and
arpl
sbb
arpl
adc
ror
fisubrl
and
pop
insl
and
ret
mov
mov
fwait
dec
aam
mov
std
decl
xchg
or
incl
sub
in
test
inc
pop
xchg
add
popa
mov
hlt
aad
pop
inc
inc
inc
fwait
pop
shl
outsb
jmp
mov
cmp
insl
stc
aad
mov
jmp
outsl
and
xchg
pop
xchg
sbb
movsl
sub
pop
in
pop
sub
ljmp
ja
notb
adc
mov
add
test
push
shl
hlt
xchg
out
inc
jge
xchg
cmc
int3
repnz
mov
clc
push
pop
pop
lods
jo
mov
dec
mov
outsb
cmp
mov
jmp
sahf
insb
xchg
mov
mov
hlt
adc
mov
testl
and
scas
and
ffreep
movsl
fistpll
push
xchg
sub
daa
push
sahf
les
adc
add
lcall
mov
aaa
loope
mov
or
mov
loopne
mov
addr16
or
in
ljmp
pop
ficompl
test
jp
push
jbe
incl
rol
and
xorb
cmp
push
adc
out
dec
fistl
cmp
mov
push
cmp
mov
int
out
cmp
cs
loopne
mov
jae
inc
and
dec
or
into
shrb
in
pop
lret
cld
cwtl
rcrb
inc
out
out
mov
sbb
hlt
push
lock
jg
test
rcrb
xor
adc
xchg
sbb
imul
lods
push
push
mov
rclb
pop
fistps
lret
ja
outsb
lahf
xchg
test
xor
cli
jle
movsl
sub
jge
sub
aam
icebp
lock
aam
aam
pop
xorl
out
adc
mov
lods
lcall
mov
pop
pop
push
cmp
adc
pop
mov
rorl
and
cmpsb
lock
incb
xor
idivl
push
iret
mov
outsl
inc
in
negb
add
test
sbb
inc
push
out
pushf
shl
ja
lahf
mov
test
into
iret
mov
xor
test
push
mov
popa
adcl
mov
adc
sbb
push
scas
neg
xchg
sub
test
xchg
imulb
movhps
or
push
mov
xchg
jl
jbe
xchg
insb
adcb
jmp
and
jp
hlt
cmp
cmpsl
int3
jbe
mov
jbe
mov
test
mov
jbe
mov
nop
xchg
add
ret
cmpsl
enter
das
notl
test
and
xor
ss
mov
add
xchg
test
fwait
movb
xor
das
mov
sub
outsl
push
jns
push
mov
and
sahf
push
nop
cli
mov
ret
push
xlat
dec
mov
int3
xor
xchg
mov
pop
sbb
push
cmp
sub
and
or
inc
jecxz,pt
shr
cld
fwait
outsl
lds
cmp
mov
test
cmp
ret
xchg
mov
out
in
jo
lahf
mov
into
iret
push
in
xchg
enter
xor
pop
jg
or
cmp
push
mov
addr16
inc
cmpsl
lret
jl
sarb
and
and
push
jae
xlat
leave
cmp
mov
mov
hlt
sub
add
xchg
js
jno
out
es
xchg
push
mov
test
xor
into
mov
fstpl
push
sbb
stc
or
icebp
cmpsl
outsl
arpl
mov
mov
and
lods
push
mov
cmpsb
mov
inc
ss
or
push
jg
pusha
mov
sub
or
fsubrs
ret
addr16
subb
lcall
jb
dec
inc
in
fmuls
or
mov
push
mov
lods
sub
xor
mov
cli
in
fcomps
sub
insb
loopne
pop
cmp
sbb
jbe
nop
imul
sbb
jbe
mov
lcall
lock
pop
shll
pop
sbb
ds
add
out
popf
jge
fdivrl
sbb
xor
lock
inc
sbb
add
mov
les
adc
jle
xchg
dec
das
xchg
out
jg
adc
pop
xchg
cmp
fs
xor
and
mov
popf
dec
lea
lods
testl
mov
sti
xor
ds
call
ret
dec
dec
hlt
popf
pushf
dec
sub
xor
fistps
test
lock
ficoml
fists
test
dec
sbb
push
sbbl
dec
fucomip
pop
pop
les
xor
add
loop
sbb
jns
push
js
sub
popf
loop
clc
sbb
jns
dec
and
mov
out
mov
and
or
adc
dec
lahf
ds
and
pop
dec
push
and
sahf
leave
jns
push
outsb
je
jb
lea
push
jae
jle
xchg
rcrb
idivl
and
cld
es
ret
insl
jle
aaa
test
mov
pop
lret
mov
popa
flds
cwtl
inc
jbe
mov
lods
sahf
aaa
movsb
cmpsb
leave
inc
sub
sar
sbb
jmp
int
bound
xchg
enter
jnp
ds
out
jns
add
cmpsl
jne
adc
mov
jb
rorl
mov
in
inc
pop
lock
int
movb
sub
std
push
xor
mov
push
xor
add
mov
cmpsb
pop
pop
mov
mov
call
jns
enter
mov
cld
xorl
popf
push
push
outsl
xor
lahf
hlt
daa
sub
adc
sub
popl
test
fmull
mov
push
std
jbe
in
dec
adc
push
push
stc
xchg
jne
cmpsb
mov
fisttpl
fdivrp
xlat
xchg
mov
les
or
push
mov
cmc
in
xor
push
das
xchg
push
jae
adc
cmpsl
push
out
push
shl
xrelease
push
xchg
aad
add
scas
subb
push
popf
stos
shr
cwtl
cmp
out
les
mov
fs
out
cwtl
push
out
adc
enter
out
out
dec
ljmp
jb
aaa
hlt
and
adc
push
fucomip
jg
and
loop
repnz
sub
mov
pop
leave
bound
adc
mov
jecxz
addr16
jns
sub
cmp
ret
bound
mov
fmuls
dec
xor
push
jmp
sbb
icebp
mov
cmp
call
or
ffreep
inc
repnz
dec
jno
add
or
jns
fistpl
popa
adc
scas
jnp
cmp
out
out
inc
aam
add
pop
or
adc
mov
pusha
inc
fmul
xrelease
xchg
notb
cmp
outsb
subl
orb
dec
or
cmp
rorl
or
popf
lahf
push
sahf
lcall
mov
xor
xchg
mov
mov
mov
pop
mov
js
xchg
je
mov
adc
mov
and
iret
and
xor
mov
push
repz
les
ljmp
adc
mov
mov
and
inc
bound
popa
lods
xchg
dec
xchg
xchg
pusha
movsl
fsub
nop
jmp
pusha
sub
movsl
pop
jno
rol
std
dec
pop
xor
test
mov
push
sub
cmp
or
into
xchg
rcl
es
in
bound
xchg
push
stc
repz
loopne
inc
inc
mov
imul
enter
jmp
pop
xchg
mov
fs
fisttpll
cmpsl
xchg
cmpsl
inc
mov
jge
clc
shlb
in
push
hlt
push
out
cs
xchg
xchg
ror
push
loope
jo
push
repnz
loope
mov
rcr
and
lcall
das
lcall
jmp
adc
pushl
loope
or
pop
orl
out
pop
mov
push
jbe
xchg
xor
push
pop
mov
in
or
rorb
mov
sarb
dec
sub
outsl
mov
xchg
sbb
stos
negl
je
dec
xor
rorl
fdiv
sub
or
jg
cmp
xor
or
stc
mov
roll
sbb
jg
sbb
test
add
mov
inc
lea
stos
lock
movsb
jne
or
mov
add
and
test
pop
aam
cld
fwait
in
popf
mov
push
sbb
cld
stos
xchg
and
fistpll
cmp
movsb
pop
lds
enter
lcall
or
jnp
mov
pop
sahf
mov
insl
fdivrl
scas
inc
mov
cmpb
jle
shlb
xor
pop
jle
out
push
pop
pop
imul
fbstp
xor
jmp
add
cld
and
xchg
adc
fdivp
jno
push
xchg
adc
jecxz
push
push
cld
sub
ror
lahf
imul
jp
mov
push
pop
imulb
lcall
andl
jmp
les
xchg
call
lea
jae
into
lods
sub
xchg
icebp
jnp
adc
shrl
into
nop
lods
sbb
or
sub
mov
cmp
addr16
inc
push
adc
sub
scas
fbld
and
lods
sub
loope
dec
sub
lcall
loopne
pop
sbb
sbb
and
dec
ja
pop
xchg
pop
jb
sbb
mov
mov
clc
mov
xchg
loopne
inc
sub
lcall
mov
cmp
cmp
out
push
mov
dec
push
mov
cmp
jno
out
sbb
xchg
sbb
mov
pop
adc
lock
cmp
ret
in
xor
jno
push
mov
cli
push
pop
mov
or
jmp
sbb
in
dec
dec
icebp
jmp
mov
dec
pop
mov
sbb
mov
cmc
sbb
in
xor
les
xor
int3
inc
pop
pushf
pop
arpl
lcall
test
ljmp
push
fsubrp
sbb
sahf
ljmp
fcompl
xor
adc
mov
movl
inc
ljmp
enter
stos
pop
int
gs
std
push
sbb
nop
push
lcall
repz
and
inc
ljmp
int3
idivl
jnp
push
popa
jge
sbb
mov
pusha
inc
pop
aaa
les
test
sahf
push
push
repz
dec
enter
sti
inc
arpl
or
and
xchg
push
mov
inc
lock
stos
lahf
lock
and
push
in
ret
mov
mov
call
pushl
inc
mov
stos
cs
test
inc
pushf
mov
dec
inc
mov
mov
sbb
rclb
pop
or
ss
sbb
nop
lea
cmp
dec
inc
int
test
xchg
lock
adc
repz
push
adc
adc
stc
mov
lods
pop
scas
xchg
xorl
pushf
movsl
cmpsb
in
mov
mov
jbe
repnz
iret
sub
int
pop
popa
in
mov
cmpsl
mov
dec
push
sahf
ret
in
sbb
pop
xor
cwtl
loope
outsl
xchg
mov
mov
adc
or
mov
xchg
fidivs
dec
cs
jmp
and
mov
testl
fs
or
cmp
add
add
pop
out
cmp
dec
insb
lods
repz
sub
sti
stos
addb
jp
pushf
pushf
lds
push
xchg
aam
and
xchg
sub
pusha
mov
adc
cmp
mov
pop
mov
ss
cmp
rolb
and
jge
cltd
inc
pop
xchg
sbbb
loopne
test
data16
imul
enter
fldt
js
push
cltd
pusha
mov
mov
mov
loope
jnp
rorb
scas
cmp
gs
mov
movsb
lcall
add
add
scas
out
add
int
sahf
xchg
pop
xchg
sbb
insl
nop
dec
enter
js
jecxz
in
fs
bnd
jle
scas
cmpb
cmpl
or
popf
push
push
decl
jp
pop
and
movsb
push
lods
imul
add
or
dec
push
mov
stc
bts
mov
push
lar
xchg
hlt
adc
fwait
clc
pop
out
dec
lahf
sub
mov
imul
ret
fisubrl
lea
js
lock
mov
lcall
pop
pop
incl
hlt
cmp
push
xchg
mov
or
aaa
mov
hlt
jl
sub
insl
and
movsl
out
pusha
mov
adc
xchg
jecxz
jo
mov
test
loope
add
pop
sub
mov
mov
movb
xlat
mov
cld
lahf
cmp
adc
sub
rcrb
mov
lcall
xchg
mov
in
pop
mov
ljmp
pop
outsl
ja
mov
xor
mov
cmpl
imulb
out
in
movsb
push
or
insl
xor
dec
pop
xor
lds
sarb
sub
or
out
shlb
push
ss
fptan
std
cmp
add
cmp
xor
and
mov
shll
sub
mov
daa
movsb
dec
jge
cld
sbb
pushf
popa
call
xchg
and
in
xchg
in
sbb
test
xchg
push
inc
test
push
insl
sahf
ja
add
mov
pop
cs
cmp
and
fimuls
sbb
and
out
sub
decb
ret
dec
dec
imul
mov
sub
insl
mov
push
insl
cmp
aam
sub
pushf
repz
fdiv
add
jl
dec
imul
mov
jl
daa
std
pushf
xchg
bound
cwtl
push
ss
mov
inc
repnz
addr16
push
mov
mov
or
cs
sub
or
xchg
loopne
shlb
shl
mov
iret
and
sub
mov
fmuls
jae
xlat
mov
push
scas
mov
mov
jne
jbe
cld
test
hlt
xchg
mov
and
jno
outsb
roll
or
fistl
sbbl
out
jle
add
dec
and
mov
adc
or
jnp
pop
inc
mov
xchg
pop
pop
rep
mov
test
jmp
mov
mov
in
das
lock
pop
xchg
lcall
scas
jo
xor
xor
lea
lret
ds
sub
mov
leave
xor
addb
jb
add
pop
mov
mov
daa
les
jnp,pt
data16
or
stos
jne
sub
inc
push
addr16
in
and
jne
push
sar
cmp
adc
or
jae
jp
xchg
xchg
pop
or
xchg
leave
mov
jo
sbb
push
sbb
mov
mov
jg
push
loope
inc
xchg
sarb
mov
inc
je
in
jnp
in
insl
repnz
mov
add
popa
and
cmp
loop
stos
int
xor
or
fldt
loopne
or
sbb
rorl
orb
cmp
fimull
pop
jecxz
out
aas
bound
insb
inc
call
xchg
mov
in
lods
cwtl
push
addr16
xor
push
mov
fstp
ret
lret
icebp
pop
outsb
xchg
scas
loope
mov
fisubrl
xchg
std
dec
ja
xchg
xchg
lmsw
xor
jge,pn
and
sbb
rorb
pop
sub
aaa
cli
iret
mov
mov
or
pop
insl
cmp
into
js
add
add
inc
inc
mov
adc
lock
and
int
dec
cmpsl
lods
cltd
add
shl
pop
mov
out
push
popa
cwtl
or
cs
lds
movsl
arpl
jns
sbbl
aam
out
out
xor
mov
dec
mov
ds
and
shlb
pop
adc
jno
nop
xchg
out
fildll
pop
inc
scas
loope
sbb
lods
scas
xchg
fstl
cltd
mov
adc
inc
sbb
pop
outsb
call
add
repnz
lahf
adc
rcr
xchg
push
add
mov
dec
sub
stos
xchg
mov
loope
adc
and
pop
int3
cmpl
push
xchg
pop
subb
add
push
push
mov
test
cli
gs
outsl
in
movsl
or
sbb
ljmp
sub
adc
pop
inc
imul
shrb
mov
mov
push
lods
jmp
push
pop
or
jnp
dec
jno
mov
pop
and
sbb
lods
cmpsb
sub
test
popf
popf
in
pop
movsb
jge
cmpsl
or
adc
sbb
or
dec
add
aam
lret
xorl
lcall
sub
inc
xchg
and
mov
pop
push
mov
hlt
stos
inc
sbb
das
jge
in
insl
inc
xchg
xchg
in
mov
mov
mov
mov
fsts
mov
xchg
jno
jno
mov
nop
loop
push
mov
lret
fcomps
mov
leave
das
and
mov
sbbb
mov
std
add
stc
and
mov
shrl
and
cmpb
and
loope
iret
xor
mov
inc
push
mov
cmp
sbb
roll
sub
or
cmp
push
sub
push
aas
or
jbe
jecxz
cltd
stos
pusha
pop
sbb
mov
das
sub
dec
aaa
lret
add
inc
sbb
or
push
and
leave
and
push
sub
mov
push
jns
pop
inc
cmp
pop
stos
cltd
out
test
xor
rorl
test
test
dec
movsl
xchg
pop
inc
arpl
pop
cmc
xchg
mov
mov
push
mov
adc
cmp
mov
cmpsb
rcr
repnz
mov
test
ds
push
cs
pop
xchg
xchg
aam
sub
inc
xchg
fistpl
sbb
fistpl
pop
imul
out
cld
push
enter
scas
xor
jle
sar
and
outsl
inc
call
cs
movsl
cmpb
in
adc
fdivrp
jle
loopne
mov
add
sbb
xor
int
or
mov
ret
jecxz
push
xor
xor
jbe
xchg
jle
mov
mov
jl,pn
sti
loop
outsl
add
mov
shrl
out
out
rolb
sbb
and
or
daa
cmc
fs
clc
jl
stos
out
and
and
adc
adcb
in
imul
inc
xlat
xor
lds
cmpsb
push
pop
fnstsw
clc
xchg
daa
faddl
nop
and
mov
cs
jmp
sub
xchg
and
lar
pop
imul
dec
mov
adc
jbe
data16
fidivrl
shrl
mov
aad
adc
mov
jg
xchg
add
sbb
popa
push
fisttpll
push
inc
push
mov
sub
leave
inc
fdivrl
in
jns
sbb
or
stos
xchg
movswl
mov
sbb
sbb
jno
mov
mov
fs
dec
sahf
es
xchg
sti
mov
fadd
mov
out
cmp
push
int
jge
sub
mov
jge
push
mov
dec
rcrb
mov
push
mov
stos
jns
sub
dec
mov
outsb
stc
imul
add
and
pop
pop
sub
imul
enter
inc
cwtl
sti
pop
xchg
rolb
ja
xchg
outsb
mov
loopne
hlt
mov
insb
dec
movsb
outsl
pop
hlt
cmp
loop
out
cmp
xor
shrl
ror
lds
or
adc
mov
adc
cltd
stos
jb
gs
push
insl
neg
mov
sub
dec
aad
cmc
sub
cwtl
mov
fs
ror
mov
ret
orb
sbb
gs
decl
fs
xchg
xchg
mov
leave
roll
sar
jg
xlat
decb
mov
fwait
test
mov
adc
ds
sub
decb
dec
jns
and
pop
push
into
incb
clc
cltd
xchg
push
adc
xchg
mov
jne
and
int
cli
cmc
or
xchg
mov
jecxz
arpl
in
mov
xchg
icebp
cmc
pop
iret
lret
inc
mov
sub
jmp
repnz
inc
lret
sbbl
fs
mov
cmp
xchg
mulb
lock
ret
mov
sahf
pushl
add
xor
mov
push
sarl
xchg
leave
sbb
and
pop
lods
les
fsubs
addr16
ds
lea
and
and
add
shr
insb
pusha
inc
pushf
adc
adc
push
xor
sub
cs
ret
inc
lock
mov
mov
movsl
mov
push
jg
iret
and
push
les
xorl
mov
icebp
inc
adc
inc
fs
shlb
out
out
cld
or
sbb
call
fs
mov
dec
inc
cmp
iret
dec
call
or
inc
inc
push
xor
rclb
mov
or
push
stos
mov
xor
fdiv
cmpsl
inc
xor
cmc
mov
ffree
push
imul
dec
aas
addr16
pop
push
mov
mov
xor
cmp
jle
cmp
test
mov
and
mov
xchg
inc
sub
and
xlat
lret
xor
aam
or
movsb
arpl
sub
bound
mov
adc
mov
add
lds
pop
imul
pop
mov
xchg
nop
test
sub
pop
inc
jne
jmp
negb
jmp
xchg
sbb
fisubl
fistpl
cmc
in
std
lods
mov
emms
jae
mov
mov
cmp
mov
imul
xchg
outsl
mov
sbbl
push
ret
xor
add
pop
sub
pop
mov
outsb
push
das
lahf
adc
gs
xor
xor
rcrl
pop
sbb
sbbl
psubb
push
dec
sbb
int3
fiadds
or
clc
or
xlat
in
movsl
push
sbb
rolb
xchg
cmp
dec
pop
arpl
push
cwtl
xchg
cs
std
jno
out
divb
dec
rol
bswap
sbb
loopne
xchg
mov
movsl
mov
fcomps
mov
pop
mov
cmpsb
scas
cmp
mov
jbe
xchg
ficomps
mov
ret
or
testb
iret
gs
test
dec
stc
mov
imul
xchg
adcl
loop
fsubr
dec
dec
xor
iret
fsubs
das
pop
pop
popa
mov
ja
add
das
jg
cvtpi2ps
arpl
inc
jp
cld
push
push
mov
int3
imul
filds
psubusb
pop
sbb
xor
mov
movsb
pusha
js
fwait
lret
decl
ds
pushf
and
pop
push
add
and
subl
cmp
iret
sbb
fcoml
mov
call
jge
dec
inc
js
clc
push
xchg
xor
xchg
nop
cmpsl
xchg
out
xchg
add
insb
cmpsl
cli
test
jecxz
push
shlb
dec
push
sub
add
add
sbb
in
xchg
int3
psllq
xor
cmp
mov
mov
push
push
pop
sti
mov
flds
insl
dec
or
outsb
inc
push
hlt
mov
lahf
mov
xchg
jmp
push
shrl
or
and
outsl
repz
out
dec
fildll
in
or
or
shlb
or
cmp
out
sub
scas
insl
mov
xorl
ljmp
out
outsl
repz
faddp
inc
fdiv
int3
cmp
fldenv
jne
sarl
inc
xor
shl
movsl
call
push
and
test
pop
push
inc
in
xchg
mov
xchg
jb
push
in
sub
jb
gs
cmpsb
leave
addr16
enter
push
fdivrl
pop
sarb
out
fnstcw
adc
test
dec
sub
sub
push
popl
rclb
sub
mov
fiaddl
add
sbb
shlb
mov
cmp
cli
xor
sub
mov
lcall
mov
fs
dec
dec
cmc
outsb
adc
mov
sbb
mov
or
pushf
cld
or
stc
mov
negb
adc
lods
or
outsl
inc
test
imul
cmp
test
pop
shll
imul
les
mov
stc
fidivrl
test
xchg
and
jae
sub
in
mov
xchg
mov
ja
call
out
lods
pop
inc
andl
nop
js
repnz
dec
lock
cmp
pusha
cmp
push
inc
and
xor
addr16
movups
shrl
rep
mov
dec
fsubs
andb
push
xchg
jg
fmul
dec
ja
cmp
pop
and
xor
or
sub
mov
sbb
out
push
and
push
js
cmp
inc
sbb
insl
inc
lods
sti
sbb
das
fildl
push
enter
movsl
and
in
out
dec
iret
daa
repnz
dec
and
lock
imul
sub
push
lods
xchg
ss
int
pop
push
stc
inc
insb
outsl
rorl
aaa
sti
insb
sub
mov
add
movsb
pop
inc
jg
mov
xor
nop
aam
mov
insl
cmp
inc
lods
out
scas
add
sbb
add
jp
ret
rcrb
sub
popw
addr16
or
xchg
int
mov
adc
dec
imull
nop
cmpsl
cmp
jp
dec
subb
leave
cs
sub
out
cmp
jb
scas
jp
sub
fsubl
mov
mov
aad
movsb
aaa
jne
xor
xchg
jnp
mov
sub
bound
push
aaa
push
pop
jg
push
jne
jb
pusha
dec
rcl
cwtl
lods
jecxz
movsb
inc
and
mov
push
xor
inc
gs
or
xchg
cmpb
fldt
pop
cmovg
and
sbb
nop
push
inc
movsb
addr16
cmp
xor
inc
lret
cltd
push
xor
jle
lds
or
scas
pop
loop
ja
mov
jb
shl
in
sub
push
sbb
push
and
cmp
fs
or
mov
sub
and
cmpsl
push
xor
mov
test
inc
cmp
in
mov
shll
icebp
sub
pushf
mov
rcrl
mov
js
add
xchg
mov
xor
cmp
pop
mov
lahf
push
aam
add
sbb
out
cli
rcll
inc
adcb
cs
inc
jne
test
sbb
or
inc
int
jb
xor
rcll
ret
dec
lahf
or
push
iret
addr16
dec
sub
jbe
jne
fmull
push
xorb
mov
sbb
cli
gs
jp
icebp
js
xchg
cmc
mov
fldcw
push
xlat
sbb
jmp
and
fs
in
xchg
mov
xor
jmp
inc
fwait
int
mov
or
pop
mov
sbb
inc
add
fstps
or
pop
ret
mov
inc
jb
das
fucomi
adc
clc
shlb
aam
add
and
mov
and
imul
adc
js
cmp
inc
repz
push
fisubrs
cmc
xor
loopne
pop
out
les
pop
into
js
or
shrb
fs
lcall
movsl
dec
lcall
lea
ja
jae
out
out
pushf
sbb
mov
insb
ss
into
push
push
ja
aaa
in
imul
and
mov
in
out
and
cmp
or
lret
lock
loope
mov
and
or
jp
mov
roll
jne
and
mov
cmp
lahf
jae
jbe
pop
out
dec
out
imul
movsb
enter
imul
testb
sti
add
mov
cli
loope
sub
cmpsb
sub
xchg
imul
ror
cltd
xor
inc
xor
insb
xlat
into
pop
jno
xor
mov
insb
xor
lret
clc
dec
push
cmpb
popf
popf
cli
jo
xor
popf
int
out
pop
sbb
jecxz
adc
xor
mov
movl
or
add
cmc
mov
or
out
sahf
pushf
sub
push
lcall
scas
ja
js
shll
sub
mov
add
cmp
xchg
adc
outsb
or
push
lcall
xchg
push
repz
xchg
pop
dec
lds
xchg
add
cmpsl
cld
mov
jbe
pop
int3
aad
repnz
in
dec
xchg
jecxz
inc
les
and
xor
mov
inc
dec
icebp
sub
lods
loop
sahf
iret
xchg
mov
notl
clc
push
cmc
push
jae
jno
ja
jo
sub
jecxz
ror
mov
mov
sub
lods
ja
enter
js
push
or
std
jmp
and
mov
lret
popa
call
mov
xchg
mov
and
pop
mov
and
jg
sarl
mov
aaa
jno
xor
lret
xchg
sbb
adc
aad
test
ja
xorb
std
and
inc
das
pop
nop
cmp
push
inc
ss
inc
in
or
pop
arpl
push
pop
pop
jge
push
dec
inc
inc
adc
or
outsl
inc
add
sahf
pop
sbb
mov
shr
cwtl
pop
and
xchg
cmp
xor
mov
movsl
aas
fisttpll
outsb
cmp
movsl
mov
adc
pop
and
mov
inc
push
dec
lds
jle
popf
and
cmpsb
mov
ret
test
push
xor
dec
dec
jo
dec
fldt
outsb
inc
sub
shlb
xchg
jnp
cmp
lcall
sti
dec
adc
sahf
out
mov
push
rclb
mov
imul
and
jbe
bound
and
add
out
xchg
pop
ljmp
pop
xor
adc
cli
jnp
push
cmp
sub
mov
jbe
pop
fwait
and
inc
or
sarl
pop
icebp
loop
clc
xchg
rcrb
add
hlt
push
mov
imul
mov
aas
jb
aas
daa
add
lea
addr16
ret
mov
sbb
lret
movsl
mov
pand
lods
add
jl
dec
in
mov
insb
xor
jo
loop
sbb
js
andb
jns
cltd
add
or
pusha
add
adc
sub
out
call
divl
adc
add
decl
mov
rcll
jnp
push
xchg
push
or
and
aas
add
cltd
fistpll
lods
adc
add
mov
arpl
rcrl
aad
cli
in
add
cmpsb
xchg
loope
in
icebp
fwait
mov
jle
fcomp
inc
aam
lods
mov
sub
fcoms
xchg
enter
add
inc
sti
pop
xor
bnd
loop
mov
ss
imull
push
lods
sbb
jle
mov
or
sarl
es
aad
mov
hlt
mov
and
ret
push
mov
jns
jae
cmpb
add
stos
aaa
jo
add
sbb
cmp
push
jno
lea
iret
lgs
leave
xchg
push
push
pop
out
or
pop
in
icebp
stos
cwtl
ljmp
into
mov
mov
fcoml
ret
aaa
sbb
cmc
add
cld
push
sub
loope
shll
shl
nop
mov
sahf
push
movsb
pusha
imul
pop
sub
jge
mov
jecxz
out
cmpsl
jmp
push
sarb
pop
imul
xor
les
fucom
mov
and
xor
ss
sbb
insb
and
ror
pop
sahf
lods
movsl
pop
icebp
insl
repnz
jbe
lock
aam
rep
push
sbb
scas
in
dec
insl
lds
pop
dec
cmp
pop
and
mov
dec
jnp
and
cmp
and
inc
loope
mov
cs
jnp
pop
test
sbb
lret
jge
lahf
jl
xor
jnp
mov
int
push
addr16
jmp
sbb
pop
mov
sub
xor
fsts
cmp
shll
inc
push
mov
pop
inc
sub
test
and
arpl
pop
adc
fisttps
mov
xor
out
inc
dec
push
sbb
cmc
inc
adc
jp
sbb
cmp
sub
addb
xchg
sbb
imul
sbb
mov
cmp
arpl
ja
or
hlt
loope
ret
lods
popf
stos
mov
xchg
aad
or
and
sbb
lods
jmp
sbb
jp
insl
mov
daa
mov
xchg
adc
mov
jecxz
dec
fldcw
add
xchg
jecxz
sub
jne
cwtl
shrb
jnp
jge
mov
mov
xor
push
lahf
pop
xor
xchg
pop
cli
adc
hlt
ffree
add
mov
xchg
pop
jo
adc
mov
jnp
decb
lahf
cwtl
sub
dec
pop
adc
lret
mov
xor
cmp
leave
xor
pop
test
xchg
push
cmpsb
cs
adc
mov
fldt
repnz
xchg
js
mov
jmp
cwtl
inc
out
mov
or
lods
mov
add
cmc
stos
stos
and
out
mov
push
pop
ror
clc
movsl
pop
mov
xlat
dec
mov
jp
call
andb
pop
cli
xor
clc
adcl
mov
pop
pop
mov
cmp
enter
add
out
lds
mov
test
popa
xor
test
mov
and
xor
mov
fcmovnbe
or
jae
pop
gs
out
cld
mov
ret
lea
mov
pop
and
imul
aaa
outsb
adc
cmp
lahf
sub
mov
or
push
leave
push
cmc
adc
negl
mov
bound
and
gs
sbb
hlt
add
shlb
push
or
jnp
cld
mov
sub
popf
adc
cli
sbb
rolb
lret
fimull
scas
shr
in
add
arpl
in
dec
dec
cmpsb
arpl
inc
sbb
leave
cmp
fstl
adc
push
mov
ja
scas
push
jp
dec
push
add
shl
mov
int3
sbb
rol
jl
xchg
pop
lcall
dec
ret
sbb
pop
dec
xor
cli
push
inc
out
movsb
mov
jae
dec
sub
adc
add
les
xchg
dec
fadds
aas
clc
nop
xlat
loope
inc
mov
in
and
insb
pushf
daa
and
loopne
inc
mov
or
inc
and
xchg
jo
shll
jmp
jno
dec
daa
cmp
sar
enter
scas
add
dec
fisubl
cli
mov
call
push
leave
clc
aam
imul
out
pop
arpl
and
dec
popf
push
xchg
sbb
out
mov
dec
mov
loop
fadds
mov
aaa
imul
pushl
mov
mov
xchg
int
mov
incb
popa
sbb
pusha
pop
cmp
mov
popf
pop
dec
jo
adc
rol
imul
lods
jo
mov
add
jecxz
clc
adc
imul
jp
divl
mov
jle
push
push
scas
jp
xchg
add
ret
repz
fidivs
or
data16
adc
mov
add
xor
jg
pop
mov
pop
dec
movsl
pop
iret
daa
push
mov
into
int3
xchg
push
lret
pop
shlb
leave
pop
inc
adc
rol
bound
pushf
mov
daa
sub
mov
xchg
mov
and
call
add
decb
stos
clc
add
jns
clc
add
mov
test
fwait
je
push
fldt
mov
out
fs
inc
jp
fcoml
mov
jne
mov
dec
inc
push
adc
mov
dec
popa
xchg
pusha
pop
adc
nop
test
push
aas
dec
xlat
test
mov
push
and
xor
in
mov
xor
pop
jge
mov
push
pop
xchg
jnp
sub
lods
jae
pop
xor
out
xchg
or
cmpsl
xlat
pop
inc
in
cmp
lret
fscale
lea
ss
in
mov
cli
addr16
mov
lods
mov
or
out
dec
mov
leave
push
fistps
ljmp
pop
jmp
xor
rol
ljmp
inc
adc
push
ljmp
add
cmpsb
loopne
mov
fdivr
push
daa
sub
mov
xor
cmp
loope
seto
jmp
mov
sbb
xor
int
inc
divl
xchg
fucomi
jbe
shl
lcall
xorb
cltd
sbb
xorl
int3
es
out
lods
mov
mov
xchg
xchg
push
xchg
xchg
into
add
jae
jecxz
fistl
sbb
jge
stc
movsl
lods
sbb
xor
adc
and
popa
mov
aad
jge
fsubs
or
in
shrl
xchg
pop
dec
jecxz
icebp
daa
inc
rorl
sub
sbb
push
loope
xor
or
mov
push
outsb
push
jl
sub
test
nop
gs
popf
xor
mov
xchg
in
inc
cld
loop
cmpl
xchg
loope
xchg
xchg
mov
dec
ret
xchg
addr16
and
pop
sahf
jnp
xor
inc
push
cmp
pop
stc
mov
jbe
fiaddl
je
push
adc
mov
xor
push
or
rcrl
sbb
dec
xor
stos
out
das
jl
jbe
inc
mov
cmp
xor
xchg
pop
lret
push
mov
pop
dec
push
xchg
jmp
dec
jg
inc
add
mov
sub
lods
dec
jmp
repz
xor
hlt
das
ljmp
or
movsb
icebp
push
test
aam
mov
pop
adc
shr
mov
add
xor
or
pushf
xor
loopne
sub
leave
push
out
addb
pop
lods
decl
mov
mov
mov
sub
lea
loope
adc
fnsave
push
adc
or
outsb
arpl
pushl
insb
nop
xor
xchg
sub
mov
add
fcmovb
inc
mov
jae
call
int
cmp
sbb
popl
pushaw
mov
mov
pop
outsb
ficompl
push
pop
ficomps
jl
push
add
loopne
mov
ret
cmp
mov
repnz
jl
or
sub
rcl
sti
push
mov
push
mov
mov
xchg
push
sarl
jg
pusha
fistpl
jle
imul
xchg
jae
movsl
lock
test
scas
mov
push
mov
and
dec
sub
mov
clc
ljmp
or
mov
cmp
xchg
testb
call
pusha
mov
icebp
push
cs
dec
adc
lret
xchg
mov
adc
mov
lds
lahf
inc
pop
mov
sbbl
cmp
nop
cld
sub
inc
dec
sub
cmp
lret
imulb
insb
pusha
les
xor
js
push
rclb
mov
xorl
sbb
loopne
pop
inc
push
push
mov
mov
jbe
and
out
pop
jnp
or
orl
pop
add
daa
push
inc
pop
rcrb
add
repnz
cli
call
and
in
xor
sbb
loop
xor
ljmp
push
jae
xchg
and
adc
aas
pop
cmc
das
dec
lret
ret
shll
inc
je
mov
andb
add
and
test
lds
jae
or
add
mov
lret
xorl
inc
fwait
mov
enter
icebp
fstpt
add
out
cmp
shl
lea
adc
inc
pop
cmpsb
xchg
jl
jg
imul
fwait
popf
jg
ret
incb
roll
fs
enter
jbe
xchg
and
inc
popa
add
xchg
sbb
jle
cmpsl
dec
cwtl
sbb
loope
jb
sbb
pmullw
fistps
or
and
enter
add
scas
cmp
mov
xchg
mov
ret
jge
cld
inc
in
add
mov
cmp
jo
lcall
xchg
ss
jbe
cmp
in
pop
lea
adc
inc
cmp
shrl
mov
lds
mov
xchg
jns
cli
pop
xchg
cmpsl
xchg
cmpsb
inc
dec
push
and
cmp
mov
push
movsl
insb
inc
adc
pushf
mov
xor
cmp
xchg
mov
adc
push
jne
out
push
cmp
pop
pusha
xchg
lret
pop
mov
mov
addb
hlt
mov
pop
mov
subb
dec
sub
stc
addl
pop
rolb
bound
enter
ds
es
scas
inc
bound
ds
jge
ja
xor
or
cmp
or
je
dec
jg
gs
es
in
and
scas
add
and
xor
iret
xchg
mov
std
and
out
add
ja
loopne
iret
bound
fs
das
inc
push
neg
dec
dec
xlat
mov
xor
mov
shlb
scas
xor
fcmovb
loop
xchg
mov
adc
imul
loope
ret
idivl
and
adc
lock
lahf
fstpl
shrb
shlb
ret
adc
jecxz
cmp
out
loope
cmp
stos
or
js
jae
mov
addb
adc
test
pop
jl
repz
push
roll
inc
and
and
xorb
jg
es
push
jae
lods
into
stos
dec
inc
popf
xor
dec
xchg
mov
jg
or
inc
mov
daa
pop
mov
icebp
out
or
sub
lock
cli
xchg
mov
fmulp
or
pusha
mov
jle
mov
jbe
xor
sbb
cmc
mov
popf
and
pop
std
xor
cmp
jb
decb
jns
nop
data16
jnp
mov
xor
push
dec
mov
lret
scas
lahf
add
and
adc
jge
xchg
into
lahf
and
faddp
scas
hlt
or
sbb
sub
insb
movsl
arpl
mov
inc
mov
je
cmpsl
mov
scas
xchg
push
enter
stc
lahf
inc
mov
inc
pop
sbb
insl
inc
push
and
add
ret
jne
nop
popl
loop
mov
push
mov
arpl
mov
pop
mov
cmpsl
cmp
add
jmp
sub
push
mov
cmp
mov
pop
lods
xor
leave
shr
push
test
mov
xchg
aam
xor
hlt
lcall
in
add
adc
mov
jo
jge
int
xchg
test
and
loop
jl
mov
out
adc
mov
js
push
adc
rorl
jbe
rorb
sbb
movsb
loope
cs
scas
les
mov
fcmovnu
pushf
cmp
flds
pop
cmp
push
jp
mov
fs
and
dec
popa
and
imul
or
pop
fadds
pusha
push
outsl
into
add
insb
ljmp
jb,pn
fistpl
sub
out
pop
aam
mov
push
icebp
cmp
divb
enter
xor
and
sub
ret
pop
imul
fisubrl
cmp
aam
cmp
sti
jmp
aaa
mov
in
dec
and
in
inc
clc
js
addr16
push
rcr
mov
in
sbb
test
daa
xchg
mov
insl
add
jo
jns
push
dec
subb
sbbb
icebp
jbe
xchg
fstp
in
test
mov
mov
div
xor
flds
mov
out
lcall
gs
jae
punpcklwd
push
ret
push
out
imul
add
int
mov
fs
jae
loop
rolb
add
iret
pop
loope
push
cmp
loopne
adc
adc
dec
js
jecxz
scas
mov
push
mov
int3
jae
mov
mov
xchg
cltd
ja
jo
inc
sbb
int
inc
adc
cmc
rclb
test
mov
mov
mov
adc
cli
xchg
imul
mov
lea
iret
adcl
xor
jnp
push
add
inc
inc
dec
push
shll
inc
push
insb
rcll
test
or
pop
out
or
add
lahf
jae
mov
outsl
test
jo
mov
daa
or
jecxz
divl
cmp
aad
xchg
sub
lock
popa
jp
mov
lcall
std
pop
jmp
cwtl
test
adc
add
adc
rcll
jnp
ja
cli
aad
dec
std
ret
sub
mov
jg
mov
ret
sbb
test
int3
outsl
inc
fmuls
push
jne
dec
mov
stos
jecxz
mov
fwait
push
mov
sbb
aas
add
xor
or
or
out
int3
pop
mov
sub
imul
in
jecxz
pushf
xorb
xor
outsl
sahf
or
xchg
push
push
adc
fsubrl
mov
dec
or
xor
sub
cmpsl
or
pop
das
addr16
sbb
push
jne
imul
jl
je
sbb
inc
pop
mov
dec
loope
jne
ja
mov
or
or
cmp
lods
adc
stos
xchg
mov
sub
mov
jne
jp
ljmp
rcrl
mov
inc
repz
stos
leave
ja
scas
mov
aad
inc
and
cltd
sbb
jle
mov
add
arpl
loopne
das
jecxz
inc
sahf
movsl
out
push
lods
sar
pop
repnz
and
rorl
js
mov
push
dec
mov
lcall
push
cmp
hlt
and
ds
add
push
enter
lret
jl
xor
push
das
test
orb
inc
fimuls
push
aaa
out
mov
mov
lods
out
inc
lods
shll
shll
es
arpl
outsl
adcl
push
xlat
adc
cmp
and
and
dec
mov
mov
mov
mov
movsl
push
aad
mov
or
sbb
pop
or
xchg
push
cs
dec
pusha
addr16
adc
jo
jne
sub
scas
and
pop
hlt
push
popa
fildll
pop
cmpsl
sbb
pop
popf
inc
push
xlat
mov
shl
int
in
pop
cmp
adc
adc
sub
lds
mov
dec
ds
data16
aam
mov
sbb
pop
mov
aad
lods
mov
aam
push
dec
ret
add
jb
in
outsb
jecxz
pop
fimull
outsb
paddd
in
sbb
push
test
inc
je
xchg
hlt
jg
xchg
push
sub
sub
mov
std
js
xchg
hlt
push
ja
lahf
out
popa
insb
and
sub
stos
or
cmpsb
imul
inc
push
adc
lds
dec
xchg
pop
je
sbb
mov
leave
xor
pop
adc
jb
xchg
pop
popa
xor
mov
test
shrb
imul
aad
scas
stos
ljmp
out
repz
mov
mov
dec
xor
jmp
fdivrp
cmp
dec
xchg
mov
in
mov
inc
dec
jno
ret
pop
into
fsubl
mov
xchg
mov
and
push
cmp
fists
mov
lds
shr
push
or
sbb
arpl
inc
dec
jg
pop
js
pop
push
icebp
test
push
inc
out
into
add
jmp
push
jl
inc
ret
mov
sbb
bsr
add
mov
jnp
das
inc
call
adc
cli
cmpsl
adc
nop
fsubrl
mulb
mov
xlat
test
mov
clc
outsb
ret
or
dec
xor
mov
adc
sub
shll
xchg
inc
in
inc
mov
adc
je
push
imul
pop
push
push
add
popf
rcl
insl
cld
lds
aas
sbb
lahf
fstpt
ret
and
je
mov
out
sub
lahf
lods
cmp
push
outsb
outsb
sahf
int3
add
arpl
dec
in
fwait
xchg
cmp
pop
xor
xor
adcl
test
cltd
lahf
or
rolb
jl
cmp
push
pop
xchg
ret
jo
sbb
dec
ja
adc
add
jae
lret
jp
inc
xchg
xchg
xchg
inc
movsl
mov
out
in
pop
sub
or
mov
stos
mov
xchg
add
pop
std
inc
and
inc
push
cmpsl
mov
lahf
pushf
fucomp
push
mov
xor
add
mull
or
pop
in
pop
sbb
and
shrb
in
fs
cld
dec
sub
mov
cmp
mov
inc
cmpsb
loop
cwtl
roll
sub
add
mov
dec
imul
mulb
mov
dec
addr16
push
adc
xor
fisubrl
aad
sub
sbb
ss
lcall
ret
mov
or
mov
sbb
dec
lcall
adcl
mov
aaa
ljmp
dec
pop
jle
insb
or
in
hlt
imul
stos
push
jge
or
call
clc
sbb
stos
add
pop
add
push
mov
cmp
jge
xor
jb
inc
insl
jmp
stc
shll
inc
xchg
pop
dec
sti
outsb
xchg
dec
stos
push
or
pop
dec
push
sbb
mov
sub
xor
cmp
sbb
fs
ret
sbb
daa
push
adc
sahf
out
push
shrl
cmp
lea
push
xor
pushf
or
add
mov
scas
or
push
mov
cmp
aas
mov
sub
or
lods
xor
in
jae
mov
lods
lret
pusha
add
xchg
jge
jns
cmp
jl
mov
xor
mov
mov
imul
mov
mov
shl
leave
sub
frstor
push
mov
lret
ljmp
jno
or
adc
ficomps
sub
jo
inc
fwait
out
sub
dec
push
icebp
sub
or
and
pop
inc
xchg
loop
adc
lds
pop
xorb
movsb
inc
dec
loope
stos
faddp
mov
push
addb
sbb
push
stos
dec
mov
xor
dec
and
lea
xchg
das
shrb
xchg
repz
mov
xor
loope
push
xchg
mov
or
test
jnp
pop
adc
cli
jge
ljmp
aaa
or
bswap
xor
ret
icebp
xor
enter
adc
ds
fnsave
clc
fwait
mov
sbb
jge
fwait
popl
ret
inc
push
xor
fwait
push
dec
clc
mov
test
mov
scas
fiadds
push
xor
jle
mov
jbe
inc
push
adc
cmp
lea
xchg
pop
rcrb
int
xchg
stc
mov
adc
inc
testb
mov
sbb
ja
pop
mov
cmp
lret
sbb
add
or
add
add
xor
mov
fcompl
test
adc
fisubrs
sbb
or
stos
push
adc
mov
inc
pop
call
mov
pop
dec
in
mov
idivl
jle
xchg
mov
sbb
xchg
repnz
movsb
push
inc
scas
xchg
pop
iret
adc
shll
dec
loope
popa
inc
sub
and
mov
pop
ja
add
rclb
jge
push
push
mov
repnz
pop
sub
pop
int
aad
cmp
fdivl
sub
stos
xchg
inc
fsts
inc
push
inc
js
scas
ret
pop
ds
mov
mov
adcl
nop
repz
int
mov
inc
imul
sub
sub
ja
mov
or
dec
xchg
stos
and
inc
pop
mov
sbb
pop
push
jg
daa
mov
sbb
test
and
cli
sub
out
not
sub
add
test
mov
push
fisubl
mov
mov
sbb
add
push
inc
and
xor
dec
or
cltd
out
int
in
inc
fs
jns
dec
cmp
inc
mov
and
repz
xor
dec
into
sub
sub
add
push
jnp
mov
leave
add
inc
in
leave
sbb
ja
add
jecxz
call
or
jl
mov
and
cmp
ja
in
test
xlat
or
lahf
stc
xor
jmp
add
push
cmpsl
xchg
cmp
insl
add
and
and
aaa
xchg
sbb
sub
jns
xorl
stc
fwait
out
stos
iret
jb
out
inc
popa
popf
pop
cmp
adc
pop
iret
mov
lret
push
shl
jne
adc
or
pushf
pop
nop
inc
imul
xor
mov
into
insl
inc
xor
arpl
ja
push
aad
and
ret
or
push
and
je
cmpsb
jl
pop
addr16
loope
fs
add
mov
jg
inc
scas
cmp
in
call
jl
movsl
mov
lods
jae
add
dec
or
and
mov
push
push
ss
out
notl
bound
xor
cli
mov
into
in
jge
jns
fsubrp
xchg
pusha
mov
xchg
sub
mov
mov
fadds
enter
dec
int
inc
jbe
pop
jbe
pop
ljmp
in
loop
adc
inc
adc
aaa
adc
enter
adc
mov
xor
xor
jne
dec
cmc
dec
add
jge
lcall
dec
jne
movsb
xchg
xchg
mov
and
push
sti
and
xor
inc
push
sbb
sub
inc
fcmove
testl
dec
fisubrs
sbb
sub
into
ja
ds
data16
orl
jo
jb
sub
cld
in
fstps
jns
pop
movsl
lock
adc
adc
pusha
std
jmp
push
jp
adc
add
out
repz
xchg
add
mov
int
lcall
jp
std
or
sbb
add
jmp
cld
repz
or
and
insb
mov
cmp
fistl
push
in
fildl
popf
out
jo
imull
sbb
sbb
in
pop
arpl
xchg
pop
inc
jae
mov
lret
popf
sub
loopne
adc
cltd
jg
ja
mov
bound
mov
mov
xchg
jmp
ds
xchg
out
mov
mov
sti
push
in
adc
testl
aad
sbb
sub
adc
dec
and
sti
fsubr
arpl
adc
jmp
movsb
inc
cmp
inc
fwait
mov
cmp
movsb
ds
adc
loop
mov
in
lods
mov
insb
add
and
mov
daa
jne
pop
arpl
fdivs
mov
inc
sub
mov
jp
push
cmp
movsl
daa
pop
cld
xchg
mov
addr16
fcmovnu
aaa
push
pop
hlt
and
cmp
pop
dec
popa
pop
stc
ds
fmul
sub
cmp
sub
fcoms
cli
push
jge
adc
mov
fwait
mov
inc
or
mov
sti
nop
in
jb
xor
mov
repnz
push
lret
xor
cmp
dec
pop
fsts
jb
mov
movl
pop
fsubrl
push
push
add
adc
or
inc
nop
pop
pop
jp
sbb
movsl
icebp
repz
jmp
ja
out
enter
adc
andl
mov
fiadds
add
ljmp
push
in
testb
cmp
fisubrs
and
loope
push
and
stos
loop
push
push
repnz
testl
lock
loopne
mov
xchg
outsl
bound
mov
add
mov
mov
sub
ds
sarl
ds
inc
ds
int3
inc
cmp
ret
inc
mov
push
push
and
shrb
inc
jmp
imul
lods
or
xlat
xchg
adc
rcrl
call
shll
popa
push
lods
or
data16
adc
scas
lds
xchg
fldenv
cmpsb
xchg
jmp
inc
es
rorl
jge
jge
hlt
lock
stc
mov
imul
loope
in
xorb
lods
repnz
lret
jg
negl
outsb
inc
pop
inc
xchg
dec
xor
jmp
jp
pop
hlt
xor
ss
dec
jnp
hlt
xchg
dec
jl
scas
ds
dec
lret
sub
sti
addr16
dec
bound
push
pop
sbb
mov
fdecstp
pop
sub
mov
dec
mov
cmc
out
and
jle
test
rcrb
inc
cmp
sbb
inc
mov
sbb
shrl
add
mov
push
popa
leave
inc
and
sbb
mov
xor
xchg
pop
xchg
sbb
sarb
mov
sbb
jbe
inc
ja
arpl
daa
bound
lret
movsl
inc
push
sbb
daa
hlt
xor
inc
lcall
in
jle
jbe
xchg
sbb
inc
jb
lock
sarb
sbb
cwtl
mov
out
xor
int
sarl
mov
mov
sub
arpl
test
push
dec
cmc
mov
dec
sbb
hlt
outsl
insl
xchg
nop
jecxz
cmp
mov
das
or
push
cmp
xchg
mov
mov
inc
call
sub
es
push
sbb
rcrl
pop
dec
icebp
hlt
jge
nop
pop
mov
inc
decl
or
xchg
out
inc
mov
ljmp
lea
sarl
shrl
push
push
es
cmp
into
shr
push
into
push
sahf
or
pop
pop
sub
dec
add
into
mov
mov
imul
jmp
leave
outsb
stos
nop
push
sub
scas
pop
mov
cmp
sbb
or
mov
scas
movsb
push
shll
mov
inc
rolb
cmp
mov
lahf
mov
stos
or
sub
adc
or
inc
lea
and
fsubl
push
test
mov
rclb
cld
dec
fnsave
jnp
pop
cmpsb
mov
movsb
inc
ja
and
int
jb
repz
sbb
je
jl
push
lods
sub
push
mov
jno
subb
test
stos
or
mov
pushfw
cmp
imul
cmpsb
mov
mov
inc
sub
mov
ljmp
mov
xchg
icebp
push
aaa
fwait
hlt
push
dec
cmpl
and
sbb
test
ja
push
adc
insb
mov
ret
xor
sbb
add
add
fs
and
xor
aam
inc
cmp
inc
mov
ss
xor
sbb
int
and
fmull
mov
jno
cmc
push
mov
jmp
outsb
outsl
inc
jg
pushf
shl
adc
xorl
fdivrl
rcrl
clc
mov
sbbb
pushf
push
push
fstpl
fldt
jbe
xchg
cmp
ret
mov
cmp
adc
fstps
sbb
out
fcoml
pop
daa
mov
clc
sbb
mov
or
aam
clc
xchg
mov
push
push
lahf
jge
dec
push
int3
dec
icebp
stos
mov
and
mov
xor
pop
repz
mov
jg
int3
cs
add
hlt
popa
lret
dec
scas
or
push
aaa
xor
lahf
or
mov
inc
test
mov
test
movsb
sbb
cltd
mov
in
or
xchg
arpl
enter
mov
inc
loope
xchg
push
add
or
add
lods
std
in
push
jl
sub
ds
push
fildll
fiaddl
pop
xor
mov
push
inc
and
jns
inc
out
cltd
arpl
popf
popa
mov
mov
mov
sahf
jnp
mov
repz
sahf
xlat
les
push
cs
aas
sub
push
pop
mov
out
fstp
loope
out
pop
xchg
jns
cli
pop
mov
mov
sub
imul
shlb
ds
sub
jno
js,pt
in
mov
inc
pop
addr16
adcl
mov
cwtl
neg
aam
rorb
jb
pop
push
and
imul
jne
pop
lods
push
into
mov
rdmsr
aad
stos
add
cwtl
mov
stos
push
pop
arpl
mov
xchg
add
movsl
movsb
jecxz
mov
push
lret
fisubl
int3
inc
repnz
ss
dec
pop
in
xor
push
dec
sbb
sti
inc
filds
pop
stos
test
xor
xor
pop
jmp
pop
mov
xchg
les
gs
push
push
mov
lret
popa
out
shll
jae
leave
mov
sti
add
addr16
dec
mov
cmc
mov
sbb
mov
push
gs
pop
sub
arpl
sbb
loope
xchg
xchg
iret
xchg
cld
cmp
dec
mov
jge
inc
loop
xchg
mov
call
fmuls
mov
jmp
movl
push
jp
sbb
add
aad
push
daa
mov
or
mov
loop
inc
fwait
aad
daa
adc
jmp
mov
jb
rorb
push
inc
ljmp
xchg
xor
jo
stos
jbe
mov
stos
stos
dec
das
in
cmp
push
push
jno
dec
aam
xor
sarb
cs
push
fdivrs
or
aam
imul
lret
in
jp
cld
ror
fdivrs
pop
rcl
xchg
mov
inc
ret
mov
push
pop
mulb
dec
sub
xchg
mov
and
lret
jae
mov
test
lret
in
in
inc
push
sarb
dec
in
xchg
mov
and
add
das
fstpt
dec
test
inc
scas
fcmovnbe
popf
push
les
leave
jecxz
add
sbb
push
in
stos
lods
mov
cli
mov
mov
mov
repz
stos
add
por
jnp
mov
fcmove
test
adc
stos
rcrl
xlat
in
xchg
ss
mov
repz
pop
mov
push
or
jp
test
xchg
mov
cs
or
jb
push
mov
sahf
or
xchg
push
insb
adc
mov
nop
and
xor
int3
lea
xchg
stc
sarb
loope
or
mov
mov
scas
daa
push
enter
repnz
lahf
sbb
xlat
aas
mov
mov
mov
add
lret
data16
mov
lea
jle
dec
ljmp
jne
call
xor
fstps
ror
lret
sti
pop
call
int
loop
out
xor
addl
add
scas
in
xchg
inc
nop
push
gs
mov
dec
pop
stos
inc
add
adc
inc
sbbl
jno
sub
push
jmp
and
inc
cli
and
and
loop
mov
gs
add
jp
xlat
bound
das
das
jle
aam
outsl
out
inc
pop
inc
sub
mov
gs
stos
push
repnz
int3
outsb
add
inc
ljmp
lea
sub
fisubs
das
or
out
push
shrb
xor
pop
mov
in
loop
jle
push
or
mov
mov
les
cmp
setne
push
sbb
bound
call
sbbl
fidivs
je
jno
or
repz
dec
inc
sahf
insb
inc
jmp
pop
push
mov
xor
icebp
rcr
push
or
push
mov
dec
pop
jnp
and
push
sahf
in
mov
in
inc
jnp
int3
push
lds
imul
ja
xchg
je
fistpl
test
jo
xor
sahf
inc
inc
fwait
pop
mov
into
mov
fisttpll
push
sub
sti
daa
in
test
pop
dec
xchg
hlt
sbb
js
dec
dec
sbbl
xchg
gs
aad
addb
mov
add
mov
addb
push
popf
cld
lret
sbb
push
xor
stos
cmp
jmp
or
jnp
adc
pop
fwait
add
fistl
xor
jbe
cmp
push
dec
enter
movsb
mov
std
fucom
dec
dec
pop
push
add
jp
dec
sti
bound
fisttpl
pop
sbb
out
jae
fwait
push
dec
test
mov
lahf
test
sarb
jp
lcall
mov
sbb
add
sbbl
mov
and
lea
inc
movsb
rcr
lcall
out
and
push
out
dec
and
leave
mov
out
xchg
lret
scas
cmp
push
jg
sub
rorb
in
lock
xor
cmp
es
sti
dec
popf
and
mov
sbb
out
inc
mov
inc
jecxz
out
xchg
call
enter
fldl
loop
movsl
into
fstpl
flds
lea
dec
or
adc
into
xor
sub
mov
std
scas
mov
sbb
or
jle
push
decb
cs
pusha
mov
mov
mov
pop
jmp
cs
cmp
imul
pop
mov
in
cmpsl
cmp
sbb
jnp
fidivs
fs
das
dec
adc
pop
sbb
mov
les
andl
mov
lcall
dec
sub
mov
in
xchg
mov
add
pushf
inc
push
aad
add
and
fsubr
mov
iret
push
mov
imul
icebp
outsb
dec
aad
je
cmp
stos
test
dec
cmp
cmp
fs
and
inc
arpl
dec
adc
mov
lods
or
jae
cmpl
pop
dec
stc
lcall
pop
dec
pop
jle
shl
popa
push
mov
xor
cmp
sub
dec
mov
mov
mov
xchg
pop
mov
popa
mov
xor
or
cs
adc
imul
push
inc
jnp
lods
clc
and
push
mov
imull
inc
push
rcrb
lret
mov
notl
cmp
mov
pop
in
pushf
ret
lret
pop
aam
xor
aam
es
mov
xchg
icebp
dec
data16
push
outsb
mov
push
scas
fiadds
and
mov
addb
es
add
or
push
in
inc
xor
lahf
inc
inc
cmp
pop
sub
out
in
xlat
fiaddl
jecxz
cmp
cmpsl
mov
movsl
jbe
int
scas
and
inc
mov
icebp
arpl
dec
ljmp
jno
movsl
mov
or
nop
cld
jmp
inc
in
repz
ret
call
xchg
xor
enter
xor
sbbb
jp
ret
jecxz
push
std
test
rorl
and
xor
add
outsl
pop
jbe
mov
jg
pusha
pushf
mov
into
sub
ss
and
inc
lret
lret
pop
rcrb
decl
pop
inc
fildl
and
ds
notb
push
sbb
xchg
sub
sub
cli
movsl
sbb
out
ds
mov
mov
scas
scas
popl
call
int3
xor
loop
sub
add
adc
cmc
inc
mov
addr16
fcoml
jl
jns
mov
icebp
adcl
and
loop
xchg
mov
xchg
imul
sub
pop
int3
jno
rcr
sub
ret
jnp
fs
jb
popa
mov
xor
fnstenv
out
xchg
mov
sbb
add
cmp
jmp
pop
loop
int
push
pop
fcmovnbe
pushf
les
jg
xchg
push
outsb
sbb
lret
lods
xchg
push
cmp
and
inc
insl
aas
fldenv
or
bound
scas
cltd
pop
dec
gs
mov
rcl
mov
sbb
scas
sbb
dec
inc
mov
mov
ret
repnz
sbb
xchg
push
sub
scas
notb
lock
and
loop
out
jmp
int
shlb
xchg
and
mov
ficoms
clc
movsb
out
mov
jbe
dec
or
out
jg
sub
push
ret
test
push
sbbb
fisubrs
sbbb
xchg
in
jle
add
bound
lods
fdiv
push
sbb
aad
ljmp
and
call
push
je
adc
cs
fs
push
sbb
aad
jmp
cltd
mov
in
push
dec
mov
mov
cmc
sub
pop
cwtl
or
push
pop
inc
stc
rcrl
aas
mov
xchg
and
fiaddl
movsl
or
stos
sbb
sub
fs
sbb
push
punpckhwd
in
add
cmp
and
inc
cmp
and
push
sub
or
int
mov
js
pushf
stos
sbb
add
cld
sbb
and
jp
addl
xchg
cmpb
sub
mov
hlt
popa
int
aas
mov
mov
repz
sub
rorb
mov
jg
adc
test
adc
or
jecxz
jne
arpl
inc
jl
aam
iret
add
and
adc
fsubrs
jle
arpl
cmp
inc
xor
mov
loope
xchg
cmpsl
push
add
dec
adc
fwait
add
aam
pop
jno
cmpsl
mov
leave
addr16
roll
add
pop
sbb
fcmovnbe
sahf
shll
movsb
call
and
rcrl
sahf
je
iret
mov
js
adc
xor
inc
pusha
in
xor
lods
mov
mov
adc
into
lret
pop
jge
aad
ret
adcl
push
shlb
lahf
pop
imul
mov
mov
std
sbb
movsb
decl
jp
cmpsl
mov
jmp
inc
pop
loope
fcom
push
add
and
xchg
push
out
mov
dec
fiaddl
movsl
ss
jge
push
mov
pop
lret
push
ja
lods
js
dec
adc
in
pop
sahf
and
pop
shlb
xchg
cmpsl
int3
jl
std
pop
sarb
insl
test
push
jo
fwait
pushf
sbb
xchg
or
fiadds
jo
in
out
jge
out
jbe
pop
mov
cmpsl
shrl
cmpsl
push
push
push
adc
sahf
mov
cmp
dec
or
mov
sbb
sub
mov
adc
dec
add
out
sbb
push
adc
scas
ds
arpl
xchg
aaa
mov
xor
scas
mov
sbb
movsl
inc
jmp
fwait
or
jmp
or
mov
xor
stos
mov
mov
test
xchg
xlat
add
fsubr
ret
fimull
loop
dec
xchg
push
loope
sbb
cld
std
out
and
sub
add
jae
mov
xor
test
xchg
xlat
ja
push
stos
hlt
jno
inc
and
or
std
inc
imull
or
cltd
fs
mov
add
pop
stos
push
in
popf
ret
inc
insl
adc
imul
in
js
jl
jle
adc
sbb
ja
inc
cmp
and
sbb
mov
fmul
sbb
imul
rcrb
xchg
movsl
or
lret
pop
clc
addb
add
jmp
js
adc
mov
cmpsl
iret
leave
loope
mov
mov
lret
and
inc
dec
outsb
mov
mov
jge
rcll
adc
lock
mul
js
lcall
test
jo
xchg
xlat
shlb
outsl
test
xchg
or
mov
adc
fldenv
cld
inc
cmc
divb
and
test
pusha
cmp
lahf
pop
mov
inc
mov
insb
nop
cmc
insb
sub
sarl
or
cmp
fsubr
adc
mov
mov
cli
das
pop
xchg
sbb
fmull
cmp
outsb
out
mov
scas
mov
add
and
sbb
cli
sahf
leave
pop
lcall
and
ret
add
loope
jmp
mov
cmpsb
jno
in
jo
xchg
dec
pop
add
pop
mov
adc
lods
lods
push
jae
inc
xchg
pop
xchg
insb
call
jnp
cmp
inc
and
nop
es
out
mov
push
aas
mov
imul
pop
jecxz
pop
in
ss
or
push
lcall
sbb
leave
std
or
cltd
jae,pt
mov
xchg
imul
fdivl
jb
jmp
hlt
jno
repnz
jnp
and
hlt
movsb
xorl
lods
je
pushf
lahf
jle
decl
bound
ds
add
push
mov
sub
hlt
mov
leave
imul
lea
xlat
rcr
jmp
cmc
cmp
push
pop
xor
sub
cwtl
hlt
in
adc
push
call
bound
repz
adc
insl
or
insl
imull
xor
sub
mov
sahf
inc
or
cmp
pop
inc
mov
leave
push
dec
out
and
in
xor
xchg
sbb
add
push
or
adc
push
fs
jmp
inc
stos
inc
insl
mov
pop
inc
into
sahf
push
lret
and
lods
or
addr16
mov
psraw
sbb
shrb
jmp
into
hlt
adc
or
push
mov
xrstor
mov
and
sub
cmpsb
negb
ficompl
cmovle
dec
je
cmpsb
adc
and
ljmp
out
mov
sub
pop
in
push
or
sbb
ss
ss
fldl
or
sbb
fistl
rorl
add
push
mov
cld
imul
cli
push
dec
imul
jne
cmp
hlt
and
xchg
mov
cmc
imul
clc
mov
pop
imul
ret
mov
movsl
fdivs
or
and
mov
ds
jl
sarb
ficoml
ja
pop
adc
aaa
leave
in
jg
jb
shrl
or
lods
jb
push
fdivrl
mov
stc
popf
dec
mov
dec
icebp
push
or
pop
jl
mov
cltd
dec
add
cmp
aam
movsl
cwtl
icebp
push
inc
adc
jb
sbb
pop
mov
in
pop
add
dec
ret
fdivrp
popa
xor
and
lea
and
lret
movsl
and
xor
jne
outsl
sarb
lret
js
xchg
dec
mov
outsl
cli
sub
mov
or
aad
dec
xchg
xor
test
xchg
cmpsl
lret
imul
cmp
cmc
mov
sbb
cmp
pop
cmp
jo
cmp
mov
inc
fstpl
pop
imul
mov
dec
rclb
push
roll
xchg
inc
fwait
xchg
and
mov
mov
sbb
add
sbb
insl
mov
mov
outsl
sub
mov
adc
into
cs
lods
sti
fwait
push
jns
notl
xor
cli
mov
mov
cmc
mov
mov
and
mov
pop
sahf
inc
popf
mov
and
mov
add
cli
cmc
bound
push
imulb
mov
push
aaa
in
testb
dec
inc
out
fcmovu
ret
mov
push
jmp
aas
clc
aam
icebp
xchg
push
or
mov
das
stc
imul
xchg
stos
movsb
mov
pop
mov
movsb
mov
add
repz
jb
sbb
cmp
cli
xor
and
lcall
aaa
cmp
sub
jnp
pop
rcrl
js
jns
out
lret
jnp
mov
or
fsubrs
adc
xor
pop
lret
push
outsb
ficoms
fldenv
lods
dec
call
pop
xor
popa
pop
pop
cmpb
xor
xchg
dec
jno
test
test
fisttpll
jle
cmp
insl
pop
pop
pop
enter
and
pop
popf
icebp
or
rcll
aam
das
stos
nop
jmp
sub
sub
fsub
sub
or
push
push
dec
jne
pop
test
cltd
imul
sbb
popf
and
popa
fdivr
xchg
fsubs
out
test
iret
loop
sbb
sti
cmp
dec
dec
std
cwtl
cmp
jmp
lret
xchg
nop
shll
push
divb
mov
lea
jnp
mov
idivl
jnp
sub
dec
idiv
neg
add
icebp
push
jle
fs
shlb
cmp
notl
cld
sti
out
cmp
lret
pusha
std
dec
mov
pop
jg
push
dec
clc
in
call
mov
mov
push
in
mov
xor
add
or
xlat
mov
nop
das
icebp
test
pop
lret
sahf
xchg
dec
jnp
dec
sub
frstor
test
xchg
dec
pop
mov
test
adc
clc
pop
push
pop
fcomps
ljmp
adc
mov
mov
adc
push
push
pop
or
xchg
mov
sbb
push
cli
mov
and
test
mov
into
lods
cmpl
mov
mov
cmp
dec
int3
in
ret
lret
out
mov
xchg
pop
adc
cmpsl
rol
sub
mov
push
and
stos
ds
push
xor
scas
arpl
sub
inc
bound
mov
mov
jne
loop
not
int3
and
xchg
pop
sub
inc
add
mov
push
out
cmp
add
sbb
cmp
ds
fldt
lahf
lock
negl
xchg
loop
and
mull
mov
fstps
sub
dec
mov
subl
xlat
push
scas
in
push
test
fdivrl
aas
sub
in
lret
andb
sub
das
mov
xor
adc
push
sub
lea
cltd
and
lret
test
xor
push
jle
or
idiv
bound
xchg
out
jbe
in
or
gs
sbbl
bound
push
xchg
mov
in
dec
dec
jb
xchg
adcl
adc
pop
xor
into
push
mov
lods
xchg
inc
ficomps
pop
jge
std
cmp
popa
jo
fcompl
js
cmpxchg
in
sub
adc
pop
push
std
xlat
stc
aam
cmp
movsb
fs
xorl
sbb
push
out
rcr
mov
out
push
pop
pop
or
inc
insl
clc
inc
jae
leave
arpl
push
sbb
insb
repz
cld
lret
jle
fcmovnu
cmp
test
adcl
inc
stos
xlat
mov
out
int3
pop
and
jns
mov
wrmsr
dec
sub
bswap
mov
xorb
stos
pop
lcall
ss
fninit
pushf
gs
arpl
ret
mov
mov
sub
cmpl
push
mov
mov
sub
into
repz
iret
in
mov
out
mov
pop
cmp
in
jecxz
mov
or
push
inc
push
popf
cwtl
mov
pop
push
lods
rcrb
mov
push
aaa
frstor
jb
enter
jbe
push
mov
fsubrs
pop
add
xchg
sahf
loop
pop
ficompl
mov
dec
mov
insl
lods
pop
lods
adc
add
imul
mov
jge
sarl
dec
push
xchg
sbb
add
divb
pop
jae
or
inc
stc
or
mov
stos
sti
adc
popl
sub
lock
int3
add
jae
ljmp
insl
dec
xor
outsb
xchg
fs
jne
test
mov
cmp
rclb
fldenv
sub
mov
or
or
pop
push
mov
or
add
les
flds
xor
ret
jne
mov
xlat
dec
aad
cltd
add
fidivrs
add
push
lret
repnz
mov
int3
scas
sti
ss
xchg
iret
adc
ret
push
into
sub
icebp
add
cmp
aad
loope
les
call
fcomp
jecxz
pop
gs
or
or
dec
cmp
inc
je
mov
movsb
ret
ljmp
rclb
out
or
out
or
rcrl
scas
mov
xchg
mov
fdivrl
stc
mov
xchg
fisubs
fcomps
jne
sarb
jge
pusha
sub
mov
xchg
inc
push
scas
iret
or
jg
pop
push
or
mov
push
fldcw
add
shl
lret
mov
and
push
rol
in
mov
pushf
pop
or
cmpsb
test
sbb
adc
sbb
mov
pop
into
in
push
pusha
cmpsl
sbb
cmp
jle
int3
add
dec
jbe
pop
imul
lds
imul
pop
jecxz
stc
mov
dec
test
push
mov
into
rcll
rol
sub
gs
sbb
roll
pop
stos
pop
repnz
pop
mov
dec
mov
test
xchg
adc
and
pop
or
cltd
out
jle
pusha
jecxz
xor
ds
xchg
in
fldl
push
jnp
roll
in
roll
xchg
push
xchg
sbb
inc
test
mov
dec
daa
leave
mov
mov
ds
mov
xchg
lcall
lock
cmp
mov
adcl
dec
cmp
jmp
xchg
repz
data16
cld
loop
xor
jnp
sub
lcall
insl
clc
je
xchg
stos
fldcw
adc
ss
jg
fdivp
fistpl
cmp
adc
push
xchg
inc
sub
adc
aaa
jecxz
cmp
xor
sbb
cmc
xchg
jecxz
adc
adc
scas
xchg
je
cmp
mov
dec
xlat
lcall
add
sbb
xor
sbb
jg
sbb
push
testb
stos
sbb
xchg
or
pop
dec
lods
push
jbe
cld
pop
ret
pop
decb
xchg
test
adc
subb
xor
incl
xor
mov
movsb
outsb
push
add
dec
fidivrl
fisubrl
fnstcw
pop
enter
das
and
xor
fwait
xchg
out
inc
mov
test
hlt
movsl
push
mov
aam
pop
test
lret
mov
cmp
mov
push
mul
pop
push
jmp
int3
sbb
jmp
das
fcompl
mov
push
jg
out
pop
loopne
movsb
sar
stc
xlat
xlat
or
jae
dec
jl
adc
sub
xor
cmp
mov
xor
mov
or
dec
jae
mov
mov
and
loopne
js
out
mov
ljmp
outsb
les
inc
sahf
jbe
cmpsb
ss
push
xchg
ds
add
rcrl
dec
add
sahf
or
fwait
mov
mov
sarb
dec
push
sub
out
add
mov
sub
ficoms
cld
cli
mov
rolb
loop
lock
sub
int3
je
sti
push
xor
aad
add
cmp
dec
xor
push
add
sbb
mov
cmp
jmp
mov
sub
mov
das
cmpsl
xor
movsl
lods
sub
data16
aaa
out
and
or
int3
pop
out
push
test
ljmp
fists
mov
inc
push
rcll
xchg
jle
les
dec
sbb
pop
jae
xchg
jae
orl
sbb
insb
ja
repz
bound
roll
jbe
cmp
mov
iret
mov
and
cmp
test
sub
sbb
fsubl
data16
mov
inc
fdivrl
or
lcall
cld
pop
cmpsl
stc
sbb
xchg
adc
jle
scas
addr16
pusha
movsl
mov
inc
inc
je
test
js
push
cmp
adc
popf
cmp
and
addr16
insb
popf
arpl
inc
cmp
cmp
xor
popa
test
mov
cmp
adc
pop
push
ljmp
test
gs
shll
mov
adcb
xor
pop
or
idivb
and
imul
insl
jns
push
sbb
sub
shl
in
popf
pusha
shll
leave
adc
std
idivb
adc
lcall
jo
dec
test
push
out
mov
out
dec
jecxz
mov
push
shlb
stos
push
lea
jne
enter
stos
sbbl
mov
cltd
add
dec
push
out
mov
sub
insb
fsubrl
popa
add
aas
es
int
mov
cmp
push
mov
pusha
jge
add
mov
lcall
lea
and
push
push
addl
scas
pop
mov
loop
push
push
and
push
inc
jno
or
xor
out
fxch
xor
loopne
sub
leave
cmp
mov
leave
sbb
push
inc
add
aad
inc
pop
or
pop
cmpsb
inc
in
leave
enter
adc
loop
xlat
in
jecxz
mov
pushf
sarb
inc
out
mov
inc
les
mov
push
push
pop
jbe
movsl
cltd
push
ljmp
js
pop
xor
cmp
roll
aam
ret
xchg
out
dec
add
xor
push
rcr
pop
push
mov
xchg
mov
dec
xchg
lahf
aaa
mov
sub
mov
pusha
inc
inc
push
test
incb
leave
lds
stos
into
xchg
mov
enter
ret
stc
mov
sbb
mov
test
imul
push
iret
imul
imul
dec
dec
cwtl
repnz
jns
stos
xor
lcall
mov
leave
pushf
mov
in
inc
repz
lea
dec
jmp
jmp
jb
stc
push
mov
dec
cmp
adc
lea
outsb
pusha
arpl
and
mov
pop
mov
add
fucomp
pop
xor
jne
pop
cmp
pop
pop
ss
inc
stos
lahf
sbb
and
xchg
jae
js
fidivl
clc
scas
mov
push
and
push
fwait
cmp
in
bnd
out
mov
jmp
jb
cltd
out
cli
inc
sti
cmp
cmp
fisttpl
out
sbb
dec
mov
mov
jp
repz
mov
push
out
test
sub
xchg
mov
adc
sbb
mov
mulb
ret
mov
cmp
fcomps
cmpsb
lcall
lds
inc
in
add
mov
inc
in
and
sbb
test
cli
aad
scas
add
xchg
pop
dec
sbb
adc
xchg
je
cmp
nop
jl
jnp
ds
xor
negl
add
aam
addl
mov
out
ljmp
cmpsb
aad
mov
popa
mov
push
pop
or
shlb
cwtl
loop
adc
andb
mov
cmp
frstor
insb
lret
push
xor
mov
outsl
mov
cmp
pop
insl
outsl
jecxz
ds
test
and
int
data16
jg
mov
adc
sbb
mov
into
aad
repz
sbb
aam
jle
je
xchg
jecxz
lcall
notl
fs
adc
outsb
xor
push
sub
jae
inc
add
inc
mov
push
lcall
jle
arpl
xor
mov
lods
sub
xchg
and
icebp
cwtl
inc
or
inc
cwtl
out
push
fisttpl
pop
add
push
sub
cmc
adc
int3
xor
insl
dec
pop
and
popa
xor
test
and
fsubl
sub
dec
mov
enter
or
movsb
loop
test
gs
xchg
loope
ret
negl
or
arpl
insl
divb
int
mov
roll
sub
push
stc
mov
add
jae
add
push
dec
sub
jecxz
or
jno
xchg
jp
lahf
push
xchg
stos
or
popf
dec
cmp
dec
mov
insl
or
test
inc
das
jecxz
mov
add
xchg
jo
jne
inc
pop
inc
mov
stos
pop
fwait
push
ret
xor
idiv
insl
orb
adc
pop
and
test
mov
cmp
push
cld
test
lds
cltd
out
push
jae
in
push
sbb
mov
loopne
test
adc
push
scas
imul
stos
ds
push
sbb
jge
clc
arpl
imul
cmp
fcompl
test
fsubs
sbb
and
jnp
xor
cmpsl
or
int
xchg
dec
push
in
dec
inc
jge
mov
adc
jecxz
call
incb
scas
push
sbb
out
pop
mov
daa
dec
movsl
sbb
rolb
imul
jecxz
rclb
adcl
mov
hlt
adc
mov
ds
lds
push
mov
add
popa
cwtl
imul
xchg
pop
icebp
mov
add
adc
packsswb
andb
andb
mov
rcr
mov
push
jecxz
push
jns
and
jne
aas
and
in
test
sahf
jbe
add
pop
pop
loope
push
shr
sbb
ret
push
sub
js
mov
dec
mov
jnp
inc
pop
loopne
and
scas
xchg
or
enter
add
fwait
sub
fiadds
jmp
xor
push
ret
xchg
movsb
push
fs
sbb
mov
out
stos
jne
dec
cmc
es
movsb
out
jle
xor
lret
dec
push
loopne
mov
sarl
add
lret
xchg
mov
bound
pop
shrb
lods
inc
sub
xor
push
out
dec
les
jne
out
ret
sub
push
in
jnp
jle
inc
mov
push
aad
orb
shrl
mov
xchg
lret
lret
mov
in
mov
or
pop
jns
adc
fldl
jg
popf
insl
cmp
sarl
push
mov
mov
push
sub
stos
jmp
inc
pop
shlb
adcl
inc
test
mov
in
cmp
mov
dec
dec
stc
mov
aam
rcrb
and
inc
lea
sbb
popf
pop
scas
cmp
pop
cmp
sub
jnp
cmp
rcl
ss
popa
jg
mov
pop
aam
sub
addr16
mov
in
mov
inc
test
imul
mov
int3
mov
ds
ret
cmp
xlat
repnz
mov
out
adc
sub
loope
adc
mov
xor
das
pop
movsb
push
sbb
lahf
out
xchg
add
inc
testb
loope
aad
test
nop
fstpl
jae
insl
xchg
jge
cltd
and
loope
loope
sbb
outsb
pop
out
add
dec
mov
jno
ds
outsb
mov
cmp
lahf
nop
or
mov
divl
mov
mov
or
int
test
sahf
pop
jmp
ljmp
and
mov
push
cmp
push
lret
pop
arpl
mov
mov
mov
fs
and
ja
push
add
mov
outsb
idivl
sub
lock
and
mov
out
cmp
mov
or
imul
or
push
loop
xchg
cmp
push
testl
or
lock
adc
lcall
sbb
jne
jb
fiadds
add
test
nop
je
xchg
sar
jle
xchg
aad
add
jnp
mov
mov
ficoml
push
jmp
sbb
dec
out
inc
sub
jge
push
lcall
inc
imul
icebp
push
es
rcll
inc
dec
in
sbb
mov
data16
lods
hlt
xchg
sub
jnp
shrb
or
xchg
aad
imul
inc
call
xchg
fdiv
or
jmp
or
cld
dec
int3
fsubr
into
je
cmpsb
cltd
dec
int3
xlat
repz
scas
sbb
mov
out
scas
loopne
inc
and
addl
fistl
mov
mov
inc
add
and
pop
ss
mov
inc
je
dec
ret
scas
pop
ljmp
xor
jae
add
mov
test
fnstenv
push
add
mov
push
jae
imul
pop
add
scas
insb
out
pop
insb
push
jmp
jo
stos
icebp
gs
js
iret
aas
in
test
sub
shrl
ret
and
mov
cs
jmp
ret
mov
adc
fcompl
xchg
sahf
jmp
xchg
lret
out
incl
les
ja
testl
cld
dec
mov
push
adc
lods
cwtl
gs
test
sbb
dec
ret
xchg
in
enter
mov
inc
xor
dec
sub
clc
in
push
shlb
aas
pop
out
shrl
inc
pop
and
subl
daa
or
mov
stos
pop
mov
popf
ss
jmp
fwait
add
mov
movsl
fiadds
pop
cmp
in
jae
mov
push
sti
pop
sbb
test
stc
jp
mov
inc
sbb
iret
out
clc
add
inc
push
adc
mov
ss
rcll
outsl
in
mov
inc
jnp
sti
cltd
cmpsl
cmp
mov
scas
outsl
push
or
add
xor
es
pop
in
xlat
pop
stc
xor
inc
jns
mov
xchg
pop
lret
daa
pop
insl
mov
ss
push
or
xchg
fidivs
adc
push
xchg
adcb
mov
dec
xor
sbb
mov
lret
ds
ss
pushf
mov
jmp
xor
arpl
aam
stos
ret
repnz
ja
dec
lock
scas
stc
test
iret
gs
repnz
sub
xchg
mov
xor
pushl
jb
or
filds
stos
and
xlat
mov
hlt
aad
incl
lods
xor
push
leave
or
popa
iret
push
jno
mov
cwtl
leave
fstl
in
push
hlt
sbb
enter
pop
popf
xchg
pushl
jecxz
cmc
faddl
insl
int3
enter
mov
cwtl
adcb
fidivs
and
mov
xchg
popf
ss
jmp
ret
outsl
fbstp
shrl
inc
sbb
or
push
aaa
leave
pop
jle
mov
test
iret
in
inc
cmc
sti
xchg
jmp
in
xchg
push
adc
lcall
push
fdivrl
push
into
scas
lea
scas
cmpsl
pop
subl
je
jg,pt
mov
aaa
pop
adc
cmc
notb
sbb
cmpsl
fisubrs
cmp
pop
adc
mov
xor
pop
leave
adc
sbbl
mov
fbld
and
xor
jg
jae
adc
lret
xchg
fbstp
cltd
stos
inc
test
inc
inc
shlb
sub
repnz
mov
int
xlat
xor
adc
jg
push
adc
push
test
xchg
mov
push
not
fidivrs
and
xchg
popa
xor
jle
and
inc
xor
daa
jns
cltd
pushf
lret
pop
xchg
mov
jl
dec
test
mov
addr16
and
into
xchg
mov
cltd
inc
fwait
inc
inc
das
shlb
mov
clc
out
mov
add
jno
pop
nop
stc
data16
iret
movsb
mov
mov
adc
imul
cmp
lret
or
lret
loop
in
dec
push
sbb
mov
fcoms
mov
add
add
pop
jmp
pop
dec
xorb
into
dec
movsl
data16
xchg
mov
insl
imulb
test
add
mov
cltd
push
xor
andb
jg
inc
cwtl
in
xchg
shrb
lret
jns
insl
xchg
test
cwtl
mov
push
inc
xor
and
hlt
adc
test
mov
push
sub
sbb
rcr
jl
add
jg
faddl
mov
push
imull
inc
mov
insb
fists
mov
xor
pop
cld
jne
test
ret
jbe
cmp
sub
ret
mov
in
pop
popa
ds
imul
xchg
xchg
imul
notb
test
in
fcompl
cmpsb
inc
push
sub
ret
icebp
cli
shlb
jo
cs
jg
mov
xor
cmp
xchg
insl
sbb
int
gs
inc
pop
in
lcall
cmp
divb
dec
adc
dec
lahf
push
lret
pop
jp
pop
out
lea
movsl
fwait
aad
adc
and
xlat
add
inc
stos
sti
or
lods
iret
push
es
out
outsb
or
cmp
pop
add
loopne
sbbb
stos
jb
or
sbb
pop
fsubr
push
gs
outsb
sbb
mov
int3
shlb
jge
pop
mov
add
sbb
dec
push
add
pop
das
jnp
sbbb
mov
add
daa
ljmp
fucom
dec
fcmovb
clc
ficompl
add
fsubrp
fsts
sub
jge
ret
nop
fwait
hlt
addr16
sar
jge
jle
loop
jo
inc
js
pop
stc
xchg
mov
inc
mov
leave
adc
out
add
enterw
pop
daa
bound
sbb
gs
jns
test
popf
ret
push
jno
enter
aaa
lea
mov
add
data16
std
cmp
push
in
or
lcall
mov
push
cmpsb
sti
negl
xor
or
lret
loop
xchg
push
xchg
popf
lahf
push
fmull
pushf
lea
jne
mov
mov
push
sub
lahf
push
repz
icebp
lds
iret
daa
inc
and
outsb
imul
out
pushf
or
bound
push
jmp
sbbb
mov
ds
punpckhbw
or
pop
push
xorl
scas
or
mov
xchg
pop
ret
cmc
add
and
xor
daa
cmc
xor
add
push
and
sub
xchg
push
je
cs
sub
cmp
and
push
out
insl
mov
orl
rcll
jb
rolb
ret
popf
je
mov
xchg
pusha
iret
xchg
push
sbb
test
loope
ftst
sub
cmp
aad
and
sbb
push
cmpsl
xchg
mov
fidivs
push
sbb
int
jne
rclb
stc
imul
add
or
hlt
mov
or
inc
mov
sbb
xor
fcmovnb
ret
movsb
ss
cmp
mov
ja
sarl
movsl
nop
mov
push
or
push
shrl
test
mov
push
or
adc
or
add
jo
test
imul
cmp
test
jo
add
jnp
jno
repnz
lret
roll
push
cmpsl
adc
jo
nop
mov
ret
lock
addb
gs
adc
lods
in
jae
push
lcall
push
add
or
ss
repz
or
outsl
testb
aam
cmp
push
int
mov
jbe
push
or
cmpsb
pop
push
ret
out
adc
adc
aaa
mov
xor
mulb
inc
xor
jmp
inc
rclb
daa
dec
mov
mull
xlat
cmc
fsub
xchg
ja
mov
std
add
mov
xchg
sbb
cld
sbbl
mov
stc
mov
repz
sbb
adcl
inc
xchg
mov
inc
add
sti
ljmp
xchg
or
aaa
xchg
cmp
adc
stc
add
test
or
aam
in
loopne
leave
dec
loop
mov
sbb
pushf
adc
mov
nop
mov
in
rcrl
cmp
pop
xor
scas
xchg
adc
jg
xor
inc
cs
cmp
out
adc
test
mov
popl
xchg
sbb
fldt
int
jno
aaa
push
rolb
repnz
leave
cld
mov
ljmp
jecxz,pt
xchg
scas
push
mov
sbb
push
adc
daa
in
in
stos
testb
in
sub
cmp
divl
xchg
sbb
dec
loop
test
cltd
jle
jg
incb
xor
sub
mov
jl
push
mov
or
int3
push
adcb
imul
inc
std
cmpsb
xchg
es
cwtl
std
pop
adc
fs
adc
int
rcll
pop
xor
cltd
dec
outsl
loope
pop
dec
dec
cs
pushl
popa
sub
pop
fstl
dec
xchg
cmpsb
shrb
roll
bound
jne
sbb
adc
push
icebp
cmpsb
int
test
movsb
or
rorb
les
xor
lret
dec
mov
test
push
sbb
faddl
in
mov
daa
arpl
fdivrl
imul
pop
add
push
xor
inc
xchg
inc
rolb
add
sbb
arpl
add
cmp
jns
je
das
xor
imul
mov
mov
stc
in
pop
inc
nop
mov
pop
inc
adc
shll
inc
pop
outsb
mov
ja
ret
and
nop
jnp
into
test
add
jns
test
jecxz
bound
lret
test
mov
clc
or
adc
inc
inc
cmp
inc
and
adc
fbld
mov
sbb
lcall
sbb
out
int
sub
ja
scas
push
fnstenv
pop
push
repz
leave
rolb
mov
jge
negb
shll
lds
mov
pop
cmp
jns
outsl
stos
cli
inc
ja
inc
ret
push
sbb
jle
lds
xchg
les
insb
cmp
pop
add
sbb
cmp
popf
pop
shrl
test
pop
je
out
shll
mov
pop
xor
mov
sub
or
dec
bound
xor
pop
mov
in
ret
mov
inc
cmp
xchg
cmp
jecxz
cwtl
stos
imul
push
negb
andb
jae
sub
adc
incl
gs
adcl
cmp
imull
mov
iret
mov
sahf
scas
es
inc
cmpsl
test
test
jp
cli
and
in
aas
nop
xor
lock
mov
mov
aam
or
daa
ss
movsl
aad
test
xor
test
shll
add
inc
stos
js
jmp
fidivs
sub
mov
dec
mov
cmp
and
lods
cli
fwait
inc
adc
lds
in
inc
xchg
mov
xchg
and
or
aaa
sbb
and
and
mov
and
mov
mov
xor
pop
mov
pushf
mov
pop
dec
xchg
lahf
add
mov
mov
insb
pusha
mov
dec
les
imul
mov
pop
mov
movsl
outsb
cmp
cmp
mov
mov
mov
push
arpl
in
mov
cmp
push
hlt
lahf
std
mov
cmc
mov
fisttps
or
add
mov
outsl
xchg
lea
and
repnz
cmpsb
fildll
fdivrs
pop
leave
orl
cmc
rcr
sbb
hlt
imul
pop
mov
in
cmp
cmp
cmp
loopne
sub
aas
mov
shl
js
dec
daa
pop
popf
out
push
in
and
xor
adc
cmp
std
out
loope
pop
inc
sbb
pop
mov
addb
sbb
sbb
pushf
out
mov
inc
cmpsl
ds
mov
sub
jge
pop
jne
dec
mov
xchg
cmp
mov
pusha
push
enter
jl
xor
and
push
andb
fsub
test
jb
movsl
mov
aam
outsb
lock
jp
mov
lea
adc
test
jae
std
scas
cwtl
cld
cmc
inc
adc
fbstp
mov
xchg
shll
aad
cmp
scas
sub
xchg
pop
mov
in
shlw
adc
sub
shrb
incl
fstps
dec
mulb
je
ret
fcompl
sar
imul
rcl
lds
sbbb
and
ret
jae
rclb
add
mov
fs
fcoms
sbb
ror
int3
xchg
pushf
mov
sbb
pop
out
xchg
jne
je
pop
cli
rcll
jge
mov
pop
ret
fdivrl
push
in
sbb
gs
or
pop
jae
push
cs
cmc
cmc
mov
mov
in
adc
mov
lea
xchg
testl
inc
test
add
rorb
movsb
push
xor
jle
push
rclb
xchg
inc
cli
mov
pop
dec
mov
bnd
sbb
push
jmp
and
push
xchg
faddp
leave
arpl
insl
jne
lahf
jp
dec
xchg
push
addr16
filds
push
aad
mov
mov
push
mov
repz
xchg
scas
adc
add
std
xor
leave
and
pop
add
test
inc
in
out
mov
test
inc
jbe
fnstcw
sbb
adc
adc
popf
sbb
xchg
movsl
jns
fwait
daa
xchg
push
cmpsb
inc
or
pop
addr16
xor
mov
adc
and
dec
sbb
nop
jecxz
in
hlt
cltd
sbb
fwait
lds
fldcw
sub
mov
adc
out
mov
push
pop
xor
arpl
push
or
inc
push
or
dec
outsl
rcrb
js
cmp
mov
test
inc
and
fcom
mov
subl
push
daa
adc
xchg
lcall
test
gs
dec
jmp
or
ja
arpl
jns
lret
push
lret
aaa
jl
push
inc
jmp
or
out
outsb
dec
test
and
push
lahf
xchg
push
leave
push
mov
sub
add
pop
subl
sub
mov
dec
xchg
cmp
jecxz
rcll
fidivrs
movsb
xchg
adc
enter
scas
push
rcrb
iret
gs
stos
xor
test
scas
imul
cli
jo
iret
lods
dec
inc
jae
xor
sbb
sub
push
sbb
loop
pop
mov
and
enter
mov
sbb
fimull
mov
mov
mov
movsb
mov
mov
mov
jp,pt
xchg
jae
imulb
pop
push
sub
repnz
jb
je
test
sbbl
xor
push
sub
rolb
repz
test
jns
lahf
in
cmp
test
push
sub
dec
iret
fsubs
stos
lods
lret
mov
jecxz
add
lods
pushf
stos
leave
notl
dec
sub
movsl
jbe
add
lret
test
iret
and
mov
mov
or
lds
inc
testl
enter
mov
cli
jmp
int3
cwtl
fmuls
jp
mov
mov
lods
je
and
xchg
outsb
rolb
lods
loopne
repz
fsts
push
shl
loopne
push
push
dec
ret
bound
into
insb
jo
mov
incl
lahf
xorb
into
stc
jbe
fwait
test
pop
inc
or
mov
mov
dec
dec
call
int
add
outsb
xchg
sbb
in
cld
xchg
mov
movsb
in
sub
add
mov
sbb
lock
jg
add
lods
pop
fdivs
push
mov
cmpsl
repnz
lods
inc
test
mov
inc
pop
js
out
lahf
cmpsb
test
test
out
ss
sub
insl
push
add
mov
pushf
adc
sub
fnstsw
add
in
adc
xchg
mov
mov
stos
jge
add
jbe
es
jp
cld
gs
mov
pop
or
daa
icebp
bound
hlt
sub
inc
inc
adc
inc
pop
jg
xchg
inc
mov
push
pop
adc
iret
nop
push
mov
test
cwtl
inc
mov
push
aam
mov
pop
lods
stos
sbb
sbb
ja
loopne
xchg
loope
cld
push
lods
das
lcall
inc
jl
pusha
xchg
or
mov
add
adc
mov
xchg
cs
lret
aas
mov
add
lock
jle
push
daa
adc
lods
add
jbe
sbb
pop
outsl
inc
adc
lods
in
lods
mov
mov
insb
cmp
adc
adc
mov
jmp
arpl
xor
dec
out
sbb
clc
adc
cld
adc
pop
jp
xor
push
dec
push
jae
mov
sub
mov
icebp
ss
outsl
sahf
inc
in
std
ret
out
push
out
stos
jnp
dec
test
test
lret
out
inc
in
filds
xchg
pop
and
repnz
int
fildl
sub
cli
int3
fbld
inc
incl
lods
je
or
mov
mov
scas
fstps
push
cmpsb
sar
je
fwait
cmp
das
test
push
dec
push
sbb
pop
sbb
filds
xor
dec
or
lock
test
jae
push
test
add
push
add
push
dec
mov
sub
add
test
fcomps
pop
jb
mov
sbb
inc
or
mov
pop
out
in
aam
loope
mov
daa
ljmp
aam
pop
xor
popa
mov
sub
mov
in
insb
cmp
test
in
or
xlat
mov
lock
sti
cltd
mov
dec
or
inc
rclb
imul
dec
jno
mov
je
dec
test
cmp
popf
pop
jle
fbstp
dec
adcb
sub
jp
popa
pop
adc
arpl
mov
shlb
movsl
test
jae
sub
hlt
mov
xchg
jbe
shr
push
insb
in
or
sbb
insb
imull
push
mov
scas
cmc
clc
mov
int3
push
pop
pop
push
pop
mov
cmpl
or
enter
pop
in
ret
dec
shrb
and
xchg
cmp
and
or
push
or
in
cmp
repnz
sbb
adc
xchg
inc
mov
adc
mov
rorb
arpl
test
pop
loopne
xor
int3
lahf
in
pop
lock
dec
sub
fisttps
imul
xlat
cmp
push
fcomip
jle
aaa
inc
adc
ret
cwtl
notl
aad
mov
pop
lahf
in
xor
xchg
les
int3
test
dec
ret
pop
icebp
cmpsb
movsl
fistl
dec
lods
adc
cmp
iret
je
ds
push
jnp
mov
test
cmpsb
loop
sbb
jmp
js
pushf
dec
shlb
jmp
mov
lea
daa
add
push
imul
adc
sub
xchg
shr
aad
outsb
jg
movsl
cmpsl
scas
int3
cld
movb
sbb
les
bound
shr
cltd
cmp
push
cld
jbe
xchg
cs
jne
lods
cmp
test
push
push
and
mov
jp
negb
or
xchg
push
frstor
cmc
cmp
xor
cmp
test
dec
cmp
ds
dec
push
or
pop
mov
imul
push
sub
psubusb
lods
sbb
dec
fs
mov
or
push
cmpsl
mov
xchg
ret
sbb
xlat
mov
imulb
push
ds
xor
cmpl
cmc
xchg
mov
push
dec
push
sub
decl
outsb
aas
cld
sbb
daa
jo
iret
xchg
hlt
sbb
inc
popa
repz
cmc
add
stos
mov
mov
orb
cmp
xorl
jge
mov
jl
inc
scas
lcall
test
inc
mov
popf
fcmovnb
subb
data16
jecxz
mov
jne
push
int3
repz
cwtl
cltd
xchg
out
in
mov
lods
sbb
xor
sub
in
adc
test
call
subb
nop
ret
xor
dec
sahf
push
sub
sbb
jecxz
xor
scas
fwait
popf
xchg
xlat
push
inc
pop
or
adc
sahf
movsl
and
xor
test
jg
add
dec
lcall
mov
lcall
push
jle
or
and
loope
push
cmp
push
ds
lcall
jl
dec
and
mov
pop
leave
jne
fiaddl
jnp
and
outsb
nop
mov
add
fildl
sbb
jne
xchg
fstps
and
repnz
sbb
sbb
or
fiaddl
xchg
mov
or
daa
mov
ja
popa
cmp
mov
push
stc
xorb
jp
jo
mov
cld
inc
dec
mov
fld
ret
scas
cmp
lahf
mov
in
xchg
in
out
mov
jl
cmp
in
mov
rcll
xor
inc
add
inc
test
and
xor
inc
rcr
cmpsb
filds
lods
push
sbb
xorb
mov
mov
sbbb
in
inc
cmp
add
lock
std
into
mov
or
and
dec
out
dec
jp
out
xchg
mov
incl
inc
shlb
aam
scas
scas
push
or
sbb
dec
idiv
icebp
jo
bound
push
test
mov
out
mov
addl
mov
not
andb
movsb
push
aaa
add
adc
int
and
jecxz
dec
loopne
xchg
sub
add
popl
data16
add
jo
mov
repnz
xor
xchg
imul
jne
or
adc
test
mov
adcl
cs
cmp
inc
dec
dec
ret
add
cltd
xor
mov
mov
xchg
sbb
mov
enter
out
out
orb
dec
add
and
scas
xchg
inc
pop
ss
ret
xor
jno
cmpsb
inc
data16
test
lds
lret
inc
push
mov
jmp
push
int
fwait
xchg
mov
sub
push
loopne
movsb
test
inc
rorb
mov
and
jecxz
push
call
dec
cmp
xor
test
lahf
cmp
bound
mov
add
lods
aas
outsb
negl
stos
ljmp
sub
cmp
aad
out
lods
add
xchg
pop
into
loop
sub
rorb
movsb
and
sar
or
les
mov
xchg
mov
cmpsb
das
ds
adc
mov
sbb
mov
dec
and
test
cmp
ret
and
inc
mov
xor
push
int
jmp
push
adc
sbb
lahf
mov
sbb
ljmp
jecxz
add
xchg
loop
or
shlb
jmp
mov
inc
push
lcall
call
inc
pop
jmp
xchg
cmpsl
xor
mov
ds
loopne
push
mov
popf
sub
push
jo
ja
movl
lds
loope
cmp
cmp
adc
sbb
addr16
daa
mov
mov
push
stos
mov
in
cwtl
loopne
inc
xor
xchg
xor
push
xchg
pop
adc
pop
mov
fisubs
or
xchg
test
enter
lcall
jle
in
loop
pop
cmp
call
mov
and
icebp
bound
and
aad
out
add
insl
dec
or
cli
test
pusha
movb
xor
ret
push
inc
fs
lock
jnp
int
rclb
nopl
push
or
int3
cmpsb
mov
cmp
push
fiadds
push
sbb
in
dec
and
and
cltd
jp
lret
add
sbb
or
push
les
iret
movl
dec
push
sahf
jmp
jae
push
enter
add
mov
cwtl
loope
push
sahf
dec
push
cmp
jl
push
push
scas
cmp
mov
jo
lcall
push
sub
mov
iret
sbb
mov
and
fstp
mov
pop
cld
or
mov
sbb
adc
and
add
daa
call
inc
dec
push
lods
xor
dec
jbe
adc
sbb
sub
aas
cmpsl
or
dec
aaa
out
dec
jmp
inc
inc
push
mov
sbb
sarb
pop
push
xor
sub
les
imul
fidivrl
xchg
sub
pusha
fucomip
add
cmc
scas
mov
outsb
into
sbb
xor
lret
jmp
sub
inc
mov
xchg
outsl
push
fisttps
cmp
and
fnstcw
pop
push
xor
mov
dec
negb
lcall
fdivp
sbb
rcr
sub
sahf
nop
mov
mov
cmpsb
xor
sub
mov
out
adc
aad
mov
mov
jbe
xor
lret
aaa
lock
mov
xchg
into
xchg
sub
xor
mov
sbb
sub
pusha
xor
xchg
sahf
sti
push
and
xor
movsl
stc
sbb
jl
and
xchg
ja
add
lret
add
sbb
mov
push
or
insl
dec
sub
rorl
mov
push
cpuid
mov
or
mov
mov
lds
insb
inc
pop
cltd
aas
in
sub
pop
push
dec
dec
jg
dec
pop
xor
pop
sub
sbb
call
jg
pop
loop
cld
adc
into
cltd
push
fcomip
test
mov
ja
into
dec
fwait
jle
clc
scas
mov
sbb
mov
ret
add
add
xor
or
dec
loope
int
push
mov
repnz
push
xor
inc
hlt
or
in
push
pop
sub
imul
std
adc
cmc
mov
je
sbb
xchg
cmpsb
into
jp
mov
cmc
sub
stos
ds
adc
std
stc
xchg
push
rcrl
orb
sub
adc
cltd
loop
arpl
pop
popa
fcoms
pop
xchg
jp
pop
ficoms
cmp
sub
jne
xchg
pop
mov
das
fmulp
and
inc
inc
cld
stos
push
dec
adcb
jne
inc
popa
add
adc
pusha
adc
mov
cmp
xchg
xchg
in
xlat
jbe
mov
add
stos
inc
sbb
add
ljmp
and
popf
fcmovne
pushf
jae
call
xchg
repz
in
repz
mov
mov
fbstp
xor
mov
lods
sub
pop
pop
lahf
jl
push
mov
ljmp
jnp
push
mov
sub
or
lods
sbb
lods
fwait
push
mov
fcmovb
insb
test
push
repz
xchg
les
nop
ficomps
mov
pop
jmp
xor
cmp
leave
add
mov
dec
fsubrl
fistpl
fwait
int
lahf
sbbb
xchg
or
mov
pop
popf
dec
negb
mov
sbb
and
mov
shrb
ret
mov
add
mov
inc
jb
adc
imul
insb
insl
sub
or
sub
out
mov
mov
jecxz
ret
cmpsl
mov
mov
arpl
stc
sti
stos
incl
setne
xchg
out
fcmovnbe
dec
arpl
pop
cs
and
ret
fs
inc
xchg
cmp
push
sub
dec
out
ja
ja
sbb
mov
iret
jp
mov
pop
cmc
loopne
imul
mov
scas
pop
and
pop
loopne
aad
add
push
xchg
xor
jecxz
push
add
push
sti
sub
push
add
mov
push
or
or
fistps
pusha
test
jno
mov
add
div
mov
jmp
sbbb
jae,pt
mov
jmp
cmpsb
out
cmc
adc
int
or
movsb
inc
out
push
in
pop
fstps
jb
pop
call
mov
call
dec
das
rcrb
ss
test
je
loop
dec
das
int3
push
idiv
jecxz
cs
jns
bound
fisttps
insb
push
xorl
inc
inc
aaa
ficoml
enter
sti
push
arpl
clc
push
cld
mov
or
push
movsb
sbb
dec
push
stos
fisttpl
in
fidivl
mov
mov
in
xchg
pop
dec
jbe
push
arpl
and
push
jne
dec
std
lcall
movsl
popa
fucomp
add
das
iret
pop
sti
pop
loopne
mov
pusha
dec
clc
mov
in
int
fadds
jo
std
jle
push
jnp
mov
int3
xchg
movsl
add
xchg
adc
cmp
adc
enter
bswap
dec
out
inc
stos
pop
fs
jo
out
dec
fdivrl
pushf
data16
xor
inc
lcall
xor
sbb
out
xor
lcall
xor
gs
and
xor
daa
sarb
sub
jp
mov
cld
xchg
sbb
icebp
faddl
or
test
or
loop
outsl
sti
nop
cmp
add
lahf
jnp
xchg
lret
xchg
adc
test
mov
fldcw
xor
and
add
in
out
aam
push
push
and
cmpsb
gs
cmp
cmp
xor
out
or
stos
fstl
mov
inc
jp
sbb
popf
xor
int3
add
mov
clc
cmp
movsb
mov
rorb
hlt
jae
decl
jg
ja
inc
or
and
adc
lea
cmp
lea
pop
scas
aad
out
sub
mov
xor
pop
mov
push
inc
cmp
jo
lock
mov
adc
sub
mov
loopne
cmp
pop
outsl
enter
push
popa
addr16
cmpl
loope
into
xchg
add
pop
bound
cli
pusha
mov
xor
adc
jb
cmpsl
dec
aaa
adc
mov
pop
in
cli
xchg
lcall
ljmp
in
lea
cli
aad
mov
js
roll
idivb
cld
pushf
loope
into
cmpsl
sti
mov
fwait
cwtl
mov
int
stos
pop
lcall
add
mov
xor
xlat
pop
lods
outsb
xor
xchg
scas
shll
ds
mov
sub
xchg
xchg
pusha
fdivrs
fdivp
xchg
je
jo
imul
mov
stos
push
sti
adc
jmp
sbb
mov
cmpsb
adc
mov
dec
jo
add
arpl
xor
in
stos
cld
inc
xchg
mov
or
fdivrs
int3
cmp
jge
pop
add
nop
xchg
leave
pop
dec
es
dec
inc
fbstp
sub
jnp
pop
cmp
jns
inc
insb
jle
sbb
cmp
cmc
pop
xchg
mov
inc
loop
jge
insl
or
dec
inc
or
imul
scas
aad
mov
mov
and
fimull
pop
pop
leave
negl
outsl
stc
push
popa
xlat
cmpsb
movsb
out
adc
pop
es
repnz
xchg
cwtl
and
push
xor
add
scas
jb
fldcw
add
rcll
jo
push
fisttps
fadd
or
je
ja
fldl
fcmovu
lods
mov
cmp
sti
leave
in
das
sbb
add
xchg
sarl
mov
aas
shll
mov
xchg
mov
in
out
rcl
adc
jmp
or
out
lds
push
jmp
jbe
adcb
leave
aas
dec
fadds
and
scas
stos
loope
daa
leave
push
and
mov
inc
pop
pusha
mov
jge
dec
scas
adcl
sbb
incb
sbb
xorl
test
daa
test
out
sbb
or
adc
jp
cwtl
sbb
xor
testl
test
fwait
in
pop
arpl
sti
cs
adc
cld
fmull
mov
xchg
lret
dec
ret
int3
push
jl
cmp
negb
dec
mov
inc
ror
push
stc
fldt
clc
lcall
pop
inc
adc
adc
sahf
data16
punpcklbw
adc
mov
pop
sbbl
mov
loope
divb
ficomps
repz
xchg
mov
push
lret
fisubrs
fs
jp
fdivrs
cmc
sahf
sbb
nop
shlb
arpl
mov
scas
xchg
jecxz
clc
mov
dec
fiaddl
jg
lds
leave
aad
ljmp
cmp
xchg
push
jg
mov
mov
aas
ret
in
or
cmp
cmp
mov
adc
push
lret
dec
fsts
jnp
sbb
lods
push
lods
cmpb
loope
test
sar
ret
mov
push
lds
mov
sarl
inc
je
icebp
call
push
pop
sbb
dec
pop
adc
stos
daa
aad
xchg
rorl
clc
imul
jns
mov
dec
mov
cmp
cmp
test
push
fnstenv
jecxz
loopne
jmp
sbb
out
cmp
std
jmp
xor
andb
popf
int3
xchg
xor
and
push
pop
jno
pusha
xor
mov
push
adc
or
xchg
inc
fdivrs
in
sub
mov
fwait
pop
and
lret
clc
sub
fs
cmpsb
pushf
leave
and
lcall
inc
and
repnz
pop
adcb
mov
jl
and
loope
sub
jge
stc
jl
and
dec
gs
cld
dec
lret
dec
and
mov
js
loope
or
mov
push
xor
or
dec
dec
mov
sbb
aam
mov
addr16
in
cmc
xchg
rorl
lret
mov
adc
pop
hlt
ret
and
arpl
aad
add
or
sahf
or
xchg
clc
and
push
or
jmp
int
ja
jge
push
inc
das
movl
or
jb
sbb
mov
pop
insl
ret
push
push
inc
lods
test
test
stc
jno
aad
fbstp
jmp
cmp
pop
iret
out
sbb
inc
xchg
pop
mov
jo
movsl
push
stos
imulb
mov
lahf
shlb
adcb
cmp
vmwrite
push
adc
mov
es
pop
add
cli
lock
jle
loopne
dec
inc
in
mov
data16
mov
xchg
lods
adc
pop
je
mov
mov
not
scas
sub
xor
mov
or
fistpl
cmpsl
call
js
dec
cs
arpl
mov
fdiv
xchg
adcl
shrb
cmpsl
cmp
cli
out
hlt
ror
add
cli
xchg
call
pop
and
das
data16
pop
loope
sub
mov
push
pop
jmp
cs
aaa
dec
movsb
mov
jmp
aad
jle
and
push
adc
inc
mov
test
mov
or
push
shl
push
mov
aaa
test
ja
jns
inc
pop
or
cltd
mov
bnd
mov
mov
dec
dec
icebp
adc
dec
xor
and
fs
dec
pop
sub
pop
jb
shll
xor
and
xchg
imul
inc
push
rclb
jbe
cli
dec
int3
nop
imul
mov
cmp
sub
mov
pop
pushf
xlat
adc
das
xor
mov
inc
jb
fwait
adc
push
push
jle
imul
imul
ljmp
or
outsb
rcll
pop
and
adc
in
inc
rolb
mov
push
mov
into
lods
mov
je
adc
scas
aam
xor
mov
fistpll
sarb
mov
out
jnp
push
out
inc
pop
in
bound
test
mov
adc
aam
int
das
imul
pop
or
aas
xchg
sub
lcall
push
cmpb
or
lea
jbe
push
xor
data16
dec
shl
or
push
jp
jp
push
test
in
sar
dec
mov
mov
les
icebp
inc
xchg
cmpsb
lock
loopne
mov
je
shrb
mov
dec
arpl
fs
push
addb
les
mov
mov
pop
js
push
push
test
je
adc
fcoms
stos
stos
xor
pop
xchg
je
sbbb
push
add
push
sub
in
push
imul
jp
pushf
cmp
leave
dec
outsl
sub
test
ficompl
adc
jmp
rclb
cli
jle
les
inc
bound
icebp
lock
cmpsb
push
call
jp
and
pushf
movsb
int3
stc
addb
dec
lock
sub
js
ret
mov
jg
cli
sub
mov
inc
xlat
pop
mov
pop
jmp
mov
fisttpll
mov
xor
mov
cld
jno
mov
adc
xchg
adc
xchg
sub
or
push
shlb
mov
iret
rolb
cmpsl
cmp
or
mov
pop
iret
and
test
pop
xor
cmp
inc
or
or
add
jle
jno
xor
sbb
inc
dec
sahf
dec
in
xchg
das
sbb
xor
outsb
repnz
or
addr16
call
mov
push
xchg
jl
mov
pop
inc
sbb
dec
inc
inc
das
cmp
pop
cmp
xlat
orl
mov
mov
out
fiaddl
and
sbb
popa
add
cwtl
or
sub
mov
jne
mov
sbb
pop
hlt
insl
dec
clc
or
cmp
je
int
int
push
jg
into
lods
jns
mov
dec
test
mov
cmp
pop
lret
outsl
in
mov
add
or
bound
add
lret
into
out
dec
inc
mov
mov
mov
shr
jecxz
lret
in
fmul
dec
push
fwait
mov
cld
or
mov
iret
aaa
loopne
loop
insl
sbb
gs
sub
mov
inc
filds
dec
popf
jno
dec
incl
ror
pop
jp
jno
lret
arpl
sbb
inc
dec
cmpsl
mov
jae
das
in
in
sbb
jl
xchg
inc
mov
popa
loop
lock
mov
insb
aaa
sbb
sbb
stc
jno
jmp
js
shlb
inc
xorl
pushl
cwtl
mov
dec
xor
out
xchg
mov
or
cwtl
jmp
btr
pop
xor
dec
int
sti
imul
fidivrs
data16
sbb
xchg
jmp
sbb
shrl
jecxz
jmp
imul
sti
test
push
pop
jns
inc
loopne
jbe
push
lods
repz
dec
dec
mov
and
addr16
in
pop
push
lahf
add
xor
xchg
sbb
inc
cmp
stc
sbb
cmp
ja
sub
div
es
fcmovb
mov
add
sub
jb
int3
dec
inc
xchg
sbb
jns
idiv
and
sarl
lret
mov
add
shrl
fsubrl
mov
push
or
lcall
ret
das
and
inc
out
mov
addr16
adc
add
arpl
out
inc
ret
out
jae
aaa
int3
xchg
add
lock
sub
pusha
mov
sbb
push
inc
clc
out
push
cli
sub
aad
inc
cli
imul
ljmp
mov
jp
xor
cmp
rcrl
and
out
aaa
fcmovnb
inc
ffree
test
xchg
xchg
pop
push
mov
adc
stc
push
mov
shlb
jecxz
push
cs
cmp
out
cmp
sbb
jno
inc
jnp
test
and
mov
adc
rolb
loopne
loop
data16
dec
cs
ljmp
popf
in
add
insb
cli
xor
std
sti
add
or
ljmp
push
jge
test
fs
jb
adc
inc
adc
mov
fsubrs
dec
push
shrb
push
and
cmp
push
int3
push
jecxz
aam
xchg
jo
and
sbbb
xor
mov
nop
push
push
sbb
pop
ljmp
inc
or
inc
mov
push
mov
out
cmp
jo
daa
std
lret
push
into
call
icebp
pop
sbbl
popa
adc
xchg
mov
xchg
sbbb
imul
pop
std
js
mov
jge
stc
push
popa
fadds
movsb
repz
bnd
xchg
movsb
push
xor
movsl
push
cwtl
js
rcl
and
int
cmp
push
xchg
ret
dec
inc
add
jle
add
sub
iret
arpl
rorl
arpl
inc
aas
jle
and
rcrb
scas
cmp
push
int
jmp
mov
mov
test
int3
jg
inc
inc
neg
mov
jns
push
dec
push
dec
xchg
xchg
lret
and
and
mov
test
inc
mov
xlat
stc
mov
insl
loope
fwait
mov
outsl
or
repz
mov
inc
jecxz
adc
stos
mov
leave
outsl
adcb
int
mov
mov
and
inc
pop
icebp
les
lahf
adc
push
div
lret
push
repz
mov
xor
mov
addb
lods
repnz
jmp
stos
insb
push
mov
lret
pop
loopne
add
push
mov
adc
xchg
in
inc
pop
movsl
jno
leave
repz
xor
cld
fbld
out
mov
lea
inc
xor
inc
insl
mov
dec
out
rcll
mov
fidivs
data16
xchg
mov
inc
pusha
push
cmp
sbbl
cmp
inc
adc
push
jns,pn
sub
popf
push
pop
jo
int3
push
adc
and
mov
outsl
xchg
clc
insl
lods
mov
out
push
sbb
xchg
mov
shll
lock
outsl
mov
xchg
add
mov
sub
cltd
pop
sbb
mov
paddusw
push
and
pop
cmp
je
mov
stc
das
cld
cld
jno
jecxz
push
lods
sbb
push
addr16
cmp
push
mov
lds
add
mov
mov
lahf
sahf
dec
push
movsl
add
scas
vpcmpgtd
push
mov
mov
loop
fisubl
mov
dec
js
xor
in
cmp
nop
pop
mov
jbe
mov
test
mov
push
jne
cs
leave
stc
movsl
inc
jle
lahf
icebp
mov
hlt
data16
push
mov
sbb
cs
mov
repnz
push
mov
iret
sahf
out
cmp
push
repz
and
or
pop
pop
pushf
push
and
outsb
data16
pop
pushf
push
add
push
xchg
movsl
insb
push
or
je
mov
arpl
dec
ss
xorl
cwtl
push
test
inc
push
nop
imul
push
sbb
out
mov
jecxz
mov
jg
add
scas
push
sbb
xchg
in
outsl
daa
push
popl
pop
iret
inc
cmp
push
stos
hlt
xchg
jae
inc
mov
sahf
dec
add
lea
jno
filds
andl
push
mov
fsubrl
cli
add
mov
sub
lahf
pop
cwtl
sbb
and
fsubrl
xor
int3
out
filds
push
cmp
cmpsl
fstpl
jmp
nop
icebp
adc
add
pusha
data16
cmp
and
sbb
pushf
outsl
jecxz
out
inc
fwait
mov
mov
movsb
jnp
insb
jno
jmp
test
sbb
das
pop
ror
mov
adc
add
imul
out
or
xchg
mov
sbb
fisubrs
lret
lcall
push
jg
sub
push
out
nop
jno
jecxz
lds
or
sub
and
mov
mov
bound
divb
cmp
dec
inc
or
iret
test
jp
loop
xor
aaa
imul
and
inc
xor
xchg
adc
adc
shlb
add
cmp
mov
js
testb
jl
inc
shlb
loop
adc
push
inc
push
or
cmp
add
mov
rolb
sub
xchg
or
xchg
in
and
adc
ret
ficomps
xor
std
rcll
cmpb
push
inc
pop
mov
imul
pop
ds
adc
and
pop
cmp
add
mov
adc
outsb
movsl
sub
arpl
xor
cld
lods
lds
dec
dec
push
push
or
mov
and
inc
push
mov
push
dec
add
cmpsb
mov
cmp
leave
jmp
sbb
les
sbb
repz
inc
push
fdivr
jo
fdivl
xor
repz
popf
and
sub
mov
out
icebp
dec
stc
xchg
insl
insl
cltd
cltd
iret
testl
shlb
pop
push
pop
mov
mov
ds
in
hlt
pusha
pop
cmp
pop
sbb
add
outsl
add
mov
jb
xor
sbbl
stc
add
xlat
dec
inc
icebp
fs
sbb
jg
xchg
stos
test
fmull
pop
cld
out
push
push
shll
lret
in
jae
in
cli
dec
pop
dec
pop
ja
mov
mov
je
xor
ficompl
xchg
imul
aaa
je
cmp
imul
mov
push
add
pusha
jecxz
in
mov
or
cmpsb
outsb
jae
and
pop
daa
loope
dec
fisttpl
into
mov
test
sub
mov
sbb
mov
mov
lods
test
out
cli
sbb
les
mov
das
push
jp
add
inc
movsl
movsl
sub
ja
pop
jo
or
pushf
fs
cli
out
push
xchg
ficomps
xchg
stos
mov
cmpsl
imul
cmp
xor
js
xor
gs
jg
lea
jnp
mov
test
dec
jp
inc
mov
loopne
pop
outsb
xchg
ret
mov
lods
fsubrp
or
jae
mov
push
push
ret
xorb
movsb
mov
mov
stc
testb
adc
jecxz
or
lret
adc
cld
data16
mov
loop
test
ffreep
cmovne
cltd
jns
int
or
mov
xor
dec
sti
iret
add
sti
stc
and
xchg
jg
out
bound
sbb
cmc
scas
stc
pusha
aam
outsb
ds
lock
jge
add
sub
mov
push
outsb
xchg
mov
adc
jnp
adcb
xor
mov
divl
sbb
push
push
imul
mov
shll
cmpsb
movsb
push
data16
jg
clc
fldl
stos
or
inc
cmp
push
ja
adcb
imul
mov
push
mov
xchg
andl
pop
ja
mov
adc
push
test
xor
or
aaa
std
cli
cld
in
rclb
aaa
inc
push
into
insl
sub
cmpsl
adc
sbb
add
sub
or
jmp
loope
push
xchg
pushf
jle
insl
mov
inc
fisubrl
cmp
xchg
lahf
xchg
push
mov
movb
jmp
seto
in
sub
shll
mov
out
pushf
pop
inc
mov
and
sbb
ja
push
je
mov
xor
ret
push
inc
jmp
mov
xchg
movsb
sahf
in
popa
dec
or
mov
xor
mov
pop
icebp
or
imul
rep
or
shlb
xchg
xchg
mov
pop
cld
lods
or
dec
mov
fs
js
sti
cmp
testl
mov
std
lock
jne
adc
jne
in
loopne
bound
int
popa
fidivl
mov
cmp
mov
adc
add
inc
xor
outsl
cs
int3
adc
xor
and
push
push
fildll
cmpb
lret
jbe
cmc
in
psubq
iret
sahf
outsb
pushf
push
in
repz
sub
bound
repnz
inc
add
mov
push
movsb
fs
cmp
leave
and
enter
xchg
popa
dec
pusha
add
int3
cltd
xlat
pop
sub
mov
sub
cmp
fsub
out
lea
cltd
popf
push
adc
out
and
mov
add
cmc
mulb
loope
push
ja
rolb
fcmovbe
mov
movsl
pop
sbb
fsubrl
jb
mov
popa
or
xor
cmp
clc
mov
in
cltd
leave
std
push
xchg
add
loop
notb
inc
cmpsl
pop
xchg
inc
sub
divl
lock
lcall
xchg
mov
cld
mov
mov
int
xchg
push
subb
xor
push
outsb
insb
test
pop
hlt
int3
fisubs
mov
or
push
call
sti
push
pop
in
sti
and
adc
add
inc
adc
clc
test
icebp
xor
sbb
inc
dec
movsl
and
out
inc
sub
xchg
enter
sub
or
push
pusha
cmpsl
pop
in
lret
aam
xchg
xchg
sbb
dec
sub
jae
xchg
mov
xchg
and
es
stos
jns
and
rcll
cmpsl
push
ret
pop
xor
out
mov
sbb
dec
repnz
je
into
nop
jg
shlb
lret
pop
sbb
jp
outsb
ja
nop
cwtl
mov
call
lret
popf
add
rcll
sbb
mov
lds
mov
daa
add
jno
adc
jb
jno
bound
lods
dec
cwtl
ljmp
dec
int3
int
dec
mov
xchg
gs
lahf
xchg
sub
and
sbb
stos
and
jg
fucomi
ficompl
adc
adc
movb
jmp
sub
out
jbe
cmpsb
pop
bound
jp
popf
rorl
pop
shlb
xchg
mov
sbb
sahf
loopne
int
jecxz
adc
loopne
mov
stos
ja
in
ja
or
mov
loopne
filds
inc
push
jne
xlat
pop
pop
mov
inc
jge
testl
push
xchg
mov
movsb
aas
movsl
push
or
fcoml
mov
adc
into
popa
adc
mov
mov
mov
mov
adc
jae
push
inc
push
push
testl
cmpsb
pop
mov
mov
fdivs
xchg
stos
arpl
jg
cmp
dec
mov
mov
imul
cmpsl
fists
adc
push
lods
push
inc
repz
out
xor
fcmovb
pop
xchg
out
jo
mov
cmp
xor
lret
dec
adc
movsb
inc
cmp
cld
pushf
or
push
and
aad
or
jne
popa
and
in
xor
or
push
iret
loop
push
cli
out
push
mov
or
data16
sub
sbb
out
les
jnp
pop
aam
or
lcall
push
nopl
pop
enter
cmpsb
xchg
xchg
out
jecxz
cmp
pop
sbb
test
jbe
adc
insb
outsl
inc
bound
pop
arpl
imul
pop
out
cmc
movsl
int
cmp
jae
mov
in
push
xchg
pop
ljmp
inc
xor
sti
filds
pusha
pop
mov
push
push
fisubs
pop
xor
lods
mov
sbb
cmc
mov
call
leave
xor
lahf
enter
jns
jecxz
jno
dec
jp
or
jae
cmpb
mov
sti
aaa
fstpl
mov
std
xchg
mov
sub
fs
jo
fsubs
fmulp
push
mov
dec
push
fs
andb
cs
fnstcw
sub
lods
es
push
pusha
fistl
add
xchg
jno
inc
sahf
add
pushf
mov
dec
dec
pop
and
adc
dec
and
mov
cmp
loopne
je
cmpl
ljmp
jge
std
mov
inc
and
dec
mov
test
jecxz
cmp
mov
push
sbb
sbb
int3
loopne
xchg
mov
or
insl
inc
lret
mov
ret
cmp
sahf
jne
and
sub
fdivl
pop
clc
jle
cmc
ljmp
and
mov
mov
test
aaa
shlb
arpl
insl
push
xor
or
mov
call
xor
shlb
jb
mov
mov
pop
cld
js
jo
mov
inc
pop
pop
shrl
jae
push
jnp
fwait
pop
cmp
dec
lock
sbb
inc
xor
add
xor
push
or
push
jo
data16
or
roll
clc
icebp
mov
les
pop
add
adc
push
popa
mov
int
jp
mov
lds
loopne
les
add
dec
sbb
inc
rclb
pop
ljmp
shlb
cmp
test
shlb
dec
test
xchg
in
int
aam
add
add
adc
inc
cmp
and
or
hlt
repnz
inc
scas
dec
and
mov
xchg
arpl
sarb
inc
sbb
jnp
shlb
loopne
popf
lahf
loope
mov
xor
out
es
inc
cmp
dec
cmpl
or
sub
rcll
adc
add
fsubrs
add
sub
mov
push
arpl
or
xor
js
and
inc
adc
dec
mov
mov
mov
sbb
mov
mov
add
repz
mov
adc
ja
push
scas
outsl
sbb
out
andl
xor
mov
xor
xchg
fwait
mov
rcrl
sbb
lds
ja
arpl
or
mov
scas
icebp
lret
movlps
push
sub
inc
jb
out
pop
addr16
jae
adc
dec
inc
sub
push
fnstsw
fsts
shr
xchg
cli
out
push
out
sbb
xchg
gs
pusha
jnp
push
lods
jnp
xchg
fnstsw
add
dec
adc
loop
xor
daa
std
aad
aaa
in
sub
jae
inc
xor
pop
ret
jecxz
lods
lds
flds
push
sub
push
inc
addr16
fsts
rorb
jp
ror
outsl
sbbl
mov
lods
mov
cli
mov
mov
pop
sbb
and
icebp
and
xchg
sbb
xor
popf
movsb
jb,pn
nop
imulb
cli
fisubl
lret
int
xchg
xchg
xor
xchg
scas
aas
imul
shlb
lods
mov
rcl
and
pop
mov
pop
jnp
sub
lfs
add
xor
push
les
loop
pop
repnz
mov
and
push
mov
pop
xchg
push
mov
addb
sbb
pop
mov
xlat
cmpsb
dec
sahf
das
add
jbe
xchg
fld
mov
mov
aas
shlb
in
lods
icebp
cmpsb
or
sub
pusha
jne
mov
cmp
fiaddl
and
xor
push
fiadds
pop
adc
lock
jmp
jb
push
mov
sub
call
and
mov
les
leave
xor
aad
insb
stc
test
cmp
inc
mov
or
pop
sbb
push
insb
adc
jo
vdivpd
pop
jp
push
fisubrl
xchg
mov
lret
popf
test
push
push
sub
pop
dec
fwait
mov
imul
aas
add
xor
stos
and
ljmp
jne
sub
jmp
and
das
mov
out
lea
fld
add
push
das
mov
divb
test
icebp
mov
xchg
xchg
cmp
imul
sbb
sbb
mov
sbb
aad
jmp
mov
mov
mov
aas
out
aas
cmp
cltd
lcall
lcall
orb
outsl
mov
gs
mov
inc
mov
mov
shrb
xchg
mov
pop
xchg
adc
mov
add
or
sbb
and
dec
push
xchg
mov
call
mov
out
add
sbb
dec
mov
push
xchg
or
pop
pop
sub
mov
dec
aam
imul
dec
lcall
fsubrl
cmp
or
xor
mov
push
aas
sbbb
mov
push
int3
xlat
enter
test
mov
paddq
mov
push
rcll
jmp
shl
out
subl
stos
pushf
lea
out
movsb
fstpl
pushf
adc
adc
pushf
loope
jecxz
daa
xor
repz
lahf
adc
test
cwtl
out
push
jge
das
adc
mov
scas
ds
out
into
out
in
add
lock
ret
inc
xchg
rcrb
mov
icebp
js
push
jbe
cmp
aam
fsubrl
jnp
sub
push
pop
adc
xchg
loop
mov
mov
aam
sub
test
cmpsl
pop
push
sbb
lods
pop
or
data16
adc
rcl
roll
ljmp
jge
imul
xor
test
pop
lods
xor
adc
mov
call
ds
inc
mov
clc
push
add
ljmp
adc
jg
xchg
push
ficoml
xchg
sub
fwait
or
mov
imul
inc
test
sub
aas
xchg
adc
mov
fcomi
popa
pop
add
push
rorl
adc
dec
mov
pop
mov
xor
mov
lahf
inc
lock
push
xlat
jl
int
mov
sbb
test
scas
dec
jmp
mov
pop
jmp
cmp
cwtl
sbb
arpl
sti
pop
xor
in
loopne
push
popf
ds
out
pop
push
xchg
pushf
in
adc
inc
fiadds
fisttps
test
shrl
inc
mov
lock
outsl
mov
lods
sbb
xor
fisubrs
inc
and
insb
pop
nop
bound
push
imul
push
imul
lcall
jno
ror
push
cli
dec
gs
sbb
or
es
inc
adc
shll
xchg
sub
mov
mov
jae
cmp
jecxz
and
out
pop
dec
roll
popa
pop
rcl
icebp
leave
fisubl
and
mov
xchg
jno
popf
sub
cmp
ljmp
push
jns
pop
xchg
sub
or
or
sub
pop
nop
lods
or
notb
test
dec
xor
xchg
add
cwtl
imul
fdiv
pusha
enter
pop
push
int3
out
inc
jns
dec
clc
pusha
shrb
pop
and
test
call
dec
ss
push
call
fildl
popf
mov
lret
jmp
mov
lcall
push
push
rolb
push
mov
sbb
fs
sub
push
jb
outsl
loope
repnz
dec
nop
lea
lcall
loope
xlat
ja
or
pushw
insl
lea
and
xor
push
pop
jo
jecxz
ss
mov
mov
and
dec
adc
mov
mov
xchg
out
or
pop
xor
sahf
sahf
sub
in
ds
imul
add
iret
sbb
loop
iret
pop
test
into
jbe
scas
sbb
jns
and
jmp
add
add
lahf
sbb
inc
mov
call
xchg
scas
orb
stc
in
in
xchg
add
jb
das
or
lahf
xchg
inc
mov
xorb
push
shlb
inc
mov
fmul
out
into
xor
add
dec
inc
movsl
xor
mov
hlt
iret
loop
sub
iret
mov
jnp
pop
pop
cmp
xchg
mov
fldcw
inc
mov
xor
jg
push
scas
loop
ds
out
popa
out
les
pop
rorb
pop
and
mov
testl
loop
dec
xor
xchg
push
notb
dec
xchg
nop
mov
aad
mov
xchg
jmp
mov
adc
pop
mov
push
clc
xlat
and
popf
dec
add
xor
and
jmp
movsb
gs
stos
lret
rcrb
xor
push
push
mov
mov
cmp
pop
dec
inc
inc
shl
xchg
dec
fsubrl
cmp
jp
and
lds
cmc
cltd
sbb
jle
notl
testl
jae
or
fs
cmpsl
lea
sub
outsl
test
sbb
mov
mov
mov
rcrl
mov
bound
sbb
mov
repnz
xchg
jno
dec
adc
and
lock
std
outsb
xchg
mov
jne
xor
fdivrs
rcrb
mov
lea
and
dec
push
pop
mov
xor
sub
xor
push
leave
iret
cmpsl
or
pop
xchg
mov
pop
repz
adc
test
xchg
mov
lar
gs
pop
sbb
xor
mov
xchg
je
mov
ficoms
xchg
xchg
int
ja
sbb
aaa
bound
pop
in
add
fisubrs
inc
add
xor
daa
jno
les
gs
out
dec
lods
leave
shrl
jp
mov
cmpsl
jmp
xchg
mov
mov
cwtl
mov
scas
cmpsb
mov
out
outsl
idivb
mov
xrelease
movsb
adc
inc
scas
xorb
loop
movsl
cmpsl
icebp
cli
xchg
lods
bound
insb
loopne
fcomps
movl
sbb
in
loop
mov
lds
daa
movsb
fcompl
jmp
aaa
xor
les
mov
mov
out
leave
lcall
nopl
roll
gs
mov
push
jnp
inc
pusha
dec
xchg
and
lods
sub
xor
mov
std
int3
sub
addr16
call
xor
shrl
xchg
add
insl
jo
sbb
aas
adc
xchg
pusha
cmp
fdivs
or
mov
add
xor
xchg
insb
stos
inc
inc
nop
xor
add
dec
mov
fistpll
fistl
push
in
dec
out
fimuls
inc
jne
movsl
test
xchg
fisubl
pop
pop
jb
cli
pop
adc
adc
cltd
adc
test
je
pushf
push
mov
adc
mov
incl
inc
arpl
cmpsl
ljmp
and
ret
leave
xor
jnp
inc
dec
ficoms
cmc
push
sbb
and
adc
scas
jmp
addr16
xlat
lahf
mov
mov
loop
stos
xor
int3
les
clc
in
sbb
mov
int
push
aas
adc
xlat
movsl
inc
mov
pop
xlat
inc
push
sub
int3
sub
xchg
and
inc
xor
lret
push
mov
popa
jl
cmp
mov
mov
jo
out
lds
shrl
inc
shlb
inc
int3
xor
sbb
sub
or
adc
mov
jno
loop
iret
fimuls
push
jl
and
arpl
sahf
sbb
mov
stos
cmpsb
pop
inc
adcl
pusha
cmc
stos
jle
leave
cld
adc
and
push
daa
cmpsb
jecxz
inc
aad
inc
pop
lea
out
cmp
lods
mov
lods
in
das
mov
shrl
xor
cmp
and
inc
scas
leave
jp
cli
jmp
rcr
outsl
loop
dec
jnp
test
xchg
jmp
mov
dec
pop
mov
cmp
xor
adc
dec
leave
xchg
xchg
add
repnz
leave
icebp
stos
loop
cld
lds
xor
pop
aaa
mov
fbstp
or
fs
clc
cs
loop
call
data16
mov
xchg
outsl
sub
iret
loopne
stos
stos
repnz
mov
push
daa
inc
call
sub
pop
sub
jnp
push
dec
push
xor
and
jo
cwtl
mov
xchg
and
add
add
inc
xchg
loop
dec
pop
jge
adc
gs
or
inc
add
adc
mov
lods
ja
jae
outsl
xor
mov
add
pop
and
cmpb
add
in
fsts
adc
imull
roll
cmp
and
out
mov
movb
cli
cmc
xchg
xlat
pop
xchg
pop
push
pop
dec
push
jae
mov
lea
cli
scas
mov
push
mov
jnp
jle
add
shlb
mov
push
fidivl
pop
xchg
cmp
adc
loopne
notb
jge
dec
cmpsl
lock
sbb
sub
stos
js
loope,pn
fstp
movsl
aam
mov
inc
xor
daa
jg
dec
pop
sbb
pop
xchg
jecxz,pn
jb
dec
shlb
push
mov
bound
inc
pop
cli
int
mov
mov
mov
inc
shlb
sbb
loopne
pop
xchg
scas
push
lret
mov
data16
jnp
mov
inc
jne
push
sar
cwtl
or
popa
jp
add
lret
dec
jne
enter
pusha
hlt
and
jnp
scas
xchg
dec
xchg
jle
pop
adc
fwait
aas
inc
pop
jecxz
pop
push
sub
xchg
pop
mov
mov
dec
add
into
or
pop
insb
adc
bound
repnz
xchg
or
and
push
dec
jge
cmp
push
repnz
cmp
js
pop
mov
sbb
mov
sbb
pop
pop
stos
dec
imul
addr16
fwait
fwait
xor
sbb
lea
and
mov
mov
and
cmpsl
fildl
push
lds
scas
popf
inc
xlat
mov
cltd
orl
add
out
cmp
in
popf
mov
test
cmpsl
lret
lea
inc
push
es
notb
aas
ficoms
sub
lret
cmp
repnz
sbbl
xor
add
mov
mov
push
pusha
jg
loope
test
fstl
cld
ret
aas
orl
add
cld
es
pushf
les
adc
lcall
sub
mov
fsub
inc
sub
das
inc
fisttpll
or
ret
ss
loope
popf
cmpsb
xchg
pop
inc
mov
fdiv
cmc
mov
lret
xchg
pushf
mov
mov
and
cmp
mov
fs
jmp
insl
lret
sbb
mov
push
stos
popf
mov
mov
addr16
es
inc
jnp
push
shll
gs
sbbb
fbld
push
loope
jmp
add
ja
push
dec
stc
int
fdivrs
popf
cli
jmp
imul
je
pop
xchg
mov
lcall
pop
adc
xchg
xor
mov
inc
rcrb
aas
add
mov
pop
icebp
lods
pop
pusha
adc
dec
std
push
xchg
inc
sbb
repnz
filds
push
std
push
add
sbb
xchg
xchg
and
scas
in
fmuls
cmp
imul
xor
pop
int3
lahf
sub
scas
jno
inc
jbe
sbb
fdivrl
push
pop
test
inc
sbb
pop
int
mov
push
imul
pop
xchg
or
int
das
fidivl
popa
push
inc
mov
cmpl
jp
sbb
scas
push
fisttpl
stc
push
dec
pop
or
mov
lahf
nop
ss
cltd
fcmovb
jo
add
loop
int
insl
gs
sub
and
or
mov
mov
push
shll
or
xorb
or
or
pushf
sub
push
push
and
sub
fisttps
fisttpl
pop
dec
or
das
lods
rclb
add
add
mov
loop
lods
mov
gs
push
pop
mov
xchg
xchg
mov
pop
addb
pusha
mov
lods
out
add
cmpsb
xchg
adc
jge
ja
addb
jg
insl
shlb
pop
mov
lock
int
pop
ja
mov
push
fisubl
add
nop
inc
test
pop
mov
xchg
or
push
or
gs
xor
rcll
insl
or
mov
out
divl
mov
xor
xchg
xchg
ror
push
sbb
sub
mov
mov
icebp
jno
dec
xchg
flds
lret
xchg
dec
adcb
stos
jbe
dec
ret
fwait
aad
jne
mov
mov
add
out
pushf
push
push
stos
pop
cld
push
dec
bound
loopne
xchg
ds
inc
imul
xchg
ret
popa
cmp
cmp
aaa
lds
add
push
cltd
arpl
fsubrs
adc
jge
jmp
cli
daa
into
jge
leave
cli
cld
aad
sbb
fdivl
inc
add
sub
cmpsl
cs
sbb
mov
mov
jo
lock
les
xchg
xorl
imul
loope
or
xchg
cld
add
bound
add
sub
mov
sbb
loop
xchg
sbb
nop
inc
push
jo
jecxz
nop
popf
adc
or
jmp
mov
aam
arpl
sub
ret
cmp
test
icebp
jo
inc
ret
sub
nop
or
mov
ds
fidivrs
or
enter
mov
xchg
push
js
fmulp
cli
test
in
mov
rcrl
xor
mov
xor
dec
sub
mov
mov
mov
xchg
push
mov
sbb
lods
into
cld
mov
mov
xchg
pop
add
adc
cmpsb
ja
jmp
fidivrl
ja
jge
or
lds
or
and
adc
or
fsubp
jb
ja
mov
push
pop
pop
jne
xchg
cmpb
stos
arpl
push
dec
inc
push
mov
pushf
lret
movsb
lret
push
mov
jmp
xor
mov
rcrb
fdivp
jl
xor
lahf
sub
imul
jge
hlt
jns
inc
into
or
mov
mov
inc
pop
jl
insb
pop
mov
les
loop
sub
sub
pop
mov
jge
scas
ljmp
xchg
push
pushf
clc
repnz
repz
mov
fmul
sub
inc
mov
fsts
sub
inc
mov
das
xchg
iret
sarb
jl
les
mov
mov
mov
or
out
mov
les
cmp
repz
aad
add
insb
xchg
sbb
fldl
xchg
mov
je
rorb
jae
jne
btr
push
sub
pop
in
sbb
pop
icebp
mov
cmpsl
or
fisubrl
movsb
lahf
sub
cmp
xor
inc
dec
mov
add
pop
push
cmpsb
push
jnp
xchg
or
inc
push
xchg
fwait
xor
out
sub
ret
xchg
or
jl
and
ud1
scas
mov
jnp
adc
subl
jne
leave
jbe
sbb
mov
lret
inc
outsl
and
scas
sub
std
insb
mov
test
jl
pop
subl
ja
icebp
rolb
cmp
mov
cld
mov
fiadds
repz
cmc
shlb
addr16
sbb
mov
dec
xchg
aas
pop
dec
mov
ja
mov
daa
mov
pop
addr16
or
pop
movsb
cmp
adc
daa
shr
ds
in
inc
add
les
stc
je
xchg
adc
add
sbb
fists
pop
xor
mov
xor
loope
inc
lods
in
lret
sub
adc
fwait
mov
mov
xchg
xchg
cltd
loope
jg
adc
out
mov
incb
xor
adc
adc
push
outsb
popa
insl
nop
inc
cmp
mov
stc
dec
ds
mov
scas
stos
popf
fldt
cwtl
out
out
inc
clc
ret
shrl
mov
lods
pop
notb
push
fdivl
fstpl
mov
das
fdivrl
and
pop
hlt
stc
es
movsl
stos
daa
and
std
inc
mov
or
std
jae
mov
or
pop
insb
inc
push
push
mov
lcall
sub
pop
push
ds
push
cmp
push
add
mov
out
mov
cmp
xchg
ret
dec
cmpsl
out
divl
mov
sub
test
data16
cmp
add
dec
mov
xchg
xchg
jl
push
push
dec
xchg
push
and
lock
in
cmp
in
ret
mov
xor
cmp
jecxz
xor
xor
loopne
inc
sub
es
lea
scas
pop
jge
add
xor
in
mov
push
adc
out
fiaddl
cwtl
fdivl
insb
sub
cmp
mov
push
inc
mov
push
movb
testb
and
sahf
pop
fisttps
add
aam
jno
or
sbb
repnz
xchg
dec
xlat
or
fildl
loop
add
fwait
xchg
mulps
adc
sub
aam
jno
repz
sub
lret
fstpl
rep
mov
ljmp
mov
jp
lods
pop
and
jg
es
xchg
jns
cltd
insl
ja
xor
std
loop
mov
out
mov
repz
lods
push
jne
ret
mov
jecxz
mov
mov
push
pop
jmp
xchg
mov
xchg
jg
pop
sub
ret
add
daa
mov
loope
sbb
mov
lahf
cli
inc
into
rcl
xchg
outsl
xchg
dec
push
test
sti
push
mov
sub
mov
insb
push
hlt
bound
rolb
fimull
scas
or
cmc
shlb
pop
push
push
jl
jne
cmp
negb
dec
jle
pop
imul
or
popw
cmp
pop
mov
xlat
dec
pusha
andb
dec
mov
mov
xor
pop
mov
scas
mov
fcmovu
inc
adc
enter
or
and
outsb
cwtl
mov
adc
fsts
sbb
and
fxch
adc
jge
lahf
jecxz
add
inc
mov
mov
cmpsl
or
mov
ja
cmp
sub
loop
imul
int
imul
cmc
jbe
fsubrl
daa
test
fadd
xorb
negb
and
xor
dec
cwtl
and
ret
popf
in
nop
lret
inc
xlat
shlb
ret
in
mov
cmpsl
stos
shlb
adcl
cli
cli
mov
dec
int3
xor
cmc
stos
and
popf
adc
int
orl
aaa
fsubs
out
jbe
gs
jne
int
xlat
pop
adc
jae
shrb
orb
adc
sbb
sub
stos
pop
lock
ss
mov
jl
sbb
jo
sahf
sbb
adc
mov
arpl
push
movsb
addr16
dec
cmp
jg
cmp
xchg
jg
dec
cmp
les
inc
test
jg
repz
adc
or
push
ja
mov
ja
mov
sahf
mov
push
insb
xchg
cmp
adc
js
jae
sbb
pop
inc
push
jg
sbb
adcb
nop
sbb
movsl
mov
inc
imul
movsb
inc
adc
fsubr
jb
cld
ficoml
adc
push
push
dec
data16
push
clc
mov
xchg
lea
movsb
in
dec
jb
xlat
lret
into
and
pusha
jecxz
enter
out
les
imul
ret
pop
add
jbe
sti
sbb
in
or
lahf
sbbl
xchg
cmpsl
and
hlt
nop
mov
and
sbb
dec
rcll
or
sub
addr16
mov
mov
and
out
dec
lock
push
lahf
jl
jno
or
ret
adc
mov
add
jne
lahf
push
frstor
pop
mov
repnz
arpl
outsl
xchg
hlt
repz
or
pop
repz
pop
aas
jnp
xor
or
lret
fadd
outsl
shll
sub
mov
and
loop
dec
loop
jmp
lret
mov
push
frstor
pop
or
cli
ret
mov
mov
pop
icebp
jmp
pop
push
pop
cmc
sbb
adc
jns
test
test
je
scas
leave
xchg
lcall
push
jns
les
stos
popa
jno
jp
push
jo
icebp
xchg
jbe
adc
imul
sbb
cmp
push
cmpsl
jb
rcrb
xor
xchg
add
pop
ret
mov
outsb
cmp
push
imul
out
sbb
mov
rcll
fsubrl
jecxz
add
int
into
fimull
push
mov
pushl
aaa
jmp
push
mov
sub
mov
jle
rclb
test
lret
sub
and
stos
js
in
jnp
mov
test
js
sub
icebp
mov
pop
mull
jb
jge
imul
adc
jmp
repz
push
or
out
xchg
popa
add
mov
outsb
xchg
arpl
sbb
mov
push
dec
sahf
push
push
cld
pop
das
icebp
mov
mov
stc
lea
call
out
sbb
pop
pop
sub
xchg
and
push
pop
and
jnp
cmp
ret
movsb
sbb
popf
adc
jp
push
and
les
inc
mov
cmp
mov
dec
rol
fdivrl
add
scas
test
or
lods
jno
adc
mov
sub
push
fcom
xchg
stos
mov
adc
jno
mov
shll
cmp
xchg
lar
int3
pop
dec
ffreep
mov
add
ficomps
imul
sub
adc
arpl
les
pop
adc
fwait
mov
hlt
and
leave
mov
xor
ret
jg
fxch
sti
loope
mov
outsb
scas
add
imul
icebp
int3
testl
push
push
lcall
test
pop
imul
mov
xlat
mov
push
jae
loope
outsl
lea
add
das
sbb
mov
movsb
mov
hlt
sar
shlb
xchg
ror
leave
and
sbb
dec
jl
sarl
adc
mov
adc
pop
punpckhwd
jbe
pop
pop
in
xchg
repnz
sbb
sbb
movhps
sbb
je
jge
inc
out
shlb
xor
lcallw
dec
xor
pop
inc
in
dec
leave
jmp
ss
loopne
mov
movsb
lods
adc
lret
stos
dec
je
into
xchg
lahf
ret
int3
scas
roll
jecxz
jecxz
mov
push
sbb
push
sahf
xor
pop
sub
cmpsb
inc
cwtl
imul
stc
xchg
mov
jns
scas
mov
inc
sbb
sbb
test
sbb
pop
pop
dec
jnp
lret
sbb
mov
sbb
pop
sar
mov
ss
outsl
mov
out
cmp
das
sarl
jp
sarb
push
sub
push
ljmp
pop
or
push
fidivl
sbb
rcll
imul
xchg
add
xorb
xchg
out
imul
sub
addr16
iret
mov
cmp
mov
xchg
cs
icebp
into
lcall
das
orl
dec
ss
push
or
push
jne
or
or
les
fstpl
cs
jnp
or
push
into
ret
jl
sbb
test
xor
and
nop
push
dec
into
or
bnd
into
stos
mov
inc
rolb
cmpsl
xor
std
add
xchg
imul
adc
push
cmp
dec
scas
jmp
or
sub
test
shrl
lods
fs
imull
xlat
clc
and
in
ljmp
jae
lock
xchg
in
cmp
jae
lcall
outsl
fucomi
push
dec
adc
cmp
jl
xchg
jg
mov
jmp
sahf
xor
daa
test
mov
push
movsb
sub
daa
jo
mov
adc
add
xchg
sub
leave
fimull
ja
sbb
sub
push
jg
and
popf
xor
scas
add
fnsave
lds
pop
cmp
sub
fpatan
mov
inc
jb
mov
aaa
dec
mov
mov
inc
fbld
imul
push
cmp
push
push
mov
mov
mov
sub
stos
and
push
xor
js
pop
inc
mov
inc
xchg
ret
dec
cmpb
mov
sbb
pop
ss
jmp
ss
xchg
ret
cltd
cmc
and
xchg
jns
jl
loope
imul
mov
add
mov
mov
sub
mov
fnstsw
movhlps
es
cmp
jg
adc
shrb
icebp
sbb
or
ljmp
call
aaa
ret
addr16
push
scas
fwait
mov
jns
stos
and
cmp
mov
lret
test
dec
add
jecxz
jbe
xchg
and
mov
fxch
pop
aaa
mov
pop
fildl
mov
xor
mov
int
lcall
in
into
sbbl
mov
sbb
ss
insb
mov
jl
bound
adc
addr16
sbb
ficoml
in
sub
cmp
xor
jbe
rcll
jo
sub
es
dec
push
xchg
pop
cmc
add
shll
sahf
test
in
sub
adcl
cmpsb
ret
push
bound
mov
mov
lahf
xor
dec
lods
cmp
ds
mov
es
and
je
les
mov
outsl
sbb
outsb
dec
mov
and
aas
pusha
stos
jmp
rorb
cmp
scas
push
mov
les
scas
sub
jae
test
xchg
pop
pop
mov
dec
push
xchg
pusha
fimuls
pop
daa
add
sub
mov
stc
and
dec
mov
push
jge
xchg
ja
in
ljmp
aaa
fnstsw
fistpl
in
cli
push
jae
dec
xchg
pushf
gs
jge
pop
add
jae
mov
lahf
fs
iret
or
or
cmp
outsl
sub
dec
or
cmp
in
push
lahf
lods
sub
jecxz
lock
jns
or
pop
sbbb
mov
jns
cmp
lret
sub
roll
push
sub
imul
jp
gs
cmp
xchg
mov
decb
xchg
dec
pushf
xlat
xor
adc
cmc
dec
add
adc
dec
repz
mov
outsb
test
mov
pop
pop
cmp
pop
jnp
dec
sbb
mov
cmp
aad
xor
fistpl
movsl
aad
pop
mov
mov
add
les
fldenv
add
xchg
cs
xchg
xor
sub
or
jns
das
jb
and
in
xchg
jae
xchg
push
pop
stos
int
leave
add
push
xchg
pushw
out
inc
pop
sbb
int3
jmp
or
in
mov
gs
pop
cmp
jl
pop
js
rcll
mov
inc
push
fwait
insl
mov
pop
int3
scas
jne
fadd
add
mov
mov
pop
dec
and
xor
fmuls
fwait
inc
and
loop
cs
and
pop
test
out
pop
cmpl
jae
and
pop
test
loopne
sub
mov
push
pop
ror
mov
inc
test
push
adc
xor
add
or
fildll
cmp
push
adc
int3
loopne
pop
xchg
or
sbb
push
jl
enter
push
loopne
push
mov
roll
jae
xor
push
xor
std
loope
xor
xchg
js
hlt
out
shll
pop
mov
int
lret
lahf
cmp
jle
add
je
add
imul
lea
inc
fwait
mov
pusha
cmpsb
pop
adc
jbe
imul
mov
cmc
xor
jmp
gs
int
out
adc
or
mov
loopne
jb
and
dec
push
nop
cwtl
dec
mov
shl
test
pop
bsr
or
mov
mov
lods
pop
and
or
std
mov
loopne
fs
scas
lahf
clc
push
stos
and
ja
add
and
push
ficompl
pop
rcrl
mov
and
push
push
add
pop
es
xchg
adc
popa
mov
mov
mov
popf
fdivrp
jp
sbb
mov
in
negl
lcall
or
and
mov
cmpsb
sbb
lock
js
sbb
and
xchg
inc
push
orb
fdivs
cmp
dec
xor
dec
hlt
inc
cmp
mov
inc
mov
inc
stc
mov
in
aaa
adc
sub
xlat
into
in
aam
xchg
add
jo
outsb
cli
cltd
ljmp
mov
xchg
adc
jae
sub
int3
and
outsb
test
or
imul
rcr
add
repnz
dec
lock
cld
gs
xchg
pusha
xor
xchg
out
mov
es
aad
push
pop
xor
gs
jb
dec
ret
sub
and
mov
jmp
jae
mov
mov
lea
mov
cld
in
jge
mov
xchg
mov
ljmp
pop
add
jae
fsubrs
sub
sbb
out
pop
push
in
xchg
orb
mov
adc
ss
iret
repnz
mov
xchg
jne
xchg
jae
lcall
mov
or
jb
sub
sbb
out
cltd
popf
pop
fistpll
mov
xor
mov
mov
cld
push
sbb
cmpsb
adc
leave
repnz
cmp
cwtl
aaa
cmpsl
lret
test
movsb
fldl
mov
test
test
negb
or
jne
mov
enter
lods
xor
lret
std
xchg
cmp
cwtl
std
insb
mov
cmp
jmp
nop
push
lret
jmp
fimull
sub
sbb
mov
test
xlat
adc
add
aas
add
aas
xchg
mov
stos
xchg
sahf
xchg
jmp
cli
fnstenv
cmp
xor
in
repnz
addb
pop
gs
rclb
int3
xchg
cmpb
xor
cli
rol
pop
or
lds
mov
popa
es
clc
out
sub
rorl
xor
push
out
incl
jae
into
xor
or
cmpsb
mov
hlt
stos
xor
mov
outsb
loope
sub
cmpl
arpl
cmp
push
cmpsb
sub
push
cwtl
cld
add
xchg
mov
push
xor
add
insb
in
mov
inc
cli
fistps
and
lret
rcrl
push
xor
sbb
cmp
mov
lret
inc
popa
xchg
mov
sub
std
pop
int
push
dec
shrl
nop
push
push
adc
aad
ja
dec
cmpsb
mov
add
xlat
in
jl
test
mov
icebp
into
cmc
fldcw
jp
fidivs
xor
mov
notb
xor
xchg
shlb
cli
push
xchg
jp
jb
cmpsb
test
dec
xor
add
add
mov
add
push
in
push
pop
mov
into
cli
lds
lahf
and
and
bound
nop
lods
arpl
nop
loope,pt
push
mov
dec
cmpsw
and
aam
cmp
sti
push
cmpsl
push
adc
pusha
cmp
jne
inc
popf
xor
mov
nop
cli
das
xchg
cmp
add
addr16
cmp
cmp
test
push
mov
push
xchg
rcl
push
insl
rolb
cmp
cmpsb
subl
cmc
ret
pop
mov
daa
mov
jge
cmp
mov
int3
aad
push
aaa
xchg
inc
dec
int
fs
repnz
sbb
jmp
bound
in
in
lock
dec
pop
cmp
push
in
lock
test
fidivs
cmpsb
sbb
mov
and
sub
mov
inc
adc
sti
sub
add
out
mov
lods
fldcw
aaa
ret
jns
movsl
xchg
xchg
imul
icebp
dec
push
hlt
arpl
inc
sbb
mov
jl
stc
mov
ss
jl
xchg
loope
out
mov
push
movsb
in
divl
push
adc
or
sbb
mov
add
or
and
mov
dec
icebp
mov
insl
aam
adc
xchg
and
pcmpeqw
adc
daa
loope
mov
adc
xchg
adc
dec
shl
and
xchg
and
xchg
sub
pop
int3
lahf
dec
inc
les
outsl
movsb
mov
xorl
and
and
ret
lret
push
xor
inc
stc
leave
rcll
mov
cltd
rcrb
repz
iret
push
adc
xor
fstpt
jmp
adc
add
out
xchg
outsb
jbe
out
pop
cmp
lcall
push
sbbl
xlat
push
movsl
dec
adcb
inc
add
inc
stc
popa
dec
adc
divb
in
hlt
or
sub
jmp
xor
cmpsb
mov
mov
jo
cwtl
jmp
insb
xor
cld
xorb
add
inc
into
into
adc
test
je
mov
push
in
jecxz
sub
outsb
mov
sarl
and
in
mov
push
xor
cmc
out
xchg
enter
pop
icebp
into
rcl
fmul
shl
fistpl
ret
sub
sar
sahf
ret
repz
std
and
mov
fnstcw
in
call
mov
cmpsl
pushf
rorb
icebp
into
repnz
popaw
add
adcb
push
fwait
add
xchg
add
mov
jno
shlb
dec
pop
loop
pushf
mov
pushf
mov
dec
jmp
dec
sahf
or
in
icebp
scas
movsb
dec
mov
insl
sahf
rolb
js
mov
push
testl
adc
xor
inc
loop
dec
dec
jp
movb
ror
ffree
icebp
aam
inc
rolb
out
movsb
jo
ljmp
xor
xlat
add
xchg
imul
mov
cmp
sub
pop
popf
out
cmpsb
nop
addl
call
cmp
mov
repz
cmp
xlat
fists
sub
fimuls
fldcw
in
xlat
out
sub
cmpsb
xchg
mov
jl
inc
adc
xchg
sbb
mov
cmpsl
aad
or
sahf
xchg
xchg
into
sub
ljmp
pop
nop
jg
mov
mov
or
adc
xor
push
cmpsl
es
mov
adc
mov
daa
rorl
xchg
popf
inc
or
std
jbe
push
xor
adc
lock
mov
add
sbb
mov
cwtl
dec
in
sbb
inc
sub
mov
adc
xor
sub
adc
movsl
and
and
inc
jno
mov
fstpl
aaa
cmpsb
jmp
hlt
jno
daa
loope
or
adc
or
ret
repz
in
jbe
pop
leave
cmp
movsl
cmpl
push
rclb
sbb
add
cmpsb
sub
int3
hlt
or
insb
adc
adc
psubw
call
add
inc
adc
inc
mov
ret
add
hlt
push
and
ss
leave
ss
shrb
or
xor
outsb
sbb
out
in
fsubrl
loopne
jge
outsb
adc
dec
add
adc
adc
in
xchg
mov
or
pop
xor
adc
xor
mov
and
sub
adc
bound
mov
fwait
xchg
daa
enter
outsl
in
pop
push
inc
inc
mov
js
data16
fnstenv
mov
icebp
aad
int
lcall
std
mov
jo
xchg
xchg
mov
mov
repnz
inc
aam
xor
and
fwait
adc
fnstenv
xchg
jb
cmp
dec
and
pop
mov
testl
push
mov
into
test
ret
clc
scas
inc
jbe
cmp
cmp
jle
out
add
jb
lret
movsl
mov
xchg
adc
adc
push
fcmovu
addr16
in
inc
inc
sub
mov
mov
loop
cld
stos
or
sti
or
imul
int3
add
xlat
sub
dec
out
adc
lcall
cmp
outsl
fistps
fidivrl
add
push
mov
pop
mov
and
fldenv
int3
out
mov
xor
lea
stc
das
lods
cmpsb
push
lahf
mov
mov
dec
test
pop
mov
lods
sub
popf
adcl
push
cmpsb
lea
psubusw
fisttps
stos
inc
loop
push
out
pop
iret
dec
daa
scas
repnz
push
fidivl
aad
inc
test
js
addr16
xchg
out
cmp
fisttps
in
push
ret
jecxz
and
pop
xchg
inc
sahf
leave
loop
testl
scas
cmc
rcll
jg
lea
jp
cmp
jge
rclb
or
stc
xchg
lret
mov
subl
sbb
incl
add
mov
sbb
pop
movsb
shll
aam
fidivs
sbb
pop
popf
subl
pop
fstpt
rcll
lret
push
ss
add
negb
lret
clc
sub
xor
and
dec
adc
xchg
or
es
adc
out
mov
test
pop
inc
or
daa
pop
fidivrs
jl
dec
sbb
add
out
stos
stos
fwait
cmp
push
test
cmp
cltd
pop
push
int
mov
dec
sub
push
push
jl
hlt
jg
repz
pop
std
pop
lret
push
pop
popa
test
or
pop
imul
lret
lods
nop
mov
mov
dec
mov
ljmp
movsl
cmp
sti
aam
jb
insl
in
inc
mov
jmp
flds
je
stc
jmp
adc
popf
pop
pop
dec
cmpl
leave
loop
mov
sub
inc
movsl
call
mov
jge
dec
adc
pop
cmc
add
outsb
push
shl
mov
call
jecxz
hlt
in
call
mov
sarl
popf
or
mov
jns
xchg
and
ret
xor
xchg
rorl
outsb
aaa
jg
mov
xchg
shr
lret
push
in
jle
icebp
inc
data16
cmpsl
sub
dec
pusha
decl
les
mov
xchg
repnz
dec
xchg
inc
std
popa
out
jecxz
sbb
pop
or
js
inc
xchg
cld
shll
aaa
fcmovnb
dec
cld
sub
hlt
fcmovb
pop
dec
mov
popf
xchg
sub
push
jb
dec
pop
idivb
mov
cmpsl
cmp
stc
aad
cwtl
dec
push
in
jns
mov
ret
mov
rorl
test
gs
pop
adc
das
rcrl
ftst
test
xor
pop
xor
cs
inc
jns
xrelease
and
popf
and
addr16
into
aam
aam
std
jle
cld
adc
jbe
rcrb
int
ja
or
dec
mov
xor
xchg
adc
jp
jb
insb
cmp
fidivrs
pop
xchg
or
jmp
lahf
xor
scas
jg
xorl
push
mov
jnp
inc
cmp
xchg
add
adcb
pop
pusha
adc
shlb
jnp
arpl
addr16
stos
mov
js
or
imul
jmp
dec
pop
push
movsl
cmp
out
or
mov
cmpsl
ss
dec
mov
jmp
inc
xchg
repz
outsl
inc
xor
insb
inc
push
movsl
mov
aad
jae
rcrl
xchg
cmp
inc
adc
dec
inc
ret
orl
data16
iret
aad
scas
bound
or
lods
rcl
xor
div
xor
mov
pop
cwtl
sub
hlt
push
and
aam
xlat
jmp
add
sti
fs
pop
jnp
dec
cmp
add
dec
fstl
or
insb
sbb
fdivrl
dec
and
mov
pop
or
jg
lods
sbb
mov
subl
pop
cmp
xor
mov
ja
add
aad
pusha
test
insb
stc
iret
loopne
test
xor
cmp
stos
pop
pop
fidivl
out
push
loopne
lret
and
jg
add
lcall
mov
xchg
push
rorl
movsb
push
lock
fldcw
test
aad
imul
mov
fnstcw
gs
pop
stos
std
outsl
cmp
into
cmpsb
in
and
jl
mov
pop
aaa
fcoms
stos
les
cltd
int3
cld
cwtl
and
and
jae
xor
int
into
idiv
outsb
xchg
add
insb
aas
dec
mov
jns
jnp
popf
sub
int
mov
dec
fidivs
inc
cmpsb
insb
pop
repnz
and
cmpsl
jnp
xor
cmpsb
insb
mov
pop
lds
and
sub
mov
or
icebp
sahf
inc
push
divb
movsl
inc
sbb
adc
arpl
in
mov
in
cmp
add
dec
daa
std
and
push
push
jb
cmpb
pop
inc
fcoml
cli
hlt
scas
add
enter
repnz
push
ds
pop
cmp
lock
fiaddl
gs
or
inc
or
fists
movsb
pushf
loope
aas
nop
adc
in
cmp
shrb
and
in
push
inc
sarb
add
push
mov
xor
enter
xchg
ljmp
inc
popa
out
xor
cmpsl
mov
hlt
pop
mov
cmp
iret
mov
call
cmp
shll
imul
mov
enter
sbb
cmp
into
inc
or
fnstsw
push
pusha
into
mov
pushf
mov
fisubs
les
push
sub
sub
cmp
in
inc
add
divl
or
cmp
mov
mov
push
outsb
lock
insb
xchg
push
sbb
or
bswap
or
or
repnz
mov
xchg
pop
push
mov
mov
push
mov
sub
decl
mov
pop
inc
insl
enter
and
xor
xor
movsl
xlat
pop
and
push
movsb
ss
pop
cmp
vfrczps
fwait
mov
fidivrl
lahf
test
js
xlat
cmp
popa
dec
int
jl
xchg
xchg
fiadds
and
jecxz
orl
xor
add
add
add
stc
das
push
mov
out
into
mov
adc
sbb
or
daa
add
insl
mov
dec
jp
mov
imul
dec
xchg
enter
mov
rcll
pop
dec
jl
mov
gs
rcrl
mov
xor
cmp
fsubrl
lea
cld
sahf
mov
mov
pop
mov
repz
and
jo
std
es
inc
cltd
jle
or
xchg
lcall
xorl
les
jbe
push
mov
jo
mov
jbe
and
jl
shll
push
neg
int3
fstpl
add
sbb
aad
bound
sub
dec
aaa
xor
jne
xchg
jmp
fmul
iret
push
outsl
dec
and
shll
jecxz
enter
jnp
mov
sub
scas
jle
pushf
add
sub
xor
into
loope
add
xchg
cmp
fistl
sti
push
and
inc
test
push
push
inc
fs
insb
outsl
fdivl
sbb
lret
pop
pop
in
idiv
adc
into
push
cltd
xlat
sub
enter
lds
jno
push
mov
mov
sbbl
popf
shrb
ja
or
test
mov
imull
mov
and
push
daa
je
mov
sbb
lock
sub
loop,pt
subb
dec
or
or
icebp
popa
sbb
cmc
and
push
dec
jg
pushf
sub
popf
out
lods
or
adc
pushf
add
or
es
pushf
lret
shll
clc
jae
pop
adc
lds
dec
cmp
xor
mov
dec
loope
cmc
push
rorl
jmp
dec
adcb
fdivr
lret
adc
jp
popf
out
imull
fisubl
fsubrs
leave
sbb
mov
jae
test
addr16
mov
cli
dec
push
jecxz
sbb
lret
add
add
es
xchg
das
pop
mov
lods
mov
mov
mov
iret
add
hlt
dec
push
subb
insl
sbb
jle
pop
cld
fcmovu
aaa
mov
and
mov
je
xor
inc
mov
test
lret
cmp
and
jecxz
add
stos
insl
mov
sub
push
adcl
xor
push
jmp
push
je
adc
push
inc
popa
mov
fs
or
ret
stos
sbb
icebp
aaa
in
test
sbb
incl
lret
mov
or
jo
cwtl
cld
mov
repnz
out
or
add
in
dec
icebp
fs
dec
adc
push
dec
aas
xchg
daa
pop
xchg
push
cmp
sub
or
lods
mov
fs
sub
mov
fs
push
test
dec
push
sub
xchg
or
mov
dec
pop
inc
adc
inc
sbb
fidivs
ljmp
out
fs
popa
fadd
shrb
call
aad
mov
cs
aas
arpl
scas
xor
push
cmp
repz
add
cwtl
sahf
cltd
lahf
mov
jnp
mov
sub
filds
mov
gs
or
stos
xor
pusha
shrb
scas
push
adc
xor
adc
adc
sub
and
mov
mov
inc
call
orl
sahf
dec
insb
bound
fwait
push
test
aam
les
jle
and
pop
xchg
cli
jge
and
xchg
loop
js,pt
pop
lods
adc
in
call
ds
das
ds
idivl
or
adc
cmp
lock
and
addl
mov
in
ljmp
push
xchg
pop
pop
pop
cmp
mov
jb
and
mov
xchg
inc
xchg
outsb
fisubl
iret
add
lcall
push
ret
dec
testl
xchg
jp
scas
mov
hlt
and
int3
out
repnz
lgs
mov
mov
loop
or
push
pop
sbb
xchg
cs
arpl
adc
jl
and
jmp
push
xor
fdivrs
into
mov
arpl
jb
push
fs
rolb
lret
dec
call
sbbl
pop
adc
adc
push
aad
mov
pop
ja
leave
xor
pop
andb
push
push
dec
sub
or
adc
jb
les
or
cmp
test
iret
test
and
add
imul
xor
aaa
dec
arpl
and
fildll
dec
loopne
ja
loopne
and
jle
mov
push
inc
mov
std
push
push
fs
inc
popa
xor
lret
add
les
divl
adc
movsl
inc
pop
dec
jecxz
ret
jae
das
addr16
ljmp
loop
add
push
out
xor
clc
adc
shlb
int
sahf
jle
jo
inc
pusha
lahf
cli
adc
xchg
jo
ja
loopne
push
pmaddwd
cmp
into
hlt
shrb
or
lock
jne
mov
cmpsb
xor
inc
mov
je
or
hlt
pop
dec
add
mov
xor
and
xchg
repnz
out
stc
mov
xor
mov
push
int3
inc
cs
cmpsl
inc
int
mov
and
dec
fsubrl
ss
sub
std
inc
test
bound
lcall
in
icebp
xor
push
hlt
mov
hlt
out
jbe
xchg
mov
adcl
movsb
cmp
clc
sbb
pop
mov
jle
adc
xor
jg
leave
insl
inc
dec
inc
sub
testl
xchg
push
pop
sahf
add
cmp
pushf
sarb
mov
mov
in
jno
stos
add
mov
mov
cmpsb
dec
push
ret
outsl
mov
mov
ja
test
ret
and
clc
and
xchg
dec
push
std
shl
cwtl
fwait
pop
jnp
and
rolb
cmp
cmc
jns
xchg
shrl
jp
repz
adc
sub
rclb
je
mov
repnz
into
mov
xchg
std
lcall
cmpsl
xchg
push
int3
imul
jbe
int3
pop
repnz
clc
addr16
mov
mov
in
cltd
pop
pop
jbe
inc
mov
mulb
andb
lahf
mov
inc
mov
ss
dec
cs
enter
rcl
int
push
jmp
out
test
cmp
cmp
cltd
stos
mov
jae
push
movsl
rcll
pop
loop
fwait
jnp
xor
xchg
das
inc
ljmp
ds
add
rcrl
mov
mov
mov
lcall
dec
mov
mov
test
leave
push
std
or
push
in
les
subb
lods
adc
mov
sbb
sbb
mov
cwtl
aas
movsl
movsb
arpl
adc
xor
les
push
dec
dec
adc
out
sahf
pop
dec
push
push
sahf
stos
mov
pop
xor
push
dec
jge
pop
mov
arpl
mov
stc
shlb
mov
cmp
add
loop
test
js
arpl
arpl
iret
jg
aam
ss
aad
jp
push
outsb
and
xor
ret
mov
aam
insl
dec
inc
sub
and
pop
jne
xor
fnstsw
mov
lds
insb
add
or
xchg
mov
das
xchg
inc
mov
add
pushl
dec
enter
jbe
and
aam
and
enter
cmpsb
rcll
cltd
test
je
shll
stos
leave
mov
add
insb
ret
in
sbb
and
ljmp
xchg
inc
enter
xor
lods
ss
cmpsl
add
hlt
cmp
fdivs
stos
push
mov
mov
xchg
out
repnz
cld
sbb
jle
aam
dec
cmp
xor
adc
or
inc
std
pop
in
mov
icebp
outsb
cmp
popf
mov
xchg
mov
hlt
loop
cmpb
sub
sbb
ret
popa
and
rorl
outsl
int3
rcrb
lods
xor
cmp
xchg
aaa
dec
jbe
push
out
pop
popa
in
iret
push
push
enter
push
inc
xchg
mov
arpl
mov
into
dec
push
pop
xor
lret
or
xchg
adc
shl
dec
sarl
add
repz
aam
mov
sub
inc
mov
jecxz
shl
cld
repz
iret
mov
xchg
jle
add
xlat
sub
lds
mov
dec
lds
fdivs
jae
arpl
jmp
cmpsl
sarb
xchg
iret
shl
pop
loope
gs
ret
loop
ss
fs
call
inc
movsb
push
outsl
cltd
mov
bound
push
mov
mov
mov
out
clc
out
mov
push
inc
lcall
dec
fcomp
mov
dec
pop
pop
jl
xor
mov
cmp
fchs
enter
imul
mov
push
call
xchg
add
pop
lock
sbb
imulb
sbb
out
push
pop
jne
jb
call
nop
jle
mov
icebp
imul
mov
stos
js
rcrl
push
dec
les
andl
shlb
mov
sahf
shll
clc
test
js
mov
ds
push
push
cltd
outsl
ret
mov
sahf
add
jo
cmc
loope
lcall
pushf
jge
xlat
lds
daa
pop
out
mov
pusha
shlb
dec
in
cmpb
mov
sahf
xor
sbb
cmc
out
testb
aad
inc
adc
or
jo
xlat
sub
paddb
sbb
repz
cs
mov
push
pushf
xor
addr16
int3
repnz
mov
push
out
mov
mov
sub
std
or
push
cmp
sbb
adc
pop
into
ss
enter
fmuls
lret
repz
adc
ret
mov
mov
mov
or
push
mov
sbb
push
fdivl
repz
sub
adc
ja
lea
out
xor
repz
jb
movsb
imul
pop
ja
dec
andl
scas
jbe
cs
mov
int3
inc
mov
mov
out
imul
xor
cmpsl
mov
adc
dec
cmp
push
out
ret
mov
adc
out
int3
cli
insb
flds
fs
add
flds
add
dec
xchg
inc
inc
cmpsb
lret
dec
sbb
out
or
int3
lods
or
jno
jp
xchg
cmp
jno
int3
or
adc
sbb
mov
enter
add
jecxz
push
sub
cmc
jnp
mov
or
test
push
loopne
leave
movsb
sub
jo
orl
iret
mov
enter
pop
or
vmwrite
pop
cmpsb
mov
mov
jae
stos
push
mov
pop
lock
mov
mov
cmpsb
jmp
xlat
cmpsl
xor
xchg
test
les
sbb
xchg
add
lcall
sbb
dec
mov
imull
pop
push
loope
les
leave
insb
movsb
adc
lods
and
jmp
push
sbb
jg
xor
inc
out
mov
aas
gs
movsl
stos
push
shl
jmp
stos
fwait
int
or
scas
in
sbb
jle
xchg
pushf
outsl
je
leave
or
jo
repnz
and
jne
rcrb
mov
dec
add
popf
xchg
cmp
out
je
mov
in
lds
xor
mov
sub
stos
test
shll
dec
je
xchg
arpl
fwait
add
stos
sbb
push
test
lods
ret
xorb
jb
xor
jnp
loop
adc
insl
lea
adc
jmp
ljmp
in
adc
xchg
push
sub
shlb
sbb
movsb
rep
dec
les
sbb
pinsrw
jnp
push
aad
jns
lods
cmp
rorb
call
mov
add
data16
out
cmp
pop
popf
mov
dec
push
cmp
arpl
adc
jno
add
and
xor
out
jo
lret
mov
and
loopne
repnz
fists
ror
mov
scas
hlt
inc
mov
mov
inc
pop
icebp
push
adcl
loop
wbinvd
push
mov
mov
bound
cmp
arpl
mov
add
pop
pop
mov
data16
pop
fldcw
inc
hlt
xchg
lods
sub
in
push
xor
nop
jmp
insl
aas
mov
fsubrs
andb
xor
divb
mov
cld
ficoml
adc
jo
and
fnstenv
mov
and
lahf
ret
fstpl
inc
add
cmpsl
js
sbb
rorl
pushf
and
push
sub
push
cmpsb
add
adc
stos
mov
loop
xchg
sbb
jp
stos
lds
xor
xor
dec
loop
pushw
xchg
lds
inc
inc
ss
mov
es
or
mov
mov
mov
in
lea
push
add
fwait
xchg
mov
mulb
enter
sbb
icebp
insl
sbb
cmp
orl
push
pusha
sahf
sbb
rcl
outsb
lahf
adc
pop
cmpb
arpl
out
mov
outsb
xchg
mov
in
sub
fmull
cmp
push
cld
mov
inc
fstl
dec
pop
or
shl
add
test
popf
aaa
xchg
lcall
inc
xorb
imul
or
pop
mov
std
setl
arpl
sub
sti
mov
xor
out
jge
js
sbb
aaa
insl
into
add
std
lcall
mov
mov
push
cmc
push
jbe
and
inc
aaa
out
ljmp
cmpsl
mov
jmp
sti
xor
mov
add
ljmp
stos
arpl
sub
xchg
push
adc
or
test
xor
fldcw
movl
inc
jne
into
fdiv
gs
mov
pop
loope
dec
std
adc
divl
push
in
push
sub
adc
mov
imul
sbb
push
mov
and
cmp
aas
pop
nop
dec
repnz
in
imul
ja
cmpsb
dec
dec
lahf
push
dec
sub
cmpsl
pop
lret
xchg
jmp
aam
xchg
in
mov
cltd
and
fldenv
push
out
lea
aad
xchg
dec
in
insb
sub
test
cmp
loopne
loopne
push
ds
xchg
mov
mov
cmp
sbb
pop
cmp
notl
in
push
adc
mov
bnd
and
and
xor
adc
ja
xchg
cwtl
inc
imul
mov
xor
lods
sbb
pop
cwtl
mov
loopne
repz
lods
fistps
sub
test
cmp
nop
jns
add
in
cmp
jmp
stos
inc
ljmp
movsb
jnp
sti
popw
jo
dec
pop
jbe
mov
dec
aas
shrl
dec
mov
sahf
mov
ds
or
icebp
cwtl
cmc
inc
xchg
test
jne
inc
sbb
fcompl
scas
sahf
mov
jnp
js
jb
fs
fwait
leave
xor
xlat
mov
push
push
aam
xor
sar
js
xchg
push
pop
mov
jmp
faddl
inc
call
mov
xchg
clc
shrl
pop
and
sbbl
mov
or
rclb
call
mov
xchg
pop
inc
pop
add
cltd
shrl
sub
sahf
dec
inc
lods
and
mov
mov
fwait
adc
dec
xchg
mov
ds
cmp
nop
inc
push
leave
dec
jbe
addb
aad
cmpxchg
or
and
test
cli
test
jbe
cmpsl
mov
int3
adc
pop
inc
jbe
jnp
jbe
lret
dec
lods
outsl
stc
or
sahf
push
add
nop
cld
in
test
jns
sub
xor
into
addr16
pop
mov
pop
cmp
repz
mov
xor
sub
addl
repnz
pusha
adc
adc
mov
sbb
inc
imul
into
adc
and
inc
adc
dec
movsb
negl
add
mov
push
adc
mov
fcompl
icebp
int
dec
and
xchg
ja
mov
mov
jl
jb
les
pop
pop
out
addb
sub
pop
scas
and
bound
movsb
jp
xor
hlt
xchg
jno
rolb
les
sub
sub
cmp
cmp
mov
jge
data16
cmc
dec
ss
aam
adc
pop
jle
cmp
fcoms
stc
cmp
das
mov
lods
mov
lock
fmuls
dec
dec
mov
iret
cmp
dec
inc
les
in
test
outsb
xchg
je
rep
sub
push
sub
int3
cwtl
or
mov
mov
and
fdivl
and
orl
cwtl
mov
mov
ret
popf
ficoms
dec
mov
in
jns
rorb
stos
in
inc
iret
cs
and
sbb
or
call
mov
jg
or
mov
add
in
dec
std
fyl2x
xlat
pop
decl
sbb
push
xchg
movsb
push
lret
mov
cmp
gs
mov
xor
jns
imul
cmp
push
clc
pop
fimull
jno
inc
mov
jb
sbb
jmp
inc
clc
add
push
sbb
cwtl
xlat
bound
and
bound
movl
push
ljmp
je
cmp
int
arpl
adc
pop
push
fistpl
sbb
test
sub
mov
or
mov
leave
repnz
ret
adc
sbb
adc
negb
gs
outsb
int3
popa
sub
jne
jne
loopne
imul
aaa
in
mov
cmpsl
rorb
xor
int3
ftst
ret
roll
push
or
cmp
ret
xchg
iret
cli
xor
lahf
pop
adc
loope
jbe
nop
mov
or
sub
stos
dec
add
mov
cmpsb
aaa
or
sahf
and
xor
insl
sub
scas
inc
mov
or
mov
jp
aas
xor
sbb
cmpsb
xor
sub
lcall
icebp
add
and
idivb
test
insb
jno
ja
int
sub
rcll
lret
inc
mov
jae
out
cmpsb
add
fists
movsl
jo
insl
xchg
adc
pushf
mov
scas
out
cltd
stc
inc
dec
cmpsl
and
sbb
lret
repnz
push
lods
push
add
fwait
insb
adcb
and
clc
test
cmpl
mov
shrb
cmp
shll
cmpsl
cmp
jbe
jg
mov
push
sti
pop
push
sub
pop
aas
cmpsl
bound
fsubrs
dec
push
out
push
div
inc
pop
mov
pop
mov
movl
jo
xchg
aas
lahf
dec
mov
roll
sbbb
cltd
mov
int3
and
test
pop
inc
int
adc
xchg
pop
add
jnp
scas
dec
push
or
push
outsl
sti
popf
repz
shlb
or
dec
xchg
xchg
xchg
lahf
pop
adc
add
cmc
cmp
and
mov
sbb
nop
push
gs
lahf
clc
pop
jge
lds
pop
fmuls
lods
or
mov
imulb
bound
sub
push
gs
cwtl
mov
jl
sub
ficoml
out
mov
popa
and
cmpsb
mov
xor
and
shll
jne
pop
mov
or
bound
aad
ds
sbb
test
stos
pop
xchg
je
push
sub
dec
cmc
adc
dec
icebp
cld
clc
pop
rorl
xchg
sbb
lea
push
in
mov
dec
pushf
leave
xor
popf
in
movsb
xchg
scas
and
cmp
outsl
cmpsb
mov
cmp
daa
in
xchg
popa
call
lods
aad
or
test
jns
hlt
or
jmp
cmp
xor
popf
add
test
ss
xor
int
fidivl
clc
test
and
ja
pop
test
shrb
adc
jg
inc
je
pusha
jl
inc
in
pop
iret
adc
mov
popa
jo
add
loopne
jne
out
mov
xchg
sub
jl
repz
test
push
xor
inc
xchg
pop
lock
push
cmp
mov
pushf
xor
arpl
mov
xor
push
adc
call
or
lods
daa
push
aas
cmpsb
pushf
lods
inc
call
daa
out
mov
out
mov
mov
mov
add
sbb
cmc
jae
mov
push
ja
mov
es
lret
sub
xor
pop
sbb
shrb
add
jl
jno
ret
test
sub
cli
in
xor
xor
scas
inc
mov
pop
or
loope
xor
mov
xor
pop
testl
push
mov
cmc
insb
pop
addl
xor
mov
int3
sbb
repnz
sbb
cmp
addr16
and
icebp
out
xchg
sbbb
add
dec
inc
int
xchg
out
call
in
inc
cld
popf
adc
and
cmp
aas
cs
and
ret
xchg
into
or
insb
std
or
mov
sbb
ret
stos
xacquire
add
cmp
cmp
adc
mov
sub
cmpb
insl
push
aas
ret
lcall
xor
mov
xor
xchg
xor
dec
mov
pop
repz
arpl
push
mov
icebp
mov
inc
jecxz
adc
repnz
cmp
jmp
xchg
mov
mov
mov
xchg
scas
rcrl
nop
or
fcoml
xchg
idivl
mov
xor
lcall
decb
cmc
inc
out
sbb
sub
mov
and
mov
rcll
aas
xchg
leave
test
lods
mov
mov
push
xchg
scas
push
sub
jge
jnp
cmp
mov
out
js
and
sub
pop
inc
in
fistpll
xchg
lret
mov
out
iret
or
loope
push
leave
push
or
outsl
int3
es
mov
loope
inc
mov
push
imulb
insl
fisubl
pop
mov
rclb
mov
dec
mov
fnsave
adc
lea
jns
mov
add
in
xor
jge
aam
mov
dec
imul
decb
stos
aad
cmp
mulb
dec
ljmp
push
stc
int
adc
push
and
cmpsb
notl
jns
fisubrs
inc
cmp
aad
jns
test
cmc
mov
mov
lods
ret
addr16
movsb
pusha
jge
test
dec
mov
out
inc
xchg
outsb
int3
repnz
divb
jmp
hlt
addr16
lds
xchg
push
jno
icebp
sti
xchg
hlt
aam
sub
sti
in
es
xor
add
xchg
das
in
ss
mov
imul
push
testl
dec
xor
sub
add
add
cmpsb
cwtl
out
sub
sub
fsubrl
sub
mov
dec
jg
sub
loope
outsl
decb
call
das
add
dec
ret
xchg
adc
das
and
cmp
mov
cmp
cli
cmp
pop
out
call
data16
je
leave
adc
mov
fidivl
cmp
push
decl
in
cmpsb
int3
dec
cmpsb
fnstsw
pop
popa
jle
add
aad
dec
into
scas
fs
mov
das
into
fstpl
pop
andb
in
pop
popa
lcall
incb
sub
xchg
scas
mov
pop
mov
das
push
sarb
ja
dec
cs
adc
ror
push
shr
movsb
aam
sub
push
outsb
loop
jg
add
in
dec
mul
pop
fstpl
movsl
cmp
into
cltd
in
pop
cmp
xor
pop
dec
frstor
sub
mov
das
jle
adc
stos
bound
ficoml
jmp
add
fs
bnd
stc
push
notl
in
inc
decl
fsubrl
pop
in
dec
jae
xor
ss
ret
leave
sbb
arpl
movsb
dec
xchg
add
std
fldcw
mov
inc
xor
dec
cmp
pop
adc
cltd
leave
idivb
add
cmp
out
enter
pusha
xor
ljmp
scas
inc
xchg
sbb
jns
cmovae
shrl
pop
push
sbb
subl
sub
or
xor
mov
gs
xchg
jno
jo
jo
outsl
dec
add
pop
out
test
enter
lret
mov
imul
xor
aad
adc
mov
aas
mov
add
imul
cmp
mov
cs
mov
xchg
xor
dec
add
sbb
mov
fadd
mov
and
imul
jg
sbb
add
lcall
sub
xchg
xchg
jp
mulb
in
div
inc
lods
int
inc
negl
jg
jo
cwtl
scas
pop
mov
ret
jne
stc
xchg
fiadds
int3
cmp
ret
sub
push
int
add
and
mov
push
jb
fisubrl
out
movsl
cltd
pop
ja
dec
rclb
push
mov
sub
jae
js
lret
mov
aaa
loope
js
lea
leave
push
andl
jb
adcb
jle
fiaddl
mov
dec
pop
or
cs
xchg
ror
xchg
pop
and
add
test
ss
test
xchg
xchg
icebp
jns
test
repnz
jmp
loope
push
xor
call
aad
fwait
xor
add
mov
call
lds
fwait
mov
mov
std
ss
jne
adc
pop
jb
mov
jne
pop
fwait
clc
inc
jecxz
mov
jno
sbb
jge
jb
imul
sbb
and
or
mov
inc
mov
cs
dec
nop
fisttpl
outsl
add
lcall
aaa
and
mov
add
fnstenv
dec
mov
jle,pn
xchg
out
and
movsl
aad
out
inc
xchg
ljmp
cmpsb
fcmovnu
jecxz
cmp
sub
ja
xor
adc
dec
pop
dec
push
aad
imul
sub
push
pop
movsb
dec
fisubrl
mov
test
push
mov
or
add
jl
mov
jle
cli
bound
pop
icebp
leave
dec
sbb
push
test
ljmp
imul
mov
out
cld
pop
popa
test
pop
jl
test
mov
jnp
popa
pop
daa
divb
aam
sbb
outsb
xchg
dec
aad
or
sbb
daa
pop
in
in
jp
adc
push
pop
cld
mov
movsl
mov
insl
idivb
sub
les
dec
push
fsubs
lcall
or
fbld
sbb
xchg
outsl
in
or
icebp
clc
and
leave
hlt
cli
xor
xchg
jo
outsb
cmp
testl
gs
or
xchg
cwtl
sbb
pop
push
scas
sbb
ljmp
xor
and
cmpb
jo
xchg
mov
push
mov
add
orl
lock
or
pop
lods
lds
shlb
xor
or
xchg
mov
fidivs
insl
addr16
scas
xchg
out
mov
stos
out
shrl
insb
movsl
int3
movsb
pop
or
int
lods
fiadds
inc
add
mov
leave
mov
les
and
push
cmp
jb
mov
xor
or
shll
orb
adc
add
mov
loope
into
ja
fildll
roll
stos
fwait
xor
idivb
inc
int3
test
mov
ja
fmull
int
inc
out
lret
and
pop
push
mov
mov
lret
les
lahf
push
lahf
lea
mov
pop
fs
sbb
or
jo
cmc
jb
sub
xchg
rol
inc
loop
xchg
and
rcl
mov
fwait
into
sbb
leave
add
movsb
ret
aad
add
orl
jb
pop
xor
pop
fwait
push
and
popf
push
and
insl
mov
add
and
repnz
inc
lret
sub
jbe
mov
mov
add
ficompl
arpl
xor
imul
pop
xor
cmp
sub
jle
jnp
pop
jae
mov
mov
mov
push
stos
je
xor
sub
cmp
or
push
and
cmpl
adc
cmpsl
add
push
ds
jno
js
mov
mov
dec
stos
js
dec
int
pop
test
jbe
jo
subb
ds
mov
lods
xchg
sub
call
fdivrs
enter
sbb
dec
nop
mov
test
xor
pop
adc
stos
or
jmp
adc
mov
adc
and
dec
jb
push
fbstp
mov
mov
push
sbb
popa
pop
xchg
push
daa
loopne
mov
push
sti
jp
ss
cmp
inc
adc
xlat
fisubs
mov
jbe
iret
test
or
pushl
lahf
pushf
pop
inc
lock
xorb
cmp
dec
insl
gs
jle
push
in
pop
es
mov
data16
pop
sbb
adc
mov
rorl
adc
lret
cwtl
rorb
sub
mov
push
inc
hlt
fldl2e
nop
pop
add
pusha
cli
sbb
mov
scas
pop
cmp
mov
mov
pop
mov
push
xlat
mov
imul
mov
ja
cltd
mov
fwait
call
and
aaa
das
sti
fidivs
xlat
call
push
stos
add
dec
xchg
jne
push
cmp
cmp
addl
call
jge
and
jbe
mov
dec
sub
push
jecxz
pushf
xchg
rcrb
rcrb
lods
xlat
pusha
jge
loop
jne
jl
out
ret
mov
cmp
repnz
push
jp
fsubr
sub
pop
xor
inc
and
test
in
xlat
in
test
fsubrs
fldcw
sahf
add
xor
xor
popf
mov
fwait
sbb
loopne
xchg
das
jb
cld
js
cs
sti
dec
jo
jae
addb
mov
jg
xchg
jmp
jecxz
add
push
leave
mov
lahf
pop
inc
addr16
mov
clc
jl
out
ja
loop
outsl
push
scas
or
dec
lea
jmp
add
mov
fstpl
and
and
fisttps
pop
outsb
jl
ret
lret
or
out
cmp
mov
mov
adc
xchg
cmc
rorl
int
stc
sub
inc
jns
mov
mov
mov
push
daa
ds
imul
lret
rol
xchg
aas
scas
divl
xchg
mov
or
jg
out
lock
sub
mov
js
inc
subl
sbb
dec
jmp
aam
mov
leave
push
aam
lret
call
cmp
stos
fists
xorl
cltd
roll
adc
or
fwait
mov
aam
mov
cmp
lea
pop
cld
xor
push
pusha
pop
lea
insl
sub
insl
and
jnp
out
int3
dec
mov
insl
push
insb
add
adc
jge
test
cmc
xor
push
xlat
jae
add
sbb
push
jne
aad
push
cli
mov
rorl
cmp
les
sbb
jae
stc
lods
jns
cmp
push
cli
add
mov
push
xor
pop
out
jne
add
pop
cmp
mov
int3
test
faddl
nop
sbbl
jmp
xchg
icebp
stc
lock
and
dec
mov
inc
addr16
scas
sbb
fldt
out
dec
mov
add
roll
dec
mov
sbb
out
addr16
dec
push
jns
das
cwtl
inc
inc
cmpsl
ret
xor
sarl
xor
rcr
popa
push
mov
pop
cmpl
test
roll
addr16
sbb
pop
pop
fdivp
mov
mov
hlt
jnp
mov
int
test
and
mov
push
cmp
icebp
pop
dec
mov
pop
pop
mov
fsubl
cmpb
add
pop
pop
pop
mov
lods
dec
xchg
icebp
inc
imul
scas
daa
movsl
fwait
mov
out
pop
outsl
push
fs
xchg
sub
add
cwtl
scas
push
js
push
imul
mov
or
add
lea
or
pop
mov
and
push
mov
shl
into
mov
sahf
inc
rolb
adc
cld
mov
mov
scas
dec
adc
cmpb
push
push
mov
mov
cli
push
out
pop
movsl
mov
ror
dec
jmp
imul
sub
test
xlat
xchg
inc
jno
xor
lods
mov
cltd
mov
orb
rol
loop
out
jae
push
dec
or
add
push
xchg
andl
jge
push
push
fwait
pushf
inc
pop
cmpsb
lahf
inc
fimull
loopne
jnp
xor
ds
imul
and
sar
xchg
ljmp
xchg
stos
mov
aas
mov
inc
popa
mov
insb
fldl
fs
push
dec
inc
adc
das
out
rorl
clc
or
data16
stc
xor
addr16
loopne
push
push
hlt
mov
xor
loop
fidivrl
xlat
lcall
mov
dec
inc
fs
jbe
movb
popw
lods
adc
push
outsl
fsubs
push
ja
adc
xchg
adc
pushf
rol
fmul
sbb
test
movsb
add
scas
nop
sub
add
or
adc
adc
jmp
inc
xchg
int3
call
jne
sub
ret
in
pop
cli
adc
icebp
sub
mov
adcl
push
cwtl
xchg
stos
sbb
or
mov
outsb
cs
mov
iret
fsub
mov
pop
mov
das
and
add
lods
mov
xchg
xor
int3
inc
js
xor
dec
xorl
das
mov
call
mov
cli
xor
data16
add
pop
data16
outsb
enter
mov
fstps
xor
and
cmc
xchg
mov
mov
and
sbb
jbe
sbb
adc
loopne
lods
jp
lret
adc
sbb
xor
fmuls
mov
sti
adc
clc
daa
inc
dec
shrb
mov
xor
add
cltd
jecxz
notl
and
cltd
in
adc
push
push
jg
addr16
add
iret
ljmp
pop
in
push
repz
aam
ljmp
pop
in
push
adc
sub
inc
push
sahf
addr16
lods
add
cltd
shl
inc
mov
inc
frstor
leave
loopne
js
or
std
pop
xchg
popa
add
jl
jne
jb
fwait
sub
lods
jecxz
or
test
clc
aad
negl
mov
xor
pop
ds
sub
sar
fistl
std
inc
add
adc
mov
addr16
ja
mov
xchg
mov
push
or
je
cwtl
scas
dec
adc
ds
or
sub
ror
int
lahf
into
and
and
lock
in
add
sub
das
cld
nop
mov
jae
scas
xchg
xchg
pop
mov
nop
pop
clc
jge
bnd
lock
push
rorl
out
add
js
xor
std
ret
inc
std
cmp
imul
mov
loopne
nop
fs
push
addr16
and
adcb
xchg
imul
les
cwtl
rclb
lods
pop
aas
popa
push
push
xor
and
xchg
ja
mov
test
les
pop
insb
fisubrs
xchg
inc
add
sbb
mov
sub
push
xor
inc
mov
mov
rorb
and
inc
jecxz
or
xchg
icebp
ja
fptan
mov
sbb
mov
fwait
xchg
leave
ljmp
cli
mov
push
test
mov
les
incb
sub
pop
sub
push
lea
andl
jp
cmp
sbb
pop
enter
out
push
fidivrl
test
test
sti
mov
sbb
xor
fnsave
mov
cmp
imul
pop
or
mov
fnstcw
add
fsubrs
scas
xchg
ja
lcall
inc
js
lret
lret
popf
jl
mov
mov
ret
sbb
adc
imul
sahf
jnp
mulb
dec
xchg
daa
daa
loopne
inc
dec
fimull
test
mov
loop
pusha
jmp
sbb
in
pop
in
cmp
pop
imul
in
push
sar
into
jl
test
clc
jo
scas
icebp
es
push
mov
and
sbb
xor
mov
jge
jo
jl
mov
pop
add
leave
pop
mov
pop
leave
leave
dec
cs
repz
in
call
or
jl
xchg
fnsave
sti
sbbl
push
xchg
and
sbb
mov
pop
loope
jl
xor
mov
xor
xor
dec
and
add
shll
or
dec
or
shlb
int
xor
scas
cmp
sub
enter
enter
pop
inc
sahf
cwtl
or
inc
enter
adc
in
nop
adcl
jp
lahf
xor
outsl
rcrb
mov
pop
arpl
sbb
xor
and
inc
adc
lret
clc
repnz
fs
repnz
ljmp
popa
shrb
push
cmp
ret
fdivr
push
aad
xchg
jae
pop
jle
mov
cli
sub
mov
in
xchg
mov
adc
mov
jns
pop
mov
jno
std
jl
push
enter
das
push
movsb
jo
ja
mov
rcrb
aaa
fdiv
sbbl
or
leave
xchg
pop
call
or
ficoml
sub
xchg
in
stc
push
rcl
mov
jp
or
adc
clc
jp
in
in
mov
sbb
add
push
lret
dec
push
aam
xchg
pop
or
or
pop
popa
cmp
adc
repz
gs
loopne
mov
mov
in
sub
loop
inc
xchg
add
fbld
push
shlb
in
out
mov
lret
xchg
pop
outsl
lcall
dec
inc
mov
shlb
mov
mulb
jo
xor
pop
fidivrl
jp
jg
jns
push
pop
insl
cmc
ljmp
push
xchg
pop
ret
lahf
lahf
int3
pop
push
cmc
cmc
insb
mov
xor
loop
stos
in
mov
movsl
and
or
in
mov
inc
push
push
aaa
mov
pop
cli
andb
in
hlt
jmp
leave
or
dec
je
enter
dec
push
mov
out
mov
jg
cwtl
add
push
mov
dec
push
int3
adc
and
xor
ret
jmp
lds
pop
mov
mov
cltd
mov
sub
xchg
daa
shr
enter
punpckhbw
js
lods
and
nop
push
mov
pop
cmp
lock
and
adcb
add
sub
jg
gs
outsl
aas
fisubs
and
inc
jmpw
cmp
push
push
or
xor
repz
xlat
fsubs
shlb
lock
mov
clc
jp
and
arpl
jp
xchg
mov
nop
imul
gs
mov
sbb
fidivs
xor
cltd
stos
sub
or
fistl
outsb
xchg
mov
mov
bound
mov
stos
sub
shrb
jp
test
xchg
pop
mov
inc
xchg
adc
inc
mov
fsubp
dec
pop
pop
fistpll
pop
xor
lret
cmpsl
cltd
push
int3
stos
sbb
jp
pop
inc
mov
inc
mov
dec
and
or
or
ja
push
rcrb
loop
fisubrs
xchg
outsl
scas
sahf
outsw
sbbl
loopne
icebp
in
jl
enter
aaa
arpl
bound
daa
jp
call
jg
pop
mov
enter
sarb
mov
xchg
fadds
xor
add
xchg
jmp
sub
sub
in
push
test
jns
jne
pop
cmp
and
cmpw
nop
mov
and
add
bndldx
fsubrs
lret
jbe
xchg
into
or
stos
push
call
inc
notl
jno
and
xchg
mov
enter
test
sbb
jle
lock
rcl
jle
icebp
adc
lods
mov
nop
jg
cmp
imul
outsb
ja
loope
xchg
test
push
andb
add
mov
jle
xchg
lcall
xor
addr16
mov
mov
dec
popl
daa
rorl
mov
mov
ss
sbb
mov
fdivrl
cli
ret
loop
rcll
mov
add
cli
aaa
fsubr
mov
and
cmp
xor
loope
mov
jnp
cmp
scas
out
or
push
cmp
pop
mov
orb
or
inc
pop
mov
mov
pop
leave
add
stc
imul
push
pop
je
addr16
xor
jg
jns
sub
sbb
mov
rorl
and
mov
dec
addr16
addr16
cmpl
popa
xchg
push
sub
jno
add
sbb
jae
scas
xchg
sub
mov
add
outsl
outsl
xor
sub
cmpb
inc
dec
jns
pop
sbb
push
repz
push
jmp
loopne
jl
cmp
fwait
or
add
push
jg
mov
xchg
dec
mull
mov
in
andl
adc
push
mov
mov
inc
pushf
scas
mov
inc
mov
pop
gs
int3
int
mov
or
enter
push
dec
jns
add
mov
shlb
mov
fisubl
rcl
xchg
sti
add
rcr
inc
cld
inc
lahf
fwait
ret
pop
and
dec
xor
inc
sub
mov
test
inc
xchg
or
lds
into
push
cmp
and
aad
outsb
mov
pop
test
lock
out
push
dec
test
dec
ljmp
and
cli
or
push
out
ds
fcompl
les
mov
cmp
and
mov
inc
push
std
jmp
mov
adc
push
orl
jg
sub
pop
aam
imul
daa
push
pop
andl
jbe
and
sub
sbb
xchg
inc
inc
cmc
insb
in
push
stc
flds
aas
leave
inc
in
cmp
jnp
and
repnz
les
icebp
sbbl
addr16
repnz
sub
lcall
sub
mov
inc
sub
dec
subb
scas
mov
and
xor
jns
inc
in
hlt
jmp
lea
bound
jbe
mov
rorb
lret
xchg
fwait
jle
dec
sti
adc
cmp
jne
push
or
xor
jns,pn
jmp
pop
dec
adc
dec
sbb
rorl
int
stc
jmp
jo
fwait
cmc
imul
xchg
aaa
xchg
cmp
pop
push
xchg
dec
and
testb
hlt
sub
push
adc
and
clc
pop
adc
imul
loop
mov
iret
xchg
out
adc
push
mov
adc
dec
xchg
add
pop
out
cmp
mov
rcrl
in
test
shl
sbb
sub
notb
mov
cs
loope
out
dec
outsb
jb
inc
jno
ljmp
cld
sbb
pushf
clc
negl
pop
adc
imul
sub
adc
fwait
xlat
push
jb
aam
stos
xchg
sub
or
adc
js
fistpl
push
shlb
dec
adc
xchg
dec
sub
or
mov
mov
fldlg2
iret
push
mov
fcomps
cmc
je
lods
pop
shlb
ret
xor
mov
add
dec
scas
xchg
ret
in
jge
hlt
jecxz
xor
sub
mov
pop
out
test
push
lcall
stos
pop
lods
push
jns
mov
pop
pop
mov
adc
outsb
dec
add
sbb
icebp
push
outsb
or
mov
sbb
adc
loopne
adc
jae
add
nop
pop
cwtl
in
mov
aad
psubd
push
and
rcrb
mov
push
pusha
fidivrs
pop
add
sbb
shll
mov
sti
jge
push
packsswb
push
lcall
std
outsl
ljmp
push
sti
xchg
test
mov
jmp
cld
enter
jge
pop
ror
mov
adc
test
fildll
xor
sahf
jb
or
shll
push
inc
push
or
lret
sub
xor
arpl
dec
leave
xchg
dec
filds
scas
js
xlat
or
imul
jg
cmp
jne
xchg
shlb
cmp
movsl
shll
mov
xor
mov
mov
or
aam
xlat
and
xlat
pop
cmp
cmp
or
jnp
pop
jmp
aas
xchg
scas
fwait
daa
clc
and
cmp
cmpsb
loopne
jg
mov
repnz
inc
pusha
rcr
mov
divl
pusha
out
out
sub
and
add
std
iret
xchg
sub
cmp
pop
fincstp
xlat
jecxz
pop
test
sub
xchg
enter
pslld
or
divl
in
bound
xchg
test
inc
pop
inc
dec
inc
shlb
cmpsb
mov
inc
sub
jnp
pop
cmpsl
inc
icebp
cli
push
sahf
pop
call
adc
sarb
sub
movsl
or
pop
mov
sub
or
cmp
jne
push
adc
mov
in
or
sub
mov
mov
mov
xor
push
pop
sub
fwait
dec
sub
ss
adc
bnd
inc
mov
inc
push
les
aad
in
xchg
adc
aad
les
shll
addr16
jbe
add
xchg
mov
jl
push
cmpsl
push
pop
mov
adc
sub
dec
movsl
jae
xlat
inc
xlat
xchg
mov
inc
aam
jbe
mov
cmp
nop
cmp
lock
mov
dec
pop
imul
cmp
sti
aas
gs
rclb
xor
outsb
or
add
jns
mov
pop
or
sahf
add
jge
xorl
or
out
xor
imul
sub
jge
mov
and
es
divl
repz
jns
scas
test
add
mov
negb
mov
pop
cmpl
jnp
sahf
sub
jl
adcl
aas
mov
push
mov
pop
sub
push
or
imull
cmpsb
and
mov
adc
subb
insb
mov
jg
cld
push
sbb
popf
sbb
jns
mov
ficoml
sbb
mov
fs
pop
xchg
in
insl
mov
test
dec
inc
stos
sbb
jns
pop
sbb
roll
fcmovnbe
test
div
xchg
stos
xchg
shlb
mov
in
shrb
push
cmp
sub
inc
cmp
jecxz
imul
mov
stos
rcrb
inc
push
and
shlb
rcrl
or
xor
sahf
lcall
les
shl
jbe
daa
les
cmpl
loopne
jno
lcall
push
jbe
mov
scas
xlat
add
jae
dec
fistl
addr16
ljmp
xchg
pop
add
loope
adc
daa
scas
idivb
addl
push
xor
roll
sub
xchg
jbe
fs
add
xchg
inc
cmp
aam
or
jl
bound
jp
aaa
arpl
dec
sbb
cmp
pop
movsl
dec
inc
jle
xor
rorl
pop
lock
sub
jg
jns
or
ret
push
imul
cli
or
or
aas
mov
nop
add
sahf
adc
push
dec
mov
outsl
mov
add
int
lods
inc
out
out
or
inc
and
scas
cmp
cmp
inc
jnp
ljmp
inc
dec
imul
sbb
jo
and
cltd
aaa
cmp
loope
pop
add
fcmovu
les
add
sub
nop
dec
adc
idivl
rcrb
mov
ret
push
jge
xor
cmpsb
add
add
inc
cmpb
dec
lret
not
push
or
inc
cmc
push
cmp
pushf
fildll
pop
xor
cwtl
jae
int
ds
mov
aad
imul
aad
xchg
into
push
lret
cmc
cmp
out
sbb
xchg
xchg
push
xchg
in
adc
sub
mov
and
push
push
lods
fs
inc
shll
cmp
pop
add
and
aaa
mov
shlb
lds
inc
pop
xchg
sub
add
into
aaa
and
int
test
pop
in
aaa
repz
jge
mov
orl
gs
orl
adc
data16
mov
jl
mov
inc
cmp
xorb
fidivs
xchg
loope
pop
sbb
out
into
mov
sahf
ss
movsb
js
out
add
dec
fnstcw
addr16
inc
jge
or
or
cmp
scas
mov
aam
ja
in
dec
cmp
and
ret
ljmp
adc
cli
or
jns
test
cwtl
clc
sub
test
rcrb
cmpl
int3
mov
rolb
cmpsl
sub
dec
cmp
add
fmuls
push
popf
pop
cwtl
int3
shlb
daa
jnp
xchg
jg
push
cmp
pushf
lds
pop
arpl
mov
imul
or
lret
daa
imul
test
call
les
shll
or
addb
enter
adc
cwtl
lea
push
xchg
sbb
push
addr16
arpl
mov
test
pop
jle
fisubrs
out
cs
cmp
lret
jnp
add
mov
inc
out
pop
sub
sub
xor
cmp
imul
mov
aaa
mov
lahf
les
xchg
out
cli
mov
add
icebp
or
pop
dec
inc
xor
stc
mov
sbb
std
dec
pop
xlat
dec
lcall
cli
pop
lahf
int
and
imul
shrl
popa
xlat
xlat
pop
dec
jecxz
jae
sub
cmc
or
leave
aam
stos
shrd
jae
cmp
mov
orb
or
in
je
fwait
mov
and
push
stos
addr16
jmp
add
hlt
and
out
xchg
sahf
sbb
sahf
decb
out
popf
shr
or
int
mov
xchg
mov
cmpsl
cld
stos
mov
repz
jge
dec
or
pop
fbstp
movsb
rcrb
dec
dec
lods
rol
pop
fsubrl
fists
inc
mov
xor
scas
push
sti
mov
inc
jno
pop
jp
dec
push
adc
imul
shrb
mov
sub
outsl
sti
mov
test
jmp
jne
das
sbb
push
fwait
call
mov
js
cmp
xchg
mov
inc
cld
notl
cmc
adc
xchg
jo
das
add
xor
adc
jg
pop
sbb
lods
in
sbb
inc
mov
shll
pop
dec
cmpsb
cmc
lahf
pop
push
std
xchg
rorb
mov
and
lret
lods
int
adc
xchg
pop
nop
scas
test
insb
dec
sbbb
insb
pop
dec
cmp
mov
pop
shr
scas
jl
and
outsl
test
adcl
cmpsl
pushf
push
xor
sub
jbe
xchg
inc
stos
fildl
xchg
lods
mov
add
repz
jecxz
jns
jp
ret
sbb
ficoml
jbe
mov
inc
pop
adc
popf
lods
fstpt
lock
test
sbb
roll
ret
test
in
mov
mov
mov
gs
sub
in
and
mov
scas
mov
in
shlb
mov
xchg
xor
out
add
sahf
insl
scas
mov
pop
stos
sti
pop
in
xchg
inc
test
push
pop
pop
and
add
iret
leave
loope
out
xorb
in
cmpsb
aas
xor
jmp
mov
mov
xlat
and
mov
rcr
shrl
sub
std
xor
std
pop
nopl
sar
scas
testb
or
mov
sbb
popa
cmpsl
pop
sub
mov
inc
scas
add
push
sbb
fwait
popa
popa
enter
rolb
xchg
push
mov
xchg
movsl
loopne
fisttpll
shlb
jmp
in
aaa
mov
ds
imul
cmpsb
test
aad
fidivrs
cwtl
mov
or
jle
dec
aas
mov
ret
or
and
cmp
ret
mov
push
fs
insb
ret
sbb
cmp
lret
ljmp
xor
sar
rclb
stc
stos
inc
lahf
fdivs
nop
ret
dec
repz
popa
add
gs
jmp
mov
cltd
mov
iret
enter
sbb
sete
jl
xchg
dec
mulb
mov
pop
popa
out
xchg
aas
xor
mov
lods
cmpsb
idivb
push
lret
mov
push
mov
stos
sbb
push
fadds
inc
mov
xchg
push
sbb
ret
mov
rcll
push
loopne
push
xchg
stos
pop
fxch
fstps
and
out
push
lret
outsl
mov
pop
pop
inc
stos
ds
jp
add
xlat
loop
or
stos
ja
es
xor
mov
sbb
mull
push
les
ret
mov
subl
inc
mov
add
fiadds
out
jp
loopne
repz
mov
sar
popf
lock
xchg
aas
icebp
mov
int3
cmp
jae
jns
jo
xor
das
fbld
xchg
xlat
jle
cmc
outsl
cmc
ss
push
rcrl
bound
jge
xor
rep
fbstp
iret
aam
fsubrl
lcall
frstor
push
jle
sbb
pop
inc
mov
or
lahf
pop
mov
cmp
stos
in
dec
test
out
fdivs
push
cmp
pushf
pop
jb
ror
jbe
aaa
movsb
stc
jecxz
in
mov
mov
inc
push
jmp
shlb
cmp
test
call
cmpsl
mov
dec
fdivrp
adc
pshufw
test
lcall
mov
sbbb
shll
xor
daa
xorl
cltd
jne
stc
mov
ffree
cli
lds
mov
add
test
cli
faddp
jmp
fcompl
mov
pushf
pop
xchg
push
std
fldl
jb
dec
xor
cmp
hlt
mov
popf
pop
pushf
xorl
into
inc
cmpsl
test
mov
daa
or
jecxz
pushf
incl
or
jb
jp
stos
xor
stos
repz
jg
in
out
mov
es
stc
hlt
jl,pn
mov
ss
mov
fmuls
fdivl
adc
mov
das
mov
dec
cmp
mov
adc
sub
mov
adc
ja
push
gs
rcrb
test
rolb
shrb
fs
push
adc
sub
mov
push
sarl
leave
mov
xlat
push
jne
mov
scas
leave
stc
mov
rorl
sub
cmp
fldenv
mov
loope
addb
pop
xor
mov
out
push
dec
shl
imul
jnp
push
mov
fildll
push
leave
leave
mov
jo
inc
daa
jns
stos
xchg
or
fidivrl
push
jle
push
test
aad
sub
ljmp
gs
cmp
sti
adc
fwait
jmp
push
and
xor
fwait
jbe
sti
xor
xor
pop
idivb
push
xor
rcrl
outsb
adcb
and
jecxz
stc
in
lods
mov
fistpl
loope
icebp
mov
repnz
xor
dec
dec
cmp
lcall
inc
stc
fisttpl
xchg
inc
mov
rclb
jecxz
jl
mov
adcb
inc
ja
inc
push
call
inc
xchg
rcrb
pop
pop
adc
or
jnp
enter
out
mov
cs
adc
sarl
jge
cmc
pop
data16
dec
inc
leave
movsl
aaa
roll
stos
adc
jne
movsb
lcall
sub
ss
daa
mov
pop
xchg
cltd
pop
push
push
and
pop
inc
sbb
pop
sbb
pop
idivb
rcrb
fs
adc
sar
xor
sti
arpl
push
xor
shlb
test
sub
bound
leave
adc
lods
xor
scas
xchg
dec
xchg
xchg
xchg
loopne
cmpsb
enter
sti
adc
push
xor
and
inc
cld
sub
arpl
mov
pop
jmp
xor
or
out
repz
daa
popf
xchg
jmp
mov
pop
dec
push
ret
inc
stc
ds
mov
mov
jecxz
pop
sub
push
adc
mov
je
push
pop
sbb
sarb
aad
lods
sbb
lock
mov
mov
lds
gs
mov
fs
push
and
lods
cld
fwait
loop
inc
pop
lock
arpl
into
ret
inc
sbb
xchg
mov
stos
cmp
or
cmp
rep
xor
in
jmp
outsb
out
push
addr16
rorl
mov
into
push
imul
shrb
fs
les
in
pop
adc
jge
jg
sub
mov
rcr
leave
ss
rcpps
movsl
popa
or
pop
inc
pushf
ljmp
sbb
nop
loopne
xorb
adc
stc
add
nop
stc
or
sub
jbe
inc
fmulp
pop
cld
jmp
sti
lods
jmp
add
xchg
push
xor
in
add
jbe
js
mov
push
or
fwait
aas
adc
add
push
pop
sub
pop
inc
mov
popf
negb
cltd
jp
jmp
arpl
jmp
aaa
pop
xlat
lret
in
int
lret
cmc
add
mov
test
jnp
jp
lea
stos
jbe
or
mov
jno
inc
and
xor
mov
and
mov
xor
loopne
mov
mov
shll
dec
iret
xlat
xor
mov
push
stc
push
mov
popf
stos
out
dec
jl
out
pop
xor
pop
cmp
loopne
push
inc
pop
jge
outsb
ss
xor
cli
pushl
mov
mov
jg
add
xchg
pusha
mov
push
divb
fdivs
adc
repz
rcrl
movsl
mov
mov
add
pop
gs
lret
pop
xchg
lock
dec
mov
add
or
mov
out
inc
xchg
stos
jo
in
lret
emms
int
add
sub
hlt
sbb
cwtl
mov
test
cltd
lret
out
fcomi
nop
stos
ljmp
jno
sub
cmp
into
cmp
rcr
xor
mov
mov
jle
fmul
imul
ljmp
mov
inc
jo
push
cmp
adcl
jp
inc
repnz
inc
pushf
sub
mov
pop
sub
sub
jg
mov
lcall
mov
push
push
xor
pop
push
lods
jns
mov
ret
xchg
jns
jno
sub
sbb
leave
in
pop
jns
mov
jne
pusha
mov
cs
ret
xchg
sbb
shlb
es
dec
inc
and
enter
mov
jl
dec
mov
xchg
cmp
leave
mov
jb
hlt
and
xchg
or
jne
inc
jbe
mov
cmp
and
cmp
out
push
sub
popa
mov
enter
cld
mov
cltd
mov
sbb
aaa
sub
dec
movl
pop
loope
fiaddl
or
inc
sub
dec
lahf
pusha
negl
jbe
add
add
pushf
cmp
dec
add
mov
jge
push
iret
push
fnstsw
iret
loop
mov
cld
mov
cmpsl
shll
mov
cmpsl
inc
test
clc
in
inc
aam
sbb
jecxz
stos
ret
stos
inc
loope
negb
add
insb
cwtl
cmpsl
fcomi
mov
pop
bound
ljmp
mov
divb
movsb
outsl
dec
rcr
pop
mov
or
mov
or
out
clc
push
popf
pop
jle
mov
jae
repz
daa
es
jecxz
mov
dec
in
in
xchg
ficoml
dec
bnd
mov
push
out
dec
stc
mov
repz
lock
insb
in
jle
pop
jg
test
push
push
jbe
pop
mov
mov
and
mov
add
pusha
popf
mov
call
aas
cmp
in
xor
or
loop
out
outsb
pop
pop
aaa
push
push
mov
inc
sub
ja
or
fisubs
mov
push
clc
jmp
xor
lcall
pusha
mov
loop
mov
mov
fsubrs
pop
dec
jb
sbb
pop
cmp
jns
popf
mov
or
mov
clc
xchg
aam
inc
das
scas
aam
in
push
cmp
dec
repnz
add
lock
daa
lahf
repnz
out
stc
cmpsl
mov
mov
pushf
or
inc
fldenv
fwait
or
into
and
push
mov
pop
out
push
movsl
sbb
pop
jno
jno
call
jno
sub
xor
cmp
dec
call
adc
test
and
jne
mov
add
nop
ficomps
push
and
gs
aas
nopl
fcoml
cmpsl
pop
adc
mov
dec
popa
pop
sbb
jle
mov
out
in
popa
nop
jg
sub
jb
fdivl
mov
mov
and
xchg
lock
push
adc
out
test
push
sbb
cmpsl
xchg
pop
push
dec
std
xor
inc
inc
sbb
adc
out
rcll
xchg
jno
hlt
push
mov
aaa
pusha
hlt
pop
test
xor
int
jge
mov
add
push
pop
icebp
or
les
add
mov
stos
lea
stc
jg
or
in
sbb
xor
push
xor
cmp
adc
cwtl
cli
dec
jl
rol
xchg
sbb
fs
iret
push
dec
movsl
loopne
mov
aad
out
jno
jne
stos
outsl
jmp
mov
pop
cmp
and
imul
mov
mov
lret
sub
add
inc
cmp
push
icebp
mov
aaa
les
lock
or
sub
enter
cmc
xor
popa
xorl
sbb
orl
outsl
mov
dec
and
lret
jns
push
imul
daa
xchg
mov
cs
in
inc
adc
das
ret
pusha
fstps
fistl
hlt
push
int3
lret
mov
lahf
addr16
mov
stos
push
and
dec
fbstp
mov
inc
and
fsubrs
inc
das
pop
popa
in
add
xor
or
imul
mov
fisttpll
mov
cmp
push
mov
jle
inc
sbb
addb
cmp
ret
fdivrs
push
pop
mov
lret
popa
mov
pop
cltd
call
mov
mov
mov
xchg
xchg
out
and
xsave
scas
push
sub
add
inc
test
cmc
sub
push
xor
lcall
mov
adc
pop
or
movsl
pop
ljmp
fstpt
subl
pop
jno
int
in
lock
mov
xchg
sub
xor
mov
int3
shr
push
repnz
out
in
pop
clc
jb
lret
mov
popf
mov
mov
xlat
or
pop
ds
or
sub
idivl
xor
sarb
mov
push
dec
inc
mov
adc
cmc
jnp
stc
push
jg
inc
cmp
cs
in
sahf
loope
nop
stc
aad
out
mov
ret
jo
lret
in
push
jl
push
jl
gs
lea
xchg
aas
pop
sti
lahf
mov
mov
faddl
xor
cmpsl
enter
xchg
imul
cmpb
or
pop
sub
dec
mov
mov
loope
subl
std
xor
ja
rorl
xor
dec
imul
outsl
jg
push
and
sbbl
add
jmp
sbb
xchg
and
pop
adc
xchg
sbb
adc
shl
jmp
int3
out
sub
stos
jne
fistps
mov
bound
push
xor
mov
call
enter
sbb
addr16
in
fs
push
mov
push
or
mov
jbe
push
add
or
lods
popl
xchg
jmp
fs
mov
mov
xchg
add
mov
push
push
sbb
lret
das
lret
ss
xchg
cwtl
push
hlt
push
outsb
test
cmp
loope
mov
sub
subb
add
jp
xchg
loope
cmpsl
push
mov
adc
ret
mov
aas
frstor
pop
xchg
lods
inc
sbb
stc
js
push
jle
xchg
mov
ss
call
shrl
mov
out
sub
daa
sti
rcrb
mulb
jecxz
mov
push
inc
cmp
push
add
lea
repz
or
mov
cmp
cwtl
adcl
rorb
sub
jae
dec
cmpsb
ret
idivb
call
add
pop
fistpl
push
cli
lahf
rcl
mov
imul
lock
cmp
sti
je
nop
fwait
repz
xlat
stos
push
fistps
or
sbb
dec
aam
push
shll
mov
mov
and
sbb
in
dec
dec
ficoms
scas
jne
sarl
mov
nop
sarb
inc
arpl
jbe
add
jno
and
lock
inc
test
dec
adc
pop
fwait
sub
xor
stos
cmp
std
push
call
mov
mov
lea
mov
sub
dec
xor
push
cmp
dec
shr
imul
dec
daa
sbb
and
inc
jmp
cmp
sbb
mov
xchg
xor
jns
push
in
mov
jne
and
sub
daa
loopne
dec
adc
xchg
push
xchg
lods
push
pop
mov
mov
sub
das
mov
mov
loop
and
test
cmp
nop
pushf
mov
les
jmp
xor
insb
fldl
rolb
push
nop
into
aas
and
adc
loope
pop
rcl
fildl
loopne
pop
xchg
outsb
cld
cmp
dec
ja
sarl
stos
sub
cmp
add
xchg
roll
adc
mov
xchg
repz
stos
and
xor
inc
inc
ds
jmp
inc
adc
fs
cli
dec
mov
leave
add
jge
enter
lret
icebp
push
push
fisubrl
jge
fs
cmp
into
adc
outsb
ja
insl
fwait
insb
mov
sarb
mov
pop
cmpb
cmpsb
rorb
test
pop
mov
lock
xchg
xor
xchg
mov
mov
mov
cmp
cmp
daa
rcrl
shrd
mov
inc
sub
xchg
fdivs
sbb
adc
loop
inc
jmp
les
inc
mov
and
prefetcht0
fsub
and
xchg
and
dec
push
movsl
and
lret
pushf
pop
dec
inc
jns
inc
popf
jge
sbb
mov
imul
xor
mov
nop
dec
add
pop
mov
sbb
js
hlt
jns
push
aad
pop
push
jg
arpl
loope
nop
jmp
mov
mov
lret
mov
rorb
clc
cmp
mov
mov
cmp
sbb
pop
sbb
lods
dec
or
push
push
outsl
cmpsb
push
lods
gs
dec
test
mov
test
dec
out
xchg
xor
stc
sarb
movsb
or
out
addl
mov
dec
arpl
cmpsl
sub
xor
sbb
inc
sbb
sahf
call
fisttpl
pop
mov
in
aad
push
or
in
dec
in
push
mov
aas
or
adc
sarb
out
and
sub
dec
add
into
inc
jbe
add
rcrl
test
inc
push
imulb
or
or
cld
out
mov
and
mov
sub
cmpsl
shll
loopne
stc
and
mov
fisttpl
mov
push
ja
out
mov
dec
les
mov
fcomp
out
cmp
and
andl
fs
push
sub
push
ret
loope
inc
ja
cwtl
pop
and
cmp
in
in
xchg
xchg
aaa
mov
cmpsb
add
or
insl
sub
push
pop
sbb
push
sahf
and
lds
cli
pop
out
filds
xor
xlat
inc
sub
lods
dec
pop
into
add
jge
jp
fcomi
popa
es
popa
jae
ror
ljmp
pop
push
adc
fnstenv
push
rcl
dec
pop
es
shll
loop
outsl
xor
and
testl
mov
push
lret
xor
dec
mov
in
test
fdivrp
jnp
jecxz
rcrb
loop
xlat
pop
add
aaa
outsl
cltd
sub
inc
cmc
ja
fs
enter
movsl
aaa
and
sub
cmp
xchg
sbb
or
cmp
sub
cmpsb
movsb
or
mov
inc
stc
rolb
mov
jmp
push
sbb
int3
cltd
jg
movsl
jecxz
lock
test
cmpsl
pop
sub
cmp
mov
dec
pop
push
call
mov
in
call
in
jae
pop
jb
jle
repz
xchg
popf
ds
rcrl
sarl
adc
out
jbe
pop
cmc
cld
stos
pop
dec
int
inc
pop
push
popf
inc
or
mov
mul
jb
aad
xchg
je
mov
push
xchg
lods
fwait
or
cmp
fwait
jnp
jo
inc
ficompl
pop
lods
mull
dec
jbe
mov
ds
adc
add
jmp
adc
nop
test
addr16
in
movb
aam
mov
xchg
insb
cmp
cmpsl
arpl
sti
add
mov
mov
pop
icebp
sti
pusha
cmpsb
pop
cmc
inc
fdivp
or
in
cmpsl
aaa
cmpl
jnp
repnz
add
cmp
xchg
movsb
mov
sti
cmp
into
push
mov
sahf
cmpsb
sbb
bound
aas
ss
jmp
insl
lcall
int
lea
mov
pop
inc
fdivl
repz
into
lea
inc
stc
add
dec
rcrl
xor
pop
lods
fsubs
jnp
jmp
addb
xor
pop
push
outsb
les
ret
scas
arpl
sub
in
ja
scas
mov
rcll
mov
rcrl
cmpb
cmp
cwtl
les
cmp
mov
les
es
cmc
scas
shrl
lods
call
jnp
add
scas
test
dec
jne
mov
outsb
jb
std
dec
sbb
xor
inc
aam
push
pop
and
cs
scas
decl
jae
sbbl
std
dec
pop
xor
fldenv
xor
daa
mov
cwtl
orl
or
shll
mov
cmpsb
adc
or
mov
pop
imul
adc
add
dec
push
sub
mov
call
or
hlt
or
in
outsb
adc
pop
mov
rclb
and
push
lret
insl
dec
sub
sbb
imul
xchg
adc
adc
and
aaa
jp
add
jnp
pop
ja
inc
mov
fcmovnu
push
dec
push
sub
adc
lahf
mov
xchg
lods
mov
test
scas
push
jmp
loop
sub
adc
pop
xchg
cmp
cmc
or
fidivrl
inc
fistps
shl
dec
rcll
ss
in
push
ds
sub
or
mov
int3
pop
rol
nop
xor
add
or
push
xlat
cmp
mov
inc
and
aaa
sub
in
lahf
movsb
frstor
pusha
call
aad
xchg
push
sbb
mov
repnz
andb
jnp
and
xchg
pusha
add
popa
fwait
mov
ficoml
test
and
je
dec
mov
sub
outsl
lcall
aad
jecxz
cwtl
outsl
push
cmpsl
loop
dec
add
add
mov
dec
inc
test
rolb
fninit
adc
enter
sbb
jno
test
fidivl
cwtl
push
ljmp
loopne
adc
shlb
insl
add
xchg
dec
add
pushl
sarb
inc
xor
push
and
cmpsl
inc
into
in
rorb
ljmp
repnz
mov
test
arpl
es
pop
or
cwtl
aas
dec
mov
addl
outsl
jns
out
pop
fcmovb
loop
fwait
sbb
adc
and
into
or
mov
sub
jnp
pop
add
subb
mov
jns
push
jmp
cmpsl
sarb
orb
aam
mov
rcr
xchg
ret
or
bound
pop
xor
icebp
scas
xor
fwait
sbb
aaa
and
xlat
loop
aad
lock
add
movsb
rcrl
or
jae
pop
inc
gs
fwait
call
frstor
shl
jge
mov
sub
cmpsl
imul
pop
in
inc
dec
fwait
jecxz
inc
cmp
outsb
adc
mov
ficoms
addr16
jg
xor
nop
jecxz
mov
jp
pop
lods
bound
imul
or
xor
ret
sbb
daa
test
inc
loop
dec
sarl
stos
mov
or
pop
or
pusha
call
aad
loopne
sbb
pusha
loop
sub
inc
xchg
js
fwait
add
pop
js
sarl
sub
fistpl
std
jge
shll
fs
or
or
into
and
lcall
and
sti
xchg
mov
cmp
jo
mov
mov
xchg
shl
add
jle
mov
inc
jbe
jbe
add
xor
incb
jnp,pt
sub
les
xor
es
insl
push
pushf
sub
sbb
imul
inc
int
int3
mov
mov
xchg
push
test
movsl
jg
xchg
dec
out
test
mov
dec
ret
push
aaa
imul
mov
adc
sub
lods
add
inc
mov
mov
mov
xchg
push
push
lods
dec
mov
jmp
das
into
mov
adc
out
or
mov
in
test
repnz
sti
cmp
xchg
clc
enter
insl
sbb
loopne
ljmp
rol
mov
movsl
push
xchg
jo
lock
mov
jns
inc
call
pushf
fistpl
push
lret
pop
fisttps
arpl
orps
dec
cmp
fmull
and
jbe
push
xor
push
stos
fistps
cmp
inc
stos
xchg
shlb
xchg
repz
test
ror
sbb
pop
stos
jae
test
mov
jae
adc
adc
cmp
lret
sbb
in
js
sub
jecxz
or
movhps
or
cld
fs
popa
daa
mov
jnp
adcl
rcrl
test
je
mov
push
out
out
ret
ret
push
out
sub
es
lret
test
movsl
andb
test
pop
movl
and
pop
lret
fstpl
jne
adc
xchg
dec
int3
pushf
xor
aam
loope
push
lahf
xor
jmp
dec
pop
push
dec
into
mull
loop
add
mov
in
push
xlat
mov
imul
popa
jmp
push
rorl
pushf
andl
inc
sbb
popa
xchg
xchg
mov
jecxz
lret
int
mov
push
cmpsl
push
inc
jns
cs
lods
lret
cli
cltd
cmp
jg
loopne
inc
and
dec
jg
and
xchg
mov
in
fwait
sbb
or
mov
repnz
push
es
fisubrl
ret
adc
mov
insl
aas
decb
dec
xlat
mov
aam
jae
pop
mov
xchg
cmp
dec
sub
icebp
pop
xor
fs
enter
jbe
aad
and
repnz
and
and
pop
sub
pop
pop
pop
push
imul
icebp
xchg
push
dec
inc
or
xor
xchg
sbb
shr
mov
sub
ret
call
outsb
and
sti
scas
lret
lea
xchg
inc
arpl
mov
icebp
jl
push
lock
mov
das
xlat
lods
pop
enter
mov
aad
sarl
imul
fsubl
daa
push
test
aad
rcrb
dec
aaa
push
mov
das
add
aaa
adc
push
xor
jo
loopne
add
jp
js
out
pushf
pop
and
mov
xchg
test
andb
xor
cmpsb
pop
fiadds
lea
gs
xlat
and
in
lods
outsl
dec
push
push
cmp
nop
stos
into
movsb
call
les
jle
inc
jo
out
dec
dec
push
xchg
mov
movsb
push
push
xor
cmp
ja
dec
adc
add
or
shll
outsl
push
fildll
rcrb
sbb
ss
adc
pop
cmc
testb
cwtl
adc
nop
inc
pop
mov
cmpsb
jge
jo
inc
aam
jno
pop
jecxz
cli
in
pop
fwait
cmpsl
ror
stc
pushf
idivl
and
mov
fwait
shl
push
rsm
adc
or
push
and
mov
jnp
nop
sbb
push
aam
or
sbb
pushf
lods
inc
jmp
pop
test
in
pop
cmpsb
mov
xchg
xor
divb
jne
fmuls
adcb
push
or
mov
clc
inc
cmp
xor
push
inc
add
ret
dec
pop
pop
imull
pop
cmp
shlb
sarb
addr16
pusha
pop
cmp
notl
adc
loope
fistpll
add
test
in
gs
ficoml
mov
out
cmp
jge
scas
mov
or
adc
xchg
pop
inc
lds
push
cmp
psadbw
movsl
xchg
div
mov
push
cld
call
popf
rcr
iret
xchg
xchg
js
test
mov
xchg
pop
repz
sub
cltd
div
roll
or
dec
repz
mov
enter
mov
and
mov
xchg
cmp
mov
and
ret
sarl
outsl
cld
dec
jle
sbb
push
add
mov
dec
in
sti
mov
imul
cmp
add
push
xor
insb
jmp
mov
aam
fs
aad
add
sbb
popf
fistpll
in
xchg
pop
jge
jecxz
fcomps
icebp
lret
mov
lods
or
push
or
js
dec
imul
add
xchg
call
leave
ret
mov
test
addr16
dec
popa
test
roll
pop
jb
mov
push
adc
iret
in
pop
cmpsl
cmc
mov
aam
dec
dec
push
xchg
idivl
push
pop
adc
rorb
out
xchg
or
cltd
lahf
fidivs
movsb
or
test
addr16
mov
loop
xor
jno
mov
jbe
andb
sub
scas
enter
inc
push
orb
inc
stc
pop
fildll
and
sbb
ret
add
jecxz
insl
push
ret
gs
sbb
xchg
insl
xchg
sub
addr16
repnz
inc
dec
xlat
pop
in
dec
or
ret
stos
aaa
fdivl
dec
xchg
call
orb
loop
clc
fstps
push
loop
pop
test
adc
aad
into
cmp
loopne
or
sub
cltd
sti
daa
fucomi
adc
aam
mov
repz
fsub
pusha
aas
pop
mov
fs
add
sub
ss
je
mov
mov
xor
fsubs
hlt
add
cmpsl
cwtl
and
cmp
sub
mov
fdivs
dec
xchg
mov
loop
mov
push
dec
jo
cli
jp
inc
call
ret
and
pusha
fdivrl
jge
fidivrs
ljmp
gs
lods
icebp
adc
inc
test
pushf
fiadds
xor
daa
hlt
pop
fld
mov
push
pop
push
xchg
xor
dec
test
xchg
in
pop
adc
mov
mov
mov
jecxz
jbe
mov
in
mov
add
stos
sbb
sti
js
mov
push
push
loope
cmp
jnp
aaa
sahf
cmp
daa
daa
or
movsl
int3
jge
jns
pop
pop
cmp
stc
loop
testb
mov
mov
mov
mov
dec
cmp
pop
pop
add
pop
stos
sbb
fistl
dec
in
xor
test
int
cmp
xchg
push
cltd
mov
push
mov
lahf
cmp
sub
pushf
cwtl
sub
mov
cmp
in
mov
mov
lahf
xor
fsubrs
pop
lds
xchg
mov
pushw
xchg
iret
outsb
aaa
cld
aad
sbb
hlt
mov
fcoms
fcomp
mov
push
dec
mov
in
sbb
mov
aaa
shrl
cmp
jl
repnz
dec
rorb
aad
pushf
int
pop
jnp
adc
repnz
clc
xor
pop
lds
ja
push
mov
inc
jae
mov
mov
or
or
jle
gs
test
and
jecxz
lds
test
sub
int3
pusha
int
lcall
test
lods
sbb
popa
fdivs
jle
mov
adcb
je
xor
mov
icebp
into
sub
fisttps
loop
add
int
out
sub
out
cmc
xchg
sub
scas
and
mov
xchg
and
or
jecxz
mov
cmp
sub
jbe
jmp
lods
out
enter
fwait
out
lcall
sbb
outsb
dec
push
pop
xchg
push
push
push
sbb
popf
scas
cs
jl
fnstcw
bnd
movsl
mov
or
push
push
sub
call
pop
test
mov
sub
push
nop
loop
inc
das
add
loopne
jnp
pop
adc
fisttpll
dec
loopne
nop
cmpsl
ja
jbe
test
and
and
sub
dec
dec
xor
xchg
test
and
lcall
pushf
mov
ja
dec
mov
call
mov
push
lret
sub
fiaddl
outsl
out
outsl
nop
or
mov
aam
xlat
addr16
leave
out
sbbb
push
int
stos
stos
xlat
mov
jnp
out
clc
fidivs
aam
mov
imul
clc
sub
and
mov
sub
add
jle
loopne
aam
popf
push
mov
xlat
mov
pushf
jae
jns
cltd
and
or
push
pop
jo
sahf
pop
jae
dec
or
inc
push
push
cltd
push
enter
mov
lods
push
mov
test
or
mov
sub
lahf
mov
hlt
dec
add
adc
loopne
test
mov
xor
nop
imul
aad
nop
enter
std
jo
loope
lea
cs
pop
inc
ret
pop
push
fcomps
push
adc
aam
lahf
and
xchg
jmp
mov
cmp
push
push
sbb
lods
mov
jno
lods
dec
sub
int3
popa
add
ds
pop
sub
or
fimuls
insl
stos
fwait
sbb
faddl
lods
jbe
mov
fidivrs
lods
aas
jne
cmp
mov
loope
nop
mov
sbb
in
xchg
xchg
test
negl
jecxz
cmp
dec
mov
jno
cmp
sti
sbb
mov
inc
mov
push
xlat
movsb
test
sbb
movsb
fldenv
add
push
pusha
bswap
dec
dec
or
mov
ljmp
jl
lods
and
int
test
fs
fmul
inc
stos
lock
mov
daa
scas
fs
clc
mov
int3
scas
in
adc
shl
inc
inc
std
xor
enter
mov
insl
push
mov
ds
fcos
jle
push
push
mov
mov
aas
sbb
call
je
jns
lret
xchg
fists
imul
jg
push
outsb
popa
mov
dec
outsb
test
scas
adc
ljmp
mov
sar
insb
lret
lret
or
pop
add
or
lods
add
outsl
cmp
imul
cmp
sti
ja
ds
es
test
sbb
and
clc
push
pop
pop
je
mov
mov
out
or
pop
fcomip
popf
sbb
and
sbbl
sti
pop
xchg
lret
and
push
fnstsw
dec
into
fs
gs
ss
outsb
mov
mov
xlat
popa
test
mov
andb
fbstp
cmpsl
jo
mov
sahf
js
sbb
lret
fidivs
push
inc
mov
cmp
negb
imul
add
pop
mov
aam
icebp
mov
lock
cmpsl
pusha
or
lods
sub
mov
lcall
push
aas
enter
or
int3
pop
stos
cmp
in
mov
jo
pop
cmp
adc
std
mov
icebp
test
pop
sti
iret
cmp
jb
xor
out
mov
push
mov
cmp
push
xlat
mov
out
scas
movsl
add
fcoml
xchg
arpl
ret
lock
outsb
mov
push
inc
mov
push
mov
adc
ss
push
cmp
out
outsl
out
mov
pusha
mov
mov
out
popa
nop
lock
ds
shrl
jle
pop
mov
add
pop
fdivrp
movsb
ljmp
jno
into
xor
leave
jb
lea
and
and
jb
call
cmp
xlat
pop
mov
push
imul
out
into
jl
xchg
out
adc
mov
and
test
inc
jnp
outsb
aam
gs
xchg
cmp
leave
jns
repz
inc
outsl
inc
fsubl
shrl
add
lds
mov
addr16
mov
dec
push
push
jnp
in
mov
lds
sarb
fnsave
xor
jle
cmc
ret
push
add
stc
gs
in
mov
mov
scas
pop
or
out
adc
js
orb
dec
push
xchg
loopne
dec
fwait
add
pop
scas
sbb
pop
adc
inc
scas
or
add
xchg
or
mov
test
push
adc
cmpsl
jo
fldcw
jecxz
or
scas
jmp
sbb
mov
cmpsl
stos
and
mov
lahf
sub
mov
mov
push
mov
fdivs
imul
pop
lea
jmp
ret
xor
in
cmp
xor
in
daa
lea
int3
jle
mov
lds
imul
add
or
mov
xchg
mov
jae
mov
test
mov
ficompl
outsb
dec
int3
leave
rol
test
fcomps
pushf
add
aaa
aas
in
test
jg
inc
int
ret
push
cmpsl
mov
push
adc
daa
jle
push
pop
cs
mov
dec
push
cmp
clc
test
repz
or
mov
jns
jbe
in
dec
lret
sub
xor
jnp
setge
clc
imul
or
movsb
int
repnz
push
insl
cmp
sarb
insl
cltd
stos
arpl
adc
jle
dec
add
push
outsl
out
and
aad
outsl
fidivrl
mov
mov
mov
cmc
lret
cmp
in
mov
jnp
shl
cmpsl
xchg
sbb
sbb
and
mov
cmp
hlt
into
adcl
stc
data16
jecxz
sahf
icebp
pop
fdiv
and
shrl
es
loopne
push
fistpll
fbstp
das
jns
jbe
mov
scas
push
mov
lds
cmpsl
incb
pop
dec
jo
mov
jo
mov
xor
hlt
jl
add
jecxz
scas
shlb
popf
push
jmp
ret
push
lock
ficoms
ffreep
sbb
mov
or
xchg
push
cmp
add
mov
mov
call
push
sbb
pop
xchg
adc
cmp
std
xor
xlat
mov
jb
shlb
inc
push
insl
sbb
lods
divl
subl
outsl
iret
ds
pop
cmp
xchg
pop
jae
sub
stos
mov
aad
pop
test
dec
out
int
loop
add
mov
sub
mov
dec
gs
mov
cs
jl
jae
and
jl
cli
loopne
jb
loop
repz
stos
insl
and
enter
pop
cmp
shlb
sub
roll
or
fwait
push
cmp
lds
sub
sbb
sbb
rcr
push
fs
arpl
nop
and
gs
in
aam
shrb
inc
outsl
xor
sub
and
shll
out
adc
mov
push
lret
fsubl
mov
xchg
sbb
jmp
sub
add
adc
rolb
sub
jecxz
jp
into
pop
or
inc
mov
cmp
nop
movl
mov
push
push
je
in
repz
scas
movsb
push
sub
mov
dec
sub
ret
popa
mov
outsb
mov
mov
ret
fbld
shlb
push
sub
cmc
cmp
mov
jns
push
scas
mov
test
sbb
xchg
repnz
pop
leave
arpl
jnp
xor
jecxz
lsl
pop
push
movsb
cmpsb
mov
xor
jae
lret
lock
mov
loope
push
mov
ss
vpshufhw
fsubrl
inc
shrl
xor
xchg
xchg
daa
pop
sbb
popf
maxps
lods
pop
clc
pop
mov
fidivl
xor
je
call
cmp
mov
lcall
clc
jge
jg
dec
lock
or
rcpps
icebp
adc
insb
test
out
cltd
mov
sbb
mov
mov
mov
hlt
insb
notb
pop
or
lock
test
fdivr
and
imul
loopne
ds
aaa
sub
out
jbe
push
daa
aas
lret
nop
xchg
dec
mov
das
loop
xor
push
push
xor
mov
clc
or
mov
mov
negl
popa
ja
stos
and
or
mov
mov
lds
es
cmc
adc
aaa
test
int
sub
scas
mov
jl
pop
aam
lahf
lock
cmpsl
or
outsl
fisttpll
fldcw
rcll
fs
push
std
cmp
xchg
cmc
xchg
adc
push
xchg
sbb
into
test
sub
data16
and
jb
pop
sbb
and
loope
jecxz
ret
popa
lock
outsl
xchg
imul
aaa
enter
jg
and
out
mov
fstpl
out
imull
inc
iret
daa
adc
mov
imul
loopne
jge
mov
mov
out
mov
inc
mov
out
aam
jp
push
sub
jno
aam
sti
aaa
jg
out
mov
push
icebp
xlat
popf
mov
sub
or
add
cmp
fcoml
adc
mov
out
push
cmp
and
ret
cmpsb
sub
inc
jl
inc
mov
jmp
idivl
rcr
lahf
dec
xchg
cmp
jo
xlat
cmp
outsl
xor
inc
jno
mov
cmp
in
pop
push
xchg
dec
addl
adc
lock
lret
pop
jge
shl
rorl
call
xchg
sbb
xor
inc
loope
sbb
nop
sbb
ss
sbb
in
shl
cmp
sub
clc
and
pushl
les
scas
call
push
les
push
push
in
fisttpll
cli
jg
pop
sahf
cmp
or
dec
mov
aad
outsl
scas
inc
push
fimull
cld
pop
push
cli
push
push
sub
and
mov
icebp
or
cmp
call
stos
repnz
mov
test
or
hlt
js
test
cltd
xchg
push
jns
imul
xorl
jns
addl
enter
or
push
cmp
xor
inc
and
dec
fiadds
enter
test
push
add
int
xor
xchg
pop
sub
mov
xchg
add
lcall
add
pop
mov
cmpsb
outsl
js,pt
std
mov
adc
jmp
jo
cwtl
stos
mov
sub
cmp
mov
mov
gs
neg
lock
xor
inc
jl
lea
rorb
mov
mov
movsl
aas
int
push
jge
mov
mov
xorl
repnz
cmp
jmp
fs
adc
pop
mov
push
test
add
pushw
jae
test
push
outsb
push
mov
cwtl
popf
add
dec
call
inc
fs
bound
fnstenv
xchg
nop
mov
fdivrl
bound
addb
enter
xor
jb
movl
or
add
fwait
iret
fisubrs
outsb
shr
sbb
out
loopne
push
mov
stos
loopne
aam
xchg
pushf
xchg
mov
mov
inc
push
mov
ljmp
sahf
push
mov
push
jmp
sbb
sub
or
cs
mov
mov
inc
ljmp
xchg
fmuls
add
shrl
mov
or
lock
call
pusha
loope
ss
fildll
or
xchg
xor
push
mov
or
mov
mov
insl
cmp
add
dec
movsb
in
addl
fisubrs
scas
loop
mov
loope,pt
clc
mov
xchg
popf
sti
out
scas
lods
ret
outsb
mov
repnz
push
jp
neg
jae
hlt
das
add
cmp
shr
mov
insl
es
bound
jnp
inc
add
js
pop
inc
cmc
mov
nop
popf
jmp
adc
cld
inc
dec
xchg
lahf
mov
sub
repnz
sub
cli
sub
push
xor
dec
fcoms
mov
call
mov
jg
ret
lods
adcb
hlt
sub
push
adc
test
mov
les
inc
hlt
xchg
push
popf
mov
in
dec
js
push
nop
lahf
ret
add
fadd
int
jns
fcmovbe
and
mov
jne
cmp
clc
incl
cmp
enter
fwait
xchg
mov
lcall
or
out
mov
inc
nop
jno
andl
add
cmc
add
xor
in
xor
es
bound
loopne
cwtl
pop
xchg
pusha
add
sub
pop
xchg
mov
sbb
jmp
leave
ss
inc
adcb
push
mov
test
cli
cmp
fs
neg
pop
nop
popa
push
enter
add
xor
mov
adc
mov
insb
mov
lahf
mov
hlt
inc
mov
stos
aad
std
fdivrs
jmp
outsl
frstor
mov
push
cld
ror
rorl
ljmp
sbb
mov
sti
icebp
sbbl
shlb
xchg
mov
pmaxub
adc
ss
lahf
pushf
jb
repnz
imulb
cmpsb
mov
jnp
jae
out
mov
cmp
hlt
mov
in
fisubrl
aam
call
push
inc
dec
or
stos
mov
call
cltd
jno
lds
fisttpll
call
sti
jnp
shll
or
jp
call
pop
mov
jecxz
xor
ret
push
push
pop
xor
das
pop
ret
push
mov
sti
cmp
mov
popf
in
inc
fnstenv
les
mov
mov
cmp
jecxz
inc
fsubl
arpl
test
lcall
xor
movl
pushf
or
and
xchg
int3
push
inc
stc
adc
fstl
cld
mov
dec
and
bound
mov
and
sarb
aad
add
adc
fistpl
adc
xorl
sbb
fiadds
in
jl
cmp
out
adc
mov
dec
pop
popf
pop
push
ud0
loopne
lret
test
add
scas
jp
xchg
ja
inc
stc
xchg
sbb
rolb
ret
ljmp
lods
add
loope
cmp
cmp
lret
or
cmp
shlb
or
fstps
frstor
add
bound
lods
dec
jge
mov
and
push
cmp
inc
dec
mov
arpl
stos
ret
mov
push
xor
jnp
inc
mov
filds
push
pushf
insl
or
sub
stc
push
push
fisttps
lds
ficoml
ret
inc
in
ret
mov
fmul
lock
inc
push
jle
push
mov
or
xchg
lods
subb
xchg
or
xor
out
cld
std
jns
lds
jo
movsb
adc
pop
fcmove
imul
es
and
and
pusha
mov
mov
cmc
add
pushf
movsb
sub
repnz
jbe
out
push
inc
push
loope
cmpsl
imul
bound
adc
mov
sbb
mov
adc
scas
scas
stos
xchg
out
xchg
mov
pushf
out
and
xor
xchg
pop
xor
lock
adc
mov
sub
jae
jle
lea
in
les
mov
mov
sub
pop
sbb
xchg
jne
ss
lret
dec
push
pop
cmp
cli
xor
fs
sub
decb
ja
jae
xor
andl
ds
stc
sub
cmp
stos
mov
stos
icebp
cmp
cmpsl
dec
jmp
mov
and
das
fnstsw
inc
pop
xchg
out
enter
mov
push
aam
mov
mull
dec
sub
sub
xchg
stc
icebp
popf
fisubrl
jge
jb
loopne
imul
sub
jae
fdiv
add
test
movsb
stos
push
outsl
es
test
lahf
push
sub
inc
inc
stos
loopne
inc
jmp
pop
lods
lods
test
jb
jge
aad
cmpsl
loope
adc
mov
inc
mov
mov
sub
or
add
push
pop
dec
xchg
andb
subl
lods
test
push
pop
sub
lock
jecxz
push
dec
push
test
cmc
mov
cmp
mov
lcall
and
in
loope
bts
add
std
cmp
or
sub
icebp
jmp
push
jb
dec
lret
jg
or
xlat
sub
lea
bound
call
mov
mov
mov
xchg
mov
pushf
xchg
stc
icebp
insb
jg
jae
addb
mov
mov
push
mov
shrl
xorb
testl
add
push
inc
popf
test
inc
lcall
outsl
pusha
movsl
movsl
fldl
pop
mov
or
lahf
push
dec
push
sbbl
and
cmpsl
lcall
or
inc
xchg
push
push
sbb
and
test
rcrb
int3
and
push
dec
xorl
mov
testb
adc
sub
mov
in
jg
xchg
xchg
xchg
xor
lods
shrl
mov
jmp
sarb
mov
test
pop
stos
repnz
mov
or
in
jl
or
nop
cmp
xchg
stc
sbb
outsb
rorl
inc
loopne
nop
fiadds
xchg
shlb
add
cmp
aam
bound
xchg
rep
jmp
mov
push
icebp
inc
insl
rorl
pushf
adc
or
xchg
pop
xchg
in
ret
int
arpl
mov
lcall
fstl
movsb
and
sub
fsubl
push
jno
sbb
cmp
jmp
mov
les
push
rorl
jecxz
out
repnz
mov
add
lods
ret
rcll
loop
pop
out
xchg
fisubrl
leave
dec
in
xchg
mov
or
cmp
imul
cs
jne
mov
and
dec
ret
sbb
and
dec
cltd
addb
cli
or
sbb
mov
mov
mov
test
inc
je
cld
mov
dec
dec
jae
sbb
shl
inc
pop
mov
mov
dec
loop
mov
pop
cmp
cltd
cmp
jp
add
adc
add
xor
xor
dec
jle
mov
sub
sbb
bound
jno
js
inc
fistl
xchg
xor
inc
fwait
adc
sub
movsb
lea
pop
test
sub
inc
adc
arpl
addr16
push
fiaddl
sub
cmp
sub
leave
andl
add
mov
pop
mov
pusha
adc
js
int
cmc
rcl
pop
das
pop
mov
adc
lods
aam
fisttpl
fsubs
stos
sahf
pop
push
jg
std
dec
pop
in
loope
aaa
push
or
mov
xchg
fstpt
pushf
mov
jo
or
cmp
mov
and
and
sbb
lods
int3
push
ret
jge
or
or
xchg
mov
sti
jne
pop
push
and
stos
dec
aam
add
mov
dec
int
push
cmp
data16
ret
sar
enter
inc
ret
lods
and
shlb
mov
in
sbb
xchg
and
inc
fildll
ret
adc
cltd
add
push
orl
xlat
adc
lods
xor
cmp
and
bound
das
pusha
add
mov
push
pop
xor
pop
adc
jmp
sub
xchg
xor
test
jle
test
push
mov
push
ja
pushf
lret
pop
add
dec
mov
aaa
jl
pop
jno
and
hlt
cwtl
xchg
adc
loop
pop
mov
dec
int
sbb
loope
xor
push
or
call
les
lcall
inc
or
pop
cltd
sub
xor
inc
jecxz
and
inc
std
and
out
pop
adc
xchg
inc
int3
jo
std
xchg
rorb
pop
lcall
mov
lahf
popf
mov
jecxz
xor
cmc
lods
jg
jns
mov
ds
or
test
dec
ljmp
mov
or
add
push
out
xchg
out
mov
inc
mov
mov
das
daa
dec
shlb
scas
jne
pop
dec
inc
cmp
scas
inc
sub
fbstp
and
ffree
cli
dec
mov
jp
jno
push
inc
addr16
jge
dec
jecxz
jge
lcall
xchg
mov
lods
push
fs
arpl
clc
pop
sub
fdivp
xor
cmp
or
roll
ljmp
loopne
push
pop
lahf
mov
or
jle
and
xchg
mov
pop
shr
sahf
cwtl
cs
jp
aad
scas
mov
int
and
into
sbbl
dec
push
xchg
fidivrl
ja
sub
jl
popl
in
xor
popa
adc
inc
ljmp
imul
mov
inc
daa
adc
cli
mov
ffree
pop
test
repz
ss
jle
sbb
xchg
out
sbb
aas
inc
xchg
jne
sbb
stos
mov
and
adc
push
pop
mov
dec
enter
das
xlat
jno
push
out
or
mov
mov
mov
dec
int
cmpsb
add
cmpb
pop
out
jl
cli
pop
jb
inc
std
rcll
faddl
pop
es
inc
inc
arpl
push
mov
int3
dec
sbb
pop
push
xchg
out
add
mov
fcmovu
stc
push
lods
dec
pusha
stos
pop
jns
cmp
jnp
cmp
dec
jne
mov
xchg
inc
xchg
fsubr
push
idivb
push
adc
pop
decl
sub
sub
std
xchg
and
andb
inc
mov
lcall
mov
mov
aad
mov
or
jnp
movsb
cmpl
jnp
jns
pop
out
enterw
shrb
pop
cmp
sub
sbb
mov
loope
push
inc
sbb
sbb
test
lods
sbb
addr16
pop
jo
xor
lea
mov
sub
insb
dec
or
into
out
mov
jg
dec
add
aaa
mov
mov
push
rcrb
mov
pushf
loopne
jns
pop
imul
push
xchg
pop
pusha
mov
mov
rcl
scas
pop
jbe
outsl
add
stc
and
cmp
xchg
cs
test
add
cmc
int
xlat
stc
and
mov
pop
dec
mov
pusha
or
mov
fnsave
inc
lods
adc
sbb
arpl
mov
sti
popf
jmp
mov
or
insl
push
push
and
mov
sub
xchg
mov
inc
popf
push
aas
cmp
xchg
or
xor
ret
sarb
stc
mov
cmovnp
dec
sub
jmp
lea
fnsave
cld
decl
bound
xchg
dec
outsb
and
cwtl
imul
lea
pop
add
and
xor
or
ret
dec
sub
mov
jmp
insb
inc
sub
xor
sbb
es
dec
cmp
inc
in
outsb
jmp
mov
and
jns
arpl
mov
mov
dec
xor
mov
jle
jns
repz
cwtl
pop
mov
jl
rcll
leave
ds
or
jae
in
mov
decl
lret
in
push
das
push
addr16
movsb
mov
jo
pop
mov
les
or
add
mov
jl
push
mov
mov
fsubs
lcall
xchg
dec
or
leave
repz
out
mov
hlt
mov
icebp
cmp
cmpsb
out
lock
lret
sub
push
sbb
mov
lcall
xlat
sbb
mov
std
lret
push
sbb
xor
add
enter
mov
mov
dec
pop
rorl
mov
arpl
xchg
cmp
jle
cmp
pusha
test
lret
sub
movb
xchg
out
cld
xchg
sub
pop
rol
pop
xchg
sbb
push
mov
and
sub
inc
ds
das
lods
sbb
xchg
pop
out
or
fsubl
xchg
and
pcmpgtd
adc
movsl
add
cli
pop
pop
mov
mov
fxtract
add
push
imul
cwtl
imul
xor
and
push
add
popf
setl
sahf
adcl
pop
pop
fildll
lods
mov
push
stc
addr16
aam
adc
cmpsb
js
sar
or
jns
mov
lods
arpl
xchg
or
stos
mov
in
cmpsb
add
test
daa
sub
mov
ljmp
es
xchg
xchg
cld
in
enter
aaa
inc
out
es
fisubl
pop
andb
outsb
dec
lret
lods
out
and
fnstsw
sbb
mov
inc
xor
lcall
sub
lret
sub
pop
stos
enter
mov
or
push
xchg
idivb
mov
loope
xchg
test
mov
cmp
adc
in
ret
in
fidivrs
pop
mov
pop
or
cmp
mov
test
jae
jae
mov
imul
out
sahf
add
nop
inc
or
sub
push
je
xchg
xor
pop
ds
mov
pop
pop
dec
fidivs
jmp
mov
int
out
ret
xchg
sbb
int
sub
mov
mov
jnp
cmp
in
cwtl
rorb
arpl
mov
sbb
adc
xor
cmp
out
mov
stos
and
sub
outsl
adc
push
bound
pop
data16
cmp
aam
sbb
mov
es
pusha
add
mov
loopne
jns
add
inc
out
mov
jecxz
loope
jl
xchg
or
jge
pop
sbb
fisttpll
enter
outsb
leave
xchg
mov
mov
jae
jbe
mov
stos
ds
fucom
adc
daa
push
into
dec
outsl
cli
sub
xchg
sbb
jnp
shl
enter
in
sub
ss
lret
mov
repnz
sub
mov
inc
inc
in
sbb
ds
std
sbb
aad
test
cmp
jo
push
cmp
mov
xor
or
adc
xor
add
push
aad
flds
sti
pop
adc
push
imul
pop
hlt
das
jl
sub
xor
lcall
cmp
push
xchg
push
nop
inc
cmpsb
mov
out
add
out
mov
pop
mov
ljmp
pop
lret
mov
cwtl
rcrl
cli
push
ret
adc
dec
dec
or
add
xchg
jbe
outsl
mov
mov
inc
cmpsb
dec
jecxz
sub
dec
les
test
inc
hlt
inc
scas
pusha
or
enter
mov
push
pop
lds
pop
and
cmp
xchg
test
imul
stos
push
sti
mov
sbb
mov
decb
lods
iret
shlb
scas
stos
adc
xchg
xor
lahf
jge
ret
jno
xchg
into
pop
out
cmp
imull
pop
sbb
sbb
bound
adc
ja
mov
aad
pop
test
ficompl
xchg
or
adc
outsl
pushf
sahf
lods
icebp
cmp
xor
lock
es
cltd
sbb
nop
movsl
adc
lods
cmp
enter
jecxz
flds
icebp
adc
fidivs
out
jnp
fwait
pop
rorl
stc
mov
xor
jnp
sbb
rolb
in
rolb
mov
or
cwtl
popa
incl
xlat
lret
sub
xlat
mov
loop
inc
arpl
test
and
ds
jnp
mov
lods
dec
xor
xchg
negl
lcall
add
xchg
xlat
xchg
shrl
lahf
fnstcw
sbbl
fwait
jmp
add
insb
repz
add
mov
and
mov
push
mov
and
jb
cmp
xchg
int
clc
jb
and
dec
out
push
xor
dec
in
push
jne
stos
ficompl
xchg
mov
pop
insl
aam
jmp
pusha
dec
pop
push
jl
fs
pop
cmpsb
movsl
push
aam
sub
sbb
test
or
push
push
fs
fistl
mov
lret
lret
stc
in
jecxz
push
mov
test
adc
or
mov
and
stos
push
in
mov
push
or
cmc
sub
leave
jmp
es
stos
push
mov
mov
out
add
cwtl
ja
inc
mov
scas
popa
xor
fstl
lahf
notb
sarl
lock
aaa
mov
fsubl
cmp
push
sbb
pushf
inc
push
sbb
setns
cltd
in
xor
jl
jno
stos
ret
mov
jmp
sub
cmc
sahf
hlt
pop
lds
int
jp
jg
xor
sbb
jecxz
ja
outsl
adc
jmp
scas
add
mov
mov
dec
xchg
jle
sub
cltd
cmpb
outsl
das
int3
cmp
test
scas
aas
sahf
rol
sbb
in
push
push
mov
shlb
jae
daa
inc
call
push
int3
push
rcll
add
je
cwtl
ds
mov
mov
mov
push
out
mov
outsl
pop
mov
insl
mov
and
ss
das
adc
shrb
mov
xlat
rcr
inc
push
pop
dec
lcall
jnp
lret
loop
adc
cld
and
or
pusha
outsb
loope
mov
sbb
xchg
outsb
lods
out
movsl
adc
popf
jle
stos
dec
setl
fldl
pslld
mov
arpl
imul
mov
pop
cmc
xlat
dec
enter
pop
repnz
lods
ds
addr16
imulw
inc
pushf
dec
mov
stos
add
pop
mov
cli
fcomp
leave
andl
fsubr
cli
fsubrl
hlt
dec
outsb
pop
inc
xor
and
rorb
cmp
test
hlt
scas
add
sbb
mov
xor
lret
adc
mov
and
mov
pop
fidivrs
inc
shr
dec
xor
sbb
inc
add
shrb
dec
push
mov
mov
aaa
scas
std
adc
or
add
adcl
cli
loope
pop
int
jo
pop
adc
push
add
or
push
aad
call
cwtl
aam
sbb
enter
frstor
adc
inc
mov
jae
shlb
add
loope
mov
addl
xor
jg
jl
cmp
insb
adcb
xchg
jecxz
mov
test
mov
sbb
sbb
js
or
in
das
adc
sbb
mov
nop
es
fisubrs
loope
dec
fidivs
push
cmp
test
ds
mov
mov
cltd
nop
ret
xchg
pop
sbb
sub
jns
scas
sahf
cmpsl
mov
popf
test
arpl
imul
and
adcb
push
repnz
sbb
decb
mov
mov
int
xchg
in
dec
xor
ret
or
aas
je
iret
push
adcb
inc
in
lock
arpl
adc
jb
or
dec
sub
mov
mov
sbb
sbb
push
call
ja
out
ret
jg
mov
pushf
ret
test
loope
adc
stc
aad
call
push
cmpsb
hlt
xchg
jmp
xchg
inc
hlt
push
std
out
mov
dec
das
xchg
fwait
hlt
not
cmp
adc
adc
repnz
inc
jl
mov
outsl
das
dec
lea
repnz
ficoml
pop
push
lods
pusha
inc
or
out
shll
inc
jmp
xchg
jbe
jo
shl
or
pop
jno
mov
int3
jbe
adc
push
xor
adc
ss
pop
push
pop
scas
cmp
mov
xchg
mov
dec
iret
fistps
sarl
ret
sub
ja
sbb
mov
mov
xor
ja
lods
sbb
adc
fnstenv
lahf
push
in
sub
test
jmp
pop
cmpsl
in
sub
sahf
sbb
je
addr16
xchg
rclb
sbb
or
test
dec
rcl
dec
jne
jae
sub
and
movsl
frstor
jmp
pop
movsl
or
xchg
mov
js
dec
jnp
xchg
in
xor
fisubrl
ss
mov
mov
sti
mov
fsubrs
push
pop
mov
imul
sbb
dec
fdivrs
repz
and
xchg
push
fimuls
push
sbb
imul
mov
ljmp
test
loopne
scas
addr16
push
nop
sbbl
movsl
xchg
out
dec
sbbl
pop
xlat
lock
and
mov
xchg
sbb
or
pusha
dec
out
addl
cmp
push
xor
aaa
ljmp
scas
jecxz
repnz
mul
fidivs
adc
xor
inc
and
jbe
jae
in
repz
mov
pop
push
lods
pusha
jbe
jne
test
adc
lds
mov
dec
in
inc
or
test
jl
adc
xchg
loop
pop
gs
mov
xor
push
and
mov
mov
cmpsl
or
es
jae
cmp
out
inc
aad
mov
loopne
xchg
ljmp
lea
sbb
cmpsb
inc
pop
decl
loope
pop
push
pop
or
push
cmpsl
push
adc
cmp
insl
fcomps
mov
pusha
dec
repnz
fnstenv
sti
mov
cs
outsb
mov
outsb
add
or
or
lea
cmpsb
fdivs
jne
mov
lea
mov
and
call
mov
sbb
jmp
clc
cmp
lcall
in
in
dec
xchg
in
lds
add
ret
lret
and
or
xchg
mov
lock
int
cmp
addr16
xchg
lds
loopne
pop
pop
push
je
test
ret
mov
repnz
icebp
jge
mov
xchg
mov
push
mov
in
ja
inc
lcall
inc
iret
cli
pop
cmp
adc
push
lea
fnstsw
aaa
pop
sbb
inc
dec
pushf
rcrl
add
lods
loopne
daa
rolb
fwait
jno
mov
xchg
fidivrs
out
push
sbb
mov
fists
or
and
test
fiaddl
out
xchg
nop
ss
cld
jne
xchg
xor
addr16
gs
lock
popa
js
cmc
add
pop
ficoml
imul
outsb
fptan
cmp
xorl
add
enter
or
cmp
mov
loopne
mov
xchg
or
jge
jg
sub
icebp
xorb
cmpsb
mov
movsl
fwait
aas
cmc
inc
sub
and
sub
pop
pop
pusha
inc
adc
xchg
shll
shll
out
in
inc
mov
mov
lock
js
negl
inc
xor
cwtl
jge
jle
and
test
cmpsl
dec
push
stc
inc
fsubl
inc
mov
enter
adc
cmpsb
repz
pushf
jmp
test
ret
mov
dec
xchg
mov
mov
push
inc
push
lea
cld
mov
sub
mov
jnp
cmpsb
jnp
push
lret
mov
push
sbb
test
xlat
inc
pusha
jo
aad
cs
stos
adc
lahf
and
inc
mov
iret
mov
inc
push
hlt
hlt
push
fwait
adc
sub
hlt
dec
sarb
outsl
outsb
scas
mov
dec
hlt
cltd
mov
adc
cltd
in
stos
jle
add
movsb
fstl
xchg
adc
fbld
fnstcw
les
xchg
mov
xor
jbe
test
add
cmpb
or
aas
fcomi
push
fs
or
xlat
jbe
out
test
and
sbb
push
call
sbb
cmp
fwait
jns
insl
sbb
inc
es
xlat
in
les
and
mov
mov
sti
lods
fcmovnbe
sub
mov
mov
mov
cltd
std
sarl
pop
add
notl
mov
jo
outsl
fnstenv
cwtl
idivl
es
mov
jnp
or
fldcw
pop
push
leave
dec
mov
clc
or
cmpsl
mov
mov
outsl
cmp
lods
cmp
jle
ret
xor
jle
adc
mov
in
dec
sbb
int3
ret
cmc
dec
in
add
stc
sbb
jbe
jg
adc
call
std
xor
mov
sbb
mov
addr16
pop
les
in
data16
lods
inc
mov
mov
test
xchg
sarl
cmpl
and
sub
or
sub
out
sahf
cltd
andb
out
mov
and
into
in
repnz
fbstp
fidivrs
push
xor
jmp
or
pop
cmp
pop
dec
je
bound
ficompl
cmp
loopne
sub
add
mov
ret
push
rcrb
aaa
sbb
cmpb
incl
ret
pop
push
pop
aam
movsl
pusha
or
push
dec
cmc
cltd
outsl
adc
xchg
inc
mov
mov
lret
repnz
xchg
test
inc
dec
push
outsb
push
or
pop
lret
inc
mov
jl
pop
and
mov
push
cltd
mov
jbe
popa
dec
xchg
lea
jnp
push
cmp
push
sub
fnstcw
sub
enter
rcpps
popf
push
pop
lock
cli
add
hlt
insl
and
fsts
in
popl
sar
pop
aaa
clc
arpl
fidivs
fimuls
xor
iret
xchg
fs
mov
add
pop
jecxz
mov
lea
lods
mov
scas
mov
or
pop
in
subb
sub
lock
nop
out
movsb
add
jmp
push
mov
jecxz
shlb
es
adc
dec
jo
and
negl
inc
xor
ret
push
imul
pop
in
adc
inc
imul
test
cli
jmp
out
std
mov
jp
mov
rcr
adc
inc
rolb
aaa
cmp
add
sbb
enter
mull
adc
xor
adc
mov
inc
stos
pop
lea
mov
mov
dec
fnsave
push
adcb
pusha
jg
aam
call
xchg
loopne
sub
cmp
pop
sti
mov
dec
sbb
mov
loop
add
add
subl
inc
ljmp
cmp
push
or
add
mov
mov
cli
sub
cmp
sbb
mov
cwtl
ret
repnz
dec
xchg
popa
js
stos
iret
jecxz
sarl
jae
mov
pop
jbe
adc
mov
notl
out
aas
and
mov
or
inc
loope
mov
stc
push
adc
jbe
out
mov
movsl
imull
test
push
mov
or
ficoml
inc
out
pop
pop
xor
mov
xor
jb
in
push
xor
jo
cmp
cwtl
xchg
cmp
inc
insl
lock
pop
mov
movsl
add
xlat
add
xor
fsubrl
imulb
into
mov
rclb
ss
ljmp
adc
jo
ljmp
mov
pop
test
mov
mov
xchg
pushf
enter
jno
out
repnz
scas
inc
mov
jmp
jg
add
leave
dec
shrb
daa
repz
imul
push
rcrb
dec
mov
ja
push
xchg
sub
inc
inc
ss
lods
mov
jb
jnp
xorb
mov
iret
aad
clc
popa
scas
add
add
push
adc
cmp
dec
sub
hlt
add
ret
and
mov
mov
gs
xchg
iret
mov
scas
push
lods
adc
imull
lret
cli
test
mov
cmc
iret
push
in
das
fldenv
sahf
cmp
push
sbbb
cmp
imul
ljmp
adc
je
mov
add
dec
xor
shll
mov
mov
fcompl
mov
mov
dec
jp
aas
stc
or
faddl
outsb
test
ss
cmpb
outsb
xchg
sub
add
out
out
xor
mov
xchg
mov
popa
xlat
push
inc
test
push
jae
pop
loopne
scas
mov
xlat
sahf
xchg
xor
cmovnp
adc
bound
cmp
xchg
ficoms
jne
loopne
cmp
adc
iret
jae
jnp
dec
cli
and
sub
adc
sbb
fwait
jl
outsb
dec
insb
jae
dec
scas
loopne
lcall
retw
imulb
adcb
std
aas
clc
out
push
adc
inc
mov
xchg
cwtl
arpl
jp
loopne
add
cmp
push
cld
sub
sub
cmp
sub
sti
and
xchg
jge
js
mov
dec
xchg
fld
mov
clc
cli
jb
ficoms
ja
jmp
xchg
adc
loopne
jp
cmp
mov
fisubl
mov
xor
repnz
scas
cmp
xchg
or
sbb
call
mov
mov
in
mov
call
sub
loop
and
sbb
js
sub
dec
movsl
fstpl
insb
gs
push
or
shll
inc
test
jbe
sbb
and
dec
or
xor
xchg
jp
dec
mov
mov
sbbl
dec
mov
add
in
sub
rcrl
xchg
add
sbb
cmpsl
lret
lods
mov
lock
jbe
xchg
push
add
xchg
sti
push
ljmp
clc
or
push
clc
sti
mov
mov
mov
mov
fsubl
pop
stos
sub
jmp
push
aad
mov
cmp
lret
ds
loopne
push
out
cmpsb
lret
outsb
cmc
lcall
or
mov
daa
lret
mov
sbb
xor
lcall
scas
push
ret
push
adc
rcrl
sbb
sbb
je
adc
shlb
inc
out
adc
mov
push
sbb
cltd
loope
ret
push
pop
js
push
mov
pop
icebp
xchg
icebp
mulb
mov
sub
clc
out
cmp
fidivrs
enter
je
mov
xor
cli
pop
sbb
fdiv
testb
pop
sbb
cltd
mov
aad
and
inc
xor
xchg
fisttpll
adc
out
in
inc
inc
mov
jp
fldenv
aaa
ret
ds
insl
loope
gs
xor
push
inc
inc
mov
sbbb
cmp
mov
int3
ja
cmpsb
jne
adc
shlb
sbb
sbb
stc
fwait
sub
fsubl
outsl
rcll
into
inc
cmp
jae
sbb
push
std
cmpsb
arpl
xor
pop
cmpsb
stos
por
stc
lock
add
repz
lds
mov
addr16
outsl
shll
pop
pop
cmc
call
test
mov
jne
xchg
xlat
les
rolb
and
into
inc
stos
xchg
clc
mov
pop
fnstenv
or
sub
das
nop
rcl
mov
imul
stc
in
adc
out
xor
test
mov
and
sbb
aas
xchg
popf
and
iret
push
add
pop
xchg
ljmp
loope
jnp
sbb
add
fwait
sbb
and
aam
icebp
mov
stos
xchg
mul
adc
mov
mov
and
pusha
mov
xor
pop
pop
pop
xchg
cmpsl
mov
and
dec
in
fidivs
cmc
add
add
adc
subb
adc
cmp
mov
aad
mov
add
dec
add
stos
fwait
jg
stc
xor
ds
xor
imul
mov
mov
mov
cs
out
mov
cmp
lahf
pop
cmpsl
filds
adc
cwtl
mov
std
lods
add
rol
ror
add
xchg
mov
rclb
outsl
or
sbb
lcall
clc
imul
xchg
cld
push
outsb
push
mov
repnz
dec
add
push
xchg
std
insl
repnz
push
xor
fistpl
add
mov
movsl
cmp
pop
cmp
enter
setnp
and
dec
cmp
xor
mov
lods
lock
or
cmp
icebp
cmp
div
adc
in
sarl
bound
pop
ror
and
push
jecxz
cmp
mov
lret
inc
popf
test
jg
jle
and
pop
xchg
sub
ret
lahf
mov
lods
xor
jnp
cmpb
cmpsl
ljmp
and
mov
pop
mov
inc
jp
cmp
or
cmpsb
mov
lock
flds
jns
out
not
iret
das
jp
addb
adc
sub
sub
testb
sti
cmp
or
rcrb
push
fcomi
mov
mov
or
ja
xchg
add
xor
fstpt
push
shll
xor
adc
dec
es
xchg
xor
jno
xchg
jle
outsl
add
idivb
lds
adc
adc
sti
jnp
rclb
adc
mov
test
inc
cld
test
push
sub
jbe
dec
int
pushf
out
repz
push
roll
inc
pop
mov
sbb
and
pop
clc
push
inc
je
mov
jae
cmp
ja
or
mov
ds
xchg
inc
in
dec
cltd
mov
xchg
push
call
ss
sub
jae
in
jge
add
mov
in
rorb
xor
out
adc
dec
sub
push
test
ds
adc
stos
dec
insl
cmpsb
jecxz
xor
sbb
cwtl
ss
mov
enter
into
insb
mov
aam
rcrl
pop
or
lahf
ret
and
sub
fsubl
je
inc
cs
roll
jbe
insl
mov
xor
jg
adcl
pushf
xor
mov
and
cmpsl
mov
rcrl
add
mov
xor
mov
bndldx
out
inc
arpl
fidivs
push
fldt
and
es
sbb
jne
stos
stos
mov
ljmp
push
sbb
popf
testl
cmpsl
add
mov
xchg
rcr
pop
push
sub
aas
movsl
aas
addr16
dec
add
mov
cmp
and
mov
int
stc
ret
mov
popf
mov
inc
and
cs
clc
fdivrl
sbb
pop
call
popa
and
push
xor
xchg
jb
fidivrl
pop
sbb
and
inc
lea
lods
call
mov
jae
xchg
sbb
test
sbbb
test
push
js
fildll
jnp
push
mov
pop
nop
in
push
movzwl
inc
mov
aaa
repz
lds
out
stos
je
xor
xor
lods
repz
dec
aad
int3
fnstcw
pushl
jbe
pop
pop
mov
cli
and
dec
clc
mov
xchg
add
sbb
iret
adc
jno
movsb
fsubrp
mov
sti
out
pop
pop
aad
push
and
mov
cmp
inc
lods
xchg
xchg
add
scas
gs
adc
mov
dec
mov
notl
xor
daa
inc
cmp
mov
outsb
cmp
xor
out
or
mov
xchg
out
add
out
mov
clc
cli
xor
pop
inc
repnz
lods
jecxz
popf
addr16
cld
cmpsl
mov
xchg
lret
pop
gs
mov
sbb
or
or
push
mov
mul
hlt
mov
out
mulb
push
sub
cmpsb
inc
xlat
sub
sarb
mov
push
mov
movsl
int3
push
pop
sbbl
and
scas
or
push
out
pusha
add
push
inc
mov
call
testb
adc
push
dec
mov
mov
inc
adc
das
pop
call
push
push
lret
int3
rolb
mov
ljmp
and
jecxz,pn
and
call
xchg
cmp
mov
and
xchg
or
in
or
mov
ret
adc
sub
xchg
sti
pop
pop
pop
insl
cmp
jns
ror
out
nopl
insb
cmp
push
sbb
push
jbe
pop
xchg
adc
scas
mov
jno
pop
xchg
mov
xorl
push
add
mov
cmp
jge
jle
pop
pop
out
sahf
jmp
iret
out
add
lcall
testb
lret
lods
mov
ss
pop
repz
loop
jno
mov
add
mov
gs
adc
xchg
and
push
sti
ret
push
push
aad
movsl
shlb
ds
movsb
int3
cmp
cmp
xor
aad
arpl
fadd
sbb
lcall
stos
pop
adc
and
ljmp
mov
sbb
or
aam
xchg
pop
sbb
mov
xchg
push
out
sbb
jns
sbb
aas
cmpsb
jae
lcall
xchg
arpl
mov
or
out
test
loope
and
stc
mov
push
mov
mov
cmp
jns
or
pop
in
push
aas
out
out
dec
fists
push
cltd
andl
int
out
test
idivl
lret
add
lcall
or
add
jecxz
inc
mov
jmp
scas
lea
jge
push
push
sub
pusha
les
add
and
fstpt
sbb
inc
and
xchg
scas
rclb
rcr
mov
jmp
mov
cwtl
xor
or
loop
sbb
add
scas
jae
fcomps
std
addr16
cmp
add
enter
add
mov
pop
xor
orb
loope
jmp
inc
adc
push
cmc
jb
pushf
xor
fdiv
push
mov
fwait
inc
test
mov
mov
xor
scas
imul
cmp
jecxz
mov
add
shrb
push
fisubs
inc
xchg
lret
pop
mov
jb
clc
sub
inc
test
ret
dec
pop
jo
popa
fnstsw
cwtl
add
cmp
mov
call
add
dec
int3
in
sub
outsb
inc
mov
xor
mov
jo
daa
addr16
loope
mov
loopne
sbb
inc
and
push
xchg
notb
add
xorb
cli
or
stos
in
out
xchg
jge
shrb
jp
notb
adc
out
xchg
push
pop
mov
daa
or
scas
push
sbb
test
shlb
loopne
xlat
je
inc
jmp
iret
imul
push
cmpsl
and
nop
movsl
add
imul
out
cmp
adc
setne
push
pop
lret
xlat
imul
inc
and
lret
imul
out
pop
xchg
dec
cld
push
lods
incl
mov
and
cmp
adc
push
pop
pushf
or
push
popa
push
inc
shll
imul
lcall
gs
xlat
sbb
aaa
lret
and
xor
adc
cmpsb
adcb
adc
in
inc
aas
mov
loope
aas
xchg
or
fld
push
jae
int3
adc
loope
ror
cmp
mov
test
movsb
in
inc
and
jle
shlb
xchg
push
test
loop
test
mov
add
pusha
jns
or
xor
cmp
adc
sbb
jno
push
nop
and
aaa
hlt
or
sub
mov
fisubrs
pop
lret
push
dec
pop
aaa
mov
xlat
lret
daa
jle
push
dec
pop
stc
adc
adc
mov
pop
cmp
sbb
add
negl
repnz
cli
sbb
and
in
xor
pop
xor
add
dec
out
sbb
lahf
call
mov
imul
cmp
fiadds
out
dec
xchg
sbb
push
orl
push
jb
fs
sub
addr16
and
out
lret
sti
incb
cmpsl
fimuls
mov
mov
lret
subb
jns
add
popf
insb
jno
push
mov
mov
pop
das
jge
adc
sbb
inc
cld
push
xor
fsubrs
rol
xor
loope
mov
mov
leave
mov
push
andl
inc
xor
jmp
or
sbbb
mov
sarb
jne
mov
xchg
pop
loop
popa
or
and
test
jle
cmpb
stc
mov
push
iret
jmp
icebp
cmp
adc
sbb
pushf
roll
sub
insl
je
mov
or
and
jp
xchg
push
cltd
jno
add
cmpl
inc
adc
mov
adc
pop
xchg
push
or
and
push
shrl
pushl
cmc
jbe
stos
push
pusha
dec
sbb
inc
pop
sbb
lcall
outsl
sbb
inc
push
xchg
ficomps
stos
addr16
enter
lahf
out
push
jo
nop
jecxz
out
sbb
or
icebp
rcl
in
xor
push
jmp
popa
push
ret
les
push
mov
or
add
incl
lds
jg
mov
jl
insl
jo
subb
cmp
inc
mov
fs
sbb
mov
xchg
aaa
insb
xchg
addr16
mov
repz
std
pushf
cli
repz
outsw
xor
call
add
call
in
test
fldl
and
mov
aam
call
push
insb
fcomi
pop
sbb
lret
cmc
test
aam
lock
lcall
cmp
jge
mov
icebp
pop
es
mov
adc
inc
outsb
repz
hlt
sub
lods
js
out
mov
loope
insl
xchg
jmp
dec
mov
mov
leave
jge
sub
vorpd
sub
outsl
xchg
jmp
lret
out
mov
out
out
adc
xchg
jmp
lods
mov
or
xchg
in
inc
adc
xchg
pop
xchg
aas
push
xchg
das
mov
add
adc
sarb
cmp
cmp
cmp
int3
pop
xlat
xchg
jbe
xor
imul
fcoms
loop
dec
mov
cmp
lea
jns
inc
lods
jmp
pop
xchg
cs
into
adc
rorb
xor
jp
bnd
bnd
push
out
add
jg
push
iret
repnz
js
lods
jmp
dec
mov
mov
sub
sbb
mov
dec
lds
add
sub
adc
sti
insl
call
roll
mov
roll
dec
pslld
testb
mov
les
shl
cmp
in
std
adc
xchg
dec
rcrb
cwtl
lods
cmp
push
xchg
sarb
add
rol
push
jp
mov
idivl
xor
pop
cmp
iret
bnd
or
inc
ret
incb
test
rcr
xchg
xor
movsl
or
add
leave
xor
in
pop
lods
shlb
or
shlb
inc
test
lea
jne
xor
mov
jbe
jge
jbe
pop
jbe
cltd
cs
rcrb
fidivs
add
inc
mov
dec
mov
subl
aas
stos
out
icebp
popa
std
add
sub
mov
aaa
or
mov
inc
cmp
pop
mov
rcll
test
inc
data16
mov
in
xor
jno
out
pop
push
jne
shll
mov
xchg
sahf
mov
inc
adc
ja
ja
ret
cmp
push
cwtl
cli
aad
push
jno
or
add
jno
xchg
sahf
or
xchg
les
in
ljmp
sbb
inc
dec
out
dec
add
cmp
aas
dec
xor
adc
outsb
cmp
or
inc
lret
ljmp
mov
repz
adc
xchg
cs
loopne
push
push
mov
lock
jno
sbb
add
or
lods
stos
arpl
pop
jmp
jno
inc
pusha
lods
mov
lods
and
insb
inc
jb
iret
leave
mov
rclb
xchg
in
cmc
ret
movsl
jp
sub
adc
and
mov
inc
jb
or
and
mov
shrl
xor
mov
in
sbb
push
mov
divl
or
sub
jne
push
mov
and
pop
lock
mov
xor
inc
ja
xchg
xchg
scas
inc
add
cmp
cmpsb
dec
jne
xchg
sbb
rcl
int
lods
mov
mov
pop
push
fadd
adc
lret
movsb
sahf
cmp
or
stc
loopne
mov
add
outsb
and
repnz
adc
and
cmp
iret
hlt
rcll
stos
xchg
adc
xorb
inc
aam
and
imul
imul
loope
or
push
fildl
mov
nop
fldenv
outsb
pop
clc
jmp
decl
inc
cmp
dec
roll
pop
jp
inc
or
pop
xchg
test
or
fimuls
xor
lahf
add
fsubrl
pop
loope
inc
inc
push
inc
cmpsl
add
adc
inc
dec
xor
dec
and
rcr
out
push
mov
jae
jnp
in
aam
fs
inc
pop
aam
cmp
addl
sub
inc
push
sbb
aaa
pop
faddl
mov
movsb
mov
je
in
xchg
sahf
add
repz
daa
push
add
adc
lahf
cmp
insb
mov
or
mov
mov
mov
test
mov
test
push
jl
imul
or
clc
mov
and
jge
cmpsb
sub
inc
fdivl
outsb
cmp
pop
cmpsl
test
scas
push
xchg
pusha
add
lcall
pushf
into
sbb
pop
subl
leave
test
adc
popf
inc
mov
iret
push
ret
or
cmp
data16
cld
inc
add
popa
and
ds
test
push
lock
add
inc
outsl
jne
push
ja
ljmp
xor
stos
mov
jmp
out
fdivs
jp
sarb
adc
mov
dec
inc
inc
ss
shrb
mov
pusha
pop
dec
add
int3
sahf
mov
bound
inc
xchg
and
leave
mov
mov
shrb
push
cld
mov
sub
mov
repnz
xchg
jmp
jns
loopne
cwtl
cmp
cmpl
adc
roll
andb
cld
pop
sub
in
pop
int
ja
push
dec
inc
adc
cltd
or
out
repz
divl
mov
jnp
int3
push
lods
js
pop
and
push
shl
ret
mov
mov
push
repz
popa
cs
mov
outsl
add
mov
inc
xor
insl
add
aas
xchg
sahf
dec
mov
int
mov
fidivs
jo
add
sbb
pop
sub
adc
xlat
cld
mov
jl
rcrl
mov
jl
rorb
pop
clc
ficomps
shl
jecxz
int3
ja
or
add
cli
stc
lds
push
stos
xor
bt
jbe
shlb
aad
push
adc
call
sarb
mov
pushf
movsb
jl
push
pop
push
jl
insl
or
scas
inc
and
push
push
dec
cmpsl
pop
loope
xor
xor
out
stc
xchg
or
xchg
sub
leave
push
dec
ds
xor
push
stos
mov
arpl
mov
dec
cmc
sbb
iret
int
rcl
loope
sarl
test
mov
push
test
push
mull
call
mov
jmp
in
dec
xor
sub
in
in
ljmp
xchg
sbb
jo
movsl
fnstenv
movsl
xor
xor
pop
xchg
stc
and
jae
jle
imul
cmp
call
inc
pop
xchg
mov
loop
pop
or
jne
dec
jnp
das
cwtl
mov
dec
push
addr16
es
pushf
pop
aam
pop
jns
mov
mov
rolb
clc
nop
loope
aaa
inc
mov
jae
sbb
in
ror
sbb
add
and
push
xlat
jae
mov
call
mov
jge
cmp
push
jecxz
push
mov
mov
or
rol
xchg
inc
leave
or
mov
insb
sarl
add
push
sbb
sbb
aam
clc
subl
arpl
pop
ja
dec
sbb
sahf
jge
in
sub
pop
iret
and
mov
push
gs
dec
mov
rol
and
loopne
jb
scas
aad
mov
out
sub
mov
sbb
daa
ljmp
jecxz
aaa
xor
loope
inc
daa
shrl
lock
mov
push
push
daa
dec
or
mov
bound
xor
inc
dec
cmp
insl
fwait
in
lods
adc
inc
fildl
or
rolb
gs
cltd
arpl
cli
jl
pop
movsl
out
pop
out
jnp
sub
fsubrp
je
xor
xor
cmpsl
nop
ds
aas
in
push
sub
xlat
or
add
cmpsb
iret
in
fs
lods
cmp
and
xor
mov
pop
cmp
pop
ljmp
sub
add
in
out
inc
sbb
adc
mov
mov
mov
push
fcoml
cmp
sbb
vsqrtpd
or
ds
jecxz
pop
push
mov
push
xchg
test
sbb
cltd
cmc
pop
and
cli
sbb
inc
fsubs
pop
jl
or
fwait
popa
stc
pusha
aaa
out
sbb
push
gs
mov
ljmp
xchg
jo
ljmp
mov
repnz
xchg
bound
add
mov
ret
sti
adc
dec
stos
xor
lcall
pop
stos
or
and
xor
sub
cltd
test
ret
sub
inc
mov
pushf
xor
mov
stos
mov
mov
arpl
out
ss
iret
negb
lods
add
xchg
cltd
inc
daa
and
jmp
dec
inc
into
pop
insb
lahf
add
mov
cli
inc
inc
shll
fs
movsl
pop
add
pusha
push
decb
push
mov
mov
sub
loope
adc
inc
shlb
or
sarb
pop
in
scas
into
pop
push
dec
add
dec
cmpsb
subl
mov
outsl
in
inc
push
mov
cmp
push
mov
jae
lret
call
mov
add
pop
insb
adc
ficoml
mov
nop
leave
inc
pusha
es
add
push
int
adc
adc
shl
out
cmp
inc
inc
or
pop
mov
xlat
scas
imul
loop
out
in
add
clc
shll
data16
pop
icebp
adc
call
scas
xor
xchg
subl
out
lahf
outsl
mov
dec
sbb
jle
add
cmpsl
push
cmp
pop
dec
insl
loopne
or
adc
push
push
imul
mov
sbb
arpl
and
xchg
ss
mov
js
stos
mov
mov
scas
xor
add
pop
mov
xchg
or
sbb
sti
mov
jg
xlat
jecxz
xchg
xchg
xor
adc
mov
dec
and
jnp
lods
lods
xor
adc
or
icebp
sbb
pop
pop
pop
jg
mov
dec
dec
roll
push
push
pop
insl
dec
cmp
loopne
mov
cwtl
imul
std
inc
xor
inc
arpl
call
test
push
xor
xchg
jae
inc
ds
lods
ss
jne
jae
push
and
pop
xchg
pop
aas
mov
les
lahf
ljmp
and
adc
add
push
cmc
jae
paddusb
push
adc
popa
jne
or
sub
adc
stos
xchg
outsl
cmp
ficomps
mov
push
lds
je
into
sti
add
int
into
out
mov
out
mov
cmp
mov
shlb
push
xor
jbe
daa
mov
pop
int
or
xlat
nop
cmc
mov
pop
jae
fistl
fimuls
mov
sbb
mov
shlb
out
cmc
pop
jo
subb
ds
pop
push
mov
addl
dec
push
js
sbb
xchg
int
mov
js
or
loope
in
add
mov
negb
xor
int
jp
subl
cmp
jo
lcallw
inc
jmp
xchg
fiadds
cmp
popa
pop
ret
rol
orb
xor
push
xlat
xor
add
rcrl
lods
mov
push
mov
xor
fs
xor
test
dec
mov
push
pop
push
inc
and
xchg
in
cmp
mov
pop
inc
inc
rcrl
lea
mov
push
sti
sbb
call
ds
jecxz
mov
out
sub
or
cmp
aad
test
or
adc
inc
mov
arpl
sar
sbb
cmp
adc
mov
out
mov
xchg
repz
mov
and
pop
lds
ret
arpl
int
adc
inc
out
xchg
sbb
adcl
fcoml
sbb
sub
gs
in
and
dec
les
in
stc
lahf
nop
mov
test
xor
addl
mov
mov
push
xchg
dec
adc
xchg
jae
jns
mov
lock
sub
dec
mov
inc
es
sbb
cmpsb
sub
aas
dec
js
fcompl
adc
sub
xchg
or
xchg
pop
jg
out
dec
aad
in
mov
push
rep
dec
inc
or
jo
xor
fs
sbb
xor
out
and
mov
mov
or
ret
movsb
dec
aaa
stos
mov
sbb
roll
mov
js
inc
sti
jnp
cmp
loop
inc
sub
shll
movsb
dec
pushl
jb
cltd
and
pop
jno
mov
mov
insb
aaa
iret
in
cltd
cmpl
cmp
inc
jno
mov
inc
jge
and
push
cmpsb
sbb
pop
lret
mov
repnz
cmp
scas
sub
in
add
popf
loope
out
push
jne
adc
mov
and
or
pop
movsl
sub
pop
aam
push
subb
fst
mov
or
or
dec
aaa
jae
sbb
push
repz
lret
shlb
jmp
xorl
repz
jge
xchg
lret
lret
mov
fcomps
sarb
and
je
cmp
mov
lock
loop
fstp
push
js
les
sub
cmp
nop
mov
xchg
xchg
inc
jo
sahf
mov
insl
in
stc
sub
cld
mov
popf
jne
mov
imul
mov
xor
popf
js
fmulp
mov
sub
leave
fwait
iret
push
addr16
add
insb
mov
out
in
mov
subl
clc
pop
inc
test
add
popa
cmp
xchg
pop
pushf
and
mov
fisubl
xor
pslld
push
cmp
push
push
sbb
push
mov
scas
js
scas
mov
sbb
add
xchg
int
push
lods
repz
inc
and
lea
push
aaa
in
lret
fs
jae
daa
pop
mov
push
and
jns
cmp
ss
lahf
ja
xchg
sbb
add
mov
inc
repz
hlt
or
dec
add
push
adc
mov
add
pop
jg
lock
add
fisubrl
jge
jb
xor
adc
adc
imul
jne
outsl
xorl
mov
adc
adc
inc
push
or
mov
loopne
mov
mov
push
mov
hlt
cltd
hlt
insb
cltd
int3
xor
pop
ficompl
cmpsb
iret
xchg
dec
fnstenv
pop
sub
sbb
aad
jbe
cmpsl
rcr
sahf
xor
mov
inc
mov
dec
pop
loop
stos
and
addr16
lret
jle
sub
adc
jecxz
clc
adc
jge
push
jne
shlb
aam
add
pop
xor
fildll
movsb
cltd
push
leave
jbe
push
and
insb
push
jb
jle
fs
aad
or
lods
pop
out
mov
out
lret
xchg
mov
push
push
dec
shrl
cltd
xlat
ja
jle
mov
mov
push
xor
les
xor
pusha
or
fwait
xor
cwtl
adc
sti
jle
cmpsb
gs
mov
pop
mov
xchg
lods
adc
cli
outsb
movsb
mov
into
popf
nop
push
mov
stos
jecxz
push
stos
push
cmpsl
and
addb
ljmp
inc
mov
loope
sbb
sub
stos
loopne
movsl
mov
xchg
scas
adc
repnz
jns
cli
xor
inc
andl
mov
sub
jae
es
mull
gs
andb
lods
imul
push
add
jg
addr16
pop
xchg
mov
inc
pop
adc
jmp
sub
sbb
cmp
fistpl
mov
add
push
mov
cmp
cld
jns
jnp
xchg
out
imul
clc
in
mov
xor
fs
out
std
sbb
loop
jp
mov
enter
sti
lds
loope
sbb
mov
icebp
aaa
movsl
pop
or
aaa
leave
je
adcb
pop
and
pop
jecxz
xlat
psllw
pop
sub
int3
and
dec
mov
cmpsl
ds
inc
add
lods
pop
dec
cwtl
cmp
sbb
movsl
xchg
pop
movsl
mov
rcll
inc
daa
mov
int
add
lods
andl
pop
bound
push
pop
xchg
call
loopne
mov
jle
cmp
scas
idivl
pop
je
jmp
mov
lock
loope
test
negl
push
lcall
std
in
pusha
xchg
call
and
out
mov
lahf
mov
aad
pushf
lret
clc
mov
outsl
push
shlb
ljmp
inc
mov
outsb
jg
imul
push
adc
mov
and
das
or
adc
push
push
out
call
mov
xor
push
cmp
iret
fidivrs
loope
aad
jb
adc
hlt
adc
daa
cmc
mov
push
push
loopne
mov
int3
movl
xorl
aas
stos
or
mov
jno
movsb
xor
push
shll
shlb
sbb
fcmove
shrl
add
insb
leave
mov
out
test
xchg
sub
xchg
cmp
imul
dec
and
popa
sub
sub
jb
sarb
rcll
dec
dec
cmp
hlt
push
imul
and
int
jmp
in
in
call
push
addl
rclb
sub
ret
mov
lret
sbb
cmpl
sub
hlt
scas
and
inc
xor
xor
in
add
fisttpl
sbbl
xor
dec
daa
push
decl
and
rolb
loop
je
fdivrs
fcmovu
dec
aaa
or
outsb
cmp
xchg
lret
inc
xlat
mov
and
push
cmpb
fistps
jge
test
add
test
stc
jecxz
sarb
mov
dec
jnp
sti
dec
pop
ret
popf
movsb
dec
cmp
imul
adc
add
push
addr16
adc
scas
mov
int
sbb
sbb
ja
jo
into
mov
repz
lret
dec
arpl
mov
inc
adcb
jno
int
mov
cmc
jno
aam
mov
les
add
lock
cltd
cld
sbb
jge
or
push
inc
ret
popa
shrd
sbb
fcmovbe
mov
popf
inc
add
dec
xchg
lcall
int
sub
sarb
mov
lret
push
movsb
mov
add
pop
pushf
mov
jbe
sbb
inc
ljmp
addr16
or
ljmp
pusha
jbe
jmp
adc
shr
pop
popa
push
xor
shlb
and
push
mov
insb
out
inc
mov
inc
mov
dec
pushf
nop
sbb
adc
mov
jo
inc
and
pop
jl
loope
pop
hlt
cmp
bound
in
cmpsl
stos
add
xchg
andl
hlt
je
aam
out
sub
cmp
aaa
xchg
jge
idiv
fwait
xor
xor
cltd
das
push
cltd
lret
dec
sbb
xlat
outsl
dec
je
lock
aam
cwtl
adc
and
push
cmp
movl
jl
jg
cld
dec
pop
xor
dec
xor
nop
pop
jmp
sbb
scas
lahf
int3
cld
and
or
and
adc
sub
stc
xchg
mov
sbb
push
out
add
aad
in
lds
nop
lahf
lea
aad
movsl
mov
dec
xchg
jle
out
leave
jne
inc
emms
adc
decl
dec
dec
icebp
ret
mov
call
fsubrp
lods
and
dec
nop
mov
das
ss
jle
stos
lret
shll
xchg
jge
stos
cs
sub
xor
xchg
cltd
and
dec
xchg
sbb
and
pop
jb
out
cltd
or
outsb
add
imul
mov
cltd
inc
call
pop
jae
mov
jp
mov
add
pop
jns
inc
lock
push
ficoml
imul
adc
cmp
sbb
out
mov
cmpsb
sti
sub
iret
adc
sub
cmp
cmp
mov
les
mov
scas
stos
cs
mov
jo
push
xlat
std
jmp
test
or
xchg
shlb
pusha
fisttps
or
mov
popa
push
cwtl
sub
add
fiadds
out
mov
hlt
or
shrl
dec
shll
add
xchg
dec
addr16
cmpsb
push
int3
xor
xor
dec
subb
mov
shll
movsl
jle
sub
imul
popf
or
cmp
xrelease
push
cmp
ss
push
rorb
inc
xchg
mov
mov
insb
lock
daa
fwait
push
mov
mov
mov
je
daa
call
push
out
pusha
sbb
push
push
testb
pusha
enter
adcb
pop
aaa
fcmovne
inc
test
xchg
xor
call
test
inc
push
cmp
arpl
adc
lods
xchg
lea
pop
push
sti
dec
lods
out
push
or
arpl
adc
clc
bound
rcrl
repz
aaa
cltd
and
mov
and
insb
pop
and
cmp
lahf
insb
loop
aaa
movsl
inc
jg
mov
push
sbb
mov
mov
rorl
jo
fs
cmpsb
jnp
and
pushf
add
les
andl
xor
xchg
lds
xorb
nop
inc
jp
js
mov
int
jle
fcmovnu
push
sub
mov
sub
sub
jmp
sbb
adc
push
cmpsl
inc
shlb
xor
in
mov
dec
cmpsl
int
mov
or
dec
xchg
insb
push
insl
adc
aam
inc
xlat
fs
xor
repz
pop
jg
decl
jmp
xchg
loope
scas
add
fldt
push
add
push
faddl
mov
mov
add
repnz
and
push
repnz
les
dec
divl
sbb
stos
xlat
movsl
popf
nop
es
mov
lret
inc
and
inc
ja
js
int3
mov
dec
dec
in
jno
fisubs
push
push
push
jbe
fldl
stos
mov
clc
pop
popf
loop
out
mov
xor
mov
out
cltd
in
cld
inc
xchg
fcomps
enter
repnz
shrl
hlt
clc
mov
aaa
nop
pop
mov
dec
ficomps
cmp
rolb
push
test
mov
mov
ror
inc
inc
imul
cmp
add
add
jg
dec
adc
adc
in
push
xor
scas
and
jecxz
cmp
roll
test
dec
pop
dec
lret
mov
mov
aam
jmp
lds
jae
aas
jo
lds
cmp
sahf
in
xor
add
and
mov
sbb
or
xchg
fists
pushf
test
in
movsb
mov
test
xchg
addb
sbb
jbe
aam
loopne
movsb
pop
int
in
out
cltd
mov
into
pop
fiadds
dec
sti
ja
hlt
in
fsubp
mov
xlat
nop
movsb
pop
mov
inc
lods
cmp
cmp
loop
out
adc
sbb
add
pop
test
xor
dec
mov
dec
adc
xchg
fiaddl
xchg
imul
or
add
arpl
add
sbb
inc
xchg
or
mov
xor
in
mov
es
outsl
cmpsl
pushl
adc
add
inc
movsb
popf
cmp
sub
cmc
push
lds
add
ss
cmp
jbe
popf
sti
mov
shll
aaa
xor
sub
in
fwait
add
sbb
cmp
mov
mov
inc
ds
push
mov
or
jge
cld
push
cli
fldt
out
lret
inc
push
dec
cmpb
dec
xor
outsb
jne
jno
push
out
scas
xor
jmp
or
daa
mov
add
mov
mov
cmpb
push
out
lods
test
out
pop
ljmp
es
dec
gs
fimuls
cld
mov
sub
rcrb
inc
xlat
lods
and
xchg
jmp
fisubs
push
and
inc
shll
out
xor
loope
xchg
scas
loop
es
jbe
jg
xchg
repz
or
mov
xchg
idivb
dec
push
sbb
mov
or
jb
adc
mov
popa
dec
insl
test
mov
aad
sbb
ret
shl
std
xchg
mov
int
cmp
lret
pop
fstpt
fcmovnu
and
fs
jp
mov
pop
pusha
jae
pop
xchg
mul
dec
lar
adc
inc
mov
dec
jmp
or
jbe
cli
ds
cmc
mov
pop
add
sbb
fdivr
hlt
pushf
insl
adc
push
or
cmpl
mov
push
popa
sarl
sub
adc
pop
push
pop
sti
sahf
imul
adc
cmpsl
sbb
add
dec
in
mov
notl
aas
sbb
jmp
jns
xchg
fiadds
lods
inc
ret
pop
or
movsl
daa
addb
ds
mov
movsb
call
and
inc
insb
mov
imul
jmp
ficoml
sub
lcall
pop
add
insl
orl
lahf
cmp
mov
fs
test
aam
mov
fwait
dec
aaa
push
or
popa
jmp
nop
enter
popa
jae
adc
mov
sub
popw
sub
and
cltd
test
xchg
jbe
push
xor
icebp
cs
sub
std
dec
cmc
fmull
leave
jp
lret
xor
add
enter
dec
pop
aad
sbb
mov
addr16
pop
jmp
mov
pop
push
fwait
cmp
xor
cmp
ret
or
jnp
and
xlat
dec
daa
sub
les
or
or
arpl
xchg
and
movsl
push
mov
pushl
sbb
cs
xorb
mov
shrl
xchg
movb
iret
sub
dec
data16
add
mov
or
mov
int
cmp
enter
popf
in
xor
push
adcl
mov
jl
jnp
int3
cmpsb
jp
fwait
loopne
arpl
cmp
jle
mov
mov
js
cli
jnp
in
movsb
xchg
xchg
fstpt
xchg
notb
inc
dec
mov
and
or
adc
shlb
cwtl
mov
cmpsl
lods
dec
dec
cmpb
inc
mov
xor
pop
jecxz
mov
mov
gs
xchg
mov
dec
xor
xchg
sbb
xor
insl
cwtl
fs
jle
imul
in
hlt
lods
in
cli
mov
xor
imul
push
xchg
das
and
jo
stos
arpl
or
aam
pop
mov
push
mov
lock
dec
cld
ds
push
cmp
in
mov
jle
pop
outsb
jmp
inc
testl
mov
mov
arpl
out
pop
mov
in
mov
nop
sahf
sub
shll
dec
call
lcall
pushf
or
imul
lock
rcr
jmp
xor
cmc
xor
out
mov
fsts
clc
adc
subl
and
sbb
adc
pop
xor
and
fiadds
push
mov
dec
push
repnz
jecxz
es
sbb
inc
push
mov
push
inc
loope
jo
int
lret
and
sbb
lods
sub
mov
sub
pop
dec
dec
xor
push
imul
pop
in
in
lret
pop
pop
pop
js
scas
mov
fdivl
repz
and
xchg
mov
inc
test
movsl
ja
inc
adcb
aas
icebp
jmp
sub
push
pop
mov
in
inc
in
xchg
frstor
jge
cmp
pop
sub
push
adc
or
movsl
or
mov
insb
rorb
add
adc
mov
inc
jge
repnz
repnz
and
adc
insl
mov
push
or
ljmp
cltd
adc
jge
fs
pusha
mov
test
cld
popf
lds
cld
iret
mov
bnd
or
ret
push
sub
addr16
pop
call
and
lcall
pop
dec
jno
lret
fbld
xor
or
xlat
lock
push
and
lcall
inc
fsubl
nop
fldt
or
pushf
and
pop
arpl
leave
lds
mov
cmc
rcll
filds
xchg
xchg
and
add
add
retw
pop
xchg
mov
dec
imul
icebp
bound
das
outsb
pop
fs
dec
and
test
scas
jl
sub
sbb
shrb
lcall
inc
push
cmp
push
sub
ja
add
std
fstps
cld
test
insl
inc
push
pop
loop
lea
cmp
mov
push
or
cmp
js
in
push
sbb
repz
fs
cmc
inc
mov
or
adcb
xchg
sub
scas
mov
and
sub
mov
xchg
ljmp
dec
mov
add
xchg
repz
jp
inc
pushf
iret
fs
insb
xor
out
push
cs
and
inc
ucomiss
out
and
mov
in
test
xchg
xchg
dec
adc
shlb
out
mov
ret
test
lcall
add
lret
and
lea
je
pop
les
movsb
jmp
popl
aam
mov
push
mov
cld
stos
push
xchg
cwtl
and
xchg
and
jae
mov
iret
mov
cmp
adc
es
or
sub
lods
sahf
cmc
xchg
and
xor
lods
add
push
cltd
jno,pt
jnp
lahf
mov
into
adc
and
push
neg
fisubrl
bound
inc
sub
mov
or
add
mov
lea
cmp
sub
cmp
in
inc
daa
out
inc
testl
rol
add
jb
sbb
push
push
sub
sub
xchg
movntps
sar
jg
push
sarl
sbb
ljmp
in
in
adcb
cmp
icebp
scas
xor
dec
xor
idivb
gs
sbb
bound
insb
xchg
lock
sub
pop
xor
and
sub
mov
mov
cmp
mull
sub
ja
xchg
or
ror
ja
dec
pop
pop
dec
xchg
aad
inc
ljmp
pop
shr
iret
sbbb
das
fs
je
addb
int
pop
mov
inc
daa
xlat
sub
adc
test
lods
mov
cmc
mov
xlat
loopne
cmp
xchg
cmc
cmpsl
dec
lret
icebp
loop
jge
mov
nop
jmp
int3
pop
cwtl
mov
in
pop
test
rcll
pushl
fcmovnu
jo
aad
sub
xlat
loop
jnp
sub
aas
dec
adc
scas
cmpsb
lock
push
ljmp
push
jge
pop
stc
addr16
xor
js
icebp
mov
lret
fstps
inc
adc
cmpsl
subb
jo
addl
and
sqrtps
fistps
add
sbb
mov
pop
push
lods
push
shrl
loopne
fucomip
jmp
push
rorl
bound
cmpsl
jge
sbb
and
sarl
nop
cmp
ljmp
iret
pop
jle
fldl
movsl
in
mov
mov
adc
adc
movsl
in
pop
popf
cmpsb
fimull
adc
fnsave
hlt
push
or
lret
xchg
pop
ret
pushf
es
inc
js
repnz
and
loope
test
push
inc
arpl
inc
mov
xor
push
cmp
push
sub
sub
and
add
mov
sub
xor
incl
add
dec
pop
test
pusha
sub
jb
dec
push
cmp
je
mov
mov
xchg
ret
stos
sub
flds
popf
clc
sub
test
fcoms
push
dec
les
and
leave
shrb
cmpsb
cmc
pusha
jnp
leave
aas
test
mov
das
or
dec
and
das
mov
imul
sti
aaa
pushl
sub
out
rclb
dec
insb
mov
mov
cmp
mov
int
movsb
cmpsb
test
dec
adc
jl
inc
lods
inc
adc
mov
out
ficomps
pop
mov
icebp
add
cli
aas
sbb
jmp
sti
mov
mov
cmp
dec
sub
cli
sbb
out
push
mov
xchg
test
insl
and
jb
cli
sub
pop
xchg
inc
pushf
push
mov
in
loopne
popf
lret
or
aam
sbb
adc
jecxz
rcl
cmp
popf
mov
clc
jg
adc
push
out
xor
ret
mov
cmp
mov
xor
mov
movsb
std
mov
bound
jb
fmuls
repz
insb
add
sahf
into
repz
and
sub
fnstcw
add
push
dec
out
cmp
pop
fidivrs
cli
mov
jae
inc
xlat
adc
and
cmp
cmpsb
xor
cs
icebp
mov
cwtl
jmp
push
sbb
out
mov
push
mov
sbb
rcrb
mov
dec
pop
push
out
dec
pusha
jecxz
and
jns
movsl
inc
jp
fst
pop
cmpb
fidivrl
fdivl
pop
ja
sub
iret
sub
pop
cmpb
mov
andnps
add
cmp
iret
je
fmul
and
jno
test
test
inc
push
push
pop
int
adcb
cmc
loope
mov
insb
sbb
and
sbb
into
jbe
out
push
cmp
xchg
out
pop
mov
clc
push
test
std
xchg
xchg
pop
add
xchg
pop
cwtl
xchg
xchg
fmuls
mov
jp
lods
sub
hlt
xchg
out
sub
xlat
xor
loopnew
push
divb
out
mov
adc
bound
les
xchg
je
sub
insb
in
jno
and
or
lea
sub
jp
add
cmpsb
dec
rorb
and
xor
mov
dec
mov
stc
xchg
push
test
test
orb
fnstcw
jp
jae
cli
nop
jns
in
inc
adc
dec
mov
js
hlt
cli
or
xchg
fistps
pusha
add
leave
ret
push
out
sub
lods
jbe
int3
cltd
outsb
xor
or
repz
mov
xlat
lea
dec
jge
sub
dec
ficomps
xchg
mov
shll
push
dec
xor
push
mull
sbb
xchg
test
cmp
or
loope
insl
mov
test
mov
xchg
sti
pop
add
push
hlt
mov
call
dec
mov
scas
ljmp
mov
in
dec
sti
bound
clc
bswap
cmp
jmp
inc
and
out
test
scas
lea
sbb
add
inc
stc
shr
xchg
daa
lret
icebp
sub
loope
daa
add
add
rclb
aas
xchg
jae
mov
mov
int3
enter
stos
sub
orl
repz
add
inc
mov
insb
add
js
bound
push
cmpsb
fcomp
test
icebp
out
pushf
fwait
int
movsb
lods
insb
mov
incl
aad
mov
mov
daa
xor
movsb
jnp
sbb
lahf
xchg
pop
xchg
out
push
fistps
cmp
pop
loopne
dec
in
xor
divb
lock
sarl
xor
cmp
in
fdivs
in
sbb
adc
or
mov
cld
add
and
in
inc
into
in
mov
mov
stos
push
dec
ffree
mov
jbe
inc
aas
push
lcall
lds
cmpsb
icebp
ds
pushf
push
fidivl
imull
dec
mov
xchg
cs
dec
ret
das
or
jl
pop
fldl
adc
daa
ds
pop
mov
cli
inc
shr
repnz
hlt
mov
movsb
jbe
in
mov
jp
adc
xchg
jo
xchg
push
adc
decl
sbb
adc
xchg
mov
dec
add
test
add
push
dec
xchg
enter
out
and
pop
pop
xchg
aas
jp
xchg
mov
int
xchg
xchg
dec
insb
jbe
push
fstpt
push
cmp
sbb
jae
dec
inc
daa
mov
jne
push
gs
cmp
cmp
push
add
pop
jle
loope
xor
leave
adc
loopne
cmpsl
jl
jge
sti
aad
jle
ljmp
int3
xchg
and
popf
adcl
aad
jl
sub
mov
or
jns
testb
insb
or
cmp
or
mov
mov
sub
xchg
adc
cmp
shlb
xchg
mov
xchg
loop
jp
iret
mov
jns
iret
jl
xor
fwait
jbe
sahf
sbb
mov
mov
aad
test
adc
out
in
iret
inc
rcrb
cmpsb
mov
sahf
cmp
ljmp
pop
enter
xor
lock
fcomps
int3
or
xor
mov
jo
xchg
repz
loop
mov
lods
mov
pop
out
fidivl
xor
pop
aad
xor
jno
dec
sti
pusha
js
dec
rol
sbb
repnz
es
outsl
lret
mov
mov
clc
scas
mov
pop
das
mov
jae
enter
testl
insb
loopne
xor
cmc
icebp
xchg
dec
lock
les
das
data16
shr
inc
iret
and
in
mov
add
ret
int3
mov
insl
push
roll
and
lea
push
sbb
orl
nop
fnsave
mov
dec
ss
shrb
mov
xchg
divl
mov
add
xchg
popa
mov
out
mov
push
adc
adc
sub
cmp
fstps
js
popf
std
push
cmp
les
aam
sbb
push
leave
scas
add
xchg
lahf
out
dec
mov
push
out
add
xor
mul
sahf
daa
or
sbb
minps
sbb
das
pop
fisttps
xlat
lock
mov
jb
cld
out
in
jge
repnz
stos
and
jmp
sub
nop
stos
jo
fisttps
dec
cmpsl
xlat
jl
mov
jg
push
notl
push
dec
mov
add
push
insl
in
and
sub
repz
insl
jo
lret
push
mov
jnp
je
push
clc
push
adc
rorl
fdiv
hlt
jp
shl
xchg
mov
hlt
sbb
add
outsl
mov
xlat
stc
xchg
pop
inc
pop
movsl
dec
fs
inc
call
pop
or
pop
adc
scas
jecxz
push
fdivrl
jecxz
cwtl
lds
cmp
test
mov
jbe
mov
pop
mov
das
rcrb
add
inc
pop
mov
jmp
shrb
stos
pop
sbb
or
lcall
adc
sub
xor
sbb
cmp
aas
enter
jbe
ja
lods
orl
insb
lcall
add
inc
cmpsl
add
mov
hlt
or
out
jge
xor
xchg
test
std
out
push
fwait
pop
inc
wrmsr
hlt
adc
fbld
push
or
call
aam
aad
notl
push
xchg
xchg
inc
dec
mov
mov
or
insl
sbb
vpmulhuw
icebp
out
lea
in
cmp
negl
cs
push
fldenv
xlat
mov
add
inc
xchg
cltd
pop
ljmp
cmp
clc
cmp
push
add
call
shl
xchg
std
out
mov
xchg
popf
jle
push
sub
xor
test
or
out
outsl
sahf
jb
jl
insl
sbb
dec
pop
js
js
xor
inc
test
sub
loope
in
sti
dec
lock
mov
xchg
call
in
aam
mov
cmp
sbb
pop
sbb
or
or
xchg
jb
cmp
and
or
mov
pop
and
cltd
pop
sbb
sarl
stos
pop
xchg
in
xchg
sub
aas
out
and
sub
negb
movsb
repnz
ficomps
mov
enter
pop
mov
int
test
cmp
mov
pop
sbb
cltd
mov
sub
or
sbb
and
and
inc
stc
cli
and
push
xor
cmp
sub
xchg
sub
add
xor
lret
jg
sub
adc
mov
aas
aaa
lods
mov
je
loope
rcrb
xchg
xor
add
adc
mov
push
nop
jecxz
mov
lods
fwait
fwait
cld
ds
in
adc
ja
subb
jnp
mov
jmp
rcl
shll
fucomi
call
pop
or
sbb
mov
cld
push
mov
jo
es
mov
imul
aas
mov
adc
scas
push
aas
scas
int3
xor
sbb
jle
adc
pop
jp
lods
jp
pop
sbb
shrb
aas
mov
bound
cmp
mov
divb
xchg
daa
bound
add
aas
jb
lock
xchg
xor
jo
pop
imul
pop
jb
leave
or
cs
sahf
lock
mov
jle
arpl
lock
adc
jmp
or
mov
inc
pop
adc
fldt
pop
xor
in
mov
fdivl
dec
aam
les
je
repz
lret
jle
in
inc
mov
cmp
jmp
repz
dec
jae
imul
andl
mov
pop
push
cmp
xor
push
jg
out
and
adc
ljmp
push
movsl
or
pushf
xor
fldenv
rorl
mov
outsb
insl
dec
daa
cltd
je
pop
pop
movzwl
push
push
push
jo
cmp
out
in
repz
sub
lahf
test
in
push
push
mov
mov
inc
lahf
and
test
insl
test
stos
aad
add
insl
xchg
lcall
mov
fs
xchg
ret
fstpl
cmpb
sub
arpl
push
jge
inc
outsl
nop
hlt
cmp
jae
gs
mov
js
test
mov
out
jo
adc
mov
gs
cmp
xor
inc
inc
pop
mov
pop
btr
xchg
cmp
dec
fildll
fwait
fadd
jb
jno
jmp
std
or
mov
sub
ljmp
pop
inc
jns
xchg
push
mov
insb
sbb
cld
nop
lret
mov
shl
add
out
mov
cmp
dec
xchg
xor
xchg
mov
shll
ljmp
test
and
add
sub
xor
push
test
or
xor
pop
rorb
cmpsb
sub
stos
pop
adc
xchg
fsubs
mov
cli
lds
or
faddl
test
stos
sbb
cli
dec
xcrypt-cfb
cmpsl
out
ficompl
sbb
aas
test
dec
sahf
adc
adc
xchg
out
pop
ja
xchg
mov
mov
xchg
jne
inc
fsubs
mov
and
iret
lods
bound
push
xorl
cld
or
sub
xorb
adc
push
add
dec
xchg
lea
add
push
es
lcall
std
mov
dec
in
xlat
cmpsl
mov
lods
mov
jmp
sub
ds
jne
adc
push
mov
jno
push
ss
fwait
jmp
sahf
push
addr16
cmp
adc
mov
iret
ja
int
sbb
fiaddl
fadd
dec
pop
adc
adc
popf
ja
adc
push
mov
fstpt
mov
push
push
pop
dec
lea
into
jo
aaa
decl
add
movsl
ficoms
ret
jbe
mov
dec
ja
xor
dec
leave
cmpsl
sub
push
mov
push
and
or
cmp
add
sub
xor
ja
cmc
test
mov
imul
mov
sub
adcb
out
push
enter
adc
xchg
sub
popf
and
out
and
cmp
xor
and
mov
or
rorl
ss
mov
aaa
pop
jmp
xchg
lods
xlat
jbe
shrl
ljmp
enter
cli
and
fucomip
pop
cwtl
pusha
add
call
jb
mov
or
mov
mov
cmp
or
sbb
jecxz
loopne
mov
push
push
ret
push
pop
mov
movsb
rclb
stos
call
lret
dec
testb
fcompl
add
push
jg
xor
adc
push
nop
and
mov
bound
sahf
fisubrs
fistps
lods
adc
icebp
sahf
pushf
jns
inc
in
repnz
idivl
notl
out
jne
fidivl
push
lods
aam
maskmovq
notl
jmp
sub
rorb
popf
xchg
sub
mov
aas
push
sahf
int
push
into
stos
and
ss
fucompp
pop
mov
call
cmpsb
imulb
lcall
pop
enter
cmp
sbb
cld
xchg
xchg
mov
fs
ja
xor
sub
push
jecxz
pop
out
sbb
fs
out
pop
and
jne
add
cmp
sub
xchg
mov
jmp
or
js
or
test
dec
ret
pop
xor
mov
fildll
jle
inc
shl
xor
sbb
jb
jne
push
enter
lods
ds
fstpl
jp
pop
add
jmp
jae
add
into
and
push
dec
std
sbb
movsb
bound
pop
jns
cs
cltd
hlt
mov
push
push
pop
imul
shl
rcr
cmp
jmp
mov
je
mov
insb
dec
xchg
fadds
or
xlat
insb
mov
jmp
jmp
sub
jne
sbb
push
adc
sti
or
push
jae
ja
lahf
jbe
add
test
push
fcoml
test
nop
ja
mov
mov
jnp
inc
popf
repnz
pop
nop
sub
outsb
not
jl
mov
sbb
cmp
subl
lea
add
mov
push
xor
cs
jae
jne
repnz
mov
imul
daa
cmp
repnz
in
popa
cmp
iret
orl
sbb
lds
or
dec
jle
xchg
inc
inc
adc
mov
sarl
xlat
insb
inc
inc
decb
xchg
mov
pusha
push
add
stos
or
mov
ffree
xor
mov
inc
lret
push
fisttps
or
push
pop
xchg
shll
scas
inc
inc
dec
fisubrs
inc
enter
int
rorl
ret
mov
push
push
xchg
insl
dec
xor
xchg
aaa
xchg
ss
ds
in
mov
push
push
imul
pop
leave
and
pop
sub
sbb
jmp
lret
dec
jp
out
cmp
xchg
add
outsb
sub
scas
xor
ja
adc
mov
and
mov
insb
sbb
inc
push
push
and
push
push
rorb
je
mov
cs
ret
cmpb
enter
xchg
std
mov
push
mov
popf
add
fucom
sub
mov
mov
test
insb
iret
pop
push
ss
addr16
jge
jo
pusha
push
sahf
mov
lods
mov
imul
lcall
lds
int3
dec
fwait
push
sub
test
push
inc
mov
cmp
je
xchg
add
pop
scas
sub
jno
xchg
icebp
jne
lea
enter
pop
out
push
out
xchg
xchg
dec
pop
pop
out
xchg
int
sub
xor
xor
jne
jo
or
cltd
fbld
or
cmp
ljmp
lcall
inc
arpl
cs
add
stos
mov
ret
lock
movsb
push
pop
aaa
and
dec
shlb
pop
loop
add
pop
mov
mov
addr16
inc
xchg
sbb
and
aam
inc
jecxz
inc
mov
jnp
jmp
xchg
jge
test
xlat
fisubrs
in
xchg
jge
xor
mov
push
leave
jnp
cmp
into
lock
inc
or
inc
shr
rorb
out
in
nop
in
cmpsl
frstor
xor
in
jbe
jl
lods
jmp
mov
inc
pop
imul
lods
jmp
rolb
icebp
or
mov
mov
outsl
push
sbb
test
bound
xchg
dec
dec
sti
je
repnz
xchg
lods
pop
dec
outsl
or
ret
push
jl
repz
sbb
jg
xor
push
daa
sbbb
cmp
mov
push
std
push
in
mov
xchg
pop
add
shl
jne
push
sbb
fisubl
lret
adc
jge
dec
imul
and
and
stc
jne,pn
stos
push
cmpsl
in
mov
adcb
lods
rcll
shrb
fwait
or
insl
bound
or
mov
cmc
adc
sbbb
loopne
and
cmovle
sahf
pusha
add
stos
adc
popa
movsb
ret
sub
cmp
jne
mov
outsl
pop
lock
stos
stos
mov
lods
ret
jecxz
ds
into
pop
ret
sbb
enter
ss
mov
inc
hlt
int
xorb
mov
testb
xor
fistl
ja
pop
push
lods
xor
stos
pop
rorb
mov
cmp
mov
nop
repnz
cld
xorb
or
push
mov
pusha
lods
ds
mov
sub
ljmp
xchg
leave
mov
sbb
sbb
adc
adc
dec
mov
jecxz
inc
ret
sub
jle
inc
jae
sahf
pushf
or
outsb
cmp
and
dec
aam
notb
shlb
arpl
sbb
cli
and
fildl
mov
jo
and
sbb
push
xchg
shll
test
icebp
and
pop
sbb
stos
outsb
clc
jl
pop
xor
pop
mov
popa
out
out
inc
in
in
cwtl
jne
push
icebp
sbb
mov
bound
dec
int
inc
std
push
sub
scas
mov
adc
xor
dec
sbb
cwtl
push
dec
cmp
jno
mov
aaa
sbb
pop
das
imul
lods
jns
sbb
int
scas
cmpb
sub
inc
loopne
out
pop
inc
or
pslld
and
push
stc
dec
xchg
imul
mov
cld
pop
cld
sahf
jmp
inc
xor
fcomip
repz
mov
xchg
jno
and
outsb
jmp
push
fcompl
cmp
mov
lcall
push
fwait
lret
filds
sahf
and
cltd
call
ds
sahf
lods
inc
cltd
jmp
mov
test
push
dec
icebp
aaa
movsb
test
xlat
add
idiv
fistps
xchg
mov
jae
pop
xchg
cld
and
arpl
fists
push
and
aaa
clc
sub
sbb
mov
imul
call
add
mov
int3
cld
addr16
jge
es
test
jle
push
mov
xor
js
pop
mov
lea
add
andb
add
dec
sub
arpl
mov
mov
cmc
pop
popf
mov
popa
lods
flds
mov
cmp
pop
or
call
es
idivl
scas
inc
lock
ret
add
sbb
repnz
leave
test
ficoms
push
or
and
inc
dec
adc
mov
std
cmp
dec
enter
or
mov
sub
in
sahf
inc
add
xchg
jmp
dec
inc
dec
sub
mov
cld
jmp
cmp
jge
or
in
inc
jo
push
aaa
call
daa
xor
les
test
jg
sub
jno
cmp
sub
push
test
in
pop
andl
xchg
ja
cld
aad
mov
xor
cmpsb
jne
xlat
ret
data16
xchg
call
jecxz
push
aaa
push
push
divl
and
inc
outsb
jp
cmpb
cmp
mov
mov
xchg
push
fbstp
lods
push
mov
and
and
stos
repnz
xchg
sahf
cli
jg
pushf
stos
test
dec
or
xchg
mov
stos
mov
inc
push
dec
test
outsb
and
imul
int3
push
xchg
int3
and
add
mov
inc
fdivp
popa
rcl
fcomps
bswap
lret
popf
aas
push
in
int
and
sbb
test
fnsave
andb
or
outsl
mov
sub
dec
fistpll
decl
jg
push
xchg
inc
or
ljmp
iret
in
mov
fsubs
mov
add
mov
mov
mov
or
pop
jns
sbb
pop
cmp
adc
add
fiaddl
loop
mov
adc
mov
fldt
push
sub
popf
in
ss
inc
mov
mov
shlb
popa
mov
rcrb
mov
dec
jno
into
out
add
sahf
decl
add
sub
mov
cmc
ss
addb
popa
adc
and
mov
data16
ljmp
iret
ret
insb
pop
addr16
xchg
inc
lock
xor
xlat
lea
push
push
daa
cmpsl
inc
inc
movsb
pushf
into
sbb
les
cli
mov
xchg
stos
jmp
pop
out
cs
jo
loopne
adc
add
repnz
sub
pop
dec
mov
mov
int
aad
cmpsb
or
rcll
popa
mov
lcall
dec
arpl
das
mov
jmp
les
repz
int3
mov
shll
pop
imul
sarb
fwait
sub
outsb
sbb
push
jae
loopne
popf
pop
xor
dec
jmp
xchg
pop
pop
dec
lcall
sbbb
sub
jecxz
sahf
nop
xor
fldl
idivl
ja
add
cmp
sbbl
lods
mov
pop
push
inc
test
and
addr16
daa
outsl
loopne
push
incl
xchg
fmuls
in
dec
sub
aad
cltd
dec
pop
lods
lahf
sbb
adc
je
arpl
int3
mov
aad
nop
push
addr16
mov
xor
sub
add
test
call
cli
popa
std
dec
fwait
leave
inc
add
mov
shr
or
movsl
std
jnp
imul
jns
cmp
add
add
dec
lahf
repnz
mov
dec
inc
mov
cmp
mov
dec
mov
cmp
or
fs
inc
push
notl
movsb
inc
in
pop
clc
sbb
jp
add
dec
pop
into
adc
push
lea
rsm
movsb
adc
dec
pop
mov
sbb
aas
out
sbb
outsb
inc
daa
push
scas
cwtl
cmp
cmp
cmpb
push
mov
lds
leave
or
sahf
and
lock
popa
lea
sahf
add
lret
out
jge
jns
sub
xchg
sub
push
or
in
scas
xchg
ret
test
shrl
and
push
daa
mov
and
dec
out
bound
sub
in
jno
imul
movl
mov
mov
jbe
jnp
xor
sub
jno
shll
adc
mov
adc
mov
xchg
clc
outsb
ss
mov
arpl
popa
xchg
loope
scas
push
jns
shll
arpl
mov
jp
push
jno
push
mov
shl
adc
cs
fmuls
and
js
mov
cmpsb
or
out
movsb
idivb
sahf
xchg
push
repnz
lcall
push
flds
add
std
dec
pop
hlt
mov
push
cmc
outsl
cmp
lds
imul
jns
inc
lock
sbb
cs
cmpsl
sbb
out
out
and
js
dec
mov
shl
push
ljmp
push
inc
sbb
fsubs
test
or
sub
cwtl
and
cmp
dec
in
and
push
pop
fsubl
lods
sarl
ja
cltd
mov
add
pop
fisttps
jb
enter
cmp
mov
lahf
or
sub
dec
popf
dec
repnz
je
sti
inc
cmpsl
jge
aaa
and
push
out
xchg
lret
aam
jo
or
div
ljmp
test
xlat
or
jl
push
or
add
jp
adc
dec
and
stc
add
fs
notl
jecxz
lods
and
sti
ja
out
insb
jle
or
lret
cltd
movl
lds
cmpb
loop
fstpt
or
fists
or
push
and
pusha
mov
cwtl
add
push
insl
movsl
scas
daa
mov
adc
aam
das
sub
test
xor
pushf
ret
outsb
jnp
adc
push
mov
clc
mov
mov
mov
enter
clc
push
xchg
xchg
sahf
jb
sub
dec
ljmp
mov
mov
leave
ret
sub
xchg
lock
sbb
dec
icebp
ret
jns
dec
mov
sar
les
nop
or
mov
mov
dec
mov
push
aaa
data16
fisttpl
sub
imul
sub
inc
or
inc
dec
lahf
iret
pop
stc
repnz
jmp
jnp
xor
mov
inc
imul
push
out
jae
je
push
pop
and
dec
arpl
push
push
inc
dec
inc
xchg
adc
push
xchg
pop
mov
bound
or
fldenv
mov
jmp
ljmp
enter
xor
arpl
pop
aam
add
stc
ret
jne
inc
ss
in
test
jl
aam
int
push
adc
js,pt
or
out
pop
iret
dec
pop
mov
arpl
ret
insl
inc
push
aam
mov
addb
cmp
rcrb
mov
cmp
mov
gs
sbb
repz
das
sahf
jge
push
adc
mov
sub
sahf
ljmp
fwait
xor
cmc
or
sub
out
jne
xor
and
jns
pop
mov
leave
dec
data16
outsb
shlb
out
movsb
mov
ljmp
test
sti
test
lock
jnp
pop
jo
sbb
addl
scas
shll
mov
mov
sti
stos
and
inc
jae
adc
clc
dec
fisttps
cli
shlb
mov
push
or
or
rolb
add
std
fisttps
cmp
clc
stc
dec
in
sub
imul
les
cmpsl
fbld
sub
inc
mov
cmpsb
mov
push
aas
fistpl
test
sub
fwait
dec
lret
push
pop
fisubrl
out
imul
cs
imul
pop
outsl
shl
pop
pop
testl
push
push
adc
jbe
inc
mov
inc
fmuls
mov
xchg
repnz
cltd
aam
ret
adc
sub
xor
loopne
ljmp
jns,pt
push
pop
andl
pop
mov
mov
out
lea
cmpsb
mov
inc
sub
mov
scas
sbb
add
imul
mov
or
in
leave
dec
jmp
test
int3
dec
fsubrl
or
sbb
jle
sub
sbb
inc
outsl
mov
push
in
or
dec
sbbl
cmp
push
xchg
lret
push
das
loopne
jl
mov
dec
add
data16
cltd
hlt
aam
xlat
repnz
cmp
cmc
adc
push
nop
cmp
imul
call
sbb
rcll
inc
lcall
insb
addr16
icebp
push
xor
jg
lods
insb
fisttpll
push
ret
fistl
icebp
aas
push
mov
push
lahf
lods
cmpsl
ret
das
rcrl
push
jg
hlt
data16
mov
sarl
jl
sub
insb
mov
sti
nop
mov
mov
in
cli
dec
daa
xor
and
push
shl
jo
shll
inc
or
xchg
test
mov
pop
sub
in
ljmp
sub
lret
mov
cmpl
cmp
push
and
lea
cmp
jnp
imul
fstps
mov
or
nop
iret
rclb
inc
and
fiaddl
ret
fisttpl
mov
xor
add
mov
mov
nop
out
pop
int
mov
xchg
mul
les
test
cmc
ficoms
mov
lds
jo
data16
imul
or
xchg
xchg
push
cmp
stos
pusha
add
cwtl
icebp
pop
mov
adc
repnz
jmp
je
pusha
jbe
xor
inc
out
repnz
jmp
stc
jg
insb
lock
mov
inc
mov
sub
sarl
and
lret
loop
pop
mov
fistl
mov
insl
and
inc
es
mov
dec
lret
cmp
int
shl
insl
or
jmp
push
xchg
jne
je
pop
lahf
dec
pop
sub
pop
sti
sbb
das
shll
inc
push
sub
mov
jle
fcoml
les
adc
push
mov
lods
mov
clc
ds
mov
xchg
and
in
rcrl
mov
lahf
cs
mov
mov
xchg
sub
ja
in
dec
in
fistps
adc
push
dec
ret
aam
or
les
mov
inc
pop
andb
add
sbb
jo
arpl
shll
inc
je
iret
subl
aaa
and
cli
loopne
sub
mov
mov
outsl
out
jb
stos
or
cmc
xor
jg
xor
into
jbe
xlat
jge
out
inc
dec
sub
leave
daa
and
cs
or
pop
popa
jl
sub
push
or
and
pop
aad
fsubl
int3
jmp
lods
mov
mov
inc
jnp
popf
jnp
sti
pushf
addl
dec
mov
mov
and
mov
xchg
loop
js
adc
xchg
ret
push
and
stos
sub
cmc
nop
mov
jmp
mov
or
lock
subl
pop
adc
pop
add
in
mov
pop
mov
jae
mov
rolb
aaa
sar
in
cmp
in
xchg
sbb
into
lcall
fdivl
outsb
jns
das
data16
or
adc
mov
mov
fs
xchg
in
push
xchg
das
jge
mov
mov
jle
mov
bound
cwtl
ds
mov
pop
daa
or
push
adc
and
sarl
xor
btc
xlat
jge
mov
cmp
fs
mov
cmp
push
xchg
loopne
xchg
icebp
or
movsb
cmp
int3
into
stos
nop
mov
lret
or
shll
mov
and
out
mov
push
dec
mov
mov
lods
xchg
xchg
pop
ret
andl
popa
decl
into
mov
and
cmp
rcr
pop
out
and
sti
sbb
fnstcw
mov
mov
movsl
and
or
pop
lods
ret
pop
mov
inc
mov
push
rclb
and
clc
xchg
pop
adc
push
in
pushf
inc
sbb
sub
cmp
imul
bt
push
sub
lret
pop
movsl
fsubl
adc
cmp
add
nop
xor
popf
sub
je
je
jmp
push
daa
jbe
sbb
ds
fisubrl
in
lods
popa
xor
add
imul
ret
or
push
cmp
dec
lds
mov
dec
sbb
rcrb
dec
test
and
mov
xchg
inc
sub
inc
clc
daa
jbe
cld
dec
mov
aad
inc
xchg
xchg
push
jnp
adc
das
xchg
xchg
add
adc
and
insl
js
les
or
inc
in
mov
aaa
insb
rcrb
push
adc
loope
fsubp
and
pop
int3
jecxz
mov
and
pop
pop
pushf
fimull
loopne
pusha
and
packsswb
subb
pop
push
iret
les
rcl
add
iret
lds
mov
clc
lahf
sbb
call
jo
push
mov
call
push
xor
pop
add
mov
out
out
jmp
mov
repnz
ficoms
aas
out
in
mov
pop
xor
push
push
pop
sub
mov
out
pop
pushf
jne
and
js
dec
mov
fistps
std
ficompl
or
mov
inc
nop
data16
stos
mov
movl
sbb
inc
pop
xchg
jg
lahf
pop
ficompl
cltd
test
mov
sahf
popa
std
jnp
adc
out
bound
out
mov
add
mov
dec
rclb
imul
mov
add
into
fucomi
test
sarb
sbb
inc
imul
or
aas
or
pop
test
inc
jo
out
dec
adc
xor
les
add
push
mov
fcompl
push
or
jns
aaa
push
push
sbb
daa
cmpsb
dec
jb
lock
pushf
fsubr
cmp
mov
adc
jle
fcmovnu
adc
cmpsl
pop
pop
dec
add
mov
adc
call
cmp
jl
mov
rorl
xor
sbb
sub
dec
lods
popf
push
roll
jecxz
sbbb
int3
mov
inc
xor
js
fs
mov
repnz
sbb
dec
arpl
test
sub
mov
repnz
pop
or
add
mov
or
icebp
mov
nop
dec
loop
jne
iret
pop
sbb
ds
jle
xor
adc
cwtl
lcall
sub
shl
mov
mov
outsl
mov
daa
ja
arpl
push
outsb
inc
arpl
lea
lret
jle
fsubrs
dec
or
cmc
in
or
lcall
mov
imul
lea
mov
mov
adcb
jmp
pushf
sahf
into
aas
mov
adc
adc
and
adc
cmpsb
or
pop
cmp
adc
mov
enter
cmpb
push
fdivr
mov
shll
cmp
loope
add
cld
inc
idivl
push
lock
pusha
mov
sbb
pop
adc
cmp
clts
aas
fnsave
ss
mov
mov
or
mov
dec
dec
sub
lcall
cld
loop
dec
aaa
xorb
out
popf
std
adc
cmp
out
push
outsl
push
pop
adc
insl
pop
mov
add
jo
push
insl
out
fdivrs
daa
fwait
mov
fldl
movsb
cmp
jle
mov
xlat
adc
in
inc
cmp
mov
int3
add
das
xchg
les
jae
sahf
insl
addr16
push
ljmp
in
add
add
int
movsb
inc
inc
mov
push
jbe
mov
mov
pop
js
sbb
repz
mov
arpl
mov
cld
push
int3
sbb
sbb
lahf
test
addr16
jno
ja
aad
pop
xor
xor
inc
call
lret
pushf
mov
int3
dec
adc
push
push
xor
insl
fildll
pop
sbb
sti
sbb
andl
loop
xor
jmp
pop
dec
dec
mov
jae
and
push
hlt
popf
shll
push
out
inc
pop
lock
repnz
aad
dec
push
in
rep
ret
jb
dec
cltd
call
inc
hlt
test
test
sbb
jp
enter
pushf
stc
xchg
push
rclb
push
js
mov
test
bnd
or
ss
cmp
mov
sub
cld
fadd
jmp
jle
fwait
adc
into
mov
leave
daa
lea
jbe
dec
ret
ljmp
add
xchg
xchg
mov
imull
jno
test
jl
in
and
push
cltd
xor
bound
movsb
lcall
mov
inc
sbb
cmp
fisubs
mul
mov
add
cmp
pop
or
pop
lods
out
mov
ljmp
mov
jo
nop
test
add
inc
add
cmp
lahf
add
movsl
data16
loop
lret
lock
icebp
jle
stos
mov
sub
jl
jmp
cli
fstpt
add
pop
mov
loopne
fldl
mov
cmp
mov
mov
push
inc
orl
sti
add
cmp
push
test
mov
fs
xchg
inc
mov
cs
bound
das
dec
lret
inc
shll
repnz
cmpsb
gs
test
xlat
imul
stc
sbb
inc
outsb
push
imul
sbb
and
or
sarb
loopne
pop
shl
dec
testb
pop
inc
lds
jmp
inc
js
or
cmp
outsb
push
cmpsl
das
xchg
shlb
arpl
sahf
jge
add
insl
lds
mov
lret
mov
xchg
andb
inc
fwait
xor
or
outsb
ret
xchg
fmulp
mov
mov
repz
xchg
inc
jle
push
fstl
mov
insb
push
xor
out
lret
mov
xor
es
dec
dec
ljmp
cmp
sub
mov
xchg
push
dec
outsb
and
xchg
stc
mov
outsb
inc
aas
orl
inc
push
hlt
lock
xor
sti
ljmp
xor
int
sbb
fildl
test
lods
pop
xchg
loopne
shl
enter
push
ja
dec
inc
push
psrlw
adc
fs
fbstp
fldenv
pop
cwtl
js
insl
mov
dec
in
pop
shlb
dec
sub
hlt
jecxz
iret
imul
out
insl
and
push
hlt
cmp
adc
mov
lds
pop
jnp
sub
mov
rcrb
fbld
jp
sub
lea
mov
and
jecxz
add
cs
imul
ss
pop
ret
jmp
inc
jmp
lahf
mov
sub
add
cmp
inc
sahf
push
push
jmp
cmc
clc
gs
cmp
jge
jmp
shrl
pop
gs
add
mov
sub
cmpsb
movsl
lock
cld
xchg
mov
xchg
mov
pop
xchg
cmp
mov
pop
mul
out
xchg
outsb
push
outsb
scas
push
insl
mov
stos
fisubrs
or
jns
aad
add
cmpl
shlb
mov
sub
inc
add
aad
fcmove
push
cmp
dec
addl
inc
out
arpl
adc
fucomi
dec
fistpll
scas
add
popf
dec
rcr
ljmp
out
dec
mov
add
sbb
jge
in
leave
jbe
ja
loopne
jmp
add
xchg
and
dec
cmp
mov
shr
pop
andb
nop
orl
js
jns
mov
push
mov
xchg
dec
and
mov
aam
and
ret
andl
mov
mov
jae
and
ja
or
fwait
push
xlat
pop
aam
repz
filds
mov
cmp
xorl
push
hlt
sbb
jae
xor
add
std
add
or
xchg
enter
or
test
mov
loopne
mov
xor
ret
add
push
sbb
add
adc
rcll
and
mov
push
mov
inc
movsb
mov
pop
sub
ss
stc
or
cmpsb
jnp
adc
cwtl
adc
inc
add
dec
mov
mov
shr
movsb
jnp
shr
ss
and
daa
adc
mov
roll
mov
nop
test
mov
jg
lods
insb
into
xor
or
mov
mov
movsl
adc
and
loop
lea
in
or
sub
test
xor
jecxz
or
dec
xor
jp
xchg
and
dec
int
pop
dec
enter
js
jo
leave
xor
aas
xchg
cmp
adc
and
sbb
sbb
outsl
divl
and
out
aas
subl
jmp
and
mov
mov
ljmp
xor
dec
mov
push
insl
mov
pop
inc
jecxz
jnp
out
bound
iret
popa
xchg
jnp
cli
push
and
les
push
or
jo
pop
push
xchg
adc
push
xor
push
jge
xorb
mov
add
lahf
jo
mov
stos
movsl
cmp
in
loopne
not
aaa
fdiv
and
daa
pop
popa
jns
scas
push
insl
rcrb
jns
mov
pop
dec
fs
xchg
repnz
aaa
iret
js
mov
call
rcll
hlt
jge
sti
mov
repnz
fs
js
adc
aaa
lds
pop
adc
popf
bound
repz
add
xor
out
imul
shlb
add
or
xor
outsb
mov
mov
psubsb
test
xchg
xchg
dec
inc
aaa
xchg
fldcw
jb
mov
cmc
pop
mov
rorl
xchg
sub
add
adc
cmp
out
and
les
imul
sbb
scas
pop
jo
fnstsw
mov
push
xor
pop
sbb
roll
les
jp
std
scas
movsb
mov
lret
scas
outsl
push
push
outsb
pop
or
mov
adc
mov
mov
and
cmp
xor
dec
scas
jns
popf
rorb
fsubs
aam
in
rcrb
adc
sti
andl
mov
pop
xor
insb
pop
fstpl
mov
sbb
sbb
fwait
cmp
cli
test
pusha
shll
dec
shlb
leave
movsl
addr16
ficoml
xchg
lds
cmp
adc
pop
js
jbe
sub
sub
mov
sub
and
popa
sti
pop
nop
in
jne
cmpl
and
push
pusha
repnz
imul
xor
inc
sbb
testb
or
outsb
mov
scas
mov
xchg
push
mov
insb
sub
sarb
pop
test
pop
ret
push
data16
iret
int
negl
shll
out
push
mov
pushf
lods
inc
inc
lcall
adc
in
mov
push
stos
or
pop
sub
les
sbb
lods
dec
push
push
mov
imul
mov
out
aam
add
inc
and
lret
das
adc
pop
sbb
jne
ss
movsb
fdivr
mov
cmp
stos
bound
mov
out
shlb
add
adc
sbb
jmp
pop
sbb
pushf
and
subb
jmp
stos
andl
jecxz
jno
xor
pop
dec
inc
std
bound
hlt
mov
test
scas
or
cwtl
pop
fs
arpl
sub
aam
pop
adc
dec
and
cmp
pop
adc
jmp
aad
jl
sbbb
cmpsl
adc
jo
out
mov
cmpsb
jecxz
fcmovu
or
dec
lret
aam
cmp
int
xchg
jns
dec
clc
pop
in
xor
daa
add
mov
mov
dec
xchg
dec
and
xor
or
xor
or
les
mov
icebp
lock
in
cli
ds
fstpt
dec
sbb
xor
push
sub
mov
shll
jge
jb
daa
out
cmpsl
push
sbbl
pop
lcall
sub
mov
or
orb
dec
bound
movsb
push
adc
cli
adc
push
insb
push
outsl
jns
sbb
cmp
mov
pop
mov
mov
enter
es
mov
pop
jge
test
mov
fsub
loope
cmpsb
je
jae
imul
lcall
xchg
push
lahf
push
ds
movsb
and
pop
nop
lahf
sbb
out
pop
scas
out
push
lods
iret
jbe
xchg
sub
jnp
add
stc
and
xchg
xor
mov
jge
inc
mov
mov
cmc
js
lret
sub
xor
inc
xchg
dec
shr
gs
inc
cmp
fs
aad
gs
cmpsb
mov
mov
jp
scas
je
das
dec
loop
cmp
inc
test
orl
out
add
daa
aam
mov
jmp
fucompp
stos
into
jp
cmp
jns
xchg
pop
icebp
add
mov
cmp
dec
pop
rcrb
jecxz
pop
jnp
or
cmp
out
and
jecxz
mov
mov
mov
xchg
jne
push
mov
mov
lcall
mov
mov
popa
jecxz
xchg
fs
test
inc
ja
cs
pushf
mov
ucomiss
pop
lods
andb
and
cmc
shlb
inc
dec
out
lret
cmp
sbb
adc
push
push
in
loope
cmp
mov
push
imul
sbb
pop
push
mov
or
mov
dec
int3
xchg
jnp
or
addr16
xor
mov
mov
mov
push
add
dec
mov
movsl
ret
fldcw
mov
mov
xchg
mov
cmpsb
jle
nop
je
mov
jle
or
sar
xor
and
iret
insl
xchg
adc
aam
sub
xchg
je
mov
stos
popf
and
lcall
jmp
mov
pop
push
jp
cmp
ret
int3
xchg
jg
lcall
rcrl
stc
adc
inc
pop
add
mov
icebp
dec
adc
xchg
xor
lcall
hlt
mov
lods
dec
push
and
xor
test
loope
aas
stos
and
inc
movsl
enter
jp
mov
xor
cmpsl
adc
adc
mov
cmpsb
arpl
mov
xchg
daa
loope
popl
adc
jno
adc
jae
mov
pop
mov
mov
adc
fxch
mov
iret
pop
cmp
mov
push
xor
popa
or
inc
or
mov
push
sub
mov
push
ror
mov
push
dec
stc
sub
lcall
push
xchg
orb
jno
jb
mov
lahf
mov
nop
rorl
push
inc
sub
stos
js
sbbl
sbb
pop
add
xchg
gs
mov
add
pop
fstpt
rorb
push
mov
sub
push
int3
stos
mov
clc
outsb
not
inc
dec
mov
shlb
push
gs
leave
mov
cli
mov
test
mov
and
sub
pop
push
mov
push
pop
negl
inc
or
and
in
cmp
push
insl
repnz
or
das
push
mov
mov
fisubs
mov
js
cmp
insb
jp
sbb
fiaddl
stc
cmp
jle
in
insl
sahf
aaa
outsl
mov
mov
mov
daa
in
xchg
hlt
jg
inc
and
jae
jl
bound
mov
mov
inc
enter
sarb
sbb
imul
shll
test
out
insl
fnsave
mov
jecxz
adc
jno
mov
cmp
movsb
insl
dec
das
imul
cmc
fistpl
mov
cs
aaa
jp
cmp
int3
leave
adc
mov
sbb
sub
sub
adcl
icebp
pop
xchg
sbb
pop
or
cmp
mov
loope
xchg
in
sbb
dec
sub
add
mov
or
cmpsl
in
push
loope
mov
int3
icebp
add
dec
jmp
mov
cwtl
push
push
lods
lods
dec
inc
ret
sti
mov
or
andl
mov
into
stc
call
js
jecxz
imul
xchg
movsl
jno
cmp
insb
push
xchg
push
in
mov
in
inc
xchg
es
in
xchg
mov
xchg
rcr
cmp
fistpl
in
pushf
xchg
fbstp
cmp
cmpsl
mov
cmp
sti
and
pop
fidivl
push
sbb
jbe
dec
testb
add
scas
mov
push
jmp
sub
add
mov
adc
fwait
rorl
jp
mov
add
pop
xor
adc
xor
mov
and
or
sub
push
and
mov
xchg
das
dec
std
adc
or
mov
jns
push
and
xchg
je
pusha
scas
leave
jb
sbb
cmpsb
lahf
aam
popa
xor
stos
and
add
loope
pop
mov
dec
jnp
jmp
dec
push
test
notb
js
js
xor
sub
cmp
dec
or
pop
in
xor
std
fnsave
mov
or
and
mov
sub
dec
push
and
in
fwait
inc
js
mov
push
pop
ja
sbb
jo
fisttpll
xchg
xor
and
fdiv
daa
rorl
xor
inc
pop
push
cltd
pop
jb
pop
adc
jl
les
pop
sbb
dec
fisubrl
mov
and
add
mov
cltd
leave
push
and
jmp
int
mov
mov
hlt
int
lds
sbb
cltd
sbb
dec
xor
xchg
aaa
ret
clc
pop
push
mov
pop
dec
shrb
xchg
add
adc
jg
jle
mov
loope
mov
push
mov
and
lea
cmp
xchg
roll
xor
or
loop
jne
aas
xor
add
sub
mov
lcall
sbbb
mov
sbb
jmp
inc
jmp
cmp
repz
or
inc
sbb
ret
sub
xor
and
and
mov
push
icebp
jmp
test
fidivrs
sbb
lret
cwtl
orl
mov
ljmp
js
mov
testb
jle
fldenv
mov
daa
cmpsb
add
push
sbb
dec
xor
adc
lds
enter
hlt
xor
and
in
inc
pop
cmp
fucom
push
mov
and
ret
pop
dec
sub
jno
mov
or
dec
dec
jg
mov
sarl
int
mov
cmpsb
add
adcl
push
inc
push
jmp
sub
lods
shrb
push
retw
or
or
or
mov
dec
cmp
in
addr16
fildll
negl
push
jne
in
lret
divl
clc
fimull
pop
rorl
pusha
jge
je
repnz
cmp
scas
ds
sbb
jmp
in
into
clc
cmp
out
scas
aad
jbe
repnz
dec
push
test
sahf
jp
and
ficompl
mov
mov
fisttpl
sarl
or
dec
lods
mov
les
cmp
adc
in
call
add
mov
fildl
mov
mov
addr16
lret
in
jg
jo
push
mov
shrb
fldenv
pop
add
jno
movl
dec
sub
add
mov
mov
fadds
mov
and
int3
pop
fcmovb
jbe
xor
cmp
daa
and
cmp
movsb
shrl
xor
jmp
ror
outsb
setns
dec
lcall
stc
pop
int3
pop
or
sub
pop
sbbl
sub
mov
rol
jge
lock
mov
mov
int3
jbe
test
addr16
dec
inc
pop
or
sub
dec
data16
push
push
jo
add
sahf
sti
mov
fisttpll
dec
ljmp
aad
sahf
sub
ret
aad
sub
dec
popa
mov
mov
cmp
ret
aad
dec
nop
inc
xor
pop
add
xchg
add
mov
jg
jp
loop
in
xchg
sbb
mov
ds
push
cld
lret
sub
into
outsl
aas
scas
cmc
sub
bound
ss
jmp
jmp
cld
pop
and
ret
icebp
mov
mov
inc
push
mov
pusha
dec
dec
gs
inc
push
push
out
push
dec
dec
iret
fstpt
dec
int
ds
mov
push
dec
inc
lods
cmpsl
lret
jo
lods
xor
lds
pop
popl
adc
mov
fcomps
xor
jns
inc
dec
push
test
inc
loope
adc
pop
adc
push
inc
mov
mov
jmp
test
dec
fwait
repz
xor
fs
jo
and
jb
xchg
mov
sbb
sub
out
push
les
loopne
xor
adc
pusha
sbb
pop
hlt
and
pop
arpl
sahf
cmp
fs
inc
test
mov
cmp
subb
xchg
add
mov
inc
test
or
jecxz
dec
xor
pop
add
mov
pop
lcall
pusha
mov
add
cmp
sarl
push
jb
lea
xchg
xchg
js
testl
adc
xchg
hlt
adc
popf
adc
inc
nop
adc
je
cmp
fistps
aam
mov
pop
mov
cs
lahf
ficomps
jmp
out
pop
push
push
sub
dec
pushw
sub
xor
lds
mov
mov
add
cwtl
push
fdivs
add
pop
dec
popf
sub
push
add
mov
cmp
mov
add
and
cwtl
popa
or
mov
sbb
in
or
pop
cs
aas
cltd
xlat
push
inc
push
cmp
xor
cld
mov
push
mov
cmpsb
cmpl
push
rolb
mov
cwtl
cmp
sbb
rol
int
stc
iret
in
lds
scas
das
sub
and
mov
mov
rcrl
push
mov
repnz
shll
mov
arpl
outsb
outsl
mov
aad
sbb
rorl
xor
mov
mov
out
lods
insl
cmp
mov
nop
fsubs
inc
outsb
fidivrl
jp
inc
call
push
mov
sbbl
mov
cmp
fldcw
inc
jbe
pop
ss
into
jne
or
cmpsb
leave
pop
sahf
lods
or
lods
inc
push
inc
sbb
int
jge
popf
pop
mov
cwtl
idivb
dec
pop
mov
or
sbb
lret
sub
bound
fldl
mov
push
sub
out
cmp
sar
adc
popa
into
xor
imul
dec
pop
stos
ds
popf
dec
imul
jle
lods
xchg
clc
in
sub
rol
es
cmp
adc
sbb
lahf
movsl
add
add
js
pop
push
bound
shrb
icebp
sub
aad
mov
stc
jg
dec
insb
dec
mov
jbe
mov
loop
and
addr16
mov
fwait
jl
xchg
cmpl
mov
into
bound
mov
or
out
adc
adc
in
adc
mov
inc
sub
mov
mov
xchg
push
popa
mov
push
hlt
sub
movd
pop
dec
or
repnz
sarl
out
inc
sub
pop
jno
dec
and
mov
mov
xor
es
js
sub
mov
out
or
push
ret
and
cmpsl
mov
leave
and
sub
cmp
ss
enter
fsubr
or
roll
les
cmp
test
sbb
cmp
push
mov
mov
mov
pop
jo
cld
mov
inc
testb
aas
push
push
cmp
lahf
sub
popf
mov
jge
add
in
scas
stc
popa
cmp
mov
fisubl
inc
popa
addr16
dec
pop
mov
clc
xchg
jmp
add
mov
clc
push
pmulhuw
inc
sti
xor
adc
push
imull
xchg
push
sub
and
mov
sub
dec
adc
and
dec
pop
imul
jge
push
sar
and
mov
ret
icebp
adc
arpl
aas
fwait
xorb
or
jne
pusha
push
or
pop
sbb
xor
xchg
jg
nop
jl
movl
pop
sub
xor
push
push
push
out
jmp
imul
jmp
leave
mov
or
loop
mov
cmp
mov
xchg
in
sbb
inc
mov
jge
pop
add
outsb
push
mov
cmp
sbb
add
pop
dec
and
and
das
push
sub
lret
xchg
fmul
pushf
pop
xchg
cmc
and
jmp
ret
pushf
mov
dec
mov
movsl
cmp
shll
aad
inc
adc
les
rol
mov
xor
ja
dec
sarb
idivb
push
sbb
inc
in
xchg
push
testb
mov
add
xchg
mov
sub
imulb
pop
push
xor
inc
insl
xor
push
mov
jl
inc
fistpll
mov
outsl
mov
mov
xchg
mov
in
xchg
mov
push
and
repz
xor
push
mov
shll
add
jno
xchg
or
hlt
push
mov
scas
mov
jb
out
in
popf
out
inc
in
arpl
iret
lods
lcall
mov
cwtl
pop
popf
sub
push
ret
inc
std
push
lret
jo
mov
jnp
lret
movsb
repz
mov
add
movsb
arpl
into
fwait
pushf
push
sarl
inc
mov
jae
jg
xchg
rcl
jne
jecxz
jecxz
add
fldl
arpl
imul
push
in
scas
push
fs
cmp
push
jle
mov
and
mov
stos
das
addr16
xlat
mov
leave
or
ret
cwtl
jmp
mov
lcall
daa
inc
push
lahf
sub
imul
popf
inc
inc
imul
fwait
iret
cltd
cmp
test
cmp
inc
aam
icebp
pop
or
nop
or
sbbl
mov
ds
adc
xchg
je
arpl
lea
adc
shrl
add
nop
adc
xor
mov
jae
or
xlat
bound
or
lds
inc
sti
daa
mov
int3
jns
and
shl
jnp
ljmp
int3
xchg
test
add
scas
cmp
int3
inc
cmp
lea
jnp
aad
icebp
aad
jl
sbb
cmpsb
or
mov
adc
sub
shll
jg
fs
mov
jg
sub
sti
in
add
mov
hlt
mov
mov
data16
mov
adc
add
mov
xchg
jnp
sbb
test
adc
xchg
cmp
sub
xchg
push
lret
lahf
jecxz
je
and
mov
roll
ret
clc
out
jge
into
inc
inc
aaa
dec
mov
stos
sbb
mov
xor
ficoms
ljmp
mov
call
mov
negl
mov
add
inc
lds
out
dec
sub
inc
imul
sub
mov
out
dec
fdivp
mov
mov
push
pop
pop
lcall
pop
push
je
mov
push
in
mov
jb
inc
in
lret
rclb
mov
aaa
jg
push
das
mov
sub
jl
out
xor
adc
out
and
jo
sub
pushf
aas
push
mov
push
xor
inc
or
test
mov
das
test
add
sahf
fs
repz
pop
loop
pop
push
inc
mov
push
imul
test
adc
sarl
push
dec
mov
add
inc
aaa
cmp
push
and
pop
cmc
dec
hlt
loop
mov
push
lea
ljmp
aas
fdivs
xchg
sbb
cmp
loope
popf
xor
push
cmp
dec
add
jg
mov
sbb
rorl
jbe
outsb
mov
mov
xor
lock
fwait
cmp
gs
ja
lret
insl
inc
out
decl
and
in
out
js
in
push
ljmp
dec
lret
sub
xor
xor
arpl
add
hlt
out
jg
inc
imulb
pop
add
and
xchg
fistpl
inc
cmp
pushf
or
xchg
inc
add
es
stos
jp
scas
je
cltd
rcl
lods
xchg
test
scas
jg
pusha
and
loopne
test
in
movsl
push
push
and
inc
pushf
adc
xchg
aaa
jnp
cli
mov
sub
and
imul
push
clc
cmpsl
imul
aad
imul
push
mov
rorb
jle
icebp
maskmovq
js
fisubrl
ja
shrb
mov
cmp
sbb
pop
ficomps
stos
push
mov
adc
push
cli
int
sbb
shll
rorb
and
lock
jl
mov
repz
jecxz
push
dec
dec
jbe
ror
mov
adc
xchg
jne
push
mov
mov
mov
lods
leave
lret
sub
add
adc
xor
push
inc
push
jl
mov
pop
sub
cli
cli
adc
cmp
add
push
xchg
inc
sbb
addr16
in
test
dec
jo
imul
jns
xchg
jge
xor
aaa
into
push
sub
aaa
nop
out
stc
jecxz
outsl
sub
pop
push
jo
xchg
pop
jecxz
jg
stos
mov
filds
loopne
mov
jo
fimull
pop
int3
enter
cmp
fnstsw
or
in
jo
insl
sbb
sub
jmp
ret
mov
sub
xor
out
push
jbe
sub
dec
push
xor
pcmpgtw
cmp
fdivrl
mov
push
sbb
lock
dec
shl
negl
mov
je
xchg
jle
add
xchg
pop
js
out
fidivs
lcall
or
cmp
pushf
scas
loopne
cmp
outsb
or
xor
and
pop
jle
cs
add
jns
inc
push
cmpsb
int
lods
imul
xchg
or
adc
movsb
gs
jecxz
adc
into
lcall
jae
xchg
and
test
movsl
ret
mov
shlb
out
pop
loopne
cmp
pop
das
adcl
dec
cmpsb
push
aad
jb
arpl
pusha
stos
jmp
mov
xor
and
dec
jg
inc
xchg
clc
enter
aad
cmovns
or
leave
pop
adc
out
mov
sub
jbe
add
mov
mov
nop
mov
mov
test
mov
frstor
imul
shrl
in
pop
daa
jo
mov
xor
insl
and
push
sbb
dec
mov
jg
jl
inc
mov
or
popf
push
push
cmpsl
cli
std
cmp
repz
push
pop
in
in
mov
adc
push
ljmp
adc
inc
sti
mov
cli
ss
int
loopne
lods
mov
test
and
add
or
stc
jo
bound
rcrb
outsb
sub
lods
or
and
out
lcall
lea
test
sbb
xchg
sarb
mov
repz
les
mov
cld
out
pop
int3
xchg
lods
cwtl
stos
cwtl
ljmp
add
add
or
mov
shlb
or
push
testb
push
inc
pop
out
jg
insl
les
pop
mov
dec
xor
sub
push
jle
std
aaa
add
cmp
testl
pop
dec
ss
jno
or
std
in
cmpsb
sbb
sub
adcb
pop
es
adc
sbb
dec
and
scas
adc
jp
daa
inc
adc
fidivrl
push
push
in
fmuls
mov
imul
repz
in
add
dec
push
out
mov
repz
cltd
dec
rorb
jp
mov
cmp
mov
out
xor
xchg
pop
in
jno
pop
pop
int
cmc
bound
sbb
sub
mov
int3
outsb
dec
sbbl
lahf
fsub
mov
andb
mov
popf
loop
sahf
addr16
cmpsl
call
test
mov
icebp
es
xchg
dec
push
add
outsl
sbb
ret
inc
jle
pop
cmc
add
mov
mov
popf
jne
add
popf
addb
mov
push
in
out
leave
push
sub
xor
pusha
shrb
insb
pop
in
pop
mov
sarb
stos
push
sahf
xor
sbb
sbb
xchg
xchg
shrl
sub
movsl
xchg
push
sbb
imul
and
and
add
bound
rorl
int3
outsb
xor
mov
sub
or
xchg
sbb
data16
add
pushf
xor
movsl
mov
das
jge
mov
inc
and
jle
dec
out
pop
adc
pop
lea
out
pop
fimuls
mov
arpl
imul
inc
out
mov
add
sahf
mov
mov
in
jne
push
mov
je
and
inc
mov
mov
dec
hlt
inc
lock
adc
pop
mov
daa
adc
pop
cli
push
mov
dec
xor
inc
mov
push
cmp
sbb
lea
and
rcrl
xchg
push
mov
dec
clc
jns
mov
sbb
rcrb
mov
leave
into
js
xor
lahf
add
or
cli
and
out
out
in
popf
dec
jb
popf
movsl
repz
in
sub
lret
and
test
shrl
rorb
aaa
clc
filds
and
imul
dec
test
je
dec
inc
fcomip
mov
neg
repnz
inc
mov
mov
notl
cs
or
sub
mov
mov
mov
lea
scas
je
jmp
test
addr16
mov
push
mov
xor
pop
cmpsl
push
push
repnz
outsl
loopne
cmc
push
dec
xchg
jb
lret
addr16
out
ja
add
jns
sub
xlat
mov
or
sbb
cmpb
test
adc
popa
lret
add
and
dec
sbb
pop
cmpsb
xchg
mov
push
and
fisubl
outsl
dec
mov
mov
sub
dec
int3
cld
clc
mov
pop
cmpsb
nop
push
inc
xchg
adc
cli
xchg
or
and
and
into
mov
dec
mov
out
xchg
or
cmpsl
mov
jae
imul
push
mov
negl
gs
push
add
dec
adc
push
cmpsl
loop
or
jg
pop
shl
push
andb
pop
ret
pop
sarl
mov
jg
rcr
lock
test
xor
test
stc
hlt
aad
sub
push
mov
lods
mov
shl
into
dec
adc
push
sbb
sbb
das
test
stos
jg
in
and
jmp
jns
movsl
aaa
and
mov
push
sti
cmp
fwait
inc
xchg
out
jns
and
add
pop
xor
and
les
add
dec
mov
lds
cmpsl
mov
inc
sbb
cmp
push
lcall
add
jmp
jbe
repz
add
js
adc
or
xchg
sbb
into
jmp
or
and
cs
and
outsb
adc
sti
rcrb
in
or
loope
addr16
scas
mov
stos
or
lods
mov
xchg
mov
mov
lahf
xor
stos
sbb
and
dec
cwtl
mov
int
add
sbb
push
ret
enter
sub
js
jno
subb
push
cmp
addr16
xor
lods
movsl
movsb
adc
or
pcmpeqb
jo
jp
jl
pop
and
xor
push
mov
and
mov
decb
or
test
pop
icebp
cmp
adc
add
dec
aam
sbb
aam
or
push
xchg
cmpsb
add
mov
or
or
add
nop
scas
sbb
gs
mov
pop
jns
out
push
cwtl
fwait
sti
mov
mov
dec
mov
xchg
mov
lahf
je
push
cltd
cmp
adc
negb
adcb
jno
mov
sub
aaa
out
mov
lock
sub
or
fcmovne
mov
dec
loopne
and
iret
jno
popf
lds
jne
cmp
stos
lret
rcrb
push
xor
ja
imul
cltd
insb
hlt
jmp
pop
sahf
pusha
test
mov
loop
cmp
jns
scas
mov
iret
rcrb
xchg
mov
mov
mov
lea
mov
pop
int3
cli
mov
or
inc
ret
fsubrp
faddl
iret
into
aaa
ss
fdiv
shll
push
aas
in
mov
pushf
aas
outsl
mov
or
jne
out
or
les
dec
mov
pusha
icebp
xchg
ret
int3
cld
adc
inc
xor
cmp
stc
jno
cld
fsubrl
xchg
push
mov
pusha
aam
mov
xchg
imul
sub
push
and
jae
push
push
fsub
imul
jns
fcmovb
jae
push
adcl
fadds
sub
ss
movsb
leave
jbe
arpl
imulb
imul
into
jp
icebp
dec
stc
out
cld
mov
mov
cmpsl
push
stc
mov
pop
shrl
dec
and
sti
lea
jge
xor
and
jge
daa
lds
add
lock
in
or
in
xlat
xchg
pushf
or
sub
imul
mov
lea
out
fwait
cmp
pop
dec
ds
adc
xor
mov
xchg
mov
shr
jbe
rcr
and
loopne
ret
popf
icebp
insl
das
push
or
jo
gs
fcompl
xor
popf
mov
leave
mov
and
mov
iret
adc
mov
add
ja
add
test
nop
lcall
inc
out
sub
add
and
jnp
lock
jb
aam
iret
cmp
mov
movsl
les
out
je
in
jl
and
pop
sub
lahf
adc
inc
xchg
daa
aaa
gs
mov
inc
dec
loop
fwait
pop
cli
inc
scas
test
dec
inc
mov
pop
sti
push
roll
aam
push
leave
shrl
cmpl
bound
test
in
int3
mov
sub
std
adc
adcb
inc
je
mov
les
in
cmp
in
lea
sub
xor
mov
xor
imul
push
pusha
pop
lods
pop
cmp
test
dec
orb
bound
mov
jg
dec
push
lahf
adc
pop
fsts
aad
push
jnp
dec
push
jp
sub
jo
pusha
sbb
push
cmp
outsl
ret
cltd
aas
cmp
movsl
jmp
or
mov
mov
xor
mov
dec
call
fsts
push
xor
movsl
test
adc
movsl
xchg
lcall
mov
push
sbb
or
rolb
gs
mov
ficoms
or
in
outsb
dec
jno
daa
push
icebp
mov
ss
repnz
xchg
das
dec
push
mov
loopne
imul
ficomps
out
add
adc
mov
mov
adc
cmp
orb
loope
pop
mov
mov
repz
cmpsb
lret
cmp
dec
mov
loope
xlat
mov
push
js
inc
or
cmc
sahf
pop
aam
mov
das
jb
fdivrs
add
ficomps
add
roll
or
sub
push
pop
push
jne
roll
rorl
out
push
call
xor
pop
mov
iret
js
ja
add
push
mul
shrl
jnp
xchg
sub
in
pop
loop
stc
insb
jo
stos
xchg
sbb
push
cmp
mov
adc
das
or
popf
mov
pop
int
or
sbb
adc
pop
insl
push
push
mov
mov
stc
cltd
jo
loop
aam
or
in
mov
sub
dec
jmp
sbb
sub
jp
loope
test
unpcklps
add
scas
lahf
add
in
mov
sub
shlb
mov
in
cli
push
pop
sub
test
mov
adc
xchg
mov
jns
jecxz
aas
fidivrl
jae
pusha
ret
ljmp
add
or
pop
add
jnp
aad
out
movsb
lods
jecxz
inc
push
push
shr
aas
iret
pop
loopne
call
xchg
push
add
and
mov
adc
xlat
sub
push
fildl
cmc
gs
xchg
scas
add
insl
add
in
arpl
mov
mov
mov
adc
xor
mov
int
cmpsb
push
imul
and
or
pop
movsb
sub
lock
nop
cmp
mov
cli
inc
aad
xchg
int
or
inc
lret
out
pop
adc
pop
xchg
sub
jmp
in
push
adc
cmp
shrb
sub
sub
leave
adc
insb
adc
pop
xchg
mov
adc
test
xor
shlb
andb
mov
clc
daa
cmp
imul
mov
xchg
jmp
mov
mov
adc
jb
sbb
mov
dec
les
or
pop
lret
cwtl
xor
daa
sbb
cmp
scas
mull
mov
xchg
inc
lods
mov
mov
and
push
mov
add
mov
das
ret
int3
sbb
insb
js
pop
jmp
cmp
fimuls
cmp
fldl
ljmp
movsl
cmp
lret
shrb
xor
shlb
cmc
inc
sub
xor
pop
out
xchg
es
subb
mov
loop
push
pop
push
jle
in
idivb
pop
in
pop
fsubl
sub
push
mov
pusha
push
js
and
lcall
aaa
imul
inc
push
mov
xchg
rorb
mov
scas
mov
aaa
mov
push
jnp
bound
jmp
xchg
cmpsb
hlt
fcoms
jb
push
cmpsl
jno
sub
lods
arpl
mov
std
jp
pusha
in
dec
lds
cld
aam
sub
dec
loopne
mov
sbb
arpl
repnz
mov
in
shll
push
insb
mov
lahf
daa
aaa
int3
push
adc
scas
inc
rcrl
pop
divl
lcall
adc
dec
sbb
iret
sbb
mov
shll
fistps
imull
dec
leave
insl
imul
xorl
imul
lds
push
jb
out
dec
ficoml
pop
push
popf
sub
aad
fisubrs
dec
pop
cmp
pop
jmp
sbb
mov
insl
add
mov
xlat
in
xor
and
or
sbb
decb
repz
mov
dec
mov
scas
xor
roll
push
aam
jge
adcl
inc
call
cmp
push
and
add
jo
addr16
int3
or
mov
int3
push
xor
inc
dec
push
push
inc
xchg
lock
xchg
mov
pop
dec
aaa
ss
inc
cmp
hlt
test
mov
shlb
in
cld
adc
rolb
call
mov
ret
mov
and
sbb
mov
push
and
addb
fmul
std
fs
subl
hlt
imull
push
mov
jg
mov
mov
fcompl
jmp
mov
mov
jne
add
popf
es
pusha
mov
mov
add
cmp
mov
aam
notb
xchg
and
loope
and
cmp
inc
insl
add
xor
push
xchg
mov
cli
pop
setae
add
scas
lods
push
xor
adc
or
scas
std
shl
std
xchg
jmp
shll
rcrl
jae
mov
pop
cmpsb
dec
fnstsw
jns
aad
push
test
xor
stos
fisubl
sahf
aas
cmp
fnsave
push
add
pusha
push
gs
xchg
sub
mov
rolb
inc
test
or
inc
in
fdivl
dec
cmp
std
mov
dec
pop
cmpb
push
shl
push
xchg
push
add
ds
push
dec
xlat
idivb
add
insb
mov
and
je
stos
outsb
stos
fcomps
dec
cs
incb
iret
in
sub
mov
jl
test
test
push
shrb
mov
mov
inc
xchg
cmp
jno
mov
xor
pop
mov
les
sub
jmp
js
sbb
cs
fidivl
adc
outsb
mov
repnz
inc
ss
sbb
aas
xchg
jmp
fcomip
mov
sub
daa
gs
mov
orb
jne
nop
jnp
mov
mov
int
push
stos
scas
cmp
lock
jns
aam
cmp
sub
mov
iret
leave
in
stos
cmpsb
addr16
sub
idivl
add
in
jl
fs
cli
inc
int3
aaa
sbb
or
sbb
dec
add
das
dec
icebp
pop
sub
rcl
cmp
mov
iret
clc
xlat
inc
not
fistpll
add
jle
pop
dec
adc
xor
pop
daa
rcll
fisubrs
gs
sub
add
repnz
in
xchg
imul
xchg
mov
inc
jecxz
pusha
rol
dec
cmpsl
cmp
push
in
and
in
outsb
outsb
inc
mov
inc
or
enter
stc
orl
stos
dec
int
popa
iret
jb
ss
adc
mov
push
cli
sbb
dec
sub
sub
xchg
outsb
jmp
push
mov
cli
jg
int
add
push
pop
pop
icebp
sub
bound
ljmp
lret
lahf
push
xchg
jl
dec
test
aas
cmpb
lds
xor
fs
mov
sti
lcall
inc
jecxz
and
lds
push
jg
sbb
push
push
pop
push
xchg
lds
ds
cwtl
inc
push
pop
andl
fcmovbe
dec
or
je
inc
popf
jnp
outsb
push
pop
xor
mov
pop
cmp
push
sbb
in
rolb
adc
test
loopne
lret
aaa
das
xchg
ljmp
ljmp
out
pop
add
sub
jg
mov
ffree
test
in
sub
lods
enter
mov
jp
sub
daa
mov
cmp
into
xlat
jae
adc
mov
inc
sbb
xchg
inc
dec
jp
sbb
std
sbb
or
inc
call
shll
repz
mov
mov
jbe
lds
lds
adcl
leave
xor
insb
inc
mov
in
scas
lods
cmp
popa
add
inc
xchg
pushf
xchg
xchg
xchg
lret
es
dec
loope
ljmp
pushf
stos
mov
or
imul
jg
and
sahf
mov
ret
dec
stos
fsubl
in
jno
sbb
jmp
add
xchg
lock
sub
adc
add
or
jg
pop
pop
icebp
es
icebp
sub
add
mov
test
adc
hlt
insl
outsl
mov
xchg
int3
cmc
fcomps
mov
push
in
les
bound
out
rorl
jo
cmc
cmp
inc
sahf
pop
pop
xor
add
cmp
mov
ds
dec
push
scas
mov
insl
lods
xlat
inc
popf
adc
sub
in
jmp
jbe
lret
lds
mov
jne
push
xlat
jle
in
jnp
xor
fildl
and
daa
push
mov
and
mov
loop
mov
ror
call
pop
mov
pop
ret
out
cwtl
push
xlat
adc
fidivrs
and
mov
pop
inc
lods
pop
adc
ret
scas
sbb
adc
pusha
ficompl
mov
scas
mov
addr16
aaa
dec
out
jl
sub
adc
mov
rcrl
jmp
cmpsl
mov
mov
pop
mov
cmc
sbb
or
pop
push
sbb
icebp
dec
fwait
push
das
jmp
mov
setno
add
cs
les
jbe
repnz
and
mov
jge
mov
iret
cmp
insb
and
xchg
test
push
icebp
jmp
clc
jle
jno
out
push
mulb
jmp
xor
cwtl
es
rolb
cmpl
fists
in
xor
mov
daa
aad
fnsave
or
iret
xchg
push
xchg
inc
xor
lds
frstor
das
icebp
mov
stc
icebp
outsl
gs
scas
out
jae
in
icebp
popf
mov
inc
sbb
mov
inc
jmp
orb
adc
mov
sub
and
adc
xchg
mov
icebp
leave
xchg
faddl
dec
shlb
testb
push
out
ror
popa
pop
pop
adc
mov
sti
icebp
arpl
lods
lock
imull
and
leave
lret
icebp
and
or
aaa
pop
mov
ds
vorps
dec
push
mov
in
ss
into
mov
add
sbb
mov
cld
cmp
lret
pusha
cmp
shl
mov
ss
hlt
mov
sub
xorl
out
inc
les
pop
arpl
mulps
inc
lcall
movsl
cltd
push
push
jp
aaa
lods
adc
repnz
rolb
out
pop
xchg
das
push
dec
xlat
or
lock
cmp
dec
cli
adc
clc
lcall
je
clc
cld
popl
jnp
jbe
sti
and
rcrl
pop
scas
push
pop
jge
xor
inc
push
cmc
mov
sub
jp
rorl
adc
push
jae
and
cld
pusha
adcb
mov
loope
test
jns
sub
outsb
jno
sbb
lahf
mov
jle
ret
notl
inc
enter
test
jecxz
pushf
shlb
mov
test
sbb
fistpll
cmp
jle
sbb
lea
test
adc
push
hlt
and
idivb
and
jle
mov
sbb
fisubl
adc
sbb
cwtl
jbe
outsl
cmp
inc
adc
adc
out
sbb
nop
loope
and
jbe
xor
addl
repz
jecxz
pop
out
ds
aad
and
dec
dec
popa
pusha
xorl
sub
xchg
sbb
stos
fldcw
pusha
or
jecxz
shlb
cmc
pop
imul
dec
imul
mov
mov
insl
in
lock
mov
icebp
lahf
push
mov
inc
aas
imul
jae
jbe
int3
push
mov
js
mov
insl
repnz
cmpsb
loop
push
ficomps
jno
jl
mov
daa
jle
mov
push
popf
imul
in
bound
repnz
cmp
sarb
js
xor
jmp
jmp
jp
jmp
add
inc
mov
sub
add
xchg
inc
xor
push
xchg
sub
jo
cmp
bound
sub
xor
aaa
je
adc
mov
repz
lcall
push
cwtl
and
push
sub
in
repnz
mov
add
xchg
out
out
jg
pop
xchg
push
cltd
and
cmp
adc
lds
cmp
loop
outsl
cld
dec
jae
and
cmp
daa
sub
jae
lods
mov
jbe
mov
push
aam
or
xchg
cmpsb
addr16
clc
push
ds
cmc
xor
jl
popa
dec
aam
sub
cmp
lahf
scas
pop
stos
insb
inc
test
pushf
mov
iret
jg
jae
jge
push
mov
xchg
push
mov
pop
int3
cltd
sar
int
fistps
jge
ss
loopne
jb
jp
lret
push
repz
pop
xchg
scas
xchg
pop
adc
lods
sti
lcall
call
inc
cmp
pop
jecxz
push
jmp
mov
push
add
push
pushf
add
mov
push
nop
repnz
sub
in
push
inc
cmp
mov
subl
jg
lock
cmc
push
adc
mov
jns
fidivrs
outsb
adcl
push
xchg
or
je
ljmp
repz
imul
mov
int
mov
mov
in
mov
je
movsl
clc
scas
imul
pop
mov
lahf
add
test
jns
mov
dec
dec
lods
or
pusha
ja
add
leave
pop
xor
sbb
sbb
pop
push
jbe
add
xchg
inc
dec
inc
cltd
je
pop
jbe
push
or
out
jl
repnz
add
test
fsubs
add
mov
push
jbe
mov
stos
adc
fwait
test
sahf
arpl
push
dec
mov
mov
cmp
lods
xchg
repnz
dec
push
mov
push
jl
test
adc
int3
imul
imul
das
sbb
xchg
out
xchg
loopne
push
cmpsb
int3
jb
mov
mov
mov
jge
pop
inc
mov
sbb
les
sub
imul
call
and
xlat
dec
cmp
mov
mov
cmp
fcomi
jg
sub
inc
add
adc
sub
lcall
pop
xor
out
cmpsb
add
mov
jge
ret
inc
pop
out
inc
lea
jns
cmp
sbb
cmp
dec
pop
les
sbb
adc
fdiv
cld
sub
xchg
sar
push
add
or
add
inc
dec
sub
aas
add
in
mov
inc
jg
leave
pop
xor
sub
fidivl
imul
cmp
lods
call
pusha
pop
leave
cmp
cmc
ret
bound
es
fwait
aas
adc
bnd
mov
mov
pop
sahf
push
pop
xchg
xor
lods
jo
dec
out
out
fimuls
movb
xchg
insl
xor
mov
adc
and
or
test
mov
test
je
pusha
inc
test
mov
push
or
push
cmpsl
cmpsb
xlat
pusha
mov
daa
scas
out
adcb
nop
push
call
out
addl
mov
xor
mov
ud1
sbb
jp
data16
ret
push
sub
mov
sbb
je
xor
in
xchg
test
mov
lock
sti
flds
rcrb
mov
add
in
scas
push
imul
lock
sub
sub
sbb
mov
out
adc
test
inc
leave
data16
hlt
push
rorl
and
movsl
add
mov
pop
es
popa
xor
fnstsw
sahf
add
es
and
dec
fistps
enter
call
daa
mov
cltd
xchg
xchg
and
push
testl
je
add
dec
fwait
mov
imul
fistpll
xchg
lret
mov
stos
jg
pushf
dec
sar
mov
shlb
nop
sub
aas
hlt
push
imul
jno
and
insl
inc
xchg
pop
mov
pushf
mov
pop
mov
ja
test
enter
out
movsl
xor
mov
clc
push
stos
xor
xor
cltd
imulb
pop
cli
pop
data16
out
cmp
cmpsb
jmp
pop
cmpsb
push
push
add
cmp
ja
jbe
test
ljmp
sub
pop
xor
mov
inc
mov
push
mov
ja
negb
jg
cli
push
and
push
push
or
paddusw
ja
xchg
sub
sbb
arpl
icebp
sti
sub
adc
sub
fisttps
cmpsl
inc
movsl
fwait
lahf
jg
lret
cmp
imul
repz
xor
and
xor
inc
inc
int
and
scas
mov
shr
test
es
pop
movsl
cwtl
ret
pop
fcmovbe
adc
in
and
mov
pop
mov
mov
jecxz
cmp
dec
mov
sbb
cmp
cmc
stos
out
push
shrb
sub
add
stc
cmp
mov
bound
push
jl
rcrl
mov
lret
in
jnp
adc
pop
dec
mov
fstps
insb
or
ja
or
mov
jp
sti
stos
cmp
sub
push
xchg
jp
pushf
int
inc
sbb
sbb
fildl
notl
clc
xchg
rcrl
mov
adc
mov
mov
movsl
cmp
mov
jmp
xor
jp
or
jge
fbstp
movsb
and
inc
xchg
cmp
add
stos
addr16
test
sahf
jo
dec
adc
mov
rcl
adcb
inc
jno
lods
scas
push
lds
pop
cmp
sti
bound
add
aas
xlat
fiaddl
out
add
jno
fwait
ljmp
fucomi
mov
shlb
sbb
aaa
aas
jae
adc
xchg
pop
lret
sub
mov
xchg
dec
cmp
push
dec
pop
push
iret
pushf
jno
scas
call
xchg
repnz
mov
pop
cltd
mov
mov
insb
stos
mov
outsl
sbb
stc
in
mov
pop
xor
adc
push
fs
shl
and
mov
inc
lds
mov
and
scas
out
repz
mov
aam
popl
lret
ja
xchg
and
js
insb
push
jb
mov
test
clc
and
cmc
imul
fwait
popa
jbe
push
or
push
pop
sub
daa
aad
js
fisubrs
mov
cmpsb
cli
push
out
cmp
out
mov
les
mov
mov
mov
scas
cwtl
push
mov
movsb
push
or
repnz
loop
int3
out
jg
popf
iret
stc
sub
jae
cmp
mov
stos
pop
inc
or
and
std
lods
ds
cld
out
ret
cmc
sub
lods
movsl
mov
aaa
inc
sub
imul
call
inc
lret
lods
cmp
sub
ljmp
ret
movsb
sbb
sbb
sbb
xchg
mov
xor
jg
jb
stos
cli
movsb
xor
mov
adc
sub
int
shlb
mov
cmp
xor
mov
aam
pop
nop
jno
cmp
sti
aas
in
mov
aam
into
jbe
cmp
add
jecxz
mov
add
and
mov
dec
sbb
sbb
jg
or
cmp
aas
ds
rcrl
lea
aaa
mov
aaa
arpl
test
ljmp
mov
movsl
push
xchg
fidivs
ss
sub
les
and
xchg
bound
addr16
pop
push
pop
mov
and
sub
ret
push
sub
mov
cs
inc
mov
jne
out
cmp
cld
rcr
jb
jp
and
and
scas
mov
cltd
jmp
cmpsl
daa
xor
test
mov
ret
addr16
mov
mov
andb
adc
enter
movsb
xchg
jge
jle
data16
jmp
pop
ja
push
gs
inc
jb
dec
push
pop
add
inc
clc
lret
or
xchg
push
cmpsl
call
cltd
push
jle
pop
sti
out
push
repnz
gs
shl
dec
jecxz
xchg
mov
push
xchg
andl
dec
inc
test
cmp
das
cmc
cmp
xchg
arpl
lret
mov
out
and
pop
fwait
cmp
xor
mov
inc
jg
inc
mov
mov
adc
out
xchg
push
bound
les
sbb
or
pop
push
into
loope
adc
sub
push
or
int3
aam
in
es
in
lods
xchg
rcll
xchg
lds
test
rolb
pop
test
pusha
adc
in
mov
adc
clc
sub
jmp
cmp
mov
or
cmpsl
or
mov
lea
jbe
or
lret
sahf
fsubl
out
sub
xchg
mov
cmc
dec
inc
popf
repz
aad
sbb
dec
loope
jl
pop
stos
fcompl
jmp
mov
aad
xchg
push
lock
pop
xchg
in
mov
nop
push
outsb
in
push
loop
int3
imul
push
sbb
movsl
xchg
mov
in
sbb
xchg
push
fimull
and
sbb
loope
fisttpl
pop
jo
call
loop
add
xlat
xchg
pushf
call
pop
and
enter
dec
js
dec
dec
sub
xor
rorb
in
sbb
popf
rclb
mov
je
popa
in
sbb
mov
gs
loop
call
ljmp
xchg
mov
add
fdivrl
mov
lods
je
dec
inc
inc
mov
mov
cmp
dec
push
mov
packssdw
stos
test
jg
inc
jge
adc
mov
loopne
jp
gs
jle
mov
and
lret
adc
push
mov
aam
dec
dec
ficoml
inc
notl
mov
cmp
mov
cmp
pop
dec
mov
std
mov
xor
mov
pusha
das
test
out
pop
dec
sbb
cmp
inc
and
bound
mov
iret
mov
stos
enter
in
gs
and
pusha
jnp
adc
pop
adc
fwait
xchg
out
push
mov
out
and
push
dec
int
and
xor
cltd
mov
mov
pop
sbb
adc
pop
add
inc
dec
fwait
or
subb
lds
inc
hlt
and
dec
les
adc
sub
or
ljmp
pusha
jecxz
xlat
adc
xlat
pop
mov
ret
xchg
testl
sub
xchg
scas
lret
sub
pop
ljmp
gs
aam
imul
je
dec
adc
dec
outsl
mov
add
push
mov
push
iret
cmp
scas
aas
cmp
xor
push
pop
xor
sub
mov
fldt
cmp
sub
push
pop
cmp
stos
nop
test
les
xchg
xchg
pop
sbb
or
inc
jp
clc
daa
pushf
lcall
xor
push
movsb
aaa
movsb
lret
adc
into
sub
pop
adc
inc
lds
inc
push
mov
xchg
leave
sub
test
and
sbb
sbbb
cmc
in
nop
inc
xorb
adc
js
push
call
xor
inc
mov
idivb
lret
mov
jbe
jno
cmpsl
lea
lods
or
mov
rclb
xor
mov
rcll
and
leave
adc
les
int
mov
loope
in
xor
inc
es
sub
cld
xor
cmp
shl
sbb
test
aas
in
out
stc
add
cmp
movsb
push
mov
push
add
pushf
icebp
inc
sbb
movsb
out
mov
daa
imul
cmpsb
clc
int3
sbb
xor
jmp
jbe
sub
pop
mov
cmpsl
jecxz
cmp
or
xchg
in
xor
call
add
or
mov
out
dec
inc
mulb
mov
sub
mov
adc
cmp
inc
jbe
mov
rcrl
fsub
test
lahf
xor
mov
cmc
call
push
fucomi
lahf
mov
insb
fimull
repnz
loop
mov
out
or
jle
pop
cmpsb
inc
cmp
out
push
rolb
sub
orb
lds
xchg
aam
loopne
pop
push
in
mov
lea
mov
lods
mov
dec
pop
or
inc
outsb
mov
mov
xchg
rcrl
lret
adc
je
cmp
xchg
movsl
pop
sarb
dec
aas
push
dec
mov
mov
rcrb
lcall
xchg
lock
shlb
sub
rorl
dec
test
dec
cmp
xor
xor
adc
iret
lods
xchg
pop
out
jo
xchg
adc
pop
sbb
jnp
test
cmc
pushf
mov
lret
sbb
pop
lret
mov
jg
xchg
and
adcl
adc
mov
push
rcrb
divb
or
je
adc
fldl
cmp
xlat
mov
jge
insl
stc
in
xchg
jnp
sub
adc
gs
xchg
stos
cmp
in
mov
cmp
popa
push
popf
scas
jno
push
orb
cltd
cmpsl
push
push
mov
mov
cmp
inc
sbb
xor
int3
popf
adc
jl
jnp,pn
stc
daa
into
mov
in
notl
add
jns
sbb
fwait
adc
test
jb
es
adc
add
mov
and
inc
push
or
imul
mov
jecxz
pop
scas
xchg
test
jle
fwait
sub
mov
out
mov
loop
sub
scas
xlat
mov
xchg
movsl
jns
out
xchg
mov
pop
mov
xlat
xchg
dec
aas
push
and
sti
call
cmp
xor
movsb
int3
pop
jge
sbb
mov
and
adcl
push
out
jo
or
adc
or
fdivr
jne
xchg
das
sub
cmc
inc
mov
or
inc
movsl
or
insl
xor
jns
adc
push
lahf
hlt
cmp
sti
out
or
sub
frstor
inc
mov
lea
adc
jg
mov
clc
js
dec
jmp
bswap
dec
xchg
sti
and
dec
sbb
iret
and
shll
push
xchg
flds
jo
lock
hlt
push
xchg
loop
mov
shrl
push
pop
or
mov
in
xor
cmp
push
jb
hlt
lock
pushf
push
pop
mov
pop
push
inc
xor
and
rorb
dec
mov
jb
and
and
lods
in
mov
and
lahf
dec
pop
scas
scas
ja
mov
mov
movsb
cmp
mov
mov
scas
adc
sub
add
cld
jbe
jae
xlat
xchg
pop
lcall
mov
push
fnstcw
sbb
arpl
adc
sub
xorl
lahf
inc
ret
sub
inc
fs
adc
lods
ror
out
insl
dec
movsl
pop
ja
inc
mov
jmp
dec
stos
push
push
stc
mov
scas
dec
mov
xchg
pushf
lcall
negb
jb
add
sarl
imull
insb
lods
rcr
pushf
sbb
inc
lock
sbb
adcl
cwtl
call
fs
mov
adc
imulb
shlb
fmuls
jb
ret
cmp
jns
aaa
and
fwait
insl
aas
mov
and
std
test
lock
in
stc
xor
rorb
mov
ljmp
adc
roll
aad
fsts
lahf
push
xchg
lods
xlat
and
aaa
aad
test
sub
aaa
das
mov
std
dec
cmpsb
mov
mov
outsl
pop
call
mov
mov
cmpsb
adc
dec
mov
jo
add
inc
mov
lret
hlt
fwait
stos
cmc
sub
mov
and
mov
ret
pop
mov
subl
xchg
and
int3
shrb
ds
sahf
testl
daa
imul
adc
cmp
jae
push
inc
arpl
cmp
les
cwtl
cmp
mov
jp
or
leave
ss
and
xchg
adc
jo
lcall
jg
mov
lock
fldenv
pop
fs
mov
xlat
loopne
xchg
shrb
adc
xor
pop
inc
sub
cmpsb
pushf
mov
daa
cmp
test
xchg
xchg
mov
pop
out
xor
lods
push
xchg
mov
ja
jae
cmp
mov
add
pop
enter
jg
mov
ret
cmp
mov
mov
mov
and
aaa
xor
stos
fcomps
stos
andl
jecxz
addr16
or
xchg
mov
pop
adc
jns
mov
outsb
or
sbb
shrb
and
pushfw
push
or
test
pop
or
lock
arpl
adc
cmp
mov
rorl
mov
adc
imulb
sub
and
test
jmp
mov
out
mull
push
mov
shlb
andl
pop
iret
js
and
repz
mov
lock
insw
jmp
or
xor
das
mov
xor
mov
sub
or
mov
xchg
sbb
sub
orb
add
stos
dec
scas
nop
mov
cli
push
xlat
cmp
mov
outsl
sbb
cmpl
lcall
mov
mov
outsl
pop
mov
in
and
and
sbb
imul
lret
dec
ljmp
aas
dec
jp
xlat
inc
mov
ss
mov
jecxz
les
push
les
ss
sbb
jb
adc
imul
add
pop
rcrb
jmp
jae
insb
push
add
fstpl
sub
fucom
call
push
fcmovnu
mov
sbb
into
xor
pop
jcxz
stos
dec
mov
fcmove
mov
push
popf
xor
cmp
imul
imul
lret
or
movsb
add
or
mov
push
repz
sbb
scas
mov
negl
mov
add
or
outsl
ds
std
scas
jnp
or
icebp
push
loope
stos
stos
adc
lahf
push
pop
inc
push
data16
sbb
mov
xchg
cli
fldlg2
adc
movsb
xchg
adc
daa
mov
pop
cmpsl
divb
test
icebp
insl
xorb
mov
repnz
mov
imul
cmp
push
js
lret
cmpb
mov
xchg
popa
ja
dec
mov
insl
jo
arpl
cmpsb
push
jge
xchg
gs
jg
xchg
mov
xchg
xor
loope
ja
mov
or
mov
dec
dec
mov
sbb
mov
xor
int
push
cmpsl
bound
add
adc
test
cmp
mov
adc
pop
xlat
aam
mov
add
mov
and
aaa
cmp
lods
pop
sbb
faddp
pop
mov
dec
or
sarb
jne
inc
mov
mov
stc
mov
mov
adc
test
dec
jmp
push
cmpsl
cmp
mov
inc
adc
jecxz
repnz
jmp
jb
sbb
stc
xor
ret
or
iret
out
mov
inc
sub
out
mov
cmp
insl
sbb
nop
mov
dec
push
cmpsl
insl
mov
icebp
dec
pop
aas
out
adc
and
lret
jl
mov
nop
insl
dec
cs
hlt
lods
cmp
mov
cmp
in
int3
je
or
jne
lcall
icebp
subb
int3
and
mov
xchg
fcom
cmp
popa
hlt
outsl
int
sbb
lcall
cmpsb
rorb
mov
stos
into
mov
mov
inc
testl
inc
xor
sub
push
adc
fdivrl
loop
icebp
mov
roll
out
pusha
sar
dec
xchg
pop
inc
lods
arpl
lcall
inc
in
cmp
mov
testb
and
cli
sbb
negb
js
dec
push
add
xchg
gs
addl
pop
push
and
push
cld
xchg
push
popf
leave
adc
mov
jbe
repz
pop
lcall
dec
imul
arpl
les
enter
push
add
mov
jb
mov
mov
popa
sbb
push
pop
xor
call
clc
push
mov
push
aas
adc
xchg
pop
in
fdivp
mov
cwtl
lods
imul
mov
inc
dec
mov
test
add
pop
jae
dec
into
fcmovb
pop
add
mov
sub
insl
scas
jnp
imul
jbe
mov
lret
outsb
ficompl
ret
pop
and
pop
jle
fwait
mov
rorl
aas
pop
cmp
inc
ret
add
loop
xor
repnz
xchg
sbbl
mov
stos
add
mov
fwait
add
add
jge
add
das
cmp
fcmovu
imul
insl
mov
stos
test
push
cmpsb
shlb
fldenv
and
xor
add
out
shlb
push
jecxz
pop
lahf
js
xchg
pop
imul
jo
adc
cs
icebp
push
sub
sub
push
in
mov
loop
dec
je
lret
ret
inc
aad
fidivs
pop
mov
jl
jb
jl
mov
mov
imul
lock
and
push
lahf
xchg
add
aas
ss
movsb
sbb
lods
xor
dec
dec
movsl
push
mov
mov
pop
push
push
orb
add
lea
add
push
insb
mov
packsswb
aam
shrb
pop
aas
outsb
popa
cmp
or
ds
dec
xchg
mov
inc
lock
test
stos
fstpl
or
fistl
arpl
testb
dec
xor
cmp
jl
aas
in
enter
ja
outsl
out
outsl
mov
xchg
sbb
mov
push
lods
push
cmp
in
mov
cmp
stos
sub
jmp
dec
lock
in
adcl
pushf
sbb
inc
cmpsb
scas
sbb
mov
mov
cmpsb
fiaddl
insl
mov
outsl
mov
and
push
roll
adc
jl
subb
repnz
lds
test
loop
lret
sub
arpl
inc
ja
push
je
int
ret
jmp
push
jge
fptan
or
ss
or
cmpl
sti
xbegin
sbb
xor
or
shr
adc
cmpsl
add
and
cmpsl
adc
add
inc
hlt
out
mov
sbb
add
jmp
push
not
pop
call
or
and
test
lods
pushf
dec
push
mov
jo
mov
rcrb
jns
outsl
mov
xchg
shll
inc
jmp
add
test
mov
mov
push
lahf
push
cmp
int3
mov
dec
aam
mov
sbb
push
mov
pop
add
je
or
push
sti
sub
roll
xorl
jno
push
fsubrs
push
fsubrl
lea
psraw
cmpb
or
stc
test
xor
stos
push
lahf
sti
sub
sub
and
or
pop
xchg
jnp
pushf
test
call
dec
lock
cmp
sbb
adc
popf
and
sub
adc
inc
js
jmp
inc
mov
popa
jecxz
push
es
data16
flds
cld
ficoms
lock
mov
mov
pop
sbb
fsts
stos
ljmp
aam
mov
adc
cmc
pop
repnz
outsb
sub
mov
jae
ret
xor
addr16
push
inc
cs
fwait
js
fildll
bound
es
mov
std
fisubs
fwait
jb
push
adc
out
ret
and
stc
jb
jne
or
fsubr
jmp
cmpsb
fs
sub
stos
add
pop
mov
pop
xor
cmc
mov
insl
sbb
nop
arpl
scas
mov
inc
pop
test
adc
int3
lea
jns
dec
ljmp
movsb
adc
lds
repz
das
sbb
out
pop
mov
sub
outsl
pop
pushf
xchg
push
mov
push
push
sub
push
fcoml
jp
lret
lea
cs
lahf
adcb
cs
inc
nop
mov
rcr
pusha
sub
pop
js
jp
cs
ss
fwait
dec
dec
pushf
iret
inc
cmp
lock
bound
int
pop
mov
pushf
cmp
clc
fs
sub
mov
aaa
jle
inc
aas
cmp
divl
dec
hlt
in
push
sub
icebp
and
push
jp
cmpsb
xchg
mov
aam
pusha
push
xchg
jge
jge
cmp
nop
test
loop
lods
nop
mov
and
fwait
les
shlb
stc
sub
repnz
filds
jns
mov
sbb
jo
mov
dec
dec
pop
jl
fwait
notb
outsb
icebp
push
sub
inc
xor
out
dec
loope
push
xchg
arpl
xchg
add
sbb
and
adc
cli
mov
idivb
adc
push
add
mov
or
sbb
shl
xchg
mov
cmp
out
std
cld
or
imulb
daa
test
loope
mov
std
repz
test
add
clc
mov
daa
int
and
imul
fs
mov
mov
jecxz
in
fucomip
and
adc
in
mov
pop
pop
mov
adc
fimull
xchg
sbb
and
ret
pop
lods
xor
mov
inc
ret
mov
ds
or
and
push
mov
xor
lods
xor
dec
jecxz
xor
inc
add
mov
out
jo
pusha
push
xchg
scas
int3
adc
shll
stos
sbb
dec
repz
jnp
mov
push
and
jnp
ficoms
fcomps
dec
dec
add
jmp
dec
scas
rcrl
dec
shr
push
adc
fisubrs
les
add
pop
in
popf
andb
pop
data16
inc
pop
cmpsb
pop
out
jnp
inc
push
cli
mov
xor
push
or
sub
mov
pop
or
xchg
jecxz
test
inc
jb
sti
movsl
add
jl
out
imul
push
push
push
cmp
pop
lret
mov
push
lock
and
ljmp
rcrb
jmp
test
cli
pusha
cli
inc
ficoml
nop
in
subb
push
clc
insl
fnstsw
shlb
js
in
mov
cmp
xchg
mov
cmp
lret
fs
adc
cwtl
scas
in
pop
push
mov
pushf
mov
scas
fstpl
mov
jecxz
repz
xor
stc
mov
lods
push
call
mov
add
pop
lods
add
mov
dec
mov
shll
inc
lods
out
xor
xor
fcoml
je
call
cmp
pop
cmpl
jl
sbb
gs
gs
push
add
add
sti
xor
mov
mov
jbe
or
push
rclb
sub
mulb
fnstenv
or
lahf
sahf
stc
outsb
shlb
orl
adc
cld
stc
daa
mov
and
or
push
movsl
mov
xchg
dec
xchg
std
cli
in
testb
cld
jecxz
mov
and
popa
test
outsb
pop
sbb
rolb
and
sbb
xor
stc
cmp
lds
es
mov
xor
bound
push
cmp
xor
cmpsb
pop
cmp
fdivl
add
pop
adc
inc
lret
cmp
cmp
test
arpl
ret
dec
push
xchg
ljmp
lods
xor
lea
adc
push
xorl
mov
lahf
pop
daa
xchg
shrb
andb
pusha
inc
jns
stc
shr
and
xchg
add
notb
xlat
scas
imul
sub
sbbl
add
imul
mov
ficompl
cltd
outsb
push
or
and
shl
jbe
std
jg
mov
push
out
std
xor
nop
lea
sbb
fbld
push
dec
dec
push
lods
stos
rcrl
push
add
loope
fldcw
pop
add
cmpsb
push
xorl
out
xchg
ret
notb
jo
pop
out
mov
xor
jge
daa
out
sbb
push
aaa
negb
mov
mov
add
in
mov
jecxz
stos
or
cwtl
fstl
clc
test
push
adc
lock
lods
js
lods
mov
fs
mov
cmc
loop
cmc
loopne
fdivrs
pop
lock
xchg
test
inc
xor
ret
lcall
or
arpl
adc
xor
mov
movb
push
cli
jne
xchg
adc
loop
mov
cmp
mov
xchg
lcall
sbb
pop
call
clc
or
int3
int
sub
cli
scas
aaa
xor
add
mov
cmp
mov
fcmove
lcall
repnz
inc
fimull
mov
repz
lahf
xchg
fildll
mov
inc
inc
and
inc
xor
or
movsb
lcall
fidivrs
out
pusha
jp
jbe
decl
inc
dec
mov
shrl
dec
mov
xchg
cmpsl
xorl
pop
xor
fdivs
aas
cmp
jae
lods
roll
out
std
or
adc
inc
jg
fwait
insb
cmp
popf
imul
movb
sbb
clc
mov
aad
push
ja
inc
mov
mov
sti
push
adc
sahf
test
cmp
and
mov
jg
imul
mov
scas
push
or
test
xor
xor
fidivrl
dec
jp
lea
adc
push
jmp
dec
movsb
lock
lahf
pop
outsl
pop
sbb
test
push
std
and
push
call
leave
loopne
addb
sti
xchg
movsb
cmc
dec
dec
test
aam
mov
xlat
cmc
rolb
data16
out
xor
fsubrs
arpl
sub
jge
mov
or
xchg
sub
iret
add
rclb
and
cmp
int3
and
jne
mov
dec
mov
jno
cld
mov
pop
imul
xor
bound
stos
js
fsts
cmpl
shrl
mov
in
push
adc
mov
or
sub
ja
xchg
jb
mov
inc
icebp
insb
jge
bound
push
je
push
or
xor
inc
subl
sbbb
mov
jp
scas
inc
out
mov
adc
mov
movsl
out
mov
lock
fs
sbb
sbb
aam
adc
mov
sub
int3
nop
jns
lea
jmp
call
mov
or
inc
enter
inc
pop
jae
pop
mov
sub
adcb
xor
insl
jle
and
mov
idiv
xorl
mov
ja
cs
pop
add
push
test
es
push
lret
add
icebp
loopne
out
scas
mov
xchg
rcrl
daa
test
mov
mov
bound
loopne
adc
ficoms
mov
adc
push
loopne
add
mov
xchg
add
iret
dec
mov
mov
icebp
scas
cmp
pop
shll
push
fdivr
test
mov
push
cmc
inc
jmp
scas
js
pop
inc
ja
js
cmovle
or
adcb
mov
dec
outsl
mov
adc
adc
xchg
es
push
cmp
pop
stos
xor
flds
and
inc
fbld
std
lds
insb
popa
and
mov
push
cmc
pop
jl
dec
jp
mov
daa
stos
adc
dec
add
outsb
inc
xor
adc
sti
repnz
test
sarl
aam
pop
xchg
mov
xorb
int3
lret
stos
pushf
xchg
dec
jge
adc
popa
mov
rcr
insl
cld
outsb
sbb
cli
dec
ret
add
or
push
cmp
int3
jnp
cmpsl
js
cmp
clc
int
testl
out
adc
and
stos
push
sbb
lods
xchg
rcll
xor
xchg
push
fisubl
sbb
cmpsb
lea
inc
jle
cmpsb
les
mov
push
adc
xor
mov
adc
into
aaa
add
out
out
pop
cli
jge
jecxz
std
loop
call
sbb
adc
movsb
xor
test
lods
loopne
std
mov
add
sub
rolb
push
adc
mov
push
jae
jbe
xor
push
insb
test
lahf
ljmp
iret
cmp
popa
fdivp
mov
jmp
jo
or
mov
cli
xchg
fistpl
and
xchg
pop
jo
xchg
jl
cwtl
mov
dec
popf
and
icebp
loop
arpl
sbbb
loop
pushf
inc
test
repz
inc
int
cmp
lret
imul
dec
test
loopne
imul
sahf
and
bound
jbe
mov
inc
xchg
sbb
jo
cmp
cli
fcoms
cltd
clc
or
jno
and
sub
sahf
rcrb
inc
add
push
mov
or
shl
adc
adc
lock
in
adc
xchg
inc
pop
cmpb
sar
jns
jns
pop
in
std
adc
mov
mov
pop
and
or
sub
imul
mov
fs
and
mov
jnp
lods
mov
lock
add
lock
inc
mov
les
cmp
or
or
mov
mov
mov
sbb
out
mov
mov
mov
adc
lds
test
cmp
xor
stos
adc
test
outsl
cli
sub
das
movb
mov
xchg
loope
fsts
sbb
xchg
mov
jns
pop
mov
shrb
jge
fs
subl
loope
push
scas
out
push
movsb
out
pop
out
sub
add
xchg
shrl
inc
or
int
xchg
push
hlt
mov
add
lret
push
mov
add
out
mov
cmp
adc
mov
push
add
pusha
inc
and
pop
inc
popf
imull
dec
iret
dec
repnz
push
int
cs
andb
and
pusha
fiadds
jns
mov
sub
andb
dec
rcrb
sbb
lds
dec
and
adc
mov
movsl
mov
xor
lcall
fwait
cmp
mov
repz
jecxz
jnp
jp
xor
fldenv
andb
scas
lcall
inc
test
stos
mov
mov
jmp
lret
sub
jp
inc
mov
lret
fimuls
dec
xlat
loope
repz
jo
jae
xor
or
ret
mov
ljmp
add
mov
stos
xchg
in
pop
and
pop
mov
xchg
aad
lahf
adc
xchg
lock
dec
mov
mov
out
loop
xchg
jb
or
or
mov
jb
out
push
jg
ret
or
pushf
loopne
int3
mov
pop
in
orl
cld
rorl
mov
sbbl
popf
test
adc
stc
stos
ss
sub
jecxz
sbb
pop
mov
xor
pop
ffree
negl
adc
repz
cltd
lock
xchg
adc
cmpsl
inc
sbb
movsl
out
lock
fstpt
adc
pop
scas
in
andb
stos
mov
xor
cmpsl
pop
std
fwait
lock
outsb
mov
mov
dec
xor
and
jb
lcall
push
aad
pop
pop
and
jnp
xor
dec
loope
aad
and
mov
pop
or
xchg
xor
ret
repz
and
and
sbb
or
nop
aaa
loope
fucomi
incl
int
jl
mov
sahf
lods
mov
push
adc
mov
mov
roll
xchg
movsl
arpl
cmp
sbb
scas
cmp
xor
pop
cltd
pop
mov
mov
arpl
pusha
push
inc
pusha
cmp
jae
cmpsl
stc
sub
in
add
jae
out
icebp
in
jl
or
inc
lret
mov
test
ret
and
int
jecxz
lcall
lahf
das
cmp
movsb
icebp
loope
les
popf
xchg
inc
push
mov
cmpl
cwtl
mov
sub
and
jnp
idivl
lock
lret
cmp
lcall
and
cmp
addr16
rol
mov
outsl
ret
pop
out
jb
leave
shlb
notb
cmpl
xor
popa
movsb
mov
jg
jmp
and
fnstcw
and
daa
and
sahf
cmp
notl
xchg
outsl
push
stc
pop
pop
rolb
push
mov
in
push
jecxz
scas
inc
insl
fstpt
push
aam
mov
sbb
jl
mov
and
mov
jne
fidivrl
push
xchg
mov
insb
or
pushf
out
std
icebp
iret
gs
sub
fwait
cli
mov
push
mov
test
mov
out
and
shl
jp
cmp
cmova
adcb
mov
sahf
xchg
out
add
std
sbb
push
dec
test
je
cli
xor
repnz
or
arpl
pusha
mov
xchg
cld
dec
mov
int
push
adc
data16
add
pop
adc
mov
xchg
add
ret
push
pop
dec
ja
adc
mov
jb
xor
in
mov
or
lret
jl
pop
and
add
cld
xchg
js
lea
cmovb
inc
roll
outsl
push
lcall
adc
insl
js
ret
or
cmp
loopne
pop
dec
push
mov
or
clc
push
sub
stos
test
jmp
fldcw
add
xchg
leave
mov
jo
iret
cmpb
loope
jecxz
es
lods
inc
mov
push
xor
testl
push
lcall
cltd
inc
rolb
fucomi
adc
xchg
add
sbbb
push
lcall
popf
adc
gs
mov
fsts
mov
cld
pop
dec
jge
cs
xor
in
lods
in
or
sbb
push
xchg
mov
or
and
pushf
mov
ss
in
ljmp
push
test
sbb
lods
push
movsl
andb
mov
mov
lahf
popl
sub
mov
adc
movsb
push
std
icebp
jb
xor
and
xlat
inc
xor
pop
imul
add
insb
imul
fsubrl
mov
or
lret
lret
decb
mov
clc
or
in
out
ret
js
test
sub
xchg
or
je
xchg
cld
les
xor
jne
mov
fdivr
dec
cmp
add
or
idiv
nop
insl
jp
sbb
pushf
dec
in
out
sbb
nop
sub
mov
or
gs
fistpll
xlat
cmp
jl
nop
xor
loopne
insb
sbb
nop
je
sahf
mov
cmpsb
jbe
subb
aad
inc
in
filds
or
mov
repnz
ljmp
hlt
cmp
and
adc
or
leave
inc
sbb
fadds
stos
outsb
and
mov
xorl
jl
inc
fs
addb
lret
jo
daa
mov
xchg
add
scas
jne
out
jnp
or
jne
push
test
push
jl
or
insb
adc
xor
add
push
xor
pop
testl
std
loopne
repnz
push
je
pop
sbb
sub
rcrb
stc
ret
inc
xor
sarl
adc
add
mov
pop
mov
push
push
lods
xlat
adc
cmc
xlat
bound
sbb
cmp
rcrl
stos
add
add
dec
xor
mov
pop
mov
lcall
mov
dec
mov
adc
mov
mov
sbb
sete
sti
aaa
les
dec
sbb
push
push
stc
jne
inc
mov
jbe
jb
add
mov
mov
sub
cmp
sub
pusha
add
adc
push
sub
std
and
mov
or
cmpsb
pushf
sarb
je
jb
xchg
xchg
and
xchg
or
sahf
inc
je
jge
aaa
mov
add
stc
inc
mov
adc
loopne
dec
adc
test
stos
push
adc
pop
cmp
cmpsb
inc
imul
xchg
mov
mov
cmp
jle
fwait
std
scas
fstpt
jnp
pop
sbb
fdivrl
and
dec
mov
shl
pop
scas
or
jns
push
sub
enter
sahf
leave
mov
nop
xor
mov
int
xor
jnp
cmc
xor
ja
bound
adc
mov
pop
xor
das
sbb
xor
adc
or
subl
fwait
mov
cld
pusha
cld
mov
sub
or
stos
clc
data16
iret
loop
cmp
mov
cmp
dec
jge
push
cmc
sbb
mov
sub
fbld
mov
movsb
push
ret
xlat
cmpsb
inc
cmp
dec
pop
fcoms
sbbl
in
push
jg
xor
or
cmpsl
jbe
lods
sub
dec
adc
ds
lcall
les
mov
sbb
dec
or
outsb
ret
push
sbb
mov
sbb
imul
dec
adc
cmp
call
fwait
rcl
adc
pop
push
xor
imul
mov
roll
lods
dec
lods
pop
jge
mov
nop
sbb
jno
insl
jbe
mov
sub
mov
and
fiaddl
aaa
or
sub
jecxz
enter
mov
lds
xchg
xor
daa
adc
repnz
or
icebp
leave
cs
sbb
mov
and
cltd
stos
rcll
das
cmp
cmpsb
lcall
int
add
sub
movsl
mov
outsl
ja
into
cmp
dec
lods
jae
mov
ljmp
icebp
mov
add
stos
mov
dec
imul
mov
cli
xchg
sub
outsb
testb
inc
js
push
dec
mov
repz
jle
rorl
dec
push
js
and
mov
mov
xor
icebp
or
setg
ret
stos
cmpsb
test
and
push
ljmp
outsb
addr16
repnz
dec
dec
xchg
frstor
repz
xor
scas
mov
imull
cmp
gs
xor
pop
fbstp
mov
sub
jae
jge
or
popa
pop
jl
push
inc
adc
movsb
cmp
mov
sahf
inc
mov
xor
sub
push
and
iret
xchg
ss
add
std
pushf
andl
aas
inc
xlat
dec
lret
popf
mov
jge
mov
cmp
outsl
mov
lret
in
lea
or
std
and
pop
cs
pop
pop
vmread
xor
inc
dec
xor
insb
arpl
add
lock
cmp
adc
mov
jp
sub
pop
popf
lds
mov
push
loop
int3
inc
gs
push
mov
das
cmp
xchg
pop
jl
insb
xchg
into
into
inc
test
add
cld
inc
xchg
jp
xchg
adc
dec
and
roll
jle
cmpsb
and
gs
inc
cmpsl
test
and
pop
mov
rorl
pop
xor
sub
inc
sub
dec
std
lret
cltd
shlb
push
testb
cmc
cli
mov
sub
push
mov
pinsrw
jo
lock
pushf
les
aaa
dec
fildl
mov
popf
or
call
jb
jbe
test
loop
jmp
xchg
cmc
pusha
data16
dec
and
int
incl
out
xor
loope
xchg
dec
adc
cwtl
push
iret
nop
adc
mov
out
push
push
pop
xor
push
pop
sub
mov
dec
mov
stos
stc
lods
mov
xor
clc
nop
or
add
testb
xlat
xchg
fs
and
mov
rorl
leave
movb
lods
push
and
pusha
add
test
lds
mov
mov
or
int3
push
lahf
sti
aas
jle
jp
out
stc
add
add
or
loope
sbb
stc
test
add
mov
push
leave
insb
push
aad
enter
pop
jae
clc
sub
mov
sub
aad
inc
idiv
xor
std
push
jnp
xchg
fsubl
or
icebp
mov
pop
aas
sub
pushf
lods
xchg
cmc
jnp
jmp
adc
cli
push
popa
dec
pop
mov
fcmovne
sti
aas
bsf
cmp
sbb
jmp
pop
mov
sti
mov
jae
inc
mov
add
and
sub
push
and
xor
jae
sbb
jne
inc
mov
jo
shrb
xor
fcomps
out
aaa
leave
jns
mov
or
fs
mov
addr16
push
pop
cmpsb
repnz
cmp
add
out
hlt
cmp
shll
add
dec
sbb
xchg
jmp
movsl
push
stos
rcrl
pop
jg
call
fidivs
insb
jae
push
test
or
je
cmp
dec
dec
bound
ljmp
pop
xor
in
and
loopne
and
and
pop
add
dec
xchg
inc
jl
xor
fs
shrl
xor
andl
jbe
or
and
test
test
fcomps
pop
outsl
roll
add
xor
into
xorb
out
jle
push
shlb
mov
call
and
lret
idivl
ret
add
mov
daa
outsb
push
mov
pop
loopne
lock
add
jle
xor
sti
inc
push
pop
mov
add
shlb
pushf
scas
fldcw
mov
push
lock
inc
lods
xchg
sbb
aaa
xor
xor
sub
clc
adcb
ds
cmp
les
push
xor
pop
jle
cmc
push
mov
adc
jmp
inc
xor
and
cmpsl
rorl
or
cmp
stos
sub
mov
test
lcall
add
lea
mov
xchg
sub
pop
xchg
je
in
fs
sub
push
and
das
int3
in
js
mov
clc
in
into
pop
test
lock
add
call
jnp
adcb
sub
leave
xor
cmc
sub
xchg
inc
in
push
stc
pop
test
js,pn
mov
mov
mov
dec
out
scas
pusha
add
xchg
mov
mov
and
cmp
mov
fucom
xlat
ret
adc
push
into
mov
cmp
into
pop
out
into
inc
lock
std
icebp
jp
roll
adcl
nop
push
adc
add
mov
jmp
aam
adc
dec
sbb
dec
stos
add
call
idiv
popf
and
lods
cmp
push
aas
rcrl
sbb
daa
add
fwait
adc
push
adc
add
xchg
fwait
push
dec
adc
out
push
and
das
loopne
xchg
sub
push
lahf
pusha
jae
dec
fcomps
jbe
loop
jns
mov
mov
xchg
aaa
mov
test
mov
fistpl
jne
fnstenv
mov
mov
gs
in
rcrl
les
int
push
sbb
bound
sub
and
dec
pushf
mov
xchg
popa
xchg
pop
mov
xor
mov
or
jge
divl
or
mov
sbb
pop
mov
loope
pop
loopne
inc
shl
and
sbb
jg
xchg
sub
mov
popf
test
daa
push
xchg
sarb
mov
stos
push
jecxz
pusha
rorl
roll
add
adcl
loope
xor
movsb
adc
int
xor
stos
jnp
mov
sub
dec
outsb
fistpl
mov
jb
cmc
pop
test
add
inc
and
jns
adc
outsl
jae
xor
incl
sub
lcall
lret
xchg
dec
dec
call
mov
push
xor
negl
sbb
ljmp
inc
loop
xor
jl
xchg
sbb
dec
sbb
mov
scas
daa
jg
push
sub
xor
sbb
sbb
or
data16
mov
mov
hlt
mov
or
es
and
push
repz
icebp
stos
int3
xchg
xchg
stos
outsb
mov
add
out
xor
ret
sbb
scas
or
hlt
cs
loopne
ret
into
xchg
mov
orb
aaa
into
xor
adc
leave
push
add
aad
out
dec
xor
cli
ja
cmp
je
pop
rclb
pop
int3
mov
cmp
stos
int
push
fists
jl
js
inc
add
mov
jle
in
in
mov
js
ds
xchg
add
xchg
inc
push
arpl
divl
sub
loope
mov
xor
xor
cmp
push
xor
movsl
ret
ret
outsl
dec
mov
ds
lods
cltd
lds
adc
mov
dec
dec
add
ficoms
dec
outsl
pop
insl
push
aad
fisubl
sub
rclb
jmp
mov
xlat
push
pop
fstpt
ljmp
test
pusha
sbb
xchg
push
arpl
shll
pop
movsl
push
lock
inc
cmp
and
cwtl
sbb
pop
mov
mov
jl
mov
push
cmp
mov
mov
fs
jg
rcll
iret
mov
stos
popa
into
dec
test
scas
sti
lret
dec
cmp
sbb
hlt
mov
nop
es
test
stos
jecxz
xchg
in
rolb
mov
fsubl
out
ret
pop
mov
test
in
out
inc
repz
xchg
adc
in
mov
aaa
fidivrl
cmp
es
test
mov
mov
cltd
or
dec
imull
push
test
cmp
xlat
fnsave
rcl
adc
mov
inc
cmp
pop
sub
iret
push
ds
fdiv
shlb
call
mov
repz
mov
adc
dec
add
and
jns
lret
ret
fmuls
mov
xchg
mov
mov
iret
int
jg
jns
lss
jne
add
lods
pop
mov
ljmp
leave
adc
shl
xchg
push
clc
test
cmpsb
push
addr16
dec
cmpsb
jg
cmp
scas
adc
roll
adc
mov
int3
aad
sbb
or
mov
out
js
pop
cmp
mov
rcr
in
adc
dec
rclb
scas
or
fbstp
aam
push
add
icebp
adc
xchg
pop
fwait
into
or
sub
mov
cmp
cs
cld
rorl
fisttpl
dec
lret
pop
mov
add
sbb
iret
in
push
mov
adc
jl
push
js,pn
and
push
sahf
add
inc
sti
ja
dec
mov
xchg
xor
dec
mov
add
aad
out
pop
xchg
hlt
xor
dec
push
sahf
hlt
gs
mov
add
push
icebp
xor
aam
sub
fcomps
addb
mov
cmp
ss
iret
jge
cmp
add
inc
mov
icebp
orb
mov
ret
fisubs
pop
loopne
inc
clc
movsl
jo
js
xchg
lods
fdivr
lods
ficompl
mov
iret
or
cltd
cmpsl
xchg
sbb
aaa
push
out
push
mov
adc
les
sahf
stos
pop
movb
or
pop
aaa
cld
ret
fwait
pushf
mov
inc
jno
movsb
enter
ja
sbb
dec
lret
cmp
das
mov
push
sbb
fsubl
adc
fbstp
mov
test
clc
or
lahf
add
into
clts
stos
mov
or
mov
xchg
jb
cmpsb
roll
push
pop
je
movsb
dec
add
jmp
inc
fwait
jp
pop
in
in
mov
adc
mov
pusha
nop
add
sahf
negl
mov
lods
rcrb
cmpsb
dec
out
je
rcrl
unpcklps
outsb
push
lods
pop
arpl
xchg
sbb
mov
cmpb
add
push
test
shrd
test
js
outsl
push
divl
into
push
addr16
repz
xchg
in
pop
xlat
xchg
mov
clc
xor
cltd
mov
insb
dec
lods
cld
or
xchg
mov
ficoms
insl
popa
ljmp
pop
jmp
std
mov
add
xchg
push
pop
dec
lock
mov
inc
dec
sti
cs
push
lea
xor
out
insl
add
xchg
call
xchg
or
add
cmp
mov
sbb
mov
fwait
lcall
mov
lret
sub
mov
movsl
jo
cmpsb
jo
in
jmp
dec
xlat
in
xlat
sbb
xchg
mov
fdivrs
push
rcll
jge
jecxz
and
test
push
jae
mov
or
in
in
mov
mov
cmp
fwait
adc
add
rorb
sub
sub
mov
out
mov
pop
mov
mov
nop
clc
shlb
mov
mov
imul
nop
jno
add
dec
and
add
push
repz
dec
cmpsl
pop
mov
xchg
pop
pop
jns
add
jne
mov
icebp
loopne
jl
xor
adc
fdivrl
scas
and
pop
mov
mov
inc
dec
int3
rcr
inc
xor
std
dec
jbe
add
xchg
and
sub
add
jecxz
add
dec
xchg
dec
out
nop
idivb
push
jae
movsl
aaa
sbb
je
call
gs
enter
xchg
test
inc
fwait
cmp
push
jbe
jns
cmp
outsl
lods
mov
mov
ja
pop
test
cmp
pop
sbbl
sbb
and
cld
xchg
push
scas
sbb
xchg
popf
and
icebp
mov
mov
push
jge
rcll
loop
sysret
dec
push
sar
pop
jns
dec
rorb
lret
mov
pop
cmp
in
repnz
mov
jmp
dec
xor
inc
and
cmp
inc
jg
dec
push
cld
stc
cwtl
shlb
sbbb
mov
cmpsb
pop
sub
nop
out
cli
pop
je
xchg
adc
adc
out
xorl
mov
dec
dec
les
mov
dec
cwtl
inc
cmp
sub
xchg
jle
ror
cmp
add
adc
xchg
imulb
aad
cmp
inc
or
scas
daa
lcall
addl
pop
mov
data16
inc
dec
or
rcrl
in
popf
and
test
pop
aaa
fs
jp
xor
imull
adc
xor
sub
enter
stos
lods
adc
lcall
ret
loopne
sahf
fs
jp
das
aas
pop
add
jge
sti
out
ficoml
dec
xlat
es
or
sub
sbb
add
hlt
jle
add
test
sarb
fldt
test
jo
ja
xchg
pusha
xor
and
push
push
pop
inc
xor
jecxz
xchg
mov
vmovups
outsl
mov
lcall
mov
xchg
adc
loopne
cld
mov
cltd
mov
cmpsl
jmp
cmp
inc
inc
out
sbb
jg
jae
sbb
imul
sub
mov
lds
push
ret
enter
and
imul
mov
cmp
dec
shll
daa
fwait
std
xorl
dec
loopne
pop
mov
sarb
dec
adc
adc
xchg
jl
adc
pop
aas
imul
mov
mov
inc
pushf
je
jbe
add
into
ja
push
xor
mov
popa
push
das
or
repz
cmp
push
shl
mov
fadds
cs
push
push
lret
push
lret
xchg
iret
or
inc
adc
mov
mov
inc
mov
mov
je
sahf
mov
imull
loope
fdivrs
inc
test
and
mov
pop
pop
or
add
out
cmp
and
arpl
or
xor
jnp
loopne
xor
or
xor
pusha
mov
lods
out
std
jo
cmc
filds
sarl
dec
sub
rolb
add
shlb
lret
sub
xor
fnsave
in
in
jo
ds
jp
push
pop
inc
pop
int
inc
jle
inc
jnp
scas
push
push
loop
ss
sbb
notl
mov
jo
leave
jp
int3
push
lods
jae
fiaddl
jne
and
rcrb
sub
out
mov
packsswb
outsb
jb
xor
mov
ja
pop
or
nop
and
repz
fdiv
popl
icebp
shlb
cmpsl
fsubs
or
inc
loopne
push
mov
ja
cli
outsb
jo
pop
sbb
sbb
push
dec
stc
fiaddl
jmp
mov
cmp
cmp
jp
in
jge
pop
lret
xchg
cld
mov
repnz
subl
addr16
xchg
aam
inc
je
out
mov
add
jns
sahf
jle
pop
xor
imul
sbb
xchg
sarl
mov
pop
mov
test
cltd
xchg
mov
dec
test
lods
xchg
in
data16
cmp
sbb
xorl
push
lret
and
outsb
push
setbe
xchg
cs
lods
out
repz
movl
jb
or
inc
insb
mov
push
push
add
jg
call
mov
mov
xor
adc
sbbb
out
ret
mov
int
das
mov
rcll
mov
sub
push
ds
aaa
inc
cs
pop
mov
add
add
xorb
in
or
scas
movsl
call
pop
mov
das
mov
sti
fbld
lock
cmpsl
stos
xlat
adc
mov
push
aaa
inc
ljmp
xorl
repz
push
sarb
out
push
and
inc
rcll
adc
lret
aas
cli
gs
int3
cmp
mov
test
jnp
inc
sar
in
sub
mov
inc
daa
push
pop
popa
jno
xchg
icebp
dec
dec
mov
sub
mov
mov
orb
dec
mov
mov
add
dec
adc
lock
add
and
pop
mov
mov
adc
leave
imul
mov
xchg
xlat
xor
daa
push
push
mov
in
dec
sub
sahf
mov
xacquire
fadds
mov
out
push
pop
pop
mov
pop
mov
mov
push
mov
test
push
add
lret
and
icebp
daa
clc
sub
and
stc
leave
mov
dec
add
mov
xor
mov
sub
pop
mov
lods
leave
jb
inc
mov
inc
jg
sbb
popa
push
add
sar
pop
and
xchg
add
lcall
xor
adc
or
xchg
mov
fwait
jp
daa
add
fisubrl
jecxz
div
push
dec
cmpsl
sbb
dec
test
pop
push
loope
sbb
and
mov
mov
aad
adc
jno
or
sub
out
or
xlat
test
adc
or
sbb
dec
loop
fiaddl
hlt
pop
lods
in
push
xor
or
jb
int3
data16
aaa
or
jmp
rolb
or
xchg
vmread
or
mov
scas
arpl
or
xchg
pop
xchg
test
pop
mov
jmp
mov
mov
or
in
sub
int
mov
dec
xchg
push
scas
push
fisttps
xchg
pop
sbb
faddl
push
push
fstps
pusha
test
pop
or
push
jnp
cmp
outsb
jge
popa
pop
lcall
ljmp
and
cmpl
and
lds
nop
xor
adc
sub
fdivs
or
push
cmp
or
mov
decl
push
mov
je
and
mov
out
sub
jle
add
mov
es
xor
fistpl
jne
pop
mov
sub
dec
or
xchg
in
inc
sbb
bnd
cld
les
rorb
rcrl
sbb
or
ret
xor
and
insl
mov
outsl
sarb
test
js
imul
pop
push
js
add
and
stos
js
cmpl
jb
dec
jb
or
aaa
sbb
aam
push
ljmp
inc
sub
jl
adc
insl
jnp
sahf
mov
cmp
xorl
mov
jp
scas
clc
jecxz
in
jge
push
int
outsb
out
or
sub
or
les
jb
and
cwtl
mov
xlat
shrb
push
adc
mov
jbe
lret
inc
xchg
cwtl
lret
fmull
xor
xor
pop
fs
dec
ret
bound
test
std
pop
inc
inc
pop
sti
rcrl
pop
mov
mov
dec
repz
cld
cmpsl
mov
fistps
aaa
in
mov
cltd
xchg
inc
cmp
adc
xlat
pop
shrl
adc
xor
pusha
pop
cmc
lcall
aas
fcomps
iret
sub
test
movsl
cmp
mov
jnp
xchg
cltd
mov
lret
jecxz
mov
shll
jns
dec
fdiv
test
test
insb
out
in
mov
fistpl
mov
push
ficoml
lret
ss
stos
adc
xor
xorl
mov
pop
xlat
jp
iret
jns
testb
aam
jno
dec
dec
in
lods
and
cmp
add
rcrb
add
xchg
loopne
test
mov
xor
pop
sbb
adc
ss
cmp
dec
pop
js
fcomp
bound
out
sbb
aad
ret
inc
test
inc
push
int3
lahf
call
inc
sarb
fstpl
cmp
test
add
flds
lcall
xchg
stc
ljmp
adc
jb
call
adc
ficomps
leave
in
xor
cmp
int
in
jno
leave
sbbl
mov
inc
mov
jg
aaa
sub
lea
test
dec
adc
ljmp
js
adcl
iret
mov
inc
gs
std
or
xchg
cmp
mov
inc
add
dec
imul
fimuls
pushf
lds
xor
mov
test
shll
lods
sbb
mov
cmpl
push
push
push
pop
les
push
dec
imul
daa
cmp
dec
mov
sbb
xchg
out
inc
mov
push
lret
pushf
in
pop
aas
mov
pusha
adc
mov
sahf
cmp
push
pushf
mov
mov
xor
call
inc
cmpb
push
sub
push
stos
insl
mov
mov
mov
mov
lock
decb
and
and
or
shrl
les
lcall
lcall
push
push
jns
pushf
sub
js
jle
test
jecxz
jg
jbe
cmpsb
or
mov
jl
dec
and
outsl
sbb
mov
loop
test
popa
mov
lds
xchg
pop
loopne
push
push
je
mov
fsubr
iret
pop
ja
push
add
shll
leave
inc
adc
stos
mov
in
jle
repz
inc
stos
push
add
dec
inc
fistl
mov
jb
or
sub
dec
jne
jo
xchg
ljmp
push
pop
scas
adc
sbb
lret
loopne
imul
xchg
dec
pusha
aas
lock
int3
cmpsl
sub
mov
xor
loop
sub
cli
dec
xchg
lea
sbb
insb
fcmovnb
inc
movsb
xlat
mov
mov
je
stos
fldcw
mov
dec
xchg
mov
or
sbb
add
shlb
shrb
cmp
jae
mov
inc
push
fcoms
fidivl
ret
cmp
jle
add
ret
add
cmp
daa
insl
push
icebp
stos
mov
in
lods
xor
rorb
sbb
cs
mov
rorb
pop
and
mov
add
cwtl
mov
pop
push
gs
add
xchg
leave
mov
cld
hlt
gs
shlb
add
loope
push
xor
xchg
push
stos
push
test
outsl
mov
repz
ret
push
sbb
popa
negl
inc
and
xchg
adc
and
fs
sub
xlat
sti
and
push
dec
fcmovnbe
mov
int3
in
dec
aaa
fwait
jl
fidivrl
int
out
cmp
and
clc
lock
adc
mov
inc
or
dec
inc
test
cmpsl
popf
jne
cwtl
cmp
and
mov
and
xchg
pop
rcrl
mov
sbb
cmp
ret
mov
or
outsl
lcall
cmpb
xchg
xor
mov
pusha
cwtl
scas
push
jge
or
data16
rolb
jbe
mov
cmp
push
pop
adcl
pushf
leave
rol
sti
dec
add
inc
stc
jo
sbb
pop
pop
fwait
mov
lret
iret
filds
or
int3
push
aam
test
std
xchg
fwait
mov
scas
popa
jg
cs
pop
pusha
or
adc
sbb
fidivrl
sbb
push
dec
leave
loope
push
std
pop
inc
mov
add
cmp
nop
sbb
out
inc
rol
shr
js
insl
mov
pusha
cmp
test
cmp
pop
adc
sarl
sahf
fidivrl
shrl
cmpsl
test
xchg
dec
cmp
sub
jnp
outsl
shlb
shrl
mov
mov
mov
push
fistps
sub
out
sub
movsb
cltd
fimuls
in
mov
push
dec
sbb
in
icebp
push
lock
outsb
daa
mov
shll
enter
out
jne
mov
imul
jge
or
jge
je
adc
jp
jl
bound
xchg
inc
hlt
pop
cmp
les
int
add
cs
push
out
cltd
hlt
fwait
mov
sti
cld
cmp
dec
inc
or
add
xor
aad
pop
aaa
xor
cmpsl
mov
push
pop
sub
dec
shlb
mov
jle
insl
inc
lret
insl
xchg
dec
fistpll
cwtl
out
adc
popf
subb
sbb
jno
test
push
mov
xchg
rclb
fwait
sti
cmpsl
lcall
mov
sbb
or
mov
add
sbb
xor
ret
push
xchg
sti
sub
mov
nop
mov
or
xor
aaa
mov
xor
scas
jle
fiaddl
out
xor
clc
mov
flds
lcall
xchg
icebp
imul
mov
jp
stos
es
mov
js
dec
stos
insb
or
mov
aad
in
stos
xchg
xchg
hlt
cltd
in
sub
int
stos
ret
lds
cmp
sbb
pop
xor
mov
push
push
inc
aam
fcmovnb
stos
fs
fcomps
mov
outsb
sub
sbb
test
xchg
jne
mov
sbb
loop
jne
add
cwtl
push
call
push
enter
push
loopne
add
push
xchg
push
rorl
iret
jge
mov
leave
sbb
mov
call
cwtl
dec
sbb
ret
out
addb
js
cs
sub
xorb
inc
jl
lahf
inc
push
rcrb
adc
push
jnp
cmc
cltd
jnp
push
or
adc
push
andnps
mov
js
dec
sbb
mov
mov
cwtl
or
inc
cmp
xor
mov
cld
mov
lea
or
aam
xor
dec
negl
mov
outsb
movsb
sub
iret
gs
mov
jmp
gs
je
clc
out
popa
push
mov
repnz
xor
sbb
mov
dec
cmpsb
gs
orl
pop
loope
not
nop
add
dec
into
lret
dec
sub
lods
or
jno
fisubrs
mov
dec
fstps
jnp
imul
and
jne
lods
fstps
push
and
cmc
inc
mov
jle
std
enter
iret
adc
scas
xor
inc
and
aaa
pop
xor
cmp
loope
sbb
stos
inc
cmc
cmp
push
imul
mov
jle
xchg
outsb
xor
xor
add
daa
push
inc
sbb
jp
sbb
push
jbe
xchg
xchg
sahf
xchg
jnp
popa
data16
mov
std
loopne
and
push
aas
loopne
xchg
pop
adc
lock
xor
fisttps
dec
sbb
cltd
add
sbb
and
cmp
mov
arpl
cmp
stc
or
push
rcll
test
sbb
shll
ret
subb
jb
imul
push
jo
xchg
rcrb
shlb
gs
or
fmull
add
dec
sub
fiadds
int3
cmp
xorl
xor
fmulp
mov
out
iret
jp
sti
mov
ljmp
mov
scas
cs
pop
xchg
sbb
or
ret
sbb
xor
xchg
sub
in
inc
xchg
aam
mov
arpl
lock
shll
imul
cltd
int
rolb
cmp
or
sbb
pop
lock
sub
push
cmp
or
adc
cwtl
pop
sbb
mov
push
push
fdivs
fwait
inc
jg
lahf
ss
out
inc
jl
cwtl
jo
cmpsl
push
rcrb
imul
jo
xchg
fst
popa
mov
sub
insl
inc
das
dec
push
in
jl
call
sub
add
adc
adc
add
dec
sbb
mov
fwait
mov
iret
sarb
xchg
cmp
pop
xchg
cmp
add
mov
fs
pop
test
pop
cmp
icebp
jle
push
repnz
dec
xor
adc
add
push
mov
add
xlat
shlb
sbbb
mov
jno
call
mov
and
push
notl
sbb
cli
ss
fldcw
fistl
loope
and
cltd
test
nop
inc
test
ret
push
icebp
mov
mov
inc
call
fstp
call
cli
xchg
pop
stos
loope
jb
sbb
in
sbb
xchg
stos
adc
das
into
sbb
xor
bnd
inc
mov
clc
bound
mov
xor
jno
mov
int3
lods
es
push
push
push
mov
and
push
test
mov
test
inc
push
adc
dec
push
test
jg
sbb
dec
lock
les
clc
fcmove
imul
jb
js
cmp
dec
loopne
jl
and
adc
pop
xchg
cmc
push
xor
jb
jmp
mov
int3
fwait
or
dec
loope
fiadds
sub
aas
inc
lret
in
in
adc
dec
mov
xchg
ret
pop
cltd
lret
sub
fs
fadds
mov
inc
mov
and
and
jne
xchg
mov
aas
mov
push
sbb
out
mov
rcr
and
std
inc
loope
arpl
jbe
inc
sbbb
cwtl
dec
and
dec
movsl
jne
lahf
out
inc
lods
in
cmp
push
or
mov
or
dec
xor
fs
mov
iret
cmp
lret
hlt
fldcw
mov
push
jg
push
call
rcrb
lahf
sbb
in
jne
lcall
insl
or
andw
shll
js,pt
cmc
fs
test
jno
mov
or
fs
sub
test
xchg
mov
mov
fucomp
or
jle
js
and
xchg
mov
sbb
push
dec
cld
add
pusha
push
imul
inc
hlt
out
iret
cmp
push
xor
mov
and
dec
lcall
shlb
ja
adc
fisubl
orl
pusha
loop
imul
push
xchg
inc
and
jbe
cli
ret
fildl
mov
repnz
clc
jmp
adc
add
insl
mov
push
test
xchg
pop
pop
into
in
inc
gs
stos
inc
jle
mov
cmpb
lods
sub
jp
inc
sarl
or
mov
and
aam
dec
dec
ss
push
and
push
in
jl
mov
ss
push
fnstcw
xor
jge
push
loope
test
jp
push
adc
or
xor
addr16
inc
int3
push
jb
repnz
or
in
fldl
cmpsb
fdivrp
xchg
cmp
je
xor
xchg
fwait
loop
mov
cmp
cmp
inc
xlat
roll
pop
es
sub
sub
fistps
jge
sub
inc
pop
scas
into
mov
mov
and
mov
cltd
jp
lahf
fs
notb
dec
mov
or
cltd
pop
and
scas
icebp
pop
in
sbb
mov
mov
dec
in
out
stos
mov
inc
imul
jno
test
mov
mull
lods
sub
push
aaa
sbb
int3
pop
test
jae
int3
push
stos
lahf
mov
jne
xor
push
dec
aas
sbb
mov
push
scas
push
or
sbb
mov
xor
fnstenv
jle
in
fs
loope
inc
xor
mov
and
mov
sub
shl
arpl
sub
cld
mov
inc
repnz
sbb
push
aaa
xor
add
pop
test
sub
mull
jnp
push
and
popf
and
mov
dec
jns
jbe
jo
jns
inc
pop
pop
pop
fisubrl
mov
pop
add
sbb
mov
aaa
pop
xlat
dec
lahf
in
fistpl
arpl
xcrypt-ecb
cmpsl
or
dec
fbstp
xchg
push
jns
das
sub
ds
ret
ret
lds
in
add
movsl
sbb
add
lods
mov
ja
jp
das
add
jb
jns
icebp
imul
mov
lea
test
mov
pop
push
out
cmp
jp
test
test
int
fisubrs
xchg
inc
xchg
cmp
inc
pop
or
lock
lock
cmp
sar
mov
xchg
nop
clc
mov
in
xor
push
movsl
cmp
and
inc
xor
xchg
ds
clc
mov
cmc
mov
popa
call
ret
pop
aaa
lods
mov
bound
mov
imul
aas
rol
sbbb
mov
jle
mov
fdivp
jg
cmpl
mov
xor
push
rcrl
sbb
int
lahf
dec
ss
test
push
push
jle
xchg
push
mov
xor
mov
cmpsb
fcoms
pop
mov
mov
cltd
add
pusha
jmp
sub
push
push
lahf
sbb
push
add
ds
inc
jne
jmp
pusha
mov
mov
xchg
adc
clc
ret
test
hlt
lea
sbb
cmc
mov
movsb
in
jns
adc
ljmp
add
leave
adc
or
insb
lds
clc
pop
xchg
cmpsl
push
sub
dec
mov
int3
mov
les
pop
out
sub
ds
cmpsl
mov
hlt
movsb
jb
xor
aaa
mov
stos
addb
sbb
lret
add
sub
adc
scas
xchg
jb
jp
and
cmp
lods
inc
adc
fdiv
out
ficoml
push
jmp
in
sbb
std
cmp
cwtl
cs
lret
dec
pop
addl
xchg
test
adc
shlb
xchg
pushf
mov
lods
test
js
gs
sti
insb
mov
inc
fisttps
inc
aas
lret
mov
and
in
xchg
hlt
test
lock
jnp
inc
arpl
xor
iret
push
or
mov
imul
cli
lods
pop
push
mov
icebp
xchg
mov
shrb
adc
pushf
push
pop
xchg
arpl
cli
mov
int3
hlt
and
fistpl
jno
test
ja
xchg
mov
mov
adc
add
and
mov
out
repnz
sti
xchg
shl
sub
dec
popl
aaa
jne
leave
enter
or
fwait
push
adc
jae
in
out
ret
or
adc
inc
mov
xorl
sbb
mov
in
mov
sub
mov
jmp
cli
std
int
imul
test
sbb
jg
adc
or
and
dec
add
inc
bound
cmp
push
sub
hlt
bswap
imul
jns
or
movsl
lds
addr16
xchg
and
bound
outsl
cmp
ret
add
push
repz
shrb
in
fisttpl
or
cld
mov
push
js
mov
jg
loopne
pushf
cmp
adcb
decl
movsl
xor
dec
addl
sbb
jmp
push
dec
cld
fldl
sahf
and
out
ret
inc
adc
mov
mov
push
add
mov
ret
shlb
mov
ja
pushf
cli
push
imul
xlat
pop
xor
imul
cld
test
es
mov
popa
ss
adc
js
jne
daa
popa
sbb
fstpl
test
js
rcrb
adc
mov
in
inc
xor
aaa
jne
mov
int
leave
stc
in
sub
xor
inc
mov
dec
inc
push
gs
inc
or
mov
ds
jae
bound
pop
or
icebp
inc
push
aam
insl
xchg
inc
adc
inc
cld
ss
push
inc
mov
outsl
sahf
jg
nop
in
pop
dec
inc
sbb
pop
int
jmp
mov
xchg
jae
mov
mov
int
sub
cmpsl
adc
int
mov
add
pushf
popa
dec
adc
imul
mov
leave
mov
test
enter
cmp
test
jb
fstpl
fstpl
sub
inc
addl
test
jl
pop
or
cli
cmc
sbb
js
mov
scas
aam
mov
and
push
add
shrl
clc
in
rolb
dec
pop
call
ljmp
xor
xchg
cmp
lods
jo
cmp
in
pop
sbb
mov
sahf
mov
hlt
mov
xchg
fldenv
mov
rolb
cmp
pop
pop
fs
fs
pop
mov
test
or
or
cld
enter
icebp
jne
js
daa
sub
std
idivl
jmp
lret
inc
mov
jns
dec
inc
test
and
fs
mov
js
test
add
sbb
arpl
or
cmp
pop
scas
and
dec
and
pop
push
ret
jns
repnz
mov
mov
cmp
cmpsb
jae
pop
repnz
mov
imull
pop
pushl
push
mov
inc
sbb
add
push
call
std
imul
pop
add
jb
dec
notl
xor
xchg
out
push
xor
enter
fs
xchg
mov
scas
out
sti
jbe
shrl
fistpl
outsb
iret
sbb
inc
mov
xor
xchg
fmul
or
sar
ljmp
lcall
mov
rcl
lahf
mov
dec
jns
or
pop
addr16
shlb
cwtl
fnstenv
push
pop
imul
cmp
aaa
out
loopne
outsl
jns
imul
xchg
add
mov
pop
fwait
and
push
cmp
or
xchg
push
iret
jp
sbb
inc
or
popa
and
pop
pop
sub
ljmp
cmpsb
add
dec
add
pop
and
dec
mov
pop
xchg
idivb
and
mov
mov
sub
fwait
hlt
movsl
cmp
mov
lea
sbb
insb
repz
orl
out
or
sahf
inc
je
call
ret
adc
push
push
lods
popf
nop
das
xchg
xchg
stc
xorl
hlt
or
xorl
push
sbb
mov
sti
je
inc
mov
or
push
pushf
xchg
leave
mov
sub
pushf
xchg
or
cmp
jb
pop
je
out
jne
xor
or
shrb
mov
cmp
imulb
dec
out
std
arpl
add
cmp
aam
call
rcr
fldcw
add
dec
icebp
add
xchg
sahf
mov
cmpsl
adc
push
fiaddl
cmpsb
ja
and
xchg
mov
aam
sbb
sahf
xlat
inc
outsl
rorb
imul
mov
pop
xchg
nop
mov
pop
mov
adc
mov
push
mov
inc
insb
dec
sbb
out
cmp
jne
or
int
ret
and
and
inc
out
insb
push
pushf
add
in
fisttpll
sub
sbb
jae
ja
dec
push
xor
jmp
test
outsl
pop
bound
sti
mov
inc
push
xchg
push
add
pop
lods
imul
fldcw
insb
cmp
mov
clc
or
mov
pop
mov
adc
sub
dec
xor
mov
sbb
push
mov
movsb
add
add
cmp
test
or
data16
movsb
jg
je
roll
cli
js
add
jbe
adc
dec
fdiv
add
lods
jne
mov
ljmp
repnz
pop
jg
push
lock
cmp
stos
jns
push
cltd
adc
inc
scas
leave
jge
and
cltd
outsb
icebp
push
lds
and
mov
or
cmp
jge
cmp
inc
shll
cmp
sub
inc
cmp
out
icebp
arpl
dec
add
pop
jge
and
dec
rorb
mov
cmc
fsub
fcomip
lods
xor
test
decb
sbb
cmp
addb
int3
jmp
xor
jl
push
std
xor
xor
adc
push
or
imul
test
xchg
out
pop
popa
rcll
or
push
and
cmc
mov
lds
stos
decb
stc
lea
out
cs
int
mov
out
pushf
std
xchg
mov
dec
mov
and
adc
js
or
inc
pop
sbb
popa
mov
xchg
das
pushf
mov
std
jl
xchg
xor
mov
paddq
jns
jmp
outsb
sahf
pop
add
adc
sti
mov
inc
icebp
jl
jmp
push
cld
sbb
inc
ss
dec
pushf
pop
cmp
jp
pop
out
subb
lcall
mov
loop
repnz
repnz
aad
mov
pop
sbb
fcmovnu
dec
lods
lahf
pop
mov
xor
sahf
cmp
mov
jo
xor
loope
mov
mov
std
das
cmpsb
aaa
pusha
jecxz
out
fcoml
loop
mov
addr16
iret
add
lds
cmp
mov
or
movl
pop
mov
repnz
pop
sub
dec
std
mov
mov
add
cwtl
cmpsl
fcomip
sub
shrb
xor
je
cmp
aas
jno
pop
mul
jo
push
repz
mov
nop
jns
jnp
pusha
mull
xor
aam
cmp
stos
adc
int
xor
dec
aas
in
dec
pop
loope
pop
mov
movsb
push
sahf
je
neg
sbb
std
add
xor
test
lret
xor
or
scas
xor
adcb
loope
sub
mov
mov
mov
rorl
cltd
cmpsb
jns
cwtl
inc
pop
mov
sahf
jl
cld
jne
in
cmpsb
dec
inc
push
adc
push
push
ja
cmpsb
shrb
and
mov
xchg
adc
pushf
inc
mov
xchg
leave
dec
jg
pop
jmp
lret
fbstp
fxch
loop
mov
shlb
dec
lods
fnstcw
ficomps
inc
aad
xchg
mov
or
hlt
ljmp
push
out
jg
scas
cmpsb
scas
insb
sub
out
push
test
cmpsl
and
je
mov
lret
js
inc
xlat
out
subl
adc
jne
xchg
fisubl
jo
sub
popf
test
mov
add
aad
and
je
lahf
xchg
and
mov
rcll
jl
mov
push
sub
clc
enter
sbb
shlb
cmp
mov
ja
xchg
cltd
mov
addr16
and
inc
test
popf
pop
dec
or
pop
ja
roll
test
jge
xchg
xchg
and
icebp
adc
and
xchg
insb
pop
fmull
daa
xor
pop
mov
scas
jo
mov
mov
fldenv
lret
mov
adc
mov
mov
outsb
ds
mov
mov
popa
imul
mov
cmp
stc
aad
mov
push
cmp
dec
rcrl
pop
inc
icebp
push
xor
mov
outsb
out
cwtl
fsubrs
mov
jle
dec
fwait
mov
xor
mov
sub
cwtl
mov
pop
out
and
sbb
pop
dec
pusha
jno
out
pop
and
int3
xor
dec
outsb
push
sub
das
push
call
jecxz
test
out
cmp
jbe
jno
cmc
jge
cs
arpl
fdivr
or
fidivl
mov
test
xor
or
mov
lret
les
ret
jecxz
neg
out
cwtl
cld
adc
jns
and
adc
std
dec
jmp
xchg
jne
push
dec
fcmovne
popf
ljmp
loope
adc
jle
fbld
mov
add
mov
lods
popa
inc
movsb
rclb
out
call
rcrl
ror
in
xor
test
xsha256
cmpsb
push
mov
mov
push
lret
mov
aad
mov
inc
push
repz
jb
xchg
les
inc
pop
pop
shrl
add
push
and
dec
pop
cmp
aad
mov
mov
stc
jae
loopne
mov
pop
add
fistpll
out
jne
xchg
dec
lods
dec
adc
div
dec
ss
dec
pop
je
lret
dec
mov
inc
cmp
push
test
test
out
sub
xchg
push
mov
in
jo
jmp
movsl
push
rcll
sbb
mov
jge
mov
cmp
call
fcompl
jecxz
jecxz
hlt
pop
pop
cmp
out
into
jbe
mov
fsubrl
xchg
xchg
out
addb
sbb
push
push
dec
inc
jmp
cmp
jns
lods
xor
loop
aad
cwtd
das
enter
and
lret
ss
adc
add
jmp
sub
inc
pop
mov
jl
les
or
bound
or
sub
cmpl
imul
mov
jo
jno
or
pusha
mov
mov
shlb
fisttpl
jno
insw
push
or
xor
dec
in
sbb
or
xchg
arpl
mov
out
mov
psubq
cmp
into
mov
imul
imul
rclb
rorl
inc
and
push
push
ficomps
mov
push
cli
mov
gs
or
test
movsl
and
gs
pushf
pop
adc
pop
lcall
cmp
sub
push
bound
or
imul
mov
std
je
inc
cmp
aad
mov
dec
adc
dec
and
inc
cmc
addb
sbb
das
in
sbb
sbb
or
or
outsb
push
sub
lods
and
and
dec
mov
bound
pop
xor
lods
test
roll
push
js
loop
xor
hlt
adc
xchg
jmp
pop
or
sti
iret
sub
adc
xchg
mov
sbb
xor
jge
jnp
xchg
jl
inc
cmp
xor
mov
or
add
jle
ret
pusha
cmp
ja
rcrb
mov
adc
cmp
leave
push
add
scas
inc
jne
shll
sub
int3
xchg
testl
dec
sbb
jb
inc
sub
inc
add
ljmp
push
and
xchg
test
xor
test
out
cs
iret
pushf
imul
mov
mull
outsl
aaa
dec
mov
in
invd
dec
leave
xor
daa
dec
push
faddl
inc
leave
test
mov
or
xchg
imul
imul
dec
cli
stc
sub
inc
xor
mov
insb
shlb
daa
js
shr
push
into
repz
fisttpl
pop
xchg
xor
decb
movsb
arpl
inc
gs
pop
repz
push
out
mov
std
fnstenv
pop
jb
shll
into
gs
jle
sbb
pop
sub
and
jmp
add
sub
lret
loop
push
xchg
lret
pop
divb
repz
inc
stos
xchg
cmc
inc
dec
pop
outsl
arpl
mov
sbb
jle
stos
sbb
mov
sub
stos
ret
ret
ret
mov
sub
fdiv
add
pop
add
rcrl
stos
xchg
into
scas
sbb
jge
fbld
int
and
push
aaa
pop
in
ljmp
sub
js
fadd
rcll
lret
add
sub
and
cmpsl
sbb
inc
adc
push
das
mov
mov
in
push
cmc
in
pop
stos
int3
and
mov
adc
dec
rorb
sub
dec
lcall
je
das
mov
dec
lock
lret
push
jecxz
dec
aas
ds
fs
push
inc
push
dec
sbb
dec
and
int
dec
or
and
jl
jl
dec
in
xchg
mov
mov
cmp
xor
xor
push
cmpsl
cmp
hlt
mov
inc
inc
repnz
push
flds
lret
or
out
out
icebp
repnz
mov
ficoms
cmp
push
movsb
cmc
bound
fimull
fldz
popl
fbld
std
or
mov
orb
push
jg
ret
ret
push
imul
movl
push
repz
aas
xor
inc
mov
sbbl
lock
in
mov
push
sbb
scas
jb
mov
xor
cmp
sbb
gs
mov
push
mov
mov
insl
sub
xor
add
rcll
jl
fbld
rcr
shrl
push
inc
hlt
retw
mov
mov
sbb
cltd
xor
andl
jbe
iret
mov
dec
call
rcl
lods
stos
sbb
movsl
test
lret
flds
dec
jne
adc
jge
lods
lock
paddusb
push
imul
inc
int
sahf
shll
pop
insl
inc
mov
shrl
ss
popf
xor
mov
bound
ret
xchg
inc
mov
xor
ss
sbb
arpl
mov
popa
ja
jb
cld
out
add
pop
movb
lods
jle
lcall
inc
sub
pushf
cmpb
ret
add
fwait
bound
lds
pushf
movsb
lret
divb
pusha
test
jp
xchg
adc
mov
dec
les
int
out
and
sbb
loope
lock
into
loope
mov
testl
and
iret
cmp
jne
jnp
pop
push
or
cmp
ss
or
xchg
je
or
daa
cmpsl
push
mov
das
sbb
mov
negb
jp
xchg
aam
scas
adc
call
movsl
ret
les
nop
rclb
jg
sahf
pop
out
cmp
mov
das
lods
pop
aam
and
repnz
inc
dec
aaa
adc
xchg
mov
leave
jp
ljmp
and
sbb
mov
or
jg
xlat
mov
int
push
loope
mov
lds
push
int3
jbe
outsl
cmp
aaa
mov
jne
les
mov
cmp
addr16
jl
xchg
cmpsb
sbb
adc
push
int
sbb
fbstp
pushf
popf
pop
push
popf
popa
xchg
cmpsb
lds
bound
inc
bound
pushf
pop
add
dec
out
sti
dec
jne
push
hlt
pop
jb
pop
outsb
jmp
jns
les
lods
jns
in
push
jae
mov
mov
lldt
popa
xor
sbb
rorb
lahf
or
cmp
xchg
mov
jns
dec
repnz
jo
sbb
mov
scas
pop
jns
pop
pop
push
mov
cli
daa
push
fadds
jno
cmp
push
mov
jb
add
sub
mov
dec
daa
testb
adc
ret
and
pop
pushf
sub
adc
les
sbb
push
pop
out
loope
push
inc
mov
mov
jg
sbb
mov
xchg
add
push
out
mov
and
pop
cmp
sarl
lods
add
fidivrl
push
insl
jmp
cwtl
frstor
fisttpll
cmpsl
mov
idivb
mov
jg
cmp
mov
xchg
sbb
sub
out
imul
pop
out
insl
out
mov
inc
mov
cmp
loope
icebp
dec
xchg
inc
call
dec
jl
push
scas
inc
cli
sub
lods
stos
inc
adc
push
sbb
iret
enter
scas
inc
jmp
ficoms
lods
inc
mov
push
js
xchg
mov
lahf
roll
and
inc
sbb
push
push
mov
mov
push
lret
dec
push
mov
push
mov
arpl
bound
inc
jecxz
scas
repnz
pop
out
insl
inc
mov
cli
jecxz
aad
rolb
cli
push
mov
dec
aas
cmpsb
sbb
cltd
xor
in
inc
shr
push
add
cmp
popf
mov
sahf
nop
nop
out
mov
pop
mov
cld
jae
dec
add
sub
pop
mov
sti
or
or
pop
mov
xlat
test
je
add
in
and
shlb
push
xor
dec
ret
cltd
pusha
jg
movsb
lods
sbb
fimuls
call
fcom
mov
imul
cmp
xchg
push
sub
fsubp
add
jnp
jno
ror
inc
pop
mov
and
xchg
pop
repz
shlb
sbb
push
push
push
daa
in
cmpsb
in
mov
dec
and
imul
clc
fildll
mov
in
and
adc
pop
outsl
cmp
hlt
xchg
jo
nop
ret
out
loope
arpl
xchg
aas
arpl
nop
jae
sub
add
mov
les
subl
cmp
rcrl
inc
xor
test
jge
fiadds
xchg
stos
pop
pop
xor
or
mov
je
in
bnd
clc
pop
mov
pop
inc
outsl
xor
les
mov
add
mov
ror
aaa
stos
aam
pop
fwait
nop
jecxz
cmpsl
stos
sbb
jnp
push
xor
je
xchg
push
fnsave
int3
push
cld
das
pop
mov
ss
int
mov
push
inc
sbb
lods
outsl
fsub
cmp
es
inc
jbe
scas
movsl
push
jne
dec
movsl
fldt
sub
jl
mov
sbb
rorb
lret
or
add
inc
fiadds
icebp
and
mov
xchg
push
pop
inc
or
bswap
xor
fistps
jae
push
dec
int
xlat
in
imul
popf
mov
shl
dec
and
daa
in
in
jl
mov
ldmxcsr
inc
inc
pop
sbb
cwtl
pop
mov
std
and
mov
pushf
push
or
insb
sbb
inc
rcrb
xor
adc
mov
sub
pop
adc
out
pop
in
lock
add
push
shll
scas
xchg
sbbl
pop
add
jl
and
dec
ljmp
nop
push
push
xor
mov
leave
inc
dec
scas
mov
push
cli
rorl
loop
inc
xor
fs
dec
lea
test
fisttpl
das
lods
adc
fcoml
adc
jb
jmp
adc
mov
mov
je
dec
divl
push
xchg
mov
subl
pop
xchg
shll
arpl
mov
xchg
xor
enter
xchg
mov
icebp
fnstcw
rorb
adc
sbb
sbb
push
cld
les
in
movsb
or
xor
or
mov
sar
in
push
mov
mov
inc
lock
in
call
jo
jbe
in
test
add
fiadds
ror
xchg
sub
sbb
push
cmp
lahf
scas
push
jge
inc
xor
mov
into
mov
test
pop
jbe
lret
inc
sbb
xor
cli
jnp
push
popf
mov
loop
lock
sub
shlb
inc
les
popa
fdiv
aad
sub
pop
lahf
jbe
mov
dec
push
leave
outsb
xchg
xchg
pushf
jg
cmpsb
sbb
mov
clc
sub
cmpsb
sti
fstp
lahf
aad
test
or
inc
das
adc
rolb
or
das
or
lods
shrl
cltd
ret
lcall
add
inc
aam
mov
inc
adc
test
fidivl
jne
add
rcll
ret
jg
test
mov
in
mov
xchg
pusha
mov
push
fwait
mov
out
mov
sbb
fbstp
cmp
roll
pop
cld
dec
mov
ss
int
arpl
fld
ljmp
into
xor
lods
mov
test
xor
xchg
inc
rorl
push
repnz
sbb
sbb
aad
js
jae
lds
cmc
in
xor
rcrl
lods
jecxz
lret
jle
pushf
punpckhbw
xchg
push
ffree
adc
cmc
mov
sbb
stos
add
outsl
mov
add
inc
sti
iret
or
pop
mov
aaa
mov
faddl
jb
jle
mov
sbb
and
decb
test
movntq
xchg
mov
iret
mov
inc
movsb
inc
mov
andl
mov
lret
cmp
icebp
fsubrp
scas
push
mov
sub
pop
mov
jne
jg
dec
xor
call
ret
jb
cmp
jg
cmpsb
mov
add
push
and
or
mov
mov
mov
pop
cli
les
inc
adc
xchg
and
sub
je
jl
xor
ret
cmp
iret
or
xchg
sbb
inc
inc
or
jae
out
jl
push
or
add
adcb
mov
in
fidivs
xlat
insl
fsubrs
fdivl
scas
adc
jmp
add
lods
mov
insb
and
sub
fucomi
adc
aad
push
jmp
test
xlat
lret
popf
adc
or
cmp
mov
insl
rcrl
adc
test
push
mov
stos
lea
arpl
xchg
imul
adc
mov
cmp
or
aas
mov
sarl
and
mov
insb
les
mov
out
xlat
mov
aad
push
xchg
push
dec
xor
add
mov
das
mov
or
out
sub
fnstenv
call
add
fwait
in
andb
sbb
ret
xchg
mov
pop
push
mov
mov
fbld
dec
leave
inc
into
ljmp
xchg
shlb
dec
inc
dec
test
ret
fcmovb
iret
dec
xlat
xchg
rolb
out
int
dec
sysret
scas
xchg
mov
clc
mov
es
sub
cwtl
jp
cld
lret
cmp
sub
cmp
dec
lock
adc
inc
lods
scas
xor
daa
adc
fnstenv
mov
sub
adc
or
das
in
out
lret
cmc
mov
idiv
iret
cwtl
inc
jp
mov
mov
das
mov
cmp
xchg
pop
or
jns
and
xchg
rcl
xor
gs
adc
daa
scas
cmp
or
lret
or
cmp
jo
xchg
xorb
mov
lods
xchg
jle
out
sbb
in
cmpsb
sub
sbb
aad
insl
push
jns
bnd
dec
xor
js
push
sti
gs
dec
add
xor
lock
jg
push
scas
clc
sti
push
ret
mov
xchg
pop
pop
repz
imul
scas
mov
and
jo
arpl
sbb
mov
stc
mov
jne
push
cld
cmp
outsl
cs
mov
xchg
mov
inc
push
pop
jae
mov
sbb
cld
lcall
out
lods
jbe
push
gs
cmp
push
repnz
out
pop
xchg
lahf
jb
rcrl
das
out
outsb
scas
sti
fsubrl
sub
add
subl
inc
xor
pop
cli
inc
in
icebp
sahf
sub
ds
sti
or
push
xchg
xchg
in
xchg
jecxz
push
xchg
cmc
push
mov
test
outsb
dec
aad
mov
shll
gs
cmc
pop
sub
mov
loopne
int3
push
xchg
xor
lcall
jp
test
mov
fsts
mov
push
repz
testl
jle
shl
mov
sbb
and
jno
adc
jecxz
fwait
loope
mov
add
out
mov
sbb
push
cli
daa
pusha
xchg
arpl
loop
test
and
outsb
fimuls
das
inc
es
dec
clc
xorb
adc
push
pop
lods
sub
cmp
push
jnp
lahf
addr16
pop
mov
pop
add
dec
imul
inc
jge
jnp
cmp
enter
add
icebp
aam
sub
aad
out
fwait
pusha
inc
inc
js
enter
stos
fiadds
mov
lahf
jo
movsl
sub
cmp
xlat
mov
mov
shr
icebp
cli
call
xchg
in
or
xor
cmp
adc
cld
dec
stc
inc
dec
push
loop
aam
pop
in
ficomps
stc
inc
and
ss
push
mov
jo
mov
fstps
cmp
cmp
or
push
mov
mov
inc
xchg
dec
scas
mov
pop
cmpsl
leave
insl
out
out
pop
dec
outsb
inc
fwait
out
adc
mov
jp
mov
mov
pop
nop
or
es
clc
ljmp
shr
mov
jmp
dec
jp
mov
lods
jnp
ss
lds
xchg
pop
sub
pop
inc
xchg
std
mov
rolb
or
dec
mov
or
mull
pop
ja
jg
pop
sub
in
sbb
arpl
insb
mov
pop
mov
popf
testl
adc
xlat
daa
dec
pop
mov
inc
or
push
pop
add
mov
ds
push
into
add
loop
pop
push
test
xor
add
mov
sbb
sub
test
adc
mov
cmp
mov
cmpsl
fisttps
xchg
lahf
ljmp
data16
jnp
sahf
lods
jb
clc
adc
push
cwtl
mov
or
cwtl
repz
adc
push
add
jecxz
mov
xchg
add
lcall
xor
add
sbb
dec
mov
sub
jne
cmp
and
test
stos
jbe
inc
mov
ss
divl
int
xchg
inc
and
int
sbb
insl
movsb
fcomip
xchg
sub
lret
cmc
cmpsl
jle
imulb
std
or
push
mov
sbb
inc
scas
std
pop
jo
mov
add
out
stos
aam
sub
sub
jbe
xchg
inc
sub
aas
mov
xchg
mov
inc
push
cld
add
loopne
js
and
push
dec
mov
lods
cli
pusha
pop
or
xlat
pop
sbb
adc
dec
push
jp
roll
stc
sbb
out
stc
in
shrd
pushf
jne
je
andl
xor
repnz
loope
cmp
or
in
negb
inc
sub
adc
xor
fwait
push
xor
dec
int3
xchg
pop
xchg
lahf
and
sbb
nop
xor
add
xchg
roll
popf
jbe
loope
sahf
cmpl
imul
adcl
out
xlat
incb
dec
cwtl
cmc
std
mov
cmpsl
dec
jge
sub
cli
and
loope
nop
loop
loop
cli
mov
cmp
lock
xlat
in
sub
xchg
addb
jmp
pop
or
xor
aad
lahf
bound
in
mov
adc
test
addl
std
ss
mov
idiv
test
adc
out
imul
inc
xchg
mov
pop
in
dec
jmp
mov
aam
pop
push
das
lods
movsl
iret
popa
mov
mov
mov
sar
fcoms
sbb
in
mov
fnstsw
jle
dec
or
xchg
lret
jb
add
gs
idivl
and
fstpt
je
loop
mov
cmp
xchg
out
aaa
mov
arpl
aaa
aad
add
lret
ficompl
adc
jl
imul
loope
jmp
mov
cli
es
push
jl
inc
mov
mov
xchg
addr16
addr16
notb
pop
xchg
xor
jmp
fldl
in
push
loop
int3
adc
ret
outsl
and
movsl
xlat
xor
les
js
stc
xor
mov
jo
iret
stos
xorl
ret
inc
mov
inc
sub
mov
adc
adc
xor
xchg
dec
test
or
lods
sbb
es
sub
jne
dec
fucom
inc
sbb
add
shll
add
test
mov
and
iret
inc
cs
addl
into
subl
jae
dec
mov
pop
mov
cmp
xchg
jle
inc
arpl
cwtl
fidivs
push
pusha
fbld
jnp
jns
imul
mov
adc
push
movsl
sub
out
fsubrs
call
pop
aad
loope
inc
xchg
and
ja
loope
int3
sbbb
in
enter
inc
mov
mov
jb
dec
and
test
repz
mov
daa
jo
or
mov
jle
adc
sub
mov
out
js
movsl
popf
cmp
cmpsl
movsl
xlat
mov
fsts
add
pop
loop
lahf
dec
xchg
pushf
negl
pushf
lods
inc
cmp
movsl
fnstenv
ret
sub
test
xchg
mov
pop
out
mov
sti
cld
sub
xor
sub
dec
mov
adc
adc
mov
les
movsb
ret
push
jo
pop
in
push
or
lods
push
cmpb
mov
xor
lock
shl
orl
clc
mov
and
shr
arpl
or
xor
dec
jo
clc
daa
and
lods
cs
aaa
xchg
imul
rclb
mov
jne
out
cmp
pop
loope
fisttpll
ljmp
pop
aaa
sub
int3
dec
and
xchg
jle
les
pop
ret
sub
cmpsb
push
jae
inc
shll
test
pop
dec
pop
xchg
lds
loop
or
add
push
lods
pushf
and
fidivrs
mov
psubsw
inc
frstor
cmp
out
mov
mov
frstor
movsl
shll
mov
xchg
mov
xor
or
lods
in
dec
add
xor
icebp
mov
xor
pushf
stc
push
out
jp
mov
jl
gs
and
mov
in
pusha
jle
push
test
popa
pushf
and
jbe
lods
jl
sbb
out
xchg
add
mov
int3
int
mov
jo
add
mov
or
pop
fistpll
roll
inc
ror
and
mov
mov
or
fstpl
insb
mov
cltd
or
fs
cmp
int3
sub
stos
push
sbb
mov
xor
aam
add
jge
pop
pushf
mov
mov
cld
push
or
jmp
testl
inc
cli
cmp
addb
xor
cltd
jle
xor
adc
mov
jbe
push
or
inc
push
shlb
xor
lcall
adc
fsts
push
jle
sbb
adc
sbb
adc
out
in
cltd
pop
in
inc
jmp
mov
das
and
fldl
mov
outsl
mov
mov
pop
leave
mov
int3
sbb
std
int3
sub
mov
enter
adc
mov
xor
loopne
cld
jne
out
mov
popa
popa
jns
pop
pop
adc
addr16
das
lret
insb
ds
mov
cmp
mov
mov
mov
inc
pusha
mov
pop
sahf
mov
aad
mov
mov
shll
mov
mov
pop
cltd
add
je
loope
or
fcoml
add
mov
jne
test
or
mov
xchg
jecxz
dec
out
xor
das
xchg
add
xchg
mov
imul
jmp
mov
imul
addl
lods
mov
rol
in
or
xchg
mov
add
inc
cmp
sti
imul
popl
sub
or
ja
pushf
roll
push
pop
stc
mov
imul
sahf
sub
pushl
mov
mov
lods
pop
xor
mov
idiv
xchg
mov
pop
adc
call
gs
lods
fidivrs
nop
jno
test
jns
ror
jle
enter
cmp
repnz
jle
pop
aaa
lahf
xor
jecxz
xchg
test
pop
pop
in
dec
pushf
xlat
data16
lcall
daa
addr16
jnp
insb
inc
into
hlt
mov
mov
jecxz
hlt
pop
fs
dec
movsb
jl
xorl
pop
pop
scas
xchg
inc
sahf
dec
shrl
movsb
ja
mov
adc
inc
pop
popa
xor
insb
mov
adc
pop
xlat
jecxz
dec
pop
rcr
and
imul
inc
and
mov
push
adc
sbb
loopne
cmp
inc
popf
cli
shlb
repz
pop
cli
pop
jae
push
js
outsl
or
add
pop
outsb
xor
jge
cmp
or
lcall
filds
add
sbb
inc
fadds
daa
dec
xchg
push
xor
jb
ja
movsb
jne
out
mov
mov
stc
mov
mov
pop
xchg
mov
sub
cmp
adc
dec
mov
iret
xchg
inc
push
pop
pop
ljmp
adc
push
rcr
outsb
adc
lods
mov
pop
sbb
jnp
xor
pop
mov
or
es
repz
bound
movsb
out
mov
imul
mov
or
jle
mov
xchg
sbb
aam
cmp
push
push
fs
outsb
inc
and
rorl
push
sub
mov
and
insl
sbb
js
ret
mov
dec
or
into
and
dec
mov
mov
filds
popa
jbe
clc
fcomi
xlat
dec
jmp
and
outsb
jmp
lods
shl
mov
fs
cmpsb
jg
cmpsb
cltd
dec
cmp
and
ljmp
imul
outsb
or
add
and
pop
push
rorl
mov
outsb
sub
fcmovu
test
jg
cmp
pop
leave
jo
adc
flds
test
testb
push
lcall
push
dec
cmc
test
dec
arpl
mov
aaa
xor
data16
sbb
mov
push
popa
add
xor
pop
mov
out
push
push
push
push
jo
insb
pop
int
lds
clc
outsl
pop
out
xchg
mov
out
popf
add
repz
xchg
cmp
lcall
cmpsl
es
adc
fdivr
xchg
add
pop
jae,pn
add
dec
iret
mov
add
fmuls
cmp
jl
out
inc
inc
sub
pop
and
dec
push
imul
jns
cs
arpl
dec
out
mov
cmp
jg
sar
sub
and
jae
xor
add
shrb
test
in
icebp
arpl
mov
or
or
xchg
push
ljmp
scas
xchg
xchg
add
add
mov
and
mov
ffreep
adcb
xorb
jbe
mov
fiadds
mov
pusha
ret
lock
into
add
mov
icebp
lods
sub
std
push
jg
cmp
scas
cmp
sub
insb
xchg
popf
sbb
or
xor
fwait
jnp
imul
or
je
xchg
sbb
int3
lods
pop
and
and
in
sub
push
adc
aaa
mov
sub
call
mov
xor
dec
nop
jno
pushf
jp
ss
add
addr16
imul
sub
call
adc
clc
mov
adc
mov
les
jbe
push
add
jp
movl
jp
lock
inc
jecxz
xor
mov
mulb
shlb
mov
lea
das
sbb
cs
adc
ds
mov
mov
rol
leave
testl
pop
adc
test
fdivrl
insb
pop
inc
sub
sub
rolb
inc
in
sbb
fdivrp
std
xchg
lcall
mov
xchg
and
ss
in
add
mov
inc
es
jge
shlb
xchg
shl
or
xchg
pop
mov
sbb
sbb
xor
pop
sbb
or
mov
jns
xchg
rcl
das
popa
pusha
xor
add
push
jno
add
in
xlat
xor
xor
sub
pop
lods
aam
stos
cmp
jae
gs
ja
mov
sbb
and
arpl
inc
dec
or
outsl
pop
jmp
shlb
sbb
mov
jne
in
push
les
push
inc
jp
add
pop
js
cmpsb
mov
inc
mov
sti
sub
push
ficoml
and
mov
cs
outsl
xchg
xor
out
mov
xchg
jnp
mov
popf
shll
push
add
dec
loope
daa
lods
push
into
xor
pop
bound
pop
jns
mov
stos
push
xchg
mov
pop
gs
lds
cmp
mov
insb
push
sub
mov
jo
rorb
insl
fsubp
bnd
jl
cmpsb
xchg
pop
jmp
test
sbb
cmp
cmp
fwait
xorb
ror
pop
or
push
adc
scas
jmp
xlat
rcl
addr16
mov
pop
fbld
outsb
cs
or
es
aad
test
push
cld
dec
or
cli
inc
popf
aad
mov
stos
mov
mov
in
mov
jae
xchg
xchg
ja
fcompl
leave
cmpsb
or
dec
insb
int3
cld
xchg
xor
cmp
xor
xchg
add
clc
sub
jae
data16
mov
lahf
aaa
mov
shll
or
add
mov
xor
lret
fcoml
xor
pop
loopne
sub
mov
sbb
mov
xchg
pop
out
push
push
pushf
push
jo
and
cmp
ret
xchg
and
cld
mov
dec
xchg
js
dec
adc
push
cmpsl
pop
out
pop
adc
push
cltd
sbb
xor
ret
pushf
mov
cmp
dec
push
mov
mov
mov
or
mov
rcrl
add
xor
xchg
outsb
push
icebp
out
fldt
ja
cmc
lods
sub
add
pop
icebp
sbb
loope
xchg
and
or
test
push
insb
gs
lret
fstps
cltd
shl
int
fistl
fs
stos
or
xchg
icebp
cmpsl
mov
lea
cmp
dec
enter
cwtl
and
imul
or
or
out
clc
jae
std
pop
mov
mov
lods
push
ror
sub
xchg
test
jl
ljmp
mov
stc
jcxz
dec
data16
stos
add
sub
jb
sbb
fimuls
mov
mov
push
adc
xchg
test
or
pop
push
les
ss
test
xchg
jmp
incl
loop,pt
inc
enter
lret
stc
cld
aam
das
daa
push
inc
inc
jle
cld
push
push
mov
jmp
pop
popa
dec
out
jo
or
out
jp
fistps
xchg
outsl
lcall
pop
fldl
inc
test
cmc
iret
andb
lods
inc
pusha
mov
push
sar
sub
stos
stc
in
out
lcall
mov
idivb
outsb
movsl
cmpsb
aad
fistl
insl
cmp
leave
cmp
shl
arpl
gs
push
pop
push
cmp
lods
ficomps
movsl
aas
sub
jo
sti
icebp
fidivrl
std
jge
mov
mov
rcrb
mov
jns
xchg
push
dec
mov
sub
dec
sbb
push
dec
shll
or
sub
hlt
lahf
mov
jge
sbb
or
and
popa
lahf
jg
pop
test
insb
mov
and
sub
enter
fs
or
mull
cwtl
cmpsb
xlat
insb
cld
mov
jo
bound
jno
cmp
and
in
mov
les
sbb
jmp
mov
xor
jle
and
jo
lcall
xchg
mov
mov
pop
cmp
and
xlat
push
push
aam
push
pusha
mov
add
mov
dec
fs
or
add
jg
xchg
orl
fmull
jb
cmpsl
adc
sbb
repz
inc
cmpsb
mov
mov
add
push
fsub
lods
in
addb
jmp
jmp
xlat
in
or
jg
pusha
call
lods
bound
mov
add
popa
xchg
in
cs
add
addr16
dec
test
or
sbb
stos
clc
ret
adc
sbb
sbb
jmp
es
sub
jmp
add
iret
adc
mov
xchg
call
adc
push
and
data16
push
dec
xchg
fisttpll
lret
cmp
fwait
gs
in
cmp
scas
gs
pop
xor
fadds
sbb
mov
and
push
add
das
out
scas
lahf
jb
sbb
pusha
jg
fidivl
rcrl
jno
push
xchg
adc
enter
mov
mov
xorl
mov
mov
dec
fistl
fcompl
sbb
mov
scas
out
mov
fistpll
jl
lds
addr16
jo
or
and
rcrl
push
pushf
popf
adc
repnz
in
add
lcall
aad
test
sbb
sbb
ficompl
cli
mov
inc
fs
push
outsl
mov
scas
rorb
mov
add
test
jnp
dec
add
sub
pop
insb
pop
test
xor
fdivp
sub
daa
es
icebp
stc
mull
jmp
cmpb
xchg
inc
nop
xor
adc
aas
outsl
mov
xor
jo
bound
in
pushw
rcll
inc
pusha
adc
jecxz
popf
mov
add
add
mov
push
call
mov
mov
fdivrl
cmpsl
mov
xchg
fcmovu
frstor
jp
inc
fsubrs
and
jge
xor
cltd
jnp
add
cmpsb
bound
insb
cmc
imul
and
decl
subb
cli
xchg
addr16
dec
les
pushf
jnp
ja
xchg
adc
aaa
push
adc
pop
clc
loope
shll
inc
add
enter
mov
fcoms
dec
jl
xchg
icebp
repz
xor
jp
lds
adcl
je
mov
pop
ljmp
push
idivb
notb
mov
repz
jo
insl
xlat
push
in
scas
movsl
scas
or
lea
cmp
outsb
jns
hlt
xor
mov
mov
mov
mov
and
adcb
stos
cs
arpl
shrb
mov
test
idiv
movsb
pop
insl
nop
adc
fimuls
mov
push
or
or
call
int
pop
cltd
ss
mov
dec
jl
jnp
fcompl
cmpsb
bound
push
das
call
pop
sub
or
les
std
jle
ljmp
shlb
or
lret
jmp
test
push
shll
popa
mov
and
movsl
dec
xor
lods
pusha
mov
inc
xor
imulb
push
adc
adc
ja
fisttpll
mov
ret
push
xchg
xor
cmpsb
pushf
dec
scas
xor
lret
push
inc
lea
jl
fadds
add
mov
cmpsb
add
mov
push
aas
add
out
test
mov
rcrb
and
or
inc
out
stos
push
sti
adc
in
loopne
push
pop
jmp
mov
xor
cmpsl
xor
and
push
or
loope
push
mov
pushf
and
jbe
push
sub
cmp
sbb
dec
stos
dec
sbb
sub
loopne
cmp
sub
cmpl
mov
arpl
cld
jb
xlat
mov
ja
decl
mov
and
fadds
hlt
push
int
out
leave
push
lahf
push
mov
fstl
test
push
outsb
xor
jg
adc
jge
jg
daa
insl
sbb
icebp
insl
in
sub
and
pop
jp
mov
scas
es
sub
push
and
cmc
xchg
lods
lahf
add
mov
sub
jg
fiaddl
xchg
lods
fwait
mov
loop
dec
sahf
add
adc
dec
add
xor
jp
out
lods
and
cmp
or
jp
push
xor
repnz
add
shrb
rcrl
scas
out
das
xchg
mov
pop
cmc
xchg
aad
jmp
repnz
cmc
pop
cmp
mov
and
pop
push
and
jge
lods
mov
inc
mov
or
inc
xor
add
dec
repz
mov
cmp
mov
cltd
and
cmp
int3
clc
nop
aam
xor
loop
cmc
lock
mov
mov
cs
in
jl
sub
mov
popa
into
pusha
xchg
test
les
sub
jns
push
out
mov
mov
es
ret
test
ret
mov
fdivrl
adc
sub
add
pop
dec
dec
fadds
fimuls
jmp
fisubrl
or
addr16
dec
fistpl
imul
pop
scas
push
testb
inc
xchg
jb
and
xlat
add
jg
cmp
push
sahf
pop
pusha
push
fs
or
std
pusha
es
jne
in
xchg
fcmovnb
sbb
loop
movsl
dec
mov
and
xchg
sub
popa
ss
and
mov
cld
dec
jo
mov
leave
fldl
dec
add
cwtl
in
xor
push
add
adc
cmpsb
mov
or
xor
jns
pop
ret
sub
js
out
sbb
out
sbbw
push
mov
andb
jecxz
call
int3
das
jle
scas
pop
xor
push
push
pop
orl
fcomps
dec
sub
or
sub
test
in
add
stos
fildll
mov
jns
add
inc
into
mov
mov
xchg
pusha
ljmp
pop
jl
add
push
addb
hlt
repz
divl
xchg
outsl
lahf
xchg
pop
cmp
jno
mov
ja
aad
fwait
and
sahf
push
sbb
push
mov
xor
lods
negl
pushf
sbb
ja
cmp
into
push
testb
inc
pop
lcall
idiv
pcmpgtd
pop
and
mov
push
aad
mov
fldt
jb
push
cmp
and
inc
fiaddl
lcall
dec
dec
or
mov
sub
outsl
mov
inc
pop
stos
pop
and
fiadds
fnsave
icebp
notb
jecxz
fwait
mov
mov
fistl
in
rclb
push
xchg
in
in
sbb
cmp
xchg
mov
mov
cmp
dec
icebp
jns
cmp
mov
out
or
push
icebp
and
repnz
nop
pop
sbb
push
or
outsb
dec
jbe
test
jb
scas
mov
dec
loope
das
lret
mov
lods
hlt
rcl
cmp
int3
shlb
push
fidivs
rclb
add
add
pminub
push
mov
mov
jae
ret
fwait
push
in
ljmp
add
push
mov
aam
jge
sub
aad
lret
fcoml
dec
xchg
fdivr
cmpb
xlat
daa
insb
mov
sbb
imul
cmova
int3
jae
pop
jle
leave
xchg
les
icebp
adc
mov
sub
dec
inc
mov
cs
xor
fbld
dec
lahf
pop
push
cmp
jp
sti
dec
jmp
pushf
pop
add
xchg
call
icebp
mov
test
mov
mov
pop
mov
pop
imul
cs
clc
arpl
test
sbb
sub
scas
xor
iret
mov
int3
add
test
scas
xchg
out
ljmp
inc
cli
mov
inc
and
rcll
enter
lret
stc
loopne
jp
sbb
cmp
pop
mov
leave
idivb
add
xchg
popa
data16
sbb
jmp
loopne
or
insb
adc
sub
ret
icebp
xchg
sbb
ss
out
enter
jmp
dec
xchg
inc
push
jae
jle
cwtl
pop
xchg
mov
mov
mov
jo
imul
cwtl
pop
pusha
add
jmp
lcall
add
shlb
aas
or
add
xorl
cld
add
ja
adc
xor
adc
sub
mov
ljmp
fdivs
jmp
pop
inc
pushf
xor
cmpsb
jno
jge
ljmp
mov
clc
in
sub
xchg
cmpsl
xchg
cmp
mov
jmp
popa
stc
mov
add
repnz
xchg
jbe
xchg
and
sub
or
jge
pop
pop
bound
mov
bound
cmp
daa
movsb
and
mov
outsl
inc
sub
xchg
xchg
test
pop
mov
sub
loopne
adc
push
icebp
cmp
repnz
lcall
jbe
mov
ret
lahf
inc
add
stos
xlat
repnz
in
and
xchg
jb
push
push
ret
mov
dec
mov
adc
sub
cmp
popa
fnsave
cli
sbb
addl
and
clc
inc
loop
mov
out
call
loope
push
jae
icebp
mov
push
test
imul
insb
lods
ja
gs
lods
pop
mov
adc
out
inc
and
xor
fistps
mov
les
pushf
mov
xchg
js
call
pushf
inc
pop
sub
push
dec
cmp
lret
cltd
shl
adc
jmp
inc
dec
push
stc
pop
jl
sbb
push
dec
xchg
push
fcmovnu
mov
pop
xlat
lds
sub
les
fstl
pop
cmpsl
sbb
lds
add
cmp
pop
repz
in
ret
sub
cmp
xor
push
nop
lock
jb
or
adc
fs
es
add
popf
je
and
lods
fdivrs
je,pn
mov
imul
popa
out
lds
dec
pushf
loopne
in
repnz
imul
add
push
nop
sub
outsb
xlat
cmp
testl
adc
push
cmp
fildl
and
inc
lret
sub
iret
inc
dec
ljmp
xchg
jo
cmp
dec
call
mov
mov
repnz
mov
jge
mov
mov
popf
push
inc
mov
pop
add
orl
rorl
in
outsl
mov
out
aas
adc
push
cld
fsubrl
adcb
sti
sub
into
pop
add
or
push
scas
sub
mov
xor
push
mov
call
enter
nop
or
and
bound
mov
push
movsl
in
jg
mov
adcl
mov
mov
push
pop
xchg
test
sarb
enter
loope
testb
jnp
aad
xchg
daa
dec
js
pushf
sahf
fstpt
stos
hlt
mov
inc
test
sub
dec
mov
pop
xor
ret
rorb
scas
adc
das
fmul
mov
popa
cs
mov
jnp
into
push
and
cwtl
add
cltd
mov
popf
jo
and
adc
mov
xor
adc
cltd
movsl
pop
xchg
and
mov
in
mov
jp
jge
shrb
ljmp
daa
arpl
rorb
iret
jb
xchg
xor
cld
sbb
cmp
jne
xor
sub
cmp
mov
xchg
ja
cmp
sub
stos
rcll
loop
pop
cmpsl
push
mov
je
arpl
enter
mov
xor
std
scas
iret
push
imul
xor
aam
mov
jmp
mov
std
jl
cmpsl
sbb
xchg
xchg
shrl
cmp
ss
push
movsl
jbe
or
mov
enter
mov
pop
test
or
imul
push
lea
mov
mov
icebp
inc
imul
je
mov
inc
jp
sahf
es
mov
rclb
xlat
addr16
in
and
add
aaa
dec
pop
lods
hlt
imul
loope
cmp
inc
in
idivb
xchg
or
cmp
enter
inc
sbb
test
xchg
outsl
fistl
xor
add
sub
mov
mov
movl
loop
cltd
aas
push
pop
lret
out
mov
outsb
push
cmp
and
pop
push
movsb
xchg
cli
xchg
inc
inc
mov
test
int
in
push
insl
xchg
sub
dec
and
push
cld
movsl
pushf
cmpsl
fwait
stos
lret
sub
or
jbe
test
clc
sti
bound
loop
es
cmpsb
adc
iret
mov
aad
and
cltd
push
xor
sub
in
mov
and
inc
mov
inc
xlat
or
jae
inc
scas
add
jae
xchg
imul
pop
sbb
in
push
or
js
xchg
ds
inc
data16
push
xchg
ljmp
sub
int
aad
jo
sub
pop
pop
push
dec
lret
imul
sbb
push
or
inc
push
das
pop
or
int
cmp
mov
emms
mov
jg
loopne
fimull
repnz
cmp
mov
lods
out
push
enter
testb
cmp
push
mov
inc
outsl
rol
jno
cmp
imul
xchg
clc
inc
mov
std
add
orps
aas
jno
in
sub
push
inc
popf
andl
jge
cmp
aad
daa
mov
pop
dec
mov
pushf
outsb
dec
jnp
mov
outsb
addr16
and
adc
popf
cmpl
ja
icebp
je
dec
test
dec
ret
mov
loopne
add
inc
dec
pop
ja
fists
pop
xchg
xor
mov
dec
lret
shl
and
pop
outsb
scas
aaa
out
push
cltd
std
xchg
rorb
outsl
mov
xchg
insb
lahf
add
stc
adc
shll
dec
jns
rorl
shlb
pop
pinsrw
cmpb
enter
xchg
push
add
push
fdivs
xor
pop
bound
adc
sbb
scas
mov
adc
int
mov
sub
bound
clc
pusha
pop
push
pop
push
scas
movsb
and
xor
stos
mov
bound
dec
inc
outsl
cmp
pop
jmp
push
push
jns
inc
xlat
mov
sarl
jecxz
mov
fwait
add
or
lret
jnp
jg
out
arpl
popf
adc
and
lcall
inc
jg
ret
dec
bound
push
push
ret
push
xor
pop
cmp
fsubs
add
cli
mov
in
cmp
xchg
add
pop
mov
outsb
rcrl
xor
push
ret
mov
sti
cmpsl
or
push
sbb
lret
adcl
inc
stc
sarl
jmp
imul
fidivl
mov
mov
mov
enter
xlat
add
xlat
negl
rolb
pop
sbb
add
outsb
lds
subb
mov
push
inc
gs
xlat
xchg
adc
lods
test
arpl
xchg
push
mov
cltd
mov
dec
out
dec
loop
adc
mov
jmp
out
fs
mov
xor
lock
lahf
xlat
lods
std
pop
in
xlat
xor
sbb
cmp
jns
pop
fistps
mov
adc
jg
popa
sahf
sub
les
stc
adc
mov
int
or
pcmpgtb
imul
jmp
ficomps
and
push
mov
pop
int
jns
pusha
shrb
and
dec
and
imul
push
movsb
cli
rorb
jle
ss
cmp
mov
and
or
mov
add
lret
add
fistpll
jb
int3
dec
inc
jge
dec
push
in
dec
push
aad
and
imul
push
push
repz
fs
mov
pop
adc
and
cmpsl
lahf
mov
push
xchg
lcall
das
js
sub
xchg
adc
cmp
jmp
arpl
mov
push
mov
adc
jge
push
or
cmp
ret
fldlg2
xacquire
xor
scas
repnz
sbb
pop
mov
or
sbb
popf
mov
cmpsl
inc
loopne
test
ljmp
push
scas
lahf
mov
out
aad
adc
cs
pop
jmp
das
push
xchg
mov
xchg
int3
push
adc
mov
fadds
cmp
cmpsb
cmpsb
adc
aam
jae
push
and
int
xor
sub
or
add
int
mov
test
gs
push
out
pop
sti
imul
xchg
js
mov
cwtl
adc
adc
mov
loop
and
lahf
daa
aad
push
sub
or
addb
frstor
push
push
pushl
aad
data16
js
mov
mov
cmp
pop
lods
adc
sub
pop
andb
bswap
and
in
pusha
js
add
movl
and
push
out
stc
out
cmp
mov
mov
cltd
call
mov
movsl
and
lock
stos
stos
stc
movsl
cmc
sub
jl
add
mov
dec
frstor
pop
shlb
out
ret
inc
outsb
adc
and
dec
and
popa
xchg
in
add
lea
push
repz
inc
inc
aas
scas
movsl
sub
adc
shrb
sub
dec
sub
lret
dec
pop
xchg
fstpt
add
dec
jo
arpl
jmp
pop
mov
mov
ret
and
sbb
test
xchg
loope
add
inc
xor
cli
int3
ficompl
mov
cmc
popa
lea
cmp
jne
jecxz
aas
adc
clc
pop
scas
adc
push
icebp
sbbl
jb
repnz
mov
nop
jl
fldenv
sbb
xchg
mov
stos
jge
push
leave
mov
mov
imull
jae
scas
sub
xor
rcll
push
scas
adc
into
repnz
add
xor
lods
sub
add
adc
loope
subb
xchg
test
mov
mov
jg
mov
rcr
nop
popa
js
xchg
add
xchg
xor
dec
inc
lret
and
inc
xor
loope
ret
jnp
or
fmull
ret
es
lods
mov
pushf
adc
fdivrl
cmc
imul
mov
int
mov
popf
nop
pop
ret
loop
inc
adc
popf
nop
pop
or
mov
sub
cs
ljmp
cmpsb
nop
push
jnp
and
or
push
lcall
push
xor
or
dec
ficoml
xchg
xchg
repnz
loope
loop
clc
in
lret
or
or
and
cmp
or
xor
out
adc
sarl
fdivs
test
andb
mov
test
xchg
lds
mov
add
insb
or
or
pop
and
fsts
jp
push
scas
addr16
pop
in
mov
xlat
popf
mov
enter
arpl
mov
sbb
lret
mov
sbb
mov
xchg
add
inc
out
test
sarb
fstpt
xchg
add
sarb
ss
sub
ficompl
rorl
addr16
cmpsl
pop
aad
inc
sub
clc
push
lcall
add
lock
std
int3
ret
pop
mov
ljmp
outsb
les
lahf
xlat
jno
xor
pop
inc
jnp
jo
filds
bound
cmpsb
or
hlt
leave
push
sub
movsb
xor
mov
ret
arpl
cmp
in
xor
sub
xor
sub
cmpsb
xor
movsl
or
xor
int
cmpsb
into
ljmp
push
push
jae
repz
push
lahf
mov
addl
mov
out
stos
push
popa
ret
cmp
mov
shr
jle
imul
or
test
xlat
and
sub
pop
and
ja
mov
push
sbb
inc
push
or
mov
jecxz
pop
test
aaa
adc
into
movlps
fiaddl
and
cmp
push
fs
ljmp
shl
mov
jne
lret
sbbb
leave
mov
xchg
cmp
cmpsb
lret
shl
gs
outsb
daa
xchg
jae
call
push
cmp
pop
add
repz
jbe
inc
lahf
pop
cli
pop
hlt
iret
sub
adc
jg
pusha
negl
ror
outsl
xlat
cmp
or
mov
sbb
adc
adc
rcr
sbb
nop
sub
cmp
arpl
rcrb
xchg
adc
jmp
insb
cltd
dec
movsl
loope
fwait
lret
dec
push
pusha
dec
fiadds
push
add
or
loop
sahf
test
mov
or
lods
inc
pop
filds
push
xlat
jns
mov
aaa
or
dec
adc
xor
inc
push
outsb
outsl
fwait
sarl
aam
add
stc
adcb
push
pushf
adc
add
dec
adc
pop
jnp
dec
inc
adc
dec
es
jp
push
lods
in
or
jge
pop
les
xchg
adc
jle
subps
loopne
and
lods
arpl
pop
lcall
dec
cs
push
loope
stos
cs
dec
mov
sar
xlat
arpl
xchg
or
cs
push
nopl
decl
push
sub
xor
repnz
test
addr16
nop
xchg
out
mov
mov
leave
pop
js
lods
out
cmp
inc
xchg
das
jle
mov
test
add
testl
sbb
cld
lea
insl
lods
and
pop
test
and
roll
ja
or
call
das
mov
mov
imul
mov
jbe
push
jle
xor
push
mov
pop
hlt
in
pop
sub
std
mov
rcrl
pop
dec
and
dec
mov
xor
cmp
xchg
mov
mov
iret
dec
add
push
stc
xor
rcll
pop
jbe
adc
ss
out
dec
ret
insl
clc
pop
ljmp
jbe
test
int
cmp
test
xchg
jo,pt
add
jbe
cli
jae
adc
cmpsb
ja
mov
pop
arpl
in
mov
push
jns
lods
adc
ljmp
push
adc
add
xor
lcall
sbb
sbb
jecxz
pop
and
outsb
pop
dec
xor
and
xor
ret
add
es
and
roll
adc
imul
xor
xor
xchg
ret
je
popf
xchg
ljmp
lock
int3
movsb
add
inc
aad
ret
jmp
add
out
xchg
mov
lods
inc
add
aad
icebp
outsb
repz
ret
jg
mov
mov
daa
add
divl
and
sub
cmpsb
pop
fisubl
or
jle
data16
cmpsb
jg
adc
mov
xor
enter
test
and
je
call
pop
add
pop
and
repnz
ljmp
es
push
imul
mov
lds
shll
jp
imul
inc
stc
add
push
pop
push
cmc
push
mov
adc
fimull
addl
ljmp
or
push
sub
ds
cwtl
lahf
dec
sbb
cmp
imul
xchg
sti
push
inc
mov
test
mov
das
pop
mov
cmp
push
dec
fistps
push
lret
xor
cmp
cmp
or
and
insb
pop
dec
in
push
cmp
add
lahf
repnz
imul
and
inc
loop
dec
mov
and
sub
insl
inc
int
rclb
jb
mov
lcall
in
icebp
lahf
cmpsl
xlat
lcall
ljmp
jns
stc
loope
xor
inc
mov
pop
sbb
int
gs
pop
cmpsb
movl
mov
mov
cmc
mov
push
fs
ret
add
push
mov
pop
outsb
aas
loope
inc
lahf
fmulp
cld
lods
mov
lds
jno
mov
repnz
sbb
mov
xchg
push
and
das
stos
les
mov
and
dec
mov
adc
fsubs
add
sarl
cs
adc
push
dec
scas
or
stos
dec
xor
cltd
mov
adcb
dec
cmpb
add
inc
add
js
out
mov
mov
dec
dec
and
xchg
lret
pop
mov
insb
pop
daa
nop
xor
pop
test
mov
enter
pop
lds
dec
pop
es
dec
xlat
jns
inc
push
lds
push
stos
fisttpll
test
shll
mov
adc
loope
or
or
push
and
cmp
fs
sbb
nop
orb
mov
push
pop
jl
sahf
jne
les
pop
sahf
lahf
push
std
data16
adc
xchg
add
mov
sub
xor
push
sbb
mov
xchg
cmp
jg
pop
daa
mov
push
pusha
add
add
xchg
je
jae
es
shll
adc
shll
in
addr16
sub
push
insb
inc
js
cmp
adc
in
push
gs
mov
jg
daa
sub
adc
cmpsl
jbe
cld
test
cmp
mov
jp
mov
dec
outsb
popa
add
mov
mov
mov
add
inc
push
test
in
shl
sbb
ljmp
mov
pop
or
or
mov
pusha
mov
pop
jb
out
test
dec
gs
xlat
lds
divb
dec
loope
sti
pop
jbe
mov
sahf
push
add
or
es
dec
jnp
and
jge
sarl
inc
out
xchg
adc
insb
sub
outsl
sub
loope
repnz
je
hlt
pop
into
and
cltd
sbb
iret
add
fcmovnb
in
stos
movsb
xchg
stc
mov
daa
aaa
outsl
cmpsb
imul
outsb
scas
test
out
cmc
jns
sub
rclb
cmp
pop
mov
imul
or
adc
in
mov
jae
mov
aad
xchg
mov
stos
adc
xchg
jb
and
mov
lods
xor
push
or
lds
xor
add
cmp
mov
add
xchg
add
push
fsubrs
jmp
popf
or
fwait
push
call
push
mov
mov
mov
imulb
nop
adc
lds
and
mov
inc
es
lods
xlat
dec
cmp
ret
loopne
sbb
pop
cli
dec
dec
sub
ret
ret
addr16
mulb
repz
push
dec
scas
or
sbb
cltd
movsb
sbb
mov
repz
and
je
repz
inc
rorl
pop
jecxz
inc
popa
in
sbb
pop
out
cwtl
lds
mov
js
subb
movsb
mov
pop
xlat
sbb
mov
xor
es
negb
inc
pop
scas
mov
inc
add
xchg
xlat
mov
es
js
xchg
jne
decl
sti
push
jbe
adcb
adc
add
aas
dec
in
cmpl
rclb
cmp
cmp
add
or
div
jnp
addl
lahf
sub
jne
jne
loopne
dec
sub
push
cld
xlat
int
or
insb
cmp
roll
push
or
pop
lret
test
mov
ds
xchg
fmulp
jnp
jl
xchg
jp
cld
mov
in
loop
popa
add
enter
dec
pop
callw
arpl
push
inc
xchg
inc
jecxz
inc
flds
xor
adc
into
cld
lods
push
aam
insb
jno
pop
addl
int3
push
loope
mov
push
xchg
sbb
enter
lret
xchg
cli
cmp
pusha
insb
xchg
imul
clc
add
in
div
inc
inc
mov
pop
lea
push
push
push
push
cmp
pop
fistpll
sub
test
mov
mov
jecxz
sbb
mov
das
push
sbb
js
jge
aaa
imul
jle
jns
fs
sbb
pop
inc
pop
in
adc
clc
jb
movsl
mov
inc
push
sarb
xor
mov
adc
fstp
shll
loope
ja
arpl
mov
stos
rol
ds
mov
test
aas
jl
inc
rclb
mov
scas
add
adc
xor
loop
insl
mov
sbb
test
sbb
hlt
in
scas
pop
jecxz
cmp
das
popl
arpl
sbb
js
out
push
mov
mov
std
push
pop
in
xchg
fwait
repnz
pop
jle
adc
adc
sub
in
pop
cwtl
add
mov
les
xor
xchg
pop
pop
fidivl
decb
ljmp
and
mov
dec
push
dec
add
xor
pop
add
mov
mov
repnz
or
xchg
jge
inc
sti
sub
pop
mov
xlat
sub
mov
push
jno
xchg
mov
xchg
push
into
cmp
push
int3
imul
test
adc
jg
sub
out
in
push
leave
popa
rolb
xchg
mov
inc
and
xorl
xchg
or
testl
data16
xchg
jnp
mov
inc
mov
sarl
rclb
addb
jno
sbb
std
mov
ds
ret
outsb
outsl
jl
xchg
rorb
jb
sub
mov
mov
pusha
cmp
orl
sub
movsb
adc
rol
xchg
out
mov
faddl
lcall
lea
push
cltd
scas
test
mov
jl
stos
fiadds
jl
jle
or
xchg
fadds
mov
das
loopne
enter
sub
xor
call
lcall
jbe
or
mov
jmp
push
ror
loop
call
sub
clc
xchg
lret
or
stos
int
pop
jg
mov
xchg
sub
adc
sbb
outsb
cmp
ror
shrb
es
mov
in
mov
les
fldl
push
test
mov
jle
es
cmc
gs
or
push
jo
divl
aad
cmp
inc
adc
pop
or
mov
imul
push
jbe
xchg
mov
fstps
lahf
ret
xor
cwtl
dec
data16
jge
mov
outsb
pop
push
pop
loope
adc
sbb
inc
fistps
sahf
lods
jp
inc
sub
inc
mov
or
add
pop
mov
mov
dec
add
pop
insb
ret
xor
push
pusha
dec
cmpsl
cmpsb
insb
cld
stos
imul
push
or
push
push
ja
divb
xlat
js
mov
mov
scas
lods
xchg
adc
xor
xor
sub
or
std
movsb
fisubrs
fs
loop
sub
push
nop
mov
leave
aad
adc
mov
push
and
mov
sahf
jne
clc
lcall
push
pop
rcrl
or
insb
vmovd
mov
scas
jg
push
dec
inc
mov
cmp
jmp
pop
mov
addr16
jnp
fwait
xchg
push
inc
pop
dec
lahf
lret
ss
leave
loop
mov
cltd
test
lahf
out
stos
mov
jbe
lds
and
xchg
fiadds
add
loopne
fdivl
dec
mov
push
mov
adc
fadd
pop
data16
dec
icebp
mull
lret
jle
sbb
lcall
test
dec
jbe
outsl
inc
std
jae
ja
lahf
sti
fsub
adc
mov
clc
mov
out
pop
testl
popf
fdivs
xlat
jns
stc
mov
fdivl
xchg
shlb
cltd
cmc
xor
xchg
sub
or
mov
dec
mov
sbb
ret
xor
hlt
je
andb
jnp
mov
movl
lock
sub
pushf
aam
out
mov
hlt
cmp
sbb
mov
arpl
pusha
enter
push
stc
ljmp
adc
xchg
pop
cs
mov
xchg
lods
cmc
push
arpl
mov
out
lds
cmp
js
outsb
fsubrl
add
pop
or
sub
adc
movsb
cltd
sbb
sub
mov
dec
mov
dec
adc
test
fdivl
imul
repnz
in
nop
xor
mov
icebp
push
dec
mov
addb
hlt
test
or
pop
iret
dec
pop
cltd
push
sbb
fstpt
inc
stos
adcb
data16
mov
pop
ret
pop
int3
add
and
push
jne
in
inc
pop
push
std
cmc
mov
lret
pop
sub
add
shr
gs
ljmp
pop
mov
enter
stc
jle
andl
pop
dec
lods
into
jge
stos
jnp
not
daa
int3
jle
sbb
xchg
dec
inc
es
lock
jns
push
lods
pop
adc
lods
or
movsl
roll
int3
push
mov
mov
hlt
mov
inc
int3
and
lods
sub
outsl
bnd
ficomps
bound
sar
inc
rcl
cltd
mov
gs
aad
bound
sbb
xor
dec
jbe
xchg
add
fwait
sub
mov
outsb
pop
xchg
cmpsb
inc
mov
mov
test
dec
xor
adc
sbb
and
dec
mov
sbb
nop
fs
dec
inc
hlt
jo
add
jg
sbb
pushl
dec
test
pop
adc
popf
ljmp
rol
in
loopne
adc
xlat
lahf
adc
jp
and
xor
loop
aam
inc
sub
and
int
jecxz
push
sbb
add
mov
lock
sbb
ror
inc
sbb
and
in
push
popa
xor
outsb
rolb
push
call
inc
int
rcr
clc
mov
mov
pop
cmp
mov
push
mov
outsl
jge
pop
xor
jo
ret
mov
mov
repnz
shll
fwait
pop
neg
in
ja
aam
loop
in
and
jmp
dec
outsb
and
pop
mov
inc
pop
std
mov
adc
mov
cs
rcr
call
les
sahf
idiv
lods
xchg
dec
movl
sub
mov
lret
jle
in
rorb
mov
xchg
mov
and
sub
movsb
adc
insb
push
pop
pop
xor
pop
push
xchg
push
jae
push
mov
xor
add
bound
popl
sbb
cs
cmp
les
stos
adc
ret
xor
jb
pop
ljmp
cmp
ljmp
sar
xchg
aad
sub
cwtl
inc
or
xchg
out
adc
xor
addl
or
xor
lock
push
ror
push
mov
in
ja
cld
test
arpl
sbb
and
sbb
add
imul
cltd
xchg
in
mov
or
or
sbb
push
cmpsb
jecxz
mov
pop
popf
adc
push
sbb
jle
mov
std
or
sub
mov
popf
lods
clc
sub
testl
push
add
int
addr16
lret
in
xchg
rolb
and
scas
and
mov
cmp
in
test
aad
jb
lcall
or
ret
loopne
sbb
out
std
jmp
xchg
shr
or
ror
lock
fs
out
movb
enter
xchg
les
lahf
movsb
push
and
ja
lret
inc
fsubrs
imul
aaa
cmp
ljmp
cmp
cltd
in
adc
inc
sbb
sbb
inc
cmp
lods
xchg
jmp
and
and
cmp
mov
lods
sub
push
fldcw
ljmp
out
stc
fs
cltd
lds
movsl
arpl
adc
in
add
mov
clc
jne
jmp
fbld
xchg
and
mov
adc
repnz
ltr
jecxz
inc
out
sub
pop
or
mov
cs
rolb
orb
push
int
les
popa
rorl
and
arpl
idivl
repnz
pop
xchg
or
dec
cmpsb
mov
inc
mov
push
sti
jmp
and
and
push
cmp
xchg
add
scas
in
or
mov
sub
sub
push
gs
or
ss
cmp
mov
jge
add
cmp
movl
xor
xchg
dec
ret
jns
out
scas
adc
pop
sahf
sub
lea
xchg
cli
icebp
mov
daa
cmp
daa
xchg
leave
jg
and
mov
test
jnp
dec
xor
lock
fistps
addb
jle
rorl
loop
popa
lds
inc
dec
rol
div
addr16
fistpll
ss
push
test
xor
stc
sub
fisubrs
fcomi
fsubrp
arpl
dec
sti
orl
test
lret
ja
cli
fs
mov
inc
sarl
stos
divb
sbb
lock
sub
fs
jne
push
lods
lret
out
fs
xchg
xor
mov
movsl
ds
pop
pop
shrb
mov
jmp
adc
adc
jle
mov
icebp
mov
or
jns
andl
sbb
pop
inc
cmc
int3
dec
notl
mov
adc
xchg
pop
inc
nop
cmpsl
dec
xlat
movsl
cli
cmp
in
mov
ret
lcall
mov
cmpsl
scas
repnz
sbb
ja
pop
ss
lods
pop
dec
fs
mov
push
push
repz
out
lcall
mov
sbb
repz
xchg
movsb
pop
mov
aad
scas
mov
dec
ljmp
jne
ja
out
gs
cmp
and
or
xchg
fistps
icebp
repnz
lds
sub
push
das
mov
xchg
scas
stos
and
nop
clc
cmc
repnz
push
lahf
pop
lds
cmp
dec
in
ljmp
sub
xlat
cmp
stos
lods
fwait
xor
cld
orl
clc
data16
cwtl
pop
sahf
cmpsb
adcl
bound
daa
aam
ljmp
hlt
and
xchg
sti
mov
int
adc
fidivs
outsl
adc
cmp
mov
fsubl
sarb
in
xchg
gs
pusha
lret
rcrl
xor
mov
pop
mov
out
popf
inc
jecxz
add
ss
pushf
mov
cmpsl
adcb
insb
inc
xor
or
mov
mov
add
cmpsl
mov
xchg
dec
xchg
adc
dec
mov
pop
ds
mov
push
inc
xchg
mov
mov
dec
mov
ss
sbb
pop
xlat
mov
xlat
mov
xor
ret
les
dec
inc
jnp
mov
test
pushf
notl
and
adc
jmp
push
cmpsb
xlat
adc
adc
mov
rcll
jno
gs
sub
mov
popa
cmp
dec
popa
dec
sbb
test
mov
cli
push
cmp
push
nop
jbe
sbbl
push
add
push
push
xchg
lods
fadd
popf
scas
or
aas
push
xchg
addr16
lds
stos
pop
mov
aaa
lock
pop
ret
sbbl
inc
aas
xchg
inc
mov
jae
xchg
lods
sub
lret
loope
and
iret
pop
sbb
sahf
inc
aad
les
inc
enter
push
adc
in
xchg
push
push
popf
add
inc
dec
add
aaa
mov
rorl
mov
aad
xchg
add
in
insl
push
int3
ljmp
sbbl
mov
nop
mov
dec
jbe
and
push
adc
out
adc
mov
int3
stc
adc
mov
clc
in
les
add
and
bound
and
mov
fprem1
pop
cmpsb
jle
dec
mov
or
or
scas
dec
jne
lea
andl
jl
push
jecxz
xchg
addl
ds
stc
ljmp
push
mov
cltd
aad
inc
fcmovnbe
jnp
out
fs
ficomps
jmp
xchg
shll
cmp
jb
lock
mov
pop
fidivrl
cwtl
cmpl
and
fwait
int3
addr16
pop
inc
xor
loop
frstor
test
in
xchg
push
daa
mov
repz
fisubl
mov
sub
rcrl
jb
cmp
mov
rcll
ret
testb
sub
pop
test
adc
jecxz
xor
movsl
mov
jb
mov
or
enter
add
push
and
push
addr16
sar
das
rol
cltd
inc
mov
sbb
cmp
add
push
cmp
clc
fisttpl
stos
test
xchg
ljmp
add
pop
jl
loop
mov
adc
jge
sbb
xor
cmpsl
stos
shlb
push
out
sub
das
sbb
xor
addr16
bound
and
add
divb
mov
sbb
mov
mov
movsb
sahf
push
adc
add
lea
add
push
jo
add
push
imul
dec
out
rolb
mov
jno
jne
stos
jecxz
mov
flds
mov
ds
clc
or
mull
mov
push
out
jb
sbb
lret
test
out
jno
xor
in
mov
je
call
ror
pop
push
int3
sbb
push
pop
jnp
xchg
xor
sub
dec
and
jb
inc
call
inc
lret
sti
iret
cmp
fwait
xor
add
inc
and
int3
orb
shrb
out
std
pop
call
jns
sub
pop
pop
inc
loope
and
jp
inc
loop
mov
sub
sbb
dec
cwtl
mov
mov
xchg
add
cmp
imul
daa
jo
and
fistpl
xchg
xor
mov
hlt
cmc
imull
push
mov
lcall
xor
fadds
jle
out
lods
sub
mov
lods
setnp
add
or
ret
pop
adc
daa
popa
in
pop
cli
and
xchg
mov
xchg
sahf
jnp
mov
enter
sub
lcall
inc
and
push
dec
mov
popf
xchg
ja
jo
scas
mov
jns
popl
loope
shrb
ret
xchg
das
cs
loope
stos
shll
test
sbb
daa
rclb
in
int3
or
or
scas
das
out
frstor
sarb
stc
mov
xchg
cwtl
xlat
mov
sti
loope
sbbl
dec
inc
lret
adc
mov
adc
add
ss
xor
jge
jb
outsb
lock
pop
in
push
pop
testb
jp
sbb
test
aad
in
pop
mov
scas
adc
test
mov
hlt
sbb
jnp
pop
ljmp
shl
xchg
outsl
mov
fwait
and
inc
das
or
aam
test
sub
loop
adc
pop
mov
mov
sarb
jmp
daa
gs
scas
xchg
cmc
jecxz
stos
or
repz
sbb
les
push
xchg
into
and
cs
jl
ja
bound
ja
mov
sub
arpl
das
xor
cmpl
daa
inc
sub
inc
sahf
push
pushf
int
push
sub
fistpll
xchg
push
pop
loop
cmp
test
mov
push
cmp
cwtl
test
and
jp
sub
out
sub
pop
cld
cmp
and
inc
mov
jg
shll
test
lods
arpl
sub
in
sub
jge
pop
add
inc
pop
sti
stos
test
pop
mov
jmp
cmp
jb
dec
test
arpl
out
sub
mov
out
sbb
mov
ror
cmp
rolb
jb
inc
xorl
mov
inc
sbb
enter
inc
inc
xor
adc
enter
sbb
xor
pop
aam
mov
pop
aam
in
rcrl
push
or
jg
jg
xchg
xchg
inc
pcmpeqd
push
jp
iret
mov
lahf
popa
call
xchg
mov
outsb
pop
push
popf
sub
xor
pop
out
pop
bound
insl
and
scas
add
das
and
fmuls
stc
cmc
rcll
fstl
pop
out
add
out
sub
sbb
push
outsb
fxam
mov
mov
popa
popf
pushf
mov
sub
leave
mov
fcom
push
dec
insb
add
call
xor
mov
xchg
ja
in
jae
jecxz
shl
jne
cld
mov
push
jl
ja
out
jb
js
dec
jae
and
jnp
cmpl
stos
fstl
sub
pop
mov
mov
sbb
test
ljmp
jecxz
and
decb
add
mov
or
scas
mov
dec
xchg
bound
mov
jecxz
xor
int3
scas
mov
insb
int
loop
pop
dec
add
sub
add
mov
call
inc
hlt
and
jne
sahf
xor
pushf
jmp
sbb
adc
outsl
les
inc
shrl
test
jge
outsl
xchg
cli
jno
xchg
dec
out
sbb
in
pushl
pop
test
sub
pop
rcll
xor
and
pop
xchg
jp
aam
ss
dec
loope
loopne
in
add
push
popf
lretw
push
xor
popf
out
les
sbb
cmp
pop
subb
out
jl
xchg
pop
ret
call
enter
mov
dec
adc
cmpsb
pusha
in
gs
ja
lds
pop
fidivrs
test
jl
or
cmpsl
stos
mov
addl
sbb
lret
xor
inc
fs
jl
stos
push
mov
pop
cmp
loopne
xchg
into
push
mov
adc
xchg
in
outsb
jb
or
popa
mov
push
insb
js
and
repz
in
and
mov
jno
xchg
fidivs
sti
adc
mov
jae
pop
outsb
mov
push
addr16
cltd
mov
dec
jae
jns
lcall
push
pop
adc
or
neg
jmp
xlat
cmpb
jne
cmp
ret
ljmp
pop
pop
jo
scas
pop
and
in
and
mov
nop
sub
jb
iret
cmp
or
movsb
pop
lret
nop
xchg
add
daa
mov
xchg
loop
lahf
data16
xor
roll
in
sub
in
lret
int3
sub
jae
or
lcall
stos
and
inc
aaa
cmpb
and
lods
add
inc
or
adcl
and
pop
mov
out
scas
lods
jbe
nop
adc
jecxz
cmp
into
cld
int
lret
or
jle
sub
xor
loopne
arpl
jo
adc
sahf
and
insb
add
xchg
sub
and
nop
jno
lea
cmp
inc
repnz
das
sbb
cmpsb
int
pop
cli
stos
inc
sbb
adc
or
arpl
sahf
and
dec
mov
fisttpl
push
push
and
ret
orb
jl
icebp
or
jle
jge
push
mov
sbb
xchg
loopne
into
icebp
mov
std
dec
mov
push
mov
loope
mov
ja
mov
aaa
test
pop
loop
bound
gs
mov
push
test
push
je
mov
mov
arpl
sub
ljmp
dec
cmpl
icebp
aad
push
sub
cltd
push
notb
jae
sbb
xor
out
add
lea
inc
inc
icebp
dec
jb
dec
xchg
lock
out
test
and
pop
inc
sub
jmp
out
adc
cmp
jge
jne
insb
jge
pop
ret
push
in
xchg
mov
movsb
shlb
stos
jo
lahf
jne
and
mov
pop
in
pop
pop
cld
sub
cmp
or
mov
cmpsb
mov
popf
outsb
adc
pop
mulb
or
cmp
shlb
adc
xchg
test
imul
cld
jl
imul
lock
push
mov
add
or
push
mov
jle
rolb
add
add
sbb
mov
hlt
stos
add
pop
lea
and
fs
movsl
adc
loopne
test
iret
scas
pusha
lods
jnp
rcrb
cld
sti
repnz
incl
icebp
push
clc
ret
pop
mov
sahf
in
test
push
sub
movb
movsb
fildll
push
stc
call
push
dec
mov
or
sbb
pop
and
stos
pop
insb
lret
ss
mov
inc
dec
iret
mov
call
jb
dec
rclb
mov
shl
xor
lock
mov
push
mov
jne
repnz
push
pop
dec
jl
xchg
cmp
xlat
add
and
pop
pushf
aam
push
mov
inc
cld
dec
jmp
sub
mov
ljmp
in
push
and
sbb
bound
ja
divb
push
mov
pop
shl
mov
or
hlt
inc
lahf
dec
test
cs
pop
fs
out
fisubrl
or
cmp
xchg
sub
adc
xchg
je
mov
sub
xchg
ds
fldt
aad
clc
pop
xchg
lds
lret
pushf
out
cs
ds
jo
or
addr16
xor
jge
fisubrl
vcvtsd2si
fistl
xor
cmp
mov
dec
scas
dec
lods
popl
pop
loop
jb
aad
and
inc
clc
popa
push
flds
dec
je
xlat
push
add
xchg
or
sbb
pop
call
out
and
stc
fwait
les
dec
aas
gs
lret
pop
fwait
jo
dec
je
cmp
je
add
inc
out
sbb
and
xchg
scas
mov
add
inc
or
test
test
mov
sbbb
push
sbb
out
arpl
sub
sarl
mov
pushw
sbb
and
pushf
aas
xor
adc
xor
dec
repz
sub
dec
outsl
je
movsl
stc
add
xchg
jbe
jg
cmp
ds
cmp
mov
sub
lea
mov
cmc
jg
in
pop
inc
add
lret
add
rcrb
fs
lea
push
aad
or
push
packuswb
ret
imul
and
into
pop
sbb
dec
aam
lods
das
push
idivl
nop
jb
outsb
cmp
testb
and
mov
adc
iret
mov
mov
inc
push
dec
adc
js
call
pop
sbb
stos
addr16
push
imul
test
xor
jle
das
mov
push
sub
push
sbb
js
lock
or
sahf
mov
lahf
pop
fsubs
and
lds
mov
sub
int
sub
jge
pusha
mov
adc
decb
and
clc
ja
into
adc
mov
dec
cmp
data16
cmp
ret
imul
pop
xor
push
adc
jne
xor
jno
dec
outsb
or
or
pop
clc
push
and
call
xor
ds
jmp
imul
sub
cmpsb
cmp
sub
icebp
and
push
mov
push
dec
xchg
mov
test
cmp
pop
loop
out
mov
lret
add
add
dec
mov
shll
sbb
add
je
or
xchg
jo
jmp
pop
fwait
adc
jecxz
lds
jg
es
loopne
push
lds
jne
mov
mov
test
ds
or
movsb
pop
xchg
and
mov
insb
into
xor
test
call
push
mov
sarb
mov
nop
es
or
push
lahf
fsts
nop
mov
add
mov
jle
sahf
push
mov
movsb
mov
cmp
ret
dec
cmc
mov
and
push
xor
cltd
inc
pop
inc
dec
mov
inc
xor
mov
lret
lock
sti
push
push
orb
test
sbb
flds
or
push
ret
fdivrp
push
cwtl
pop
push
pop
pusha
xchg
xor
mov
and
cli
push
iret
xor
cli
out
ljmp
cmp
jne
lahf
call
adc
aad
jecxz
ret
dec
mov
ljmp
xchg
jo
addr16
jmp
cmp
sti
xor
outsl
mov
mov
pop
push
loope
scas
les
dec
xchg
je
int3
or
xchg
insb
scas
fcmovne
out
push
inc
lds
xchg
push
xor
shrb
mov
xor
mov
xor
ret
push
ficomps
xchg
cmpsl
fisttpl
out
sub
jns
mov
outsl
cmpb
or
pop
mov
and
hlt
xchg
jne
cmp
sub
add
mov
or
ss
pop
push
jge
test
rcrl
inc
push
es
push
fcomp
push
in
iret
jo
fwait
xor
cmp
mov
clc
adc
jecxz
nop
and
push
dec
mov
insl
inc
cmp
fstpt
jb
mov
and
and
das
push
jmp
mov
js
pop
fwait
nop
out
fmuls
stos
outsl
lods
xor
push
cmpsb
push
push
cltd
cmp
inc
jg
fucom
mov
ds
je
mov
mov
hlt
dec
jl
push
add
sub
xchg
js
sbb
decl
push
sar
fcmovbe
mov
or
testl
out
dec
mov
hlt
pushf
test
xchg
jne
mov
and
test
pusha
add
test
mov
mov
mov
dec
test
cs
sub
lcall
sbb
leave
fstpl
gs
jnp
push
xchg
xchg
mov
loop
sub
add
fdivs
mov
pop
enter
or
gs
aas
xchg
pop
orb
sarl
imull
rclb
cltd
fnstsw
inc
out
dec
loop
mov
fisttpl
jge
mov
lea
movdqu
pop
mov
mov
fndisi(8087
aaa
xchg
loopne
mov
sub
addr16
jbe
test
mov
cli
cmp
in
mov
sbb
adc
jg
loopne
add
mov
imul
mov
inc
imul
jb
pop
mov
pop
cmp
mov
jne
pop
js
xor
sbb
fisubs
inc
xor
clc
dec
mov
ret
fisttps
ret
mulb
cld
lock
mov
and
push
add
loop
leave
adc
add
das
addr16
push
les
mov
std
pop
ficomps
sbb
push
test
stc
push
ja
loope
mov
insl
adc
adc
mov
sub
add
sub
xor
xchg
mov
sti
add
pop
aaa
pop
ja
iret
popf
xchg
lock
xorl
je
sarl
dec
push
test
inc
cmp
dec
push
dec
dec
inc
lret
in
jmp
outsl
sub
adc
mov
inc
mov
jne
cmp
hlt
das
mov
xchg
and
movsb
ficomps
jecxz
popf
xlat
push
pop
ret
aaa
in
cmc
ds
jecxz
pusha
jo
push
loopne
imul
adc
xchg
outsl
addr16
ljmp
inc
std
pusha
fistpll
xor
jne
lds
cli
adc
test
int3
pop
push
ds
iret
loopne
in
enter
jne
sbb
push
out
xchg
xor
adc
addr16
subl
insb
das
testl
fisttps
frstor
ret
outsb
fs
xor
or
shrb
mov
subb
aad
out
das
xchg
js
cmc
add
lock
cmp
cli
and
bnd
pop
and
and
scas
mov
adc
repz
add
addb
mov
out
lds
pushf
and
fdivrs
popa
outsl
fnstcw
test
sbb
mov
push
jo
and
punpckhbw
inc
stos
ds
jmp
sub
ja
shrb
out
lds
adc
dec
out
dec
lcall
push
lods
xor
mov
xchg
push
and
dec
fisttpl
pop
into
in
ja
cmp
js
jp
jae
mov
in
add
ljmp
cmpsb
push
pusha
sub
mov
adc
stos
ss
insl
xchg
pop
lods
adc
iret
std
popf
sub
sbb
cmp
lods
push
lock
add
js
and
test
loopne
mov
inc
sahf
stos
push
cmp
ret
inc
insb
fisubrs
dec
mov
enter
mov
lock
jne
loope
mov
and
mov
push
and
rcrb
fisttpl
mov
xchg
call
pop
pop
or
movsl
mov
ret
lret
push
loopne
sbb
aam
repnz
orb
jb
imul
out
cs
int3
cmp
and
sahf
pmaddwd
mov
mov
arpl
out
scas
lods
test
cltd
fs
mov
lods
dec
inc
xor
xor
int3
fcoml
stos
mov
ffree
inc
roll
jne
xlat
inc
shll
cmp
subl
xor
add
sahf
fistpl
xchg
xor
push
stos
pop
jne
pop
in
loop
lods
je,pn
cmp
and
push
xchg
aas
ficomps
je
dec
jg
lea
add
pop
pop
xchg
mov
out
adc
sbb
and
das
or
cld
hlt
popa
xor
push
mov
imul
call
adc
les
call
push
mov
test
push
std
push
jns
sbb
rolb
js
pop
dec
xchg
dec
icebp
movsl
lea
dec
xlat
sub
or
stos
mov
dec
xchg
jb
enter
gs
es
loopne
cmp
stos
xchg
push
xchg
lods
fsubrs
and
push
mov
and
or
inc
adcb
xchg
mov
jmp
jne,pt
pop
jne
sub
mov
outsb
sbb
xor
imul
call
dec
dec
mov
sahf
and
mov
ja
mov
jle
fs
pop
xor
dec
adcb
xchg
pop
jae
hlt
jne
sub
and
movsb
sbb
pop
scas
das
push
mov
popa
dec
jns
push
adc
cmp
lret
pusha
icebp
cmp
mov
and
jno
lds
lahf
adcb
cmc
cmpsl
xor
xchg
dec
push
xor
xchg
cmp
fcompl
lahf
adc
in
sub
mov
out
sbb
ret
jge
insl
adc
or
inc
mov
sub
xor
adc
xor
inc
mov
mov
movsl
and
cwtl
rclb
mov
and
push
test
push
add
popw
add
push
cmp
repnz
inc
int
jecxz
out
jp
jl
xor
inc
fcmovbe
sbb
sub
addl
adc
add
push
lret
std
fwait
push
pop
negl
js
idivb
add
dec
lock
jl
xor
pusha
push
stos
push
or
jmp
imul
icebp
pop
sbbl
sbb
dec
jns
repz
popa
fnstcw
pop
push
aam
mov
jecxz
ljmp
mov
jo
loope
ljmp
jmp
cltd
jg
fdivrs
outsl
neg
scas
xchg
xchg
std
lret
inc
fcmovu
mov
push
dec
xchg
pop
das
and
pop
lds
push
repnz
pop
mov
lock
xor
jecxz
xchg
mov
mov
cltd
push
jmp
lods
rolb
jmp
cmp
dec
xchg
pop
cmp
call
bound
mov
lods
int3
push
or
ljmp
xchg
sub
clc
add
decb
mov
sbbb
or
stos
subb
enter
push
xchg
xchg
or
jns
mov
out
cmp
std
mov
dec
test
stc
addr16
mov
inc
ret
xchg
call
leave
aam
stos
sub
cmp
push
pop
in
jns
jnp
aas
imul
test
outsl
jb
ljmp
pusha
mov
std
sub
xchg
xor
push
lds
cs
pop
out
dec
iret
ret
in
shrb
xor
cli
mov
clc
je
adc
in
pop
test
adc
and
cmpsl
push
shlb
push
push
add
push
dec
and
sahf
rorl
xchg
xchg
jl
and
add
adc
mov
push
xchg
push
jecxz
outsl
sbb
push
pop
mov
in
mov
mov
dec
sbb
cmpsl
xchg
and
aas
mov
sbb
or
or
adc
push
push
cmp
pop
inc
popf
gs
xchg
mov
insl
pop
cmp
adc
jb
in
sub
push
push
lretw
adc
mov
adc
push
loope
mulb
loopne
inc
movsl
lock
xchg
sub
imul
push
rcll
jmp
mov
mov
sbb
imul
cmp
push
pop
fldenv
sub
or
test
mov
sbb
pop
dec
jp
push
mulb
pop
shl
jne
xlat
dec
mov
daa
xchg
stc
mov
xchg
xchg
mov
dec
sub
outsb
xor
or
bound
fstl
insl
xor
or
iret
mov
jns
sbb
and
add
adc
push
cltd
fidivrl
call
call
dec
fwait
adc
push
jbe
sub
jne
shrl
push
sti
mov
jne
jg
cli
mov
adc
jnp
loopne
inc
push
sub
or
pop
jb
jmp
aad
mov
inc
xor
xlat
mov
dec
movsb
jno
mov
mov
cwtl
mov
pop
add
ljmp
adc
out
xchg
sub
xor
movsb
mov
xchg
cltd
and
sbb
das
mov
fistps
jo
inc
add
mov
adc
data16
pop
pusha
adc
add
stc
dec
xor
add
cmp
sub
es
sahf
mov
cmp
cmp
xorl
out
jecxz
sub
cwtl
out
sub
pusha
enter
pop
enter
jmp
or
fwait
das
andb
mov
push
lods
adc
lods
jle
outsb
bound
cwtl
mov
fs
xor
cmpsb
cwtl
fwait
aas
rol
sbb
mov
inc
jns
sahf
mov
xor
rcrl
pop
mov
push
or
mov
cmp
lcall
mov
push
in
testl
addr16
jne
shrl
or
jnp
insl
push
mov
es
stc
cmpsl
mov
out
inc
loopne
dec
dec
pop
leave
stos
aam
fwait
jne
lods
out
sub
sub
sub
les
sbb
add
sbb
xlat
les
xchg
dec
and
in
inc
jl
jl
mov
mov
sub
mov
cltd
push
les
clc
mov
push
push
push
push
push
in
mov
add
xchg
cld
dec
test
sbb
repz
scas
out
data16
xor
cld
pop
rcl
xchg
repz
cmp
cmp
mov
je
cmp
cmp
mov
sub
aaa
mov
std
ret
push
imul
sarl
in
dec
das
les
repz
and
nop
xchg
movsl
jbe
lret
loopne
xchg
add
sub
mov
push
outsl
adc
mov
ret
push
cmp
lock
mov
inc
xor
lods
insb
mov
imul
inc
jge
adc
scas
fiaddl
pop
or
pop
outsb
pop
rcl
sbbl
push
adc
pop
test
test
das
lods
aas
xchg
loopne
cli
pop
jne
aam
test
xor
sub
sti
jb
sarl
xlat
cmp
xchg
jb
xchg
imul
sub
and
xchg
mov
fimuls
aas
es
int
or
jmp
add
push
arpl
mov
mov
sbb
push
aam
imul
adc
xor
iret
rcrl
mov
mov
mov
mov
nopl
out
stc
fimuls
xchg
inc
loope
and
sbb
sub
mov
adc
mov
lcall
xor
test
jo
sbb
add
std
mov
mov
xchg
push
icebp
mov
cmpxchg
imul
sbb
pop
sbb
pop
stos
mov
test
xchg
test
push
add
push
fistpll
pusha
inc
ja
loopne
mov
imul
add
mov
add
insb
nop
mov
out
jle
jo
fsts
pop
stos
ja
pop
sbb
xchg
lret
cmp
in
xor
jne
cmpsl
rcrb
ss
dec
push
adc
dec
dec
xchg
in
cltd
aad
loope
pop
test
dec
lahf
add
movsl
leave
and
add
pop
pushf
lods
stc
sub
ret
mov
sbb
jno
dec
test
enter
lret
mov
sub
in
jno
outsb
adc
xchg
ds
cmp
pop
gs
lods
fwait
ljmp
in
or
sbb
pop
es
xor
add
call
push
imul
xchg
push
repnz
dec
mov
test
xor
sarl
jp
cwtl
and
std
push
cmp
xchg
shlb
dec
addl
adc
sbb
arpl
push
push
hlt
mov
cmc
jmp
fs
cwtl
mov
mov
leave
or
mov
aam
pop
arpl
jno
pop
int3
mov
icebp
lods
and
lock
jb
scas
pop
push
adc
gs
dec
aas
scas
push
push
fldl
mov
dec
mov
adc
adc
push
jg
jnp
mov
mov
ret
fists
int3
mov
cmp
aad
push
xor
mov
lahf
dec
dec
inc
push
les
clc
fimull
and
mov
addr16
push
shll
divb
lods
mov
jl
cmpsl
jg
out
insl
sub
pop
xor
dec
aas
mov
mov
test
cwtl
dec
xor
pop
sbb
mov
sbb
xchg
adc
std
popf
into
jne
mov
in
jb
or
aad
popa
stos
hlt
icebp
sbb
and
in
aaa
mov
cmp
or
or
sub
jle
pop
insb
pop
inc
cmp
mov
mov
in
aad
inc
leave
into
not
pushf
repnz
scas
movsl
jg
aaa
test
mov
pusha
push
xchg
jmp
in
in
add
ja
fndisi(8087
add
les
hlt
push
data16
int3
push
adc
cmpsl
stc
jecxz
push
leave
aas
outsl
call
mov
cwtl
pop
sub
cwtl
inc
mov
in
jb
jb
cmp
add
inc
aaa
xchg
mov
test
addb
and
jle
sbb
addr16
cmp
jg
in
jl
inc
mov
adc
pushf
jns
dec
rclb
cltd
pop
insl
shr
inc
jae
scas
dec
mov
adc
ret
addr16
mov
sbb
cmp
pop
mov
push
dec
dec
cmp
ljmp
testb
orb
inc
int
test
outsl
jmp
xlat
stos
in
mov
xor
inc
cltd
jb
shr
ret
js
out
shl
push
repz
call
push
jnp
xchg
xor
jle
je
add
mov
inc
jne
adc
jno
adcb
mov
popf
xchg
jecxz
fmul
int
push
inc
imul
lea
rcll
inc
je
sbb
adc
cmpsl
aaa
mov
mov
int3
lcall
jbe
neg
mov
in
js
mov
pop
cmpsl
xor
ret
fiaddl
pop
cmp
out
dec
mov
lret
loope
rcrl
jbe
dec
arpl
sub
into
push
jecxz
fldt
bound
cmp
dec
and
cmc
inc
and
daa
mov
sub
dec
xchg
in
insl
dec
xchg
pop
sahf
cwtl
test
jno
inc
xor
mov
inc
xchg
pop
cmp
dec
sbb
out
cmp
mov
insl
jp
dec
add
icebp
imul
imul
add
das
dec
subb
push
out
mov
lock
adc
pop
dec
out
xchg
stc
and
adc
movsl
dec
cmp
loopne
into
cmc
ss
push
repnz
out
xchg
mov
movsb
pop
or
mov
fs
cmp
movl
cld
loopne
jge
outsl
sti
aaa
std
flds
or
clc
leave
sub
lods
in
ljmp
sbb
lahf
clc
jnp
and
pop
iret
mov
aad
pop
jno
orb
hlt
shrl
cmpl
imul
mov
xchg
in
sub
cs
lahf
or
mov
repz
mov
jmp
and
roll
sbb
out
int3
mov
push
gs
or
push
mov
mov
in
leave
mov
push
adc
bound
mov
dec
sbbb
popa
mov
mov
repz
pop
inc
pop
push
pop
ss
mov
xor
cmp
inc
sbb
ja
cmpsl
or
call
nop
push
mov
imul
loopne
inc
xchg
mov
sub
fmul
sub
fwait
mov
adc
xchg
sbb
sub
sub
adc
fcoms
lds
adc
out
gs
jbe
ret
ret
ret
add
outsl
insb
jle
out
push
gs
cld
jp
rol
xor
add
mov
addl
in
lahf
push
fsubrs
lea
test
movsl
cmpsb
adc
shlb
push
jo
negb
cli
inc
shl
pusha
pop
lods
icebp
les
dec
pop
call
mov
int3
clc
ljmp
lea
fidivl
popa
mov
jg
faddp
sahf
jo
push
fcmovb
or
outsb
cmp
subl
push
adc
pushf
loope
xor
push
sub
std
aaa
mov
ret
and
inc
lret
arpl
mov
and
mov
mov
and
xor
mov
daa
loopne
inc
inc
idivl
repnz
orb
inc
insl
mov
inc
loop
cmpl
xor
gs
leave
sti
mov
aaa
dec
adc
rcl
sbb
loop
data16
push
rorb
push
inc
dec
insb
jecxz
push
mov
push
insl
pop
or
pop
pop
sahf
stos
lods
pop
cmc
cmc
inc
fsubl
mov
mov
insl
or
test
movsb
shrb
inc
pop
flds
ret
mov
mov
daa
xor
arpl
mov
pop
out
sbb
idivl
mov
push
push
adc
shl
daa
cld
rol
sar
or
jne
daa
or
ret
dec
inc
cs
jp
inc
inc
repz
enter
cmpsl
pop
mov
aas
mov
mov
xor
mov
repz
cmpb
mov
stos
clc
sbb
sarb
clc
jnp
dec
or
incl
mov
int
mov
mov
int
testl
cmp
add
mov
stos
stc
push
leave
push
mov
xchg
sbb
daa
pop
stc
mov
call
inc
jbe
loope
jge
adc
stos
das
pop
fstl
loope
lahf
add
cmp
xchg
mov
add
pop
sub
and
pop
jge
mov
push
adc
lcall
ja
dec
mov
pop
adc
ja
mov
ret
into
push
pop
movsl
adc
pop
outsb
inc
cmp
adc
test
sbb
fldl
cmp
xchg
xchg
dec
stc
fs
imul
addr16
jp
mov
sub
mov
pusha
push
adc
sbb
lret
aad
add
xlat
xor
aam
or
pop
mov
xor
divb
mov
or
jb
jg
dec
sbb
xlat
cmc
dec
shr
and
dec
or
mov
insb
inc
mov
sti
test
sub
sub
pop
inc
adc
or
adc
int
cmp
pop
cld
and
pushf
fwait
xchg
arpl
popa
icebp
mov
jae
ljmp
push
or
lods
pop
bound
gs
jmp
dec
out
stos
cmpl
cmp
pop
cwtl
loopne
fadd
scas
add
dec
and
mov
pop
jb
dec
sub
and
add
xorb
sub
pop
or
repnz
and
jb
ret
ja
push
or
push
mov
sub
dec
fmulp
jo
call
mov
inc
fisubl
cs
mov
jae
xor
sbb
movsb
fwait
cmc
push
inc
imul
das
dec
cltd
fimull
dec
adc
gs
fs
adc
test
inc
adc
cmp
xor
jnp
inc
xchg
cmp
popf
mov
mov
mov
bound
outsb
hlt
and
cmp
pop
or
sarb
xlat
insl
xchg
lea
out
or
push
pop
sbb
sbb
sbb
mov
popf
popf
fdivrl
jo
scas
push
sub
dec
cltd
in
mov
pop
or
movsl
jge
mov
outsb
adc
cmp
or
aaa
in
test
xchg
mov
or
aam
jle
mov
xor
insl
les
daa
add
mov
xor
add
fimuls
and
testb
out
mov
scas
pop
mov
int
or
push
xor
pop
mov
fnstsw
jns
insl
or
jmp
filds
fdivrs
push
scas
stc
mov
lret
lahf
roll
xchg
push
inc
mov
mov
les
and
nop
mov
gs
outsb
dec
stos
aad
xchg
int
imul
pop
jp
cli
addr16
adc
ds
cmp
adc
pop
daa
mov
imul
sbb
xor
pop
mov
and
or
outsl
jge
pusha
add
sbb
sbb
popa
sbb
cmp
inc
cmpb
push
ret
jb
das
mov
movsl
outsb
mov
inc
pop
xchg
int3
imul
idivb
or
mov
mov
idivl
mov
fidivs
loopne
cli
cmp
test
cmp
dec
pop
inc
je
inc
pop
jo
and
enter
cs
sti
sbb
enter
in
cli
mov
lds
pop
or
and
dec
add
cmp
push
pop
pop
mov
aam
mov
insl
addb
add
shlb
test
push
inc
or
or
or
jle
sbb
sbb
test
data16
cmpsl
mov
pop
filds
push
lea
and
std
mov
pop
insb
imul
mov
daa
add
repnz
mov
fistps
xor
pop
ds
xor
push
int
jb
loop
arpl
test
xor
das
shlb
mov
cli
jle
lcall
jns
pop
lock
xchg
mov
lds
std
mov
gs
cwtl
negl
inc
iret
aaa
dec
push
pop
jbe
fwait
mov
arpl
or
push
pop
pop
push
adc
mov
rorl
test
in
arpl
mov
push
mov
fidivrl
pop
jbe
inc
cs
or
dec
aaa
cs
addr16
popa
cld
xchg
in
xchg
add
or
ror
fistpll
aad
xchg
cmpsl
mov
mov
mov
imul
xchg
add
push
daa
lods
rorb
mov
mov
dec
push
ds
mov
aam
mov
shlb
inc
push
mov
sti
jno
jle
jl
xchg
lret
jp
nop
mov
push
loop
mov
ret
es
and
dec
fcomps
or
scas
push
adc
add
jp
testl
push
mov
dec
stos
add
loopne
ficompl
loopne
or
movsb
mov
sbb
mov
out
and
sub
mov
outsb
js
cs
push
insl
cmc
inc
push
mov
ret
aad
pop
pop
dec
arpl
test
aam
dec
fsub
jnp
jbe
and
push
les
and
imul
je
and
push
mov
xchg
or
mov
ds
roll
iret
mov
xor
ds
daa
test
pop
jmp
out
test
negl
test
mov
arpl
push
ljmp
mov
lods
jo
outsl
and
cmpsl
imul
or
cltd
jge
push
pop
xor
add
and
andl
push
daa
data16
stos
mov
push
test
pop
or
xchg
stos
push
or
pop
mov
lods
stc
stc
dec
sub
jb
adc
dec
adc
addr16
rcrl
dec
sbbl
jno
and
out
nop
int3
scas
adc
sub
push
xor
inc
pushf
cs
and
adc
rcll
mov
mov
ds
int
inc
and
fcomp
and
in
jno
cmpsl
push
hlt
lock
xor
sub
mov
int3
mov
cld
jle
sub
mov
out
and
pop
add
fnstsw
dec
mov
add
sbb
dec
sub
mov
xchg
out
mov
pop
xor
stos
mov
mov
dec
mov
fwait
imul
pop
jae
sbb
stc
scas
loop
aam
pop
movsb
adc
mov
test
pop
dec
and
jns
pop
mov
and
jmp
mov
shl
push
xchg
mov
ja
dec
cld
and
mov
shrb
sub
sbb
aam
loopne
cli
mov
icebp
cltd
ret
rorl
lret
std
lea
cli
pop
mov
scas
mov
add
insl
xchg
lock
push
jl
inc
into
ficoml
xchg
push
xchg
jg
lcall
push
es
rclb
xor
ljmp
mov
sets
out
push
mov
lret
push
dec
shll
sub
pushf
cmpsb
jb
sub
out
call
movsb
jge
xchg
cmp
push
mov
lds
cmp
lods
mov
and
lods
push
dec
add
xchg
inc
dec
push
das
add
ret
lahf
mov
sbb
sub
sbb
adc
mov
lret
and
lcall
nop
xchg
scas
shld
pop
das
pop
data16
nop
loopne
lret
test
jl
popa
icebp
sbb
mov
fcomi
push
or
xchg
fnsave
xchg
cmc
adc
jb
lret
push
pop
dec
pop
stos
cvttps2pi
rorb
inc
js
mov
push
divl
dec
loopne
mov
push
fucomi
lcall
pop
lcall
insb
add
pop
mov
cmp
or
dec
push
ljmp
lahf
pusha
scas
sbb
push
insl
adc
pop
lods
mov
cli
mov
in
xchg
pop
xlat
and
or
scas
mov
out
pop
mov
jno
daa
call
mov
mov
xchg
in
inc
mov
in
jnp
movsb
insl
stos
mov
or
pop
sbb
mov
bnd
add
jb
lock
or
cltd
and
mov
jae
lea
cmpsb
pop
inc
jo
fwait
add
insb
push
mov
cmc
leave
push
push
mov
cmp
out
icebp
outsl
rcr
popa
lods
jp
dec
popf
mull
gs
and
subl
dec
pop
jbe
lods
fpatan
stc
enter
inc
loop
push
xchg
fdivr
and
dec
jne
dec
int3
ja
pop
out
pop
mov
mov
arpl
mov
movsl
mov
jl
jg
das
add
jbe
inc
mov
popa
scas
mov
and
aaa
sbb
or
xchg
cmp
repz
test
jo
mov
mov
nop
outsl
std
lods
dec
icebp
xor
jns
dec
mov
dec
xor
cli
pop
inc
adc
jns
push
mov
aas
rclb
adc
adc
les
stos
xor
and
and
sbbl
push
imul
cmp
dec
cmpsb
sbb
es
fisttps
roll
aaa
js
scas
or
sub
aad
test
inc
inc
lods
or
div
jge
loopne
rcrl
int3
adc
test
cmp
adc
clc
pop
sub
mov
je
xor
hlt
lahf
sub
mov
push
ljmp
mov
imul
pusha
inc
test
lret
int
xchg
xchg
jbe
mov
sbb
clc
pop
adc
imul
mov
jae
mov
sbb
sub
ret
mov
outsb
jae
jmp
add
popa
lea
sub
pop
dec
into
xchg
xor
add
insl
int3
orb
cli
sub
or
stos
mov
fcomps
xor
lods
andl
pusha
ljmp
cmp
rclb
int3
jo
xlat
out
mov
lods
inc
aam
and
lods
adc
add
in
pop
sahf
pop
das
adcb
in
int3
popa
add
cli
pop
ret
fs
dec
mov
xlat
popf
inc
adc
mov
scas
addr16
popa
lret
xor
jo
psrld
mov
stc
and
insb
repz
pushf
mov
jbe
xchg
xchg
pop
pop
lahf
jl
push
testl
xlat
fld
test
popf
mov
add
ds
push
jns
shr
std
lsl
nop
imul
lret
cld
cli
movsb
xor
xchg
mov
push
das
into
call
mov
jg
mov
mov
mov
std
test
mov
scas
mov
in
dec
push
lods
cltd
dec
mov
jmp
sub
sub
mov
mov
jae
leave
mov
or
push
sti
xchg
mov
insl
cmp
imul
ljmp
dec
loopne
ficompl
xchg
or
xchg
mov
dec
dec
xor
push
testb
orb
les
in
aad
mov
pop
enter
sub
mov
insb
fsub
jnp
loop
or
nop
fcmovb
mov
iret
mov
mov
test
inc
sahf
cmpsl
js
fisttps
dec
mov
jl
loopne
pop
jle
mov
sbb
movsb
and
add
xor
enter
stc
test
int3
jp
ret
test
aad
sub
or
dec
mov
inc
pop
adc
rcrb
jb
mov
mov
cmp
lods
mov
outsb
out
xchg
cmp
sub
cwtl
inc
mov
pop
push
adc
xchg
pop
dec
push
dec
pushl
adc
mov
ret
jns
dec
mov
jle
pushf
mov
fnstsw
mov
lret
cmp
ja
mov
sbb
dec
cmc
push
ljmp
xchg
js
add
push
push
cld
cmc
push
xor
js
mov
push
imul
add
inc
fbstp
aaa
and
je
lret
insl
cmp
and
outsb
aaa
movsl
fisttps
ret
rorl
mov
lea
adc
or
sarb
leave
leave
ficomps
lds
xor
outsb
scas
shrl
xchg
int
push
mov
jge
xor
mov
shlb
loopne
es
or
mov
mov
cmp
sbb
fcmovnu
gs
hlt
sbb
push
aaa
xchg
out
adc
fwait
or
mov
es
mov
inc
or
adc
addb
mov
and
and
loop
mull
pop
xchg
hlt
aas
mov
and
adc
bound
jne
daa
mov
orb
sub
push
mov
ret
test
pop
xor
inc
jae
pop
int
jbe
add
xchg
cmp
adc
pop
scas
cmp
pop
xchg
sub
inc
jnp
add
mov
test
xchg
icebp
mov
data16
sbbb
or
adc
les
fildll
pop
push
jbe
orl
pop
les
jp
mov
dec
lahf
inc
lahf
hlt
or
cmc
mov
xor
jp
or
orb
jo
pusha
or
loope
bound
jge
psubusw
mov
jcxz
pop
js
aad
cltd
or
cwtl
adc
ret
pop
lds
jecxz
push
ja
cmp
cmp
pop
pop
jb
sbb
xchg
daa
je
jg
into
mov
ss
fwait
test
lock
andb
xor
pop
jbe
mov
int
les
mov
neg
xchg
and
sti
mov
mov
scas
cmp
outsl
push
jecxz
into
add
ljmp
cltd
popf
subb
int
push
in
jmp
inc
jg
sub
movsl
int3
sbb
sbb
movsb
roll
cmp
cmpsb
ret
lret
and
mov
jecxz
mov
and
inc
xor
divl
jns
bound
add
popf
fidivs
cmp
add
xchg
jl
sub
dec
cmp
jp
fdivs
pop
sub
hlt
mov
in
xor
stc
cmpsl
icebp
xchg
xchg
imul
or
xor
cmpb
pushf
loop
push
cld
push
mov
xor
fisttpl
gs
push
inc
cmp
rcrb
sbb
repz
or
test
xchg
xchg
ret
mov
jmp
sub
rorl
ds
xchg
lea
les
leave
rorl
inc
push
in
inc
pop
bswap
push
sbb
cmp
mov
bound
test
mov
mov
lods
mov
or
testb
mov
or
aaa
push
dec
dec
decl
xchg
das
add
mov
mov
xor
cmp
pop
and
cltd
dec
lock
dec
int
cmp
cmc
add
loop
mov
cmpl
inc
imul
movsl
lcall
push
loope
mov
jmp
scas
divb
jp
in
fdivp
jecxz
int
imul
enter
mov
sub
mov
add
das
mov
in
cmpsb
jp
mov
fcoms
stos
cmp
daa
cmpsl
scas
pop
lea
test
sub
cmpsb
test
inc
jg
sub
and
jp
insb
inc
jge
push
xchg
bound
sub
mov
push
push
outsl
retw
xor
cmp
xor
xor
mov
jae
jne
stc
lods
pop
ss
jl
js
mov
cmp
dec
jecxz
sbb
or
xor
xlat
cs
arpl
lock
pop
or
mov
mov
fidivl
cmp
pop
lcall
idiv
adc
je
shlb
jecxz
orb
mov
aaa
pop
add
repnz
inc
and
fs
mov
int
jmp
cld
out
das
sar
into
imul
repnz
lcall
shll
inc
mov
inc
inc
inc
sbb
scas
movsb
aaa
ret
fiadds
cli
xchg
icebp
fadd
out
jbe
xor
je
mov
cmp
dec
addl
push
inc
adc
lea
movsl
test
outsl
mov
bound
leave
sub
fwait
push
add
push
jecxz
push
pop
xchg
xor
call
lret
aam
and
mov
jno
aaa
aas
cmp
adc
push
out
mov
les
outsl
mov
mov
and
mov
cmp
inc
xchg
dec
out
pop
imul
add
sub
or
push
fisttpl
cmp
mov
cmp
mov
ja
je
push
div
cmp
mov
andb
push
mov
lods
loop
push
xor
or
push
adc
push
dec
out
xor
adc
iret
pop
stos
test
jg
int3
adc
stos
sbb
and
jle
cmp
push
insl
lods
rorb
pop
mov
xchg
add
cmp
mov
cld
sub
dec
loop
test
or
xor
pop
arpl
ret
mov
rcl
dec
adc
jmp
flds
xlat
mov
inc
repz
std
mov
repz
inc
adc
shll
shrb
lea
cmp
hlt
adc
mov
je
data16
sti
xlat
pop
aas
sbb
imul
lahf
test
dec
xchg
mov
jne
repnz
sbbb
dec
mov
loop
gs
xchg
mov
mov
push
xchg
adc
mov
js
jge
dec
jns
xchg
and
loopne
ja
xchg
pushf
shl
push
pop
cmp
decb
push
sub
add
ret
cwtd
leave
test
fisubrs
xchg
mov
mov
shrb
lock
cmpsl
aas
in
movsl
sbb
pop
test
jl
push
push
push
add
dec
jb
lods
pop
out
jae
popf
imul
xor
rcll
xor
sbb
dec
clc
mov
add
adc
roll
push
outsb
inc
xchg
int3
mov
in
notl
leave
pop
addb
mov
mov
mov
cmp
dec
rcll
pop
mov
mov
andl
add
in
xchg
rol
lret
or
leave
cltd
stc
mov
cmp
sub
mov
xchg
pop
pop
inc
mov
cmp
and
cwtl
incl
repnz
jns
or
mov
push
dec
jge
dec
cld
and
and
cmpsb
add
cmp
inc
imul
hlt
jle
in
subb
es
push
aam
cli
fcomps
fldt
data16
mov
icebp
xchg
bound
js
add
outsl
push
lahf
xchg
dec
sub
xor
pop
add
out
jb
scas
addr16
or
ret
rcr
imul
push
mov
aaa
rorb
loope
xchg
sarb
stos
mov
loope
int
gs
scas
dec
sub
cmp
icebp
push
and
add
jge
jae
or
adc
in
test
clc
ret
adc
mov
xor
sub
dec
mov
push
sub
push
repnz
dec
ds
mov
add
xchg
adc
xchg
jp
clc
mov
push
cmp
movsl
call
push
int
outsl
xchg
mov
imulb
out
inc
jle
push
cmp
in
mov
mov
ret
into
pop
nop
rolb
jbe
xchg
add
xorb
push
push
sbbl
ljmp
mov
jmp
into
aad
push
mov
ret
xchg
xchg
jmp
dec
ljmp
repnz
fstps
add
sbb
pop
imul
out
push
hlt
ret
xlat
test
je
loopne
dec
mov
sbb
fidivrl
sub
dec
repz
icebp
dec
adc
clts
cmp
aas
ja
jns
lds
jae
insl
xor
test
push
inc
dec
dec
int3
in
dec
dec
stos
add
mov
inc
addr16
push
daa
sub
pop
adc
add
inc
jg
inc
mov
add
mov
pop
mov
fdivs
adc
jnp
cmp
stos
pop
ret
adc
push
data16
lret
data16
sub
aas
jg
adc
loop
rcll
lds
adc
jge
pop
cmpl
mov
aaa
xchg
icebp
bound
out
xchg
test
xor
test
xchg
lcall
and
nop
jno
data16
mov
cmp
adc
mov
cmp
mov
xchg
push
pop
sbb
mov
icebp
xor
xchg
mov
cmp
pop
aas
andps
test
dec
inc
xchg
decb
fldt
mov
int
push
pusha
lahf
mov
xor
loope
out
fdivl
and
pop
or
dec
sahf
arpl
adc
arpl
cli
jg
lock
xchg
mov
repz
fs
push
mov
call
push
in
pop
or
loopne
imul
adc
addb
mov
fstps
iret
std
scas
clc
lret
shll
mov
aam
fdivrs
adc
jnp
fwait
shrl
shlb
hlt
push
and
mov
xor
in
dec
cwtl
inc
aad
mov
and
jl
ds
mov
jbe
bnd
push
xchg
popa
cmp
data16
push
fadds
mov
mov
xor
fwait
je
rcrb
xorl
cmp
xor
stc
cmpsb
shl
sub
icebp
aam
insl
in
or
inc
jp
lret
loope
mov
repnz
or
ret
iret
fcoml
mov
inc
clc
stos
rcl
pusha
inc
out
mov
pop
bound
pop
mov
data16
cmp
rorl
jmp
ss
scas
out
clc
rcr
xor
and
imul
mov
sub
addb
outsl
inc
fsubl
mov
inc
ljmp
mov
cmp
cli
jnp
add
mov
and
out
add
add
push
cmc
cltd
lds
and
shlb
pushf
adc
push
mov
push
jmp
xchg
jge
sbb
or
dec
lahf
and
jae
jg
in
push
push
push
cmp
sub
in
lea
mov
pushf
jg
fsubrl
bound
insl
mov
or
adc
out
fwait
inc
push
notb
sbb
adc
add
rcrl
inc
pop
das
push
jmp
or
fstps
lahf
shrb
or
lret
xor
add
rolb
lcall
push
sarb
loop
ret
test
sbb
shrb
fldcw
xor
or
push
mov
or
sahf
test
mov
and
pop
repz
push
or
mov
mov
mov
leave
repz
inc
shl
movsb
int3
loope
divl
push
fsubs
or
pop
dec
pop
fcoms
mov
les
add
leave
mov
jb
mov
clc
inc
mov
cli
mov
add
jno
inc
xchg
mov
repz
es
pop
jne
mov
mov
fs
call
mov
sub
xorb
mov
cli
outsb
mov
hlt
cmpl
rcll
stc
jp
add
adc
xchg
pop
outsb
in
pop
push
lods
fisubl
insb
mov
jmp
ret
jo
xor
fcom
jmp
add
cmp
lods
iret
js
fists
js
into
or
testl
aam
fisubrl
push
lock
xlat
lock
sbb
adcl
mov
xlat
cmc
mov
sub
lods
clc
mov
and
sub
mov
mov
fidivrs
xchg
adc
sub
push
cmp
jae
icebp
mov
test
lret
add
rclb
test
mov
lods
mov
pop
xor
daa
imulb
or
clc
fstps
into
pop
iret
push
lcall
push
push
or
in
inc
mov
pop
test
stos
push
xchg
popa
gs
inc
jnp
movsl
jb
addr16
add
mov
call
and
daa
test
push
cmp
fwait
movsb
je
xchg
push
cld
ja,pt
sahf
xchg
shll
add
loop
xor
hlt
mov
mov
push
movsb
test
cmpb
xchg
in
or
xor
mov
add
mov
jo
dec
popf
push
das
sub
out
sbb
fidivl
imul
cltd
in
lods
es
fiadds
jge
mov
fimuls
push
mov
sub
push
negb
pop
scas
push
insb
lcall
addr16
orl
iret
fdivr
shll
xor
adc
dec
ljmp
cmpsb
and
cltd
lret
sbb
dec
sub
popa
ret
fldl
vmptrst
out
aad
jecxz
imul
cmpb
sbb
stc
inc
mov
stc
insb
lods
sar
xor
push
cs
pop
ja
jge
pop
std
lods
enter
inc
or
jnp
mov
jge
adc
nop
jecxz
xchg
cmp
push
or
repz
fst
lret
mov
fdivrp
and
in
sbb
ja
mov
push
mov
push
insb
xchg
aaa
sbb
inc
movsl
cmc
jne
lret
inc
ds
les
push
bound
les
sub
jmp
icebp
push
call
adc
int3
or
xor
cmc
sub
xchg
dec
dec
push
inc
jge
xchg
xchg
inc
lahf
inc
ss
dec
push
cmc
cmp
stos
pop
fidivrs
mov
nop
popf
jecxz
movsl
int
cmp
add
dec
add
lret
ja
sub
pop
and
ret
addr16
xor
fisubrs
pop
push
cmp
add
cmp
cwtl
cs
daa
sar
sub
xchg
data16
cs
setns
jmp
bound
dec
in
inc
popa
push
push
lods
les
push
aaa
pushf
push
or
pop
bound
mov
mov
mov
dec
insb
mov
cmpsl
add
mov
lods
or
mov
out
pusha
popf
fidivrs
mov
fwait
inc
push
mov
xor
pushf
cwtl
imul
cmp
out
ficompl
aas
cwtl
or
or
push
push
mov
aam
movsb
xor
or
movsl
das
in
cmp
xchg
lds
xor
mov
lret
xchg
mov
js
sub
int3
adc
into
dec
push
aam
sub
daa
fists
adc
jmp
or
ret
ficompl
or
xchg
ficomps
call
jmp
or
in
or
cmp
movsl
add
xchg
or
jle
in
data16
lea
fs
cs
push
repnz
xlat
lcall
cmp
sub
loop
inc
xchg
pop
mov
sub
mov
dec
add
movsb
cmp
mov
pop
rolb
sbb
fmull
call
sub
scas
roll
ss
xorb
call
jmp
insb
dec
sbb
lock
inc
loope
xor
gs
inc
fs
mov
subl
dec
add
lcall
movl
add
mov
lea
pusha
jne
xchg
ss
mov
dec
out
adc
cmp
movsl
sbb
ja
push
jno
adc
dec
cltd
imul
lahf
inc
mov
pop
shl
sbb
cld
sbb
sarb
sti
in
jbe
adc
xor
dec
xchg
mov
pop
vpsrlw
xor
sub
pop
outsb
nop
je
sti
scas
jecxz
xor
fisubrs
stc
addb
add
inc
xchg
lcall
sbb
enter
roll
sub
pop
movsb
jle
fs
dec
cs
sub
pop
ss
pop
scas
fnstsw
mov
inc
xchg
cwtl
jnp
popf
mov
nop
sub
out
mov
test
xchg
cmp
lods
mov
jnp
jns
push
add
inc
add
nop
into
ds
xlat
scas
pop
pop
or
mov
scas
xlat
bound
fisubs
dec
and
and
push
fsub
imul
test
add
rol
aad
xor
push
push
sub
adc
std
clc
xor
ljmp
mov
enter
iret
sub
or
jne
int
popf
sbbl
sub
aam
push
aas
int
push
xchg
and
je
sub
pop
shl
xchg
mov
mov
pop
xorl
add
cmpsw
and
jb
clc
pop
movsl
loope
sbb
xchg
lcall
pop
mov
cmp
lea
mov
and
jg
adc
sbb
fisubrl
into
xor
jmp
push
lcall
jns
xchg
hlt
insb
das
inc
fisubl
sbb
xchg
xor
push
sahf
push
sbb
push
add
bound
nop
fisubrl
pusha
adc
xor
fildll
sti
aas
sbb
lcall
or
and
test
into
xchg
fidivrl
sub
dec
mov
add
sub
mov
data16
and
hlt
jno
cmpsl
inc
dec
inc
sbb
outsl
mov
ds
add
inc
fdivl
negb
icebp
and
or
lret
add
jle
push
daa
fimuls
push
inc
mov
hlt
xchg
xor
fiadds
insb
sub
xor
xor
mov
xor
movsb
repnz
xchg
mov
or
sbb
or
and
mov
inc
jbe
fmull
leave
rorl
imul
stos
xor
inc
dec
sbb
mov
ret
xor
fisubrl
icebp
out
jae
sbb
mov
xor
inc
mov
cmp
mov
loopne
fldl
mov
xor
aam
fwait
jo
fsubrs
dec
mov
popf
mov
push
cltd
rorb
xor
jg
lock
jo
imul
clc
mov
sti
cmp
lea
mov
mov
enter
bound
xchg
cmpsl
lock
lcall
or
cmpsl
cltd
int3
out
adcb
pop
sbb
ljmp
cmpsb
arpl
xchg
mov
mov
mov
je
sbb
in
call
mov
adc
andl
ret
sub
frstor
mov
stos
in
xor
lret
loop
pop
lret
xor
dec
fwait
dec
xchg
jbe
bsr
cmc
xchg
cmp
stc
jg
inc
pop
fistpll
mov
sub
mov
pushl
lcall
mov
and
mov
lret
inc
fwait
mov
jmp
adc
sbb
xorl
ficomps
jl
aad
and
xchg
data16
sub
and
lds
mov
sbb
cs
xor
out
xor
fisttps
inc
or
dec
cwtl
push
push
inc
sbb
sub
jmp
shrb
pop
fs
lods
decl
int
lahf
pop
push
xchg
add
scas
lret
sub
loope
xchg
push
shrl
xor
outsb
pop
and
pop
shrb
jns
mov
fmull
push
hlt
push
inc
sub
cmp
or
inc
pop
xor
mov
jae
in
xchg
repnz
dec
mov
mov
les
test
sti
push
jmp
out
je
fucomi
inc
lods
pop
fidivrl
addr16
movsb
push
fildl
xchg
and
popf
mov
jecxz
sub
es
pop
leave
sahf
mov
sub
cmp
clc
out
and
xor
divl
jnp
pop
xlat
cmp
lods
jl
dec
sub
pop
movsl
jmp
lock
scas
pop
lea
and
inc
fisubs
or
rcrb
cmp
jo
push
mov
out
stos
das
cmc
sub
in
pop
ret
push
mov
jle
lret
pop
xchg
jp
mov
outsl
shlb
jmp
fildl
test
ss
inc
push
cmp
adc
xor
int
pop
cmp
mov
xor
ret
pop
shrl
jnp
sbb
push
clc
and
sarb
jmp
fisttps
hlt
mov
or
inc
scas
in
mov
jne
sbb
in
xor
arpl
add
jecxz
mov
je
mov
and
repz
insl
xchg
xchg
mov
fwait
lods
mov
idivb
std
cmpsb
xor
jge
sub
test
mov
movsl
mov
cmp
inc
ficoml
mov
push
xchg
gs
adc
fs
sub
aas
aad
xchg
mull
or
jg
out
aas
mov
cmc
loopne
stos
je
clc
pop
nop
add
mov
xchg
fldt
pop
lret
vminps
xchg
sub
sahf
shlb
imul
aad
rcrl
pop
xchg
dec
dec
sub
inc
or
jecxz
dec
shrl
inc
daa
lock
pop
leave
aam
push
pop
mov
fnstenv
jb
pop
bound
cmp
aas
rcr
in
fbstp
push
xor
mov
jb
jno
jb
xor
mov
mov
std
icebp
or
and
sbb
loope
rorb
pop
lds
cmp
test
push
icebp
xor
mov
cmp
adc
cmc
stc
mov
push
js
movsb
pop
adc
andb
push
pop
mov
xor
and
leave
mov
and
mov
jae
addl
xchg
cmpsb
mov
and
or
or
add
fdivp
cld
mov
pop
fmul
nop
sbb
xchg
mov
sbb
int3
adc
jnp
out
fs
sarb
mov
cmpsl
into
jmp
test
out
ljmp
push
add
inc
xor
and
enter
mov
inc
mov
cmp
mov
mov
sar
call
rolb
cwtl
test
mov
imul
xorb
inc
xchg
or
jmp
lods
jbe
lds
imul
icebp
push
iret
popl
adc
pop
xchg
add
pop
xchg
or
xchg
inc
xor
push
mov
nop
les
vmovaps
insl
movsl
mov
mov
lds
in
lods
lret
inc
jbe
or
mov
push
aad
mov
xor
fsubs
xchg
sbb
adc
shrb
in
orl
loopne
inc
popf
stos
inc
jae
push
pop
cs
jg
xchg
ret
nop
aad
loope
icebp
into
cmpsb
add
cmpl
mov
aam
fldcw
lock
incb
lret
jne
or
ds
mov
pop
and
data16
add
loope
and
mov
mov
ljmp
in
xor
xchg
sbb
icebp
lahf
bnd
shll
iret
sbb
jecxz
adc
cmp
xchg
sub
dec
in
push
fldl2t
jp
sahf
icebp
xchg
cmp
in
pop
lods
adc
jle
xchg
leave
repz
mov
xchg
jl
or
mull
nop
ret
push
xor
sbb
cmpsl
cs
dec
sahf
adc
mov
pop
test
mov
fucompp
jmp
sahf
sub
jl
jne
inc
and
cmpsb
dec
push
xor
out
jge
ss
mov
int
inc
cmpsl
or
xchg
cmp
xchg
loopne
xchg
push
adc
cmp
lret
daa
and
mov
shlb
jno
jp
inc
shll
cmp
or
out
pop
adc
mov
xor
and
dec
mov
jb
cmp
or
inc
testb
sub
sar
lcall
mov
xor
mov
xor
cmp
xchg
jg
cld
in
mov
add
adcl
mov
sub
cltd
sarb
xor
dec
cmp
inc
pop
iret
orl
in
lcall
mov
xor
std
jnp
xchg
xchg
sub
mov
pop
mov
sbbl
mov
xor
arpl
sbb
ds
jle
add
loope
push
sub
xchg
adc
push
push
jne
stc
mov
push
lahf
scas
mov
mov
sub
out
lret
mov
mov
adc
int3
popf
xor
jle
sbb
rcrb
and
lret
frstor
iret
leave
leave
jmp
jmp
lods
add
stc
in
jp
jbe
addr16
les
icebp
lods
aad
sbb
adc
mov
add
pushw
bound
lods
sbb
ficoms
mov
jl
iret
pop
sbb
sbb
hlt
pop
xor
negb
jne
js
into
xchg
aas
ret
insb
lahf
mov
cmc
xor
movsl
in
setno
outsb
lret
stc
mov
cmp
jmp
mov
lret
xor
mov
add
sbb
push
hlt
jle
pop
test
ret
sub
cld
or
lock
jp
add
xor
arpl
xchg
lahf
int3
sub
mov
pop
call
jns
jl
sbb
fistpl
jnp
icebp
data16
fdivrl
cmpsb
add
movsb
mov
or
xchg
push
enter
or
jg
or
sbb
dec
call
out
and
cmp
insw
aad
mov
int3
dec
loopne
inc
inc
mov
mov
push
inc
mov
and
sub
pop
cltd
push
jge
or
lahf
pop
add
cmp
enter
mov
sbb
xor
ret
jmp
cmp
or
test
outsb
mov
js
jl
jae
clc
jbe
arpl
insb
cwtl
out
shll
fnstenv
lcall
sub
pop
scas
out
push
scas
mov
and
mov
sub
mov
nop
xlat
xor
fistpl
jo
out
fildll
cmp
cmc
call
lock
repnz
cltd
lret
bound
xchg
enter
decl
mov
cmp
outsb
mov
roll
js
pop
cmp
jnp
shrl
inc
int3
cmp
repz
adc
pushf
cmp
cmp
push
ja
outsb
outsb
jp
and
lcall
test
dec
cmc
ds
jno
inc
bound
sbb
jp
fcoml
pop
sbb
mov
test
insb
scas
mov
test
fisttpll
jb
inc
cld
fsubl
cmp
sub
mov
xor
xchg
repz
jbe
mov
mov
fnstsw
jp
add
loopne
xchg
push
cmpsl
push
mov
ds
fisubs
xchg
cli
inc
jo
hlt
push
inc
sub
push
mov
sub
out
in
add
andb
leave
and
movsb
dec
inc
sub
mov
and
fwait
cmpsl
jmp
or
pop
ss
jg
pushf
xor
cmc
call
pusha
stos
les
dec
into
lds
xchg
mov
imull
rorl
cmpsl
mov
mov
jns
repz
fnstsw
mov
mov
dec
bswap
xchg
es
sub
sbb
cli
add
inc
adcb
or
pop
arpl
sbb
pop
mov
mov
push
jbe
jecxz
inc
pop
std
lcall
pop
dec
sub
inc
jo
int3
testb
popf
cwtl
int3
xor
jnp
loopne
pop
cmp
and
cmp
subb
dec
or
cmpsl
into
dec
lret
mov
cmpsl
aas
adc
fwait
movsl
push
push
or
aaa
inc
push
sbb
cld
lds
insb
lock
test
insb
pushf
or
fimull
mov
insb
push
push
shlb
pop
gs
xchg
fsubl
pushf
lods
pop
stos
cld
inc
sbb
dec
in
xorb
sbb
sbb
mov
movsb
dec
flds
imull
and
int
mov
add
adc
and
mov
test
mov
mov
loope
pop
lea
loope
pop
adc
call
adc
mov
pusha
fs
jno
lods
or
dec
sahf
leave
push
mov
lahf
je
xchg
cmpsb
sbb
push
sub
inc
xor
pop
fidivl
hlt
adc
das
call
xor
push
dec
popa
sbb
or
cltd
orb
lcall
fdivl
jnp
incl
arpl
cmp
or
ds
scas
mov
jmp
jle
push
push
dec
or
std
imulb
xchg
les
data16
add
push
push
icebp
and
repnz
repz
xchg
cs
jb
or
sahf
sub
call
leave
dec
mov
shll
imul
push
pop
pop
or
out
lods
dec
rol
adc
mov
sbb
mov
cmc
mov
push
xchg
pop
ss
pushl
pop
inc
movsb
xchg
aaa
rclb
add
lock
cwtl
push
mov
addb
xchg
sbb
xor
loop
inc
sub
and
cmp
jl
add
aas
and
fsubr
inc
sbbb
adc
scas
mov
cltd
scas
mov
mov
sub
mov
popa
insb
aaa
lcall
fcomps
mov
stos
pop
mov
aas
lds
sbb
sbb
out
cmpb
js
in
inc
cli
test
mov
fildll
xchg
sub
inc
dec
dec
cmpsl
jno
pusha
fstp
pusha
cmp
fwait
add
jnp
mov
sub
add
pop
jae
cmp
add
in
cli
cld
mov
or
pop
stc
addb
mov
push
in
dec
and
cmpsb
push
test
mov
bnd
call
push
sub
fists
push
adc
cmc
jbe
jno
repz
and
jns
imul
xor
cmpsl
jnp
gs
adc
int
and
mov
jne
cmpsl
dec
in
addr16
push
insb
pop
movsl
clc
insl
and
sub
pop
shll
movsl
lods
or
jecxz
cmp
jmp
jl
lahf
dec
insb
xchg
and
and
popf
mov
stc
cmc
jle
mov
inc
push
mov
ret
inc
arpl
mov
es
insl
push
dec
sub
popa
jae
inc
arpl
push
ret
xchg
jmp
dec
movsl
mov
data16
inc
mov
sbb
xor
data16
stc
mov
jo
test
push
sub
call
sbb
mov
cmp
jns
cmp
push
inc
inc
mov
stc
enter
inc
shrb
or
sti
les
pop
sbb
sbb
jmp
sbb
add
hlt
add
fldt
lahf
icebp
stc
outsb
ss
dec
mov
in
imul
data16
cwtl
stos
flds
es
insb
push
je
push
or
or
inc
mov
sub
xchg
push
out
jno
cmp
and
aad
adc
mov
call
add
and
pop
outsl
popa
bound
pop
lret
jge
rcll
add
lret
fnstsw
ljmp
and
jae
add
xchg
or
jo
pusha
push
das
out
in
sbb
mov
imul
inc
mov
or
mov
xchg
cld
mov
je
repnz
and
xor
jbe
mov
mov
movsl
cli
jns
and
inc
rcrb
sub
lahf
ss
mov
mov
add
outsb
shl
shrd
cld
lock
xchg
inc
lret
movsb
xchg
es
mov
sub
push
rcll
add
or
sbb
sbb
sti
out
int3
dec
cmp
and
test
aam
cmp
jl
xchg
push
push
xchg
jb
and
and
cmp
out
bt
dec
push
int
stos
cmp
mov
aaa
into
in
jecxz
sub
hlt
push
test
out
xchg
sub
cmp
jne
xchg
shl
or
arpl
dec
adc
xor
cmpsl
cmp
hlt
sbb
mov
cli
pusha
insl
sbb
pop
mov
adc
xchg
out
jo
cli
xchg
jbe
xchg
xchg
ret
adc
mov
mov
in
push
lea
ss
add
mov
insl
xor
mull
jno
sbb
push
fcoml
imul
adc
xor
sub
inc
and
push
popf
sub
xor
mov
and
and
fs
cmpsb
out
outsb
cld
pop
hlt
and
dec
dec
sarl
jae
xor
xlat
loopne
add
xchg
sub
add
jp
mov
inc
push
std
inc
aad
out
sbbb
cmp
mov
mov
fs
scas
in
jp
js
aaa
and
dec
andb
out
ret
fwait
subb
jne
gs
sub
mov
arpl
cmp
aas
dec
and
mov
mov
aas
popa
enter
lret
add
add
test
lcall
mov
dec
push
bound
cmp
xchg
scas
mov
nop
popa
xor
cli
jae
sbb
int
sbb
add
jno
jae
das
inc
stos
and
icebp
xor
std
xchg
je
iret
ret
test
imul
in
neg
sub
add
test
sub
ss
jg
jg
dec
dec
sbb
fisubrl
jmp
and
xor
icebp
shl
negl
sahf
sbb
mov
imul
gs
cmp
mov
mov
or
popf
out
push
push
lea
sub
ss
shlb
xor
mov
sub
inc
dec
pop
rorb
inc
adc
jmp
mov
pop
mov
and
shl
mov
mov
sbb
xchg
and
mov
rorl
popf
push
mov
ret
cltd
arpl
aam
lock
std
dec
sub
xchg
movl
dec
cmc
mov
mov
lea
adc
fs
or
icebp
hlt
fs
push
sar
in
cwtl
sbb
orl
pop
and
stc
das
mov
pop
lea
les
sahf
inc
pop
pop
pop
mov
pop
stos
mov
pop
and
adc
lcall
out
fwait
jae
jne
fiadds
push
cwtl
cmp
mov
in
mov
mov
clc
mov
mov
inc
mov
push
or
jmp
mov
lea
mull
push
jae
mov
iret
pop
mov
fcom
mov
pushf
iret
outsl
sbbb
lock
cmp
mov
xchg
out
jnp
or
pop
imul
jmp
leave
mov
ljmp
std
mov
fs
sub
shrb
jge
sub
mov
test
cmp
out
pop
rolb
push
cmp
jl
pop
xor
jno
pop
push
mov
xchg
hlt
fst
push
mov
mov
jp
mov
jns
cli
sbb
mov
rcrb
or
cmp
push
fs
pop
and
fs
orl
lcall
xor
mov
add
cld
js
int3
mov
mov
jb,pn
jge
push
mov
and
jl
je
fstpl
and
scas
and
cltd
jno
or
mov
mov
mov
mov
test
sbb
out
leave
repz
stos
es
or
into
movsb
fs
ss
inc
xchg
ss
mov
xchg
cmp
lret
insl
cmp
lret
addr16
xchg
or
ss
or
fdecstp
and
mov
js
add
pop
subb
ljmp
fmuls
xor
in
jb
mov
test
sbb
lock
invd
imul
shrb
pop
movsb
mov
mov
bnd
mov
cld
jp
inc
xchg
jnp
andl
lret
or
lods
sub
out
jmp
montmul
cmpsb
inc
insb
pop
mov
dec
out
fldt
pop
gs
rcrl
push
sbb
sti
mov
lock
pop
mov
popf
outsl
cmp
jae
ja
pop
pop
cli
and
or
add
sbb
push
shrb
fimull
stc
scas
adc
test
xor
mov
adc
das
out
andb
jle
jnp
push
pop
dec
and
jbe
adc
and
inc
sub
mov
sbb
das
ds
push
push
mov
std
je
push
dec
nop
jns
push
clc
xorb
or
dec
push
mov
adc
pop
pop
ret
xlat
lahf
mov
sub
xlat
fwait
mov
daa
cmpsb
lcall
leave
stc
popf
psraw
mov
mov
cmp
push
cmpsb
stos
push
out
iret
insb
cwtl
subl
and
out
fcmovb
or
push
fisubrs
pop
mov
pop
xor
int
pop
mov
jae
jne
pop
pop
scas
aaa
cmp
out
jmp
shl
xlat
in
push
hlt
bound
push
stos
add
cmpsl
xor
jne
daa
std
add
mov
pop
sbb
mov
adc
imul
cmp
xchg
adc
sub
cmp
gs
jl
inc
loope
hlt
dec
int
cmpsl
push
add
mov
cld
ss
add
or
push
pushf
mov
out
ret
jmp
dec
mov
stos
jne
sub
mov
jmp
xor
cmc
stos
push
ja
adc
pushf
xor
cmp
push
mov
xchg
xchg
cs
pop
sbb
and
inc
jle
push
mov
ljmpw
sub
loopnew
push
imul
cmp
and
jmp
sub
jle
push
into
inc
rolb
lret
or
nop
ret
cwtl
fs
fnstenv
stc
adc
dec
cmp
mov
lcall
inc
jle
adc
xchg
leave
aam
mov
add
pop
mov
or
xor
xchg
pop
in
out
mov
in
sub
je
mov
data16
xchg
dec
push
mov
sbb
jge
add
and
ljmp
cmp
sub
nop
ds
dec
dec
cmp
sub
sbb
push
mov
jmp
test
jp
adc
cmpsb
or
cmp
out
pop
push
push
xor
aad
fs
inc
ss
cwtl
fdivs
mov
mov
pop
repz
stc
push
or
adc
ja
and
pop
pop
fwait
dec
insb
or
cld
sbb
shl
out
mov
pop
cli
icebp
mov
je
sub
icebp
jecxz
sub
push
lcall
cs
ret
ret
fdiv
fnstsw
mov
push
pop
push
xor
xor
shl
inc
pop
cmp
insl
push
decl
push
xchg
xor
inc
mov
roll
cmp
xchg
push
pop
mov
xor
or
outsb
jmp
add
cmpb
repnz
mov
pop
dec
psubusw
clc
xor
pop
fisubl
test
fdivs
adc
clc
and
push
jge
hlt
xchg
outsl
push
adc
xchg
cmp
mov
jecxz
sti
fcoms
cmp
push
ret
mov
and
and
arpl
leave
loopne
ret
jl
out
shrl
pop
rcl
cmp
iret
imul
or
add
add
aaa
jg
push
divl
in
nop
ret
jb
jg
pop
xchg
in
movsl
mov
adc
inc
andl
push
arpl
cmp
mov
iret
lcall
jp
sbb
cmp
jmp
outsl
ror
sbb
mov
sti
and
dec
mov
outsb
sbb
in
shll
mov
repnz
xchg
mov
or
mov
pushf
jmp
xchg
movsb
cmc
jae
or
aas
adc
out
xchg
subl
adc
dec
bound
inc
ja
push
xor
mov
outsl
popl
lret
repz
xchg
in
loopne
bound
mov
sub
enter
sub
push
adc
mov
add
lock
or
xchg
push
es
stos
jne
out
nop
ret
push
fwait
test
dec
mov
outsb
inc
add
inc
lea
aaa
cwtl
iret
setge
lret
stc
fcoms
outsb
mov
push
pop
out
dec
repz
add
inc
adc
loop
jmp
add
mov
jmp
mov
outsl
inc
ljmp
shrl
fs
cmc
int
pop
push
sbbl
mov
jp
imul
push
es
and
add
fcmovnbe
and
mov
mov
call
sbb
repnz
xlat
or
adcl
sbb
stc
je
stc
or
cld
inc
inc
int3
out
or
fcompl
aas
xchg
sub
aaa
fisttpl
insl
js
xchg
movsb
pop
pop
xor
mov
popl
mov
in
ret
mov
jo
scas
arpl
inc
jbe
add
ret
adc
mov
ds
jbe
orb
jmp
xor
mov
mov
sbb
xchg
loope
cmp
pop
inc
adc
xchg
dec
cmpsl
addr16
repz
mov
ret
rcrl
cmc
out
outsl
jns
ret
and
xchg
xor
cld
jecxz
mov
addr16
stc
test
cli
jg
fwait
lret
xchg
add
mov
push
jl
mov
sub
add
pop
pop
or
mov
pop
sbb
icebp
xor
ret
adc
mov
or
jg
ror
rcll
lret
pop
das
xor
fs
fcmovb
into
or
xlat
adc
stc
test
or
fwait
pop
sub
ret
cwtl
mov
mov
jne
test
push
mov
jg
lock
mov
clc
xchg
sub
pop
testb
out
nop
arpl
negl
aam
gs
or
mov
repz
push
cmp
movsb
pop
scas
ret
cwtl
popf
aad
cmp
out
add
rcrb
push
mov
cmp
outsl
es
pop
fisubrs
ljmp
addr16
sarl
cmpsb
or
js
or
xor
cld
and
push
jnp
jno
arpl
mov
out
jle
jmp
mov
mov
imul
sahf
pop
shll
out
lods
repnz
pop
fcoms
or
pop
call
daa
mov
sahf
xor
xchg
pop
gs
hlt
dec
aad
mov
pop
add
or
jnp
cmove
jmp
das
add
sbb
adc
mov
push
jbe
scas
mov
lcall
cmp
or
pop
or
cli
ficomps
cmp
push
dec
sub
in
push
lods
cltd
jmp
stos
mov
outsl
psrld
sbb
cmc
lock
stos
adc
in
roll
das
push
mov
mov
lock
pop
fbld
inc
ljmp
dec
xchg
cmp
or
push
fcomps
repz
cmp
sarb
push
add
rcl
insb
mov
inc
jge
in
rcrb
cmp
mov
cmpsl
xor
icebp
sub
aas
cmpsl
cmp
dec
xlat
push
or
add
in
sbb
imul
inc
insb
cmp
in
cmp
mov
xor
out
xchg
and
cli
mov
pop
push
rcr
xor
pop
je
and
xchg
adc
gs
fwait
mov
and
mov
ret
xor
pop
mov
push
sub
and
ljmp
jg
loopne
mov
sbb
sbb
test
out
push
enter
lods
addr16
ds
pop
xor
out
xorl
mov
outsl
cwtl
jns
ljmp
sbbb
imul
mov
dec
test
push
dec
dec
jge
mov
mov
fisttpll
loope
push
mov
jmp
push
xchg
shrl
repnz
push
xor
lods
stos
push
iret
jae
sbb
xchg
repz
and
cmp
mov
xchg
lds
jb
stos
gs
dec
in
pop
push
xchg
jae
dec
push
push
mov
mov
popa
sub
lcall
sarb
pop
ret
jnp
xlat
xchg
stos
inc
subb
faddl
and
cmc
push
inc
dec
sbb
mov
pop
inc
push
out
in
sub
and
dec
push
adc
fistl
nop
mov
mov
mov
movsb
cmc
out
stos
std
jns
es
into
xlat
js
sub
xchg
shlb
sub
push
insb
int
add
mov
mov
pop
mov
pop
clc
int
enter
fsubrl
xchg
mov
movsl
xchg
bound
or
cli
adc
aam
mov
ss
mov
jg
fidivl
sbb
outsl
mov
pusha
xchg
movsl
repnz
xor
xor
repnz
pop
lock
fwait
pop
stc
inc
stos
scas
xchg
sub
int
flds
sbb
cmp
mov
fsubrs
rol
aas
outsb
mov
repz
je
pop
rcll
int
mov
xor
les
jb
fs
in
xchg
cs
mov
pop
fwait
xor
pop
fs
cld
add
pop
push
sbb
push
lods
sar
mov
pop
out
xchg
cmp
jecxz
test
repnz
inc
dec
cmpsl
sub
xchg
jbe
cs
and
pop
ret
fwait
rorb
push
push
adc
fmulp
cmp
cmpsl
jns
mov
fimull
and
loop
jbe
xor
shlb
fimuls
fstpl
enter
dec
out
push
sbb
in
fwait
push
roll
push
hlt
cmpsl
rcr
popf
and
lcall
cmpsl
lret
add
jmp
enter
loope
fs
cltd
stc
dec
orb
or
loopne
popf
lret
xor
sbb
push
pop
negl
fildl
in
pop
and
scas
adc
xchg
jp
push
pushf
mov
cmp
jge
les
lret
sub
roll
mov
push
lret
push
inc
xor
mov
xor
push
jno
or
jp
mov
or
mov
fwait
cmp
sbb
std
or
cld
out
roll
xorl
popa
ds
jns
add
pop
jo
xchg
fcmovb
push
xor
mov
enter
addr16
push
cmp
jo
cmp
xor
and
ss
repz
aam
sub
pop
fisubrs
paddusw
cmp
push
inc
fwait
mov
fistpll
lods
enter
rclb
or
mov
pusha
pop
jl
test
out
pop
out
cmp
rolb
test
cli
inc
fdivs
mov
ljmp
fmull
push
sti
loope
imul
dec
repnz
sub
mov
pop
leave
pop
sbb
adc
je
out
xchg
sbb
fisubrs
sbb
and
out
shrl
xorb
sub
pop
call
dec
stos
mov
push
pop
pop
pop
aam
mov
jg
xchg
bound
mov
push
dec
out
fadd
pushf
ljmp
stos
mov
dec
jb
ret
cmp
push
fistpl
sub
mov
sbb
or
inc
lret
xchg
je
lods
sahf
pop
mov
lods
xchg
arpl
jnp
jnp
mov
aaa
insb
repz
jns
or
scas
mov
dec
or
imull
push
xchg
out
mov
dec
pop
rorl
sub
pop
outsl
push
sub
dec
loopne
sahf
aad
mov
test
xor
addr16
cltd
sbb
add
decl
in
jg
lcall
test
lret
lret
and
cmp
scas
xor
loope
lock
out
mov
or
fsubl
jbe
idivl
in
je
push
xchg
hlt
pmovmskb
ret
div
mov
jo
or
test
push
pop
mull
xor
jne
lods
mov
aas
movsl
pushf
inc
push
push
in
jno
dec
aad
xchg
in
sub
sub
lret
inc
xchg
cmp
leave
xchg
mov
movsb
adc
and
insb
xor
pop
jle
push
sbb
int
adc
mov
stos
mov
fwait
lret
mov
test
jecxz
mov
imul
sub
stc
hlt
fcmovbe
mov
sub
and
jle
outsl
fiaddl
mov
dec
sbb
inc
out
push
fidivrs
cmp
fdivrs
aas
add
pop
clc
lcall
arpl
aas
push
icebp
xor
xlat
imul
lock
aas
dec
mov
mov
mov
fwait
cmp
xchg
cs
dec
leave
mov
ds
pop
fwait
push
imul
pop
inc
pusha
cltd
lods
adc
outsb
ds
loopne
adc
or
mov
in
das
shll
xlat
xchg
fnsave
nop
lods
arpl
or
enter
es
gs
je
dec
popf
xchg
lahf
push
mov
std
dec
daa
fldt
stc
gs
stos
aas
pop
sub
js
dec
loope
outsb
jbe
rorl
add
sarl
or
das
insl
cli
push
loopne
or
addb
adc
push
into
add
add
test
jmp
adc
repz
test
pop
lahf
rorb
mov
loope,pt
cmpsl
pop
and
in
mov
jne
aam
adc
xchg
xor
testb
xchg
push
lods
jle
mov
cmp
int3
aas
pop
jle
sbb
les
jge
push
or
mov
jbe
pushf
int
cld
fwait
out
and
movsl
shrl
xchg
les
aad
cmp
dec
and
adc
add
loopne
sarb
or
sahf
mov
sti
loop
sbb
xchg
leave
lret
stc
jg
inc
sub
fincstp
iret
cmc
callw
mov
adc
enter
or
add
mov
ficoms
mov
or
sbb
and
jnp
movsb
jge
push
mov
or
in
pop
push
dec
sub
aas
movsb
push
pop
cld
js
dec
aad
mov
loopne
movsb
and
leave
nop
int
sahf
test
cltd
jmp
adc
and
aam
pop
push
jg
dec
ret
xchg
add
jno
mov
mov
inc
loope
cmp
ret
stos
jae
xor
loop
pop
shrb
dec
lahf
in
adc
imul
xchg
sbb
inc
and
scas
nop
push
cmp
test
mov
into
imul
and
andl
out
mov
or
sarb
pop
ret
or
inc
loope
leave
mov
popa
mov
test
mov
in
popa
inc
outsb
inc
xchg
sub
subl
jnp
cmc
lds
cli
xchg
adc
leave
movsb
cmp
xor
rcrl
mov
mov
outsb
in
subl
call
cmc
or
xchg
test
jmp
inc
imul
sub
mov
lcall
and
mov
jmp
add
cltd
mov
or
xor
inc
dec
add
sbb
pop
fdivs
clc
xchg
icebp
test
pop
sub
in
gs
jmp
inc
cmp
jnp
inc
in
sbb
xchg
jecxz
nop
mov
mov
mov
adc
imul
lret
mov
mov
lahf
mov
repz
clc
loop
cmpl
mov
mov
adc
jp
cmp
cmp
das
enter
xrelease
popf
or
dec
enter
cmc
cmp
mov
and
add
sbb
mov
pop
sbbb
lods
mov
cmpsl
data16
lea
call
lock
arpl
fcoms
inc
or
lds
sti
les
addr16
andl
add
xchg
sub
add
xor
loop
xchg
xchg
dec
cmp
dec
sbb
bound
test
add
jb
xor
adc
adc
and
aam
or
scas
call
lret
repz
push
mov
sub
push
jge
add
inc
stc
call
leave
xlat
cmpsl
jge
xchg
fnstenv
xor
cmp
outsb
pop
xor
mov
bnd
out
jo
das
cltd
jg
xchg
lret
push
cs
push
ret
adc
push
mov
push
je
gs
iret
jb
fldt
stos
lahf
cwtl
xor
js
adc
pushf
ds
lock
loope
lods
dec
inc
mov
shrl
cmp
lahf
or
cmp
and
xor
inc
cmpsb
das
push
and
test
in
shr
cld
rcrb
cmpb
into
add
mov
pop
inc
aam
dec
insl
pusha
frstor
mov
lds
push
clc
adc
push
stc
sbb
inc
mov
aad
rol
shlb
cmp
orb
mov
add
sub
mov
aas
push
inc
xor
dec
mov
aaa
lods
fsubrs
xor
addr16
fsts
daa
cmp
mov
cli
jp
and
out
push
aad
pop
mov
and
sahf
xchg
pop
push
jo
mov
sub
jb
call
test
pop
fwait
lahf
sub
int3
inc
sahf
jns
jns
imul
xchg
gs
dec
fnstenv
sti
jae
sbb
sti
add
sti
adc
fisttpl
cmp
inc
ret
cli
aaa
sbb
push
jg
movsl
cmpsb
lahf
jae
or
in
jl
or
pusha
push
gs
xchg
lret
orl
pop
xor
aam
jbe
lock
inc
out
movsb
and
ja
mov
jmp
gs
xor
in
insb
fldenv
xchg
icebp
lds
mov
xor
cltd
cmp
ret
sbb
inc
stos
mov
jmp
mov
sbb
xlat
jno
leave
sbb
popa
push
aas
mov
lea
inc
push
hlt
push
aam
shrl
mov
insb
dec
sar
sub
mov
icebp
ja,pn
jbe
mov
and
mov
mov
mov
sbb
dec
pushf
cwtl
in
test
js
xorb
int
jo
dec
inc
test
pop
lret
orl
jge
lcall
sbb
in
adc
jecxz
lods
or
test
call
jmp
movsb
mov
sbb
pop
lods
lret
add
repnz
stos
adc
sbb
push
in
xchg
loope
test
imul
adc
or
add
xchg
push
jo
mov
lret
into
inc
outsl
loope
in
ds
mov
mov
mov
idiv
sbb
movb
cmp
jp
jle
sub
jo
inc
mov
js
rol
movhps
shr
inc
mov
repnz
rcll
cwtl
movsb
lods
inc
inc
adc
xchg
lahf
imul
les
ja
ss
jg
inc
or
fists
test
sub
mov
jnp
daa
and
imul
jmp
mov
adc
iret
jno,pt
mov
mov
orb
mov
jp
add
inc
push
and
push
push
push
cs
aaa
js
jmp
pop
movsl
into
fdivrs
fs
push
add
xor
int3
xchg
push
sbb
loope
pusha
std
fists
das
adc
and
sbb
das
ljmp
dec
pop
jg
mov
inc
popf
push
adc
mov
roll
insb
sub
insl
add
mov
inc
pop
movsb
lds
cmpl
mov
dec
cmp
cwtl
inc
dec
sub
adc
ds
mov
out
mov
out
lods
lods
pop
mov
inc
imul
ret
adc
mov
inc
std
int3
inc
out
cmp
rcrl
push
add
mov
rcl
adc
sub
push
ss
push
into
xor
andb
fcompl
fucom
ret
dec
pop
stc
mov
ror
inc
inc
sub
mov
lret
dec
aas
jne
sbb
mov
push
inc
sbb
cmpsb
rcrl
adcl
and
push
lock
cltd
hlt
inc
aaa
or
pop
push
mov
sbb
das
insb
mov
fwait
or
test
lds
fcompl
and
xchg
xor
pusha
call
push
fadds
push
cmpsb
cld
jo
popa
cmp
lds
jns
popa
in
rcrl
mov
pop
loop
push
mov
fidivs
shrb
scas
in
lock
push
popa
cmp
insl
jne
loope
scas
adc
add
mov
and
dec
xchg
xchg
pop
mov
xchg
aaa
push
cs
sbb
and
sbb
jne
in
jne
and
pop
mov
jle
push
sub
push
ret
aas
lock
popa
jge
add
xchg
push
mov
or
push
cmp
out
inc
fstpl
inc
into
xchg
outsb
push
mov
outsb
in
shll
fsubrs
xchg
add
fsubl
jecxz
mov
pop
inc
dec
pop
sbb
dec
int
xor
lea
addl
sbb
loopne
pop
std
lret
jge
and
mov
fcoml
push
fdivl
pop
adcb
fistpl
ror
pusha
cmpsb
add
sbb
jmp
push
cmpsb
sahf
add
in
cmp
jl
jge
das
mov
push
adcl
sub
add
xchg
add
mov
clc
pusha
inc
cmpxchg
pop
int
xor
lods
and
push
jmp
js
mov
cmpsl
fwait
lret
pop
stos
daa
into
test
pop
cwtl
movhps
outsl
iret
and
aam
ror
jbe
das
sub
popa
pop
inc
std
push
adcb
mov
lahf
into
outsl
mov
sub
jnp
or
pushf
ror
dec
cwtl
or
out
dec
or
adc
push
cmp
scas
dec
sbb
sahf
cmp
std
enter
cmpsl
cmp
loope
ss
test
or
imul
aad
push
push
and
adc
mov
xor
dec
and
pop
push
arpl
movsl
pop
call
leave
pop
loop
and
sti
pop
add
xor
dec
xor
repnz
mov
ret
lds
or
or
push
int
int
scas
jno
out
pusha
adc
jno
sbb
loop
sub
adc
pop
dec
cmpsb
sbb
mov
stc
sub
aas
out
std
lods
call
xor
mov
in
ffreep
mov
sub
sub
push
lock
test
ret
leave
into
fimull
push
jne
xlat
mov
pop
sar
ret
push
notb
ds
cltd
xor
add
inc
das
scas
xor
and
jecxz
and
fwait
gs
roll
push
jge
fidivs
inc
lds
dec
shr
and
inc
dec
mov
out
mov
xor
orb
mov
out
rcr
inc
ss
push
stc
scas
inc
cmp
pop
xor
lea
sarb
push
imul
cwtl
add
mov
lret
push
test
pop
sbb
shll
mov
pop
sub
outsb
dec
mov
repnz
icebp
xor
jmp
stos
inc
pop
mov
pop
add
shlb
js
addl
das
xor
shlb
call
lds
scas
movsl
xchg
insl
pop
cs
jns
mov
push
sub
dec
cmp
pop
icebp
sbb
rcrl
imul
rolb
inc
xor
mov
fs
mov
mov
ja
jmp
xor
or
cmp
pop
jo
lods
leave
cmp
and
adc
push
mov
test
mov
jbe
jno
or
orl
jae
lods
xchg
das
shll
cmp
sbb
xlat
mov
lret
aam
cmpsl
mov
mov
mov
mov
out
and
sahf
clc
mov
pop
push
addr16
imulb
pop
or
jns
jmp
pop
cmp
jge
mov
push
cli
lea
adc
jb
adc
xor
cmpsb
mov
cmp
pop
mov
arpl
push
shll
in
je
fiadds
out
cmp
js
popf
out
imul
jns
pop
ret
sbb
push
cmpsb
addb
inc
repz
cmpl
dec
xor
adc
test
sbb
jbe
xchg
es
xchg
push
inc
cwtl
sbb
push
call
shlb
cmp
jle
sbb
and
or
adc
fimuls
add
cld
sub
inc
test
fs
gs
xor
xor
shrb
repnz
ds
popa
cwtl
fildll
loop
int
jp
lea
jb
stos
sarl
lret
push
mov
test
jne
jecxz
pop
iret
pop
xor
dec
jle
shll
cmp
not
pop
sbbb
ss
int
out
xchg
sbb
test
or
out
fidivs
mov
jo
xor
dec
inc
jo
sbb
jo
fidivrs
push
in
hlt
push
test
outsl
stos
push
mov
sbb
inc
push
not
or
stos
dec
xchg
mov
cltd
dec
mov
mov
dec
shlb
bound
out
cmpsb
lock
pop
repz
jnp
push
inc
cmp
mov
in
lods
es
sbb
pop
mov
mov
sti
bound
sub
shlb
pop
mov
pop
fiaddl
iret
pop
test
mov
mov
sbb
aad
push
adc
push
push
ss
cmc
icebp
add
js
jecxz
xchg
scas
dec
enter
or
push
xor
bound
sbb
scas
jbe
out
cmc
sbb
xchg
loopne
popf
outsb
mov
test
cmp
jns
out
insl
shlb
jo
jne
push
xor
jge
out
mov
leave
iret
int3
inc
imul
loop
test
push
mov
lock
xchg
jbe
lahf
mov
mov
imul
add
js
cmp
cmc
or
jnp
fisttps
and
cmp
fs
jns
popf
shld
repnz
ljmp
pop
mov
fwait
mov
xchg
push
dec
add
daa
mov
add
inc
rclb
xchg
cmp
int
xchg
pusha
jmp
mov
pusha
pop
xchg
pop
xchg
adc
cmp
pop
into
mov
popa
iret
jno
push
cmpb
inc
test
mov
shll
jecxz
mov
sbb
test
test
imul
ds
lock
int
insl
mov
shrb
pop
sub
push
gs
addr16
int3
fisubl
shlb
cmp
loope
cmp
sub
mov
repz
sub
add
data16
mov
iret
xor
cltd
sub
push
cmp
nop
ljmp
xlat
fucomip
jge
outsl
out
shl
and
imul
pop
inc
cmp
icebp
cmp
cmc
insb
sub
or
mov
int
test
cmc
push
leave
std
in
fs
lret
ret
mov
dec
and
ficoms
inc
add
shrb
daa
in
pop
and
add
cmp
jb
xchg
dec
cmp
pusha
mov
sub
cwtl
call
jnp
mov
call
mov
dec
push
mov
mov
sub
out
inc
or
sti
rorb
sbb
lods
and
int3
out
lret
and
jecxz
inc
stc
mov
loop
call
daa
setnp
sub
fadd
test
stc
xor
fxch
or
sahf
pop
add
mov
in
test
pop
andb
mov
loope
iret
pop
pushf
in
testl
loope
xchg
inc
xor
mov
jo
mov
and
adc
daa
jp
insb
leave
inc
cmp
sahf
je
jo
sub
ss
jle
push
xchg
mov
call
jl
dec
xchg
sub
ss
xchg
enter
test
ljmp
sub
mov
lret
fcoml
and
sahf
and
addr16
imull
popa
sbb
add
dec
add
cmp
or
cmp
sbb
sub
insb
push
mov
inc
cmc
xchg
lea
sub
ljmp
adc
sbb
pop
mov
sub
sti
jae
xchg
cmp
and
test
lds
mov
nop
shlb
xor
pop
and
data16
lds
push
jno
xchg
orl
xor
xchg
cmp
int
adc
into
mov
hlt
leave
sbb
inc
mov
loope
test
sub
insb
push
push
mov
scas
das
mov
sti
ljmp
jge
sahf
movsb
mov
lahf
jnp
pop
sub
sti
out
sbb
rcll
ss
inc
pushf
push
mov
out
dec
stc
xorb
lret
xlat
pop
or
cwtl
add
popa
sbb
xor
lcall
rcrb
unpckhps
jno
insb
arpl
test
ds
test
pop
jp
jno
ret
scas
sbb
aad
out
dec
mov
cs
xchg
push
mov
fucomi
out
sbb
inc
adc
push
add
mov
push
shlb
lock
cmp
push
dec
pop
test
hlt
xchg
cmc
lret
adc
lods
sub
out
stc
decb
push
lds
movsb
das
movsl
xchg
outsb
dec
inc
and
lock
repz
pop
mov
adc
sti
mov
mov
sub
and
mov
jno
inc
das
and
pop
sbb
std
push
test
adc
fdivrp
pushf
mov
inc
push
faddl
xor
shlb
shll
les
xchg
cmp
lahf
out
adc
or
or
jmp
mov
mov
lcall
roll
mov
jle
shl
push
push
loope
add
sbb
out
in
arpl
imul
dec
xchg
adc
fcoms
mov
arpl
enter
mov
ret
mov
pop
enter
xchg
das
xchg
in
lret
sbbl
pop
add
pop
push
xchg
fbld
movsl
lret
cmpsl
and
sub
xor
dec
std
cmp
mov
cmp
or
add
outsb
jo
lret
fcmovne
sub
lock
outsl
mov
mov
popf
jge
in
xor
cltd
jb
sahf
add
add
test
shlb
andl
aad
adc
in
sbb
idiv
cmp
xor
lahf
out
cmp
incb
jae
addl
sahf
xchg
popa
in
cwtl
add
mov
je
ror
pop
or
jno
cmpsb
mov
jb
sbb
pop
and
stos
jnp
cmp
aaa
sarl
cmp
divl
push
vshufps
lods
subb
fisttpl
cmpl
int3
add
decl
in
push
mov
mov
inc
or
xchg
jle
xchg
cmp
mov
aas
ret
jne
repnz
movsl
dec
or
add
movsl
clc
inc
or
insl
lret
xor
lea
mov
fimuls
iret
out
xchg
sub
divb
aas
cmp
xchg
movsb
pop
popa
mov
jnp
repnz
add
stos
movsl
aaa
leave
mov
in
sti
ds
rcrb
add
sbb
push
int3
xor
jno
and
pop
mov
nop
ret
push
pop
aam
or
cmp
adc
push
cmpsl
mov
dec
mov
bound
inc
adc
dec
add
je
fs
jp
jge
adc
push
mov
mov
hlt
push
test
cmp
or
dec
out
aaa
inc
mov
or
enter
es
push
adc
mov
mov
jle
xchg
test
lcall
outsl
in
push
scas
inc
rclb
adc
jns
push
arpl
adc
popa
mov
imul
mov
rclb
in
call
add
mov
pop
test
out
sti
shr
aas
xor
stos
xor
outsl
inc
movlps
add
jns
icebp
push
enter
inc
xor
mov
and
repnz
mov
cmpxchg
inc
push
sbb
inc
xchg
pop
push
and
stos
sub
sbb
and
xchg
lcall
adc
test
aad
clc
dec
xchg
or
leave
inc
mov
xchg
cmp
mov
lods
add
sub
aas
pop
imul
adc
aam
adc
or
push
sub
add
scas
push
xor
add
cltd
pusha
adc
jge
roll
jo
cmp
dec
lret
jbe
fcmovnu
jae
js
jae
jp
fistpll
dec
jge
out
fisttpl
adc
test
imull
std
push
pusha
xor
lret
jbe
add
and
into
mov
cld
loope
in
add
leave
jecxz
sahf
decb
mov
xor
xor
jae
mov
lock
repnz
dec
mov
xchg
xchg
sbb
movb
call
lahf
clc
enter
dec
fiadds
aad
mov
add
inc
stos
shlb
imul
data16
pop
mov
out
mov
and
fcoml
mov
lret
cmp
add
pop
pop
add
stos
dec
inc
scas
pop
mov
sbb
iret
or
mov
mov
jno
pop
in
sub
out
jbe
shrb
cltd
mulb
fdivrl
mov
mov
jbe
adc
xchg
ja
cmp
xor
hlt
movsl
in
pusha
mov
push
push
cmp
into
cmp
cmp
ret
movsb
mov
mov
stos
sahf
add
aam
jmp
sub
loope
ss
and
xlat
push
adc
shl
mov
sub
movsl
inc
in
push
rorl
test
loope
mov
and
dec
sbb
out
jg
sub
mov
push
mov
sahf
add
xchg
push
pop
cmpsl
cmp
mov
outsb
mov
adc
aas
mov
pushf
pop
cmp
pop
jno
inc
mov
mov
push
out
lock
sbb
nop
aam
mov
and
es
push
lcall
or
jmp
cli
mov
inc
xor
adc
mov
out
lret
scas
jo
mov
mov
ret
push
lahf
mov
and
xlat
cmovbe
xchg
mov
rcr
push
sbb
and
test
repnz
jae
adc
cmpsb
pop
mov
push
and
ret
movsl
fidivl
js
jo
jle
sub
pop
cmc
cmpsl
xchg
or
mov
cs
repnz
add
movlps
cli
shrl
orl
push
mov
mov
mov
xchg
int3
repnz
or
push
lcall
and
fmull
ret
fs
xorl
jp
test
sahf
int
sbb
or
push
addl
push
push
jo
outsb
les
xor
xchg
pop
xchg
ds
dec
mov
mov
test
lods
ja
cmp
add
mov
sbb
test
sbb
adc
testl
out
lods
xchg
arpl
ds
cmpb
pop
cmpsb
push
mov
mov
dec
lock
adc
clc
adc
mov
aam
js
mov
out
in
iret
js
ss
mov
and
in
pop
les
ljmp
sub
sbb
mov
cmp
and
fisubs
cs
and
adc
sbb
mov
dec
xchg
sbb
ret
push
add
fstl
sub
sbb
sahf
outsl
xor
jl
push
xchg
mov
push
or
shl
popf
mov
subl
imulb
dec
xorb
push
jno
sbb
pop
bound
mov
jge
adc
or
mov
sub
mov
les
dec
insb
cmp
aas
test
scas
adc
xor
shlb
test
pusha
int
sub
sbb
mov
mov
dec
insl
sub
adc
cld
push
jo
iret
ss
leave
out
hlt
data16
push
mov
cmpsb
push
fcoml
push
ljmp
jns
jbe
jae
xor
dec
pop
loopne
xchg
outsl
push
xchg
pop
cli
xor
aad
adc
jo
dec
outsb
lahf
aas
xchg
sbb
xchg
ljmp
aad
jle
mov
mov
movsb
pop
push
xchg
incl
in
cmpsb
ja
add
cmc
call
mov
sbb
scas
xlat
sub
out
inc
fbld
add
mov
push
adc
repnz
mov
add
pop
jl
mov
out
out
xchg
dec
aas
pop
in
cmp
hlt
repnz
jp
sub
pop
xor
jg
lahf
pop
in
arpl
mov
push
jp
mov
mov
mov
fistpll
sti
sbb
into
jge
mov
mov
sub
loop
push
inc
xchg
mov
sub
mov
test
push
scas
adc
or
jl
push
imul
xchg
push
ficomps
ss
lea
cs
iret
mov
jle
dec
jmp
xor
lods
cld
sbb
mov
stos
lret
outsl
mov
sub
sarl
mov
push
pop
sbb
or
jg
imul
sahf
or
sub
sbb
cmp
sbb
lods
add
dec
outsl
adc
or
push
popa
dec
lret
fs
xor
jne
lods
sub
mov
jnp
cmp
sbb
sbb
loope
cmp
std
pushf
cld
and
add
cmp
lds
iret
repnz
xchg
cmpsl
push
and
pop
lret
pop
fsincos
jne
bound
lret
add
out
mov
cwtl
sahf
cmp
lret
xor
call
or
mov
into
outsb
cmp
lock
divb
out
sub
cmpb
pop
add
sub
jno
in
mov
scas
cli
jle
movsb
xchg
cmp
pop
jge
pop
and
pop
scas
and
fdivrs
and
cmpl
fwait
or
je
or
div
add
push
inc
dec
cmp
inc
dec
imulb
int3
jp
rcll
shrb
mov
push
ds
sarl
outsl
jnp,pt
xchg
loope
pop
int3
jb
aad
gs
ja
fistpll
icebp
xchg
cmp
xor
cmp
data16
dec
fidivs
loop
xchg
sbb
nop
sbb
mov
mov
imul
sub
je
add
pop
mov
rclb
fwait
cli
int3
in
mov
push
fnstsw
cmpsb
daa
pop
mov
mov
mov
pop
jmp
mov
leave
add
cwtl
push
gs
mov
xchg
cs
dec
xchg
push
subl
or
outsl
cld
lret
out
lahf
repz
or
dec
shlb
mov
inc
es
gs
mov
fwait
aaa
dec
inc
jbe
cld
ficoml
scas
cmpsl
int
xor
xorl
sbb
push
add
inc
jle
cwtl
add
sbb
sbb
mov
push
or
sbb
sub
repnz
inc
outsb
repz
sub
or
mov
insl
aad
aam
test
shlb
test
mov
adc
into
imul
adc
nop
ret
or
in
movsl
stos
repz
bound
cmp
pushf
and
testl
dec
movsl
xchg
lahf
pop
inc
movsl
jno
addr16
push
xchg
popf
xor
fadds
xchg
enter
xchg
int3
aas
incl
push
lahf
push
bound
aaa
aaa
xchg
and
and
shlb
clc
pop
aaa
sbb
call
add
jp
push
fs
ds
push
jmp
xchg
imul
add
test
andb
jg
or
fsts
sbb
push
mov
lahf
aaa
gs
lret
add
xor
popl
pushf
jne
ds
mov
add
scas
and
ret
push
cmp
add
cwtl
movsb
jns
lahf
ret
test
lcall
scas
jmp
push
dec
add
sbb
inc
inc
mov
fidivs
xor
and
imul
dec
fdivl
in
dec
data16
sub
fists
mov
push
data16
add
push
dec
ds
xchg
pop
xor
cmc
xchg
pusha
pop
sahf
cmpl
or
sub
xchg
mov
push
mov
addr16
inc
jb
std
stos
cltd
clc
sbb
mov
mov
lods
ja
adc
pop
loop
jmp
notb
mov
lret
dec
pusha
jge
inc
fwait
jmp
leave
add
fdivrs
movl
jg
es
pop
gs
test
inc
push
dec
push
js
lea
adc
flds
dec
lret
sub
dec
mov
stc
inc
jecxz
call
inc
mov
inc
std
into
ljmp
les
adc
jo
aam
stos
mov
xlat
mov
lds
inc
jmp
lret
bnd
xchg
ret
pop
mov
or
and
add
sub
fldcw
pusha
mov
lods
pop
lock
xor
inc
push
fcoml
push
loopne
sarb
pushf
mov
addr16
inc
pcmpeqb
cmp
cmp
std
rolb
push
ljmp
pop
and
mov
movsl
or
icebp
inc
jno
push
and
lret
adc
int3
lods
xchg
and
in
movsb
add
enter
outsb
jle
pop
test
jb
inc
sub
sbb
push
les
and
push
roll
pop
add
lret
and
cltd
clc
es
cs
sub
fstpt
xor
xchg
cwtl
popf
mov
cli
mov
sbb
gs
in
jns
xchg
rcr
or
add
addl
xchg
lds
add
jae
dec
mov
jbe
pop
cli
test
hlt
xchg
outsl
sbb
call
dec
push
pop
jne
mov
add
das
inc
push
dec
popf
shr
test
xor
mov
je
push
mov
jnp
je
cmp
jmp
sub
cld
mov
jne
stc
mov
jecxz
xlat
jp
push
cmpsl
out
xchg
rcr
aas
jge
cmp
out
dec
fisubs
push
rcll
cmp
stos
push
cli
ficoms
mov
sub
bnd
push
mov
cmp
add
or
jl
es
fdivs
fnsave
fidivs
shrb
and
and
stos
sti
sbb
jl
xor
mov
dec
jae
xor
mov
pushf
rolb
call
adcl
aam
add
call
lahf
push
scas
sbb
repz
jno
jbe
or
and
mov
cltd
dec
xchg
inc
shll
loopne
fwait
mov
add
ret
js
dec
xor
rcrb
dec
pop
cltd
lcall
into
leave
push
shr
jb
lret
sahf
leave
add
mov
pop
fiaddl
out
adc
mov
je
cld
sbb
sub
fs
add
add
mov
insl
and
jmp
into
cld
cmp
add
xchg
stc
les
dec
ds
popa
je
repnz
inc
jl
cmp
out
cmp
mov
je
imulb
lret
mov
mov
int
sbb
lods
jbe
push
xchg
shlb
fidivrl
mov
mov
fisubrl
adc
mov
inc
mov
pop
jge
sbb
inc
jo
outsb
test
cmp
pop
mov
cmp
xchg
cmc
in
adc
fwait
cs
in
dec
mov
xchg
xchg
mov
gs
push
cmpsb
xor
push
into
loop
bound
pushf
cmp
insl
fwait
lahf
sub
xlat
loope
repz
jecxz
ss
insb
mov
addr16
mov
mov
nop
jmp
pop
dec
sbb
jge
popf
mov
test
push
cmp
divl
sbb
sub
mov
loop
lods
push
daa
rclb
loopne
push
sbb
repnz
push
out
sub
jno
jl
jnp
cmp
mov
inc
pusha
xchg
mov
add
iret
pop
into
cli
leave
ret
sbb
add
int
in
jne
fmuls
lcall
daa
lock
add
lds
mov
frstor
dec
pop
notl
out
or
xchg
push
xchg
or
popa
mov
pop
arpl
sbb
jo
push
bound
repz
xchg
aam
popf
xchg
push
dec
insb
in
test
inc
data16
sub
jmp
jecxz
xchg
lods
dec
scas
jl
lahf
nop
stos
repz
call
in
scas
enter
lds
mov
pop
pop
add
xchg
movsb
sbb
sar
sahf
mov
sub
icebp
xchg
adc
jg
pop
fstpt
inc
cltd
loop
cmp
enter
xchg
dec
int3
sbb
out
repz
jnp
leave
and
mov
xlat
data16
shll
popa
sarl
add
push
aas
and
mov
dec
and
cmpsb
jp,pt
cmp
mov
xchg
das
add
jns
imul
cs
mov
in
cmp
mov
adc
out
testb
mov
or
mov
rolb
mov
scas
or
mov
movsl
repz
sub
push
mov
mov
je
leave
loop
jmp
sub
or
cmc
fdivrs
stc
repnz
jno
add
cmp
lods
out
data16
movsb
je
adcb
adc
pop
and
cmp
pop
jg
push
shll
addl
or
lcall
sbb
pushf
gs
ficoml
lret
gs
add
jecxz
cmpsl
mov
jbe
adc
mov
xchg
iret
aaa
adc
mov
dec
nop
pop
stos
push
mov
cs
mov
cmp
mov
pop
push
cmp
push
dec
outsb
inc
push
push
pop
pop
int
xchg
out
push
push
xchg
jl
orl
cmp
xorb
pop
mov
ret
xchg
ret
inc
daa
sahf
xor
or
inc
enter
cltd
fadd
test
ljmp
sbb
cmpsl
js
xor
pop
jbe
dec
push
test
adc
aaa
push
das
push
scas
rolb
jle
icebp
pop
notl
int3
pop
lret
push
mov
flds
cld
imul
sti
hlt
cltd
mov
pop
mov
mov
in
pop
cmpsb
lods
out
inc
pusha
cmp
adc
cmp
xchg
lods
inc
and
jp
and
dec
outsl
sub
sbb
jae
sahf
xorb
add
fstl
adc
push
leave
add
inc
scas
icebp
push
jle
movsl
popf
cmp
pop
int3
imul
bound
adc
mov
push
pop
jecxz
mov
adc
mov
mov
adc
in
cltd
or
sub
mov
loopne
push
xchg
enter
imul
sub
mov
fsubl
inc
int
adc
gs
je
jne
and
xchg
push
jecxz
dec
inc
cmpsl
in
push
imulb
sarb
adc
out
inc
sub
jo
adc
mov
add
lret
ss
inc
cld
pop
adc
fsubl
mov
int3
cltd
pop
and
ss
les
sbb
mov
sub
xchg
out
ds
bnd
in
mov
sub
push
hlt
sbb
dec
jl
lcall
bound
insb
xor
les
jecxz
mov
jno
enter
imul
inc
out
in
stos
adc
xor
adc
test
inc
in
inc
jmp
lods
lock
rcll
adc
in
ds
arpl
pop
mov
xlat
mov
shrl
jne
sbb
and
je
rorb
inc
push
push
jmp
cmp
insl
test
mov
cmp
add
sub
pop
xchg
jle
lods
testb
or
sub
dec
fcmovne
fiadds
mov
dec
pop
inc
pushf
push
cmc
popa
sbb
mov
dec
movsl
jns
and
mov
int3
xchg
pusha
movsl
add
xchg
pop
xlat
lods
push
lds
ret
cmp
movsb
push
lret
jae
push
pop
in
sub
outsb
mov
and
leave
inc
xchg
cs
xor
push
shlb
fwait
push
dec
lcall
jae
enter
and
dec
subb
cmp
andl
pop
adc
xchg
out
lea
mov
out
jno
adc
pop
or
mov
pusha
dec
push
dec
add
mov
and
sarl
shl
mov
rcrl
pushf
and
xchg
jp
testl
neg
out
jge,pt
push
outsb
or
cwtl
shll
in
popf
sbb
cmp
jg
xor
push
ss
and
xchg
popa
sahf
fsubrs
push
dec
add
inc
add
js
mov
imul
inc
mov
pop
sub
or
cmpsb
and
cmp
ret
and
inc
popa
xchg
ljmp
in
stc
fsubr
shlb
shlb
cmp
inc
mov
mov
add
scas
int
sahf
ja
scas
add
mov
lods
xor
or
ljmp
bound
pusha
sbb
dec
lahf
sbb
pop
lret
ja
in
aad
insb
bsr
inc
das
adc
jp
leave
sub
xor
faddl
mov
mov
test
cli
lock
mov
jnp
shl
mov
fsubl
fbstp
daa
movsl
clc
sub
imul
pop
ficomps
nop
mov
add
sbb
shrb
sub
mov
out
bound
adc
adc
jae
jl
cmpsb
xor
mov
imul
test
outsl
loopne
jne
add
push
xor
jne
shl
or
sbb
cmp
adc
into
cli
jb
jp
mov
pop
fldl2t
bound
push
and
lret
daa
adc
sub
lcall
cmp
push
imul
rcrl
mov
in
mov
lret
adcl
lods
es
mov
cltd
fbstp
cmp
stos
sbb
jge
mov
inc
xor
or
cmc
lds
repz
lcall
ja
xchg
xor
or
pop
loope
js
mov
jp
rorb
es
xlat
repz
lock
dec
add
div
adc
push
ret
jne
out
pop
incl
mov
scas
inc
jbe
fs
mov
ret
scas
ret
push
cmp
into
stc
push
lea
jg
or
out
adc
xchg
mov
mov
add
adc
movsb
jbe
fnstcw
push
fisubrl
sbb
sbb
mov
popf
adc
cs
mov
and
xchg
xlat
or
mov
xchg
jno
fdivl
inc
addr16
jmp
loopne
es
inc
scas
loop
outsb
mov
repz
xchg
cmp
cmp
inc
int
jmp
leave
mov
cmp
sub
ss
les
dec
out
lds
orb
jno
aam
cmp
pop
adc
jns
ljmp
or
fildl
mov
loop
adc
push
out
mov
mov
lcall
cli
int
test
pop
pushf
hlt
adc
std
dec
add
adc
or
cmpl
nop
push
mov
aas
in
cmp
adc
dec
testl
sub
or
cmp
filds
dec
divl
mov
in
push
hlt
sbb
pop
loope
into
inc
jbe
jg
fs
lock
test
mov
cwtl
ss
nop
lock
inc
jecxz
add
rolb
jp
sub
ljmp
out
mov
adc
add
movsl
pusha
addr16
mov
sbbl
bound
scas
inc
fdivs
xchg
dec
adc
repnz
dec
ss
fmull
pop
stc
pop
scas
shll
cmp
and
pop
dec
icebp
sbb
aam
mov
sub
or
movsl
dec
adc
popa
enter
setno
dec
sbb
inc
push
flds
jo
add
adc
fidivl
loopne
jle
icebp
inc
and
jno
jmp
and
pushf
outsl
mov
ret
sbb
jmp
test
imul
fnstsw
mov
cmp
push
enter
repz
movsl
xchg
mov
sub
jge
and
push
shlb
xorb
xchg
xor
fstl
dec
aas
inc
shll
or
xchg
outsl
sub
iret
adc
or
xlat
insb
dec
mov
and
jb
in
jmp
mov
mov
gs
pop
sub
inc
cld
xor
out
mov
icebp
xchg
ret
dec
repnz
inc
inc
inc
adcl
arpl
sahf
andl
arpl
ret
sbb
dec
mov
xor
lds
mov
pop
scas
sbb
push
sahf
lock
stc
dec
sub
lods
scas
mov
push
pop
push
sbb
cmp
pop
xchg
sub
add
icebp
enter
sub
xor
test
inc
lea
jnp
repz
mov
adc
cmp
leave
push
sbbb
jb
icebp
sub
xorl
dec
adcl
rolb
push
mov
jge
inc
add
mov
inc
sbb
mov
scas
in
insb
jmp
inc
cmp
mov
inc
dec
imul
push
movups
fcomip
popa
mov
int
fmuls
out
stc
movsb
roll
movsb
xchg
mov
push
js
cmp
test
pop
sbb
lea
dec
fnstcw
sbb
nop
shufps
or
sub
push
lods
decb
gs
add
stos
jno
nop
loop
negb
je
cmp
lods
push
ss
push
fdivs
outsl
daa
icebp
fs
add
test
fisubrl
and
sbb
pusha
push
insb
stos
je
idivb
sub
mov
icebp
push
mov
cli
addr16
testl
call
sub
jle
shrb
xchg
jb
cmp
imul
rcl
jns
push
add
inc
test
mov
out
aas
xchg
shl
or
mov
fs
dec
mov
cmpsb
jmp
mov
iret
xlat
push
inc
adc
ja
push
mov
shr
shl
call
and
cld
ret
push
inc
shrl
inc
jns
stos
mov
xchg
shll
icebp
sahf
xchg
xchg
sbb
inc
aas
rorl
test
mov
fistl
loop
add
adc
hlt
mov
and
cmp
cmc
push
xor
push
and
cwtl
dec
stos
fwait
je
sahf
jle
out
lret
xchg
and
sbb
xchg
mov
out
out
sbb
aas
mov
mov
dec
or
xchg
mov
mull
ret
jl
fiadds
mov
xchg
test
xor
cli
das
pop
cmpsl
xor
dec
pop
sbbl
daa
xchg
cmc
ret
xchg
stc
in
fs
cmp
imul
mov
insb
into
xchg
mov
in
bound
insl
movsl
cmpsb
popf
mov
inc
stos
xchg
and
push
add
inc
xchg
mov
loop
in
cmpb
mov
dec
xor
sub
inc
jno
jmp
leave
out
sti
sub
push
xor
inc
xchg
popa
mov
fdivl
dec
push
outsb
pop
cmp
xchg
mov
leave
sbb
cmp
dec
xchg
mov
push
rclb
dec
clc
es
push
in
stos
sahf
xor
pop
xchg
push
fidivl
movsl
mov
stos
pop
fs
inc
xchg
pop
popa
in
test
in
sub
mov
das
arpl
xor
cmpb
movsb
cmp
xor
movsb
fimuls
cltd
jg
jmp
jge
stc
xor
mov
outsl
ljmp
adc
mov
add
pop
xchg
in
iret
test
enter
fisubrs
aad
ret
mov
jl
in
or
outsb
stos
insl
sbb
lds
adc
pop
call
xor
mov
sbb
sbb
dec
cli
test
fs
sub
addr16
add
lock
stos
jecxz
adc
call
fcoms
lret
and
iret
pop
mov
fldenv
inc
aaa
testl
movsb
sbb
or
mov
inc
or
sbb
and
mov
sahf
sti
aad
push
cmp
adc
push
clc
mov
mov
lock
cmp
test
out
xor
pop
or
pushf
mov
clc
sbb
sub
sbb
xor
scas
daa
in
and
mov
jae
or
adc
cmpsl
dec
scas
xor
cmpl
jp
mov
pop
imull
xor
int
xor
adc
lret
adc
sub
push
loop
subb
movsb
pop
addl
add
arpl
aam
outsl
invd
push
cli
dec
aad
lret
sbb
cmp
lret
push
add
rcll
aaa
data16
adc
jae
and
mov
in
loope
xchg
aad
fst
test
jnp
sahf
push
stos
test
cmp
lods
pop
mov
push
mov
mov
dec
lods
adc
imul
push
xlat
pop
xchg
sahf
push
push
test
pop
lahf
pop
inc
cmpsb
ss
mov
mov
in
jno
dec
ss
popf
pop
push
bound
ficomps
or
scas
push
addr16
fbld
dec
pop
push
jnp
call
pop
mov
repz
in
push
sbb
out
cli
repnz
lods
or
popa
enter
adc
in
xchg
pop
mov
mov
jnp
dec
jp
fdiv
ja
test
xchg
dec
sbb
or
pop
lods
out
lods
sub
hlt
loopne
inc
loopne
hlt
in
mov
sbb
addl
stos
lret
dec
cmpsb
inc
rorl
dec
leave
jmp
dec
xchg
lods
mov
mov
enter
adc
movsb
xorb
pop
sbb
add
iret
cmpsl
fdiv
repz
jnp
movsb
sahf
xchg
fsts
stos
into
das
shlb
jle
inc
hlt
aad
insb
inc
mov
add
add
cmpsl
imul
inc
xchg
jle
std
sub
mov
dec
enter
pop
dec
arpl
push
outsb
lds
mov
movsl
movsl
sbb
faddl
xchg
pushf
cli
inc
mov
dec
fsubrs
cmp
stc
fabs
dec
sub
daa
pop
outsl
pop
inc
mov
cwtl
mov
jmp
rol
push
cmc
lods
cmp
pop
mov
xor
enter
sbb
jecxz
and
stos
test
mov
rol
bound
int
in
cmp
sbbl
fstpt
sbb
dec
sbb
push
pushf
movsb
loop
push
rcrl
push
out
outsb
dec
subl
enter
pop
rcl
dec
ret
mov
push
push
pop
shl
push
sub
add
ja
sar
cmp
nop
inc
add
rcll
or
test
repnz
filds
imul
push
cs
mov
dec
pop
loope
cld
mov
mov
mov
ret
xlat
and
mov
outsb
or
or
pop
ja
pop
inc
lcall
and
mov
xchg
and
call
push
out
fsub
ret
es
scas
cmp
pop
add
jns
sbb
xchg
sub
nop
dec
add
jo
in
out
jno
outsl
aaa
sub
ljmp
push
inc
push
pop
es
fwait
jecxz
sub
cmc
mul
imul
sbb
inc
mov
out
sub
jae
dec
cltd
and
mov
jno
mov
ret
insb
rorl
xor
sbb
stos
mov
and
rcr
mov
sbb
dec
imul
add
cmpsb
fcmovbe
imul
xchg
mov
mov
es
jb
repnz
push
push
out
out
arpl
adc
push
jmp
sarb
repz
dec
shl
cmp
dec
ja
je
sbb
lret
xor
fcoml
sub
and
lock
mov
pop
inc
pop
adc
xchg
add
cmovns
pop
clc
dec
fwait
or
inc
ljmp
aam
fisubl
scas
cwtl
rol
inc
daa
jmp
aad
out
xchg
outsl
pop
inc
xchg
insb
cmpb
movsl
mov
iret
add
shrl
dec
dec
lods
xchg
test
sti
daa
hlt
inc
cmp
shll
jnp
dec
insl
clc
ljmp
dec
ja
add
scas
dec
push
inc
mov
mov
sbb
push
pop
int
data16
je
dec
sbbb
gs
fstpt
jae
popa
fs
mov
mov
das
pop
push
add
inc
imul
jbe
pushf
aad
jne
cltd
loopne
scas
lahf
mov
pusha
push
rorb
ss
adc
in
popa
mov
sub
mov
pop
test
add
sbb
mov
push
pushf
lods
fcom
jmp
cmp
lcall
ja
movsl
adc
mov
rclb
and
ficoms
fs
iret
les
xchg
jecxz
sbb
int
sbb
mov
mov
pop
push
popa
fwait
inc
cmp
insb
jge
xchg
mov
in
ffreep
ljmp
shlb
popf
push
aas
mov
dec
xorl
clc
dec
xor
xchg
xchg
call
mov
add
imul
imul
and
pop
cmp
mov
repnz
pop
jg
scas
in
stc
jge
mov
mov
aas
pop
popa
adc
into
loop
sub
js
iret
sbb
sbb
push
loop
push
xchg
fs
xchg
inc
push
rcrl
dec
je
inc
rclb
jmp
outsl
jge
out
outsl
aaa
fcoms
aaa
inc
or
enter
jmp
mov
aaa
pop
adc
xchg
inc
adcb
mov
add
loope
inc
pop
inc
xor
and
gs
aaa
js
mov
or
sub
scas
std
or
jg
aad
cmc
xchg
mov
ljmp
mov
sbb
pop
fwait
stos
pop
mov
pushf
push
xchg
getsec
rorl
dec
fdivs
or
lock
loope
mov
out
jecxz
sti
ds
push
negl
mov
sub
lods
push
clc
jns
or
jno
mov
les
adc
cmpsb
cltd
add
call
mov
mov
int
sbb
cmp
mov
mov
enter
cmpsl
ds
lcall
fimull
sub
loop
jo
fwait
or
and
add
push
icebp
add
aaa
filds
pop
idivb
das
sub
adc
insb
xor
push
adc
dec
or
mov
xor
jae
and
inc
jecxz
lods
fidivl
lret
imul
cmp
in
jle
fiadds
add
aas
push
jecxz
mov
jno
cmp
adc
or
jo
jmp
cli
ljmp
inc
fcom
jne
xor
gs
mov
je
test
ss
enter
jnp
mov
in
cs
and
add
fst
cmp
or
add
or
in
lret
push
cmpsb
cwtl
insb
popf
call
aam
popa
xor
mov
inc
loop
imul
stc
ret
jle
mov
and
leave
add
stc
xchg
aas
repz
xor
xor
into
mov
jno
ss
adc
mov
adc
repz
adc
xor
adc
cmp
cmp
add
mov
cwtl
adc
loope
jne
push
imul
lahf
cmpb
mov
push
in
cwtl
loopne
adc
xchg
pop
mov
int
jg
mov
in
addr16
cmp
xchg
push
adc
rorl
jne
cmp
fcmove
sbb
ljmp
push
xchg
lahf
mov
xor
jo
jnp
xchg
fstps
in
push
lret
sbb
adc
sub
pop
dec
mov
lods
sbb
insl
inc
icebp
inc
dec
mov
test
cmp
fisttps
outsb
sti
xor
ja
cmpsb
add
mov
jge
leave
jbe
pop
xchg
rorb
lahf
pop
lock
clts
xor
xchg
sbb
fnstenv
pop
adc
js
push
loopne
pop
adcb
mov
xor
mov
lds
cmc
loop
sbb
test
aas
lahf
lds
cld
jg
and
mov
push
aaa
rcl
jecxz
gs
or
mov
add
add
imul
test
loopne
pop
lret
sub
mov
xor
sbb
jmp
std
sub
in
andb
mov
arpl
cltd
pop
lahf
push
scas
xchg
dec
hlt
popa
sbbl
sbb
jno
xchg
jle
cwtl
mov
cmp
inc
icebp
sbb
mov
addr16
repz
push
ss
daa
xor
pop
xor
jmp
jg
inc
jns
and
xor
and
mov
adc
mov
add
xchg
test
stos
movsb
shlb
mov
mov
adc
fcmovnbe
lods
xor
inc
out
jbe
icebp
arpl
mov
fildl
xor
nop
or
sahf
and
testl
mov
out
sbb
jb
push
cmpsl
faddl
sub
pop
sbb
jne
cmp
pop
mov
xchg
adc
add
mov
das
pusha
arpl
mov
mull
sbb
cmp
out
push
ljmp
ds
dec
lods
pop
cmp
mov
inc
cwtl
xchg
lock
fistpl
jl
cwtl
notb
jmp
dec
hlt
je
pusha
call
out
mov
nop
imul
cmp
insb
jno
add
adc
fnstenv
adc
rep
inc
std
adc
int3
mov
or
out
or
push
mov
rcr
dec
xchg
sbb
mov
mov
push
cmpb
push
lcallw
outsb
mov
mov
mov
and
xlat
pop
dec
mov
fs
pop
xor
nop
cmc
shll
rolb
push
jp
xchg
pop
jge
push
inc
xlat
adc
outsb
sub
sbb
xor
in
dec
sbb
int3
xchg
pop
cmp
cmp
mov
pop
movsb
sbb
fsub
mov
cmpsl
pop
fmuls
shrb
cmp
int
fs
popf
movsl
jmp
scas
mov
ss
adc
adc
mov
add
pop
dec
jb
clc
mov
push
fsubs
mov
dec
outsb
rorb
rcrb
andb
jle
mov
sbb
mov
insb
lods
lret
out
mov
hlt
and
popa
loop
cmp
inc
push
push
mov
xchg
loopne
mov
lods
bound
or
clc
jne
testl
inc
shll
imul
sub
addl
data16
cmpb
mov
in
mov
mul
cld
xor
sub
jp
pop
fwait
cmp
shrl
pop
add
pop
fwait
movsb
push
iret
repz
mov
data16
inc
mov
test
clc
mov
out
rorb
iret
test
insb
lods
mov
addl
shrb
and
shrl
adc
mov
cli
stc
cs
filds
cmovno
jo
mov
inc
pop
and
cmp
arpl
test
sub
xor
push
cmp
push
cmp
lods
ds
stos
lahf
xor
mov
lea
in
jns
iret
bound
jo
mov
xor
mov
pop
sahf
and
xchg
push
mov
xor
add
jno
or
or
or
test
jg
icebp
icebp
push
movsb
sbb
jno
in
dec
test
xchg
adc
lods
out
imul
mov
inc
adc
in
repnz
add
mov
mov
shlb
sbb
and
push
or
bound
faddl
mov
jle
sti
xchg
dec
lods
inc
sahf
loopne
xor
aad
addr16
cmp
test
or
rcr
dec
ret
gs
jp
jge
jecxz
jle
inc
jnp
adc
sub
rclb
in
xchg
icebp
push
and
cmc
xor
sbb
lods
stos
test
xor
fisubl
ljmp
sahf
jne
jge
pop
cmp
jnp
pop
aas
cld
jb
repnz
xchg
xchg
in
mov
mov
std
das
lods
pop
push
into
jb
lea
push
fsincos
pop
mov
sub
push
pop
push
push
imul
cmp
sub
xor
adc
or
dec
dec
scas
es
sbb
xchg
ds
sub
xor
mov
push
mov
imul
in
cmp
in
jnp
testb
xchg
and
popf
mov
push
ror
int
out
out
jbe
xchg
clc
jp
sbb
sbb
leave
inc
cmc
mov
scas
add
addr16
vmwrite
cltd
mov
insl
mov
or
mov
push
jmp
mov
mov
cs
push
fs
mov
jne
xor
scas
or
mov
xor
pop
scas
ret
cmp
cmp
push
sarb
or
pop
sbb
call
cmp
and
cltd
sub
inc
xlat
shlb
xchg
ret
fcompl
inc
add
scas
mov
lock
mov
insb
icebp
xchg
std
ljmp
int3
xchg
cmpsb
mov
mov
mov
dec
hlt
mov
mov
pop
rcrl
popf
lds
loopne
in
das
fnsave
sub
push
mov
shrl
arpl
inc
mov
sahf
popf
jle
fcoms
cmp
sbb
hlt
add
cmp
test
dec
or
test
mov
inc
mov
dec
and
xlat
sub
enter
add
xchg
push
roll
iret
xor
sub
adc
data16
incb
in
loope
xor
pop
jnp
lahf
sbb
xor
insl
mov
xor
insl
pushf
xchg
nop
adc
icebp
lahf
imul
mov
dec
ljmp
mov
cld
push
mov
xor
test
or
test
test
add
jns
jge
push
inc
cmpsl
imul
jbe
mov
movsl
in
cmpsb
dec
sub
push
movsb
jecxz
pop
xlat
std
enter
sysret
dec
or
jno
dec
push
cmp
inc
pop
fistps
dec
imul
dec
push
flds
jl
push
rclb
xor
fldt
cmpsb
fnstcw
cmp
add
mov
pop
rorb
jo
sahf
mov
ficoms
imulb
outsl
mov
leave
ret
sub
cmpsb
int
xor
fucom
and
es
sbb
cmp
pop
inc
cs
scas
bound
aaa
mov
mov
push
pop
out
fidivrs
jne
leave
pop
shlb
dec
xor
or
xor
bound
rcl
mov
cmpsl
push
mov
cmp
push
mov
outsb
stos
stos
pop
pop
dec
shrl
jmp
add
jge
fsubrs
mov
sub
sti
inc
in
adc
dec
adc
mov
mov
lahf
movsl
std
sbb
mov
rcrb
je
and
lock
lcall
xchg
fdivrp
add
push
jmp
icebp
ficompl
clc
add
ja
cli
pushw
jge
and
sbb
mov
cmc
pop
in
cmpb
pusha
pop
lods
lret
mov
sbb
testb
enterw
sub
jbe
pop
or
mov
cmp
cmpsb
sub
in
inc
xor
push
push
sahf
mov
arpl
loope
pop
push
icebp
mov
jno
jmp
mov
fldcw
push
inc
cld
ss
push
sub
jle
subb
shrb
mov
lcall
push
test
xchg
cs
cmpsb
ds
push
jmp
rclb
cmp
clc
mov
jnp
ljmp
arpl
inc
cltd
out
mov
sahf
pop
mov
ret
rcl
mov
adc
jb
mov
mov
mov
or
push
mov
jb
push
mov
or
cmp
jg
mov
mov
xchg
mov
imul
stos
clc
and
dec
dec
dec
fsubrs
jp
jge
out
loop
pop
pushf
lahf
or
adc
jo
sub
pop
push
adc
scas
lods
popa
movsb
dec
cwtl
mov
push
test
in
or
mov
sub
jge
fs
fs
or
frstor
add
push
testb
add
and
les
push
lret
xor
mov
fadd
call
daa
jbe
test
movsb
arpl
adc
and
jb
cmp
or
inc
sbb
shrl
shll
push
les
fs
inc
aaa
inc
test
jo
rep
aam
lret
mov
pop
out
xchg
in
gs
sub
insl
fbstp
cmc
outsb
outsl
push
fsubrl
addr16
lea
outsl
lods
insl
sbb
adc
lea
shlb
inc
mov
fnsave
cmp
outsb
xchg
aaa
dec
scas
jne
jno
scas
imul
mov
ficoms
pop
push
pushf
xchg
adc
hlt
lods
cwtl
mov
movsb
jae
jg
shrb
fwait
mov
cmp
cmp
sbb
call
popf
inc
test
adc
lret
hlt
std
jae
inc
jp
cltd
inc
test
scas
cltd
add
int3
cmp
inc
or
cs
loopne
sub
jecxz
rcrl
mov
loope
add
fidivrs
mov
roll
cmpb
adc
sbb
mov
sbb
fcomps
out
ds
ret
mov
dec
fistps
loopne
push
add
mov
sub
xchg
adc
dec
leave
mov
in
ja
repz
mov
and
cs
push
push
push
sti
jae
adc
stos
mov
jg
add
insl
subb
in
jb
sub
adc
pop
rcrb
adc
add
faddl
inc
jecxz
adc
mov
jno
movsl
xchg
xor
push
pop
hlt
mov
jge
or
call
dec
push
pusha
mov
pop
mov
test
xchg
cmp
int
dec
xchg
out
push
add
scas
cltd
jb
or
jno
or
cmp
mov
cmp
pop
mov
aas
fldl
sub
ljmp
cmp
cmpsb
pop
xchg
outsb
push
pop
fcoml
adc
ljmp
dec
call
jmp
shll
shrl
push
xchg
outsb
cmp
pop
ret
mov
stos
jbe
out
inc
mov
movsb
jecxz
pop
leave
icebp
or
dec
jl
ja
rorb
call
adc
mov
mov
fbld
xor
xor
outsb
mov
pop
outsl
in
divps
and
add
push
orb
mov
sub
pop
mov
xchg
mov
add
and
cmp
stc
mov
cmp
dec
adc
scas
pop
xchg
inc
inc
mov
cmp
push
ret
out
mov
pop
pop
push
lret
clc
push
outsl
test
bound
arpl
lret
cmp
dec
push
inc
mov
pusha
or
rcll
outsl
mov
cmp
jl
mov
int3
pop
cmpsb
cmp
xchg
add
test
fbld
mov
test
inc
ljmp
mov
dec
loop
or
icebp
or
ret
pop
dec
xchg
mov
or
pop
cmp
daa
pop
fsubs
das
pushl
out
loopne
iret
fisubl
inc
popf
in
cmpsb
fwait
push
rcrl
cmp
mov
mov
and
cmc
movsb
xlat
pop
pop
pop
inc
cs
sbb
cwtl
scas
imul
mov
mov
enter
int
sbb
lret
pop
mov
fstpl
daa
inc
dec
mov
fimull
sub
cwtl
daa
cmp
into
adc
dec
jbe
sahf
sub
add
inc
xor
lahf
mov
jg
int3
cs
dec
or
jl
in
movsl
or
pop
mov
scas
xchg
mov
shll
sbb
xchg
xor
sub
hlt
cwtl
sub
mov
shr
pop
mov
flds
in
nop
cld
cs
xchg
lret
mov
insb
into
cld
mov
fists
inc
imul
add
mov
push
sbb
push
popf
jns
aam
xor
sub
mov
mov
or
fsubrs
jns
out
adc
or
dec
scas
mov
neg
mov
insl
adc
outsb
mov
insb
mov
pushf
inc
xor
repnz
in
aas
xchg
lods
sbb
mov
jge
test
int
cld
push
or
lods
mov
cli
adc
sub
pop
ror
repnz
cmp
incb
xchg
push
jns
cmp
pop
jb
adcb
dec
ret
hlt
outsb
pop
jmp
and
add
out
jae
out
mov
inc
xchg
sub
sub
icebp
adc
inc
xchg
subb
inc
ljmp
adc
pop
xor
mov
mov
mov
stc
sbb
or
jp
pop
lods
xchg
push
cwtl
push
lock
jb
fstpl
mov
jg
ja
test
sti
xchg
jmp
xor
pop
xor
and
fwait
push
adc
dec
ret
testb
mov
cmp
jmp
mov
stc
data16
fnstcw
cld
or
ljmp
cmp
fcoms
pop
out
aas
cmpl
adc
cmp
rol
jmp
ficoml
pop
add
mov
ss
iret
jl
imul
jne
push
pop
sub
jnp
ret
mov
xchg
imul
adc
pop
mov
shl
and
je
add
add
push
test
popa
xchg
or
lret
sbb
dec
ret
jae
sub
cli
aas
and
icebp
gs
popa
cmp
and
cmp
mov
push
daa
mov
faddl
sbbl
pop
inc
fstps
push
inc
loop
js
mov
cmc
cmpsl
cld
or
loope
into
ljmp
stc
cwtl
scas
sub
aas
int
ss
stos
popa
movsb
pop
sub
iret
out
sub
xor
xchg
or
pushf
ljmp
fdivrl
stc
arpl
pop
pop
pop
sbb
mov
xchg
mov
ljmp
mov
or
sbb
popf
shrl
push
and
gs
test
cmp
push
xor
mov
cmp
xchg
mov
fnsave
push
push
setne
cmp
sub
rol
jnp
mov
loop
testb
loop
into
out
movsb
iret
adc
insl
jbe
insb
sbb
xchg
sub
adc
and
icebp
push
mov
pop
inc
cmp
arpl
les
adc
mov
pop
imul
jle
and
lahf
jns
addr16
mov
xor
into
mov
cmpsl
fists
add
outsl
test
mov
std
lds
fbld
fcomps
or
mov
icebp
fwait
ss
js
cs
stos
cmp
test
out
inc
movsl
stos
push
ljmp
test
pop
add
leave
inc
lds
xlat
xchg
and
lock
pusha
inc
in
out
jns
mov
popf
ja
jecxz
jg
or
addl
fs
out
xchg
push
call
shrd
sub
cwtl
aas
sbb
mov
sahf
adc
dec
leave
lods
cmpsl
mov
ljmp
outsb
aam
mov
pop
cs
imul
mov
les
arpl
push
lahf
jmp
punpckhwd
cmp
mov
out
push
lcall
mov
lods
aas
jl
xorl
pushf
lret
cmp
xchg
insl
loope
fcom
gs
xchg
cmpsb
push
sbb
fistl
push
mov
sbb
inc
xchg
jmp
inc
push
mov
mov
add
cmp
mov
mov
into
inc
cmpsb
or
ret
ljmp
mov
shr
and
data16
test
call
xor
nop
jp
inc
and
lret
dec
sub
mov
inc
in
mov
add
pop
xchg
sahf
sub
out
fwait
dec
adcb
sbb
mov
xchg
push
ret
pop
xor
sbb
mov
movsl
adcl
iret
test
mov
cmpl
not
sub
mov
mov
aas
mov
or
fdivs
add
xchg
cltd
test
cli
push
sbb
mov
jo
cmp
jecxz
push
lret
js
pop
fisubrl
lret
outsl
mov
jmp
aaa
stc
mov
popa
dec
pushaw
insb
stos
cs
xchg
xchg
sahf
add
xchg
sub
mov
jo
imul
mov
scas
pop
mov
sbbl
test
mov
in
shll
ficoms
pusha
inc
xchg
xchg
mov
jo
ret
sbb
or
jge
dec
jbe
add
inc
loope
pop
mov
test
loopne
pop
out
in
fstpt
ja
stos
ss
js
enter
xchg
rcr
shll
jo
cs
inc
pop
mov
fwait
mov
cmp
pop
popf
xchg
or
pop
xlat
mov
adc
fisttpll
clc
test
fisttpll
test
mov
push
cmc
addb
mov
lods
test
pop
lret
js
mov
cld
decb
mov
aas
jmp
lcall
lock
jns
and
insl
je
fisubs
lret
sbb
orb
stos
mov
movsb
lods
shl
add
pusha
sub
xor
add
or
mov
mov
jno
pushf
ret
fcomps
test
out
lret
scas
cs
xchg
xchg
mov
lods
cmp
xchg
sahf
into
xchg
addr16
inc
and
shll
xor
lret
shll
ds
push
inc
xor
les
cmc
lret
sub
rsqrtps
fisttpl
jne
iret
push
mov
xchg
cli
hlt
in
xchg
add
xchg
mov
or
and
stc
cmpsl
jne
gs
cmpsb
rcrb
icebp
loop
cwtl
in
aas
fsubr
rclb
or
adc
jmp
xchg
fwait
cmpsl
repz
and
sub
in
je
into
test
xorb
insb
pop
rcr
xor
cmp
decl
cwtl
aad
imul
clc
bound
pop
jae
cmp
or
imul
repz
xchg
or
cli
aam
mov
adc
jb
and
cmp
gs
xor
mov
push
push
addr16
imul
push
jns
xor
insb
dec
into
negl
jg
xchg
mov
mov
pop
fwait
lret
and
mov
es
mov
pop
or
cmp
jecxz
in
push
adc
int
mov
stos
loopne
push
push
push
in
sub
add
test
wbinvd
pop
lock
jne
adc
xchg
xchg
int
push
lock
scas
mov
pushf
sbb
nop
dec
dec
inc
dec
cmp
push
xchg
sbb
js
mov
xchg
pop
lea
rolb
movsl
lods
add
sbb
jge
les
cs
scas
fidivs
inc
inc
inc
add
adc
test
or
rcrl
xor
inc
sbb
pusha
in
jnp
push
into
lds
enter
cs
enter
ja
jle
push
rorb
jp
cmp
aam
decl
cmp
rclb
inc
xchg
adc
and
jo
cmp
ret
movsb
cmp
cmpsl
and
mov
sub
push
fs
ja
dec
gs
test
das
daa
xor
cli
repz
ljmp
lret
scas
mov
inc
push
iret
pop
or
mov
int
cmpsb
pusha
sahf
push
mov
fwait
push
mov
sub
shll
and
xor
and
pop
xor
scas
xor
or
in
ja
pop
outsb
movsb
cld
pusha
notb
mov
shrb
cld
xchg
lret
lret
ss
ja
jae
inc
shlb
jmp
inc
in
or
dec
ja
sub
push
cmc
jecxz
sub
sti
pop
je
testl
cmp
jnp
xor
xor
jg
mov
clc
fiaddl
out
ss
bound
push
adc
inc
mov
sub
cmovge
hlt
lcall
loopne
pop
sbb
push
push
popa
mov
xor
pop
dec
jle
mov
jmp
dec
jbe
fsubl
mov
sahf
icebp
dec
pop
sbb
mov
leave
push
pop
aaa
jmp
leave
and
sub
jo
sbb
icebp
jecxz
mov
adc
adc
cmpl
sbb
xchg
adcb
je
rcll
mov
and
add
or
lret
xchg
jb
sbb
ljmp
fdiv
ljmp
mov
out
dec
bound
aam
dec
mov
lock
inc
or
and
add
xlat
loop
mov
hlt
mov
mov
les
inc
movsb
dec
adc
xor
mov
xchg
enter
pop
push
push
adc
out
popf
std
xchg
inc
or
or
inc
xlat
jbe
or
inc
xor
xor
negl
mov
fsubrl
sarl
insb
xchg
mov
fistl
jae
mov
movsl
in
shr
cmp
cmp
cmpsb
lcall
imul
lahf
pop
sbb
sub
add
push
pop
sbb
add
adc
sbb
call
lds
mov
mov
pop
test
enter
dec
sbb
sub
or
jne
and
out
lcall
jns
pop
repz
add
cmpsl
sbb
jp
rcll
das
sbb
imul
jge
mov
mov
loop
jp
jnp
xchg
push
sti
test
stc
push
int
cmp
sbbl
fisttpl
push
lods
adc
pop
mov
sub
shrb
pop
adc
pop
cmp
shrl
imul
xor
orb
pop
and
imul
jp
outsb
pop
sahf
imul
fiaddl
sub
out
push
ret
sub
lret
mull
add
xor
cmc
jae
xor
sar
add
mov
push
mov
xchg
pop
jle
pop
lea
cli
sub
lds
or
js
pop
imul
inc
xchg
jo
adc
mov
jns
int3
mov
mov
icebp
inc
xor
mov
and
notb
enter
add
pop
loope
jno
pusha
test
movsl
sbb
sub
adc
aad
jno
and
jbe
iret
pop
lcall
negw
add
or
scas
lea
addl
cli
or
into
outsb
add
scas
mov
cmp
dec
mov
push
ret
inc
jle
push
mov
xor
ja
es
lret
lods
shll
popa
dec
xchg
mov
and
inc
mov
mov
repz
pop
aad
lcall
dec
in
inc
pop
push
lahf
ljmp
and
and
add
push
add
jp
mov
mov
movsb
je
add
out
repnz
jbe,pn
xchg
out
lea
fcoml
inc
sbb
in
push
xor
push
jg
clc
ljmp
inc
inc
pop
outsl
push
xchg
pop
xchg
inc
inc
or
sub
out
pushf
pusha
mov
add
jb
jnp
mov
mov
rorb
sub
inc
xor
js
mov
insl
sbb
push
data16
or
inc
jp
add
mov
hlt
in
sbb
fstl
lods
or
jno
mov
pushf
imul
cmpb
adc
std
or
ds
sbb
fnstsw
out
sub
shlb
inc
sub
jo
ja
inc
in
sbb
push
loop
pop
movsl
test
ds
popa
cmpsb
pop
cmp
cmp
mov
repnz
iret
inc
jmp
imul
cld
mov
inc
add
cmp
pop
repnz
and
push
repnz
fidivs
sub
cltd
mov
push
movsb
dec
out
jne
pop
mov
sub
fwait
cmpsb
cmp
dec
xchg
sbb
nop
lahf
sti
add
mov
addr16
test
jnp
loope
cld
adc
in
fldl
pop
xrelease
xor
push
push
dec
sub
ret
jbe
jg
cmp
scas
pop
inc
sub
adc
ficoms
jp
pop
inc
stos
aas
das
jae
pop
mov
lea
mov
dec
movsb
xor
mov
adc
in
int3
rep
in
sub
ret
mov
cmp
sub
sbb
js
stc
xor
push
cmp
pop
loope
cmp
adc
ret
hlt
lahf
xchg
lock
mov
jl
cli
sbb
mov
rcll
or
cs
cli
xor
jecxz
and
push
sbb
hlt
sub
or
push
lahf
test
push
pop
xor
das
add
xor
push
stc
xchg
push
mov
mov
jmp
xchg
ret
xor
scas
pop
pop
test
cmp
push
insl
sub
cmpsb
test
mov
lds
in
int
in
movsb
pushf
stc
aad
pop
jge
mov
lcall
xor
and
add
mov
and
sub
arpl
pusha
mov
sub
add
out
xchg
testb
sti
mov
in
or
subb
mov
pop
jb
mov
es
cmp
jne
xor
scas
or
mov
popa
sbb
sub
orl
and
sub
imul
inc
dec
push
aas
popf
fs
cli
repz
add
pop
stos
fs
imul
aaa
xor
jne
jl
fwait
jne
inc
int
pop
test
adc
xchg
mov
insb
or
andl
sahf
xlat
into
dec
sub
dec
or
jbe
adc
push
jge
sbb
in
and
pop
mov
jbe
in
or
pushf
hlt
sbb
cmp
into
enter
and
imul
cmp
xor
loope
cmp
inc
dec
mov
cwtl
out
lock
push
sub
stc
xchg
or
loop
dec
in
inc
mov
inc
fbld
dec
mov
dec
or
adc
in
or
mov
or
cs
push
movsb
pop
les
div
fsubrl
lahf
ret
imul
loopne
sub
jecxz
fidivrs
clc
mov
mov
xor
orl
pop
scas
pop
cmpl
out
es
out
push
jp
leave
inc
jb
leave
jecxz
cmp
push
aas
jmp
in
call
and
test
out
outsb
push
sahf
out
movsb
call
pop
pop
mov
pop
mov
xlat
cmpsl
sub
aad
fmull
push
and
sub
push
lahf
das
lods
fiadds
push
nop
push
fsubs
cli
nop
stos
mov
lock
mov
fwait
movsb
xor
mov
das
aad
hlt
sbb
shl
mov
imul
mov
jb
ja
mov
popa
in
cmp
adc
lcall
mov
mov
in
mov
or
mov
out
gs
ja
sbb
add
cli
xor
push
xor
mov
push
xor
push
outsl
dec
pusha
out
out
xor
or
dec
mov
leave
cld
lret
in
fsqrt
jg
call
lods
cmp
xor
mov
bswap
inc
and
pop
test
push
cmpsb
mov
daa
xchg
jg
loope
pusha
insb
lods
in
cmpl
and
sbb
jbe
sub
arpl
icebp
loopne
cmp
jnp
in
adc
mov
xchg
test
sti
aaa
add
add
in
cmp
or
mov
divl
rorl
xchg
and
sbb
popa
scas
pop
outsb
mov
in
sbb
js
imul
or
xchg
leave
fildl
sahf
sub
cltd
mov
repz
mov
or
stc
leave
xor
add
mov
mov
rorb
fmull
mov
xchg
loope
lods
push
and
into
popf
es
adcb
scas
or
dec
sub
faddp
jo
mov
icebp
sub
addl
test
outsl
push
inc
and
sbb
rolb
pushf
sub
jge
mov
xlat
sahf
ret
fnstenv
or
jg
or
aaa
repz
loop
hlt
inc
fisubrl
xchg
xchg
xchg
sbb
mov
in
jb
inc
mov
xchg
repz
jae
push
jo
mov
mov
or
sti
je
clc
ja
adc
dec
test
add
dec
int3
and
push
jl
push
mov
cli
and
cmp
icebp
xchg
fdiv
dec
sub
xlat
test
mov
lods
inc
test
je
adc
leave
in
and
add
movsl
pushf
ja
nop
lds
jl
and
cvtps2pd
lods
jnp
xchg
sub
es
and
dec
or
cmp
or
sbb
int3
daa
lock
xchg
lahf
mull
popa
jecxz
mov
jbe
cmc
mov
pop
mov
jo
sbb
cmp
mov
pop
cltd
test
jnp
adc
loop
mov
loopne
insb
sti
inc
insl
xor
leave
test
stos
ror
dec
pop
and
pusha
pop
and
push
shlb
fists
jmp
insl
pop
ret
xor
incb
xchg
rolb
cmp
push
enter
mov
mov
cmp
hlt
loope
dec
lahf
jnp
ds
mov
and
mov
push
inc
mov
jp
stc
xchg
cmp
push
adc
scas
insb
push
int3
adc
mov
aas
xchg
lahf
stc
xor
mov
out
xchg
lods
mov
sbb
dec
dec
out
repz
lahf
mov
gs
xchg
not
pop
or
addr16
repz
sti
pusha
pop
sbb
fstps
push
mov
lds
mov
sbb
mov
xchg
and
or
fucomp
cs
fcmovnu
scas
repnz
imull
int3
sub
in
cli
icebp
testb
push
ds
ds
mov
inc
jp
aas
or
out
pushf
inc
inc
mov
mov
call
inc
adc
mov
jg
rcrl
das
out
jmp
sbb
flds
mov
mov
or
js
xchg
mov
xor
or
stc
aam
popa
stos
insl
mov
jmp
jg
js
incb
mov
gs
dec
shll
jg
mov
sti
loop
jne
ja
lock
push
xchg
xchg
xor
sub
sahf
fwait
aaa
jnp
pop
popf
pop
or
pop
cs
xor
pop
lds
cmpsb
rorb
sub
nop
orb
xchg
repnz
and
push
add
xor
xchg
arpl
jmp
pop
imul
ds
scas
dec
jne
nop
inc
sti
xor
sub
cmpsb
in
pushf
cmpsb
and
and
addr16
sarl
jbe
scas
xor
add
icebp
bound
and
jmp
inc
fwait
orb
jbe
xorb
cltd
adc
sahf
test
mov
js
push
stos
jnp
or
pop
xor
pop
xchg
push
cs
mov
shrb
push
movsb
jnp
fnstcw
call
popf
cmp
or
jge
dec
stos
jp
movsb
jo
int3
jge
lds
repnz
stos
data16
dec
inc
or
dec
ret
addr16
jge
cmpsl
arpl
popf
aaa
cmp
inc
sub
adc
push
insl
loope
pop
ret
je
add
movsb
clc
sahf
inc
mov
mov
lods
loopne
test
sbb
stos
pop
subl
pop
insb
lods
ror
adc
inc
push
inc
and
mov
sub
xchg
out
inc
jmp
test
add
cld
sbb
stos
xor
push
repz
push
rcrl
out
sahf
xor
jp
mov
add
xchg
xchg
fisubrs
or
pusha
mov
push
in
rorb
inc
popf
je
je
or
jo
mov
xor
hlt
inc
out
adc
out
dec
jmp
or
jno
lret
fmuls
jp
jo
cmc
mov
xor
shrb
icebp
call
roll
or
xchg
xchg
scas
lahf
mov
les
shll
xor
rcrb
jo
cmp
jp
outsb
bound
mov
sub
insl
ret
adc
mov
scas
xchg
fisttpll
insb
mov
jae
out
fsub
inc
mov
push
xchg
imul
xor
or
lret
fstl
xor
negl
scas
out
rcll
cmp
out
jmp
lret
xchg
cmp
jns
cmp
nop
outsl
fdivrs
mov
dec
enter
or
adc
ret
sub
add
arpl
jns
out
loopne
mov
cmp
sbb
add
inc
mov
dec
sbb
mov
shlb
in
stos
push
pop
fwait
xor
xlat
mov
push
mov
fwait
cwtl
aas
cwtl
xchg
sub
mov
xchg
lret
icebp
movsl
pushf
repnz
or
repz
mov
pop
sbbl
cmp
xchg
or
sbb
sub
int3
in
push
cmp
pushf
mov
inc
cmp
dec
jns
mov
push
idivl
in
mov
lock
cmp
pop
nop
addl
and
in
loope
negl
mov
sti
pop
dec
fs
ds
dec
into
xchg
push
movsb
jne
daa
js
mov
xchg
mov
daa
lods
pop
out
out
and
subb
sbb
mov
cmp
push
cld
adc
mov
inc
ss
shlb
movsb
movsl
mov
and
mov
imul
and
fcompl
sbb
mov
pop
fsubrs
jne
or
adc
outsl
testl
mov
int3
or
mov
loop
and
test
jp
sbb
out
pop
mov
or
enter
gs
ljmp
call
pop
jbe
in
dec
enter
in
icebp
test
arpl
sti
imul
sub
xor
mov
fisubrs
hlt
and
fnstsw
loop
pushf
mov
clc
in
or
sahf
push
pop
or
inc
bound
cmc
pop
cli
rcl
xor
jle
test
inc
mov
mov
push
rcrb
hlt
aas
or
in
mov
and
enter
or
push
mov
sarb
incb
xchg
sarb
pop
call
xchg
push
ret
pop
sbb
test
movsb
das
repz
outsb
push
xor
dec
mov
aam
push
rcrl
dec
pop
mov
adc
negl
sbbl
add
leave
push
jl
sti
push
sbbl
jg
aam
leave
push
cltd
lock
adc
shrl
dec
sub
adc
sub
jo
jno
or
xchg
fstpt
and
push
pop
push
andb
mov
pop
or
hlt
pop
mov
test
mov
jne
jae
mov
sub
sbb
les
hlt
sbb
aad
in
jo
lahf
loope
sbb
scas
pop
dec
test
sahf
jecxz
test
nop
sbb
sbbb
mov
sub
pop
dec
int
hlt
xchg
jae
fldl
xor
pushf
pop
out
bound
adc
call
rolb
fsubr
adc
jge
aaa
cmc
lcall
aaa
dec
dec
add
out
pusha
rcll
bound
fisubl
jae
dec
fildll
pop
in
fpatan
jo
cmp
rclb
or
mov
rolb
jmp
scas
lahf
mov
fldenv
clc
push
push
scas
fildll
test
pop
cmp
push
test
jecxz
stc
adcl
fcomps
nop
dec
mov
lods
fildll
and
in
xchg
pop
inc
sbb
sub
out
sub
aad
push
sahf
cmpsl
repnz
fistpl
js
into
lahf
push
push
test
push
rcrb
sbb
xchg
mov
loopne
add
adc
cmp
sti
xor
addr16
adcb
inc
lds
cmpl
popa
dec
insb
repz
rclb
and
jo
negb
inc
fisubrl
adc
or
scas
repz
jp
adc
fs
in
adc
xor
cs
xchg
xchg
je
push
or
dec
jno
xchg
pop
rcrb
imul
aam
js
mov
xorb
mov
mov
lret
xchg
xchg
push
jae
adc
lock
daa
nop
xor
inc
pusha
sarl
xchg
mov
fs
cltd
mov
shll
mov
jnp
iret
fsts
and
adc
dec
mov
xchg
test
imul
inc
fistpll
bound
mov
lret
jg
hlt
sbb
enter
mov
shl
xchg
cld
dec
add
dec
sbb
test
mov
sbb
sbb
nop
inc
cmpsl
sahf
ret
mov
jns
dec
mov
inc
lret
xor
push
jno
stos
imul
test
dec
mov
adc
mov
icebp
jnp
mov
movsl
int3
adc
arpl
pop
fldcw
mov
mov
cmpsl
addr16
sbb
inc
mov
lea
or
mov
push
mov
mov
pop
or
add
lret
out
sbb
test
dec
call
pop
inc
push
inc
lret
ret
cmc
das
out
cmp
int3
xchg
in
mov
cmc
aad
push
pop
aad
aad
repnz
fisubs
add
mov
cmp
xchg
imul
sub
sbb
pop
mov
sub
cwtl
adc
fdivl
pop
mov
jl
je
and
and
loop
push
fnstcw
std
ret
inc
loop
lcall
dec
inc
and
push
adc
in
cmp
xor
fisttpl
cmp
mov
jbe
loope
mov
lret
mov
cwtl
fdiv
push
mov
xchg
mov
dec
imul
mov
push
je
and
adc
lahf
or
xor
mov
pop
je
sarb
icebp
mov
loop
xchg
enter
int
adcl
add
push
push
or
into
dec
dec
jnp
mov
sbb
adc
cmp
dec
pop
aaa
lret
mov
das
mov
insb
adc
int
pop
xchg
pop
mov
clc
imul
jp
in
into
add
bound
adc
orl
or
imul
push
rorb
stos
mov
ja
and
push
sub
mov
popa
inc
mov
xchg
xchg
dec
pop
iret
int
inc
add
xor
cmc
das
outsb
push
mov
adc
rcll
push
lret
les
cmp
pop
call
dec
sub
test
cmc
jb
ret
je
gs
xchg
lret
mov
add
cmc
xchg
jb
je
xor
ja
pop
cmp
shlb
sub
mov
pop
hlt
jbe
push
add
cs
sti
pop
add
push
or
push
repnz
lock
mov
lock
aam
add
insl
pop
mov
fidivl
add
push
fs
xlat
sub
xchg
fwait
xor
adc
xchg
das
adcl
or
fwait
add
cmpsl
test
fildll
fucomi
mov
mov
or
cmp
xchg
inc
add
pushf
loopne
jp
ljmp
mov
pop
and
cmpsb
xchg
aam
cmp
clc
mov
adc
test
rorl
mov
xchg
push
adcl
shlb
jmp
cltd
add
outsb
or
pop
nop
clc
repz
into
dec
push
adc
inc
add
stos
cmp
aaa
cwtl
icebp
roll
loopne
scas
and
int3
std
div
dec
sbb
inc
xor
sbb
lea
cwtl
pop
aaa
fsubl
sahf
mov
mov
add
addl
cmp
cmp
cld
in
xchg
sbb
xchg
push
and
cld
pop
jmp
or
fdivrs
jb
out
shrl
sbb
adc
aaa
dec
js
push
popa
ret
adc
cmc
mov
shrl
xor
mulb
lcall
cmpsb
adc
ret
and
xchg
cmc
inc
popa
ljmp
outsb
adc
push
xchg
popa
clc
fs
cmp
aam
or
xor
pop
aas
mov
xor
aam
ja
lods
repnz
adc
clc
out
add
add
pop
or
leave
adc
js
dec
push
mov
fisttpll
fdivs
and
sub
rcr
ja
mov
aam
pusha
fcoms
and
add
sub
mov
mov
icebp
insl
daa
add
adc
mov
pushf
mov
adc
push
add
aad
lods
dec
push
sahf
adc
xor
add
hlt
lds
cmp
pusha
shll
push
jb
je
mov
shlb
das
sub
inc
cmc
cmpsb
jecxz
fidivs
cmp
cmp
mov
pop
test
dec
push
ret
pop
dec
xor
test
add
and
xor
add
mov
cmpsb
dec
lcall
and
push
mov
in
push
dec
cmc
lea
les
dec
xor
in
out
add
sbb
push
adc
or
dec
adc
shr
mov
xor
xchg
lods
mov
push
ljmp
mov
fdivr
movb
lock
cmp
cmpsb
daa
jecxz
test
daa
mov
shrb
roll
insl
je
mov
pop
js
cltd
push
je
cmp
xchg
jno
js
jecxz
pushf
and
jecxz
and
push
inc
test
dec
adc
push
fadds
xor
mov
int
test
sub
inc
mov
sbb
subl
insl
xchg
xchg
adc
adc
mov
bound
xchg
mov
xchg
lea
imul
push
xchg
push
loop
ret
adc
fs
push
stc
ja
add
push
and
push
adc
lahf
bound
dec
fistps
mov
add
inc
push
mov
mov
inc
lret
mov
cmp
mov
mov
jmp
in
push
loope
jae
jp
inc
mov
mov
sbb
jno
mov
ret
cmp
in
push
mov
lcall
mov
jg
jp
outsl
in
out
push
iret
push
negl
sbb
sub
sarb
pop
les
mov
pushf
testb
out
cmp
iret
mov
sti
popf
and
test
add
sbb
add
add
shlb
lock
push
out
popa
mov
loopne
pusha
faddl
mov
mov
push
mov
adc
push
inc
insl
mov
fadd
push
fstpt
jns
push
outsl
nop
cmp
mov
in
mov
fildl
and
pop
inc
sbb
ljmp
xor
imul
pop
aaa
jne
aaa
subl
inc
inc
dec
test
push
dec
xor
cmpsl
pop
xor
test
sub
aaa
xchg
fs
push
pop
pop
out
or
ja
rcrl
cli
cmp
inc
jb
and
roll
and
push
scas
pop
test
outsl
xchg
inc
adc
jl
cmp
mov
xor
push
shl
aad
jno
mov
inc
mov
js
imul
movsw
pop
mov
stos
insl
mov
popa
loope
xchg
fistpl
add
jnp
mov
push
and
jnp
sub
stos
outsl
repnz
dec
ficoms
mov
loope
fidivs
shr
cli
les
loope
daa
dec
je
dec
movsb
fcmovnu
sub
ds
xchg
add
adc
clc
mov
xchg
cli
jo
ret
ljmp
lods
mov
add
jae
mov
lds
push
test
pusha
push
jns
jb
lcall
sbb
insb
mov
sub
mov
xchg
xor
in
int3
inc
out
xchg
lock
and
inc
dec
dec
xor
faddl
mov
clc
shll
sbb
sub
ds
jnp
enter
rolb
mov
movl
test
add
lret
adc
ja
jne
mov
push
mov
mov
xor
mov
dec
fs
and
loop
adc
jl
xchg
pop
dec
notb
fidivrl
pop
xchg
cwtl
cmpl
jne
inc
inc
into
mov
xor
int3
ja
in
dec
cmp
mov
pusha
cmp
mov
push
push
insb
xchg
ret
cmpsl
pop
ss
outsl
addb
or
adc
mov
mov
push
loop
push
lods
decl
push
inc
repnz
jg
mov
mov
imul
lcall
rol
inc
pop
int3
fwait
mov
or
push
jl
mov
or
scas
gs
xor
movsl
inc
jo
or
dec
xor
imul
xchg
or
sbb
push
cld
sub
in
jmp
es
in
mov
mov
mov
xchg
dec
pop
popa
jns
jbe
jg
jmp
arpl
cwtl
popa
jg
lds
out
inc
lea
push
add
imul
dec
push
fistps
push
insb
xchg
dec
push
cwtl
repnz
cmpsb
loopne
adc
sbb
sub
mov
mov
adc
aad
add
push
mov
xor
mov
insl
push
insl
test
je
negl
movsb
jae
add
sbb
sbb
cmp
jae
add
shlb
mov
je
subl
aas
push
add
mov
mov
sub
dec
xor
xchg
nop
mov
push
cmp
dec
mov
lahf
pop
jnp
jns
push
jp
xchg
adc
sbb
and
packssdw
aas
sarb
mov
out
mov
pop
cmpsl
add
xchg
call
dec
out
push
aam
test
jecxz
add
sub
xor
adc
sub
sub
fnstsw
aas
push
add
rol
ja
mov
sbb
push
add
sub
out
push
fwait
mov
push
inc
mov
or
les
je
adc
jnp
addr16
aaa
and
iret
pop
dec
adc
aaa
insb
pop
loope
sbb
dec
ret
push
js
aas
shll
int3
jmp
mov
cli
inc
icebp
pop
jbe
xchg
mov
rorl
loope
pop
pop
loop
rdtsc
aaa
in
faddl
lock
sbb
leave
fs
push
xlat
xchg
pop
add
pop
rclb
adc
cs
push
xor
push
add
push
inc
lods
dec
mov
mov
movsl
ja
push
icebp
mov
call
xor
mov
rcll
push
fildll
mov
adcl
xchg
xchg
test
mov
lds
add
push
enter
lods
or
pop
jmp
mov
sub
fs
cli
stc
int3
xchg
xor
outsl
es
cli
clc
cwtl
sbb
pop
sbb
push
xchg
repz
xchg
loopne
xchg
sub
sbb
pop
and
int
xlat
fmull
mov
cmpsl
xor
push
ret
add
stos
sub
pop
sbb
cmp
push
push
rcr
cmp
sbb
xor
pusha
fsts
je
pop
push
sti
mov
fucomip
sbb
in
and
popa
pop
enter
mov
jg
jl
neg
dec
cmp
test
icebp
cltd
sub
mov
xlat
lods
movsl
pop
jle
add
pushl
idiv
mov
rclb
or
jge
out
insl
aam
ss
scas
incl
sub
cmpsl
inc
aas
lods
cmp
in
dec
dec
push
lret
sbb
repz
lock
dec
or
loopne
or
sub
fucom
cmp
adc
cmpsl
jg
ljmp
inc
pop
rol
or
outsb
icebp
push
push
xor
nop
pusha
jbe
idiv
rcrb
aam
pop
pop
cmp
push
add
mov
repnz
loopne
cwtl
xchg
add
jbe
xchg
jno
bound
mov
mov
faddl
inc
fdivrs
and
xor
add
mov
aad
xor
mov
cwtl
scas
xor
jp
les
incl
push
andl
sbbl
addr16
inc
scas
cmp
rcll
fsubrs
or
hlt
jp
mov
lret
mov
daa
aaa
adc
xchg
jmp
leave
dec
inc
push
stos
shll
dec
mov
mov
mov
and
mov
cmp
daa
sbb
xchg
lods
and
lret
dec
in
fdivrs
mov
cmp
mov
push
push
jnp
mov
sub
in
testb
mulb
sbb
mov
mov
scas
cmc
push
mov
cs
insb
lret
mov
insl
add
push
jl
and
cmp
lods
add
push
out
ret
and
jg
mov
lahf
gs
push
cmp
push
data16
fisttps
xchg
cs
in
xchg
sub
je
dec
addr16
mov
jle
loop
push
scas
pop
repz
and
leave
sbb
enter
xor
jge
pop
lock
movsb
stc
dec
jge
and
pop
popa
or
imul
add
cmp
mov
inc
push
xchg
or
jo
aam
sub
lahf
rclb
sbb
arpl
inc
fidivl
scas
adc
dec
sbb
mov
sub
test
lock
or
push
xchg
xchg
lock
xchg
dec
cmpsl
stos
adc
frstor
cmovg
inc
xor
stos
cwtl
out
jge
test
imul
js
dec
clc
clc
adc
rol
mov
add
movsb
hlt
add
das
mov
push
push
insb
ss
sub
and
mov
ja
jae
out
fsubr
aad
mov
or
jo
shl
testl
xlat
negl
cli
cwtl
testl
mov
inc
adc
or
mov
sbb
cmp
sbbb
iret
out
cmp
add
ret
or
jbe
mov
mov
js
ret
movsb
xchg
jp
and
into
sub
loope
mov
mov
out
push
add
es
loopne
icebp
pusha
mov
daa
sub
or
test
cmpsl
add
sub
push
jae
mov
pop
aam
sbb
xchg
fildl
jne
pop
xor
sbbb
cmp
cmc
push
sti
je
int
add
or
xor
icebp
mov
dec
push
inc
insl
sbb
sbb
ja
cli
or
or
add
shrl
pop
sub
ljmp
xchg
lea
adcl
xchg
dec
xor
cmp
hlt
mov
data16
scas
jae
mov
lock
sbb
mov
xor
sub
loope
repz
pop
in
fisubl
xor
int
stos
sbbb
lock
loopne
inc
out
loope
dec
pop
shl
vandnpd
adc
ja
cmp
mov
rcrb
push
shll
add
mov
adc
ds
jbe
mov
arpl
sbb
lahf
pop
jne
mov
and
icebp
mov
cmc
or
jge
sbbb
aad
push
push
mov
rdtsc
jg
jnp
and
fwait
pop
jmp
lret
aas
gs
and
shrb
or
int
dec
test
jle
push
lods
hlt
pop
cmp
push
fiadds
pop
mov
and
frstor
insl
movsb
test
jp
pop
jge
int3
or
push
stos
xor
mov
sub
jl
test
test
adc
dec
ret
loop
icebp
mov
jp
fdivr
jp
es
test
inc
je
jae
add
pop
call
loopne
gs
mov
leave
push
mov
in
xchg
xchg
adc
adc
cwtl
iret
out
and
test
stc
scas
out
cltd
lret
popf
ret
push
cmp
jo
or
add
mov
add
and
adc
or
stc
jmp
scas
fists
jno
mov
xor
dec
mov
cmp
and
add
sub
jb
test
mov
repz
loop
xor
std
pop
ss
cmc
in
pusha
jg
inc
insl
ja
pop
lret
fcompl
mov
mov
bound
adc
aam
pop
out
pop
mov
cmp
imull
dec
int3
sbb
outsb
push
into
aam
cli
jmp
sub
add
jae
jle
bt
xor
sbb
and
aam
jno
jae
and
scas
or
jp
ss
test
ficoms
mov
ret
sub
xchg
adc
je
pop
xlat
push
push
sbb
dec
leave
jmp
cmp
lcall
mov
pop
mov
sbb
ret
jns
mov
jecxz
xchg
daa
push
pusha
push
xchg
ds
jecxz
imul
insl
pop
or
sbb
jmp
stos
jg
dec
ret
jp
mov
xor
in
adcb
sbb
xchg
fnsave
jg
push
test
push
insb
loopne
push
sbb
sbb
mov
pop
leave
jbe
xchg
ss
inc
mov
dec
or
mov
push
push
pop
leave
dec
xchg
fldl
mov
scas
das
mov
xchg
outsl
jmp
lea
movsl
and
adc
mov
cltd
mov
sbb
mov
aam
cmp
inc
mov
test
in
mov
push
mov
xchg
cli
sub
lods
mov
lcall
add
insb
into
dec
lahf
clc
int
mov
jmp
ja
mov
xor
pop
test
imul
mov
mov
and
push
mov
pushf
adc
rol
xchg
sub
jge
or
pop
dec
fucomp
andb
pop
ret
adc
sbb
sbb
xchg
and
lret
pop
das
lock
xchg
fistps
mov
mov
sbb
jl
or
data16
fnstsw
sbb
jecxz,pt
jg
aad
jecxz
mov
ja
inc
push
or
pop
jns
inc
mov
jg
out
and
test
mov
mov
cmp
mov
sarl
mov
les
stos
pusha
clc
ds
dec
fildl
out
in
dec
nop
ret
mov
push
push
pop
add
lea
dec
mov
ja,pt
push
aad
adc
inc
mov
sub
outsb
or
add
or
mov
xchg
mov
loop
adc
fdiv
push
mov
cmpl
or
in
mov
push
outsl
fstl
addr16
icebp
add
icebp
gs
jo
dec
stc
int3
push
rcrl
push
fdivrs
out
addb
or
daa
mov
cld
lock
xor
outsl
inc
sbb
inc
add
xchg
imul
dec
add
lcall
fisubl
cmp
dec
push
nop
dec
adc
lcall
fistpll
inc
dec
out
mov
mov
lock
das
in
in
ja
imul
xchg
daa
popf
insb
and
ds
mulb
stos
inc
roll
aaa
lcall
js
bound
pop
and
daa
mov
stos
aam
mov
cmpb
je
subb
ret
push
cmc
jp
packuswb
in
sarl
add
fwait
aam
loope
xchg
popa
mov
mov
or
adcl
inc
subb
add
cwtl
out
inc
gs
inc
dec
xor
sbb
nop
mov
add
es
pushf
nop
push
xor
cltd
insb
call
push
cmp
and
rcll
adc
ds
repnz
cmp
inc
push
popf
jle
std
iret
mov
stc
outsl
enter
mov
cld
mov
pop
stos
scas
cmp
les
add
pop
sbb
shlb
lcall
outsb
inc
mov
imul
mov
push
push
push
push
xor
sub
sub
fs
and
jge
imul
insb
push
aad
inc
or
mov
or
adc
fwait
add
mov
mov
or
sti
es
cltd
lock
jae
cmpsl
cmp
lcall
dec
sub
loopne
pop
push
adc
inc
std
mov
int3
lret
scas
push
mov
add
insb
mov
imul
pop
insl
stos
int3
xor
es
lcall
bnd
sub
sbb
sub
lcall
nop
jl
enter
adc
imul
arpl
dec
lods
arpl
mov
add
add
dec
into
xor
cmpsb
sbb
pusha
xor
test
pushl
sarl
inc
xchg
mov
jns
xchg
sti
cmp
sti
inc
jge
imul
inc
inc
push
les
push
aas
pop
ret
mov
mov
ficoms
gs
add
mov
mov
mov
fwait
stos
pusha
fisubrs
jl
cmp
rcrb
gs
mov
nop
out
in
loop
pop
sub
sub
lea
cmc
jmp
mov
sub
pop
mov
mov
push
sbb
sub
mov
mov
mov
sub
or
es
leave
xchg
xchg
cmp
and
jno
mov
xchg
lcall
inc
push
lret
mov
aad
push
pop
outsl
sbb
mov
pop
adc
xchg
hlt
jns
pop
aam
fsubl
dec
cmp
fimull
mov
or
lds
mov
cmpsb
or
jmp
mov
pop
fldl2t
in
add
pushf
sbb
rolb
and
clc
inc
sbb
imul
fstpt
mov
mov
xchg
add
pop
in
cmp
ret
inc
pop
sub
jecxz
mov
adc
adc
jns
loopne
lret
sbb
mov
stc
or
into
imul
mov
sbb
loope
xor
pop
mov
jo
mov
pop
inc
cmpsb
std
mov
add
int
sbb
lret
mov
je
test
imul
mov
movsb
pop
enter
pusha
out
cmpsb
pop
dec
dec
lcall
es
dec
push
and
or
mov
lcall
sub
loope
xchg
scas
int3
fnstenv
pushf
push
jo
add
mov
mov
pop
aad
jle
dec
aad
fdiv
mov
mov
xchg
cs
sbb
jns
cmp
dec
adc
jno
adc
subl
addr16
mov
push
lea
dec
out
add
out
inc
daa
jo
repnz
mov
or
sub
in
and
dec
add
ss
or
lcall
out
mov
loope
push
cmp
adc
rolb
inc
jge
sub
cltd
mov
cmpsb
das
cwtl
mov
pop
pop
xor
test
imul
sub
push
stos
outsl
loopne
insl
sub
mov
mov
jp
test
pushw
pop
or
test
jno
mov
mov
cmc
je
dec
inc
into
mov
out
sysret
cs
cmp
fs
lds
fisttps
sub
sbb
jle
inc
push
pusha
sbb
dec
sahf
aaa
aas
shrb
cmc
jge
push
rcrl
inc
outsl
iret
cmp
in
xchg
jnp
inc
or
mov
in
pop
mov
jmp
test
ja
push
ret
leave
jmp
test
mov
daa
lods
sub
loopne
add
jno
sub
dec
sahf
mov
mov
jnp
and
popf
fdivrl
sti
loopne
out
fdivrp
jne
je
nop
mov
fdivrs
mov
movsb
insb
pop
xchg
add
insb
aaa
inc
adc
pop
aam
fbstp
sub
daa
mov
call
negb
adcl
sbb
mov
inc
jmp
xchg
jmp
inc
and
push
jb
inc
clc
test
in
push
and
lock
mov
mov
and
inc
aaa
sbb
lcall
and
repnz
nop
xchg
mov
mov
lret
cli
orps
fidivrs
sbb
cld
in
inc
scas
jge
pop
xor
push
test
dec
mov
fdiv
jmp
mov
push
fdivrp
cltd
fdivs
dec
cmpsl
sbb
mov
fbld
and
or
mov
pop
out
clc
and
adc
dec
icebp
and
nop
daa
inc
push
lods
pusha
mov
pop
cmpb
stos
push
xchg
xchg
ret
push
add
adc
mov
shlb
and
inc
mov
or
daa
in
mov
and
cltd
gs
mov
cwtl
stos
lret
dec
insl
jmp
shl
in
jae
imul
push
out
stc
dec
aas
pop
jne
pop
mov
adc
popf
loope
adc
fadds
repnz
xlat
mov
sbb
shlb
nop
int
pop
sbb
inc
cmpb
divl
gs
xchg
mov
std
aam
into
scas
sub
inc
jae,pt
in
fwait
rclb
rcrb
push
sti
cmp
jnp
lock
mov
jnp
mov
mov
jecxz
in
sub
pop
mov
push
xchg
sbb
adc
xchg
ss
fwait
les
pop
fadd
in
mov
dec
xchg
test
dec
ret
dec
pop
fdivrl
cmc
pop
push
rclb
pop
sbb
popf
scas
push
imul
sahf
or
inc
xchg
push
mov
clc
rorb
scas
xchg
cmpsl
adc
popa
andl
insl
and
mov
shll
xor
and
cli
xchg
mov
pop
pop
xlat
push
jno
outsb
jae
cmp
mov
test
mov
pop
or
int
aas
sub
xor
mov
mov
ljmp
fcompl
xor
lods
test
fnstenv
mov
xchg
xchg
stc
mov
movsb
or
sub
push
xlat
sahf
ret
cmpl
lahf
xchg
pusha
push
mov
pop
cmc
fisttpll
mov
add
repz
lahf
push
cs
jae
es
fnsave
pop
push
nop
push
rcll
test
push
mov
sub
aaa
repz
ja
xlat
dec
loop
scas
mov
xorl
in
stc
in
inc
adc
aad
es
jp
cmpsl
stc
sub
mov
addl
cmp
mov
adc
push
test
loopne
or
jne
mov
pop
aaa
jmp
ja
lods
movsb
pop
mov
push
lret
or
jp
fstpl
sti
push
cmpsb
pushf
jge
mov
inc
mov
mull
push
insb
and
cmp
push
xchg
test
out
sub
xor
jmp
cwtl
dec
mov
in
movsl
jbe
and
push
test
xchg
push
enter
dec
mov
insl
call
je
ljmp
divl
outsl
cmp
sub
stos
shrl
fs
loopne
mov
loopne
mov
shlb
dec
jbe
fcmovnb
jp
movsb
movsl
push
into
rclb
cmp
hlt
push
dec
lds
and
lret
mov
sbb
into
cli
pop
cmpsl
push
sub
pop
dec
push
fsubs
cmp
ds
ja
sbbb
leave
mov
pop
aam
pop
pop
pop
sbb
rcrl
xchg
jmp
sbb
mov
cmp
lock
stos
mov
je
xor
xchg
pop
cmc
push
fwait
and
in
scas
arpl
sub
iret
cmp
jne
lahf
clc
test
ds
loopne
in
js
lock
mov
jbe
sbb
push
adc
and
adcl
js
or
ljmp
mov
movsb
aas
imul
mov
sub
pop
push
bound
std
movl
inc
lea
pop
jne
sub
dec
push
roll
into
ljmp
cmp
mov
ret
std
sub
cmp
push
call
inc
sbb
roll
lds
or
call
addl
iret
cltd
cmp
addl
ljmp
loop
cld
out
mov
sbb
and
inc
jl
push
jae
adc
aad
scas
js
repnz
mov
xchg
mov
jb
movsl
adc
insb
outsb
ljmp
jl
add
arpl
outsb
cmp
aam
inc
cmp
pop
jl
vpmadcswd
pop
or
sbb
int
ss
pop
cmc
cmp
or
call
ja
xchg
popf
iret
insl
sti
inc
cltd
xchg
out
in
lcall
inc
es
std
jmp
push
fdivl
xor
pop
movsb
ret
push
jle
xchg
jns
in
insb
sub
ss
jb
popf
pop
lods
inc
mov
jl
pusha
push
xchg
stos
test
aas
test
cwtl
in
pop
mov
dec
jnp
sahf
cmp
lds
enter
imul
scas
mov
add
pop
cmpsb
stos
cmp
fs
mov
ret
pop
stos
xor
pop
pop
arpl
rorl
mov
xor
pusha
ret
lret
stos
shll
inc
ljmp
leave
xor
pop
out
inc
pop
ds
hlt
imul
icebp
jne
por
imulb
ss
mov
roll
jg
andl
cmp
loopne
bound
add
fidivrs
aad
push
mov
push
pop
pop
mov
push
popf
sti
and
cmp
mov
adc
or
ljmp
mov
jg
aas
dec
mull
or
mov
cmp
rcrb
xor
and
fstps
insb
lds
sub
jl
push
sti
cmove
fsub
mov
repnz
and
popf
scas
ljmp
loop
hlt
pop
add
dec
inc
fistl
pop
in
push
and
movsl
xchg
lea
jo
mov
sbb
fbld
das
mov
pop
mov
in
mov
jae
add
lods
push
xchg
lock
fdiv
stos
pop
mov
out
cmp
fadd
mov
mov
in
outsb
sbb
lret
fcomi
les
add
inc
add
movb
test
ficompl
dec
call
js
xchg
and
pop
mov
inc
xchg
aad
in
mov
xchg
lds
outsb
pop
mov
aas
xor
mov
das
mov
daa
xchg
movsl
psubq
popa
pop
fiaddl
fldenv
lock
les
imul
mov
fdiv
mov
inc
dec
dec
xor
and
cmp
push
cmp
rolb
adc
mov
adcb
mov
pop
xor
jp
daa
dec
jbe
sub
add
inc
inc
adc
loope
jp
sub
xor
mov
add
xchg
std
imul
aad
cmp
aad
sahf
fwait
mov
cltd
pop
sub
xlat
adc
cmpl
mull
mov
scas
xor
movsb
jg
cmp
push
mov
push
in
nop
in
push
xor
sub
into
jl
out
add
in
and
add
into
outsl
cmp
mov
fsubs
fiaddl
loope
push
add
test
test
push
fidivs
cs
sbbl
sti
neg
pop
ss
push
mov
into
and
out
cmp
iret
popa
mov
cmpsb
mov
testb
loopne
out
lret
addb
add
fldenv
cli
fdivl
cli
xor
in
aad
jne
xchg
push
mov
std
stos
bound
and
repz
push
push
inc
sub
xor
fs
sbb
mov
les
mov
repnz
mov
pop
std
and
daa
je
or
dec
inc
je
add
sarl
adc
pop
aad
aaa
adc
push
dec
mov
rol
and
loope
fnsave
mov
icebp
sbb
icebp
out
sub
ljmp
gs
out
sub
ss
mov
imul
mov
mov
push
das
in
xchg
addb
add
outsl
dec
adc
jae
add
es
push
inc
cwtl
and
les
pop
stc
pushf
ror
and
inc
xchg
mov
ret
repnz
leave
adc
das
in
addr16
pop
sbb
loope
push
out
adc
sbb
push
mov
lret
push
adc
mov
add
or
js
jg
pop
shlb
inc
fnstsw
add
sbb
pop
dec
jle
cwtl
loopne
ret
inc
mov
jae
fcmovu
pushf
xchg
cs
adc
mov
sub
xor
ret
sub
fs
cld
out
xchg
lcall
mov
mov
jmp
xchg
movsl
mov
shrl
aam
and
loopne
jns
out
cmp
jnp
data16
test
sub
icebp
fistpl
ja
adc
or
rcr
neg
daa
cmpsb
jge
mov
cmc
out
shrb
sbb
pusha
fisttpll
push
inc
mov
xchg
test
add
shlb
icebp
mov
push
dec
xchg
fdivrl
jle
lods
adc
cmpsb
movsb
or
dec
adc
jg
mov
add
cmp
jnp
cmpsl
add
inc
mov
push
cmc
dec
cmpsb
sbb
dec
int
cmp
mov
mov
das
lret
or
arpl
jnp
inc
lret
pop
push
sbb
adc
repnz
cmp
frstors
bnd
shll
addr16
xor
loopne
push
ret
cmpsl
dec
mov
cs
inc
jecxz
mov
aas
jmp
mov
cmp
in
call
jbe
cld
notb
add
and
sub
pop
adc
mov
imul
leave
push
fidivs
jns
fwait
xchg
addr16
ss
mov
and
mov
mov
ja
xlat
adcb
inc
xchg
mov
inc
pop
sub
fildll
iret
arpl
jmp
fadd
popa
repnz
mov
adc
fucomp
adc
and
ljmp
mov
fldl
xchg
cmpsl
xorb
hlt
fisttpll
arpl
add
push
fsubl
imul
ds
sbb
fcmovne
sbb
out
cli
sbb
xor
in
adc
xchg
and
mov
xchg
pop
sarl
add
repz
mov
shlb
subb
hlt
sar
ret
push
mov
or
jno
lods
mov
cmp
es
pushf
fmull
orl
xchg
mov
cli
mov
or
push
push
inc
push
xor
pop
out
pop
nop
mov
xor
mov
js
ficompl
fiaddl
cwtl
dec
loopne
push
loope
iret
movsb
sarb
dec
divb
mov
push
and
mov
ja
sarb
mov
sub
sar
jp
stos
into
push
pop
fstl
cmp
pop
add
mov
es
orl
jnp
rcrb
mov
xchg
cmpsl
inc
scas
cli
and
inc
sbb
test
rcrl
sub
cld
jbe
insl
shlb
or
mov
aaa
add
push
and
mov
jp
xor
mov
cld
mov
xchg
loopne
xor
subl
dec
jecxz
adc
push
or
test
mov
pop
mov
mov
test
mov
xchg
inc
push
mov
cmp
mov
testl
movups
int
xchg
sarl
hlt
leave
push
in
sbb
or
shl
sub
push
adc
jo
test
filds
sahf
push
ljmp
xchg
xor
xchg
xor
imul
ret
push
gs
dec
push
pop
adcl
jle
mov
push
jmp
sti
push
out
and
shl
mov
push
and
push
jg
adc
add
sub
in
fnstcw
cmp
shll
bound
popa
ror
fadds
outsl
int
sub
xor
sbb
sub
pop
mov
jne
xchg
adc
mov
mov
data16
or
push
push
sub
cmp
dec
lcall
adc
cmc
sub
sbb
lret
mov
out
rcrl
stos
xor
enter
int
mov
mov
jg
xchg
out
out
loopne
sbb
xlat
fwait
stos
int
and
arpl
xor
xorb
adc
sub
dec
or
adc
sub
jmp
mov
push
mov
ja
pop
push
ffreep
pusha
arpl
pop
data16
cwtl
sbb
es
ja
jns
clc
adc
xchg
inc
das
sub
or
movhps
mov
cmpsb
push
sbb
xchg
cmp
mov
cld
jg
repz
mov
mov
aad
add
int
cmp
dec
hlt
arpl
pop
xchg
pop
push
enter
lcall
into
dec
enter
pop
adc
lods
mov
add
or
test
dec
jmp
fsubr
pop
aaa
cmp
mov
inc
pop
mov
dec
dec
xor
aad
mov
in
dec
icebp
cmpsb
sarb
inc
int
dec
fsts
rclb
mov
lcall
xor
fstl
in
ja
push
push
jecxz
jns
out
out
dec
add
jecxz
inc
mov
push
adc
sbb
jo
sub
dec
sahf
lcall
aam
jno
loope
loope
mov
outsl
xor
jmp
mov
cmp
sahf
leave
xchg
outsl
imul
repz
bound
jo
js
enter
repnz
mov
jno
push
in
jo
lods
xor
sub
out
jl
mov
in
paddusw
dec
inc
sbb
ds
fcmovbe
out
call
xchg
jb
dec
sbb
jmp
pop
xchg
rorl
and
mov
outsb
cmp
ds
lock
out
stos
aam
jecxz
inc
scas
jno
pop
jg
clc
andl
nop
cmp
xchg
ret
enter
push
mov
cmpb
cs
push
mov
mov
pop
popf
cmc
in
xlat
sub
push
out
inc
push
fsubrs
out
out
mov
imulb
xor
dec
lahf
popf
cmpsb
push
cmc
test
jnp
loope
xor
pop
lock
je
data16
in
addr16
fisubl
les
mov
out
mov
cmp
sbb
pop
cmp
fbstp
lret
iret
outsb
testl
imul
and
and
mov
in
xchg
push
sbb
ss
sub
gs
fcoms
clc
in
outsb
mov
xchg
sbb
mov
push
dec
pop
adc
lds
mov
mov
push
jno
out
loopne
pop
testl
and
xor
cli
or
loopne
add
outsb
repz
push
inc
xorb
adc
sbb
pop
fs
add
andl
popa
push
mov
cmp
lods
jb
nop
mov
ret
rorb
lahf
sub
mov
pop
mov
and
stc
jbe
shrb
stos
adc
sbb
mov
rorl
inc
in
pop
mov
xor
and
leave
push
adc
cmp
mov
lcall
fdivrp
pop
lds
clc
push
sbb
scas
mov
dec
insb
loop
cli
notl
lahf
les
aam
bound
out
ds
or
dec
mov
cmp
jmp
out
pop
sub
adc
pusha
push
push
sbb
add
divl
xchg
aam
sbb
lds
xor
inc
mov
jmp
sahf
jnp
ja
ret
cmc
sub
xchg
fisttpl
fsubs
and
mov
testb
fwait
xor
pop
icebp
push
and
push
push
mov
push
adc
dec
test
xchg
movsl
enter
add
mov
aam
cmc
ret
mov
push
enter
mov
or
sbb
inc
lods
fwait
add
jg
mov
xor
repz
rol
out
mov
and
ja
adc
mov
int
xchg
xchg
lahf
pop
xchg
jge
jae
jns
ljmp
fsubs
sbb
clc
pop
adc
js
add
mov
pop
xor
push
or
jecxz
hlt
or
jno,pt
adc
fs
cmp
inc
xchg
mov
negl
fbstp
cmc
mov
sub
mov
gs
fcomip
int
xchg
xchg
scas
pop
inc
push
insb
push
add
cmc
jge
jne
dec
lods
std
hlt
lods
fcomi
xchg
fldenv
inc
in
jp
mov
mov
roll
mov
mov
cmp
call
inc
adc
mov
rorb
insb
mov
sbb
hlt
push
in
sbb
pop
sub
mov
sahf
in
add
sahf
cltd
sub
push
fs
push
cmpsb
inc
jmp
cltd
pop
test
iret
push
add
ds
in
iret
or
stos
repz
rorl
lea
pop
cmp
addr16
push
dec
ficoml
imul
enter
lahf
sub
mov
cwtl
and
pop
js
pop
lret
add
pop
vcmppd
aas
xor
pop
push
dec
fstpl
pop
xchg
dec
scas
mov
dec
pop
rcl
sub
add
pxor
hlt
scas
rclb
xlat
cmp
mov
push
jb
mov
mov
int3
out
jge
decl
leave
push
mov
pop
lret
mov
mov
aam
int3
jmp
mov
xor
jno
lret
jbe
rclb
loop
sbb
sbb
js
insb
dec
cs
xor
push
mov
loope
lret
lret
inc
pop
cmpsw
int
mov
dec
add
adc
adc
scas
sub
mov
dec
icebp
or
or
mov
push
dec
jne
imul
jns
push
je
mov
push
loop
xorl
out
addl
mov
mov
scas
push
pop
lods
and
xchg
aas
mov
mov
les
push
mov
jge
dec
xchg
lea
lret
and
push
pop
lcall
das
push
inc
cmp
clc
rcrl
frstor
cld
test
imul
jne
lret
mov
in
pop
rclb
adc
sti
pop
aas
pop
lret
arpl
pand
sub
inc
cmpb
cvttps2pi
xlat
in
rorl
push
push
xchg
jnp
push
loop
cld
cmp
lods
mov
cli
and
push
out
negb
scas
loop
cmp
cwtl
or
dec
mov
ja
mov
rcll
ret
ret
mov
jecxz
fisubs
call
arpl
and
lods
in
mov
test
clc
inc
mov
fsub
pop
jae
mov
es
aas
jl
fsubs
xchg
mov
jne
fistpl
sarb
popf
jns
or
ljmp
or
shll
hlt
out
xchg
sbb
xor
loopne
outsl
push
ds
das
mov
cmp
or
pop
adcb
loopne
xchg
or
mov
dec
test
pushf
test
jmp
mov
test
cmp
sub
sbb
push
bound
mov
mov
xor
fwait
ret
mov
pop
cmc
outsl
and
dec
dec
loopne
xchg
loop
inc
push
sahf
cmp
leave
pop
cld
lea
sub
repnz
adc
repnz
cmp
je
mov
mov
dec
aas
mov
push
fdivrl
js
bound
push
jge
lods
push
cmp
imul
push
mov
lock
rcl
movsb
mov
pop
jg
cmp
loop
cltd
aas
xor
jecxz
and
call
adc
add
push
sahf
cmpsl
lods
sbb
inc
je
or
jns
xchg
inc
jae
ljmp
nop
inc
mov
dec
ja
sub
or
pop
std
fcoml
mov
or
fisttpl
push
roll
test
pop
mov
mov
dec
das
lea
cmp
mov
bound
cmc
mov
ret
in
loope
imul
pusha
xlat
adc
mov
stc
cmpsb
push
sub
mov
sarb
jae
lcall
inc
or
jnp
or
lret
pop
push
ljmp
or
in
int3
dec
dec
xlat
loope
mov
mov
repnz
nop
imul
in
fs
daa
jb
outsb
lcall
sbb
in
lods
lds
imul
lcall
mov
stos
lcall
dec
call
test
test
sub
sub
mov
cwtl
pusha
enter
ret
pop
mov
adc
aam
or
mov
mov
lea
and
mov
cwtl
add
xchg
sbb
js
mov
adc
push
xchg
jp
xor
jmp
mov
fsubrs
pusha
dec
jnp
inc
out
fldt
jb
push
adc
hlt
pop
shl
repnz
and
imul
pop
sub
pop
or
xchg
and
pop
add
pop
popa
ror
arpl
fistpll
jno
adc
adc
adc
test
and
into
cmp
ret
jmp
nop
sub
scas
mull
mov
sbb
lods
cmp
test
adc
repz
movsl
inc
mov
jg
mov
shl
int3
adc
cmp
js
jecxz
addr16
jns
lods
inc
lds
fnsave
xchg
jg
stc
sahf
and
cmp
push
stos
dec
xor
push
outsb
and
dec
pop
mov
lock
movsb
jmp
pop
test
cmpl
data16
push
or
bound
pop
bound
js
into
ds
lock
xchg
movsb
lods
inc
lcall
jo
inc
cmc
out
inc
cmp
dec
and
cltd
sbb
jnp
jns
mov
cmp
lret
pop
fisttpll
pop
enter
push
mov
sub
sub
push
inc
or
je
sub
dec
adc
adc
test
decb
fs
test
pop
sbb
jo
dec
add
lods
cltd
sbb
xor
cmp
test
pop
fucomp
dec
ret
pop
and
into
nop
aaa
dec
repnz
mov
adc
mov
inc
push
or
cli
lock
pop
jo
ror
inc
add
imul
jmp
popf
xor
jae
dec
dec
lret
fcomps
pop
push
cmp
ret
idivl
adc
div
scas
add
dec
mov
jle
push
and
mov
in
add
pop
shll
ficoml
or
hlt
testl
mov
faddl
arpl
call
mov
and
lcall
dec
add
lahf
into
xchg
push
addb
in
xchg
ficoml
outsl
inc
add
imul
lcall
adc
lcall
aas
fnstsw
adc
fistpll
mov
stc
iret
adc
test
pop
push
jecxz
js
inc
roll
cmp
or
sub
mov
gs
dec
add
dec
xchg
sahf
mov
jge
les
mov
daa
mov
pop
into
sti
orl
shl
ss
test
adc
sarl
std
xor
cmc
test
cs
dec
jno
xor
adc
push
pop
in
jge
jo
rcll
jge
xchg
shrl
out
int3
cmp
pop
jnp
je
hlt
dec
xchg
sbb
and
ficomps
shll
nop
mov
js
xor
xchg
adc
xlat
fwait
lcall
nop
mov
inc
pop
lea
pop
int
mov
jbe
in
repz
push
sbb
scas
ljmp
cld
inc
push
lock
test
outsb
cmp
mov
mov
sub
in
sub
add
repnz
imul
push
movb
xchg
sbb
xor
insl
popa
loop
xchg
sub
adc
cmp
mov
mov
mov
cmp
imul
and
lods
add
dec
mov
and
dec
in
xor
out
cli
inc
addr16
out
cwtl
mov
movb
jg
sbb
sub
mov
mov
push
insb
lods
inc
adc
dec
leave
rcl
lea
gs
hlt
sub
cmc
jge
xor
xchg
mov
inc
fdivl
adc
js
inc
das
add
ficoms
inc
pop
sbb
inc
xlat
xor
push
out
test
cmp
cmp
add
or
fwait
and
and
adc
js
fisubs
hlt
in
outsb
mov
and
push
mov
xor
stos
inc
sbb
shr
movsb
pop
push
fldenv
and
mov
into
push
test
add
lret
cmp
dec
push
call
mov
inc
fnsave
pushf
rclb
cmp
pop
orl
xchg
xchg
iret
and
iret
aaa
pop
test
cli
xchg
push
repnz
push
pusha
stos
pop
imul
pop
and
mov
insl
push
aas
add
test
rorl
aas
jmp
xlat
in
popf
lods
insl
adc
xor
xchg
jmp
in
cwtl
or
movsl
dec
std
dec
stos
mov
jb
aas
lret
lods
fwait
add
mov
push
mov
das
shrb
jb
cmc
popf
fisttps
lea
jb
test
out
mov
sbb
ret
test
imul
mov
jl
pop
cmc
mov
lods
dec
mov
push
mull
jmp
cwtl
sub
fildll
lods
xor
mov
xor
leave
sub
fsubr
mov
sbb
mov
fwait
and
repz
dec
push
incb
sbb
js
add
mov
rcrb
xchg
cmpsb
movsl
inc
xor
pop
clc
mov
dec
adc
lock
mov
pusha
in
aas
std
jns
stos
pusha
cli
mov
cli
xor
fs
out
pop
shl
pop
or
lods
pop
les
mov
push
fbld
testb
in
mov
cmp
enter
pop
jbe
aad
fidivl
or
sub
inc
fcomps
pop
fidivl
mov
and
pusha
add
xchg
adc
decl
ret
into
rclb
cwtl
leave
ficompl
mov
fcomi
movsl
out
and
les
cmpsb
and
mov
gs
arpl
mov
call
int
inc
addb
sbb
adc
aaa
or
or
in
and
sub
frstor
inc
mov
mov
cmp
nop
sbb
insb
test
sarl
mov
adc
test
in
mov
hlt
mov
stos
lods
add
xor
and
add
jns
shlb
jge
cmp
fdiv
mov
and
mov
in
pop
popf
daa
xor
xchg
add
inc
jae
mov
call
pop
cmpsl
rcl
in
mov
sbb
xor
xor
xor
insb
cmpsb
mov
xor
sahf
incb
sbb
fs
mov
mov
jl
repnz
addr16
cmp
ljmp
xchg
and
jne
sbbl
and
stos
loop
sub
sbb
sub
rol
aaa
jmp
jae
pop
adc
js
rol
daa
es
cmc
inc
pop
je
mov
fdivrl
andl
es
push
push
push
mov
mov
cmp
push
outsl
dec
sub
xlat
ja
xor
and
mov
iret
cmp
and
stos
mov
pop
mov
cmp
call
adc
cltd
shrl
test
fstl
fwait
jb
inc
les
movsb
out
imul
ret
fcomps
sub
or
lods
movsb
or
sbb
add
mov
sub
sub
cmp
jmp
mov
and
fwait
sub
bound
daa
in
enter
inc
xlat
rorb
adc
dec
cmp
mov
sub
sbb
dec
ss
or
mov
shrl
leave
aas
mov
jne
xchg
lahf
pop
rorb
and
inc
cwtl
in
cmp
mov
mov
pop
push
jb
dec
pop
lock
repnz
mov
ror
cmc
add
add
add
addr16
in
or
div
popf
ret
lods
std
lret
adc
cmp
xor
insl
andb
out
add
icebp
pop
mov
cwtl
mov
dec
repz
inc
aas
sub
ret
scas
push
mov
adc
test
aad
imul
ficoml
cmp
shll
lcall
pop
jne
cmp
filds
leave
iret
xor
pusha
pop
jbe
push
push
or
or
and
mov
xchg
push
push
dec
add
lea
bound
js
fstl
push
loope
jne
test
and
mov
lock
pusha
jl
push
push
sub
mov
jae
js
loope
into
int
xchg
mov
cmp
lea
ds
fmuls
xchg
shrd
xlat
sub
inc
sub
or
pushf
mov
clc
jecxz
sub
ljmp
aam
insl
jo
cwtl
adc
dec
frstor
push
insb
es
jmp
fadd
into
mov
iret
lret
dec
add
fmul
mov
or
cmp
nop
mov
mov
mov
inc
adc
mov
loopne
jg
enter
cmp
xor
cmc
mov
mov
fiaddl
enter
std
addl
mov
mull
inc
jb
xchg
inc
stc
int3
lods
mov
xchg
loope
in
or
rol
push
sub
ss
jnp
rorb
ret
xchg
jbe
xor
jne
mov
or
cwtl
incb
and
popf
popa
push
and
or
into
popa
cli
cmp
adc
data16
fistpl
dec
fiadds
push
jp
inc
jg
push
inc
push
mov
push
add
mov
jb
sub
pop
cmpsl
nop
or
fs
mov
dec
dec
sbb
mov
rcr
imul
fstpt
lods
adc
shlb
adc
jmp
or
xchg
push
out
mov
and
jae
dec
nop
sub
mov
push
test
mov
outsl
cli
xlat
lret
cmc
jmp
jne
mov
mov
cmp
test
mov
xchg
movsb
sbb
hlt
xchg
mov
inc
cli
ret
pop
scas
mov
into
jbe
outsl
loop
cmpsb
loope
fbstp
pop
lret
aam
fsubrs
fsubl
sahf
sti
lds
jmp
add
or
outsl
mov
mov
push
mov
mov
stc
stos
divl
movsb
ja
aam
shlb
jl
lahf
cwtl
mov
dec
push
sbb
test
mov
outsb
stos
jnp
loopne
cltd
sub
cmpsl
stos
jecxz
xchg
adc
icebp
and
push
cmpb
inc
std
pop
fwait
cs
outsb
popa
mov
sbbl
lods
mov
mov
and
jb
sbb
idivb
insl
or
nop
addr16
push
pop
loopne
push
adc
cwtl
sub
pop
sbb
jg
int
aaa
inc
and
xchg
addr16
push
xor
cmp
jo
inc
or
pusha
pushf
icebp
sub
rcrb
fmull
adc
push
icebp
mov
fdivrl
dec
iret
or
iret
jmp
outsb
in
mov
xchg
xor
repz
jge
sbb
cmpb
loopne
sahf
push
adc
push
fwait
cmp
dec
push
sub
lcall
outsl
sbbl
lret
sti
mov
xor
xchg
jb
push
cmpl
js
add
stos
mov
or
rorb
stos
popa
dec
fdivs
push
sahf
cltd
shrl
aaa
mov
xchg
cmp
es
pop
xor
cwtl
ret
scas
andl
mov
popf
push
sub
int
inc
test
fsubr
sti
inc
jecxz
in
clc
pop
ds
pop
fs
adc
shrb
gs
fwait
lods
clc
pushf
outsl
mov
repz
inc
cmovp
in
jge
bound
fstl
jbe
cmpsb
sbb
xchg
sbb
leave
mov
mov
out
lret
xlat
fcmovu
jecxz
and
pop
mov
ss
ljmp
or
fnstcw
inc
xor
adc
cmp
rol
dec
mov
ret
hlt
pop
loope
push
fwait
xchg
pusha
repnz
mov
ljmp
jbe
lds
lret
mov
or
stos
fnstcw
in
xor
mov
cmp
pop
xor
dec
andb
xor
lds
adc
dec
rolb
push
pusha
add
sbb
xor
add
ds
mov
lcall
add
mov
pop
test
scas
popa
in
adc
cmp
stos
inc
lahf
jle
jecxz
icebp
or
aas
jnp
and
dec
dec
cmp
imul
mov
pop
cs
jmp
loope
popf
push
aaa
stos
xchg
mov
jge
aas
out
ja
cmpsb
push
inc
movsb
sahf
movsb
xchg
inc
cs
iret
mov
and
sbb
aad
fadd
aaa
jg
and
sti
push
xchg
add
fmull
lret
int
stc
dec
mov
mov
add
mov
shlb
mov
xor
add
inc
push
popa
lock
xchg
int3
inc
mov
and
hlt
repnz
push
repz
xchg
testb
push
adc
mov
imul
add
stc
cld
mov
mov
call
cli
popa
pop
pop
stos
cmc
or
mov
outsb
xchg
cmpsl
neg
mov
adc
mov
lret
cmp
fisttpl
and
inc
dec
sub
das
add
aas
sub
or
cld
mov
ja
sub
mov
out
es
add
mov
test
outsb
cmp
mov
shlb
movsl
fcmove
xor
jno
mov
jge
icebp
in
and
pop
lret
pop
push
push
pmullw
cltd
out
pop
push
movsl
adc
fstl
aam
addr16
dec
sbb
push
test
shl
jae
dec
nop
add
push
cmpsl
jne
adc
cmp
jne
jle
mov
in
xchg
lcall
push
aas
in
faddl
fsub
loop
fisttps
and
mov
aam
sub
movsb
or
pusha
dec
nop
stc
fcoms
jbe
jg
inc
add
push
xchg
xor
mov
mov
outsb
mov
fs
adc
push
push
les
scas
inc
jb
xchg
dec
mov
and
xchg
and
push
mov
xchg
ret
push
mov
lret
sahf
arpl
mov
push
loopne
das
sbb
add
and
lcall
mov
inc
lahf
xor
daa
xchg
adc
fisttpl
loope
xchg
cmp
div
shl
jb
mov
mov
nop
pop
dec
sub
and
ss
jnp
jle
push
fldl
fwait
add
ficoms
gs
insl
nop
out
adcb
out
lds
inc
std
mov
push
mov
sbbl
inc
daa
mov
push
mov
mov
ja
sahf
add
ja
loopne
xchg
jg
jge
dec
mov
lea
movsl
dec
push
add
das
int
aaa
or
mov
ss
mov
std
sti
mov
cmp
fisubs
movl
frstor
jns
out
jle
insl
fistpll
and
mov
cmc
sti
fisubrs
sbb
dec
adc
fisubrl
dec
push
scas
mov
fsubrl
pop
mov
xchg
rorb
or
cltd
ss
add
xchg
sub
test
dec
sub
scas
sahf
cmp
movl
mov
jb
xor
bound
cs
xchg
push
ja
ljmp
out
mov
add
sub
ja
stos
sub
sub
in
sti
xchg
cltd
inc
out
cmpsb
popa
inc
jae
sahf
daa
inc
clc
mov
sub
inc
mov
subl
fildll
scas
mov
push
popa
or
inc
dec
jmp
push
fsubp
sbb
fisubrl
cmpl
outsb
pusha
mov
fs
mov
xchg
push
mov
add
aam
cmp
mov
pop
ret
sub
clc
or
mov
outsb
ret
adc
sub
mov
movsl
or
movsl
pop
loopne
scas
mov
pusha
mov
int3
daa
ds
mov
loopne
js
or
shl
out
lds
rolb
ljmp
jecxz
adc
jmp
adc
jmp
cltd
lcall
cmpsl
jnp
sub
inc
sub
aam
mov
mov
imul
movsl
mov
scas
out
push
adc
unpckhps
and
mov
adc
ljmp
lahf
xor
fidivl
enter
mov
dec
mov
jmp
out
pop
cld
or
jnp
mov
pop
cmp
sahf
mov
cs
aas
jmp
stos
cmp
xor
inc
inc
jo
fs
shrl
xchg
decl
cmp
imul
dec
jg
shrd
add
push
fcoml
fldcw
int3
enter
add
rolb
call
and
insl
negl
inc
stos
scas
dec
nop
jecxz
inc
pop
xchg
inc
cmp
sbb
and
repnz
orb
insl
cli
mov
scas
jo
fcompl
andl
adc
jo
movsb
push
outsb
xchg
jle
jae
adc
fsubs
lea
sub
js
xchg
in
fsubr
movsl
in
jae
fadds
and
in
mov
sbb
sub
inc
pop
inc
lcall
inc
jmp
xorl
xor
les
dec
std
dec
add
inc
in
aad
mov
mov
xor
loop
mov
push
pusha
adc
xchg
mov
gs
ret
lds
repnz
clc
adc
jp
fistpll
rolb
popa
jno
scas
insb
dec
jno
sub
loopne
insl
fnstenv
cmpsb
icebp
inc
add
pop
in
stos
mov
outsl
xchg
jp
stos
push
push
adc
xlat
outsb
in
add
mov
mov
shl
cmp
push
test
push
xchg
divb
icebp
in
sahf
imul
imul
repnz
push
pushf
mov
push
add
movsl
stos
xor
cmp
loopne
in
nop
and
cmp
lahf
mov
and
mov
loopne
and
push
jb
pusha
inc
mov
bound
jo
stos
mov
xor
jae
sub
emms
test
ret
push
push
fstpt
aaa
sbb
cwtl
cltd
push
test
les
sbb
jnp
mov
and
pop
hlt
add
xor
xchg
xchg
out
pusha
fstps
iret
inc
sub
mov
movsb
add
cli
outsl
inc
adc
clc
jnp
into
mov
lock
sbb
ds
mov
movsb
xor
xor
xchg
xchg
rcrl
xchg
fistl
pushf
shrb
leave
add
insl
push
mov
push
cmpsb
loopne
aam
cmpsb
dec
adc
jo
das
loop
inc
hlt
aas
ljmp
fisttps
pop
sbb
xchg
mov
fsubr
fs
std
add
adc
pop
cmpsb
mov
cmp
shl
push
or
add
adc
cmp
sub
xor
mov
hlt
js
sbb
lds
fildl
xchg
lret
aad
shrl
and
add
outsl
sbb
outsl
sub
shll
dec
in
ret
mov
sahf
sarb
dec
cmp
jne
sub
stos
and
adc
in
call
adc
or
ret
jle
xchg
adc
into
jo
sbb
lret
lea
push
mov
xchg
movsb
call
mov
sbb
es
int
scas
xor
cmp
mov
xchg
xchg
xchg
ja
rcrl
cld
loope
adc
push
jp
mov
mov
cli
repnz
xor
add
je
dec
in
mov
loope
push
or
movsb
adc
add
mov
je
add
in
xor
mov
push
cmc
inc
out
scas
xchg
mov
push
pop
outsb
or
jmp
mov
ds
sahf
or
sub
inc
addr16
dec
add
push
adc
out
push
pop
shl
push
push
push
adc
dec
push
in
imul
jbe
loope
test
daa
jp
dec
test
cli
inc
pop
inc
jecxz
add
and
and
iret
cli
mov
arpl
insl
decl
xor
jl
and
mov
repz
scas
je
ja
sbb
mov
xchg
xor
stos
daa
and
movsl
push
fs
or
push
rorl
gs
mov
inc
movsl
mov
cld
xor
insl
push
repz
dec
xchg
mov
mov
jnp
insb
test
sarl
cltd
test
xchg
frstor
loopne
lcall
sub
inc
jns
and
outsl
inc
push
or
mov
cmp
push
scas
sub
das
stos
jle
cli
loope
out
mov
mov
stos
mov
pop
fdivs
push
or
inc
aad
xchg
cmpsl
jbe
and
push
mov
std
push
rorl
imul
xchg
mov
adc
adc
incl
pop
mov
test
adc
popf
sub
ja
mov
mov
dec
pusha
in
push
inc
repnz
jae
mov
imul
lds
fisttps
xchg
inc
push
xrelease
jns
mov
in
sub
lcall
leave
shlb
mov
jmp
into
or
cltd
pop
xchg
inc
xchg
imul
nop
jne
cltd
mov
imul
shlb
cwtl
lods
xor
jge
cld
lahf
lds
popf
cld
xchg
scas
shlb
sbb
pop
sbb
fidivrl
adc
fcoml
sub
int3
lcall
push
dec
cwtl
fnstcw
dec
pop
lcall
lds
push
fwait
inc
inc
cwtl
or
jo
mov
xlat
xor
insb
fcmovbe
ds
pop
cld
pop
adc
je
fnstsw
enter
cmpsb
mov
push
ffreep
cmp
jmp
xor
ret
inc
cmp
and
inc
push
lds
insb
pop
jl
mov
add
enter
call
or
push
test
cmpsl
jp
sub
lret
pop
cmp
mov
lods
adc
rcr
xchg
movsl
je
mov
ret
mov
test
push
int
pop
data16
ljmp
mov
out
inc
hlt
mov
add
xor
rorb
lret
fcoms
sahf
lods
je
pushf
cmpsb
shll
push
call
mov
loope
push
jne
fdivrl
add
pop
dec
into
imul
jmp
lea
cs
sbb
jecxz
mov
pop
in
push
nop
and
outsb
outsb
out
jns
xor
jg
xor
std
pop
andl
pop
leave
test
or
stos
test
repnz
xchg
psubusb
sbb
iret
test
pop
jnp
adc
fsub
dec
fs
shrl
xchg
pop
je
inc
sub
out
jne
xchg
jbe
xchg
ljmp
in
cmc
push
mov
mov
mov
sub
xchg
fnstsw
insb
loope
int
dec
xor
ja
ficompl
cmp
sbb
sbb
adc
pop
push
fnclex
in
fcomi
iret
mov
or
pushf
lahf
nop
mov
mov
lahf
push
pop
xchg
or
inc
adc
jmp
mov
lret
cmp
andl
adc
xchg
cltd
inc
das
int
lods
mov
mov
jns
pop
ds
xchg
in
xchg
and
adc
loopne
xor
jbe
and
push
mov
ret
push
aaa
or
mov
add
dec
addb
and
in
pushf
dec
mov
dec
dec
outsl
cmc
imul
mov
xchg
mov
fcompl
lods
xchg
ljmp
in
push
inc
cmp
jmp
clc
loopne
push
sbb
jae
std
clc
dec
addb
dec
shrb
fdivrl
jae
mov
adc
mov
pusha
xchg
lods
add
add
gs
aas
mov
sub
push
or
xchg
pop
push
dec
dec
dec
cmp
inc
mov
mov
dec
mov
inc
inc
push
pop
push
dec
push
and
cld
cmp
test
dec
or
xchg
cmp
jo
push
or
bound
jmp
push
push
mov
out
imul
imul
xor
fld
test
sbb
or
je
outsb
xchg
add
pop
cmpsb
bound
shlb
mov
dec
and
es
jb
or
lahf
enter
sti
iret
jp
movsl
sub
roll
inc
push
inc
pop
jp
int
and
idivl
push
pop
xchg
dec
mov
xor
popa
sti
dec
lcall
cmp
aas
clc
and
xlat
cmpb
imul
in
add
aad
push
add
les
out
jg
fcomip
call
fisubrs
ficoms
mov
outsl
mov
out
out
jp
fisubrl
and
mov
jle
mov
add
inc
jp
cmp
ja
sub
je
loope
cs
dec
fdivp
in
sbb
fisttpll
hlt
aad
mov
loope
in
dec
dec
ret
outsl
pop
scas
xor
push
fsubrs
jg
fmull
or
fisubrl
pushf
outsl
inc
aaa
sbb
add
sbbl
imul
adc
clc
addl
hlt
dec
prefetch
outsl
cltd
cwtl
test
adc
lcall
mov
out
icebp
lea
sbb
int3
popf
dec
int3
pop
mov
stc
sub
push
pop
cld
jno
and
inc
adc
andl
xchg
cmp
push
jg
dec
sub
add
push
adc
push
and
inc
adcb
mov
rcr
lret
out
aad
sbb
jecxz
cmp
fwait
dec
shlb
cmp
ja
sbb
loop
jno
mov
sbb
stos
push
sub
cld
fldcw
movsb
xor
pop
faddl
mov
cmp
jge
pop
inc
jle
dec
jmp
fisubl
jne
insb
sbb
push
xorl
pop
mov
aad
mov
push
popa
mov
cmp
mov
in
ss
les
xor
into
lea
das
movsb
jmp
cmp
cltd
inc
out
inc
test
orl
out
push
cld
xchg
pop
inc
xor
jl
xchg
inc
insl
fisttps
insb
sbb
test
xor
aam
inc
in
xor
sbb
fisubs
inc
pusha
loop
cmp
out
js
jl
adc
pusha
pop
lahf
movsl
sub
aas
xchg
clc
inc
xchg
xor
hlt
sarl
movsl
sub
outsl
outsl
dec
jle
sub
stc
sbbl
and
jmp
test
popf
jb
dec
mov
incb
ficoml
lds
cmp
repnz
arpl
icebp
jecxz
inc
mov
iret
lods
lret
mov
daa
pusha
popa
and
push
lahf
fsub
xor
in
mov
or
mov
lret
xchg
repz
sahf
mov
in
aam
mov
push
mov
cmp
mov
and
mov
or
cmp
fdivrs
in
dec
ds
lret
je
pushf
sub
ret
pop
cmp
sbb
xchg
iret
push
adc
inc
addr16
cmp
sbb
inc
stos
mov
cwtl
push
cmp
enter
inc
mov
in
pop
les
repz
push
add
dec
mov
out
aas
mov
mov
sub
test
dec
add
dec
jo
cltd
enter
pop
inc
add
mov
shlb
xor
xor
cmp
mov
xchg
imul
sahf
mov
das
push
pop
mov
push
adc
mov
adc
mov
xchg
in
dec
jb
inc
push
addr16
inc
jl
jae
andl
popa
fwait
cmp
mov
sub
fbld
pop
dec
jo
cmpsl
lods
outsb
or
xchg
es
jb
or
andb
add
lea
lock
or
pushl
cli
mov
into
sub
cwtl
addr16
mov
loopne
xor
mov
push
jbe
popa
in
orb
std
cmpb
xor
repnz
in
jns
lods
add
ljmp
push
push
std
mov
jecxz
ror
sbb
nop
xchg
ljmp
push
test
gs
cltd
jo
pop
pop
stos
cmp
mov
imul
xor
inc
or
out
mov
scas
idiv
outsl
in
fistpl
xchg
shrb
and
sbb
xor
sub
loopne
add
adc
fwait
xchg
inc
in
mov
sbb
fildll
rolb
xchg
mov
aad
adc
mov
adc
popf
push
jl
mov
push
popl
add
movsb
xchg
out
enter
lods
movsl
dec
mov
xor
mulb
push
mov
sti
cmc
mov
sbb
or
test
lret
ss
xchg
loopne
out
rdtsc
sbb
test
xor
adc
add
or
scas
leave
sub
mov
ss
aas
mov
pop
mov
cwtl
js
jg
xchg
xchg
push
jmp
mov
std
jmp
in
imull
aad
adc
and
stos
popf
adc
ret
adc
mov
cwtl
and
sub
dec
dec
pop
out
or
popf
out
outsb
insb
adc
sbb
pusha
loop
cmp
adc
mov
mov
loopne
add
stos
lock
outsb
mov
jnp
insl
mov
xchg
fldcw
or
mulb
int3
lods
push
jnp
fsincos
mov
pop
cmpsl
jno
arpl
repnz
enter
dec
sub
ja
mov
mov
add
dec
inc
stc
aas
es
rol
mov
scas
aam
popa
add
addr16
fldt
into
out
and
or
cli
push
xor
pop
fcomps
ret
pop
in
arpl
xor
dec
enter
xchg
insl
movsb
dec
sbb
out
push
fadd
stos
rolb
or
lret
cmp
lahf
cld
jecxz
xor
stos
pop
sbb
push
mov
das
mov
xor
inc
xchg
fnsave
data16
dec
inc
sub
das
inc
jno
sub
in
repnz
inc
ss
jbe
mov
push
movsb
adc
dec
fisubrl
pushf
or
xor
and
dec
cmp
sub
fcomip
js
and
add
adc
out
add
cmp
dec
rcl
push
push
mov
add
or
loopne
cmpb
out
dec
xchg
int3
loop
cli
iret
hlt
sbb
popa
mov
sbb
sub
xchg
mov
das
std
rcll
inc
sub
es
mov
push
int3
insl
pop
cli
shrb
cmp
fldl
hlt
iret
xor
sub
mov
jae
jge
lods
inc
ret
mov
movsb
fwait
psubd
jo
xchg
inc
andb
lods
mov
lea
mov
pinsrw
inc
jno
pop
and
inc
inc
pop
add
push
enter
mov
mov
xor
mov
inc
mov
push
pop
rorb
mov
std
sahf
lret
dec
cltd
scas
jmp
dec
pushf
sub
std
sti
stos
aaa
xor
xchg
mov
filds
push
xchg
adc
add
mov
loope
das
popf
aaa
lret
sbb
push
cli
push
and
repz
cltd
xor
lahf
push
je
aad
push
outsb
push
loopne
leave
push
or
ljmp
out
shl
pop
adc
out
push
mov
pop
push
lds
in
call
scas
data16
enter
shl
addr16
adc
in
push
push
mov
sub
or
and
aas
mov
das
shll
icebp
xor
add
sub
mov
cmp
pop
cli
insl
or
jno
in
or
je
cmpsl
out
cwtl
insl
sub
inc
mov
bound
jne
pop
outsb
scas
sarb
sub
aaa
cltd
xor
sub
dec
divb
shlb
xchg
dec
jo
pop
sarl
xchg
xor
loop
ret
sbb
mov
psadbw
lds
stos
loopne
call
popf
add
xlat
inc
je
dec
pop
mov
fstl
cld
sarl
dec
ret
adc
dec
pop
jl
pop
add
ja
sub
push
insb
lds
idivl
shll
xchg
lods
mov
adcb
cli
xchg
das
cwtl
mov
sahf
cmp
mov
mov
sbbb
pushf
fs
hlt
xchg
cmpsl
cli
out
mov
jnp
xchg
cs
xchg
stc
mov
mov
aad
jecxz
rorb
subl
sbb
cmpsb
or
sbb
adc
jg
fidivl
add
push
xchg
inc
inc
das
mov
jne
adc
cmp
mov
adc
ja
hlt
fisubrl
ftst
mov
mov
mov
pop
adc
pop
sub
bound
mov
mov
lods
sahf
mov
ja
je
xor
mull
outsb
aad
adc
pushf
jle
dec
and
je
rclb
repnz
les
and
adcl
aad
outsb
mov
enter
sub
test
adc
inc
in
cli
mov
or
xchg
sub
cmpsb
cmpb
mov
lods
mov
sbbl
add
daa
lret
xlat
bound
mov
stc
jle
enter
addr16
jns
out
fstps
daa
outsb
sub
inc
mov
push
inc
fdivrs
xor
ret
shll
test
jno
out
jp
loop
stos
xor
mov
or
pop
or
subl
push
pop
stos
sahf
sub
int
add
test
xor
xchg
ja
mov
nop
std
xor
cmp
sbb
and
pop
jne
jo
out
pop
icebp
mov
dec
jmp
xchg
xchg
lea
add
test
jge
or
mov
mov
sub
jno
mov
not
jne
mov
and
xchg
cld
mov
aad
or
cmp
fs
push
mov
mov
inc
mov
dec
mov
xlat
and
repz
mov
mov
pop
clc
mov
mov
outsb
sub
sub
loopne
loope
fnstcw
cmp
test
sub
arpl
add
sbb
cwtl
mov
aaa
fnstcw
ficompl
jp
sub
adc
mov
pop
das
inc
cwtl
dec
pop
cmpl
hlt
push
dec
fld
push
push
mov
pop
push
jmp
loopne
lods
scas
rorb
ds
int
xchg
adc
sahf
push
fwait
sub
lods
out
fisttpll
lahf
pop
sbb
cld
dec
lock
sbb
or
pop
ret
xchg
imul
cwtl
push
inc
cmpsb
xchg
loopne
mov
mov
or
push
out
jb
pushf
sbb
inc
xchg
sti
push
adc
imul
adc
fcom
test
mov
push
lcall
fbld
push
scas
cld
decb
mov
xchg
mov
mov
cmp
test
pushf
clc
jno
cmpsb
sbb
xor
mov
shlb
mov
xor
inc
jmp
cmp
adc
dec
pop
lret
or
mov
lcall
push
daa
sbb
xchg
in
fcoml
repz
arpl
cmpsl
mov
fimuls
lock
imul
mov
jmp
clc
jns
lock
daa
sti
in
adc
mov
daa
xchg
push
insl
js
xor
bound
sti
nop
sbb
cmpsb
jmp
fcoms
or
subl
push
jmp
inc
bsr
lods
mov
mov
inc
dec
fcom
imul
cmp
mov
dec
sub
orl
adc
js
xor
inc
out
addr16
push
loop
push
in
aam
dec
add
aas
sbb
jmp
xchg
jecxz
cmpsl
je
xchg
adc
mov
test
ret
push
jnp
mov
out
mov
popa
mov
mov
push
loop
sbb
and
push
stc
pop
xor
cmp
dec
mov
movsl
idiv
mov
push
push
std
dec
jecxz
aad
roll
or
rorb
fiaddl
mov
jmp
idivb
ss
inc
xor
sub
lods
sbb
stos
pop
xor
adc
cmc
outsl
ret
lret
jnp
lret
dec
jae
pop
out
lds
push
test
dec
sbb
add
into
js
imul
mov
pop
cmp
add
repz
lret
sbb
cltd
test
aam
xchg
jge
aas
lret
fidivrl
cmp
out
ljmp
inc
cmp
sub
rorb
aam
gs
xchg
pop
xlat
cld
daa
inc
xor
mov
dec
int
sub
daa
inc
xor
clc
dec
lea
sahf
xchg
shrl
jecxz
jmp
in
xchg
movsl
stc
arpl
loop
push
mov
int
push
jne
stos
fimuls
and
stos
loopne
pop
sbb
enter
insb
nop
xchg
push
add
cmp
xor
push
xor
into
cwtl
repz
lss
or
dec
sbb
xchg
inc
xor
ud2
insl
push
mov
addr16
gs
sub
sbb
out
cmpsb
outsb
mov
jmp
mov
fstpl
bound
and
ret
pushf
dec
sub
sbb
mov
std
mov
sub
test
outsl
pop
dec
jae
divb
je
add
ficoml
sub
fcmovnu
and
adc
mov
jge
xchg
mov
mov
mov
loopne
adc
lods
cmp
mov
aas
icebp
fbld
loopne
mov
mov
jg
das
lahf
lock
xchg
and
stos
lea
sbb
sbb
or
xchg
cmpb
nop
adc
clc
add
push
ja
mov
ljmp
add
test
fdivrl
cmpb
imul
imul
mov
movl
dec
ret
and
shrl
inc
pop
push
pop
rorb
and
sarl
push
iret
push
pop
test
leave
mov
or
test
xchg
lret
sub
aad
nop
fbld
fs
mov
outsb
mov
push
and
ret
in
xchg
sarb
test
mov
xchg
lcall
test
popf
insl
or
pushf
sbb
mov
mov
pop
sub
call
rol
add
dec
inc
rep
mov
push
adc
or
or
fucom
bound
popf
sbb
insb
mov
or
and
lahf
mov
or
movsb
je
xor
pop
js
lea
fwait
pop
imul
mov
shlb
pop
and
dec
jo
push
shrl
ss
lds
cmpb
dec
incb
shlb
stc
inc
fidivrs
ret
es
xor
pop
jecxz
pop
in
frstpm(287
mov
lcall
aad
push
mov
subb
dec
aas
xchg
mov
xchg
push
add
push
lret
cwtl
int
mov
dec
mov
cmp
ret
int3
icebp
mov
cli
scas
mov
bound
adc
fimuls
sub
and
fwait
lret
addl
jp
dec
pop
aaa
cld
dec
testl
pop
jns
sbb
lahf
or
fcoms
insb
xchg
mov
adc
sbb
out
jg
adc
pop
jno
mov
shl
add
outsb
ret
and
pop
test
fstps
adc
insl
sub
fnsave
movb
xchg
mov
mov
sub
sbb
or
imul
mov
or
ja
iret
shll
cltd
std
xchg
addr16
cmp
out
dec
mulb
imul
pop
dec
sub
or
loopne
out
lods
and
rcrl
push
rcl
sti
jns
jp
loope
jle
dec
mov
addb
pop
dec
fs
mov
js
gs
inc
rolb
pop
inc
xchg
aad
aaa
data16
or
pop
push
sbb
subl
mov
mov
outsb
add
clc
out
lea
aad
push
push
add
mov
jg
or
int
mov
test
sbb
or
jecxz
xchg
lret
push
scas
dec
movl
and
mov
push
jae
cmp
xchg
lods
pusha
mov
add
lods
ljmp
mov
scas
pop
sbb
xor
addb
stos
and
inc
adc
lahf
rol
add
aad
int
aas
fildll
jl
xchg
lods
jno
add
push
inc
fcmovbe
xor
dec
mov
and
mov
js
mov
sub
pop
fwait
ja
mov
repnz
jecxz
fldln2
insl
shlb
test
inc
mov
cmp
push
sbb
push
arpl
popa
je
and
inc
xor
popf
and
ret
mov
xchg
inc
cmp
or
jl
ds
and
inc
cwtl
repz
ss
xchg
jecxz
into
es
adc
and
and
outsl
daa
cmpsl
sbb
push
call
shlb
add
cmpsl
xchg
xor
ljmp
sbb
fucom
sub
faddl
ficomps
jns
jno
sti
and
cld
or
dec
inc
inc
pop
orl
jge
mov
jle
sub
or
std
hlt
lds
insl
addr16
inc
dec
andl
loopne
push
out
lods
mov
cmpsb
dec
push
clc
int
in
and
fwait
call
inc
stos
xchg
movsl
outsb
jl
dec
xlat
inc
aam
or
sub
shrl
ljmp
aad
lret
or
in
mov
cs
aam
pop
adc
pushf
xor
lods
divb
sub
movsl
dec
aas
xchg
out
imul
mov
mov
lahf
adc
imul
push
mov
iret
and
mov
scas
cld
ror
dec
stos
add
imul
lods
xchg
jne
xchg
out
sub
adc
lods
jo
fldl
pop
nop
std
jae
sahf
inc
jb
jnp
data16
rcrl
adc
out
test
adc
insb
imul
cltd
push
jecxz
inc
or
xor
lcall
pop
out
cld
dec
subl
mov
xchg
stc
iret
xor
sub
outsl
add
std
dec
xor
mov
stos
sub
mov
dec
mov
mov
and
dec
sbb
adc
jb
iret
mov
pop
pop
pop
loop
dec
lds
out
sub
add
lods
or
adc
and
movsl
imul
adc
sub
adc
mov
push
mov
jo
das
rcrl
xlat
jo
mov
xchg
jae
aam
inc
dec
cmp
inc
xchg
dec
test
mov
cmpsb
int3
in
mov
popa
xor
int
inc
vpaddusb
out
das
std
mov
ret
dec
inc
aas
jb
lahf
iret
push
mov
or
xchg
sbb
js
push
and
leave
sbb
ljmp
push
mov
mov
ds
in
loop
sahf
mov
arpl
adc
movb
test
fmull
push
inc
mov
pop
xchg
xchg
mov
xlat
jns
loopne
mov
jge
lods
in
outsl
sub
sub
sub
js
aam
outsl
lea
dec
sub
scas
mov
scas
sbb
xlat
inc
js
xchg
pop
icebp
pusha
adc
or
leave
cltd
rcll
sub
dec
int
outsb
sti
enter
sarl
sub
rcr
lret
fimuls
jo
inc
dec
or
pusha
out
mov
hlt
lret
mov
dec
cmpsb
fs
sbb
sub
pop
out
addr16
cs
pusha
bnd
das
ret
pop
andl
xchg
add
cli
xchg
loopne
cmp
sub
imul
xchg
dec
mov
xchg
mov
mov
or
pop
pop
test
sahf
mov
clc
sbb
outsb
jp
daa
or
sarb
push
jae
enter
mov
mov
rorb
adc
or
xor
dec
adc
or
pusha
xor
pop
or
mov
push
lock
insb
dec
inc
jp
jno
stos
insb
stos
mov
xchg
mov
repnz
sub
loop
mov
xchg
or
mov
mov
push
mov
cmpsb
dec
cmp
push
add
mov
fnsave
sub
dec
mov
loopne
adc
mov
loop
jp
imul
sbb
jmp
data16
aam
dec
lcall
inc
dec
scas
pusha
daa
add
xor
out
cmp
cmpsl
mov
cmp
orl
jge
ror
sahf
ljmp
mov
mov
pop
or
fs
loop
les
cmp
cmc
push
loop
inc
cmp
das
mov
pop
pop
mov
and
stos
or
jp
inc
and
dec
sahf
iret
jo
int
mov
jl
sbb
or
inc
pop
dec
mov
cld
cmc
push
fs
cmpsl
lret
xchg
inc
mov
test
mov
mov
adc
fbstp
sbb
jg
jmp
cmp
test
ret
mov
cmp
dec
mov
mov
cli
scas
ret
xor
inc
ficomps
test
pop
lcall
pop
pushf
movb
cmpsb
xchg
lret
lret
addl
jns
xor
mov
inc
jbe
int3
scas
cmc
lret
mov
jg
ret
test
rcr
push
les
and
and
xlat
push
adc
ja
mov
push
and
xlat
mov
clc
mov
pop
pop
jle
mov
stos
push
gs
xchg
cltd
pusha
push
fld
mov
xorl
or
push
inc
xlat
out
pop
lods
stos
adc
cmpsb
ret
mov
xor
sbb
sub
mov
jne
xchg
xchg
adc
imul
jo
xchg
and
sbb
into
xchg
xlat
pop
cmp
out
repnz
cld
xor
cmp
pop
scas
imul
sahf
pop
aad
sbb
mov
and
std
ljmp
xchg
and
adc
push
sub
or
push
push
or
jno
jbe
xchg
xor
cmp
mov
cmp
jp
sbb
sbb
lcall
movsl
test
xchg
sbb
faddl
xchg
pop
mov
fmul
mov
fs
notl
aam
push
out
cmp
daa
aaa
mov
ja
xor
fidivrs
mov
push
inc
mov
shr
xchg
pop
sub
fcom
push
jmp
xor
push
push
and
sub
mov
dec
out
mov
push
and
std
cmp
jp
fidivrl
mov
and
int3
sub
and
mov
pop
xchg
aaa
sub
pop
pop
scas
push
or
pop
enter
or
jb
add
sub
mov
jae
push
inc
cmp
sbbb
sbb
jle
cmp
cli
into
push
inc
je
sbb
lret
mov
dec
xor
dec
and
xor
rcrb
push
cmp
mov
leave
insb
cs
repz
insl
jb
cmp
sbb
loop
das
xlat
mov
scas
mov
adc
imul
or
cmp
sub
dec
sahf
stc
sti
test
mov
shl
lods
clc
adc
push
xor
jge
inc
sbb
adc
pop
adc
add
or
xor
mov
jmp
or
mov
pop
inc
pop
mov
and
sub
inc
or
jmp
popa
hlt
add
lds
or
xorb
cmp
sub
sbb
outsb
negb
add
mov
enter
cli
xor
jle
jae
and
imul
ret
aad
ljmp
inc
jl
out
xchg
fdivl
stos
outsb
pusha
xchg
leave
cs
add
jmp
jo
mov
sub
inc
in
stc
mov
push
out
ret
lahf
and
xor
fldcw
neg
fwait
pop
xchg
mov
fwait
mov
lods
push
push
adc
mov
add
inc
inc
mov
stos
lret
sarb
and
es
lods
jnp
repz
cwtl
rcll
adc
mov
mov
and
dec
negl
inc
out
push
repz
mov
inc
adc
das
inc
shll
push
in
mov
lock
movsb
lret
push
adc
cmp
enter
cld
add
aam
imul
cmp
pop
pop
mov
repnz
enter
ret
ss
inc
roll
sbb
jmp
leave
xchg
push
add
pop
jecxz
stos
enter
jno
cmovo
pop
loopne
mov
imul
jne
out
pop
je
fnstcw
jo
xchg
xor
jno
fldl
rorb
jl
xchg
or
pop
ret
sub
pop
es
sub
sbb
popf
xchg
popf
adc
cmp
xlat
dec
imul
fisttpl
push
sbb
dec
fsubr
lcall
rorl
sbb
les
js
lds
jb
out
aas
std
shll
stos
outsl
mov
mov
gs
js
jl
stc
xor
pop
dec
lret
push
movsb
in
cmpsb
clc
mov
ret
out
sbb
xchg
mov
mov
enter
sbbb
pop
mov
lds
or
cmp
in
dec
jns
and
mov
and
jnp
adc
or
xchg
push
fadd
fwait
add
xchg
sahf
jo
iret
aad
sbb
cmp
mov
push
mov
cmpsl
inc
jb
pop
pop
outsb
adc
add
lret
cmp
hlt
mov
aas
inc
ljmp
cld
scas
mov
sbb
mov
cltd
mov
push
fwait
adc
inc
add
mov
lea
and
scas
sti
xor
inc
out
es
jge
aaa
jnp
mov
jecxz
jp
push
adc
jecxz
imul
hlt
or
xchg
repz
outsb
shll
pusha
aas
cmp
shlb
lock
lods
dec
inc
mov
adc
pushf
xchg
xchg
sbb
in
mov
cmp
add
inc
cmp
sub
loop
stos
add
pusha
mov
imul
iret
xor
adc
mov
jo
sarb
jge
inc
outsb
repnz
push
ficomps
fadds
sti
ret
hlt
ja
mov
or
dec
mov
xor
andb
sbb
test
jecxz
mov
sub
jle
pop
push
in
enter
add
cmpsl
pop
mov
xchg
dec
sbb
fwait
mov
sbb
jne
movsb
fsubr
inc
syscall
pop
fwait
pop
rcrb
aaa
dec
and
sbb
sbb
dec
dec
mov
int3
mov
pop
xchg
aas
in
incb
push
mov
inc
pop
ljmp
int
pop
stos
mov
dec
pop
sub
dec
mov
sbb
mov
sbb
jb
add
sahf
sbb
adc
xor
mov
mov
push
int
jl
cltd
data16
mov
xchg
sub
ds
or
push
sub
dec
fmull
add
mov
das
ds
fstl
iret
bound
dec
fnsave
pushw
out
pop
lcall
cmp
arpl
push
cwtl
xchg
stos
out
scas
or
sbb
adc
pushf
aam
test
inc
loopne
inc
aaa
fs
dec
nop
std
add
call
jno
aad
or
hlt
test
rep
xor
hlt
cmp
pop
mov
mov
mov
mov
mov
push
jl
dec
inc
frstor
mov
or
jb
xchg
rclb
loop
daa
jmp
sub
mov
in
fs
fldcw
push
int
inc
ret
xchg
pop
es
loope
and
xlat
mov
mov
push
push
cmp
cmp
ja
lcall
mov
aaa
mov
push
insb
mov
fdivp
sub
inc
lds
jb
cmpsb
fucomp
sti
cmp
adc
mov
icebp
ret
jl
int3
mov
xchg
xchg
dec
xor
mov
sub
add
add
dec
mov
pop
fistpll
dec
push
out
pop
das
and
addr16
imul
repz
jnp
outsb
cmp
sub
leave
cmp
xchg
push
fisubs
mov
and
xor
cmp
movsl
out
mov
pop
imul
adc
mov
arpl
call
movb
push
cmp
cmp
jo
xor
popa
js
inc
push
inc
add
pusha
subb
and
stos
out
adc
bound
sbb
lret
pusha
dec
xor
aaa
push
pop
push
xor
mov
mov
icebp
test
xorb
shll
call
je
cs
mov
neg
ret
cmp
mov
adc
inc
mov
or
mov
mov
shll
mov
stc
xlat
or
mov
arpl
push
mov
jg
sub
es
popa
mov
test
or
cmc
nop
scas
enter
js
ret
pop
push
pop
test
int3
xchg
flds
or
out
js
cmpsl
adcl
mov
cmpsb
fwait
daa
adc
mov
jnp
mov
sub
popa
jmp
out
xor
hlt
jne
cmp
in
ret
movsb
das
push
jo
sbb
ja
push
cwtl
enter
xchg
sub
xchg
jns
mov
inc
addr16
sbb
rol
xchg
push
adc
subl
pushf
inc
rorb
inc
lahf
add
test
xchg
xchg
pop
data16
and
scas
test
cmp
cmpl
sqrtps
and
jns
fxch
fprem1
in
in
pop
fwait
push
in
or
daa
inc
lods
or
push
mov
rol
adc
data16
fsubs
adc
and
clc
pop
adc
mov
aas
jb
jo
xchg
mov
sti
push
adc
xchg
xchg
push
sbb
ss
push
jno
ret
rcrl
es
inc
ljmp
ljmp
jmp
push
cs
pop
sub
pop
test
lods
mov
fildl
pop
fsubrl
popa
fidivrs
add
mov
outsb
inc
jbe
popa
mov
jle
xchg
inc
inc
jg
insb
mov
rcrl
or
pop
xchg
aad
ret
cmp
fstps
and
push
nop
lods
in
into
or
xchg
xchg
sub
xchg
jge
push
jnp
aam
fisubl
loop
add
mov
sti
sbb
movb
add
jmp
leave
fildl
push
sub
mov
inc
and
adc
mov
aas
adc
cmpsb
mov
xchg
xor
xor
loop
xor
lret
pop
add
jns
loop
lds
cld
je
test
idivb
xor
push
lds
insl
aaa
push
jle
mov
pop
fwait
and
cld
xor
dec
xor
mov
push
pop
push
pop
sbb
fbld
mov
lcall
inc
cmc
addb
imul
shlb
xor
stc
lds
sub
lds
adc
fcoml
pop
jge
adc
jbe
call
mov
sub
sbbb
mov
iret
les
push
sbb
and
fisubrl
pop
jbe
int
lcall
lcall
pop
out
andl
jae
mov
add
cmp
imul
ret
xor
adc
and
lds
dec
cmp
fidivrl
push
imul
jb
repnz
stos
mov
cmp
jmp
push
push
sbbl
jmp
and
ljmp
mov
inc
divl
ds
mov
or
cmp
pop
jl
jb
dec
mul
stos
lret
outsb
out
int3
push
inc
add
mov
jmp
leave
orb
sbb
jb
sti
lods
lea
bound
mov
enter
mov
mov
lds
icebp
aas
ds
pop
mov
incl
mov
in
cmp
inc
mov
rolb
movsb
jb
lods
add
mov
cs
and
fdivl
adc
push
push
jns
cmp
popf
xchg
mov
cmp
pop
hlt
test
in
movsl
mov
ljmp
pop
add
ss
add
add
loop
jge
addr16
fistpl
bound
jnp
int
stos
data16
mov
lea
btc
ja
ret
add
or
sbb
mov
jg
dec
sbb
jno
ja
stc
jl
stos
in
add
xchg
loopne
adc
mov
loopne
call
sub
mov
outsl
or
inc
lds
jbe
movsl
subb
jne
and
mov
push
bound
push
or
push
xchg
sbb
rol
pop
arpl
daa
pop
mov
out
xchg
mov
push
sub
lret
pop
call
or
sbb
rorb
inc
jb
lahf
push
jae
and
out
cwtl
gs
xchg
and
pop
mov
repnz
jmp
jbe
loope
push
dec
push
adc
imul
jne
dec
xchg
pop
adc
outsb
or
jge
lcall
in
ljmp
xchg
imul
sub
sub
test
fldcw
and
ret
lcall
clc
lret
sub
sbb
rorl
xchg
jle
in
scas
cs
insl
popf
mov
in
sub
mov
ja
sarb
test
jp
ds
sbb
cmp
stos
jle
push
insb
sub
jmp
pop
jnp
sbb
sarl
daa
adc
outsb
sub
xchg
push
stos
repz
pop
daa
or
adc
dec
sbb
adc
adc
shrl
xor
out
aad
jae
fistps
xchg
shrl
mov
or
cmpsb
pop
jae
jp
inc
out
scas
xor
data16
fdivs
xchg
and
addr16
int3
call
icebp
test
movsl
xchg
sti
mov
iret
inc
int
and
jge
lcall
dec
xor
and
xchg
push
rorl
mov
dec
add
xchg
pop
add
mov
push
mov
ds
mov
mov
push
xor
or
and
jne
in
jl
mov
xchg
aas
sub
push
les
sub
cmp
mov
ret
sub
push
leave
movsl
inc
jmp
shll
mov
cmp
mov
xchg
jg
dec
cmpsb
rorl
and
mov
stc
aam
gs
inc
andl
xlat
pop
mov
mov
xor
pop
mov
cmp
cld
cmp
mov
dec
nop
ror
pushf
leave
push
mov
jge
jmp
jmp
inc
jb
push
shlb
cmp
scas
pextrw
cmp
xchg
addr16
test
mov
jne
push
cmp
cmp
insb
scas
xor
lea
ljmp
sbb
les
adc
notb
leave
testl
popa
rcrl
or
add
adc
test
sbb
lret
push
lahf
cmp
inc
pusha
cmp
int
adc
adc
addr16
movsl
fs
pop
ret
mov
pop
or
fldl
filds
mov
pop
les
es
sub
stc
in
add
icebp
mov
aam
out
das
ljmp
dec
shrl
or
and
cmpsb
mov
imul
sub
pop
mov
mov
pop
ret
std
movsb
mov
pop
mov
inc
mov
dec
lods
mov
push
cli
mov
mov
dec
sub
fs
scas
sbb
pushl
jns
add
cmp
ljmp
out
call
rolb
mov
js
sub
out
sbb
mov
out
mov
ret
jecxz
mov
stos
in
inc
xchg
fs
cmp
sbb
std
ja
jbe
int
or
lods
test
cwtl
push
or
dec
sarb
add
aam
pop
stos
xchg
lods
call
dec
push
dec
mov
or
int
sub
pop
jge
cmpsb
popf
pop
cli
loope
mov
cwtl
dec
xchg
pop
cmc
sub
sbb
std
mov
pop
adc
dec
rclb
ret
add
in
ja
xor
xchg
jmp
sbb
dec
outsb
pop
pushf
addr16
jp
sahf
push
xchg
xor
test
dec
insb
out
pop
shl
push
xchg
or
test
xchg
inc
mov
jmp
add
arpl
inc
mov
cmp
pop
sub
arpl
out
push
push
sbb
inc
popl
sti
ror
nop
dec
or
xchg
pop
inc
outsl
jne
in
mov
sbb
pop
and
movsb
pop
or
fimuls
sahf
sub
loop
cmp
sub
xchg
dec
outsb
hlt
sahf
or
movsb
in
sbb
xorb
push
es
and
adc
cli
mov
cmp
lods
lock
xor
out
cmp
sahf
xor
cmp
cmp
cmp
sub
sbb
ss
cs
push
lret
add
add
mov
cmp
or
movsb
stos
jae
and
lea
cmpsl
sub
cli
lahf
add
inc
sarl
adc
stos
out
cmp
sub
mov
or
push
aas
add
jo
test
adc
stc
cmp
mov
loope
lods
and
je
inc
out
cmp
imulb
xchg
xchg
lea
out
dec
push
xchg
push
pusha
push
pop
push
add
mov
jo
mov
call
test
xchg
adc
arpl
popa
loopne
mov
pushf
in
jb
mov
jns
ljmp
mov
movsb
push
rorb
push
adc
neg
test
incl
dec
push
sub
jg
stos
pop
pushf
fwait
in
dec
mov
into
jae
iret
in
pop
jno
xor
popa
pop
pop
adc
cmpsb
addb
push
add
cmp
adc
fisttpl
int
sub
rorb
push
dec
fstpt
lret
push
lock
mov
pop
ret
scas
xchg
sbb
insl
jp
push
shr
clc
xchg
mov
dec
in
inc
or
xor
xchg
outsw
sub
mov
rclb
lea
adc
repnz
xor
sti
dec
pop
orb
mov
fisubrs
rcl
and
xor
ljmp
and
outsl
stos
pusha
jl
int3
xchg
push
dec
cmc
jnp
mov
mov
mov
jbe
sub
mov
add
iret
lods
push
xchg
test
ret
add
aam
and
es
jecxz
out
xchg
mov
xor
jmp
fsubr
aaa
sbb
push
xchg
aaa
inc
fmul
lea
pop
shlb
jno,pn
in
addr16
fimull
xlat
ret
icebp
pusha
movl
mov
xchg
out
mov
ja
pop
sub
jl
aas
and
cmp
cmpsb
shrb
shrb
cmp
push
mov
xchg
inc
cld
mov
inc
fdivl
cmp
lcall
jno
mov
add
daa
movsl
inc
push
inc
and
pop
imul
push
loopne
int
icebp
adc
or
xor
int
rcll
jl
std
cld
fildl
adc
mov
movsb
shl
in
pop
pop
inc
outsl
aaa
inc
dec
andb
ret
test
mov
sub
xchg
movsl
adc
pop
inc
cmp
into
popa
dec
roll
push
imul
jo
mov
xchg
imul
je
orl
pop
sbb
mov
aaa
aad
mov
xchg
sub
mov
xor
cmp
sbbb
xchg
int
orb
imul
add
xchg
mov
sub
les
cmpsb
cld
fisubl
sub
cli
inc
jmp
mov
lods
and
pop
dec
inc
ret
pop
movsb
xor
pusha
add
pop
clc
insb
push
xchg
aam
inc
dec
inc
daa
push
inc
jns
aam
xchg
and
mov
ret
xor
add
inc
dec
rcrl
stos
ftst
aam
mov
repz
push
clc
dec
adc
lret
mov
test
push
fimull
mov
rclb
dec
xor
push
icebp
dec
xchg
xor
je
adcb
push
xchg
push
pop
cmp
imul
pop
adc
pusha
push
adc
filds
mov
push
adcb
mov
ficoms
mov
test
clc
dec
inc
push
outsl
adc
in
movsb
sub
mov
sbb
out
je
es
out
jno
imul
leave
cmp
std
push
leave
movsb
nop
mov
xchg
sarb
aad
mov
or
xor
insb
ss
iret
lea
pop
push
fcmovnu
insl
and
ljmp
or
lods
into
dec
mov
push
mov
push
mov
fwait
aam
in
sahf
test
je
xor
std
pop
mov
aad
mov
cs
sbb
enter
sbb
or
jnp
xor
shrl
lock
xor
scas
adc
repz
pop
mov
insb
subl
jno
test
sub
les
or
in
mov
aam
ja
lcall
mov
andb
pop
movsb
and
or
mov
cmp
cmc
aam
pushf
rcrl
repz
fdivrl
insb
mov
mov
and
out
repnz
loop
adc
in
mov
bound
ds
sbb
repnz
adc
xchg
gs
test
sbb
in
push
push
jl
jge
jmp
lcall
scas
pop
sarb
cmp
daa
or
add
sub
cmpsb
dec
add
inc
adc
movsb
inc
adc
jle
imul
mov
outsb
xor
sub
cltd
aam
sbb
mov
lds
or
and
cmpsb
mov
inc
dec
lret
push
stos
aam
fstpl
stos
out
xlat
inc
xor
inc
mov
adc
dec
pop
lods
ja
in
and
insb
push
out
push
or
dec
lret
jecxz
int3
mov
test
insl
sub
inc
xlat
fstps
or
sbb
ljmp
dec
int3
inc
add
jmp
or
xchg
and
push
movsb
lahf
push
cmpsb
jnp
sarl
insb
adc
mov
push
xor
push
sub
or
mov
or
sub
jne
dec
shll
les
mov
sbb
push
in
mov
xchg
add
fldenv
xor
lods
addr16
mov
mov
push
push
call
jmp
adc
pop
shll
addr16
les
push
push
mov
mov
add
frstor
xchg
int3
adc
or
out
sarl
test
add
mov
hlt
push
lcall
jno
daa
int
lods
fcomi
inc
cmc
iret
jnp
xor
lods
pop
sbb
xchg
lahf
dec
outsl
and
push
xor
decb
imul
push
sub
mov
out
lea
arpl
mov
push
lods
xchg
sbbb
xchg
mov
stos
popa
jmp
jb
cld
mov
imul
push
xor
mov
loop
arpl
add
insb
adc
sbb
test
aaa
and
in
sub
or
es
cmp
orb
out
cmp
ds
addr16
cmp
dec
dec
xlat
cmp
ret
insb
lret
dec
inc
jb
subl
add
sub
out
dec
daa
mov
lods
fnstsw
ja
mov
or
ud2
or
push
xor
cmpsb
popf
lea
xlat
out
push
push
adc
sub
testl
cmp
xor
push
mov
xchg
add
add
mov
inc
mov
sbb
scas
js
jl
pop
popa
xlat
mov
mov
cmp
ret
push
dec
fwait
jg
nop
pop
jp
sub
out
out
stos
mov
sub
mov
push
adc
sub
add
faddl
pushf
loopne
in
jae
fistpl
popf
jecxz
fisubrs
lcall
mov
lds
aad
cmp
lea
jge
xchg
inc
sub
push
mov
jecxz
test
arpl
hlt
mov
xlat
arpl
push
rolb
and
dec
or
imul
jp
cs
cs
sub
inc
xchg
mov
mov
pop
popa
and
pop
pop
xchg
out
stc
and
fsubr
imul
outsb
insl
push
pusha
dec
arpl
jmp
push
sbb
iret
leave
stc
lods
sbbb
cmp
add
addr16
lods
cmp
or
in
es
addr16
jmp
shrl
fmull
adc
cltd
cmp
add
ss
pop
lods
jnp
int
adc
adc
lock
outsb
jbe
dec
in
jle
mov
movsb
pop
shlb
sub
out
pop
push
or
arpl
push
push
push
loope
loop
and
push
shrl
cmp
jne
and
std
inc
movsl
adc
push
lcall
and
xchg
shlb
ss
sub
adc
inc
push
je
cs
scas
addr16
lret
jno
sub
cmp
jbe
pop
and
xor
push
data16
xor
nop
cmp
jle
adc
negl
mov
add
push
pop
xchg
ret
push
jmp
andb
imul
loop
les
nop
jae
push
mov
jbe
or
add
mov
sti
xchg
sar
add
dec
add
xlat
test
aad
lea
add
cmpsb
push
into
fwait
add
movsb
lcall
movsb
repnz
fistl
mov
js
testb
jp
shlb
or
cmp
or
jno
jl
sub
push
xchg
add
add
pop
cmp
jns
jno
xchg
lea
sub
mov
out
sbb
mov
out
outsl
mov
pop
stc
shrb
xor
jge
push
push
inc
rolb
fbld
lods
jnp
add
sbb
cmp
out
js
iret
jne
pusha
adc
call
or
ret
jmp
mov
xchg
lods
ja
lock
push
xor
sub
imul
mov
jb
mov
jno
mov
loopne
daa
mov
xor
out
mov
scas
mov
jo
das
popa
call
aad
jecxz
pop
xchg
fdivrp
popf
nop
mov
pusha
mov
pop
jne
pop
cli
push
jl
lds
sbb
jae
inc
pop
push
pop
out
roll
sub
stos
or
scas
rolb
pop
cmc
test
push
xor
test
cs
mov
sub
pop
mov
in
daa
insb
clc
daa
push
mov
insb
push
mov
push
inc
es
fstpt
pop
rorl
lods
push
daa
lret
cld
mov
dec
rolb
stc
mov
xchg
sbb
xchg
push
dec
js
xor
icebp
and
ret
xchg
shll
lods
dec
add
add
and
enter
in
in
scas
in
out
test
clc
mov
in
mov
outsb
mov
jg
or
movsb
dec
adc
dec
mov
rolb
mov
fnstcw
push
xchg
sbb
stos
rcll
je
mov
loopne
and
es
push
js
jecxz
jle
mov
jge
mov
aam
add
out
daa
pop
dec
xor
push
pop
aad
adc
idivb
repz
call
or
mov
mov
xor
es
add
or
pop
push
icebp
dec
in
inc
popa
test
rcll
pop
pop
mov
ja
icebp
dec
push
adc
sbb
je
shlb
mov
lds
ljmp
scas
push
adc
nop/reserved
popf
mov
and
or
cmp
pop
cmp
xor
aas
pop
loopne
scas
lea
push
xchg
xchg
cmp
sbb
dec
cmp
in
mov
ret
hlt
test
push
lea
scas
mov
dec
shlb
aam
repnz
add
dec
lret
mov
fcoms
outsb
push
aas
xlat
cmpb
out
jne
jne
insl
adc
mov
mov
test
fs
push
cli
imul
repnz
shlb
aas
mov
int3
and
push
cmp
enter
add
in
push
mov
cs
call
pusha
add
mov
in
es
in
fimuls
cltd
jmp
inc
push
xchg
xchg
and
jno
std
xor
lea
pop
jge
je
ret
lea
jmp
lds
cmp
outsb
movsb
dec
test
dec
mov
enter
push
pop
adc
sub
jnp
ljmp
dec
cwtl
dec
in
or
pop
paddusb
call
int
daa
icebp
xchg
gs
xchg
fmull
dec
test
std
sbb
mov
dec
jge
gs
inc
jmp
shrl
adc
pop
sub
movsl
xor
adc
sar
cmc
je
popf
scas
xor
aaa
cld
lods
push
scas
push
jb
and
lahf
push
and
inc
bound
stc
xchg
cli
insl
gs
pusha
cmp
leave
jne
bound
inc
sub
or
ffree
sub
dec
adc
ret
cmp
cmpsl
jno
push
data16
icebp
lock
inc
ds
mov
push
adc
or
cmp
inc
dec
hlt
pusha
imul
sub
ret
sarl
int3
jno
aaa
mov
lock
inc
or
frstor
pop
jmp
and
xchg
mov
jl
das
push
cmp
sbb
inc
cmp
outsl
cmp
andl
mov
push
je
push
inc
ljmp
pop
push
dec
outsb
xor
jle
add
inc
rcll
jge
arpl
cmp
in
add
dec
pop
int
lret
sub
and
in
sub
sbb
adc
xchg
jl
lds
std
jae
fwait
mov
pminsw
push
out
in
insb
dec
test
mov
pop
test
cmp
cmp
jae
sub
lahf
push
adc
sub
insb
fldt
adc
xchg
mov
or
or
xorl
test
leave
sbb
mov
popa
in
xchg
lcall
xchg
pop
ret
cvttps2pi
lcall
lods
add
into
cmc
stc
filds
call
add
stos
xor
movsb
dec
cmp
xlat
cmp
or
mov
add
mov
xchg
dec
loope
jb
dec
push
repz
pop
mov
adc
pop
pop
and
imul
loop
jnp
push
movsl
movl
fcoms
push
jge
icebp
jnp
gs
xchg
rcll
cmp
cmp
cmp
sub
nop
sti
in
test
jmp
movd
xchg
fs
xchg
cld
push
cmp
cmp
test
scas
fstpl
shlb
xchg
dec
cmpl
popf
int3
mov
jno
imull
mov
ficoml
cmpsl
fwait
mov
aam
add
pop
scas
in
add
les
inc
fstpt
test
in
lcall
imul
sbb
add
cmp
or
mov
test
ljmp
inc
test
adc
jecxz
call
sbb
imulb
je
rcrb
sub
imul
aas
lods
pop
or
pop
popl
sbb
outsl
sub
mov
and
loop
or
loope
push
pop
add
das
adc
dec
and
xor
sbb
ror
add
cltd
lret
loopne
out
call
movsl
lods
mov
jge
clc
xor
rcll
imul
shr
sbb
aam
xchg
ffreep
push
xchg
mov
jo
in
push
lahf
inc
aad
fcompl
movsl
iret
pop
jg
je
ficoml
sbb
pop
fadds
jne
imul
add
pop
int3
xchg
and
rcrb
iret
mov
inc
adc
or
lods
adc
mov
fdivl
jne
cmp
sbb
push
or
mov
lds
push
stos
aaa
push
push
ret
cmp
dec
mov
or
mov
into
mov
inc
mulb
jecxz
nop
sbb
stos
aaa
ljmp
imul
fimull
dec
cld
xor
xor
mov
test
or
xor
sbb
add
lock
fwait
sub
push
inc
xor
hlt
sti
cwtl
in
pop
imul
sbb
push
insl
push
iret
lods
jmp
cmp
fdivrl
lods
jle
negl
rorb
ja
jnp
push
sarb
incb
push
bound
jbe
and
cltd
pop
add
xor
mov
jle
arpl
sub
add
outsb
jle
in
cmp
call
pop
test
push
test
mov
test
mov
xor
cmp
xchg
lds
ret
mov
sahf
mov
cs
cmp
cmp
repz
stos
and
mov
inc
mov
ret
scas
jnp
mov
cmpsl
les
imul
stos
in
sub
int
repz
movsb
adc
popf
pop
fsubrs
mov
adc
cmp
cmp
mov
xor
das
push
sbb
cmp
jno
arpl
es
sbb
repz
stos
xlat
xchg
outsl
faddl
add
je
data16
inc
test
jo
xlat
loopne
or
pop
adc
out
dec
or
rorb
in
add
inc
push
icebp
les
lea
push
aaa
xor
push
jae
insb
int
insb
repnz
mov
mov
rcrb
out
jno
pop
sti
ss
sti
and
cmp
popf
xchg
jle
jg
mov
repnz
hlt
out
cmp
sti
repz
jnp
std
xor
das
aas
push
sub
sbb
lock
dec
in
mov
flds
or
ljmp
aaa
dec
outsl
sbb
xor
lea
in
mov
scas
or
in
dec
mov
nop
test
pop
mov
and
inc
mov
test
fsubp
jns
mov
xchg
sbb
add
pushf
mov
imul
pushf
push
rcll
sbb
mov
xor
test
cmp
int3
test
pop
ljmp
mov
mov
jp
xchg
cmc
dec
mov
pop
xor
add
pop
cmp
enter
in
negb
ret
mov
sbb
pop
mov
lods
test
outsl
cmp
adc
xchg
fwait
xchg
popl
mov
stos
pop
mov
stos
cmp
xchg
scas
jno
int
clc
mov
stc
int
in
and
push
add
xor
aas
cwtl
mov
orb
and
jo
arpl
mov
lods
jne
xchg
pop
pop
mov
push
cltd
jo
mov
dec
pop
inc
jb
ss
js
mov
push
jmp
pop
add
scas
sub
sub
inc
shrl
bound
push
lahf
test
inc
lods
xor
dec
out
inc
xor
xor
inc
sbb
out
movsb
and
mov
dec
jg
cmpl
out
and
xor
es
inc
ret
and
xchg
push
cmc
xor
es
cld
test
jle
mov
aas
lret
clc
test
xchg
lods
xor
push
out
push
lea
mov
dec
dec
lret
test
xor
ror
loopne
cmp
dec
sbb
shl
aam
dec
cmpsb
pop
pop
and
or
adc
call
sub
push
jns
dec
test
push
addr16
flds
out
lahf
sub
pushw
cltd
mov
or
mov
and
xchg
fmuls
cli
push
mov
std
std
pop
data16
jge
roll
cmp
sub
hlt
jmp
fwait
adc
mov
iret
loopne
sbb
movsl
dec
mov
orb
pop
leave
insl
cmpl
cwtl
jg
jno
sub
dec
inc
ficoml
pusha
mov
jg
les
adc
mov
out
pop
xchg
push
dec
cmp
adc
inc
push
inc
mov
jg
fidivrl
sbb
mov
xor
in
cmpsb
dec
jg
pop
add
xor
lock
dec
sub
push
mov
sub
fldcw
fsubl
fnstcw
pop
mov
cld
xchg
aaa
stos
cs
mov
ret
add
aaa
or
adcb
mov
or
lahf
xor
gs
jge
nop
mov
cmp
mov
insb
or
dec
iret
inc
lds
or
lock
aam
ret
or
add
sti
pop
push
cs
lea
pop
sbb
pop
jns
lds
pop
cmp
xlat
dec
sub
sbb
loopne
inc
xor
pushf
dec
jl
scas
add
fistl
push
dec
enter
dec
pop
pop
jae
add
mov
aam
mov
lret
je
or
and
flds
daa
je,pn
pop
gs
inc
jecxz
imul
cs
xlat
and
jno
and
mov
data16
xlat
mov
sbb
cmpsb
scas
push
or
xchg
jbe
test
fs
loope
cwtl
mov
pop
clc
js
leave
xor
pop
cli
mov
jle
inc
add
cli
int3
xor
push
pop
movsl
lods
jle
imul
pop
fsts
nop
stos
fmull
cwtl
sbb
dec
movsb
jle
inc
sub
subb
cltd
push
test
call
dec
fwait
jns
pusha
lcall
int3
call
cmp
pop
mov
fimull
xchg
popa
scas
xlat
lea
xor
adc
inc
popf
in
repnz
xchg
push
sbb
inc
mov
pop
loop
aam
mov
inc
sti
lret
sahf
jg
sub
test
fs
inc
mov
in
xchg
xor
push
stos
dec
es
pop
dec
inc
mov
dec
jb
dec
and
cmpsb
dec
adc
cmc
push
adc
xor
mov
lret
sub
icebp
dec
jge
lods
int
xlat
pop
xchg
pop
push
push
cltd
push
cmc
movsb
mov
pop
adc
dec
mov
pop
jns
and
movsb
push
xchg
lds
dec
xchg
je
mov
outsl
ror
in
push
jae
ds
gs
daa
cli
xchg
or
fwait
inc
push
adc
sub
xor
xchg
gs
pop
lret
push
or
mov
les
aam
stos
adc
addr16
mov
push
xor
dec
dec
cs
cmp
popf
sub
ljmp
lea
sbb
add
and
loop
pop
xlat
push
xchg
dec
pop
or
push
lahf
pop
jge
out
dec
mov
cmp
add
mov
sbb
into
sti
test
popf
bound
mov
sbb
push
int
mov
dec
jecxz
idivb
push
cmc
mov
into
sub
dec
jl
cmp
rcrl
stos
cwtl
dec
lods
addr16
xor
in
je
or
sub
sti
mov
xchg
repz
test
daa
mov
sub
adc
mov
add
dec
int
sbb
dec
subb
in
lret
adc
iret
or
sub
inc
mov
fldcw
mov
sub
push
sbb
out
xchg
pop
aad
jp
lods
mov
mov
jno
adc
inc
push
adc
jmp
lock
add
xchg
andps
pop
mov
rcrl
out
out
adc
pop
je
jl,pt
adc
lcall
push
dec
shl
pop
negb
shr
dec
jle
inc
mov
data16
fnstenv
mov
jb
insl
mov
jo
insl
scas
pop
xor
xchg
push
jle
push
sbb
or
mov
scas
jbe
mov
add
inc
sbb
loope
inc
ljmp
mov
in
int3
and
cld
mov
bound
add
mov
sbb
inc
je
scas
xor
mov
mov
pop
inc
clc
cwtl
pop
mov
lock
lods
cmp
lahf
popa
fcoml
xchg
mov
fmull
ror
mov
sbb
popf
mov
in
inc
ss
scas
int
sub
xchg
push
jb
inc
pop
aam
gs
jne
xchg
ljmp
call
inc
xchg
push
dec
pop
push
cmp
lods
inc
cwtl
es
testl
repz
inc
mov
mov
fs
mov
and
and
fs
ljmp
inc
inc
imul
leave
testl
cmp
jns
dec
fs
mov
adc
daa
out
xor
jle
outsl
addl
mov
ficoml
xor
cmp
pop
pop
aad
into
or
pop
popa
gs
and
lock
xchg
xchg
test
push
sahf
cmp
sub
pop
fstpt
and
push
xor
dec
test
xor
cld
repnz
sbb
popa
cmp
xor
dec
mov
xchg
out
xchg
mov
dec
jle
dec
add
dec
iret
mov
int
xchg
je
test
lcall
push
into
mov
fsubp
cmp
inc
jp
out
outsb
add
jbe
fidivrs
out
mov
sbb
dec
inc
cwtl
into
outsl
cvtps2pi
adc
xchg
gs
sub
lods
mov
addr16
movsl
bound
or
js
clc
fdivrl
pop
scas
push
cli
sti
jge
sahf
outsl
xor
test
cmp
imul
insb
adc
outsl
gs
pop
sub
xor
js
cltd
sub
pop
cmp
adc
clc
rcll
out
mov
mov
jg
dec
mov
inc
pop
push
stos
inc
or
pop
ljmp
stc
addr16
dec
mov
jne
jno
bound
insl
js
fidivrs
push
mov
pushf
rcrl
into
xor
jg
mov
and
push
loop
arpl
or
fcmovu
mov
sbbl
outsl
icebp
int
sub
sbb
or
out
dec
inc
iret
out
xchg
or
std
pop
mov
push
andb
jecxz
call
push
loop
sbb
mov
fsubs
sub
sbb
xor
push
xchg
fidivs
jge
jne
icebp
and
xchg
jb
dec
std
dec
in
mov
sub
inc
xor
mov
pop
push
aas
cwtl
or
pop
sub
mov
testb
xor
mov
jae
pusha
into
mov
test
adcb
push
pop
dec
pushf
mov
icebp
dec
xchg
repnz
shll
lret
and
orl
stos
jge
aaa
push
inc
inc
xor
flds
sarl
dec
cltd
jae
or
into
faddl
xchg
inc
jp
dec
dec
shrb
popa
icebp
cmp
lods
aaa
sahf
or
out
lock
mov
sti
xchg
dec
data16
lock
clc
in
gs
mov
adc
movsb
and
pop
testl
mov
and
cmp
mov
je
decl
inc
sti
push
xchg
into
scas
rolb
push
mov
push
cmp
dec
in
in
push
cmpsb
mov
cmpsb
adc
jle
xchg
jo
dec
or
je
mov
jecxz
jo
jns
orb
inc
fdivs
mov
mov
test
out
je
cmp
cmp
xchg
push
mov
mov
ret
clc
sub
push
arpl
xor
aas
or
jb
insl
xor
adc
jl
frstor
cmpsb
jns
adc
mov
lret
movsb
jae
jbe
dec
and
xor
es
push
mov
pop
inc
push
cwtl
dec
or
adc
dec
sti
dec
jecxz
pop
mov
aad
jae
mov
lcall
dec
mov
mov
stos
dec
adc
xchg
push
andb
cmp
dec
cmpsb
inc
movb
mov
addb
mov
adc
les
pop
dec
xor
sahf
sub
adc
subl
addr16
push
pop
shlb
mov
sahf
lods
xchg
xchg
inc
pop
pop
xlat
add
mov
fmul
xor
loope
shr
mov
call
and
sar
shrb
nop
inc
ss
test
mov
pop
push
cli
dec
push
dec
stos
leave
sbb
gs
stos
pop
mov
out
fisubrs
adc
sub
mov
outsb
push
in
and
jmp
icebp
jae
in
lahf
mov
fcomps
push
jecxz
cmp
sbb
and
lcall
jl
mov
movsl
sbb
repz
repnz
lods
dec
faddp
pop
push
pop
clc
push
push
jo
add
push
fidivrs
roll
pop
fs
test
mov
xchg
sbbb
sub
out
and
cmp
pop
out
and
addr16
push
cmp
bswap
dec
clc
fs
fstpt
fs
dec
aam
jg
xlat
mov
xlat
pop
mov
push
lods
iret
data16
insl
in
sub
fbstp
test
jmp
js
inc
xchg
lcall
sahf
fiaddl
dec
pop
fiadds
and
lcall
sahf
inc
aad
push
push
int
dec
int
push
xchg
mov
jae
xchg
mov
mov
lds
push
xchg
or
fwait
js
ficompl
pop
sub
shll
sub
negl
xor
ret
outsl
xchg
jcxz
mov
push
mov
fcmovnu
je
fsubr
mov
lret
add
ss
nop
mov
sbb
sub
add
xor
add
testl
js
test
adc
jmp
and
pop
mov
mov
in
shll
lret
mov
in
fwait
scas
xchg
jp
inc
jecxz
xor
movsb
ret
or
ljmp
movsb
imul
sub
push
xchg
xlat
test
jnp
inc
negb
cmp
mov
and
xor
push
ljmp
push
jge
add
add
mov
xor
pop
not
xchg
jnp
cmp
xchg
dec
mov
cmp
out
xlat
daa
in
mov
rol
sbb
lock
and
xor
scas
mov
sub
sbb
enter
push
cmp
mov
popa
mov
adc
sarl
aam
mov
pop
cs
push
add
mov
or
out
xchg
cmp
fstl
sbb
push
jg
insl
mov
jl
popf
ficomps
cmp
inc
and
outsb
lds
pop
cwtl
adc
les
mov
in
out
inc
push
insb
pop
xor
mov
pop
mov
adc
pop
dec
lahf
pop
lea
iret
xchg
lahf
popf
add
sub
sarb
cltd
test
repnz
mov
adc
ror
insl
jnp
lahf
mov
leave
lahf
xchg
lea
xor
mov
ret
leave
add
xor
fldt
inc
add
das
or
insb
xchg
pusha
sbb
sbb
repz
div
sub
or
cmp
push
hlt
sbb
adc
ret
out
sahf
mov
lretw
xchg
sti
lods
sbbl
adc
xor
cmpsb
mov
arpl
push
inc
cltd
dec
xor
sahf
arpl
cmpl
inc
lret
idiv
mov
test
xchg
cmp
push
push
pop
loopne
mov
and
rcrl
xchg
enter
ja
sbb
dec
mov
and
mov
mov
loop
push
lcall
ficoms
jns
inc
xor
sbb
les
out
cmp
mov
leave
cmp
ja
cmpsl
frstor
push
jb
jmp
jl
repz
packsswb
pushf
movsb
les
movsl
jns
mov
das
lcall
pop
pop
push
fistpll
or
mov
repz
pop
int3
xor
rcll
or
xor
lahf
test
inc
pop
fmul
push
sahf
sub
in
push
add
stos
sbb
mov
js
aaa
fidivrs
mov
add
cli
fs
push
shlb
loopne
fucomp
dec
inc
fstps
jecxz
sub
mov
push
test
lret
leave
gs
push
dec
pop
pusha
jge
xor
cmc
xor
cmp
cmp
ljmp
add
add
mov
pop
adc
bound
cwtl
addl
inc
fcomp
mov
xchg
jge
and
ret
fstp
jge
xchg
test
cmp
jne
add
mov
push
jbe
xor
inc
sub
and
cmpsl
in
jecxz
jge
pop
shr
std
push
movsb
jo
jmp
dec
push
testl
jne
push
lea
sub
adc
sub
mov
push
sbb
lods
mov
loope
mov
add
dec
daa
xor
test
outsb
inc
xor
aas
rclb
and
rcrb
push
sub
lret
mov
out
leave
add
out
imul
and
push
push
or
outsl
repnz
mov
push
jo
push
adc
faddl
sub
aam
or
xchg
pop
lahf
ss
je
lret
mov
inc
xchg
fcoml
mov
das
shrb
loope
cld
and
into
and
inc
pop
adc
andb
sbb
jb
xchg
cmc
fcmove
stos
jp
push
sub
dec
adc
int3
int3
aam
hlt
or
mov
in
inc
cmp
stos
notb
xchg
mov
insb
pop
sbb
dec
jge
jle
cmpsl
shlb
add
std
je
jb
sbbb
out
pop
aad
movsl
into
pop
xor
je
inc
ss
inc
ficomps
lock
push
jne
jb
push
pop
xchg
imul
cmp
cmc
xchg
xor
js
cmp
fimuls
xchg
ret
adc
cmp
stos
xchg
popf
or
andb
stc
or
testl
push
fcoms
clc
push
and
and
mov
pop
or
lods
lret
lods
mov
fsub
pop
in
add
xchg
pop
xchg
shll
in
ljmp
sbb
lods
lock
push
rclb
loop
mov
sub
lret
das
mov
cmp
imul
insl
stos
pop
mov
jb
out
rolb
adc
fnsave
das
shll
pop
mov
inc
js
cltd
icebp
mov
insb
fucomp
outsl
push
repnz
and
mov
or
jp
loopne
mov
inc
imul
cwtl
loope
lds
inc
lods
jno
inc
push
push
jle
adc
adc
add
mov
lds
lcall
movsl
mov
push
stos
push
cmovge
mov
push
int
data16
cmp
add
cwtl
imul
leave
dec
fs
xor
dec
sub
in
das
lahf
adc
dec
pop
push
adc
dec
mov
sub
dec
fisttpl
imul
mov
shrl
xor
std
std
fidivl
jae
addr16
dec
lcall
inc
xorb
mov
inc
scas
mov
sub
or
lea
movsl
stc
jge
fistpll
shr
sti
or
pop
cltd
das
lods
push
icebp
or
fsubr
ret
shll
cld
sbb
cs
push
cmp
jno
repz
cmp
aas
push
ljmp
mov
fs
pop
stc
int
in
pop
sub
cmp
out
jne
cwtl
jbe
cmpsb
xchg
push
das
jo
mov
xlat
mov
cmp
jecxz
test
outsl
xor
int
push
dec
xchg
pop
test
hlt
push
sar
or
inc
lcall
leave
sbb
cmpsl
and
daa
ds
or
iret
sub
mov
in
xor
stc
sub
imul
std
cltd
mov
sahf
sbb
xchg
aam
mov
sub
test
push
sbb
and
aam
jmp
scas
popf
adc
add
dec
xchg
out
out
push
jae
add
das
sarb
xchg
jne
arpl
sub
mov
xchg
lret
ret
fidivl
pushf
push
push
lods
fsubs
loopne
jb
and
xchg
rorl
aad
cld
vdivpd
adcb
rcr
mov
jne
fildl
cmpsl
jb
bound
stos
mov
and
jge
adc
sub
mov
inc
addb
sub
inc
and
leave
les
rorb
das
xor
inc
lret
aas
test
mov
clc
roll
pop
std
xlat
sbb
cld
mov
cltd
push
adc
or
xor
and
sbb
andl
flds
leave
sbb
lock
sbb
xchg
movsl
mov
fsubp
lods
fbstp
mov
push
mov
ss
mov
jnp
out
push
dec
pop
daa
adc
mov
aaa
out
ds
mov
mov
hlt
inc
repnz
icebp
inc
push
popa
and
das
out
add
scas
xchg
iret
imulb
sbb
sbb
push
in
lcall
out
xchg
mov
lods
push
jle
sti
leave
xchg
das
fistl
push
xor
adc
sub
inc
fwait
call
sbb
setg
dec
cmpsl
inc
loopne
ds
mov
lock
sbb
out
sub
andl
cmp
mov
subb
pop
jo
sti
ds
stos
ds
dec
and
lock
test
pop
jg
add
push
test
push
or
pop
testb
mov
mov
lret
lret
in
mov
enter
test
xchg
into
adc
popa
cmp
adc
repnz
cld
test
sbb
lods
ss
add
lods
push
pop
add
div
or
int3
sarb
das
enter
sbb
packsswb
rcr
repnz
pop
add
fcoml
push
mov
sbb
jae
xchg
int3
in
xchg
loopne
fwait
repz
mov
cmp
and
arpl
loopne
xchg
adc
in
shl
mov
jb
push
dec
jecxz
loop
mov
sub
movsb
xor
out
adc
fld
mov
outsl
xor
lea
cmp
cld
inc
and
add
repnz
ret
or
aam
pop
push
clc
push
cmp
or
mov
dec
jno
mov
call
jae
lods
lds
mov
lret
out
jnp
mov
arpl
inc
fwait
or
fwait
push
and
repnz
or
jge
daa
bound
in
and
cmpsb
out
sbb
insb
jmp
push
adc
orb
out
out
ljmp
gs
inc
pop
or
jg
pop
sbb
cmpsl
sbb
dec
flds
cwtl
mov
dec
adc
cltd
cmp
cwtl
push
enter
mov
inc
add
push
scas
and
inc
je
lret
movsb
push
lret
pop
sti
in
fmuls
rolb
sbb
inc
jg
mov
shrl
jp
push
and
shll
pop
inc
out
cmpsb
pop
out
add
cmp
mov
sbb
mov
adc
push
sub
fdivrl
clc
mov
sub
mov
dec
and
enter
mov
lock
adc
cmp
jbe
outsb
es
pop
bound
in
jb
adc
adc
cld
push
mov
cmpl
push
lock
popf
jmp
jge
dec
push
mov
fwait
aas
jmp
add
adc
xor
xchg
aad
jo
lcall
negl
jo
jmp
sbb
in
dec
gs
lahf
add
inc
xor
mov
fldenv
ja
and
loopne
mov
fcmovb
cmp
je
cmp
dec
rcll
mov
rcll
test
mov
cwtl
mov
jecxz
sub
negl
stos
rolb
int3
jne
dec
clc
pop
es
movsb
in
push
xchg
test
arpl
iret
cmp
jecxz
ljmp
data16
ret
sbb
xchg
in
iret
mov
outsb
jmp
outsl
or
icebp
mov
decl
cmpl
sub
loope
hlt
jns
jle
adc
leave
loop
test
cmp
or
adc
aad
mov
or
pop
jno
addr16
ss
push
sahf
iret
rorl
pop
loopne
inc
into
jo
xchg
xchg
shrl
lock
fldcw
arpl
ds
cmpsb
out
int
dec
sbb
mov
test
mov
mov
xor
push
add
push
and
jnp
or
jle
xchg
jb
jecxz
lahf
mov
lret
ficompl
xchg
pop
scas
or
lahf
sub
jg
cmp
push
fidivrs
cmpsb
roll
hlt
fwait
outsl
sbb
popf
ret
stos
pop
cs
lret
or
pop
push
cmpsl
test
add
mov
pop
into
dec
inc
lods
int
in
push
push
call
lret
mov
test
cmp
lahf
dec
dec
sub
xchg
push
stos
sbb
outsb
leave
cwtl
mov
arpl
lods
adc
mov
mov
sbb
add
ljmp
gs
cmpsb
les
jbe
nop
rcr
imul
inc
popa
ljmp
mov
jl
mov
sub
ret
out
sub
mov
fsubs
ficomps
das
sbbl
pandn
into
sbb
inc
mov
or
outsb
subb
sub
or
ret
inc
adc
aad
sbb
in
xorl
push
hlt
sti
inc
pop
mov
arpl
and
jp
scas
cmp
and
xor
sbb
mov
in
dec
adc
adc
mov
ljmp
clc
mov
jbe
or
sbb
in
jae
jo
push
popf
rorl
fdivrs
lods
jae
in
mov
mov
mulb
pop
ds
shl
cmp
cmp
decl
rol
push
mov
xchg
popa
loop
cld
out
dec
insb
cwtl
inc
and
out
int
andl
xchg
clc
jno
cld
lods
pop
out
jge
mov
icebp
outsl
sahf
jp
xchg
sub
fadds
vdivpd
fldcw
in
test
ss
iret
bound
mov
nop
jecxz
pop
lret
mov
push
mov
leave
pushf
jbe
xchg
aas
aam
lods
adc
xchg
sub
das
mov
and
xchg
ret
jg
iret
cwtl
outsl
adc
adc
jbe
movsb
sub
and
shr
mov
in
sbb
aad
jae
or
repz
enter
mov
cmp
sub
aas
pop
cld
inc
mov
jle
push
das
enter
stos
or
call
lds
inc
xchg
push
enter
pop
lea
adc
mov
mul
mov
iret
xor
daa
jno
fidivs
psubw
arpl
push
xchg
pop
rcrl
add
arpl
pop
popf
fsubrs
pushf
sub
mov
inc
cwtl
cmc
ja
or
jo
inc
fdivrl
sbb
lret
pop
jo
jae
stc
inc
out
inc
sub
mov
outsl
add
movsb
cmpb
xchg
xchg
sbb
lods
mov
mov
sub
adc
push
push
jnp
dec
enter
dec
cmpsl
aam
xor
out
add
add
mov
or
pop
jle
dec
pop
rorb
pop
xor
mov
out
mov
fidivs
sti
xchg
cmp
sub
mov
in
fistps
adc
aam
rol
dec
jnp
mov
push
xchg
xchg
sub
push
push
fisubrl
adc
add
cmpsl
test
ucomiss
mov
lret
jno
ret
sub
shlb
rorb
popa
insl
ss
orb
pusha
dec
sarb
xchg
sbb
lcall
imul
and
add
or
add
inc
sbb
mov
cmp
push
jle,pt
test
lock
cmp
js
in
push
pop
mov
mov
fistl
mov
xor
push
lahf
aas
enter
and
roll
out
add
or
hlt
out
mov
xchg
movsl
std
mul
and
mov
call
test
sarl
inc
sub
jne
jo
fwait
jbe
int3
lea
xor
add
jge
xchg
iret
leave
ljmp
movb
cmp
fdecstp
and
push
addr16
push
pop
idiv
inc
jbe
int
out
push
mov
lahf
jg
clc
lea
jge
push
push
add
or
ss
les
jo
out
gs
push
adc
shll
mov
pop
mov
cld
or
or
int3
sti
pop
stos
mov
imul
pop
add
arpl
or
cwtl
inc
push
in
xchg
dec
out
adc
xor
leave
clc
push
push
and
jg
xor
xor
inc
mov
mov
js
sub
or
popa
adc
in
lcall
popf
push
out
inc
jmp
xchg
jp
fisubrs
mov
pop
sub
mov
aas
lahf
in
or
push
cli
sbb
pop
stc
imul
jo
and
cmp
lahf
sti
inc
or
pop
cmp
pop
jbe
imul
jg
sub
icebp
push
jecxz
mov
mov
jbe
dec
push
pop
lahf
out
cmp
leave
add
ret
cmp
pop
push
push
faddl
xchg
lcall
pusha
aaa
outsl
mov
xchg
cmpb
cmp
adc
cmpsb
xchg
lret
push
mov
in
jg
sbb
aad
outsl
inc
out
cwtl
fs
fwait
aad
and
jae
lret
pop
or
outsb
jno
nop
or
jbe
idivb
add
or
add
lds
mov
dec
sub
cmpl
dec
fmulp
and
mov
sbb
push
shll
enter
cmp
cmpsl
lods
adc
xor
adc
jmp
jp
lods
repz
dec
mov
jbe
je
push
loop
xchg
call
shlb
into
sub
mov
xchg
pushf
jb
call
loopne
xchg
arpl
scas
jno
jmp
pop
pushf
push
lods
test
pop
inc
xchg
arpl
jecxz
push
lea
dec
xlat
inc
mov
adc
jmp
mov
aas
add
inc
adc
je
mov
mov
adc
loop
pop
movsl
data16
stc
mov
mov
mov
add
repnz
xorl
fwait
sbb
pop
xchg
push
pop
inc
movsb
hlt
into
stc
inc
clc
cmp
aaa
xchg
adc
inc
sub
mov
inc
jnp
int3
jle
and
push
data16
mov
outsl
xchg
popf
clc
rcll
sub
adcl
pop
and
repz
mov
stc
mov
dec
xchg
test
paddw
fwait
jo
push
popf
sbb
ljmp
xchg
daa
cltd
mov
pop
mov
cmpsl
mov
in
inc
mov
mov
xor
jmp
daa
iret
cld
pop
xor
addr16
out
or
je
xor
cmpsb
pop
push
scas
out
mov
insl
sub
dec
sbb
cmp
cwtl
jne
dec
inc
or
in
adc
int
mov
mov
pushf
data16
rclb
mov
out
xor
subb
in
orl
lahf
jle
movsl
loope
fcmove
jle
ficoms
lret
jecxz
insl
jbe
jo
push
scas
xorl
in
mov
xor
pushf
mov
dec
cmc
mov
push
repnz
loopne
xchg
cmp
dec
cs
or
lret
inc
into
daa
dec
xor
mov
lfs
sti
popl
xchg
lahf
stc
lods
dec
jbe
add
popf
adc
out
lds
xor
sbb
sbb
and
xor
loopne
fstpl
jge
inc
call
stos
fisubl
test
test
shrb
jbe
popa
cmpsl
bound
js
mov
clc
mov
and
add
jmp
ds
subb
xchg
insb
test
add
push
dec
subb
or
push
sbb
mov
cld
into
hlt
iret
lods
scas
mov
loop
and
adc
jo
lods
sahf
pushf
inc
push
fcmove
mov
es
xor
pop
mov
lods
push
cmp
stos
imull
sbb
ja
xchg
dec
cmp
or
add
fidivl
ss
dec
test
stc
pop
push
xor
add
lret
push
test
add
popa
pusha
xor
mov
inc
cli
jecxz
cli
xor
xor
les
inc
in
adc
enter
inc
out
ret
sub
sbb
xchg
or
push
push
clc
shlb
push
addr16
sub
stc
out
lcall
sbb
test
clc
mov
jp
je
jns
push
sub
mov
push
xor
jle
adc
pop
fscale
mov
push
dec
mov
arpl
mov
jge
call
dec
cmpsl
js
pop
xchg
pop
arpl
pop
pop
subl
mov
pop
addl
test
pop
mov
scas
fisttps
sub
jle
push
arpl
push
insl
add
je
push
ret
pop
rorl
and
and
xorl
mov
test
lds
mov
pop
sbb
push
iret
fisttpll
cmp
mov
sbb
loopne
ljmp
pop
mov
outsb
stos
lret
fsubp
xor
mov
push
cli
and
pop
gs
inc
jge
fwait
xor
sbb
lahf
add
mov
pop
push
xchg
xchg
mov
ljmp
push
mov
mov
push
jnp
mov
stc
shlb
out
fld
mov
jno
xor
jo
pusha
or
pop
xchg
movsl
pop
xchg
enter
lods
rcl
mov
scas
ja
mov
push
dec
mov
repnz
ror
jb
push
xchg
test
sub
mov
in
jae
or
mov
popa
or
or
xchg
out
xchg
or
mull
pop
cmpsb
mov
inc
adc
repz
in
mov
lret
cmp
xchg
xchg
and
data16
and
sub
mov
xor
push
jp
repz
icebp
cmpsl
pop
cmp
mov
mov
cmp
ljmp
jmp
cld
xor
enter
inc
in
inc
jo
or
mov
add
and
push
je
and
cltd
mov
repz
scas
add
out
movsb
insl
mov
and
add
or
mov
test
movsb
shll
cmp
cmp
adc
aad
cmp
aad
mov
xchg
mov
das
xorl
xor
lret
mov
xchg
cld
lods
or
inc
mov
mov
jno
out
pushf
outsb
test
inc
cld
add
mov
nop
mov
in
push
bound
jge
pop
cmpsb
push
pop
inc
lahf
and
mov
out
repnz
decb
imul
push
mov
inc
push
mov
jae
xor
sti
pop
xchg
jne
cmpsb
sti
sarl
and
jno
dec
pop
push
test
mov
xor
imulb
pop
fcmovbe
sub
aaa
jbe
enter
cmp
or
repnz
sahf
jg
push
inc
xor
inc
push
mov
filds
mov
cmp
and
out
sub
into
xchg
out
jl
adcl
push
fst
cmp
add
out
adc
sarb
in
lods
pushf
fisttps
stc
test
and
leave
loopne
push
pop
cwtl
sub
push
std
mov
pushf
mov
aas
sbb
mov
and
dec
sbb
xor
aas
and
frstor
fisttps
insb
cwtl
inc
fbld
sar
cmp
cmc
bound
out
cmp
pop
std
inc
mov
ljmp
mov
sbbb
cmp
pop
lret
mov
mov
sti
je
enter
xorb
or
cmp
and
js
adc
lea
stos
or
int
sub
nop
push
push
movsl
adc
loop
fstpt
shll
cmc
test
or
popa
sbb
cwtl
dec
mov
jp
cmp
jns
mov
daa
shll
arpl
sub
dec
lret
popf
pop
mov
sbb
sub
in
push
adc
movsb
and
lcall
sub
adc
scas
cs
fs
push
mov
or
add
xchg
jp
adc
sbb
out
sbb
push
adcl
push
lea
sub
pusha
push
sbb
lret
jb
push
loop
xchg
adc
push
sahf
insl
ret
sahf
cmp
sarl
lahf
xor
push
adc
xchg
sbb
add
cmp
inc
in
jecxz
cld
gs
mov
popa
xchg
push
pusha
inc
xor
cmpsl
stos
push
mov
push
inc
lds
push
sarl
pusha
xor
test
cmp
xchg
dec
jno
lods
stc
lods
jnp
daa
enter
mov
mov
cmp
shrb
cmp
xor
lds
dec
lea
clc
jg
loop
fidivl
jb
fstl
mov
mov
in
push
ficoms
hlt
loop
or
or
xlat
inc
mov
ficomps
cmpb
inc
inc
xor
or
jns
bound
mov
xor
dec
cli
outsb
jns
pop
cltd
jle
je
or
cmp
std
scas
cmpb
jbe
add
pop
ja
inc
xchg
mov
lock
scas
pop
imul
popf
pop
jne
cmc
mov
mov
xchg
xor
add
adc
push
pop
enter
in
clc
xor
mov
sbb
mov
punpcklwd
push
arpl
shll
push
sarb
add
dec
fmull
jl
leave
test
xchg
or
aaa
jl
push
sbb
sub
pop
jne
fwait
aaa
cltd
cmp
inc
and
inc
mov
daa
or
dec
push
add
mov
addr16
pop
mov
mov
xchg
dec
rcrb
push
loope
int
cmp
ljmp
sbb
inc
adc
loope
jmp
and
dec
xchg
and
push
xor
pop
add
in
pop
mov
out
in
mov
adc
sbb
sbb
clc
or
push
adc
add
lret
mov
dec
and
sub
lods
cmpsl
push
dec
lahf
jl
fbstp
mov
les
cs
leave
xor
mov
mov
or
jp
roll
lret
push
lods
fwait
jmp
ja
push
stc
mov
ss
and
lods
jmp
out
sbb
mov
icebp
inc
add
add
bound
pop
push
mov
pop
inc
jmp
push
push
xchg
test
ret
adc
fstl
shrb
outsl
test
popa
enter
fdivs
lods
in
sbb
pop
mov
mov
aad
jmp
pusha
pop
clc
and
rorb
and
inc
aas
xchg
lds
lcall
sub
aas
pop
push
pop
das
adc
fcmovne
stos
test
pop
cmpsl
or
push
pop
cmc
testb
lcall
mov
aaa
addb
xor
fstpl
stos
fstpl
sbbl
repnz
add
adc
jmp
pop
pop
mov
jl
mov
xor
dec
mov
testl
in
push
pop
enter
mov
gs
sbbb
mov
mov
fsubl
cli
adc
adc
ljmp
sub
pop
faddl
mov
and
push
sub
int
hlt
sbb
mov
repz
push
sbb
pop
adc
lcall
insl
mov
mov
add
jmp
pop
rorl
pop
jno
gs
mov
or
aad
sub
rcrb
adc
sub
xchg
mov
add
mov
dec
jnp
mov
cmp
in
fbstp
and
xchg
jmp
adc
js
inc
and
mov
dec
inc
jns
movsb
pop
dec
mov
add
push
or
jg
push
cltd
add
and
xlat
mov
lret
push
pop
clc
mov
leave
or
xchg
mov
pop
call
add
fcmovnbe
push
out
mov
call
jecxz
paddb
push
lods
xchg
sbbl
ret
sbb
nop
fisttps
adcl
cli
xchg
push
sti
lahf
dec
and
mov
pop
imul
or
inc
pop
mov
adc
adc
mov
mov
gs
mov
sahf
cmp
mov
out
cmpsl
jmp
pop
push
adc
adc
shll
and
nop
daa
inc
out
adc
inc
push
ljmp
push
pop
test
inc
les
cmp
je
ret
inc
jle
bound
xor
mov
pop
mov
xchg
xor
mov
adc
add
imul
fmuls
ret
lcall
jp
mov
arpl
sbb
sbb
jle
adc
and
les
sahf
add
adc
sbb
push
mov
fdivl
dec
cld
xchg
ss
add
pop
mov
test
pop
sahf
dec
sub
dec
loop
ljmp
xchg
cmp
int3
dec
orl
arpl
scas
lret
imul
out
mov
mov
loope
xlat
push
fsubrs
daa
ljmp
loop
aas
pop
push
ljmp
divl
inc
test
aaa
mov
mov
repnz
les
bnd
push
fs
lods
pop
dec
and
jmp
xchg
xor
test
sbb
ret
mov
jle
push
pop
jle
xor
push
rcl
nop
inc
inc
dec
xor
jle
inc
jnp
sub
loopne
xchg
stos
xchg
cmp
sbb
dec
stc
loop
sbb
sbb
mov
dec
and
cmp
mov
mov
nop
push
or
dec
inc
shlb
ljmp
pop
sbb
xor
push
or
lret
test
or
adc
mov
les
fdivrl
test
push
push
inc
add
push
lds
sbb
pop
inc
pop
jmp
into
pusha
xchg
cmp
adc
cmpsl
adc
push
mov
pop
dec
jl
jmp
and
int
jl
es
pop
repnz
xchg
sti
lret
jne
repz
inc
jge
add
mov
mov
and
cmpsb
int
sub
and
jmp
mov
dec
lock
in
xchg
jb
clc
pop
icebp
addr16
mov
or
push
fisubs
or
cs
test
shll
mov
mov
std
inc
jo
jne
into
mov
mov
xchg
inc
aas
pop
cmpsl
pop
inc
jbe
rol
mov
fdivrs
loop
xchg
and
dec
sbb
inc
sub
fidivs
stc
xor
dec
push
dec
add
rcll
cmp
ds
out
xchg
cmp
inc
adc
aaa
popw
xchg
mov
dec
and
loopne
outsb
xorl
call
push
rcrb
lock
je
push
jp
pop
fisttpl
clc
cmp
xchg
pop
add
or
subl
mov
mov
mov
lret
into
mov
and
cli
popa
loopne
sub
lahf
add
sbb
jle
not
idivl
shll
stos
mov
push
inc
xor
xor
xchg
jo
fsubl
and
push
pop
add
xchg
push
jg
pop
into
inc
cmp
std
hlt
lds
ror
mov
or
sbb
mov
inc
lds
inc
scas
test
nop
or
mov
dec
adc
jnp
and
or
dec
xor
dec
aad
iret
les
dec
pop
xlat
xchg
nop
xor
mov
sub
mov
and
mov
lcall
data16
and
aam
cmp
into
jg
shll
cs
and
test
cli
js
cltd
fwait
daa
rcl
lds
pop
pop
cmp
lods
inc
xchg
fnsave
mov
cmp
jbe
aas
js
std
loopne
orb
jmp
sar
mov
mov
lret
inc
sbb
xchg
cmc
sbb
icebp
add
and
inc
jbe
loop
jbe
push
hlt
pop
hlt
xchg
pop
sarb
jne
mov
cmp
jo
push
test
cld
sahf
sub
cmpsl
pop
push
fbstp
notl
hlt
jle
cmpsl
leave
out
inc
lock
sub
sahf
outsb
pop
fcoml
aam
pop
lds
sti
sbb
dec
xchg
jne
mov
test
inc
mov
outsl
aad
lea
or
inc
sbb
dec
adcb
sub
and
shll
and
push
xor
rclb
insb
mov
mov
xlat
xor
xchg
inc
cmp
lods
movsl
dec
pop
jae
xor
push
mov
insl
scas
dec
mov
mov
cmp
sarb
or
xlat
adc
sbb
fs
sub
dec
xor
xor
mov
add
cli
orl
sub
jns
mov
jns
adc
loope
dec
inc
cld
ljmp
lods
push
daa
xor
stos
adc
jmp
pop
movhps
xorl
pushf
std
jae
pusha
addr16
or
jmp
subl
stos
xor
and
sbb
sbb
pop
or
pusha
test
xor
popl
aam
xor
inc
mov
push
push
cmpsl
add
sub
push
sub
add
lods
xor
dec
xchg
leave
cltd
jb
enter
lock
insl
data16
mov
lcall
sub
mov
pop
add
test
sbb
shll
jo
lock
imul
into
mov
in
fisubl
in
jae
pop
loopne
mov
push
in
incl
lods
and
xor
jge
and
pop
xchg
lret
add
cli
xchg
and
pop
dec
jle
mov
xor
push
stc
dec
cmp
dec
in
sub
xlat
xor
inc
arpl
push
aam
scas
scas
call
into
mov
pop
or
into
call
repz
cmpsb
pop
pop
pop
rolb
mov
scas
mov
lret
inc
iret
push
lock
and
das
xlat
in
cli
push
loopne
jl
pop
and
mov
sbb
loope
dec
ret
out
fs
lea
enter
inc
shlb
inc
inc
jno
xor
dec
mov
xchg
push
dec
lcall
out
pushf
cmp
rcrb
mov
lcall
lock
mov
jmp
fimuls
jge
mov
cmpb
xor
in
dec
mov
mov
sbbb
cmp
adc
sub
adc
cmpsb
sub
xchg
outsb
call
imul
mov
adc
je
xchg
mov
mov
out
clc
out
fstl
mov
adcl
pusha
mov
sbb
jl
mov
mov
inc
xlat
scas
adc
and
jae
mov
add
mov
cli
ret
xchg
sarl
imul
mov
pop
jecxz
pop
arpl
or
loop
pop
pop
inc
iret
std
decb
fldenv
add
pop
xor
mov
push
aam
xchg
mov
cmp
jle
pop
mov
inc
fisubrl
add
lea
mov
nop
sub
sti
xor
push
inc
and
push
xor
outsb
mov
sbb
subb
xchg
ljmp
mov
sub
cmpsb
pop
sarb
fidivrl
and
sbb
popa
push
jnp
push
xchg
in
fcoms
jg
clc
jmp
nop
fstpt
mov
icebp
inc
xor
mov
setp
es
test
sbb
mov
inc
clc
cmc
xchg
cmc
mov
lcall
lods
inc
out
lock
adcb
mov
pop
sub
mov
js
daa
ljmp
pop
push
aam
mov
arpl
inc
lods
dec
mov
out
xchg
cmc
cli
ret
add
sub
shr
pusha
xchg
shlb
je
cmpsl
push
out
push
add
fidivrl
into
lret
and
cmp
mov
adc
mov
mov
pop
out
sub
mov
cwtl
push
adc
and
inc
lea
jno
push
in
push
and
fs
subl
cmp
in
dec
iret
dec
adc
push
push
xchg
filds
test
icebp
adc
cmp
inc
les
outsb
mov
push
pop
lods
sbb
repnz
mov
push
imul
xor
sbb
inc
jl
rolb
test
mov
jo
hlt
and
repnz
jnp
xchg
shlb
xor
addr16
dec
shll
xchg
push
pop
nop
inc
loop
mov
xchg
movsb
in
scas
mov
das
sbb
into
add
fnstcw
call
cli
loop
jp
dec
into
adc
pop
and
fstl
aam
popa
jmp
out
and
cld
mov
xchg
aad
mov
pop
mov
cmp
cmp
dec
into
xor
and
pop
xor
int
and
sbb
loopne
fcomp
int
sub
testb
xor
or
lods
insl
xchg
shlb
ret
adc
aad
out
dec
mov
test
and
mov
hlt
or
mov
xor
test
pop
jne
enter
push
add
inc
shll
mov
shll
cwtl
adc
xchg
test
xchg
adc
aad
sbb
stos
or
in
shlb
std
jb
shr
mov
lret
iret
popf
xchg
int3
mov
ljmp
ret
rclb
xor
aaa
lcall
mov
push
inc
outsb
repnz
xchg
mov
addr16
addl
mov
xchg
lret
sbb
out
jne
mov
into
push
scas
cmpsl
mov
sbb
ret
adc
testl
sub
cmp
jp
ret
repnz
mul
rcll
divb
push
or
enter
sti
push
mov
int3
sbb
repz
movsl
vdivsd
lods
xchg
cli
int3
outsb
in
push
pop
mov
sti
dec
lret
mov
push
loopne
popa
sub
jns
out
push
xchg
mul
cmp
fcoml
mov
jb
sti
clc
pop
pop
mov
imul
adc
add
cmpsl
jmp
jae
lret
xchg
mov
xchg
in
push
pop
xor
pop
jle
jno
je
ja
daa
mov
mov
xor
push
mov
xor
xor
xchg
xor
jne
jmp
fsts
jo
addr16
push
fistpl
dec
xchg
shlb
pop
test
test
lock
and
aaa
pop
incl
pop
aaa
clc
in
sbb
push
test
pop
lea
mov
arpl
out
popa
fidivrl
cld
rolb
jb
ja
lret
mov
push
inc
mov
dec
cmp
movsl
gs
xchg
rcr
cltd
dec
xchg
xchg
nop
out
or
ret
out
orb
sti
jne
push
icebp
push
cmp
mov
sub
js
iret
jp
lds
lret
sbb
xor
sti
ss
dec
mov
fdivs
test
xor
in
fbstp
inc
jge
jg
std
cs
add
mov
jmp
mov
dec
dec
clc
out
xchg
sub
testb
sub
push
and
and
loopne
subl
stc
jne
mov
daa
sbb
fsubs
out
xor
dec
sbb
sbbl
sar
inc
js
pop
mov
push
xor
enter
sbb
lret
xchg
cs
inc
or
xchg
orl
and
jle
pushl
jbe
lcall
daa
lods
inc
jge
sub
btc
sub
test
jnp
ss
jp
out
cmp
dec
repnz
enter
jb
jo
loop
movl
outsb
pop
pop
xchg
sbb
mov
jecxz
repz
loope,pt
pop
lds
pushf
jne
call
aas
repnz
sub
shrl
loop
push
lods
sub
pop
jae
sbb
mov
call
in
mov
add
push
rcrl
sbb
stc
addl
stos
add
cltd
stos
sub
mov
and
mov
out
shll
adc
dec
dec
mov
mov
push
subl
add
icebp
push
sub
out
subl
cwtl
mov
xchg
xchg
push
sti
add
xchg
mov
cld
negl
pop
cmp
mov
pushf
push
lret
sub
mov
loopne
ret
test
xchg
mov
sub
xchg
push
jno
inc
dec
fsubrs
pop
cmpsl
mov
xchg
push
cld
cmpsb
inc
and
lret
pop
call
xor
test
inc
clc
lds
push
fcmovnu
add
mov
test
xor
aam
ret
lock
mov
jl
jle
sbb
popf
pop
aam
test
jb
sbb
jge
inc
jecxz
outsb
in
popf
incl
xlat
xchg
sbb
mov
es
in
fiadds
popa
test
mov
cltd
dec
push
pop
mov
push
pop
jnp
dec
inc
xabort
jle
mov
mov
ljmp
insb
jmp
ja
adc
lcall
jg
jmp
sub
aad
cmp
sti
incb
cwtl
je
cs
cmp
ror
xchg
jle
lods
mov
leave
adc
adc
mov
testl
shll
incl
adc
gs
dec
hlt
fs
add
fisttps
xchg
out
inc
xchg
sahf
push
adc
adc
shrb
ljmp
adc
inc
sarl
xchg
add
lcall
std
sbb
rcrb
adc
push
inc
sbb
push
fwait
out
cmp
leave
jg
test
xchg
mov
bound
jp
push
and
xor
inc
faddl
sahf
mov
xchg
outsb
out
out
enter
psllw
testl
aam
sti
xchg
mov
mov
mov
cltd
in
lret
int
fcmove
inc
test
jne
mov
push
inc
or
xlat
add
mov
push
xchg
out
fnstenv
jp
xlat
cld
movaps
ljmp
push
stos
cs
push
add
push
sti
or
subb
mov
push
fsubs
jb
lret
shr
jge
lock
aas
insb
push
add
adc
loop
xor
mov
or
xor
jg
dec
hlt
gs
mov
movsl
xlat
adcl
aam
sahf
sbb
imul
in
rcll
dec
jp
jp
push
add
jg
movsl
add
or
xchg
fabs
mov
and
or
mov
xor
xor
push
dec
or
mov
sahf
rcl
in
cmp
inc
cmc
in
in
ret
mov
pop
scas
jge
dec
pop
imul
lret
push
sti
cs
push
push
add
data16
and
cwtl
stc
xor
mov
inc
push
add
sarl
lret
loop
inc
dec
jl
cmp
ret
pop
testb
sti
push
and
sub
push
repnz
or
push
fcoml
idivb
scas
imul
jae
xchg
cmp
sub
or
in
bound
loop
and
mov
or
pop
rcrb
cmpsl
fldt
mov
pop
mov
xchg
inc
pop
push
call
sub
xchg
sub
lock
cmpsl
push
and
stc
and
and
push
in
ja
xchg
int3
dec
inc
jle
je
mov
pop
add
and
dec
fidivl
and
andl
in
inc
sub
push
into
loope
xlat
ret
jbe
das
xor
popf
and
lods
inc
mov
mov
xor
mov
scas
inc
pop
jge
pop
stos
icebp
push
or
ljmp
fisubs
test
inc
mov
inc
movsb
out
add
jp
adc
das
dec
inc
xchg
mov
cmp
fs
std
or
in
push
call
and
es
negb
or
inc
fistpll
jae
vpunpckhbw
add
mov
mov
js
shll
leave
adc
mov
jne
dec
jge
and
push
lret
mov
jnp
pop
pop
aas
mov
jno
or
push
call
andb
pop
pop
adc
xchg
adc
pop
and
xor
pop
ss
clc
and
push
push
sbb
sti
incl
pop
lds
push
lret
mov
dec
dec
sarb
mov
pusha
repnz
fcomps
cwtl
test
and
inc
das
flds
jmp
cmp
push
push
push
ret
in
cmp
cmp
jmp
arpl
pusha
add
out
mov
jne
pop
rorl
mov
inc
add
jle
mov
push
imul
in
aad
fdivrs
push
jmp
subb
push
xchg
mov
in
inc
add
andl
xchg
jp
add
cmp
test
and
sbb
cwtl
push
cltd
gs
mov
gs
xor
push
sbb
repnz
data16
fiadds
push
movb
es
test
cli
inc
in
cld
repnz
jae
mov
cli
mov
push
ds
cmc
je
xchg
es
loope
aad
jmp
sbb
stc
inc
pop
sub
fisttps
out
notb
mov
shlb
sbb
fwait
push
sarb
mov
sub
addb
scas
sar
mov
scas
mov
add
sti
test
fimull
xchg
int3
mov
dec
sti
shll
scas
sub
mov
inc
aaa
loope
test
sarl
mov
jnp
rolb
aaa
call
add
dec
es
xchg
adc
aas
xor
into
and
mov
mov
leave
imul
dec
and
push
lods
or
movsb
add
testb
mov
jge
lods
dec
test
xchg
xchg
aam
fldenv
stos
popa
loope
xor
enter
dec
das
iret
xchg
jo
and
mov
imul
xor
cltd
lea
mov
push
adc
or
loope
aad
or
mov
cs
add
fs
cmp
mov
and
mov
movsl
fistps
dec
mov
xor
sub
push
push
sub
mov
mov
sbb
sub
sbb
int3
dec
mov
add
jg
icebp
sbb
sar
cmp
fbld
das
mov
test
addb
movsl
jl
pop
or
xchg
adc
or
lret
lds
mov
movsl
stos
movsl
and
out
or
pushf
icebp
sub
pop
cmp
scas
cs
out
das
outsb
cs
pushf
sub
add
lahf
testb
test
cmc
push
lahf
out
mov
and
mov
and
orl
pushf
dec
mov
mov
jecxz
mov
sbb
or
jnp
inc
nop
aas
outsl
ja
add
andb
std
addr16
ret
arpl
sbb
outsl
cltd
sbb
leave
push
xchg
pop
fistps
mov
mov
jns
mov
dec
mov
data16
out
scas
aam
mov
js
xor
shlb
cmp
daa
dec
or
or
sbb
sar
rolb
dec
pop
xchg
in
movsl
repnz
mov
mov
mov
leave
stc
aas
mov
movsb
cld
sbbb
xchg
inc
mov
mov
mov
cmp
cmp
pushf
and
cld
sbb
pop
and
mov
fstpt
dec
push
cltd
bound
mov
and
icebp
inc
fsubs
psubw
outsl
inc
sub
mov
imul
adc
mov
enter
mov
dec
push
sub
jp
and
push
cmp
inc
inc
ror
mov
mov
mov
xchg
mov
mov
mov
sbb
in
pop
enter
ss
fadds
daa
std
add
add
add
or
in
mov
inc
jnp,pt
imul
cwtl
push
mov
push
mov
jmp
inc
mov
jecxz
jp
ret
jnp
xor
jae
jmp
arpl
adc
bound
sbb
xchg
push
test
jle
mov
pop
mov
repz
sub
sub
inc
sahf
dec
and
mov
add
pop
ret
mov
je
pop
sbb
jge
xchg
lock
jo
push
jne
icebp
orl
sub
xor
pop
jp
sbbl
and
fcmovnbe
jae
icebp
jnp
fs
dec
mov
xchg
sub
cmp
push
push
out
call
sahf
das
ds
sub
stos
gs
mov
mov
xchg
lret
les
mov
mov
mov
aaa
iret
and
jmp
mov
fwait
and
test
fsubs
ret
xlat
test
mull
outsl
in
out
cmpsb
xchg
movsb
adc
les
sarl
inc
lock
dec
xlat
lds
sbb
mov
sti
adc
aam
push
cwtl
adcb
adc
sahf
test
daa
mov
test
mov
dec
std
leave
stc
daa
pop
or
xor
jbe
fnstsw
enter
les
mov
andl
push
fwait
jge
pushf
pop
out
cmc
or
sbb
jo
imul
mov
push
fbstp
xlat
aas
push
or
jno
mov
sbb
sbb
push
adc
lods
push
xchg
cltd
es
aad
mov
scas
or
mov
cmpsl
sbb
mov
out
rclb
pushf
mov
mov
fcmovbe
fildl
xchg
cmp
add
idiv
xchg
dec
cmp
cs
add
jge
dec
adc
stos
cmp
pop
cmp
or
addl
ficoms
test
xor
lcall
stos
call
xchg
cmp
adc
fwait
inc
fsts
xchg
or
dec
cmp
mov
in
mov
dec
mov
inc
in
push
jge
mov
orl
out
xchg
inc
add
pop
scas
fists
adc
gs
mov
fsubl
sbb
es
mov
gs
jmp
call
mov
popf
in
scas
push
push
push
addl
in
cwtl
adc
mov
jo
push
mov
hlt
jno
jb
push
ljmp
imulb
xchg
xlat
and
pop
xchg
sub
aad
push
inc
int3
andl
das
scas
push
andl
dec
or
push
call
cmp
fimull
stos
lods
repnz
icebp
cmp
dec
push
js
and
punpckhbw
xchg
lcall
push
jmp
jb
ss
in
adc
leave
mov
sbb
jbe
mov
mov
xchg
subl
xchg
and
pop
fiadds
or
pop
fbstp
mov
xorb
cmpb
cmp
scas
push
add
fldcw
xchg
cmp
cmp
rclb
or
push
pop
out
lret
push
testl
mov
adc
arpl
outsl
shll
loopne
xor
mov
lcall
test
ss
mov
push
dec
in
adc
add
int
outsl
inc
out
insl
push
cs
xchg
cmp
fldcw
test
push
xor
sbb
lahf
cmp
mov
mov
neg
test
sahf
test
and
push
insl
xor
cld
sti
mov
mov
jge
arpl
jl
or
ja
jg
insl
mov
icebp
sbb
sub
scas
notl
mov
movsl
xchg
dec
in
jp
imul
sbb
cmp
or
and
push
test
mov
ljmp
and
in
xchg
call
and
test
andl
std
push
inc
or
shlb
and
cli
int3
mov
cmp
sarb
sbb
sub
leave
mov
mov
es
pop
mov
repnz
repnz
lcall
pshufw
ljmp
mov
sahf
test
or
or
add
repz
mov
cld
std
movsl
daa
push
outsl
xchg
xchg
aad
sub
test
xor
flds
mov
fstpt
xor
subl
iret
pusha
inc
sbb
dec
mov
jmp
cmpsb
inc
jl
stos
mov
mov
lcall
mov
cmc
cli
sbb
stc
psadbw
stc
enter
add
lcall
je
pop
scas
iret
scas
out
mov
insb
aaa
jb
add
ss
pop
push
dec
aam
sbb
lret
pop
lea
jb
push
scas
sub
lahf
cmpsb
pop
jg
shr
in
push
enter
fdivs
stos
sub
mov
subb
jl
out
mov
fsubl
lahf
nop
fistps
mov
pop
jle
jle
ret
ret
es
dec
mov
sub
mov
out
arpl
adcl
mov
aas
adc
ss
in
mov
enter
fldcw
mov
sbbl
jl
pop
dec
jge
adc
je
lret
testb
and
sbbl
dec
push
cli
subb
or
je
dec
pusha
inc
out
cltd
mov
clc
adc
stos
lds
arpl
or
movsl
imul
mov
dec
xchg
cmp
mov
lods
outsl
iret
sub
shlb
push
sub
outsb
bound
aad
adc
cwtl
add
adc
fwait
fwait
scas
pop
test
cmpsb
test
cwtl
js
movsb
mov
add
ja
stos
ds
push
negb
repz
or
pop
aas
mov
mov
sahf
or
inc
xchg
lcall
fs
ja
adc
test
fnsave
dec
sti
ljmp
xor
cwtl
jae
iret
mov
mov
jge
mov
dec
push
cmpsb
sbb
and
lds
jge
and
outsl
lods
into
cmpsb
mov
int
cmc
scas
pop
push
xchg
nop
outsb
stos
xorl
mov
dec
adc
xchg
pop
or
add
xchg
call
icebp
call
fimuls
cmp
std
jmp
xchg
mov
sub
cmc
mov
push
push
repz
xchg
xchg
xor
cwtl
inc
loope
in
aad
jns
je
inc
push
pop
pop
bound
sti
push
and
test
into
out
xchg
lods
mov
fimuls
cwtl
dec
xchg
int3
sub
aas
fucom
jge
push
jecxz
push
inc
sbb
lds
in
mov
mov
imul
mov
test
fcomps
in
mov
int
inc
sub
jle
push
cs
xchg
shrb
jno
jl
cmp
in
jae
movsl
jge
fmulp
and
xchg
imul
fldt
and
and
test
nop
or
loop
aas
push
push
xchg
and
mov
fsub
mov
ret
outsb
pop
lcall
add
add
les
push
cmp
push
mov
push
push
pushf
or
call
cltd
xchg
sub
jg
and
aad
cli
add
xchg
rorb
mov
pop
scas
aaa
pop
xchg
xchg
and
pop
fwait
insl
xor
mov
sbb
outsb
inc
loop
sub
mov
push
add
fs
icebp
mov
sub
push
cltd
dec
in
call
dec
lea
iret
adc
dec
sub
mov
outsb
inc
loopne
popa
data16
cmc
cmp
mov
addr16
scas
push
mov
jne
push
fidivs
movsl
mov
push
addr16
insb
pop
sub
popa
cmpl
fiadds
fnstenv
pcmpgtb
mov
xchg
js
mov
cmpsl
in
outsl
lock
cmp
xchg
dec
xchg
pop
rol
cmpsb
lea
nop
and
dec
mov
dec
sbb
popa
pop
add
fcoms
mov
cmp
inc
mov
mov
xor
aaa
push
popf
jmp
push
in
mov
add
out
fidivrs
mov
lods
pop
push
add
aam
pop
loope
iret
std
jg
jle
lods
or
and
mov
scas
and
shlb
lea
aam
adc
repz
adc
pop
xlat
sbb
push
aaa
sub
or
and
in
cmp
pop
imul
jmp
jl
inc
sbb
push
int3
fisubrs
xchg
sbb
push
ljmp
jl
mov
add
in
pop
fisubs
cmp
gs
mov
adc
and
hlt
dec
or
lock
adc
ficoml
push
mov
sub
push
push
cmpl
js
imul
jo
cwtl
imull
repnz
push
dec
adc
ljmp
sbb
fnsave
pop
mov
mov
movsb
push
cwtl
mov
clc
sub
dec
rcl
jl
and
lcall
sbb
push
xor
mov
dec
cwtl
jb
test
cli
push
xlat
jp
imul
fsubr
std
roll
out
adc
in
add
repnz
inc
mov
subb
ds
in
enter
addl
gs
mov
mov
outsl
into
mov
popa
loopne
cmp
sub
iret
mov
cltd
test
in
pop
mov
sahf
push
push
repz
jns
jne
into
jo
xor
std
push
add
cmp
mov
or
mov
xor
js
std
pop
lret
out
mov
orb
inc
div
inc
sub
out
adcl
xor
jae
pop
cwtl
inc
dec
add
mov
dec
cltd
pop
mov
cmpsl
femms
mov
shll
adc
push
inc
iret
mov
insb
push
ss
fucomip
insb
xchg
push
push
pop
hlt
imul
fcompl
mov
fsubrs
sahf
cmp
push
sahf
pop
push
mov
fcomi
fwait
ss
lods
dec
scas
fstl
push
mov
xchg
ret
and
dec
fidivl
es
inc
mov
add
or
out
adcb
inc
cs
pop
add
imul
mov
pushf
xchg
leave
hlt
xchg
add
pop
jne
lret
adc
xor
xchg
or
xor
pop
mov
or
imul
out
dec
in
mov
xchg
rclb
adc
dec
int3
int
dec
lahf
jns
aas
adc
push
jg
ljmp
push
inc
fcompl
scas
push
xchg
scas
icebp
in
xchg
daa
test
jae
xchg
mov
mov
jbe
cmp
std
mov
add
push
inc
mov
orl
cld
sti
jb
arpl
xorb
push
js
mov
daa
out
jle
repz
xchg
lds
jo
mov
lret
jns
into
lock
aam
push
dec
mov
fcmovne
lcall
insb
das
add
insl
mov
mov
xorb
imul
pop
mov
lahf
xor
das
rorl
xchg
pop
cmp
sarl
push
sbb
dec
fmull
or
push
add
add
jle
jg
stos
mov
push
addl
inc
faddl
mov
xchg
repz
cmpsb
and
popf
test
adc
repz
add
push
push
adc
push
mov
ss
sti
mov
or
sbb
and
shrl
jp
xchg
mov
in
mov
adc
retw
dec
mov
xchg
iret
and
jecxz
in
scas
inc
lret
sub
mov
xchg
jns
inc
xchg
mov
xor
push
hlt
or
bswap
pop
push
les
testb
insb
daa
and
dec
lret
fstps
pop
lret
data16
mov
test
std
jmp
out
shrb
lds
lods
mov
mov
inc
stos
fimull
daa
shrb
movsl
adcl
int
lea
inc
cmp
inc
test
and
mov
pusha
sbb
push
and
mov
cli
mov
into
inc
pop
mov
insl
stc
pop
adc
out
jge
fstl
test
mov
movsb
leave
out
lods
inc
out
jnp
cltd
mov
data16
cld
enter
dec
and
push
aam
inc
out
cmp
sbb
rorb
cmp
sub
cmp
cmp
jns
jb
and
imul
jmp
or
stc
mov
cld
add
rcrb
rcrb
jb
and
ss
lahf
ljmp
lods
cwtl
jo
jns
movsl
lds
or
push
inc
xor
stc
adc
shr
repz
inc
xor
sbb
lea
imul
rol
sub
mov
lock
xor
mov
add
pushf
cmp
cmpsl
pop
popa
clc
or
mov
popf
inc
jmp
out
push
clc
pop
outsl
and
sub
xchg
add
xchg
mov
mov
or
fsubr
repnz
aas
ret
icebp
and
popa
xor
sbb
sti
inc
scas
push
mov
lods
ret
mov
mov
les
insl
xchg
jge
adc
lcall
je
notb
push
or
cmp
imul
and
ffreep
in
popa
dec
push
jno
or
das
inc
mov
push
lock
dec
and
in
pop
lar
or
add
xchg
jns
arpl
outsb
js
dec
sbb
push
lds
dec
add
xor
shll
push
popa
push
mov
cmp
xchg
adc
daa
mov
iret
jns
aam
xchg
inc
scas
or
pop
cmp
pop
jnp
lret
fldcw
cwtl
cltd
rorl
push
or
lcall
cld
add
and
dec
dec
xchg
out
add
push
push
sbb
fisttpll
jl
int3
adc
inc
inc
jmp
pslld
and
pop
xchg
mov
pop
push
xor
sbb
int3
sbb
inc
and
or
rclb
aam
jo
or
jp
sub
fsubp
testb
sbb
jb
inc
fistpll
jp
lods
out
arpl
push
cmp
cmpsl
inc
lds
mov
rcrb
andl
je
xlat
sahf
inc
mov
and
fdivrl
cwtl
pusha
ljmp
inc
jmp
push
pop
cwtl
and
popa
jge
xor
dec
popf
dec
xor
cwtl
or
xchg
sbb
ret
and
mov
jo
je
push
pop
daa
fwait
daa
xchg
or
dec
add
in
shrl
stos
addb
mov
xchg
push
mov
loop
movsl
fbld
or
jns
lcall
mov
xor
jmp
and
adc
sub
inc
push
add
jo
add
mov
int
and
scas
adc
adc
mov
icebp
fsub
dec
stos
pop
pushf
add
pop
push
out
mov
push
stos
test
or
inc
in
fs
mov
aas
daa
fisttps
jge
clc
or
sbb
jp
outsl
xchg
ret
xchg
nop
jl
fwait
push
popf
out
mov
sbb
push
push
jmp
or
xchg
dec
mov
scas
mov
sub
push
jp
xor
xlat
push
aaa
out
leave
roll
lods
cmp
push
mov
out
pop
pop
aas
loopne
ja
xor
sub
dec
cwtl
loope
inc
out
pushl
inc
test
leave
pop
push
and
jmp
inc
jg
jnp
xchg
push
test
lods
push
iret
mov
js
cmpsl
mov
pop
sbb
test
je
aad
push
pop
mov
xchg
sbb
xor
scas
fs
testb
push
push
int
mov
sub
arpl
pop
jnp
lahf
push
or
mov
iret
push
mov
or
pop
xchg
sti
hlt
mov
add
in
and
add
ss
aam
jo
pop
cmp
icebp
test
aas
cs
rcrl
mov
sub
inc
push
pop
repnz
mov
scas
jle
jge
imul
std
dec
mov
fadds
pop
sarb
jbe
cmp
ret
mov
pop
fsubrp
xchg
dec
adc
hlt
ficoms
loopne
sbb
mov
aaa
and
xor
shlb
inc
adc
dec
ljmp
fs
add
inc
and
shll
mov
adc
push
lea
cmpsb
hlt
mov
adc
inc
hlt
ret
fs
xor
sti
pop
pop
push
or
inc
cmp
leave
shll
jle
aam
mov
cmpl
jb
addr16
push
xchg
jne
sti
shrb
fidivs
aam
xchg
xchg
mov
cmp
sbb
nop
bound
loope
cmpsb
jb
repnz
mov
or
add
and
xor
inc
mov
aad
xor
divb
push
xlat
rolb
shlb
in
inc
mov
sbb
mov
call
mov
xchg
lods
negb
xor
adc
mov
pop
sub
xor
rolb
movsl
scas
xor
insb
adc
pop
fsubrl
popa
sar
test
repz
push
sahf
mov
jle
js
jp
loope
ja
out
scas
sub
pop
push
scas
fwait
mov
andl
sub
mov
mov
jg
movb
inc
movsl
imul
mov
stos
xor
scas
ret
popf
xor
cld
test
inc
fistps
aaa
sbb
jge
loope
fistpll
stos
mov
jp
std
dec
in
shr
aas
xchg
cltd
pop
and
jbe
dec
xor
stos
dec
outsl
add
mov
in
repnz
imul
mov
or
ret
jp
mov
out
add
rclb
divb
sub
cmp
cmp
and
adc
sahf
fsubl
les
pop
xor
daa
int
adc
call
out
push
cmp
nop
jmp
add
cmpsb
sbb
pop
cmpsl
xchg
in
fdivrl
push
push
hlt
pushl
mov
and
sub
mov
movsb
gs
popf
int3
push
or
push
aad
and
inc
pusha
sub
std
testl
insb
adc
jns
xlat
mov
inc
stc
aaa
sub
fimull
imul
xor
inc
xchg
dec
pushf
pop
enter
loop
gs
sarl
lret
xchg
adc
xor
into
ret
xchg
dec
mov
scas
or
adc
imul
call
pop
jns
xlat
xchg
outsb
repz
in
ja
adc
and
push
arpl
subl
shr
mov
lret
xchg
aam
cmpsl
cmp
push
loope
and
and
in
jp
mov
es
mov
mov
test
loopne
scas
adc
out
lods
cwtl
jns
add
cmc
repnz
lret
cmp
pop
jl
jb
sbb
ja
cmc
fildll
ss
push
ds
subb
jb
xchg
mov
fbld
xor
dec
cs
sub
push
jb
ljmp
inc
adc
push
mov
push
pushf
aas
pop
add
ja
xchg
xchg
sbb
movsb
nop
shll
xchg
jg
pop
sub
scas
insb
outsl
decl
ficompl
repz
dec
mov
imul
lock
mov
pop
mov
mov
in
repz
inc
repz
push
pop
and
xchg
sbb
push
push
testl
enter
sub
mov
xchg
dec
sub
adc
popf
xchg
jmp
mov
mov
pop
jns
cmpsl
arpl
shll
sub
shlb
stos
lret
jmp
push
push
repnz
les
mov
xor
outsb
movsl
cli
std
add
push
int
xchg
sti
cmpsb
mov
fnstcw
ret
lahf
enter
adc
sub
pop
es
scas
jne
popf
mov
out
sar
lods
jg
xchg
fs
or
pop
and
xchg
test
lock
cltd
lret
xchg
das
in
insl
inc
pusha
mov
jg
outsb
mov
mov
sub
notb
pushf
and
frstor
cmp
mov
dec
xor
aam
aad
cltd
sbb
dec
sbb
cli
and
cmp
sbb
sbb
pslld
es
cmp
push
cmc
xlat
or
mull
in
or
sub
mov
push
out
jp
lea
bound
xchg
loop
pop
ds
sbb
addb
cwtl
test
jbe
or
pushf
push
rcl
fs
shl
inc
jae
sub
dec
leave
xchg
dec
inc
lahf
xchg
sub
xchg
add
lahf
mov
pop
jecxz
adc
mov
decb
add
xchg
pop
cmp
mov
negb
add
pop
lods
icebp
xchg
cli
mov
leave
pop
and
push
pushf
inc
test
testb
leave
lret
lret
cwtl
add
das
popf
das
mov
fildll
mov
int
lcall
xlat
pop
loop
dec
cli
nop
mov
dec
or
clc
dec
xor
or
cmc
xchg
lret
mov
xchg
lock
pop
jecxz
inc
mov
imul
ret
jmp
and
sbb
or
mov
or
pop
inc
or
gs
into
pushf
xor
cmp
mov
mov
iret
mov
inc
pushf
loop
fdivrs
inc
xchg
add
push
mov
jbe
push
push
cmp
adc
inc
movsb
aam
inc
xlat
and
negb
cmpsl
dec
repz
sbb
leave
movsb
cmp
pop
mov
lcall
and
push
or
cmpsl
pop
stos
std
pop
mov
jle
inc
shlb
bound
sub
and
add
lret
adc
adc
rorb
and
dec
sub
mov
insl
lea
mov
out
sub
add
movsb
int
hlt
xor
out
dec
in
mov
mov
adc
aas
cwtl
fmull
add
shr
xchg
test
outsl
mov
mov
repnz
xor
or
es
testl
cmp
fstps
sbb
inc
adc
jmp
inc
jnp
lods
cmpl
push
lahf
xor
dec
cwtl
push
pop
jge
push
sub
into
sub
jmp
jg
or
hlt
xor
mov
push
jnp
dec
add
sub
ljmp
jge
repnz
jl
movsl
mov
sbb
adc
fnstcw
xor
adc
or
pop
hlt
add
mov
and
test
cltd
push
in
mov
sub
jae
outsl
sbb
sub
jo
jae
shl
les
adc
andl
imul
push
leave
mov
sahf
pop
pop
ret
clc
rcrb
add
lea
popf
les
lock
pop
fidivrl
xchg
inc
xor
pop
ss
int
clc
pop
cli
in
cmpsb
cmp
pop
adc
pop
pop
cmp
xchg
cmc
addr16
fxch
in
insl
imul
xchg
and
push
or
repz
roll
cmpsb
cmc
add
xchg
mov
xor
inc
dec
or
loopne
mov
negb
cmp
mov
scas
aas
jae
xchg
in
lret
pop
add
lods
int
pop
jae
add
out
ljmp
ret
jns
out
jns
jbe
jle
or
xor
xor
loop
popa
adc
mov
out
les
out
out
ljmp
jg
cmp
and
pop
pop
dec
nop
cmp
aam
fs
mov
lock
xlat
arpl
ss
xchg
xlat
mov
test
mov
stos
xor
push
aam
or
stos
dec
aaa
lock
repnz
cmp
pushf
fsubrs
push
popa
lds
mov
clc
push
out
repnz
mov
inc
into
mov
xchg
add
sub
arpl
mov
inc
sbb
nop
sar
cmp
mov
imul
sub
call
call
push
xor
mov
mov
pop
xchg
jno
outsb
cmp
mov
pop
sbb
lds
ds
inc
and
into
inc
cli
cmp
sbb
sbb
adc
roll
xchg
fisubrs
subb
xchg
mov
jno
leave
mov
scas
sbbl
mov
mov
rclb
shld
mov
stc
adc
int3
add
inc
mov
loop
fistpl
ficompl
call
jbe
or
stos
mov
ljmp
shlb
cmp
lods
mov
mov
dec
movsb
sub
je
out
popa
cmc
push
cwtl
mov
sub
adc
lret
mov
fisttpl
mov
mov
xor
sti
ds
pop
dec
pop
adc
push
cli
mov
std
and
mov
fldenv
ficoms
mov
push
xchg
and
and
xchg
or
out
pusha
repnz
jnp
call
mov
fdiv
dec
or
fwait
pushf
inc
std
pop
out
inc
jns
adc
cmp
cmpl
lds
mov
sti
and
xchg
inc
in
repz
push
push
sub
jbe
adc
addb
mov
fimuls
jle
xchg
mov
add
xchg
or
dec
push
sbb
sti
jns
js
into
pop
dec
out
mov
aam
movsb
ficomps
jo
sbb
xor
lods
sub
aam
push
jno
jl
dec
sub
les
xor
loop
shrb
inc
adc
popf
jns
push
jge
mov
pop
or
icebp
bound
adc
insl
sub
pushf
inc
cmpsb
int3
xchg
out
es
aam
ja
rcrb
sub
shll
mov
std
jecxz
inc
push
test
das
loope
add
aad
stc
int
dec
dec
fbld
mov
lds
les
xor
ret
mov
pop
sbb
shrl
fistl
jmp
clc
or
out
sbb
lahf
lahf
dec
mulb
mov
int
and
mov
lock
cltd
cwtl
pop
cmp
test
sarl
cmp
pop
movsb
cld
mov
xor
and
sub
add
sbb
sti
jmp
lcall
push
ret
xchg
pop
and
int
xchg
addr16
je
out
mov
mov
push
jne
mov
jns
jmp
cmc
add
or
xor
adc
sti
sbb
cmp
push
stos
in
xor
xchg
std
mov
aaa
inc
ja
je
out
inc
cs
movl
push
mov
cmp
and
jl
fidivs
mov
pushl
sbb
addr16
jae
repz
push
mov
mov
xlat
fstl
push
iret
dec
xor
fwait
xchg
mov
xor
jns
lods
jae
pop
cld
add
hlt
pop
arpl
test
scas
pop
stos
xchg
ret
aaa
ds
adc
rorb
mov
movsl
sbb
pop
outsb
jns
jp
call
fwait
dec
ds
or
xlat
pop
mov
push
dec
mov
je
mov
add
out
cld
fst
add
inc
push
inc
lods
cmp
jle
mov
ljmp
pop
inc
aad
cmpsl
int
lods
inc
inc
rorl
out
mov
jb
rcl
fwait
sbb
loope
ret
clc
xor
loope
inc
mov
lods
jne
out
lahf
sbb
mov
fstl
sub
sbb
mov
cmp
outsb
inc
decb
sub
fcomip
fsts
xchg
lock
rol
aam
loopne
xchg
movb
cmp
and
jo,pn
xchg
sar
in
fiadds
insl
in
test
and
xor
shl
mov
sbb
add
add
inc
jl
lret
movsl
fistps
sahf
mov
mov
sbb
cld
cli
outsl
mov
cs
cmp
cli
shlb
scas
aam
sub
popf
jmp
outsb
adc
mov
mov
clc
jg
mov
int
lods
inc
clc
mov
adc
push
pop
arpl
sub
insl
outsl
jns
inc
pop
push
out
ja
pop
or
bound
in
iret
rcl
push
pop
sbb
adc
sbb
mov
scas
xchg
lahf
hlt
xchg
aam
or
rcll
push
loop
stos
into
jle
push
fdivrl
push
test
dec
xchg
lods
inc
popa
or
push
pop
mov
fldcw
adc
je
in
inc
sub
and
clc
and
pop
inc
jns
xchg
mov
je
loopne
insl
fdivl
mov
and
adc
sub
aaa
je
add
adc
adc
pusha
add
jno
sbbb
jmp
mov
ficomps
jbe
or
push
jle
cs
and
rcr
outsb
fbstp
sbb
in
mov
dec
cmpsb
enter
pop
cmp
fbld
inc
inc
adc
test
mov
or
xchg
mov
pop
xchg
jl
pop
sub
clc
adc
testb
fwait
pop
popf
leave
mov
daa
adc
inc
in
pop
lahf
cltd
pop
into
cmp
cmp
push
xlat
stc
test
in
outsl
jne
pop
xchg
dec
orl
dec
addb
xorb
mov
into
dec
xchg
pop
stos
mov
movsl
inc
push
out
out
pushf
add
adc
mov
dec
pop
mov
popa
mov
enter
out
jne
clc
mov
sub
pop
or
imul
test
inc
fldcw
aam
aam
xchg
pop
xchg
inc
mov
xorl
shlb
mov
test
xor
je
pop
lods
pop
fildl
push
stc
mov
mov
add
fistl
sarb
stc
ljmp
mov
dec
sub
xorl
or
fst
repnz
mov
jno
frstor
imul
dec
enter
sbb
adc
mov
test
fldenv
jmp
xchg
pop
gs
inc
div
push
fdivs
test
pop
mov
lret
or
mov
jb
mov
sub
mov
stos
fstpt
mov
mov
add
or
jg
aaa
mov
fcmovu
ret
call
clc
data16
imul
xchg
and
dec
sub
push
aaa
les
pop
and
push
test
jmp
or
test
push
or
push
test
in
aaa
mov
negb
addr16
pop
mov
int
mov
and
mov
xchg
stos
testb
push
xchg
push
cmpsl
xchg
pop
insb
ret
ror
popf
xor
insl
iret
adc
sub
addr16
out
or
dec
pop
sbb
aas
or
and
mov
mov
xchg
jmp
or
cmp
and
mov
mov
sub
push
addr16
imul
inc
pop
sti
decb
adc
stos
in
inc
enter
push
scas
inc
movsl
outsl
lods
sahf
push
lds
test
sbb
addr16
cmpsl
cmp
cmp
dec
mov
pop
or
sub
lret
xchg
or
sbb
jae
cmp
cmc
sbb
cmc
or
aas
ret
sbb
sti
push
call
cmp
cmc
xchg
xchg
std
mov
jnp
or
cmp
cmp
fisubrl
pop
aas
lock
outsl
pop
pop
jne
outsl
cmp
pop
jb
jecxz
aas
pusha
movsl
sbb
int
stc
popf
pop
mov
dec
stc
xchg
inc
xchg
adc
add
add
mov
cmpl
fcmove
jmp
dec
scas
leave
inc
les
cmpsl
add
mov
in
dec
scas
std
rcrl
lea
jo
loop
in
mov
or
fidivrl
out
cmpsb
ret
mov
cmp
inc
sub
popf
cmpsl
into
mov
std
stos
test
mov
xor
addr16
dec
nop
cmp
or
cmp
lcall
rcr
clc
lret
dec
rorl
add
push
push
test
push
and
out
mov
or
rcll
fdivrl
push
fidivs
cmp
test
or
ljmp
pop
and
fs
int3
inc
fstpt
pop
mov
jge
push
clc
cmp
mov
xchg
push
push
dec
lods
and
loope
mov
or
movsl
push
aas
jecxz
mov
mov
rorb
cmp
mov
addr16
lods
push
fadd
mov
sub
int3
dec
lcall
xchg
aas
cmc
mov
jmp
insl
and
inc
mov
es
push
stos
jo
mov
out
lret
aad
cmpsl
push
lds
fs
stos
cwtl
jle
stos
jmp
icebp
iret
pusha
test
loopne
clc
push
cmp
loope
mov
xlat
iret
rcrl
cmp
jns
push
mov
or
xor
stos
cmp
inc
cmp
mov
and
jbe
inc
or
and
xor
lock
ds
push
fsubs
je
dec
mov
idiv
jp
push
inc
scas
push
pop
cs
mov
inc
lea
fs
push
xlat
andl
dec
sbb
cmpsl
int3
xchg
mov
fistl
fisttpl
adc
jecxz
ret
aad
mov
mov
pop
jecxz
push
in
fs
dec
mov
mov
dec
test
ss
sbb
add
sub
jmp
and
mov
pusha
out
lret
in
mov
fsubl
pop
inc
repnz
test
cli
pop
fistpl
fsubrl
inc
xor
cmp
movsl
nop
das
xchg
loopne
movsl
orl
fldt
inc
mov
and
add
add
jg
ficomps
or
pop
ficoml
xor
iret
push
xchg
cmp
dec
push
add
mov
jns
daa
push
mov
xor
sub
sti
mov
cmp
cmp
scas
sbb
inc
loop
ret
sub
js
lea
pushf
lret
sub
pop
lea
mov
mov
mov
in
int
or
mov
insb
sbb
push
xchg
jmp
aas
pop
sbb
outsl
mov
xor
dec
mov
sahf
xor
mov
add
jp
mov
push
lret
add
dec
inc
repz
aad
test
push
lret
in
pop
les
adc
data16
movsb
or
cmp
fdivl
les
pop
clc
and
and
cwtl
cs
pushf
aas
inc
aam
jo
adc
jo
adc
movsb
lret
jo
pop
in
mov
filds
loopne
add
pusha
adc
dec
movsl
ret
cmp
stos
inc
cmp
bound
and
aaa
xor
ja
scas
scas
pop
je
rcl
mov
jecxz
js
dec
lock
xor
cmpsl
and
jbe
push
dec
jg
dec
pushf
adc
mov
xchg
aas
rep
mov
ficoms
sbb
inc
sub
or
lods
iret
lods
out
cmp
sahf
inc
cmp
inc
aas
ficomps
cmpsl
in
or
leave
in
sbb
push
dec
cmp
jg
sbb
sbb
das
push
inc
cmpsl
xor
fildll
xchg
add
jmp
cmp
inc
xchg
jbe
inc
neg
mov
pop
pusha
sub
xchg
mov
lods
cwtl
mov
in
outsb
pop
xchg
jnp
or
fmull
dec
pop
pop
push
addr16
fwait
push
add
cmc
xor
ljmp
inc
mov
mov
mov
loope
cmp
popa
push
into
aaa
out
pusha
lock
leave
gs
and
xor
shll
push
xchg
mov
cltd
ljmp
lock
add
dec
push
cld
shrb
push
ffreep
cmp
xchg
dec
arpl
mov
ret
adc
inc
bound
ja
jne
cli
rcl
ds
mov
and
pop
dec
jo
icebp
mov
scas
jbe
xor
out
cmovae
rclb
mov
mov
adc
dec
fcmovne
iret
cmp
mov
and
xor
test
je
and
lds
mov
data16
jle
pop
sub
sarl
mov
mov
loopne
or
insb
mov
pop
xchg
sbb
idivl
fisubl
jne
imul
daa
cmc
ret
scas
jl
test
add
and
dec
ret
sbb
sub
orl
sub
mov
inc
hlt
das
leave
push
out
mov
or
mov
jnp
add
imul
mull
xor
adc
pop
jge
jecxz
push
xchg
and
mov
push
pop
lret
push
xchg
push
fs
mov
lret
aaa
ljmp
or
mov
lock
fidivl
mov
fistps
sti
xchg
pop
add
inc
stos
jecxz
mov
and
mov
or
inc
repnz
inc
mov
repnz
adc
inc
add
mov
jecxz
sub
pop
sarb
sbb
xchg
scas
jge
jle
shl
ret
addr16
lret
into
lds
call
dec
push
leave
xchg
adc
ja
push
rorb
cmpb
push
add
icebp
test
mov
cs
js
jno
dec
adc
push
xchg
lahf
cltd
push
pop
imul
mov
and
movl
sahf
outsl
push
ret
loope
ja
fnsave
add
or
mov
add
cmp
repnz
cmpsb
aaa
mov
pop
sub
cs
aas
pop
icebp
jo
imul
mov
aas
push
rcrb
cld
movsl
jl
and
js
xor
cmove
es
sti
fistps
test
xor
cmpsl
movsb
pop
int3
pop
sbb
roll
in
outsl
add
cmp
rclb
sbb
push
xchg
adc
icebp
shrl
loop
fsubs
loop
mov
mov
sub
cmp
push
insl
popa
mov
jno
jg
ljmp
xchg
sarb
imulb
repnz
adc
cmc
push
pop
or
sbb
push
icebp
xor
jno
sub
mov
scas
cmp
sub
inc
gs
mulb
cwtl
cmp
out
dec
loope
or
sbb
push
enter
mov
sub
pop
sbb
test
pop
cmp
in
mov
test
mov
rorb
inc
adc
pop
cli
repz
sub
scas
and
xor
fildll
cmp
insl
repnz
mov
ret
add
sar
and
lcall
mov
push
dec
lcall
aad
incb
mov
lds
add
xchg
dec
ret
sub
dec
xchg
dec
rclb
insb
inc
dec
cld
push
push
scas
pop
jo
lods
in
cltd
in
leave
or
daa
insl
daa
inc
testl
or
add
push
shlb
jae
sub
icebp
lea
jg
xchg
xchg
xlat
push
in
sbb
movhps
mull
pop
shr
imul
pop
xor
shr
hlt
popf
mov
jns
ficoml
test
adc
push
inc
negl
sbb
gs
roll
adc
inc
push
popa
std
je
rorl
loopne
aam
cmpsl
pusha
sti
stos
aas
jle
sbb
leave
xchg
fldenv
roll
lods
movsl
imul
add
ja
jl
xor
mov
fnsave
cld
lret
sub
cmp
mov
pop
adc
add
xlat
sbb
adc
mov
cmc
aam
xchg
cmpb
test
mov
test
stc
xor
xor
push
nop
sbb
ffreep
or
add
pushf
inc
jne
cltd
cmpsl
into
push
mov
std
jg
cmp
cmc
dec
xchg
mov
scas
mov
mov
mov
inc
add
add
add
add
ficomps
fisubl
xchg
mov
xchg
ljmp
cmc
adc
out
mov
inc
mov
scas
mov
or
les
test
cmp
xchg
cwtl
and
shr
aaa
mov
mov
sbb
mov
push
lcall
out
push
clc
mov
daa
stos
cmpsl
dec
sahf
std
mov
daa
lret
sub
dec
dec
mov
mov
mov
aas
dec
ret
repnz
lret
mov
mov
inc
xchg
push
popf
sbb
test
testl
rorl
in
push
xchg
mov
mov
xlat
mov
jne
hlt
and
ljmp
jecxz
dec
aas
cli
mov
sbb
jg
mov
stc
int3
mov
pop
add
mov
ret
lahf
pop
sub
movl
sarl
adc
mull
lret
fnsetpm(287
sbb
in
inc
lods
xor
add
push
mov
movsb
inc
in
jnp
aam
scas
inc
es
clc
insb
insb
dec
xlat
mov
in
pushf
in
mov
xorb
mov
arpl
mov
in
icebp
popf
shlb
or
mov
es
out
out
pop
nop
xchg
xor
jmp
popa
inc
imul
or
xor
pop
rclb
test
mov
aad
out
adc
pop
pop
jae
popa
test
dec
decb
int
xor
jle
adc
push
sub
pop
addr16
fdivl
insb
dec
movsl
mov
xor
icebp
enter
xchg
push
xlat
sub
dec
daa
add
imul
icebp
cmp
test
mov
mov
jbe
test
insb
xor
fwait
sti
jo
ss
bound
and
mov
xor
sbb
js
in
mov
in
jnp
aaa
adc
fistps
inc
and
gs
inc
subb
repz
mov
and
or
cmp
jg
pushf
js
xor
dec
ret
push
mov
inc
and
mov
cmp
fistps
sub
sbb
adc
insl
dec
and
push
dec
push
fincstp
push
addl
inc
clc
xchg
pop
imul
xchg
js
mov
out
sub
mov
stos
xor
fnstsw
jl
sahf
jge
mov
pop
sbb
mov
hlt
pusha
sbb
ljmp
cld
test
cmp
dec
icebp
loop
sbb
sbb
jl
inc
xor
cmp
aaa
loope
ret
xor
mov
push
jle
test
or
out
cmp
jbe
ret
insl
ss
cltd
push
mov
jnp
push
fmulp
lahf
rcl
inc
cltd
push
jmp
js
sbb
jno
mov
in
ljmp
sar
lock
sahf
pusha
adc
call
push
leave
sub
mov
aam
pop
mov
sar
or
xchg
call
add
mov
mov
pop
fistl
push
int3
push
sbb
pop
inc
lock
loop
scas
adc
leave
sbb
nop
aam
stos
inc
or
dec
push
sbb
setns
enter
cmp
jb
into
int3
sbb
roll
push
fcmovb
jns
or
loope
out
jg
into
movsb
cwtl
and
int
xchg
push
js
fcoms
cmp
into
mov
xchg
jle
popa
or
out
insl
inc
int
cmp
cld
rcr
test
rorb
popf
xchg
cli
push
adc
cli
outsb
jle
adc
adc
mov
insb
and
mov
inc
xlat
push
cmp
or
orl
arpl
jle
out
hlt
jb
xor
out
jnp
mov
jns
jp
mov
sarb
adc
insl
mov
jne
movb
push
scas
sbb
xchg
or
mov
cmpsb
test
inc
data16
rclb
aaa
and
mov
sarl
push
call
stc
cmc
inc
fwait
xchg
or
mov
dec
out
push
mov
stos
fbld
les
popa
adc
movsb
cmp
shll
shl
aaa
sub
cmp
scas
lret
xchg
dec
sub
cmpsl
repnz
mov
out
sbb
mov
push
xor
mov
jne
dec
dec
push
ja
adc
mov
fwait
mov
pop
push
clc
jle
or
dec
add
jge
les
jb
cmp
pop
stos
mov
push
sub
leave
xchg
and
ss
ds
sub
test
ret
inc
cs
sbb
push
pop
sahf
mov
iret
jnp
dec
jnp
xchg
xchg
sbb
push
cmp
sbb
sarb
jge
ss
mov
mov
lock
roll
xchg
cmpsl
push
xchg
cwtl
lods
fdivl
xor
mov
cmpsb
in
rcll
inc
ss
sub
push
sar
movsb
pop
pop
xchg
out
mov
nop
jge
cli
fstp
addb
xlat
and
xor
hlt
inc
shl
xlat
iret
mov
das
xor
stos
cmp
xchg
xchg
pusha
push
pop
data16
out
out
adc
push
rcll
fwait
out
test
or
pop
nop
push
test
fsts
lahf
stc
mov
mov
sbb
cmp
movsb
mov
loope
add
push
lock
es
cmc
lock
sti
jecxz
push
add
fsubrl
sub
cmp
jmp
aad
divb
out
pop
inc
jnp
jo
pop
orl
cld
scas
fisubl
or
mov
and
imul
xor
ss
or
cwtl
xchg
orb
das
lods
aam
ret
mov
inc
push
lcall
enter
dec
sub
and
cld
mov
xchg
sbb
enter
imul
dec
ljmp
or
fdivr
or
pushf
sbb
jne
pop
repnz
push
test
aaa
call
sub
xchg
dec
push
negb
push
test
loop
out
jl
loop
inc
mov
jno
mov
mov
pop
push
mov
and
inc
mov
or
addr16
pop
push
jae
lock
sbb
ljmp
shlb
jnp
jo
sbb
lcall
xchg
or
leave
pop
imul
ret
add
mov
xchg
dec
nop
in
and
sub
xchg
arpl
cmp
xchg
and
js
adc
mov
ret
or
or
xor
in
sub
push
cmp
cwtl
shll
mov
out
lods
pop
mov
rolb
jns
adc
stos
sub
lahf
loopw
clc
rolb
push
sub
jl
jnp
push
mov
call
xchg
negb
pop
mov
std
cwtl
mov
cmpsl
aam
sub
std
popa
lret
dec
sbbb
sub
pop
popf
fdivr
sub
hlt
jno
mov
and
pop
dec
ret
xor
or
loop
lret
fsubs
pop
insl
fdivl
lods
add
in
aaa
push
lahf
jbe
dec
cmp
xor
dec
rcll
sub
xchg
mov
les
xor
pusha
mov
inc
mov
in
sbb
andl
lock
loopne
pop
je
daa
cld
pop
xor
and
dec
hlt
pop
das
sbb
aad
cmc
push
imul
shlb
xor
pusha
stos
inc
and
push
aaa
scas
test
or
inc
xchg
mov
cs
ljmp
in
jns
push
mov
iret
shl
adc
mov
call
pop
push
xchg
rcrb
jg
inc
test
shr
adc
in
jo
xchg
insl
scas
inc
out
sub
xchg
pop
xchg
call
push
ljmp
xchg
or
test
mov
xchg
and
fisttpl
mov
inc
sahf
mov
into
add
loope
push
mov
adc
pop
cmp
sub
cli
jbe
int
sti
mov
sti
push
sub
jge
es
cmpsl
popf
mov
pop
jmp
mov
jns
push
in
rolb
loope
mov
aad
out
push
fidivl
jbe
mov
xor
lods
add
xchg
fnstsw
lods
push
shlb
lcall
add
dec
insb
fimull
jbe
pop
fildll
sti
les
fs
imul
add
lahf
rcrl
mov
xor
aaa
jo
scas
lods
int
lods
dec
out
sbb
lahf
cmp
inc
loop
mov
lods
loop
pop
enter
stos
xchg
fistl
lcall
push
mov
cmc
sub
lods
sbb
xchg
out
pop
or
aam
dec
xchg
nop
mov
mov
cmp
xor
repz
sub
jl
lcall
movl
je
mov
cmp
stc
aad
or
ljmp
pop
mov
push
jecxz
cli
ss
and
adc
push
imul
loop
pop
js
or
stos
nop
dec
clc
inc
jp
sub
push
jg
mov
fisttpll
movsl
leave
cld
mov
insl
jmp
cmpb
out
scas
mov
push
add
sarl
push
lods
jbe
mov
outsl
sub
shr
mov
mov
sub
sbb
inc
pop
inc
mov
daa
insl
inc
mov
aaa
jl
and
xor
mov
sbb
or
push
cmovnp
push
jp
mov
or
push
xor
pop
push
test
add
insb
fistl
push
dec
dec
js
sbb
adc
aas
mov
clc
stos
cmp
rcr
cli
out
cwtl
cmc
mov
lods
fadd
scas
addb
icebp
popa
or
repnz
adc
out
mov
jecxz
mov
adc
ficoml
sub
sbb
sti
jo
fcoml
aad
das
jnp
mov
push
fisubrl
lret
ds
fcoms
icebp
fs
shrb
dec
bound
std
jl
jmp
xor
cmp
sbb
ljmp
mov
es
das
mov
mov
jecxz
fs
adc
and
cmp
int3
mov
movsb
mov
mov
cltd
mov
dec
cld
or
stos
lret
mov
cli
mov
outsb
in
mov
es
mov
inc
pavgb
sti
push
or
add
or
adc
stc
cmpsl
push
imul
in
mov
and
pop
lods
sbb
sub
enter
in
push
jmp
out
sahf
jge
stos
xchg
push
sbb
sub
mov
cmp
shlb
mov
pop
popa
into
ret
imul
mov
jle
mov
mov
adc
lods
sub
or
negl
xchg
scas
sub
pop
dec
in
add
dec
aas
ss
mov
enter
inc
pop
in
test
mov
mov
mov
daa
dec
add
test
pushf
sbb
dec
hlt
mov
adc
push
insl
movb
jns
stos
jne
push
push
sub
and
mov
imul
out
cmpsl
cld
mov
mov
clc
mov
outsl
or
ja
xchg
ret
dec
test
fwait
ds
jmp
sub
push
inc
rcrb
and
mov
or
das
xchg
dec
xor
out
jo
js
or
aam
lods
es
push
and
incl
push
xchg
pusha
xchg
add
stos
out
pusha
les
mov
jne
fwait
jbe
mov
aaa
sub
mov
jb
mov
sub
dec
scas
nop
xor
jp
xchg
pop
xchg
pop
hlt
mov
pop
gs
xchg
sbb
pop
xor
sbb
xor
sti
jbe
or
cmp
dec
push
iret
mov
outsb
mov
sub
pop
cmp
sbb
pop
xchg
mov
or
add
daa
mov
out
int3
jns
nop
xchg
mov
xor
jecxz
andps
cmpsb
out
xchg
push
lahf
mov
mov
jecxz
mov
xchg
cmp
popa
ret
cltd
add
out
jg
sahf
pop
xchg
gs
xor
adc
xor
pop
sahf
mov
and
out
xchg
jns
push
and
push
push
in
jnp
cs
cld
push
scas
pmuludq
push
inc
jns
cmpsl
jo
stos
popa
loop
cltd
lds
mov
mov
shll
push
mov
fs
jnp
ljmp
test
adc
and
icebp
jmp
mov
shr
scas
out
bound
pop
push
data16
pop
outsb
icebp
or
push
stos
iret
mov
adc
cmpsl
push
shl
sub
aam
test
xor
and
jmp
pop
fdivs
sti
xchg
lret
fwait
inc
movsl
dec
jecxz
lds
and
xchg
dec
insb
fisubrl
jmp
dec
xor
sbbl
fsubrl
add
mov
push
xchg
rolb
leave
test
cwtl
push
pop
mov
push
pop
sbb
mov
lds
popf
jae
adc
xor
mov
scas
push
sub
arpl
hlt
mov
cmp
jno
inc
ja
shrb
push
mov
sub
ds
fldenv
xor
pop
rclb
mov
into
xlat
jo
lea
jne
xchg
hlt
xorb
call
into
je
shll
pop
jb
imull
shrb
jmp
arpl
test
aam
push
ret
push
mov
enter
cmp
fcoms
inc
mov
xchg
and
mov
mov
popf
lods
mov
imul
frstor
rcrl
filds
and
push
mov
scas
sub
out
inc
aam
xchg
xor
in
cmc
xor
dec
mov
fstpt
ficompl
outsb
lods
or
or
nop
jecxz
mov
and
pop
test
inc
iret
xor
and
push
cmp
enter
imul
push
pop
pop
stc
dec
sbb
pop
xor
push
cmpsl
sbb
test
sbb
add
adc
and
cmp
clc
sub
fs
lahf
leave
insl
bound
add
or
bound
ret
xor
andps
lds
aas
lods
pop
fcomip
fld
test
xchg
nop
cli
cmpsb
movsb
xchg
lock
lods
mov
das
fsts
xchg
push
icebp
push
cmp
or
mov
cmpsb
adc
stos
int
rolb
aam
pop
push
push
and
popa
mov
xorb
mov
sub
pop
in
push
pusha
xor
dec
xor
and
fists
imul
pop
mov
dec
gs
shlb
dec
jmp
ficoms
shrb
mov
mov
clc
xchg
mulb
cmp
add
or
cwtl
cmp
and
adc
push
or
sbb
sbb
test
fucomip
repnz
cld
aad
ljmp
pop
adc
adc
mov
xchg
outsb
mov
xorb
shr
mov
pop
insl
mov
into
push
push
jle
pusha
rol
fdiv
jecxz
mov
lret
push
lahf
or
inc
xchg
fstpl
add
lret
lods
cmp
sti
add
fists
mov
in
cwtl
xor
xchg
ds
inc
lods
test
mov
repnz
loop
xor
notl
je
push
xchg
dec
sti
push
mov
xor
imul
stos
outsl
jmp
sarl
dec
adc
sbb
mov
add
std
cli
cmc
or
in
clc
testl
pop
inc
or
jmp
mov
lock
xor
stos
xor
aas
inc
and
mov
push
push
nop
adc
jae
push
rorb
in
mov
testb
repz
sub
fldl
xor
push
sub
fwait
mov
sub
aad
mov
loopne
stos
pushf
pop
cmp
push
or
mov
lret
imul
fildll
adc
aaa
jmp
cmpl
ss
mov
dec
mov
adc
addr16
fistpl
jns
xlat
daa
adc
mov
mov
push
or
mov
push
nop
bound
cmp
cmp
push
cmc
jecxz
xchg
push
jg
inc
loop
cmc
test
and
jo
fistl
outsl
pop
add
sub
in
and
mov
mov
adc
dec
mov
ds
fisttpl
adc
insl
mov
movb
fwait
call
xor
test
add
jmp
cmp
dec
ja,pt
std
add
idivb
mov
sbb
pop
repz
sbb
pop
adc
sbb
mov
rcrw
dec
or
jmp
fidivs
inc
xor
out
jg
mov
xchg
sahf
out
loopne
int
cmp
push
inc
dec
xor
jnp
adc
sub
sbb
jl
jbe
fstpt
shrb
fsub
mov
jp
and
mov
cwtl
sbb
jle
ja
mov
jg
xchg
jae
inc
roll
js
sub
mov
cmp
jmp
or
mov
outsl
add
loopne
insl
push
aas
test
pop
sub
xchg
push
jae
push
cmp
data16
scas
inc
test
push
decl
add
loopne
fucom
pop
xchg
sub
jno
cmp
mov
adc
nop
sub
jne
jbe
push
stc
imul
add
jle
inc
test
rcrb
inc
call
scas
daa
in
shl
add
jmp
push
push
das
pop
pop
push
or
fistpll
pop
mov
pop
and
rolb
push
push
stos
rcr
and
arpl
rorb
cmp
xor
jp
push
cwtl
pop
xchg
jle
cmp
mov
mov
fwait
pushf
mov
pop
jp
cs
pop
inc
mov
mov
mov
mov
xchg
adc
cmc
cmc
dec
or
fwait
cmp
jb
mov
pop
add
xor
mov
call
call
xor
cmpsl
lock
push
aas
xor
dec
sub
test
adc
xchg
addr16
add
dec
ret
stc
pusha
dec
sbbl
jne
fldcw
cmp
jbe
sub
mov
nop
int3
pusha
shrb
rol
ret
scas
push
icebp
orb
out
xchg
mov
vmovhps
scas
or
jnp
testb
adcb
aam
or
cwtl
inc
mov
adc
dec
or
push
nop
in
inc
test
inc
orb
int
sbb
icebp
mov
add
subb
jae
mov
stc
mov
insl
mov
and
sub
mov
popa
fisubl
lods
enter
arpl
or
popa
or
xchg
pop
or
sbb
mov
cmp
outsl
mov
icebp
inc
addb
in
jae
push
leave
and
in
mov
mov
test
popl
sub
mov
stos
jg
jmp
push
out
imul
push
dec
lcall
sub
fnstsw
push
test
mov
fbld
dec
fsincos
pop
mov
shll
out
or
loope
or
mov
jno
push
adc
out
into
addr16
and
imul
pop
in
or
adc
jbe
sahf
mov
clc
xchg
push
mov
sbb
mov
arpl
cmpsl
int3
outsb
adc
sbb
push
jns
dec
inc
dec
imul
das
testl
cld
xchg
dec
loop
ss
jns
mov
jo
adc
push
test
pop
and
mov
or
cmp
adcl
push
add
lds
lea
push
mov
mov
call
insl
outsb
clc
mov
aas
pop
fbstp
lahf
gs
inc
pop
xchg
inc
mov
into
imul
std
xlat
push
enter
imul
ja
and
jmp
roll
int
mov
in
imulb
xor
jl
lcall
jb
lea
mov
lds
cmp
pop
push
xorb
pop
nop
andb
jg
call
inc
in
pop
cwtl
xor
aad
cltd
in
idivl
mov
pop
pop
dec
loope
xor
movsb
jp
dec
and
mov
mov
aam
stos
push
test
sahf
adc
sub
xlat
and
push
ds
std
mov
jp
add
add
loopne
adc
xor
stos
leave
push
jp
shrl
adcb
jo
mov
les
xchg
inc
movsl
sahf
addl
loope
adc
xor
inc
or
rolb
lds
xchg
je
and
xor
gs
popa
bound
arpl
add
xor
cwtl
outsb
pusha
xchg
sarl
dec
jb
xor
outsb
scas
sub
pop
outsl
movsb
imul
into
mov
or
gs
shlb
ljmp
mov
mov
inc
hlt
sub
pop
sbb
subb
or
lea
jb
sub
jno
mov
push
mov
pop
pop
mov
leave
pop
dec
int3
divl
in
push
lods
orl
jl
push
sbb
clc
mov
jle
mov
xchg
mov
cmpsb
stc
mov
jns
inc
gs
jge
inc
xchg
jb
xor
pop
xor
mov
add
out
lods
adc
js
lret
popa
fcompl
sahf
imul
push
jns
push
leave
adc
ret
mov
lods
in
gs
scas
xchg
lods
inc
lock
lock
cmp
stos
js
push
sub
add
int3
sarl
cmc
cld
loope
xchg
mov
cmp
mov
test
nop
and
jns
add
in
cwtl
sbb
mov
pop
orl
cli
jne
jnp
outsl
fnstsw
loope
push
roll
cld
cwtl
loopne
push
mov
fs
pop
rcrb
jge
test
cld
andl
add
mov
stos
dec
sbb
xchg
pop
inc
push
push
sbb
into
mov
movsl
cmpsl
mov
jp
xchg
into
adc
test
pop
movb
fisubrl
shll
pop
pop
mov
xchg
shrb
fsubl
jae
sbb
outsl
and
pop
cmp
fnstsw
scas
add
cmp
das
xchg
jns
and
aad
push
ret
nop
adc
jne
jle
sbb
and
push
mov
jne
ret
adc
insb
mov
mov
dec
test
cmp
je
and
test
push
sysexit
mov
jecxz
pop
pop
stc
and
jns
jbe
sub
dec
dec
arpl
ljmp
and
int
sbb
mov
push
repz
mov
pop
arpl
movsl
dec
addr16
mov
int
sbb
sub
mov
push
mov
shlb
lock
bound
jp
add
and
adc
mov
fmull
aas
js
sbb
stos
mov
movsb
jae
inc
xchg
mov
jbe
stc
iret
inc
aam
pop
dec
cmp
addr16
in
mov
rcl
repnz
lahf
push
dec
aad
pop
popa
push
xor
cli
inc
xor
stc
xchg
or
lea
popa
jo
jne
cld
and
or
jno
mov
add
test
pop
dec
xchg
xlat
add
scas
cli
or
sub
imul
loopne
jmp
add
lods
test
push
je
inc
js
mov
dec
lret
adc
mov
cmpsb
outsb
add
push
in
and
fdivrs
sbb
mov
push
sbb
ss
inc
sti
xchg
popa
pop
jnp
cmpsb
xchg
xor
mov
aaa
sub
test
xchg
jmp
out
outsb
mov
inc
das
inc
aad
sbb
les
sbb
sub
mov
fwait
or
and
adc
pop
aam
xchg
cmp
in
push
popa
dec
std
cs
scas
jl
xor
push
or
hlt
adc
ret
lahf
inc
mov
and
xor
inc
mov
or
in
fxch
lea
push
xchg
out
lock
push
test
add
enter
add
and
mov
movsl
lods
es
mov
adc
jle
leave
sbb
mov
das
adc
mov
pop
jl
loope
push
or
mov
nop
xchg
shrl
xchg
sub
imul
push
xchg
out
pop
arpl
xor
shll
stos
jae
cmp
in
add
mov
daa
stos
push
insb
sub
scas
flds
call
cltd
and
sti
add
daa
mov
loopne
jns
rorb
shr
push
adc
hlt
mov
fbstp
rclb
in
xor
fnsave
outsb
cli
mov
jecxz
aad
daa
jle
cmp
repnz
sbb
loopne
sub
arpl
andb
add
mov
aaa
dec
leave
ja
insl
jne
and
or
ja
cmp
fistps
sub
jae
dec
or
lret
xchg
aam
lahf
nop
or
cmpsl
movsl
adc
lock
rolb
out
pop
sbb
push
or
sbb
mov
fwait
mov
cld
movsb
jnp
add
imul
rcrb
clc
adc
shlb
mov
jno
fcmovnb
hlt
mov
loopne
jns
adc
pop
pop
rcrb
xor
sti
lea
dec
dec
pop
notb
mov
fisubrl
pop
and
adc
sbb
jae
gs
mov
test
insb
fdivr
push
sbb
int
add
repnz
loop
push
lcall
xor
rclb
inc
int3
inc
int
shlb
into
push
jns
dec
or
jecxz
repnz
or
push
pop
and
push
in
insb
fs
fsub
into
dec
leave
int3
iret
sbb
jge
inc
mov
xor
inc
mov
sbb
sbb
or
aas
xor
and
adc
mov
or
arpl
lahf
outsl
xchg
ficoms
stos
out
repz
pop
pop
mov
pop
in
xchg
xor
xlat
popa
mov
bound
mov
shll
scas
jl,pn
and
mov
or
fdivrl
xor
adc
mov
push
mov
into
imul
cwtl
vpmovmskb
call
mov
ljmp
mov
fsts
jmp
push
divl
sub
add
mov
jl
inc
out
pop
xchg
stos
jbe
test
and
jle
or
iret
xchg
xchg
cmpsb
xlat
sub
call
lcall
mov
loope
lret
rorl
or
iret
and
push
fcoml
cmpsb
sub
fs
insb
aad
mov
int3
es
sbb
jne
jnp
xor
mov
ja
sbb
mov
aam
push
into
out
addb
cmc
outsb
xor
xor
push
imul
cmp
icebp
lds
pusha
rcl
push
jbe
int
adc
push
mov
fdivr
bound
in
js
das
test
push
fsubp
sub
add
and
push
mov
test
jl
xor
cmp
cmp
jne
pop
inc
mov
sbb
jmp
std
int
sbb
repnz
test
or
sti
push
push
dec
sti
push
add
jns
jmp
mov
mov
inc
dec
sbb
cli
push
or
pushf
lock
cs
add
leave
aas
mov
lock
je
gs
lret
lahf
mov
lahf
push
push
mov
mov
mov
cmc
insl
sahf
mov
jne
jecxz
cmp
and
icebp
rclb
mov
xchg
ret
xchg
fdiv
dec
fcomps
fwait
xor
push
and
out
mov
stos
outsb
inc
data16
mov
inc
outsb
arpl
insb
movsl
add
mov
iret
movsb
ret
xor
add
in
cmp
mov
add
jg
or
lds
cmpsl
pop
into
xchg
mov
add
data16
pop
mov
mov
mov
and
rcll
fimuls
popl
or
sbb
push
pop
mov
adc
pop
dec
dec
iret
sub
push
lock
in
xor
cmpsb
fistps
sub
lods
aas
push
rcr
push
mov
fadds
jle
jp
adcl
or
in
aas
aaa
or
mulb
aad
call
fidivs
mov
jno
shld
inc
xchg
xchg
aas
mov
movsb
sarl
jmp
rcrb
cwtl
pop
in
jg
pop
mov
imul
inc
add
lods
xchg
clc
mov
andb
jmp
and
jns
cmpsl
push
lahf
out
lahf
nop
xor
or
cltd
sub
mov
pop
dec
scas
xor
push
out
mov
sti
sbb
jecxz
std
and
jp
pop
scas
ss
mov
xchg
popf
jno
mov
int3
add
fs
xorl
inc
or
ret
pop
mov
shl
lods
sti
stos
cli
adc
les
sbb
gs
scas
insl
mov
mov
iret
mov
pushf
xor
das
cmc
fnstenv
divl
cltd
movd
fdivrs
add
imulb
jno
pop
cmc
pusha
mov
xchg
shlb
mov
std
call
dec
or
in
fsubl
jmp
dec
call
repnz
das
xor
int
adc
mov
push
orl
clc
pop
xchg
pop
dec
loope
call
xor
mov
aaa
les
hlt
pusha
testl
jns
fwait
imul
stc
test
xchg
inc
mov
fs
test
mulb
outsb
inc
or
mov
and
xchg
pop
stc
jns
xchg
pop
sti
adc
mov
aaa
out
movsb
mov
shlb
or
xchg
jg
jmp
outsb
stos
clc
lock
push
movnti
in
pop
or
subl
pop
jno
jae
pop
test
pop
popf
mov
pop
push
and
or
cmpsb
shl
lret
data16
inc
cmc
mov
sub
sub
add
ret
divl
lret
cmpsb
jnp
fwait
xor
inc
pop
fbld
inc
xor
enter
mov
test
or
mov
mov
lcall
scas
movsl
shl
mov
mov
loope
xchg
and
fimull
lahf
add
and
shrl
outsb
out
movsl
sti
inc
mov
orl
adc
jp
enter
sahf
sti
mov
sbb
lret
add
es
xchg
icebp
push
and
lahf
bound
sbb
pop
add
xchg
inc
mov
push
cld
in
shlb
mov
xchg
pop
xor
das
jae
pusha
adc
dec
movsl
mov
mov
call
sub
cltd
loopne
aad
mov
dec
std
inc
xchg
imul
sbbb
jle
adc
or
inc
cmpsb
ljmp
hlt
add
arpl
rclb
das
ss
rolb
jle
sarl
in
popf
cs
das
cmp
add
mov
inc
mov
xchg
add
jbe
xchg
adc
outsb
iret
out
xchg
leave
mulb
mov
ljmp
mov
les
out
rorb
jmp
mov
ss
pop
fisubrl
jb
rcl
repz
loope
pop
push
push
sub
test
lret
daa
roll
ret
and
jp
adc
mov
push
hlt
sub
add
adc
push
adc
pop
sbb
xchg
adc
or
in
pop
clc
popa
repz
stos
push
xchg
int
adc
pop
test
mov
sahf
nop
sbb
loopne
mov
mov
mov
gs
mov
dec
js
insl
fsub
pop
subl
shrb
lret
icebp
ds
flds
cmp
fildll
sub
mov
or
sub
into
in
ss
ja
push
fcoml
and
jmp
pop
fldl
mov
roll
ret
imul
jnp
cmp
cltd
movsl
mov
hlt
pop
into
jg
hlt
aad
jo
xchg
aam
fs
mov
fwait
pop
fsubp
sub
cmp
mov
insb
or
inc
add
push
outsl
popa
mov
mov
xchg
push
inc
push
jae
popa
xchg
add
and
mov
jnp
in
xrelease
cmpsl
je
push
mov
test
push
add
aad
cmp
cld
outsl
dec
repnz
xchg
push
xchg
pop
and
orl
int3
std
inc
imul
incl
testb
adc
inc
repz
cwtl
mov
cmpsl
cld
cwtl
pop
out
daa
ss
outsb
xchg
push
fnsave
cmpsl
sbb
push
mov
inc
xchg
sub
or
jg
pop
sti
mov
jae
jp
lods
int3
add
inc
enter
pop
ret
pop
mov
inc
xchg
dec
aad
cmp
gs
outsb
xlat
or
jo
xor
ljmp
test
jae
dec
sub
or
adcl
jmp
push
mov
mov
and
sti
clc
mov
jnp
leave
sbb
jge
imul
push
jns
dec
lods
dec
jne
pop
repz
inc
adc
xor
or
leave
int3
mov
and
mov
sub
mov
push
ds
sub
or
cmc
mov
aaa
mov
sbb
or
mov
cmp
mov
mov
in
movsl
sub
add
jae
scas
pop
and
sbb
mov
ss
push
push
xchg
outsl
inc
in
out
loop
mov
ja
adc
inc
and
ss
lods
test
jae
mov
and
shl
mov
aam
test
xrelease
aaa
sbbl
in
sahf
setp
loop
std
lods
aas
xchg
dec
adc
clc
rorl
mov
insb
test
jnp
pop
nop
pop
pop
imul
pop
mov
and
outsl
push
scas
arpl
lcall
dec
push
repnz
mov
out
or
loopne
jl
loope
das
mov
inc
xor
push
mov
pop
dec
negb
cmp
mov
pusha
or
movsl
jno
loope
or
lea
mov
test
add
push
notb
jmp
popf
test
mov
movsl
arpl
das
pop
out
and
insl
dec
cmp
add
cmp
outsb
in
rolb
int
pop
add
sub
sub
jae
enter
in
mov
jg
jns
inc
clc
call
adc
icebp
and
lret
jbe
aaa
jg
ret
adc
mov
or
add
into
aad
xchg
aas
fists
imul
cmp
adc
iret
jecxz
aam
sahf
add
and
xchg
imul
outsl
daa
inc
ss
xor
jbe
popa
das
mov
and
adc
cltd
sbb
movsl
push
push
mov
arpl
sub
pop
inc
inc
loope
movsb
mov
pop
dec
push
in
lock
xor
stos
jle
dec
cmp
stos
pop
lcall
les
adc
fldcw
mov
movsl
out
add
ja
jl
xor
imul
inc
inc
ja
insl
jl
out
mov
jns
mov
jmp
fninit
push
mov
jl
or
test
and
loop
aaa
jne
inc
xor
pop
into
push
aam
jmp
cmpsb
cmp
sub
jns
bound
sbb
outsb
jg
cmp
xchg
mov
lds
stc
adcl
mov
sbb
jno
pop
mov
je
cltd
icebp
mov
negb
aam
sub
fistl
imul
jno
sbbl
push
inc
cmc
cmp
jno
push
movsb
lcall
add
cltd
mov
test
pop
push
mov
cmp
out
cli
jno
pop
shrl
pop
movl
les
add
ljmp
mov
or
outsl
pop
push
repz
and
inc
pop
in
cmpsb
test
out
jle
movsb
mov
push
sti
xchg
in
lret
inc
in
mov
fwait
test
xor
cmp
add
pusha
jmp
jl
xchg
test
sbb
sbb
cmpsb
dec
inc
movsl
lods
sbb
xchg
cwtl
adc
mov
jmp
inc
xor
mov
lods
insb
jle
in
or
inc
in
cmpsl
leave
mov
out
outsl
mov
rorb
repz
push
dec
add
jecxz
sbb
ss
xor
cmp
stc
out
mov
xor
fwait
lods
add
pop
outsl
sub
insl
mov
out
idiv
xor
sub
jp
cmp
bound
mov
das
inc
cmp
jo
in
imul
leave
mov
sbb
xor
sub
xchg
shrb
xchg
mov
push
pop
add
imul
enter
iret
stc
cli
xchg
dec
inc
scas
mov
stos
fstl
pop
pop
mov
add
mov
les
adc
dec
mov
dec
test
into
sti
pop
sub
adc
add
fbstp
js
jg
out
enter
xchg
in
sbb
adc
shll
adc
bound
daa
mov
and
ljmp
push
add
add
sti
shll
nop
mov
ja
sbb
cmp
out
pushf
icebp
imul
jo
jae
aas
cs
sub
sub
stos
jp
lods
popa
stos
jg
xchg
inc
jg
out
mov
out
inc
jle
aas
sub
cld
cmp
sbb
sub
xor
xor
sub
loopne
inc
xchg
lods
lock
ja
mov
mov
sub
addr16
push
push
xchg
inc
sbb
dec
out
mov
or
or
xor
addb
sar
es
pop
sub
sub
or
nop
xchg
je
pop
pop
push
mov
push
roll
mov
xchg
mov
dec
cmp
fcmovnb
pop
inc
jne
mov
fxch
outsl
sbbl
pop
cmpsl
loop
jge
cmpb
int
push
xchg
pusha
dec
and
xlat
roll
hlt
jae
fwait
lret
xor
ret
or
jge
cmp
cmp
adc
push
std
xchg
test
mov
subb
test
xor
jmp
xchg
repz
repz
aas
dec
jo
and
cli
push
jbe
sbb
jns
imul
adc
lea
mov
repz
sbb
stos
dec
xchg
jnp
inc
lret
fsubrl
push
sub
push
inc
std
pop
stos
shl
mov
test
mov
das
and
repz
adc
mov
sbb
aas
cld
in
and
xor
jbe
xchg
call
dec
test
lahf
negl
gs
cld
inc
push
xchg
jg
test
cmpl
ret
mov
ret
cmp
lret
adc
clc
cwtl
dec
loopne
dec
lds
hlt
push
outsb
and
push
ret
jae
adc
call
das
dec
lock
adc
subb
sub
adc
out
scas
into
das
scas
enter
dec
and
and
mov
bound
insl
icebp
inc
mov
mov
in
inc
push
adc
pushf
mov
popa
inc
xor
stos
movsb
ljmp
lea
mov
and
fs
jno
jno
sahf
scas
mov
mov
xchg
cwtl
mov
pushf
fnstsw
push
or
cmc
xchg
inc
mov
mov
imul
fimull
jbe
jnp
out
fcmovbe
adc
ss
sub
mov
push
pop
cmc
cld
stos
inc
mov
adc
mov
and
jecxz
lods
cmc
faddp
addb
jl
add
mov
jp
or
push
aad
fwait
pushf
jns
in
push
pop
cwtl
cmp
aam
pop
sub
aaa
push
pop
pop
mov
sahf
fnstcw
sar
mov
pop
push
stos
dec
xor
cmp
jp
lret
pop
xor
out
jbe
push
into
mov
mov
inc
das
xchg
mov
cs
cld
mov
scas
mov
cmp
outsl
sub
adc
or
aas
push
orl
mov
mov
mov
xchg
mov
jbe
cmpps
lods
mov
in
or
ret
inc
fsubl
lods
add
mov
sbbb
pop
inc
cmp
fiadds
scas
or
push
inc
lret
mov
mov
sbb
mov
sbb
stc
cmp
aam
xor
mov
in
xor
push
or
adc
leave
jns
mov
push
sub
in
rcl
push
dec
xor
pop
xor
cs
mov
data16
push
rcrl
fsubr
sbb
js
shll
xchg
mov
les
push
xchg
stc
std
mov
mov
fdivl
mov
bound
mov
and
dec
or
push
out
dec
roll
in
inc
nop
mov
jne
mov
ss
or
outsb
mov
add
mov
in
aaa
lahf
ss
jl
popl
sub
push
ror
out
mov
or
and
push
inc
add
xchg
out
enter
cltd
inc
shl
mov
inc
dec
sbb
pop
pop
sbb
enter
adc
out
je
cld
leave
add
fwait
rorb
dec
push
and
sahf
mov
inc
repz
daa
xchg
int
mov
push
enter
mov
xor
cmp
adc
mov
sar
jns
cmp
mull
xchg
fiaddl
clc
pop
or
ret
frstor
leave
jp
dec
ficoml
inc
cmpl
fidivrs
out
xor
push
ror
adc
test
scas
or
adc
jnp
out
pop
addr16
or
xor
lret
and
fsubr
mov
jae
ficompl
push
or
paddusb
iret
loopne
fidivl
iret
fsts
dec
iret
out
xchg
adc
pop
fcoms
xor
push
jmp
ret
push
inc
cmp
inc
pop
testl
fcomps
add
dec
nop
xorl
push
and
mov
mov
xchg
or
rcll
scas
cltd
lea
adc
pusha
jns
clc
int3
push
add
testl
inc
loope
inc
test
lods
push
xor
or
lcall
mov
sub
cmc
xor
mov
in
cmp
mov
imul
imul
jnp
jne
lahf
jle
aaa
sub
fsts
out
and
jmp
out
xchg
lea
jnp
jp
xlat
pushl
mov
movsb
stc
std
inc
into
cld
pop
jne
rdtsc
daa
movl
lods
test
loopne
mov
sar
jmp
pop
negb
sbb
mov
xlat
cmc
bound
clc
pop
fnstenv
adcb
fiadds
adc
pop
sub
vpextrw
lds
mov
push
repnz
aad
aaa
into
jno
mov
aam
and
call
xchg
mov
hlt
fmull
idivl
xchg
mov
mov
into
inc
sbb
mov
pop
ret
mov
mov
and
xchg
lahf
aam
out
lahf
sahf
loopne
jg
mov
je
mov
pushf
mov
and
pop
jmp
cli
mov
cltd
test
cmp
shll
inc
cmp
adc
enter
pop
mov
sbb
mul
rcll
cmp
xchg
mul
std
jns
add
xchg
mov
or
xor
and
pushf
out
and
rcr
jp
loope
je
sub
xor
push
sar
sbb
int3
out
fnstsw
and
stos
and
sarb
arpl
and
je
jg
or
sub
xchg
sub
dec
dec
adc
mov
ja
adc
jecxz
shll
test
out
mov
add
sbb
add
mov
cmp
sub
xor
inc
ret
outsl
or
std
mov
insb
xchg
ret
adc
test
xor
rorl
mov
add
repz
ret
lock
leave
push
notl
xor
mov
std
pop
repz
daa
stc
adc
punpckldq
aaa
fisubs
add
mov
pushf
xor
test
imul
aas
nop
xchg
ja
inc
push
push
sarb
pop
push
mov
sbb
popl
ficoms
pop
push
movsb
test
pop
int
inc
cmp
repz
jmp
addr16
cli
arpl
lret
fcmovnbe
jno
inc
shlb
dec
jle
aaa
roll
jo
or
negl
sbb
pop
cmpl
push
sub
cmp
push
inc
xchg
lock
xor
pushf
mov
cs
outsl
mov
je
testb
add
ja
fists
arpl
pop
repz
xchg
sarl
lahf
mov
xor
ret
xlat
leave
sub
test
int
xchg
repnz
push
sbb
imul
mov
push
dec
mov
fadd
rorl
jnp
hlt
mov
xchg
imul
loopne
in
cmp
sbb
or
inc
movsb
xor
sbb
into
test
push
cs
fidivrl
rclb
lcall
jp
or
push
mov
sti
aaa
leave
pcmpgtd
dec
aaa
mov
cmpsl
mov
pop
mov
adc
int3
sbb
ret
dec
pop
mov
xor
lods
push
dec
and
fcoml
test
dec
cmp
lret
insl
lahf
lret
pop
dec
aam
roll
sahf
aas
mov
mov
aaa
jge
cmc
in
mov
sbb
pop
mov
out
pop
jne
fbld
push
pop
in
xor
das
mov
or
inc
and
or
dec
push
push
or
lods
lea
ret
loopne
in
dec
xor
jp
jae
mov
mov
pop
mov
ljmp
sbb
push
and
cmp
sti
repz
cmc
cmp
mov
subl
movsl
int3
add
std
mov
scas
pop
cmp
pop
sbb
lret
fimuls
ja
int3
mov
jg
je
shl
push
mov
outsb
outsl
mov
fadds
add
lods
in
cmp
ljmp
dec
sub
xor
icebp
ret
xchg
mov
enter
fisttpl
or
lods
and
sarl
popa
leave
clc
push
mov
das
pop
mov
cmp
adc
inc
xchg
movsb
out
adc
adc
adc
test
fnstsw
add
and
sti
inc
in
cmpsl
pop
cli
xlat
aaa
imull
sbb
int
stos
mov
push
sbb
xlat
xchg
scas
xchg
hlt
stos
xchg
pop
adc
aas
inc
out
test
push
xor
sbb
push
push
xchg
test
imul
clc
scas
or
test
call
mov
fninit
fistl
add
arpl
xchg
mov
adc
mov
pop
gs
popa
loopne
xchg
lock
pop
push
imul
cmpsb
jnp
add
outsb
dec
sbb
or
std
push
js
push
inc
push
jle
shlb
mov
mov
inc
push
lret
inc
fisubl
push
mov
adc
sub
dec
push
sub
and
in
icebp
mov
jecxz
pop
sti
into
mov
scas
inc
cmpb
adc
popa
xor
stc
aad
leave
add
xchg
out
xor
sub
sub
and
ffreep
lea
cmp
out
xor
stos
inc
test
pushl
add
push
dec
leave
fidivrl
movsl
mov
in
inc
cld
push
jb
jno
and
mov
out
xchg
cld
sahf
pop
sub
mov
xchg
adc
into
jl
test
or
movsl
mov
jp
inc
aad
cmpb
cmp
fists
mov
ja
dec
adcb
ljmp
inc
mov
mov
sub
xchg
loop
sbb
fwait
or
inc
shll
pop
mov
add
ret
mov
rorb
add
add
mov
std
fmull
dec
or
inc
jge
clc
or
or
iret
ss
adc
aas
mov
aam
adc
clc
pop
jmp
push
add
and
shll
scas
or
and
cmpsl
cmc
push
cmpsb
aad
loop
imul
ret
call
pop
je
imul
pop
outsl
lods
ret
push
mov
jmp
jle
arpl
xchg
xchg
stos
mov
lods
lcall
cmpsb
lea
daa
cmp
mov
pop
push
push
mov
push
daa
inc
mov
cs
subb
and
sbb
push
test
fldt
outsb
push
or
adc
shrb
or
ret
jmp
sbb
xor
mov
ja
adc
addr16
les
cmpsl
and
int3
repnz
cmp
jmp
stos
jp
fimuls
pop
push
pop
int3
or
and
dec
pop
push
ja
mov
fcoml
jae
addr16
or
arpl
sub
dec
fnstsw
mov
dec
cwtl
leave
mov
das
inc
xchg
jl
or
lret
push
sarl
stc
xor
std
imul
nop
inc
in
pop
daa
mov
data16
inc
xor
jno
xchg
mov
sub
push
pop
and
push
mov
aas
aaa
stos
cmp
dec
test
sbb
dec
clc
sbb
js
lods
pop
out
sbb
add
push
pop
pop
fisttpl
pushf
aaa
sahf
cltd
dec
sbb
push
ljmp
jne
out
xchg
fnstenv
jg
in
fcompl
mov
add
xor
push
clc
xorb
lods
mov
add
fcoms
out
jae
pushf
push
out
imul
push
inc
lcall
mov
rcrl
ret
outsb
jg
sbb
pop
aam
sbb
popf
jno
sahf
cwtl
arpl
in
push
xlat
mov
dec
push
data16
lea
jbe
jg
sub
jp
or
lahf
adc
stc
xlat
lret
sub
sarb
adc
rcr
adc
pop
or
dec
movsl
jns
push
adc
pop
sub
insb
jns
xorl
aas
fnstenv
movsb
rol
xchg
aas
inc
cmp
adc
imul
loop
push
adc
scas
mov
pop
ljmp
sbb
jae
dec
fildl
jne
push
mov
notl
mov
enter
daa
or
repnz
fadds
push
imul
mov
popf
sti
imul
test
lret
ret
movsb
mov
or
pop
test
adc
adc
jo
jns
and
add
mov
jmp
icebp
jb
and
imul
pop
cmp
mov
jp
mov
bnd
inc
ds
mov
movsl
mov
pop
xor
popa
leave
ljmp
inc
shll
or
jo
lcall
sub
sub
pop
add
pop
fcomip
dec
and
jo
push
fisubrl
mov
iret
call
pop
fisttps
xchg
lock
pop
lret
gs
mov
pop
cwtl
or
jge
dec
push
xor
fdivrl
rorb
jg
clc
xor
mov
insb
and
mov
filds
push
adcl
popf
sahf
mov
sub
dec
out
jecxz
pusha
movl
out
xor
mov
push
insb
rcrl
int3
test
out
roll
inc
rcr
push
pop
fidivl
push
int
adcb
inc
in
test
inc
mov
out
push
dec
fiadds
push
jae
dec
pop
mov
add
jae
lea
pop
enter
insl
dec
lock
movsb
inc
std
and
push
data16
mov
jno,pn
lcall
shll
xchg
insb
data16
incl
or
mov
sbb
mov
fbstp
push
or
add
jecxz
es
push
mov
fistpll
jg
inc
mov
je
or
data16
xchg
cmp
jno
mov
jle
popa
pop
xchg
in
mov
pusha
jae
enter
mov
mov
push
pop
add
stos
jae
jp
sbb
in
and
mov
and
inc
xchg
outsl
push
and
dec
lret
sub
sahf
data16
jg
cmc
mov
pop
sub
movsb
mov
mov
add
and
loopne
lock
outsl
add
sbb
jno
jl
sub
mov
mov
decb
sub
lea
insb
cs
aam
inc
mov
imul
nop
xchg
xchg
movb
cltd
sub
mov
cmpl
xchg
mov
daa
and
ds
hlt
or
popf
xchg
movsb
adc
insb
dec
pop
add
test
sub
inc
popf
xlat
xchg
add
out
orl
sti
adc
mov
cltd
or
lock
xchg
mov
mov
dec
mov
sbb
mov
xchg
pop
leave
rolb
jle
pop
mov
out
cmp
addr16
sbb
add
pop
loopne
adc
mov
or
cli
or
inc
loope
pop
int3
stc
and
jno
and
push
mov
mov
or
push
adc
out
xchg
scas
out
push
dec
call
add
push
mov
sti
inc
pop
or
and
out
dec
jo
rclb
pop
mov
adc
or
pop
cmp
aad
lcall
shlb
push
mov
mov
xchg
dec
shlb
std
outsb
cmc
outsb
mov
mov
jle
add
push
pop
push
repnz
addr16
push
mov
pop
icebp
xlat
xor
add
add
pop
sahf
xor
xchg
jno
xor
push
ret
mov
adc
cmp
aaa
aas
inc
lret
pop
mov
shrb
jl,pn
in
pop
mov
jne
and
notb
in
sbb
fyl2x
mov
hlt
icebp
dec
lock
sub
lret
pop
outsb
idivb
stc
adc
fistps
xor
mov
mov
test
xchg
mov
loop
pusha
push
mov
and
or
sbb
jo
push
rcl
mov
cmp
lea
stos
mov
xlat
push
push
sub
loopne
outsl
fsubp
xchg
rol
movsl
sub
mov
gs
decl
out
shr
inc
cli
jl
inc
jle
test
jo
ss
inc
shrb
or
loop
push
mov
outsb
fnsave
lods
add
xchg
test
mov
cmc
cmc
inc
xor
sbb
mov
aas
test
insb
sub
sbb
xchg
push
bound
popf
sub
sbb
jge
jl
inc
jmp
mov
push
stos
adc
cmp
je
inc
test
aaa
mov
jl
or
aam
mov
popf
inc
sbb
adc
cmp
fwait
nop
scas
gs
hlt
pop
push
pop
addl
shrl
movb
mov
insl
lods
jl
shll
cmp
cwtl
or
lods
jge
mov
xor
repz
adc
mov
pop
mov
cmc
jo
lahf
inc
pop
dec
les
xchg
ret
int3
loop
jecxz
es
out
mov
fidivrs
sub
mov
mov
rcrl
push
arpl
xchg
lahf
xor
sub
mov
mov
sub
stc
ss
push
jmp
mov
sbb
mov
aaa
mov
push
mov
jmp
out
mov
test
lods
push
pop
ret
lahf
dec
fidivl
sbb
or
es
push
stos
insl
js
or
adc
push
jnp
out
xlat
or
pushf
cmp
and
gs
jge
js
jne
mov
push
addr16
jbe
outsl
cmp
in
loope
mov
or
scas
mov
cltd
adc
mov
popa
scas
sub
das
mov
sbb
mov
lret
stos
or
outsb
push
dec
fistpll
or
pop
in
xchg
cwtl
jno
into
pop
lods
inc
movsb
aad
ds
push
andl
adc
fsubrl
cmp
pop
cmpsb
and
add
mov
mov
or
push
dec
in
or
add
mov
and
daa
xor
push
out
lods
outsl
jmp
jmp
sub
sti
insl
fcompp
xchg
rolb
pop
hlt
lea
sbb
mov
sbb
lods
jne
jg
sbb
inc
pop
wbinvd
jmp
rcll
into
and
adc
lods
add
rorb
fiadds
sbb
or
and
inc
imul
and
sub
adc
or
gs
js
arpl
in
adc
cmp
rorl
inc
and
adc
cld
mov
mov
sti
mov
lcall
mov
pusha
add
mov
inc
add
dec
push
push
adc
mov
adc
add
clc
ds
nop
movsb
sbb
mov
dec
or
loop
cli
test
movsb
testl
jb
repz
mov
xchg
aaa
out
nop
into
lods
pop
in
fwait
adc
shll
pop
repnz
ja
xchg
push
bound
in
shll
mov
push
mov
insb
insb
popf
xlat
dec
and
mov
xorl
sub
jecxz
and
test
dec
sub
inc
jg
pop
mov
daa
dec
test
adc
xor
jmp
sarb
push
cmp
je
int3
or
pushf
push
pop
rcll
rolb
insb
push
sbbb
dec
add
stos
or
jl
inc
pop
jo
in
xchg
xchg
mov
xchg
push
adc
mov
push
imul
mov
in
pop
shr
add
jns
cmp
cmc
push
repnz
adc
push
inc
xchg
loop
mov
lea
sub
lahf
pusha
fisubs
cmp
mov
push
or
add
in
sahf
mov
iret
aad
pop
push
mov
ret
ja
xchg
mov
lock
adc
or
sbb
pop
pop
cmp
sbb
outsl
sti
xor
mov
push
enter
push
mov
xchg
dec
jmp
xor
jmp
repz
sub
jecxz
mov
jge
push
xchg
xchg
outsl
push
and
and
cmc
mov
repnz
cmp
xor
lods
mov
es
or
mov
popf
sbb
loope
sti
out
jg
mov
adc
ljmp
jno
cwtl
loopne
cmp
cmc
jl
inc
pop
xchg
mov
dec
mov
notl
test
cli
mov
push
js
sarb
mov
dec
xchg
sbb
adc
lret
inc
mov
push
pop
idivb
jl
scas
jecxz
cmp
aad
aad
sbb
and
pusha
mov
adc
ret
inc
call
int
mov
fdivr
aaa
push
sub
push
mov
inc
and
pushw
pop
cmp
cs
arpl
sub
inc
dec
pop
jmp
xor
push
movsb
je
dec
mov
ja
daa
mulb
bound
loopne
clc
sbb
dec
insl
xor
jl
sub
insl
in
xor
dec
lods
and
dec
dec
pop
stos
test
adc
movsl
jmp
mov
push
xchg
in
imul
cmpsb
xchg
orl
sbb
imul
lret
jle
and
mov
dec
mov
mov
movl
add
popa
adc
inc
cmp
popf
push
stos
dec
dec
add
test
movb
test
faddp
xlat
outsb
lock
shll
push
ja
xor
adc
inc
sbb
jno
movsl
push
lock
aad
jmp
jb
pop
xchg
lods
sbb
sbb
mov
push
hlt
clc
or
ret
mov
mov
and
adc
outsb
jecxz
xchg
mov
mov
mov
pop
insb
jnp
xor
push
les
fwait
mov
mov
and
mov
into
std
pop
xchg
or
movsl
inc
cmp
stc
pop
test
adc
pop
and
es
mov
add
lret
jae
je
sbb
dec
inc
enter
dec
pop
into
adc
xchg
mov
mov
jmp
or
data16
mov
stos
ja
mov
pushf
or
fwait
push
popa
pop
mov
loop
inc
lret
cmpsl
jg
xor
cli
imul
or
fimuls
inc
add
and
sbb
sahf
rolb
mov
push
xchg
mov
pop
imul
scas
mov
in
imul
sbb
xchg
dec
popf
mov
mov
and
iret
sub
out
pushf
sub
in
fbld
and
pop
cmp
or
sub
pop
dec
inc
hlt
xor
mov
shrb
jmp
test
xor
fdivl
jb
shl
dec
loope
enter
mov
xor
in
or
loop
pop
push
and
add
sub
xor
sahf
sub
mov
addr16
mov
pop
push
sbb
in
inc
jbe
cwtl
ds
dec
divb
jb
movsb
cwtl
cmp
aaa
mov
out
cld
or
pusha
adc
out
pop
jns
outsb
test
pop
pusha
dec
mov
jno
cmpsl
test
inc
dec
test
xchg
and
jecxz
push
gs
fidivs
loopne
ss
mov
test
cwtl
cwtl
dec
inc
mov
test
adc
add
mov
sbb
mov
subl
lcall
loope
sub
and
std
jo
int3
adc
mov
push
stc
cmpsb
in
jbe
fisubl
or
dec
fisubrs
lods
rol
arpl
pop
aaa
push
shll
pop
lret
orl
xor
fcmovnb
movsl
ss
clc
sub
add
sbb
ret
lock
jno
dec
adc
lret
fmul
repnz
add
mov
and
sarl
nop
nop
les
add
mov
shlb
xchg
and
movsl
sbb
add
and
fsubs
test
int
fisubs
xor
stos
vpmuludq
out
inc
pusha
es
cwtl
add
rcrl
and
jb
hlt
pop
mov
test
mov
cmp
mov
pop
pop
mov
push
xor
out
cmp
loopne
int3
aad
push
push
aam
loopne
mov
sub
insb
inc
mov
or
decl
test
std
sub
insb
jl
adc
mov
nop
sbb
fdivs
je
add
test
sub
mov
mov
pop
pop
call
insb
ja
sti
sti
aaa
mov
xor
out
fisubrl
subb
mov
std
push
stos
xchg
es
push
cld
mov
add
sub
repnz
push
or
mov
fistpl
add
loope
mov
je
jl
test
and
dec
lds
pop
dec
in
xor
fisubs
stos
jae
loop
dec
xchg
cwtl
in
out
loope
mov
xchg
inc
popf
or
and
xchg
dec
dec
jae
xorl
ret
cli
outsb
sbb
data16
enter
push
pop
cmp
mov
inc
lods
imul
pop
ds
pusha
loope
into
and
sub
roll
testl
sbb
shll
jbe
sahf
pop
out
jg
popa
roll
push
in
das
cltd
popa
sbb
push
and
mov
add
cwtl
aas
cmpsb
pusha
scas
fsubs
loop
cmc
pop
dec
jmp
xor
mov
test
cmc
xlat
sbb
movsl
rcl
js
fbstp
jae
mov
mov
ret
ficompl
shll
pop
pop
or
daa
xlat
stos
sbb
sub
mov
out
push
insl
in
pop
xchg
ljmp
loop
mov
jle
outsb
mulb
sub
push
pushf
xor
mov
pop
add
mov
inc
xchg
sti
jbe
pop
mov
call
out
xor
and
cmpsb
push
aaa
mov
push
dec
push
cld
mov
bound
sarb
sub
nop
or
sub
xor
iret
pop
push
loopne
sbb
out
sub
dec
xor
sub
insb
int3
pop
jl
minps
inc
test
xchg
std
sub
sub
scas
test
or
sub
cmpb
sub
test
in
sub
xchg
push
int3
or
jle
fwait
xor
jge
fcomps
cmp
cmp
sub
cmp
mov
sbb
jecxz
dec
pop
iret
push
dec
sub
bound
sti
fiaddl
fwait
mull
mov
cmp
cmp
imul
jb
idivl
loope
push
jns
cmp
call
jb
shlb
nop
add
gs
push
movsl
lock
jne
push
aaa
in
scas
sbb
mulb
jno
leave
shl
outsl
mov
and
pusha
cmp
mov
xchg
shll
outsb
clc
inc
or
insl
sbb
xor
dec
int3
push
xchg
outsb
pop
ljmp
push
fwait
shrb
push
leave
xor
xchg
mov
sub
mov
jno
push
sub
add
add
push
sbb
call
sub
fists
repz
out
inc
cmp
mov
mov
cs
adc
insb
adc
out
negb
mov
inc
cmp
addr16
inc
insb
push
decb
mov
sbb
jbe
in
es
jns
ja
outsb
aas
rclb
adc
fnstcw
xor
pop
in
mov
addr16
or
or
je
aaa
xor
dec
add
pushf
jecxz
dec
push
sub
imulb
lahf
into
leave
clc
xor
jle
mov
xchg
scas
imul
add
ds
mov
xor
pop
push
mov
jae
test
adc
inc
loope
or
adc
int
cmpsb
mov
cmp
aad
xor
outsb
call
outsl
cltd
loopne
ficompl
mov
rcr
sti
push
sbb
pop
add
outsl
sbb
cmc
ja
pop
add
fistpll
and
sub
fdivrl
mov
mov
in
aaa
and
sahf
xchg
mov
divb
scas
mov
mov
cltd
xchg
js
fcom
je
xchg
and
add
gs
cmpsb
mov
or
sbb
add
inc
cmp
arpl
mov
or
cmp
inc
lods
dec
aam
out
push
jecxz
push
push
out
xchg
mov
shl
xor
loop
leave
sub
inc
inc
jb
repnz
movsl
vcvtss2sd
and
and
adc
rcl
push
data16
mov
das
out
or
sti
xor
jae
ljmp
add
push
idiv
ret
add
pop
jl
xchg
cmpsl
jle
jmp
jns
push
in
push
mov
sub
ljmp
neg
xchg
xchg
lret
clc
rcl
mov
pop
sbb
or
push
or
push
push
push
mov
or
mov
movsb
xchg
push
stos
repnz
lret
sbb
or
and
popa
mov
ret
xor
sahf
loop
push
fstpt
idivl
sbb
xchg
jno
xchg
and
xlat
push
stc
lcall
sub
jp
out
push
mov
xor
data16
mov
aaa
sbb
mov
xchg
mov
test
repz
mov
cmp
sbb
lock
pop
mov
cmp
mov
xchg
cmp
lea
jecxz
pop
sub
sbb
mov
pop
loope
mov
stos
and
mov
jl
push
mov
adc
cld
add
xchg
pop
and
cmc
sub
loope
sub
movsl
jae
push
sbb
dec
mov
add
ds
les
inc
fdivs
repz
add
lds
xchg
cltd
sbb
sti
xchg
addr16
and
imul
xor
mov
std
movsl
cmp
and
out
lods
sbb
icebp
cmp
sbb
fldenv
inc
adc
ljmp
mov
inc
lcall
inc
je
cmp
hlt
in
arpl
pushaw
sbb
inc
pop
pop
inc
sbb
mov
sub
push
lods
call
ret
mov
out
adc
sbb
es
jnp
jge
lcall
movsl
or
inc
enter
pop
mov
stos
in
pop
mov
insl
aas
push
aaa
pop
movsb
fisttpll
clc
mov
xlat
adc
push
dec
jmp
mov
push
mov
daa
stos
pop
jbe
jno
bound
daa
adc
mov
lods
imul
shrb
pop
js
mov
and
push
mov
jl
jecxz
ds
lea
mov
test
mov
push
frstor
std
sub
add
dec
jmp
pusha
pop
pop
mov
lds
stos
rcl
xchg
scas
aaa
mov
aaa
jle
cmp
pop
imul
pop
sahf
clc
mov
pop
out
pop
cli
inc
or
mov
dec
xchg
test
sbb
cmp
cmpsl
mov
ret
mov
inc
in
lods
or
test
jnp
jno
mov
adc
jnp
rclb
add
push
outsb
mov
push
prefetch
inc
cmp
stos
xor
xchg
into
inc
jp
icebp
rcrb
pushf
adc
xchg
jmp
jg
cmp
test
test
out
inc
or
and
xchg
push
push
xchg
jne
push
scas
out
mov
mov
fmuls
inc
add
lcall
jl
mov
and
daa
or
jp
lds
mov
mov
dec
fldpi
or
sub
enter
sub
ror
push
scas
rolb
clc
das
lods
xchg
repnz
push
shll
dec
fwait
jb
dec
rorb
mov
push
pop
lcall
notb
sti
fisubl
mov
xor
mov
and
cli
fwait
sahf
sahf
adc
cmp
dec
test
mov
sub
repnz
lock
lods
faddp
decb
xchg
cmc
popa
roll
out
in
lods
mov
xlat
insb
movsb
or
mov
das
movsl
dec
inc
jl
inc
xchg
pop
or
and
outsb
pop
cli
pop
cmp
or
mov
xor
push
rcrl
insl
mov
fstpl
xchg
cld
mov
testl
out
cmp
mov
adc
push
push
or
jne
sahf
int3
add
xchg
cmpsl
mov
jge
pop
mov
stc
addr16
pop
shl
xor
rorl
insb
int3
inc
sub
mov
mov
inc
jge
dec
xchg
jl
pop
inc
jp
lret
inc
mov
outsb
jmp
je
lock
pop
jno
push
dec
mov
insb
ss
push
cmovns
dec
pop
push
pop
ret
xchg
and
lahf
cmp
pop
call
pop
or
iret
int3
cmp
adc
adc
push
adc
data16
sbb
sbb
divb
mov
jb
jle
mov
loopne
xor
cmpsb
lcall
fiaddl
xor
sarl
mov
push
fisttpll
movsb
addr16
push
sub
sub
dec
in
mov
mov
arpl
mov
cmpsb
mov
pop
jp
and
shrl
psubw
push
dec
mov
test
out
divl
or
mov
jl
cmc
pop
mov
jmp
mov
popa
gs
loopne
pop
or
and
gs
shrl
scas
out
xor
push
push
mov
sbb
xor
mov
sbb
xchg
cltd
xor
and
pop
daa
out
adc
rolb
mov
mov
leave
push
inc
xor
dec
test
imul
cmpsb
and
push
push
cmc
mov
xor
cmpsb
pushf
xchg
lcall
sub
pause
ja
fstps
stos
cmp
fs
inc
sbb
je
stc
inc
add
push
aas
test
addr16
dec
dec
movsb
jnp
sbb
lds
fldt
addr16
mov
xchg
jl
sub
mov
rorb
pop
mov
xchg
push
sbb
out
push
and
push
mov
jbe
in
pop
and
lahf
or
movsl
pop
sarl
sub
dec
call
cmp
add
lods
cwtl
mov
ficoms
dec
mov
in
fldl
xor
into
cwtl
enter
inc
ja
add
das
fbld
xchg
mov
xchg
data16
mov
pop
inc
sbb
jp
push
stc
into
mov
cmp
int
nop
jmp
aam
sarb
lock
xchg
loop
sub
fidivrs
and
fs
pop
ror
jecxz
je
cs
loopne
mov
ja
inc
bound
sub
mov
ror
mov
loope
inc
jae
inc
test
mov
pop
jno
pushf
ljmp
push
lods
jno
push
add
push
pusha
xlat
mov
add
sbb
out
jnp
repz
addl
inc
mov
leave
mov
mov
cmp
xlat
dec
mov
xchg
andl
inc
cmp
icebp
sbb
movupd
sbb
les
lahf
mov
pop
and
mov
into
imul
ljmp
ret
xor
int
cld
sbb
iret
int3
add
xchg
inc
jmp
repz
outsb
loopne
dec
or
ss
mov
mov
push
es
fs
movsb
jbe
aas
jnp
fsubr
pop
pop
push
push
pop
fcoms
add
mov
or
fiadds
inc
incb
pop
xor
addr16
adc
inc
push
dec
push
xor
fsts
or
andl
iret
xor
idivl
push
cmp
stos
xor
in
negl
icebp
sbb
cmpsl
inc
dec
addr16
dec
xchg
lds
enter
xchg
cltd
sbb
sbb
je
insw
mov
in
push
cmp
push
dec
cs
push
loopne
ja
dec
pop
pop
dec
fs
imul
lahf
ss
sarl
push
dec
cld
pop
cmp
xor
rclb
mov
rorl
sbb
insl
popf
add
dec
sub
adc
pop
std
int3
clc
mov
sub
dec
and
xor
das
arpl
xor
sbb
jo
mov
pop
popa
push
xor
push
inc
ja
rol
lea
ficompl
test
push
int3
push
jb
or
push
scas
subl
xchg
and
sub
add
shrb
jb
mov
arpl
pop
mov
push
scas
pop
div
adc
cmp
add
mov
rorl
inc
inc
and
pop
jle
xor
rolb
inc
fnsave
sahf
xor
push
inc
add
or
mov
shlb
adc
out
pop
mov
jg
cmp
dec
push
je
mov
stc
rcl
jmp
aam
add
mov
dec
fdivp
daa
shll
out
sub
add
shrb
adc
adc
lret
inc
mov
imul
sti
and
ret
adc
rolb
testl
xchg
loop
lret
xor
lods
mov
adc
lock
scas
imul
loop
fldenv
lods
ljmp
mov
mov
movsl
cmp
cmp
cmp
xor
xor
cwtl
and
jg
mov
pop
mov
shrl
mov
add
mov
loopne
inc
mov
fs
xchg
mov
int
mov
xchg
pop
lock
lods
pushf
sbb
mov
mov
mov
movsb
jmp
and
xchg
jo
sbb
mov
xchg
cli
add
dec
jmp
pop
mov
repz
pop
and
icebp
mov
mov
cmp
jmp
shll
stc
push
pop
subl
cmp
mov
dec
aaa
push
add
mov
and
dec
test
ss
pop
lret
dec
es
aas
shrb
in
inc
out
fstl
and
stos
int
xor
sbb
xlat
or
test
jmp
imul
pop
rorb
pop
or
lods
std
data16
mov
movsb
lret
inc
pop
movb
in
mov
mov
jnp
loopne
aad
scas
jo
xchg
fldl
outsb
les
ss
and
xlat
rolb
andnps
or
push
jmp
xchg
or
int
or
and
cmp
xor
shlb
ja
popa
push
jg
dec
aam
jmp
xor
movsl
inc
sbbb
mov
mov
addb
cmp
jecxz
push
jnp
push
shrl
mov
mov
loop
daa
pop
test
jb
stc
inc
cmc
fiaddl
sbb
imul
cmp
cltd
or
sbb
ret
lret
repnz
and
adc
pop
arpl
clc
stc
mov
jp
cwtl
cmc
cmp
jge
dec
fsubrp
loope
mov
xchg
fcmovnb
jne
loop
dec
and
mov
pop
add
ficompl
outsl
push
cwtl
popf
ljmp
loope
jns
daa
aam
shlb
pop
out
push
sahf
test
or
stc
es
jmp
les
loopne
mov
pop
push
test
dec
sahf
cmpsb
xor
push
testl
adc
xor
add
mov
mov
pop
and
inc
mov
mov
das
addl
aaa
sub
sarb
adc
andb
mov
movsb
stos
popa
out
es
or
add
ret
mov
mov
icebp
popf
lcall
rcrl
pop
sbb
stc
test
data16
das
push
clc
cmpsl
xchg
dec
pop
push
fsincos
push
xor
in
adc
xor
pop
rcrl
dec
dec
sbb
push
in
mov
dec
std
ret
loop
sub
cltd
ret
aas
js
fnstsw
mov
sub
push
jecxz
sarl
imul
dec
adc
and
push
inc
repz
cmp
jl
lds
jl
test
mov
sub
or
sub
jl
fstpt
or
mov
or
sub
mov
mov
popa
enter
aad
lea
cltd
mov
out
sbb
mov
shlb
orl
imul
dec
cmp
sbb
inc
mov
faddl
cld
insl
les
push
lcall
xchg
das
inc
xchg
pop
jecxz
cmp
imul
inc
or
popf
idiv
loope
dec
and
push
imul
mov
inc
jl
mov
jg
cmpsl
sbb
pop
dec
sub
sbb
pop
dec
scas
cmp
out
jns
aas
mov
and
inc
test
mov
mov
pop
out
lahf
or
or
incb
or
mov
movsl
jno
xchg
stc
hlt
mov
pop
pop
sbb
cmp
out
dec
lahf
inc
xor
jmp
subb
pop
mov
inc
cwtl
cmp
jmp
std
add
ret
fldcw
mov
xchg
mov
jl
xor
ficomps
js
ret
cmpl
mov
xor
cld
sub
mov
jle
push
pop
ret
repz
or
std
cld
xor
lahf
imul
cltd
sub
push
cltd
pop
sti
cmp
pop
xlat
xor
mov
sbb
test
add
mov
sbb
dec
fstp
imul
inc
xor
ja
fwait
adc
rcrb
nop
lcall
and
and
and
mov
pop
fsubs
jno
nop
sub
sti
pop
test
push
aaa
push
imul
adc
pop
fcmovbe
add
mov
sub
mov
sub
fsubrs
icebp
jmp
sub
push
mov
subl
cwtl
std
pop
sub
sub
mov
daa
add
inc
add
loopne
pop
fwait
aad
scas
and
movsb
leave
inc
out
cltd
jbe
aas
inc
fstpt
mov
adcb
clc
lahf
loop
add
lods
push
jne
or
mov
arpl
out
mov
in
sub
xchg
insl
pop
out
loop
dec
inc
movsl
sub
out
icebp
fdivs
adc
adc
jnp
test
bound
out
mov
pop
jecxz
jg
scas
cmpsl
ror
mov
in
loope
iret
sub
jo
pop
add
popfw
pusha
xchg
addb
mov
jnp
mov
adc
pop
and
outsb
cmp
lock
das
and
jg
pusha
arpl
push
pop
mov
xchg
incb
inc
insl
cwtl
in
cmp
xlat
xchg
pushf
adc
mov
mov
repnz
inc
mov
out
insb
adc
dec
ss
sub
xchg
jae
mov
mov
fadd
inc
jo
jb
push
pop
ljmp
daa
xor
bnd
add
insl
and
ss
add
jle
cmc
mov
xor
add
xchg
ss
cmpsb
gs
in
sbb
adc
jne
insb
cmp
scas
popl
mov
pop
stos
sbb
push
jns
add
mov
aas
movl
mov
clc
out
hlt
push
xor
push
jnp
lods
ja
cmp
nop
cmp
mov
pop
add
cmp
imul
shrl
cmpsl
inc
jb
frstor
out
sub
xchg
mov
sub
addr16
outsb
addb
push
push
jae
inc
arpl
shrl
jge,pt
inc
jg
ficoml
dec
mov
inc
pop
sti
mov
cmp
pop
pop
mov
popa
cli
mov
addr16
jbe
dec
stos
adcl
mov
jo
adcl
mov
xchg
fsubrs
sbb
cmc
xor
dec
sbb
cmpsb
movsl
in
aas
fistpll
fsubrl
dec
aam
ja
and
mov
mov
pop
loope
sbb
fcompl
rcll
jl
xlat
cmp
lcall
mov
out
dec
sbb
push
xor
in
cmpsl
push
scas
xor
and
stc
mov
jecxz
xorb
popf
mov
mov
loope
clc
or
jl
cmpsl
adc
fsubrp
stos
aas
mov
imul
mov
mov
cltd
pusha
mov
daa
inc
popa
enter
jb
push
movsl
add
mov
cwtl
movsl
cltd
stos
enter
je
pop
cli
arpl
std
scas
add
pop
push
stos
in
mov
inc
arpl
aaa
mov
idiv
or
pop
adcb
mov
cmp
mov
mov
inc
inc
and
ja
cld
lods
dec
pop
sub
ficomps
pushf
jle
out
mov
fcompp
mov
test
scas
pop
outsb
stc
sahf
repz
lods
test
gs
loop
mov
aas
js
in
bsf
xchg
aaa
dec
jecxz
not
mov
aaa
push
xlat
sbb
iret
xor
mov
jmp
push
sub
ret
in
pop
or
or
mov
pushf
pusha
mov
dec
adc
lret
inc
js
ds
push
out
int3
xor
lahf
mov
push
add
or
hlt
push
cmp
sbb
cltd
cld
or
and
xor
cmp
xchg
cltd
and
mov
sbb
jb
clc
outsb
mov
jp
test
and
adc
pop
cmpsb
data16
clc
add
and
jmp
sbb
mov
xor
sbb
fwait
xchg
pushf
data16
push
fdiv
or
ret
push
xor
icebp
pop
jl
cmpl
test
jno
aaa
mov
movsl
daa
imul
xchg
pop
fsub
ja
orps
ss
stos
cmp
aam
and
aam
jmp
adc
cmp
mov
mov
outsb
push
in
cltd
xchg
dec
push
mov
push
fs
aam
jle
das
or
int
arpl
repz
pop
in
and
adc
cmp
inc
cltd
cmp
nop
popf
inc
dec
mov
jle
add
cmc
aaa
and
adc
push
sub
in
in
shrb
pop
jle
fsubr
enter
shl
pop
aad
insb
pop
xchg
stos
mov
mov
orl
shll
push
mov
cli
adc
jecxz
mov
shll
stc
mov
ds
cmp
jae
jecxz
and
sahf
into
mov
dec
mov
inc
loopne
pusha
out
adc
call
or
pop
std
jmp
xchg
xchg
push
pop
cmp
jbe
call
inc
idivw
mov
cltd
mov
ficompl
lret
ret
and
out
addr16
xor
or
inc
add
out
xor
cmpsb
leave
cmp
rclb
jns
addr16
add
mov
mov
std
stos
sbb
jbe
push
mov
sbb
mov
cmpb
xlat
add
fistpll
sti
adc
adc
scas
popl
arpl
js
dec
idivb
dec
inc
call
jnp
and
lret
fadds
lock
mov
or
cmp
and
sub
loopne
lock
pop
out
mov
sub
call
outsb
dec
in
xchg
mov
jno
addr16
hlt
ss
daa
push
loope
into
lds
roll
out
xor
out
mov
loopne
cli
fst
popf
stc
mov
dec
and
mov
pushf
cltd
out
mov
mov
sub
shrl
xchg
mov
fs
pop
add
jecxz
arpl
dec
fs
add
and
sub
das
xchg
and
idivb
or
or
cmovns
cmp
out
cli
mov
xchg
and
sub
loop
adc
xor
rcrl
pop
dec
loopne
scas
das
sarl
jo
sbb
mov
rorb
fsub
gs
inc
adc
shrb
out
inc
xchg
mov
lret
sbb
mov
fcoml
mov
test
insb
out
and
mov
fdivrs
xchg
lret
inc
inc
jo
je
pop
sub
rorl
fs
dec
int
push
fwait
jge
and
imul
pop
xchg
into
lods
daa
shr
clc
fldl
dec
cmp
es
push
pushf
jl
pop
insb
inc
lea
mov
adc
cmc
aas
ljmp
pop
cwtl
xchg
outsl
mov
sbb
add
shl
xchg
push
or
lea
mov
lcall
cmpsb
mov
sub
cmp
shll
mov
jno
sbb
inc
xchg
and
xchg
adc
sbb
lds
xchg
cmp
jl
mov
in
stos
andb
mov
fisttpl
inc
mov
push
loope
std
cmp
es
jl
inc
push
mov
mov
push
paddw
scas
xor
and
pushf
cmc
js
lods
inc
jmp
movsb
mov
fs
push
ds
in
insb
mov
clc
inc
fwait
cld
adc
pop
and
and
sub
fs
repnz
loopne
jne
sub
idivb
fdivs
lds
add
call
cmpsl
adc
jb
add
sbb
enter
lret
call
cmpsl
cmpsb
ljmp
jl
inc
mov
pop
mov
mov
sub
adcb
insb
mov
xor
mov
xchg
mov
sbb
rclb
and
fiadds
lea
jns
push
xchg
lods
adc
lcall
popa
les
push
xor
data16
or
fsubp
sub
ja
mov
sbb
or
in
and
pop
imulb
int3
ret
sub
jecxz
pop
repz
or
mov
add
mov
push
fistl
int
mov
cs
sbb
inc
pop
xorl
lcall
pushf
mov
ljmp
out
inc
sub
scas
cmp
dec
call
and
aas
inc
push
and
pop
inc
sub
mov
daa
out
xchg
pushf
or
push
lock
inc
push
xchg
and
andl
sbb
in
lods
jae
dec
pusha
dec
mov
jae
mov
cmc
mov
in
out
jge
mov
sub
push
xchg
inc
jg
les
or
xchg
es
stc
roll
push
cmpsl
scas
dec
stos
gs
out
and
aam
xor
movsb
dec
xchg
jge
enter
aaa
sub
pop
pushf
lds
mov
xor
push
sahf
fwait
cmp
roll
adc
cwtl
addr16
sub
outsb
es
inc
xchg
add
sahf
push
inc
dec
nop
mov
mov
inc
jno
jp
inc
rorl
in
mov
popf
xchg
mov
cmp
fdivrs
or
nop
aam
inc
insb
mov
sbb
fidivrl
adc
iret
or
pushf
dec
cmp
push
leave
fdivrl
push
ljmp
fimull
js
addl
pop
jecxz
out
into
addr16
xchg
xor
inc
movhps
lret
jl
or
inc
sarl
xor
pcmpeqd
inc
sub
faddl
pop
lret
addr16
sbb
imul
jl
nop
xor
insl
lods
imul
dec
insb
es
jo
std
mov
imul
mov
add
inc
sahf
inc
rol
lahf
es
mov
push
inc
jge
lcall
pop
dec
jno
int
push
sbb
sub
or
mov
out
cli
orb
xor
stos
mov
mov
mov
in
dec
stos
cld
rcrb
xchg
mov
push
push
sbb
arpl
arpl
sbb
push
call
fs
and
pop
jle
pop
rsqrtps
mov
dec
arpl
inc
push
inc
aaa
out
mov
push
gs
pop
fs
mov
mov
je
fnsave
sub
mov
cmp
adc
insl
je
jmp
push
lahf
adc
movsl
jmp
cwtl
mov
or
add
lea
push
xchg
mov
cwtl
stc
push
push
movsl
js
pop
hlt
and
arpl
jg
lods
bound
jmp
pop
or
and
jmp
rcl
iret
sbb
movsb
clc
xchg
push
adc
adc
enter
and
pop
xor
test
add
sub
mov
push
push
jb
mov
mov
addl
or
aaa
jne
mov
movsl
jmp
mov
or
push
in
into
into
scas
xchg
cmp
in
dec
or
cmp
jge
fwait
stos
loopne
inc
adc
xor
push
aaa
jmp
imul
int
adc
test
cmp
xor
inc
fisttpl
es
mov
pop
dec
outsl
push
sub
ljmp
push
push
shll
cmp
sarl
in
dec
adc
movsl
ficompl
test
ret
lock
push
repnz
mov
sbb
xor
inc
xor
subb
rcrl
dec
adc
add
xchg
mov
cwtl
push
rclb
pop
adc
ret
mov
das
call
into
popa
inc
test
cmpsb
jecxz
je
mov
mov
mov
pop
lods
lods
call
xor
or
aam
add
repnz
icebp
mov
mov
jne
divl
sub
mov
mov
fildl
jecxz
jl
jg
jno
and
pushf
je
xor
mov
pop
movsl
or
xchg
adc
pusha
ret
arpl
ja
mov
inc
unpckhps
leave
push
mov
lcall
ss
fnstsw
inc
mov
shr
lds
popf
aad
out
out
pop
mov
pushf
adc
xor
mov
imul
pop
call
push
dec
in
adc
rolb
mov
push
lea
ret
pop
sub
add
addr16
xchg
push
mov
cmp
outsb
mov
cs
push
add
mov
inc
sub
mov
ret
adc
push
scas
push
pop
jg
mov
xchg
mov
arpl
addr16
imul
cld
sahf
jp
pop
mov
andb
mov
add
or
xchg
repz
push
inc
mov
imul
mov
aaa
xor
mov
jbe
jno
loop
rcrl
pop
jbe
jp
cwtl
clc
pop
mov
ror
gs
mov
push
lret
out
xor
jb
negl
xchg
xor
push
push
fnstenv
cwtl
mulb
insl
push
jg
jne
js
or
sbb
lahf
pop
inc
outsb
nop
test
cmpsl
sub
mov
sub
pusha
adc
mov
icebp
imul
push
je
loope
xchg
ficoml
ret
in
jbe
ret
ror
mov
cmp
cmp
sbb
fwait
cmpb
xchg
adc
lcall
or
ret
scas
pop
mov
jno
int3
popa
push
and
ret
mov
mov
mov
xchg
repz
xchg
pop
rcll
mov
jmp
fucomp
out
sbb
mov
insb
sarb
lods
xchg
or
adc
pop
mov
xor
adc
popf
out
sub
xchg
xor
clc
cmp
lds
ret
jae
inc
das
adc
data16
pushf
out
movsb
cmp
aad
jmp
add
mov
out
sbb
pop
jne
int3
popf
addr16
cmc
push
lcall
iret
add
add
mov
push
out
std
fisttps
sbb
cmp
cmpsb
ss
jne
rclb
mov
int3
mov
pop
sub
leave
pusha
add
sti
pusha
aad
pop
and
orl
mov
lahf
and
lods
pop
hlt
mov
jmp
push
xchg
sub
sub
popf
jl
or
add
cmpsl
popa
clc
inc
scas
jmp
jno
jmp
sub
mov
rclb
xchg
rcr
jno
icebp
lahf
sbb
mov
inc
jge
les
ret
fmuls
and
add
ret
and
or
enter
insb
jns
ja
cwtl
mov
mov
in
mov
dec
mov
mov
jnp
idivb
mov
std
cmp
mov
jo
xchg
jne
pop
stos
jle
cltd
test
sarb
mov
mov
rorb
lcall
lahf
xor
dec
inc
mov
pop
inc
fistpll
and
pcmpeqd
ja
inc
int
aaa
cmp
repnz
cmp
data16
fsubs
xchg
sbb
mov
adc
mov
adc
mov
cmp
fdivl
jg
lea
push
xchg
imul
and
pop
xchg
cltd
out
pusha
aam
test
shl
mov
in
add
pop
mov
pop
test
sarl
xchg
dec
es
sbb
jo
cmpsb
fisttpll
popa
into
cmpsb
out
test
int3
fadds
fs
push
inc
mov
stc
movsb
adc
mov
sub
push
xor
dec
les
out
outsb
outsl
mov
and
shll
pop
xor
xchg
fsubrl
sbb
jns
outsb
outsb
fcoml
orl
mov
mov
or
and
xor
push
dec
loopne
mov
dec
fistpll
out
mov
pushf
scas
mov
test
sbb
xor
vsqrtps
sar
push
fistpll
jno
push
pop
jno
mov
sar
ds
clc
stos
dec
ret
or
stos
or
insb
jg
jge
push
add
sub
js
and
cmpsb
iret
push
es
notl
sub
jo
cmp
jecxz
inc
pop
sbb
pushl
fsubl
pop
inc
rclb
adc
mov
dec
sub
mov
les
inc
xor
jmp
mov
xchg
inc
pop
leave
shlb
int
pop
cli
add
shlb
popa
ret
in
adc
sbb
cmp
ja
std
pop
or
dec
jge
pushf
js
mov
test
adc
or
and
jns
inc
cmp
pushl
mov
dec
and
cmpsb
pushf
test
cmp
imul
dec
data16
loopne
cwtl
dec
push
in
xchg
mov
pop
xor
inc
xchg
xor
inc
cmp
lods
mulb
xchg
add
jne
mov
movsl
cmp
outsl
fst
xchg
ds
fidivs
lret
lahf
xchg
push
jle
pop
lcall
inc
mov
lret
pop
xchg
add
and
push
or
mov
inc
xchg
enter
arpl
mov
aam
mov
rcl
mov
jge
in
mov
or
enter
mov
mov
popf
into
subb
jbe
lods
in
fucom
mov
inc
push
cvtps2pd
mov
pop
imul
cmp
scas
pushf
and
cmpsl
add
inc
test
aas
fcomp
stos
dec
out
and
adc
stos
dec
je
push
insb
pop
into
jl
push
test
mov
popa
out
jmp
popa
fisubs
dec
pop
xor
int
pop
addb
int
or
mov
sub
sbb
lods
nop
sti
stos
roll
pop
dec
je
pop
aad
stos
jmp
xor
test
mov
das
ret
leave
inc
test
fs
enter
sub
mov
mov
sub
adc
adc
pop
dec
jo
mov
add
pushf
loope
test
aam
jecxz
shlb
sub
adc
lret
iret
jnp
dec
or
mov
inc
mov
mov
mov
popf
repnz
cmp
sbb
sbb
cmp
test
and
mov
jp
adcl
or
push
imul
scas
dec
aaa
or
inc
adc
xor
lods
xchg
jl
repnz
cld
xor
cld
jle
pop
push
add
mov
fcmovnbe
test
sbb
lock
or
xchg
mov
inc
xchg
lret
lods
andl
dec
lods
or
cmpsb
aad
adc
pop
test
lea
lcall
js
cmpsl
js
negb
mov
jg
int
inc
cmp
test
out
lahf
mov
jns
push
xchg
xchg
int
movsl
and
cmpsl
add
push
mov
les
push
in
push
sub
or
and
scas
clc
movsb
mov
cmp
or
mov
lea
sbb
loopne
push
add
and
movsb
sub
stc
adc
pusha
out
negb
lret
xorb
push
xor
fwait
dec
imul
jne
sub
cmp
sub
rcll
lods
sub
or
or
or
fcomp
add
inc
out
pop
xor
inc
stos
scas
test
or
or
push
gs
xorb
orl
add
inc
lahf
stos
mov
and
jb
mov
add
and
mov
movsb
shl
dec
std
inc
les
adcl
lret
dec
imul
test
mov
popf
ljmp
cwtl
stc
add
les
les
lret
in
cmpsl
sahf
aad
pop
imul
ja
or
sub
sbb
ret
test
and
call
aad
popf
or
adc
or
mov
fs
aaa
fnstenv
xchg
scas
sbbb
test
in
sti
in
les
push
inc
cmp
das
add
mov
jl
lcall
pop
or
pop
adc
int
jnp
daa
sbb
or
gs
sub
lods
shld
scas
out
ds
clc
insl
xchg
mov
sub
icebp
jle
xlat
push
cmp
mov
je
mov
cmp
aaa
fisubs
stc
scas
push
or
lea
jne
sub
xor
adc
fdivr
xor
loop
sub
push
inc
inc
add
sar
mov
scas
pop
push
and
nop
jle
pop
mov
cmp
popa
pop
in
mov
insb
dec
out
jnp
mov
rcrb
inc
mov
mov
std
xor
das
in
sti
leave
or
sahf
fadd
lret
dec
push
mov
insl
xlat
js
cmpsb
inc
in
aam
add
das
dec
hlt
daa
xor
mov
mov
test
pop
adc
mov
jns
mov
mov
push
inc
sbb
ss
repz
xor
jne
jno
repz
int
push
and
or
mov
shll
mov
inc
push
add
repz
aas
jb
or
fisttpl
idivl
jge
aas
xchg
ror
shl
xchg
fldcw
xchg
xchg
and
mov
or
jp
orb
push
push
sbb
test
dec
in
ret
sbb
inc
outsb
xchg
xchg
jecxz
sub
and
pop
lods
jo
stos
push
cmp
lahf
and
fcom
pop
xor
stc
inc
pop
mov
lods
sub
idivl
xorl
in
xchg
cmp
and
dec
dec
sub
incb
jecxz
cli
inc
mov
mov
lea
adc
pop
inc
xlat
outsb
adc
sahf
lea
mov
jle
inc
test
sub
jae
jle
mov
xchg
inc
sar
repz
add
es
int
mov
sbb
xor
std
mov
test
test
addr16
push
inc
cltd
in
jno
mov
nop
adc
adc
negb
iret
ret
xchg
and
mov
xlat
pop
and
enter
pusha
jo
jbe
call
jecxz
into
cs
jo
xor
mov
cmp
nop
nop
negl
fs
sti
jg
push
mov
mov
push
dec
test
mov
sbb
fdivs
leave
mul
mov
dec
jne
test
cmpsl
popa
mov
in
out
mov
int3
mov
movl
inc
sahf
jmp
mov
mov
pop
xor
jg
cmp
xor
sbb
loop
jne
adc
aas
movsb
pop
bndstx
movsl
jp
mov
dec
jg
inc
mov
cmp
bound
outsb
xchg
fmull
add
lods
cmp
hlt
inc
and
mov
ljmp
hlt
in
mov
xchg
cmp
aas
stos
mov
bound
jmp
les
popf
pop
fidivrs
cltd
lods
sbb
in
jo
aad
mov
iret
dec
jmp
hlt
mov
mov
xchg
nop
mov
pop
xor
popa
lock
cmpsb
adc
setne
jb
mov
lock
out
add
xchg
push
cli
mov
out
add
test
ret
mov
mov
add
fimull
pop
int
xor
and
adc
movsb
push
push
flds
shlb
push
and
fimull
out
adc
out
jmp
js
mov
jne
push
ss
ficompl
xor
movsl
sub
gs
push
adc
xchg
jle
and
das
lds
sub
ret
adc
jmp
addb
adc
dec
cmpl
test
andb
jnp
in
mov
std
ljmp
push
shlb
and
push
dec
mov
les
or
jge
shll
or
jb
mov
mov
dec
push
xlat
scas
mov
iret
xchg
inc
xchg
pop
mov
aam
add
or
mov
mov
fcoml
dec
xor
out
rol
bound
pop
xor
push
xor
xchg
sbbb
iret
pop
push
sub
addr16
cmp
in
or
mov
outsb
stos
jp
push
into
rcr
lahf
int3
jns
mov
xchg
outsb
je
cmpsl
popf
sahf
inc
mov
dec
sbb
jle
lahf
and
popa
jae
sbb
xchg
and
mov
leave
je
inc
push
adc
add
fistps
cmp
inc
out
adc
les
push
push
push
push
in
lods
cmp
push
mov
inc
aam
leave
sbb
lahf
fisubl
bndstx
mov
jo
pop
xor
nop
jmp
testb
outsb
jae
adc
dec
fwait
popf
iret
mov
adc
mov
scas
dec
out
cmp
push
movsb
scas
dec
pop
gs
test
adc
outsl
test
or
inc
mov
out
movsb
cltd
mov
mov
sbb
stos
cwtl
sbb
inc
push
mov
or
jbe
scas
imul
sti
mov
sub
or
inc
pop
aad
decb
or
pop
arpl
inc
xor
jmp
push
lret
cmpsl
jp
loope
jbe
aad
sti
and
pusha
jecxz
fiaddl
sbb
stos
jne
mov
jecxz
shl
aaa
pop
dec
adc
inc
movsl
pop
dec
jo
sub
sub
ficoms
xor
cli
inc
fwait
rcrb
mov
pop
les
repnz
sbb
push
xor
or
sub
inc
je
add
imul
xchg
xor
inc
jmp
orl
jl
sbb
roll
xchg
and
cld
sub
ret
lahf
mov
inc
sahf
imul
sahf
inc
mov
lods
movb
jmp
mov
adc
mov
jle
inc
rorb
popa
shlb
lods
inc
mov
cmp
in
push
fldl
out
dec
xor
addr16
mov
cld
adc
das
jecxz
mov
jmp
and
roll
bound
nop
dec
cmp
test
aas
inc
jle
xor
xchg
jno
jp
and
inc
lret
out
dec
mov
je
mov
or
jl
cmp
insb
xor
jmp
xchg
stos
mov
aam
imul
cmp
test
jmp
push
cmpl
popa
out
test
loop
dec
daa
out
jmp
ret
scas
add
sbb
in
stos
icebp
pusha
mov
sub
mov
mov
dec
xchg
fsubr
dec
dec
mov
jle
mov
mov
sbb
jecxz
ljmp
xchg
push
add
fcomip
lds
push
push
decl
inc
mov
or
aam
push
nop
pop
pop
test
inc
pop
ljmp
rolb
sub
aam
or
cld
mov
out
inc
cmp
div
repnz
cs
sub
sti
clc
nop
lret
adc
hlt
cmp
int
mov
je
push
sarb
add
jo
out
xor
mov
xchg
push
movsl
rcll
sub
fiadds
mov
xchg
cmp
sub
xchg
and
xchg
inc
inc
fdivs
in
adc
jae
inc
lock
dec
sahf
ficoms
or
mov
js
jle
ss
hlt
shlb
std
adc
inc
sub
push
aam
sahf
ret
les
push
jne
subb
fldt
sub
hlt
cmp
cmp
cld
js
movsl
mov
shll
xor
icebp
jbe
pop
push
xchg
add
cmpsb
add
mov
ljmp
mov
ficompl
or
push
les
insl
mov
addr16
gs
sub
mov
jne
in
push
ljmp
cmc
std
sbb
dec
jns
out
and
mov
mov
xchg
xor
enter
js
add
dec
inc
mov
test
add
or
in
mov
jne
push
or
cmc
cmp
sti
sarb
push
push
cmp
dec
jae
jnp
shlb
mov
in
push
xchg
push
sahf
jo
and
mov
outsb
xchg
notl
cmpsb
rorb
mov
scas
scas
adc
add
cvtpi2ps
mov
and
jnp
add
xor
inc
mov
aam
rorl
pop
cld
sarb
add
loope
xchg
sub
pop
dec
lret
mov
in
pop
repz
push
mov
imul
ret
xchg
push
cmp
insl
pop
loop
inc
ja
in
data16
arpl
out
jno
and
push
cmpsb
insl
jge
mov
out
push
jecxz
fs
push
ss
jbe
or
adc
push
mov
pop
outsb
dec
dec
insl
mov
fs
cld
mov
rol
aas
lods
mov
inc
pop
insb
fldenv
call
jno
adc
rorb
pop
cli
fwait
pop
arpl
mov
in
repnz
mov
and
mov
xchg
dec
movsl
jmp
in
lds
xor
and
pop
je
xor
or
cltd
or
or
lea
mov
or
jo
mov
push
cmp
jle
bound
data16
adc
inc
cmp
repz
push
adc
and
add
add
repz
jno
loop
mov
mov
mov
out
adc
sbb
add
fcoms
cltd
loopne
cmp
pop
dec
fimull
inc
stc
xchg
call
inc
cmpb
mull
sarl
adc
shrb
or
in
xrelease
pushf
int3
dec
or
mov
jecxz
add
cwtl
pop
div
fsubs
movsb
adc
popf
out
jp
or
lds
pushf
daa
sbb
test
jg
mov
in
xrelease
js
push
xor
push
ret
int3
test
mov
cmp
inc
xor
and
ret
pop
mov
xor
outsb
out
jne
mov
inc
or
xchg
cli
mov
mov
push
stos
in
jbe
lods
inc
jnp
add
jge
add
adc
cli
arpl
add
bnd
aaa
addr16
xor
jg
xchg
push
pop
ret
sub
or
lret
lock
jae
shlb
fs
mull
push
mov
fiadds
sbb
pop
mov
pusha
scas
lock
jle
mov
mov
xor
cmp
add
shll
lcall
imul
test
ja
addr16
or
sbbl
movsl
push
cmp
ds
bound
sbb
push
inc
cmp
jo
sbb
mov
mov
in
mov
push
and
mov
push
cli
push
or
cmp
and
sbb
vmovshdup
lds
lahf
push
push
cwtl
mov
fidivl
sbb
jmp
sbb
dec
pop
cmpsb
jns
adc
sbb
pop
fildl
aad
or
mov
sub
pop
mov
pop
mov
push
sti
jae
dec
mov
jle
jp
push
into
xchg
loop
add
sahf
sbb
loopne
jb
adc
or
xchg
add
aam
and
out
insb
sbb
push
push
xchg
push
sub
es
lock
adc
sti
fdivrs
scas
jns
push
xchg
gs
lods
jl
fwait
dec
push
cmpsb
dec
mov
add
jmp
lods
sub
push
adc
and
fisttpl
or
aad
dec
pop
sbb
mov
iret
iret
pop
xlat
mov
aas
jo
push
rol
mov
dec
pop
gs
xor
rclb
sub
test
inc
sbb
stc
rcrl
add
or
cmp
ljmp
out
rolb
jge
out
pop
fcmovu
loopne
arpl
decl
arpl
jnp
out
js
mov
sub
gs
and
pusha
push
out
decl
lahf
xorb
addb
cmc
xchg
xchg
mov
cmp
mov
mov
js
mov
sahf
and
repz
xchg
or
cmp
push
mov
and
fcom
pop
jmp
xor
push
mov
dec
mov
and
dec
sbb
xchg
push
pop
cltd
xchg
out
adc
xchg
mov
pop
data16
pop
xchg
arpl
fistpl
out
stos
add
lea
ret
insb
es
imul
sbb
insb
mov
nop
sub
push
and
int3
add
adc
test
push
cmp
or
xchg
testb
enter
clc
mov
sub
push
hlt
xor
repnz
push
sbb
inc
push
add
adc
jae
dec
mov
ss
in
test
cmp
addr16
bound
push
ficoms
mov
ja
add
or
pop
sbb
cld
pop
push
stos
mov
rdtsc
in
movsl
add
pop
xor
outsb
sub
sbbb
xchg
jecxz
fadd
test
mov
jo
and
inc
mov
xor
lods
into
rolb
cli
push
subb
fisubl
imul
rclb
xor
ja
stos
int3
rolb
adc
cmpsb
mov
ret
das
decl
hlt
adc
adc
test
aaa
popf
dec
mov
and
lods
pushf
add
jb
mov
jmp
negl
push
or
lcall
aas
jle
xchg
cld
lea
dec
cmp
mov
pop
inc
lret
pop
lea
pusha
cmp
in
inc
data16
sub
cli
pop
mov
sub
cwtl
xor
stc
and
inc
ds
xor
inc
cs
sub
pop
mov
arpl
bound
repz
sub
mov
lahf
loopne
sub
adc
stc
cmpsb
mov
dec
jecxz
cli
mov
rolb
call
aas
adc
das
insl
add
imul
mov
or
xor
subb
jecxz
hlt
scas
xor
les
stos
mov
pop
and
jne
or
xor
cmp
popf
loop
inc
xchg
mov
imul
mov
fdivl
jecxz
cmp
dec
add
cmpsb
and
cltd
fdivs
cmp
cmp
xchg
testl
fisubl
sub
cmpsb
jno
lods
mov
je
jno
clc
pop
es
stos
test
fisttps
psllw
movl
fistpll
clc
jne
aas
enter
es
mov
xor
mov
pop
leave
xchg
dec
push
and
or
adc
leave
push
cwtl
add
sbbb
xor
mov
xor
in
imul
ljmp
fnstcw
xor
or
dec
dec
rol
leave
enter
jae
hlt
int3
je
ss
das
inc
nop
pop
and
neg
add
out
push
mov
ret
cmpsb
movsl
xor
mov
cmp
lahf
jge
adc
sti
or
jns
push
test
mov
scas
sub
sbb
push
sbb
xor
xchg
jecxz
cmp
pop
push
sbb
repz
daa
fistps
xchg
scas
adc
out
cmp
sarb
or
push
lock
ds
pop
scas
cld
pop
pop
dec
inc
fcomi
gs
clc
sahf
jle
inc
jge
mov
cmpsb
cmp
shlb
mov
inc
jle
mov
jno
fdivl
dec
sub
repz
pop
xor
cmc
repnz
mov
xchg
xchg
cmpsl
pop
xchg
cmp
daa
out
xchg
aam
add
pop
add
mov
lret
xor
mov
and
jmpw
pop
fstpt
loopne
int
sub
jp
popf
pop
ss
shlb
adc
mov
fmul
scas
dec
mov
mov
jp
hlt
roll
icebp
out
enter
aad
out
add
xor
add
sub
movsb
push
imul
dec
test
js
out
loop
jbe
inc
imul
loop
push
or
sbb
or
lretw
es
inc
adc
jbe
xchg
dec
ret
data16
subl
jecxz
incb
aam
and
mov
and
js
xchg
jecxz
mov
jnp
push
lret
into
xchg
or
pop
dec
shll
push
sub
mov
outsl
into
sbb
leave
adc
cli
xor
pop
imul
xor
mov
jbe
and
mov
adcb
push
dec
xorb
inc
and
mov
jp
out
cld
adc
mov
mov
mov
fldpi
fists
inc
mov
je
jb
and
dec
ficompl
pop
repz
cmc
aaa
pop
shlb
pop
add
lret
test
xchg
imul
xchg
dec
movsl
jp
repnz
daa
pop
inc
pop
stos
cmp
or
jb
ret
pushw
test
cli
adc
ret
adc
and
insb
inc
lds
add
or
push
repz
xchg
jo
sahf
ret
push
sarl
jo
push
cmp
sub
popl
dec
mov
gs
and
sbb
fcomps
ret
or
in
push
fstps
movsb
push
clc
nop
addr16
sub
stos
sub
xchg
lea
inc
jbe
jb
pop
icebp
test
jnp
sub
cs
push
and
pop
sub
pop
pop
loop
sub
jns
fwait
jecxz
xor
or
fisubs
mov
inc
and
jg
aad
jbe
pop
xlat
stos
mov
xchg
mov
inc
test
in
or
cmp
jo
and
test
in
cmp
jp
scas
adc
das
lret
int3
iret
fucomp
int3
and
pop
leave
mov
add
mov
test
mov
push
cli
mov
push
icebp
repz
out
lcall
popa
aaa
inc
rolb
jo
pop
int3
popf
adc
push
adc
shll
jo
imul
jecxz
sbbb
jp
inc
shlb
sbb
xchg
cmp
pop
iret
mov
popf
mov
mov
jae
pop
scas
mov
mov
cmova
push
insl
icebp
ljmp
imul
lcall
rcll
xor
imul
and
dec
insl
ljmp
mov
xor
aad
das
mov
inc
pop
push
cltd
icebp
adc
test
mov
mov
pop
mov
xchg
in
mov
jns
addr16
aad
fcmovnbe
flds
sahf
in
das
xor
sbb
xor
dec
sti
push
outsb
push
test
adc
jne
into
js
fidivrs
add
jno
xlat
xchg
cmp
aas
or
pop
cmp
mov
mov
negb
jge
outsb
inc
xchg
outsl
out
ret
lahf
lret
outsl
jb
loopne
pop
push
sub
jge
push
inc
push
jle
mov
xchg
negb
or
shrl
push
stos
xchg
mov
cmc
sub
insb
cmp
insl
sub
aam
jbe
inc
cmpsb
mov
mov
cmp
ret
sub
adc
fsubr
and
imul
jecxz
scas
rol
mov
mov
cmp
mov
push
dec
add
or
inc
mov
and
imul
dec
cwtl
push
fcmovne
mov
pop
andl
dec
and
mov
inc
pop
scas
lahf
inc
sub
pop
rolb
pop
scas
lods
shrl
push
dec
into
test
push
cmc
nop
xchg
push
int3
mov
cli
daa
push
lret
arpl
inc
call
mov
pusha
mov
jo
dec
shrb
test
je
subl
pop
sub
ljmp
cmc
faddl
outsb
fwait
cmc
das
insb
mov
dec
pusha
push
int
dec
xchg
lret
std
dec
dec
fstpt
push
add
push
cmp
lock
fldl2e
les
mov
sub
cmp
pop
push
cld
push
pop
fwait
push
popf
int3
and
scas
shl
iret
xchg
cmp
xorl
add
lcall
inc
int3
jp
test
fwait
into
sbb
pop
mov
xchg
psrld
adc
aas
xchg
push
rcll
gs
popa
scas
push
add
xchg
jle
cmp
xchg
into
or
ds
lds
out
sti
push
jmp
sbb
and
mov
popa
iret
int
js
xor
outsb
in
xor
jmp
scas
lea
push
paddsw
bound
or
pop
adc
test
dec
shll
stos
mov
mov
hlt
data16
pop
dec
xor
jecxz
scas
stos
mov
in
cmp
mov
inc
cmc
dec
sub
push
pusha
andl
icebp
inc
inc
or
push
sarb
loop
addb
push
xor
sarl
xchg
loope
repnz
mov
adc
addb
xor
sbb
mov
dec
sub
test
cmp
jge
ret
in
fwait
push
je
nop
subl
gs
add
pop
xor
push
loopne
xlat
fstl
leave
mov
and
in
lcall
scas
adc
movsl
pop
mov
cwtl
sbb
push
push
lcall
sub
push
outsl
mov
mov
push
cmp
mov
push
mov
iret
pop
push
cmc
daa
mov
arpl
push
shlb
mov
add
xor
push
repz
adc
inc
mov
push
por
pop
dec
scas
xor
add
jae
mov
sbb
push
lods
std
negb
adc
mov
scas
mov
cmp
test
daa
lret
mov
push
gs
rorl
movsl
and
push
aas
and
lahf
repz
fisubrl
mov
cwtl
xchg
psubusb
dec
inc
cs
sub
jb
cmp
scas
push
hlt
movsb
cmpsl
out
lahf
js
cmpsb
inc
addr16
lcall
outsl
jmp
adc
imul
mov
mov
stc
mov
imul
mov
jle
push
scas
lret
push
inc
cmp
xor
movsb
sub
in
gs
popa
dec
push
fcmove
nop
sti
xchg
xor
xchg
xor
sbb
dec
mov
scas
or
mov
or
cmc
inc
xchg
enter
gs
dec
adc
pop
aam
loope
mov
push
inc
add
pop
add
in
lds
jmp
sub
sahf
lret
ret
sbb
inc
mov
rcll
outsl
sahf
push
fcoml
xchg
push
incb
cwtl
ret
push
scas
fsubrs
push
xchg
or
mov
les
inc
mov
inc
push
int
ljmp
sbb
jp
sbb
jnp
and
adc
pusha
and
popf
daa
addr16
out
mov
mov
imul
add
inc
lods
mov
imul
fmuls
adc
aas
adc
mov
push
adc
pop
mov
jp
mov
or
mov
in
jle
call
pop
mov
push
daa
out
ss
loope
mov
push
sub
xchg
push
loopne
fs
dec
insb
inc
test
outsl
mov
push
imul
mov
pushf
jne
fdivrs
ret
in
clc
dec
test
jmp
push
jno
inc
mov
mov
push
movsl
sub
ret
push
dec
ret
outsb
lret
loop,pn
pop
insb
scas
scas
sbb
je
lea
in
fistpll
sub
dec
or
sti
shr
lcall
pusha
icebp
mov
int3
sbb
call
loope
xor
icebp
das
aad
sbb
jg
push
mov
dec
std
jg
inc
loop
roll
xor
sbb
imul
and
sarb
xchg
push
pop
push
int
arpl
in
and
daa
push
add
dec
rcrl
xor
adc
insl
mov
push
out
adc
outsl
mov
popf
xchg
in
sbb
das
jecxz
sub
out
cmp
inc
fisttpl
mov
inc
xchg
dec
into
xor
shrb
add
pop
add
xchg
pop
jno
xlat
arpl
imul
into
aas
xchg
test
or
movsb
les
les
push
jns
mov
push
cmc
aad
and
mov
es
and
pop
subb
adc
jmp
sti
sbb
jecxz
xchg
push
hlt
adc
test
xor
fiaddl
sti
lods
dec
mov
gs
into
std
pushf
loop
imul
cld
cmpsl
out
les
mov
sub
iret
mov
stos
xchg
adc
lret
xor
fs
cs
add
mov
push
sahf
xchg
jae
sbb
add
pop
cmpsb
or
inc
push
jg
dec
insl
jno
cmp
arpl
popf
mov
clc
inc
pop
xor
pop
ret
add
xchg
add
push
dec
push
lea
jle
push
pop
adc
out
mov
mov
cmpsl
push
cmp
cli
xor
sbb
std
lret
faddl
insb
sbb
sbb
repnz
inc
daa
into
push
stos
fistpll
mov
push
jmp
xor
sub
jl
sbb
nop
xchg
test
sbb
fwait
sbb
sbb
nop
adc
xchg
sub
inc
daa
inc
push
les
fbstp
cltd
mov
insb
mov
pushf
ret
jb
loopne
adc
push
imul
xor
mov
lret
pop
fucom
lret
cld
or
imul
mov
scas
push
push
js
aaa
ja
pop
mov
sub
cmp
jns
push
aaa
and
pop
out
loope
dec
fwait
out
xchg
jecxz
sbb
popfw
and
and
push
mov
mov
sbb
stc
push
pusha
dec
pop
outsb
dec
xor
repz
dec
stos
outsb
cmp
cld
cmpsb
mov
xor
dec
pusha
stos
leave
addr16
ficoml
mov
add
xchg
push
fidivrs
and
jg
mov
lods
mov
pop
dec
push
push
mov
leave
enter
pop
out
or
xchg
inc
sub
inc
call
pop
iret
dec
xchg
mov
cs
cmp
scas
cmp
mov
ljmp
pop
xchg
mov
or
sub
xorb
std
sbbb
pop
data16
inc
popa
mov
flds
jle
insl
pusha
mov
lock
mov
mov
mov
pop
loop
hlt
inc
mov
pop
pushf
out
push
sub
lods
dec
fnstcw
cltd
jl
adc
jl
imul
push
xor
popa
fcoms
test
add
fsubr
mov
push
jg
cltd
imulb
fimuls
sarl
xchg
das
mov
lret
sbb
int3
xlat
cltd
and
dec
pop
jmp
inc
xor
cld
sub
sbb
xchg
and
sub
xchg
sbb
inc
mov
cwtl
jmp
jmp
inc
lcall
sbb
xlat
push
mov
inc
add
pop
sub
sub
inc
fwait
dec
add
clc
xchg
push
sub
mov
mov
jp
stos
shl
push
je
cmp
fsts
es
call
cmp
mov
aaa
ficoml
arpl
jmp
cmpsb
inc
pusha
lock
out
fbld
or
jle
or
ret
xchg
sarb
jge
jg
or
and
clc
dec
les
and
std
gs
shrb
stos
jbe
ror
ja
mov
xlat
out
mov
push
pop
push
mov
leave
dec
data16
aaa
xchg
gs
push
mov
mov
mov
add
cmp
test
psubd
push
add
int3
sub
pop
mov
and
pop
jnp
mov
jbe
jo
or
xchg
in
xor
push
nop
mov
orb
mov
jecxz
movsb
dec
xor
dec
aaa
mov
jg
jo
push
push
cmp
mov
inc
jae
pop
pop
daa
pop
or
jns
outsb
es
hlt
push
push
js
dec
xchg
pusha
stos
mov
and
mov
cli
push
out
int
inc
push
push
imul
inc
std
lock
dec
push
xor
sbb
jg
cmpsb
pushf
sub
fnsave
xchg
xchg
push
dec
mov
pop
stos
mov
mov
shrb
lods
xlat
fcmovnbe
inc
mov
fxch
jbe
mov
cmpsb
cmp
sub
imul
push
out
lahf
les
push
aaa
out
mov
subl
sbb
adc
lret
sub
sub
adc
imul
jnp
xor
xchg
inc
mov
popa
pushl
lea
mov
jo
bound
pop
pop
sub
jle
add
movsb
or
add
arpl
xchg
mov
and
movsl
je
aaa
xchg
mov
fwait
rcl
cmp
mov
jp
aad
jo
jo
ss
add
insl
daa
add
xlat
cmp
je
xchg
outsl
mov
add
mov
cmp
pop
jae
and
clc
stos
cmp
jo
pop
in
mov
scas
adc
adc
fs
out
addr16
mov
adc
ljmp
mov
push
xor
enter
gs
fidivrl
inc
popa
call
addr16
add
stos
mov
jo
adc
sbb
leave
test
mov
out
jge
js
pushf
and
cmp
popf
repnz
mov
aad
ljmp
mov
and
dec
aam
fcomps
lret
movsl
or
imul
gs
test
adc
es
sbb
push
inc
bound
cs
scas
push
jae
inc
mov
sub
dec
jle
or
mov
pop
push
pop
inc
repz
sbb
int3
push
les
mov
les
fdivr
lock
mov
loop
cmc
shrb
mov
stc
out
jno
movsl
fwait
jns
or
mov
pop
xor
sbb
mov
gs
outsl
jns
and
pushf
or
pop
sub
cmp
ss
jno
cmc
mov
pop
ret
movsb
lock
mov
push
mov
clc
push
call
out
shlb
pop
adcb
xchg
xchg
push
leave
sub
not
lods
fwait
push
jl
sub
decb
sub
push
xchg
sbb
icebp
test
push
dec
inc
adc
jb
jecxz
cmp
xchg
enter
xlat
ja
pop
jne
jnp
cmp
popf
ljmp
jno
xchg
dec
push
fisttpll
inc
pop
sar
push
divb
stos
sbbb
hlt
out
mov
in
sub
lret
mov
shrb
jmp
stos
and
inc
sbb
fadds
xchg
lods
out
and
push
cli
mov
test
test
lret
mov
jmp
icebp
adc
and
push
pop
dec
hlt
inc
stos
pusha
push
cld
push
pop
adc
les
sarl
movsb
sub
cmp
shl
adc
dec
jb
sub
scas
scas
or
test
lret
mov
in
cmp
pop
add
lds
inc
mov
mov
xchg
cs
sub
jo
pop
and
pop
imulb
shrl
test
fmuls
jo
xor
jle
rorb
fnsave
dec
popf
sbb
shl
and
xchg
mov
nop
leave
push
or
in
icebp
pop
rcr
in
outsl
pop
push
pop
inc
mov
pusha
mov
mov
mov
ljmp
push
paddw
or
sti
dec
jns
shll
repz
lret
fldenv
movsl
lods
enter
flds
push
sub
cs
dec
or
adc
cmp
lret
lahf
fidivs
notb
imul
or
mov
shrb
ret
mov
mov
pop
insb
mov
jo
in
iret
mov
pop
jbe
lcall
jne
sbb
imul
dec
pop
loop
addr16
sub
adc
idivl
fildl
jno
clc
jb
and
ljmp
lock
jg
dec
fs
int3
or
js
clc
mov
daa
adc
call
xchg
mov
pinsrw
adcl
sahf
pusha
shrl
lret
pop
leave
jmp
jnp
fcmovnbe
mov
jl
cmpsb
xchg
aam
xchg
icebp
test
mov
adc
and
imul
xlat
add
cltd
adc
sti
pop
lahf
or
mov
ss
lds
pop
mov
inc
adc
mov
not
jno
pop
mov
ja
inc
cmp
sub
xor
mov
inc
pop
jg
and
mov
stos
mov
and
jne
pop
inc
subb
andb
push
xchg
push
cltd
push
jbe
or
sub
shll
das
ds
mulb
enter
incb
jg
lret
pop
xor
push
pop
movsb
sbb
cmpsb
mov
adc
adc
jp
negl
outsb
xchg
mov
mov
addr16
and
fs
movsl
mov
addr16
add
cbtw
cmp
adc
jbe
iret
xchg
nop
inc
fsubs
and
mov
sub
std
cmpsb
sbb
mov
addr16
popa
loope
mov
jmp
pop
xor
cmc
dec
sbb
or
in
sbb
popf
mov
pop
enter
dec
cmp
push
cli
ljmp
scas
ja
cmpsl
and
in
jge
push
lods
pop
pop
fdivr
adc
cmp
leave
mov
cmp
arpl
gs
jnp
loopne
mov
sbb
lods
push
sub
adc
pop
ljmp
popa
adc
push
and
xchg
sahf
imul
mov
sbb
cli
out
xchg
leave
sti
mov
push
shll
sbb
xchg
mov
incl
lret
sub
out
test
inc
sbb
testb
loop
and
add
xchg
jle
adc
icebp
rcr
ja
mov
js
sub
push
jl
and
xchg
or
mov
xchg
add
and
add
lods
daa
popa
sbb
jecxz
stos
jmp
mov
xor
out
or
cmp
mov
mov
xor
mov
push
cmp
je
mov
int
and
or
ret
cwtl
in
aaa
gs
pop
jns
add
cmp
adc
xlat
or
outsb
clc
push
in
mov
btr
mov
dec
sub
xchg
mov
in
outsb
addl
mov
nop
addr16
std
pop
lahf
inc
sbb
lret
rcrl
cmpl
jne
sbb
push
pop
daa
xchg
inc
aam
aaa
push
out
xchg
neg
push
inc
mov
mov
pop
clc
push
hlt
in
fnstenv
push
jge
lds
in
cs
jge
lea
mov
daa
cmp
mov
mov
lds
or
sti
dec
outsl
jbe
mov
jb
fcoms
add
pushf
sub
dec
mov
xchg
popa
and
xchg
pop
imul
lahf
cld
das
sbb
xor
scas
push
ret
fnstenv
push
push
add
loope
dec
xor
loope
pushf
lcall
imul
and
xchg
mov
ret
fs
sub
sahf
pop
sbb
jnp
test
jg
xor
into
out
das
jns
and
sub
clc
arpl
jno
adc
gs
ret
jge
sti
sbb
fs
pop
inc
or
lods
push
pop
lret
push
repnz
mov
push
push
int
cld
adc
sub
fists
out
xchg
sbb
sbb
int
mov
cmp
imul
xchg
mov
pop
je
es
cmpl
mov
mov
cmp
add
and
xor
andb
stc
fmuls
loopne
lea
push
dec
xchg
negb
add
cmp
jl
loope
sub
popa
addr16
sbb
divb
pop
push
orb
lret
rcll
sbb
xor
sub
fcomi
push
and
xchg
mov
xor
sbb
test
mov
push
loope
push
mov
xchg
pop
out
push
inc
cmovge
inc
xchg
insl
fwait
sub
or
adc
inc
mov
test
fistpll
insl
push
inc
insb
inc
xchg
ljmp
xchg
push
dec
adc
sub
shll
mov
call
or
cmpb
jle
xlat
jl
fisubrs
sub
mov
icebp
cmc
or
icebp
jno
mov
sub
mov
jo
cmp
xchg
popf
sub
imul
sbb
or
outsl
insl
dec
sub
enter
fwait
jns
cmpsb
decb
pushf
stos
negl
je
cltd
rorl
cld
jp
inc
sub
test
pop
push
rcrl
mov
pop
jnp
int
push
mov
inc
inc
mov
cmp
dec
out
and
mov
adc
adc
repnz
push
cwtl
andl
mov
mov
cmp
cmp
out
pop
hlt
sarb
push
test
xchg
mov
fiadds
test
sbb
jmp
daa
adc
push
out
das
shlb
jecxz
scas
bound
pop
hlt
cmp
popf
lods
jg
int3
mov
lcall
int3
mov
push
mov
mov
xchg
orl
leave
sti
dec
add
or
cwtl
adc
cmpsb
sub
lahf
cli
fcmovbe
lock
out
stos
inc
scas
rcll
xor
xchg
jo
mov
repz
arpl
movsb
mov
inc
lret
je
movsl
jno
daa
fsubrl
mov
repnz
adc
leave
cmp
out
test
js
pushf
insl
jo
jno
or
cmp
add
inc
and
lds
lods
pop
xchg
fildl
xchg
dec
pop
sahf
sbb
mov
mov
mov
out
xchg
pop
pop
imulb
and
mov
dec
in
xchg
inc
mov
shrl
pop
jp
subb
fidivs
stos
je
jp
jle
mov
mov
push
sbb
sbb
or
leave
mov
dec
push
pusha
in
enter
add
cmp
test
stos
es
repz
mov
enter
and
outsl
add
int3
jnp
mov
aaa
jnp
out
xchg
pop
or
sti
and
call
cmp
jge
hlt
xor
ljmp
push
push
pop
or
sahf
dec
lcall
and
pop
loopne
and
jne
out
jno
loop
nop
and
jae
mov
jno
ja
sbb
arpl
push
aas
rclb
sub
lret
sub
mov
enter
in
mov
xor
adc
out
lds
testb
mov
cli
xchg
sbb
ss
jp
push
mov
jg
clc
je
cmc
mov
xchg
push
leave
pop
cmp
movsl
push
add
mov
jb
icebp
pop
mov
xchg
cld
xor
jge
inc
jmp
push
xor
andb
sub
sbb
add
push
sbb
mov
pushl
inc
jae
leave
push
dec
insl
push
popa
mov
lds
cmp
adc
aad
sub
sahf
je
sub
addr16
jb
xchg
jnp
lods
arpl
bound
fimuls
sub
test
das
mov
dec
mov
push
dec
pop
andl
fsubrs
out
iret
adc
xchg
mov
inc
inc
test
aas
clc
cwtl
cld
in
dec
jl
pop
pushf
bound
push
addr16
in
pop
mov
jp
out
cmpsb
push
fiaddl
pusha
adc
test
lods
push
or
leave
ja
test
fwait
test
jl
movsl
out
push
xor
faddl
leave
cmp
fldcw
fadds
outsb
xlat
xchg
push
std
jo
mov
ficoms
xchg
adc
mov
js
aad
les
incb
xor
mov
inc
ja
or
call
cmc
xlat
repnz
mov
xor
imul
in
and
insl
les
push
inc
fcoms
push
pusha
jmp
rolb
xcrypt-ofb
cmpsl
ljmp
lcall
inc
addr16
mov
sbb
push
adc
or
fcmove
bound
out
sahf
xor
xchg
repz
loope
xchg
pushl
mov
call
out
es
std
enter
mov
dec
fbld
mov
in
pop
jmp
and
mov
fidivrs
add
and
rorb
push
push
pop
lock
loope
mov
je
loope
nop
cs
lahf
xchg
fnstsw
add
nop
or
test
or
xchg
jge
xor
pop
pop
mov
inc
mov
adc
aaa
push
jmp
and
mov
mov
dec
decb
mov
es
in
test
divl
sub
arpl
ljmp
cltd
inc
divb
aaa
negl
arpl
cmp
mov
rcrl
rol
sub
cwtl
pop
loopne
sbb
mov
aaa
cmp
dec
loopne
xor
in
movsb
and
outsl
int3
push
addr16
xor
pusha
and
push
test
sbb
sub
lods
adc
sbb
mov
fimuls
call
dec
cmp
add
xchg
iret
add
lret
jae
mov
lods
mov
cvtps2pi
pushf
out
add
pop
xor
push
or
xchg
movsb
mov
insb
in
pop
push
sub
jp
cmpb
mov
pop
adcb
mov
xchg
mov
sub
mov
fnstsw
sbb
add
fcoml
xchg
pop
cltd
mov
shld
push
xchg
bound
or
mov
mov
orb
push
cmp
adc
insb
cmp
jns
inc
dec
insb
cmpsb
je
stc
test
sarb
stos
aaa
ja
in
push
pop
pop
mov
jae
sbb
jecxz
jne
nop
adc
into
lret
call
sbb
lret
or
and
xorl
sub
les
mov
out
repz
hlt
mov
inc
sub
int
icebp
push
inc
cmp
pusha
insl
adc
icebp
test
jmp
add
outsl
pop
sub
mov
adc
or
lods
inc
movsb
mov
add
cmp
test
stos
sub
out
inc
push
in
and
test
imul
mov
push
jo
pop
push
clc
mov
and
ret
fwait
aas
ret
je
je
xor
lret
pop
ret
mov
push
int3
pop
add
mov
into
lret
fwait
and
test
movntq
out
fidivs
movsb
or
lahf
xchg
pop
clts
cmc
push
outsl
push
mov
or
mov
mov
adcb
xor
in
mov
dec
xor
and
push
js
out
js
push
or
pop
dec
or
inc
or
push
dec
test
add
mov
fistl
add
adc
stos
sub
stos
push
adc
jle
pop
aad
mov
dec
jnp
push
faddl
push
rcr
in
push
sbb
mov
fidivrs
bound
sarb
jp
movzbl
test
scas
cmp
cmp
sub
mov
and
mov
pop
push
lahf
dec
addb
aam
hlt
ficoml
clc
cltd
add
mov
test
add
dec
mov
shlb
int
addr16
test
mov
pop
sub
fsubrl
test
outsl
lcall
push
gs
adc
aaa
imul
jge
push
sbb
sti
pop
fsubrl
jl
xchg
cmp
and
out
rcll
dec
and
movsb
cld
das
idivl
push
xor
add
add
mov
sbb
dec
out
call
pop
loop
sub
inc
add
mov
leave
iret
aam
adc
nop
push
dec
add
xor
es
add
ret
jp
aaa
int
inc
outsl
push
std
lahf
inc
jae
jns
pusha
jp
mov
mov
pusha
mov
mov
push
adcl
dec
xchg
or
movntq
xor
or
adc
lock
sbb
arpl
adc
int3
nop
dec
imul
sbb
cmpsb
inc
or
xchg
sti
call
jge
outsl
cmc
adc
adc
sub
jmp
mov
mov
sub
push
add
inc
out
dec
adcb
fildl
pop
into
inc
jae
test
scas
xorl
std
sbb
jns
xchg
jecxz
into
outsl
je
fmull
mov
and
cmp
lret
mov
cs
test
pop
mov
pop
and
mov
stos
std
std
std
rorb
sub
fidivs
pusha
movsb
les
icebp
adc
sub
std
scas
mov
or
inc
push
pop
or
xchg
testl
mov
lock
or
xor
ret
hlt
lret
and
pop
in
lcall
cli
sbb
mov
jae
out
jbe
imul
ss
push
mov
sub
and
addb
imul
adc
daa
jne
xchg
lds
inc
jb
jmp
fistl
cld
cmp
lahf
jmp
out
ja
sub
arpl
ljmp
mov
das
dec
mov
xor
cltd
icebp
sub
jbe
dec
jo
popf
outsb
ret
xor
mov
shl
lods
movl
outsl
pop
inc
mov
ljmp
xchg
insl
add
fwait
or
pop
dec
push
loop
dec
lret
lock
xchg
out
testl
cld
leave
je
divb
jns
fwait
mov
pop
test
test
ficoml
jno
xchg
cltd
pop
and
imul
je
mov
nop
addr16
mov
lods
gs
sar
cmp
lea
mov
jge
test
cmpsl
imul
stos
mov
mov
sub
daa
add
lret
subl
sbb
popa
cmp
sahf
shrb
mov
dec
cmp
and
push
xor
ret
mov
jge
mov
test
pop
insb
cs
es
pop
jecxz
jl
pop
mov
or
and
and
in
jp
sub
or
ret
jl
loopne
jns
ljmp
repnz
inc
pop
repnz
rorl
jae
dec
insl
stc
jp
mov
inc
jle
jmp
push
mov
inc
jns
ret
mov
dec
std
testb
cltd
cmp
in
xchg
js
repnz
pop
adc
jns
jb
inc
xor
fsubl
pop
hlt
jns
dec
fwait
jae
inc
mov
and
bound
jne
xchg
jbe
jg
cmp
aad
mov
jne
mov
aam
std
push
arpl
clc
push
popa
call
cld
cmp
fnstenv
ret
cwtl
leave
xchg
fidivl
int
mov
leave
hlt
lds
nop
dec
sbb
xor
add
lea
leave
retw
push
xchg
ds
subb
xchg
inc
jmp
inc
ss
push
mov
lret
mov
or
sub
jb
inc
push
stc
pop
enter
and
xchg
popf
dec
push
pop
in
jp
test
incl
add
or
ljmp
enter
or
inc
loop
mov
adc
lahf
sbb
addr16
sbb
mov
mov
adc
add
mov
in
lods
pop
mov
adcb
pop
cs
pop
inc
or
xorb
jp
mov
je
push
pop
mov
dec
lods
add
jne
jge
xchg
adc
repz
mov
adc
push
xor
fcmove
add
lret
call
addr16
pop
mov
data16
dec
cmp
std
lds
mov
cmpsb
cmp
fwait
bound
cld
inc
jmp
ficompl
adc
mov
jae
enter
in
push
push
jmp
imul
adc
addr16
loopne
sub
or
outsl
leave
lock
lds
inc
mov
cli
mov
or
dec
into
movsb
push
iret
and
shl
popa
dec
cs
std
pop
jg
xchg
outsl
mov
mov
test
fdivl
mov
addr16
fbstp
mov
jge
aaa
fisubl
mov
push
sub
jp
mov
jmp
cmp
cmp
add
mov
sub
sbb
push
jnp,pt
adc
mov
mov
rcll
popl
sub
jnp
cmp
lcall
out
cmp
add
das
std
or
sbb
jg
leave
gs
pop
inc
stos
les
jg
inc
fistl
fisttpl
inc
and
fcompl
mov
xchg
sbb
cmpsl
or
lret
push
jle
inc
adcl
popa
clc
push
mov
js
out
push
repnz
cmc
cmpl
sbb
bound
push
arpl
fdivl
dec
jnp
lods
jns
mov
sub
push
add
mov
je
cmpsb
mov
scas
mov
pop
sub
testb
rcr
add
loope
inc
sub
or
leave
jne
shl
pop
mov
mov
repz
in
cmp
roll
loopne
cli
mov
aad
xchg
shll
add
cmp
mov
andb
or
adcb
sbb
or
add
roll
add
fucomp
int
jnp
fmuls
pop
sarl
mov
push
pop
mov
push
jge
jmp
jp
enter
and
nop
jnp
fwait
xchg
fs
test
shlb
movsb
mov
jge
mov
icebp
push
dec
xchg
iret
or
mov
cmc
sbb
mov
jbe
scas
inc
cmc
pop
lret
mov
popa
mov
mov
lods
sbb
pop
test
xchg
out
jno
jno
sub
inc
mov
call
mov
rolb
jbe
add
xchg
loopne
pop
dec
in
pop
mov
mov
loop
andl
rcr
pop
inc
lods
js
push
divb
leave
lahf
sbb
and
fucomip
and
out
push
mov
jb
mov
pop
stc
loop
std
jge
ss
cli
add
outsl
cmp
lret
bound
inc
in
lea
cli
std
inc
xchg
cmpsb
dec
test
mov
inc
adc
and
add
into
inc
fbld
scas
cmp
testb
test
faddl
adc
dec
loop
jno
xlat
push
pop
cmp
mov
xchg
jmp
jle
jmp
fldt
stc
push
popf
and
call
ret
lods
popf
lret
dec
mov
inc
aaa
pop
xor
cli
mov
xchg
mov
mov
xor
adc
jg
mov
pop
pop
and
andb
out
lods
xchg
mov
xor
xlat
lahf
push
mov
adc
sbbb
inc
push
cmc
fwait
rcrl
sub
je
fdivl
shlb
in
cmp
jecxz
dec
insl
sbb
test
sbb
jg
out
xor
scas
xchg
iret
or
scas
xchg
test
ss
out
pop
cmp
push
pop
decl
cs
pop
pushf
mov
loop
push
dec
icebp
loopne
dec
xchg
lods
jne
mov
or
sub
fwait
lret
push
je
or
and
sbb
adc
test
dec
iret
add
cmpsl
or
movsb
mov
pop
jno
lret
mov
dec
insl
mov
in
mov
aam
sub
or
sbb
xor
nop
inc
decl
jg
neg
popf
inc
mov
xor
mov
cltd
or
mov
aas
test
pushf
push
xchg
enter
add
lret
dec
into
fst
or
jns
int3
sub
xchg
xchg
ja
mov
add
test
dec
jp
and
pop
mov
aaa
sub
inc
fcmovb
cli
xor
cmc
jnp
cmc
push
cltd
stos
outsl
inc
test
and
repz
adc
inc
mov
cmp
pusha
out
out
push
mov
into
das
push
inc
aad
ds
add
inc
stos
cld
stc
push
jae
sbb
dec
outsb
test
xchg
dec
pop
jp
add
insl
fstl
sbb
nop
call
lret
sub
xor
les
jl
cmc
push
xchg
subl
out
sub
and
mov
loop
dec
add
in
sbb
xchg
mov
dec
mov
shrl
adc
stos
gs
xor
mov
pop
gs
int3
lret
pop
call
xchg
push
pop
dec
xor
fbld
jl
addb
mov
fisttpll
test
mov
pop
sub
out
out
daa
bound
mov
int
inc
mov
inc
adc
lock
jge
and
in
and
inc
loop
dec
imul
test
cltd
push
aad
inc
outsl
addr16
push
xor
ss
xchg
cmp
cmp
sbb
mov
mov
mov
aaa
xor
fildll
iret
mov
rcrl
insb
dec
sbbb
int
out
roll
inc
stos
ret
mov
jnp
aam
stc
inc
sbb
cmp
jmp
jne
xchg
mov
push
call
ss
jns
sub
jnp
jnp
gs
add
gs
shll
inc
daa
add
inc
cli
jb
sub
or
adc
adc
xchg
out
dec
in
adc
aad
dec
cmpsl
aaa
xlat
aad
imul
pop
or
hlt
add
dec
xor
mov
int
lods
pushl
sti
andl
cmc
add
cmp
sub
and
sub
xchg
pop
sub
mov
inc
xor
stos
testb
out
fnstenv
je
rol
popf
xchg
movsl
mov
popa
in
test
push
pop
js
cmp
xor
int
inc
add
int3
fnstsw
mov
mov
inc
fidivrs
jp
and
sbb
dec
jns
into
adc
hlt
cmp
loopne
or
fsubrs
es
ffreep
jmp
imul
ret
cmpsl
mov
jns
ds
xorb
ja
lock
ljmp
cmp
mov
push
andb
inc
das
arpl
imul
in
pop
roll
mov
lds
test
into
rorb
jmp
nop
mov
sbb
idivl
inc
je
roll
sbb
idiv
andb
shrb
cltd
adc
sbb
push
cmpsb
insl
rcr
sbb
xor
pusha
outsl
je
data16
sbb
cmp
mov
out
shr
cmp
mov
sub
out
leave
add
shrl
pop
fsubrs
adc
push
repz
jg
jmp
out
xchg
ret
add
test
xchg
test
sbb
inc
in
lock
outsb
imul
pop
xchg
inc
rorl
out
jae
fs
lods
and
into
dec
ret
ficompl
dec
cmp
dec
sti
xor
scas
lcallw
cmp
int
cmp
scas
sbb
push
out
mov
push
scas
dec
jp
cli
mov
call
mov
xor
push
insl
enter
mov
or
lock
sub
test
sub
stc
imul
ja
add
decb
jmp
adc
movsl
dec
mov
test
movsl
pop
mov
and
inc
or
movups
push
lods
xchg
mov
jecxz
mov
inc
dec
jl
je
mov
test
loope
imull
push
movb
pop
dec
mov
jle
jns
and
adc
ds
fbstp
arpl
xor
mov
pop
jnp
in
inc
xchg
jno
ds
mov
sub
ret
or
mov
sub
xor
and
pushf
in
jbe
ret
xchg
cmovne
ljmp
insl
cmpsb
insb
jge
add
sbb
mov
andl
or
rorl
test
jmp
popa
addr16
shr
add
rorl
sti
inc
mov
and
mov
xchg
lock
cmpb
loopne
xor
adc
sub
pop
xchg
scas
rcr
sub
add
push
add
or
data16
jmp
cmp
int3
stc
imul
ja
cmpsl
pusha
cwtl
adc
in
ret
fstpl
or
and
sbb
stos
aaa
dec
sub
xchg
lods
dec
imul
dec
leave
dec
repz
inc
jle
clc
xor
push
jp
mov
das
jns
dec
sbb
xor
insb
xor
adc
inc
xlat
xor
cmp
adc
sbb
mov
aad
jp
sbb
addl
xchg
repz
inc
mov
or
rep
inc
icebp
mov
push
mov
int
jp
loop
aaa
xor
pushf
std
pop
cmp
pop
cmp
icebp
imul
xor
mov
clc
shrb
fisubrs
ss
inc
mov
lret
and
inc
and
xchg
jp
cmp
repz
iret
push
scas
enter
sbb
sbb
pop
outsb
movsb
sbb
sbb
and
pop
sbb
lods
std
repnz
insb
xor
es
test
in
xchg
out
stos
pop
adc
jecxz
dec
ss
lret
cmp
int3
int3
leave
mov
add
insl
jo
sub
inc
xacquire
shlb
mov
stos
or
clc
push
xchg
or
pusha
movsb
int
xor
dec
jbe
loop
aad
mov
repnz
test
lahf
filds
in
rorb
scas
in
scas
sti
popa
or
pop
roll
movsl
mov
mov
sbb
fidivs
mov
lods
adc
jbe
jmp
cmpl
dec
xchg
xor
and
mov
sbb
or
into
sbb
mov
lret
decl
mov
out
and
sbb
lret
andl
add
mov
insb
mov
testb
mov
out
cmp
test
xchg
jb
lret
or
push
addl
xchg
xor
mov
test
xor
xchg
mov
nop
sbbl
cmp
adc
in
add
sahf
push
jle
aam
cmp
xchg
cli
pop
shrb
lock
inc
std
mov
test
hlt
xlat
test
cmp
das
sub
ss
ficoml
pop
rcr
pop
sbb
and
cmpsb
stc
aad
xchg
jbe
jnp
jbe
cmovg
add
inc
aad
xchg
pusha
test
xchg
cltd
test
inc
dec
loop
and
mov
mov
ficoml
jl
arpl
enter
and
jp
mov
inc
js
iret
sub
and
push
popl
imul
inc
cmp
outsl
mov
mov
pop
cmp
lret
xchg
test
sub
aaa
jmp
add
das
mov
fstpl
jp
fwait
sarb
and
mov
jmp
xchg
mov
cmp
add
out
leave
in
or
push
inc
jmp
inc
fiadds
sbb
sub
inc
rcrb
ss
jecxz
push
dec
fcomps
aas
fimuls
lret
mov
push
stos
sbb
sbb
out
adc
mov
push
xchg
cmp
cltd
sub
ret
mov
pop
dec
adc
mov
fwait
cmp
sbb
lcall
shrw
test
add
jb
lock
ficomps
xor
push
jno
inc
into
sbb
mov
lret
mov
enter
in
and
lret
bound
mov
shll
imul
push
ja
mov
jecxz
and
out
int
push
push
pushf
dec
pop
or
je
jecxz
push
leave
xchg
dec
jo
mov
outsl
and
cmp
bound
dec
movb
sarb
mov
add
test
push
lds
movsl
mov
sbb
pop
mov
sahf
jnp
stos
ficoml
lahf
out
pop
or
lret
sar
icebp
add
int3
mov
rol
ret
int3
outsb
scas
dec
std
push
adc
mov
adcb
jle
in
fs
or
pop
mov
mov
movsb
movsb
in
sub
movsl
test
push
stc
popa
cmpsb
mov
pop
daa
fwait
imulb
mov
ss
push
in
push
push
mov
push
ja
adc
pop
into
pop
mov
test
int3
mov
push
roll
jmp
sbb
imul
sbb
dec
push
adc
outsb
outsl
sti
xor
orl
nop
aas
and
pop
adcl
lcall
add
adcb
or
lret
adc
adc
idivb
fs
rcrl
add
and
xchg
iret
add
mov
and
stos
mov
jle
scas
subl
or
outsl
mov
ret
push
push
push
mov
xor
mov
mov
mov
mov
mov
scas
iret
xor
sub
adc
jae
push
test
xchg
mov
sub
push
add
inc
push
lret
sub
lods
dec
xor
rclb
outsb
lea
insl
sbb
mov
jg
sahf
xor
cltd
adc
jnp
mov
mov
mov
fdivl
push
incb
in
jp
lea
idivl
or
inc
scas
out
or
or
inc
jns
les
pusha
push
inc
addb
std
imul
fisubl
fbstp
cmp
lcall
mov
mov
dec
lret
cs
mov
fnsave
adc
js
jne
xchg
cs
or
aam
lret
imul
xor
adc
gs
cltd
or
or
in
iret
xor
add
idivb
and
cli
ror
cmc
ss
outsl
out
push
add
hlt
mov
cmp
jmp
jg
cwtl
and
mov
xchg
xchg
xchg
sub
and
push
cltd
mov
ffreep
inc
ja
outsl
test
call
add
mov
xchg
out
jl
fsubrs
mov
pop
push
lea
push
pop
aas
daa
ds
cld
inc
daa
stc
add
push
adc
inc
add
xchg
jl
das
rcrb
push
xchg
pushl
movsb
xchg
repnz
adc
cmc
dec
sbb
test
add
push
add
sub
cmp
outsb
mov
pop
push
and
sti
and
add
xchg
nop
imul
movaps
pop
insb
in
in
test
aaa
stc
cmp
adc
in
mov
xor
sbb
outsl
pop
pop
cs
sub
xor
fistps
sbb
xchg
mov
inc
pop
push
outsb
pop
insb
in
in
dec
popf
lcall
addb
fidivl
mov
lret
sbb
and
mov
test
loopne
inc
hlt
arpl
call
fnstenv
out
mov
ss
fwait
mov
mov
and
mov
ja
outsb
jmp
stos
jmp
push
lcall
lds
mov
out
or
add
add
fs
or
mov
push
xor
and
mov
mov
pop
cmpsb
push
sbb
out
and
into
test
mov
mov
xchg
repnz
dec
jno
cmp
mov
pop
push
xchg
mov
jg
popf
pushf
push
dec
les
sarb
xchg
jle
clc
push
and
mov
lods
das
mov
cmp
stc
inc
ljmp
ds
mov
cmp
lahf
dec
push
sbb
jo
or
in
adc
dec
cs
pop
sbb
jmp
jnp
out
rolb
jp
mov
mov
lock
xor
ss
inc
outsb
in
push
cmp
or
sbb
fildll
rcrl
inc
outsl
jecxz
inc
notl
push
xorl
sub
adc
popf
repz
in
insb
and
mov
mov
dec
pop
notb
idivb
jl
cvtps2pi
mov
xchg
pop
pop
out
std
cli
cmpsb
insb
iret
xor
xlat
test
bnd
daa
jnp
frstor
push
add
rcll
pop
lahf
insb
adc
cmc
int
sub
sub
mov
mov
push
frstor
fninit
sbb
in
idivl
jns
or
loopne
jmp
jg
mov
jl
jns
mov
mov
fisttps
test
and
pop
dec
int3
loop
popf
jl
ss
test
dec
icebp
inc
sub
fs
xchg
cli
test
pop
outsb
dec
xor
imul
adc
push
xor
out
xlat
dec
push
test
insb
into
fimull
imul
and
push
filds
gs
loop
mov
fsubrs
out
shll
stos
dec
loope
movsb
outsb
shll
popf
sub
mov
sbb
mov
xchg
mov
and
jbe
repz
ss
pop
dec
adc
add
das
mov
add
imul
fnstsw
xchg
pop
iret
inc
cmpsl
adc
cmpsl
and
jmp
shrl
fadds
dec
adc
sub
sti
xchg
cmp
xchg
pop
sbb
push
adc
repnz
push
or
clc
xchg
pop
ror
insb
repnz
mov
jo
xor
ss
or
pusha
xchg
inc
sbb
mov
ja
adc
mov
test
rclb
sub
lcall
jnp
xchg
orb
cmp
bound
sbb
je
push
push
sahf
sub
mov
and
repz
loop
xchg
add
push
ss
test
push
repnz
daa
mov
inc
cmpl
ljmp
adc
push
test
sbb
add
loop
xchg
pop
xchg
in
test
inc
mov
or
mov
sbb
ds
cld
inc
mov
fistl
xlat
les
adc
mov
push
out
in
cmp
fists
cmp
jno
mov
lods
fwait
mov
out
mov
mov
lret
cmpsb
iret
inc
dec
push
out
loopne
push
ret
xchg
sbb
mov
in
movsb
leave
mov
push
mov
dec
cmc
ss
jl
stc
jle
and
pusha
andl
jle
jg
stc
mov
aaa
mov
test
cmp
subb
cmpsb
enter
fmulp
jbe
cmp
ret
adc
jo
jo
outsb
fisttps
test
sbb
sahf
call
lods
testb
mov
jmp
mov
nop
xchg
mov
scas
idivl
mov
mov
fidivrs
pop
mov
out
pop
push
daa
inc
jle
icebp
stos
loope
out
jno
pop
cmp
adc
pop
add
xchg
cmp
dec
test
mov
mov
cwtl
movsb
push
fwait
dec
sbb
xchg
inc
out
xor
fsubl
jle
icebp
mov
pop
lret
cmp
adc
xchg
xlat
out
jge
cmp
ror
leave
mov
and
jl
xor
mov
incb
push
fwait
cmp
xor
jp
add
insb
fildll
and
in
mov
pushl
or
ljmp
and
push
jle
mov
or
inc
and
pop
cmp
out
jp
imul
fimull
cmpsl
in
xchg
sbb
scas
gs
mov
movsb
aad
sbb
jg
sbb
aad
xchg
lret
inc
nop
loope
cltd
out
repnz
dec
xlat
pop
and
jle
adc
mov
and
imul
mov
imul
xchg
cmp
in
mov
mov
lret
das
mov
jmp
outsb
mov
js
inc
sub
dec
int
adc
out
in
cmpsb
test
push
sbb
pop
jb
sbb
in
rcrl
pusha
or
cmc
dec
dec
jae
xchg
pop
int3
mov
test
stos
aam
push
mov
nop
pop
popa
mov
das
fcomi
xor
lret
jb
xchg
push
ja
pop
fsubl
xorb
in
int
or
xchg
sbb
cmpsl
cmpsb
movsl
jl
sahf
inc
icebp
lcall
lcall
pop
sbb
dec
stos
adcb
pop
cwtl
pop
dec
pop
rorl
adc
jl
loopne
xchg
int
fildll
pop
mov
stos
clc
cmp
repnz
in
adc
push
lahf
aas
mov
aas
movsl
mov
mov
insb
stos
dec
jg
cmc
aaa
xlat
or
pop
inc
stos
jle
cwtl
insb
inc
bndstx
sbbl
dec
dec
cmp
stos
mov
sub
mov
sbb
aad
cmp
ret
cmpsb
icebp
push
cmp
fsubl
cmp
dec
jne
int3
pop
imul
add
fdivrs
mov
idivb
adc
cmp
mov
daa
enter
or
movsl
mov
xchg
xlat
xchg
add
les
aas
loope
insb
xor
add
les
inc
insl
pusha
xchg
mov
pusha
stos
fists
push
cmp
sbb
test
sub
cmpsl
add
in
pop
xchg
add
xor
jbe
jp
cmc
inc
data16
pusha
jle
arpl
cltd
lods
add
mov
arpl
or
cmp
movsl
push
insl
adc
es
lock
mov
loope
add
xorb
xchg
pop
xchg
pop
adc
bswap
scas
fbstp
mov
setle
or
andl
pop
mov
push
jae
cmovbe
ret
jo
dec
dec
sbb
dec
pop
or
out
sub
ljmp
jmp
rclb
js
in
and
cmp
das
mov
les
out
sti
push
sahf
in
dec
cmp
pop
cmp
mov
loopne
push
push
clc
clc
sbb
fidivl
cld
or
loopne
mov
mull
jl
aas
and
lret
fucomi
mov
mov
cmp
aaa
movsl
mov
int
push
int3
bound
jp
mov
iret
mov
cs
mov
out
shll
js
xchg
int3
xchg
jg
popa
scas
div
imul
sti
les
dec
cld
dec
in
sub
frstor
xchg
popf
rcrl
xchg
lret
push
mov
imul
inc
stos
push
mov
adc
mov
sub
jp
mov
inc
mov
mov
pop
lods
mov
pop
sbb
xchg
arpl
shlb
and
push
cmp
sbb
mov
stc
pop
mov
pop
nop
les
fdivrs
push
cmp
int3
ljmp
rol
mov
pop
dec
xchg
inc
imul
mov
leave
nopl
adc
add
rolb
fs
bts
lcall
aas
jb
cmp
es
inc
push
add
icebp
sbb
xchg
mov
mov
loope
or
mov
xchg
cmp
fstp
xchg
mov
cld
in
imul
leave
ljmp
cmpl
frstor
cmp
icebp
inc
xchg
out
jecxz
cmp
mov
xchg
das
mov
test
push
icebp
xchg
mov
adc
aam
pop
and
mov
sub
in
cmp
pop
das
movsl
adcb
dec
data16
iret
jae
in
add
xchg
mov
rcr
rclb
jecxz
xor
mov
lock
mov
lds
xchg
adc
push
cmpb
dec
fwait
add
and
pop
xchg
cmp
fsts
lret
sbb
sbb
cmp
fs
cmp
push
lcall
rcrb
pushf
inc
mov
out
adcl
or
andb
xor
xlat
std
inc
pop
in
daa
sub
xchg
xchg
cmp
in
aas
push
inc
xchg
cli
xor
mov
lcall
xlat
fwait
and
out
mov
cmpsb
loop
ds
les
mov
movsl
addr16
dec
fidivrl
push
cmp
cmc
mov
cli
jbe
pop
jns
ds
sub
movaps
xlat
jmp
push
lret
icebp
out
inc
movsl
call
aaa
loopne
mov
pop
inc
orb
call
cmpsb
testb
push
fs
test
xor
pop
fs
int
sub
pop
aas
shll
mov
hlt
fwait
test
mov
out
cmp
add
pop
sub
cwtl
stos
add
shll
loopne
cmc
out
fldenv
out
out
imul
xor
sbb
popa
add
lcall
stos
adc
rcll
and
mov
pop
push
sub
data16
push
int3
pop
loopne
mov
stos
insb
sahf
sti
fwait
test
leave
fisubl
shrb
mov
jbe
sub
orl
fs
cmpsb
mov
in
gs
pop
or
les
mov
lret
outsb
mov
rolb
and
loope
mov
aaa
inc
or
cmpsb
push
testb
aas
xchg
scas
lahf
mov
subb
cmp
bound
jle
xchg
inc
test
int3
out
cmpsl
add
sub
mov
sbb
outsl
test
adcb
stos
repnz
jmp
cmp
mov
xlat
push
push
fwait
dec
ret
addr16
dec
loope
and
xchg
sub
mov
cs
cltd
mov
mov
repz
jmp
fildl
fldcw
insb
in
aam
xchg
pop
mov
xchg
addr16
rcrl
and
sbb
inc
push
or
out
mov
iret
cli
cltd
scas
push
mov
hlt
mov
in
push
repz
xchg
push
jecxz
push
test
aam
mov
sbb
movsb
adc
arpl
jge
daa
or
arpl
push
push
jbe
mov
and
sbb
lret
pop
mov
iret
push
inc
mov
loop
js
out
push
and
cmp
mov
xchg
negl
outsl
push
adc
xchg
out
test
lods
js
in
xchg
inc
cmp
insb
mov
push
xlat
test
sub
mov
lret
es
test
xchg
sbb
adc
pop
mov
js
cmp
xchg
js
fdivl
cmp
leave
cmpsb
adc
mov
test
push
dec
dec
stos
cmp
scas
imul
shlb
dec
popf
into
mov
cltd
fs
jb
lret
cltd
movsb
stc
neg
pushf
sbb
jae
xchg
jp
lret
push
movsb
mov
mov
xchg
sahf
call
inc
sub
pop
or
lcall
movsb
inc
push
cmp
popa
mov
sbb
aam
and
stc
mov
mov
repnz
bnd
lea
sub
push
int3
jbe
xchg
jae
movsb
add
sbb
pushf
xchg
pop
push
jns
aaa
jno
add
cmp
xor
inc
ficoml
cld
nop
xlat
adc
shr
mov
stc
das
adc
ss
and
adc
aad
jecxz
out
movsb
icebp
mov
in
div
lods
pop
mov
add
sub
add
xchg
mov
jns
mov
aad
lcall
mov
rcrb
mov
in
push
movsl
fbstp
or
stos
lock
in
loopne
cmp
mov
mov
dec
scas
xchg
loope
pop
xchg
mov
aad
ja
shlb
leave
test
hlt
mov
out
stos
mulb
jl
inc
dec
and
sbb
cmp
xor
pop
mov
in
repz
xchg
xor
cmpsb
or
cmpps
iret
xchg
xchg
aam
and
mov
hlt
mov
sahf
jnp
jp
xchg
es
push
inc
xlat
jmp
xor
mov
mov
mov
fwait
jge
es
adc
and
lods
cmp
leave
sbb
out
and
sub
pop
xor
and
sub
loop
clc
mov
mov
insb
sbb
lret
stos
push
pop
pop
dec
sbb
fsubrl
insb
fnstcw
pop
xor
push
push
mov
out
icebp
add
mov
mov
jo
test
pop
repz
rcrb
jb
mov
sub
and
faddp
jmp
and
lods
lock
mov
in
and
xchg
jle
jo
fsubr
dec
loope
iret
popa
jno
mov
or
rcrb
xor
sub
scas
jno
push
inc
or
mov
adc
cmc
int3
movsb
shl
xor
dec
cmp
mov
xor
mov
jae
mov
repz
sbb
xchg
and
mov
mov
das
fistl
in
pop
shrl
js
sub
xchg
push
add
out
mov
and
xchg
fldenv
roll
cld
xor
adc
mov
add
aad
bound
jl
out
in
leave
add
shrb
push
cs
add
mov
mov
ljmp
sbb
fs
pop
cmp
cwtl
xchg
cmp
repz
mov
xchg
dec
mov
mov
dec
add
mov
pop
push
dec
and
gs
mov
cmc
dec
add
outsl
cmp
gs
out
dec
and
xor
enter
mov
pusha
pop
dec
les
cmpsl
test
cmc
jle
cmpb
mov
sbb
sub
gs
dec
mov
sub
pop
pop
xchg
adc
mov
sub
leave
popf
add
fisttpll
addr16
adc
gs
sti
jnp
pusha
leave
mov
adc
jae
cmpsl
inc
fists
js
shll
push
lods
jne
aaa
mov
movsb
into
mov
jno
cmp
popf
push
jnp
in
mov
add
jmp
inc
xchg
dec
xchg
and
or
pop
cmpl
cmp
repnz
add
sub
push
dec
push
repz
xchg
in
jge
add
ret
cmpsb
cmpsb
mov
push
stc
jle
jo
int3
push
fisttpll
in
lcall
dec
fs
xchg
jmp
pop
shlb
sub
add
iret
addl
ds
popw
scas
cld
rorl
inc
xchg
xchg
or
pop
cmp
loope
sub
or
roll
in
test
ljmp
rorb
stos
jge
lea
shr
push
hlt
mov
pop
sub
mov
fxch
in
jo
jmp
cmp
movsl
int3
adc
sbb
aaa
fwait
mov
xor
fisubl
jge
xchg
fstpl
sub
push
les
and
inc
adc
stc
movsl
ljmp
sbb
push
cltd
stos
fs
loopne
paddusb
jge
aad
mov
imul
inc
into
adc
sahf
mov
mov
popa
in
enter
pop
call
mov
mov
or
in
cmp
in
push
jle
pusha
dec
repz
inc
or
fidivs
mov
mov
andb
and
add
inc
cmc
arpl
inc
push
in
xlat
dec
lret
dec
pop
mov
push
dec
and
add
sbb
sarl
lock
dec
and
and
xlat
cltd
jmp
xlat
mov
mov
jnp
mov
dec
adc
clc
jp
clc
mov
xchg
test
inc
andb
outsb
in
mov
in
shlb
pop
xor
mov
fwait
int3
test
xor
into
ss
dec
out
xchg
les
fisttpl
dec
rcr
out
mov
xor
adc
inc
mov
repnz
inc
je
je
mov
cmp
mov
mov
lea
mov
outsl
fildll
pushl
xlat
jbe
shll
or
fstp
dec
push
fnstsw
mov
push
mov
ljmp
dec
sbb
shr
ficoml
pop
cmpb
inc
imul
push
pop
add
dec
int3
sbb
repnz
int
mov
negl
jbe
sbb
dec
ljmp
push
mov
lahf
cld
clc
adc
je
adc
dec
xchg
es
xchg
shrl
scas
mov
mov
orb
xchg
outsl
pop
jae
push
stc
jg
in
push
jle
popa
push
xor
adc
xor
aam
cmp
les
sub
pop
and
nop
lods
dec
mov
and
dec
sti
sbb
push
adc
xchg
jmp
idivb
outsb
dec
mov
mov
push
ror
or
mov
enter
mov
jecxz
pop
andl
and
adc
rcrb
adc
sbb
mov
mov
mov
in
out
hlt
cld
subb
insb
pop
sahf
or
filds
sub
pop
test
cmp
inc
outsl
sub
cmpsl
and
push
pop
dec
insb
sbb
fists
dec
fldenv
sub
jg
jmp
int3
int
dec
aaa
add
in
lret
nop
inc
jae
xchg
inc
mov
jae
mov
mov
push
or
sbb
pop
mov
stos
jge
mov
pop
and
jle
je
imul
pop
pop
cmp
or
mov
fadd
dec
loope
push
shll
mov
iret
add
test
pushf
xor
xchg
pusha
adc
mov
out
add
mov
outsl
pushl
add
pop
dec
push
in
xor
es
ret
mov
jo
cwtl
mov
and
fsubl
jl
imul
mov
jnp
mov
shl
in
mov
movsl
jb
mov
mov
pop
lds
hlt
inc
outsb
push
add
stos
clc
icebp
mov
shll
xorl
mulb
sub
cmpsl
test
adc
xor
mov
imul
mov
pop
lret
mull
enter
int
dec
out
jno
mov
jp
leave
addr16
pop
inc
fwait
jmp
and
call
push
popf
imul
and
cld
loopne
cmp
add
fnsave
push
imul
and
in
add
adc
scas
and
fstl
add
lods
xor
sub
sub
js
daa
push
movsb
mov
inc
dec
std
xor
and
ret
jb
push
ljmp
fcmove
xor
scas
and
ret
adc
adcl
xor
leave
adc
cmpsl
xor
xchg
and
pop
inc
jnp
test
stos
subb
pop
or
inc
or
cmpsl
xchg
adcl
mov
xchg
push
fidivs
xor
xchg
xchg
clc
ja
mov
out
sbb
lcall
or
add
stos
jo
out
xor
out
or
cmp
mov
jge
sub
pop
and
jno
jo
ficompl
mov
xor
dec
adc
cli
repz
mov
jp
mov
pop
daa
and
js
movsb
jl
test
shrb
push
dec
inc
adc
inc
mov
lret
loopne
sub
out
mov
pop
push
dec
sti
xor
xor
dec
xchg
xorl
dec
mov
inc
addr16
stos
sbb
add
int3
mov
cmpsb
outsl
lods
loope
mov
mov
cmp
mov
adc
ja
cmc
xorb
test
mov
adc
push
jne
nop
add
mov
push
push
ss
jo
lea
or
dec
sarl
shrl
jno
add
mov
scas
scas
in
mov
push
mov
stc
sub
fwait
xchg
add
insl
lods
into
hlt
movsb
xlat
pop
dec
push
pop
and
cmc
push
mov
push
repnz
out
push
jecxz
and
jp
aaa
jns
cmp
dec
in
mov
gs
sub
push
dec
dec
mov
fstpt
aad
push
mov
sahf
jo
adc
js
xchg
xchg
pop
sub
cmp
jns
xor
and
adc
xchg
out
add
pushw
xchg
xchg
add
and
loopne
in
add
pop
mov
and
and
xor
pop
sahf
cmp
push
add
or
xchg
roll
sbb
xchg
inc
mov
stc
cmpsl
mov
and
call
push
cmc
bound
bound
ds
movsl
out
pop
push
stos
sbb
in
mov
fisubl
inc
fstl
add
jle
call
xchg
and
cmc
pop
jp
int
test
lret
mov
mov
jmp
pop
call
lret
dec
aam
test
ja
xchg
test
mov
pop
imul
dec
in
shlb
xchg
sub
push
subb
sub
inc
mov
cmp
cmp
cs
jns
iret
addb
lea
fcomps
insb
lret
addb
and
fstpl
into
xchg
mov
cmp
dec
das
popf
scas
repz
inc
jb
out
and
push
js
aam
xchg
or
aam
pop
adc
lods
fisubrl
loope
popf
out
push
stos
xor
dec
sbb
inc
js
pop
xlat
xchg
iret
sub
inc
and
popf
jmp
aaa
int
scas
xor
jg
rcrl
jl
mov
add
sub
cmp
pop
push
bound
push
sbb
mov
or
pop
out
dec
sahf
out
in
popf
jmp
add
inc
and
push
fmuls
addb
or
dec
mov
adc
arpl
and
subl
mov
out
pop
lods
cmp
mov
in
jge
or
fcomps
mov
pop
jns
jg
stc
pop
daa
pop
xchg
lods
xor
ljmp
pop
push
and
inc
adc
je
mov
ret
inc
adc
pop
int
adc
std
lcall
mov
cmp
scas
mov
rcl
clc
cmp
sub
push
popf
push
fwait
je
jnp
inc
jo
pop
les
push
sbb
ret
pop
jns
xchg
shll
mov
pop
lods
cld
loope
add
repz
int3
sbb
movsl
xchg
daa
fldenv
xor
in
push
imul
cmp
adc
fistpl
pop
ficoml
jno
pop
lcall
outsb
iret
in
jmp
jp
pop
push
dec
sarl
and
adc
pop
stc
and
adc
fldt
bound
cmp
rclb
sub
test
fldenv
pop
mov
nop/reserved
cld
rcr
in
int3
out
push
shl
daa
jbe
pop
jle
ja
inc
std
je
in
dec
fwait
cmp
mov
mov
xchg
or
adc
inc
sahf
das
jge
xor
out
cmc
adc
or
xchg
loope
negl
push
pop
or
mov
cltd
les
xchg
dec
popf
pop
pushf
stos
ss
enter
in
adc
push
jge
outsl
lea
out
or
dec
lods
pop
scas
add
jnp
xchg
mov
fnstsw
mov
rorb
sbb
push
mov
jmp
dec
frstor
fadds
mov
jno
fstl
mov
shlb
test
jg
scas
sahf
pop
lods
nop
jo
addr16
cmp
repnz
enter
frstor
lcall
inc
bound
xor
stos
jge,pt
rorb
ljmp
push
inc
or
add
xchg
mov
xor
xor
fs
add
pop
xor
inc
adc
mov
dec
jp
clc
lret
mov
dec
aaa
cmp
out
push
repnz
aam
lahf
imul
insb
mov
inc
add
push
leave
leave
or
mov
dec
ljmp
stc
push
xchg
add
pop
jl
push
sbb
xor
sub
or
pop
jge
cmp
je
imul
push
inc
sub
test
sbb
ret
cmp
xchg
lods
stc
lods
xor
xorb
hlt
rcrb
js
test
loope
movsb
mov
mov
push
inc
push
flds
inc
test
inc
mov
mov
dec
fidivrs
ret
jns
idivl
add
jb
sti
sub
lds
mov
fs
jns
adc
jmp
loop
call
pop
cmp
add
lret
and
xchg
movb
jnp
pop
int
xchg
mov
dec
inc
jg
mov
ret
cmpsb
mov
adc
or
jp
cmp
mov
lret
enter
sub
adc
adc
xlat
int3
cwtl
mov
xchg
xlat
push
add
pop
and
xor
pop
faddl
adc
popf
dec
jg
fsubrl
push
inc
mov
imul
sub
mov
xorl
dec
les
push
out
jns
imul
repnz
call
out
push
scas
std
pop
mov
jo
push
push
xchg
xor
loop
lock
mov
add
popl
in
cs
inc
ret
push
scas
and
leave
imul
and
push
push
xchg
pushl
fwait
out
and
push
add
cmp
fcoms
xor
aam
and
add
sub
lret
loopne
imul
bound
popa
and
jge
data16
data16
and
fisubl
hlt
or
outsb
ret
cmp
inc
or
xor
sti
nop
rcll
jmp
mov
mov
pushf
pop
aaa
xchg
ja
add
into
sbb
insb
mov
dec
adc
outsl
xchg
aaa
cmpsl
xor
dec
loop
sbb
sub
in
xchg
xchg
loopne
adc
mov
jne
sbbb
xor
adc
pop
pusha
cmpsl
adc
push
pop
jg
test
cmp
push
mov
mov
ss
inc
lds
xchg
daa
movsl
movsb
out
lcall
sub
popa
stos
pop
loopne
inc
push
lods
pushf
dec
fwait
jns
int
ds
dec
lcall
pusha
mov
fisubs
xor
arpl
push
add
test
push
jne
xorb
mov
add
dec
shll
or
pushf
mov
subl
push
mov
mov
in
ljmp
aad
push
cmp
mov
add
cmp
pop
cltd
les
ret
jg
lock
in
cmp
push
add
mov
push
pop
sti
jmp
xchg
adc
aas
out
mov
movsb
sahf
inc
mov
and
rcrl
inc
push
ja
addl
ret
sarb
aaa
push
subl
lock
stc
dec
mov
sbb
test
and
push
add
mov
adc
jne
iret
push
imul
sub
adc
jle
jnp
loop
test
pop
data16
call
adc
dec
jns
inc
xor
dec
rolb
push
push
cld
fwait
sub
setb
daa
daa
pop
insb
inc
adc
ret
mov
add
in
jns
xchg
add
push
mov
pop
sti
xor
imulb
mov
mov
test
mov
pcmpeqb
test
js
fisttpl
cmp
and
jno
lret
ficompl
fcoms
sahf
out
pop
and
loop
fbstp
pop
lds
dec
cld
or
pusha
cs
fucomi
loop
mov
mov
ds
int3
ret
dec
shlb
jge
ficomps
inc
sbb
jnp
cmp
js
enter
sub
and
aam
mov
shll
mov
sub
cmp
adc
stos
icebp
dec
roll
in
cli
jb
jae
arpl
jmp
push
bound
sbbl
xlat
and
stc
out
pop
icebp
les
mov
fcompl
into
jo
pop
fwait
mov
cmp
mov
das
inc
push
loop
and
addl
inc
outsl
cmc
icebp
into
mov
les
imul
data16
rcrb
jae
call
mov
movsl
movsl
ficompl
lods
shll
push
xchg
push
mov
cmp
sbbb
leave
lret
in
lret
js
dec
xor
xchg
cmpsl
mov
or
jp
cmp
mov
bound
adc
inc
jmp
sti
iret
js
mov
insl
xor
push
adc
xchg
das
push
lret
je
and
push
int
repnz
cmp
in
xchg
cmp
mov
cmp
loop
icebp
scas
test
imul
push
fists
dec
out
rcrb
jl
jbe
fwait
cmpsl
popa
rcll
jmp
sub
cmc
sbb
ret
test
out
xor
rorl
inc
pop
and
adc
mov
fs
xor
shll
and
jb
stos
jne
adcl
xchg
cmp
cmp
cmp
ljmp
adc
pshufw
rorl
aad
or
shr
pusha
ret
push
xor
gs
inc
cmp
sub
adc
xchg
mov
push
pop
mov
rcrb
dec
andl
jl
pusha
jns
mov
lret
dec
xchg
call
inc
fistps
mov
push
scas
adc
add
jne
dec
xlat
jo
loopne
push
outsl
and
mov
rcrl
pop
cld
pop
sub
mov
or
fcoms
orb
xor
popf
mov
dec
psllq
cmpsb
mov
mov
pop
add
test
jae
jnp
cmp
mov
lret
rorl
jno
loopne
jp
sbb
cmp
icebp
jne
add
hlt
fsts
aad
adc
fdivrp
shl
clc
push
imul
push
pop
push
lret
mov
imull
push
sahf
mov
xor
sbb
mov
dec
push
fdivl
xchg
int3
adc
js
mov
scas
cmp
sbb
push
push
pop
test
jns
pop
sub
xchg
in
enter
sbb
jmp
imul
xchg
sub
int3
lcall
ja
fisttpl
jecxz
test
imul
int3
sbb
xorl
sbb
dec
lock
xchg
xchg
xchg
mov
fsub
sub
sarb
cmp
repz
sbb
push
iret
dec
nop
and
sub
shl
je
in
push
dec
mov
out
xor
bnd
repnz
and
push
xor
rorl
and
mov
test
out
ljmp
movsb
stc
adcb
cmp
jo
divb
lock
xchg
lds
xchg
mov
dec
adc
push
xor
scas
test
xor
mov
in
loop
add
inc
inc
xor
mov
cltd
jb
cmp
adc
dec
arpl
int
mov
xor
das
jecxz
testl
fs
xor
lods
outsb
mov
ds
and
and
cmpsl
xchg
sti
sbb
xchg
or
insb
dec
jae
ja
lahf
pop
negl
roll
scas
push
fiaddl
pop
or
callw
stos
cmp
scas
sahf
jecxz
push
test
imul
mov
jp
pop
xchg
lds
ja
mov
dec
pop
mov
std
pop
dec
mov
scas
ret
push
and
rolb
or
push
repnz
out
sti
and
and
test
addb
jecxz
fsubs
repnz
push
mov
mov
xchg
test
dec
out
fdivrl
and
pop
xor
sub
lcall
in
sub
movsb
into
fisttpll
jge
mov
aad
push
add
ret
sbb
mov
loopne
fstl
mov
lods
adc
push
jae
mov
dec
adc
inc
daa
les
imul
shrb
xor
lea
addr16
mov
mov
fucomip
into
mov
pop
ljmp
cwtl
mov
dec
int3
adc
cmpsl
pop
int3
sub
pop
pop
insl
addl
call
mov
ss
insb
int3
mov
loopne
or
mov
pop
xor
or
xchg
in
mov
popf
sbb
xchg
je
fwait
das
fwait
xchg
mov
fsts
iret
or
test
dec
add
sub
test
push
icebp
cmp
sub
in
xchg
xchg
cmp
int
aas
addr16
aaa
mov
pop
xor
loop
jb
pusha
pop
sub
sbb
cli
std
imul
mov
pushf
es
orb
dec
xor
ror
outsb
int3
mov
popf
jmp
or
sarb
outsb
jae
or
dec
leave
jmp
inc
inc
and
fcmovne
xor
stos
mov
dec
inc
shll
insb
mov
icebp
push
jg
xchg
lds
add
out
mov
sbb
xlat
mov
mov
xchg
sbbl
insb
orl
test
mov
shrl
jle
imul
mov
xchg
mov
mov
push
mov
xchg
dec
bound
and
int3
outsb
xchg
cmp
cli
mov
insb
test
enter
stos
push
add
and
dec
mov
lea
shll
jo
mov
imul
pop
sbb
popf
mov
cld
pop
jp
mov
jb
loope
fsubrs
cltd
repnz
or
pop
lret
lahf
in
inc
lret
push
test
mov
xchg
lock
xor
gs
stos
je
xor
lds
lock
fisttps
jmp
pop
push
mov
jb,pn
push
xchg
cli
cmpsl
in
ja
idivl
test
or
cmc
cld
roll
mov
out
xor
xor
push
mov
sub
sub
stos
mov
lods
push
leave
aas
lods
movsb
add
mov
js,pt
outsl
test
movsb
mov
test
cmp
mov
jle
cmp
movsb
test
lahf
sbb
sahf
and
push
jns
fldt
xchg
sarb
jp
iret
push
xor
jo
das
imul
scas
mov
lret
xchg
inc
mov
pop
adc
mov
mov
dec
mov
and
adc
ret
sbb
ret
dec
out
rolb
cmp
and
xchg
out
mov
push
cmpb
fcmovnbe
inc
lock
pusha
test
mov
cltd
jl
shrl
inc
sub
lret
imul
jo
add
dec
xor
pop
adc
imul
popfw
pop
jnp
mov
clc
dec
mov
pop
adc
pop
jbe
or
or
movsb
xchg
cmpsl
adc
and
sub
aam
or
push
xor
and
sub
je
hlt
dec
fisttpll
xchg
mov
scas
jno
call
adc
mov
mov
test
pop
fcmovne
sub
push
lds
lds
aas
jo
sahf
pop
xchg
icebp
sti
jp
cwtl
stos
fildll
in
nopl
les
adc
shrb
cmpsl
dec
inc
adcb
push
pop
xchg
mov
inc
push
cli
fisttps
inc
cld
sbb
in
shlb
enter
mov
fnstsw
int3
mov
rorb
inc
repnz
enter
xchg
inc
mov
inc
sbb
ss
mov
adc
xlat
sahf
mov
lcall
aas
xchg
push
pop
xchg
ret
inc
inc
jle
xchg
xchg
loopne
push
mov
sub
fwait
movsb
gs
faddl
xor
mov
ds
fistps
lock
std
in
jmp
xchg
add
nop
xor
xor
loopne
jl
out
jnp
dec
adc
out
mov
enter
ds
stc
roll
pop
inc
stos
data16
sub
mov
lret
jnp
inc
sbb
dec
mov
movl
adc
xlat
inc
mov
and
out
test
lret
movsb
inc
lea
rol
bound
test
sar
pop
adc
add
xchg
sub
dec
jnp
outsb
sub
repnz
dec
dec
jmp
push
jge
xchg
outsl
test
cmp
inc
xchg
loopne
aaa
pop
mov
movsl
push
or
and
inc
dec
push
cmp
push
dec
leave
mov
and
imul
mov
xchg
mov
pop
lcall
lea
lahf
aaa
inc
pop
jb
dec
xor
mov
lldt
fimull
jae
clc
inc
push
aas
pushf
push
sti
ficoml
pop
int
xor
aaa
pushf
sahf
cld
lea
adcb
loop
sti
call
sar
xor
jne
mov
mov
enter
in
jno
xchg
arpl
pop
xchg
and
das
sbb
adc
adc
repz
lcall
jge
dec
sub
and
idiv
add
inc
bound
aad
mov
sbb
std
test
pop
popa
lea
inc
jecxz
and
xchg
mov
sbb
mov
push
mov
add
mov
push
sahf
xlat
fidivl
gs
sbb
scas
insl
jb
je
mov
lret
pop
ret
mov
adc
push
inc
iret
push
push
mov
push
es
jmp
dec
std
aas
int3
pusha
cli
std
add
rcl
mov
sub
push
inc
dec
pop
mov
jp
shl
pushf
fildl
xchg
pop
pop
leave
rcll
ffreep
adc
fsin
les
out
mov
cmpsb
stos
inc
mov
push
insb
shll
es
ret
je
xorb
int3
and
push
jg
jbe
dec
xor
push
and
mov
sub
shlb
jns
and
stc
arpl
out
mov
mov
inc
loop
into
or
imul
cmpb
imul
sub
xor
mov
sbb
mov
add
fldl
out
cli
or
cmpb
lahf
mov
jae
jle
sbb
fnstsw
test
iret
out
jg
push
nop
lea
add
ja
arpl
rcr
mov
sar
cld
xchg
sbb
add
sub
add
mov
imul
fmull
or
mov
adc
jmp
cmpsl
stc
adc
imul
and
std
fnstenv
add
fsubl
aaa
insl
and
test
pop
in
scas
sti
push
mov
xor
mov
out
out
dec
mov
jg
rorb
xchg
adcl
inc
jb
shrl
push
dec
ret
jbe
xchg
in
adcb
out
inc
push
sbb
aam
push
mov
and
out
mov
adc
sbb
mov
jbe
icebp
mov
cltd
test
mov
je
jp
lock
call
icebp
sbb
xchg
out
bound
pop
cwtl
imulb
sbb
and
mov
sbb
xchg
and
dec
dec
mov
call
popf
jns
icebp
mov
jne
cli
cmc
add
and
mov
jo
cwtl
aaa
int3
imul
push
xorb
ds
adc
inc
out
out
test
data16
lock
sahf
lret
and
mov
sahf
loopne
aaa
xchg
jl
call
push
lahf
sub
mov
lods
jecxz
mov
outsb
mov
aaa
clc
pop
or
lcall
cwtl
push
je
and
dec
ss
shlb
les
add
cli
std
es
push
mov
adc
jecxz
aam
ret
in
cltd
dec
mov
xor
inc
cmp
sti
lds
movsl
inc
pusha
lods
aam
outsl
aam
pop
prefetcht0
cmp
sub
mov
xorb
pop
loop
and
push
leavew
pushl
push
jp
jg
mov
push
jge
lods
ficoml
pusha
mov
or
xor
notb
out
dec
pop
add
xchg
int
mov
call
pop
js
stc
or
inc
dec
ds
stc
adc
xlat
adc
sbb
cltd
sbb
xchg
cmc
dec
sub
xchg
stos
fs
inc
jp
aas
jg
pop
sbb
das
cmp
andb
dec
test
push
popa
icebp
add
mov
xor
jnp
enter
fs
and
dec
imul
shl
imul
into
push
incl
mov
adc
ljmp
push
cmpl
loop
sbb
lods
rorl
cld
fcmovnb
stc
cli
ret
sbb
hlt
cmp
fwait
shl
push
mov
sti
cwtl
dec
cld
xor
aam
and
jbe
out
push
adc
popa
test
dec
cmp
testb
mov
mov
lds
in
loopne
dec
fcompl
movb
add
cmp
mov
enter
imul
cmc
jge
scas
mov
dec
pop
sub
sub
in
jnp
cwtl
sub
das
test
stc
mov
int
xor
jbe
cli
sub
insl
adc
int3
cmp
daa
push
xor
iret
sar
rcrb
hlt
add
int
hlt
xchg
rep
movsb
or
loop
mov
imul
cmp
mov
subb
rcrl
cwtl
dec
aad
in
push
mov
shrl
in
and
dec
push
mov
popf
test
inc
mov
jle
in
popf
aas
stos
lahf
pushl
push
push
cltd
xchg
leave
cmp
mov
dec
cli
shrl
loopne
jg
pop
mov
add
dec
std
cmc
lret
cmp
mov
push
dec
fnstsw
bound
or
loop
inc
je
cmpsb
mov
jge
adc
inc
cmp
and
out
inc
cmp
cmpsb
dec
cmp
mov
xor
jp
xchg
decb
out
arpl
sub
pop
sbb
mov
or
jae
xchg
cwtl
mov
dec
mov
jnp
add
ja
cli
mov
adc
cwtl
mov
aad
je
dec
jle
jns
stos
pop
xor
mov
inc
mov
std
popf
xchg
psubusw
mov
cmp
lods
push
lods
outsb
imul
dec
loop
add
push
jecxz
sti
int
push
push
or
sbb
les
xchg
out
loope
cli
fdivrs
mov
dec
inc
and
lret
xchg
add
dec
cltd
sar
pop
mov
call
adc
pop
mov
or
inc
mov
cltd
cmp
pop
adc
cmpsl
lcall
cmp
shl
fldl
test
cmp
jl
dec
pop
cmp
test
inc
out
jecxz
into
lods
mov
fdivrp
inc
mov
mov
lods
cmpsl
ret
sbb
mov
sub
and
jge
lock
ds
sbb
rcrl
xor
test
fistps
add
and
mov
add
push
movsb
xor
cmpsl
xchg
inc
fiaddl
mov
inc
push
leave
jb
inc
xorl
xlat
les
out
lret
inc
inc
jo
cmpsl
aaa
hlt
dec
mov
cs
xchg
push
or
inc
test
sahf
cmp
lock
fistps
movsb
jmp
test
shlb
pop
pop
cmp
incl
mov
inc
push
or
pop
aad
xorb
js
rorb
stos
icebp
rcll
adc
mov
lods
out
and
sbb
std
dec
sub
xlat
aad
push
inc
and
popa
adc
arpl
dec
aas
in
fisttps
repnz
jns
fstps
sbb
adc
stos
dec
jge
add
fnstcw
adc
shrl
lds
shrb
fidivrl
je
mov
addr16
dec
outsl
mov
or
icebp
scas
xchg
sbbb
std
push
or
mov
xchg
xor
adc
movsb
sub
sbb
jnp
popf
insb
mov
pushf
adc
push
and
shrb
xchg
or
fcomps
mov
call
dec
push
fistpll
push
mulb
scas
iret
xor
pop
pop
pop
test
ret
dec
jns
inc
and
fcoms
inc
cmp
jb
mov
xor
aaa
imul
into
or
jge
mov
addr16
movsb
rclb
mov
mov
shlb
xchg
jmp
mov
out
subb
arpl
sahf
int3
or
les
cwtl
or
mov
xchg
mov
add
fstpt
int3
mov
push
lahf
inc
mov
and
stc
mov
notl
inc
hlt
xchg
pop
cmpb
imul
cmp
inc
mov
lret
test
mov
cmp
fcomi
mov
lock
out
add
mov
add
ss
cmp
stos
dec
out
dec
sub
scas
jnp
sbb
jge
dec
push
lock
rclb
push
push
mov
fldt
shll
push
shll
cli
cmp
fsubrl
imul
dec
jo
xchg
sub
out
add
dec
fwait
outsl
popl
insb
arpl
sbb
std
out
in
cmpsl
xchg
adc
inc
cmp
mov
add
cld
and
adc
pusha
jp
xorb
cmpsl
fmuls
aas
add
inc
sub
pushf
mov
xor
xchg
dec
mov
pop
ljmp
dec
inc
jmp
fnstsw
mov
repz
fidivrl
xor
mov
xchg
std
xlat
lock
mov
pop
jae
mov
sbb
sub
adcl
sub
xor
cmc
mov
jle
loope
fdivs
add
rclb
adcl
jge
fcomps
mov
or
lret
or
dec
lods
adc
adc
push
cmp
ja
clc
adc
xchg
push
cwtl
push
mov
dec
jb
inc
fbstp
push
mov
loope
cbtw
mov
push
hlt
jo
jo
jl
pop
testb
cmp
fisttps
sbb
jae
ror
pop
dec
mov
leave
adcb
dec
sub
mov
sbb
cmpb
mov
daa
sar
iret
sub
mov
testb
out
loop
subl
and
inc
xor
rcr
ljmp
lods
nop
or
cmp
outsl
add
mov
cmc
mov
xchg
sbb
les
lock
mov
popf
xchg
adc
mov
mov
imul
dec
stos
out
fcmove
fistpl
negb
jg
in
pusha
cmp
rcll
sbb
xorl
pop
orb
push
jle
mov
into
imul
sub
cmpsl
sti
dec
shlb
arpl
in
jbe
dec
xchg
adc
add
fisubl
sbb
lahf
jbe
gs
push
outsl
mov
or
sahf
out
add
sbb
inc
sti
pop
or
mov
and
insl
fistl
xchg
and
inc
or
arpl
sub
pushf
or
lods
jle
shrb
jne
mov
jae
xchg
adc
test
jp
dec
sub
lret
inc
jno
or
or
arpl
mov
mov
dec
mov
mov
sbb
sbb
xchg
pop
dec
mov
xchg
lret
cmp
leave
add
js
add
xchg
repz
and
shr
pop
or
xor
sarb
add
cmp
inc
push
inc
or
fidivrs
hlt
loope
or
mov
fimull
push
repz
mov
ja
jle
dec
adc
mov
addr16
add
sub
je
mov
pushf
fbld
sti
outsb
mov
lret
insb
nop
clc
dec
enter
mov
cwtl
jo
adc
out
dec
inc
adc
out
int
pop
in
jne
das
cmp
dec
repnz
ljmp
pop
and
leave
lret
clc
dec
add
mov
mov
jp
popa
xchg
push
jmp
pop
cmp
jge
mov
rdpmc
xchg
shr
mov
jb
fbld
scas
mov
lcall
pop
mov
dec
dec
pop
or
in
ljmp
sub
sbb
enter
pop
cmp
mov
pop
cld
rorl
xchg
pop
test
jno
cmp
std
decl
dec
mov
addr16
nop
or
addr16
pop
pop
sub
add
adc
lcall
lahf
loopne
xchg
addr16
jnp,pt
aaa
xor
std
and
stos
push
aad
cltd
mov
repnz
inc
repnz
jo
jnp
jg
aad
dec
push
jb
fadds
push
sub
cmc
mov
mov
sbb
sbb
cwtl
out
les
pop
std
idivl
inc
xchg
imul
push
sbb
sbb
outsb
or
xor
sahf
outsb
add
jle
dec
cltd
pop
aam
ret
inc
xor
adc
iret
jp
int
or
jbe
in
and
mov
pushf
adc
js
mov
push
sbb
push
jo
daa
xor
test
fdivrs
xor
cmp
lret
sbb
cmp
sbb
and
xchg
insb
pop
push
into
push
and
mov
push
sub
shl
gs
mov
cmc
xlat
cmp
fistpll
pop
cmp
insl
stos
repnz
inc
adc
dec
sub
aaa
nop
int
adc
nop
lret
sub
mov
jmp
sub
repz
dec
cmp
xchg
xor
pop
out
aam
cmpsb
inc
sbb
sub
push
nop
ds
aas
mov
testb
jmp
and
jno
cltd
not
loop
mov
test
sarb
repz
jb
movsl
and
xchg
sub
cld
jnp
pop
dec
jne
sub
xchg
inc
fisubl
hlt
repz
ret
lea
mov
cmpsl
enter
xor
jns
and
inc
fadds
in
inc
movsb
sarl
test
mov
dec
xchg
cmp
and
mov
pop
into
cmpsb
xor
push
xchg
hlt
cmp
mov
outsl
jl
mov
jo
scas
xchg
ljmp
imul
je
mov
shr
popa
fucomp
bound
mov
lea
cmp
adcl
xor
mov
and
jle
pusha
cmpsb
jne
cmpsl
outsl
and
mov
xchg
push
js
push
sti
divb
pusha
pushf
icebp
push
stc
jb
or
hlt
mov
mov
int
inc
lods
in
mov
sub
shll
stos
pushfw
mov
subb
add
rcrl
ret
std
stos
aad
push
mov
popl
fwait
rorl
out
jp
xor
inc
ljmp
xchg
or
dec
out
in
jmp
jne
jbe
pop
jns
add
rorb
add
vunpcklps
ret
push
jns
or
roll
out
mov
ds
cmp
bound
lret
lcall
mov
mov
fidivrl
and
sbb
jl
pop
jge
les
dec
add
enter
repnz
pop
lds
sbb
cmp
dec
mov
dec
dec
xor
dec
mov
in
add
negl
and
mov
xchg
inc
add
xorl
shll
mov
cmp
xchg
sbb
out
cmpsb
in
test
jae
jno
movl
ret
push
dec
sbbb
sahf
loopne
mov
add
and
lock
sti
cmp
js
stos
xchg
xchg
inc
and
jns
lea
das
daa
dec
cmpl
xor
or
aam
adc
push
aas
mov
data16
ret
push
mov
push
mov
adc
sub
inc
sub
xchg
stc
mov
mov
pop
sbb
je
icebp
bound
popa
jae
add
jne
sbb
push
and
fadds
mov
out
jbe
in
add
add
mov
mov
dec
sbb
rol
or
bound
jae
pushf
iret
imul
out
movsb
or
stos
insl
lahf
pop
push
call
in
mov
leave
mov
mov
pop
jp
cmp
insl
ljmp
imul
cmpsl
pop
pop
hlt
stos
icebp
insl
shrb
mov
xchg
jns
sub
cmp
pop
addr16
ret
aaa
in
enter
aad
iret
jbe
mov
ret
push
mov
adc
scas
mov
enter
jl
add
mov
push
jecxz
std
pushf
mov
lcall
mov
push
je
sbb
pop
sub
loopne
test
pop
push
clc
repnz
adc
push
cs
addb
or
mov
mov
jge
mov
jmp
int
xor
sub
addl
push
mov
insb
mov
pop
mov
adc
rol
pop
sahf
lods
pop
pop
push
add
add
cmp
aas
pop
pop
outsl
aas
daa
mov
fnstcw
enter
pop
and
inc
lret
es
jmp
inc
sbb
push
xor
mov
movsb
test
fstl
dec
gs
popa
sbb
pop
adc
aas
xor
xorl
aam
cs
movsb
mov
outsl
xchg
xchg
mov
in
scas
mov
fcoml
xchg
cs
or
mov
fistps
cwtl
adc
mov
int3
dec
pusha
lods
popa
adc
mov
dec
xchg
and
insl
pop
mov
add
jno
dec
adc
jns
pushf
and
add
push
iret
fs
mov
insb
and
orl
mov
xor
xchg
or
lret
push
pop
aas
insb
aaa
add
jp
mov
push
scas
xchg
push
inc
out
sti
pop
addr16
inc
xchg
testb
cmp
fs
andb
ljmp
int
sbb
dec
lret
into
addl
insl
inc
cmp
mov
orb
mov
inc
xchg
insb
pop
sub
inc
out
scas
push
iret
xchg
push
sub
ja
dec
imul
stos
sbbl
and
aad
or
and
bound
xchg
test
jae
call
lods
or
sbb
je
jp
xchg
mov
sub
loopne
mov
xchg
lret
inc
push
fwait
add
mov
pop
jl
xchg
push
pop
out
mov
dec
int3
adc
jp
push
shlb
push
sarb
stc
js
mov
or
cmpsb
gs
inc
xchg
sbb
xor
add
jl
fcoml
insb
adc
in
dec
xchg
or
sti
jl
inc
lahf
jge
pop
cld
sbb
int3
dec
xchg
mov
scas
shl
xchg
lods
mov
test
inc
add
xchg
sbb
scas
dec
or
xchg
sub
jl
xor
shll
in
cmp
mov
mov
je
or
cmpsb
push
dec
jp
movsb
rclb
sub
cmc
int3
sbb
mov
sti
iret
icebp
cwtl
out
ds
mov
mov
fbstp
mov
jecxz
js
mov
ret
or
and
jg
fsubl
and
sub
stos
jne
jne
xorb
jae
outsb
jl
mov
lds
mov
sub
pop
int
ljmp
cld
push
icebp
push
repnz
lret
popa
shrb
int
inc
clc
loopne
sahf
adc
add
mov
adc
in
pop
movsb
js
dec
popl
gs
jl
fnstsw
jle
jno
icebp
fwait
mov
xlat
dec
mov
pop
ds
sub
loope
out
jb
mov
int3
stos
cs
imul
jp
sbb
scas
popw
repz
and
cwtl
int
push
dec
mov
mov
cmp
arpl
lock
mov
and
stc
dec
jle
insb
add
push
mov
dec
and
ds
fidivl
int
ret
negl
fucom
push
cltd
jno
inc
sbb
aaa
jne
inc
jecxz
sar
shlb
jb
cmp
sbb
fildll
or
in
repnz
dec
push
gs
imulb
sahf
lods
push
sub
loope
jo
or
je,pt
sub
outsb
inc
insl
jg
icebp
mov
lods
add
jae
jg
nop
push
ror
shr
xor
pusha
push
lea
loop
sbb
and
cmp
or
mov
popa
push
mov
repz
leave
mov
push
inc
in
test
jb
add
mov
push
sarb
arpl
pop
push
fisubrs
lock
mov
or
cmp
dec
movsl
es
inc
sub
aas
pop
xchg
add
fucomi
push
inc
popf
push
cmp
adc
inc
testb
loop
jmp
jmp
in
roll
sbb
in
cmpsb
dec
mov
dec
out
xchg
add
dec
mov
jns
add
ja
icebp
hlt
pop
jbe
xchg
pusha
jnp
cs
enter
add
das
or
hlt
xchg
cmp
and
daa
jnp
sti
push
sbb
push
cmp
push
or
scas
fucomi
call
push
or
fcoml
add
lds
js
xchg
sti
inc
mulb
mov
pop
jo
fildll
cmpsb
cld
or
inc
xchg
aaa
sub
or
fs
imul
jmp
out
inc
mov
movsb
xchg
lcall
cmp
dec
sub
jb
inc
xor
mov
pop
xor
sti
popa
jle
stos
sub
popa
sub
xchg
xor
mov
pop
addr16
and
xchg
outsb
paddusb
jbe
nop
mov
or
jbe
hlt
cli
fsubr
andl
adc
adc
dec
push
mov
mov
mov
inc
sub
sarb
push
mov
xor
sbb
aaa
add
push
jp
into
rorb
call
icebp
fadds
cmp
jae
mov
add
xor
xor
xchg
frstor
pop
out
lods
sti
dec
jge
rcr
loop
arpl
in
xchg
pop
int
or
xchg
pop
ljmp
pop
add
cmovno
xor
aas
push
pop
dec
mov
lock
sbb
scas
pop
pop
push
jg
push
lret
add
jno
mov
mov
cld
sub
test
enter
mov
cmp
leave
inc
insl
sbb
test
in
aam
sub
pushf
mov
push
inc
adc
push
jle
aad
adc
mov
dec
scas
jbe
mov
lods
pop
cltd
jge
jo
aas
mov
mov
icebp
outsl
adc
mov
inc
mov
mov
fiadds
mov
iret
jp
adcb
popa
dec
push
xor
das
mov
xlat
pop
int3
out
fsts
in
clc
popf
push
iret
int
cwtl
xor
lahf
ja
xchg
test
out
xchg
sbb
inc
cvtps2pi
inc
mov
push
fsts
and
scas
mov
or
fs
cs
jne
test
call
sub
pop
gs
cmp
repnz
int3
pop
xor
test
hlt
das
or
add
loopne
ret
mov
hlt
mov
call
movsb
dec
pop
and
mov
lds
jmp
mov
pop
lahf
imul
sbb
mov
mov
and
pop
adc
lret
rcrb
mov
lea
push
jmp
lahf
cs
in
sbb
subl
and
push
lret
push
or
rorl
fbstp
jecxz
mov
inc
lds
or
inc
mov
jno
sbb
in
scas
mov
cmp
int
xor
mov
add
sbb
lea
je
push
xchg
cmc
add
xor
adc
popf
and
or
stc
das
popa
fcomp
dec
xor
pop
and
popa
int
mov
rclb
or
stc
mov
lods
jecxz
sub
cmp
ret
and
jmp
stos
dec
mov
in
add
push
je
stos
pop
dec
in
aaa
xor
imul
push
xor
lods
mov
dec
xorb
mov
jns
cmp
mov
mov
sbb
adc
stos
or
stc
clc
into
sub
pop
mov
adc
into
aaa
xlat
sub
in
mov
mov
sbb
jge
xchg
inc
test
aad
or
jnp
cltd
outsl
jle
fnstsw
and
sub
rcrl
cmp
xchg
or
roll
xchg
or
into
mov
jge
fstps
push
and
shll
out
cmp
pop
pusha
adc
ret
mov
lods
xchg
cwtl
jmp
mov
add
ficompl
xchg
inc
inc
sbb
mov
popf
mov
pop
fcmove
inc
sub
pushf
push
jle
jp
dec
popl
std
dec
loop
hlt
mov
inc
jno
mov
add
shlb
aam
mov
sub
mov
cwtl
mov
cmp
popa
ret
jg
mov
mov
int
stc
out
pop
shrl
jo
mov
cs
jae
add
mov
jno
stc
repnz
popf
mov
and
push
pop
adc
xorb
insb
cld
sbb
mov
aaa
ja
lea
out
movsl
std
xor
out
push
pushf
es
test
dec
push
and
and
sarb
aad
movsl
stos
out
dec
pop
cmp
mov
aad
push
gs
test
aam
out
xor
cmp
les
mov
test
jp
xchg
and
scas
push
sub
inc
or
sbb
mov
lret
add
or
jge
lahf
out
call
inc
mov
adc
insb
std
vpor
fbld
mov
in
nop
rcrl
push
iret
data16
lods
and
pop
mov
mov
rorl
mov
mov
xlat
leave
cmpsb
xor
mov
nop
inc
push
lock
xlat
outsl
mov
in
leave
in
adc
pop
mov
jmp
out
xchg
sbb
xchg
cmpsl
lret
xor
sbb
adc
fisttpll
mov
lret
sahf
stos
mov
out
xchg
sti
sbb
es
bound
je
pop
les
xchg
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
ljmp
jnp
push
ljmp
movsl
bound
adc
scas
outsb
sub
adc
xchg
or
cltd
push
pop
dec
inc
mov
test
dec
mov
jbe
movsb
mov
ds
int
or
jmp
cmpsb
jmp
daa
lea
ljmp
bnd
xor
movsl
jge
cmpsl
push
add
gs
adc
shll
sarl
adc
ficomps
and
arpl
pop
jp
pop
xor
xchg
sbb
lahf
xchg
and
gs
ja
rcrb
inc
xchg
leave
daa
rcrb
faddl
cmpl
pop
sub
hlt
popl
dec
daa
lcall
sbb
jo
fs
jns
divl
fstps
mov
dec
sbbl
pusha
scas
stc
leave
fbstp
data16
out
negl
test
jmp
adc
mov
dec
sub
adc
mov
adc
and
xchg
inc
push
daa
pop
lods
adcl
dec
push
sbb
and
pop
push
bound
bound
mov
push
pop
cld
sub
mov
mov
or
shl
pop
clc
lret
test
pop
sbb
push
clc
sahf
mov
pop
cmp
test
push
jae
dec
or
or
stc
xor
pop
ljmp
and
int3
je
ror
bound
rcl
sbb
outsl
lahf
sub
es
mov
mov
pop
shr
movsl
adc
dec
jl
push
pop
ss
int3
cltd
cltd
mov
mov
pop
int3
adc
xchg
add
aas
add
adc
jnp
xor
adcb
dec
movsl
iret
jne
repnz
les
sbb
dec
push
pop
nop
int3
and
add
add
add
add
add
pop
add
inc
xchg
sub
mov
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
outsb
add
insl
