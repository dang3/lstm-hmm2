push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
pop
sbb
inc
and
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
mov
inc
add
push
lea
sub
mov
xor
mov
mov
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
xor
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
ss
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
adc
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
into
and
add
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
cmp
js
push
lea
mov
test
je
cmp
cs
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
inc
adc
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
sahf
sub
or
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
mov
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
js
inc
add
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
mov
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
sub
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
ja
inc
add
pop
and
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
lahf
sub
mov
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
and
jbe
lea
movzwl
addw
lea
add
cmp
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
out
jl
and
mov
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
pusha
push
call
mov
in
int3
add
add
push
arpl
cld
add
fwait
add
add
mov
aad
mov
shlb
mov
add
add
clc
add
cmpsl
mov
add
mov
push
jne
add
add
out
add
push
add
in
add
push
push
push
lea
push
push
push
call
mov
jp
add
popl
arpl
push
push
negl
add
fadds
mov
add
cmpsl
add
add
popa
outsl
add
in
xchg
stos
out
push
mov
jmp
add
add
mov
jb
icebp
mov
fmull
inc
in
push
push
push
push
lea
push
push
call
popf
xchg
sahf
push
add
xchg
nop
mov
imul
push
rolb
stc
add
jl
xchg
add
add
add
enter
clc
mov
add
add
loopne
add
add
cmc
xchg
add
int
add
add
leave
add
push
mov
lea
pop
push
push
push
call
add
add
add
push
orl
mov
mov
xchg
add
add
popf
add
popf
add
pop
add
add
add
mov
jb
add
mov
add
fsubrl
stos
add
add
aad
push
add
rorl
pop
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
out
js
xchg
sahf
insb
test
jae
push
add
lods
jns
pop
add
fiadds
add
ja
test
clc
arpl
pusha
mov
add
add
add
add
add
add
out
add
movsb
sarb
movsb
push
incb
add
roll
call
mov
popa
adc
push
push
lea
push
lea
push
push
lea
push
push
call
add
cmpsl
add
push
mov
pusha
add
add
jo
aad
cmpsl
in
add
add
popf
add
into
jecxz
popl
cwtl
add
jle
mov
add
test
push
sbb
fmull
push
lea
push
push
push
push
push
push
push
push
push
call
jo
jb
out
icebp
ret
je
mov
fwait
popf
add
stos
jae
ja
sbbb
aam
add
add
aad
add
fwait
cmpsl
add
cmc
add
arpl
lahf
mov
lea
pop
call
push
push
push
lea
push
call
add
mov
sti
xchg
mov
jecxz
fiaddl
jbe
mov
mov
not
lahf
je
mov
mov
clc
add
loope
add
add
pop
add
add
jb
addl
pushf
ljmp
aad
test
pop
std
mov
aad
out
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
jp
rcll
add
add
pop
add
out
movb
ret
jp
leave
lock
mov
arpl
add
add
cwtl
mov
add
add
add
add
add
add
loope
call
add
cmpsb
mov
pop
rolb
add
mov
lea
pop
call
push
push
push
lea
push
lea
push
lea
push
call
pop
add
add
jl
lret
add
mov
stos
sahf
add
xchg
jle
xchg
out
xchg
add
add
mov
jle
lods
ficoms
xchg
test
shl
cld
lahf
mov
add
xchg
clc
lods
jge
add
add
push
popl
hlt
xchg
pop
mov
lea
pop
jmp
push
push
push
push
push
lea
push
push
call
out
add
jno
add
mov
pop
add
aad
in
add
add
gs
rcrb
push
push
pop
movsb
add
fdivs
add
add
imul
clc
add
out
cltd
push
add
rolb
mov
mov
pop
subb
add
cmpsl
mov
add
sarb
mov
data16
ret
mov
push
push
call
data16
add
add
mov
fs
mov
call
jnp
push
mov
add
mov
sar
cli
mov
clc
repnz
ret
mov
stos
int3
add
add
lock
pop
xchg
data16
subl
pop
loope
flds
add
mov
add
cld
add
pop
mov
add
push
push
push
push
push
call
add
add
lret
mov
add
add
cmpsb
add
add
rcll
jo
lds
add
mov
repnz
rclb
jp
imul
add
int3
lea
pop
add
push
push
lea
push
call
add
add
add
cwtl
je
out
out
add
jae
add
stos
mov
test
ja
add
jns
lds
add
push
add
add
sti
add
in
add
pop
xchg
push
add
add
add
xorl
add
add
add
mov
outsl
frstpm(287
add
lret
add
arpl
add
push
push
push
push
push
call
add
mov
mov
mov
std
add
xchg
add
insb
imulb
lahf
std
lods
push
add
xchg
add
std
jmp
add
cld
add
add
cli
add
addw
data16
js
data16
add
add
add
bound
int3
xchg
aad
add
add
add
add
add
add
mov
lea
pop
mov
xor
push
push
push
or
not
add
shl
sub
inc
xor
add
pop
add
inc
dec
rol
pop
push
push
call
cwtl
add
nop
add
pusha
in
mov
out
add
mov
stc
add
pop
add
add
jmp
roll
add
ret
xchg
add
jno
cwtl
fildl
cld
movsl
add
pop
pushl
call
push
lea
push
call
add
mov
mov
jae
add
fwait
add
add
add
add
mov
add
xchg
fs
add
pop
imul
add
jnp
jns
je
mov
add
fists
in
mov
push
push
add
add
movsl
loope
cmpsb
add
lock
add
add
mov
lea
pop
mov
movl
push
push
push
lea
push
call
gs
add
add
mov
subl
add
stos
add
mov
clc
push
add
lods
add
scas
push
scas
add
pop
pop
push
fldl
roll
js
mov
hlt
add
add
add
mov
add
js
bound
fcompl
add
add
insb
mov
pop
lea
push
push
push
lea
push
lea
push
push
push
push
push
push
call
push
push
sti
loope
push
out
rol
lods
ficomps
add
add
in
nop
je
jecxz
in
clc
add
add
mov
fldl
ret
jb
lea
repnz
add
add
ljmp
add
jo
add
pop
add
jecxz
loopne
add
mov
add
fsubr
sarl
add
pusha
pusha
mov
pop
push
push
push
call
add
ja
lock
rolb
add
cli
nop
add
mov
add
lea
loop
mov
push
xlat
imul
sti
add
ljmp
add
imul
fmull
jne
pushl
push
push
push
call
add
add
cmp
movb
std
add
lahf
add
pop
xchg
push
movb
jnp
add
add
add
cltd
add
push
out
jne
sarl
mov
nop
mov
lea
pop
call
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
push
add
sti
test
add
mov
push
repnz
jl
add
cmc
ror
je
aam
add
add
add
add
lods
mov
add
xchg
push
je
ljmp
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
push
call
hlt
add
test
js
les
rclb
add
ret
push
add
jae
lods
add
outsl
cmpsl
stos
loopne
add
mov
sahf
add
jo
mov
movb
pop
rorb
add
std
add
add
fld
test
add
add
add
jbe
jge
add
repnz
mov
lea
pop
pushl
call
push
push
shr
sub
push
xor
add
inc
xor
sub
shl
shl
pop
ror
add
pop
push
lea
push
push
push
lea
push
push
lea
push
push
call
fwait
int
add
imul
stos
add
add
lds
xchg
add
stos
add
add
add
add
pop
fdivp
push
add
push
add
add
add
add
add
pop
pushl
push
lea
push
call
add
add
add
out
add
ljmp
mov
les
test
xlat
add
add
clc
scas
add
add
cmc
add
in
addb
imul
add
add
add
mov
aam
cmpsb
leave
mov
add
add
add
mov
movl
xchg
add
xchg
jae
hlt
lea
pop
call
push
push
push
lea
push
push
call
out
add
add
add
test
fldl
popa
fwait
test
pop
add
add
pop
std
xchg
mov
cwtl
leave
jnp
add
aad
add
loopne
shll
push
jae
pop
jecxz
pushf
in
jecxz
add
add
popa
enter
jl
les
lret
xchg
pop
leave
add
pusha
ljmp
adc
push
push
push
lea
inc
add
push
push
pop
add
ror
sub
add
sub
pop
sub
inc
rol
pop
push
push
push
push
push
push
push
push
push
push
call
add
pop
arpl
add
add
jns
fcomi
add
add
shlb
out
push
out
jne
add
add
add
mov
data16
xchg
add
fbld
pop
cli
mov
addl
push
jae
add
add
add
imul
pop
add
rol
add
add
nop
mov
lea
pop
push
push
push
push
push
call
add
pop
popf
xchg
gs
add
pop
add
add
jl
jnp
fxam
popa
test
std
pop
pushf
add
ljmp
add
add
mov
add
mov
enter
add
sahf
jmp
mov
jecxz
pop
push
enter
addr16
add
mov
lea
pop
call
push
lea
push
push
push
push
call
push
cli
enter
or
lds
add
mov
pop
push
add
mov
add
jno
mov
shl
add
gs
xchg
add
add
les
fwait
addb
add
xchg
mov
lea
pop
mov
push
push
push
push
call
leave
pop
mov
mov
xchg
jno
iret
js
push
mov
push
imul
add
push
ljmp
add
jecxz
arpl
clc
pop
mov
add
pop
add
mov
rorb
mov
xchg
mov
loope
mov
or
push
push
push
push
lea
push
lea
push
push
push
push
call
jp
ret
jecxz
add
jae
mov
in
add
add
rcll
jns
add
ret
fcomp
add
mov
aad
add
xchg
pop
add
jmp
popa
add
icebp
add
aam
jmp
push
mov
add
add
stos
mov
add
js
test
outsl
movb
add
ficompl
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
add
push
lret
add
mov
add
add
add
mov
movsb
int
add
xchg
add
popa
mov
mov
loop
add
add
rol
add
add
add
test
add
jo
add
add
test
rcrl
pop
add
xchg
test
jle
arpl
pop
addl
pusha
and
add
add
push
lea
push
call
idivl
mov
in
mov
add
add
add
repnz
lods
add
test
mov
add
mov
add
pop
add
addb
pop
insb
mov
add
cmpsb
add
sti
fucomi
out
sahf
iret
add
add
add
sbb
cmpsl
jecxz
add
bound
add
xchg
loop
sti
add
push
mov
lea
pop
add
push
push
call
mov
in
add
add
jb
mov
add
mov
js
add
mov
call
push
outsl
add
cld
rolb
rclb
xchg
add
xchg
add
add
add
mov
sahf
add
shlb
mov
add
filds
popf
lock
out
roll
lret
mov
add
sahf
mov
roll
add
pop
mov
xor
push
push
push
push
call
fimuls
add
add
add
mov
xorl
add
mov
push
popa
add
scas
add
xchg
outsl
add
test
mov
lea
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
pop
add
add
test
add
jb
pop
mov
add
add
pop
add
lods
add
movsb
test
add
mov
data16
popa
int3
mov
pop
add
fdivs
add
hlt
lea
pop
push
push
push
push
push
call
mov
add
in
pop
insb
add
add
jo
add
rolb
test
add
mov
add
out
add
les
add
jnp
mov
jecxz
cltd
mov
add
add
push
mov
add
pop
mov
xor
push
push
push
push
push
call
add
ljmp
fwait
je
add
add
loopne
fwait
jnp
mov
test
repnz
sahf
shrb
les
push
lret
mov
add
xchg
add
add
iret
add
add
rcll
mov
lea
pop
add
pop
push
push
push
push
call
cwtl
add
add
lock
add
mov
imul
pop
fwait
in
gs
imulb
cmc
pop
jno
adcl
add
mov
lea
pop
mov
xor
push
push
push
push
call
add
imul
add
mov
xchg
arpl
scas
lcall
add
jo
add
imul
pop
lahf
add
xchg
add
add
imul
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
scas
jbe
add
add
pop
test
pusha
mov
mov
add
stc
pop
add
add
filds
jl
add
add
mov
add
add
add
push
add
jne
icebp
in
add
pop
mov
xor
push
push
lea
push
call
mov
add
xchg
add
add
incb
test
add
lret
jno
mov
add
mov
add
addb
movl
mov
add
pop
add
lock
loopne
out
add
nop
add
rolb
add
add
je
xchg
add
add
stos
add
add
mov
test
lret
aam
bound
sub
pop
push
push
push
push
push
push
lea
push
call
add
leave
sti
add
add
push
xor
sti
push
fwait
add
add
pop
add
enter
add
add
testl
add
mov
std
add
shr
mov
lea
pop
rep
push
push
push
push
lea
push
push
lea
push
push
call
jge
add
addl
testl
add
add
mov
add
add
mov
test
add
add
popf
add
add
push
out
add
repnz
add
popa
add
push
jnp
jo
add
pop
stos
xchg
add
jp
roll
add
sbbb
loope
add
xchg
lahf
data16
hlt
lea
pop
pop
push
lea
push
push
push
push
lea
push
push
call
pop
in
rolb
jns
testb
add
add
jle
add
add
push
mov
add
add
mov
lock
add
jbe
add
popf
fiadds
mov
outsl
std
mov
lea
pop
mov
push
push
push
push
push
call
mov
add
xchg
test
push
lret
add
xchg
stos
lods
add
add
add
cld
out
imul
add
imul
pop
shll
flds
lcall
lea
pop
add
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
pop
push
add
add
jp
faddl
in
cld
jmp
test
cltd
add
jb
rcrb
add
push
test
ljmp
add
add
cwtl
xchg
push
add
mov
add
pop
add
push
add
cmc
add
mov
mov
mov
add
add
add
add
add
sub
ret
xchg
imul
push
push
call
into
mov
in
aad
movsb
push
test
add
add
loopne
add
push
repnz
mov
imul
pop
add
add
lods
push
push
push
add
jnp
je
in
lea
lods
pop
add
lods
mov
stc
push
mov
mov
fiadds
mov
cld
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
xchg
mov
add
pusha
add
add
add
faddl
lret
add
lds
fwait
jo
push
mov
xchg
jbe
sti
stos
pop
add
mov
in
add
in
notl
repnz
add
add
lret
loopne
pop
scas
jmp
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
push
call
cwtl
int
xchg
shr
jge
fcmovb
mov
pop
xchg
push
pop
add
std
jmp
clc
add
mov
pop
into
in
xchg
add
add
or
add
cmpb
jae
loopne
pop
push
jmp
les
les
add
push
push
call
add
jne
test
add
scas
mov
add
mov
pusha
jno
add
jbe
add
gs
xchg
add
ret
add
pusha
test
mov
add
add
ljmp
jecxz
bound
mov
je
add
add
mov
cltd
mov
addr16
add
xchg
popf
loop
clc
add
pop
mov
xor
push
push
push
push
push
push
call
enter
fistpll
popa
call
mov
out
ljmp
int3
add
sahf
jp
loopne
bound
test
add
add
add
jl
jecxz
jge
push
add
lret
add
loopne
pop
add
add
loope
push
add
clc
xchg
add
jne
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
pop
add
add
xchg
add
add
loope
clc
or
clc
mov
mov
mov
add
jmp
pop
mov
add
rclb
stc
out
add
push
xchg
lds
jne
mov
add
lds
out
cmpl
mov
lea
pop
xor
push
push
push
push
push
push
call
add
in
add
mov
jp
push
add
jge
jne
outsl
fucomp
add
jns
fidivrl
test
rcr
add
mov
sti
mov
add
stc
imul
lods
movsb
lods
js
enter
jmp
fwait
add
push
add
jb
add
out
cwtl
int3
add
add
pop
add
push
push
push
push
lea
push
push
push
push
call
add
add
add
xchg
pushf
add
add
rorl
add
mov
pop
mov
add
mov
nop
push
enter
add
add
xchg
cwtl
cli
aam
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
stc
push
add
mov
fwait
jecxz
push
add
lcall
out
jnp
sahf
push
xlat
add
cwtl
ljmp
popa
add
xlat
add
mov
mov
lea
pop
add
push
lea
push
push
push
call
lea
push
add
mov
fxch
add
add
mov
xchg
frstor
add
add
out
jb
add
add
add
add
pop
in
mov
xchg
les
add
jge
movsb
push
bound
add
add
scas
pop
add
rcrb
sti
mov
lea
pop
mov
push
push
add
add
lea
push
sub
add
sub
lea
pop
sub
pop
push
lea
push
push
push
push
lea
push
push
push
call
push
xchg
add
add
rcr
xchg
add
nop
add
add
jbe
mov
mov
add
add
add
pop
add
loopne
jge
push
enter
cwtl
mov
push
add
mov
enter
in
nop
iret
imul
pop
add
add
data16
lcall
and
jne
call
push
push
lea
push
lea
push
push
call
add
test
add
add
add
insb
add
add
add
into
test
add
movsb
add
add
ficomps
add
mov
push
je
lods
bound
pop
push
push
push
shr
ror
push
or
not
add
dec
shr
rol
sub
shr
pop
add
rol
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
movsb
fwait
xchg
push
out
jno
movb
icebp
add
add
add
jns
cwtl
shll
add
push
push
in
loop
add
pop
add
add
lods
aad
add
js
add
aam
bound
pop
push
push
push
push
push
lea
push
call
cltd
cld
mov
movsb
add
out
mov
loope
cmpsb
add
add
add
push
jbe
add
jne
push
imul
jne
imul
pop
lea
add
lods
aam
pusha
add
add
add
test
rorb
pop
push
push
lea
push
lea
push
call
lds
les
test
leave
cltd
add
stc
scas
fiadds
stos
lds
popl
addr16
shll
repnz
push
pop
mov
add
add
add
out
add
jb
xchg
icebp
testl
movsl
add
mov
pusha
add
add
std
frstor
add
add
pop
call
push
push
push
call
add
push
mov
mov
xchg
add
add
jns
pop
xchg
push
xlat
iret
lds
pop
pop
jge
mov
push
pop
jnp
add
bound
add
mov
fdivrl
pop
in
lods
mov
add
add
data16
mov
push
push
call
mov
popa
mov
out
add
jge
into
mov
add
lds
add
add
push
add
add
pop
stos
pop
mov
add
mov
push
js
out
jne
fdiv
xchg
add
scas
push
fmuls
add
scas
add
add
jb
loop
add
add
int3
add
push
jae
mov
add
addb
les
push
lea
push
lea
push
call
scas
xchg
notl
add
repnz
aam
xchg
add
add
mov
scas
mov
cltd
fistpll
icebp
add
pop
rcll
lahf
add
add
movsb
out
int
out
insb
add
add
add
add
mov
cwtl
rolb
jns
add
ret
add
jnp
pusha
mov
lea
pop
push
mov
push
push
lea
push
push
push
push
lea
push
push
call
xchg
push
add
pop
add
add
into
add
jne
fldl
bnd
xchg
stc
add
stos
ficoms
mov
jecxz
jae
add
add
jns
in
lock
icebp
push
mov
xchg
stos
push
add
pop
add
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
add
mov
add
jno
cmpsb
sahf
fisttpl
xlat
add
add
roll
cmpsl
push
loope
outsl
add
jbe
aad
jb
push
ja
clc
loopne
mov
push
xchg
add
lea
pop
add
add
push
push
push
push
lea
push
push
push
push
call
add
add
leave
divl
movsl
jmp
int3
mov
sti
mov
mov
add
push
mov
add
test
pushf
add
fldenv
in
add
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
mov
xchg
divl
in
out
ja
add
mov
add
aam
xchg
add
ljmp
int
add
rolb
jnp
mov
imul
add
pop
add
mov
add
add
int
insb
pushf
add
mov
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
lds
xchg
lods
fucomp
lcall
ja
add
bound
add
aad
add
rolb
add
ret
bound
pusha
sub
les
push
lea
push
push
lea
push
push
push
push
push
call
jecxz
icebp
add
fildl
add
fsubl
shr
add
add
jo
leave
movsb
mov
add
xchg
jbe
add
xchg
jns
add
fadds
add
add
cli
filds
add
mov
stos
jge
add
add
and
add
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
not
pusha
add
add
jge
mov
jp
pop
fwait
mov
mov
add
push
add
out
add
add
lods
xlat
add
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
scas
push
stos
xchg
data16
call
lods
mov
add
in
add
add
jmp
xchg
add
add
mov
shl
add
loope
add
push
add
jmp
add
fwait
in
add
movsb
xchg
jo
add
aad
ja
popa
add
out
shll
cli
fwait
imul
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
ror
addl
mov
add
ficomps
test
add
iret
adc
add
imul
jbe
add
in
lds
xchg
add
stos
mov
sarl
in
out
call
add
mov
lea
pop
xor
push
push
lea
push
push
push
call
add
add
add
int3
jb
imul
add
mov
aad
add
imul
into
enter
popf
pop
pop
cltd
push
insb
jle
add
lcall
xchg
jecxz
add
js
outsl
add
cld
lea
pop
add
push
push
push
push
push
push
call
lds
add
add
hlt
mov
push
jmp
imul
add
add
iret
add
cli
stc
add
add
jl
fiaddl
add
push
cmc
mov
int
sarb
in
xchg
nop
pop
push
add
mov
xchg
fcmovne
add
loopne
pop
repnz
mov
sbb
lock
push
push
push
push
lea
push
lea
push
push
call
add
add
int3
clc
add
xchg
jle
jae
into
addl
add
add
add
add
fisubrl
jnp
mov
add
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
push
push
push
call
shrl
cwtl
sti
jb
add
std
add
leave
pop
add
add
add
add
lods
pop
push
mov
add
lods
mov
adc
repnz
mov
aam
add
add
pop
rep
push
ror
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
add
add
mov
add
or
jecxz
mov
add
add
xor
add
rcll
test
add
add
lock
popa
lods
add
jb
ja
push
cwtl
shrb
call
mov
add
stc
les
add
mov
add
addr16
pop
add
cmpsb
mov
lea
pop
xor
push
push
lea
push
lea
push
call
rcrl
mov
push
add
push
add
add
add
add
movl
add
add
add
add
ja
add
jno
lds
add
mov
mov
add
sahf
xchg
fcmove
pop
add
add
add
add
mov
call
add
add
lds
mov
lea
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
mov
mov
fadd
push
add
xchg
add
pushf
mov
add
shl
lret
sti
push
jb
std
je
stos
add
add
jbe
mov
pop
mov
popa
popa
movl
add
jl
pop
add
out
mov
cmpsl
cmc
cld
mov
lea
pop
or
je
mov
xor
push
lea
push
push
push
call
add
push
jmp
push
add
xchg
jl
pop
ficoms
add
int3
xchg
push
movsl
jns
cli
add
ja
xchg
jo
xchg
ja
add
lea
repnz
andb
mov
flds
add
add
add
add
nop
add
int
out
ja
mov
lea
pop
mov
push
push
push
push
push
call
roll
add
add
imul
add
push
movl
mov
cmpsl
in
movsl
xlat
add
rcll
push
jmp
mov
loop
add
add
add
add
add
pop
int
ja
mov
add
pushf
add
add
push
xchg
mov
in
mov
sti
addl
add
test
add
add
push
mov
adc
adc
push
lea
push
push
lea
push
push
push
lea
push
call
jns
stos
add
jo
in
add
add
scas
fsubl
stc
mov
add
fldl
add
add
imul
int3
jge
add
add
add
add
clc
add
mov
push
add
add
xchg
add
pop
add
push
sub
xor
inc
sub
pop
add
push
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
into
mov
add
fmuls
roll
add
mov
add
lahf
add
movsl
add
add
jl
add
mov
fiaddl
add
add
orl
lret
xchg
add
add
push
fidivl
cld
add
add
add
mov
add
add
mov
lea
pop
mov
xor
push
push
push
lea
push
push
push
push
call
add
add
add
jecxz
add
jno
jo
add
push
add
add
call
js
add
ret
mov
add
add
add
repnz
jae
add
gs
lods
filds
add
add
js
add
add
mov
add
loope
add
add
add
pop
add
pop
push
sub
shl
pop
rep
mov
xor
push
push
push
lea
push
push
push
push
push
call
add
lcall
add
add
pop
lea
movsl
repnz
add
add
mov
test
add
add
add
out
mov
scas
add
add
add
add
pop
mov
push
sti
add
out
nop
jle
add
imul
jmp
lahf
add
add
fdiv
add
iret
mov
lea
pop
or
je
mov
push
push
push
push
push
push
push
push
push
call
test
mov
jae
imul
cwtl
cmpsb
mov
mov
sarl
add
cwtl
add
lretw
xchg
mov
add
pop
push
mov
out
aam
jb
add
add
add
lea
pop
add
push
add
rol
inc
pop
add
push
lea
push
lea
push
call
mov
cmc
add
mov
mov
mov
jae
lock
cmpsl
xchg
nop
add
mov
add
add
xchg
jns
mov
add
les
add
add
add
add
add
and
add
fstpt
push
jp
add
mov
nop
andl
pop
rep
push
sub
sub
lea
dec
pop
pop
push
push
not
add
ror
push
or
inc
add
sub
pop
shr
xor
xor
pop
push
lea
push
lea
push
push
lea
push
push
push
call
add
push
jecxz
add
add
add
add
xchg
jle
add
iret
adcb
pushf
cli
add
xchg
or
add
popa
filds
in
lods
pusha
bnd
jno
add
add
add
add
push
shll
outsl
mov
mov
roll
add
add
sbb
pop
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
pop
mov
outsl
add
add
ret
add
cli
xorb
addl
add
aam
lods
add
mov
loopne
fidivl
popl
les
popf
fwait
jle
jne
movb
not
clc
lcall
aam
bound
mov
mov
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
fdivr
fdivrl
add
xlat
pop
mov
add
add
add
add
clc
flds
xchg
add
sahf
add
sti
aam
add
in
push
int
mov
movb
pop
repnz
add
mov
fistl
lahf
xchg
mov
mov
add
fwait
mov
lea
pop
mov
push
xor
sub
add
pop
jmp
push
push
push
push
push
push
push
push
lea
push
call
in
fcmove
add
cmpsl
bound
add
add
fs
add
loop
push
push
std
roll
mov
mov
ljmp
add
pop
fsts
insb
imul
push
sub
sub
shl
add
pop
mov
push
push
push
push
call
lahf
add
jno
add
mov
add
add
add
xchg
in
jbe
lock
add
aad
add
add
int
bound
xlat
add
aam
pop
add
add
add
sti
into
add
add
pop
into
cltd
mov
push
mov
add
pop
call
mov
lea
pop
add
push
sub
rol
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
stos
add
add
stc
js
loop
push
push
mov
add
fsubs
aad
clc
add
push
sub
xchg
les
mov
pop
lds
outsl
mov
add
add
add
xchg
movsb
iret
add
outsl
addl
repnz
add
repnz
add
fisubrs
add
add
aad
mov
add
shl
nop
add
add
push
add
cmpsb
mov
lea
pop
push
push
xor
rol
add
ror
pop
push
push
push
push
push
lea
push
push
push
call
pushf
add
movl
mov
clc
mov
mov
lea
cwtl
add
add
int3
add
ja
mov
mov
add
test
add
lods
add
mov
add
lods
xchg
insb
add
add
push
mov
lea
pop
mov
push
shr
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
push
add
in
add
mov
add
add
addb
add
push
add
add
jne
mov
xchg
pop
mov
rcrl
mov
add
add
add
jne
xchg
add
add
pushf
mov
xchg
add
add
push
hlt
lea
pop
pop
pop
push
xor
ror
pop
pop
leave
push
push
lea
push
lea
push
push
push
push
call
les
mov
enter
mov
filds
js
sti
flds
bnd
add
add
roll
out
xchg
push
add
add
add
jmp
fadds
xchg
add
jo
bound
add
sti
iret
mov
adc
pop
add
push
fimuls
pop
ret
push
lea
push
call
push
add
add
mov
pop
stc
add
add
int3
out
jne
in
add
jl
loope
fcoms
mov
enter
add
add
cmc
cmc
fadds
nop
jne
add
xlat
cli
frstor
add
add
xlat
add
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
call
add
std
test
rolb
add
jmp
add
loopne
add
add
add
jmp
add
add
add
add
imul
add
lds
push
add
mov
lea
pop
mov
add
push
xor
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
cltd
jge
nop
addr16
add
add
xchg
add
imul
shr
icebp
ljmp
mov
add
add
lcall
ja
lock
fcomip
add
int3
lea
pop
push
push
push
add
add
sub
pop
push
movl
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
out
lahf
push
add
mov
pusha
mov
lret
add
add
add
add
pushf
add
add
add
add
add
popf
add
add
add
add
outsl
add
in
push
add
xchg
xchg
xchg
test
add
add
add
mov
lea
pop
addl
test
je
push
shl
pop
mov
push
add
pop
pop
push
inc
lea
pop
pop
push
push
push
push
lea
push
call
push
mov
xchg
add
roll
xchg
xchg
stc
xchg
add
add
add
cmpb
addl
add
add
add
add
add
xchg
add
jnp
jns
push
scas
add
add
add
add
mov
add
mov
lea
pop
pop
push
lea
shl
pop
pop
leave
push
push
push
call
nop
mov
xchg
faddl
lods
popa
add
jo
push
add
je
je
out
mov
push
fs
pop
neg
add
xchg
xchg
mov
std
mov
add
xchg
mov
lea
pop
ret
push
push
not
inc
sub
add
pop
mov
push
xor
pop
add
push
shl
dec
pop
push
push
push
push
push
push
push
push
push
push
call
lds
add
jne
push
push
add
push
add
into
clc
mov
add
xlat
shll
add
pop
add
add
add
mov
mov
cli
repnz
testl
aad
roll
mov
and
push
push
rol
shr
pop
push
push
push
rol
pop
testl
push
push
push
push
call
add
shlb
mov
out
popa
popf
push
jge
add
add
push
pop
rorl
add
xchg
mov
lret
jns
je
lods
rcll
jno
scas
pop
shl
add
ret
jae
addr16
add
mov
add
add
add
pop
addl
push
shl
pop
push
push
sub
inc
pop
call
mov
push
push
push
lea
push
push
push
push
call
sti
mov
add
mov
rol
sahf
jecxz
call
in
add
out
add
add
cld
add
loope
lret
mov
popf
in
pop
scas
call
push
stc
out
add
jmp
mov
lea
pop
pushl
push
rol
add
rol
pop
push
push
push
push
push
push
push
push
lea
push
push
call
lret
add
mov
add
enter
add
movsb
add
add
add
add
push
les
add
pop
xchg
leave
cmc
add
add
cli
jo
push
add
mov
fcomp
push
mov
add
cld
add
ror
add
push
pop
add
js
lret
fwait
in
scas
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
lock
pop
add
movsl
mov
movsb
mov
add
add
xchg
test
mov
les
add
jmp
pop
fs
add
add
mov
lea
pop
call
cmpl
jne
push
xor
sub
pop
pop
pop
push
inc
shl
add
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
lret
mov
mov
add
add
add
add
roll
add
add
xchg
stos
movsl
add
xchg
push
jecxz
add
add
add
add
xchg
xchg
call
gs
add
into
pop
add
sti
div
mov
fiaddl
jle
lret
add
add
add
int
push
add
stos
add
add
test
lea
pop
pop
leave
push
rol
pop
ret
push
lea
push
lea
push
lea
push
call
add
xchg
jbe
xchg
xchg
mov
add
stos
les
add
mov
leave
rolb
rolb
stc
push
add
add
cmpb
push
mov
push
cmpsb
add
add
ret
jl
cmpsl
add
lods
xchg
push
add
mov
mov
lea
pop
push
push
inc
pop
mov
add
push
lea
push
lea
push
push
lea
push
call
add
xchg
mov
mov
add
add
mov
insb
enter
add
add
add
ljmp
mov
mov
add
test
cld
add
push
lods
ja
xorb
leave
add
add
divb
push
add
in
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
out
jno
div
pop
add
xchg
add
je
pop
int3
mov
add
jmp
add
cli
jbe
push
mov
cltd
pop
stos
loope
add
mov
pusha
fwait
add
add
into
lcall
sti
in
push
add
add
out
roll
add
in
cld
lea
pop
push
push
sub
lea
ror
pop
push
push
push
pop
movl
push
lea
add
pop
push
push
push
push
call
rolb
mov
loopne
push
add
add
popa
add
out
scas
mov
in
movsb
add
popa
mov
add
jge
add
add
stos
and
add
lcall
aam
mov
add
add
add
add
scas
add
mov
add
pop
popf
add
call
aad
add
je
scas
mov
lea
pop
call
push
inc
dec
pop
push
call
push
inc
pop
subl
push
lea
push
push
push
call
add
sahf
push
jb
xchg
cli
testl
arpl
jo
addl
add
jp
add
andl
add
in
mov
mov
mov
jns
xchg
add
lock
add
mov
lea
pop
cmpl
jne
pop
push
push
lea
push
lea
push
push
lea
push
call
add
add
testb
add
pop
jp
in
add
add
test
jmp
pop
cltd
add
add
mov
push
add
in
leave
add
in
pop
cli
jne
ret
incb
js
cmpsl
int
mov
add
sahf
add
add
hlt
add
gs
pop
jns
add
xchg
xchg
add
out
add
lods
add
pop
pop
push
dec
inc
pop
pop
push
add
pop
pop
leave
push
push
push
push
lea
push
push
push
push
call
loop
add
cmpsb
pop
add
xchg
fildl
rcrl
add
test
add
add
xchg
addl
add
ror
xchg
add
in
push
incb
add
mov
mov
pop
pop
jbe
mov
xchg
add
add
push
mov
add
add
in
cmpb
add
mov
std
leave
jp
stos
mov
lea
pop
ret
push
push
push
call
add
push
fucomip
lds
js
add
mov
add
stos
cmpsb
add
add
mov
push
add
add
add
fdivl
mov
subl
jle
js
add
add
mov
add
pop
push
push
lea
push
push
push
push
push
call
lea
mov
out
xchg
mov
add
push
push
mov
add
mov
fstl
fisubrs
pop
add
jae
push
cmpsb
incb
add
xchg
add
hlt
cltd
mov
add
add
scas
add
in
mov
lcall
mov
add
cli
add
xchg
arpl
pop
mov
add
push
pop
push
push
push
push
lea
push
push
call
add
cmpsl
les
pop
lock
add
xchg
add
addb
add
jnp
add
xchg
in
add
fsts
add
add
add
in
add
fst
push
js
add
pop
push
push
push
lea
push
lea
push
call
addl
cli
out
int3
lock
ja
gs
push
add
jecxz
add
pop
movsb
in
enter
add
add
mov
pushf
js
add
mov
xchg
add
fwait
add
mov
lea
pop
push
push
lea
push
lea
push
call
incb
add
jns
push
cwtl
add
sahf
aad
add
add
ljmp
add
lds
cmc
add
add
push
add
pop
add
call
int3
out
sahf
xchg
pop
add
andb
mov
add
pop
mov
push
push
push
call
add
fidivrl
xorl
js
fistps
add
jl
call
cld
nop
pop
add
jae
add
jbe
out
add
add
jae
add
add
pop
lea
push
ror
ror
shr
pop
sub
push
lea
push
push
push
lea
push
push
push
call
add
in
add
cmpsb
mov
movsb
fiaddl
xlat
add
xchg
jne
pop
add
gs
mov
push
add
test
add
lcall
add
movsb
push
add
add
add
mov
add
in
fdivrs
mov
add
mov
add
xchg
mov
lea
pop
mov
shr
push
sub
rol
shl
pop
add
mov
push
push
push
push
lea
push
lea
push
push
push
call
lds
add
movsb
int
add
add
stc
add
add
add
push
cli
add
lcall
in
add
xchg
pop
add
add
add
add
divl
roll
pop
xlat
mov
pushf
ljmp
add
mov
lea
pop
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
loopne
lret
iret
lcall
fs
sti
imul
roll
add
cmpsb
roll
add
lock
pop
mov
add
mov
mov
mov
out
test
mov
rorl
add
cltd
out
les
mov
lea
pop
add
add
push
dec
xor
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
call
xchg
add
out
js
add
add
pop
jne
in
loope
stos
add
add
addl
add
pop
iret
add
add
fmulp
hlt
add
mov
lds
add
shlb
mov
gs
add
leave
mov
lea
pop
cmp
jne
push
dec
pop
cmp
jne
push
push
call
xchg
mov
add
push
sti
mov
mov
jge
mov
add
test
mov
scas
xorb
add
pop
mov
xchg
pop
add
jp
jno
add
std
in
mov
add
add
add
mov
cld
bound
sbbl
faddl
jp
xor
pusha
or
inc
adc
pop
cmp
fadd
ret
or
add
add
add
xor
sbb
test
push
push
push
push
push
call
add
fldl
pop
loopne
add
rcrb
out
mov
push
mov
mov
popa
mov
add
mov
std
ret
xchg
jo
jp
movb
mov
out
or
jmp
jle
add
add
add
add
sahf
mov
lea
pop
jmp
push
add
pop
mov
push
rol
lea
pop
mov
push
push
push
call
mov
int
f2xm1
add
test
add
jge
add
addr16
pop
lret
xchg
push
add
pusha
add
add
in
mov
add
mov
mov
fsubrl
test
js
pusha
add
add
mov
lea
pop
sub
jne
push
ror
pop
mov
movl
push
lea
push
call
push
add
xchg
add
add
add
add
add
push
and
add
add
loopnew
test
add
add
lret
add
add
add
call
imulb
add
into
add
mov
add
in
cmc
faddl
data16
add
movsb
push
pushf
std
cltd
mov
mov
lea
pop
jmp
mov
push
lea
push
push
push
lea
push
call
push
push
push
mov
aad
ljmp
add
add
cmpsl
mov
add
add
pop
add
mov
mov
stc
add
add
out
add
pop
mov
push
lea
push
push
push
push
lea
push
call
mov
cld
lds
out
mov
testb
xchg
push
add
hlt
push
jo
mov
add
push
call
popf
jle
imul
leave
add
aam
ja
mov
cmpsl
add
add
mov
push
add
add
push
xchg
insb
add
add
add
add
lea
pop
cmp
jne
mov
push
shr
sub
sub
inc
pop
movl
push
sub
xor
ror
pop
jmp
mov
push
shr
pop
cmpw
jne
push
lea
push
push
lea
push
push
push
push
call
jl
add
rclb
add
pop
gs
add
test
add
fimull
add
xchg
pop
mov
add
je
jmp
add
mov
ja
add
push
add
fwait
stos
lret
push
add
stc
add
mov
lea
pop
mov
movl
push
pop
jmp
push
shl
pop
pushl
push
lea
push
push
push
push
push
lea
push
call
sahf
add
int3
pushf
lea
enter
lcall
enter
mov
push
add
add
out
std
pusha
add
fldl
shll
add
add
add
lock
test
add
sbb
pop
mov
push
dec
pop
mov
mov
push
push
inc
sub
add
push
xor
add
inc
shr
sub
sub
sub
sub
pop
rol
pop
push
shl
pop
push
call
push
push
lea
push
push
call
rolb
add
add
mov
xchg
jae
add
aam
xchg
loopne
xchg
jle
addb
test
mov
icebp
add
add
add
add
add
add
mov
lea
pop
cmpl
je
push
push
ror
push
and
add
lea
ror
shl
sub
sub
sub
pop
dec
lea
pop
push
add
shr
pop
push
call
push
pop
cmpl
je
push
push
add
rol
dec
ror
push
sub
add
sub
sub
ror
sub
pop
ror
xor
add
pop
push
lea
push
push
push
call
bound
lret
loop
sti
add
add
add
lret
add
add
add
jb
add
add
in
mov
jecxz
jecxz
add
jbe
mov
int3
lea
pop
push
call
push
not
inc
pop
cmpl
je
push
push
sub
lea
push
or
inc
add
xor
add
shl
sub
sub
inc
shl
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
mov
mov
add
add
jae
push
add
add
jb
push
add
imul
add
add
mov
rolb
add
add
sbb
testb
add
arpl
cltd
roll
movl
pop
add
add
push
add
lcall
jne
mov
arpl
push
push
dec
inc
sub
ror
pop
call
cmpl
je
push
push
add
add
inc
push
push
pop
add
xor
shr
add
inc
sub
add
pop
shl
not
shr
xor
pop
push
add
pop
push
call
push
lea
pop
cmpl
je
push
push
not
sub
push
xor
add
rol
sub
sub
shl
rol
pop
add
pop
push
add
lea
add
pop
push
push
shl
ror
pop
call
cmpl
je
push
push
sub
push
sub
add
add
sub
add
sub
pop
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
push
mov
add
xchg
add
add
out
lods
add
add
stos
add
add
add
popl
ja
flds
mov
pop
jno
pop
sahf
jae
lret
scas
stos
stc
jno
add
sub
push
sub
pop
call
cmpl
je
push
push
add
push
or
not
add
shr
sub
inc
sub
add
ror
pop
rol
shl
not
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
rolb
in
enter
xchg
into
jmp
add
push
add
add
add
add
insb
pop
in
push
lcall
add
lcall
add
push
add
lea
pop
push
push
not
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
cwtl
mov
stc
pop
add
add
aam
test
add
add
add
fiadds
jmp
xchg
push
addl
std
lds
mov
in
out
add
jae
in
cmpl
xor
add
mov
iret
call
lea
pop
cmpl
je
push
push
shl
xor
push
xor
add
not
sub
shr
ror
pop
shl
sub
pop
push
add
pop
push
call
push
push
lea
push
push
call
addb
add
stos
add
fisubrs
push
add
add
add
scas
add
lock
rolb
add
cld
lock
add
push
pop
repnz
push
clc
mov
xlat
push
add
add
add
add
pop
cmpl
je
push
push
xor
push
and
add
sub
add
sub
add
shl
sub
shl
pop
not
sub
pop
push
pop
push
push
not
dec
xor
pop
call
push
lea
push
push
call
add
mov
add
add
lret
mov
add
xchg
in
add
push
add
cld
add
add
clc
movsl
mov
mov
add
add
jne
add
stos
add
mov
lea
pop
cmpl
je
push
push
add
push
or
inc
add
lea
sub
not
shr
shr
shl
pop
rol
shr
shl
pop
push
lea
push
call
mov
pop
cltd
push
mov
aam
add
pop
add
cmpl
add
add
jle
lds
out
add
jl
roll
mov
lea
pop
push
call
push
lea
push
push
push
push
lea
push
push
call
add
mov
add
add
sti
jmp
mov
aad
faddl
mov
add
push
int3
xchg
add
add
add
leave
add
add
jnp
xchg
mov
mov
add
in
add
add
call
add
jno
mov
mov
lea
pop
cmpl
je
push
push
ror
xor
add
dec
push
and
add
xor
rol
dec
ror
sub
shr
pop
shr
pop
push
push
push
push
call
add
sti
shr
incb
rolb
incb
add
add
pop
jo
lahf
lock
push
mov
fadds
pop
add
add
cltd
sbbb
mov
add
jne
add
add
mov
mov
sahf
insb
test
add
ljmp
neg
add
les
push
push
push
lea
push
lea
push
call
scas
add
insb
jle
into
add
xchg
add
flds
imul
scas
scas
nop
mov
mov
add
rcl
mov
ja
push
addb
add
mov
cmpb
xchg
add
xchg
push
popf
mov
add
xchg
ljmp
add
mov
add
fistpll
add
sbbb
mov
mov
popa
adc
call
push
push
push
push
push
call
mov
int
push
add
add
cwtl
xchg
add
popf
add
add
add
add
add
push
add
add
add
add
ljmp
push
cld
add
add
into
add
add
cmc
add
cltd
outsl
pop
add
int3
add
fs
fadds
xchg
adcl
hlt
lea
pop
cmpl
je
push
push
sub
add
push
or
inc
add
sub
shr
shl
xor
sub
lea
rol
add
pop
add
sub
pop
push
sub
pop
push
push
lea
push
push
push
lea
push
call
xchg
into
add
int
jbe
add
push
pop
add
mov
jle
out
xchg
push
mov
add
add
add
add
add
mov
mov
add
add
cld
stos
addr16
xchg
pushf
ja
pop
int
fs
fildl
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
out
add
test
movsl
add
ja
add
mov
les
ljmp
mov
mov
add
ljmp
fldenv
mov
add
mov
in
cli
rolb
hlt
lea
pop
cmpl
jne
push
push
call
add
add
rolb
add
stos
sti
add
sti
lahf
add
popf
flds
cld
faddl
jmp
ret
cltd
add
push
add
add
out
js
add
outsl
xchg
js
jbe
lea
add
fcoml
push
data16
jnp
mov
js
cli
add
popf
fisttps
add
cltd
add
push
in
out
add
mov
lea
pop
mov
push
push
call
testb
add
popf
bound
add
push
add
lea
add
add
add
cmpsb
add
pop
clc
jmp
add
push
js
test
mov
mov
out
add
add
xchg
in
add
or
add
add
add
jnp
add
push
push
push
lea
push
push
push
push
lea
push
push
call
add
xchg
push
push
add
add
pushf
mov
pusha
fldl
add
out
xchg
filds
movsl
add
mov
lret
insb
mov
add
mov
mov
arpl
add
add
jno
add
add
scas
push
add
mov
lea
pop
xor
pop
push
sub
dec
rol
inc
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
push
popf
jno
push
mov
mov
fwait
cld
mov
cmc
ljmp
add
mov
pop
mov
in
cmpsb
pop
test
pop
add
add
rolb
add
mov
mov
mov
mov
lahf
push
mov
lea
pop
pop
leave
push
sub
pop
ret
push
lea
push
push
lea
push
call
add
jmp
add
add
xchg
loop
add
add
fbld
add
pop
add
fiadds
cmpsb
mov
pop
sti
popa
mov
int
xchg
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
add
shl
mov
add
add
mov
mov
add
leave
mov
add
add
xchg
add
nop
arpl
arpl
ret
ftst
icebp
add
cwtl
xchg
add
xchg
arpl
mov
fs
jp
add
lock
les
in
push
lea
add
pop
add
push
push
push
push
push
call
jbe
add
hlt
lea
push
mov
testb
cmpsl
out
lret
into
cwtl
test
mov
cwtl
add
push
cltd
add
gs
fwait
jge
out
add
push
add
add
mov
add
popf
jae
aad
ficoms
call
fildl
add
add
and
mov
add
out
mov
lea
pop
cmpl
jne
push
push
dec
add
push
push
pop
add
ror
lea
sub
sub
sub
ror
lea
pop
dec
inc
pop
push
inc
shr
shr
rol
pop
pushl
push
sub
shr
pop
call
push
push
push
lea
push
call
filds
add
out
pushf
add
mov
fnstcw
add
sarl
nop
sahf
shrl
add
push
in
add
out
pusha
jle
push
loope
fiadds
add
xlat
add
xchg
mov
add
roll
icebp
add
arpl
pop
push
push
pop
call
jmp
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
jns
add
mov
iret
outsl
bound
add
mov
lock
pop
loop
popa
mov
lret
faddl
add
add
add
add
scas
xchg
rolb
xchg
add
mov
add
mov
add
in
xchg
gs
add
iret
add
add
bound
pop
cmpl
je
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
call
jge
pop
add
pop
pop
add
xchg
cmpsl
jecxz
stos
jns
add
add
enter
add
bound
lret
jp
mov
add
push
fcmove
add
xchg
xlat
cwtl
add
mov
lea
pop
leave
add
push
push
push
push
call
add
add
lods
lock
jge
aad
rcrl
jmp
neg
xlat
jno
mov
jno
not
add
pop
jle
add
mov
add
add
stos
push
scas
test
fnstcw
add
add
add
mov
or
mov
add
shlb
lods
mov
pop
mov
lea
pop
pop
push
dec
add
pop
pop
push
sub
pop
pop
pop
push
push
push
push
call
js
insb
loope
mov
xchg
mov
add
pop
fldl
sti
mov
sti
add
lock
ja
hlt
add
add
loope
shlb
add
cmpsb
add
addl
add
mov
scas
sahf
mov
add
aam
add
add
scas
data16
push
ja
shrl
jge
roll
add
aam
bound
pop
leave
push
push
push
call
add
scas
mov
in
add
popl
add
lcall
push
movsb
pop
pop
cmpl
les
pop
leave
add
add
add
push
mov
data16
mov
mov
stos
pushf
add
jne
mov
add
add
sarl
mov
push
add
xlat
movsl
xchg
push
push
pop
add
lret
xchg
ret
xchg
add
add
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
loop
mov
mov
add
mov
rolb
add
xlat
int3
add
fidivrs
into
movsb
in
movsl
call
je
mov
lods
jne
in
pushf
push
add
mov
faddl
pusha
jno
add
lahf
add
int3
iret
testb
push
shl
mov
add
mov
xchg
outsl
int
js
lcall
aam
bound
ret
push
inc
add
sub
pop
jmp
push
lea
push
push
push
lea
push
push
push
push
push
push
call
pop
add
add
add
cld
pop
xorb
jle
shll
cmpb
cltd
add
add
pop
add
add
add
jns
iret
add
add
imul
fnstenv
stc
add
mov
lea
pop
cmpl
jne
push
push
ror
shr
sub
push
or
not
add
rol
rol
sub
ror
pop
lea
not
pop
push
pop
pushl
call
push
lea
push
push
call
mov
mov
incb
fistl
mov
add
add
add
add
add
mov
imul
push
push
add
not
leave
xchg
cwtl
mov
add
add
add
add
add
pop
mov
add
mov
hlt
lea
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
ja
pop
cwtl
add
add
out
jno
stos
add
xchg
data16
filds
leave
add
in
lds
mov
xchg
add
pushf
aam
pop
add
add
pop
jecxz
iret
xchg
add
add
mov
add
jno
insb
add
add
add
push
mov
add
mov
fisttpll
pop
call
push
sub
pop
jmp
push
push
lea
push
push
call
in
rcll
add
js
mov
add
js
loopne
les
add
add
add
mov
in
call
mov
add
add
add
add
fisubrs
fcomi
add
test
fwait
add
add
pop
cmpl
jne
push
add
rol
pop
mov
mov
push
dec
not
ror
add
pop
push
push
push
ror
lea
push
xor
add
sub
lea
dec
sub
dec
pop
ror
sub
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
xchg
sahf
fnstcw
repnz
add
mov
add
add
cld
popl
out
hlt
add
fiaddl
jae
lods
xchg
lods
add
add
mov
mov
rolb
add
aam
add
mov
lea
pop
pushl
push
ror
sub
inc
pop
call
push
shl
pop
push
push
shl
rol
sub
pop
call
push
push
rol
rol
rol
dec
push
xor
add
shr
lea
rol
sub
lea
sub
sub
pop
rol
pop
push
push
push
call
in
hlt
add
cmc
add
test
cwtl
imul
add
mov
add
mov
jl
add
push
pop
mov
add
add
les
add
mov
out
out
add
mov
add
pop
pushl
call
push
shl
not
not
pop
call
push
push
sub
shl
push
push
pop
add
add
not
not
inc
sub
dec
pop
lea
sub
shr
pop
push
xor
dec
pop
pushl
push
inc
sub
pop
call
call
push
lea
push
lea
push
push
push
push
lea
push
call
jnp
push
sti
push
mov
mov
add
add
xorb
fxch
roll
adc
add
cmc
push
xchg
add
push
out
lcall
mov
stos
int
add
gs
add
mov
add
add
jle
add
add
add
pop
lea
push
push
shl
push
and
add
ror
inc
sub
xor
not
pop
lea
not
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
push
add
test
add
mov
in
add
pusha
mov
mov
add
sarl
outsl
pop
add
fcmovnu
jle
jne
jle
std
jecxz
in
mov
add
mov
les
jne
push
push
push
push
push
lea
push
push
push
push
call
add
add
scas
jl
lods
sbb
pusha
add
ljmp
lcall
rolb
fadds
mov
add
add
test
push
push
pusha
fsubp
hlt
lods
add
jge
add
js
add
movsb
ljmp
lret
iret
add
lret
pop
mov
lea
pop
call
push
lea
push
push
push
push
push
push
push
call
mov
add
int3
mov
pop
icebp
add
cltd
add
into
cld
add
mov
pushf
push
push
add
fbstp
pop
hlt
jno
jae
in
add
mov
add
cmp
add
fstpt
cltd
add
enter
loopne
test
add
add
les
loope
jbe
mov
push
test
pushf
add
in
idivl
add
add
lea
pop
push
push
sub
inc
pop
call
push
push
inc
xor
ror
push
or
not
add
lea
sub
shr
sub
xor
lea
sub
pop
add
add
pop
push
shr
sub
pop
pushl
push
inc
shr
pop
call
call
push
push
lea
push
lea
push
push
call
add
add
filds
add
add
add
pop
lock
add
jmp
out
in
out
icebp
xchg
add
arpl
fsubrl
add
push
add
mov
mov
into
pop
addl
mov
lods
push
je
mov
iret
add
mov
movsl
xorb
adc
mov
push
push
shl
push
and
add
add
not
shl
sub
inc
pop
sub
pop
push
inc
add
pop
pushl
call
push
push
lea
push
push
push
call
test
jge
scas
push
add
lahf
jno
rcrl
roll
add
imul
add
xchg
add
ja
pop
movsl
add
stc
push
xchg
lods
add
roll
jae
mov
outsl
popf
add
add
lcall
leave
call
add
test
add
jb
add
mov
lea
pop
push
call
push
push
shl
push
or
not
add
not
shl
sub
inc
pop
shl
inc
add
pop
push
add
pop
pushl
push
ror
pop
call
push
lea
pop
push
pushl
push
push
push
lea
push
push
push
push
push
push
call
lea
push
mov
add
add
add
mov
mov
add
test
add
leave
hlt
pop
xchg
jne
add
ja
imul
add
shrl
sahf
cwtl
ljmp
lea
pop
call
push
push
lea
ror
push
xor
add
xor
xor
sub
inc
pop
lea
add
pop
push
rol
xor
pop
pushl
push
push
push
push
call
lcall
out
add
add
stos
cmc
add
add
add
push
arpl
movl
mov
idiv
jecxz
add
fdivrs
mov
testl
loopne
jb
xchg
jns
mov
mov
add
cmpsb
mov
add
mov
fldl
add
add
xchg
xchg
push
add
adc
cmpsl
pop
add
push
push
add
push
xor
add
dec
shr
lea
sub
pop
inc
pop
push
push
shl
shl
rol
push
and
add
sub
ror
shl
sub
shl
pop
ror
pop
push
shr
shr
pop
call
pop
push
sub
xor
pop
dec
jne
push
lea
push
push
lea
push
call
nop
mov
add
scas
add
sub
push
jns
arpl
fcmovbe
add
add
movsl
add
add
rclb
rolb
rolb
add
xchg
xlat
scas
cmpsl
iret
aad
add
add
add
pop
lock
mov
add
jl
stos
jge
pop
lods
imul
add
add
fistps
adc
jp
add
push
push
push
lea
push
call
jecxz
jp
out
xchg
sti
add
pop
into
mov
stos
add
cld
out
add
lods
add
pop
int
add
stos
add
mov
add
add
add
test
lret
xlat
roll
mov
aam
hlt
lea
pop
jmp
push
xor
xor
add
inc
pop
call
push
push
shl
push
or
not
add
not
sub
sub
sub
shl
xor
shl
pop
inc
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
scas
stc
outsl
push
into
outsl
xchg
insb
xchg
add
add
add
in
lret
add
add
mov
mov
add
mov
add
jecxz
mov
jne
out
rclb
lods
add
jmp
into
add
mov
lea
pop
pushl
call
push
lea
push
push
push
lea
push
call
add
pop
sarb
int3
hlt
rolb
add
popa
fcmove
repnz
mov
add
add
repnz
add
add
add
arpl
add
fiadds
add
pop
add
add
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
ljmp
fs
in
add
add
add
xchg
mov
pop
push
add
add
arpl
add
popf
add
push
add
add
ficompl
add
add
add
mov
mov
jle
pop
roll
add
add
fiadds
aam
fcmovnu
lock
add
loope
lds
add
aad
mov
mov
pop
call
mov
push
xor
add
xor
rol
pop
lea
push
push
xor
inc
sub
push
xor
add
not
not
add
add
sub
dec
xor
shr
sub
pop
add
add
pop
push
push
push
push
push
lea
push
push
push
push
push
call
roll
add
mov
stos
add
test
jns
fcmovnb
add
lahf
sti
jns
add
adcb
mov
jle
jbe
add
add
add
add
add
mov
lea
pop
pushl
push
shl
pop
call
push
push
push
push
push
call
fdivrp
sarl
mov
addr16
add
cmc
add
flds
add
add
jmp
test
jle
xchg
add
mov
add
add
add
mov
xchg
arpl
add
cld
lea
pop
call
push
push
ror
push
or
not
add
xor
add
add
sub
xor
pop
inc
shr
add
pop
push
add
shr
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
mov
int3
add
mov
add
jge
mov
add
xchg
xchg
pop
je
mov
lahf
xchg
lahf
jle
add
fldl
jecxz
in
mov
add
add
pop
loopne
pop
add
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
xchg
add
add
mov
add
lret
add
mov
lds
push
xchg
testl
push
lahf
add
mov
lahf
imul
repnz
stos
rorb
jno
mov
add
stos
add
add
add
add
enter
lea
pop
call
push
lea
push
call
imul
lea
add
out
xchg
mov
shl
jns
xchg
mov
loopne
jl
out
add
repnz
mov
add
mov
add
scas
mov
add
cmpl
ficompl
arpl
pop
mov
push
ror
rol
pop
lea
push
push
lea
sub
inc
push
xor
add
dec
ror
sub
ror
dec
pop
rol
sub
pop
push
push
push
push
call
loope
fsubrs
pop
mov
mov
jne
add
add
rolb
pop
cli
js
pop
add
ljmp
push
mov
add
add
pop
push
fadds
jp
cld
repnz
add
push
mov
jecxz
add
addl
mov
cli
ja
mov
flds
aam
popl
mov
jmp
jno
int3
lea
pop
pushl
push
shl
pop
call
lea
push
not
inc
pop
push
push
push
push
push
call
push
push
add
clc
add
fxch
add
mov
data16
fnstenv
loope
std
mov
stos
out
cwtl
add
loopne
push
push
mov
add
push
add
add
add
push
adc
in
mov
mov
out
add
add
negb
jno
add
mov
add
int3
pop
add
xchg
mov
add
cli
mov
sahf
mov
enter
lret
lea
pop
push
pushl
push
push
xor
push
or
inc
add
inc
sub
lea
add
inc
shr
pop
lea
xor
pop
push
push
push
push
push
lea
push
call
mov
popf
push
jl
sti
add
push
add
add
int3
popf
stos
lock
add
repnz
imul
call
scas
add
movb
add
stos
bound
add
add
lahf
movsb
push
add
mov
hlt
mov
stos
popa
jae
lret
popf
into
je
mov
add
pop
movsl
add
pop
push
push
lea
push
push
call
rcrb
xchg
scas
add
mov
cmpsl
test
add
add
jne
jnp
sti
addl
lahf
mov
fiadds
jecxz
js
add
push
fadds
jl
add
cwtl
jns
mov
out
mov
xchg
add
pop
call
push
push
sub
push
or
not
add
xor
shr
ror
sub
not
sub
add
dec
pop
shr
inc
pop
push
add
inc
pop
pushl
call
push
shr
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
push
mov
push
lods
add
add
insb
add
mov
pop
sti
add
mov
clc
addr16
outsl
in
movsl
add
add
add
clc
add
enter
mov
mov
lea
pop
call
push
push
ror
push
and
add
rol
dec
dec
sub
sub
lea
ror
add
pop
sub
lea
pop
push
push
push
push
call
add
in
mov
jne
mov
jmp
mov
add
cmpsb
lret
add
add
jno
add
lea
mov
jo
add
sub
test
jb
add
stos
add
mov
lea
pop
pushl
push
shl
sub
pop
call
push
pop
call
jmp
push
dec
pop
pushl
push
lea
push
lea
push
push
call
add
jl
clc
add
add
xchg
sahf
addb
iret
xchg
std
add
add
xchg
jecxz
add
add
sti
enter
pusha
je
add
mov
nop
add
out
jae
mov
scas
sahf
xlat
movsl
add
fildl
add
out
jns
add
xchg
mov
lea
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
fwait
push
add
add
rcr
add
add
add
jne
pop
imul
pop
fst
fldl
call
add
add
add
add
ja
mov
lea
pop
jmp
push
push
ror
shr
lea
push
or
inc
add
shl
lea
xor
inc
sub
lea
inc
rol
pop
add
pop
push
push
push
lea
push
push
push
push
push
push
call
add
je
add
jmp
mov
add
into
add
add
lds
mov
mov
xchg
add
push
mov
add
je
jnp
add
add
add
add
pop
int
add
addl
jge
sar
into
data16
cmpsb
add
mov
add
roll
add
int3
lea
pop
pushl
push
lea
push
push
lea
push
push
lea
push
push
call
add
push
jge
push
leave
add
add
mov
mov
pop
in
add
add
cltd
loopne
shll
out
movsb
add
add
lds
push
bnd
cltd
add
jge
mov
mov
mov
add
push
add
jb
mov
add
fisubrs
add
add
add
pop
out
add
les
mov
mov
sbb
call
push
push
ror
sub
pop
call
push
push
rol
sub
rol
push
or
inc
add
lea
shl
inc
dec
sub
dec
shr
inc
pop
add
shr
sub
pop
push
inc
inc
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
cmpsb
pop
add
iret
add
sti
pop
xchg
mov
or
add
add
jge
pop
xchg
in
add
add
sbbb
add
std
pushf
mov
xchg
mov
mov
lea
pop
call
push
lea
push
push
lea
push
push
push
lea
push
call
stos
add
sahf
mov
stos
pop
add
mov
xchg
add
nop
jle
mov
push
out
out
mov
xchg
add
bound
test
call
add
pop
push
call
push
push
lea
push
push
push
push
call
subl
div
loopne
fcom
mov
jo
add
nop
lret
lahf
cmp
pop
scas
add
stos
fiadds
add
add
push
add
popa
mov
push
add
add
add
testl
mov
push
add
push
lods
int3
add
jae
scas
add
je
mov
mov
sbb
add
push
push
push
push
push
push
push
push
call
add
add
add
test
xchg
add
add
std
out
stc
add
jecxz
cltd
jnp
add
mov
add
xchg
imul
mov
push
add
ret
xchg
and
push
push
push
push
call
addb
in
pop
js
mov
ljmp
lds
cmpsb
push
mov
mov
cli
out
add
lods
addb
mov
addl
fiaddl
popa
cltd
movsb
pop
add
imul
incb
in
fwait
scas
mov
pop
add
test
add
push
add
fmull
push
push
push
push
lea
push
push
push
push
push
call
cmpsl
imul
imul
mov
stc
fwait
jnp
add
scas
insb
rcr
push
add
add
add
popf
jae
add
test
movsb
mov
mov
stos
push
arpl
add
xchg
popf
scas
add
add
mov
add
add
jmp
add
add
add
lea
pop
pop
pop
push
not
pop
leave
push
rol
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
stc
add
add
loop
cli
mov
add
lods
add
testb
add
xchg
loope
add
jp
add
add
in
xchg
gs
add
add
mov
add
fwait
shll
mov
lea
pop
ret
push
shr
pop
leave
push
add
inc
inc
pop
ret
push
push
push
call
add
mov
addr16
mov
rol
mov
add
add
test
cwtl
add
mov
mov
mov
mov
loopne
add
add
out
lds
push
xchg
add
jge
arpl
add
test
add
xlat
add
aam
bound
push
mov
push
lea
push
push
lea
push
call
addr16
add
xchg
add
xchg
pop
out
mov
mov
lret
xchg
xchg
arpl
jle
add
int3
jns
add
add
add
in
add
adc
jge
add
test
inc
and
push
push
push
push
lea
push
push
push
push
push
push
call
add
addb
add
xchg
add
ret
pusha
mov
jae
add
fdivr
lcallw
enter
pushf
gs
cltd
enter
xchg
stos
popf
add
je
call
cli
add
jne
add
add
jl
flds
call
cld
push
cmpsl
mov
add
faddl
jns
add
mov
lea
pop
jmp
push
dec
add
xor
shr
pop
mov
push
lea
shr
pop
and
push
rol
pop
xor
push
rol
shr
dec
shr
pop
xor
push
push
push
push
push
push
push
call
jno
pop
add
add
in
add
add
js
add
aad
add
add
inc
add
imull
js
jmp
ficompl
push
add
pop
aad
mov
push
add
add
add
lahf
call
add
clc
out
mov
cwtl
leave
out
add
add
jmp
lea
pop
add
xor
push
shl
pop
dec
sub
push
push
call
add
in
pop
rolb
xchg
mov
jbe
mov
add
iret
add
mov
add
add
movsl
add
push
scas
leave
jmp
add
divb
add
add
xchg
stos
gs
mov
lea
pop
jmp
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
add
mov
mov
cmc
push
cmpsb
ljmp
xchg
add
add
push
cmpsb
ljmp
sahf
xchg
jp
sub
test
in
mov
lea
pop
sub
push
pop
pushl
pop
push
not
dec
pop
sub
cmp
jne
push
push
call
pop
add
fiadds
cmpsl
add
mov
add
je
add
out
lret
sti
std
repnz
add
add
jb
add
add
pop
hlt
add
outsl
mov
add
jne
add
sti
add
add
add
add
add
jne
xchg
mov
les
xchg
mov
sar
mov
or
enter
push
push
call
fstp
add
add
mov
cltd
push
out
popf
ret
roll
loop
add
add
mov
hlt
add
xlat
xchg
add
int3
add
add
add
jo
imul
popl
add
xchg
xchg
add
cld
jmp
js
add
add
stc
cmpsb
add
fildll
mov
add
bound
mov
add
testl
mov
lea
pop
sub
push
push
call
leave
add
jo
jbe
addr16
add
jbe
in
ja
fbld
pop
sti
xchg
jnp
iret
loope
add
mov
loopne
les
out
fwait
in
add
add
add
add
xchg
add
divl
add
add
add
pop
popf
push
add
pop
into
stos
add
add
popf
rolb
mov
fmull
pop
mov
shr
push
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
pop
fisubrl
roll
add
jge
add
popa
add
add
add
outsl
mov
addb
mov
add
add
push
aad
pop
add
lds
jo
cld
lea
pop
add
sub
push
not
xor
pop
pushl
push
push
push
lea
push
push
push
push
push
lea
push
push
call
scas
add
bound
out
in
add
add
lret
xchg
mov
mov
add
clc
rolb
fwait
imul
jne
add
add
add
mov
push
ja
mov
add
aam
mov
bound
pop
pop
shr
push
pop
and
push
push
call
add
add
stos
add
mov
add
jmp
add
add
push
int
mov
mov
test
add
add
push
xchg
add
add
popf
insb
cwtl
add
mov
fs
scas
add
mov
lea
pop
sub
cmp
jne
push
push
push
push
lea
push
push
push
push
call
xchg
jmp
push
add
add
fcompl
cld
add
movb
testb
add
add
fiadds
add
addr16
mov
add
nop
xchg
test
add
add
cwtl
push
push
lock
add
xorl
lret
lods
add
and
push
push
lea
push
lea
push
call
ret
js
mov
add
test
push
add
cli
add
add
incb
movl
add
out
leave
sti
aad
jge
ret
sahf
gs
popaw
add
ljmp
mov
push
in
jl
mov
add
mov
lea
pop
ret
push
lea
rol
not
pop
push
mov
push
rol
ror
dec
pop
add
push
push
lea
push
lea
push
lea
push
push
call
scas
shrb
cli
add
pop
out
mov
sub
add
add
pushf
mov
add
imul
xchg
cld
test
leave
push
add
add
test
insb
movsb
aam
add
add
add
in
add
pop
push
push
sub
pop
push
push
dec
pop
push
push
add
pop
push
push
push
push
push
push
push
push
push
push
call
jbe
mov
lods
mov
out
xchg
lods
add
add
add
add
mov
pop
cwtl
add
cli
add
loop
bound
xchg
xchg
xchg
push
lcall
add
add
mov
arpl
pop
add
add
lock
data16
xchg
mov
out
add
add
add
mov
mov
lea
pop
mov
push
inc
pop
lea
sub
push
rol
add
add
ror
pop
mov
shr
push
ror
dec
xor
pop
add
mov
push
push
push
lea
push
push
call
cmpsb
mov
add
add
add
popa
stos
add
add
cld
addb
add
test
mul
pop
xchg
add
ja
add
nop
add
scas
jp
add
add
bound
pop
movsl
pop
js
jns
push
jecxz
nop
imul
push
add
insb
imul
add
add
adc
add
push
push
push
push
push
call
into
ljmp
add
shll
mov
jno
mov
jnp
lods
mov
add
jbe
mov
add
sahf
int
mov
gs
test
add
mov
cmpsl
add
pop
mov
add
push
push
lea
push
lea
push
push
push
push
call
mov
in
add
add
jecxz
pusha
add
mov
enter
add
add
push
xchg
add
call
add
add
jbe
lcall
mov
cli
add
roll
add
xchg
mov
add
add
hlt
lea
pop
xor
push
not
inc
pop
mov
push
dec
inc
add
pop
and
push
inc
pop
rol
rol
push
push
push
push
push
push
push
push
lea
push
push
call
popl
stos
add
addl
add
fdivp
add
test
add
fcompl
in
lock
add
add
add
add
repnz
pop
xor
push
sub
add
sub
pop
inc
push
push
push
call
add
mov
add
add
cwtl
nop
stos
add
add
xchg
loope
add
cmpsb
mov
mov
cmpsb
testb
fld
les
add
lret
add
add
mov
hlt
add
lds
add
fldl
addb
add
jbe
pusha
mov
lea
pop
cmpb
jne
push
lea
push
call
addl
add
mov
add
add
rolb
push
rolb
mov
insb
add
mov
sti
add
add
add
fiadds
jnp
xchg
jle
lock
xchg
add
jbe
mov
fcoml
cld
lea
pop
add
cmp
je
push
shl
shl
pop
add
push
sub
dec
pop
cmpl
jne
xor
push
add
pop
pop
push
pop
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
lahf
rcrl
mov
rolb
jbe
addb
add
rolb
xchg
mov
mov
add
int
add
jb
add
jno
rolb
xchg
mov
add
hlt
lea
pop
pop
pop
push
dec
sub
sub
sub
pop
pop
leave
push
push
call
add
into
mov
add
add
add
stos
shlb
add
mov
add
aam
into
add
cmpsb
add
imul
mov
add
add
jecxz
cld
fisttpl
add
loop
fiadds
add
add
jo
fldl
hlt
push
jo
roll
in
into
add
arpl
rolb
xchg
test
xchg
ljmp
pop
ret
mov
push
add
sub
ror
pop
add
push
push
xor
add
ror
pop
push
add
push
push
push
push
lea
push
call
add
gs
pushf
push
jb
jle
mov
push
xchg
jp
mov
in
add
pop
add
mov
add
les
mov
lods
xchg
add
adc
lea
mov
cld
lea
pop
xor
push
push
push
push
push
lea
push
push
push
call
negb
popa
mov
cmc
stos
stc
push
add
jge
mov
call
enter
mov
movsl
lds
add
cltd
add
shll
add
lret
add
addr16
add
movb
add
std
mov
add
fadds
mov
push
bound
mov
fs
stos
into
add
add
mov
ja
add
test
pop
add
push
pop
testw
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
test
xlat
add
outsl
popf
test
rcrb
add
add
lds
add
imul
add
mov
pop
mov
jecxz
fadds
movsb
add
pop
pop
pop
push
shl
sub
pop
mov
push
lea
push
call
add
add
testl
sti
in
add
pop
add
add
add
add
add
add
flds
stos
imul
add
lahf
mov
jbe
rolb
mov
lea
pop
push
push
inc
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
add
jl
faddl
scas
cli
add
mov
add
int3
in
je
add
sti
jge
popa
add
mov
add
bound
fwait
xlat
add
add
add
push
movb
add
add
jae
add
ror
jae
mov
mov
pusha
add
jne
je
out
mov
lea
pop
xor
push
add
inc
pop
pop
push
shl
not
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
cwtl
mov
push
add
add
cmpsl
add
roll
jp
mov
fcomi
repnz
add
mov
jns
into
out
add
add
add
add
jecxz
add
cmc
jle
shrl
add
movsb
out
mov
lea
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
push
addb
add
popa
add
pop
stos
add
loope
add
repnz
add
fwait
add
push
add
jecxz
push
mov
fs
add
add
stos
mov
std
push
xchg
cmc
add
add
mov
lea
pop
pop
pop
push
push
push
push
push
call
add
jge
pusha
cli
int3
jecxz
out
add
add
jo
fimuls
push
add
add
int3
cld
add
mov
add
mov
int
xchg
popa
pushf
add
testb
add
add
repnz
jb
in
add
add
imul
mov
mov
fmull
ret
push
push
push
call
gs
outsl
xlat
pop
fcomps
add
lods
ror
out
ljmp
int3
les
add
add
add
mov
movsb
add
xchg
add
in
add
add
je
lcall
loop
push
pop
add
add
jno
mov
lea
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
add
out
xchg
push
int3
lea
mov
loope
shr
add
add
pop
lahf
jo
add
add
add
add
add
add
add
stos
sahf
add
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
arpl
jns
add
shrb
mov
mov
add
push
idivl
clc
mov
jle
add
add
in
cmpsb
add
add
mov
mov
nop
add
popa
repnz
lcall
xchg
pop
outsl
add
add
ficomps
xchg
add
out
push
testb
div
add
add
sar
add
add
lea
pop
add
push
push
rol
not
shl
ror
pop
push
push
dec
pop
push
push
add
pop
push
push
add
pop
mov
push
push
add
sub
xor
inc
pop
pop
push
sub
pop
lea
sub
push
dec
pop
mov
push
push
push
push
push
lea
push
push
call
push
pop
addl
adcl
les
icebp
in
add
add
imul
add
mov
fildl
lea
add
frstor
iret
add
add
mov
lea
pop
shr
add
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
scas
mov
add
mov
pop
sahf
add
stos
add
add
add
mov
mov
jnp
add
mov
mov
add
mov
push
data16
sub
pop
js
fsts
cmp
fimull
outsb
push
out
add
pop
lret
jo
notl
push
call
aad
pop
add
je
add
loopne
mov
jno
add
add
pop
add
xchg
add
add
pop
add
iret
push
cmpsl
pusha
mov
in
lret
pop
leavew
fwait
popa
rcrb
cmpsb
push
jp
add
stc
add
pop
pushl
push
rol
sub
pop
popl
push
pop
mov
push
shl
not
xor
pop
add
xor
push
inc
pop
lea
mov
push
lea
push
lea
push
call
add
cli
mov
xchg
xchg
jle
add
jmp
add
add
pop
add
add
jno
add
add
add
add
push
add
mov
add
mov
jl
pop
jmp
add
enter
add
cltd
fwait
fs
add
add
add
pop
pop
mov
lea
pop
add
xor
push
add
sub
pop
rol
push
ror
pop
nop
nop
push
dec
dec
pop
xor
push
push
lea
push
push
call
cld
add
js
add
jecxz
add
scas
mov
add
add
bound
xchg
add
add
mov
stc
add
call
pusha
xchg
lock
mov
cmc
aad
mov
ret
hlt
add
add
into
add
fmul
add
test
add
jle
push
add
addr16
add
jge
pop
lods
add
mov
stos
enter
hlt
lea
pop
nop
push
push
push
lea
push
push
push
call
pop
mov
cmpsb
movsb
add
xchg
fsincos
add
add
stos
xchg
add
add
imul
add
add
rolb
add
flds
add
lods
push
add
aam
fnsave
mov
add
fld
jmp
mov
add
jmp
sbb
push
lea
push
push
push
push
lea
push
push
push
call
add
add
xchg
add
out
add
lahf
push
add
add
xchg
add
shll
ljmp
pop
imul
out
in
loop
push
pop
add
out
lahf
xchg
add
mov
add
fcomp
add
add
mov
lea
pop
inc
push
lea
push
call
add
hlt
add
add
mov
add
pop
fstpt
mov
mov
add
sar
add
add
push
add
add
mov
push
add
rol
add
pop
add
xchg
pop
mov
add
add
arpl
add
popf
addl
add
out
cld
mov
mov
icebp
je
in
add
pop
nop
push
lea
pop
nop
push
push
push
push
call
icebp
add
push
add
mov
out
add
sarb
cmp
add
add
add
movl
xchg
add
out
shll
push
lcall
enter
mov
fsubl
add
add
stc
jnp
mov
hlt
movsl
test
fcompl
xchg
add
xabort
aam
bound
pop
cmpb
jne
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
scas
cltd
add
pop
jnp
add
mov
add
lret
pushf
rcrb
add
iret
add
imul
icebp
add
mov
add
add
into
add
ja
add
shrl
pop
lods
icebp
xchg
lods
push
mov
jmp
add
mov
add
test
add
add
mov
lea
pop
nop
push
push
push
push
call
int
add
push
jae
int3
add
js
mov
add
loop
add
stos
add
lea
roll
rolb
in
lret
scas
add
add
ljmp
pop
nop
push
push
push
push
push
push
call
mov
add
lcall
add
cltd
mov
int3
add
mov
add
int3
jle
cli
aad
add
lret
nop
add
fildl
imul
add
repnz
lret
test
clc
push
out
mov
pusha
sbb
inc
or
test
add
add
test
aas
jg
jns
nop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
add
add
add
leave
add
mov
add
faddl
rolb
add
addr16
roll
nop
cwtl
add
add
add
add
mov
lods
addr16
sti
stos
add
mov
xchg
jb
jb
add
jnp
jno
adcb
add
add
pop
inc
push
rol
dec
pop
nop
push
push
push
push
push
push
push
call
jmp
add
ljmp
lret
cld
add
mov
mov
movsb
out
cltd
jne
add
add
stos
roll
fsubrs
hlt
add
jmp
push
xchg
nop
filds
add
xchg
imul
lea
pop
nop
cmp
jb
push
lea
xor
xor
pop
xor
push
push
push
push
push
lea
push
call
add
mov
add
add
clc
mov
add
pusha
mov
push
mov
mov
add
add
add
add
add
jecxz
icebp
add
add
ret
mov
lea
pop
jmp
push
lea
push
push
push
push
push
push
push
call
lods
je
pusha
rol
rclb
add
add
data16
jle
addb
mov
add
jne
stos
test
in
add
add
mov
jo
mov
mov
add
add
add
imul
add
and
push
and
lea
push
lea
push
push
call
out
mov
add
test
mov
loop
mov
out
add
push
jmp
aad
add
cmc
mov
add
add
mov
lods
clc
add
add
add
cli
add
insb
lret
mov
lahf
js
add
push
add
jbe
mov
mulb
cmpsl
cmc
mov
add
add
addb
fmull
rcll
pop
or
push
call
arpl
jns
add
add
out
add
jae
loopne
fimuls
std
add
push
add
ljmp
add
pop
jp
rclb
out
xchg
lea
xchg
fmull
mov
jb
inc
sbb
not
pop
add
push
inc
sub
not
rol
pop
mov
push
dec
add
pop
xor
push
inc
shr
rol
pop
xor
push
lea
inc
not
pop
shl
push
sub
lea
rol
pop
xor
push
push
call
aam
lret
add
xchg
shlb
fs
fistps
mov
rcr
sarl
add
add
mov
add
add
out
mov
movsb
mov
add
stos
add
mov
add
add
mov
mov
lea
pop
shl
xor
push
lea
push
push
push
call
into
lea
jecxz
rolb
add
mov
lea
add
mov
fmulp
add
jo
add
outsl
add
mov
popf
mov
out
mov
aam
add
add
lahf
add
add
in
add
aam
add
add
mov
add
mov
xchg
add
add
lea
pop
shl
xor
push
add
pop
mov
push
not
not
shl
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
push
call
test
mov
push
xchg
mov
add
stos
add
mov
mov
add
push
add
add
mov
test
add
add
add
cmc
jbe
cld
lea
pop
pop
push
shl
inc
add
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
in
add
ljmp
bound
test
fsubl
add
data16
cmpsb
ja
jae
fiaddl
xchg
add
push
mul
lahf
cmpsl
mov
movl
in
xchg
add
push
lods
mov
mov
into
add
add
add
jne
add
insb
lahf
add
jle
lds
mov
mov
lea
pop
pop
pop
push
add
pop
leave
ret
push
push
push
push
push
call
add
add
pop
add
add
push
mov
fistl
pusha
add
add
popf
add
mov
mov
add
push
rolb
xchg
mov
int3
mov
mov
pop
xchg
add
int
mov
gs
add
add
js
add
mov
lea
pop
push
mov
push
shl
ror
not
pop
push
push
rol
add
pop
push
push
push
shl
not
pop
push
mov
push
lea
push
push
call
popl
mov
in
addl
rolb
shll
add
cwtl
add
fadds
mov
push
add
xchg
add
push
mov
pop
int3
stc
js
add
add
call
mov
lea
pop
mov
push
sub
sub
inc
pop
mov
test
je
push
push
lea
push
push
push
lea
push
call
jp
loopne
xchg
add
int
add
fiaddl
add
mov
fadds
mov
add
xchg
add
push
lahf
add
push
addb
pop
mov
push
push
push
push
push
push
push
call
xchg
mov
add
jne
cmpsb
stos
add
jl
or
xchg
mov
fst
lahf
pop
add
add
pop
stc
cmpsb
add
add
fiadds
add
adc
jp
les
idiv
add
iret
add
call
jp
lahf
gs
mov
jae
push
add
jge
les
testb
jge
add
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
jbe
add
add
cld
add
add
int3
shl
xchg
xchg
push
add
add
hlt
jge
cld
add
pop
add
mov
icebp
mull
popf
imul
add
add
loopne
mov
lea
pop
mov
push
xor
add
sub
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
jo
add
cwtl
out
add
add
out
lea
mov
add
into
rcrb
jno
imulb
in
add
mov
add
add
add
arpl
add
call
cmpsl
add
add
add
add
clc
outsl
int
xchg
je
jno
push
mov
jbe
mov
lea
pop
inc
push
push
push
lea
push
push
push
push
call
jp
mov
add
add
add
mov
add
pop
add
mov
mov
sbbb
add
add
pop
add
add
addb
roll
add
movb
in
cld
arpl
pop
mov
lea
add
add
add
ljmp
sti
add
xchg
pushf
movb
add
add
cmpsb
iret
int
fdiv
jecxz
arpl
rclb
xchg
sbb
cmp
je
push
add
rol
pop
test
je
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
popa
idivl
add
in
xchg
add
add
mov
cwtl
addb
popa
loope
push
scas
shlb
add
xchg
leave
pushf
add
xchg
data16
mov
lea
pop
mov
push
inc
add
shl
pop
inc
push
sub
ror
sub
pop
cmp
je
push
shl
shr
sub
pop
test
jne
push
rol
shl
inc
not
pop
xor
push
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
in
add
pop
add
push
add
mov
mov
mov
add
add
jb
insb
call
add
xchg
mov
in
pop
adcl
add
jmp
mov
add
add
cld
jle
cmpsb
gs
mov
mov
add
iret
gs
out
imul
out
int
add
add
arpl
pop
push
add
pop
pop
push
shr
add
pop
pop
push
sub
sub
shl
pop
leave
push
push
call
add
popf
add
add
mov
jns
notl
fldl
push
fidivl
orl
add
mov
add
faddl
jbe
add
cwtl
test
in
mov
lea
pop
ret
mov
push
lea
not
inc
pop
inc
cmp
jne
push
lea
push
lea
push
push
call
in
add
addr16
mov
xchg
mov
je
jl
add
add
add
rcrb
jecxz
imul
lret
mov
add
add
cmpsb
lret
mov
movsl
mov
add
add
mov
mov
xchg
js
mov
lea
pop
lea
push
push
push
push
lea
push
call
add
je
add
jle
test
xlat
mov
rolb
test
addl
pop
repnz
push
add
hlt
add
call
rolb
xchg
add
jle
mov
lea
pop
mov
test
je
push
pop
mov
push
push
push
call
add
je
bound
mov
pop
add
loope
sarb
gs
add
cld
add
add
fld
js
je
lcall
in
add
mov
add
add
jno
add
in
add
mov
insb
jnp
out
mov
pop
jle
les
movb
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
ja
add
ja
mov
je
lods
pop
jl
add
xchg
add
adcb
add
mov
add
add
add
add
fwait
out
xchg
add
add
jo
xchg
xchg
cltd
ja
add
stos
jo
push
add
add
int3
lea
pop
cmp
jne
mov
push
ror
pop
test
je
push
push
push
call
pop
in
cmpsl
add
addb
mov
mov
add
fwait
sti
push
mov
xchg
add
movb
add
add
xor
mov
add
icebp
les
add
add
in
jae
push
add
test
pop
mov
lock
test
add
push
arpl
hlt
clc
add
add
add
mov
lea
pop
mov
push
shr
pop
add
push
shl
inc
pop
cmp
je
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
test
scas
les
push
add
test
std
faddl
pop
mov
add
add
add
add
add
cmpsl
lahf
loope
add
add
mov
movsb
cltd
mov
mov
cmpsb
xchg
add
add
out
jle
jle
mov
add
mov
ja
int3
lea
pop
jmp
xor
push
ror
rol
pop
pop
push
push
lea
push
push
call
add
test
aad
add
call
pop
into
jbe
add
add
mov
cmpb
add
add
pop
mov
ljmp
add
icebp
lret
jbe
mov
lea
pop
pop
push
push
push
call
enter
mov
add
cld
add
shl
loopne
popa
pushf
stos
pusha
add
mov
mov
rolb
add
add
add
sbbb
fsubrl
ja
add
add
rolb
add
push
add
pop
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
test
add
cmpsl
mov
ret
fadds
mov
scas
lcall
xchg
add
add
addl
into
add
add
add
hlt
jbe
int3
fsubp
mov
test
mov
xchg
jmp
add
in
stos
add
mov
cld
lea
pop
leave
push
push
push
push
push
lea
push
lea
push
push
call
lea
movsl
add
add
pop
loop
ret
mov
add
jbe
int3
flds
add
negl
add
addl
mov
ror
mov
push
jp
ja
xchg
mov
xchg
loop
push
add
jae
mov
add
pop
ret
push
lea
push
lea
push
call
jnp
add
cld
add
popa
lahf
add
lods
add
nop
push
push
add
js
pop
xchg
sarb
faddl
jge
outsl
cld
add
add
add
jp
add
pop
lea
pop
push
ror
add
lea
shl
pop
pop
pop
push
add
rol
xor
dec
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
out
push
add
xchg
add
addb
add
add
jb
add
std
leave
push
add
add
add
mov
rcrl
into
add
mov
jne
add
add
lret
pusha
ret
add
add
add
stc
js
add
je
add
add
test
add
pop
mov
notl
and
ret
push
push
push
lea
push
push
push
call
jne
lcall
js
in
mov
add
cld
lods
sti
pop
cli
incb
xchg
add
add
js
push
addr16
shlb
add
leave
fisubs
push
push
pop
ljmp
add
mov
lea
pop
mov
push
add
ror
pop
pop
push
lea
push
push
push
push
lea
push
call
ljmp
mov
rclb
addb
addr16
arpl
sbb
les
fcompl
add
push
aad
push
push
lahf
add
add
shll
jne
jns
sarb
add
iret
add
add
stos
clc
in
roll
call
mov
aad
in
aam
push
lahf
fimuls
pop
pop
push
push
push
push
push
lea
push
call
jne
push
je
mov
add
jno
add
add
subl
mov
cli
mov
in
aam
mov
add
pop
popl
add
out
xchg
add
add
add
pop
pop
push
sub
shr
pop
pop
push
lea
push
push
push
push
call
ficoml
add
mov
movl
push
cltd
rol
add
add
std
add
roll
xchg
mov
push
add
fnsave
push
movsl
add
mov
lea
pop
leave
ret
cli
js
jb
test
jb
pop
pop
jb
mov
pop
jb
push
pop
jb
adc
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
sub
jge
xchg
inc
inc
out
xor
stc
jb
jno
xor
out
shl
call
jbe
repnz
sbb
xlat
dec
inc
add
addr16
add
xchg
mov
xor
int
push
lret
mov
out
pushf
insb
faddl
or
clc
and
xchg
or
int3
push
pop
mov
mov
jg
or
data16
in
xchg
push
lcall
out
and
push
aas
repnz
sbb
push
mov
repz
shll
pop
or
mov
and
push
dec
or
dec
push
push
jbe
popa
dec
sub
es
mov
shll
imul
jg
scas
xor
lods
fistl
loopne
movsl
sbb
mov
and
inc
cmp
pop
data16
cmp
imul
test
cld
in
test
lods
sti
bound
jb
fadd
add
inc
mov
int3
adc
cmp
and
out
loope
mov
jmp
fildll
dec
movsl
out
in
mov
cmc
mov
xor
sub
lea
insl
cwtl
daa
cmp
lods
mov
jmp
cmp
repnz
ret
push
jl
xor
lret
dec
jne
push
jbe
fcoml
xlat
push
xchg
out
sbb
lcall
stc
dec
mov
cmp
jnp
lret
mov
out
cmp
mov
cmp
lahf
je
rcrl
mov
insb
jne
pop
and
xor
inc
in
xor
imul
and
dec
data16
lret
ret
lods
push
popf
dec
jb
mov
pop
jae
loope
nop
sbb
cmp
pop
cwtl
int
addb
jno
or
fucomi
lds
imul
hlt
mov
movsl
fwait
mov
mov
add
mov
and
mov
scas
mov
mov
and
jno
test
jns
mov
mov
mov
decb
pop
je
ds
xor
inc
push
mov
mov
mov
and
pop
cmpsb
dec
jmp
cmp
js
rorb
daa
lods
js
nop
push
mov
add
jbe
lea
mov
mov
push
fcoml
inc
mov
stc
cs
pusha
into
lds
pop
cmp
mov
sub
jnp
add
ret
lds
in
orb
mov
xor
leave
cmpsl
mov
ret
gs
fwait
mov
sub
mov
lret
mov
mov
sub
jns
inc
shufps
push
or
repz
rcrl
shll
push
sahf
push
stos
shl
je
in
cmpl
push
lock
shrb
das
sub
lret
int
imul
je
push
stos
cmp
pop
mov
testl
fwait
cmp
dec
mov
mov
insb
lods
ficompl
cmp
rcl
in
test
in
xlat
sub
jne
mov
mov
add
add
or
out
std
imul
aad
repz
cmpsl
sub
in
fnstcw
inc
mov
aas
and
js
inc
ds
sti
cmp
inc
dec
mov
loop
mov
mov
test
mov
fs
scas
gs
insl
std
adc
inc
jns
clc
fsubrl
out
mov
pop
sub
aam
xchg
adc
lds
stos
inc
lods
popf
fildll
imul
call
inc
push
pop
mov
xor
inc
xchg
loope
mov
mov
and
dec
flds
xor
mov
shlb
mov
icebp
pop
ret
mov
fists
iret
sub
pusha
and
sahf
leave
xor
sarb
push
cmpsb
mov
outsb
fs
stc
test
loope
fmull
hlt
mov
pusha
jne
pop
fdiv
das
outsb
mov
movsl
jno
dec
ja
dec
insb
jmp
xchg
das
pop
sbb
pop
xor
adc
ret
nop
push
pop
testl
jge
movsl
cmp
jb
jmp
dec
adc
jne
or
mov
sub
mov
mov
jno
sub
mov
insl
clc
pop
ja
push
xchg
sbb
pusha
je
dec
out
das
mov
add
mov
sub
dec
xchg
xor
call
jno
stc
cmp
xchg
xchg
loopne
cltd
mov
dec
int
sti
jle
repnz
cmpsb
or
jne
leave
push
mov
lret
jb
sub
inc
addb
mov
loope
das
pushf
gs
and
mov
in
daa
dec
sbb
sbb
imul
xchg
pop
or
dec
cmpsb
lods
stc
sbb
out
jo
movsl
jp
loopne
jp
inc
arpl
xchg
nop
adc
int
mov
dec
jecxz
mov
jl
mov
enter
mov
gs
movsl
xor
faddl
cmpb
add
dec
dec
sub
lret
std
pop
pop
xor
inc
cmp
sub
add
movsb
fidivl
fisubrs
fdivrs
sbb
push
loopne
xchg
add
mov
mov
mov
repnz
mov
mov
bound
aad
mov
clc
adc
aaa
leave
and
mov
sahf
scas
repnz
fistpl
jecxz
sbb
xchg
push
sbb
mov
mov
inc
push
pop
aas
push
repnz
adc
aas
or
sarb
sub
testl
xchg
cli
in
xor
sbb
push
cltd
jns
mov
shll
movsb
xor
pushf
mov
in
adc
pop
mov
dec
mov
rcrb
lahf
push
xor
fldcw
test
push
icebp
gs
add
xor
xchg
jge
pop
in
testb
into
xchg
add
stos
jae
cwtl
jbe
and
imul
stc
loopne
jo
int3
in
inc
aam
enter
push
enter
or
test
stos
or
and
sbb
fimuls
nop
fistpll
xchg
and
xchg
add
jbe
or
xlat
inc
add
cmp
inc
inc
dec
xor
xchg
push
and
mov
xchg
or
fidivrl
or
mov
push
mov
popf
mov
xor
shl
push
out
and
push
xchg
in
icebp
shlb
add
std
rcrb
cmp
xor
adc
test
pop
test
mov
vpsrlw
lea
xchg
loop
dec
push
push
ret
mov
cmp
ret
mov
lock
xchg
shrl
data16
cmpsb
inc
dec
mov
push
outsb
inc
cld
cmp
repnz
inc
lock
call
gs
sbb
dec
cmpsl
clc
and
lea
add
stc
push
rcr
fiaddl
lods
mov
mov
stc
movsl
je
nop
fmul
mov
sbb
fs
add
addr16
xchg
xor
scas
inc
lea
into
dec
dec
pop
pop
dec
push
inc
sub
push
mov
mov
push
cmp
pushf
pusha
push
loop
fisttpll
sub
pop
pop
push
pop
daa
dec
jno
and
and
cmp
stos
xor
lods
mov
outsl
into
pop
cmp
push
adc
mov
mov
pop
dec
add
mov
push
or
mov
pop
push
xor
sub
mov
leave
fstpt
in
xlat
test
lock
fsts
xorl
push
int
jbe
ret
dec
ljmp
sti
jle
ret
pop
cmp
inc
gs
ja
fildl
adc
add
or
push
cmp
shlb
mov
andl
pop
cli
movsl
mov
in
ret
xor
mov
in
inc
jo
mov
gs
xor
mov
add
xor
cld
fbstp
jo
mov
hlt
test
dec
aas
mov
fisubrl
push
push
xor
rorl
mov
lcall
add
mov
movb
jle
dec
call
jo
cmp
cmp
shlb
xlat
repz
dec
mov
adc
cld
push
cmp
add
mov
jle
imul
push
loopne
push
push
pop
sub
xchg
jecxz
sub
hlt
cltd
das
xor
xchg
jmp
or
ds
jg
mov
pop
mov
imul
and
jl
mov
mov
sbb
in
int3
insl
andb
inc
and
outsb
dec
shll
mov
clc
in
into
cs
in
sub
push
out
or
popa
dec
adc
push
test
mov
jb
or
dec
mov
dec
jle
mov
adc
rcrb
jbe
fneni(8087
add
mov
and
cmp
mov
loope
in
mov
es
add
sbb
jb
and
sub
adc
insl
xchg
jp
repz
mov
js
mov
popf
add
je
push
ret
pop
aam
sbb
ss
outsb
rclb
clc
mov
into
fnstsw
xchg
cmc
xchg
jp
fwait
shll
cmp
push
adc
cltd
xchg
insl
lods
arpl
mov
inc
test
ret
mov
mov
mov
pusha
shl
sarl
dec
insl
add
pop
fistl
cltd
or
test
push
push
mov
xchg
ds
pushf
or
dec
stos
sbb
shrb
dec
cmc
loope
out
mov
insl
cmc
sub
mov
jmp
sub
negl
add
sub
mov
and
mov
ljmp
push
xchg
dec
adc
imul
sub
jbe
jg
mov
jno
jmp
dec
adc
nop
mov
vaddsd
or
dec
shlb
mov
cmp
daa
test
dec
imul
xchg
cmc
push
fdivrl
fcomp
xchg
flds
movsl
outsl
push
mov
xchg
or
gs
push
and
inc
cmp
fwait
dec
pop
into
arpl
xor
sbb
clc
dec
or
and
subb
aaa
sbb
xor
jae
aad
das
mov
jns
lock
insb
movsl
es
push
jno
xchg
rorl
inc
dec
loope
ja
lea
pusha
push
mov
daa
lret
movsl
push
add
es
ljmp
mov
negl
sbb
jno
out
ror
jle
pusha
stos
sbbl
push
push
addl
insb
xchg
mov
sub
ret
xor
push
mov
pop
rorb
test
xchg
xchg
pop
test
jp
sbb
bound
pop
enter
loopne
sbb
inc
shl
cld
xor
inc
jae
movsl
into
int3
fwait
call
xchg
rorb
adcl
es
repnz
pop
icebp
movsl
ss
loopne
mov
fnstsw
adc
aaa
push
ret
lret
push
xchg
arpl
ljmp
cmpsw
or
fistl
or
lds
push
mov
or
iret
sub
imul
mov
xchg
mov
shlb
rorl
arpl
jae
fnclex
xchg
out
mov
mov
add
jmp
cmp
jae
les
jl
stos
lods
dec
lahf
sbb
nop
or
or
loope
inc
add
xor
jle
xchg
sbb
push
cld
pop
mov
jne
cmpsl
jb
repz
mov
popa
and
mov
vphaddubd
cld
mov
add
pop
aad
sbb
inc
stc
ror
mov
clc
mov
push
daa
mov
jb
iret
push
sub
lods
outsb
into
cmp
pop
in
mov
inc
sbb
insl
add
pop
xor
test
movb
fildl
pinsrw
lods
push
pop
jmp
add
scas
cmp
push
jge
xchg
sub
mov
outsl
leave
arpl
frstor
jns
fs
adcl
push
lods
insl
jp
or
loopne
fsincos
mov
fwait
dec
push
ljmp
js
shl
mov
psllw
fidivs
or
adc
push
imul
mov
inc
push
je
loop
xor
adc
cmp
roll
rol
xchg
sbb
mov
pop
jne
divl
inc
mov
popl
ds
mov
xchg
es
in
fadds
cmc
jecxz
mov
xor
mov
mov
dec
push
sbb
sub
int3
cmc
in
popa
xchg
hlt
inc
dec
xchg
hlt
mov
or
stos
mov
dec
pusha
int3
xchg
idivb
mov
arpl
xchg
test
push
jle
jbe
inc
dec
outsb
jo
xchg
sarb
fs
mov
and
push
mov
ja
test
lds
in
lods
push
cmp
mov
add
push
mov
shlb
xor
fsub
pop
jl
mov
add
xlat
andb
imul
out
repnz
add
push
adc
jo
dec
and
into
add
dec
push
pop
mov
and
xchg
sub
rol
push
pop
xchg
pop
xchg
dec
inc
fsubl
dec
jo
dec
lret
jg
movsb
pop
xor
adc
shlb
jecxz
sub
pushf
mov
imul
sbbl
add
lret
mov
mov
adc
stos
movsb
stos
pop
sbb
rep
mov
and
imul
test
repz
hlt
jnp
xchg
lret
and
jo
sub
lods
or
xlat
nop
add
lods
nop
clc
es
sub
cld
mov
adc
inc
and
or
out
adc
icebp
jmp
enter
jae
fwait
incl
pop
jb
in
inc
push
negl
leave
dec
inc
mov
push
andb
mov
jb
shrl
xchg
and
mov
cmc
lahf
xor
push
pop
incl
outsl
lods
or
mov
inc
cmpsb
push
repnz
into
sbb
les
pop
or
mov
push
or
sbb
dec
mov
pop
outsl
push
iret
cmpb
lret
bound
fidivrs
and
sub
in
inc
pop
ja
sub
cmp
mov
test
mov
jnp
lahf
mov
pop
cs
stos
fdiv
lds
fcoml
ret
mov
jne
rcl
imul
mov
cpuid
inc
scas
lea
xchg
or
and
popa
nop
xchg
pop
insl
push
js
mov
shr
cwtl
pop
sbb
inc
sub
pop
sti
lock
aaa
mov
push
stos
hlt
popf
movsb
sub
push
decb
mov
dec
mov
add
dec
mov
mov
shrb
mov
add
ret
dec
daa
movsb
insl
cmpsl
negl
fidivl
mov
mov
mov
jl
cmp
ret
mov
push
subb
and
and
xchg
adc
pop
aad
cmp
ja
in
iret
xor
out
lods
xchg
ret
push
aam
repnz
mov
std
push
pop
pop
ret
cmp
or
or
ja
ljmp
movsl
lret
es
es
sarb
loope
test
adcb
pop
xchg
mov
dec
mov
fiaddl
xor
jb
mov
xchg
out
ljmp
iret
push
mov
imul
lahf
dec
mov
pop
cmp
mov
jae
popa
or
iret
mov
pop
repz
loopne
cmp
lods
pop
sub
push
fcoml
ret
adc
ret
imul
repz
lods
gs
adc
int3
inc
pop
mov
negl
jl
sbb
sbb
imul
sbb
xor
mov
jmp
int
sbb
test
cmp
movsl
and
or
lret
cmp
mov
jbe
jb
fcmovb
push
xchg
adc
ror
pusha
ss
mov
adc
or
push
fisttpl
mov
arpl
sbb
or
sub
xor
es
imul
popa
push
dec
addr16
ljmp
lcall
adc
int3
out
mov
and
and
out
jmp
jp
cmc
rorb
sbbb
stos
mov
add
test
iret
sbb
rolb
sub
add
push
loope
pop
inc
test
movsl
sbb
cmp
add
xchg
in
pop
mov
stc
dec
cs
loope
jae
insb
cmpb
ljmp
xchg
out
out
mov
data16
inc
fs
adc
add
cmp
xchg
xor
testl
arpl
in
xchg
sbb
mov
out
cmpsb
adc
mov
out
insb
out
test
aad
ja
inc
es
push
ja
cmp
lret
int
xchg
sbb
sbb
push
pop
inc
imul
sbb
xor
rorl
dec
lcall
sbbb
jno
sti
mov
scas
lahf
mov
or
jae
push
sub
xchg
int3
and
pop
cwtl
add
xor
cld
jno,pn
or
xchg
dec
cmpb
mov
and
sbb
test
sbb
or
xchg
or
fldcw
adc
sub
sti
push
pop
movsb
pop
je
aas
out
xlat
enter
loope
lahf
cld
cmp
pop
dec
or
lock
sbb
pop
push
cmp
divb
sub
ret
xlat
jge
test
jg
test
mov
jecxz
pop
stos
popf
addr16
inc
int3
mov
cwtl
xchg
jmp
pushf
or
int
cmp
je
adc
and
pop
dec
mov
xor
push
jmp
shll
or
xchg
push
sub
sbb
mov
mov
leave
movl
stos
jg
jecxz
insl
cld
push
test
jmp
push
xchg
pop
sub
iret
or
sub
data16
xor
les
dec
sbb
xabort
test
clc
out
mov
aad
mov
stos
loopne
cmpsl
dec
test
and
test
sbb
test
push
inc
arpl
xchg
outsb
sub
fwait
lea
cmp
add
push
cmpsb
lret
and
rcl
mov
xchg
movsb
jle
push
jb
out
mov
mov
aam
fs
dec
loopne
mov
sub
test
scas
ja
bound
aas
cmp
das
outsl
mov
xchg
or
push
and
bound
ss
testl
jl
imulb
push
mov
lahf
inc
cmp
mov
in
mov
in
pop
ret
pop
mov
inc
into
push
fs
in
rol
or
lods
int
push
xchg
sbb
adc
xor
cmp
xorl
jb
pop
std
xchg
fwait
adc
adc
add
loop
sbbb
bound
fucomi
mov
mov
jl
adc
pop
sahf
addr16
lds
sbb
out
jo
sar
cmp
push
pop
mov
out
and
in
ds
and
pop
ds
cwtl
dec
lcall
adc
sub
stc
xchg
imul
jae
decb
mov
icebp
stos
mov
js
jl
shll
or
dec
jecxz
les
iret
dec
std
inc
pop
push
xchg
loop
clc
inc
jae
movsl
ljmp
ret
imul
mov
mov
pop
shl
imul
in
std
pop
imul
dec
test
push
sub
fyl2x
lcall
dec
dec
daa
xchg
mov
xchg
fs
push
jno
xchg
lahf
in
loope
leave
negb
mov
cs
mov
test
lcall
mov
sar
aaa
jge
xor
ja
push
xlat
sarb
inc
adc
pop
aas
add
stos
in
loop
add
adc
pop
and
stos
dec
fadds
inc
inc
push
ret
stos
call
inc
or
icebp
add
adc
add
jge
and
cs
xchg
mov
pop
mov
call
cmp
cltd
js
lret
xchg
xchg
scas
mov
addb
test
cwtl
xchg
xor
fisttpll
scas
scas
fisttpl
adc
insl
dec
pop
xchg
sbb
xchg
pop
int3
cmp
xlat
mov
ja
shl
mov
call
rorb
test
mov
xchg
push
fists
outsl
push
scas
cmp
xchg
gs
aas
sbb
mov
stos
in
adc
ja
lahf
cli
push
ficompl
push
inc
cli
and
hlt
dec
push
dec
pop
xlat
sbb
icebp
xchg
push
lret
ss
out
xchg
cmp
inc
push
inc
movzwl
insl
lea
insb
pop
out
xchg
jl
jp
or
int
fcmovnu
lea
je
imul
arpl
movsb
cmp
rorl
adc
out
adc
inc
cmp
cmp
clc
imul
fsubs
or
jmp
sbb
sbb
pavgw
rcrl
aad
mov
aam
xchg
dec
or
pcmpgtw
xchg
stc
pop
stos
rcrl
mov
push
dec
popf
ret
or
outsl
or
mov
mov
pop
adc
pop
test
out
cld
sub
jl
gs
pusha
push
sbbl
sbb
add
test
clc
out
mov
adc
call
stc
aad
aas
repz
push
imul
rorl
data16
inc
loop
ljmp
int3
pusha
pusha
xor
pop
mov
jno
push
scas
js
icebp
lret
fldl
in
cmpsb
shll
jnp
inc
and
jbe
push
xchg
push
ret
mov
stos
clc
cmp
test
and
divl
mov
imul
jecxz
or
cmc
mov
pusha
jge
or
xor
bound
dec
fldcw
adc
ds
cld
aas
push
loope
jmp
push
cltd
inc
sub
and
cltd
rcrb
sbb
adc
push
test
push
xchg
shlb
repz
mov
cli
lds
dec
out
and
adc
scas
adc
mov
jne
pop
mov
jb
lock
aas
cmp
xor
enter
xorb
enter
add
jae
adc
xchg
stos
in
out
cmp
call
add
push
mov
push
fistpll
cmp
push
mov
daa
lock
stos
mov
mov
insl
pop
int3
cli
mov
sbb
fnstsw
jmp
jg
jbe
aam
cmp
sti
int
pop
mov
pop
push
ja
xlat
loopne
jmp
mov
xchg
inc
ljmp
rorb
pop
cld
aas
jbe
filds
pop
dec
lret
fsubrp
and
nop
test
sar
sub
inc
cmp
outsb
lret
into
adc
inc
loope
lds
mov
cld
repnz
mov
inc
das
lcall
adc
mov
les
sbb
out
sahf
sbb
cmp
mov
mov
stos
add
aaa
add
sbb
add
adc
insb
gs
mov
loop
cmp
and
xchg
jb
mov
xchg
xchg
or
cli
jno
inc
push
and
jnp
jle
sbb
and
adc
lcall
mov
mov
xchg
and
adc
dec
stc
fsubrl
clc
ret
jl
jbe
loopne
pop
clc
out
ja,pn
sbb
push
popf
mov
xchg
out
mov
mov
cmpsl
ss
int
adc
imul
pop
lods
jg
psubq
rcl
xchg
xchg
call
dec
lods
shrl
cmpsb
and
add
std
fcmove
xchg
aaa
pop
or
pushl
insl
enter
jge
push
push
xchg
loop
add
inc
pop
xor
lock
js
jnp
stos
insl
inc
sarb
dec
lds
jne
jmp
lods
sub
cmpsl
mov
push
add
popa
mov
xlat
lods
inc
xor
xor
fwait
dec
inc
mov
test
inc
jp
outsb
loope
pop
dec
or
cmp
mov
je
inc
shll
daa
pushf
pusha
scas
fwait
mov
jo
daa
cmpsb
jns
ja
sbb
ss
aad
sbb
add
in
and
mov
add
dec
mov
ja
jmp
push
lds
jb
and
mov
push
xchg
sti
add
out
fidivrl
mov
xchg
push
imul
leave
test
ljmp
xchg
cmc
push
xchg
sub
lcall
pop
jl
shll
test
int
xchg
sbb
push
je
jle
mov
rcrl
jno
jmp
mov
inc
fwait
nop
push
mov
mov
or
pop
icebp
lea
mov
popf
test
rolb
jns
fstp
push
repz
sub
mov
lock
dec
inc
sbb
push
das
roll
cmp
jne
sub
insb
rcr
shrb
push
shll
xchg
sbb
cld
out
or
jne
in
or
xlat
dec
in
mov
ffree
push
xlat
xchg
sti
cmp
adcb
add
out
mov
pop
adc
jge
scas
mov
lock
jnp
add
sbb
cwtl
mov
rorb
push
dec
adc
mov
jle
mov
adcb
cltd
adc
sub
lds
enter
pushl
mov
pusha
sbb
js
pop
inc
in
push
movsb
fs
imul
mov
cmc
pop
ljmp
mov
push
out
or
dec
ljmp
cmp
adc
jne
and
xor
pop
adc
lds
pop
int3
movl
jg
mov
xor
lods
mov
jmp
pushf
inc
ja
push
stc
lods
leave
subl
pop
or
pop
xlat
rclb
push
push
outsb
or
xchg
cld
or
xchg
fwait
xor
mov
cmp
push
mov
mov
mov
and
scas
mov
std
pushf
fdivp
test
lods
adc
ljmp
mov
cli
shr
ds
push
adc
adc
inc
fst
inc
cli
stos
out
ja
out
pop
xchg
push
mov
lods
lods
pushf
into
sbb
pop
mov
add
mov
ds
cld
aad
adc
arpl
mov
sbbb
sub
pop
stc
xchg
cmp
lods
fstps
jecxz
mov
out
cmpsl
pop
rcr
pop
sbb
push
add
mov
add
jnp
arpl
push
mov
pop
mov
push
test
cmp
cltd
rcll
pop
loopne
xor
push
lahf
ljmp
inc
pop
in
shrb
inc
nop
pop
push
push
or
into
pop
cmp
enter
in
loope
pop
sbb
sahf
divl
adc
xor
mov
ret
ja
pop
dec
xor
mov
mov
mov
xchg
mov
lcall
jns
and
arpl
aad
subb
es
push
push
std
pop
jle
out
ret
cmp
jmp
jg
mov
stos
int3
sub
sbb
jae
iret
xchg
mov
or
push
loopne
cmp
push
sub
data16
pop
push
inc
sbb
sahf
cmp
in
xchg
push
mov
adc
lahf
dec
xchg
or
aas
push
jae
inc
jmp
enter
out
aaa
lret
and
cltd
pop
inc
push
popf
out
lds
rcrl
vmovddup
mov
push
pop
gs
add
enter
sti
arpl
cmp
ss
arpl
movsl
jne
or
sub
or
adc
xor
rol
pushf
sub
in
jbe
sub
inc
push
add
xor
jnp
lret
pop
pop
cmc
loop
sbb
jnp
cli
lret
stos
sbb
aam
mov
insb
push
daa
js
lahf
jns
dec
or
dec
sbb
or
or
mov
aam
sbb
dec
jne
cld
sbb
or
shlb
pop
add
lea
rcr
dec
inc
cwtl
aam
push
sbb
xchg
push
lods
ljmp
xchg
inc
fwait
mov
les
stos
mov
mov
scas
pop
dec
xchg
sarl
aaa
cmp
fidivs
sbb
or
cmp
imul
das
xchg
adc
shl
sbb
sahf
xlat
sbb
add
sub
ret
fstpt
test
iret
jmp
aad
push
add
push
sub
cmp
call
into
fsubrl
mov
sub
sbb
leave
outsl
lock
in
out
imul
mov
lods
add
xor
ja
mov
outsl
cmp
add
rcl
mov
and
pop
das
icebp
std
popf
xor
test
popa
cld
mov
push
ret
xchg
sub
sbbl
ret
and
mov
repz
or
fistpl
pop
lret
push
jno
jb
add
aaa
or
mul
fldcw
scas
ret
pop
mov
jo
popf
mov
add
mov
cwtl
imul
mov
mov
xchg
xor
and
fisubs
sub
jmp
push
pop
and
int
jnp
cmp
shld
mov
mov
xor
cmpsb
shlb
adcb
dec
adc
and
out
nop
inc
stos
jns
xchg
sar
jo
out
pop
add
arpl
divl
pop
and
fcomps
adc
sbb
shrl
out
pop
lahf
mov
dec
pop
pop
sbb
cmp
insl
dec
and
clc
mov
sub
jmp
mov
nop
pop
mov
mov
mov
in
pop
push
notb
outsb
mov
repz
adc
sbb
adc
mov
cld
gs
inc
movsb
jae
or
sti
mov
pop
stc
ror
pop
divb
ja
cmp
shrb
test
mov
mov
fnstcw
fisttps
std
stos
mov
lret
sbb
icebp
ljmp
inc
fs
sub
pop
xchg
sub
ss
es
xchg
shlb
and
pop
add
mov
push
leave
add
movsb
cmpb
or
stc
pop
mov
jecxz
scas
roll
lret
scas
out
xchg
cltd
mov
jne
scas
cmp
or
cmp
mov
jns
rcll
cmp
ror
in
shll
push
jns
dec
sti
cmp
or
sub
and
leave
mov
out
subl
loop
mov
adc
stos
loop
sahf
inc
aam
shlb
cmc
rcrb
test
outsl
cmp
inc
jb
out
rol
shlb
data16
jle
mov
mov
pop
pop
or
aam
popa
jle
aas
adc
xchg
jmp
daa
sbb
and
popa
test
xor
xlat
out
rorb
fwait
shll
icebp
sar
int
jno
xor
pop
cltd
add
mov
cmpsl
push
jl
fnstenv
and
aam
shrl
out
and
mov
daa
aaa
cmp
repnz
icebp
pop
sbb
push
add
push
dec
add
mov
add
mov
sbb
inc
cmpsb
xchg
iret
nop
stc
adc
pop
lahf
dec
iret
and
and
mov
cs
mov
fwait
jb
fsubrs
cltd
es
xchg
add
dec
lea
fwait
mov
xchg
mov
aaa
imul
mov
push
rcl
dec
fnstcw
jns
and
in
ret
cmp
out
mov
xchg
faddl
or
jns
incb
das
sbb
pushf
or
std
and
dec
xchg
mov
push
push
aam
pop
adc
pop
add
add
jnp
or
and
pop
mov
or
sub
orb
jns
lea
sub
push
xchg
mov
mov
or
lret
gs
in
hlt
and
subb
mov
rclb
pop
mov
jecxz
sbb
int3
popf
or
imul
jnp
mov
sahf
xchg
fcompl
nop
sub
sbbl
divb
sahf
xchg
mov
das
adc
daa
mov
fs
hlt
push
popf
cmp
fimull
popa
sar
push
add
inc
mov
pop
jo
je
popa
dec
jns
mov
iret
leave
ud2
mov
iret
in
jmp
adc
sub
shrl
lods
cmp
mov
mov
imull
xchg
jnp
xor
mov
fimuls
ret
jge
xchg
orl
outsb
xor
fs
push
jg
cmp
insb
inc
shll
test
xor
sti
aad
fsubp
push
out
pop
hlt
aam
cmc
cwtl
jmp
sbbl
lds
xlat
ret
sub
and
jnp
lods
popa
arpl
psubusb
loope
add
adc
push
adc
xlat
in
mov
stos
mov
mov
aas
dec
incb
je
sub
xchg
mov
stos
bound
fildll
sar
or
inc
xchg
sbb
or
mov
or
out
cmp
rcrl
mov
push
xchg
cmc
jmp
les
cli
cltd
icebp
jns
and
jno
out
adc
push
cmpsl
js
scas
jnp
mov
lret
iret
cmpsb
dec
aam
fisubl
stos
fs
daa
mov
pusha
pop
jnp
daa
mov
out
xchg
mov
jge
ret
or
lahf
or
and
inc
jae
enter
andl
pop
xchg
adc
sub
pop
adc
testb
stos
outsb
stos
sub
mov
add
aas
sub
mov
and
jmp
push
dec
lcall
cltd
push
stos
mov
es
xor
lahf
stc
cwtl
mov
sbb
push
push
lret
cli
rcl
jnp
movsb
mov
sub
loopne
mov
sub
icebp
add
cli
xor
and
in
repnz
and
cmp
add
push
adc
fwait
out
test
insl
shr
jns
outsl
nop
movsl
dec
scas
fsubl
xor
mov
jge
pop
sarb
xchg
push
sti
push
les
lock
pop
ftst
fdivl
sbb
das
push
push
sbb
push
scas
pop
movsl
add
mov
dec
sti
adc
add
ror
cwtl
cmpl
insl
jns
add
xchg
fdivl
stc
and
negb
inc
andb
add
mov
inc
cmpsb
fs
mov
and
lods
pop
mov
addl
jno
push
cmp
push
cltd
sahf
xchg
jge
test
mov
in
addr16
loop
mov
pop
sbb
test
mov
in
aad
mov
mov
cmpb
sbb
inc
or
aaa
pop
clc
mov
pop
fsubs
mov
test
inc
ret
mov
push
add
sbb
and
aad
out
xchg
push
int
cmp
lock
das
mov
pop
xchg
aam
xchg
cmp
add
cmpsb
repz
xchg
xchg
adc
sbb
iret
mov
shufps
mov
sbb
jg
sub
test
dec
sbb
mov
xchg
lds
jmp
enter
pop
sub
test
adc
xchg
scas
and
mov
lods
out
jle
jge
fstps
pop
push
jp
lahf
cmp
mov
mov
cli
cli
xlat
adc
icebp
jo
inc
cmp
in
nop
loopne
ja
xchg
dec
push
jbe
mov
lock
adc
dec
es
mov
sahf
cmp
out
push
mov
sub
push
out
aaa
mov
xchg
ret
and
cltd
lods
pop
ret
jl
or
cmc
fisttpll
sub
sbb
jb
push
push
fs
push
cmp
lret
push
sbb
push
add
fcoml
test
lods
jbe
ljmp
and
lea
out
mov
sub
xchg
ret
and
sbb
mov
pop
lods
lods
shlb
aam
cmp
xchg
dec
inc
notb
iret
xchg
or
iret
es
inc
or
push
sub
aas
jecxz
jb
cmpsb
mov
int
sub
fs
mov
rcrl
pop
mov
sbb
sub
dec
and
cmp
or
filds
dec
push
push
xchg
jle
xor
ljmp
inc
and
test
call
mov
inc
cltd
repnz
in
addr16
mov
mov
xchg
jbe
push
repnz
cmp
fisubl
pop
loope
mov
inc
ljmp
push
je
jge
mov
mov
dec
into
popa
jo
cltd
daa
call
jnp
sarb
mov
test
fisubrl
add
sarb
stos
mov
sub
mov
mov
cmpsb
mov
pushf
ret
sub
cmp
js
jl
xchg
add
jle
sbb
pop
scas
or
xchg
or
jg
inc
jns
jge
jecxz
cmp
sahf
out
adc
sub
dec
test
cmp
dec
std
sbbl
mov
xorb
pop
popf
popa
or
test
inc
pop
adc
mov
xor
push
and
icebp
sbb
mov
mov
xlat
sub
cmc
andb
int
push
lcall
push
cli
dec
daa
fldcw
xor
cmp
lahf
mov
in
push
jns
vaddpd
int
ss
cmp
out
lret
pop
fisttpl
push
addl
add
es
in
decb
test
mov
jb
out
ret
sub
mov
push
mov
icebp
add
movsb
inc
xor
frstor
mov
pop
out
fstpt
push
dec
pop
push
push
in
jne
or
and
mov
cmp
iret
mov
mov
pop
push
ss
cmp
dec
or
sbb
pop
int3
div
scas
insl
sub
in
cmp
or
dec
cltd
or
push
cmp
or
push
cs
jp
icebp
and
jae
sub
or
out
cmp
out
xchg
lods
cmpsb
popf
dec
arpl
mov
xchg
adcl
sub
mov
aad
out
das
jp
push
push
mov
das
dec
xor
shlb
movsl
sti
jno
pop
pushf
sub
xchg
xor
outsb
out
insl
fldcw
xchg
push
cmp
leave
icebp
mov
clc
mov
cmc
lahf
outsb
xchg
xor
cmp
bnd
in
sub
pcmpeqb
es
jbe
adc
mull
shll
sub
fsubl
loope
popa
xchg
xchg
leave
mov
xor
je
cmp
js
lahf
call
fs
cmp
pop
dec
ds
std
pusha
dec
mov
addr16
and
enter
jp
lds
mov
mov
lods
mov
mov
test
mov
test
mov
push
inc
cltd
shll
mov
iret
cmpsl
scas
mov
jecxz
mov
sub
sbb
jne
pop
leave
sbb
sbb
xchg
sbb
lcall
rol
pop
rol
and
lea
jnp
sarl
fiadds
cwtl
hlt
dec
mov
jl
or
pop
add
les
lret
mov
cld
sbb
mov
cmp
jg
mov
pop
push
inc
lret
xor
fs
inc
addr16
sti
jge
jle
dec
mov
loop
loope
ret
dec
xchg
jnp
mov
push
push
push
in
jmp
in
adc
into
out
jecxz
jnp
adc
jge
mov
out
adc
lods
shl
gs
clc
cmp
jl
incl
out
lcall
sub
call
sub
sbb
jl
adc
movsb
inc
push
out
adc
jae
mov
xchg
sub
jecxz
sub
repz
gs
cmp
mov
dec
push
pop
pop
sub
mov
mov
and
inc
lret
and
add
sub
inc
add
into
pop
lods
arpl
movsl
fldcw
shll
in
xor
or
mov
inc
lea
dec
sbb
lret
inc
enter
cmpsl
cld
xchg
xchg
je
pop
popf
lahf
jns
bound
fs
xchg
mov
cld
jg
push
cmpsl
inc
cmp
jmp
je
xchg
xchg
fnstsw
pop
aaa
mov
popf
dec
jmp
test
xchg
push
out
movsl
stos
iret
xchg
inc
out
pop
push
push
sub
xchg
mov
mov
lret
xor
inc
outsb
sbb
pop
dec
stos
push
cmp
or
sub
aas
push
jmp
sbb
cwtl
cltd
push
int
mov
cli
fldenv
cld
lahf
lret
mov
icebp
jge
cmc
pop
pop
push
and
neg
data16
in
lods
sbb
mov
lock
jne
inc
enter
aad
mov
dec
in
fs
lds
lea
in
add
pop
in
and
shl
xlat
pop
or
pusha
xor
int
mov
mov
sub
xchg
jp
sub
ljmp
mov
pop
sbb
test
dec
inc
nop
cwtl
stos
xchg
xchg
push
stos
dec
sbb
call
cmpsl
movsl
and
or
xchg
rcr
jge
mov
adc
dec
xchg
push
js
test
jecxz
sub
sub
subb
out
sub
jae
scas
ret
fwait
push
hlt
jno
push
push
add
mov
aaa
sarb
inc
cli
daa
push
test
inc
jno
dec
hlt
dec
cmp
sbb
sbb
jo
out
mov
add
inc
sbbl
inc
adc
je
loopne
cmp
fucomi
daa
outsb
lret
stc
das
mov
loop
dec
mov
mov
into
leave
push
pop
mov
push
adcl
inc
xor
jns
mov
sub
cmpsl
testl
and
xchg
movb
sub
rclb
xchg
fwait
mov
mov
inc
test
or
addr16
fwait
add
ret
lret
out
pop
aaa
mov
dec
jp
pop
adc
bswap
pop
mov
iret
cmp
in
repnz
cmpsb
mov
xor
movsl
jne
mov
cltd
cmp
add
mov
adc
sahf
insl
xchg
dec
ror
jge
incl
repnz
mov
cs
sbb
pop
movsl
mov
aas
aad
orl
jmp
jg
push
js
imul
sub
dec
lods
jle
nop
and
mov
or
cmp
es
movsb
jmp
jno
pop
ret
dec
fldl
les
xchg
inc
pop
or
test
dec
pop
jge
xchg
xlat
testb
in
lret
loopne
and
push
sbb
jecxz
pushl
cmpsl
loop
call
pop
jg
in
mov
aas
mov
movb
jb
lds
and
sahf
lock
rorb
adc
cmp
outsl
daa
adc
scas
clc
int3
dec
sub
sbb
dec
sub
shr
popa
mov
inc
repnz
or
inc
push
arpl
idivb
call
ljmp
push
xchg
inc
dec
lahf
jmp
or
nop
xchg
jne
inc
call
cmpsb
push
jae
dec
call
imull
mov
ljmp
leave
mov
arpl
ss
imul
dec
inc
les
cmp
mov
xchg
jge
ds
enter
and
sbb
mov
dec
ret
adc
outsb
les
rcl
dec
fstpl
pop
scas
stos
mov
pushf
ret
ss
cli
inc
sub
or
outsb
push
sub
sub
fisttpl
xchg
push
loopne
stos
jmp
sti
loopne
or
push
sub
js
into
andl
fbstp
mov
filds
stc
arpl
movb
or
icebp
lods
cmp
push
data16
mov
and
nop
nop
sbb
hlt
mov
roll
aas
je
das
inc
pushf
mov
sbb
mov
mov
aas
and
jmp
sbb
in
push
mov
cmpsl
and
out
adc
fdivs
dec
test
les
insb
xchg
push
cld
mov
inc
icebp
fwait
sbb
aad
int3
jnp
into
daa
lods
push
xor
std
pop
lret
pop
jae
push
rorl
xchg
jmp
jno
bound
or
jbe
shrl
shlb
pusha
shrb
jl
lahf
bound
and
mov
rolb
adc
dec
xor
imul
cmc
icebp
inc
shll
je
mov
das
mov
cmc
inc
jp
mov
and
push
test
xchg
cmc
aam
in
pop
imul
ret
mov
in
ja
aam
ss
gs
repnz
inc
xchg
xor
popa
add
aam
mov
lds
xor
xor
xchg
out
jg
je
movsb
das
pop
jmp
addr16
daa
mov
mov
cmp
sub
les
fidivs
aad
fdivs
push
ds
or
mov
fcoml
fyl2xp1
std
inc
cmp
lea
lcall
lods
cltd
sahf
xor
pop
xor
in
pop
testl
lods
test
jg
ficomps
push
cmc
cld
pop
mov
sbb
fsubrl
lcall
call
stc
testl
and
mov
daa
and
inc
adc
xchg
pop
cmp
sbb
cltd
or
cltd
int3
jno
iret
cmp
insb
rcrl
dec
mov
mov
stos
scas
push
jmp
push
stc
das
inc
mov
mov
dec
popf
sbb
cmpsl
mov
push
test
ret
popa
dec
xor
push
xchg
push
mov
push
inc
call
ljmp
repnz
out
xor
out
xchg
pop
lds
sarl
and
fdivr
fistpll
daa
lock
lahf
nop
cli
icebp
cmp
call
loop
sub
push
cmp
sbb
push
cltd
enter
jp
sub
lcall
inc
daa
cmc
fidivs
mov
sbb
js
cmp
int3
ret
xor
loop
xchg
pusha
mov
clc
add
pushf
inc
sbb
leave
scas
rorl
sar
xchg
andl
add
shr
dec
xor
cmp
movsb
std
adc
les
adc
inc
mov
nop
inc
push
test
xor
mov
enter
arpl
outsl
shlb
jmp
cmp
xor
movsl
inc
cmp
repz
adcb
sub
ljmp
xlat
push
lds
inc
xor
repz
cs
mov
loope
mulb
or
and
fisttps
mov
xchg
push
mov
xor
fistps
movl
in
mov
subl
dec
lret
jo
mov
test
or
cltd
sarb
dec
mov
xchg
add
in
mov
xor
lret
or
aaa
dec
xor
pop
fldl
inc
push
push
mov
mov
pop
adc
insl
pop
inc
in
loop
mov
aaa
ret
sub
mov
mov
cld
test
and
mov
insb
push
test
ret
clc
stos
ss
scas
out
inc
xor
sub
inc
dec
xorl
sub
adc
cmp
fldl
inc
sub
mov
clc
sub
into
mov
lret
ja
dec
bound
add
std
int
xchg
sbb
dec
jmp
ja
xor
js
sub
sbb
mov
xor
mov
sub
inc
mov
or
jecxz
aad
and
test
outsb
mov
in
jecxz
loopne
cmpsl
or
cmp
mov
cmpl
sub
xchg
adc
lock
mov
pop
push
jecxz
adc
ficomps
mov
movsl
fwait
daa
sahf
xor
mov
pop
mov
orb
push
xchg
mov
jg
ljmp
out
jne
das
lcall
xchg
jge
inc
jno
outsl
pop
test
sub
xchg
into
out
aam
sti
orb
mov
xchg
cmpsb
or
push
scas
out
adc
jb
sbb
lods
xor
lahf
outsb
jp
pop
mov
js
cmp
or
icebp
into
or
add
fstps
jmp
ficompl
jmp
shlb
sub
mov
ret
dec
sub
sbb
xchg
cmpsb
mov
loop
fistpl
mov
and
mov
es
enter
insb
sub
mov
cmpsb
lret
adc
pop
pop
aam
mov
xor
lock
out
daa
add
loopne
push
fwait
enter
dec
xchg
and
stos
sub
test
mov
popa
mov
arpl
std
push
jno
stos
or
gs
mov
rcrl
ds
testb
and
fs
aam
xchg
mov
ss
divl
dec
scas
pop
mov
cmp
fs
outsl
lock
jbe
and
and
and
sbb
and
push
pop
ljmp
movsl
je
add
dec
inc
dec
aad
movsb
add
mov
add
push
jmp
push
jb
mov
mov
pop
pushl
jns
sbb
sbb
sbb
fdivl
insl
sub
push
imul
lea
push
xchg
hlt
stc
es
dec
mov
cmp
fwait
int
jge
mov
sbb
call
mov
jb
sahf
xor
and
popa
or
cli
das
pushf
sub
mov
xor
rcrl
les
mov
mov
adc
scas
xchg
stc
cmp
test
test
jo
pusha
cmc
lret
test
push
gs
sbb
xor
add
mov
inc
je
leave
push
dec
aad
mov
in
sbb
mov
pop
stos
sbb
rcrl
rclb
fwait
mov
and
scas
out
xor
adc
or
fimull
inc
addr16
mov
repnz
fsts
push
rclb
out
or
fimuls
xchg
es
ret
in
movsb
fstp
in
mov
ret
adc
aam
adcl
add
sbb
inc
push
xor
lea
cmp
xor
in
repz
pop
icebp
mov
jae
negl
xor
adc
mov
sbb
test
rclb
mov
enter
popf
cmc
lahf
xchg
push
push
std
and
jb
pop
fsubs
int
adc
shrb
and
repnz
hlt
push
jmp
imull
mov
je
jae
inc
imul
addl
inc
xor
aad
outsb
jb
push
pop
sub
dec
lods
xor
lock
mov
or
outsb
jle
dec
addl
fs
outsl
gs
jp
imul
jbe
pusha
add
push
call
daa
hlt
adc
adc
fdivrl
out
mov
rorl
inc
push
loopne
and
js
add
outsl
inc
jnp
add
add
and
cs
pop
mov
rcl
adc
jns
sub
sub
in
jmp
push
orl
test
cmp
imul
es
arpl
mov
lret
enterw
add
je
pop
cmp
push
xor
xor
test
xchg
cmc
push
imul
clc
repnz
mov
xchg
push
xchg
outsl
fistps
sbb
push
xchg
aad
in
jmp
out
cmpsl
or
sti
fmuls
mov
inc
sub
pop
push
ss
or
pop
adc
out
inc
clc
inc
and
pop
sub
push
mov
and
cld
xor
stos
in
jb
xchg
int3
mov
lret
push
inc
push
mov
sbb
mov
pop
fxch
lods
popa
leave
inc
out
add
int
scas
lock
jb
cmp
roll
shlb
lret
stos
jg
pushf
push
or
jl
or
push
dec
mov
jg
jbe
jns
outsl
pop
xor
movsl
mov
sub
mov
or
sbb
inc
mov
pop
xchg
jb
int3
cmp
in
cmp
mov
cmpsb
sub
xor
out
in
sahf
add
jmp
lret
movsb
inc
rclb
jge
mov
fwait
jne
sbb
stos
mov
mov
pop
and
or
mov
xchg
jmp
popa
sti
push
and
call
mov
inc
mov
call
jae
inc
xor
push
adc
pop
frstor
sbb
repnz
shll
in
insl
xor
or
pusha
lock
xor
call
mov
xlat
repnz
mov
jns,pt
jmp
xchg
sub
push
pop
lods
fs
xlat
push
mov
and
xlat
scas
adc
or
mov
cmpsl
leave
popa
mov
in
mov
sub
ss
shlb
mov
cmp
aam
stos
jmp
mov
dec
xchg
rcrl
sub
insb
iret
outsb
pop
inc
xchg
push
push
in
out
xchg
aam
mov
dec
lds
inc
pusha
mov
les
mov
fimull
addl
push
repz
pop
dec
pop
stos
rorl
and
lcall
pop
fisttpll
dec
shl
add
xchg
xchg
ret
iret
cs
dec
cmp
add
fidivs
dec
loopne
int3
cmpsl
mov
outsb
out
int
cmp
das
push
jno
mov
xchg
pop
jo
les
es
pop
sbb
sub
sub
rclb
dec
mov
pop
jns
icebp
rorl
lcall
cmp
into
insl
out
jne
sbb
test
xchg
sub
daa
add
loopne
adc
call
imul
mov
inc
adc
popa
add
fwait
shll
mov
or
out
insb
sahf
call
ja
jg
jmp
inc
test
or
mov
ret
mov
and
cwtl
jp
outsl
jecxz
xor
mov
ror
outsl
or
jmp
inc
int
icebp
mov
fs
lods
lea
inc
pop
stc
xchg
loope
add
and
test
int3
sbb
lds
ja
inc
xor
mov
int3
out
out
in
inc
inc
xor
or
mov
lds
out
aaa
dec
arpl
mov
cmp
or
arpl
nop
cmpsl
push
je
pusha
pop
dec
mov
aad
or
inc
rorl
mov
or
outsb
data16
mov
inc
sarl
mov
adc
mov
adc
push
xor
out
mov
jecxz
adc
mov
insl
enter
xor
mov
lock
cmp
and
jns
aam
mov
and
jg
xlat
mov
sbb
stc
mov
or
jns
mov
arpl
cmp
je
cltd
and
je
mov
mov
jbe
pop
sub
or
rcrl
pop
outsl
cmp
pusha
mov
jge
and
xor
cmpsb
mov
inc
cmp
push
adc
sub
in
call
pop
push
and
cmp
mov
arpl
add
adc
std
push
and
add
les
mov
fstl
sbbb
test
mov
mov
dec
inc
fidivs
sub
mov
fbstp
iret
xchg
mov
out
std
and
andl
push
mov
push
sbb
loope
std
out
xchg
popf
ret
xrelease
pop
mov
xchg
mov
mov
and
push
loope
add
sbbb
mov
cmp
pop
fdivp
push
out
dec
inc
jno
xor
mov
pop
ss
dec
cmp
inc
mull
jl
push
push
push
sbb
mov
pop
mov
mov
insb
add
shrl
jnp
aad
sti
cmpsb
mov
push
ljmp
aam
fdivl
and
mov
push
xchg
push
into
sbb
mov
clc
inc
mov
out
mov
mov
xchg
or
loopne
movsl
sbb
jl
int
cmpsb
in
sahf
xchg
xlat
inc
test
dec
repz
jmp
testb
mov
mov
and
jle
fimuls
mov
stos
adc
cld
mov
jae
sbb
mov
push
inc
xor
ja
inc
jb
test
popa
lods
ja
aad
mov
rcl
sbb
out
das
rcrl
sub
or
sahf
and
and
aad
cmc
in
mov
and
xchg
out
sbb
adc
daa
mov
icebp
xor
test
push
mov
sbb
nop
add
outsl
cmpb
fimuls
adc
fists
and
call
add
dec
or
sub
leave
mov
and
dec
xor
sbbb
pop
add
sbb
js
mov
sti
add
sbb
mov
sahf
add
call
jle
push
aaa
mov
xlat
jae
aas
or
cmp
lock
jl
add
in
cmp
add
or
test
cmpb
or
xor
je
add
sub
imul
mov
outsb
repnz
jg
dec
fcmove
cmp
and
pop
mov
dec
je
xor
xchg
dec
adc
aas
and
outsl
filds
lods
cmp
insb
and
pusha
xchg
pop
test
xor
mov
add
daa
dec
bound
mov
movsl
clc
inc
jae
hlt
loopne
push
dec
addr16
cmp
cmpsl
test
repz
inc
cmpsl
xchg
ljmp
je
mov
cmp
cmp
cmp
mov
std
dec
jae
xor
cmp
sbb
test
sub
xor
dec
insl
int3
xchg
jl
pop
stc
xor
mov
mov
lret
add
rcrb
repnz
fldcw
bound
adc
mov
xchg
scas
lods
fdivl
mov
shlb
in
dec
andl
mov
jb
xor
hlt
fwait
iret
sub
fwait
sti
insb
addr16
inc
add
in
in
inc
mov
push
xlat
mov
pop
loopne
test
notb
adc
pushf
ja
ljmp
mov
and
jg
cmpsl
lret
jb
aam
pop
lds
test
dec
jge
inc
add
inc
or
dec
sarb
sub
jge
test
inc
out
or
addr16
pop
sub
push
jg
test
dec
div
mov
xor
fnstenv
and
adc
addb
out
xchg
ret
mov
out
dec
xor
xor
push
adc
int
xor
stc
add
aad
push
jnp
add
stc
xchg
call
and
pop
test
int
pusha
inc
mov
in
test
ffree
sbb
loope
lock
mov
aaa
jmp
xchg
adcl
sbb
popa
inc
pusha
adc
push
test
fildll
loop
sarb
cltd
daa
jl
adc
dec
mov
pop
stos
dec
push
aaa
data16
shll
jne
push
popa
and
jg
sub
inc
movsb
xor
into
mov
or
push
ja
xor
pop
jmp
dec
mov
jg
aas
add
es
inc
loopne
in
sub
push
ret
inc
add
lods
inc
aam
sub
je
cli
mov
or
adc
inc
test
lds
data16
out
mov
or
dec
outsl
jge
icebp
inc
sahf
sbb
or
xor
ret
idiv
mov
dec
cmp
adc
icebp
jmp
sarb
pop
movsl
fwait
in
push
xchg
addr16
aad
mov
cmpsb
cmpsb
aas
sub
push
fcmovnb
lds
xchg
inc
fmuls
addr16
add
jne
jle
xchg
clc
rcrb
mov
les
lcall
insl
loopne
inc
pop
fwait
mov
in
in
mov
cmpsb
or
idivb
mov
scas
sub
test
inc
push
outsb
and
ficoms
test
mov
xchg
push
int
push
addb
pop
mov
imul
jl
outsl
add
je
jno
xorb
push
outsb
jmp
clc
jmp
pop
xor
cli
cmp
or
pop
repz
outsl
pop
rolb
pop
rcl
les
mov
push
xor
mov
and
cmp
loope
inc
mov
je
jle
rcrl
inc
lahf
gs
adc
inc
fwait
loop
and
lret
out
cmp
ljmp
adc
jecxz
stc
test
jb
push
fs
adc
fisubs
xlat
fwait
jo
pop
xor
mov
mov
fisttps
adc
and
xchg
gs
in
dec
pusha
ljmp
pop
test
flds
mov
dec
push
jns
outsl
lret
xlat
out
std
lcall
mov
into
testl
dec
mov
xchg
xchg
jo
mov
aaa
dec
loopne
clc
outsb
or
jbe
lcall
fimull
ljmp
movsl
xchg
fwait
cmpb
push
mov
push
test
scas
ja
cltd
popf
loop
shrb
subb
sti
mov
in
jp
bound
shl
sbb
ss
pop
lahf
popa
add
jne
jbe
sbb
sbb
lock
lods
and
out
std
int3
adc
add
lds
pop
and
call
loop
les
xchg
stc
aam
std
fisttpl
iret
or
shrl
mov
add
leave
push
dec
repnz
ret
push
cmp
lahf
fnstsw
cli
movb
jl
jmp
jbe
push
dec
mov
sbb
lret
inc
into
int3
and
jecxz
jbe
xchg
mov
rcrb
popf
jb
imul
jns
jg
mov
inc
popf
leave
sar
pop
jle
dec
adc
mov
adc
lods
mov
in
push
out
sub
jp
xchg
hlt
not
mov
sahf
insl
mov
lds
in
dec
dec
data16
xor
jmp
push
sahf
jmp
cmpb
test
negl
push
adc
scas
loope
fdivrs
jge
mov
mov
rep
orl
cld
cmpb
in
es
rolb
test
add
xchg
sub
mov
data16
dec
pop
jmp
push
sub
ret
in
or
ljmp
jmp
pop
push
lods
insb
aas
jbe
xlat
test
pop
push
mov
push
faddl
lds
test
mov
in
stos
mov
inc
lret
mov
inc
xchg
cmp
gs
clc
mov
pop
cmc
add
push
pop
pop
iret
fs
scas
xchg
stos
xorl
mov
jae
imul
pop
pusha
pushl
xor
cmpsb
xor
test
push
adc
or
pop
adc
movsb
cld
shll
aad
sub
insl
mov
xchg
out
lahf
jl
push
imull
or
or
fildll
lahf
jp
sbb
push
add
inc
adcb
xchg
or
cmp
shrl
mov
gs
jl
das
or
decl
mov
lahf
testl
in
xchg
nop
and
sub
pop
insb
mov
xchg
and
cmp
adc
or
ret
sub
in
loopne
ljmp
jg
pop
mov
loopne
and
jecxz
adcb
push
fnstenv
loop
pop
dec
dec
jns
or
test
cmc
sub
scas
rcl
nop
aam
int3
insb
or
and
andnps
stos
std
sub
sub
inc
out
je
daa
sub
cmp
das
sub
xorl
mov
stc
sub
mov
cmp
push
imulb
cmp
or
rol
test
aam
inc
ds
fwait
mov
icebp
sbb
loop
mov
push
pop
pop
arpl
push
inc
and
adc
push
push
movl
dec
cmp
aas
xchg
mov
cli
mov
pop
in
dec
or
sbb
sarb
call
mov
enter
jne
das
push
pusha
add
mov
push
out
enter
and
pop
add
jecxz
adc
hlt
es
pop
lock
call
aas
cmc
push
mov
outsl
jnp
cmp
mov
cmp
or
sarb
dec
xor
jno
aad
xchg
add
loopne
jno
inc
sub
ja
fcomps
stos
popf
data16
ret
or
or
mov
pop
adc
ja
adc
cmp
adc
mov
push
inc
sub
sbb
mov
jl
frstor
mov
sarl
mov
cli
push
sbb
rorl
dec
push
ljmp
xchg
subl
pop
fwait
add
inc
xchg
sub
stos
mov
xchg
cmp
mov
pop
pop
xor
push
pop
cltd
stc
hlt
nop
xchg
imul
call
cmpb
push
push
pop
mov
imul
stc
add
and
je
subl
or
mov
cmovb
dec
nop
lahf
hlt
and
push
lods
aas
popa
mov
or
leave
fld
mov
jns
pop
lcall
mov
shr
adc
stos
jbe
test
int3
jmp
and
stos
fiadds
pop
subl
mov
test
and
fucomi
xor
mov
lods
fidivrs
push
jo
nop
adc
and
push
and
mov
mov
pop
ljmp
mov
aas
and
cmp
loope
shll
cmp
pop
cmpsl
xor
sbbl
cmc
call
insb
push
dec
sbb
and
js
mov
jge
orb
aas
je,pn
out
ljmp
jae
cltd
and
nop
daa
test
pop
popa
xlat
cmpsb
scas
jge
push
ja
out
loope
mov
movsb
xchg
mov
jbe
faddl
and
cwtl
mov
and
daa
stc
pusha
mov
gs
sti
in
adc
out
nop
stos
dec
push
fsubl
cld
jns
sbb
sub
addl
push
lods
icebp
icebp
shrl
sub
sbb
ret
rorl
int
pop
add
fwait
mov
fnsave
mov
sub
scas
mov
ds
aas
daa
dec
jg
add
iret
jecxz
pop
test
jae
add
mov
in
shll
cli
or
aas
push
lahf
push
out
idivb
fistps
call
mulb
jne
and
pop
scas
push
jl
cmp
xor
leave
adc
iret
loope
jl
xchg
pop
add
mov
movsb
add
std
xor
aas
push
mov
xlat
daa
mov
mov
mov
cmpsl
sub
jle
xlat
imul
subl
mov
mov
push
push
insl
roll
test
dec
push
imul
mov
pop
stos
lahf
mov
andl
fdivr
addr16
int
sbb
stos
dec
mov
dec
jecxz
js
fnstsw
test
nop
in
stc
jmp
push
and
push
add
popa
xchg
xchg
sti
inc
jnp
sbb
sahf
sbb
incb
scas
aas
icebp
rclw
repz
add
sbb
xor
in
lret
pop
out
jp
push
loope
mov
flds
lret
dec
dec
movsl
movsb
push
pop
inc
jo
iret
adc
inc
jmp
sbb
jg
mov
js
sarl
daa
fistpl
inc
sub
xchg
aas
ljmp
push
std
add
inc
pop
in
mov
aad
mov
lock
icebp
inc
jnp
pop
jno
test
xor
lahf
dec
aad
int3
adc
or
add
fmulp
mov
adc
mov
js
push
leave
pushf
lea
xchg
bnd
std
pop
and
cmp
sub
out
ss
fisttpl
mov
xchg
sbb
cltd
pushf
jg
lcall
ret
and
les
or
sub
gs
cmc
cmp
nop
or
sbb
xor
dec
or
in
mov
mov
je
push
sub
sti
push
test
inc
bound
push
push
xchg
inc
push
and
inc
mov
inc
sub
mov
push
xchg
push
dec
out
and
nop
lret
lret
push
jle
in
in
mov
std
sbb
dec
rorb
adc
inc
cwtl
shr
mov
int
ret
xchg
pop
enter
adc
mov
ds
sub
ds
adc
inc
int3
outsb
movsl
sbb
cmp
fldenv
mov
call
aaa
push
clc
xchg
or
arpl
in
out
mov
jecxz
flds
addr16
or
lret
sub
mov
popa
xchg
fldl
mov
into
mov
ret
shll
cmp
cmp
xchg
xchg
pop
pop
inc
pop
jmp
sbb
jmp
in
cmpb
test
jge
push
mov
jbe
les
xchg
je
dec
lock
mov
cmp
out
ret
mov
dec
rcr
push
xor
ss
cltd
push
lods
jge
dec
adc
imul
imul
xlat
inc
sbb
mov
in
pushf
std
divb
push
xchg
lret
cmp
leave
stos
xor
mov
add
outsl
clc
or
mov
push
or
inc
and
mov
fists
iret
sbb
lds
notb
fs
mov
call
ret
xchg
stos
les
test
jl
pop
fs
mov
add
mov
push
fs
int3
ljmp
into
sbb
dec
into
or
bound
test
inc
xor
or
ja
push
pop
push
sub
inc
push
sbb
or
adc
ss
cmp
xchg
add
xor
outsl
dec
enter
lret
movsb
shll
mov
or
mov
stos
pop
sub
addl
mov
fisubs
or
sbb
subb
aam
jp
mov
xor
pop
sbb
adc
or
in
sbb
sbb
shrl
adc
pop
lock
mov
pushf
cmp
dec
cmp
es
loop
xor
add
pushf
nop
mov
push
lods
scas
fsts
inc
xlat
sub
mov
jmp
xchg
sub
outsb
fbstp
pop
pmuludq
push
sub
pop
sub
adc
into
stos
dec
or
mov
pop
xchg
shl
loope
adc
cwtl
jb
daa
jns
sbb
addr16
jne
clc
adc
dec
daa
imulb
push
jnp
inc
in
push
add
push
jo
add
jmp
xchg
lea
jecxz
add
add
repz
daa
inc
xor
xor
shll
in
xchg
pop
popw
sub
into
push
ljmp
iret
xor
pop
aam
leave
repnz
jno
push
and
into
pusha
je
jnp
or
jae
lock
fucom
mov
cmp
xchg
xchg
mov
ret
push
jno
test
push
repz
dec
inc
lahf
stos
scas
rol
adc
pop
push
push
adc
scas
push
pop
mov
fsub
sbb
push
jne
test
push
stc
jp,pt
fcomps
lods
adc
fwait
iret
pop
and
inc
mov
jecxz
cmc
sbb
int3
mov
pop
cmp
ljmp
insb
dec
bound
gs
mov
insb
push
push
mov
xchg
jb
adcl
mov
rorb
pop
repz
fmul
push
and
shll
js
mov
xlat
dec
xor
mov
jmp
jp
push
dec
sbb
jp
gs
loopne
mov
pop
stos
pop
xchg
call
subl
mov
cmpsb
repz
aad
test
xchg
inc
jp
arpl
mov
popa
aas
adc
call
xlat
inc
aaa
mov
xchg
jge
cli
bound
ja
iret
fucomip
xorl
push
and
push
aas
mov
mov
or
push
mov
enter
or
xor
test
or
idivb
shrl
lret
adc
sti
fidivrl
shr
lahf
pop
imul
cltd
lods
subb
fcoms
test
fistps
jnp
cwtl
xchg
rorb
ret
lods
cmp
mov
cs
in
sbb
shrl
add
push
ret
jne
dec
mov
imul
jg
or
in
inc
not
xchg
cld
cmp
scas
aam
cmp
mov
adc
xchg
pop
or
loop
mov
clc
lcall
mov
jns
mov
aam
rorb
pop
out
cmpsb
cli
dec
dec
cmpsl
jne
movsb
lcall
or
xchg
stos
iret
out
clc
mov
loopne
les
je
and
xchg
push
test
fs
lret
fists
flds
pop
subb
jp
add
add
ja
mov
jecxz
xchg
dec
and
pushf
dec
cltd
mov
repz
cmp
lock
xchg
arpl
js
mov
and
mov
outsl
cmp
push
push
gs
sbb
mov
xor
imul
adc
inc
adc
or
fdiv
insl
pop
or
lds
ljmp
ljmp
mov
lods
mov
pop
adcl
iret
lock
mov
xchg
inc
repnz
imul
inc
sub
in
out
dec
lea
movsb
sub
leave
call
and
mov
jnp
pop
add
scas
shlb
lahf
les
pushl
jne
and
pop
in
repnz
cwtl
mov
enter
push
xchg
and
insb
pop
cmpsl
jmp
dec
cmp
fstl
xlat
mov
sbb
mov
cmp
push
aad
inc
xchg
sbb
push
out
mov
popf
in
cmpsb
loop
std
mov
jp
inc
push
adc
pop
jmp
inc
adc
fimuls
sbb
cmpsb
cmp
je
pushl
in
mov
inc
lods
loopne
xchg
jecxz
lcall
dec
es
out
fcompl
mov
jae
outsl
xor
and
mov
push
xorb
loope
subl
push
mov
or
xchg
inc
dec
adc
imul
xlat
pop
je
jp
imul
ss
loop
adc
sub
gs
lods
icebp
cmc
sbb
fiaddl
mov
shrl
lock
gs
sub
mov
cmp
mov
cltd
jp
out
jl
test
loopne
lcall
xor
push
push
scas
out
add
jge
ds
pushf
mov
popa
sbbl
je
sub
cmp
cwtl
les
out
or
cmc
jb
divl
testl
pop
xchg
lret
and
test
inc
xor
xchg
lea
ret
pop
movsb
cmpsb
push
xchg
je
ljmp
mov
movsb
sbb
std
mov
fst
fldcw
je
jle
int3
sbb
push
stos
cmovns
insl
js
out
repz
das
or
mov
nop
nop
ss
aam
cmp
mov
out
popa
xor
fdivs
aam
fwait
dec
add
mov
arpl
jp
loopne
enter
lea
fwait
mov
lods
movsb
push
cli
test
push
sar
cmpsl
pop
bswap
adc
sbb
cmpsl
jno
jae
xchg
movsbl
inc
dec
jle
xchg
scas
inc
in
out
xor
in
jle
pop
xor
lods
xor
jp
mov
mov
data16
xorb
test
jle
call
xor
fisttps
fisttps
sahf
ja
mov
movsl
dec
push
mov
insb
mov
fisubl
pusha
push
push
fnstcw
ds
push
pop
inc
inc
jg
rcrb
movsb
gs
outsl
arpl
loope
adc
adc
rcrb
xchg
sbb
mov
xor
or
add
pop
lret
add
jle
adc
cmc
xor
aad
cmpsb
push
call
out
movsl
into
mov
cld
clc
loope
jmp
xor
fmuls
fmuls
aam
lret
pop
mov
pop
mov
jmp
mov
mov
dec
icebp
sub
ret
cld
or
lahf
leave
in
pop
sbbb
cmp
mov
xchg
push
push
pop
andb
and
adc
lods
and
lret
sub
sub
adc
xlat
cmp
cmpl
jl
push
es
sub
and
push
xchg
xchg
inc
fbstp
adc
xadd
xor
cmp
mov
lahf
jge
xor
cmpsb
fldenv
fsts
add
mov
cmp
popl
xor
insb
in
and
cmp
add
fdivs
jg
cmp
cld
jno
rol
push
adc
mov
xor
pop
xor
imul
jecxz
sbb
mov
jnp
pop
cmpl
fs
out
jns
push
ss
jnp
loop
icebp
push
push
xchg
inc
dec
jnp
cld
push
mov
lods
cli
pop
mov
cmp
test
jne
inc
mov
fistl
in
dec
mov
push
mov
out
rolb
leave
inc
addr16
mov
inc
cmp
lods
aam
aaa
std
addb
cmp
lahf
sub
rcrb
mov
jmp
vorps
adc
out
ret
cmp
loope
scas
sub
andb
in
sub
notl
jns
adc
push
mov
push
push
rol
and
jnp
rclb
mov
inc
dec
adc
lods
imul
xor
xor
sbb
jge
cmp
addr16
inc
and
in
mov
adc
push
leave
in
int
xchg
test
rorb
mov
out
int
jb
mov
add
shll
mov
pop
pop
pop
inc
sbb
icebp
dec
inc
loope
out
add
ja,pn
lahf
shll
pop
adc
fdivrp
cmpl
lahf
mov
shlb
sti
insl
lods
rorl
dec
dec
fs
sub
inc
or
stc
rolb
mov
aad
sbb
stos
xor
insb
xchg
out
mov
cmp
repz
push
enter
fdivl
jb
mov
in
push
and
cmp
icebp
push
xchg
or
sub
add
in
mov
clc
xor
loopne
mov
inc
in
lock
adc
push
jno
jnp
dec
cmp
sub
jo
jns
in
adc
sub
and
in
sbb
mov
cwtl
dec
in
pop
cmp
aam
or
fs
cmc
mov
std
xor
inc
cmpsl
xchg
push
in
nop
jns
dec
push
jle
sub
and
dec
or
xchg
xor
aas
out
push
cmc
push
fwait
nop
push
mov
subl
push
push
jl
pop
pusha
mov
push
sub
xchg
cmpsb
pop
shr
les
xchg
leave
jno
cmp
mov
nop
and
jmp
add
aam
inc
mov
mov
jmp
in
mov
fsubp
fucomip
jmp
cltd
aas
cmpsb
sbb
ja
loop
aad
leave
imul
lret
notl
lea
cmpb
icebp
and
test
les
sub
push
mov
insb
cwtl
mov
jecxz
xchg
popf
adc
enter
aaa
jle
dec
xor
ja
das
add
scas
mov
aam
sbb
inc
inc
add
lds
sub
inc
scas
std
subb
dec
fcomps
jle
push
ja
mov
rcll
cs
jnp
std
shl
movsb
sub
je
push
or
in
push
cld
imul
inc
cmp
sub
push
push
nop
pop
outsb
sub
stos
and
and
inc
adc
aad
or
add
sarb
shll
ds
jmp
mov
jbe
pop
dec
clc
cmp
aad
xchg
mov
cwtl
stos
push
pusha
sahf
sub
mov
sbb
and
mov
mov
xchg
cmpsl
pmullw
sub
dec
loopne
adc
xor
cld
aam
shll
or
xchg
xlat
sub
inc
imul
push
mov
and
aaa
lahf
adc
mov
jle
loop
and
and
xchg
lock
xor
pop
pop
xor
xlat
add
call
call
hlt
push
aad
rcrl
dec
mov
xchg
push
pop
dec
push
adc
into
dec
lahf
popa
lods
adc
xchg
push
cmp
mov
ret
mov
lahf
testb
mov
shrl
into
cmpsb
cmp
jnp
or
xchg
inc
xor
cmc
jbe
insb
push
fimull
jae
std
ja
into
push
testb
repz
lock
icebp
adc
xchg
mov
popa
rclb
aas
jo
imul
sub
sub
popa
arpl
outsb
xchg
nop
fcomip
jl
ficoml
jp
cmpsl
fnstsw
lods
int3
mov
bound
dec
ret
nop
jle
lods
cmp
lret
mov
andb
adc
xchg
pop
jmp
jp
insb
jo,pt
or
daa
shlb
dec
sahf
fs
adc
stos
ja
dec
repnz
jmp
mov
inc
dec
push
push
popf
add
lret
adc
lret
xor
inc
mov
adc
fcomi
scas
jecxz
and
mov
decl
xchg
and
push
and
cli
cmp
xor
aaa
jno
pushf
and
mov
pop
pop
ja
cmpsl
std
mov
mov
fwait
jl
fisttps
andl
sub
pop
sbb
inc
mov
lret
xor
xchg
or
inc
inc
cmp
les
mov
out
sbb
out
mov
ss
dec
test
out
mov
fldl2t
js
ljmp
and
cmp
dec
lock
rcl
sub
fwait
lret
outsb
fisubrl
faddp
inc
popa
cmpsb
or
push
ss
loop
cmpl
daa
push
push
aaa
jbe,pt
int3
pop
insl
ret
cs
push
out
fisttps
je
jmp
sbb
je
mov
std
mov
stc
push
inc
cli
stos
push
xor
int
sub
cmp
cltd
sbb
xchg
in
inc
cmp
mov
mov
in
insl
test
adc
stos
pop
ret
and
add
pop
dec
aaa
jnp
fs
push
mov
aam
daa
add
test
hlt
iret
stos
lods
pop
xchg
sti
ficompl
mov
in
mov
dec
mov
inc
test
cwtl
mov
cltd
cmp
mull
filds
testb
dec
pusha
xchg
dec
out
mov
push
inc
test
pusha
cwtl
sub
push
inc
jb
cmpsb
aaa
jb
aad
jb
adc
sti
push
imul
pop
cmp
mov
and
push
out
sub
into
xchg
or
loop
shlb
shl
cmc
repz
sbbb
dec
jae
dec
lcall
frstor
movsb
inc
inc
lcall
mov
push
add
icebp
xchg
mov
decb
cmp
mov
cmp
pusha
test
sub
mov
and
loop
mov
leave
sub
sub
or
mov
scas
leave
js
loope
xor
rorl
dec
dec
mull
and
adcl
xor
std
icebp
adcl
sub
pushf
xor
inc
imul
add
inc
pop
push
lcall
cld
mov
mov
fstpl
mov
cli
add
push
rol
mov
leave
fldl
sbb
movsb
sbb
negl
loopne
and
sbb
testl
mov
mov
cld
inc
cs
mov
push
xor
rep
andl
dec
in
loope
sbb
sti
std
push
icebp
lcall
jl
inc
and
ja
xchg
stc
cmp
or
lods
pop
sbb
popf
pop
cs
pop
daa
call
sbb
rorl
add
xchg
push
xchg
cld
movl
jmp
ret
andb
ljmp
pop
arpl
into
push
fistpll
and
lret
leave
roll
cmpb
in
cwtl
test
xchg
push
test
fidivrs
xor
jb
bnd
push
mov
mov
push
and
ss
xor
cwtl
push
sbb
xor
jmp
loop
sub
fdivrs
imul
add
les
push
xor
push
or
outsb
jns
rcll
ss
push
mov
mov
outsl
mov
jb
fs
xchg
std
jae
imul
andb
mov
or
mov
sbb
push
sbb
inc
mov
mov
or
notb
jecxz
adc
leave
and
cs
movsl
test
add
xchg
mov
pop
loope
rcll
pusha
sbb
sub
mov
popa
and
inc
shr
cmp
repnz
and
mov
cli
stc
jl
cmp
mov
jno
add
sahf
insb
ffreep
push
mov
movsb
jbe
cld
cmp
aaa
cmp
cmpsb
lock
fwait
test
cli
out
arpl
popf
jle
sub
test
pusha
mov
movsb
pop
cmpb
inc
mov
sti
test
fidivs
push
jge
adc
les
mov
int
das
mov
imul
andb
mov
cwtl
sub
add
sub
inc
cmp
aaa
pop
fildll
push
sub
inc
add
xchg
fld
mov
movsb
push
pop
xor
es
mov
std
sbb
xchg
sahf
lret
xchg
jecxz
xchg
or
mov
aaa
pop
ror
test
dec
and
sbb
mov
mov
addl
xor
and
popf
sub
es
imul
mov
es
dec
and
out
sbb
sub
mov
mov
xchg
sub
bound
int
rol
ret
mov
dec
lret
lock
pusha
jp
bound
out
or
jb
fstl
out
jnp
mov
xchg
xlat
out
js
xchg
pop
pop
enter
pushl
adc
pop
xor
mov
mov
mov
pop
stc
xor
scas
out
jo
imul
jne
pop
jb
in
pop
xor
insl
inc
fisubrs
sbb
callw
cwtl
das
or
jecxz
mov
mov
jl
adc
je
mov
repz
mov
or
mov
call
fisttpl
je
mov
jecxz
cmc
aad
inc
lahf
cs
imul
bound
int
mov
mov
jp
push
out
xor
jge
push
ds
push
mov
ffreep
and
shl
stos
icebp
push
stos
lods
pop
jecxz
pop
dec
clc
mov
fsubs
push
enter
aam
imul
adc
xchg
or
repz
cmp
adc
pop
mov
imul
ss
aaa
ljmp
popf
push
ss
jb
sbb
mov
push
mov
data16
aad
mov
jae,pn
stos
movsl
idivl
mov
stc
xchg
cmpl
xor
jbe
inc
int
push
pop
add
push
test
mov
into
mov
test
adc
popa
or
mov
mov
xor
pop
scas
dec
test
out
cmp
xlat
nop
loop
mov
pop
lock
push
jle
mov
mov
jo
iret
jnp
jo
sbb
cmc
nop
int3
enter
cmp
cmc
mov
xor
adc
mov
arpl
lock
cmpsb
out
xchg
loopne
xor
pusha
into
mov
pop
sub
pop
or
push
out
rcrl
arpl
pop
enter
lds
and
jmp
xor
je
sbb
cmpsb
rcll
xor
add
mov
repnz
push
mov
xchg
cltd
xchg
pop
repz
jo
outsl
scas
mov
jecxz
les
aad
addr16
out
sti
adc
mov
in
or
add
scas
jbe
jne
enter
cmp
stc
pop
sbb
or
lock
push
xor
mov
in
pop
mov
jl
xchg
ss
xchg
sbbl
loopne
or
and
lock
jne
push
push
loop,pn
inc
out
mov
or
sbb
jmp
es
dec
mov
jle
packssdw
add
aam
mov
sahf
push
or
mov
fcompl
andl
push
cmp
ret
pop
push
hlt
sahf
and
push
ljmp
js
stos
push
lods
stos
inc
push
mov
fxch
lret
ds
arpl
std
pop
lahf
test
hlt
add
in
mov
loope
fdivr
jno
divb
jecxz
out
push
cwtl
cmp
bound
aas
popa
stos
sbb
cmp
sbbl
movl
andb
int
mov
push
adc
sahf
push
ljmp
out
arpl
mov
cmp
sbb
inc
dec
jae
sub
pop
stos
sub
cmpsb
cmp
jb
inc
retw
or
mov
add
mov
jmp
sbb
or
mov
cli
sahf
loopne
test
cld
xchg
mov
jecxz
fsubs
pop
insl
cmp
adc
dec
aas
adc
test
cld
rolw
imul
pop
cmpsb
int
stos
xchg
and
inc
shlb
sbb
iret
fdivrs
add
jnp
lret
test
ret
push
cmp
jns
loopne
jle
fs
mov
ss
aad
push
aas
cmc
in
repz
nop
push
and
push
add
outsl
lret
inc
push
rcrl
fwait
add
mov
fs
popa
mov
imul
ds
dec
pop
fcompl
popf
jmp
or
or
cmp
xchg
push
mov
pop
fsubrl
xlat
xlat
push
xchg
jns
jno
insl
lret
dec
or
push
lahf
dec
inc
rcr
sahf
push
jg
add
daa
test
addr16
push
mov
cmp
mov
in
enter
sbb
inc
lock
movsl
mov
inc
fldpi
fwait
in
pop
in
xchg
js
xor
mov
sub
inc
jo
sub
push
in
cmp
insl
adc
cmp
or
decb
fidivl
dec
pop
inc
ret
int
dec
lods
sahf
jp
mov
mov
jns
notl
pop
loope
jle
aam
push
ljmp
pop
push
sub
sbb
sub
sahf
dec
mov
mov
loope
mov
imull
or
push
xor
int
pop
cmp
pop
mov
pushf
ficomps
imul
xchg
mov
decb
pop
scas
das
repz
cwtl
adc
mov
test
mov
leave
mov
xchg
sahf
pop
pop
pushf
mov
cmc
lcall
jae
lret
ret
sbb
add
xor
mov
sti
std
dec
iret
loop
jecxz
xor
je
jmp
cmp
pop
mov
push
mov
xor
loop
sbb
in
push
in
fimuls
mov
mov
mov
scas
push
scas
insb
cs
andl
lcall
sub
imul
test
out
frstor
bound
push
dec
mov
mov
movsl
les
dec
icebp
adcl
or
data16
pop
iret
jl
adc
call
and
cli
scas
inc
xorl
sahf
mov
shrl
or
and
cmp
pop
mov
and
or
or
xor
push
fidivl
xchg
minps
mov
push
sbb
mov
or
xor
cmp
xchg
std
inc
imul
fidivrs
cmpsl
ret
dec
inc
inc
xchg
jno
mov
loope
jb
inc
sub
inc
cmp
add
ret
cwtl
dec
insb
sub
out
sbb
jae
sbb
aad
clc
add
jge
push
lods
pop
jp
popf
ja
and
jns
int
push
push
mov
jp
jne
stos
out
fdivr
out
aam
dec
leave
test
cmpsb
lret
call
insb
jl
std
into
cltd
add
mulb
sbb
sbb
bound
and
je
cli
cltd
ret
sbb
cmp
loope,pn
icebp
loope
xchg
xor
xchg
cwtl
add
cmp
mov
je
xchg
mov
mov
pushf
mov
and
test
scas
jp
adc
pop
xchg
pop
mov
iret
fcomip
popa
shlb
repnz
in
repz
fidivrl
cmp
out
and
adc
int3
add
xchg
add
jle
inc
out
mov
mov
and
cltd
sub
das
mov
test
jge
dec
fbld
sub
icebp
xor
xchg
xchg
jmp
test
sbb
mov
fxch
sub
out
leave
popf
inc
out
xor
push
jne
rorb
and
ljmp
arpl
dec
aam
ds
fcoml
pop
inc
dec
mov
sbb
pusha
js
cs
scas
inc
aas
test
insl
xchg
xchg
repnz
push
or
scas
cmpb
ja
push
inc
adc
ss
xchg
sahf
or
arpl
xorb
stc
dec
lods
cmp
insb
aaa
hlt
or
push
ja
xchg
mov
push
js
insl
inc
cmp
xor
insb
sub
or
jbe
out
mov
add
inc
orl
test
ja
and
cmp
cmp
sub
divl
insl
xchg
mov
pop
cwtl
add
pop
push
pop
test
pusha
sub
inc
rcl
xchg
lods
pop
and
shrl
or
mov
aam
add
sub
std
hlt
jo
iret
mov
mov
xchg
inc
adc
cmpsl
mov
pop
push
sti
stc
adc
add
stos
hlt
call
mov
arpl
adc
jne
mov
push
fs
adc
push
cmp
inc
jmp
dec
int
adcl
fnstcw
dec
mov
out
xchg
jmp
das
xor
les
dec
xor
outsb
mov
fildll
jmp
jmp
mov
clc
lods
out
jae
rcr
adc
fs
adc
jno,pt
pop
lds
sbb
dec
xchg
int3
mov
out
rorl
fstl
xchg
sub
scas
inc
out
or
sbb
loop
and
aaa
dec
or
aaa
rcll
and
cld
enter
mov
mov
inc
rclb
out
orl
mov
xchg
xor
or
jge
push
mov
jb
sbb
jg
sti
lret
mov
cwtl
into
adc
mov
mov
jmp
shl
push
ljmpw
sub
sbb
gs
add
xor
call
std
fisubrs
jb
pusha
cwtl
rcll
test
push
lods
shlb
push
roll
filds
loope
sub
mov
pop
xchg
lea
mov
xor
jmp
inc
sbb
cltd
repz
scas
cli
jae
scas
sbb
push
sbbl
clc
and
aaa
mov
and
testb
mov
insb
inc
jmp
mov
inc
repnz
adc
push
out
inc
mov
mov
mov
outsb
mov
mov
pop
fldcw
sti
xchg
inc
sbb
data16
mov
add
cmc
ja
shrb
fisubs
mov
sbb
sbb
sbb
divb
ret
ror
mov
dec
adc
xchg
repnz
dec
sub
add
sbb
sbb
pop
jns
mov
cmp
and
cmp
ljmp
dec
popf
push
mov
inc
nop
sub
jp
in
inc
inc
das
dec
cwtl
or
mov
stos
xchg
cmpsb
push
aam
repz
pop
pop
xor
and
iret
jae
in
mov
push
lods
es
sar
cltd
dec
cmpsl
pushf
dec
lahf
push
push
dec
in
mov
push
out
push
mov
clc
inc
push
aas
iret
xor
push
or
imul
inc
pop
test
adc
addr16
or
cmp
jb
add
push
adc
inc
mov
mov
and
inc
sub
xor
or
pop
fnstsw
sarb
movsl
enter
fwait
scas
ret
repz
sti
sarl
sbb
fwait
xchg
imul
or
ret
loope
sub
leave
bound
rorb
decb
lds
push
or
xchg
stc
sbb
sbb
lods
fsubrl
push
pop
add
pop
repnz
jg
push
pop
pushf
push
shl
ds
orl
adc
lds
test
js
out
sbb
xor
xchg
loopne
and
sbb
loop
mov
pusha
push
sub
xchg
call
mov
sbb
andb
test
enter
std
pop
push
xchg
jne
in
lret
dec
testl
out
stos
or
sbb
jbe
mov
rol
xorb
push
adc
push
stos
adc
pusha
push
mov
loop
pushf
jp
cli
insb
and
scas
jb
add
sub
sti
pop
je
push
nop
cwtl
or
sti
jae
test
jb
pop
aad
inc
mov
pop
outsl
mov
and
inc
in
out
ja
mov
dec
leave
xor
in
cmpsl
jg
adc
xchg
popa
inc
icebp
iret
jb
cmp
fidivs
cld
xor
inc
cmpsb
add
incb
xchg
clc
jb
xor
mov
popf
out
add
sarl
fcomps
scas
test
sbb
clc
push
pusha
call
cld
into
push
lds
aaa
hlt
mov
push
dec
push
daa
and
ds
int3
jecxz
shrd
sub
jecxz
movsb
push
enter
xchg
mov
lret
mov
push
out
test
rorb
fstps
adc
sub
sbb
ror
and
mov
scas
int3
ret
movsb
mov
pop
pushf
and
insb
cli
jmp
icebp
rcll
sbb
push
jbe
outsl
dec
mov
adc
mov
std
inc
in
dec
enter
sub
into
mov
lret
pop
outsb
pop
pusha
xlat
push
cmp
mov
into
mov
std
insl
sub
inc
sbb
into
push
sub
insl
mov
xor
push
jns
call
les
sbb
ja
mov
mov
scas
cmp
push
adc
xchg
fimull
push
xchg
jg
jecxz
rcrb
pop
xor
inc
incb
and
push
movsl
jo
aas
mov
jle
iret
dec
or
lds
mov
mov
out
sub
pop
add
pop
outsb
loope
dec
xchg
mov
shlb
mov
int3
inc
and
aaa
and
mov
push
cmc
mov
mov
push
dec
cmp
add
inc
mov
je
in
lea
ret
push
pop
dec
fdiv
cltd
cmp
aaa
ficoml
inc
fbld
test
xchg
sub
or
in
hlt
js
jmp
inc
mov
shlb
or
testb
xor
jnp
fidivrs
jge
int3
cltd
adc
mulb
popf
out
sub
les
dec
inc
or
pop
inc
xchg
lret
test
pop
mov
icebp
pop
jle
adc
loope
bound
insb
out
mov
scas
xchg
pop
dec
out
add
cmp
cs
sbb
daa
enter
lahf
and
es
xchg
pusha
and
inc
outsl
movsb
mov
mov
fnsave
or
adc
dec
xor
pop
daa
push
push
push
sahf
cvttps2pi
aaa
shlb
mov
es
pop
sahf
push
adc
push
xchg
mov
das
sbb
pusha
push
sub
mov
int3
add
push
xchg
and
in
test
pop
daa
push
push
sub
push
xor
push
hlt
dec
or
fistps
sbb
push
jo
sbb
fmuls
and
stos
popf
cmp
add
data16
out
lods
pop
mov
cwtl
das
aas
mov
sub
out
loop
lret
subl
xlat
add
adc
mov
test
loopne
pop
push
xchg
ja
or
ja
inc
subb
cmpl
cltd
mov
outsb
pusha
fstpt
mov
repnz
cmpsl
add
ljmp
rcrl
add
cmp
es
popl
sub
jg
in
dec
hlt
mov
sbb
nop
ror
lret
lea
push
fidivrl
inc
pop
dec
lea
mov
outsb
push
xor
inc
imul
dec
das
lods
mov
xchg
int3
fsts
cwtl
hlt
mov
add
popa
popa
push
sbb
imul
cmp
pop
aad
pop
test
lods
incl
dec
cs
cli
cs
xchg
outsb
inc
xchg
stos
dec
jb
push
push
imul
push
mov
cmpb
stos
sub
or
mov
push
cmp
xchg
mov
pop
outsb
jp
das
int
popf
xor
inc
in
pop
ljmp
fistpl
xor
in
rclb
shrb
mov
in
ret
ficomps
mov
shlb
fildl
push
xchg
cmpsl
add
mov
sbb
pop
xchg
pop
int3
xchg
cmp
xor
andl
imul
imul
jae
or
nop
subl
push
mov
hlt
mov
fidivl
jns
mov
jnp
cmp
xchg
loop
cmp
xorl
xchg
jmp
xchg
xor
aas
cmpsb
arpl
cmp
cltd
pop
adcl
jo
push
scas
outsl
sbb
jbe
mov
rorl
mov
loope
hlt
cli
lock
push
jl
jne
xorl
mov
push
shl
fdivrs
lahf
mulb
dec
clc
dec
sub
mov
pushf
enter
xor
aam
sbb
or
shr
mov
cmp
jmp
dec
fs
sub
sbb
jbe
and
arpl
push
push
inc
ds
sbb
push
flds
mov
sbb
clc
jg
insl
cli
mov
in
jnp
cmpsb
mov
pop
cmpsb
adc
jno
ljmp
mov
repz
insb
pusha
push
jns
jecxz
adc
mov
add
insl
movsl
jmp
test
leave
dec
mov
lret
test
cmp
xchg
fs
fdivr
out
rorb
in
mov
or
mov
sbb
sbb
push
cmp
popa
pop
lret
xchg
xlat
cld
test
in
sub
xor
pop
orb
push
push
lcall
pop
test
mov
out
and
jae
or
inc
mov
jno
frstor
and
es
adc
add
pop
leavew
sub
lods
mov
ret
inc
divb
cwtl
xor
or
jns
xchg
sbb
out
sub
loop
cmp
or
xor
adc
sub
notb
xor
popa
cmp
adcb
sub
sub
jne
jo
ljmp
dec
add
fisubs
aad
je
push
adc
cmc
mov
addr16
pop
push
jmp
push
cmpsl
lock
and
fwait
arpl
pop
jle
btcl
fcoms
addr16
xchg
sahf
andb
inc
cmp
imul
push
inc
cmp
jno
mov
lret
and
mov
dec
dec
fsubl
xchg
dec
sbb
mov
iret
cmpsb
mov
sbb
xchg
push
repnz
and
pop
stos
enter
push
mov
mov
mulb
or
mulb
insb
xor
jg
imul
xchg
dec
mov
adc
xchg
rorb
call
cmp
repnz
clc
cmp
dec
arpl
xor
mov
fisttps
mov
roll
xor
cmp
sbb
adc
fadd
shll
push
adc
dec
loope
sub
cmp
sub
test
push
repnz
mov
mov
arpl
repnz
js
aaa
push
mov
mov
cmp
in
out
dec
mov
mov
dec
mov
mov
or
push
imul
ss
fsubl
jmp
cld
mov
jecxz
sub
lret
adc
clc
jne
pop
enter
xchg
lds
std
jnp
imul
mov
pop
push
or
fcmovnb
lds
mov
test
sub
sbb
mov
and
mov
out
sahf
push
dec
xor
fs
pusha
shrl
mov
out
sarl
add
out
xor
xor
fwait
into
jo
pusha
xor
mov
jne
jmp
add
js
movsl
test
mov
scas
ja
pop
repz
dec
cmpsb
inc
jbe
lea
in
inc
icebp
es
add
sub
xor
cli
data16
aaa
cmp
lret
sub
pop
adc
dec
nop
sbb
mov
repz
mov
in
or
mov
pop
lret
orb
repz
test
arpl
pop
mov
loop
sbb
fmul
mov
popf
insl
and
mov
les
pusha
into
lahf
ret
push
or
pop
mov
pop
mov
jle
loop
mov
mov
out
test
add
sahf
test
adc
cmp
pop
mov
cmpsb
daa
add
js
fcmove
dec
popf
mov
xchg
cltd
pop
es
sbb
pop
ljmp
out
icebp
lods
and
fdivs
push
test
cli
or
mov
xchg
mov
mov
fs
sub
xchg
xor
push
inc
adcl
aas
std
js
movsl
leave
jnp
jbe
test
scas
xor
adc
mov
test
pop
and
out
pop
inc
dec
in
sbb
inc
push
adc
push
cmp
pop
gs
xlat
xchg
cwtl
lcall
insl
jbe
int3
ss
das
jge
dec
or
jge
jl
xchg
ret
push
xchg
std
lcall
xchg
sub
inc
insb
add
das
push
mov
inc
or
je
mov
dec
mov
inc
xor
mov
addb
incb
sbb
out
xlat
cmpsb
fxch
aas
pusha
stc
arpl
es
xchg
xchg
dec
xor
incl
push
testl
jns
dec
call
insl
pop
xchg
fisttpl
mov
in
mov
dec
lcall
ficoms
push
cmpsl
add
in
jbe
jbe
sbb
mov
mov
cmp
and
mov
push
add
dec
cmp
movsl
mov
push
pslld
les
xchg
cmp
lock
mov
scas
cmp
mov
jnp
fstpl
dec
in
into
sbb
jp
fisttps
mov
pop
cwtl
call
pop
out
subl
loop
xchg
xchg
mov
xor
fmull
sbb
push
outsb
xor
adc
in
jno
arpl
fiadds
inc
dec
cwtl
lock
aam
fstpl
ja
or
jb
imul
outsb
movsl
out
cltd
sbb
or
jne
inc
jmp
push
ljmp
xchg
mov
lahf
jne
lock
xchg
xor
adc
arpl
cli
push
test
inc
sub
cmpsl
sbb
roll
rcrb
or
shrl
movsl
and
outsb
stos
xor
and
roll
pop
shlb
xor
in
jg
xchg
lock
or
jle
sub
scas
adc
cs
test
push
push
or
mov
xchg
xchg
dec
mov
sbb
push
out
loope
int
or
xchg
jne
pop
add
dec
cmp
inc
push
out
movsl
lahf
nop
lea
push
cs
shrb
movaps
fucomip
push
mov
imul
out
mov
bound
in
mov
cwtl
fwait
pop
cmc
jecxz
xchg
sub
loope
and
push
or
sub
lock
lods
xor
xchg
push
cmpsb
inc
loop
hlt
and
das
fistps
roll
cmpsl
dec
sbbb
aaa
jmp
push
push
and
sbb
cld
popf
adc
fildl
jg
xchg
imul
adc
sbb
les
mov
mov
sbb
push
out
push
or
mov
xchg
push
push
fs
push
std
movd
jno
pushf
jl
xor
cmpsb
xchg
pop
mov
insl
xor
sahf
jbe
mov
push
icebp
std
test
clts
lahf
in
ret
inc
add
pop
stos
movsb
rolb
std
mov
int3
add
fistl
pop
shlb
adc
push
and
mov
and
cwtl
cmp
add
sub
pop
cmpsl
sahf
adc
sahf
repnz
test
cmp
imul
es
mov
mov
fldenv
aaa
sarb
push
dec
xchg
pop
inc
loopne
xchg
xor
lods
mov
call
pop
or
les
mov
push
inc
sbb
popf
dec
mov
inc
adc
fbstp
iret
jle
or
lods
rcl
cs
push
or
minps
cs
push
xlat
jl
xor
sub
aad
fs
mov
mov
enterw
mov
mov
js
mov
mov
rorb
int3
mov
sub
cmp
jge
out
xchg
xor
fs
test
nop
cmp
jecxz
jl
sar
cld
sbb
lods
test
hlt
out
mov
jns
jno
lds
xor
aas
mov
sbb
stos
adc
mov
adc
cmpsb
subb
out
nop
sub
lods
shl
xchg
popf
aam
cmp
xor
jnp
jge
sbb
ja
push
fs
cmp
je
push
ss
jbe
cmp
lods
stc
leave
fwait
xchg
cltd
jns
scas
lods
adc
and
cmpsl
scas
mov
mov
xor
mov
icebp
jecxz
cmp
jl
int3
and
cmp
imul
jmp
lret
fucomp
xlat
cmc
imul
loopne
mov
push
push
sbb
lea
movsl
and
jp
dec
inc
aam
hlt
jno
pop
iret
jp
mov
xlat
cmp
sbb
or
or
push
daa
adcb
arpl
mov
cmp
adcb
sub
sbb
xor
cmp
lods
dec
cmp
jns
rcrl
dec
push
clc
jbe
and
xchg
mov
jecxz
outsb
lods
mov
push
xor
xchg
pop
inc
inc
sarb
fisttpll
inc
pop
mov
enter
mov
mov
or
xor
inc
jl
data16
jecxz
inc
and
mov
fadds
xchg
lods
ret
fldt
int
xor
leave
mov
pushf
fisubl
inc
out
es
push
cmp
adc
ja
add
lds
xchg
rep
cmp
in
and
inc
jbe
dec
inc
insb
cmpsb
jp
xor
mov
lahf
mov
pop
loopne
cs
jo
sub
lods
push
insl
out
mov
mov
imul
andb
mov
xchg
out
jg
pushf
jg
xchg
mov
data16
rcl
jnp
mov
mov
sti
loope
xor
ror
testl
inc
addl
test
pop
xchg
leave
xchg
mov
scas
addr16
sbb
lcall
push
mov
and
pop
or
xor
mov
lds
andl
push
xor
iret
push
faddl
adc
xchg
mov
sub
jmp
sub
lret
push
or
inc
xor
mov
aas
sub
out
cmp
sahf
test
out
push
cmp
ja
sub
pop
mov
cmc
movsl
in
stos
push
jbe
rcl
js
testb
add
xchg
mov
jnp
xchg
jge
fsubrs
stos
dec
xor
shl
test
jle
xor
cmp
dec
cs
aad
mov
push
xchg
out
mov
jno
mov
mov
cmp
adc
clc
test
leave
pop
jecxz
insl
mov
cltd
xchg
and
mov
mov
adc
icebp
arpl
pop
test
out
pop
ja
js
push
loopne
push
sub
repz
xorl
xchg
push
jg
loop
iret
mov
movsl
and
and
mov
popa
and
jl
paddw
movsl
fstps
pop
and
dec
cmpb
stos
sub
cwtl
cs
mulb
mov
leave
ljmp
sahf
popf
cmp
mov
mov
xor
ss
xchg
adc
jns
pop
xchg
xchg
notl
lods
insl
popa
pop
cmc
dec
jmp
mov
sbb
out
dec
test
and
fcomp
aaa
leave
ss
ficoms
hlt
jle
cs
test
add
pop
sub
mov
sub
movsb
xlat
and
dec
out
movl
pop
loope
pop
add
fs
push
xlat
add
xchg
fwait
shrl
cs
push
cmc
subb
add
adc
mov
test
mov
cmp
xchg
in
idivl
pop
sbb
lret
xor
pop
xor
sub
pop
enter
lret
dec
jecxz
pop
add
mov
dec
lock
inc
adc
sar
cwtl
arpl
inc
lahf
jle
ds
dec
jp
addr16
aad
sbb
and
sbb
fs
nop
xor
mov
jo
repz
dec
lret
mov
insl
pop
xor
stc
sub
cs
popa
or
icebp
adc
sti
inc
sub
lds
xchg
pushf
cmp
inc
shrl
jg
enter
lea
sbb
in
xchg
cli
mov
adc
push
sbb
mov
cmpsb
sti
lods
stos
in
cmp
xor
mov
test
mov
xor
and
sub
push
mov
jb
test
js
sbb
push
leave
lret
shr
mov
and
and
xchg
icebp
test
cmp
inc
fildl
and
loope
movsb
imul
clc
push
clc
mov
lea
std
loop
mov
ljmp
add
test
xchg
sub
js
cmpsb
add
int3
push
xor
mov
xchg
jae
pushl
xchg
and
push
mov
mov
and
lret
fistpl
lret
push
inc
scas
inc
mov
cmp
jecxz
xlat
test
or
stos
lret
mov
lret
sbb
mov
sar
sub
pop
mov
xor
out
mov
ror
sub
push
pop
jb
pop
sbb
dec
cld
push
add
xchg
pop
repnz
and
and
fcoml
icebp
pop
inc
mov
leave
test
lret
mov
notb
cmp
fildl
push
mov
or
sbb
sub
mov
push
and
aaa
imul
aam
xor
add
mov
xchg
mov
push
mov
imul
sahf
out
aad
fcomps
or
jbe
fidivl
inc
lds
add
das
fs
lds
inc
jbe
fstpt
adc
pushf
jne
xchg
loop
xchg
movsl
sbb
jno
adc
lret
mov
notb
adc
test
in
dec
popa
lods
in
mov
mov
dec
jecxz
sbb
idivl
jns
push
sbb
into
inc
sbb
stos
adc
inc
test
fmull
divl
jmp
je
daa
addr16
sbbl
jns
enter
add
ss
je
leave
cs
inc
jl
movb
xor
fisubs
cmp
lods
pop
cmp
stos
push
inc
lahf
je
xchg
mov
mov
leave
bound
pop
movb
jae
mov
adc
sbb
push
icebp
adc
dec
inc
lods
mov
iret
icebp
add
inc
add
ja
inc
loope
lahf
mov
lods
scas
push
pop
int
cmp
dec
lcall
jbe
jp
mov
aaa
add
jl
scas
mov
es
push
lods
inc
lods
jmp
cmp
mov
sbb
jge
popf
mov
xchg
lret
push
movsb
sub
ret
call
test
cmp
push
mov
cmp
add
outsb
mov
aad
mov
sub
mov
idivl
push
lret
xorb
aam
aad
outsl
pop
add
pop
cmpsb
popa
daa
in
fwait
stos
scas
sub
stos
dec
int3
pop
subl
xor
mov
out
xchg
rcrl
ds
loopne
mov
xchg
mov
add
dec
sti
jae
and
jecxz
ss
jb
movsb
sahf
inc
outsb
dec
adc
mov
test
cltd
xchg
cmp
mov
clc
add
xchg
inc
in
fildl
outsb
mov
nop
mov
cmp
xchg
repz
cmpsl
mul
dec
mov
push
lret
and
jl
and
lock
gs
stc
nop
jg
out
cmp
into
sub
nop
mov
push
inc
xchg
std
push
push
mov
jbe
and
popf
pop
push
xor
push
arpl
iret
mov
and
mov
adc
xchg
and
stc
rcll
leave
cmpsl
sbbb
mov
dec
in
in
xchg
mov
dec
mov
pusha
cli
into
jno
pusha
adc
outsb
jge
inc
jno
fdivrs
fimull
pop
enter
xchg
and
sub
ficomps
xchg
mov
lea
cltd
imul
out
inc
cld
mov
mov
xor
imul
loope
push
ffree
pop
add
movsb
xorb
inc
in
xchg
mov
shlb
mov
mov
add
pushf
cld
pop
lcall
enter
inc
jbe
in
mov
negb
ljmp
mov
push
into
test
cmpsl
call
fadds
clc
call
push
int
inc
inc
arpl
les
mov
cmp
inc
shlb
loop
jo
aaa
adc
data16
xchg
imul
pop
hlt
gs
or
je
leave
fldenv
fidivrl
mov
sub
adc
fwait
add
pop
leave
outsb
push
pop
jns
ret
into
push
fptan
pop
adc
push
insb
pop
test
lock
test
aam
mov
lods
sbb
sub
adc
mov
enter
jmp
call
push
mov
scas
dec
imul
push
test
mov
sub
outsb
lret
xchg
das
pop
adc
int
dec
dec
mov
in
pusha
sub
cmpl
mov
pop
call
jl
and
or
aaa
jno
mov
out
js
inc
lcall
call
push
cmp
clc
push
jne
xchg
push
iret
lret
pop
xchg
sti
fsubrl
inc
ret
xorb
loopne
in
mov
daa
lods
insl
cli
fnstsw
xchg
pusha
loope
pop
sbb
dec
fsts
subb
or
shrb
xor
sbb
xor
mov
ret
js
jmp
and
mov
mov
fsts
jno
outsl
adc
jnp
rep
std
jno
push
loope
shll
inc
into
lea
test
jmp
add
xchg
andb
call
fists
inc
jl
xchg
mov
hlt
out
or
push
ja
in
xchg
fcompl
jecxz
jo
test
xor
sbb
dec
adc
nop
push
lcall
and
cmp
xchg
outsl
inc
sbb
scas
mov
imul
xor
mov
out
jle
mov
mov
and
call
sbb
jle
push
cs
sahf
outsl
fsubl
stos
xchg
cltd
pop
mov
pushf
mov
push
and
jb
adc
dec
dec
xchg
add
mov
scas
test
jecxz
scas
pop
fildl
aam
es
outsb
subb
dec
mov
lods
xor
mov
shll
xchg
pop
aaa
sahf
mov
pop
or
adc
popa
pop
and
fdivrp
add
mov
push
mov
xchg
pop
mov
push
push
rcr
xchg
pop
enter
repz
fnstenv
push
int
mov
outsb
push
xor
out
pop
loope
pop
sub
xchg
xchg
or
sbb
add
dec
mov
add
movswl
shl
jl
jmp
fwait
jbe
pop
inc
sub
sbb
mov
inc
stos
mov
subb
mov
movsl
jbe
xchg
imul
add
dec
jecxz
jnp
adc
repnz
xlat
scas
ret
int
and
dec
xor
inc
adc
ss
pushf
xor
xchg
cltd
movsl
add
cmp
xchg
scas
xor
dec
sbb
out
sbb
ljmp
or
push
lock
mov
pop
lahf
mov
addl
insb
imul
in
mov
sbb
or
mov
jle
mov
dec
into
pop
mov
pushf
xchg
ror
mov
mov
loope
pop
sub
xchg
out
inc
add
jmp
jl
jmp
push
add
sbb
push
sti
and
mov
or
cs
adc
inc
or
dec
dec
cs
aam
std
lret
int3
fnstenv
add
sti
movsl
inc
pop
adc
int
cmp
inc
xlat
adc
sub
popl
cmp
jle
pop
adc
add
cwtl
xchg
sbb
into
push
dec
dec
add
lds
add
adcl
repnz
push
xchg
inc
mov
cmp
cld
cvtps2pi
movsb
jmp
icebp
fsubr
dec
xchg
sbb
mov
pop
lods
mov
push
mov
fiaddl
mov
clc
cmp
aam
sbb
pop
out
and
mov
and
push
jmp
mov
js
jg
stc
inc
or
stc
movsl
mov
adc
mov
sbb
fadd
in
clc
incb
test
fsubs
ja
dec
adc
cmc
xchg
xor
cmp
fs
test
or
aaa
in
popf
icebp
shlb
test
sub
inc
dec
dec
inc
into
nop
lods
inc
dec
inc
add
cltd
jae
addr16
mov
pop
sbb
cmpsl
push
loop
sbb
test
xor
mov
jmp
adc
push
call
xchg
push
push
jno
out
xchg
mov
into
stos
push
or
adc
adc
jl
mov
jmp
rolb
imul
or
aam
test
add
dec
jge
sbb
ret
pop
xorb
push
shlb
ja
push
lret
mov
stos
adc
dec
xor
movsl
sbb
leave
sbb
sbb
ljmp
push
cmpsb
dec
test
pop
popf
push
mov
jp
add
mov
data16
cmp
stos
aad
sti
jns
xor
mov
pop
loop
xchg
iret
icebp
sbb
popa
jno
ret
pop
jge
mov
inc
cmc
or
mov
sbb
push
inc
pop
mov
mov
outsl
roll
push
sbb
outsl
dec
fldt
add
insb
mov
and
cld
jl
cmp
aas
mov
push
xor
lods
or
mov
or
mov
pop
enter
lods
into
bnd
sbb
jmp
aad
xchg
push
sub
pop
scas
adc
dec
mov
xlat
es
mov
mov
mov
sbb
pushf
test
or
adc
shr
call
movsl
jp
fst
popa
cmp
shrl
xlat
inc
mov
and
and
sub
cmpsb
adc
hlt
push
hlt
scas
dec
imul
ljmp
roll
xchg
mov
out
mov
pop
mov
inc
cmp
popa
and
ret
sub
add
xor
repnz
gs
jmp
sbb
filds
adc
mov
lcall
arpl
mov
adc
cmp
mov
outsb
sub
mov
fisubs
dec
clc
aam
cmp
xor
fisttpll
sarl
mov
movsb
and
outsb
lds
sub
cmpsb
in
jne
jno
sbb
mov
jmp
addr16
stc
dec
lock
xor
xchg
cmpsl
mov
jno
repz
pusha
jp
xchg
incl
mov
out
roll
or
cmp
sub
fs
cli
repnz
push
xor
in
mov
mov
orl
inc
jle
fdivrp
popa
repz
js
add
sbb
fwait
cmp
xchg
shl
push
cmc
xor
outsl
stos
xor
sbb
dec
mov
jmp
xchg
ss
rol
in
or
mov
mov
push
leave
push
aam
dec
int
ss
int3
fwait
mov
in
lcall
pop
inc
shll
js
mov
lahf
jp
xchg
dec
aad
jmp
test
shl
xorl
fyl2xp1
mov
decb
imul
jmp
bndstx
mov
mov
cli
loope
or
pop
cmp
stos
je
xchg
test
call
mov
rcl
test
les
hlt
adc
push
mov
cmp
jae
cmpsl
adc
sbb
cld
mov
jne
xchg
clc
xor
xor
arpl
fs
enter
ds
out
push
inc
lock
xor
jg
lret
jb
shrb
mov
inc
sub
add
add
cmp
testb
sbb
loope
pop
cmpsb
adc
in
and
and
lock
or
enter
jb
movsl
push
sub
std
sub
xor
call
out
movsl
xor
and
adc
sbbl
or
sbb
arpl
add
mov
xor
sub
fwait
jb
sub
jne
das
nop
stc
inc
stc
xchg
fs
cmc
jg
fsubr
lret
leave
cmc
push
decl
and
fwait
imul
or
cltd
in
xchg
jg
jecxz
js
mov
xor
mov
xor
je
add
sbb
jne
cwtl
xor
loopne
mov
pop
lret
dec
in
pop
mov
xor
sbb
loope
aam
add
pop
and
ret
stc
dec
fcmovnbe
dec
pop
into
dec
sarl
fisttpll
mov
loop
xorb
adc
cld
cmp
and
sarb
movsb
cmp
and
lret
sub
and
xor
int3
mov
sahf
stos
mov
and
push
jo
aaa
mov
mov
mov
xchg
mov
dec
pusha
push
and
or
cltd
xchg
cmp
xlat
or
popf
mov
mov
repnz
pop
sahf
fstl
roll
das
shll
mov
cmp
je
aas
pavgw
adc
lret
xor
sbb
cmc
xorl
xor
dec
iret
out
dec
adc
out
mov
repnz
and
cltd
lock
enter
int3
cmp
out
xor
clc
aam
fists
fcomp
cltd
lret
add
push
icebp
mov
test
mov
or
mov
sbb
lock
subl
adcb
push
xor
cli
out
pop
in
xor
pushf
cld
cmp
jo
xchg
fs
in
xchg
cmp
mov
pop
div
mov
xlat
addr16
push
subb
rcrl
jnp
in
ljmp
lds
add
push
lock
mov
or
lahf
std
mov
push
sahf
pop
and
and
push
inc
ret
cmp
test
xchg
lahf
push
xchg
sub
scas
push
inc
popa
push
mov
mov
xchg
cmc
cmc
popf
cmp
jno
or
movsb
jbe
xor
pop
mov
sbb
jbe
inc
push
add
imul
imul
xchg
daa
jne
xlat
adc
scas
mov
mov
push
inc
xor
mov
push
popf
mov
inc
add
jg
pop
jg
dec
add
sbb
mov
ret
add
dec
mov
lds
or
xchg
test
aad
cmp
add
or
or
mov
insb
mov
add
pop
sbb
int
pop
pusha
fs
xchg
xor
mov
cmp
testl
mov
jb
lcall
sahf
pop
sbb
xchg
push
push
insb
cs
sub
mov
inc
mov
mov
cli
adc
inc
push
xchg
mov
mov
jne
hlt
lds
jnp
ret
aam
fimull
loop
xor
cmp
bound
add
dec
mov
inc
data16
or
inc
mov
test
lea
cmp
pop
pusha
mov
sbb
and
mov
xor
mov
incl
mov
push
loop
jle
cwtl
js
pop
testl
sahf
into
jne
inc
ja
jp
cmpsl
mov
sub
jge
out
push
addr16
out
ret
popf
dec
je
das
xor
dec
icebp
mov
dec
xchg
sub
je
cmp
ss
mov
mov
mov
ljmp
jb
test
push
into
and
mov
mov
mov
jnp
xor
test
pop
shlb
xchg
std
in
loope
or
scas
jns
inc
mov
mov
dec
mov
lods
pop
push
fs
pop
test
je
int3
adcb
cmp
outsl
dec
hlt
inc
mov
je
lcall
fcomps
pop
sub
jae
inc
cmp
sbb
fisubrs
in
cwtl
sbb
mov
rcrb
lods
imul
cmp
dec
nop
cmpsb
lods
into
jae
hlt
xchg
pop
push
lret
lods
xchg
push
cltd
xor
aad
jg
sarb
xchg
shl
push
add
jns
stos
scas
or
cltd
push
repz
mov
out
inc
fidivrl
adc
cmp
lcall
repnz
xchg
popa
mov
fnsave
xor
add
bound
mov
xorb
inc
mov
and
jns
xchg
jne
cmpsl
mov
xor
mov
daa
in
movsb
pusha
mov
cmc
hlt
les
inc
and
sbb
jl
add
fildl
imul
sub
or
xchg
in
test
mov
lock
movsb
cmpsl
ficompl
jb
inc
xlat
jl
scas
jns
loopne
mov
and
imul
xchg
lcall
mov
cmpsb
js
js
sbb
pop
sub
fcomps
fcomps
loop
int3
lret
cmp
cmp
sahf
push
and
arpl
mov
lahf
add
mov
mov
les
test
loop
pop
fcmovbe
pop
loope
xchg
xchg
call
inc
push
jp
imul
sti
cmp
xor
in
adc
mov
test
rclb
rcr
je
pushf
dec
mov
ret
ljmp
jns
fisttpl
stos
xchg
mov
fsubrp
call
loope
dec
shll
fldenv
in
test
pop
test
jno
fdivrp
sbb
scas
sbb
mov
fadd
loop
cmp
sbb
and
stos
dec
adc
cmp
push
stos
stos
xchg
gs
push
int3
jbe
fmuls
fsubl
incl
movb
dec
push
repnz
into
test
xchg
sub
cwtl
insl
and
xor
stos
in
mov
aam
xor
out
sub
test
std
rolb
push
jae
pop
scas
sub
or
addr16
xor
jl
mov
js
mov
fidivs
outsb
js
jl
xchg
lds
inc
xor
jbe
roll
sub
cmp
stos
in
cld
push
add
mov
dec
out
cmp
neg
gs
std
aaa
dec
xchg
sbbl
jne
push
test
push
pop
mov
loope
int
push
mov
lock
xor
jbe
js
mov
cltd
rdpmc
hlt
sub
xchg
outsl
ds
xchg
push
sub
clc
out
mov
push
or
cmp
push
push
xor
idiv
dec
sbb
stos
pop
movsb
mov
leave
mov
mov
out
pop
fisttpl
test
cli
inc
and
sbb
lods
add
std
pop
add
scas
ret
fimuls
mov
ficompl
or
shlb
add
dec
test
bound
sbb
push
jg
mulb
stos
jbe
sub
mov
repnz
push
repnz
rcrl
sbb
sbb
fistps
sub
icebp
sbb
jmp
movsl
mov
cmc
dec
and
popa
nop
inc
lret
cs
outsb
loop
push
ds
xor
pop
mov
cmpsl
xchg
push
cmc
test
adc
out
lahf
push
jmp
sbb
jbe
dec
sub
dec
mov
dec
je
cmp
fwait
pop
pop
ljmp
xchg
loopne
int
jg
xchg
sbb
xchg
cmp
mov
xor
leavew
fnsave
leave
dec
aad
std
lods
cmp
movsl
imul
daa
xchg
mov
cmpl
imul
pop
jo
push
jp
xlat
jo
cmp
pop
enter
sbbb
add
xchg
outsl
es
sbb
leave
inc
push
xor
aam
repz
xchg
outsl
ret
loopne
imul
adc
lds
hlt
fwait
mov
lods
out
cmpsl
mov
in
icebp
lret
arpl
les
repz
fisubrl
lea
es
test
sub
sbb
std
xchg
call
pusha
mov
fnstenv
lock
mov
repnz
std
pop
orb
xchg
add
xchg
pop
xor
js
cmp
out
mov
outsl
mov
lods
cmpl
jno
mov
mov
mov
out
ljmp
or
subl
sub
cmp
int3
push
pusha
insb
test
push
add
mov
sub
jmp
outsl
fmull
mov
in
fld
out
jae
xchg
mov
loope
or
push
out
jno
mov
dec
mov
loopne
ds
xchg
fdivr
gs
mov
inc
fsubrs
es
dec
cvtpi2ps
call
ljmp
mov
cmc
sub
pop
inc
xchg
and
inc
sbb
mov
dec
nop
mov
outsl
rcll
outsb
ret
ljmp
ffree
adc
mov
cmp
rol
inc
int
lret
push
fwait
xchg
push
mov
popf
outsb
mov
sti
and
jp
gs
mov
cmp
dec
inc
pop
lcall
mov
inc
jge
rcll
popf
test
mov
sub
pop
pop
cltd
mov
jbe
xor
rorl
leave
and
push
cltd
jno
xor
repz
pop
mov
inc
aaa
ljmp
bound
inc
lahf
mulps
adc
std
stc
inc
push
rorl
incl
adc
imul
add
std
mov
mov
jecxz
inc
lods
sbb
lods
ja
lods
mov
sbb
mov
mov
and
je
inc
pop
xor
sbb
mov
xchg
mov
inc
xchg
test
psubd
xchg
lock
std
inc
xor
or
push
in
aaa
stos
add
push
sub
out
xchg
ljmp
adc
xchg
inc
adc
outsl
cmp
movsl
jbe
mov
jmp
movsl
sub
cld
out
cltd
stos
bound
or
xor
jg
jo
test
inc
inc
adc
push
jl
in
out
jb
rorb
jno
dec
outsl
sbb
mov
repz
jmp
dec
repz
pop
cmp
mov
mov
push
mov
xor
incb
jge
xor
sub
xchg
pop
xchg
cmp
cmc
push
mov
outsl
rol
jge
xor
outsb
mov
iret
lds
repz
mov
push
mov
mov
mov
dec
test
lret
xor
dec
outsb
push
xchg
test
clc
ficoml
daa
dec
aad
push
repz
inc
cmpsl
orb
push
shl
repz
dec
mov
sub
jl
jp
nop
pushf
sbb
add
popa
pop
mov
loop
add
mov
lahf
sti
sti
sahf
sbb
cs
sarl
insb
aad
mov
gs
mov
inc
sbb
shl
mov
pusha
bound
pushf
adc
int3
repz
push
xchg
mov
int
rcr
mov
push
lods
cld
and
push
push
test
mov
or
mov
xorl
mov
jmp
adc
add
pop
inc
xchg
fisttpl
jecxz
xchg
xchg
pop
sub
mov
lock
xor
mov
push
xor
inc
mov
fistpll
jge
ret
repnz
loope
xor
jge
movsl
call
aas
pop
inc
sti
mov
xor
push
or
mov
in
fimull
subb
fldt
pop
sahf
insb
add
addb
xchg
and
aas
lods
push
jae
daa
lock
add
mov
dec
mov
inc
lcall
jnp
push
sbb
dec
adc
jne
mov
jmp
push
mov
xor
movsb
sarb
xor
push
inc
arpl
inc
pop
test
scas
pushf
lds
jl
jg
cmp
fwait
idiv
aaa
or
inc
jecxz
cs
pusha
mov
adc
mov
idivb
stos
pop
sub
sub
std
jmp
sbb
mov
cmc
loop
icebp
pop
adc
inc
mov
lods
ljmp
jg
adc
packsswb
cmp
cmp
dec
out
cmpsb
pusha
aaa
or
mov
mov
push
dec
sub
xorl
mov
in
outsb
xor
das
outsl
stos
pusha
cmc
jae
inc
mov
mov
mov
add
arpl
and
xchg
loope
mov
xchg
push
adc
and
mov
mov
xchg
jb
push
add
add
sahf
jb
fcomip
add
aad
or
out
jl
cmpsb
mov
pop
popf
push
addl
roll
lret
add
pusha
push
adc
push
or
roll
push
cltd
sahf
imul
xor
fisubrl
jns
movsb
add
aad
xchg
jg
shl
or
and
popf
scas
and
std
fdivl
stos
fdivr
xchg
hlt
sub
xor
mov
and
nop
push
inc
mov
lods
cmp
and
jle
mov
inc
sbb
sbb
xchg
xchg
loop
mov
add
sbb
mov
pop
rclb
mulps
sub
jle
dec
movsl
mov
mov
push
dec
add
xor
shl
jmp
sbb
mov
pop
mov
pusha
xor
sbb
inc
mov
fisubs
xor
jo
sarb
fwait
xlat
mov
stc
mov
movups
mov
fs
inc
daa
inc
stos
sahf
pop
insl
adc
and
sub
fistl
aas
sbb
push
push
das
sbb
xchg
adc
into
lods
jp
lret
inc
or
imul
mov
fisubrl
test
push
out
aam
and
mov
push
xor
mov
and
cmp
and
fstpl
int3
mov
pop
add
mov
not
xchg
dec
cmpsl
das
std
ljmp
js
scas
sbb
sbb
daa
das
fcmove
sbb
adc
mov
push
adc
cmpsl
test
popa
push
pop
and
pusha
sub
jge
fidivrl
aaa
lock
int
push
mov
xorb
or
enter
sub
jl
cmp
inc
or
fdivs
imul
icebp
pop
ret
mov
add
cld
push
cmp
popa
fisttpll
mov
ret
sub
add
jb
imul
jo
mov
and
cs
aaa
retw
es
push
jl
ds
jg
sbb
jbe
add
mov
fcomps
pop
or
cmp
cld
jge
fsts
jbe
daa
sbb
enter
inc
pop
cs
cmpl
mov
cmp
bound
adc
cmp
or
jae
jmp
bound
aaa
dec
inc
repz
pop
andb
jecxz
pop
stos
push
push
pop
gs
sub
frstor
js
mov
mov
test
xchg
mov
xchg
fsubrs
mov
or
stos
sub
inc
sbb
jbe
inc
ss
negl
sub
ficoms
insb
cmc
sub
xor
or
loop
xchg
ljmp
push
je
sub
stos
add
inc
arpl
pop
ret
fcomi
bound
pushf
push
fwait
lret
scas
cmpb
jns
fiaddl
push
loope
pop
xchg
or
mov
and
insb
xlat
stc
daa
es
out
or
pushf
dec
outsb
inc
div
xor
jb
test
test
clc
add
sbb
jmp
cmp
and
pop
or
jns
xchg
jbe
test
lods
push
pop
sbb
rcrb
push
into
jb
push
add
adc
loope
fistpl
sub
pop
repz
sub
cmp
mov
dec
pop
xchg
cmp
xchg
dec
test
call
xor
pop
jg
loopne
movq
mov
lds
test
bound
cmpsl
lret
xorb
stos
fcompl
cld
aam
cwtl
cmp
out
push
es
inc
cmp
les
imull
aaa
push
test
ds
inc
arpl
int3
mov
andb
jne
cli
sub
movsb
js
lock
mov
xorl
and
push
or
mov
pop
test
push
clc
aad
dec
adc
aas
xor
pop
stos
popa
mov
stos
scas
mov
push
add
mov
add
xor
push
push
and
sbb
sbb
andl
add
mov
or
mov
adc
out
rolb
stc
xchg
mov
ja
xor
mov
xchg
pop
imul
insb
loop
xlat
iret
or
mov
jb
pop
outsl
pop
jecxz
in
rcrb
lret
les
ds
jmp
fistl
inc
test
sub
shll
call
pop
data16
mov
sub
dec
jno
stos
sti
xor
jg
jmp
cli
or
mov
cmp
insl
push
inc
add
imul
or
js
stc
mov
mov
subl
out
or
sbb
or
ret
stos
xor
adc
dec
and
loopne
jb
push
std
sbb
jo
fmul
mov
clc
addr16
out
jb
inc
aas
dec
push
fst
sub
cs
out
call
fistpll
decb
mov
mov
pop
mov
add
dec
ret
ret
out
shr
scas
jmp
xor
popa
add
add
cli
test
mov
xchg
out
fsubrs
cmp
dec
xor
cmpsb
aam
in
test
imul
notl
dec
xor
push
mov
xor
push
xchg
and
fistps
jge
add
jns
xchg
push
test
insb
dec
adc
jnp
lret
bound
xlat
pop
push
iret
lds
jb
sbb
fisubl
push
sbb
aaa
lahf
jno
rorb
xchg
xchg
pop
out
dec
mov
fs
add
and
jp
loope
pop
jo
jns
adc
stc
lds
pop
inc
jl
push
mov
sbb
pop
aam
ja
imul
dec
and
cmp
push
pop
ret
jp
out
mov
and
repnz
insw
jae
imul
mov
mov
jbe
fsubrs
adcb
loop
xor
mov
sub
xchg
hlt
xchg
int
and
fwait
push
cltd
fnsave
xchg
mov
movsl
arpl
test
orb
xchg
push
iret
mov
mov
cmpsl
cwtl
gs
adc
adc
push
inc
sbb
cmc
and
sti
movsb
lds
add
xor
das
cs
xchg
dec
push
xor
pop
fcoms
aad
lds
jns
ds
xchg
inc
xor
jp
icebp
subl
mov
dec
jns
sbb
mov
inc
cmp
push
fadds
jns
xchg
mov
cmpsb
scas
popa
pop
xchg
inc
jne
fsubr
imul
add
dec
xchg
pop
negb
in
or
and
push
nop
push
inc
pop
pop
repz
sarb
adc
mov
das
test
out
int
lea
jl
andb
mov
pop
jle
dec
aad
cli
bound
push
hlt
mov
rclb
cmp
stc
clc
loopne
mov
in
sbb
cli
call
pop
adc
subl
lahf
iret
orb
cmpsb
push
or
xor
cmp
cmp
push
xor
xorb
enter
std
cmp
xor
fdivl
cltd
lret
adc
mov
mov
ljmp
and
or
jl
shl
imul
or
inc
lods
daa
jae
dec
push
pushf
xchg
sub
jg
out
dec
dec
push
movsb
mov
cmp
dec
lret
ret
jbe
test
jnp
int
mov
pop
lea
loopne
mov
add
decl
leave
shll
cmc
and
ret
pop
and
fbld
int3
repnz
xor
mov
mov
out
mov
mov
jle
or
pop
pop
stc
add
push
iret
push
sarl
push
aas
arpl
fnstenv
shr
or
jge
cltd
lea
cmpl
sbb
loope
pop
cmp
xlat
adc
inc
pushf
mov
es
cmp
adcb
mov
popf
inc
paddusw
dec
add
inc
addr16
ljmp
mov
or
cld
lds
daa
push
and
imul
data16
jbe
pop
fst
mov
sbb
rclb
loope
aas
add
mov
fbld
pop
out
sbb
fwait
mov
cmpsl
mov
in
out
xchg
cmc
sbb
lock
stos
sub
pop
or
adc
arpl
jmp
lods
insb
mov
pop
bound
push
nop
sub
add
cmp
xlat
fbld
xor
and
test
push
les
sahf
lods
jge
or
mov
xchg
fbstp
pop
xor
push
daa
sbb
ds
jo
ret
jecxz
mov
dec
mov
ds
add
push
xchg
or
and
sbb
fcomi
mov
out
mov
scas
push
or
mov
mov
outsb
or
or
xorl
pop
cmp
sbb
add
cmpl
fs
dec
hlt
xchg
mov
insb
cmp
pushf
test
testl
fwait
push
and
or
shlb
mov
sti
shll
std
adc
jnp
add
sti
or
ret
hlt
addr16
out
xor
aad
movsl
arpl
popf
jmp
test
mov
pushf
lret
inc
out
xchg
dec
mov
inc
adc
cltd
sbb
popf
push
scas
dec
pop
jb
add
mov
push
sub
and
xchg
push
sbb
lcall
jb
lcall
jmp
cmp
sar
xor
jp
scas
imul
sub
add
rcrb
movsl
jno
mov
mov
cmp
or
sub
mov
leave
hlt
stos
push
push
insb
xchg
sbb
out
and
stos
jno
lret
in
mov
jg
lret
fcomps
xchg
test
test
xor
xchg
cmpsb
xchg
negb
xchg
sub
or
xchg
imul
call
mov
fsubl
adcl
push
dec
jmp
testl
mov
mov
int3
mov
xchg
shlb
sub
pop
mov
and
or
rorb
cwtl
cld
inc
adc
dec
lea
into
jno
sbb
sbb
or
mov
movups
fucomip
sbb
rol
and
adc
loop
loope
cli
lret
lock
adc
shrl
sbb
inc
test
xchg
pop
lcall
call
sub
lahf
loop
xor
ficompl
loop
xchg
mov
cld
or
mov
or
sarl
ds
pop
add
pop
dec
cmp
mov
xor
inc
adc
fidivrl
push
xor
xor
sbb
gs
or
inc
cmpsb
add
push
shrl
pop
loop
mov
push
loopne
mov
inc
in
add
les
jl
movsl
fldenv
mov
mov
adc
xchg
psubb
mov
ret
ja
mov
lahf
xor
aad
cmp
nop
cltd
inc
jnp
shrl
push
mov
cmp
sbb
sbb
mov
xchg
rcl
out
cmpsl
dec
subb
gs
push
das
sub
shll
jmp
jl
test
jle
xchg
mov
mov
cmp
repnz
fs
mov
mov
mul
xor
ucomiss
vsubpd
rcrl
in
fsubl
add
xor
dec
pop
adc
jmp
inc
repz
jae
movsb
dec
jle
dec
das
dec
jge
add
inc
mov
faddl
xchg
ret
cmp
or
jecxz
sub
xor
inc
and
lds
xchg
scas
nop
mov
out
push
gs
cmovno
and
fisubrl
mov
mov
push
adc
insb
rclb
pop
mov
ds
inc
jnp
fimuls
stc
push
fldl
je
dec
aaa
xchg
nop
leave
sti
jge
into
sahf
aam
adc
frstor
dec
imulb
push
imul
cmp
pop
cltd
dec
repz
rolb
push
outsb
test
pop
dec
decl
loope
repz
iret
inc
iret
outsb
bound
mov
rcrl
int3
mov
mov
addb
sti
loop
movsb
neg
clc
test
shll
add
loope
mov
std
jg
jmp
mov
sbb
add
cli
es
stos
out
dec
pop
lcall
scas
sub
push
pop
fisubs
pop
out
jp
mov
inc
fidivs
jns
movsb
stos
call
xchg
fldl
cmp
out
xchg
add
mov
or
adc
iret
lret
in
subb
adc
jp
push
les
add
pusha
stc
test
into
popf
mov
mov
mov
pop
int3
enter
and
mov
pop
test
outsl
sub
scas
not
jmp
fwait
or
adc
ljmp
or
rorb
cmp
popf
inc
sbb
push
jmp
in
or
mov
pop
push
mov
dec
jl
pop
sbb
daa
cmc
dec
shll
lahf
mov
stos
fwait
sbb
sub
cmp
out
xchg
movsl
repz
sbb
imul
lods
dec
stos
inc
pop
mov
inc
sub
xor
arpl
and
mov
push
pop
xor
push
dec
aas
sbb
or
mov
cmpsb
mov
cli
sbb
pop
lea
adc
icebp
enter
outsb
cmp
xor
rcrl
fmull
jnp
pop
cld
jp
jmp
addr16
push
rorb
adc
mov
cltd
mov
mov
in
das
xor
fmull
cwtl
adc
dec
pop
xchg
xchg
in
xor
addr16
add
xchg
mov
dec
addr16
rol
jno
xchg
cli
bswap
pop
movsl
icebp
std
xchg
pushf
outsb
inc
add
pop
pushf
jge
cvtpi2ps
sbbl
push
stc
mov
cmp
enter
imul
icebp
cwtl
lret
outsb
xor
cmc
gs
gs
or
dec
adc
lods
jb
xor
and
xchg
mov
ljmp
adc
std
je
jnp
xor
int3
push
lcall
out
mov
jg
jae
in
or
push
ror
add
cltd
and
lods
jo
call
dec
mov
dec
fistpll
cmpsl
das
inc
mov
cmp
jne
sub
sbb
sub
testl
mov
jge
scas
and
inc
es
mov
movsl
adc
ret
push
jb
inc
lock
sbb
testl
push
icebp
dec
das
fucomp
or
pushf
xchg
arpl
pop
and
int3
sbb
dec
aas
out
mov
bound
stos
and
popa
mov
cmpsl
cwtl
packssdw
xchg
sub
pushf
adc
adc
fcoml
cmp
out
pop
push
xchg
loop
sub
jb
mov
leave
or
dec
iret
pop
mov
ds
xor
inc
mov
cwtl
push
jnp
out
pop
mov
sbb
lock
arpl
sahf
outsl
pop
add
js
arpl
lahf
mov
xlat
nop
dec
and
orb
lods
jle
cld
pop
jg
mov
mov
out
cli
movsl
mov
pop
dec
xorl
and
sub
inc
push
adc
out
popf
pextrw
mov
lcall
pop
hlt
dec
add
jl
or
ss
fisttpl
dec
mov
sbb
popl
jg
js
pop
jae
push
lcall
mov
stos
shl
mov
shl
loop
testl
cmp
stos
or
pop
inc
stos
out
sbb
dec
cmpsl
add
xor
pop
in
mov
ljmp
bound
jle
sub
mov
xchg
mov
push
adc
lret
add
pushf
loop
adcl
mov
cmp
in
shrl
scas
cmpsl
loop
dec
mov
outsb
mov
pop
xchg
jl
cld
popf
push
in
add
cmpsl
push
fisttpl
repnz
lcall
mov
cmpsb
outsb
hlt
pop
mov
adc
cmp
addl
or
cmp
daa
scas
dec
jno
rorb
adc
lcall
int3
add
loopne,pn
mov
pusha
xor
push
ficompl
je
popa
mov
push
add
or
dec
das
cs
aad
push
les
or
inc
lds
adc
aam
aad
xchg
sub
das
inc
cmc
mov
inc
repnz
mov
scas
lods
xorb
roll
or
nop
add
xor
test
xor
setl
push
out
sub
jne
fidivs
sbb
adc
mov
dec
add
sub
and
xchg
or
mov
outsb
push
fstp
jb
ficoml
fsubrs
lods
rorb
dec
mov
mov
mov
out
cmp
adc
lea
xchg
xchg
cmc
and
mov
jp
bound
js
std
pop
dec
sub
incl
in
ds
cmp
inc
ljmp
repz
push
mov
inc
cmp
and
mov
or
pop
pop
mov
mov
repz
jle
jecxz
int
fsub
xlat
gs
mov
subl
pusha
sbb
lea
jb
jb
push
bound
cmc
and
adc
mov
js
into
inc
bound
push
mov
cmpsl
and
add
sbb
bound
daa
out
adc
into
cmp
stc
fadds
adc
dec
pop
out
in
sahf
push
into
lods
clc
inc
jp
movsb
jno
push
ret
movsl
dec
inc
pop
pop
xor
mov
pop
shr
sub
mov
xchg
pop
jge
mov
sub
push
sbb
fisttps
mov
sbb
adc
push
adc
or
sbb
cltd
outsb
icebp
jns
push
push
add
dec
push
jno
notl
jge
fildl
data16
xlat
adc
ss
aaa
sub
in
dec
xchg
pop
lock
or
and
int
dec
cmp
ja
mov
aas
cmp
adc
inc
aaa
iret
pop
push
es
fidivrl
enter
outsl
shlb
movsb
repnz
xor
idivl
arpl
jb
mov
mov
sub
inc
or
dec
fsub
andb
insb
hlt
icebp
cmpsl
lcall
adc
cmp
xor
pop
and
popf
js
outsb
ljmp
cmc
push
cltd
mov
dec
mov
jbe
or
add
lods
push
pop
loop
out
cmc
data16
xchg
sub
cmp
jecxz
mov
pop
ss
mov
scas
lcall
xchg
or
test
aas
mov
and
cmp
fnstenv
cmpl
pop
or
mov
inc
mov
mov
inc
add
aas
fidivrl
fsubp
jne
lea
dec
jle
push
jge
pop
mov
rcll
push
testl
xchg
and
movsl
add
cmp
inc
jb
or
xor
pop
inc
imul
jl
popf
sbb
clc
es
mov
outsl
jmp
cli
rolb
adcl
leave
les
mov
mov
add
inc
mov
pop
iret
int
nop
dec
iret
or
pop
pop
daa
outsl
push
je
push
xchg
test
clc
lahf
jne
xor
pop
add
fnclex
into
enter
cmp
aam
adc
aaa
rolb
xchg
sub
cli
cs
mov
and
arpl
or
imul
loope
mov
shl
mov
add
push
xor
popf
movaps
dec
dec
or
ss
shrb
add
mov
cmpb
or
es
popa
sbb
dec
and
lcall
mov
cwtl
cmp
fsubrs
fwait
clc
stc
push
or
ret
mov
scas
push
inc
sbb
push
mov
sbb
dec
sub
adc
push
jp
insb
xlat
jmp
jnp
das
jns
mov
dec
loop
dec
cmc
and
shrl
cmp
jmp
dec
out
repz
fimuls
dec
repz
adcl
adc
lea
xor
fistpll
mov
mov
fadds
out
add
pop
mov
ds
mov
popa
and
mov
xor
leave
adc
popf
xchg
dec
or
mov
outsl
jae
pop
add
das
imul
inc
mov
rorl
jg
loopne
shr
lds
scas
mov
sbb
add
cmp
imul
adc
and
sub
push
test
add
loop
xor
cmp
xor
in
addr16
dec
sub
inc
movsb
inc
aam
jbe
pushl
mov
cmp
sub
xor
insb
outsb
add
roll
jmp
sti
jge
mov
iret
dec
loopne
mov
add
xchg
or
xor
xlat
fs
xor
cld
add
rol
jnp
sbb
outsb
mov
subb
aaa
int
sbb
lahf
jge
push
sub
mov
mov
mov
adc
mov
pop
mov
dec
and
push
jbe
out
fmull
cmc
push
outsb
js
clc
dec
dec
xor
lret
dec
xchg
fmul
lahf
popa
lods
jge
pop
roll
cli
lcall
in
push
aaa
testb
cmp
pop
insb
xor
das
hlt
lahf
lds
mov
dec
jge
xor
xchg
push
daa
ja
xchg
notb
icebp
adc
and
mov
or
ja
outsb
enter
cmp
jo
lret
dec
sbb
mov
aas
inc
in
das
scas
mov
sbb
aam
sub
mov
jno
mov
jbe
popf
adc
push
or
xchg
cmp
add
dec
or
sti
in
push
andl
sbb
lea
mov
fs
or
and
stc
mov
dec
jo
push
jg
stc
push
sub
dec
shrl
loopne
ljmp
cld
cmpsb
ret
call
dec
and
mov
ljmp
xor
shlb
ss
lcall
cli
sahf
cmp
incb
pop
lea
pop
fmulp
repz
xchg
sub
and
lea
orl
ret
or
xor
or
push
xchg
sbb
mov
push
sub
sbb
push
mov
cmp
mov
imul
int3
repnz
jp
cmp
js
ret
xor
cmp
sbb
xor
jg
inc
add
xchg
loope
or
minps
ss
mov
mov
sbb
jl
sub
pusha
add
pop
push
js
adc
roll
mov
cmpsb
out
ds
mov
mov
cltd
cli
push
into
ja
sbb
sbb
cltd
push
xor
xchg
stc
enter
shll
adc
sub
mov
sub
pop
mov
pop
jnp
js
and
aas
loope
out
xor
jl
sti
push
xchg
sarb
inc
inc
fwait
test
jp
sbbb
jmp
pop
out
nop
daa
push
sub
mov
mov
int
push
dec
mov
mov
repz
push
xor
stc
jle
imul
adc
iret
sub
sub
fdivl
xor
fdivr
ret
rcll
mov
cmpsl
xchg
sbb
push
pop
sub
mov
fcomps
adc
imul
add
jnp
xchg
dec
jns
inc
scas
dec
mov
pop
add
inc
and
sbb
dec
xchg
loop
sbb
jle
testl
lds
popf
add
inc
and
fcom
dec
sub
pop
popa
dec
insl
in
xor
jmp
adc
loop
dec
or
repnz
int3
xchg
adc
addr16
sahf
loop
push
aas
adc
cmp
fnstenv
lret
xor
data16
add
push
cs
pushf
dec
lods
adc
xchg
adc
daa
in
in
aas
xor
icebp
leave
push
push
dec
mov
aam
test
jecxz
adc
or
ljmp
enter
inc
repz
aaa
sub
cmpsl
dec
es
into
test
int
inc
imul
mov
stos
fimuls
mov
pop
mov
fisttps
fcmovnb
imul
push
loop
notl
and
mov
cmpsb
ss
cltd
and
sub
ret
into
aam
flds
sti
outsb
or
ja
cmp
in
inc
pop
mov
pop
js
iret
push
pop
pushl
mov
xchg
pop
xchg
rorl
movsb
daa
mov
into
stos
sub
repnz
pop
roll
jmp
cmpsb
jp
mov
insb
mov
jnp
jbe
sub
fidivrs
mov
int3
xor
idiv
cmpsb
hlt
dec
out
hlt
jecxz
push
mov
jae
jne
jnp
sbb
xchg
orb
jo
adc
adc
push
out
rorl
jne
fdivrs
inc
mov
dec
outsl
and
inc
in
pop
das
lret
adc
adc
add
fistpl
popa
mov
fsubr
fsubrl
loopne
js
cmpsl
mov
adc
cwtl
std
adc
adc
fs
add
jg
leave
mov
push
test
outsl
sahf
xchg
test
push
push
mov
adc
std
shll
loope
mov
in
fcmovnbe
xchg
int
ja
adc
roll
mov
jg
jecxz
iret
addr16
je
movsb
adc
jbe
std
data16
out
popa
arpl
mov
stos
ljmp
test
push
in
enter
loope
adc
sbb
xchg
ss
frstor
or
mov
lcall
or
int
push
jno
xor
loop
lret
mov
aas
pmullw
movsl
fists
sub
scas
xor
shll
js
mov
outsb
test
mov
fcom
dec
cmc
cmp
stos
mov
xlat
inc
inc
push
and
in
stos
lcall
add
push
shlb
mov
lock
sarl
addr16
movsb
and
lcall
cmp
sub
stc
jmp
and
aas
les
outsb
movntq
out
xorl
lds
push
aam
movsl
inc
hlt
inc
add
cmp
mov
lret
scas
out
orl
enter
shll
out
out
scas
xchg
cmp
jle
mov
mov
fmul
cmp
jecxz
and
xor
je
adc
sub
out
sub
outsl
inc
in
sbbb
pusha
pop
sub
mov
mov
lods
lcall
cmc
adc
sbb
daa
xchg
cmp
das
hlt
sub
adcb
jge
in
mov
and
sbb
cmp
or
or
insl
rcl
testl
out
insl
add
jmp
sub
icebp
push
out
xchg
mov
xchg
dec
imul
std
push
pusha
push
or
jg
or
xchg
mov
lret
fisubl
das
jns
sbbl
cmpsl
jecxz
pop
mov
cmp
dec
data16
divb
sub
lcall
jle
dec
fcompp
sbb
das
dec
push
ret
cmc
mov
scas
sub
or
mov
ljmp
push
mov
cmp
cmp
iret
adc
jmp
inc
adc
imul
jecxz
adc
or
jbe
into
adc
in
xor
jo
das
cmpsb
add
outsb
jecxz
ficoml
dec
jmp
cmp
filds
jns
mov
imul
mov
fnstsw
inc
jno
xchg
test
push
pop
mov
enter
mov
js
mov
lahf
mov
dec
dec
pusha
ficompl
xchg
aaa
add
dec
imul
test
push
inc
mov
mov
fisubrs
aaa
stc
outsl
add
pop
xor
clc
pop
jnp
lret
mov
fiaddl
add
int
fsts
ss
pop
jb
xchg
jecxz
gs
dec
cltd
in
scas
jp
scas
push
jl
and
adc
sub
sarb
mov
movl
adc
xchg
inc
xor
and
ficompl
nop
mov
lea
jne
mov
mov
js
das
and
sbb
stos
ja
inc
sbb
or
lods
mov
dec
test
inc
out
inc
mov
out
shlb
iret
mov
stos
fwait
sub
mov
into
js
mov
cmp
lcall
outsl
or
push
jecxz
jle
push
xchg
push
aas
cmp
in
adc
inc
js
ficoml
mov
inc
sbb
mov
sub
lock
or
sti
das
pop
sub
rolb
dec
sahf
push
mov
and
pop
sbb
sub
stos
jns
adc
clc
mov
in
or
inc
inc
aam
cltd
imul
test
rep
pushf
lret
and
inc
sub
mov
cs
cmpsl
int3
xchg
imul
std
xor
or
inc
rorb
fdivrl
mov
movsl
mov
mov
sub
lods
mov
test
xchg
and
cmpsb
lahf
test
inc
dec
enter
or
pop
sbb
pop
clc
add
xchg
das
jp
out
pop
dec
lods
xor
aas
test
sarb
cli
push
enter
pop
pop
int3
inc
or
enter
sti
stos
insb
mov
push
xchg
push
cmc
sbb
cmp
jle
repz
mov
insl
and
insb
xchg
push
fs
in
pop
dec
dec
cwtl
push
out
add
sbb
jno
mov
mov
pop
pusha
test
mov
movsb
pop
mov
sbb
inc
aam
lods
mov
daa
sbb
jle
je
adc
push
mov
jne
fisubl
pop
test
shlb
leave
out
enter
fisubrs
sbb
jl
outsb
fbld
mov
mov
push
lods
cmp
mov
test
cli
and
jp
aas
jmp
outsl
push
aam
mov
clc
or
mov
sbb
or
jno
hlt
push
outsl
push
cs
jo
enter
pop
mov
lahf
mov
mov
mov
ja
pop
jl
repnz
mov
cmpsb
imul
rorl
shlb
sbb
cmp
push
arpl
leave
lods
cmp
cld
scas
cmpsb
scas
and
out
cmp
mov
jb
mov
push
mov
bound
or
es
cli
lods
loopne
inc
lds
out
sub
push
test
aas
pop
sub
cmp
aas
adc
sub
sbb
inc
push
imul
dec
mov
nop
xchg
push
push
iret
prefetch
aam
test
leave
ror
dec
mov
outsb
dec
js
add
insb
repz
xor
lret
cwtl
mov
aad
sub
mov
cwtl
jmp
xchg
push
inc
xchg
lret
cmp
fiadds
je
pop
inc
jno
cltd
outsb
inc
addr16
insl
lahf
xor
mov
jle
scas
cli
jno
jg
mov
bound
pop
cwtl
inc
repnz
push
fmuls
mov
scas
add
inc
jl
fcmovnu
into
dec
out
push
out
xor
iret
in
loopne
and
add
test
es
dec
jae
bound
add
std
mov
push
sahf
adcb
enter
ja
iret
mov
push
mov
cld
or
cs
mov
dec
cmpsb
cltd
leave
int3
add
negb
lds
imul
popa
movsb
out
fwait
push
inc
loop
bound
sub
lock
out
cltd
jge
rcrl
jnp
outsb
mov
jg
add
dec
int
sbb
or
dec
and
mov
adc
arpl
call
xor
jnp
cmc
or
add
xlat
test
sub
imul
push
movsl
add
stc
pshufw
and
lods
sub
pop
repnz
ss
sbb
das
xor
aad
jle
nop
pop
inc
out
mov
xchg
in
push
stos
pop
and
or
sti
and
push
pop
cltd
popa
js
and
enter
lock
pushf
clc
or
add
mov
adc
cmp
and
inc
js
sbb
jb
fs
frstor
add
in
ret
out
cmovb
rorb
add
push
sub
push
ret
and
fiadds
push
push
dec
cwtl
adc
lcall
dec
jns
adc
jae
mov
xchg
out
inc
aad
fwait
mov
sbb
iret
neg
imul
jno
xor
lods
jns
js
or
jnp
jl
adc
insb
jbe
jmp
add
outsb
sub
jno
push
arpl
xchg
in
popa
stos
xchg
jl
call
shl
push
repnz
cmp
sub
je
sbb
jmp
inc
test
ljmp
ret
out
cpuid
push
jne
sub
cmp
test
bound
sarl
into
int
in
lods
cmp
jge
xor
and
stos
int3
subl
mov
cmpsb
or
mov
adc
insl
lock
divb
scas
jnp
mov
mov
xor
adc
jg
and
pop
pop
out
in
test
cs
test
mov
lret
mov
imul
jns
inc
outsb
pop
sbb
mov
and
cmpl
sub
pop
shl
inc
arpl
iret
jnp
stos
and
pop
orl
repnz
add
cmpsb
mov
mov
imul
movsb
ficoml
mov
int3
testb
cmp
dec
sub
dec
mov
inc
mov
xor
cld
inc
aaa
repnz
adc
xor
cmpsl
push
jmp
push
mov
or
mov
in
rclb
cmp
adc
sbb
cmp
push
jl
push
popa
loope
sbb
std
fwait
jne
push
scas
add
cld
inc
loopne
xchg
pop
push
jb
ljmp
or
dec
push
cld
pop
repnz
cmpsb
je
in
dec
dec
xor
mov
xlat
mov
pop
xor
dec
cmp
in
mov
jo
stos
es
push
subl
adc
jl
leave
xchg
adc
pop
cld
cmp
sub
outsl
stc
rcrl
je
mov
cmpsb
addr16
lcall
fldcw
sbb
inc
fbstp
push
fiaddl
sbb
push
add
jae
out
out
push
mov
aas
jnp
loopne
fsubl
cli
ret
pop
pop
jle
push
adc
xchg
jg
fsubrs
xchg
mov
jbe
enter
aad
pop
sub
daa
test
dec
out
shl
sub
mov
movsl
jmp
stos
aaa
mov
ret
mov
add
out
xor
xchg
xor
sub
ds
call
fnstsw
cmp
add
mov
frstor
aas
push
pop
icebp
insl
push
hlt
daa
dec
iret
sbb
sbb
push
icebp
mov
add
in
push
pop
push
push
leave
out
adc
sbb
xchg
mov
mov
xor
mov
fnstsw
add
aam
ret
jb
pop
popf
jmp
aam
mov
adc
pop
pop
hlt
out
mov
ret
hlt
add
mov
or
inc
and
jg
inc
lret
or
repz
sbb
dec
fwait
mov
lcall
adc
jge
leave
jge
hlt
sbbl
xor
cmpsb
repz
lock
insb
cmpsb
test
push
and
mov
inc
popf
mov
add
and
push
pop
repz
xchg
adc
imul
push
xchg
xchg
lock
sbb
cli
inc
xor
xchg
mov
dec
rcrb
add
lock
pop
aad
sbb
cmc
rclb
adcl
lcall
lahf
and
int3
daa
inc
xor
mov
sbb
adc
arpl
push
into
imul
sbb
movsl
dec
mov
leave
mov
sar
mov
in
mov
in
dec
jo
fmul
mov
in
xorb
mov
xor
in
xchg
ss
dec
pop
cmc
aas
movsb
fidivs
add
and
arpl
inc
mov
insl
adc
xchg
sub
and
or
cmpb
aad
xchg
aaa
push
jo
shlb
ljmp
loope
sahf
push
fimuls
clc
scas
cmp
pop
and
das
dec
nop
xchg
cld
xlat
mov
mov
pop
imul
or
inc
jp
inc
pop
and
pop
cmpsb
and
xchg
mov
xlat
xor
and
inc
push
imul
lcall
cwtl
mov
and
mov
rorl
push
mov
pusha
xor
inc
cmp
pop
mov
daa
movsl
sbb
mul
imul
inc
or
push
mov
mov
xchg
dec
aaa
adc
mov
call
xor
out
pushf
cltd
lock
dec
mov
add
movsl
dec
cmp
jmp
mov
fstps
scas
xor
sub
mov
jmp
dec
mov
mov
adc
sbb
lret
ds
ljmp
add
lods
and
ret
fwait
cld
dec
pop
sub
cwtl
jl
xchg
sbb
mov
icebp
or
dec
hlt
mov
mov
ret
push
mov
pop
inc
in
fidivrl
aas
jno
sahf
adcl
add
cmp
out
ds
push
lods
addr16
mov
rclb
into
xchg
call
xor
inc
xchg
adc
repz
pop
enter
fistl
cmc
test
lds
push
xchg
andl
cwtl
xchg
adc
and
jae
popl
pop
cmpb
mov
xchg
es
stc
aad
std
jle
ljmp
jmp
and
repnz
pop
aam
or
psraw
adc
mov
jge
shr
outsl
and
sub
cmpsl
callw
sbb
fsubrl
mov
and
out
adc
addl
cmpsb
lods
movsl
xor
fs
inc
popa
xchg
cmp
or
adc
pusha
push
dec
lock
mov
adc
lods
mov
mov
insb
daa
imul
popa
or
ds
mov
mov
imull
repz
loopne
addr16
fwait
sub
mov
jnp
test
jmp
pop
and
ffreep
jmp
lret
pop
dec
push
rorb
or
imul
dec
mov
xchg
jl
push
xchg
rclb
fucomp
push
add
pop
out
mov
jne
popf
popf
test
push
std
add
inc
add
xchg
or
add
sbb
pop
jae
cmpsl
adc
dec
jae
call
out
inc
sub
insl
fidivrs
cmpps
stos
das
das
xchg
push
loopne
dec
orl
outsl
sarb
pop
mov
inc
std
mov
int
adcl
dec
and
push
cmpb
dec
dec
outsl
xchg
data16
xor
repz
ficomps
lcall
mov
int3
xchg
pop
cmp
mov
out
leave
filds
ss
rcrl
test
push
std
lahf
insb
icebp
mov
mov
dec
add
mov
lods
push
mov
repnz
dec
sub
jg
or
cli
push
out
idivl
sbb
in
jl
mov
jle
lret
popf
sub
js
lcall
icebp
adc
cmp
div
sahf
xchg
mov
jg
lock
rep
xchg
data16
mov
pop
xor
cmpb
in
dec
int3
sarb
cmp
cmp
add
cltd
sbb
xor
cwtl
or
mov
flds
lock
sub
pop
dec
mov
xlat
pop
test
std
js
stos
cmc
repz
loopne
aaa
push
aam
xor
xchg
xchg
cld
and
imul
out
cmp
repnz
stc
orl
nop
das
sti
or
adcb
aaa
fdivrl
aad
xlat
dec
repz
je
bound
test
dec
pop
push
bound
push
jo
int
or
loop
andb
aaa
insb
jae
pop
hlt
aad
adcl
ds
stos
dec
add
add
pop
mov
dec
fimull
movntps
icebp
push
jg
mov
and
ja
fwait
jle
repnz
in
xlat
add
rcrb
mov
sub
pop
jbe
lock
popa
imulb
xchg
adc
inc
sarb
ljmp
loop
fstl
hlt
jecxz
aaa
aas
push
stos
mov
in
dec
in
mov
xchg
and
or
xchg
push
scas
mov
and
push
pop
push
test
mov
xchg
mov
add
push
jne
mov
add
mov
and
and
pop
cli
sub
jb
xor
in
jnp
pop
pusha
cltd
out
sub
mov
or
les
push
jecxz
stc
test
xchg
jb
fcmovnb
sub
push
mov
pop
test
and
stc
or
sbb
lcall
call
xor
scas
push
test
loope
lret
insb
mov
push
jns
mov
mov
inc
ljmp
je
or
push
cmp
roll
cmpsl
mov
inc
and
outsl
cmpsb
add
pop
pop
out
iret
mov
add
lods
pop
adc
mov
repz
xchg
aaa
roll
and
sub
mov
cmp
jecxz
or
int
mov
cwtl
xor
pop
imul
dec
das
add
out
daa
adc
sub
adc
mov
add
inc
je
mov
fld
mov
rsqrtps
jmp
lock
ljmp
adc
push
aad
fs
xor
cli
push
jns
sti
int
cmc
cmp
arpl
xor
ret
les
dec
cmp
lcall
jnp
push
mov
aam
cmpsl
dec
cmp
mov
sar
pop
scas
jl
push
std
ret
int
inc
sbb
lret
pop
sub
bound
ss
gs
ja
jge
pop
in
call
inc
cs
jge
xor
push
dec
shlb
popa
les
fisttpl
inc
dec
pop
out
mov
cmpsb
jb
mov
push
sub
lds
mov
std
nop
mov
jno
lock
push
jge,pt
adc
out
or
sbb
aam
cmp
dec
push
pop
xor
pop
cmp
popf
pop
or
leave
mov
pop
clc
pusha
loope
or
les
je
push
mov
or
dec
push
shrl
dec
out
stos
insb
in
dec
lret
into
out
shll
xlat
mov
inc
aam
cwtl
mov
xchg
mov
or
test
xchg
xchg
xchg
pop
call
popa
adcl
pop
lret
inc
or
mov
imull
push
loop
xchg
divb
in
scas
mov
insb
adc
cli
stos
aaa
mov
movsl
cmp
inc
push
outsl
cmp
out
pusha
inc
dec
mov
add
or
adc
mov
mov
not
mov
xchg
sbb
fnstenv
mov
push
mov
and
call
jecxz
add
pop
out
sbb
adc
add
ja
xor
sbb
and
xor
dec
push
sbb
mov
shlb
push
scas
insl
xor
push
sti
ds
add
js
pushf
scas
dec
push
icebp
repnz
out
aam
daa
imul
sbb
cli
push
cld
pop
mov
xor
push
xchg
mulb
cmpsl
stc
cmp
shrb
and
leave
mov
mov
jl
mov
imul
loop
repz
lds
out
loopne
dec
in
cmpb
jnp
or
pusha
mov
mov
jle
push
std
nop
jg
adc
stos
xchg
out
and
jnp
leave
mov
mov
out
push
in
xor
loope
sti
add
int3
pusha
or
loopne
pop
arpl
sahf
push
pop
push
xchg
stos
js
xchg
add
inc
aad
mov
into
fldl2e
out
dec
and
call
xchg
ss
add
jg
pop
rcll
cmpsl
sub
pop
gs
fdivrs
sub
mov
sbb
sub
popf
int3
sub
adc
push
dec
sub
sbb
mov
or
loop
test
mov
adc
pop
stos
mov
inc
mov
pop
xchg
pop
sub
inc
je
push
fst
dec
ret
sbbb
xchg
or
imul
adc
jb
lds
mov
xor
mov
jno
push
scas
or
inc
daa
sub
ja
and
add
das
int3
add
jecxz
adc
adc
inc
push
mov
sbb
add
adc
in
xchg
ficoml
and
inc
enter
jno
scas
cmp
daa
xor
pushf
lcall
sbb
lock
push
hlt
lret
xor
ds
and
aaa
add
daa
and
xchg
mov
stc
incl
ja
cmpsl
push
pop
sub
sbb
jb
out
mov
jae
cmpsl
mov
inc
inc
pushf
popf
sbbb
push
out
add
or
jl
and
cwtl
insb
fdivrl
mov
iret
lds
add
shll
push
jp
sti
adc
hlt
jle
sub
div
mov
add
inc
jle
sub
sti
push
dec
sbb
ret
mov
repz
js
mov
pop
rcrl
loopne
pop
hlt
xor
ret
je
jp
andl
push
out
mov
leave
mov
xchg
ljmp
adc
xchg
fildll
repz
adc
sbb
mov
cli
je
fcmovnbe
js
mov
cli
cltd
mov
add
jno
xor
enter
sbb
jnp
dec
or
add
dec
adc
rorb
fldt
cli
mov
pop
push
cmpsb
xchg
cwtl
mov
into
mov
xchg
in
sbb
push
loope
xchg
inc
fdivrs
inc
cltd
mov
push
adc
sub
inc
jne
pop
repnz
cmpsl
andl
and
sbb
lods
jb
mov
iret
dec
mov
cmpsb
scas
pusha
xchg
std
pop
enter
pop
ljmp
xor
dec
rcrl
fwait
test
jbe
dec
jo
xchg
push
push
mov
dec
fsubs
stc
sahf
sahf
jmp
test
fstpl
add
repnz
push
iret
cmp
cwtl
mov
push
mov
not
orl
cli
movsl
jns
adcl
insb
sbb
cmpsl
dec
movsl
jecxz
dec
cmp
ss
jno
ror
or
out
leave
cmp
push
mov
aas
add
mov
mov
xor
sbb
movsl
cs
mov
stc
les
mov
pop
mov
xor
push
addr16
cmpl
mov
jp
mov
aas
push
sbb
nop
xor
out
fstpt
test
mov
aad
jecxz
fwait
vshufps
cmpsb
bound
push
lea
loopne
cmc
bound
sub
aam
push
mov
nop
into
pop
pusha
gs
roll
outsb
adc
sub
pushf
dec
sub
pop
add
hlt
pop
cmpsl
aas
jmp
cmp
stos
pop
inc
arpl
cmp
dec
movsb
stc
jp
into
xchg
notl
stos
jge
xchg
dec
jnp
lahf
xlat
movsb
in
test
lahf
iret
int3
cmp
xor
mov
fwait
xlat
in
fsubl
cmpb
scas
add
lcall
addr16
scas
xor
xchg
mov
jb
jg
rcr
aaa
stos
adc
stc
xor
push
faddl
stc
imul
jb
fst
cmc
inc
add
or
out
pop
push
sarb
xor
add
jg
shl
ficoms
jp
dec
pop
xor
imul
sbb
mov
xor
push
repz
jge
xchg
sub
mov
sti
loopne
ds
inc
mov
lea
out
in
and
popf
je
jmp
xor
ds
lea
xor
call
insb
out
pop
lods
es
in
xor
jno
push
aad
cltd
and
add
shrb
dec
and
mov
in
out
dec
into
push
pop
movsb
push
cmp
imul
scas
sti
pusha
mov
lock
lock
sbb
inc
mov
inc
push
mov
dec
les
mov
and
pop
or
loop
gs
dec
frstor
adc
iretw
mov
ficomps
mov
xor
inc
and
mov
add
daa
pop
jp
pop
call
adc
scas
or
cmpsb
push
adc
roll
inc
sub
add
in
mov
inc
or
nop
jne
mov
xchg
ja
ffreep
hlt
test
fs
dec
dec
mov
sub
enter
aad
imul
add
cvtdq2ps
adc
repnz
mov
pop
cmpsb
sub
ret
imul
cltd
pop
mov
lock
cmc
sub
pop
jne
sub
es
jg
andl
xchg
add
push
xor
insl
loopne
adcb
xchg
xchg
and
jmp
and
dec
and
or
jg
fsincos
push
test
add
aas
cmp
ja
lcall
dec
repnz
lret
mov
movsb
movsl
ljmp
xchg
xor
dec
movsb
insb
mov
xchg
dec
mov
mov
jmp
in
adc
lds
repnz
dec
dec
inc
push
lock
mov
icebp
ffree
ret
adc
arpl
xor
hlt
movb
mov
sub
xchg
add
test
cli
mov
iret
pop
fbstp
or
mov
icebp
adcb
in
pop
stos
adc
mov
mov
pop
out
jbe
sub
rcrl
adc
sbbl
cmp
scas
pop
xchg
lahf
scas
shll
mov
popf
lcall
and
inc
fadd
scas
call
adc
inc
mov
xor
leave
lcall
jnp
cli
je
dec
les
xchg
sbb
xchg
mov
jge
mov
mov
sbb
push
xor
loope
inc
mov
shll
in
pop
cmp
out
push
shrl
adc
lock
or
mov
fistps
inc
pop
or
cmp
stos
adc
lcall
mov
xor
shrl
push
add
std
jb
int
and
mov
mov
lret
mov
mov
mov
jb
aas
js
mov
pop
adc
inc
dec
stos
push
movsb
push
xor
mov
subb
push
test
push
scas
daa
outsl
cmp
pop
or
in
mov
add
xlat
sub
xchg
stos
push
mov
in
push
mov
xlat
jns
imul
fisubrs
jecxz
or
xchg
add
mov
stc
lock
sbb
mov
mov
adc
in
iret
ret
jecxz
jns
xchg
xchg
dec
in
cmc
jno
ret
dec
xchg
fistl
inc
mov
insl
push
mov
sarl
mov
cld
dec
sub
mov
xchg
push
aaa
or
sbb
stos
mul
pushf
pop
xchg
adc
and
and
adc
and
test
sarl
jb
inc
leave
cmc
dec
pop
lods
cmpl
dec
jae
fisubs
xchg
dec
pop
push
mov
jne
es
cld
and
pop
mov
mov
shlb
cltd
mov
inc
mov
push
lock
ret
dec
push
push
fidivl
mov
iret
push
mov
nop
les
in
xchg
pop
pop
sbb
into
mov
lods
mov
enter
cmc
cwtl
stos
in
cs
scas
jns
sub
lret
int3
mov
xlat
adc
lret
mov
in
outsl
pop
mov
ret
subl
sbb
adc
push
aas
sbb
cmpsb
cmp
bound
outsl
xor
into
scas
cli
sbb
pop
pop
xchg
fcomps
imul
and
loopne
pop
mov
shll
sbb
loope
pop
imul
push
in
loope
jl
xchg
in
fwait
out
push
fdivs
mov
sbb
gs
inc
fisubrs
mov
and
push
push
dec
xlat
xor
jecxz
push
stc
xchg
pop
xchg
fidivl
ret
adc
mov
pop
clc
xor
mov
cs
into
loope
in
dec
in
xchg
and
mov
xor
fmuls
pushf
mov
cmp
mov
mov
cltd
fs
xchg
xchg
lret
mov
and
in
pop
pop
push
mov
int
mov
pop
mov
gs
sbb
mov
fsts
shl
adc
dec
mov
adc
data16
imul
stc
data16
mov
sbb
jmp
ret
jge
jg
pop
lds
incl
dec
incb
icebp
lcall
clc
pushf
in
jle
pop
mov
sbbb
lahf
je
enter
xchg
sbb
les
das
or
cld
mov
mov
add
out
xor
xchg
adc
js
add
mov
out
lds
in
les
test
in
popf
push
pushf
jbe
imul
dec
fdivr
rolb
loop
sbb
or
sti
sbb
je
loop
data16
mov
movsl
and
dec
jae
dec
roll
shl
gs
cld
and
add
loope
lods
insl
mov
xor
mov
adc
insb
lods
pop
mov
mov
hlt
lret
pop
dec
inc
andb
jbe,pn
aad
or
jo
dec
in
mov
ffreep
outsb
inc
je
xlat
imul
loope
add
out
daa
clc
mov
jns
pop
cmp
xor
jmp
adc
inc
sbb
adc
gs
shrb
jl
push
sahf
adc
loop
ss
xchg
jno
jnp
jae
shlb
mov
out
mov
adc
repz
add
cmpsl
bound
xchg
int
xor
testb
push
fidivl
lahf
repz
jp
or
in
fs
ret
aas
scas
ficompl
xor
sub
dec
les
je
inc
or
add
lea
sbb
enter
jle
pop
hlt
mov
popf
into
pop
repnz
add
sub
out
and
jmp
test
stos
imul
mov
adc
xchg
push
sbb
pop
mov
movsl
inc
mov
jne
add
adc
sub
cmpl
stos
fisubl
out
sbb
int
mov
shll
xor
sbb
je
js
pop
lea
lds
pop
fisubl
adc
mov
idiv
data16
lock
xor
enter
movb
jle
adc
popa
inc
je
mov
sbb
divl
sbb
push
inc
outsl
outsl
xchg
pop
repnz
dec
or
js
jns
sub
push
adc
mov
js
into
mov
add
imul
sub
cli
mov
and
fwait
sti
bndldx
push
jb
inc
inc
ret
gs
adc
fnop
mov
sbb
mov
sub
out
adc
aad
cmp
xchg
xchg
xchg
mov
xchg
push
xor
insl
mov
and
ss
cmp
leave
adc
stc
jge
jb
xchg
sbb
cwtl
push
cld
cmp
xor
inc
jns
ffree
mov
mov
pop
je
adc
mov
dec
and
arpl
fwait
sbb
out
ljmp
inc
mov
mov
lods
clc
loopne
daa
into
jbe
sbb
sarl
gs
or
pop
imul
pop
pop
popa
push
es
movsl
das
sahf
pop
dec
adc
sahf
dec
ficoms
mov
sub
movsl
ret
mov
sarb
les
lcall
adc
xor
ret
push
loope
fxch
pop
mov
fsubrs
cmp
cmp
push
mov
mov
cmp
push
lods
jnp
pop
into
jp
xlat
clc
jne
icebp
inc
adc
xor
outsl
push
adc
xchg
jmp
lods
dec
jecxz
inc
mov
ret
add
out
cmp
and
or
pop
bnd
in
or
jmp
push
sbb
fstps
hlt
push
sub
jnp
or
mov
in
adc
jo
gs
ficoms
inc
bound
sbb
mov
out
leave
mov
mov
call
jnp
lds
lods
push
fmull
popf
popf
pop
push
rcll
adc
sbb
fsub
jae
aas
xor
mov
cmp
add
dec
rcll
jbe
daa
adc
xchg
cwtl
and
movsb
jbe
fstpt
pop
sbb
jbe
pop
sbbl
mov
fs
xchg
push
sbb
aam
pop
mov
je
and
mov
imul
fildll
jl
mov
jae
and
lret
orb
sub
adc
mov
xchg
insb
fwait
daa
insl
mov
dec
test
lret
jle
enter
mov
repnz
mov
enter
sub
cmc
jns
push
pop
imul
testb
cs
dec
mov
in
in
pop
jbe
popl
pop
cwtl
bound
dec
mov
and
sbb
adc
add
loope
aas
int3
ja
xchg
fstps
xlat
ret
or
cmp
cmpsb
sbb
scas
mov
adc
in
push
dec
cltd
cmp
push
lods
adc
mov
adc
pop
pop
mov
test
fmuls
xor
cld
dec
icebp
xchg
out
repz
pop
lret
mov
je
rolb
outsb
out
mov
mov
stos
cmc
sub
test
mov
sbb
dec
cmp
ss
inc
stos
dec
jo
xchg
inc
lods
mov
leave
mov
mov
test
mov
mov
cmp
aad
out
sub
mov
push
into
mov
fidivrl
inc
dec
push
lret
mov
add
mov
ret
out
sahf
imull
mov
pop
mov
mov
int
mov
pop
pop
add
jge
jnp
push
xor
int3
cmp
dec
scas
outsl
pop
loop
popa
icebp
pushf
mov
jo
gs
or
pop
pop
into
sub
hlt
fisubrs
scas
jg
test
in
in
jo
fsubrl
loop
sbb
cltd
sub
add
dec
sbb
push
and
rorb
je
es
sbb
inc
mov
lods
jb
xor
pop
incl
and
aad
add
mov
mov
sub
lods
test
mov
arpl
inc
out
scas
or
dec
rolb
adc
push
adc
adc
sub
leave
dec
sbb
in
adc
pop
pop
pop
ss
in
add
ret
jo
jge
arpl
cmp
cltd
pop
mov
sahf
sbb
or
xlat
fs
and
insb
jb
fistl
pop
push
fnstsw
sbb
jnp
add
cli
clc
aas
loop
jbe
adc
jbe
or
sbbl
rcll
jle
pusha
sbb
push
movsl
dec
mov
mov
mov
je
outsb
ss
or
inc
pshufw
mov
loop
xor
aam
mov
pop
aaa
inc
mov
into
lcall
dec
push
inc
pop
dec
adcb
mov
xor
add
lods
and
pop
jp
sbb
pusha
cs
adc
xchg
ja
jno
clc
push
mov
push
stc
dec
insl
jae
enter
jle
jne
pop
cmp
inc
sbb
icebp
fiaddl
gs
and
fnstenv
fsts
arpl
nop
test
pop
mov
sbb
xchg
fwait
dec
movsb
jne
mov
add
sub
push
sbb
fdivs
sbb
insb
xchg
adc
call
or
mov
insb
dec
mov
jge
jbe
sbb
push
xor
stos
mov
push
mov
int3
mov
and
cmp
outsb
push
jnp
sub
js
mov
mov
pop
xor
shll
pop
les
sbb
pop
cmp
jmp
scas
cwtl
and
std
inc
adc
loope
ja
pop
outsl
and
jl
repz
mov
xchg
and
rorl
cmp
negb
push
popa
sti
and
andl
stos
int3
inc
mov
dec
mov
adc
lahf
into
getsec
in
stc
xchg
cmp
int
xchg
pusha
daa
push
cli
aaa
mov
sub
cmpb
sbb
jl
leave
in
mov
sub
jle
dec
popa
aad
push
mov
lret
shll
xor
test
mov
getsec
mov
test
insl
jb
mov
sar
add
leave
nop
inc
jge
mov
les
mov
xor
add
dec
sub
jnp
sbb
xchg
outsl
je
dec
imulb
pop
push
mov
push
sub
cli
nop
sub
loope
bound
jo
test
cmp
or
test
push
stos
rolb
push
push
in
mov
xchg
arpl
loopne
ds
cmp
cwtl
int3
mov
and
push
js
push
xchg
pop
adc
dec
addr16
mov
xchg
jne
call
sub
add
lcall
xchg
push
jne
ret
ss
stos
mov
dec
inc
movb
dec
outsb
jno
lods
arpl
mov
insl
mov
mov
insl
xor
test
mov
cmp
arpl
fwait
je
mov
fs
mov
sahf
rorb
stc
mov
inc
aas
push
jnp
mov
dec
xchg
jae
out
cld
jns
and
push
call
cmp
jnp
sbb
fildl
gs
and
inc
arpl
mov
and
xlat
cmp
testl
aaa
and
divl
xchg
xchg
mov
sbb
mov
lods
sbb
jecxz
pop
sub
mov
int
inc
in
out
out
subl
outsb
adc
sarl
test
cmp
sarl
xchg
inc
xor
pop
mov
fs
sbb
dec
pushf
roll
jmp
fidivs
cmp
mov
sub
fsubrs
shrl
sti
aad
lds
in
and
jb
leave
insl
and
les
push
and
lods
jns
xchg
shll
in
inc
int
jne
test
loop
jb
shlb
mov
add
xor
arpl
dec
add
sti
addr16
filds
int3
fildll
inc
pop
outsb
jp
push
pusha
mov
ficoml
sbb
jmp
fildll
mov
fidivrl
push
scas
or
fstpl
cmpsb
inc
data16
jg
xor
jnp
sub
sbb
imul
arpl
int
xor
mov
int
cli
in
dec
or
pop
mulb
push
mov
jb
push
test
cmpl
adc
in
cld
inc
or
sub
stc
sti
cmpsl
fsubs
lea
xor
clc
jge
mov
stos
pop
int3
mov
mov
pop
dec
ljmp
sub
mov
add
adc
jg
dec
mov
fs
movsl
jg
inc
mov
fsubrl
and
aad
in
xlat
mov
nop
fmuls
inc
adc
sti
in
daa
les
arpl
in
xor
xor
insb
ror
dec
and
ja
or
dec
sub
sbb
fwait
nop
jl
cmpsb
xchg
xchg
xchg
mov
jnp
leave
shrb
daa
jno
or
sahf
mov
rcl
call
mov
xchg
ja
aam
test
popa
test
or
out
sahf
ss
mov
popf
cmp
imul
out
lret
xor
fwait
clc
fsts
ss
jne
pushw
insb
mov
pop
jg
mov
das
fisubrs
imul
or
negb
mov
and
cltd
jg
push
xor
neg
sbb
jmp
push
push
push
sti
lahf
gs
fiaddl
ret
test
cmc
dec
xchg
cmp
aam
enter
pop
adc
lret
mov
xchg
add
sti
loopne
imul
flds
push
dec
add
data16
pusha
xor
bound
jb
fwait
xchg
jg
cmp
leave
jnp
cld
popa
fwait
dec
push
jno
cmpb
mov
mov
lods
dec
xor
dec
mov
repz
or
push
and
xlat
ds
dec
loop
xchg
mov
in
inc
adc
sub
sbb
es
xchg
push
je
test
mov
iret
adc
test
cmp
push
fldt
mov
movsl
cmc
sahf
xor
pop
cmpl
ds
jo
push
aaa
or
jecxz
mov
dec
iret
pop
sub
cltd
jb
popf
mov
sub
out
jle
lods
xor
leave
or
pop
out
inc
push
adc
sti
cmp
js
push
xchg
sub
or
sbb
mov
xor
pop
mov
adc
and
cmp
pop
push
xchg
insb
movsb
aam
stos
test
popf
test
xor
movb
js
sarl
int
or
mov
adc
daa
dec
aad
xor
sarb
pop
popa
and
test
cmp
jle
push
xor
xor
incl
sub
sub
fldenv
xchg
or
and
inc
fsubr
lret
mov
inc
mov
out
out
shlb
xor
das
mov
add
sbb
cli
loope
or
mov
inc
aas
mov
dec
xor
in
stos
push
outsb
loope
jmp
cmc
popf
out
arpl
pop
lret
or
push
in
sub
push
popl
lds
mov
bound
and
sub
pushf
fistpl
sub
adc
cs
imul
arpl
xchg
pop
std
adc
jge
rorl
push
sub
jg
dec
or
dec
xor
fcoms
outsb
repz
xchg
decl
test
mov
ss
shr
adc
lahf
jnp
dec
lahf
std
rcrb
cmc
push
out
xor
mov
and
push
out
imul
clc
dec
test
push
or
add
xchg
repz
and
jno
mov
outsl
cmp
incl
adc
pop
push
lret
mov
imul
mov
xchg
mov
lea
cmpsb
sti
mov
shrb
daa
sub
adc
ret
and
data16
mov
pop
shrb
jge
pusha
cmp
std
pusha
scas
xchg
or
ja
test
stc
mov
hlt
cli
fiaddl
xor
sub
addb
shll
sub
repz
mov
xor
xor
push
xor
push
dec
lret
cmp
cmpsl
jbe
stc
push
push
orb
and
int3
push
pop
sbb
das
inc
xor
mov
nop
rolb
aaa
aas
popf
movsb
popf
inc
andb
xchg
jecxz
rcll
adc
fists
es
xor
lea
daa
repnz
ret
daa
xlat
mov
fisttps
outsl
shll
shll
test
sub
out
pop
jbe
lods
and
cmp
sbb
sbb
int3
add
xor
cli
icebp
mov
jecxz
adc
adc
outsl
push
sbb
mov
jo
push
xchg
fsubl
std
cwtl
cmp
cmc
adc
xor
lret
das
cwtl
xchg
aam
mov
inc
outsl
imull
daa
je
xchg
js
loope
inc
mov
lods
add
test
adc
sbb
aam
jb
add
mov
pop
sub
jae
cmpsl
mov
out
pop
addb
ljmp
inc
in
aaa
mov
es
insb
dec
movsl
std
ret
mov
and
cld
icebp
aam
es
lock
add
cs
mov
leave
out
push
loop
mov
in
mov
in
mov
mov
ss
push
xchg
mov
fstpl
aad
negb
stos
faddl
mov
repz
push
lods
mov
fcmovb
cwtl
out
je
rcl
hlt
inc
das
test
dec
jl
movsb
adc
int
ret
pop
sti
push
sbb
pop
cmp
and
cmp
mov
ret
xor
xchg
pop
xchg
test
shlb
mov
jl
sub
xor
subl
aam
repz
cmp
inc
scas
inc
in
shlb
cltd
ficompl
sub
adc
test
pop
xchg
sbb
xor
mov
movsl
jo
xor
sub
daa
jnp
mov
data16
mov
lods
mov
cli
jo
in
cli
out
fbld
mov
movsb
out
xor
cmp
mov
mov
addr16
mov
add
or
repz
adc
lock
jg
psubsb
mov
daa
sbb
adc
cld
adc
jbe
and
mov
mov
mov
pushf
xor
enter
les
add
fdivrl
push
push
or
mov
adc
push
cmpsl
lds
mov
lods
jbe
cltd
sbb
pusha
sub
push
pop
movsl
or
cmp
push
into
sub
push
mov
imul
jb
or
xor
xchg
insb
mov
adc
pop
pop
addb
pop
inc
xor
movsb
dec
out
data16
pop
dec
xchg
pop
iret
insb
ret
cltd
mov
sub
test
pop
fsubrp
sahf
pop
xor
test
ret
sub
neg
sbb
scas
test
mov
push
jg
cmp
jne
in
xchg
fwait
push
pop
mov
sub
push
jl
cmc
ja
adc
sub
call
sbb
outsb
mov
mov
loop
fdivs
out
jns
cmp
sbb
jns
xor
imul
add
xor
mov
sub
out
out
or
arpl
popf
xorb
jmp
mov
and
testl
or
addb
fisttps
sub
push
aam
test
mov
sbb
jg
jl
inc
leave
sbb
cmp
xchg
pop
frstor
stos
mov
jle
fwait
insl
inc
shrb
fs
jecxz
xor
xor
xchg
sbb
hlt
mov
xor
xor
add
cmc
sbb
sbb
cmpsl
push
push
dec
inc
jb
mov
push
es
fwait
fs
push
add
pop
dec
mov
xlat
fnsetpm(287
jmp
xchg
orl
push
std
sti
je
ret
test
cwtl
fadd
movsb
lahf
pop
xchg
imul
xchg
mov
dec
cmp
ret
push
les
and
pop
mov
test
fldl
push
add
mov
sbb
jp
daa
cs
cmp
and
jmp
or
sub
lods
jns
jecxz
jne
xchg
gs
mov
xchg
pushf
clc
or
addr16
cs
or
mov
ret
lcall
enter
out
dec
or
jae
dec
xchg
push
addr16
mov
push
in
inc
inc
mov
test
inc
and
lret
stos
ret
loopne
pop
adc
cmpsl
mov
jb
jle
sub
push
push
mov
mov
jg
insb
jl
sbb
aam
sbb
xchg
or
in
out
subb
xchg
arpl
jae
aam
aad
xor
adc
push
sub
cmc
add
daa
pop
and
icebp
lret
loop
mov
fwait
dec
sub
stos
mov
mov
inc
push
out
pushf
not
aad
push
mov
repnz
es
mov
fldt
lret
flds
push
rolb
je
sbb
gs
mov
pop
cmp
mov
xor
in
mov
adc
pop
dec
in
test
dec
dec
lock
jo
mov
dec
xor
outsb
mov
pop
fnstsw
test
jg
push
or
lock
int
push
inc
es
mov
bnd
inc
daa
add
push
sbb
mov
daa
mov
loop
sub
test
xor
dec
neg
iret
int
push
pusha
pop
repnz
push
mov
ret
leave
adc
sti
fbld
jg
leave
or
xor
push
not
lods
orb
pop
xchg
jl
dec
stos
pop
sarb
push
es
jle
sbb
rcrl
pop
std
xor
shrl
mov
lods
mov
adc
push
xchg
pop
push
ja
xchg
pop
and
lret
xchg
jns
fistpl
or
sbb
loopne
jge
int
dec
sbb
cs
pop
clc
sbb
test
scas
push
xor
mov
sbb
lods
insl
sub
imul
pop
popf
subl
test
mov
lock
enter
cmpsb
test
popa
sub
xor
pop
push
xor
imul
and
push
inc
imul
sbb
adc
lret
jae
fwait
jmp
inc
mov
adc
les
cli
scas
mov
pop
insl
std
mov
mov
push
jne
pop
inc
mov
pop
or
sbb
aam
push
lea
or
xor
mov
sbb
subb
jne
js
push
xchg
int3
in
pop
insb
repz
mov
mov
or
ror
push
inc
inc
ja
xor
cltd
jb
cli
rcl
aam
add
jns
pop
push
sbb
add
sarl
push
jno
fildl
push
fisubrs
popa
xchg
mov
lahf
pushf
test
pushf
pop
pop
xchg
int3
xchg
xor
fisubs
push
cmc
ljmp
das
mov
pop
push
les
sub
testb
sbbb
mov
clc
std
pop
int3
mov
xchg
in
dec
pop
jp
fstl
cmp
cld
jmp
into
mov
outsb
aam
or
dec
jne
add
push
mov
lock
in
insb
imul
stc
inc
mov
mov
xchg
leave
int
mov
xchg
sub
ficoms
shl
pop
inc
data16
cltd
in
sub
cltd
or
iret
ljmp
fsubs
xchg
adc
pop
push
nop
aad
and
mov
dec
aam
mov
lock
mov
mov
sub
pop
mov
fdivp
mov
cwtl
sarl
stos
lahf
mov
repnz
lea
nop
scas
out
fs
out
dec
mov
cltd
test
mov
adc
xor
mov
jae
repz
jae
cwtl
push
push
mov
fnstenv
dec
stos
mov
cmp
mov
push
mov
xchg
imul
int
arpl
xor
mov
btc
or
fwait
cli
pushf
push
add
inc
mov
cmpl
push
mov
getsec
sahf
pusha
addr16
xchg
mov
addb
iret
addr16
and
fldt
mov
fidivrs
and
enter
xor
inc
xchg
lcall
sbb
adc
lods
jo
jno
in
mov
mov
fstps
or
out
jno
fisttps
mov
mov
dec
cmpb
outsl
inc
stos
divb
jl
or
popf
leave
subl
insb
rcll
sar
ret
xor
enter
sub
inc
dec
adc
aam
addr16
jnp
mov
cmp
sbb
imul
xor
xchg
jo
mov
gs
xchg
sub
cld
sub
das
lret
call
xor
dec
sub
mov
sbb
cmp
xchg
xor
mov
fcomps
iret
ds
mov
rcrb
imull
and
adcb
sarb
dec
ljmp
inc
xchg
fcoms
mov
push
pop
popa
jmp
jge
push
pop
push
std
frstor
sbb
xchg
push
cli
test
enter
jle
cmp
pop
xchg
xchg
popf
repnz
or
adc
push
pop
testb
shlb
test
sbb
sbb
or
not
jo
add
call
out
mov
inc
into
add
push
xlat
neg
test
sbb
dec
aaa
jo
aaa
loop
nop
pop
sub
adc
add
push
xchg
adc
lds
pop
fsubrs
pop
mov
jb
jne
lret
clc
insl
add
jno
sbb
imul
mov
nop
mov
sub
push
int
mov
or
xor
push
and
sub
mov
adc
int
push
mov
cmp
out
mov
cmp
xor
rol
sti
mull
fst
cmc
mov
stc
add
adc
xor
and
pop
xchg
jle
iret
ja
or
and
fdivl
mov
or
pop
xorl
xor
outsl
out
jle
add
shll
rcll
sbb
xchg
fcom
inc
and
mov
sub
mov
fldcw
push
imul
lret
mov
xor
aad
or
imul
mov
mov
enter
push
std
sub
loop
cld
cmpsb
psrlq
jne
mov
pushf
xchg
call
cmpsb
in
or
popa
imul
popa
inc
add
xchg
into
add
insl
or
push
lret
fsts
idiv
and
add
stos
outsl
cmp
sub
jmp
fs
cmp
and
pop
cs
loopne
aas
fs
pop
les
loopne
jmp
jecxz
lret
xchg
std
rolb
mov
movsl
fwait
jae
add
cmp
fcom
cmp
cmpsl
sahf
pop
mov
pop
mov
cmpl
flds
sbb
pop
popf
arpl
or
push
mov
adc
in
sub
and
test
dec
mov
sahf
fdivrs
cltd
lods
ret
xchg
sahf
ret
or
mov
or
push
mov
mov
push
xlat
mov
ljmp
shrb
mov
push
imul
rcl
test
or
inc
cmpsb
jmp
mov
adc
loope
insb
mov
mov
add
xor
rorb
xchg
mov
push
in
test
mov
test
sbb
fs
jb
push
xor
add
mov
jle
cmp
es
ja
inc
into
push
call
sbb
pop
orl
icebp
outsl
sbb
pop
mov
mov
inc
inc
xchg
out
sbb
inc
in
jge
jg
aad
sub
fdivl
sti
fiadds
add
mov
push
andl
push
xchg
jmp
jns
scas
shlb
adc
mov
or
fisubl
rclb
mov
test
pop
jecxz
popa
fistps
mov
inc
cs
mov
lock
inc
or
pop
outsl
xor
mov
sbbl
cmpsl
shll
dec
movsb
mov
inc
cmp
loop
pop
inc
rcrb
pop
rolb
push
jno
testl
xchg
sbb
into
repnz
test
das
enter
int
mov
in
xchg
mov
mov
xchg
add
inc
test
cmp
pop
hlt
fimuls
mov
icebp
filds
in
push
sbb
jno
push
cld
ret
popa
cs
adc
dec
mov
fsubs
or
xchg
push
dec
aas
jg
pop
gs
pop
and
inc
outsl
out
xlat
push
lods
add
mov
bound
std
dec
comiss
out
jb
and
popa
inc
push
push
fisubl
pop
imul
or
popf
and
test
pop
dec
cltd
rcll
stc
maskmovq
divl
jge
xchg
sbb
fwait
xchg
into
test
lret
jne
push
stos
enter
jne
push
lea
or
add
add
hlt
int3
outsb
pop
lods
imul
out
je
jle
cld
push
mov
je
mov
ss
pop
jns
ljmp
add
insb
ja
mov
cld
mov
jae
jb
mov
push
mov
jae
incl
jae
xor
insl
mov
adc
mov
test
pop
xchg
lea
hlt
out
ficoml
je
xchg
push
lahf
jp
jge
shr
adc
clc
xchg
jg
aas
cli
shl
jmp
lea
mov
in
fstl
sub
dec
jp
int3
inc
mov
xchg
clc
ja
stos
ss
movsb
aad
pop
add
xchg
dec
cld
fwait
adcl
gs
mov
push
pop
mov
ud0
insb
push
movsb
mov
add
movsl
mov
lds
xchg
dec
jle
test
add
jg
pop
pushf
sbb
sbb
dec
mov
stc
xor
inc
or
pop
xor
outsl
inc
mov
lock
mov
rcrl
push
sbb
cmp
xlat
out
inc
cmp
cmpb
insb
push
push
add
outsb
iret
xorb
dec
mov
mov
inc
js
popa
mov
hlt
out
push
mov
pop
shl
dec
icebp
into
pop
mov
cmpsl
xchg
out
mov
sbb
outsl
cwtl
jle
or
inc
cmp
xchg
mov
cmpb
add
pop
jbe
dec
push
sti
clc
fiaddl
sbb
adc
cmp
lock
pop
lea
inc
scas
test
pop
loope
push
shrb
pop
sub
mov
cmpsb
push
inc
mov
leave
cmp
cltd
aam
mov
sti
mov
dec
jecxz
lea
cmp
mov
sub
lea
mov
inc
lret
into
or
mov
loopne
sbbb
jmp
pop
lahf
faddp
das
aas
sbb
push
les
out
mov
pop
dec
lods
lock
in
mov
add
mov
sahf
imul
aad
pop
setle
mov
jae
insb
adc
jp
test
fs
ds
jnp
inc
lahf
lods
pop
scas
les
movsl
lods
call
push
lcall
xlat
or
insl
adc
mov
jp
insl
or
jge
jbe
incl
cmp
push
mov
std
or
add
and
lcall
pushf
lret
push
shrb
lcall
negl
cli
xchg
sub
mov
jo
jb
jns
in
subb
cwtl
lret
cmp
adc
call
pusha
lcall
pop
loop
sti
int
xor
xchg
pop
push
in
movsb
fsubl
add
and
into
repnz
fcompl
xchg
cmp
fs
and
pushf
xchg
inc
call
xchg
sbb
icebp
pop
xchg
in
mov
cld
push
scas
aam
mov
jns
imul
pop
pop
cli
sbb
lock
jo
sti
cltd
sahf
sbb
sbb
repnz
adc
adc
adc
stc
nop
xor
add
adc
es
into
aas
add
inc
sbb
jmp
or
dec
jp
in
and
ret
jae
sub
mov
roll
push
and
daa
jbe
aaa
fcoms
arpl
fidivs
adc
xrelease
neg
mov
lret
in
sbb
lods
data16
ds
test
adc
mov
jge
pop
inc
inc
jns
jle
addr16
cmc
cld
cmp
clc
enter
arpl
mov
cmp
outsl
fucomip
cmp
test
pop
sbb
adc
xchg
xchg
jbe
push
inc
xor
les
leave
jb
sti
pop
mov
in
cmc
cmpsl
fcmove
mov
inc
sti
subb
inc
int3
sub
in
add
cmp
cmpsl
cwtl
sar
or
sti
es
xchg
cwtl
or
bound
clc
negb
sbb
add
add
cmp
ja
loope
mov
subl
data16
adc
sahf
addl
pop
mov
in
test
cwtl
test
out
cmpsl
cmpsl
mov
or
mov
test
loop
cmp
popf
setl
mov
leave
in
mov
lods
or
xchg
lock
adc
mov
aam
stos
add
aam
gs
cs
or
testb
push
enter
mov
or
ljmp
test
push
mov
cmp
es
xor
hlt
add
adc
mov
push
sbbb
mov
stos
hlt
out
jle
mov
loope
inc
add
aam
adcb
dec
bnd
mov
lcall
mov
pushf
jp
jl
cmpsb
ficoms
cmp
shll
jo
lahf
add
in
leave
fnstenv
js
add
test
sub
push
insl
out
cld
mov
mov
push
sbb
adc
xor
inc
lret
movsb
mov
test
sbb
and
jns
call
xchg
sbb
mov
inc
outsb
movhps
scas
stos
jl
xor
mov
roll
stos
jle
and
or
mov
mov
pop
fcom
xor
mov
pop
push
jecxz
mov
fisttpll
push
outsb
mov
hlt
rorl
cmpb
mov
sbb
push
int
mov
fcomps
sbb
sti
sub
in
cmp
push
enter
dec
jge
std
push
fiaddl
mov
fldpi
aad
aad
mov
lds
xchg
mov
gs
adc
addl
sub
pop
jl
or
call
xchg
dec
in
lret
xor
ss
jne
sub
fsubr
push
or
int
xor
sbb
and
mov
cwtl
xchg
sbb
aam
pop
sub
test
movsb
les
insl
scas
cmp
xor
xchg
repz
cmp
mov
pop
mov
hlt
test
lock
iret
daa
xlat
jge
xor
xchg
std
xchg
jbe
or
shlb
push
jns
pop
push
add
inc
lret
and
jp
pop
scas
dec
negb
push
fistl
jns
or
nop
ds
cld
mov
cmc
cltd
hlt
mov
mov
lea
xchg
pop
mov
mov
inc
outsl
inc
mov
dec
mov
sysexit
sbb
mov
or
fcomps
dec
or
lret
and
xchg
jno
lea
hlt
and
enter
lahf
lods
pop
xchg
in
cs
push
repz
enter
push
jbe
xchg
outsb
dec
sub
xor
repz
and
and
fcoms
jo
lcall
cmp
mov
push
dec
mov
push
clc
loopne
repnz
or
fs
push
jb
shl
outsl
test
lcall
loopne
sub
push
and
js
jle
or
aaa
xchg
jb
push
sbb
sti
cli
jp
iret
sub
mov
std
out
xor
adc
outsl
pop
cli
loope
repz
arpl
sub
cltd
aas
arpl
xor
inc
pop
int
loop
stc
xor
lods
xor
orl
bound
dec
inc
pop
arpl
addr16
nop
lds
addb
cmp
insb
scas
push
mov
stc
jmp
jl
movsl
jmp
dec
mov
inc
gs
jo
push
mov
lods
push
mov
fcmovnbe
stos
jl
push
cmpsl
mov
bnd
jne
cmpsb
mov
shll
xor
fcoml
mov
mov
adcl
mov
inc
lcall
cmc
in
orl
lcall
test
addr16
insb
into
sbb
jne
stc
ret
nop
jge
mov
cwtl
test
mov
inc
out
cmc
loop
lret
push
mov
push
fwait
in
fwait
adcb
dec
adc
mov
cltd
inc
pop
hlt
mov
mov
neg
ss
daa
sub
fadd
popf
hlt
mov
xchg
dec
push
push
insl
ret
pop
clc
adc
pop
and
cmp
sub
mov
push
adc
adcl
fisttpll
inc
mov
jns
pushf
lods
sbb
test
fwait
lds
pop
xor
mov
xchg
pop
lahf
aas
and
lods
call
add
pop
sub
xchg
or
sbb
push
inc
aam
xor
mov
lahf
dec
xchg
sub
ficompl
mov
dec
push
and
dec
dec
in
add
and
mov
mov
or
xor
or
ret
je
sub
imul
ss
add
and
pop
cmp
mov
inc
lahf
adc
xchg
fldt
xorb
inc
testl
ja
call
lret
or
xor
ffree
dec
inc
out
xor
imul
pop
jp
pop
movsb
add
cs
and
cmp
jnp
jmp
add
imulb
or
jecxz
shlb
push
mov
inc
add
adc
dec
jge
test
andb
call
vzeroupper
loop
addb
cli
enter
and
xchg
push
stos
xlat
push
nop
pop
and
sbb
xchg
mov
roll
test
pop
ss
std
mov
enter
push
adc
imulb
xlat
mov
stc
mov
enter
jae
sahf
and
cmp
stos
fdivrs
out
scas
xchg
sbb
in
jge
test
call
and
push
mov
aas
pop
js
icebp
mov
inc
mov
insl
mov
js
pop
mov
xchg
orb
adc
cs
pusha
mov
mov
xchg
int
mov
sarl
inc
mov
lods
jnp
xor
xor
leave
push
out
shrl
cltd
mov
clc
mov
sbb
outsb
and
mov
push
int
lcall
dec
xor
in
push
dec
fs
fbstp
call
sbb
mov
or
push
jbe
jp
jmp
sub
iret
or
lcall
nop
sub
pop
sub
push
or
test
mov
fldl
xor
xchg
leave
jge
and
xchg
mov
out
dec
ss
mov
push
inc
hlt
mov
jle
cld
fldcw
mov
inc
mov
loope
xor
pop
inc
repz
cmp
lcall
sub
test
push
das
xchg
add
and
shr
inc
xor
ds
mov
mov
sbb
pop
scas
jle
stc
imul
test
stc
push
add
push
scas
fs
mov
repz
jge
shrl
mov
inc
dec
pop
sub
jg
sub
inc
mov
insb
pop
lret
xlat
icebp
inc
add
cmp
xchg
repnz
stc
add
dec
push
jo
add
iret
lahf
jmp
hlt
xor
lea
push
cmc
inc
push
mov
inc
aaa
sub
push
push
cmpsl
or
push
push
daa
dec
pop
jne
bound
std
pop
or
and
push
push
outsb
movsb
pusha
mov
jle
int3
sbb
xchg
sub
xlat
nop
ret
andb
and
xchg
xchg
out
cmpsb
jecxz
call
leave
pop
inc
add
cltd
or
inc
stc
add
popf
push
bnd
lret
inc
jns
in
pop
add
cmpsb
in
mov
aaa
sbb
aas
xchg
xchg
repnz
nop
loope
jmp
es
jmp
mov
es
test
pop
jmp
sarl
daa
lret
lods
loop
fdivrl
bound
lret
jb
cmc
or
out
jp
decl
adc
xor
sub
inc
pop
fsubrl
ss
cmp
pop
aam
outsl
add
xchg
mov
adc
loop
lahf
lds
mov
jne
lock
in
pop
push
movl
divl
out
es
adc
test
adc
pop
call
pop
mov
mov
leave
cmp
pop
repz
mov
int
cmp
loope
clc
pop
cmp
aad
loop
xlat
mov
xchg
insb
push
push
mov
js
andb
mov
push
cmp
dec
cmp
pop
aad
xor
add
and
outsl
dec
mov
or
push
mov
mov
jmp
mov
dec
fs
test
sbb
bound
inc
fwait
mov
mov
fnstsw
int3
jecxz
ljmp
lods
int
pop
jo
aas
shlb
scas
and
leave
inc
outsb
and
insb
ljmp
dec
scas
push
jns
cli
imul
inc
inc
outsb
push
sbb
inc
push
leave
jl
cwtl
and
int
fstpt
in
inc
inc
pop
lock
loopne
cmc
dec
arpl
jmp
jnp
es
mov
mov
fwait
sub
divl
jbe
xchg
sub
lret
push
lahf
dec
xor
push
jbe
inc
push
repz
mov
xchg
icebp
xlat
jge
and
mov
cwtl
lock
test
push
jae
and
inc
push
dec
fstps
xchg
mov
mov
aad
pop
cs
or
lcall
mov
pop
xchg
xor
jo
aam
pop
xchg
mov
je
sbb
std
and
shll
neg
sub
lds
or
int3
loope
dec
jl
js
sub
mov
fistps
cli
lret
xchg
mov
adc
int
jb
hlt
mov
adc
cwtl
push
jmp
ja
lods
xchg
mov
fs
or
stos
insl
xchg
ss
pop
out
cli
and
imul
in
sub
cmp
lret
sub
inc
frstor
dec
cmp
iret
inc
jno
fsub
fbld
xchg
les
dec
jl
in
cmp
jg
imul
push
inc
aaa
push
nop
jg
xorl
mov
adc
mov
jecxz
sub
xor
xchg
sbb
sbbl
jae
mov
aad
insb
jmp
mov
repnz
sub
imul
out
dec
jo
in
test
inc
dec
push
rorb
mov
push
sbb
fs
lods
mov
das
dec
out
dec
add
fxtract
iret
pop
lret
rcl
cmpsb
fwait
imul
outsb
adc
test
xchg
popa
add
xor
add
fstl
lcall
pop
add
clc
dec
loope
inc
xor
jp
xor
or
xchg
imul
dec
jb
mov
arpl
mov
add
scas
aas
lret
rolb
add
imul
std
in
mov
xchg
sub
outsb
jb
or
insl
lcall
jno
lcall
ds
scas
sbb
mov
sbb
shl
std
cs
or
jmp
adc
ret
bound
in
aas
mov
jl
mov
ret
ja
cmp
add
mov
je
pop
loopne
xor
stos
fdivrp
inc
or
pop
pop
xchg
xchg
jp
lcall
jle
adc
push
pop
mov
sub
pop
je
mov
movsb
cmp
outsl
in
adcb
mov
and
sbb
dec
mov
xchg
xor
adc
loope
pusha
out
cmc
iret
leave
mov
mov
orb
js
add
pop
jecxz
jnp
xchg
inc
push
xor
sub
xchg
stc
jb
aad
jae
jnp
stc
inc
pop
add
sub
mov
inc
fisubs
iret
aaa
cmpb
rcll
jp
int3
or
insb
neg
pop
mov
cmp
dec
add
repnz
insl
or
inc
dec
jae
mov
mov
xchg
mov
pop
pushf
mov
fsubs
scas
cmp
fcoms
jne
outsl
jb
filds
mov
cwtl
das
out
mov
and
jl
lret
add
ja
stos
loop
enter
or
insb
popa
jbe
aad
xchg
sbb
push
ficoms
movsb
xchg
dec
and
mov
and
mov
fistpl
insb
shrb
xor
pop
inc
test
outsl
jg
aad
movsl
jl
outsl
test
jp
lret
outsl
fwait
ror
sub
inc
stos
fcoml
subl
or
sub
pop
xchg
jne
mov
in
insl
mov
lret
pop
push
or
dec
shl
sub
daa
lds
dec
push
cmp
aam
aaa
sbb
pop
rol
xlat
das
adc
cmp
and
int3
or
aam
jecxz
and
sbb
jmp
jge
xor
inc
jmp
pop
cld
insb
xlat
faddl
nop
rclb
clc
insl
sbb
sub
test
xor
das
sub
mov
and
jle
add
xor
test
test
je
movsb
cltd
jb
stos
adc
dec
mov
mov
test
test
in
and
dec
jo
lret
cli
pop
popl
iret
lret
add
call
std
aam
test
and
jp
ret
xchg
lcall
add
scas
dec
fbstp
inc
fistl
sub
dec
clc
mov
dec
and
mov
scas
cmp
mov
mov
lods
or
xor
jnp
nop
jle
xchg
add
out
jle
mov
data16
sbb
cmpsb
int
int
mov
leave
add
lcall
lds
pop
cmc
xchg
scas
aam
mov
enter
pop
or
sub
push
lea
pop
dec
arpl
push
inc
es
jp
mov
and
imul
add
ljmp
mov
or
inc
sbb
mov
mov
xor
adc
jb
inc
movsl
daa
xor
das
addb
dec
dec
loop
mov
push
or
and
sti
lods
sbb
adc
insb
lods
add
push
mov
mov
cmp
ret
shrl
leave
and
push
mov
jl
and
xor
mov
adc
shll
sti
into
dec
and
add
sbb
rcr
pop
and
sbb
dec
mov
pop
popa
clc
imull
ja
jle
inc
shlb
rol
das
xor
sub
out
aas
xchg
xlat
popf
ficomps
das
out
ja
jae
jae
jb
jl
pushf
into
mov
insl
sbb
pop
mov
aas
enter
sbbl
dec
scas
sub
cs
fdivl
repz
mov
outsb
mov
ds
loope
inc
inc
gs
cmp
pop
cwtl
outsb
sarl
add
jns
add
scas
std
cmc
insb
dec
pop
add
add
lahf
jb
ja
jmp
sub
stos
cmp
negl
sub
lret
scas
adcl
dec
mov
sub
scas
or
xchg
and
dec
jecxz
roll
dec
sub
and
sub
jbe
inc
inc
push
cmpsl
ret
out
jnp
xchg
outsb
or
outsl
xchg
adc
mov
rol
nop
sub
fwait
data16
and
aas
adc
add
fs
cmc
xchg
mov
pushf
push
loope
adc
push
adc
xor
mov
mov
xchg
jecxz
das
and
cmp
cmc
xchg
out
in
and
sub
xorl
and
scas
fidivrl
mov
aam
add
outsb
mov
jb
movq
xchg
cmpsb
mov
mov
and
in
leave
adcl
aad
in
or
jne
sub
sub
repnz
dec
addr16
ret
loop
mov
add
das
ficoms
lock
cmpsl
testb
jns
adc
iretw
push
in
mov
xchg
enter
pop
rcr
mov
push
lea
push
xchg
test
xchg
mov
call
pop
adc
dec
hlt
xor
mov
rcl
movhps
mov
xchg
mov
jmp
xlat
scas
and
lcall
movsb
dec
jns
mov
sub
push
cmp
test
add
xchg
lcall
and
je
and
jne
xchg
or
mov
push
adc
mov
inc
into
mov
in
or
in
mov
subl
outsl
aas
pop
lock
xor
ss
cmpsb
sbb
push
fs
adc
push
jp
call
movsl
stos
mov
cltd
mov
xchg
icebp
out
lods
push
sub
inc
sub
mov
jae
push
cmp
push
xchg
lcall
test
fisubrl
outsb
sub
bound
add
mov
in
mov
and
xor
scas
lahf
pop
fmuls
loopne
or
ljmp
or
mov
movsb
or
mov
cmp
jmp
cmc
stos
mov
out
ret
push
dec
fdivrl
lret
sub
mov
sub
add
mov
push
xchg
std
rcrl
pop
ljmp
mul
xchg
mov
in
lods
es
and
lods
mov
pop
inc
jp
or
xor
das
jmp
adc
roll
inc
sub
std
and
repz
xor
out
lods
into
hlt
cmp
and
mov
inc
or
fldl
call
adc
mov
push
inc
leave
dec
jnp
jo
and
jmp
test
xchg
pop
or
xor
or
cmp
mov
pop
fcoml
jno
dec
inc
jp
mov
loop
xchg
pop
adc
add
xchg
and
orb
les
fidivs
cmp
sti
inc
push
in
adc
pusha
stos
movsl
mov
clc
nop
inc
in
pop
and
and
stos
sarb
jge
out
mov
mov
insb
ja
mov
sbb
clc
and
inc
cmp
loop
jne
sbb
ret
dec
push
mov
fildl
ss
inc
mov
dec
jp
jle
or
shll
ret
and
outsb
sub
sbb
or
cli
into
inc
ficomps
and
xor
xor
insb
outsb
xchg
xlat
roll
call
mov
xchg
dec
aaa
mov
mov
fcomps
stc
mov
aad
jecxz
sub
add
xchg
dec
mov
adc
loop
repz
mov
je
pop
inc
psubsw
movsl
push
push
xor
push
adc
aaa
inc
xlat
fists
jns
clc
inc
and
stos
mov
insb
mov
lock
and
fldl
inc
jae
push
add
imul
imul
leave
lods
pop
sub
push
push
pop
jno
mov
cmp
dec
push
das
and
ja
ficompl
aas
in
jmp
stos
xor
lea
mov
out
test
fwait
les
in
paddq
add
sbb
mov
or
shrb
push
jbe
loop
out
jp
dec
mov
cmp
mov
sbb
push
jl
sub
fiaddl
dec
dec
repz
add
xchg
les
inc
pop
out
test
imul
xchg
lret
leave
dec
sub
fsubr
ror
jne
rcrl
scas
xchg
out
or
sahf
fisttpl
jmp
aam
subb
repnz
pop
xor
shrb
push
or
inc
pop
mov
fcoms
and
adc
pop
mov
jecxz
and
gs
dec
mov
loopne
pop
fnstcw
loope
clc
mov
sub
aas
repz
aad
fs
push
add
shr
inc
cld
jae
pop
aam
orb
adc
not
fcoml
push
mov
fldcw
dec
arpl
idivl
adc
xchg
aam
call
jbe
leave
sub
jg
xchg
mov
push
cltd
push
aaa
lcall
rcll
jne
nop
cltd
mov
aad
fwait
clc
or
imul
push
icebp
dec
lods
cmpsb
mov
in
jns
psrld
stos
push
sti
mov
sbb
adc
cwtl
aad
test
push
ss
int3
ret
lret
pusha
adcl
rol
lret
clc
mov
pop
cmp
sbb
inc
stc
ljmp
jl
fwait
jp
mov
sub
movsb
or
mov
repz
in
or
jbe
stc
add
push
in
xor
push
test
into
arpl
and
repnz
xchg
adc
jns
mov
mov
xchg
out
push
xchg
jb
roll
push
push
cwtl
loope
sti
cmpsl
mov
xchg
add
out
push
les
gs
call
xor
cs
arpl
mov
popf
in
mov
popf
or
sub
addl
in
out
rcrb
out
int3
mov
fistpl
les
pop
hlt
cwtl
gs
mov
je
sub
dec
mov
cmp
mov
movsb
gs
popf
mov
idivb
cmp
fdiv
es
cmp
in
daa
pop
add
clc
xlat
xor
mov
adc
adc
das
addr16
cmp
or
test
clc
mov
ds
inc
cltd
inc
fstpl
jge
adc
pop
push
pop
mov
mov
fnstsw
ror
lock
push
cwtl
and
xchg
push
testl
pop
popa
outsb
iret
out
xor
xor
popa
dec
mov
imul
push
mov
test
mov
cli
sub
dec
cmpb
mov
mov
in
fucomip
jno
fucomp
sub
inc
lods
ret
pcmpgtb
lods
cmp
pop
mov
int
les
xor
jmp
xchg
cli
jp
push
xor
and
mov
stos
cli
or
push
push
std
jbe
xchg
dec
lret
or
stc
add
bound
fwait
loopne
push
or
loope
addr16
pop
cwtl
push
cli
les
aas
dec
jg
fcoml
and
movsl
hlt
hlt
inc
cli
xchg
sti
cmp
lret
popf
push
and
clc
std
pop
lock
inc
or
pop
insl
jno
sub
push
or
mov
lret
lea
popa
fdivrs
push
cmp
lock
push
push
inc
aas
add
mov
in
mov
pop
jns
or
mov
repz
outsl
inc
sub
mov
pop
jns
inc
movsb
ds
popa
cmp
aas
push
add
lds
call
push
repnz
mov
daa
mov
popa
inc
dec
fucom
add
fistl
popa
into
adc
shlb
pop
inc
or
in
mov
aam
clc
push
push
div
mov
push
jnp
sub
adc
rcrb
cmp
shrb
adc
sbb
and
mov
nop
fdivp
cmp
sbb
cs
cmp
lret
jg
sub
or
sub
loopne
inc
xor
xchg
sbb
sub
mov
xchg
in
in
push
cmp
stos
jmp
test
jl
addr16
cmpl
test
mov
push
lods
pop
repz
icebp
cs
rorb
cmp
push
pop
cmpsl
add
pop
xor
xchg
pop
out
lods
mov
mov
or
lds
leave
xor
insb
sub
mov
es
add
lcall
frstor
cmp
in
xlat
leave
aaa
and
repz
dec
repnz
repnz
insl
and
cmp
sub
lods
or
pusha
add
lahf
xchg
dec
and
in
adc
les
mov
xlat
es
mov
or
lea
jmp
push
push
inc
jns
inc
repnz
jg
movsb
inc
dec
daa
orl
test
ss
adc
add
push
imul
lahf
or
loopne
jae
rclb
aaa
and
cwtl
mov
jo
insb
mov
jno
adc
xor
lret
pop
jo
add
in
mov
mov
mov
mov
push
pop
aad
jbe
ret
lds
mov
xchg
in
pop
mul
fwait
inc
sbb
loopnew
shll
fs
lds
jmp
xor
or
add
shr
enter
mov
in
mov
cwtl
outsb
rol
scas
scas
push
stos
sub
or
cmp
mov
sub
mov
mov
fwait
push
pop
insb
or
iret
jb
sub
xchg
mov
sti
es
push
mov
and
icebp
iret
and
pop
lcall
lock
rolb
mov
dec
mov
push
rcrb
mov
dec
loopne
jg
rcrb
addl
loope
mov
outsb
setns
mov
fisubs
cmp
jp
cmp
and
repz
adc
cs
outsb
ja
mov
in
std
or
mov
ds
lret
test
adc
jne
push
cmp
pop
and
cmp
mov
and
and
and
mov
dec
xor
imul
in
mov
xor
jmp
mov
lahf
arpl
xchg
aas
sub
dec
push
xchg
cs
lds
arpl
cmpsb
pushf
mov
out
cld
out
jge
cld
std
adc
mov
loop
pop
stos
add
jb
mov
mov
jbe
sbb
aam
jo
scas
adc
jns
mov
jnp
call
sub
jbe
sub
dec
push
inc
sbb
cmp
mov
pop
stos
test
fnstsw
rcr
pop
mov
mov
test
mov
jns
dec
insl
sbb
loopne
dec
sbb
cmp
mov
cld
inc
pop
es
xchg
mov
insl
cmp
cmp
jmp
pcmpgtw
jecxz
pop
stc
movsl
ss
xor
int3
pop
scas
jne
inc
jp,pn
cmp
arpl
lret
inc
jne
cmpsl
xchg
outsl
pop
mov
dec
sbb
jg
shl
or
xor
pushf
push
pop
mov
xchg
ffreep
sbb
in
push
aaa
xchg
nop
int3
push
aaa
popa
add
push
xchg
ret
inc
mov
imul
cmc
xchg
push
test
push
inc
aam
mov
nop
xchg
aam
fs
je
aam
pop
sahf
fcom
mov
jmp
sbbb
xchg
and
mov
cmc
add
xchg
push
das
sarb
mov
sub
enter
cmc
jecxz
adc
jmp
xchg
xor
cmc
push
jno
shlb
pop
xor
xor
push
add
xchg
outsl
imul
push
or
pop
addr16
cwtl
jb
xchg
sbb
dec
pop
popa
sbb
mov
filds
in
fwait
sbbb
mov
repnz
scas
stos
int3
jle
insb
fidivrl
sub
loope
dec
lea
rorl
outsb
in
iret
rclb
mov
pop
fisttpll
pop
adc
jb
idivl
jle
pop
and
mov
mov
dec
mov
out
das
pushf
sahf
push
loopne
push
dec
pop
test
dec
jae
repnz
xor
jmp
push
pop
shlb
adc
xlat
adc
movsb
jge
mov
std
xor
mov
aaa
add
xor
mov
adc
cs
dec
bound
orl
xor
mov
push
cmp
push
mov
lret
es
psubw
sbb
xor
aad
or
inc
cli
mov
imul
repz
imul
sub
clc
sub
insb
test
loope
and
push
sbb
fistps
xor
aaa
stc
pop
add
add
mov
scas
pop
xor
push
push
xchg
mov
cltd
push
je
mov
sahf
lock
arpl
push
cmc
js
fnsave
xchg
mov
mov
ret
popl
mov
adc
jns
dec
adcl
enter
scas
push
cwtl
mov
dec
std
pop
scas
and
jecxz
imul
repnz
and
lds
scas
jp
insl
add
mov
dec
push
mov
jg
sbb
pop
ret
and
or
and
add
dec
inc
in
xorb
jmp
adc
sbb
and
pop
sub
pushf
dec
pop
or
mov
push
cmp
or
cli
push
imul
lods
push
popf
test
fisttps
pop
xchg
sub
and
xlat
test
lret
arpl
dec
es
test
fadd
out
fcomi
cmp
call
mov
and
stc
in
iret
andb
adc
leave
inc
mov
mov
outsl
push
cltd
pop
aam
cmp
and
dec
mov
test
repnz
xchg
or
and
dec
xchg
cmp
icebp
inc
xchg
dec
mov
fdivrl
ja
mov
jo
xor
test
mov
add
test
mov
rcr
push
mov
xor
cmp
int
outsl
push
sbb
sub
pushf
rolb
popf
or
jmp
mov
sbb
xor
and
jb
or
and
add
push
dec
mov
sub
lds
arpl
cmp
inc
pop
scas
call
xor
in
outsb
jecxz
insl
sahf
mov
and
dec
aas
jno
jbe
roll
sub
dec
iret
fmull
rorb
jnp
mov
dec
and
mov
mov
mov
shll
xchg
or
xor
mov
add
mov
mov
xor
cmp
in
cmp
leave
xchg
dec
movsb
push
imul
jg
mov
adc
fsts
jno
mov
sub
xor
into
jnp
xchg
pop
lahf
sbb
sub
dec
pop
sub
push
ret
test
cltd
das
pop
lods
jae
std
cwtl
and
rclb
inc
dec
sub
sub
pop
lock
lret
int
shll
and
or
std
mov
std
cwtl
sub
mov
pop
jo
dec
xor
jns
loope
insl
cmp
popa
or
xor
mov
mov
xor
sarl
in
xchg
push
cmc
add
ret
arpl
movsb
mov
pop
pop
loope
and
unpckhps
cmp
ret
fs
mov
mov
repnz
pop
cmp
sbb
movsl
hlt
jmp
insl
andb
out
js
mov
and
enter
imul
xchg
or
cmp
movsl
xor
inc
adc
inc
mov
mov
jnp
push
jo
cmpsb
cmpsl
imul
and
idivl
mov
xor
mov
fcomip
jne
neg
lcall
pushf
cld
movsl
cwtl
jecxz
repz
sub
add
mov
mov
cmp
add
adc
jge
imul
sub
sahf
repnz
shr
mov
xchg
nop
mov
cmp
sbb
xchg
data16
xor
push
fnsave
das
dec
divb
lret
aam
orb
jae
cmp
jl
rorl
push
dec
jb
add
cmpsl
pop
add
subb
xor
pop
negl
sti
fs
pop
add
add
sti
sbbl
push
out
and
push
xor
imulb
lods
mov
xchg
cmp
xlat
sub
dec
aaa
mov
pop
push
fldt
in
popa
lahf
sarl
adcb
push
enter
mov
sahf
inc
xor
rclb
cwtl
lahf
or
cltd
push
sub
fdivl
lahf
adc
xor
subl
mov
jp
cmpsl
arpl
ret
adc
xchg
add
fadd
xchg
adc
insl
std
arpl
adc
test
or
inc
lods
insb
sbb
xchg
rcrb
test
cmp
mov
adc
dec
ret
retw
jl
jmp
sbb
nop
data16
iret
xor
mov
in
sbbb
std
inc
movsl
test
xor
movsb
fsubp
push
test
mov
in
lods
out
outsl
mov
aam
and
sub
daa
in
or
lds
xor
ja
insb
ja
fiaddl
leave
pop
ljmp
add
mov
or
data16
or
or
out
cmpsb
jae
in
push
or
shrb
pop
add
dec
sbb
push
xchg
xchg
popa
cmc
aam
inc
push
or
adc
xchg
ss
sahf
loope
inc
cmp
ret
adc
movsl
xchg
orl
insb
inc
jg
or
das
shll
push
add
test
push
popa
ljmp
cs
in
js
leave
mov
hlt
mov
push
pop
mov
add
pop
pop
add
lahf
adc
push
loop
xchg
push
mov
mov
mov
inc
insl
mov
sbb
loop
cmpsb
mov
imul
fsubr
or
scas
jo
xchg
cmp
push
mov
stc
dec
stos
sbb
jb
mov
leave
push
movsb
push
mov
cmp
jno
xlat
cmp
pop
lods
cs
ljmp
fnstcw
test
xlat
adc
fisubs
or
outsl
add
in
ss
pop
fnsave
nop
orl
out
or
push
imul
add
pop
mov
stos
out
pop
xor
inc
aam
dec
int
lock
push
dec
out
scas
jl
cmpsl
sub
inc
push
or
stc
sbb
out
mov
popa
lods
cld
ret
xchg
fildll
in
jb
mov
fwait
mov
adcb
lods
inc
add
mov
outsl
aaa
ss
fs
fidivs
rcrl
int
dec
arpl
stc
fisttpll
jns
pop
adcb
mov
jbe
mov
mov
fidivs
sub
mov
jbe
fs
inc
std
test
xor
mov
gs
and
aad
jmp
push
pusha
lret
negb
mov
adc
repz
xchg
notb
xlat
mov
mov
jae
xorb
loope
jno
sbb
pop
adc
pop
enter
js
popf
mov
sbb
ret
dec
stc
push
jne
movsb
lds
fs
xchg
dec
lods
jmp
fstps
add
cmp
outsb
add
mov
sub
adc
test
cwtl
leave
jge
cmpsl
inc
test
pop
or
in
js
sarb
push
gs
pushf
inc
mov
jp
mov
sub
mov
andl
scas
sbb
or
pop
ljmp
sbb
ffreep
enter
jmp
ret
jnp
jle
rcr
push
and
mov
inc
xchg
mov
lods
fidivl
out
mov
adc
pop
out
or
dec
loope
std
mov
mov
je
pop
lds
out
cmp
shll
test
lods
das
cli
or
mov
dec
cmp
sahf
lds
daa
and
add
insb
xor
roll
lcall
rol
fcomip
scas
sbb
mov
xstore-rng
cmpsl
add
fwait
adc
hlt
push
jbe
in
jp
mov
popa
vpsllw
out
xchg
lret
or
popf
inc
push
stos
aam
stos
adc
loopne
and
jg
mov
sbb
jp,pn
stos
and
xlat
dec
mov
dec
dec
fs
adc
out
pop
jo
sarl
xchg
add
mov
fsubrp
out
pushf
pop
push
push
jb
push
pop
inc
mov
xor
mov
dec
out
jg
jle
ja
in
addr16
or
mov
dec
jecxz
stos
scas
sbb
repz
dec
cmp
mov
in
ret
mov
lods
aaa
pop
sarl
loop
sub
fsub
jmp
dec
dec
mov
xor
xorb
sbb
cld
mov
icebp
jge
or
mov
ds
lcall
shl
cmpsb
xorl
pop
mov
jg
push
inc
pusha
rolb
int
out
jmp
ja
popa
mov
mov
stos
xchg
adc
lock
mov
adc
push
test
cmp
mov
inc
jb
push
push
sahf
xchg
std
mov
xchg
jno
adc
stos
sub
dec
into
sbb
pushf
addr16
jecxz
cmp
sub
push
bound
fwait
das
loop
mov
xchg
mov
push
sti
and
inc
mov
jae
jo
sub
pop
jg
fdivl
mov
add
and
aam
imul
push
test
in
pop
push
leave
and
mov
add
shlb
inc
out
mov
push
jne
icebp
jecxz
jnp
xor
jmp
mov
inc
out
mov
call
hlt
repz
pop
xchg
jg
and
ds
xor
pop
dec
in
cmpsb
lock
shlb
loope
jb
mov
movsb
add
jl
fistl
les
mov
stos
pop
lock
insl
push
mov
xchg
or
int3
and
mov
daa
pop
mov
jno
add
hlt
adc
mov
add
mov
imul
pop
push
and
je
loope
push
or
cld
lahf
mov
mov
mov
testl
push
pop
and
out
rcrb
sbb
push
push
jnp
sub
jno
lret
or
hlt
mov
xchg
sub
mov
mov
mov
cwtl
mov
jo
mov
xchg
adc
fbld
dec
jle
mov
pop
scas
fldl
iret
jmp
sub
xlat
sbb
mov
adc
int
xor
mov
aam
or
push
sti
cmp
jmp
cltd
mov
inc
mov
sti
out
in
mov
inc
mov
lods
lods
sahf
fidivrl
inc
xchg
dec
pop
inc
cmp
test
mov
sbb
xchg
out
insb
xchg
and
stos
dec
aad
test
xor
les
nop
test
test
out
ljmp
imul
xchg
loop
add
mov
sbb
pop
jae
ss
iret
jecxz
icebp
or
loop
cmp
adc
imul
dec
leave
cld
jecxz
stc
mov
dec
mov
daa
jno
xor
mov
mov
jb
sbb
cmp
cmc
cld
dec
popf
add
push
xchg
push
lock
push
popf
dec
ja
mov
out
mov
into
hlt
andb
jb
aad
sub
jno
jae
setbe
sub
in
aam
jae
in
push
mov
or
je
push
push
push
lcall
xchg
jb
fwait
push
mov
int3
rorl
leave
test
mov
or
insb
lods
js
and
inc
push
push
push
cs
cmp
push
mov
cmp
xchg
stos
xor
subb
cld
inc
addr16
pop
iret
adc
xchg
mov
adcb
fsts
fwait
cwtl
mov
push
lahf
shrl
sub
inc
adc
pop
repnz
sbbb
push
xchg
popf
shlb
outsl
or
push
jne
repz
add
les
mov
jl
rclb
jle
inc
xchg
rcrl
das
inc
mov
pop
jb
stos
push
adc
aam
dec
popa
nop
dec
lea
fs
movsl
mov
js
mov
jecxz
jbe
jmp
dec
inc
xor
and
sbbb
sub
and
popa
push
and
pop
subb
inc
mov
imul
push
push
int3
sub
pop
add
mov
sbb
roll
pop
lods
shlb
adcb
jae
sbbl
dec
lret
jl
add
xchg
inc
push
cmc
ds
add
adc
outsb
cwtl
arpl
lret
insl
pop
push
pop
cmp
hlt
popf
sahf
bnd
hlt
pusha
push
mov
add
dec
bound
dec
mov
repz
ret
jb
inc
push
lret
daa
cli
push
sbbl
xchg
popf
divl
js
pop
loopne
jnp
push
imul
jbe
sub
aas
sti
sub
sub
sub
xchg
mov
mov
and
push
loopne
pushw
test
shlb
notb
push
mov
sarb
ret
ss
lahf
inc
std
jnp
xor
daa
sti
xchg
bound
inc
fs
fnstsw
popa
xchg
aam
sarb
or
ss
pop
fadds
push
pop
and
lret
push
mov
imull
or
sub
fsts
sarl
fldcw
mov
pop
aam
sub
jecxz
adc
push
sbb
js
dec
jns
cs
lcall
int3
mov
gs
adc
movsl
andb
je
syscall
lock
push
ret
in
mov
xchg
jne
stos
fcoms
dec
mov
xlat
aaa
arpl
aas
xor
cmp
lds
mov
cltd
std
test
and
fadds
sbb
jno
adc
push
jp
cmpsl
mov
hlt
sbb
cmpsb
scas
push
sub
xor
push
pop
push
pushf
andb
mov
fnstcw
push
xor
cld
xchg
or
lds
add
daa
test
jne
int3
inc
mov
lcall
mov
pop
mov
mov
mov
xor
ja
mov
xor
inc
mov
notb
mov
repnz
loop
call
xchg
add
cmp
cs
mov
push
lods
cwtl
pusha
jno
aas
stc
test
jle
cwtl
inc
inc
ret
ljmp
inc
mov
fsubp
or
mov
lds
hlt
add
scas
js
cmpsb
leave
inc
cmp
int3
test
adc
adc
or
mov
pusha
sti
or
xlat
out
cs
mov
inc
push
ja
loop
xchg
stc
dec
ret
ucomiss
stos
mov
mov
sub
xor
icebp
cmp
imul
aaa
out
aad
xor
inc
pop
shrl
sub
dec
nop
cmp
fidivrl
adc
cmp
aad
pop
pop
push
inc
push
lcall
jge
dec
movsb
out
xchg
add
mov
and
pop
add
insb
fildl
repz
pop
sbb
adc
and
imul
mov
stos
ficoml
testl
or
loop
lea
inc
xchg
dec
push
dec
or
adcb
test
shlb
and
int
sbb
add
and
or
sub
push
in
mov
xor
jle
adc
jmp
pop
or
lret
aad
sbb
add
daa
cmp
cli
out
mov
lcall
rcll
push
sub
adcb
stos
mov
insl
push
imul
in
pop
in
xor
sub
mov
jl
push
mov
jb
mov
xor
rolb
dec
cmp
or
cmp
out
shrb
add
outsb
inc
push
sti
lods
inc
popf
dec
inc
adc
add
mov
adc
ja
cli
and
je
mov
enter
xchg
xlat
and
adc
add
mov
cmp
mov
jmp
mov
push
stos
into
mull
imul
ss
jno
push
es
xchg
es
inc
jns
push
and
popa
adcl
hlt
test
in
orb
lock
xchg
push
xor
test
push
int3
or
sbb
sub
test
fstpt
or
lock
add
je
stos
pop
dec
aas
ljmp
ret
shr
mov
repnz
scas
in
fisttps
lock
mov
dec
pushf
subl
fwait
sbb
jne
imul
mov
push
jg
hlt
mov
jg
js
out
decb
outsb
jnp
cmp
dec
mov
sub
pop
out
add
imull
loop
xor
push
mov
pop
mov
into
sub
push
les
dec
popf
mov
mov
cmp
adc
pop
push
or
jle
jns
and
dec
lods
cmc
or
outsl
xor
mov
xchg
shrl
mov
rorl
and
dec
mov
mull
jg
lods
xor
mov
loopne
cmp
fnstsw
outsb
sahf
cwtl
sub
xor
lahf
jae
add
jp
mov
lods
and
jge
jae
lock
pop
xor
outsl
lret
clc
jo
popf
lods
test
xor
dec
aas
cmpsl
incb
cmp
adc
sbb
cli
jnp
popf
pop
out
pop
clc
mov
adc
inc
int
popa
dec
outsl
mov
pop
mov
xlat
mov
int3
sbb
lret
call
dec
fdivrs
sub
adc
cmp
rcrl
cmp
sbb
daa
push
stos
int3
js
add
or
jge
flds
paddsb
imul
std
push
imul
cmpsl
dec
lods
ljmp
shl
sub
aam
inc
mov
cmp
mov
popa
and
fcomps
mov
cmp
jbe
jnp
out
pop
mov
push
dec
xorb
fidivl
in
int
js
lret
fnstsw
cmp
aas
mov
jg
jae
lods
cwtl
fwait
scas
enter
jbe
divps
add
jne
and
and
dec
inc
pop
sub
sbb
in
add
insl
ss
aad
pop
andb
mov
les
mov
push
je
test
sub
mov
dec
xchg
shlb
loopne
repnz
ds
xchg
std
aas
sbb
movsl
inc
inc
dec
adc
or
adc
fsubrl
xor
xchg
adc
xor
loope
mov
outsl
dec
fcmovu
scas
pop
pop
pop
inc
daa
ja
call
fisubs
nop
and
popf
sahf
arpl
pop
ja
ret
gs
jl
and
enter
aam
pop
mov
aam
in
inc
sub
pop
imul
loopne
dec
std
iret
enter
push
mov
cmp
add
insb
pop
dec
mov
mov
cmp
sbb
mov
dec
stos
push
jge
stos
pop
dec
shr
test
sar
pop
fimull
popa
insl
add
cli
lea
jecxz
shll
push
cmpsb
xchg
cmpsl
pop
pop
xchg
pusha
lret
jbe
jle
or
mov
push
scas
ret
test
fldt
arpl
ror
mov
inc
nop
xchg
add
lods
push
mov
int3
mov
enter
sbb
arpl
scas
fdivr
pop
incb
pop
push
test
mov
lcall
bnd
lea
pop
scas
lcall
testl
sar
call
pusha
cmp
daa
fdivl
ds
add
and
out
push
fidivs
outsb
sub
loop
insb
subb
push
rclb
mov
jae
adc
and
int3
das
mov
fildll
sub
dec
xchg
push
imul
lods
sti
add
iret
icebp
push
in
add
xor
insl
mov
push
iret
adc
fistps
sub
lods
push
mov
mov
enter
addps
xchg
sbb
cmp
dec
cmc
sti
and
push
sbb
std
sbb
push
cmp
push
jnp
mov
outsb
pop
jle
mov
xchg
add
xchg
push
adc
std
mov
jle
inc
and
stos
jmp
rcr
addb
sbb
nop
cmp
cltd
fidivrs
push
outsl
push
lret
aam
aad
bnd
lods
addr16
test
mov
test
fwait
cmpsl
out
add
loopne
stos
xchg
mov
pop
out
outsb
mov
aad
in
sub
rdtsc
xchg
arpl
xchg
push
jbe
or
leave
or
and
jne
or
cmp
jle
push
mov
loop
stc
sub
xor
xor
push
jp
ja
add
mov
or
xchg
add
in
add
adc
cmp
jbe
lds
xchg
xchg
mov
cmp
cmp
outsb
nop
jns
es
sbb
inc
aam
add
outsb
nop
mov
adc
or
or
fidivl
call
sub
sub
orl
jns
paddb
in
fcomp
mov
jns
popf
in
fisttpl
and
mov
sub
sub
add
adc
inc
fidivrl
mov
xchg
sarb
xor
mov
jae
mov
scas
gs
ss
adc
jp
add
fmul
in
dec
bound
in
pop
cmp
and
or
cmp
test
adc
rcrl
in
fildll
mov
pop
mov
icebp
mov
insb
int
in
clc
push
add
dec
shr
aas
mov
test
pop
popf
jns
mov
ljmp
in
xchg
fdivrs
push
bound
add
mov
sti
sub
adc
push
jno
ljmp
imul
in
sarl
fs
rcl
push
enter
lahf
and
enter
mov
xor
add
es
mov
movsl
popf
mov
xchg
movsl
movsl
jl
pop
and
idiv
aas
and
push
pop
fisttpl
pop
adc
imul
sub
call
xlat
pushf
or
orb
test
leave
out
push
int3
nop
ss
jbe,pn
push
enter
stos
sahf
xchg
gs
movsl
xchg
mov
fsubrl
enter
mov
mov
adc
ret
mov
or
cmpsb
inc
loope
ds
fimuls
xchg
push
pop
jb
loopne
stc
mov
les
daa
pop
loopne
inc
fdivrl
int3
jge
iret
test
orb
or
fistpll
push
sub
mov
fidivrs
inc
stc
push
adc
pop
push
push
mov
fs
or
and
dec
shlb
in
fsubl
lret
dec
mov
cmp
imul
jno
sahf
pop
pop
and
frstor
inc
sub
or
cli
mov
pushw
sub
ljmp
jne
ret
jo
incb
jnp
adc
inc
mov
int
into
sub
fucomi
sub
cmp
out
call
jbe
stos
ds
lea
rol
clc
nop
cld
cld
fidivrl
sbb
mov
scas
mov
jecxz
pop
mov
adc
pop
adc
out
insb
and
cwtl
xchg
pop
loop
cmc
out
push
or
lea
push
fcoml
fucom
inc
add
mov
fbstp
mov
loop
daa
int
jno
push
js
shlb
out
lret
xchg
jne
inc
dec
adc
js
pushf
mov
test
xor
push
inc
add
pusha
sbb
jmp
mov
jno
sub
mov
push
in
outsl
inc
mov
icebp
dec
stos
and
jecxz
jmp
push
ret
mov
xlat
mov
sbb
jo
adc
mov
bound
pusha
notl
ficoms
mov
jns
cmpsl
out
ljmp
jle
loop
cmp
adc
pop
ds
ds
cmp
lods
add
out
lret
mov
mov
dec
dec
insl
cmp
das
pop
inc
or
mov
dec
sbb
jmp
jge
jecxz
mov
cmc
lret
mov
and
xor
negl
adc
pop
or
jmp
sti
jbe
out
inc
pop
mov
imul
cmp
clc
popf
ljmp
decl
xor
push
ds
pop
fyl2xp1
jecxz
lock
add
cmp
scas
sub
mov
ret
out
ss
lret
mov
lods
jo
fwait
mov
insb
je
cmp
in
lods
mov
sti
int
out
scas
addr16
aam
mov
lahf
mov
and
xchg
jne
outsl
xchg
inc
jg
mov
mov
push
mov
clc
pop
mov
add
xchg
popa
fadd
sbb
xchg
sbb
cmpsb
stos
sub
loope
inc
add
dec
push
int3
adc
lahf
cmc
imul
loopne
cmp
cmp
psubb
movsb
or
xor
dec
and
fcmovnb
fadd
jnp
pushl
jnp
push
dec
in
int3
sub
sub
out
pop
in
sti
sbb
or
popa
or
adcb
xchg
gs
or
mov
outsb
mov
pop
inc
mov
mov
and
mov
loopne
mov
mov
xchg
cmp
cmp
notl
loopne
pop
xchg
movsl
rorb
leave
add
mov
les
addl
dec
mov
and
shrl
lods
lea
mov
hlt
add
xchg
call
rcll
loopne
sbb
insb
xchg
test
cltd
test
repz
cmovs
outsl
into
in
imul
shlb
fisttps
popf
xor
cmp
mov
movsb
jle
and
aas
xchg
fidivs
hlt
sbb
mov
stos
inc
dec
popf
and
add
and
or
in
xchg
jge
mov
mov
sbb
movl
pop
lahf
adc
imul
nop
mov
pop
jecxz
jo
sbbb
jg
xor
jbe
jmp
es
or
icebp
add
pop
cwtl
jnp
popf
add
mov
lock
inc
and
dec
ljmp
into
movsl
and
pop
daa
pop
fistpl
pop
ss
aaa
add
xchg
mov
lds
pop
jno
mov
inc
enter
or
adcl
aas
rclb
pop
pop
hlt
ljmp
lcall
and
rcrb
or
inc
mov
mov
repnz
dec
pop
cmp
dec
xor
dec
push
icebp
int3
popf
emms
sbb
mov
xchg
aad
sub
fwait
sbb
outsl
jno
xor
ds
mov
mov
arpl
mov
jge
test
mov
in
lret
pop
jge
orl
jae
outsb
or
into
sbb
mov
jne
push
fucomi
jbe
jmp
test
pop
xchg
push
popa
push
cltd
pop
mov
mov
xchg
push
mov
inc
pop
stos
addl
jge
inc
data16
stos
das
rclb
rclb
push
repz
and
jbe
mov
cmp
adc
shl
push
out
push
pop
inc
sub
repz
mov
fs
xor
imul
adc
mov
adc
inc
mov
aad
mov
leave
mov
jne
je
and
test
out
push
dec
or
mov
jle
adc
sbb
lcall
sbb
dec
push
dec
imul
pushf
jns
les
lods
jne
repz
cmp
fidivrl
iret
jno
pop
outsb
testl
jecxz
call
cltd
dec
testb
inc
fisttps
jge
cmp
cmc
je
loop
add
leave
lret
lea
adc
jnp
dec
mov
dec
push
cmp
aaa
test
call
test
adc
inc
or
inc
jbe
add
je
mov
jp
inc
pop
inc
jg
out
gs
pop
sub
movzbl
mov
cmp
cmp
sbb
cwtl
out
or
and
dec
cmp
iret
add
mov
repz
or
je
fisubrs
xor
mov
cmp
outsl
push
and
add
test
scas
imul
pop
xchg
inc
jbe
clc
dec
insb
sbb
jmp
lock
xchg
loope
sahf
movsl
xchg
outsb
outsl
mov
jae
sbb
out
gs
xor
dec
mov
daa
mov
push
or
push
inc
jns
test
mov
sti
je
dec
leave
lea
mov
or
push
test
xchg
test
pusha
cmpsb
mov
push
hlt
push
lret
into
push
mov
cmp
iret
xchg
mov
ljmp
ss
iret
scas
xor
roll
and
or
push
mov
arpl
push
pop
stos
cmc
pop
xchg
clc
bound
or
fsubrs
mov
and
xlat
lahf
adc
shlb
mov
xchg
or
xchg
lcall
repnz
movsb
adc
xchg
stc
cld
mov
inc
cmpl
add
aas
testb
jae
ds
ljmp
in
fs
push
dec
int
addb
sub
lret
xor
lcall
lods
repnz
xchg
jecxz
xlat
mov
sub
imul
pusha
push
jo
adc
inc
lret
mov
adc
outsb
xchg
ret
fsub
mov
cmp
out
and
cmp
into
rol
jmp
mov
adc
sub
jo
cmp
xor
repnz
add
icebp
lods
out
mov
lahf
xchg
ret
pusha
lret
sub
push
pop
mov
incl
lret
mov
inc
roll
inc
push
sbb
sbb
push
xor
je,pn
shll
aaa
mov
adc
shll
cmpsl
aaa
imul
out
dec
push
add
push
jle
int
mov
std
sahf
push
inc
aam
xor
stos
lcall
and
ficoms
call
fstpl
cmp
push
mov
int3
push
adc
cmp
dec
mov
push
ret
fcomp
or
imul
mov
and
inc
jge
std
sbb
insl
mov
test
hlt
ljmp
sbb
push
ret
dec
movsl
ja
call
lods
inc
jmp
xor
out
xchg
cli
mov
rcl
xchg
nop
lods
xchg
and
aaa
int3
and
add
mov
int3
faddl
pop
inc
loop
fs
ret
icebp
jb
xchg
sub
sub
jb
sbb
pop
scas
sub
sub
mov
mov
ljmp
xchg
insl
jg
mov
addl
es
push
pop
and
cld
mov
das
cltd
loopne
icebp
loope
je
bound
push
pop
mov
pop
xchg
shrb
mov
stos
push
pop
xlat
push
sub
jl
pop
sub
ret
je
out
cli
inc
stos
xchg
push
lahf
lcall
rcrb
inc
nop
adc
xor
ljmp
cmpsl
and
dec
or
xchg
push
mov
cmp
mov
sub
iret
ficoml
sub
incl
xchg
lea
sub
test
out
mov
inc
cmp
imul
push
out
inc
mov
popa
test
out
jbe
das
mov
cmc
das
mov
lret
add
dec
ret
xor
mov
or
adc
adc
sahf
xor
test
push
cmp
das
xor
dec
dec
xor
cmp
mov
mov
pop
and
add
pushf
hlt
aam
xchg
mov
scas
les
and
xor
lahf
inc
repz
pop
or
ret
cmpsb
sub
ret
ret
push
das
rcr
jle
test
fldl
adc
cmpsb
sbb
inc
imul
push
cmp
sti
mov
stc
aaa
stc
or
movsl
popf
sahf
sahf
out
movsl
sbb
mov
mov
loopne
sub
lret
adc
fdivl
xchg
loopne
es
pop
adc
outsb
xchg
lds
pop
cli
and
jmp
and
lock
pop
jb
movsb
sub
add
je,pn
test
mov
dec
mov
fisttpll
jle
adc
nop
mov
xor
je
xchg
or
popa
xchg
push
dec
pop
adc
nop
mov
iret
add
jp
cmp
out
xor
xor
jo
js
rclb
into
adc
jg
std
adc
sbb
xchg
popf
nopl
aam
popa
fmuls
out
jmp
mov
popa
ss
push
fwait
pop
xchg
xor
jb
outsl
jg
pusha
loop
pop
int3
lahf
adc
data16
jl
lods
std
dec
adc
imul
push
les
xor
and
lahf
leave
and
stos
jne
cld
out
mov
nop
out
xchg
dec
rclb
cmp
negb
inc
aad
dec
cli
dec
jns
lods
lcall
js
jo
mov
enter
jae
fidivrs
inc
xchg
icebp
es
mov
xchg
inc
mov
fwait
mov
inc
test
ja
out
xor
add
icebp
into
or
inc
daa
popa
dec
sbb
mov
xor
push
shlb
inc
movl
lods
lcall
lods
sbb
lcall
cmc
mov
mov
xlat
jmp
sub
or
cmp
test
xchg
mov
push
in
sbb
cli
push
iret
jmp
push
pop
pop
outsb
pushf
jno
xchg
rolb
push
pop
sahf
adc
ret
mov
and
jl
lret
cmc
pop
mov
mov
nop
jnp
dec
in
push
out
cmp
dec
ret
mov
mov
mov
test
outsl
adcb
dec
unpcklps
dec
cli
jmp
test
cltd
pop
loopne
lret
dec
mov
push
mov
in
andb
and
shrd
adc
push
pop
and
test
dec
mov
mov
stc
adc
enter
and
icebp
ret
inc
jae
jo
int
lods
mov
in
cmp
arpl
inc
in
cli
sbb
pop
dec
loop
mov
jecxz
mov
mov
mov
outsl
fisttps
push
inc
arpl
adc
addr16
lods
call
inc
insl
fildll
xchg
jp
cmp
or
push
mov
or
fdivrs
push
fcoml
ret
inc
mov
lahf
lcall
xlat
lcall
push
mov
xor
lds
andb
lret
dec
sbb
loopne
ljmp
dec
jp
and
scas
add
jg
dec
fistl
adc
aas
pop
fisubl
cmp
dec
lea
add
xchg
fbstp
sub
test
mov
lahf
fimull
inc
mov
xchg
inc
pop
push
cmp
push
psubq
stos
mov
dec
ret
lea
sti
xchg
pop
mov
xchg
cmp
dec
push
rcrl
test
into
sbb
mov
pusha
dec
sub
sbb
test
xchg
scas
rcl
gs
sub
mov
lea
adc
out
in
jo
pushf
lock
cld
push
mov
xlat
mov
xchg
mov
add
aad
mov
xor
mov
mov
pop
sub
scas
shlb
sub
mov
in
shlb
add
fcoml
mov
adcb
lods
jmp
out
push
cmpsb
mov
outsb
or
pop
xchg
sahf
xchg
sbb
mov
sbb
or
sbb
jns
pop
mov
cmpps
lahf
mov
into
push
ljmp
dec
ss
lea
std
jmp
or
jae
mov
pop
rclb
inc
lea
cmp
sbb
mov
mov
mov
pushf
adc
jae
jmp
out
adc
into
icebp
mov
decb
inc
push
mov
sbb
push
fwait
int3
addr16
jns
and
call
xor
sahf
sbb
sbb
aad
pop
loop
sti
push
mov
xchg
cmpsb
inc
in
rcl
or
filds
fistpll
scas
push
insb
add
dec
sub
xchg
rcrl
sahf
aas
and
lret
leave
loop
dec
cmpsl
mov
stos
in
and
mov
mov
cli
cmpsl
mov
scas
negb
cmpsb
xor
cmp
cld
rol
adc
mov
dec
mov
mov
push
outsl
adc
sbb
cmp
xor
mov
dec
mov
cmp
push
nop
or
std
addl
sub
sub
aas
ret
mov
mov
jnp
and
mov
sbb
cmp
cmp
adc
push
iret
adc
in
fldenv
mov
cs
push
cmp
ret
inc
cmpsl
add
add
ljmp
mov
cmp
and
jmp
push
jecxz
pusha
push
addb
lods
xlat
dec
setns
push
add
pop
and
gs
imul
js
imul
or
adc
fistpl
add
fbstp
in
jbe
popf
lahf
sbb
scas
adc
test
imul
sbb
add
mov
add
lret
imul
sbb
xor
xor
cmpsl
mov
pushl
aas
pushf
sbb
inc
clc
cwtl
mov
fcoms
aam
out
push
mov
pushf
inc
imul
lds
dec
aas
jno
movsb
jnp
push
adc
jns
rclb
icebp
iret
or
adc
imul
stos
jmp
or
jns
pop
es
push
leave
mov
xor
inc
jecxz
sbb
test
shll
inc
adc
xor
gs
aam
enter
inc
loope
lret
or
sbb
outsl
or
jl
xor
idivb
dec
sub
test
mov
ret
andl
pop
iret
lods
push
lcall
sbb
cltd
pop
cmp
sub
mov
adc
je
push
les
inc
lcall
sahf
aas
push
lahf
or
iret
add
inc
in
lds
ja
jnp
fcmovnu
add
es
stos
cs
repz
push
cmpsb
add
mov
inc
and
scas
ds
insl
sbb
cmp
adc
adc
int
clc
lock
aam
add
mov
dec
xor
aaa
sbb
cs
push
adc
jmp
jmp
or
stos
mov
or
jp
mov
pop
sbbl
inc
loopne
ficompl
fstl
dec
xchg
out
sub
testl
mov
nop
mov
dec
sbb
sarb
mulb
push
in
pop
mov
ljmp
stos
mov
enter
insb
iret
loopne
mov
mov
dec
jbe,pt
das
cmp
xor
xchg
xor
cmpsb
or
int3
cmp
clc
repnz
inc
aad
icebp
in
jmp
dec
and
mov
and
js
nop
cmp
cwtl
lods
mov
test
shrb
mov
in
sbb
or
call
outsb
test
imul
iret
popf
repz
push
push
push
sub
mov
and
jmp
jne
in
out
cmpsb
mov
popf
cmp
pop
cltd
lcall
mov
aaa
bound
jnp
mov
jle
inc
fld
sahf
dec
ror
rolb
mov
rcrl
push
jecxz
or
rorl
clc
clc
pushf
addr16
dec
in
push
pop
mov
repz
hlt
push
adc
inc
loopne
sbb
in
push
and
ret
shr
mov
nop
mov
inc
test
pop
aaa
iret
cmpsb
lods
arpl
cld
mov
test
movsb
test
pop
mov
mov
jl
insl
movsl
cli
ss
cmp
sti
adc
movb
dec
xchg
pushf
or
fists
pop
mov
std
js
ss
xchg
imul
movsl
orl
shrl
xchg
sar
dec
test
es
test
jecxz
dec
fistl
inc
push
ret
bound
push
pop
dec
gs
insb
mov
sub
sbb
out
andl
cmc
xchg
add
mov
mov
sub
xor
mov
aas
mov
pop
pop
adc
test
pop
sub
push
jnp
pop
xchg
jp
clc
fistl
insl
jne
and
test
jno
add
inc
inc
shl
and
insb
jb
mov
int3
sbb
push
cmp
adc
sbb
cwtl
pop
roll
addr16
dec
fadds
jp,pt
xchg
pop
popf
jne
mov
mov
in
mov
push
sub
xchg
mov
lret
stc
fmuls
addr16
inc
jo
pop
mov
stos
int
add
callw
stos
arpl
adc
mov
fdiv
mov
xchg
pop
jle
dec
jno
xchg
xchg
push
jb
popf
adc
sub
jo
out
movsl
xchg
sbb
mov
bts
movsb
lret
xchg
jnp
pop
scas
clc
out
adc
adc
jns
jge
jnp
pop
sbbb
lods
jp
je
jmp
inc
dec
sar
cli
inc
adc
jl
mov
sub
ja
or
pop
fnsave
cmp
lret
mov
cs
arpl
adc
rcll
lret
add
xlat
outsb
push
aad
xchg
ds
sub
push
cmp
and
lock
leave
jge
mov
xchg
shrl
dec
pop
cmp
jp
cmc
je
xor
push
lods
adc
jbe
cmpsb
inc
mov
mov
jg
inc
and
popa
xchg
add
dec
lods
adc
fstpl
sbb
testb
cmp
ficoms
loope
scas
xor
xor
rorb
ret
in
sbbb
sbb
lcall
mov
fwait
gs
mov
outsb
sbb
or
and
out
fstpl
sub
cmpsl
repz
adc
dec
push
mov
cmc
inc
xor
int
push
out
cmp
test
inc
adcb
jo
loopne
test
cmp
sbb
fdivs
shll
ja
sbb
sar
dec
lcall
adc
filds
and
pop
inc
or
sub
loopne
xchg
xlat
push
stos
idivl
pop
clc
jg
and
cmp
outsb
xchg
les
push
cmp
popf
es
addr16
leave
inc
rcrl
push
sub
mov
ficompl
daa
mov
ds
sarl
bound
int
xchg
dec
mov
pop
fisubrl
pop
outsb
ljmp
lods
and
std
xor
bound
xor
shufps
adc
and
or
imulb
adc
cmp
or
push
jl
pop
push
inc
pop
xchg
and
jl
insl
test
je
cwtl
loop
lret
fcoml
sarl
fs
and
movsl
fistpl
je
cmp
out
int
add
int
jb
test
and
mov
popa
repnz
mov
call
rcrl
and
imulb
mov
jne
mov
or
clc
adc
sub
loope
push
popa
movsb
mov
mov
xor
ds
movsb
popa
enter
fistpll
xor
int
arpl
mov
dec
pop
mov
or
popa
xor
push
push
out
mov
aad
xchg
es
mov
add
pop
cmp
dec
push
faddl
cmpsl
dec
dec
fwait
mov
pop
cmp
into
les
les
test
cli
cmp
pop
gs
mov
decb
mov
ret
fs
cmp
push
push
aas
push
dec
popf
lret
clc
ret
mov
outsb
xchg
xor
pop
int
jecxz
pop
stos
mov
outsb
fbstp
inc
notl
and
fimuls
rol
cwtl
or
add
fcomp
push
push
movsb
add
xor
mov
mov
or
arpl
sub
cmpsb
clc
sbb
sub
mov
jl
mov
add
aad
dec
stos
insl
mov
divb
jne
jmp
add
loope
lea
insb
mov
xchg
es
xchg
sub
scas
insl
es
sub
mov
push
xorl
and
mov
sub
jle
cld
rdmsr
inc
pop
loope
and
jnp
jg
pop
lock
rcrl
orb
subl
mov
mov
lods
pop
xchg
sub
mov
leave
leave
and
dec
jle
mov
outsb
scas
out
adc
int3
jg
add
repz
sub
or
hlt
dec
jae
movsl
repz
stos
mov
cmp
dec
inc
mov
psubd
dec
sbb
jb
outsb
xchg
mov
xor
mov
pop
or
aam
loop,pn
push
cmp
xchg
mov
add
xchg
es
adc
fbld
dec
lret
test
pop
xchg
dec
xor
sbb
push
adc
ficompl
push
adc
pop
fmul
in
cmp
clc
mov
fcoms
int
test
sahf
mov
jno
mov
push
cli
push
xor
xchg
mov
jle
mov
imul
call
dec
data16
mov
loop
inc
dec
mov
sub
push
mov
in
lret
in
or
xor
or
addr16
iret
bound
mov
inc
shlb
insl
push
int3
sbb
push
xor
xor
iret
dec
and
mov
int3
int3
adc
test
sub
mov
xchg
cmp
mov
inc
adc
dec
inc
push
int3
and
push
jns
dec
jp
pop
outsb
jo
mov
sahf
fs
sub
mov
lods
push
xor
aad
push
enter
out
mov
fwait
cmp
push
pop
xor
push
dec
jge
fstl
outsb
imul
jns
shrb
mov
cmp
mov
push
mov
lret
pusha
js
dec
xor
push
in
rcrl
int
int
icebp
test
sub
add
pop
bound
mov
dec
dec
movsb
cmpsl
push
xchg
dec
add
push
and
iret
pop
cli
mov
push
mov
push
push
push
lods
inc
loope
inc
or
in
push
outsl
and
sub
xor
mulb
xor
aam
inc
mov
cs
daa
fwait
cld
jb
ljmp
stos
ds
sub
pop
call
sbb
sub
in
xchg
pop
adc
jl
and
sub
addr16
pop
fcmovnb
sub
dec
and
cmp
xchg
in
xchg
and
subl
movsl
fnsave
mov
dec
jns
mov
sub
in
cmpsl
mov
xchg
stos
xor
fstpt
and
cmp
fmull
cmp
ret
in
out
push
xchg
pop
cmp
mov
leave
xchg
test
cmpsl
xchg
fs
push
mov
mov
dec
sbb
or
imul
ret
adc
push
adc
addr16
stos
jg
rclb
and
or
fwait
and
pop
filds
dec
mov
sbbl
rclb
xchg
pushf
inc
in
pop
mov
inc
int3
or
mov
pop
movd
inc
mov
pushf
lock
in
lret
cmp
xchg
mov
outsl
push
fwait
pop
ss
in
pop
cwtl
rcrb
ds
xchg
add
jle
fsubs
cld
and
jp
daa
push
neg
xchg
push
insb
push
pop
inc
cmp
jne,pn
fsts
or
out
in
xor
dec
loop
call
movsl
sub
jo
mov
mov
movsl
rcrb
cmpsb
shll
mov
movsb
mov
outsb
xchg
jns
enter
mov
sarl
aas
cmp
or
pushf
iret
push
sbb
pop
mov
test
popf
mov
lcall
mov
sbb
mov
mov
mov
scas
dec
fisubl
faddl
jge
leave
dec
sub
jo
sbb
std
inc
loopne
sub
push
mov
mov
xor
ss
lea
mov
push
push
mov
xor
cltd
xchg
push
insb
fcmovbe
aam
clc
push
add
sub
andl
add
ds
pushf
and
mov
mov
insl
or
dec
int3
pop
cmpsl
in
xlat
inc
push
lods
mov
mov
js
xchg
add
jle
jg
movsl
test
mov
es
push
mov
or
jg
sub
xor
icebp
sbb
and
imul
ficoml
fucomi
xlat
cli
cmpsl
mov
mov
mov
xor
fs
rclb
sbb
adc
cmp
cmc
aam
and
mov
je
in
mov
imull
je
adc
daa
js
movsl
gs
enter
adc
shlb
or
lahf
mov
jmp
sbb
add
aad
dec
xor
outsb
cmp
push
sbb
mov
xchg
dec
mov
das
aad
mov
push
sub
aad
adc
stos
ja
sub
pop
movsl
cli
jbe
dec
mov
sbb
xorl
pop
es
pop
movsb
popf
cmpsb
dec
and
lea
sub
or
push
and
stos
or
js
jne
xchg
imul
call
imul
pop
or
mov
pop
inc
xchg
cwtl
faddl
xchg
sub
cmp
mov
sub
gs
push
repz
mov
loopne
cmpb
pop
pop
mov
dec
cwtl
push
mov
jb
xor
jbe
push
out
add
popa
aam
addr16
xchg
ret
lods
mov
int
add
add
push
push
sahf
add
and
sub
push
test
xchg
dec
add
aas
sti
lock
xor
ret
mov
jno
sbb
lods
mov
cmc
sbb
mov
mov
orl
clc
push
pushf
add
or
outsb
lods
fsts
mov
sahf
and
pop
pushf
mov
xchg
addl
sbb
cmpw
insb
mov
jns
xlat
jbe
pusha
in
out
fs
pushf
movsl
and
mov
push
pusha
add
mov
dec
xchg
push
daa
jae
inc
xchg
sahf
mov
mov
jp
js
cmp
mov
sbb
or
insl
dec
xchg
xor
mov
xor
push
add
push
dec
mov
cs
cmc
lea
sub
cwtl
mov
adc
std
inc
add
insb
mov
stc
add
xchg
cmp
ss
or
cwtl
dec
filds
mov
inc
xchg
mov
repz
add
dec
testb
movsl
cli
sub
enter
fists
incl
les
dec
out
mov
add
movb
movsl
cli
out
cmp
sbb
fistl
and
inc
lock
pop
inc
leave
les
cmp
cmc
popf
aam
popf
and
repnz
cmp
mov
hlt
mov
inc
cmpsl
xchg
sbb
xchg
pop
lahf
pop
xor
sbb
pop
cld
sub
mov
push
cli
add
hlt
push
sbb
test
push
jno
movsb
outsb
lods
lret
dec
mov
pusha
faddl
into
and
mov
lods
cli
into
adc
sbb
push
mov
pop
add
sbb
imul
aam
jbe
xor
imul
mov
js
shll
push
les
movsl
inc
fbstp
jecxz
roll
sbb
pop
and
xor
adc
and
jg
icebp
leave
xchg
lahf
jl
or
inc
mov
jbe
sbb
cmp
mov
in
es
icebp
inc
das
ret
jne
push
pop
xchg
dec
jbe
popa
jmp
xor
xchg
cmp
and
in
mov
std
xchg
dec
pop
cmc
mov
sub
push
insl
cmp
in
movsl
int3
ret
int
jnp
cmp
xor
xchg
insb
mov
scas
push
out
mov
add
cltd
push
les
pop
pop
and
clc
add
jle
push
ficoms
popa
out
jge
lcall
sbb
adc
push
jne
fnstsw
out
mov
in
jecxz
mov
xchg
mov
cmpsl
sbb
mov
ret
cmp
lret
or
bound
cmpsb
cmp
outsl
mull
mov
pusha
outsl
push
jl
outsb
test
adc
adc
cmp
jmp
inc
jp
xchg
push
scas
out
lock
testb
jno
ret
add
xchg
cli
outsb
adc
and
loope
jge
lea
pop
pushl
ja
push
jae,pn
and
outsb
in
push
aaa
mov
push
push
fmul
push
jg
in
in
iret
mov
xchg
in
xchg
iret
add
pop
test
xchg
mov
mov
repz
stos
repnz
inc
jae
out
lods
aad
icebp
test
lret
ficomps
in
dec
js
xchg
cli
or
push
ss
dec
cmp
jge
enter
dec
sub
fadd
sbb
mov
mov
cwtl
mov
or
xchg
lcall
ljmp
xchg
mov
or
or
jle
aam
hlt
mov
das
and
mov
movsl
dec
lret
stc
mov
inc
cwtl
and
add
lcall
push
or
std
cmp
aaa
sub
push
std
int3
mov
mov
lock
jno
dec
and
inc
push
dec
pop
fnstcw
ja
add
and
mov
repz
push
inc
xor
mov
cld
mov
sbb
sbb
cmp
repnz
mov
dec
shlb
adc
test
sahf
dec
cmp
pop
into
adc
jle
inc
mov
int
icebp
inc
push
daa
fisubrl
sahf
push
or
or
aam
jno
dec
add
dec
movsb
dec
das
mov
push
mov
nop
push
pop
mov
aad
pop
pop
adc
mov
xchg
movb
jb
jp
push
inc
jle
stos
in
mov
and
in
sbb
xorb
lahf
or
sub
sbb
hlt
push
inc
cld
cmp
jmp
mov
das
sti
dec
js
sub
cmc
cmp
push
aas
enter
add
or
pop
cmp
lods
out
inc
shll
mov
fldt
notb
add
sbb
testb
xor
sbb
push
les
pusha
push
jns
pop
js
aad
cmp
ret
sub
and
jae
dec
sub
mov
add
fisttps
cmc
aad
pop
jo
subb
out
inc
lret
push
sub
mov
jmp
andb
mov
cmp
add
loopne
lahf
aam
xor
pushf
inc
lods
or
or
ret
pop
inc
mov
dec
cmp
dec
cltd
dec
push
mov
inc
xchg
jecxz
arpl
inc
dec
mov
sbb
inc
dec
push
cmp
cwtl
movsl
inc
rorb
mov
shrb
aad
jne
jg
xlat
mov
cwtl
test
sub
xchg
mov
inc
loope
and
mov
imul
test
bnd
test
and
mov
div
pop
cmp
or
loop
lods
test
enter
daa
sbb
dec
dec
sub
add
addr16
lret
mov
js
or
add
test
pushf
test
dec
xlat
dec
adcb
add
xor
loope
xchg
dec
lods
icebp
mov
push
sbb
inc
fdivp
je
adc
jns
loopne
fwait
dec
inc
lcall
loop
test
mull
sahf
sbb
popa
aad
out
fistl
into
cmp
xor
in
and
fnsave
scas
out
or
adc
push
out
or
adc
add
mov
jge
or
inc
cmp
mov
push
mov
and
pop
bound
adc
push
loopne
jl
aam
lea
mov
sub
int3
int3
cmp
pop
nop
movsl
fdivr
jmp
xchg
cld
mov
call
mov
mov
add
fs
jl
cld
mov
aaa
aas
push
jbe
xor
das
lods
in
test
mov
pushf
cmp
jp
mov
ss
daa
mov
popa
cmp
cld
mov
inc
lahf
adc
ret
pop
loope
mov
stc
ret
lahf
test
mov
dec
lret
inc
or
pusha
sub
xchg
lea
xor
add
cwtl
pop
loopne
cld
mov
int
mov
loope
fmull
insl
out
push
ficomps
lret
adc
or
push
and
in
cmp
cmp
and
test
cli
push
xchg
ss
mov
sbb
clc
xor
xchg
pop
sub
push
in
mov
into
jg
cli
pushf
pop
xorl
cmp
pop
add
pop
lock
les
leave
cld
sarl
add
inc
sbb
ret
popa
stc
dec
add
fldt
add
fisttpll
dec
fucompp
push
and
mov
subb
and
push
ss
test
aad
jmp
jno
cmpsb
loope
xchg
scas
in
pushf
push
mov
add
sub
dec
popf
cmpsl
pop
jge
ss
push
pusha
xchg
stos
xchg
xchg
push
jb
lcall
js
push
icebp
gs
sahf
shrb
pop
aas
lcall
jae
dec
adc
inc
mov
hlt
mov
addr16
mov
daa
inc
andl
ficomps
mov
js
fwait
fwait
sbb
xor
leave
fs
dec
inc
pop
sarb
push
cmp
xchg
insl
mov
dec
inc
sub
ss
xor
outsl
out
xor
ret
rorl
push
push
push
xor
and
jge
lods
sbb
xchg
test
scas
adc
mov
adc
or
movnti
cmc
ss
roll
jg
repnz
outsl
repnz
push
mov
add
jl
sub
xor
enter
jl
mov
jae
clc
push
or
cmpb
jae
cld
push
imul
jae
scas
bound
es
xchg
adc
inc
and
bswap
cmp
or
shlb
pop
mov
xor
or
lods
jmp
outsl
adc
sahf
addr16
mov
or
into
jge
out
and
inc
xchg
xchg
cmpsb
movsl
inc
push
jge
lea
push
adc
mov
loopne
jle
sub
pop
daa
add
push
enter
out
ds
sub
xor
dec
lea
jmp
and
mov
xchg
sub
or
inc
cmp
and
adc
inc
mov
lods
add
and
test
stos
push
mov
or
in
jge
xor
in
sub
mov
add
xchg
xchg
add
hlt
sbb
pushf
mov
fistpl
rclb
nop
jmp
test
mov
lock
out
notb
ja
jbe
or
mov
xor
imul
inc
mov
mov
jno
xchg
pop
lret
push
scas
mov
push
cwtl
xor
test
inc
jmp
lea
jbe
movsl
in
addl
mov
adc
int3
mov
cmpsl
out
sarb
loop
ss
mov
inc
repnz
pushf
jne
outsl
mov
cld
mov
aas
movsb
cli
add
and
cmp
jle
aad
arpl
cmp
sub
sbb
pop
fidivrs
add
test
nop
popa
lret
mov
push
imul
sbb
imul
mov
mov
xchg
lcall
or
add
xor
mov
popl
je
in
push
popf
loop
and
pop
enter
push
inc
push
cmp
dec
dec
mov
add
adc
cmp
dec
mov
inc
stos
sub
js
xor
cli
dec
movsb
push
mov
inc
or
or
cmp
inc
inc
inc
mov
out
out
xor
cmp
sarb
scas
lahf
addr16
sub
cmp
sub
inc
push
push
repz
stos
aaa
or
imul
mov
push
into
and
pop
sbb
xor
in
ret
xchg
fbld
fisubrs
scas
adc
fwait
jp
jge
push
mov
xchg
mov
shl
jl
call
dec
aad
outsl
mov
fistpl
jg
insb
sub
lock
xchg
js
aad
push
int
cmovge
dec
daa
rorb
pop
ja
mov
fmull
or
dec
imul
in
cwtl
push
xor
xchg
sahf
and
add
sbb
rorl
rorb
rorl
lret
sbb
jmp
jecxz
dec
mov
pop
push
mov
scas
roll
mov
sahf
inc
iret
js
jno
sbb
scas
sbb
xchg
and
loope
xor
clc
fldt
ds
std
test
es
and
test
cmp
fcoms
sub
int
lods
adc
negb
mov
adc
and
mov
mov
mov
dec
into
mov
cmp
pop
push
movb
and
mov
ja
movsb
inc
in
inc
push
add
sbb
inc
ss
pop
ja
lods
gs
xchg
push
or
cld
and
test
outsb
shrl
xor
and
lods
mov
inc
scas
adc
cmc
push
sbb
push
dec
stos
cmpsl
xor
cmc
pop
bswap
adcl
cmp
xchg
add
inc
js
sbb
outsb
outsb
inc
xchg
lcall
or
jnp
mov
xchg
divl
sbb
xor
mov
adc
jno
xlat
cmpb
or
push
mov
jg
fdivp
dec
fidivrs
dec
push
inc
cmpsb
stc
sub
adc
cmpsl
mov
xchg
push
shll
shlb
jp
cmp
mov
pop
jmp
loope
add
scas
outsb
add
popf
in
es
enter
ljmp
mov
cli
lahf
jnp
fisttps
push
or
mov
cmp
xor
push
fldcw
mov
and
cmp
push
pop
mov
sub
out
xchg
arpl
xor
cmp
xor
jb
xor
sahf
dec
scas
repnz
div
mov
jno
in
add
sbb
movb
mov
sti
or
jmp
mov
cmp
mov
xchg
xchg
inc
cmp
xor
sbb
and
pop
pop
push
cmp
jno
push
divl
mov
out
aam
int3
push
fiaddl
es
mov
getsec
sahf
dec
inc
scas
out
movsb
or
lods
add
pop
inc
pusha
ja
jne
mov
lea
pop
mov
call
sbb
and
and
roll
movsl
mov
dec
sbb
dec
fcomps
lcall
or
dec
js
jle
pop
sub
mov
sub
sbb
cmpsb
mov
inc
mov
push
mov
andb
and
or
add
jecxz
inc
jns
daa
enter
test
inc
movsb
fldt
sahf
or
das
es
je
stc
fisubl
insl
lock
iret
mov
sti
aaa
loope
mov
pushf
jnp
cmpsl
leave
clc
push
jo
pop
hlt
pop
popl
push
push
sbb
inc
sub
mov
dec
call
sbb
out
out
ror
test
mov
jbe
sahf
push
aam
fs
mov
push
in
scas
call
cmpsb
stc
fucomip
lods
mov
jbe
aam
sub
repnz
data16
mov
sub
mov
jbe
push
mov
mov
jns
loope
lret
mov
scas
subl
jbe
test
dec
pop
mov
aaa
cwtl
mov
jl
xchg
or
imull
mov
ljmp
dec
jle
test
sbb
jbe
dec
push
ret
jne
adc
sar
sub
xor
and
or
icebp
rcll
loopne
enter
and
lret
nop
ss
ljmp
scas
cwtl
mov
rcl
cmp
lea
dec
or
sbb
mov
mov
cmp
cli
gs
pop
stos
adc
xor
jg
pop
cld
in
mov
or
pop
mov
push
test
cld
dec
loope
pushf
mov
scas
mov
out
sar
push
sbb
in
fstpt
jbe
push
jg
sbb
jmp
aam
xchg
xor
cli
sahf
es
outsb
jo
sbb
shll
clc
jg
mov
out
dec
rolb
cmc
popa
lock
pop
lret
daa
jb
loope
jb
ret
scas
shrl
mov
xor
ljmp
pop
outsb
xor
dec
sbb
adc
ret
inc
xlat
mov
xchg
call
push
pop
add
pop
lcall
aam
pop
pop
insl
adc
cmp
mov
addr16
xor
es
jnp
push
test
jp
xor
ds
xor
mov
rcll
fldcw
test
int
inc
pop
jmp
fwait
mov
fsubrl
jecxz
jp
add
push
fistps
add
xor
imul
fwait
popf
pop
mov
cmpb
mov
test
cmpb
out
lods
lods
movsb
and
push
sbb
arpl
adc
mov
test
jl
lock
cmc
out
les
fnstsw
frstor
cmp
inc
push
jae
mov
jae
lods
inc
jmp
nop
fwait
sub
add
int3
and
jns
fs
sub
shl
shrl
nop
sub
sbb
lods
mov
add
hlt
popa
imul
or
cmp
adc
xor
sub
xor
and
insl
mov
mov
jbe
and
insl
fildl
push
xor
ljmp
fmuls
ret
mov
add
xor
ffreep
in
ds
adc
inc
fadd
push
outsl
repz
fcompl
add
outsb
hlt
xor
sub
int
add
mov
cli
sbb
dec
out
or
dec
xor
mov
add
dec
mov
mov
xchg
cmp
inc
pop
movsb
dec
push
xor
xchg
cmpsb
data16
inc
movsl
sub
testl
mov
das
imul
sub
xorl
mov
push
fldenv
dec
out
sub
not
mov
mov
mov
nop
jecxz
mov
in
xrelease
cmp
js
inc
test
sbb
aam
sti
imul
add
mov
inc
ljmp
ja
fstpl
jns
es
jmp
stos
loope
icebp
loope
bound
loopne
mov
arpl
call
push
aad
ja
xlat
addr16
outsl
adc
stos
and
xlat
fsubs
arpl
add
mov
movsl
mov
push
fcomip
ljmp
lcall
fldt
icebp
fistps
cmpsl
int
lock
jo
xor
adc
dec
bound
or
jp
in
and
inc
outsl
aad
sub
cmp
add
jmp
test
outsl
jno
adc
dec
inc
mov
and
out
lods
cmp
cld
sub
xor
mov
jb
cmp
inc
and
aaa
cmp
pop
insb
into
add
mov
int
lock
adc
cmp
and
pop
and
jb
loope
mov
push
add
ret
adc
cwtl
nop
add
repnz
xor
lods
je
xor
sahf
lods
cmpsl
mov
cmp
cli
mov
mov
sub
lret
icebp
testb
into
jo
xlat
nop
push
xchg
sub
pop
xchg
inc
dec
jle
js
and
sbb
add
cmp
insb
outsl
stos
pop
pop
push
push
loope
out
int
sahf
xlat
shlb
mov
lea
adc
sub
test
xor
or
sahf
push
mov
push
lret
movsb
push
inc
cld
test
stos
cli
adc
jne
stos
icebp
mov
pop
imul
aam
xchg
jl
cmp
pop
pop
fidivrl
iret
add
xchg
out
mov
mov
inc
push
cmpl
loop
add
cmp
imul
lods
nop
pusha
aad
test
mov
mov
repnz
jl
in
lock
mov
push
cmp
pop
and
push
popa
cmp
mov
jbe
hlt
push
repz
icebp
iret
pop
sbb
scas
insl
stos
add
insl
jp
sbb
cs
icebp
mov
jne
nop
mov
add
fmull
adc
lods
stos
sub
sti
mov
filds
pop
pop
out
dec
inc
push
mov
xchg
adc
push
das
dec
or
test
mov
lahf
inc
jg
cld
cmp
mov
je
jnp
push
repz
xlat
inc
xchg
shll
xchg
mov
insb
push
imul
cmp
pop
jnp
js
popf
dec
dec
xor
sbb
data16
hlt
insb
ja
repz
daa
push
jmp
push
out
lds
cmp
orl
jp
sbb
cmpsl
adc
ja
jb
lods
addr16
mov
jno
pop
sbb
mov
scas
push
xor
xchg
add
pop
repnz
arpl
andb
dec
imul
aad
lea
rcrb
enter
pushf
bound
cmpsb
push
push
cs
or
inc
dec
orl
je
imul
sub
jmp
leave
lock
ja
and
sahf
pop
cmp
subl
movsb
push
xchg
sbb
xchg
insl
add
aad
xor
add
rcl
sbb
mov
imul
inc
stos
pop
xlat
inc
icebp
or
repz
andl
jecxz
pop
sbb
xchg
push
sub
mov
repnz
jle
ljmp
mov
mov
push
xchg
out
stos
pop
push
push
test
adc
xchg
cltd
sbb
bsf
outsb
sub
push
mov
adc
or
mov
dec
or
pop
cli
repz
dec
fcmovb
push
fidivrl
fcom
push
ljmp
xor
xchg
lcall
cmp
xlat
or
data16
cmp
popf
jp,pn
cwtl
roll
cmp
fidivrs
lahf
pop
xor
and
jmp
loop
xchg
lret
dec
arpl
and
mov
js
movsb
test
and
inc
mov
ret
mov
iret
test
pusha
je
xchg
jne
aad
dec
in
add
sysenter
ss
or
loopne
lcall
jp
mov
ljmp
test
mov
call
in
mov
ret
pop
xor
inc
adc
scas
fimull
test
lods
es
hlt
aas
xchg
mov
pop
xor
jnp
inc
arpl
fdivr
loop
lret
push
shrb
hlt
and
in
cmp
cmp
mov
imul
movsb
sub
mov
mov
leave
rclb
mov
lcall
mov
sub
cmpl
mov
xchg
aas
xor
pop
or
out
xchg
xchg
loope
pusha
xorl
jne
mov
inc
or
cltd
pop
dec
insb
push
sub
fdivrl
sbb
gs
push
mov
in
repnz
sbb
sub
adc
std
ret
pop
scas
cmp
mov
lahf
cmp
shlb
and
pmaddwd
jae,pt
cmp
cmp
insl
testl
mov
pusha
ja
inc
lret
int
bound
add
fstpt
aam
push
jnp
sbb
or
pushw
xchg
sbb
stos
dec
jbe
lcall
cli
add
add
fcoml
sbb
cmp
adc
inc
sahf
push
lret
aas
mov
mov
fdivl
cmpsb
jg
push
dec
std
lret
pop
mov
cmpsl
fldl
inc
or
fcmovb
xlat
dec
pop
daa
iret
fnsave
loopne
clc
sbb
lds
test
mov
mov
xlat
mov
sti
leave
xchg
sub
pop
and
pop
sbb
push
andps
cmpsb
subl
icebp
jmp
add
xchg
mov
loope
xchg
or
enter
in
mov
push
xchg
jle
aas
out
repz
mull
dec
fstpt
das
fmull
jae
pushf
clc
pop
pop
sbb
pusha
imul
arpl
data16
lcall
mov
push
js
pop
ljmp
sarl
xor
push
mov
cmp
mov
pshufw
mov
enter
mov
adc
mov
xchg
and
push
sbb
pop
xchg
decl
stc
xorb
movsb
test
fucomi
gs
fcompl
jb
outsb
ja
inc
fldt
sub
cmp
leave
enter
lret
daa
dec
scas
in
fsincos
xchg
push
sub
fbld
andb
hlt
outsb
movsl
push
scas
ret
jmp
mov
icebp
xchg
and
out
xchg
int
pop
scas
lret
das
stos
pop
inc
cli
lahf
shll
mov
inc
sbb
pop
jno
inc
mov
sbb
xor
andnps
clc
push
adc
pop
xor
mov
in
sbb
hlt
add
xor
mov
mov
insb
dec
rclb
adc
jp
int
cmpsl
pop
lea
push
dec
inc
jecxz
inc
les
out
idivb
hlt
rep
inc
popa
jb
popf
cmc
pop
cmp
mov
das
jbe
neg
pop
ret
mov
jbe
es
mov
aas
jnp
xchg
sbb
mull
repz
push
insb
mov
pop
cmc
mov
push
push
mov
mov
movsb
add
inc
pop
mov
pop
sub
push
sub
xor
ret
out
pop
push
jno
and
dec
shll
xchg
loop
sub
or
jne
and
outsl
mov
push
or
ds
fsub
and
cmp
outsb
lea
fistl
fistpl
loopne
in
inc
xor
imul
enter
jg
add
hlt
aad
sti
xchg
or
int
lea
adc
inc
jns
inc
sbb
pop
outsb
into
shl
popa
sub
xor
fcmovnbe
in
add
adc
pop
pop
inc
mov
mov
loop
push
cmp
testl
js
icebp
in
xchg
dec
sbb
adc
dec
mov
adc
rcll
inc
shlb
scas
pop
aas
outsl
ja
fnstsw
std
mov
stc
xor
adc
inc
add
popf
inc
daa
repz
mov
out
iret
les
addr16
hlt
lcall
adc
fwait
jp
adc
adc
xchg
jecxz
fstpt
jo
mov
mov
imul
add
lcall
mov
aad
fcompl
jg
mov
aas
dec
enter
aaa
stos
sub
out
add
pop
stc
decl
shr
imul
push
lahf
cmp
sub
and
pop
dec
lods
js
jp
icebp
mov
mov
scas
test
popa
je
rclb
daa
pop
sahf
xor
add
les
and
mov
mov
jp
in
xchg
cli
jl
shll
mov
sub
push
int3
mov
cmp
push
sbb
cmp
packuswb
inc
xorb
push
jae
test
into
repz
int
push
push
mov
fwait
or
push
lea
les
imul
cwtl
add
mov
push
push
mov
scas
mov
iret
pop
mov
bound
or
pop
and
daa
movsb
push
cmp
push
jg
stc
cmpsl
sbb
mov
ds
adc
aaa
jge
push
aaa
inc
xchg
push
imul
or
mov
je
cwtl
xor
and
inc
xor
insb
jle
pop
rcrb
shlb
movsb
stc
mov
das
cmp
test
int3
fcoml
call
bound
inc
adc
rorl
in
mov
cld
leave
pop
ret
cmp
mov
dec
and
jo
sti
and
xchg
ss
mov
push
add
mov
adc
sub
add
jae
xchg
mov
lret
cltd
nop
sub
cmpb
mov
cmpsl
mov
mov
dec
out
bound
mov
push
imul
daa
or
mov
sbb
push
sti
ss
cmp
xchg
add
inc
shrb
sbb
fld
or
and
sbb
int
adc
in
sahf
cltd
inc
aas
xchg
in
add
push
cmp
pusha
outsl
es
cmp
push
mov
fstps
mov
cmp
jo
sbb
addr16
sbb
ficomps
push
popf
inc
pop
cmp
cmp
mov
cmp
or
lock
push
inc
push
rcl
outsb
pop
mov
sbb
and
xchg
or
cmpsl
sub
add
dec
push
mov
and
dec
negl
push
pusha
and
in
mov
dec
int
add
pop
push
insl
into
jg
imul
push
jmp
insb
nop
dec
hlt
cmc
aaa
and
movsl
xlat
sub
std
idivl
push
xchg
mov
rcrb
in
in
xchg
xchg
cmpsb
seto
aad
jbe
cltd
insb
mov
cltd
adc
mov
and
xchg
bound
mov
in
ds
add
int
mov
daa
fldt
push
int3
pop
repz
inc
push
xchg
mov
fwait
jmp
jbe
in
sarb
sbb
filds
lods
std
hlt
cmpsb
ss
jle
push
push
mov
cmp
jnp
mov
push
jle
mov
jge
push
bound
int3
push
jbe
aam
xor
sub
pop
dec
mov
add
push
icebp
xlat
dec
mov
movsb
xchg
fldt
inc
mov
shlb
fwait
pop
jne
adc
push
stos
cltd
dec
dec
test
adc
jo
int3
repnz
fdivp
stos
dec
pusha
inc
push
cwtl
es
sbb
lcall
mov
mov
and
xlat
icebp
dec
xchg
push
cmc
adc
inc
adc
inc
dec
push
in
imul
jnp
jl
stos
push
bound
xlat
jl
jecxz
or
cmp
xchg
rcl
scas
int
push
inc
adc
adc
sbb
in
pop
mov
push
or
xchg
mov
nop
aas
push
mov
xchg
push
lret
fcom
jmp
inc
aam
dec
int
mov
pop
out
push
outsl
push
xor
push
xor
nop
enter
jne
leave
movsl
dec
cs
mov
cltd
leave
cld
lods
mov
xchg
sub
shrl
inc
xlat
std
addl
mov
adc
testl
lret
lret
test
sub
dec
cs
push
aad
and
loope
scas
push
or
fldenv
jno
test
sbb
aaa
es
mov
call
inc
sbb
adc
imul
mov
sub
lock
ss
aam
jge
stc
mov
pop
movb
xchg
mov
and
mov
push
outsb
xor
dec
dec
iret
sti
push
pop
inc
mov
inc
add
fwait
push
lods
adc
pop
mov
add
dec
jne
lcall
cmp
das
adc
int
sub
outsl
decb
pushf
or
push
xor
hlt
in
pop
push
adc
mov
cmp
les
pop
xchg
mov
shrl
cmp
je
lret
daa
jno
xchg
repnz
mov
xor
jo
adc
and
aad
adc
out
jne
lods
adc
je
repnz
ss
pop
shl
cmpsb
mov
pushf
and
pop
aam
mov
pop
mov
cmp
insb
or
cwtl
fwait
add
push
xor
jg
out
and
loope
dec
stc
sub
xor
stos
sbb
jno
and
sub
popf
scas
cmp
pusha
jae
lcall
loope
dec
mov
in
lahf
inc
or
cli
sub
dec
xchg
rol
cs
je
daa
mov
pushf
xchg
fwait
js
push
std
pushf
popf
and
adcl
adc
inc
std
test
sahf
xchg
push
adc
sbb
adc
mov
aaa
mov
adc
test
cmp
cs
mov
push
xchg
jns
adc
pop
call
pop
pop
popa
lret
stos
aad
mov
cmp
jp
ja
lcall
popa
mov
sub
jo
arpl
and
mov
mov
mov
mov
bound
cmpsl
sbb
out
or
jg
fs
dec
jo
test
les
into
xor
mov
lock
mov
imul
xor
mov
into
mov
pusha
cmc
fnstcw
scas
enter
xchg
inc
inc
cltd
clc
in
inc
rcll
adc
daa
dec
aas
sbb
aas
shl
xlat
test
sbb
cmpsl
sarb
mov
xor
xchg
test
cwtl
movsl
lock
loopne
movb
mov
movsb
jb
aaa
imul
or
xchg
mov
sub
jl
jae
mov
scas
adc
sub
sub
lds
out
call
mov
pop
xorl
xorl
subl
inc
rcl
mulb
mov
arpl
into
sub
push
adc
es
test
sub
xor
dec
adc
gs
push
int3
dec
mov
and
andl
lods
jle
push
test
jne
fsub
test
sbb
stc
pop
sub
lds
cwtl
xchg
ret
imul
insl
out
sbb
or
aad
jb
jg
mov
sbb
ljmp
mov
jnp
test
sbb
push
int3
sbb
sub
push
loope
inc
add
sahf
arpl
incl
add
push
inc
add
lahf
cmpsl
fcoms
xchg
pop
mov
cmp
lret
mov
in
push
je
test
inc
ffreep
sbb
sbb
aas
cmp
jmp
ret
sbb
sbb
popf
jle
iret
pop
jo
and
or
leave
mov
loopne
leave
fmuls
jp
cmp
dec
mov
xchg
mov
insl
cwtl
cmp
add
and
fisubrl
cld
add
mov
dec
push
and
ss
mov
test
lahf
push
jp
stos
sbb
or
mov
clc
int3
testb
xchg
mov
movsb
mov
xchg
in
mov
add
frstor
push
jne
pop
sbb
fimull
xchg
mov
dec
jge
mov
pop
in
add
std
in
cmpsl
cltd
add
xchg
sbb
lds
add
push
xor
out
loop
xor
or
mov
leave
xchg
roll
lret
mov
pushf
push
and
dec
push
dec
xchg
adc
lods
pusha
cs
push
outsl
push
xchg
mov
sbb
imul
test
pushf
xchg
xchg
mov
imul
xor
hlt
jbe
lcall
gs
jl
dec
in
enter
mov
pop
xchg
jg
cmp
pop
outsb
ret
mov
mov
add
cmp
jae
xchg
aam
je
lods
arpl
aam
jle
sbb
push
push
sub
mov
stos
nopl
hlt
call
inc
adc
mov
sbb
push
pop
into
xchg
shll
lods
rorl
adc
pop
push
cli
and
adc
inc
and
repz
fildll
add
jno
imul
mov
sbb
mov
dec
inc
or
fwait
push
stc
lods
inc
push
sbb
cmp
pop
pop
sahf
xor
adc
push
push
test
mov
pop
inc
mov
fildll
dec
dec
lock
ret
pop
inc
jnp
adc
je
xor
dec
push
lret
rep
sbb
mov
add
inc
in
inc
rorl
adc
insl
xor
js
rorb
out
push
mov
pop
imul
sub
in
ret
cwtl
icebp
aam
mov
jne
or
fnsave
ds
outsl
jns
push
add
jns
sahf
cmc
pop
mov
lcall
dec
push
or
xchg
and
mov
test
push
sahf
adc
sbb
repz
lahf
cmp
push
outsb
aas
imul
cld
mov
xchg
or
outsl
xchg
cmp
xor
stos
mov
or
inc
stc
xchg
bound
pop
addr16
push
adc
inc
stc
mov
aaa
je
adc
sub
lahf
cltd
mov
fstpl
fildl
xor
inc
adc
mov
jecxz
adc
xchg
enter
imul
mov
cld
add
test
or
test
or
shrb
xchg
adc
fisttps
movsl
sub
mov
in
and
iret
bound
dec
mov
cmp
dec
cmp
cmp
pop
sbb
enter
cli
rorb
insb
inc
inc
addl
push
repnz
test
pop
in
loope
xchg
push
repz
sub
out
mov
clc
out
jle
call
mov
test
xchg
addl
jne
mov
les
lret
fcompl
jmp
nop
imul
adc
and
pop
mov
in
insb
cmc
out
adc
pop
pop
js
int
jmp
sbb
imul
ds
leave
sbb
pop
jg
push
xor
sub
adc
jnp
sub
and
out
fnstcw
mulb
add
mov
lcall
movsb
xchg
outsl
loop
xor
ds
scas
mov
rcr
pushl
aaa
or
hlt
sbb
ljmp
inc
decb
lcall
xchg
jmp
adc
sahf
and
jno
dec
popa
aas
xor
push
pop
outsb
and
dec
jg
jmp
mov
mov
adc
mov
and
ret
faddl
jge
mov
mov
in
mov
xor
cmpsb
mov
cli
fidivrl
inc
out
add
movsl
and
pop
imull
stos
cmp
arpl
lds
clc
xchg
dec
fcoml
jmp
sub
mov
cwtl
lret
mov
or
inc
jae
rep
adc
js
inc
out
lahf
mov
stos
push
sti
push
mov
and
mov
mov
xor
aad
adc
test
pop
push
push
bound
xlat
enter
movsl
lock
xor
and
sbb
std
mov
imul
leave
pop
data16
notl
loope
mov
jmp
xchg
sub
lret
cmc
push
jns
insl
dec
xchg
pop
lods
nop
loopne
andb
or
xchg
sahf
hlt
test
mov
addr16
push
jg
fidivl
daa
lahf
mov
in
mov
repnz
inc
mov
mov
int3
jmp
and
jo
sbb
sbb
ss
sub
pop
in
mov
leave
jmp
add
mov
mov
mov
lret
sub
jmp
icebp
cltd
daa
lods
mov
fmul
rol
xchg
add
test
fstpl
daa
and
stos
shr
push
inc
mov
or
mov
scas
xor
pop
inc
pop
xor
lret
or
jle
cmp
adc
enter
pop
or
sub
xor
dec
nop
sahf
nop
mov
add
stos
or
push
or
pop
sbb
dec
or
cmp
pop
adc
cmp
cltd
add
fwait
cwtl
shlb
adc
lcall
sub
add
jmp
pop
mov
push
in
pusha
xor
sbb
scas
out
and
sbb
in
inc
mov
and
and
xor
cmpsb
movsl
mov
jo
lods
cs
xor
and
loopne
out
mov
imul
invd
mov
jne
lock
les
pop
adc
fcompl
out
sub
hlt
inc
xor
or
lock
mov
ja
je
pop
roll
xchg
and
insl
mov
cmpsb
lods
mov
loopne
outsb
sub
aas
cwtl
push
adc
mov
shll
scas
xchg
cmp
mov
add
sti
lret
shrb
leave
out
adc
push
dec
adc
mov
stos
sbb
pushf
jnp
jne
dec
fimuls
ret
popf
pushf
pop
push
or
sbb
fwait
sbb
xor
sti
adc
imul
rcrb
movsb
push
mov
bnd
cmpsl
out
fmull
cmp
jl
adc
pop
fstps
mov
stc
mov
int3
ljmp
mov
push
mov
or
jp
mov
sub
fisubs
push
std
and
inc
inc
sbb
pop
adc
cs
sub
mov
testl
pop
add
pop
cmp
or
mov
cmp
mov
movsl
aad
movsl
dec
es
int
jge
add
ret
or
stos
loopne
pop
push
pop
int3
pop
setne
cmp
gs
int
into
inc
add
mov
xor
xchg
orl
dec
sbb
jle
cmp
xchg
lret
cli
in
adc
repnz
cmc
outsb
ss
lea
jmp
mov
les
xchg
cmp
jl
add
sbbb
cmc
aaa
int3
dec
add
ficoml
imul
or
adc
cmpsb
sbb
inc
mov
mov
loopne
in
rol
push
jae
int3
cmpl
dec
cmp
xchg
xor
sub
imul
jne
ds
pop
daa
cmp
or
std
ljmp
mov
pop
loope
popa
push
loopne
fldt
popf
adc
push
sti
mov
mulb
adc
sub
loopne
push
mov
xor
leave
adc
add
push
add
push
test
pop
jnp
test
sti
cld
xor
mov
sub
pop
outsb
cld
and
cmpsb
pop
arpl
sub
fimuls
adc
push
adc
xlat
mov
sub
subb
xchg
rolb
out
test
adc
xchg
imull
add
sbb
cmpb
pop
and
psllq
and
outsl
sbbl
inc
ret
test
les
xchg
jne
push
ret
xchg
lds
aas
sub
mov
or
push
addb
sub
jecxz,pt
dec
jp
aas
mov
jmp
enter
call
scas
aam
adc
inc
adc
xor
add
lret
clc
dec
or
arpl
inc
js
pop
gs
imul
rcr
addl
mov
jl
cmp
call
dec
dec
ljmp
jg
adc
cmc
xchg
fdivrp
insb
les
aaa
stos
mov
xchg
or
int3
in
mov
outsb
movsb
scas
inc
fiaddl
xor
push
in
add
sbb
jg
fimuls
adc
inc
sahf
pop
into
xchg
xor
jbe
mov
adc
daa
addl
push
mov
repnz
repnz
push
popa
mov
or
sbb
retw
stos
push
lcall
push
jg
push
sub
leave
adc
dec
or
aad
mov
cwtl
es
and
sbb
sub
inc
enter
pop
les
jle
pop
push
sbb
shrl
mov
cmp
pop
xor
ljmp
jnp
xchg
aad
inc
fisttpll
and
sti
dec
scas
das
push
or
mov
jne
pop
aad
push
arpl
leave
mov
xorl
fisttpl
fisttps
xor
cli
jbe
into
ss
adc
jmp
mov
repnz
and
pop
pop
outsb
arpl
sub
dec
mov
in
dec
in
sub
push
xor
xorl
test
inc
leave
movsb
imulb
pushf
subl
ret
in
xchg
pop
stc
fsts
cli
nop
aad
mov
push
mov
cmp
xor
xchg
cld
mov
in
les
inc
outsb
les
inc
lods
sti
lcall
shr
repnz
pop
pop
lret
leave
lcall
decl
jb
in
xchg
int3
mov
test
mov
aam
addr16
jmp
inc
mov
rcrb
sbb
in
inc
imul
cmpsb
cld
insb
jae
pop
fstpl
sarl
cmp
sub
mov
cld
sub
punpcklwd
in
psrlw
cmp
adc
fwait
test
xchg
data16
mov
ror
jb
dec
int
cmp
jo
fcoml
out
xchg
and
cwtl
mov
cld
std
sbb
lock
test
fucomi
or
add
pusha
and
out
xor
js
fldt
cmc
push
pop
negl
and
stc
xor
aad
cmp
sbb
inc
dec
test
inc
ja
jl
push
mov
sub
xor
mov
cli
fs
inc
sar
sub
xlat
outsb
mov
dec
imul
les
js
push
out
push
loop
push
test
loop
bound
inc
sahf
dec
cli
xor
daa
rcrl
sub
out
pusha
iret
and
cmp
xorb
iret
pop
mov
or
in
das
aas
jp
into
sbb
lds
ljmp
fs
aam
or
out
inc
negb
mov
int3
push
je
xor
cmp
aam
movsl
inc
fwait
dec
ds
xor
adc
sub
jge
cmp
cmpsl
insb
cmp
lods
cwtl
adc
sub
popf
dec
test
sub
arpl
pop
out
dec
popf
ret
xor
jp
loopne
out
mov
sub
lret
mov
and
mov
cmp
negb
mov
aas
sbb
mov
dec
dec
daa
mov
add
pop
cltd
inc
add
push
pop
jmp
lds
cltd
pop
or
pop
xchg
jl
test
loope
pop
icebp
scas
jns
roll
test
xchg
loope
int
fucomp
xchg
arpl
in
rorl
cmp
cmp
xor
add
lret
or
icebp
or
mov
jb
repz
iret
inc
inc
repz
and
add
mov
ficoms
mov
test
imul
inc
loope
pop
xchg
push
cmpl
sbb
sub
stos
mov
xor
dec
out
xchg
jae
int
cmpsb
fnstenv
lock
cmp
movsl
xor
mov
dec
add
loope
js
xor
add
and
xor
movl
add
movsb
rolb
adc
mov
cli
sub
push
loope
or
in
jp
inc
dec
xchg
sub
push
push
icebp
repz
jg
mov
push
into
repz
mov
int3
xor
xchg
in
push
mov
arpl
outsb
sub
shrb
les
xchg
mov
es
push
shr
add
xor
bound
lds
add
lahf
lock
adc
rorb
rorl
jo
mov
cs
adc
sub
sub
fidivrs
sbb
in
sub
inc
adc
sti
dec
gs
inc
and
out
mov
mov
lds
icebp
aam
nop
sbb
sti
sti
imul
popa
dec
call
add
dec
loop
mov
bound
mov
sti
sub
cwtl
imul
insb
adc
dec
add
out
nop
add
xorb
or
adc
lahf
lret
ret
inc
jbe
push
or
addr16
call
sarl
push
and
mov
push
jb
sbb
hlt
mov
lods
lcall
out
xchg
pop
pop
ss
inc
xor
addr16
icebp
jg
test
xchg
sbb
xchg
mov
dec
jge
sbb
ljmp
aam
xor
add
sub
pop
xlat
push
mov
mov
sbb
loope
push
ja
push
loopne
mov
jmp
aad
sub
iret
jb
jbe
mov
fs
pop
mov
cmpsl
enter
aas
lock
cmpsb
mov
pop
adc
gs
les
dec
loop
jg
iret
sub
imul
cmpsb
mov
das
ret
jmp
mov
mov
je
xchg
or
lds
in
push
js
sub
out
push
pop
mov
in
rclb
xor
push
in
inc
arpl
jg
hlt
je
sub
push
int3
ret
add
dec
inc
pusha
loop
loope
lret
sub
fdivl
pop
ret
clc
fistpl
jbe
lds
lret
jbe
cmc
in
jg
in
or
mov
sbb
arpl
mov
mov
inc
mov
add
nop
push
outsl
ja
sbb
add
pop
movl
movsb
xor
outsb
test
mov
mov
fsts
mov
int3
cmc
test
inc
mov
xor
inc
imul
inc
ss
in
cmp
jo
add
ret
addr16
mov
jle
adc
gs
cltd
fwait
daa
movsl
jne
jg
outsl
aaa
fdivr
mov
or
sbb
pop
fwait
or
cld
jecxz
fs
fdivrs
sti
cmpsb
repnz
pop
mov
push
xchg
std
xor
imul
sub
inc
ss
js
nop
outsl
jae
add
shlb
fndisi(8087
jge
cmp
mov
and
in
stos
jno
mov
pop
rol
sbb
shll
adc
and
inc
pop
ljmp
and
push
mov
and
in
jmp
insl
cmpsl
pop
sahf
js
pop
jnp
inc
bound
test
mov
mov
mov
add
lds
mov
cmp
jg
dec
push
xor
cld
xchg
jecxz
cmpsb
mov
repz
inc
lods
cmp
mov
push
imul
xor
mov
rcll
pop
dec
into
xor
pop
pop
outsb
add
push
mov
push
fwait
mov
xor
sub
imulb
test
les
insb
in
repz
imul
ret
adc
movsl
imul
xor
jp
ret
add
hlt
adc
pop
lea
pop
aad
stos
int
dec
jae
jb
dec
jae
aas
fisubrl
or
xor
mov
xchg
enter
out
das
mov
sub
cmpsl
or
cmp
mov
je
cld
sub
es
imul
icebp
ss
fsubr
dec
xor
jge
aad
cli
dec
stos
push
lods
imul
mov
leave
xchg
fldt
in
xchg
cmpsb
or
pop
rorb
bound
dec
mov
jbe
int3
clc
or
hlt
lcall
arpl
rolb
mov
scas
in
pop
inc
inc
jno
or
sbb
lds
xchg
popf
xorb
scas
push
addr16
pop
std
inc
gs
je
lahf
cmpb
js
pusha
lds
pop
rorl
and
pop
in
sub
fs
xchg
fcoms
out
xor
mov
shrb
call
aaa
sbb
bswap
aas
xchg
rcl
loop
push
test
ss
adc
ficompl
and
into
xchg
push
aaa
bound
jbe
pop
cmc
movb
push
jle
jno
fists
cs
daa
mov
jl
dec
lea
out
xchg
lock
sahf
cli
out
cld
inc
sahf
shlb
sbb
frstor
pop
or
mov
out
daa
jne
insb
mov
pop
flds
mov
mov
mov
push
loop
xor
dec
popf
or
outsl
idiv
mov
cmp
insb
mov
ja
dec
cmp
push
xor
mov
rolb
inc
sbb
xchg
dec
jnp
cld
fstp
sarb
jb
outsl
push
ja
sub
xor
push
mov
sbb
push
dec
popa
xor
inc
adc
jge
aad
xchg
jne
daa
push
jbe
nop
movsl
fs
out
iret
shll
lods
xlat
mov
pop
stc
lret
add
arpl
push
daa
inc
lss
enter
dec
in
push
bound
pop
es
fidivrl
mov
inc
cmp
mov
adc
mov
imul
inc
push
jge
inc
xor
and
and
mov
inc
es
xchg
enter
aas
mov
addl
cld
mov
and
mov
pop
push
inc
cs
sbb
cmpsb
cmp
sarl
aas
repz
loopne
push
movl
ficoms
add
imul
push
push
mov
xor
ret
rcrl
push
mov
or
clc
add
data16
pop
scas
push
or
loopne
mov
mov
loope
inc
add
jge
push
mov
add
js
fbld
out
jnp
ficoml
ss
xchg
or
xchg
das
stos
icebp
outsl
or
adc
test
xchg
leave
xchg
pop
xchg
pop
or
inc
jb
insl
in
icebp
sbb
lods
sbb
or
pop
mov
sub
sbb
jbe
and
aas
push
or
idivb
xlat
repnz
mov
xor
lea
cmc
xchg
add
iret
add
pusha
dec
fcoms
lods
bound
movsb
lock
sti
adc
fucomi
test
pop
sahf
jne
incb
pop
jecxz
dec
sub
jmp
rcrl
push
or
out
inc
dec
mov
add
pushf
cmpl
sahf
mov
pop
cli
push
adc
inc
jno
fcoml
push
out
insl
cmp
ja
aas
movsb
mov
mov
test
mov
mov
icebp
adc
fsubs
dec
out
es
rorb
push
pop
mov
enter
and
arpl
loop
push
dec
into
lahf
jo
jae
stos
add
inc
aam
enter
test
call
repnz
iret
mov
push
popf
fwait
mov
sbb
jae
imul
add
fucomp
in
shll
pop
xor
mov
mov
scas
mov
cli
lock
adc
jae
fcomi
pop
dec
xchg
pushf
movsb
fbld
int3
loopne
add
mov
das
xor
xor
xor
or
sbb
dec
xor
lahf
enter
jge
dec
mov
mov
push
shll
enter
mov
add
mov
xor
lods
mov
jb
jo
repnz
lock
and
jnp
xor
imul
or
sbb
sbb
cld
jmp
or
sbb
arpl
add
vcvtdq2ps
andb
fisttpl
xchg
iret
xor
les
or
jnp
jno
adc
and
mov
cmp
fstl
outsl
dec
xchg
mov
rcrb
inc
sbb
shl
push
push
mov
ds
adc
out
out
xchg
jnp
mov
mov
std
testb
jg
xlat
jo
adc
leave
call
mov
add
mov
cwtl
and
add
inc
or
pusha
out
sbb
call
pop
xchg
jne
les
pop
xor
and
dec
test
pop
mov
dec
sti
loop
fdivrl
sti
test
lahf
lret
push
and
dec
mov
adc
ret
pop
lea
int3
in
aaa
push
push
xchg
mov
mov
cli
in
loop
aaa
mov
cli
push
int
into
sahf
jns
add
mov
sub
in
inc
sarb
mov
push
adc
loopne
imul
mov
cmpb
insb
fildll
mov
fs
xchg
cmp
pop
movb
dec
scas
negb
subb
loope
and
sti
sbb
adc
lret
pop
je
les
bound
inc
popf
cld
and
sbb
mov
fdivrs
sti
xor
ret
loop
ret
lock
push
sub
push
rcrb
es
inc
jg
pandn
aaa
xlat
sub
insl
jmp
dec
cltd
sub
sahf
out
pop
add
fcmovb
decl
jb
xchg
leave
inc
push
imul
les
ficompl
loopne
lds
getsec
mov
cs
addr16
cmc
fisttps
ja
cltd
cli
inc
imull
cli
call
sub
sbb
dec
jae
aam
in
dec
icebp
jb
jns
push
data16
sti
mov
add
fdivs
or
jae
mov
jno
push
sbb
lret
dec
test
jnp
mov
cmp
cmp
xor
sbb
jo
cmp
icebp
iret
jg
and
mov
test
sub
lods
jmp
je
sbb
xchg
jo
outsb
call
sub
mov
jmp
cld
inc
xorb
sub
jmp
hlt
repnz
popf
jae
cmp
loopne
in
and
adc
xor
mov
xor
sbb
sbbb
cmc
pop
xchg
fldl
push
loopne
das
mov
push
icebp
ss
sub
mov
test
ret
faddl
sbb
out
fldt
jle
popa
jmp
fildl
sti
icebp
add
mov
out
lods
xor
sarl
into
fstpl
outsl
and
data16
in
stos
jne
das
and
loopne
adc
fimuls
out
aaa
mov
movsl
cmpsl
jb
dec
subb
mov
mov
gs
and
sub
loop
add
ret
aam
xchg
fcoml
mov
popf
andl
aas
iret
dec
les
jg
dec
inc
stc
shlb
or
mov
push
inc
cmc
idivb
pop
dec
and
pushf
loope
insl
xor
ja
pop
aas
enter
lods
lcall
mov
insb
rclb
orb
pop
pop
dec
or
sbb
inc
repnz
aas
fdivrs
push
xchg
leave
jno
and
pmaxsw
ljmp
mov
jp
pushf
mov
or
jl
mov
nop
inc
adc
lcall
mov
lahf
adc
xchg
lcall
mov
pop
xchg
push
pop
sub
or
push
sahf
insl
mov
outsl
or
idiv
push
jae
jmp
cmp
cltd
cmc
lea
push
xchg
repnz
pop
cmpsl
fmulp
cwtl
test
aas
mov
test
pusha
lea
popf
test
mov
test
lock
push
pop
repnz
pop
sub
mov
jp
push
and
shrb
xchg
sbb
xchg
add
in
mov
xchg
inc
rcrl
aad
cmp
in
or
pop
out
icebp
ss
sbb
dec
push
lcall
loopne
inc
in
cld
arpl
icebp
mov
std
lods
xchg
mov
jne
mov
ljmp
push
and
sub
pop
mov
int3
jbe
mov
enter
repnz
mov
test
lahf
dec
dec
or
pusha
daa
out
out
pop
fs
andl
xchg
pop
add
shlb
je
ret
push
fisttpl
and
jp
sarl
mov
int
fmull
test
mov
arpl
es
in
out
das
xchg
popf
leave
or
jg
pop
ror
mov
test
lahf
mov
iret
js
jge
bound
sbb
jne
sahf
imull
stos
and
sub
lods
xchg
sub
sub
aaa
pop
les
jb,pt
mov
icebp
mov
mov
jmp
cld
das
fiadds
jae
fcomip
mov
and
inc
clc
pop
push
in
hlt
scas
xchg
xchg
pop
jo
loope
pop
jne
frstor
pop
adc
push
cmp
inc
in
cmp
add
popf
nop
dec
outsl
sub
fstl
rolb
cmp
mov
clc
sub
lret
xchg
pop
fisttpll
pop
jge
jns,pt
pop
cmpsb
jns
lea
and
stos
and
ljmp
dec
out
ja
xchg
stos
and
popf
mov
cs
pushf
gs
fidivl
daa
stos
hlt
call
shl
fnstcw
movsl
je
lcall
fcoms
out
sbb
lods
jmp
add
pop
test
pop
loop
sub
aas
mov
rcrb
adc
and
cld
clc
push
stos
pop
sbb
sbb
push
lock
lret
fstps
push
ljmp
fldcw
testl
jns
out
rcrb
sub
sti
repz
inc
popf
jge
push
ss
inc
fstpt
xor
arpl
jmp
mov
inc
mov
paddd
pop
rcr
das
fwait
jmp
fdivs
cmp
cmp
add
pop
dec
cmp
jno
gs
pop
add
enter
xchg
roll
in
sub
jle
add
xor
fdivrl
push
inc
pop
adc
jbe
mov
fidivs
push
mov
jbe
cmp
pop
sbb
cli
dec
dec
pop
mov
cmpsb
das
adc
jecxz
in
ret
xchg
test
stos
sahf
sbb
push
pop
and
fildl
cmp
lret
sahf
jp
xor
pushl
jb
rcrl
sub
mov
fcompl
in
je
mov
push
ljmp
sbb
pop
cmp
ja
add
cmc
adc
mov
sub
sub
jne
adc
sub
jne
cmp
movsb
push
repz
js
jge
sub
and
adc
or
leave
push
cwtl
adc
sbb
jbe
xor
repnz
js
push
sub
jno
das
cmpsb
iret
icebp
int3
jne
push
cmpsb
cld
sbb
inc
dec
jne
push
mov
and
daa
jl
mov
dec
ja
mov
ljmp
icebp
lock
pop
fstpt
push
adc
iret
mov
sahf
xchg
xchg
xchg
or
into
fildl
sbb
add
ds
push
mov
sbb
imul
dec
push
iret
inc
daa
mov
push
int
push
jbe
mov
and
jmp
sub
mov
mov
jae
inc
sub
lret
cmp
push
cmp
jl
sbb
cld
mov
popa
mov
mov
lahf
outsb
push
and
out
sbbl
or
xchg
add
jg
negb
outsb
cmp
and
and
pop
cs
xchg
dec
sbb
mov
mov
dec
inc
push
inc
clc
jmp
push
call
loop
stos
mov
sub
fimull
mov
movsb
mov
into
pusha
mov
jb
daa
cwtl
popa
gs
arpl
dec
test
je
cmp
repz
bound
xchg
mov
test
lods
inc
imul
jmp
jmp
push
push
dec
sub
pop
icebp
or
cli
mov
das
sub
outsb
inc
scas
jl
or
stc
pop
and
int
dec
push
std
scas
pop
cs
test
iret
mov
jnp
dec
push
cs
add
fucom
das
or
adc
popf
inc
pop
push
xor
dec
mov
ja
push
lods
jae
or
mov
pop
xchg
jae
inc
out
push
fldl
push
fildll
sub
pop
push
fadd
rcl
repnz
sbb
sbb
mov
test
cs
mov
xor
fildl
jae
jp
xor
loopne
xchg
sub
call
into
adc
dec
js
shrl
aam
jp
arpl
push
push
lock
in
xchg
out
popa
adcl
sub
xchg
jne
sub
fimull
movsl
popa
clc
sub
ds
stos
ljmp
ficoml
inc
inc
mov
nopl
rol
sbb
aad
movsb
test
mov
mov
xor
cmpsl
xor
test
xor
mov
lret
cltd
cmp
in
adc
xchg
pop
jle
add
das
jns
push
xchg
push
repz
adc
mov
xchg
js
pushf
inc
xchg
fistps
aad
fwait
inc
push
jmp
mov
cmpsb
sub
repz
inc
ret
dec
int3
test
jmp
and
push
shll
aaa
mov
iret
inc
fisubrl
xchg
dec
in
sbb
ds
mov
aaa
fwait
hlt
das
cmpsb
xchg
pop
bound
cmp
stc
mov
mov
jbe
pusha
ret
rclb
lods
mov
outsl
dec
sub
mov
popf
adc
and
pop
xlat
cs
rcrb
std
sub
push
and
outsl
inc
sti
cmp
out
or
mov
cld
mulb
or
ds
push
leave
push
dec
sub
fs
enter
jle
int
sti
push
je
dec
out
fisttpl
jmp
push
add
jecxz
js
or
jo
xchg
xchg
lret
sub
ds
cmp
cmpsl
and
outsl
bound
enter
fcoms
cs
movsb
lcall
bound
mov
mov
add
pushf
ljmp
mov
repz
arpl
xchg
inc
inc
mov
push
out
lods
push
mov
mov
adc
xchg
push
xchg
adc
and
dec
and
xchg
test
jmp
jp
fisttpl
mov
test
movsb
mov
sub
push
push
add
mov
mov
xchg
pop
jnp
add
fucom
insb
pop
aas
sahf
lds
sbb
push
lea
mov
dec
mov
push
ja
pop
dec
fcoml
fistps
cmpsb
mov
inc
push
jle
push
cmp
test
jle
push
shlb
inc
dec
aad
inc
in
hlt
adc
mov
lds
adc
ret
mulb
xchg
adc
jl
sub
jns
lds
pushf
ja
push
cld
sub
xor
dec
jp
ror
lret
pop
push
or
pop
fdivr
ret
fldl
pop
push
je
das
sub
dec
or
loopne
test
adc
push
xor
fsubrl
adc
pop
js
push
js
pop
add
mov
or
inc
addr16
imul
cld
stos
imulb
jge
jp
mov
mov
sti
xor
sbb
pop
ret
into
in
lods
std
pop
jnp
add
cwtl
ficoml
ss
shlb
push
and
lret
pop
outsl
ret
or
fisubs
mov
jne
jnp
inc
imul
or
and
push
mov
jbe
adc
ffreep
and
pop
jl
imul
and
insl
mov
cld
int3
insb
cld
mov
or
sbb
add
mov
pop
adc
mov
cmp
clc
mov
sbb
subl
test
lret
in
pusha
sub
loop
cld
jae
or
insb
std
sub
inc
int3
cwtl
inc
push
cmp
fmuls
pusha
mov
shrl
fidivs
sbb
popa
fsub
push
jae
adc
pop
leave
in
xor
inc
fldt
aas
scas
sti
fs
cwtl
in
loope
inc
jno
out
cltd
popa
mov
xchg
mov
pusha
gs
mov
or
mov
nop
dec
mov
in
bnd
hlt
fidivrl
shll
push
sbb
xor
add
int
lret
sub
ds
sub
sbb
fwait
notb
jae
inc
pop
mov
fstl
mov
or
jne
lods
out
pop
sub
lods
insb
aad
jne
mov
loope
inc
loop
pop
orb
jp
dec
in
gs
mov
popf
push
mov
out
out
mov
or
fsub
je
jno
into
cwtl
ror
lcall
sbb
cmpsb
hlt
bound
inc
xor
mov
dec
out
mov
and
pop
push
icebp
jl
or
sti
inc
test
mov
in
or
popa
mov
jmp
notl
jl
stos
xchg
popa
inc
insb
cmc
nop
les
mov
mov
jo
mov
shr
adc
push
into
cmc
loopne
mov
shll
loope
add
ljmp
xchg
iret
mov
mov
add
push
cmp
cld
mov
int3
or
sbb
mov
dec
hlt
xchg
pop
cmp
mov
std
mov
icebp
int
enter
aaa
loopne
push
lcall
and
adc
add
mov
cmp
int
insl
xor
sub
scas
push
xor
push
adc
jns
push
emms
mov
or
mov
jmp
loopne
push
lret
xchg
scas
in
dec
and
ss
loop
mov
in
addr16
stc
outsl
leave
cmp
mov
inc
jne
xchg
xchg
negb
inc
fdivrl
mov
add
cmp
minps
aad
addb
dec
sar
jmp
test
pop
ds
mov
fs
xchg
sub
push
leave
xchg
or
aaa
xchg
leave
imul
popa
mov
aaa
movsb
xchg
ss
or
or
mov
adc
dec
mov
inc
cmp
fldt
repz
test
push
xchg
test
xor
sub
je
jns
cmpsb
ds
inc
mov
lea
adc
insb
sbb
notl
sahf
clc
shl
out
dec
test
sahf
ror
xor
jnp
ss
pop
mov
inc
data16
cltd
mov
xchg
cwtl
shrl
sub
imul
cmp
adc
mov
pop
jge
jbe
jge
ds
jne
mov
sbb
stc
cmc
test
add
mov
sub
push
shlb
mov
jnp
lds
lahf
sti
add
popf
sahf
jecxz
movsl
sbb
or
cmc
xor
xchg
cli
lcall
cmp
repz
jb
imul
push
fistps
push
lahf
leave
sub
jae
xor
in
test
lods
and
bound
adc
test
leave
sbb
xchg
loop
arpl
lcall
jecxz
mov
gs
inc
pop
cld
pushf
lahf
add
cmc
aad
push
sbb
scas
fistps
test
mov
sbb
imul
fcoms
jb
mov
jl
arpl
xor
stos
ja
add
mov
jge
xor
add
adc
push
aaa
mov
ficomps
pop
lahf
dec
insl
mov
or
xor
notl
mov
xchg
dec
cmc
ja
jmp
sbb
mov
shr
es
outsl
xchg
pop
push
push
adc
xchg
clc
popf
cmp
lds
mov
xchg
mov
lret
dec
iret
cwtl
fisttps
fstpl
or
fnsaves
push
lret
imul
cmp
pusha
pop
adc
inc
push
cltd
stos
lcall
movsb
xchg
sbb
mov
movsb
or
idivb
int3
in
xlat
fcomps
mov
push
ret
in
stos
pop
test
xchg
xor
fsubrp
lret
jae
scas
mov
movsl
scas
loop
bound
and
loop
popa
xor
jns
cld
mov
xor
in
sub
mov
lea
inc
ja
call
test
pop
mov
pop
pop
xor
arpl
pushf
mov
sbb
mov
lret
or
cmp
add
push
aam
repz
repz
inc
adc
jae
insb
rcrb
jno
push
push
mov
aaa
fdivrs
and
nop
pop
sbb
rolb
imul
sbb
add
movsb
lret
cmpsb
xor
or
ja
call
into
pushf
dec
xlat
std
jno
sbb
data16
scas
sbb
push
in
lock
pusha
cmp
js
pop
or
repz
ret
call
jne
popf
mov
push
dec
push
and
fnstenv
push
push
std
xchg
inc
mov
ret
mov
test
cmp
add
popa
mov
xchg
repz
mov
lods
sub
in
push
shl
out
dec
push
sub
out
jecxz
imull
adc
push
popa
aas
fcmove
pop
repnz
mov
test
cmp
out
and
enter
xchg
inc
pop
mov
sbb
xchg
sbb
push
sub
faddl
push
fwait
scas
or
cwtl
push
sbb
repnz
cmp
jb
cmpsb
out
and
lock
psllq
mov
mov
push
in
int3
xchg
insl
jl
jbe
jae
mov
mov
or
and
addl
je
popa
sahf
mov
frstor
aam
mov
sbb
jnp
lret
xor
int3
add
push
cmp
inc
movsl
pop
movsb
lea
mov
out
je
add
loopne
ret
sbb
dec
sarb
daa
sbb
sub
cmp
lret
out
xchg
xchg
jbe
and
mov
ljmp
adc
dec
mov
push
jl
sahf
out
fstpl
test
lcall
dec
loope
scas
xchg
cmp
jle
mov
push
adc
lds
or
adc
mov
cli
xlat
push
add
mov
jb
outsl
fisubs
pop
add
test
ja
and
xchg
sbb
insl
bound
test
pop
mov
mov
stc
and
mov
pop
dec
sbb
push
mov
jle
inc
push
add
dec
and
pop
arpl
adc
mov
xor
dec
hlt
sub
and
add
stos
inc
ljmp
pop
pop
call
dec
push
mov
mov
mov
xchg
push
xlat
jb
xchg
faddl
add
orb
icebp
in
fsubrs
cmpsb
push
mov
ljmp
insb
cmp
mov
inc
mov
shl
and
jp
shr
pop
jbe
ss
bound
inc
xorl
mov
nop
lahf
negb
es
int
xor
orl
mov
mov
popf
jl
sbb
inc
mov
add
dec
mov
aam
adc
je
cli
xor
cmp
pop
push
popa
xchg
andl
pop
cwtl
mov
ret
push
mov
lock
leave
fnstsw
sbb
pop
jae
pop
je
push
and
fbld
int
subb
lods
mov
push
mov
mov
or
sbb
outsb
mov
jecxz
fistpll
les
xchg
push
push
icebp
push
dec
out
dec
das
jp
jecxz
iret
mov
push
cld
xor
mov
loope
scas
cmc
mov
lock
lods
jbe
xor
mov
mov
lahf
test
or
out
test
test
xchg
fwait
je
push
sahf
cwtl
cmc
sbb
arpl
push
xchg
std
jb
and
sarb
cmp
sbb
jmp
test
jge
push
jbe
shl
enter
sbb
cmpsb
xor
scas
or
pop
in
rol
pop
nop
loope
sbb
mov
cmp
fdivrl
addl
data16
aam
movsl
fiadds
push
jns
pop
mov
jb
rep
push
mov
dec
jle
shrb
mov
scas
and
push
divb
sub
mov
test
adc
and
mov
loop
cld
pop
mull
jnp
repz
idivl
xchg
push
div
lret
or
lods
mov
xor
rcr
xor
inc
fcomip
in
cmp
ret
or
push
mov
mov
int3
pop
adc
dec
movsb
or
add
fnstsw
and
mov
mov
xchg
fdivl
xchg
sub
inc
fimuls
jecxz
out
dec
mov
lods
insl
push
mov
cmp
movsl
sahf
ror
loopne
lahf
es
xchg
lret
out
shl
xchg
sub
pop
lea
xchg
ds
push
lea
or
test
mov
mov
inc
insl
mov
sub
mov
out
push
sbb
and
lret
mov
pop
adc
push
add
inc
ds
push
push
add
icebp
mov
or
lret
push
xchg
repz
xchg
lahf
cmc
fcmovne
test
inc
sahf
inc
inc
mov
clc
inc
mov
cld
jg
movsb
push
in
sub
mov
loope
and
xor
mov
inc
inc
xor
xchg
cli
mov
and
ds
mov
or
inc
sbb
push
mov
push
loop
mov
gs
inc
mov
cmp
inc
adc
xchg
les
sub
xchg
cmp
push
stos
insb
dec
hlt
cmp
je
dec
shr
or
push
mov
adc
adc
add
iret
movsl
pop
push
dec
jg
pop
jle
iret
es
or
jg
enter
sahf
sub
cmc
or
mov
dec
pop
jecxz
mov
xchg
jg
and
or
inc
sbb
jno
and
stos
cmpsl
in
ret
les
lcall
mov
fdivrs
in
dec
xor
jae
repnz
and
ret
fcompl
cld
xchg
and
sbb
push
arpl
in
out
cld
test
shl
push
mov
sbb
std
ljmp
push
dec
jbe
insl
inc
and
sbb
test
cmp
cmp
jae
xorb
sbb
movsl
mov
lods
cltd
testl
in
inc
adc
cmp
lock
js
out
inc
inc
sarb
les
out
xchg
aaa
popf
mov
sub
jae
fbstp
pop
push
and
std
rcll
ja
outsl
fs
loope
arpl
daa
add
clc
enter
sahf
into
nop
mov
imulw
mov
pop
inc
pop
cli
mov
mov
imul
mov
pop
and
pop
in
negl
gs
xor
test
mov
jp
out
test
xorb
jg
mov
cmp
stc
aam
sbb
jnp
and
sub
pop
mov
stos
into
sub
mov
rcll
repnz
and
dec
or
movsl
and
jns
xor
aad
je
rcl
cmpsl
sub
test
int
iret
mov
cmp
lahf
sub
sbbl
mov
dec
pushl
inc
rorb
fcoml
icebp
mov
std
pop
add
cltd
shll
notl
out
inc
aam
je
cmc
xorl
or
scas
test
fstl
loop
aas
pop
cltd
enter
jne
out
arpl
mov
decb
mov
in
pop
jl
xchg
mov
into
xrelease
data16
fstpl
je
pop
mov
add
adc
inc
hlt
cld
dec
mov
pop
iret
clc
aam
mov
popa
push
rcrb
jp
out
addr16
loop
push
je
cmp
jnp
enter
fdiv
gs
test
rorl
xor
xor
jmp
adc
iret
repz
fildll
lret
sub
push
popa
gs
jl
jbe
pushf
mov
adc
clc
inc
fisubl
popa
cwtl
stos
insb
insb
xor
mov
xlat
fistpl
pop
xchg
or
int
xlat
add
add
pop
insl
push
fs
pushf
or
inc
sahf
mov
xchg
mov
stos
in
maskmovq
notl
arpl
or
inc
dec
cld
mov
lods
jecxz
lahf
rcll
dec
mov
adc
sub
xchg
std
push
js
sbb
pusha
inc
sbb
mov
pop
xchg
push
and
imul
cmp
xchg
lods
test
xor
mov
movsb
inc
fstp
test
push
sbb
dec
dec
rorl
xchg
es
mov
cs
cmp
add
inc
mov
ret
test
out
cmpsl
xchg
sti
mov
mov
adc
sbb
das
ret
inc
cwtl
mulb
aad
inc
jmp
cmp
ljmp
lds
popa
cs
mov
push
pop
daa
jmp
loop
xchg
cmc
imul
mov
xchg
lret
in
popf
sbb
aam
xchg
sbb
mov
ja
mov
insl
mov
fcoml
mov
cmpsl
sahf
xchg
inc
pop
dec
shrb
lcall
inc
sub
and
mov
xchg
in
cmp
dec
aad
outsb
sbb
xor
jecxz
lret
push
lds
lret
inc
xchg
in
andl
and
outsl
push
dec
push
fs
cmc
sti
lahf
mov
pop
pop
inc
jbe
cmp
or
testb
push
rcr
filds
leave
shl
pop
xlat
dec
jb
imul
jnp
cmc
fisubs
jecxz
mov
jo
xor
sti
pop
ja
xchg
mov
xor
pusha
xchg
int3
add
cmpsb
dec
test
das
mov
ds
push
nop
jo
jmp
outsb
arpl
iret
call
fcmovne
pop
sti
jb
cwtl
mov
xor
mov
inc
les
jnp
xor
in
sarb
repz
xchg
outsl
fisubl
lds
test
loope
push
pop
add
xchg
mov
mov
cmc
aaa
jns
lret
sub
add
imul
cli
push
nop
push
xchg
nop
addl
push
std
xor
lret
rcrl
in
in
xchg
dec
test
mov
in
push
out
mov
push
mov
inc
push
pop
sbb
jnp
aam
enter
adc
pop
pop
sbb
xchg
cmc
fwait
jb
ret
aam
lods
or
dec
cltd
xchg
xor
or
dec
ljmp
les
in
icebp
fcomps
mov
jo
pop
and
icebp
or
mov
inc
cmovge
cmp
cld
pop
stos
mov
dec
into
mov
movsb
xchg
xor
loope
push
push
jbe
jno
mov
popf
inc
orl
xor
push
outsb
mulb
dec
in
enter
sub
or
inc
add
pop
hlt
inc
outsb
sarb
jl
pop
clc
ja
scas
mov
dec
fsubrs
in
add
lea
and
ljmp
scas
repnz
jo
sub
xor
clc
xchg
and
fdivl
sub
lret
pushf
int
call
cmp
mov
cmp
arpl
hlt
das
dec
loope
enter
push
addr16
insb
out
aam
cmp
or
jmp
xor
add
add
dec
or
lods
cld
in
dec
add
fdivs
adc
add
subl
mov
xchg
fwait
inc
add
jge
push
not
dec
or
outsb
mov
cmp
popf
mov
pop
cmp
jnp
mov
das
xor
decb
faddp
adc
cltd
adc
adcl
and
adc
or
test
je
aad
js
mov
popl
cmp
ds
aas
xchg
or
sub
dec
loope
lahf
mov
jp
ljmp
push
jp
into
push
fcomi
fcom
cmp
inc
loopne
pop
cmp
adc
mov
mov
xorb
push
insl
fcompl
xor
add
cmpsb
ja
adc
subb
pop
jns
shl
mov
in
adc
inc
movsb
icebp
xchg
adc
xchg
or
icebp
dec
sbbl
cs
and
clc
fcompl
or
sbb
sbb
fldt
pop
int3
scas
mov
jne
int3
sbb
cli
mov
orl
push
out
push
jo
sub
mov
inc
pop
mov
pop
mov
dec
mov
push
pusha
mov
cmp
loop
pop
mov
mov
or
and
and
fstpt
mov
in
xchg
cmp
sbb
rclb
fnstenv
rorb
sub
ljmp
mov
push
inc
and
cmp
test
cmp
andl
lahf
popf
insl
dec
lods
and
mov
adc
xchg
in
xchg
addl
push
or
iret
lahf
outsb
js
mov
lcall
aad
xor
mov
das
lods
xchg
rolb
cmp
sub
mov
pop
test
inc
mov
fistpll
xchg
lods
in
cli
xor
out
leave
aas
fwait
mov
cld
imul
sbb
mov
add
cmp
push
jge
mov
out
or
sbb
xchg
ja
cltd
je
roll
jle
icebp
xor
lock
pop
cmpsl
leave
cmp
je
mov
lock
shrb
sarl
xor
sbbl
lods
xchg
inc
jle
and
mov
stos
jnp
test
ds
fsts
lgs
jge
adc
mov
sub
sub
loope
inc
pop
mov
push
cld
shll
add
fisubrl
ds
shlb
divl
cmpsl
test
faddl
jnp
xor
jge
sub
repnz
xchg
sub
shll
sti
cmp
jbe
insl
dec
pop
sbbb
hlt
cmc
fisttpl
loop
fwait
adc
push
xlat
push
rcl
movsb
testl
push
push
jmp
and
pop
negb
inc
clc
inc
or
mov
aad
aam
and
pop
in
mov
add
popf
ret
stc
and
shll
mov
push
mov
mov
cmp
push
jbe
inc
mov
sbb
pushf
push
dec
adc
test
pop
fidivrl
insl
dec
xor
gs
scas
cmp
adc
adc
mov
adc
and
lea
ret
inc
loope
mov
movsl
xor
mov
lods
push
testb
insl
mov
arpl
cmp
js
iret
cwtl
xchg
xchg
cmp
lcall
sbb
shll
mov
push
test
fildll
inc
xchg
inc
cmp
rorl
int3
test
in
sti
sub
push
sbb
fldt
jl
xor
xor
mov
loop
mov
inc
inc
sub
and
add
pop
movsb
testb
and
jnp
sar
xor
out
fwait
xchg
fiadds
add
lret
pop
out
or
mov
or
mov
cmp
mov
pop
sub
push
ds
cmp
adc
inc
sbb
outsb
fnstcw
mov
clc
xor
and
sbb
jmp
mul
xchg
mov
xor
sbb
add
mov
outsb
mov
sbb
inc
loope
dec
xchg
mov
cltd
out
cmp
mov
cmp
and
jl
fidivl
arpl
inc
mov
rcrb
sbbl
jnp
mov
dec
push
je
lock
inc
mov
or
sub
xchg
pusha
loop
push
fbstp
adc
pop
fs
inc
test
add
scas
dec
jp
or
jnp
test
mov
dec
iret
and
xchg
inc
lahf
mov
xor
jns
je
push
and
in
popa
ret
push
push
cli
or
push
mov
call
push
imul
lock
hlt
test
add
pop
xchg
test
mov
inc
add
inc
rorb
push
adc
fcomps
scas
call
mov
dec
cs
pop
int
sbb
dec
jnp
xor
xchg
or
push
insl
jg
lods
add
es
shrb
movsb
jl
shll
jae
sbb
pop
mov
add
xchg
jno
add
cmp
lea
mov
inc
mov
mov
cmp
cmp
push
cmp
ret
ret
cmp
adc
and
or
iret
fiadds
ds
xchg
ss
rcrb
xor
inc
jmp
jl
jp
loop
xchg
dec
loopne
stos
aas
cmc
push
dec
iret
jns
stc
mov
dec
sub
in
je
call
jne
push
mov
adc
jmp
ja
inc
jecxz
arpl
mov
push
mov
test
ds
jnp
add
pop
clc
imul
cs
jo
mov
xchg
dec
loop
pop
mov
sbb
sub
cmp
inc
and
mov
inc
pusha
lahf
sarb
enter
or
mov
iret
out
inc
js
cld
xchg
sbb
in
mov
add
int
jnp
ljmp
in
sub
mov
hlt
pop
jmp
xchg
outsl
xchg
jp
and
sbb
mov
fnstcw
mov
faddl
push
cmp
xchg
in
shlb
out
out
and
adc
pop
shlb
lods
inc
jmp
mov
mov
bound
sub
popf
lock
lret
repnz
pop
push
aam
or
cs
inc
mov
jge
mov
lcall
sbb
icebp
int
shl
sbb
push
inc
cmp
aaa
cli
cs
sub
pop
push
call
addr16
sub
dec
enter
imul
out
ja
push
pushf
inc
rolb
mov
add
fidivrl
in
lcall
out
mov
lcall
dec
test
cmp
mov
ljmp
mov
call
pushf
mov
and
imul
dec
and
fs
pop
std
aam
sub
sbb
lock
sbbl
outsb
aaa
shl
fs
push
xor
insl
andb
popa
adc
xor
dec
mov
ljmp
lds
shlb
sar
mov
pusha
dec
nop
xchg
int3
adc
aas
vphaddubw
dec
dec
dec
fstpt
jl
mov
lods
jno
icebp
in
sbb
or
lahf
in
mov
push
push
ret
mov
pop
or
push
loopne
fldenv
sbb
arpl
dec
sub
adc
push
icebp
mov
js
out
addl
xchg
aad
xchg
sbbb
lahf
lret
sahf
imul
pop
sbb
jns
sub
cltd
xchg
adc
into
test
popf
xor
add
shlb
jmp
push
adc
sub
mull
or
mov
jbe
cmp
inc
dec
cmp
or
and
shr
ja
rol
into
scas
sub
jmp
cmp
or
mov
sti
mov
movsl
push
mov
add
lea
add
xchg
sub
sbb
popf
xchg
hlt
add
insl
add
dec
xor
call
cmpsl
dec
push
pop
nop
xorl
pop
je
arpl
lret
popf
and
divl
sbb
mov
add
jne
in
out
popl
stos
icebp
mov
jbe
pop
mov
imul
call
cld
cmp
loope
repnz
mov
cmc
or
test
mov
out
or
sar
push
xor
xor
xchg
gs
std
sub
xor
add
pop
test
adc
xor
fdivl
icebp
and
arpl
push
stos
out
adc
mov
add
xchg
out
cmp
out
scas
sbb
mov
and
and
mov
pop
jnp
imul
inc
push
rorb
dec
xorl
loop
sub
cltd
xor
je
cs
mov
aaa
mov
inc
pop
fcmovu
push
lret
inc
xlat
daa
mov
pop
mov
adc
sbb
push
cmpsl
rcl
add
jle
jge
out
or
mov
push
add
inc
mov
inc
xchg
xor
and
pop
call
in
fldt
xchg
sub
sahf
or
pop
fiaddl
mul
pop
inc
leave
jno
iret
xchg
or
and
arpl
mov
cmc
mov
popa
in
ds
rcll
add
lcall
decb
adcl
imul
push
lods
test
push
jb
lds
mov
cmp
add
push
mov
xchg
xor
fistpll
jo
imul
outsb
mov
mov
xor
fnstcw
bound
cmp
add
out
lret
lcall
mov
mov
jbe
sbb
mov
mov
enter
lock
cwtl
pop
out
js
pop
xor
repnz
and
imul
sub
fwait
lcall
aam
sub
push
xchg
mov
enter
jb
xchg
inc
aaa
push
clc
outsb
mov
decl
popf
add
pop
movsb
cwtl
sbb
rorb
jno
xor
repnz
dec
jmp
and
fistpll
mov
adc
fistpl
arpl
xchg
add
mov
cld
aaa
outsl
push
into
repz
insb
fstps
loop
cmp
xchg
leave
xor
mov
jg
inc
sbb
sbb
pop
mov
adcb
jp
pop
testb
aas
lods
add
mov
lods
rclb
or
inc
aas
inc
jl
outsb
lods
jbe
mov
push
sbb
es
ret
xor
aaa
lcall
test
sbb
movsb
add
adc
cmp
jp
mov
and
scas
lea
pop
sbb
add
roll
nop
shll
cld
mov
cmp
inc
or
aam
push
lahf
inc
fxch
sub
ja
test
lcall
rcrl
pand
psubq
mov
jecxz
jmp
loope
push
cwtl
cmp
rcll
jne
mov
jmp
fsts
pop
fwait
cmpsb
add
adcl
bound
inc
add
jmp
jae
out
rol
leave
adc
sahf
movsb
test
adc
cs
in
aaa
jle
rcrl
gs
out
pop
fs
lds
dec
jmp
jmp
add
addr16
mov
pop
mov
jns
ficomps
xchg
add
fdivr
push
jp
in
sbb
adc
push
dec
daa
cli
nop
insl
xchg
in
hlt
jle
addr16
pop
cmpsb
jl
or
jp
rcrb
fwait
xor
popa
cmp
imul
adc
nop
dec
xor
sbbl
mov
and
add
push
repz
stos
out
iret
or
jno
mov
adc
aas
das
loop
pop
pop
jg
cmpsb
out
rclb
sbb
dec
sbb
sub
mov
push
dec
xor
mov
test
add
jns
js
dec
cmp
ds
jae
repz
mov
sbbb
out
lret
jecxz
scas
adc
lcall
ljmp
jl
cmp
pop
xor
add
ljmp
jne
cmp
fsts
jbe
outsl
outsb
xchg
ret
jae
push
mov
frstor
add
dec
mov
mov
adc
cmp
cmp
pop
xchg
cs
push
ffree
mov
test
lds
out
sbb
lods
push
jle
pop
push
jo
adc
add
pop
mov
aam
jne
jge
cmp
xor
mov
xor
clc
adc
dec
jmp
aad
mov
shufps
sbb
out
mov
enter
dec
mov
or
and
mov
pop
outsl
testb
fcmovnu
pop
imul
int3
pushf
cmc
das
xor
jp
call
mov
adc
mov
loopne
inc
sbb
mov
ficoms
inc
insb
ds
loopne
negl
dec
cmpsb
mov
push
sbb
call
movsb
mov
sub
add
or
insb
stc
mov
rcrb
mov
dec
dec
jle
push
and
adc
insb
adc
pop
stc
daa
nop
dec
mov
jge
nop
xchg
lods
pop
cmp
xorl
mov
cmp
loope
fildl
jp
inc
aad
jp
dec
daa
adc
mov
dec
mov
insb
int3
adc
push
or
out
xchg
insb
lea
jle
fcoml
cmp
in
ja
repz
mov
adc
push
or
pop
imul
or
push
mov
mov
mov
movsl
dec
or
aam
cmpsl
pop
push
xchg
aas
xchg
xor
push
sbbb
aas
inc
cld
mov
jmp
mov
mov
add
ret
subb
inc
fistps
or
pop
test
inc
push
push
lea
dec
cltd
adc
lods
daa
push
into
popa
xchg
ljmp
in
mov
sbb
mov
adc
pop
xorl
pop
fiadds
shrl
mov
mov
out
das
pop
cmpl
xor
shlb
lcall
sbbl
test
std
sbb
shlb
test
or
mov
icebp
mov
div
mov
imul
mov
pop
mov
inc
cld
and
fisttps
mov
mov
mov
and
xchg
popa
push
mov
mov
movsb
lret
sbb
jmp
mov
dec
jnp
scas
fists
mov
clc
jnp
jne
inc
test
lods
cmp
mov
add
mov
inc
les
aaa
xor
lcall
and
jo
push
lods
cmp
nop
mov
cmp
dec
lods
sub
mov
jo
push
mov
cmp
stos
lock
mov
out
icebp
lahf
je
dec
rorb
shll
add
or
jb
lcall
dec
mov
fucomi
out
lock
nop
jp
cmp
mov
pop
sub
gs
cmp
cmp
bound
push
nop
fidivs
mov
aas
movsl
stos
adc
xchg
sub
pop
mov
clc
mov
in
ret
add
icebp
push
push
or
imul
sbb
mov
int3
or
mov
push
xchg
int3
sub
xchg
pop
aam
fmull
push
adc
scas
loope
int3
and
aam
jmp
cwtl
in
movl
push
or
push
lea
dec
sbb
daa
and
movsl
push
outsl
aas
ljmp
mov
cmp
or
adc
dec
arpl
xor
xor
inc
test
cmp
scas
cli
sbb
icebp
dec
add
in
add
push
ja
dec
mov
repnz
xchg
fcoml
mov
push
xor
fnstenv
out
xor
mov
and
dec
mov
lods
nop
movsb
cltd
cmp
add
sbb
push
leave
fildll
fidivrs
repnz
mov
sti
add
xlat
or
jne
mov
aaa
jg
pusha
stos
cltd
movsb
sub
repnz
call
add
sub
inc
stos
inc
iret
sahf
xchg
shrb
mov
mov
lahf
xor
jae
daa
mov
pop
jae
adc
in
ret
popf
xchg
shlb
and
neg
sbb
add
aad
aam
rcll
jg
cmp
movsl
popa
xchg
xor
lret
pop
add
adc
loopne
out
pop
push
test
mov
xchg
dec
mov
mov
jb
movsb
or
lods
push
ficomps
cmpsl
stc
aad
or
cwtl
data16
insl
sbb
xchg
insb
mov
and
add
and
aaa
stos
inc
out
mov
xchg
inc
test
push
cmp
sbb
and
out
mov
or
and
xor
mov
addl
int
pushf
es
repz
sub
mov
insb
ljmp
orl
sub
cmp
std
sub
stos
mov
xchg
xor
mov
inc
outsl
sub
cmp
js
aaa
es
add
fidivrs
popa
mov
push
js
jp
jecxz
shlb
and
fcompl
icebp
add
cltd
das
fcompl
mov
sbb
mov
test
push
push
mov
fldenv
push
in
sbb
jno
fs
fnsave
lahf
fistps
add
jge
push
push
imul
push
or
test
aaa
mov
jl
stos
cmpsl
inc
lods
pop
out
in
addr16
cmp
push
subl
cs
cmp
inc
push
data16
addr16
dec
sbb
aaa
dec
daa
subl
jl
mov
aas
leave
outsb
dec
or
or
test
jle
enter
or
ljmp
and
or
popf
je
dec
push
sub
aaa
push
push
jg
stos
outsb
jg
lret
fdivrl
aam
sahf
or
push
adc
jmp
popa
in
rcr
cmpsb
xchg
add
push
push
pushf
push
push
test
add
adc
or
dec
rorl
mov
pushf
mov
clc
sbb
inc
xchg
pop
add
ja
add
adc
nop
cmp
andl
mov
cmp
mov
sub
aam
int3
dec
cmp
sbb
mov
mov
add
adc
xlat
out
inc
xor
mov
inc
cmp
push
or
jno
shlb
mov
mov
mov
notl
stos
test
dec
pop
dec
or
sub
cs
or
inc
and
sub
or
jnp
clc
xchg
mov
inc
fists
jl
and
or
push
bound
xchg
popf
add
aaa
sbb
test
dec
cmp
jb
xor
stos
dec
add
or
cmp
xchg
mov
lret
stos
sbb
push
repz
bound
hlt
push
cmpb
enter
int
mov
iret
add
jp
sti
mov
cmp
jle
fst
arpl
test
mov
ficoml
add
pop
popl
les
clc
lods
push
ret
mov
sahf
lods
lcall
bound
movsb
lahf
dec
out
lock
test
xor
sub
mov
int
mov
shlb
mov
scas
dec
sbb
cmpsb
sbb
jp
xorb
adc
add
fistl
fwait
sub
lock
push
jbe
fnstenv
jge
aad
sub
push
iret
dec
cmp
add
ret
movsb
cmpsb
and
jno
test
mov
cmp
mov
push
and
lods
scas
pop
adc
mov
inc
inc
jp
cld
push
dec
mov
cwtl
cmpsl
adc
cli
sbb
jno
mov
out
jmp
or
sub
aam
cs
fbstp
pop
pop
xor
imul
jmp
jecxz
ret
push
lcall
lcall
inc
xchg
pop
jl
gs
cs
cmpsb
mov
push
xor
gs
push
shrb
out
dec
inc
pop
mov
adc
aam
push
icebp
jecxz
cmpsb
ja
dec
and
adc
iret
movsb
aad
into
sti
imull
lea
rolb
mov
mov
aam
scas
ja
cmpl
mov
jl
or
les
xor
add
push
aam
cmp
insl
daa
pushf
int
sub
xor
cmp
and
mov
xchg
pop
scas
pop
out
pop
inc
fidivrl
bound
xchg
or
ss
mov
lea
lods
adc
movsl
add
daa
pop
push
and
xor
pop
push
jo
cmpsl
and
pusha
outsl
cmpsl
xor
negb
test
mov
ret
mov
dec
mov
dec
and
call
mov
jmp
test
inc
insb
adc
insb
orb
jge
cmp
jmp
fcmovnbe
cli
sbb
cmp
daa
push
sahf
ja
out
sub
jecxz
mov
mov
cs
jb
sbb
insl
shll
xor
mov
leave
xchg
rolb
cmp
stc
mov
ljmp
push
imul
lock
in
mov
cwtl
es
mov
jmp
xor
push
movsb
or
leave
xor
mov
lds
push
shll
push
sbb
repnz
mov
xor
shrl
cmpsl
out
ficoml
icebp
ss
cltd
ficomps
and
xchg
psubsw
xchg
pushl
jno
pusha
pusha
sub
popf
or
adc
and
pop
add
stc
xchg
mov
xchg
sub
jmp
aaa
inc
mov
inc
and
movsl
ds
xchg
cmp
les
daa
jne
cmp
jmp
push
or
imul
mov
loop
shll
sub
mov
xchg
fucomi
lcall
scas
leave
ret
bound
dec
shlb
daa
cmpsb
pop
mov
in
inc
inc
pop
notb
cmc
cmc
mov
fwait
rcll
int
loopne
fisttpl
mov
mov
ret
sti
mov
sbb
js
jae
addr16
mov
daa
mov
mov
sub
jl
sbb
out
xchg
and
fists
imul
xchg
lock
cli
sub
add
adc
inc
shl
scas
and
jns
add
xchg
sub
sub
jg
push
and
inc
mov
movsl
sub
or
inc
mov
mov
cltd
sub
sub
xchg
movsb
push
js
ljmp
mov
add
xchg
add
add
and
outsb
divl
xor
jge
mov
mov
jbe
mov
lods
xchg
or
stos
mov
mov
pop
shl
pop
and
cwtl
mov
adc
sbb
xchg
notb
adc
sub
lods
popa
js
inc
cmc
cli
jge
push
mov
in
sub
in
mov
lods
fsubl
pop
adc
cmpsb
sti
test
dec
sbb
rorl
fisubl
in
outsb
ljmp
jbe
scas
jg
andl
les
in
cmp
popf
sub
mov
mov
outsl
dec
inc
push
push
and
adc
inc
ljmp
cli
scas
inc
mov
jp
dec
scas
leave
dec
insb
push
test
sbb
inc
je
adc
cltd
bound
push
lock
xorb
cmc
inc
inc
in
addb
mov
outsb
mov
out
inc
je
gs
mov
sub
cmp
xchg
push
lahf
repnz
scas
inc
scas
xlat
adc
pushf
stos
cmpsl
popa
aam
ret
negb
jg
fiaddl
aad
jae
andl
je
xlat
test
mov
dec
sbb
js
push
mov
and
sub
outsl
push
dec
fs
pop
insl
cli
xor
adc
sbb
imul
and
cmp
daa
jb
movl
adc
cmc
xor
fs
jnp
sub
mov
mov
dec
adc
xor
jecxz
and
fidivs
lock
adc
push
repz
stc
lds
push
fldl
jae
pop
and
push
dec
mov
cmpsb
ds
cmp
addr16
adc
sbb
adc
aam
aam
add
icebp
cltd
pop
call
popf
fbld
pop
fmuls
lods
jmp
orl
inc
bound
test
imul
pop
mov
inc
ss
sub
mov
cmovp
fisubl
sbbb
mov
xor
mov
in
jmp
mov
loope
cmp
mov
xor
fbstp
mov
rorb
xchg
popl
loope
push
adc
push
out
bound
xor
imul
into
imul
out
xchg
or
push
loop
dec
xchg
inc
adc
clc
sub
pop
cmp
xchg
leave
lret
ds
sbb
lcall
dec
push
lahf
fiaddl
bound
shll
pop
fsubp
mov
pop
mov
xrelease
ja
test
mov
in
and
jnp
sbb
pusha
jnp
dec
pop
fs
or
in
or
lods
das
call
sub
push
adc
insl
in
sbb
or
or
adc
cs
leave
dec
sub
pop
push
inc
imul
lods
imul
rclb
nop
sbb
rclb
out
add
in
cmp
js
scas
aad
lcall
mov
fldl
dec
fsubl
dec
ss
push
ja
ja
mov
mov
add
fstl
stos
adc
jmp
mov
dec
shlb
push
mov
mov
repz
pop
subl
pop
sub
divl
pushf
cmp
or
int
stos
and
icebp
xchg
rol
mov
cmp
pop
sbb
adc
xor
pop
test
cmp
icebp
movsb
aam
sub
jne
into
repz
xor
push
mov
xchg
ret
cwtl
xchg
pop
jo
out
pop
rol
in
out
mov
jle
adcl
adc
jnp
or
adc
pop
mov
add
stos
aaa
sarl
cmpsl
mov
xchg
pop
xchg
and
ljmp
ja
mov
and
ja
mov
and
repnz
sti
dec
das
js
or
lods
xorb
mov
cmpsb
pop
outsb
adc
out
jae
pop
out
xor
es
adc
lds
adc
add
mov
stos
push
add
xchg
cmp
addr16
and
clc
jne
cmpsl
loopne
cmpsl
pushf
ss
adc
inc
leave
aam
or
and
filds
pop
sbb
push
loope
jne
jae
fbstp
lret
popa
aaa
popf
cmp
jp
std
mov
jno
jno
int3
add
cmp
js
ss
jo
pop
or
jnp
fwait
xor
fwait
xchg
mov
jnp
mov
aad
aas
or
cmp
nop
std
inc
lahf
add
stc
add
add
movsb
pop
call
jmp
inc
pop
repnz
aad
je
xchg
adc
mov
pop
ret
adc
jg
xchg
adc
mov
mov
iret
daa
xchg
fisttpll
jns
sub
fwait
loope
scas
int
lods
cmp
movsb
mov
push
call
fwait
xchg
push
cmp
clc
repnz
repz
js
xor
addr16
cmc
arpl
repnz
sbb
aaa
sbb
in
fs
jle
pop
pop
int
imul
inc
jno
int
jl
sbb
adc
idivl
das
outsl
imul
jmp
pop
cmpsb
jmp
mov
cmpsl
pop
or
pop
mov
scas
lock
add
cld
mov
adc
pusha
jl
pushf
scas
jb
fldcw
pop
clc
xor
sbb
pop
test
arpl
dec
cli
xor
sbb
repnz
push
or
outsb
mov
jne
aam
fbstp
loope
or
cmp
mov
lret
sub
jmp
rcrb
cli
dec
adc
jnp
mov
mov
and
jno
mov
jno
mov
ss
xlat
sarl
out
xor
shr
test
mov
movsl
mov
pop
jge
outsb
pop
sbb
shlb
fs
mov
push
imulb
xorb
mov
bound
mov
imul
or
insl
ds
push
xchg
roll
push
xchg
mov
jns
xchg
xchg
xchg
dec
add
or
addps
out
push
or
sarl
fwait
mov
sbb
push
xor
push
cmp
jecxz
mov
jmp
sub
mov
adc
enter
pop
mov
int3
sub
pop
test
add
aam
or
mov
sub
or
mov
push
xchg
pop
testl
and
popf
cld
mov
pop
fwait
or
out
sbb
ds
push
and
push
cmp
xchg
daa
jbe
sub
sbb
bound
addl
jns
mov
jo
loop
movl
in
mov
cld
jmp
inc
push
pusha
push
mov
adc
cmp
mov
filds
lock
push
leave
push
xor
rcll
test
add
clc
addr16
adc
sbb
inc
lret
xor
xchg
and
std
mov
pop
out
push
inc
icebp
push
adc
jo
js
flds
jmp
xchg
cmp
dec
leave
xor
lret
iret
add
sbb
add
xchg
sub
xor
dec
sbb
imul
out
or
adc
ja
dec
lea
push
inc
mov
popf
adc
in
cmp
lahf
out
aad
pop
or
stc
arpl
pop
xor
insl
fisubrs
scas
xchg
adc
mov
push
xor
in
and
pop
xchg
movsl
or
mov
pop
inc
xor
xchg
cmpsb
add
push
cmp
dec
jl
sbbb
lods
and
mov
xor
leave
push
xchg
dec
mov
jecxz
js
inc
inc
cmpsl
scas
mov
add
adc
les
and
nop
cli
mov
mov
xor
neg
int
dec
push
push
mov
ja
sub
into
dec
dec
fsin
fnsave
insl
mov
mov
xchg
ss
aad
dec
idiv
xchg
cli
fld
in
sbb
stos
imul
out
pop
pop
jmp
xchg
mov
je
dec
adc
xor
sbb
cli
or
imul
mov
ret
sarb
inc
aam
lods
sbb
scas
lahf
das
adc
repz
sub
popa
std
ficomps
cmp
fimull
dec
popa
sbb
sti
sbb
daa
sub
js
push
mov
push
mov
jecxz
or
xchg
ds
inc
jecxz
cmp
inc
dec
pop
xor
andb
mov
mov
mov
jp
cltd
xchg
imul
sbb
aad
add
cmpsb
outsb
jg
pop
fld
cld
push
lods
aam
mov
adc
icebp
mov
movsl
sub
sbb
repnz
push
mov
jecxz
dec
inc
mov
subb
pushf
test
arpl
mov
dec
adc
jmp
call
in
insl
or
lods
icebp
lds
lret
jle
das
mov
jg
inc
xchg
pop
rclb
sbb
lret
mov
pop
loope
lods
pop
stc
loope
lcall
pusha
push
cwtl
pop
mov
rcrb
inc
stos
mov
mov
pop
cltd
dec
push
inc
test
ljmp
fs
aaa
rorl
mov
mov
fldcw
or
aaa
in
nop
lock
sbb
or
gs
js
mov
iret
lock
sbb
inc
aam
dec
dec
mov
jp
pop
insb
jno
add
mov
popa
lahf
outsb
sbb
icebp
loopne
aad
mov
jl
cltd
fs
jne
icebp
jl
xchg
leave
pusha
pop
push
cmpsb
cmp
rol
mov
int3
fnstsw
or
cwtl
add
pop
inc
xor
int3
lret
shr
imul
cmp
and
pop
loop
je
fwait
loop
dec
mov
add
stos
imul
or
adc
insb
cld
sub
xchg
add
push
mov
imul
mov
mov
inc
icebp
mov
xor
cmpsb
add
inc
and
push
loope
adc
pop
rorb
add
cld
int
adc
movsb
lods
sar
cmc
cltd
mov
mov
negb
bound
ret
push
fldcw
add
fs
int
loop
test
sub
clc
jns
xor
push
adc
sbb
sti
incl
leave
adc
pop
ror
fcompl
push
test
std
insl
cmc
add
or
scas
sti
pop
stos
mov
adc
int3
mov
mov
jmp
inc
scas
es
cs
xchg
mov
and
insl
cmpsl
daa
cmp
adc
aam
and
and
inc
testl
insb
jne
arpl
push
xchg
sub
jg
dec
mov
adc
icebp
push
adc
ja
sbb
inc
push
mov
mov
pop
mov
jns
xor
mov
push
dec
mov
imul
movb
sub
xor
orb
ficoms
mov
icebp
inc
or
jae
xor
mov
shlb
jae
cmpsb
pop
outsb
push
and
jmp
mov
cmp
xor
cltd
orl
mov
cld
jmp
or
jne
inc
cmp
mov
pop
jb
aam
popa
dec
push
clc
lods
xchg
aad
jl
es
mov
jne
pop
fmull
cmpsl
push
fs
mov
pushf
mov
mov
jnp
xor
in
push
adc
test
out
add
push
test
mov
adc
push
or
mov
inc
fisubrs
iret
cmp
lods
aam
push
xchg
add
int3
icebp
sbb
xchg
and
out
and
andnps
in
in
push
and
inc
in
or
es
sbb
in
sub
cmp
mov
add
je
xor
xchg
jae
in
push
sar
jns
arpl
pop
dec
jg
cmc
bound
dec
or
push
lds
stos
mov
ja
xor
lret
pop
sbb
push
mov
clc
xchg
mov
std
jl
test
cmp
out
xchg
imul
sbb
push
fidivs
mov
jecxz
mov
in
dec
sbb
mov
enterw
fistpl
mov
mov
mov
adc
out
xlat
sti
popa
lret
push
fmull
mov
scas
adc
adcl
mov
jmp
loop
push
inc
xchg
mov
cs
push
jl
je
pop
mov
sub
xor
sbb
mulb
cmc
hlt
adcl
data16
into
insb
xchg
adc
insb
outsb
mov
cmp
rorl
push
sub
sub
push
shll
pop
sub
push
call
sub
je
outsl
adc
pop
shll
sbb
out
sbb
daa
mov
into
jnp
nop
test
sbb
pop
outsb
cwtl
pop
sbb
arpl
pop
sbb
mov
scas
jecxz
push
fistpll
sub
cwtl
inc
mov
in
clc
test
jecxz
push
ret
stos
mov
sbb
lcall
xor
shrb
leave
push
in
fistpll
loop
les
xlat
ss
mov
and
cmpsb
gs
fdivrl
in
mov
out
sahf
orb
das
mov
lret
lahf
push
and
cmp
cmp
push
lret
pop
dec
int3
mov
fnstenv
jo
aaa
movsl
int
adc
in
repz
xchg
push
inc
or
test
push
pop
clc
xorb
dec
add
shll
sbb
inc
adcb
out
dec
cwtl
dec
je
mov
mov
push
aaa
inc
jp
pop
or
and
stos
or
scas
xor
pop
add
mov
rorb
push
imul
pop
pushf
add
imul
cmc
repz
call
in
sbb
adc
mov
push
jp
pop
sub
mov
inc
sub
cmp
cmp
pop
or
dec
pop
loope
or
jns
mov
inc
xor
and
mov
push
popaw
adc
push
inc
cmp
xor
and
test
repz
jne
mov
and
in
pop
mov
add
sub
mov
xor
inc
adc
mov
mov
cmp
pop
push
jbe
xor
notb
mov
mov
and
or
mov
push
jecxz
push
push
sarl
in
sub
insb
xchg
daa
out
inc
jns
dec
out
push
sbb
dec
mov
or
repnz
dec
test
sti
daa
cmp
popa
mov
adc
inc
shr
push
imul
fwait
shld
inc
daa
inc
daa
xchg
push
or
xchg
aaa
ret
orl
and
pop
jb
ret
pop
test
sub
andb
push
pop
adc
pop
adc
inc
imul
mov
enter
rolb
ja
lods
fistps
inc
adc
push
inc
and
cltd
imul
cmp
pop
data16
push
cmpsl
jo
imul
mov
mov
xlat
mov
scas
adc
std
push
add
dec
or
push
pop
scas
mov
dec
mov
sub
adc
mov
fidivrs
mov
cli
push
mov
cmp
out
sub
std
sub
mov
or
cld
adc
aas
add
imul
and
pop
push
lea
decb
dec
xor
mov
fdivr
add
scas
cmpsl
xor
leave
jecxz
notl
push
and
push
jecxz
test
cmp
mov
xor
and
cmp
out
mov
add
pop
mov
fmuls
popl
xor
ret
mov
sbb
inc
inc
stos
sub
mov
es
into
notb
jmp
xor
ds
pop
mov
loop
ja
or
mov
aad
iret
loop
int
xor
into
cmp
adc
stc
test
mov
sti
dec
lcall
clc
add
pop
pop
loop
push
dec
js
xor
xchg
and
scas
sbbb
aad
xchg
insb
mov
mov
push
arpl
ljmp
pop
repnz
fidivl
jns
rcrl
pop
xchg
mov
mov
jno
cmp
dec
ret
adc
rclb
jbe
leave
add
cmp
add
or
mov
jp
sub
mov
pop
or
ret
in
push
adc
sbb
jno
int
mov
push
scas
stc
sub
mov
push
cmp
js
icebp
lahf
sub
mov
lock
adc
mov
push
jne
sub
jo
xor
mov
mov
sbb
add
test
xchg
and
iret
adc
mov
ucomiss
and
nop
lea
mov
push
inc
jmp
lods
pusha
inc
cmp
test
cmp
jae
test
cld
add
inc
adc
shl
stos
xchg
arpl
ret
add
dec
push
insb
std
popw
mov
test
sbb
imul
aad
sahf
jnp
ror
test
cmp
cmp
lods
jmp
insb
sahf
daa
jg
add
push
xor
mov
addr16
inc
lods
adc
pop
clc
cmp
push
adc
movsb
lret
push
gs
cld
xor
sub
push
add
dec
adc
dec
lret
rcl
cwtl
sbb
movsl
cmp
movsb
repz
xor
sahf
add
test
scas
mov
xor
jnp
cmp
sbb
stos
pop
and
fiaddl
or
xchg
mov
imull
dec
inc
xor
jge
or
test
dec
push
pushf
adc
orb
ja
loope
push
outsb
jp
mov
sbb
in
sub
cmpsb
testl
les
add
adc
dec
and
xor
lahf
dec
pop
fdivrl
in
ss
stos
or
popf
ja
xlat
adc
jno
mov
push
mov
stos
stc
mov
pop
xor
scas
divl
mov
mov
add
js
je
and
cmp
int
mov
cli
cmpsb
loopne
add
jmp
dec
adc
dec
sbb
mov
enter
xorl
imul
fs
repz
jmp
or
mov
sub
add
arpl
sbb
inc
lret
ret
mov
mov
push
lock
xor
mov
inc
data16
sub
cmpsb
or
fsubl
gs
adc
and
xor
pop
jl
mov
jb
cmpsl
subb
jb
jecxz
add
fdivs
push
fnstsw
jne
adc
in
dec
les
or
ja,pt
and
dec
push
ja
inc
dec
gs
add
icebp
adc
xchg
lods
push
mov
jo
daa
int3
aaa
std
xor
push
lds
dec
pusha
jnp
inc
jo
inc
stc
movsb
push
loop
pop
push
lret
push
movsb
sahf
push
and
ret
xor
pop
cmpsl
fstl
mov
nop
dec
cltd
mov
loope
cld
xchg
xchg
andb
cmc
fldcw
cs
repnz
jae
test
mov
sub
add
leave
int
pop
jmp
push
shll
movsl
popf
loope
int3
add
add
stc
sub
aam
pop
push
cmp
aas
rol
push
pop
imul
and
mov
enter
hlt
jno
dec
xlat
cltd
mov
insb
inc
xchg
push
mov
js
popa
rorb
cmp
and
data16
inc
adc
fnsave
pop
xlat
adc
pop
popa
or
cmp
xchg
mov
and
movsl
push
inc
int3
xlat
cwtl
sahf
pop
cmp
shr
push
cmpsb
ficomps
push
repnz
out
fadd
out
cli
cli
cmp
jb
jmp
stc
sbb
lods
popl
fadd
jmp
mov
push
and
lds
push
inc
cmp
imul
aaa
das
add
mov
jg
in
jb
xor
jl
pop
repz
std
sbb
aad
sbb
rclb
popa
mov
