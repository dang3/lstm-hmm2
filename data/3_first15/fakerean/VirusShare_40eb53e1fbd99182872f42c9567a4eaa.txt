add
nop
mov
test
je
mov
push
mov
mov
mov
mov
mov
sbb
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
mov
mov
mov
mov
mov
mov
outsl
loope
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
add
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
xlat
inc
add
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
ljmp
add
pop
je
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
sub
inc
add
ret
add
call
call
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
lcall
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
sbb
inc
add
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
fcmove
inc
add
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
movsb
out
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
scas
leave
inc
add
add
inc
jp
add
or
inc
add
fidivrl
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
pop
aad
add
add
cmpl
jecxz
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
pop
enter
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
pop
roll
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
out
inc
add
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
mov
add
push
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
and
inc
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
xchg
out
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
out
inc
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
pop
and
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
cmp
call
mov
lret
add
popf
add
mov
add
jb
jge
xchg
jmp
test
add
add
add
xchg
add
roll
add
pop
add
cmpsb
add
mov
add
add
add
add
hlt
add
aad
push
mov
add
push
push
lea
push
call
push
imul
frstor
jbe
test
add
scas
push
xchg
mov
add
add
test
add
gs
jns
jl
mov
push
add
ljmp
jbe
xchg
mov
add
lret
add
jecxz
mov
in
clc
lcall
inc
in
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
jae
add
add
jmp
out
jp
pop
out
pop
add
mov
add
ja
xchg
add
add
les
les
pusha
push
mov
add
ret
mov
loopne
mov
roll
subl
movsb
add
add
lcall
push
push
push
push
push
lea
push
push
push
call
add
xchg
pop
add
xchg
jle
add
add
int
filds
push
into
mov
vpshufb
cmpsw
push
addb
cmpb
add
add
in
add
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
jecxz
std
xchg
pop
outsl
add
filds
add
mov
add
add
add
add
mov
leave
enter
push
add
xchg
scas
movsl
pusha
xchg
movl
cmpsl
mov
jae
fmulp
xchg
add
mov
sub
pop
push
call
push
push
push
push
push
push
push
push
call
push
add
add
mov
faddl
mov
addl
add
enter
lea
add
add
out
add
add
mov
mov
roll
sub
pop
call
push
push
push
push
push
push
lea
push
call
fmull
imul
push
add
add
add
add
push
add
add
cwtl
add
out
loop
add
fldcw
pop
int
mov
pop
add
je
loope
add
add
add
jae
add
push
push
lea
push
push
call
faddl
loop
decb
pop
add
nop
xchg
cmc
repnz
out
hlt
add
jnp
nop
jp
add
pushf
jno
sub
pop
jmp
push
push
push
push
lea
push
lea
push
push
call
add
add
cmc
jns
push
add
add
add
lea
mov
add
movl
data16
push
jle
add
pop
add
ja
mov
jnp
add
movsl
rclb
add
lcall
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
int
fs
add
push
leave
mov
add
add
gs
add
add
ja
jge
mov
jbe
mov
add
mov
xchg
ja
pop
loopne
out
loope
in
fdivr
lcall
inc
hlt
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
hlt
jp
mov
jo
mov
add
enter
add
hlt
pop
xchg
push
add
push
in
loop
mov
add
filds
iret
mov
jecxz
add
outsl
rcl
add
push
lods
in
movsl
call
popl
mov
add
sub
pop
add
push
push
lea
push
push
push
call
in
out
add
jne
xlat
xchg
in
pushf
add
add
mov
add
popf
push
add
add
mov
cmpsl
push
add
add
sahf
lds
subl
mov
lock
jecxz
add
add
sub
pop
add
add
push
push
push
push
lea
push
lea
push
call
test
scas
rcll
add
add
scas
out
add
add
jae
pop
add
loopne
add
mov
jnp
pop
xchg
ja
sti
test
mov
call
push
push
push
push
push
push
push
push
push
push
push
call
add
cmpsb
mov
mov
cmpsb
lret
cmpsb
ficoml
mov
ljmp
mov
push
push
add
repnz
mov
jno
add
add
push
bound
pop
jl
add
clc
add
scas
add
sub
pop
xor
push
lea
push
push
call
add
add
add
add
add
add
sbbb
add
add
rolb
add
add
test
mov
mov
jge
mov
cltd
js
cli
add
add
stos
mov
lcall
les
jge
pushf
lods
push
ror
shr
push
xor
add
shl
sub
shr
sub
sub
inc
add
pop
pop
push
push
push
lea
push
push
call
add
add
js
mov
cltd
add
testb
jmp
cmpsb
test
cmpsb
add
add
pushf
hlt
push
inc
test
add
add
jo
pop
cmpsb
add
pop
add
pusha
add
add
addl
mov
add
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
call
test
mov
loop
out
xchg
outsl
out
add
lock
fwait
add
mov
cltd
mov
iret
test
push
int
mov
add
push
pop
add
add
inc
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
push
call
imul
pop
add
mov
add
add
add
rolb
add
add
push
add
roll
push
push
add
lcall
inc
lock
push
push
lea
push
push
lea
push
push
push
push
push
call
add
jl
ret
cli
xchg
shrb
pop
in
lds
jecxz
ficoms
lret
jecxz
add
xchg
xchg
jno
add
add
mov
clc
add
stos
jns
mov
les
add
flds
add
mov
add
pop
ja
test
xchg
add
test
in
fcompl
inc
call
xor
cmp
icebp
push
lea
push
push
lea
push
call
add
call
mov
lods
js
andb
add
mov
add
add
sahf
push
add
add
xchg
add
pushf
adcl
add
movsb
sub
pop
push
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
fwait
shl
pop
add
add
popl
jb
push
stc
xlat
mov
divb
mov
push
jnp
mov
lret
add
add
pop
add
add
fldcw
lds
jae
xchg
add
add
test
ljmp
xchg
subb
hlt
push
lea
push
lea
push
lea
push
lea
push
call
add
jo
fwait
lret
add
flds
out
scas
movb
add
pop
jns
imul
popa
in
add
push
insb
mov
or
pop
sub
pop
call
pushl
push
push
push
push
push
call
pop
lahf
push
add
mov
test
mov
cmpsb
mov
add
clc
leave
jle
stc
push
add
add
add
insb
scas
add
push
add
js
insb
test
addl
outsl
add
jl
pop
add
jle
ret
in
mov
in
in
lcall
jne
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
sarb
ret
cmpsb
jo
mov
call
add
lret
push
js
lods
scas
add
in
insb
mov
lcall
cli
add
push
push
dec
push
or
not
add
add
sub
add
sub
sub
add
pop
ror
xor
dec
pop
push
push
push
push
push
push
lea
push
push
push
push
call
int
add
jo
data16
add
add
mov
movsb
xchg
add
addb
addl
add
xchg
add
incb
xchg
mov
cwtl
xchg
add
jno
mov
lcall
pop
pop
add
push
add
add
sub
pop
pushl
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
push
add
add
in
jp
pop
add
add
add
lea
aad
xchg
std
add
pop
add
add
mov
stos
mov
add
jecxz
scas
aad
jno
jno
in
in
call
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
lahf
add
int
push
jno
div
jb
add
cmpsl
out
fadds
insb
subl
add
add
add
lods
imul
add
mov
push
pop
mov
add
add
add
cltd
testb
mov
fcomip
add
int
mov
add
sub
pop
push
push
push
rol
push
or
not
add
xor
dec
sub
shr
shl
pop
rol
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
movl
test
out
stc
popf
mov
jl
test
addl
fwait
add
imul
fwait
mov
movsb
int3
fs
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
insb
mov
add
in
add
out
add
lods
pop
add
add
add
int
add
sbbb
jae
cwtl
mov
add
mov
rclb
lea
push
lea
push
push
push
push
push
push
call
cltd
add
add
test
add
add
aam
mov
add
lock
mov
mov
fiadds
test
add
pop
lcall
add
add
sub
pop
mov
push
push
push
push
lea
push
push
call
in
icebp
add
into
lret
cmpsl
push
add
push
pop
lods
add
xchg
cld
add
add
add
mov
jae
mov
add
jmp
push
js
lret
add
mov
push
add
pop
std
add
insb
add
xlat
popf
in
sahf
xchg
lret
cwtl
add
add
rcrl
cmpb
addr16
xchg
int3
addb
add
push
push
push
push
push
push
lea
push
call
push
add
movsl
add
lret
clc
add
je
add
int
add
add
mov
add
add
add
iret
xchg
add
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
jne
xchg
xchg
popf
add
add
int
add
testb
add
add
rcll
pop
mov
add
into
sub
pop
add
add
push
push
push
push
push
lea
push
push
call
add
add
add
add
icebp
jl
mov
add
xchg
add
popf
mov
mov
xchg
add
scas
mov
add
imul
add
test
jp
hlt
add
mov
cwtl
lods
add
in
xchg
push
push
add
cmpsb
add
add
pusha
fwait
sub
pop
add
push
push
push
push
push
push
push
call
xchg
jns
jmp
add
pop
xchg
add
add
test
add
add
xlat
leave
mov
add
xchg
imul
repnz
mov
icebp
fldl
cwtl
add
sti
jp
pop
add
mov
add
sub
pop
mov
xor
push
lea
push
call
add
pushf
arpl
add
leave
faddl
add
scas
int3
mov
add
add
add
jge
in
clc
pop
add
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
je
jecxz
add
mov
add
fsts
add
add
push
add
add
add
add
add
mov
lcall
ja
add
aam
add
lcall
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
xorl
mov
leave
add
lahf
shrb
add
int
shlb
push
mov
push
test
sar
add
mov
mov
ret
roll
add
fnstenv
testb
pop
mov
sub
pop
xor
push
lea
push
lea
push
call
pop
test
add
fstp
mov
add
lahf
add
ret
pop
push
jge
into
add
add
push
test
cli
add
sub
pop
add
push
push
push
push
push
lea
push
push
call
mov
add
add
pop
add
add
stc
in
std
mov
add
mov
add
fadds
imul
mov
add
add
popa
mov
add
add
pop
add
push
aam
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
pop
add
mov
out
add
xchg
push
add
mov
aad
roll
add
add
mov
mov
js
add
out
xchg
mov
lea
add
lcall
add
add
lret
sub
pop
pop
push
push
push
push
call
ficompl
lret
filds
add
popf
push
xchg
mov
in
mov
fcmovb
stos
add
add
nop
in
add
pop
filds
pop
add
push
add
jle
stc
add
mov
aam
int
add
add
add
data16
loop
ret
int
in
lock
mov
xor
push
push
lea
push
lea
push
lea
push
push
push
call
pop
add
ret
add
jo
add
pop
popl
push
jecxz
popf
lahf
mov
cld
mov
add
sbbb
in
int
add
add
mov
push
pushf
ret
fwait
push
push
icebp
out
add
add
movb
sahf
add
fcoml
outsl
pop
add
mov
in
lcall
push
push
push
push
lea
push
push
push
call
mov
add
add
add
in
add
add
add
addb
sbbl
add
mov
add
add
pop
push
roll
add
mov
ret
jmp
add
push
add
out
roll
testb
cltd
add
clc
mov
add
popf
scas
iret
add
rolb
or
adc
pusha
push
push
push
lea
push
call
les
add
add
mov
add
add
iret
add
add
sarb
add
pop
sub
pop
push
push
lea
push
push
push
call
add
add
add
ja
add
fbstp
add
add
add
add
add
repnz
mov
in
in
lcall
movsb
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
mov
add
add
jecxz
mov
je
add
add
add
jns
in
fcompl
push
push
lea
push
push
push
push
push
push
call
mov
add
pop
jno
jns
add
jo
int
jo
add
iret
mov
add
add
test
add
pushf
in
in
loopne
lcall
pop
hlt
add
push
push
lea
push
push
lea
push
push
call
add
pop
add
mov
lret
add
outsl
mov
add
mov
push
pop
add
add
push
xchg
lahf
push
add
add
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
rorb
rcll
add
xchg
iret
add
sar
add
mov
mov
into
mov
add
fistl
add
add
mov
xchg
fildl
loope
fiaddl
icebp
add
push
movsl
push
add
mov
add
bound
loopne
add
mov
xor
push
push
push
push
call
add
jge
mov
in
incb
movl
add
add
add
add
push
add
add
add
hlt
fwait
pop
gs
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
call
movsl
lock
add
cmc
mov
pop
lods
add
sar
add
mov
jge
add
add
mov
add
mov
jbe
add
shrl
out
mov
add
flds
xchg
add
nop
ljmp
lcall
adc
push
push
push
lea
push
lea
push
call
add
jnp
push
xchg
add
jae
rorb
add
mov
and
mov
add
mov
data16
add
icebp
bound
pop
mov
add
filds
fists
fldl
add
add
lods
add
add
imul
loope
pop
add
into
add
in
pop
add
push
lea
push
lea
push
call
jno
add
fisubl
jle
movsl
xchg
nop
filds
ja
int3
add
jl
xchg
add
mov
mov
add
xchg
mov
aad
fnstsw
xchg
ljmp
mov
clc
mov
ja
add
div
lret
lods
mov
aad
fwait
add
sub
pop
mov
xor
push
lea
push
call
jnp
repnz
jecxz
jo
lods
add
stos
test
cmpsl
out
push
xchg
add
enter
jb
add
push
faddl
mov
mov
add
imul
pop
add
add
mov
mov
add
add
mov
sub
pop
add
push
push
push
push
push
call
je
test
iret
roll
push
mov
add
pushf
cli
rcrl
add
cmp
data16
add
jbe
in
mov
insb
add
in
in
pop
add
push
push
call
stc
imul
aam
jmp
add
test
mov
movsl
cltd
int
mov
hlt
jbe
mov
outsl
jecxz
ja
add
mov
repnz
add
mov
repnz
add
clc
pop
mov
push
push
shl
sub
shl
ror
push
xor
add
inc
sub
pop
ror
shr
sub
add
pop
push
push
push
push
push
call
push
roll
push
add
orl
incb
mov
fistpl
add
fidivl
sar
out
jno
clc
add
xchg
add
mov
shl
add
mov
add
stos
push
jo
add
in
lcall
jne
push
lea
push
push
push
push
call
in
add
xchg
hlt
mov
add
popf
push
add
add
pushf
push
addr16
fwait
in
add
loope
add
lods
add
jmp
test
roll
xchg
in
in
lods
mov
mov
add
fimuls
out
add
jecxz
mov
jns
add
add
add
les
jmp
add
inc
faddl
ror
rol
inc
push
and
add
not
sub
add
not
not
pop
add
inc
shl
pop
push
add
dec
inc
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
insb
sti
jns
flds
add
pop
loop
add
arpl
add
pop
mov
je
mov
lcall
rclb
out
fiaddl
icebp
shl
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
xchg
push
lock
mov
jne
add
add
add
add
into
add
xchg
lcall
add
add
insb
test
add
into
mov
add
add
xchg
add
pop
add
add
mov
lods
cld
add
outsl
xchg
sub
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
jle
add
hlt
stos
add
mov
fsubrl
add
add
add
add
add
fnstcw
pop
data16
jae
push
add
xchg
insb
add
add
lcall
pop
hlt
push
pop
add
push
push
push
push
push
push
push
call
add
addb
mov
add
jno
add
xchg
popf
add
in
roll
subb
aam
fisubrs
jne
mov
add
rolb
lcall
ret
add
add
add
push
push
push
push
call
out
int3
add
add
add
mov
push
add
add
add
jne
imul
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
jbe
hlt
add
xchg
nop
loopne
add
push
add
mov
add
add
loop
movsl
mov
pop
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
lea
push
call
in
add
jle
ja
add
insb
push
iret
mov
add
push
add
add
mov
shll
stc
add
repnz
add
lret
test
nop
add
add
add
add
shlb
ljmp
pop
add
push
lea
push
call
add
mov
stos
scas
xchg
loope
into
ret
ret
jne
add
add
xchg
jle
add
lock
lcall
jne
push
add
pop
push
mov
xor
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lret
mov
add
js
lret
je
mov
add
ror
aam
adc
pushf
add
add
add
shlb
mov
mov
add
push
ljmp
pop
pop
out
cwtl
add
mov
add
jle
shr
add
mov
in
fcomps
lock
sub
not
not
not
pop
pop
push
inc
rol
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
test
lock
add
jnp
add
fs
jle
movsb
mov
popf
mov
add
ror
add
add
add
push
add
out
je
add
stos
add
jl
cltd
jecxz
add
lods
loopne
loopne
insb
mov
mov
add
in
sub
pop
xor
push
push
push
push
lea
push
push
push
call
movl
pop
sti
mov
into
sti
mov
add
mov
mov
cmpsb
sahf
mov
mov
mov
push
out
add
js
mov
cmc
add
mov
pushf
add
cli
addb
loop
ja
fsubs
add
add
mov
add
add
sub
pop
add
push
sub
pop
rep
mov
push
push
push
push
push
call
add
add
loopne
gs
aam
test
add
add
sbbl
add
jge
movsl
cli
testb
jl
imul
aad
cmpsl
add
add
out
mov
add
loop
add
add
xlat
pushf
mov
add
jnp
popf
add
xchg
lock
jp
xchg
add
sub
pop
xor
push
push
push
push
push
lea
push
push
lea
push
call
ret
push
add
mov
nop
add
add
add
add
loop
mov
add
jae
add
add
add
les
not
pop
or
je
push
pop
mov
push
push
push
lea
push
lea
push
call
add
add
stos
mov
pop
add
ljmp
add
out
mov
add
pop
std
addb
lods
sahf
jle
mov
xchg
xchg
add
in
fmul
add
add
jnp
pop
repnz
fistps
add
add
mov
in
lock
lcall
xor
push
lea
push
lea
push
call
lock
nop
add
in
arpl
add
mov
addl
add
add
sahf
add
jae
xlat
add
into
add
add
movsl
sub
pop
add
push
push
lea
push
call
add
roll
pop
enter
add
add
aad
scas
bnd
imul
add
add
fldl
mov
xchg
add
xchg
add
add
enter
mov
mov
add
hlt
pop
mov
xor
push
push
push
call
shrb
popa
add
sar
je
loopne
out
scas
add
add
add
add
fwait
add
insb
mov
add
xchg
rolb
add
in
hlt
pop
add
push
lea
push
push
push
push
push
push
push
push
call
stos
add
xchg
add
push
int
add
add
mov
add
test
mov
add
call
test
jbe
scas
sub
pop
add
push
inc
pop
push
push
dec
pop
mov
push
push
push
call
mov
add
add
add
pop
testb
add
mov
add
lahf
out
roll
jb
xchg
cmpsb
jb
je
add
sub
pop
xor
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
add
mov
add
jmp
add
add
fidivs
lahf
mov
cmpsb
mov
sub
pop
add
push
add
add
not
xor
pop
add
push
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
push
rolb
xchg
add
xchg
add
scas
rcr
mov
add
out
mov
pop
jecxz
int
mov
popa
xchg
pusha
cmpsb
add
arpl
fiadds
jecxz
xchg
add
jmp
xchg
push
jmp
jmp
add
idivl
add
add
sub
lcall
movsb
push
push
lea
push
push
push
push
push
call
xchg
nop
mov
in
add
add
add
push
xchg
add
outsl
add
pop
fidivrs
add
add
pop
mov
add
sub
pop
mov
xor
push
shr
rol
inc
pop
or
je
mov
push
push
lea
push
push
push
call
add
add
jmp
mov
add
mov
add
add
add
add
xchg
mov
jne
cmc
add
add
mov
into
ret
xlat
fildl
add
lods
ljmp
pop
mov
mov
in
lcall
sub
movb
add
push
ror
rol
inc
add
pop
rep
push
lea
push
push
lea
push
push
push
push
push
push
push
call
pop
out
shlb
add
lret
int3
jno
mov
int
jmp
mov
cmc
nop
pop
add
mov
add
add
jl
add
icebp
jne
add
jbe
add
in
out
add
add
andb
pop
push
push
shr
sub
push
push
pop
add
inc
sub
sub
add
not
pop
dec
pop
push
shr
xor
add
pop
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
pop
add
icebp
std
popl
sarb
add
add
ljmp
add
add
push
add
push
add
lds
jmp
push
add
push
mov
add
add
call
ja
add
stc
int3
repnz
xchg
add
add
in
sub
pop
mov
mov
push
shr
pop
jmp
push
push
push
push
call
push
mov
add
add
mov
out
add
add
mov
jl
hlt
mov
add
add
scas
add
add
add
out
add
in
add
add
repnz
test
ljmp
pop
push
mov
push
lea
sub
pop
add
push
add
lea
lea
sub
pop
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
stos
mov
outsl
add
icebp
add
mov
stos
add
add
cmc
mov
lahf
pop
jle
lahf
bound
add
add
xchg
in
add
test
movsl
add
push
add
std
add
in
mov
repnz
lds
jb
data16
add
stos
test
in
in
fdivr
lcall
push
push
shl
pop
push
mov
push
pop
pop
pop
push
rol
pop
pop
push
pop
pop
leave
push
shr
ror
pop
ret
push
push
push
lea
push
push
call
mov
cwtl
rcrb
test
add
mov
lds
mov
jecxz
pushf
jbe
add
cld
into
roll
cwtl
jae
add
add
repnz
test
stc
add
mov
stc
jae
add
add
add
add
mov
pusha
mov
pop
add
pop
push
push
push
lea
push
push
push
push
call
add
popa
loope
andl
add
add
ljmp
aad
fldenv
add
cmpsl
add
add
add
add
arpl
add
mov
rolb
imul
add
negb
add
sub
pop
mov
add
push
rol
sub
dec
not
pop
push
push
lea
push
lea
push
push
call
aam
sti
add
jle
mov
mov
mov
add
add
insb
aam
mov
add
int
movsb
mov
lock
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
jnp
add
add
in
push
add
add
mov
pop
add
mov
add
loop
clc
add
add
movsb
aad
pop
add
loop
test
mov
insb
add
neg
add
add
add
icebp
add
push
push
push
pop
movl
push
ror
ror
rol
pop
addl
test
je
push
rol
add
inc
pop
mov
pop
push
push
push
push
push
push
push
call
aad
add
add
add
lods
add
mov
stc
nop
outsl
add
test
add
pop
add
js
mov
add
add
add
jno
test
add
cmpsb
add
add
mov
in
push
ror
add
hlt
test
fcomip
add
add
in
pop
push
not
pop
pop
pop
push
xor
xor
pop
leave
push
push
call
add
mov
repnz
loop
jnp
add
nop
lods
add
stos
neg
add
popf
in
xchg
add
add
roll
pop
push
add
mov
add
add
subb
clc
lcall
add
push
dec
inc
pop
push
push
dec
add
pop
mov
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
iret
add
jb
add
jge
add
cli
mov
cltd
pop
add
faddl
add
mov
add
arpl
movsl
int3
mov
add
jge
mov
add
stos
mov
nop
jnp
in
fcomps
push
push
push
push
push
push
push
push
push
call
add
jne
nop
je
lock
flds
imul
add
add
mov
xchg
mov
jo
pop
add
data16
add
mov
shrb
add
push
into
mov
std
outsl
lcall
add
sub
pop
push
push
push
push
push
call
ljmp
stos
add
fwait
pop
faddl
xchg
xchg
add
add
iret
cwtl
cli
mov
addb
push
enter
cmc
pop
mov
xchg
add
add
add
add
push
not
sub
pop
testl
push
dec
sub
pop
addl
push
push
push
lea
push
push
push
push
lea
push
call
mov
clc
insb
mov
ljmp
add
stos
add
add
jne
add
add
add
add
add
call
test
enter
add
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
cld
imul
jns
push
jno
push
xchg
stos
mov
stc
iret
jl
add
test
add
lods
push
mov
add
popa
cmpsl
add
fwait
add
stc
mov
add
add
add
xchg
loopne
js
sarb
lcall
xchg
decl
lea
push
push
lea
push
push
push
call
add
pop
clc
pop
add
add
mov
aam
jb
add
add
push
jl
add
add
scas
ljmp
mov
add
test
xchg
add
jne
push
shl
shl
add
pop
push
push
push
push
push
push
push
push
call
stos
add
ret
add
mov
hlt
popa
pop
subl
add
jnp
lock
add
xchg
add
lods
add
std
push
sub
pop
call
push
xor
rol
add
pop
cmpl
jne
push
push
push
push
call
loop
mov
pop
add
cmpsl
loop
add
mov
test
stos
jb
imulb
add
iret
aam
std
mov
push
lret
icebp
sub
pop
pop
push
add
sub
pop
pop
push
add
dec
sub
rol
pop
pop
push
shr
ror
pop
pop
push
push
call
out
add
add
jo
add
mov
add
add
add
out
add
add
add
in
mov
xchg
add
cwtl
ficomps
bound
add
add
iret
loop
mov
lock
ljmp
mov
popf
add
in
pusha
incb
lcall
push
lea
xor
pop
ret
push
push
push
lea
push
push
call
int3
cltd
add
addr16
fwait
mov
mov
add
jge
add
add
push
add
add
lock
add
add
stos
sub
pop
mov
push
dec
not
pop
add
push
push
push
push
push
push
call
cmpsb
jmp
pusha
add
push
lret
jp
mov
jmp
addr16
mov
add
flds
push
loopw
pop
add
mov
fwait
data16
pop
scas
sub
pop
push
push
dec
sub
inc
pop
push
push
push
push
push
push
push
call
leave
mov
add
stos
add
mov
mov
cwtl
add
add
jp
lcall
test
add
call
pop
out
filds
test
add
mov
mov
add
lcall
push
sub
pop
movl
push
push
push
lea
push
lea
push
push
push
push
call
pop
popa
add
mov
add
lcall
popf
add
mov
add
mov
xchg
push
fs
push
sahf
add
mov
add
add
xlat
pushfw
add
jo
ljmp
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xlat
in
xlat
loopne
pusha
in
mov
mov
mov
mov
pop
sahf
mov
add
add
lret
addb
fsubrp
sti
push
stos
add
add
add
scas
repnz
leave
add
call
push
sub
pop
call
subl
push
push
push
push
push
push
call
enter
test
pop
jae
pop
repnz
clc
add
add
loope
push
add
repnz
lcall
jns
push
icebp
cmpsl
gs
sub
add
call
add
test
lcall
xor
pop
pop
pop
push
sub
sub
pop
pop
push
dec
shl
inc
pop
leave
push
ror
not
pop
ret
push
not
lea
pop
push
mov
push
dec
lea
rol
ror
pop
add
push
add
sub
shl
shl
pop
push
push
push
lea
push
lea
push
push
call
mov
add
add
aam
add
fiaddl
faddl
push
fldl
add
push
shl
movl
add
add
add
mov
leave
add
cld
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
jbe
add
add
add
cld
mov
add
mov
add
lahf
testl
add
add
add
frstor
icebp
sub
pop
push
push
push
push
push
call
add
add
sbb
mov
push
xchg
mov
add
jnp
stc
mov
lahf
faddp
aam
pop
bound
int
pop
add
add
enter
arpl
ret
lcall
mov
add
lcall
inc
or
shl
sub
sub
pop
lea
push
lea
shr
pop
sub
mov
push
sub
shr
shr
pop
shr
push
push
push
push
push
call
movsb
add
mov
fisubrs
add
leave
loope
in
mov
cltd
mov
ret
add
pop
xchg
add
add
add
add
add
cmpsb
add
call
fs
sub
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
je
js
jp
cwtl
iret
out
icebp
cwtl
movl
scas
add
fwait
pop
jb
cmpsl
loop
add
xchg
sub
pop
mov
mov
push
push
push
push
push
push
push
push
push
call
add
fsubrs
add
test
pop
add
add
add
insb
add
add
mov
add
ja
js
add
sbbb
roll
jnp
add
jp
jb
in
fdivr
lcall
inc
or
shlb
add
pop
mov
mov
push
lea
push
push
push
push
push
lea
push
call
pop
xchg
add
add
add
add
add
add
aad
add
add
out
add
jo
mov
add
bound
jmp
xchg
jno
add
mov
in
sub
pop
cmp
jne
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
add
roll
mov
mov
add
jbe
xchg
xchg
leave
out
xchg
add
add
add
xchg
mov
add
in
jmp
fdivr
lcall
cwtl
fadds
add
jne
mov
push
not
lea
pop
movl
push
push
push
lea
push
call
pop
jl
add
add
popa
shr
add
add
mov
push
popf
jmp
mov
add
add
add
add
lock
lcall
add
push
add
lea
add
pop
mov
push
add
pop
mov
sub
jne
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
push
add
iret
stc
mov
sar
add
nop
xlat
addl
add
mov
jns
je
jmp
shll
fidivl
mov
push
xor
xor
shl
pop
movl
jmp
push
push
push
push
lea
push
lea
push
lea
push
call
add
in
sti
test
roll
add
add
add
add
je
add
jnp
jge
lret
mov
flds
add
jl
add
sti
mov
negb
rclb
mov
add
xchg
jmp
push
jo
iret
lock
jge
sub
pop
mov
mov
push
push
lea
push
push
push
push
call
iret
add
notl
repnz
add
add
add
mov
add
add
jbe
lahf
add
mov
into
add
jge
movb
add
add
add
pop
add
add
jl
xchg
scas
movb
xchg
add
cmpsl
add
lcall
cli
add
test
add
add
add
lea
push
lea
push
call
pop
std
jne
mov
js
add
mov
mov
sahf
rclb
fsubrs
add
movb
rorb
loopne
mov
shr
cmc
movsb
testb
add
movb
jne
rolb
push
mov
mov
add
add
call
add
inc
adc
into
sub
sub
pop
movl
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
iret
jae
testl
xchg
add
add
ficomps
lods
loopne
add
les
mov
lret
cli
jge
add
push
add
xchg
addr16
add
add
lock
pop
add
sub
pop
jmp
mov
push
push
call
loope
stos
lahf
add
mov
add
xchg
jns
aad
popf
jmp
add
add
lcall
mov
pop
add
add
cmpsb
int3
mov
fdivr
add
rcr
add
shrl
loop
arpl
sub
pop
cmpw
jne
push
shr
pop
mov
movl
push
rol
xor
pop
jmp
push
push
push
push
push
call
add
xchg
jns
add
scas
push
add
rolb
add
pop
add
add
fcoml
add
shlb
fldt
fldl
fiadds
add
addr16
jp
pop
add
jmp
pop
add
add
imul
jecxz
icebp
add
outsl
add
call
add
iret
add
sub
pop
pushl
pop
push
sub
pop
mov
mov
push
lea
push
lea
push
push
push
push
push
call
add
pop
add
add
add
add
add
add
sbb
add
rolb
pop
push
pop
xchg
data16
add
testl
or
bound
push
xor
push
and
add
xor
add
rol
sub
sub
sub
add
pop
rol
pop
push
add
lea
add
pop
push
push
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
shll
call
add
test
into
lret
hlt
mov
add
xchg
sti
add
in
add
hlt
test
in
je
add
std
add
add
pop
les
rcrl
arpl
push
test
add
sub
pop
cmpl
je
push
push
add
sub
sub
not
push
or
inc
add
rol
not
not
dec
sub
dec
add
pop
add
dec
shl
pop
push
ror
pop
push
call
push
add
pop
cmpl
je
push
push
sub
not
push
or
not
add
ror
not
sub
lea
add
lea
add
pop
ror
inc
add
lea
pop
push
push
call
add
enter
stc
outsl
add
add
jecxz
rcr
sahf
add
fdivs
cwtl
movb
fdiv
shll
lret
add
add
mov
add
sub
pop
push
push
rol
dec
pop
call
push
push
push
push
push
lea
push
push
push
call
pusha
test
add
movsb
aam
out
lahf
add
add
add
fcoml
add
ja
lock
add
sub
pop
cmpl
je
push
push
inc
push
or
inc
add
shr
ror
sub
add
sub
dec
add
sub
pop
sub
dec
add
inc
pop
push
not
rol
add
pop
push
push
push
push
push
push
push
call
add
jmp
mov
cmpsl
xchg
add
add
enter
add
add
popa
add
push
add
jge
popa
add
out
sti
jo
mov
add
push
scas
sti
lcall
jo
mov
lret
std
add
test
add
cmpl
je
push
push
inc
push
push
pop
add
inc
sub
sub
rol
inc
dec
pop
add
pop
push
ror
pop
push
push
sub
xor
dec
pop
call
push
push
lea
push
push
lea
push
push
push
call
mov
xchg
cmpsb
in
add
test
cmpsb
add
leave
call
pop
jo
add
lahf
push
fldl
add
pop
call
lcall
add
js
jbe
xchg
mov
pop
mov
xlat
imul
push
pop
cld
add
roll
mov
add
out
aad
in
in
lcall
cmp
rol
je
push
push
lea
xor
push
or
not
add
not
sub
pop
rol
not
sub
not
pop
push
push
push
lea
push
push
push
push
lea
push
call
loop
pusha
add
cmpsb
add
push
loop
add
add
add
fwait
mov
add
in
sub
stos
roll
movl
add
jnp
add
add
stos
add
add
jp
xchg
add
add
jp
add
add
pusha
xlat
fyl2xp1
push
lcall
push
inc
dec
pop
call
cmpl
je
push
push
lea
add
push
or
inc
add
inc
sub
sub
dec
not
ror
pop
inc
ror
shr
shr
pop
push
push
push
push
push
lea
push
push
call
push
ja
xchg
mov
add
arpl
add
add
add
mov
add
cmc
push
mov
pop
test
add
xchg
mov
add
test
in
add
sub
pop
push
call
push
rol
pop
cmpl
je
push
push
sub
rol
push
sub
add
sub
not
xor
pop
lea
dec
add
pop
push
sub
add
add
pop
push
call
push
lea
push
call
mov
mov
fdivrs
push
push
add
add
mov
xchg
ret
push
cld
enter
fwait
into
add
mov
mov
add
add
xchg
add
in
clc
pop
cmpl
je
push
push
rol
xor
push
push
pop
add
lea
ror
add
sub
dec
pop
add
pop
push
inc
not
not
shr
pop
push
call
push
push
lea
push
push
lea
push
call
mov
sti
lahf
add
jp
push
js
insb
add
jge
jmp
add
in
movl
lcall
cmp
rol
je
push
push
sub
add
sub
inc
push
or
not
add
not
shr
xor
shl
sub
dec
add
dec
pop
dec
ror
pop
push
push
push
push
call
add
xchg
add
cmp
mov
add
mov
add
hlt
test
data16
fcomps
jle
lods
add
movb
mov
pushf
sub
pop
push
call
push
push
lea
push
lea
push
push
push
call
add
imul
icebp
jmp
fwait
add
nop
popa
push
add
testb
cmc
faddl
addl
add
push
call
jb
mov
add
add
fadds
clc
aad
sahf
outsl
mov
aad
push
add
sub
pop
cmpl
je
push
push
ror
not
sub
ror
push
and
add
not
sub
lea
lea
ror
sub
pop
lea
not
shl
pop
push
push
push
push
push
push
push
push
push
push
call
shl
add
adcb
add
pop
fs
pop
fs
outsl
out
les
mov
fiaddl
movsl
add
add
pop
cld
add
add
popl
insb
lcall
add
shlb
movsb
xchg
arpl
add
cmc
add
fdivl
add
push
push
not
sub
sub
pop
call
push
push
push
push
push
lea
push
push
call
add
add
push
add
add
xchg
add
lds
mov
add
xchg
push
mov
xchg
add
xchg
jne
jl
lret
scas
mov
push
mov
addr16
mov
xchg
add
cli
sahf
xchg
add
jns
sarl
add
testb
fsubr
add
lcall
js
xor
ret
test
add
mov
shl
rol
push
push
pop
add
shl
sub
lea
sub
sub
pop
sub
sub
shr
shl
pop
push
push
push
push
push
push
push
push
push
push
call
rorb
add
add
push
cwtl
movsl
push
jae
iret
testl
mov
mov
add
add
fwait
mov
into
fistps
add
add
push
out
add
add
add
add
je
push
add
sub
pop
push
push
lea
push
push
push
push
push
call
add
add
mov
scas
mov
jne
add
fldenv
add
add
lret
add
add
add
lahf
mov
test
icebp
add
imul
rolb
push
add
pop
mov
add
movsl
add
mov
push
call
add
push
lea
not
pop
cmpl
je
push
push
shl
shr
xor
add
push
or
not
add
shr
dec
shr
sub
shl
lea
dec
pop
pop
push
lea
push
lea
push
push
call
add
test
add
fistpll
int3
out
popa
add
add
imul
movsl
add
flds
mov
stos
pushf
jmp
clc
push
xor
add
lcall
push
push
push
call
jnp
add
xorl
add
movb
js
add
clc
jge
lods
add
jns
fucomi
pop
scas
jae
xchg
mov
add
mov
data16
xchg
mov
add
movsl
call
ret
jle
clc
add
add
fwait
add
add
sub
pop
call
cmpl
jne
push
ror
lea
not
pop
mov
movl
push
push
lea
push
push
push
lea
push
push
call
jbe
mulb
mov
mov
add
mov
add
add
add
scas
scas
xchg
lods
pop
shl
mov
cwtl
mov
lcall
out
mov
add
add
in
in
jmp
xor
push
add
not
pop
pop
push
lea
push
push
call
lret
lahf
push
les
faddl
in
add
mov
lea
arpl
pop
jae
add
mov
imull
push
add
add
add
add
add
in
hlt
lcall
pop
push
not
pop
pop
push
push
push
lea
push
push
push
call
mov
add
add
add
add
fdivr
mov
pop
filds
add
addl
call
sub
pop
leave
push
rol
not
add
shl
pop
ret
push
shr
xor
rol
pop
push
push
push
lea
push
push
call
add
add
add
push
fisubrs
ret
add
insb
mov
add
add
test
xchg
add
add
add
add
loope
pop
mov
test
pop
mov
push
lea
push
push
push
call
lcall
enter
mov
add
add
add
add
add
mov
add
test
ret
insb
xchg
aad
mov
pop
loope
add
add
mov
je
mov
add
jle
add
shrb
jo
add
mov
sub
pop
add
cmpl
jne
push
push
add
shl
rol
push
and
add
sub
sub
add
add
pop
shl
sub
shl
pop
push
shl
sub
pop
pushl
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
fwait
cmpl
add
add
cld
add
add
pop
add
cwtl
lock
add
mov
mov
mov
add
js
push
jb
add
add
mov
lcall
add
sub
pop
call
push
push
dec
add
pop
call
push
shl
add
inc
pop
jmp
push
not
inc
sub
pop
cmpl
je
push
lea
inc
inc
pop
cmpl
jne
push
push
push
push
lea
push
call
fcoms
lods
fcmovnu
add
cld
jle
movsb
add
add
pop
fadds
add
add
mov
xchg
add
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
ja
add
stc
into
add
xchg
add
fiadds
push
popf
jne
add
mov
sub
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
repnz
lcall
filds
iret
add
mov
add
push
rolb
bound
sahf
add
xchg
mov
sub
pop
pop
pop
push
sub
pop
pop
push
push
call
nop
int3
mov
add
in
add
push
mov
jge
fcmovb
add
insb
lret
add
jae
imul
add
std
mov
add
push
add
popa
add
mov
ret
js
add
push
shll
cmc
loopne
add
in
clc
pop
pop
push
add
rol
pop
leave
add
push
push
call
out
mov
xchg
addr16
pop
clc
lds
add
out
out
stos
jae
fisttpl
cld
out
push
scas
add
cwtl
out
add
add
add
js
add
cli
test
addr16
loopne
push
imul
sub
arpl
out
addb
in
clc
pop
ret
push
inc
not
dec
sub
pop
jmp
push
push
call
add
xchg
add
lds
int3
rcrb
test
pop
stc
popa
incb
mov
add
sarb
test
jle
iret
mov
pop
add
add
pop
add
mov
xchg
fsubrl
xchg
out
arpl
mov
add
mov
les
jge
add
test
add
add
sub
xlat
push
xor
shl
push
push
pop
add
not
not
sub
inc
ror
add
pop
xor
pop
push
ror
add
shl
sub
pop
pushl
push
push
lea
push
push
call
std
aam
add
add
stos
add
mov
mov
fldenv
add
mov
lock
in
mov
add
in
arpl
add
add
add
add
mov
divl
add
ret
hlt
add
ljmp
jbe
add
add
in
in
lock
lcall
dec
sub
add
aad
push
push
ror
pop
call
push
pop
jmp
cmpl
jne
push
push
call
jns
add
add
add
lods
gs
gs
add
cli
mov
push
add
popf
xchg
shlb
insb
add
sarl
jge
add
movl
jmp
subl
add
xlat
push
add
add
popa
sub
pop
mov
mov
push
shl
add
not
rol
pop
push
push
push
add
push
or
not
add
rol
xor
lea
sub
sub
rol
ror
pop
ror
add
rol
pop
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
add
push
xchg
add
mov
pushf
in
jno
mov
xchg
outsl
stos
gs
jl
add
add
loopne
mov
add
out
add
mov
cmc
add
add
add
jp
add
add
lcall
jne
call
push
lea
xor
pop
call
push
push
not
lea
push
or
inc
add
rol
inc
add
add
sub
shr
pop
rol
pop
push
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
add
pop
add
aad
add
xchg
mov
push
jge
out
add
add
movb
jp
popa
mov
lods
mov
add
cmpsl
pop
xlat
cli
push
pusha
notl
lods
add
cld
jle
stos
in
popf
add
xchg
add
aam
mov
add
add
jbe
mov
lcall
sbb
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
sti
add
add
add
mov
add
add
data16
jmp
in
add
scas
mov
pop
call
push
push
sub
push
and
add
add
ror
sub
sub
sub
shr
pop
shl
lea
sub
pop
push
inc
pop
pushl
push
shr
pop
call
call
push
push
dec
sub
add
push
or
not
add
not
shl
xor
sub
pop
ror
pop
push
lea
push
lea
push
push
push
push
push
call
add
add
add
add
add
mov
add
cwtl
add
mov
add
add
xchg
xorb
cli
mov
push
add
roll
mov
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
test
jo
add
add
mov
jge
add
popa
je
add
rolb
add
add
push
mov
add
mov
fnstenv
add
add
add
add
add
test
std
aam
sub
pop
call
call
push
push
inc
shl
push
xor
add
lea
not
ror
sub
xor
shl
shl
pop
shr
xor
pop
push
sub
lea
dec
pop
pushl
call
push
add
add
dec
pop
call
push
push
add
push
xor
add
ror
sub
dec
shr
pop
rol
sub
lea
pop
push
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
add
out
icebp
add
xlat
push
arpl
add
add
mov
jnp
add
add
add
aad
xchg
add
add
sub
pop
call
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
rcll
add
pop
add
add
add
js
add
add
mov
add
mov
int
test
add
add
add
jbe
add
mov
add
add
jmp
test
in
lcall
shrb
ret
push
lea
add
push
or
not
add
add
dec
sub
sub
pop
not
sub
shl
pop
push
lea
push
push
push
push
lea
push
push
call
popf
add
orb
add
mov
pop
add
fcoms
add
mov
add
add
xchg
lea
jae
sub
pop
pushl
push
sub
sub
add
pop
call
call
push
push
shl
add
ror
push
xor
add
lea
ror
lea
sub
dec
pop
dec
ror
add
pop
push
ror
not
pop
pushl
push
push
push
push
call
add
jne
repnz
add
jae
add
mov
fs
sarb
movsb
add
jecxz
pop
add
push
mov
pop
test
jbe
rcl
fwait
cmpb
pop
call
push
lea
sub
dec
pop
call
push
push
rol
push
sub
add
ror
add
sub
lea
pop
sub
rol
sub
pop
push
pop
pushl
push
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
mov
xchg
movsl
mul
movsb
iret
enter
stos
lods
xchg
mov
pop
pop
cmpsl
cld
int3
pop
popf
jne
add
add
add
nop
bound
add
add
ja
add
sub
pop
call
push
push
shl
sub
xor
push
or
inc
add
not
sub
shr
sub
dec
pop
not
not
ror
pop
push
sub
rol
pop
pushl
push
shl
dec
add
pop
call
push
rol
inc
shr
pop
lea
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
jmp
add
add
loopne
stos
mov
xchg
mov
pusha
xchg
jmp
fisubrs
add
pop
jnp
pusha
add
jns
test
fwait
add
add
add
add
fcomps
ret
push
add
in
fcomps
shrb
int3
jle
push
shl
push
push
pop
add
shr
sub
ror
shr
inc
pop
ror
pop
push
lea
push
lea
push
push
push
lea
push
call
fiadds
ljmp
stc
cmpb
movsb
jno
scas
fadds
jmp
push
jl
add
shrb
jmp
mov
pop
pushl
call
push
add
inc
pop
call
push
push
shr
push
or
inc
add
rol
xor
ror
sub
rol
pop
ror
ror
add
pop
push
pop
pushl
push
push
push
call
call
mov
fildl
mov
mov
add
lds
mov
leave
arpl
pop
out
subb
jnp
addb
push
push
add
add
loope
sbbb
leave
scas
add
add
mov
add
call
call
push
push
inc
push
and
add
xor
ror
sub
sub
pop
ror
shl
add
pop
push
rol
sub
pop
pushl
push
push
push
push
push
call
mov
add
test
std
add
add
add
jnp
add
add
add
je
add
add
xchg
add
add
add
pop
popf
sarl
in
lcall
mov
push
lea
push
call
jns
int3
filds
add
add
add
addl
scas
xchg
add
mov
lret
sbb
add
add
add
mov
xchg
push
jae
shlb
mov
add
pop
call
push
lea
push
push
call
add
push
mov
data16
add
mov
xchg
add
add
into
add
imul
add
subb
push
add
add
add
scas
add
add
mov
js
in
jecxz
mov
mov
sbbb
push
lods
iret
popf
xchg
add
add
movsl
sub
pop
lea
push
push
sub
push
xor
add
shl
xor
sub
xor
ror
lea
lea
pop
not
pop
push
inc
pop
pushl
push
xor
pop
call
push
push
push
push
push
lea
push
call
imul
jmp
pop
mov
call
iret
xchg
mov
add
lods
add
jne
lahf
in
add
push
add
fimuls
mov
je
stos
icebp
sub
pop
call
push
push
push
sub
add
inc
sub
sub
shl
inc
lea
pop
shl
ror
shr
pop
push
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
push
call
in
pop
jno
mov
lret
add
push
add
add
add
testl
pop
call
mov
push
push
xor
sub
not
not
push
or
not
add
sub
sub
shl
add
pop
rol
xor
pop
push
add
sub
pop
pushl
push
push
lea
push
call
rolb
in
add
add
mov
add
fs
add
test
push
hlt
push
gs
outsl
add
xacquire
pop
call
push
lea
xor
add
inc
pop
push
push
add
add
not
pop
pushl
call
push
push
shr
push
or
not
add
shr
add
rol
sub
xor
sub
pop
not
inc
pop
push
lea
push
lea
push
push
call
test
imul
add
jmp
add
add
mov
add
push
int3
add
add
add
jne
add
add
add
add
add
add
add
mov
add
add
iret
add
pushf
incb
fwait
jae
add
jne
push
lea
pop
call
push
push
sub
dec
push
push
pop
add
lea
lea
sub
sub
ror
pop
shr
add
pop
push
push
sub
push
or
inc
add
shl
sub
dec
pop
pop
push
push
lea
push
push
push
push
call
add
add
testl
ljmp
mov
mov
imul
add
jecxz
scas
gs
push
test
add
lea
add
data16
sub
pop
call
push
push
ror
push
push
pop
add
inc
rol
dec
sub
sub
shr
shr
lea
pop
not
pop
push
push
push
call
add
test
scas
arpl
add
push
lock
jnp
push
fcoml
add
push
pushf
repnz
add
add
testl
test
pop
lahf
pop
leave
mov
add
add
cmpsl
add
stos
in
add
out
add
add
insb
add
mov
in
hlt
pop
pushl
push
sub
ror
pop
call
mov
push
push
lea
push
push
push
push
push
call
mov
scas
nop
add
les
clc
fnsave
mov
add
scas
leave
fildl
mov
xchg
mov
sti
pop
in
stos
fldl
jo
add
popl
in
cmpsl
fbstp
add
add
add
sub
pop
lea
push
add
pop
lea
push
sub
lea
inc
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
add
cmp
roll
add
add
into
lahf
add
add
lahf
test
sub
pop
push
push
shl
xor
pop
push
push
lea
push
call
jmp
add
add
add
add
lods
add
add
mov
add
jae
push
pop
stc
popa
add
jbe
add
add
leave
xor
loope
pop
push
push
pop
push
push
not
inc
pop
push
push
push
push
push
lea
push
push
call
enter
in
mov
in
out
mov
jo
jp
out
mov
lea
mov
add
sahf
add
add
add
jl
jb
push
jno
in
call
push
inc
sub
pop
push
call
push
push
lea
push
or
inc
add
rol
xor
inc
sub
rol
not
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
out
movsl
je
add
in
add
mov
jle
add
add
add
mov
ficompl
add
leave
add
leave
add
clc
leave
push
test
iret
cmpsl
push
pop
xchg
mov
add
add
outsl
arpl
fmul
outsl
add
lcall
jne
push
not
add
ror
lea
pop
call
call
push
lea
shr
not
pop
mov
pop
push
push
call
add
call
arpl
add
jp
lret
add
add
lahf
jp
add
stc
add
iret
jo
stos
add
test
add
loopne
fadd
push
add
push
push
rclb
lcall
jne
push
inc
pop
jmp
call
push
push
lea
shr
shl
push
and
add
sub
sub
dec
lea
add
pop
not
sub
pop
push
not
pop
pushl
push
push
lea
push
push
push
push
call
add
add
mov
add
imul
add
add
js
arpl
xchg
lcall
xor
add
push
shr
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
fdivrs
mov
add
lock
repnz
add
ja
outsl
js
rol
imul
fldl
idivb
aad
add
fs
add
add
add
rclb
mov
lea
push
push
ror
push
sub
add
not
sub
inc
pop
pop
push
push
push
push
push
call
add
pop
int
add
jl
xchg
add
jb
add
in
out
add
mov
add
bound
les
ljmp
push
mov
mov
lahf
lcall
scas
add
cmpsl
add
adcl
lcall
in
lcall
jne
push
add
pop
call
push
push
push
push
push
push
push
push
push
call
pop
testl
testl
add
mov
pop
pop
add
add
add
xchg
pop
scas
add
jle
push
push
add
movsb
jo
in
fcompl
push
push
push
call
mov
add
mov
mov
add
add
add
les
xchg
add
jge
mov
les
insb
test
add
jo
roll
in
hlt
lcall
shrb
daa
out
push
push
xor
push
and
add
shr
ror
shr
sub
sub
add
shl
pop
pop
push
push
call
js
add
add
mov
add
jmp
jecxz
add
add
xchg
add
mov
mov
push
add
lcall
jne
push
sub
shl
pop
call
call
push
lea
push
push
call
movb
add
in
ja
mov
lds
add
add
mov
fldcw
add
in
xchg
lods
cltd
stc
add
add
add
add
add
sti
scas
mov
into
popa
add
add
sbb
xchg
xchg
add
jmp
pop
add
add
call
add
pop
mov
mov
push
inc
ror
shl
sub
pop
lea
push
push
sub
add
rol
inc
push
and
add
shl
sub
inc
ror
pop
pop
push
push
push
push
push
push
call
mov
add
mov
add
add
add
insb
mov
mov
test
cmpsb
xchg
xchg
jmp
add
jmp
stos
mov
add
add
mov
add
jb
add
lret
xchg
cmpsb
mov
add
add
sub
pop
pushl
call
push
lea
push
call
popa
add
push
add
add
add
push
ret
shlb
add
add
add
xchg
sbbb
mov
add
add
filds
jl
fs
pop
jl
test
add
aam
add
out
add
sti
mov
jnp
add
mov
cmpsl
mov
pop
mov
in
clc
pop
lea
push
lea
push
push
lea
push
push
push
call
push
push
pop
xchg
add
mov
movb
into
enter
mov
xlat
add
add
add
movsb
leave
add
out
add
adcb
add
add
add
lock
add
aad
lahf
lret
add
ljmp
add
mov
loope
sti
push
add
pop
iret
add
push
push
push
lea
push
lea
push
push
push
push
call
addb
in
lcall
add
lahf
add
add
rcll
outsl
jne
add
add
jle
xchg
add
mov
add
add
add
push
push
push
push
lea
push
push
push
call
add
scas
add
add
xchg
movsl
rolb
xchg
ret
add
in
fiadds
push
jp
sahf
add
addr16
popf
les
add
lea
test
xchg
out
jmp
stos
pop
mov
outsl
mov
loope
addl
add
add
stc
push
popf
mov
add
add
loopne
imul
in
pushl
push
push
sub
push
and
add
ror
sub
lea
shl
pop
sub
shr
pop
push
add
pop
push
push
push
push
push
call
popf
mov
jmp
add
loopne
add
lcall
ljmp
add
pop
push
flds
lahf
leave
clc
add
out
add
add
jnp
add
add
add
mov
add
test
sub
pop
call
push
push
not
shl
shr
dec
push
sub
add
inc
not
sub
sub
shl
not
pop
dec
rol
pop
push
lea
push
push
push
lea
push
push
push
push
push
push
call
addr16
js
mov
mov
xchg
add
mov
cli
xchg
add
pop
insb
sti
add
clc
mull
jo
je
mov
loop
pop
push
add
add
add
add
jno
jecxz
add
cld
fiaddl
lcall
jne
push
rol
rol
pop
call
push
push
not
not
pop
call
push
push
sub
push
xor
add
not
sub
add
sub
sub
pop
sub
pop
push
shl
shl
dec
shl
pop
pushl
call
push
add
shr
xor
pop
call
push
push
push
lea
push
push
push
push
call
add
sti
mov
add
or
mov
mov
add
mov
add
mov
mov
aad
mov
push
mov
ja
add
add
add
add
push
out
add
arpl
add
lcall
jns
add
pushl
push
xor
ror
shl
lea
pop
mov
push
sub
shr
xor
pop
jmp
push
push
shr
inc
push
xor
add
sub
sub
inc
shr
pop
shl
add
pop
push
push
call
int3
clc
add
pop
les
add
ljmp
add
xchg
testb
add
fcomip
add
clc
add
xchg
jl
add
cli
add
testb
add
add
andl
jae
stos
jp
add
pusha
mov
stc
out
add
sub
pop
pushl
push
shr
pop
call
push
push
xor
add
shl
ror
pop
call
push
push
add
push
sub
add
lea
rol
sub
pop
add
lea
xor
add
pop
push
not
shr
add
pop
pushl
push
push
push
push
push
push
push
push
call
ljmp
mov
mov
jle
mov
scas
cmc
add
xlat
add
add
add
mov
add
add
test
add
add
testl
sub
pop
call
push
inc
dec
sub
pop
push
push
sub
sub
rol
pop
call
push
sub
pop
leave
add
push
shr
add
dec
pop
pop
pop
push
add
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
xchg
add
add
jle
loop
lods
cwtl
enter
data16
jne
jb
icebp
fldenv
push
xchg
test
xlat
cli
cmp
jmp
mov
loope
icebp
mov
js
std
stos
jmp
sub
pop
pop
push
inc
sub
xor
pop
leave
push
push
push
push
call
jnp
mov
incb
sbbl
add
add
push
add
pop
movsl
add
add
ficompl
pushf
in
aad
leave
mov
lret
add
add
je
jbe
nop
mov
in
lock
lcall
les
push
add
sub
add
shr
pop
leave
ret
push
push
lea
push
push
push
push
push
push
push
lea
push
call
hlt
cwtl
add
movb
add
add
mov
stc
push
ja
add
push
jl
neg
mov
add
add
add
cli
cmc
cmc
shr
lock
add
mov
add
aam
jp
add
push
sub
pop
push
mov
push
xor
not
add
sub
pop
cmpl
jne
push
rol
not
pop
mov
push
push
lea
push
push
push
push
call
outsl
mov
out
pop
add
push
add
add
jno
add
mov
mov
add
scas
add
add
call
jmp
mov
push
sub
pop
and
push
sub
sub
add
pop
xor
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
cltd
nop
scas
add
ror
add
cmc
jne
into
add
add
mov
add
shrl
ja
add
sarb
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
push
call
rcrb
popa
add
mov
fdivs
jmp
mov
xchg
add
add
pop
add
movsl
test
mov
jmp
jge
push
mov
jl
xchg
jmp
mov
add
push
add
in
xchg
rolb
fs
add
test
mov
jp
add
sub
pop
add
xor
push
rol
dec
pop
dec
sub
push
push
push
lea
push
call
leave
hlt
add
add
jno
sti
jbe
rolb
add
add
xchg
fwait
mov
movl
add
sub
pop
jmp
push
shr
sub
rol
pop
sub
push
sub
add
inc
shr
pop
pushl
pop
push
not
lea
pop
sub
push
add
inc
add
pop
cmp
jne
mov
push
ror
add
shl
sub
pop
lea
push
shl
pop
sub
push
push
push
call
int
add
add
add
add
lods
add
mov
add
add
add
mov
add
mov
pop
add
xchg
add
sub
pop
mov
shr
push
push
push
push
lea
push
push
push
push
push
call
add
pop
mov
loop
pop
ficoms
sbb
add
mov
insb
jmp
insb
loope
add
insb
pop
scas
push
lret
gs
mov
aam
mov
add
add
rclb
add
lcall
enter
push
dec
pop
pushl
pop
push
shl
pop
shr
push
push
push
push
lea
push
push
push
push
push
call
fcmovu
add
add
add
add
add
add
push
add
add
push
idiv
add
iret
add
rol
cmpl
push
push
pop
mov
add
jnp
fiaddl
loope
incl
add
inc
rol
pop
sub
push
pop
cmp
jne
push
lea
push
push
push
lea
push
push
push
push
push
push
call
leave
add
out
xlat
add
fcmovbe
xchg
add
jae
jl
add
mov
mov
icebp
js
filds
add
xchg
arpl
push
push
lea
push
push
call
add
add
add
add
test
roll
stc
add
imul
filds
pop
jnp
bound
js
add
leave
push
andb
sub
pop
ret
push
rol
xor
pop
push
mov
push
push
push
push
call
add
addr16
add
mov
test
in
add
add
add
add
jbe
xchg
add
add
add
push
loopne
add
add
aad
fs
mov
cli
enter
push
in
enter
fimull
add
add
sub
pop
add
push
shl
pop
push
push
lea
push
lea
push
call
fwait
add
mov
ljmp
mov
scas
xchg
loop
add
add
stos
add
xchg
mov
mov
in
pop
push
add
mov
add
outsl
test
sahf
pop
add
add
sub
pop
push
push
push
push
push
lea
push
push
call
add
add
add
xchg
mov
popf
add
loope
js
push
out
add
lcall
add
add
add
add
lcall
push
push
push
push
lea
push
push
push
call
add
movsb
mov
xchg
mov
jl
xchg
testb
add
clc
add
roll
add
add
jae
add
add
outsl
imul
add
lods
add
sub
pop
mov
lea
push
xor
sub
pop
sub
push
push
push
lea
push
push
lea
push
call
ljmp
fcomps
fadds
movsb
add
add
jecxz
push
jo
add
test
fwait
add
mull
popf
add
test
add
add
sbbl
lods
pusha
add
add
add
add
stos
add
mov
shr
push
ror
pop
add
mov
push
push
push
lea
push
push
call
rcr
add
mov
popa
cli
add
sarl
add
push
icebp
andb
jge
movl
pop
rcl
add
mov
lds
in
ret
add
pop
ljmp
add
add
mov
in
lcall
pop
or
and
lea
push
lea
push
lea
push
push
lea
push
push
call
add
mov
fisubl
mov
andb
mov
fwait
add
add
mov
add
add
add
add
jle
lea
pop
mov
mov
loopne
add
lahf
fsubp
add
sub
pop
mov
push
push
push
push
push
push
lea
push
call
int3
jbe
add
cmpsb
push
jecxz
test
add
std
push
out
je
cwtl
pop
add
mov
add
add
mov
fistpll
add
mov
add
popf
add
pop
jge
fadd
nop
add
push
call
in
add
push
lea
push
push
push
push
push
lea
push
push
push
call
data16
lock
lock
int3
iret
sarl
xchg
add
mov
add
add
add
sub
pop
xor
push
shl
not
shl
pop
mov
and
push
pop
rol
rol
push
lea
push
push
call
clc
add
jle
add
add
hlt
ljmp
aad
add
add
add
addr16
mov
push
mov
jnp
ljmp
loop
sarb
add
fisubl
add
add
add
push
push
push
lea
push
push
push
call
orl
push
add
add
push
cmpsl
pusha
notl
pop
add
cmpsb
mov
add
sub
pop
inc
cmpb
jne
push
shr
shl
dec
pop
add
push
push
call
add
jne
mov
add
ret
add
add
add
push
add
jl
xchg
movl
add
add
lcall
pop
cmp
je
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
sahf
fsubrp
jl
movl
subb
fiaddl
imul
fcompl
lret
lret
lock
push
movl
loop
add
mov
stc
pop
stos
add
add
scas
push
jnp
aam
mov
add
cmpsb
add
pop
add
add
lcall
jnp
add
test
shr
add
pop
xor
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
jmp
int3
popf
iret
add
lods
mov
add
rcrl
xchg
add
push
add
add
in
push
stos
lea
cwtl
mov
cld
arpl
add
add
loopne
lcall
pop
push
rol
add
sub
lea
pop
pop
push
push
lea
push
push
push
push
push
call
movl
mov
out
repnz
hlt
cwtl
out
stc
mov
fcmovu
add
add
push
add
add
rcrb
lcall
rolb
add
add
in
pop
push
sub
pop
leave
push
sub
pop
ret
mov
push
push
push
push
push
lea
push
push
push
call
add
add
ret
push
rolb
imul
flds
mov
movsb
mov
add
enter
fimuls
testl
add
add
mov
test
cmp
add
add
add
testl
add
scas
lret
lcall
lcall
push
or
push
push
push
push
lea
push
push
call
loopne
aam
lock
add
add
add
call
add
je
push
add
in
add
in
pop
add
out
mov
in
in
lcall
add
push
add
inc
inc
pop
mov
testw
push
push
lea
push
push
lea
push
lea
push
push
call
add
aad
arpl
add
loope
test
add
lret
stos
out
add
jmp
fsubp
jne
jp
add
nop
push
add
mov
icebp
jne
out
fstps
add
fs
std
pushw
push
in
lcall
pop
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
fbld
add
lahf
push
mov
mov
mov
cmpsl
arpl
mov
add
mov
add
jmp
sti
iret
mov
add
add
add
add
add
outsl
mov
ja
pop
add
jle
xchg
shl
jl
xchg
add
in
fcompl
add
iret
in
ror
shr
pop
push
call
push
inc
shl
ror
pop
xor
push
xor
inc
sub
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
popa
fsubl
pop
add
add
les
pop
push
out
mov
bound
popf
mov
add
mov
pusha
mov
pop
push
lea
xor
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
out
addr16
mov
add
add
mov
repnz
hlt
add
jge
arpl
push
add
add
add
iret
rolb
lcall
push
lea
not
shl
pop
pop
push
dec
ror
pop
leave
push
lea
push
lea
push
push
push
lea
push
push
call
std
pop
pop
sti
add
in
add
xchg
ja
jae
movsl
add
repnz
xchg
add
cmc
add
add
outsl
add
sti
shrl
add
cld
faddp
xchg
mov
data16
testl
add
mov
add
cmc
or
in
in
lcall
or
push
push
lea
push
lea
push
push
call
push
pop
add
incb
int
jns
push
push
sub
leave
loop
test
add
push
out
add
add
in
lcall
push
push
push
call
movb
stc
addb
add
movsl
bnd
incb
test
cmpsl
add
pop
ret
mov
iret
mov
aad
mov
xchg
push
bound
push
insb
test
clc
cmpsl
rcl
lret
decb
jmp
add
pop
int3
add
add
push
std
push
repnz
iret
in
mov
sub
pop
mov
push
push
push
call
jle
jl
mov
xlat
ret
add
pop
add
scas
int
rorl
test
mov
add
add
in
hlt
pop
add
push
dec
pop
push
push
push
sub
lea
pop
push
push
dec
pop
push
push
push
push
lea
push
push
push
push
call
not
add
fadds
mov
insb
add
add
aad
mov
mov
test
jecxz
add
add
nop
mov
pop
mov
push
push
push
push
push
push
push
call
iret
mov
mov
shll
hlt
add
lock
add
cwtl
aad
add
add
add
ret
add
push
add
add
pop
pop
add
fwait
add
add
push
xor
not
xor
rol
pop
lea
sub
push
push
lea
push
push
lea
push
call
hlt
enter
push
add
lcall
lock
pushf
add
fwait
add
stc
bound
mov
add
add
mov
add
jmp
fsub
add
xchg
bound
add
test
cli
add
imul
add
xchg
into
je
add
sub
pop
mov
push
push
push
push
push
lea
push
push
call
call
filds
jp
ljmp
mov
mov
xchg
ficomps
add
mov
add
add
xchg
add
add
push
sub
pop
shr
push
push
push
push
push
push
push
call
jecxz
add
add
int3
add
pushf
add
pop
leave
mov
negb
fcmove
pushf
add
in
fs
mov
test
lahf
add
movsb
imul
pop
add
add
sarl
cltd
mov
aad
sub
pop
add
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
cmc
lahf
cltd
loope
shll
in
add
add
pop
leave
add
mov
add
outsl
sti
add
xchg
mov
add
push
and
cmc
repnz
mov
in
fcomps
pop
js
push
push
push
push
push
push
push
call
mov
fsubs
pop
add
add
sahf
lea
xchg
iret
add
test
cmc
loop
add
add
add
add
add
jecxz
sub
pop
add
push
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
fiadds
add
add
loop
incb
add
loopne
orl
shlb
add
add
add
add
add
out
add
mov
aad
shl
add
cmpsb
add
xchg
mov
sub
pop
popl
push
push
push
push
push
push
lea
push
push
call
xchg
pushf
fwait
mov
outsl
mov
jecxz
add
aad
add
mov
lods
add
add
test
cltd
pop
iret
pop
add
add
leave
sub
pop
mov
push
push
push
call
cmp
add
add
add
cmpsl
loopne
fcoms
add
lds
mov
mov
add
pop
lds
add
add
lcall
stc
xor
push
push
push
push
push
lea
push
push
call
add
add
xchg
pop
mov
add
push
rcll
xchg
lcall
je
jp
add
cmc
add
add
jno
cmc
int
add
in
add
add
add
add
in
add
in
in
lcall
adc
push
ror
sub
rol
lea
pop
mov
add
push
add
pop
xor
rol
push
dec
pop
nop
nop
push
add
lea
pop
xor
push
rol
pop
nop
push
xor
ror
pop
nop
inc
push
add
shr
pop
nop
nop
push
sub
shr
pop
cmpb
jne
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
loop
add
aad
cli
rcll
mov
stos
add
add
add
mov
add
add
add
add
xchg
rolb
lahf
lahf
add
jae
push
add
jle
mov
xchg
add
lret
add
fdivs
jmp
add
imul
add
in
fcompl
inc
pop
ss
nop
push
sub
pop
nop
push
lea
push
push
lea
push
push
push
call
mov
test
test
movsb
xchg
aad
push
add
add
in
fildl
jb
add
ljmp
test
add
add
jbe
sub
pop
cmp
je
push
not
shl
pop
nop
nop
push
rol
dec
add
lea
pop
inc
nop
push
xor
pop
nop
cmp
jb
push
inc
add
pop
xor
jmp
push
push
push
lea
push
push
push
call
loope
cltd
icebp
push
in
add
sahf
add
add
jnp
mov
les
jmp
fs
jecxz
rcrl
roll
in
add
andb
add
mov
lea
sub
pop
mov
add
push
lea
push
push
call
mov
mov
add
test
add
outsl
in
lret
imul
cli
testb
xchg
scas
add
std
icebp
scas
add
add
mov
add
xchg
pop
push
push
add
sahf
ret
xchg
scas
rcrb
add
mov
jb
inc
sbb
push
lea
push
lea
push
call
add
add
pop
mov
jo
push
mov
fs
add
add
mov
add
add
xchg
iret
popa
push
loopne
mov
pusha
mov
jne
mov
clc
adcl
push
add
add
sub
pop
add
push
ror
inc
dec
pop
mov
xor
push
shr
pop
xor
push
add
rol
pop
shl
push
ror
pop
xor
shl
push
push
lea
push
push
lea
push
push
call
clc
stos
stc
xchg
pop
in
add
pop
cld
mov
add
add
pop
mov
mov
add
add
out
mov
add
add
mov
jo
add
hlt
add
lcall
popa
mov
lcall
dec
nop
add
loope
push
push
push
push
lea
push
call
add
cmpsl
add
add
mov
add
sti
int
mov
cli
mov
mov
jmp
lret
add
add
testb
in
in
pop
xor
mov
push
add
sub
pop
add
push
push
push
push
call
add
data16
cld
add
add
lds
xchg
add
push
add
adcl
stos
add
fistpll
pop
add
add
jl
add
in
add
add
fadds
add
mov
add
add
pop
pop
push
add
pop
pop
push
lea
dec
xor
pop
pop
leave
push
push
call
add
cmp
mov
add
mov
sti
push
addr16
popa
icebp
add
nop
cwtl
xchg
gs
lret
push
jno
mov
mov
push
xchg
lcall
or
push
push
lea
ror
shl
pop
mov
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
add
add
push
jge
sahf
add
mov
add
add
aad
pop
xchg
fiadds
sub
pop
push
push
push
push
push
push
call
stos
add
pop
lods
cld
add
mov
shl
xlat
add
call
insb
std
add
push
mov
add
mov
aam
mov
fs
in
mov
push
jl
add
loopne
leave
rolb
push
lea
push
push
push
call
loopne
lds
sbb
mov
add
mov
mov
mov
jnp
add
iret
add
mov
ficompl
add
fcomps
std
lods
add
xchg
pop
jae
fcomp
mov
in
lock
push
mov
push
rol
pop
mov
push
lea
push
lea
push
push
push
call
repnz
add
jb
std
jae
out
mov
add
ret
fwait
add
add
jl
push
mov
jo
add
sub
pop
mov
push
sub
shl
lea
pop
test
je
push
inc
inc
add
pop
mov
push
push
lea
push
lea
push
push
lea
push
call
cmpsl
jecxz
add
add
add
fwait
pop
mul
mov
outsl
movsl
add
add
add
jb
jo
add
mov
add
add
add
mov
add
add
add
aam
clc
add
leave
aad
jge
lods
sub
pop
test
je
mov
push
dec
ror
not
pop
mov
mov
push
add
xor
shl
pop
inc
cmp
je
push
push
push
lea
push
call
test
add
mov
loopne
push
in
gs
scas
add
add
add
shl
add
add
add
push
add
add
add
add
add
cltd
add
lcall
jo
popf
jl
mov
in
lock
test
je
push
lea
xor
shl
pop
mov
push
lea
push
push
call
fs
movb
into
in
popf
add
cltd
mov
add
sti
shr
push
add
add
int
add
insb
add
add
in
add
movsb
fistpll
pop
insb
sub
pop
inc
push
push
call
les
hlt
push
aad
add
add
add
popf
add
popf
add
add
add
add
cmpsb
add
mov
aam
fwait
add
add
out
add
aam
mov
clc
lcall
rorb
test
ror
sub
pop
test
jne
xor
push
lea
push
push
call
mov
fwait
add
add
subl
add
adcb
iret
into
faddp
push
cmc
mov
add
add
outsl
add
mov
lcall
push
ror
pop
pop
pop
push
lea
sub
pop
pop
push
shr
ror
rol
pop
leave
ret
push
lea
push
push
call
add
add
insb
push
shll
int3
lds
cmc
mov
add
rolb
mov
jmp
mov
push
lea
add
sub
pop
inc
cmp
jne
push
push
lea
push
push
push
lea
push
call
jbe
add
faddl
pop
popa
nop
add
jns
testb
add
jo
xchg
add
jge
add
sub
pop
lea
push
add
shr
pop
mov
push
push
call
mov
addb
enter
pop
in
jae
jbe
pop
mov
add
add
xchg
flds
xchg
lods
xchg
faddl
pop
mov
pop
add
pusha
add
cmpsb
lods
jmp
lods
add
in
jmp
hlt
loopne
add
pop
int3
xchg
add
sub
pop
test
je
mov
push
lea
push
call
add
hlt
in
xchg
add
push
sti
add
jnp
jl
push
add
add
pop
add
js
sub
pop
add
push
inc
pop
cmp
jne
push
push
lea
push
call
add
add
add
popl
outsl
add
jp
nop
pop
mov
repnz
std
lods
add
push
lds
mov
add
add
add
lahf
pop
jae
jmp
fadds
inc
add
push
lea
push
push
push
push
push
lea
push
call
add
add
arpl
popa
jle
add
add
push
mov
jl
add
push
loopne
pop
add
mov
out
std
outsl
mov
add
xchg
push
call
add
add
add
sti
movsl
add
add
push
add
sub
pop
test
je
push
xor
rol
xor
xor
pop
mov
push
pop
add
push
shr
sub
rol
pop
cmp
je
push
lea
shr
xor
pop
jmp
push
push
push
push
call
fstps
add
add
add
testl
lret
jb
push
test
test
jmp
addl
add
add
lods
xchg
mov
add
movsb
scas
push
add
push
xchg
add
mov
std
cmc
add
ja
loop
mov
add
lret
iret
sub
pop
xor
push
push
push
push
push
push
push
push
push
push
call
add
int
add
add
add
add
xchg
cwtl
sahf
mov
jb
data16
add
xchg
add
fiaddl
lahf
loopne
add
add
in
insb
iret
bound
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
pushf
jle
cmc
jne
add
lock
movsb
sbbl
jle
jne
aam
add
lock
fistpll
test
add
in
add
lock
add
add
add
hlt
jb
mov
sub
pop
pop
pop
push
lea
push
push
push
call
ljmp
add
pop
pop
add
add
add
add
push
add
pop
add
fiaddl
js
loope
iret
add
add
add
jle
sub
pop
leave
push
push
push
lea
push
call
add
cmc
add
add
arpl
pop
pop
fiaddl
out
add
add
pop
add
ljmp
jge
lds
call
mov
sar
fwait
enter
lcall
or
lea
push
push
call
lcall
test
add
lret
add
xchg
pop
aad
add
jecxz
jl
lods
mov
jge
add
mov
std
mov
add
add
add
data16
push
jae
sub
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
pushf
enter
test
add
xchg
add
ja
stos
add
mov
mov
add
add
lahf
in
je
shl
mov
add
add
add
rcll
mov
jl
jp
push
xchg
mov
les
add
add
notb
loopne
lcall
push
push
lea
push
push
push
call
std
mov
lahf
flds
out
data16
movsb
jo
lods
add
shl
push
mov
add
lock
add
ja
add
add
add
push
add
pusha
xchg
mov
jle
ret
out
add
add
sub
pop
pop
push
push
push
push
lea
push
lea
push
call
lcall
mov
add
fiaddl
fcoms
fists
pop
mov
addr16
pop
jo
movsb
pop
add
add
pop
test
add
movb
add
scas
rcl
add
in
call
leave
push
pop
ret
mov
push
xor
pop
pop
pop
push
add
ror
pop
pop
push
push
lea
push
call
ret
addl
add
add
roll
ja
test
xchg
fadds
push
in
jo
add
jb
add
add
scas
mov
add
mov
add
add
add
fmul
fildl
push
shl
pop
leave
push
add
pop
ret
xor
cmp
mov
cmp
xor
adc
and
adc
cmp
adc
cmp
mov
cmp
xor
adc
jb
adc
add
add
enter
aaa
fwait
and
push
sub
add
in
inc
dec
sub
mov
outsl
sbb
adc
jns
or
cwtl
mov
movsb
into
cmp
sbb
sub
mov
dec
mov
popa
push
fnstsw
outsl
lods
push
dec
jecxz
hlt
jecxz
fsubrl
jmp
aam
nop
shrl
nop
mov
jmp
pop
jg
ret
adc
sub
xchg
jmp
jge
push
jb
xchg
xor
and
imul
pop
jle
call
out
xchg
pop
ss
and
test
pop
add
mov
data16
ds
stc
clc
or
into
adc
xor
xlat
mov
dec
les
dec
aam
push
or
jl
xchg
dec
sbb
cld
and
in
fwait
gs
xor
je
aad
mov
leave
sbb
std
aam
mov
pop
fdiv
cmp
adcb
loopne
dec
and
add
jmp
in
imul
or
inc
leave
loopne
hlt
mov
fcmovb
cmp
pop
dec
cmp
push
repnz
push
lods
cmpsb
jmp
imull
sti
push
aad
xor
push
in
dec
pop
stc
aam
call
mov
sbb
mov
inc
cmpsl
sbb
adc
sahf
and
push
adcl
test
sbb
out
jae
mov
cmp
xchg
dec
or
mov
in
clc
pop
or
into
ror
cmp
jo
cltd
mov
lret
out
and
shlb
negl
mov
iret
bsf
or
xchg
test
enter
mov
pop
and
jne
adc
cmpsl
inc
dec
push
repz
shlb
sahf
scas
nop
jb
mov
or
icebp
jne
mov
or
fs
sub
into
inc
inc
jne
pop
xchg
pop
push
hlt
pop
es
adc
cwtl
daa
mov
clc
mov
jae
test
and
push
xchg
fisttpll
cmp
push
lds
cmp
sti
cmpsl
mov
icebp
jle
mov
frstpm(287
lret
dec
xorl
or
xor
int3
jbe
mov
cmp
lret
outsb
cmpsb
dec
adc
cmp
bound
jecxz
mov
test
rcrw
xor
jle
mov
add
push
cmp
cmpsb
repz
ss
adc
or
xchg
mov
lock
dec
out
push
clc
mov
dec
aam
and
sbb
in
adc
add
dec
in
negl
add
jo
mov
in
fnstenv
mov
addb
sub
pop
mov
xor
cmpl
mov
mov
repnz
adc
mov
cltd
orl
cmc
aaa
xor
bound
xchg
sub
out
in
cmpsl
aaa
mov
add
xlat
adc
int
push
xchg
aad
out
sbb
filds
push
div
aam
sbb
jmp
pop
iret
sub
bts
addr16
cltd
cmp
divl
pop
in
pusha
lret
push
scas
in
adc
scas
jns
dec
roll
pop
in
in
jmp
sub
add
adc
xchg
push
push
mov
pop
cmpb
cmp
int
rcrb
sbb
pop
jae
int3
outsl
test
je
mov
pop
je
sbb
arpl
fstpl
ss
fldl
stc
imul
fbstp
stos
adc
jne
outsb
sub
test
in
subb
sti
xor
scas
jb
dec
mov
jne
in
ja
xchg
cmp
jecxz
iret
test
adc
leave
mov
jg
push
xchg
cld
lret
movsl
sete
jne
std
cli
mov
test
jb
push
mov
movsl
dec
dec
int
ficompl
adc
inc
pop
sbb
mov
xchg
sub
aaa
movsl
mov
cs
lods
lret
pop
adc
sahf
pusha
daa
add
aas
ds
xchg
aas
push
pusha
or
xchg
subl
mov
ja
adcb
push
jns
das
movsb
sahf
loope
inc
pop
push
xchg
push
lods
cs
stos
jle
clc
dec
shrb
xchg
mov
cli
adc
in
dec
outsl
push
and
mov
aas
jno
leave
adc
mov
or
xor
xchg
push
mov
nop
push
mov
loop
int
psadbw
sub
ss
fcmovb
inc
dec
add
add
mov
xchg
dec
and
sub
negb
stc
mov
sub
push
repnz
push
popf
fiadds
adc
xchg
and
aam
cmp
stc
dec
jne
fistpl
xchg
das
jecxz
ret
out
dec
std
test
add
jmp
push
sub
or
lock
inc
push
or
xchg
xor
xchg
inc
sbb
mov
mov
fwait
stos
lcall
stc
jecxz
aad
mov
sub
jno
lds
cmp
pop
xor
icebp
push
ljmp
mov
ljmp
cs
or
lret
cltd
mov
rclb
push
and
push
push
and
sbb
shr
xor
clc
inc
dec
out
js
loop
sub
mov
loopne
int
insl
and
pop
lds
pop
stos
mov
mov
fistps
xchg
cmp
jbe
scas
mov
rclb
and
inc
imul
or
xchg
push
add
add
xor
push
fists
test
adc
or
adc
or
adc
comiss
add
jge
es
inc
cmp
add
pop
outsb
stc
and
push
jle
mov
cmp
sub
or
jl
adc
mov
inc
or
adc
mov
movsb
jns
shlb
add
push
xor
jge
jg
mov
daa
sbb
in
push
lret
popa
jae
pop
jl
addb
outsb
jle
sub
sar
ja
push
jp
bound
add
push
imul
push
jecxz
pushf
in
xchg
mov
sbb
sbb
add
jg
sbbl
repz
dec
or
in
fdivl
and
lahf
stos
fidivrs
sub
scas
push
push
cmpsl
fcmovnbe
aas
sub
mov
cltd
cli
sbb
rolb
jo
sub
mov
movsl
sub
enter
push
jne
call
jmp
outsl
cmp
pop
dec
sbb
sbb
pop
dec
nop
pop
fidivrs
pop
jo
loopne
ss
xchg
pop
out
mulb
fimuls
push
mov
push
mov
push
push
cmp
arpl
xchg
cli
jmp
stos
mov
stos
rcrb
repz
in
inc
inc
insb
push
shlb
stos
rcrl
xchg
xchg
push
gs
testl
repz
in
sub
aam
int
imul
xlat
cmp
xlat
cltd
fldcw
mov
arpl
mov
subl
sub
fidivrs
cwtl
aaa
sbb
mov
insl
sbb
idivb
mov
leave
cmp
xchg
add
pop
repz
inc
test
mov
mov
loop
andb
out
cmp
data16
mov
jo
ret
mov
int
jle
inc
add
jns
pop
rolb
pop
ljmp
add
add
pop
inc
sbb
shlb
mov
movsl
arpl
lea
xor
mov
nop
fistpl
and
leave
inc
fiaddl
mov
lcall
mov
orl
jne
jge
dec
ds
ret
jmp
lcall
scas
push
jmp
mov
cmc
push
cli
sarb
or
sarb
mov
jecxz
add
mov
jecxz
inc
push
dec
mov
pop
std
insb
xchg
iret
cmp
xchg
xchg
and
cmpsb
or
lods
jl
cmpsl
mov
and
clc
push
test
jbe
cmp
xor
push
out
add
mov
lock
shll
lret
sub
mov
xlat
insb
xchg
shll
sub
fdivrs
rorl
cmp
jecxz
fldl
popf
push
sbbb
divb
repnz
xchg
fisubs
inc
mov
add
fbld
add
sahf
scas
cmp
cmp
mov
push
sbb
addr16
test
shl
jbe
lods
lods
pusha
add
cld
fdivs
out
dec
les
jge
inc
push
hlt
nop
pop
cmpsl
jmp
jg
dec
test
iret
shl
dec
jecxz
adc
sbb
inc
cltd
ljmp
push
aad
sti
pop
add
push
cmpsb
mov
mov
je
add
push
mov
push
shl
or
xchg
aam
push
jmp
jg
jmp
inc
sbbl
push
pop
lock
test
enter
cwtl
movups
mov
xorb
sub
inc
repnz
shl
fidivrs
rcll
jae
pop
xchg
sub
push
jb
mov
out
adc
mov
fwait
mov
mov
cmp
fdivp
xlat
jmp
mov
cmpsb
sub
dec
mov
cmp
sarl
pop
repz
mov
ja
cmp
xlat
inc
mov
cmp
mov
stos
push
int
ljmp
out
dec
lret
imul
cmp
pop
mov
push
pop
addr16
ds
mov
xchg
mov
push
pop
outsl
mov
sbb
push
shlb
push
jne
jnp
xor
ret
cmc
and
inc
sbb
jmp
dec
inc
daa
inc
shlb
and
aas
scas
add
pop
add
les
dec
add
jmp
jl
add
insl
mov
push
jbe
dec
aam
test
adc
mov
mov
jl
and
inc
aad
cmp
dec
jns
fsubrp
inc
ficomps
xchg
out
fucomp
ret
faddl
pop
mov
sub
mov
jae
filds
daa
sbb
sub
push
inc
std
cltd
mov
mov
hlt
iret
adc
stc
adc
fbld
popf
cmc
into
xchg
inc
shrb
mov
xor
iret
pop
and
stos
hlt
or
cmpsb
adcb
pop
test
sbbl
jo
jno
adc
fs
pop
ss
lods
fstl
les
jns
clc
sub
lock
jp
pop
cmp
ror
mov
inc
into
in
out
mov
sub
mov
and
scas
inc
popf
sbb
aaa
test
dec
dec
xchg
gs
outsb
sbb
inc
enter
inc
dec
mov
jmp
pop
idivb
and
mov
rol
cmp
lods
jnp
popf
and
mov
data16
or
testl
sub
clc
pushf
and
and
jmp
movsl
dec
cli
stos
pop
dec
mov
add
pop
clc
cld
dec
enter
jmp
inc
dec
aaa
jg
fs
mov
imul
cmp
std
aas
jle
inc
fsub
jo
idivb
loop
xchg
mov
cmpsl
pop
pop
icebp
pop
push
imul
sub
mov
inc
cmc
rcr
mov
stos
outsb
dec
mov
stc
mov
push
mov
stc
pusha
mov
adc
mov
jl
decb
popa
popf
add
dec
mov
add
mov
mov
cltd
jl
xchg
fisttps
fldcw
mov
xchg
movsl
cmp
add
xchg
fisttpll
stc
jmp
push
jle
sbb
into
dec
stos
push
fnstenv
and
repnz
pusha
push
cmp
fnstenv
xor
sahf
jp
sub
adc
addr16
add
rcll
mov
xor
sub
lret
jl
xchg
dec
jns
enter
fildll
mov
and
and
and
shl
rcrl
push
out
sub
test
fstpl
mov
mov
adc
daa
divb
mov
pop
insl
std
ror
jo
xchg
inc
xor
fcmovne
fmulp
push
pop
lods
inc
xchg
mov
std
into
sbb
push
fstpt
nop
push
xchg
in
sub
jl
leave
mov
stc
lods
cmpl
aaa
jecxz
repz
jnp
jl
mov
or
sbb
rclb
int3
pusha
sub
push
lock
pop
sbb
xor
push
push
ss
addr16
push
aaa
aam
jnp
pop
aad
cmp
jns
ljmp
sub
sub
icebp
icebp
adc
pop
enter
dec
inc
pop
out
jno
adc
add
inc
or
int3
mov
lea
sahf
and
push
lcall
xchg
cmp
jp
arpl
push
rcrl
jge
aam
mov
fisubl
shr
lret
repz
mov
pop
and
xchg
jmp
mov
sti
mov
nop
out
cli
adc
frstor
xchg
push
sub
sub
sbb
mov
push
adc
pop
js
cmp
repz
in
jae
mov
fmull
nop
xchg
jne
lahf
cmc
jp
xor
mov
inc
out
and
cmp
mov
test
test
dec
and
cmc
sbb
push
or
mov
sti
subl
imull
mov
movsb
addl
fwait
pushf
xchg
and
xlat
fbld
mov
es
fsts
adc
lds
cmpb
mov
in
adc
inc
or
in
ficompl
jnp
push
shll
fidivrl
call
add
cmp
rorb
xorb
push
pop
pop
inc
or
adc
fcomip
cld
lds
rclb
xor
fwait
sbb
arpl
xchg
out
lods
push
push
leave
insb
adc
mov
jle
ljmp
lret
mov
mov
mov
nop
mov
hlt
ror
jnp
mov
movsl
jmp
adc
aam
push
call
jbe
mov
lsl
es
aaa
clc
or
mov
pop
sub
fistl
adc
jmp
xor
or
addr16
insb
repnz
adc
or
xchg
sub
mov
push
stos
jl
das
sub
xchg
cmpl
mov
push
out
and
dec
push
mov
jl
call
xchg
add
sub
scas
lds
push
mov
xor
fisubs
jbe
push
ror
sbb
mov
hlt
lods
loopne
mov
inc
hlt
jg
or
cli
xchg
loope
in
sbb
rol
xor
xchg
outsl
fimull
sbb
jp
push
adc
push
jge
inc
loopne
leave
inc
loope
lods
lret
sahf
dec
mov
out
loopne
fiadds
pop
stos
sbb
jne
les
dec
adc
push
out
or
mov
in
mov
cmc
jne
add
fldt
or
dec
lret
cltd
xchg
inc
push
stos
xor
insl
sub
andl
xor
inc
test
lds
sub
adc
push
into
adc
push
jo
mov
lods
inc
cmpsl
or
mov
imul
xchg
test
loopne
scas
lods
lahf
out
cmp
push
nop
enter
rorl
rorl
rcrl
pop
push
ja
ljmp
xchg
cld
imul
dec
fldt
rcrl
daa
rcll
into
inc
ljmp
sbb
test
loopne
add
repz
ret
push
mov
push
ret
dec
pop
xor
gs
and
scas
cltd
push
sbb
clc
imul
pop
mov
and
and
jno
cmpsl
popf
mov
xchg
dec
mov
mov
test
lock
ss
jle
jmp
shrb
inc
push
stos
sub
je
sahf
addb
xchg
ljmp
loop
repz
insb
cmp
jnp
movsl
xorl
and
xchg
ljmp
pop
sub
mov
lret
popa
mov
fldl
rcll
rolb
mov
mov
push
out
movsl
cmp
pop
ss
icebp
dec
cld
xlat
dec
clc
mov
aad
stos
push
or
sub
sub
fisubrs
pop
xchg
movsb
pop
pop
add
fdivr
aaa
or
adc
or
mov
repnz
inc
stos
xchg
out
ss
and
dec
decb
inc
cmp
lods
jo
imul
push
mov
scas
adc
cmp
call
les
add
shll
out
mov
xchg
movsb
jne
stc
lahf
mov
or
mov
imul
dec
sub
es
xchg
jp
push
das
rcrl
cld
pop
or
leave
mov
inc
dec
xchg
mov
xor
xor
push
and
cmp
fdivrs
xor
sub
mov
fidivrl
mov
adc
jge
cmpsl
jae
xchg
sbb
das
and
es
xchg
xchg
lea
push
adc
es
aaa
mov
mov
ret
xchg
leave
sbb
push
addl
lret
rcrl
lret
daa
test
lret
enter
cmpsl
out
push
or
mov
mov
pop
sarl
push
in
jno
mov
cmp
push
movsb
xchg
xchg
adc
lock
dec
in
fdivl
cmp
and
fwait
mov
or
lcall
push
vprotd
cmpsl
and
sbb
cmp
lods
stos
dec
std
mov
pop
mov
ret
jo
test
push
enter
mov
icebp
iret
jg
dec
push
and
outsb
mov
repz
testl
add
lcall
sti
sbb
inc
ja
repz
pop
stos
es
pusha
stos
mov
movsb
test
adc
cmp
sbb
add
popf
roll
cmp
sub
lock
les
add
test
gs
dec
dec
or
add
mov
jp
lahf
mov
mov
std
mov
aam
jne
push
test
imul
scas
push
dec
xchg
ss
push
fs
xchg
popf
mov
push
push
ss
jnp
push
das
pusha
adc
pop
push
jbe
mov
pushl
adc
data16
xchg
mov
jbe
in
jmp
mov
or
sarl
pop
jns
mov
dec
aaa
repz
xor
mov
out
and
xlat
loop
fisttpll
mov
cltd
jnp
pop
fs
mov
pop
lea
inc
and
push
inc
scas
lea
pop
and
scas
jbe
xor
push
jp
in
mov
insb
lahf
ss
shll
cmp
push
mov
fnstcw
sbb
cmp
imul
leave
popf
mov
xlat
inc
neg
or
pop
cmpsb
cmpsl
loopne
nop
xor
cmp
and
xor
or
jb
or
test
pop
xor
ror
xor
in
sbb
inc
dec
fsub
inc
mov
mov
pushf
or
sbb
adc
mov
or
jae
push
adc
cli
call
out
arpl
sub
les
lods
adc
sbbb
lods
mov
mov
mov
xchg
pop
repnz
adc
sahf
xor
movb
jno
repz
incb
cltd
in
and
lods
adc
xchg
outsl
xchg
xchg
shlb
out
jmp
roll
and
lcall
sbb
roll
mov
jge
pop
or
cmc
fs
lods
addl
fildll
pop
pop
and
mov
lahf
pop
iret
negl
lds
ds
cltd
loope
ret
xor
arpl
mov
ljmp
sbb
ja,pt
out
add
jecxz
sbb
jne
cs
push
imul
cmc
ret
sti
movsb
je
shll
invd
fidivrl
lret
push
cmc
movsl
and
pop
jns
sub
jle
mov
cmp
jle
xor
es
xchg
ja
je
push
and
repnz
ss
mov
mov
mov
and
lods
xchg
dec
push
xchg
push
dec
stos
insl
add
fldcw
ret
iret
pop
xchg
or
sbb
outsl
cmpsb
adc
mov
adc
mulb
addl
jb
shll
xchg
add
push
sub
mov
int
scas
scas
loope
out
inc
or
out
pop
push
add
pop
dec
out
push
and
lods
xchg
daa
xchg
cs
clc
mov
mov
add
add
sbb
jne
jns
insl
jae
rcl
push
mov
xor
push
shrb
ret
mov
in
mov
dec
pop
in
sub
dec
fnstcw
clc
and
mov
mov
fldl
popa
addr16
xchg
inc
mov
dec
sub
in
repz
jo
mov
popf
addr16
pushf
jp
dec
int3
add
jmp
popf
push
xor
push
jns
pop
push
rcl
mov
bound
stc
clc
jecxz
test
rorl
add
aaa
stos
imul
jmp
movsl
aam
out
add
imul
mov
push
jp
addr16
das
mov
out
lods
xchg
fistl
pop
pop
xchg
and
insb
push
insl
mov
enter
stos
aad
and
mov
popl
mov
inc
adc
out
mov
dec
ds
or
mov
aad
and
push
jb
test
mov
enter
dec
imul
hlt
loope
stos
push
and
inc
sar
pop
popf
push
lret
jmp
xor
pop
dec
and
hlt
test
fs
jecxz
fnsave
sbb
lret
shll
jle
in
lock
dec
bound
mov
out
jmp
stos
mov
jbe
or
xor
outsb
sbb
pop
add
cmp
ja
fidivrs
mov
pop
jo
fisubl
jns
in
cmc
add
out
xchg
sub
les
cwtl
jle
inc
inc
out
adcl
cmpsl
cmc
xchg
mov
gs
loop
xchg
xor
inc
pop
mov
loop
sbb
mov
call
test
mov
pusha
push
jne
sub
adc
push
xchg
mov
lcall
pusha
inc
mov
xchg
lcall
adc
and
pop
adc
cld
adc
xchg
pusha
mov
aam
mov
movsl
loope
sub
cld
sbb
ss
popa
pushl
fsincos
hlt
popf
push
cmpsb
pushl
ret
add
vmovaps
cli
aas
or
jnp
mov
mov
pop
test
cld
into
stos
lea
sub
add
mov
call
test
shll
imul
outsl
insb
stos
hlt
sbb
inc
movsb
pop
shll
shll
xor
and
stos
lcall
xorb
fcomp
inc
pop
and
stc
or
ja
repz
xor
ja
cmp
sti
stos
xchg
fcompl
dec
xchg
inc
and
push
sarl
shlb
sarb
fprem1
es
jl
push
mov
loop
mov
mov
out
in
mov
jae
lret
je
lahf
subl
jno
push
lock
push
cmpsl
test
push
lahf
jae
inc
aam
std
xchg
cld
push
loope
out
mov
out
add
inc
push
fisttps
fldt
mov
scas
rclb
dec
rclb
xchg
jecxz
push
cmp
push
fadds
test
cmp
mov
mov
jno
mov
pop
mov
or
popf
cmp
inc
mov
mov
std
fs
cltd
ret
shlb
fs
inc
shl
sti
outsl
adc
dec
outsl
ljmp
imul
imul
cmpsb
inc
push
xor
ret
fiaddl
test
or
and
pop
mov
pop
inc
mov
cmc
cmp
loope
jno
fstps
in
fs
jge
outsb
clc
jb
fucomp
hlt
outsl
gs
loope
cmpsb
pusha
mov
jb
xor
into
stc
pushf
cmp
movsl
cltd
fidivs
push
cmp
loope
pop
stos
testl
and
sbbl
bnd
stos
shll
leave
shll
loope
iret
scas
mov
push
pop
repz
inc
inc
push
push
outsb
mov
xsaves
inc
imul
sbb
jnp
mov
cmpsl
out
pop
sbb
and
vmovapd
aad
push
push
xchg
shrb
add
mov
stos
daa
adc
shll
mov
loope
lds
aaa
rcl
pop
cs
inc
int
jb
pop
sub
adc
mov
or
pop
ret
jnp
lcall
or
sar
icebp
inc
hlt
inc
pop
xor
and
lods
add
mov
cmp
xchg
fs
pop
cwtl
push
dec
and
inc
add
dec
cmp
sub
sbb
icebp
lods
mov
sub
movsb
xchg
nop
lret
pop
ret
xchg
and
sub
je
xor
mov
movsb
enter
addl
xchg
sub
add
xor
mov
xchg
addr16
xlat
es
sarl
xchg
lret
pop
insb
adc
out
addr16
mov
int
sub
out
lods
jnp
std
or
test
pop
push
jecxz
mov
nop
cmp
add
sbb
cmp
sbb
mov
jmp
push
enter
or
pop
sbb
xchg
ja
cmp
repnz
push
in
adc
aaa
bound
ds
stos
mov
pop
jb
xor
push
popf
push
call
iret
sub
shrl
jno
adc
sub
xor
push
ds
jne
jb
mov
lds
mov
rclb
cli
mov
jecxz
stos
loope
out
mov
je
ret
daa
xchg
mov
pusha
or
and
scas
pop
popf
mov
push
sbb
sub
cltd
mov
popf
test
dec
lahf
adc
fwait
test
cmc
push
add
test
test
inc
jb
scas
xchg
mov
leave
ss
lahf
ja
mov
mov
jmp
bound
shlb
mov
sub
xor
sbb
loope
rorl
rorl
inc
into
leave
add
sbb
mov
jge
cmp
stc
call
push
jp
ss
mov
cmp
pop
sbbl
outsb
push
mov
inc
rorl
add
sub
inc
imul
in
outsl
sbb
xchg
inc
call
sbb
movsb
sahf
jb
mov
dec
inc
pop
inc
xor
pop
jmp
mov
push
jle
fists
ret
outsl
pop
push
adc
mov
jne
xchg
cmc
shlb
or
jnp
add
and
out
clc
ja
gs
mull
pop
fisttpll
cmpsb
fsubl
es
scas
leave
in
aam
xor
out
fnstcw
fidivs
push
pop
std
aas
clc
sub
xchg
mov
add
add
shll
mov
notb
mov
flds
push
or
lods
mov
push
inc
bound
add
loope
adc
and
loope
jp
xchg
push
imul
xor
push
pop
mov
xchg
outsb
dec
add
push
sub
je
mov
mov
fiaddl
dec
rol
xor
into
cmp
sbb
xchg
mov
lock
or
jns
mov
daa
sub
call
aaa
sub
jle
dec
ljmp
dec
stc
leave
jmp
jno
mov
and
xchg
push
mov
dec
sbb
in
jnp
dec
lcall
mov
in
mov
incb
push
add
int3
pop
dec
inc
or
sub
scas
lock
and
cld
or
ss
mov
imul
insb
or
popa
mov
test
out
ja
jne
inc
push
in
dec
mov
push
xchg
adc
fsubrl
xor
out
xchg
xor
jo
enter
jl
roll
or
sub
jne
popf
mov
mov
pop
xor
outsb
or
and
imul
jbe
lds
mov
xchg
pop
cmp
push
lock
cmp
or
push
and
xor
arpl
xchg
cmp
xchg
dec
push
lds
fistl
ror
fsubl
lds
insb
lds
lods
mov
pop
mov
fld
xor
test
dec
pop
inc
test
js
xor
lock
xor
inc
ja
leave
pop
or
movsl
stc
push
mov
shlb
cs
mov
or
pop
pusha
jp
int3
jmp
imul
dec
dec
in
xchg
xchg
insl
dec
xchg
jns
jbe
ds
in
push
loope
repz
jecxz
dec
icebp
fisubs
dec
fnstsw
or
or
movsl
in
xchg
dec
idivb
cmpsl
popf
sarb
jmp
sub
push
mov
cmp
sahf
and
jmp
pushf
push
adc
daa
movsb
xchg
or
and
push
or
fwait
lret
push
add
sub
push
and
mov
shrl
aam
inc
xor
sti
dec
inc
jg
inc
cmp
aam
xor
jbe
pop
cmp
push
xchg
cwtl
notb
or
dec
or
aam
pop
adc
push
pop
or
rol
hlt
lea
xor
addb
cmp
inc
xchg
mov
xor
stc
les
enter
push
cmp
xchg
add
cmp
sbb
sub
sbb
hlt
and
in
dec
mov
jo
or
mov
filds
lods
cmpl
inc
bound
in
lods
fnstsw
and
add
sub
push
out
or
out
rclb
sbb
fcmovnbe
xor
cmp
jmp
fwait
adc
mov
imul
cmp
sbb
notl
or
mov
xchg
xchg
dec
andb
cmpl
and
push
add
cmp
in
fwait
mov
mov
mov
cmp
mov
jae
xor
push
pop
ds
je
mov
dec
or
jmp
inc
mov
sub
rcl
sbb
xor
shll
push
adc
mov
add
mov
and
dec
and
mov
mov
dec
mov
jno
fildl
pop
notb
jbe
pop
cmp
outsl
hlt
loopne
mov
or
outsb
hlt
enter
insl
fcomp
jmp
xchg
call
add
or
push
loopne
mov
sahf
or
aad
pop
fdivs
or
sub
add
sbb
or
pushf
cmp
add
lods
xchg
sub
mov
and
push
roll
jl
adc
mov
jno
loope
out
cmc
push
in
push
add
sti
xor
fimuls
aas
xchg
xchg
mov
gs
in
or
ret
mov
mov
add
enter
jno
add
les
fwait
imul
mov
mov
sarl
jge
mov
lods
inc
mov
dec
push
mov
dec
adc
sub
outsb
inc
pop
xchg
inc
xchg
daa
cli
ljmp
sub
loop
inc
jp
jb
outsl
cmp
js
dec
fldcw
inc
test
cmp
roll
xchg
das
dec
xchg
mov
adc
adc
xchg
in
scas
or
inc
unpcklps
pushf
jp
push
lret
jl
sub
je
lods
pop
mov
mov
sahf
rcrl
fwait
jno
or
sub
xchg
aaa
lock
dec
notl
loop
mov
ret
out
aas
mov
cld
xor
mov
outsl
cmp
mov
clc
shl
mov
sbbb
or
notb
rclb
out
stos
je
gs
ret
popf
repnz
mov
loope
add
movsl
and
pop
and
xchg
decl
lret
jecxz
cmpsl
mov
repnz
ret
cmp
mov
xchg
out
ljmp
scas
in
pop
adc
jmp
push
clc
adc
lock
ja
adc
push
and
inc
mov
hlt
ret
adc
cwtl
cltd
in
dec
fsubl
pop
sub
imul
shrb
sti
adc
in
mov
sbb
mov
pop
test
fldcw
dec
in
lods
sub
mov
cmp
popf
or
dec
sbb
in
jne
cwtl
push
icebp
jbe
push
cld
pop
scas
and
push
jns
mov
mov
in
mov
sbb
mov
sbb
jno
push
les
and
pop
insl
sub
xchg
push
and
dec
mov
divl
popf
leave
or
inc
mov
cwtl
xchg
outsl
jge
jae
inc
jo
cmp
test
daa
out
dec
bound
mov
in
fadd
xor
fstpl
jno
arpl
and
out
inc
jno
imul
push
imull
mov
pop
dec
imul
stos
cmpsl
sub
lea
sub
xor
mov
lock
lret
dec
fcom
mov
inc
orl
cwtl
out
lret
dec
icebp
cwtl
jno
mov
sub
xchg
mov
sti
sti
and
addb
xchg
xchg
jnp
outsb
cmp
mov
or
aaa
lods
fiadds
or
sbb
movaps
das
xchg
ss
inc
dec
push
orb
rolb
nop
out
push
fcmovnu
movsl
pop
push
or
movl
xor
push
sub
xchg
test
stc
shr
inc
jge
int3
mov
in
xor
dec
daa
push
push
sar
iret
cld
xor
jb
movsl
outsl
jns
xor
leave
scas
lods
xchg
insl
adc
mov
push
ljmp
pop
mov
popf
adc
inc
push
call
mov
mov
pop
xchg
mov
jae
xor
pushw
adc
aad
inc
add
arpl
adc
jae
cli
les
lahf
into
rclb
jecxz
es
push
popa
push
jae
push
xor
mov
inc
xlat
div
sbb
fsubl
in
pop
xchg
inc
outsb
ljmp
inc
aaa
dec
push
arpl
addl
inc
inc
xchg
subl
out
sbb
aam
aas
mov
test
subl
mov
mov
stc
mov
dec
sub
mov
mov
sub
mov
mull
inc
test
lock
pop
loop
ja
cmpsb
repz
inc
jle
jb
nop
pop
and
sub
jl
or
mov
movsb
and
xlat
gs
mov
inc
mov
bound
push
inc
xor
mov
outsb
push
out
fidivs
call
mov
and
xlat
or
sbb
mov
jnp
sbb
jp
mov
or
aam
neg
xchg
mov
call
jmp
push
rclb
mov
fidivl
mov
xchg
mov
xchg
repnz
lds
jne
pop
loop
cmp
mov
rcrl
cmp
iret
sti
and
repnz
ljmp
data16
hlt
rclb
loop
dec
adc
adc
addr16
sbb
jb
xchg
push
mov
jecxz
shlb
inc
pushf
add
pop
jnp
jo
and
and
pop
popa
mov
mov
ficompl
out
or
lret
cld
and
jae
cmp
repz
pop
int3
jns
ffreep
cmp
sub
lods
mov
inc
push
fdivs
arpl
inc
adc
mov
or
jne
dec
inc
stc
ljmp
xchg
ffreep
out
xor
aas
mov
sbb
in
clc
sahf
in
mov
imul
stos
and
mov
sub
adc
adc
push
jmp
iret
in
popa
and
scas
mov
fcmovbe
jmp
jae
mov
imull
add
gs
lods
mov
jle
and
pop
adc
lock
pushf
shll
imul
lock
push
inc
xchg
jecxz
iret
mov
int
xlat
repnz
fdivp
jecxz
lea
lret
adc
mov
xchg
in
iret
and
rcl
ds
outsl
test
mov
jns
sbb
addr16
int3
filds
fsts
xchg
mov
bound
jle
sub
lods
pop
jp
fistl
jg
or
and
repnz
pop
cmp
push
das
inc
int
pop
xchg
push
add
sbb
movsb
test
repz
hlt
fstpl
sub
dec
ds
sbb
fsubrs
out
arpl
fistl
push
ret
data16
sbb
xchg
pop
and
or
pop
and
fildl
adc
int3
push
add
pushf
mov
int3
sbb
call
pop
xor
push
dec
fsubrl
sbb
push
cmp
loopne
inc
imul
sbb
pop
dec
dec
lock
sti
xchg
xchg
or
aam
push
repz
cmpsb
mov
pop
pop
imul
or
out
in
movsb
sbb
jg
push
fldpi
lods
cmp
or
ja
dec
dec
aam
mov
iret
inc
std
out
jg
sub
hlt
enter
push
std
sub
mov
sub
out
push
pop
ljmp
rorb
mov
arpl
pop
in
mov
mov
mov
mov
cmp
xlat
das
mov
lcall
inc
ds
inc
add
inc
popf
scas
push
test
repnz
sti
out
xchg
lea
or
aam
ds
push
push
in
andl
shlb
jns
xchg
jp
pop
dec
scas
cmpsl
cs
or
inc
add
movsb
xchg
adc
jl
popf
std
cmp
dec
mov
aaa
or
xor
insl
jg
mov
loope
in
out
inc
addr16
adc
xchg
aas
push
xchg
mov
icebp
xor
stos
inc
into
jecxz
mov
test
lds
push
xchg
fmuls
and
pop
jno
mov
rorl
sub
stos
mov
lret
mov
dec
ret
and
ret
dec
movsb
mov
lret
hlt
ljmp
add
ss
insl
stos
inc
insl
lock
xor
stos
test
and
ffree
iret
fistl
fsubs
cmp
es
pop
and
movsl
mov
xchg
lods
jns
jnp
int
fimull
adc
inc
mov
adc
sti
rorb
es
mov
sahf
sub
ss
ret
push
jne
adc
cmpsl
out
jge
mov
cmpsl
add
jnp
jo
pop
cs
daa
mov
shrl
xor
mov
test
mov
push
mov
clc
inc
or
repnz
xchg
sbb
mov
xlat
mul
lds
test
mov
xlat
loopne
enter
push
out
idivl
adc
cmp
mov
mov
mov
mov
cltd
inc
mov
popf
inc
fs
fidivl
shll
test
sbb
andb
mov
bnd
mov
aad
sbb
pop
fadds
mov
das
cmpsb
lds
sub
push
cmpl
dec
adc
push
mov
adc
daa
push
mov
ja
inc
mov
jnp
dec
int3
movsb
pop
sti
sub
out
scas
mov
dec
mov
sub
mov
add
pusha
stc
roll
pop
loop
mov
pop
xlat
into
jns
pusha
cltd
xchg
mov
add
scas
jno
mov
clc
jecxz
mov
adc
pop
data16
les
std
stc
mov
add
pop
and
cmp
sbb
mov
jge
repz
in
jge
ljmp
loopne
int3
in
mov
aaa
add
sbb
sub
or
arpl
sbb
mov
and
sbbl
repz
cli
inc
inc
sub
jmp
mov
or
pop
ret
mov
xor
or
ja
push
fbstp
ret
fwait
inc
btc
push
cmc
pop
cmpsl
cmpsb
add
lea
ja
pop
aas
pushf
pop
inc
es
pop
xchg
ret
and
divps
mov
jns
lret
and
add
daa
mov
pop
ret
out
scas
lret
mov
mov
mov
adc
pop
jo
loopne
frstor
loopne
iret
xor
xchg
test
dec
roll
cmpsb
adc
lods
int
adc
cmp
adc
pop
movl
mov
dec
arpl
lret
mov
les
sbb
mov
pop
rcrb
push
ds
pop
push
pop
popf
pusha
xchg
arpl
inc
adc
add
scas
add
pop
inc
cwtl
dec
dec
pop
and
mov
push
outsl
repz
fbstp
pop
mov
sub
dec
ret
mov
lock
add
add
mov
pop
mov
sub
xchg
cwtl
jbe
movsl
cmp
mov
push
popa
rcrb
cmp
pop
add
ss
pop
jne
ljmp
inc
test
sub
fldt
repnz
cmp
pop
sahf
cwtl
push
cmpsl
add
out
dec
out
sub
sbb
pop
cltd
or
or
leave
push
inc
fdivrs
or
outsl
dec
jl
insl
pusha
push
xchg
sti
shrl
outsb
cltd
mov
inc
mov
pop
sbb
fnstenv
lods
lcall
outsl
clc
and
fimull
dec
push
call
sbb
push
bound
mov
or
ja
sub
pop
test
jl
and
cmp
add
jo
inc
pop
out
and
test
pop
sbb
mov
leave
mov
popa
sub
cs
int3
cld
bound
nop
xor
les
into
xchg
xchg
jp
mov
loope
jbe
xor
add
cmp
xchg
and
popf
push
pop
and
fnstsw
inc
out
xchg
jae
imull
mov
fisubrl
inc
test
push
and
push
pop
js
xor
test
push
mov
xchg
fdivs
sbb
mov
sub
jp
sahf
mov
push
stos
pop
les
pop
sub
leave
aaa
popa
pop
pop
arpl
ds
mov
jmp
sti
xchg
movsl
popf
mov
pop
push
dec
adc
lret
dec
sbb
sbb
cmp
jmp
mov
push
imul
loope
and
xor
pop
out
push
dec
jg
mov
enter
pop
shrb
addb
aas
mov
pop
push
lock
int3
fwait
pop
push
jo
in
pop
cli
cwtl
cwtl
mov
mov
bound
sbb
mov
lds
push
pop
cmp
sub
test
or
mov
daa
xor
imulb
xchg
lds
shlb
je
mov
jo
dec
xchg
js
fisubs
cmp
or
mov
adc
fisubrs
mov
xorl
outsl
mov
popf
lds
inc
or
loope
movsl
jl
movsb
cmp
jae
mov
mov
jge
sub
lods
dec
nop
jmp
fimuls
inc
mov
imul
add
jne
ret
pop
pop
aam
lcall
adc
mov
sub
fcos
ret
lds
scas
rcrb
inc
popf
xchg
das
or
fisttps
push
add
push
jb
pop
push
es
push
jl
dec
push
dec
or
or
push
lcall
and
orb
and
outsb
fs
shlb
mov
inc
add
iret
xchg
dec
and
sub
jmp
or
notb
outsl
dec
or
outsl
call
dec
or
add
testb
mov
addr16
cmp
sub
push
xchg
mov
and
dec
jae
enter
fstpl
aaa
movl
inc
fsubrl
test
pop
popa
xlat
aam
jns
mov
imul
xchg
xchg
adc
cld
mov
jle
pop
dec
push
push
mov
pop
mov
dec
mov
adc
dec
mov
sub
sbb
pop
xor
aam
sbb
arpl
add
inc
ds
xor
shlb
and
lods
mov
ja
fdivs
sbb
sub
mov
jno
add
xchg
lret
mov
dec
test
insl
mov
pop
xchg
fwait
scas
push
or
mov
or
jecxz
cltd
pusha
es
incl
xor
loopne
pusha
adc
or
frstor
rcl
and
mov
pop
inc
fnstenv
jecxz
lahf
imul
pop
sbb
imul
cltd
mull
lcall
push
pusha
daa
pop
adc
mov
push
pop
pop
cmp
cmp
lea
jp
arpl
cltd
iret
out
scas
jg
or
lea
movsb
mov
testl
inc
jle
outsl
fstpl
shl
mov
std
sub
mov
movsb
leave
pop
mov
dec
mov
inc
iret
mov
ror
cmpsb
sbb
cmp
divl
add
cmp
sbb
push
cwtl
sbb
imul
popa
mov
test
cmp
subw
in
out
sbb
xor
mov
mov
sub
mov
inc
cmpsb
mov
hlt
mov
fdivl
lahf
xchg
icebp
or
lods
push
stc
sub
lahf
sarl
xor
mov
sti
jle
xchg
sbb
and
mov
xchg
cmp
jne
mov
loop
gs
lea
dec
mov
or
shrl
xor
cmp
cs
add
lahf
jecxz
pop
and
and
mov
insb
std
push
jp
jnp
cmp
pop
insl
dec
xor
xchg
out
or
jb
sub
jo
call
jmp
cmc
xlat
int
jno
insl
or
mov
test
dec
adc
mov
xor
mov
repz
sub
dec
push
adc
mov
sub
cmp
in
jo
iret
pop
inc
push
adc
je
cli
jmp
mov
lret
imul
pause
pushf
jge
pop
movsl
push
dec
aad
sub
test
xor
mov
movsb
ds
push
cs
dec
jae
mov
push
pop
aad
and
out
ret
das
scas
cmp
jne
xchg
jns
in
xchg
lds
pusha
lret
dec
out
sahf
jg
push
js
cld
stc
movsl
push
outsl
jb
in
xlat
insl
pop
sbb
in
and
outsb
jb
xchg
xchg
jge
push
cmpsl
mov
xor
cmc
cmp
pop
fldenv
outsb
lods
insl
adc
inc
mov
sub
add
les
ret
xor
or
out
stos
and
xchg
push
push
sbb
scas
mov
mov
dec
fisubs
mov
jnp
pop
sbb
cmpl
cmc
js
std
aaa
adc
shlb
xchg
or
arpl
or
xor
fcomp
out
push
sub
in
lods
cmc
or
outsl
xor
outsl
push
test
lods
repnz
loope
adcb
cmpsl
inc
pop
pop
inc
je
or
xor
pop
icebp
xchg
push
xor
dec
sub
pop
mov
xchg
push
add
add
cmp
lock
in
inc
shl
mov
sbb
lret
inc
sbb
cwtl
dec
dec
outsl
fwait
mov
pushf
xchg
xchg
fmuls
inc
enter
sar
xor
jp
inc
jle
xchg
mov
jmp
jp
shl
mov
mov
mov
cmp
call
daa
dec
push
movsb
add
xchg
in
out
push
inc
pop
pop
jmp
enter
dec
jge
dec
sbb
dec
repz
mov
mov
out
popf
push
decb
cmp
sub
ret
leave
mov
adc
outsl
dec
sti
arpl
frstor
xchg
das
jg
insl
push
inc
cli
incl
dec
rcll
pop
or
lret
dec
cwtl
pop
add
rcrl
test
int
lds
lock
push
mov
push
js
push
loope
outsl
and
xchg
and
stc
pop
sub
shlb
mov
push
sub
pop
xor
cmp
xchg
adc
inc
cmc
pusha
dec
shl
addb
push
shll
sarl
mov
jns
mov
out
dec
iret
push
xchg
insb
and
dec
hlt
test
mov
fnsave
mov
insl
test
in
sbb
xchg
push
xchg
push
mov
cmp
clc
lods
out
in
pop
push
dec
cmp
push
mov
pop
push
push
icebp
out
xlat
xor
adcb
cmpsl
out
pushf
xchg
jl
mov
ret
and
mov
or
pop
pop
fsubr
sbb
inc
insl
rol
mov
xchg
outsl
leave
jns
ja
push
jg
pop
or
xorb
cli
imul
mov
mov
loope
mov
data16
push
fcmovnu
add
ja
cmpsb
jmp
push
ret
call
adc
mov
movsl
aam
orb
pop
push
cmpsl
and
xor
lds
lahf
inc
fdivl
jge
xchg
addr16
xor
mov
sbb
mov
mov
xchg
adc
mov
adc
and
and
mov
adcl
lds
ss
gs
jle
repnz
testb
insb
punpcklwd
or
icebp
mov
mov
mov
dec
in
adc
jp
movsb
repz
ds
xchg
mov
dec
add
and
mov
inc
lea
xchg
mov
sub
fisttpll
xor
and
mov
nop
sarl
mov
aaa
popa
lahf
push
or
cs
xchg
dec
mov
xchg
jle
rcrl
push
mov
inc
or
fs
and
aad
adc
aas
dec
cmpsl
in
dec
shrb
push
and
mov
imul
stos
ret
in
xchg
int
insb
test
jnp
mov
repz
sbb
and
push
lock
push
push
mov
clc
enter
jecxz
push
mov
xchg
xchg
inc
ss
loope
test
pop
cmp
nop
ja
mov
in
fisttpll
iret
jbe
adc
scas
fxch
push
insb
cld
dec
sbb
xor
popl
mov
jmp
dec
push
and
mov
lods
jg
fldt
enter
mov
test
jl
jne
mov
enter
gs
sub
inc
jae
jle
and
mov
jmp
cmp
add
adc
pop
pop
mov
and
stc
mov
ss
arpl
pusha
loop
pop
mov
pop
bnd
cmp
addr16
popa
aam
int3
adc
push
pop
inc
pop
adc
pop
sub
push
mov
fstpt
inc
mov
and
iret
jge
frstor
test
movsb
adc
arpl
and
popf
inc
in
test
movsl
sahf
out
ss
std
fadds
push
sbb
pusha
ja
inc
flds
scas
jae
ret
inc
sub
aad
les
arpl
divb
sahf
xlat
xchg
xchg
mov
inc
adc
push
jbe,pn
xchg
ljmp
pop
mov
mov
pop
dec
and
js
imul
leave
sbb
inc
imul
jne
shlb
or
movsb
mov
push
call
pop
roll
les
sub
pop
ss
pop
mov
mov
mov
insb
std
test
mov
repz
bound
sbb
push
cltd
neg
dec
jbe
leave
inc
pop
mov
fld
cmpsb
aaa
add
rorb
inc
pushf
cmp
outsl
mov
adc
dec
pushf
dec
lahf
cmpb
pop
pop
mov
mov
arpl
mov
aas
mov
movb
xchg
mov
stc
push
imul
shrb
pusha
mov
js
stc
xor
push
data16
add
mov
sbb
mov
push
clc
jo
push
imul
test
cmpsl
pop
lahf
sarb
incl
adc
pop
lcall
decb
sub
pusha
shrl
sub
je
negb
sub
push
lahf
dec
das
mov
lcall
imul
cmp
shlb
insb
rol
pop
adc
std
mov
push
jg
icebp
ds
adcl
push
rclb
mov
lret
adc
lret
sahf
leave
cmp
ss
sub
and
movsl
jg
lret
adc
jge
or
mov
popa
ret
aaa
sub
cwtl
adc
jecxz
or
cmpsl
insb
aaa
jno
lret
pusha
or
mov
in
dec
xchg
rorb
xchg
lods
cmc
adc
outsb
mov
pop
adc
stos
clc
cld
pop
mov
xchg
pop
cld
mov
dec
stc
loopne
xchg
jle
je
pop
out
fbld
es
aaa
adc
mov
xchg
movsl
imul
xor
jns
or
lds
mov
pop
jo
loopne
inc
cltd
push
sub
jmp
mov
js
lods
push
movsb
mov
cmpb
daa
jae
test
xlat
cmp
push
fdivrs
aaa
ret
cmc
mov
add
lods
xchg
jns
mov
addr16
xchg
leave
push
and
pop
lods
sarb
addr16
lock
and
pop
xchg
adc
pop
mov
lods
sbb
lods
mov
pop
rorl
sub
lcall
dec
dec
mov
cmp
std
sbb
in
imul
fucom
lods
adc
push
into
push
fxtract
xchg
pushf
mov
movsb
jg
mov
and
push
xchg
mov
addl
jo
add
pop
outsb
sub
sbb
fisubrs
sbb
jns
jecxz
pop
push
xchg
sbb
pushf
ret
in
lret
ret
cmp
movsb
loop
sub
pop
loopne
addb
inc
fucomi
jbe
dec
add
push
lahf
fisubrs
jne
rcrb
mov
ficoms
cmpsb
xchg
call
and
jno
push
mov
adc
test
fsubrs
jns
fisttps
pop
js
addr16
fists
shll
daa
popa
mov
mov
jno
pop
xor
and
insb
cmc
std
lcall
fistpll
sbb
add
sbb
cmp
mov
cwtl
dec
xor
out
mov
adc
insl
sbb
or
jnp
test
stc
adc
loopne
push
xchg
mov
addr16
push
fstpl
movsl
add
movsb
aam
mov
rorl
jno
mov
mov
sbb
jp
sbbl
cli
mov
cmp
xlat
and
pop
psubsb
pop
out
pushf
jbe
adc
adc
dec
and
cmp
sub
mov
es
mov
push
jno
sub
push
cmp
xchg
rolb
xorb
mov
jmp
lret
mov
mov
sbb
mov
mov
mov
inc
pushf
mov
stc
xchg
les
aam
scas
test
popa
nop
pmuludq
scas
fbld
andb
jae
repz
adc
pushf
enter
dec
pop
sarl
sbb
adc
xor
dec
sbb
addr16
dec
pop
mov
mov
rol
mov
jno
mov
loop
fwait
mov
popa
cmpsb
xchg
push
push
add
push
adc
and
dec
push
mov
dec
sbb
adc
jbe
add
sarl
cmp
loop
cmp
cmc
inc
jge
sbb
jo
pushf
sarl
int
inc
mov
das
mov
insb
sbb
xor
dec
add
sbb
mov
inc
or
test
dec
inc
xchg
push
scas
out
push
adc
xchg
jle
in
inc
lds
adc
adc
js
and
filds
std
jg
fildll
jb
out
test
pop
xchg
lods
push
mov
lret
out
arpl
jb
dec
aad
arpl
das
insl
imul
lret
dec
cmc
add
stc
sahf
jo
xchg
leave
pop
stos
cltd
xchg
sub
movsl
repz
jno
cwtl
hlt
or
inc
xor
hlt
out
xchg
add
out
jmp
out
enter
dec
sti
mov
mov
popf
jne
mov
adcl
inc
js
cmp
shrb
pop
xchg
xlat
shlb
aas
fiaddl
or
gs
inc
arpl
inc
add
orb
fwait
sub
data16
cmp
mov
add
xor
imul
push
pop
sub
cmp
movsl
bswap
and
pop
scas
adc
test
and
jl
movl
xchg
cli
push
les
sbb
xchg
lock
dec
cmpb
cmp
sub
ss
adc
and
adc
iret
lds
jmp
leave
cmp
cmc
in
andl
negl
push
add
insb
jno
and
mov
inc
lret
rclb
dec
add
lods
outsl
ds
xchg
scas
test
pop
fistpll
adc
scas
mov
sub
incl
inc
rcrl
repnz
pushf
in
es
test
cld
enter
mov
jnp
call
ret
jnp
pop
cld
icebp
adc
push
inc
pop
scas
fdivl
mov
jecxz
xor
jns
xchg
push
cmp
shrb
adc
mov
inc
or
in
rcll
xchg
pop
mov
pop
scas
sub
pop
adc
sbb
iret
ja
lods
sbb
insb
mov
sub
lods
lcall
lods
dec
out
xchg
test
mov
mov
xor
stc
jno
cmpsb
and
jp
mov
test
pop
mov
bswap
outsb
ret
shll
cmp
cmpsl
cmpb
add
xchg
lret
fistpll
outsb
mov
lret
notb
push
pop
sub
mov
adc
scas
ss
xor
sbb
daa
lods
loopne
out
or
jmp
cmpb
imul
cs
aad
cmp
test
mov
add
ret
sub
mov
xchg
lret
pusha
xchg
pop
xchg
mov
fwait
mov
pushf
arpl
jnp
inc
fadd
mov
jne
sti
cld
dec
mov
sbb
aad
ds
xchg
cmpsb
dec
pop
stos
scas
add
lahf
jae
push
sahf
int
mov
imul
inc
and
adc
mov
test
subl
lods
jb
stos
adc
mov
testl
jl
pop
cmp
sahf
lods
and
ja
mov
cli
xchg
lods
std
mov
andl
xlat
inc
add
push
mov
call
adc
inc
mov
xor
mov
rolb
and
cli
outsb
sbb
vmwrite
pop
sbb
and
dec
inc
enter
dec
xor
xchg
es
les
pop
push
jmp
out
insl
int3
adc
rcrb
lods
or
ss
movsl
add
adc
shll
sbb
in
adc
test
aas
insl
inc
test
xchg
ja
or
mov
iret
mov
ret
add
push
dec
pushf
test
inc
mov
out
xchg
cmp
mov
stos
test
pop
fdivrl
mov
push
push
push
add
jo
test
xchg
out
or
push
sbb
adc
dec
mov
xchg
sub
sbb
subl
popa
cmp
shll
and
mov
push
out
adc
xor
in
inc
js
stos
pop
inc
repnz
xchg
fdivrl
or
inc
add
ja
jbe
pop
stos
aaa
xor
cs
inc
fs
cltd
mov
and
push
adc
stc
mov
aad
aad
jg
fcomi
movsl
jmp
jge
lret
je
enter
mov
fcomps
inc
icebp
pop
lea
popf
or
in
adc
scas
lret
mov
xchg
rcl
lret
mov
jge
ret
push
imul
jmp
aad
lods
inc
jg
aam
lds
mov
mov
cwtl
xchg
fistl
push
sahf
adc
stos
xchg
sbb
aaa
add
adc
jbe
aam
fs
sbb
xchg
or
or
dec
loopne
int
idivb
push
aad
inc
iret
lret
push
sti
stos
stc
shlb
xlat
sub
iret
or
decb
dec
xchg
daa
gs
sbb
xchg
xchg
push
mov
fs
xlat
sub
insb
push
jb
fsubr
repnz
sub
loopne
fcoml
ret
aad
pushf
das
sub
sub
inc
xlat
dec
ret
inc
xchg
pop
ret
sub
push
ja
lock
inc
gs
push
notb
stos
in
cltd
jle
dec
mov
adc
cmp
mov
sbb
mov
out
jno
cld
mov
push
mov
push
ja
mov
push
xchg
inc
push
out
loop
mov
pop
or
fdivrs
mov
jns
adc
paddb
inc
xchg
push
ret
pop
xor
jnp
dec
scas
int
and
addr16
cld
imul
testb
fidivs
sarl
mov
sti
fimuls
dec
adc
pop
or
pop
out
gs
sahf
out
ja
adc
stos
mov
arpl
gs
jecxz
sbb
hlt
stos
lds
nop
push
idiv
pop
jg
and
movsw
sbb
das
jnp
data16
mov
ja
jle
ret
mov
stc
mov
adc
loope
adc
data16
push
jbe
add
or
push
jge
dec
jo
add
pop
leave
call
ljmp
andl
jne
lods
loopne
dec
pop
mov
mov
mov
incl
ljmp
aad
mov
sub
pop
shll
push
pop
jg
pop
xchg
dec
ret
popa
in
xor
movsl
orps
jae
sub
fisubrl
adc
shll
mov
pop
or
sbb
sti
and
push
arpl
mov
mov
and
cmp
jp
js
call
gs
push
cmp
cwtl
cmc
inc
mov
pusha
sar
dec
loop
adc
fwait
leave
jmp
filds
or
xor
push
mov
mov
pop
sbb
lret
mov
into
fildl
mov
push
movd
push
sub
mov
fwait
mov
pop
fisttpl
jne
fwait
add
rcll
out
imul
xor
jo
mov
or
pop
jp
sti
in
lods
jbe
outsl
fisttpl
mov
sub
adc
in
into
add
and
je
xlat
pop
gs
call
pop
scas
sbb
push
popf
cmpsb
test
pop
jmp
mov
push
push
lea
in
jle
jns
fucompp
cmpsl
push
jmp
in
stc
pop
add
pop
xchg
imul
adc
xchg
pop
lahf
cwtl
pop
pop
and
fidivl
popa
pop
add
mov
inc
pop
pop
das
imul
sti
gs
sbb
fs
repz
out
jne
leave
outsb
xchg
test
imul
lret
outsl
loopne
jmp
mov
pushw
dec
adc
jmp
lock
ds
es
sub
or
mov
sub
enter
cmp
xlat
cld
imul
fcom
pop
sub
and
hlt
and
cmp
imul
lcall
cmpsl
arpl
push
mov
sar
xor
push
int
and
fmul
stos
or
fdiv
outsb
fisttpll
call
push
outsl
in
cld
loopne
fstsw
in
pop
incb
pop
or
dec
cmp
sbb
ret
icebp
mov
pop
outsl
inc
pushf
in
xchg
mov
mov
dec
and
gs
in
js
hlt
adc
add
xchg
mov
or
lret
repz
xchg
lock
mov
mov
mov
push
xchg
xchg
or
sub
pop
push
add
push
aaa
mov
popa
cmp
test
sbb
jg
dec
xchg
dec
pop
pop
es
sbb
jnp
push
aad
mov
imul
fs
jae
or
jo
and
dec
out
and
ret
xchg
je
rcrl
sub
cld
mov
cmpb
std
not
cmp
sbb
xchg
call
xor
cmp
roll
aas
popa
jnp
cmp
in
push
pop
add
xchg
adc
shrl
ds
sbb
icebp
cmp
push
cmp
mov
mov
pushf
dec
sub
mov
or
dec
lret
aad
or
out
add
mov
ret
mov
dec
int3
call
mov
movsb
inc
sub
push
xlat
in
loop
mov
stc
lods
adc
sbb
push
and
fs
jnp
sahf
aaa
dec
enter
mov
add
je
mov
or
push
scas
mov
bound
mulb
lods
add
inc
stc
lret
cli
sti
adc
lods
jl
lock
push
adc
lods
mov
pop
hlt
andb
dec
add
mov
push
xor
imul
ret
addb
add
or
or
jecxz
xor
iret
lds
test
push
and
or
popf
stos
ror
stos
mov
sub
xchg
jle
pop
dec
stos
in
inc
div
xchg
mov
hlt
clc
inc
les
in
fstpl
adc
lock
pushf
and
mov
data16
outsl
push
mov
test
test
push
inc
jno
mov
js
into
test
mov
pop
mov
je
xchg
sbb
cli
mov
rcrb
pop
ljmp
dec
cld
push
daa
in
movsl
mov
sub
pop
ja
jnp
push
aas
xchg
push
and
sbb
ss
sbb
loope
push
jns
sti
push
shl
adc
aad
sub
in
mov
dec
fcoms
jnp
js
push
fs
addr16
bound
jl
sub
lock
pop
mov
leave
or
lea
jge
pop
sub
sub
hlt
ljmp
mov
sub
mov
pop
std
pop
pop
cmp
std
ret
push
or
addr16
mov
mov
mov
sbb
jns
lods
push
js
inc
stos
lcall
mov
inc
dec
jbe
inc
lods
test
jno
xchg
xchg
inc
push
pop
pop
xor
jne
dec
out
cmp
dec
cmp
sub
push
add
fsubrs
mov
sahf
int3
stos
repz
cmpsl
int
mov
icebp
mov
mov
movsl
pushf
test
push
sbb
dec
rcrl
dec
cmpsb
call
stos
jb
and
das
stos
popa
push
mov
xchg
jnp
vmread
ret
jecxz
cmp
stos
lret
sub
arpl
lahf
ljmp
and
mov
push
dec
xchg
mov
in
push
add
push
add
seto
mov
ss
lahf
inc
lds
adc
test
test
xchg
pop
add
add
pushf
sbb
and
clc
push
jbe
rolb
mov
mov
jmp
es
gs
mov
sbb
dec
xchg
inc
jno
cmp
sub
jp
sbb
adc
sub
jb
jl
ret
xor
pushf
mov
mov
inc
dec
shlb
rolb
test
enter
inc
adc
push
test
jo
out
pop
push
test
lret
inc
stos
sbb
mulb
stos
cmpsl
push
lcall
test
in
aad
subl
jl
outsb
mov
fmull
ljmp
outsb
fwait
xor
dec
mov
xlat
js
xchg
sbb
ret
cld
mov
js
sub
ror
jp
or
imul
pmaddwd
push
into
addb
mov
mov
jnp
outsl
mov
inc
cmpsb
adc
adc
mov
jle
and
jns
push
mov
sbb
popa
mov
or
lods
addr16
mov
int3
xor
sub
mov
test
pusha
movsl
xor
call
add
inc
pop
cli
dec
imul
shll
fwait
xchg
push
test
out
pusha
imul
icebp
mov
xlat
pop
dec
sahf
sbb
lods
jae
mov
std
out
push
xor
mov
adc
xchg
xchg
lahf
movsb
dec
inc
ret
adcl
mov
pop
and
mov
add
lcall
movsb
pop
jb
mov
shll
push
xor
sbb
or
daa
rcr
pop
les
cmpsb
testl
imul
idivl
jle
scas
mov
idiv
xchg
add
lods
scas
adc
add
sarb
and
pop
mov
sbb
pop
or
pop
insb
das
je
scas
idivb
movzwl
flds
cld
loop
sahf
ficomps
add
fwait
out
cmpb
mov
sbb
ja
hlt
das
iret
rolb
mov
loop
cmp
inc
inc
addb
and
rolb
xor
xor
xorb
fbstp
or
jne
or
inc
pop
sbb
test
or
jnp
scas
xchg
mov
dec
mov
push
push
loopne
xor
es
imul
inc
test
ss
pop
mov
repz
pusha
sbb
pop
sbb
mov
and
mov
fmull
push
mov
push
pop
loop
push
jns
aas
and
mov
aad
push
or
adc
inc
xor
mov
orb
inc
push
data16
das
mov
and
lcall
and
adc
push
jmp
inc
loop
lcall
out
dec
outsb
lock
inc
and
mov
pop
adc
adc
dec
pop
mov
push
test
cmp
lret
lcall
mov
or
out
mov
or
leave
pop
jp
cmp
test
enter
mov
daa
add
loope
fwait
in
popa
mov
insb
xor
cmp
test
sub
pop
shll
add
icebp
in
js
call
sarl
cmpsb
leave
ljmp
sub
cmp
ds
dec
lods
jg
loopne
fdiv
inc
jne
lods
push
sbb
add
adc
xchg
rcl
add
jmp
aad
jns
lret
aam
pop
das
out
pushf
xchg
sbb
and
aas
mov
hlt
ja
pop
mov
cmpsb
sub
dec
inc
ss
and
stc
adc
push
cmp
movsb
bnd
mov
ss
inc
lahf
jno
and
adc
xchg
mov
inc
mov
das
xor
cmc
addb
pop
cmp
push
jmp
jno
jno
push
dec
lcall
pop
dec
mov
gs
push
sub
loope
cmpsb
outsl
fists
and
jle
sbb
movsb
loopne
lods
sub
cmpb
ja
inc
add
fsubrl
mov
je
sub
add
js
repnz
mov
push
jne
loopne
negl
jno
rsm
cmp
test
cli
xchg
shlb
fiaddl
das
ja
adc
adc
shll
in
mov
fldt
ret
xchg
adc
aam
sbb
lods
shrl
imul
sub
popaw
enter
hlt
cmp
pop
push
in
mov
mov
mov
dec
mov
add
roll
pop
loop
inc
adc
rcll
outsb
dec
mov
push
loop
xchg
pop
xor
push
mov
ds
dec
ret
sbb
cmpsl
xchg
push
fildll
pusha
clc
jge
jle
sti
pop
xor
lret
push
in
in
mov
mov
add
xchg
mov
loop
push
fcomps
xchg
outsl
pop
or
sbb
lock
adc
and
cmp
mov
push
mov
mov
xchg
mov
mov
dec
add
sbb
or
enter
daa
js,pt
pusha
sub
iret
sbb
mov
in
dec
push
xor
push
outsl
js
mov
pop
pop
mov
aas
sbb
ret
mov
or
fidivs
lods
mov
mov
push
ficomps
jecxz
dec
loopne
cmpsl
fisubs
fstl
xchg
sbb
mov
inc
sub
sbb
adc
cld
mov
cmc
pop
out
push
xchg
jo
icebp
add
xor
pushf
loopnew
pop
ss
cwtl
arpl
into
int
add
xor
xor
movsb
or
test
mov
fdivr
sbb
repz
jp
or
test
jle
mov
pop
sbb
jno
gs
pop
movsl
decb
inc
adc
push
sbb
fisttps
push
xor
loopne
fidivl
xchg
inc
imul
ret
mov
lea
je
push
iret
xchg
movsb
adc
imul
cmp
lea
lds
push
mov
adc
loopne
test
test
xor
fimull
les
imul
inc
mov
sbb
dec
push
xchg
dec
xlat
nop
cmp
popa
or
iret
xchg
sti
outsb
jmp
iret
sub
pop
sarl
add
outsb
mov
aad
out
iret
jl
jg
out
mov
js
pop
jl
push
or
sub
mov
add
dec
add
cmc
or
xor
sbb
negb
xchg
icebp
int
adc
mov
jno
jp
int3
loopne
inc
fadds
aam
push
sahf
outsb
mov
add
data16
cmp
movsb
out
cmpsl
leave
cmp
lock
dec
je
mov
jns
test
popf
sahf
push
mov
xchg
cs
cmp
push
aaa
dec
iret
aaa
pop
enter
add
mov
dec
mov
sbb
vpsubsw
jl
mov
and
fdivrl
jg
aaa
dec
or
sbb
or
or
mov
jne
xchg
clc
mov
inc
sub
icebp
data16
test
push
sub
cwtl
or
xchg
lds
xchg
cli
mov
lcall
pop
cltd
push
pop
cmp
stc
dec
lcall
js
xchg
xor
cld
movsl
push
dec
pushf
stos
rol
inc
pop
in
in
adc
and
adc
lret
adc
rcl
xor
test
out
stos
inc
pop
jecxz
aad
dec
or
inc
add
cmp
and
hlt
dec
mov
fstps
jmp
es
cmovs
mov
test
or
pop
mov
sarb
flds
pop
hlt
add
std
push
xchg
mov
jl
adc
ljmp
jno
mov
mov
aas
sbb
ret
test
enter
xlat
aas
mov
pop
inc
jbe
mov
or
cmp
dec
imul
testb
leave
std
subb
push
sbb
pushf
jb
jb
xchg
movsb
es
xchg
and
mov
sub
add
into
not
mov
scas
xchg
mov
cmp
xor
cltd
inc
xchg
add
and
std
jmp
js
push
gs
mov
cltd
inc
or
pop
int
push
repz
xor
je
dec
hlt
dec
pop
xchg
int
scas
rclb
sub
aaa
sbb
jecxz
call
fnsave
mov
call
mov
cmpsl
inc
sub
std
mov
push
leave
inc
leave
out
loope
or
aaa
xor
inc
jecxz
adc
imul
xchg
in
inc
push
mov
insb
ss
sbb
cmp
dec
mov
dec
fsubs
sahf
out
dec
aam
fistps
cmp
push
data16
loopne
push
cmp
icebp
cmp
sbb
imul
cmp
sahf
aaa
xor
fldl
mov
pop
mov
arpl
inc
jno
shll
inc
xchg
js
leave
mov
inc
ljmp
dec
or
xchg
mov
inc
enter
cmp
inc
aam
push
mov
bound
pop
xor
lahf
and
jecxz
arpl
out
scas
repz
jmp
add
enter
mov
ss
mov
mov
jae
dec
xchg
xor
out
jge
call
mov
test
sbb
movsl
inc
stos
xor
pop
cmp
pop
dec
xchg
out
adc
cmp
movsb
inc
sub
xorb
fsts
mov
pop
adc
ret
and
lock
ret
lahf
lret
xchg
lods
sahf
je
sahf
mov
jns
stos
push
inc
jae
fdivl
pop
ret
roll
testl
das
mov
add
mov
popa
xor
inc
sub
sbb
arpl
mov
insl
out
cwtl
mov
push
adc
dec
dec
push
lret
xchg
add
xchg
adc
aas
xchg
jns
pop
fcom
js
adc
and
out
ret
dec
roll
out
inc
dec
cmpsb
fwait
xchg
adc
xchg
xchg
mov
pop
mov
fstpl
xchg
fstl
pop
jg
in
add
mov
enter
and
push
imulb
jmp
jge
add
into
aaa
mov
daa
call
cmp
sub
fldl
mov
mov
and
xchg
neg
int3
xorb
aam
xchg
dec
adc
or
jns
dec
shrb
das
inc
fists
add
push
mov
push
mov
sbb
arpl
aas
inc
dec
out
in
xor
inc
sbb
adc
push
jno
mov
add
or
dec
shlb
das
mov
push
jns
lods
dec
stos
sub
lds
test
movsb
in
mulb
hlt
adc
sbb
jns
xchg
in
outsb
jne
jg
scas
aas
or
icebp
pop
fs
cmp
mov
sub
adc
inc
pop
rorb
clc
gs
dec
jmp
pop
sti
data16
aam
fs
jg
jbe
pushl
mov
and
addr16
shrl
mov
outsl
enter
cltd
cltd
mov
and
inc
mov
jp
out
inc
adc
and
cmp
pushl
or
xor
mov
stos
or
dec
movsl
scas
mov
aaa
xchg
sbb
dec
jle
xchg
add
cmp
pop
insb
or
sbb
xchg
pop
push
adc
pop
xor
scas
mov
call
decl
jbe
sbb
xchg
mov
and
xor
cli
push
mov
mov
xchg
sti
rol
and
cmp
xchg
adc
fdivp
mov
jbe
jnp
nop
cmp
in
pop
cmp
fdivrl
lret
scas
add
lock
mov
jp
stc
arpl
stos
mov
mov
lds
push
xchg
adc
push
jno
add
push
jg
cmpsb
xchg
ds
stos
cmp
mov
popa
jae
and
mov
sbb
cs
pusha
popa
add
and
push
pop
xchg
xchg
popa
pop
mov
jl
fists
shlb
mov
loopne
push
std
loopne
jno
sub
loop
adc
mov
mov
pop
icebp
jbe
arpl
test
lods
ljmp
in
pop
and
cmp
lret
and
loop
cmp
sidtl
movsl
mov
jge
xchg
je
xchg
int3
arpl
cltd
push
sahf
movsl
in
hlt
jb
es
popf
jo
mov
rolb
mulb
addr16
iret
outsb
sahf
sbb
pop
out
subl
mov
mov
filds
insb
loop
js
dec
jle
rolb
mov
mov
xor
popa
sub
mov
int
adc
and
ret
mov
mov
cmp
iret
push
mov
hlt
lods
xchg
xor
xchg
int
xor
int
loope
cs
addr16
cltd
xchg
sarb
sub
xor
fidivrs
testl
fdivrs
inc
bound
jl
add
sbb
dec
jecxz
and
jp
add
or
nop
lahf
arpl
or
fisubrl
popf
jb
loope
dec
mov
mov
mov
jne
hlt
xlat
lret
jno
or
stc
test
pop
xchg
mov
movsb
lods
mov
jle
rolb
mov
and
mov
cli
lock
push
loope
in
sbbl
scas
loope
jbe
aas
outsl
mov
pusha
pop
ljmp
push
or
pop
movsb
outsl
je
mov
push
ret
or
push
mov
daa
scas
xor
pop
jg
push
sub
sbb
sbb
andl
xchg
and
mov
dec
aas
inc
loopne
jns
jo,pt
jae
ja
movsb
cwtl
call
loop
fwait
aad
xchg
pusha
mov
cmpl
cld
push
inc
repz
mov
fistpl
xchg
and
mov
mov
mov
pop
and
fidivl
subl
lret
daa
scas
push
jp
xor
jmp
mov
jb
ret
fisubl
inc
in
mov
inc
and
sti
ja
idivb
adc
shrd
ljmp
dec
shr
jmp
pop
jbe
enter
in
add
mov
repz
xor
xor
scas
minps
adc
test
mov
pop
jnp
fwait
pop
jle
lahf
pop
cli
fmul
lods
mov
out
mov
pop
lret
cmp
xchg
lret
pop
cmp
adc
call
stos
mov
xchg
div
stc
jae
sti
in
aad
in
xchg
push
lds
jnp
lahf
aad
and
cmp
inc
out
dec
ret
add
testl
aad
dec
fisubrl
es
or
and
add
fisubrs
inc
push
je
lock
out
mov
dec
pop
xchg
ret
stc
fs
push
pop
dec
out
int
mov
sti
mov
sbb
xchg
xlat
push
movsl
xchg
dec
push
and
jnp
or
lret
cmp
jns,pt
cs
nop
mov
or
cmp
push
movsl
push
rcrb
lds
cmp
mov
sarb
cmp
imulb
rorb
jl
out
dec
cmp
and
cwtl
call
push
push
add
push
loopne
pop
mov
sub
lock
adc
test
push
jl
push
mov
pop
xor
push
jae
lods
xor
adc
sbb
inc
mov
mov
insl
aam
iret
mov
test
dec
loopne
adc
frndint
sahf
adc
cmp
fcomi
dec
inc
fwait
mov
push
sbb
outsb
aas
pop
roll
push
dec
cmp
into
cmp
inc
xchg
add
shr
jmp
mov
inc
leave
jae
push
movsb
aas
lods
dec
sub
insl
sbb
lock
push
jno
sbb
pop
movsb
cmp
sub
icebp
shll
sub
ret
test
call
inc
push
aam
jae
sub
lock
dec
cltd
mov
das
maxps
mov
xor
pushf
lret
scas
dec
dec
cmp
sbb
adc
jmp
pop
xchg
xlat
sbb
add
test
sti
test
std
icebp
pop
js
mov
add
sub
jle
or
jns
dec
adc
mov
mov
xor
push
or
loope
lret
push
sbb
ljmp
pop
inc
sub
out
in
sbb
std
in
sbb
and
jno
mov
add
xor
in
shll
movsl
test
jno
pop
push
adc
cmpl
dec
pop
or
push
xchg
jmp
add
test
fmuls
mov
stos
xchg
xor
pop
dec
sub
out
pop
lea
bound
scas
fwait
cmp
loope
mov
or
jecxz
mov
push
clc
sbb
lea
aam
cmp
mov
xchg
nop
clc
iret
jae
pop
xchg
cmpsb
addb
pop
loopne
sbb
arpl
daa
sbb
pop
and
or
xor
push
mov
or
jns
rcrb
add
inc
mov
mov
mov
jae
push
jg
pusha
in
lret
cli
cs
rcr
fistpll
jb
jg
aas
sbbb
repz
lcall
adc
aam
fldenv
loop
into
adc
and
add
aad
sub
push
xchg
sahf
sbb
adc
das
push
lcall
xchg
std
mov
sbb
fcmove
jecxz
cltd
lods
or
fistl
adc
cmp
loop
sub
cmp
and
ss
scas
das
gs
and
out
outsl
out
ljmp
ficoml
cmp
fidivs
sbb
jae
pop
cmp
sbb
int3
lret
sub
test
jbe
adcb
mov
mov
push
js
lahf
push
cmc
inc
cmp
push
daa
insb
in
popa
inc
add
lods
pop
push
sti
loope
adc
inc
mov
fisubrs
lret
dec
jp
and
enter
jno
dec
ficoms
adcl
jp
arpl
mov
ficomps
sbb
je
mov
cmp
jne
add
push
adc
xor
idivb
mov
fdivs
adc
adc
mov
sbb
jl
adc
add
mov
sub
js
push
out
xor
and
push
push
add
movsb
jecxz
sbb
testl
fisubrl
out
out
pop
cltd
cmpsb
adc
jge
lcall
pop
push
fadd
iret
lods
mov
or
or
out
pop
xchg
add
jecxz
hlt
pop
push
cs
inc
mov
inc
pop
xchg
sub
push
hlt
testb
adc
jecxz
xor
rcpps
lahf
sahf
inc
rorb
and
pop
jecxz
outsb
js
roll
out
jne
pusha
add
cmpb
in
xchg
jecxz
mov
fdivrp
dec
fisubs
push
mov
ret
fadds
mulb
loopne
mov
mov
inc
pop
push
and
cmc
mov
add
mov
mov
mov
enter
lcall
repnz
jmp
and
aam
or
sbb
aas
cli
aas
pusha
push
mov
inc
cmp
inc
sub
imul
sbbl
dec
jno
add
dec
pop
iret
test
jo
xor
ficoml
adc
jne
lods
mov
jo
cmc
add
in
fstl
push
imul
cmp
clc
push
movsl
xchg
movl
jnp
mov
sub
cmp
das
iret
dec
or
test
adc
xlat
mov
test
sbb
stos
push
add
cmpsl
das
rcrb
adc
mov
xor
pop
and
sbb
loopne
xor
popa
add
stos
push
adc
adc
and
dec
push
cltd
add
inc
push
mov
sub
dec
sub
add
mov
fwait
dec
pop
ret
adc
jge
jnp
xchg
xchg
movsb
jmp
mov
insl
mov
adc
imul
xlat
inc
dec
xchg
push
jnp
and
rolb
lock
push
and
jmp
mov
xchg
dec
insb
std
aaa
jae
movsl
cmpsb
je
jns
mov
fcmovne
popa
push
sub
je
xlat
add
stc
push
into
sbb
repz
jg
mov
cmc
adc
outsl
mov
mov
push
movsl
xlat
mov
and
mov
outsb
xor
mov
sub
lods
push
push
repz
cwtl
xchg
daa
and
das
ret
fidivrl
imul
mov
cmpsb
icebp
add
and
pop
inc
dec
outsl
in
icebp
inc
pop
and
nop
incb
in
hlt
inc
cli
sbb
xor
push
lock
ss
sub
lock
add
sti
cmp
aam
push
jae
mov
aad
xor
insl
mov
out
in
cmp
loope
lret
mov
or
dec
popf
add
sbb
mov
mov
aaa
sub
dec
loopne
lret
ja
movsb
dec
fsts
inc
hlt
or
sub
movsb
in
repz
inc
push
xchg
mov
push
test
pop
leave
lret
gs
push
cmpsl
push
iret
push
push
mull
pop
cmp
jmp
imul
dec
nop
add
mov
je
pop
popf
adc
adc
cmc
mov
push
out
in
xchg
adc
mov
daa
imul
fildl
mov
pop
sub
ffreep
popa
test
cmc
inc
jne
push
std
adc
sarb
call
adc
push
icebp
sub
sub
jl
cld
mov
shll
iret
push
aam
inc
in
mov
testb
adc
cmp
xor
mov
sbb
push
fstl
cs
out
mov
jp
aaa
cmc
fstpl
dec
out
rcr
test
adc
dec
add
dec
pusha
cmc
popf
push
xor
imul
jae
dec
data16
dec
stos
sub
popa
std
push
mov
adcb
inc
inc
js
movsb
clc
xchg
mov
and
data16
mov
aas
inc
dec
mov
dec
notl
push
sarl
and
push
pop
gs
inc
shld
lcall
jmp
icebp
bound
xchg
or
dec
sar
adc
aad
dec
dec
or
aas
mov
and
mov
mov
sbb
xlat
cltd
jb
fimull
outsb
pop
mov
ljmp
popa
jbe
cmpsl
shll
push
mov
or
movl
jg
cmp
mov
pop
mov
cwtl
das
cmp
inc
popf
adc
jecxz
sub
shlb
testb
fiadds
inc
or
dec
xchg
jmp
jns
loope
fs
insl
and
and
std
push
ret
aas
aaa
inc
mov
pushf
lcall
stc
and
lret
out
int
ret
iret
loope
stos
inc
mov
into
dec
and
test
mov
sbb
lods
outsb
push
fisttpl
mov
stc
push
lcall
fistpl
cmp
sahf
pop
jns
repnz
cmp
jne
push
aaa
dec
inc
movsl
popf
fsub
dec
cmp
lret
dec
cmp
adcl
cmp
cwtl
jmp
dec
or
fsts
orl
andb
imul
lods
bound
lret
adc
jo
ljmp
jno
cmpsb
inc
dec
mov
push
xor
cs
jle
lods
shlb
loopne
insl
dec
pop
lret
cmpsb
sti
cmp
orl
jp
inc
imul
movsl
jecxz
iret
iret
imul
cwtl
lods
jg
add
push
mov
fcmovnu
gs
and
or
jnp
cmp
mov
push
adc
icebp
lods
into
sbb
pop
jno
add
loopne
mov
mov
popf
imul
xchg
das
cmpl
jne
scas
mov
sub
sub
jo
mov
cmp
xor
sbb
jge
jbe
or
insl
and
loopne
scas
fsubrl
lahf
scas
dec
and
xchg
pop
pop
leave
stos
shl
inc
cmp
or
mov
and
test
sbb
dec
add
xorl
add
cmp
shrl
incb
mov
mov
lds
mov
test
dec
pusha
sahf
stos
popf
jmp
jno
jne
stos
setns
imul
test
mov
sub
outsb
sub
out
pop
sbb
pop
pop
jecxz
add
jbe
imull
fst
out
or
or
adc
push
xchg
adc
add
popf
or
xchg
repnz
and
cmpsl
lods
insb
stos
mov
lea
pop
pusha
div
shl
push
xor
pop
in
jnp
inc
insb
aaa
inc
mov
bound
pop
enter
lahf
pop
push
iret
lds
test
fwait
sarl
cmpsb
scas
fisttpl
test
imul
popw
notb
sar
std
in
dec
seto
fbld
mov
push
lret
test
scas
add
int3
cwtl
fistpl
je
xchg
and
sahf
test
imul
cmc
out
pop
mov
cwtl
mov
mov
inc
enter
xor
jbe
cld
mov
movb
inc
dec
loope
pop
gs
or
sarb
cwtl
test
jl
pop
inc
dec
push
loopne
lret
dec
in
and
incb
pop
sub
pop
or
and
mov
adc
outsl
and
jnp
rcrl
dec
jnp
push
pop
sbb
in
push
adc
negl
mov
xchg
je
mov
ficoms
loope
pop
cs
xor
rcrl
lods
sbb
or
jg
and
mov
xor
ss
push
sbb
not
jbe
mov
fstl
lds
cmpsl
push
dec
decb
pop
inc
mov
loope
xor
jb
int3
cmp
fs
mov
and
fiaddl
push
sub
hlt
sub
ret
mov
mov
sub
add
daa
xchg
loop
lret
repz
inc
add
ja
and
cmc
push
cmp
stos
pop
out
jecxz,pt
xlat
add
in
lock
and
fsub
fs
dec
insb
jp
call
inc
loop
or
into
das
push
mov
cmp
outsl
jmp
fildll
push
or
das
mov
loopne
sub
in
fs
and
cmp
nop
lahf
mov
outsl
aaa
and
hlt
sbb
fstps
xchg
mov
mov
call
mov
cmc
sbb
push
fidivrl
cmp
or
sbb
sbb
adc
imul
lret
test
xchg
adc
movsb
push
loopne
xchg
rcr
cli
mov
daa
sahf
shll
pop
mov
fsubp
les
aam
xor
paddsw
xor
push
sahf
inc
das
subb
mov
mov
or
xor
loope
xor
repz
or
icebp
clc
popa
in
push
mov
sti
push
lea
push
cmp
or
jecxz
xchg
and
pop
data16
or
andl
inc
pop
fsub
call
jge
cmp
test
add
pushf
movsb
stos
add
stos
lcall
jo
mov
aas
fbld
push
lret
out
into
inc
aam
xor
nop
fs
push
push
and
xlat
cmp
pop
mov
ja
insb
lods
sbb
mov
or
aad
test
movsb
addr16
inc
ret
outsl
fisttpll
sub
ljmp
inc
call
and
mov
add
lret
enter
lds
or
and
jmp
mov
push
mov
test
incl
pop
mov
scas
adc
scas
mov
mov
and
sub
mov
fiadds
lret
add
mov
cmp
repnz
sub
cs
inc
ret
imul
mov
notl
aaa
pop
pop
bound
cmp
cmpsb
or
adc
das
shrl
add
scas
sbb
push
xchg
pushf
pop
sbb
into
daa
in
movsl
orl
mov
ret
pop
addr16
xchg
subl
and
jb
faddl
push
loop
cmp
sbb
mov
cmp
and
and
popa
iret
pop
cmp
in
loopne
xor
mov
xchg
xchg
mov
pop
sbb
mov
sar
pop
jge
mov
inc
lods
fcompl
popf
mov
adc
cmpxchg
pop
mov
loop
add
lcall
cmpsl
sub
bswap
dec
lods
fisubs
add
aas
and
rcl
std
adc
movsl
jno
push
ret
sub
xchg
lret
xchg
lcall
xor
and
fwait
jg
inc
test
fs
inc
sbb
inc
cld
pop
adc
sub
xchg
fbld
dec
mov
or
and
sahf
cld
pop
xchg
adc
mov
stc
jl
mov
xor
adc
or
adcb
test
mov
and
sub
xchg
or
into
pusha
inc
or
sub
fnstcw
dec
test
mov
nop
iret
xchg
pop
punpckldq
orb
mov
stos
push
xor
scas
insl
fs
adc
shl
adc
sarb
imul
cmp
push
pop
in
in
pop
das
cltd
fstpl
cmc
in
shll
mov
cmc
jbe
mov
insl
lock
xchg
sbb
bound
int3
xchg
ja
and
insl
dec
mov
jle
and
jns
adc
cmp
movsl
les
addr16
dec
lods
pop
xchg
insb
jns
cmp
call
dec
loope
cli
jb
fadds
rclb
leave
popa
push
jl
dec
fstps
xor
in
mov
rol
adc
dec
movsb
dec
mov
dec
fsubrs
xchg
outsl
add
or
lds
lahf
lock
push
pusha
sub
xor
gs
inc
xor
mov
roll
cmp
sub
gs
pop
test
mov
repnz
aas
sbb
sbb
dec
imul
addr16
dec
push
inc
in
mov
in
mov
inc
cmpl
xor
xchg
inc
popf
orl
test
cmp
stos
loopne
adc
and
cmp
shl
into
aad
mov
fdivrs
mov
sbb
dec
int
xlat
popf
out
lcall
pusha
push
dec
frstor
pcmpgtb
and
mov
sbb
sub
jno
add
aaa
mov
mov
xor
mov
frndint
fs
xor
in
push
push
inc
fwait
test
fistpll
push
popf
lea
dec
inc
inc
mov
jo
sbb
std
popa
sbb
movsl
sbb
popf
jle
adc
cmc
mov
pop
lret
and
jecxz
jns
lcall
lds
es
jmp
mov
in
jae
and
jle
mov
lret
jecxz
inc
xchg
stos
inc
shrb
mov
daa
sub
inc
fisttps
shrl
arpl
cltd
outsl
cmc
add
mov
inc
fmuls
add
popa
in
push
pop
outsl
iret
pop
push
test
jg
in
inc
outsb
hlt
outsl
or
push
hlt
pop
nop
push
cmp
and
jae
pop
lret
jnp
xor
dec
imul
lcall
in
cmp
push
sub
cmp
call
out
mov
imul
cld
jecxz
outsb
fidivl
sub
pop
mov
incb
jne
xor
sbb
sbbb
add
stc
rcrb
out
sti
shlb
add
sbb
mov
divps
dec
test
dec
inc
ret
inc
and
das
pop
cmp
cmp
xchg
enter
xor
dec
ss
dec
int3
cmp
shlb
cmpsl
lods
loope
and
and
cwtl
stos
add
cmp
pop
cmp
cwtl
addb
cmpsl
scas
icebp
sbb
pop
flds
lock
add
in
sti
add
lock
loop
les
insb
dec
adc
xlat
jl
mov
mov
mov
in
mov
ljmp
mov
ret
and
mulb
pop
cmc
sub
push
out
ljmp
andb
in
out
cmpsb
shll
movl
pusha
and
pop
test
mov
fidivl
xor
repz
mov
insb
repnz
and
lret
mov
scas
sbb
push
add
mov
pop
push
jb
xchg
mulb
jmp
mov
inc
inc
dec
repnz
in
sub
push
popf
shr
push
or
cltd
push
fdivs
pusha
dec
jbe
adc
pop
cltd
mov
stos
cmp
dec
xchg
out
sub
hlt
pop
fildll
sbb
mov
in
mov
ss
add
das
icebp
add
push
pop
jmp
enter
xlat
rcrl
cs
inc
inc
fisttpll
sub
pop
jecxz
lods
out
int3
jle
pop
negb
xor
push
sub
xor
iret
dec
mov
sti
sub
das
jb
out
inc
into
cmpsl
xorl
loop
insl
pop
cltd
fmul
dec
push
adc
pop
jmp
out
push
cmp
inc
pop
xor
mov
jle
sub
jo
mov
std
and
jnp
pop
ds
test
inc
xchg
mov
out
test
enter
add
pop
pop
pop
push
add
jmp
rolb
jbe
aas
mov
add
xor
push
ret
adcl
or
push
aas
pop
pusha
sub
dec
neg
jmp
jnp
push
push
pmullw
pop
lret
jae
cmp
inc
cld
repnz
scas
loope
adc
pusha
aam
outsb
xor
cmc
sub
movl
ds
sub
mov
cltd
jnp
xor
ret
add
sub
flds
ss
nop
icebp
sbb
std
mov
cmpsl
pop
pushf
dec
mov
push
mov
rorl
pop
mov
test
sub
adc
cwtl
out
outsl
mov
jns
dec
sub
jmp
movsb
dec
mov
imul
xor
test
test
idivb
dec
sahf
lcall
mul
pop
fwait
enter
mov
add
test
rcl
sbb
pop
dec
sbb
sbb
lret
push
push
adc
sti
xchg
jns
iret
sti
sub
pop
out
ljmp
add
jmp
inc
shll
dec
stos
jno
push
inc
icebp
dec
fisttpll
bnd
jle
and
push
xchg
xor
sub
dec
out
js
and
mov
dec
cltd
bound
push
inc
mov
out
mov
mov
inc
cmpsb
imul
in
frstor
iret
into
xchg
fcoms
sbb
and
out
divl
pop
lea
in
test
and
dec
sbb
shlb
ret
lret
add
pop
push
rcl
ljmp
sahf
dec
jecxz
push
mov
scas
in
mov
mov
inc
insl
lret
int
inc
imul
xor
out
cmpsl
fdivrp
and
adc
mov
aas
mov
or
mov
lcall
fldt
sahf
hlt
and
jp
dec
int
in
pop
xorb
lods
aaa
push
jne
clc
repnz
push
es
les
adc
adc
aam
inc
fisubs
rolb
repz
cli
lret
arpl
scas
stos
jp
fs
or
and
mov
inc
iret
push
xlat
sub
jmp
inc
xor
mov
out
pushf
loopne
add
dec
cwtl
cs
pusha
cmc
sub
sahf
mov
cmc
je
hlt
jne
stos
xchg
gs
xor
push
mov
mov
sub
pop
rclb
out
push
push
adc
arpl
es
pop
mov
mov
fistpll
out
push
xchg
shrl
es
aam
lahf
inc
test
xchg
stos
syscall
test
or
and
in
into
pop
daa
outsl
adc
jbe
sub
lds
shlb
in
ds
aam
in
jle
ret
xchg
dec
decl
inc
inc
xchg
cmp
mov
insb
or
push
adc
mov
popa
mov
dec
add
daa
sub
dec
test
dec
xchg
mov
xor
or
mov
ljmp
movsl
jle
test
std
pop
mov
cmp
pusha
lret
push
cmc
iret
sub
cld
in
outsl
test
sbbb
mov
movl
sbb
rorl
insb
pop
lea
jbe
dec
insb
test
mov
notb
or
stos
push
or
leave
xor
mov
xlat
mov
cmc
out
add
rclb
inc
pop
loope
loopne
ret
push
cld
xchg
or
outsb
xchg
popf
push
sub
popf
movsb
rol
pop
fisttpl
mov
ficomps
mov
push
jo
fs
dec
sub
fistl
dec
dec
jp
sarl
sub
jae
add
outsl
nop
notl
push
stc
cs
and
fldenv
push
push
scas
into
adc
mov
and
jo
sbb
adcl
pop
mov
decb
mov
in
pop
adc
mov
pop
or
dec
sbb
or
cli
es
mov
adc
push
scas
aaa
lret
addl
je
lret
dec
inc
add
les
jb
out
jle
mov
out
ret
xchg
and
jecxz
jne
aam
inc
or
sbb
and
or
push
mulb
mov
std
push
repnz
lcall
lock
icebp
sub
sub
cmp
add
push
cs
cs
lret
jae
pusha
pop
and
out
push
mov
fsubl
or
out
hlt
roll
dec
mov
xor
hlt
xor
dec
sbb
rcr
sbb
jb
pop
fldl2t
mov
arpl
sub
or
mov
lods
pop
gs
and
pop
pop
xor
shl
js
or
push
xchg
pusha
inc
out
jae
test
add
jmp
ret
dec
sub
adc
xchg
nop
cwtl
push
push
pop
lods
mov
in
xchg
sub
imul
jbe
in
aad
aas
mov
sbb
shrl
xor
pop
cmp
pop
fidivrl
sahf
repz
mov
in
add
mov
pop
stc
aaa
mov
xlat
cmp
cmc
cmovge
insl
daa
addl
sbb
ret
adc
add
push
test
ja
push
popf
das
in
aad
or
mov
xchg
sbb
in
js
adcb
rorl
in
call
loope
cmp
xor
stc
add
ljmp
sub
sub
jno
mov
adcl
iret
outsl
push
loopne
push
subl
fsubrl
cli
adc
enter
imul
popf
pop
pop
sbb
cld
js
aaa
rorl
or
pop
jl
lret
push
and
popa
fsub
push
leave
xor
jecxz
sbb
sahf
inc
cmp
shl
mov
outsb
aad
arpl
pop
jge
xor
out
xchg
loope
fidivs
mov
sbb
inc
je
mov
mov
shr
lret
test
add
mov
pop
jge
push
je
or
int3
xchg
out
pop
push
or
mov
rcll
and
cltd
rdpmc
lods
jecxz
stos
lahf
push
out
add
mov
out
xor
cs
or
push
and
pop
mov
xor
and
repz
add
dec
ret
push
lahf
das
dec
int3
inc
xchg
inc
scas
mov
mov
sub
fs
inc
imul
popf
cltd
imul
lcall
fxch
movsl
sbb
ficomps
std
mov
adc
pop
js
mov
ret
xchg
mov
rcrl
lea
sbb
frstor
inc
fcoml
mov
je
and
cmpsb
inc
add
loop
loopne
xor
inc
scas
insl
mov
rorl
cmpb
push
test
rcrb
push
jae
jg
test
std
aaa
pop
adc
xchg
negl
mov
mov
loope
idivl
mov
pop
pusha
aaa
push
rolb
mov
decl
xor
sub
mov
outsb
inc
adc
xchg
sbb
clc
xchg
mov
loope
out
push
lods
inc
cmpb
js
or
stos
jne
bnd
ret
lods
mov
push
jg
bnd
mov
jle
movsb
or
cmp
lock
adc
sub
pop
and
xor
pop
mov
in
or
addr16
sti
ret
test
push
inc
mov
shlb
test
adc
outsb
inc
sbb
sti
add
and
add
pop
popf
xlat
fidivrl
mov
sub
inc
lret
push
jbe
xor
xchg
ds
int3
fadd
sbb
sti
and
dec
mov
and
sub
int3
popa
cmc
jnp
movsb
jb
dec
into
sub
xchg
xchg
adc
daa
sub
push
xchg
ja
mov
xor
mov
aaa
in
icebp
mov
pop
cli
pushl
add
mov
pop
repnz
mov
cltd
adc
bound
mov
mov
pushf
sbb
lcall
das
popa
movsb
xchg
outsl
aad
push
mulb
mov
and
xchg
addr16
dec
mov
mov
fbstp
push
cmpsb
sub
out
mov
adc
inc
push
in
pop
add
cmp
mov
push
sarb
pushf
cwtl
ja
jp
cmp
cmp
subl
jb
je
sbb
jns
ja
outsl
push
mov
push
and
out
test
imul
adc
mov
push
dec
xor
ret
xor
xor
xor
sti
iret
fstps
and
adc
mov
arpl
stos
sbb
insl
test
and
fs
imul
cmp
cmp
mov
add
or
and
mov
and
in
and
jno
notl
inc
sub
mov
sbb
cmp
call
testb
ss
shlb
test
inc
dec
test
sub
xor
adc
es
sbb
mull
mov
pusha
add
call
js
into
jp
jns
jg
sub
daa
lods
fwait
xor
scas
cmp
ret
test
inc
push
lret
out
mov
lock
mov
mov
fimull
jmp
cmp
jecxz
call
add
cmp
mov
pop
fisubl
outsl
dec
push
cmpxchg
or
xlat
stos
hlt
push
pop
mov
or
jg
cmp
xchg
mov
xor
pop
lret
pop
shll
es
sbb
mov
pop
mov
xor
dec
adc
stc
pusha
mov
mov
in
cmpsb
nop
sub
arpl
fstpl
mov
inc
cmc
arpl
push
ja
mov
out
jo
addr16
pop
repz
test
mov
in
fs
mov
int
xchg
and
sbb
xor
ret
imulb
ljmp
mov
jno
lret
sbbb
xlat
pusha
sbb
in
push
add
sbbl
add
into
cwtl
sbbb
out
inc
ficomps
ret
pop
add
adc
int3
cmp
sub
pop
ljmp
pop
ss
loop
iret
stc
mov
mov
ljmp
stc
push
xacquire
push
hlt
inc
adc
fs
cmp
loopne
rorl
loopne
and
outsl
sbb
outsb
or
xchg
jmp
mov
ret
shlb
jecxz
test
ficoms
test
lcall
mov
lds
popf
filds
cmp
icebp
mov
jbe
push
add
mov
scas
sbbl
adc
ljmp
cmpsb
stc
out
dec
add
mov
xor
inc
cmpsb
in
jecxz
sti
roll
out
add
sbb
out
ret
cmp
fimuls
inc
cmpsb
es
cmpsl
jbe
call
fdivrl
inc
dec
add
cwtl
sub
sub
cwtl
add
pop
and
les
push
hlt
mov
int
push
dec
lcall
push
push
outsb
mov
jne
fimuls
ret
daa
pop
andl
dec
pinsrw
xchg
jle
sub
lock
scas
flds
insb
jmp
inc
fstl
iret
out
pushf
arpl
js
imul
out
and
imul
sub
cmp
aad
sub
loope
add
sub
out
mov
data16
jmp
cmpsl
sub
or
push
lock
push
sbb
test
stc
pop
or
jo
jns
repz
cmpb
shrb
in
xchg
pop
mov
fsubr
add
or
loopne
clc
xchg
repnz
mov
repz
push
sub
fmull
pop
mov
lods
cmp
pop
dec
es
ja
fistpl
sub
out
sub
mov
lcall
aas
jns
add
test
sub
mov
mov
add
call
sbbl
add
xchg
pop
mov
inc
mov
jo
pop
add
fldcw
sub
jmp
dec
dec
mov
insb
or
cmp
pusha
jl
cwtl
jmp
or
mov
mov
enter
nop
pop
push
xor
outsl
and
fdivrs
bound
and
adc
shr
dec
in
popa
sub
inc
xchg
rcrl
inc
xchg
adc
fsubrl
mov
cltd
cmpsl
add
dec
lods
inc
aam
adc
lods
cwtl
pop
xor
insl
mov
ret
sub
mov
adc
sub
mov
xchg
adc
jp
cwtl
stos
sbb
ljmp
outsl
fisubrl
sar
sub
icebp
sti
add
xchg
scas
cmpsl
pop
xchg
jnp
sti
cli
ror
mov
ret
mov
vpcmpgtd
lcall
sub
movsl
sub
cmp
les
aaa
test
cmp
sbb
pop
dec
into
popa
ret
sahf
enter
xor
or
mov
gs
sti
sbb
orb
pop
dec
shrb
ds
pop
bswap
cmp
into
or
out
fcoms
or
sahf
iret
rcr
mov
add
adc
pop
xor
xchg
mov
inc
dec
or
sbb
ja
inc
loopne
popa
cmp
cltd
or
mov
pop
jne
jmpw
push
push
cmp
inc
add
leave
pop
sbb
dec
stos
mov
cmp
pop
in
or
xor
mov
xchg
aas
push
jle
add
repnz
cmp
xlat
adc
xor
push
or
sub
ljmp
and
sbb
push
add
lcall
push
xchg
and
into
or
cmp
push
mov
or
add
sub
or
aaa
xor
push
test
scas
jbe
aas
test
cmpb
mov
jne
lods
pop
loope
jb
jbe
jecxz
xchg
in
shll
lcall
clc
loop
iret
popa
pushf
and
mov
enter
mov
sahf
lock
pop
mov
fisttpl
in
mov
fnstenv
iret
mov
stos
pop
lock
dec
dec
inc
insb
fs
test
leave
xchg
je
dec
xor
jg
sti
fldenv
push
orb
pushf
sub
xor
lds
testb
pop
int
and
test
rcrb
or
sbb
imul
mov
lret
test
daa
xor
add
out
rorb
fnstenv
add
mov
mov
mov
adc
cmpsb
cmc
push
mov
push
outsb
je
mov
pop
mov
out
jecxz
test
xchg
lret
or
mov
pop
daa
and
popa
mov
xor
dec
add
cmp
mov
loopne
xor
mov
add
dec
or
cld
xor
jle
aad
loopne
jbe
adc
mov
cmpsl
adc
sub
fs
lcall
inc
int
xchg
pop
dec
adc
xor
mov
xor
jmp
push
nop
aaa
insl
cmp
dec
xchg
adc
lcall
cmpsb
outsl
cltd
in
fsubrl
add
fdivs
sbb
dec
sub
or
ljmp
mov
sbb
and
and
insw
push
pop
adcb
add
and
insb
nop
and
adc
ja
push
adc
js
jne
icebp
jnp
sub
mov
out
add
adc
addb
inc
xchg
push
add
adc
dec
scas
or
and
lods
pop
pusha
adc
outsb
sub
mov
dec
mov
and
cltd
cmpsb
push
jbe
or
xchg
test
sbb
fdivl
pop
insl
mov
cmp
push
dec
sbb
xchg
adc
shlb
inc
popa
into
mov
int3
or
jns
inc
push
dec
mov
cmp
bound
push
test
scas
jl
movsl
movsl
push
inc
pop
or
jmp
pop
mov
push
pop
jecxz
sti
xor
cmp
int
rorb
mov
cmpsb
insl
mov
fxtract
pop
lret
cli
lods
and
xor
mov
cli
orb
jno
sub
out
fisubs
add
inc
xchg
jecxz
bound
test
lock
mov
je
arpl
notb
xor
xchg
fcmovu
mov
inc
sub
aas
js
sub
scas
lret
stos
and
lret
jp
dec
and
xchg
out
xor
xor
sti
cmp
fcoms
cwtl
shl
xchg
in
add
xchg
imul
jb
notb
stc
mov
lods
je
jo
add
lahf
push
lahf
gs
stc
sbb
cmp
imul
cmpsl
dec
in
push
mov
sub
or
dec
js
mov
add
rol
cs
popa
and
jae
out
pushf
mov
xchg
push
sarb
mov
pop
test
xchg
in
pop
test
sub
dec
std
jl
rorl
jl
and
mov
adc
push
decl
sub
xchg
and
mov
and
xchg
imul
sti
cmpsl
push
mov
sbb
fs
out
or
icebp
movsb
xchg
cmc
jle
xchg
add
or
fnstenv
cltd
xor
cmp
dec
fdivrs
clc
cwtl
loopne
call
adc
in
mov
test
mov
xor
or
cmp
out
flds
mov
mov
stc
outsl
fidivrl
or
push
and
jns
pop
inc
nop
push
jecxz
xchg
in
mov
imul
push
mov
dec
pop
je
rolb
push
lcall
ljmp
mov
or
mov
mov
enter
sub
negl
pop
stos
add
inc
mov
jmp
out
lret
popa
mov
stos
rcrl
sub
test
inc
aaa
mov
jge
jmp
out
mov
mov
ficomps
cmpsl
rcll
mov
sbb
jae
call
je
sti
push
push
xchg
cmp
es
movl
xchg
push
mov
xchg
aas
inc
insb
or
sub
or
sbb
ds
enter
dec
dec
xor
xchg
js,pn
cmp
adc
lar
add
xlat
jecxz
xor
stos
lret
xor
and
lods
sub
in
inc
leave
pop
out
clc
enter
sbb
addb
lods
jns
dec
test
push
in
push
in
cltd
imul
mov
sub
int3
sub
lahf
cmc
pop
add
push
mov
loopne
push
sub
or
xor
inc
ljmp
mov
push
shlb
push
jmp
mov
cmpsl
pushl
les
xchg
add
outsb
or
scas
outsl
xlat
sub
sbb
js
mov
stos
mov
lods
mov
xor
pushw
lahf
cli
clc
cmpsl
sbb
mov
jmp
ja
add
mov
or
pop
jo
ja
divl
dec
pop
cmp
out
adc
mov
mov
int3
and
push
xor
insl
push
jecxz
lods
ficomps
bound
aam
xor
sbb
in
pop
jbe
push
mov
popf
outsl
and
cmpsb
add
arpl
xor
push
orl
jo
pop
mov
mov
mov
cmp
jb
daa
jle
sar
cli
arpl
push
lret
in
decb
cmp
add
fcomps
imul
sub
je
mov
mov
sti
or
lahf
daa
sbb
cwtl
pop
fildll
sti
repnz
mov
xchg
adc
xor
movsl
popa
sub
pop
divl
mov
lahf
lahf
test
xor
fs
pop
sbb
sub
push
popa
mov
or
add
shll
or
xchg
popf
mov
mov
outsb
add
mov
loop
sti
mov
jns
inc
mov
lock
mov
sbb
cmpsb
insb
sub
aaa
jge
ljmp
pushf
sub
bound
insl
ljmp
mov
dec
ficoml
aam
sub
add
ja
or
repnz
ja
hlt
sub
stos
int3
rorl
jle
aaa
mov
ja
pusha
cmp
push
les
mov
cmp
jge
add
inc
and
and
bound
inc
jl
gs
add
cmp
es
loop
add
pop
dec
scas
mov
test
in
je
and
lret
jno
mov
cmpsl
aad
jle
lods
subb
out
out
mov
lea
dec
insb
das
adcb
mov
push
jp
adc
and
shr
hlt
mov
out
cmpb
mov
data16
or
push
pop
mulb
push
int3
xchg
xlat
or
or
or
cmp
sarb
xor
mov
mov
sbb
lods
clc
lock
iret
insl
mov
sub
and
add
cmp
sub
cltd
jle,pt
pop
mov
push
filds
cli
pop
and
jecxz
and
and
sbbl
cltd
inc
or
in
add
test
mov
int
ds
loopne
mov
adc
repnz
leave
loope
repz
in
gs
dec
filds
mov
es
jle
ds
loop
pop
push
in
das
adc
out
rcrl
fstpl
fsubl
or
mov
add
inc
insb
repz
xchg
js
leave
loop
test
adc
xor
jg
add
push
fs
jb
xor
leave
call
xor
xchg
stos
xchg
sbb
pop
das
pop
cmpsb
push
ret
testb
inc
js
rcrb
xchg
pop
ss
and
clc
sub
mov
aas
add
mov
mov
or
scas
aam
les
sbbl
stos
push
test
dec
push
cmpsl
std
mov
xor
sub
xor
stos
lcall
out
cmp
test
fs
xchg
test
movsb
xchg
and
aad
push
enter
sarb
lret
movsb
inc
cs
mov
in
xor
xchg
mov
in
pusha
repz
test
scas
and
scas
outsl
mov
dec
out
int3
mov
idivb
cld
repnz
or
sbb
sbb
mov
cs
incl
int3
add
xchg
call
je
pop
push
mov
lds
sbb
js
cmp
mov
bound
jb
stos
movsb
subl
and
adc
cmp
push
xor
jae
inc
jnp
pop
cmp
jl
std
aam
fwait
bswap
ljmp
or
pop
push
lcall
pushf
push
inc
push
push
inc
adc
dec
fisubs
bound
pushf
arpl
mov
xchg
sub
adc
hlt
fistpl
jbe
push
mov
push
push
push
xor
push
jle
dec
arpl
push
xchg
and
xchg
inc
xchg
pushf
bswap
or
and
fst
or
and
xchg
inc
and
icebp
sar
mov
stos
cld
aas
popf
mov
fcmovbe
xor
and
fisubrs
rclb
sti
loop
lahf
adc
mov
ret
aaa
ljmp
cmp
loopne
sbb
or
xor
jmp
popa
lret
mov
out
xor
xlat
cmp
xor
fldl
aas
cwtl
je
push
imul
push
lods
sub
in
or
dec
addr16
mov
add
lds
and
jbe
push
jns
in
je
mov
cs
push
outsb
loop
dec
and
push
fisttps
loop
cld
imul
cmp
jmp
inc
cmp
xor
inc
sar
movsb
scas
xchg
add
push
in
cmp
rorb
ds
fistl
mov
in
out
imul
les
mov
jnp
in
fimuls
lahf
dec
mov
dec
push
fldl
jnp
cmc
dec
cmp
dec
sti
sbb
and
std
mov
lds
insb
mov
shll
dec
fisttps
add
mov
adc
div
fbld
jmp
scas
fidivs
pop
mov
fisubs
pop
cmp
into
pop
jmp
movsb
je
enter
cmp
xor
mov
mov
mov
mov
repz
in
lahf
test
outsl
push
jno
pop
xchg
mov
sub
jge
rol
shrb
popl
cmp
int3
inc
cmp
or
mov
pop
xlat
test
mov
xchg
ror
pop
jmp
push
xchg
es
xchg
lcall
aam
je
xor
adc
mov
aam
je
push
nop
mov
and
test
sahf
xlat
clc
imul
fwait
pop
daa
iret
aad
arpl
daa
sbb
addl
call
xchg
adc
mov
cmp
dec
inc
lods
scas
adc
rcrb
inc
add
pop
sub
push
jp
iret
push
mov
out
mov
aas
jge
loop
ss
jmp
jge
sti
imul
sub
mov
mov
jecxz
add
shrb
xor
mov
cmpb
push
leave
shr
and
hlt
cmpsl
out
test
mov
out
pop
outsl
push
xor
fsubl
xor
ret
repz
pop
imul
push
gs
leave
icebp
cmp
js
mov
iret
cltd
xchg
add
pop
ja
cmp
cmpb
and
in
mov
fmul
mov
aad
push
cmc
inc
jl
sti
adc
xor
sbb
pop
xchg
mov
pop
enter
jae
adc
mov
dec
xchg
lods
aas
outsl
push
push
mov
push
lret
ret
flds
stos
hlt
in
repnz
add
xor
repz
out
andl
adc
xor
xor
int3
mov
push
fs
notl
jno
fwait
push
pop
jb
mov
push
pop
lods
ficoms
pusha
daa
adc
mov
sub
jbe
mov
and
icebp
popa
cmp
fwait
lods
test
mov
aam
dec
inc
leave
stos
in
dec
loopne
sahf
and
xchg
ret
and
mov
shll
outsl
orl
mov
cmp
jbe
mov
sti
jp
aas
decl
cli
fdivr
fwait
or
pushf
fstpt
add
popa
loopne
sbb
or
fadd
mov
push
mov
jbe
test
and
je
fsubrl
mov
cwtl
in
out
and
rclb
aaa
jbe
sbb
jns
jge
outsb
sub
mov
rolb
sub
cmc
and
lcall
in
ds
inc
dec
pop
popf
pop
pop
jno
lea
jl
popa
lods
cmp
mov
cmp
xor
inc
das
aas
mov
lea
into
and
push
out
fstl
lcall
mov
subb
mov
xchg
jl
adc
xchg
fs
and
inc
jg
mov
sub
adc
lcall
add
data16
xchg
cli
sbb
into
popa
add
mov
into
mov
lods
mov
jge
adc
lcall
adc
js
xor
xor
or
lods
popa
lahf
mov
cmc
out
fs
in
and
es
loopne
lret
pop
mov
aad
jge
mov
push
outsl
add
mov
pop
add
push
pop
iret
loop
dec
xchg
pop
cmpsl
xchg
in
jle
fcmovne
mov
ficomps
es
push
xor
ret
mov
xchg
idiv
test
mov
mov
js
sub
sbbl
cmpsl
xchg
enter
in
fstpt
mov
dec
repz
imul
xchg
jo
push
or
pop
mov
movsb
aam
push
std
or
sbb
xor
or
sbb
stos
lods
cmc
cmp
and
iret
cld
popl
lret
and
mov
fstpl
loopne
add
sahf
call
pop
pop
ret
inc
or
mov
pop
pause
pop
mov
je
jmp
push
jmp
adc
sbb
sub
cltd
cli
push
xchg
sbb
frstor
cld
movsb
sub
shrb
aam
xchg
push
mov
xor
pop
push
xor
in
je
jno
cmp
push
sub
push
mov
mov
scas
mov
std
daa
loop
push
cmp
jnp
jmp
push
mov
fisttps
fistpl
push
leave
rcl
notl
lret
add
imul
push
mov
imul
xchg
aaa
pushf
adc
sbb
icebp
pop
ret
and
in
cwtl
sub
pop
push
mov
sbb
inc
fldt
jae
iret
dec
push
cli
add
shlb
jno
popa
jne
gs
adc
sbb
cmp
push
add
out
jnp
hlt
push
jmp
sbb
cmp
hlt
mull
lea
push
adc
lahf
and
popa
stos
or
orb
enter
icebp
add
frstor
data16
cmp
mov
lea
sbb
add
leave
movsl
ds
ret
adc
hlt
js
rclb
push
out
cmp
cmc
and
xchg
adc
push
mov
xchg
mov
inc
mov
and
push
les
data16
push
mov
dec
or
mov
orl
mov
aad
test
andl
xor
fnstenv
cli
add
icebp
cmpsb
rorb
addr16
adc
imul
lahf
sub
mov
or
push
add
mov
fnstcw
outsl
sub
js
xchg
dec
add
lcall
loope
jmp
test
pushf
inc
sub
ror
jne
pop
add
sub
lea
mov
or
sbb
mov
test
lock
ret
inc
icebp
test
cld
jo
jns
jg
mov
cmp
in
mov
mov
dec
int3
mov
aas
das
movsl
int
rorl
test
stos
ficoml
notb
xchg
aas
lock
add
lret
dec
pop
cmp
nop
push
rol
addr16
cmp
pusha
ret
push
lret
dec
repz
testl
mov
xor
cmp
adc
loopne
hlt
xor
mov
lahf
je
aas
repz
repz
lds
sbb
or
ret
jns
sbb
fs
pop
mov
cltd
in
inc
sub
idivl
inc
pop
jno
jae
imul
rcrl
cwtl
cmc
imul
mov
fsubrl
or
popf
cli
mov
pop
push
and
stos
pop
mov
je
xchg
mov
lret
sub
add
cmovae
add
pop
cltd
inc
mov
mov
sub
dec
push
inc
sub
popa
inc
out
std
pop
icebp
adc
xchg
mov
sbb
out
adc
sub
pop
mov
mov
stos
loopne
or
fs
les
rcrl
sbb
aas
mov
imul
adc
daa
movsl
cs
dec
lret
inc
adc
or
rcl
jp
xor
sarl
jne
stos
pop
sub
sahf
pop
ljmp
cli
add
scas
ss
je
jae
andb
push
xor
inc
loope
cld
pop
and
enter
out
add
adc
pop
mov
xorb
cs
adc
arpl
lock
inc
sub
mov
inc
lock
repnz
or
inc
cmp
in
push
popf
xchg
mov
sti
stos
sti
jne
addl
cmpb
fsubs
test
out
xor
mov
inc
test
orl
lret
mov
sbb
jno
imull
and
add
insl
mov
or
and
jmp
mov
add
cli
aad
les
fldcw
movsl
inc
lcall
rol
cltd
int3
lock
xchg
push
out
sbb
pop
xor
xchg
adc
outsb
and
pop
imul
test
add
lret
aaa
lcall
mov
movsb
push
jge
fcomps
out
and
pop
xchg
inc
test
push
fsts
enter
ss
mov
sub
repnz
dec
arpl
pop
sahf
lret
cmc
loope
cmpsl
or
mov
adc
mov
mov
stc
inc
in
mov
xchg
outsl
mov
sbb
adc
xor
sub
jle
leave
mov
mov
dec
fists
imul
dec
sbb
pop
sub
dec
notb
mov
call
das
out
shrb
xor
push
inc
lea
xlat
clc
aas
dec
push
pop
nop
add
push
or
outsl
mov
jo
mov
jno
mov
xor
scas
dec
mov
dec
dec
js
push
roll
jnp
sub
pop
add
rcr
mov
jae
xlat
adc
mov
fildll
cli
mov
sub
and
dec
xchg
cmpsb
leave
mov
xorl
loopne
mov
push
sub
or
jl
lds
push
es
gs
sub
cmp
inc
lcall
sete
jo
cli
aam
cld
sub
cmpsl
add
sub
ja
leave
push
dec
sahf
orl
sub
lock
or
xchg
mov
inc
repnz
push
std
clc
insb
cwtl
inc
cmc
lcall
sarb
add
dec
inc
int
lcall
mov
loopne
adc
dec
rol
lret
jp
cmpsl
mov
cmp
cltd
push
xor
fwait
stc
movsl
xor
iret
lods
mov
repz
add
xchg
je
dec
test
dec
pop
sbb
adc
jo
dec
mov
fsub
int3
mov
inc
inc
and
sti
in
popf
jg
mov
hlt
imul
fldl
movsl
mov
mov
testb
ret
add
add
in
sbb
and
ficoml
mov
inc
mov
pop
cmpb
push
addr16
push
scas
sbb
and
add
lret
ja
out
jle
jg
pop
adc
adc
fdivrl
jnp
cmp
test
arpl
sahf
add
ret
mov
into
jle
js
xchg
pushf
xor
inc
add
mov
add
jecxz
lods
xchg
sub
mov
push
test
mov
mov
shll
jge
push
lea
jno
dec
mov
adcl
pop
mov
mov
or
jmp
pop
cmpsl
ljmp
lds
push
pop
ret
nop
jb
cltd
in
mov
mov
mov
fs
jmp
mov
xor
jne
push
and
stos
nop
push
jb
jnp
adc
jg
test
outsb
into
and
sub
add
adc
fmulp
ss
push
push
int
xchg
sbb
enter
add
or
or
cmp
sarl
out
xor
lea
in
xchg
cmp
fsubrp
inc
neg
mov
loopne
incb
leave
test
cmpsb
in
mov
pop
dec
repnz
add
mov
test
xchg
jecxz
jle
pop
xchg
pushf
or
insl
aaa
jo
movsl
inc
jp
mov
insl
int3
mov
cwtl
push
jmp
lock
test
xor
jl
repnz
sbb
dec
xchg
subl
in
push
in
sbb
in
shlb
aaa
pop
cli
sub
mov
cli
je
stos
or
insb
fnstsw
adc
call
lock
stos
out
repz
lds
push
das
jmp
fsubr
jmp
loope
lret
adc
cmpsl
subl
hlt
mov
push
mov
dec
cmp
cmpsl
xor
jl
jecxz
jo
and
push
sbb
data16
loop
pop
jl
into
inc
jae
sbb
enter
pop
xchg
mov
mov
mov
fmull
pushl
and
sbb
in
sarl
leave
mov
ficompl
jbe
xor
ljmp
call
and
xchg
inc
dec
sub
fcomps
outsl
sti
ljmp
and
insl
popf
xchg
inc
jne
pop
orl
pop
mov
pop
or
ljmp
lret
push
and
cmpsb
out
repnz
cmp
sub
stos
mov
repz
lret
int
mov
inc
das
push
icebp
ret
sbb
sub
cmpsb
int3
mov
mov
or
fs
and
es
in
incb
loope
out
inc
sti
adc
add
daa
sub
sbb
xor
xor
sub
jae
mov
mov
leave
addr16
fwait
inc
cmp
sbb
cmp
xor
popf
popl
rorb
cld
int
and
mov
mov
gs
xor
dec
jb
dec
push
xor
icebp
adc
lods
push
sbb
push
dec
mov
push
dec
out
shlb
int
pop
xorb
xchg
pop
dec
push
loopne
sahf
fwait
jmp
add
push
xchg
subb
mov
insl
pop
or
inc
sahf
imul
pop
loopne
jl
mov
js
fwait
pop
pop
pushf
iret
and
sbb
addb
lret
mov
in
xor
popf
xchg
ret
ret
jae
mov
inc
adc
andl
pop
in
lods
sub
lds
repnz
repz
push
aaa
xchg
cmpsb
lret
or
cmp
and
inc
inc
pop
cwtl
mov
int
pop
in
jge
sahf
or
dec
outsl
push
movsb
push
data16
xchg
popa
shll
pop
test
inc
xor
ret
nop
out
notl
jmp
jmp
inc
fmul
pop
adcl
sbb
or
out
inc
mov
sbb
mov
adc
or
cmpsb
fildl
mov
mov
scas
adc
push
into
insb
push
mov
pushf
adc
lcall
lea
jmp
sub
xchg
or
push
mov
xchg
mov
pop
inc
lret
mov
jge
stos
adc
mov
loop
mov
jp
pusha
fdivrl
outsl
std
cmpsl
rol
mov
xlat
and
bound
stc
ret
mov
add
mov
sub
push
movsl
scas
mov
mov
adc
in
cld
mov
sub
mov
inc
cld
pop
dec
pop
mov
std
push
imull
jae
aam
andb
jno
inc
jnp
pop
sarl
sbb
adc
fwait
aad
aas
inc
add
and
stos
mov
adc
test
adc
or
mov
addr16
lods
ja
inc
paddsb
jp
inc
int
rorb
movsl
inc
js
pop
les
adc
pusha
ss
sbb
out
mov
push
in
int
mov
inc
icebp
xchg
xchg
orl
jbe
sub
cmp
sarb
sub
inc
mov
aam
sahf
xor
loope
popf
lea
ja
in
sub
js
push
push
mov
std
in
dec
jl
addr16
or
sahf
adcl
jb
les
xchg
lock
or
push
mov
mov
jo
int3
les
mov
adc
dec
push
mov
stos
jb
pop
jecxz
ror
mov
scas
dec
in
xorb
outsb
adc
inc
test
test
shlb
lret
jle
xchg
and
in
repnz
cmp
es
lods
push
loopne
adc
data16
out
rcll
dec
cmp
push
or
nop
mov
push
jmp
pmulhuw
lcall
das
adc
jb
push
jb
pop
repz
inc
cwtl
vminps
pusha
testb
scas
fisubs
imul
data16
dec
loop
aad
loope
and
lock
sub
int
in
lods
scas
cmp
adc
pop
inc
mov
cmp
mov
inc
sbb
xlat
pop
mov
decb
ss
arpl
cmp
adc
data16
rcrl
loopne
sub
push
add
cmpb
outsb
inc
imul
sbb
mov
outsl
mov
lods
pop
pop
and
dec
in
mov
sub
xlat
jp
test
mov
and
icebp
mov
ret
inc
sti
rep
and
ror
fdivs
data16
dec
xorb
add
addr16
cmp
pushf
test
mov
push
shrb
fisubrl
pop
pop
mov
inc
data16
pop
test
ss
dec
fucom
fwait
xchg
push
jecxz
pop
js
mov
outsl
cld
or
sbb
arpl
mov
and
inc
aam
jle
xchg
aas
or
cli
jae
mov
and
sub
mov
xchg
mov
add
fsts
out
add
outsl
cmp
xchg
lods
bnd
sahf
xor
push
push
outsb
ljmp
dec
dec
fmuls
rol
daa
in
xchg
shll
add
ret
xchg
pop
popa
adc
pop
imul
test
and
loope
lods
loopne
les
out
jns
cli
test
dec
cmp
insb
jp
mov
dec
inc
push
mov
insl
cmp
mov
jbe
lds
push
cld
push
mov
ss
pop
pop
fnstsw
repnz
popf
push
cmp
jnp
pop
lahf
mov
pop
ret
ss
jle
out
xor
rcrb
cmc
push
aam
mov
jbe
cld
push
cmpsb
mov
mov
fsubrs
xor
hlt
mov
or
rcll
xor
or
inc
dec
mov
pop
jle
jns
leave
jmp
iret
popa
mov
adc
xchg
pusha
push
lret
cmp
adc
addl
out
aaa
outsb
mov
mov
cmpsb
xchg
jecxz
xchg
add
pusha
in
jo
pop
jl
imul
arpl
test
cmp
mov
xchg
dec
jl
stc
pusha
leave
out
push
pop
ss
in
cmc
adc
stos
mov
push
fdivl
inc
sub
mov
inc
mov
push
jecxz
mov
sub
adc
test
jns
pop
push
sub
inc
fsin
push
lea
fxch
jae
mov
jl
lock
sti
repz
push
loope
jg
mov
sub
push
xchg
sbb
xor
inc
xor
sti
insb
fimuls
xchg
adc
and
xchg
in
sti
dec
lcall
ds
sub
lret
fists
or
sbb
push
jl
data16
mov
cmc
cs
lds
dec
insl
les
dec
ljmp
stos
pushf
out
pushf
sub
aam
imul
mov
loope
bound
ficoms
pop
dec
sbb
clc
add
xchg
xor
xchg
nopl
sub
insb
mov
mov
sbb
xchg
or
mov
inc
add
out
lcall
push
jb
sbb
push
out
jne
imul
enter
sub
std
jns
mov
cwtl
pop
inc
adc
mov
mov
sbbl
and
dec
inc
aas
push
in
iret
mov
test
adc
and
mov
pop
pushf
xorl
fs
rclb
cmpsl
lcall
dec
sub
loope
add
dec
inc
arpl
test
cmc
in
in
xchg
ljmp
into
or
mov
mov
inc
outsb
jb
jbe
sbb
jg
leave
add
jmp
add
aam
dec
fwait
bnd
mov
push
adc
adc
and
push
jge
mov
cs
sub
out
fdivs
out
push
dec
out
lods
xchg
and
jg
clc
pop
adc
cmp
mov
adc
or
pop
imul
rcr
lock
jecxz
in
lret
scas
and
test
enter
test
addr16
pop
jnp
sub
loop
add
into
sub
nop
or
add
stc
xor
dec
add
clc
adc
daa
inc
xchg
add
rol
movsb
push
sub
xor
or
testl
fs
popf
mov
cmpsb
pop
xchg
shrb
cli
mov
and
mov
popf
mov
jl
mov
adc
pushf
call
xchg
push
add
cli
aaa
popa
pushf
adc
push
int3
je
mov
sahf
shlb
dec
shrl
cwtl
iret
pusha
pop
clc
adc
cmpsl
lods
cmc
leave
outsb
pop
and
sbb
adc
arpl
sub
pop
add
movsl
xor
add
es
gs
call
adc
sub
stos
pop
mov
in
jnp
push
xorl
shlb
andl
fnstenv
sub
xor
subb
mov
inc
dec
cmpsl
add
jbe
sbb
push
aas
adc
and
sub
psrad
hlt
ljmp
inc
aad
jb
pop
jecxz
cmpsb
push
pop
pusha
sbb
ljmp
push
js
push
leave
aas
imul
jae
sbb
xchg
xchg
inc
int
imul
in
int3
xor
test
sbb
sbb
nop
outsb
or
imul
pusha
xchg
or
int3
ret
pushf
sar
movl
sub
mov
out
mov
push
cmc
pop
adc
sbb
mov
and
clc
fcmovnu
imul
insb
pop
imul
in
push
test
iret
test
popa
es
in
in
sbb
mov
std
imul
push
xchg
pop
pop
outsb
je
fmul
stc
push
cmp
push
xor
push
jns
mov
testb
std
inc
mov
ljmp
aad
in
aas
mov
pop
xor
dec
dec
bound
mov
pop
xor
nop
mov
sbb
iret
pusha
movsl
mov
sahf
jmp
out
fst
mov
ds
xchg
pop
and
xchg
lcall
pop
mov
data16
mov
push
jae
out
pop
cld
rcll
sub
addr16
nop
sub
in
insb
and
pop
imul
js
push
jmp
inc
frstor
insl
dec
pop
lret
pop
pop
roll
andb
push
adc
sti
dec
call
pop
xorb
mov
inc
push
adc
sub
ficomps
stos
pop
test
roll
jbe
mov
jo
pushf
and
std
inc
or
dec
insb
arpl
xchg
mov
sub
adc
testb
fildl
push
int
jle
ror
cmp
jg
mov
push
cmp
scas
pop
mov
xorl
mov
orb
movsl
pop
lods
and
add
inc
cmp
add
jno
pop
cld
andl
mov
add
sbb
in
push
addr16
xchg
nop
dec
fs
mov
cmc
push
dec
rcrl
dec
subl
push
jnp
leave
xchg
sub
jg
cmp
inc
call
mov
and
mov
mov
sub
fcomp
jmp
xor
pop
jo
lock
pop
sub
dec
push
xchg
mov
test
mov
add
sub
mov
js
mov
pop
jbe
cmp
mov
fldcw
sarl
pop
sub
or
pop
int3
cwtl
sub
rcrb
pop
icebp
lods
lret
inc
mov
imul
or
lret
xchg
loop
pop
negb
adcb
cmp
mov
div
cmc
pop
adc
stos
push
push
das
xor
adc
lcall
push
lcall
nop
mov
fistps
nop
sub
scas
fld
js
xchg
fidivl
sbb
fwait
xchg
sub
sbb
aam
inc
dec
cli
dec
fstpt
xlat
jnp
aad
daa
cmpsl
jecxz
xor
mov
fcoms
xchg
pop
push
and
stos
in
mov
xor
mov
in
cmp
cld
mov
jmp
pop
addb
loope
dec
jp
aas
pop
pushf
mov
add
lahf
sahf
add
sahf
fbstp
adc
or
cmpsl
ret
pop
loope
and
xchg
add
int3
mov
mov
cmpsb
scas
push
dec
mov
in
lahf
jo
iret
sub
fisttpll
jecxz
lret
push
cmpsb
and
or
sbb
sar
pop
push
sub
pop
and
dec
out
lfs
pop
push
pushf
cmpsl
xchg
add
lcall
ret
lahf
cld
xchg
dec
jo
push
mov
xchg
push
pop
or
loop
xlat
mov
mov
adc
dec
pop
dec
lcall
pop
ret
mov
sub
or
push
jns
mov
lahf
test
dec
mov
cmp
shrb
divl
xor
imul
jb
inc
xor
out
xor
scas
dec
cmp
imul
xlat
cmpsl
xchg
sbb
adc
dec
cmc
jecxz
fisttps
ret
jecxz
daa
inc
adc
out
mov
cmp
stos
in
loop
sti
and
lock
test
pop
divb
std
sbb
xor
sti
mov
xchg
rclb
and
pop
push
mov
mov
mov
mov
pop
mov
ljmp
mov
push
inc
xchg
jb
cmp
adc
jg
sub
aam
or
lahf
mov
or
gs
movsl
pop
jb
xor
cmpb
sub
out
daa
inc
shr
jle
mov
adc
dec
icebp
xor
dec
or
adc
jne
jns
adc
insl
add
repz
std
testl
inc
jmp
stc
hlt
jmp
js
add
iret
mov
out
shll
outsb
cmp
das
or
test
aad
jns
xor
in
jle
jne
dec
or
imul
pavgw
insl
cmp
daa
xchg
iret
adc
repz
ja
aas
pop
pop
movsl
aaa
jmp
pop
mov
or
cs
sub
and
adc
sub
cmp
test
pop
ljmp
les
and
mov
xor
test
push
gs
cmpsb
outsl
and
and
or
or
fcmovnb
mov
pusha
aam
orl
or
mov
dec
adc
scas
arpl
scas
scas
test
xchg
mov
jmp
and
movsb
pop
hlt
sbb
out
in
out
dec
subl
xchg
dec
adc
adc
enter
jne
xchg
sub
cmpl
mov
sub
ds
sbb
out
dec
dec
and
mov
subl
add
sub
mov
xor
xorl
xor
mov
fs
push
push
mov
fstps
lcall
jb
arpl
aam
inc
nop
andb
ja
lock
jmp
xor
mov
mov
sub
mov
dec
add
jae
jo
pop
mov
adc
or
dec
or
les
mov
mov
loope
add
sbb
bound
mov
jbe
aas
jo
test
xor
outsb
add
sub
movsb
sahf
push
imul
stc
test
mov
lret
in
xchg
or
cmpsb
insb
mov
xor
pop
and
fwait
mov
int
pop
rolb
jg
pushf
dec
stos
jns
mov
daa
ja
mov
and
xchg
push
xorb
frstor
lahf
sbb
sub
cltd
push
popa
jl
das
pop
and
jg
orb
aas
add
je
pop
iret
jle
push
cmc
sahf
dec
into
cmpsb
stos
jmp
aam
xor
fwait
jnp
es
jo
jg
movsb
jmp
mov
fdivr
dec
rcrb
dec
mov
loop
cltd
fstp
cltd
cld
into
mov
push
cli
pop
pop
test
add
lret
cmc
adc
pop
out
sahf
and
mov
xchg
lret
lods
fsubrl
out
mov
ret
add
mov
pop
mov
push
xchg
and
inc
lock
adc
sub
int
cmpsb
ljmp
popa
adc
lret
and
push
int
popa
mov
es
mov
loope
icebp
mov
xor
mov
cltd
add
cmpsb
test
aas
scas
test
and
inc
lock
gs
add
jl
fbld
daa
jecxz
popa
je
xchg
fwait
cmpsb
imul
out
push
mov
cltd
stos
sbb
sbb
xchg
jp
iret
ds
jle
add
fisttpll
push
iret
mov
clc
test
clc
jne
fsts
jg
nop
mov
aaa
adc
add
cli
inc
call
jbe
scas
jno
push
aam
int
rolb
jle
movsb
mov
scas
push
sbb
xchg
inc
cmpsl
inc
scas
dec
mov
jl
imul
cmpsb
outsb
jge
lea
push
lcall
xor
sub
jne
sti
or
xor
pop
sbb
sbb
cmp
jmp
push
rorb
mov
push
jnp
xchg
add
push
fstpt
adcb
nop
lahf
mov
mov
mov
daa
dec
out
cltd
imul
movsl
push
mov
loopne
addl
push
mov
mov
adc
test
add
mov
aaa
mov
pop
inc
fs
pusha
mov
pop
mov
test
cmp
lods
mov
popf
stc
lock
rorl
dec
dec
clc
shll
scas
cs
imul
cmpsb
xor
and
mov
mov
orl
sahf
or
outsb
lret
leave
push
in
das
fdivrl
adcb
ffree
adc
gs
fdivrl
ja
cmp
jg
fistpll
sarb
lea
imul
adc
lds
jo
sbb
insl
jg
fs
jne
mov
cmpsl
dec
pop
xor
dec
shll
insl
scas
jbe
or
mov
sbb
jp
movsl
add
jno
or
lret
mov
rclb
inc
mov
push
lods
fmull
mov
xor
out
and
bound
rcl
fs
lret
jo
in
push
cmp
pop
bound
decb
sub
xor
fisubl
aad
xor
mov
mov
fmull
lahf
scas
stos
jbe
cmpsb
mov
mov
popa
mov
push
inc
fsubrp
aaa
xlat
adc
in
cmp
or
fwait
pushf
dec
test
pusha
push
shlb
jl
and
push
hlt
mov
jl
push
pop
inc
sub
sbb
sti
pop
push
inc
mov
int
mov
and
mov
imulb
add
xor
cmpsb
js
add
hlt
mov
mov
loopne
inc
mov
pop
imul
mov
popf
dec
movsb
icebp
push
xor
mov
sbb
sub
xchg
xor
notl
xchg
add
jb
push
std
bound
rol
repnz
out
aaa
pusha
pop
push
mov
insl
sbb
xchg
or
mov
insb
pop
pop
fists
or
mov
addb
ds
sbb
mov
cli
dec
and
adc
cmp
std
icebp
fnsave
sahf
sub
insb
nop
ja
dec
sub
bound
imul
mov
push
cs
movsb
mov
dec
sbb
in
xor
cwtl
stos
nop
push
inc
mov
inc
xchg
or
incl
mov
sub
dec
mov
sbb
divb
arpl
mov
jo
jbe
pop
popa
sbb
loop
jae
jb
std
sbb
loop
test
aaa
cmpsb
add
int
jmp
sub
stc
sbbl
out
je
lea
lret
inc
add
adc
call
jl
or
ja
int3
xchg
pusha
into
sahf
shl
cltd
cmc
xor
dec
movsb
push
enter
or
xchg
sub
icebp
orl
pop
aaa
in
xor
jae
sub
sbb
lret
int
cmpsb
int
fdivs
into
jmp
push
xlat
sub
std
bound
in
shll
push
orb
and
mov
scas
mov
rcrl
cmpsb
sub
sbb
xor
mov
and
clc
ror
mov
jo
xchg
dec
rolb
movsb
and
inc
push
add
nop
fs
mov
jno
js
dec
in
jne
cltd
pop
mov
int
xor
jge
sub
call
ljmp
cmp
lahf
mov
scas
adc
sti
xchg
call
lea
ds
and
mov
pop
into
dec
xchg
xchg
pop
and
sti
xchg
sbb
jae
mov
jp
arpl
inc
push
cwtl
idiv
mov
adc
repz
push
add
jne
add
and
sub
sbb
or
call
push
dec
scas
xlat
cmp
cmp
pop
test
loopne
jb
inc
pusha
cmp
push
sub
cli
fs
xor
idiv
jl
inc
hlt
inc
xorb
fcmovu
pop
leave
lea
mov
cmp
adc
js
cwtl
push
mov
jae
jecxz
xlat
push
jo
or
fistl
cs
add
xorb
xchg
push
fpatan
mov
loope
stos
add
bound
stos
out
inc
sub
ja
ret
movsl
jno
and
xor
xchg
and
mov
dec
sahf
mov
xchg
and
xchg
rolb
jns
insb
popf
inc
mov
or
loope
xor
clc
stos
mov
bound
das
scas
fs
sub
movsl
sbb
sub
sub
shlb
cli
pop
jmp
cmp
mov
xchg
test
mov
push
inc
sub
mov
incl
mov
scas
orb
xor
push
add
pop
scas
dec
add
outsl
jno
push
or
shr
adc
out
lock
sbb
push
aas
out
lahf
sbb
inc
adc
subb
ja
sub
mov
clc
pop
push
aas
xor
mov
fistl
shrb
and
adc
inc
lock
sbb
push
and
jecxz
mov
rolb
lcall
data16
leave
lods
movb
test
mov
jbe
xchg
std
lods
data16
add
in
dec
or
sbb
jo
jo
popf
mov
movb
test
inc
mov
mov
test
loope
lock
push
adc
sub
cltd
sub
inc
pop
mov
fs
rcr
and
in
cmp
dec
test
sbb
mov
fldenv
sub
sbb
cmp
fistps
cmp
xchg
sub
push
ss
and
mov
fiadds
shll
and
out
jle
push
jge
ljmp
scas
fcmovnb
and
xchg
aas
outsb
xor
enter
ret
or
push
int3
inc
repz
xchg
adc
je
aad
pop
cmp
hlt
lds
sbb
sub
sub
sub
lret
inc
push
xorl
adc
cltd
lods
aad
mov
ljmp
les
mov
les
sarl
or
fsub
ret
clc
stos
testl
rorb
imul
mov
nop
ja
adc
rorb
cltd
rcrb
jmp
push
mov
andb
sbb
pop
mov
mov
xchg
and
cld
add
cmp
outsb
sub
mov
ret
jbe
nop
jmp
orb
test
pusha
xor
pop
adc
cltd
sbb
xchg
mov
jmp
sub
mov
nop
push
add
jle
mov
push
push
loopne
and
out
addr16
xchg
mov
or
lret
xor
push
cmpsl
sub
sub
fwait
cmpsl
stos
into
insl
pop
mov
xchg
ss
pop
and
mov
mov
inc
add
lods
mov
push
xchg
ds
jbe
jle
push
lahf
test
jb
test
lea
mov
or
in
in
mov
mov
push
gs
sahf
mov
mov
sbbl
aam
mov
daa
fdivrp
jle
push
adc
fs
movsb
mov
std
push
xchg
imul
jne
adc
ret
inc
xchg
cwtl
mov
push
cmp
xchg
xor
imul
xor
lret
fstpt
mov
inc
push
mul
orl
scas
cmp
mov
js
scas
rol
leave
pop
xchg
les
dec
mov
fs
mov
xchg
and
es
stos
data16
lock
inc
or
xchg
jo
jge
add
data16
push
lds
sarb
xchg
fadd
cmpsl
mov
sub
roll
add
xor
push
sbb
in
loope
sbb
mov
outsl
js
cmc
test
mov
inc
sub
lret
push
es
jbe
mov
aam
movsl
and
inc
ds
jmp
cwtl
fstpt
call
pop
mov
and
dec
and
jge
xchg
jmp
xor
adc
pop
jmp
mov
mov
push
out
xchg
fs
mov
cmc
pop
aas
lret
xchg
mov
aam
mov
xor
out
sub
push
inc
sub
ja
pop
cmpsb
je
out
sbb
dec
jne
arpl
loopne
cmpsb
sbb
jne
arpl
in
popa
jnp
sarb
mov
and
jmp
push
int
pop
cwtl
imul
das
xchg
jo
xor
inc
fsubrs
ret
push
imul
fdiv
les
xor
push
jmp
shrb
add
adc
inc
popa
in
or
dec
add
loop
out
stos
imul
out
xlat
cmpl
ret
es
sub
rcrb
ficoml
cmp
addb
test
test
and
hlt
idivb
mov
js
push
mov
cmp
daa
imul
cmpl
pop
adc
adc
dec
icebp
mov
mov
mov
dec
in
mov
std
aas
mov
js
push
aaa
adcl
add
mov
mov
lock
xor
cmpsb
mov
aad
es
gs
repz
push
dec
dec
out
cmp
insb
pop
cmp
sub
dec
pop
push
xchg
out
pop
test
mov
mov
stos
sarb
cmpsl
js
stc
dec
ffree
inc
adc
lret
addb
hlt
cmp
ljmp
cmp
mov
fiaddl
mov
or
lcall
add
bound
pop
sbb
mov
fsubl
cmpsl
inc
or
sub
jns
sub
pop
jg
push
and
mov
imul
inc
mov
shll
pop
stos
inc
mov
jge
hlt
push
int
pop
mov
sbb
adcb
std
ret
movsl
add
mov
fstl
lcall
sub
jl
loope
rorb
pop
shll
movsw
stos
fucomip
add
pop
fimuls
jmp
push
jb
xchg
scas
adc
sbb
mov
shl
clc
aaa
push
push
mov
xchg
into
out
loop
adc
mov
xlat
pop
or
sbb
loopne
mov
xor
and
and
push
xchg
jne
or
ret
pop
and
in
in
adc
and
sub
sti
sbb
adc
xor
hlt
js
mov
repnz
sbb
sti
and
hlt
mov
lods
sti
inc
nop
sub
fwait
in
stos
or
fisttps
dec
bound
or
ret
movsb
mov
mov
sub
xor
add
sbb
sub
mov
adc
jle
inc
mov
add
pop
leave
xchg
push
cld
sti
adcl
pop
cs
out
cmp
mov
push
sub
insl
lahf
int
xchg
addps
mov
out
inc
push
fmull
js
dec
push
mov
xchg
mov
in
adc
sbb
and
rorl
or
out
call
mov
das
incl
cmp
pop
pop
mov
flds
add
push
jle
push
insb
dec
outsb
in
lret
push
fnsave
and
test
stos
mov
lods
icebp
sub
mov
adc
ja
ficoms
leave
adc
aad
xchg
xor
stos
rorl
cmp
or
xchg
xchg
adc
in
decb
es
pop
jno,pn
xchg
out
xchg
push
daa
outsb
movsb
movsb
adc
xchg
mov
cmc
fxch
xchg
outsb
enter
mov
cmp
mov
add
push
push
ret
lea
or
xchg
shl
inc
mov
pop
js
les
nop
arpl
add
test
sar
or
jg
jg
jmp
outsb
xor
mov
cltd
pop
mov
fsubrp
jo
loopne
fnstenv
jge
fwait
adc
pop
js
mov
repz
mov
aam
je
cld
in
dec
fists
in
push
cmp
xor
loope
out
fbld
xchg
mov
aad
pop
dec
mov
in
js
pushf
es
outsl
in
or
popf
push
out
pusha
test
bound
xchg
fistpl
xchg
test
jb
loope
pop
mov
pop
cwtl
dec
imul
fs
or
or
mov
scas
popa
mov
add
fisubrs
pop
mov
jl
test
ficompl
dec
imul
sti
adc
mov
rcrl
xor
jp
in
jge
pop
mov
hlt
loopne
push
sub
inc
pop
mov
push
mov
popf
mov
gs
popa
mov
dec
popf
in
andb
mov
loopne
into
dec
pop
adc
xchg
xor
cmp
mov
sbb
pusha
push
rcl
xlat
aad
sub
mov
push
scas
xchg
dec
and
insl
cltd
pop
mov
rcrb
mov
addr16
lods
jno
dec
loopne
adc
loopne
outsl
xchg
mov
sub
imul
mov
xchg
pop
push
loopne
jne
mov
push
mov
fstl
mov
add
movsl
lret
sub
in
ljmp
mov
rolb
in
adc
int3
je
jle
rcrl
dec
call
xor
inc
popa
inc
pop
jno
lds
addl
sub
fwait
rolb
ret
pop
push
xor
pop
mov
mov
xor
sub
sbb
and
nop
xchg
neg
mov
mov
jns
or
pop
ljmp
sub
mov
orb
fcompl
ret
gs
or
fidivs
test
push
mov
ja
arpl
xchg
mov
xchg
xor
adc
cmp
dec
dec
jl
imul
stos
int3
push
dec
sbb
pushf
mov
movsl
mov
pop
xchg
fldz
xchg
pop
cmp
mov
push
jae
ficomps
ret
lcall
cmpsb
stos
push
stc
xchg
jle
mov
cmc
jmp
adc
pushf
cmc
clc
jl
sahf
jp
mov
xchg
xor
jbe
lcall
mov
jo
sub
cmp
or
fadd
mov
loop
insl
inc
inc
enter
add
xor
lock
mov
addr16
fidivrs
stc
movsl
ds
push
mov
icebp
das
call
lock
lea
xchg
imul
inc
adc
push
xchg
js
xor
sbbb
and
cmc
adc
into
imul
scas
nop
add
cmp
insl
cld
xchg
cmp
data16
stos
xchg
repz
divb
shr
xchg
fimull
xchg
insb
push
push
lock
cwtl
test
idivb
or
sbb
test
or
mov
call
or
cmpsb
pop
testl
filds
mov
cmp
shr
stos
jb
in
jle
lahf
mov
cmp
xchg
sub
push
pop
test
fisttpll
xchg
out
out
in
mov
mov
dec
add
imul
scas
outsb
imul
test
mov
pop
movsl
mov
ret
nop
rclb
lahf
mov
adc
push
push
and
sub
cmpsb
pop
dec
jl
or
mov
xchg
mov
xor
mov
dec
stos
cwtl
xor
pop
and
ss
outsl
sbb
add
icebp
sub
push
aaa
gs
add
js
cld
jmp
mov
leave
xor
or
pop
and
les
hlt
and
std
cld
mov
sub
xchg
ds
push
test
fstl
jo,pt
add
or
mov
xchg
xchg
xor
inc
sar
pop
and
test
mov
dec
jbe
mov
mov
lcall
jp
insl
subl
aas
mov
sarl
aam
frstor
add
cld
or
std
inc
icebp
pop
pushf
mov
jbe
data16
mov
test
adc
inc
mov
jge
pusha
pushf
mov
dec
rcrb
inc
leave
aas
call
sbb
imul
mov
dec
and
xor
aam
push
lahf
add
imul
or
jne
add
lret
sub
adc
sbb
lret
lock
stos
sub
loop
sbb
mov
dec
push
int3
jmp
or
push
or
dec
out
stos
and
lods
push
xlat
mov
stos
lods
ret
hlt
xchg
and
push
cmpb
negb
pop
sbb
or
add
jge
inc
int
pop
loopne
sbb
or
inc
jne
cmp
jl
xchg
out
test
xor
push
or
sbb
push
js
inc
fs
xlat
lcall
test
ss
xchg
push
data16
das
xchg
jle
mov
repz
addr16
mov
adc
sub
cwtl
subl
sbb
mov
mov
rcll
or
inc
cmp
sub
insl
jmp
pop
xor
dec
divb
and
or
sub
hlt
and
mov
jne
add
dec
xor
sbb
test
pop
fimuls
sbb
daa
jge
xchg
test
push
cmp
xor
out
ljmp
hlt
inc
pop
outsl
js
mul
std
imul
xchg
add
add
sub
std
out
or
call
jle
or
ja
xchg
mov
jle
xor
rol
jl
adc
mov
sbb
fidivrs
test
cmp
aaa
in
div
lock
push
movhlps
inc
repz
ja
and
fwait
std
xor
or
jle
shl
push
jp
mov
mov
dec
adc
cli
pop
iret
repnz
add
sbbl
fxch
lret
xchg
out
cltd
cmp
mov
fwait
test
push
mov
leave
push
ror
mov
ss
dec
lods
xchg
les
cmpsl
dec
scas
cmp
xchg
int
xor
push
scas
mov
inc
pop
data16
mov
mov
loope
roll
sarl
loope
add
leave
push
popf
addr16
xchg
add
and
int
sbb
cmpsb
sub
dec
adc
pop
popf
js
cmp
lods
into
mov
mov
sti
popa
or
xchg
adc
lock
inc
imul
cwtl
cmp
dec
sti
mov
add
ss
int
and
std
xchg
aas
jno
mov
insl
mov
movsl
data16
adc
pop
sbb
insb
pop
sbb
cmpsb
or
daa
and
in
nop
clc
cmp
pop
imull
sbb
arpl
push
inc
les
add
inc
imulb
adc
adc
sbb
mov
inc
dec
stc
lret
xchg
sahf
sub
jl
cmpsb
imul
xor
scas
leave
mov
adc
jmp
hlt
push
pusha
xlat
jg
sub
fists
aad
je
gs
das
lcall
loop
pop
add
or
shll
dec
add
adc
jns
pushw
jo
js
sbb
mov
ljmp
and
adc
dec
sbb
and
xor
mov
lahf
sahf
jae
jns
pusha
into
jmp
push
and
sub
mov
mov
hlt
in
loop
jo
pop
mov
test
js
mov
test
xchg
lahf
pop
movsb
or
clc
ret
ret
aas
in
aas
ss
push
adc
cli
inc
lret
jo
push
xchg
or
jl
inc
out
sbb
xchg
xor
xchg
call
push
dec
lcall
fstps
in
popa
stos
sbb
int3
xchg
outsl
push
mov
add
jecxz
aaa
ret
jl
jnp
xchg
push
lret
insb
daa
or
ucomiss
daa
adc
orl
les
ds
clc
xor
out
mov
add
jo
popa
test
cs
jp
xor
out
jg
in
stos
mov
mov
shr
outsb
dec
out
mov
loope
sbb
push
dec
xor
loop
test
sti
lcall
lcall
mov
xor
jb
inc
ss
jg
xchg
insb
add
stos
stos
rorb
in
push
movsb
daa
outsl
hlt
fadds
jne
sub
ljmp
popa
xor
aam
and
mov
daa
sbb
sub
and
mov
jmp
pop
outsl
dec
out
push
mov
repnz
fcoms
aaa
inc
pop
clc
jecxz
arpl
imul
leave
cmp
or
or
dec
jb
out
rcl
popf
cmp
daa
xchg
inc
inc
ss
jne
mov
std
aas
jg
jno
in
mov
mov
shlb
pushf
sbb
icebp
lods
mov
mov
arpl
inc
lock
pop
cmp
addr16
add
adc
pushf
xor
notl
mov
lcall
cld
push
adc
shll
push
fucomip
mov
cmp
mov
inc
fsincos
pop
jns
mov
dec
cli
push
cld
mov
xor
js
fsubr
and
sub
fistps
cmp
cmpsb
flds
cli
inc
sub
jmp
xchg
int3
xor
pop
jmp
in
sbb
jg
inc
inc
movsb
scas
icebp
pop
jmp
test
dec
xor
fs
dec
arpl
test
add
and
add
add
or
inc
mov
jp
into
sbb
pusha
aad
jge
mov
lods
push
ret
sub
mov
xchg
repnz
sub
call
orl
and
adc
mov
call
testb
pop
jl
lcall
sub
arpl
pop
test
insl
adc
stos
repz
jmp
stc
stos
sbb
clc
lds
sahf
inc
divb
mov
fldcw
test
outsb
add
pop
imul
sub
leave
dec
or
push
ja
sbb
daa
xchg
mov
je
iret
pop
mov
inc
popf
in
out
jge
cmpsl
lret
flds
pop
bswap
pop
sbb
mov
pop
dec
lea
mov
dec
arpl
xor
cltd
daa
fwait
out
add
sbb
shlb
test
ret
repz
xchg
pop
and
push
xor
std
scas
in
daa
inc
mov
jp
or
dec
jo
test
xor
sbb
jge
push
jg
dec
movsb
sub
dec
ret
push
sbb
das
stos
push
decl
popa
cwtl
test
cs
sub
jnp
mov
cli
push
pop
mov
inc
and
in
mov
mov
inc
test
fldl
adc
add
call
rcrb
xchg
loope
sub
cmp
rol
fisttpl
je
mov
sub
enter
mov
lods
fldl
mov
clc
jmp
pop
rcl
jbe
jbe
or
cltd
push
pop
loopne
cltd
rol
push
push
outsl
or
adc
test
out
sub
sbb
lock
imul
adc
push
cld
pop
sub
in
push
jle
cmp
dec
cmp
leave
insb
sti
jae
in
and
mov
daa
xchg
in
add
into
ljmp
jnp
xlat
pop
int
xchg
ja
mov
test
outsb
add
xor
pop
cmp
movsl
add
mov
or
stos
add
and
stos
mov
jae
arpl
and
sahf
inc
sbb
ss
leave
and
popa
std
jo
dec
les
mov
call
inc
lret
sbb
sbb
gs
cld
sub
fcmovu
push
and
inc
pop
jecxz
pop
ret
mov
cmp
hlt
inc
bound
popa
sbb
xchg
push
inc
ret
pop
cltd
stos
push
stc
mov
dec
cwtl
rol
lods
mov
jmp
inc
dec
dec
mov
cmpsb
call
cmp
fstpl
stos
push
xchg
xchg
dec
fdivrs
shll
add
mov
int3
movsl
test
sbb
daa
nop
arpl
repz
cmp
movsb
add
fidivrl
les
pop
imul
arpl
mov
ficompl
test
mov
xchg
push
cmp
test
inc
outsl
imul
pop
lahf
jecxz
loopne
push
xor
mov
loopne
push
pop
push
add
dec
call
mov
fnstcw
sahf
dec
mov
push
mov
divl
int
and
test
push
addl
mov
les
or
rcrb
pushf
dec
ss
add
inc
jnp
mov
stos
sbb
or
dec
sbb
push
xor
rorl
fdivrl
dec
mov
mov
in
add
rcr
arpl
mov
or
pop
inc
inc
scas
sbb
into
mov
jmp
sbb
loopne
or
xchg
jp,pn
xor
rorl
pop
cmp
call
das
mov
leave
pushf
inc
in
push
fstpt
xor
jl
xorb
push
xor
addr16
lock
mov
xchg
rclb
rclb
push
std
sbb
xchg
jle
in
popf
add
stos
addr16
sub
sbb
inc
lods
cmp
addr16
mov
mov
or
jbe
xchg
fildl
dec
cmp
addb
pushf
out
xchg
xor
ljmp
push
mov
mov
lds
mov
mov
push
push
xor
sbb
and
push
and
add
aaa
jecxz
jo
repz
ret
cs
sbb
ja
lea
subl
aaa
sub
imul
pop
cmpsb
pop
lahf
fidivl
js
and
movsb
out
mov
fmul
jl
mov
sti
pushf
popa
int
and
push
insl
cmp
in
std
cli
xor
cmpsb
data16
sub
push
xchg
cmpb
mov
pop
in
pop
push
arpl
mov
loope
out
adc
push
iret
ret
enter
inc
or
mov
xchg
stos
jae
pop
jp
xor
scas
sarl
adc
gs
adc
out
test
xor
shll
scas
jg
jmp
cmp
inc
mov
loopne
sub
mov
out
mov
repz
cld
notb
jb
and
push
shl
je
push
adcl
xchg
out
jo
pushf
mov
cmp
pop
enter
cmp
loope
mov
inc
ss
aaa
loop
stos
inc
loop
je
cld
jle
loop
mov
stc
ss
mov
ss
sub
flds
icebp
in
push
dec
rcl
xorl
psubd
pusha
sub
mov
pop
call
shll
mov
or
pop
mov
test
scas
nop
hlt
and
cltd
out
dec
in
lods
aam
xor
mov
and
mov
stos
lret
addr16
das
enter
push
jnp
xor
dec
dec
push
mov
imul
ljmp
sbb
mov
int3
push
in
call
push
dec
jns
cmp
test
sub
inc
out
je
inc
sbb
jle
iret
mov
int
or
push
sbb
adc
xchg
push
jae
xor
or
pop
aad
mov
and
sbb
test
add
gs
pop
aam
test
je
loope
icebp
and
and
bound
divl
inc
out
cmpsl
je
shl
ret
lret
mov
push
popa
or
jle
out
mov
push
lock
je
js
testl
inc
shlb
hlt
push
clc
les
or
xlat
push
lods
scas
lods
filds
push
add
mov
inc
dec
repnz
aaa
test
add
insl
cwtl
sub
sbb
cmpsl
mov
mov
popf
pop
jecxz
outsl
mov
xor
dec
js
repz
pop
sub
icebp
lods
in
shrl
adc
leave
shrb
jns
jns
ret
jns
repnz
sti
cld
insb
lret
test
xor
ljmp
psadbw
pushf
out
leave
and
push
jle
sarl
sub
adc
fcomps
xchg
and
sbb
push
xchg
xchg
fcoms
test
mov
js
pop
pop
aaa
ret
lahf
out
pop
scas
outsb
pop
dec
or
inc
aaa
cmp
push
hlt
imul
mov
cmpsl
repnz
repnz
and
imul
jg
xorl
hlt
aas
mov
rcll
mov
std
mov
pop
xchg
xlat
test
and
fwait
and
test
adc
adcb
xor
sub
jl
dec
pop
fistpll
fidivs
int
dec
test
insb
ret
stos
mov
mov
push
movsl
lcall
dec
imul
popf
add
leave
cli
loop
jl
stc
jl
sub
xor
rol
xchg
mov
jns
and
flds
push
stc
cmp
mov
push
fimull
cmc
pusha
pop
cmp
inc
orb
rorb
orb
xchg
add
dec
ja
mov
mov
mov
pop
fsubrl
in
sub
rorl
jle
stc
shl
xchg
sahf
cmp
mov
into
lcall
lods
push
jne
fnstsw
rcrl
xor
aam
inc
cwtl
popf
cli
lret
sbb
push
mov
icebp
mov
lea
add
jl
and
mov
aaa
out
pusha
aas
inc
mov
fcmovbe
fs
popa
and
scas
js
pushf
out
push
cmp
mov
testb
xchg
jno
dec
int3
rcll
insl
cmc
outsl
inc
les
pushf
jbe
outsb
cmp
daa
sarb
test
jns
push
lret
and
xorb
lods
jmp
jmp
in
pop
mov
jp
orl
mov
movsl
lcall
inc
subl
stc
movsl
inc
mov
inc
in
repz
bound
jbe
jns
xor
sti
xchg
mov
loop
mov
leave
adc
or
mov
sbb
icebp
dec
pop
popa
mov
and
mov
or
or
fsub
cmc
out
adc
rclb
cwtl
outsl
cli
jb
jne
pushf
sub
stos
xor
data16
cld
adc
call
jb
gs
ds
sub
int
pop
out
xchg
pop
mov
sbb
adc
aam
lahf
imul
aam
cmp
stos
cmpb
adc
cmp
dec
adc
jb
insl
cmpsl
or
aam
or
rol
insl
stos
sbb
xor
dec
xchg
adc
nop
dec
sbb
mov
ss
inc
div
pop
push
fdivrp
mov
sub
in
adcb
es
pop
sahf
jecxz
mov
push
icebp
hlt
fs
repz
lea
mov
push
inc
jae
ret
or
leave
xor
dec
aas
into
stc
cmp
add
stc
xchg
mov
pop
lcall
inc
add
test
loope
xchg
daa
push
xchg
mov
sar
dec
sub
xchg
sbbl
rcrb
and
mov
cmp
in
push
es
mov
pop
lret
clc
cmp
int
mov
lret
pop
shrl
lock
and
repnz
lock
ljmp
stos
push
or
test
arpl
fdivs
pushf
nop
lret
sbbb
and
adc
adc
movsl
into
mov
xchg
inc
and
push
xchg
ret
insb
loopne
xor
imul
pusha
idivb
stc
ljmp
dec
mov
push
mov
and
clc
pop
mov
and
jo
lds
adc
adc
sbb
sbb
cs
movaps
nop
fildll
pop
and
ds
sahf
cmp
inc
stc
fidivs
lahf
pop
loop
jne
loope
push
sbb
es
xor
outsl
jmp
test
push
mov
sti
subps
cmp
mov
addl
mov
and
inc
adc
xchg
adc
lcall
cmp
fimuls
or
or
fwait
subb
loope
loope
decl
shlb
add
js
sub
cmp
arpl
add
pop
pop
mov
cmp
push
shlb
in
jnp
mov
icebp
or
dec
inc
lahf
xchg
add
jge
dec
les
das
jle
fistl
sub
int
cli
dec
lock
aad
sbb
fldt
clc
dec
xchg
or
call
adc
test
fldcw
pushf
fildl
rclb
or
sub
cmp
dec
jl
mov
gs
xor
pop
nop
popfw
mov
jle
cmp
pop
testl
test
stos
or
cwtl
jge
in
lods
jns
fwait
ja
pop
mov
fisttpl
cmpl
fldt
add
jmp
rolb
mov
mull
ja
sub
cli
add
jmp
pop
pmullw
ds
cmp
adc
shlb
pop
lods
mov
pop
mov
mov
or
adc
je
and
sbb
adc
xor
inc
dec
mov
and
dec
cmpsb
inc
xor
mov
fcoml
push
dec
or
into
cwtl
push
test
out
and
dec
movsb
es
fwait
mov
pop
nop
movsb
ficoms
jge
mov
and
fstpt
jns
or
adc
mov
push
inc
icebp
repnz
add
xor
ss
and
and
enter
push
add
popl
pop
and
push
push
add
xor
dec
xor
stc
xchg
mov
jecxz
arpl
repnz
xchg
mov
inc
xchg
stc
enter
sbb
stc
iret
cmp
ss
sbb
pop
lahf
pop
mov
cmp
test
inc
icebp
leave
or
in
mov
clc
popa
mov
sahf
xor
pop
fwait
mov
push
addr16
mov
mov
adc
js
clc
jmp
jl
ficoms
ss
push
sub
or
aaa
pop
in
and
adc
lods
cmpsb
test
fidivl
hlt
fistl
cmp
rorl
popf
test
pop
enter
mov
push
in
loope
leave
jge
filds
outsb
lcall
jecxz
arpl
cltd
loopne
mov
popa
insb
movsb
push
je
out
popa
cmp
sbbb
pushf
out
cmp
dec
mov
sbb
mov
push
loopne
js
or
lahf
enter
popf
push
bound
jp
mov
or
cli
push
cmp
push
and
pop
mov
into
pop
sbb
and
shlb
push
add
repz
xchg
aad
pop
iret
cwtl
add
xor
and
jecxz
mov
popa
xchg
xor
cmp
arpl
cmp
insb
daa
arpl
out
xchg
in
sub
push
inc
xchg
add
aas
mov
xchg
jb
pop
or
xor
mov
sti
lret
push
xor
mull
je
shll
dec
sub
fildl
xchg
jmp
imul
ss
pop
xor
push
inc
dec
je
aam
mov
push
or
push
push
fprem
sbbb
sbb
in
dec
adc
xchg
jno
lods
je
mov
add
push
js
sbb
mov
arpl
out
stos
sub
lods
add
push
int3
mov
out
fimuls
addr16
sbb
push
and
sub
inc
push
mov
scas
jp
in
fisubrs
push
addl
dec
adc
xor
and
inc
push
mov
icebp
jmp
xchg
sub
xchg
xchg
adc
inc
pusha
stc
test
rcrl
rclb
mov
arpl
imul
pop
aam
sbb
push
loop
loop
xchg
in
sub
data16
mov
shl
mov
divl
cmc
lcall
or
mov
nop
bound
lds
pop
mov
dec
ds
movsb
jb
push
stos
test
les
mov
sbb
lret
stos
xor
xor
aas
or
out
mov
jl
ljmp
fnstcw
ror
or
mov
shll
mov
jb
arpl
mov
dec
fnstenv
dec
scas
mov
repz
mov
data16
shlb
sub
xchg
sbb
gs
and
mov
cmp
mov
pop
jp
xchg
or
sti
jl
add
nop
add
or
add
ret
cmpsl
ljmp
adcl
mov
shrl
cwtl
mov
mov
in
cld
sub
or
ljmp
sub
mov
add
add
shl
dec
popa
add
rcll
sbb
stos
dec
add
mov
or
imull
sub
mov
push
scas
rcrl
push
mov
shlb
rcll
jecxz
pop
ljmp
adc
cwtl
clc
sub
aam
sbb
in
imul
xchg
in
or
dec
or
movsl
movlps
pop
cmp
mov
aam
leave
fsubl
xchg
test
test
inc
daa
xchg
add
push
adc
xlat
pop
sti
sub
lock
push
popa
and
pop
pop
ds
adc
out
enter
push
lret
push
mov
or
push
lret
pop
push
int
or
or
jp
mov
ss
bound
xor
sub
dec
jecxz
adc
and
mov
imul
jmp
xchg
aaa
xor
push
imul
sub
jmp
nop
data16
pop
fs
mov
add
inc
xchg
ja
shll
cs
mov
lcall
add
lret
push
mov
sub
push
int
cld
add
ja
pop
mov
fsts
into
jbe
push
fwait
cmpsb
in
pop
add
arpl
insl
lret
rol
popa
dec
jo
push
pop
std
jg
or
sub
pop
lret
jne
fistpl
push
xchg
ja
cwtl
and
pusha
test
fnstcw
daa
shrl
adc
cli
xchg
pop
sub
icebp
aaa
int3
inc
and
xchg
add
or
mov
sti
mov
inc
cmc
mov
sub
cmp
jne
xchg
rorl
push
xchg
stos
ret
sub
sub
lods
sub
outsl
pop
inc
fs
pop
pop
shlb
frstor
jae
stc
jl
lret
adc
sarb
push
pop
push
mov
add
push
xor
xchg
push
ljmp
gs
ficoml
push
aaa
out
mov
ret
clc
sahf
cmpsb
lods
jb
sbb
mov
mov
jge
push
fbstp
and
mov
cmp
test
ja
out
mov
lods
insl
and
lcall
jl
pushf
cmp
add
insl
pop
imul
cld
mov
gs
insl
cld
dec
inc
test
inc
scas
push
stc
jge
pop
dec
out
jp
ss
push
ss
mov
xrelease
arpl
sub
mov
xor
insl
sub
add
jp
mov
lahf
fs
xchg
inc
test
popa
pop
mov
xor
push
popf
int3
gs
jecxz
fisubrl
fnstsw
mov
sub
popf
mov
repz
hlt
lds
push
out
dec
arpl
inc
repnz
ss
inc
adc
sub
ficomps
popa
out
fs
mov
dec
mov
and
push
aas
and
sahf
je
jmp
and
in
lret
cltd
cmpsl
add
sarl
arpl
fcoml
lea
cmpsb
fistps
shrl
fisttpll
shll
jo
ret
subb
scas
into
rcrb
or
pop
mov
push
add
xlat
js
inc
sti
stc
ror
lods
loopne
push
cwtl
sti
mov
or
and
jno
push
pop
out
mov
pop
jp
pop
xchg
aad
mov
les
aad
ss
pop
dec
inc
and
testb
xchg
xor
or
mov
push
mov
fs
les
xor
outsb
xchg
outsl
mov
push
add
ds
daa
rolb
lods
movsb
shufps
mov
mov
adc
cmp
push
fcmovnbe
sub
pop
mov
adc
mov
test
jne
jo
mov
pop
aaa
add
xor
lahf
xlat
test
xor
cmpb
repz
inc
jp
jge
pop
call
mov
ret
pop
int
pusha
cmp
or
adc
jle
lea
adc
popa
jae
in
cmpsl
andb
lcall
pop
push
add
push
and
pusha
xlat
loop
jo
outsl
test
lds
stc
sbb
stos
sbb
inc
xchg
or
cwtl
mov
fisttps
cmp
mov
dec
insl
sbb
xchg
test
clc
jmp
dec
pusha
sub
cmp
mov
imull
insl
mov
mov
int
xor
hlt
xor
out
loop,pn
call
fnsave
ss
movsb
hlt
and
xor
fwait
mov
inc
push
xchg
mov
add
push
push
cmpsl
iret
daa
dec
sbbl
mov
sahf
add
mov
and
push
icebp
push
mov
out
xchg
mov
fsubrs
xchg
sbb
test
pop
push
adc
push
lret
add
divb
imul
inc
dec
int
out
in
enter
jbe
loop
cmpsl
adc
cli
xchg
push
nop
fwait
mov
movsl
mov
insl
dec
mov
cmp
pop
push
mov
and
and
es
lret
inc
mov
lds
mov
xor
jno
dec
sti
fidivs
sahf
xchg
xchg
pop
dec
add
pop
pop
iret
ljmp
add
fwait
mov
push
cmp
sub
adc
lcall
stos
outsb
mov
mov
jmp
or
jae
pop
push
adc
rcr
xor
pushf
stos
mov
push
fisttpl
inc
cmc
mov
les
pop
push
movsl
mov
out
sarb
dec
int3
jbe
xchg
into
push
xor
mov
int3
push
push
test
pop
inc
sete
jg
lock
fistl
sbb
ret
out
adc
lret
cmp
test
pusha
inc
jp
inc
test
repz
aad
jl
mov
inc
mov
lea
addr16
leave
push
cmp
nop
inc
or
adc
or
pop
jecxz
push
hlt
or
or
or
xor
push
repnz
and
pop
fwait
inc
popa
add
js
loope
shll
enter
mov
add
jne
bound
fstp
cwtl
or
daa
xor
lret
mov
push
cli
lea
sub
cmp
iret
cmp
es
jbe
ja
icebp
stc
int
les
cmp
addl
cmp
aad
aaa
stc
xor
cmp
notb
jp
pop
int3
add
arpl
out
jp
xlat
add
cwtl
jmp
xchg
adc
cmp
dec
lret
js
and
mov
jmp
cmpb
test
mov
mov
int
mov
imul
subl
push
ret
cwtl
mov
fdivl
mov
sub
fistps
fstp
cltd
xor
imul
jnp
test
mov
addr16
cmp
in
xchg
test
fs
mov
mov
leave
lods
cmp
sbb
sbb
cmovnp
mov
push
imulb
mov
xchg
loopne
add
pop
lret
xchg
ljmp
mov
sbb
mov
ljmp
mov
push
imulb
das
fs
add
dec
mov
xchg
inc
or
scas
testl
xor
or
mov
sti
dec
cmpsb
add
stc
lret
sub
in
int3
lods
aam
test
push
mov
mov
imul
pop
xor
stos
pop
ficomps
enter
gs
push
cmpsl
lret
jle
dec
pusha
dec
out
push
fsts
and
flds
fistpll
xor
or
push
test
cmp
cltd
xor
adcb
repz
jl
jno
add
stos
jge
bnd
cmp
jae
cmc
lahf
fldl2t
jne
jl
or
mov
sbb
sti
mov
xor
push
shlb
repz
dec
mov
xchg
rorb
pop
dec
jo
orb
inc
mov
inc
add
mov
aas
lods
rcll
lea
in
shlb
mov
insb
jnp
cltd
mov
inc
daa
inc
or
sarl
xchg
jge
ret
movsb
xlat
ret
cmp
dec
outsl
shl
int
mov
or
push
cmc
pop
xlat
add
mov
xchg
jp
xchg
bound
jne
xor
in
in
dec
fs
cmc
dec
xchg
dec
jno
pop
out
cmp
pop
jmp
and
outsl
pop
mov
push
rolb
ret
inc
xchg
roll
out
mov
das
pop
xor
pop
and
repnz
xchg
je
ror
xchg
mov
jmp
mov
dec
mov
cltd
cmp
sub
imul
movsb
pop
pop
lcall
sbb
mov
push
outsl
clc
call
jb
mov
cld
jge
xor
loop
mov
jne
movsl
add
push
repnz
cmp
adc
stos
and
pop
dec
fdivr
dec
inc
pop
inc
leave
ja
adc
mov
int
push
cmp
mov
xchg
cmp
mov
add
fiadds
cmp
xchg
sbbl
push
dec
mov
dec
dec
push
and
gs
pop
and
inc
sub
adc
mov
repnz
and
addb
outsw
mov
ret
fwait
xchg
leave
sti
mov
movsb
popa
cmp
aaa
jmp
xchg
dec
sahf
mov
pop
xchg
inc
cmc
mov
inc
dec
mov
jg
mov
mov
addl
mov
add
add
push
add
dec
and
sub
cmp
ja
mov
sbb
jo
dec
addr16
gs
daa
data16
add
jb
lods
mov
push
push
lds
mov
cmp
fisubrs
mov
repz
aaa
push
and
enter
stos
add
loop
sahf
gs
loop
xor
mov
sub
jae
sub
cmp
aad
xorl
ds
cmp
aam
sub
push
loope
cmp
push
pop
push
imul
sub
scas
xchg
xor
and
adc
cmp
mov
aad
push
pushf
orb
cmc
shrb
add
repz
push
and
das
call
mov
mov
popa
inc
mov
jmp
push
jno
push
data16
popf
fs
sub
xlat
es
or
mov
pop
jo
cmp
mov
mov
fldt
mov
sbb
cli
shl
sub
out
in
sub
mov
rcll
sub
imul
and
lcall
popf
mov
loope
into
fistpll
icebp
mov
leave
dec
dec
std
fidivrs
fisubs
arpl
jp
or
jae
add
mov
cmp
rcrl
fcompl
cld
and
out
adc
sahf
inc
cmp
sar
mov
mov
dec
push
roll
rcrb
mov
push
mov
jl
add
and
ret
jno
andl
xchg
push
popa
lock
sbb
add
pushf
adc
add
push
dec
orb
ja
mov
cld
inc
aad
pop
xchg
dec
fisubrs
jo
adc
cld
imulb
xchg
int
ss
and
into
and
mov
fwait
pushf
and
leave
in
rcrb
push
movsl
xchg
outsb
scas
fsubrs
clc
fisttpll
mov
cld
mov
lds
test
ret
mov
push
and
adc
jns
dec
add
hlt
jp
lcall
jmp
ljmp
fs
pop
in
aaa
test
adc
arpl
les
mov
sbb
sbb
loopne
rcrl
test
jae
stc
lods
incl
in
pop
sbb
sbb
push
or
jmp
rcr
or
nop
dec
xchg
outsl
or
jns
loopne
xchg
test
pop
lret
jp
out
or
fdivs
fnstcw
sbb
add
dec
push
pop
in
aaa
lds
sbb
xor
sbb
sub
cmp
sub
scas
test
and
insl
pop
dec
movsl
pop
mov
add
not
ret
and
into
aad
imul
mov
push
jle
les
mov
test
rclb
sbb
jecxz
dec
hlt
adc
or
popa
fistpll
sub
jnp
or
stos
shll
pop
gs
in
cmp
scas
and
dec
es
daa
lea
mov
push
mov
push
pop
insb
cmp
adc
xchg
call
gs
jp
jbe
lret
adc
popf
scas
dec
xlat
int3
shlb
inc
mov
lea
jmp
sbb
sub
out
inc
lds
jge
stos
push
sub
push
sbb
push
add
push
xchg
test
clc
test
loopne
outsb
push
jne
daa
in
xchg
sti
and
sarb
movl
mov
dec
stos
cld
sub
jbe
movsb
pop
cmpsl
adc
test
mov
jns
and
adcl
iret
shll
push
push
rcll
adc
sar
inc
fidivrl
push
sub
jg
addb
mov
adc
mov
pop
lret
push
or
dec
push
stos
jmp
insl
repz
mov
mov
xchg
out
cltd
mov
je
add
js
or
xchg
fisttpl
jo
cwtl
popa
or
jecxz
insb
pop
push
cltd
stos
popf
popf
pop
add
shll
test
sub
fwait
add
jno
rcll
popa
or
les
xchg
icebp
dec
outsb
rolb
ss
icebp
cli
aaa
inc
jmp
sub
jmp
shrb
mov
adc
mov
imul
ja
mov
scas
aam
xor
icebp
cmp
or
out
shrb
in
inc
cmpsb
sbb
ret
cmpsb
lret
mov
mov
and
mov
push
ret
insl
mov
pop
fwait
stos
notb
stos
cmp
clc
sbb
loop
ret
xchg
dec
aad
cmpsl
mov
les
sbb
fdivr
popf
fsubs
xor
adc
lods
sub
cmp
sub
add
xor
or
std
mov
mov
jbe
add
pop
insl
pop
adc
cmpsb
mov
in
xor
fcmovbe
or
cmp
mov
lds
or
fldl
pusha
gs
outsl
mov
mov
clc
stc
mov
fsubs
jae
xor
add
push
fnstsw
frstor
test
dec
int3
fdivrl
int
ret
stc
cwtl
repnz
mov
inc
stos
gs
mov
dec
xor
and
cmp
jae
and
test
mov
add
jo
imul
addr16
sub
or
pop
mov
inc
mov
push
fstl
sarb
cmp
dec
adc
orl
clc
and
push
arpl
push
inc
inc
loopne
push
inc
xchg
je
popa
mov
cmp
sub
ficompl
test
mov
cmp
outsb
pop
popa
lcall
inc
popf
jle
mov
test
sbb
std
xchg
mov
insb
fstl
inc
in
lret
xchg
jle
scas
jbe
dec
pop
or
fwait
jno
lahf
test
or
mov
inc
pop
jmp
sti
lock
lret
cmp
mov
mov
cmp
cmp
xchg
out
call
cltd
add
test
loope
push
push
jne
mov
inc
add
inc
and
lea
pop
mov
call
scas
mov
scas
jecxz
xchg
or
cld
xchg
mov
and
lock
pop
sbb
fidivl
and
push
andl
cmp
ret
inc
sub
mov
sbb
jge
stos
mov
cmp
jge
test
push
xchg
mov
jnp
cltd
push
iret
inc
and
sbb
movsl
out
lahf
cmp
pop
out
mov
inc
push
aam
push
add
nop
and
leave
out
mov
xchg
adc
rcrl
jg
repz
insb
sub
and
ja
cs
mov
cmp
xor
int3
orb
outsb
fwait
pop
dec
xor
fldenv
xchg
xchg
out
mov
jo
mov
cmp
sbb
add
mov
mov
aam
mov
and
in
cmpsb
test
into
mov
clc
loop
and
lahf
popa
int3
outsl
adc
adc
pop
xchg
icebp
lods
adc
push
lret
leave
cld
xor
inc
inc
popf
push
aaa
push
mul
pop
pop
test
mov
push
mov
stos
sbb
mov
jp
in
pop
sub
xchg
jl
adc
cld
or
inc
inc
lret
shl
int3
sahf
cwtl
ljmp
lods
and
jp
inc
pop
iret
dec
je
stos
lcall
dec
mov
adc
mov
fstp
mov
sti
scas
mov
sub
es
cwtl
ret
cli
int
adc
cmp
cmp
adc
popa
aad
sbb
in
mov
int3
lret
sub
xor
add
xor
stos
xor
cmp
call
pop
adc
mov
dec
pop
aam
sbb
xor
fstps
inc
vsqrtss
je
pop
insb
adc
lea
repnz
in
push
pop
add
pop
das
ja
cmp
inc
inc
xor
mov
inc
add
add
push
nop
jb
jmp
cltd
dec
ljmp
push
hlt
stc
out
sahf
cmp
cmpsl
aaa
and
mov
out
in
test
shlb
arpl
jne
pop
rcrb
cmpb
xor
pop
or
inc
test
or
mov
shlb
push
cmc
pop
jl
mov
lahf
jmp
pop
push
and
xor
test
kmovw
clc
and
push
cmp
cli
shll
dec
jmp
leave
jp,pn
xchg
mov
lret
pop
sub
mov
lods
sub
mov
shl
js
jae
test
lahf
addr16
push
or
sub
mov
imul
add
pop
lret
inc
fidivs
out
call
mov
lret
adc
or
lcall
pop
jo
ja
xor
dec
jmp
xchg
jno
cmpsl
addl
outsl
and
out
and
inc
xchg
in
notb
dec
lcall
fnstenv
and
aad
xor
out
xchg
cs
rcll
cmp
loopne
inc
push
and
inc
sbb
into
sub
or
lods
mov
cs
je
xchg
or
jmp
test
sbb
arpl
push
sub
push
in
or
int3
nop
jo
push
aas
mov
cmp
xchg
inc
dec
dec
jns
imul
stos
loop
sub
mov
mov
mov
cli
xchg
xor
rolb
mov
push
ret
sub
pusha
mov
into
mov
mov
fidivs
push
mov
pop
mov
add
scas
notl
lcall
loope
dec
add
in
inc
mov
decl
dec
sub
lahf
nop
insb
cmp
sub
inc
or
cmp
adc
mov
push
shrl
cmc
negl
inc
popa
gs
mov
popf
inc
insb
fbld
push
jge
xchg
out
mov
and
andb
cwtl
outsb
add
and
add
lods
jae
pop
mov
test
je
mov
pop
cmp
mov
addr16
test
xor
xlat
sbb
cmpsl
leave
cs
sahf
cmpsb
pop
fdivr
sub
push
negl
out
dec
mov
addr16
jb
or
dec
or
mov
pop
lods
xchg
adc
ja
sbb
ds
jecxz
lods
inc
adc
xor
js
and
addr16
xlat
xchg
pop
sub
stos
cmp
mov
shll
cmp
lret
cld
cmp
jmp
adc
cld
daa
js
cmpsl
push
inc
scas
sahf
sahf
dec
jbe
loop
inc
nop
in
lahf
daa
cmp
lcall
test
rorl
push
cmovo
sbb
adc
pop
jmp
pop
and
xchg
xchg
mov
dec
psubusw
mov
adc
sub
adcb
push
sbb
inc
jnp
cwtl
and
mov
inc
movb
mov
mov
decb
rcl
lock
dec
or
jmp
testb
jno
add
cltd
cmc
xor
xor
push
sti
cmpsl
push
mov
mov
paddd
cmp
iret
rcll
pushf
dec
sbb
outsb
mov
pop
pop
inc
rorl
mov
rol
std
clc
shll
jne
shll
dec
mov
rol
pop
sbb
outsb
mov
cli
adc
and
inc
iret
lret
or
insl
shlb
scas
and
pop
js
imul
mov
cmp
jle
ss
jne
test
adc
mov
lret
mov
inc
and
rol
sbb
push
xchg
xor
lds
and
les
dec
inc
and
in
xchg
xlat
inc
lods
insl
dec
xchg
into
bnd
insl
cmp
lods
dec
push
jnp
nop
push
jp
mov
push
and
or
lahf
lods
movsl
dec
xchg
out
mov
outsl
incb
jg
sub
fwait
les
outsl
sarl
jg
pop
mov
xchg
cmc
sbb
lods
push
xchg
aas
stos
push
and
jno
pop
fdivr
mov
stos
aas
add
shrb
js
xchg
fidivs
fdivrl
xor
dec
pop
cmp
mov
test
sarb
mov
pop
test
and
repnz
xchg
int
cmpb
sub
das
sahf
add
hlt
aad
xchg
push
mov
ret
inc
xchg
mov
xchg
push
jge
data16
in
adc
dec
and
mov
xor
jp
andb
mul
pop
int
std
cmp
jno
mov
imul
or
sub
sti
stos
mov
xchg
mov
inc
cmp
scas
dec
bound
sbb
xor
mov
mov
push
rorl
pushl
inc
ret
mov
por
ljmp
xchg
xchg
dec
sbb
adcb
mov
mov
in
adc
mov
pop
scas
sahf
push
mov
pop
pop
sub
dec
mov
mov
xchg
dec
data16
imul
lret
push
aad
xchg
cmp
push
or
repz
out
ja
arpl
inc
mov
pop
and
lods
xor
sub
aaa
or
idivb
in
insl
repnz
out
sub
stc
mov
xor
orl
pop
pop
mov
and
sarb
aaa
popa
lods
mov
idivb
and
and
jg
push
test
sbb
out
dec
mov
and
jo
icebp
daa
cwtl
out
sub
push
xor
push
aam
sub
sbb
pop
xchg
movsl
push
cmpsl
pop
lea
test
outsb
pop
pop
gs
and
mov
xchg
dec
inc
leave
cs
aad
mov
cwtl
aad
jae
std
cmp
pop
mov
or
mov
mov
mov
push
sub
push
jle
jecxz
push
inc
cmpsb
lds
mov
outsb
xorb
adc
loopne
or
pushf
push
or
repnz
cmp
dec
adc
test
xor
mov
sti
mov
mov
mov
pusha
mov
cmp
pop
aad
xchg
aam
pop
jne
les
gs
sbb
push
push
mov
test
das
sub
push
ret
loope
pop
dec
negl
xor
negl
iret
aad
rcrl
lea
xrelease
jo
jns
lds
in
push
push
inc
lret
add
push
popa
out
xchg
cmp
mov
cmp
xchg
sti
shll
vpunpckhqdq
lods
cld
pop
mov
cmc
xchg
jg
and
stc
insb
dec
cmp
out
cwtl
pop
dec
sbb
inc
and
imul
jl
xchg
fwait
jns
pop
mov
sbb
mov
pop
xchg
js
mov
sarl
shr
lods
enter
mov
xchg
and
in
mov
pusha
mov
call
std
lods
cld
mov
stos
clc
jne
jecxz
mov
fcomp
jb
cmpsl
or
rorl
or
jg
insb
negl
lcall
inc
idivl
inc
es
aaa
adc
mov
cmc
dec
cmp
sbb
call
push
sub
js
add
pop
stc
mov
mov
xchg
sti
leave
in
add
filds
pop
lahf
cli
inc
pop
xchg
lods
fwait
and
test
xchg
push
inc
not
rorb
aad
pop
xor
jbe
in
outsl
js
cwtl
test
jnp
divb
clc
imul
mov
arpl
stos
ljmp
push
inc
stos
jbe
push
cmp
xchg
sbb
push
add
call
icebp
enter
bound
push
mov
cmp
xlat
dec
inc
mul
bound
cwtl
scas
cld
or
mov
pop
mov
mov
mov
xor
or
fcompl
inc
or
mov
inc
popa
in
call
cli
cltd
mov
or
out
sub
inc
dec
or
mov
mov
js
movsb
or
mov
mov
or
inc
add
lret
sbb
sub
adc
sbb
mov
xchg
mov
adc
adc
sarb
sbb
insl
cmp
sub
jle
mov
cmp
xor
pop
addr16
adc
cs
jmp
repnz
xchg
stc
das
test
push
mov
dec
cmp
mov
sub
lods
push
faddl
jae
mov
xor
dec
ret
loopne
jp,pt
cmp
pushf
stos
push
mov
pop
icebp
ljmp
cmp
xchg
ficomps
bound
or
stos
out
sub
mov
adc
xchg
mov
pop
sbb
jmp
jg
push
dec
js
icebp
push
cltd
mov
ss
call
cmp
sub
ljmp
adc
sarl
shrl
pop
jns
scas
ljmp
xchg
dec
arpl
scas
imul
cmp
sbb
adc
imul
jecxz
inc
jo
add
int3
lock
sbbb
jae
lcall
jno
lret
mov
mov
and
std
rcrb
hlt
inc
stos
cmp
jecxz
fnstenv
cmp
sbb
shll
cmpsl
sarl
push
pop
sub
mov
rcr
jmp
add
push
out
inc
jns
pushw
xor
xor
dec
mov
shlb
fsts
in
insb
repnz
nop
mov
xchg
cmp
inc
jp
jnp
rcl
test
cli
insb
jno
std
sub
sub
int
jl
cmpsb
iret
stos
xor
push
xor
cwtl
in
rorb
sti
sbb
pop
inc
ret
ds
add
enter
cmp
outsl
sbb
push
loope
mov
fsubl
xorl
mov
mov
push
push
mov
out
mov
cmc
inc
ja
mov
loopne
and
push
movsb
fcmovne
and
mov
fistps
mov
ret
cli
jmp
cmp
xor
sub
int3
cmp
or
pop
int
icebp
mov
or
addr16
mov
ds
lret
pushf
adc
jecxz
pop
jnp
xchg
push
fisubs
ret
mov
mov
iret
push
or
data16
out
xorl
rclb
lods
sbb
and
ss
or
stos
je
mul
push
aas
wbinvd
jbe
cmpsb
sbb
fcmove
lods
push
test
movsb
aad
mov
pop
jno
mov
fs
xor
push
aas
rclb
cs
int
ljmp
mov
mov
adc
sbb
les
cmc
jno
or
outsl
into
clc
xor
fbstp
scas
push
fsubl
sbb
shrb
jbe
les
lea
push
data16
and
sahf
xchg
fwait
mov
sub
jb
aam
dec
out
loopne
insb
js
mov
movl
ret
push
rcrl
jne
mulb
jns
or
in
push
notl
daa
push
mov
fmuls
xchg
mov
push
adc
or
test
xchg
pop
hlt
stos
lret
add
leave
push
add
dec
aas
pop
jno
outsl
stos
mov
push
das
dec
outsl
mov
roll
cmp
pop
imul
mov
ret
test
mov
and
push
dec
inc
test
mov
or
mov
dec
in
int
data16
mov
mov
push
sub
dec
repnz
dec
dec
xchg
dec
shl
cmc
xchg
adcl
add
mov
adc
imul
aas
or
inc
or
ljmp
into
cmpsb
pop
add
xchg
jns
arpl
fildll
add
imul
pop
sbb
cmpsb
mul
scas
xchg
outsl
or
pusha
lock
into
cmpsl
leave
dec
or
cmp
mov
testb
aaa
push
out
cmp
adcb
adc
rcrl
mov
mov
mov
add
in
jge
sti
mov
lret
ljmp
ljmp
inc
or
outsl
es
aam
push
jo
je
ja
sub
push
push
outsl
pushf
dec
inc
inc
mov
xor
int
test
scas
ss
es
xchg
cmp
lock
xor
stos
mov
popf
sub
or
test
test
dec
xchg
pop
cmp
and
nop
jl
faddp
js
sub
dec
pop
dec
bound
mov
cmc
mov
mov
mov
out
lods
or
scas
adc
cmp
mov
das
stos
dec
xchg
mov
hlt
push
cmp
mov
xor
repz
mov
mov
nop
int
push
and
xor
xchg
idivl
mov
loope
pop
into
sti
aas
pop
leave
add
cltd
fst
mov
mov
fdivr
cld
cmp
rcll
cmpsb
outsl
dec
xor
mov
pop
inc
mov
inc
pusha
lods
rcll
std
mov
dec
sbb
cmp
orl
lret
inc
xchg
push
lcall
push
rcrb
add
shl
std
inc
cmp
out
adc
aad
ja,pn
mov
dec
nop
pop
jbe
or
rcll
dec
mov
test
cmp
xlat
mov
xchg
imul
xor
add
js
clc
push
or
mov
xchg
outsb
mov
scas
out
clc
or
inc
push
xchg
aas
das
dec
sbb
push
gs
inc
jo
popf
out
dec
xor
adc
std
adc
add
mov
inc
test
rcll
mov
mov
or
pop
aas
mov
mov
mov
mov
xchg
out
ret
outsl
or
aaa
ret
lahf
sub
sub
push
in
ret
xchg
imul
xchg
scas
out
jo
leave
push
popf
mov
test
out
add
imul
les
cmp
cltd
sbb
jmp
aaa
lds
push
or
mov
pushf
pop
out
jp
rorb
std
addb
mov
sub
adc
mov
xchg
daa
sbb
arpl
scas
into
shl
out
mov
cmp
inc
jo
xchg
mov
inc
sahf
mov
insb
add
push
scas
fcmove
cmp
ss
outsl
cmc
hlt
adc
call
jns
fmul
mov
adc
cmp
lret
adc
jg
pop
xchg
cmp
aas
mov
mov
sbb
into
jns
xchg
enter
scas
push
ret
and
xor
inc
pop
push
inc
fistl
mov
imulb
xchg
mov
filds
ror
push
pop
xchg
jle
sysret
dec
lea
dec
test
fs
sti
mov
lods
cmpsb
xor
sti
dec
pushf
mov
aas
je
loopne
push
shrb
repnz
jge
movsb
sub
enter
pop
push
popa
dec
or
jge
and
xlat
jo
pop
lahf
mov
and
test
js
mov
nop
fwait
inc
and
xchg
xor
sbb
icebp
jne
cmp
push
or
dec
in
mov
xchg
mov
pop
pop
es
es
push
or
push
xor
bound
stc
das
adc
lret
test
adc
frstor
pop
sub
adc
lea
movsb
loop
outsb
or
mov
sbb
xor
inc
dec
leave
inc
rcl
push
lret
cmc
sub
sahf
add
out
pusha
xor
jno
adc
cmp
mov
ds
int
cmpsb
xor
fisubrl
fistps
dec
xor
xchg
stos
push
push
mov
mov
adc
dec
dec
push
sub
fisttpll
movsl
xchg
das
mov
fdivrl
mov
mov
arpl
mov
cmp
imul
xchg
outsb
jae
jne
push
hlt
mov
out
mov
or
popf
or
imul
jnp
mov
and
push
mov
and
adc
pop
adc
fistps
cmpsb
and
cmpsb
cmp
lea
cltd
and
add
xchg
mov
mov
imull
sti
sahf
jp
xchg
mov
cmp
scas
cmp
les
insb
pop
mov
lcall
mov
int3
int3
cwtl
fiadds
dec
xchg
loopne
xor
mov
test
mov
shll
push
dec
push
incl
cmpsb
xor
add
insb
sbb
mov
out
dec
push
mov
rcrb
sahf
mov
lods
es
sti
adc
add
cltd
and
mov
mov
mov
mov
in
cmpsb
xor
mov
sbb
mov
pusha
xor
scas
sti
or
fld
les
xorb
sub
add
sbb
inc
inc
test
cmp
and
test
cmp
push
dec
jbe
mov
jbe
add
and
cmp
push
sub
and
in
orb
cmp
push
in
and
cmpsl
jle
add
push
sub
or
mov
in
sbb
or
mov
inc
add
add
mov
ffreep
out
lret
aas
add
ja
clc
cmp
pop
ja
push
jae
scas
push
push
lcall
add
jbe
call
jl
mov
icebp
jbe
stos
imul
aas
mov
inc
les
addl
add
shl
mov
push
sbb
insl
xor
jmp
sub
jno
out
xchg
ret
cmp
lea
testb
dec
and
xchg
add
int3
push
les
push
fnstenv
mov
cmc
sahf
lcall
adc
sub
push
mov
leave
dec
pop
cltd
mov
push
jo
lea
rorb
leave
xor
cli
push
mov
adcl
loop
mov
mov
add
outsb
xchg
sub
adc
out
imul
ret
mov
xor
push
popa
xchg
bound
mov
add
pusha
loop
ss
jl
adc
dec
insl
push
mov
add
movsl
aas
cmp
dec
adc
inc
stc
dec
xchg
fldl
rolb
or
sbb
add
pop
out
aaa
aam
cmp
xchg
inc
jl
cmp
mov
or
movb
test
jb
imul
mull
in
sbb
fpatan
jmp
lods
push
sub
lea
hlt
mov
add
jae
xchg
pusha
cmpsb
xchg
mov
push
sub
stc
lock
hlt
lods
sub
lret
and
scas
jg
or
adc
std
aaa
sub
js
push
sub
xor
andb
int3
jnp
test
fcmovnbe
add
push
push
adc
dec
bound
popf
arpl
and
mov
mov
mov
fwait
out
inc
popf
pop
inc
push
add
faddp
outsl
sub
xlat
hlt
mov
push
xchg
or
int
cmp
lods
xchg
testl
roll
and
in
push
mov
int
pop
icebp
or
or
lods
or
js
push
std
dec
sub
xor
sbb
and
or
push
cltd
sub
add
xor
inc
popf
mov
scas
in
xor
xchg
adc
mov
mov
cmpsb
stos
dec
and
mov
dec
leave
int3
jnp
lods
adc
ljmp
fiadds
addr16
andb
popl
scas
sbb
fsubr
aaa
push
leave
push
inc
addr16
adcb
mov
jge
aad
outsb
pushl
dec
mov
mov
cltd
nop
mov
ret
nop
sbb
mov
test
cmp
mov
out
test
cltd
dec
xor
and
mov
lcall
mov
arpl
jae
pop
or
inc
insl
popl
fincstp
stos
in
fucomp
push
nop
jp
repnz
mov
mov
push
mov
out
mov
dec
loopne
andl
cmp
fldln2
add
bt
jb
push
xchg
jp
testl
add
xor
push
je
jne
stc
inc
pop
push
sbb
pop
cmc
sbb
jns
repz
xchg
xchg
push
dec
xchg
int3
xor
sub
out
mov
not
inc
cld
gs
xor
xor
mov
and
push
sub
cmp
jecxz
xor
jg
xadd
repnz
loop
sbb
loop
cmp
pop
pop
xor
sub
xchg
ss
xor
mov
mov
leave
adc
out
ja
lahf
add
lahf
xchg
insl
cwtl
aaa
imulb
cltd
mov
lods
push
test
das
out
outsb
xor
arpl
ret
jmp
je
or
fwait
dec
aaa
dec
call
loopne
dec
stos
xchg
cmp
pxor
push
jbe
xchg
gs
in
imul
jp
sbb
in
mov
mull
into
hlt
pop
push
jle
push
fdivrl
bound
xor
or
outsl
and
rcrb
push
mov
inc
xchg
dec
dec
sbb
add
sti
outsl
ss
imul
mov
push
test
mov
pop
int
mov
jg
dec
mov
out
mov
pop
dec
lods
aas
jmp
lahf
pop
lret
xchg
push
jge
sub
adc
jp
lret
aad
repz
or
dec
sbb
fwait
jl
test
mov
mov
call
pop
mov
xchg
xor
jmp
add
mov
out
push
xor
repz
ja
jge
ret
push
stos
jge
pop
cld
jnp
mov
inc
repnz
xchg
inc
inc
enter
xchg
je
icebp
insl
arpl
std
cmpsb
enter
push
repz
je
sub
rorb
or
jns
popa
xchg
daa
jbe
mov
fidivrl
adc
fwait
mov
and
in
inc
dec
push
fdivs
fwait
leave
sub
sub
mov
neg
int
insl
add
shrl
mov
cs
sub
cmpsb
or
push
xchg
mov
inc
jl
cmp
in
jl
es
std
lret
rorb
push
xchg
clc
jp
int3
xchg
cmp
rcr
push
jl
jo
xchg
je
imul
repz
in
pop
insb
sbb
jb
iret
pop
jno
or
xor
addl
das
cmp
add
add
divl
iret
les
sub
xor
mov
dec
sbb
jl
dec
pop
mov
int
and
mov
fsubs
cwtl
nop
dec
insb
sarb
les
mov
mov
add
push
and
jge
in
test
push
dec
jle
insl
pop
cmp
jae
iret
test
pop
mov
and
push
in
push
cmp
jecxz
pop
imul
dec
xchg
inc
push
cmpsb
jae
mov
mov
jl
testl
push
mov
or
stc
inc
mov
xor
mov
mov
jge
dec
xor
mov
and
in
add
movsb
testl
aas
std
shl
adc
mov
xor
cld
mov
lahf
add
cmp
cmpb
sbb
fbld
xchg
pusha
test
inc
movsl
ret
mov
ret
add
std
add
jmp
dec
jecxz
add
mov
ret
adc
sbb
hlt
sub
leave
test
arpl
negb
pop
lret
mov
jmp
dec
xchg
faddl
insl
push
cmc
push
lret
lods
cmp
xlat
xchg
mov
add
sub
outsb
cmpsl
cmp
fistpll
insl
add
ret
and
cwtl
push
pop
adc
push
call
jp
xor
cwtl
or
popl
arpl
fistl
mov
xchg
push
lods
subl
ret
orl
shrl
cmp
inc
lret
popf
push
push
pushf
jg
jg
sub
cmpb
or
dec
and
inc
jge
xor
and
cmp
lods
xor
cmp
inc
fiadds
dec
sahf
and
imul
push
dec
in
js
pusha
cmpsl
outsb
jge
cmp
mov
ds
dec
cmp
int3
out
stos
nop
cmp
cld
jecxz
ret
sbb
mov
out
push
ficompl
pop
in
hlt
mov
mov
repz
sbb
jecxz
jb
lret
mov
jbe
rol
je
push
mov
mov
mov
and
mov
data16
sbb
sti
shl
dec
cmpsl
shl
xor
lret
inc
inc
mov
add
dec
shlb
mov
dec
andb
test
xchg
jae
scas
lock
or
sbb
lcall
jo
xor
jecxz
inc
adc
and
aad
data16
xchg
nop
inc
xor
add
pop
in
cmpsl
stc
cmp
jo
cmpsb
pop
ja
lods
cmpsl
mov
sahf
shrl
rcr
loope
sbb
sbb
notb
fucomp
je
push
xlat
mov
or
push
jb
adc
cmp
xchg
cmpsl
fbstp
call
dec
repz
jae
in
mov
call
pop
xchg
adc
aaa
mov
xchg
fs
push
push
jb
jns
sub
mov
sahf
mov
xchg
and
repz
sbb
mov
in
adc
stos
mov
rcrb
dec
push
jb
out
adc
les
push
adc
push
xchg
lock
loopne
test
hlt
and
rorl
cmpsb
xchg
jmp
rorb
test
cltd
mov
mov
fcoml
and
cmp
test
and
mov
in
cmp
xor
mov
sti
inc
cmc
sub
and
stos
sbb
stos
push
push
jno
cli
cmp
mov
sub
sti
ffree
dec
arpl
pushw
insb
rol
test
ftst
mov
jns
dec
leave
add
call
orb
mov
adc
xchg
pop
push
nop
jae
dec
in
or
daa
or
popa
in
ss
push
lea
cmpsb
and
addr16
dec
and
xor
dec
lcall
dec
dec
push
mov
adc
inc
and
test
inc
jp
lods
jb
xor
inc
stc
movsl
stos
lods
or
sbb
and
lea
pop
outsb
push
imul
add
insb
stos
enter
iret
fwait
gs
aad
scas
sti
mov
xor
test
inc
cld
test
mov
and
cld
lods
sarb
pop
roll
jmp
in
dec
xlat
cmpsb
out
sbbb
push
push
icebp
add
sub
lcall
outsb
jg
mov
pushf
mov
sbb
je
mov
lds
stos
out
lock
jbe
xlat
pop
shlb
sub
ss
push
lea
sbb
cs
and
jg
mov
fisubrs
sbb
inc
pop
test
aad
inc
lods
push
adc
dec
test
cmpsb
gs
pop
dec
outsb
popa
jno
jbe
mov
and
stos
dec
ja
jb
or
pop
int
loope
scas
bound
mov
std
enter
nop
mov
pop
movsl
cli
xchg
pop
stc
add
cmp
popa
mov
xor
jbe
fwait
inc
xchg
or
push
jnp
nop
stos
xchg
gs
scas
adc
fcompl
call
mov
mov
popa
mov
mov
xor
xchg
jmp
fsub
in
addr16
lahf
nop
adc
shll
mov
xchg
pop
cmp
pop
mov
xor
sbb
lret
xlat
pop
push
or
iret
stc
lcall
cmpsb
mov
or
pop
fstl
xor
xor
mov
inc
int
aas
imul
in
dec
in
xchg
inc
divb
mov
xor
add
jb
push
sarb
push
outsb
jge
imul
mov
sarl
mov
lock
or
mov
fildl
or
and
lret
sbb
shll
sub
sbb
jns
subl
xchg
cmpsb
mov
scas
cmpsb
icebp
pop
push
mov
adc
fs
push
notb
into
hlt
lods
push
jno
fwait
push
fucomp
jmp
repz
mov
aad
mov
idivb
add
lds
jp
xchg
mov
xchg
repz
push
pop
adc
in
popa
xchg
lahf
add
mov
jmp
pop
cmp
pop
outsb
enter
jmp
pop
pop
or
xlat
mov
lods
jo
lock
mov
popf
mov
cmpsb
insl
popf
cld
loop
sbb
xor
pop
ret
xchg
roll
leave
insl
jne
jp
and
push
loope
popa
jne
xlat
les
in
roll
push
inc
pop
ficomps
mov
xor
lea
lcall
testl
xchg
and
movsb
sub
xchg
aad
and
fiaddl
inc
jnp
add
inc
fiadds
popa
add
mov
sti
aad
pop
adc
loopne
lret
pop
jns
push
lods
adc
in
call
pop
divb
test
test
adc
xchg
fs
xlat
xor
cmp
loopne
nop
inc
or
les
pusha
sub
or
cld
jecxz
js
stos
jmp
hlt
rorl
xor
dec
dec
movsb
stos
jg
pop
sub
push
sub
sahf
and
jnp
inc
lret
push
mov
js
cmpsl
loope
lods
jmp
and
mov
cmpsl
outsl
hlt
jne
mov
leave
push
add
or
repz
aas
push
in
xchg
sysexit
cld
mov
xchg
push
push
inc
pop
repz
xchg
xor
lret
in
ljmp
rcll
jg
inc
xor
xchg
adc
mov
sti
out
mov
ss
fadds
cmp
dec
or
mov
into
dec
jle
stc
orl
cmpsb
inc
jbe
lret
xor
cwtl
out
mov
rcll
mov
leave
pop
cmp
in
jne
out
cmc
inc
in
add
pop
ret
or
mov
mov
jg
dec
ret
mov
test
xchg
outsl
insb
jmp
mov
inc
push
mov
je
push
dec
pop
cmp
add
mov
inc
clc
push
fcmovnu
cld
adc
jle
pop
rcll
mov
push
lock
clc
test
mov
inc
cld
cmp
mov
shll
pop
push
dec
pop
lcall
or
mov
mov
sbb
pop
call
sbb
xchg
repnz
or
sub
add
lods
stos
xchg
loopne
test
pop
xchg
cmpsb
sbb
mov
in
push
cld
stos
lds
loopne
js
mov
int3
jp
mov
or
add
xor
sub
or
lret
aad
mov
cmp
cltd
je
fdivs
std
dec
mov
in
mov
int3
lods
dec
and
push
decb
mov
sbb
push
leave
mov
sub
push
inc
dec
aas
popf
and
loope
inc
std
sub
cmpsb
xorb
insl
mov
jbe
mov
mov
cmp
lods
or
pop
test
jae
aam
sbb
pop
mov
rcl
cwtl
je
lahf
jnp
dec
add
push
mov
mov
into
xchg
fldl
cltd
adc
xor
lret
mov
in
stos
cmp
cmpsl
icebp
add
shlb
cmp
pop
mov
push
push
jmp
test
hlt
stos
in
and
inc
test
dec
in
push
xor
xchg
js
dec
mov
mov
imul
and
jle
and
mov
xchg
shrl
xor
pop
in
dec
push
pop
or
cmp
add
outsl
jae
sbb
mov
adcb
sbb
imul
push
lods
mov
inc
xchg
dec
jl
lods
daa
mov
mov
addr16
mov
jns
stos
std
xor
dec
sbb
mov
push
popa
jp
arpl
sbb
sbb
out
sbb
icebp
dec
leave
rcll
xchg
pop
into
lret
les
mov
jecxz
loopne
push
push
int3
cmp
mov
xchg
pop
stc
pushf
mov
xchg
cmp
shl
sub
jno
dec
cmp
fcoms
mov
add
sub
push
fsubrs
mov
lods
adcb
sub
and
fadds
xlat
into
lock
xchg
sbb
mov
shll
or
sarb
cmp
ret
or
or
lfs
push
cmpsb
mov
frstpm(287
sbb
cwtl
test
xchg
xor
pop
je
jnp
pop
js
and
fsubrs
lock
fs
pop
sub
fstpt
push
cld
push
imul
sti
daa
sbb
xor
cwtl
mov
call
jl
or
and
sahf
fscale
mov
mov
adc
fidivs
ss
cmp
or
push
insb
sbb
pop
ss
cli
dec
jno
rorb
jo
mov
mov
dec
test
xchg
in
pop
sub
repnz
popf
jle
cmp
ljmp
xor
sub
jne
out
mov
xchg
add
cmp
fsubrl
jecxz
jo
cmp
push
or
clc
fldlg2
mov
shrb
jae
ljmp
xor
sti
je
sub
lock
not
loopne
pop
xlat
mov
adc
push
imul
adc
jecxz
stc
inc
mov
jnp
test
imul
repnz
or
les
fmuls
leave
aam
xor
or
jae
insb
xchg
jmp
jl
sti
cmp
repz
xchg
fnsave
mov
mov
icebp
sbb
mov
out
bound
mov
push
mov
push
xor
mov
mov
pop
nop
aad
fs
scas
push
add
jne
sub
in
mov
push
movsl
xchg
mov
outsb
int
pop
outsb
iret
sub
enter
or
stc
frstor
jl
xchg
inc
sub
jbe
adc
jle
xchg
and
cmp
push
je
adc
incl
repnz
jmp
jno
popw
test
in
push
dec
lret
outsl
lcall
push
aad
test
outsb
sbb
jne
fimuls
cli
mov
push
sub
add
repnz
pop
jnp
jge
ja
mov
fiaddl
jnp
xor
call
xchg
les
sahf
emms
jne
jp
fcoms
clc
stos
add
stos
sar
pop
push
sahf
push
pop
add
test
fists
xchg
out
test
inc
sbb
pop
mov
add
xchg
fstpt
dec
jecxz
insb
jns
jmp
movsl
inc
das
nop
sub
adcb
cmc
dec
stc
add
jo
push
adc
aaa
imul
iret
mov
mov
clc
push
fwait
jnp
mov
xchg
jo
pop
out
fwait
push
inc
ret
daa
sub
iret
cwtl
inc
mov
fidivrs
xchg
les
pop
adc
xor
sarl
mov
pop
leave
pop
test
xor
test
sbb
lea
inc
mov
popa
movsl
mov
inc
or
mov
inc
or
pop
sbb
dec
and
outsl
sbb
es
sub
xor
mov
shl
movsb
jecxz
and
sub
ss
mov
pop
ret
dec
sub
xchg
dec
xor
mov
add
mov
adc
cmp
icebp
mov
pop
arpl
ss
scas
mov
mov
stc
push
imul
fistl
sti
sub
jl
aad
push
pop
test
pop
adc
es
pop
xchg
idivb
sbb
mov
ja
cli
cmp
xchg
jp
fistps
in
fdivs
imul
lcall
jg
mov
mov
pusha
jg
shrl
pop
push
mov
jo
sub
fsts
popf
in
xchg
lock
aaa
fists
repnz
mov
fstl
insb
cwtl
lods
sahf
jae
xchg
dec
mov
ret
mov
outsl
popf
xorl
mov
in
imul
jmp
dec
sbb
add
jg
jmp
mov
loope
dec
stc
sbb
repnz
dec
sub
xchg
outsb
fistl
lret
and
dec
add
jo
lcall
pusha
dec
and
xor
push
jecxz
das
hlt
cltd
insb
in
jge
jne
push
mov
jmp
inc
mov
add
jae
int3
or
lea
shlb
outsb
scas
push
sub
sub
mov
jbe
loop
aas
inc
jmp
push
fcoml
js
cmp
lods
les
fstps
popa
adc
or
lock
stos
inc
outsb
aam
outsb
pop
sub
and
mov
mov
mov
leave
mov
jne
rorl
cwtl
cltd
in
dec
orl
mov
or
inc
adc
add
lea
cmp
jno
or
inc
fisubs
xor
jecxz
sti
push
leave
and
ficompl
add
inc
xchg
fwait
mov
loopne
test
stos
fstps
fldcw
xor
pop
dec
fsubrl
insl
inc
inc
out
and
int3
ds
push
mov
mov
sahf
fidivrl
sbb
shld
fdivrl
sbb
jns
int
push
lea
shrl
mov
cmp
je
jnp
fsubrs
lahf
scas
popa
inc
pop
data16
dec
mov
es
icebp
popa
cld
test
xchg
xor
mov
lcall
mov
jno
jmp
mov
leave
sbbb
daa
cmp
fisubl
xchg
dec
jnp
jle
cmpsl
jl
inc
add
add
out
push
clc
mov
lahf
pop
add
imul
pop
jns
aaa
pop
add
dec
jne
xchg
fldz
xor
ret
imul
xchg
mov
adc
mov
xchg
aaa
scas
sbb
into
nop
pushf
and
mull
xor
xchg
stc
andl
fcompl
jo
ss
mov
mov
test
es
ljmp
cvtdq2ps
dec
cld
mov
mov
mov
pop
mov
and
in
hlt
popf
dec
push
addl
test
sub
sahf
or
or
mov
arpl
mov
mov
jecxz
sahf
fstl
outsl
jg
push
mov
mov
and
das
xor
push
mov
ret
movsb
outsl
test
cmp
dec
cltd
ret
jnp
les
pop
rcrb
cmpsl
lds
jne
push
pop
cmp
call
mov
in
outsl
fwait
cmp
stc
pop
xor
lcall
xor
lock
test
scas
scas
call
jge
fsubrs
mov
pop
and
add
lock
add
or
sbb
pop
adc
jns
jbe
das
subl
cmp
sub
and
test
inc
scas
outsb
gs
push
and
cmc
pop
push
rcrb
ret
fidivrl
rcr
cmp
mov
xlat
push
adc
enter
jl
loop
popf
mov
out
push
aas
pop
mov
fistpll
push
inc
and
insb
test
fnsave
cld
fs
in
adc
push
outsl
out
out
testl
outsl
inc
popf
sub
fidivrl
or
rcll
popf
pop
scas
fadds
xor
lret
jp
inc
test
popa
inc
ret
inc
xor
aad
pop
das
or
cwtl
outsb
lahf
jl
fs
loopne
sub
xor
sahf
pop
test
jae
sti
fldl
lods
mov
roll
and
call
sbb
ss
xor
gs
or
cmp
jmp
insl
jle
xchg
mov
push
add
mov
sahf
icebp
daa
and
cmpsl
call
or
and
cld
comiss
std
or
sub
imul
in
jecxz
pop
fwait
jge
adc
push
into
aaa
push
out
js
add
psrlw
xlat
xchg
xor
adc
push
stc
inc
icebp
pop
push
inc
lods
inc
pop
outsb
call
add
push
sub
repz
pop
popl
sbb
cli
pop
add
mov
mov
js
dec
inc
mov
lret
push
and
add
and
out
daa
sbb
daa
cwtl
in
stos
and
fsubp
sbb
xchg
jg
stos
in
shrb
int
shl
stc
insb
cmp
mov
sbb
mov
mov
lea
fiadds
aam
and
pop
mov
sub
in
dec
popf
ret
pop
add
ret
int
loopne
xor
dec
shr
aam
adcb
scas
cld
mov
aas
mov
lahf
loopne
mov
lret
push
dec
jge
adc
jo
fucomi
mov
or
push
enter
test
jmp
dec
sahf
ffree
sub
xor
fnstsw
jae
xchg
pushf
sbb
out
cmp
or
mov
dec
xbegin
mov
pop
outsb
stc
xchg
es
jmp
outsl
cmp
inc
shlb
adc
std
mov
mov
jno
mov
mov
rcll
imull
pop
sar
inc
fmuls
cli
data16
cwtl
lods
dec
pop
mov
push
mov
mov
push
pop
jle
bound
filds
std
xchg
fidivs
xor
imul
test
cmp
mov
loope
mov
push
pop
imulb
incb
dec
scas
xor
sbb
in
jp
inc
add
inc
push
add
stos
inc
xchg
cli
sub
mov
inc
sbb
push
pop
or
adc
xor
popa
movsl
xchg
in
leave
enter
xchg
aam
and
cmp
insb
inc
cmp
rcr
jecxz
stos
inc
xor
or
xor
add
and
imulb
mov
inc
xchg
lods
mov
push
add
aad
or
cmp
jecxz
lcall
sbb
xchg
pop
pop
jp
jecxz
mov
inc
sub
call
mov
inc
pop
xchg
ret
cltd
push
pop
mov
xchg
mov
gs
outsl
sub
mov
and
xor
lock
loopne
std
andb
rorl
sti
iret
mov
rol
push
jg
mov
jae
stc
rcrl
sbb
repnz
mov
fcoml
sbb
sub
mov
push
fsubs
xor
sub
add
shrb
or
sbb
pusha
jmp
mov
cmp
adc
test
lds
mov
sbb
pusha
jne
and
inc
gs
aaa
andb
in
dec
aad
test
sbb
mov
lret
adc
in
adc
mov
shl
sahf
and
dec
sbb
jmp
sub
mov
enter
mov
in
cmpsb
jle
xor
test
adc
ja
lcall
xor
dec
push
push
mov
ret
mov
arpl
cltd
push
int
xchg
sahf
adc
cli
mov
or
shrl
push
mov
mov
mov
insl
pop
icebp
xchg
jecxz
or
fildl
stc
rorb
adc
aam
mulb
sbb
pop
fdivrs
in
stos
push
mov
fbstp
les
loopne
icebp
inc
imul
xor
leave
jo
mov
push
cmp
adc
xor
xchg
stc
mov
and
push
jl
mov
lock
scas
xchg
lods
inc
movsb
movsl
and
cld
pop
iret
and
pop
arpl
cmp
iret
jecxz
scas
push
jp
aaa
fsubs
mov
repz
jne
js
stc
inc
push
fld
aas
sbb
inc
loop
or
in
mov
push
or
loopne
pop
hlt
mov
xchg
jb
xchg
adc
add
lds
sub
add
movsl
mov
insl
rol
inc
inc
jp
sub
cmp
addr16
mov
rcl
and
fcompl
pushf
and
push
ljmp
cmp
jl
loope
out
fistl
aaa
in
pop
mov
or
outsb
cmp
shrd
shlb
out
fdiv
fisttpl
je
shll
and
and
ja
mov
fistl
mov
dec
sbb
pop
idivb
rol
and
into
pop
inc
add
sbb
stos
xor
in
adc
mov
aas
and
test
xchg
rcr
mov
pushw
mov
cmp
mov
ret
mov
outsb
mull
imul
mov
jbe
cmp
pop
add
dec
mov
repnz
jne
jle
dec
and
push
out
insl
xor
dec
daa
jmp
add
mov
mov
mov
sbb
push
sbb
pushf
mov
xchg
lds
mov
sub
push
and
sub
sub
in
pusha
ss
adc
fmul
stc
jo
xor
cli
jno
out
jne,pn
test
mov
aam
repnz
test
fbstp
mov
mov
int
sub
xor
in
fiadds
mov
lret
aad
sub
and
cmp
add
or
jnp
sti
and
push
sub
gs
mov
mov
xchg
push
arpl
pop
push
xchg
std
ljmp
sub
ss
adc
mov
pop
or
mov
sub
popf
clc
aam
mov
pop
enter
sti
movsl
adc
into
pop
int3
ror
pop
mov
sub
cltd
rcll
loop
fmulp
scas
jnp
pop
lods
dec
cmp
cmp
push
inc
ficompl
adc
loopne
imul
jecxz
adc
xchg
push
in
in
mov
test
outsb
ss
inc
ja
iret
xlat
into
mov
insb
repnz
jne
shlb
adcl
add
pop
hlt
and
fisubrs
mov
negl
pop
mov
imul
js
and
sub
push
jl
pop
fcompp
js
daa
mov
bound
jns
fnstenv
shrb
xchg
cmc
jns
pop
lret
xchg
push
dec
mov
mov
popf
testl
loop
in
sbb
mov
mov
mov
sub
movsl
aad
inc
shl
testb
cld
push
sar
aad
mov
rorb
and
mov
add
hlt
inc
mov
mov
jg
rcl
dec
mov
mov
les
mov
pop
incb
fsubl
mov
pop
sbb
icebp
repz
push
mov
enter
xor
pop
dec
xchg
loope
scas
fnclex
pushl
movl
aaa
sahf
test
pop
xor
in
inc
loope
imul
mov
adc
mov
add
int3
shlb
shll
test
and
or
enter
mov
jo
mov
cmp
sub
add
fdivs
mov
and
cld
cmp
stos
fwait
sbb
inc
pop
xor
pop
pop
loop
xchg
jmp
outsl
mov
stos
jno
imul
or
inc
in
push
cltd
lret
cli
xor
sbb
pop
in
gs
rcll
rcrb
mov
sub
outsl
pop
stos
sarl
mov
pop
jbe,pn
in
pop
jns
mov
cmpsl
in
or
mov
ret
mov
push
inc
mov
dec
adc
pop
movsl
ja
dec
movsl
push
or
ss
sub
cmpsb
adc
sub
inc
cwtl
push
sub
mov
and
icebp
test
fmulp
pop
cmc
xchg
jns
push
adc
ficomps
cmp
fadds
mov
push
idiv
daa
addb
mov
lea
xchg
cmpsl
mov
push
cmp
mov
shlb
aam
es
push
aad
cli
cwtl
push
jge
leave
dec
repz
cmp
lcall
push
inc
ret
dec
mov
jnp
pop
in
sahf
shl
in
out
rcrb
and
gs
cmp
cmp
sub
stc
movsb
xor
mov
sub
loope
xor
flds
sub
pop
pop
mov
mov
or
lret
xorb
rcll
push
cmp
fldenv
jmp
fcmove
rorl
jb
push
rolb
in
jo
fwait
sub
mov
lahf
lret
add
lahf
jle
movsl
cmp
lods
and
add
jp
push
rclb
xchg
out
dec
lret
aad
test
jp
repz
js
jp
jg
sub
adc
push
aaa
xor
sub
aad
imul
cmp
xchg
jecxz
out
jmp
push
scas
fildl
les
aas
mov
popf
jbe
outsb
test
rcrl
inc
ret
adc
mov
cmp
sub
lods
jo
out
and
cmp
out
jae
mov
sub
into
add
je
xchg
xchg
add
add
jns
jne
test
dec
dec
ret
pop
or
repz
hlt
pop
adc
pop
dec
arpl
mov
and
jle
adc
add
or
fistpll
fstpl
mov
dec
mov
xor
xchg
pop
ja
or
sbb
fistpl
cmp
push
jo
mov
notl
aaa
pop
xchg
xor
or
ja
adc
or
pop
xchg
test
and
and
ss
out
mov
adc
faddl
mov
push
ds
mov
pop
cltd
int3
jmp
sbbb
jge
xchg
mov
cmpsb
adc
fisttps
shll
loopne
aad
jno
lret
mov
lods
mov
push
push
mov
ret
or
pop
int
mov
lods
scas
xlat
pushf
jmp
rcll
stos
mov
mov
ret
jno
mov
fidivrs
rcrl
xor
out
jnp
jmp
into
popl
ljmp
cmpsl
pop
sbb
adc
sbb
call
adc
mov
rcll
xchg
aam
js
imul
loopne
inc
aad
add
sub
je
fs
push
sub
jns
outsl
sbb
xchg
cmp
jecxz
sub
test
push
dec
sti
std
ficompl
sub
cmp
in
mov
cltd
movsl
js
dec
lods
icebp
jecxz
leave
inc
ficomps
imul
movsl
stos
push
ficoms
int3
shlb
jo
and
fidivrs
mov
pop
pusha
xchg
add
sbb
or
test
xlat
pop
int3
dec
adc
scas
pushw
es
cmp
xor
cmp
clc
enter
inc
inc
imul
fwait
movsl
icebp
andl
inc
ret
aaa
fnstenv
test
mov
pop
cmc
lahf
call
mov
std
adc
mov
pusha
and
loope
xor
xchg
out
xchg
jo
sbb
xor
pop
xor
pop
add
movsb
add
add
sub
mov
dec
stc
mov
imul
imul
loopne
xchg
fcoms
xchg
push
xchg
sbb
jno
mov
mov
adc
push
std
lcall
cmc
sbb
mov
lods
jl
xchg
test
sub
aam
out
xor
int
sti
out
aad
jp
out
lds
jl
cmpsb
dec
mov
loop
pop
movsl
xchg
cmp
leave
int3
aam
mov
cli
lods
jns
jg
jle
inc
lret
jns
sti
mov
mov
mov
push
xchg
pop
fwait
jno
xchg
stos
push
popf
mov
mov
mov
incb
mov
cld
cmpsb
jbe
ret
mov
ss
daa
mov
mov
lret
lcall
fdivl
ljmp
xor
insb
jg
inc
mov
bound
sbb
mov
out
stos
inc
cmpsb
pop
or
dec
loope
push
stos
sub
cmp
mov
xor
inc
sub
aas
mov
sbb
out
and
mov
lods
leave
mov
xor
loopne
mov
pop
ret
ss
rclb
push
and
pusha
movsl
mov
test
cmc
mov
popf
sub
pop
iret
mov
unpckhps
xchg
cmp
stc
sub
jecxz
mov
fs
movsl
and
xchg
fwait
cli
ret
out
cmp
push
das
cmp
int
lahf
clc
test
adcl
lcall
adc
das
enter
imul
subl
stos
movsl
inc
test
xchg
loopne
xor
int
jae
cmpsb
sub
mov
push
popl
push
sub
loopne
mov
push
lea
insb
and
xor
cmp
loop
mov
outsl
fld
sub
xchg
in
mov
sbb
inc
cli
xor
jmp
shrb
mov
or
add
jo
push
or
clc
sub
cmpl
adc
xchg
loop
divb
into
inc
cmp
out
test
loopne,pt
mov
push
aaa
jb
sti
pop
push
pop
fcmovnb
stc
popa
or
aad
sub
repnz
fistpll
jp
mov
push
scas
aad
or
xlat
nop
jno
push
sub
lds
shl
inc
ret
push
push
inc
out
loope
or
sub
je
cmp
cmpsl
mov
sti
and
movsl
push
stc
adc
sahf
jmp
sahf
adc
shlb
fcompl
jge
mov
add
sbb
sub
dec
roll
jg
xchg
loop
aas
in
push
aam
aam
and
arpl
mov
adc
inc
aam
mov
mov
cmp
pop
lcall
lods
stc
imul
jns
xchg
push
mov
rolb
jmp
cli
clc
jns
insl
sub
in
repnz
jo
add
sbb
insb
out
adc
sbb
out
and
push
pushf
lahf
mov
popa
xor
add
push
insl
outsl
sub
test
mov
inc
imul
shl
cs
xchg
sbb
jbe
xchg
add
mov
pop
daa
cmp
sahf
gs
dec
jns
push
cmp
pop
ljmp
push
mov
and
testb
cwtl
das
jle
frstor
xchg
sub
or
shrb
test
mov
lods
roll
cltd
jb
aad
ret
inc
int3
mov
test
xchg
jmp
push
cmp
jo
xor
jle,pn
lahf
int3
push
outsb
sti
dec
sub
mov
lret
dec
push
jbe
push
ds
sub
das
loop
icebp
faddp
ret
stc
sub
jmp
xchg
or
add
jnp
hlt
fs
lock
loopne
hlt
sub
test
jno
sti
jmp
xor
pop
pushf
sti
jno
mov
outsl
into
stc
adcl
xchg
sub
mull
xchg
sbb
mov
mov
sub
mov
outsl
inc
sbb
inc
mov
lea
mov
sub
adc
and
jne
pushf
cld
cmpsb
adc
push
fmuls
stc
mov
or
jmp
mov
pop
jbe
in
mov
dec
push
sub
int
imul
ja
outsl
jne
jecxz
je
rclb
push
lock
lea
mov
dec
ljmp
mov
inc
mov
or
push
xchg
dec
xor
push
pop
mov
pop
stos
mov
rclb
sub
lea
jecxz
in
out
cwtl
int
dec
inc
test
adc
shl
cwtl
jne
or
adc
xchg
stc
jl
jns
mov
cmpsl
jbe
test
and
jge
pop
daa
sub
sbb
xchg
mov
inc
repnz
jl
push
sub
adc
jge
cli
add
roll
inc
mov
lock
mov
pop
push
clc
cmp
or
jo
mov
lcall
out
ljmp
lock
js
mov
mov
add
mov
out
pop
pop
jge
ja
xchg
xor
cmp
mov
lcall
mov
mov
nop
push
push
xchg
daa
sbb
lods
gs
mov
shr
pushf
out
ficomps
fidivl
cwtl
leave
cs
jmp
mov
sbb
pusha
stos
add
in
lods
push
add
inc
cltd
mulb
in
test
pop
cmpb
sbb
icebp
push
scas
or
stac
cltd
jp
sub
ljmp
pop
pop
mov
bound
mov
or
mov
mov
push
inc
cmp
jmp
int3
lret
into
popa
fadds
jmp
pop
mov
pop
xor
mov
cltd
repnz
mov
addr16
fcom
pop
jne
sbb
or
icebp
addr16
mov
cmp
cmpsb
cmpsl
inc
dec
jg
outsl
in
cwtl
inc
mov
sarb
rcrl
ret
sub
sbb
addr16
addl
mov
enter
push
xor
nop
fisttpl
inc
jns
imul
add
mov
out
adc
inc
mov
cmpsl
outsl
pushf
lahf
jns
adc
lahf
mov
cmp
push
and
ret
dec
dec
push
mov
sub
push
pusha
xchg
movsl
stc
in
mov
adc
and
sbb
in
xchg
sbb
jnp
aad
xchg
mov
xor
mov
stos
mov
dec
lret
sbb
sahf
mov
xchg
in
fldl2e
int3
imul
decl
andl
and
movsl
add
sbb
add
cmp
push
jge
loope
test
mov
pop
xchg
test
jne
mov
rorl
fdivrl
adc
fisttpl
inc
cmp
mov
ret
inc
adc
or
arpl
mov
adc
jb
cmp
cmp
icebp
mov
mov
add
and
sbbb
cli
out
cmpsl
pusha
les
adc
stc
bnd
push
les
outsl
insb
loope
mulb
push
jp
loopne
cmp
inc
stos
xor
mov
inc
loope
out
ja
mov
stos
data16
stos
loope
jmp
repz
jns
scas
jb
inc
push
scas
or
mov
aad
push
inc
jbe
and
push
mov
or
popf
jne
jo
mov
xor
cmc
and
or
jmp
sbb
jg
clc
jnp
xchg
pop
lods
fsubl
out
cmp
dec
sbb
arpl
mov
cli
mov
lods
lahf
popf
push
add
pop
orl
scas
lock
inc
mov
push
ret
shlb
cmp
cmp
xor
imul
dec
pop
mov
or
jb
mov
sahf
sbb
cmp
jno
push
bound
cltd
outsl
mov
bound
pop
int
inc
in
dec
xchg
sbb
ss
xchg
dec
mov
inc
mov
push
repnz
scas
filds
cmp
stc
icebp
pop
scas
fsubrs
xchg
xchg
iret
or
adc
lret
add
jg
mov
enter
add
xchg
cmp
mov
push
and
adc
sbb
add
xchg
out
into
xchg
fmuls
fldl2t
push
lods
test
loop
push
std
add
cwtl
adc
movsb
sbb
jbe
xchg
mov
into
lahf
xlat
cmpb
es
jb
or
int
xchg
pop
mov
sti
cmpsl
push
xchg
rclb
xlat
cld
and
push
push
call
xchg
std
jmp
xchg
adc
std
test
lds
push
notb
pop
jl
mov
mov
cwtl
xor
fsts
mov
push
xchg
push
cli
es
sub
jbe
fldl
stc
pop
cli
dec
rcl
add
adc
adc
pop
cld
push
shr
sbb
popa
repz
lea
sbb
notl
fstl
adc
pop
test
and
ret
sub
fldpi
fiadds
idivl
cltd
lret
mov
cmp
fisubs
or
loop
lock
icebp
push
adc
or
sti
inc
aas
mov
enter
je
xchg
fildl
mov
xor
ficomps
fwait
inc
mov
dec
and
pop
mov
in
push
movsl
test
fmull
enter
cmc
test
cmpb
outsb
xor
insb
xor
outsb
sbb
push
pop
adc
ja
jp
fstp
cld
lock
sub
jne
or
xor
push
xchg
clc
std
mov
or
lea
ret
push
xchg
iret
pop
rcr
iret
cmp
dec
repnz
jg
or
adc
imul
and
das
pusha
nop
pop
popa
add
xorb
adc
int
mov
fmull
jne
push
add
dec
orl
adc
pop
adc
into
pop
inc
lret
adc
mov
adc
jne
sub
jle
negb
aas
adcl
add
jnp
jno
add
lock
fldenv
jmp
mov
mov
pop
loop
jmp
inc
ja
xchg
ds
daa
int3
and
dec
movsl
pop
jle
daa
sbb
stos
jle
push
pop
cmp
mov
xchg
jl
inc
xchg
insb
test
out
shlb
sbb
xor
negb
js
dec
pop
mov
andl
xor
or
icebp
xor
lret
subb
pop
xchg
int
xchg
jle
xor
mov
sbb
or
addr16
push
pop
mov
and
sub
and
mov
xchg
pop
test
fcompl
xchg
xor
jns
aas
and
out
popf
adc
popa
fistl
flds
pop
movsl
ret
subl
scas
mull
pop
xor
xor
sbb
fnsave
leave
and
lock
push
pop
scas
jbe
rorl
mov
sbbb
sbb
cmp
nop
mov
insb
div
sbb
mov
or
fisubs
cmp
leave
sbb
mov
pop
xor
push
xor
stos
lcall
jl
andl
fldcw
das
movsb
xor
pop
mov
fdivl
mov
ds
add
js
xor
rclb
or
lahf
push
mov
mov
jbe
xor
pop
mov
jg
mov
test
aad
std
mov
cltd
and
idivb
out
outsb
cmp
mov
sub
mov
jl
out
mov
xor
xor
mov
fcoms
test
jnp
lahf
ret
mov
push
cld
test
shl
mov
dec
sub
or
push
mov
rcr
sbb
pop
mov
cwtl
addl
out
test
mov
sti
pushf
xchg
test
xchg
or
cli
hlt
insb
mov
xchg
sub
jle
push
inc
pop
insl
xchg
outsb
or
dec
push
dec
fldt
pop
mov
leave
test
adc
sub
pop
mov
jle
outsb
hlt
ljmp
sub
add
jp
nop
mov
gs
addl
cmpsb
rcl
bound
repnz
pop
pop
inc
xchg
popa
sub
lret
jmp
xchg
call
mov
in
shll
cmp
stos
out
cltd
mov
mov
sbb
jle
dec
mov
xchg
lahf
add
and
jl
sub
ljmp
add
cli
xchg
enter
add
add
sbb
cmc
add
mov
mov
pop
xchg
jp
xchg
loope
sbb
jmp
ja
xchg
insb
popa
iret
sbb
xchg
cmp
xchg
ss
add
jns
mov
aad
cs
out
cli
inc
inc
out
cmc
mov
inc
push
repnz
bound
mov
adc
cs
int3
add
loop
lea
rcrl
shlb
jo
enter
dec
mov
fwait
adc
adc
call
mov
cmp
int3
sub
fnstsw
ret
mov
gs
xor
push
sbb
loop
cmc
mov
loopne
xchg
movd
jno
outsb
mov
dec
clc
or
scas
add
or
and
in
xchg
filds
arpl
xor
movsl
stos
ss
pop
jne
out
out
push
ss
pop
jbe
int
push
clc
mov
out
cltd
mov
sbb
bound
aaa
movsb
andb
bound
mov
fldenv
and
cmp
jmp
add
cmp
lds
testl
dec
jle
mov
mov
es
popa
call
nop
sub
sub
sbb
sub
hlt
xor
in
outsb
call
test
movhps
mulb
push
repz
scas
lret
test
shlb
lods
and
sbbl
and
iret
push
dec
std
xor
insb
adc
das
sub
nop
testl
push
mov
and
xor
shlb
insb
push
insb
xor
xor
scas
adc
les
or
mov
nop
push
cmp
jbe
fnsave
mov
or
add
cmp
cs
xor
popf
repz
add
fcmovnu
js
inc
cmc
pushf
sahf
nop
sti
int3
add
popf
cmc
cmp
cmp
jo
add
fnsave
imul
std
mov
nop
neg
add
mov
and
sub
mov
xor
shlb
orl
hlt
test
insb
push
xor
fiaddl
pop
mov
popf
cs
lret
into
or
fidivs
sbb
fcmovnu
mov
pusha
stos
into
jmp
inc
jge
loopne
nop
out
das
pop
sub
push
repnz
xchg
mov
call
fdiv
xor
inc
adc
hlt
les
ss
pusha
lods
icebp
ljmp
pop
or
xchg
xchg
addr16
pusha
sub
jle
ss
loopne
or
cmp
and
ljmp
icebp
std
mov
xlat
js
out
hlt
xchg
ficoml
cmpsb
cld
xchg
cmp
popf
jb
inc
or
fisttps
sbb
push
adc
mov
shl
cmp
shlb
or
inc
inc
cmp
sti
push
scas
dec
adc
adc
inc
sbb
push
fwait
or
jne
aad
jecxz
inc
dec
stos
and
stos
push
inc
stos
pop
loope
imul
xorl
push
fistl
jecxz
cwtl
inc
cmp
sti
xor
or
testb
hlt
test
in
ret
shrl
sub
cltd
mov
lods
mov
xchg
fnstenv
mov
jp
adc
mov
in
mov
mov
mov
push
mov
jmp
mov
sbb
pop
cmp
popf
xor
adc
xlat
js
or
jne
dec
cmp
adc
adc
mov
xchg
cmp
dec
cs
pop
pop
in
icebp
push
sub
pop
sbb
lods
mov
test
lret
test
mov
or
hlt
or
insl
sti
iret
inc
test
pop
lret
xchg
cmp
add
cs
jge
popa
add
jle
insb
mov
dec
mov
stc
ret
fs
cmp
sbb
fistps
cmpsl
sbb
mov
dec
adc
fcomps
cmp
idivb
int3
push
or
fmull
mov
aaa
xor
and
push
xchg
sti
pop
xchg
scas
adc
cltd
fadds
les
add
sub
jnp
mov
fwait
jo
fildl
bound
mov
outsb
xchg
rorb
movsl
mov
mov
movsb
sub
xchg
ror
gs
cli
jl
xchg
jl
cmp
jno
fcomi
jns
inc
and
pusha
cld
inc
rorb
xchg
aaa
dec
jecxz
cmpsb
dec
enter
add
add
inc
and
xchg
add
inc
cmp
les
push
rorl
shr
cli
pushf
sbb
nop
or
rolb
orl
aam
icebp
jae
data16
push
mov
stos
call
xlat
sbb
hlt
fdivl
dec
in
out
clc
jp
lods
or
cmc
sahf
loopne
cli
xchg
ljmp
add
loope
sub
stos
mov
ss
push
mov
leave
push
push
dec
iret
add
outsb
or
push
shrd
hlt
pop
add
sbbl
std
pop
and
popa
and
movsl
int3
je
cmpsl
sbb
mov
push
js
loopne
das
adc
cmp
jb
int
clc
sub
ljmp
mov
xlat
mov
std
stc
cmp
sub
in
pop
mov
movsb
aad
lahf
push
jnp
call
clc
add
mov
mov
push
cmpsb
cmp
push
clc
test
xor
xlat
add
in
movsb
stos
jnp
repz
popa
pop
cmp
jmp
pushf
sub
popa
popf
cmp
leave
mov
or
not
movsb
rcl
cmp
outsl
inc
push
mov
inc
cmpsl
loop
ret
xcrypt-ctr
cmpsl
fisubs
loopne
test
mov
pop
cmp
fisubs
and
idivl
dec
paddb
out
inc
insl
add
push
test
sub
add
cmp
jns
das
adc
addb
mov
add
mov
mov
popf
aam
jno
rcrb
insb
and
jp
flds
add
push
push
push
jg
out
jb
add
xchg
cmc
mov
jge
xchg
mov
loopne
mov
ljmp
cld
mov
loopne
xor
scas
adc
xchg
mov
lahf
sbb
imul
stc
movsl
popf
adc
ret
scas
enter
lcall
jg
scas
pop
dec
std
loop
mov
mov
mov
mov
xchg
imul
repz
jo
pusha
jo
xor
outsb
mov
divl
loopne
pop
sti
sub
ss
xchg
push
and
xchg
or
cmp
and
push
add
sahf
cmpsb
add
daa
out
jge
fwait
or
fwait
cmp
lcall
andb
pop
push
cli
push
inc
inc
and
jle
inc
mov
mov
inc
mov
data16
aam
and
cmp
push
push
add
sbb
cmovle
push
testl
mov
scas
arpl
pop
mov
sbb
adc
movsl
and
lds
jne
push
jg
jno
loop
cmp
mov
sbb
in
or
adc
mov
sub
add
dec
sahf
ja
in
xor
cmpsb
stos
sar
fwait
imul
lcall
jne
dec
jae
jl
outsb
xchg
popa
icebp
call
pop
xlat
jmp
cmpsl
cmpsl
inc
cmp
mov
lahf
iret
xchg
mov
dec
jae
das
jae
scas
sub
push
lret
or
mov
push
push
inc
popl
jbe
lea
loope
out
lods
mov
add
xchg
incb
call
jmp
gs
cld
sbb
int
add
out
mov
movsb
aas
cmp
inc
mov
leave
lcall
or
test
mov
inc
cmpsb
outsl
mov
pop
xchg
stos
ret
and
jns
mov
fildll
add
mov
insb
push
dec
popa
leave
push
sbb
mov
mov
fs
sbb
inc
jns
lods
add
adc
xor
iret
dec
push
cli
pop
inc
int
xchg
mov
aad
test
cmpsb
add
sub
add
dec
outsb
jnp
popa
inc
stos
outsb
jb
inc
es
test
cli
xor
adc
movsl
movsl
fcmovnbe
push
ss
das
cmc
insl
mov
xchg
mov
lods
sbb
sub
mov
xchg
jl
lods
pop
mov
sbb
lods
ss
push
pop
fidivrs
adc
inc
adc
mov
adc
pop
inc
xlat
dec
sahf
sbb
jecxz
jbe
ja
xchg
pop
xor
sub
popa
jle
mov
mov
jmp
lock
fs
aad
lret
jo
clc
pop
dec
xor
adc
jge
dec
xchg
out
arpl
dec
inc
mov
xor
dec
outsl
mov
movsl
sub
in
clc
insb
fldcw
cld
mov
jnp
fnsave
mov
inc
mov
push
add
xchg
mov
sub
sahf
enter
mov
insl
loope
popa
xchg
xchg
mov
mov
cmc
push
mov
jne
inc
sbb
test
mov
cmp
enter
das
stc
sub
outsb
das
cld
icebp
aam
pop
rcll
lods
rcll
stos
sbbb
aas
xor
scas
rcrl
adc
nop
pop
sahf
lret
jns
mov
clc
push
hlt
push
fs
int3
iret
and
daa
insl
mov
je
pop
pop
aam
jmp
icebp
mov
and
jp
mov
mov
cmp
lds
jno
adcl
out
mov
jmp
push
xor
rorb
and
push
jecxz
cmc
push
push
push
xor
add
add
cmpsb
push
mov
mov
out
fdivr
cmp
mov
dec
xor
lahf
idivl
jb
mov
pop
popa
dec
pushf
xchg
in
out
adc
adc
movsl
lcall
sbb
or
loope
mov
dec
lds
ret
mov
cli
inc
cmp
pop
loope
mov
xchg
pop
and
jecxz
into
pop
lret
aas
aaa
push
xchg
cmpsb
sub
mov
test
xor
push
mov
in
cmp
and
out
push
imul
dec
fcmovnu
sub
je
movsl
loop
je
stos
mov
sti
pusha
jo
cmpsb
adc
test
pop
shll
popf
xor
int
cwtl
mov
dec
jmp
stc
mov
mov
icebp
cmp
dec
enter
push
out
outsl
cmpsl
fwait
xchg
outsb
cmc
jmp
mov
aad
aad
push
jmp
cmp
stc
xchg
inc
clc
mov
sbb
and
xor
lahf
adc
fadd
jbe
insl
jmp
mov
sbb
ds
mov
fildl
in
mov
cmpl
popf
pushf
push
lret
scas
sahf
sub
repnz
fadd
inc
fisubs
enter
add
das
pop
xor
sbb
jg
ljmp
ja,pt
js
mov
movsb
fcoms
insb
andl
and
jle
cwtl
pop
int3
push
mov
mov
pop
jnp
mov
sub
sub
arpl
sbb
aas
ds
push
inc
jbe
mov
mov
cmc
mov
insb
mov
push
dec
jp
or
adcb
repnz
push
movsl
fwait
rorl
jmp
int
addr16
cmp
push
jae
cmp
je
cmp
pop
inc
mov
fmul
adc
xor
push
fisubrl
in
mov
shll
test
out
push
lret
popa
inc
out
std
jl
lcall
pop
push
and
fcmovbe
ret
xchg
popa
inc
xchg
jl
inc
cs
dec
out
mov
jl
stos
mov
enter
scas
add
sbb
shlb
in
dec
jb
xor
cmpsl
push
jae
mov
out
outsb
cmp
lods
cmpb
ficoml
icebp
cmp
mov
dec
mov
cmp
dec
test
mov
cwtl
jmp
sub
repz
sbb
sbb
icebp
sbb
push
out
sub
cmp
hlt
aas
ret
push
push
faddl
xchg
cmp
mov
repz
adc
dec
clc
fiaddl
outsl
cltd
ljmp
into
push
adcl
pop
pop
xchg
xchg
xchg
lret
lss
mov
jg
aam
insb
out
mov
dec
sbb
sarl
lahf
xchg
mov
je
mov
mov
sub
and
dec
inc
dec
lahf
push
loopne
mov
add
sub
mov
xchg
xor
sbb
psubusb
push
xchg
cmp
xor
sbb
or
ror
lods
sbb
rorl
mov
je
push
inc
xor
jp
dec
sbb
popf
xor
lcall
mov
jnp
pusha
sbb
sbb
adc
adc
insb
push
jo
jne
fcoms
lret
repz
int3
push
sbb
push
mov
clc
lcall
fdivl
pop
jl
add
sub
dec
mov
je
popa
mov
inc
push
lret
mov
popf
imul
cli
add
das
add
mov
sub
movsl
daa
jo
sub
cmp
repnz
lret
fists
adc
ds
pop
lret
out
int3
sub
enter
sbb
push
xor
lret
js
sarb
rolb
xchg
insb
and
inc
popf
jg
inc
lahf
mov
dec
dec
insb
or
pop
test
call
arpl
imul
push
lods
sub
mov
scas
fists
fidivl
cwtl
or
adc
cld
mov
jp
arpl
addb
arpl
dec
cmp
into
pop
scas
test
sbbl
sbb
mov
std
pop
pushf
xchg
test
push
sub
sub
or
into
in
das
jmp
push
adc
add
dec
in
xor
jnp
add
adcl
mov
fnstsw
lea
push
jmp
or
pop
out
in
shl
fstpl
cld
bound
js
repnz
addr16
and
mov
mov
pop
mov
stos
xlat
lock
test
dec
lds
mov
out
aas
mov
jo
subl
mov
out
pusha
pop
push
jno
gs
fstl
push
xor
jnp
bound
or
mov
dec
mov
sti
pop
in
js
push
cmp
std
xchg
mov
outsl
or
popf
dec
in
std
insb
fistps
xchg
xchg
insb
addb
rclb
sbb
push
xor
xor
pop
pop
ja
pop
lods
arpl
stos
xchg
or
xchg
out
xchg
mov
popf
aam
fst
mov
fsub
mov
mov
or
rcr
fdivrs
add
pop
push
cld
stos
lret
sarl
cmp
dec
push
rcll
fdivrs
xor
rol
adc
arpl
pop
test
ds
push
mov
and
negl
in
xlat
or
jecxz
int
adc
in
add
add
shr
mov
and
adc
pop
xchg
jge
lock
test
ljmp
fists
lret
cmp
mov
inc
mov
lcall
test
addr16
xlat
jnp
rcrl
cmp
xchg
add
add
push
mov
push
and
dec
dec
mov
mov
outsb
dec
aam
fisubl
lcall
stos
iret
orb
cmc
out
into
testb
lcall
scas
sub
daa
mov
mov
inc
mov
cmp
stos
pop
lret
outsl
adc
jp
pop
lahf
inc
bts
aas
je
xchg
xchg
cmp
idivb
repz
or
loopne
mov
out
pop
and
insl
add
popf
cmpl
sbb
hlt
inc
aam
or
xor
mov
dec
out
and
outsl
and
mov
out
inc
fsts
add
insl
jno
ficoml
push
jb
xchg
xor
cmp
push
test
pop
test
test
adc
sarb
cmp
jp
gs
xor
fbstp
adc
cmpl
cmp
test
push
test
dec
cmp
or
sti
pop
dec
ret
mov
lret
out
push
sbb
sarb
jl
mov
add
pop
sbb
pusha
dec
decl
mov
cmpsb
cmpsl
stos
inc
adc
lock
pop
jnp
in
mov
pop
pop
add
int
das
mov
neg
fstps
pop
out
cmc
rcl
xor
add
or
push
mov
cmpb
push
je
mov
jp
mov
sbb
xor
jo
xchg
mov
out
inc
loope
jns
xchg
movsl
cli
jne
out
rcrw
pop
mov
push
dec
inc
inc
outsl
hlt
mov
popf
rorl
cs
lahf
jmp
mov
xor
sbb
mov
push
mov
shrl
ret
dec
xor
or
jmp
dec
cmp
lods
notl
cltd
sti
mov
sub
xchg
into
dec
xchg
clc
shr
adcl
movsb
movsb
inc
ss
sbb
fwait
dec
xor
fldenv
popa
adc
mov
pop
test
decb
sbb
mov
adc
dec
cmp
insb
imul
or
sbbl
xchg
xlat
loope
mov
xchg
or
inc
dec
mov
mov
scas
lock
xor
mov
dec
loop
iret
sub
aad
aaa
ds
or
loop
push
int
sahf
push
enter
mov
add
push
outsb
adc
leave
sub
movsb
jne
loop
imul
dec
cmp
ljmp
imul
inc
cmc
aam
jge
cmp
and
cmp
fstpl
std
adc
sub
and
sub
add
mov
mov
push
cmp
pop
push
jne
and
fisubs
xor
push
lret
cmp
or
inc
incb
cwtl
js
outsb
sbb
stc
bound
roll
imul
leave
cs
popf
adc
popf
ds
or
inc
pop
sub
inc
jmp
aad
add
mov
insb
sbb
mov
mov
push
clc
sbbl
push
cmp
mov
bound
rcr
xchg
xchg
mov
dec
in
pop
inc
mov
cmp
outsb
fs
pop
push
fcoms
push
inc
xacquire
rcr
std
jb
iret
mov
sti
je
xorb
lea
sbb
stos
aam
popa
dec
cli
xchg
das
fisttpll
push
popa
mov
jmp
and
mov
mov
clc
out
ljmp
adc
push
xchg
jae
xor
js
fs
sysret
les
rol
mov
push
dec
lahf
inc
sbb
push
outsl
int3
cli
cwtl
nop
aad
xchg
popf
idivb
jb
pop
in
and
and
loop
test
add
inc
sti
mov
rcr
pop
push
push
ds
inc
arpl
dec
repz
jne
inc
jnp
lcall
cmp
rcl
xor
push
push
dec
lcall
notl
rorb
in
add
scas
ss
fisubs
test
mov
add
jl
push
gs
mov
insb
jns
arpl
mov
xchg
and
cmp
es
push
data16
in
pop
or
es
out
jne
adc
add
hlt
popf
mov
jnp
test
js
aaa
add
sub
sub
pop
rcrb
add
das
dec
push
push
add
sub
sbbl
inc
dec
adc
cld
and
sbb
or
in
stos
cmp
je
mov
popa
fdivrl
xchg
lds
mov
xor
sar
push
jns
movb
in
leave
xlat
mov
push
mov
lods
adc
mov
xor
scas
ret
mov
mov
iret
ret
inc
lods
lret
xbegin
dec
shrl
mov
pop
or
scas
push
test
push
pop
xor
inc
outsb
add
popa
inc
mov
mov
sarb
ja
addr16
mov
leave
push
leave
inc
or
iret
out
dec
dec
fistpl
xchg
add
pusha
lds
loope
test
add
push
shll
and
sbb
adc
imul
mov
push
xor
cltd
or
inc
call
test
out
int
nop
rorl
test
or
pop
pop
and
jg
push
jno
cmc
mov
push
fwait
pop
jg
lret
dec
dec
and
repnz
scas
inc
fimull
imul
inc
faddl
imul
mov
mov
enter
cmpsb
out
cmp
aaa
movsl
push
orl
pushf
sbbb
mov
mov
into
ja
mov
fwait
mov
sbb
arpl
push
shl
int
aam
mov
push
fisubrs
cld
mov
lret
popa
add
pop
pop
xchg
in
sahf
pop
jg
pcmpgtd
lods
test
test
jne
xorb
sar
gs
or
fwait
push
and
orl
mov
mov
insl
xchg
lret
sub
js
add
push
sub
xchg
sub
stos
xchg
movsb
pop
cmp
sarb
aas
das
add
test
clc
movsl
sbb
aad
mov
xchg
call
mov
sub
adc
movsl
loopne
xlat
pop
cs
inc
lock
lret
out
ret
or
pusha
in
mov
sub
mov
subl
int
sub
gs
lods
cmc
xor
mov
jo
outsl
mov
push
xor
inc
nop
jg
js
dec
dec
out
sub
movsl
lods
and
adc
shrb
xchg
xchg
js
push
cltd
pop
push
inc
call
mov
jns
mov
lds
lret
push
dec
je
int3
shlb
rclb
push
sahf
mov
pop
xor
popf
cmp
add
jg
fcmovbe
inc
xchg
jle
xchg
orb
xchg
cld
int3
adc
sti
sbb
adc
xor
cli
jns
stos
stc
jbe
arpl
xor
dec
mov
hlt
push
pop
jbe
outsl
cmp
stos
js
push
mov
pop
movsb
aad
or
jmp
icebp
andl
xchg
mov
cmp
mov
add
adc
push
cwtl
mov
jo
addr16
jmp
add
mov
daa
dec
xchg
imul
fwait
cmp
sbb
mov
add
xchg
aam
rolb
and
jle
mov
cmpsb
sbb
jp
into
push
popa
mov
insl
dec
mov
jo
cmc
imul
adc
mov
mov
sbb
popf
pop
pop
je
xchg
fisttps
adc
push
mov
push
dec
cltd
call
nop
mov
sbb
in
adc
scas
inc
xor
jecxz
notb
ret
inc
stc
mov
sbb
ja
notl
and
and
xchg
rcrl
push
imull
dec
xchg
xor
mov
mov
push
cld
mov
jno
lcall
and
mov
out
orb
jmp
sahf
enter
pop
inc
cli
mov
test
js
sbb
and
imul
xchg
pop
or
lcall
jae
mov
mov
or
xlat
inc
sub
int
cmp
sysret
inc
lcall
inc
or
sbbb
mov
pusha
pop
xor
sbb
out
adcb
cwtl
cld
mov
repnz
push
out
les
dec
xor
ret
mov
aas
adc
xor
cmp
out
inc
sub
addr16
cmp
xor
leave
out
jno
and
ss
cwtl
push
dec
or
xchg
push
sbb
cmp
mov
nop
loop
add
lods
push
xchg
daa
lcall
ljmp
xor
mov
ror
ljmp
lret
adc
inc
push
ljmp
orb
subl
push
mov
repz
mov
push
aam
pop
dec
js
xor
ljmp
popa
push
ljmp
aad
outsl
mov
popa
rcrl
push
cld
lock
cltd
enter
cmp
leave
incb
ds
cmp
roll
jl
sub
ret
ss
add
or
push
pop
imul
mov
inc
dec
dec
popa
mov
mov
dec
dec
insb
cmp
adc
mov
test
jl
imul
int
jnp
pop
push
sub
outsb
lret
arpl
dec
cmp
cmpsl
jbe
into
jl
fxch
lahf
lods
frstor
repnz
pushf
xor
mov
jg
adc
outsb
repz
int
enter
sbb
dec
ss
std
xchg
jb
into
fldenv
cmp
and
sbbl
insl
sbb
xor
cmpsb
add
or
dec
add
xor
movups
subl
loopne
test
aam
fmull
inc
call
movsb
mov
sub
test
lahf
cltd
loope
fwait
out
push
dec
or
push
clc
int3
xchg
out
outsb
cli
into
xlat
jb
jb
mov
stos
in
push
icebp
pushl
das
and
repz
fcomip
add
mov
repz
adc
test
and
cmp
dec
push
push
repz
mov
jge
xor
lcall
add
mov
fbld
loope
test
test
inc
outsb
sahf
test
ret
insb
sub
jne
mov
enter
add
mov
outsl
mov
fs
imul
adc
xchg
mov
popf
jae
sbb
dec
xlat
sbb
and
mov
pop
push
in
mov
cwtl
jns
daa
loope
sbb
push
cmp
test
jnp
add
mov
sub
iret
adc
push
add
or
sbb
xchg
shr
fcmove
cli
stc
shll
xor
push
sbb
jp
cmp
jbe
es
das
es
inc
inc
aaa
iret
add
xor
xchg
add
xor
cmp
push
nop
push
adc
or
push
pop
mov
outsl
in
lea
fistpl
pushf
into
cmp
jns
jl
fisttpll
repnz
xchg
or
loopne
xorl
push
mov
mov
xchg
sbb
sarb
and
pop
push
loop
lea
sub
int3
icebp
lds
outsl
stos
jnp
add
xor
sbb
ss
shll
pop
ja,pn
mov
sbb
mov
lahf
xor
mov
xchg
jl
outsl
jbe
arpl
mov
mov
sarl
loope
dec
mov
jae
mov
pop
push
cltd
jp
sbb
out
incb
scas
mov
testb
adcb
in
outsb
or
aas
pop
repz
xor
add
call
neg
jecxz
iret
adc
fcomip
fidivl
xor
int
fwait
repnz
xchg
and
push
or
into
add
jns
jmp
cwtl
lea
and
xchg
mov
add
ss
lahf
push
lds
repz
and
mov
pop
add
and
lods
cmpsl
or
cli
inc
and
dec
and
mov
mov
movsb
push
jmp
std
sbb
movsb
pop
or
sbb
rcrb
lcall
test
sub
ja
lret
mov
push
sub
cli
pop
pop
dec
jae
xchg
call
sub
dec
decl
adc
push
std
inc
fs
test
push
cld
cmp
lds
sub
jp
mov
add
js
mov
or
pop
roll
inc
cmp
jns
add
mov
hlt
scas
cld
call
dec
cmpsl
into
push
sbb
jl
js
cwtl
imul
lds
inc
dec
xchg
xor
fs
fnsave
jecxz
jne
sbbl
jle
pop
fs
sub
or
in
aam
xchg
xor
sbb
jne
push
push
or
mov
jne
xor
insb
sub
sub
sbb
scas
jl
lahf
add
lods
imul
mov
jge
sbb
mov
test
mov
fwait
inc
inc
mov
sbb
icebp
ret
mov
cmpsb
xor
adc
lahf
xchg
pop
cmp
pop
ds
dec
xor
jne
cli
cmp
jle
cs
mov
mov
xchg
lret
sbb
iret
loope
mov
dec
lds
dec
xchg
int
cmp
mov
or
stc
mov
or
push
mov
cld
mov
add
xchg
ds
inc
mov
negl
jg
mov
lret
adc
adc
add
insb
jle
enter
test
mov
or
loope
fistl
into
sub
inc
inc
sbb
fidivs
add
mov
insb
mov
das
cltd
rcl
xor
popf
sti
jbe
mov
cmc
dec
adc
sbb
jno
dec
dec
cs
cmp
imul
sub
data16
push
jg
cmc
sub
dec
and
repnz
fadds
xchg
rcr
mov
aam
outsl
jb
adc
orl
insl
add
adc
je
test
imul
aad
mov
jbe
fisttpl
mov
int3
hlt
push
repz
pop
and
mov
push
shll
int
in
test
sub
dec
xchg
sub
or
pop
jl
cmp
inc
sub
stos
jp
xchg
or
pop
mov
mov
jbe
push
jmp
push
and
repz
js
int3
mov
scas
inc
xor
ljmp
inc
push
or
mov
leave
test
outsb
xchg
jb
mov
or
out
jl
jne
call
adc
or
jmp
xor
inc
sub
add
sahf
mov
jecxz
push
push
pop
add
mov
ds
sbb
mov
fcomip
add
data16
notb
cmp
mov
fisubrs
ja
dec
mov
sub
push
stos
jmp
mov
cltd
xor
fwait
or
and
cs
in
insl
js
pusha
jg
stos
mov
adc
add
das
and
mov
push
std
roll
jle
dec
mov
jns
lods
mov
cmc
push
adc
adc
shrb
cmp
add
scas
push
inc
dec
arpl
jecxz
int3
xchg
outsl
mov
pop
xchg
mov
iret
test
sbb
mov
adc
popa
imul
adc
xchg
pop
daa
les
out
int
xor
xchg
mov
xor
push
or
popa
jp
dec
mov
loopne
push
test
dec
sbb
inc
in
ljmp
shl
dec
sti
and
or
dec
jnp
js
leave
and
ret
ret
dec
mov
sub
cmp
inc
inc
mov
ja
jb
adc
iret
dec
ret
pusha
pop
add
out
pop
movsb
movsl
mov
pop
nop
mov
jg
or
stc
and
adc
insb
adc
lret
push
stos
or
inc
icebp
in
jg
pop
xlat
pop
pusha
cmpsl
scas
or
fwait
and
dec
xchg
ss
cmpsl
test
sbb
dec
outsb
cmp
mov
jns
or
outsb
xchg
add
pushf
outsb
icebp
dec
into
es
in
push
lea
fnstenv
test
fidivl
cmp
push
push
aad
cmpsb
sub
push
sbb
or
aam
lcall
and
sbb
movl
imul
push
push
ljmp
or
loopne
add
add
mov
movsb
rclb
jno
xor
pop
fiaddl
pop
ss
ljmp
cmp
xchg
aad
xorb
lods
pop
push
or
cmpsb
jge
ljmp
push
jno
sbb
add
sbbl
cli
adc
xchg
stc
cld
sbb
popf
lods
sbb
mov
aad
push
cmp
aas
xchg
add
mov
loope
jge
insl
jmp
js
jno
cmp
cmpsb
pop
jbe
dec
dec
sarl
imull
int
sbb
pushf
clc
imul
mov
sar
data16
mov
out
pop
cli
adc
or
mov
mov
fiaddl
inc
adc
bound
idiv
and
lods
and
ds
out
adc
mov
pop
mov
pop
loop
test
and
mov
repnz
and
or
inc
pop
push
xchg
adc
jmp
xchg
pop
sbbl
stos
xor
add
push
push
mov
insb
cmc
cmp
ss
ss
push
xchg
mov
outsb
leave
push
adc
aaa
inc
mov
cmc
mov
dec
or
sub
pop
imul
or
xor
inc
jb
cmpsl
sbbb
cmp
aad
outsl
in
jp
or
nop
dec
or
mov
clc
insl
lods
adc
rcll
test
cmp
jg
pushf
cmp
fiadds
je
js
jb
pop
inc
popf
mov
jmp
adc
ds
add
je
stos
repz
and
das
cwtl
sarl
rolb
inc
add
pop
pusha
xchg
and
stc
jnp
inc
dec
jle
jecxz
mov
test
sti
popf
shrl
mov
jns
shrl
push
icebp
repnz
xor
mov
mov
mov
xchg
loope
fs
pop
mov
arpl
jae
popa
sbb
outsl
inc
pushf
aas
bound
adc
mov
ret
push
mov
inc
dec
ja
addb
hlt
mov
or
cwtl
rorb
inc
xchg
ret
sbb
pop
lcall
rcll
daa
repnz
add
in
add
insl
sbb
push
cmp
add
cli
mov
into
loope
lods
shlb
push
pop
mov
and
dec
add
outsb
pop
sub
ficoms
js
add
negl
shll
lods
repz
out
and
xchg
sbb
mov
xlat
adc
inc
add
in
inc
inc
hlt
cltd
xchg
pop
inc
sub
lcall
mov
mov
std
mov
fsubrs
test
ja
mov
ror
push
dec
sub
cld
movsb
lret
repz
aad
push
or
pop
sarb
cmpsb
push
imul
addl
xor
pop
cld
or
scas
adc
xlat
lock
mov
xor
push
sub
adc
fdivl
add
das
cmc
jp
mov
mov
lea
leave
cmp
int
mov
out
in
jae
fiadds
mov
inc
pop
dec
adc
and
mov
ds
movl
out
sub
insb
lods
ret
cld
cmp
in
roll
inc
xchg
mov
jno
lock
sti
pop
mov
ljmp
stc
scas
out
push
repz
mov
aaa
pop
pop
dec
js
jae
sbb
in
push
dec
lods
mov
mov
outsb
sub
jae
fisttpl
sahf
lcall
cmc
or
lods
mov
push
aas
aam
out
inc
sahf
gs
lahf
arpl
insl
cmc
push
push
pop
es
mov
cli
call
ret
jnp
push
dec
addr16
cmp
mov
cwtl
pushf
jl
pusha
xchg
push
xchg
cmp
fidivrs
mov
and
movsl
pop
push
leave
out
and
pushf
je
jmp
inc
sub
jne
push
es
and
arpl
jp
loop
sarl
pusha
dec
mov
mov
lock
outsl
ja
rcrb
loope
cli
sbb
mov
push
iret
jo
inc
insb
mov
ss
sbb
mov
xorl
stc
es
js
cmp
sbb
jo
push
mov
fsubrs
insb
test
dec
xor
in
xor
and
frstor
jg
call
xlat
scas
mov
mov
mov
divb
lock
dec
shll
mov
insb
inc
dec
pop
add
mov
cmpsl
pop
out
dec
data16
in
jp
inc
cmpsb
daa
xor
hlt
cmp
test
fadds
fldenv
out
mov
lods
fs
jne
dec
das
stc
jns
cmp
mov
ljmp
js
push
push
mov
xor
dec
xor
loop
mov
sub
adc
rcrb
inc
ret
sub
std
sub
xor
sub
test
cltd
dec
loop
sbb
movsb
xlat
mov
lock
push
imul
ret
ljmp
mov
stos
stos
inc
push
mov
add
int
cwtl
sub
scas
pop
jbe
cltd
push
mov
in
xchg
movsl
hlt
sub
push
sbb
and
mov
fbstp
ror
pop
movsb
xchg
lock
movsb
jo
jbe
jno
pop
and
movsl
mov
in
fs
jb
mov
gs
cmpsl
out
adc
xlat
popa
in
fistpll
mov
sub
add
mov
stc
add
loopne
jnp
add
addr16
sbb
int3
pop
cmc
inc
xor
inc
and
pop
add
inc
cmp
les
andb
cmp
dec
fwait
sbb
xchg
in
jecxz
pop
pop
divl
add
pop
jecxz
adc
pop
add
sub
mov
push
adc
int
ret
xor
sbb
in
out
jge
cmp
out
xchg
fcoml
sti
xchg
adc
sub
rcrl
test
xor
xor
jns
jb
mov
movsb
loopne
and
jecxz
iret
jle
push
movsl
int3
dec
xor
pop
icebp
xor
pop
inc
lods
pushf
ret
ds
mov
adc
xchg
imulb
adc
test
or
or
inc
idivl
jge
hlt
inc
pop
ret
mov
inc
fisubrs
addb
cmc
jnp
mov
imul
pusha
ret
ja
ljmp
test
mov
mov
add
movsl
in
jmp
test
inc
setg
mov
repnz
lods
mov
rcll
dec
inc
jecxz
fcomps
insb
fmul
push
fnstcw
jae
push
mov
hlt
jle
inc
sti
push
fists
cmp
xchg
adc
lea
inc
xor
insl
adc
jl
mov
stos
add
lret
xchg
sbb
mov
inc
mov
mov
mov
jp
mov
or
or
out
aad
popa
fsubrl
sahf
pusha
cltd
stos
adc
fsts
dec
or
jmp
ret
cmpsl
sbb
mov
fs
scas
mov
sub
mov
mov
mov
pop
rclb
push
dec
loope
imul
cmpsb
cmpsl
in
lea
and
pop
adc
mov
or
ret
sub
loop
mov
sub
rorb
add
push
add
push
push
loop
lds
mov
shrb
jnp
push
mov
mov
sbb
xor
call
sarl
filds
addr16
loop
into
leave
hlt
rorl
data16
sub
in
push
aam
mov
sub
or
sbb
dec
repz
inc
adc
xor
pop
mov
xchg
fimull
insb
scas
or
push
mov
mov
in
jge
int3
shlb
xor
dec
adc
and
and
xor
cmpsb
in
pop
les
push
jle
xchg
test
cmpsb
gs
sub
jge
clc
add
sysenter
mov
icebp
pusha
mov
or
loope
mov
je
imul
jle
push
cmp
dec
mov
inc
xchg
adc
mov
and
and
sbb
cld
lret
insb
sahf
jne
jne
pop
mov
cmpsl
xor
add
push
in
mov
outsb
mov
inc
push
fucomi
in
mov
in
ss
add
frstor
sti
jne
cld
inc
jge
and
push
xchg
xor
and
loopne
sbb
ret
loopne
ror
shll
scas
test
push
outsb
sbb
hlt
fwait
sbb
pop
xchg
sub
fiaddl
scas
pushf
mov
jns
jno
cmp
mov
sub
loope
sti
cmp
clc
gs
into
insb
pop
pushl
jl
mov
pop
adc
mov
push
sub
cmp
sbb
cmp
repnz
pop
int
xorb
es
jnp
and
in
movsl
xlat
pop
push
mov
dec
fdivr
pop
sbb
imul
lahf
mov
add
pushf
test
push
out
push
dec
out
sub
in
mov
sbb
pop
movsl
mov
add
popa
adc
bound
pop
loopne
dec
push
call
push
push
mov
mov
pop
out
test
shl
lret
int
pop
in
inc
imull
push
cs
adcl
xchg
xor
cmc
popa
fisubrs
mov
leave
or
gs
sti
cwtl
loope
sub
rorl
sbb
pop
mov
pop
jecxz
jl
inc
shlb
daa
scas
arpl
sub
and
cmpsb
and
xor
addr16
shr
js
aaa
hlt
push
cmp
bound
add
in
fsubrl
fwait
push
xchg
test
add
scas
add
add
mov
int3
lret
fnstsw
xchg
jl
push
and
rcl
movsb
dec
iret
dec
jg
in
dec
fmulp
jecxz
rcrb
in
in
jno
in
mov
dec
cmpsl
lahf
imull
not
xchg
xchg
leave
xor
movsb
inc
inc
and
lods
in
adc
adc
sti
inc
sar
bound
add
xor
pop
dec
xlat
xchg
popf
add
rcl
and
popf
mov
test
scas
pop
cltd
lock
inc
xchg
cmp
sbb
std
inc
add
sbb
cmp
or
aas
fprem1
xchg
add
fisttps
into
and
pop
insb
sbb
mov
jbe
jmp
pop
sub
test
cs
lret
and
shll
cmp
push
jb
or
mov
add
push
sbb
scas
cmp
or
cmpsb
incl
jp
sbb
pop
cmpsb
inc
or
push
xor
out
call
lods
orl
adc
and
test
pushf
inc
loope
nop
pop
sub
push
rcll
adcb
sub
sbb
daa
jb
jns
and
jmp
cmpsb
loope
or
fimull
pop
push
in
dec
xor
push
in
pop
icebp
or
rorb
aad
pop
fsubp
pop
leave
or
mov
xor
loopne
int3
or
mov
mov
stos
cmpsl
fistpll
aas
call
mov
repnz
sahf
pop
mov
roll
flds
pop
mov
stos
dec
jl
fidivs
mov
adc
ret
pop
dec
dec
lods
cs
cwtl
fsin
movsb
out
lea
shlb
jge
test
dec
mov
push
lret
pop
imul
gs
jp
cs
mov
sbb
aas
sub
addr16
stos
movsl
pop
outsb
or
jnp
loop
sahf
out
and
es
jb
adc
fnop
push
popa
sbbb
jb
int3
rcll
xchg
and
sbb
daa
call
call
lret
push
or
and
fdivrs
jb
push
xchg
inc
add
cmp
repnz
cmp
int3
mov
sub
js
mov
push
push
imul
xchg
ret
loop
sbb
imul
sti
dec
call
xor
mov
jno
stos
jns
jnp
add
xchg
into
pop
pop
jge
lock
mov
dec
dec
lahf
pop
test
imul
nop
xor
lods
add
adc
dec
stos
adc
jl
and
imul
cmpsl
adc
stos
test
mov
xchg
mov
jl
je
cmpsb
fwait
dec
pop
scas
fadds
insl
jmp
lret
jl
xchg
scas
push
addr16
jp
mov
cmpb
jne
or
sub
arpl
dec
fisttpl
mov
xchg
cmp
les
cmp
sub
cmp
shll
rclb
dec
cwtl
pop
sub
popa
push
sahf
adc
ja
jo
sub
testb
neg
lret
dec
xor
mov
les
data16
or
lds
jle
aaa
pop
daa
inc
pop
mov
icebp
cli
or
xor
jb
push
xchg
push
lds
fucomp
dec
lods
in
xchg
xchg
push
jp
test
mov
xor
dec
fcomp
cmpsl
shll
mov
addb
out
push
add
mov
imull
aam
ret
xor
mov
xorb
inc
pop
cmp
and
sbb
lret
mov
cmp
dec
lret
jmp
dec
scas
fidivs
sub
pop
inc
mov
fwait
sub
aas
xor
in
outsb
lret
xchg
add
int
jb
mov
or
mov
pusha
in
mov
jbe
pop
or
mov
mov
jb
jo
nop
push
sbb
mov
mov
and
lahf
mov
push
es
sbb
sub
dec
inc
and
aaa
nop
and
in
cld
mov
pushf
adc
pop
jg
fs
popf
jbe
mov
dec
jnp
ds
rolb
je
push
jp
ljmp
test
sbb
lods
int
imul
push
dec
dec
or
mov
stos
mov
lret
xchg
jne
pushf
icebp
push
fists
xchg
or
popf
pop
lret
or
movsl
pop
lcall
xchg
pushl
fldcw
mov
add
mov
mov
cli
or
sbb
je
in
mov
push
test
aam
lea
call
mov
mov
in
repnz
shrl
aad
outsb
sahf
mov
sti
xchg
aad
push
sub
fstl
je
and
push
fcmovbe
add
fsub
or
or
std
dec
cld
mov
outsl
jns
push
xor
scas
adc
pop
mov
sbb
jns
mov
lcall
mov
addr16
push
jno
ja
ret
lods
xchg
and
adc
ret
cs
jnp
rolb
pop
dec
push
mov
and
cmp
test
jb
xor
xor
lods
into
in
and
or
pushf
dec
xorps
bound
cltd
or
loop
aam
mov
int3
inc
sbb
out
mov
pusha
fisttps
push
imul
stos
ffreep
popf
mov
aaa
pushf
mov
aas
dec
xlat
sbb
cmp
or
xor
scas
fsubrl
pop
xchg
aaa
inc
sbb
outsb
movsb
adc
push
jg
cmp
mov
cs
out
add
add
pusha
cld
inc
sub
inc
xor
fcmovb
shll
repz
aad
jne
cld
xor
in
fs
inc
rcrl
cmp
push
sub
mov
test
repz
daa
and
dec
pop
popa
or
nop
les
cld
sbb
stos
xor
daa
sub
xor
push
mov
ljmp
arpl
mov
mov
bound
sub
pop
mov
fwait
cmpsb
dec
sub
hlt
in
je
daa
push
push
xor
adc
mov
mov
mov
daa
loope
mov
das
and
xchg
fidivl
hlt
popf
pusha
or
clc
xlat
xchg
jbe
stos
mov
je
mov
sub
cmpsb
xchg
mov
cmp
test
insb
js
pushf
sti
jg
xor
dec
mov
sti
cmp
jne
popa
jo
rorb
sub
loope
sti
std
and
xchg
in
ret
jge
ljmp
out
popa
cmpsb
or
push
mov
cmc
movb
stos
rcl
and
int3
cmp
pop
popl
sub
push
subb
xor
xchg
scas
js
aaa
and
in
add
inc
and
fsts
fdivl
out
shlb
fdivs
mov
pop
mov
outsl
xor
std
mov
inc
pop
hlt
gs
lret
sub
lcall
movsb
into
inc
aad
imul
mov
jecxz
cmp
jle
ret
mov
pop
mov
push
testl
scas
imul
mulb
clc
push
cmc
push
sti
outsl
or
les
xor
add
cmpsb
jb
rcl
add
dec
jno
add
xchg
es
aaa
fs
rorb
and
xchg
jo
mov
les
stos
imul
popa
repz
mov
adc
aas
inc
xchg
inc
loopne
sbb
sti
clc
and
xor
movsb
fwait
xor
not
enter
out
sbbl
push
adc
in
mov
outsb
popw
ds
pop
adc
fwait
pop
loopne
sbb
mov
push
fisttps
daa
out
movsb
and
mov
rcll
push
imul
imul
movsb
cli
stos
mov
outsl
nop
sbb
loop
orb
mov
cltd
bnd
inc
push
ljmp
scas
pusha
addr16
sarl
push
inc
adc
pop
inc
adcb
xchg
std
frstor
or
int3
pushf
fucomip
fbld
fmull
pop
jns
loope
insb
mov
inc
and
shll
add
outsl
and
data16
mov
lea
into
xchg
mov
sub
inc
loope
add
push
adc
inc
cmp
add
push
sbb
stos
mov
or
add
or
in
push
out
aaa
lods
hlt
loop
lret
mov
sub
or
cmpb
fstps
pop
cs
xchg
mov
or
shlb
cld
mov
orl
pop
ljmp
clc
mov
lcall
out
fists
dec
cltd
mov
testb
and
mov
rorb
je
addr16
pop
ret
aam
and
sub
fdivrp
div
dec
jnp
jg
xchg
push
inc
push
xchg
daa
ljmp
adc
cmp
aad
test
sahf
mov
bound
imul
push
inc
mov
test
jne
cmp
inc
aad
mov
fistpll
pop
push
leave
xchg
xchg
out
js
cmp
push
loop
adc
sbb
mov
subl
mov
test
outsl
push
loope
inc
lods
aaa
or
mov
cmp
xor
pop
xchg
add
cmpsb
ret
sub
mov
daa
out
adc
lods
jbe
pusha
and
cld
popa
es
stos
insl
push
mov
pop
lods
xlat
sahf
inc
ret
neg
das
lods
arpl
xor
push
pop
xchg
bound
adc
fldcw
sbb
mov
jbe
xchg
jno
push
inc
jb
cmp
and
jne
mov
pop
movsl
inc
mov
push
sub
js
xchg
fstps
sbbb
cmc
mov
outsb
fldenv
int
inc
and
fwait
jnp
adc
fstpl
lret
push
jbe
aad
ficoms
xor
call
enter
imul
jmp
and
mov
ror
cli
popa
lret
jbe
iret
scas
jmp
add
dec
mov
mov
in
icebp
dec
in
xchg
jp
push
dec
adc
jne,pn
mov
int3
pop
push
push
movsl
outsl
lcall
gs
mov
mov
in
out
hlt
aas
add
fisttpll
xchg
mov
daa
adc
mov
iret
push
test
jle
mov
inc
nop
sub
les
inc
idivl
mov
pop
fwait
rorb
adc
cltd
or
sbb
mov
lds
sub
dec
mov
dec
call
dec
dec
push
adc
pusha
jns
scas
mov
mov
gs
sbb
lds
daa
shlb
pusha
push
mov
jbe
sbb
loope
mov
jmp
cmp
jnp
call
jb
sub
lcall
fsts
cld
sbb
lret
rorl
ja
inc
mov
sbb
les
mov
mov
fwait
sysexit
repnz
mov
adc
testb
push
out
fisubs
cmpsl
sahf
cld
into
es
inc
rcll
inc
ja
xchg
out
jae
pop
mov
gs
lret
push
lret
lcall
push
ss
loop
ret
or
pop
cwtl
mov
cmc
test
pop
sub
push
stc
dec
jno
clc
sbb
fwait
inc
aaa
stos
jmp
cmp
pop
sub
sarb
bound
mov
sub
ret
jl
inc
add
jmp
insl
scas
pushf
mov
xchg
mov
pop
adc
cmp
pop
in
or
sub
int
inc
pop
repnz
push
ffreep
test
call
and
insl
arpl
or
mov
mov
mov
xor
sbb
sub
cmpsl
fwait
adc
pop
call
pop
int
mov
sub
call
dec
mov
xchg
test
fdivs
xchg
aas
iret
sbb
cmp
mov
iret
xchg
repnz
sbb
lock
xchg
pop
push
xor
fbld
pop
pop
repnz
decl
xor
dec
aam
pop
cmp
stos
jle
jmp
ror
fnsave
dec
add
jecxz
jo
mov
mov
push
fildll
mov
lret
ret
and
sbb
fisubs
xorl
mov
jecxz
lock
sbb
mov
out
rcrl
les
ja
mov
sub
jno
fistpll
mov
out
push
cmpsl
sbb
push
popa
mov
hlt
mov
mov
fcoml
in
in
push
js
adc
leave
subl
paddw
and
xor
adc
xchg
mov
imul
fsubs
inc
mov
and
jle
and
insl
gs
iret
push
or
or
cmpsb
clc
adc
leave
or
dec
imul
cmp
sub
xchg
dec
sub
xlat
pop
sub
lret
push
int3
xchg
cmpsb
popa
aaa
fbstp
jl
mov
sbb
daa
push
jbe
push
cmc
xchg
ss
js
mov
sub
mov
nop
js
ja
inc
adc
outsb
pop
cmc
xorl
test
jb
or
imul
sarl
xchg
es
mov
dec
jg
fistpll
outsl
data16
dec
jns
in
icebp
fimuls
adc
shlb
jmp
lds
cmp
fidivrl
mov
mov
mov
aad
stc
inc
push
mov
inc
mov
scas
stos
stos
mov
mov
add
xor
dec
mov
clc
fcmovnb
rcr
mov
cmc
mov
dec
jnp
sbb
xchg
flds
cmp
leave
mul
mov
mov
inc
sbbl
pop
xor
or
test
into
in
mov
stos
insl
mov
mov
add
xor
sbb
outsl
aaa
dec
pusha
jle
fwait
push
add
mov
stc
js
jbe
dec
jb
das
sarb
fwait
cmp
jl
xor
or
repnz
ss
addr16
lahf
test
xchg
out
fcmovb
data16
inc
andps
cmpsb
dec
jge
sahf
pop
lods
aas
xchg
out
dec
aas
jmp
push
push
popf
lods
push
sbb
mov
push
xor
and
mov
js
in
mov
xor
cmp
sub
int3
in
pop
out
rcr
cmpsb
cmp
leave
pop
xor
and
rcll
or
cmp
mov
imul
jl
push
inc
out
jg
jae
jle
xor
adc
dec
adc
out
sbb
je
adc
sbb
sarb
mov
and
jecxz
or
les
pop
mov
inc
lret
rolb
push
in
pop
xchg
pop
in
dec
xor
nop
push
data16
stos
jge
jg
cmp
lods
stos
popf
inc
mov
pop
data16
add
push
mov
in
add
int3
push
jmp
loop
adc
test
sbb
sti
jle
sub
pop
fisubl
xchg
dec
std
xlat
rcrb
movsl
lea
xlat
inc
leave
or
cmpsb
inc
mov
das
ja
lret
stc
and
icebp
pop
sarb
or
cmp
cs
enter
jbe
jp
push
fstpl
push
jle
or
or
sbb
push
or
xchg
mov
repz
stc
mov
adc
ljmp
lahf
jmp
es
imul
out
and
lds
std
dec
inc
in
mov
sub
xchg
or
mov
sti
sahf
aas
test
jnp
fisubrl
mov
or
cmp
in
aaa
or
jmp
jb
xchg
sub
shrl
lahf
lods
mov
mov
xchg
std
cmpl
lods
popa
mov
roll
xor
mov
arpl
sbb
pop
xchg
jb
mov
jmp
add
das
lret
fnstenv
rclb
mov
adc
mov
hlt
add
aam
or
negl
dec
and
mov
mov
push
add
in
iret
mov
gs
push
dec
sbb
enter
cmp
ficoml
pop
repz
test
adc
rol
dec
icebp
pop
cmp
push
out
add
movsl
out
jno
lret
xchg
pop
dec
ljmp
jmp
int
iret
mov
adc
mov
cld
add
cmp
and
hlt
mov
mov
rorb
mov
mov
mov
sub
nop
clc
dec
xchg
popf
adc
subl
in
js
adc
xchg
xchg
jmp
setge
movb
aaa
sub
xchg
push
xchg
bound
xchg
mov
aam
jp
fimuls
in
xchg
insb
mov
push
cltd
paddusw
rdmsr
andb
cmp
jo
test
orb
xlat
cmc
sub
mov
test
jge
xor
pop
push
sub
fsubrl
jl
sub
mov
jle
xchg
xchg
xlat
es
jge
xchg
lret
and
mov
mov
movsb
mov
arpl
cld
mov
lcall
adc
ret
rorb
movsb
add
mov
mov
xchg
es
mov
test
jne
aaa
cmp
adc
pop
aas
repnz
decl
jbe
dec
cmp
cmpsl
loop
adc
jge
fld
lret
fs
xor
inc
ljmp
inc
and
mov
ds
rcrl
jmp
push
jmp
inc
adc
ds
inc
arpl
fmuls
jbe
nop
andl
adc
jb
insl
dec
jb
cmp
cmpsb
cld
dec
pop
xor
jnp
and
xorl
jbe
jb
aam
iret
in
dec
sti
movl
aad
fistl
pop
push
adc
mov
clc
and
insl
mov
jge
lahf
lret
dec
loope
adc
pop
fwait
mov
pop
adc
popa
daa
jbe
or
test
lds
cmp
mov
push
ret
ljmp
insb
popf
cs
xor
xchg
sub
ljmp
fildl
in
fimuls
loopne
int
ds
push
idivb
mov
lea
adc
fstpt
sub
jmp
push
add
jg
pop
mov
aas
cmp
xchg
inc
out
ss
iret
out
je
int
xchg
and
cmc
fmuls
aaa
pusha
xor
stos
push
mov
cmp
cmp
insl
lea
pop
jg
scas
mov
xchg
sub
dec
pop
sti
mov
inc
mov
in
data16
add
cmpsl
pop
addr16
dec
sub
xor
aas
insb
push
cmp
pop
fcoml
jge
or
pop
lahf
inc
push
pop
aaa
subb
cli
sub
out
enter
jp
inc
mov
mov
or
rcll
divb
lcall
mov
fistpll
call
dec
sub
xor
pop
inc
mov
popf
adc
pop
fistpll
adc
ror
or
pop
inc
xorl
lret
int
cmpsl
sub
inc
sub
sub
inc
leave
lcall
clc
mov
ds
mov
mov
dec
loopne
lret
outsb
dec
xor
insb
daa
mov
scas
jnp
mov
hlt
sbb
jmp
sub
outsb
in
pop
mov
push
sbb
mov
ret
pop
sbb
adc
dec
ret
sti
xor
push
rol
rorb
jb
push
addl
xchg
adc
test
cs
cs
push
cmp
push
popa
jge
mov
xchg
adc
ds
nop
push
and
sub
xchg
cwtl
push
add
mov
jae
xchg
pop
mov
mov
add
ffreep
mov
sub
inc
fbstp
mov
add
mov
lahf
mov
add
aas
add
push
scas
pop
adc
clc
daa
scas
and
and
sub
iret
sbb
decl
insb
xor
es
rol
aam
fisubrs
fucomp
pop
jl
loope
push
sbb
xchg
clc
push
or
lcall
push
shlb
push
adc
jg
fnstsw
stc
inc
in
and
nop
loope
out
pop
inc
jp
add
mov
cmpsl
sub
insb
addr16
les
cmp
adcl
push
dec
ss
mov
negl
xor
test
inc
cmp
sti
sub
jmp
ss
and
insb
cmp
and
movsb
cltd
mov
das
add
fiadds
sbb
ret
sub
lods
pop
mov
pop
and
lcall
outsl
adc
sub
cmpsl
sub
sarl
data16
or
in
wrmsr
add
sub
insl
xor
daa
jecxz
mov
mov
jl
pushf
roll
and
or
loopne
add
and
ret
xor
xor
sbb
mov
and
bound
mov
sbb
or
jo
push
push
fistl
shll
ror
mov
pop
push
loopne
stos
stc
push
push
or
adc
mov
push
mov
stos
inc
fbld
iret
mov
add
mov
xor
xchg
das
pop
xorb
mul
int
cmp
or
rorb
lods
or
mov
sub
or
jnp
gs
lds
dec
mov
lret
mov
mov
xor
pop
mov
mov
aam
scas
sub
mov
icebp
push
orb
jne
lods
adc
or
pop
jnp
push
test
or
pop
stos
push
inc
push
sbb
xchg
xchg
lret
cmp
or
lahf
sbb
jbe
shrb
dec
js
or
xchg
icebp
push
or
mov
sub
mov
mov
fld
and
dec
mov
out
jge
xchg
lea
insb
jne
gs
movsl
xor
pop
lcall
or
repnz
and
fisttpll
test
neg
add
outsl
scas
inc
fmul
movl
sub
int
fcmovu
xchg
cs
add
mov
stos
inc
js
jmp
add
mov
mov
xchg
lock
cli
movsb
test
cmc
stc
and
cmpsb
test
outsl
mov
int3
mov
mov
dec
jge
pop
iret
and
push
xchg
and
inc
sub
testl
lcall
xor
dec
add
lret
inc
mov
mov
out
pushf
mov
lret
push
cmc
icebp
mov
scas
sub
test
mov
imull
icebp
rolb
aaa
mov
aas
mov
call
popa
inc
testl
ficomps
lock
inc
xor
mov
aaa
add
mov
in
stc
shll
sub
mov
popa
lret
sbb
adc
pop
push
cmpsl
ss
inc
mov
jne
mov
cmp
subl
mov
or
addr16
bound
jg
or
addr16
fsubs
mov
lds
push
jp
jo
pusha
jne
pop
iret
push
dec
sahf
lods
out
ja
rclb
cmpsb
jbe
push
jl
cmp
inc
sar
push
sbb
sbb
mov
shrl
in
add
sbb
sbb
xchg
xchg
add
or
shlb
pop
jns
mov
test
jbe
je
fadds
lahf
pop
pop
jp
dec
mov
and
out
mov
xor
scas
lcall
inc
jae
inc
dec
mov
jp
and
pop
lea
fcompl
stos
out
scas
push
insb
push
aad
cmp
inc
clc
mov
mov
mov
xchg
mov
test
rcr
test
cmp
and
sbbb
jno
jl
out
fs
adc
repz
jbe
and
insl
fs
outsl
shlb
fsubr
and
add
xchg
call
jae
add
sub
lahf
dec
sbb
mov
call
mov
fimull
xor
rorl
jle
mov
xchg
cmp
cmp
xor
mov
mov
jmp
lods
cmp
jmp
pop
pop
push
out
cmp
adc
mov
setnp
or
add
stos
and
enter
loopne
lret
and
jb
sahf
or
ljmp
xchg
add
enter
xchg
mov
out
add
stos
fnstcw
xchg
adc
dec
pop
pop
mov
shrb
cmpsl
jg
inc
add
es
xchg
push
imul
outsl
push
or
hlt
mov
stos
das
xchg
pop
fcoms
add
fldl
dec
ret
fs
xchg
aaa
pop
dec
add
add
lods
sbb
imul
lock
lcall
sbb
and
les
xor
shlb
lea
pop
jg
shr
xchg
push
insb
xchg
test
dec
mov
add
fdivs
push
pop
mov
sbb
mov
push
shrl
rolb
push
dec
push
pop
add
inc
mov
lods
dec
sbb
outsl
jo
pop
push
mov
xchg
mov
and
addb
test
inc
sub
jg
mov
lds
cld
jmp
cld
cmpsl
jbe
in
jmp
ret
xchg
sub
cmpsb
cmp
mov
add
mov
mov
mov
lea
sti
xlat
xchg
push
pusha
test
out
test
and
mov
cmp
sub
into
mov
cwtl
jg
or
rcl
into
mov
int3
nop
les
cmp
mov
out
xchg
addr16
sub
fsubrs
lea
fimull
cmpsw
loopne
mov
jmp
popa
inc
lahf
dec
xchg
push
sti
sbb
push
inc
cmpb
leave
jnp
cmp
rorl
loope
sbb
jle
test
imul
test
mov
hlt
mov
add
icebp
sbb
jns
sbb
dec
into
jns
out
mov
lret
mov
outsl
pop
fdivrs
push
lea
std
sbb
xchg
mov
cmpsb
push
cli
jne
add
pop
xchg
scas
mov
adc
push
or
dec
enter
adc
testb
adc
push
sbb
or
sub
jo
fwait
lods
cld
mov
iret
push
icebp
mov
movsb
adc
out
fstl
pop
icebp
sbb
or
andb
xchg
fcom
pop
adc
mov
out
inc
pop
pop
insl
sbb
nop
data16
test
xchg
roll
xchg
or
jb
jb
mov
movsl
mov
mov
fisttps
int3
push
jno
adc
or
jle
mov
jb
cld
cmp
push
sahf
lcall
pop
push
mov
cld
mov
int3
mov
dec
inc
mov
cmpb
icebp
divl
lret
cmp
lock
lds
xchg
xchg
pop
jp
and
fidivl
or
pop
iret
pushf
mov
mov
and
mov
das
mov
rolb
inc
xchg
icebp
pop
aaa
xchg
scas
and
lret
sub
mov
push
jnp
loopne
fcomi
hlt
lret
ljmp
pop
mov
cmp
xor
jp
ja
inc
fisubrs
xor
pop
fidivrl
inc
xor
sbb
push
inc
sbb
decb
dec
sbb
in
jl
pop
inc
cmp
jnp
stos
mov
and
pop
in
push
dec
insl
and
inc
insl
rcll
out
push
sbb
mov
sti
or
nop
std
mov
out
fwait
dec
movsb
loop
push
test
add
rclb
xchg
sub
add
mov
add
pop
or
and
stos
negl
arpl
sub
jno
sbb
pop
lds
xchg
jp
jae
mov
sar
insl
xchg
mov
jb
bswap
loope
outsb
mov
jno
sbb
les
sbb
sbb
cmp
in
data16
push
adc
clc
mov
xchg
iret
fcomp
mov
xor
leave
pushf
dec
mov
ret
jb
ljmp
cs
or
sub
jb
dec
lea
dec
inc
and
arpl
xor
lcall
jg
jns
push
mov
sbb
cmp
jnp
mov
sbb
les
add
int3
add
xchg
sti
ss
push
jp
lds
pop
or
add
xlat
hlt
cltd
jbe
or
ds
mov
jg
movsb
xor
lods
mov
lods
jno
xchg
push
push
nop
sbb
and
js
jbe
mov
add
pop
jle
aas
pop
out
je
dec
mov
ficoms
in
and
sti
push
test
lock
ljmp
push
mov
push
test
scas
into
stos
cmp
int
jae
bound
jmp
jnp
lock
cmp
in
aaa
ficoml
je
xchg
int
lcall
xchg
lret
insl
sub
push
lahf
xor
push
pusha
push
xchg
adc
xchg
ds
lahf
ret
jmp
cmp
inc
push
insb
mov
pop
aas
pop
add
dec
outsb
cwtl
pop
es
dec
rep
in
pop
sub
sbb
clc
push
add
ljmp
ret
xor
inc
in
jmp
clc
movsl
jp
dec
aas
dec
stos
jmp
xor
mov
push
jmp
jle
dec
cmp
sbb
push
mov
stos
shrl
pop
xchg
xlat
pop
les
out
jno
je
repz
inc
psrld
negb
aaa
jmp
aaa
push
fucomp
mov
incl
mov
inc
call
test
rolb
mov
repz
cmp
jbe
and
mov
push
push
fldt
jp
aad
test
imul
adc
fldt
mov
rolb
mov
or
int
pop
sbb
cmpsl
iret
push
adc
jne
xlat
adc
and
mov
daa
loop
call
rolb
bound
or
xchg
push
push
sti
mov
ljmp
jae
daa
ficoml
mov
pop
fsubrs
outsl
out
sub
int3
stc
push
hlt
pop
add
mov
inc
insl
cli
sti
sub
rolb
in
pop
push
test
fstl
mov
pop
push
in
sti
xor
dec
jno
pop
repz
lds
xchg
inc
dec
and
aam
mov
rcrb
vmwrite
loopne
stos
mov
inc
mov
aad
inc
test
xchg
clc
or
imul
fdivs
ja
dec
cli
adc
xchg
add
lock
inc
push
or
push
fcoml
sub
jo
aad
dec
orl
cmp
pop
lock
aaa
jae
fldcw
dec
ss
cmpsl
cmp
cmpsb
fdiv
or
cmp
sub
out
and
and
in
loopne
add
aam
int
lcall
aam
enter
arpl
fstps
rcrb
cmp
test
xor
mov
outsl
inc
cmp
inc
ret
jno
xchg
ret
push
fs
xchg
mov
mov
mov
into
ljmp
xor
pop
mov
cld
or
push
scas
inc
adc
lods
and
scas
sub
ret
in
cs
jbe
std
popa
cmc
cmpb
cwtl
pop
cwtl
pop
lret
push
adc
pop
fwait
push
xchg
mov
lret
cltd
std
xor
or
mov
and
adc
fildll
std
pusha
mov
adc
popa
bound
mov
sub
jno
cmp
outsb
or
cmc
sbb
or
jmp
js
outsl
and
ds
push
xchg
cmpsb
lea
adc
les
test
enter
push
aam
shl
push
mov
xchg
or
scas
mov
mov
and
jnp
lcall
push
mov
sbb
out
cmp
adc
add
inc
mov
mov
add
int
push
aam
xchg
shl
aaa
sti
xchg
pusha
sbb
sbb
mov
mov
bound
adc
xor
xchg
in
adc
push
add
sub
clc
jne
xor
insl
xchg
add
push
lcall
jle
fimull
cli
jp
sahf
mov
jno
and
ficoml
add
xor
loop
xchg
stc
jns
lcall
push
je
cwtl
xchg
jnp
lds
mov
cmp
jg
xchg
jp
mov
ficoml
mov
loop
xor
cli
in
add
mov
out
dec
cmp
bound
dec
mov
data16
jp
shlb
in
inc
pop
push
stc
add
and
dec
lret
js
inc
and
push
lods
and
in
and
fistps
lods
test
sub
mov
sub
xchg
sbb
stos
sahf
push
fcomps
and
hlt
cmpsb
add
xor
mov
fiadds
and
xchg
jne
xchg
rolb
sbb
jbe
sbb
push
inc
mov
push
rclb
dec
shl
jle
shll
jne
add
data16
cwtl
push
lods
adc
cmp
repz
mov
fwait
popf
imul
shr
call
cmpsb
jp
arpl
scas
add
incb
adc
cmp
ljmp
jge
fdivrp
dec
or
ret
xor
sbb
mov
aas
test
push
mov
push
xchg
xor
out
push
xor
mov
add
add
shll
cmp
push
aad
push
add
imull
in
xchg
ret
cmp
and
inc
sbb
and
into
xor
mov
loopne
in
fs
repnz
cmp
fwait
mov
lahf
cmp
pop
cltd
mov
arpl
mov
gs
lahf
adc
pop
data16
in
hlt
lods
add
and
and
pop
xor
inc
test
sahf
sub
repnz
add
add
lock
fsubs
dec
dec
icebp
adc
testb
xchg
xchg
loope
stos
aas
outsl
repnz
hlt
pop
push
mov
dec
divl
popf
in
mov
mov
and
shrl
mov
cmp
push
xor
xor
mov
xchg
sbb
sarb
push
je
xor
lcall
das
xor
in
add
add
or
mov
scas
push
aaa
stc
rcrl
sbb
sbb
and
pushf
push
jo
sahf
inc
xchg
jbe
or
fisttps
cwtl
jp
xchg
jns
fstpl
xchg
jp
cmpsl
sbb
adc
inc
xchg
xor
mov
in
insl
aam
mov
pop
mov
lea
movsb
lret
leave
int
mov
negb
mov
arpl
jae
xor
outsb
sbb
jecxz
test
jnp
pop
ficoml
add
ljmp
call
sbb
or
lea
xor
add
jb
mov
or
sub
push
cli
ret
aam
lea
js
popf
fcoms
imul
gs
mulb
adc
or
and
adc
jecxz
mov
fwait
stc
mov
ja
lods
test
mov
mov
iret
stc
inc
fistps
jo
mov
lcall
scas
insl
aas
ss
mov
xor
hlt
cld
ja
pop
mov
inc
adc
pop
add
jg
jle
es
leave
xchg
sbb
das
arpl
jle
in
cmp
xchg
xor
shll
cld
adc
or
dec
sub
adc
xlat
filds
aas
sub
mov
or
popa
mov
ja
dec
sti
scas
inc
test
push
scas
shr
xchg
mov
pusha
pop
pop
fildl
sbb
negl
push
xorl
xchg
dec
mov
mov
and
in
mov
jmp
nop
jbe
inc
sbb
push
xlat
mov
in
pop
daa
rol
or
hlt
cld
xlat
mov
jbe
addr16
add
lds
sub
or
ljmp
out
pop
clc
test
addr16
dec
std
xchg
pop
xlat
xlat
pop
dec
mov
add
jge
jns
jno
mov
sub
mov
mov
cmp
insl
push
xchg
inc
movsb
ds
xchg
lahf
insb
mov
and
iret
icebp
mov
add
pop
inc
push
inc
enter
pop
lds
dec
imul
pop
call
adc
pop
and
cmp
out
mov
andb
mov
mov
xchg
arpl
ds
push
popf
or
daa
std
cmp
loopne
in
mov
xchg
test
adc
imul
fisubs
nop
rolb
pop
rclb
inc
push
mov
pop
ja
sbbb
mov
xchg
cmp
xchg
pusha
mov
fs
movsl
sbb
les
dec
mov
je
xchg
mov
jmp
xchg
cwtl
lock
or
iret
pop
and
pop
lret
inc
dec
xor
inc
mov
lret
inc
pop
and
jg
neg
push
popa
cmp
add
push
or
je
fcompl
je
or
jmp
je
xchg
mov
pop
out
xor
in
xor
mov
xchg
sub
xor
and
ds
cmp
imulb
inc
ja
shrl
insl
push
cld
das
lods
sbb
mov
inc
orb
ja
cmp
pop
cmp
mov
ja
mov
bound
iret
cmp
mov
sub
lds
in
mov
lret
xchg
add
xchg
jmp
xchg
mov
shll
jne
push
repz
enter
dec
and
sbb
unpcklps
lcall
add
push
jp
push
icebp
hlt
lret
addl
fldenv
xlat
adc
mov
imul
sbb
xchg
inc
lret
mov
and
ds
stc
mov
pop
xchg
icebp
cmp
cltd
andl
popa
rorl
mov
add
add
push
pop
inc
push
cli
imul
or
xchg
cmpsl
int
adc
add
and
les
into
push
lcall
mov
jns
inc
lahf
jle
aam
dec
andl
push
pop
pop
mov
dec
jle
adc
dec
xchg
scas
leave
mov
shrl
das
outsl
jle
movsb
and
jg
add
jns
mov
dec
hlt
xor
popa
insl
repz
dec
or
cmp
mov
loopne
repz
mov
fwait
mov
adc
xchg
inc
lret
sub
test
inc
dec
and
mov
xor
iret
dec
ss
cmp
loopne
fwait
mov
inc
fstp
dec
mov
xchg
jle
das
jl
cmpsb
jmp
lcall
add
rol
cmp
jg
pop
movsl
loopne
inc
cmp
inc
ficomps
mov
xor
das
call
and
bound
inc
hlt
ss
in
dec
jns
and
pxor
mov
mulb
push
push
mov
mov
and
int
push
sbb
filds
xor
imull
divb
int3
insb
les
push
repz
push
cli
cmpsb
dec
jmp
mov
pop
mov
add
push
lret
nop
call
std
sub
xor
loope
adc
sti
std
pop
mov
bound
movl
sbb
lcall
fcomi
notl
mov
cmp
add
or
movsb
rcll
dec
movsl
sub
imul
cmc
jnp
pop
or
cmp
test
addr16
je
cmp
xchg
lods
sub
sahf
in
xchg
in
sbb
sbb
das
sub
xor
stos
lret
roll
shl
clc
neg
repnz
pop
lret
mov
jnp
pop
sbb
xor
test
pop
xor
mov
pop
inc
fsubrl
sub
in
xchg
hlt
adc
sub
lret
fstpl
bound
sbb
inc
rolb
cmp
test
and
xchg
inc
nop
xchg
test
lock
idiv
mov
push
xchg
lret
cmp
xor
xchg
mov
pop
loope
loopne
inc
pop
pop
xchg
inc
jnp
pop
cmp
push
cmp
js
int
pop
bound
sbb
test
push
sbb
adc
inc
jae
cmp
das
in
xchg
std
inc
pop
inc
clc
dec
push
push
fwait
addl
dec
es
out
jge
sbb
xor
adc
les
cmp
mov
subl
test
adc
nop
shrb
sbb
mov
adc
notrack
call
pop
dec
movsl
xorb
dec
dec
loopne
inc
adc
sub
rcrb
fbstp
sti
push
mov
cwtl
aaa
or
xchg
and
jl
dec
and
sbb
pop
dec
xor
bswap
in
cmp
loopne
rcr
and
cwtl
rcrl
sbb
imul
daa
enter
dec
add
sub
adc
xor
mov
push
dec
outsb
cmc
int
rcll
xor
lret
pop
std
fsubs
jmp
clc
mov
fidivrl
shl
daa
dec
retw
push
aad
aas
and
push
adc
inc
dec
pop
ss
mov
adc
dec
test
inc
test
push
pop
int
test
nop
out
cmp
jae
pop
adc
jnp
data16
mov
into
jb
movsb
vpcmpgtd
cmp
cld
mov
mov
xchg
arpl
loope
inc
sub
in
lret
jb
push
test
mov
les
test
inc
lods
sub
pop
xchg
push
call
sti
mov
imul
push
mov
mov
and
ret
push
rolb
jge
sbb
sub
sbb
push
cmpsb
sub
out
mov
or
arpl
repz
pop
leave
jmp
das
mov
icebp
adcl
fmull
push
xchg
jbe
xchg
adc
mov
push
fdivrs
cwtl
pop
push
and
dec
cmp
clc
shll
pop
mov
push
jp
ret
cmp
push
ljmp
scas
pop
lds
stos
fstps
lcall
jmp
icebp
inc
rorl
push
pop
push
xlat
insb
test
cmpl
ret
sahf
mov
sahf
sbb
bound
or
pusha
cld
xlat
sbb
insb
lret
xor
push
mov
std
mov
ret
loopne
in
sbb
dec
xchg
cmp
bound
adc
jecxz
mov
cmpb
icebp
mov
loop
pop
lret
fcmovbe
aam
dec
jge
mov
xchg
xorb
pop
cmp
les
jns
jbe
sbb
std
lods
loope
and
mov
adcb
adc
dec
sbb
inc
jns
sahf
pop
sbb
lea
xor
push
dec
outsl
cmp
and
jo
mov
adc
pop
pusha
daa
and
and
xchg
test
and
pop
pop
outsb
orb
mov
arpl
loop
loopne
lock
pushf
clc
xor
andb
notb
sbb
loop
ss
into
inc
scas
imul
gs
mov
aaa
loopne
mov
fstps
adc
aam
mov
gs
popf
sahf
sub
lcall
jb
iret
iret
mov
repz
sub
inc
inc
adc
gs
idivl
ret
mov
incb
dec
nop
test
dec
lcall
cld
cmpsl
push
mov
mov
out
jle
dec
loop
dec
inc
or
insl
mov
das
aaa
or
xor
mov
repnz
mov
and
das
xor
test
scas
outsl
mov
ror
leave
sbb
pusha
les
icebp
imul
test
pop
or
xorl
xorl
outsb
jp
shll
push
pop
negl
push
pop
int3
mov
mov
mov
loope
dec
adc
hlt
outsb
loopne
xor
daa
jo
lcall
jns
ret
ret
dec
pop
push
call
or
and
mov
or
outsb
add
cmpsl
xchg
popf
and
ds
scas
std
out
cltd
sub
pushf
mov
jae
or
mov
sub
cmpsl
xor
cs
loope
sarl
test
test
jp
cmp
out
sbb
mov
fiadds
dec
shll
imul
mov
leave
in
test
xchg
data16
adc
xor
mov
popf
sub
shlb
mov
or
cltd
rol
fisttpl
lods
xchg
jno
dec
push
js
xor
xchg
addr16
xchg
bound
daa
push
filds
stc
bsf
insl
or
push
dec
call
cld
and
out
and
jbe
xor
xchg
ds
xchg
stc
aam
mov
shrb
jg
call
jmp
sbb
xlat
movsb
data16
sbb
subb
jnp
stos
push
pop
or
push
push
push
lret
cvtps2pi
nop
mov
jae
mov
jnp
adc
leave
mov
divb
adc
sub
mov
xchg
sarl
xchg
and
inc
dec
adc
fwait
or
push
ret
notl
jmp
mov
lret
mov
push
in
push
push
ja
daa
inc
mov
jns
xchg
gs
push
sti
stos
into
mov
aaa
or
lea
daa
jb
fcomp
dec
jg
fsubl
or
not
mov
or
mov
icebp
cmp
lea
iretw
lea
lahf
cmp
jae
cs
dec
loope
ret
push
lds
fistpll
mov
mov
cmp
divb
mul
xor
mov
mov
rcrb
shlb
pop
insl
adc
xor
push
lcall
fidivrs
in
mov
xchg
int3
pop
mov
xchg
mov
xchg
sahf
ret
xchg
or
cmp
xor
pop
cmp
jb
rcrl
and
sub
sahf
jae
in
aas
es
lea
cs
push
lcall
loop
mov
fwait
ja
fistps
sbb
aas
adc
mov
cmc
in
xchg
xchg
fisubs
fiadds
aad
mov
cmpsl
movsl
jne
push
int
rcrl
mov
pop
push
sbb
jp
ljmp
out
popl
bound
mov
xor
popa
ret
or
mov
adc
mov
ljmp
mov
shll
stos
fwait
sub
loopne
ja
aad
lods
xchg
or
insb
mov
inc
fnstcw
add
pop
out
jl
pop
pop
cmp
mov
adcl
sub
mov
sbb
inc
jmp
pushf
icebp
enter
popf
xchg
or
jmp
fisubrl
cmpsb
mov
into
ljmp
sub
ljmp
popa
push
in
mov
or
call
lea
xchg
mov
into
inc
push
lahf
movsl
imul
cmpsb
mov
cmp
movsb
test
cmc
bound
push
add
sub
rcll
sub
loop
lock
lret
repnz
xor
andb
nop
lahf
sbb
inc
adc
lods
jle
roll
into
push
ficompl
jno
sub
aad
xor
outsl
dec
ss
fs
pop
out
push
or
out
enter
inc
cmp
out
repnz
shl
fldcw
jno
push
or
aaa
movaps
popf
push
dec
or
push
movsl
fildll
mov
fdivs
ficompl
sub
ds
pop
insb
hlt
mov
dec
mov
test
xchg
mov
adc
cmp
mov
adc
jge
mov
sti
add
xor
adc
mov
adc
or
and
jmp
push
add
mov
pop
adc
into
cmp
or
nop
jns
inc
enter
and
rcll
rcrb
es
jbe
add
rcrb
fiadds
push
popa
add
stc
in
mov
cmp
dec
mov
jge
out
sti
fdivrl
adc
pop
test
cmpsb
pop
cmp
fnstenv
icebp
movsb
push
in
call
test
jg
inc
pop
call
popf
jae
mov
orb
dec
mov
xor
test
add
push
shr
xchg
push
add
sbb
inc
pop
xchg
popf
mov
int
sbb
mov
pop
cwtl
inc
lea
je
lea
outsw
shl
pop
sahf
pushf
loope
addr16
imul
inc
cs
and
push
or
xor
push
test
lcall
mov
pop
das
xlat
push
and
dec
and
and
pusha
add
or
lock
loop
mov
or
mov
daa
ljmp
or
jmp
repz
call
call
adc
icebp
in
fdivrl
cmc
cwtl
sbb
test
aaa
pushf
lock
lock
jge
out
mov
pop
mov
adc
pushf
ret
mov
or
adc
shlb
fistps
sbb
xchg
or
jnp
inc
inc
stc
stc
mov
ljmp
xor
push
out
call
mov
jge
mov
scas
out
popf
xorb
push
and
pop
out
lods
sbb
mov
aad
sbb
fwait
xchg
add
movsl
inc
mov
adc
les
xor
mov
cmpsl
xchg
push
mov
push
out
roll
jecxz
popa
rol
cmp
sbb
pushf
andb
pop
out
xchg
adc
test
sbb
inc
pop
cld
out
xor
in
sti
cmp
mov
or
cmp
out
adc
inc
cmp
pop
stc
loope
mov
inc
mov
sbb
scas
das
mov
cmp
mov
push
xchg
push
rcll
jae
xchg
pop
mov
mov
lahf
ret
pop
lock
adc
cs
rorl
movsl
lds
push
subb
jge
add
imul
mov
in
xchg
and
inc
or
xor
jge
test
ss
jmp
pop
sti
pushf
and
sub
jbe
or
push
mov
add
mov
xchg
xchg
sar
xor
xchg
lock
loope
outsb
pop
stos
sahf
divl
mov
movsb
inc
popa
pop
push
int
popa
jnp
aad
adc
jg
xchg
es
dec
cmc
aad
imul
into
fucomi
arpl
daa
test
and
fistpl
loopne
divl
xchg
orl
cmp
and
or
sub
subl
int3
clc
push
test
dec
scas
add
popf
imul
pop
sub
fcmovb
jmp
pop
and
push
adc
mov
insb
addr16
scas
adc
into
popf
and
test
imul
xlat
pop
cs
lcall
shlb
shlb
popa
mov
and
shl
lods
mov
test
filds
lock
mov
inc
xorl
and
scas
add
dec
pop
adc
xor
mov
pop
pop
pop
inc
mov
out
lea
repz
pop
cmpsb
mov
movsb
mov
stos
pop
cs
addr16
jle
ret
stos
enter
leave
call
mov
cmpsl
add
add
movsb
push
sar
lods
pop
out
fscale
mov
or
adc
sbb
jmp
sahf
pushf
xor
lahf
push
es
cmp
xchg
rcll
xor
cmp
xchg
or
jge
cmp
mov
out
pop
lret
inc
mov
lea
mov
lods
aaa
pop
push
into
pop
fistps
fs
cmp
push
imul
andl
mov
inc
fldcw
scas
jo
or
stc
movsl
inc
je
dec
mov
sbbb
mov
push
pushf
jo
lahf
cli
lret
and
xchg
nop
push
shll
mov
out
push
sub
test
jecxz
push
lret
shlb
aam
dec
shlb
cmp
add
jge
idivb
push
mov
mov
push
adcb
mov
adc
scas
pushf
clc
push
shrb
popf
cli
sub
adc
dec
fildl
cmp
xchg
orps
sbb
mov
shrb
sarl
and
cwtl
jmp
pmaddwd
add
pop
inc
stos
cmp
jbe
mov
movsl
popa
sub
inc
repz
sub
inc
inc
and
icebp
leave
outsb
add
xor
lret
icebp
dec
xor
push
jb
pop
xchg
data16
in
mov
fcoms
in
cmp
movsl
divb
cmp
outsb
push
lea
sub
ljmp
xchg
xchg
push
cmp
ret
mov
push
add
repnz
jecxz
outsl
mov
out
lods
mov
out
iret
and
idivl
loop
daa
adc
sub
add
das
jle
addl
ja
xchg
leave
mov
mov
push
push
sub
xchg
xlat
pop
mov
daa
push
inc
jecxz
mov
sbb
movsl
insl
add
mov
cmp
inc
subl
inc
fistpl
pop
negl
jae
and
inc
push
cmp
or
nop
outsl
mov
lods
push
call
mov
pusha
daa
lods
test
adc
sbb
inc
dec
aam
clc
cwtl
push
cmp
int
cmovo
cmp
jp
lds
add
popa
int
addr16
out
add
std
sbb
lcall
xor
mov
add
cmpsl
ss
add
sub
pop
push
jg
xor
or
inc
loop
xchg
enter
decb
testb
sahf
push
mov
xlat
adc
test
mov
ds
inc
cmp
adcl
jle
daa
sbb
fidivl
scas
inc
push
sub
cltd
or
lea
cmp
pop
add
inc
mov
lock
add
aaa
pop
pop
pop
pop
jl
imul
fldcw
and
sub
loope
mov
mov
sarb
ret
cmpsb
insl
leave
sbb
pop
push
ljmp
mov
popf
pusha
jne
mov
cs
jo
pusha
cmp
jae
adc
push
inc
inc
int
cli
frstor
xor
dec
inc
push
xchg
push
cmpsb
and
divl
cld
jnp
mov
mov
lret
jp
xchg
add
jb
dec
sub
add
jecxz
mov
inc
shl
arpl
loope
add
mov
mov
or
stos
shl
sub
shll
stc
mov
fcmovu
cmp
push
lret
cmp
cmp
cmpsl
lock
push
and
leave
clc
jecxz
pop
adc
mov
sbb
cmp
test
addl
mov
imul
lcall
and
mov
out
in
popf
inc
je
aam
int3
popl
lcall
xchg
xor
xchg
jb
jp
jbe
loop
mov
pop
mov
sar
orl
jb
inc
lds
mov
aam
scas
xchg
fisubl
ljmp
movsb
je
cli
stos
xchg
xchg
push
imul
lock
inc
gs
mov
mov
cmp
lret
xchg
mov
add
hlt
roll
test
stc
mov
ss
and
add
pop
jle
das
lods
xor
mov
mov
xchg
outsb
jmp
inc
loopne
sahf
mov
fistpl
sub
mov
mov
shr
or
mov
fcompl
mov
mov
pushf
sub
jmp
mov
and
in
xorl
fwait
mov
push
adc
push
aas
add
and
cmp
mov
mov
mov
inc
mov
imul
pop
fwait
shl
orb
int3
stos
jne
pop
cmpsb
pop
mov
add
bound
jb
push
sbb
xor
ret
mov
push
ret
shrb
in
outsb
or
pushf
inc
pop
lidtl
cmp
js
stos
in
rcll
stc
mov
xor
icebp
aaa
sub
cmc
pop
std
adc
in
jbe
sub
dec
loope
idivl
rclb
pop
sti
mov
cmp
mov
inc
les
jle
loopne
sbb
lcall
bound
mov
adc
dec
popf
lods
imul
inc
dec
cs
jo
mov
adc
adc
jbe
testl
dec
jne
in
enter
gs
ss
sub
mov
imul
xchg
push
push
cld
mov
rcll
fmuls
mov
aam
scas
jmp
inc
into
xchg
loop
inc
sub
xchg
xor
es
clc
push
leave
clc
sbb
test
jecxz
out
je
dec
lods
jmp
arpl
pusha
lahf
outsl
mov
mov
jmp
jge,pn
push
cmp
push
pop
add
cmpsb
pop
sti
inc
xchg
pop
das
cmpsb
daa
repz
js
mov
outsb
shrb
sbb
or
mov
or
or
enter
push
mov
inc
lods
or
or
mov
jns
jne
clc
repz
in
mov
test
in
lret
mov
mov
sbb
mov
mov
push
nopl
lahf
icebp
add
cmpsb
rclb
in
call
or
adc
ficoml
add
imulb
add
push
sub
jbe
in
mov
in
xchg
add
lods
push
add
in
jnp
pushf
sbbb
dec
fwait
dec
nop
insb
sub
xor
cmpsb
or
push
push
movd
inc
mov
lods
inc
out
mov
stos
inc
in
lods
xchg
out
cmpsb
cmp
xchg
mov
pop
dec
xchg
cltd
iret
out
cmp
pop
xor
or
or
push
cmp
jnp
mov
mov
stos
xlat
enter
pop
cltd
scas
loopne
mov
add
jo
lea
and
mov
lea
cmp
jne
cli
dec
xchg
jno
cmpsb
pop
shll
xchg
push
jo
iret
push
sbb
xchg
dec
mov
sti
aas
xor
add
nop
ljmp
dec
lock
xchg
cli
pop
cmc
sub
push
insb
adc
aas
js
data16
int3
stc
push
nop
scas
mov
inc
mov
ss
jae
shll
pushf
inc
cmp
mov
fsubs
mov
push
aad
imul
inc
cmc
lods
scas
lret
and
jne
xchg
out
scas
xor
add
inc
xorb
inc
jge
imul
repnz
jg
jb
popf
sub
data16
cld
icebp
add
pop
add
scas
js
dec
cmpsb
js
dec
in
adc
xor
jmp
loop
std
pop
jae
shlb
dec
testb
test
es
mov
or
cmp
jle
pop
or
test
dec
add
mov
aad
cmpsb
inc
mov
sbb
pushf
enter
lcall
mov
mov
repnz
fs
test
mov
aam
les
push
sahf
repz
xor
int3
repnz
inc
aaa
insl
jno
push
pop
movsl
cmp
mov
pop
pop
fs
push
iret
fistl
dec
pusha
mov
cmp
mov
andb
cmpsb
mov
arpl
rcrb
aad
mov
adc
add
sbb
lds
fcmovnu
in
aad
fnstenv
mov
shll
mov
test
dec
sbb
pop
adc
out
jmp
ja
mov
fidivrs
inc
ret
sub
ds
push
mov
inc
lods
mov
call
push
test
mov
jl
dec
cltd
sete
std
das
das
mov
int
clc
dec
enter
imul
dec
xor
mov
push
pop
imul
scas
sbb
fcoml
movsl
lods
cmpb
cmovo
lcall
es
adcb
call
pop
aas
stc
std
mov
fistpll
adc
fildll
inc
cli
ja
push
xor
cmc
sub
jae
mov
pop
sbbl
lret
lret
push
inc
in
rcrl
lret
subl
lahf
out
js
mov
in
mov
push
ja
fwait
pusha
lock
cltd
pop
sbb
shlb
sbb
dec
mov
jge
and
rcrb
mov
xchg
cltd
push
jns
nop
inc
ret
stos
loop
push
xlat
popa
xor
mov
mov
push
xchg
aam
mov
ret
repnz
xchg
js
push
jnp
and
repz
ds
test
pop
xor
fildl
cmp
es
jb
mov
pushf
ret
push
jno
mov
out
in
stos
repnz
rcrl
jnp
or
gs
sti
add
jb
inc
lods
or
sbb
inc
fwait
shrl
ja
rolb
jmp
lret
sub
lret
jno
rorb
lahf
cs
xchg
xchg
cmp
push
mov
push
inc
loope
sub
dec
lds
pop
and
sub
cmc
call
insl
call
cmp
push
mov
cmc
rcrl
xchg
push
ljmp
iret
sar
cmp
mov
cmpsb
xor
sahf
cli
inc
xor
inc
popl
add
push
xor
pop
ror
aaa
sbb
and
repnz
std
mov
iret
mov
jmp
nop
stc
fidivs
xor
scas
mov
outsl
cwtl
rep
nop
negl
cltd
test
fstpl
add
push
test
cld
mov
push
xchg
or
mov
lods
xor
inc
or
loopne
lock
scas
cmp
outsb
push
outsl
ret
push
shr
add
jnp
mov
int
cli
xchg
outsb
mov
cmpsl
sti
imul
leave
pop
cmc
pop
pop
mul
jmp
jne
xchg
jmp
mov
in
lahf
int
pop
stc
in
push
xchg
rcrl
or
cmpsb
adc
mov
std
repz
xchg
or
aam
mov
push
addr16
pop
adc
cmp
adc
jns
mov
inc
cli
ficoms
add
dec
out
and
movsb
add
mov
sbb
in
lock
stc
nop
mov
fs
fldt
jb
test
add
lret
xor
lret
push
das
sub
adc
add
mov
xchg
lret
dec
insb
dec
dec
sub
repz
pop
or
xchg
cmp
push
mov
stos
dec
outsl
inc
cwtl
rep
cmp
mov
mov
sub
adc
test
jae
out
xor
clc
xchg
stos
xchg
cmpsl
gs
stc
pop
jbe
sbb
adc
mov
add
ret
insb
lods
inc
js
out
shrl
bound
dec
dec
cmp
xchg
movsb
rcll
es
lret
mov
ds
pop
xchg
push
enter
and
out
jo
fcmovnb
stc
xchg
sbbl
cmpsl
cltd
add
ds
mov
cwtl
gs
aad
mov
loop
add
and
and
scas
fwait
push
negl
jns
nop
push
jbe
sar
enter
sbb
test
push
dec
jbe
cmp
mov
flds
add
pusha
mulb
inc
outsl
das
scas
add
es
sbb
div
or
in
dec
jnp
sbb
lahf
dec
test
push
stos
jae
fists
mov
cmpsb
cmp
mov
xorb
and
pushf
add
adcb
dec
je
test
ror
push
in
mov
cld
mov
xor
jns
fsubp
stc
in
pop
sbb
flds
add
imul
movsl
xchg
dec
lds
scas
insb
clc
xor
xchg
mov
push
fiaddl
not
cmc
or
adc
dec
mov
gs
mov
jmp
inc
push
sti
sbb
js
pop
cmp
cld
and
loope
and
andb
mov
cs
je
push
fucomp
cmp
adc
movsb
cmp
lret
cmp
insb
pop
adc
push
pmaxsw
js
mov
jno
jl
add
das
sbb
cmpsl
dec
pop
lock
mov
cmp
pusha
call
int
sbb
pushf
dec
jno
pop
lret
loope
rclb
push
cltd
xchg
aas
or
hlt
lea
sti
lods
and
xchg
adc
adc
push
jo
mov
sahf
cmp
lods
data16
xor
adc
cmp
or
stos
xchg
movsl
fldenv
cld
sub
insb
cmpsl
xor
adc
rcrl
adc
mov
mov
bound
dec
mov
insl
stc
push
xchg
cmp
roll
and
outsl
clc
clc
jp
inc
daa
movl
xlat
xchg
mov
xlat
outsb
push
dec
fsubl
fwait
push
iret
push
jnp
in
mov
lea
inc
frstor
in
scas
jle
insl
xor
add
pop
cmp
pop
push
mov
mov
push
sub
fs
rorb
and
leave
sub
int3
xor
outsb
mov
fcompl
pop
fadds
cli
stos
cmp
cmp
mov
repnz
lahf
cwtl
jno
and
sub
sub
cmc
mov
mov
rol
cwtl
dec
adc
lds
jns
es
mov
idiv
out
xlat
xor
sbbb
inc
add
push
in
cld
dec
imul
sub
add
mov
lods
and
xchg
mov
dec
imul
adc
add
ret
sbb
xor
subl
inc
mov
adc
inc
dec
xchg
lret
cmpsl
lcall
dec
mov
pop
sub
scas
inc
push
pavgw
xorl
jle
mov
icebp
arpl
mov
add
jmp
sti
imul
and
or
xchg
clc
loopne
sbb
add
and
test
call
mov
test
imul
inc
adc
ljmp
cmpsb
sbb
add
xor
jle
mov
fmuls
shrb
sbb
nop
stc
or
sbb
adc
nopl
jno
dec
in
int
test
sub
call
push
sub
fs
inc
cltd
pop
out
adc
insl
fucom
mov
jmp
cmp
xorl
fldcw
cwtl
enter
fidivrs
fwait
push
or
jne
sahf
sub
ret
mov
movsl
aad
mov
sbb
es
mov
stc
jge
push
mov
cli
xlat
mov
sub
jns
add
sbb
mov
mov
jge
fsub
lret
inc
insl
push
xor
xor
leave
movsl
dec
mov
push
loopne
mov
sub
nop
icebp
sbb
push
pusha
xor
fwait
xor
dec
inc
mov
aam
or
or
in
push
stos
pop
fcomps
pop
xchg
shrl
loop
push
sub
call
jbe
int3
in
out
adc
jecxz
lret
mov
ficompl
jg
cli
or
adc
ret
loopne
cmc
and
fldcw
push
push
sub
and
xor
mov
and
add
mov
pushf
push
inc
jbe
fmuls
call
js
punpcklwd
popf
loope
and
outsb
fcoml
dec
cli
ds
div
push
test
jecxz
jno
rclb
jae
stos
std
inc
add
mov
dec
inc
pop
dec
mov
mov
jae
mov
mov
out
in
adc
push
cmpsb
rcrl
and
orl
jp
cld
sub
addb
adc
adc
jne
add
mov
push
dec
pop
or
inc
mov
stos
and
xor
mov
push
shlb
inc
mov
jle
gs
fldcw
xlat
add
sub
sub
cmp
push
fdivrl
sbb
les
jecxz
sub
sbb
cwtl
mov
inc
mov
rcrl
shlb
loop
hlt
imul
mov
push
push
fcomp
xchg
jno
pop
adc
jp
sbb
mov
aaa
test
dec
add
lret
mov
loop
jge
dec
aad
adcl
mov
xchg
pop
js
pop
aas
hlt
fld
adc
or
adc
aam
cwtl
xchg
sub
push
sub
cmp
add
in
nop
jns
repz
int
imul
push
sub
mov
scas
into
jp
frstor
push
dec
jg
in
fisubrl
dec
adc
jno
orl
xor
or
hlt
add
pushf
pop
xchg
in
rolb
push
scas
xchg
shl
int3
fbld
cs
mov
and
mov
sbb
add
clc
sub
repz
jp,pn
stos
jge
je
cs
ret
idivb
andl
jo
push
cltd
mov
or
sahf
loope
sub
sbb
sub
xchg
popa
or
subl
push
mov
mov
xchg
cli
push
or
push
scas
pop
mov
leave
dec
xor
sbb
add
jnp
inc
and
pop
mov
and
lods
lcall
mov
into
pop
shll
pop
jae
cmp
stc
fadds
add
out
push
pop
push
aaa
xlat
iret
mov
sub
leave
xchg
aaa
or
inc
jge
out
or
xchg
ja
sbb
aad
je
add
xchg
ret
sbb
push
xor
enter
sub
jge
sub
adc
mov
xchg
movsb
and
dec
xor
cli
pop
mov
push
push
aam
xor
pop
mov
jns
aam
jno
fdivs
jmp
js
neg
push
cmp
ljmp
push
fadds
in
or
cwtl
jmp
lret
movzwl
rclb
mov
xor
mov
in
fs
out
lock
dec
je
inc
and
inc
mov
aas
jecxz
mov
pop
mov
shrl
sub
sub
js
mov
nop
push
or
aas
jge
dec
cmp
sbb
push
push
jmp
xchg
cltd
pop
pop
inc
sub
sbbl
cmc
or
pop
lods
cmp
adc
sub
xor
xchg
mov
sub
or
jge
sbb
sbb
cmpsl
sbb
push
js
in
cmp
adc
testl
test
xchg
xchg
lret
xchg
js
pop
xor
pop
divb
mov
xor
mov
cld
add
ljmp
dec
push
js
jae
add
dec
shlb
loop
mov
cmp
jb
cs
sbb
fstpl
shll
jge
loope
je,pt
sub
aam
test
dec
fstpl
icebp
stos
insb
xor
xchg
cmp
daa
add
push
std
and
ljmp
push
and
lahf
imul
sarb
inc
dec
xchg
fisubrs
mov
inc
lock
sbb
xchg
bound
push
push
xchg
xchg
fistps
push
push
dec
movntq
cltd
fsts
es
fcomi
fs
sti
dec
in
cli
jo
js
sbb
inc
dec
jae
and
stc
dec
frstor
mov
mull
cli
or
or
sbb
xchg
call
test
int
mov
dec
xchg
pop
repnz
xchg
arpl
int3
lret
add
and
cltd
inc
jmp
fcoml
xchg
shrl
out
xchg
sub
xchg
sub
scas
add
aas
flds
nop
popa
adc
clc
xchg
xlat
lcall
push
cmp
lret
mov
int3
pop
mov
jbe
adc
ljmp
rolb
jnp
ficompl
cmpb
out
lea
leave
adc
adc
cwtl
sbb
adc
imul
push
test
inc
add
mov
aam
rorl
xor
cmp
inc
scas
mov
cld
stos
ds
cli
scas
call
inc
outsl
mov
cmpsl
adc
xchg
jns
out
dec
ret
popa
insl
lcall
mov
and
dec
ret
es
popf
xor
pop
jp
add
stos
mov
cmc
xor
outsb
or
push
test
lea
in
insb
add
mov
loope
das
in
push
jnp
mov
jl
mov
cmp
lret
pop
mov
ret
bound
enter
fnstenv
jp
add
and
jmp
xor
xchg
add
imul
xchg
jge
and
or
adc
cmp
lret
cmp
in
call
cmp
jne
xchg
sar
xchg
in
out
out
sbb
jp
cmc
enter
jmp
push
lahf
cmc
std
xchg
addr16
repz
int3
cmp
cld
out
out
orl
mov
test
mov
outsl
mov
popf
icebp
idivb
aad
xlat
pop
dec
cltd
jmp
js
sbb
hlt
fwait
lahf
je
out
add
cmc
stos
mov
adc
es
mov
scas
jg
ja
jge
mov
mov
lret
in
jo
repz
pop
push
xchg
ror
cmp
insb
dec
add
mov
je
mov
and
xchg
push
cmc
ss
mov
mov
sub
jne
mov
pop
mov
mov
ljmp
sub
adc
push
sub
fwait
popf
pop
in
jg
outsb
jp
inc
sub
fstl
mov
jecxz
mov
cmpsl
cmp
dec
ret
clc
adc
filds
mov
xor
cmp
push
inc
xor
repnz
sbb
sub
mov
dec
mov
ss
loope
out
adc
adc
mov
xchg
pusha
into
or
in
xchg
jns
dec
adc
jmp
pushf
add
mov
lret
or
notl
fsub
jne
cmc
dec
cmpsb
mov
imul
jne
lods
imul
ffree
mov
sub
push
je
ror
and
xchg
mov
mov
test
add
fnstsw
mov
stos
dec
sbb
dec
std
fistpll
add
shrl
inc
loop
fcoms
push
lods
xchg
mov
stos
test
sbb
aam
dec
repz
xchg
hlt
lods
inc
ja
pop
inc
xchg
sub
ret
mov
push
mov
inc
add
fdivrs
dec
rorb
xchg
inc
sbb
gs
test
icebp
rorl
fildl
gs
sbb
dec
mov
pop
lea
sub
fnstsw
loop
sub
idivb
adc
mov
bound
dec
sub
sbb
add
and
sti
sbb
add
jmp
and
mov
jbe
sbb
inc
test
mov
push
jb
dec
and
notl
pop
loope
out
jnp
cli
scas
int3
roll
mov
mov
xor
insb
sti
pop
xor
test
pushf
add
in
dec
xchg
adcl
inc
clc
xchg
leave
adc
popf
icebp
mov
mov
cwtl
push
jns
xor
and
cs
out
fsubr
popa
xchg
outsb
notb
jae
push
lock
aad
mov
loopne
push
mulb
jnp
pop
mov
cmc
mov
pop
mov
or
addb
jl
mov
pusha
aaa
std
dec
and
inc
ret
and
loop
movb
dec
xor
jl
pop
movsl
fs
das
loope
outsb
inc
push
jbe
out
fildl
mov
and
mov
adc
stos
push
or
out
or
rcll
pop
fidivs
mov
and
pop
je
negl
outsl
xchg
out
dec
neg
xor
xor
xchg
push
pop
inc
aam
in
sbb
stc
xchg
dec
int
jno
imul
cmp
mov
cmpsb
incl
repz
ds
adc
lods
dec
aaa
and
jle
cld
xchg
lock
cmp
js
adc
orl
adc
cwtl
repz
rorl
nop
ret
out
rorb
adc
das
jbe
sti
jnp
stos
or
outsl
fwait
rolb
shlb
popf
icebp
xor
cli
adc
mov
xchg
adc
xchg
jb
mov
repz
add
xor
push
adc
dec
loopne
clc
cmp
jb
xor
fmul
ret
aaa
dec
fsubrs
out
lds
cmp
int
mov
sarb
push
mov
lret
jno
mov
orl
mov
cmpsb
outsb
aas
cld
shll
fs
scas
popf
sti
pop
jbe
fcoml
repnz
hlt
or
ret
in
adc
cmp
fdiv
mov
vmaxss
insl
sub
addb
fs
repnz
xor
jns
sub
fdivrp
roll
cs
mov
xor
mov
xchg
call
testb
sub
lret
leave
clc
mov
arpl
call
jl
sub
js
bound
lahf
aaa
ljmp
adc
fcmovne
dec
mov
jno
inc
jae
pop
addr16
xor
jae
fwait
imul
and
jns
out
mov
shrl
dec
clc
jecxz
lahf
stos
pop
or
xchg
cmp
movsl
push
int3
add
push
leave
mov
push
int3
xor
movsl
mov
cmpb
xchg
fwait
pop
adc
xor
sbb
mov
lock
cmc
jmp
add
xor
aad
adc
cltd
into
mov
das
cmp
cmp
mov
daa
add
test
inc
cmc
inc
mov
int3
adc
insl
aaa
xor
push
adc
or
cmc
imull
cmp
add
pop
ja
xor
xor
std
cwtl
xor
adc
lcall
lods
add
into
popa
mov
jnp
push
shll
idivb
add
fnstsw
inc
xor
and
or
mov
mov
orl
cmp
lahf
adc
xor
pop
sbb
inc
mov
insb
mov
dec
push
cmpsl
ret
pop
add
test
sbb
int
add
add
fwait
mov
test
inc
fldcw
hlt
loope
push
ljmp
mov
call
sahf
cmp
xchg
adc
addr16
adc
sbb
arpl
jle
shlb
repnz
test
in
sub
mov
inc
sub
shrb
in
xchg
xchg
or
mov
out
xor
mov
push
jne
popf
mov
repnz
mov
xchg
inc
dec
xor
scas
sti
adc
cmp
arpl
xchg
jmp
jbe
call
mov
xor
fstps
loopne
add
push
das
jmp
icebp
outsl
loopne
mov
mov
shr
sti
in
stos
cmp
pop
push
test
ljmp
xchg
mov
icebp
je
out
jmp
dec
je
xor
cmp
es
loopne
mov
add
popa
jl
dec
test
hlt
dec
ljmp
ret
lret
test
dec
sar
and
repnz
and
bound
icebp
sbb
pop
fsubrs
add
xlat
std
jb
push
dec
es
and
rcll
sub
jne
dec
popa
xor
nop
push
lods
andl
xchg
add
shrb
lods
sbb
fcomp
xchg
push
xor
push
jne
bound
xchg
inc
mov
mov
jbe
cmp
out
mov
mov
sbb
dec
mov
ret
mov
fisubrl
pusha
dec
lcall
cmp
loop
sub
jmp
fsubrs
mov
add
push
mov
sub
jb
es
cmp
fcompl
clc
cmpsl
lret
xchg
mov
jae
mov
mov
test
sub
js
aad
fbstp
hlt
sbb
xchg
ret
mov
out
int3
mov
or
pop
adc
imul
or
lock
sub
xchg
ja
mov
xchg
lahf
lds
mov
or
xchg
sti
sbb
pop
pushf
rorl
xor
adc
ret
xchg
je
or
mov
dec
movsw
jo
sub
cmp
adc
push
int
leave
push
sbb
insb
leave
jno
mov
fwait
shl
xchg
xor
fdivrp
push
loopne
inc
rcr
and
mov
mov
mov
xchg
push
int3
jo
add
aaa
jnp
or
loope
or
jno
sbb
scas
adc
arpl
movsb
adc
push
or
pop
dec
adc
outsl
out
cmp
aad
scas
pop
xchg
sub
stos
repz
sbb
xor
ficompl
pop
int3
xchg
push
push
les
mov
dec
ret
mov
in
mov
lret
push
aad
ljmp
ficoms
push
push
fcomip
dec
and
or
pcmpgtd
jecxz
jbe
cmp
push
cwtl
lea
inc
cmp
pop
ds
clc
jne
and
pop
mov
or
mov
cmp
pop
lds
addl
xor
xchg
test
inc
fwait
clc
cld
and
sub
or
xor
and
mov
cwtl
shll
push
xchg
adc
or
in
repz
jmp
sahf
mov
aas
mov
sub
mov
jmp
push
mov
scas
pop
das
fdivrp
popf
sbb
repnz
and
popl
fisubl
cli
mov
pushf
pop
pop
shll
imul
jne
out
mov
adc
frstor
fists
mov
hlt
or
fists
in
xor
addr16
cmp
movsl
lret
cmp
xchg
push
hlt
push
and
xchg
call
subb
and
out
push
int3
dec
in
aad
lds
jmp
dec
enter
jns
jo
fstl
fisttps
lds
add
popa
pop
int3
push
add
push
jbe
enter
fs
pop
stc
cmp
xchg
mov
cwtl
daa
mov
xchg
fisubs
mov
xorl
push
ret
cmp
push
data16
dec
stc
or
stos
shll
sbb
out
xor
mov
inc
mov
mov
hlt
sub
xor
cmp
clc
out
sbb
push
insl
arpl
ss
xchg
fdivrs
outsb
and
adcb
mov
aad
stos
std
addr16
cmp
andb
popf
rolb
add
mov
stos
sub
xor
loope
orl
lahf
inc
jb
aaa
hlt
jbe
fwait
gs
out
cltd
xchg
repz
std
push
pop
imul
aaa
dec
enter
dec
stc
nop
inc
lds
roll
aam
movsl
push
sub
sbb
cmpsl
jnp
mov
push
pushf
add
sbb
in
cmc
mov
ss
data16
dec
dec
adc
pop
mov
xor
aaa
inc
test
dec
push
mov
lods
push
jge
cmp
pushf
sbb
lret
scas
or
ficoml
js
xor
sbb
mov
xchg
pop
push
pop
into
popf
pop
mov
xlat
bndldx
mov
jmp
mov
or
and
in
mov
cmp
sub
in
dec
mov
ret
into
test
jp
pusha
mov
in
hlt
xchg
mov
mov
add
xchg
fistpll
lret
loope
ffreep
js
xor
ficompl
test
mov
jmp
pusha
mov
sbb
fbstp
pop
dec
scas
cmp
cmpsb
lret
and
pop
bound
mov
adc
out
sbb
popf
push
lds
cmp
sub
push
pusha
pop
inc
rorb
int
popf
pop
dec
call
aam
out
not
lods
xchg
cmpsl
js
mov
in
pop
into
jmp
sub
mov
add
mov
fisttpl
adc
cwtl
test
leave
cmc
push
xor
add
cmpsb
inc
sahf
mov
iret
cltd
xchg
jnp
dec
rolb
jns
push
mov
sbb
dec
std
mov
push
jmp
jp
pusha
dec
mov
push
push
imul
lret
jbe
imul
mov
inc
fsts
cs
cmp
mov
inc
cmpsl
xlat
mov
jg
and
imul
mov
jp
call
je
jb
mov
incl
mov
sbb
mov
mov
gs
mov
pop
or
fsubr
adc
outsb
rcr
les
aad
mov
jb
xlat
popf
lea
mov
popf
imul
test
mov
pop
add
inc
jno
cmp
xor
in
mov
mov
dec
mov
or
mov
adc
popa
sarl
sti
pop
or
les
cmp
mov
add
pop
sbb
fstps
sti
xchg
push
lods
test
cmpsb
xchg
imul
cmp
ret
xor
daa
sub
or
add
fcomi
dec
aam
sbb
movsb
into
fiadds
imul
addl
pop
inc
push
jge
fadd
jb
in
add
sarb
xor
ds
mov
es
negb
pop
mov
mov
mov
imul
sahf
mov
xchg
sub
pop
shll
es
divl
fcmovnb
fcomi
cmp
mov
sahf
jle
std
jnp
sti
and
aas
scas
xchg
push
sti
pop
rcll
cmp
cmpsl
ds
xor
mov
pop
dec
stos
lods
xor
or
enter
jo
movsl
xor
lds
sbb
pop
add
lods
dec
jo
jle
sbb
lods
fldcw
mov
mov
mov
lods
jae
cmpl
aam
jge
pop
sub
xor
movsl
cmpsb
test
outsb
xchg
adc
dec
out
push
mov
subl
cmp
pop
lret
sbbl
push
es
aad
cmp
push
add
rclb
nop
fstpl
sub
and
shll
sbb
push
sub
lods
loopne
es
mov
push
push
fwait
cmpsl
lods
mov
sbb
inc
xchg
dec
sarl
push
sbb
imul
nop
mov
inc
add
jno
push
adc
mov
dec
pop
stc
add
insb
mov
push
pop
pop
mov
arpl
cs
pusha
test
add
adc
aas
fs
push
push
or
mov
hlt
std
pop
sti
mov
add
cmp
push
cmp
in
cmp
and
mov
sub
leave
jbe
mov
jbe
pop
xor
out
popa
cmp
loope
push
xchg
test
loope
or
nop
out
mov
or
mov
js
fistps
mov
mov
mov
into
dec
arpl
aaa
push
xchg
cltd
jg
movsl
aad
mov
hlt
je
fdivr
mov
or
pop
aam
out
es
data16
aam
pop
movsb
inc
xchg
adc
xchg
sub
mov
or
ret
inc
popa
adc
sub
mov
adc
pop
cld
in
loope
cltd
add
sbb
dec
pushf
pop
fs
push
nop
and
ret
mov
push
mov
ficoml
inc
cs
test
push
lret
loope
push
cmpsb
mov
jns
mov
mov
and
mov
cli
dec
call
dec
adc
out
sub
pop
sub
aas
imull
jae
lds
xchg
std
shlb
mov
out
xchg
cmp
incl
loopne
sbb
mov
inc
add
pop
aad
adc
pop
ss
mov
sbb
xor
xor
loop
dec
imulb
adc
das
xchg
gs
cmpb
popa
mov
xorb
mov
mov
adc
xor
jg
or
cld
xchg
rolb
daa
jmp
loope
sbb
cmp
lods
mov
pushf
ja
lock
jmp
ljmp
out
mov
mov
das
xchg
aam
push
adc
int3
fidivl
cltd
xchg
cmp
or
insb
sbb
push
lahf
mov
rolb
out
fisttpll
cli
adc
dec
aad
mov
mov
pop
xor
mov
mov
fdivrl
inc
lods
mov
lcall
or
lods
xchg
mov
jle
dec
jecxz
adc
sbb
mov
cmp
lea
push
and
inc
mov
jbe
repz
enter
or
pop
pop
cwtl
leave
nop
adc
frstor
cmp
sub
shl
cmpsb
das
stc
lret
dec
movsb
repz
pushf
ss
and
dec
insl
jbe
repnz
stos
loope
jno
push
aam
push
pop
mov
in
out
push
hlt
lret
cmp
repnz
and
je
lods
adcl
mov
pmaddwd
cmp
scas
icebp
es
test
fdivs
mov
lcall
xchg
push
cmpsb
lret
or
push
jge
sbb
cmp
dec
sarl
mov
imul
scas
pop
ds
repnz
push
in
and
mov
mul
add
fisubl
xchg
push
cld
mov
push
cwtl
loop
and
adc
mov
xchg
mov
pop
and
or
xchg
rorl
cmpsl
add
xor
sub
add
insl
xor
stos
in
mov
mov
xor
popf
jbe
daa
pop
add
or
mov
shlb
sbb
outsb
sbb
fidivs
sub
sbb
inc
lods
push
mov
mov
jb
jge
xchg
xor
mov
jmp
push
sbbb
je
jb
fs
or
imul
loope
aas
cmpl
ret
cmp
in
imul
sbb
nop
sbb
adcb
inc
cmp
mov
fmuls
jnp
adc
pop
sbb
cmp
sub
xor
fsubp
mov
icebp
push
xchg
fcoms
mov
mov
std
test
idivb
ror
aad
notb
inc
add
inc
out
xchg
xchg
dec
out
push
sti
mov
sbbb
ret
addl
loope
cmp
insb
or
insl
mov
flds
fwait
pop
popf
xorl
sbb
out
cmp
inc
mov
pop
cli
xchg
mov
bound
mov
jae
inc
dec
xlat
mov
mov
je
insb
sub
and
sbb
daa
ds
pop
mov
mov
sub
lret
add
xor
out
mov
inc
mov
jo
out
leave
xchg
lcall
insb
in
jb
hlt
sbb
cld
xor
out
in
and
sub
fisttpll
jge
dec
into
dec
mov
jbe
jg
insb
pop
xchg
ss
pop
rcr
cld
rclb
adc
out
mov
insb
pop
pop
sbb
push
lahf
lcall
dec
cmc
mov
mov
jnp
aad
mov
or
mov
sub
scas
adcl
xchg
or
push
sbb
cmpsb
lcall
add
icebp
push
sub
call
or
and
dec
xchg
lds
xchg
fs
jg
out
push
adcb
sub
dec
push
in
mov
les
dec
push
repz
jle
ss
lds
insb
stc
cwtl
mov
add
test
xchg
daa
call
repz
push
ss
mov
inc
test
inc
sub
mov
lods
sub
lahf
adc
aad
insb
jnp
and
mov
clc
and
sub
fidivs
in
add
push
xchg
test
xor
ljmp
pop
test
pop
cmp
loop
aad
push
cmp
xchg
dec
data16
mov
sub
fmulp
push
mov
jg
or
pavgw
mov
cmpb
inc
movsl
addr16
jns
xor
lock
test
negl
leave
mov
mov
sbb
stc
popf
mov
call
mov
pop
push
adc
and
pop
dec
cmp
mov
scas
xchg
es
out
jae
cmp
loop
mov
loop
sbb
cmp
loopne
loop
int3
dec
and
xchg
jge
jl
sbb
jl
ljmp
pop
repnz
jae
ficoms
and
loop
xor
push
mov
outsl
pop
fstp
push
in
pop
out
clc
test
orl
add
int
sbb
lds
popf
pushf
inc
xchg
fmull
mov
ficoml
add
cwtl
adc
push
sarb
mov
test
jp
cmp
jns
cmp
fistps
ljmp
jp
out
pop
add
xchg
lock
repz
shll
push
inc
adc
add
pop
pop
pop
push
mov
inc
xor
jg
fnstsw
cmp
sahf
in
dec
add
adc
xor
dec
cmpsl
inc
inc
push
ljmp
cld
mov
ret
xor
les
adc
push
sbb
cmc
jns
push
pusha
inc
shlb
xor
callw
insb
push
adc
xchg
cmp
jae
in
out
and
mov
inc
cli
aas
inc
sub
test
dec
jmp
fsubs
xor
and
lods
daa
dec
imul
jae
dec
je
xor
sub
sub
incb
pusha
popa
incb
adc
lds
push
mul
fcompl
nop
mov
mov
stos
leave
xor
les
aam
lods
loop
inc
push
add
jne
inc
daa
mov
bound
pop
jmp
pop
mov
fsubl
adcb
adc
jne
out
repz
mov
adc
cmp
inc
inc
out
jne
push
les
shll
je
cli
fsts
repnz
push
mov
xchg
lea
ja
cli
stos
arpl
rclb
sahf
or
fcmovb
or
outsb
in
or
sub
sbbb
jl
mov
adc
fidivs
pop
fwait
mov
mov
pusha
fstp
add
mov
cmp
ret
push
add
sbb
js
jecxz
insb
and
jle
insb
and
out
outsl
adc
xchg
pop
sub
cmpsl
loopne
cmp
sbb
or
add
dec
xchg
aas
clc
add
sub
push
lahf
and
insb
inc
dec
push
loope
shl
inc
inc
mov
dec
push
gs
cmp
xor
imul
push
push
dec
ret
fnsetpm(287
pop
mov
enter
push
lods
stos
mov
push
jecxz
outsb
pop
icebp
test
out
lahf
lcall
lock
cmpb
xchg
push
xor
mov
outsl
stos
xor
les
in
imul
and
push
mov
imul
insl
add
cmpsl
mov
jl
mov
cmp
addl
jnp
in
sub
sahf
cs
jo
xor
jb,pn
std
shrb
popf
shlb
sub
pop
test
dec
fistl
es
pop
roll
mov
add
mov
xchg
jecxz
test
in
arpl
fsubrp
movb
mov
bound
jno
cltd
add
adc
data16
mov
inc
fidivs
xor
push
insl
fsubrl
inc
jb
xor
pushl
fildll
aaa
imul
sbb
fs
stc
bound
in
fistpll
pushf
mov
pop
sbb
xchg
imulb
pusha
mov
insl
repz
cs
loopne
fidivrl
inc
jbe
inc
push
imul
outsb
ljmp
sbb
sub
addr16
and
inc
stos
sub
mov
cltd
bound
mov
int3
inc
inc
flds
stos
enter
jns
pop
cwtl
in
testl
lods
gs
in
stos
jp
aam
jp
mov
sub
or
imulb
cmp
cmp
push
xchg
in
iret
xor
xchg
test
out
inc
je
cmp
test
cmpl
jle
je
adc
in
iret
stos
xor
ds
sub
xor
aaa
ficompl
lahf
stos
adc
test
add
arpl
lret
jmp
cltd
fsubrl
int3
pop
sub
cmc
jge
pusha
jl
cmc
scas
xor
sbb
mov
jns
sbb
cmp
js
mov
popf
jno
addr16
ret
sarl
scas
jmp
cmp
inc
imul
sbb
adc
daa
xchg
cmp
jo
add
dec
scas
out
jb
cmp
mov
cmp
or
push
jae
mov
fwait
loopne
test
mov
add
pop
lock
or
jae
addl
inc
add
sti
jmp
enter
js
cmp
jecxz
adc
inc
jl
xchg
fimuls
lahf
lret
cld
inc
fisubrl
dec
dec
jns
xchg
test
or
notb
mov
ss
cmp
data16
jns
jmp
fucom
dec
stos
jae
test
pop
mov
inc
daa
leave
inc
adc
fdivl
gs
jae
push
js
test
in
dec
adcb
jns
pop
and
lods
mov
adc
jno
or
call
data16
scas
insl
sub
sbbl
mov
push
add
xchg
jb
mov
incl
adc
and
push
pop
in
sbbl
fcompl
push
out
cmp
loop
mov
int
pop
push
stc
jg
popf
ffreep
push
and
mov
fisttps
jmp
mov
call
mov
push
cmp
scas
pop
das
jae
mov
nop
popa
in
mov
pop
adc
sbb
adcl
test
push
pop
pop
sbb
inc
and
ds
orl
and
inc
xor
fs
icebp
or
in
add
lret
int
sub
lods
movsb
stc
or
in
sbb
dec
mov
std
idivb
or
xchg
add
jle
sti
pop
xor
sub
pop
movsl
push
inc
sub
adc
cmp
sub
jno
mov
les
daa
adc
xchg
int
fisubrs
in
test
push
lods
popa
dec
std
jle
jbe
andl
push
and
mov
aad
xchg
imul
daa
lret
stos
jge
test
bound
clc
inc
mov
adc
pushl
fnstsw
bound
push
cmp
push
out
outsl
test
dec
jl
aam
xchg
mov
in
xchg
call
inc
jecxz
mov
xor
popa
xchg
mov
out
mov
adc
in
ficoms
mov
stc
mov
xchg
or
cmpsb
stos
xchg
mov
cmpsl
jg
arpl
js
xor
push
fucomip
rcrb
or
sub
cltd
inc
sbb
das
cmp
cmc
push
stos
test
cltd
sub
pop
fstps
sbb
stos
jmp
pop
xor
dec
and
push
and
add
sub
add
dec
fildl
in
enter
jns
out
sbb
loope
jg
or
int
cmp
imul
jge
sahf
mov
jne
and
mov
pop
scas
dec
and
mov
das
daa
lahf
xor
dec
frstor
dec
aam
sub
or
adc
jo
sub
bound
test
loope
jae
jg
push
mov
js
das
popa
mov
es
test
xor
icebp
in
dec
ds
push
push
inc
ja
in
pop
pop
sub
jne
push
cltd
fcom
cs
dec
mov
les
mov
mov
and
shlb
je
push
daa
inc
popa
add
push
push
xchg
sbb
iret
shll
sub
inc
dec
pop
fimuls
xor
add
addr16
jno
lcall
jb
dec
ret
scas
rcrb
std
jmp
ror
mov
adc
jg
or
or
mov
fisttpl
mov
stc
fimuls
lods
lock
pop
mov
jmp
cmp
fstpt
je
xor
jae
mov
add
cmp
notl
mov
fdivrp
xor
xor
sti
jo
test
adc
call
test
dec
sbb
push
jle
stc
fsubrl
jo
inc
xchg
and
out
gs
mov
push
ret
xchg
shll
mov
cmp
mov
xchg
mov
test
test
les
mov
mov
lcall
jle
ss
in
xchg
rorb
std
lea
sub
pop
add
popa
bound
add
out
mov
adc
icebp
in
adc
nop
in
pop
scas
adc
fs
sub
xchg
ja
mov
mov
nop
mov
jo
push
sarl
aas
call
add
mov
xchg
lret
iret
sub
or
out
or
stc
rclb
mov
stos
cmp
into
rcrb
inc
sarb
mov
push
les
nop
shl
mov
mov
pop
cmp
sti
aam
cmpsb
ret
in
loopne
push
arpl
aam
js
jge
icebp
inc
mov
mov
sbb
push
add
jae
lods
clc
test
push
cs
stc
arpl
outsb
push
repz
fcompl
mov
push
mov
ss
jl
mov
clc
jmp
sti
arpl
flds
cmpsl
lock
pop
xlat
test
fxch
faddp
sbb
pop
loope
jbe
in
fwait
add
stc
pushf
sub
sbb
cmp
push
inc
scas
push
or
or
out
movsb
and
adc
pusha
pop
mov
adc
movsl
nop
xor
cmp
inc
lret
xor
ja
lcall
aad
mov
lret
or
js
add
out
out
lds
out
cmp
daa
push
in
notb
adc
ljmp
push
lods
iret
fwait
mov
popa
std
jo
and
or
dec
aaa
adc
jne
insl
das
cmp
idivl
call
idivl
nop
scas
sahf
rcrl
outsb
mov
js
in
out
clc
sbb
hlt
mov
loop
rcl
rorl
cmp
je
fst
mov
int3
les
dec
dec
sub
out
or
pop
dec
mov
jae
das
repz
mov
cli
data16
mov
xor
cmpsl
add
and
out
insb
push
sahf
pop
dec
test
dec
dec
imul
jbe
pushf
add
ret
mov
lret
or
inc
mov
mov
lret
adc
and
add
or
faddl
cmp
cmp
out
sub
dec
xor
mov
or
shl
xchg
mov
bound
incl
dec
inc
push
jmp
mov
fistps
mulb
repz
cmc
jp
daa
inc
sub
std
and
push
mov
add
pop
stos
pop
icebp
addr16
cmp
and
out
adcl
jle
cmp
in
cmpsb
imul
ret
xlat
lods
xchg
sub
lret
xor
divb
xchg
es
pop
leave
inc
js
lods
sldt
jb
and
pop
add
xor
jmp
std
jl
jp
mov
aaa
adcb
repz
pop
and
jae
sti
xor
jae
lea
insb
or
mov
push
xor
ficomps
mov
loopne
gs
lret
jp
and
scas
inc
scas
ficoms
xchg
or
loopne
cwtl
push
int3
adc
mov
push
mov
xor
push
adc
pmulhuw
jne
lods
cwtl
mov
xor
bnd
std
js
out
jno
jmp
lea
ss
jmp
mov
out
sub
xchg
fisubs
pop
sub
imul
adc
push
dec
cs
mov
hlt
cwtl
inc
lea
sbb
in
frstor
lds
mov
movsl
mov
test
push
inc
aad
inc
fwait
mov
inc
jmp
cwtl
out
lock
into
sbb
sbb
xor
std
decl
movb
inc
pop
fmuls
dec
xor
mov
je
addr16
mov
out
pop
addr16
arpl
fisubs
popf
ss
insb
ret
sbb
dec
ss
fdivrs
je
mov
or
adc
ds
sbb
mov
mov
or
mov
das
aad
mov
std
repnz
insb
hlt
nop
xor
inc
or
faddl
xchg
es
fstp
out
out
bound
push
ds
push
jp
cmpsb
enter
es
pop
fnsave
out
lret
popf
cmc
subb
aam
outsb
movsb
pop
and
test
stos
lods
jl
arpl
arpl
dec
cli
cmp
inc
in
xchg
sub
mov
outsl
movsl
aas
enter
sbb
xchg
mov
mov
iret
out
mov
cld
or
lock
push
les
and
jl
mov
cmp
lcall
sub
jns
lock
jge
cmc
rol
lahf
push
lret
mov
jne
mov
sarl
lds
push
cmc
cmc
enter
xchg
push
test
pop
addr16
push
out
xchg
add
inc
sbb
jmp
dec
addr16
pop
outsl
lods
mov
push
push
sbb
js
lret
lods
dec
mov
cmpsb
daa
cmp
mov
and
movsb
add
clc
jb
inc
pushf
or
push
out
test
pop
mov
jg
sub
mov
mov
jne
mov
jno
mov
jle
pop
mov
xor
dec
lret
sbb
add
pop
push
pop
pop
mov
push
xor
and
mov
or
fisttps
outsl
in
inc
mov
imul
dec
aas
push
cmp
sarl
movsb
xchg
aam
xchg
and
cmpsb
addr16
in
mov
dec
lea
jne
mov
bound
into
mov
ja
add
sub
xlat
lods
dec
mov
call
out
sub
lcall
lret
sub
xchg
out
mov
and
movsb
ds
cmp
int
push
jle
mov
nop
cmp
movsb
jo,pt
ret
jns
mov
dec
dec
icebp
lods
jecxz
sub
decl
dec
adc
loopne
or
mov
scas
or
jne
mov
les
mov
inc
scas
gs
sbb
bound
mov
loop
or
or
cmp
fcoml
clc
andl
movsl
out
hlt
loope
jb
xchg
lret
aas
aas
push
int
sbb
sub
stos
pop
shrl
shll
mov
out
push
push
nop
ret
or
mov
push
stos
xor
push
insl
or
int3
mov
ss
movsl
adc
stc
out
arpl
xor
stos
pop
loop
add
mov
mov
mov
aaa
mov
fsubp
sbb
mov
pop
push
flds
rolb
js
xor
icebp
es
jecxz
loop
mov
adc
je
loopne
push
imul
push
pusha
imul
push
fisubrs
lahf
add
or
xor
dec
sub
es
xchg
ret
pop
xchg
ret
cmp
cs
and
movsl
inc
stos
mov
mov
push
ja
cmc
imul
and
pusha
loopne
push
mov
jns
mov
pop
idivl
outsl
stos
into
sub
ficompl
lea
mov
sbb
inc
xchg
insl
popa
or
pop
cmp
xchg
xor
aad
push
push
xchg
inc
insl
jne
jne
add
push
orl
sti
and
pop
test
mov
aaa
xchg
and
inc
mov
mov
sbb
dec
adc
fcmovnbe
push
add
in
or
es
jne
lea
sbb
int
orl
mov
pop
into
jb
into
sub
lret
cmc
nop
call
out
dec
in
add
xchg
xchg
jnp
adc
sbb
xchg
lahf
mov
cmp
cmpps
jns
aam
dec
mov
inc
push
popf
dec
pop
xchg
push
jb
sahf
dec
out
mov
dec
sub
and
fimull
fld
inc
inc
and
mov
movsl
dec
cmp
js
stos
dec
xorb
lock
adc
xlat
test
dec
fildl
aad
out
mov
shll
outsl
dec
pop
pop
sahf
sbb
das
loopne
lock
pop
pop
cwtl
daa
adc
lret
test
call
inc
cmp
add
pop
xchg
cmp
inc
jae
sub
push
push
push
popf
fistpl
sti
adc
and
adc
inc
push
das
shlb
dec
sarl
push
movsb
test
imul
and
mov
jne
inc
cmp
jp
je
push
mov
mov
cmc
in
js
pop
imul
setge
and
mov
or
jecxz
dec
lcall
shl
movsl
mov
cmp
inc
mov
adc
mov
dec
mov
jmp
pop
or
mov
mov
test
fwait
mov
push
pop
sbb
pop
mov
test
push
cmpsb
push
dec
or
fsubrs
adc
filds
push
roll
xchg
loopne
mov
xchg
dec
nop
jle
ss
or
and
ret
testl
sub
xor
adc
nop
push
lea
int
andb
jbe
inc
ja
std
mov
cmp
ret
inc
aam
aad
jns
pop
lret
testl
or
data16
push
lods
fldcw
in
loope
mov
push
mov
mov
popf
int
inc
mov
or
mov
sub
fsubrs
sbb
adc
dec
add
dec
lahf
cmp
sbb
sub
mov
repnz
rcr
xchg
xchg
ds
mov
jmp
iret
push
push
fldenv
jle
xlat
nop
outsb
mov
jecxz
push
loopne
iret
cmpsl
aam
adc
sti
call
test
test
mull
movb
fcoml
movsl
movsl
sub
jbe
loopne
rcll
jp
jne
dec
lret
and
jnp
cmp
xchg
out
sub
repnz
icebp
inc
das
cwtl
mov
roll
lea
add
jmp
mov
xchg
jmp
je
push
push
xor
cmp
imul
push
insl
mov
jge
dec
dec
inc
sub
push
loop
dec
popa
or
lea
nop
in
jp
mov
clc
sbb
into
movsl
aad
movsb
dec
cmc
mov
xchg
daa
cmp
ss
pop
aaa
or
inc
bound
clc
mov
popa
sahf
sbb
nop
addr16
jg
sbb
dec
fistpl
stos
test
push
xor
roll
insl
aam
in
out
lcall
jmp
mov
in
daa
incb
clc
mov
sbb
mov
stc
jg
aam
cmc
inc
jae
pop
inc
sub
pop
mov
hlt
jp,pn
jbe
int3
pusha
or
and
nop
xor
push
in
mov
cmp
mov
data16
push
jno
lds
icebp
jno
loope
lea
les
jl
mov
adc
rol
push
orl
stos
enter
sbbl
movups
jmp
nop
ret
xor
cli
repz
pop
ret
je
aaa
cmpsl
pop
pop
in
mov
insb
andl
std
aas
shlb
lock
lds
int3
xchg
and
xchg
lods
sub
jae
mov
add
and
out
mov
xchg
jno
mov
xchg
inc
cmp
fs
test
inc
lret
or
inc
les
pop
fistps
clc
repz
xor
xchg
inc
xchg
dec
out
loope
xor
jb
xor
jno
int3
shrb
mov
jmp
mov
mov
icebp
sbb
mov
divb
lahf
aas
pop
push
cltd
dec
and
std
idivb
in
jo
shll
jns
pop
out
lods
pusha
jae
popf
mov
jbe
hlt
mov
jmp
cmp
test
mov
aam
dec
xrelease
imulb
jb
stos
sti
push
out
clc
pop
mov
jecxz
repnz
lret
pop
push
add
adc
mov
pushl
shlb
push
test
int3
jno
pop
xchg
pop
inc
pop
jbe
aam
add
inc
lock
outsb
sub
or
test
dec
cmp
xchg
movsl
jp
cmpb
sub
mov
inc
pop
pop
pushf
jge
jp
lds
xchg
loop
fstps
mov
lds
out
push
push
add
js
rcrl
scas
std
xchg
push
imul
mov
dec
mov
mov
pop
xor
sbbl
lahf
jge
sub
jp
sbb
pop
mov
lret
imul
idiv
jbe
test
sub
push
int3
das
jae
rclb
ret
enter
mov
push
dec
repz
xchg
jmp
aam
jl
movsl
push
lret
pop
mov
sbb
ficoml
pop
in
pushf
in
lret
cmp
mov
xlat
ficomps
sbb
sbb
jl
fsubp
loopne
jle
int3
fmuls
xor
adc
js
mov
shrl
dec
and
xchg
mov
fidivs
cwtl
or
inc
notl
inc
into
ds
sbb
add
or
xchg
lahf
aad
cmp
and
cwtl
fcompl
into
push
mov
mov
pop
push
jmp
jg
bndstx
outsl
in
scas
add
inc
shll
mov
mov
pushf
jns
subl
push
jp
add
int3
adc
mov
lock
jnp
rcrb
add
jle
and
shr
inc
icebp
dec
lock
or
mov
jb
ja
and
mov
push
hlt
xchg
push
mov
or
cld
aam
loopne
cmp
xor
mov
rcr
loope
in
sahf
jns
push
ljmp
inc
xor
cmp
sbb
cmp
into
sbb
xor
outsl
scas
inc
mov
aam
lds
outsl
and
call
push
and
mov
pop
clc
mov
add
test
popa
jo
aas
es
stc
dec
nop
aad
lock
jnp
and
mov
data16
cmp
lods
aaa
jne
mov
je
or
pop
ret
scas
dec
andb
hlt
cwtl
mov
dec
je
jo
push
sbb
aaa
in
cltd
mov
sbb
mov
xchg
sar
sti
lea
fucom
vsubpd
and
push
jecxz,pn
addr16
adcl
mov
pop
pop
sbb
cltd
or
xchg
jl
mov
shll
jno
jmp
loope
pusha
xchg
and
xor
sbb
or
xchg
mov
sbb
xor
mov
mov
cmpb
mov
cmc
xchg
cmpsb
inc
mov
add
mov
fs
pop
mov
xchg
fbld
dec
jb
rcrl
dec
jl
cmp
test
pop
cmp
jecxz
mov
sbb
lods
fprem
jp
ret
dec
loopne
ds
mov
and
les
and
ljmp
or
xchg
add
xor
jg
mov
lds
jg
dec
push
insb
push
ja
push
scas
and
push
jmp
aad
push
push
subl
ds
and
mov
ret
js
inc
andb
push
shlb
sub
test
pop
repz
and
cli
pop
dec
outsl
jbe
push
psubusb
adc
inc
xor
shrb
inc
sbb
push
loopne
xor
jmp
clc
call
fcompl
rolb
push
test
int
out
or
inc
pop
pop
mov
pushf
rolb
push
jne
jl
or
dec
sbb
jbe
inc
mov
jle
div
mov
pushl
in
lods
xor
ja
frstor
ret
jge
sub
mov
jl
pop
fsubs
cli
add
add
xor
lahf
lcall
push
out
xchg
jmp
jl
mov
cld
mov
addr16
movsb
and
mov
mov
insb
xor
inc
push
adc
add
cmc
test
in
add
int
or
mov
bound
ljmp
addr16
fwait
jnp
pushf
add
sbb
in
jne
int
pop
leave
int3
xchg
fbld
frstor
ret
add
ret
dec
inc
les
stos
imul
jne
xchg
vmovlps
shll
fstpl
cli
fcoml
sub
fisubs
xor
mov
jle
and
mov
lock
jno
fs
arpl
fsubl
sbb
ficompl
ficoml
arpl
xchg
out
xor
lods
cmpsb
imul
insl
add
pusha
pop
and
fistpll
xchg
repnz
scas
inc
adc
push
pop
inc
xor
popf
fmulp
divl
push
mov
jno
leave
fwait
inc
mov
les
popf
bound
mov
pop
xchg
dec
test
mov
cmp
dec
fsubs
cmp
add
add
jle
scas
jp
push
ret
mov
dec
dec
mov
or
push
dec
div
aas
xchg
and
test
pandn
popf
call
push
add
adc
sub
jae
push
add
fsubs
lret
dec
sahf
sub
jno
mov
mov
aas
loopne
inc
out
pop
cltd
jmp
fcoms
adc
jl
fcompl
mov
outsb
adc
cld
fidivl
jle
cmp
pop
jl
jle
mov
sbb
sub
movsb
or
jmp
pop
xchg
pop
fcomps
or
subl
jle
add
movsb
rclb
jmp
mov
adc
lods
psubusw
dec
out
pushf
cld
in
xchg
adc
dec
add
jl
cmp
and
cmp
and
jbe
cmp
pop
sbb
cmp
mov
sub
inc
clc
xor
sbb
sarl
outsb
cmp
daa
int3
nop
lock
pop
jae
bound
imul
dec
scas
les
or
lea
xorb
sbb
movsl
int
imul
inc
je
cmp
cs
hlt
int3
or
jmp
adc
mov
or
jns
lods
jnp
cli
cmpsl
xchg
sti
cmc
aaa
mov
shrl
js
fwait
mov
inc
scas
or
pop
add
nop
in
out
das
in
jle
mov
punpckhdq
jbe
push
mov
sahf
aas
mov
dec
and
iret
pop
int
cmp
mov
int
sbbb
add
popa
lods
mov
inc
ljmp
adc
inc
push
test
jp
into
or
push
test
and
push
add
arpl
xor
jb
mov
fcoml
ret
push
xorl
outsb
push
mov
add
or
das
pop
outsb
iret
and
ret
mov
fmull
gs
dec
and
lahf
hlt
addr16
xlat
insb
dec
dec
out
adc
iret
adc
adc
inc
hlt
xchg
xchg
xor
cmp
lods
cmp
xor
arpl
imul
jp
mov
movsb
clc
and
inc
data16
icebp
stc
add
xchg
sbb
xchg
js
add
jo
pop
ljmp
ret
imul
jae
push
outsl
and
pushf
jmp
mov
mov
dec
cwtl
int
subl
int
ljmp
into
pop
inc
pop
inc
icebp
shr
jo
dec
scas
lret
jbe
adc
loope
ret
cmpsb
mov
std
loope
ds
mov
dec
mov
cs
test
mov
cmc
nop
mov
mov
mov
fwait
cmpsl
test
stc
repz
pop
inc
mov
lcall
testl
and
test
pop
mulb
add
shll
insl
mov
mov
xor
cltd
push
out
mov
imul
test
mov
test
or
out
cmc
lret
jg
xchg
sbb
cwtl
and
cltd
xchg
gs
stos
shl
xchg
dec
ffreep
test
fcompp
mov
mov
mov
repnz
icebp
divl
adc
sub
cltd
cmp
inc
das
sti
xor
cltd
out
sarb
sti
push
jns
fmulp
push
adc
pop
and
mov
lock
xor
or
xor
lahf
pop
clc
lret
mov
xchg
js
lods
and
arpl
pop
lods
leave
push
lret
seta
mov
xchg
jp
mov
into
out
push
pop
and
jb
aad
loope
jge
outsb
js
mov
push
lcall
gs
imul
cmp
pop
and
add
mov
cld
mov
cmpsl
bound
pop
add
mov
push
lahf
aas
rorl
mov
ljmp
cmpsb
mov
xlat
cli
je
jns
cwtl
pusha
test
xchg
xor
sbb
inc
ss
pop
add
add
fnstsw
rcrl
out
inc
mov
cmp
push
popa
aaa
pop
lock
mov
push
imul
mov
add
mov
push
pop
or
and
or
xchg
cltd
mov
sahf
lahf
pusha
dec
add
sbb
in
in
adc
sbb
fimuls
mov
jno
ret
pop
lret
sbb
xor
add
popf
movsl
fnstcw
cmpl
sub
aaa
dec
out
sbb
repz
inc
add
inc
mov
pop
ja
cmp
dec
fwait
xchg
ja
xchg
test
jle
sub
jb
push
cmc
into
sub
subl
pop
mov
cmp
sbb
mov
mov
push
ss
rcll
out
jbe
js
xor
add
sbb
mov
aad
adc
and
jnp
test
clc
jb
sbb
rcl
dec
dec
lds
mov
push
mov
cmpxchg
or
cmp
jns
mov
pop
xor
xor
into
push
adc
icebp
and
sub
pop
pop
xchg
shl
and
mov
mov
push
add
mov
add
addr16
sub
push
and
adc
add
cmp
arpl
call
out
sbb
or
mov
sbb
hlt
jge
sbb
ficoml
popa
mov
adc
lahf
scas
iret
fwait
sbb
lahf
mov
jg
mov
add
enter
and
frstor
iret
pop
outsb
cmc
pop
cmpsb
push
lret
cltd
out
scas
xlat
mov
in
add
mov
mov
push
sub
mov
iret
push
cmp
xchg
pop
sti
and
inc
lcall
lahf
lea
lahf
lar
std
popf
js
mov
xchg
fisubl
or
xchg
mov
add
into
xchg
fcomi
cltd
inc
in
icebp
mov
lahf
lds
jecxz
ja
lea
cmp
aam
mov
negb
pop
rcrl
sbb
stos
bound
imul
ljmp
gs
je
adc
outsb
fistl
fmull
pop
mov
mov
hlt
adc
or
xchg
in
jb
sbb
add
inc
lret
xor
je
popl
lds
jg
adc
mov
shll
dec
pop
aam
icebp
jae
push
fs
das
xor
imul
lcall
sub
js
sub
mov
roll
pop
jno
mov
movsl
xor
pop
les
fsubl
rorl
fnstenv
fcomps
jb
hlt
add
cmc
stc
mov
lods
fisubrl
ret
dec
mov
ja
ret
aad
xchg
je
jge
cli
xchg
cmpsb
out
bnd
test
mov
fs
jp
mov
add
cld
arpl
ljmp
push
gs
je
inc
pop
ret
mov
mov
shlb
pcmpeqb
adc
rcll
or
into
aaa
xchg
ljmp
test
std
rol
int3
xchg
xchg
bound
mov
faddl
sub
scas
and
jecxz
jnp
xchg
jae
adc
mov
push
inc
arpl
or
mov
aam
mov
in
mov
dec
jecxz
push
dec
push
in
in
insl
adc
lea
lods
movsb
mov
call
cmp
cmp
movsb
dec
jno
ljmp
inc
dec
into
or
punpcklwd
popf
xor
jnp
leave
daa
xchg
outsl
loopne
or
nop
sbb
sbb
sub
inc
fdivs
inc
pop
xor
or
cltd
enter
mov
cld
push
adc
sbb
out
hlt
test
and
add
inc
fucomp
jno
leave
ret
jno
pop
add
jge
push
inc
jno
lret
adc
mov
outsl
xchg
cmp
jae
lods
daa
mov
lock
enter
int
shll
jmp
shll
adc
cmc
testl
push
fadds
inc
cmp
ljmp
jnp
shl
fiadds
andb
and
cmc
dec
push
nop
imul
push
out
inc
mov
jmp
rcll
cmc
insl
leave
add
test
insl
ja
movsb
pop
lret
es
pop
and
cmpsb
dec
addb
nop
adc
fidivrs
xchg
xchg
pop
call
dec
std
mov
in
cmp
push
test
jno
cmp
xor
test
ss
sub
sbb
and
inc
jge
push
lods
dec
xchg
fs
mov
sbb
mov
inc
sahf
add
add
iret
xor
inc
out
gs
fcompl
lcall
xor
or
jae
lock
push
push
push
pop
add
jp
jg
popa
mov
mov
xlat
lret
testl
add
inc
js
add
mov
cld
adc
jl
lret
add
and
into
xor
jb
xchg
inc
imul
sbb
scas
xchg
in
daa
adc
lds
sbb
push
pop
sub
and
dec
mov
cwtl
das
insl
nop
mov
mov
xchg
sub
xchg
je
movl
xchg
dec
adc
sbb
lea
add
cmpsl
lret
cmp
xor
mov
sbb
pop
mov
pushf
movsl
or
jp
mov
or
shll
repnz
lds
mov
xchg
aaa
shrl
xchg
mov
int
push
jb
lahf
je
lret
clc
sbb
sahf
int
mov
repz
pop
fsubrl
jbe
lcall
push
or
xorw
mov
imul
inc
imul
xor
xor
mov
jns
mov
jnp
fsubs
dec
xchg
xchg
mov
xchg
cmp
in
jbe
jge
cmp
cmp
xchg
push
jnp
push
push
or
xchg
sub
pop
addr16
cmp
fwait
jge
insb
inc
mov
stos
sub
mov
movsb
inc
sbb
lret
rcl
push
fidivrs
add
pusha
dec
adc
xor
rorl
std
divb
jge
outsb
jp
les
and
sbb
dec
popa
test
movsl
addl
inc
dec
lea
push
xor
es
rolb
mov
or
and
nop
fs
popa
or
loopne
sub
test
std
or
int
dec
sahf
push
lds
sub
push
adc
enter
es
jnp
movl
push
les
in
jo
xchg
push
pop
std
fcompl
in
arpl
push
jae
ja
adc
ljmp
mov
popf
jb
enter
jo
dec
sahf
incb
movsl
jle
jne
hlt
out
or
and
sub
iret
xor
jge
jl
dec
add
daa
xor
and
icebp
fwait
cmp
jns
pushf
lods
es
pop
inc
js
push
sti
adc
addr16
mov
fldcw
inc
and
or
xchg
xor
and
js
pop
les
stos
stos
xchg
mov
jg
imul
aam
mov
jne
es
ljmp
cmp
xchg
pop
stc
dec
inc
push
jge
jno
jnp
pop
lahf
jne
daa
stc
pop
dec
dec
popf
and
add
push
or
mov
lahf
and
stos
lea
cmp
in
mov
orb
pusha
fwait
outsb
xchg
mov
fisubrs
imul
sahf
add
mov
jo
pop
movsl
cmp
sbbl
xor
imul
push
jns
lods
xchg
dec
pop
mov
mov
ret
ret
shlb
push
cmp
inc
outsb
mov
pop
add
mov
loope
movsl
xor
imul
arpl
repnz
aaa
xchg
ficomps
dec
repz
std
fisttps
dec
inc
fwait
push
jge
bound
sbb
mov
mov
sbb
sbb
jo
sub
fadds
lock
rsm
ss
ficompl
add
mov
aad
movsb
fwait
mov
loope
sub
sbb
jb
sbb
xchg
pop
rorb
nop
icebp
add
test
jmp
repz
jne
mov
pop
rcrb
dec
xor
sub
xchg
xchg
out
sbbl
sub
es
add
jmp
loope
adc
push
push
loopne
cmc
ljmp
divb
cli
out
mov
inc
enter
repnz
fs
xor
adc
mov
test
fdivr
into
mov
mov
jmp
cmp
into
addr16
int
mov
sysenter
loop
add
and
mov
lea
and
div
fs
xchg
adc
xchg
test
mov
test
jg
fwait
inc
pop
xor
dec
loope
das
mov
or
shl
fnstcw
iret
dec
inc
icebp
or
shlb
scas
test
loope
in
sub
adc
sbb
fwait
push
popf
mov
cmc
sub
fldenv
aaa
aaa
push
rcr
mov
inc
push
out
outsl
pop
mov
and
xchg
loop
pop
les
test
add
xor
cmc
fdivl
lret
sub
repz
mov
pusha
or
xchg
lods
adc
jecxz
loopne
mov
push
in
and
mov
pusha
test
mov
dec
addl
or
pop
push
lret
shr
adc
cmp
mov
mov
ljmp
sbb
into
mov
xchg
test
xor
dec
dec
adc
hlt
loope
pop
pop
js
cli
scas
mov
inc
dec
add
cmp
shlb
and
test
and
movsl
inc
adc
lahf
inc
push
rclb
ljmp
imul
cltd
push
mov
mov
test
daa
rclb
push
fdivl
and
xchg
jl
cs
push
cmc
lcall
sbb
xor
xor
arpl
aas
ja
shrb
emms
sbb
push
ja
sub
arpl
mov
xchg
push
into
jo
lcall
pop
cmc
testb
fldl
bsf
jno
lock
movsl
inc
mov
fs
sbb
in
jp
push
xor
or
jp
rcrl
add
mov
inc
in
fcoms
gs
add
imul
sub
mov
imul
orb
mov
fsubl
jecxz
ret
repnz
xchg
fldenv
or
dec
popf
jge
push
jnp
mov
cs
mov
loop
aaa
mov
fimuls
jae
or
cmc
push
cmpsl
stos
and
xor
xor
ljmp
or
add
xchg
lcall
popf
cli
scas
xchg
in
and
test
inc
int
mov
xorb
xor
xchg
xor
mov
les
xchg
push
jno
fisubl
loopne
aas
lock
jb
pop
adc
pusha
push
cltd
fcmovb
aad
in
push
lcall
jl
mov
sbb
jl
pusha
jcxz
sbb
in
repz
pop
mov
cmp
je
mov
add
rcl
push
popl
push
popa
push
pop
pop
int3
sub
mov
xchg
mov
and
daa
orb
pop
push
xchg
sbb
test
xor
lods
rclb
fmul
mov
inc
xor
test
sub
or
xchg
jb
jno
and
adc
ds
movsb
leave
or
clc
pushf
sahf
out
bnd
mov
fnstcw
dec
cli
ja
scas
sub
dec
sub
push
andl
or
dec
bound
popf
adc
popf
inc
xor
inc
mov
mov
pop
jg
std
mov
cmp
mov
mov
imul
dec
adc
repz
fs
movsb
xchg
jl
ficoml
mov
loop
insl
rcrl
mov
popf
and
adc
mov
lret
xlat
mov
sbb
and
aas
mov
imul
push
xchg
test
sub
ja
dec
dec
icebp
jno
mov
sbb
mov
push
fnstsw
pop
sub
loopne
mov
add
insl
sub
lret
out
insl
xchg
xor
jno
sbb
in
and
mov
mov
jg
and
cmp
jmp
jnp
xchg
mov
lds
pop
je
addr16
pushf
rorl
pop
addl
mov
jmp
jnp
out
jecxz
jp
rcl
sbb
pop
stos
jle
or
mov
push
fsubrl
xchg
xchg
sub
add
int
mov
shlb
ss
icebp
test
lcall
imul
push
ja
or
adc
sub
mov
xchg
dec
les
inc
mov
jae
xor
ss
xor
in
lock
xchg
push
in
xlat
xlat
jmp
ja
adc
jp
cltd
dec
adc
cld
push
mov
nop
jg
mov
xor
inc
or
aad
sub
add
call
clc
cmpsl
mov
subl
mov
and
and
and
jno
fwait
movb
std
mov
xchg
xchg
push
movsl
xchg
movsb
into
test
sahf
iret
cli
pop
sub
pushf
cs
jecxz
mov
daa
dec
pop
jmp
inc
mov
fwait
jmp
sub
pop
jnp
pop
sub
fwait
mov
push
mov
ja
adc
xchg
add
fsts
out
mov
sti
xor
xchg
mov
paddq
imul
jbe
cld
cmp
xchg
fwait
and
cwtl
inc
fs
gs
pop
dec
push
sti
pushl
mov
push
add
add
sub
adc
mov
push
mov
mov
push
sub
mov
clc
in
mov
ljmp
cld
inc
push
popa
jnp
inc
js
fs
push
aaa
inc
daa
adc
xchg
cltd
sbb
aaa
js
xor
jb
push
pusha
pop
xor
adc
mov
mov
je
mov
mov
mov
adc
les
sub
and
arpl
insl
push
test
imul
pop
xor
or
movsb
xorb
loop
mov
dec
sbb
fcomip
xor
sbb
in
sub
test
movsl
mov
or
in
les
mov
or
aaa
jae
mov
sbb
std
lret
lcall
jecxz
call
cmp
pop
or
mov
cmc
dec
insb
sbb
jne
mov
loope
pop
fistl
int3
lcall
jns
adc
ss
fimull
cmp
fidivs
lcall
icebp
jb
ja
xchg
mov
aas
xchg
and
or
arpl
and
es
pushf
fimuls
faddl
lahf
pop
lock
jae
pop
mov
or
mov
push
cmp
add
or
inc
mov
aas
iret
cmp
xchg
orl
mov
jne
gs
cmp
mov
inc
push
imul
lret
pop
adc
aas
sahf
int3
xor
data16
idiv
or
adc
icebp
in
les
hlt
in
push
hlt
movsb
dec
xorb
mov
clc
sub
arpl
addl
mov
adc
mov
and
stos
push
cmp
addr16
decb
pop
cmc
test
mov
add
shrb
jp
pushf
ljmp
mov
jg
ret
in
or
add
xor
les
or
ljmp
xor
inc
aaa
sbb
das
mov
loopne
nop
sbb
push
out
add
cmpsl
inc
sahf
jnp
mov
mov
les
ss
xchg
cld
mov
dec
aas
inc
clc
mov
inc
fidivs
cmp
sbb
cmp
dec
xchg
pop
flds
pop
xor
or
pusha
popf
jle
add
into
jae
stos
adc
dec
dec
xchg
jae
mov
sbb
and
int3
test
push
mov
cmp
int
push
push
dec
daa
leave
rclb
cmp
or
or
mov
aas
push
stos
cmp
inc
bnd
push
jbe
ss
inc
mov
bound
shll
repz
or
or
mov
aas
pop
add
imul
loopne
mov
lcall
mov
loope
mov
dec
cmp
push
inc
pop
pusha
mov
mov
movsb
mov
mov
clc
inc
add
movsl
nop
jecxz
add
lret
movsl
enter
aad
mov
ljmp
ret
stc
stos
mov
mov
js
and
sub
jbe
sti
hlt
jge
sub
enter
mov
aas
hlt
gs
mov
adc
sbb
push
popa
into
add
inc
mov
lods
or
jo
mov
subb
in
test
ret
push
out
outsb
cmp
pop
enter
sti
jnp
xor
cli
jns
sbb
adc
cmp
adc
rcl
aad
dec
lcall
inc
push
icebp
scas
adc
mov
mov
outsb
icebp
repz
mov
ldmxcsr
mov
jge
xor
out
outsb
push
sub
scas
adc
and
sbb
faddl
fisubrl
mov
loop
sbb
cs
mov
add
sbb
cmp
jnp
inc
mov
sbb
lret
cmp
inc
sub
popf
scas
in
popf
or
stc
adc
filds
clc
mov
lds
xchg
sub
cmp
push
in
sub
sub
or
sahf
lret
push
ret
jp
push
jl
aam
xchg
add
out
repnz
jmp
xchg
icebp
and
jp
jne
push
das
xorl
rorl
mov
std
and
into
jb
scas
dec
mov
mov
cltd
mov
mov
test
jmp
inc
jo
and
adc
mov
je
sar
dec
inc
xorb
out
xchg
push
adc
roll
outsb
es
icebp
adc
loope
pop
push
pop
sbb
call
or
pop
xchg
inc
cs
test
or
pop
jp
int
popf
cwtl
push
movsb
repnz
cmpl
jns
pop
mov
js,pt
fscale
xchg
in
mov
fstpt
jle
sbb
sub
ja
je
push
inc
pop
scas
mov
fmul
pop
jnp
push
mov
outsb
xor
push
push
push
in
pushf
das
or
mov
movsb
je
sub
pop
hlt
jl
es
push
repnz
push
out
jo
xorb
popa
lcall
ret
inc
mov
or
jbe
jb
mov
enter
outsb
jmp
out
cmpsb
fcomps
mov
cmp
lock
int3
inc
push
sub
in
pop
or
mov
rcrl
arpl
int
iret
add
mov
add
sbbb
lret
or
imul
sub
repnz
mov
das
dec
push
or
push
inc
daa
aam
add
xchg
inc
les
push
nop
ss
and
cltd
scas
jns
outsl
adcl
push
and
ja
or
sar
dec
repz
sbb
gs
fsub
sti
cmpsl
dec
and
pop
popf
jno
lahf
jmp
cmp
mov
es
jle
push
iret
pop
imul
data16
in
mov
mov
das
sti
insl
ret
mov
push
test
lods
add
in
jae
adc
dec
popf
shr
sbb
imul
fiaddl
scas
push
lods
js
xchg
bnd
in
imul
sub
add
lahf
out
inc
adc
lret
xorl
scas
jae
rolb
pop
cli
add
push
insb
adc
popf
idivl
mov
pop
mov
pop
dec
stos
insl
jb
pop
or
dec
mov
mov
xor
add
imul
jne
stos
add
lret
rcl
xor
lods
cmpsb
sbb
ss
dec
sahf
or
push
sbb
nop
call
ficoml
imul
pop
lcall
push
inc
test
testl
mov
push
push
push
pop
test
mov
int
pop
repz
or
mov
out
ljmp
sub
mov
dec
popf
mov
in
sub
mov
mov
orl
mov
sbb
int
ficompl
rcll
aaa
repz
cmc
mov
xor
dec
pop
dec
sub
jbe
lret
inc
int
add
mov
mov
pop
outsl
scas
je
popl
sub
lods
adc
dec
hlt
lahf
mov
and
push
pop
cwtl
push
cld
fadds
je
push
sub
fcmovnu
xchg
outsl
stc
cmp
mov
cmpsl
fs
xchg
sub
cmp
adc
push
int
call
mov
push
jnp
incl
popa
ret
mov
cs
or
idiv
mov
lahf
cmp
daa
outsl
shrb
mov
mov
in
in
add
push
mov
stos
jbe
fiadds
push
sub
call
and
pop
push
loop
shll
push
fmull
pushf
sti
and
mov
adc
cld
bound
cld
xchg
stos
gs
push
mov
subl
adc
jno
out
add
cmp
gs
clc
sub
mov
cmp
cmp
jbe
insb
repz
mov
mov
pop
mov
test
add
loope
in
cmpsb
xchg
dec
or
daa
mov
dec
ljmp
ret
jbe
out
adc
rcr
jbe
mov
cmp
ja
inc
popa
mov
aam
into
into
popa
rcr
fmul
nop
dec
popf
arpl
fmul
pop
sub
push
cmp
dec
aad
push
jmp
jle
cmp
dec
insb
add
fwait
lods
mov
fldt
push
je
dec
popa
mov
scas
ret
mov
les
fstpl
enter
jno
iret
stos
sub
cmp
mov
and
aam
or
xor
rolb
xchg
xchg
hlt
ja
jle
sub
cmp
ja
sbb
push
sub
addb
imul
lods
or
pop
push
dec
aad
addr16
xchg
cwtl
jmp
mov
fs
jnp
push
mov
add
mov
adc
cmp
mov
out
add
push
pop
in
push
ret
or
cltd
jle
mov
repz
mov
jmp
adc
or
repnz
and
mov
imul
gs
sub
bound
call
xchg
icebp
adc
mov
xchg
push
adc
sbb
pop
mov
out
dec
inc
or
lods
sbb
mov
hlt
add
dec
or
jbe
test
lret
xchg
icebp
jg
jg
fidivrl
xchg
jmp
in
dec
imul
jp
loope
jo
jg
xchg
xor
shlb
push
aas
mov
insb
loop
jns
out
mov
sub
lds
ss
and
jbe
int
or
es
loopne
rcrl
fstpl
adc
mov
push
jmp
inc
push
repnz
rolb
scas
jmp
fwait
push
sti
outsb
adc
mov
ljmp
lahf
js
mov
repnz
lea
adc
xchg
push
xchg
adc
mov
sbb
insl
xchg
mov
dec
lret
lea
xor
fmull
jmp
inc
pop
mov
push
orl
roll
adc
gs
dec
and
aas
lea
je
add
push
sarb
pop
flds
xor
repz
sub
inc
aad
xor
jnp
mov
insl
in
add
mov
inc
nop
push
mov
sub
jmp
inc
enter
mov
out
pop
ret
mov
pop
push
int3
movsb
mov
xor
insl
lcall
sti
gs
adc
xchg
mov
cmpb
xchg
bnd
sti
mov
and
xchg
push
test
mov
stos
in
pop
int3
imulb
outsb
loope
jl
rorb
rcrl
rorl
repz
fwait
out
pop
xchg
shrb
sub
cmp
xor
daa
push
lds
outsb
jg
dec
inc
mov
jle
fsts
int
subb
pop
jne
loop
lahf
jle
mov
test
xchg
adc
adc
scas
pop
gs
mov
push
push
pop
jge
and
bound
adc
cmpsb
in
mov
test
je
mov
or
daa
mov
or
jmp
add
adc
in
shll
sub
mov
es
je
std
jns
cmp
pop
ss
test
pop
pop
ret
lcall
mov
and
aas
mov
xor
pushf
jo
cld
cmp
rol
je
out
mov
iret
stc
in
test
jae
cltd
rcll
sub
gs
outsb
mov
icebp
jae
push
gs
inc
push
repnz
cwtl
sub
mov
imul
fistl
cwtl
in
xchg
push
add
pop
jecxz
pop
xchg
xor
mov
leave
aam
in
cmp
lcall
popa
xchg
shlb
dec
js
jns
xchg
and
ficomps
ret
add
pop
test
adc
imulb
fs
repnz
clc
imul
scas
scas
mov
cld
mov
rclb
cmp
sub
pop
xchg
lea
test
mov
outsb
movsl
and
gs
outsb
into
fsubrp
xchg
mov
or
mov
cs
out
jne
and
jnp
loop
shlb
je
jmp
dec
scas
sub
mov
in
sarl
jae
rcrl
mov
imul
jbe
dec
mov
mov
jb
leave
pop
rcrb
int
dec
pushf
adc
mov
lods
call
xchg
mov
sub
xchg
push
fsubr
je
into
xor
test
jno
call
je
jo
push
push
enter
add
xor
lret
push
xchg
xchg
gs
push
insl
or
adc
push
and
xor
arpl
cmc
push
jo
shr
mov
nop
pop
ja
push
xor
scas
cmp
std
or
xchg
inc
lahf
or
cmpsl
pop
pop
popa
add
adc
and
inc
in
dec
int
std
mov
and
lcall
lret
imul
inc
movsb
leave
push
lcall
arpl
adcb
dec
int
ret
lret
pop
push
inc
testl
dec
mov
lods
xchg
adc
sahf
xor
ficoms
xor
jl
mov
cmp
xchg
mov
or
xor
lds
movsl
dec
jmp
sbb
enter
push
mov
xor
cmp
lods
leave
or
cli
lods
and
xor
out
mov
mov
push
xor
push
in
lods
xor
in
cwtl
lahf
jae
aam
sbb
inc
repz
xor
adc
push
xchg
inc
pop
shll
mov
push
movsb
cmpl
xor
mov
push
fists
push
das
cmpsl
popa
add
sub
imul
test
repnz
std
gs
cmp
inc
jne
jne
aas
pop
and
jg
xchg
mov
mov
jg
sub
movsb
popf
sub
push
add
jge
add
lahf
lahf
pop
int
sbb
lret
cmp
ja
mov
inc
mov
pop
clc
stos
mov
mov
or
inc
add
shll
mov
sub
jns
aam
hlt
mov
outsl
rol
mov
outsl
imul
inc
lock
scas
dec
pop
mov
pop
sbb
dec
pop
sahf
sbbb
dec
jno
adc
add
aam
adc
js
push
inc
aaa
test
sahf
testb
daa
dec
gs
loopne
and
sub
jge
shll
cmp
aas
adc
jge
jecxz
stc
leave
push
sbb
sahf
clc
addr16
inc
and
ljmp
jne
push
addr16
jo
mov
pop
cmp
xchg
dec
scas
jle
lods
push
push
btcl
adc
sub
xchg
es
lahf
mov
lods
push
in
cmc
cmp
push
cld
adc
inc
pop
mov
pop
pop
hlt
aas
stos
fisubl
jecxz
add
or
cli
mov
add
je
pop
jg
stc
cmp
dec
xchg
mov
lcall
mov
jecxz
mov
ds
cwtl
enter
sbb
leave
xchg
push
test
in
cmp
rcrb
mov
push
adc
scas
in
add
lcall
pop
jl
inc
pop
shll
outsl
movsl
or
cmp
cmp
inc
dec
out
push
or
mov
inc
jns
xchg
sub
mov
call
mov
sub
cld
adc
and
es
loopne
xor
xchg
repnz
and
out
mov
mov
arpl
cmp
call
inc
lods
xor
and
mov
lock
or
iret
loope
nop
add
push
inc
outsb
nop
xor
clc
and
mov
sbb
mul
jge
outsb
pop
lahf
ss
popf
pop
jo
loop
jge
mov
out
xchg
outsl
mov
jns
lret
insb
add
and
std
push
cltd
cwtl
pusha
jbe
out
xor
xor
enter
popf
jns
mov
xchg
push
insl
xchg
adc
mov
dec
or
mov
jae
or
ds
mov
packssdw
bswap
push
fs
paddw
hlt
xor
gs
cmc
mov
inc
stos
and
bound
mov
in
sarb
push
mov
add
aas
daa
mov
in
addl
mov
push
push
rcll
push
push
and
femms
add
dec
push
jmp
jns
pop
loop
push
sti
sbb
mov
pop
mov
scas
inc
mov
push
inc
push
cmpsl
fwait
rol
out
lods
mov
mov
cmpsl
xchg
or
fmull
pop
movsl
xlat
inc
arpl
stos
in
push
fadd
dec
mov
and
test
dec
add
inc
dec
xor
sub
mov
xor
mov
sbb
cs
cmp
icebp
mov
push
lcall
mov
or
fidivrl
je
cmp
sub
cmpsb
push
xchg
scas
add
or
scas
mov
mov
mov
arpl
gs
inc
call
bound
fimuls
xchg
test
mov
cmp
scas
mov
cld
jmp
daa
xchg
or
pusha
enter
sub
xchg
push
inc
jle
jns
mov
or
mov
scas
jnp
sahf
div
out
out
sbb
pushf
andb
xor
xchg
pop
mov
push
xchg
rorl
stos
sbb
jle
jns
sub
mov
mov
push
lock
out
push
adc
bound
out
push
inc
push
jno
sti
cmp
jnp
lods
loop
sbb
movsl
jbe
sub
testb
mov
int
std
std
pop
push
pop
popf
xor
cmpsb
push
push
js
ficoms
mov
add
cltd
add
rsqrtps
push
mov
arpl
push
jmp
jo
push
shll
loopne
jg
xchg
or
dec
adc
push
bnd
ja
lret
fsub
cmp
jno
cmp
and
aam
jp
xchg
ss
imul
mov
rcrb
mov
test
pop
dec
jmp
cltd
cmp
cmpsl
pop
aam
enter
fwait
xchg
imul
stos
fistps
jecxz
xchg
and
frstor
and
dec
push
inc
outsb
or
adc
mov
repnz
dec
daa
xor
jmp
xchg
sbb
sbbl
fbstp
mov
mov
jb
dec
lcall
ret
pop
imul
cld
fldl
movb
add
xor
adc
mov
das
repnz
adc
aas
imul
push
popf
adc
in
cmp
lret
sub
js
xchg
fisubrs
sbb
in
inc
cs
loopne
pushf
lds
call
imul
loopne
bound
mov
in
jo
jne
xchg
xor
stc
and
add
mov
jecxz
adc
adc
cmp
jbe
fld
ds
xor
cmpsb
and
pop
cmpsb
pop
movl
test
lea
cmpsb
mov
jge
xor
pop
aad
out
leave
cli
ret
loope
pop
mov
inc
cmp
aaa
test
xchg
js
out
pusha
cli
std
mov
push
and
ss
cmp
mov
adc
das
jle
std
lcall
movsl
add
dec
insl
idivl
ror
pop
sub
jbe
cmp
out
or
insl
testl
lret
jns
push
cmp
jecxz
leave
adc
inc
out
fsubl
adc
pop
out
inc
repz
aam
and
jmp
shrb
cmp
repnz
mov
mov
push
or
cmp
pop
int3
pop
jno
aaa
lock
testl
cmp
xor
xchg
cmc
leave
mov
sahf
xor
fcomip
adc
sub
rcrb
xor
pop
and
fdivrl
fisubs
xor
jo
mov
cs
or
mulps
cmp
loop
xchg
rorl
cmp
dec
ret
cmpsl
leave
aas
aaa
pop
movsl
popl
mov
pop
pop
repnz
imul
dec
stos
inc
jle
lret
mov
pop
push
je
jb
lret
add
push
cs
adc
dec
arpl
shl
gs
fsubs
stos
jl
rcll
or
or
jnp
jae
rcr
roll
jb
dec
lret
sub
shll
push
sub
cld
mov
inc
mov
enter
xchg
jno
ds
call
push
fstpt
out
clc
das
push
mov
mov
mov
popa
xchg
test
mov
fmuls
dec
outsl
xbegin
jg
jmp
push
mov
sbb
not
cmpsb
push
push
mov
jb
test
notl
pop
mov
hlt
jecxz
jmp
add
lahf
fidivrs
sbb
arpl
ret
dec
mov
or
inc
int3
pop
mov
sub
scas
mov
push
cs
gs
push
out
adcl
jmp
push
mov
pop
fwait
pop
cli
mov
sbb
bound
das
subb
ds
jle
shrb
and
arpl
mov
mov
sbb
mov
cmp
pop
lock
loopne
jmp
insb
out
inc
push
dec
fwait
pop
pop
mov
xor
add
fs
into
mov
push
xchg
aad
adc
pop
push
mov
mov
mov
inc
inc
fisubl
pmovmskb
mov
xchg
push
fsub
mov
shll
shr
pop
push
cmp
mov
add
cmpsl
daa
xor
pop
dec
shl
bound
mov
andb
push
ret
push
insl
jne
stc
rorl
sub
jmp
dec
pusha
leave
xor
inc
jmp
push
adc
pop
adc
andl
push
and
out
repnz
xor
ljmp
mov
pop
imul
push
dec
jbe
sahf
or
and
iret
inc
push
or
xchg
mov
mov
or
pop
ljmp
inc
clc
lds
leave
xorb
testl
xor
dec
and
movsb
push
jl
mov
pushf
cmpsl
mov
outsl
arpl
and
pop
inc
ret
xchg
in
adc
stos
or
jge
icebp
adc
imul
test
testl
sbb
lcall
stos
xchg
mov
jg
insb
loope
mov
rcr
dec
sub
cmc
xor
dec
jle
negb
sub
jmp
mov
cmp
outsb
repz
clts
inc
lret
xor
mov
lret
jmp
movsb
daa
lahf
ja
mov
mov
push
ret
lret
mov
lods
fimuls
in
cmp
mov
cmpsb
add
push
je
sub
std
adc
in
sbb
scas
std
loopne
mov
xor
cmpsl
idivb
arpl
outsb
jg
dec
jnp
and
xor
ret
stos
mov
mov
cwtl
add
pusha
inc
jnp
dec
aam
xchg
add
rcl
adc
xchg
mov
sub
mov
sbb
pop
mov
adc
int
adc
imul
pop
add
push
and
lret
jae
xchg
mov
push
arpl
xchg
sbb
sbb
mov
jmp
das
popa
xlat
andb
repnz
sub
push
and
lret
mov
divb
pop
push
lea
shll
mov
mov
or
cltd
and
push
out
test
addl
hlt
add
xor
mov
sti
xor
cltd
es
add
inc
ficoml
shlb
inc
adc
loop
aas
mov
hlt
int
mov
negl
call
xchg
repz
shrl
fsqrt
fwait
loopne
inc
cmp
sbb
jp
or
mov
dec
add
push
test
ja
mov
inc
ret
hlt
mov
movsl
cli
or
cmpsb
push
lods
xchg
aaa
mov
stc
mov
mov
or
ret
jp
dec
scas
test
inc
sub
dec
cli
in
loop
xor
or
pop
add
push
inc
inc
jle
mov
pop
xchg
inc
insl
sub
stos
sbbl
inc
mov
repz
scas
mov
cmc
pop
xchg
fwait
ss
mov
jp
push
sti
hlt
int3
jmp
xor
sub
movsb
push
cmp
and
enter
dec
or
jae
outsb
sbb
or
dec
jno
test
push
xchg
or
xchg
dec
jns
daa
outsb
xchg
xchg
push
fwait
xorl
inc
push
arpl
mov
push
das
dec
insl
stos
popf
dec
dec
test
lret
hlt
ret
mov
mov
xchg
dec
inc
mov
int
jo
add
in
out
jl
sbb
out
sub
xor
sub
rorb
push
call
in
shr
jecxz
jns
or
jmp
inc
adc
xor
popa
cmp
xchg
push
or
cmp
add
stos
mov
or
in
add
xchg
xchg
mov
not
pop
jno
dec
loope
ss
jae
mov
xor
mov
icebp
aas
bound
add
cmp
xor
sub
lahf
in
xchg
push
iret
lahf
lock
cld
add
and
stc
xchg
cs
jl
mov
mov
out
jp
pop
ds
lock
mov
cmp
bound
mov
adc
leave
std
and
mov
push
insb
lcall
jp
push
sub
sub
fs
hlt
cmp
in
jecxz
mov
add
push
push
pusha
xchg
cmpsb
shl
shll
fwait
lods
jg
sbb
xor
cmp
loop
xchg
cmpb
or
aas
rorl
dec
std
inc
ja
mov
sbb
push
mov
scas
xor
adc
mov
jp
insl
inc
or
inc
pop
sahf
cmp
jmp
repnz
mov
in
sub
mov
loopne
cli
sbb
rorl
out
cmp
sub
pop
or
xchg
bound
std
or
push
sbb
sbb
shll
arpl
dec
jo
mov
sub
test
mov
stos
dec
jp
cld
iret
add
orl
fwait
mov
arpl
call
sbb
fs
and
icebp
push
aam
lods
inc
push
or
adc
sub
flds
std
xlat
cltd
int
jae
dec
cmp
push
fmull
jbe
rcrl
inc
shrb
sbb
cmp
stc
clc
bound
cmp
insw
push
fsts
stos
stc
mov
pushf
mov
mov
adc
adc
inc
cwtl
jl
in
ror
xor
sbb
jge
add
cs
lcall
dec
mov
pop
ds
xor
nop
pop
fisttpl
gs
mov
sub
in
push
adc
push
les
push
js
js
and
dec
movsl
inc
mov
or
cld
insl
into
xchg
xlat
dec
jnp
jle
imul
xor
insb
xor
or
push
lret
ja
fs
mov
xchg
pop
lcall
ret
jno
icebp
imul
aam
addr16
fmull
popf
cmpsb
stos
push
mov
outsl
jbe
mov
int3
dec
dec
jno
adc
add
push
inc
clc
cmpsb
or
xchg
shr
rcll
in
xacquire
lock
pop
cld
cmp
ret
adc
sbb
es
pop
push
sar
pop
addl
jmp
inc
icebp
dec
arpl
pop
in
cli
add
mov
dec
push
rorb
lds
sbb
pop
add
or
js
movsb
int3
shrl
lret
mov
addr16
push
iret
cwtl
stos
ja
shll
mov
xor
push
insb
lsl
mov
mov
mov
cmpsl
test
call
sub
es
lds
int3
jbe
xor
jne
sbb
out
sub
xchg
push
leave
in
in
jp
std
add
inc
and
xchg
sti
push
movsb
lret
sbb
pop
jnp
lret
mov
cs
pop
sbb
out
lret
add
pop
inc
test
enter
add
addb
rcrb
sahf
lcall
lcall
popa
push
stc
mov
sub
rorb
ds
xchg
mov
cmp
test
pop
mov
add
or
insl
xchg
in
push
insl
dec
jge
adc
jecxz
jo
dec
orb
push
mov
fwait
add
sarb
repz
arpl
xchg
enter
jnp
movsl
jg
mov
orps
movsb
out
mov
push
or
cli
test
xchg
arpl
in
in
xor
pop
mov
xchg
repnz
cmc
sub
mov
stos
mov
jmp
repz
and
add
pop
mov
xchg
sbb
mov
xlat
or
leave
fwait
dec
stos
cmp
xadd
adc
fnsave
and
inc
insb
jbe
icebp
gs
sarl
adc
stc
bnd
and
rorb
push
pushf
repnz
sub
mov
sti
jecxz
xor
jns
or
sub
pop
pop
jno
dec
jge
or
test
and
mov
lret
aad
mov
loop
xchg
xorb
pop
sbb
cmp
and
lahf
movsb
inc
xchg
push
subl
sbb
or
ret
leave
outsb
rolb
sbb
xor
out
and
inc
out
jno
subl
das
sub
jne
faddp
shll
loop
pop
loopne
cmp
jg
pushl
push
sub
xorl
sti
jae
gs
dec
addr16
inc
dec
mov
test
xchg
pop
leave
pop
xchg
pop
xchg
push
shll
xlat
shlb
or
lock
nop
stos
andl
jmp
filds
xchg
imul
fisubl
mov
lods
icebp
cli
mov
out
mov
insb
shl
sub
ss
or
bswap
insl
push
das
add
adcl
jp
adc
iret
fdivrl
fstl
and
push
mov
das
pop
xlat
xor
aad
shr
pop
inc
jae
or
mov
sbb
adc
outsl
sarl
adc
scas
mov
push
mov
pusha
sti
ret
stos
das
or
push
jnp
sub
or
xchg
xor
jbe
dec
jo
in
sbb
pop
or
push
mov
jge
mov
negl
hlt
pop
cmc
js
iret
aam
shlb
push
lret
mov
push
jecxz
jnp
and
xchg
rclb
into
movsl
pop
pop
cld
and
es
dec
jae
rolb
repz
push
int
mov
rcll
mov
inc
inc
fnstenv
arpl
aas
push
incb
sub
shlb
in
sahf
into
pop
fisubrs
cmpsl
sbb
xlat
in
xchg
lock
add
jbe
pop
call
out
xchg
arpl
sbb
sbbb
orb
sahf
pop
and
mov
sbb
mov
pop
test
data16
outsb
rcrb
loop
ss
xchg
outsl
leave
jne
mov
jo
scas
mov
push
testl
cmp
cmpsl
addr16
xchg
std
scas
fcmovb
aad
in
or
inc
dec
stc
xor
outsb
sub
mov
gs
mov
sbb
pop
shrb
mov
push
bound
rorl
ss
rcll
or
pop
cmp
ljmp
xor
movsb
mov
and
ror
inc
es
stos
mov
bound
add
jg
push
movsl
addl
dec
and
aam
xlat
mov
inc
aam
dec
jae
dec
push
xor
out
lock
hlt
inc
cmp
fildl
inc
cpuid
inc
mov
mov
mov
fsubl
out
jg
jge
adc
sahf
jg
outsb
dec
cmp
lcall
ss
sbb
sub
inc
ljmp
enter
test
xchg
outsl
push
mov
pop
mov
fwait
aad
mov
and
xor
push
pop
inc
xchg
sahf
subl
icebp
enter
and
test
imul
and
mov
pop
outsb
imul
les
xor
shr
add
hlt
sub
lcall
lods
insl
nop
sub
lea
or
cs
lcall
sub
cmp
add
mov
inc
push
pop
clc
ljmp
ficoml
imul
and
inc
test
cltd
push
sbb
decb
frstor
mov
mov
xor
cmp
pusha
xchg
inc
out
dec
aad
fs
iret
hlt
mov
stc
pop
int3
movswl
stc
sbb
mov
mov
cltd
sub
inc
add
sub
test
inc
xchg
adcl
cmp
das
pop
aad
stos
or
fildll
push
arpl
and
insb
adcl
sbb
mov
cwtl
arpl
dec
insb
cmpb
in
xchg
repnz
js
ret
cli
pop
or
imul
ror
sahf
or
inc
out
jle
lds
aas
std
push
xchg
pushf
mov
push
adc
pop
sub
jp
out
into
add
and
test
cmc
int
fldl
test
or
into
dec
aaa
adc
stos
push
cmc
mov
adc
movsb
cmp
lock
gs
mov
cmc
out
or
jo
cmpsb
mov
hlt
imul
dec
inc
cmpl
mov
scas
mov
jae
add
pop
andb
sbbl
rol
shll
mov
aaa
sbb
add
dec
add
dec
xor
arpl
imul
xor
add
xchg
lret
shrl
dec
adc
dec
popf
mov
mov
imul
lahf
push
cmp
inc
sbb
gs
adc
pop
insb
je
mov
or
mov
push
fnstcw
test
loope
pop
out
stos
pop
xor
pop
dec
cmp
mov
mov
jns
leave
insl
push
jg
pop
insl
jne
out
out
outsb
xchg
test
loope
dec
test
and
add
push
mov
hlt
push
js
push
lcall
adc
aam
test
insb
xchg
out
in
sarl
rorb
mov
mov
push
inc
push
jp
insl
das
lahf
add
mov
xlat
jns
fbstp
adc
xor
cmpsb
mov
insl
outsb
add
cmpsl
cmpl
or
sbb
xchg
lret
jbe
jmp
sbb
shr
lret
lret
and
sub
mov
in
in
add
sub
leave
shr
pop
pop
in
pop
and
jge
and
cmp
jle
outsl
jne
sar
in
cmp
gs
into
mov
or
lea
shlb
fiaddl
cmp
jbe
inc
push
lds
sar
insl
stc
cmp
push
int3
dec
das
and
outsl
out
mov
jp
pop
test
or
mov
push
cmp
push
mov
arpl
mov
dec
scas
inc
cld
pop
rcrb
add
xor
cs
addr16
pop
insl
xchg
in
xor
sbb
jo
mov
mov
stc
dec
call
gs
or
jle
xor
sbb
xor
idiv
mov
sar
mov
add
lods
mov
cmp
jge
jmp
cmp
std
sub
adc
xor
ret
jge
push
sbb
aaa
dec
push
mov
and
into
fs
insb
outsl
loope
daa
gs
mov
sti
js
outsb
int
movsl
xchg
icebp
insb
out
js
add
dec
imul
sahf
movsb
aam
pop
xchg
aas
cwtl
xlat
sbb
insl
sub
pop
pop
fimull
test
cmp
loope
das
pop
cmp
mov
jne
sti
push
add
cwtl
push
sbb
fists
stc
sub
mov
xor
int
pop
arpl
fwait
sbb
sbbb
xchg
stos
addl
push
inc
or
je
adc
cwtl
xor
dec
jle
push
mov
test
aam
lret
mov
xlat
cmp
jg
add
aam
xchg
lock
sbb
jne
lock
btsl
jecxz
adc
mov
jl
jge
stc
dec
mov
popa
push
scas
icebp
and
das
pop
int
jbe
lahf
sti
mov
pop
jp
sub
xor
pushf
inc
or
push
cmp
adc
clc
xlat
mov
mov
xor
jae
shll
pop
mov
mov
push
add
ss
lock
inc
sbb
lds
insb
ffreep
mov
xor
push
ret
xchg
ja
xorb
inc
in
stos
mov
jne
and
icebp
std
stos
daa
imul
mov
dec
sbb
cmp
sub
push
sub
sbb
mov
sub
mov
or
fisubl
sahf
lret
cmpsl
mov
cld
mov
sahf
mov
add
rorb
dec
mov
xchg
xchg
out
pusha
mov
and
inc
dec
cltd
sahf
inc
dec
and
mov
nop
or
sub
mov
push
pop
jbe
jg
aam
idivl
fwait
inc
or
xlat
xlat
and
sbb
mov
in
pop
add
lret
jae
pop
lods
xchg
jmp
insl
je
xchg
mov
fs
jno
xchg
dec
aas
aam
js
push
loope
dec
mov
aas
rolb
gs
movsl
outsl
andl
ds
push
or
in
and
sub
adcb
sldt
into
into
xor
iret
popa
xor
jmp
pushf
mov
cmp
xchg
insl
ret
dec
push
mov
push
daa
jae
fwait
dec
neg
movsb
push
cld
add
xchg
rcr
sahf
fldenv
in
int3
mov
xor
mov
and
aam
or
dec
cmp
push
stc
paddb
push
lahf
idivb
dec
mov
lahf
xchg
add
xor
lods
sti
testb
adc
lahf
test
das
pusha
xchg
mov
movsb
dec
repnz
push
xchg
sbb
push
xor
scas
pop
arpl
bound
into
aaa
loop
mov
in
cli
dec
ret
xor
aas
lea
aaa
jno
stos
jmp
test
aas
xchg
sub
sbb
gs
nop
rcrb
ret
mov
xchg
add
xor
xorb
in
lds
mov
xchg
int
mov
mov
mov
iret
push
xor
push
xchg
xorl
mov
les
fistpll
xor
pushf
dec
out
jecxz
sub
mov
in
cs
cld
sbbb
js
ljmp
mov
scas
aam
imul
stos
xchg
rclb
mov
mov
jae
scas
xchg
push
pop
test
call
push
mov
mov
aas
std
cmpl
test
pop
add
pop
xchg
fdivl
adcl
sub
adc
in
lods
cmp
push
mov
pop
dec
jno
lret
inc
lea
mov
arpl
jo
call
xor
or
dec
rcl
addr16
aam
movsb
cmpsb
scas
bswap
test
test
push
inc
test
xchg
push
mov
jae
dec
outsb
insb
test
inc
loop
inc
xchg
ret
js
dec
add
sub
jne
lods
sbb
mov
lods
das
movsb
or
popa
sub
sub
xor
fistpll
and
adc
cwtl
jp
dec
mov
mov
xchg
and
loop
out
cmpsl
ret
or
icebp
gs
jecxz
cli
repz
mov
mov
enter
cli
rol
aad
lret
scas
inc
inc
xchg
mov
sbb
cmp
xor
ficomps
xor
jmp
ficomps
test
and
mov
jae
das
mov
pushf
pop
xor
jne
loopne
cmc
test
mov
pop
lds
and
xchg
sti
test
mov
xchg
mov
repz
push
stc
cwtl
mov
push
or
xchg
jg
inc
insb
addr16
xlat
loop
outsb
hlt
ds
push
loop
aam
stos
and
sarb
push
xchg
je
inc
inc
push
out
clc
xlat
mov
jnp
xor
cli
inc
repnz
adc
inc
icebp
lahf
jg
cmpb
fstpt
pusha
inc
js
add
jbe
es
cmp
pop
jle
mov
mov
lods
add
push
nop
fstps
out
repz
push
adc
cmp
jge
adc
xchg
and
aaa
jg
decl
mov
mov
mov
inc
jae
pop
sbb
and
lock
xor
push
jmp
lea
rcrl
repz
fistpl
ret
gs
or
data16
jns
pop
jne
cmp
repz
daa
push
clc
mov
jnp
jb
dec
push
and
pop
cmp
push
sbb
jne
mov
and
jmp
mov
dec
testb
xchg
cltd
fdiv
inc
sbb
inc
ja
subb
or
cmp
outsb
mov
dec
cltd
and
mov
es
jcxz
test
adc
inc
xchg
into
add
dec
ss
xchg
dec
inc
sbb
lret
xchg
push
movsb
rclb
cmpsl
dec
push
push
adc
shll
mov
push
inc
ror
xor
cmpsl
sub
mov
popa
mov
push
push
or
icebp
outsb
loopne
std
xchg
mov
mov
insb
xor
inc
hlt
dec
dec
and
daa
push
aam
sub
lret
scas
fs
or
dec
js
xor
inc
mov
pop
adc
fisttpll
lods
sahf
cs
out
mov
fcmovne
cmp
mov
jp
icebp
jmp
ficoms
mov
insb
out
clc
loop
push
stos
xchg
in
mov
cmp
setge
xchg
jle
jne
in
mov
stos
paddsb
fistpll
mov
lea
emms
xchg
add
cmp
mov
mov
xlat
adc
in
push
out
jl
lods
popa
or
and
mov
push
rorl
adc
sarb
mov
test
xor
movsb
xchg
pushw
dec
push
jecxz
out
mov
out
mov
test
xchg
ja
cmp
adc
push
paddq
xchg
xor
inc
cmp
inc
sub
add
mov
cs
loope
decb
cld
cmpsb
sbb
and
adc
in
fdivr
lock
pop
jg
data16
into
jb
rcl
pusha
sub
xchg
in
out
pop
mov
jl
loopne
xchg
icebp
pusha
jle
push
or
lahf
lcall
xchg
and
cli
cmp
fdiv
pop
lret
lods
test
jmp
jbe
xchg
cmp
push
lret
cmpsl
push
outsl
push
insb
iret
or
cwtl
mov
sbb
sub
adc
pop
inc
and
icebp
arpl
dec
pop
in
out
inc
jl
sbb
into
mov
and
div
pop
mov
inc
push
ds
jecxz
fidivl
dec
xlat
scas
jae
pop
dec
inc
call
mull
test
sbb
mov
xchg
mov
je
jle
int3
insl
dec
test
cmp
test
scas
lea
pusha
sbb
data16
adc
ljmp
jmp
divl
xchg
cmp
mov
mov
sbb
in
lods
inc
jmp
idivb
cmpsl
stos
call
push
out
adcb
insb
push
int
mov
ds
mov
stos
out
cmp
in
fwait
adcb
xchg
push
out
push
jecxz
stc
cmpsl
cmp
pop
into
int3
sub
xor
mov
mov
or
push
mov
sub
fiaddl
lcall
cmp
les
scas
mov
sub
mov
add
pop
js
je
mov
pushf
notl
mov
jmp
push
aad
mov
mov
pop
dec
incl
pop
xchg
and
stos
loop
addr16
or
gs
mov
out
push
sti
std
jbe
mov
mov
cmc
dec
mov
jecxz
jnp
das
popa
cmpsb
mov
add
mov
sarl
or
iret
jmp
lods
icebp
aaa
jno
loop
inc
andb
sbb
les
cmp
adc
inc
aam
roll
insl
dec
and
pop
shlb
pop
jnp
fwait
loope
fsubp
pop
jae
cs
cmp
dec
pop
ds
push
jmp
or
ljmp
cmpsl
mov
jmp
xchg
pop
or
jne
push
or
push
push
ror
ficomps
test
lds
repz
in
push
icebp
dec
outsl
hlt
mov
bound
jmp
xchg
or
and
jns
scas
and
sub
out
ficompl
popa
into
je
adc
clc
scas
pop
imul
xchg
adc
adc
xchg
incb
into
sbb
mov
scas
pusha
cmp
sahf
stos
dec
cld
mov
push
push
addr16
sub
ljmp
and
mov
scas
rclb
sbb
loopne
das
mov
add
and
mov
lret
mov
adc
clc
or
imul
sub
fildll
push
out
mov
cmp
daa
sbb
mov
mov
mov
or
cwtl
adc
jmp
iret
aaa
incl
cmpsl
dec
xor
mov
lahf
dec
subb
fdivl
cmp
push
outsl
adc
pop
inc
shrl
pop
jp
data16
mov
idivb
xor
mov
js
mov
jge
xor
mov
subb
js
dec
jle
push
xor
xchg
std
push
in
push
stos
xchg
xor
orl
or
mov
xchg
or
xchg
adc
scas
lds
testb
mov
cmc
das
imul
insl
ds
add
fistl
mov
lods
popf
jno
fmuls
inc
mov
cmp
outsb
xor
jb
repz
or
loopne
in
push
cmc
lcall
popf
loopne
js
js
out
push
idivl
adc
lahf
inc
inc
sbb
xor
jmp
cmp
rcll
sbb
mov
lods
clc
xchg
fstp
jno
push
ficoms
test
or
fisttpl
fucom
or
imul
ret
call
inc
nop
jecxz
das
adc
das
cmp
jmp
xchg
int
mov
push
cmpsl
aad
inc
in
push
jp
mov
jns
cld
mov
cs
call
sub
adc
push
daa
ficoms
imul
jge
js
sub
out
cmp
or
sbb
xor
aam
pop
mov
mov
int
roll
add
fiadds
push
dec
lods
jb
enter
jae
ret
add
pushf
stos
inc
mov
fnstenv
sbb
push
stos
xchg
mov
adc
jno
scas
cmpsb
aam
call
xor
insl
and
lret
loop
sub
pop
test
push
pop
fiaddl
cltd
into
das
cmp
mov
aad
cmp
push
ret
lock
ja
or
inc
pop
jl
jnp
imul
loop
and
shll
push
lcall
sub
lret
inc
fistpll
cmp
cld
xchg
or
aaa
xor
shl
xchg
lds
movsl
xchg
cmp
add
out
add
add
pop
nop
fwait
aam
shll
or
in
aas
push
push
dec
stos
incl
ljmp
pop
sbb
or
cltd
sti
inc
sub
mov
insb
xor
mov
pop
inc
dec
lods
rolb
cmp
cmp
sub
mov
mov
add
xor
sub
inc
sub
ror
add
and
pop
popa
shll
xor
pop
adc
mov
fstpt
sti
loop
or
repnz
jo
stos
into
shll
push
pop
sbb
js
inc
add
test
dec
pop
rcrl
rcll
sahf
out
ss
mov
and
jo
sub
sbb
add
cmp
fidivl
test
divl
hlt
in
add
nopl
ret
mov
xchg
addr16
push
loopne
mov
lahf
enter
add
xchg
xlat
sub
shrl
push
icebp
dec
or
inc
aad
jae
daa
sub
or
sub
pop
jnp
fbld
roll
aam
xor
in
int3
mov
ja
je
or
adc
or
leave
and
dec
cmp
fildl
mov
cmpsb
enter
clc
out
lcall
test
je
enter
mov
dec
popf
jne
pop
mov
mov
test
cmpsb
fisttps
dec
push
xchg
sbb
and
jge
mov
addb
mov
xor
dec
xchg
xchg
stc
fs
mov
cmc
xor
cmpsl
sysexit
adc
cmpsl
in
loope
push
lds
push
cmp
dec
push
xor
xor
add
iret
xor
stc
jge
fdivr
and
lahf
adc
add
mov
daa
or
add
scas
popf
int
cmp
mov
setl
imul
push
clc
adc
mov
mov
sbb
data16
xchg
sbb
ret
push
enter
orb
cld
cli
cmc
adc
test
in
mov
stos
stc
push
push
pop
dec
cmp
jb
push
pop
adc
cmp
cwtl
sub
cmpsl
sub
sbb
sub
push
divl
dec
repnz
xchg
dec
call
sub
sub
mov
mov
mov
test
sub
fcmovu
or
es
mov
lea
fsub
pop
or
and
jae
ds
adc
shll
jecxz
lds
adc
mov
lea
ret
sbb
or
lret
in
lods
nop
mov
out
pmulhuw
insb
lods
je
adc
and
dec
pushf
push
call
ljmp
das
test
pop
in
mov
mov
mov
xchg
jnp
cmpsl
stos
inc
cs
cmp
pop
sbb
dec
pusha
add
mov
jb
fstl
mov
loope
sti
shlb
mov
cmp
mov
nop
mov
inc
push
ljmp
dec
ss
sbb
push
mov
fstl
out
lds
jge
mov
push
mov
movsb
daa
sub
and
ss
fisubrl
nop
push
js
mov
xchg
fwait
pop
push
inc
insb
enter
push
inc
out
pop
jo
adc
push
xor
dec
aas
cmp
test
mov
jl
mov
sbb
push
test
add
aaa
int3
ret
xchg
inc
adc
or
add
add
dec
ds
adc
hlt
into
pop
and
popa
sub
enter
mov
sbb
rcrl
xchg
pop
aam
mov
mov
clc
mov
sbb
in
inc
outsl
jecxz
jp
jnp
mov
push
adc
or
sub
jbe
lods
adcb
dec
popf
pop
lahf
cmpsb
ds
and
sub
cmp
rolb
cmp
sub
and
dec
mov
popf
fldt
sahf
jle
popf
lods
testb
mov
test
clc
lahf
xchg
add
andl
xchg
int
inc
test
call
inc
popa
jle
mov
test
mov
stos
repnz
cmpsl
cmp
int3
or
dec
fisubrl
or
ds
push
mov
inc
add
lock
stc
xchg
ret
stos
pop
and
sub
sbb
pop
enter
int
jo
inc
cmp
xchg
mov
dec
fsubl
mov
test
lods
push
in
aad
push
adc
and
imul
inc
aad
inc
je
hlt
pushf
lods
lret
andl
fsubs
pop
fwait
pusha
call
mov
dec
cld
mov
insb
and
popa
mov
fucomi
add
jg
xorb
aas
or
jae
xor
jmp
clc
sbb
pop
xor
mov
imul
pop
ret
mov
and
in
sbb
inc
out
je
popa
push
fwait
jns
cmp
cmpsb
dec
stos
xlat
fldt
lret
sub
mov
adc
js
andl
inc
cmp
pop
xchg
movsb
push
sub
mov
popf
int
out
sub
nop
push
cwtl
mov
stos
call
sbb
pop
pushf
adc
push
pop
nop
cmc
adc
xchg
adc
sbb
pop
xor
addl
jbe
push
das
out
stos
xchg
lcall
cmpb
push
std
in
mov
addl
pushf
mov
imul
popa
jno
jne
inc
fisubs
mov
cmpsl
and
pop
in
popa
jno
or
jge
cmp
inc
and
iret
mov
xchg
orl
xchg
dec
int3
sti
sub
mov
ret
add
orl
cs
cwtl
mov
jne
adc
pop
cmp
xchg
scas
icebp
insb
adc
or
xchg
cmpsb
clc
xor
cli
or
and
xchg
dec
aas
out
jbe
push
insw
dec
jecxz
nop
push
mov
popf
call
push
movsb
out
dec
pop
lods
and
xor
dec
mov
stos
std
aad
jge
pop
rcr
dec
js
test
movsb
mov
jg
fimuls
movsl
mov
sub
push
insl
pushf
mov
adc
sbb
add
shr
mov
out
mov
dec
inc
dec
aad
xorl
mov
cli
movsb
sub
mov
cs
rsm
cmpsl
add
jbe
xchg
dec
pop
insl
xor
adc
aaa
icebp
push
inc
popf
popa
mov
fld
mov
je
pop
adc
fistl
push
xchg
add
lcall
in
in
add
aad
cs
sub
mov
xchg
mov
xchg
and
sbb
add
fmuls
jo
push
hlt
stos
jp
nop
repnz
fldcw
jnp
cmp
cmp
cmp
fidivrs
add
inc
data16
hlt
cmp
ret
xchg
inc
repz
fldcw
call
loopne
or
lret
decl
adcb
inc
xchg
jmp
push
mov
jl
fmull
pop
mov
icebp
sti
pop
xchg
push
or
cmpl
mov
int
mov
dec
lods
cmp
dec
shll
pop
dec
mov
shl
cmp
and
sub
inc
adc
fsubl
dec
hlt
push
cs
sbb
mov
inc
int
fs
xor
xor
push
aam
ljmp
dec
pop
insl
lret
in
leave
push
xchg
loope
les
adc
cmpsl
testb
adc
jae
cli
or
insl
dec
sarb
leave
shll
cli
fbld
dec
mov
xchg
xlat
pusha
mov
decb
sbb
aas
mov
cmp
push
mov
daa
xchg
push
pop
std
sub
lea
cmp
sub
push
and
hlt
add
xchg
jns
add
dec
xor
rolb
jo
lret
jae
cmp
movsl
insb
jp
dec
fdivrp
sub
jns
stc
and
or
pop
jne
mov
pop
jnp
push
fidivrs
mov
lahf
cmpsl
mov
adc
incl
dec
add
add
add
mov
or
outsb
or
cmpsb
es
lods
cwtl
mov
jge
or
int
mov
adc
scas
push
pusha
mov
jl
dec
subl
mov
lret
dec
sub
dec
aaa
mov
icebp
popf
pushf
cmp
data16
mov
test
add
dec
lock
cs
and
insl
jo
sbb
insl
push
jl
dec
mov
sbb
gs
sbb
pop
mov
xor
add
xchg
rcl
lods
mov
out
test
aad
mov
jge
push
push
movsb
sub
sbb
mov
hlt
roll
cmp
insb
das
lret
add
jb
or
push
push
fs
pusha
arpl
mov
lods
insb
je
inc
mov
cmpsl
dec
clc
shll
push
mov
inc
xchg
jp
push
mov
popf
mov
ss
es
lock
dec
mov
int
lahf
sub
daa
jl
adc
mov
mov
inc
xor
loop
stc
mov
pop
pop
repnz
push
pop
sub
pop
lret
sti
mov
fidivl
push
mov
cmp
and
stos
insl
faddl
inc
outsb
mov
dec
lea
in
xchg
mov
orb
sbb
cwtl
ss
mull
sti
notl
push
mov
push
arpl
mov
sub
mov
shll
repz
mov
subb
push
sbbb
xchg
movups
push
push
arpl
xchg
or
mov
aaa
jge
adc
or
test
mov
mov
mov
in
xchg
lret
pop
loopne
dec
jnp
and
inc
adc
lret
push
push
jns
rcll
cmp
mov
mov
xchg
cmp
fidivrs
fwait
sbb
cltd
fsubp
xor
fcompl
sbb
sub
sbb
xchg
fnstsw
cmp
push
pop
pop
shl
mov
cs
and
jae
xlat
fcomip
js
or
arpl
add
cmpsl
adc
scas
aaa
jg
or
push
mov
jo
mov
loope
mov
mov
inc
sub
sbb
add
leave
xchg
enter
xchg
mov
ret
inc
or
xlat
pop
mov
aas
cmpsb
mov
jl
lea
stos
outsl
imul
ljmp
in
cmp
enter
xor
dec
outsb
or
dec
mov
nop
sub
mov
jecxz
jns
jmp
gs
push
mov
adc
cmp
jmp
ljmp
loope
rolb
rcl
les
fcmovu
and
and
cli
in
in
pushf
enter
mov
cmp
arpl
push
mov
dec
fistl
inc
and
aaa
jb
sub
loope
jecxz
dec
cmp
sar
sbb
jge
push
mov
addr16
jle
add
pop
and
repnz
icebp
or
push
ljmp
inc
mov
lret
adc
inc
push
lods
mov
mov
addr16
push
mov
fsubrl
fsubl
or
push
jmp
fs
je
cli
xchg
test
stos
cmp
loope
fisttpl
stos
xchg
push
jle
xchg
bound
push
inc
aam
adc
adc
jns
icebp
jne
push
lcall
xor
fs
inc
stos
adc
icebp
addb
mov
lods
ret
iret
mov
add
mov
movsb
addr16
imul
and
push
ss
mov
adc
icebp
add
sti
and
je
bnd
mov
inc
or
cld
xchg
xor
iret
popf
rolb
inc
mov
inc
mov
enter
mov
sub
push
mov
push
adc
test
mov
jge
and
jg
add
fldcw
jb
push
out
aam
negl
inc
mov
cmp
push
stos
xchg
xor
add
inc
mov
inc
push
mov
aam
mov
add
mov
dec
push
jge
jbe
jnp
or
mov
and
sbb
lahf
sub
ds
int
outsb
lret
in
cmp
fucomip
xor
movsl
push
sub
add
jne
js
or
insl
aam
lret
jecxz
xchg
cmp
mov
add
xor
daa
pusha
and
jp
cli
mov
je
stos
test
sahf
dec
scas
insb
mov
mov
xchg
xlat
xchg
std
push
cmpsb
mov
and
test
or
mov
or
lret
push
dec
lods
sahf
push
fsubl
jo
mov
xchg
into
sbb
out
hlt
loope
test
mov
jmp
add
dec
xchg
out
xchg
sub
pop
jo
push
add
push
shll
std
pop
xchg
cmp
mov
push
sub
xchg
push
or
jl
pop
inc
xchg
nop
lock
or
in
std
rorb
sub
cmp
cmp
lret
add
sarl
addl
test
stos
jmp
test
scas
imull
mov
push
push
mov
xchg
js
and
test
cmpsb
mov
gs
pop
mov
mov
dec
in
jge
dec
adc
sub
loopne
es
sub
or
jns
icebp
sub
xor
loopne
mov
int3
mov
mov
mov
outsl
jae
popf
pop
pop
cwtl
push
test
mov
negl
jmp
pop
test
in
daa
mov
cmpsl
rolb
sub
fstps
cs
mov
push
sub
pushf
icebp
lcall
lea
jge
popa
popa
in
xor
pop
mov
scas
cmp
mov
and
sbb
adc
mov
rolb
rolb
dec
insb
push
in
and
cwtl
or
add
loope
cvttps2pi
pop
dec
push
jp
popa
pop
pop
pop
sbbb
pop
pop
fnstenv
push
imul
stos
int3
dec
roll
test
loop
in
sub
inc
xor
xchg
outsb
test
jno
mov
daa
push
fildll
lods
repnz
iret
sti
push
add
or
or
pop
lea
mov
pop
out
push
xchg
or
ret
jg
out
mov
les
xchg
xchg
push
xor
jecxz
popa
add
sahf
mov
fists
sar
mov
pop
mov
and
jmp
xor
inc
mov
mov
mov
cmp
push
push
and
ficompl
mov
rorl
mov
loop
jge
pop
xchg
aad
loopne
inc
insb
or
lds
pop
or
clc
inc
fldenv
lods
jp
test
mov
and
and
add
flds
xor
or
rcrl
ror
inc
mov
aad
sti
lods
stc
loop
jg
xchg
push
cmpl
ror
cmpsb
add
or
outsl
test
sbb
es
ja
fisubl
push
inc
dec
xchg
jae
mov
xorb
fsubs
cmp
repz
push
loopne
fistpll
xchg
je
lods
loop
or
push
or
push
clc
sub
mov
sbbl
xchg
dec
add
or
jg
push
sar
cmp
test
mov
fisttpl
lock
aas
popa
rolb
mov
mov
push
aam
jmp
and
stos
ret
orl
jl
fistl
pop
enter
dec
into
jns
mov
mov
je
insb
inc
mov
stos
add
jns
adc
or
push
je
test
fisttpl
adcl
pusha
mov
std
dec
cmpsl
lcall
push
xchg
repz
mov
hlt
push
add
dec
ficomps
push
unpcklps
shrb
inc
pop
and
mov
gs
notl
int3
or
and
jae
test
incb
jb
data16
inc
out
adc
int3
shrb
outsb
lock
insl
es
xchg
or
aam
add
adc
mov
out
pushf
mov
dec
repnz
sub
dec
push
cmpsl
or
fidivl
mov
pop
das
movsb
cli
jns
jbe
or
out
pop
std
xchg
out
pop
push
pop
cli
das
mov
inc
inc
inc
add
icebp
fwait
lea
loope
fisubrl
push
stc
jge
addr16
xor
dec
xlat
lods
inc
dec
dec
cmp
xchg
push
adc
xchg
rdpmc
mov
out
outsl
jne
test
pop
daa
gs
out
sbb
lods
jnp
dec
incl
scas
cmp
outsl
xchg
stc
stos
and
cltd
pusha
jns
sub
sarb
das
lret
ud1
test
and
in
xchg
test
sbb
inc
movsb
mov
push
pop
mov
insb
jle
add
addr16
movsl
or
pop
js
in
adc
push
lods
mov
mov
arpl
and
fsubr
out
popa
push
add
imul
movsb
cld
cmpsb
push
or
cltd
insl
sub
test
lock
popa
mov
rcll
push
inc
scas
sti
inc
lock
out
add
inc
in
xor
push
addb
icebp
adc
ja
push
mov
les
sub
xor
fwait
xchg
xchg
cwtl
lahf
jne
sub
fimull
inc
dec
icebp
cli
ja
je
jecxz
cmp
adc
out
shrl
out
mov
popa
sbb
inc
push
dec
int
fistps
jo
adc
push
push
jb
popa
mov
xchg
inc
test
orl
pop
dec
cli
sbb
cmp
pushf
icebp
fs
add
mov
fwait
ror
mov
push
inc
mov
leave
mov
pusha
cmp
mov
rorl
int3
adc
or
inc
sarb
push
mov
pusha
mov
aas
or
in
arpl
pop
iret
std
jecxz
and
and
cmp
mov
int
mov
cmp
fsubr
xchg
roll
int
lahf
aad
int3
lret
mov
movb
mov
stos
aas
xchg
cltd
cmpsl
push
mov
out
in
iret
cmpsl
cmpsl
pusha
popa
mov
data16
jae
mov
lahf
addr16
cmp
addr16
pushf
out
shlb
inc
inc
xor
stos
adc
mov
and
sbb
mov
jl
shrl
pop
mov
js
in
sti
add
in
loopne
stos
lret
call
jo
int3
lret
lods
dec
in
stos
or
lea
dec
mull
push
aas
adc
test
sub
call
aaa
mov
pop
xor
or
mov
and
daa
aad
mov
xor
pop
jno
mov
shr
or
pop
outsl
inc
push
addr16
mov
fmul
ffreep
sub
xchg
lahf
push
jge
out
mov
ret
lret
les
xor
inc
frstor
lret
inc
adc
daa
cmc
dec
outsb
cmpsl
lods
and
pop
sbb
lret
pop
jo
and
mov
mov
data16
addl
xchg
iret
outsl
inc
std
insb
icebp
data16
add
out
je
mov
jne
test
add
mov
pop
add
add
cltd
test
stc
mul
iret
scas
fistpl
add
mov
xor
add
test
xchg
cmp
je
pop
cli
gs
sbb
sbb
cmovg
shlb
cmp
mov
les
movsb
push
jbe
dec
add
or
lret
clc
push
push
in
xor
fildll
and
ljmp
jge
xchg
icebp
in
pop
add
mov
cmp
sub
dec
rep
repz
inc
and
push
xchg
or
pop
or
jno
mov
push
rcll
xor
insl
pusha
cli
adc
mov
and
stos
xchg
adc
out
pop
fwait
jg
adc
lret
push
int
lret
inc
mov
es
fwait
je
mov
outsl
inc
xor
out
sub
sahf
out
imul
lods
push
lcall
pop
daa
cltd
adc
pop
in
pop
mov
test
mov
sbb
out
xchg
scas
xor
into
sbb
xchg
adc
imul
cmp
out
dec
ja
mov
and
push
sbb
mov
jecxz
lcall
cmpl
shlb
in
sub
mov
sbb
sbb
pop
add
iret
inc
fdiv
out
out
inc
adc
sbb
and
daa
lods
cmpsl
outsl
sub
jnp
xor
and
movsl
rclb
leave
cs
nop
push
jmp
add
mov
add
and
cmpsl
addr16
bound
mov
mov
cmp
push
jb
or
iret
cltd
into
mov
add
int
pushf
jp
notb
aam
iret
loop
push
ss
push
or
sbb
out
mov
push
and
outsb
mov
rcl
loop
or
imul
push
inc
mov
xchg
mov
ds
inc
jo
fs
pushf
sub
rcr
lret
aad
cmp
addl
loope
jnp
imulb
sbb
adc
push
xchg
pop
or
and
or
xlat
xchg
adc
add
mov
push
jnp
jo
cmp
jo
fdivl
and
jb
push
daa
inc
in
jge
call
push
inc
pop
ss
shrb
cmp
lods
pop
fwait
lcall
xor
inc
lock
dec
or
pop
add
mov
daa
mov
or
pushf
scas
in
inc
inc
push
bound
adc
pop
or
inc
add
push
xchg
call
adc
in
scas
mov
call
add
inc
out
or
fs
mov
push
cmp
roll
xchg
push
mov
cmp
mov
stc
ret
xor
inc
rolb
mov
cmp
push
popf
xchg
mov
ja
adc
mov
mov
jb
ficoms
add
xlat
sbb
mov
mov
fmuls
subb
or
xor
push
mov
int3
mov
push
adc
sbb
mov
xor
or
pop
pop
jne
push
mov
lods
cs
into
fiaddl
push
xor
pusha
mov
jns
fnsave
push
xchg
add
ret
scas
mov
ds
sbb
rclb
rcll
ret
mov
lcall
xchg
stos
or
hlt
cltd
ja
xchg
add
mov
in
lcall
mov
out
stc
jbe
sbb
dec
fcmove
dec
and
or
icebp
leave
xchg
push
fucomp
jbe
jge
sub
pop
sbb
xor
mov
jbe
mov
xchg
imul
movsl
sahf
or
xchg
adc
fistpll
fidivl
out
sub
arpl
jecxz
clc
sbb
xchg
pop
dec
pop
cmp
add
pop
data16
test
sbb
out
mov
loop
fldt
test
inc
and
iret
xchg
cltd
mov
jnp
js
fs
jbe
cs
pop
mov
cli
inc
fnstcw
rcl
in
mov
in
movsb
mov
inc
push
mov
mov
pop
in
jno
fiaddl
sti
hlt
adc
add
and
pop
test
mov
pop
cmp
imul
jae
loopne
mov
cmpsl
sbb
inc
push
stos
in
push
test
dec
rclb
jmp
push
ljmp
testb
xor
jns
pop
push
cmpsb
js
ss
scas
jmp
xchg
mov
sbb
or
out
aas
mov
jns
gs
lea
sub
jns
mov
pop
ret
jecxz
dec
rorb
push
inc
jb
stos
push
insb
push
jb
jo
mov
and
cmc
jne
pop
pop
ret
into
stos
sbb
and
rolb
adc
mov
jne
ret
shll
jl
and
xor
scas
sub
movsl
negl
mov
and
cmpsl
fsubrl
dec
pop
scas
and
adc
cmpsb
mov
fcomi
add
fisttpll
push
fstpl
imul
cmpsl
mov
push
sub
loop
out
sub
and
mov
mov
or
push
clc
dec
push
cld
inc
mov
xchg
mov
mov
les
and
xchg
mov
imul
nop
xchg
lods
xor
cld
adc
and
nop
dec
add
ret
push
inc
fs
fsubr
pop
pop
sub
mov
in
jmp
aaa
jl
sbb
and
sar
inc
daa
jmp
dec
andl
dec
xor
insl
mov
inc
mov
adc
jns
fld
shlb
in
jnp
pushl
fs
pop
sahf
xorb
and
outsb
jmp
mov
aas
sub
adc
mov
lcall
jge
fwait
hlt
fimull
sti
add
aam
lcall
xor
std
xor
xchg
xor
insb
sbb
xchg
ljmp
and
fwait
mov
rcl
mov
jae
ret
mov
repnz
dec
mov
mov
cmp
push
xor
int
mov
pop
jno
jge
mov
dec
sub
jg
mov
imul
lods
jns,pt
or
mov
push
sbb
and
lretw
fwait
std
inc
sbb
cld
out
pop
fistpll
incl
xorb
inc
loop
inc
push
jl
fs
out
or
pop
and
xchg
xor
imul
cwtl
push
aad
sbb
lahf
mov
ljmp
sbb
cwtl
fs
fistpll
or
cmp
mov
lock
sub
and
test
or
ret
insl
lret
jmp
dec
lods
push
pop
add
jnp
dec
pop
adcb
test
call
imul
add
cmp
or
in
dec
add
cld
inc
add
push
popa
rolb
dec
mov
inc
cmpsb
xchg
push
push
and
and
xor
xchg
iret
std
and
mov
cmp
scas
in
outsb
shlb
call
jbe
adc
mov
xchg
mov
cwtl
mov
pop
out
mov
jmp
mov
lock
out
push
ja
loop
mov
into
inc
fldcw
push
sbb
enter
xchg
lea
jo
dec
or
and
shrl
mov
or
inc
je
cmp
mov
jg
mov
xchg
mov
cmp
int
sbb
mov
int3
mov
mov
xchg
mov
bound
inc
adc
imul
sub
addr16
mov
jno
push
lock
pop
cmp
aas
sub
mov
into
push
mov
pop
movsl
sbb
or
fiadds
jmp
add
mov
rcrb
push
adc
dec
jmp
jle
imul
pop
add
sbb
inc
bound
fbld
and
mov
mov
cmpsb
mov
mov
loope
lcall
loopne
test
outsl
fnstcw
negl
nop
stos
in
icebp
in
mov
mov
push
or
pop
inc
ds
mov
jae
jno
sbb
shlb
test
popa
push
fstps
and
int3
mov
fstps
sbb
mov
mov
call
lds
inc
jge
in
xor
and
dec
xlat
adc
push
sub
imul
ljmp
mov
cmp
cmpsb
add
out
mov
add
imul
sub
imulb
or
adc
test
adc
and
pop
scas
fwait
xor
shlb
stc
mov
fstl
and
scas
adc
enter
insb
pop
loope
and
xchg
insb
nop
psubb
pop
xor
xchg
enter
push
lods
adc
lcall
xlat
lods
xchg
pop
jle
dec
aad
mov
iret
sbb
mov
cmpsl
iret
mov
test
jne
ljmp
inc
mov
nop
je
adc
adc
inc
ja
sbb
xchg
xchg
mov
cmp
rolb
and
xchg
mov
adc
and
mov
dec
adc
pop
es
loopne
nop
mov
lock
add
push
fidivrs
pop
dec
gs
pushf
mov
and
dec
sub
add
aad
sbb
xchg
notl
inc
fsubl
sbb
sbb
inc
mov
fidivrl
lds
cmc
add
cmpsl
inc
sbb
and
jbe
imull
sub
sub
insb
fldcw
sub
inc
gs
data16
dec
dec
or
outsb
pop
and
mov
into
stos
mov
xchg
mov
in
bound
push
xlat
jne
xchg
leave
mov
scas
cltd
xchg
dec
mov
pop
imul
sbbl
ficoms
push
leave
das
insb
out
sbb
jecxz
mov
adc
pop
adc
ret
int
or
inc
dec
and
mov
dec
cmovg
mov
mov
pop
sub
mov
dec
xor
add
mov
or
push
jbe
mov
ljmp
aam
and
xorl
fiaddl
aaa
stos
cmp
scas
mov
cmpsl
popa
xchg
js
fcmovne
jnp
mov
rorb
rolb
lahf
dec
mov
mov
xor
ret
inc
push
xor
adc
js
pop
ret
pop
add
jns
ja
js
popf
xchg
ja
popf
cltd
stc
int3
xor
and
movsb
clc
ss
scas
in
insl
aam
pushl
stos
mov
ret
sbb
mov
sbb
mov
add
loope
inc
lods
cmp
or
aad
mov
xor
mulb
jle
mov
out
xchg
adc
lcall
add
dec
jle
lcall
lods
testb
push
arpl
cmc
pushf
sub
leave
sub
jg
and
mov
xchg
sbb
rolb
push
insl
bound
push
push
cltd
inc
fnstenvs
jae
xorb
cmp
out
inc
das
leave
push
adc
pop
mov
loopne
stos
je
cmpsl
fnstenv
jbe
popa
sub
insl
mov
lret
sbbl
test
and
adc
mov
cmpsb
lahf
jle
cwtd
loope
mov
pop
repz
cwtl
stos
in
loop
cmpsl
insb
aam
cmpsl
in
je
xor
data16
inc
sarl
sbb
dec
push
insb
cmc
or
data16
jb
icebp
insb
xchg
and
ds
xlat
stc
repz
mov
or
jecxz
pop
sbb
jns
sbb
cwtl
sbb
cltd
stos
pop
jb
push
pop
dec
lahf
xchg
lds
or
addr16
dec
jbe
aaa
fists
mov
and
outsb
pop
js
xchg
into
stc
jb
pop
inc
jle
and
cmp
push
mov
cmp
lock
push
lods
jb
std
inc
aaa
negl
mov
cli
mov
out
sti
pop
xchg
jo
loope
ds
dec
or
popa
mov
dec
mov
addr16
mov
xchg
js
lret
jo
ret
jae
ds
cs
out
and
or
inc
dec
jg
and
xchg
mov
in
jnp,pn
or
or
inc
pusha
repz
pop
sahf
add
bound
daa
xchg
orl
or
jecxz
insl
or
pop
push
push
mov
shlb
xorl
inc
mov
xchg
lret
cmp
inc
test
lods
pop
and
and
jae
adc
ja
xchg
sahf
add
cmc
pop
and
pop
mov
test
pop
sbb
pop
push
fstpt
lock
sub
loop
xchg
pop
add
pop
adc
imul
xchg
sub
loop
cmpb
jmp
xor
and
dec
cltd
mov
jg
or
push
nop
dec
mov
jno
inc
ja
fistpl
lret
dec
inc
and
imul
xor
push
pop
jp
xor
cmpsl
fcmovb
xchg
mov
and
mov
add
ja
pop
inc
push
inc
xlat
mov
push
push
sub
mov
xchg
push
test
xchg
add
push
out
dec
vpcmpeqw
and
mov
adc
xor
lods
sbb
insb
dec
fmull
clc
sub
aaa
in
jl
adcb
adc
bound
imul
imul
mov
aas
ljmp
int
insl
xchg
dec
fsubrl
dec
outsl
ret
fimuls
fistpll
mov
in
shr
das
loop
mov
idivl
mov
or
mov
pop
mov
pop
jge
pop
dec
and
sbb
out
aam
jecxz
out
dec
fstl
or
outsl
stos
push
imul
push
adc
jmp
cli
unpckhps
adc
out
cmpb
fmuls
movsl
mov
lea
aad
sub
iret
add
dec
jmp
fdivrs
mov
ffreep
and
imul
fwait
mov
loop
adc
push
sbb
iret
js
cmc
addr16
mov
dec
inc
pop
rcr
stos
into
mov
iret
cmpsl
jae
xchg
inc
adc
inc
xor
jg
pop
mov
dec
outsb
scas
jns
sub
stos
sub
test
mov
dec
xlat
xor
add
xor
out
mov
repnz
cmp
inc
sahf
mov
imul
sbb
lods
std
cmp
cmpl
push
pushf
in
cmp
dec
cmp
jbe
sbb
aaa
mov
or
mov
call
enter
and
mov
out
xchg
sbb
mov
cmp
scas
repnz
aas
lods
aam
push
mov
cli
test
pusha
sbb
sub
lahf
xchg
fwait
push
jp
xchg
cli
rcrb
nop
test
add
or
lcall
xchg
sbb
lods
cli
int
pop
call
jae,pn
pop
xor
lods
je
pop
xchg
xorb
sub
cld
mov
cmp
push
adc
mov
xchg
sub
mov
adc
js
jle
arpl
adc
sbb
cmp
push
jmp
xor
add
aaa
sbb
push
jbe
cltd
lcall
in
aas
in
push
or
jno
imul
iret
add
hlt
lea
sub
sbb
inc
adc
ja
push
cmp
int
push
push
out
insb
popa
or
addr16
std
pop
mov
imul
insl
xchg
pop
dec
je
in
das
dec
mov
cmp
xchg
xor
fstps
mov
popf
repnz
pushf
cmp
jl
aaa
mov
pushf
mov
jp
lahf
in
and
movsb
xor
ja
scas
mov
sub
ret
sub
sbb
push
movsb
jg
test
inc
pop
bound
dec
lock
data16
dec
mov
sbb
xor
testl
sub
xchg
cmp
jae
mov
int
or
jg
es
mov
jns
push
mov
add
mov
das
push
push
mov
add
shlb
pop
inc
lahf
lret
in
aad
push
nop
adc
jecxz
add
and
fdivrl
fwait
loopne
stos
push
push
inc
xlat
lcall
sub
mov
insl
pop
lock
dec
in
in
adc
jo
subb
push
insb
sub
mov
lahf
popf
test
sbb
jle
mov
push
aad
xchg
out
and
aad
xlat
cmp
jp
test
xchg
xor
sub
xchg
pop
jo
mov
decl
adc
fisttps
mov
cmpsl
or
and
dec
and
insl
xchg
adc
out
push
fidivrs
jecxz
out
mov
pop
mov
popa
sub
mov
add
sub
insb
arpl
dec
insb
mov
sarb
aas
ss
xchg
lret
or
call
dec
adc
sbb
or
inc
dec
mov
lret
shll
lea
lret
jp
xor
sarb
cmp
ret
push
push
fcompl
xchg
push
mov
mov
jle
ror
and
test
dec
fmul
js
iret
xchg
insb
xchg
cli
fwait
jmp
fidivl
jg
cmp
sahf
mov
lock
dec
pushl
sbbl
or
dec
cs
pop
or
pop
cltd
aaa
clc
pop
std
mov
xor
movsl
inc
sti
incl
repz
das
dec
scas
adc
out
es
lcall
rorl
add
dec
fimuls
xchg
mov
jge
std
mov
xlat
loope
jbe
repnz
mov
pop
lods
xor
mov
dec
outsb
in
out
test
movsl
lret
cs
out
int3
sub
inc
mov
mov
fincstp
jle
push
stos
mov
sbb
mov
sbb
add
fiadds
mov
imul
xchg
push
aad
ss
sub
movsl
sbb
cmc
scas
and
nop
loopne
xor
sbb
test
out
jns
jmp
rcrl
sti
mov
mov
inc
sbb
ret
repz
mov
mov
inc
test
add
daa
adc
in
int
mov
push
rol
push
roll
dec
and
popa
stc
xor
jmp
mov
mov
in
sub
jle
mov
das
pop
push
xlat
adc
adc
in
push
test
jb
fwait
stos
adc
and
and
push
out
enter
call
popa
ss
mov
jge
or
ficoml
cmpb
mov
jle
ljmp
rcl
out
mov
inc
xchg
mov
sbb
nopl
dec
mov
aas
sahf
xorl
xor
out
or
mov
int3
js
and
mov
adc
jl
jle,pt
bound
cs
jnp
jmp
xchg
and
lods
jecxz
incl
rclb
jbe
aaa
xor
pop
cmp
fdivs
addr16
pop
xchg
xchg
dec
popa
jmp
and
sahf
imul
add
adc
jle
cmpsl
push
dec
sbb
andl
or
mov
add
lods
out
nop
pop
mov
jbe
or
or
test
push
add
pop
jne
icebp
mov
push
jecxz
xchg
mov
aam
pop
cmp
imul
js
jne
pop
adc
test
and
pop
mov
mov
aaa
adcl
es
sub
lods
test
xorb
push
das
pop
jo
mov
mov
dec
mov
mov
out
xchg
pop
push
sub
push
adcl
fists
jge
test
lahf
inc
mov
cmp
xchg
pop
ds
aam
cmpsb
je
vdivpd
mov
out
pop
pop
mov
sub
xor
clc
push
lret
ds
stos
fnstsw
mov
xor
lret
mov
add
fistpl
sbb
jno
add
scas
pop
cmp
fadd
rclb
loope
mov
dec
cmp
dec
daa
dec
rorl
pop
nop
and
cmp
aas
notb
popa
sbb
loope
int3
and
outsl
sub
or
aam
adcb
pusha
cltd
mov
mov
out
sbb
lret
loop
jnp
mov
pop
cmp
unpckhps
ret
ds
stos
jl
cmp
push
mov
ja
icebp
adc
mov
rcrb
adc
mov
sarb
pop
in
sub
cmc
rcrb
dec
adc
dec
mov
int
imul
repnz
mov
lea
je
ret
ret
mov
pop
hlt
dec
dec
dec
and
mov
fmulp
pop
rcrl
mov
sbbb
in
imul
ljmp
rcrl
hlt
aad
jl
fsubrs
mov
jbe
cmp
rorb
icebp
sbb
mov
pop
lods
sti
ss
pop
jbe
push
arpl
or
xchg
inc
xchg
sbb
cwtl
aam
or
push
stc
jg
sahf
jg
push
sbb
jbe
movsl
or
mov
fcmove
adc
push
das
sbb
sbb
les
jb
out
pushf
mov
test
adc
clc
mov
push
mov
pop
or
dec
mov
fwait
inc
insl
lahf
mov
xchg
fdivs
leave
mov
inc
sbb
rcr
jmp
fimuls
repnz
sarl
adcb
mov
scas
ja
add
andw
adc
test
xchg
mov
repnz
jnp
es
push
pop
testl
clc
push
cltd
sub
aad
cmp
mov
jno
les
xor
mov
aad
adc
mov
arpl
dec
arpl
lock
sahf
sub
enter
xchg
xchg
adc
sub
out
popl
pushf
add
or
mov
jecxz
add
stos
aam
call
imulb
inc
rolb
mov
cmp
sbb
jmp
xchg
into
mov
push
sbb
das
out
sbb
and
add
cmp
push
orl
mov
mov
insb
xor
ror
jecxz
insl
cwtl
in
ret
inc
hlt
outsb
lock
lret
iret
xchg
cld
pop
inc
adc
mov
add
lea
pop
xor
outsl
cli
addr16
scas
cmp
pop
mov
int3
xchg
dec
shrl
and
ja
mov
dec
loope
or
dec
jno
mov
mov
ret
mov
test
push
sbb
vpunpcklqdq
cld
dec
jp
lahf
pop
push
loopne
mov
nop
out
fcoml
inc
cs
push
insl
lds
insl
jb
fldt
pop
pop
mov
test
fcoml
push
add
pusha
push
mov
fbld
mov
xor
jecxz
dec
adc
sbb
jo
orb
pop
test
cmpsl
movsb
and
lds
leave
pop
int3
or
incl
es
sahf
mov
pusha
imul
pop
ja
addr16
jmp
mov
jne
aad
ret
mulw
ja
cmp
in
int3
mov
mov
in
pop
push
and
out
mov
xchg
insb
out
test
mov
sarb
mov
jbe
adc
scas
cmp
shl
out
mov
pop
lahf
stos
cld
pusha
shl
jno
xor
adc
mov
scas
push
jge
fmul
loope
int3
test
cmp
data16
inc
inc
aaa
xchg
ret
xor
and
xor
imul
test
ja
mov
add
gs
cmp
imul
stos
aas
popa
fadds
stos
push
jmp
sub
push
cmp
popf
push
pop
jbe
leave
lahf
bswap
test
sub
scas
mov
jae
aas
testb
dec
push
dec
ret
xor
pop
mov
nop
jbe
cmp
lcall
push
adc
add
add
sti
sub
daa
cmp
or
sbb
test
ss
xchg
add
sub
add
test
out
mov
ds
jl
subb
pop
ja
rcr
cmp
or
dec
imulb
enter
or
dec
pop
lock
cmpsl
or
pop
shr
mov
jno
inc
mov
sbb
fs
push
int
xor
imul
jle
pop
ds
and
popa
mov
imul
in
and
in
popf
xchg
lds
mov
outsb
test
scas
xchg
fst
mov
es
leave
pop
sbb
mov
in
dec
xchg
negb
sub
xor
dec
fldenv
popa
sub
jo
sbb
outsb
enter
cmp
jns
mov
dec
jnp
jg
sub
jo
popa
xchg
ficoml
imul
mov
aas
and
bound
push
rcll
xchg
adc
push
sub
mov
shl
sahf
pop
arpl
scas
pushf
dec
push
cmc
cmp
outsl
loopne
inc
sbb
cli
and
cmpsb
pop
in
repnz
ret
inc
xchg
inc
fimuls
idivl
sahf
imul
int3
pop
subb
ret
sbb
pop
mov
rcrl
popf
push
add
aas
scas
or
test
or
xor
mov
push
pop
les
aas
cmp
ds
arpl
rolb
mov
rep
enter
pop
or
ljmp
push
pop
add
rcrl
shll
arpl
nop
add
mov
jns
idiv
xchg
mov
add
mull
xchg
loop
pop
xor
out
push
enter
cmc
sbb
lret
cmp
test
jno
fwait
push
jmp
mov
pop
repnz
jne
test
jp,pt
mov
popa
pop
add
fisubrs
mov
popa
shrl
xlat
cmp
cltd
cmp
push
jbe
jo
push
jmp
lret
cmpsb
push
jo
addr16
outsl
in
loop
iret
js
push
push
int
or
mov
dec
lret
imul
mov
addr16
adc
add
mov
dec
jnp
pop
mov
incb
cmp
mov
jbe
cld
adcb
pop
adc
das
mov
lret
push
jmp
xchg
fisttpl
mov
hlt
std
jmp
xchg
pop
in
add
clc
lcall
dec
xchg
test
dec
xchg
add
jge
xchg
or
inc
mov
push
stc
xor
cmpsb
cwtl
mov
or
aaa
xor
aaa
mov
fwait
int
cmpsl
sbb
jp
out
and
sub
mov
push
mov
les
sub
cli
or
xor
push
dec
jge
testb
bound
stos
pop
fcmovbe
push
out
push
xchg
sub
or
sub
sub
cmpl
jle
fs
int
sub
sub
lods
sbb
inc
pop
fidivrs
sbb
or
xor
pop
popf
ja
lret
cmp
stos
mov
test
adc
xlat
lcall
cmp
xchg
push
in
pushf
add
in
jb
mov
cli
adc
mull
push
ret
inc
cmp
xchg
ret
pop
add
mov
out
xchg
mov
cmp
dec
loopne
decb
push
das
andl
lods
sub
clc
or
lret
scas
stos
or
pop
push
cmpb
pop
and
ja
mov
out
dec
out
jno
xchg
inc
fimull
lea
das
test
cli
mov
rep
sbb
jno
data16
enter
stc
ljmp
pop
mov
cwtl
orb
push
jge
movsl
int
xor
lcall
sbb
lods
shrl
call
les
and
add
add
jno
pop
rcl
sbb
inc
loop
cmpsb
mov
stos
mov
int
stos
arpl
cmp
sbb
repnz
push
sub
mov
sub
mov
sbb
dec
mov
xchg
rolb
prefetchwt1
mov
in
jne
test
cmpxchg
and
pusha
xor
mov
mov
inc
rcrl
sbb
pop
push
cmp
dec
xchg
dec
add
arpl
pop
fs
jo
rcl
push
inc
dec
push
addb
ss
mov
pushf
sbb
and
hlt
lcall
dec
fldl
mov
pop
scas
insl
jp
movsl
sub
inc
fidivl
and
inc
mov
sub
outsb
arpl
lds
push
xchg
jp
out
dec
nop
dec
in
enter
push
jge
adc
dec
test
inc
stos
cmp
cwtl
add
hlt
or
pop
divl
inc
sbb
test
das
or
std
mov
bound
dec
mov
outsb
mov
push
pusha
or
insb
fwait
mov
inc
shl
fsubrp
mov
popa
mov
mov
push
insl
fnstcw
xchg
mov
mov
cmp
gs
xchg
aad
in
sub
lahf
pop
pop
dec
push
xlat
jmp
pushf
cmpb
push
push
mov
jmp
mov
xor
rorl
cs
mov
test
add
out
mov
iret
into
addr16
cwtl
mov
into
push
in
mov
pop
insb
es
cmp
push
lahf
and
mov
stos
mov
push
sbb
adc
popa
fwait
ja
xchg
or
out
lret
xor
mov
jne
jo
mov
xor
repnz
pushf
rclb
icebp
dec
insl
iret
lds
add
pusha
jmp
test
aad
ss
cmp
stos
outsl
mov
jo
popf
mov
push
dec
lahf
les
sbbb
repnz
xchg
movsl
sub
clc
clc
add
mov
jbe
or
les
lods
test
sbb
mov
clc
xchg
mov
xchg
or
leave
push
push
pop
xchg
push
and
lods
ficoms
pop
or
insb
out
popa
ret
sub
movb
in
adc
mov
mov
xchg
addb
add
and
pop
mov
lds
lods
sub
mov
mov
repnz
mov
mov
xchg
xor
push
ret
mov
insb
xor
popa
xor
rclb
ret
insb
pop
dec
or
aas
adc
lds
mov
iret
clc
popa
add
add
mov
fisubl
mov
js
jmp
inc
push
mov
xor
push
mov
sub
les
jge
cltd
dec
lods
add
xchg
jo
dec
ror
xor
fisubl
shlb
lahf
stc
nop
fidivrs
xchg
scas
jbe
nop
adc
aad
data16
mov
sbb
mov
xchg
iret
mov
jns
jp
loop
pop
and
adc
fwait
dec
mov
xadd
lret
ret
loope
mov
sbb
add
lods
imul
push
sub
outsl
and
fistps
fcomip
out
fidivrs
jnp
and
imul
aam
push
jecxz
sub
or
cltd
loopne
popa
jecxz
sti
cwtl
pusha
lock
sbb
adc
xchg
rcrb
daa
push
scas
jno
push
enter
add
cld
add
out
lahf
lods
dec
push
cmp
mov
fwait
popa
push
shll
inc
das
add
pop
fstpt
and
rcrb
shlb
test
cmp
push
test
adc
out
out
ret
out
xchg
cmp
mov
push
jecxz
stc
sub
inc
cli
insb
cmc
ror
shlb
mov
es
or
sub
push
inc
enter
mov
lret
stos
dec
cmpsl
in
and
inc
mov
scas
inc
cli
jecxz
push
in
cmp
out
loopne
jg
xor
movsl
add
add
jmp
lods
outsb
aas
and
pop
mov
pushf
and
std
out
xor
inc
cmp
xchg
in
dec
lds
sbb
ret
out
lods
inc
cltd
addr16
sbb
out
orl
jnp
dec
add
jmp
gs
adc
lods
clc
push
scas
jg
in
out
cld
xchg
cmp
push
pop
adc
mov
sbb
into
add
jae
push
cmp
bound
iret
cmp
mov
in
jo
pop
inc
add
dec
ss
lods
add
inc
xor
dec
push
or
movsb
popf
shrb
es
and
loop
out
mov
cwtl
mov
cmp
clc
aad
addr16
js
sub
cmp
dec
jae
sbb
sbb
int3
scas
or
mov
xchg
adc
lret
fmull
outsb
mov
pop
push
jmp
jae
jb
into
imul
lds
mov
cli
nop
repz
and
xchg
leave
sub
aas
dec
dec
mov
and
imul
hlt
pusha
pop
inc
in
xor
sahf
jne
sbb
fidivrs
add
ficoml
xchg
aaa
imul
xchg
jp
shl
mov
cli
sbb
fnsave
and
xchg
push
push
push
or
push
dec
mov
push
fisubrs
rcrl
mov
mulb
insl
stos
ljmp
or
inc
sub
jnp
in
mov
xorl
mov
std
mov
sbb
xor
push
cwtl
and
add
insl
roll
nop
and
mov
pop
std
pushw
fldcw
stc
loopne
sbb
shll
test
mov
and
mov
bound
or
mov
cli
mov
add
dec
sub
xor
sti
rol
push
cmp
into
add
mov
les
adc
pop
pop
mov
mov
xchg
je
int3
pop
call
std
test
cli
pop
ds
xor
out
pop
dec
push
push
mov
dec
fwait
lret
lahf
push
in
aas
jp
or
cli
jae
popf
jo
adc
mov
inc
loop
daa
in
or
call
mov
clc
jge
ljmp
arpl
mov
pop
add
inc
mov
insb
pushf
cltd
cmp
cmc
mov
jmp
je
test
icebp
mov
idivl
cmp
and
xchg
mov
imul
jb
push
addr16
stc
xchg
jno
push
ret
jp
inc
aas
sbb
mov
das
push
adc
jl
stc
call
mov
dec
ss
cmpsb
stc
mov
pop
icebp
cmp
imul
movsb
jnp
or
mov
leave
ret
push
adcb
jne
push
test
or
ret
pop
clc
sub
jle
sbb
into
add
clc
mov
sub
mov
xor
imull
aad
decb
stos
test
pop
jl
xor
and
jb
frstor
push
sbb
insb
dec
inc
imul
fistps
adc
repz
cmp
gs
adc
mov
into
pop
adc
pop
lret
test
mov
imul
in
xor
stc
ffree
ljmp
cmpsl
aam
xchg
daa
aas
dec
sbb
adc
cld
or
enter
iret
int
cltd
mov
inc
fnstenv
sbb
shlb
inc
cmpsl
test
into
ret
push
ja
icebp
push
cmp
mov
jno
int
mov
int3
push
xchg
arpl
lock
shlb
sub
stos
dec
test
mov
addr16
std
test
add
add
loop
xchg
lods
sub
xchg
negb
mov
aas
mov
inc
adc
pmaxsw
cmpsl
jge
push
hlt
mov
add
mov
push
iret
and
sub
mov
out
mov
pusha
jb
jb
and
add
dec
fisttpll
xor
jecxz
push
outsb
mov
xchg
push
cld
mov
jbe
jle
or
lock
leave
decl
outsl
testb
xor
std
dec
jp
imul
sub
aam
movsb
or
ret
mov
xchg
cmp
push
popf
lods
inc
movsb
in
jb
xor
xchg
and
push
push
idiv
jbe
add
movsb
sub
into
mov
out
push
adc
or
sbb
sub
enter
mov
push
sarb
cmp
cmc
add
fstl
rolb
nop
stc
and
out
cmp
and
adc
enter
push
dec
mov
pop
test
aad
rcl
inc
push
jns
outsb
jmp
popa
or
jbe
cld
cmc
push
cwtl
pop
inc
jae
xchg
fs
or
fmuls
sub
or
adc
in
pop
test
mov
loop
cmp
and
pop
push
push
jae
dec
inc
mov
sti
xchg
popa
jnp
sub
and
or
inc
addr16
push
push
adc
cmpsl
sub
and
sbb
cmp
or
orb
push
rorl
inc
jb
fwait
push
or
sbb
movsb
inc
cltd
cmp
push
addb
xor
adc
xor
sub
mov
mov
cmp
or
mov
xor
subl
inc
mov
jns
mov
cmpsb
imul
cwtl
mov
in
sahf
jmp
add
jle
lods
xor
sub
jmp
or
out
into
push
out
sti
fstpl
int3
in
adc
in
xor
and
out
in
sbb
dec
mov
stos
xor
xor
test
and
and
cmpsb
add
mov
fs
mov
ret
push
into
pop
dec
fcmovne
pop
mov
adc
sbb
les
cwtl
mov
xchg
sbb
out
add
cltd
xchg
and
out
adcb
adc
and
mov
testl
lods
mov
push
cld
xchg
jb
cmpsb
mov
adc
and
inc
add
shlb
push
jo
xchg
stos
pop
dec
sbb
mov
adc
push
in
mov
mov
fxtract
stc
xchg
outsl
cwtl
push
xchg
lods
jae
stos
scas
lock
call
pop
adcb
sbb
enter
jne
into
out
ljmp
ret
or
xor
mov
loopne
xchg
pop
js
add
loope
test
xchg
pusha
xchg
out
rcrl
push
cmp
or
int
xchg
push
cmp
xchg
or
cwtl
pop
add
xchg
xchg
push
in
sub
push
mov
sbb
das
or
cwtl
mov
xor
dec
sub
mov
popa
dec
addl
sbb
sub
push
das
movsl
push
aas
iret
sti
pushl
shrb
cmp
lock
xor
sbb
push
sub
add
or
xor
push
mov
adc
scas
movsb
pop
fsubrl
scas
sbb
pop
mov
jle
push
ret
mov
mov
dec
sub
sahf
sub
xor
out
decl
aam
mov
or
jmp
ljmp
jne
in
sub
pop
push
ljmp
inc
push
ss
dec
or
and
cmp
dec
cmp
push
sahf
aas
cld
xor
cld
mov
cli
jecxz
leave
fisubl
pop
pop
add
das
pop
jo
sub
pop
cmpb
rorl
pop
jne
pop
push
xor
bound
inc
xor
addl
pop
lods
cmc
test
xchg
push
bound
jnp
int3
lret
push
mov
jns
idivl
mov
mov
lcall
sub
lds
es
stc
pop
pop
lock
cmp
jns
lods
movsb
xchg
adc
stos
add
push
add
mov
jmp
out
inc
jecxz
out
sub
dec
cltd
gs
into
pop
push
dec
mov
xor
push
mov
hlt
pop
cmp
cmp
out
test
sbb
lea
push
outsl
sub
mov
nop
xchg
push
test
lcall
add
pop
test
push
cmc
ljmp
ja,pn
xchg
push
sub
sbb
pop
mov
and
add
stc
test
ljmp
ret
sbbb
mov
leave
aas
add
pop
mov
inc
js
push
cmp
xor
movsb
push
or
push
xchg
cmc
sub
mov
push
xor
into
cmp
lods
arpl
repnz
jbe
dec
out
iret
out
xchg
sbb
inc
push
push
jl,pn
lods
pop
sbb
aas
mov
mov
push
sub
dec
mov
xchg
cltd
jo
daa
inc
xor
inc
dec
jl
jne
xor
push
outsl
daa
shrb
sub
xor
nop
call
cmp
sbb
and
mov
jnp
mov
inc
pop
cwtl
xchg
xchg
mov
inc
fucomi
inc
insb
sub
test
or
add
pop
inc
ds
xchg
aad
rorb
sub
mov
test
pop
fisubrs
fstpt
pop
clc
clc
xor
aas
mov
lea
lods
push
int
inc
loopne
sub
sub
je
push
or
insl
fs
adc
mov
std
test
cmp
mov
and
push
xor
fadds
in
jl
xor
rorl
sbb
cli
dec
outsb
les
popf
and
mov
shrb
cmp
mov
jmp
cmp
pop
pop
inc
out
aas
sahf
xor
sarl
dec
sti
pusha
jg
adc
sbb
daa
fldt
aaa
push
sti
adc
lcall
sahf
sbb
cmp
lahf
in
xor
or
out
leave
add
add
dec
sahf
fmull
fcoms
stos
sbb
inc
je
jbe
mov
xor
mov
push
jno
iret
popa
scas
cltd
adc
inc
xchg
stc
mov
jp
ret
clc
in
pop
cmc
pop
orb
shlb
ficoml
jnp
mov
pop
add
loop
push
mov
pop
call
inc
fst
cmp
adc
mov
fcmovb
fsubrs
std
or
jbe
int3
and
and
sbb
jb
cmp
ja
ret
xchg
cmp
rorl
push
ficoml
push
movb
push
in
fimull
mov
into
out
xchg
loope
out
loop
and
repz
xchg
rorl
fs
imul
pushf
jnp
xchg
fbstp
xor
stos
es
adc
mov
xor
xor
ret
add
into
inc
jg
cs
js
in
cltd
dec
mov
lock
dec
scas
inc
and
loope
mov
imul
jae
mov
hlt
add
mov
into
inc
mov
ljmp
fisubs
cltd
dec
leave
xlat
pop
xchg
pop
mov
cmp
sbb
xchg
pushf
arpl
sub
jecxz
in
test
mov
mov
sub
mov
xor
jo
pop
jo
adc
or
adc
lret
fsubl
lret
mov
loope
lret
mov
jecxz
rorb
pushf
ficoml
in
mov
xchg
adcb
lods
stos
aas
cmp
nop
int
inc
faddl
inc
dec
movsl
mov
xor
mov
inc
add
xchg
sahf
pop
into
cmp
push
pop
fisubs
inc
jg
ftst
pushf
and
outsb
mov
aad
dec
mov
inc
cmp
fsub
cwtl
enter
cmpsl
inc
cmp
dec
jge
sbb
cmc
loope
xchg
xor
dec
in
push
rolb
and
lahf
mov
ja
loopne
cmp
es
fmul
fldcw
test
inc
pause
pop
mov
inc
add
mov
leave
mov
shrl
mov
jg
ret
dec
stos
insb
jge
inc
sbb
loop
add
flds
cmp
movb
insl
pop
push
ror
mov
loop
xchg
call
pop
ljmp
inc
out
cmc
icebp
mov
hlt
jnp
mov
stos
push
outsb
or
add
push
out
fwait
pushl
mov
push
fcmovnbe
fsubrl
mov
cmp
jmp
ss
lods
and
sub
por
jnp
pusha
shrb
lods
jmp
in
mov
push
cmpsb
imul
xchg
fldcw
in
dec
lock
xor
xchg
sbb
repz
push
movsb
fisttpll
dec
jae
lret
stc
lret
xlat
cmp
pop
mov
repnz
rclb
movsl
bswap
test
gs
cli
sub
fwait
inc
rcrb
jg
faddp
mov
adc
cmpsb
jns
pop
xor
je
mov
inc
movsl
mov
xchg
movsb
push
pusha
aad
loopne
add
mov
and
stos
and
insb
cmc
fsubl
adc
dec
mov
dec
jb
cmp
mov
mov
loop
dec
addl
xchg
lock
insl
jle
sbb
ja
insb
je
mov
inc
push
jg
mov
ret
adc
shrl
and
adc
outsb
rcr
aad
adc
mov
and
or
mov
lahf
jl
sbb
lods
adc
lock
or
inc
sbb
jno
out
jge
inc
jbe
jg
jne
sbb
pusha
xor
hlt
cmpsb
sub
out
and
xchg
xchg
loope
cmp
and
dec
stc
daa
out
arpl
ljmp
dec
sub
aad
sbb
or
outsb
dec
jbe
cmpsb
lods
pop
inc
das
aas
mov
push
aaa
xchg
out
xor
inc
int
aam
shr
adc
test
ss
dec
sub
mov
push
imul
sbb
sub
adc
aam
push
cwtl
adc
bound
jb
std
or
mov
loop
jg
das
fdivr
fsubrl
into
jne
mov
or
push
pop
inc
pushf
sbb
stos
cmpsl
jle
inc
loope
repnz
jg
jne
ret
cmp
leave
pop
aam
test
sahf
push
scas
dec
scas
loope,pt
dec
out
jbe
std
mov
repnz
jo
test
sbb
divl
repnz
or
xor
mov
sub
push
loopne
mov
mov
mov
test
aad
pop
into
push
pop
lret
inc
movsl
and
movb
mov
insb
pusha
arpl
repz
xchg
cmp
stos
packsswb
push
aas
and
ja
das
fmuls
inc
je
sub
pop
out
ret
pop
lods
pop
mov
pop
xchg
test
mov
stos
ja
fcmovb
push
xchg
jae
mov
imul
movsb
into
jno
ds
fxch
mov
xchg
jmp
ljmp
je
xchg
add
in
leave
adc
outsb
cld
fistpll
add
mov
inc
xlat
xor
shr
pop
nop
aad
shr
sub
into
inc
push
mov
imul
clc
aaa
sub
lods
fstl
pop
xchg
sbb
jnp
fldcw
lods
hlt
add
add
dec
ds
push
xor
and
xor
popa
sbb
mov
pop
pop
xorb
jp
loopne
mov
xchg
inc
stc
fwait
cmc
scas
xchg
jg
orb
mov
cmpsl
movsb
into
pop
aad
loope
xchg
xchg
lds
aad
js
mov
mov
and
and
test
sbb
std
lret
movsl
out
rclb
jmp
lea
dec
and
loop
jo
xchg
mov
and
test
lret
cmp
mov
inc
dec
pushf
jo
notl
add
inc
jno
sbb
decb
out
imul
fs
mov
add
cmp
stos
pop
xor
push
fcompl
lock
jg
lds
pop
mov
inc
adc
inc
pop
popa
jle
add
cmp
and
sub
sbb
push
dec
nop
insb
pop
mov
jae
jp
mov
rcll
test
insl
push
ds
test
and
aam
inc
rep
int
data16
cmp
popa
shrl
or
sub
adc
data16
mov
mov
cmc
pop
ficomps
lcall
xor
jge
ret
jl
or
test
insb
mov
scas
ljmp
int3
xchg
fs
jmp
mov
dec
push
call
and
mov
popa
pushl
mov
push
adc
push
or
cwtl
mov
in
ret
add
cltd
in
jge
sub
cwtl
dec
ret
ljmp
lods
icebp
mull
in
push
adc
xchg
pop
cmpsl
dec
jg
cmp
inc
lea
mov
sbb
dec
loop
fs
inc
or
push
int3
psrad
mov
cmp
pop
and
mov
push
push
cwtl
pop
sub
fwait
add
shrb
ja
in
mov
out
dec
xchg
mov
das
jg
mov
dec
xchg
xor
jge
xchg
push
negb
push
arpl
rep
cmp
xchg
xchg
jno
inc
xchg
out
out
sbb
mulb
cmp
mov
cltd
pop
daa
aad
add
pop
mov
jg
pop
cmp
mov
xchg
in
add
xor
cmp
nop
pop
in
sbb
cltd
push
pop
lods
mov
add
pop
cmp
aaa
or
sbb
xorb
ret
movsb
sbb
pop
jmp
je
dec
push
dec
sub
cs
and
cmp
icebp
add
mov
aad
jbe
movsl
mov
push
push
jmp
shrl
mov
cli
js
add
mov
mov
jns
mov
push
mov
mov
cmp
xchg
popa
call
sbb
mov
push
test
push
xor
in
jb
jns
and
xchg
dec
fdivr
jmp
subb
mov
mov
jo
inc
mov
push
cmpsl
in
das
push
xchg
call
sub
mov
xchg
out
addr16
or
cld
loope
push
pop
jns
cwtl
xor
mov
aas
or
lock
mov
mov
pusha
add
cmp
mov
repnz
cmp
mov
jge
inc
xor
push
hlt
je
pop
xchg
jo
adc
enter
addr16
fadds
or
fidivs
out
push
fidivs
and
adc
in
sbb
adc
sti
out
adc
repz
fisubl
jns
and
dec
arpl
pop
xor
cmp
mov
in
shlb
cmp
js
call
jno
incb
mov
repz
jmp
push
jle
aad
mov
sub
fmul
aaa
aaa
pop
mov
sbbl
shll
xchg
test
popa
int3
repz
fwait
in
es
loope
insl
xchg
cld
mulb
lahf
pusha
fisubrl
mov
out
mov
call
jae
jl
sub
jb
xchg
push
ret
ljmp
add
outsl
enter
call
jg
sbb
ja
or
xor
into
push
lods
fs
pop
pop
mov
arpl
cmp
inc
ja
cmpsl
insl
dec
push
out
inc
sbbb
imul
imul
mov
or
sub
fs
shrl
ret
aam
or
scas
rcrb
arpl
shrb
jne
mov
imul
jmp
mov
cmpsb
xchg
mov
shrl
pop
leave
movsl
ret
fildl
dec
pop
mov
jae
stos
add
xor
lods
sbb
jp
enter
dec
xchg
mov
sbb
dec
js
fbld
outsb
mov
sub
adc
je
enter
pop
push
xchg
into
mov
add
dec
jl
es
rcll
mov
xchg
ret
movsb
aaa
mov
aam
pop
sub
cli
push
or
cmpsb
insb
insl
repz
mov
sti
cmp
mov
mov
push
shlb
mov
loopne
add
sbb
cmp
dec
cmp
lods
movsl
hlt
mov
shrl
daa
mov
test
negb
dec
test
movsb
jns
add
jb
addr16
inc
std
xchg
pushf
divb
mov
mov
mov
lods
popa
inc
pop
lea
adc
outsl
xchg
loop
mov
loopne
nop
mov
push
pop
out
repnz
pop
push
insb
jne
push
xchg
shrb
addr16
adcb
test
pop
in
cs
imull
sar
cmp
mov
pop
mov
inc
sahf
and
das
enter
popa
jno
mov
push
imul
cmp
push
adc
xchg
sub
in
cmp
cmc
xchg
mov
add
pop
faddl
push
jl
xchg
jmp
dec
test
inc
push
fwait
mov
cmc
sub
adc
jp
lret
test
jg
int
inc
xor
shrb
ljmp
scas
xchg
add
shlb
jg
js
int
jp
jne
stos
ss
cmp
mov
insb
and
dec
dec
cmpsb
xorb
mov
jnp
shlb
arpl
aas
lcall
orb
cld
call
pop
out
push
je
lea
outsb
inc
sbb
jecxz
xor
and
adc
pop
sbbl
mov
dec
or
test
pop
pop
pushf
jnp
les
cmp
cmp
repz
pop
cmp
sub
mov
jg
push
scas
cmpsb
mov
mov
fldenv
js
sbb
push
out
and
je
out
hlt
aaa
jb
insb
mov
mov
inc
inc
xchg
dec
sub
xchg
pop
pop
aam
aam
jmp
data16
pusha
rcll
adc
aaa
sti
fcoms
add
and
adcb
sbb
jbe
adc
pop
or
xchg
enter
lret
mov
in
sbb
xor
sub
cmp
movsb
mov
roll
adc
or
int
dec
mov
mov
ds
test
int
in
ss
popl
pop
in
arpl
sahf
es
mov
and
fwait
fwait
push
stc
pusha
push
leave
ds
outsb
pop
push
add
push
or
imull
inc
jo
fwait
out
jg
mov
clc
mov
adc
mov
mov
push
scas
or
stos
cmp
stos
push
mov
sub
bound
jmp
lods
sub
scas
arpl
xor
lea
arpl
adc
jno
out
enter
or
sub
inc
stos
mov
jno
mov
stc
mov
sub
push
icebp
lret
in
enter
pop
inc
cmp
mov
inc
in
push
inc
mov
cmc
insb
xchg
mov
dec
aam
cld
jle
mov
push
sbb
dec
or
inc
jne
incl
fstpt
fwait
cld
std
xor
push
jbe
dec
mov
mov
test
adc
sbb
mov
mov
pop
jbe
pop
aam
mov
xchg
mov
jg
inc
loopne
xchg
adc
xchg
in
dec
pop
cpuid
sub
xchg
loope
mov
cmp
xorb
repnz
mov
pop
dec
pop
inc
pop
fs
cmp
sub
or
xor
movsb
jmp
jns
sub
and
pop
dec
pop
jg
xchg
rclb
cs
pmaxub
mov
movsl
ds
ljmp
sub
les
dec
dec
outsl
out
fstl
cmp
push
ss
jg
inc
hlt
pop
lods
xchg
mov
cli
inc
mov
divl
xchg
ds
pop
repz
lea
ss
xor
lcall
sub
loopne
jecxz
gs
or
and
cwtl
loopne
sbb
lret
out
dec
mov
subb
sahf
insb
jns
lock
andb
inc
cmp
pop
inc
movsl
xchg
xchg
mov
or
repnz
insl
ds
mov
push
jge
adcl
xchg
addb
mov
ss
add
shlb
mov
dec
pop
dec
ljmp
jle
mov
sti
std
div
rcrl
cmp
sbb
add
xlat
push
push
ljmp
add
pop
pushf
cmp
sahf
repz
mov
push
mov
mov
aam
aam
dec
xchg
push
insl
in
js
sbb
add
xor
mov
xor
cli
bound
cmp
in
add
pop
pop
mov
mov
sbb
push
sbb
movsb
das
push
mov
loopne
lds
and
lret
mov
adc
ret
out
enter
inc
inc
pop
mov
mulb
mov
adc
xor
idivb
out
js
test
rcr
fsubr
add
ds
push
inc
sarb
sarl
out
in
lods
aas
push
sar
jns
jbe
cmp
adc
sti
push
in
cmp
aaa
dec
jle
subl
arpl
ss
sub
adc
sbb
mov
dec
movsb
push
lahf
int3
idivb
and
sbb
mulb
dec
sub
lcall
jg
mov
lock
mov
les
jbe
and
jl
out
rcrb
aas
sbb
data16
xor
cmc
int
add
std
pop
mov
fld
pop
jbe
adc
icebp
ficomps
mov
xchg
push
inc
fisttpll
adc
fidivrs
insl
das
fcompl
cmp
add
loop
push
fimull
mov
jae
outsb
in
and
fdivl
mov
lods
std
or
rcr
or
clc
mov
xchg
push
jp
adcb
jmp
gs
push
lret
int
stos
ret
dec
movsb
stos
jb
test
or
mov
imul
xlat
in
adc
push
fdivr
movsl
pop
sbbl
cmp
repnz
push
rcrb
sbb
sbb
push
and
sub
fdivp
nop
cwtl
push
out
dec
js
outsl
pop
movsb
jb
dec
push
jle
sbb
mov
fwait
jmp
and
adc
sbb
enter
out
loop
lcall
in
xlat
adc
data16
or
and
cmpsb
cmpsl
push
xchg
push
mov
xchg
pushf
mov
mov
out
push
leave
je
lret
jl
adc
cmp
rorb
pop
bnd
iret
int
or
enter
sar
cltd
mov
or
mov
das
add
sbb
test
adc
mov
xchg
jmp
cmova
or
insl
and
or
and
out
sbb
cmp
xor
lock
mov
rcr
rolb
out
xchg
jle
and
std
lock
mov
mov
ja
arpl
jae
scas
rol
mov
xor
pop
add
inc
pop
jp
test
lea
sbb
cmp
dec
ret
sbbl
shl
movsl
out
and
inc
cmp
sub
push
icebp
cmpsl
sbb
add
mov
inc
mov
xor
jno
popa
and
hlt
xchg
fadds
cmp
out
sbb
movsb
and
out
adc
xor
push
or
sbb
frstor
xchg
inc
pop
scas
inc
push
cwtl
dec
adcl
push
stc
mov
xor
or
or
cmpsb
imul
sti
sub
jle
inc
push
push
and
cmp
cmpsl
lahf
sbbb
icebp
mov
lea
add
mov
push
testb
jne
out
and
je
das
sub
push
adc
inc
lock
dec
mov
rorl
out
rclb
add
call
shlb
ljmp
push
xchg
jb
sbb
cltd
popf
daa
adc
dec
into
cmp
xor
xor
mov
stc
addb
fldl
jge
push
jmp
test
and
and
jp
scas
dec
shll
xor
xchg
push
int3
sbb
sti
push
xlat
lahf
mov
ja
jno
add
idiv
leave
lods
mov
pop
gs
rcrl
mov
add
loope
mov
out
fmull
insl
pop
xor
mov
inc
loopne
imul
arpl
pop
push
jle
add
insb
outsl
flds
cmc
mov
das
shlb
xor
cmp
lcall
daa
pop
in
mov
stos
sub
add
dec
test
loop
flds
stos
sarl
fwait
push
sub
cs
out
lret
jp
cltd
mov
stos
sahf
je
mov
or
faddl
inc
mov
inc
shll
dec
adc
int
mov
cmpsl
inc
pop
fsts
inc
jnp
mov
push
cmc
push
mov
lds
cli
sub
cmp
pop
sub
outsl
or
mov
push
insb
push
push
ret
lods
and
sub
outsl
clc
xor
adc
inc
and
retw
stos
mov
sub
popf
mov
jbe
jmp
pop
and
add
xchg
mov
in
ffree
outsl
adc
xlat
pop
mov
add
jmp
jnp
sub
jecxz
icebp
xchg
and
lock
js
test
imul
sbb
sbb
out
jl
mov
cmp
out
mov
add
pop
in
dec
sbb
scas
sbb
fldt
mov
lret
hlt
sbb
ficomps
jl
fwait
hlt
xlat
fisttpll
inc
pusha
idivl
cmp
jp
jnp
scas
add
or
dec
stos
cld
add
mov
mov
sub
sub
repnz
insb
or
idivl
sbb
inc
inc
cs
lods
mov
fisubrs
clc
adc
lahf
lock
push
mov
adc
icebp
cmpsb
es
adc
and
lcall
imul
jae
adc
or
clc
sub
xor
sbb
sahf
mov
jge
cmc
sarb
cmp
mov
pop
mov
sbb
lods
jb
mov
lahf
ss
xchg
lods
shlb
out
mov
xchg
mov
cmp
add
mov
mov
movsb
paddsw
sarb
mov
adc
push
sbb
jg
imul
cs
mov
cmp
stc
dec
pop
sbb
fcoms
mov
and
adc
rcr
inc
xchg
lods
enter
jl
jo
jle
jg
insl
das
push
and
lret
mov
decb
int3
mov
addr16
jl,pn
mov
mov
ja
mov
cltd
add
lods
cmp
mov
aaa
sbb
stos
fptan
add
cmp
or
popa
cld
sti
fldlg2
adc
xor
jl
jbe
into
ljmp
pop
jecxz
jmp
cmc
xor
xor
bound
push
loope
fisttps
rcll
jbe
adc
xor
add
ret
sbb
sti
cmp
scas
test
test
mov
mov
into
push
xor
mov
and
lods
mov
cltd
lcall
fcoml
in
and
xor
dec
dec
scas
outsl
fisttpll
cmp
push
xorl
je
das
pcmpgtw
mov
adc
push
cli
dec
int
stc
sbb
add
loopne
in
cs
push
stos
xor
cs
and
loop
mov
pop
frstor
js
jge
in
xchg
xchg
fists
addr16
pop
pop
jmp
or
adcb
mov
data16
xchg
or
stos
in
cmp
sarb
in
push
push
int3
adc
mov
pop
push
dec
sub
mov
or
daa
hlt
xrelease
mov
loope
fucomp
in
dec
call
mov
dec
shll
mov
inc
sbb
add
mov
fnsave
inc
sub
fwait
and
lock
nop
lock
cmc
jmp
push
mov
mov
dec
ficomps
add
sub
lock
addr16
fwait
sti
pop
mov
in
int3
push
push
stc
mov
mov
mov
cmpsb
mov
push
lret
adc
fimull
xlat
mov
dec
xor
jp
lods
repnz
rcrl
stc
dec
loop
fistl
sahf
scas
push
int3
mov
vunpcklps
call
cmp
out
nop
sqrtps
sbb
scas
testb
add
mov
lret
repz
stos
shl
sti
loop
push
ret
cmpsb
sbb
mov
inc
popl
push
lret
lods
inc
loopne
out
pop
imul
scas
mov
xchg
icebp
leave
sbbl
lret
dec
aas
mov
mov
lcall
add
xor
jmp
jge
push
ss
sub
sbb
adc
les
outsb
inc
repz
add
in
xchg
fidivrs
adc
rcl
mov
pop
push
test
push
repz
pmaxub
int3
lock
pop
gs
push
cmp
movsb
std
xchg
jmp
add
adc
sahf
mov
xor
mov
ret
jno
jecxz
dec
mov
daa
xchg
mov
pop
ffreep
sbb
leave
sarl
xchg
notb
fdivrs
mov
jg
jne
mov
mov
xchg
adc
fsubr
ds
mov
adc
mov
xchg
sbb
pop
mov
sbb
shlb
fcoms
out
mov
jg
or
xlat
mov
push
mov
testl
mov
dec
stos
imul
scas
shrb
lock
jge
sub
fs
int3
sub
jmp
pop
lahf
insl
je
jae
jns
sub
fstps
adc
push
in
lods
and
test
aad
adc
cmp
sbb
sbb
dec
or
mov
mov
mov
xchg
adc
shl
inc
add
orl
jmp
jnp
cmp
std
mov
push
pop
adc
jmp
aad
xchg
dec
pop
add
jne
push
ss
stc
aad
xchg
pop
jnp
dec
and
mov
pop
aas
jno
into
out
lods
cwtl
je
push
lret
pop
dec
lret
pop
push
jecxz
sbb
ret
pop
adc
and
or
ret
jg
es
dec
lcall
je
not
mov
ror
ljmp
std
scas
mov
insl
movsl
jecxz
jge
mulps
jle
sbb
jge
outsb
aaa
mov
ljmp
pop
nop
ret
or
fprem
pop
adc
cld
and
in
iret
xchg
das
test
mov
jae
jp
fildll
divl
shlb
xor
cltd
mov
sbbl
mov
sub
scas
pop
jge
sub
sbb
jecxz
fcomps
fsubp
popa
aad
mov
fwait
cmp
inc
mov
mov
in
clc
pop
orl
int3
aam
pop
or
dec
cmp
add
sbb
jns
xchg
xor
adc
sarb
pop
inc
repnz
imul
pop
out
rol
or
shrb
roll
xlat
scas
test
dec
movsb
enter
jg
idivb
add
das
das
cmp
cld
dec
xor
ljmp
push
add
mov
cwtl
mov
push
mov
jae
loop
add
cld
iret
pop
xlat
push
inc
pop
mov
imul
enter
pop
sub
call
mov
push
inc
cmpsb
mov
sti
add
xor
push
mov
call
mov
rol
cmp
xlat
xor
mov
xor
sbb
push
ss
mov
xor
add
lcall
movsb
mov
xlat
js
pop
cmp
aaa
inc
jle
jmp
and
push
pop
lock
jb
mov
fidivrs
sbb
call
mov
leave
lret
push
psrlw
pop
xchg
outsb
lret
push
or
cs
xchg
in
loop
int
pusha
or
popf
pop
sub
sarb
sub
push
jne
jne
cmp
push
mov
loope
jle
inc
repnz
fs
inc
jns
mov
dec
mov
imul
cmp
mov
pop
push
pop
xor
mov
mov
add
testl
and
cmpsl
mov
in
dec
mov
pop
mov
adc
cmpsl
sub
and
push
lods
rcrb
jg
mov
mov
and
cs
xor
jp
in
lock
fsubr
shll
dec
loopne
mov
scas
movsb
adc
stc
out
or
fs
ret
test
adc
cmp
cld
sbb
sub
dec
and
mov
or
pusha
cltd
xor
mov
loope
ret
mov
jp
mov
fisubrs
fsubrl
cli
imul
sbb
mov
xlat
movsl
pusha
bound
mov
or
mov
xor
fiadds
dec
daa
xchg
movb
adc
ljmp
mov
loopne
test
push
arpl
orl
nop
jns
popa
jmp
std
scas
cmp
mov
inc
adc
xor
push
inc
mov
xchg
call
mov
les
mov
xchg
jg
cwtl
dec
inc
rorb
or
out
loopne
xchg
fwait
sub
bound
btr
xchg
addl
jno
dec
sub
add
sbbb
in
pop
jae
out
shl
fdivs
mov
add
adc
push
sub
mov
rorl
mov
imul
sbb
iret
pop
aas
jno
mov
das
pop
cmp
dec
mov
jg
xor
into
xor
dec
pop
mov
lahf
dec
out
mov
xlat
or
or
je
ret
push
mov
add
push
stos
xchg
fildll
loope,pt
xchg
test
and
mov
mov
lea
xchg
jg
mov
imul
jp
sub
jno
lods
call
sub
bound
sub
pop
test
repz
test
mov
ja
push
mov
inc
sub
xor
pop
jle
out
mov
mov
ret
mov
in
mov
sub
les
std
push
repnz
popa
movsb
repnz
cmpsb
sub
gs
rcr
jno
and
pop
and
mov
sbb
outsb
aam
xor
mov
and
loope
sbb
xor
mov
arpl
dec
hlt
ret
stos
cmp
push
push
xchg
mov
adc
insl
and
cli
push
jns
dec
sbb
les
inc
sbb
cltd
dec
popf
popf
push
adc
adc
mov
mov
mov
fisubrl
mov
popa
lock
sbb
inc
bound
xchg
mov
or
or
dec
inc
sub
fsubrs
std
mov
mov
popf
insl
cmp
push
pop
xchg
inc
xchg
mov
ret
lcall
pop
dec
pop
repnz
jo
push
rcrb
lret
and
and
dec
in
jp
sub
adc
dec
lahf
jmp
dec
mov
jmp
ficompl
ljmp
or
push
mov
je
and
cs
jno
push
push
es
shll
scas
stos
mov
inc
inc
aaa
scas
cmpsl
gs
stc
pop
mov
add
mov
dec
and
inc
mov
aad
jb
pop
call
ret
push
xchg
and
fsubl
mov
inc
push
and
pushf
imul
lods
add
aam
les
sbb
in
rolb
fnstenv
sbb
das
hlt
xchg
es
int3
rolb
movsb
insl
stos
cmp
pop
xchg
push
jle
ret
mov
lcall
das
repnz
cmp
push
stc
pop
movsl
addr16
test
add
jb
insl
push
add
cmp
mov
test
shrl
jb
lock
aam
mov
sbb
cmpsl
push
imul
mov
inc
and
out
pop
cmp
and
jmp
mov
fistpll
push
and
adcl
mov
and
and
add
repnz
adc
mov
out
in
out
mov
xor
xchg
lock
cmp
jmp
insb
int3
mov
adc
push
adc
lret
pop
adc
push
in
or
inc
mov
sub
int
lret
xchg
cmp
loope
scas
minps
nop
stc
imulb
cmp
mov
pushf
mov
mov
not
mov
rolb
ret
inc
push
push
fists
shll
dec
mov
xor
jb
std
cmp
fnstenv
jmp
or
je
dec
leave
ja
mov
xchg
rolb
addr16
jg
cld
mov
mov
or
pop
cmc
jno
and
or
mov
or
test
sahf
push
repnz
jmp
pop
dec
inc
add
js
or
jns
sub
push
jecxz
cs
inc
ja
fildl
xchg
xor
sub
sbb
rorb
cs
push
fistpl
mov
cmp
push
loope
ret
movsb
fstl
xor
sbb
xchg
or
lock
jp
dec
shlb
lods
jae
sti
dec
adc
icebp
cmp
sub
push
std
inc
ja
push
mov
or
pop
je
shll
mov
icebp
jl
mov
cs
jno
pop
adc
jge
xchg
repnz
cs
xorl
scas
xor
into
sub
push
mov
sub
cmp
xchg
je
pusha
inc
push
mov
cmc
cmc
out
xor
int3
mov
jge
test
scas
iret
jo
push
jae
dec
sub
fimuls
pop
insb
les
ljmp
inc
sub
inc
je
sub
rclb
and
insl
insb
popa
in
cltd
insl
mov
sarb
andb
sbbl
push
dec
mov
sarl
push
rorl
in
xor
jle
in
push
je
icebp
insb
jbe
jae
jle
jae
faddp
mov
xchg
int
mov
pop
push
cmp
or
sbb
mov
iret
jge
xchg
sarb
int3
or
xchg
data16
loop
adc
movsb
cmp
jbe
dec
sbb
imul
dec
pusha
add
xchg
jle
mov
dec
in
icebp
jp
mov
mov
push
mov
fwait
out
xchg
mov
and
and
leave
test
retw
fists
xchg
push
inc
and
pop
pop
js
xchg
xchg
add
test
jg
repz
cmp
insl
fistpll
add
imul
stos
jl
sub
lds
rclb
hlt
and
cmp
push
mov
push
cmp
push
mov
pcmpeqw
ret
mov
xlat
int3
sub
enter
push
stos
int3
xchg
mov
xor
jge
shrb
notb
addb
imul
adc
leave
outsl
jbe
push
notl
pop
lods
filds
lds
add
fstpl
jp
addl
adc
xor
scas
outsl
ret
adc
iret
mov
and
cmp
cmpsb
orl
push
ja
xchg
mov
loopne
shll
dec
notl
jno
push
xchg
add
test
cltd
inc
jmp
aas
dec
push
test
mov
loop
mov
cmc
in
loope
adc
adc
scas
inc
jp
lret
pusha
xor
sbb
and
std
xchg
mov
into
jl
mov
repnz
mov
push
sahf
push
stos
fldenv
pushl
push
push
out
dec
jle
sti
jl
jmp
inc
stos
push
inc
fstpt
push
mov
adc
scas
scas
in
inc
mov
ror
or
or
sbb
inc
sbb
cltd
xchg
xchg
data16
sbb
cmp
xchg
mov
mov
les
adc
bound
jno
stos
in
outsb
push
jge
in
hlt
sbb
test
cld
mov
out
mov
hlt
inc
xchg
loop
scas
add
imul
loope
addr16
gs
stos
icebp
sub
fwait
mov
imul
js
cwtl
inc
aam
cwtl
test
int
call
pop
mov
out
pop
dec
sbb
adc
js
cltd
jno
add
movsb
mull
push
add
jbe
popa
and
mov
jg
dec
out
push
mov
jmp
je
lea
cwtl
or
push
test
pop
shrl
add
sahf
insb
scas
cld
add
mov
inc
xchg
rorl
loopne
cmpsb
leave
scas
pop
fstl
out
xchg
or
inc
test
inc
adc
pop
es
cmp
aad
enter
and
dec
je
dec
lods
aaa
int3
mov
out
icebp
and
cmp
outsl
nop
addr16
sbb
adc
or
and
cld
xor
push
add
inc
mov
jnp
dec
hlt
mov
xchg
dec
xchg
dec
roll
mov
mov
dec
jnp
dec
insb
fnsetpm(287
sub
in
add
call
es
sub
mov
inc
sub
incl
xor
dec
jo
cmp
cld
movsl
insl
ror
fstpl
out
add
dec
fdivl
mov
mov
or
mov
jnp
jmp
mov
pop
sub
pusha
pop
jno
sub
sbbb
arpl
push
dec
pop
mov
xchg
xchg
dec
cmp
ljmp
inc
sbb
outsb
sub
or
pop
cwtl
out
mov
fsub
popa
cwtl
mov
rdtsc
addr16
fmul
aaa
rorl
out
xor
or
jmp
mov
nop
out
in
pop
movsl
out
mov
adc
outsl
pop
sbb
xor
mov
insl
arpl
push
sbb
js
out
scas
cmp
repnz
or
out
pop
adc
cmp
sti
mov
fisttpl
xor
popf
les
xchg
push
mov
jb
pop
aam
ret
xor
insl
ds
into
insl
fucomp
or
push
jle
pop
push
dec
pop
push
arpl
xchg
mov
and
insb
sahf
hlt
jmp
fdivrs
fnstenv
xor
pusha
pop
jl
imul
ja
inc
cli
les
outsl
das
rep
enter
vandnps
mov
aad
inc
sbb
fnsetpm(287
sbb
jae
shrl
cmp
sbbl
into
outsb
insb
js
inc
mov
shll
dec
jmp
repz
inc
jne
popa
in
fwait
mov
mov
mov
add
dec
rol
mov
daa
lock
jae
adc
sbb
addr16
jmp
cmpsl
mov
cmp
or
fiadds
cmc
xchg
sbbl
fistpll
repz
inc
xor
fildll
in
inc
fildl
js
aam
fisubrs
int
cmp
flds
lret
loope
imul
add
fcmovnb
das
mov
ret
xor
out
jmp
or
rorb
mov
in
mull
pop
and
out
movsb
jne
insl
insb
sub
push
jo
inc
mov
push
pop
xchg
adc
lock
sti
mov
adc
mov
pop
sub
out
enter
setnp
mov
mov
or
fdivrs
shr
xchg
popf
loopne
gs
hlt
dec
mov
or
dec
loopne
lods
pop
sbb
add
mov
cmp
mov
mov
push
fs
jae
cli
xchg
xchg
aad
aaa
loope
sbbl
ss
mov
jnp
test
sarb
push
lea
out
sub
push
insb
xchg
sbbb
mov
mov
test
data16
nop
xor
call
int
jge
adc
jg
nop
push
add
mov
es
cmp
into
jnp
pop
stos
leave
inc
mov
inc
push
jmp
arpl
test
ds
sahf
and
lds
mov
addl
sar
enter
gs
jle
bound
and
or
js
and
cmp
jp
ljmp
insl
fs
std
lea
bound
push
and
mov
stc
adc
js
shrb
movsl
push
lahf
pop
adc
leave
xor
mov
sti
lods
fnstcw
aad
in
out
std
jle
mov
fwait
xchg
mov
sub
shll
sub
inc
add
arpl
imulb
arpl
sbb
sub
adc
sbb
mov
and
inc
jne
xor
outsb
cmpsb
mov
das
sbb
arpl
js
out
inc
loop
and
repz
mov
adc
stos
dec
popa
mov
vunpcklpd
mov
sub
sbb
xor
xor
repnz
dec
sbb
and
jbe
repnz
pushf
push
xor
movsb
clc
cmpsb
ret
movsl
mov
int
rolb
ss
or
cmp
sbb
add
insl
ds
cmp
test
lds
rcll
insl
aad
add
pop
jmp
mov
ljmp
add
rolb
jb
cmp
mov
mov
mov
adc
push
nop
outsb
out
lret
pop
out
int
sarb
or
cmp
cs
rolb
inc
test
mov
mov
mov
sbb
xchg
rsm
fmuls
jg
jb
xcrypt-ofb
cmpsl
add
dec
cmpl
aas
dec
clc
push
mov
adc
mov
mov
es
shlb
mov
insl
mov
into
out
int
dec
pushf
mov
enter
jp
mov
and
push
mov
cmp
jp
out
icebp
cmpsl
xlat
xlat
lcall
lcall
aad
loope
es
inc
mov
imul
jl
dec
push
ret
sarl
popa
and
xchg
push
loopne,pt
sub
cld
inc
out
mov
dec
xchg
cli
int3
xor
std
mov
js
push
dec
jb
int
orb
scas
aam
pop
jmp
cmp
sbb
xchg
lahf
popa
divl
int3
sbb
mov
or
stos
and
adc
in
jnp
fcmovne
xlat
jnp
cwtl
push
adc
jl
addr16
mov
stc
test
adc
js
adc
outsl
add
movsb
mov
mov
roll
mov
adc
fldcw
push
push
je
loope
fldl
movaps
push
jle
pop
jl
ja
pop
jnp
test
and
mov
jb
fnstcw
cltd
push
mov
lahf
jno
jmp
dec
and
outsb
lret
loope
jl
adc
push
pop
and
pop
subb
and
or
mov
xchg
notb
jbe
cmpl
mov
jae
cmp
xor
mov
mov
sbbb
scas
jp
push
subb
cmpsb
lock
mov
pushf
fsubr
and
gs
loopne
ret
xor
push
push
cltd
int3
scas
mov
in
test
stos
sub
insl
addb
mov
push
mov
or
or
or
mov
popf
adc
push
shll
movsb
enter
sub
in
inc
push
fcoms
and
gs
call
xor
ds
addr16
push
push
adc
push
es
stos
sti
test
inc
repnz
cwtl
push
mov
or
jl
push
movsb
arpl
enter
shlb
dec
add
fwait
push
push
mov
out
sbb
jno
push
lret
cli
xor
xchg
pmaxsw
xchg
cmpl
stc
push
xchg
add
mov
lcall
loop
fists
push
sbb
rolb
popf
mov
xchg
hlt
ss
sub
lds
in
add
int
out
cmp
xor
mov
shll
pop
pop
dec
xor
mov
shl
adc
inc
in
cwtl
mov
mov
imul
in
or
sahf
inc
out
testb
add
inc
aas
cltd
mov
notl
sub
jge
xchg
mov
sbb
insl
into
clc
mov
push
pop
push
and
sbb
xchg
ja
add
sbb
add
push
inc
mov
inc
test
cmp
and
xor
mov
inc
jne
outsl
movsb
jne
xchg
decl
mov
mov
sbb
int
ficomps
loop
call
ret
mov
aad
insb
sub
and
add
sti
push
cld
hlt
shl
outsb
mov
rcrl
lret
out
sbb
jge
das
dec
imul
push
mov
inc
push
sar
outsb
sbb
mov
ljmp
es
cmpsl
push
mov
insb
jbe
xchg
mov
dec
lahf
aaa
je
push
xchg
imul
push
mov
shrl
push
rolb
arpl
jb
xor
or
or
xor
test
ffreep
jnp
xorb
bound
rorl
in
cmp
mov
into
inc
jb
cmc
mov
xchg
xchg
xchg
gs
and
insb
inc
movsb
push
out
or
jle
xor
push
lods
adc
dec
scas
je
inc
imul
mov
je,pn
pop
cmpsb
clc
xorl
pop
fisttps
fldcw
mov
push
add
out
dec
sbb
dec
movhlps
pop
mov
mov
push
xor
sets
icebp
lods
add
inc
pop
pop
pop
xchg
cltd
and
shll
xor
fsub
jb
add
adc
out
pop
ret
push
lcall
out
jmp
pop
dec
les
mov
add
idivb
into
adcb
cltd
push
lods
add
in
sbb
cld
or
das
out
aaa
sbb
add
ds
pop
loope
jns
mov
inc
push
add
std
nop
push
jnp
adc
push
lea
adc
adc
push
push
popf
or
ds
out
sbb
mov
adcl
shr
dec
data16
out
jno
bnd
shll
pop
inc
test
mov
addl
or
cmpsl
or
popf
push
xchg
int
push
jge
adc
pop
out
out
mov
imul
cmp
int3
pushf
dec
xchg
push
adc
cmp
pop
push
leave
adc
mov
push
mov
outsb
pushf
dec
mov
pop
sbbl
mov
cld
mov
or
js
int3
cmpsb
mov
push
shlb
test
cmp
pushf
or
push
pop
mov
pop
pop
sbb
cs
or
jb
cmp
inc
sar
fmull
cli
and
testb
dec
xchg
and
xor
dec
mov
jno
fldl
xchg
sbb
andb
scas
int
cli
dec
ja
lods
dec
xor
add
pop
scas
ljmp
lea
data16
cltd
movswl
add
lds
mov
add
add
lcall
dec
pop
stos
push
jecxz
aas
ret
rcll
imul
cltd
or
loope
insb
popf
sbb
inc
xor
out
clc
adc
loopne
test
jecxz
call
js
mov
test
dec
cmpsl
test
cwtl
xchg
mov
push
mov
insb
fwait
sub
cmp
sub
pop
out
jno
pcmpeqw
test
ja
push
and
movsl
mov
test
push
in
pop
dec
xchg
ds
push
repnz
fisubrl
mov
lret
movsb
add
loope
pop
iret
es
out
sbb
dec
sub
xchg
ja
test
xchg
push
push
aas
add
setge
popf
aad
mov
xor
leave
nop
mov
add
mov
jnp
leave
stos
xchg
and
cld
sub
jo
clc
ds
inc
shrb
pop
dec
jb
push
xchg
mov
roll
stc
adc
js
les
adcb
sub
sub
push
xchg
push
jecxz
or
aad
test
divl
push
sub
or
pop
outsb
jl
push
mov
jne
push
std
rcll
pusha
rorb
jge
ds
sub
dec
cmp
push
pop
and
mov
adc
mov
sub
sbbb
flds
rolb
inc
rcll
sbb
or
lcall
mov
xor
js
mov
push
test
push
inc
ja
xor
lods
xchg
xor
inc
jp
sub
jmp
int3
test
push
rolb
or
jmp
outsl
div
popf
lock
push
mov
or
mov
xor
idivb
je
arpl
js
mov
movsl
mov
jmp
mov
ret
inc
rol
sub
jecxz
lock
cmp
add
fdivl
jnp
xor
xchg
div
sbb
imul
dec
repnz
addr16
out
subl
cmp
or
pop
imul
lods
xor
stos
lds
ret
mov
sbb
and
in
dec
xor
dec
pop
test
push
lock
push
js
je
cs
ja
cmp
jb
sahf
jno
ss
fwait
aam
jecxz
mov
fwait
jl
mov
inc
imul
inc
subb
cmp
xchg
rcrb
outsb
sbb
mov
jnp
lret
inc
mov
jbe
inc
pop
jns
lahf
rcr
bnd
jnp
mov
das
add
pop
push
fisttps
fs
jl
outsb
mov
sub
lods
fs
js
test
add
jb
testb
jge
clc
jae
int3
sbb
mov
mov
add
cmc
sub
rclb
aas
xor
push
xor
lret
add
aaa
je
pop
push
mov
lret
push
sub
add
mov
test
adc
fsub
dec
stos
mov
xchg
repnz
and
callw
xorb
cmp
cmp
mulb
sbb
outsb
imul
dec
jns
arpl
test
ficoml
sbb
mov
inc
pushf
pop
inc
pop
fcomps
popa
add
filds
std
sub
and
addr16
xchg
inc
cs
xchg
stc
fdivrs
push
mov
adc
aam
lahf
cld
push
aad
inc
xor
mov
mov
popa
not
push
idivl
xor
xchg
inc
mov
sahf
mov
scas
test
enter
repnz
icebp
mov
in
jne
sbb
cmp
pop
sub
mov
cmpsl
je
cwtl
sub
dec
dec
nop
cld
cwtl
sub
xchg
inc
not
add
repnz
loope
inc
add
adcb
xlat
arpl
cmpsl
cmc
test
fldenv
out
rcrb
stos
and
or
rcrl
leave
push
sahf
rcrb
out
add
mov
push
sbb
add
xchg
filds
fisttpll
es
and
jmp
push
mov
int
ja
push
sub
and
lahf
adc
aad
or
or
push
add
inc
enter
xor
sbb
or
dec
sub
cmc
test
add
in
dec
popf
lcall
test
js
sbb
sub
push
jge
and
ss
sub
loopne
std
test
add
jbe
je
addr16
mov
push
aam
icebp
aaa
mov
movsl
es
in
xor
sbb
inc
stc
dec
jg
rorl
cmc
inc
and
ljmp
jne
cmp
ror
add
or
pop
cmc
pop
jns
sub
fmuls
add
jae
scas
pushf
pop
adc
lahf
dec
jns
icebp
xchg
sub
sti
in
pusha
sbb
mov
sti
fildll
gs
cwtl
outsb
mov
and
rclb
rorl
inc
push
lods
insl
fdivs
iret
fidivl
push
rcrl
leave
push
lods
fs
push
mov
xchg
fyl2x
mov
xorl
inc
push
scas
rorl
add
inc
pop
jno
insb
sub
inc
add
push
sbb
hlt
xor
push
dec
jo
insb
cld
push
and
dec
add
lea
mov
test
dec
sti
mov
stos
cmp
lret
jnp
gs
mov
popl
mov
popa
inc
push
push
push
xchg
mov
fucomip
and
repz
outsl
inc
adc
pop
inc
mov
gs
cld
cmp
bound
inc
ds
push
loope
movsl
pop
xlat
cmp
cld
jecxz
adc
popa
pop
and
loop
push
adc
pop
jne
enter
adc
pusha
cmp
adc
inc
adc
iret
lds
shll
cli
sbb
fucomip
idivl
dec
lock
inc
adc
fidivl
xor
aam
aaa
test
and
cmpb
clc
shrl
inc
pop
xchg
mov
outsl
and
movb
jae
pop
test
add
jnp
lahf
incb
es
mov
inc
cmp
cli
push
cmp
push
xlat
cmp
and
inc
push
cmc
pop
cmp
push
pop
das
sub
js
cmpsb
fwait
call
cwtl
or
or
push
xchg
add
js
dec
sbb
adc
mov
out
cwtl
out
push
andw
sub
jle
in
sub
aaa
or
and
call
mov
push
cmpsl
xchg
insl
ja
dec
mov
subb
clc
inc
mov
icebp
fistpll
rcrb
ret
xchg
adc
movsl
sbbb
inc
xor
or
xchg
xchg
add
sub
mov
inc
out
lret
mov
jo
mov
push
loopne
sub
out
test
jae
sahf
out
mov
in
mov
pop
int
pop
push
outsb
xlat
adc
les
add
jo
ss
pusha
xchg
mov
jbe
add
mov
das
test
inc
mov
pop
in
bound
lcall
push
rcll
cmp
dec
sbbl
fstpt
push
cmp
xor
addr16
cmp
fstps
lock
lea
movsl
xor
movl
pop
adc
adc
jb
mov
loopne
sub
mov
imul
push
dec
sbb
pop
push
xchg
cmpsb
push
rep
dec
out
mov
nop
lcall
jns
add
fadds
dec
jo
inc
or
jp
std
in
arpl
out
xchg
out
pop
xor
stos
movsl
scas
and
sub
std
xor
stos
popa
sub
sti
in
pop
mov
sbb
inc
or
pop
in
aad
mov
call
out
mov
push
pop
mov
lcall
data16
sbb
lret
iret
xor
adc
fmulp
sahf
fisubrs
inc
fstpl
dec
rcrb
sbb
aam
mov
lds
mov
out
test
adc
movsb
push
and
sti
mov
cwtl
sbb
jecxz
and
mov
dec
fsubrl
jo
adc
push
clc
cmc
dec
xor
mov
and
sar
and
mov
xchg
jo
insl
out
fucom
ficoml
mov
add
push
ret
add
push
hlt
dec
sub
rolb
arpl
xchg
inc
pop
jecxz
clc
addr16
xchg
and
mov
push
dec
loope
cmp
lahf
movsb
insl
jl
ja
jge
daa
xchg
jno
or
xor
xchg
mov
outsl
sbb
popf
es
lock
ds
scas
mov
push
pushf
ss
pop
ds
addl
ja
cld
imul
lret
and
insl
bound
sub
mov
negl
xlat
inc
fisttpll
int3
adc
outsb
cs
stos
cld
repz
push
ja
popf
cmp
jle
xchg
push
fnop
jmp
fisttpl
dec
sbb
or
add
push
ja
daa
insb
fwait
xor
ret
cmpsb
adc
xchg
sbb
or
std
dec
xchg
add
jb
mov
inc
adc
ja
in
adc
les
dec
sbb
fbstp
dec
mov
bnd
jmp
sbb
xor
int
aam
fucomip
cmpsb
inc
mov
frstor
jp
and
mov
sbb
ss
pop
add
inc
mov
mov
loopne
pop
mov
inc
mov
mov
sahf
mov
int3
mov
in
mov
adc
mov
inc
shlb
pop
xor
sub
mov
push
inc
popf
add
int3
test
aad
add
adc
or
std
dec
sti
jo
xor
dec
dec
sbb
popf
cmp
jge
aas
pop
pusha
dec
in
repz
inc
cmp
sbb
test
xor
jnp
fldt
lods
hlt
jno
cwtl
es
and
push
test
sti
push
aas
iret
xor
mov
ret
and
add
pop
xchg
cli
insb
dec
dec
pop
adc
mov
imul
outsb
cli
outsl
movsl
dec
stc
jno
cwtl
mov
mov
shr
xchg
imul
sti
mov
xchg
mov
xor
mov
mov
mov
jnp
sub
pop
lret
cmp
push
cld
and
jo
js
es
out
aad
mov
adc
add
add
in
mov
into
out
notb
pop
test
out
inc
test
xchg
mov
rclb
lea
jno
mov
xchg
test
dec
leave
pop
push
ss
iret
inc
pop
mov
ss
stos
xchg
xchg
mov
jge
cltd
inc
xchg
mov
pop
mov
or
addr16
movsl
leave
ror
iret
rorl
adc
out
xchg
into
lea
pop
cld
bound
lea
and
stos
leave
cs
adc
call
mov
inc
loope
cwtl
fisttpll
and
xchg
aas
mov
mov
dec
ja
lret
sub
push
or
aas
jecxz
inc
dec
out
inc
pop
out
movsl
cli
loopne
dec
lret
ret
pop
xor
mov
mov
sbb
imul
add
dec
inc
sub
jo
mov
call
xchg
repz
loop
test
ds
jae
data16
aaa
pop
movsl
dec
cmp
lea
xchg
in
and
fwait
ljmp
push
lods
jne
or
fstl
sbb
out
cmp
ret
imul
or
cmp
mov
rcll
jnp
mov
xchg
adc
push
xchg
or
sbb
stos
loope
mov
mov
add
fbstp
jp
mull
in
and
and
push
xor
mov
mov
mov
push
vpcmpgtb
or
mov
mov
mov
cmp
sub
sbb
iret
shll
into
push
outsb
xchg
pop
jmp
fildll
ret
pop
jb
jb
or
shl
jg
inc
xchg
out
bound
bound
aam
stos
jge
inc
ja
adc
pusha
shll
push
jle
push
pop
xchg
les
hlt
push
jge
outsl
sahf
push
dec
lds
mov
inc
xchg
or
enter
sub
in
dec
pusha
sbb
dec
xchg
push
leave
ffreep
mov
and
cmpsb
mov
or
jmp
cwtl
inc
pop
push
sub
push
mov
int3
push
scas
add
seto
mov
aad
sbb
cmc
call
mov
xchg
clc
cmp
mov
adc
shll
sbb
mov
dec
pop
add
cmp
in
arpl
or
mov
jmp
mov
shlb
mov
pop
lret
pop
je
or
inc
repnz
fidivrs
sub
subb
pop
push
jp
mov
dec
inc
dec
inc
jg
mov
inc
jae
js
daa
aam
shrb
ret
lods
jmp
mov
push
shl
sub
aaa
add
mov
out
dec
add
inc
ret
repnz
daa
gs
fs
inc
dec
icebp
or
mov
pop
push
test
and
jl
xor
lock
decb
lea
dec
cmp
adc
nop
repz
aam
rorb
fildll
fstps
aaa
mov
jg
jb
push
mov
mov
sub
dec
mov
test
jb
adc
repnz
out
pop
ja
lds
rcrl
pop
xor
adc
sbb
mov
adc
mov
sub
test
mov
cmp
shlb
dec
into
dec
pop
jb
dec
fidivrs
adc
aad
dec
movsl
sub
addr16
jmp
std
mov
mov
popf
ss
nop
pop
xchg
sbb
cmp
xchg
xchg
sbb
scas
outsl
xor
sbb
arpl
pop
sub
or
mulb
add
jbe
xorb
mov
fcoml
adc
lock
inc
cmp
clc
in
fildl
movsl
cmp
sbb
xlat
hlt
insb
cwtl
pop
pusha
pop
sahf
jb
enter
pop
ljmp
lahf
testl
mov
xor
mov
push
loop
push
dec
push
pop
add
add
aaa
lret
lahf
inc
sbb
or
mov
xchg
fnstcw
add
lcall
outsl
and
lods
incl
add
push
mov
mov
imul
sbb
repnz
rcrl
mov
lods
xchg
cld
jecxz
jp
and
push
mov
out
xor
lcall
push
add
sbb
cmp
ds
fdivr
mov
adc
push
es
dec
testl
fimull
pop
scas
sub
dec
sub
sbb
push
lock
test
test
sub
rolb
xchg
repnz
inc
pushf
push
cmpsl
adc
push
mov
popa
xchg
imul
cli
les
sbb
es
inc
sarb
dec
jle
hlt
inc
cmp
mov
int3
mov
arpl
les
movsl
and
adc
xchg
sub
iret
lods
aad
pushf
mov
pushf
xchg
mov
pop
mov
fstpt
lahf
pop
fldpi
rcrb
test
sbb
repnz
xchg
loopne
cltd
push
inc
clc
movsb
daa
mov
mov
daa
in
jg
sub
imul
jmp
jns
scas
and
orl
xor
lea
mov
push
mov
xor
mov
iret
sub
in
lods
xor
or
jbe
cmp
into
mov
and
sbb
addr16
test
ja
lcall
and
ss
push
out
unpckhps
lea
mov
and
jnp
mov
cltd
in
lret
pusha
mov
aaa
mov
xchg
push
cmpsl
jbe
mov
push
arpl
lock
das
push
add
pop
sbbl
pop
mov
insl
leave
test
pop
fistps
jg
mov
imul
push
and
or
stc
fstl
imul
and
les
movl
sub
dec
push
pop
jb
mov
mov
or
cmp
clc
cmp
pop
mov
fs
mov
imul
sub
mov
adc
into
int3
xchg
push
sbb
rcrb
adc
and
les
add
lods
jmp
sbb
jns
int3
push
pop
or
das
clc
mov
mov
dec
jmp
lcall
mov
imul
push
stos
addl
stos
mov
lods
dec
dec
xchg
js
add
nop
insb
ja
add
xor
lods
lock
push
jne
in
mov
mov
mov
ret
icebp
cmp
cmp
xor
and
xor
lds
or
jmp
pop
sbb
mov
sub
ror
jae
jecxz,pt
mov
outsb
roll
dec
or
movsl
and
dec
in
xchg
fldln2
popf
mov
inc
and
push
adc
jl
cltd
ja
in
enter
mov
mov
imul
inc
popa
ja
push
mov
mov
dec
iret
lock
mov
push
mov
pusha
push
out
into
mov
and
xchg
fidivs
das
and
loop
ds
sbb
inc
sub
test
pop
cmp
xchg
or
ret
movsb
or
jb
cmp
jnp
sbb
inc
imul
in
jle
cld
loop
mov
push
out
jns
cmc
adc
ljmp
and
imul
adc
js
imul
lret
movsl
aaa
sub
stc
xor
movb
mov
push
and
sub
ret
fcoml
loopne
pop
cmpsl
or
add
dec
sbb
in
jl
dec
lret
bound
dec
jbe
and
idivb
bound
outsl
xlat
sarl
popa
jle
add
or
lods
adcb
fs
scas
dec
test
stos
fwait
jmp
adc
xor
push
jl
or
mov
jp
adc
out
xchg
pop
out
mov
cmpsb
mov
test
dec
adc
imul
pop
mov
iret
jp
xchg
mov
cli
clc
cmc
xchg
leave
push
inc
scas
cltd
add
xchg
in
pop
mov
sub
xchg
sbb
jecxz
jnp
sbb
mov
push
fwait
add
lods
es
je
scas
dec
jae
ds
out
mov
in
cmp
push
iret
dec
testb
add
add
push
adc
fnstcw
insl
sub
jo
jne
dec
stc
mov
jmp
popf
dec
fdiv
cmp
mov
xchg
adc
nop
mulb
fldcw
jnp
pop
sahf
sbb
jmp
push
lret
cmp
mov
ret
and
mov
add
bswap
sub
adc
or
xlat
mov
lcall
fiadds
mov
mov
xchg
jo
mov
adc
xchg
mov
push
adc
jae
mov
pop
mov
insb
xchg
or
sub
pusha
push
cmpb
fstps
mov
xlat
stos
mov
cld
jmp
sbb
mov
mov
aad
or
cmpb
pop
mov
mov
js
sahf
push
or
outsb
jmp
nop
into
nop
jo
jnp
popf
mov
pop
rorb
add
add
push
mov
ret
xchg
out
inc
xadd
in
dec
je
push
add
cmovs
mov
xchg
mov
xor
add
sbb
mov
iret
jnp
push
into
inc
outsl
insl
jecxz
int
pop
fstps
jo
mov
push
inc
nop
sub
icebp
xor
insl
in
adc
cmp
bound
les
xchg
lcall
pop
out
sub
mov
xlat
jge
int3
mov
enter
push
imul
icebp
dec
mov
mov
xchg
xor
xchg
or
sti
xchg
mov
es
push
fsubs
js
mov
add
mov
sbb
push
xchg
mov
mov
inc
int3
test
scas
inc
fcmovnb
aaa
push
cmpsb
mov
fldcw
mov
inc
mov
dec
adc
and
mov
or
loope
adc
fisttps
inc
push
inc
cld
ja
mov
testl
jns
cs
loopne
jno
js
aas
jl
lret
mov
sbb
lret
movq
mov
loope
pop
mov
push
pushf
mov
sub
inc
rcll
outsl
adc
xor
subl
sti
hlt
push
mov
cmp
pop
jmp
frstor
cmp
pop
insl
xchg
in
mov
fisttps
xlat
jb
xchg
and
pop
loop
mov
xorl
insb
mov
or
dec
mov
push
inc
daa
fs
mov
cltd
daa
into
jo
jbe
insl
xor
int3
repnz
sub
lods
mov
jns
mov
lea
gs
insl
jae
iret
scas
and
adc
push
and
cmpsl
aam
adc
mov
shlb
dec
xchg
add
aas
cmp
jnp
sarb
pop
adc
movsb
loop
sbb
out
in
stos
adc
dec
stos
sbb
sahf
sti
fisttps
adc
fmuls
bound
or
movsb
je
or
mov
mov
jl
pop
pop
pop
xor
sub
aas
mov
mov
pop
mov
xor
cmp
cli
mov
lea
fwait
sarl
stos
dec
outsb
ret
xor
ja
sub
pop
sbb
test
jbe
dec
adc
shrb
sahf
xchg
dec
cmp
in
fnsave
repz
mov
or
adc
icebp
scas
pop
sti
sarl
sahf
xor
mov
inc
test
dec
or
mov
jmp
push
and
cmpb
inc
adc
lahf
jmp
push
push
add
or
adc
subl
xor
sahf
cmp
pop
orb
imul
jns
pop
push
repz
in
pop
xor
jle
jge
cmp
filds
push
inc
xor
push
test
jl
add
outsl
jecxz
es
gs
dec
dec
xor
in
dec
push
mov
inc
mov
faddl
cmp
jp
push
js
mov
jae
out
dec
sbb
lods
fiadds
xchg
adc
lcall
cmpsb
sub
xchg
xlat
jmp
pusha
xchg
loope
or
out
jbe
insl
ret
les
repnz
cmc
jg
imul
mov
rolb
ret
lods
adc
xchg
xchg
flds
ss
sti
lea
repz
test
push
pop
ja
es
cs
fldt
popa
sbb
pusha
nop
jb
jmp
or
jge
adc
repz
lock
adc
movsb
inc
jnp
lret
push
sub
stos
in
mov
scas
pop
lods
hlt
lock
fcomps
mov
push
add
push
jg
mov
mov
dec
sahf
fwait
lret
sbb
pop
or
mov
scas
out
pop
mov
jo
xchg
fisttpll
leave
cld
xchg
jns
jno
jle
inc
xor
daa
add
lds
into
enter
push
mov
mov
sbb
iret
inc
dec
add
adc
sbb
pop
and
mov
shrb
pop
dec
notb
popf
incl
addr16
jge
in
cmp
push
inc
xchg
int3
mov
xor
push
mov
xor
repnz
in
xor
mov
ret
scas
xor
ja
cmp
cli
and
cmp
sub
iret
out
pop
lret
sub
sbb
xor
inc
push
sub
jns
mov
mov
and
ja
adc
or
or
clc
and
xchg
push
arpl
xchg
bound
cwtl
pop
xor
push
dec
std
enter
fsts
mov
and
cmp
testb
ficomps
and
add
mov
shlb
aas
ficoml
test
add
js
shrl
int3
mov
cld
fcmovnbe
movsl
mov
je
sub
and
xchg
add
push
jge
dec
mov
lret
xchg
push
jne
mov
jne
mov
dec
jb
lea
jmp
xchg
sub
pusha
mov
xlat
lret
jns
cwtl
pop
mov
xchg
push
ret
mov
and
jnp
lea
into
gs
push
sbb
sti
jle
jae
gs
push
jae
lret
add
mov
sub
jge
lds
fidivrs
mov
inc
and
call
pop
xchg
loope
daa
jge
mov
add
sub
mov
std
push
mov
into
pop
negl
cmpsl
xor
xchg
inc
jae
lock
lock
outsl
cwtl
and
insb
int
in
out
fidivrs
mov
inc
movsl
and
jge
jns
add
mov
cltd
popa
lea
mov
aad
mov
and
sti
xchg
js
mov
dec
pushf
cwtl
and
and
jo
jmp
push
movhps
stc
fists
sub
sarb
popf
jmp
stos
iret
mov
cmp
push
idivb
dec
daa
mov
shrb
xchg
mov
xchg
mov
push
loopne
inc
cmp
cli
jbe
dec
ss
dec
js
dec
orl
xor
push
adc
dec
cmpl
ljmp
je
and
ja
dec
xchg
mov
mov
mov
sub
xor
mov
jp
lret
xchg
xlat
sbb
inc
push
xor
sbb
xchg
in
pop
ds
and
jnp
int3
or
add
xor
fucomip
inc
test
pop
xor
ss
inc
mov
mov
bound
shr
out
popf
fs
jg
popf
mov
fs
inc
sbb
push
push
andl
xchg
mov
lods
dec
imul
aas
sub
lds
or
test
adc
andl
xor
mov
mov
pop
xchg
daa
cli
test
cwtl
shr
dec
es
out
fsubs
push
push
pop
addb
push
or
movsb
mov
mov
cld
mov
ffreep
clc
fildll
mov
cmp
mov
rclb
scas
add
shl
lret
lret
inc
dec
fisttpll
sahf
xchg
jb
jo
ffree
dec
and
adc
in
xchg
adc
movsb
jmp
xor
inc
into
repnz
and
add
pusha
fmuls
mov
add
js
xchg
call
