cmp
decl
rorb
adc
test
decl
aam
mov
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
mov
lea
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
mov
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
cmp
mov
je
cmp
je
mov
mov
cmp
mov
mov
je
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
mov
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
lea
push
push
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
jmp
xor
mov
mov
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
xor
ret
push
mov
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cmpl
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
mov
call
andb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
cmp
je
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
xor
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
pop
adc
pop
inc
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
xor
call
mov
mov
pusha
add
add
add
xchg
jb
add
add
add
add
bound
add
sub
push
mov
add
push
push
lea
push
push
push
push
call
je
stc
mov
faddl
out
shlb
add
repnz
fs
add
xchg
mov
addl
add
mov
cltd
popf
add
jne
push
int
add
add
sarb
add
add
sarb
mov
add
lcall
inc
in
push
push
push
lea
push
push
push
lea
push
call
add
aam
add
add
add
xchg
add
mov
add
add
fwait
add
add
add
add
add
call
mov
lret
ret
cmc
subl
in
call
push
push
push
push
push
push
lea
push
push
call
push
hlt
lcall
add
add
addl
mov
push
imul
dec
add
fs
add
pop
aad
lea
add
push
fisubl
in
add
cwtl
mov
add
fs
jp
in
jo
add
add
in
call
call
movsb
jecxz
cld
add
lds
jns
out
orb
test
jmp
add
fcmovbe
lahf
repnz
add
add
lds
int
ja
gs
mov
sub
pop
call
push
push
push
push
lea
push
push
push
call
pop
add
xchg
xchg
add
xchg
mov
sahf
add
jle
cld
cmpl
js
jbe
xchg
add
ja
add
add
loope
push
add
add
add
add
sahf
fadds
add
stos
add
lahf
nop
mov
rol
pop
add
add
or
add
push
push
call
mov
pop
movsl
pop
jle
add
incb
hlt
add
add
mov
mov
add
add
jae
add
out
les
lods
pusha
lahf
in
lret
add
add
add
add
add
add
pop
add
add
push
push
push
push
push
push
call
add
add
add
outsl
add
add
add
mov
rolb
fnsave
insb
loopne
ljmp
nop
je
add
scas
add
leave
add
add
loop
sub
pop
mov
push
push
call
add
add
rcll
rol
add
add
imul
add
add
enter
mov
jecxz
add
in
clc
pop
mov
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
movsl
jbe
data16
ret
out
add
mov
jo
out
add
add
add
mov
sub
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
imul
add
add
add
add
and
add
xchg
mov
add
add
shll
add
mov
pop
into
fs
and
add
rolb
cltd
in
pusha
sub
pop
add
push
push
push
lea
push
push
push
lea
push
call
pop
add
pushf
mov
mov
pop
jecxz
cltd
rcr
push
mov
rcr
mov
testb
add
lcall
pop
add
repz
adc
std
xchg
lods
push
xor
xor
sub
push
and
add
rol
add
sub
sub
add
add
shr
pop
xor
not
pop
push
push
push
push
push
push
call
add
add
mov
pop
add
add
add
jo
xchg
in
xchg
mov
jb
add
add
add
movb
movb
add
fldt
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
xchg
cmc
cmpsl
xchg
jl
testl
into
add
into
push
push
mov
stos
test
lods
add
add
add
fwait
lods
leave
add
add
in
aad
add
mov
add
int3
sub
pop
call
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
addl
lret
jns
lret
add
jecxz
add
lock
jne
sti
negb
cmpsl
stos
add
add
cmc
icebp
sahf
ljmp
add
std
add
add
add
jle
loope
add
mull
fdivr
lcall
inc
call
lea
push
push
lea
push
call
mov
int
mov
add
add
add
add
into
jp
nop
jl
add
xlat
adcl
add
out
imul
data16
add
pop
add
add
mov
mov
add
xchg
fucom
add
add
lods
mov
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
stc
mov
lods
cld
add
add
ljmp
popa
add
js
add
add
mov
add
mov
mov
enter
mov
bound
popf
sub
pop
pushl
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
lock
test
pusha
mov
pop
out
roll
add
les
push
jge
test
ljmp
pop
add
in
fdivr
lcall
xchg
sub
add
jne
push
lea
push
call
data16
je
add
loop
add
jl
add
push
add
add
lds
mov
xlat
sarl
ja
addr16
pop
add
test
jecxz
jne
lcall
add
lods
xchg
in
clc
pop
pushl
push
lea
push
push
lea
push
push
call
nop
add
leave
add
ficoml
add
add
add
mov
popa
mov
add
add
add
pop
test
fildl
shll
je
pusha
je
shlb
add
int3
xchg
mov
jge
add
add
add
add
add
sub
pop
call
push
push
shl
dec
inc
push
xor
add
ror
shr
sub
add
xor
rol
pop
sub
sub
sub
not
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
out
in
cmpsb
xchg
add
rolb
data16
add
mov
add
mull
add
push
add
add
add
add
mov
je
lea
lcall
jne
push
push
lea
push
call
add
lock
cli
fldt
in
add
std
push
mov
add
xchg
js
push
jmp
push
add
add
pop
add
jno
int
js
jp
jbe
je
cmpsb
mov
add
xchg
xchg
push
mov
mov
add
add
add
bound
fsubr
sub
pop
call
push
push
push
lea
push
push
push
push
push
call
mov
out
add
stc
add
in
rolb
add
add
out
data16
lret
stc
rcll
add
xlat
aam
add
add
faddp
add
stc
jns
loope
add
add
add
loopne
push
push
push
shl
push
or
not
add
sub
sub
shr
shl
pop
shr
add
ror
shr
pop
push
push
push
lea
push
push
lea
push
push
push
call
cli
xchg
test
add
add
insb
je
add
cmc
add
add
add
fldl
mov
add
lcall
add
aad
in
loopne
lcall
push
push
push
push
push
push
push
call
into
jae
cltd
add
roll
add
fdivl
push
stc
add
add
in
jae
out
mov
add
pop
add
cli
andl
add
add
sub
pop
call
mov
push
push
lea
push
push
lea
push
push
lea
push
push
call
lods
add
mov
lret
sahf
test
push
in
mov
fwait
pusha
add
add
add
jnp
add
imul
add
add
imul
add
add
mov
add
in
loopne
lcall
push
push
push
push
push
push
push
push
push
push
push
call
jmp
add
cmpb
add
add
cmc
jmp
out
fwait
pop
sti
fildl
in
ret
add
pop
add
int
int
xchg
mov
add
outsl
mov
loop
pop
add
test
fbld
push
mov
pop
add
add
add
jmp
xchg
stos
add
pop
mov
add
push
lea
push
push
lea
push
push
push
call
cltd
icebp
mov
pop
add
cmpsb
roll
push
add
fs
mov
mov
lds
les
arpl
add
into
sub
pop
add
push
push
push
lea
push
lea
push
call
add
xchg
mov
pop
sub
mov
add
add
add
subl
add
add
xlat
mov
add
movsb
add
addb
add
mov
pop
iret
loopne
sarb
test
fisubl
nop
subb
andb
add
lcall
ret
lods
dec
add
push
lea
push
push
push
push
push
push
call
ja
int
lea
add
cmp
mov
mov
pushf
rcrl
push
push
mov
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
call
arpl
add
hlt
xchg
data16
rcr
hlt
add
roll
cld
outsl
cld
out
movsl
push
add
popa
add
fwait
pop
int3
add
movl
mov
flds
fdivrl
jb
std
test
add
roll
sub
pop
add
push
push
push
lea
push
push
lea
push
call
add
lds
add
xchg
addb
lods
add
fdivr
add
mov
mov
add
ljmp
pop
add
add
aad
stos
add
add
add
add
cltd
fs
push
imul
aam
jbe
add
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
aad
mov
je
rol
xchg
add
add
add
jecxz
outsl
pop
add
jbe
xchg
mov
in
cld
mov
add
ja
loopne
jge
lea
xchg
add
pop
faddl
add
add
sub
pop
mov
xor
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
pop
add
mov
push
shr
popf
jnp
in
push
pop
add
arpl
add
add
ret
jge
add
int
hlt
add
in
add
hlt
call
fisttpl
pop
add
pop
push
push
push
call
ficompl
mov
idiv
add
jbe
subl
jge
scas
fiadds
aad
xchg
jo
stos
rcrl
add
bound
lcall
dec
add
icebp
xor
adc
cmc
push
push
call
fidivrs
xorb
add
int3
addb
add
mov
add
jbe
imul
jb
addl
jae
cmpsb
mov
add
lcall
push
push
lea
push
call
xchg
add
les
ficomps
add
pop
lahf
add
imul
mov
mov
scas
add
lods
add
lods
jae
add
je
test
mov
jb
lcall
add
movsl
add
lret
sub
pop
mov
push
push
push
lea
push
call
mov
jns
add
fcoml
add
add
ret
pop
add
jbe
add
je
add
add
add
add
mov
in
hlt
pop
xor
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
mov
mov
push
add
sahf
add
ficoml
add
test
pop
add
add
fists
sub
pop
add
push
push
push
push
call
pop
int
mov
add
xchg
mov
clc
jb
enter
add
ja
add
add
stc
add
add
mov
xchg
add
scas
add
xlat
sahf
add
cld
ljmp
movsl
add
popf
jmp
les
clc
fcoms
imul
sub
pop
sub
push
push
push
lea
push
call
test
lcall
rorl
movsb
roll
ljmp
lahf
jle
add
jp
mov
add
add
cbtw
mov
add
mov
clc
cwtl
add
int3
out
add
scas
xchg
sub
pop
pop
rep
push
push
call
rcl
pusha
pop
push
fldt
aad
decb
add
add
add
add
mov
add
in
fwait
out
in
clc
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
lahf
mov
add
add
xchg
push
jge
add
add
lahf
call
mov
push
mov
xchg
push
out
add
les
out
fsqrt
notl
mov
jns
mov
add
lods
pop
add
xlat
add
scas
aad
in
fcomps
pop
hlt
push
lea
push
lea
push
push
call
mov
add
leave
cmc
nop
push
imul
aam
xlat
fiadds
add
stos
add
mov
add
int3
fnstsw
add
leave
out
fnstenv
add
lods
add
pop
mov
in
lock
add
add
push
push
push
push
call
cltd
push
sti
sahf
loopne
pop
mov
add
stos
add
xchg
add
push
add
add
sahf
jo
push
add
add
js
add
out
push
mov
fldenv
outsl
flds
stos
lods
out
add
out
in
lock
add
push
lea
push
push
push
lea
push
push
call
clc
push
jns
add
fwait
add
add
add
add
xlat
mov
add
mov
cwtl
push
fcomps
call
mov
xor
push
push
lea
push
push
push
call
mov
arpl
add
pushf
add
add
add
addl
add
add
mov
push
add
loop
jle
cmc
movb
mov
mov
pop
insb
add
scas
add
sub
pop
mov
push
push
push
call
test
add
add
scas
stos
fwait
add
testl
test
xchg
push
enter
add
add
mov
pop
pop
add
popf
add
lcall
sahf
mov
add
add
add
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
addl
add
mov
xchg
add
cmpb
add
add
flds
imul
pop
push
sti
in
enter
add
hlt
sti
or
xchg
popf
icebp
add
add
les
push
lea
push
push
push
push
push
call
cwtl
jl
imul
movb
add
add
test
mov
in
mov
pop
jmp
pop
sarl
icebp
mov
mov
mov
out
add
shlb
xchg
popl
dec
sub
jno
adc
push
push
lea
push
push
lea
push
push
call
push
add
add
xlat
fmuls
testb
add
push
pop
add
add
mov
pop
dec
testb
jne
imulb
pop
lods
mov
hlt
add
add
sub
pop
xor
push
push
push
call
add
scas
nop
std
add
add
add
add
add
cmpsl
ja
mov
fdivrl
mov
in
fwait
push
jge
add
lcall
les
add
push
lea
push
push
lea
push
push
push
push
call
add
add
fwait
add
mov
add
test
sahf
std
popf
push
add
popl
pop
add
add
test
test
nop
sahf
add
mov
lcall
ret
sbb
push
mov
xor
add
add
add
loope
lea
add
stos
add
add
jne
jecxz
add
stc
stos
add
add
add
pop
mov
in
clc
pop
add
mov
push
push
xor
push
push
pop
add
not
ror
sub
shl
xor
add
pop
dec
ror
xor
pop
push
lea
push
push
push
push
lea
push
call
lods
cwtl
lods
in
cli
scas
add
mov
fsubs
add
aad
orb
push
add
loop
mov
add
sti
fwait
mov
mov
int
add
add
jo
lods
xchg
jne
mov
scas
add
add
xchg
push
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jnp
add
mov
add
nop
loope
std
jae
add
mov
popf
add
add
sahf
add
add
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
iret
in
fldcw
rolb
mov
pop
stos
out
movsb
add
add
mov
add
scas
rolb
std
scas
add
push
lock
rclb
mov
lock
aam
mov
add
add
add
add
lahf
add
mov
fcomps
add
rorl
add
push
or
not
add
add
sub
sub
sub
add
shr
pop
lea
lea
pop
push
lea
push
push
call
add
add
call
mov
popf
lahf
jae
push
push
movb
out
add
add
aad
add
out
add
add
mov
insb
shlb
add
push
js
sahf
pop
mov
pop
push
push
push
push
push
push
push
lea
push
call
test
xchg
jno
cmpsb
jns
out
add
sti
add
cld
add
pusha
xchg
add
test
pusha
lahf
add
add
push
add
lods
add
push
call
push
push
push
push
push
push
push
push
push
push
call
push
les
add
add
mov
push
push
je
pop
add
iret
pop
push
jle
test
mov
push
push
push
push
push
call
xchg
mov
add
push
push
add
cmp
stc
loop
push
mov
add
test
fiaddl
add
out
mov
test
lds
icebp
push
add
sbb
out
js
add
add
add
ficoml
popf
lea
mov
pop
push
push
push
push
push
call
mov
add
stc
popf
out
push
gs
movl
mov
add
push
add
add
jb
stos
lock
add
aam
add
add
pushf
add
fwait
add
fidivl
out
roll
out
out
add
add
cld
bound
movsb
addb
cltd
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
call
xchg
clc
in
cltd
add
add
lret
add
add
testl
add
jecxz
mov
add
mov
add
mov
gs
add
add
loop
incb
add
add
add
add
add
popf
fbstp
in
pop
xlat
add
add
sub
pop
add
push
push
push
push
push
lea
push
push
call
mov
clc
scas
sti
add
lods
mov
add
pop
add
add
mov
add
add
jmp
jo
push
add
mov
add
add
std
add
divl
repnz
stc
mov
pop
add
add
push
push
push
push
call
fsubrp
fisttpl
xlat
negb
out
fdiv
add
add
shr
add
fadds
add
jmp
jl
filds
add
add
lret
cli
add
add
mov
mov
xchg
jnp
add
add
ja
jns
popf
mov
ficomps
rolb
in
lock
lcall
jae
xor
push
push
lea
push
push
push
push
lea
push
push
push
call
push
subb
arpl
cmpsl
add
cwtl
add
lea
lcall
iret
loope
lock
add
add
add
mov
fwait
mov
scas
test
scas
in
aam
cli
rcrb
cltd
add
fs
add
pusha
add
je
add
roll
mov
mov
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
test
add
add
add
add
add
add
out
test
xchg
add
bound
stos
add
add
add
les
add
into
mov
fidivrl
add
add
test
stc
popl
add
fdivr
lcall
inc
adc
xor
adc
push
push
push
lea
push
push
push
push
call
add
fiaddl
add
arpl
add
xchg
add
lcall
add
add
push
add
mov
outsl
add
mov
popf
aad
jp
add
add
fsubrl
testl
add
xchg
jne
stos
pushf
mov
imulb
bound
add
xchg
loope
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
push
call
add
stc
movsl
test
add
add
stc
add
mov
in
cli
mov
ja
add
add
in
in
fdivr
lcall
les
push
push
push
push
call
subl
push
data16
imul
std
add
add
cltd
outsl
add
pop
add
imul
add
add
mov
jge
std
add
add
fadds
add
lock
arpl
xchg
test
rolb
out
add
lds
andl
add
xchg
sub
pop
add
push
add
lea
pop
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
fwait
add
add
add
add
cmpsb
add
loopne
icebp
data16
test
in
add
mov
lret
jmp
add
cli
mov
add
xor
push
push
push
push
push
push
call
int3
test
std
xchg
mov
push
add
cli
loope
add
add
add
cli
add
xchg
std
add
jne
pushf
push
sub
pop
add
push
push
lea
push
push
lea
push
push
call
cld
add
push
add
add
add
je
add
popl
lock
aad
add
testb
add
mov
add
jno
jbe
mov
add
lods
lret
test
add
out
add
insb
add
lcall
movsb
push
lea
push
push
push
lea
push
push
lea
push
call
imul
add
ljmp
add
shrl
jb
add
xchg
rcrl
jl
scas
add
fs
imul
push
add
lods
loopne
add
jnp
mov
add
add
in
mov
xor
push
shr
lea
sub
pop
or
je
mov
xor
push
add
ror
pop
mov
xor
push
push
push
lea
push
push
push
push
push
push
call
mov
add
loopne
add
pop
in
add
jmp
add
mov
add
nop
outsl
push
test
imul
add
scas
add
sub
pop
add
add
push
lea
pop
push
push
push
push
push
push
push
push
push
call
addr16
pop
add
add
add
add
pop
movsb
add
mov
call
fucomp
jae
imul
add
pushf
imul
add
push
add
rol
xchg
mov
add
push
ja
add
lea
in
loopne
mov
xor
push
rol
add
pop
add
push
shr
pop
pop
push
rol
shl
shr
pop
rep
push
sub
ror
sub
pop
mov
push
push
push
push
push
push
call
xchg
mov
add
jnp
xchg
lds
add
in
lret
jae
lcall
add
jbe
add
mov
add
add
flds
add
test
test
push
add
pop
add
loopne
icebp
add
add
ljmp
add
add
stos
arpl
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
pop
jne
movsb
ret
add
mov
xchg
add
test
mov
pop
add
add
add
pop
add
xchg
add
add
push
mov
xlat
add
loop
add
stos
add
stos
mov
movsl
fisttpl
ja
xchg
add
fwait
sub
pop
add
push
push
push
push
push
call
fwait
cld
in
decb
incb
imul
add
test
push
xchg
negl
add
add
add
loope
cmc
cmpsl
out
sub
pop
or
je
push
rol
not
pop
mov
push
push
lea
push
lea
push
push
call
cld
xchg
fs
mov
xchg
stos
push
add
add
pusha
iret
jnp
cmpsl
subl
fcmovbe
add
add
imul
rcr
add
fdivrs
fs
mov
in
in
pop
add
push
push
lea
push
lea
push
push
push
lea
push
push
call
hlt
mov
xchg
add
in
fmulp
push
push
jo
frstor
add
aam
mov
notl
cmc
add
add
mov
add
add
jecxz
shll
add
cmpsl
add
test
iret
test
mov
add
imul
lds
cmc
lea
les
loopne
add
push
push
push
push
lea
push
push
push
call
in
testb
pop
int
lods
add
aad
add
iret
movl
into
mov
jno
add
lds
mov
add
add
add
add
add
push
out
lea
fstpl
xlat
mov
mov
lret
jnp
mov
std
test
add
jnp
stos
add
lcall
movsb
push
push
push
push
push
push
call
in
movsl
insb
add
mov
pop
jns
roll
out
movl
add
add
mov
out
out
cmpsb
add
test
push
jae
mov
out
shrl
add
sub
pop
pop
push
push
inc
sub
xor
push
and
add
dec
sub
ror
shl
ror
not
pop
add
pop
push
xor
shl
not
pop
pop
mov
push
push
push
lea
push
push
call
hlt
mov
add
shl
xlat
fs
add
fs
data16
out
add
add
add
gs
add
insl
hlt
push
rol
sub
pop
mov
push
push
push
push
push
lea
push
push
call
fwait
mov
in
mov
add
add
add
add
std
add
push
rcrb
add
icebp
les
add
add
add
lcall
loopne
ror
add
pop
push
push
push
push
push
call
mov
push
add
mov
movsb
add
lahf
movl
add
add
add
add
out
add
add
xchg
add
fwait
loop
int3
jae
add
lcall
in
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
cmpsb
push
mov
testl
arpl
out
jne
data16
add
mov
pusha
movsb
add
lret
ret
test
jle
loopne
add
push
add
add
add
add
push
imul
xchg
loope
insb
pop
add
add
subl
add
push
fwait
popa
addb
pop
add
push
inc
pop
push
push
push
call
add
in
add
stos
je
repnz
mov
popl
add
loop
mov
xlat
mov
shl
aad
addl
xchg
add
add
movsb
add
jp
mov
rcrl
add
mov
xorl
out
iret
jmp
pop
add
add
add
shrb
popa
pop
add
add
clc
lcall
push
push
push
push
push
push
call
leave
add
add
add
js
add
add
mov
clc
mov
js
rolb
cltd
pop
jns
add
add
out
mov
clc
aam
mov
add
add
roll
jle
in
in
lcall
push
shl
rol
pop
mov
pop
push
sub
not
rol
not
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
add
leave
push
xchg
mov
sahf
mov
pop
mov
mov
add
lret
add
add
jno
pop
add
incb
cmpsl
add
aad
add
movb
call
add
mov
add
add
add
in
fdivr
lcall
push
xor
pop
pop
push
dec
rol
pop
leave
push
push
lea
push
call
lods
add
push
add
add
lret
jo
movsl
lods
imul
imul
mov
add
pop
add
not
movsb
ljmp
lret
rcrb
leave
mov
add
enter
sub
pop
ret
push
push
pop
mov
push
rol
sub
pop
add
push
push
call
mov
add
ja
cltd
lret
lahf
pushf
lea
stc
movsb
mov
cmp
loop
cli
add
repnz
add
add
add
mov
jo
add
pushf
add
scas
add
fwait
xchg
pop
add
stos
mov
sub
add
flds
sub
pop
push
push
lea
push
push
push
push
push
call
add
popa
jno
add
add
add
add
add
js
add
add
jb
add
mov
xchg
call
test
add
in
push
pop
scas
std
push
mov
loope
push
jle
add
add
add
lock
jmp
pop
std
ljmp
xchg
add
clc
fildl
add
add
add
lcall
push
ror
sub
add
pop
push
push
add
add
dec
shl
pop
push
push
lea
push
push
lea
push
lea
push
push
call
mov
cwtl
mov
fiadds
bound
push
scas
add
int3
add
mov
data16
popa
add
fwait
add
add
add
mov
test
add
lea
jle
add
in
call
add
add
push
sub
inc
add
inc
pop
addl
test
je
push
lea
push
call
pop
add
mov
add
rcrb
add
xchg
xchg
mov
incb
iret
add
popa
stos
xchg
jno
jecxz
mov
cmpsb
add
add
add
in
clc
lcall
inc
or
movl
xchg
je
push
push
lea
push
push
push
call
fxch
imul
test
mov
jl
insb
add
pop
movsl
movsl
add
lahf
std
add
les
into
add
add
add
insb
faddl
movl
sub
pop
pop
push
push
lea
push
push
lea
push
push
call
push
jno
sarl
add
jb
mov
cmpsb
fwait
mov
lods
lea
xchg
xchg
arpl
arpl
add
mov
mov
pop
push
push
push
lea
push
push
push
push
push
push
call
jle
in
fucomp
gs
add
icebp
add
add
add
add
add
fsubp
lods
js
sahf
add
add
jnp
fdivp
roll
enter
popf
add
test
jge
clc
add
xchg
sahf
fldcw
in
fcompl
push
lea
push
push
push
push
lea
push
push
push
call
add
add
in
mov
repnz
lret
rcr
add
ljmp
add
imul
mov
add
add
pop
xchg
loop
mov
call
add
jnp
jl
iret
mov
popl
imul
sub
pop
leave
push
ror
xor
pop
ret
push
push
lea
push
call
adc
mov
mov
lea
arpl
add
add
cmpsl
call
in
incb
jle
add
add
std
add
xchg
add
imull
add
mov
ficoml
mov
mov
add
xchg
add
add
add
mov
stos
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
addl
fldenv
gs
push
add
sbbb
add
add
mov
filds
add
stos
add
test
lahf
outsl
test
gs
push
add
add
fcoml
movsb
cmc
add
nop
in
add
add
call
fwait
mov
add
ret
fildl
add
cld
push
add
ror
lea
pop
push
push
push
push
push
call
sti
gs
add
jb
mov
repnz
add
cmc
xchg
pusha
add
je
test
lea
mov
out
xchg
in
push
popf
hlt
xchg
add
arpl
addr16
pop
push
push
sub
add
rol
pop
push
testl
push
lea
add
pop
addl
push
push
sub
pop
call
push
pop
mov
push
push
push
call
add
aam
xchg
jmp
mov
mov
clc
pop
mov
mov
add
xchg
mov
add
imul
stos
add
call
add
lds
lds
xchg
mov
stos
push
add
add
add
xchg
jmp
add
add
sub
pop
pushl
push
push
lea
push
push
push
push
call
lahf
add
add
mov
add
mov
leave
jne
jecxz
mov
add
arpl
fadds
arpl
xchg
ror
pop
test
add
test
pop
push
jecxz
add
arpl
loope
push
out
popa
add
add
filds
add
cmpsb
sub
pop
push
push
ror
add
pop
push
push
add
pop
call
push
push
lea
push
call
pop
add
add
add
add
clc
orl
ficoms
cmc
add
add
push
xlat
add
add
add
add
mov
loope
add
pop
add
add
into
jp
sar
in
add
mov
xchg
mulb
in
hlt
lcall
jge
add
test
call
lea
mov
push
push
push
lea
push
push
call
add
test
icebp
fwait
hlt
push
add
loopne
xchg
jl
add
mov
std
add
pop
cli
je
fwait
movb
in
loopne
lcall
pop
push
sub
pop
pop
pop
push
inc
shl
add
pop
leave
push
push
push
push
push
push
call
lea
add
popa
push
into
add
call
xchg
add
addl
add
test
mov
add
add
add
scas
enter
add
add
add
mov
mov
xchg
mov
scas
add
add
push
rol
lea
lea
pop
push
mov
push
push
call
add
lods
mov
mov
mov
int
andl
pop
pop
xchg
fstl
jmp
xchg
push
add
add
ja
add
push
xchg
repnz
test
pop
add
filds
add
mov
in
clc
pop
add
push
push
push
lea
push
push
lea
push
push
call
data16
jl
mov
cmpl
out
cltd
enter
add
in
lcall
add
add
neg
scas
enter
fstpl
insb
mov
add
add
mov
jge
faddl
add
fldl
popf
add
int
push
add
scas
data16
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
mov
mov
add
xchg
add
cmc
add
in
enter
mov
cmpsl
les
xchg
push
leave
jmp
ljmp
push
lea
pop
push
movl
push
lea
push
push
lea
push
push
call
testl
lcall
add
xchg
test
add
pop
add
lret
mov
add
xchg
push
add
pop
jno
fiadds
testl
outsl
add
add
jae
add
mov
add
jge
xchg
add
imul
movb
shl
lahf
lods
fistpll
lcall
add
out
idiv
call
push
push
push
lea
push
call
mov
mov
rolb
mov
xchg
add
fmulp
mov
add
cld
jb
mov
in
sbbl
add
push
std
hlt
jl
pushf
outsl
imul
data16
sub
pop
push
push
pop
call
push
add
dec
shl
pop
subl
push
push
push
push
call
add
xchg
mov
arpl
add
jp
add
mov
fucomip
addl
push
add
sti
add
pop
outsl
imul
out
add
add
sahf
loop
add
add
mov
add
add
enter
imul
add
push
mov
add
pop
cmpl
jne
push
pop
pop
push
lea
push
lea
push
call
popa
add
std
add
rcl
out
clc
add
add
add
add
add
cmc
in
mov
hlt
lcall
pop
push
ror
lea
sub
pop
pop
push
shr
pop
leave
ret
push
ror
ror
ror
pop
push
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
movsl
add
loopne
stc
add
add
jle
add
jle
lds
icebp
add
mov
add
cmc
xchg
mov
pop
add
push
push
pop
push
push
add
pop
push
push
push
call
add
push
nop
int
push
add
add
jp
fs
add
incb
add
leave
add
fwait
mov
fildl
lds
mov
xchg
popa
test
lock
in
mov
stos
out
fcoml
out
add
add
add
cld
aam
add
test
in
clc
pop
push
mov
push
sub
add
inc
pop
lea
push
not
pop
sub
mov
push
add
ror
pop
shr
add
push
push
push
call
fs
add
add
scas
fucomip
add
mov
add
add
push
add
add
add
add
rolb
faddl
add
add
les
add
into
add
add
add
incb
in
out
pop
jge
sub
pop
mov
mov
push
lea
push
push
push
push
lea
push
push
lea
push
call
test
ret
jbe
add
jle
add
lods
roll
add
pop
cmpsl
roll
xchg
jb
add
add
ljmp
jmp
fs
ret
add
fiadds
add
push
xchg
add
add
add
add
into
jb
add
inc
or
push
lea
push
push
call
add
in
movsl
jae
add
add
popf
xchg
add
mov
mov
mov
add
mov
push
imul
push
add
add
hlt
lock
lcall
shlb
inc
add
add
inc
mov
ret
pop
mov
push
push
push
push
call
push
add
fiaddl
clc
mov
add
add
adc
push
add
notl
shl
jnp
outsl
mov
ret
add
pop
int3
je
pop
xchg
add
push
add
add
test
in
lock
lcall
pop
outsl
jne
push
lea
push
lea
push
push
push
call
loope
nop
in
add
pop
imul
nop
add
mov
add
ja
fidivrl
add
add
add
cli
add
add
pushf
insb
cltd
test
sub
pop
cmp
jne
push
push
call
add
cmc
cld
push
add
js
roll
jns
jbe
add
lret
rclb
fdiv
sarb
jge
movsl
add
lcall
add
add
lods
lea
subl
push
xlat
pushf
add
xchg
pop
xorb
add
mov
arpl
add
add
js
in
clc
lcall
inc
adc
push
call
add
hlt
pop
mov
add
add
std
add
ja
xlat
add
call
add
add
hlt
add
sahf
add
mov
xchg
push
adcl
xchg
add
add
add
add
loope
add
movsl
nop
add
push
insb
insb
aad
xchg
push
xchg
jne
add
add
sub
pop
movl
push
add
sub
pop
jmp
push
lea
push
push
push
push
lea
push
call
out
test
add
add
add
jbe
pop
lock
pop
shlb
lcall
add
into
add
in
call
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
pop
nop
in
mov
add
add
push
add
loop
jns
add
jle
add
repnz
add
add
fimull
lods
push
add
add
mov
jp
add
add
ffreep
add
les
xchg
xchg
pop
add
add
cld
add
mov
out
add
lcall
push
or
out
add
pop
sub
jne
push
push
lea
push
push
push
lea
push
call
add
add
add
ja
add
jb
xchg
jbe
lahf
add
add
cwtl
xchg
fsubrs
add
ficoms
push
add
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
xlat
mov
fldt
insb
add
add
add
out
add
add
add
popf
leave
data16
xchg
bound
add
add
xchg
jbe
hlt
sub
pop
movl
jmp
push
push
push
push
push
lea
push
push
push
push
call
pop
add
add
jns
add
lcall
add
add
add
lret
jl
push
lods
add
add
mov
loop
pop
imul
xchg
pop
xchg
mov
rolw
stos
jmp
xchg
pusha
xchg
call
add
mov
pop
mov
push
push
push
lea
push
lea
push
push
call
out
pop
pop
add
out
add
enter
call
addb
mov
popf
in
push
pushf
xchg
add
mov
rolb
add
xchg
add
int
sub
add
leave
mov
in
call
add
add
pop
add
add
xchg
sbb
dec
lea
push
push
lea
push
push
push
lea
push
call
add
mov
add
filds
scas
pop
fsts
lods
mov
testb
jns
cmpsb
cmc
nop
ror
test
pop
fwait
mov
cmpl
loopne
mov
push
push
push
push
call
push
add
mov
stos
add
add
icebp
mov
cltd
add
xchg
add
add
stc
xchg
add
out
add
lret
nop
cld
add
mov
lock
js
movsb
jle
addr16
pop
pushf
xchg
add
fildl
cmpsb
mov
mov
add
test
add
aad
sahf
add
add
add
add
mov
push
push
push
push
push
push
push
push
push
call
add
jmp
loop
out
scas
loope
push
out
add
orb
mov
arpl
mov
add
add
xchg
add
add
andb
jge
lock
add
add
mov
add
mov
ja
add
hlt
add
jae
stos
add
fcomps
inc
cld
push
lea
push
lea
push
push
push
push
push
call
add
add
add
add
pop
add
cmpsl
add
jb
add
lea
repnz
insb
add
sti
insb
cltd
add
add
push
xchg
xchg
movsl
add
in
out
mov
push
sub
pop
cmpw
jne
push
xor
add
pop
mov
movl
push
lea
push
push
call
pusha
add
add
xchg
add
pop
add
pop
clc
add
add
add
movsb
jge
loop
in
out
mov
add
ret
add
sub
pop
jmp
pushl
push
push
push
call
enter
push
push
add
add
mov
xchg
add
add
add
pop
scas
popl
lcall
add
mov
push
xor
pop
mov
push
dec
shr
shl
pop
mov
push
push
not
shr
add
push
sub
add
rol
dec
xor
sub
add
ror
pop
rol
not
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
test
add
test
add
shrl
mov
add
add
add
adcb
in
fdivr
lcall
call
push
sub
not
pop
cmpl
je
push
push
sub
lea
dec
push
and
add
not
sub
inc
shl
pop
add
lea
rol
pop
push
push
lea
push
push
lea
push
push
push
push
call
jnp
add
add
add
add
out
shl
call
mov
filds
divb
add
push
arpl
lock
out
jp
add
pop
mov
mov
add
in
jo
add
jge
out
add
cmpsb
lret
in
loopne
push
push
not
lea
pop
call
push
shr
add
add
dec
pop
cmpl
je
push
push
shl
push
push
pop
add
not
sub
rol
pop
sub
not
pop
push
shr
pop
push
push
push
push
push
lea
push
call
popl
add
fistps
in
lods
add
add
add
loop
add
add
testb
data16
imul
add
iret
lock
add
sub
pop
call
cmpl
je
push
push
shl
push
push
pop
add
inc
ror
sub
ror
shl
lea
sub
pop
shr
sub
shl
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
popf
movsl
add
mov
add
xchg
add
add
jmp
cmc
aam
add
add
out
iret
mov
push
mov
cli
insb
data16
mov
in
out
lock
scas
pop
scas
push
aad
cmpsl
jl
add
add
scas
cmc
popf
add
in
loopne
push
push
xor
pop
call
push
xor
pop
cmpl
je
push
push
sub
shl
xor
push
or
not
add
sub
ror
sub
dec
dec
pop
xor
rol
pop
push
shr
pop
push
call
push
add
pop
cmpl
je
push
push
inc
push
xor
add
sub
inc
add
xor
sub
add
shl
lea
lea
pop
inc
dec
add
pop
push
push
push
push
push
lea
push
push
push
push
call
loopne
ja
in
lods
test
xchg
call
std
shlb
add
add
add
cld
add
add
add
add
std
mov
sub
pop
push
call
push
add
shl
sub
dec
pop
cmpl
je
push
push
inc
push
or
not
add
sub
sub
sub
sub
sub
pop
sub
dec
add
add
pop
push
push
call
fadds
cmpsl
add
xchg
popl
add
jbe
ljmp
add
mov
add
add
scas
mov
add
add
fwait
jb
mov
mov
add
add
add
roll
add
xchg
sub
pop
push
push
rol
pop
call
cmpl
je
push
push
sub
push
push
pop
add
sub
shl
rol
inc
pop
dec
rol
pop
push
push
push
push
push
lea
push
push
push
push
call
loop
stos
stos
loopne
ja
fiaddl
add
add
add
stos
mov
hlt
xchg
push
cli
add
mov
jbe
add
push
add
mov
push
call
push
sub
lea
pop
cmpl
je
push
push
add
push
push
pop
add
xor
sub
sub
pop
rol
pop
push
xor
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
push
call
jno
add
xchg
addr16
add
clc
add
add
out
fiaddl
add
mov
cld
add
xchg
lcall
cmp
rol
je
push
push
add
sub
shl
push
sub
add
shr
sub
ror
not
pop
lea
pop
push
push
call
pop
enter
enter
lods
cmc
pop
add
add
add
add
fldcw
push
lods
cmc
mov
xchg
add
test
add
add
mov
add
add
push
add
sub
pop
push
call
push
shl
lea
sub
pop
cmpl
je
push
push
shr
inc
ror
push
and
add
lea
lea
sub
shl
pop
shr
pop
push
lea
push
call
shll
enter
movb
add
fildl
rolb
mov
add
add
add
iret
add
shl
mov
push
mov
add
add
add
add
add
add
add
lcall
push
shl
pop
call
cmpl
je
push
push
dec
lea
sub
push
or
not
add
sub
lea
pop
add
add
ror
pop
push
push
push
push
push
push
push
push
push
call
mov
ficompl
add
popf
jne
mov
add
jbe
hlt
rolb
in
add
jbe
stos
add
movsb
add
movl
cld
ljmp
fdivr
lcall
push
not
rol
xor
pop
call
push
xor
pop
cmpl
je
push
push
sub
add
ror
push
or
not
add
lea
sub
xor
inc
pop
shl
add
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
ljmp
not
mov
add
xchg
add
add
add
add
adc
addr16
pop
push
push
push
mov
xchg
add
mov
add
lea
push
mov
out
mov
sub
pop
push
push
shr
pop
call
cmpl
jne
push
push
call
jecxz
addr16
add
mov
add
mov
fwait
jp
mull
mov
xchg
xchg
push
repnz
add
add
add
xchg
lds
jmp
jb
add
mov
lcall
inc
adc
sbb
add
add
add
jge
add
push
lea
push
lea
push
call
pushf
add
addb
add
add
push
mov
mov
pusha
push
push
mov
je
add
mov
mov
pop
addb
add
jecxz
cli
add
add
add
jns
mov
add
add
icebp
add
add
leave
add
lret
add
pop
xor
push
pop
pop
push
add
shr
pop
pop
pop
push
dec
add
ror
pop
pop
leave
push
xor
sub
inc
lea
pop
ret
push
push
push
call
test
add
add
sti
mov
add
leave
outsl
add
jnp
add
int3
add
out
xchg
cltd
add
fiadds
add
repnz
jmp
bound
add
fcomps
add
add
add
add
adc
add
xchg
addl
testb
lret
pop
gs
pop
mov
push
lea
push
push
push
lea
push
call
jb
xorl
add
fs
xorl
fildl
add
lcall
hlt
jl
loop
fcomp
add
xlat
add
hlt
add
add
jbe
push
jbe
mov
lds
xchg
mov
add
add
add
add
add
lcall
in
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
movsl
in
add
mov
add
movsb
add
add
lock
into
ja
sahf
scas
add
jp
add
imul
mov
clc
incb
stos
call
les
je
into
mov
lcall
jge
add
test
add
add
and
xlat
push
add
sub
add
shl
push
or
not
add
shl
xor
add
add
sub
inc
dec
lea
pop
shr
sub
lea
pop
push
not
pop
pushl
call
push
dec
pop
push
call
push
sub
xor
pop
jmp
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
idiv
add
add
jge
clc
fmulp
cmc
jae
jo
add
incb
add
cld
call
jnp
add
std
pop
loopne
add
pop
xlat
add
push
mov
xchg
leave
test
push
add
add
lret
add
jmp
sub
pop
cmpl
je
push
lea
push
push
push
lea
push
push
lea
push
call
add
scas
stos
add
add
adcl
mov
xchg
add
filds
add
jnp
add
add
popf
add
flds
int3
cwtl
add
mov
jbe
xlat
jne
mov
fs
cltd
add
jl
rolb
mov
add
lcall
jge
add
add
mov
push
not
ror
shr
not
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
mov
push
add
add
add
int
mov
stc
rcl
cltd
jbe
cld
testl
flds
int
add
xchg
mov
push
fnstcw
add
stos
test
push
sub
pop
jmp
push
dec
pop
cmpl
jne
push
push
push
xor
add
dec
lea
sub
add
shr
pop
rol
lea
shr
pop
push
sub
pop
pushl
call
push
dec
sub
xor
xor
pop
push
push
xor
dec
pop
call
jmp
push
shr
xor
pop
cmpl
jne
mov
push
ror
rol
pop
mov
push
dec
inc
pop
push
push
push
add
push
sub
add
add
shr
sub
sub
lea
sub
pop
sub
not
add
shl
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
aam
add
enter
add
js
mov
mov
jl
jl
ja
pusha
bound
add
ja
mov
pop
add
sub
pop
pushl
call
push
lea
push
lea
push
lea
push
lea
push
push
push
call
xchg
ljmp
add
add
arpl
add
mov
add
add
add
add
add
mov
cld
jae
pop
add
in
in
call
push
push
dec
add
push
sub
add
sub
sub
sub
rol
sub
pop
shl
pop
push
xor
sub
shl
pop
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
push
call
rcrb
add
add
repnz
mov
add
and
lea
movl
add
js
stos
sub
pop
call
push
push
dec
push
or
not
add
lea
xor
sub
dec
not
shr
pop
shl
pop
push
push
push
call
into
ret
mov
mov
out
incb
add
add
add
jo
add
jecxz
add
push
mov
notb
sti
mov
pusha
xchg
add
add
jge
test
add
jne
push
lea
push
push
call
popa
add
add
add
add
in
mov
xchg
lods
add
jbe
movb
add
lcall
lods
rolb
jmp
add
add
add
fistl
add
shrb
lcall
adc
ficomps
shrb
add
push
not
push
or
inc
add
inc
dec
lea
sub
dec
inc
pop
rol
dec
ror
add
pop
push
dec
rol
pop
pushl
call
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
ja
add
stos
add
push
hlt
out
xlat
fwait
jecxz
mov
lcall
add
add
add
sub
pop
call
push
push
shl
rol
push
or
not
add
rol
sub
add
shr
pop
xor
not
shl
not
pop
push
push
call
cltd
mov
lods
rolb
push
in
std
test
add
fiaddl
test
push
jno
jbe
mov
bound
lret
add
lcall
jne
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
js
rolb
sahf
push
add
jo
mov
hlt
out
add
pop
jp
add
add
xor
add
cmpsb
pushf
add
mov
sub
pop
call
push
lea
ror
pop
call
push
push
inc
push
and
add
xor
ror
sub
rol
pop
add
pop
push
add
ror
pop
pushl
push
push
push
push
call
test
pop
stos
cli
std
add
fldl
mov
sarb
add
sahf
add
insb
add
test
add
icebp
jne
sub
pop
call
push
push
push
push
push
push
push
call
xchg
push
add
add
ficoml
add
pop
pop
sbbb
imul
add
sub
pop
call
push
push
dec
dec
add
push
or
not
add
sub
dec
not
ror
shl
pop
pop
push
lea
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
push
push
call
xchg
pop
fwait
fs
add
popf
cmpsb
out
leave
add
mulb
clc
sahf
push
xchg
popl
bound
add
xchg
mov
add
fwait
fiadds
fwait
add
push
mov
jo
mov
fst
add
sub
pop
call
call
push
push
rol
push
and
add
add
lea
sub
xor
sub
sub
pop
lea
pop
push
push
push
push
lea
push
push
push
lea
push
call
lods
pop
add
popf
add
pushaw
loope
stc
add
add
xchg
add
xor
mov
stos
cmp
popa
movsb
int3
mov
stos
mov
add
in
add
mov
add
lret
shlb
testb
data16
rcl
jmp
push
add
lcall
jne
push
rol
add
xor
ror
pop
call
call
push
push
add
shl
push
and
add
lea
lea
sub
pop
rol
not
ror
pop
push
ror
inc
pop
pushl
push
shr
lea
pop
call
call
push
push
add
add
shl
sub
push
xor
add
dec
sub
inc
not
add
shl
pop
xor
dec
not
pop
push
push
lea
push
push
call
int
int3
jo
icebp
add
add
add
add
add
jmp
jmp
addb
fadds
add
pushl
push
add
dec
add
pop
call
push
push
lea
push
push
push
push
push
call
popf
add
jge
add
cld
add
into
add
add
test
pop
add
jae
loop
mov
lea
add
add
push
add
shrb
add
pop
add
mov
lea
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
xchg
mov
lock
lods
cld
mov
jmp
jne
test
imul
add
les
enter
popf
cmc
sarl
jmp
lock
stos
arpl
xlat
add
push
jge
mov
add
add
loop
lock
add
jcxz
add
push
inc
dec
shl
pop
call
push
push
ror
push
xor
add
sub
add
sub
sub
not
pop
ror
inc
dec
rol
pop
push
push
push
lea
push
push
push
call
mov
mov
push
mov
add
add
scas
lods
stos
fildl
iret
add
int3
out
push
scas
jb
add
add
add
loopne
jae
adc
iret
addl
or
inc
pop
add
push
sub
lea
lea
pop
call
push
push
shl
sub
not
push
and
add
ror
ror
sub
sub
sub
inc
xor
pop
lea
ror
rol
ror
pop
push
push
call
icebp
mov
mov
fidivl
jmp
lea
add
add
aam
in
add
add
in
imul
add
add
mov
imul
mov
jge
mov
sar
rolb
ja
in
clc
lcall
jne
push
shr
not
lea
pop
call
call
push
push
xor
shl
push
and
add
add
sub
not
shl
pop
ror
shr
sub
pop
push
xor
pop
pushl
push
lea
push
push
push
push
call
add
arpl
pop
out
add
add
lret
sarl
pop
fsubr
call
add
add
in
add
ja
roll
xchg
outsl
hlt
xorl
in
lcall
sbb
add
push
push
push
push
push
push
lea
push
call
add
mov
pop
mov
mov
into
into
add
mov
add
mov
add
lea
test
mov
add
mov
xchg
add
repnz
mov
sub
pop
call
push
push
shl
rol
push
or
not
add
rol
add
sub
sub
shr
add
pop
add
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
add
test
add
mov
push
jns
add
cltd
xchg
jp
add
mov
add
mov
imul
insb
mov
hlt
mov
mov
cwtl
mov
leave
int
fsub
add
les
push
mov
jl
loopne
xchg
leave
scas
imul
iret
aam
in
loopne
lcall
jne
push
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
add
lcall
add
xchg
add
ja
mov
jecxz
add
push
sti
add
lret
jne
bound
add
mov
cmpsb
scas
add
mov
add
mov
out
add
xchg
fimull
shl
lods
fistpll
jnp
in
ljmp
in
loopne
call
push
push
dec
dec
push
or
not
add
add
lea
dec
sub
xor
lea
pop
rol
sub
pop
push
push
rol
push
and
add
shl
xor
sub
sub
pop
sub
add
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
out
outsl
add
add
ffreep
add
mov
add
cld
add
add
add
add
lods
incb
pop
sahf
nop
add
in
add
add
testb
add
xlat
add
xchg
adc
lretw
xchg
icebp
hlt
add
testl
arpl
jo
mov
add
cmc
add
sub
pop
call
push
push
call
pop
loopne
jb
test
add
add
sti
ret
add
add
jae
rcrb
mov
add
add
movsb
mov
loope
movsl
mov
popf
filds
push
shl
pop
dec
jne
push
push
xor
add
lea
push
xor
add
sub
add
inc
rol
pop
ror
ror
pop
push
dec
dec
pop
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
add
je
testb
int3
add
add
mov
add
push
outsl
jne
mov
int3
aad
leave
outsl
jmp
jb
xlat
out
add
cwtl
add
cli
add
cld
pop
mov
push
loop
jmp
add
add
ja
add
mov
add
gs
mov
add
lcall
test
add
push
inc
pop
lea
push
sub
ror
pop
push
push
ror
pop
push
push
ror
add
dec
pop
push
push
sub
shl
pop
push
push
dec
rol
pop
call
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
je
pop
sti
cmp
shl
mul
add
add
add
je
testl
out
int
cmpl
add
imul
mov
js
add
add
pop
push
ja
lea
jl
mov
xchg
add
sub
pop
call
push
push
rol
dec
push
and
add
inc
not
shl
sub
ror
pop
not
add
lea
pop
push
sub
xor
pop
pushl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
loop
lds
add
lret
testl
leave
add
add
movsl
mov
add
js
fsubrs
test
add
int
add
add
in
mov
add
jne
mov
jno
add
roll
add
fcomps
add
sub
xor
shr
pop
push
call
push
sub
sub
sub
pop
mov
push
push
rol
add
not
push
or
inc
add
lea
lea
sub
pop
shr
xor
dec
pop
push
sub
sub
pop
pushl
push
shr
pop
call
push
add
pop
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
js
cmpsl
xchg
cltd
add
mov
add
xorl
mov
add
mov
mov
jge
incb
add
mov
pop
push
push
xor
add
pop
push
push
push
dec
add
pop
push
push
sub
xor
inc
pop
call
lea
push
push
dec
dec
push
xor
add
sub
add
sub
sub
pop
ror
rol
pop
push
add
inc
ror
pop
pushl
push
push
push
push
call
add
rcll
add
cmpsb
shl
scas
ret
add
add
stos
cmc
add
stc
out
cmc
mov
lods
ljmp
xchg
add
mov
pop
mov
add
add
loope
jno
add
test
add
addb
loope
add
add
pusha
add
arpl
lea
lcall
bound
add
push
push
lea
push
push
push
push
push
push
push
call
lret
jno
roll
in
mov
add
pop
mov
push
imul
add
mov
push
rolb
add
add
loope
push
add
sub
pop
push
call
push
push
sub
push
or
inc
add
not
not
sub
lea
dec
inc
pop
sub
sub
pop
push
lea
push
lea
push
push
push
lea
push
call
arpl
pushf
add
add
fcoms
mov
test
mov
mov
add
addb
jle
pushf
mov
add
popa
rclb
rcl
add
add
add
ja
imul
mov
call
call
call
push
dec
pop
call
mov
push
lea
push
lea
push
push
push
push
call
push
lahf
add
add
lahf
add
pop
lcall
push
add
add
or
add
movsb
sub
pop
lea
push
push
dec
sub
push
push
pop
add
shr
inc
not
rol
sub
add
add
pop
add
pop
push
inc
pop
pushl
push
push
push
push
call
add
jnp
mov
add
fnstcw
push
add
xchg
jb
add
loop
add
cmc
mov
push
add
add
fs
add
pop
add
push
enter
mov
add
push
add
add
sub
pop
call
push
push
call
add
add
add
xchg
add
pop
in
add
lret
cmpsb
mov
cmpsb
pop
je
popf
add
popf
jp
popf
movsb
lea
add
add
pop
add
out
mov
add
add
push
inc
shl
shr
pop
push
push
push
push
push
push
push
push
push
call
jb
sti
add
add
js
ret
jle
jb
add
mov
add
lcall
jmp
push
ja
xchg
fwait
rol
add
add
add
es
xchg
push
push
push
push
push
lea
push
push
call
mov
add
jnp
arpl
add
loope
xchg
jbe
pop
jge
cwtl
add
add
add
mov
add
mov
jae
pop
add
add
mov
pop
add
add
mov
bound
pop
filds
lcall
jne
push
push
add
push
or
inc
add
shl
rol
rol
inc
sub
sub
pop
sub
inc
inc
add
pop
push
push
push
lea
push
push
call
out
enter
xchg
mov
add
add
add
cmpsl
jge
mov
aam
xchg
les
add
lret
jae
add
lret
jle
mov
add
mov
xchg
nop
push
scas
out
int
add
add
push
add
in
in
lcall
push
add
pop
call
push
push
xor
push
or
not
add
rol
sub
sub
add
add
pop
sub
add
pop
push
push
call
add
pop
mov
jmp
rcrl
add
jae
add
push
ficoms
add
notl
stc
add
in
clc
lcall
jne
push
push
call
add
fadd
pop
add
movsb
add
gs
add
jge
push
in
jno
add
add
imul
mov
cli
insb
add
pop
push
add
test
add
outsl
lahf
imul
add
add
mov
add
push
lcall
mov
in
in
fisubl
fcom
gs
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
push
loope
mov
cld
add
add
andl
nop
add
popa
ret
add
add
add
in
loopne
push
call
push
push
inc
lea
push
xor
add
xor
shl
sub
sub
shr
pop
lea
rol
dec
add
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
cld
mov
scas
lock
popa
cmpsl
add
mov
push
mov
push
xchg
aam
add
addr16
jb
clc
jno
add
mov
add
add
sahf
outsl
lds
add
pop
add
test
in
loopne
lcall
jne
call
push
shl
add
pop
call
jmp
push
lea
push
lea
push
push
lea
push
lea
push
call
sahf
add
jae
bound
add
pop
mov
add
stc
nop
jp
adc
cmpsl
fucom
add
add
popa
jmp
test
mov
mov
jb
mov
add
add
in
call
add
add
push
sub
shr
pop
mov
push
not
pop
jmp
push
push
add
push
push
pop
add
sub
xor
xor
sub
shl
add
dec
pop
xor
shr
pop
push
dec
ror
pop
pushl
push
dec
pop
call
push
push
call
add
lret
add
push
jbe
in
imul
sti
sti
mov
xlat
pop
cld
add
roll
add
shrb
ja
xlat
push
dec
push
push
pop
add
sub
shr
pop
lea
xor
pop
push
dec
pop
pushl
push
push
push
lea
push
push
call
aad
data16
add
fcmovnbe
loope
add
pop
roll
add
xchg
imul
call
roll
add
jne
push
add
add
mov
jo
add
jno
push
mov
add
leave
iret
add
add
fadds
add
add
sub
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
push
call
leave
add
je
add
sahf
add
add
imul
add
pop
push
call
push
push
push
call
stos
mov
lret
jmp
enter
out
int3
push
lcall
fsubrp
lods
cmpsb
add
pop
add
iret
add
add
add
sarb
lret
pusha
into
lret
or
xchg
leave
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
add
fisubrs
add
loope
lret
pop
andb
mov
out
scas
stos
lea
mov
roll
in
fdivr
lcall
les
push
rol
lea
shr
ror
pop
pop
pop
push
sub
shl
sub
not
pop
pop
push
pop
xor
push
lea
push
push
push
lea
push
push
call
out
pop
mov
cli
in
add
jp
mov
imul
out
push
cmpsb
mov
ror
mov
lods
add
mov
ret
xchg
add
pop
mov
stos
mov
sub
pop
inc
push
shl
ror
pop
ret
push
not
shr
inc
shl
pop
leave
push
push
push
call
iret
jo
fiadds
jp
add
add
out
jp
xlat
out
add
roll
rcrl
add
add
xchg
add
add
xchg
lock
add
push
rcrl
add
jl
pop
xorl
aad
lcall
stos
lods
mov
jns
testb
or
push
push
push
push
push
lea
push
lea
push
lea
push
call
stos
mov
add
add
push
add
mov
add
pop
test
push
les
out
push
mov
mov
xchg
push
xlat
jge
mov
imul
ret
jge
add
add
lods
add
add
imul
rolb
add
flds
xchg
add
add
add
push
add
shr
shl
xor
pop
mov
push
push
push
lea
push
call
mov
xchg
pusha
outsl
add
incb
add
add
int3
xchg
xor
add
repnz
hlt
pop
pop
add
add
testl
jo
sub
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
lea
push
call
mov
out
movl
add
movsl
popa
mov
mov
add
add
imul
pop
add
add
mov
add
add
add
scas
add
add
cli
out
fsubl
push
outsl
sahf
add
in
test
stos
sarb
sub
pop
mov
jmp
push
push
push
call
imul
push
jnp
mov
ljmp
mov
repnz
mov
movsl
jnp
add
push
jmp
add
in
in
hlt
pop
mov
push
push
push
push
lea
push
push
push
push
call
push
out
testb
leave
fistpll
jmp
mov
cmpsb
sbbl
testl
int
movsl
add
add
add
add
pop
add
add
mov
mov
add
add
add
in
loopne
lcall
and
push
shr
pop
xor
push
ror
pop
xor
push
push
push
call
repnz
add
pop
xchg
push
jbe
leave
jbe
mov
sahf
mov
xchg
lcall
add
xchg
repnz
lahf
sbbb
cld
lock
ficoml
mov
add
rolb
dec
call
ficomps
sub
push
push
push
call
jae
fs
add
add
add
cmpsb
repnz
add
add
push
out
jbe
mov
cmpsl
int
mov
cld
mov
add
add
add
ret
out
andl
cwtl
add
sub
pop
jmp
push
lea
push
push
push
lea
push
call
add
xchg
add
loopne
fstl
popf
lret
sti
nop
jo
add
imul
add
pop
xchg
int
flds
neg
sub
pop
sub
push
ror
sub
pop
pushl
pop
push
push
push
push
push
call
pop
mov
add
shlb
mov
add
jge
add
add
mov
je
jmp
rcrb
add
add
push
push
loop
add
lds
add
testb
add
jge
roll
push
add
call
add
lcall
jmp
push
add
rol
pop
cmp
jne
push
push
push
lea
push
push
push
call
mov
add
stos
push
add
test
add
add
push
in
incb
xlat
fisubrs
sbb
add
mov
add
mov
mov
in
in
out
lods
add
add
push
call
mov
push
shl
pop
lea
push
dec
sub
pop
sub
push
pop
mov
shr
push
shl
pop
add
push
push
lea
push
call
add
fimuls
add
test
add
add
add
add
add
cwtl
xchg
popa
lret
ja
in
int3
sub
pop
sub
push
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
pop
add
add
arpl
jmp
mov
ljmp
add
mov
add
fdivs
add
movsl
loop
testl
add
into
jno
ret
stos
jo
popl
movb
add
add
add
into
add
add
push
push
stc
sub
pop
pop
push
shr
add
inc
pop
shr
and
push
xor
sub
add
pop
sub
push
shr
lea
pop
cmp
jne
push
lea
sub
sub
pop
leave
push
push
push
push
push
lea
push
push
call
test
add
pop
add
add
add
movsb
sahf
mov
pop
shll
in
add
add
add
fdiv
mull
fcoml
xchg
jge
add
add
add
add
add
int
lret
mov
add
add
add
enter
add
sub
pop
ret
push
push
push
lea
push
push
push
call
mov
add
rolb
add
addl
in
add
jge
out
stos
add
mov
add
add
lds
loopne
add
jle
push
add
xchg
add
aam
add
mov
into
ja
iret
int
mov
ror
jno
in
call
sub
call
add
stos
clc
pop
add
add
add
add
sarb
mov
add
pop
stos
add
add
in
add
imul
test
in
push
ror
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
call
js
xchg
add
sti
mov
xchg
push
jno
out
lods
mov
leave
add
jae
fisubrl
add
push
add
push
mulb
add
add
iret
xchg
add
pop
stos
fldenv
mov
cwtl
lods
mov
cmpsb
sub
pop
push
push
push
call
add
jno
add
fwait
xchg
add
cwtl
add
add
outsl
jl
xor
cmpl
pop
xchg
add
js
add
mov
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
enter
add
push
add
ja
add
add
add
add
into
int3
shlb
mov
add
mov
lret
shlb
jnp
mov
rcr
add
pop
mov
add
pop
mov
jle
in
fcomps
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
stos
add
sub
fildl
add
je
cmpsb
jl
pop
add
add
xchg
push
ret
mov
fcoms
add
add
ja
cmc
add
ret
add
addl
sbbl
lcall
add
add
push
push
push
lea
push
push
push
lea
push
push
call
repnz
add
jecxz
push
mov
add
int
add
adc
sti
lret
mov
imul
or
cmp
push
push
push
call
xchg
mov
add
jbe
neg
enter
add
add
push
jmp
mov
add
xchg
add
lea
sub
push
pop
mov
push
push
call
push
test
int
pop
xchg
popa
leave
arpl
lock
out
add
add
add
arpl
mov
mov
int3
add
add
in
add
mov
add
loop
ret
add
lods
lds
jl
xlat
add
clc
pop
shr
add
push
rol
inc
inc
pop
mov
push
add
pop
add
mov
push
dec
pop
add
push
push
push
lea
push
push
push
push
push
call
add
testb
rorb
lds
ficoms
movsb
push
mov
add
xchg
add
les
add
cmpsb
out
test
pop
mov
add
cmc
add
cld
fldl
mov
lds
rolb
shll
add
add
clc
add
in
xchg
pop
xor
mov
push
push
push
push
call
add
cmp
pusha
add
pop
jl
arpl
push
add
sahf
testl
imul
add
add
jo
insb
sahf
div
mov
cwtl
fwait
jp
jmp
pop
roll
sahf
mov
sahf
addr16
push
add
push
add
add
xchg
pop
mov
xchg
sub
pop
and
push
not
rol
pop
rol
rol
push
push
call
add
out
outsl
add
add
add
push
fs
mov
xchg
add
fnstsw
jp
repnz
stos
ffree
outsl
add
mul
xchg
popf
jae
iret
add
cmpsb
lock
lcall
add
add
sub
pop
xor
push
add
rol
pop
inc
push
push
push
push
call
mov
cmpsl
add
add
ljmp
xchg
lahf
mov
int3
int3
add
jns
leave
add
leave
mov
stos
jns
push
xlat
pushf
fs
xchg
cmp
jne
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
add
add
add
in
add
test
add
add
scas
incb
stos
movsb
sub
pop
add
cmp
je
push
lea
push
push
push
call
add
mov
push
aad
add
mov
add
cltd
into
fisubl
add
add
add
add
add
add
stc
leave
add
lods
add
add
sub
pop
add
push
xor
sub
add
add
pop
cmpl
jne
push
sub
pop
xor
pop
push
sub
pop
pop
push
inc
shl
sub
pop
pop
push
pop
pop
push
inc
sub
not
dec
pop
pop
leave
push
push
lea
push
push
push
lea
push
push
call
add
add
add
xchg
out
add
lahf
pop
mov
pop
lret
pop
call
js
add
test
xchg
add
hlt
fiadds
mov
mov
into
add
lea
ljmp
data16
add
add
in
mov
in
in
ret
push
dec
pop
mov
push
shr
lea
add
pop
add
mov
push
sub
add
rol
pop
push
push
lea
dec
pop
mulw
push
dec
add
pop
pop
call
push
xor
add
pop
push
push
rol
pop
call
push
push
push
push
call
jnp
jo
xchg
test
jecxz
xlat
jnp
fdiv
add
add
incb
add
faddp
add
add
fst
imul
add
add
scas
add
add
lcall
xor
push
sub
inc
dec
pop
pop
push
push
call
out
add
insb
jb
add
xchg
out
add
add
testb
addr16
jecxz
lods
add
lea
add
add
add
mov
mov
add
lcall
push
add
ror
shr
pop
pop
push
dec
add
pop
pop
pop
push
add
rol
xor
pop
leave
ret
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
lock
in
repnz
add
movsb
jmp
jnp
push
fdivrs
mov
jbe
push
int3
add
jl
push
test
mov
push
push
push
push
push
push
push
push
push
push
call
add
out
add
test
push
jns
flds
push
add
subb
mov
std
out
add
push
out
addb
std
lret
fstps
lea
out
jle
mov
pop
add
push
lea
push
push
push
call
mov
add
call
cltd
add
jle
mov
callw
add
add
jne
add
add
lods
add
add
cmpsb
test
xchg
add
cmpsl
jns
jp
add
add
add
push
push
push
push
lea
push
call
add
pushf
add
add
add
add
negl
fwait
add
add
divb
add
shll
mov
jo
mov
add
add
add
clc
bound
sub
pop
push
push
push
sub
rol
inc
pop
mov
push
push
lea
push
push
push
call
ret
mov
jmp
push
jecxz
arpl
fildll
shl
add
movsb
js
imul
xchg
mov
pop
pushf
pop
jns
add
push
add
add
add
add
add
add
jmp
add
js
add
sub
pop
pop
lea
push
dec
shl
pop
sub
push
push
push
push
push
push
lea
push
call
movl
mov
add
addr16
lea
fldl
add
add
add
xlat
mov
add
addl
xchg
add
add
jmp
nop
add
call
add
add
jbe
in
shr
stos
loope
addr16
aad
rolb
add
add
sub
pop
mov
push
shl
sub
pop
shr
push
sub
sub
not
inc
pop
add
push
push
push
lea
push
push
call
push
add
push
mov
jnp
mov
lods
call
jo
push
hlt
filds
jae
add
jnp
loop
add
add
lret
fwait
add
add
cli
mov
add
in
in
pop
mov
push
push
push
push
push
push
call
insb
add
add
imul
add
pop
fldcw
lods
add
fidivrs
lahf
pushf
add
xchg
scas
add
xchg
testb
into
pop
add
jge
stc
push
andb
cmc
loope
pusha
cld
movl
add
jno
add
add
sub
pop
add
push
push
call
mov
nop
fcmovnbe
add
push
add
add
mov
pop
add
insb
add
mov
mov
fcompl
in
data16
cmc
jecxz
stos
lods
mov
nop
mov
fiadds
mov
xchg
mov
std
leave
in
lret
addr16
add
mov
lcall
jae
popl
push
dec
ror
pop
mov
push
ror
lea
pop
add
push
sub
not
rol
pop
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
jb
stos
add
add
lahf
call
test
stos
add
add
filds
add
add
add
test
add
add
mov
add
add
bound
fdivr
lcall
adc
push
lea
push
push
lea
push
lea
push
push
call
jge
clc
xchg
add
add
fildl
lods
xchg
push
ja
in
repnz
add
movb
gs
xchg
jmp
push
add
add
add
add
sub
pop
mov
add
push
add
pop
xor
push
add
pop
rol
nop
push
dec
rol
rol
pop
nop
push
push
push
push
lea
push
push
call
std
lods
lahf
add
mov
rolb
pop
add
add
add
add
int3
rolb
xchg
push
mov
mov
add
add
add
add
add
imul
push
add
add
add
aad
add
jle
jnp
sub
pop
xor
nop
push
push
push
push
call
lods
jns
add
clc
mov
mov
add
call
lahf
lock
jne
jecxz
data16
ret
pop
test
add
popa
in
aam
cmpsb
lret
testl
shr
xor
not
pop
inc
nop
push
add
pop
nop
push
lea
pop
cmpb
jne
push
push
push
push
lea
push
push
push
call
add
cltd
mov
mov
add
add
add
cmc
iret
ret
jl
add
add
nop
add
add
push
push
movsl
pop
out
sub
pop
add
push
push
push
push
push
push
push
call
test
xchg
jae
fistl
jns
pop
add
imul
add
mov
add
lods
push
mov
imul
push
jne
in
mov
int3
out
scas
sub
pop
nop
push
xor
rol
lea
pop
nop
push
rol
pop
cmp
je
push
lea
push
lea
push
push
push
call
add
add
mov
ljmp
mov
add
add
mov
mov
mov
xorl
in
in
lcall
push
push
lea
push
push
lea
push
call
popf
rorl
mov
xchg
add
lea
add
xchg
add
add
add
shll
mov
add
addr16
add
ja
add
roll
arpl
xchg
add
add
out
loopne
add
sub
pop
nop
push
not
dec
inc
pop
inc
push
push
push
push
push
push
push
push
call
jnp
mov
mov
add
add
mov
ljmp
add
xchg
testb
movsb
push
movb
testb
add
add
add
jae
popa
mov
add
out
int3
add
sub
pop
nop
push
lea
push
push
lea
push
push
push
call
push
add
add
push
in
add
cmpsl
mov
sar
add
jno
add
mov
jo
cmpsl
iret
sub
pop
nop
push
push
push
push
push
lea
push
call
add
add
lret
pop
mov
shrl
xchg
cld
add
mov
mov
int3
int
mov
add
mov
mov
add
scas
mov
in
call
cmp
jb
push
lea
push
push
push
lea
push
call
add
add
mov
jnp
test
movsb
add
add
leave
lahf
ret
jecxz
lea
pop
mov
xchg
ret
call
add
ficoml
cld
lahf
iret
iret
add
cli
ljmp
add
ja
pushf
add
xchg
add
jp
push
add
add
add
sahf
push
add
lcall
rclb
lea
push
push
lea
push
push
push
lea
push
call
add
std
lcall
and
add
add
out
add
fstps
shl
add
scas
add
mov
add
add
pushf
in
iret
incb
out
jge
test
test
incb
ret
xlat
mov
add
mov
stc
rol
int
jbe
add
add
lcall
push
add
add
js
push
push
push
push
push
lea
push
lea
push
push
call
push
push
xchg
xchg
testl
xchg
out
bound
add
add
add
int
les
out
mov
mov
push
add
int
add
add
icebp
mov
lea
imul
mov
push
lea
push
push
call
add
add
add
add
fadds
lods
mov
into
call
enter
add
xchg
fucom
add
stos
lods
addl
add
add
test
add
mov
add
les
lods
add
lcall
rcll
sbb
push
push
push
push
push
push
call
add
popa
outsl
fistps
mov
in
clc
add
fbld
in
loop
ret
jecxz
test
mov
mov
add
add
add
add
loopne
stos
add
ljmp
ja
add
add
mov
mov
mov
mov
sub
pop
movzwl
push
push
call
out
add
ja
roll
xchg
jnp
add
mov
repnz
add
test
js
filds
pop
std
cli
in
mov
clc
lcall
inc
sbb
not
pop
add
push
not
add
shr
pop
mov
xor
push
lea
push
lea
push
push
push
push
push
call
add
jecxz
xchg
add
addb
push
mov
push
add
xlat
add
add
add
iret
jb
add
fidivs
add
add
fdivrp
mov
jmp
stc
add
testl
add
aad
add
add
lcall
dec
nop
add
shl
push
lea
push
push
push
push
push
call
sahf
scas
pop
add
mov
jno
add
imul
cli
clc
add
aad
push
int3
jne
rolb
std
movsl
addl
mov
call
xor
shl
push
sub
pop
xor
push
push
push
push
call
icebp
add
add
add
add
cli
add
add
test
imul
fdivrp
inc
pop
movsl
ret
jns
lods
lds
out
add
add
xchg
fldl
add
add
add
lock
lcall
loope
xor
push
push
push
push
push
call
std
roll
rcr
add
lea
add
add
data16
lock
into
push
rolb
add
xchg
fcmovb
add
mov
clc
add
add
popa
stc
mov
add
cmpsb
add
pop
add
add
lahf
mov
pop
leave
les
add
stc
pop
pop
in
pop
add
in
lcall
rcll
push
push
push
lea
push
push
push
push
call
add
jbe
test
andl
testl
movsl
addr16
arpl
outsl
mov
sarb
mov
fists
add
cltd
js
lods
cmc
add
in
cmc
add
mov
add
push
push
push
push
lea
push
call
leave
add
add
add
mov
icebp
lea
mov
mov
add
imul
in
in
pop
pop
push
push
push
push
lea
push
push
call
add
arpl
add
lret
mov
xchg
scas
popf
rcrb
jno
mov
mov
add
add
mov
add
fs
add
movsl
lock
add
push
add
mov
add
fistpll
add
fwait
test
jno
pop
mov
call
pop
pop
push
push
lea
push
push
lea
push
call
add
pusha
add
std
add
add
add
add
add
imul
test
add
lahf
push
cli
mov
add
xlat
add
add
fadds
push
frstor
sub
pop
pop
leave
push
push
push
push
push
lea
push
call
add
imul
add
aam
jmp
xchg
add
loope
xchg
mov
add
fbstp
add
add
sub
pop
ret
push
add
inc
pop
push
mov
push
dec
not
pop
push
push
add
ror
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
jae
add
xchg
popa
lds
add
loopne
hlt
add
add
xchg
xchg
cli
add
test
add
ret
test
add
cld
add
flds
sub
pop
push
push
lea
ror
pop
push
push
xor
dec
xor
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
in
jp
stos
xchg
addl
add
add
sahf
lret
movl
add
ja
add
jp
add
add
gs
les
les
add
add
add
push
mov
add
movl
add
out
add
lcall
adc
leave
or
jge
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
out
cmpsb
add
cltd
mov
cmc
add
roll
lock
cmc
pop
mov
add
mov
xchg
stos
movb
cwtl
into
add
add
sub
pop
test
je
mov
push
not
xor
pop
test
je
mov
push
rol
pop
mov
push
rol
lea
pop
mov
push
not
inc
pop
inc
cmp
je
push
xor
pop
test
je
mov
push
dec
add
pop
inc
push
dec
shl
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
out
add
mov
pushf
jecxz
out
stos
mov
jp
roll
out
cmpsb
jle
add
add
jl
mov
add
in
cmc
addl
cmc
in
flds
add
add
add
add
add
hlt
movsb
sub
pop
test
jne
xor
push
sub
xor
inc
pop
pop
push
sub
add
sub
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
add
jl
jmp
xchg
add
iret
add
add
xchg
lret
add
sahf
add
mov
mov
ljmp
mov
sti
add
mov
lcall
push
xor
add
pop
pop
push
push
lea
push
push
push
push
call
add
push
lret
jnp
cltd
mov
jge
repnz
out
jno
add
mov
jp
add
stos
jb
add
add
aam
add
add
data16
add
shll
add
rclb
out
add
add
mov
in
cltd
popl
addb
shl
pop
ret
mov
push
lea
push
push
push
push
push
push
push
push
call
mov
mov
add
jle
mov
testb
push
negb
pushf
sbbl
pop
addb
jl
xchg
std
add
add
jge
in
add
int
add
add
cmpsl
data16
add
add
add
add
add
push
shl
inc
pop
cmp
jne
lea
push
push
push
push
push
push
call
insb
add
add
add
add
stc
jle
jae
add
negl
xlat
pop
add
add
mov
ljmp
rolb
add
add
add
in
xchg
fcomp
push
add
xchg
add
mov
push
add
add
sub
pop
mov
push
rol
ror
add
pop
test
je
push
push
push
push
push
lea
push
push
call
jl
add
in
lock
add
add
fistl
jmp
add
add
push
testb
mov
add
push
out
js
push
cmpsl
ja
pop
mov
fistl
mov
add
lea
aad
int
add
jp
js
add
jno
add
lcall
push
push
push
push
push
push
push
call
add
add
rcl
add
insb
xchg
mov
mov
add
in
jmp
sbb
in
aam
sar
xchg
mov
mov
cli
mov
add
mov
add
pop
popa
mov
adc
lcall
movb
push
push
lea
push
call
mov
incb
imul
imul
fdivl
loope
push
add
add
insb
fnstenv
rclb
fs
mov
mov
sub
pop
cmp
jne
push
lea
inc
add
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
stos
cli
add
add
jle
push
mov
scas
push
pop
mov
add
jmp
add
add
outsl
xchg
in
mov
add
rorb
jo
add
push
inc
add
sub
pop
mov
add
push
lea
sub
pop
cmp
je
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
pusha
pop
add
fneni(8087
arpl
leave
mov
fadds
add
scas
add
add
add
add
add
mov
add
lret
shrl
add
outsl
add
subl
in
in
lcall
out
cli
call
xor
push
push
push
push
push
push
lea
push
call
mov
scas
add
push
jb
mov
mov
pop
mov
mov
add
add
mov
add
add
loopne
add
add
mov
in
pop
push
sub
xor
pop
pop
push
xor
inc
sub
dec
pop
pop
pop
push
dec
add
pop
leave
push
dec
lea
pop
ret
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
in
add
add
mov
fdivr
adcb
fucomip
add
add
jns
mov
jb
stos
add
add
outsl
mov
nop
add
add
jno
sub
pop
lea
pop
push
shr
pop
pop
pop
push
add
add
sub
pop
pop
leave
push
push
push
push
lea
push
push
lea
push
push
push
call
ror
movb
add
add
add
stc
pop
add
int
add
add
nop
pop
jae
shll
push
scas
std
add
add
xchg
fisttps
in
fdivr
lcall
or
push
push
push
push
push
push
call
fisubl
mov
fsubrp
pop
add
lods
hlt
add
jmp
out
add
in
loop
lret
mov
mov
popf
mov
loopne
xchg
add
add
mov
add
fsubr
lods
add
add
sub
pop
mov
pop
push
dec
shr
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
arpl
pusha
add
cwtl
xchg
add
add
add
incb
mov
jecxz
cltd
enter
add
js
jo
jecxz
rcr
mov
imul
add
cli
xchg
add
fbld
add
add
add
add
add
fidivs
lcall
push
sub
pop
pop
push
dec
pop
pop
push
rol
lea
not
pop
leave
push
ror
pop
ret
xor
cmp
stos
inc
cmp
xor
adc
and
adc
cmp
mov
cmc
cmp
xor
adc
jb
adc
mov
add
pop
and
cltd
inc
scas
mov
out
pop
sbb
xor
outsb
adcl
cmp
adc
in
cltd
cmpsb
lods
pop
sub
outsl
loope
mov
repz
cmp
sbb
into
cmpsl
cld
iret
dec
jb
dec
push
cmp
xchg
sub
and
cli
ss
push
fcomi
cmp
dec
xor
cmp
loope
jae
add
rclb
pusha
sub
jae
inc
movsb
xchg
sub
in
add
jle
int3
or
push
cltd
cltd
push
ret
sbb
nop
mov
pop
lea
push
xchg
and
mov
enter
popf
mov
inc
xchg
aas
xchg
jnp
pushf
mov
in
cmc
sbb
lds
cmp
inc
lea
arpl
into
je
xor
inc
outsl
call
movsl
fnsave
stos
sbb
mov
in
dec
push
lret
cmp
lahf
stos
pop
add
mov
xchg
lods
rorl
push
decl
ret
jge
add
and
and
xchg
popf
addr16
cld
cmp
lods
aam
orl
fcomip
int
imul
xchg
mov
add
outsb
sub
and
lods
test
xor
push
cmpsl
sbb
sbb
mov
cmp
lods
mov
pop
fsubrl
xchg
xchg
add
sbb
mov
icebp
clc
mulb
jb
movsl
sub
cmp
add
out
or
dec
jmp
sbb
stos
dec
cmp
daa
lock
sub
jl
adc
sarb
mov
imul
out
dec
lea
int3
push
dec
pop
or
jge
mov
pushf
ret
std
aaa
je
rorb
das
push
outsl
mov
cwtl
push
lcall
sti
lock
lahf
mov
and
mov
add
pop
stos
cmp
dec
or
jecxz
mov
testb
and
dec
cmp
jmp
xor
pop
jno
push
sub
outsl
xchg
push
scas
cmp
in
enter
add
inc
pop
das
insb
sti
push
popf
xchg
mov
xchg
aad
dec
xchg
pop
sbb
add
push
inc
rclb
dec
or
lds
dec
ss
add
sbb
movsb
insl
or
xchg
lea
jnp
fwait
xchg
xlat
adc
mov
jle
push
push
ds
lahf
fistpl
mov
lahf
scas
mov
scas
jns
xor
jg
lock
xor
xor
push
mov
out
push
xor
mov
push
dec
cmpsb
insb
cmp
in
sbb
and
orl
xor
jle
push
shll
push
pop
mov
dec
test
inc
push
gs
ds
data16
hlt
jge
ror
movsb
sti
insb
add
movsb
sar
dec
push
sbb
sbb
int
out
add
or
out
cmpsl
inc
movsb
xor
test
das
sub
fsubr
std
imul
pop
xor
test
push
addr16
mov
out
xchg
jo
not
and
ja
push
sahf
push
pushf
sub
sub
fcomp
xchg
xchg
pop
aad
ds
dec
mov
movsb
inc
and
ret
push
dec
lods
arpl
pop
add
enter
sbb
std
scas
pushf
fiadds
out
mov
add
testb
scas
mov
sahf
outsl
sub
into
pop
dec
sub
mov
mov
iret
jmp
sbb
inc
mov
push
mov
dec
enter
sub
push
popf
jne
jne
lods
dec
sub
js
popa
pop
inc
adc
aam
ja
fcmovbe
mov
shrl
or
cmpsl
cmpl
xchg
push
dec
in
dec
in
mov
insl
cmp
mov
loop
jmp
lret
xor
inc
sub
mov
in
jecxz
sarl
mov
fnsave
mov
pop
mov
insl
jne
xchg
cmp
fidivs
add
mov
push
ficompl
and
add
stos
aad
mov
dec
adc
cmp
pop
fcomp
xchg
dec
push
arpl
ds
and
xor
fcompl
jl
xor
lock
pop
cmp
cmp
add
push
or
sbb
loopne
outsb
pop
sbb
leave
adc
sbb
jp
vpackuswb
jnp
adcl
bound
out
add
xor
sub
dec
shrb
stos
insb
lds
icebp
test
and
inc
loopne
push
movsb
repz
and
or
mov
mov
fwait
inc
sub
and
stos
aad
jnp
push
mov
inc
clc
lea
pop
push
xor
add
pop
adc
or
mov
aam
in
jne
cmc
ficomps
or
in
xchg
es
push
in
push
int3
ljmp
sbb
fbstp
ficomps
jnp
and
aad
or
movsl
adc
inc
testl
dec
sbb
xchg
icebp
jmp
rorb
cmp
fsubrp
mov
hlt
aam
ficoms
dec
ret
xor
pop
sub
jns
mov
neg
mov
jbe
mov
fdivrl
xchg
scas
or
dec
pop
repz
ds
mov
arpl
aaa
arpl
dec
push
jmp
fidivl
out
shrb
jp
add
pusha
and
fdivrs
lahf
hlt
jp
cmpsl
jb
push
negb
loop
out
lcall
shll
and
mov
mov
rclb
cmp
push
inc
cmc
jmp
sbb
sti
int
cld
popa
imul
fimull
je
pop
push
or
inc
xchg
and
jle
sub
mov
cmp
pop
outsl
ret
push
int3
bound
xchg
sbb
mov
imul
movsb
sub
test
fisttpl
mov
movsl
mov
loopne
inc
clc
add
push
or
xorl
hlt
xchg
mov
jbe
sbb
dec
loopne
outsb
jge
jge
sub
dec
mov
pop
sub
add
fcmovnbe
shlb
mov
jg
jg
rol
jbe
xor
mov
in
push
mov
shrl
pop
xor
dec
or
cmp
xchg
aas
inc
lret
xor
jp
dec
decl
sarl
inc
es
mov
repnz
xor
test
decl
mov
mov
inc
lds
nop
popf
mov
and
pcmpgtd
movsb
loop
cmp
cmp
or
sbb
xor
lahf
clc
lret
push
daa
cli
mov
aaa
mov
ds
rcr
int3
dec
add
pmulhuw
stos
ret
lret
or
addr16
enter
leave
loop
fs
fxch
std
dec
inc
adc
mov
jle
fsubrp
into
dec
mov
push
pop
cmpsl
jnp
hlt
inc
shll
jmp
aad
icebp
shrb
imul
std
lock
lods
and
add
push
es
fcmovnbe
and
inc
mov
dec
sbb
push
cmp
stos
shll
push
in
mov
popf
out
mov
inc
mov
clc
nop
mov
icebp
jbe
enter
std
pop
and
jecxz
xor
mov
jecxz
int3
icebp
popf
jle
sbb
js
xchg
push
jecxz
les
enter
movsb
ret
push
rorl
fdivrp
xchg
fstl
add
cwtl
and
pcmpgtw
lods
sbb
repnz
int
pop
sub
sub
mov
out
mov
std
test
add
and
inc
mov
ret
xor
cmp
add
lea
cmp
jmp
adc
pop
mov
pop
sub
dec
ljmp
mov
inc
outsb
aad
insb
ffree
roll
sub
leave
in
xchg
add
xor
insb
fs
out
bound
push
inc
test
sahf
mov
mov
and
pop
sbb
out
int
mov
and
push
ljmp
sub
ja
push
call
rcl
ret
jmp
in
jmp
insb
sub
xor
outsb
scas
mov
sub
sahf
push
cltd
mov
jmp
jno
jo
sbb
aaa
inc
dec
fsub
into
jecxz
fucomi
pop
mov
stc
add
shll
jl
femms
add
mov
sbb
push
jmp
pop
jle
xor
and
sbbb
inc
pop
add
pop
test
sbb
test
inc
mull
js
xor
cmpsb
dec
push
bnd
test
jno
popa
dec
dec
jmp
in
sbb
push
jno
jne
push
dec
jb
sub
inc
push
sbb
jb
pop
mov
mov
xor
movsb
scas
cmp
add
insl
movsl
xor
js
outsb
and
insb
mov
cmp
mov
xchg
push
jo
loopne
xchg
xchg
dec
fbld
pusha
push
popa
mov
xor
pop
shll
mov
ss
push
mov
jo
mov
faddl
or
rorl
jno
mov
je
shll
fisubs
jl
out
test
lods
das
adcl
int
xchg
out
jl
xchg
xchg
push
test
add
dec
xchg
or
js
cmp
std
push
xchg
decb
roll
andb
nop
jbe
inc
pop
cmc
sahf
arpl
cltd
jecxz
sti
repnz
or
nop
jns
fs
lds
push
imul
mov
jnp
adc
or
js
ljmp
lea
push
fadd
daa
dec
pop
flds
xchg
or
adc
push
mov
shlb
outsb
jmp
mov
fxch
or
popf
or
shlb
add
aaa
movsl
hlt
movsb
imul
jg
rorl
mov
loope
or
dec
js
test
jnp
sahf
add
popa
xor
mov
push
jo
push
in
jo
mov
dec
mov
sub
xor
mov
stos
jge
dec
mov
cmp
mov
test
bswap
fdivrl
mov
jns
jp
mov
call
add
mov
int3
fistl
push
dec
cli
push
jae
mov
xor
aas
or
xor
cmc
lea
or
sti
nop
iret
bound
movsl
ror
clc
sti
test
jle
xchg
or
push
dec
lods
popf
addr16
pop
inc
lods
aaa
adc
popf
movsl
pextrw
sbb
fs
mov
mov
std
imul
test
dec
xchg
lods
popf
pushf
movsb
xchg
inc
xchg
mov
xor
mov
fldcw
lods
scas
push
mov
fisttpl
stc
pop
cwtl
addr16
shl
jns
stc
les
into
dec
mov
lods
mov
mov
inc
ljmp
mov
repnz
pop
sbb
lahf
push
ljmp
mov
mov
test
ds
lea
dec
sbbb
lret
xchg
repz
hlt
aad
imul
enter
movsl
mov
cmp
in
shll
jb
or
insb
sub
and
mov
and
nop
mov
cli
sbbb
inc
jmp
sti
popf
sub
jmp
scas
ss
in
daa
push
mov
cmp
mov
and
pop
mov
and
mov
or
pop
pop
aaa
lahf
out
jmp
test
lret
popf
cmp
xchg
inc
pop
pusha
jg
and
dec
je
push
shrl
mov
lret
test
daa
lcall
and
rorb
mov
loop
xchg
dec
cmp
jb
std
rorl
xor
xchg
in
stc
push
enter
mov
idiv
daa
mov
mov
test
in
sbb
lret
insl
rcl
cmp
hlt
sub
inc
into
nop
je
sbb
test
or
mov
inc
lret
mov
pusha
push
mov
andl
bound
add
dec
xchg
nop
and
dec
and
mov
fwait
cli
push
fnstsw
sub
mov
pop
and
or
push
mov
test
adcl
jnp
not
pushf
sti
add
jle
push
inc
js
lds
pop
aam
rorl
push
mov
pop
mov
xchg
imul
fdivs
lret
pop
fmull
mov
stos
mov
jb
mov
cmp
jp
add
adc
cmc
out
sub
xor
xor
cld
xchg
decb
inc
out
jns
les
fldenv
fadds
xchg
fdivrp
pop
aaa
out
inc
xor
in
cld
rcrb
dec
insb
clc
and
inc
sub
rorl
ds
in
mov
jle
insl
mov
mov
xchg
subb
lods
xchg
mov
sbb
dec
pop
mov
hlt
jo
mov
pop
sub
in
add
into
cmp
flds
xor
dec
pop
xor
pop
shrb
lods
and
iret
mov
andl
pop
push
and
jmp
pop
pop
out
jno
lret
pop
fwait
sahf
out
push
push
pop
aas
in
cwtl
inc
xchg
sbb
das
fyl2xp1
push
jg
bound
in
jo
or
pop
addb
jns
adcb
dec
pop
fistpll
mov
cmp
in
push
fmull
hlt
push
in
out
movsl
cli
stos
inc
sub
mov
int3
mov
xlat
aaa
int3
push
arpl
xor
decl
mov
leave
and
ljmp
sbb
xor
mov
scas
jo
mov
aaa
ss
jmp
into
cltd
mov
out
insl
xor
sub
xchg
testb
cmp
ffree
or
jne
push
leave
xor
jnp
unpckhps
mov
pusha
je
add
push
test
std
push
pushf
fistpll
les
inc
and
push
jae
cld
in
inc
inc
rcrl
cmp
cmp
lods
scas
sbb
mov
iret
push
daa
or
xchg
xchg
xor
cmp
xor
ss
dec
pop
mov
mov
ds
inc
push
xchg
xchg
cmpsl
dec
sbb
inc
and
mov
inc
test
cmp
ljmp
lods
mov
inc
mov
sti
xor
loope
push
psrlw
ret
jecxz
inc
sbb
divb
popf
dec
mov
rcr
call
fnstsw
pop
test
jecxz
or
icebp
imul
adc
enter
testb
js
enter
push
out
jne
inc
cltd
mov
jne
xchg
sub
xchg
movb
int3
popa
mov
add
jl
and
js
cld
imul
mov
in
mov
fldenv
inc
jnp
pop
pop
dec
xchg
stos
xor
hlt
clc
in
sahf
mov
adc
ds
in
ljmp
in
test
les
mov
lds
hlt
mov
dec
mov
aad
jbe
in
shl
loop
xchg
xor
xchg
daa
pop
fstp
xor
or
cmp
test
mov
gs
lock
mov
rcr
push
fmull
aam
mov
or
cmp
cltd
pop
mov
in
xchg
inc
repnz
das
cltd
imul
arpl
aas
shll
jecxz
jg
mov
push
add
mov
adc
cmpsl
pop
les
loopne
stos
scas
pop
cwtl
xor
stc
jno
leave
fstpl
out
or
cltd
push
ret
sti
jbe
mov
inc
push
jp
lret
lock
push
sbb
lods
mov
cli
sbb
mov
popf
sbb
cld
idivb
dec
les
popa
iret
or
xor
pop
add
loopne
cmc
rol
xor
pop
in
xchg
mov
adc
pusha
or
and
lahf
inc
dec
lahf
lock
mov
xchg
fistps
adc
es
cmpsb
ja
call
pop
pop
push
mov
dec
lcall
push
iret
lcall
cwtl
or
ja
jne
mov
mov
jg
jb
mov
xchg
jb
ret
pop
loop
stc
dec
or
lahf
lahf
pusha
mov
push
leave
mov
jne
loop
dec
xor
mov
scas
mov
jmp
xchg
xor
mov
fs
sahf
add
insl
nop
and
lods
push
outsl
adc
sub
mov
lret
inc
sub
mov
stos
es
add
and
sbb
dec
imul
enter
or
out
ds
mov
sub
xchg
push
sbb
mov
push
inc
jle
inc
cltd
shrb
cmp
sub
cmp
and
fwait
xchg
es
stos
add
pop
jp
pop
popa
jb
inc
orl
xchg
fwait
pop
inc
adc
jae
xchg
out
outsb
imul
xchg
fldcw
jecxz
inc
cli
mov
popa
stos
adc
add
sbb
daa
add
popf
xchg
cwtl
mov
jns
ljmp
sbb
sbb
loope
inc
mov
mov
sub
jns
and
and
add
and
add
cmc
pusha
xor
adc
jecxz
sub
xchg
xor
cwtl
and
data16
imull
mov
mov
inc
gs
das
gs
cmp
jp
dec
inc
xor
pusha
rorl
jb
jmp
dec
adc
sub
outsl
lret
repz
xchg
loop
imul
and
mov
mov
dec
lret
fildll
or
mov
sub
gs
xor
mov
jae
sub
les
dec
ja,pt
cld
test
mov
jne
mov
lcall
aad
adc
inc
xchg
mov
or
and
xchg
insl
push
or
int
cmp
fmulp
rolb
popa
mov
mov
jp
xchg
iret
lahf
fisubrl
sbb
push
je
add
insb
pop
pcmpgtw
sahf
rorl
data16
xchg
in
out
jns
inc
sub
inc
sbb
sub
cld
sbb
push
rorb
xlat
test
mov
iret
lods
int
inc
in
dec
mov
adc
dec
pop
arpl
jl
xchg
sub
add
xchg
jno
sub
add
in
fldcw
imul
mov
push
ret
out
and
push
loope
adc
push
mov
in
inc
dec
leave
xchg
inc
setp
int3
jge
pop
jmp
mov
lods
pop
or
aam
jne
lea
jmp
push
pop
aam
or
sub
cltd
xchg
inc
pop
data16
scas
pop
push
xor
jecxz
cwtl
push
jge
loope
dec
pop
in
clc
cs
push
out
test
test
mov
sahf
bound
cltd
movsb
movl
cmc
mov
inc
sbbl
mov
xor
hlt
cmp
mov
mov
imul
aaa
pusha
mov
mov
xchg
xchg
adcl
movsb
test
xor
and
lock
mov
pop
addr16
pop
movsb
int
mov
fnstenv
sub
int3
lcall
sbb
jnp
add
pop
cmpsl
dec
ja
sbb
mov
sub
out
mov
rorb
adc
pop
sbb
push
sarl
jns
inc
loopne
arpl
cmp
mov
jb
nop
fldt
xchg
imull
fdivp
cltd
mov
push
mov
jb
sbb
loop
sbb
jno
sahf
cmp
inc
lret
insl
dec
inc
in
push
push
cmp
jmp
sarb
lahf
clc
fisttps
ret
lahf
int3
loope
push
repz
decb
cli
push
or
push
xor
stos
in
push
xchg
insl
inc
mov
jecxz
out
mov
jnp
mov
loope
inc
addr16
fadds
cmp
pop
xlat
xchg
xchg
cmpsb
or
or
jnp
adc
add
jg
loopne
pop
nop
ror
add
daa
movsl
addb
xor
lret
inc
jle
add
addr16
mov
push
mov
and
push
or
leave
jae
push
call
jge
mov
push
je
mov
imul
shlb
jecxz
xor
nop
stos
cmpsl
fiadds
data16
iret
pop
mov
and
jae
mov
sbb
dec
rorb
jne
push
int3
js
push
rep
add
xor
lret
out
sub
clc
dec
aam
jbe
jb
hlt
cli
or
pop
adc
daa
inc
test
mov
cmp
push
inc
pushf
jbe
or
push
add
and
sub
or
mov
push
jge
push
dec
mov
dec
sahf
addr16
mov
and
jnp
fwait
mov
sub
repz
call
dec
aas
and
fs
xlat
ja
rcrl
and
fcmovb
mov
push
xor
pop
mov
nop
mov
jo
adc
fldt
push
add
cmp
mov
popaw
xor
or
jecxz
fdivrl
rcrl
mov
pop
jbe
push
xchg
ds
loope
scas
mov
nop
xchg
xlat
cwtl
mov
push
xor
das
scas
or
testl
je
mov
add
repz
inc
pop
jo
adc
arpl
mov
mov
push
mov
enter
and
movsb
inc
iretw
pop
out
jp
jno
orl
jo
nop
int
fisttpll
loopne
push
mov
or
in
add
test
mov
cld
mov
sbb
adc
pop
mulb
jp
movsl
mov
mov
adcb
cltd
xor
lahf
xchg
xor
sbb
dec
push
jnp
or
pop
mov
ljmp
mov
push
pop
inc
jno
cwtl
mov
repz
fsubrp
sahf
cs
jl
cld
sbb
stos
mov
adc
mov
adc
mov
pop
jno
push
les
sub
aam
jmp
in
jns
dec
push
jnp
mov
sbb
jmp
insl
xchg
ficomps
or
sub
adc
ss
pop
or
cmp
pop
data16
loope
push
pminsw
push
mov
push
stc
daa
pop
or
lret
dec
je
test
add
cmp
jp
add
add
sbb
inc
lret
outsl
aaa
fmull
mov
aam
repnz
iret
inc
pop
xor
push
rclb
push
test
mov
ja
mov
push
into
outsb
out
cmp
cmpsl
rcr
mov
stos
xlat
xchg
xor
push
or
out
test
int3
sbb
fwait
cmpsb
fidivs
mov
jg
xchg
lret
ja
and
mov
cmc
stos
pop
push
jae
hlt
cli
dec
cmp
lods
lret
out
add
pop
inc
dec
outsl
mov
aaa
cmpsl
jae,pn
xchg
lods
das
call
inc
outsb
mov
mov
rclw
call
fs
or
mov
mov
lea
jbe
pop
pushf
loopne
mov
gs
sti
mov
out
mov
testb
sbb
sub
in
notb
out
ds
hlt
mov
ljmp
ja
fdivs
insb
xchg
test
cmp
pop
xchg
in
sbb
int
les
mov
je
cmpsl
dec
pop
pop
xor
iret
insl
pop
mov
mov
add
add
clc
ja
pop
pop
cwtl
testl
repz
xor
lods
xor
pop
sbb
bound
add
lock
mov
push
or
inc
and
inc
cmp
push
jl
clc
adc
push
cmp
cltd
rcr
push
sub
jge
mov
cmpsl
clc
xchg
mov
xchg
ret
pop
jbe
js
stc
fisubrs
ss
out
aaa
pop
xchg
or
lret
aam
loope
dec
sub
in
jle
push
xchg
xor
inc
loop
pop
cwtl
les
sbb
popf
sub
icebp
fs
leave
push
cmp
pop
xchg
cmpsl
pop
jg
and
call
add
dec
aaa
cld
dec
dec
hlt
mov
in
sarl
jmp
in
mov
es
jns
pop
mov
lahf
mov
inc
dec
jle
ja
inc
jae
mov
fstl
sub
scas
xchg
mov
test
jbe
mov
mov
mov
dec
sbb
xor
std
adc
mov
mov
cmp
cmpl
cmp
dec
inc
xor
add
ss
push
xchg
add
hlt
xchg
push
pop
divl
add
and
repz
cmp
hlt
lds
aad
aaa
out
cwtl
aad
sarb
add
decb
cmp
add
out
sbb
fstl
cmp
cltd
or
xchg
adc
mov
push
adc
jmp
pusha
mov
mov
rorb
aas
ret
jno
fimull
xchg
lcall
addr16
add
sarl
pop
out
arpl
hlt
mov
int
add
adc
hlt
push
rcrb
fmul
leave
fisttpll
inc
popf
lret
aam
test
jle
mov
in
mov
insb
xchg
std
mov
stos
orb
mov
out
lcall
fwait
xlat
icebp
push
lcall
inc
jbe
sbbl
push
cld
stc
sbb
sbb
orl
cmp
pop
cmp
scas
pop
cmp
push
loop
in
lret
dec
stc
jg
enter
pop
js
and
add
pop
test
sbb
js
stos
xchg
leave
push
xchg
and
inc
push
paddsb
dec
enter
fimuls
test
push
pop
aam
sbb
and
mov
jo
lock
imul
cmpsb
rol
hlt
movsb
push
and
sti
negl
sub
sti
jo,pt
push
adc
outsl
or
push
pusha
mov
and
push
dec
push
cwtl
lea
imulb
arpl
jbe
movsb
lret
mov
jae
jmp
and
jns
fildl
cmp
and
lods
mov
mov
pop
hlt
and
jg
pop
scas
iret
into
cld
inc
xlat
insl
inc
in
gs
jne
push
insl
movsl
outsb
dec
xchg
sahf
xchg
mov
mov
ret
xor
arpl
sti
inc
jb
mov
lods
mov
pop
adc
dec
mov
and
push
add
mov
filds
add
jmp
imul
ja
sbb
jno
hlt
arpl
rcl
int3
out
xlat
insl
sbbb
aaa
je
mov
push
jmp
push
add
fbstp
xchg
jnp
in
sarl
xchg
maskmovq
imull
daa
sub
test
dec
inc
idivl
push
cltd
sub
xrelease
insl
push
lods
mov
rcr
pop
lock
bnd
or
pop
out
call
int3
xor
hlt
push
cli
mov
out
sbb
pusha
cmpsb
push
lret
dec
jge
test
iret
add
lret
sbb
aas
xchg
stos
popa
pop
out
inc
pop
mov
rorb
and
jb
pop
sbb
imul
mov
out
das
jb
test
data16
stos
enter
add
push
mov
sbb
vpmaxsw
and
mov
jno
mov
stos
insb
mov
scas
mov
jne
lea
bound
push
dec
addr16
or
mov
add
je
jmp
pop
mov
xchg
mov
fsubrp
mov
lret
dec
pop
arpl
pop
ljmp
adc
sahf
imul
out
lahf
lcall
pushfw
xor
out
ret
stc
mov
cmp
mov
push
mov
cmp
jmp
pop
cmpsb
clc
xor
sbb
jge
pop
ret
xchg
test
pop
and
aad
jo
loope
sarl
sub
pop
jno
inc
add
xor
cmp
jp
and
push
icebp
pop
mov
sbb
fwait
movsl
mov
jmp
mov
dec
push
ljmp
shrl
add
clc
lds
lcall
rorb
push
popa
sub
aas
cmpsl
mov
es
mov
and
packuswb
outsl
push
mov
jle
dec
mov
mov
mov
jbe
adc
bound
fs
dec
in
mov
aad
fadd
pop
mov
and
in
lods
dec
and
sbb
sbbb
repnz
cmp
data16
mov
jmp
outsl
insl
jbe
jae
mov
in
ja
das
xchg
fstpt
dec
add
or
mov
cmp
out
inc
push
xchg
inc
insl
inc
cmp
adc
jle
es
stos
cmpsb
aam
pop
cmp
jmp
sub
jo
imul
jp
aaa
in
outsb
pop
sbb
add
jmp
cmp
mov
sbb
xchg
sbb
sub
sbb
inc
push
mov
or
or
mov
popl
pop
dec
jp
test
loope
movsl
add
xor
mov
jae
jo
clc
sub
mov
sbb
xchg
xchg
fstl
mov
loope
fs
int
bound
lahf
cmpsb
out
inc
fwait
push
sbb
add
outsb
mov
cmp
push
sbb
inc
inc
in
push
push
pop
mov
cmp
sub
sahf
lds
sahf
xchg
subb
ljmp
lods
add
push
xlat
insb
outsb
pop
sbb
nop
inc
push
jp
mov
cmc
xchg
or
mov
cmc
pop
mov
rol
insb
xchg
cltd
scas
add
enter
loopne
cld
mov
cli
dec
in
inc
sub
fs
xchg
xlat
hlt
mov
imul
adc
mov
clc
adc
aas
push
outsb
push
sub
push
ficompl
rcl
pop
push
movsl
insb
sbb
mov
cmp
int
aam
jno
dec
jl
push
dec
daa
loop
mov
pushl
ss
incl
popf
or
xor
sbb
xchg
mov
insb
stc
xor
pushf
lcall
inc
lock
in
or
test
mov
mov
jmp
leave
loope
push
mov
mov
inc
xchg
lods
jno
ja
inc
imul
mov
lret
test
pmulhw
stos
adc
inc
push
or
push
out
jge
scas
pop
fisubs
lahf
push
push
jp
inc
adc
jmp
scas
mov
dec
xlat
and
sub
dec
mov
das
imul
bound
pop
sahf
mov
push
fmuls
fisttps
and
das
mov
aad
outsl
push
test
add
iret
xor
sbb
pop
push
mov
add
idiv
jecxz
xchg
dec
inc
mov
sti
xor
push
cmp
xchg
leave
js,pn
adc
in
inc
daa
mov
aas
div
repz
rclb
inc
mov
or
mov
inc
mov
sbb
cmpsb
outsl
xor
cltd
sbb
jecxz
add
xor
adc
push
jb
int3
movsb
imul
cltd
lahf
sbb
push
mov
mov
jl
icebp
call
stos
mov
xorb
lcall
xor
mov
enter
aaa
imul
negl
xor
dec
sahf
sbb
or
popa
xlat
aad
es
mov
scas
lea
add
lock
jo
xor
mov
mov
lret
out
jle
cmc
scas
jbe
xchg
leave
mov
lock
aad
push
lods
adc
in
jbe
in
movsb
loop
add
and
int
mov
xor
lret
addr16
dec
mov
stc
incl
mov
leave
jp
jg
cwtl
cwtl
dec
dec
sub
outsb
xchg
addr16
mov
test
stos
jno
int
inc
add
rcrb
insb
push
mov
dec
push
fdivp
sahf
call
sub
popf
jae
loop
push
inc
cli
push
jl
xor
enter
jae
out
js
repz
push
push
ds
push
rsm
cmp
bound
in
mov
outsb
pop
jmp
daa
test
popa
sub
mov
sub
cli
pop
fadd
js
jnp
xchg
idivb
sbb
fcomi
xor
pop
popf
push
fbstp
mov
fstps
dec
in
fs
fbld
cli
add
sbb
adc
pop
pusha
sub
mov
and
jl
sub
xchg
mov
clc
jnp
mov
add
mov
mov
mov
jp
cmp
leave
out
lds
repnz
or
cmp
loopne
xchg
xchg
js
iret
jnp
in
adc
mov
outsl
and
or
and
idiv
jbe
pop
mov
loopne
rorb
inc
add
in
adc
orb
out
je
add
push
fildl
out
das
or
cmpsl
cmp
push
std
inc
fistps
and
out
cmp
lret
imul
cmp
int
out
pusha
push
jp
cmp
add
jecxz
jne
dec
sbb
inc
stos
jle
fildl
inc
dec
or
movsl
or
mov
dec
cmp
jmp
jb
xchg
jge
cmpsb
mull
or
sbb
mov
test
dec
mov
jnp
int
cmp
pop
or
add
fnstsw
bound
call
sahf
cmp
mov
inc
stos
lret
pop
push
sbb
fbstp
dec
adc
cmp
jl
mov
mov
dec
scas
cli
push
xlat
mov
lret
push
cwtl
aam
imul
add
stos
hlt
int3
test
pushf
mov
mov
in
pusha
mov
mov
mov
cmp
fsubrl
repnz
scas
cltd
or
insl
mov
xchg
xchg
push
pop
xchg
rcrl
adcb
test
into
sti
cld
cltd
dec
lods
repz
pop
mov
push
dec
lcall
icebp
xor
lret
out
pop
gs
push
add
dec
mov
test
decl
cmp
xchg
mov
pop
jb
loopne
and
cmc
out
xor
cmpsl
add
xor
sti
sti
xor
ret
shl
std
iret
mov
fwait
pushf
mov
outsl
inc
or
das
lock
int
push
divl
xor
cld
push
mov
ja
push
xchg
pop
sti
mov
xor
cwtl
xchg
sbb
orb
push
mov
idiv
ja
lock
pop
stos
mov
cli
movsl
inc
lods
or
dec
pushf
fwait
dec
movsl
fidivrl
enter
and
lcall
imul
outsb
xchg
xor
or
push
movsw
sbb
repz
cs
mov
sub
and
add
lahf
out
sub
cmp
push
popw
mov
lret
sbb
je
popf
adc
and
mov
test
orb
or
inc
push
nop
sub
stos
fwait
pop
aad
xchg
mov
pop
sub
pop
shl
arpl
sub
lds
aam
rorb
cmp
cmp
popf
fldenv
mov
sbb
mov
lcall
js
cmp
add
mov
hlt
cmovs
in
roll
insb
inc
sahf
sarb
mov
mov
fistl
cmp
xlat
sbbb
cli
sahf
xor
ds
pop
mov
xchg
ja
mov
aaa
fadd
mov
add
shufps
stc
dec
mov
pop
stos
hlt
inc
pop
mov
sbb
push
sub
jae
mov
push
lahf
mov
ja
faddl
es
insb
dec
lcall
or
sti
and
test
push
test
mov
in
mov
iret
popw
sbb
xchg
jp
stos
jbe
jge
mov
cs
and
outsb
xchg
rolb
popl
pop
mov
ds
mov
xor
and
jecxz
lea
lret
iret
or
out
out
cmp
fdivrl
cltd
push
insl
rcl
xchg
mov
and
es
pushf
push
inc
and
jge,pn
out
cwtl
sub
xchg
js
adc
bswap
xor
pop
cmpsb
xor
repnz
jo
sbb
jmp
inc
lret
push
add
cmpsl
stc
pop
jo
cmp
lret
add
push
push
mov
test
push
dec
xchg
fisttpll
or
arpl
test
xlat
int3
dec
out
cmp
rcrb
ffreep
test
fisubrl
jle
lret
ja
rol
pop
and
cwtl
ja
lods
jnp
daa
push
add
and
ror
xchg
cli
and
aas
push
mov
mov
jbe
and
xor
cmp
dec
ljmp
clc
int3
je
data16
or
dec
lock
push
shrl
stos
lock
iret
adc
cwtl
sbb
int3
push
pop
jae
add
popf
fld
fdivrp
inc
scas
pop
stos
jae
mov
ficompl
rep
lret
dec
mov
imul
jb
aaa
fsubrs
bound
shlb
call
pop
icebp
pusha
inc
ljmp
mov
sbb
daa
sbb
out
adc
sub
mov
sub
or
xor
and
mov
jmp
cmp
inc
mulps
xchg
or
jns
es
xor
cs
adc
cmp
xor
add
std
iret
std
lods
adc
popa
das
test
cwtl
insl
int3
push
movsl
outsb
adc
test
iret
flds
push
xchg
test
mov
mov
ret
aas
cmp
cmc
clc
xor
insb
mov
sbb
test
movsb
out
call
ret
mov
decb
xchg
jmp
pop
xchg
lea
or
sbb
cmp
fs
push
push
cli
pop
sarb
arpl
inc
int
icebp
xor
dec
pop
hlt
cmpsl
mov
ljmp
lds
inc
jne
bound
pand
ficoms
out
cmp
jp
cmp
jge
and
jo
es
pop
dec
aas
insb
sub
inc
jp
and
cmp
jmp
mov
or
push
lods
fisubl
dec
push
jp
inc
mov
in
shl
enter
fstps
scas
movsl
data16
pop
add
stos
pop
out
jp
inc
shlb
sbb
adc
add
mov
push
add
sub
ds
push
mov
jp
das
idivb
mov
sub
cld
sub
mov
test
sub
pusha
repz
fisttpl
sti
shlb
jl
in
aam
pop
mov
jecxz
xchg
fidivrl
mov
dec
mov
push
mov
mov
lds
xchg
out
jno
sbb
out
loop
sbb
ss
pop
testb
scas
cld
or
inc
mov
in
mov
popa
frstor
and
inc
xchg
lea
pop
ds
pop
lcall
cld
das
test
push
stos
popa
lahf
xor
cmpsb
mov
pop
xor
les
negl
jge
dec
sahf
sbb
les
xchg
add
cwtl
pop
cltd
adc
cmp
fsubs
xor
aas
nop
add
push
test
adc
inc
aaa
xor
add
xchg
sub
fstps
lahf
cld
adc
push
cltd
lahf
jmp
fcoms
push
jl
pop
stc
int
addr16
add
jmp
mov
mov
js
xchg
movzbl
xor
js
inc
shl
mov
data16
xor
or
and
lea
jmp
xchg
mov
adc
fcomps
cmp
daa
stos
add
mov
jae
lret
push
jle
xchg
data16
xchg
rcrl
pop
das
pushl
stos
imul
setns
aad
jl
mov
sbb
call
inc
mov
fistps
cmpsl
rcl
jmp
push
mov
aad
and
sub
sub
cmc
cmp
inc
rcll
mov
sub
stos
shl
cmp
xchg
mov
flds
sub
aaa
dec
ret
pop
inc
inc
fwait
pusha
sbb
cmp
pop
cli
ljmp
pop
popf
dec
xor
shrb
mov
shrb
addr16
pop
dec
aam
adc
xlat
and
sub
lea
cmp
xchg
pop
data16
les
ret
or
jge
jge
mov
cmpsb
repz
mov
cwtl
loop
xchg
mov
inc
xor
push
jg
orb
std
mov
mov
mov
sti
and
insb
lret
or
ljmp
xchg
adc
outsl
in
test
fwait
lea
xchg
inc
xor
push
sub
mov
pop
jno
mov
pop
pop
out
shrb
pop
xor
pop
in
dec
in
or
add
pop
jle
lret
push
dec
insl
dec
icebp
mov
mov
js
test
sbb
rcrb
cmp
ds
in
and
idivl
dec
iret
xchg
pop
mov
adc
cld
push
dec
cmp
orl
in
sub
add
xor
mov
sahf
sbb
ss
movsb
cltd
nop
inc
ss
inc
push
mov
mov
fiadds
jmp
push
add
lds
popf
insl
imul
adc
pushf
or
addb
jbe
add
subb
sub
fistl
iret
sarb
pop
outsb
push
jmp
stc
pusha
mov
dec
cwtl
dec
sub
and
test
and
lret
sbb
call
aas
lcall
mov
push
shrb
cmp
insl
std
mov
enter
jno
xor
fsts
dec
inc
mull
in
sahf
and
dec
jmp
fistl
cs
adcb
mov
pop
mov
fsqrt
fidivl
bound
xor
and
repz
jp
inc
pop
call
aaa
mov
dec
jae
mov
cmpsb
dec
jne
stos
gs
jecxz
pop
dec
int3
cmp
fistl
imul
mov
xchg
adc
mov
dec
jb
into
cmp
cmp
mov
test
aad
sub
mov
aas
loop
pop
popl
pushf
sub
inc
sbb
negb
ja
fs
insb
push
pop
xor
add
jge
jne
mov
add
je
lret
pop
mov
pop
cmp
popa
mov
xor
call
dec
xor
fistpll
out
pop
in
mov
jbe
aas
mov
push
mov
mov
inc
fwait
mov
jle
stc
in
repz
das
sbb
popf
jbe
lds
mov
push
xlat
pushf
fidivrl
daa
inc
rclb
jp
bswap
fwait
cld
sbb
imul
jge
push
xchg
push
mov
adc
out
mov
lret
rolb
mov
clc
and
xchg
andl
add
pop
fidivs
jo
jns
test
jmp
or
xlat
inc
cmp
dec
add
cmc
cli
mov
ret
dec
repnz
dec
lahf
adcl
iret
insb
or
and
xchg
push
xchg
lret
insl
jns
add
inc
xchg
push
cli
sub
inc
fs
insl
test
push
xchg
arpl
scas
mov
movsl
jl
pop
ss
and
jle
pop
shlb
jp
test
mov
in
popl
dec
or
xchg
mov
mov
je
sahf
mov
outsl
cmp
outsl
pop
adc
xor
mov
leave
nop
xchg
push
xor
and
cmpsl
mov
aam
pop
inc
push
test
xor
add
sbb
ja
cld
pusha
lods
cltd
stos
fadds
lock
mov
mov
loop
loope
cli
mov
test
cmp
xchg
std
mov
je
xchg
add
fistpll
or
les
sub
orl
lods
lds
cmp
outsl
insb
cs
dec
into
mov
pop
shlb
xor
cwtl
jl
rcrl
mov
adc
pop
lea
mov
jmp
sti
popa
mov
out
add
fsubrs
lods
lods
negl
js
lods
mov
xor
jl
sbb
mov
movsb
aad
pop
inc
ret
add
test
fnstenv
sti
fwait
mov
daa
mov
into
add
aas
xorb
push
and
push
inc
lcall
cli
mov
out
mov
sbb
pop
jl
pop
dec
outsb
sbb
add
push
dec
jns
xor
imul
cmp
aam
jne
xor
dec
mov
adc
or
outsb
jle
jno
xchg
sub
out
xchg
fdivl
add
cmp
repz
xorl
in
xor
xor
mov
pop
inc
mov
loop
inc
test
push
mov
repz
es
mov
inc
dec
pop
dec
leave
add
dec
mov
push
gs
push
stos
fsubl
cld
xor
and
xor
sub
shlb
sbb
xchg
mov
jg
loopne
add
dec
div
cmpsl
out
fs
dec
lds
xchg
push
ret
movsb
loop
pop
test
int
sub
cmovl
cmp
xchg
xchg
mov
pop
mov
xchg
les
in
jl
mov
gs
ret
dec
hlt
inc
xor
lods
sahf
ds
inc
mov
cmpsb
xor
xor
jmp
rcrb
jp
in
push
sub
mov
in
lretw
xor
jnp
add
movsb
out
lret
inc
pop
pop
lock
lahf
test
lods
mov
push
es
aas
sub
imul
xchg
iret
xchg
cwtl
cmpsl
outsb
lret
push
push
add
test
stos
leave
jge
dec
fisttps
fbld
sbb
jno
outsb
xor
pop
int3
imul
pop
js
insb
out
pop
push
insb
aas
push
push
aas
pop
fildl
sub
idivb
hlt
decb
add
inc
inc
pop
lret
push
arpl
xchg
mov
xorl
mov
inc
daa
lcall
test
les
arpl
dec
incb
cmpsl
mov
pop
inc
sarb
mov
or
dec
pop
lock
ret
negb
mull
in
in
mov
xor
test
loop
add
data16
mov
mov
cltd
adc
fldt
stos
xchg
das
fwait
pop
arpl
push
mov
push
mov
test
aam
xchg
jne
jo
jb
test
mov
pop
cmp
xchg
sub
pop
mulb
les
sub
es
movsb
into
jmp
and
clc
lds
orl
cltd
dec
pop
jg
cmc
icebp
add
adc
jb
test
jp
daa
inc
mov
js,pt
add
fdivs
add
or
and
cmc
dec
lds
push
ret
fmull
push
push
cmp
out
push
mov
push
cmp
adc
or
cmpsl
inc
aas
and
xor
in
or
dec
ret
jle
repz
adc
adc
cvtpi2ps
sti
push
fwait
or
adc
push
inc
leave
jge
mov
pop
addb
push
pop
nop
sbb
mov
ds
lock
inc
sbb
jmp
inc
test
imul
loop
push
xorl
test
pop
jge
sub
scas
sbb
pop
mov
inc
cltd
jl
inc
repnz
dec
imul
imul
mov
orb
mov
bound
add
pusha
sarb
addr16
jle
push
lret
das
xchg
mov
cmp
fsubr
push
mov
fistl
jmp
ljmp
divb
stc
rcrl
xor
sti
sub
bound
repnz
push
cmp
sarb
nop
stos
loop
adc
loopne
cmp
push
int3
dec
cs
inc
sub
jo
fidivrl
mov
clc
lahf
call
addr16
pusha
cmp
ret
cmc
daa
aas
and
ds
push
test
cld
mov
andl
xchg
push
cltd
imul
push
xor
clc
lcall
sbb
lock
inc
das
nop
dec
lock
sub
lret
mov
jns
lcall
cmpsl
push
inc
cmp
bound
icebp
imul
xor
pop
cltd
mov
push
scas
gs
loope
sbb
in
into
mov
mov
dec
xchg
aas
jo
add
adc
imul
out
aam
jae
mov
icebp
mov
rcrb
cmpsl
pop
cwtl
add
push
add
stos
push
in
inc
xor
addr16
or
cmp
lods
push
fstpt
arpl
ret
mov
dec
je
out
fisttpl
push
sub
mov
fimuls
insl
xor
je
cli
mov
cmc
sbb
movsl
jno
lret
cs
out
mov
jge
adc
icebp
leave
or
pop
xchg
mov
pop
pusha
stos
js
sbb
push
jbe
and
lret
stos
fidivrl
ljmp
mov
aad
bound
jno
out
ljmp
je
cwtl
inc
mov
repnz
aad
mov
lea
les
jp
shrb
mov
and
test
add
iret
pop
repnz
scas
inc
lock
push
dec
cmc
mov
stos
loop
xchg
xchg
out
add
int
loopne
and
mov
adc
jmp
sbb
roll
ret
mov
call
pop
cli
pop
jp
xchg
inc
mov
outsl
jge
push
movb
lret
enter
out
lock
in
shrl
aaa
sub
or
cmp
mov
xor
add
sub
mov
push
cmp
or
out
pop
fidivs
je
xchg
mov
or
rorl
adc
cmp
loopne
fisttps
lods
repnz
mov
xchg
fisubrl
sbb
xlat
dec
rcll
lock
lret
jecxz
xor
ret
lahf
popa
jnp
daa
dec
cmp
stos
jns
in
xchg
mov
dec
addr16
fstpt
rcrl
xor
pop
pop
mov
pop
cmp
into
pop
pop
lcall
or
adc
sub
inc
xchg
aad
jns,pt
cmp
pop
mov
sub
dec
gs
adc
adc
jmp
rcrb
xchg
test
sub
add
aam
test
hlt
pusha
stc
xchg
inc
arpl
and
inc
fcmovu
mov
and
xor
outsb
or
xchg
lret
push
sti
xchg
sub
sub
lods
dec
adc
cld
das
mov
in
stc
mov
push
addr16
insb
addl
mov
inc
loopne
shlb
xchg
dec
dec
ret
mov
xor
lods
fildll
dec
mov
int
xchg
jae
fdivrs
stos
cld
or
xor
sahf
pop
arpl
popf
xchg
jo
iret
in
inc
push
push
pop
sbb
xchg
dec
sub
test
jo
and
add
adc
cltd
sbb
pop
adc
insl
jne
push
inc
shl
mov
pminsw
jne
rorl
pop
gs
cmp
inc
sahf
repnz
rclb
sub
fisubrs
cwtl
pop
mov
push
fsubrl
dec
mov
addr16
jle
inc
xchg
pop
incl
arpl
push
popa
push
enter
jmp
add
lock
cld
mov
push
inc
adc
dec
mov
mov
in
aad
inc
mov
xchg
in
shrb
sub
sub
lods
and
notb
mov
sub
clc
jns
pop
inc
sub
adc
mov
mov
add
cmpsl
sub
ror
jne
mov
mov
mov
mov
in
iret
lock
add
cmp
int
mov
in
pop
lret
fldl
pop
or
mov
icebp
push
push
jb
pop
aaa
jb
mov
add
push
pop
outsl
hlt
out
std
int3
jp
xlat
loope
mov
mov
push
and
fcmovbe
mov
insb
sti
mov
cs
add
dec
push
sahf
or
mov
scas
mov
dec
push
mov
mov
roll
fidivrl
jp
and
mov
xor
out
movsl
adc
dec
xchg
sbb
cmp
ret
and
pop
cmpsb
shll
push
arpl
dec
mov
mov
scas
xor
add
jnp
mulb
push
pop
cmp
in
and
icebp
sbb
sub
jns
cli
pop
push
pop
addr16
cbtw
cmp
pop
mov
add
cld
xchg
std
and
lret
mov
cli
lods
sub
fldcw
fistps
loope
xor
lea
lahf
out
popa
dec
pop
mov
xchg
loop
lret
jge
adc
shrb
jne
fwait
sti
dec
dec
push
stos
scas
in
das
cld
and
std
lret
sbb
sar
cmpsb
mov
popf
nop
int
lds
std
push
fsubrp
push
sbb
mov
pop
push
sbb
cli
je
cmovge
jge
xchg
mov
sbbb
xlat
mov
push
bound
cmp
jecxz
popa
jmp
jge
aad
lods
lods
or
dec
mov
mov
or
rcr
mov
aaa
xor
mov
sbb
in
je
test
jb
pop
push
jbe
ss
jnp
mov
and
sbb
pop
lds
loop
out
jge
fwait
inc
ds
aas
je
pop
adc
mov
push
cmp
fnstcw
jp
pop
mov
sub
int3
jge
popf
xchg
test
push
mov
iret
jle
cmc
and
pop
ja
fwait
daa
mov
cmp
sbb
cmp
cltd
je
or
sbb
out
out
sbb
mov
mov
ja
fwait
arpl
pushf
in
dec
push
cltd
in
jbe
push
and
pop
cmpsl
negb
add
sti
scas
sbb
push
cmp
mov
and
stc
mov
lds
and
jnp
add
imul
mov
das
xchg
xor
popf
dec
sbb
outsb
push
test
lcall
xor
sahf
into
jnp
or
decb
and
lds
fnsave
test
adc
xchg
clts
jne
pop
addr16
out
cmpsl
mov
jne
jg
scas
jo
mov
into
cli
loope
or
ficomps
iret
push
lock
imul
jae
xor
push
fcmovu
cmp
mov
subl
icebp
sub
lock
in
mov
mov
push
movsb
mov
jb
mov
mov
or
mov
mov
push
subl
inc
inc
stc
jecxz
lock
cmp
pop
lods
xor
mov
es
ret
sarb
cwtl
mov
js
xor
xor
addr16
lret
addr16
imul
les
and
dec
std
cltd
push
or
dec
jecxz
jo
jno
xchg
rolb
std
or
dec
or
cmp
lcall
in
add
dec
jg
sub
sbb
in
sbb
jno
inc
call
mov
cmp
movb
sbb
dec
scas
loope
orb
push
jmp
mov
out
pop
add
fisubrl
cmpsl
sbbb
nop
movsl
pop
jns
jge
sub
shlb
shl
sub
sti
mov
jg
push
xchg
jne
movsb
mov
rol
adc
dec
int
lds
lods
aaa
mov
lods
jecxz
stos
and
jae
xchg
jle
ss
xor
fldcw
sahf
add
xchg
xchg
aam
je
je
jle
push
jecxz
xor
mov
mov
ss
aas
cmpsb
add
fildll
xchg
lret
stos
add
test
clc
in
mov
std
push
xchg
leave
ja
mov
ds
ljmp
bound
movsb
das
pop
bnd
xchg
dec
fstpt
xchg
mov
iret
lods
into
mov
fimuls
das
cltd
add
es
mov
dec
adc
popa
mov
mov
ljmp
scas
test
into
mov
mov
add
in
outsb
dec
fldt
push
or
pop
lods
push
and
fmulp
cltd
popf
push
clc
push
add
dec
xchg
iret
cmpsb
daa
push
add
popf
cwtl
xchg
std
rol
test
int3
out
xor
sbbl
sbb
fnstenv
pop
ja
xchg
xchg
jae
mov
loope
call
divl
sub
les
fstpl
add
xor
sbb
xor
xor
sub
add
nop
dec
push
leave
out
aas
inc
popl
imul
adc
sbb
adc
dec
dec
xor
pop
pushf
xor
popf
in
jecxz
aaa
movhps
insb
shr
das
cmp
sub
stos
pop
roll
sar
xor
dec
iret
xlat
jl
mov
xchg
fildl
xor
popf
aam
movnti
addr16
div
xor
imul
cltd
aas
and
call
push
enter
mov
imul
mov
ret
push
loope
mov
adc
pop
iret
jns
adc
inc
int
int
cld
out
out
jge
ds
hlt
rcll
rclb
push
into
iret
adcb
in
out
adc
or
and
and
aad
shll
cmpsb
sti
xor
leave
add
cmp
aas
aam
pop
cld
aam
mov
into
ss
nop
jecxz
inc
cmpsl
mov
push
mov
lahf
stos
xchg
cmp
sarb
add
inc
push
jbe
add
movsl
xor
in
cmp
outsb
xor
pop
sub
stc
xchg
and
pop
push
testl
imul
mov
pop
sbb
insl
push
pop
mov
sub
out
movsl
mov
int3
lret
js
clc
mov
pop
popf
rcll
divl
adc
jb
call
dec
loop
mov
xchg
out
mov
xchg
lds
jbe
pop
jne
cmp
inc
movsl
mov
add
test
cmp
addb
jg
mov
mov
or
inc
and
and
or
mov
pushl
cld
insl
mov
and
xchg
adc
out
jns
data16
sbb
adc
cmp
pop
push
test
fcoml
mov
pop
dec
jb
fdivrl
movsl
bound
mov
mov
jbe
insb
xchg
adc
jbe
jo
and
stos
ljmp
fsubs
gs
and
sbb
cmp
push
cmp
fisubs
xor
lea
jo
add
scas
inc
push
mov
popf
dec
stc
daa
fstpt
repnz
xchg
push
fnstcw
jg
out
mov
imul
cmpsb
loop
sbb
jae
cmpsb
push
pop
rclb
jae
das
pop
jmp
fdivrp
nop
jnp
xor
jmp
push
dec
push
jmp
sahf
jge
in
int
cmpsb
mov
mov
pop
pop
adc
enter
lcall
movsl
sbb
int
sti
ja
and
or
add
clc
add
cmpsb
sub
add
and
adc
sbb
mov
jbe
les
mov
stos
mov
xchg
mov
lret
pop
out
push
push
mov
das
xor
mov
int3
mov
mov
fsubrl
xor
xchg
add
jmp
leave
mov
rorb
xor
jns
pop
gs
xchg
sub
push
pop
int
cmpsl
out
mov
jb
clc
aas
pop
xor
add
push
sti
inc
data16
js
push
pop
leave
orb
fmulp
mov
pop
fs
push
mov
fwait
icebp
jmp
mov
jnp
mov
bnd
movsb
cmpsl
push
pop
data16
sbb
adc
cmp
aam
and
scas
mul
stc
inc
movsl
test
into
fistpl
xchg
xchg
test
jb
jl
push
dec
outsb
stos
aam
in
push
sbb
jno
cmpsl
cmp
outsl
xor
sub
aad
push
nop
and
je
fcmovnb
idiv
add
into
push
and
push
and
fbstp
jge
xchg
sub
and
cmp
popf
adcb
xor
cmp
xor
push
adc
jae
ja
jb
and
or
push
imul
dec
jl
lret
inc
push
jnp
sub
inc
dec
out
iret
push
mov
adc
jmp
test
rolb
shlb
scas
push
pop
xor
fstl
inc
xchg
mov
clc
mov
cmp
pop
rcll
mov
andl
jl
jae
xorps
rcrb
out
push
cltd
lret
movsl
jecxz
push
fldl
outsb
inc
sub
push
push
sbb
cmp
push
fincstp
orb
add
cli
je
xchg
cmpsb
pop
push
movsb
in
cld
cmp
call
pop
adc
sbb
cmc
sub
arpl
cmp
add
in
or
dec
sbb
popf
cmp
lods
adc
pop
inc
cli
mov
aad
jo
inc
mov
es
pop
inc
sarl
nop
les
lods
mov
push
jl
jnp
jle
sbb
loopne
or
xor
mov
int3
push
test
xchg
mov
mov
adc
repz
adc
dec
adc
mov
pop
push
pop
pop
cmp
rorl
jg
pop
roll
lret
pop
lods
xchg
or
nop
mov
lea
push
loopne
push
push
mov
dec
movsb
repz
mov
mov
or
js
push
cld
mov
mov
add
idivl
mov
enter
sub
mov
mulb
ret
jg
adc
sbb
enter
add
adc
clc
and
in
pop
out
iret
sub
add
sub
push
sbb
mov
sbb
outsl
mov
mov
push
outsl
mov
movsl
sbb
outsb
pop
mov
shrl
inc
sti
btrl
pop
mov
nop
or
fsubr
inc
push
adc
hlt
xchg
and
xor
out
gs
ss
xlat
sub
adc
mov
mov
mov
or
push
pop
sbb
xor
sbb
pop
mov
daa
jp
test
sbb
addr16
mov
pop
test
repz
or
mov
and
xchg
pop
repnz
ds
jmp
mov
push
nop
lea
iret
lods
out
or
mov
es
sti
repnz
mov
or
mov
mov
push
or
mov
rolb
sti
inc
cmp
push
call
lret
cmpsb
inc
cld
jl
and
mov
leave
xchg
jnp
pop
imul
cmp
adc
inc
loop
scas
sub
sarl
test
push
cmp
pop
or
outsl
cmp
test
sub
dec
popa
inc
sbb
mov
cmpsb
mov
addr16
add
sti
outsb
sub
xchg
jno
xor
cmp
cltd
adc
xor
and
jle
xchg
add
fisttps
ljmp
je
mov
cmpsb
gs
or
je
push
dec
fsubrs
push
mov
das
xchg
pop
mov
popf
scas
hlt
rorl
cmc
fisubrs
lcall
xor
sub
mov
insl
mulb
out
xchg
shlb
dec
lods
arpl
dec
and
in
rol
add
loope
cld
sarl
stc
xchg
xchg
xchg
cmp
jg
push
vmovsd
push
outsl
out
fldenv
rcll
add
inc
mov
push
xor
mov
ds
iret
cmp
mov
out
adc
data16
push
loope
push
cwtl
sub
inc
arpl
sub
cmc
les
xchg
icebp
lahf
adc
push
movl
lret
jle
jnp
into
insl
and
stc
psubsb
pop
in
notl
dec
scas
mov
inc
sbb
mov
dec
pop
imul
pop
dec
inc
sbb
jae
jno
addr16
xor
mul
inc
jno
popf
js
push
dec
je
stc
jmp
jno
sub
inc
mov
sub
loop
push
test
popf
sbb
aad
or
stc
int
pop
dec
sub
lcall
ds
dec
push
mov
adc
negb
dec
jbe
jns
mov
push
in
push
movsb
out
andl
dec
add
in
push
and
mov
mov
dec
inc
add
movl
inc
cwtl
fdivrs
mov
addl
mov
fildl
jecxz
pushf
mov
or
mov
ds
jge
add
inc
fcomps
dec
lret
push
jno
out
lret
stc
pop
xor
cmp
cmpb
pop
cmp
mov
test
mov
testl
je
outsb
leave
aaa
data16
aam
insl
ljmp
pushf
lds
rclb
or
data16
and
push
push
cmpsl
dec
xor
fadds
mov
jg
pop
call
cld
mov
icebp
adc
inc
xor
inc
aas
jnp
and
test
jo
cmpl
sub
mov
ds
mov
jne
and
or
clc
or
mov
fwait
xchg
add
and
push
shll
aam
xor
addl
in
ret
or
cmc
lahf
xchg
iret
adc
pusha
out
adc
lret
mov
popf
sbb
mov
ds
mov
out
sub
addr16
cmp
jbe
xorl
inc
sub
test
pop
movsb
cltd
jge
lds
loope
movsl
add
add
ja
inc
cmp
stc
scas
xchg
stos
add
cmpsl
push
outsl
fsubrl
jne
xchg
popf
lds
sarl
clc
cmp
jge
mov
xor
mov
and
lods
push
mov
mov
mov
mov
jmp
bound
inc
sub
movsb
mov
je
push
pop
fmull
arpl
ds
push
test
jne
adc
adc
add
pop
rcl
ja
add
icebp
add
ds
popa
jae
xchg
scas
sti
xorb
push
and
mov
or
xor
loope
popf
cmpsb
jo
or
xchg
js
stc
dec
jle
fs
in
clc
das
pop
std
mov
push
adc
leave
sub
sbb
sub
test
jnp
into
lret
loop
mov
xchg
add
inc
sbb
popa
inc
push
out
adc
shlb
push
and
cmc
sub
repnz
lcall
or
jge
in
mov
push
insb
dec
cmp
cmp
jp
xchg
notl
mov
shlb
pop
lahf
pop
mov
xor
iret
outsw
shr
cld
repz
repnz
mov
stos
inc
dec
out
push
pop
dec
into
sbb
dec
rorl
mov
fisubrl
pop
out
frstor
push
lds
jle
out
mov
push
fildll
inc
xchg
cmc
inc
cmp
ljmp
mov
cmpsb
cmpsb
imul
jns
and
loop
pop
mov
int
mov
xchg
fisubs
dec
adc
out
stc
sbb
cmc
push
xchg
outsl
mov
stc
pop
xor
pusha
mov
scas
or
xor
mov
aaa
gs
icebp
inc
cli
sbb
push
gs
popf
mov
movsl
outsb
cmpsl
and
mov
popf
es
into
mov
or
aam
movsb
xchg
xor
mov
pushf
inc
xchg
inc
push
leave
add
inc
dec
aas
lret
xchg
mov
jg
imul
movsl
lcall
repz
sbb
push
rcrl
push
sub
lock
mov
cltd
mov
lret
out
mov
adc
outsb
sbb
aas
jae
inc
lret
push
cs
enter
lock
adc
cmp
push
pusha
pusha
leave
xor
mov
idivl
test
inc
and
mov
mov
and
jmp
insl
xchg
insl
push
inc
push
sbb
stos
sub
faddp
sbb
mov
test
clc
pop
into
and
cmpsb
xchg
ffreep
sbb
shlb
mov
cmp
push
mov
repnz
cmp
cmp
in
mov
dec
cmpsl
inc
pop
mov
enter
repz
mov
repnz
mov
stos
outsl
cmp
xlat
lret
mov
inc
pop
popa
adc
xor
jmp
inc
cmp
jl
jno
adc
add
mov
cmp
gs
adc
add
mov
das
ljmp
icebp
mov
jl
mov
outsl
movsb
xchg
outsb
fsub
adc
dec
dec
or
outsl
sbb
lret
add
cmp
mov
mov
jbe
dec
sbb
int
mov
fadd
pop
cwtl
fwait
daa
sarw
or
add
stos
cltd
jle
rolb
mov
jl
test
mov
sbb
push
js
popa
xor
scas
ja
jge
adc
stos
stc
iret
fisttps
lds
push
roll
into
add
in
pop
add
or
js
sarl
mov
pop
inc
scas
movsb
inc
jae
out
hlt
jl
push
pop
xor
push
ljmp
sbb
stos
mov
sub
adc
jb
jmp
imul
out
and
ret
and
push
xchg
ds
mov
push
fbld
fstl
ljmp
xchg
cwtl
jmp
and
das
or
xchg
mov
ja
mov
mov
jae
rcrb
xchg
and
repz
cmc
sbb
mov
test
inc
imul
sahf
mov
mov
lea
jbe
and
dec
pop
insb
ret
push
xchg
subb
push
movsb
or
dec
push
push
ret
or
inc
cmp
mov
sub
test
inc
dec
adc
or
dec
pop
mov
mov
jo
sahf
sbb
cmp
shl
jns
xor
xlat
imul
subb
aaa
sbb
lcall
lcall
sbb
sahf
sbb
movsb
lods
sub
mov
jge
lods
push
js
test
iret
dec
or
mov
xchg
sbb
movsb
mov
adc
sbb
addr16
out
std
push
sub
les
inc
aad
pushl
jnp
arpl
in
jne
xor
cmp
push
mov
cmp
xor
cs
scas
dec
out
and
pop
popa
mov
pop
xor
arpl
mov
mov
adc
xchg
and
sbb
pop
mov
xor
dec
scas
pop
pop
test
add
cmp
roll
movsb
pop
sbb
js
sub
fs
ds
cld
pop
popf
mov
add
test
scas
mov
mov
nop
push
cmc
jae
out
cltd
inc
rclb
mov
or
je
je
lcall
ss
hlt
xchg
int
dec
loopne
mov
dec
and
imul
cmpsl
pop
cmpsb
inc
fs
cmc
pushf
addr16
aaa
test
ja
sbb
jae
lahf
xchg
test
mov
jecxz
add
sahf
test
dec
cmpsl
hlt
mov
or
loopne
mov
sbb
xchg
in
popa
push
inc
add
jbe
mov
lret
xchg
gs
cmp
cmp
xor
lret
std
fnsave
fnstcw
test
jo
mov
ret
xlat
pop
cmpsl
mov
mov
bound
mov
lahf
in
adc
push
enter
mov
daa
shrl
sbb
shlb
movsl
mov
into
mov
cli
outsb
imul
mov
dec
leave
pushf
sahf
movsb
mov
push
sbb
cmp
inc
jno
imul
sti
stc
xor
lret
sbb
outsb
jmp
cmp
jmp
test
xchg
pop
mov
pop
jl
scas
aas
test
inc
fistpll
int
ds
inc
clc
mov
adc
inc
insl
js
fmull
in
adc
jo
cmp
lods
neg
int3
lret
push
lods
outsb
fs
jne
into
dec
sub
in
mov
push
jl
mov
xchg
mov
pop
adc
xor
test
mov
jp
enter
or
pop
in
shlb
cltd
mov
xor
pusha
pop
repz
subb
sub
fcmovnu
bound
jo
pushl
inc
mov
sbb
or
cmpsb
add
mov
mov
imull
xchg
cmpsl
pop
cmpb
jp
xchg
sub
scas
sub
pop
or
or
cli
xchg
push
fcomps
fsubs
pop
and
arpl
xchg
sbb
and
xchg
pop
cmp
inc
jns
bound
in
jb
push
xor
stc
sub
and
icebp
shlb
mov
xchg
mov
fisubl
inc
sbbl
testl
ljmp
cmp
ret
push
jl
mov
mov
push
shl
ret
inc
dec
stc
aaa
inc
hlt
insb
lret
aad
add
bndldx
xchg
cmp
nop
popa
sbb
xlat
mov
push
jge
xchg
dec
shr
lret
loop
fcom
cmp
sahf
jae
fbstp
not
sub
lock
push
jle
divb
push
orb
testb
jno
mov
fs
push
cwtl
call
xor
cltd
sbb
int
jne
notb
fwait
pop
fmull
or
jp
mov
xchg
and
negl
scas
xchg
inc
jne
iret
xchg
or
or
aam
jo
dec
out
dec
dec
push
xlat
dec
ds
inc
leave
and
outsl
mov
ss
pop
mov
test
sbb
mov
leave
pop
in
add
adc
hlt
idiv
xor
push
and
adc
pop
xchg
in
jle
sub
xchg
or
and
dec
scas
cltd
iret
rcl
xor
or
gs
dec
pop
std
xor
out
lret
scas
xchg
adc
pusha
inc
stos
dec
pop
pop
lret
cltd
dec
stos
push
loopne
xchg
fcoms
xchg
push
jecxz
mov
hlt
mov
test
adc
sub
jno
dec
lock
push
mov
ss
cmpsl
inc
and
and
dec
push
movl
jecxz
scas
aam
leave
leave
sub
and
lods
lock
ds
jno
inc
mov
mov
stc
fists
rcrl
xchg
into
jns
andb
pop
jns
fcomi
push
xchg
pop
and
movsl
fnstenv
sbb
aam
dec
cmp
jno
les
cs
xor
nop
inc
mov
mov
fs
jmp
pop
stos
adc
cmpsb
cmp
mov
mov
xor
js
in
cmpl
sub
jp
fisttpl
sub
and
mov
aam
std
sahf
or
mov
cmp
xchg
cmp
mov
push
mov
mov
dec
in
lahf
ret
cmp
aam
mov
in
jmp
jecxz
sub
enter
fstps
sub
mov
mov
xchg
lds
adc
sbb
ljmp
fcoms
adc
in
xor
add
pop
mov
push
cmp
outsl
int3
pop
dec
loop
addl
rorb
mull
push
into
sbb
outsb
pop
push
clc
testb
lock
pop
in
out
dec
ja
push
lods
repnz
push
lahf
xchg
sbb
aad
aam
mov
lahf
mov
sub
jo
outsl
xor
adc
sbb
pop
lret
pop
dec
lods
sub
jae
lret
ljmp
int3
fwait
mov
jle
xor
or
adc
push
sti
daa
lods
imul
mov
cmp
iret
aad
cmp
movsb
inc
jmp
shl
mov
pop
addr16
fs
dec
mov
add
cmp
mov
repz
or
int3
cmp
mov
lahf
or
inc
jne
adc
dec
and
inc
or
xchg
cmp
lock
cwtl
rorl
pop
enter
mov
dec
shll
push
xor
cmpsl
xorb
es
call
std
popf
add
mov
fadds
xchg
lcall
xor
dec
addr16
and
fnsave
xlat
data16
inc
pop
sbb
cmpsb
fidivl
xchg
sbb
and
loop
in
repnz
loop
xor
dec
pop
push
jg
ja
pop
ret
sahf
dec
or
insb
test
js
mov
in
push
mov
js
inc
jns
mov
aad
mov
mov
ljmp
stos
or
and
jnp
daa
lods
push
pop
dec
jge
adc
into
mov
mov
shlb
pop
dec
lds
sbb
pop
add
call
lret
or
jmp
movsl
sub
mov
jp
repnz
add
adc
sub
xor
imul
push
iret
jmp
scas
add
scas
loopne
orl
jecxz
dec
mov
sbb
mov
jne
mov
mov
lahf
xchg
inc
sub
sub
mov
fcoms
and
dec
addb
insl
add
cmpsb
les
mov
rcll
test
dec
mov
out
cmp
xor
cmpsb
sbb
in
loopne
push
loope
cli
cmp
outsl
aad
cmpsl
sub
das
and
xchg
jmp
jg
loope
cmpsl
jnp
xor
scas
aaa
pop
nop
adcl
out
outsl
adc
loop
mov
std
xchg
dec
in
push
add
cltd
lea
inc
jecxz
mov
icebp
xchg
mov
pushf
cld
ds
insl
add
mov
sbb
iret
add
ljmp
dec
imul
pop
mov
imul
jnp
fcmovu
cmp
test
in
ljmp
xchg
push
dec
sbb
sbb
daa
out
ss
pop
add
mov
jg
and
scas
fwait
or
xchg
sub
gs
cmp
addr16
mov
repnz
movsl
xchg
mov
std
or
subb
daa
clc
jecxz
mov
pop
cmpl
cmc
dec
ficomps
cwtl
hlt
and
jge
mov
daa
lret
imul
stos
inc
inc
cmp
test
mov
fsubp
xchg
jns
repnz
clc
cli
fs
adc
inc
jno
loop
dec
xor
jbe
das
bound
cmp
movsb
in
mov
xor
add
out
and
int3
dec
mov
fst
lahf
xchg
loope
xor
sbb
rcrb
mov
xor
cwtl
out
pop
inc
and
ds
xchg
sbb
jno
dec
adc
fsubs
pop
mov
int3
sbb
xchg
das
insb
push
add
cs
loopne
lock
adc
push
pop
or
mulb
xor
cmp
sbb
out
shll
shlb
jge
add
fiadds
sbb
xchg
test
cmp
fiaddl
jnp
fbstp
jnp
repnz
fwait
jb
test
dec
cltd
out
adc
and
pushf
inc
mov
fcom
push
mov
lods
negl
xchg
dec
pop
xor
xchg
xor
push
pop
adc
push
sbb
jnp
ss
dec
mov
pop
pop
mov
cmp
insl
fbld
mov
testb
shlb
push
loop
sbb
jecxz
das
push
cmp
sbb
je
mov
pop
movsl
sub
cld
in
ror
ret
fsubrs
outsb
pop
mov
cmp
pop
xor
lock
mov
or
mov
arpl
je
jg
ret
mov
subl
test
clc
sub
daa
sarl
aad
data16
adc
inc
cmp
movlps
lret
dec
adc
cmpsl
inc
dec
fnsave
mov
push
jns
mov
ret
push
or
lret
sbb
sub
jae
xor
jo
mov
xor
movsl
adc
dec
lahf
jbe
pushf
inc
decb
aam
push
pushf
insb
xorb
outsl
xchg
shll
mov
sti
push
out
cs
testb
sar
stc
dec
or
mov
ljmp
test
sarl
and
and
lret
ja
test
dec
push
sub
sbb
call
sbb
mov
and
inc
inc
cmp
aam
sub
add
out
clc
adc
nop
jecxz
and
sub
xchg
lods
test
cltd
or
xchg
ljmp
orb
mov
fs
jp
mov
leave
mov
imul
and
ds
push
cmc
stos
cs
test
xor
leave
pop
test
test
and
or
outsb
fcomp
and
js
cmp
imul
pop
push
and
fnstcw
hlt
enter
dec
outsb
push
pop
or
rcll
mov
std
mov
bound
icebp
lea
aad
lcall
or
sbb
cmp
or
add
leave
jmp
fldt
or
in
jge
das
cs
sbb
fists
and
inc
jmp
movsb
pop
mov
adc
enter
inc
decb
mov
fildll
mov
dec
pushf
mov
repnz
mov
push
into
mov
mov
cmp
aas
lret
das
cmpsl
jno
mov
push
test
mov
push
lock
ret
xor
jbe
inc
dec
sub
push
loopne
add
loop
adc
sbb
push
add
or
dec
push
nop
jnp
push
insb
mov
xchg
adc
push
pop
mov
jno
popf
push
mov
int3
loop
mov
scas
jl
or
ja
mov
insb
jle
ffree
add
scas
cli
mov
dec
test
test
mov
push
dec
es
addl
inc
mov
cs
loope
imul
mov
scas
repz
popl
xchg
and
xor
mov
sbb
rolb
into
xchg
jp
sahf
fxch
cwtl
loope
xor
adc
xor
mov
cli
add
sti
and
xor
fsubs
loope
sbb
mov
gs
push
lret
dec
cmpsb
jl
shrb
xchg
lcall
adc
out
mov
jne
inc
mov
insb
jle
pop
jno
push
cmp
out
sub
sbb
adc
pop
xchg
pop
std
adc
in
mov
jl
cmp
les
lret
and
mov
test
scas
cld
jle
mov
in
adc
aam
mov
int3
aas
cld
into
mov
jne
adc
pop
fidivrs
jp
stc
cmp
mov
dec
cmp
xchg
fcom
add
imul
int
sbb
cmpsl
jns,pt
cs
pop
fucomp
rcr
clc
lret
stc
pushf
orl
or
lea
stos
cmpsl
or
clc
sarl
push
imul
in
inc
ss
shrb
lds
sbb
push
movsl
mov
js
stc
inc
int
xchg
into
jno
add
out
insl
cmp
adc
inc
leave
pop
icebp
push
cmp
sti
jmp
inc
popf
insl
jb
and
loope
test
adc
inc
push
pop
adc
mov
xor
aaa
je
out
das
shl
test
sub
sub
loope
aad
les
divb
mov
pop
fcmovb
into
pop
or
scas
movsb
pop
arpl
out
sbb
jmp
cmp
adc
fwait
sub
push
xor
ret
adc
xchg
cli
jg
xor
xchg
cmpsb
pop
mov
add
repz
jne
js
enter
bnd
pusha
dec
or
testb
xor
gs
add
mov
es
scas
jno
jb
lods
sub
mov
jne
int3
mov
jg
or
arpl
xor
sub
cmp
jne
push
les
jo
push
push
jnp
sbb
hlt
dec
jp
add
cmp
aam
push
cmp
sahf
add
sbb
mov
push
add
xor
cmp
pop
in
lea
or
insl
in
sbbl
xor
int
push
xchg
pop
xchg
sbb
or
or
fcomp
push
pop
jbe
lahf
je
rorb
add
sub
xchg
xchg
fidivl
dec
xchg
mov
int3
xchg
movsb
xchg
mov
fs
inc
cmpsb
sbb
inc
fisttpl
popf
and
in
outsb
sbb
in
add
ret
xchg
fs
xchg
fadd
cmp
insb
mov
fcom
push
dec
add
push
jbe
popa
cmc
xchg
adc
add
mov
rcl
pusha
loope
mov
shl
cmp
loope
popa
sbb
push
repz
jno
adc
xor
repnz
dec
dec
push
fmul
nop
pop
pop
dec
out
dec
or
xchg
jl
xor
jne
add
mov
loopne
xchg
enter
adc
add
dec
inc
shrb
xor
mov
sbb
add
dec
jle
mov
scas
cmpsl
inc
pop
test
cli
jb
shrd
cltd
jmp
xchg
cmp
ljmp
in
mov
cmp
add
pop
clc
adc
push
inc
jge
dec
dec
imul
ss
insb
fsts
inc
pop
jbe
xchg
pop
pop
testl
jns
xor
into
notb
popa
daa
lcall
pusha
xor
ret
movsb
mov
sbb
test
or
fsub
adc
icebp
pop
loopne
iret
ret
and
add
aad
or
dec
dec
test
jle
mov
outsl
insb
cwtl
adc
mov
das
dec
jl
shll
pop
sbb
fidivl
rorb
test
xchg
fbstp
lds
dec
jle
loope
scas
popf
pop
xor
jecxz
scas
lods
cmpb
push
pop
add
js
mov
fdivr
gs
xor
in
cld
pushf
mov
rep
bound
fldenv
lcall
pop
repnz
sbb
testb
xchg
inc
call
dec
rcl
pop
arpl
mov
pop
and
pop
test
imul
mov
push
loop
and
addr16
cs
hlt
mov
sub
mov
arpl
cmp
call
stos
xor
pop
popf
ja
or
mul
push
inc
scas
mov
cld
or
xlat
dec
xor
mov
dec
ret
les
int
jae
push
pop
and
dec
xlat
adc
pushf
divl
orl
push
sub
mov
out
adc
sub
xlat
cltd
cmpl
or
add
test
jnp
ja
sub
sub
dec
xor
scas
or
pop
iret
es
mov
hlt
out
pop
cs
push
push
xchg
hlt
out
daa
push
ficoms
inc
out
bound
push
dec
and
fildl
inc
sbb
fistpll
and
in
push
xor
sti
addr16
and
or
push
xor
sub
pop
in
dec
push
xchg
xor
sub
add
inc
mov
aad
hlt
jb
in
adc
sarl
icebp
std
divb
jge
loopne
call
jecxz
push
fstps
mov
iret
paddw
int
sbb
jle
ds
leave
and
inc
loopne
lret
mov
lock
jg
cwtl
jecxz
dec
pusha
sbbb
cli
les
inc
mov
cmp
xor
fstpt
inc
push
lahf
in
out
daa
and
stc
int3
xchg
sbb
into
sti
leave
jne
sbbl
adcb
and
pop
jno
xor
addr16
lahf
xor
push
xchg
pop
inc
cli
repnz
add
dec
mov
sbb
adcl
lds
and
sub
xchg
cmc
rorb
ficoms
icebp
mov
pop
je
xchg
mov
add
mov
outsl
xchg
xor
pop
faddl
sbb
into
push
jecxz
fiadds
adc
scas
mov
loopne
cwtl
push
push
lahf
dec
push
rcll
stc
cwtl
mov
inc
int3
jne
out
mov
out
icebp
repz
pop
into
xchg
ficoml
xchg
xchg
popa
sbb
or
push
dec
clc
inc
push
pop
aaa
shll
mov
xorl
mov
repz
mov
jecxz
jp
mov
icebp
imul
xchg
test
ret
mov
mov
jge
add
loope
pop
call
xor
bswap
test
or
add
popl
dec
push
xchg
lcall
movsb
fisubs
mov
sub
dec
sbb
shll
push
and
jae
daa
es
daa
das
or
aad
mov
cltd
out
push
test
sbb
inc
dec
notl
scas
in
addr16
addr16
push
adcb
sub
jmp
xchg
std
fistpl
add
inc
test
or
popa
popa
mov
inc
or
or
ds
rorb
xlat
or
push
iret
mov
xor
daa
push
inc
out
aaa
xor
mov
pushw
push
add
scas
pushf
loope
in
or
adc
sahf
mov
push
arpl
out
sbb
xchg
stos
add
mov
jo
arpl
fwait
dec
int3
enter
sub
icebp
scas
xor
in
mov
mov
push
jle
aam
inc
shl
lret
push
fsubrs
div
loope
add
add
adc
orl
aas
cmp
cmp
test
jo
add
movd
inc
rcrb
cli
shrl
cmc
mov
shll
andb
lahf
sbb
cmp
movsb
insl
inc
shrl
mov
jmp
inc
enter
push
pop
out
push
data16
add
jp
insl
and
sub
jb
adc
and
fidivl
xchg
aas
jle
push
icebp
into
aad
cmp
repz
mov
pop
inc
jae
dec
clc
adc
out
pop
sti
xor
sub
cmc
xor
int
sbb
aad
push
jg
push
xor
push
adc
loope
filds
cmpsb
mov
daa
push
or
js
jmp
jnp
dec
mov
mov
popl
xor
inc
cs
jnp
cmp
call
ljmp
mov
pop
xor
enter
push
mov
cmp
mov
jmp
push
xor
jmp
or
js
push
enter
sub
leave
outsb
push
jecxz
and
sub
pop
cmp
jae
fcompl
inc
lods
jb
xchg
mov
sahf
xchg
mov
cmpsb
push
push
xchg
or
pop
mov
lock
mov
repz
sbb
or
lcall
xchg
sub
mov
pusha
pop
pop
mov
call
loop
mov
es
xor
pop
mov
cmp
inc
sub
mov
jno
adc
out
enter
iret
cwtl
repz
in
clc
mov
jno
cli
mov
ret
xorb
stos
dec
std
jecxz
adc
imul
pop
xorb
negb
cs
dec
hlt
loop
das
les
stos
mov
int
inc
imull
pusha
mov
stos
push
push
xchg
test
outsb
jno
lret
sub
in
jne
popa
jne
sbb
orl
mov
adc
loopne
lret
add
cmp
xchg
das
xchg
ja
fs
sbb
mov
aaa
pop
pop
pop
xor
shr
xchg
outsb
xchg
xchg
addr16
test
inc
aam
push
lea
insl
push
jp
sar
leave
aad
mov
hlt
xchg
pop
mov
call
clc
scas
leave
scas
pop
pop
lcall
xchg
aas
xchg
inc
add
mov
add
gs
xor
ret
or
pop
jmp
mov
aaa
rorl
jle
sbb
pop
cld
jg
mov
cmp
pop
xor
inc
out
in
push
cld
sbb
data16
mov
lock
insl
or
or
jl
adc
dec
stos
test
lock
cmp
lock
mov
jle
popf
sub
imul
shll
and
ret
dec
xor
mov
pop
inc
jb
lret
movsl
cmpsl
insb
sbb
jns
push
mov
xchg
pushf
outsb
and
xor
xor
test
pop
les
int3
mov
fwait
xchg
xor
repnz
mov
lods
or
xchg
das
jbe
jl
jbe
iret
pop
jmp
xchg
xor
add
and
lret
push
les
or
xchg
out
cmp
iret
cld
cmp
je
cmp
inc
pushf
fnstenv
mov
enter
push
or
mov
sbb
inc
int3
in
lods
mov
sub
dec
inc
adc
stc
aad
inc
arpl
mov
add
xchg
and
icebp
add
pop
or
and
dec
andl
and
sub
shll
int
nop
imul
es
sub
out
xchg
lods
adc
push
xor
lea
ljmp
loopne
ss
loopne
sahf
pop
xor
push
jle
call
mov
scas
dec
cmc
adc
cmp
xlat
lock
xor
subb
xorl
rcll
lcall
js
adc
bound
jne
fildll
neg
sbb
lahf
aad
xlat
pop
cmp
faddl
pop
mov
adc
xor
in
call
push
mov
mov
in
sahf
xchg
data16
dec
sub
jbe
cld
shlb
push
insl
mov
scas
sbb
xor
nop
addb
adc
or
mov
fs
gs
jns
sub
rcl
cmp
and
test
les
sti
jne
pop
sbbl
das
cmc
jmp
push
push
cltd
stos
leave
jbe
out
rcrl
repnz
dec
pop
cwtl
jl
pop
or
repnz
mov
pop
pop
cld
xchg
sbb
ds
add
es
popa
cmpsl
xchg
ds
sbb
cmove
jecxz
test
mov
add
or
scas
data16
adc
add
rcrb
sub
pop
xlat
cld
gs
add
cmpsb
into
js
notl
stos
jnp
fcmovu
arpl
cmp
fsubs
pop
cmc
test
lret
push
dec
pop
xchg
inc
div
xchg
and
or
inc
scas
es
test
mov
cmc
idivb
inc
sbbl
inc
jp
pop
sub
mov
or
and
out
imul
mov
sysenter
leave
adc
and
lcall
sub
ja
aam
jmp
and
shrb
fidivrl
cmp
dec
mov
bound
push
sub
ret
out
popa
fisubrl
mov
stos
add
jg
aaa
xor
repz
add
in
and
inc
lahf
cwtl
jo
enter
ss
test
fcompl
lods
leave
in
xchg
push
pop
jl
add
fmul
test
add
dec
stc
movswl
sub
divl
jg
int
ljmp
jbe
lahf
out
xlat
xor
daa
fisttpll
fildl
xor
stc
insb
outsb
dec
loop
std
jg
dec
cld
lock
sub
add
push
or
fcmovu
push
lahf
dec
dec
xorb
lea
adc
cmp
loopne
notl
sub
negb
mov
sub
jmp
fidivl
movsl
movsb
outsl
stc
addr16
add
leave
jecxz
imul
mov
subb
xchg
jae
arpl
push
and
inc
jb
sub
mov
jl
cli
test
aad
sbb
test
xor
push
shl
sarb
out
xor
jnp
rolb
inc
pop
add
adc
sar
clc
pop
ja
xlat
or
mov
mov
adc
jecxz
fdivs
repz
add
ljmp
mov
mov
mov
xor
mov
aaa
push
dec
jg
bound
icebp
repz
xchg
jb
call
int
sub
lcall
fstpt
addr16
mov
sbb
pop
xor
outsb
mov
mov
mov
int3
loopne
pop
sub
pop
aam
daa
fisttpll
push
outsb
inc
xlat
in
movsb
adc
mov
negb
xchg
cmpsl
xchg
add
push
cmp
pop
and
mov
push
or
or
mov
adc
stos
mov
jmp
jne
mov
test
loopne
mov
mov
ficomps
test
lret
jae
int3
loopne
sbbl
lcall
dec
adc
jae
test
inc
cmp
ja
aaa
lock
sbb
shll
dec
popa
dec
in
mov
push
fisubrl
sub
dec
loop
xchg
push
sbb
inc
dec
xor
or
sub
pop
mov
sbb
push
inc
daa
adc
stc
addr16
popf
mov
pop
pop
mov
pusha
loope
divl
fwait
dec
fld
in
fnsave
cs
fwait
push
cld
jl
mov
pop
add
in
xor
push
jecxz
in
cmp
xor
pop
xchg
scas
mov
add
sbb
jl
aas
jmp
mov
js
mov
lds
mov
addl
jbe
stos
push
push
xchg
incb
adc
adc
jo
mov
in
inc
in
jle
lret
clc
xor
cmp
pop
jae
inc
int
mov
mov
mov
les
arpl
ja
cmp
aam
filds
imul
pop
xorb
adc
sbb
fcoml
inc
stos
in
imul
sbb
dec
mov
or
lea
sarb
ss
in
pop
hlt
sub
jno
cmp
rcl
push
dec
fwait
cs
mov
fsubl
mov
popf
jbe
pop
xor
ficompl
add
stos
inc
jl
ds
push
sbb
push
and
repz
ficoml
lock
popa
add
cmp
fbld
daa
ud2
ds
push
push
pop
das
decb
rclb
adc
insl
out
pop
mov
mov
sub
push
add
popf
sub
stos
leave
push
add
pop
stc
add
lahf
pop
xchg
mov
mov
mov
pop
pusha
xor
rcl
mov
dec
mov
dec
push
int3
xorl
inc
adc
cmp
jecxz
mov
aam
je
inc
arpl
inc
fbstp
gs
add
ficoml
nop
dec
sub
jecxz
mov
push
adc
stc
xchg
and
pop
fmulp
xor
stos
sub
sbb
daa
addb
add
icebp
adc
fcmove
add
dec
pushf
pop
jno
sub
push
xchg
sar
dec
sbb
jl
push
pusha
add
dec
pop
dec
subb
cmpsl
mov
add
data16
inc
mov
pop
out
sar
jl
dec
mov
pop
sahf
negb
pop
adc
dec
xchg
outsl
mov
movsl
jno
mov
scas
out
xchg
out
cmpsl
push
scas
mov
in
mov
jle
pop
mov
les
roll
pop
mov
stos
jg
cmp
mov
in
lods
lret
jl
and
movsl
pop
enter
adc
fwait
mov
ror
sub
jp
js
hlt
adc
cmp
xchg
and
mov
std
iret
lods
mov
xor
imull
divb
jno
aad
mov
arpl
dec
xchg
jmp
in
lea
dec
pop
pop
xor
fbld
jecxz
mov
inc
sub
ret
cmpsl
adc
hlt
rcll
pusha
mov
xchg
cmpsl
test
arpl
mov
mov
out
cmpsl
mov
jp
scas
inc
addr16
iret
push
mov
xor
js
loopne
mov
fdivs
and
inc
push
cmp
inc
shll
loope
push
sbb
fwait
sbb
dec
leave
out
dec
mov
gs
push
mov
data16
inc
dec
fiaddl
push
fnstcw
mov
cmc
xchg
rol
push
iret
jns
inc
jge
stos
fcom
in
xchg
cmp
loopne
cmp
shld
clc
add
ljmp
pop
imul
outsb
adc
icebp
inc
outsb
sbb
orl
loop
inc
out
ja
dec
xchg
in
xor
out
mov
in
nop
jne
mov
icebp
or
push
mov
pop
add
xchg
adc
mov
les
push
sub
pop
cmp
adc
pop
test
or
jns
push
outsb
mov
ljmp
movsl
les
adc
lret
stos
push
sub
mov
jle
subb
mov
xchg
pusha
in
gs
addr16
dec
sub
dec
stos
fsubrl
pop
push
rcrb
maskmovq
testl
xor
rclb
test
push
and
xchg
sub
jecxz
mov
or
popf
aaa
call
mov
ficoml
in
repnz
orb
cmp
push
fwait
mov
sahf
sbb
push
shl
outsl
call
incl
call
fs
push
imulb
or
fnstsw
pop
xor
or
sub
cmpsl
inc
jne
add
fsubs
inc
xor
sahf
mov
jno
sbb
add
sbb
adc
xor
inc
pushf
mov
add
sub
push
sbb
jmp
pushf
aad
mov
pop
push
or
and
add
mov
xor
push
push
mov
jp
adc
add
mov
loope
cs
shrl
fcmove
add
lret
into
xchg
and
mov
add
sub
dec
xor
int
add
scas
das
clc
popw
in
jns
cmp
sub
jl
cmp
mov
dec
mov
orb
or
mov
cmpsl
leave
arpl
mov
add
xchg
mov
outsl
arpl
dec
sub
inc
cmp
or
adc
lods
jne,pn
mov
popa
pop
mov
ja
data16
sub
dec
sub
push
dec
sub
in
mov
lcall
dec
shlb
ss
lret
aad
xchg
cmp
sarl
sub
arpl
rclb
cmpsl
incl
push
outsb
ljmp
pop
pop
or
dec
dec
hlt
lods
mov
and
lods
dec
jbe
mov
pushf
cmpsl
sbb
inc
fdivs
popf
aam
lock
mov
repz
and
fiaddl
lret
nop
mov
push
std
push
call
push
cmp
mov
and
jle
fwait
outsl
push
int3
into
or
push
or
add
repnz
movb
mov
push
fmull
xorb
push
mov
test
outsb
data16
mov
cmp
and
out
sub
mov
ljmp
pushf
lea
or
push
loop
fadd
sub
retw
popa
add
xchg
scas
mov
xor
push
mov
and
sub
nop
add
inc
pop
sbb
fs
aaa
lret
mov
sbb
int
inc
jo
fstl
test
fldcw
pop
insl
sbb
jl
daa
adc
lods
lcall
adc
rcll
sbb
popf
cmp
dec
nop
fdivs
js
ret
inc
das
fisttps
loope
sub
outsl
xorl
and
sti
inc
mov
mov
cld
dec
and
fistl
add
divl
mov
add
push
sub
lret
jp
rol
push
rcl
dec
imull
fucomip
adc
frstor
xor
mov
lds
roll
outsb
mov
fisttpl
cmpsl
mov
nopl
adc
pop
xchg
popf
inc
loopne
xchg
add
shrl
ret
fisubrl
sub
out
in
push
aad
mov
shrb
cmp
ja
rorl
dec
pop
push
dec
dec
movsl
in
mov
jno
inc
mov
test
xchg
movsl
movsb
addb
repnz
fistpl
xchg
cmpsb
dec
sub
fs
xor
push
push
int
int
push
cmp
in
inc
sahf
xchg
cli
popl
les
jns
jg
push
fs
xor
mov
cmp
xor
or
push
push
orb
test
movsl
nop
int3
add
push
out
pop
sbb
test
inc
call
inc
test
mov
iret
mov
jb
aaa
enter
movsl
and
mov
arpl
call
and
int
add
in
pop
dec
jae
xchg
jns
leave
pushf
adc
test
negl
add
xor
loop
aas
js
mulb
add
ljmp
fstpl
sbb
cli
gs
pop
xor
fistps
mov
mov
sub
movl
ja
fdivs
imul
cld
fsts
sub
es
popf
cmp
cmpsb
cmp
sahf
mov
push
push
push
push
pusha
add
dec
nop
pop
sbb
jbe
dec
xor
movsb
push
stos
xor
dec
pop
xor
and
push
imul
xchg
stos
jb
scas
mov
cmpsl
add
mov
fwait
dec
push
jo
mov
push
mov
mov
and
fstl
add
clc
movsl
mov
mov
stc
mov
cmc
inc
outsb
xor
iret
pop
and
pop
sar
jb
dec
xchg
insb
adc
cmp
mov
loope
and
jle
xchg
in
jl
cmc
jecxz
imul
dec
pop
cmp
scas
ljmp
dec
insl
dec
push
mov
xchg
xor
fimuls
jecxz
add
nop
mulb
sbb
dec
dec
nop
xchg
push
dec
fxch
lods
scas
out
movsl
mov
push
and
enter
mov
cltd
divl
pop
adc
das
sbb
repz
mov
jmp
shlb
cmpl
mov
push
dec
dec
loope
ret
negl
loopne
cmp
pop
cmp
sahf
inc
jae
dec
mov
repnz
cmp
and
aam
test
pop
jns
jo
lods
data16
repz
push
aaa
lcall
lds
sti
lock
mov
xchg
movsb
out
jp
insb
sahf
mov
xchg
sub
sbb
hlt
ljmp
out
int
mov
push
test
xchg
cmpsl
orb
cmp
or
sbb
cltd
xchg
xchg
fiadds
push
dec
cmc
or
add
xor
daa
dec
mov
add
subb
lea
jg
fs
aad
jge
fisubrs
mov
lea
movb
lcall
out
sbb
out
loop
cmp
fnstcw
lock
loop
xorb
cmpb
xchg
jmp
stc
and
ret
pop
rorl
cmp
or
stos
inc
rorl
and
dec
cmc
pop
mov
mov
aaa
sti
loop
xchg
scas
dec
cs
lcall
pusha
fadds
fistl
mov
jno
jne
dec
dec
lret
mov
popa
aas
push
xchg
out
add
xlat
fs
and
out
adc
rclb
popf
test
dec
xlat
mov
push
add
add
insb
jns
sbb
mov
pop
add
imul
mov
call
sub
mov
push
rorb
movsb
adc
add
in
push
adc
aas
xchg
mov
jp
roll
xor
mov
mov
movl
xchg
shlb
pop
sarb
dec
pop
mov
mov
dec
mov
aaa
andb
sbb
insb
or
mul
xor
outsl
pop
jl
inc
dec
xor
ss
add
les
push
nop
movsb
mov
adc
fsubp
push
out
inc
or
enter
out
and
mov
dec
out
mov
mov
ss
and
js
pop
stc
jnp
push
or
jnp
leave
ds
andl
jo
cmc
and
movl
into
out
adc
adc
push
mov
cmp
ss
or
mov
push
ret
dec
inc
pop
adc
xor
push
sbb
les
pushf
enter
push
imul
les
mov
popa
enter
sarl
mov
dec
jae
push
cli
cmpsl
popa
sti
cwtl
mov
ljmp
ljmp
and
lret
test
mov
aaa
fdivr
pop
pop
divb
or
pop
pop
jne
popa
mov
push
jle
outsb
mov
iret
mov
xor
clc
and
mov
push
or
inc
nop
lret
sbb
mov
push
and
leave
iret
xorl
or
iret
mov
outsb
aas
out
inc
repnz
mov
jmp
je
cwtl
adc
lods
inc
ss
jp
sahf
push
sub
imul
insl
xor
mov
pop
mov
or
xor
test
cmp
dec
add
mov
ljmp
daa
sarl
dec
pop
repnz
sub
dec
mov
sub
roll
mov
pop
and
push
jmp
lods
ja
add
mov
or
fsubrl
sub
or
cmpsb
mov
mov
mov
das
int3
xchg
inc
cli
sub
daa
jle
jmp
andl
cmp
adc
xor
dec
in
orl
movsl
jecxz
mov
int
sahf
inc
jle
sbb
push
shrl
sub
mov
stos
pop
sti
popa
scas
adc
scas
sbb
movsb
or
adc
pop
add
dec
stc
inc
add
add
popl
lds
scas
jo
sub
gs
jno
xchg
stos
xchg
cwtl
loop
gs
sub
jb
mov
and
xlat
test
jb
hlt
mov
sub
mov
das
xchg
adc
lahf
sahf
mov
sbb
cltd
lret
mov
dec
xorl
gs
pop
hlt
sbb
movsb
outsl
xchg
shrb
dec
mov
and
loop
inc
imul
xchg
in
insb
add
hlt
loopne
mov
pop
jg
mov
push
icebp
leave
push
mov
in
cmpsl
mov
sahf
sbb
dec
jmp
sbb
inc
pop
sar
in
ret
pop
pop
aas
lds
fwait
mov
daa
loop
rorb
outsb
test
repz
lods
test
sti
xchg
and
pop
pop
inc
and
bound
jg
cli
ficomps
mov
repz
or
aam
dec
mov
dec
jno
loopne
mov
xchg
mov
paddusb
aaa
punpckhwd
repnz
out
adc
mov
sbb
sbb
cmp
inc
fdivl
mov
sub
int3
cmp
jno
movsl
je
push
push
adc
insl
loop
scas
js
shll
mov
test
or
int3
or
mov
or
inc
cmpsl
push
clc
or
or
or
xchg
sbb
lods
cmpsl
cmpsl
cmp
jae
and
push
scas
iret
js
fs
repnz
scas
jmp
fisubl
add
adc
push
pop
test
aaa
sub
pop
and
adc
out
cwtl
cwtl
jg
fwait
pusha
mov
push
mov
lret
jge
inc
aaa
push
stos
sub
pusha
fnstsw
or
out
add
adc
and
jnp
xor
fmul
cmp
xlat
stos
xor
test
lret
inc
xor
xor
push
mov
fcomip
mov
aam
mov
sub
adc
stos
jne
scas
mov
fucomi
pop
mov
push
outsl
popa
cmp
add
pop
icebp
xchg
jno
int3
adc
jae
out
iret
sahf
or
xchg
into
add
xlat
push
fmuls
int
loopne
push
add
xchg
inc
or
lret
sbb
and
push
aaa
inc
jae
mov
in
sbbl
enter
and
icebp
fwait
jno
jmp
stc
fs
outsl
cmp
daa
in
shl
mov
push
test
out
xor
inc
mov
xchg
xor
lock
ss
jge
and
mov
cmp
cwtl
cli
and
addr16
mov
mov
mov
cvtps2pd
sub
jle
xor
xchg
les
push
jnp
mov
aas
mov
pop
dec
sbb
lretw
aad
aaa
mov
adc
shrb
or
push
cli
sbb
cmp
sub
cmpsb
inc
pop
xchg
fdiv
mov
aam
roll
pop
outsb
sbb
fisubrs
jmp
sub
xchg
sahf
cmpsb
sahf
pop
dec
add
lahf
dec
dec
mov
or
in
push
ljmp
xchg
iret
cmp
aas
arpl
cs
xchg
adc
loopne
jecxz
enter
push
out
pop
out
or
loop
xor
mov
sbb
sbb
mov
dec
xor
adc
dec
mov
mov
mov
xchg
movsb
into
repz
cmp
jmp
adcl
loopne
dec
ja
and
in
outsb
add
loopne
sub
int
xchg
mov
cmp
fwait
iret
mov
xor
jecxz
adc
cmp
out
add
sbb
sahf
and
dec
mov
cld
sub
js
addr16
jge
mull
add
rorl
lahf
jae
mov
popa
icebp
xor
testl
outsb
lret
pop
loope
and
jecxz
mov
or
mov
mov
sub
movsl
call
jns
mov
iret
scas
stos
push
cmpsl
pushf
shl
push
lds
mov
inc
repz
xor
insb
pop
mov
leave
gs
pusha
or
xchg
idiv
out
jecxz
in
insb
xor
push
inc
mov
inc
shll
xor
or
mov
xchg
testl
jle
lds
xor
pop
out
mov
cltd
ja
lods
std
or
out
fwait
lret
lods
adc
mov
movsb
outsb
stos
hlt
test
gs
mov
jnp
lods
xor
jb
fcmovnu
mov
ficoms
je
popa
je
test
int
in
dec
paddq
jmp
in
les
lods
push
cs
jmp
ja
inc
sbb
jecxz
psubsw
or
push
mov
xchg
sarb
cld
push
je
in
mov
fistl
aas
mov
jne
jl
lods
fabs
push
mov
mov
into
cmpsb
xchg
test
out
xchg
jno
lret
sbb
add
jne
push
fwait
push
adc
in
xor
decl
lahf
into
test
lret
js
mov
loopne
fdivrp
decb
mov
adc
pop
test
pop
cmp
test
dec
mov
sbb
push
mov
cmp
aaa
icebp
add
dec
and
mov
cmp
hlt
shl
jge
dec
mov
inc
xchg
or
push
jbe
icebp
mov
dec
and
pusha
push
cld
sbb
cmp
sbb
andb
and
sub
into
add
clc
aam
pushf
and
loopne
sbb
cmp
addr16
aad
in
paddsb
bound
and
ljmp
push
daa
and
mov
dec
test
sarl
daa
outsl
push
ja
mov
aam
cmp
fsubl
inc
loop
push
inc
cmp
or
pushf
push
pop
nop
inc
mov
or
xchg
mov
ja
sub
cmp
addb
pop
ja
mov
cli
ljmp
into
adc
pop
nop
movsb
pushf
cmc
sub
jmp
roll
pop
fldcw
jnp
cmpsb
frstor
loop
outsb
pop
sahf
dec
adcb
loop
in
fstpt
iret
mov
xor
scas
mov
mov
jl
jle
fistpl
pop
mov
notl
lea
xor
and
cwtl
nop
jbe
cmpsl
pop
imul
dec
cwtl
dec
daa
or
stos
adc
fiadds
les
push
xchg
or
ds
inc
divb
inc
dec
pop
test
sub
jmp
adcl
jecxz
mov
pusha
fcmove
inc
lret
pop
mov
in
aaa
clc
dec
push
popa
out
aas
mov
cmp
stc
clc
cmpsb
mov
push
insl
push
cmc
push
mov
mov
mov
sub
and
lea
fcoms
ja
mov
mov
rorb
test
lds
lret
mov
cmp
negl
mov
or
cmp
hlt
inc
stc
mov
loopne
orb
mov
fldln2
je
movsl
out
add
sbb
ja
cmc
test
dec
lods
rcl
test
sahf
lcall
cwtl
sub
ss
dec
loop
popa
sbb
and
xchg
jbe
addl
xor
xor
push
pop
pop
mov
cwtl
fcoml
push
hlt
mov
mov
mov
push
dec
jo
lods
pop
xchg
aad
and
push
sbb
je
add
jge
xchg
repnz
gs
cmp
mov
jmp
fs
pop
loopne
sbb
add
jns
cmc
pop
out
and
push
pop
add
cs
fs
data16
jle
rcrl
rolb
cld
popa
mov
add
add
aas
inc
add
or
movsb
scas
outsb
fwait
das
mov
out
in
pop
xchg
mov
xchg
jbe
cmpsb
lcall
bound
aam
add
stos
es
repz
addr16
mov
xchg
cmp
sub
sub
popf
inc
xchg
jbe
aas
sbb
dec
je
push
fisttpll
inc
cmp
dec
loop
jae
push
push
aaa
pop
outsl
sti
xor
repnz
aad
pop
aad
rcl
mov
je
pop
addr16
outsb
mov
inc
jge
sub
jl
fwait
adc
in
push
int3
dec
jne
xor
pop
std
and
pop
xchg
pop
xorl
std
lret
int
xchg
xchg
xchg
push
xchg
test
adcb
sub
inc
pop
dec
fsub
scas
cmpsb
outsl
ret
addr16
and
fcomip
jl
pop
jle
cs
or
aas
inc
dec
jp
sub
mov
orb
sbb
test
imul
cmp
data16
movsb
ljmp
jmp
fidivs
ficoml
aaa
out
xor
notw
shlb
stos
push
mov
mov
adc
lock
test
orb
sbb
mov
mov
out
cmp
fisttps
sbb
push
hlt
adc
push
test
ret
popf
pop
mov
and
cmpsb
es
xchg
and
dec
aaa
mov
push
sbb
inc
cmp
xchg
scas
xlat
je
arpl
pop
imul
pop
xor
movsl
mov
fdivrl
fwait
jecxz
lahf
movsb
mov
pushf
mov
js
shlb
repz
xor
xchg
les
scas
mov
ret
xor
adc
sub
and
loopne
stos
mov
das
mov
or
mov
pop
hlt
fsts
sti
mov
mov
imul
xchg
mov
dec
xlat
and
cmp
inc
mov
lds
cmc
scas
dec
shlb
loop
or
es
or
stos
leave
shr
xor
pushf
jmp
lret
and
data16
jno
inc
loopne
push
fs
rcrl
icebp
sti
xor
and
fsubl
stos
cmp
fwait
xor
and
test
inc
xchg
mov
or
out
inc
ss
mov
aas
mov
or
dec
push
imul
shll
jnp
push
mov
aaa
call
or
into
aad
push
mov
outsb
jbe
mov
or
shrb
cld
and
lret
loopne
mov
add
push
mov
pop
dec
ret
push
into
shlb
ja
xchg
fldl
pop
nop
jecxz
adc
push
mov
add
mov
jmp
sbb
pop
jl
mov
xchg
fnstcw
imul
dec
add
test
hlt
in
aad
or
mov
inc
dec
sbb
or
jo
jecxz
addr16
stos
push
inc
repnz
das
push
mov
inc
xor
movsb
push
cmpsb
dec
pop
pop
push
popf
ljmp
add
js
jne
sub
pop
repnz
xchg
aas
jg,pt
in
push
inc
jns
outsl
cmpsl
les
sub
lcall
jno
addr16
fwait
lods
jmp
inc
cld
fcomps
test
lods
aaa
dec
idivl
ret
sarl
and
pop
loopne
xchg
ja
dec
sub
push
mov
lds
mov
xchg
cld
adc
push
inc
js
push
fstp
lods
adc
vmwrite
pop
test
or
add
add
push
in
fmuls
and
mov
push
inc
add
out
xchg
imul
mov
push
aas
dec
std
loope
ret
sar
inc
xchg
lds
push
inc
arpl
scas
mov
arpl
inc
and
mov
and
in
es
add
mov
mov
sub
lahf
pop
push
sub
sub
mov
push
push
cmp
mov
sub
cmpsl
sub
push
test
adc
pop
test
mov
inc
leave
dec
aas
fmull
pop
addr16
mov
and
in
fldl
mov
inc
sbb
xor
ret
sti
push
outsl
ja
insb
push
sbb
pop
and
and
jmp
rolb
pop
mov
dec
adc
cwtl
mov
sbb
inc
xchg
arpl
inc
xchg
call
scas
add
call
mov
cmp
adc
sbb
or
mov
lods
leave
inc
fwait
mulb
pop
sub
aaa
sub
je
or
mov
mov
mov
aaa
jnp
shlb
mov
add
add
mov
imul
repnz
ljmp
adc
inc
jno
and
jecxz
hlt
std
int
mov
ss
cmp
push
stc
adc
cmpb
jo
les
push
pushf
mov
insl
icebp
push
sahf
lods
test
xchg
int
sub
icebp
dec
sbb
idivl
mov
jmp
xor
in
ljmp
mov
dec
cmp
test
idivl
sub
subb
cmp
fwait
rolb
test
and
sbb
pop
lods
and
out
sub
fbld
cld
pushf
cmpsb
data16
arpl
loope
flds
loopne
adc
popf
ds
imul
enter
add
loop
mov
loopne
inc
lahf
mov
in
test
test
aad
xor
xchg
scas
js
pusha
cmpsl
mov
xchg
hlt
gs
dec
out
push
stos
arpl
cmp
leave
and
sub
aaa
dec
push
loopne
dec
into
jmp
mov
add
aam
cltd
test
lods
imul
inc
scas
repz
insl
jo
mov
sti
adc
inc
and
xchg
in
cli
mov
mov
mov
and
outsb
je
in
inc
mov
icebp
and
out
mov
or
in
mov
outsb
dec
hlt
lahf
mov
hlt
adc
mov
pop
cmpsb
aam
addr16
fs
push
inc
rorb
fwait
into
adc
adc
inc
sub
iret
push
and
cmc
bound
xchg
xor
xchg
fisttpll
flds
les
ljmp
minps
js
adc
cmp
pop
lea
sub
pop
push
jo
lahf
aas
and
and
fnstcw
insl
and
sbb
test
mov
mov
stos
xor
cld
and
out
rcll
mov
xchg
inc
jmp
pop
out
stos
xchg
cwtl
sub
and
jmp
mov
and
in
lcall
ljmp
imul
mov
std
mov
test
pop
cmc
inc
push
mov
icebp
mov
mov
push
fwait
jb
or
adc
and
inc
cmp
xor
into
cmp
bound
dec
jb
and
inc
push
mov
aas
lret
jl
or
jmp
lock
sub
xchg
inc
jecxz
pop
loopne
pop
outsl
push
cmpsl
fistpll
ja
clc
out
adcb
mov
pop
cs
loope
pushf
push
xlat
and
hlt
das
cmpsb
lds
pop
mov
adc
sbb
stc
push
jl
sti
arpl
jae
in
ficoml
movsl
push
andb
push
sbb
les
mov
inc
stc
mov
push
imul
movsl
adc
cmp
dec
scas
xchg
inc
lret
andl
scas
outsl
aad
lcall
and
sub
testb
mov
xchg
loopne
xor
jo
shrb
outsb
xor
pop
lahf
rorb
sub
arpl
inc
aad
cli
add
push
pop
mov
les
jg
push
je
ss
iret
cmp
adc
dec
jp
or
repz
movsb
imul
gs
add
jle
xor
sbb
int3
sub
sub
loope
xchg
hlt
sahf
and
loopne
lahf
shrb
mov
pushf
jle
push
popf
adc
sbb
sbb
jp
and
aam
xchg
iret
lcall
imul
aad
clc
hlt
mov
aad
or
push
fldt
jbe
sbb
push
xor
test
jmp
dec
inc
mov
leave
or
loope
cltd
mov
jecxz
es
andb
dec
jle
incb
int3
data16
inc
test
xor
or
cmpsl
pop
rcrb
pop
je
adc
lods
jmp
call
mov
inc
dec
mov
lods
notl
sub
jecxz
mov
pop
jge
adc
sub
xchg
rorl
dec
pop
fcompl
push
push
out
xchg
adc
ficomps
and
fs
nopl
inc
pop
dec
movl
in
sahf
mov
xor
loope
movsb
pop
cltd
lcall
push
adc
shlb
inc
movsl
insl
cmp
clc
roll
jg
sbb
push
dec
pop
xchg
inc
adc
xor
dec
mov
je
sahf
sahf
jb
push
pop
movsb
in
sarl
cmpsl
adc
sub
pop
pop
cmp
mov
mov
sub
jge
inc
cld
jnp
or
popl
into
sub
stc
push
stos
repz
xor
in
dec
ret
adc
mov
jge
push
ds
xor
mov
xor
sbb
jns
jns
in
sub
sar
sub
inc
push
xchg
jl
cmpl
js
dec
push
jnp
mov
shll
lods
bound
fists
lret
dec
sbb
int
aam
ret
mov
rorl
call
jmp
test
popa
inc
adc
enter
mov
movsb
pextrw
push
mov
jp
dec
test
sub
or
pop
push
call
test
inc
inc
pop
rorb
pushw
and
movsb
scas
pop
jnp
sahf
dec
movsl
data16
mov
fdivs
adc
dec
adc
mov
inc
push
je
pop
pop
adcl
jno
mov
and
dec
andb
das
test
fs
insb
fwait
add
xchg
sub
mov
test
pop
inc
dec
cmpsl
fstps
and
out
adc
xor
lcall
xor
scas
jge
icebp
add
in
inc
and
sbb
and
inc
imul
filds
xor
int3
dec
push
adc
sti
xchg
add
lret
jns
xor
in
shlb
cwtl
std
loopne
or
fstp
mov
ficompl
cmc
in
cmp
adc
cli
mov
iret
pop
and
jecxz
sub
es
sbb
push
lods
pop
aam
jg
popa
lds
pushf
stos
out
push
sub
aaa
or
call
and
scas
or
xchg
cmp
call
mov
insb
jo
lcall
xchg
sbb
scas
jo
dec
into
and
mov
sub
add
out
pop
ret
pop
mov
jbe
or
imul
pop
cmp
out
bound
mov
dec
das
pop
adc
xchg
sbb
roll
dec
sub
aaa
into
pop
leave
cld
int
dec
mov
rol
mov
loop
insb
xor
ss
jno
lret
and
sahf
push
push
xchg
and
lret
jo
je
les
push
and
sbb
pop
mov
add
lock
or
aaa
int
add
clc
inc
imul
shrb
out
dec
daa
out
push
stos
pop
inc
pop
inc
cmp
pop
movsb
push
mov
arpl
test
push
popa
add
inc
fidivrl
in
mov
adc
push
fwait
sub
shlb
int3
popa
lcall
and
or
adc
test
mov
mov
filds
adc
in
jle
orl
dec
lock
xor
jle
adc
and
loopne
repz
pop
sbb
mov
jge
or
pop
jecxz
add
pop
sbb
fdivl
sub
dec
xor
ja
call
or
cli
add
insb
or
cmc
shll
rol
or
push
test
je
mov
out
test
rcr
es
mov
aad
xor
mov
inc
test
dec
mov
in
outsl
nop
mov
pop
cmp
mov
into
jl
cmpsb
push
add
xor
xchg
cmp
xlat
pop
push
into
sbb
fcompl
jne
cld
ds
pop
push
aad
xlat
sub
push
ret
dec
jbe
jmp
jecxz
lcall
fwait
push
and
shll
sti
mov
and
add
fstp
aad
sbb
mov
in
ljmp
mov
adc
push
mov
mov
stos
and
mov
and
push
daa
mov
lea
dec
inc
xchg
lcall
mov
negl
dec
inc
bound
sub
inc
sbb
dec
pushl
mov
pop
fistpl
ljmp
cmp
lahf
cltd
imul
inc
pop
mov
mov
pop
sub
mov
or
mov
sarb
dec
ret
cmp
push
push
jae
or
sub
jle
or
jae
aaa
insl
nop
xlat
inc
mov
push
cmp
xor
stos
pop
aad
ret
mov
and
ret
xor
push
cwtl
xor
sub
clc
xlat
out
pop
leave
orl
inc
cs
ss
daa
fcmovb
test
inc
push
fcompl
ss
js
dec
mov
arpl
xor
jns
cltd
xchg
push
ja
mov
scas
shl
fwait
sub
lahf
cmp
lods
dec
in
shl
sahf
fistpl
rclb
out
or
aam
out
or
mov
setbe
sub
cmpsl
add
cmc
fsubrs
cmpsb
xor
ror
mov
xchg
mov
pop
push
sbb
pop
and
sahf
sbb
scas
jmp
sbbb
pop
in
pop
inc
mov
cmpsb
les
jnp
push
push
add
sub
pop
mov
mov
mov
lods
xor
hlt
pop
in
xchg
push
dec
movsb
push
push
roll
aas
push
jne
xchg
arpl
add
or
cld
decl
and
mov
dec
inc
jmp
stos
push
das
jl
mov
jmp
aad
inc
dec
mov
inc
push
das
fstpl
fisubl
or
stc
test
inc
imul
push
mov
ja
mov
jb
inc
loopne
icebp
adc
mov
pop
jae
xchg
pop
andb
lret
fldenv
push
jae
movsl
pop
mov
add
out
leave
test
shl
xchg
add
int
jns
clc
pop
test
pop
dec
inc
dec
fcomi
push
adc
and
ss
adc
adcb
rorl
aaa
mov
insl
sbb
adc
in
jmp
sbb
mov
jo
popa
push
mov
fldcw
shl
pop
adc
roll
cli
push
enter
dec
push
xorl
mov
aam
jle
mov
addr16
pop
sahf
xchg
dec
adcb
nop
hlt
and
mov
cld
in
add
popf
sahf
mov
int3
ret
pop
dec
out
mov
enter
iret
and
push
insb
mov
mov
push
rclb
pop
dec
loopne
xchg
lods
ret
cmpb
cmpsl
jno
xlat
loop
daa
out
jle
outsl
bound
xor
add
inc
mov
ds
fnstsw
loope
jl
mov
mov
out
dec
mov
sbb
jnp
lcall
rclb
dec
pop
shrb
sub
mov
insl
adc
mov
sarb
pop
inc
xor
fstl
xchg
dec
pop
lods
pusha
xor
xchg
or
loopne
addr16
into
push
dec
nop
dec
movsb
lcall
adc
push
addr16
jb
out
dec
ljmp
sahf
jp
lock
scas
sub
mov
push
xlat
dec
sbb
flds
lods
insb
xor
out
dec
fildl
out
xchg
cmp
hlt
mov
stc
add
inc
cmc
push
xor
loopne
or
lock
xorb
fisubl
pop
imul
dec
pop
adc
xchg
cmpsb
dec
leave
addr16
aaa
xor
pushf
lods
sub
push
ret
int
adc
loopne
mov
inc
jo
das
add
cwtl
add
mov
les
loope
mov
and
dec
mov
xchg
push
dec
setnp
adc
sub
ret
add
rorb
js
sahf
dec
int
jb
sbb
movsl
mov
cld
fimull
dec
jns
xchg
pop
rcr
xchg
and
xchg
fstl
and
fildl
insl
push
push
mov
in
adc
mov
push
push
fstps
lahf
pop
jg
ljmp
das
lds
mov
push
fiadds
aad
xchg
repz
bound
mov
adc
movb
mov
fildll
dec
jge
jmp
push
fmuls
adc
xchg
dec
push
outsb
mov
add
int
lods
xlat
repz
out
pop
push
addl
in
les
test
or
and
jo
pop
out
jl
call
mov
stc
nop
pop
loopne
adc
sub
adc
fmull
mov
mov
xchg
mov
sar
test
jo
push
scas
imul
mov
mov
into
or
jge
xchg
out
push
pop
cmp
je
daa
cs
jae
jle
xorl
jae
ljmp
jge
jmp
repz
loope
xchg
call
dec
mov
cld
xchg
sti
or
or
sub
push
roll
dec
dec
mov
repnz
ret
jo
out
fisttps
jmp
in
jp
rcr
jmp
pusha
loope
repz
imull
cli
test
fxtract
adc
adc
cmp
ljmp
mov
adcb
jnp
sti
push
popf
sub
jne
pop
xchg
mov
or
sbb
test
popf
fldl
insb
mov
pop
xchg
insl
std
xchg
repnz
fistpl
repnz
ret
pop
xchg
inc
popf
sbb
mov
shll
std
xchg
sub
xor
in
lock
inc
or
das
sub
testb
rol
push
scas
xchg
fisttpl
lret
dec
daa
into
push
adc
insb
sbb
and
sub
roll
lret
in
das
fsubs
popf
mov
pop
push
add
jge
popa
fldenv
mov
xchg
and
xor
xor
mov
imul
mov
aas
sbb
and
mov
pop
and
jg
aaa
adc
mov
fistps
dec
insl
enter
sti
aam
ficoms
inc
sbb
or
sahf
jecxz
sub
mov
push
jae
inc
ficomps
shlb
push
icebp
mov
js
loopne
pushfw
jbe
lret
add
je
imul
jo
ret
fsubrl
clc
lret
jne
pop
xchg
fmul
repnz
sahf
jl
cmpsl
add
imul
and
or
in
inc
and
in
cmp
inc
stc
mov
les
adc
movsb
mov
mov
mov
add
loopne
mov
lods
pop
iret
sbb
add
pop
ret
rcrb
jl
mov
iret
test
jl
gs
pop
cli
push
xchg
ja
imul
out
repnz
js
pusha
lds
pop
ljmp
ficomps
testl
cli
je
popf
cmp
bound
jmp
pop
test
shl
out
aad
popa
push
ja
jp
pusha
mov
jl
aas
jge
ret
jle
xchg
sbb
mov
mov
xchg
std
mov
aad
pop
imul
popl
mov
mov
xchg
loopne
shrl
andb
adc
imul
shrb
outsb
jae
js
or
fs
xchg
mov
push
imul
dec
outsl
mov
inc
and
add
arpl
dec
xchg
fsubrl
dec
cmc
pop
lret
in
divb
rol
xlat
popa
xlat
lahf
push
sub
sbb
lds
ret
loopne
xchg
jl
daa
mov
lea
repz
xor
add
sbb
xchg
ljmp
leave
pop
faddl
leave
push
cmp
push
add
test
shl
ret
mov
or
addr16
in
clc
sub
imulb
sbb
pop
xor
outsb
adc
xchg
and
xor
and
mov
or
pop
pop
cmp
sbb
lret
aad
jne
rcll
dec
cltd
push
lds
sub
inc
in
rcrl
jmp
jo
xor
adc
cmpsb
push
inc
mov
add
js
int
lret
jge
and
push
or
lods
add
sub
cmp
xor
inc
xchg
inc
add
cs
jle
insl
xchg
fldt
es
add
or
sbb
ror
pop
push
ljmp
ret
jle
jp
ljmp
stc
sbb
aas
pop
js
insb
scas
aad
xor
out
fdivl
add
dec
inc
sbb
sub
data16
loope
or
fisttpll
int3
lods
loop
or
flds
push
xchg
decb
outsb
adc
push
adc
aam
jp
cli
mov
int
xchg
add
push
ret
cmp
repnz
sub
jp
int3
mov
dec
adc
push
fdiv
jb
ret
and
add
cmp
cs
pop
pop
aaa
lea
jg
stos
sti
imul
cwtl
fcmovne
sbb
fdivp
cli
test
cs
push
stc
testb
ds
je
cmc
push
xor
fdivs
xor
loope
or
sub
sub
adc
jb
xchg
inc
mov
mov
call
outsb
test
fcomps
sub
dec
cmp
xor
pop
bound
fsubr
pop
sub
and
imul
xor
ds
movsb
or
les
dec
dec
xchg
stos
lcall
xorl
in
sar
mov
stos
inc
stos
cltd
mov
insb
push
leave
push
or
sbb
mov
ret
fiadds
xor
cs
jno
repz
adc
adc
int
cmp
dec
push
call
mov
mov
or
stos
mov
fwait
sbb
fnstenv
and
push
mov
mov
mov
cmc
jae
out
or
cmc
xor
insl
xlat
inc
mov
enter
push
xor
out
jecxz
cld
sahf
adc
iret
fs
sti
shll
test
ret
js
andl
sbb
xor
add
mov
popf
sahf
in
hlt
out
call
dec
fcmove
rcll
subl
inc
movsl
fdivrs
jb
jo
jge
xor
in
jl
int
pop
jb
adc
push
mov
add
pusha
xlat
add
dec
xor
gs
add
mov
lcall
lcall
pop
mov
sbb
aam
cmc
push
frstor
loopne
mov
out
lret
jl
mov
push
mov
leave
inc
adc
daa
xchg
int
or
paddsw
jp
mov
mov
jle
fisttpll
lds
fidivrs
sbb
movsb
push
and
xchg
sbb
adc
aas
ds
jl
call
or
ficomps
ds
fmuls
mov
sub
sbb
or
jle
scas
fcoml
mov
outsl
js
fs
inc
inc
cld
inc
mov
incb
cwtl
roll
cmp
push
aam
das
sub
in
je
cmp
out
pusha
push
mov
ja
cmp
and
xchg
fnstcw
fwait
cltd
frstor
lock
cld
fpatan
nop
xchg
insl
rcrb
mov
inc
lahf
movsl
lea
xor
scas
lahf
cld
xor
bound
xor
push
adc
scas
mov
push
std
mov
mov
adcl
bound
mov
js
fbstp
xor
rcrb
push
insl
sub
in
jae
fstpl
les
je
lds
pop
mov
loop
jmp
cmc
pop
cmp
push
add
push
in
bound
repz
xchg
xchg
push
sub
sub
or
pop
and
xlat
cmp
ljmp
inc
jnp
mov
int
and
lds
sbbb
in
std
out
orb
xor
push
xchg
ret
jae
lcall
sbb
push
in
cmp
jge
pop
jge
cmp
pop
arpl
loopne
pop
jge
call
addb
outsb
ss
add
int3
lcall
fs
jle
inc
pop
fnsave
sbb
xor
push
icebp
mov
xor
and
adc
push
jno
rorl
pop
fistpll
xor
and
shl
push
dec
jp
cmc
jmp
sub
jp
dec
daa
pop
sbb
mov
jmp
lea
push
jecxz
mov
loop
clc
shrl
xchg
or
mov
adc
aad
int3
ljmp
sbb
iret
xchg
stc
and
dec
xchg
push
jge
mov
dec
cmp
sbb
pop
mov
push
insl
inc
shlb
scas
cmp
and
dec
shl
sbb
das
or
sbb
pop
nop
lods
push
sub
pop
jbe
enter
cwtl
jle
xlat
dec
cld
and
cmpsl
sbb
inc
sahf
lcall
lret
je
pop
pusha
push
movsb
pinsrw
jns
mov
js
test
in
inc
es
add
dec
xchg
fwait
pop
mov
nop
arpl
inc
jnp
and
pop
ja
jg
dec
ljmp
out
cmp
push
idivl
mov
and
cmpsb
adc
jp
sbb
sbbl
push
jg
mov
add
fdiv
adc
cmp
push
or
in
or
dec
jne
jne
dec
mov
movsb
cmp
push
lods
jmp
mov
popa
mov
pop
adc
loop
push
sbb
fisubl
inc
mov
mov
add
jp
mov
push
cs
lods
in
xchg
in
and
clc
ja
xor
in
cmp
cli
roll
inc
data16
add
add
mov
loope
mov
cs
into
mov
pop
cmp
xchg
lcall
outsb
or
gs
mov
outsl
adc
pop
sbb
pop
rcll
push
add
lods
arpl
andb
jge
mov
stc
and
aaa
iret
add
dec
mulb
push
inc
out
mov
mov
bound
pushf
out
xor
out
insb
lods
scas
in
cmp
jmp
xchg
lods
mov
ret
out
das
mov
jae
cmpsb
and
xchg
push
push
push
mov
leave
xor
mov
jno
push
xorb
mov
iret
inc
mov
mov
scas
jno
scas
or
push
inc
pop
mov
cmpsb
jmp
mov
sarb
sbb
adc
sub
pop
fistpll
jns
ret
dec
push
lahf
dec
jo
dec
std
repz
add
cmp
setns
ficoml
int3
sbb
push
xchg
arpl
jmp
inc
out
mov
cmp
mov
or
jb
lret
ret
dec
xor
pop
push
push
and
jmp
cmpsl
int
test
xor
xchg
push
adc
xchg
orb
mov
aad
adc
pop
jae
icebp
push
sbb
fidivrs
jge
xor
fnstsw
add
sbbl
cld
lret
pushf
movsl
adcl
mov
adc
loop
dec
pop
cmc
sub
out
push
je
jb
xchg
fidivrl
and
test
and
push
into
and
je
xchg
lret
pop
or
jnp
daa
push
mov
cmpsl
pop
lds
or
cmp
push
rclb
cwtl
mov
mov
xchg
jae
sbb
fistpl
xchg
add
out
jbe
sub
xchg
mov
jecxz
add
test
ret
cwtl
ficompl
ret
inc
out
mov
jne
lret
or
jno
in
xchg
pop
aad
call
addr16
or
in
xchg
adc
inc
aam
movsb
loopne
lods
inc
jle
call
inc
andb
shll
adc
dec
jmp
adc
mov
sbb
jno
int3
mov
outsl
dec
push
pop
jbe
faddl
decb
pop
xor
fs
xchg
jmp
jmp
iret
push
mov
cltd
ja
into
jne
test
call
test
xchg
fdivl
jle
push
jg
pop
dec
enter
mov
cs
fimull
test
pop
daa
or
xchg
mov
and
and
sbb
data16
pop
add
outsb
mov
xchg
pop
xor
lcall
push
xchg
iret
or
or
or
jns
cmp
subl
arpl
loope
sub
inc
mov
dec
lahf
push
inc
imul
push
cmpsl
jp
sbb
popf
and
cs
jo
cmp
lret
pop
add
jecxz
into
clc
int
repz
sbb
cmpl
bound
lds
mov
jae
cmp
addr16
outsb
lcall
pop
loope
cmp
sub
push
add
mov
dec
sbb
cmpsb
imul
dec
push
add
fimull
push
mov
jge
mov
pusha
movsb
outsl
pop
inc
push
fs
lods
mov
jle
bound
mov
jmp
in
xchg
stos
test
shlb
test
add
loope
sbb
sbb
lods
inc
sbb
xchg
mov
adc
in
sub
dec
add
mov
xor
sarl
movsb
mov
push
cmc
cmp
push
cmp
lods
push
cli
pop
sub
add
repnz
push
pop
cmpsl
enter
jecxz
inc
in
add
lds
repz
inc
and
sbb
js
and
gs
popa
xchg
movsl
ror
fs
adc
cli
movsl
xchg
inc
mov
int3
std
add
mov
xchg
xchg
test
sti
jbe
mov
jbe
stos
xchg
rcll
adc
cmpsb
push
and
imul
outsb
mov
mov
push
fstpl
test
sbb
xchg
jecxz
mov
fcmovnb
cwtl
pop
inc
xor
inc
stos
loope
data16
add
and
mov
je
xchg
movsl
int3
call
aad
xchg
and
ficompl
jle
adc
test
dec
daa
sub
sbb
xor
mov
inc
dec
mov
fcoml
cmpsb
sub
xor
int3
out
and
xchg
out
outsl
divb
inc
pushf
push
sbb
mov
or
push
xchg
lcall
iret
inc
mov
jle
jo
in
push
cmp
pop
and
test
inc
lret
sbb
sbb
lret
aam
mov
js
scas
repnz
and
jb
shrb
sar
div
fs
or
neg
vpmadcswd
mov
mov
out
inc
mov
pop
mov
je
adc
ret
inc
xor
daa
sub
loope
daa
add
mov
sub
mov
and
push
and
push
lahf
gs
in
sbb
add
pop
jne
movsw
dec
repz
lret
xchg
or
aas
jmp
mov
mov
xchg
shrb
push
mov
lock
sbb
popa
add
dec
daa
icebp
mov
gs
or
hlt
push
out
mov
mov
jg
push
cwtl
jmp
or
xchg
or
adc
or
rclb
lret
sbb
xchg
es
orb
cwtl
sbb
add
testb
cmp
pop
pop
outsl
add
stos
shlb
aam
jle
ficompl
aad
xchg
sub
movl
stos
iret
clc
push
aam
or
sub
icebp
js
out
xlat
andl
lret
mov
jmp
lea
mov
push
jmp
pop
sbb
mov
bnd
jno
int
mov
push
lret
in
add
cmp
repnz
nop
stos
adc
mov
lret
lock
int
push
mov
mov
lret
jb
fsqrt
outsl
ret
mov
ja
or
mov
and
adc
repz
popf
mov
ret
and
jne
cmp
or
fdiv
cmp
xchg
pop
inc
mov
xchg
insl
pop
and
out
pop
mov
adc
pop
jno
xor
lahf
divb
pop
xor
or
lds
stos
repz
sub
stos
jp
or
push
sti
data16
add
shll
mov
clc
imul
bound
imul
mov
es
fs
or
sbb
jle
mov
xchg
mov
cmp
sub
into
mov
fmul
pop
ret
movsl
movsl
inc
pop
add
mov
sbbl
dec
into
xlat
jge
cmp
sahf
push
push
stc
mov
leave
dec
ror
mov
inc
inc
inc
jle
push
jl
dec
movsb
mov
ror
mov
mov
xor
push
aaa
in
add
popf
xchg
popf
leave
mov
pop
dec
test
sbb
sub
xor
jb
popf
test
std
inc
fisubl
mov
mov
das
pop
push
cmp
mov
mov
fnsave
dec
pop
sbb
ret
cmpl
xor
and
mov
aas
ror
xchg
adc
sbb
jmp
nopl
out
push
adc
aas
arpl
dec
jae
sti
ja
sub
inc
ret
repnz
xor
shll
adc
test
xchg
push
cwtl
in
clc
and
push
xchg
mov
and
insl
mov
hlt
pushf
push
pop
and
stc
xchg
jg
cmp
gs
in
ja
dec
dec
iret
mov
sub
push
xor
cmpsb
push
xchg
leave
jmp
repz
test
ss
xchg
rol
pusha
pusha
push
inc
adc
out
cmpsb
xchg
stc
div
sar
imul
fsubrl
sub
mov
popa
ret
fisubs
das
dec
dec
das
ret
pmullw
imul
mov
les
push
leave
stc
mov
mov
dec
or
mov
mov
mov
mov
pop
bound
add
push
and
into
push
out
in
int3
or
adc
xchg
jbe
movsb
add
jae
adc
sbb
adc
les
into
jmp
ss
or
xor
xlat
aaa
js
movsl
mov
push
rorb
or
cmpsl
pop
cmpsl
cmp
pop
push
pop
sub
aam
xor
lret
mov
adc
outsl
xchg
shlb
test
inc
mov
cmp
lahf
xchg
mov
movb
adc
hlt
fsubrs
dec
cmp
xchg
mov
fildl
stos
lods
push
and
cmpsb
stc
fsubl
filds
cmpsb
loope
call
filds
bnd
sub
mov
push
lods
or
jmp
mov
cltd
xlat
pop
cmp
lret
movsl
pushf
sub
or
push
leave
leave
xlat
or
das
jae
lea
ret
mov
push
xor
adc
cld
sbb
mov
jnp
xchg
dec
xchg
rcrb
jae
sub
dec
sub
cmp
cmp
gs
add
cli
stos
in
xlat
push
mov
orb
sahf
mov
jns
push
pushf
lods
aas
sbb
xchg
ret
jbe
lea
push
call
pusha
pop
add
in
cmp
iret
and
lods
jae
push
out
sub
adc
into
rcll
mov
mov
into
add
push
or
mov
mov
cmp
push
pop
cmp
add
and
testl
xchg
loop
push
stos
fcom
dec
fbld
icebp
out
imul
push
mov
and
add
cli
cmp
cli
int3
stc
inc
push
xchg
xchg
cmp
mov
outsb
mov
add
dec
adc
dec
aas
fwait
in
mov
or
pop
cmpsl
fwait
cmp
lock
push
pop
jl
arpl
jmp
scas
inc
ljmp
leave
or
dec
rclb
mov
lret
cmpsb
lcall
mov
adc
stos
mov
dec
jp
sbb
gs
cmp
inc
ja
pop
sub
jecxz
fimull
dec
movsb
jae
or
mov
int
add
pop
lret
inc
inc
out
lods
fnstsw
loope
stos
xor
and
push
or
pop
dec
jmp
fnsave
out
and
mov
jb
cmp
mov
popf
mov
mov
dec
sbb
es
push
mov
mov
adc
and
into
sbb
dec
mov
test
xor
scas
icebp
inc
int3
dec
mov
mov
rcl
xchg
sbb
cltd
pusha
inc
xlat
jmp
adc
bound
rorl
xor
jo
sar
das
add
shl
push
pop
inc
xor
xor
xor
int
cmp
das
sbb
test
into
es
cmp
xchg
fcoms
inc
pushf
cmpsb
xlat
mov
pop
jl
xchg
jb
test
xlat
or
pop
xchg
inc
mov
inc
into
out
adcl
and
sub
insb
mov
and
mov
in
aam
mov
xor
lss
jp
jl
repnz
dec
mov
fidivl
iret
test
lret
dec
arpl
cmp
jecxz
pop
out
out
push
mov
lea
lods
adc
mov
fadd
push
mov
adc
sbb
push
arpl
insb
push
aad
or
addb
mov
insb
out
cs
sub
das
inc
adc
or
xchg
mov
fldcw
jg
mov
in
fildll
or
push
or
out
aam
insb
addps
or
ljmp
jbe
sub
sub
xor
in
jle
or
cs
js
push
dec
and
push
add
mov
jle
or
or
fisttpl
jge
lret
xchg
jb
mov
stos
aaa
sbb
mov
push
ficomps
adc
shll
mov
mov
mov
fcompl
cmp
dec
lds
adc
push
mov
lcall
add
loopne
push
sub
xor
mov
jbe
mov
mov
cmpsl
mov
js
sbb
mov
mov
mov
lcall
test
pop
aam
mov
cmp
and
mov
push
mov
add
xor
push
pop
jg
imul
xchg
sub
xor
in
add
std
or
mov
movsb
cmp
or
jne
jle
int
scas
pop
and
push
fidivs
test
nop
dec
adc
mov
loop
mov
ss
lods
arpl
loopne
ret
bound
sbb
mov
int3
cmp
les
ss
jp
fucom
fs
dec
ljmp
insl
xlat
imul
idiv
cltd
daa
inc
repz
mov
dec
mov
aam
mov
addb
pop
push
rcll
mov
mov
icebp
or
mov
xchg
add
bound
push
andb
js
mov
std
hlt
mov
xchg
xchg
jle
xchg
call
mov
push
push
gs
jno
adc
ja
aaa
or
movsl
inc
scas
out
push
xchg
jbe
pop
adcb
xchg
mov
in
xchg
mov
sub
push
loop
lret
xor
jbe
xchg
or
mov
inc
pop
call
cltd
or
xchg
or
scas
sbb
jl
fcmovnbe
movsl
jle
repz
pushf
stc
lret
sti
cmpsb
imul
mov
xor
cmp
and
out
fdiv
inc
ficomps
ret
inc
and
std
cmp
xchg
movsb
fs
jp
outsb
add
push
dec
and
mov
push
xchg
repnz
ret
flds
jge
std
out
sub
pop
sbb
inc
mov
sub
into
fwait
mov
cmpb
mov
out
adc
fwait
cli
pop
out
lahf
xor
lods
sahf
lret
sub
rclb
jnp
leave
or
push
fisttps
sbb
mov
ds
inc
call
pop
mov
into
lea
movsb
jge
jne
rcll
sub
dec
dec
in
jno
and
jb
pop
jmp
outsb
dec
and
imul
lods
mov
cmpsb
mov
nop
cmp
mov
mov
aas
outsb
jecxz
data16
aaa
and
adc
fildl
loopne
xchg
decb
icebp
je
into
sub
mov
lcall
sarl
mov
sub
jle
aaa
daa
mov
add
ja
push
test
add
icebp
fnstcw
cmp
sbb
repnz
stos
mov
out
cmp
rcll
push
mov
fdivrs
loopne
inc
push
jne
jp
ja
mov
outsl
cwtl
fdivp
sahf
add
mov
and
cmp
shlb
xchg
jno
insl
lock
daa
test
inc
mov
pop
pop
insl
cmp
daa
out
movsl
pusha
pop
adc
jge
xchg
mov
mov
mov
pop
add
cmp
addw
jl
dec
into
push
lcall
inc
idiv
gs
pop
shrl
sbb
xor
dec
rolb
into
mov
fiaddl
mov
xchg
and
aam
lret
or
dec
repnz
dec
roll
insb
and
andb
vpshlq
pop
rcrb
mov
sub
cmc
out
pop
sbb
add
fdivs
sbb
mov
out
xchg
cmp
mov
jo
pushf
int3
out
mov
test
mov
std
int3
lock
icebp
sbb
xor
in
fcmovb
dec
adc
mov
push
divb
movsl
push
movsb
pop
cmpsl
out
pop
xchg
jae
pop
out
or
jg
in
sub
fisubl
xor
ja
push
iret
vmwrite
dec
ror
dec
orl
int3
push
pop
mov
cli
mov
jae
dec
sub
ljmp
xor
sbb
mov
int
jp
addr16
outsb
cmc
mov
bnd
xchg
xchg
cmp
and
jbe
and
aaa
mov
or
add
ficoml
jmp
nop
les
xchg
dec
les
or
pop
mov
in
das
lds
add
pop
cmp
mov
inc
pop
mov
cwtl
out
icebp
or
clc
push
pop
mov
mov
adc
dec
cmp
jbe
cmpsl
sbb
cmp
jmp
mov
adc
pop
jb
iret
cmp
push
imul
jle
repnz
or
loope
adc
les
pop
imul
dec
insl
jns
inc
xchg
or
xchg
loop
and
sub
jg
ficompl
test
sti
fsubr
ljmp
push
repz
shll
int
jecxz
roll
mov
loopne
pop
out
loop
shr
outsl
mov
adc
icebp
xchg
in
rep
or
pop
ficompl
imul
outsb
adc
push
aas
xchg
xchg
jae
lds
jmp
in
sbb
xchg
pushf
xchg
jno
inc
add
leave
lret
pop
andl
xlat
int3
add
mov
push
pop
mov
addr16
pop
sub
push
and
cli
xchg
pop
jp
and
pop
das
daa
cli
adc
dec
or
cltd
lds
repnz
jp
sti
mov
leave
out
and
pop
or
xor
push
and
sub
lds
inc
test
imul
aam
fucomip
mov
inc
cmp
cmpsb
shrb
and
dec
add
aas
scas
xorb
mov
mov
movsl
scas
mov
icebp
ret
xlat
push
test
fwait
nopl
sbbb
sbb
cmp
icebp
mov
fistps
xchg
mov
sbb
dec
or
mov
fisubrl
shrl
lods
xchg
mov
pop
outsb
pop
pop
push
mov
push
dec
xchg
test
mov
mov
pop
mov
jae
mov
int3
mov
clc
pushf
sarb
stc
sub
add
mov
pop
fisubl
mov
add
inc
popa
test
stos
mov
cli
lods
sbb
jecxz
aas
pop
jo
cmc
lods
or
sbb
mov
into
xor
push
xor
push
clc
jno
inc
cwtl
dec
fidivrs
lret
cmpsb
or
in
push
aaa
or
mov
ds
xor
mov
cli
push
adc
dec
mov
in
sbb
mov
test
roll
mov
mov
loop
mov
loopne
push
mov
notl
cmc
push
insl
xchg
xchg
bndldx
xor
lret
jl
ret
or
loope
int
mov
aaa
jae
and
xlat
adc
popa
test
add
cmp
dec
gs
lahf
jg
jle
cli
or
inc
test
imul
stos
icebp
imul
jp
mov
adc
mov
icebp
mov
enter
aaa
sub
out
or
xchg
xchg
dec
rcrb
cld
dec
pop
outsl
pop
stc
xchg
or
cmp
arpl
adc
cs
je
cmpsl
hlt
mov
out
sti
rcrb
lret
dec
in
sar
movsl
call
jle
cmp
test
pushf
stos
out
dec
sub
cmp
stc
sub
fmulp
or
leave
icebp
mov
pop
lret
or
sub
inc
adc
aas
hlt
divl
sar
xchg
xchg
sbb
mov
mov
xchg
testl
sub
and
push
addl
cmpsb
jbe
frstor
inc
cmp
sti
add
aad
sub
lods
popa
push
sbb
lock
push
sub
and
push
sbb
push
xchg
jns
jl
xchg
push
lcall
fwait
sbb
aad
pop
and
or
mov
mov
notb
mov
add
push
pusha
cltd
out
jge
dec
and
or
mov
pop
sub
mov
xchg
pop
adc
adc
mov
ja
xor
sti
push
lods
push
shl
fidivrl
subl
mov
mov
scas
cmp
cmp
mov
in
inc
setle
add
aas
mov
ret
imul
pop
shrl
inc
sbb
fcomi
pop
sub
sub
adc
mov
pop
push
inc
pusha
cs
es
push
andl
pop
mov
adc
mov
xchg
jnp
ret
mov
adc
jo
call
xor
pop
mov
xor
call
scas
push
jecxz
outsb
adc
popa
cld
cmpsb
pushf
gs
pop
aam
bound
xor
sub
fidivrl
rcrl
pop
lods
push
jg
jge
scas
sbb
push
xchg
dec
arpl
cmp
test
xor
jp
cmpb
xlat
scas
outsb
ret
pop
cmp
test
push
adc
dec
mov
xor
cmpsb
iret
or
push
and
adc
lods
pop
mov
sub
test
inc
push
adc
push
out
movsl
loop
and
sub
call
int
out
xor
xor
add
pop
cwtl
and
mov
inc
ds
int3
mov
pop
ja
in
enter
loope
or
pushf
ds
sub
or
cmp
push
sahf
out
adc
shlb
inc
pusha
jne
cltd
ret
sbb
push
dec
adcl
movsb
dec
or
adc
xor
test
fdivs
and
and
sbb
imul
cmpl
cli
aad
iret
lret
mov
mov
push
xchg
test
mov
scas
cli
rorb
in
cmp
cmpsb
mov
sub
sahf
in
repnz
sub
call
movsb
ret
lods
call
cli
dec
es
add
popa
push
scas
lret
dec
push
or
clc
add
icebp
jmp
notb
mov
add
mov
push
int3
inc
outsb
mov
insb
div
xchg
mov
lcall
mov
push
loop
scas
dec
mov
repz
xor
pushf
dec
pop
or
xor
push
test
les
sbb
push
ret
pop
popa
sbb
jl
into
jp
sti
pop
loope
push
mov
jle
cmp
or
lret
mov
mov
adc
mov
icebp
or
mov
mov
jmp
loopne
or
imul
insb
pop
inc
sbb
sub
sub
aam
imulb
jp
stos
adc
rclb
inc
cltd
imul
aam
adc
jl
mov
jg
or
xor
add
cmp
xchg
mov
sbb
dec
and
mov
je
cli
xor
adc
movsb
mov
mov
sub
out
fdivrl
xor
mov
scas
mov
jecxz
dec
pop
das
sarb
cmp
jnp
jnp
jae
or
icebp
int
sub
hlt
xor
lods
in
cli
loopne
jp
xchg
dec
and
mov
mov
pop
bnd
cmp
int3
loop
xor
test
lret
das
mov
stos
mov
push
sub
test
push
fdivs
jl
lahf
cmp
and
popf
in
jno
sbb
sbb
mov
aad
movsl
or
dec
enter
or
mov
lods
mov
lods
sbb
push
xacquire
sbb
pop
into
fisttpll
hlt
cmp
arpl
add
xchg
test
adc
leave
mov
outsb
outsb
aas
rcl
sbbb
stos
setns
imul
gs
imul
ret
push
mov
fdivs
cli
xchg
dec
data16
add
jne
lret
fcmovnu
ds
xor
pop
mov
movsl
out
mov
add
inc
outsb
test
es
lock
mov
cld
loope
inc
pop
jmp
lds
movsl
leave
es
sub
cmc
imul
test
xor
xor
jb
outsb
dec
rol
dec
imul
repnz
push
scas
bound
or
bound
mov
outsl
pop
scas
push
lods
pop
add
dec
movntq
cmp
mov
sub
fwait
andb
xchg
and
lret
subb
pop
aam
xorb
sbb
cmp
jbe
rcll
push
rcrl
sbb
ret
cmpsb
and
in
push
jecxz
mov
lods
inc
push
sub
jl
cmc
orb
and
xor
jmp
insl
in
mov
push
add
cmc
pusha
mov
jecxz
mov
movntps
or
fists
clc
fdivrs
push
sbb
mull
stc
aam
lret
push
stos
int
lret
xor
mov
sbb
mov
test
cmp
dec
ficoms
mov
or
sbbl
into
inc
push
and
lret
sti
hlt
fdivrs
das
pop
jle
push
or
clc
pop
xchg
adc
mov
push
mov
adc
cld
inc
fs
sbb
and
inc
fisttpll
pop
out
mov
jo
test
stc
xor
icebp
sub
push
insl
pop
lods
mov
fnstsw
imul
xor
imul
push
roll
or
dec
jns
mov
fstl
icebp
stos
in
mov
mov
sub
out
gs
mov
mov
sti
inc
fstpt
mov
lret
cmp
movsb
mov
inc
inc
mov
xorb
xor
dec
and
loopne
div
pop
sub
mov
xchg
push
das
push
stos
in
mov
je
sahf
jo
push
push
addr16
jb
jmp
pop
cmp
xor
enter
or
dec
xchg
leave
mov
std
jge
inc
dec
jbe
inc
std
ds
dec
les
mov
push
lds
cmp
stos
outsb
push
mov
sahf
in
xor
pusha
rclb
cs
xchg
or
popf
push
xchg
cmp
inc
dec
inc
hlt
push
fs
hlt
jno
mov
loop
outsb
mov
push
movsl
fidivrs
sbb
dec
scas
xchg
push
pusha
cmp
sbb
rorb
nop
dec
test
inc
dec
xchg
dec
frstor
pop
pop
add
sub
imul
stc
scas
mov
xchg
sti
or
das
cmp
xchg
xlat
ss
enter
jl
and
fisttps
ljmp
xor
aaa
stc
mov
leave
inc
je
jl
add
addr16
push
ljmp
inc
pop
mov
cmp
jb
mov
clc
cmp
dec
push
push
xlat
push
sahf
enter
lret
add
xor
shll
sbb
sbb
mov
out
int
sbb
sub
leave
mov
mov
cmp
mov
pushf
sbb
add
lock
lahf
or
cmp
mov
adc
mov
jnp
bound
sbb
daa
enter
inc
out
dec
add
dec
push
shl
insl
sub
test
fisubrl
jb
push
inc
dec
cs
loopne
mov
sbb
jp
sahf
test
add
mov
std
pop
daa
js
mov
call
mov
xorl
xor
fidivs
inc
pop
inc
pushf
dec
mov
jge
cltd
pop
dec
sub
jnp
pop
jbe
ret
imul
mov
push
call
sub
jae
push
cltd
and
mov
inc
xor
inc
sbb
xor
or
push
aad
pop
paddsb
sub
xchg
out
adc
jae
addr16
or
orb
jmp
jecxz
mov
addb
jae
in
sub
cmp
mov
scas
scas
enter
ret
daa
xor
adc
mov
sbb
sub
in
cld
icebp
push
push
inc
push
and
test
mov
jae
aad
sbb
inc
push
jg
ret
or
in
adc
int3
dec
jle
cli
mov
cmp
shlb
xchg
icebp
enter
loop
adc
cmc
mov
leave
lock
xchg
popa
add
imul
xchg
mov
sbbb
dec
pop
test
mov
ss
idivl
mov
jecxz
loopne
rorl
mov
sahf
jmp
pushf
pop
movb
maxps
ss
mov
mov
mov
mov
mov
pop
inc
out
out
clc
in
mov
xor
aas
pushf
inc
cltd
arpl
mov
mov
ljmp
sub
loop
out
daa
das
adc
fstl
dec
push
mov
cwtl
cmp
lock
imul
xchg
lds
ficoml
shrl
jnp
mov
fistpll
xor
bswap
lret
xchg
int3
bound
adc
mov
sub
pushf
mov
jbe
or
xor
sbb
add
cmpsb
cmpsb
lods
mov
test
push
fidivs
sub
addr16
push
xchg
cmpsl
lds
bound
mov
test
adc
mov
xchg
dec
das
dec
ss
test
loope
test
xlat
xor
in
testb
jb
push
iret
xor
push
pop
dec
jmp
mov
cmpsb
jo
outsb
xorb
and
xchg
adc
cltd
jo
filds
xchg
pop
sbb
pushf
orl
out
mov
mov
add
das
lahf
and
repz
enter
push
jne
adc
pop
jg
or
lock
or
jl
mov
ror
divb
test
push
adc
mov
pop
mov
jae
fwait
mov
pop
daa
dec
dec
jnp
cwtl
add
and
push
push
or
inc
fidivl
test
push
or
or
popa
fstpt
in
mov
push
pop
or
test
andb
adc
adc
or
xor
cmp
fisttps
sub
sbb
ja
or
dec
lds
jno
pop
jnp
sbb
xchg
daa
push
mov
jge
adc
xor
orl
pusha
sti
jne
mov
mov
jnp
repnz
inc
scas
cmpsl
add
mov
sub
es
xlat
into
lock
inc
sub
push
mov
ds
jp
cmp
enter
mov
and
lods
xor
push
sub
int3
adc
mov
push
xchg
adc
lods
add
sti
fsubrl
arpl
push
repz
sub
subb
sbbb
fs
sbb
and
inc
mov
lods
das
aas
mov
lods
pop
mov
adc
mov
inc
repnz
push
xor
pop
lcall
xor
movsb
mov
inc
mov
mov
dec
inc
jmp
loope
mov
fldcw
les
cwtl
sbb
test
xchg
insl
es
jno
mov
ret
divb
jb
adc
mov
mull
ljmp
mov
fcompl
stos
dec
xchg
jo
lahf
sbb
xor
out
xchg
mov
sbb
vpaddb
adc
fsubr
mov
pop
daa
out
lahf
jns
and
rorl
std
xor
jno
aam
xor
pop
fisttpll
push
pusha
gs
gs
mov
inc
loope
arpl
dec
xor
mov
push
jge
push
in
std
in
scas
dec
popf
mov
je
inc
movsb
cmpsl
lds
test
inc
mov
int3
int3
out
rcrl
mov
bound
lea
cmp
int
iret
adc
add
mov
mov
sub
icebp
out
or
aad
mov
adc
loopne
aad
pushf
jo
push
inc
xorb
lea
jl
pop
xchg
fdivl
or
int3
pop
xlat
and
and
repnz
pop
mov
stos
or
rcrb
mov
cs
iret
nop
cmc
jnp
pop
sbb
or
ret
mov
cld
sbb
in
data16
addr16
ljmp
outsl
stos
push
push
xor
leave
jno
fistpll
mov
arpl
mov
shlb
ret
adc
insb
xor
push
dec
movb
ret
fdivrs
add
sub
jmp
adc
adc
adc
dec
add
jecxz
push
push
inc
xchg
jae
mov
xor
orl
out
imul
push
pop
jmp
stos
add
repz
std
jge
mov
mov
arpl
xchg
in
xor
cmp
aam
xor
xor
loop
int3
pop
mov
push
and
jl
rcrl
frstor
sahf
loope
gs
imul
aad
int
or
out
sbb
sti
jecxz
es
push
push
fiaddl
imul
into
fwait
ja
in
push
push
aas
imul
mov
jg
scas
mov
into
insb
add
insl
pusha
xlat
jns
push
xchg
push
fidivl
sbb
push
hlt
xchg
fnsave
cwtl
push
pop
ret
popf
scas
stos
loope
add
repz
sbb
inc
push
orl
push
fs
outsl
hlt
rcrl
pop
or
cmpsl
into
sbb
stos
mull
movsb
and
adc
xor
sbb
repnz
rol
fmulp
frstor
cmp
and
xor
dec
adcb
movsb
pop
jne
cmp
mov
push
cmp
ret
mov
cmp
cli
cs
rorl
shrl
data16
hlt
push
pop
adcl
mov
loop
insl
mov
mov
movsb
adc
cmp
jmp
xor
xchg
or
jecxz
sarl
pop
and
xor
jmp
mov
mov
add
push
loopne
xor
idiv
lret
sub
int3
rcl
iret
repz
in
add
pop
ret
pop
imulw
movsl
jbe
loope
sbb
xor
inc
or
ljmp
arpl
pop
rorb
sahf
shll
or
jns
dec
imul
push
hlt
gs
xchg
mov
sub
shrb
mov
dec
xchg
push
adc
hlt
cmp
xor
push
mov
pop
sbb
fs
jmp
mov
out
and
nop
pusha
arpl
jne
shrl
lahf
andb
in
ss
xlat
cmp
add
aaa
cli
mov
jmp
xor
dec
add
loopne
fwait
loopne
aam
sub
mov
js
mov
jecxz
jne
mov
insb
jp
es
sbb
in
arpl
push
icebp
push
stos
mov
sbb
dec
repz
mov
cmpsb
push
sub
mov
dec
out
pop
jae
aam
push
inc
pop
or
and
or
cs
xchg
popf
fidivl
jp
gs
push
sbb
loope,pt
stos
mov
cmpb
pop
sbb
arpl
stos
adc
in
movsl
add
mov
pop
sbb
call
cmp
in
pushf
lcall
scas
lcall
lds
mov
pop
out
int
lock
xor
cmpsl
xor
mov
movsb
ret
mov
mov
push
or
ja
mov
outsl
sbb
dec
rolb
cmc
stc
inc
int3
js
nop
stos
mov
jle
xchg
sbb
cmp
fisubrl
cmpsb
addr16
data16
dec
pushf
lret
mov
je
mov
pop
push
push
jp
leave
rol
mov
pop
hlt
cmp
out
jnp
popf
jmp
int3
jno
push
aad
push
push
mov
fs
fwait
test
aas
in
push
pop
je
into
iret
pop
pusha
cmpsl
inc
jecxz
jb
cmc
stc
jb
dec
pop
fwait
and
aaa
ret
xor
jbe
fildll
xlat
popf
lcall
addr16
sbb
pop
sub
js
jl
push
aam
stos
pop
outsl
inc
sbb
xchg
add
addl
mull
xchg
jo
pop
imul
adc
dec
out
cltd
dec
mov
adc
in
fcomp
popa
sub
imulb
pop
dec
cli
mov
aas
sti
sub
shrl
roll
and
mov
loope
lds
inc
fldenv
mov
inc
scas
pop
pushf
insl
int3
imulb
mov
mov
lock
aam
fs
sbb
pusha
jne
lock
sub
add
lret
dec
aas
lahf
inc
mov
jmp
push
cmp
fcompl
cmpsb
lcall
jecxz
ljmp
rcrl
ss
dec
out
fs
jmp
mov
mov
push
ret
movsb
clc
xor
movsb
or
lret
mov
repz
aad
adc
mov
sbb
leave
xor
fwait
xchg
adc
out
pop
push
xchg
cltd
xlat
xor
xchg
or
jecxz
lret
pop
loope
xchg
jge
dec
rcrb
lods
jmp
aaa
subl
loopne
arpl
dec
jp
movsb
lea
repz
sub
cli
inc
mov
jge
dec
add
lods
arpl
jle
jno
lret
icebp
mov
into
mov
in
inc
cwtl
jmp
decl
rorb
addl
sub
je
loop
ficoml
into
sub
loop
aad
es
mov
or
push
jmp
subb
mov
gs
daa
mov
sbb
pop
int
daa
cmc
adc
sbb
nop
test
jecxz
or
test
fidivl
adc
mov
mov
rcrl
push
jecxz
cmp
lods
testl
mov
or
mov
and
imulb
jns
inc
div
pop
mov
push
mov
adc
mov
mov
roll
movsl
cmp
xchg
adc
or
mov
ret
lods
fsubp
jge
adc
insl
xchg
add
adc
test
mov
add
jecxz
daa
push
push
hlt
scas
sub
pop
mov
adc
mov
cmp
pusha
aam
jo
and
mov
subb
push
daa
stos
jl
divb
jne
push
sti
into
fstpt
jg
stc
and
rorl
test
xchg
cmpsb
cmp
lock
outsl
xchg
push
or
dec
push
xor
or
dec
je
and
ljmp
test
mov
test
add
mov
sbb
mov
mov
push
push
cmp
xor
andb
bound
aad
mov
aas
xchg
mov
ret
jmp
lea
je
xchg
add
les
mov
mov
pop
push
stc
in
fidivrl
add
rolb
mov
in
mov
adc
mov
pop
and
push
add
pop
in
ucomiss
insb
jg
sbb
fnsave
lcall
push
push
mov
adc
dec
sub
adc
adc
daa
push
mov
iret
cltd
sbb
jmp
or
imul
pushf
adc
scas
popl
imul
and
adcl
pop
stos
adc
or
mov
repz
dec
jg
sub
or
mov
push
icebp
lahf
outsl
mov
dec
pop
pop
js
add
jl
mov
popfw
leave
test
dec
je
cld
mov
jecxz
push
incl
adc
cmp
mov
out
lods
dec
mov
leave
sti
cmp
rcll
sub
adc
jnp
arpl
callw
lret
pop
jne
fcomps
mov
int
stos
jno
movsb
mov
cmpsl
sbb
mov
pushf
lret
mov
into
xchg
insl
sub
mov
int
jne
mov
adc
arpl
inc
andb
xlat
sarl
xor
js
adc
and
enter
fsubrl
adcb
outsl
xchg
stos
and
fcomps
xchg
lret
mov
stos
xor
and
ss
mov
lds
iret
ret
jg
gs
and
mov
lcall
mov
dec
adc
xor
test
aam
push
xor
aad
aad
push
addl
notb
add
pop
test
lret
mov
out
rorb
cmpsb
in
xchg
test
aas
out
ficompl
sub
adc
add
stc
dec
xchg
adc
push
push
xchg
xchg
loope
movsl
and
sbb
rclb
xor
push
into
ret
dec
cltd
fs
push
shll
jns
sbb
sub
sbb
mov
sub
mov
sarl
jbe
jns
sbb
sub
xor
jmp
ret
mov
sub
cmc
jecxz
mov
dec
xchg
pop
mov
into
mov
lods
adc
inc
cmp
jb
outsb
out
add
dec
adc
out
lock
jnp
jae
and
sub
mov
test
fistpll
mov
xchg
xchg
cmp
mov
test
les
mov
push
or
sub
sub
pop
add
mov
mov
mov
call
imul
js
jnp
inc
data16
cld
gs
movhlps
mov
fcos
jge
mov
out
jo
fwait
lret
push
pop
imul
mov
imul
push
inc
sbb
xchg
ljmp
out
push
out
lock
popaw
sarl
insb
pop
lcall
push
cwtl
xor
ds
mov
cmpsl
aam
or
insb
aas
subb
adc
xchg
push
mov
repz
jns
or
icebp
stos
pop
bound
fisttpll
rorb
push
sub
pusha
out
clc
lret
pop
lds
sbb
fistps
pop
popf
dec
jnp
pushl
mov
and
dec
divl
jge
fbld
mov
ret
push
mov
or
lcall
pop
pop
cli
adc
fpatan
and
mov
aam
xor
and
jne
jmp
cli
nop
dec
imul
int
es
out
dec
pop
inc
inc
mov
and
mov
pop
dec
jp
pop
adc
loop
jp
jo
pushf
xor
or
mov
xor
cmpsb
pop
scas
xchg
mov
push
jmp
inc
rcr
gs
faddl
in
push
popf
add
xchg
dec
inc
in
sti
jo
sub
out
jnp
in
xchg
ss
popf
and
sbb
mov
sub
enter
lods
cmpsl
leave
and
aam
adc
push
lods
push
cmp
das
testb
cltd
or
push
cmpsl
out
push
push
mov
dec
ret
pop
imul
dec
js
mov
movntq
out
test
cs
repnz
fstpt
imul
movsl
or
pop
xchg
inc
or
pop
mov
xchg
jmp
xor
xorl
pusha
inc
mov
inc
mov
ja
int
cmp
out
jl
repnz
cld
push
xor
loop
stos
fdivl
xor
jle
pop
pop
out
cmc
inc
jecxz
xchg
adcl
stc
xchg
js
aam
outsb
notl
out
rcrb
xlat
scas
lahf
out
in
nop
loop
cmp
aas
and
mov
pop
sbb
mull
inc
inc
lcall
in
cmp
icebp
xor
mov
and
pop
rclb
mov
sub
sub
sub
lret
pop
mov
in
sub
cmpsb
sub
push
pop
sub
push
repnz
aam
push
add
jns
inc
inc
cmpsb
lahf
enter
andl
shl
dec
and
aas
adc
dec
jo
mov
and
mov
or
movsl
push
out
sbb
jo
sbb
pop
adc
aam
adc
xor
movsl
test
leave
fcomip
arpl
arpl
mov
cwtl
xchg
push
test
mov
add
mov
xor
cmpsb
sbb
ret
push
or
in
and
push
cmpsb
mov
fidivrs
jle
mov
pop
mov
xchg
xchg
test
and
jns
add
iret
daa
mov
dec
sub
adc
push
outsl
jmp
xchg
sbb
xlat
leave
insl
inc
pop
jle
cmp
pop
lret
inc
mov
add
sti
jp
jecxz
inc
jno
mov
hlt
cltd
ret
inc
pop
and
stos
bnd
push
jge
fimuls
mov
push
ficomps
stos
cmp
and
pop
mov
sub
int3
xchg
mov
into
cmp
xchg
mov
cmp
push
mov
sub
test
dec
cmp
pop
out
pop
aas
mov
cmpsb
test
lea
scas
xor
mov
into
sub
in
jae
push
outsl
xlat
fwait
lods
xchg
ret
add
addr16
xchg
jp
lahf
sti
dec
jae
adc
lods
jg
cmp
mov
fbstp
lds
ja
sub
push
stc
jle
xchg
out
jg
data16
push
mov
pusha
push
or
or
sbb
vunpcklps
mov
daa
shlb
sbb
jnp
jb
out
fidivl
aam
xchg
mov
repnz
les
je
mov
lds
mov
jb
sarl
mov
cmp
adc
jecxz
sub
scas
sti
push
cld
mov
push
mov
cmp
fwait
and
test
inc
cmp
dec
rclb
mov
insb
sarl
shl
mov
sub
pop
inc
ljmp
je
sub
dec
es
outsl
adc
jno
test
xor
cmp
addr16
jl
fildll
mov
mov
dec
mov
cmp
pop
addr16
pop
das
cmc
loopne
loope
mov
sbb
jl
fidivrs
or
mov
ficomps
mov
inc
mov
lods
add
push
xchg
sbb
xor
adc
xlat
mov
shrb
lret
cmp
rclb
shrb
jmp
xor
and
test
adc
outsb
xor
xor
aad
in
mov
jmp
sub
je
pop
out
dec
out
lret
mov
shlb
in
push
sbb
push
jbe
or
dec
insl
mov
pusha
cmp
cmp
incl
mov
and
stos
sbb
out
scas
xchg
xorl
mov
rcrb
sbb
xchg
aas
lcall
sub
cmp
sbb
dec
xor
dec
or
add
cmc
push
push
pop
fld1
jp
jge
stos
fwait
mov
cs
adc
sub
fsubl
mov
mov
pushf
inc
xor
arpl
lods
inc
or
shll
mov
insl
scas
add
xchg
xor
cmpsb
shrb
pop
and
push
jne
mov
test
xchg
inc
scas
inc
xor
fldt
aam
fwait
push
push
testl
lods
pop
xchg
cmp
add
int
pop
adc
rolb
pop
cs
mov
jne
cmp
adc
push
push
lock
or
out
movsl
dec
dec
add
and
lret
mov
lock
std
stc
mov
dec
nop
sub
mov
addr16
mov
lret
jno
sbbl
mov
cmpsl
sub
lock
jmp
or
mul
mov
psubd
inc
pop
pusha
adc
jecxz
mov
out
pop
iret
lods
ss
stos
cmp
pop
dec
xorb
mov
xor
repnz
stos
lret
test
cmp
adc
mov
mov
inc
int3
add
std
dec
shr
mov
loopne
mov
lret
scas
dec
fcmovne
dec
iret
aad
inc
cmp
test
dec
dec
cmp
stos
dec
inc
repz
mov
psraw
js
or
roll
repz
and
mov
addr16
cmp
mov
push
out
dec
filds
mov
jbe
mov
inc
scas
dec
xchg
pop
jg
inc
cmp
int3
and
mov
jge
es
fs
aas
daa
ss
cmpsl
lods
leave
sbb
cmpsb
lock
clc
out
jno
xchg
mov
sub
aad
xlat
mov
xor
cmpsl
adc
popa
xlat
lods
jb
fs
outsb
jmp
sub
inc
mov
or
in
dec
mov
sti
sbb
arpl
loopne
out
test
dec
insl
adc
cmpsb
insl
fistpl
mov
jl
inc
pop
xor
clc
jo
cld
js
add
dec
adc
or
adc
pop
cld
cmp
ss
and
inc
xchg
mov
inc
jno
xorb
inc
rorb
add
gs
scas
lock
xlat
outsb
xchg
int3
and
lea
lret
pop
rcrl
mov
xchg
test
or
mov
sub
or
cmp
pop
gs
aad
mov
repnz
lods
lds
jo
xor
subb
je
pop
or
push
enter
shlb
adc
mov
cmp
xor
inc
lods
mov
xor
mov
push
sbb
pop
fsts
cs
jne
sub
hlt
pop
rcl
in
shlb
int3
adc
int3
push
in
ud1
inc
stos
xchg
push
push
add
lea
ret
fstps
inc
hlt
push
xor
scas
dec
xchg
das
jp
movsb
lods
in
leave
mov
loop
xchg
push
xor
push
sbb
int3
aad
add
out
and
push
rcrb
xchg
jnp
cmc
in
xchg
inc
pop
repz
jne
mov
orb
lea
clc
insb
mov
adc
xor
sahf
rcrl
push
mov
fistpll
pop
cmp
test
out
jbe
pop
aaa
jl
push
or
aaa
loop
and
mov
shl
repz
subl
adc
adc
jle
mov
out
and
jl
dec
bound
dec
orb
inc
mov
insb
push
cmpsb
inc
jmp
outsl
test
jns
pop
popl
ret
mov
add
inc
xor
lret
cwtl
pop
push
loopne
movsl
repz
mov
and
ss
ljmp
scas
sahf
insl
lret
adc
nop
ficomps
frstor
cmp
cwtl
pop
jmp
mov
orb
iret
inc
bnd
out
pop
xor
das
jle
int
mov
rclb
ficoms
das
jnp
aas
pop
ja
and
pop
xor
sarb
sub
push
or
ss
sub
test
mov
in
cs
sub
xchg
imul
sbb
mov
lret
jmp
test
mov
stos
dec
sub
in
imulb
lea
insb
insl
scas
add
mov
adc
dec
fs
push
test
mov
rol
xchg
pop
lock
jle
or
xchg
mov
ds
mov
mov
outsl
or
std
shlb
cmp
adc
fistps
enter
push
pop
inc
xlat
push
js
add
adc
sbb
or
xor
adc
sub
nop
repnz
les
enter
nop
jb
mov
mov
or
sbb
mov
cmp
repz
pop
stos
fisubl
es
outsl
cmp
inc
jo
loop
lods
jg
lock
add
cmpsb
dec
jp
jl
jbe
ror
jne
addr16
add
xor
sbb
les
ljmp
fcmovnb
push
cmp
mov
js
dec
inc
xor
out
inc
cmp
sbb
add
mov
mov
push
mov
inc
mov
cs
xchg
push
mov
arpl
stos
cmc
jns
ret
jmp
enter
or
cs
mov
into
sub
xchg
in
loope
das
mov
sub
lea
or
sbb
fstpt
mov
ja
jnp
jle
adc
imul
sub
and
repz
xor
inc
lds
les
in
xchg
roll
in
leave
sbb
sbb
stos
add
jb
fucom
inc
pop
inc
xor
decl
mov
xchg
insl
jl
aas
out
cmp
stc
jmp
fcoml
imul
or
fsubrs
jb
lods
mov
pop
dec
pop
shrl
push
popf
fwait
dec
sbb
lret
add
call
repz
ljmp
clc
lock
test
jmp
fstps
cmp
dec
xchg
jmp
ret
adc
sahf
xchg
cmpsb
ljmp
popf
jae
lret
jge
cmc
ds
test
push
shll
mov
mov
and
hlt
inc
mov
stos
push
jge
roll
subb
repz
pop
mov
and
sbb
fisubl
stos
pop
dec
or
xchg
scas
out
fildll
cmp
outsb
adc
and
in
jle
enter
cltd
js
cmp
mov
ret
sbb
repz
aam
xorb
aas
add
call
push
xchg
adc
and
test
xchg
mov
mov
lcall
xchg
xchg
or
repnz
shlb
ror
in
jae
cli
and
btc
popa
gs
and
fisttps
pop
pop
cmp
mov
hlt
mov
pop
pop
hlt
outsb
inc
jl
mov
mov
jmp
jae
or
dec
cs
cmp
stos
push
xlat
divb
cmp
adcb
cmp
jmp
adc
ret
jmp
pop
xor
popf
mov
jns
inc
icebp
mov
push
jae
cmp
push
sbb
test
leave
mov
pop
sbb
setno
push
jg
daa
add
imul
mov
nop
mov
loope
sbb
xor
rcrb
sbb
pop
pop
frstor
mov
xchg
add
out
jno
inc
push
or
lcall
pop
test
xchg
mov
mov
xor
mov
sub
or
ret
test
repz
popa
mov
dec
sub
or
sbb
pop
jo
cmc
das
aam
and
into
adc
in
sbb
add
mov
xchg
mov
popf
dec
push
jecxz
pop
shlb
cmp
aam
fs
sub
push
cmc
lock
ljmp
mov
xlat
repnz
stos
cs
call
sar
mov
jmp
in
lea
jbe
loopne
sub
ror
movsl
xchg
notl
sbbb
icebp
xor
xor
ret
pop
aaa
stos
pop
mov
cltd
lcall
fadds
movsl
add
jnp
mov
jno
dec
jl
mov
jns
int3
push
add
pop
mov
jne
cmpsl
mov
clc
ds
enter
enter
cmc
clc
subl
and
mov
mov
mov
mov
cmp
mov
inc
cltd
out
and
or
or
sbb
or
call
cmp
stc
je
jo
pop
pop
jo
cmp
adc
adc
repz
and
xorl
into
fbstp
sbb
fimull
rcll
sbb
jecxz
pushf
mov
mov
cmp
sbb
mov
fiaddl
rcll
rol
push
xchg
loopne
movsl
loope
cmpsb
es
mov
adc
jns
pop
test
int
pop
fidivs
ja
pusha
fisttpll
dec
sbb
pop
arpl
push
in
rcrl
dec
nop
data16
js
xchg
and
rclb
outsl
movsb
adc
mov
arpl
aas
cmp
sbb
adc
in
pop
pop
stc
xchg
pop
dec
jp
and
leave
add
cmp
inc
mov
fisubs
sahf
loopne
or
xlat
pushf
adc
mov
or
rcl
cmp
push
insl
adcl
bound
out
fimuls
les
cmpsl
std
mov
inc
ret
pushf
outsl
adc
jge
inc
call
jo
inc
sub
mov
jne
movl
jnp
xchg
mov
and
xor
mov
add
rcrb
add
dec
in
fdivrl
mov
adc
sarb
cmp
xorb
jns
popa
and
in
bswap
pop
scas
ud0
xchg
cmpsl
add
divb
sub
movsb
dec
cwtl
fs
inc
outsl
mov
mov
sub
sbb
xor
gs
mov
repz
fistps
push
jle
aaa
aaa
jle
sub
cltd
sbb
adcl
test
scas
call
mov
int3
int3
rorl
push
insb
je
push
sbb
movsl
into
sub
out
push
cmp
jge
pop
jnp
subb
or
dec
or
les
lahf
sub
and
sbb
int
jno
lods
dec
aam
cmpsl
adc
adc
insb
rcr
adc
add
jle
mov
sub
lods
leave
arpl
push
cltd
into
pop
sbb
mov
cmp
cmp
push
pop
jnp
mov
xchg
out
mov
sti
subb
lahf
frstor
hlt
push
lret
cmp
addl
push
sbb
jbe
aam
imulb
adc
shlb
xchg
std
pop
pop
bound
cmp
xchg
jae
or
or
jl
mov
dec
ljmp
pop
ds
jge
mov
sub
insb
sbb
mov
cwtl
aad
popf
xorb
fcmovnu
out
jmp
lock
pop
popa
cmp
and
push
jno
xchg
shlb
incb
sbb
out
int
aaa
xchg
mov
pushf
outsl
sbb
sub
inc
xchg
cli
andb
dec
jle
aad
xor
push
mov
xlat
adc
in
adc
adc
adc
add
loope
mov
xchg
lret
cmp
dec
int3
xlat
mov
inc
mov
pushf
xorb
inc
fs
orl
xchg
xchg
jns
xor
frstor
cmc
add
dec
adc
mov
lret
sbb
inc
mov
mov
cmp
lcall
gs
dec
dec
sub
jle
pop
nop
mov
mov
adc
xor
mov
mov
data16
push
in
insb
das
jb
pop
mov
jo
std
jb
jge
outsl
dec
sub
and
sti
mov
xorl
jp
adc
mov
jl
jle
and
lock
ret
ret
cld
adcl
lods
mov
push
push
pop
fs
sub
aaa
scas
je
test
ret
jb
adc
outsb
xchg
push
inc
pop
nop
xchg
iret
add
mov
mov
fstl
add
inc
push
repnz
js
mov
xchg
fisubl
jbe
aas
cwtl
mov
mov
jae
hlt
mov
sti
sbb
dec
sar
mov
aam
or
ljmp
mov
mov
fcompl
and
sbb
adc
inc
loop
scas
add
cmp
pop
and
sub
mov
outsb
sarl
push
push
aas
push
insl
mov
pushf
sub
pop
cmp
lahf
cmc
and
movsb
or
and
xor
outsb
push
jne
daa
sbb
cld
out
enter
movsl
xchg
mov
rdmsr
repz
inc
sub
inc
push
or
jl
das
sub
scas
loop
daa
jbe
cmp
adc
repz
fwait
cmpsl
jne
adc
jecxz
movsl
mov
outsl
jmp
out
mov
jle
orl
lcall
cmp
pop
int
jge
shrl
and
outsl
js
dec
sub
jne
std
push
imul
cmpsb
push
ficomps
jle
pusha
clc
xor
std
test
addl
mov
inc
paddq
lods
push
xlat
and
aaa
addr16
or
sub
insb
imul
cmc
push
nop
ss
sub
sbb
mov
in
and
ficoml
push
mov
xchg
and
lret
jl
mov
sete
daa
fldt
cltd
ret
je
pop
lock
out
sbb
inc
xor
pop
xchg
jmp
pop
dec
push
jmp
enter
push
pop
lret
jp
das
jge
mov
dec
push
add
dec
shll
fst
mov
gs
in
mov
xor
outsl
mov
fildl
nop
sub
mov
pop
push
mov
adc
push
xor
ret
out
imul
lods
arpl
dec
pop
mov
push
dec
xor
push
adc
hlt
ficompl
imul
push
pop
mov
or
xor
and
arpl
push
cmp
mov
movsb
push
mov
mov
std
pop
fwait
testl
pop
popa
push
test
xor
push
xlat
and
jns
rclb
fisttpll
hlt
mov
lret
xlat
add
gs
adc
test
add
ja
or
xchg
xorl
push
jno
sub
xorb
movsb
jl
loope
inc
dec
add
xchg
pop
ret
ljmp
xchg
loope
or
mov
rolb
and
bound
aas
mov
insb
xor
adc
ja
addr16
lock
fsubl
dec
jmp
jle
insl
mov
jne
dec
sbbb
insb
test
push
xchg
sub
jbe
mov
jle
out
inc
mov
shr
push
arpl
cmp
lcall
xor
mov
fldcw
mov
xor
fwait
bound
mov
rcrb
je
repnz
test
sub
push
imul
aas
and
sbb
pmulhw
stc
add
push
test
in
outsl
cld
xor
mov
lret
mov
test
ljmp
cmp
xchg
ss
xchg
popa
aam
out
lds
lcall
xchg
jns
mov
add
sbbb
out
lods
gs
mov
je
pop
adc
out
repz
mov
jg
cmp
adc
mov
js
push
jmp
cli
lock
or
jge
ficoml
popl
call
cs
in
adc
mov
ljmp
ds
and
std
ja
mov
push
rclb
cltd
xor
cltd
fxam
and
insl
xor
sbb
push
mov
iret
push
out
sub
loop
addb
mov
mov
sub
jecxz
mov
push
push
imul
and
cmp
xchg
inc
mov
lret
fstps
cli
mov
emms
scas
xor
sub
jbe
add
ds
push
sbb
fdivl
cmp
or
mov
xchg
js
icebp
or
sbb
lret
mov
xchg
movhps
fimull
rcrl
xor
shll
push
lods
push
push
neg
dec
movsl
in
fs
pop
addr16
cmp
mov
push
push
add
lock
sbb
sti
mov
loop
add
clc
xchg
scas
sarb
and
cmpsb
mov
xchg
test
sbb
sbb
scas
and
mov
inc
sbb
aaa
insb
lahf
mov
and
mov
mov
mov
mov
cs
pop
sub
rcl
out
dec
jb
out
int
ss
cmp
into
loopne
and
or
push
pop
add
mov
or
sarl
shl
nop
js
mov
xchg
fisttpll
imul
lods
loopne
inc
inc
ljmp
in
testl
cmp
inc
in
mov
out
je
push
pop
loop
xor
sbb
aaa
leave
fcoms
test
shlb
add
or
stc
push
xchg
jecxz
inc
lret
pop
loope
cs
sub
adc
add
jecxz
adc
in
pop
jmp
leave
movsl
std
cmp
or
inc
fimuls
mov
sub
or
push
mov
push
jmp
jg
ljmp
mov
orb
and
inc
ret
mov
mov
idivl
aam
int3
or
mov
jle
iret
mov
ljmp
or
ds
and
or
adc
lods
fnstenv
lea
inc
jg
adc
addr16
cmpsb
cmp
pushf
or
push
rcl
jmp
enter
sbb
xchg
insl
imull
das
dec
mov
mov
in
xor
lock
les
push
cmpsl
mov
or
rcr
iret
mov
cltd
in
lods
jg
lds
out
mov
cmp
pop
fldcw
push
dec
stos
out
xor
neg
inc
cmp
divb
outsl
xor
out
insl
fwait
xchg
outsb
jno
adc
das
call
ret
lods
mov
cli
mov
pop
and
mov
add
rclb
cmpsb
fsubrl
pop
aad
inc
pop
test
or
pop
mov
add
loopne
hlt
mov
cmp
cs
ljmp
daa
aad
mov
mov
inc
cmp
sbb
pop
imul
xor
pop
and
sbb
lahf
mov
lahf
mov
xor
pusha
sbb
add
and
repz
cld
and
sbb
xchg
arpl
sbb
pop
and
and
in
xchg
mov
dec
out
fwait
lret
add
xchg
mov
addl
ret
cli
ret
or
in
rcll
add
push
mov
push
ss
pop
xlat
movsl
jp
pusha
mov
lods
test
fwait
jae
sbb
xchg
xchg
nop
and
sub
pop
icebp
lods
outsl
lods
dec
aad
or
cmp
adc
cld
sub
jae
jmp
adc
lods
icebp
cmpsl
lret
stos
cmp
imul
lcall
sub
ss
sarb
jp
xchg
jns
dec
rcrb
cld
popf
nop
xchg
jmp
push
sbb
mov
jnp
gs
fadds
loopne
push
inc
mov
daa
adc
outsl
imul
sub
push
inc
inc
data16
xchg
sbb
adc
lret
mov
hlt
cmpsb
out
or
mov
add
jp
push
hlt
xor
jne
nop
jns
push
pop
sbb
lahf
or
xchg
pop
repnz
lods
lds
mov
cmpsl
xor
mov
cmc
popa
sbbb
out
mov
out
sub
fildll
mov
pop
xchg
addw
inc
sub
outsb
pop
mov
js
xor
add
out
cs
add
lock
or
enter
fistpl
jle
and
cwtl
out
shlb
push
sub
es
in
jl
aam
xor
xchg
inc
pop
hlt
cs
sub
ja
out
fstpt
sti
out
fbstp
pop
add
bound
or
or
fnstenv
arpl
jne
loopne
xlat
cmp
add
add
ljmp
subb
lock
sahf
xchg
gs
cmp
cmp
inc
ss
popa
cmp
jl
sbb
and
xchg
sbb
jbe
mov
jbe
daa
xchg
mov
out
mov
fiaddl
stos
xchg
jmp
or
andb
dec
lods
inc
sub
push
int
pop
in
out
rcr
push
push
into
ss
repnz
sub
jo
clc
loope
adc
cmp
cmp
cmpsl
movsb
or
andl
ret
outsl
push
push
mov
jl
scas
insb
loop
push
jno
or
and
shrb
mov
mov
aas
push
ljmp
mov
pushf
dec
cmc
loopne
mov
mov
data16
and
outsb
clc
data16
cltd
sbb
orb
pusha
inc
or
mul
imul
andl
outsl
imul
cmpsl
fcoms
pop
pop
shrb
pop
loope
push
cli
inc
inc
add
pop
mov
mov
pop
daa
adc
jp
cmpsl
cmp
mov
push
stos
jae
jg
vpsubusb
mov
repnz
jle
inc
pop
daa
xlat
sub
lahf
and
jle
add
sahf
dec
push
rcl
push
mov
mov
pusha
fldl
dec
jmp
movsb
xchg
inc
sbb
cld
sub
insb
sub
nop
or
jmp
mov
push
orl
sti
add
and
rol
fs
sbb
jno
mov
lods
out
loopne
fsubp
or
inc
imul
mov
into
lret
sbb
in
daa
jp
or
icebp
push
scas
push
lea
std
inc
dec
dec
pop
push
fldenv
pusha
lods
sub
aam
add
jl
push
jge
seta
jg
xchg
xchg
loop
jmp
xchg
inc
sbb
push
sbbb
imulb
jns
inc
push
call
faddl
hlt
adc
mov
dec
filds
outsl
pop
jb
inc
call
fdivr
inc
aam
rclb
xchg
rcrb
aaa
adcb
inc
push
or
hlt
pushf
pop
and
or
stc
sahf
jo
mov
push
mov
mov
push
push
add
hlt
jb
dec
ret
jp
icebp
stos
loopne
add
stos
sub
push
cs
enter
mov
adc
mov
mov
loope
shrb
jmp
jecxz
add
orb
inc
jns
push
repz
into
setge
fcoml
cli
cli
or
and
xchg
bound
mov
jge
in
mov
sbb
xchg
mov
lahf
lods
and
inc
mov
and
lcall
pop
cmp
out
adc
pushf
push
rcrl
scas
mov
montmul
cmpsb
shll
push
aad
leave
popf
add
xchg
lods
pop
in
mov
push
pop
sub
inc
mov
sub
mov
ss
and
stc
push
inc
add
xorb
mov
std
push
clc
xor
or
in
dec
inc
ds
fldl
jecxz
add
fxch
popa
sub
enter
push
mov
jns
insb
movsb
lods
xchg
cmp
lods
lock
push
push
leave
jae
jnp
movzwl
dec
nop
mov
mov
movsl
out
add
ja
mov
mov
push
cmpsl
rcr
sub
add
jo
iret
sahf
sahf
pushf
sub
mov
pusha
cmp
mov
push
inc
test
out
jnp
xchg
scas
enter
cwtl
sar
adc
mov
cld
mov
dec
mov
roll
pop
cmpsl
and
insl
movsl
pop
inc
mov
dec
add
les
je
sub
subl
push
mov
outsb
stc
dec
mov
sub
es
icebp
test
push
aam
jp
adc
std
push
insl
mov
xor
ds
sbb
push
jecxz
lea
das
cmp
pop
cli
xchg
outsl
dec
mov
cmc
mov
cld
xchg
fwait
cmp
mov
and
jecxz
ret
out
push
cs
jnp
aas
pushf
mov
mov
mov
push
mov
cmp
psubsb
mov
test
test
push
adc
mov
push
pop
lock
outsb
stc
sbb
xchg
add
sti
iret
fildll
jmp
pop
dec
mov
icebp
in
dec
cmpsl
mov
mov
dec
imul
add
fisubs
inc
movsl
arpl
arpl
adc
xchg
out
iret
test
inc
xlat
outsl
ret
leave
ljmp
subl
pop
ss
adc
jne
leave
ss
dec
mov
insl
outsb
mov
fstpt
pop
and
sub
test
inc
adcl
fsubrs
repz
lcall
out
sbb
cmp
fcmovnb
pushf
bnd
fwait
adc
andb
lret
pushf
shrb
lock
negl
mov
mov
enter
imul
inc
test
emms
adc
dec
out
xchg
cs
mov
cmc
cli
out
cltd
jl
cmpsl
xor
mulb
dec
popf
nop
ret
addl
cli
lret
cwtl
cmp
test
into
fcom
and
js
or
xchg
inc
imul
dec
mov
enter
mov
mov
movsl
dec
mul
lret
idiv
xchg
jge
pop
sti
ja
cmpsb
test
movsl
mov
jns
xchg
test
fcompl
add
add
and
fsubl
sbb
in
mov
idiv
ror
inc
pop
mov
pop
leave
leave
mov
inc
and
cmpsl
icebp
sarl
data16
jl
mov
xchg
mov
pusha
notb
adc
adc
in
jmp
and
push
pop
imull
loop
push
xor
inc
fnstcw
cmp
inc
mov
inc
cwtl
push
fwait
xchg
mov
mov
fnstenvs
push
pop
lods
sbb
push
movsl
jbe
mov
out
mov
inc
mov
cltd
adc
sbb
xor
or
sub
and
out
dec
xor
inc
in
rcrb
jl
xchg
stos
xor
pop
push
add
mov
or
mov
shlb
int3
in
gs
xor
xchg
repnz
sbb
ror
outsb
andl
xchg
jg
sbbb
mov
loopne
in
shll
or
xor
fidivrs
aaa
inc
cs
cmc
push
mov
mov
sahf
movsb
shl
jb
ret
sub
ret
pop
es
cmpsb
xor
and
sbb
add
popa
adc
lea
call
aas
addb
or
cmp
pop
loope
add
add
push
cmc
aad
cltd
loop
hlt
mov
adc
inc
inc
and
jle
test
cmpsl
idivl
jmp
fwait
test
pop
cmpsl
add
jns
inc
push
mov
jns
imul
sbb
mov
gs
dec
pop
jecxz
mov
repz
mov
jb
lcall
int3
pop
movsl
aaa
mov
test
xor
dec
or
clc
cli
mov
lods
and
sar
shrb
lds
testb
push
pop
jecxz
loopne
mov
inc
rolb
lods
add
addb
mov
mov
cmp
fadds
mov
sbb
loope
lea
jl
sahf
rclb
es
nop
out
out
in
and
in
xchg
rcr
sbb
test
dec
dec
mov
or
xlat
repnz
lods
out
pop
add
setb
out
jg
outsl
repz
fwait
outsb
xorl
xor
cld
fnstenv
sarl
mov
pop
sti
cs
mov
orb
sbb
outsl
jl
push
push
push
lock
mov
mov
stc
mov
add
push
fadd
scas
dec
cld
je
ficomps
aad
mov
out
jne
push
fstl
inc
push
lret
in
mov
int
push
or
mov
mov
xchg
pop
jmp
and
imul
jo
xor
imull
data16
push
popf
adc
mov
fistps
ja
pop
adc
adc
push
stc
jnp
sti
es
test
movsb
lods
jecxz
adc
jp
jbe
fbstp
inc
scas
or
xchg
xor
inc
jo
or
pop
or
and
mov
popf
xor
sbb
push
movsl
jnp
pop
loop
fdivrp
les
sbb
cmp
mov
loopne
mov
xchg
imul
movsl
pusha
xor
daa
xor
pop
jae
mov
mov
jmp
roll
popa
add
orl
xchg
push
inc
xor
enter
loop
in
stc
fldcw
nop
dec
jns
sbb
ja
dec
jno
push
or
roll
sub
add
and
push
pop
push
push
cmpsb
adc
repnz
pop
mov
mov
mov
lock
shl
dec
shll
cmp
dec
mov
jl
inc
mov
fs
icebp
jbe
sbb
nop
jns
ret
out
loope
jno
and
out
scas
addr16
dec
inc
xchg
es
sub
dec
mov
outsl
jno
sbb
stc
inc
imul
push
dec
imul
adc
and
cmp
add
add
aaa
subl
mov
mov
xchg
repnz
inc
test
call
outsl
aas
pop
jp
aam
enter
cmp
cmp
ss
add
or
sbb
stos
inc
pop
mov
loop
sbbl
mov
in
push
movsb
repnz
cmp
icebp
in
in
pop
jno
loope
pusha
fdivp
adc
mov
sarb
push
jb
cmp
insl
fidivrl
jo
fistl
shl
das
ret
push
and
lcall
or
insb
pushf
xchg
sub
sbbb
jns
mov
nop
test
lret
sarb
dec
push
push
das
inc
aad
ror
inc
mov
jae
mov
jae
xor
data16
popf
bound
outsl
in
xchg
cmpsb
inc
mov
sarl
push
mov
insb
aam
push
ret
or
lret
sub
shlb
sahf
std
rcll
lcall
or
dec
mov
cmp
sbb
fnstsw
mov
push
lock
pop
inc
cmp
icebp
inc
daa
enter
add
es
adc
jae
mov
adc
subl
lods
dec
xchg
popa
jecxz
ljmp
push
fidivs
cmp
inc
or
loop
jge
and
and
xchg
not
mov
adc
dec
cmp
outsl
dec
xchg
cmc
mov
xchg
cwtl
scas
stc
negb
lea
and
roll
sub
xor
add
lret
xlat
pop
sub
mov
movsb
push
cltd
pusha
aam
pop
adc
xor
shll
pop
push
pop
out
add
int
cmpsb
mov
sub
sbb
jnp
adc
daa
and
dec
pop
lods
sub
xor
outsb
xor
or
fnstcw
jecxz
shlb
lret
hlt
xchg
ljmp
ret
sbb
xchg
cmp
pusha
push
jno
and
inc
xor
mov
lret
aaa
jo
mov
imul
fcompl
mov
loop
or
icebp
mov
fildl
pop
xchg
repnz
pop
xor
es
stc
xor
inc
scas
sbb
jge
cli
lret
test
add
mov
push
subl
push
int
cmp
mov
sti
andb
mov
push
and
push
add
mov
add
lods
cmp
mov
insl
add
roll
test
jae
add
lea
into
mov
sub
fstpt
pop
outsb
cltd
push
cmpsb
mov
loopne
mov
test
dec
adc
pusha
or
hlt
mov
xchg
and
xlat
scas
pop
andnps
jl
arpl
rclb
mov
xor
dec
or
push
enter
scas
adc
sti
cld
arpl
je
into
inc
shll
cmp
in
dec
or
jp
adc
cmp
mov
data16
xor
inc
cltd
mov
add
pavgb
or
push
adcl
pusha
imul
imul
int3
je
out
orl
repz
cmp
aas
jb
jmp
arpl
pusha
adc
dec
std
leave
push
into
or
xchg
shll
pop
mov
sahf
mov
mov
fmulp
test
inc
gs
add
fcoms
and
popa
xchg
sub
fdivr
xor
in
fldl
bound
mov
dec
je
lods
rcl
sbb
jl
or
xorl
mov
mov
mov
imul
xchg
outsl
lds
icebp
sbb
fildll
jp
rcrb
fdivrl
lds
repz
rolb
add
adc
add
xchg
rorl
jp
xchg
lret
push
stc
xchg
addb
lcall
xor
dec
jmp
and
int
mov
lret
shll
lret
popf
or
mov
leave
orb
shl
add
push
arpl
in
mov
dec
cs
insb
out
xchg
ja
adc
fmull
push
push
cs
popf
and
xor
scas
xor
aam
or
sub
mov
mov
dec
popf
or
jp,pn
sub
push
in
sub
ljmp
stos
push
and
cmp
dec
dec
cmp
mov
mov
add
jo
sbb
in
inc
jge
adc
inc
sub
dec
dec
movsl
cltd
xchg
in
jg
push
mov
or
mov
div
pop
jle
jb
jne
jp
xchg
and
shrl
xor
add
jb
cmp
ret
jno
or
outsb
and
mov
sbb
popf
ret
or
cmp
adc
mov
fisubrs
cmp
pop
mov
pop
cmp
test
or
rcll
mov
cltd
add
jecxz
test
cmp
jae
aas
jno
xlat
mov
dec
jb
stos
jg
jle
xchg
adcb
push
jle
adc
aas
and
pop
add
or
mov
outsb
jp
cmp
push
mov
insl
gs
out
outsl
add
adc
cmp
jp
adcb
ror
out
xchg
nop
jo
hlt
mov
lods
inc
fwait
jg
inc
or
in
inc
jne
push
je
lcall
inc
cmpsb
in
je
pop
pop
push
fadds
inc
out
pop
cmpsb
adc
inc
pop
wbinvd
je
add
cmp
xor
cmp
testb
xor
xchg
and
scas
insb
out
rolb
orl
lahf
in
cmp
cmp
xorb
mov
sub
gs
push
dec
pop
notb
insb
adc
pushf
mov
jne
xchg
mov
imul
pushf
jne
shlb
push
shrl
popf
mov
rolb
jp
fmull
jmp
mov
daa
sti
in
daa
xchg
idivl
sbb
jno
arpl
inc
movsl
in
roll
loopne
lea
mov
mov
xor
andl
adc
cltd
arpl
add
mul
mov
nop
or
ret
sbbb
dec
add
in
xchg
push
jnp
dec
mov
cs
adc
in
xchg
dec
in
sub
mov
cmp
push
mov
clc
push
and
adc
push
dec
rorb
gs
ret
xchg
adcb
xchg
popa
int
push
or
jns
imul
movsb
mov
enter
push
ror
adc
mov
repz
rorb
addr16
cli
pop
cmp
mov
add
jmp
divl
cmp
loopne
mov
pop
mov
push
adc
insb
or
mov
push
sub
mov
mov
test
nop
mov
push
stos
insb
inc
pop
push
push
adc
jmp
shl
pop
sbb
mov
sub
loope
and
inc
sbb
movsb
cmp
mov
mov
rcrl
push
shrl
andl
setnp
nop
jnp
add
mov
daa
sub
cmp
shll
cmp
lret
sbb
ret
jmp
xchg
or
test
adc
and
adc
pop
xchg
jg
in
lea
movsl
xor
cs
mov
lret
xlat
mov
lret
scas
in
orl
test
lods
pop
xlat
js
ret
adc
call
dec
jmp
mov
or
cmp
pop
insb
test
out
dec
mov
push
out
notl
cmpb
add
stos
or
cpuid
ss
jnp
bound
inc
pop
gs
mov
push
jbe
aad
sub
pop
adc
and
ljmp
lret
dec
cs
xchg
jb
mov
sub
stos
adc
lcall
mov
imul
xchg
div
mov
jae
lret
sbb
inc
sub
pop
jmp
mov
mov
push
sbb
pop
mov
out
orl
mov
xchg
jnp
push
jl
call
dec
push
test
enter
dec
mov
dec
andb
adc
pushf
cmp
xchg
mov
cmp
cmp
fistpll
call
inc
and
repz
js
jno
jl
add
push
in
push
jnp
cmpl
dec
insb
dec
mov
jbe
mov
jo
xorb
xchg
dec
cltd
mov
xchg
cltd
lods
jb
xchg
sub
fwait
fwait
js
mov
sbb
mov
lcall
jns
data16
mov
mov
and
mov
addl
sti
out
dec
or
cmp
dec
scas
fimull
jmp
dec
cs
xchg
pop
pop
sub
xchg
jle
ss
jbe
xor
mov
add
adc
cld
xor
es
cltd
adc
cmpsl
mov
jmp
push
add
into
lret
inc
mov
add
stos
in
mov
iret
mov
js
outsb
jae
xchg
clc
xchg
or
mov
lods
add
insl
cmp
out
scas
jmp
out
push
dec
cpuid
sub
mov
aas
cmp
js
cld
rcrl
sub
push
adc
repnz
in
das
ret
sbb
mov
fiaddl
xor
mov
stos
and
icebp
jns
sub
mov
incb
or
and
pop
cmp
mov
xor
stos
out
pusha
mov
pop
jp
push
aam
loop
dec
pop
xor
leave
aas
cld
out
decl
in
mov
or
ret
scas
jge
arpl
or
sbb
shr
mov
xchg
xchg
lret
daa
dec
lock
add
prefetchwt1
pop
xor
sbb
jb
hlt
xchg
fimuls
inc
xor
sbb
aas
jo
pop
comiss
or
jmp
out
pop
repz
mov
into
enter
pop
xor
inc
popf
jnp
pop
mov
data16
sub
pop
sbb
push
push
sarb
rclb
and
cmp
sbb
mov
xchg
sbb
xchg
cmp
in
ret
or
test
loopne
lahf
test
fsubr
icebp
mov
fwait
jae
insb
jno
inc
push
outsb
cmpl
insl
xchg
lds
enter
add
xchg
inc
mov
mov
outsb
testl
or
adc
lcall
cltd
adc
mov
xor
pop
fsubr
stos
xor
aaa
pusha
push
mov
repz
out
leave
test
cmp
bound
sarb
push
push
daa
data16
or
add
pop
xlat
mov
leave
dec
mov
push
sbb
popf
insl
push
bound
or
and
movsb
and
sub
sbb
mov
fldenv
adc
adc
and
movsl
jg
ret
push
mov
mov
jno
sbb
scas
fwait
push
int3
xor
cmp
dec
add
jl
popa
xor
xchg
insb
jnp
out
in
les
or
mov
dec
loop
jge
scas
mov
sub
dec
ja
jmp
push
mov
dec
dec
addr16
jmp
int3
addb
push
pop
fld
dec
mov
test
test
sub
pop
cmpsb
jp
inc
movsb
push
push
xor
decb
sbb
xor
into
push
addl
mov
lds
fldcw
lahf
cld
gs
mov
imul
ret
jne
in
ficompl
jbe
xor
jno
mov
sahf
and
xchg
xor
loop
loope
sub
hlt
repz
mov
stos
sbb
cmp
loope
outsl
mov
push
fisubrs
dec
loopne
mov
mov
and
data16
les
push
push
popf
adc
rcrl
mov
sub
sbb
loope
dec
cmp
dec
movsb
out
inc
inc
mov
das
mov
push
test
cld
iret
inc
in
jbe
lahf
and
cmp
mov
jno
sti
mov
xchg
jge,pt
xchg
imul
ret
push
pop
loopne
xchg
push
imul
pop
dec
sbbb
sahf
std
sbb
lgdtl
pop
xor
xchg
mov
int3
nop
daa
fsubp
aam
sub
push
sbb
pop
les
pushf
sbb
jno
sahf
adc
cmp
lds
dec
pop
pop
inc
nop
enter
jnp
mov
xor
jo
imul
inc
sbb
in
xorl
sub
pop
sbb
ds
sbb
mov
addr16
bound
add
imul
cmp
inc
and
cmp
jns
mov
or
add
pop
lahf
adc
fisttps
loopne
cmp
dec
lods
inc
push
dec
add
adc
lds
leave
cmp
mov
lea
jnp
sbb
cli
cmp
jno
mov
outsl
mov
sbb
mov
xor
call
adc
lods
jecxz
xor
nop
inc
cltd
push
fnstenv
fdivl
popl
pop
lret
gs
mov
inc
stos
test
in
adc
mov
mov
or
fisubl
dec
cmp
adc
nop
test
cmp
stc
rcr
and
das
mov
lcall
dec
push
cwtl
hlt
bound
adc
out
inc
dec
test
inc
add
sti
inc
test
fucom
ficoms
pop
movw
adc
push
jl
aad
imul
loopne
stc
cld
fnstcw
jns
std
or
and
cmp
in
js
jno
cmp
aad
daa
mov
pop
add
mov
arpl
inc
jecxz
pop
add
mov
fwait
sbb
sbb
inc
inc
fdivs
xchg
int
aaa
movb
jecxz
cmp
adc
pop
xchg
arpl
in
adc
test
xchg
aaa
ss
int3
lcall
jnp
movsb
in
mov
pop
bound
adc
arpl
jp
out
loopne
dec
dec
imul
fcoml
jno
fstps
pop
mov
cmp
sub
adc
inc
cmp
and
rclb
mov
pop
sub
add
pop
fs
and
out
shlb
push
movsl
fs
sbb
jae
mov
jbe
or
lret
mov
sub
cwtl
cmp
push
sbb
and
incb
loopne
or
cs
xchg
add
sbb
lods
xchg
orb
in
mov
jmp
add
ja
pop
arpl
xchg
xor
dec
out
fistpll
push
stos
mov
xchg
fsubr
loopne
mov
mov
aam
icebp
je
pop
xor
clc
or
xor
add
xor
in
mov
fcoms
test
in
mov
out
jg
or
inc
stos
jae
jg
insb
popf
mov
in
mov
pop
push
cld
aas
fcmovne
imul
xchg
push
popf
dec
mov
fldt
test
pop
lods
hlt
sub
adc
push
sub
imul
popa
int
cmp
and
dec
xor
or
mov
add
gs
mov
mov
cpuid
xor
cmc
mov
es
lods
and
sbb
pop
inc
jl,pt
and
outsb
in
push
sbb
add
enter
xor
inc
xchg
jl
pop
mov
shrb
xor
loope
mov
addb
jmp
lret
cmpsl
hlt
inc
int3
and
pop
inc
dec
pop
mov
mov
cs
pop
pusha
xor
mov
or
pop
je
out
das
pop
sti
mov
lods
xchg
ficomps
xacquire
aad
jecxz
push
mov
lret
jmp
pusha
js
xchg
xchg
cs
or
sti
movb
cmp
call
and
das
xor
and
dec
cld
jno
xchg
inc
rolb
cmpsb
xchg
movsl
pop
and
sbb
movsb
stos
push
js
add
cmp
outsb
cmp
or
or
push
nop
arpl
rcrl
je
cmpsl
nop
add
xor
dec
mov
stc
or
test
rcr
mov
andl
shll
iret
jmp
test
mov
sub
insb
test
and
fisubs
pop
jp
mov
xor
lods
add
test
cld
mov
iret
pop
jne
mov
mov
fwait
push
into
mov
addr16
shll
adc
scas
clc
enter
testb
mov
stos
mov
and
sub
daa
mov
mov
cs
repz
cmp
xchg
mov
call
add
sti
cmp
scas
ljmp
iret
jne
pop
subl
sub
popa
mov
cs
fisubs
fstpt
lcall
add
xchg
push
and
xor
xchg
fcmovnu
repnz
and
adcl
cmpsl
adc
xchg
fldcw
sysenter
push
mov
movb
lea
xchg
fcmovnbe
sbb
aam
xchg
xor
aad
inc
cld
pop
into
incl
xor
aas
pop
mov
mov
lods
cmp
or
dec
rep
push
jp
xlat
sarl
mov
jle
daa
add
repz
mov
sbb
leave
adc
jns
call
and
or
scas
fmuls
sbb
out
pop
xchg
adc
icebp
jmp
out
lea
hlt
adc
cli
cmp
jge
or
lcall
sub
lret
cmp
push
cmp
pop
insl
push
add
mov
xor
mov
or
mov
sub
pop
push
cmp
sub
and
sub
pop
xor
push
sti
jno
adc
jo
mov
hlt
enter
cli
cwtl
push
add
stc
neg
pop
cmp
mov
std
stos
adc
mov
repnz
push
in
into
aas
cli
lahf
push
xchg
adc
je
gs
aad
and
adc
sub
insl
adc
movsl
adc
scas
leave
mov
jle
pmulhuw
sahf
sbb
pop
mov
mov
cli
mov
mov
inc
sarb
push
mov
outsl
inc
and
lahf
inc
push
dec
cmp
mov
nop
mov
in
pop
sahf
sbb
in
out
cmp
mov
and
inc
fs
aaa
or
outsl
xchg
cmp
bound
and
mov
je
dec
inc
mov
inc
call
fisubrl
je
cmp
test
add
scas
inc
jne
je
fnsave
sbb
mov
lods
loope
add
sahf
mov
or
pop
ljmp
arpl
cmp
fwait
mov
dec
push
dec
lahf
sbb
push
or
sub
jnp
mov
or
inc
inc
jl
cmp
inc
push
cmp
jmp
mov
xchg
insb
bound
ds
inc
mov
shlb
stos
push
sarb
out
pop
out
push
pop
jmp
aam
shr
pop
add
push
mov
adc
sub
scas
jp
in
dec
adc
sub
and
stc
pop
push
ret
sbb
sbb
popf
add
xchg
daa
add
push
and
pop
mov
mov
and
mov
jno
movsb
sbb
inc
jae
movsb
imull
push
imul
xchg
push
movsb
adc
loopne
fistps
lods
int3
sbb
dec
jl
mov
lock
add
int
dec
cmp
movsl
xor
sub
out
push
pop
rorl
jecxz
add
mov
mov
inc
fsubs
push
std
fcompl
cmp
loop
popa
sbb
adc
xchg
dec
mov
jns
popa
lods
ljmp
lahf
push
xchg
lahf
cmc
aam
int3
cmp
mov
insb
xor
mov
push
or
pop
pop
pusha
inc
aas
rolb
pop
adc
cmp
xchg
hlt
addr16
sbb
jb
dec
and
jbe
pop
ja
cli
and
inc
mov
call
cmc
sbb
xor
and
jb
dec
dec
fimull
cmc
and
push
and
lahf
mov
loop
xor
and
lahf
fsubp
sarl
scas
icebp
jne
adc
iret
scas
int3
pop
stos
mov
cmp
dec
clc
pop
fdivl
adc
inc
insl
cmpl
or
push
adc
and
pop
dec
push
test
mov
xchg
mov
fsubl
popa
sub
cmpsb
cmc
negb
mov
jle
and
xchg
mov
push
notb
mov
push
add
test
pop
xchg
popa
cmp
fcomps
mov
mov
lret
arpl
pop
shlb
adc
or
in
pushf
scas
data16
cmc
xchg
cltd
sbb
mov
xchg
sbb
sbb
xchg
mov
hlt
lock
xor
lock
or
mov
sti
jns
sbb
or
xchg
popa
mov
rcrl
cmp
pop
cmc
and
push
das
out
inc
cmp
movsl
cli
leave
xchg
dec
lcall
push
aad
and
sarb
movsb
pop
lahf
dec
adc
push
insl
hlt
gs
mov
cld
and
fmull
xchg
adc
iret
sbb
cmc
dec
aas
add
dec
cmp
xor
ret
xchg
cmp
xor
fs
loope
mov
cli
xchg
sub
aaa
mov
push
add
and
xchg
pop
mov
ja
dec
jns
xchg
or
scas
and
pop
cmpsl
pcmpeqw
out
sarl
inc
jne
xor
xchg
in
pushf
add
lds
loopne
cmc
sbb
pop
imul
out
sub
or
push
adc
jne
cwtl
call
ja
add
push
xor
icebp
cli
cmp
cld
imul
cmpsb
sti
divb
or
lea
popf
fisubrs
out
mull
ljmp
into
or
jb
inc
and
xor
test
icebp
dec
sar
sub
sbb
lds
into
mov
test
lret
mov
sarl
sti
xchg
call
pushf
and
and
or
fidivs
pop
outsb
or
inc
and
aam
fs
inc
jne
dec
sbb
push
sub
fisubrs
jle
jbe
insb
adc
sbb
rcr
cli
popa
hlt
and
aad
cmp
xor
leave
in
pushf
je
adc
lret
in
and
test
cmc
push
fwait
hlt
lock
add
scas
sub
insl
push
push
and
jg
xor
mov
lahf
add
push
mov
mov
xchg
rcll
addb
dec
push
jnp
mov
push
cmpsl
ficoms
ret
cli
sub
and
icebp
cmp
insb
xchg
ja
dec
pop
les
faddp
dec
lods
adc
mov
jne
push
xchg
scas
cs
jae
jge
push
adc
sbb
ds
orb
out
shl
push
mov
pop
xchg
stos
add
shl
jmp
icebp
xchg
xchg
push
andl
mov
insb
jmp
cmp
imul
call
mov
scas
or
lock
popa
ret
mov
addl
ret
lds
fwait
add
addr16
fdivr
push
ss
xchg
js
in
shl
adc
dec
cmp
out
stc
popf
xor
icebp
inc
jne
lahf
sahf
sub
sbb
sub
stc
mov
push
idiv
out
or
mov
lahf
lods
aaa
xchg
fbld
sub
or
mov
fmul
dec
std
test
pop
shll
mov
movsb
inc
mov
int
ja
add
xor
xchg
je
fcoml
cltd
stc
xchg
lcall
mov
cmpb
popf
and
jns
nop
outsl
leave
out
sahf
xchg
mov
loop
lods
popa
push
push
pusha
lret
cwtl
mov
shrb
shl
jae
inc
arpl
mov
mov
xchg
movsl
outsb
jmp
jmp
or
inc
adc
xor
add
bound
inc
int
sbb
fsubl
sbb
sub
sub
aam
mov
mov
aam
push
and
dec
lock
add
push
inc
sub
push
inc
xor
add
pop
popf
test
jle
js
mov
aaa
and
in
jne
ja
xor
or
stc
cld
pop
push
jg
add
movsl
cmp
inc
add
push
or
sub
push
fiadds
cwtl
add
jae
fnstenv
loopne
add
mov
mov
push
aad
mov
int
cmp
je
mov
dec
mov
pusha
jl
insb
sbb
inc
fldl
aaa
insb
pop
lock
pop
adc
xchg
push
pop
push
int3
sub
ljmp
dec
outsl
test
mov
adc
fldt
jne
sbb
aaa
mov
icebp
out
test
loope
xchg
cmpsl
cmp
test
popa
popf
scas
sbb
xor
pop
add
lds
or
movntps
jp
pushf
popf
add
insl
shl
cmp
pop
push
mov
cmc
add
mov
and
in
test
mov
cld
xchg
and
cld
fcomps
sti
movsl
and
mov
adc
nop
mov
sti
xchg
sub
jns
jbe
mov
jmp
cli
cmp
mov
jge
stos
icebp
les
inc
mov
sbbb
out
sub
dec
sub
scas
or
in
pop
mov
mov
adc
xchg
out
testb
and
out
sbb
stos
mov
push
push
push
dec
fsubrs
cmp
jns
pushf
test
mov
xchg
push
bound
cwtl
stc
adc
shlb
sub
pushf
sbb
inc
pop
cmp
notb
cmpsl
xchg
pop
mov
jle
dec
mov
jbe
lods
push
shlb
push
ret
ljmp
mov
frstor
sbb
dec
add
mov
mov
mov
jmp
jbe
adc
sub
fldcw
sub
aas
or
cmp
push
test
lahf
in
testb
outsl
scas
loope
dec
pop
lds
and
shrb
pop
sub
scas
cmp
fsubr
dec
pushf
ja
fdivp
insb
cmpsl
ffreep
xor
pop
lret
daa
or
pop
push
lret
addr16
cs
nop
sbb
popf
sub
mov
mov
lods
push
pop
mov
or
jo
inc
dec
jne
aad
xor
or
nop
sub
sbb
xchg
pusha
sbb
cmp
movsb
mov
out
dec
xchg
ljmp
js
dec
repnz
test
sbb
cwtl
mov
pop
xchg
mov
aas
or
jl
into
pop
mov
xchg
inc
cmpb
xor
inc
mov
or
test
xlat
mov
or
cmpsb
pushf
jp
dec
pcmpeqw
sbb
iret
and
decl
lret
aam
hlt
addr16
jne
decb
mov
mull
sbb
add
push
push
xchg
sub
push
xchg
cmp
jns
aad
call
inc
aaa
lret
or
xchg
popa
mov
mov
aad
and
sbb
pusha
das
sub
rcrl
clc
xor
fldl
mov
shr
lock
adc
cld
popf
inc
xor
lcall
popf
jmp
lock
jmp
call
enter
loop
sub
lahf
fsubl
push
and
mov
xchg
test
mov
das
mov
fnstcw
cmpsb
fs
sahf
lcall
call
push
es
sub
movsb
repz
cmpsl
push
pop
push
jae
adc
inc
jmp
xor
adc
outsb
cmp
jmp
push
aas
adc
outsb
jno
pop
jp
gs
sub
int
inc
pop
scas
outsb
out
stos
outsb
push
pop
movsb
cs
ret
pushf
or
shlb
push
out
add
mov
cld
cld
push
xchg
leave
jb
jb
pop
movsb
and
int
iret
stos
loop
ss
rorl
inc
mov
cmp
and
pop
fimuls
dec
xor
xor
pop
cld
inc
xor
cwtl
inc
stc
lret
sbb
jne
lods
clc
in
inc
mov
out
in
outsl
or
sub
insl
xchg
adc
lods
push
dec
in
pop
iret
sbb
pop
testb
enter
lcall
fs
add
mov
into
int3
pop
sbb
enter
cmp
xchg
cmpsl
add
mov
sbb
jg
push
pusha
imul
test
mov
test
repnz
jo
add
mov
and
cmpl
xchg
lea
inc
and
out
push
adc
pop
mov
pop
sub
test
mov
mov
pusha
insb
mov
sub
shr
fimuls
jecxz
les
movsb
dec
and
in
addl
std
push
in
mov
cmp
in
pop
mov
or
cs
xorb
xor
mov
inc
jno
mov
lahf
pop
arpl
xor
ss
sub
das
andl
add
adc
loopne
iret
add
fs
rol
scas
lahf
shrl
icebp
repz
int3
sub
je
int
pop
dec
sbb
sbb
andl
push
call
movsb
aas
mov
xchg
pop
and
pusha
or
inc
push
xchg
pop
pop
fsub
sub
adc
dec
lcall
jmp
rolb
out
mov
cmp
out
jb
sti
out
lcall
in
push
sbb
fldl
mov
mov
clc
ja
ret
imul
mov
mov
mov
mov
inc
push
xor
inc
lods
imul
push
sti
cmp
aas
cmp
mov
and
repnz
fwait
xchg
lahf
sub
jns
decl
add
aas
sub
inc
shll
mov
or
fiaddl
lea
in
pop
push
sbb
jbe
push
fs
iret
rorl
minps
pop
pop
dec
lods
pop
xchg
xchg
scas
test
out
sbb
xorl
mov
out
clc
cmpsl
xor
push
pop
es
cmp
pop
out
pop
fistl
scas
inc
test
stos
xor
dec
mov
cltd
jl
mov
adc
out
mov
add
leave
stc
xor
xor
loop
adc
cmp
cmpsb
fyl2x
jne
lcall
bound
data16
scas
and
inc
sub
push
loop
push
test
xor
inc
in
jle
stc
stos
stc
jp
dec
mov
mov
sbb
jnp
aam
add
imul
lea
sbb
push
imul
pop
sbb
inc
sbb
dec
int3
test
pop
lods
lea
push
mov
outsb
int
dec
sbb
and
jp
xchg
adc
mov
in
sub
mov
in
rcrl
adc
pop
loopne
test
pop
sub
xchg
jb
pop
ja
adc
jle
repz
out
lods
rcrl
jge
sbb
xchg
cmp
fisubrs
fistps
xor
cmp
mov
adc
pop
push
sub
cltd
xchg
push
xchg
push
scas
cmp
sbb
adc
enter
dec
out
xchg
dec
mov
jae
movsb
mov
push
lods
add
lret
rol
cmpb
insl
les
xor
stc
mov
fstpl
cmp
out
insb
mov
jbe
pop
xor
push
pop
jbe
addr16
mov
mov
sub
dec
lahf
pop
popf
push
int
sbb
or
pushf
sub
cltd
fiadds
mov
xchg
xchg
add
sub
jge
int
lcall
xchg
push
adc
mov
push
popa
xchg
loopne
push
mov
sbb
jbe
sbb
or
sbbb
bound
push
dec
jecxz
fisubl
mov
outsl
outsb
ret
in
cltd
cmpsb
lcall
fwait
in
sarl
mov
dec
inc
fs
mov
dec
cli
pop
fldl
cmp
test
or
mov
aad
call
jne
xchg
out
fbld
mov
lods
xchg
push
insl
xchg
ds
insb
test
in
jb
sub
mov
or
inc
sahf
aas
mov
popa
loope
nop
sbb
outsb
inc
mov
cmpsb
add
xchg
xor
pop
xchg
adc
fsts
xchg
imul
mov
dec
sarb
xor
std
push
push
loopne
flds
cwtl
adcb
inc
or
mov
out
add
dec
pop
add
test
mov
cmp
pop
aam
xor
xor
xor
pop
test
jge
insb
insb
adc
dec
mov
ja
adc
jb,pn
std
sbb
jmp
push
push
or
mov
scas
push
jae
dec
mov
xlat
sbb
js
xchg
aas
inc
mov
in
cmp
push
pushf
push
insl
push
and
fidivl
cli
inc
mov
or
out
in
fadds
pop
and
cmpsb
sbb
sub
insl
or
js
inc
pop
cmpsl
sub
nop
addr16
sub
push
cmpsl
push
sub
movsl
mov
movsl
pop
mov
jae
mov
push
stos
push
pusha
insb
lret
xchg
mov
and
fcmovb
in
xor
cwtl
out
cmpsb
fs
shl
pushf
mov
jae
sub
out
movb
sub
lret
loope
add
or
pop
shll
daa
cmp
xor
or
xchg
jbe
shlb
pop
pop
inc
loope
mov
gs
adc
pop
pop
dec
sub
mov
mov
add
cmp
scas
xorb
clc
push
orb
lock
test
xchg
sub
jg
imull
dec
xor
jne
jmp
ffreep
out
in
test
xchg
lcall
movsl
fs
jecxz
clc
mov
jmp
bound
loop
sbb
add
in
push
fisttpll
jl
push
mov
push
sbb
ss
in
sub
mov
pop
xchg
out
dec
cli
adc
mov
enter
pop
mov
mov
outsl
or
push
lods
popf
dec
push
xor
insb
mov
mov
push
mov
cmp
mov
clc
addr16
lahf
or
sahf
mov
sbb
xchg
or
fisttps
dec
adc
icebp
rorb
in
and
enter
outsb
inc
mov
lea
mov
jb
std
loope
mov
in
dec
dec
in
pop
fwait
mov
cltd
pop
sahf
xchg
add
pop
int3
adc
fdivrl
sbb
lods
xchg
xchg
in
out
fwait
pop
sub
sub
xchg
test
push
cltd
stos
sub
xor
pop
and
jecxz
je
fcom
in
push
push
in
xlat
xor
jb
or
mov
inc
fdivs
pop
mov
gs
jae
dec
xchg
daa
xor
test
jno
sub
lret
cwtl
sahf
lock
cltd
add
lea
add
cmp
popl
lahf
xlat
xor
mov
repz
cli
push
mov
xchg
fidivrl
adc
add
bound
rcll
sub
jb
mov
daa
sti
sub
add
mov
lock
aad
sbb
adcl
adc
sbb
hlt
lods
ljmp
test
out
jo
pop
cltd
xor
movsb
add
jmp
adc
sub
mov
ror
loope
je,pn
cltd
mov
cmpsl
lods
add
or
movsl
fst
xor
int3
int3
je
dec
mov
imul
cmp
lret
jae
inc
sqrtps
test
pop
add
mov
insb
pop
dec
les
xor
inc
outsl
jae
jecxz
ds
pop
pop
enter
out
jo
lahf
sahf
mov
sub
out
jle
cld
fstpt
push
movsb
mov
jecxz
xchg
ljmp
mov
movsb
cmpl
lds
repz
add
pop
jae
jecxz
inc
sub
mulb
loope
jb
jbe
adc
add
and
pop
pop
pushf
adc
rcrl
mov
mov
xor
out
daa
mov
jo
add
aaa
and
orl
clc
int3
ficoml
xor
xor
sub
xchg
mov
int3
rcrb
jae
jbe
lods
pop
imul
sbb
int3
test
cmpl
out
or
das
lret
push
jo
inc
cli
push
or
xor
pop
gs
pop
ljmp
xor
inc
lods
xor
cltd
daa
inc
xchg
pushf
dec
jbe
mov
mov
inc
xor
push
adc
in
mov
push
les
idivl
lret
addr16
mov
or
or
movsbl
cmp
adc
fstl
in
sbb
movsl
rcl
inc
ret
push
aaa
dec
push
sbb
pushf
pushw
stos
enter
mov
adc
leave
and
xchg
aaa
adc
jg
xor
pop
loope
sbb
mov
push
push
push
pop
stos
fisubs
mov
gs
rcl
adc
sti
shlb
adc
icebp
pop
xchg
stc
mov
cmp
out
dec
sub
addl
cwtl
inc
sahf
pop
lret
bnd
pop
push
les
inc
gs
mov
orb
adc
cwtl
dec
push
mov
adc
or
test
in
sub
test
inc
loop
idivb
je
mov
jnp
adc
pop
rolb
iret
mov
or
aad
lret
jp
push
dec
xchg
jne
cmp
mov
xor
cmpsb
and
cmp
mulb
sar
pop
xchg
pop
imul
test
mov
mov
xor
stc
mov
push
xchg
fwait
xchg
adc
cs
out
les
push
xchg
test
nop
outsb
mov
cmp
fs
mov
xchg
bound
imul
and
add
add
lahf
cmpsl
fcoms
imul
lret
inc
lea
sbb
jmp
jecxz
push
mov
mov
push
sbb
push
outsb
mov
xor
push
outsb
icebp
add
add
dec
insl
pop
fidivs
dec
cmp
or
dec
movsl
mov
mov
xor
cmpsl
movb
cmp
aad
adc
insb
aam
imul
push
movsb
cmp
loopne
test
adc
push
cmpl
icebp
lods
add
or
pop
mov
xor
pop
push
inc
stos
repz
xchg
inc
movsl
aas
or
out
add
push
cs
out
or
pop
shll
pop
ja
test
jno
xchg
inc
dec
dec
push
inc
dec
lahf
es
xor
pop
adc
jnp
jmp
jge
xchg
out
jbe
jecxz
enter
adc
stc
into
mov
pop
or
roll
cmc
sub
adcl
mov
repnz
mov
mov
mov
dec
or
sub
jl
daa
push
mov
jo
mov
and
mov
popf
push
pop
fmull
lcall
adc
mov
into
lret
xlat
sbb
roll
out
cli
loop
mov
xchg
aaa
insl
jno
pop
outsl
sub
jo
lcall
movsb
xchg
icebp
js
lods
sbb
pushf
sub
pusha
xchg
mov
jns
push
les
adc
idivl
pusha
mov
outsb
xor
pop
aas
adc
fidivrs
jo
mov
fsubl
jo
lock
mov
push
imul
pop
int
xor
push
enter
inc
bound
stc
ret
inc
mov
sahf
pop
sub
out
lcall
adc
push
mov
shl
fiadds
sbb
cmp
dec
mov
data16
test
ss
and
inc
rcrb
push
push
stc
sub
or
cmp
inc
xlat
pop
mov
push
pop
inc
frstor
mov
out
jecxz
add
push
mov
jo
sub
jae
dec
and
out
xchg
inc
das
mov
imul
mov
jno
lods
out
cli
dec
jge
inc
xor
sbb
addb
cmp
mov
mov
add
mov
xor
or
fists
mov
jb
inc
add
inc
pop
clc
pop
pop
addr16
mov
in
pushf
repz
pop
loopne
aas
mov
xchg
mov
ss
into
jle
or
adc
push
sbb
jb
test
mov
mov
inc
cmpl
cmp
pushf
jl
pmuludq
rcrl
lea
or
dec
in
cmp
in
pusha
popa
cmp
movsb
push
dec
or
pop
mov
fldt
adc
xchg
fnstsw
mov
add
ds
pop
lods
shr
imul
adc
hlt
stc
mov
pushf
xor
cli
lcall
lea
mov
push
shlb
pushf
or
cli
add
call
mov
sub
loop
pop
bound
aad
leave
and
pop
adc
pop
cmp
adc
or
icebp
or
push
fucomip
out
inc
popa
add
xor
decl
lret
jae
dec
pusha
fwait
xchg
sub
and
inc
fimull
repz
mov
pusha
das
aaa
insb
xchg
sub
jmp
testb
fsubs
adcb
mov
push
leave
xchg
pop
jmp
int
lods
in
aas
jge
std
push
jo
fimull
mov
push
xchg
sub
pushf
mov
fs
sub
lret
adc
data16
jmp
das
xchg
dec
insl
cmp
push
push
shl
mov
and
dec
adc
fiadds
shl
mov
xchg
mov
iret
jb
pop
add
test
test
lret
loop
je
ss
xchg
jbe
rcrl
movsb
fs
mov
insb
lods
pop
mov
mov
jno
cmp
out
insl
jmp
call
outsb
jb
lcall
daa
imul
mov
mov
clc
cmp
imul
shlb
add
adc
daa
int
mov
cmp
addl
les
push
inc
punpckhwd
iret
push
int
fwait
pop
lods
jns
not
insl
dec
fidivrl
add
xchg
call
adc
and
mov
xchg
mov
enter
mov
cmp
inc
test
lret
ficoms
jno
mov
outsl
push
xor
add
cld
add
repnz
movb
dec
adc
movsb
xchg
daa
jle
sbb
enter
ja
scas
lea
dec
inc
cmp
cld
cmc
scas
std
rol
std
adc
dec
mov
repnz
orl
jne
imul
stos
bound
jge
out
jg
jg
cmp
mov
std
xor
loope
das
xchg
shrb
xchg
xchg
js
cli
add
mov
and
sub
xor
lahf
mov
mov
mov
push
push
xor
pop
shll
jge
or
mov
pop
xchg
or
xchg
out
mov
dec
add
or
adc
in
cmc
idiv
jbe
sub
idiv
ss
dec
dec
sbb
iret
xchg
mov
mov
sarb
mov
pop
cs
and
and
push
imul
xchg
inc
mov
cltd
fisttpl
adc
and
or
mov
dec
cs
push
js
add
xchg
pop
sahf
dec
fidivs
pusha
call
ret
add
in
push
subb
lock
and
mov
push
lret
aad
repz
js
popa
leave
lret
xor
mov
es
decl
daa
push
mov
or
mov
orb
pop
leave
movsl
fnstsw
adc
sbb
mov
push
jp
cmpsl
dec
loopne
repz
mov
mov
jbe
insl
fimull
jno
or
push
inc
lcall
push
mov
popa
enter
dec
xor
sti
or
in
dec
lods
js
enter
clc
ret
inc
mov
lret
jmp
test
out
popa
xor
mov
loope
data16
mov
loopne
subb
rorl
repz
sbb
hlt
cmp
pop
lcall
fisttps
inc
xchg
xchg
inc
inc
dec
or
inc
jecxz
xor
imul
fmul
lock
fstpl
cmc
sbb
jnp
jl
loope
mov
sahf
sahf
js
jns
cld
sbb
xor
pop
les
jae
jle
add
jmp
pusha
pop
push
xchg
jnp
cmp
inc
jg
mov
jbe
aaa
or
in
jo
xchg
ja
mov
add
mov
add
mov
mov
jp
adc
dec
mov
cmp
jmp
inc
dec
pop
enter
movsb
loopne
sbb
xchg
fs
xor
inc
xchg
and
jb
out
stos
or
mov
mov
xor
dec
lahf
gs
cmpl
mov
cltd
dec
add
mov
fwait
mov
insl
stos
jl
nop
std
push
xlat
orl
push
adcb
jle
cwtl
mov
in
jb
rcl
hlt
outsb
sub
jb
cmp
add
push
sbb
mov
sbb
sti
inc
mov
nop
aas
push
and
out
clc
cmpxchg
or
and
mov
jae
movsb
clc
pop
insl
hlt
mov
jle
and
push
call
cmp
inc
sbb
div
jl
cmpsb
pop
add
aad
mov
bound
pop
fs
dec
loopne
cmpsl
push
or
pushf
dec
jae
sbb
mov
dec
cmp
cmpsb
pop
or
push
fcomps
icebp
mov
dec
test
in
es
jae
sti
mov
loope
sub
push
lods
notl
dec
int3
idivl
add
add
fs
daa
adcb
fistps
rcl
pushf
add
scas
sbb
pop
ret
xchg
and
clc
ret
sub
pop
lret
xchg
cld
fsub
insl
push
push
imul
xlat
icebp
xchg
fnsave
mov
and
mov
jmp
and
es
aad
inc
mov
inc
mov
sbb
cwtl
movsl
sub
popf
sbb
enter
adc
and
xor
push
xchg
idivl
xor
pop
xor
jne
adcb
jg
xchg
cmp
mov
lods
mov
out
push
mov
cld
adc
sub
pusha
push
fsubs
mov
or
and
sub
bound
pop
insb
repnz
inc
addr16
nop
repnz
add
shlb
xor
icebp
jmp
or
scas
sbb
push
das
mov
adc
movsl
xor
cwtl
lcall
outsb
cmpsl
dec
push
xor
fistl
test
out
add
test
ja
iret
push
sahf
aad
aas
pop
popf
insb
mov
mov
dec
pop
rclb
cmp
add
fucomip
push
iret
imul
cld
rcrb
idiv
and
pop
stos
pop
jmp
pop
iret
dec
divb
cs
lods
pop
es
xchg
jnp
xor
std
pusha
jno
mov
jno
test
shrl
mov
data16
xor
aaa
xchg
out
xchg
lret
lea
jle
add
faddp
jbe
dec
mov
cmp
jmp
bound
adc
inc
mov
xchg
lret
pop
arpl
rol
shll
jb
sti
inc
dec
test
mov
inc
xchg
add
cmp
dec
mov
cwtl
mov
shll
mov
jbe
test
jp
mov
jb
fisttpll
out
andl
imul
sbb
inc
cmovae
std
repz
aam
inc
mov
popa
and
std
dec
mov
leave
add
aas
mov
add
iret
ret
xchg
ret
es
inc
in
loop
cs
add
rcr
push
mov
or
push
and
cmpsl
inc
fmuls
mov
sub
jae
pop
lcall
fnstenv
mov
out
xchg
jns
inc
pop
xor
dec
leave
sub
push
mov
jno
in
in
and
or
roll
movsl
ret
jle
xor
hlt
jmp
sbb
and
sahf
fistpl
mov
inc
xor
rorb
adc
cmpsl
cmp
jl
enter
mov
fsubs
js
shlb
mov
xchg
mov
daa
cs
fsubl
xlat
xchg
adc
andb
js
and
shll
rcr
sarl
mov
in
and
adc
out
mov
jle
in
push
popf
cwtl
arpl
dec
stos
cmpb
sbb
cmp
pop
push
mov
push
push
fstl
push
sbb
jmp
lret
test
mov
mov
mov
dec
jp
fnsave
mov
xor
loop
stos
pushw
addb
gs
xchg
mov
jmp
push
mov
jmp
inc
dec
and
out
popf
or
push
cmp
mov
loope
pop
and
push
add
xlat
cmp
movswl
andl
js
iret
scas
fwait
dec
push
sub
adc
xor
push
js
mov
push
jb
xchg
and
xor
fisttps
outsb
sub
out
imulb
inc
jno
mov
fxtract
mov
shlb
xchg
outsb
arpl
js
pop
jnp
jp
pop
stc
jne
arpl
or
sub
call
sbb
cmp
cmp
and
outsl
pop
dec
inc
aad
scas
pop
imull
aas
call
xor
leave
lret
sbb
xor
mov
dec
mov
cmp
in
ret
movsl
sub
mov
in
cltd
stc
cmove
insl
pusha
das
xchg
and
mov
cs
inc
pop
xor
inc
push
cmp
in
and
ret
and
jle
rorl
repz
sub
test
in
xchg
mov
rcrb
sub
inc
jb
mov
sbb
aas
pushf
or
cli
cmp
cmp
in
push
sbb
or
icebp
jle
arpl
out
push
jecxz
xchg
pop
icebp
divb
jbe
push
push
sbb
sti
dec
fstps
popa
roll
es
sub
enter
pushf
imul
jns
push
inc
stc
or
in
and
xchg
imul
insb
xchg
subl
fcomps
add
push
jp
add
pusha
movsl
ffreep
jl
or
and
sub
xchg
add
xor
out
sbb
pop
cmp
lahf
lahf
add
sub
cmc
std
stos
and
add
xchg
dec
adc
mov
mov
ret
movsb
or
es
jmp
xchg
outsl
mov
sbb
cld
pop
movsb
out
adc
arpl
in
mov
aas
mov
xchg
add
push
in
loop
fnstenv
mov
adc
mov
out
cmp
in
pop
ret
mov
inc
push
daa
dec
hlt
hlt
jecxz
lea
mov
sbb
or
loope
xor
push
cltd
aas
in
pushf
lds
pop
and
lahf
adc
push
aas
in
mov
cmpsl
cltd
mov
hlt
rclb
ret
jbe
cmpsb
sahf
push
dec
mov
cmp
jle
jg
xor
xlat
cmp
mov
sub
or
addr16
repnz
cltd
inc
aas
jecxz
repz
jae
inc
xor
or
mov
rolb
inc
or
mov
xchg
rcll
in
mov
sbb
cld
popf
and
ds
dec
inc
das
xchg
mov
jae
js
imul
decb
divl
movl
cmp
loope
xchg
mov
mov
fsubs
inc
jecxz
cwtl
addr16
loop
aaa
scas
fwait
inc
jge
leave
outsl
mov
pop
lcall
dec
insl
lock
cmp
pop
aas
add
ss
pop
mov
xor
push
sub
jb
mov
cmp
push
outsl
insl
dec
lahf
jp
mov
mov
lods
popf
pop
clc
inc
jmp
aas
movsl
mov
repz
test
or
adc
adcl
jbe,pt
adc
in
inc
jle
xorl
sub
xor
test
enter
xor
fsubr
je
ss
pop
pop
pushf
jge
in
pop
ret
or
mov
out
adc
mov
push
and
push
add
out
xorl
pop
mov
dec
adc
push
adc
pop
sub
jmp
out
lea
int
pop
rcrb
lods
dec
jae
adc
data16
push
pop
jg
cmp
in
insl
cmp
push
mov
adc
stos
out
sbb
xor
xor
loope
in
call
push
aad
mov
pop
test
loopne
fisttpll
push
pop
xchg
mov
push
dec
xor
idiv
xlat
cmp
jnp
aam
mov
xchg
cmpb
add
dec
mov
inc
int3
outsb
lods
sub
scas
movsl
jno
andl
ret
fsubrp
pop
test
or
sub
test
push
jno
mov
aaa
fistl
dec
lods
xchg
out
dec
fs
adc
mov
imul
movsb
xchg
mov
dec
mov
imul
inc
out
mov
popa
pop
adc
jecxz
fwait
scas
sbb
adc
es
cs
jmp
loope
add
dec
out
out
and
iret
mov
ret
dec
pop
and
mov
sbb
in
add
push
int3
mov
cs
push
js
adcl
notl
shl
jae
add
mov
stos
repz
dec
adc
pop
cmp
mov
mov
xchg
aas
push
push
pop
and
aad
fistps
mov
mov
mov
mov
pop
cmpb
lret
cwtl
push
stc
xlat
jl
aas
inc
fistpl
js
call
push
inc
nop
pop
dec
mov
add
cmpsb
xchg
in
push
shll
call
add
nop
sbb
cmp
sub
popf
inc
ret
movsb
push
dec
cltd
out
sarl
lock
and
es
push
cmp
sbb
push
push
shrb
test
inc
stos
sbb
test
xor
or
repnz
sbb
adc
and
mov
mov
mov
lret
scas
ret
jne
adc
out
pop
les
mov
and
popa
pop
movsb
sub
and
fsubrs
imul
stos
adc
arpl
inc
insb
sbb
js
int3
mov
sub
rclb
push
sbb
mov
rolb
ret
pop
push
xorl
jg
inc
sbb
xor
stos
mov
or
divps
aad
addr16
xchg
loope
add
in
nop
hlt
aad
mov
mov
cmp
lcall
mov
mov
sbb
xchg
jl
fwait
push
add
mov
cmp
push
inc
repz
and
mov
inc
aam
xor
dec
add
rcrb
xlat
jmp
pusha
pop
mov
adc
push
das
icebp
std
das
lret
into
or
xchg
cld
or
pop
sub
push
ret
hlt
out
sub
sub
int
scas
imul
push
push
arpl
mov
xlat
sub
aaa
sarb
dec
mov
xor
inc
cmp
lcall
lods
dec
cmp
cmp
mov
sbb
xchg
mov
sub
jne
or
mov
cmpsb
push
cmp
mov
push
jg
testl
push
inc
mov
cmp
sbb
loop
push
fnstcw
cmp
dec
bound
push
out
fsubrl
out
mov
je
cmpsl
or
fdivrs
adc
jmp
lods
sahf
cli
insb
or
es
pop
pop
add
rorb
enter
mov
xchg
into
cli
add
lods
mov
inc
cld
and
or
mov
das
popa
ds
lcall
mov
ss
out
or
add
inc
add
inc
and
mov
pop
insb
bnd
lret
xlat
push
add
push
call
mov
jno
pop
ret
push
push
xor
inc
lret
test
loope
fidivl
mov
in
je
cmp
or
stc
decl
adc
test
pop
dec
int3
mov
out
mov
dec
test
cli
out
ror
mov
jg
insb
xchg
cmc
inc
cwtl
xchg
mov
jp
mov
fwait
mov
loop
xor
test
xorl
mov
mov
cmpl
sbb
or
mov
add
jp
lret
pop
and
push
scas
push
adcl
into
clc
and
jnp
pop
pop
or
sarl
lret
xchg
mov
lret
shlb
arpl
dec
aad
shrl
pop
add
into
mov
or
hlt
jl
insl
mov
xchg
addr16
ljmp
lcall
lods
call
sub
sub
mov
js
or
out
stc
mov
outsb
xor
xor
push
in
out
cwtl
jecxz
mov
jne
loopne
mov
es
ss
inc
in
aad
test
dec
pop
sub
lds
pushf
scas
or
scas
adc
pop
dec
and
fs
adc
dec
fstpt
loopne
fnsave
xchg
out
or
xchg
repz
and
cmp
adc
inc
cli
aaa
xor
aas
mov
inc
mov
fwait
mov
cltd
xchg
push
sub
repz
jg
lahf
test
lret
pop
out
push
mov
mov
adc
mov
cltd
sbb
scas
push
rcrb
in
call
sbb
dec
jne
or
add
in
repnz
fstpt
adc
test
pop
rol
push
push
scas
jecxz
push
ret
jecxz
bound
mov
sub
and
pop
mov
or
add
xor
lds
inc
stc
xchg
cli
xchg
arpl
rcrb
icebp
dec
xchg
inc
xor
daa
dec
or
arpl
out
jg
std
scas
icebp
xor
jnp
icebp
ret
push
into
jns
popf
out
add
fs
test
mov
idivl
dec
iret
ret
cmpsl
cmc
jnp
lea
mov
xchg
popl
ljmp
std
insl
xlat
inc
pop
jl
xor
lret
xchg
or
mov
nopl
mov
pop
xor
pop
pop
jp
pop
mov
or
add
xchg
test
lods
mov
stc
sub
mov
addl
cmp
enter
mov
xchg
cmp
mov
pushf
ljmp
dec
or
daa
or
dec
mov
and
or
insl
push
loop
xor
xor
mov
jae
mov
mov
cltd
fwait
mov
xchg
adc
imul
inc
scas
dec
fcomip
mov
push
inc
ret
imul
and
lds
push
dec
in
or
lret
sbb
imul
fsts
pop
xchg
js
mov
xchg
adc
arpl
push
jb
and
push
mov
jb
subb
ljmp
pusha
mov
test
es
xor
jle
or
mov
int3
sub
sbb
sti
out
xlat
push
cld
cmp
mov
pop
push
adc
scas
jmp
dec
mov
sti
cmpsb
xor
add
test
mov
push
jmp
xlat
jbe
sbb
or
lock
scas
xchg
jmp
or
scas
lea
xchg
movsl
int3
and
sbb
cld
fstl
stos
cs
cmp
or
insb
adc
data16
dec
insl
jg
or
sahf
rclb
add
push
cmc
inc
jmp
sbb
or
pop
cwtl
push
or
pop
std
mov
cltd
int
xor
mov
sbb
push
dec
sub
insb
out
jmp
test
ds
jo
jge
fildl
ja
mov
cmpsb
loope
pop
pusha
mov
enter
lret
je
loop
add
xorb
sbb
push
loope
xchg
cli
in
rorl
mov
test
clc
push
frstpm(287
cmp
inc
loop
popa
pop
mov
aad
movl
dec
out
push
push
inc
jge
adc
jmp
jnp
test
popa
adcl
mov
arpl
dec
outsl
lds
clc
or
add
sahf
and
enter
fdivrl
and
inc
xchg
mov
push
xor
arpl
cmpb
sbb
pop
popf
dec
repnz
in
fldt
idivl
in
cmp
cs
sti
jb
lea
rorb
and
dec
repz
pop
ljmp
mov
icebp
sub
jp
test
mov
lahf
je
sbb
shll
leave
and
in
shrb
dec
call
test
push
inc
add
cld
mov
fiaddl
clc
lcall
bound
imul
mov
out
mov
shrl
xchg
out
inc
out
pop
mov
inc
pop
int
cmp
mov
mov
pop
mov
ja
pop
es
fldl
in
or
hlt
mov
pop
in
out
add
imul
sbb
hlt
cli
mov
dec
cmpsl
mov
ss
mov
push
clc
es
aam
add
stos
hlt
cmc
xor
movsl
scas
mov
push
xchg
bound
lods
cltd
imul
cs
es
out
in
mov
outsb
mov
pop
mov
shl
push
cmp
lock
mov
or
fcoms
lea
cmp
pop
sbb
dec
shl
cwtl
sbb
popa
clc
sub
mov
and
sbb
hlt
dec
sahf
outsb
mov
repnz
pop
xchg
out
mov
inc
cmp
pushf
adc
sbb
lock
lods
ljmp
push
inc
out
jae
dec
cwtl
fwait
gs
insl
and
mov
data16
rcll
or
sbb
je
pop
in
insl
push
xchg
cmpsl
adc
xchg
pop
rcll
cmp
ror
shll
pop
cs
int3
jle
dec
jmp
mov
fmull
sbb
lods
dec
pusha
pop
fs
adc
push
push
add
pop
push
cmc
faddp
dec
adc
arpl
sbbb
xbegin
ss
inc
nop
mov
jmp
aad
call
cmpsl
loopne
lret
jo
pop
push
push
leave
cmpsb
adc
fbld
add
push
mov
jge
jb
imul
sti
test
xor
sbb
mov
sub
jne
dec
or
popf
in
jmp
les
cli
int3
cs
cld
dec
pop
mov
sbb
testb
inc
xchg
pop
jg
or
cmpsl
stos
xor
adc
inc
inc
call
pop
xor
cmp
sti
outsl
mov
es
jae
push
mov
cmp
iret
shll
dec
iret
add
mov
sbb
das
mov
loop
data16
add
out
shlb
mov
xchg
out
dec
mov
cltd
mov
int
insl
outsl
mov
sbb
or
arpl
bound
mov
lods
push
int
sbb
dec
rcrl
int3
out
movsb
pop
loop
dec
pusha
lcall
cs
enter
mov
adc
xchg
jg
std
xchg
pop
jp
imul
adc
jl
adc
cmpsb
ds
add
cs
pop
adcl
rcl
fwait
add
ret
cmp
xchg
stos
in
mov
out
rorb
jecxz
mov
pop
or
xchg
mov
push
mov
sbb
ja
pop
pop
test
cmp
sti
push
mov
mov
dec
adc
fildl
cmp
sbb
leave
lret
cmp
call
in
iret
leave
fimull
mov
sahf
ret
inc
std
cmp
rol
sub
in
lret
adc
addr16
clc
xor
popf
inc
pushf
loopne
fs
add
mov
cmp
sbb
xor
jg
sahf
dec
mov
add
add
dec
movl
jecxz
mov
xor
mov
mov
stos
add
xor
or
fdivrl
xor
mov
mov
shll
push
add
test
outsb
loop
stos
and
pop
mov
cmp
in
push
repz
or
xor
cltd
aas
mov
push
adc
and
lahf
xchg
xor
jo
jnp
sbb
leave
sbb
fisubs
out
jmp
jmp
test
scas
lret
pop
dec
add
loope
xchg
lret
ss
and
icebp
mov
sti
xchg
int
sub
scas
pushf
jecxz
and
fisttpll
adc
add
add
sub
dec
push
push
pushaw
in
or
xchg
imul
sbb
test
xchg
cs
add
daa
dec
cwtl
mov
daa
pop
dec
scas
xchg
aaa
mov
bound
add
xchg
iret
or
mov
ljmp
xchg
mov
mov
cmp
fcmovnbe
hlt
push
pop
inc
stc
fdivs
cmpsl
pop
gs
jg
or
in
dec
pushf
push
out
jb
inc
ret
adc
stos
push
inc
sub
cmp
aam
add
cmp
mov
ror
push
repnz
mov
xchg
mov
and
sbb
cmpl
push
fldl
addr16
daa
push
sub
or
scas
bound
or
stos
fimull
insb
pop
out
sbb
cmp
pop
test
xor
or
pop
inc
inc
mov
pop
lret
rcll
js
pop
xor
cmpsl
clc
jb
mov
xchg
sti
test
clc
cmc
gs
rcrl
test
sub
sub
add
sub
mov
lahf
add
dec
mov
into
scas
loopne
adc
fidivl
xchg
leave
jb
adcl
in
test
jmp
sub
and
pop
jge
adc
call
sbb
cmp
bound
push
fiadds
sbb
pop
shrl
adc
jg
push
inc
je
dec
pop
and
jno
inc
or
lret
inc
adc
test
mov
sub
xor
mov
xchg
ljmp
bound
jbe
add
leave
add
loopne
push
insl
pop
lea
imul
and
icebp
cld
hlt
sahf
ret
jnp
pop
js
cmp
sbbl
clc
xchg
and
add
fisubs
out
orl
mov
fnstcw
dec
in
daa
fldl
adc
insl
sbb
mov
pop
fsubrp
mov
stc
lods
mov
mov
adc
daa
xor
mov
stc
sahf
xchg
mov
jo
xchg
pop
jp
xor
cwtl
je
repz
decl
das
mov
pusha
lds
imul
push
mov
xor
sub
cmp
lcall
jb
jo
fs
xchg
dec
fwait
insl
jecxz
dec
lods
push
sbb
cmp
push
jp
pusha
mov
lea
scas
sbb
push
mov
mov
loopne
je
fdivs
mov
add
xchg
mov
ret
mov
dec
push
mov
aad
repnz
and
sub
repz
xchg
xor
gs
mov
mov
test
jne
or
les
mov
xorb
sub
mov
or
or
ret
dec
push
add
pop
adc
cli
mov
jge
inc
out
mov
dec
cmp
add
mov
cmp
xor
ret
fcmovbe
jl
or
repnz
cmc
movb
inc
lret
xchg
xchg
add
notb
push
adc
adc
subl
xchg
es
push
or
inc
cmpsb
mov
jmp
in
iret
and
pop
mov
leave
fdivrs
mov
dec
test
dec
dec
add
inc
pop
les
mov
int
sbb
xor
je
and
pop
inc
pop
pop
insb
ret
fnstsw
push
jg
js
js
mov
arpl
jns
or
sub
out
mov
jmp
dec
and
nop
int
lcall
repz
mov
shlb
pop
sti
jecxz
ret
test
test
icebp
dec
scas
std
push
or
aaa
pop
inc
pop
push
fwait
rcrb
repnz
or
push
int
jo
repnz
mov
mov
scas
sbb
sbb
adc
pop
jno
mov
pop
jecxz
in
add
ret
cmp
enter
stos
mov
cwtl
loop
cmpsb
or
ja
loop
add
jbe
arpl
dec
iret
popf
mov
rolb
repnz
cmp
xchg
addr16
push
jecxz
cs
jne
adc
pop
inc
out
dec
xchg
inc
add
je
loop
push
lret
mov
leave
xchg
push
lret
mov
sbb
adc
cmpb
pop
pop
stc
mov
sbb
sti
mov
js
shll
mov
cmp
jbe
and
sbbl
add
mov
outsb
jp
push
add
mov
aad
adc
or
rolb
outsl
ret
sbb
movnti
in
popf
dec
std
push
and
cwtl
outsl
pop
pushf
sbb
push
pop
lret
jbe
and
lcall
pop
imul
out
inc
int3
mov
cmp
add
push
movsb
cmpsl
sbb
ds
gs
imul
jle
or
jno
jl
inc
cmp
jmp
fldcw
fisubrs
jecxz
fildll
test
dec
xor
and
pushf
imul
imul
adc
pushl
sub
mov
adc
xor
jo
enter
pusha
test
subb
jno
pop
fnsave
daa
mov
je
dec
lods
movsl
jbe
mov
into
add
sbb
jg
pop
ljmp
repz
fwait
ljmp
lea
push
lea
daa
jns
cs
das
xor
test
xor
das
or
into
sbb
xchg
xlat
bound
mov
sbb
inc
fsubl
in
push
xchg
add
pop
int3
into
rcrb
push
es
lock
int
data16
mov
shl
mov
push
aas
jb
insl
sub
jp
mov
mov
sbb
jecxz
push
stc
jo
clc
cld
leave
mov
pop
jns
mov
inc
mov
daa
sub
xchg
dec
mov
hlt
call
cld
sub
and
xchg
xlat
call
mov
sahf
xchg
xchg
cld
jo
cli
cmp
jnp
fsubs
sbb
imull
jne
or
mov
push
sbb
sbb
lret
sub
rclb
in
jge
dec
cmp
ror
insl
sbb
sbb
sbb
inc
fdivs
mov
imul
shr
mov
mov
or
cmp
add
nop
mov
clc
testb
es
ret
pusha
aam
xorb
cmpsl
jecxz
and
into
orb
push
mov
test
sub
or
inc
xchg
out
je
push
jg
cmpsb
sbb
push
lods
repz
and
in
xor
push
mov
rcrb
cld
adc
loope
leave
mov
mov
mov
fcmovnbe
xchg
das
gs
jp
adc
in
in
repz
rolb
dec
test
call
or
ficoml
jg
inc
pop
in
insl
insl
sub
hlt
sbbl
jg
in
das
sub
dec
loope
adc
cmpsb
jne
add
add
popa
mov
cmc
jmp
icebp
or
push
cli
daa
std
mov
daa
jne
cmp
bound
xchg
cmc
in
aad
jae
jno
fstpt
jp
shlb
mov
mov
mov
scas
test
and
xor
xor
rcll
fidivrl
adc
jecxz
lds
les
mov
fstl
push
xchg
xchg
cmp
ja
sbb
js
rorl
lock
cmpsb
movsb
jb
and
adc
shll
jae
ret
out
lahf
int
sub
adc
sub
mov
jns
add
add
lods
jl
xchg
and
lea
aad
js
inc
mov
cmpl
or
stc
ror
enter
imul
add
in
orl
adc
sub
testb
pop
pop
or
pop
or
pop
xor
orl
ficoms
leave
std
cmp
cwtl
scas
out
jnp
sbb
mov
pop
add
cmpsl
cltd
push
hlt
dec
push
les
pop
inc
push
jg
lods
mov
push
in
mov
lds
mov
push
cmp
fisttpl
rcrl
sub
xlat
les
dec
sub
adc
rclb
ss
addr16
imul
xor
xor
out
xchg
ss
adcb
dec
shlb
in
xchg
sub
inc
xchg
pusha
in
jo
loope
fimuls
lea
xchg
pushf
pop
ss
xchg
into
xchg
xchg
sub
push
mov
sbb
xsavec
mov
out
aas
sbb
imull
jg
call
int3
sbb
lahf
mov
sub
ret
xchg
mov
jae
popa
popf
sbb
dec
mov
mov
xchg
popa
iret
pmulhuw
pop
pop
jbe
xchg
sub
mov
shl
clc
fiadds
jmp
mov
mov
mov
mov
adc
int3
xchg
dec
clc
add
je
jno
adc
cmc
out
movsb
icebp
ljmp
cmp
cmpsb
cmpsb
shl
cmp
xchg
and
mov
fsts
mov
fimull
shll
xor
ficoms
jmp
sub
xlat
cwtl
sbb
cmp
fmuls
mov
mov
mov
data16
shlb
mov
dec
jo
in
push
out
scas
pop
in
xchg
loope
mov
lcall
out
in
jge,pn
cs
aaa
shlb
mov
test
dec
xor
xlat
push
arpl
jge
lods
mov
inc
sti
insb
mull
rep
imul
ret
sbb
lods
fsubrs
repnz
pop
movsb
mov
jmp
and
lahf
popf
andl
mov
adc
outsl
mov
idivb
add
adc
enter
and
mov
andb
js
ret
mov
stc
mov
mov
cli
lcall
pushf
and
sub
push
xorl
push
xchg
xchg
into
inc
mov
out
enter
repnz
cld
jne
jno
mov
jmp
loop
xchg
pop
inc
int3
inc
in
jo
inc
or
ljmp
lds
out
lods
cmp
jl
xchg
jne
mov
sbb
ja
lret
jne
ds
and
cmpsb
sbb
shll
adc
dec
pop
out
cmp
push
out
mov
gs
jp
sub
mov
or
in
dec
call
push
mov
cmp
mov
inc
in
imul
mov
cmp
add
loop
stos
jge
jno
push
sbb
mov
jecxz
cld
cmpsl
cltd
popf
fs
mov
aas
jns
mov
jmp
aas
or
ljmp
out
scas
dec
fldl
or
lods
scas
inc
jne
bound
push
jbe
iret
sub
jb
dec
inc
adcl
ljmp
push
lock
fs
and
mov
out
imul
mov
adc
dec
push
push
push
ss
jmp
mov
push
sbb
outsb
pop
shrb
mov
mov
test
add
fsubr
mov
out
lret
movsl
sarb
pop
enter
and
addb
jmp
pop
pop
add
pop
fstps
ljmp
adc
mov
dec
xchg
mov
mov
aad
add
xor
int3
fcmovnu
jl
xchg
push
leave
je
rclb
pop
mov
pop
fwait
int
ss
mov
arpl
hlt
push
in
cli
push
cmp
pop
push
daa
test
stc
fbstp
sub
rcl
cmpsl
or
xlat
shlb
and
loopne
adc
mov
testl
jg
icebp
mov
lahf
imul
shrb
jnp
mov
dec
mov
jo
clc
or
or
pop
sbb
fildll
leave
mov
bound
mov
mov
data16
popa
mov
sub
cmp
mov
sbb
sahf
clc
xor
stc
cmp
lock
in
into
adc
test
push
rorl
fldl
leave
jge
fcom
dec
add
fnsave
push
fnstenv
fucomip
push
mov
mov
jb
cmpsl
sahf
cmp
pop
pop
cmp
neg
jo
mov
sub
sbb
in
inc
adc
cmpsl
cmpsl
mov
push
sub
and
std
cmp
adc
gs
push
push
pop
lcall
push
cmp
leave
test
mov
testl
sub
mov
test
add
iret
cmc
imul
addl
adc
call
mov
aas
push
enter
sbb
jg
inc
and
mov
add
and
faddl
ljmp
jnp
mov
std
dec
push
mov
sahf
nop
push
sahf
push
mov
in
mov
xorl
xlat
push
xlat
or
dec
sbb
inc
cltd
in
in
push
push
data16
inc
xchg
nop
add
cmp
inc
mov
data16
or
outsb
xor
mov
pop
push
in
das
sbb
mov
inc
xlat
int3
dec
mov
dec
pop
dec
cmp
gs
out
in
loope
subb
xchg
mov
and
cltd
test
dec
jne
and
and
xor
test
mov
adc
mov
es
xor
pop
es
testl
fcompl
mov
sub
pop
pop
add
mov
push
or
cmp
inc
inc
iret
dec
push
mov
insl
push
cmp
mov
xchg
pop
js
xchg
jl
xchg
inc
jnp
jp
enter
jp
popa
call
jle
mov
loope
adc
lret
movsl
jecxz
cwtd
fwait
adc
iret
movsb
pop
xchg
add
dec
xor
add
cmp
xchg
stc
push
jno
rorb
ljmp
cmp
jns
push
mov
push
sbb
gs
ret
enter
pop
pop
arpl
xchg
outsl
mov
mov
xchg
fildll
fisubrs
jge
xchg
dec
cwtl
pop
push
cmpsl
ret
mov
or
fildll
dec
in
mov
add
dec
lahf
dec
lahf
mov
nop
mov
imul
shll
mov
push
pop
mov
repnz
xlat
push
adc
lcall
test
xor
aad
insl
out
mov
ljmp
adc
popf
iret
pop
addr16
push
aaa
jge
mov
xchg
mov
outsb
in
fld
xor
movsl
hlt
inc
ds
mov
and
bound
lret
ljmp
mov
or
and
clc
ffree
sub
mov
gs
fsubr
xchg
or
les
imul
add
pop
dec
lods
mov
cli
sbb
inc
cmp
mov
shlb
adc
adc
dec
and
lds
push
loope
push
inc
sub
out
mov
add
or
cmp
dec
cmp
fsub
lret
jecxz,pn
sub
xchg
sub
orb
es
andl
xchg
test
test
pop
sub
cltd
fdivrs
xchg
popf
adc
js
sub
xor
xchg
pop
arpl
sub
ret
xchg
mov
xchg
cwtl
test
dec
xchg
fistpll
inc
xchg
mov
adc
scas
in
das
and
lock
lret
mov
shl
lds
jo
mov
mov
stc
and
out
iret
cs
sub
in
sub
jbe
pop
in
push
mov
test
je
ret
lock
enter
mov
sbb
push
stc
icebp
mov
cmp
stos
fwait
icebp
repz
ljmp
nop
icebp
and
outsl
nop
lods
int
or
fsubrl
popf
fdivrs
cmpsb
pop
call
data16
bound
dec
stos
mov
inc
pop
pop
cmp
enter
inc
in
das
push
js
cs
nop
shlb
dec
negl
mov
dec
sar
clc
add
adc
pushf
scas
imul
sbbl
xlat
inc
adcb
jl
test
cmpsl
pop
pop
insb
shrl
fdivs
pusha
iret
mov
inc
fucomip
dec
enter
das
popf
push
mov
arpl
sub
out
lds
lods
push
les
fstpl
mov
addr16
cmpsl
pusha
fcmovnb
mov
dec
in
jp
jo
loop
cmpsb
mov
jnp
mov
stc
add
dec
mov
xchg
mov
sbbl
add
mov
lret
jmp
push
enter
sub
icebp
xchg
push
rcrl
sbb
das
test
or
scas
fimuls
sbb
jnp
sahf
or
sub
xlat
pusha
shlb
loop
pop
xchg
movaps
loope
movl
xor
imul
adc
jnp
xchg
rcrl
push
sub
or
mov
inc
xchg
lret
or
and
int
lea
sub
pop
scas
jo
divb
jmp
dec
mov
stos
push
dec
push
int
jbe
dec
pop
dec
dec
push
mov
iret
std
add
cld
dec
int
int3
push
lahf
je
mov
test
aam
add
lret
dec
dec
xor
mov
sub
pop
sub
pop
pop
iret
and
jbe
mov
lods
loope
mov
pop
aaa
cltd
add
dec
dec
sbb
add
mov
cs
dec
cmp
dec
dec
sub
and
sti
lret
fiaddl
fldenv
dec
in
out
test
mov
push
mov
icebp
push
dec
dec
mov
les
jno
jbe
pop
dec
jl
add
cld
dec
fwait
dec
sub
in
lcall
rol
ficoms
jge
sarl
jmp
inc
rclb
add
mov
cmp
xchg
fnstenv
daa
dec
add
sbb
subl
pop
or
cmpsl
push
jo
push
mov
loopne
pop
and
xchg
jecxz
sti
push
enter
mov
out
repz
mov
inc
aaa
inc
in
pop
inc
pop
lcall
sub
sub
mov
sub
sub
dec
push
psubusb
inc
cmpsl
or
js
mov
addr16
xchg
sub
popf
add
or
push
stos
push
ljmp
xor
jge
cli
adc
pop
sahf
jp
push
cwtl
lea
lods
outsb
mov
fistl
bound
cmp
cmp
jns
cli
jnp
test
xchg
scas
ret
inc
popa
test
stos
loope
add
cmpsl
add
dec
mov
cwtl
pop
in
repnz
rcrb
adcb
jmp
push
mov
mov
addr16
xor
jle
aas
cltd
pop
aaa
cmc
cmp
pop
out
sahf
sub
dec
sbb
rorb
ror
sub
mov
js
xchg
pop
out
push
add
cmpsb
inc
loopne
push
adc
hlt
repnz
sub
test
ds
xchg
in
outsb
dec
aad
jl
push
dec
push
xor
es
and
cltd
loopne
cs
mov
ja
sub
add
ds
lea
lret
mov
test
cmp
mov
adc
hlt
in
sbb
fs
enter
xor
pusha
pop
cmp
nop
push
fmuls
sbb
addr16
lea
fwait
andb
jle
mov
dec
std
adc
inc
movsl
mov
xchg
popf
and
or
jp
mov
add
jle
mov
inc
pop
dec
into
aas
in
das
inc
adc
pop
mov
cli
push
clc
test
jp
call
inc
shlb
jne
mov
add
cmpsb
clc
jle
push
std
lea
cmp
pop
or
xchg
pop
or
pop
fcompl
jle
xor
gs
sahf
and
cwtl
loopne
daa
rcll
push
xlat
fidivrl
cli
icebp
mov
push
mov
adc
adc
xchg
nop
pop
test
sarl
cli
jno
or
push
and
arpl
test
xchg
jecxz
insb
xchg
pop
arpl
pop
ljmp
mov
adc
pop
scas
decb
lcall
jo
inc
fimull
mov
fsubp
jge
xchg
dec
aam
adc
rol
inc
cmpsl
cs
insb
pop
faddp
inc
dec
mov
out
adc
mov
push
adc
movb
xchg
cmc
push
jbe
mov
sbb
inc
imul
mov
push
mov
jae
xor
lahf
bound
jecxz
jl
mov
cs
loopne
out
ret
aam
orb
ret
les
bound
cmp
cld
das
lahf
sahf
pushf
out
mov
push
adc
xchg
cmp
scas
xchg
call
xorb
xchg
adc
out
dec
shr
es
or
loopne
mov
out
stos
dec
pop
mov
dec
clc
pop
push
cmp
add
ret
scas
xchg
mov
push
push
sar
lcall
cmpsl
mov
loope
xchg
mov
dec
mov
mov
mov
xor
inc
dec
orl
inc
lea
ror
mov
dec
pop
dec
gs
dec
scas
fisubs
lods
repnz
adc
jae
sbb
sbb
sahf
mov
outsb
sub
mov
pop
das
fldenv
gs
push
daa
std
dec
repnz
hlt
in
push
xchg
add
jb
cmp
sub
stos
push
sbb
cmp
pop
jno
push
dec
in
push
stos
ficoms
or
push
cmp
fildll
loop
mov
shlb
pop
out
sub
mov
pusha
ret
add
mov
aas
testl
push
test
or
insb
int
pop
cmp
or
mov
xor
inc
mov
hlt
out
jl
push
jne
xchg
orl
mov
sbb
adc
jp
loopne
movsb
adc
sbb
fstp
test
not
pop
aam
push
jge
sub
or
test
pop
sti
outsl
in
in
ficoms
repz
adc
mov
and
fs
addr16
inc
loopne
jmp
add
lods
out
jo
cltd
fmuls
sbb
jbe
and
pushf
sub
jle
mov
aas
xor
xchg
out
adc
cmp
out
iret
pop
addr16
pop
xor
dec
mov
or
cmp
mulb
sbb
push
mov
mov
lret
ret
pop
jne
sub
js
cmpsl
mov
mov
out
cmp
aaa
xchg
and
jmp
js
mov
cmpsb
jae
mov
lods
fistpl
fldt
sbb
lods
push
ret
and
mov
lock
bound
push
les
stc
shlb
jbe
das
inc
push
sub
xchg
clc
jmp
mov
sbb
sub
hlt
outsl
adc
sbb
cmp
clc
fimull
mov
nop
jg
jl
mov
add
sbb
add
push
fmull
pop
int
jae
mov
fwait
cmp
xchg
ret
jp
and
lods
lea
out
dec
cli
in
pop
cmpsb
jns
adc
or
lret
jmp
mov
ja
push
lds
mov
push
xor
daa
adc
cmp
cmp
mov
leave
push
dec
les
lock
in
leave
jne
inc
aad
mov
adc
mov
mov
divl
xchg
mov
ficoml
outsb
nop
xchg
inc
fidivrl
pop
mov
or
jne
add
mov
rcl
mov
pop
pop
mov
push
adc
sbb
aas
mov
aad
ret
sbb
ffree
inc
add
imul
adc
xchg
mov
xor
fnstcw
jecxz
cmpsb
cmpsl
imul
adc
inc
sub
mov
cmc
cmp
ljmp
dec
or
pop
jmp
lock
ret
sub
jns
lgs
cwtl
movsb
jnp
lret
push
loop
scas
or
stos
cs
fsubrs
xlat
cli
test
push
add
fdivs
dec
test
call
imul
xchg
out
dec
cmp
xlat
push
shl
mov
jecxz
push
cmpsb
sahf
mov
imul
sub
les
xchg
cmp
sub
clc
cwtl
xchg
shl
pop
lock
in
ret
add
daa
stc
add
lods
loope
ror
jp
xchg
pop
stc
mov
pop
pop
xchg
xor
dec
sub
pushf
and
dec
mov
dec
or
inc
fcomps
cmp
lret
int
and
jecxz
std
xor
pusha
int3
mov
hlt
jae
push
mov
and
cmp
pop
ffree
sti
shll
dec
dec
jbe
test
call
hlt
insb
jge
jecxz
xchg
jecxz
mov
mov
and
jle
and
mov
adc
dec
mov
lods
loop
cmp
xchg
xorl
mov
mov
int
fmuls
scas
cmp
loopne
mov
sahf
cmp
inc
sbb
ret
mov
push
pop
jecxz
in
xchg
push
int
insl
xchg
dec
fistps
shrb
data16
sahf
and
sub
movsb
subb
fcoms
in
aam
dec
je
repnz
dec
cmp
add
stos
pushl
cmpsl
ficompl
mov
pusha
cltd
mov
repnz
pop
pop
pop
dec
push
rdmsr
mov
les
mov
pop
ror
sti
mov
mov
icebp
lock
icebp
mov
mov
dec
loopne
es
inc
jno
xchg
stos
sub
sbbl
sub
shlb
rorb
imul
aas
push
and
mov
sbb
loop
jle
push
mov
or
mov
aas
test
rcl
rclb
inc
xor
rcll
icebp
and
repnz
pop
sbb
sti
call
inc
jnp
sub
pop
mov
mov
movsl
fists
in
test
mov
inc
roll
lds
mov
shlb
test
mov
ret
std
sbb
and
js
or
push
inc
ret
mov
mov
test
ja
and
loopne
scas
fisttps
jl
in
adc
cmpsl
mov
daa
sub
in
out
fs
inc
jbe
jecxz
repz
xchg
insl
push
shlb
std
jle
jmp
lcall
sbb
sti
mov
jecxz
mov
fmul
mov
mov
xor
cwtl
inc
xchg
lahf
mov
mov
and
out
ljmp
sub
and
test
pop
cmpb
inc
sub
stos
xchg
mov
xlat
or
inc
stc
xchg
ja
loop
lock
pop
pop
cmp
add
and
push
int3
subl
mov
sarb
icebp
idivl
xor
xlat
iret
psubd
pop
loop
jg
test
iret
cwtl
xor
out
sbb
pop
fcmovbe
mov
stc
inc
sbb
fldcw
vpunpckhwd
aam
icebp
andb
mov
out
pop
inc
nop
pop
add
fnstsw
push
scas
sub
in
jecxz
mov
fcos
psraw
push
cli
adc
or
dec
and
jns
jmp
mov
popa
clc
inc
test
imull
sbb
in
in
and
cwtl
add
push
inc
fwait
repz
xor
xor
lahf
mov
jb
js
ljmp
mov
lods
xorb
popa
adc
cld
sbb
push
or
call
and
cmp
cld
ret
or
mov
dec
xorl
mov
push
out
add
not
or
mov
pop
scas
mov
loopne
mov
sub
ja
cmpsl
push
sub
or
cmp
pop
or
add
lds
mov
inc
popf
jp
jp
js
sub
fistpll
xchg
xlat
jno
xor
jmp
out
nop
les
xor
sbbl
aaa
roll
in
call
sub
ds
mov
dec
push
or
sbb
sub
mov
sub
dec
xchg
xchg
xchg
or
lds
outsb
cld
icebp
pop
aad
notb
push
sub
js
dec
jno
mov
cmpsb
aam
insb
push
jo
lods
push
lahf
push
mov
xor
cmp
loopne
mov
in
in
jp
jmp
push
mov
inc
dec
push
fstpl
in
mov
jae
and
adc
popa
mov
into
mov
adc
or
fisubrl
iret
cmpsb
fadds
in
sub
jno
outsl
jge,pt
mov
dec
push
pop
sbb
into
jno
push
push
and
sti
jno
adc
stc
jb
xchg
popa
stc
xchg
inc
pop
cmpsb
popf
fstpl
movsw
in
cs
aam
out
in
adc
arpl
lods
fiadds
sub
adc
call
loop
lods
jno
mov
inc
aad
add
or
mov
mov
insl
sub
stos
jbe
cmp
adc
sbb
xchg
in
jp
testl
daa
push
sbb
out
aas
dec
gs
xchg
cs
cmpsl
mov
fnsave
cmpsb
xchg
dec
xor
inc
sti
jge
sysenter
mov
into
int
loop
xchg
sti
in
into
cmpl
dec
std
cmp
aam
pushf
pop
mov
fistpl
cmp
sti
pop
pop
imul
dec
cwtl
or
or
and
cli
and
adc
mov
xchg
mov
or
je
sub
nop
add
jae
cmpsl
dec
sbb
jnp
mov
or
fdiv
jecxz
insl
loope
or
cmpsb
mov
enter
mov
cmpsb
mov
add
scas
fstp
dec
in
into
adc
push
ds
mov
mov
dec
mov
int3
mov
and
cmp
std
cmp
icebp
cmp
mov
mov
jg
pop
lods
inc
mov
in
mov
jns
push
scas
dec
pushf
retw
jno
divl
push
add
mov
adc
es
gs
mov
xchg
xor
fnstcw
add
test
clc
mov
aam
inc
rcl
pop
pop
dec
push
cmpsl
cli
je
pop
insb
ficomps
and
adc
mov
int3
bound
cwtl
xchg
outsl
in
pop
enter
icebp
movsb
mov
cltd
lock
jb
pop
ds
test
jl
imul
adc
mov
and
cmp
iret
dec
fcmove
adc
fwait
sbb
mov
push
insl
add
daa
in
pop
mov
je
mov
or
repz
pop
jecxz
inc
add
inc
sbb
jnp
ljmp
imul
lods
imul
mov
les
cmpsb
in
sub
mov
fstpl
mov
pop
mov
sub
pop
mov
push
repnz
rclb
sub
test
data16
std
imul
xor
sub
mov
sbb
insb
clc
pusha
xchg
xor
or
rcrb
push
push
scas
or
movb
inc
mov
les
mov
fsubrs
fildll
adc
and
mov
pop
pop
cmp
push
or
push
pop
or
mov
popf
xchg
call
lret
outsb
cmp
in
addr16
test
xchg
pop
cmp
and
mov
xchg
cmp
xchg
paddd
inc
rorl
rclb
cmc
jns
sub
jo
jecxz
push
inc
movb
cmpsb
cli
call
adc
adc
sbb
xor
push
pop
push
loope
das
dec
pop
add
lret
cmp
mov
outsl
imul
in
dec
pop
repz
lret
lret
jae
inc
cmp
mov
repz
pop
sbb
jo
add
cmp
inc
bound
leave
into
inc
ja
jmp
jmp
into
daa
cmp
ret
add
daa
jb
js
lahf
mov
cmp
ret
sbb
enter
and
or
call
sbb
loop
jge
fwait
loope
ja
cmp
pop
pop
lcall
js
out
mov
shlb
ret
hlt
fadds
pop
fiaddl
int3
inc
push
into
push
rclb
sbb
pusha
jg
inc
out
jg
imul
mov
rcrb
scas
sahf
xchg
mov
mov
lods
xor
jge
sarb
hlt
aaa
cld
adc
cmp
leave
push
mov
push
dec
mov
clc
xor
es
add
push
pushf
push
stos
inc
mov
dec
outsl
pop
insb
aam
fwait
pop
es
push
movsl
xchg
mov
cmp
nop
xchg
lods
pop
js
push
es
fidivl
lcall
dec
jne
out
loop
or
or
push
cmpsl
lea
int3
add
jno
inc
cmp
jno
fdivrs
ret
and
movsl
insb
lods
xor
jae
mov
negl
cmp
es
mov
mov
adc
mov
cld
sbb
test
cmp
or
js
and
clc
popf
jg
rclb
insb
mov
out
call
and
jmp
in
push
cmp
lods
repz
arpl
lock
mov
inc
add
outsl
jmp
jae
xchg
mov
enter
jne
pop
push
out
and
jbe
fsubs
inc
or
test
push
outsl
pop
sti
and
jnp
hlt
dec
orl
push
xchg
sub
icebp
jl
add
xchg
sti
arpl
outsb
out
cmpsb
imul
popa
ja
sti
push
xor
das
mov
push
and
push
mov
insl
jo
fnstenv
adc
xchg
mov
jle
xor
nop
divb
xchg
arpl
mov
push
mov
cmpsb
mov
hlt
dec
repz
insl
add
adcl
int
inc
cmp
inc
push
loope
idivb
sub
loope
leave
in
aam
cmp
scas
xchg
dec
test
test
sub
movsb
rcrb
not
mov
daa
sahf
pop
aas
lret
add
cmpsb
jecxz
xor
mov
shlb
push
mov
xor
and
mov
std
gs
adcb
in
fisttpll
add
push
iret
sahf
loopne
xchg
in
inc
in
kmovb
lcall
xor
stos
pushf
test
cmp
les
mov
das
sbb
icebp
or
fistpll
push
rcr
sahf
jl
int3
dec
and
push
ss
loopne
stos
or
lahf
add
orl
mov
popf
into
fnstenv
xlat
inc
stc
outsl
cmovo
fsubr
inc
shl
sarl
jle
ficoml
jae
pop
inc
adc
mov
sub
push
pushf
jno
jl
arpl
dec
lret
dec
add
xchg
leave
mov
add
mov
mov
loopne
mov
icebp
rol
sbb
mov
jle
and
pop
push
out
dec
div
jecxz
subb
cmp
mov
ret
test
in
fwait
into
dec
test
int3
sahf
test
sbb
xchg
xor
push
push
aas
mov
push
mov
xchg
pop
lret
fwait
daa
mov
rcrb
aaa
bound
mov
daa
sub
stc
xchg
dec
xchg
iret
popa
sub
xchg
inc
mov
mov
add
ljmp
and
push
dec
push
fisttpll
daa
adc
cmp
call
pushf
js
or
shll
and
pop
hlt
adc
xchg
arpl
les
sbb
pop
jbe
das
aam
insl
inc
or
cmp
je
dec
mov
pop
or
sub
outsb
cmp
sub
inc
push
cmpsb
jle
jo
scas
mov
enter
les
jge
or
rol
mov
sub
jo
loopne
and
loope
cmp
xor
lcall
stos
cmp
ret
and
inc
shll
scas
fisubrl
add
jbe
sbb
xchg
add
jno
dec
in
fwait
ret
and
in
push
rcrl
mov
jecxz
movsb
lahf
xor
mov
call
andl
mov
sti
xor
out
or
lods
sbb
mov
sahf
lods
in
addr16
sahf
call
stos
add
jg
sbbb
ljmp
cmp
es
mov
daa
and
mov
push
inc
jbe
and
leave
and
cmpsb
sahf
mov
pop
std
imul
dec
out
sbb
popa
imul
xor
iret
rcrl
xor
je
sub
lret
repz
js
xor
scas
loop
in
aad
mov
data16
dec
popf
sbb
inc
dec
mov
xchg
loop
sbb
repnz
stos
cmpsl
ret
push
mov
loope
jmp
jae
push
sahf
jo
add
and
and
stos
mov
int3
mov
call
mov
insl
jne
pop
mov
test
push
in
fwait
mov
pop
inc
jg
mov
outsl
fbstp
mov
fs
shlb
push
fsubp
ret
lcall
xchg
mov
outsb
inc
aad
loopne
stos
loopne
inc
repnz
imul
int3
aam
pop
shl
jmp
mov
test
push
shrl
sub
cld
jmp
insb
mov
mov
loop
out
push
add
inc
stc
xor
add
inc
cmp
ljmp
lds
cli
jle
mov
mov
out
jmp
sub
lahf
stc
in
popf
rolb
add
clc
sub
out
pushf
jnp
stos
cmp
jle
fchs
add
add
and
aas
aas
mov
cmp
cmovle
shlb
ret
ss
movb
repnz
pop
enter
addl
jns
mov
stos
sbb
cmpsl
mov
addb
in
aad
cmp
mov
add
push
fcoms
inc
jbe
adc
repnz
and
rcrl
mov
dec
jno
mov
sbb
push
push
and
pop
pushf
jle
cmp
jnp
push
incb
sbb
dec
add
movsb
call
dec
cld
mov
sub
jl
jns
xor
mov
jae
jne
pushf
push
or
and
and
or
cmpsl
gs
mov
fwait
pusha
out
fisttpl
fwait
cwtl
sub
mov
sbb
mov
int3
in
cwtl
jo,pt
inc
inc
pop
jp
cld
stos
jo
jae
and
in
pop
pop
out
push
std
mov
and
negb
cwtl
xchg
mov
rep
jmp
mov
push
xchg
jmp
pop
or
aad
mov
repz
push
hlt
fldl
jo
dec
in
xor
popa
push
lds
fst
int3
lea
jnp
sub
shll
mov
sbb
in
rorl
dec
sub
testb
fildl
in
jmp
push
scas
rcrb
iret
inc
and
lods
push
incb
test
cmp
xor
sahf
out
shlb
call
inc
shl
or
shrb
xchg
ret
cltd
pop
pop
shrl
cli
push
mov
hlt
add
mov
dec
jl
out
stos
stos
repz
lods
sbb
cmp
mov
mov
and
pusha
add
push
hlt
dec
fsub
outsb
mov
lcall
dec
fdiv
jmp
jp
orb
adc
dec
adc
mov
adc
or
jb
cmp
lret
mov
add
cmp
and
adc
or
push
sbb
jbe
scas
adc
add
xor
inc
rclb
mov
sbb
ja
sub
xor
cmp
fxam
fwait
loopne
sub
lock
add
jo
sbb
add
xchg
mov
ja
add
jns
push
inc
test
pop
jg
add
addr16
daa
xor
jae
sub
lcall
cmpsb
pushf
and
fsubl
divb
jmp
push
cmpl
leave
adc
sbbl
fisttps
sbb
pushf
in
push
or
insl
jb
jmp
das
aad
cmc
mov
xchg
in
in
jle
mov
hlt
lods
inc
dec
and
std
or
shlb
psadbw
test
loop
sbb
dec
stos
sahf
notl
mov
into
dec
pop
int
jl
xlat
sarl
cmp
clc
jle
enter
fbstp
mov
bound
fstpl
mov
popf
lret
rcrl
or
test
push
xchg
ret
add
jb
pop
mov
int
in
pop
fsin
mov
pop
pop
cltd
test
call
mov
fsubs
push
nop
xlat
sub
cmp
lahf
push
jns
addr16
jno
aas
sub
data16
pop
stos
clc
faddl
test
dec
adc
mov
adc
push
lock
out
mov
mov
cli
bound
jmp
fisttps
test
jno
push
cmp
push
aam
push
call
mov
imul
push
mov
xor
jmp
ret
repz
jbe
dec
jp
popa
xchg
nop
imul
ret
scas
jle
sub
push
xor
lahf
popl
dec
jp
rorb
push
push
mov
cmpsl
pop
adcl
cs
cmp
popa
mov
out
xor
and
add
xor
js
inc
inc
imul
popl
pop
mov
or
push
xchg
jg
jno
hlt
sti
adc
arpl
pop
loope
and
adc
add
sbb
in
xchg
int
into
xchg
sub
sbb
ret
sub
test
popa
push
pop
mov
enter
xor
mov
shlb
mov
test
jno
insb
jo
pop
cmc
jmp
xor
dec
add
xchg
gs
fisubl
mov
lds
addr16
mov
adc
dec
mov
cs
ja
leave
addb
dec
cmp
test
sub
aaa
je
pop
push
xchg
lcall
lods
into
add
cmp
xchg
out
or
pop
mov
sahf
sahf
test
mov
out
jno
lret
dec
mov
ficomps
add
int
aas
sub
es
fdivrs
xchg
js
sbb
inc
inc
cmp
divl
push
sub
lcall
ja
jle
mov
out
sbb
xor
dec
ds
imul
xor
fwait
sti
insl
inc
lods
lret
aam
or
loope
mov
sahf
mov
jbe
lret
jbe
pop
xor
xchg
dec
jp
sti
mov
dec
subb
aam
ljmp
mov
xlat
push
cmp
dec
adc
lods
mov
call
out
loopne
out
add
or
mov
notb
xlat
jle
xor
das
mov
xchg
stos
inc
loopne
cltd
lret
cmp
pusha
or
lods
fbstp
fstpt
dec
cld
lahf
adc
lods
mov
pop
inc
sti
and
push
subb
ret
jo
inc
xchg
sub
push
test
enter
xlat
adc
jnp
adc
mov
mov
add
out
daa
sbb
pop
xchg
pop
sub
out
sbb
scas
movsb
test
sti
cli
add
test
shlb
or
testl
mov
pop
int3
cmpsb
push
push
mov
in
daa
leave
jmp
sbb
negb
mov
movsl
or
cli
add
in
sbb
and
mov
inc
hlt
ds
vmaxss
jns
aas
jecxz
and
mov
ret
dec
test
sbb
sbb
sub
mov
mov
mov
je
cltd
sarl
xchg
xor
add
push
loopne
lcall
adc
push
push
xchg
insl
pop
fldenv
lea
aas
jecxz
dec
in
dec
push
xlat
xchg
mov
dec
jge
mov
loop
mull
jb
xor
jnp
and
lcall
inc
push
pop
sub
pop
jno
fildl
lods
lods
fcoms
imul
or
sbbl
push
shr
rorb
imul
mov
aam
or
xchg
mov
adc
push
scas
out
icebp
out
in
shlb
loopne
pusha
out
insl
xchg
xchg
hlt
int
push
pop
outsl
cmp
mov
fimull
jae
fdivrl
mov
pop
pop
jp
in
lret
out
sub
sbb
dec
rorl
inc
mov
jle
sarl
cltd
aas
adc
fnstsw
and
insb
pop
xlat
fs
inc
pop
or
mov
sbb
or
int3
mov
test
jl
jne
mov
clc
test
in
pop
dec
push
push
aas
pop
mov
jne
jg
notl
lret
or
sbbl
push
lcall
ret
push
add
bound
dec
jae
sbb
xor
inc
adc
ffreep
sbb
mov
mov
lahf
xor
xchg
jne
xor
lock
push
jns
jo
jle
test
insl
mov
mov
lods
adc
xorl
push
xlat
add
mov
cmp
popa
mov
movsl
dec
sbb
aam
cmp
xchg
aas
aad
and
add
fwait
xor
arpl
in
push
and
lcall
pop
in
mov
add
mov
cmp
enter
jmp
rol
jbe
adc
inc
adc
outsb
les
pushf
aad
fdiv
sbb
mov
fcmovb
nop
inc
fildl
outsl
ds
push
jae
call
sbb
pop
and
pop
out
cmc
sbb
and
pop
pop
mov
jl
mov
inc
mov
inc
mov
cmp
repnz
sub
lds
push
arpl
arpl
add
mov
mov
mov
jmp
xchg
push
adcb
pushf
fiadds
das
jne
mov
sbb
jae
imul
jmp
in
jnp
int
or
js
stc
xor
shll
pop
loop
je
dec
cmp
pop
fldcw
xchg
aaa
orl
sar
jne
je
lcall
ret
repnz
mov
in
push
ljmp
mov
iret
sti
out
or
add
aas
mov
sar
adcl
or
cltd
outsl
leave
les
adc
sbb
insl
jbe
xchg
push
inc
or
add
out
idivb
and
movb
xor
mov
dec
xchg
xchg
pop
scas
adc
xchg
sub
lcall
cmp
cli
mov
xchg
jg
mov
das
add
pusha
pop
adc
add
jnp
lods
jmp
rcr
pushf
pop
stos
xchg
std
cmp
cmpsb
jnp
cmp
inc
std
xchg
and
loop
push
inc
in
rorl
iret
aad
mov
push
bound
and
mov
lods
data16
iret
push
imull
jbe
cli
pop
out
in
xchg
jle
push
mov
in
fcos
addr16
mov
call
cmp
je
or
sbb
stc
inc
decl
inc
pop
jo
flds
sub
xchg
push
sbb
popa
addr16
fdivl
add
cmc
jbe
imulb
gs
mov
inc
imul
dec
outsb
mov
dec
in
add
cmp
push
outsb
push
push
cmpsl
sbb
leave
mov
or
cltd
hlt
mov
mov
scas
repnz
xchg
aas
jb
rcll
push
lret
cmc
aaa
ljmp
push
sub
pop
aad
pop
imul
fbstp
enter
jp
pop
inc
mov
and
lret
pushf
orb
xor
scas
pop
dec
scas
dec
sti
arpl
test
xchg
inc
and
pushf
fs
iret
shlb
jne
adc
and
leave
pop
sbb
mov
and
dec
imul
daa
cmp
aam
jne
roll
pop
loopne
xchg
jnp
xor
push
das
sub
insl
es
push
test
pushf
mov
cwtl
inc
outsl
jno
pushf
sbb
aad
int3
and
lds
cli
or
fnstenv
sbb
push
pop
mov
dec
jl
mov
addr16
icebp
jle
int3
mov
aaa
movsb
jb
fmull
inc
ret
and
xor
gs
dec
cmp
sar
xchg
or
in
popf
mov
cmpl
add
fwait
ret
cld
inc
cwtl
fildll
pop
loope
dec
lods
in
inc
es
xchg
cwtl
add
shrl
inc
jo
notb
loopne
and
fnsave
pop
cmp
xor
cmp
push
iret
dec
inc
in
add
and
mov
test
out
lock
shrb
outsb
aas
inc
sti
xchg
add
mov
inc
inc
inc
mov
cld
adc
cmpsl
push
or
stos
rorb
jge
loopne
imul
jae
cmc
push
mov
adcb
scas
push
int
push
jo
cmpsl
jae
sub
inc
jnp
xchg
inc
mov
lods
dec
or
mov
test
es
inc
mov
repz
adc
cli
incb
in
leave
mov
sbb
mov
das
insb
adc
imul
and
lret
pop
rclb
imul
mov
test
mov
ror
lds
pop
loop
negb
pop
xor
sub
lock
and
pop
es
xchg
lock
or
movsb
sub
in
jp
mov
int
xchg
loope
rorl
lods
fs
mov
xchg
scas
mov
cwtl
mov
mov
popa
dec
jno
adc
int3
lock
add
push
test
pushl
cmp
mov
sub
js
add
imul
and
movb
jns
mov
sub
fldcw
cmp
arpl
fs
lea
cmovns
stos
movsb
mov
scas
fmul
jo
pop
js
pusha
pop
dec
ja
and
cli
fnstenv
rorl
test
mov
xor
bound
fdivr
sbb
scas
pop
data16
ljmp
or
push
inc
or
jp
cmp
pushf
out
push
push
pop
arpl
jmp
lahf
push
jnp
scas
mov
add
dec
sti
cwtl
scas
das
and
popf
lock
outsb
shrl
rorb
in
xchg
mov
cmp
mov
addr16
popf
insl
or
dec
pop
pushf
adc
adc
inc
popa
iret
arpl
inc
js
rorb
fsub
cmpsl
or
in
mov
dec
lock
cltd
inc
test
inc
loopne
mov
sbb
add
mov
sub
mov
lea
or
push
add
xor
adcb
push
imul
enter
cwtl
xchg
sub
loope
out
leave
push
sti
mov
jmp
jbe
mov
in
frstor
stos
jecxz
cmpsl
sub
loopne
stos
inc
pushf
and
dec
jl
and
push
mov
cmp
lock
into
jecxz
cmc
inc
add
xchg
fistps
getsec
imul
dec
adcl
mov
jl
sub
fdivl
in
pop
shrb
in
add
inc
cmp
shlb
loope
xchg
repnz
sbb
cmpsl
scas
int3
pop
cmpsl
les
mov
push
in
ljmp
mov
sbb
pop
sub
mov
cmc
adc
jnp
out
sub
adc
outsb
jae
sub
jge
cs
mov
push
out
sbb
imul
xchg
cmp
and
jne
sub
ja
popf
dec
popf
mov
push
das
lahf
stc
cmpsb
add
sti
cmp
mov
bound
mov
pop
push
or
add
pusha
fistpll
fcomp
xchg
incb
dec
pop
push
xchg
imull
aaa
sub
out
push
in
in
sbb
lds
inc
stc
xchg
lahf
xor
leave
adc
mov
xchg
ror
mov
xchg
jp
lcall
aas
sub
ret
aam
bound
cld
push
popa
and
repnz
add
lahf
and
add
imul
insl
inc
fucomp
les
out
imul
xor
cmp
mov
pop
sti
ja
inc
or
pop
adc
cmp
jbe
mov
dec
push
ret
mov
or
mov
lcall
inc
cmp
mov
push
jb
jl
icebp
push
xor
mov
xchg
and
inc
mov
pop
cmp
lods
cmp
pop
aad
pop
int
mov
pop
test
fbld
xchg
cltd
rcrl
push
jl
lea
mov
add
cmp
jns
xor
jg
rolb
fwait
sub
cmp
and
push
mov
data16
cmp
sbb
dec
mov
add
shlb
cmp
dec
mov
dec
ds
and
xlat
into
jmp
xchg
sbb
add
in
adc
add
out
sub
ret
iret
aas
pop
pop
mov
es
mov
ljmp
sub
stos
rorb
inc
mov
setns
xchg
ja
test
test
stc
sbb
fwait
call
mov
ror
mov
sahf
out
jbe
outsb
lcall
xlat
push
add
stos
pop
lock
sbb
dec
mov
cmp
or
jmp
ret
out
sbb
add
repnz
adc
or
mov
push
test
je
cmpsb
push
roll
mov
mov
out
scas
fmuls
add
push
fcmovnu
sub
mov
decb
dec
pop
js
inc
add
inc
insl
enter
sbb
jbe
cs
fiadds
stos
jmp
outsl
int
jle
xlat
pop
or
sub
icebp
jecxz
adc
inc
mov
in
loopne
je
je
jae
dec
add
xchg
cmp
mov
imul
jns
mov
pop
mov
ret
or
iret
loope
sbb
movsl
rolb
addr16
imul
jb
xchg
shll
icebp
cmovns
inc
xchg
int
lea
xchg
insb
sbb
pop
push
es
gs
sbb
inc
fistpll
add
jle
xchg
in
cltd
or
sbb
push
mov
or
xchg
in
xor
xor
sub
cli
cmp
popa
cmpsb
pushf
outsb
cmp
rolb
fldenv
inc
mov
mov
push
pop
pop
test
popa
scas
loope
jns
pop
mov
cmp
pop
cmp
pop
inc
mov
inc
xor
aas
enter
mov
ds
push
pusha
dec
or
pop
push
loope
lock
pushf
push
movsb
cld
fiadds
insb
into
jecxz
xchg
xchg
add
in
insl
lcall
fs
hlt
xor
ror
cmc
push
test
xor
mov
adc
pushf
rcl
inc
loopne
pop
fcoml
pop
or
imul
int3
mov
cmp
add
cld
insl
outsl
dec
in
lahf
push
dec
xor
std
ja
repz
jbe
pop
and
cmp
cmpl
jbe
mov
add
decl
loope
mov
pop
sbb
mov
fwait
sbbl
push
pop
mov
jmp
jno
push
or
imulb
loopne
shr
subb
stc
adcb
je
inc
jns
inc
cmp
pop
xor
sbb
out
mov
xor
push
sbb
xor
cmp
cmpsl
mov
out
ret
sub
mov
cmovs
stos
mov
mov
roll
pop
jae
cmp
out
fbld
xchg
mov
mov
xchg
dec
pshufw
jecxz
les
push
mov
adc
jno
call
and
sbb
xchg
pusha
add
push
xchg
scas
xchg
xor
mov
stos
fldcw
pop
mov
xchg
adc
xor
repnz
dec
pop
push
lret
lret
xchg
lock
rorb
and
shlb
lahf
pushf
mov
dec
rcll
cltd
divb
inc
xchg
les
and
das
stos
aad
hlt
popf
ret
dec
or
mov
mov
push
enter
js
fisubl
push
fadds
shl
bound
lock
rcrl
lods
add
fucompp
cmpsl
lea
mov
shll
sub
push
imul
push
inc
sub
mov
test
xchg
or
pop
jmp
xchg
ja
mov
dec
lret
pop
aam
or
or
sub
xor
test
add
and
inc
dec
rcl
imul
fsubl
cltd
xchg
push
lea
daa
lahf
stc
mov
ror
xchg
test
icebp
push
add
xor
lahf
cmp
mov
sub
xor
nop
or
insb
sbb
add
cltd
mov
mov
adc
xchg
ljmp
aas
std
sbb
push
insb
es
xor
xchg
xchg
orl
mov
push
xchg
mov
sbb
pop
mov
shll
mov
cmc
jge
rorb
in
dec
mov
lahf
lea
sbb
dec
popa
inc
push
sub
jno
insb
push
cmpsb
aaa
mov
jmp
mov
push
xchg
andl
addb
mov
inc
popa
movb
jb
push
addr16
cmc
ss
scas
or
push
mov
dec
les
push
mov
outsb
dec
push
arpl
pop
sub
add
xor
mov
int3
popf
or
mov
mov
dec
dec
add
and
aaa
data16
dec
push
fistpl
xor
pop
jae
xchg
rclb
loope
dec
jl
jns
mov
cltd
cwtl
clc
jno
pop
jecxz
lret
xchg
xchg
notl
mov
xchg
movsb
push
fcomps
cltd
inc
add
iret
in
repz
pop
cmpb
stc
insl
sarl
mov
jo
in
cmp
clc
inc
inc
inc
in
mov
add
inc
lcall
lcall
lods
lea
outsl
fstpt
mov
pop
mov
subb
xchg
mov
add
rorb
in
and
bound
out
add
dec
insb
push
push
out
cltd
or
std
fwait
seto
sub
mov
dec
pop
cmc
mov
jecxz
push
sub
or
and
pop
hlt
dec
cli
je
cmp
adc
jno
lods
cmpsl
jmp
inc
adc
mov
cwtl
addr16
pop
push
das
jno
push
fcom
out
push
jge
mov
xchg
out
push
xor
sbb
dec
mov
pop
xor
dec
cmc
fcoml
mov
loop
test
push
jae
fmul
sub
jg
xchg
jnp
sbb
jnp
sbb
in
add
inc
pop
mov
xor
ss
enter
jle
fstpl
dec
mov
loopne
push
ja
data16
and
jge
jno
pop
enter
enter
insl
mov
add
pushf
mov
shl
jle
je
xorl
jle
mov
pop
dec
adcb
popa
cmpsb
test
jl
dec
popf
push
addb
mov
shl
cmpsl
fwait
std
add
iret
rorl
add
insl
pusha
popf
pop
add
in
js
inc
loope
lea
icebp
test
mov
xor
xchg
stos
ret
fwait
xor
xlat
jns
push
and
jg
and
cmp
mov
sbb
pop
insl
jmp
adcb
aas
adc
shrl
adc
or
or
dec
fstl
dec
xor
fcomi
pop
lods
jb
add
not
pavgw
js
xchg
adc
movl
mov
pop
cmp
aas
push
inc
inc
dec
xlat
xchg
cmpsl
pusha
pop
cmp
jbe
aas
adc
loop
cwtl
popf
push
xorb
jmp
or
out
ret
test
xchg
jp
add
mov
jecxz
mov
mov
push
inc
dec
pop
jb
sbb
test
out
xor
aad
movsb
dec
push
cmpsb
xchg
adc
or
pushf
inc
stos
in
inc
movsl
stos
in
push
mov
in
ret
rclb
cmp
cmp
movsb
out
leave
xor
jle
movsb
aas
mov
setp
stos
sahf
int3
loopne
add
pop
iret
test
cs
dec
jne
scas
xorl
nop
shrl
pop
aaa
sub
adc
decb
push
outsl
nop
shll
adc
shll
stos
xorb
aam
rol
add
int
cs
out
daa
push
out
pop
add
mov
pop
xlat
call
dec
pop
push
jbe
shll
inc
int
push
lods
call
outsb
addb
bnd
push
punpckldq
push
lock
and
mov
orl
popf
jbe
push
mov
lods
sub
mov
insb
mov
mov
mov
shlb
ret
xor
into
cmc
pop
fadds
jbe
out
fidivrl
fldt
sarb
pop
or
cmp
cld
add
jmp
push
stos
repz
aaa
cmp
call
pop
mov
lea
popa
add
xor
cmp
nop
xorb
int
pop
ss
push
inc
repz
sbb
and
add
xchg
shrl
gs
repnz
ret
xchg
sub
cmp
aad
inc
sti
lods
xor
lods
mov
ja
es
add
xchg
xor
icebp
shrb
scas
and
xchg
pop
jmp
into
mov
js
jns
psubw
aaa
call
arpl
dec
cmp
mov
data16
push
out
test
leave
cmp
cmpsb
andl
pslld
inc
lea
mov
in
push
inc
bswap
jle
out
cld
mov
push
sarb
inc
jae
jge
int3
cwtl
xchg
sbb
and
das
inc
cmp
and
ss
imul
xchg
pop
jg
dec
dec
fisubrs
sbb
pop
mov
out
jl
push
lret
sbb
jns
mov
cwtl
mov
outsb
iret
add
fmuls
dec
repnz
dec
adc
lahf
cmp
fmull
int
dec
loope
lods
fimull
sti
movsl
push
movsl
and
shl
xchg
cmp
mov
mov
sti
cmp
addl
int
data16
inc
cmp
jmp
add
mov
jbe
mov
adc
push
repnz
je
lods
sub
mov
sub
cmp
aam
inc
mov
push
sub
pop
mov
push
nop
xor
sub
xor
in
fmuls
stos
add
in
or
notb
mov
ret
fwait
scas
int3
in
rol
inc
push
mov
sbb
push
loopne
dec
lret
push
mov
mov
stc
and
mov
aaa
xchg
cmpsb
popf
cmp
stos
jo
addr16
xor
mov
mov
jae
test
das
jmp
pop
cmc
insl
push
lret
out
xchg
pop
xchg
sbb
cwtl
fists
daa
mov
lahf
xchg
mov
fwait
pop
push
outsb
loopne
stos
dec
imulb
out
rorl
popa
lret
xorl
pop
push
repnz
icebp
stc
adc
test
or
cld
push
mov
sti
lret
stos
in
test
out
mov
dec
bound
pop
mov
loopne
pop
xchg
mov
scas
scas
mov
fildl
pushf
xchg
aaa
fisubs
daa
sbb
call
test
mov
out
stc
push
mov
movsb
and
mov
hlt
les
xor
std
dec
shlb
scas
mov
xchg
mov
push
cmp
add
popf
iret
je
push
fcmovb
aad
xchg
xchg
ljmp
repnz
scas
or
and
and
jno
lea
mov
push
lods
stc
ret
mov
ret
clc
into
mov
fldcw
ljmp
rcrl
in
sarl
rcl
jp
jo
jmp
cmpsl
dec
inc
jle
test
popa
xor
nop
movsb
cltd
and
ret
in
push
shll
adc
stos
mov
repnz
divb
jns
rcrb
adc
dec
fidivl
jp
xchg
mov
das
jp
adc
and
jns
push
gs
jmp
in
test
mov
lods
xor
dec
popw
lods
jle
or
jo
pop
aas
xchg
dec
xchg
add
jg
dec
or
fldt
aad
mov
sti
dec
mov
pop
mov
cmp
or
fistl
mov
adc
shrb
jns
ss
xor
lods
mov
mov
inc
mov
std
add
movsl
test
inc
jne
loope
test
mov
fimull
shl
aam
and
aas
jl
and
lods
popa
sahf
jl
cld
jns
mov
push
shlb
jl
lret
mov
test
jmp
mulb
or
iret
fs
xor
inc
or
call
and
lods
arpl
stos
movsl
xor
popa
push
xchg
je
fmull
or
fimull
out
dec
insb
mov
adc
or
into
inc
mov
outsl
test
pop
icebp
outsb
mov
stos
xor
loopne
pop
push
jb
sti
scas
fstpt
mov
imul
lahf
fsubs
mov
mov
in
ljmp
jo
pop
dec
xor
pop
idiv
pop
jle
lods
in
dec
mov
mov
lahf
jg
jmp
sub
cmp
outsb
add
shrb
popf
popw
lahf
inc
mov
pop
iret
and
jno
ljmp
adc
aad
pop
scas
in
scas
test
shll
cmp
mov
fildll
xchg
in
jg
js
lock
adc
sbb
inc
into
int
xchg
loop
sti
and
shll
push
jae
fsub
push
jnp
out
hlt
negl
fucomi
rclb
adc
inc
insl
testb
mov
mov
jbe
push
js
and
xchg
shlb
cmp
out
xlat
cmp
ss
loopne
es
lret
fsubrs
xor
xor
pusha
out
outsb
cs
gs
pop
fdivrl
jbe
sti
jmp
cmp
pop
stos
movsl
pop
in
sahf
xchg
fwait
lock
out
sub
daa
pop
outsl
loope
std
out
shl
and
add
push
sahf
nop
mov
pop
lods
sub
xchg
push
mov
inc
pushf
adc
fs
mov
mov
push
fsubs
mov
mov
dec
push
mov
xchg
into
jl
mov
mull
push
gs
xlat
mov
das
lods
imul
subb
pusha
movsb
movsl
nop
mov
fucomip
pop
or
cmpsl
or
add
jmp
fidivl
repnz
loop
fxch
sub
call
fidivrs
sbb
cli
dec
lret
cmp
outsb
ja
cld
outsb
popl
xchg
rclb
mov
cmp
stos
sar
sub
lods
lfs
inc
test
les
fisttpl
hlt
push
jge
bound
movsb
std
enter
test
jo
xchg
xorb
cmp
clc
or
pop
rclb
push
lods
cld
jno
daa
addr16
lock
outsb
add
ljmp
jecxz
pop
mov
cwtl
ds
movsl
mov
pop
pop
shl
testl
jae
ret
into
outsb
mov
jp
push
pop
stos
test
sbb
cmpb
or
and
and
xlat
insl
jle
loop
mov
mov
dec
jnp
mov
fwait
sbb
xchg
stos
jb
add
mov
fisubrs
xor
sub
pop
sti
fiadds
and
out
add
out
pop
fisubrl
xlat
leave
in
sub
cmp
in
sbb
push
mov
mov
mov
jg
mov
mov
je
test
fsubrl
xchg
in
or
into
and
cld
das
roll
fbstp
std
push
repz
aam
ss
les
xorb
cmpsb
sbb
insb
mov
fidivrs
fisubl
pcmpeqw
sbb
sbb
inc
push
xlat
xlat
in
inc
cmp
aas
testl
and
dec
inc
jns
xor
dec
mov
mov
enter
test
sarl
xor
add
fsubp
cltd
imul
fnop
xchg
adc
jo
mov
lods
dec
dec
js
adc
pop
inc
xor
stc
in
insb
sub
xor
xlat
pop
xor
repnz
loop
cmpsb
or
xor
push
or
cmp
mov
test
xchg
sub
push
dec
jae
aad
idivb
sub
and
lds
into
fadd
jg
mov
pushf
stos
shlb
rcrl
nop
jle
jo
hlt
leave
adc
aas
jge
std
sbb
push
es
es
inc
xor
cli
mov
scas
decb
pop
dec
xor
fldt
xchg
cwtl
arpl
sbb
ds
test
les
gs
ljmp
cltd
into
into
lret
pushf
adc
scas
mov
mov
xor
xchg
xchg
mov
dec
sub
stc
movsb
sub
es
pop
dec
loopne
rcr
movb
xchg
fcos
mov
lods
push
cmp
jecxz
fsubr
adc
xor
loope
jnp
dec
jns
mov
dec
jbe
popf
aam
push
sbb
pop
jp
cmpsl
dec
outsb
push
mov
add
leave
or
adc
shlb
ss
lahf
inc
cs
iret
aam
scas
fisttpl
mov
xor
out
jecxz
xchg
push
outsl
jns
jo
push
mov
cwtl
daa
sbb
lds
xor
cmpsb
push
push
cwtl
cli
jle
rcll
sbb
scas
inc
stc
mov
and
add
mov
or
jmp
aaa
lahf
and
push
out
fisttps
jl
inc
push
fbstp
pop
xchg
sbb
and
inc
sub
rcll
jbe,pn
sbb
stos
and
pop
mov
test
scas
insb
dec
or
fildl
adc
mov
dec
out
cmpsb
fildl
adc
loopne
repnz
or
rorb
sub
push
jno
dec
outsb
adc
jle
dec
adc
sub
outsl
cmp
sbb
repnz
mov
xor
sarl
mov
mov
jnp
das
ljmp
mov
pop
arpl
scas
inc
scas
jg
mov
sbb
lods
icebp
sub
xchg
sub
js
repz
fstps
cmp
jne
cmp
rcl
and
pop
lret
adc
mov
cmp
ljmp
stos
jo
scas
push
mov
pop
adc
mov
adc
and
xor
xor
addr16
out
femms
pop
cli
sbb
insb
in
pop
adc
jns
xchg
and
pop
cs
sbb
cwtl
jae
sahf
or
outsb
dec
jnp
mov
cwtl
mov
xchg
or
add
mov
xchg
sub
pop
shlb
loope
jp
sub
fwait
mull
add
inc
xor
jp
fsubrs
je
or
mov
fidivrs
cs
mov
out
pop
into
cld
mov
push
inc
xor
hlt
mov
out
mov
scas
or
arpl
jb
mov
cld
fcoml
lret
sbb
fstps
pop
nop
inc
aas
push
xchg
daa
es
cmp
mov
ficoms
or
mov
pop
or
mov
movsl
dec
nop
sbb
xchg
mov
inc
mov
stc
dec
and
cmp
push
fisttps
pop
shr
or
mov
cmp
lods
jb
mov
or
inc
stos
mov
in
rcrb
dec
mov
testl
arpl
ret
mov
xor
pop
or
outsl
je
aad
fidivrl
inc
and
xor
adc
adc
iret
pop
push
cmp
xchg
xchg
push
pop
sub
push
sub
push
enter
adc
cltd
xor
jge
leave
pop
pop
test
mov
clc
mov
mov
push
inc
stos
push
inc
je
xchg
adc
jg
jne
sbb
ljmp
pop
mov
lock
add
jnp
xchg
cmpsl
clc
movsl
sub
push
push
movsl
fcmovnb
fstpt
les
mov
inc
jnp
gs
dec
inc
xor
insl
fs
sti
mov
test
mov
mov
and
mov
es
pop
scas
int
je
fildll
std
mov
fnsave
movsb
pop
cltd
push
and
cmc
rorb
mov
sbb
shlb
jns
pop
jbe
dec
arpl
xor
adc
dec
jbe
pop
test
xchg
scas
jbe
mov
mov
std
pop
dec
pop
xchg
lds
sbb
mov
cld
jae
sub
jmp
std
fdivrs
pop
push
mov
mov
sbb
sbb
fiaddl
inc
mov
push
pop
jg
pop
add
xchg
sub
cmp
sub
pop
movb
shll
jge
sbb
inc
mov
mov
daa
dec
and
sub
fcmovnbe
dec
xchg
mov
gs
sbb
sub
in
inc
inc
push
mov
mov
nop/reserved
dec
lret
mov
and
out
push
pop
pop
push
dec
popa
or
sbb
stos
fldt
popa
mov
repz
jno
adc
dec
loop
shlb
stc
push
mov
jbe
ret
jge
mov
enterw
jno
mulb
jp
ret
jbe
dec
aaa
jle
cmp
test
enter
sbb
cs
push
loop
sbb
jge
mov
xchg
pushl
inc
aaa
rdpmc
and
xor
push
mov
push
jecxz
and
sub
mov
pop
idivb
mov
es
pop
pop
cmp
push
minps
push
scas
adc
fistl
mov
rorb
les
xchg
lret
gs
jo
dec
sub
dec
jns
add
xor
sbb
outsb
fstpl
dec
jmp
push
adc
adc
jo
sbb
adc
fs
mov
sub
and
pop
adc
das
insb
mov
pop
aas
mov
xchg
dec
adc
decl
mov
jle
divb
shll
sbb
xchg
call
repz
cmp
dec
mov
test
jae
scas
xchg
pusha
xchg
xchg
push
xor
jno
scas
ja
loopne
cwtl
lea
pop
sub
pop
mov
test
push
movsl
out
dec
hlt
xchg
push
ficoml
filds
mov
in
inc
fwait
idiv
es
jg
xchg
xrelease
and
in
stos
xchg
out
std
int3
ss
mov
pop
loop
and
sbb
or
stos
aas
imull
in
outsw
pop
mov
dec
inc
and
mov
stc
xorl
push
hlt
popa
add
fs
cmp
nop
add
add
leave
inc
lock
call
mov
jecxz
jne
pop
mov
pop
dec
sub
xchg
lret
push
ret
jbe
ficompl
shl
add
fwait
jp
xor
jl
cmpb
add
push
imull
sub
pop
jg
dec
sbb
cmp
idivl
ljmp
mov
mov
push
pop
neg
aaa
sub
pop
xchg
xchg
push
jns
mov
aad
mov
jle
xor
adc
aam
lock
push
lret
clc
pop
jecxz
mov
sbb
shll
outsl
insl
lcall
sarb
xor
xchg
sbb
xchg
xchg
push
mov
cmp
lcall
popa
inc
or
sub
movsl
in
in
push
outsb
adc
and
cmp
popa
inc
jmp
outsl
fldt
adc
scas
xor
divb
and
scas
or
bnd
addr16
insl
mov
popa
xchg
outsb
mov
fldt
inc
lcall
cmp
sub
ljmp
movsl
addr16
xor
push
or
inc
sub
mov
pop
dec
inc
push
add
sti
xlat
xchg
fisubl
xor
push
xor
xor
pop
das
movsb
popa
lret
sbb
xchg
test
pop
lahf
dec
test
add
pop
pop
cs
lret
xor
andl
ret
add
movsb
ljmp
dec
insb
sbb
push
les
icebp
imul
rcrl
stos
sub
gs
jb
repz
mov
out
add
cmp
bound
mov
lods
jmp
lret
xchg
xchg
fistl
stc
adc
and
pusha
sbb
xor
outsl
int3
in
sbb
int
inc
push
xchg
and
pushf
mov
out
push
fdivs
xor
mov
fstp
push
xchg
out
cld
scas
pop
adc
cmpsb
mov
test
fs
push
and
cmp
sti
cmp
adc
jecxz
jg
push
sub
push
sub
aad
cwtl
pop
inc
sbb
xor
jp
and
in
nop
enter
pop
cltd
out
repz
jnp
sub
rcll
stos
je
loopne
and
popa
bnd
jmp
fldt
sbb
sbb
in
stos
lock
movsb
fwait
lret
mov
pop
das
das
aad
mov
ret
stc
call
push
xchg
mov
mov
sbb
clc
fistl
mov
mov
loop
cld
mov
data16
clc
inc
pop
push
movsb
fmulp
inc
or
cmovg
and
mov
pop
add
mov
lods
bound
pop
test
inc
sub
lcall
sbb
push
sub
or
ds
dec
std
les
int
jae
sub
or
pop
shll
fbld
jbe
sti
insb
mov
xor
mov
lods
rol
fwait
fs
jecxz
push
lods
inc
sub
orl
dec
fidivs
stos
dec
test
inc
inc
lret
pop
aam
movsb
pop
addl
std
out
stos
jne
mov
pop
xlat
mov
add
es
rolb
mov
movsb
cmp
xor
call
cmpsb
fwait
imul
cld
subl
repz
push
mov
cmp
lahf
inc
test
dec
cmpsb
daa
mov
push
xor
or
or
inc
ss
mov
gs
mov
dec
loopne
mov
out
mov
aad
xor
push
xchg
in
lds
pop
xchg
jns
out
mov
aam
and
mov
sub
aas
orl
pop
dec
flds
inc
ds
push
data16
fists
and
jge
stos
insl
cmpb
mov
push
pushf
sub
inc
fs
add
imul
outsl
out
adc
add
imul
fdivr
mov
push
lcall
out
adc
in
ja
stos
add
or
xchg
rcll
mov
ret
mov
mov
dec
mov
inc
aam
cld
push
add
xorl
mov
bound
jecxz
pop
mov
lret
dec
dec
and
push
scas
push
in
dec
xchg
enter
sub
pop
sbb
adc
jecxz
ret
xor
movsl
jns
and
shlb
test
clc
int3
jo
repnz
sbb
clc
popa
pop
dec
push
test
inc
iret
xchg
and
daa
sbbb
add
ljmp
mov
mov
sub
adc
cmp
dec
add
cli
fistl
sub
stos
sub
in
or
or
shll
aam
ret
test
rcll
daa
addb
xor
movsl
xchg
into
mov
iret
pop
es
jmp
pop
inc
xlat
outsb
push
dec
push
loope
jl
mov
cmp
jge
jno
lea
jle
mov
ja
arpl
and
or
inc
xor
lods
cltd
insl
xor
loope
popf
popf
sbb
test
jne
lds
xchg
roll
jecxz
into
mov
popa
test
in
imulb
jmp
inc
or
dec
adc
and
inc
cs
cmp
outsl
add
add
sbbl
push
mov
sbb
lods
in
repnz
insb
les
xchg
jp
fldcw
ret
mov
repnz
pop
mov
pop
fs
outsb
mov
aad
in
int3
mov
movsb
pop
push
pop
sbb
mov
push
std
popa
or
push
push
ja
xor
ret
mov
ljmp
mov
pop
fcmovb
and
imul
inc
mov
cltd
mov
lret
ljmp
bound
scas
dec
rorl
sti
inc
cmp
ret
gs
lds
pop
xor
xchg
inc
cmpl
sbb
pop
xchg
inc
rorl
cs
adc
xlat
enter
sub
mov
mov
jge
and
ficoms
fcoms
dec
jecxz
xchg
xchg
stos
fsubs
imul
inc
pop
mov
mov
jnp
xchg
jl
mov
mov
cwtl
rolb
adc
cmp
ljmp
bound
cmp
arpl
mov
cmc
ret
push
mov
or
add
push
jg
xor
inc
or
mov
mov
loopne
hlt
aaa
out
mov
push
xorb
mov
add
push
inc
lret
lds
inc
and
ljmpw
insb
inc
call
dec
imul
je
in
in
xchg
fisttps
inc
push
dec
push
sub
lret
ljmp
cmp
inc
cld
dec
cwtl
xchg
stos
push
cltd
dec
dec
fstpt
jmp
test
adc
mov
bound
mov
cwtl
and
dec
adcl
mov
mov
lret
mov
mov
xor
jns
mov
notl
cmp
mov
stos
outsl
dec
das
lret
sub
mov
pop
aam
jle
movsb
xor
jo
jmp
out
mov
popf
xor
fldl
pushf
aaa
push
clc
pop
cmp
sti
int3
jae
push
mov
xchg
jg
mov
or
data16
mov
iret
imul
dec
inc
leave
jp
movsb
loop
mov
daa
movsl
aaa
sbb
aam
adc
ljmp
movsl
xchg
clc
test
adc
xor
sar
lds
aad
loopne
xorb
fidivs
scas
jno
push
pop
sub
jmp
inc
push
fs
cs
mov
mov
cmp
enter
cmp
int
mov
adc
mov
shll
cs
mov
mov
mov
cli
mov
jle
push
or
popf
std
hlt
jl
sub
pop
jg
inc
jno
mov
mov
aam
pop
les
mov
and
pop
push
mov
test
mov
fisttpll
pop
in
mov
aaa
pop
ficoms
lock
fwait
rol
hlt
sti
jno
xor
scas
xchg
test
or
pop
testb
add
mov
fbstp
xchg
dec
jnp
push
fnsetpm(287
dec
add
ss
int
push
cmp
js
inc
adc
jns
and
insb
jmp
add
orl
stos
xchg
and
in
test
test
or
hlt
or
shll
adc
popf
leave
lds
hlt
lea
mov
sarl
or
outsl
adc
push
and
add
adcl
mov
popf
mov
xchg
xchg
dec
sbb
sub
xorb
gs
sbb
xchg
pop
daa
or
fsubl
imul
imull
cli
outsl
test
mov
xchg
xor
stos
push
jmp
and
xor
mov
cmp
xor
inc
mov
inc
sub
mov
shl
pop
scas
or
rcrl
sti
mov
adc
rorb
out
mov
push
pop
cmp
cld
add
fiaddl
cmp
adc
push
and
fldt
jbe
lret
and
push
enter
fdivr
add
xchg
push
das
enter
push
cmpsl
aaa
mov
inc
and
in
push
iret
lcall
or
cmp
push
insl
jle
in
xchg
mov
jb
pop
sub
push
or
xor
or
xor
pop
mov
lock
inc
mov
fldl
scas
sbb
movsb
in
mov
call
in
mov
shrl
repz
mov
jmp
xor
je
and
arpl
jl
pop
loop
std
push
iret
adc
fpatan
gs
xchg
dec
or
rcll
xchg
xor
lds
pop
and
jmp
inc
inc
imul
pop
ret
and
sub
ret
mov
pop
dec
repnz
aam
cli
insb
lret
jp
xchg
push
popf
stc
push
or
inc
lahf
rorb
xchg
xor
ja
lret
inc
lock
mov
cmp
adc
xor
sub
mov
into
pop
sbb
or
mov
ret
xchg
dec
xchg
pusha
xchg
jbe
fwait
inc
mov
cmc
scas
rolb
lods
or
lea
iret
mov
arpl
dec
in
mov
or
sub
jg
addb
frstor
subb
mov
sub
jae
faddl
push
in
mov
loopne
movntps
jnp
xchg
push
push
nop
cmp
pop
xor
sbb
xor
push
pop
cmc
sbb
and
out
lods
jb
mov
xchg
stos
bound
ret
and
popf
adc
push
push
cmp
mov
inc
dec
pop
orl
adc
imul
sub
hlt
sahf
sbbb
mov
fwait
sbb
fcmovbe
dec
push
fwait
pop
repz
js
pop
int3
insl
in
mov
add
sbb
dec
sub
rcrl
insl
fmuls
sub
loope
dec
mov
pop
fs
jmp
jnp
push
xor
push
fstpl
insb
cmpb
jae
pop
in
and
lret
mov
jns
roll
in
fs
inc
adc
xlat
lock
mov
ds
js
loop
ret
add
and
xchg
int
adc
lock
and
mov
sub
cltd
repnz
stos
dec
ud0
xorl
testb
jo
xchg
movb
orl
lret
inc
cmp
xor
leave
or
inc
int3
mov
xchg
and
cmp
or
in
arpl
push
inc
push
rcl
cmpsb
mov
add
cmp
lahf
std
sub
xor
mov
lock
push
push
inc
in
mov
adc
or
adcl
push
out
or
xchg
xor
fsubrs
dec
pusha
cs
out
xchg
mov
lea
outsb
jbe
loop
cmpsl
push
inc
adc
cld
xor
out
mov
jecxz
jae
cmp
cmp
adc
js
xchg
xchg
out
dec
les
mov
cmpsl
ja
fsub
cmp
dec
enter
mov
xlat
jne
add
les
imul
jl
std
mov
addr16
imul
mov
ja
mov
push
negb
enter
in
gs
imul
mov
or
fistpl
jns
rorb
dec
jae
lret
pop
lods
lret
cli
cmp
in
mov
stc
lret
fnsave
push
jne
jno
or
xchg
pop
mov
push
mov
lcall
pop
pop
inc
jle
shl
sub
out
inc
imul
push
fdivp
fcmovnb
dec
pop
or
cmpsl
xor
pop
gs
push
adc
es
push
inc
shll
jl
adc
jp
mov
popa
lret
and
dec
inc
mov
pushf
push
cmp
jmp
fdiv
loop
ret
xor
xchg
jecxz
outsb
push
movsb
mov
sub
xor
dec
ret
inc
cli
cmp
shlb
leave
xor
and
xchg
sub
stos
rclb
cmp
push
enter
push
stos
adc
mov
cmp
jne
xchg
mov
fsubrs
aam
cli
inc
sarb
xchg
push
bound
cmpsl
sbb
add
jmp
cmp
dec
lea
aam
mov
add
les
inc
and
mov
xor
in
fs
xchg
movsb
negl
jae
inc
adc
push
fwait
inc
mov
push
push
sbb
outsb
bt
or
dec
loope
pop
rol
xchg
lcall
lcall
add
mov
das
add
sbb
push
push
sub
mov
fadds
arpl
sub
insl
cmp
pop
inc
lea
sub
and
push
es
in
mov
adc
push
ret
iret
vminsd
mov
push
or
mov
xor
and
cmp
sub
push
aad
xchg
mov
stos
sbb
aad
cltd
and
mov
dec
popa
das
out
xchg
outsb
xchg
leave
icebp
insl
adc
loop
scas
out
lds
mov
push
add
push
ja
adc
rorl
lods
mov
push
cld
xor
stos
movsb
xchg
cmp
jnp
aaa
out
data16
insl
aad
dec
loopne
lcall
popa
cmp
stos
cli
lock
pop
mov
push
into
stos
and
mov
into
mov
jae
fwait
ret
xchg
loop
inc
leave
outsb
mov
xchg
pusha
xor
jp
imul
jno
add
and
xor
mov
pop
add
jae
push
gs
pop
push
and
dec
push
shl
mull
pop
pop
ret
clc
repnz
inc
xchg
movsb
hlt
jle
out
xchg
add
dec
iret
dec
sub
lea
or
mov
rcl
cmp
xchg
rolb
push
pop
arpl
mov
jmp
cmp
inc
int3
repnz
int3
sti
in
and
dec
addl
inc
xchg
rolb
rolb
adc
sahf
and
scas
sub
hlt
push
dec
mov
and
mov
and
mov
pop
scas
mov
stos
sbbl
cmp
lods
and
add
lahf
movsl
je
inc
gs
mov
push
jo
dec
ja
jne
mov
aam
pushf
or
insb
popf
in
aam
movl
jae
dec
cmpsl
sahf
mov
cmc
cmp
imul
dec
or
fadd
add
mov
pop
and
enter
mov
lock
insl
push
int3
cmp
mov
inc
fcom
lods
jg
out
cmpsb
mul
ljmp
rcll
mov
jns
iret
loope
shll
push
mov
mov
cmp
cmpl
add
std
pushf
lds
or
stos
add
js
jnp
imul
jbe
sar
push
mov
aas
movsl
stc
or
fcoms
in
enter
xchg
fldenv
pop
ficompl
dec
push
or
or
in
xor
dec
add
xor
add
ficomps
push
xchg
inc
cmp
mov
inc
mov
rolb
jbe
jl
jmp
pushf
xchg
mov
int3
popf
push
add
sti
das
mov
out
and
mov
mov
pop
aad
mov
xchg
sub
and
or
mov
mov
pushf
mov
shll
inc
push
mov
rcl
mov
lods
add
sub
stos
arpl
jle
fwait
dec
push
mov
mov
aaa
or
arpl
les
or
out
les
add
in
or
xchg
movsl
mov
xchg
outsb
jle,pt
jns
xor
inc
add
cmp
add
lcall
pusha
xchg
mov
pop
xchg
pop
pop
dec
jbe
fs
lods
inc
add
cmp
jge
nop
jg
ret
mov
cmc
pop
cmpsl
mov
sbb
push
or
icebp
push
cmp
subb
adc
sbb
adc
mov
mov
movsl
sahf
adc
xchg
pop
mov
test
jle
rorb
jne
fidivl
mov
in
popf
sbb
popa
xchg
cmp
mov
pusha
xchg
mov
xchg
je
add
xchg
adc
mov
orl
add
mov
je
and
popf
xchg
out
lea
sbb
sub
dec
pop
adc
hlt
js
cmp
mov
mov
out
or
scas
ds
inc
push
in
cwtl
aaa
jo
dec
xchg
insb
insl
imul
shl
mov
jge
insl
mov
testl
mov
lahf
cmp
in
push
mov
xchg
pop
mov
pop
loop
cltd
adc
dec
mov
xchg
push
cmp
push
in
mov
outsb
pop
inc
adc
popf
mov
pusha
fwait
aad
add
jns
fcomp
das
imul
pusha
inc
addr16
fiaddl
pusha
jmp
inc
dec
xchg
sub
mov
rorb
scas
push
mov
xor
push
mov
sub
rorl
pop
jp
outsl
cmc
aad
cmc
inc
push
insb
jb
in
mov
cmc
mov
xchg
pop
inc
cmpsb
cmpsb
lret
cwtl
inc
add
cld
push
pop
xchg
out
pusha
ficompl
orl
adc
jnp
sbb
sti
mov
in
in
mov
push
xchg
xchg
insl
lock
cld
jns
cmp
bnd
push
divb
in
sub
out
lcall
daa
fdivl
sbb
xchg
sub
dec
sbb
adcb
lret
out
push
adc
hlt
into
inc
pop
mov
xchg
ja
shlb
push
cltd
add
fildl
sub
sbb
push
fs
push
pop
adc
lea
inc
mov
inc
adc
push
faddl
push
cmp
gs
pop
xchg
sahf
in
imul
jno
push
inc
imul
pop
push
scas
xor
cwtl
push
cs
and
jle
mov
aas
das
ret
lods
dec
xor
push
imul
mov
pushf
fcomp
ljmp
pushf
xor
ljmp
test
iret
push
dec
jle
loop
push
xor
push
fs
sub
call
dec
jnp
mov
mov
mov
cmp
cmp
fbstp
fcmovbe
mov
dec
and
std
scas
cmp
jl
orb
hlt
adc
pop
pop
cld
sub
das
lock
xchg
adc
sub
jno
jne
mov
dec
pop
inc
fisttpll
xlat
xchg
lods
lods
mov
xchg
push
sub
loopne
jg
int
dec
testb
ret
xlat
cltd
fbld
pop
mov
imul
push
push
push
pop
into
mov
lock
and
movsl
loop
loope,pt
jb
inc
sub
imulb
clc
add
add
push
dec
cmp
insb
cmp
dec
pusha
loop
push
fmulp
aad
in
rcrl
cs
jmp
mov
insb
cs
shll
sub
sbb
inc
xor
jns
mov
rol
or
push
fldenv
stc
aas
pop
into
aaa
lret
cli
cs
inc
fidivl
mov
dec
xor
outsl
cmp
js
scas
fbld
clc
adc
xchg
mov
jmp
push
pop
adcb
or
and
gs
dec
lods
sub
xorl
imul
xchg
adc
arpl
test
fs
dec
aas
popa
ja
jae
lods
pop
mov
xchg
ss
xor
xchg
in
cmpsb
mov
stos
jnp
cltd
sbb
dec
mov
pop
jae
add
mov
xchg
es
mov
sbb
in
mov
call
jne
sub
inc
push
mov
movd
lahf
test
mov
add
xor
jo
pop
cmpsb
inc
pop
sti
xor
adc
out
push
inc
imul
pop
out
fwait
icebp
mov
push
cs
test
stos
stos
mov
in
mov
jge
mov
int3
cmp
lock
rcr
mov
add
mov
mov
popf
pop
xchg
ljmp
mov
in
out
jp
les
rolb
xchg
outsl
divl
xor
mov
mov
fisubrs
add
dec
ljmp
cltd
aam
nop
in
rol
mov
mov
loopne
and
sbb
lea
pop
inc
movsb
xor
lret
js
in
xor
push
add
inc
cmp
mov
test
leave
and
fstpl
pop
bound
test
cli
push
mov
or
test
push
fistpl
add
mov
pop
mov
cmp
xchg
pop
adc
inc
jl
add
je
cs
stos
xchg
adc
pop
or
pop
cmpsl
lea
in
mov
testb
into
mov
or
mov
incb
test
jle
shll
dec
repz
fs
pop
jae
fadd
mov
dec
mov
add
xchg
out
popa
mov
push
jne
sbb
sbb
pop
push
sbb
mov
sub
and
dec
aad
out
pushf
arpl
popf
icebp
in
push
sub
adc
xor
adc
push
movsb
inc
cmpsb
push
lods
ja
inc
lret
aas
nop
push
add
xchg
in
mov
jmp
jno
out
xor
sub
or
inc
lcall
xlat
dec
movsb
mov
out
pusha
jg
jge
sti
clc
mov
outsb
xchg
das
sbb
add
insl
insl
scas
push
inc
mov
mov
adc
stc
jne
pop
sub
mov
jno
jmp
dec
mov
ret
int
mov
test
mov
int
je
push
int
push
and
and
imul
out
insb
in
add
leave
shlb
lcall
cmc
daa
pop
inc
pushf
movsb
push
sub
imul
xor
ja
flds
pop
in
mov
mov
cmp
cltd
into
dec
mov
mov
push
cld
jle
jno
stc
mov
std
mov
xchg
push
and
mov
lret
adc
shlb
inc
mov
roll
ret
fistps
cs
out
add
mov
lret
push
lcall
cmp
jecxz
sbb
dec
dec
inc
test
mov
pushf
push
enter
int3
out
sbb
pop
inc
pop
nop
inc
mov
subb
mov
pop
aad
fisubl
sbb
sbb
xchg
push
in
jmp
or
out
cmpsl
inc
nop
dec
ror
movsl
xchg
shl
add
pop
imul
mov
mov
mov
loopne
cmp
mov
jae
insb
shrb
inc
lds
jne
sbb
add
push
cmp
lea
inc
push
fadds
xchg
sbb
pop
gs
and
test
out
jl
jg
scas
pusha
pop
dec
mov
mov
ret
jl
xor
sbb
mov
fucom
adc
les
push
data16
jae
ss
push
dec
lret
in
repnz
shrb
movsl
das
pop
dec
pushf
inc
pop
jmp
std
movsb
and
loop
movsl
or
cmp
adc
xchg
dec
sbb
cmp
pop
push
adc
jno
movsb
fwait
scas
cmp
add
lods
adcb
stos
aad
sbb
and
rcr
mov
sbbl
jns
arpl
frstor
jbe
test
inc
addl
xchg
inc
jp
clc
and
stos
cltd
mov
lods
mov
imul
or
xchg
and
ret
push
add
mov
pop
clc
mov
cmpsl
out
add
cmp
sbb
xchg
push
lcall
lock
mov
push
aad
loope
cmc
lret
xor
or
mov
push
inc
sub
out
fs
xor
mov
dec
rcrb
push
les
in
cmpsl
fiaddl
std
test
add
fwait
inc
test
add
mov
mov
rcll
push
adc
stos
sub
adcb
pop
sbb
lret
cmp
push
mov
sbb
pop
daa
mov
movsb
das
sti
sbb
sbb
push
cwtl
outsb
push
cmp
xor
imul
shr
leave
sub
adc
mov
xor
mov
mov
pop
js
xor
sbb
sub
mov
mov
cmc
cmp
sbb
mov
nop
mov
cmp
ficoml
or
ja
in
jae
push
push
fisttps
mov
cmp
stc
adc
ss
nop
add
or
mov
jmp
xlat
out
jns
lret
movsl
pop
int3
es
int3
ljmp
enter
xchg
out
or
dec
fiadds
xchg
bound
inc
cmpsb
xchg
xchg
mov
or
stos
push
data16
gs
sbb
pushf
outsl
xchg
mov
mov
dec
imul
lea
push
add
in
das
adc
adc
mov
jo
inc
jo
push
jg
push
into
jmp
clc
in
test
mov
and
xor
dec
add
fsub
inc
adc
and
loopne
cmp
inc
cmpsb
cmpsl
and
sahf
mov
add
clc
adc
lahf
sub
mov
loop
push
movsl
and
leave
jle
insb
cmpsl
pop
push
stos
push
js
jbe
push
xlat
or
inc
mov
cmp
cmpsl
and
insb
adc
mov
fwait
dec
pop
add
push
xor
cmp
loope
stc
loope
in
lds
dec
mov
insl
inc
out
and
out
popa
push
adc
cli
out
mov
mov
and
roll
cmp
inc
int3
mov
sub
or
dec
or
jns
cs
arpl
jnp
call
int3
lret
sbb
movsl
into
jmp
rorb
xor
mov
jno
scas
jp
xor
mov
jo
js
test
sub
and
fisttpll
into
mov
push
sahf
pop
mov
clc
push
mov
int3
sarb
xor
call
daa
cmpsl
pop
cmpsl
sbb
xchg
pusha
lds
scas
pop
sarl
jbe
popa
jo
mov
insb
sub
sbb
adc
mov
xchg
popf
je
pop
cmp
push
iret
rcll
loopne
mov
ret
not
fcomps
jecxz
cld
mov
insl
dec
loop
popa
push
stc
hlt
jl
push
lds
xor
insb
jg
push
sbb
adc
aam
clc
push
imul
sbb
rcrl
insb
sbb
add
sbb
inc
stc
mov
cmpsl
test
inc
and
pop
or
add
fwait
push
movsl
mov
push
add
jl
xor
xor
subb
fmuls
inc
rcrl
clc
out
into
jns
jmp
inc
out
add
and
pop
xor
in
and
cmp
stos
fsubrs
cmp
xchg
sbb
adc
cmp
xchg
enter
aam
enter
repz
mov
xchg
fcmovu
sarb
push
cmp
sbb
das
outsb
bound
popf
bound
jo
filds
mov
ret
sbb
aad
sar
add
pop
fstpt
outsl
jl
lret
and
jns
andl
mov
cmp
mov
pusha
add
mov
mov
cli
xor
xor
aas
out
mov
lret
lock
jbe
sbb
in
cmpsw
sub
jmp
std
leave
mov
pop
inc
imul
enter
shll
dec
jp
scas
adc
sarl
clc
push
ret
push
insl
lods
jmp
push
push
scas
push
sbb
fsubr
xor
adc
lret
dec
stos
test
inc
lret
idivl
sub
sbb
pop
out
fsubs
adc
stc
repz
xchg
xor
push
in
mov
xchg
push
test
add
push
push
fcomps
push
cmp
jmp
jl
divl
mov
int
adc
roll
std
aaa
outsl
adc
cmp
or
xor
dec
sbb
pop
lods
popa
pop
add
jg
jge
add
cmp
and
sbb
aas
push
inc
movsl
push
adc
std
mov
sbb
aas
xchg
dec
xor
mov
lret
out
dec
add
movsb
je
es
ds
pop
jbe
stos
or
fisttps
jae
xchg
stos
cld
sub
or
sbb
cltd
fwait
aad
push
lret
cmp
lcall
or
popf
ds
cld
aas
scas
dec
daa
lods
dec
shlb
push
mov
adc
push
sahf
jg
shrl
addb
xorl
mov
jo
and
pop
call
inc
btcl
inc
popa
xor
xor
dec
sbb
xorb
inc
rorl
js
cld
add
xchg
stos
add
stos
popa
lret
mov
mov
push
je
addr16
mov
mov
movsb
sub
add
cmp
in
jb
das
pop
xchg
stc
pop
aad
aam
pusha
call
out
mov
test
xor
popf
mov
push
scas
add
call
mov
sub
cmpsb
shll
sbb
jecxz
fldcw
cmc
push
bound
mov
dec
or
jne
inc
add
adc
cmc
push
dec
add
jp
rcrb
enter
imul
ret
ja
xchg
jns
xlat
sub
or
dec
ret
pop
adc
repnz
inc
xor
mov
out
sbb
mov
jp
out
sbb
mov
clc
adc
pop
jae
psrad
repnz
dec
adc
cmp
fs
mov
mov
sbb
cltd
out
sub
int
in
push
out
mov
call
jecxz
scas
and
movsb
mov
cmc
and
or
aaa
movsb
mov
icebp
pop
cltd
jg
inc
xchg
cli
ljmp
xor
pop
or
xlat
aam
sub
adc
es
cld
std
add
lods
fmul
mov
ja
mov
jno
mov
sti
and
and
mov
xorl
or
lret
loopne
nop
jb
popa
faddl
xchg
hlt
aad
rcrl
jge
shrl
sub
clc
inc
fnsave
xchg
sub
enter
mov
dec
mov
sbb
push
and
mov
call
fisubrs
stos
add
popl
out
rcll
ficoms
add
repnz
daa
into
sub
push
insb
pop
mov
out
dec
mov
xchg
inc
inc
popf
inc
outsb
and
out
imul
xor
xor
push
lret
jns
imulb
mov
popf
test
adc
and
out
bound
pop
push
push
jno
dec
lret
stos
sbb
leave
pop
scas
pop
add
cmp
mov
inc
std
xchg
movsl
mov
dec
jns
push
jo
push
mov
test
cli
xlat
jae
xor
dec
jne
sub
sbb
sahf
cli
repz
or
popf
inc
adc
cmp
mov
sahf
and
fidivrs
addl
stos
dec
lea
sbb
mov
loope
push
push
jge
ss
push
mov
cli
inc
xchg
scas
jae
sub
mov
mov
into
mov
xchg
xor
pop
mov
mov
imul
jne
ffreep
jae
add
mov
xlat
xorb
cmpsb
scas
jne
pop
inc
xchg
xchg
push
cli
aas
adc
imul
inc
pop
xor
xlat
shrl
pop
sub
insb
xor
mov
test
ret
inc
sbb
insb
jb
movsl
andl
sub
mov
fsubrl
push
dec
sub
sbb
inc
adc
sub
xchg
stos
or
and
sbb
pop
les
adc
mov
push
aam
scas
je
jecxz
sub
fwait
xchg
cmp
pop
int
or
in
jmp
sub
aas
leave
xchg
cmpsl
test
test
rorl
xor
pusha
push
std
fstp
pop
adc
gs
repz
mov
pop
out
in
ret
sub
dec
fisubl
push
sahf
mov
xchg
clc
push
jg
xchg
sbb
lea
push
fwait
cltd
lods
push
adc
xor
pop
int3
xor
repnz
inc
das
push
fadd
nop
je
dec
mov
pusha
je
xor
lret
testl
testl
ja
jecxz
ror
fldl
and
js
inc
and
xchg
imul
in
pop
push
mov
out
push
pop
cmp
mov
jecxz
cltd
inc
mov
add
cmpsl
or
push
cmc
pop
adc
inc
push
nop
jno
and
push
aas
out
mov
mov
sub
or
test
sbb
mov
add
data16
mov
push
push
mov
and
inc
pop
jl
dec
jno
nop
xor
adc
xchg
out
add
cltd
popa
sub
mov
inc
int
dec
xchg
and
cmp
cmpsb
stos
mov
push
fwait
fwait
cmp
je
push
mov
fcom
cltd
into
lods
fdivrl
in
mov
and
outsb
pop
push
sub
or
repz
pop
rorl
inc
inc
test
sarl
add
test
xchg
enter
ror
mov
sub
jmp
loope
jnp
lret
xor
adc
push
mov
leave
lahf
mov
jno
sub
pop
mov
sub
insl
add
addr16
jnp
popa
pop
in
into
test
push
shrl
fmuls
mov
repz
idivl
iret
mov
bound
mov
nop
fwait
add
das
hlt
push
sub
xor
inc
mov
sub
popa
pop
mov
inc
loope
xor
icebp
push
xchg
cmp
daa
and
or
mov
pop
int
jns
call
jp
stos
mulb
jle
inc
in
and
jo
add
ret
lds
mov
mov
cmp
insb
mov
xor
xlat
lret
xchg
fnstenv
jne
inc
fstpt
sbbl
lahf
jge
pushf
jmp
imul
push
mov
pop
mov
or
ds
rcrl
xor
add
fidivl
sub
sub
sbb
or
pop
push
mov
add
dec
xchg
stos
negl
pop
iret
in
mov
add
push
scas
xor
dec
mov
dec
iret
shrb
ja
mov
popf
iret
sbb
sub
add
jbe
xchg
jae
xor
notl
clc
je
mov
pusha
outsl
data16
jle
fcmovne
jbe
mov
pop
sbb
adcb
scas
dec
scas
mov
test
lret
xchg
xlat
inc
pushf
rcll
add
mov
pop
pop
mov
scas
aaa
scas
or
sub
push
movsl
loopne
add
ss
or
add
sbb
mov
jb
out
lret
cmpsl
push
and
pop
lock
out
jno
fadds
sub
pop
out
xchg
ret
outsl
insl
and
rep
add
test
adc
push
push
jo
sbb
xor
testb
lret
sub
cmpb
adc
insb
dec
mov
sbb
pop
icebp
mov
xchg
add
cmp
xor
jge
mov
or
dec
shrl
or
jbe
push
scas
add
or
jle
aam
jg
sbb
push
lret
adc
cmp
mov
in
cwtl
dec
inc
inc
jno
xchg
popl
cmpsl
mov
jl
mov
adc
ret
ficoms
inc
stc
in
stos
xchg
dec
inc
jecxz
das
cmpsb
fildll
mov
daa
daa
xchg
pusha
or
int
enter
lea
mov
mov
adc
mov
adc
mov
insl
clc
cs
call
lea
cmp
xchg
mov
fdivrl
fistpl
inc
adc
cmpsb
xchg
and
mov
adc
cmp
add
stc
and
fwait
lret
mov
fidivs
mov
xchg
xchg
mov
cmp
mov
adc
lds
scas
je
xchg
imul
jecxz
rcll
outsb
pop
pop
in
in
fldenv
and
stc
jmp
imul
rcrb
mov
and
jne
mov
rolb
xchg
enter
into
sbb
xchg
mov
inc
lret
mov
shrl
dec
cmp
insl
mov
jp
lds
movsl
ror
out
jne
mov
ss
mov
push
mov
and
inc
add
cmp
cltd
fcomps
push
sbb
add
cwtl
sbbb
movswl
xor
xchg
push
cwtl
loop
push
out
lds
cmp
mov
pop
repnz
loopne
rcll
test
idiv
mov
cmpsb
lock
pop
ss
push
mov
fwait
or
xchg
pop
fisubrs
icebp
xchg
shr
orb
in
sbb
mov
adc
out
sbb
push
jne
xor
fiadds
int3
jecxz
cmpsb
dec
or
dec
mov
loope
aaa
cmp
mov
leave
call
and
icebp
jae
xchg
xchg
fistps
cwtl
add
out
out
xchg
dec
scas
jge
lret
je
add
imul
fcmovbe
shrb
sub
dec
ret
bound
and
inc
sbb
fildl
sub
aad
es
and
inc
jo
shlb
fwait
ret
out
sbb
cs
mov
adc
cli
inc
outsb
sub
dec
repz
or
js
xchg
push
cmp
mov
mov
dec
and
mov
orb
mov
lock
xchg
call
xchg
dec
pop
bnd
mov
mov
xchg
xchg
add
xchg
or
xchg
clc
movsl
cmc
mov
or
dec
mov
notl
cmp
out
aam
push
into
mov
loopne
mov
and
jnp
push
call
sub
mov
pop
lret
cmp
mov
xchg
in
addr16
clc
int
in
fisubrs
cli
adc
xor
int
in
or
pop
and
push
jns
jne
adc
and
sbb
and
cmc
pop
int
into
cmp
and
adc
loope
push
pop
cmp
icebp
pop
push
mov
cmp
push
jp
dec
mov
pop
or
xchg
xor
pop
enter
mov
mov
lcall
xchg
pop
daa
pop
fs
pusha
adc
pop
scas
mov
cmp
scas
aad
cmp
int3
dec
loop
ja
mov
mov
push
dec
push
adc
in
je
jge
xchg
std
mov
ja
sbb
dec
mov
cltd
mov
ret
push
stc
stos
call
xchg
cli
fists
xchg
jp
sti
lcall
sub
in
in
rcrl
fiadds
mov
dec
cmp
out
jle
and
pop
in
scas
insb
xor
data16
cmpsl
insl
jl
cmp
lock
ljmp
lods
pop
add
fdivr
sub
cli
fmull
add
in
cmpsb
mov
sbb
adc
cs
lret
lcall
mov
vcvttps2dq
pop
and
or
xchg
loopne
popa
cmp
rcl
popf
cmp
les
imul
mov
dec
dec
jae
jo
inc
inc
pop
sbb
sbb
mov
mov
xchg
loopne
add
adc
add
sub
xchg
add
add
mov
imulb
mov
fmull
jno
mov
cmp
cmp
pop
lcall
sub
mov
and
inc
outsl
std
daa
xchg
movsb
ret
inc
cld
outsb
ja
test
lret
sbb
cltd
fisubrl
push
int
adc
mov
fwait
sti
xchg
pop
mov
xor
inc
mov
adc
pop
mov
inc
mov
inc
int3
dec
imul
popa
test
ret
xchg
rcr
lcall
fwait
cmpsb
add
or
ja
sbb
cmp
jae
andl
push
imul
xchg
rcll
lock
xchg
shll
mov
lret
and
cmc
lcall
mov
sbb
xor
mov
in
mov
outsl
stos
jg
mov
adc
or
pop
in
sbb
jne
insb
pop
imul
add
cmpl
mov
call
scas
dec
inc
add
jae
dec
enter
cmp
mov
or
lods
lahf
divb
daa
xor
andl
lods
addb
mov
stc
pop
sbb
mov
sbb
and
inc
mov
stc
or
scas
xchg
mov
push
loop
sbb
add
and
push
pop
jl
filds
add
jns
in
rcll
loopne
lahf
addr16
rcrb
lahf
pop
scas
cld
pop
cmp
out
push
das
lretw
rcll
ret
fdivrl
cli
popa
mov
aas
pop
xchg
mov
loope
inc
jnp
test
xchg
bound
lret
mov
sbb
lods
sbb
cmp
push
dec
aas
repnz
rolb
jl
mov
sbb
push
test
loop
mov
repnz
mov
into
sub
cmpsb
dec
pop
cs
xchg
jns
pop
xor
int3
cld
inc
cltd
and
adc
sub
add
and
test
sbb
repnz
outsl
andl
xor
into
push
cmp
icebp
lods
cmp
and
out
fisubl
leave
imul
je
divb
popf
mov
aad
inc
scas
leave
cld
andb
shl
adc
push
stos
jno
xchg
mov
sub
arpl
fwait
out
sbb
loope
push
sbb
mov
cmp
cli
cltd
cmp
in
xor
or
test
adc
arpl
mov
xorl
lcall
inc
shrb
lea
sub
inc
lahf
xlat
mov
into
ljmp
cli
stos
subl
mov
xchg
fcmovne
mov
fiaddl
pushf
stos
fidivs
ret
mov
xor
popf
mov
sahf
sub
cli
xor
lea
es
and
leave
pop
cmc
push
iret
cld
sub
xlat
mov
mov
fists
cmp
sti
ljmp
xor
or
aaa
add
mov
into
jge
pop
sbb
test
ljmp
pusha
nop
adc
cmp
jle
outsl
dec
mov
or
movsb
dec
gs
xchg
outsl
loope
not
ja
mov
ljmp
repz
add
xchg
outsb
cmp
xchg
mov
orb
add
clc
fwait
xchg
stos
daa
xor
dec
mov
lods
mov
cwtl
mov
push
and
xchg
cmp
pop
xchg
popa
rorb
jno
pop
jge
cmp
mov
fdivl
lcall
je
js
mov
or
out
and
jp,pt
inc
jg
pop
out
lods
jl
add
pop
dec
push
adc
call
movl
cwtl
dec
push
or
cwtl
fmull
in
repz
push
mov
inc
add
cmp
jg
xorb
jbe
mov
lahf
cmpsb
mov
lock
jae
clc
fdivs
and
cwtl
inc
arpl
inc
test
push
xor
push
stc
push
inc
sbb
roll
inc
cs
clc
add
sbb
loope
cmp
sbb
jge
jp
and
adc
mov
fiaddl
xchg
inc
push
cmp
mov
bound
xor
shl
cmp
inc
loope
and
popf
sub
and
std
mov
cmp
stos
shlb
mov
je
or
popa
lcall
shrb
lds
sahf
stos
ljmp
das
and
sbb
lds
mov
into
or
push
sbb
mov
lret
cmpsl
jmp
push
call
add
mov
xor
mov
xchg
push
dec
je
sbbb
mov
mov
sahf
xor
sub
lahf
imul
cmp
dec
push
lret
pop
mov
sub
push
es
outsb
sbb
int3
sbb
dec
sub
push
addr16
inc
outsl
sub
notw
adc
cli
push
or
lods
cmp
xchg
sti
lea
movsb
jne
dec
ficoml
in
mov
push
cmc
xor
fsubl
pop
inc
mov
xchg
sbb
xchg
aad
sbbl
or
icebp
movsb
loop
adc
mov
mov
rcrl
mov
fs
js
sub
sbb
and
cmp
or
test
xor
orb
sub
out
xor
in
inc
cwtl
add
icebp
cmp
stos
dec
aam
js
clc
xchg
mov
xorl
xchg
and
cli
add
add
sbb
and
cmp
es
test
movsb
jp
pop
lock
cld
adc
loope
lret
mov
cmpsl
js
jecxz
mov
popf
push
push
xor
aad
fwait
sbb
insb
mov
or
shll
cmp
pop
stc
xlat
loopne
sub
aad
lods
mov
push
outsb
dec
hlt
iret
scas
mov
js
lea
add
xor
xor
cwtl
xchg
adc
dec
dec
iret
mov
and
dec
aad
clc
aad
dec
and
adc
xchg
and
imul
int
repnz
push
xor
adc
lahf
cltd
xor
sub
add
adc
andb
xor
cwtl
in
ficoml
call
int
shl
mov
jmp
in
call
movsb
cmp
std
mov
loop
cld
lds
inc
dec
inc
test
sbb
sub
scas
mov
mov
imul
xchg
cltd
cmp
movsb
daa
cmp
sbb
sub
out
clc
leave
sub
dec
repz
pop
pop
cli
ss
lret
movsb
or
or
jb
fidivs
or
mov
pop
pushf
xchg
leave
adc
test
jo
sub
cmp
jle
jmp
movsb
into
lods
mov
adc
mov
adc
mov
fcmove
loop
nop
fwait
call
lahf
xchg
sbb
scas
pop
lret
pusha
pop
mov
jno
pop
stos
insb
and
dec
lods
mov
test
mov
inc
mov
mov
cmp
mov
mov
dec
pop
mov
lods
rol
inc
fwait
adc
jle
jo
jne
into
xchg
movsl
xor
inc
enter
gs
add
imul
popf
xchg
mov
jl
xchg
sub
push
dec
addb
cmp
lret
pop
loope
cmp
add
jno
aas
cltd
cld
jbe
push
das
push
rclb
fisubs
insl
xlat
orb
pushf
repnz
aaa
pop
nop
stc
enter
and
jbe
shrl
dec
hlt
dec
bswap
mov
aas
lcall
dec
jp
jns
lds
jmp
mov
icebp
out
push
xor
scas
in
aad
jne
mov
mov
push
loope
push
in
test
mov
ret
data16
repz
mov
jno
mov
push
push
adc
and
in
push
sub
mov
xchg
insb
push
out
mov
int
mov
adc
nop
jl
or
mov
insl
pop
jb
imul
cltd
ljmp
dec
out
and
in
cmp
adc
insb
push
cmp
xchg
sbb
push
jge
mov
push
sbb
cmp
adc
enter
inc
push
shll
fsts
cltd
fcomi
adc
xchg
mov
adc
xor
push
in
inc
push
push
adc
jmp
pop
jle
push
bound
add
jle
dec
cmp
fdivrl
outsl
sub
gs
mov
and
jnp
fildl
mov
xor
or
xor
mov
xchg
mov
sar
add
xlat
mov
loopne
clc
push
repz
lret
fsubrs
lret
test
or
outsl
fs
aad
loopne
shl
sbbb
adc
cmp
jle
mov
aaa
mov
push
pop
mov
into
xchg
pop
fxtract
xchg
cmp
fmul
fwait
mov
lretw
adc
cmp
push
aam
lods
fsubl
mov
adc
je
js
es
adc
sub
cld
sub
mov
or
das
xchg
fisubrs
daa
or
inc
hlt
cwtl
push
out
sbb
sti
cmpsl
bound
mov
jbe
and
pop
ds
mov
cmpsl
and
pop
cmp
mov
sbb
or
lahf
div
aam
lods
add
out
sbb
mov
andb
adcl
xor
sub
jnp
mov
push
mov
and
xchg
frstor
mov
push
push
mov
int3
ss
outsb
push
in
cmpsl
mov
movsl
lds
aad
lods
add
outsb
mov
arpl
lock
in
mov
clc
rcrb
addb
cltd
sahf
lods
xchg
leave
ss
dec
jnp
cltd
movsb
clc
mov
mov
mov
pop
push
aaa
call
ja
add
sbb
jo
stc
mov
je
pop
push
xlat
sbb
test
inc
nop
sti
insl
jmp
ss
jge,pt
cmpsb
movsl
add
xchg
pop
lret
jae
pop
loop
cmp
jno
lea
pusha
sbb
aas
fwait
sub
xchg
xchg
and
lcall
cmp
out
mov
or
or
jne
mov
das
adc
jg
outsl
fs
sub
scas
push
lods
sarb
into
jmp
and
loope
pop
sub
pop
push
adc
inc
inc
push
rcrb
xor
dec
sbb
pop
cltd
mov
xchg
pop
lret
mov
xor
not
ret
jmp
aaa
and
xchg
pop
mov
mov
xchg
bnd
add
outsb
pop
jo
adc
sarl
inc
xor
and
std
out
mov
and
subb
push
mov
xor
xchg
outsb
sahf
daa
sti
andb
pop
in
fnstenv
sub
mov
mov
ljmp
test
scas
pop
out
push
xor
inc
nop
std
in
xchg
mov
push
test
int3
inc
inc
push
mov
xchg
jbe
jno
aas
xchg
ret
fisttps
xchg
mov
dec
mov
xchg
mov
scas
jne
jg
jo
mov
bound
lret
sub
stos
loope
cmpsl
outsl
inc
inc
sbb
negb
inc
or
js
xor
fucomp
adc
inc
jns
adc
test
inc
enter
aad
rcll
gs
mov
push
adc
movsb
xchg
pushw
aas
and
data16
push
add
mov
xlat
inc
dec
jecxz
in
xchg
arpl
jbe
xchg
sub
icebp
cltd
cltd
fistpll
inc
and
add
cltd
mov
dec
adc
xor
popf
int3
pop
push
jle
mov
cmc
aaa
icebp
sbb
xor
rcr
mov
in
mov
daa
fisttpll
test
ret
inc
nop
adc
lock
in
adc
sub
adc
jbe
xchg
sahf
aaa
rcrb
mov
sbbb
scas
int3
outsb
test
pusha
leave
scas
pop
and
sub
cmp
addl
mov
push
sbb
and
mov
fbstp
sub
lds
mov
cli
adc
ret
push
mov
cwtl
stos
push
xlat
roll
les
aaa
xchg
int
sti
and
test
rcrb
mov
cld
cli
push
movsl
in
push
push
mov
fistl
and
lods
jge
fildl
adc
mov
jle
repnz
mov
mov
add
mull
pop
int3
dec
push
ret
or
pop
out
xchg
push
and
push
jae
js
jo
mov
outsl
outsl
insb
inc
orb
lahf
adc
xor
ffree
inc
jmp
pop
jmp
jae
jecxz
repnz
push
test
sar
aad
loope
inc
iret
mov
or
inc
out
imul
stos
push
cwtl
cli
call
pop
add
or
jle
jne
hlt
mov
lock
jne
pop
sbb
pop
outsl
repnz
lcall
mov
adc
add
jecxz
cmp
cmc
insb
xchg
jb
mov
aam
inc
inc
iret
dec
outsb
push
imul
cmp
sub
pop
scas
fsubrs
mov
cmp
pop
or
jle
cmc
test
sarb
dec
andl
lods
addr16
nop
pop
test
lcall
add
and
int3
ret
lcall
cmp
mov
lea
movsl
shrb
xchg
loopne
or
pop
outsb
pop
push
dec
mov
pop
pushf
pushf
and
ss
xor
in
fs
sbb
xor
sub
scas
cwtl
int3
clc
outsl
dec
mov
insb
int3
push
call
test
test
ds
in
xor
mov
nop
pop
or
sub
rep
lods
cmpb
add
cs
jb
inc
pop
int3
retw
adc
mov
stos
jne
cmp
leave
decl
push
push
pop
out
mov
ljmp
int3
add
outsb
cmp
rcl
cmp
int
dec
orb
pop
fbstp
cltd
fwait
mov
les
cmpsl
and
mov
in
cmp
inc
jge
cmp
add
outsb
popf
mov
int3
mov
cmc
xchg
mov
cli
insb
les
jl
or
xor
mov
fsub
incl
mov
or
fsubrl
pop
mov
fwait
push
jb
and
bound
jo
imul
push
mov
add
jge
xorb
fs
popl
mov
out
dec
aaa
or
popf
js
sub
ljmp
or
mov
mov
mov
adc
sbb
mov
cmc
mov
cwtl
fnstenv
mov
mov
add
mov
dec
xor
dec
lret
dec
popf
cmp
sbb
mov
jnp
jecxz
rorl
lahf
add
cmp
hlt
add
repz
jmp
dec
inc
imul
mov
fnstenv
popa
or
lods
pop
mov
ss
lea
mov
mov
es
mov
fwait
sbb
ss
pushf
or
or
sub
call
lods
fdiv
outsl
enter
les
or
jl
bound
xor
scas
icebp
jbe
cld
sti
fsubl
sub
pop
jg
ret
sub
cmp
testl
and
notb
or
ret
xor
icebp
and
cs
clc
pop
push
sbb
push
movsl
xor
mov
dec
das
and
sub
hlt
sbb
vpshad
mov
push
mov
movsl
out
xlat
lcall
fadd
call
lock
faddl
inc
xchg
jno
cmp
xchg
push
scas
dec
test
lahf
loopne
mov
in
ss
cmp
mov
lcall
jnp
sub
insb
pusha
cmc
js
add
pusha
pop
adc
out
lea
sti
shl
push
test
xor
mov
or
push
jo
arpl
mov
es
mov
and
ficoml
and
test
jge
mov
orl
or
jg
push
orb
outsb
out
pop
or
xor
mov
rorl
imul
cmc
mov
xchg
stos
and
and
ja
gs
cmpsb
push
pop
jo
aad
mov
lock
xchg
push
inc
test
cmc
mov
mov
fsubr
lret
movsl
in
pop
add
out
jl
ss
cmpsb
or
cmp
aam
push
push
pop
pusha
pop
lods
xchg
dec
ss
adc
cld
add
fidivs
out
or
xlat
mov
ljmp
les
dec
jae
add
pop
push
mov
push
jns
xor
jecxz
cltd
hlt
in
jne
add
popa
mov
andb
push
xor
adc
stos
mov
mov
addr16
lret
jae
push
arpl
ja
outsl
mov
pop
mov
or
lds
mov
cmp
enter
and
xchg
je
xchg
in
mov
jecxz
xchg
shrl
out
jle
push
lods
or
xchg
in
and
aam
xor
sbb
movsb
mov
test
sbb
jge
insb
or
scas
jo
filds
adc
fidivrl
adc
adc
mulb
pop
add
push
das
mov
bound
adc
mov
lcall
push
loope
push
cmpsb
and
in
xor
stos
or
loop
pushf
cmp
adc
jp
dec
pushf
ror
dec
cmp
fsubl
lods
add
aas
jmp
dec
mov
sbb
sub
enter
push
push
scas
mov
enter
dec
xor
cmp
jae
xchg
outsb
cmp
andb
mov
lret
insb
mov
ret
fnsave
cwtl
jp
or
xor
cmpsl
data16
sub
sbb
test
mov
add
gs
sub
jbe
rclb
sub
mov
inc
pushw
inc
jo
sbb
jno
mov
adc
jo
or
mov
cmp
add
test
ds
js
roll
fnstcw
arpl
mov
sahf
insb
movsl
fidivrl
loope
inc
call
sbb
and
jne
jbe
lret
rolb
inc
in
sbb
cli
pop
cmpsl
dec
in
cmpsl
test
cmp
fs
xor
loopne
sbb
adc
test
mov
lahf
pop
xor
inc
add
sbb
push
sub
push
cmpsb
add
in
sbb
popf
adc
dec
xchg
add
sub
mov
push
outsl
jbe
stc
negl
movsb
data16
push
lods
jge
incl
addr16
sbb
int3
bound
push
sub
fcom
xor
arpl
ds
popa
mov
push
xor
fcomip
in
notl
jns
cmpsl
mov
xor
sbb
das
inc
int3
sti
sbb
cwtl
lret
in
add
loope
cli
mov
or
fistps
rcrl
mov
pop
fsubrl
sub
adc
push
push
push
fildl
or
scas
xchg
push
xor
dec
in
or
mov
push
test
mov
nop
cmc
int3
dec
je
repz
jp
cwtl
fbstp
es
sbb
sub
mov
aaa
cmp
icebp
cld
jns
aaa
rclb
or
and
js
fsubs
mov
into
cmpb
sahf
jbe
xor
mov
push
adc
shl
sbb
sarb
sarl
in
push
mov
xor
sbb
pop
dec
sub
jae
inc
push
lret
mov
xchg
scas
js
out
stc
mov
jg
das
bound
popl
dec
outsb
mov
stos
inc
push
push
and
sub
nop
fcompl
scas
cs
imul
pop
adc
push
xchg
mov
jo
insb
bound
aas
jo
orl
xchg
add
lea
repnz
mov
xor
lods
cmp
jg
dec
fbstp
cltd
sub
fsubrl
xor
mov
mov
xchg
adc
mov
adc
and
xor
adc
ja
imul
or
inc
or
arpl
pop
mov
shlb
xchg
stc
mov
dec
xorb
ja
jae
dec
jp
add
cmp
imul
rolb
pop
push
mov
mov
dec
xor
das
into
psllw
xor
rcl
sub
lea
popa
pop
imul
in
pop
test
xor
mov
mov
or
fidivrs
push
das
jle
adc
pop
fcmovnbe
fldenv
inc
jmp
push
sub
loopne
sub
fs
jmp
mov
adc
mov
and
mov
test
xor
push
sub
enter
loopne
sub
sarb
cltd
mov
pop
inc
sti
jp
jg
andl
dec
sbb
cmpsl
pop
leave
pop
mov
inc
gs
out
repz
cmpsb
mov
je
ret
mov
lods
pusha
mov
fadds
push
adc
jl
sub
sbb
es
mov
adc
inc
stos
pop
cwtl
xchg
mov
fwait
inc
into
jge
cwtl
xor
les
add
sbb
cmp
sbb
nop
repnz
loopne
out
sub
xlat
cmp
inc
jl
adc
cmc
outsb
sarb
cmp
hlt
dec
test
adcl
stos
cmp
shlb
inc
add
lret
inc
stos
mov
xchg
aas
mov
inc
or
out
jne
adc
inc
jle
addb
sbb
dec
sbb
rorl
iret
fcompl
outsb
mov
pop
or
push
pop
and
push
mov
jge
xchg
je
faddl
adc
sbb
ss
cmp
pop
jno
jg
fisubrl
adc
mov
call
or
cmpsb
out
divb
push
adc
or
or
mov
movsl
mov
mov
pop
jo
lret
or
inc
jmp
and
sar
add
mov
sbb
lea
dec
xlat
sbb
cmp
pop
xor
mov
adc
in
xor
xchg
bound
rolb
es
call
stos
lods
dec
lds
stos
ret
icebp
loopne
loop
jns
icebp
add
enter
push
insl
ja
flds
scas
out
inc
xchg
adc
or
and
dec
mov
adcb
insb
lods
lea
push
inc
in
divb
jnp
or
fwait
mov
outsl
xor
xor
aas
xor
leave
in
repnz
aad
push
mov
inc
jl
fstps
es
std
or
je
jl
xchg
pop
push
or
cmp
andb
adc
cmp
imul
and
mov
mov
test
lock
push
ds
pop
scas
in
xchg
push
lods
jmp
arpl
push
cmpsl
loope
mov
imull
maskmovq
imull
pop
jmp
stc
out
jmp
test
bound
movsb
inc
aam
out
lahf
dec
rorw
repz
xchg
pop
aad
ss
add
pusha
mov
mov
insl
push
dec
bound
in
es
jns
dec
mov
push
int
ror
xchg
sbb
mov
lock
inc
pop
addr16
aas
xor
sbb
aam
iret
aas
subb
sbb
fwait
clc
leave
xchg
in
push
das
add
rorb
ret
je
aas
in
shll
sbb
inc
pop
lock
lret
add
jge
cmc
xchg
mov
add
inc
cmp
adc
sub
mov
push
loope
mulps
nop
xor
jno
in
inc
mov
bound
mov
and
sbb
jle
jno
popa
popl
cmc
not
jp
xchg
adc
jb
arpl
sub
ljmp
push
iret
dec
rorb
mov
lret
and
dec
test
mov
and
xchg
jl
mov
stc
xchg
fsubr
fadds
push
mov
and
xor
push
leave
mov
and
hlt
or
hlt
mov
outsb
push
aad
xor
cld
push
or
sbb
xchg
mov
mov
dec
pop
pop
sahf
scas
in
xlat
jg
push
push
xor
xor
repz
jnp
pop
jmp
sub
test
ja
shl
dec
arpl
cmpsb
jmp
push
ret
cwtl
inc
pusha
jb
shl
cli
data16
fisubl
aas
lcall
pop
pushf
sbb
jbe
data16
xchg
clc
pop
insl
ret
dec
rcrb
cmp
and
jg
in
and
pop
and
iret
adc
pop
xchg
scas
push
fcmovne
xor
cmp
sub
paddb
mov
aas
or
es
jle
jnp
xlat
loop
pop
lea
adc
mov
lods
daa
hlt
sbb
mov
das
jle
cmp
cli
mov
xor
test
jb
adc
scas
out
out
adc
sarb
xchg
loopne
jno
add
sbb
les
in
sti
add
dec
mov
inc
into
jo
sahf
mov
cmp
dec
jb
jecxz
cmp
jge
rcll
pop
xor
mov
jp
mov
sub
and
jmp
xor
cmp
pop
dec
subb
inc
push
jbe
push
fs
push
es
or
cli
shlb
pop
enter
pusha
pop
mov
adc
push
loop
dec
mov
jno
fsubrp
adc
cli
out
aam
int3
rcrb
cmc
adcb
ljmp
sbbb
loope
jg
lock
push
mov
sbb
mov
cld
push
lcall
aaa
sbb
lahf
loope
sti
or
xchg
mov
sub
stos
shr
mov
xor
leave
jae
shll
mov
ss
mov
or
out
lods
aaa
in
ret
mov
add
and
movsb
mov
jne
mov
cmp
iret
gs
cmp
sbb
jb
add
aaa
sti
inc
int
cmpsb
in
jnp
or
mulb
jl
xchg
sbb
mov
lcall
jecxz
inc
pop
std
mov
test
aam
mov
jmp
jp
addr16
ret
cmp
cmp
stc
fldcw
adc
ret
sub
cld
les
sub
aad
cmp
mov
out
pop
and
xchg
and
sub
xor
inc
sbb
jne
xchg
cmpsl
dec
jmp
test
aas
lock
mov
das
xor
cmpsb
and
jae
ret
scas
jb
insl
sbb
aam
shr
out
fldl
mov
jle
dec
pusha
jle
cmpsb
std
xor
xor
xor
sti
ret
shrb
pusha
adc
push
icebp
xchg
mov
ficompl
in
push
xor
into
sbb
or
bound
push
push
dec
call
insl
repz
or
cli
fiaddl
stc
btl
loopne
xor
jp
mov
add
sub
sahf
xor
pop
sub
sub
xchg
push
jno
dec
mov
test
or
out
and
enter
aam
cmc
jne
add
or
inc
cwtl
xorl
lds
mov
insb
push
push
pop
xchg
sbb
adc
push
scas
mov
push
push
das
cmp
adc
imull
dec
mov
mov
iret
lock
sub
in
push
push
mov
pushf
ja
jg
or
mov
rep
mov
rcrb
lahf
out
fstpt
mov
adc
pop
sub
push
sbb
xor
xorl
popf
pop
aam
cmp
rcrl
cli
sahf
add
pop
int
xor
sbb
add
dec
out
sub
int3
inc
call
mov
lret
and
jge
and
imul
hlt
push
jge
xchg
mov
bound
cmp
fisttps
sti
pop
jnp
or
xchg
arpl
cmp
pop
aaa
sub
and
cmp
lcall
xor
cmp
cmp
stc
clc
xchg
jl
pop
push
or
fnstenv
je
jb
je
pop
or
cmpsl
int3
push
ret
xchg
test
movsl
fistps
js
adc
add
and
adcb
fisttpl
jl
mov
mov
mov
rorb
das
xor
dec
mov
mov
adc
mov
and
sbb
call
rcrl
aas
iret
repz
icebp
das
in
push
call
mov
jne
add
fiaddl
push
and
loop
xor
fdivr
dec
fisubrl
shl
mov
push
dec
xchg
sbb
push
push
pusha
adc
and
stos
cmp
sbb
lods
jbe
je
xchg
ret
jmp
pop
pop
push
clc
loop
jno
mov
sbb
xchg
aam
xor
in
idivl
imul
sub
outsb
imul
fldenv
std
jp
repnz
outsl
outsb
lds
mov
dec
test
std
and
xchg
pop
ja
jmp
rcl
cmp
loop
movsb
sti
test
stos
mov
mov
fstpl
outsb
int
insl
cs
xor
aad
jmp
mov
cmp
xor
jne
pop
repz
cmp
bound
out
cmp
or
iret
sbb
add
mov
mov
popf
into
inc
cwtl
inc
imulb
jns
cs
mov
sahf
sub
sub
out
cltd
sub
mov
push
and
test
adc
xor
xor
gs
adc
decl
lock
xlat
push
std
adc
or
mov
cs
sub
mov
enter
out
inc
movsl
stos
shr
test
mov
mov
cwtl
adc
push
bound
inc
dec
xchg
lods
mov
imul
fmuls
js
in
or
gs
cmp
test
mov
ss
cmc
cmp
sub
test
imul
test
fstpt
sub
cli
adc
clc
in
add
pop
xchg
push
in
pop
outsl
cmp
scas
jne
adc
jmp
inc
adc
lahf
dec
test
sbb
lret
inc
cli
push
cmp
push
rcl
jecxz
jae
popf
mov
jmp
ret
mov
mov
and
roll
frstor
jo
sbb
cmp
jne
xchg
jns
push
mov
jge
mov
mov
jmp
iret
repz
push
mov
push
imul
shl
mov
test
fs
jecxz
popa
bound
ljmp
repnz
mov
mov
repz
jne
adc
xor
gs
pop
mov
scas
add
ds
test
and
into
push
ljmp
lea
dec
mov
cmp
cmp
sub
jle
push
pop
adc
dec
xor
repz
mov
cli
or
push
cld
jb
mov
push
mov
or
push
cmp
sub
lcall
pop
pop
sbb
mov
add
enter
or
sbb
out
fdiv
fiadds
jne
pop
nop
movsl
outsl
pop
inc
lds
xor
sub
mov
sub
xor
adc
outsl
xchg
fisubrs
jb
mov
jae
stc
scas
lods
xchg
xchg
test
mov
mov
sbb
or
xor
add
fstp
push
cmpsl
jg
into
test
loope
hlt
jmp
sbb
das
mov
or
test
lcall
sbb
cmp
and
push
dec
scas
xchg
lods
push
push
je
stc
adc
lret
subb
pushf
adc
inc
adc
cltd
xchg
imul
lock
inc
mov
repz
pop
cmp
fdivrp
and
xor
sbbb
push
fcoml
in
inc
aaa
adc
jno
mov
sbb
sub
ret
xor
pop
ljmp
loopne
inc
aad
cmpsb
leave
cmpsb
fisubrs
dec
pop
repz
dec
sbb
lea
mov
outsl
fcompl
cmp
jb
nop
pop
xchg
push
loope
sarl
pop
jle
sbb
movsl
jns
adcl
das
mov
repz
xchg
inc
push
fwait
adc
sets
outsl
ficoml
fbld
or
testb
pop
mul
mov
cld
bound
not
cwtl
imul
xchg
pop
call
cmp
push
cwtl
enter
jmp
cmpsl
cltd
sti
mov
stos
dec
outsb
into
jmp
mov
shll
les
mov
add
shl
sbb
test
loopne
cltd
and
addr16
fstl
adc
fcmovnb
xor
cld
ficoml
ror
and
jp
aad
loop
or
insl
inc
add
and
loop
mov
mov
push
sub
ret
std
add
dec
push
stc
mov
jecxz
push
xor
pop
mov
fistpl
fistps
addr16
in
cmp
inc
test
or
shll
fldt
and
mov
int
clc
lock
inc
mov
jg
nop
add
cwtl
add
mov
in
jmp
add
fidivrl
mov
scas
mov
lret
out
frstor
sbb
or
shrb
enter
bound
pushf
xchg
inc
out
push
mov
rcrl
movsb
ja
sti
xlat
pushf
les
outsl
ss
add
sbb
xchg
and
fwait
cli
loope
imul
sbb
fwait
dec
pop
mov
jg
sub
mov
sbb
mov
inc
rolb
add
dec
pop
xor
gs
lret
xchg
or
rol
nop
adc
and
inc
jae
inc
push
jecxz
call
jns
fbstp
lock
dec
clc
sbb
rorb
sub
into
repnz
dec
inc
lds
imul
xchg
cmp
cwtl
sbb
pop
into
push
push
sub
xor
push
jecxz
pop
rcrb
dec
stc
jb,pn
aas
jne
dec
in
idiv
push
dec
dec
pop
add
testb
inc
sbb
xchg
rorl
mov
rcrl
mov
dec
mov
pop
and
mov
fcom
pop
add
clc
rorb
sbb
cmp
fcmovnb
lods
stos
adc
add
leave
je
arpl
cmpsb
mov
loopne
mov
cltd
les
sbb
es
fiaddl
shll
jb
ret
sbb
std
loopne
jb
inc
je
imul
dec
push
push
ja
xchg
add
inc
push
mov
arpl
xor
sub
pop
adc
xchg
inc
insb
add
or
enter
out
je
cmc
lcall
sbb
outsl
ja
ss
mov
inc
push
pop
shll
sub
dec
test
enter
lds
js
out
sub
hlt
adc
jg
pop
sbb
insl
lock
or
test
mov
xchg
dec
aam
iret
cmpsb
xlat
sub
and
push
mov
push
hlt
jns
aaa
pop
loopne
int3
out
sbb
mov
das
xor
and
jo
mov
imul
cld
test
das
adc
push
aas
jmp
push
jge
ret
mov
xchg
add
call
scas
jge
jle
push
sub
add
adcl
subl
jle
jnp
sbb
sbb
ror
orb
add
xlat
shl
jmp
leave
push
pop
xchg
gs
xchg
mov
mov
stc
inc
xor
cwtl
iret
mov
mov
icebp
mov
adc
in
or
arpl
std
je
fstl
ret
adcl
pop
into
icebp
or
mov
sub
push
loopne
jb
pop
lahf
sahf
rolb
loope
lea
stos
dec
loope
push
in
arpl
sahf
rolb
fidivrs
gs
pop
mov
push
adc
and
das
mov
cmpsb
mov
in
inc
mov
jp
scas
pop
cli
insb
lret
cmc
inc
imul
subl
scas
fiaddl
popa
push
push
scas
ficoms
cli
jp
fisubs
xchg
jmp
push
push
sbbl
xchg
inc
cmc
movsb
mov
adc
push
xor
in
enter
xchg
add
fimull
scas
xor
or
js
jnp
ja
scas
ds
or
out
pop
inc
fildl
pushf
test
sbb
jns
repnz
mov
in
cmpsb
dec
in
inc
in
sub
mov
movsb
or
shl
daa
std
xor
pop
rcrb
push
and
dec
mov
xrelease
pop
test
pop
cltd
xor
adc
dec
test
std
movsb
daa
mov
inc
jle
push
dec
nop
fmul
aad
in
xor
mov
repnz
mov
std
sarl
int
push
in
test
rcrl
or
mov
cmpsb
xchg
xchg
mov
gs
push
pop
popf
mov
in
xor
xchg
push
and
xchg
jnp
mov
xor
adc
adc
in
cld
test
cmc
mov
xor
xor
scas
xchg
mov
ret
jp
in
pop
mov
je
dec
addr16
fwait
bound
dec
std
lcall
adc
lret
enter
xchg
aad
mov
int3
sbb
nop
pop
push
inc
adc
ja
or
push
jle
mov
jg
inc
adc
cltd
andl
das
mov
xchg
pop
xlat
arpl
cs
sub
jae
arpl
mov
cwtl
mov
test
mov
mov
push
sbb
push
inc
mov
in
dec
repnz
fnstsw
pop
bound
push
jbe
jmp
fstl
div
outsb
insb
test
mov
int3
inc
imul
ljmp
cmp
fucomip
insb
jne
xor
in
adc
sub
pusha
cli
arpl
daa
jae
imul
add
jge
mov
xorb
pusha
inc
je
ljmp
mov
sahf
or
dec
call
ds
adc
inc
xor
or
add
cltd
push
dec
sub
aad
fcoms
bound
jnp
jns
sbb
dec
jle
outsb
js
mov
dec
mov
aaa
xlat
daa
cmp
mov
adc
push
and
rolb
adc
repnz
mov
xor
std
loop
data16
pop
mov
and
pop
add
push
es
mov
ljmp
xchg
and
mov
sti
pop
add
daa
mov
outsb
andb
cmc
fdivr
adc
push
sbb
mov
inc
mov
xchg
sub
data16
dec
cmpsb
mov
notb
sbb
pop
test
push
jp
and
dec
adcb
mov
push
push
and
cs
into
divl
push
movsb
jns
ljmp
aas
aas
jo
push
mov
xchg
sahf
or
out
adc
lods
popa
jb
ja,pt
lds
fmuls
pop
ficoms
and
call
adc
aad
inc
jg
adc
call
pushf
outsl
xlat
clc
sub
xor
mov
adc
jge
cmp
mov
adc
ds
xchg
shl
ficoml
fcompl
sbb
or
adc
add
push
fists
inc
sarb
iret
imul
pop
xor
les
push
cmpsl
pusha
mov
loop
arpl
mov
lcall
add
adc
fcompl
orb
mov
xorb
lret
rcrb
jne
mov
leave
lods
jmp
jecxz
inc
mov
push
cmp
adc
mov
mov
dec
add
dec
mov
mov
adc
push
mov
stc
cmp
sub
divb
fwait
loopne
lods
pusha
mov
xchg
xchg
lea
in
and
aaa
shll
mov
ljmp
cmp
inc
cmp
cmp
jb
push
mov
xor
cmp
cmp
jecxz
push
call
nop
pop
mov
addr16
mov
stc
jbe
out
and
inc
movsl
out
ficoml
jne
lock
mov
and
sbb
test
fists
insb
aas
sahf
adc
inc
pusha
out
dec
pop
sbb
push
cmp
mov
push
lcall
ljmp
pop
cmpsl
pusha
out
cwtl
mov
mov
and
sbbl
push
jno
filds
sub
add
mov
mov
inc
or
mov
or
mov
aad
push
dec
sub
mov
and
and
adc
mov
cmpsl
pop
imul
sarl
add
pushf
lods
fstp
ss
shlb
jp
in
inc
and
cmp
mov
sub
int
bound
sbb
add
jnp
scas
sub
jns
stos
imul
cmp
ja
in
aam
mov
ret
fsubs
sahf
pop
pop
and
push
test
sbbb
outsl
xlat
jne
inc
stc
sub
stc
xchg
adc
call
jno
int
push
mov
scas
test
inc
shll
push
aas
inc
xchg
inc
add
push
jmp
test
dec
push
and
stos
test
adc
pop
imul
cli
in
push
hlt
test
pop
cmp
lahf
lret
mov
cmp
jb,pt
les
sub
pop
loope
mov
xchg
jae
call
mov
jns
add
rclb
adcb
cmp
xchg
inc
mov
rcll
cmp
pop
mov
sub
pop
mov
orb
sahf
pushf
adc
mul
add
xchg
mov
push
adc
pushf
adc
stos
push
sbb
pop
pop
pop
or
mov
fcoms
or
xor
test
in
dec
movsb
and
push
lcall
and
inc
mov
fcom
jge
fdivs
popf
adc
mov
inc
sub
std
pop
sbb
cmp
test
testb
imul
mov
fs
fcmovnb
out
inc
shl
dec
aas
out
adcl
rolb
mov
push
jmp
dec
adc
mov
sbb
cmpsl
imul
lret
pop
repnz
inc
cmp
sub
int3
mov
cwtl
loope
sub
inc
leave
or
inc
adc
std
in
fnstenv
jo
or
or
xchg
mov
ja
dec
out
xchg
loope
gs
mov
bnd
or
pop
test
fscale
push
out
out
sub
xchg
icebp
inc
test
data16
loopne
lret
xchg
stc
pop
sub
bound
inc
cltd
lahf
cs
jbe,pn
lcall
mov
mov
jp
xor
xor
divl
bound
popa
test
lock
lods
sub
in
pop
test
dec
arpl
nop
add
enter
call
push
sqrtps
popa
jo
les
decb
add
push
jg
lea
cli
cs
loopne
and
and
add
add
cmpsb
push
xchg
outsl
xchg
outsb
add
cmp
cld
adc
inc
mov
ja
or
lock
addr16
sti
ja
call
imul
dec
mov
cmpsl
iret
inc
xchg
or
addb
or
jecxz
sub
aam
lods
pop
daa
rolb
dec
mov
mov
xchg
popf
jl
adc
push
mov
adcl
nop
xor
fcmovne
xlat
mov
cwtl
or
mov
jmp
cmp
aam
fwait
jmp
jp
xchg
push
fisttpl
dec
lea
clc
dec
and
jl
or
and
fnstsw
movsl
lods
adc
mov
jl
lcall
push
xchg
jmp
mov
negb
xorb
insl
enter
pop
inc
ja
inc
out
pusha
or
xor
mov
fdivrl
movsl
stos
pop
je
pushf
lock
jge
sti
mov
mov
cmpsb
push
push
push
pushf
add
shlb
addr16
xchg
test
sub
nop
adc
mov
repz
mov
stc
data16
jge
fstps
mov
sbb
sub
icebp
je
pusha
sub
ljmp
and
incl
pushw
pop
or
dec
fnop
mov
out
mov
decl
pop
jmp
mov
or
or
stc
inc
xor
jle
lahf
sbb
ss
cmp
iret
mov
jae
outsl
ret
das
inc
fs
icebp
xchg
cmp
dec
mov
sbb
inc
outsl
lods
cmp
inc
out
faddl
and
and
push
sub
add
sub
outsl
sub
pop
lods
and
or
and
inc
fidivs
cmpsl
scas
push
shr
daa
mov
incl
loopne
js
push
dec
xor
aad
push
adc
lods
leave
jno
adc
mov
push
mov
fistpl
fs
in
je
push
cmpsl
cltd
shl
inc
mov
adc
pop
sbb
mov
fisttpll
cmp
mov
jg
sub
or
push
loope
ds
mov
mov
or
out
and
and
and
loope
xchg
xor
sub
in
outsb
jmp
sbb
cmp
cmc
mov
and
and
add
ljmp
in
popf
lods
lret
std
xor
cmpsb
sahf
sub
mov
inc
sub
xor
pop
xor
movsl
stos
xchg
fwait
push
fcoml
not
movsl
sub
sbb
adc
sti
incb
mov
pop
in
fcoms
push
mov
push
int
mov
mov
xchg
and
mov
push
inc
pusha
inc
dec
pop
and
mov
dec
adc
push
cmp
addr16
sbb
orl
pop
or
mov
fdivrl
xor
mov
sbb
jns
iret
xchg
pop
stc
xchg
sbb
ret
add
cltd
jp
ror
dec
sub
outsl
cmp
bound
add
jb
les
lods
or
mov
adc
mov
mov
push
xchg
fwait
jge
jle
inc
or
adc
test
push
xor
add
add
nopl
sbb
xchg
clc
and
cwtl
dec
pushw
repz
xor
push
jno
test
dec
cmp
ljmp
sub
and
fistl
add
cmp
inc
pop
out
jl
add
add
mov
fidivrl
stos
in
mov
mov
pop
xor
cltd
stc
ss
enter
lods
jmp
jb
push
scas
push
decl
lds
in
and
mov
dec
xchg
inc
daa
fnstsw
lahf
and
cmpsl
bound
xor
sti
sbb
nop
ja
xor
sbb
xchg
sbbl
xchg
add
xor
inc
xchg
push
add
fisubs
je
arpl
add
fwait
clc
stos
pop
sub
cmc
mov
dec
xchg
in
fsubs
in
aaa
hlt
lods
add
dec
push
les
pop
stc
push
inc
xlat
adc
cmc
fsub
push
mov
mull
cmp
and
xchg
cli
jb
push
out
fwait
dec
xor
dec
push
insl
push
fists
mov
jns
imul
pop
test
fcoms
pop
hlt
mov
pop
push
cmpsb
jb
arpl
dec
lret
jns
cmp
aam
notl
int3
add
adc
add
insb
xchg
mov
jmp
clc
test
ljmp
fisubl
or
in
fimuls
les
push
dec
pop
stc
shll
sub
ffree
jb
ret
cmp
add
inc
mov
test
ret
jmp
cmp
jl
les
inc
stos
lret
rclb
sub
lret
xchg
popa
imul
pop
mov
and
pop
inc
popf
lods
xchg
in
popa
xchg
test
mov
or
popa
push
mov
gs
lcall
scas
inc
inc
in
ror
addr16
fdivs
mov
shll
jb
lock
popf
mov
push
xchg
push
mov
mov
sub
outsb
mov
pop
cmp
nop
add
das
mov
sbb
jb
incb
std
and
or
in
adc
dec
out
adc
in
out
rcrb
xchg
push
jo
insl
pop
add
inc
inc
jne
jge
es
xor
imul
in
mov
lea
adcb
test
ror
xor
xor
xchg
sbb
stos
pop
and
sub
lds
jl
sub
mov
dec
push
pop
pop
sub
in
dec
cmp
aad
mulb
filds
push
jg
mov
pusha
push
int
adc
xchg
jmp
jno
popf
lods
ljmp
inc
jl
mov
add
out
dec
idivb
mov
hlt
pop
or
leave
mov
lods
les
lahf
push
pop
hlt
ljmp
jns
mov
ret
jmp
xchg
mov
outsb
lret
cmc
call
mov
pop
sub
or
dec
repz
es
xor
lock
jle
jl
je
rorb
adc
inc
jae
aam
sub
lcall
movsl
mov
lods
call
popa
addr16
daa
and
fiaddl
lock
xorl
loope
iret
mov
add
pop
xchg
jg
test
adc
mov
fistpl
sbb
mov
std
sbb
dec
mov
push
adc
jecxz
mov
cmp
lods
push
xchg
test
mov
fstps
testl
jns
xlat
mov
mov
mov
cmpsl
mov
daa
inc
add
imul
shll
shl
jp
and
gs
stc
dec
inc
jg
push
cld
adc
shll
push
int3
mov
cwtl
mov
in
mov
xchg
in
cmpsb
rclb
ret
arpl
int
dec
inc
ljmp
xor
inc
and
xor
pop
mov
and
mov
lods
xor
mov
dec
or
andb
cmpsb
outsl
cltd
bound
lret
mov
scas
mov
xchg
xchg
jns
pop
stos
pop
pop
pop
sub
ficomps
xor
adc
decl
out
psllw
lds
and
mov
inc
dec
jle
lea
mov
fsubrs
pop
lret
mov
dec
inc
lock
aas
mov
loopne
mov
mov
test
rep
cs
outsb
out
cmpsl
jo
andb
dec
lret
add
sub
scas
add
incb
lods
push
lret
mov
roll
and
and
fistpl
pop
sub
outsb
data16
jle
jl
mov
sbb
stc
mov
mov
push
pop
sub
mov
movsl
pop
inc
jo
add
cmp
or
cmp
xor
out
jne
prefetch
mov
jge
rcrb
dec
mov
sbb
mov
push
fbld
aas
sahf
mov
jge
ds
jnp
imul
fcmovnb
outsb
cmp
in
stos
mov
sub
cmpsb
lcall
movl
cld
lds
insb
mov
shll
mov
cmp
into
dec
jl
sarl
push
mov
cmpsl
xor
inc
cld
or
jecxz
mov
or
lods
sub
sbb
xchg
mov
sbb
xchg
nop
inc
es
mov
inc
dec
jo
out
popf
xchg
adc
jne
aam
push
pop
cwtl
shlb
rorb
dec
mov
dec
lds
inc
loope
cmpb
cli
cmpsb
movsl
aaa
ret
lea
dec
test
sbb
shll
mov
movsb
ret
dec
mov
jb
cmpsl
sar
sti
gs
mov
adc
push
mov
sarb
dec
loope
push
testl
xchg
dec
sub
push
gs
pop
xor
bound
push
aas
cmp
xchg
cli
call
orl
xor
add
mov
adc
scas
pusha
lahf
aad
mov
xorl
sbbl
mov
jae
lea
jecxz
rcrb
aaa
lret
addr16
negl
mov
dec
mov
xchg
xchg
jae
mov
stc
lcall
out
lods
arpl
sbb
fcomp
movsb
inc
jg
adcl
cs
sbb
fstp
movsl
sub
cmp
cltd
rclb
push
fsubrl
pop
arpl
xor
push
test
mov
lock
out
ret
repz
sbb
xchg
insb
cltd
jg
push
fimuls
or
cmpsb
inc
cli
inc
mov
repz
test
jae
xor
and
je
sub
push
lret
cmpsb
mov
pop
inc
push
in
mov
dec
push
xlat
outsl
stos
int
inc
xor
or
scas
jge
dec
and
dec
xchg
xchg
and
xor
int3
push
cmpsb
rorb
loop
ljmp
mov
out
lods
loop
jns
jno
push
aaa
add
pop
cs
adc
rcll
hlt
dec
and
hlt
inc
movsb
lret
mov
and
insl
aam
push
enter
repnz
cmp
add
cmp
sahf
jg
mov
test
movsl
sub
fdivp
rorb
dec
cmp
cmc
nop
jo
or
push
push
pop
mov
mov
mov
pop
cmp
pop
cmp
xlat
pusha
mov
out
mov
inc
inc
jns
iret
sub
cmp
inc
mov
dec
sbb
mov
movsl
pop
pushl
fwait
mov
fdiv
jle
jmp
lret
decl
out
add
pop
fnstsw
es
cmp
sbb
pop
fldcw
cmp
sbb
or
xchg
xchg
inc
xor
dec
inc
mov
jne
push
lret
test
fstpt
cmpsb
ljmp
les
out
add
jp
xor
mov
dec
stc
leave
and
dec
inc
mov
addl
pop
fldenv
frstor
mov
nop
mov
ret
and
cltd
ds
subb
mov
gs
push
enter
pusha
ret
cmp
cli
push
or
jo
xlat
iret
push
sub
aad
push
mov
ds
jae
cmp
adc
daa
or
bound
mov
cmp
testl
jae
push
test
cmp
jno
xor
cmpsb
mov
mov
push
mulps
and
pushf
rorl
pop
dec
aaa
mov
jecxz
outsl
sbb
bound
pusha
push
movsl
test
push
push
decb
popa
pop
adc
inc
int
test
movsb
or
xor
push
hlt
or
and
xchg
pop
daa
cmp
jl
jne
pop
jle
lcall
movsb
subl
clc
inc
mov
fsubr
adc
shl
xchg
lcall
cmpl
cmc
icebp
testb
cli
cmp
out
inc
mov
pop
fisttpll
add
sub
test
push
jmp
inc
mov
cmp
mov
bound
inc
ljmp
jmp
mov
lock
ljmp
dec
stos
mov
mov
subl
dec
mov
jmp
jns
sbb
cmc
out
or
pop
xchg
push
cmp
cmp
loopne
inc
push
in
push
popf
or
sahf
push
or
data16
icebp
mov
test
dec
and
sbb
lahf
add
cmp
sub
gs
cld
movsbl
inc
sbb
jns
outsb
mov
push
in
cmp
jbe
imul
test
xchg
dec
push
jae
je
push
sahf
xchg
jmp
sbb
xchg
popf
pop
sub
aam
or
mov
lea
loop
mov
enter
mov
mov
jge
fiaddl
mov
addr16
mov
xor
lahf
inc
mov
stc
lcall
out
inc
xlat
sbb
adc
or
add
aam
mov
xchg
movsl
fwait
sahf
dec
jecxz
push
push
xlat
mov
jbe
andl
pop
test
push
cmp
data16
jnp
insl
fs
cmp
cwtl
cmp
xor
addr16
rclb
jo
cmp
arpl
nop
push
insb
mov
adc
inc
xor
push
lea
repz
sahf
xlat
pop
imul
or
mov
mov
fists
lds
insb
mov
push
xlat
aam
push
and
insl
xchg
mov
jl
pop
call
bound
scas
shrb
pop
cwtl
nop
push
xor
aaa
dec
sbb
pop
mov
rcr
push
cld
ss
or
fsubrl
nop
sahf
ss
das
xor
push
xor
sti
mov
mov
inc
jl
lods
pop
imul
mov
push
mov
in
fldenv
mov
ret
xor
repnz
xorb
inc
or
fs
cmpsb
xor
out
mov
or
mov
pushf
cltd
inc
cltd
cmp
inc
in
mov
inc
mov
dec
ret
loopne
es
pop
test
call
lds
divl
adc
movsb
dec
iret
cmc
fadd
call
sbbl
loopne
imull
and
lods
jb
shlb
push
mov
lock
lahf
inc
stos
sahf
add
fisttpll
xor
push
jge
jo
xchg
in
push
mov
mov
mov
lahf
in
xchg
mov
xchg
scas
outsb
mov
inc
cmpsb
dec
mov
in
mov
insl
jbe
in
decl
nop
add
out
fistpll
jne
inc
leave
rcrb
setno
int
pop
jbe
jg
pop
adc
rolb
inc
daa
gs
xchg
addr16
jb
lock
mov
push
fistpll
icebp
andl
mov
in
push
sbb
sub
cmp
or
mov
sbb
dec
mov
jge
fstl
aas
gs
mov
push
xor
mov
out
scas
outsb
jns
dec
es
inc
fwait
cmp
pop
js
aaa
add
gs
dec
stos
lcall
daa
xchg
int3
and
nop
mov
sarl
xor
ja
in
mov
inc
inc
repz
lahf
lret
call
inc
pop
add
cli
xor
test
notb
aad
jo
fistps
and
icebp
cmp
push
cli
push
sub
push
loop
pop
dec
pop
mov
and
xchg
or
dec
jecxz
pop
ljmp
inc
scas
push
gs
jo
or
cmpb
sub
mov
mov
xchg
push
mov
lods
nop
incl
stos
add
pop
call
sbb
xchg
ja
popf
test
in
addr16
imulb
int3
jae
mull
inc
sub
fimull
cmpsl
adc
insb
xlat
pusha
imul
bound
mov
fdivrs
call
dec
cmp
dec
adc
mov
daa
mov
pop
fiadds
std
fwait
stos
daa
push
jl
adc
push
ret
jmp
mov
add
xchg
adc
scas
add
enter
leave
test
das
sahf
loopne
rolb
mov
outsl
fnsave
insl
mov
jp
enter
lahf
imul
es
clc
je
out
mov
rol
incl
into
inc
les
cmp
push
push
cmpsl
aas
sbb
xchg
inc
cmc
jbe
push
arpl
mov
inc
sbb
aad
loop
clc
test
jne
in
dec
mov
adc
imul
lcall
insl
adc
or
ficompl
or
push
arpl
cltd
in
xchg
xchg
inc
inc
mov
pop
jae
xchg
xchg
cmp
lea
mov
movsl
push
bound
fidivl
rcll
sub
inc
jmp
in
mov
or
pusha
fwait
lret
adcb
andb
imul
jge
mov
adc
sub
sbb
jns
cmp
cmp
dec
and
mov
push
in
in
call
in
cmpxchg
ss
pushf
lds
or
dec
dec
stos
adc
int
inc
xchg
and
push
or
aam
hlt
js
popf
sti
xor
inc
pusha
negb
adc
fidivl
stc
out
adc
popf
movsb
hlt
cmp
movsl
je
repz
cmp
add
nop
stc
sub
sub
pop
std
cmp
add
fst
movsl
and
mov
repnz
int
test
add
mov
xchg
mov
add
sti
sbb
testb
in
push
stc
push
sub
sbb
adc
sti
aam
fldenv
or
jo
mov
mov
sbb
dec
rcrl
das
adc
and
and
cwtl
popf
ljmp
or
or
xchg
fs
add
push
push
push
arpl
adc
sub
divl
cs
lods
adc
sub
divl
ret
xor
mov
sub
stos
push
sar
inc
and
push
xchg
mov
ja
and
adc
pusha
jne
mov
xchg
mov
jle
cmp
add
rorl
insb
dec
add
data16
pop
rcrb
mov
mov
lea
enter
push
mov
loope
cmc
cmc
and
lret
sbb
push
push
xor
mov
inc
xor
push
add
imul
mov
pop
pop
jns
fs
xor
push
inc
add
movl
ret
in
jbe
mov
pop
pop
mov
xlat
dec
outsb
pop
shrl
movswl
push
int
add
add
xchg
inc
ljmp
mov
enter
fs
test
push
adc
test
push
test
ret
je
xor
mov
xbegin
inc
repnz
push
sbb
cmp
call
xchg
fcom
add
mov
fdivr
aam
scas
xor
fisubl
sbb
mov
jecxz
rol
xchg
and
shlb
stc
scas
aam
insl
push
std
and
jmp
dec
shrl
in
mov
pop
pop
xchg
fiaddl
gs
jg
add
sub
xor
ja
adc
and
cmp
ss
add
loop
add
jp
orb
or
iret
mov
xlat
push
jb
ljmp
insb
sub
jg
pop
xlat
inc
nop
sub
test
cmp
enter
les
mov
mov
or
jnp
add
iret
in
aam
xor
sub
loopne
sub
loopne
scas
cld
xchg
inc
into
lods
sbb
or
addr16
sub
xchg
ljmp
pusha
or
sbb
outsl
lds
int
lret
insb
push
mov
cmp
rcr
mov
inc
in
adc
shll
sbb
aas
inc
or
push
cmp
scas
mov
sbb
dec
add
xor
mov
mov
and
movsl
movsb
sub
pop
imul
adc
imul
pop
pop
cmpsl
jnp
ljmp
out
and
push
movq
jge
mov
or
out
push
jg
xchg
add
cld
add
incl
mov
cmp
rcll
imul
loopne
dec
ds
daa
mov
jmp
out
push
mov
insb
cmp
or
aaa
dec
mov
es
pop
fs
jne
add
cmpsb
xchg
jnp
pop
dec
test
adc
movsb
test
fidivs
mov
jb
mov
mov
adc
add
and
cmc
inc
inc
outsb
dec
fs
pop
cmpsl
mov
adc
cmp
jl
push
or
je
lcall
push
pop
test
push
loop
or
rcl
dec
xchg
ljmp
xchg
mov
jp
xchg
lcall
sbb
inc
push
inc
int
adc
repz
lods
pop
insl
and
aad
mov
scas
idivb
add
sub
xchg
or
int
jae
inc
repnz
out
aaa
pop
mov
fnstenv
lea
pop
or
add
movsl
sti
add
mov
out
xorb
jp
push
dec
mov
int3
jno
pop
test
mov
fisttpl
jp
push
sbb
mov
js
jg
movsl
jbe
adc
sbb
pop
push
mov
jne
or
dec
mov
mov
bound
ss
shrl
dec
es
add
push
stc
inc
pop
aam
adc
mov
rcr
inc
popf
jne
fwait
in
sub
lahf
inc
shlb
adc
dec
mov
mov
leave
repz
in
push
lods
push
cmpsb
and
lret
in
lret
push
jg
leave
test
rol
or
fisubs
mov
jnp
push
imul
mov
sub
xchg
mov
and
rorb
jns
pop
jae
xor
pop
lods
std
pusha
inc
aaa
stos
add
test
inc
in
xchg
repz
pop
ret
jp
add
jge
xchg
pop
xchg
mov
shr
fildll
sub
sbb
daa
stos
xchg
ja
js
jl
into
xor
fdiv
jecxz
push
mov
mov
out
mov
ret
test
test
fcompp
sub
lods
mov
iret
or
pop
jl
adcl
inc
addr16
stos
or
mov
push
dec
sub
imul
out
lahf
inc
mov
sbb
jno
sti
pop
das
lea
rcrl
xor
outsl
mov
mov
sbb
cmp
pop
mov
and
popf
in
and
mov
lods
scas
adc
cmp
adc
mov
ret
adc
insb
notl
fcmovu
and
rorl
int3
sub
sub
test
mov
fnstsw
int3
sub
pop
popa
rorb
out
rolb
pop
test
push
mov
pop
movq
out
fdivrl
mov
imul
pop
mov
pop
lods
scas
cmp
adc
inc
jb
inc
sarb
popa
fiadds
and
push
and
aaa
adc
or
pop
rolb
lret
in
addr16
addr16
popa
insl
pop
inc
scas
add
dec
lahf
inc
mov
xor
out
pop
je
lock
add
in
mov
and
push
mov
and
add
inc
inc
dec
mov
fidivrs
push
les
sub
xor
push
lods
fdivs
or
popf
outsb
sbbb
repnz
sbb
test
xchg
jl
sbb
ljmp
jno
mov
mov
inc
clc
aas
jo
loop
test
cmc
lret
test
sbb
inc
pusha
scas
or
mov
lahf
shrb
mov
mov
mov
fdivs
test
pop
inc
jb
mov
ret
inc
mov
and
adc
rcrb
xchg
jbe
and
lods
jl
pusha
ror
repnz
outsb
xchg
cmp
lret
popf
and
sub
das
imul
adc
dec
inc
jno
jle
and
xor
add
sub
mov
dec
dec
adc
cmp
imulb
mov
push
mov
adc
xor
jnp
dec
ret
mov
out
fists
mov
or
out
mov
mov
xlat
incl
and
add
cmp
mov
push
in
mov
popf
or
stos
mov
movsb
jmp
mov
stos
mov
fbstp
pop
xor
ljmp
outsl
in
fldenv
out
sub
lods
mov
jmp
jmp
xchg
adc
or
or
cmp
pop
pop
push
jg
out
or
and
jnp
pop
iret
aad
sbb
fs
leave
mov
or
mov
push
in
add
sub
xchg
mov
sbb
pop
insl
push
xchg
shlb
pop
in
insb
mov
stc
mul
add
mov
pop
cmpsb
push
mov
ret
fnstenv
jne
outsl
and
xor
inc
dec
xchg
or
push
or
mov
cmpsl
jecxz
or
repz
js
arpl
mov
fstpl
inc
inc
push
xchg
and
add
mov
xlat
dec
movsb
jnp
pop
lea
fimull
mov
cmc
pop
jae
aad
bound
test
lods
cmp
push
and
movsb
repnz
sarb
arpl
repnz
lret
jnp
pusha
xor
dec
shl
fwait
jne
jnp
add
lahf
jnp
ret
cli
movsl
repz
jmp
jge
jne
test
mov
sub
out
gs
in
ficoml
xor
mov
enter
and
mov
pop
add
inc
shll
movd
scas
xlat
scas
inc
in
fucom
mov
mov
cmp
mov
mov
sbb
shrl
mov
pop
stos
inc
mov
hlt
not
cltd
nop
xorl
or
ret
fwait
mov
shrb
and
icebp
das
outsb
lret
jmp
aam
lds
xchg
imul
lods
push
mov
and
mov
push
add
dec
dec
mov
jle
mov
std
dec
mov
loop
mov
mov
stc
ja
ljmp
and
bound
test
shrl
setno
inc
push
mov
jp
xor
pop
mov
xchg
testl
push
xor
xor
mov
shld
gs
and
jno
mov
jl
inc
addb
rcrl
aad
mov
pop
sbb
bound
mov
fwait
xchg
adc
and
inc
stos
pop
icebp
add
sub
adc
out
in
mov
in
dec
mov
pop
pop
mov
xor
xor
inc
icebp
into
jne
int
jae
sub
sbb
jno
pusha
pop
push
push
xor
jg
jl
test
pop
loop
rcl
icebp
imul
popa
sbb
lahf
adc
int3
inc
cmp
mov
lds
movsb
cmp
inc
pop
movsl
lods
mov
aas
jns
ret
and
or
fistps
mov
sbb
sub
std
loope
std
sbb
mov
cld
aas
movsb
and
outsl
and
xchg
sbb
xor
ja
dec
imul
fsts
iret
jae
ljmp
xchg
mov
push
mov
inc
jp
outsl
cmp
repz
shll
xchg
ret
cmp
lock
das
sub
cmc
fdivrs
pop
cmp
repnz
jns
cltd
jl
mov
mov
fisubrs
cltd
out
iret
push
jecxz
les
or
pop
hlt
in
loop
ljmp
inc
sub
je
jno
ds
cmp
cmp
push
pop
sub
mov
es
movsb
adc
mov
mov
hlt
mov
mov
testb
stc
mov
mov
pop
or
and
and
inc
fdivr
std
mov
pop
mov
aaa
cmp
sub
jge
cmp
js
sbb
incb
sub
iret
xchg
lret
mov
cmp
pop
les
mov
cmp
shrb
out
xor
adc
ret
in
cmp
xchg
daa
in
adc
jne
pushf
lea
mov
add
mov
and
into
lock
aad
out
jno
jg
sbb
es
std
jge
roll
mov
dec
and
push
leave
ja
pop
jmp
insb
negl
push
filds
xor
daa
hlt
jp
pop
push
xor
and
adc
xor
enter
les
or
ss
std
xor
cmp
scas
inc
movzbl
lcall
cld
and
fs
stos
jp
in
or
dec
push
std
fiadds
std
lret
push
std
dec
push
sbb
adc
call
and
sbb
lcall
adc
inc
jecxz
jnp
xor
lret
mov
push
sbb
xor
popf
sbb
jb
xor
fisubl
outsl
call
or
push
fists
xchg
dec
stos
sub
mov
pusha
push
testb
mov
mov
mov
aaa
and
ljmp
sbb
fldenv
decl
push
daa
xchg
stos
jnp
dec
fiaddl
adc
xorb
xchg
pop
mov
jo
jns
cs
jns
xchg
inc
or
lret
adc
mov
mov
cli
and
imul
outsl
lods
subb
sbb
xor
lret
dec
xchg
add
xor
jb
xor
repnz
stos
dec
jne
dec
stos
call
test
jle
pop
das
xor
gs
or
mov
xchg
and
nop
push
adc
and
pop
push
mov
repnz
inc
enter
fsubl
fsubrl
mov
mov
or
lods
mov
fwait
lock
sbb
out
dec
repnz
xor
fs
rcrl
inc
push
scas
pushf
sbb
mov
sub
push
mov
in
pop
inc
cmc
jecxz
push
out
sbb
sub
jae
out
imull
mov
adc
cli
push
jne
stc
imul
lds
inc
cmp
add
ds
fmul
mov
jne
dec
pop
cltd
mov
int
fwait
push
lds
sbb
pop
adc
mov
sti
test
lods
adc
rclb
icebp
roll
adcl
fdivs
call
aaa
out
add
sbb
ljmp
mov
aaa
pusha
stos
dec
jae
rorl
clc
fwait
adc
mov
jg
mov
popa
xchg
rol
push
pop
sbb
call
inc
adc
push
ds
adc
cld
xchg
scas
cmp
xchg
adc
outsb
test
push
pop
adc
aas
push
data16
adc
push
dec
dec
std
dec
push
cmpb
cmp
push
mov
loop
mov
xchg
mov
in
stos
nop
ljmpw
jns
sub
stc
and
lods
xor
jl
mov
and
into
or
in
jns
iret
int3
dec
add
test
insl
cmpsb
call
repnz
das
dec
popa
hlt
and
fs
pop
insl
xor
and
mov
xchg
inc
xchg
out
push
sub
xor
cwtl
call
lods
push
cmp
or
push
push
dec
loopne
fldt
sbb
fdivs
adc
mov
test
cmp
rorb
pop
inc
push
xor
lods
in
outsb
pop
mov
aam
lcall
pop
fmuls
pop
jno
out
sub
repz
lcall
inc
pop
dec
fsubrl
mov
mov
or
add
cmpsl
jge
shlb
cmp
cmp
dec
fbld
dec
popf
jmp
jae
ss
cmp
push
mov
arpl
repz
jecxz
jmp
xlat
push
xchg
rcrb
cld
xor
xor
cmp
pop
cmc
inc
out
adc
cmpsl
jnp
rcll
js
ljmp
xchg
jne
jle
out
shlb
fs
ret
incb
inc
fs
jnp
jl
fstpl
into
pop
fmuls
dec
sub
xlat
das
fxch
int
cmp
or
or
sbb
jno
in
dec
dec
pop
and
adc
adc
mov
ds
cwtl
fstps
jo
pop
sub
test
sbb
out
sub
repnz
xchg
cmpsl
pop
cmc
and
and
out
adc
jl
dec
lret
jbe
call
fs
out
add
jb
outsb
lods
xchg
test
xlat
sbb
lcall
insl
mov
cmpsb
sahf
xchg
nop
lret
pop
ret
xchg
imul
and
mov
rol
lds
ja
add
into
mov
push
dec
pop
xor
pop
sbb
loop
pop
or
mov
movsb
cmp
cld
mov
lcall
sub
and
xor
bound
js,pn
es
mov
mov
push
pop
pop
sub
shrb
add
ds
dec
movsl
insl
mov
adc
lret
out
and
xor
outsb
jecxz
pop
mov
mov
sti
push
int3
je
sub
or
fistps
jbe
sub
fucomip
xor
inc
and
mov
adc
jnp
inc
aam
mov
push
shrl
push
mov
popa
jno
mov
mov
cltd
rcrl
sub
fwait
outsl
call
nop
out
pusha
lahf
int3
inc
das
fsubrs
in
stos
fidivs
js
push
cli
popa
stos
cmp
sub
push
xor
cmp
aam
testl
adc
inc
cli
mulb
lods
push
sub
std
push
insl
xor
inc
xor
dec
mov
lds
lcallw
js
aas
mov
fstps
repnz
xor
in
or
bound
je
sub
cmc
dec
xor
inc
movsb
lds
aam
push
push
dec
jle
test
add
mov
jns
lret
cmp
mov
add
push
aam
jl
xor
cli
and
jge
lods
adc
fdivs
lret
inc
lret
sbb
movsb
jno
xor
lock
sub
lret
mov
adc
lret
push
inc
lret
fldcw
xchg
dec
test
mov
pop
xchg
mov
test
lea
xor
repz
mov
and
fs
mov
popa
xor
mov
aas
jns
imul
mov
andl
adc
mov
jns
and
jo
push
mov
push
fsubl
mov
insb
stos
mov
jge
fldt
adc
pushf
pop
imull
cmpsl
xchg
xchg
movsb
add
dec
les
jecxz
push
xchg
sub
inc
pop
aam
push
xor
in
add
inc
add
and
add
jno
sbb
mov
fs
push
loopne
lret
adc
cmc
pop
cs
xchg
test
mov
ljmp
jp
je
pop
dec
movsb
xchg
cwtl
add
adc
jno
outsl
and
xchg
int
cwtl
jae
pop
jns
scas
sub
stos
in
and
xchg
ss
push
mov
or
and
pop
leave
mov
cs
lock
pop
addr16
and
scas
aas
pop
aaa
inc
ret
dec
mov
xor
mov
andl
mov
loopne
stos
in
fmuls
lahf
or
mov
or
jg
aam
xor
dec
adc
jmp
mov
pop
lahf
addl
mov
int3
orb
test
aam
arpl
sar
mov
sbb
dec
xchg
fcmovu
jne
stos
dec
dec
mov
in
sub
test
adc
cmc
call
jns
stc
cmpl
jb
stos
repz
ret
setp
dec
rclb
cltd
and
mov
out
cmp
xchg
jle
je
push
mov
adc
data16
cmp
jg
andb
les
es
and
in
dec
cmc
fidivl
fnstcw
repnz
pop
insl
imul
jbe
jo
aam
jecxz
xchg
das
stos
sahf
or
mov
push
pop
cmp
pop
lods
scas
aad
popa
aas
cltd
es
push
jne
inc
mov
pop
adc
push
add
inc
pop
sub
jnp
inc
int
jns
inc
dec
mov
or
sbb
ds
lods
mov
sti
nop
sahf
adc
push
push
rcrl
in
or
push
inc
nop
add
enter
sub
cli
push
sbb
je
xor
lcall
xchg
loopne
pop
insb
icebp
add
pop
xchg
scas
add
jne
popf
aaa
int
sarb
shll
bound
dec
sbb
hlt
mov
jnp
test
cwtl
or
out
mov
push
in
sahf
loopne
xchg
fstpl
pop
loope
pop
das
popf
lds
dec
pop
xchg
call
inc
push
or
insb
push
mov
inc
shrb
pusha
ljmp
xor
pop
data16
test
xchg
or
mov
lret
rcrb
aas
push
fmull
push
sbb
jnp
push
popa
jp
repnz
nop
lret
add
xor
xchg
fstpl
push
mov
xchg
cmp
daa
adc
mov
cs
movsb
mov
ja
and
stos
addr16
xchg
add
loop
cwtl
pop
xor
and
mov
pop
movsl
cwtl
hlt
jnp
pop
jle
imul
jl
daa
push
inc
mov
push
inc
ja
jp
cmc
push
xchg
mov
pop
or
sti
repz
mov
out
imul
sub
call
mov
call
aas
adc
jnp
enter
fwait
mov
cmp
decb
sub
mov
and
scas
inc
sbb
mov
and
adcl
adc
lods
addr16
inc
pushl
dec
test
lods
and
mov
hlt
xchg
out
and
dec
lods
lret
dec
sbb
dec
nop
add
lods
cld
add
cmp
fcomps
int3
adc
daa
movsb
lock
andb
mov
ljmp
mov
scas
add
add
mov
fdivs
fwait
das
mov
clc
or
hlt
mov
jmp
mov
pushf
cwtl
mov
push
inc
rorb
lds
dec
xor
xchg
popl
pop
dec
in
pop
mov
mul
inc
ret
jno
gs
stc
push
pushl
inc
mov
cmp
pop
push
fnstsw
sbb
test
inc
int
hlt
mov
jae
or
xchg
pop
cmp
fwait
sbb
sahf
or
push
sti
cmc
xlat
and
iret
pop
mov
adc
fwait
pop
stc
sbb
pop
or
sub
xchg
test
movsl
out
in
adc
mov
pop
lods
cmc
in
lahf
mov
mov
arpl
mov
out
xor
les
xchg
je
inc
cmp
adc
insl
push
lahf
out
cmp
sarl
out
jns
pusha
mov
ror
dec
jno
mov
fnsetpm(287
iret
mov
cmc
cmp
mov
cmp
pop
push
xchg
es
bound
out
ljmp
mov
mov
in
imul
cmp
xchg
idivb
data16
test
xchg
repnz
jbe
inc
mov
sub
add
adc
pop
push
or
mov
fsubrs
rcl
rcll
lods
inc
xchg
ficompl
fs
jne
cld
aad
or
je
jno
cmp
xchg
in
scas
lds
jo,pn
repz
rcrb
lcall
push
dec
xlat
minps
dec
and
lret
jle
and
mov
popf
cwtl
jnp
jne
pusha
inc
lock
mov
popa
fidivrl
adc
bnd
loopne
fmulp
mov
add
in
lahf
and
cmc
jo
into
jae
dec
mov
dec
loope
or
mov
cld
xchg
ja
xchg
mov
mov
shlb
mov
sub
mov
out
jmp
cmc
ror
inc
ret
mov
lcall
clc
pop
jl
push
adc
push
sbb
xor
xchg
fs
lods
xor
clc
fistpl
repnz
xor
bound
mov
xchg
insb
popf
and
imul
jne
push
ret
loop
adc
push
sti
xlat
ret
mov
imull
ja
jge
sub
decl
shrb
push
je
push
mov
ljmp
inc
sbb
cmpsb
stos
cmp
bound
cmp
movsb
mov
cmpsl
stc
movsb
adc
pushf
cmp
nop
pop
fwait
ljmp
add
cwtl
jg
lea
cli
or
cmp
shlb
iret
int
sub
shl
sbb
pop
xchg
lret
inc
rorb
inc
test
fists
sahf
xor
inc
sub
add
or
insl
call
jp
push
sbb
adc
add
ret
roll
insl
cmc
iret
test
and
pop
out
inc
jg
arpl
inc
xchg
fldz
pushl
leave
pop
jle
aad
lds
add
rclb
enter
mov
sub
movsl
out
sti
sti
xor
cmp
jle
outsb
push
decl
jno
and
dec
addr16
push
mov
adc
sub
and
stc
sbb
je
loopne
sub
loope
push
out
orb
mov
mov
in
dec
jmp
xchg
mov
sbb
fwait
xchg
mov
inc
mov
jno
shlb
cmp
fisubrs
cmc
icebp
push
xchg
sbb
rclb
aam
shll
mov
movsl
jmp
cmp
adc
rclb
adcl
xchg
mov
stos
sub
cmp
dec
push
fistps
lds
out
inc
iret
xchg
push
outsb
cmp
cmp
in
mov
roll
cmp
ljmp
sub
xchg
nop
push
cmpsb
or
cld
add
scas
fwait
bound
cmp
bound
imul
xlat
sbb
xchg
mov
loop
dec
je
mov
xor
xchg
outsb
jl
arpl
arpl
cmp
inc
or
repnz
cli
sub
or
inc
add
sbb
mov
in
xlat
adc
loopne
test
fldenv
jp
add
cli
adc
insl
insb
mov
xor
mov
lods
out
sbb
mov
xor
xor
shrb
lahf
cmc
xchg
test
adc
sub
pop
pop
mov
mov
addb
jmp
jae
outsb
ljmp
inc
ljmp
push
sub
or
xchg
std
push
loope
inc
dec
int3
ds
je
jge
test
mov
push
test
out
add
inc
gs
arpl
xchg
sar
pop
mov
cmp
leave
rcr
cmpsl
rclb
dec
scas
daa
popf
in
lds
lock
inc
or
insb
xor
sub
sub
test
mov
jmp
dec
aaa
xlat
xorl
push
int
mov
xor
in
cmpsl
lea
inc
nop
out
mov
loop
sub
add
out
jns
push
ljmp
mov
test
cmp
je
xor
mov
push
xlat
repnz
mov
mov
push
gs
add
xchg
bound
jnp
cmp
pop
cmp
negl
sarb
sbb
pop
test
adc
jno
pop
notl
inc
xlat
insb
adc
and
mov
ljmp
cmpsl
pop
cmp
aam
not
repnz
pushl
mov
xchg
outsl
push
dec
pop
lods
push
add
js
int3
ss
sub
cmp
mov
test
inc
test
ret
test
and
mov
and
in
xlat
xchg
shl
mov
clc
pop
push
mov
sahf
aam
mov
rorl
lahf
fcmovbe
mov
cmp
or
aad
pop
push
pop
insb
fdivr
jo
xor
movsb
movsb
insl
sub
les
dec
gs
fsub
mov
inc
jmp
sahf
xchg
cli
data16
stos
add
je,pt
lds
mov
dec
shlb
mov
out
and
div
xchg
stc
cs
xor
mov
pop
sub
fwait
mov
repz
or
push
push
insl
sbb
shr
or
add
xor
popf
mov
mov
pushf
scas
mov
fisubrs
mov
outsl
pop
lret
inc
out
xchg
out
fs
repnz
dec
sbb
ret
push
std
cwtl
and
pop
xor
inc
push
push
lahf
lods
sbb
push
sbb
iret
icebp
es
fimuls
or
ja
inc
push
in
adc
fsts
push
lods
add
lock
sti
add
xor
push
jp
in
jecxz
cltd
lcall
inc
cmp
mov
outsb
out
jns
add
lret
bound
push
and
and
cld
mov
lds
jg
mov
and
inc
inc
sub
pop
loop
adc
sti
std
mov
jecxz
and
mov
out
icebp
cmp
adc
xor
cmpsl
sbb
jbe
cli
xor
push
xchg
pop
push
or
dec
cmpsl
pop
stc
gs
sbb
mov
sbbl
cmc
push
inc
out
test
sbb
push
push
bswap
pusha
rcl
cld
xor
adc
xchg
shl
mov
jmp
dec
fisubl
inc
jmp
jb
ret
out
inc
mov
mov
inc
sub
mov
and
enter
sbb
scas
cmp
inc
lods
xor
mov
ficomps
mov
out
shrb
push
adc
lret
or
scas
ficomps
sti
pop
xor
xor
push
sbb
sbb
lahf
or
jle
jns
sbbb
std
inc
dec
fldt
xchg
dec
sarb
aad
pop
ljmp
outsl
lds
push
sbb
or
cmpsb
dec
imul
inc
xchg
sbb
scas
daa
sbb
icebp
push
lods
push
lret
mov
add
int
pusha
adc
jne
addr16
jecxz
cmpsl
outsl
push
xor
shr
leave
jmp
stos
scas
xor
pop
cmp
data16
cmp
clc
pop
arpl
dec
popf
fstpt
sahf
sub
and
sbb
sbb
xor
movsb
or
imul
iret
subb
stos
add
js
pop
pop
scas
jns
outsb
mov
jns
cmp
clc
filds
jo
ja
cmp
fcomi
icebp
jae
cmp
adc
lret
inc
jle
sar
sub
fcoml
ljmp
stos
fcmovu
push
add
gs
shrb
push
cmp
ret
stos
pushf
mov
inc
push
lcall
imul
cmpsl
mov
in
mov
inc
jmp
sahf
icebp
loopne
or
cmp
shr
mov
jae
loopne
xchg
repnz
clc
addr16
cmpsb
aas
pop
pop
into
js
xchg
fwait
ja
and
sub
in
cmp
add
fcomps
test
loopne
mov
ljmp
mov
in
add
or
fwait
pop
sarb
mov
int3
cmp
push
or
add
cltd
sub
call
repz
sub
in
push
cmp
imul
addr16
push
repz
xchg
mov
icebp
popa
adc
cmp
dec
mov
cmp
movsl
lret
jns
and
mov
xor
or
and
push
cmp
js
jne
out
stos
rorl
frstor
shr
jns
inc
fistl
dec
cmp
pop
arpl
jno
rcr
mov
mov
cmp
rclb
dec
cmp
rol
xor
pushf
fmulp
cltd
sub
dec
movsb
xchg
push
pop
ret
in
add
xor
or
mov
inc
insl
xchg
js
addr16
fsts
in
xchg
add
aaa
push
inc
ljmp
mov
push
cmpsl
call
std
mov
rep
cli
xorl
mov
in
fstpl
enter
mov
mov
mov
popf
mov
mov
insb
ljmp
insb
cwtl
push
insb
and
mov
out
push
arpl
les
dec
repnz
leave
cli
or
aas
fsubr
int
sbb
pop
xchg
jmp
ljmp
dec
data16
cmp
cmpsb
addr16
push
lret
int3
into
mul
and
in
pusha
push
stc
fcomi
add
pop
icebp
sub
push
or
clc
jb
add
sbb
js
lods
xchg
es
cmp
and
jmp
sbb
pop
dec
xchg
mov
xor
in
mov
mov
cwtl
ret
cmp
pop
jl
stos
out
sub
cs
mov
in
ljmp
aad
out
adc
adc
xlat
pop
fwait
insb
fdivr
inc
rcl
sarl
jmp
std
dec
aas
dec
xor
loopne
jae
aad
sbb
inc
sub
das
movsl
sbb
test
and
cmp
or
or
pushf
inc
dec
mov
cmp
clc
xchg
test
or
leave
push
daa
fs
cltd
add
and
mov
mov
mov
sub
dec
fsubr
add
shll
shll
scas
jo
mov
xor
pop
inc
lea
xchg
js
outsb
jne
jb
mov
roll
mov
repnz
arpl
aas
popl
lea
movsl
add
mov
out
outsl
cmp
out
test
shrl
or
add
fidivrs
cmp
inc
out
add
dec
dec
andl
push
je
sarl
hlt
sbb
popf
pop
dec
cmp
and
sbb
dec
enter
cld
xchg
xchg
ret
pop
jo
cmp
jg
hlt
lds
jg
dec
out
jmp
dec
xchg
mov
popf
push
mov
pop
divl
xor
xchg
sbb
add
jmp
or
stc
mov
add
sub
mov
or
repnz
andl
push
insb
inc
mov
lcall
stos
dec
cmpb
cmp
data16
and
outsl
cmc
pop
pop
pushl
or
daa
test
pop
fs
xlat
movsb
sbb
movsb
adc
push
mov
aam
mov
xchg
movsl
mov
outsl
aam
test
je
mov
test
es
sub
add
ud0
sbb
testb
and
rol
dec
in
inc
cmp
or
lret
dec
shlb
mov
pop
lcall
xor
pop
movsl
add
scas
lret
add
arpl
data16
sbbl
pushf
mov
xor
add
cmp
sbb
pop
and
sbb
xchg
leave
mov
mov
stos
sub
adc
cld
jecxz
push
sub
cmp
or
adc
add
xor
outsl
inc
push
outsb
in
jle
int3
adc
sbb
jp
dec
lret
aaa
add
icebp
out
insl
popa
sbb
arpl
jmp
cld
push
idivl
fs
fidivl
pushf
nop
ret
xchg
xchg
outsb
pushf
movsb
mov
push
js
xchg
jbe
mov
cmp
in
stos
orl
lock
or
sbb
xor
repnz
lock
sbb
enter
dec
cmp
cmp
popf
push
scas
fdivs
pop
sbb
inc
pop
les
mov
in
pop
je
rorl
inc
les
call
cmpsb
std
imul
cmp
cmp
es
loopne
mov
out
test
jmp
cltd
push
pop
jbe
push
stos
or
je
divb
outsl
lea
in
push
and
cmp
stos
lahf
das
add
subl
pop
pushf
mov
mov
cli
cld
jnp
clc
rorl
movsb
jmp
aam
out
imul
mov
adc
enter
shll
mov
adc
cmp
pop
mov
xchg
pcmpgtw
addb
push
sub
int3
inc
xchg
bound
lods
rcll
push
mov
loopne
hlt
aam
dec
sbb
std
or
mov
lcall
inc
ss
jns
sbb
jge
or
divl
jecxz
popf
dec
gs
push
jecxz
adc
fwait
pop
aad
jo
or
int
cmp
xor
test
cmc
inc
mov
cmp
pop
mov
and
in
jp
out
and
xchg
addr16
xchg
xchg
outsl
mov
test
mov
and
pop
cltd
mov
pop
sbb
scas
lcall
mov
xor
movsl
dec
mov
outsl
xchg
lock
jno
mov
outsb
sub
jl
lds
pop
out
sbb
stos
or
insb
rcr
cld
repz
int3
inc
shll
sub
dec
lahf
xor
imul
adc
xor
mov
loope
push
jnp
stc
jp
loop
push
icebp
and
in
and
into
stc
cmp
cmp
jge
ret
lret
imul
ret
dec
pop
pop
mov
adc
cmpsl
shll
arpl
outsb
ds
lds
jle
cmpsl
std
outsl
or
fists
sahf
push
mov
dec
out
mov
ret
add
ret
lahf
clc
inc
cmp
jge
insl
jae
popf
inc
lock
inc
rcrl
aaa
dec
mov
push
bnd
xor
iret
aaa
push
mov
rcrl
fisubs
pop
roll
sbb
adc
inc
jp
ror
aaa
adc
cmp
xor
call
pop
jp
sub
test
inc
jns
pop
frstor
mov
cmp
mov
jecxz
xchg
movsb
enter
shrb
imul
inc
mov
push
mov
in
pop
xchg
ret
dec
sbb
xchg
clc
mov
sbb
pop
les
out
mov
sbb
loop
ret
pop
pop
xchg
inc
push
mov
adc
xor
addr16
or
xor
std
sar
dec
inc
movsb
dec
repnz
in
pop
hlt
mov
mov
xchg
mov
xchg
mov
cld
jns
repnz
pop
push
imul
sbb
ret
scas
adc
rcl
das
xor
add
sbb
mov
cltd
aas
aas
aad
and
fnsave
insb
bnd
ljmp
repz
hlt
fsubrl
mov
or
dec
inc
sub
ljmp
cli
sbb
push
adc
mov
jnp
mov
pushf
ja
test
mov
pop
adc
faddl
js
mov
add
bound
idivb
hlt
pop
push
jle
or
or
xlat
loopne
orl
push
or
lods
lock
scas
sahf
aam
sti
f2xm1
push
ret
test
shll
cmp
xor
icebp
orb
outsb
push
mov
lret
ljmp
in
or
test
clc
push
and
fs
mov
js
bound
and
sbb
mov
cmp
cmp
rcrl
dec
insl
sbb
sarl
in
test
jge
xchg
andps
push
pop
dec
out
lods
fdivrs
dec
sub
dec
lcall
adc
mov
mov
rorl
pop
fimuls
lea
mov
nop
jp
sub
push
push
pop
mov
push
push
js
mov
and
jp
cmp
pop
scas
jp
adc
loope
int
pop
testb
outsb
stc
fmulp
aaa
setno
ljmp
scas
jbe
mov
adc
test
jl
add
aam
test
idiv
call
cmp
in
pop
fs
mov
inc
les
clc
scas
sbb
inc
pushf
mov
cmp
xchg
adc
add
pop
mov
addr16
add
xchg
sbb
cltd
repz
test
xchg
cmpsl
cmp
mov
mov
mov
jl
inc
lea
gs
cmp
inc
add
and
xchg
std
add
repnz
icebp
insb
icebp
pop
and
xchg
jmp
adc
jae
inc
mov
mov
push
xor
pop
dec
shll
push
movsb
scas
scas
xor
loop
xor
mov
pop
dec
sbb
cli
xchg
inc
mov
outsl
push
inc
fs
leave
mov
mov
mov
add
cmp
loop
xchg
mov
scas
mov
ficoml
mov
adc
ja
cmp
cmpsl
push
mov
push
jo
pop
out
in
aad
imul
sbb
dec
xor
sar
mov
and
mov
dec
jg
adcl
push
rcr
je
or
xchg
iret
push
es
clc
adc
xor
jns
daa
adc
shrl
out
jl
insb
test
lahf
push
push
xchg
loopne
adc
pop
and
jmp
mov
sbb
ja
adcb
imul
loopne
xchg
cld
lahf
inc
aad
hlt
notl
sub
xor
es
or
sbb
pcmpgtd
movsl
pop
sub
je
jno
and
out
inc
scas
push
jns
mov
adc
jle
cld
cvtpi2ps
or
mov
scas
popf
iret
lret
repnz
gs
sti
mov
push
xor
xchg
inc
ja
pop
xchg
or
adc
in
fidivrs
dec
std
scas
add
inc
movb
in
xchg
dec
sub
insb
out
cmp
mov
pop
and
jo
ds
push
clc
add
jbe
outsl
ljmp
cs
pushf
stos
addr16
inc
sub
cmpb
push
subl
call
aas
dec
mov
inc
or
push
icebp
and
ret
sbb
cmc
sbb
repnz
into
mov
aas
icebp
fbld
rcrl
icebp
sub
push
xchg
mov
lret
pop
cmp
mov
adc
aaa
dec
xor
dec
stos
push
cmp
icebp
sbb
das
dec
iret
jo
pusha
pusha
mov
mov
nop
loopew
and
scas
push
inc
push
push
inc
inc
mov
aad
add
push
fwait
int
jmp
fs
in
or
cmp
lea
repz
ficoml
lcall
lds
nop
shrb
imul
cmpsl
xor
stos
fildl
add
les
inc
sbb
cmp
sub
add
mov
xor
mov
mov
das
fcmovu
jp
xchg
xchg
cmp
xor
or
cmp
pushf
xlat
push
and
lods
jmp
cs
jp
cmp
mov
ljmp
fsubrp
add
scas
es
std
jg
cwtl
pop
mov
fnstcw
out
xlat
in
cmpsb
adc
nop
inc
pop
movsb
loope
jns
pop
testl
jo
testl
inc
mov
jb
inc
loopne
rcr
cmp
mov
adcb
in
lahf
inc
jns
cmp
push
stos
xor
lret
inc
mov
call
sbb
adc
js
jbe
cmp
sub
mov
out
sbb
in
sbb
push
mov
int
sbb
jecxz
dec
mov
mov
fimull
sub
ffree
mov
sbb
out
cmpsl
in
idivl
addb
clc
pushf
and
sar
dec
lds
rcrl
mov
jge
sub
mov
sub
ret
mov
lahf
mov
in
add
loopne
mov
fldenv
daa
mov
cli
pop
sbb
shll
xchg
push
and
inc
aad
sbb
add
jae
xchg
daa
mov
dec
in
scas
mov
push
add
pop
sbb
pop
cmp
popf
pusha
cmpsl
mov
cwtl
std
cmp
movsl
jl
sub
lods
loopne
pop
push
adc
popf
jbe
jl
xor
loop
jb
cmpsl
aam
sub
xchg
mov
fldt
ret
loopne
push
push
add
ficoms
xchg
mov
mov
dec
cmpb
jns
loopne
sbb
inc
push
ret
xchg
aam
popa
mov
cwtl
pop
ja
bound
jg
dec
xor
aad
dec
and
in
sub
test
pop
mov
das
scas
add
std
dec
int3
pop
push
scas
shrl
sbbl
fists
cmp
loope
mov
push
mov
cs
fbld
insb
stos
pop
imul
gs
int
movsb
shrl
xchg
pop
int
testl
dec
sarl
jp
das
or
jb
mov
cmc
push
add
push
push
pop
jne
xor
fdivl
sahf
add
xor
rcrb
sub
mov
jbe
fisttpll
mov
and
adc
mov
jmp
push
adc
jns
mov
out
or
push
mov
adc
cwtl
add
or
inc
sub
or
imul
sub
xchg
ret
test
adc
mov
push
mulb
mov
mov
dec
or
jge
movsl
test
xchg
rcr
mov
movsb
clc
mov
in
ja
mov
int
call
jnp
mov
icebp
ja
rclb
movsb
jecxz
push
movsb
dec
mov
test
sub
shll
ret
jne
push
adc
rcll
out
fwait
sub
mov
sbb
ficomps
pop
fbstp
sbb
movsb
adc
mov
pop
or
adcl
push
inc
adc
cmp
mov
mov
outsb
rolb
xchg
sub
shr
pusha
data16
cwtl
mov
nop
rcrb
insl
and
mov
jp
mov
xchg
dec
push
sub
incl
or
inc
lds
out
enter
dec
imul
pop
push
add
cmp
lret
xchg
push
data16
dec
fisttps
fisubs
iret
push
imul
xchg
mov
or
loop
mov
pop
adc
and
cmpl
mov
popa
mov
lret
and
in
fs
out
imul
test
iret
sub
scas
sarl
rcrl
push
add
dec
sbb
xlat
shll
ds
pop
push
ftst
mov
pop
adc
cmp
xchg
repz
mov
loopne
aas
ss
cld
loopne
movsb
test
mov
sahf
cmp
push
xchg
test
lock
and
inc
lahf
nop
loopne
imul
pushf
fst
push
out
mov
ss
pop
mov
sub
fmuls
mov
adc
loope
and
dec
push
jp
dec
sbb
push
jbe
cmp
pop
ja
mov
lahf
imul
std
mov
dec
lods
popf
xor
xchg
ja
cmp
sub
dec
cmc
xorl
mov
sbbb
std
push
mov
adc
xor
xchg
push
mov
inc
and
movb
xchg
dec
lahf
push
mov
cmp
in
dec
rcll
mov
rcll
mov
cmp
sbb
sub
and
fwait
int3
push
imul
xchg
hlt
push
mov
dec
lret
lret
call
jae
das
sub
aaa
fsubl
mov
mov
push
jno
sub
xor
pop
arpl
cmpb
lret
mov
mov
xor
add
mov
cmp
mov
xlat
mov
lods
jae
dec
enter
fdivr
pop
pop
in
mov
mov
lret
mov
bound
mov
ret
roll
inc
into
pop
nop
xor
addl
fs
pop
pause
jns
in
mov
mov
xor
sbb
pop
jnp
dec
pop
inc
inc
jge
scas
insb
push
inc
sub
loop
mov
push
mov
mov
aad
pop
inc
stc
cwtl
push
fisttpll
test
fsubrs
xchg
xchg
push
test
sub
mov
pushf
hlt
faddl
mov
push
imul
xchg
xchg
mov
sub
cmpb
ja
stc
mov
mov
xor
pop
mov
shlb
mov
cli
orb
ret
mov
rol
pop
orb
dec
cltd
pop
aad
mov
mov
ss
cmpsl
cmp
pop
pop
jnp
xchg
mov
andb
ds
push
pop
dec
mov
adc
lea
sbb
faddl
push
sti
mov
cmpsl
std
stc
sub
fidivl
cmpsl
lcall
nop
push
shrb
and
out
clc
pop
fadd
jns
fnsave
imul
aaa
xor
stc
mov
jne
les
aad
xor
push
dec
popa
mov
push
inc
cmp
imul
fisubs
out
dec
fsts
xor
aas
dec
mov
push
jnp
stc
nop
arpl
inc
inc
cmp
cmc
fiadds
loope
pop
sub
push
out
jp
lods
sbb
out
pop
sub
xchg
cmp
pop
push
pop
pop
push
xchg
addb
fs
insl
test
vmwrite
out
sub
and
fistl
fnstenv
fbstp
dec
sbb
mov
imull
sub
das
sbb
jmp
int
arpl
jo
mov
or
call
decl
lahf
dec
push
repnz
adc
fwait
ds
xchg
repnz
sahf
imul
pop
mov
add
push
imul
add
aaa
je
dec
jmp
cmp
cmp
cmp
add
pop
cmpsb
aad
shlb
dec
jmp
ds
outsb
inc
fisubrs
in
add
inc
movsb
mov
or
pop
or
dec
aas
or
lahf
orl
outsl
push
jmp
dec
fmull
in
mov
ret
inc
dec
jp
sub
sub
in
add
loopne
or
aad
mov
int3
ret
xlat
fsub
test
lock
daa
adc
js
mov
lcall
movsl
lds
pop
adc
inc
jns
pusha
jle
enter
mov
cmpsl
cmp
inc
mov
imul
lret
jge
and
icebp
cmp
xchg
lock
adc
andb
js
in
adc
adc
cld
shl
test
add
icebp
mov
mov
mov
cmp
add
push
in
lahf
push
push
neg
and
push
pop
mov
jne
add
jecxz
pop
sarl
inc
xchg
xchg
inc
ret
adc
loop
ss
aad
mov
cmp
sbb
or
inc
xlat
cmp
add
jp
pop
or
pop
sbb
jle
divb
mov
jge
faddl
gs
pop
adcl
call
cmp
jp
cmc
inc
sbb
jmp
scas
in
jecxz
aas
jge
js
sbb
dec
mov
jnp
in
mov
clc
mov
inc
data16
xchg
pop
xchg
lods
in
dec
int3
fwait
push
cmp
xorb
pop
adc
jb
pop
sbb
xor
test
pop
add
mov
mov
pop
fnstsw
mov
sub
dec
xchg
inc
sbb
sub
cmpsl
push
fsubrs
popf
or
xor
decl
lods
push
int
pop
sbb
pop
lcall
lret
cmp
inc
sti
aad
adc
repnz
popa
jbe
jb
adc
mov
pop
cmp
mov
adc
lods
cli
cmp
insl
xchg
divl
fsubr
js
inc
loopne
sbb
sarl
cmp
mov
cld
dec
jo
lret
jle
xchg
xchg
push
mov
jge
mov
dec
dec
scas
call
xor
cmp
testl
mov
fwait
push
andl
and
mov
xchg
fiaddl
call
rolb
push
scas
mov
inc
jnp
cmp
jno
jl
mov
in
icebp
aas
out
test
shlb
jge
int3
cltd
sbb
push
pusha
add
jae
jne
cmp
xor
cmp
lea
inc
xchg
fadds
rorb
push
pop
add
xchg
cmp
or
or
adc
lock
push
inc
sbb
dec
inc
push
das
and
mov
loope
cltd
pusha
jge
push
cmp
fld
je
fwait
jle
and
adc
ss
sub
mov
or
push
and
iret
fsubl
movsl
leave
in
and
jne
xchg
dec
pop
pop
test
ret
push
push
stc
mov
cmp
test
ja
aad
cltd
in
sbb
dec
repnz
xor
xchg
push
push
xchg
inc
push
and
mov
fiaddl
push
cmp
stc
pop
pop
ret
jo
sbb
gs
mov
add
stos
lods
leave
cmp
imul
sbb
outsb
mov
cli
in
dec
mov
adc
test
xchg
jb
mov
jb
bound
inc
jmp
shll
popf
movsb
rolb
iret
sub
pushf
insl
out
mov
add
pop
rcrb
test
repz
pushf
mov
ds
push
push
loope
mov
out
adc
daa
inc
mov
fdivl
inc
jge
fcomps
arpl
lahf
xor
aad
jb
ds
pop
lahf
lods
or
leave
gs
addr16
mov
idivb
mov
inc
lock
fnstsw
loope
mov
aam
lahf
add
inc
sub
mov
dec
ja
rol
andb
jo
mov
sbb
stc
icebp
scas
mov
test
cmp
lcall
push
bound
cld
out
cmp
cmp
sahf
sbb
daa
ret
pop
adc
mov
or
mov
lret
push
xchg
xor
int3
jg
and
rsqrtps
sub
jnp
mov
sahf
loopne
movsb
cltd
lock
mov
sbb
cmpsb
sbb
leave
outsb
mov
bound
call
cmp
add
push
cmp
cli
sbb
repz
popa
ja
cmpsl
ret
adc
cmp
shr
inc
sbbb
adc
jbe
inc
rol
and
jns
sar
add
and
enter
jns
scas
dec
stos
cmc
xchg
mov
shrb
lret
lods
jecxz
mov
push
push
mov
hlt
cwtl
push
mov
out
cmp
test
shl
pop
notl
pop
mov
jg
stc
push
dec
lret
in
cmp
bnd
and
cmp
mov
ret
inc
outsb
adc
out
add
pop
movsb
imul
jae
mov
mov
push
sarb
lock
pushl
aas
sub
xchg
sbb
push
cld
inc
das
ljmp
jbe
lret
xchg
mov
in
cmp
sbb
xlat
jnp
push
adc
jg
iret
pop
xchg
popa
in
xchg
lock
add
std
mov
test
xor
xor
mov
in
lods
mov
xor
xchg
shrb
adc
stos
jp
cmp
andb
icebp
mov
adc
daa
out
ss
pop
sahf
insb
sbb
push
pop
cs
out
add
dec
stos
jb
imul
stos
aaa
cli
jle
into
jle
sti
popf
pusha
or
clc
lret
test
add
jns
xor
xor
xor
pop
andl
insb
js
jmp
cmp
enter
jge
loope
adc
sbb
add
cmc
popf
push
jmp
xchg
cmpsl
mov
iret
inc
bound
pop
test
test
sbb
jmp
dec
cmp
sar
fwait
iret
daa
es
lock
mov
adc
movsl
dec
bound
sbb
in
fwait
adc
dec
sub
sub
int3
mov
jbe
xor
leave
out
cmp
add
fs
add
sub
sbb
fiadds
fsubrl
sub
dec
or
mov
dec
andl
fidivrs
xchg
xchg
into
jbe
sbb
add
aad
outsl
sbb
push
test
ds
aaa
and
mov
mov
or
addr16
pop
pop
idiv
jae
aam
das
popa
mov
insl
mov
in
iret
push
int3
sub
fsts
cwtl
xchg
mov
adc
das
adc
pop
fistps
adc
jmp
roll
sub
arpl
mov
xchg
fmul
mov
inc
cmp
mov
push
loope
adc
xchg
hlt
pop
shlb
test
loope
xor
dec
popf
jle
pop
cmpsb
pop
mov
aas
sbb
and
or
cli
dec
pushf
imull
push
push
inc
add
adc
push
xchg
mov
lods
imul
mov
jmp
shl
jl
jg
idivl
push
sbb
xor
dec
mov
leave
push
pop
mov
call
pop
jae
pop
in
inc
jl
outsb
sub
fsubrp
push
js
mov
pandn
push
fldpi
adc
add
jne
loop
in
orb
push
mov
out
pop
mov
or
leave
lahf
inc
rorb
pop
adc
test
adcb
in
dec
mov
setnp
movsl
mov
int
pop
dec
in
xchg
es
pop
cli
inc
inc
loope
shll
push
pop
stos
adc
lock
icebp
mov
jbe
pusha
push
cmc
fadd
aad
insl
dec
jns
sti
setae
push
icebp
fisttpl
push
jge
xchg
sbb
enter
lods
fildl
cmpb
sub
pop
xor
lds
sbb
rcrb
lea
dec
jle
mov
and
push
jns
cmpsl
push
cmpb
fs
jl
sub
add
test
mov
nop
sti
aas
xchg
fcomps
test
lods
rcrb
sahf
sbb
stos
test
push
stos
inc
in
icebp
imul
jp
sub
stos
xchg
dec
je
jbe
pop
ja
pop
mov
sub
jmp
jbe
fldt
push
filds
addr16
adc
dec
pusha
hlt
xchg
sarl
inc
mov
xchg
incl
lcall
jbe
xchg
in
aam
imul
scas
stos
mov
out
call
cwtl
nop
jnp
dec
cmp
in
adc
pusha
ret
ret
mov
ds
jmp
repz
arpl
js
fsubr
lret
icebp
sub
cmc
push
scas
push
dec
adc
xor
mov
sub
xorl
mov
sbb
hlt
sub
push
xchg
xlat
arpl
dec
mov
out
std
lods
imul
mov
mov
sbbb
push
inc
lock
pop
pop
push
sub
jnp
fcomps
jnp
imul
stos
push
push
in
dec
and
xorb
push
sbb
xor
adc
sub
pop
hlt
mov
mov
pop
xchg
cmc
sarl
lahf
bound
outsb
ja
call
ljmp
repnz
call
xor
in
lods
ret
mov
ds
or
mov
add
addr16
mov
mov
aaa
shll
je
gs
fildll
rcrl
fstpt
xlat
adc
and
popl
leave
push
pop
loop
jge
and
ds
or
dec
fwait
ret
push
push
add
dec
int3
clc
xchg
ja
xor
scas
leave
sub
push
mov
ret
pop
xor
loopne
and
sbb
sub
pop
out
push
sahf
or
pop
pop
xchg
push
jo
movsb
in
cmp
pusha
dec
jmp
pop
pop
jg
hlt
orl
sbb
cmp
insb
cmp
mov
sbb
lds
out
aas
cmpsb
clc
scas
inc
je
jl
rorl
out
push
hlt
inc
adc
inc
adc
nop
js
mov
add
notl
sbb
jmp
mov
int
jle
mov
xchg
cmpl
pop
dec
adc
loop
scas
mov
ret
imul
fwait
pusha
lret
shrl
les
mov
add
cld
test
adc
scas
mov
cmp
popa
jle
fs
loope
xchg
hlt
jp
mov
push
dec
fadd
inc
ds
inc
and
sub
stc
repz
or
mov
nop
je
mov
jnp
adc
cltd
xor
push
jno
and
or
das
xacquire
jno
enter
icebp
insb
jb
or
inc
adc
dec
cmp
popw
stc
xchg
dec
sbb
pop
out
jg
adc
mov
mov
fildl
jb
je
mov
adc
or
cmp
and
lods
xchg
adc
mov
pop
and
lods
push
movsb
in
pop
je
out
lea
lea
xchg
cmc
push
dec
pslld
mov
cmpl
mov
add
jne
andl
dec
xchg
iret
xor
in
inc
inc
jo
pop
in
jne
test
mov
jg
and
xchg
cld
cwtl
out
jno
ds
xchg
sub
pop
mov
sub
cmp
stc
fidivl
push
mov
push
push
rorl
iret
inc
push
repnz
fwait
or
cmpl
imul
cmpsb
loop
ret
mov
xlat
lea
es
adc
jbe
cmpxchg
mov
mov
lock
cltd
xchg
or
pushf
sbb
mov
sub
test
int3
push
insl
pop
mov
outsb
scas
dec
leave
punpckhdq
out
loopne
inc
mov
lock
and
dec
push
push
test
fists
dec
mov
test
pop
addb
pop
pop
out
call
adc
jecxz
outsl
popa
mov
or
fmull
mov
pusha
loopne
subb
loopne
pop
mov
sarb
mov
mov
mov
out
adc
mov
jbe
cmc
imul
pop
ficoml
cli
pop
inc
movl
out
in
fstpt
loope
pop
xor
and
das
pusha
jmp
call
mov
cmp
adc
scas
dec
mov
rclb
push
jb
cmp
loopne
add
out
popa
mov
add
pop
xchg
inc
cmpsb
dec
mov
mov
jne
cmp
mov
cmp
popf
add
daa
push
cmpsb
mov
loope
scas
sub
xchg
mov
mov
pause
je
mov
and
or
mov
push
dec
movb
cltd
and
inc
xor
cmp
mov
cmp
and
cld
cmp
dec
adc
push
sbb
adc
sbb
scas
loope
pop
push
xchg
js
sbb
repnz
fs
push
pop
outsl
cwtl
xchg
pop
mov
pop
xor
loop
jns
iret
xor
sbb
outsl
push
stos
xchg
pushf
jno
bnd
and
aas
roll
inc
js
in
jmp
ja
dec
mov
xor
sub
and
fwait
sbb
push
repnz
sub
sbb
mov
adc
enter
std
rcr
enter
ret
repnz
fldcw
xchg
stos
cmp
push
pop
ljmp
sbb
int
jl
movsl
sbb
push
sub
ret
mov
push
xchg
loopne
jl
fs
jmp
jle
outsb
inc
mov
dec
mov
stc
jbe
ljmp
decb
data16
push
roll
pop
cmpsb
scas
dec
or
mov
loopne
mov
jbe
mov
ss
pop
adc
outsb
inc
mov
sub
and
mov
bound
and
and
jmp
jne
cmp
mov
int
mov
jns
jns
add
imul
sub
jns,pn
inc
jl
shl
xlat
psllw
xchg
enter
mov
jbe
aas
mov
mulb
dec
or
mov
and
loopne
mov
in
jle
mov
cmp
nop
inc
mov
add
imul
subb
mov
push
jecxz
lret
in
dec
movsb
adc
sub
jns
mov
hlt
jnp
mov
sbb
into
imul
xor
cwtl
lds
test
lcall
xor
enter
dec
dec
adcb
xchg
shll
repz
rorb
jno
in
fsubrl
sahf
outsl
ds
push
repz
jecxz
negl
mov
popa
scas
jecxz
mov
shr
xor
mov
cmpl
ret
ja
mov
inc
mov
cmp
cmp
rorb
fs
outsb
ret
movsl
loope
sbb
push
and
sahf
pusha
cmp
arpl
aaa
int
xor
test
jg
int
push
or
mov
mov
push
int
lret
lds
addr16
push
pop
mov
dec
add
push
les
sahf
push
lcall
push
insl
dec
push
inc
sbb
mov
adcb
mov
test
pop
sbb
dec
das
cmovg
pop
je
enter
fsubrs
stos
xor
pop
adc
icebp
adcb
fdivrs
xchg
int3
int3
ja
mov
jle
xor
dec
mov
leave
mov
cmp
cmp
clc
mov
or
sub
sub
insb
aad
sbb
divl
mov
lock
xchg
loope
ljmp
pop
push
sub
push
pushf
fwait
aam
xor
cmp
xchg
add
ljmp
dec
sbb
xchg
fisubs
nop
sub
pop
lcall
daa
push
push
push
jno
loope
pop
mov
rolb
xchg
in
and
outsb
adc
inc
inc
int
inc
rorb
fstps
dec
arpl
inc
pop
inc
sub
dec
jle
std
jecxz
cmc
jbe
ret
lea
jo
out
out
mov
jb
cmp
xchg
ja
and
sbbl
xor
push
lods
xchg
dec
popf
pop
pop
outsl
fdivrs
fisubl
fiadds
jno
and
fdiv
ret
lret
fs
dec
xor
mov
and
js
movsb
arpl
or
dec
mull
in
and
xchg
cli
ljmp
xor
je
movsb
ret
pop
jae
in
mov
and
bound
ljmp
jecxz
add
dec
sbb
cmc
push
dec
mov
mov
mov
int3
push
cmpsl
call
or
adc
bnd
std
popa
inc
cmp
rolb
dec
ljmp
inc
sub
inc
or
xor
pusha
mov
leave
lea
cli
cmp
sti
int3
fs
out
add
dec
inc
push
es
je
sbb
and
push
dec
cmp
out
andb
xchg
inc
sti
cwtl
aas
jp
pop
in
aam
loop
sbb
mov
mov
push
into
pop
or
arpl
in
dec
adc
ret
in
pop
test
mov
mov
mov
cmp
lcall
out
cmp
jno
mov
jno
in
leave
aam
lds
in
sbb
adc
push
or
or
andb
int3
imul
popf
imull
mov
ds
mov
push
xor
rcr
mov
adc
dec
popa
sub
jbe
xchg
pusha
pop
mov
mov
repnz
sbb
sub
and
mov
pop
in
mov
movsb
dec
mov
dec
aad
or
cli
push
and
push
sbb
jmp
cmp
popf
lahf
add
in
xchg
cwtl
sbb
test
pushf
sbb
cld
call
out
sub
xchg
pusha
ljmp
pusha
hlt
push
dec
add
adc
lods
in
movd
fisubl
adc
fcomps
mov
and
aaa
movw
mov
mov
jns
clc
pushf
std
cs
push
dec
loop
stos
data16
cmp
aaa
in
movq
pop
mov
mov
mov
sbb
aas
scas
push
dec
fisttps
adc
mov
lret
ljmp
xchg
jbe
daa
xchg
jge
sbb
lret
nop
adc
rol
mov
inc
pop
cs
jnp
into
fstps
or
popf
pop
push
insb
or
xchg
in
or
lods
addl
loope
dec
je
pop
cld
or
sahf
mov
jle
and
add
cli
adc
lods
fistl
stos
cs
push
mov
cltd
push
lcall
ljmp
mov
inc
xor
sbb
loop
ds
lahf
and
cmp
xor
mov
pop
mov
ja
das
loopne
int3
inc
mov
mov
mull
dec
insb
mov
mov
cwtl
add
push
inc
or
lock
pop
xchg
jne
pop
pop
jbe
movsl
pusha
dec
push
fwait
ret
jp
icebp
popf
adc
outsb
ds
pop
es
stos
pop
push
lret
out
xchg
adc
arpl
gs
mov
xlat
adc
mov
xor
jge
dec
test
outsb
xor
xor
stc
mov
push
xor
imul
ss
jae
mov
inc
or
push
test
mov
frstor
mov
testl
and
push
or
add
sbb
loop
fiaddl
xchg
iret
cmp
insl
sub
jne
jmp
add
pushf
and
repnz
cmpsl
sbb
inc
adc
adc
mov
xlat
jns
mov
sub
push
shlb
xchg
mov
mov
and
sbb
clc
xchg
lods
and
xor
pop
and
cwtl
loope
xor
lret
lods
adc
jl
sub
jle
jmp
pop
inc
fwait
mov
sahf
xor
push
xor
adc
xchg
test
es
xor
push
adc
cmp
mov
push
dec
jne
dec
cmp
lods
lcall
sub
lret
mov
out
in
dec
inc
f2xm1
in
insl
mov
mov
xchg
push
jb
xor
in
jecxz
in
in
pop
sbbb
in
mov
bound
mov
jg
loope
pop
adc
jb
outsl
rorb
mov
aam
cmp
mov
pop
inc
xor
push
jmp
test
inc
std
push
or
sub
aad
jb
or
nop
data16
repz
stos
lret
cld
iret
inc
push
test
bound
pop
orl
and
fnstenv
lret
ret
test
neg
mov
cwtl
cli
cmpsl
adcb
xchg
fs
ror
das
imul
dec
arpl
js
gs
outsb
movsl
adc
sbb
cmp
mov
dec
push
ljmp
in
int3
sbb
adc
and
mov
out
mov
dec
ror
dec
rcrl
mov
push
sub
mov
mov
pop
call
and
filds
ljmp
mov
dec
shlb
or
ja
aas
lret
pop
int
sbb
sbb
loope
add
push
cmpsb
test
test
or
jbe
or
jb
nop
inc
lret
fldl
adc
xchg
paddd
aad
in
add
je
mov
xor
adc
in
adc
ret
and
test
pop
or
cmp
test
ret
shll
scas
jp
shl
in
cmp
je
int
loope
mov
jbe
fistps
mov
rorl
mov
aaa
xor
inc
andnps
sbb
and
adc
std
mov
or
imul
out
fistpl
mov
cmp
mov
sbb
mov
inc
sbb
cltd
push
or
xor
pop
int
cltd
out
xchg
or
scas
sub
lcall
jge
je
inc
dec
or
inc
imul
mov
std
dec
xor
lods
jecxz
lods
adc
dec
jo
jb
inc
ffree
stos
lea
subb
and
idivl
xor
add
sahf
repz
and
addr16
pop
bound
leave
push
fdiv
pop
movsb
and
sbb
mov
jle
scas
adc
scas
add
push
push
and
sub
cmc
sbb
inc
jae
js
sub
cld
lcall
sub
test
std
loop
pop
or
mov
call
xor
jo
add
mov
inc
dec
out
div
pop
pop
cmp
sub
pop
dec
in
add
int
adc
cmpb
inc
jge
dec
data16
les
pusha
pop
insl
insb
add
sarl
cltd
sub
pop
mov
inc
and
out
sub
dec
daa
lret
xchg
adc
cmp
sti
outsb
subb
mov
inc
mov
and
push
pop
push
mov
and
or
xorl
arpl
stos
ja
jne
sbb
pop
outsb
mov
lret
sub
pop
mov
movsb
or
imul
lahf
cld
repz
aas
jl
cmc
mov
shr
es
shlb
xlat
imul
repz
or
sub
jmp
jmp
mov
jl
pusha
adc
insl
sub
cmp
leave
icebp
mov
test
lret
pusha
sub
sub
jb
dec
int
mov
add
iret
push
mov
push
mov
or
or
nop
loope
arpl
jae
inc
hlt
test
push
orb
ret
mov
ret
xchg
mov
imul
pop
js
lret
ds
test
mov
das
out
adc
test
jmp
movsw
mov
mov
mov
add
insl
das
shlb
gs
push
jecxz
iret
cmp
pop
fisubrl
lods
or
jae
xchg
xchg
ds
push
xlat
mov
jl
aam
es
mov
pop
rclb
fwait
adc
pop
loop
xchg
pop
shll
push
push
das
dec
push
lret
lcall
cmp
pop
stc
xor
adc
fcmovnbe
stc
push
jmp
mov
lahf
insl
mov
mov
frstor
out
or
or
xchg
push
stos
jae
ficoms
mov
sbb
fwait
pop
orb
xchg
sub
adc
push
fisubs
push
or
lods
add
dec
scas
scas
outsl
add
jge
mov
jl
mov
pushf
ljmp
sub
hlt
pop
inc
shl
or
cmp
mov
imul
dec
add
pop
mov
jg
xchg
jge
pop
add
mov
adc
add
cmc
call
fsub
cmp
lods
je
lock
jbe
clc
jne
jnp
divl
mov
pop
clc
pop
sbb
scas
push
aam
mov
daa
test
ret
rdmsr
loopne
pop
lcall
xchg
js
das
mov
sub
push
out
adc
imul
mov
sbb
idivb
xchg
jle
mov
test
jo
popa
and
adc
fldenv
fldlg2
push
or
push
or
int3
jo
test
adc
cli
xor
test
rcll
scas
pop
mov
jb
shl
sub
mov
add
cltd
pop
dec
scas
test
mov
xchg
mov
and
jp
loopne
jo
ja
pop
sub
outsb
lods
movsb
xor
test
lcall
pop
mov
push
lret
pop
sub
and
cmpsl
dec
push
xchg
seto
adc
cmp
pop
sahf
test
repnz
sbbb
jbe
loopne
lahf
sar
fsubrs
mov
repnz
mov
test
cwtl
xchg
push
dec
pop
and
clc
cmpb
imul
loopne
add
push
dec
or
cmp
arpl
sahf
pop
addr16
sub
dec
lret
add
insl
mov
jne
mov
pop
jnp
xchg
stc
sbb
pop
js
std
out
sub
div
mov
addr16
insl
push
and
push
inc
mov
mov
cwtl
mov
aaa
imul
sub
xchg
pop
mov
sbb
addr16
sub
in
hlt
pop
jns
sahf
mov
push
add
movsb
out
cmc
mov
adc
xor
mov
out
jp
xor
into
sbb
inc
xor
dec
mov
jg
insl
arpl
xor
sahf
std
loop
jmp
sahf
mov
xchg
mov
sub
mov
jb
sbbl
pop
add
pop
push
or
test
lret
push
enter
in
xchg
sbb
lret
dec
mov
sub
cmc
mov
xchg
sub
pop
aaa
inc
mov
or
sbb
out
test
xchg
lahf
fsubrs
iret
lret
jge
mov
rol
ffree
jnp
mov
cmc
fwait
pop
imul
stos
fwait
mov
pop
in
bound
xchg
ret
mov
mov
ja
into
fsubrs
inc
dec
push
pop
add
xor
mov
lahf
clc
ss
xchg
sub
cmp
xchg
ja
nopl
fsubs
add
pop
sub
adc
pop
inc
in
clc
rolb
test
loop
mov
mov
xchg
xchg
in
or
mov
xor
shll
stos
or
inc
movsb
roll
pushf
shll
maxps
orl
mov
lds
ljmp
sub
mov
fisubl
test
push
ret
cs
xchg
imul
sbb
adc
push
ffree
jne
shlb
movl
mov
xor
fldt
addr16
outsb
out
loop
and
adc
mov
jl
xor
xchg
jmp
pop
scas
adc
fsubrl
outsl
data16
fwait
js
jmp
dec
xor
ljmp
mov
jecxz
xlat
adc
scas
cmpb
shrb
jle
icebp
mov
pop
cli
cld
pop
mov
pop
mov
pop
xchg
mov
sub
pusha
adc
cltd
cmp
in
mov
aaa
repz
cmp
sub
inc
push
push
jne
mov
sbb
pop
fwait
lahf
add
dec
pop
lcall
mov
jb
icebp
gs
notb
mov
xor
stc
imul
pop
push
inc
das
sbb
mov
cld
cld
sub
sbb
js
xor
hlt
add
push
sti
sbb
int3
xchg
fildll
addr16
lcall
add
lret
stc
les
lret
push
sub
call
cmpsb
pop
fisubl
and
in
fbstp
sbb
sub
jb
lret
sbbl
sbb
cmp
scas
fstp
neg
pop
inc
cmpl
sbb
call
lea
loope
outsb
stos
or
jnp
popa
sub
sub
lock
xchg
jecxz
lods
push
in
and
add
stos
add
cmp
sub
outsl
mov
xchg
or
in
rcl
nop
in
xor
push
cmc
dec
sub
enter
in
out
mov
push
fcmovnb
pop
imul
xchg
sti
std
inc
ds
mov
pop
andl
or
cmp
fmull
stos
jb
in
sahf
aas
cld
lcall
cmp
loopne
sub
fbld
pop
clc
hlt
mov
pop
shlb
xchg
lret
lock
mov
arpl
push
mov
mov
mov
jp
mov
fwait
xlat
cmpsb
andl
pop
sar
popf
pop
pusha
push
adc
xor
scas
and
test
push
sbb
lock
ret
lods
or
pop
daa
outsb
lods
stc
pop
cmp
popf
xor
cmp
sbb
xchg
shll
cmp
mov
jb
mov
inc
daa
mov
mov
pushf
gs
cmp
mov
lret
cli
jmp
or
jecxz
xor
incl
hlt
adc
pushf
xorb
pusha
inc
ret
jns
arpl
cmp
ja
lcall
lret
das
int3
push
sahf
movsl
cmpsl
sbb
bnd
add
in
pop
fadds
bound
mov
test
sub
adc
movsb
je
mov
fcoml
sub
xchg
cmp
rorl
cltd
in
mov
add
lods
cmp
inc
cmp
push
loope
jno
inc
jle
scas
popf
add
xchg
arpl
int3
lds
jmp
js
xchg
inc
sbb
sub
popf
push
xor
in
sub
dec
add
ss
or
clc
jno
jns
mov
mov
jnp
dec
loope
push
fiadds
pop
in
dec
pop
inc
pop
cltd
gs
pop
insb
mov
push
adc
mov
test
jno
mov
mov
jmp
mov
and
daa
lds
mov
add
jo
insb
mov
repz
adc
xor
int
inc
ds
mov
cwtl
sub
inc
mov
xchg
pushf
sub
mov
mov
dec
ljmp
dec
mov
push
dec
inc
jae
add
xor
jg
dec
std
cwtl
and
shlb
cmp
ljmp
std
xor
cld
fists
adc
incb
adc
dec
jge
xlat
inc
mov
or
jbe
inc
or
scas
mov
add
pop
jns
push
insb
int
and
adc
cmp
int
ljmp
jnp
mov
mov
add
ret
jb
sahf
fs
inc
fcomps
mov
dec
xor
leavew
or
fmuls
pop
pop
shl
test
mov
sbb
push
pusha
push
push
sar
jge
repnz
xor
lea
lret
pop
test
sub
test
clc
enter
sub
lcall
test
dec
fcmovnb
sar
lcall
and
push
ljmp
xchg
das
into
movsl
cmp
mov
jne
arpl
cmc
cld
mov
nop
add
mov
nop
and
jecxz
jmp
sti
dec
mov
and
lcall
xor
push
stos
iret
pop
sbb
hlt
dec
loope
in
inc
xor
jbe
ror
pop
and
pop
mov
nop
test
enter
xchg
cmc
mov
mov
outsl
jno
mov
mov
int3
imul
sbb
inc
sbb
in
movb
lea
ljmp
mov
jg
or
mov
roll
inc
xor
lds
cmc
arpl
pop
jno
rclb
inc
scas
jbe
sti
xchg
inc
push
xor
lods
daa
jb
lds
add
int3
bound
icebp
mov
fwait
dec
inc
cmp
jbe
fdivrs
cld
scas
loopne
xchg
mov
inc
stos
jb
pop
add
addb
pop
push
xor
fcom
add
sbb
lea
repnz
or
xor
jge
and
mov
bound
mov
xchg
sbb
inc
fcmove
cld
enter
lret
add
xchg
add
push
test
mov
lods
cli
and
jg
test
sub
fildll
jnp
ficompl
jo
lock
xchg
je
mov
enter
jnp
ljmp
xor
int
and
dec
shrb
sbb
repnz
scas
mov
es
insb
lahf
adc
pop
test
inc
mov
mov
sub
add
mov
addr16
cltd
and
adc
fstl
push
repnz
push
pop
lock
lret
aaa
shld
ret
jmp
and
pop
xlat
lret
adc
loop
cmp
push
mov
test
cmp
push
add
test
outsl
popa
mov
inc
out
fildl
clc
stos
test
out
psubd
xchg
jno
in
fnsave
push
das
mov
orb
sub
loope
lcall
adc
dec
ret
jp
adc
call
push
mov
mov
xchg
pop
inc
inc
insb
cltd
enter
xor
dec
das
pop
movsl
mov
xchg
mov
mov
test
int3
das
add
sbb
scas
sub
xor
or
fcompl
pop
outsb
cmp
mov
adc
xchg
fidivrs
rolb
ds
fcoml
test
push
dec
xchg
popf
test
shlb
mov
sahf
aam
shlb
mov
jg
xor
out
mov
lds
mov
add
or
cmp
cmc
loope
sub
add
jg
in
mov
add
imul
std
cwtl
lds
sub
ja
jl
sti
mov
jecxz
loope
pop
int
jne
or
jb
and
aas
pop
aam
data16
pop
mov
mov
jl
mov
jmp
dec
push
arpl
dec
push
jbe
xor
mov
mov
sbb
push
add
out
jecxz
lods
adc
mov
xchg
or
mov
data16
mulb
inc
adc
sub
or
mov
stos
lods
lret
xchg
cwtl
and
scas
jmp
ja
fsubrl
jns
mov
shll
inc
out
js
sub
mov
lock
add
cmp
push
adc
leavew
sub
jns
and
ja
cs
shlb
sbbb
sub
pop
jmp
les
mov
and
shll
iret
pop
push
mov
lcall
jns
ficoms
scas
push
fdivl
inc
push
fs
dec
push
stos
or
lret
cld
mov
pop
or
mov
pushl
or
sbb
add
push
fisttps
xchg
sbb
pop
cmp
dec
sbb
or
cmp
or
jmp
out
subb
adc
js
and
mov
movsb
test
xchg
xor
aad
xchg
mov
fwait
ja
rolb
decl
lock
mov
pop
sub
mov
xor
mov
lods
and
test
inc
sbb
pop
ret
cmp
fcomps
xlat
and
jbe
dec
xor
jp
mov
scas
or
or
shll
mov
test
cmpb
lcall
dec
xchg
sbb
cli
repz
ss
mov
es
cmp
outsl
or
pavgw
rol
jne
sub
push
shlb
in
fcom
arpl
ljmp
lock
insb
xchg
cmc
loopne
ja
in
aam
fmull
scas
and
lahf
es
shll
mov
cmp
pusha
dec
mov
mov
cld
pop
cmpsl
insl
iret
das
and
mov
cmp
cs
call
push
pop
insl
and
ja
mov
mov
jmp
and
push
je
fsubl
or
shll
dec
sub
lods
out
jb
hlt
cmp
mov
cmp
sbb
mov
jp
dec
icebp
mov
imul
inc
xchg
jns
cmpsl
and
dec
in
push
ds
das
push
add
adc
push
repnz
inc
sbb
jns
sbb
cmp
mov
rcl
repnz
out
je
xchg
jo
lret
mov
jb
sahf
cwtl
shr
div
push
inc
jns
dec
cwtl
lock
in
and
xor
aad
inc
and
xchg
jp
add
sub
pop
roll
mov
out
sbb
mov
pop
or
dec
pusha
test
ja
fisttpll
xchg
mov
xchg
xchg
sub
lret
dec
test
out
pop
xchg
push
pusha
je
jnp
addr16
push
mov
cli
frstor
push
jmp
pusha
out
clc
dec
lret
shlb
pop
inc
xor
sub
sti
frstor
test
mov
sbb
inc
fmuls
mov
inc
pop
adc
cmp
dec
inc
jno
int
adc
addl
ja
lods
fisubrl
icebp
sbb
cmc
ffreep
mov
sbb
cmp
data16
sbb
and
mov
adc
pop
or
sahf
je
movsl
int3
sub
jne
das
add
add
leave
xlat
fadds
mov
xor
adc
jmp
push
cwtl
adc
sbb
js
aaa
call
or
fcomps
lret
xchg
mov
xchg
imul
addr16
roll
in
sbb
dec
xor
repz
fldl2t
add
dec
fistl
mov
cltd
in
sub
sbb
sub
popl
int3
inc
xchg
loop
ja
jmp
mov
pop
pop
dec
pop
add
cmpsb
jecxz
aaa
or
lods
pop
bound
xchg
aad
adc
pop
les
add
rcrl
cmp
loopw
aad
sub
jns
jecxz
xor
pop
adc
pop
sub
fdivrs
push
imulb
in
lock
and
mov
repnz
xchg
mov
fistpl
ss
cltd
cmc
jae
roll
in
cmp
or
and
dec
add
push
scas
outsl
std
mov
sub
xlat
cmp
push
pop
push
out
leave
mov
test
jb
pop
xchg
pop
adc
movsl
push
xchg
mov
lret
shll
xchg
and
pushf
cld
aam
insl
js
in
inc
push
push
stos
sahf
mov
daa
arpl
sub
in
push
add
push
cmp
push
cwtl
or
mov
addr16
clc
testl
xor
lcall
dec
pushf
fcom
dec
lret
mov
std
add
xchg
xorl
cmp
push
mov
mov
repnz
and
lcall
xchg
mov
rclb
fidivrl
mov
pop
mov
insb
test
je
push
xor
jl
sti
inc
pop
or
dec
xor
lods
jae
incb
test
js
sub
mov
jp
push
scas
or
and
mov
out
arpl
xchg
vpmacswd
test
testl
jae
lds
mov
ds
insb
cmp
jge
hlt
aaa
decb
xchg
out
mov
push
mov
add
xor
test
movsl
test
xchg
fmuls
sbb
rorl
sbb
arpl
lahf
fldt
or
add
ss
dec
mov
sahf
adc
clc
push
call
dec
mov
cs
bswap
xor
xor
js
scas
pop
cs
and
mov
lock
mov
rcr
inc
in
lret
push
jmp
or
xchg
fsubrs
mov
dec
sbb
adc
out
inc
xchg
adc
or
nop
sbb
and
int3
roll
xor
push
insb
inc
jbe
lock
mov
cmpsb
in
fnsave
jnp
xchg
sub
loope
enter
mov
pop
mov
mov
test
scas
adc
es
scas
mov
cltd
pusha
out
jns
xchg
jp
shlb
adc
cs
out
xchg
mov
jmp
add
add
or
stos
inc
nop
stos
push
mov
pop
push
js
js
int3
xchg
pop
and
fisttps
insb
xchg
push
xchg
test
test
sbb
jge
mov
shlb
cmpsb
xor
cmpsb
pop
imul
add
fwait
sbb
sbb
xsavec
rclb
test
push
insl
out
pop
add
xor
cmp
scas
mov
xorb
inc
lret
outsb
std
sbbl
insb
cwtl
push
xor
xchg
cs
add
cmpsl
sub
inc
pop
or
sar
daa
jnp
int
or
int3
imul
xchg
notb
dec
sub
sahf
add
sbb
and
or
movsb
mov
shll
hlt
pop
popa
loopne
xchg
std
add
or
dec
adc
sub
jg
push
adc
adc
cli
cmp
fsts
push
movsl
dec
dec
shrl
mov
dec
test
mov
das
andl
out
repz
popf
or
sub
mov
or
nop
jecxz
imul
aam
jl
clc
std
ret
push
out
jg
and
cmc
jecxz
xchg
fistps
push
add
and
adc
xchg
pop
lds
in
jl
push
bnd
movl
xchg
jl
loopne
mov
pop
lock
faddl
lds
cli
push
nop
cmp
lods
inc
push
adc
clc
mov
pop
ret
shl
and
xchg
dec
xlat
adc
in
cld
cmpsb
es
les
sub
mov
inc
mov
out
adc
test
aaa
sarb
mov
and
cltd
rcll
cmp
jle
lahf
mov
ljmp
xor
jl
pop
in
mov
testb
cmpsb
out
cmpsb
mov
cmp
or
push
adc
daa
mov
ss
ljmp
int3
mov
jge,pn
cli
push
repz
mov
popa
mov
push
subb
or
mov
data16
and
dec
in
faddp
sbb
cmp
arpl
sbb
jge
push
stos
inc
mov
mov
out
mov
sbb
stc
pop
lcall
pop
into
lret
sbb
push
and
nop
sbb
push
xlat
jns
inc
xchg
fidivrl
cs
out
mov
add
rcll
lret
sbb
xor
test
icebp
in
sub
aad
cmp
sbb
sbb
adc
repnz
iret
or
aas
jno
or
mov
idivb
jnp
jae
dec
mov
pushl
xchg
enter
gs
rorb
ret
scas
lds
test
nop
sbb
dec
in
push
es
sahf
sub
fistpll
ljmp
sbb
cmp
movsl
insb
lret
lods
cli
leave
and
lret
in
enter
xor
loope
inc
sbb
sub
mov
jge
cmp
sbb
scas
je
js
addr16
jg
or
ret
outsl
cs
sbb
and
jne
sub
dec
cmp
orb
inc
mov
cmp
cmp
in
aaa
or
mov
and
xchg
add
mov
pop
inc
mov
daa
mov
dec
mov
or
jp
call
push
pop
sbb
sti
arpl
xchg
lcall
fucomi
pop
dec
int
insl
sub
repnz
into
idivb
xchg
pop
data16
push
jns
aad
ds
stos
mov
add
sub
xchg
inc
add
push
aad
jmp
and
int3
in
test
repz
movsl
push
cmp
icebp
mov
and
xor
sti
jbe
and
stos
arpl
sub
cltd
dec
sub
fildl
loope
gs
mov
rcl
popf
xchg
jo
lret
adc
mov
or
out
mov
mov
cmp
mov
add
xor
arpl
lods
push
pop
adc
cmp
xchg
push
xchg
dec
scas
push
loope
fwait
aas
hlt
dec
inc
ret
dec
xor
sbb
push
enter
orl
cmp
or
imull
orb
cwtl
rorb
mov
adcl
pop
cmp
and
add
popf
sbb
inc
in
leave
into
sbb
and
scas
push
fsubrl
data16
leave
or
cmc
lahf
and
xchg
scas
mov
mov
cmp
push
mov
aad
adc
and
dec
dec
add
sub
push
icebp
imul
aas
jo
daa
jp
sub
pop
lds
push
cmp
push
jno
mov
sbb
jnp
pop
in
dec
inc
jle
sub
jl
mov
test
dec
or
adc
loope
js
lods
data16
jle
add
lahf
push
jne
jo
dec
pusha
sar
xor
xchg
push
ja
xchg
sahf
rcl
sbb
mov
testb
cs
into
xor
negl
out
rcrl
cmp
outsl
jo
sbb
mov
std
inc
int3
outsl
roll
mov
aaa
and
loopne
pop
cs
push
push
mov
add
dec
loope
and
pop
pop
testb
mov
enter
jmp
pop
mov
mov
je
cmp
in
add
adc
add
cmp
incb
fcmovnbe
add
push
in
in
cld
push
dec
push
mov
out
sub
cltd
nop
xchg
sbb
negb
popa
es
mov
cmp
mov
cmp
xor
jo
cltd
lods
mov
imul
lds
pop
add
je
xlat
adc
xor
int3
dec
or
das
pop
xchg
sbb
xchg
pop
pop
popa
or
jl
mov
insl
mov
jle
fnstsw
jp
test
lret
movsb
push
insb
in
mov
mov
lahf
jne
or
mov
lcall
mov
lret
ds
loope
clc
dec
fadds
mov
or
sbb
add
mov
stos
adc
jae
in
xor
xor
sub
les
sbb
lea
rcll
or
cmp
lret
dec
xchg
sub
sti
fldenv
imul
sub
pop
jecxz
cmpsl
push
call
inc
xchg
sub
fisttps
test
cmp
cli
sub
cmp
fmuls
addr16
jmp
sub
int3
mov
adc
loop
mov
or
mov
js
jle
jns
mov
mov
pop
jmp
mov
outsb
jle
pop
add
jl
fdivl
xchg
pop
icebp
sub
sbb
hlt
int3
or
xchg
enter
dec
jae
adc
movsb
inc
in
or
sub
js
movsl
and
out
scas
sbb
sub
movsl
sbb
scas
movsl
xor
popf
jne
mov
sarl
adcb
fwait
cmpsb
xlat
jle
out
adc
cmp
xchg
ja
xchg
stos
mov
ljmp
or
shl
fisttpll
test
xchg
lret
sub
loopne
push
mov
cmp
push
mov
test
cltd
sbb
iret
or
ja
sbb
jg
fimull
pop
or
pushf
jns
mov
cmp
inc
and
sti
ljmp
cmc
imul
add
pop
cli
int
popf
stc
xchg
fisttpl
add
sti
mov
xorl
lock
jp
mov
dec
out
xor
mov
mov
add
xchg
xchg
jnp
xor
cmpsl
sahf
cmp
enter
xor
ds
enter
push
ja
int
arpl
sbb
stos
lock
sub
int
and
in
ficomps
xor
mov
push
dec
xor
push
or
mov
lret
xor
vorpd
jns
mov
cmp
enter
and
xor
ret
fwait
add
mov
push
fdivrs
fldl
cmp
xchg
xchg
adc
sub
add
xor
std
sub
out
incb
popa
mov
add
jnp
jne
andl
cmp
add
loopne
jecxz
cmpsl
or
pop
pop
jb
xchg
jnp
neg
iret
pop
loop
out
dec
jo
or
or
xor
popa
sbb
or
adc
and
adc
cltd
pop
mov
mov
loope
cmpsb
outsl
in
add
mov
mov
int3
dec
xor
mov
cmp
sbb
xor
sbb
or
iret
ds
mov
cmp
cld
addb
outsb
shl
xchg
popf
pop
cs
inc
push
pop
sub
in
lea
into
jmp
xlat
add
add
pop
outsb
dec
adc
clc
sbb
sbb
xchg
das
push
add
notl
sbb
mov
xchg
cwtl
ret
cmp
or
pusha
dec
jmp
cld
addr16
pushf
mov
mov
push
cli
inc
push
addb
xor
xchg
add
loopne
pop
aaa
cltd
imul
mov
dec
xor
das
test
lea
mov
jo
cwtl
je
xor
out
add
inc
sbb
cmpsl
cmpsb
in
jmp
lods
or
les
out
adc
push
testb
movsb
or
enter
pop
pop
sbb
push
push
sub
adc
enter
xchg
lahf
inc
sub
inc
xchg
bound
popa
add
mov
lods
push
and
out
aas
lea
movsl
leave
mov
sbb
mov
loopne
pop
pop
inc
fcoml
push
aam
and
push
mov
es
stos
mov
mov
sbb
adc
leave
aam
js
or
jno
mov
mov
icebp
push
jbe
dec
roll
sbb
lea
xchg
inc
aad
lods
mov
paddq
sub
cld
xor
aad
ss
jl
inc
aad
int3
out
icebp
bound
push
ror
xchg
jnp
xchg
and
or
xchg
out
jo
jno
pop
add
js
xchg
out
mov
push
lods
mov
movsl
add
aaa
sub
into
andl
dec
and
ja
adc
mov
hlt
cld
inc
insb
mov
inc
cmpsl
jne
fcmovnu
nop
adc
xor
call
sub
sbb
cs
iret
repnz
cmp
enter
dec
or
sub
cmc
jnp
cmp
mov
sbb
sbb
and
push
rclb
imul
add
push
imul
jp
mov
sbb
push
mov
pushf
push
outsb
cmp
iret
jl
lret
dec
pop
rolb
ret
test
mov
xor
cltd
jl
insb
sbb
mov
mov
stos
and
xor
insb
or
fists
push
std
jl
ja
inc
xchg
pop
add
mov
jnp
in
mov
inc
xchg
pop
imul
xchg
add
adcl
cmp
lahf
aas
dec
push
mov
mov
pop
mov
lret
mov
xlat
push
jge
lock
jo
imul
std
outsl
mov
pop
sub
bound
adcl
sbb
das
js
sbb
push
jle
dec
ss
ljmp
inc
ret
xor
jp
clc
add
pushf
inc
or
mov
fsub
or
idivb
cmpsb
jne
ficompl
cli
outsb
insl
scas
mov
stos
repnz
in
pop
repz
scas
inc
push
sbb
xchg
xlat
cmp
cmp
daa
lahf
xchg
cmpsb
push
xor
daa
or
fldenv
pop
and
in
jl
mov
mov
aas
xchg
add
and
setae
sahf
cmp
mov
lods
cmpsb
pop
roll
cmp
xchg
lods
pop
mov
lods
pop
popa
push
xlat
and
inc
pop
addb
jmp
jne
lret
into
xor
or
xor
cmpsl
scas
xor
mov
ret
jg
test
jmp
test
pop
pop
test
dec
mov
aaa
add
dec
xchg
mull
and
inc
sub
jae
cs
fsubrl
pushf
lods
fmull
xchg
mov
repz
stc
cmc
or
jp
pop
lret
stos
xchg
pop
jae
xchg
xchg
pop
inc
push
inc
sahf
fwait
nop
decl
add
add
dec
pop
dec
pop
sbb
inc
loope
aad
cmp
imul
push
mov
mov
mov
insb
mov
js
stc
xor
shlb
je
inc
in
pop
jne
sub
addr16
orl
je
lock
rclb
gs
fidivs
repz
loopne
xlat
pushf
mov
mov
or
dec
add
fnstcw
fs
sbb
sti
mov
popf
scas
into
repnz
mov
and
call
fcomps
push
inc
pop
out
cmc
mov
adc
mov
in
stos
shlb
fs
sub
divl
sbb
xor
pop
dec
mov
inc
sbb
mov
push
sbb
sbb
pop
jg
cmp
cmp
and
inc
jp
jl
test
mov
stc
adc
mov
sbbl
inc
dec
jno
pushw
and
mov
pop
es
or
mov
jbe
fidivs
mov
or
pop
test
pop
lret
bswap
out
pop
rorl
pushf
adc
out
cmpsl
mov
mov
loope
test
xchg
mov
mov
add
xor
cmp
pop
push
out
mov
mov
dec
dec
lahf
aas
lcall
pop
inc
das
cmp
mov
popa
or
sub
adc
mov
mov
sbb
aam
jns
sub
in
xchg
mov
insb
jge
icebp
testl
cmpb
mov
jo
inc
jecxz
mov
leave
xor
push
das
pop
push
jnp
pop
aad
lds
dec
lahf
pop
pop
js
or
mov
int3
xor
addb
into
cmp
ljmp
popf
adc
cmp
idivb
xchg
pop
jl
enter
dec
mov
push
mov
mov
nop
or
sub
add
jg
ret
adc
xor
cmp
mov
or
scas
popf
xor
mov
ficomps
adc
fsubs
push
popa
pushf
inc
movsl
push
sbb
shrl
addr16
clc
pop
cmp
mov
mov
push
xor
into
xor
fdivl
out
jmp
pop
push
shll
xchg
xchg
or
out
inc
inc
cmp
inc
add
and
mov
push
adc
cmpsb
pop
testb
sbb
cmp
or
add
test
test
les
rclb
out
loop
test
inc
inc
fldl
lahf
mov
cmp
xchg
push
fwait
inc
popa
xchg
dec
dec
dec
ja
jno
int
sbb
pop
jge
outsb
fildl
imul
fsubrs
mov
aas
icebp
push
data16
sbb
push
or
out
and
mov
mov
sbb
cmp
rcrl
stc
lret
cmp
pop
mov
mov
bound
cwtl
and
sub
outsl
lock
scas
jae
inc
scas
sbb
or
sarb
push
es
add
cmp
mov
xchg
push
das
repz
lods
push
push
adc
sub
jae
sub
mov
ffreep
jl
mov
shl
ffree
mov
mov
in
adc
mov
pusha
movsl
xchg
jae
imul
inc
mov
inc
sbb
das
in
cld
lea
mov
clc
mov
adc
dec
ss
aam
xchg
scas
add
push
lret
lea
jb
cmp
xor
sbb
xor
and
inc
int
int3
fs
nop
jne
mov
cmp
mov
sahf
xor
int3
aaa
mov
out
fisubs
push
in
push
movsl
lock
jno
jecxz
sti
mov
mov
xor
push
pop
pop
mov
push
mov
movsb
jns
add
jne
cmp
unpckhps
hlt
rolw
xorb
push
mov
mov
stos
sti
mov
sbb
xor
int
inc
add
xchg
xchg
cmp
sahf
ror
and
sub
fldl
scas
mov
out
fldenv
jmp
test
push
jne
push
call
rolb
xlat
pop
pop
fidivrl
loop
xchg
data16
push
mov
cmp
repz
aad
push
pop
mov
pop
ret
outsb
jge
shl
ljmp
ljmp
lds
out
xchg
fisubs
ret
inc
add
dec
cmp
dec
shr
imul
sub
mov
push
mov
imul
lret
mov
out
cmc
leave
das
enter
sbb
test
test
cltd
je
cmc
loopne
cs
jbe
ret
les
adc
lea
pusha
rolb
mov
adc
mov
mov
push
pop
movsb
sbb
push
dec
popa
pushf
js
ss
ss
mov
adc
dec
add
sub
inc
addb
clc
stos
fisubrl
xlat
mov
cmp
mov
xchg
fwait
jne
sbb
push
test
or
rorl
sahf
cld
sub
pop
add
js
rcrl
scas
fbstp
dec
pop
int
sub
adc
aas
cmpsl
in
jmp
sbb
movsb
inc
pop
lock
or
xchg
xor
divl
pop
cld
shlb
mov
push
mov
adc
test
dec
dec
cmpsl
ret
pushf
lods
icebp
lods
das
popf
mov
bound
xchg
es
inc
icebp
movsb
shl
movsb
and
pop
js
sbb
cltd
xchg
fists
mov
mov
ja
or
pop
pop
sub
dec
dec
std
sahf
mov
cld
out
out
outsl
mov
call
dec
popa
jp
and
jns
xchg
int3
test
mov
pop
inc
cmp
jl
adc
iret
sub
in
mov
mov
add
mov
jmp
push
sub
loope
jnp
push
jns
pop
fs
lahf
jnp
pop
jbe
ja
in
out
fildll
data16
inc
xor
in
push
add
jp
dec
lods
mov
outsb
dec
mov
jnp
mov
rolb
sbb
jge
enter
call
dec
sahf
push
js
cld
or
stos
mov
dec
test
cmp
sub
mov
out
cmp
push
inc
lock
xchg
push
pop
cmpsb
ja
xchg
or
in
enter
shl
std
cmp
pop
cmc
mov
negl
cmp
dec
add
test
cwtl
xchg
mov
or
shlb
mov
adc
pop
pop
or
jp
mov
das
frstor
outsb
sahf
loope
gs
sub
jmp
cli
cmp
jg
jp
cmp
push
lahf
mov
gs
cmp
lret
ret
cmpsl
xchg
pop
adc
cli
js
xchg
mov
sbb
xchg
mov
sub
xor
sbbl
xor
aad
pop
xor
rolb
mov
dec
mov
mov
push
cwtl
daa
jl
scas
add
mov
cmp
mov
add
cmp
fcmovb
sbb
out
push
xchg
mov
lret
sahf
imul
fwait
xchg
stos
addr16
fwait
mov
mov
cmpsb
imul
inc
mov
not
mov
fisubrl
std
sbb
loop
ror
mov
sbb
add
mov
lahf
out
inc
out
lret
jnp
jle
mov
sbb
ret
xor
xor
test
mov
jmp
cmp
xor
testb
daa
loopne
bnd
sub
xlat
lods
mov
sbbl
sti
fwait
rcll
ret
cwtl
gs
icebp
inc
jp
outsl
sahf
lcall
or
mov
arpl
adc
ret
jle
int3
iret
xchg
push
dec
vmovq
jg
push
xor
lret
addr16
jb
leave
ret
fiaddl
or
aad
push
xchg
mov
mov
lret
leave
and
xchg
adc
dec
push
or
iret
sbb
and
cmpb
push
out
or
cld
or
mov
push
sbb
xchg
and
and
les
test
dec
mov
or
pop
cmp
cmp
bnd
pop
ljmp
outsl
ret
aad
repz
mov
pop
sbb
insl
nop
jg
loop
and
mov
jg
cmpsb
inc
shrb
sub
jae
inc
in
push
pop
pushf
and
stos
mov
stos
or
in
fs
fistpll
pop
or
xor
ffree
xchg
adc
inc
xor
mov
div
sbb
jg
out
addb
xchg
add
xor
mov
fsubrs
inc
dec
and
mov
les
jle
ja
cmpsl
lret
rorb
inc
addr16
push
addl
mov
push
mov
mov
or
pop
int
and
mov
mov
cmpsb
shll
lcall
adc
xchg
jns
shlb
jb
outsb
mov
sub
mov
loope
xchg
jg
scas
test
std
xchg
jbe
pusha
xchg
xchg
jns
push
and
stc
xor
push
pop
test
adc
add
or
adcl
ds
jl
mov
fbld
jmp
xchg
jmp
pushf
lcall
cmp
lea
cmpb
fsubr
sbb
movsb
cmp
mov
dec
iret
in
mov
outsl
mov
add
les
jo
out
add
push
ret
rol
dec
xor
add
fwait
mov
mov
xchg
aaa
jb
xchg
jno
jp
cmpsl
xlat
arpl
jmp
jecxz
add
xor
mov
adc
nop
aaa
movsb
mov
pusha
sbb
popf
insl
jns
into
ret
or
push
and
dec
push
mov
sub
addb
jp
rcll
inc
push
xor
movsb
insb
aaa
jmp
cmp
test
jge
std
xor
ret
lret
inc
push
sub
fdivrs
stos
xor
jb
jb
xchg
push
mov
rcll
sar
arpl
sarb
dec
stc
shll
fwait
shll
out
stos
call
and
or
pop
push
adc
std
stos
lds
iret
jnp
or
inc
cmp
mov
loop
in
mov
xor
pop
push
xor
cmp
xchg
pushf
add
aas
dec
cltd
aaa
icebp
mov
loopne
in
out
repnz
mov
movsb
xorl
and
outsl
jp
rorl
aad
cld
scas
lea
push
xchg
adc
sub
mov
stos
std
popf
mov
scas
pusha
xor
and
xchg
add
and
ret
or
bound
cltd
fnsave
pop
js
rcrb
insl
insb
pop
rclb
xchg
xor
xchg
mov
test
xchg
add
cld
mov
xlat
add
xor
push
mov
aad
jecxz
loope
sub
jecxz
imul
nop
or
mov
pop
dec
loop
lret
xor
xchg
or
enter
lret
out
stc
cmp
xchg
push
dec
into
jecxz
lahf
imul
fstpl
jb
mov
push
mov
or
pop
shrb
mov
insb
jp
cmp
daa
and
das
inc
stc
jb
repz
cwtl
sbb
and
enter
js
mov
paddsw
mov
push
insb
xchg
movsl
and
movsb
outsl
in
hlt
mov
fidivrl
pop
jecxz
fiaddl
dec
or
push
sbb
fdivp
jle
xor
pop
mov
out
xor
pop
fiadds
testl
shl
popl
mov
dec
stc
fstps
subl
push
xor
repnz
jp
add
cmc
xorb
dec
popf
loop
mov
fsts
xor
xchg
add
mov
xlat
mov
les
les
je
jmp
pop
dec
jle
mov
daa
mov
xchg
xor
xchg
inc
push
mov
inc
cli
inc
sub
pop
int
iret
movsl
add
repnz
fsubs
popl
daa
jnp
adc
xorl
xchg
mov
test
or
pop
test
fs
sarl
cmp
xor
or
mov
jb
es
sbb
je
mov
sub
scas
fildl
ret
movsl
and
data16
dec
mov
popl
das
xchg
sbb
fwait
test
add
data16
scas
dec
add
push
jl
aad
xor
int3
xchg
xchg
inc
ds
pop
cld
sbb
in
and
inc
fsub
fildl
lods
fldt
cmp
and
lds
sub
jg
shlb
in
stos
inc
mov
fdivl
mov
ss
pushf
cmp
fwait
cmp
cmp
frstor
lea
pop
mov
outsb
into
mov
in
xchg
mov
add
mov
xor
inc
mov
add
pop
lcall
icebp
add
leave
push
xrelease
mov
xchg
cwtl
test
mov
cmpsl
repz
fldt
mov
popa
lock
lret
cmp
pop
ret
push
aaa
gs
sti
testl
bound
dec
adc
jo
lcall
mov
scas
sbb
cmp
inc
adc
loopne
ret
cmpsl
mov
xchg
movsl
sub
imul
xor
dec
lds
aas
sub
mov
mov
jmp
add
inc
push
cwtl
add
sbbl
dec
cmpsl
cmc
xchg
in
dec
dec
inc
lds
mov
xor
test
xor
pop
push
test
push
lahf
jmp
lea
mov
mov
sahf
mov
pop
pop
rcrb
pushf
loopne
les
mov
sub
scas
xor
push
mov
ss
mov
es
out
sahf
jl
dec
sbb
and
cmp
lea
mov
cmp
mov
mov
jno
es
sar
test
int3
adc
cmp
cmp
nop
push
sbb
and
mov
loope
rcr
inc
mov
push
sbb
daa
shrl
and
cmc
movlps
gs
sti
xor
repz
mov
adc
out
mov
frstor
mov
fisubrs
mov
insb
test
xor
push
pushf
std
and
push
cmp
inc
fistps
movb
sub
test
xchg
dec
dec
cs
adc
aaa
pop
aas
jl
and
xchg
into
hlt
mov
inc
dec
repnz
adcb
in
iret
mov
in
ror
push
add
pushf
ja
pushf
adc
cli
cwtl
daa
jo
negb
mov
adc
push
cmp
lods
jle
gs
iret
mov
and
cmc
mov
rclb
adc
xchg
in
xchg
out
scas
and
int3
adc
inc
mov
inc
in
jmp
int
inc
rorl
push
out
mov
jbe
jo
movsb
mov
pop
rorl
sub
outsl
int3
lock
mov
scas
jbe
sbb
xor
outsb
push
and
pop
or
arpl
add
mov
jns
in
adc
add
inc
push
out
je
ret
push
movsl
dec
mov
jmp
aaa
mov
inc
mov
stc
rcll
insl
inc
jae
mov
lret
jo
mov
fidivl
xor
fbstp
rcrl
add
and
les
push
pop
adc
lds
test
inc
adc
push
or
cmp
nop
dec
mov
mov
mov
outsb
mov
stos
xchg
stc
mov
daa
jecxz
xorb
movsl
mov
mov
pop
push
lock
and
pushf
or
add
push
inc
cwtl
sub
push
xchg
and
pop
scas
and
imul
orb
call
xchg
inc
pop
in
out
jns
outsl
std
jno
adcb
pop
lock
cmpsl
adcl
pop
sub
test
push
add
xor
pop
sti
ljmp
mov
cmp
iret
jecxz
xlat
rcll
hlt
pusha
mov
dec
je
sub
pop
icebp
scas
lcall
insb
test
inc
inc
xchg
sbb
bound
add
sbb
jmp
xlat
mov
mov
jne
mov
enter
repz
mov
enter
fbld
and
jg
ja
or
push
xor
cmpsb
sti
lret
addb
fistl
jecxz
sbb
stc
adc
mov
xchg
leave
xchg
fidivrl
inc
add
jae
daa
fstpt
movsl
out
xor
fcompl
cmp
sub
addb
pushf
inc
mov
mov
fnstsw
fcoml
arpl
scas
jno
loop
and
outsl
inc
stos
gs
cmc
jno
das
lret
aas
push
fadd
xchg
int
dec
and
dec
int
das
cmp
rcl
ss
xchg
js
mov
push
xor
push
inc
mov
xor
repz
inc
sbb
sbbb
xchg
stos
cltd
pop
mov
daa
xorw
pop
jmp
sti
lahf
mov
inc
and
or
shll
mov
std
jmp
mov
xchg
cmp
sbb
xchg
test
fsubp
insb
cltd
dec
not
jp
shll
arpl
in
fnsave
rorl
push
xor
insb
sahf
jo
imul
adc
push
mov
es
adc
das
adc
out
mov
mov
xor
rorb
pop
dec
ljmp
xchg
and
cld
jae
es
push
push
into
adc
psubb
push
std
inc
jno
lcall
sbb
pop
pop
xchg
push
or
and
mov
xchg
leave
nop
cmp
scas
iret
and
icebp
das
sti
popa
push
sub
cmp
jl
cmpsb
or
stc
arpl
adc
sub
sub
cmp
ss
adc
adc
ret
adc
insl
mul
out
mov
insl
add
sub
dec
sbb
lods
rcr
xchg
jmp
gs
out
fnstenv
nop
js
cld
add
pop
xor
in
push
stos
fadds
jbe
ds
xchg
test
pusha
fiadds
movsl
xor
imul
mov
inc
es
jbe
mov
mov
and
cmc
rol
and
imul
pop
pop
add
adc
shlb
movsb
lahf
mov
pop
addr16
ret
adc
icebp
imul
mov
sbb
sbb
xchg
xchg
push
loopne
mov
js
jns
jle
out
cmp
imul
adc
mov
push
dec
loop
nop
and
cmp
aad
hlt
in
sbb
sub
or
scas
fnstcw
jbe
dec
nop
lea
adc
in
jnp
adc
call
and
cmpsl
push
mov
push
test
imul
stos
sbb
mov
scas
stos
leave
lcall
mov
aad
and
mov
inc
add
sub
mov
mov
aad
pop
adc
or
mov
dec
loop,pt
add
or
bound
xor
push
movsl
xchg
push
mov
mov
enter
mov
lods
outsl
pop
imul
fstl
fildll
daa
pop
insl
adc
in
mov
pop
dec
roll
repz
or
push
xchg
add
andb
xor
dec
adc
ds
push
adcl
jmp
lea
xor
mov
jecxz
xchg
sub
inc
push
jl
and
rcl
mov
xor
jo
imul
adc
jo
and
stos
pusha
popf
iret
fldcw
mov
test
dec
dec
xchg
xchg
mov
mov
inc
sti
or
cmp
rcr
inc
lods
mov
sbb
jo
aas
loop
xchg
icebp
pop
inc
sbb
push
or
push
mov
orl
mov
mov
push
mov
sub
stos
pop
mov
mov
fimull
lret
jecxz
repnz
xchg
in
xchg
push
inc
sbb
loopne
rorb
inc
fldenv
aad
jge
stos
aaa
mov
jle
mov
add
cmp
pop
std
fcomps
dec
adc
lea
int
scas
push
xor
inc
xor
das
fnstsw
int
mov
out
push
adc
sub
adc
jmp
test
dec
mov
mov
filds
or
js
call
mov
nop
aaa
jle
mov
flds
cmp
in
push
cltd
jne
movsb
dec
ret
pop
out
mov
dec
aas
adc
cmpb
loopne
das
ret
mov
adc
cs
popa
out
xchg
inc
imul
sub
dec
or
pop
push
sti
pop
test
add
and
loopne
xchg
mov
jnp
rclb
repnz
xchg
mov
mov
mov
lret
insl
pop
jg
loop
scas
jle
add
into
aad
or
xor
dec
lock
das
sbb
stos
sahf
ret
imul
jle
pop
adc
test
les
xor
lock
test
xor
push
or
addr16
daa
pushf
inc
jl
pop
and
xor
fisubrl
icebp
repz
xchg
cmp
jno
push
mov
femms
inc
fcoms
pop
fcomi
jl
mov
lret
xor
lock
fsubp
xor
andb
js
stos
lods
sbb
lea
adc
sbb
and
or
push
adc
xchg
sarb
mov
out
mov
int3
insb
mov
jecxz
pop
add
adc
jnp
idivl
popa
clc
jg
mov
into
pop
or
popf
mov
jle
and
or
std
fwait
cltd
repnz
repnz
test
mov
test
push
popa
push
jo
call
leave
xor
sbb
repnz
xorb
test
cmp
test
lods
and
mov
mov
imul
add
pop
pusha
mov
mov
inc
jge
adc
popf
mov
fildll
sti
aam
jmp
jae
add
sub
sub
int3
pop
cmpsb
mov
adc
push
pusha
push
mov
fs
jo
pop
std
insl
mov
sahf
mov
sbb
stos
arpl
pop
jae
cs
dec
daa
or
outsb
or
cmp
cmpsl
loope
cmpsb
arpl
sarb
jge
test
ds
and
adc
stc
xor
mov
xchg
in
pusha
push
out
rcr
in
outsb
xlat
cs
fisubl
cmp
adc
xchg
popf
pop
xor
mov
and
test
iret
stos
insb
repnz
sub
sarl
fs
stos
dec
inc
sbb
sbb
sbb
mov
and
and
push
inc
cmpsl
push
ljmp
bound
push
lcall
int3
inc
jmp
in
popa
sbb
xor
rcll
dec
inc
in
pusha
sbb
into
xchg
jo
xlat
xor
insl
cmc
pop
scas
xchg
add
cmp
in
inc
mov
and
jge
sub
dec
movb
mov
es
or
imul
subb
test
stos
data16
pop
sbb
hlt
xchg
add
lods
aad
cli
jmp
push
cmp
rorl
mov
mov
imul
xor
add
add
daa
add
inc
lret
dec
push
lea
out
ret
mov
les
add
cmpsb
filds
adc
pop
into
stc
mov
mov
cmp
sahf
pop
loopne
sti
jno
xchg
add
outsb
gs
push
pop
push
jecxz
data16
add
push
dec
push
dec
mov
jno
cmc
adcb
pop
addr16
xchg
push
sahf
ja
scas
test
cwtl
jg
out
cmp
push
ja
xchg
dec
fs
inc
jno
stos
mov
sub
scas
mov
sbb
fdiv
fisubl
js
pusha
in
jecxz
pop
mov
and
add
push
sub
test
add
add
lret
inc
push
lret
xor
xchg
inc
mov
frstor
adc
xor
jmp
pop
in
ljmp
xchg
cmp
iret
fbstp
cmp
fistpll
jns
dec
mov
pop
cmp
mov
or
sbb
xchg
sbb
jo
jno
xor
mov
ficomps
add
gs
test
fstpl
cmpsb
idivb
pop
movsl
cli
movsl
fwait
or
or
pop
fsubrl
and
mov
jmp
cmpsb
dec
leave
in
int3
adc
jle
pop
in
or
imul
stos
aam
pop
jmp
sbb
data16
in
stos
sbb
push
xor
out
and
inc
lods
sti
lock
sbb
mov
pop
push
subb
xor
cmp
jecxz
jnp
jbe
xchg
int3
test
inc
xchg
inc
int3
clc
xchg
inc
jle
mov
push
inc
shrl
add
push
mov
dec
push
sbb
push
jecxz
inc
mov
and
mov
add
ficoml
in
int3
movsl
inc
popa
popf
repnz
mov
push
pop
out
test
mov
dec
ret
and
pop
fiaddl
out
mov
into
jae
test
or
push
negl
cmp
pop
rcll
out
loope
int
fcomi
add
popa
les
pusha
stos
push
js
add
pop
cltd
mov
mov
pop
and
popf
out
aam
fmul
test
daa
ror
inc
ss
ret
rclb
movsl
inc
cltd
lahf
jo
mov
sbb
mov
inc
mov
mov
ljmp
sub
lret
mov
and
int
jmp
sbb
cmp
dec
jg
sub
nop
add
inc
rcrb
inc
adc
add
push
jno
or
repz
out
xor
int
jmp
fsubrs
xor
mov
repnz
repnz
mov
cmp
sub
add
cmp
or
cwtl
ds
jl
fidivs
sbb
push
pop
aad
cmpsb
dec
pop
push
inc
pop
scas
xor
push
cmp
bnd
sub
gs
int3
add
fs
jbe
sub
or
pop
mov
add
loop
inc
cmp
and
dec
push
pushf
inc
ljmp
mov
ds
imul
mov
or
cmp
add
xchg
pop
bnd
push
or
pop
cmc
lds
out
loopne
mov
or
shlb
add
sub
pop
pushf
and
rolb
xchg
test
sarb
into
pop
cmp
push
xchg
pop
in
mov
fcomp
sub
inc
pop
repnz
mov
push
ja
mov
xor
push
pop
add
imul
cmp
push
or
jae
inc
arpl
inc
mov
sbb
arpl
sbb
shll
ficomps
jae
adc
add
xchg
or
pop
or
in
into
out
cs
sbb
or
xchg
or
movsb
add
outsb
push
sub
sbb
in
and
sbb
mov
push
test
or
sar
jmp
lcall
adc
ja
sbb
push
ret
lahf
aas
push
es
js
ret
js
data16
xchg
mov
sbb
arpl
sbb
adc
dec
or
data16
cltd
pop
jnp
call
push
int3
out
jecxz
fsubs
mov
pop
jae
adc
mov
jle
sbb
std
mov
pop
sti
pop
stos
add
cli
sti
lds
push
rclb
arpl
pop
sbb
and
fisubrl
lret
mov
cwtl
inc
jg
mov
add
xchg
inc
testl
sub
mov
es
fwait
push
fldl
jnp
xchg
mov
jecxz
loope
iret
test
push
sahf
mov
add
dec
sbb
xor
stos
stos
insb
push
mov
stc
rorl
mov
scas
orl
stc
dec
push
fiaddl
rolb
add
cmp
xor
xchg
jmp
jg
xchg
imul
dec
xchg
push
jp
insb
inc
fmull
cld
sarl
out
mov
rcll
lahf
xor
cs
rolb
jge
out
inc
push
outsb
ret
ret
pop
inc
mov
add
jg
xor
xor
scas
mov
icebp
inc
rclb
sub
daa
ljmp
or
xor
outsl
xchg
dec
or
scas
movsl
out
dec
cmp
adc
xchg
sub
mov
jbe
sub
pop
lods
out
cld
sub
push
pop
inc
and
stos
insb
inc
pop
out
lahf
jns
pop
mov
and
push
fs
adcb
mov
sbb
sub
jl
fimuls
add
fistl
jmp
or
mov
shrb
add
jmp
sarb
adcl
leave
test
cmp
test
jmp
sahf
ret
sub
push
adc
loop
mov
pop
fsubrs
in
loop
sbb
sbb
fwait
mov
lcall
test
sahf
pop
cmp
push
mov
and
mov
push
inc
dec
stc
pusha
fwait
lods
dec
xor
pop
jp
icebp
pop
cwtl
repnz
mov
cmp
cmpsb
lods
shlb
sub
adc
out
push
jp
mov
xchg
movsl
mov
inc
cli
or
pop
fcmovnu
inc
movsb
inc
cmpsb
js
test
mov
adc
js
iret
hlt
popf
ret
sti
lcall
ret
mov
cmp
pusha
mov
popa
pop
cmpsl
out
fsubrl
jle
adc
xchg
mov
in
cmp
movsl
js
subb
inc
and
stc
inc
push
jbe
mov
adc
fnstsw
ret
test
xor
ja
xchg
fsubs
icebp
cmpsb
imul
cltd
int
push
bound
mov
loopne
jb
orb
push
int3
rcr
jbe
mov
arpl
mov
das
inc
movsl
sahf
imul
jb
movsb
aaa
push
mov
mov
sub
jg
pusha
xchg
mov
add
xchg
cmpsb
stc
ss
stos
xchg
inc
stc
ja
sub
lcall
lret
sahf
sbb
inc
sbb
out
shll
fcompl
mov
aam
push
lcall
es
jns
js
cmpsl
fucomip
pushf
insb
jns
cmp
add
push
push
in
xchg
pop
div
and
mov
jae
inc
mov
xor
popa
mov
push
test
mov
mov
mov
xor
cmpsl
test
mov
out
mov
gs
cmp
sub
bound
lea
push
inc
mov
pop
push
xor
jne
pop
xchg
xchg
dec
ret
pop
sub
mov
sbbb
and
daa
pusha
insb
dec
movl
mov
jbe
xchg
aaa
gs
hlt
clc
leave
lds
and
dec
lcall
movsl
or
decl
roll
data16
jnp
lcall
dec
stos
dec
in
lret
or
dec
aaa
add
dec
jmp
iret
jne
or
lcall
dec
push
mov
imul
mov
xlat
fadd
inc
into
xor
pop
cmp
imul
jne
jp
mov
add
xorl
cli
push
and
mov
out
add
cli
mov
fidivrs
bound
das
sahf
dec
jb
or
jne
and
inc
aaa
cmp
add
push
cmp
cwtl
sbb
daa
popf
lret
ja
std
xor
cmp
int3
out
and
push
push
and
and
cmpsb
push
adc
mov
xor
jmp
fsts
faddp
cld
push
sub
xchg
pop
sbb
in
adc
mov
aam
dec
pop
xchg
add
mov
icebp
mov
inc
pop
mov
dec
lds
pop
add
jbe
jmp
add
fldt
in
inc
xlat
out
dec
imul
xor
jae
sbb
cmp
int3
mov
repz
jp
movsl
sbb
mov
stos
push
xchg
pop
cmpl
or
orl
in
add
mov
loope
out
add
jecxz
cmp
adc
data16
sub
sbb
orl
jge
lods
dec
mov
js
sub
cld
cld
jmp
or
jecxz,pn
fmul
push
mov
pop
insb
fwait
ljmp
dec
or
sub
inc
sbb
mov
imul
sbb
lcall
insl
push
mov
repz
out
rolb
in
mov
loopne
sarb
sbb
into
test
sub
scas
add
mov
dec
adc
jg
sahf
dec
mul
jbe
lahf
test
and
mov
ret
push
loope
popf
xchg
pop
test
add
pop
mov
pop
int3
mov
xchg
inc
lock
sub
les
pop
pop
or
and
or
or
rcrb
and
jns
mulb
test
incl
push
xchg
push
jnp
scas
pop
out
pop
imul
in
push
cld
lret
cmp
push
jno
xchg
or
je
mov
dec
and
push
xchg
sub
fwait
sahf
fisubrl
adc
or
sbb
int3
test
push
pusha
shrl
stos
nop
jecxz
pop
mov
insb
cltd
xor
cmp
add
stos
cmp
or
lcallw
mov
loop
int
mov
movsl
loopne
xor
xor
outsl
jl
add
test
mov
xchg
les
dec
mov
sbb
aad
ficomps
xchg
and
pop
inc
lds
repz
pop
ds
jne
pop
sub
ss
cltd
lods
sub
mov
adc
rclb
mov
inc
or
or
xchg
das
test
xchg
dec
xor
aam
pop
fdivp
and
inc
mov
popa
and
popa
jge
sbbl
cmp
sahf
test
pushf
ficomps
ds
and
sbb
fxch
icebp
mov
js
sub
mov
test
dec
cli
fimuls
jb
jle
push
dec
xor
sbb
paddusb
std
push
jp
xor
sub
inc
not
aam
call
add
aaa
test
xor
add
xchg
or
out
shll
mov
leave
xorl
es
pop
sahf
cmc
dec
jae
in
push
jbe
cli
test
cmpsb
or
xor
lret
pop
lea
rcl
mov
xchg
fldcw
in
push
pop
les
shll
mov
lea
fwait
add
pushf
xchg
mov
in
popf
pusha
test
xor
rcll
pusha
mov
ja
mov
aaa
lret
mov
xchg
jmp
fisubrs
xor
daa
jmp
dec
loopne
adc
fwait
in
fidivrs
out
mov
mov
or
xor
test
sbb
mov
test
lahf
or
and
mov
mov
fbld
outsb
test
outsl
fs
test
in
ds
les
test
loope
cmp
fldl
mov
mov
test
mov
ret
xchg
and
pop
inc
add
std
scas
addb
push
out
xchg
inc
fimull
sbb
or
xor
mov
decl
inc
ja
jle
hlt
loopne
xchg
jp,pt
pop
loop
insb
cmp
mov
ss
add
int
rcll
dec
int
mov
dec
nop
pop
inc
aam
lret
cmp
add
adc
dec
das
push
dec
std
cmc
mov
add
out
repnz
mov
mov
lods
xor
adc
cmpsl
fcmove
inc
pop
inc
sbb
mov
xchg
dec
into
pop
fwait
and
lea
push
jne
push
int3
pop
xor
je
aas
stos
mov
aas
jge
jl
aaa
sub
loop
jo
pop
pop
push
out
push
or
out
outsb
cmovle
stos
pushl
add
sar
inc
fsubp
xor
or
into
and
rolb
inc
fstl
out
xor
lret
mov
jle
sub
fistps
lods
outsb
in
adc
rol
or
xchg
pop
mov
in
in
into
lock
or
fdivl
xor
cld
cmp
movsb
arpl
xchg
popf
fdivrl
push
insb
pop
lods
push
mov
adc
and
jno
and
or
js
fs
and
fildl
cmp
aam
mov
scas
sub
sub
int3
adc
mov
adcl
mov
iret
push
and
jmp
iret
lock
push
push
fsubrl
add
fildl
outsb
and
sbb
xchg
sub
inc
int
fs
insl
or
popf
sub
mov
cli
std
lods
cmp
push
or
cmp
pop
cmc
fwait
push
lret
int3
push
inc
pop
or
in
inc
cwtl
cmp
jae
push
push
rclb
sub
loop
dec
mov
xchg
adc
mov
notb
sub
mov
sub
test
fwait
push
hlt
cmc
mov
xchg
dec
or
movsl
lds
les
in
out
stos
iret
mov
and
js
cmp
ret
popa
xor
dec
cmp
mov
sub
mov
imul
loop
imul
dec
jns
out
dec
mov
stos
test
dec
ret
sbb
mov
or
cmpsl
mov
sub
adc
dec
mov
mov
stos
dec
sub
xchg
call
sbbl
das
jno
push
mov
jne
cli
xor
mov
jbe
mov
jno
cmp
adc
inc
rcrb
nop
jne
ss
lcall
xchg
lods
jle
sbb
out
mov
outsl
addr16
push
sub
scas
mov
and
stc
loopne
loopne
mov
jae
outsb
xchg
das
pop
xorb
jb
push
push
in
addr16
jge
mov
jecxz
negl
je
pop
dec
jae
xchg
loop
cmp
sarl
jo
rorl
test
lret
sti
movsl
dec
lds
leave
jne
sub
mov
jae
cmp
xchg
jno
push
sbb
lea
fs
imul
mov
je
pop
cltd
pushf
loope
push
or
gs
pop
ret
andl
bound
les
cmp
push
push
and
dec
inc
fs
loop
ljmp
xchg
adc
addr16
dec
movsb
adc
push
sub
pop
sahf
sbb
outsb
jbe
pop
fiaddl
sti
add
inc
mov
js
repnz
xorl
in
lret
out
pop
outsl
add
loopne
std
sbb
or
adc
dec
les
and
xchg
xor
jmp
repz
fadd
mov
push
into
addr16
dec
mov
sbb
gs
dec
int
xchg
push
mov
fnsave
or
pop
insl
jbe
mov
mov
imul
ret
les
and
fstpl
mov
mov
jbe
aad
aaa
and
fdivr
mov
in
xor
test
push
bound
sarl
adc
mov
or
pop
repnz
or
push
jle
xchg
jl
clc
cmp
aam
jo
dec
sahf
stos
fisubl
lock
and
shlb
sub
sub
mov
movsb
lds
inc
fucomi
cwtl
out
inc
xchg
cmpsl
iret
loop
fs
pop
cmp
push
fldt
loopne
or
movsl
push
xlat
mov
orl
mov
imul
inc
clc
lods
popa
push
aaa
adc
lret
mov
movsb
push
or
adc
iret
jp
inc
mov
xlat
addr16
in
nop
nop
cmpsb
push
xchg
repz
add
arpl
lea
xchg
test
adc
and
xchg
lock
test
movsl
bound
jae
fs
and
not
mov
rcr
bnd
adc
call
mov
add
test
dec
ljmp
fdivr
add
daa
jl
or
stos
mov
push
jbe
jo
mov
mov
fcoml
mov
fsubrs
movsl
mov
mov
pop
mov
cwtl
popf
inc
shll
cmp
in
jge
cmpsb
pop
xchg
xchg
pop
jnp
sbb
incl
fwait
xchg
outsb
popa
idiv
inc
dec
arpl
sbb
sub
adc
scas
push
call
sti
repz
addr16
xor
pop
xorb
inc
cmpl
mov
shll
int
lods
push
pop
xchg
mov
and
add
adc
and
mov
mov
lcall
out
stos
mov
cwtl
mov
adcb
push
jg
sbb
in
repnz
sub
mov
pinsrw
fldl
jbe
fidivrl
in
pop
in
sbb
jge
xchg
loope
dec
iret
ja
xchg
mov
jno
loope
insb
ds
ljmp
arpl
xchg
mov
or
imul
dec
ja
dec
mov
pop
pop
in
movsl
icebp
movsb
sbb
sbb
stos
cmp
jp
aam
aas
push
xchg
ljmp
fidivl
scas
andl
adcb
jbe
jecxz
adc
push
cmp
mov
or
mov
imul
movsb
cmp
fwait
imul
lahf
int
enter
rcll
inc
test
shrl
jae
xchg
jp
cltd
sbbb
daa
pushw
jo
pop
imul
dec
mov
leave
aas
mov
pop
aaa
cmp
test
pop
cmpsb
fucomi
and
and
sbb
je
jecxz
mov
and
fwait
add
jne
aaa
fwait
xor
xchg
lahf
pop
cwtl
imul
or
mov
sub
ljmp
jo
ficomps
clc
lret
cmpsb
cmp
int
mov
mov
leave
les
std
xor
mov
push
repz
mov
push
loopne
mov
dec
cli
sbb
pop
inc
addr16
mov
mov
repnz
fsubl
mov
sub
mov
xor
dec
movsb
out
sub
ss
sbb
mov
loop
inc
test
sub
lds
xchg
fnstcw
test
cwtl
stos
jae
mov
xchg
jge
jae
test
aam
mov
cmpsl
inc
sbb
in
adc
sbb
pop
lds
je
sbb
movb
inc
iret
or
in
sbb
sti
and
in
sub
ret
cmc
xrelease
movntps
aam
mov
sbb
fists
aad
enter
mov
in
in
inc
jl
mov
sbb
ja
sub
flds
lods
mov
jg
mov
xchg
xlat
pop
mov
bound
push
cmpb
ds
cmpsb
xor
into
sub
push
fldenv
repz
cmp
into
push
stc
leave
ds
lahf
xor
pop
mov
inc
in
fisttpl
mov
dec
sbb
aaa
add
cmc
lcall
ficompl
popa
mov
sti
cwtl
mov
mov
mov
mov
xor
ret
test
pop
mov
shrl
mov
scas
div
sub
sub
pop
loop
cmc
fisubrs
inc
pop
push
inc
sub
jo
pop
outsb
mov
sbb
fmull
je
sarb
push
ret
mov
les
sahf
dec
int3
int
movsb
aad
adc
push
dec
mov
popf
leave
mov
fcomi
jmp
inc
pushl
xchg
cmc
lock
rcrb
sarl
call
addr16
lahf
sbb
mov
or
mov
aas
push
xor
lds
sbb
cmp
addr16
arpl
cld
xor
adc
rorb
xchg
les
mov
xchg
clc
xchg
jno
fwait
jl
mov
inc
repnz
inc
cmpsl
jb
adc
pop
test
and
popl
gs
iret
cld
pop
adc
pop
mov
lods
addr16
inc
dec
mov
push
ret
or
rcll
int3
cld
xchg
nop
sbb
imul
je
hlt
aad
dec
push
push
add
xchg
jbe
mov
mov
adc
sahf
call
ficompl
nopl
mov
and
jl
mov
mov
push
addb
mov
xor
hlt
sbb
icebp
notb
loop
mov
addr16
jns
outsb
lret
xor
or
repz
repnz
jno
pop
or
mov
sbb
adc
fdivs
pop
aas
inc
sti
pop
adc
test
push
jle
or
xor
daa
push
xchg
push
sbb
jo
jb
ror
cmpsl
cs
mov
jns
adc
jb
jge
push
test
dec
dec
mov
add
adc
mov
popf
xchg
pusha
xchg
loop
sub
ds
lods
xor
jo
jbe
fucomp
mov
jg
stos
add
add
pop
xor
and
mov
adc
xchg
stc
adc
imul
clc
test
cmc
frstor
or
mov
es
pop
fsubrl
hlt
stos
repz
push
xor
incb
pop
cltd
int
xor
cs
adc
sub
jno
inc
cld
dec
iret
adc
adc
pop
add
xor
dec
cmp
cli
js
sbb
xchg
int
and
add
xchg
pop
out
divb
call
test
dec
rol
daa
into
adc
popa
mov
lcall
jmp
and
es
daa
dec
in
xchg
nop
pop
jl
lock
adc
je
into
push
mov
pop
daa
push
stos
cmp
int3
lret
les
out
mov
xchg
dec
xchg
or
ljmp
adc
sbbb
push
dec
mov
test
test
or
mov
jo
jg
lock
cmp
lcall
int3
test
aam
and
lods
cld
inc
addr16
xlat
jnp
fisttps
orb
xchg
aad
fcoms
insb
add
lods
xchg
mov
cmp
rcrb
xchg
sub
ret
adc
mov
inc
cld
adc
out
and
mov
repnz
cli
test
inc
cmpsl
lret
mov
ret
int3
imull
xchg
mov
idivl
mov
mov
in
cmp
adc
or
xor
in
loop
push
lock
cmpsb
add
pop
aad
add
leave
inc
mov
movsl
pushf
add
and
push
sub
out
push
and
mov
xchg
fstps
cmp
push
cmp
or
sbb
sbb
inc
jno
jae
int3
cld
rcrb
dec
jl
jp
leave
pop
mov
mov
adc
imul
test
push
sahf
jl
mov
stos
cmp
leave
std
and
in
popl
icebp
cmp
sbb
ja
mov
mov
cld
ror
adc
enter
test
push
and
or
fcomi
xorb
cmpl
out
inc
inc
jg
dec
add
adc
movsb
ret
int
jecxz
cli
pop
pop
mov
jne
push
insb
xchg
mov
cmpsb
stos
and
das
mov
xchg
rolb
sub
sbb
in
adc
and
mov
nop
and
and
repz
repz
pushf
out
add
mov
dec
add
cltd
and
ja
inc
mov
add
lcall
ja
shll
and
mov
mov
cmc
stc
sti
scas
inc
cmp
aas
dec
cmp
or
cld
and
inc
scas
mov
test
inc
in
dec
and
mov
add
pop
pop
push
rorl
mov
lret
pop
mov
cltd
movsl
in
and
cmc
jecxz
xlat
outsb
nop
pop
pusha
hlt
jmp
into
add
and
pop
rorl
sbb
pop
or
adc
xchg
ret
test
add
jg
push
dec
repz
mov
push
dec
jno
lods
mov
mov
bound
mov
jp
popa
pop
adc
mov
sahf
push
rorb
mov
push
push
ljmp
test
nop
push
hlt
jns
nop
xchg
and
sbb
xchg
fdivrp
jp
mov
mov
cmc
and
pop
movsb
dec
inc
cmp
movsl
fstps
stos
sbb
dec
sahf
inc
push
insb
jmp
inc
adc
push
jl
ret
sahf
fisttps
lods
mov
out
insb
inc
jbe
add
fcomps
adc
loope
mov
push
outsb
add
inc
push
std
call
out
mov
fwait
sbb
dec
mov
aam
dec
loopne
arpl
mov
outsl
sub
shrl
dec
sbb
mov
jno
pusha
push
xor
pop
jb
aam
in
mov
mov
jle
imul
jo
lods
les
xchg
mov
rorb
mov
inc
sub
movsl
or
rclb
cmp
dec
jle
push
shlb
push
mov
mov
in
or
arpl
xor
test
wbinvd
mov
jmp
push
push
loopne
pop
cli
and
adc
xchg
inc
enter
ret
mov
mov
rolb
leave
cmpb
xor
repz
inc
mov
mov
add
daa
mov
add
add
and
add
fdivs
dec
push
mov
scas
push
mov
and
repz
jo
lahf
jno
xchg
bnd
repz
shll
xchg
and
cmp
nop
pop
clc
fcmovnbe
out
lods
sub
jo
dec
lods
lods
add
xchg
pop
inc
call
xlat
pop
inc
ja
sub
mov
test
fcmovne
mov
test
sub
scas
repz
fldl2e
rcll
xchg
fldl
or
sbb
push
loope
shlb
mov
inc
dec
loopne
std
mov
addr16
movl
jnp
in
adc
addr16
in
in
ret
adc
aam
xor
push
popa
dec
in
inc
xor
rolb
filds
pop
xchg
mov
inc
arpl
jl
in
xadd
sti
pop
add
xchg
orb
push
mov
dec
mov
sahf
ret
test
pop
sub
hlt
dec
inc
cld
jg
fwait
out
add
pop
imul
outsb
icebp
inc
push
mov
mov
jbe
and
mov
xor
arpl
shrl
push
cmp
loop
call
fistps
push
jae
push
push
jmp
xchg
sub
imul
or
mov
cld
or
aas
aas
leave
and
movsb
into
inc
jp
cwtl
xchg
arpl
and
stos
scas
cld
sub
sarl
xchg
imul
sti
in
jbe
test
aam
mov
or
xchg
cltd
mov
sub
repz
rol
inc
mov
into
and
lcall
ds
fildll
cmpsb
mov
push
pop
lods
pop
imul
out
lret
pop
in
mov
inc
pop
in
repnz
sub
push
sbb
add
mov
mov
push
shll
add
iret
lock
xor
sbb
jns
dec
cmp
aaa
xchg
adc
enter
xor
add
sub
rol
push
pop
sub
and
stos
mov
push
test
ja
aam
jmp
push
stc
ficomps
cmp
push
shrl
push
jno
mov
pop
xlat
repnz
and
and
cmp
xor
iret
push
sub
add
loop
les
mov
mov
lds
insl
push
shrb
add
mov
push
shlb
pushf
sahf
and
cwtl
cmp
sbb
orb
fcompl
addr16
imul
inc
test
loop
mov
ja
sub
loope
jae
xor
cmpsb
jl
loop
sbb
mov
cltd
xchg
pop
fistl
inc
shl
arpl
bound
stos
jle
fdivrs
fbstp
mov
or
push
mov
xchg
lock
add
loope
mov
insb
lcall
and
inc
ss
push
test
insl
adc
xlat
pop
mov
leave
pop
xor
dec
js
mov
add
nop
xchg
ret
movl
sbb
dec
adc
fdiv
mov
fld
into
adc
imul
mov
test
cmp
push
lcall
cld
shr
stos
in
jle
bound
repz
mov
inc
daa
xchg
xorl
cld
jmp
inc
std
inc
sbb
leave
addr16
sub
or
test
adc
loope
sbb
stos
sub
leave
movsb
adc
cmc
jmp
outsl
ss
sarl
lods
loopne
mov
outsb
pop
jb
loop
pop
push
popf
or
lods
pusha
repz
sbb
dec
aad
jns
incb
bound
jg
mov
sbb
jl
and
addb
cmpb
out
gs
call
loop
mov
dec
out
shlb
adc
and
dec
xlat
sbb
ljmp
jb
js
mov
or
pushl
movsl
imul
hlt
push
sarl
jmp
xor
dec
jne
inc
hlt
jle
push
sti
nop
js
push
pop
xor
xor
xchg
adc
aad
int
xchg
popa
xor
jne
push
mov
divl
fs
call
into
das
int3
mov
cli
mov
int
popf
pusha
stc
inc
add
jl
xor
into
rep
jb
fsubr
loope
pop
mov
lcall
out
mov
sbb
lret
xor
int
jns
loop
inc
pop
push
int3
iret
lds
ja
lahf
push
pop
pop
test
and
in
sub
dec
dec
jae
dec
ss
push
mov
push
inc
addr16
test
ss
push
cmp
dec
xor
loop
fisubrs
cmp
jge
xchg
xor
js
in
lahf
lods
lret
lods
jl
ljmp
mov
ljmp
jge
sahf
pop
cmp
sahf
add
out
setl
enter
and
mov
fisubrs
or
cltd
lret
movsl
neg
inc
das
dec
sbb
enter
xor
sbb
leave
xchg
popf
xchg
lahf
shlb
or
inc
out
nop
dec
sub
fs
cld
and
push
dec
outsl
add
mov
fcompl
jo
fmuls
es
icebp
fldt
sbb
xor
add
fistps
stos
adc
sub
std
xchg
call
cwtl
and
loopne
lahf
lahf
fadds
aad
xor
pop
sub
mov
push
sbb
jne
lcall
cmp
incl
es
in
xchg
orl
and
scas
bound
dec
pop
lea
in
mulb
int3
loope
add
clts
adc
or
aaa
in
test
shrb
push
sub
sbb
dec
andl
push
in
jle
lds
fwait
and
lret
lock
ds
repz
sar
loopne
jp
mov
sbb
cmp
sahf
subl
bound
es
push
cld
or
sti
or
xor
ljmp
mov
sub
or
xchg
pop
inc
add
xchg
fidivl
push
mov
xor
gs
fistpl
mov
mov
in
inc
repz
in
xchg
rorl
xchg
mov
jmp
aad
xchg
pop
or
and
out
and
icebp
adc
insl
bound
mov
jmp
dec
sub
and
int
jbe
push
mov
cmpsb
cmp
and
stc
pop
daa
aaa
pop
call
js
sub
and
add
push
jle
in
sbb
jne
lds
add
out
pop
fwait
dec
sub
fnsave
flds
in
jecxz
push
jle
sub
aas
pop
mov
inc
add
cltd
adc
popl
mov
or
push
mov
adc
dec
mov
femms
cmpsb
movsl
adc
imul
xchg
cli
lret
cmp
pop
mov
jg
call
pushf
or
pop
mov
gs
in
js
mov
popa
push
notl
fdivl
ja
rcrb
mov
dec
cmp
cmp
ja,pt
arpl
cld
test
cmpsl
sti
mov
in
jecxz
iret
mov
cli
jp
cmp
pop
mov
pop
jb
int
push
sbb
loope
idivb
into
leave
pop
push
sahf
lock
push
sahf
test
and
jg
scas
mov
test
pop
mov
pop
ljmp
in
xlat
std
lods
jp
add
fs
stos
ss
stc
or
insl
inc
mull
insb
jbe
in
adc
jns
pop
rcrb
mov
pop
lods
push
iret
mov
xchg
dec
adcl
sarb
mov
cld
repz
add
or
in
jb
outsb
inc
push
addl
adc
adc
pop
test
sbb
mov
mov
lret
aam
lret
ss
mov
and
jl
jbe
decb
aam
xchg
inc
xchg
movsl
or
and
fiaddl
das
mov
push
pop
stos
loopne
fisubrs
sub
fmulp
je
in
xor
xchg
cmp
fwait
ret
push
xchg
or
sbb
push
xor
addr16
mov
mov
add
shlb
mov
shl
es
out
inc
int
das
sbb
and
dec
sub
repnz
mov
jnp
movsb
lock
cmp
shl
xor
fstp
andb
into
sub
mov
or
and
pop
popa
inc
jo
cmp
push
subl
shl
or
jmp
loope
sbb
inc
clc
xor
dec
jns
mov
adc
jge
mov
add
mov
cmp
jnp
sub
xor
sbb
sbb
xor
jecxz
ljmp
lahf
fcomps
fisubrs
pop
adc
or
lock
lods
push
cmc
lahf
push
cmp
out
mov
jnp
cmp
leave
mov
je
out
pop
mov
inc
mov
sbb
sub
enter
js
and
aaa
scas
sbb
mov
xor
hlt
mov
rcr
orl
loop
leave
pop
outsb
cld
inc
xchg
xlat
sub
pop
pop
subl
flds
imul
inc
insl
es
imul
mov
mov
dec
je
sbb
push
in
mov
push
and
push
leave
lahf
jp
adc
cs
push
int
adcl
ret
inc
adc
push
inc
lret
and
js
scas
cmp
mov
dec
mull
shlb
clc
sub
push
sbb
mov
xor
adc
pop
sbb
mov
shrl
mov
jg
sarb
pop
xor
xorl
hlt
and
testl
in
jnp
cmp
mov
shll
adc
adc
mov
lock
and
lea
jae
push
leave
cwtl
xor
lret
mov
lods
mov
ret
mov
xchg
push
subl
cs
scas
out
mov
mov
or
push
aas
add
sbbb
shr
ljmp
jne
xchg
cld
push
sub
mov
dec
sub
popf
lds
cld
xlat
inc
mov
lods
mov
cmp
mov
jmp
insb
lea
aas
mov
iret
cmp
insb
sub
sarl
xor
cs
aas
dec
mov
push
bswap
lock
mov
mov
into
scas
xor
and
aad
arpl
loop
sbb
ficomps
push
jmp
cmpsl
pop
dec
push
push
imul
aaa
or
icebp
push
mov
fimuls
jns
pop
jp
stc
push
lret
andl
sub
lods
outsb
test
sub
loope
sub
cltd
imul
jne
xchg
ds
pop
ficomps
dec
js
popf
sti
push
out
inc
add
insl
sarb
push
xchg
shlb
inc
nop
lods
std
add
push
and
jnp
mov
sbb
dec
xor
inc
cmp
inc
jne
outsl
pop
mov
ss
mov
out
pusha
cmpsl
idiv
rcrb
dec
test
xchg
jne
shll
or
scas
push
in
ficoms
movsb
or
test
lea
lock
and
push
in
or
test
bound
pop
rcll
or
adc
lret
lods
xor
iret
aaa
or
xchg
cmc
mov
jae
std
push
out
aam
pushf
mov
mov
out
dec
inc
jb
xor
push
dec
shll
fldcw
add
fwait
shl
pusha
cs
pop
or
xor
cmpsb
addl
in
xchg
fsubrl
fiaddl
int3
lret
dec
aaa
fisttps
loope
add
dec
sbb
scas
push
push
mov
int3
out
lock
and
fdivs
push
add
or
cmp
cmp
and
insl
adc
xchg
add
out
mov
rcrb
outsb
pop
push
in
and
sub
fcompp
sub
ds
test
je
sbb
dec
ss
xchg
jp
adc
pop
fnstcw
test
scas
insb
xor
lcall
ds
mov
lods
or
xchg
decb
push
pop
pusha
push
addr16
test
pushf
xchg
fcom
lods
sbb
ds
mov
mov
dec
jmp
int3
outsb
mov
jno
mov
mov
ret
push
call
movsb
or
sbb
inc
mov
xchg
fwait
lods
mov
mov
movsb
or
mov
sub
stos
jl
dec
pop
xorb
cltd
fsts
arpl
xor
popa
push
xchg
sbb
int3
pop
push
lret
xor
sub
rcrl
add
xchg
jns
inc
jmp
mov
pop
rclb
or
divb
sub
mov
xchg
xchg
fnstsw
pusha
ss
addr16
bound
mov
xchg
add
cmp
gs
mov
or
xchg
enter
sbb
sbb
jecxz
jae
mov
mov
iret
or
pop
addr16
jnp
stc
xchg
xlat
sar
hlt
test
imul
inc
das
dec
cli
test
insb
or
in
test
loopne
fwait
cld
addr16
mov
das
jno
lahf
jb
cmp
adc
jne
cmpsl
dec
neg
ss
xchg
pop
dec
outsl
sub
movsb
and
inc
repz
out
imul
nop
xor
out
mov
and
sahf
arpl
mov
lret
mov
aaa
sti
pop
xchg
cmp
push
cmp
shlb
ret
push
divl
push
inc
cmp
fldt
inc
jl
bswap
jl
and
dec
add
sarl
ja
xor
and
lods
out
mov
bswap
bound
orl
pop
mov
stos
mov
in
rolb
or
mov
inc
push
lahf
xchg
mov
jle
add
flds
icebp
pusha
fistps
jmp
rcrl
scas
mov
imul
out
test
dec
push
mov
pop
mov
lret
roll
js
int3
insb
pop
inc
imul
push
adc
push
shlb
inc
push
mov
sub
mov
scas
fwait
push
loop
xchg
mov
push
inc
pop
scas
subb
rorl
mov
inc
pop
mov
mov
imul
push
and
add
xor
mov
push
jl
lcall
push
sub
mov
fmulp
xchg
mov
fs
sub
ss
add
fsubl
outsb
add
push
test
adc
add
ret
pop
js
stos
js
pushf
mov
xchg
cmp
insl
add
jge
cld
sub
or
fwait
and
xchg
imull
xlat
sbb
insl
callw
adc
aad
cli
mov
xor
pop
add
mov
dec
jge
dec
mov
mov
push
in
or
dec
or
data16
lret
ret
add
mov
mov
lods
ficoml
add
inc
adc
lods
pushl
out
clc
data16
inc
and
je
jnp
pop
ret
adc
sbb
adcl
pushfw
fisttps
lods
adc
jnp
dec
sub
mov
mull
jo
pop
lods
imul
pop
inc
popf
mov
lods
outsl
push
cmpsb
fistps
sahf
arpl
mov
mov
rcll
int3
test
xor
dec
imul
dec
pop
push
sub
cmpsb
jle
pop
mov
add
fimull
pusha
dec
add
inc
stc
rclb
add
insl
inc
mov
divl
aaa
xor
movsb
cmc
adc
adc
movb
mov
ss
push
mov
pop
dec
loopne
cld
scas
lds
and
popf
sahf
ret
jne
ljmp
in
stos
test
daa
adc
imul
popa
pop
xchg
ljmp
xchg
lcall
in
loopne
loope
xchg
enter
out
inc
add
bnd
fs
fs
mov
adc
xor
into
insl
xor
aam
mov
sbb
cld
fnstenv
pop
mov
das
xchg
pusha
jge
push
pusha
push
cmpsb
loope
testl
in
outsl
jbe
xchg
xchg
popa
jbe
add
xchg
or
cmp
cmc
in
and
xor
rorl
sbb
sets
dec
mov
in
mov
cltd
shlb
loope
nopl
adc
dec
jl
pop
ret
clc
out
mov
rcrl
lea
out
dec
adc
lret
cmpsb
push
jecxz
cmp
mov
jns
sbb
adc
stos
pop
xchg
xchg
adc
scas
aad
jae
clc
mov
cmp
xchg
inc
fadds
subl
cs
adc
mov
and
xor
out
mov
xor
int3
jp
stc
pop
add
mov
and
cmp
cwtl
shrl
in
fiadds
push
pop
mov
adc
lea
jg
jns
icebp
mov
out
shrl
pop
xor
add
dec
addr16
nop
pop
out
in
cmp
jmp
rcrb
and
push
jp
sahf
push
sub
mov
jno,pt
pop
insb
cmp
movsl
push
scas
or
push
dec
push
mov
and
or
lods
cmc
push
or
