push
push
iret
adc
ljmp
and
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jmp
add
cmp
movl
inc
ret
jno
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
xchg
int3
inc
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
bswap
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
rcl
inc
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
stc
out
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
movsb
flds
popf
adc
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
mov
inc
add
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
add
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
jo
inc
add
pop
and
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
add
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
add
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
pop
roll
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
out
inc
add
push
cmp
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
daa
loop
add
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
add
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
out
inc
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
rolb
jne
mov
movl
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
in
sbb
test
add
inc
xchg
xchg
aas
call
clc
lea
add
pop
cwtl
add
mov
mov
add
add
jb
add
lods
aad
arpl
add
je
add
sarl
add
sub
pop
popl
push
lea
push
push
push
push
lea
push
call
add
lahf
add
outsl
roll
add
xchg
insb
loop
lahf
in
add
pop
add
out
fmuls
pusha
add
mov
add
add
jnp
loope
shll
add
add
add
add
sub
pop
push
push
push
call
add
add
push
test
add
add
aad
xchg
bound
add
roll
add
add
addb
add
rolb
lret
clc
pop
add
mov
addb
fnstsw
mov
in
clc
pop
push
push
push
push
push
push
push
call
add
in
add
add
jbe
arpl
add
add
add
add
push
aam
add
add
jae
test
add
add
add
add
rolb
add
add
add
add
stos
sub
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
shr
push
cmc
shl
imul
jb
popl
add
leave
add
xchg
add
add
add
add
add
in
fcompl
push
push
push
push
push
lea
push
lea
push
push
call
loop
testb
subb
in
add
popl
cld
gs
aad
out
jnp
mov
in
in
loopne
lcall
aaa
add
add
and
je
xor
imul
adc
push
push
push
push
call
add
xchg
aam
rol
pushf
stos
fnsave
enter
add
clc
test
add
iret
push
jge
aad
add
add
ret
mov
mov
xchg
ja
mov
loopne
add
std
movb
in
fcompl
add
call
lea
push
lea
push
call
add
loopne
add
test
add
add
scas
imul
add
loopne
fisubl
push
add
xchg
add
add
mov
add
cmpsl
fiadds
roll
add
loopne
imul
xchg
mov
lcall
fwait
add
add
lea
push
push
lea
push
push
lea
push
call
xchg
jmp
add
mov
aad
add
add
add
add
jecxz
xchg
xchg
mov
scas
cld
mov
testl
mov
add
mov
xchg
cmpsl
jecxz
in
in
lcall
push
push
lea
push
call
pop
aad
xchg
push
loope
lahf
lret
mov
cli
cltd
xchg
push
fcmovne
add
add
jns
pop
fisttpll
add
push
sub
pop
mov
push
lea
push
push
lea
push
call
xchg
add
add
add
mov
lds
test
add
add
jae
add
mov
add
lret
stos
lods
mov
xchg
addb
in
lock
mov
add
push
push
push
push
push
push
push
push
call
insb
pop
cwtl
out
add
lret
in
pop
lds
add
add
in
add
aad
jne
lock
pop
add
add
push
push
push
lea
push
push
push
lea
push
push
push
call
add
in
add
add
pop
add
loope
add
mov
add
push
sti
fildl
add
mov
mov
mov
stos
movsb
gs
add
add
add
jge
sub
pop
mov
xor
push
push
not
ror
ror
lea
push
xor
add
add
ror
ror
sub
inc
add
pop
add
pop
push
push
push
push
push
push
push
push
push
call
shl
jo
add
jl
lret
push
les
mov
bound
add
bound
add
arpl
jbe
sub
pop
pushl
push
push
push
push
push
call
jp
push
rcrb
mov
js
enter
add
add
add
add
push
into
add
hlt
notl
pop
lret
mov
add
lret
in
pop
call
push
lea
push
lea
push
push
lea
push
call
lock
add
roll
push
add
add
add
cwtl
je
cli
fiaddl
popf
mov
xchg
jns
mov
out
mov
rcrb
add
ljmp
in
pop
mov
push
push
push
push
push
lea
push
call
add
ficoms
push
mov
push
fcmovb
clc
add
repnz
jne
pop
enter
roll
scas
add
mov
add
shlb
push
cltd
hlt
xlat
test
stos
aad
aad
jp
jmp
mov
cmpsb
add
cli
mov
in
call
add
add
push
push
push
lea
push
push
push
call
jo
mov
add
cmpb
pusha
add
add
stc
shlb
mov
push
xchg
xlat
add
add
mov
mov
add
add
fucomp
pop
jne
mov
mov
add
add
inc
call
xor
mov
pop
push
call
roll
cli
add
pop
add
add
add
mov
clc
out
int
push
add
add
jge
call
add
add
filds
add
nop
subl
addb
cld
pusha
push
add
fwait
mov
pop
mov
cltd
mov
mov
in
lock
lcall
push
push
push
push
push
lea
push
push
push
lea
push
push
call
filds
aam
shl
fiadds
fiaddl
addl
add
add
jb
add
lea
int
xchg
mov
hlt
add
add
add
loop
addl
int
out
out
mov
lret
add
in
into
lcall
fdivr
lcall
jne
push
push
push
call
outsl
xchg
stc
loope
jl
add
add
add
mov
add
cli
pushf
mov
sub
pop
pushl
push
push
push
call
push
add
xchg
jbe
cli
pop
enter
add
add
add
add
add
add
adcb
je
add
add
jl
lahf
add
add
bound
dec
daa
add
push
lea
push
push
push
push
push
call
mov
loopne
mov
add
imul
test
dec
notb
add
fwait
xchg
mov
sub
pop
pushl
push
push
lea
push
push
push
push
call
std
jb
add
xchg
mov
mov
add
mov
out
push
xchg
sahf
mov
mov
jo
add
add
add
lcall
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
add
testb
add
out
add
add
add
int
fstpl
imul
add
push
hlt
add
fsubp
repnz
xchg
xchg
jo
mov
add
add
lret
add
mov
iret
mov
push
mov
adcl
mov
sub
pop
call
push
push
shr
ror
lea
push
xor
add
sub
sub
dec
pop
sub
inc
rol
pop
push
push
push
push
call
jl
insb
and
mov
mov
push
push
add
add
add
add
add
mov
cli
add
sub
pop
pushl
push
push
push
push
call
add
repnz
in
mov
in
xchg
add
addl
add
jmp
mov
cmpsb
stos
add
mov
push
lret
popa
adcb
insb
iret
in
push
add
sub
pop
call
push
lea
push
push
push
lea
push
call
add
call
pushf
mov
andl
rcr
add
add
push
add
add
mov
enter
push
add
iret
add
add
add
lret
addb
mov
add
add
add
scas
roll
sahf
add
aad
add
inc
push
push
shl
xor
push
sub
add
sub
shr
dec
sub
inc
ror
ror
pop
not
inc
dec
sub
pop
push
lea
push
push
call
jmp
out
call
add
je
lret
add
add
js
mov
pop
in
lock
mov
add
lods
mov
cld
add
add
add
cld
add
hlt
lcall
push
push
push
push
push
push
push
push
call
add
add
mov
add
icebp
add
insb
addl
jb
stos
pop
add
lahf
jp
add
add
add
mov
add
scas
pop
add
imull
add
cmpsb
add
add
push
push
call
xchg
rolb
int3
outsl
add
aad
in
in
call
push
lea
push
push
push
lea
push
push
call
test
mov
mov
push
mov
test
add
mov
add
stos
push
sub
pop
mov
push
push
push
push
lea
push
push
push
call
cmpsb
add
lret
mov
mov
int
cmpsb
int3
push
mov
pop
jne
loop
add
idivb
ljmp
add
stos
pusha
add
add
rolb
add
add
hlt
test
pop
ret
fidivl
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
cmp
jo
add
in
add
add
addr16
in
lahf
mov
mov
push
add
out
add
test
jbe
test
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
fiadds
push
les
movsb
add
push
add
test
push
add
add
add
push
rcl
add
add
pop
int
xchg
sub
pop
mov
push
push
push
push
call
add
ret
add
add
cwtl
push
add
not
arpl
add
imull
stos
push
mov
add
mov
add
add
lds
add
loopne
fs
mov
add
mov
pop
cmpsb
push
add
sub
pop
add
push
push
lea
push
push
push
call
out
addr16
add
scas
jns
pop
leave
push
add
add
xchg
in
call
mov
add
test
imul
leave
mov
add
insb
add
scas
add
add
fildl
ret
add
add
push
push
push
push
push
push
push
call
fs
xchg
pop
incb
pop
add
jne
imul
add
add
addb
lock
shlb
je
in
add
mov
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
fisubl
push
in
iret
mov
into
shl
add
add
xchg
mov
jmp
aam
fsubs
add
add
add
out
push
lcall
xor
int3
iret
iret
push
push
push
lea
push
push
push
push
push
push
push
call
aad
add
push
add
mov
int
add
mov
cmpsb
mov
mov
ficoml
int
cwtl
bound
in
add
add
in
fcomps
xor
push
push
push
push
push
push
call
imul
addb
add
add
mov
jnp
lret
add
xlat
lahf
add
int3
lahf
ret
add
add
mov
lret
ljmp
cmc
stos
add
add
popa
jge
fcmovu
jl
je
jbe
pop
in
cwtl
add
xchg
mov
imul
lcall
les
push
push
push
push
push
push
push
lea
push
call
jmp
mov
xchg
jnp
aam
add
bound
pop
push
xchg
add
add
sti
mov
mov
fiaddl
pop
add
add
mov
stos
add
fs
add
add
add
je
mov
movsb
popf
add
int
test
jne
push
push
push
push
push
call
ficompl
mov
mov
add
les
lahf
add
jne
mov
add
jle
mov
add
add
add
test
lcall
add
ja
aam
in
lock
lcall
inc
or
iret
push
push
push
push
push
push
push
call
mov
add
cli
lcall
mull
add
test
mov
add
lret
push
iret
mov
add
add
lcall
pop
mov
mov
cmpsl
pop
add
add
add
add
add
icebp
xchg
add
add
in
lcall
lock
push
push
push
push
push
push
call
add
add
cltd
add
add
test
add
arpl
add
fadds
je
out
insb
add
add
mulb
sarb
shl
icebp
movl
add
mov
push
push
push
push
push
push
lea
push
call
imul
mov
mov
add
lret
int3
add
push
add
add
data16
mov
stc
mov
icebp
imul
lret
cltd
push
mov
jne
fadd
jb
mov
add
enter
in
call
push
push
push
lea
push
call
add
mov
add
add
jecxz
in
add
roll
movsl
stos
mov
add
add
orb
fwait
xchg
add
int3
cwtl
negb
add
add
mov
loope
add
cmpsb
add
add
push
int
mov
in
add
in
lock
lcall
les
push
push
push
push
push
call
lret
scas
add
ljmp
js
rolb
mov
test
lock
jb
out
jb
add
pop
add
in
mov
add
fdivs
clc
mov
add
add
push
push
push
call
mov
mov
into
mov
mov
stc
mov
mov
add
bound
testl
add
sti
add
xchg
add
add
sti
mov
out
add
add
add
fisubs
add
add
fcoms
imul
clc
add
push
fstl
inc
or
iret
push
push
lea
push
lea
push
push
push
push
call
add
add
flds
jae
add
push
mov
fisubs
add
in
add
add
add
add
hlt
pop
add
out
add
in
add
add
shll
mov
add
in
sub
push
lea
push
push
lea
push
push
call
add
jb
aam
add
arpl
mov
lahf
add
lea
push
add
pop
add
add
jl
leave
arpl
pushf
add
pusha
mov
push
incb
add
add
xchg
add
fbld
add
fildl
add
out
add
mov
scas
add
add
sub
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
jl
add
imul
ja
fdivp
popa
movsl
pop
in
fwait
mov
stos
test
pop
fisubl
add
add
mov
outsl
jnp
push
repnz
in
loopne
lcall
movsb
push
push
push
push
call
xchg
add
jno
mov
addl
stos
mov
pop
add
add
test
add
sarb
mov
pop
fnstcw
add
insb
pop
push
mov
pusha
add
les
add
shrl
jl
add
add
icebp
shl
lret
mov
add
lcall
push
push
push
call
fld
xchg
jb
push
mov
add
xchg
add
add
add
lahf
add
mov
add
add
out
add
js
xchg
xchg
add
mov
push
push
lea
push
push
call
test
add
add
add
imul
lock
arpl
add
add
add
add
mov
int3
xchg
jnp
popf
add
roll
add
cwtl
test
cmpsb
js
add
add
stc
add
mov
gs
in
lock
lcall
pop
in
push
add
not
sub
add
pop
add
push
sub
pop
add
push
push
call
add
add
add
add
push
mov
popf
fldl
les
add
add
add
sti
add
add
add
into
add
add
add
stos
jle
pop
add
add
add
cmpsl
cmc
add
call
std
push
xchg
ja
add
pop
imul
and
iret
push
sub
pop
mov
push
push
push
call
arpl
xchg
add
test
pop
add
pop
add
stos
add
add
pop
add
mov
add
popf
jecxz
movl
xchg
fcoms
add
jmp
in
jo
add
in
add
add
add
lahf
add
call
in
clc
lcall
adc
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
xchg
lock
lret
cmpsl
loope
jo
xchg
mov
scas
mov
test
add
addb
ljmp
add
add
jo
pop
add
add
fcmovne
out
push
imul
add
add
add
mov
test
add
shl
jl
add
sub
pop
add
push
xor
pop
mov
xor
push
push
lea
push
push
push
push
push
call
in
pop
add
test
add
jb
pop
enter
add
add
popa
out
add
push
fcomp
outsl
add
test
in
add
negl
add
push
jle
jge
jp
push
int
add
add
mov
mov
pusha
jl
add
add
ret
push
inc
pop
mov
push
push
inc
xor
not
push
or
not
add
sub
add
rol
add
sub
ror
not
pop
shl
add
add
pop
push
add
pop
pushl
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
jl
icebp
add
add
add
test
add
arpl
mov
add
fiaddl
mov
test
bound
mov
fists
adcb
mov
add
cmpsl
xchg
add
add
add
pop
lahf
nop
mov
mov
add
mov
add
add
add
sub
pop
push
push
push
push
or
not
add
inc
shl
sub
ror
ror
pop
shl
shl
pop
push
sub
rol
sub
pop
push
push
add
pop
push
call
push
pop
mov
push
lea
push
call
pop
add
xchg
in
mov
add
add
mov
add
add
add
aam
rcl
add
insb
mov
add
lret
sti
add
gs
ja
add
add
bound
add
fiadds
loope
add
add
push
fcomp
scas
icebp
mov
add
clc
outsl
add
nop
lea
sub
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
cwtl
lret
mov
add
add
xchg
add
data16
loop
mov
xchg
imul
imul
mov
addl
add
add
add
xorl
add
in
pop
mov
add
cli
add
jne
test
out
sub
pop
mov
push
rol
lea
shr
pop
add
push
lea
push
push
lea
push
push
push
push
call
shl
gs
leave
call
add
cld
add
data16
push
insb
fwait
int
fnsave
mov
jge
add
add
add
add
add
mov
add
lods
add
addb
je
fwait
add
in
mov
aad
add
addr16
cwtl
lret
in
lcall
ret
add
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
lods
xchg
mov
push
add
pusha
jmp
xorb
aam
push
add
mov
add
mov
mov
fst
add
ret
mov
add
push
push
push
call
xchg
jmp
jl
add
out
int3
add
xchg
push
lds
add
add
xchg
jge
add
lcall
jae
push
push
push
lea
push
push
push
push
call
mov
add
add
add
cmpsl
scas
add
jne
push
mov
out
test
mov
outsl
jecxz
addb
out
in
call
xor
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
testl
jp
add
hlt
pop
leave
cmc
in
add
sti
pop
mov
push
jnp
fiaddl
movsl
je
add
jp
add
add
add
movsl
jp
pop
mov
notl
xchg
add
mov
push
add
jnp
add
enter
add
add
les
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
jb
add
xchg
add
jns
mov
in
add
mov
ja
rolb
mov
add
popa
xchg
add
cmc
bound
xchg
add
sbb
add
mov
add
lret
insb
mov
add
add
add
jbe
add
jne
push
dec
add
pop
push
push
rol
pop
mov
xor
push
xor
dec
lea
pop
add
push
lea
push
push
push
call
add
add
lret
push
jge
jne
xchg
add
call
add
iret
add
add
add
mov
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
lcall
add
outsl
lock
cmpsb
mov
loop
test
cmpsl
mov
repnz
mov
add
mov
xor
push
push
push
lea
push
lea
push
push
push
lea
push
call
shlb
add
add
test
add
push
nop
mov
add
add
clc
jle
add
add
jle
add
add
in
add
repnz
int3
pop
add
pop
test
xchg
jae
add
mov
rolb
add
mov
loopne
rep
push
push
push
call
add
add
add
add
push
out
shll
gs
add
add
mov
mov
xor
push
rol
pop
or
je
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
xchg
mov
add
bound
push
add
add
popf
mov
add
popa
into
pop
add
add
iret
aam
xchg
add
fcomi
mov
xchg
insb
add
pop
movsl
int
faddl
out
jp
pushf
add
fdivr
lcall
xor
push
push
push
push
push
push
call
add
mov
add
lret
add
add
mov
lods
add
mov
add
add
add
bound
out
addb
jb
add
imul
movsb
push
cli
in
xchg
add
mov
push
add
in
cwtl
cmpsl
add
jl
mov
sub
pop
add
push
push
lea
push
push
call
cmpsl
out
aad
add
pop
jnp
test
add
add
jle
cmpsb
roll
loope
jb
mov
jns
add
add
les
lds
shrb
imul
pop
movsb
mov
add
mov
jne
in
lock
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
in
cmpsb
add
add
add
outsl
ja
stos
xlat
repnz
test
xchg
adcb
add
lock
add
lcall
repnz
push
push
push
lea
push
push
push
push
lea
push
call
in
push
out
push
mov
fiadds
push
scas
pop
jge
add
scas
cmpsl
lock
add
add
fiaddl
loop
pop
add
push
jnp
add
add
js
xchg
add
mov
scas
add
rcr
add
std
int
gs
sub
pop
add
push
push
push
call
add
add
add
add
push
pop
shrb
jge
lods
push
add
jb
pushf
mov
add
push
mov
ljmp
jecxz
xchg
mov
cmc
mov
add
in
add
popf
mov
add
xchg
sub
pop
mov
xor
push
push
lea
push
push
push
push
call
ljmp
popf
add
add
push
jae
ret
add
out
add
int3
lock
add
lds
jge
cmpsb
add
cli
hlt
cltd
add
pop
mov
fs
add
push
imul
push
loop
test
mov
clc
movsl
rclb
add
test
cmpsl
mov
lock
push
push
lea
push
push
push
push
call
add
mov
pop
int3
pop
sahf
xchg
fcmovnu
add
test
shrl
add
add
add
mov
addl
mov
aad
add
mov
iret
cmpsl
int3
jae
add
jo
push
repnz
lock
cmpsl
add
add
add
jp
xchg
add
add
sub
pop
rep
push
inc
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jns
mov
mov
add
add
pop
add
add
rclb
addl
add
mov
xchg
add
hlt
movb
add
shll
mov
in
out
test
add
shl
testl
gs
out
xchg
out
lret
mov
in
add
popf
addr16
pop
xor
push
push
call
add
imulb
add
incb
jno
add
add
add
clc
add
popf
add
add
add
add
ja
lcall
ja
add
pop
add
rolb
lret
jl
add
add
mov
add
push
add
cmc
mov
mov
mov
jge
int
mov
lcall
les
add
push
shl
sub
pop
or
je
mov
push
add
pop
add
push
dec
sub
xor
pop
add
push
push
call
add
add
jmp
push
add
js
add
add
imul
into
stc
add
add
add
cld
add
mov
fcompl
add
bnd
in
add
call
sub
pop
rep
push
dec
lea
rol
pop
pop
push
push
inc
not
add
add
push
and
add
not
shl
lea
sub
pop
add
pop
push
ror
pop
pop
push
push
push
lea
push
push
call
cwtd
xchg
pushf
mov
mov
add
add
jo
jl
mov
cmpsl
fisttps
add
faddl
add
jne
add
out
add
fwait
jle
add
in
pop
mov
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
cwtl
out
add
lret
int3
je
push
add
mov
add
js
add
lods
add
loop
add
add
loop
add
stos
out
loope
sub
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
pop
push
add
test
xor
test
jb
stc
cltd
add
jbe
mov
add
add
ret
mov
push
ja
sub
add
add
int3
add
js
leave
test
lcall
add
mov
fdivr
lcall
loopne
push
add
pop
mov
add
push
push
push
lea
push
push
push
push
call
aad
add
jbe
add
enter
add
add
mov
pop
add
sti
stc
aam
fcmovb
add
fbstp
xchg
add
js
popa
mov
pop
sub
pop
push
push
push
push
call
cmc
pop
mov
add
add
pop
jns
fdivr
cmpsb
add
add
cmpb
ljmp
xor
in
hlt
pop
push
push
push
inc
ror
shr
add
pop
push
push
push
push
push
push
push
call
lds
mov
add
lods
mov
pusha
arpl
add
add
add
loopne
mov
add
add
fs
add
add
jno
xchg
mov
mov
jecxz
sub
pop
mov
push
ror
sub
not
pop
pop
push
lea
push
push
lea
push
call
jmp
je
add
add
jecxz
lods
mov
add
arpl
addl
push
push
out
sahf
bound
add
add
loopne
pop
mov
add
add
popf
loope
cli
add
movsb
sub
pop
pop
pop
push
lea
push
push
call
push
out
movsb
add
scas
sarb
add
pop
mov
in
movb
hlt
lods
pop
pop
add
aam
mov
test
mov
jl
add
pop
add
mov
mov
add
in
hlt
lcall
leave
push
push
lea
push
call
add
add
out
loope
add
cwtl
rorl
popf
add
je
add
add
xchg
mov
jge
add
test
sbb
add
or
push
push
push
push
push
push
push
push
push
call
jnp
add
out
out
add
add
add
xchg
clc
addb
lock
shl
add
add
lcall
add
lock
jno
iret
jmp
add
add
add
jae
mov
add
lcall
push
lea
add
dec
pop
mov
push
push
push
lea
push
push
push
call
fdiv
in
add
add
lea
out
nop
jmp
mov
lret
jb
mov
aam
jecxz
mov
mov
nop
test
imul
add
mov
add
push
add
jne
in
stos
hlt
add
add
pop
add
push
shr
shl
sub
pop
push
push
push
xor
sub
inc
xor
pop
push
push
push
push
lea
push
call
add
scas
movsl
scas
mov
add
fildl
jmp
add
lock
std
add
jbe
add
bound
add
xchg
addr16
add
add
fldcw
add
sti
jb
scas
add
mov
ja
add
add
add
sub
pop
push
movl
push
not
pop
addl
push
lea
push
push
push
lea
push
push
call
sahf
into
add
add
add
push
popf
add
add
add
add
xchg
lcall
jle
mov
outsl
int
outsl
add
cli
add
pop
add
add
xchg
add
mov
scas
jb
jo
lret
add
add
add
pop
out
jmp
rolb
idiv
jbe
xchg
popf
add
add
lcall
rorb
or
add
push
shr
pop
mov
push
dec
pop
pop
push
push
lea
push
call
mov
fstpt
add
test
int
mov
sti
add
rcll
pushf
pop
push
fs
ret
sti
xchg
insb
add
js
add
mov
stos
out
add
mov
add
pop
mov
fs
fisubrl
add
xchg
add
lahf
add
sub
pop
pop
pop
push
pop
pop
push
push
push
call
add
add
add
fdivrs
add
add
add
xchg
push
add
add
add
add
xchg
fildl
mov
imul
add
add
mov
in
hlt
lcall
ret
push
push
push
lea
push
lea
push
push
call
jmp
add
jmp
popa
add
hlt
movl
add
pop
cmc
leave
lods
pop
add
test
xchg
cmpsb
test
push
mov
add
add
lea
bound
cmc
add
xchg
mov
rolb
add
sahf
add
mov
jp
sub
pop
push
push
shr
not
shl
pop
mov
add
push
xor
add
pop
push
push
push
push
push
call
jnp
add
std
xchg
push
jl
cld
je
add
add
add
add
fs
jb
add
out
add
lds
stos
out
arpl
mov
xchg
enter
fstpt
jb
add
push
divl
xchg
lock
lret
lock
push
push
inc
pop
push
push
add
add
shr
pop
push
testl
push
sub
not
inc
shr
pop
addl
push
push
rol
lea
pop
call
push
add
xor
pop
mov
pushl
push
push
call
popf
add
add
xchg
add
add
lds
add
mov
add
add
add
lock
add
jmp
test
mov
add
add
ret
add
bound
add
lea
jecxz
mov
sub
pop
push
push
lea
shl
ror
pop
push
push
push
push
push
push
push
call
mov
mov
mov
jns
add
jbe
imulb
mov
mov
cmpsl
dec
stos
nop
add
add
mov
push
jl
lahf
add
add
rolb
out
fwait
add
ja
add
sub
pop
call
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
call
add
imul
add
add
add
xchg
add
add
mov
jmp
push
jae
iret
fldl
mov
int
sub
pop
pop
pop
push
xor
xor
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
lds
faddl
push
fs
jmp
add
add
fiadds
add
lea
add
add
add
push
add
iret
add
add
lods
lcall
in
fcomps
leave
push
push
push
push
call
mov
add
mov
out
add
mov
popf
cmpsb
mov
rolb
clc
add
add
add
add
imul
add
pop
mov
add
push
arpl
pop
pusha
rcrb
fwait
jo
xchg
std
sub
pop
ret
push
lea
push
push
call
lds
insb
add
cmpsb
iret
push
mov
lret
mov
push
outsl
addr16
add
add
mov
add
add
add
enter
xchg
outsl
jae
in
hlt
lcall
mov
push
not
sub
shl
pop
add
push
push
add
xor
sub
pop
push
push
push
push
call
add
cld
mov
add
movsl
bound
out
add
aam
pop
add
xchg
in
jns
in
clc
lcall
push
push
push
call
pop
mov
cli
add
lret
jno
xchg
add
cld
add
mov
xchg
test
mov
add
subb
add
stc
rcr
pop
sti
lds
add
repnz
xlat
add
lea
mov
in
hlt
lcall
inc
cld
or
add
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
ja
movb
add
xchg
shll
aad
add
mov
outsl
jmp
xchg
sub
add
add
cli
mov
in
fcomps
add
ret
dec
fcmovb
ljmp
ret
cli
pop
call
push
push
push
lea
push
push
push
call
mov
pop
lods
add
add
push
mov
in
into
loope
add
jo
in
cwtl
add
mov
test
ljmp
add
add
pop
add
mov
push
sahf
lret
add
pop
jae
add
lock
sbb
add
jae
mov
add
jecxz
fsubr
shl
add
ficoml
in
in
pop
call
push
not
shr
add
ror
pop
subl
push
push
push
lea
push
lea
push
call
cmpsb
jo
loope
jns
scas
sub
outsl
addr16
jge
add
add
add
add
push
sti
ljmp
add
mov
out
addb
mov
add
lcall
jge
add
test
call
pop
pop
push
sub
sub
add
pop
pop
push
shr
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
call
jl
add
add
xchg
add
leave
jecxz
int3
add
fwait
push
add
test
add
iret
sarl
pop
add
add
movl
rol
add
in
pusha
mov
jno
mov
popa
add
add
ror
add
push
js
add
loope
jne
js
popa
push
call
in
loopne
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
insb
cld
ljmp
mov
mov
add
add
test
cmpsb
in
add
pop
xor
xchg
push
add
lcall
push
inc
inc
shr
pop
ret
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
jns
stos
test
mov
add
mov
mov
jge
add
mov
pop
push
jb
add
pusha
add
lret
mov
jns
xchg
mov
push
add
mov
add
test
add
sub
pop
mov
push
lea
push
push
lea
push
push
call
add
test
arpl
push
add
add
jnp
out
ror
pop
xchg
add
add
add
add
loop
js
xorb
ljmp
add
jb
add
lcall
cld
push
push
push
push
lea
push
push
push
push
call
add
push
add
ret
loopne
add
add
add
repnz
add
jne
cltd
lahf
mov
movsl
out
mov
fwait
add
aad
mov
cltd
fcomps
iret
call
pop
push
add
add
mov
in
loopne
push
push
push
push
push
push
call
jb
mov
jne
stc
fsub
aam
xchg
cltd
add
pop
lret
add
mov
jge
cmpsb
add
std
popf
lods
add
pop
add
add
pop
popl
add
add
cmpsl
jb
add
push
fwait
push
mov
cwtl
popa
add
in
nop
xchg
add
add
push
add
sub
pop
push
push
push
push
push
push
push
push
call
add
cli
pushf
pop
push
jo
pushf
in
cmc
add
add
jge
mov
push
add
add
xchg
add
add
add
sub
add
add
aad
add
mov
shl
fwait
add
lret
add
cmpsb
mov
hlt
add
mov
gs
add
int3
sub
pop
push
push
push
push
or
inc
add
sub
lea
sub
lea
ror
pop
shr
lea
sub
pop
push
ror
pop
pushl
push
dec
pop
call
call
push
push
lea
shr
add
add
push
and
add
shl
sub
sub
ror
add
shl
pop
inc
pop
push
xor
not
shr
pop
pushl
call
push
lea
add
xor
pop
call
push
push
rol
dec
push
or
inc
add
rol
sub
sub
rol
ror
sub
pop
sub
not
pop
push
push
push
call
add
loopne
xchg
movsl
add
mov
out
add
add
loope
add
push
add
enter
push
add
push
fsub
add
add
add
pop
pushl
push
lea
push
push
push
lea
push
push
call
add
add
push
add
push
je
nop
pop
cmpsb
lea
shr
add
add
add
add
add
push
add
addl
fs
add
add
add
add
nop
sbb
add
pop
add
in
call
call
push
push
push
push
push
push
call
push
add
test
mov
lods
out
add
pop
adcb
add
push
lock
add
add
stos
add
lods
jmp
xchg
push
pop
add
std
imul
mov
push
sub
pop
call
push
push
xor
sub
lea
rol
push
xor
add
sub
sub
lea
lea
pop
not
pop
push
push
push
push
push
call
add
add
pop
roll
add
xchg
add
add
push
add
add
pop
add
ja
push
pusha
add
pop
mov
je
gs
incb
add
fadds
add
jmp
add
xchg
in
lcall
jne
push
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
add
int
add
mov
add
push
add
mov
popf
add
push
mov
add
pop
pop
test
add
add
add
pop
xchg
add
add
jo
outsl
lock
mov
in
cmc
mov
push
test
add
in
fcomps
rclb
aam
mov
push
push
push
push
push
push
call
fldl
int3
push
add
fidivs
add
cmc
pushf
incb
mov
add
pop
add
add
fldl
cmc
add
push
sti
stos
scas
pop
push
mov
cli
mov
mov
in
call
lea
sub
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
lods
pop
out
ja
jnp
jne
std
in
add
popa
sarb
std
add
add
sahf
fisubrl
add
lret
xchg
mov
cli
add
jl
add
pop
add
mov
add
add
xchg
jle
push
movsb
jns
push
iret
add
mov
fcomps
add
out
aad
repz
shr
push
rol
pop
add
push
inc
not
shl
pop
mov
mov
push
lea
push
call
mov
add
popa
xchg
mov
add
add
xor
jmp
loopne
push
lcall
mov
push
xchg
jns
cltd
sub
pop
add
add
push
not
pop
mov
mov
push
push
push
lea
push
call
pop
jne
add
push
add
add
add
add
push
lods
add
mov
add
xchg
add
push
ficoms
lock
lcall
pop
outsl
jne
cmp
jne
push
push
lea
push
push
push
call
rclb
outsl
out
repnz
test
add
add
add
shr
add
lock
mov
push
sub
add
rol
sub
pop
movl
jmp
push
sub
lea
dec
pop
mov
mov
push
dec
xor
pop
sub
jne
push
lea
push
push
push
push
lea
push
push
call
cli
imul
arpl
jo
test
add
add
scas
add
repnz
mov
lcall
inc
adc
fstl
or
add
add
push
movsb
add
xchg
mov
sti
jge
xchg
divb
mov
into
out
mov
add
nop
aam
mov
add
addr16
mov
in
push
lds
add
nop
add
add
add
jecxz
add
enter
add
xchg
aam
bound
add
in
lock
lcall
add
add
jmp
push
add
rol
add
pop
mov
mov
push
push
lea
push
call
mov
iret
add
mov
mov
shl
test
add
xchg
stos
mov
add
add
mov
xchg
sub
pop
cmp
jne
mov
push
inc
add
pop
movl
push
push
push
call
mov
in
mov
add
out
stos
mov
jecxz
mov
int3
add
test
pop
pop
scas
jno
mov
leave
add
loope
push
add
call
add
jl
push
add
pop
ja
sti
data16
add
add
test
add
fdiv
vpshufb
mov
jmp
add
jb
mov
add
add
hlt
add
outsl
sub
pop
jmp
push
add
add
pop
mov
push
shl
xor
add
pop
cmpw
jne
push
shr
inc
add
pop
mov
push
shr
pop
movl
push
push
push
push
lea
push
push
call
add
add
imul
add
lods
add
hlt
add
jmp
mov
jno
jmp
push
cltd
add
call
jmp
push
lea
push
push
push
push
push
push
push
call
pop
addl
fwait
add
add
add
mov
add
jns
jbe
jge
add
int
add
mul
ret
popa
add
adcb
add
jno
in
add
cli
jp
xchg
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
push
add
enter
mov
data16
leave
pop
xchg
xchg
je
push
hlt
mov
lods
add
pop
flds
add
call
add
add
add
lods
scas
mov
pop
mov
push
push
push
push
lea
push
call
les
add
add
add
add
xchg
pop
mov
add
in
movsl
mov
add
push
xchg
jge
fcmovu
add
loopne
add
add
lahf
mov
in
add
in
je
mov
add
jmp
mov
nop
push
add
xchg
repnz
out
in
in
pop
mov
mov
push
push
rol
shr
push
xor
add
shl
not
sub
lea
shr
pop
xor
pop
push
lea
push
push
call
lods
mov
xchg
mov
xlat
add
add
add
xchg
insb
add
mov
add
mov
jnp
mov
add
add
loop
mov
lods
mov
xlat
cld
addl
add
fiadds
push
lret
push
mov
mov
xchg
mov
lcall
push
sub
pop
call
push
push
lea
push
lea
push
push
push
call
xchg
xchg
jle
sti
add
add
lds
xor
lds
mov
add
add
add
add
add
int
add
jl
in
loope
mov
imul
std
out
bound
mov
add
push
mov
stc
imul
sub
pop
cmpl
je
push
push
push
and
add
dec
sub
shl
inc
sub
sub
pop
shr
shr
pop
push
sub
lea
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
sahf
roll
pop
leave
add
out
clc
les
clc
add
jae
mov
mov
mov
add
jge
add
js
data16
fldl
add
cld
add
call
push
add
pop
cmpl
je
push
push
sub
push
sub
add
dec
shr
sub
shr
sub
shr
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
pop
add
lcall
push
rclb
les
add
add
add
fnstcw
clc
mov
add
add
imul
popa
call
insb
jbe
xchg
test
out
add
popa
enter
push
movsb
sub
pop
push
push
push
push
call
add
enter
jae
add
lahf
js
fsubrs
lea
loopne
test
mov
ljmp
gs
add
add
flds
lods
lcall
add
add
arpl
xchg
sarb
cltd
pop
nop
sub
pop
call
push
push
push
call
testb
add
mov
add
imul
clc
add
add
aad
add
mov
push
sbbb
add
sbbb
add
jnp
in
add
stc
add
add
js
mov
in
add
cmp
rol
je
push
push
add
sub
push
or
not
add
ror
shr
rol
ror
sub
rol
not
pop
pop
push
dec
sub
ror
pop
push
push
push
push
push
push
call
aad
add
add
pushf
faddl
imul
add
add
add
sahf
pop
xchg
add
flds
xchg
jge
mov
push
pop
enter
stc
jb
popa
fcoml
in
push
xchg
add
sahf
bound
mov
push
add
pop
add
add
aad
mov
in
in
lcall
enter
push
push
push
call
std
jbe
gs
add
fwait
movsb
add
add
test
xchg
cmpsb
add
lods
add
add
xchg
add
add
sub
pop
cmpl
je
push
push
add
dec
xor
push
xor
add
ror
sub
rol
pop
add
pop
push
dec
inc
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
jae
ficoms
in
add
fwait
add
leave
out
lret
pop
outsl
shrl
push
lea
loop
add
add
rorl
add
add
add
add
enter
cmpsb
xorb
fcomps
lret
add
push
add
rol
dec
pop
cmpl
je
push
push
sub
sub
push
xor
add
add
shr
shl
sub
add
shl
pop
sub
ror
xor
pop
push
push
lea
push
push
call
outsl
cltd
add
add
jbe
loope
out
add
pop
mov
add
jne
add
call
add
sar
jb
mov
lock
push
call
push
lea
push
push
push
push
push
push
push
call
fiaddl
jmp
mov
mov
mov
mov
les
mov
shlb
mov
movsl
fiadds
lahf
add
jb
xchg
call
aad
xlat
add
add
cmp
pop
fdivl
scas
add
add
fbstp
pop
cmpl
je
push
push
push
xor
add
sub
shl
sub
shl
ror
lea
pop
sub
add
pop
push
ror
lea
xor
shr
pop
push
push
xor
not
pop
call
push
lea
push
push
push
push
call
xchg
lods
add
fucomip
add
lock
mov
rcr
add
add
sahf
jp
ficoml
into
add
clc
mov
add
add
add
add
call
sub
pop
cmpl
jne
push
pop
mov
push
ror
add
dec
pop
movl
jmp
push
xor
lea
add
rol
pop
xor
push
push
push
push
push
push
push
lea
push
call
sti
add
jl
add
jecxz
add
push
xchg
aam
add
add
mov
jp
hlt
add
add
add
arpl
pushf
fsubr
xchg
pop
add
mov
mul
pop
mov
add
imul
lcall
pop
push
push
call
add
xchg
add
je
int3
ret
add
mov
mov
mov
std
mov
add
mov
xlat
mov
add
mov
add
int3
add
in
cmpsl
loope
lahf
mov
add
push
cltd
add
add
lea
in
clc
pop
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
mov
jb
fsubs
shr
iret
add
icebp
add
pusha
add
je
stos
sub
std
push
pop
pop
add
add
cmpsb
jb
cli
push
lcall
cmpsl
out
mov
add
int3
add
push
rcll
add
add
add
xchg
jecxz
push
aam
in
loopne
lcall
ret
push
lea
push
push
push
call
add
mov
mov
jnp
bound
add
leave
pop
add
gs
add
out
test
add
hlt
push
nop
add
int
xchg
fiaddl
add
movsl
add
pop
add
mov
in
lock
lcall
push
pop
mov
add
push
xor
pop
cmpl
jne
push
push
not
rol
sub
not
push
or
inc
add
add
sub
add
sub
pop
shl
pop
push
push
push
push
lea
push
call
mov
aam
les
add
add
cwtl
clc
fiaddl
add
pop
mov
add
add
out
add
add
add
add
add
add
add
je
loopne
add
pushf
sub
pop
pushl
push
push
call
add
add
cmpsb
iret
add
add
add
fistl
xchg
scas
add
les
add
lret
test
fildll
xchg
add
add
add
mov
sub
pop
call
push
push
dec
pop
call
push
lea
push
push
push
push
push
call
mov
xchg
loop
fbld
mov
lea
movb
add
flds
add
add
xchg
stos
add
movsb
mov
mov
add
jns
lcall
hlt
add
add
cltd
mov
push
add
lcall
xor
add
test
add
add
xor
pop
mov
push
shr
shr
shl
pop
call
ret
push
push
lea
push
push
call
jmp
fstpt
xlat
test
add
mov
mov
xchg
push
pop
movsb
in
mov
pop
not
jb
mov
push
filds
xlat
mov
mov
xchg
jp
jno
add
xchg
in
nop
movsb
mov
add
xchg
pop
imul
bound
lock
imul
add
jmp
stos
add
lea
add
push
push
lea
push
call
add
jno
stos
lahf
shl
int
add
add
in
add
enterw
pop
data16
add
fdiv
sti
test
add
add
add
out
add
add
add
test
add
loope
in
add
pop
cmpl
jne
push
push
dec
rol
dec
push
or
not
add
sub
sub
lea
sub
pop
shl
pop
push
shr
shr
pop
pushl
push
inc
pop
call
push
push
dec
add
add
pop
call
jmp
push
not
inc
not
sub
pop
cmpl
je
cmpl
jne
push
ror
pop
mov
push
dec
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
mov
ljmp
add
jl
js
addl
add
jecxz
jl
mov
add
xchg
push
add
mov
mov
pop
jno
lret
mov
lods
add
jl
add
lret
mul
mov
ret
push
push
dec
sub
add
push
or
not
add
sub
not
xor
pop
inc
sub
pop
push
push
push
lea
push
call
clc
in
pop
les
jl
add
gs
addl
push
push
add
movl
ljmp
out
add
mov
add
clc
cltd
xchg
add
add
mov
add
mov
push
lods
cmc
add
lcall
jne
push
push
push
push
push
push
lea
push
push
push
call
sti
jns
add
add
add
lcall
je
add
add
movb
bound
add
call
add
add
lcall
into
add
push
sub
pop
call
push
push
ror
add
add
push
or
not
add
sub
sub
shr
sub
pop
sub
sub
not
pop
push
xor
pop
pushl
push
push
lea
push
push
push
push
push
push
call
movb
mov
add
pop
add
lock
test
pop
fstpt
in
xlat
data16
lret
test
pusha
add
pop
add
add
add
add
add
xchg
push
repnz
pop
call
push
lea
push
call
mov
in
mov
sahf
add
flds
add
add
cwtl
stos
add
mov
sub
pop
call
push
push
push
sub
add
xor
add
add
shr
sub
sub
sub
pop
dec
shr
add
pop
push
push
push
lea
push
push
lea
push
push
call
add
add
jecxz
add
mov
add
add
fs
jnp
sahf
rolb
rolb
into
xchg
fiadds
clc
ljmp
add
add
cmpsb
out
jb
jnp
out
lds
fdiv
movsl
add
lea
fmull
testl
mov
pop
pushl
call
push
push
push
push
lea
push
call
add
jle
add
add
fiaddl
mov
test
mov
out
jb
jmp
xchg
jbe
add
add
push
mov
add
repnz
add
add
lcall
shrb
daa
pop
dec
push
shl
push
sub
add
lea
add
add
sub
add
pop
shl
dec
pop
push
sub
add
pop
pushl
push
pop
call
push
inc
not
shr
pop
call
push
push
lea
xor
shl
push
sub
add
add
sub
shl
pop
sub
rol
pop
push
push
push
call
addl
je
add
test
lret
stos
add
add
add
iret
jns
cmpsl
pushf
add
hlt
test
lret
add
pop
xchg
lods
ja
in
mov
out
xchg
add
cwtl
flds
sub
pop
pushl
push
sub
dec
pop
call
push
push
lea
push
call
add
jae
enter
ja
add
bound
scas
add
add
add
cltd
add
add
xorb
cltd
loop
cmc
mov
lods
fdivrs
add
add
add
rorl
loop
in
mov
je
mov
push
scas
outsl
pop
jmp
add
sub
pop
call
push
push
add
inc
add
push
sub
add
shr
sub
rol
sub
shr
pop
add
sub
lea
pop
push
lea
push
push
push
push
call
add
enter
pushf
add
add
stos
mov
mov
add
in
in
cmpsl
mov
mov
add
add
jmp
add
xchg
call
nop
push
add
fists
add
jle
add
hlt
stos
cmc
jne
bound
add
xchg
loope
popf
sub
pop
pushl
push
not
inc
rol
pop
call
push
xor
add
pop
call
push
push
not
shr
add
push
and
add
lea
sub
shl
rol
pop
add
pop
push
lea
push
call
jecxz
add
pop
scas
xchg
lock
xchg
add
add
push
call
repnz
push
add
add
test
fildl
clc
cltd
jbe
add
add
jmp
test
pop
jp
in
add
add
test
in
clc
lcall
jne
call
push
xor
sub
pop
call
push
push
xor
add
push
or
not
add
rol
sub
inc
dec
pop
dec
xor
xor
pop
push
shr
pop
pushl
call
push
inc
dec
lea
not
pop
call
push
push
lea
sub
push
push
pop
add
sub
shl
add
pop
xor
xor
sub
pop
push
lea
push
call
add
stos
lret
lcall
movsb
lock
lods
mov
push
add
add
add
iret
shlb
movsl
add
add
loope
xchg
add
sub
pop
pushl
push
ror
pop
call
push
push
push
push
call
fildl
aam
mov
clc
loopne
clc
mov
movsb
int
and
scas
fcmovu
mov
add
add
add
cmc
jmp
mov
jge
add
movsl
movsb
add
leave
add
mov
jl
push
push
pop
je
add
add
in
add
imulb
in
lock
call
push
push
rol
shl
sub
push
or
not
add
xor
sub
not
lea
sub
add
pop
shl
sub
pop
push
sub
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
xchg
fwait
mov
add
add
add
mov
add
movl
add
add
add
cltd
imul
gs
icebp
jp
add
call
icebp
add
push
lock
sub
pop
call
push
shr
pop
lea
push
push
push
lea
push
lea
push
push
push
push
push
push
call
je
cli
mov
add
add
add
pop
jl
js
cmpsl
add
jno
addl
nop
add
add
mov
je
add
popa
outsl
sub
pop
call
push
push
shr
ror
sub
push
sub
add
sub
dec
rol
sub
xor
not
dec
pop
shr
not
pop
push
rol
dec
pop
pushl
call
push
rol
ror
sub
pop
call
push
push
rol
ror
push
or
not
add
shl
sub
xor
shr
dec
add
pop
pop
push
lea
push
lea
push
lea
push
push
call
jno
add
xlat
add
add
add
popf
add
push
jae
fnsave
int
mov
mull
shlb
rclb
roll
leave
mov
add
int3
xchg
add
add
stc
xchg
mov
cli
add
add
jo
push
sub
pop
pushl
push
pop
call
push
push
call
outsl
fwait
call
add
add
add
int
loopne
add
fcmove
imul
add
add
lods
movsb
add
stos
out
fldenv
add
ljmp
mov
mov
add
fadds
add
sub
pop
call
push
push
xor
xor
shl
push
xor
add
shl
ror
sub
add
lea
pop
shr
dec
pop
push
push
call
fcmovbe
shlw
mov
cltd
add
add
fwait
sarb
cmpsb
mov
xchg
xchg
xchg
scas
xchg
jae
movsl
add
add
push
movsl
add
jmp
insb
in
add
add
push
mov
add
rolb
stos
mov
mov
fsubrp
shll
mov
clc
pop
pushl
push
sub
pop
call
push
pop
call
push
push
lea
push
xor
add
dec
not
sub
shl
shl
not
ror
pop
not
shl
sub
shr
pop
push
push
push
push
push
call
mov
int
add
pop
movsl
mov
test
add
add
lahf
sti
in
add
jae
cmc
sub
pop
pushl
push
sub
dec
pop
call
push
push
shr
push
sub
add
inc
xor
add
sub
add
pop
lea
ror
lea
pop
push
push
xor
sub
sub
push
sub
add
sub
sub
pop
shl
add
pop
push
push
push
push
push
push
call
push
js
push
add
mov
hlt
add
lds
iret
add
mov
add
mov
add
add
rcl
hlt
scas
push
aad
xchg
add
addb
vmulss
add
pop
mov
test
xchg
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
rolb
stc
icebp
add
testl
mov
add
cltd
pop
mov
imul
cmpsl
add
xchg
add
add
or
sub
pop
pop
push
lea
push
push
call
add
loop
add
push
add
push
add
addl
push
mov
add
cmpsl
outsl
test
add
insb
mov
lods
add
add
out
gs
pop
fwait
xchg
add
jo
mov
fsub
add
sub
pop
dec
jne
push
push
sub
push
xor
add
dec
shr
sub
sub
dec
not
pop
lea
dec
lea
pop
push
rol
rol
rol
pop
pushl
push
shl
pop
call
push
push
push
push
push
push
lea
push
push
call
add
ror
xlat
incb
push
add
ljmp
andb
ljmp
scas
mov
cmpsb
add
mov
scas
add
in
add
pop
add
mov
scas
lret
lret
add
jbe
int3
fldl
add
add
iret
ret
add
in
add
inc
hlt
push
lea
push
push
push
call
xchg
test
fcmovne
leave
fiadds
stos
add
add
pop
add
add
push
fcompl
mov
add
lock
lea
push
push
sub
push
or
inc
add
add
sub
xor
inc
sub
rol
rol
shr
shl
pop
sub
lea
xor
pop
push
lea
push
push
push
push
push
call
add
int
pop
data16
add
mov
pop
xchg
jno
rolb
add
stos
loope
push
jl
add
std
push
add
xchg
mov
stc
loop
add
stos
add
nop
mov
jbe
mov
pushf
arpl
add
cmpsb
push
cmpsl
enter
sub
pop
pushl
push
push
lea
push
push
push
lea
push
call
fldcw
movl
out
push
mov
loopne
add
scas
notb
je
push
int3
ret
in
add
icebp
hlt
mov
pop
add
add
xchg
sti
movsl
xchg
call
push
inc
sub
dec
dec
pop
lea
push
push
call
pop
loope
loope
loopne
stos
out
popa
fldl
repnz
imul
lock
cmpsl
cli
jecxz
add
mov
imul
sub
pop
push
push
dec
dec
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
into
fiaddl
add
arpl
hlt
add
stos
add
add
stos
add
add
add
test
add
iret
add
imul
rorb
scas
add
push
add
pop
pushl
push
push
sub
not
push
push
pop
add
xor
add
shl
sub
shr
sub
sub
pop
lea
dec
add
pop
push
lea
push
lea
push
call
roll
add
popl
pop
bound
fnstenv
aam
add
enter
jge
add
into
ficoms
add
push
int3
repnz
add
mov
mov
lock
sub
pop
push
push
add
sub
pop
call
push
rol
dec
add
pop
call
mov
push
push
push
push
push
push
push
call
add
add
add
lret
mov
mov
pop
rolb
scas
test
sarb
mov
add
rcll
add
sti
lret
add
xorb
shrb
xchg
sub
pop
lea
push
push
add
ror
push
xor
add
add
sub
pop
xor
xor
pop
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
mov
jno
add
add
jb
add
imulb
add
in
add
jp
add
pop
mov
add
in
cmpsb
add
scas
jle
jl
add
mov
stc
add
add
ljmp
lcall
jne
push
push
push
lea
push
push
push
push
call
pop
add
rcrb
push
mov
mov
xchg
jge
add
loop
mov
jno
add
xchg
sahf
add
cwtl
add
add
mov
add
sti
mov
mov
and
sub
pop
call
push
sub
pop
push
call
push
push
dec
rol
push
push
pop
add
shr
lea
sub
sub
add
shl
pop
shl
lea
pop
push
ror
sub
lea
pop
pushl
push
push
push
lea
push
push
push
call
lret
push
add
mov
mov
lock
push
mov
fiadds
jl
add
push
jle
fldcw
mov
xorl
add
add
add
add
add
add
add
call
add
call
push
push
push
push
push
push
push
call
mov
mov
push
stos
outsl
add
test
cld
test
add
add
movb
sti
add
testb
add
add
add
cmpb
add
ja
sar
std
rolb
scas
enter
test
test
jo
les
out
repnz
fsubl
add
in
in
lcall
inc
cld
push
sub
not
add
pop
lea
push
push
inc
shr
xor
push
or
not
add
sub
sub
pop
sub
add
pop
push
inc
pop
pushl
call
push
lea
shr
pop
lea
push
lea
push
call
pop
stos
push
popa
sar
aad
push
add
add
add
mov
mov
push
stc
add
addb
add
aam
xchg
in
push
mov
add
std
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
push
push
into
lock
add
test
push
mov
mov
add
fwait
add
xchg
mov
push
add
shr
add
lcall
fcompl
add
loope
pop
push
push
lea
push
call
add
hlt
testb
in
add
cmpl
mov
mov
ffreep
test
xchg
jp
add
clc
pop
pushl
push
push
sub
push
sub
add
dec
sub
add
pop
shl
rol
add
pop
push
lea
push
push
push
push
call
mov
add
pushf
jno
popa
rcll
add
pusha
mov
jne
add
sahf
ljmp
add
add
aad
add
bnd
mov
int
pop
add
jl
jecxz
cmpsl
add
fldl
mov
jl
mov
ficompl
in
in
pop
push
push
sub
pop
call
push
push
inc
push
push
pop
add
shr
shr
sub
shl
pop
not
pop
push
push
push
push
call
add
mov
add
test
add
stos
out
clc
lock
pop
add
add
add
lock
cltd
add
stos
cwtl
sub
pop
pushl
push
lea
rol
add
pop
call
push
push
push
call
pop
mov
add
jns
mov
add
jo
in
js
roll
int3
leave
add
add
add
xchg
gs
negb
add
call
lcall
mov
add
push
xchg
push
add
add
in
add
lcall
shrb
mov
lea
sti
rol
push
and
add
lea
add
sub
ror
shr
pop
lea
ror
not
pop
push
push
call
rcl
push
je
mov
and
jns
ja
mov
add
outsl
pop
ljmp
out
cmc
cltd
stos
add
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
scas
popf
sti
fstpt
push
add
add
mov
add
push
pop
xchg
push
cmpsb
mov
pop
mov
xchg
hlt
enter
lcall
push
cmpsl
popl
xor
add
add
add
adcb
add
pop
adc
add
pop
call
push
dec
xor
pop
pushl
push
push
lea
push
push
push
push
call
add
push
fdivrs
xchg
add
pop
xchg
lahf
xchg
jb
mov
lds
add
add
fsubl
add
mov
add
add
popa
xchg
add
jo
add
in
add
jbe
add
jns
in
lret
fucompp
outsl
add
add
lcall
mov
jmp
push
push
not
push
sub
add
rol
xor
add
ror
sub
not
dec
pop
ror
pop
push
shr
sub
pop
pushl
push
push
push
push
push
push
push
push
call
ljmp
add
add
add
add
push
bound
sahf
lret
out
add
add
mov
mov
fisubrs
push
data16
add
add
add
add
lcall
adc
add
rolb
push
push
push
push
lea
push
push
call
mov
add
add
add
add
push
jp
int3
call
imul
add
mov
add
xchg
lods
loopne
add
add
pop
add
pop
out
jo
sub
pop
call
push
push
rol
sub
add
push
xor
add
add
not
inc
sub
sub
pop
sub
pop
push
lea
push
lea
push
push
push
push
call
jo
add
jno
clc
roll
int
mov
add
lahf
in
jb
add
mov
pusha
loope
fildl
mov
ja
lret
ja
stos
iret
xchg
lret
add
add
add
call
mov
push
sti
aam
mov
pusha
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
xchg
cmc
jo
fcmovnu
out
imul
push
add
mov
add
push
add
movsb
incb
lahf
add
pushf
xor
jb
insb
add
add
mov
add
push
shll
lock
jno
repnz
push
out
stc
rol
test
mov
mov
add
jmp
pop
call
push
push
push
push
push
push
push
call
pop
add
movsl
add
add
pop
xchg
xchg
mov
add
xchg
mov
jo
add
filds
out
xchg
and
push
jbe
xchg
pop
lcall
add
add
add
scas
roll
push
lods
add
lock
jae
cld
add
pop
iret
mov
in
in
lcall
call
push
lea
push
push
push
call
fadds
add
add
cmpsb
xchg
rorb
out
add
add
push
lcall
loope
push
jnp
add
add
clc
add
lock
fimuls
mov
xchg
jo
insb
incb
mov
jecxz
pop
popa
sub
pop
leave
add
push
lea
push
push
push
lea
push
push
push
call
xor
mov
xchg
add
add
add
push
cmpsb
add
add
add
imul
add
outsl
pop
addb
mov
int3
add
flds
sub
pop
pop
push
xor
pop
pop
pop
push
push
push
push
call
add
add
add
add
mov
cli
shl
rorb
mov
add
xchg
add
movsl
jmp
loop
mov
pop
add
add
add
add
add
mov
cli
add
stc
loope
cmp
stos
add
repnz
pop
xor
push
inc
not
pop
inc
push
push
push
push
push
push
push
push
push
push
call
add
mov
in
add
aam
ljmp
mov
add
lea
insb
add
cmc
fisttpll
fsub
popl
add
pop
ret
push
add
not
ror
pop
leave
push
push
lea
push
push
push
push
lea
push
push
call
fstpt
faddp
mov
add
add
fildl
stos
add
js
mov
shlb
pusha
add
push
lods
scas
push
add
add
lahf
mov
loop
xchg
call
stc
jno
fdivr
stos
lds
add
nop
mov
add
add
iret
mov
sub
pop
ret
push
lea
push
push
push
push
push
call
test
push
lock
fadds
fiaddl
add
mov
jae
outsl
jge
arpl
xchg
fistpll
pop
gs
add
add
jmp
xchg
aad
add
push
mov
push
lea
push
push
push
call
add
xchg
jns
add
scas
add
mov
lret
add
push
add
add
add
add
stos
fisubrs
in
jnp
roll
sahf
cli
mov
add
add
pop
add
outsl
pop
add
add
aad
push
je
pop
sub
pop
cmpl
jne
push
ror
pop
mov
jmp
push
sub
not
pop
mov
push
sub
rol
pop
and
push
rol
pop
xor
push
pop
xor
push
rol
ror
rol
pop
add
push
lea
sub
not
pop
xor
push
lea
pop
dec
sub
push
shl
shr
rol
dec
pop
jmp
push
sub
inc
pop
sub
push
push
push
call
testb
jns
out
add
out
add
xchg
add
fwait
xchg
scas
add
pusha
push
add
jl
popf
add
mov
test
add
int
mov
lcall
add
add
lods
add
testl
xchg
add
movsl
add
rolb
mov
sub
pop
pushl
push
push
call
add
add
testb
add
mov
jno
jb
add
out
aam
add
add
add
add
add
rcr
add
push
add
add
jns
add
mov
add
add
add
not
add
sti
add
sub
pop
pop
sub
push
lea
add
shr
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
int3
cli
jo
int
add
add
add
jne
add
cltd
in
mov
add
add
add
sub
pop
lea
sub
push
push
push
lea
push
push
lea
push
call
add
jl
push
mov
add
add
cltd
add
add
mov
int
add
mov
add
imul
add
ja
mov
popa
push
jmp
lahf
jmp
mov
add
fnsave
add
add
add
lcall
or
jmp
shl
pop
add
push
ror
pop
sub
push
push
push
push
push
push
push
lea
push
call
mov
cwtl
xchg
addl
add
fiadds
fsubrs
clc
mov
mov
add
jle
ja
add
pop
lahf
pushf
add
addr16
in
add
test
add
add
nop
mov
bnd
mov
ja
stos
add
lods
add
lcall
xor
push
push
call
add
add
mul
push
mov
pop
test
mov
push
pop
arpl
pop
add
hlt
mov
mov
jecxz
out
add
add
shr
push
push
call
mov
add
cmpsb
add
add
in
push
mov
add
add
jmp
add
scas
add
add
add
stos
jl
push
bound
add
jl
sub
pop
and
push
rol
rol
pop
sub
push
ror
rol
inc
lea
pop
cmp
jne
push
xor
pop
leave
ret
push
shl
rol
shr
pop
push
push
not
lea
pop
mov
add
push
push
call
sti
add
loope
add
cltd
add
add
add
call
scas
xchg
pop
ja
add
jl
in
in
clc
lcall
push
push
push
lea
push
call
movb
scas
add
sahf
add
roll
jl
add
mov
stos
rolb
pop
mov
add
pop
outsl
add
add
xchg
stos
cwtl
loope
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
test
out
pusha
lds
add
in
fwait
xlat
mov
push
add
add
in
add
neg
lret
fcomi
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
lcall
test
xchg
mov
add
add
aad
lods
jecxz
add
call
fcomps
test
add
add
xchg
push
add
sahf
mov
xchg
add
xchg
mov
popf
add
add
jae
jle
test
add
mov
xchg
push
add
ror
inc
inc
pop
mov
lea
push
push
push
call
mov
add
lret
cmc
int3
and
pop
add
test
pop
aam
add
sarb
add
mov
faddl
stc
mov
enter
vcvtdq2pd
add
push
into
add
add
add
add
or
popl
rcl
add
add
lahf
push
add
sub
pop
sub
mov
push
dec
inc
shl
shr
pop
shr
push
push
lea
push
push
push
push
push
push
call
mov
add
testl
rolb
test
jmp
lcall
mov
xchg
add
mov
add
add
push
xlat
aam
lds
nop
add
xchg
fiadds
fs
mov
lea
add
in
loopne
lcall
fimull
add
or
sub
add
add
add
add
xchg
lea
add
bnd
add
out
add
movl
mul
add
lcall
pop
or
xchg
push
push
push
push
push
push
push
call
pop
add
add
add
loop
enter
add
incb
in
add
movb
xlat
shl
mov
arpl
test
out
push
sub
pop
mov
push
pop
add
xor
push
shr
pop
mov
push
sub
pop
and
push
push
push
lea
push
push
lea
push
lea
push
push
call
jbe
lock
pop
scas
xchg
mov
jmp
add
mov
pop
add
add
add
add
fiadds
add
add
add
lcall
loopne
lcall
rolb
mov
xor
in
sbb
jae
inc
lcall
add
add
movsb
add
add
fdiv
out
add
add
add
xchg
cwtl
filds
add
add
jp
add
add
push
add
add
mov
add
add
add
jo
add
in
add
sub
pop
xor
push
push
push
push
push
push
call
in
rorb
add
add
add
add
pop
loop
add
xchg
mov
mov
repnz
imul
add
mov
mov
add
cmpb
jne
push
sub
sub
not
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
aam
add
add
rorl
add
fimull
add
add
mov
test
stos
call
xchg
fadds
sub
pop
cmp
je
push
inc
pop
add
push
push
push
call
into
sahf
jae
popfw
aad
stos
movsb
add
stc
roll
add
jecxz
iret
jmp
add
add
loopne
test
add
add
jle
push
push
bound
pop
call
popf
add
xchg
clc
add
add
cmpl
jne
xor
push
shr
sub
dec
pop
pop
push
add
pop
pop
push
add
pop
pop
push
push
lea
push
push
push
push
push
push
call
add
test
pop
pop
sahf
addl
leave
jne
add
jns
push
hlt
jp
add
add
add
add
sahf
push
arpl
mov
add
in
xchg
add
popa
mov
add
add
leave
lds
andb
test
add
out
mov
int3
add
lahf
lret
add
mov
in
loopne
pop
push
sub
dec
pop
pop
leave
push
push
push
push
push
lea
push
push
call
push
add
in
push
roll
lock
mov
add
int3
jns
mov
repnz
call
add
mov
jmp
loopne
add
icebp
movsl
popf
add
aam
js
add
push
xchg
add
add
xchg
pop
add
test
pop
fadds
add
roll
or
push
push
push
push
call
add
movsb
pop
fwait
add
in
add
mov
call
mov
mov
mov
loopne
add
loop
add
add
in
int
mov
add
mov
add
int
add
add
add
cld
into
sub
pop
mov
add
push
push
push
lea
push
push
push
call
mov
add
xchg
jo
push
in
incb
add
mov
mov
add
mov
add
repnz
gs
popa
mov
push
aam
nop
cld
mov
mov
mov
hlt
add
stos
add
add
push
jl
xor
add
add
add
sub
pop
mov
push
push
push
push
lea
push
call
aad
jbe
mov
add
add
add
int
xchg
jo
add
ja
add
push
fcmovb
je
add
add
add
call
jae
jns
sub
pop
pushl
add
push
add
lea
dec
dec
pop
push
push
xor
pop
call
push
ror
pop
xor
push
inc
inc
ror
pop
pop
push
add
pop
pop
push
lea
push
push
push
push
lea
push
call
mov
add
add
rolb
add
add
shr
add
mov
stos
fisubrs
add
sahf
add
icebp
lcall
xlat
add
add
fptan
in
add
sub
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
in
scas
add
add
pop
stc
add
push
jo
add
mov
pop
mov
lods
pop
add
cmpsl
add
add
push
test
test
add
add
xchg
sarb
in
fcomps
leave
push
add
rol
not
pop
ret
push
push
push
push
push
push
push
push
push
push
call
mov
mov
leave
cltd
push
insb
or
add
fisttpll
imull
add
jb
fmull
sub
pop
push
push
lea
push
call
add
ljmp
pop
add
pop
push
jns
arpl
add
add
popf
add
add
iret
mov
add
lret
pusha
shlb
adc
add
add
lahf
add
outsl
mov
add
add
std
pop
popa
xlat
fiadds
mov
insb
test
clc
pop
mov
push
xor
pop
add
push
pop
push
push
rol
pop
push
push
push
push
call
add
mov
pop
cmpsl
add
add
je
nop
iret
add
ljmp
push
jge
lahf
jnp
add
loop
addr16
add
add
add
add
push
add
add
mov
push
push
sub
dec
pop
mov
push
push
push
push
push
push
lea
push
push
call
je
add
add
add
add
mov
push
xchg
add
cmc
aam
add
pushf
mov
add
test
add
mov
jns
test
pop
push
push
shr
lea
pop
pop
push
dec
add
pop
lea
sub
push
not
sub
ror
shr
pop
mov
push
push
lea
push
push
push
push
call
jmp
xchg
movsb
loopne
test
lahf
mov
cld
je
add
add
mov
add
add
add
enter
mov
int3
mov
add
add
jecxz
push
ficompl
out
add
jb
in
call
push
inc
add
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
aad
mov
add
add
add
divb
out
add
add
add
scas
gs
fcompl
repnz
fdivr
mov
decb
lock
rolb
add
add
fistpll
cmc
pushf
stos
add
fildl
add
xchg
add
cmc
fadds
pop
js
shl
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
call
icebp
call
test
push
add
mov
pop
bound
addl
mov
fldl
mov
std
add
lds
add
jo
lock
lods
add
lcall
mov
add
xchg
test
roll
push
add
idivb
mov
add
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
ljmp
add
jge
test
fadds
movsl
addl
add
add
stos
mov
xchg
mov
mov
add
jnp
add
loop
add
add
xchg
add
inc
clc
mov
push
lea
push
push
push
call
lcall
add
bound
test
leave
scas
lahf
add
push
add
fs
mov
pop
stos
add
fwait
imul
add
fwait
stc
in
sti
cmpsl
incb
cmpsl
pop
insb
js
mov
add
js
add
add
lcall
stc
push
push
lea
push
lea
push
call
fidivrs
lods
aam
add
ja
leave
ret
out
add
add
cli
mov
mov
add
lret
fldl
in
out
icebp
test
add
test
ret
xchg
add
add
add
testb
mov
rcll
xchg
push
fwait
imul
lea
push
call
add
aam
imul
scas
add
pop
xlat
add
add
sti
arpl
add
insb
mov
add
fadds
add
lods
add
xchg
cwtl
pop
pusha
push
sub
pop
xor
rol
push
sub
pop
nop
nop
push
lea
push
lea
push
push
push
lea
push
push
push
call
cmpsb
cld
fldenv
add
pop
movl
add
mov
mov
lods
sti
add
mov
jns
jnp
push
add
add
gs
jbe
mov
sub
pop
xor
push
not
ror
pop
nop
push
rol
xor
pop
nop
push
add
ror
add
not
pop
inc
push
xor
add
ror
pop
nop
push
lea
ror
pop
nop
push
push
push
push
call
test
add
add
ja
std
add
add
mov
in
incb
ret
lods
add
add
stos
jo
xchg
add
add
adcb
jecxz
data16
mov
cmpb
jne
push
push
push
lea
push
lea
push
push
call
in
add
mov
std
pop
add
clc
xchg
add
push
add
pushf
mov
testb
andl
fiaddl
xchg
push
add
mov
fiaddl
inc
pop
ss
push
add
pop
nop
nop
push
shr
pop
cmp
je
push
sub
add
shr
pop
nop
push
ror
pop
nop
push
push
push
push
push
call
enter
imul
test
xchg
add
push
cltd
add
push
outsl
pop
mov
data16
push
add
add
in
mov
fwait
mov
add
fdivl
lcall
nop
push
sub
pop
nop
cmp
jb
push
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
mov
pop
add
imulb
add
xlat
addl
add
mull
mov
mul
notl
add
in
fcomps
shr
add
add
lea
push
push
lea
push
lea
push
push
push
lea
push
call
cli
int3
enter
ljmp
shr
add
sub
jl
pop
in
add
mov
pop
cli
add
cmc
incb
add
jl
ljmp
xchg
add
add
sub
pop
mov
push
lea
push
push
push
call
imul
push
jmp
add
mov
pop
mov
add
jno
lods
fidivrl
addr16
add
aam
add
mov
stos
cld
scas
add
mov
add
add
xchg
xchg
add
rolb
add
in
lock
add
push
sub
dec
xor
pop
movzwl
mov
push
shl
pop
add
push
push
push
call
jmp
add
add
pusha
addr16
xchg
add
push
flds
add
out
cli
hlt
movl
lcall
dec
hlt
push
dec
not
not
add
pop
xor
xor
push
lea
push
push
push
call
add
jae
je
lods
add
in
bound
rcr
int3
push
add
push
jmp
add
add
add
jnp
test
add
int
mov
scas
sti
cld
insb
cmc
add
mov
icebp
mov
int3
pop
sub
pop
shl
xor
push
push
push
push
call
ljmp
add
mov
add
jo
lods
movl
jecxz
add
aam
add
lahf
add
jns
add
add
pop
add
add
je
loop
in
add
jno
add
pusha
add
lods
add
add
sub
pop
shl
push
push
lea
push
push
push
push
push
push
push
call
push
add
add
popl
push
jns
add
ljmp
loop
nop
mov
add
add
add
lea
shll
add
sub
pop
xor
push
rol
inc
pop
shl
push
push
lea
push
call
mov
fnstenv
sti
jae
roll
add
lods
lea
mov
add
add
into
lea
add
mov
add
add
xchg
jbe
jnp
add
pop
js
lea
movsl
add
jbe
out
sub
pop
xor
mov
push
sub
shr
pop
add
push
ror
pop
pop
pop
push
lea
push
call
mov
add
pop
add
movsl
mov
add
int3
out
add
std
cld
add
add
add
add
ja
push
add
int
add
add
mov
icebp
jp
nop
add
pop
push
add
rol
dec
pop
leave
push
xor
sub
pop
ret
push
lea
pop
push
push
push
push
push
call
add
xchg
add
add
add
fadds
add
cmpsl
cmc
add
add
mov
mov
add
sti
fs
add
add
sahf
int3
add
add
aad
jl
add
jne
add
add
cmpsb
add
fists
jl
lods
mov
push
mov
jl
add
lcall
in
push
push
call
add
popf
stos
add
add
add
add
mov
add
decb
add
add
mov
add
add
clc
cld
test
mov
incb
add
jo
test
cmpb
add
lods
in
sub
pop
push
push
add
shl
pop
push
push
ror
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
in
roll
jnp
inc
iret
cmpsb
movsb
rclb
add
add
add
lds
xchg
fcmovb
jnp
xchg
rolb
push
add
mov
in
loopne
push
push
push
lea
push
push
lea
push
push
call
outsl
mov
push
add
add
lds
add
add
mov
add
mov
mov
add
addb
insb
sahf
mov
jge
outsl
sub
pop
mov
push
lea
push
push
push
push
lea
push
call
pop
add
add
repnz
lods
pushf
jl
add
mov
popl
out
add
icebp
add
add
test
incb
les
add
add
add
mov
add
push
popf
lret
icebp
call
cmc
pop
jbe
mov
in
mov
sub
pop
mov
mov
push
lea
push
lea
push
push
push
push
call
sbbl
mov
test
bound
js
add
in
clc
mov
push
js
add
add
movsl
xchg
popa
mov
in
call
test
or
add
push
lea
push
push
lea
push
push
push
call
out
add
pop
add
imul
add
push
lahf
popl
add
imul
add
loopne
xorl
add
lcall
jno
push
add
add
pop
test
je
push
sub
dec
pop
mov
push
push
push
push
lea
push
lea
push
push
call
nop
add
addr16
xchg
add
jle
xchg
movsb
jbe
cmpsl
xchg
fnsave
rcrb
gs
add
add
add
mov
cld
add
mov
add
push
add
lods
loop
in
in
mov
push
lea
push
push
push
call
push
add
loope
pop
fldenv
fsub
xlat
loope
fwait
add
mov
jo
lea
js
notl
add
test
add
add
add
add
push
into
add
xchg
in
cmpsb
add
fcmovne
pop
add
mov
nop
add
int
sub
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
call
add
incb
cmpsb
je
hlt
add
in
sahf
push
out
jns
gs
mov
add
add
movsl
pop
mov
sarb
add
add
xchg
add
movsl
add
add
pop
inc
push
push
lea
push
push
push
call
add
add
addl
movsl
mov
jge
add
scas
add
adcb
arpl
add
add
pop
add
lret
add
out
fsubr
out
xchg
fwait
sub
pop
cmp
je
test
je
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
fwait
std
add
arpl
jns
popf
push
mov
push
mov
mov
outsl
add
les
add
add
add
mov
pushf
pop
add
fcoms
add
add
add
shr
jb
add
add
add
add
cld
sub
pop
mov
inc
push
dec
pop
cmp
je
push
push
lea
push
push
push
push
push
push
call
mov
cwtl
neg
pop
test
cmc
xchg
lock
mov
add
mov
add
xchg
pop
add
mov
insb
add
add
negb
sub
pop
test
jne
push
push
push
push
call
lods
mov
xchg
mov
add
loopne
push
mov
in
add
sti
scas
fsts
mov
add
add
add
repnz
fiaddl
arpl
je
mov
add
add
add
cmc
mov
mov
jge
add
gs
pop
add
mov
add
xor
push
dec
dec
shl
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
call
add
add
arpl
movl
ficoml
add
cld
add
lret
addl
add
add
push
adc
jb
add
loop
in
gs
add
mov
aad
add
add
lods
mov
in
lcall
pop
push
rol
pop
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
in
jl
add
add
add
aad
ljmp
mov
popa
ja
add
pop
add
add
lods
add
mov
gs
push
sub
pop
leave
push
sub
pop
ret
push
pop
mov
inc
push
push
call
add
xchg
pop
incb
aad
popf
mov
sbb
filds
lret
clc
jae
filds
mov
addl
fadd
scas
mov
push
imul
push
add
add
add
mov
jp
mov
mov
sub
pop
cmp
jne
push
add
pop
lea
mov
push
ror
ror
pop
test
je
mov
push
shr
inc
ror
ror
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
test
imul
add
add
into
in
shrb
stos
int
shl
add
xlat
in
add
lods
pop
add
add
lcall
loopne
test
sti
call
rcll
rcrl
pop
mov
test
je
push
push
call
add
push
jo
push
xchg
add
testl
mov
add
scas
add
aam
loop
lods
sarl
add
lods
jae
iret
add
push
lds
add
jns
arpl
je
ror
cmpsb
xchg
add
add
pop
jo
add
sub
pop
mov
push
shl
add
ror
dec
pop
add
cmp
je
push
lea
push
lea
push
lea
push
call
movsl
add
iret
push
add
add
in
notb
mov
mov
add
stc
add
add
data16
pop
lret
add
scas
push
popa
imul
sbbb
xchg
filds
clc
add
jne
cld
jmp
mov
addr16
stos
add
add
add
cwtl
jecxz
cli
add
lcall
adc
shl
not
dec
rol
pop
xor
pop
push
push
push
push
push
lea
push
push
push
push
call
out
add
lret
cmpsl
jle
mov
sar
lret
in
add
add
popl
add
add
add
sub
pop
pop
push
lea
push
push
push
push
call
lret
add
mov
mov
push
add
xchg
push
test
jl
mov
mov
push
add
add
clc
fwait
loop
into
fildl
add
fidivrs
lock
in
jmp
mov
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
push
push
fiadds
std
lods
loop
ret
mov
add
leave
add
xchg
add
mov
int3
sti
scas
xchg
add
lahf
scas
call
add
test
mov
stc
cli
add
add
loopne
add
lcall
push
push
push
call
add
add
mov
add
mov
faddp
add
add
scas
lahf
add
add
add
cltd
fwait
push
outsl
pop
aam
add
bound
les
in
lret
add
add
xchg
enter
sub
pop
leave
push
push
call
add
mov
add
mov
add
lods
jbe
mov
nop
add
add
add
add
stc
add
faddl
aam
out
add
pop
add
mov
aam
cmpsb
xchg
add
std
fldt
in
clc
lcall
or
push
ror
pop
lea
push
shl
lea
lea
shl
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
push
call
adcl
in
fiadds
cmp
push
add
add
add
rolb
out
in
lret
jnp
call
pop
add
add
stos
mov
push
jne
add
sub
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
mov
cli
addl
add
add
add
mov
test
addb
add
mov
ret
ficoml
add
jle
ljmp
mov
add
push
pop
add
sahf
test
add
add
add
jae
mov
add
add
jns
add
not
add
loopne
lcall
push
push
lea
push
push
lea
push
push
push
push
call
roll
add
cmpsl
fimull
add
add
test
in
add
out
mov
add
push
add
test
add
jae
add
mov
nop
mov
add
add
add
add
in
loopne
lcall
ret
push
push
lea
push
push
push
push
push
push
push
call
in
add
add
mov
add
add
add
add
add
add
int
fldln2
add
add
mov
add
xchg
cmp
add
add
add
test
leave
scas
sub
pop
mov
push
lea
push
push
push
call
cli
add
pop
les
loope
push
mov
add
fistl
scas
add
mov
add
add
jmp
xchg
jbe
nop
lret
shll
xchg
add
int3
add
jb
add
roll
add
add
loope
pop
imul
sti
out
aam
jl
xchg
push
mov
nop
pop
rcl
add
xchg
sub
pop
pop
push
lea
push
push
push
call
add
fs
xchg
arpl
add
add
add
push
add
mov
adcl
shl
imul
bound
add
add
push
dec
pop
pop
pop
push
shr
pop
leave
push
inc
ror
shr
pop
ret
out
or
iret
out
jl
iret
hlt
sti
iret
iret
out
mov
iret
iret
cli
iret
iret
xchg
mov
iret
iret
out
fmul
iret
out
iret
iret
iret
ds
iret
sbb
and
int
inc
sti
fisubrs
inc
lret
loop
sub
adcb
or
mov
and
loop
leave
aam
sahf
int
inc
lea
inc
das
xchg
in
rorl
movsb
or
popl
and
aam
incb
and
cmp
je
and
in
in
and
das
adc
test
mov
adc
out
js
icebp
aas
jbe
aad
jl
movsl
xor
xchg
loop
cmp
insl
testb
test
jb
mov
xor
std
push
add
cmp
xor
mov
adc
add
mov
jg
add
aas
mov
test
pop
mov
sbbl
xor
shr
inc
dec
popf
xchg
adcb
push
jp
std
dec
adc
dec
insl
xor
inc
push
xlat
and
inc
dec
xor
pop
sub
jge
mov
and
dec
mov
sub
aas
add
popa
add
mov
and
iret
fwait
arpl
jmp
cmp
adc
and
push
cmp
mov
aaa
mov
sahf
sbb
test
mov
adc
cmp
jg
sbb
int
mov
xchg
push
mov
and
shr
mov
and
xor
sub
fistl
or
jl
sbb
roll
ficompl
jle
ficoms
or
fstps
imul
shr
aad
jg
cmp
sub
scas
jbe
xor
or
jae
push
int3
push
pusha
or
xchg
cmp
outsb
lcall
loopne
cmp
xor
pop
lods
jo
loope
add
xchg
dec
fistpl
fldl
shll
jl
orb
jge
out
subl
hlt
lahf
and
je
inc
test
jbe
xchg
pop
in
mov
mov
push
insl
xchg
jae
xchg
cltd
add
cmpsl
mov
xchg
jg
jbe
fcompl
cltd
rolb
or
pop
pop
daa
pop
and
mov
push
pop
cmpb
pop
add
mov
mov
leave
inc
ret
clc
and
push
sbb
mov
dec
daa
push
insb
int
test
nop
rcll
mov
mov
mov
in
leave
mov
jmp
test
loop
jle
ljmp
scas
inc
mov
dec
lret
aaa
notl
mov
cmpsl
lcall
xchg
jbe
hlt
mov
sbb
push
test
and
cmovg
jg
imul
out
jae
add
push
mov
xor
mov
outsl
sub
ljmp
in
out
add
loop
mov
or
rcll
sbb
scas
sbb
xchg
lret
mov
inc
insl
push
inc
push
mov
mov
ss
lds
pop
mov
push
sub
pushf
fstpl
push
in
loopne
sbb
inc
jno
xchg
loop
jae
jnp
jge
push
xor
nop
inc
iret
sbb
shrl
fmuls
mov
push
adc
les
xor
adc
add
xchg
cmp
popa
mov
shll
sub
clc
xor
popa
test
clc
xor
lahf
insl
daa
cli
mov
dec
aas
stos
mov
inc
sbb
xor
adc
jl
or
adc
movsl
in
mov
mov
repz
adc
arpl
pop
adc
pop
leave
dec
pop
in
push
xchg
push
out
mov
pop
push
jp
cli
and
shrb
lcall
je
xchg
push
test
sbb
int
in
mov
add
out
push
sbb
cwtl
aas
mov
call
xchg
test
inc
mov
pop
pop
mov
iret
cmp
test
ljmp
jb
or
divb
jns
pusha
jbe
mov
pop
sub
clc
loop
jno
xchg
jnp
stos
ror
xchg
mov
in
cmc
xchg
pushf
sbb
ja
aam
cmc
mov
lcall
insb
nop
into
aam
es
movsl
movsl
jmp
sahf
xor
cmpsb
shll
dec
jnp
mov
push
push
repnz
dec
dec
mov
enter
insl
outsb
sub
int
hlt
mov
mov
jle
xor
iret
leave
fdivr
int
jne
stos
in
outsl
xchg
push
or
cltd
push
and
fcmovnu
sbb
insb
push
dec
sbb
nop
xlat
pop
cld
lcall
mov
out
loop
mov
daa
xor
and
je
and
dec
imul
lea
mov
aas
xchg
and
jg
cmp
int
or
and
or
adc
fwait
sbbl
xor
mov
sbb
out
dec
jo
lea
lods
and
out
ret
push
in
mov
inc
ja
pop
jnp
mov
and
roll
xor
and
sub
sbb
fs
mov
leave
add
jbe
test
test
push
mov
fcoms
or
lods
movsb
aad
imul
jle
out
xor
leave
fldcw
mov
dec
jge
push
xchg
dec
mov
sbb
hlt
data16
call
fcoms
ljmp
aas
or
or
dec
mov
mov
mov
sub
in
mov
mov
arpl
icebp
lods
scas
mov
fnstsw
inc
mov
push
sti
push
pop
inc
xchg
icebp
xor
mov
or
add
pop
push
dec
cmp
jg
je
push
dec
jno
push
mov
outsl
or
aaa
cld
xchg
xchg
repz
es
add
mov
sbb
xchg
shrl
repz
jg
jge
out
push
dec
rcrl
mov
dec
xchg
xor
adc
xchg
pop
mov
or
adcb
mov
dec
inc
sarl
mov
cmp
mov
in
push
in
push
dec
mov
cmc
lods
ffreep
or
outsb
hlt
fwait
sbb
jo
jmp
pushf
mov
js
imul
sub
add
stos
ret
cli
add
cld
ret
ficompl
dec
hlt
pop
fwait
push
adc
insb
or
mov
test
test
add
xchg
xchg
addr16
adcl
dec
mov
push
sub
dec
xchg
mov
xchg
adc
adc
lea
dec
push
adc
scas
lds
jge
mov
call
add
sub
or
adc
out
push
inc
mov
les
testb
xchg
call
orb
and
andl
popa
shrb
je
xchg
mov
dec
push
into
ret
push
aaa
fstpt
lahf
pop
enter
pop
iret
nop
xchg
mov
adc
adc
lock
cltd
loopne
inc
cmp
inc
test
iret
ret
xor
xor
fldenv
imul
or
cmpsb
cli
xchg
scas
pop
aas
push
cmp
xor
vpmaxsw
hlt
loop
outsl
popf
lcall
bound
sarl
xor
xor
xor
aas
popa
sub
inc
jg
push
iret
icebp
imul
std
daa
pop
adc
lock
mov
ljmp
mov
jae
cli
mov
mov
shrl
dec
xchg
dec
sbb
dec
xchg
mov
and
insb
inc
cltd
add
jp
push
lret
aam
jo
shll
rorb
in
insl
fisttpll
shlb
call
push
es
iret
fidivl
mov
pop
xchg
pusha
pop
mov
jb
mov
push
dec
or
pop
jne
push
jg
test
testl
jle
pop
fisubrl
fmull
or
cmp
inc
sti
sbb
repnz
adc
addr16
fistps
push
xor
lret
call
push
xor
test
out
repz
cmp
xchg
outsl
or
lea
jp
scas
add
jecxz
sub
in
cmp
sub
nop
push
mov
aas
enter
mov
pop
pop
inc
mov
push
xor
pusha
lahf
add
cmp
xchg
jnp
or
test
mov
test
cld
les
mov
add
icebp
cmp
lods
mov
sbb
movsb
nop
lods
sbb
mov
mov
test
sub
cwtl
xchg
and
xor
jp
sbb
scas
xlat
imul
inc
xor
jle
jle
mov
in
or
jle
dec
stos
xchg
icebp
mov
pusha
pop
jl
xchg
mov
popf
test
test
adc
xchg
pop
iret
push
xchg
push
sbb
int3
push
sbb
mov
popf
push
add
dec
rcl
test
jnp
xlat
mov
mov
pushf
pop
adc
cmp
in
mov
mov
push
adc
test
inc
std
sub
adc
push
loopne
and
outsb
ret
sbb
push
xchg
pusha
enter
add
sarb
mov
sbb
pop
pop
icebp
das
jnp
push
pop
in
lahf
data16
out
pop
sub
pop
and
mov
ret
je
xchg
scas
push
sar
xchg
or
fisubrl
add
mov
mov
cmpl
dec
push
or
add
idivl
jo
xchg
das
mov
pop
sbb
out
out
out
or
jge
or
in
inc
and
pop
xchg
jge
mov
shlb
mov
daa
lods
movsl
adc
xchg
push
xchg
popf
outsb
xor
dec
push
mov
mulb
shr
movsb
xlat
out
sbb
iret
cld
clc
addr16
and
xor
fcomps
lea
in
ret
lret
mov
or
inc
gs
add
jmp
sbb
xchg
xchg
js
rcl
shrl
rolb
add
or
lock
mov
sub
das
into
insl
or
mov
xchg
adc
popa
sub
jne
fwait
rcrl
mov
adc
add
rep
dec
cmp
out
cwtl
jo
adc
push
push
aaa
pmulhuw
pop
pop
sbb
dec
mov
sbb
mov
cli
loop
test
lret
in
cltd
dec
jge
mov
adc
mov
pop
in
cltd
lds
xor
push
push
xchg
sarb
mov
int
jb
in
int
jo
or
arpl
inc
mov
mov
addl
setnp
push
inc
jg
addl
stos
inc
inc
push
test
jle
cmp
mov
mov
sub
repz
and
mov
mov
movsb
mov
insl
cmp
aaa
xchg
je
adc
add
push
stc
xchg
into
xor
mov
mov
outsl
push
adc
sti
nop
fcmovnb
adc
mov
sti
dec
xchg
into
sbb
mov
mov
aam
sbb
movsl
mov
mov
in
sub
lods
lods
pop
mov
jne
xchg
rep
lret
mov
inc
adc
inc
or
movsl
int3
aas
aad
jmp
stos
mov
jb
inc
xchg
cmp
mov
mov
xchg
fisubs
dec
push
or
push
popl
adc
mov
or
movsl
fmuls
and
push
jae
icebp
pop
shlb
sbb
mov
sub
adc
lret
jle
or
pop
inc
dec
inc
lret
mov
lcall
gs
repnz
sub
xlat
popa
sti
cmp
mov
loopne
outsb
add
jae
or
and
mov
call
jo
sub
dec
sbb
sbb
nop
sar
sahf
shlb
or
pop
xor
pop
push
mov
xor
mov
add
cmpsb
dec
sub
sahf
adc
aam
xor
xchg
push
int
xchg
out
icebp
in
pop
or
sbbl
insl
mov
dec
push
cmp
cli
mov
pushf
mov
fstpt
adc
mov
mov
adc
call
pop
repnz
jmp
cmp
lgs
inc
adc
jns
dec
mov
fwait
outsb
mov
push
sbb
and
lahf
adc
and
scas
push
cmc
lock
popa
inc
lcall
xchg
jp
mov
adc
jns
cmc
or
ret
out
lock
pushf
bound
add
loop
inc
inc
jmp
and
stos
cli
lock
adc
sbb
js
or
test
test
sarl
sbb
and
shrl
adc
in
es
sbb
jb
mov
repnz
fildl
into
dec
cs
lahf
push
sbb
and
test
inc
mov
subb
push
pop
ljmp
cmp
imul
inc
mov
jb
mov
inc
cwtl
cmp
xchg
cli
loopne
and
sbbb
lds
adc
pop
sbb
call
xchg
dec
loopne
sbb
mov
icebp
jle
insb
inc
cmp
pop
pop
push
adc
cmpsl
xor
and
fld
dec
loope
mov
pop
inc
sbb
in
imul
sbb
mov
mov
push
andb
in
sub
jae
loop
movsl
xchg
frstor
in
cmp
cmp
cmp
mov
iret
in
push
leave
dec
nop
cld
push
in
pushl
pop
and
btr
outsl
jb
fistpll
push
xor
xchg
je
stc
fwait
inc
pop
iret
loop
mov
xchg
xchg
cmp
stos
push
shll
out
add
mov
hlt
cmp
add
inc
pushf
sub
add
sbb
imul
mov
pop
roll
cld
jl
xor
jge
std
mov
js
mov
lcall
push
adc
jmp
mov
inc
dec
or
filds
mov
lock
je
lcall
jg
icebp
sti
xor
jnp
push
mov
fucomp
lds
in
cld
inc
cmpb
cmp
sub
jns
cmp
leave
mov
in
push
mov
add
clc
shrb
ss
or
pop
sbb
sbb
jecxz
repnz
xor
jge
push
mov
ds
fcmovnbe
fsubl
jbe
mov
dec
xor
mov
notb
and
into
fs
dec
adc
and
loope
mov
gs
insl
push
mov
add
ficoms
adc
bound
mov
mov
push
call
adc
mov
pushf
xor
ja
push
es
es
add
lds
fbld
cmp
pop
shlb
testb
push
mov
push
jmp
lcall
sub
dec
jbe
xor
mov
les
gs
push
xor
mov
sub
das
and
inc
movsb
out
jns
das
icebp
mov
insb
cld
fistpl
mov
pop
mov
mov
and
and
adc
in
leave
popf
sarb
imul
and
fsubrs
dec
mov
das
sbb
add
mov
cltd
inc
adc
inc
xchg
cs
imul
sbb
mov
sub
sub
push
aad
popa
sbb
stos
or
push
cmpsb
and
hlt
lock
sbb
sub
cmp
aad
cmp
push
stc
xchg
dec
pop
shll
jns
std
in
jmp
xchg
rol
mov
fld
pop
fcmovnb
adc
sbb
pushf
sbb
frstor
adc
fstpt
cmpsb
fisttpl
mov
stos
popf
out
adc
and
inc
dec
fmul
ljmp
insb
jb
xlat
mov
ljmp
dec
or
and
repnz
jnp
sub
add
push
cs
test
push
adc
frstor
iret
testb
push
jb
mov
stos
js
xchg
dec
imul
dec
data16
addr16
sbb
rcr
inc
push
xor
je
add
or
cli
jno
xchg
outsl
dec
nop
pop
mov
aaa
xchg
repnz
jno
movsl
mov
das
bound
mov
in
cmp
cmp
out
mov
imul
mov
adc
sub
repz
gs
adc
in
jecxz
mov
mov
jae
and
adc
addr16
in
jge
inc
loope
cld
ja
pop
xchg
andl
outsl
lcall
movb
add
clc
cld
cmc
mov
pushf
clc
sub
loope
cmp
dec
aaa
mov
and
dec
push
xor
filds
push
jne
mov
cwtl
lea
adc
add
cmp
aaa
jnp
call
sbb
jne
loopne
or
push
jp
mov
inc
jns
inc
mov
jp
es
jns
jae
pop
cmp
div
mov
jns
mov
mov
in
sbb
mov
adc
jmp
sub
sbb
mov
cmp
js
pop
mov
inc
dec
pop
push
cltd
fildl
push
stc
cmpsb
in
cli
adc
cmc
js
stos
popf
xorb
push
lea
jne
xor
mov
fs
movsl
add
xchg
popf
paddusb
and
movsl
inc
mov
dec
gs
lock
inc
fadd
sarb
mov
jnp
mov
sti
jmp
nop
shlb
jne
push
push
sub
fisubrs
cld
bound
cwtl
lahf
jne
hlt
gs
repz
pop
cltd
repnz
sahf
mov
adc
xor
push
dec
scas
ret
sub
mov
ret
xchg
loopne
pushf
lcall
and
mov
imul
inc
das
or
sub
in
cltd
mov
loopne
push
jnp
adc
ds
pop
sub
aad
fisubrl
mov
and
bound
push
push
xchg
push
mov
add
and
push
sub
cmpsb
das
pop
popf
orl
pop
insb
mov
popf
bound
or
arpl
add
and
xchg
cmp
sbb
mov
loope
mov
mov
subb
jle
repnz
dec
lret
and
adc
xchg
mov
fstp
and
inc
xor
lods
mov
in
jmp
call
mov
add
xor
mov
cmp
in
jl
pop
add
jnp
jg
jg
ja
cmp
jge
lock
shrl
cmpsb
cltd
add
jle
lahf
lea
xlat
lahf
xchg
fwait
dec
push
ficoml
in
and
daa
inc
cmpsl
fisubs
add
int
lods
ficompl
mov
pcmpgtb
sbb
or
jle
in
cmp
fwait
in
jl
aas
subl
xchg
dec
mov
and
testl
fnstenv
and
mov
fwait
rcll
inc
xchg
nop
inc
and
es
add
cmp
pop
and
popf
out
dec
lcall
mov
dec
sahf
xor
sbb
sub
push
adc
gs
mov
push
popa
lret
sub
ret
or
ljmp
int3
lea
das
jb
mov
test
jno
fs
xchg
divl
mov
xchg
mov
mov
iret
inc
lds
arpl
pop
mov
lcall
jg
xchg
imul
aad
xchg
scas
xor
push
aad
fbstp
gs
js
es
icebp
pop
fistps
xor
nop
mov
aad
scas
fistpl
jb
push
jp
std
push
ret
outsl
xchg
or
xchg
xor
pop
pop
pop
dec
fadd
dec
sub
cmpsb
mov
stos
enter
xchg
and
xchg
je
lahf
js
cld
int3
push
fwait
jbe
loope
push
sar
cmc
ficompl
inc
jnp
arpl
xor
adc
sbb
cmp
repnz
lods
pop
addr16
shlb
and
xor
adc
std
cltd
mov
xchg
negb
jne
or
lods
icebp
jle
sti
and
imull
mov
add
inc
movsb
or
movsl
ret
adc
test
pop
xor
mov
sub
inc
mov
stos
sbbb
sub
lret
xchg
pushf
adc
jp
mov
cld
adc
subl
xor
xchg
in
pop
aam
dec
or
pusha
sub
sbb
push
jmp
leave
mov
push
rcll
jecxz
jae
pop
mov
fimull
in
imul
or
mov
sbb
ret
mov
inc
shll
pop
lret
inc
insb
mov
test
mov
adc
scas
test
bnd
test
pusha
insb
cltd
inc
push
insl
fisubs
mov
sub
ss
imul
fwait
push
add
fbstp
mov
mov
fstpt
mov
cmc
cmp
leave
xchg
dec
push
std
inc
mov
movsb
or
adc
iret
andl
das
sbb
outsl
imul
mov
rcrb
push
sub
push
lock
stos
out
test
ljmp
movsl
lods
pop
xlat
lea
fstps
test
dec
je
cmpsl
mov
fwait
adc
test
mov
and
sbb
xchg
test
addr16
loope
mov
jg
test
leave
dec
jecxz
or
test
inc
xor
insb
push
or
pop
cmp
mov
and
shr
clc
pop
mov
push
and
dec
push
mov
jp
jno
lea
cmp
cmp
mov
xchg
xchg
pop
inc
pusha
fidivrl
xlat
and
push
cmp
jo
dec
or
add
pop
insb
xor
adc
or
cld
loopne
out
out
sub
mov
xlat
popf
mov
arpl
cltd
mov
add
cmp
repnz
pop
cmp
ja
cmp
popf
adc
cltd
pop
std
pop
sub
sub
fisubrs
leave
das
add
jne
cli
jb
iret
lea
dec
stos
aas
scas
sbb
and
mov
pop
lahf
push
inc
inc
subl
lret
lds
jp
movhps
jp
ret
bound
cmp
mov
mov
popa
lahf
es
push
imul
mov
in
pushf
sub
fsts
loopne
inc
sti
push
and
iret
adc
mov
add
outsl
jp
out
pop
daa
dec
adc
addr16
inc
test
xor
fsubs
lods
add
adc
rorl
or
add
imul
cmp
jle
mov
or
push
adc
cs
loop
lods
pop
pop
sbbb
sti
movsb
int3
mov
push
aad
cld
pop
inc
pop
test
pop
cmp
daa
imul
mov
or
xor
and
int
cmp
pcmpgtb
stos
mov
sub
mov
fidivrl
jns
cltd
and
mov
jae
jle
or
fsubs
inc
cli
push
out
fldl2t
xchg
scas
insb
push
lahf
lcall
mov
lock
sbb
xchg
mov
and
adc
int
loope
mov
in
shll
shrb
ljmp
out
add
xchg
dec
jmp
mov
cli
sbb
ds
stos
lahf
xor
fldcw
loopne
hlt
scas
sub
subb
cmp
lods
fs
adc
push
jge
scas
aaa
mov
popa
push
and
hlt
jns
das
popf
and
out
dec
mov
mov
sahf
cwtl
ja
pop
mov
cmpsb
hlt
add
pop
jle
xlat
pop
jno
shl
std
je
xor
popf
xchg
jne
fdivs
sahf
push
mov
pop
and
mov
pop
fisttpl
sahf
mov
hlt
and
pop
aas
cmp
insb
and
in
stos
cltd
sbb
hlt
fnstenv
fwait
repnz
insb
scas
les
scas
mov
mov
or
jmp
inc
leave
mov
dec
push
or
adc
fisttpl
xlat
or
aaa
pop
pop
inc
das
fcmovbe
or
dec
or
mov
pop
mov
or
shll
into
xor
out
in
pop
sub
stos
daa
fbstp
scas
fmull
lret
ret
pop
das
enter
cmp
in
rorl
je
in
jbe
fimuls
mov
les
xchg
xchg
sar
sub
lock
mov
outsb
mov
pop
xchg
cmp
aad
sbb
adc
stc
pop
jecxz
test
lcall
loop
adc
popa
inc
dec
es
and
nop
dec
test
sub
mov
aam
lds
jge
inc
jnp
je
fistps
test
push
add
or
jle
sub
xor
lahf
mov
icebp
lret
andb
jecxz
pop
test
adc
stc
jle
test
jg
push
addr16
add
xchg
xchg
xchg
int3
xchg
pop
lods
cmp
call
sub
xor
test
loope
icebp
add
push
call
cmpb
dec
and
sbb
lds
int
in
or
mov
lahf
and
jmp
pop
pop
outsb
into
push
pop
cmp
jnp
push
jmp
rcll
inc
cmpsl
aam
add
pop
mov
jge
mov
out
leave
mov
sub
cmp
mov
hlt
mov
inc
adc
fists
mov
rcll
push
cmc
cmpsb
xchg
jge
shr
imul
push
pushf
inc
or
sbb
lea
clc
andb
bound
push
out
or
xchg
out
add
loope
in
or
cmp
imul
insl
mov
ja
push
mov
mov
mov
hlt
lret
sub
add
jge
jo
xchg
xchg
jne
js
fistl
pop
sub
movsl
pmaddwd
xor
adc
movsl
add
push
xchg
cmp
fwait
xor
insl
mov
fwait
mov
xor
es
mov
mov
ljmp
dec
inc
scas
xor
sti
mov
mov
shll
adc
xlat
pop
dec
ja
fnstenv
xchg
cmpsb
ja
out
jb
dec
or
mov
ret
mov
inc
pop
fcomip
push
add
push
outsl
mov
xor
in
pop
fwait
pushf
je
and
mov
ds
or
in
test
and
mov
push
inc
cmp
fs
pop
dec
sub
test
pop
sti
pusha
mov
andb
lahf
dec
mov
sub
cs
es
pop
mov
repnz
cwtl
lret
gs
call
jns
bswap
movsb
xchg
cmpsl
in
cwtl
adc
lods
sbb
xchg
adc
outsb
lods
outsl
loop
daa
sti
cmp
nop
dec
cmp
mov
cmpsb
xchg
es
dec
clc
pop
popf
clc
mov
inc
dec
dec
leave
daa
mov
hlt
jb
movsb
in
push
cmp
aaa
inc
fsubl
jno
int3
mov
pop
cli
inc
fs
dec
jg
pusha
les
stos
scas
jle
mov
sub
aad
xor
xor
jle
mov
loopne
or
scas
out
mov
mov
push
xchg
mov
xchg
addr16
fmull
into
mov
mov
arpl
hlt
popl
or
daa
in
in
jmp
ljmp
xlat
inc
jae
or
or
sti
sbb
test
push
push
sbb
fs
mov
pop
outsl
ret
scas
jae
cmpsl
imul
xchg
sbb
inc
sbb
inc
aas
mov
pop
into
les
mov
push
jae
ljmp
jb
pop
pop
sub
in
or
scas
addr16
cltd
fmull
jns
cmp
or
out
xchg
mov
add
mov
arpl
or
stos
adc
jo
pop
aad
push
and
adc
mov
inc
cmp
sti
fsubr
pop
cmc
push
xchg
jae
pop
loop
jnp
icebp
aad
mov
cs
popa
mov
add
imul
mov
sar
movb
and
dec
push
mov
aaa
push
sbb
mov
popa
faddl
cmpsl
mov
xchg
add
ja
pop
sbb
movsl
icebp
pop
repnz
cmp
stos
adc
rcrl
movsl
push
out
dec
int
inc
xor
addr16
lods
jle
mov
out
mov
ljmp
notb
mov
fstpl
insl
arpl
jno
int
pavgw
out
inc
rclb
xor
dec
xchg
and
loop
and
push
lods
pop
push
dec
and
scas
flds
shrb
in
cmp
xorl
push
imul
add
fldenv
dec
nop
sti
cli
jb
dec
or
jb
mov
xor
sbb
and
inc
adc
out
sbb
sub
ret
getsec
cmp
scas
shl
lret
sub
lods
mov
out
jl
clc
das
repz
xchg
inc
jmp
lea
data16
push
aas
popl
cwtl
lret
loop
roll
push
pop
rol
fwait
jecxz
jbe
inc
insb
ss
stos
pusha
and
fs
sbb
hlt
pop
or
cmp
dec
cmp
mov
imul
mov
in
mov
es
hlt
fs
or
xor
xlat
adc
das
stos
sub
repz
ror
test
popa
mov
stc
xchg
mov
in
adc
dec
mov
mov
pop
jae
out
mov
stos
sbb
shl
pop
icebp
mov
jnp
sbbb
inc
fisubrs
inc
fmull
ss
lret
cmp
test
inc
adc
sub
scas
add
xor
jnp
icebp
jmp
push
test
imul
sbb
in
out
aad
mov
repz
sahf
cli
dec
daa
lcall
notl
test
inc
push
je
adc
mov
mov
scas
push
sub
or
insb
lods
mov
push
mov
in
outsb
adc
addr16
mov
add
out
cmpsb
or
jae
test
jo
sbb
outsl
add
std
loope
xor
xchg
popa
shlb
mov
int
mov
shrl
int3
xor
and
jle
inc
push
je
or
dec
xchg
cmpsl
scas
mov
gs
icebp
mov
cld
xor
sahf
lahf
mov
scas
aaa
aad
pop
inc
and
rol
mov
add
sbb
pop
fbld
ret
lods
insl
jns
mov
rorb
xchg
jo
jo
imul
mov
stos
push
out
lds
popa
popf
dec
push
pushf
icebp
lret
loopne
sbb
sahf
cltd
jnp
xchg
test
jne
mov
rol
sub
jge
push
fs
sti
sbb
ljmp
cmp
clc
xchg
cld
pop
pop
mov
imul
xor
jge
movsb
or
inc
scas
lock
fidivl
test
icebp
hlt
pushf
cld
and
jnp
pop
dec
dec
jne
std
and
lods
bound
mov
xor
or
push
push
or
popl
out
dec
cltd
xchg
xlat
add
xor
xchg
out
loopne
popa
mov
aam
xor
fsubrs
je
xchg
mov
adcb
or
and
adc
in
push
sbb
jnp
sub
push
dec
or
inc
jp
inc
sub
sub
jnp
xor
inc
mov
and
mov
cwtl
add
aam
loope
popa
fldl
dec
and
ficoms
dec
rclb
bound
add
pop
ret
cwtl
test
popa
insb
fsts
push
add
mov
movsb
lahf
std
loopne
dec
lret
outsl
shr
pop
or
add
push
or
xchg
cmp
inc
std
adc
or
adc
in
mov
outsb
mov
mov
mov
inc
and
out
mov
popa
xchg
cmp
js
stos
push
repz
outsl
stc
imul
fcmovb
push
jl
out
lock
test
sbb
call
call
fistps
inc
test
mov
xchg
cmc
xchg
out
fbstp
orb
ja
cmp
sbb
add
pushf
scas
scas
fcoms
clc
daa
push
jnp
enter
movsl
and
jp
imul
lcall
dec
leave
push
popf
xor
cmp
xor
in
pop
js
mov
or
inc
mov
fistps
std
es
adc
cmpsl
xchg
leave
mov
xor
jmp
lods
push
adc
dec
icebp
or
inc
mov
inc
aaa
adc
pop
jne
and
mov
jne
mov
test
nop
adc
cmpsb
repnz
in
cmpsl
xor
andb
cltd
adc
jnp
jns
cmp
aas
cmc
out
jecxz
jge
mov
mov
cmp
dec
test
xor
jne
xchg
or
scas
sbb
out
fwait
iret
add
jbe
push
es
push
lds
inc
imul
into
sub
sbb
inc
or
cli
fsubr
movsb
and
loope
inc
xchg
lahf
add
xor
subl
jo
pop
xor
cmp
pop
and
adc
dec
xlat
fcmovu
xchg
adc
xchg
daa
xor
jp
test
leave
in
mov
cs
lahf
out
jmp
pop
and
sub
movsl
movsl
es
lret
clc
lcall
mov
fldl
loop
and
int3
mov
mov
xlat
jmp
loope
out
mull
je
in
adc
or
mov
ljmp
or
pop
mov
pop
inc
in
popa
rcrl
jns
outsl
fcomps
rcr
loope
sub
addr16
mov
dec
xor
scas
push
sbb
rorb
popa
movsl
xlat
out
add
sbb
out
ficoms
inc
or
xabort
push
aam
sbb
lcall
fisubs
in
sub
xchg
or
loop
fwait
rcr
vandpd
pusha
adc
ficoml
dec
sbb
xchg
push
push
fs
je
mov
test
push
sahf
ljmp
inc
je
adc
push
pop
imul
mov
mov
dec
pop
test
lcall
leave
mov
pop
andl
xchg
stos
stos
push
adc
pusha
lcall
stos
shl
push
mov
in
test
mov
call
mov
ja
fisttps
cli
ds
or
or
dec
lret
sbbb
xor
or
xor
inc
in
inc
movb
popa
aad
dec
loopne
cmp
bound
mov
or
in
pop
push
adc
add
mull
push
mov
jl
inc
mov
dec
popf
lods
test
push
add
jb
mov
mov
xchg
sub
scas
mov
mov
cmp
int
xlat
and
in
mov
pop
jle
mov
in
jge
pushl
call
mov
or
mov
push
mov
xor
gs
cmp
cli
mov
out
lock
out
dec
loopne
or
ret
stc
mov
sbb
inc
iret
jae
popf
out
int3
mov
andl
mov
pop
in
mov
push
xorb
fmull
adc
sub
cmp
mov
test
add
in
lods
push
sub
test
mov
addl
lcall
sbb
xor
insl
lret
stos
jno
push
cmpsl
cmp
jbe
pop
out
insb
dec
mov
out
es
dec
into
adc
shrl
addb
inc
pop
movsl
mov
or
push
jne
aam
mov
push
pop
push
dec
xchg
cmp
pop
hlt
mov
stos
in
pusha
or
push
lods
into
sub
push
xor
negl
lods
popa
mov
addr16
js
xchg
jl
cmp
mov
dec
jecxz
out
mov
pop
imul
sahf
das
das
or
aas
loope
sarl
mov
xor
jne
bndstx
or
das
xchg
mov
inc
push
pop
inc
int3
xor
fbstp
cmc
mov
in
loopne
shl
lret
jb
add
arpl
addr16
rolb
dec
cli
imul
sbb
xor
ss
xchg
outsl
mov
loop
mov
std
xor
xchg
shll
mov
pop
adc
cmp
inc
into
push
cmp
cmp
push
pop
stc
in
cmpsb
in
sar
fnstenv
cld
jnp
inc
lcall
adc
rcrl
mov
mov
sub
sub
leave
push
mov
test
mov
addl
jns
testl
pop
dec
mov
add
mov
mov
pop
cli
lock
call
add
test
inc
in
roll
test
dec
pop
mov
xchg
fmuls
push
sbb
cmp
jno
lret
into
add
test
xor
aad
cld
add
xor
in
mov
pop
pop
insl
jmp
stos
ljmp
add
dec
je
mov
mov
insb
jp
pop
idivl
adc
clc
test
pushf
mov
xchg
jae
mov
or
jge
mov
mov
fxch
mov
enter
ss
sub
enter
fidivrs
lods
test
sbb
dec
xchg
shll
jmp
rcr
jae
mov
adc
pop
inc
aam
clc
or
sub
sub
sbb
lods
scas
adc
xchg
lods
xchg
cmp
movsb
adc
xchg
out
push
repz
stc
xor
push
hlt
loop
aas
icebp
mov
movsb
aaa
pop
test
stc
or
inc
je
dec
sahf
int
add
lret
es
outsb
push
stos
nop
decl
aaa
shll
adc
pushf
push
mov
mov
inc
pop
xor
imul
into
sub
jl
rorl
xor
sbb
daa
xor
cltd
pusha
and
push
mov
jns
xchg
mov
or
xor
cmp
les
inc
mov
dec
notl
xchg
ss
push
add
adc
push
sub
lods
xor
adc
dec
mov
mov
aaa
push
pop
add
icebp
add
mov
and
or
loop
mov
or
add
xor
pop
jl
repnz
shrl
push
dec
jnp
lret
mov
les
fwait
int3
scas
push
mov
push
and
mov
out
xchg
out
push
sbbb
pop
mov
xchg
icebp
mov
in
push
xchg
pushf
add
ss
sar
shrl
pop
add
daa
push
movsb
xchg
adc
and
or
cmp
std
leave
ds
aas
and
push
pusha
ss
pop
outsb
mov
notb
sub
insb
fidivl
cmp
push
mov
mov
inc
daa
icebp
les
iret
mov
loopne
dec
int3
pop
mov
stc
popa
mov
mov
subb
aas
pop
adc
test
subb
fcmovbe
les
sub
inc
mov
xchg
clc
aas
int
fldcw
sbb
out
mov
outsb
dec
cmovae
sbb
loop
xor
mov
daa
insb
and
xchg
ficoms
mov
rorb
mov
mov
repnz
aam
in
ds
mov
sub
jle
mov
fs
movl
sub
cmp
mov
mov
xorb
test
xchg
dec
adc
idivl
lret
in
mov
sub
leave
dec
cmp
and
xchg
inc
jle
fidivrl
pushf
sbb
fstps
dec
mov
push
and
addr16
cli
out
loop
mov
enter
or
inc
nop
rcll
push
icebp
cmp
pop
mov
and
ficomps
jle
test
mov
mov
xchg
out
xlat
es
pop
stc
lea
mov
outsb
xchg
mov
cmp
xor
pop
mov
xor
mov
inc
loopne
sahf
arpl
dec
scas
cltd
cmpsb
fcmovnu
adc
popf
lock
lds
xchg
sbbb
or
in
fdivs
cmp
sbb
inc
inc
or
push
imul
out
xor
pusha
xlat
inc
movsl
data16
cmc
clc
add
and
leave
leave
popa
cmp
std
sub
das
xor
fsub
inc
fcmovnu
jnp
out
add
mov
add
fcmovbe
dec
xor
ret
mov
and
shlb
aam
sub
inc
jns
pop
lods
and
orb
cmp
roll
push
mov
push
push
add
lods
push
xchg
cmp
sbb
scas
pop
test
aas
es
xchg
in
pop
outsl
xchg
sbb
insb
lahf
mov
stos
push
xor
setne
jae
stos
ret
mov
ror
push
jge
or
xchg
loopne
ss
or
out
data16
inc
in
mov
dec
or
movl
xor
in
ljmp
sbb
inc
rorb
cli
sbb
sub
cmp
mov
push
jecxz
mov
stos
fistl
push
jae
jae
inc
movsb
inc
je
ret
push
stc
aad
lds
cmp
cwtl
push
pusha
or
or
sbb
jb,pt
data16
dec
xlat
add
sbb
xchg
jge
push
adc
mov
adc
dec
lods
mov
pop
or
fisttps
jns
das
gs
cltd
aaa
mov
sub
stc
xchg
test
fsubrl
cmpsb
cmp
and
and
push
mov
sbbl
mov
ret
mov
pop
out
pop
neg
jae
aam
inc
ret
mov
xor
jns
dec
shll
rcll
push
repz
cmp
rol
jg
scas
push
outsb
inc
inc
orb
and
in
push
and
cmp
testl
mov
ret
xchg
hlt
dec
js
jnp
scas
popf
std
in
mov
and
clc
enter
dec
in
pushf
pop
xchg
jo
ret
lret
movsl
sub
lock
sbb
push
imul
lahf
push
push
cmp
dec
mov
fcmovne
jg
mov
test
bnd
push
mov
sub
std
in
into
adc
out
or
icebp
mov
or
pop
mov
aaa
mov
jge
pusha
jb
stos
adc
inc
mov
into
out
mov
xchg
loopne
fwait
push
dec
adcb
xchg
js
mov
bound
ss
mov
mov
adc
cmpsl
pop
ficompl
jg
adc
cmp
fnstcw
mov
enter
addl
cmp
cmpsl
add
inc
sbb
pusha
cs
sub
aam
jp
xor
push
and
and
jo
push
rol
aad
aas
jnp
lcall
inc
mov
outsl
ja
push
inc
lock
js
or
mov
dec
push
and
add
sub
dec
pop
sub
pop
rcl
cmp
in
rcrl
push
cmpsb
stos
popl
mov
ss
pop
add
ret
stc
xor
xchg
mov
push
sub
push
and
ja
scas
sbbl
notl
cmp
or
jae
shlb
lods
ret
stc
lods
mov
sbb
subb
jne
mov
push
xchg
cltd
pop
pop
out
xor
test
pushf
push
push
xchg
jnp
dec
pushf
pop
jo
cmpsb
int3
cld
mov
lock
ss
mov
or
mov
xchg
std
incb
pop
mov
in
repz
mov
sbb
add
int3
jbe
mov
jnp
pop
scas
mov
xor
cmp
jmp
mov
dec
fwait
xor
sarl
cmp
and
mov
out
test
jb
fwait
cmp
std
mov
xchg
sbb
xor
pop
mov
add
push
gs
ljmp
jp
ss
sbb
inc
pop
pop
adc
pop
xor
test
pop
shl
aas
inc
sub
add
clc
test
in
cmpsb
jecxz
cmp
xor
add
fildll
ret
push
arpl
jmp
int3
sub
mov
jmp
popa
cmp
sbb
xchg
stos
push
imul
jecxz
leave
xor
ret
mov
push
lea
stc
and
cs
sub
add
cmp
and
cmp
mov
or
jns
dec
std
clc
rorb
cmp
mov
pop
or
and
xor
sahf
js
mov
cmp
ret
rorb
jbe
jmp
test
xchg
jmp
aad
xor
js
jmp
mov
inc
sbb
lahf
outsb
add
push
pop
loopne
int3
sub
pop
push
inc
and
mov
dec
pop
dec
dec
pusha
push
iret
add
sbb
popf
imul
xchg
adcb
lret
bound
sahf
dec
push
es
iret
cmp
je
je
and
fsubrp
push
popa
fnstenv
das
in
arpl
or
imul
mov
loopne
push
ljmp
js
jp
mov
lods
sbb
clc
fwait
aaa
pop
mov
divl
mov
out
es
popf
aaa
insb
js
mov
push
pushf
lret
jmp
pop
or
sub
xchg
cmp
outsb
mov
mov
inc
stc
dec
mov
cmp
push
das
jecxz
mov
adc
fwait
ds
jp
divl
xchg
jp
jno
dec
mov
ljmp
and
mov
fldenv
mov
push
bound
fsts
adc
inc
xchg
fisubrl
and
fs
adc
stos
inc
xor
jle
fwait
mov
mov
and
fwait
or
sbb
jns
pop
push
pop
mov
adc
in
sahf
push
xchg
in
scas
int
inc
out
or
repz
xor
fnstenv
xor
mov
test
jnp
xor
mov
in
push
es
pop
xchg
or
ja
mov
adc
mov
gs
jmp
int3
xor
jb
sbb
mov
lods
dec
mov
rcrb
pop
jp
sbb
aad
push
mov
ss
fadd
jmp
cmp
cmpsl
jecxz
push
loope
ret
sub
in
out
and
gs
fs
jno
cld
mov
push
dec
jae
cmp
loop
or
sti
hlt
push
lret
jge
mov
int3
mov
mov
mov
mov
mov
sub
sbb
repz
iret
ret
les
clc
jle
jnp
xchg
lcall
inc
jne
jnp
jl
ja
invd
dec
push
andb
aaa
dec
ficoms
insb
sbb
xlat
xchg
ret
clc
add
cmpsb
add
sub
incl
out
int3
mov
mov
hlt
aam
pop
pop
adcb
add
xlat
add
sbb
or
and
pop
leave
push
jmp
xchg
and
rolb
push
shll
dec
jmp
add
in
movsb
das
jo
push
gs
cmp
or
sbb
pushf
loopne
ja
mov
fbld
arpl
cwtl
pop
jbe
repz
outsb
push
mov
mov
mov
lods
loop
cmpsb
mov
jb
mov
adc
mov
cmpsb
or
bound
pop
ss
sbb
jne
fistpll
push
aam
sub
xchg
pop
xchg
loopne
popf
push
add
test
pop
test
shll
cmpsb
or
mov
add
adc
or
xor
test
mov
pop
test
decl
bound
lret
xchg
movsl
mov
mov
fcoms
stos
cmp
and
pop
shll
mov
dec
sub
cs
pusha
mov
pop
in
imul
iret
mov
mov
dec
pop
sbb
cli
and
jae
fs
pop
cmpsb
shrb
sbb
out
shlb
fidivl
mov
adc
mov
mov
mov
inc
jnp
push
pop
mov
lock
xor
mull
ja
popa
sub
mov
adc
loopne
adc
std
adc
fucomip
add
sub
sbb
xorb
dec
call
imul
xchg
icebp
inc
sbb
jbe
dec
dec
leave
mov
add
cmp
in
decb
nop
bound
ja
jbe
inc
and
int3
cli
xor
pop
xchg
shrl
add
xchg
cmp
inc
dec
pop
dec
loop
shll
out
stos
push
push
pop
jp
lea
int3
rcl
add
lahf
inc
pop
mov
aad
int3
es
cmp
xchg
pop
stc
mov
sub
scas
push
leave
pop
fdivrs
movsb
adc
push
dec
pop
inc
repnz
aad
pop
loop
mov
fdecstp
cmpsb
mov
insb
xchg
addr16
mov
js
and
cs
xor
vcvttsd2si
pop
cmp
mov
push
xlat
adc
xor
and
xchg
out
adc
std
sub
mov
dec
inc
out
mov
stos
xchg
sub
sar
arpl
cmp
rcrb
ljmp
mov
arpl
push
roll
jbe
ret
mov
test
test
jae
in
mov
pop
js
imul
mov
cmp
pushf
add
xchg
dec
push
xchg
xchg
cmc
pop
sub
pop
jmp
jnp
das
pushf
lods
inc
iret
lret
push
out
cltd
push
cmpsb
fwait
adc
cld
cmp
add
and
jle
lods
adc
ja
inc
pop
data16
scas
cli
sub
adc
orl
fwait
xor
dec
loop
test
cmp
dec
incb
push
stos
or
out
sti
in
pop
sbb
pusha
push
lea
roll
in
inc
sbb
pop
xchg
sbb
adc
loop
push
jl
loopne
dec
sbb
push
pop
ror
scas
punpcklbw
lcall
leave
mov
push
sbb
xchg
inc
fsubs
adcl
mov
cmpsl
jns
cmp
jle
xchg
push
mov
int3
mov
and
addr16
jle
xchg
mov
out
jo
push
orb
std
push
fisubs
xor
lock
loope
ss
shrl
sbb
rolb
bnd
stos
add
popw
cltd
punpckldq
mov
cmp
mov
decb
rorb
mov
into
xchg
stos
outsb
sti
xor
cmp
dec
mov
rcrb
ja
pop
stc
cs
cmpb
notb
push
pop
mov
movsl
lds
jl
ja
sub
push
inc
inc
xor
fcomi
rclb
sbbl
inc
dec
mov
adcl
dec
lods
mov
cmp
and
dec
cmp
push
sbb
gs
lock
data16
mov
std
bound
loopne
test
xchg
xchg
outsl
test
pop
jmp
sbb
ret
std
sub
push
cs
dec
es
pop
outsl
cmpsb
add
adc
pop
mov
xchg
loop
daa
dec
mov
add
jbe
int3
ja
jae
jmp
push
and
mov
xor
repnz
and
scas
dec
dec
fsubrs
sub
movsb
and
insl
mov
inc
sub
dec
out
or
aaa
icebp
dec
add
std
fnstcw
push
and
int
mov
std
test
sub
std
testl
decl
cmpsb
and
sub
test
add
xchg
or
je
mov
les
cmpsl
jbe
scas
push
cmp
cld
mov
scas
push
sar
cmp
arpl
jb
insb
pop
scas
xor
in
mov
pushf
and
leave
cmp
leave
nop
insl
xchg
test
in
xor
jg
ss
or
rorb
adc
lret
out
movsb
pop
fidivrl
xchg
in
or
cmp
pop
data16
adcb
cmp
xor
hlt
jnp
out
add
sti
dec
dec
sbb
mov
push
cmp
gs
loopne
sarb
or
push
mov
lods
dec
jecxz
and
jmp
inc
inc
push
or
fldenv
mov
inc
jo
xor
xor
out
pushf
jg
loope
testb
jno
sbb
faddp
and
in
xchg
add
pop
pop
cltd
mov
loopne
mov
push
cs
shl
loope
xchg
push
mov
test
push
sub
imul
shl
or
push
fstps
subb
outsl
sbb
sbb
fs
mov
pop
cli
sub
jne
stc
mov
ljmp
dec
jne
subl
sbb
sbb
inc
adc
cmp
xchg
fcompl
push
int
lock
stos
stc
mov
adc
or
push
pushfw
stos
cmp
call
mov
adc
sbb
loopne
add
xchg
adc
lods
in
pop
adc
inc
stos
mov
mov
dec
in
cmpsl
mov
shll
jbe
repz
push
sbb
outsb
xchg
cmpsb
or
out
fldl
xchg
and
es
pop
jl
jns
repz
shrb
lcall
sti
mov
hlt
imul
clc
test
insb
xor
daa
hlt
push
or
lock
or
orb
rorb
jnp
pop
jg
xchg
pop
adcl
dec
movsl
xchg
push
test
stc
inc
stos
out
dec
in
fisubl
xchg
in
push
scas
rorl
cmp
aas
dec
xchg
prefetchwt1
cmp
and
jnp
and
pop
dec
push
cmc
mov
sbb
in
aaa
out
jge
push
cwtl
mov
pop
mov
push
push
dec
lock
cmp
and
fwait
addr16
sarb
mov
inc
popa
jge,pt
ret
push
pop
ret
fists
xor
pop
fwait
add
mov
push
adc
shlb
mov
inc
xor
icebp
cltd
pop
mov
nop
aad
shrl
into
aad
adc
sbb
cmpb
push
mov
lods
mov
out
sti
mov
or
aas
in
fcoml
repz
lds
cmc
or
loopne
add
or
adcl
sbb
aam
out
cmpl
mov
inc
sbb
int
sarl
clc
in
push
pop
adc
shl
pop
scas
sub
out
imul
and
add
popa
lods
jb
jno
adc
inc
inc
mov
aaa
scas
dec
jle
cmc
add
cmpsl
jge
imul
stos
lods
decl
andb
jae
cli
sub
dec
sub
sbb
or
xchg
or
and
cmp
enter
sbb
pushf
mov
leave
adc
or
mov
push
sbb
add
dec
ss
aad
jnp
mov
stos
pusha
add
or
out
push
int3
flds
pushf
push
ficompl
stos
push
and
int3
mov
inc
sbb
dec
out
aas
fimuls
inc
adc
inc
pop
inc
push
fldl
inc
out
adc
mov
sub
cmpsb
stos
jmp
mov
xor
fs
xchg
add
test
outsl
mov
mov
sub
aaa
cltd
nop
lret
add
add
mov
sahf
jge,pn
push
inc
jecxz
loop
mov
lahf
insb
xchg
mov
pop
cld
mov
test
jmp
xchg
push
push
aam
xor
mov
sub
cli
iret
inc
sbb
dec
fwait
dec
push
xor
hlt
fidivl
imul
add
fdiv
pop
add
fisttps
xchg
jnp
xchg
rol
dec
sbb
sub
das
adcb
push
or
mov
out
mov
sub
mov
insb
lcall
js
push
add
pop
popf
or
or
dec
imul
xchg
push
cld
imul
jne
dec
pop
lret
cmovs
push
pop
lcall
sub
aad
sub
ficoml
cmpsl
pop
stos
adc
daa
mov
adc
ds
sub
ja
leave
into
sbb
insb
pop
sub
and
xchg
fbld
in
inc
cmpsl
loopne
xor
insb
push
add
jo
decl
xchg
lahf
paddq
add
scas
daa
jno
lcall
les
mov
mov
shr
xchg
and
jl
cmp
test
addr16
pop
iret
add
clc
out
and
or
stos
fstpl
pop
pop
cwtl
fisttpll
pop
xchg
cs
div
insl
stos
add
push
inc
mov
insl
push
out
dec
add
ret
xchg
add
mov
and
andb
loope
mov
xor
push
insb
push
xor
jne
pop
xchg
dec
mov
ja
dec
cli
cwtl
sbbb
or
jl
repz
xchg
add
scas
cmp
adc
aam
aas
add
ja
fisubrs
mov
push
je
or
mov
ds
lcall
int3
sub
sub
xor
fwait
aad
adc
aas
dec
dec
push
pop
xchg
dec
adc
out
mov
popa
or
clc
insb
jae
mov
imul
aam
inc
fsubrl
mov
loopne
mov
jmp
mov
xor
jae
imul
insb
imul
pop
cwtl
pop
push
add
mov
int3
and
into
jne
jb
cmp
cli
mov
daa
mov
cmp
push
jns
xchg
out
test
push
lods
sub
pusha
jnp
pusha
jmp
rol
mov
push
jmp
scas
repnz
lahf
sub
sub
in
pop
fistpll
test
dec
dec
xchg
subb
jp
jne
push
mov
jne
sbb
inc
aas
scas
lea
mov
in
cltd
stos
mov
dec
mov
xchg
and
sbb
push
shll
add
popf
mov
mov
xor
push
push
repz
loope
push
push
out
xchg
or
dec
fcmovu
and
leave
cmp
mov
xchg
push
jmp
mov
xchg
loopne
test
mov
or
push
in
or
clc
push
xchg
xchg
decl
and
and
mov
ljmp
push
icebp
fwait
push
loop
push
cmpsb
xchg
stc
add
enter
pushf
lods
rol
push
xor
dec
and
add
out
lock
xor
inc
xchg
fisttps
fisubrl
mov
inc
mov
test
or
push
dec
enter
xor
mov
mov
test
mov
aaa
adc
ljmp
arpl
lock
nop
mov
adc
sbb
loope
sub
scas
popf
data16
fiaddl
adc
sbb
push
sub
mov
aad
idivl
mov
mov
xchg
fcoml
cmp
add
mov
stos
inc
jae
or
gs
scas
sahf
outsl
xor
push
popf
lock
jecxz
int3
outsb
enter
mov
bound
xchg
loope
ja
gs
je
xlat
loop
test
pop
xchg
and
xchg
jnp
out
push
pop
test
fs
jge
pop
adc
insl
mov
fs
pop
in
xchg
mov
test
fadds
push
popa
negl
adcl
xchg
inc
ds
js
inc
xlat
call
lret
cmpsl
cmp
addr16
xorl
mov
sahf
push
dec
lret
insb
jne
xchg
pop
frndint
cmpsb
mov
shr
mov
shlb
int
or
out
aam
pop
mov
shrl
adc
pop
mov
and
or
cld
cmp
cmpsl
mov
out
xchg
lret
movsb
mov
ret
push
dec
and
sub
lods
xor
ret
mov
push
jno
outsb
ljmpw
out
sahf
and
or
rcrb
bound
daa
dec
movsl
mov
popf
mov
jno
and
sbb
pop
out
je
call
mov
xor
std
push
push
xchg
sub
inc
jnp
test
xchg
inc
cmpsl
mov
rcr
lods
jns
and
mov
mov
mov
std
inc
in
or
cld
or
in
fdivrp
jo
or
xchg
data16
cmp
cmc
adc
fiadds
mov
mov
ret
inc
or
cmc
jns
push
xchg
pop
out
inc
addr16
sub
cmpsl
adc
mov
loope
mov
fimuls
push
mov
push
rclb
stos
std
push
mov
movsl
ljmp
int3
jb
iret
js
mov
xchg
aaa
jnp
inc
sbb
inc
cltd
push
pop
mov
jle
and
ljmp
and
call
hlt
adc
cld
and
pop
sub
lret
jmp
push
aad
pushf
test
pop
cwtl
sti
jae
insb
daa
inc
xor
std
xchg
rclb
cmpsl
push
mov
in
shrb
adc
aam
push
imul
inc
or
mov
stos
sub
pop
dec
and
sub
xchg
cmp
ror
xchg
shrb
adc
pop
outsl
mov
xchg
std
push
jp
inc
mov
mov
jnp
int
out
mov
scas
in
cmp
and
daa
mov
in
das
or
pop
adc
add
movsb
or
sub
repnz
mov
add
sub
add
and
fsubrs
dec
hlt
pop
idivb
jge
inc
pop
xor
roll
cmp
cmp
xor
mov
inc
arpl
mov
cltd
sub
stc
scas
hlt
shlb
mov
nop
es
aaa
pop
mov
cmp
ss
or
push
stos
mov
mov
pop
xchg
jns
test
ds
cmpsb
jmp
icebp
je
ret
call
lea
loopne
xchg
jecxz
roll
push
xchg
xlat
mov
mov
and
mov
repnz
out
xchg
or
inc
clc
in
pop
in
ret
shl
mov
cli
test
pop
cmp
push
rcrl
imul
xchg
lock
fadd
inc
add
pop
jb
xchg
inc
jge
mov
les
xlat
sbb
jno
pop
jb
add
lcall
repz
leave
mov
lcall
jb
vmovntdq
jae
shlb
pop
lds
push
sti
push
xchg
xchg
add
sub
repz
pop
fs
xor
jns
mov
push
mov
cmpsb
cli
mov
sub
mov
mov
fsubs
ljmp
aas
lea
aaa
and
cmpsb
fstpt
mov
adc
out
jnp
bound
imul
xor
shrb
lcall
sub
and
mov
inc
and
loope
popa
test
pop
dec
or
xlat
adc
pop
mov
dec
in
rclb
ja
push
call
testl
mov
push
push
lea
lock
jecxz
dec
pop
add
outsl
dec
insl
mov
insb
fwait
xor
mov
xor
inc
jl
in
scas
in
add
push
or
mov
cmp
mov
clc
mov
push
add
popf
cld
cld
into
fidivrs
cmp
adc
sbb
or
xchg
fisttpll
mov
mov
push
sbb
int3
sbb
das
out
push
mov
xchg
cs
sub
pop
add
dec
jne
sub
push
xor
cmp
hlt
push
mov
mov
stos
xlat
cmc
push
add
out
or
xchg
pop
push
out
sbb
add
and
push
push
pushf
or
jl
ret
out
fs
add
push
add
jbe
movsl
cmpsb
lods
dec
dec
mov
clc
jbe
jo
leave
mov
outsb
push
fwait
adc
fisttpl
mov
shlb
cmp
push
cli
adc
hlt
sti
pop
mov
ret
call
jl
ret
int3
xchg
mov
push
cmp
jg
add
adc
iret
jbe
out
das
bound
pop
adc
sub
or
xchg
sub
inc
pop
xchg
mov
pop
and
inc
fldl
scas
mov
jo
push
jnp
jmp
testl
pop
out
rorl
dec
mov
mov
subl
push
es
in
and
jmp
jne
and
loop
xchg
sub
mov
inc
push
movsb
jmp
ja
inc
push
icebp
scas
mov
sarl
lahf
push
stos
dec
cwtl
dec
jecxz
fs
or
pop
icebp
sbb
loop
adc
cmpsb
sahf
sbb
imul
daa
xchg
dec
test
push
and
xchg
cmp
in
mov
jl
int3
hlt
push
in
push
pop
stos
adc
and
fs
mov
lock
sub
add
sbb
shrl
mov
jno
cmpsb
adc
daa
pusha
and
in
xor
mov
add
or
addr16
dec
les
lock
out
pop
pop
dec
cs
fsubl
pop
adc
ret
in
call
addr16
and
xor
xchg
sbb
push
xorl
pusha
movsl
mov
mov
mov
jl
mov
jno
int
mov
jns
inc
test
jb
sub
pop
lahf
mov
ss
ret
mov
or
in
sbb
lock
or
ds
aad
shl
add
stos
pop
mov
adcl
outsb
push
rorb
shl
call
add
adcl
les
sub
xchg
mov
pop
gs
jecxz
cld
fcoms
scas
movsb
push
mov
mov
and
fmull
jl
or
ret
mov
adc
mov
jo
mov
loopne
pop
add
popf
sbb
mov
mov
rclb
mov
and
pop
enter
dec
xor
push
push
and
movsl
hlt
insl
das
and
loop
popa
inc
lcall
push
ds
xchg
mov
push
cmp
dec
aad
punpckhwd
stos
aas
fimuls
push
pop
xchg
cmp
pop
cmc
loope
mov
ja
cs
mov
inc
xchg
pop
insb
push
xlat
or
fadd
pop
push
mov
mov
mov
add
nop
in
dec
dec
inc
jmp
adc
or
adcb
ljmp
pop
jmp
xor
inc
fs
pop
xor
test
push
pop
sbb
popf
mov
sub
adc
push
repz
fisttps
fbstp
pop
sbb
mov
shlb
or
push
cld
ja
into
call
ret
fwait
lods
lret
frstor
cltd
sar
pusha
jnp
mov
cmp
mov
ds
fwait
mov
jle
dec
lret
ss
in
dec
aad
lahf
bound
cld
sbb
fsubr
fidivs
push
nop
icebp
pop
jge
mov
es
jmp
jne
popa
das
faddp
stos
xchg
cmp
push
cmpsl
adc
push
scas
mov
mov
ret
jne
sahf
ret
ss
sbb
push
lahf
lret
mov
mov
jno
fnstenv
add
xchg
lea
dec
pop
fwait
add
jl
dec
mov
insb
push
mov
xchg
loope
inc
mov
dec
loopne
and
mov
fidivrs
out
and
call
add
push
sbb
add
sbbl
mov
scas
mov
popa
inc
call
aam
fimull
jmp
push
loop
jmp
add
cmc
loopne
xor
push
xor
mov
in
adc
jbe
adc
outsl
jp
clc
sti
cs
mov
scas
dec
push
aas
cltd
or
inc
je
add
cmp
add
pop
lahf
inc
mov
and
push
add
mov
movsb
xorb
imul
ds
arpl
insl
inc
mov
push
and
pop
and
jno
xchg
and
cmpsb
in
enter
dec
out
or
sti
int
mov
jnp
in
movsb
test
lcall
popa
jp
lcall
pop
cmpsb
jge
cld
stos
lret
fwait
popf
js
out
adc
bound
push
mov
movsb
cmpsb
lret
inc
cmp
mov
aas
and
or
movsl
rorl
cmp
hlt
add
nop
lods
lock
pop
jle
fs
jecxz
push
ss
into
outsl
mov
popa
push
test
jne
mov
mov
daa
lret
pusha
pop
insb
loop
adc
xchg
not
pop
sbb
cmp
lret
add
aam
aas
mov
lds
sbb
inc
jno
adc
push
lea
xlat
scas
das
adc
mov
nop
pop
add
cmp
imul
jo
mov
cli
xchg
in
fdivp
test
inc
and
insb
lret
call
out
rclb
xor
sbb
gs
jmp
push
ljmp
lock
enter
xlat
jl
mov
sbb
or
xor
addl
push
cld
adc
xchg
add
xlat
and
sub
xor
mov
lcall
push
jp
pop
cmp
fs
dec
push
popa
jl
mulb
push
mov
pop
dec
leave
cli
sub
lret
push
into
add
scas
jecxz
mov
push
jp
xlat
loop
mov
adc
xchg
push
popf
in
outsl
pop
out
call
cmpsl
inc
cmpsb
jns
and
test
adc
lret
pusha
das
fidivl
add
push
aaa
jle
xchg
sub
add
adc
into
mov
xchg
iret
xchg
pop
cmp
jg
or
cmp
or
or
aas
clc
adc
adc
xor
out
insb
adc
ljmp
pop
pop
scas
lods
cmpsb
and
aad
pop
cld
dec
stos
push
nop
lahf
jb
xor
lea
push
outsb
sahf
in
ja,pt
pushf
pushl
lcall
repz
add
out
ss
mov
fwait
div
cmpsl
lahf
xchg
or
mov
int3
popf
fistpll
movsl
push
xchg
test
xor
adc
in
lahf
iret
xlat
mov
cmp
daa
movsl
cmp
dec
faddp
or
mov
stos
scas
fnstsw
pushf
call
jne
xchg
or
pextrw
pop
mov
push
nop
mov
mov
add
adc
mov
shlb
mov
cmp
xor
inc
sahf
cmpsl
fsubs
repz
inc
and
aaa
loop
push
jmp
ficoms
mov
push
or
lcall
insl
adc
mov
push
add
mov
push
inc
loope
cmp
jb
std
push
xor
test
cmc
lods
mov
sbb
mov
rcll
lock
and
xchg
pushl
jne
adc
neg
nop
mov
sbb
sbb
sub
call
repz
aad
dec
mov
mov
int3
cmp
mov
daa
dec
out
sahf
mov
popa
test
jge
xlat
mov
subl
jo
push
cmp
mov
stos
adc
hlt
jae
xor
add
loopne
xchg
jns
dec
aaa
das
mov
xchg
mov
lret
push
fbld
and
xchg
sbb
and
xor
mov
sbb
cmp
cld
xor
add
jg
out
loopne
or
adc
out
fiadds
mov
mov
inc
inc
cmp
cwtl
mov
repnz
xor
fsubs
inc
dec
inc
das
adc
ret
add
lds
or
stos
lock
dec
sbb
sub
push
arpl
jnp
call
inc
addl
jo
outsl
sub
jne
inc
arpl
out
xchg
sub
jl
lahf
xchg
jbe
inc
xchg
mov
dec
jnp
add
lahf
xchg
add
mov
cld
enter
pop
push
mov
sbb
mov
inc
push
lea
pop
dec
inc
pop
iret
lods
jnp
jno
jns
std
out
xchg
inc
push
addr16
cmpsb
mov
push
pop
sti
addr16
sbb
aam
hlt
inc
push
jp
or
add
jb
adc
pop
test
xlat
and
inc
mov
push
clc
clc
inc
xor
dec
popa
adc
lods
scas
pop
dec
xchg
fistpl
rolb
xlat
movsb
mov
lcall
mov
int3
cmp
mov
cli
les
cmp
rol
shlb
xchg
jns
mov
loopne
inc
dec
sbb
pop
leave
and
adc
daa
sbb
lahf
pushf
jp
movsb
scas
adc
adc
push
pop
jb
xchg
es
movsb
xchg
pop
repnz
daa
dec
imul
or
add
push
add
shlb
lods
mov
int3
dec
push
mov
addr16
sbb
xor
cmpsl
fists
mov
adc
mov
add
push
add
leave
and
mov
push
stos
mov
mov
or
or
dec
xor
sarl
xor
es
loopne
jbe
sbb
ret
loopne
loopne
add
pop
cmp
dec
xchg
adc
int
fisttpll
mov
lock
ss
daa
push
pusha
dec
jp
push
mov
fwait
mov
outsb
out
mov
mov
aad
xor
popf
xor
adc
xor
push
and
aaa
pop
pop
dec
cs
icebp
fiaddl
scas
push
fsubrl
fidivrs
mov
lods
loopne
add
mov
push
lds
sti
lahf
sub
xchg
inc
xor
out
inc
mov
jnp
xchg
add
imul
cltd
stos
stos
push
push
subb
mov
mov
xchg
or
xor
and
lret
mov
loopne
aam
adc
icebp
jb
pop
cmp
leave
cltd
jge
pop
cmp
dec
lret
shlb
jb
jbe
cli
inc
or
stc
insl
sub
popa
and
mov
fmul
push
stc
cmp
sbb
movsb
xchg
push
pop
fildl
neg
push
inc
notb
xor
mov
push
mov
inc
xor
or
mov
mov
adc
jae
imul
xchg
mov
outsb
mov
or
add
cwtl
imull
add
mov
int
and
pop
dec
jmp
cmc
or
mov
jecxz
test
in
jge
adc
push
lods
imul
mov
jge
cmpsb
call
ss
lds
adc
or
or
ljmp
cltd
orb
push
push
imul
lahf
inc
mov
push
and
gs
push
aam
out
cwtl
adc
daa
jb
outsb
mov
popa
movsl
cmp
xor
es
or
fisttpll
ret
pop
push
outsl
or
lret
enter
outsb
cmc
cs
movsl
adc
jo
dec
cmp
ljmp
iret
fiadds
sub
mov
adc
fs
or
pop
adc
mov
std
movsb
pop
loope
or
cmp
jl
push
imull
notb
xchg
jns
push
inc
daa
xchg
sub
push
std
jnp
jne
xchg
jno
mov
pop
andb
int3
test
push
add
add
ljmp
in
or
fisttps
je
shll
insb
nop
ss
test
leave
decl
popf
scas
outsl
fcmovu
add
mov
mov
pop
mov
ss
mov
add
lock
xchg
cmc
push
sub
hlt
cs
pop
inc
mov
stos
inc
xchg
aaa
xlat
popw
adc
cli
xor
dec
loopne
and
or
inc
jmp
xlat
mov
pop
popa
std
leave
loopne
or
sub
sarb
arpl
in
push
jo
out
cs
and
add
test
flds
jbe
lahf
pop
addr16
pop
pusha
ljmp
xor
fmuls
in
cmc
out
mov
and
push
or
adc
jmp
xchg
add
insb
filds
icebp
std
popa
cltd
adc
sbb
dec
push
test
cs
dec
addl
repz
mov
fs
popa
popf
pop
push
sub
push
ja
in
mov
sbb
ret
cmpsb
lahf
mov
mov
cmpsl
sub
sub
mov
xchg
das
and
jecxz
shr
jnp
lods
pop
jae
hlt
dec
loope
outsb
pushf
xchg
fucomi
mov
frstor
fisubs
sub
xor
inc
jle
movsl
mov
lahf
mov
lock
ljmp
lahf
lods
popl
lds
pop
cmp
scas
insb
in
dec
into
repnz
stc
pop
sahf
hlt
inc
mov
lret
and
das
mov
hlt
jnp
mov
and
fbstp
jno
xor
or
jge
adc
lret
je
test
push
mov
repnz
xor
out
addr16
jmp
mov
imul
jo
mov
cmp
jl
mov
pushf
movsb
stos
pop
pop
mov
cmp
fwait
add
pcmpeqb
mov
imul
test
jmp
mov
mov
jns
out
fwait
int
push
and
and
sub
jne
aaa
ret
movsl
orl
scas
stc
jle
js
bound
dec
leave
dec
js
mov
jbe
outsb
mov
inc
dec
adc
xchg
or
inc
jmp
fmuls
test
pop
ss
clc
lods
stos
popf
imul
mov
pop
xchg
xor
dec
inc
push
xor
cmp
cli
imul
push
fsubs
lahf
daa
xor
jne
ss
imul
xor
test
andl
sub
mov
xchg
mov
or
adc
and
xor
dec
sbb
mov
lea
ret
or
jge
cmp
test
push
insl
mov
fildl
jnp
lods
push
dec
popf
push
add
jns
adc
sbb
icebp
dec
dec
pop
js
iret
xor
inc
inc
mov
outsb
pop
jle
xor
add
pop
jnp
push
aad
add
mov
fdivl
mov
pop
sahf
xchg
fcmovbe
jle
bound
leave
sarb
mov
cwtl
sbb
jns
test
cwtl
jns
adc
mov
lret
aam
test
sarb
pushf
push
push
adc
inc
shlb
aam
mov
xlat
pop
addl
lods
inc
test
fidivl
mov
faddp
arpl
lds
mov
mov
mov
test
enter
in
or
mov
or
jno
mov
sub
out
es
pop
aad
pop
pop
leave
push
xor
cmpl
sbb
push
dec
inc
pop
test
das
outsl
call
ja
push
xchg
sti
mov
les
gs
dec
dec
sub
repz
xor
andl
pop
jl
lock
cs
xchg
cmp
pop
dec
fidivl
fbstp
stos
push
or
in
dec
or
hlt
xor
outsb
mov
dec
fisttpll
inc
repnz
jnp
mov
shll
ja
std
mov
jge
dec
flds
fstpt
add
mov
std
dec
adc
sub
mov
push
inc
pop
test
xor
mov
xchg
jmp
push
sub
sub
mov
jp
jmp
or
aaa
and
mov
fcmovu
ficoms
adc
mov
mov
popa
out
or
jle
rorb
jmp
push
pusha
jo
cwtl
int3
pop
outsb
jl
mov
xor
repz
pop
repz
add
wbinvd
pushf
lret
lea
out
mov
add
jmp
les
adc
mov
les
fdivl
push
es
in
cli
jp
js
push
sti
jno
inc
jp
sub
je
mov
pushf
pop
add
mov
xor
sub
xchg
xchg
add
mov
aaa
dec
jmp
ffree
push
push
xor
mov
dec
scas
add
fbstp
loopne
inc
cmp
push
aaa
les
push
mov
pusha
pop
cmp
lods
scas
icebp
mov
xchg
push
or
mov
leave
adc
fcompl
aaa
cwtl
push
and
popf
ret
mov
mov
pandn
cmp
lahf
inc
sbb
pop
and
xor
jl
inc
adc
inc
and
xor
jb
filds
pop
adc
out
dec
cmp
outsl
jno
std
insl
and
sub
dec
jle
movnti
dec
lods
push
and
rolb
jae
xchg
push
in
xchg
sub
xchg
sub
test
scas
mov
shlb
mov
aam
scas
mov
pusha
jle
sbb
mov
push
outsl
dec
sbb
test
push
push
pop
xor
outsb
adc
mov
cmp
mov
test
xor
and
jmp
imul
or
mov
ljmp
mov
push
cmpsb
sub
inc
pop
fdivl
mov
pop
jecxz
out
fsubp
rcrl
cld
cmpsl
test
out
adc
pop
xor
in
cli
pusha
sub
ss
test
aam
lock
fcompl
cltd
cmp
lods
push
repnz
fnstsw
pop
cmpsb
sahf
in
fcompl
imul
xchg
insl
repz
sub
and
arpl
sti
jge,pn
lret
jno
and
repz
out
out
imul
mov
jae
into
inc
jecxz
pop
cwtl
cmpsl
push
pusha
pop
pop
out
jg
cmp
push
add
pusha
call
adc
dec
shll
push
inc
lret
cmc
das
push
insl
cmc
fiadds
pop
movsl
int
pop
mov
cwtl
cmp
or
imul
fstpt
arpl
in
xlat
or
xchg
jo
cmpsl
jp
test
and
push
push
cmc
lret
pop
cmpsb
push
fidivl
lret
adc
test
add
push
andb
sub
clc
xchg
push
pop
js
sbb
xchg
sbb
testb
insb
adc
mov
inc
pop
repnz
nop
push
loopne
divl
add
insb
cmp
xorb
fsubl
movsb
jle
aam
sbb
dec
fldenv
fildll
out
cltd
xor
push
in
outsl
test
mov
jo
adcl
inc
outsb
adc
mov
pop
inc
movsb
lcall
xor
daa
ja
adc
cmpb
out
out
xchg
les
pop
xchg
in
pop
jno
xchg
jmp
inc
add
jl
nop
divb
mov
or
loopne
adc
call
mov
cmp
sbb
jmp
jmp
mov
jnp
icebp
and
mov
cmp
pop
js
jne
mov
sub
xor
fistpl
stos
in
cmp
or
ficompl
in
inc
fstl
cmpl
inc
popa
fldcw
adc
sub
push
bound
or
out
add
jecxz
or
test
jle
lods
xor
mov
cwtl
icebp
test
imul
bound
dec
push
sub
push
cs
jno
loope
and
push
jo
push
cmp
hlt
fldcw
mov
adc
lcall
aad
adc
adc
test
xor
or
lcall
test
repz
push
jno
mov
adc
pusha
sub
add
fwait
cmp
sbb
pop
mov
push
jmp
jnp
mov
lret
mov
jb
lahf
xchg
mov
push
test
cmp
ja
lock
js
cmp
and
je
adc
pop
and
shrl
xor
lods
test
lret
imul
xor
mov
in
or
nop
sub
lods
or
rolb
push
popa
sbb
ficoms
imul
movsb
jne
fidivs
ficoms
add
jo
sub
adc
test
mov
sbb
aam
enter
and
pusha
lock
sub
fmulp
push
jecxz
jb
sbb
movl
sub
std
lods
aam
in
fdivs
fiadds
push
rolb
jae
dec
popa
lcall
fwait
xor
pop
cltd
stos
std
push
cmc
cmp
sub
minps
dec
cmc
es
sbb
mov
hlt
mov
mov
mov
outsb
out
or
inc
adc
test
in
out
adcl
push
fiaddl
nop
inc
lods
push
or
mov
inc
nop
shll
hlt
jnp
repnz
or
push
push
mov
loopne
inc
daa
cld
iret
cld
mov
enter
jb
mov
pusha
scas
out
addr16
mov
es
test
push
or
bound
mov
xlat
fstps
and
shll
push
and
jb
sub
push
or
fwait
jmp
mov
outsb
sbb
stc
aad
push
ss
scas
jnp
lret
and
arpl
push
adc
jl
in
sbb
sti
push
mov
decl
or
faddl
push
sbb
push
int
sti
lret
xor
cmp
leave
pushf
xor
or
sbb
aad
push
es
popa
int
es
incl
aas
stc
lret
insb
jg
repz
divb
jo
popa
sub
inc
push
lret
pop
and
out
fsubr
repz
sti
repz
arpl
call
imul
cmp
push
xchg
xchg
pop
add
push
xor
and
mov
arpl
sub
jae
fstpl
cmp
jne
adc
daa
aad
mov
cmpsl
jnp
insb
inc
sahf
mov
sub
xchg
xor
jnp
and
insl
and
sub
cmc
jge
xor
add
or
lahf
idivl
cmp
pop
mov
subl
mov
push
aad
inc
test
lret
into
ret
js
mov
sahf
cld
add
sub
cltd
xor
cmpsb
fldenv
arpl
bswap
inc
xor
mov
ljmp
popa
pop
jecxz
mov
outsb
xchg
sbb
imul
out
inc
sub
lods
xchg
nop
cmpsl
mul
and
insl
imul
xchg
popw
sbb
movsl
bound
xor
xchg
push
sub
xrelease
fdivl
xchg
pop
and
sub
adc
dec
mov
jbe
sbb
lds
and
popf
inc
or
stc
xlat
aad
outsb
aaa
xchg
sbb
dec
mulb
cmc
repnz
gs
and
mov
adc
scas
mov
xor
push
shlb
cmc
ret
add
insb
adc
addr16
jno
scas
jl
addb
cwtl
sub
out
and
push
dec
bound
inc
subb
fcmovu
in
jg
and
push
imul
xor
mov
mov
test
mov
jmp
inc
lret
mov
push
lret
cld
lret
scas
ret
aaa
dec
inc
xor
push
inc
in
rcll
xlat
xchg
jg
xor
add
aad
xchg
mov
jb
push
push
push
pusha
add
push
mov
adc
dec
sti
adc
push
out
mov
xchg
mov
xchg
outsl
push
adc
enter
jecxz
pop
push
shl
pushf
mov
repz
mov
ret
or
pop
mov
stos
mov
and
xor
test
mov
shll
add
push
arpl
jnp
dec
pushf
mov
call
mov
ja
dec
xor
jno
mov
inc
pop
es
daa
addb
xchg
lret
add
mov
push
ss
out
sti
cmp
jnp
push
arpl
movsb
js
sbb
jle
out
mov
pop
dec
scas
mov
outsl
xor
lock
mov
mov
fwait
dec
sub
xor
adc
je
cmpsl
xchg
mov
leave
lds
mov
xlat
mov
add
or
mov
and
insl
mov
cmp
sub
icebp
mov
and
out
cmp
jmp
aaa
mov
pop
jge
push
xchg
dec
test
ja
xor
lock
scas
mov
or
sbb
and
mov
jns
sbb
dec
cwtl
xchg
pop
aam
lcall
ljmp
push
pop
sbb
in
sub
dec
fstpt
inc
les
push
jno,pt
cmp
into
roll
addr16
push
jmp
addb
shrl
out
iret
jnp
stos
mov
or
add
xchg
jmp
orl
or
test
test
adc
outsl
fbstp
inc
inc
decb
push
adcb
jmp
xor
pop
lret
out
inc
mov
dec
pop
xchg
aam
mov
push
or
test
or
jl
cmc
je
add
add
dec
fisttps
xchg
jp
loope
mov
imul
sbb
lods
int3
sahf
ja
mov
je
fimull
cmp
jge
jne
inc
push
test
push
int3
jb
call
scas
xor
imull
aas
jmp
addr16
ja
js
adc
push
pop
inc
test
mov
and
sbb
in
sbb
shl
add
sub
mov
mov
and
dec
pop
mov
sarl
pop
lahf
sbb
dec
adc
fwait
lods
pop
arpl
das
xchg
lcall
xor
add
enter
inc
sbb
nop
jns
and
sbb
nop
out
add
push
add
and
jb
push
ljmp
out
loopew
push
enter
test
and
adc
xor
rclb
mov
and
lock
jecxz
jle
enter
sbb
leave
add
push
mov
cmp
or
icebp
dec
fisubrs
mov
cmp
pop
adc
and
loope
sbb
je
mov
daa
mov
cmp
mov
out
and
pop
mov
lds
sti
addr16
or
fadd
cld
sti
cmc
nop
mov
repnz
nop
jl
mov
push
stc
iret
std
mov
pop
add
mov
stc
scas
js
adc
jns
lock
xchg
mov
lcall
cmpsl
fcoml
rorl
je
stos
sbbb
and
or
enter
sbb
mov
arpl
push
outsl
lea
imulb
push
aad
mov
lods
adc
sub
es
testb
xchg
cwtl
mov
and
pop
add
out
leave
stc
stos
mov
sub
imul
int3
popa
xchg
jb
mov
bound
std
hlt
test
jbe
je
out
cmpl
pop
in
dec
in
pop
or
push
push
inc
push
clc
repnz
lods
das
lods
cli
sbb
mov
pop
cmp
stos
cmp
dec
mov
cmc
dec
popf
pop
int
cld
mov
ljmp
mov
mov
and
jo
add
in
mov
mov
nop
fildl
andb
lret
or
iret
push
sbbl
sub
pop
and
cltd
xor
stc
ficomps
xlat
cmp
arpl
add
and
lahf
adc
fstps
push
push
adc
in
pusha
sbb
or
push
jle
jle
dec
test
stc
mov
jge
lods
mov
jge
mov
pop
mov
mov
adc
xchg
jle
mov
movsb
and
adc
insl
mov
xor
mov
imul
testl
aas
or
sub
jo
push
mov
gs
lret
addr16
cmp
sub
push
pop
lret
stc
adc
in
insl
mov
mov
rorb
jbe
mov
mov
xchg
inc
pushf
daa
mov
pushf
or
adc
call
sub
add
sub
jno
repz
cmp
and
out
stc
dec
sbb
in
outsb
clc
inc
cli
xchg
sub
push
xchg
jo
dec
out
push
fsub
pop
jns
stos
sahf
mov
std
push
sti
loope
xorb
mov
jmp
pop
dec
sahf
jb
ret
bound
inc
inc
daa
lcall
jbe
das
addr16
xor
lods
sbb
dec
ds
or
push
dec
add
mov
mov
cmp
pop
mov
loope
popa
or
xchg
repz
jo
inc
inc
mov
dec
push
js
cwtl
icebp
push
mov
inc
insb
imul
mov
ss
cmpsl
dec
mov
inc
scas
test
xchg
mov
cmp
aas
add
in
imul
add
push
outsl
out
fdivrl
inc
icebp
xchg
adc
jb
std
adc
mov
or
or
popa
dec
push
cld
fistpl
cmpsb
add
push
sbb
mov
xchg
shr
or
xchg
add
out
out
sbb
mov
cmp
pop
cmp
jbe
shlb
adc
scas
xor
pusha
inc
jnp
popa
adcl
dec
pusha
sbb
sbb
shlb
les
xchg
adc
jns
fdiv
lret
mov
sarl
or
pop
sub
push
inc
sbb
sti
or
xor
icebp
xor
mov
push
inc
ret
inc
fldl
dec
jmp
loop
nop
paddq
roll
mov
sub
test
shlb
mov
es
subb
mov
sbb
sarb
push
and
call
stos
jb
push
movsb
and
mov
or
gs
pop
je
sub
ljmp
ret
dec
iret
idivl
leave
adc
repz
stc
adc
push
add
js
ljmp
cld
mov
cmc
imul
inc
and
repnz
xchg
clc
xchg
or
mov
inc
adc
popf
sub
pop
notb
push
push
jle
and
pop
jmp
mov
test
jmp
pop
mov
sti
dec
sbb
jo
ljmp
jns
in
mov
xchg
fnstenv
fstpl
data16
out
shrb
jno
or
ret
sahf
sbb
pop
mov
xor
dec
mov
mov
xor
mov
jb
mov
xchg
or
or
xchg
sti
mov
pusha
lret
xor
cmp
sbb
lret
pop
inc
cwtl
jae
dec
fld
faddl
push
push
push
leave
push
int3
sbb
daa
cltd
mov
cmp
mov
and
jecxz
int3
xchg
lods
jl
lahf
sub
cld
jl
xchg
push
adc
add
jns
push
inc
mov
xchg
rol
dec
addr16
mov
sbb
jno
fistpl
pop
or
gs
add
stos
out
cltd
movsl
popa
pop
out
add
jp
dec
dec
sbb
cmp
inc
mov
inc
stos
lret
jns
enter
lcall
push
rcrb
subl
lea
pop
xlat
pop
push
or
pushf
ja
inc
ss
xchg
or
ret
or
addr16
xchg
clc
cmpsb
pop
lea
dec
pcmpgtw
outsb
push
pop
stos
loopne
pusha
sahf
cmc
shll
fisttps
std
inc
imul
pop
sub
pop
mov
data16
mov
adc
cwtl
imul
pop
and
jmp
sbb
xchg
dec
jg
sahf
popa
flds
test
adc
mov
test
push
or
or
mov
mov
fidivl
repz
sub
ljmp
cmp
jns
adc
cmp
dec
push
dec
outsb
jge
xor
les
jl
cmp
shrb
insb
xchg
and
push
das
dec
in
push
dec
inc
inc
mov
mov
xor
xor
leave
sbb
sbb
sbb
xor
push
sbb
movsl
ret
loope
test
push
insl
jno
ja
push
ss
loopne
dec
jg
mov
out
dec
popa
scas
int
addb
inc
aas
inc
add
repz
ja
adc
cmp
mov
aam
cmp
jns
xchg
test
fucomp
insl
pop
jmp
or
push
mov
lahf
add
pop
insl
adc
out
mov
inc
test
dec
into
mov
mov
dec
pop
pop
inc
pop
add
mov
mov
pop
cmp
insb
and
inc
dec
or
jae
sahf
dec
inc
popf
std
data16
int
mov
scas
enter
jp
push
mov
cli
shll
cli
mov
scas
cvttps2pi
xor
xchg
pop
imul
repz
cmp
call
or
cmp
mov
mov
inc
insb
daa
sbb
cmpsb
test
popa
adc
stos
push
pushf
loopne
mov
jo
xlat
xchg
imul
gs
sbb
push
pop
sub
jnp
and
jge
xlat
ds
rol
pop
sub
test
sub
mov
stos
xorl
repnz
mov
push
sub
lea
inc
pushf
imul
loop
xchg
cmp
inc
pop
cmp
mov
push
imul
pop
arpl
hlt
adc
cs
fsts
or
adc
lods
mov
addr16
insl
mov
mov
dec
xchg
pusha
mov
jp
sti
movsb
pop
xlat
mov
sbb
lock
cmp
sbb
mov
xchg
aaa
fcoml
and
xor
xchg
mov
mov
stos
jg
cmp
shl
test
lods
ss
or
mov
xor
sti
out
fdivrl
mov
cld
sbb
jl
shrl
cmp
push
fiaddl
xor
jmp
push
add
jno
int3
mov
lea
shl
and
xor
jne
fsubl
lret
cmp
lret
jo
dec
cmp
sbb
push
cmp
push
divb
stc
fs
sbb
lret
call
dec
dec
sub
or
repz
pop
sbb
push
out
cmp
pop
mov
je
je
testb
adc
add
or
rcl
popa
push
aam
shl
jns
insl
out
adc
in
dec
jns
les
add
cmp
je
leave
mov
out
idivb
outsl
cli
out
fidivrl
sbb
cmp
imul
lods
out
add
inc
and
test
pusha
ss
push
pop
aaa
sbb
push
xor
cltd
fistpl
adc
mov
cltd
mov
out
dec
out
mov
stos
sahf
nop
cmp
mov
js
jo
and
repz
lcall
nop
mov
imul
mov
lcall
xlat
sbb
hlt
pop
sbb
cmpsb
dec
and
pop
adc
push
xor
sbb
aad
roll
cmp
dec
jbe
popa
jp
int
adcb
out
lods
adc
cmp
stos
xor
cmp
out
jb
jge
sti
xchg
aam
dec
inc
jbe
pusha
scas
mov
les
mov
shlb
push
rcrb
das
mov
push
pop
int3
xchg
in
fs
fstps
xor
xor
and
dec
int3
push
sbb
nop
push
out
cmp
outsb
mov
lea
ja
lret
and
mov
shrl
push
or
loop
mov
cltd
cmpsb
mov
lock
pop
add
pop
jge
pop
rorl
mov
and
add
dec
loop
mov
mov
push
mov
cld
xor
mov
lods
ffree
dec
push
nop
sbbl
mov
lods
xchg
pop
lock
scas
out
jae
push
lret
mov
add
ss
test
sar
xchg
movsl
sub
mov
add
cmpsl
adc
push
aad
xor
imul
inc
cmc
add
js
mov
push
sbb
cmpsl
mov
push
push
sub
cmpsl
lods
sbb
xlat
fsubrl
dec
lahf
mov
jmp
iret
sahf
test
cli
sbb
cmp
adc
xchg
xor
ja
and
loopne
push
ljmp
cmc
cmpsb
mov
jecxz
xchg
sub
call
scas
aaa
jbe
dec
push
dec
aad
movsb
or
fsubrl
pop
ss
ja
xchg
cltd
fidivrs
sbb
sub
push
mov
std
out
jle
sub
adc
fwait
jg
sub
dec
vpunpcklqdq
sti
outsl
inc
fwait
mov
fst
xor
gs
ja
jno
ljmp
lahf
inc
cli
dec
mov
add
or
push
sahf
cwtl
out
lods
mov
xchg
xchg
insl
movsb
and
xchg
push
inc
lcall
pop
push
xchg
inc
lds
outsb
add
push
data16
mul
sbb
loopne
mov
pop
outsb
push
cmc
fidivrs
xor
jmp
jbe
inc
add
cmp
inc
dec
int3
mov
mov
jmp
aas
sahf
cmp
fucom
mov
test
xor
mov
mov
in
out
mov
pushf
ret
shrb
leave
ret
xlat
mov
sbb
mov
int
cmp
ret
clc
xor
pop
dec
jnp
lcall
xor
insb
loop
int3
sti
xor
xchg
popa
pop
pusha
mov
jnp
into
imul
push
mov
push
xor
xor
sub
in
pop
int3
nop
enter
cmp
and
push
push
cli
sbb
loope
fdivrs
test
cltd
jne
push
scas
pop
push
cs
subb
sub
push
scas
push
out
cmc
mov
and
loope
aam
mov
lahf
shlb
out
test
inc
or
fldt
push
repnz
xchg
jb
les
je
mov
cmp
mov
das
test
into
cltd
rclb
out
ficompl
sub
jg
mov
insl
pop
and
gs
shrl
gs
int3
popa
mov
inc
cld
decb
adc
sub
dec
out
adc
in
pop
sbb
pop
push
out
jb
std
jnp
std
sub
xor
lock
les
movsb
int3
lret
outsb
pop
in
sub
cmp
xchg
add
cmpsl
pop
les
inc
cmp
dec
rclb
xchg
push
shrl
lret
xchg
std
cmp
adc
pop
std
das
pusha
xor
pop
adc
or
das
wrmsr
dec
cmp
mov
fs
ss
xor
adc
inc
jnp
out
or
movsb
dec
fisttps
mov
cmp
jne
pop
inc
ljmp
pop
in
notl
xchg
cmpsb
mov
jecxz
push
cmp
adc
push
fdivrs
adc
pop
jmp
jnp
pop
and
or
sub
jae
pop
sbb
jge
jecxz
cmp
sbb
cmp
movsb
sub
daa
push
push
and
mov
xchg
xchg
jb
push
daa
and
les
push
and
out
je
in
test
jge
pop
iret
shlb
xor
push
movsl
out
adc
push
mov
rcl
inc
ret
mov
cwtl
hlt
sub
cmc
inc
adc
call
jle
or
idivl
jp
icebp
mull
mov
jge
outsb
test
ss
lcall
adc
fwait
cltd
xlat
jp
out
push
inc
je
pusha
fwait
cmpsl
insb
jmp
aam
aam
imul
mov
int
in
dec
inc
sub
subb
jmp
inc
mov
cmp
dec
pusha
mov
movsb
xchg
jne
scas
inc
inc
pushl
jae
jnp
pop
addr16
xor
ljmp
std
lar
mov
addl
lret
pop
pop
insb
mov
sahf
orb
scas
cmpl
pop
dec
push
jno
fsubp
test
push
pop
loopne
mov
dec
lret
enter
loope
stc
stos
testb
aad
pusha
je
ja
lods
stos
mov
shll
inc
enter
inc
in
lea
sub
bound
nop
jbe
das
dec
daa
xchg
sar
or
mov
les
push
stos
jne
pop
push
jno
mov
jo
icebp
fstl
roll
fstl
outsb
std
cmp
repz
add
mov
pusha
hlt
movsl
int3
inc
and
sub
repz
or
push
push
sub
mov
adc
mov
dec
dec
adc
imul
cmpsb
sbb
jl
dec
sub
aaa
sub
add
push
fwait
test
fcompl
xor
sbb
dec
pushf
aam
int
movsl
mov
mov
iret
stc
jo
add
or
sbb
mov
std
lret
sbbl
out
scas
add
fwait
xchg
sbb
dec
popa
jmp
push
lods
cwtl
mov
cltd
int3
jns
sub
adc
xchg
or
cli
pop
inc
mov
in
or
andl
gs
in
in
imul
pushf
xor
lods
sub
xor
mov
xchg
cmpsb
xchg
iret
xor
xchg
fwait
xor
xchg
lods
jp
pop
inc
mov
add
lock
push
out
or
dec
mov
divb
inc
fnstenv
push
push
ret
sbb
inc
adc
int3
cmp
jb
and
or
ds
out
jg
test
ret
out
mov
mov
cmc
in
shll
fidivrl
imul
int3
imul
lock
jb
popf
push
xchg
fwait
incl
pop
fmuls
orl
int3
dec
cmp
sub
cmc
push
int3
ror
and
shr
je
push
testl
movsb
cmp
push
bound
add
dec
add
cld
stos
pop
jb,pt
add
loope
addb
sub
or
push
mov
jge
cmp
sahf
xlat
adc
repnz
shrl
repnz
mov
xor
inc
ror
divl
aaa
xchg
leave
adc
mov
or
ret
or
pop
repnz
mov
jo
inc
push
cmpsb
cmp
push
sbb
mov
cs
adc
mov
adc
cltd
ret
lret
lret
les
cld
fwait
cmpsl
mov
and
inc
rcl
push
push
xchg
scas
adc
pop
inc
push
data16
cli
bound
jecxz
clc
pop
or
add
sub
mov
mov
sbb
dec
mov
lock
hlt
je
scas
pop
imul
pop
mov
pushf
add
add
inc
xor
ds
push
jmp
pop
jnp
add
out
out
insl
cmp
call
cwtl
push
nop
xchg
cmp
test
dec
inc
leave
jns
jp
ftst
hlt
stos
xchg
jmp
mov
and
outsb
loopne
arpl
jl
int3
lods
jle
fnstenv
stos
mov
and
dec
xor
add
sbb
lods
xchg
jne
lcall
jns
les
rcll
in
mov
jnp
call
cmpsb
hlt
aad
inc
mov
sbb
test
add
fisubs
cwtd
dec
popf
fcoms
mov
divb
shlb
xchg
js
ds
lods
cwtl
fildll
insb
aad
xchg
loope
int3
outsb
nop
out
and
sbbb
push
out
adc
clc
pop
dec
inc
ss
dec
cld
rcr
rorl
out
je
pusha
mov
sub
loope
jns
stc
push
sbb
pop
hlt
push
sbb
xor
movsl
xor
xchg
sti
sbb
imul
lock
test
xchg
loop
jnp
dec
xor
cwtl
push
fisttpll
dec
xchg
inc
movsb
andb
push
cld
out
sarb
subl
jb
push
jb
jnp
add
mov
push
aas
adc
xor
adc
and
popa
hlt
sub
pushf
push
jo
pop
fisttpl
add
scas
jmp
mov
popf
cmp
out
jae
push
sbb
and
and
es
mov
add
inc
jns
sub
imul
adc
mov
mov
aam
int
pushf
adc
push
movsl
cmpsl
mov
push
pop
mov
mov
push
movsl
insb
lmsw
idiv
add
ss
fwait
push
ficoml
jbe
mov
dec
movsb
daa
mov
int
sbb
aam
outsl
fwait
sub
jecxz
push
rcrl
lret
fistpll
add
flds
popa
nop
fs
popf
into
sub
test
xchg
adc
scas
pop
mov
xor
mov
loope
dec
jg
mov
jle
int3
xor
xor
outsl
test
into
pushf
das
shll
or
mov
mov
inc
adc
adc
outsb
shl
addr16
out
fadd
stc
jbe
sub
sbb
push
push
mov
das
lods
std
mov
mull
imul
push
popa
jb
stc
mov
jo
and
insl
push
mov
into
mov
sub
xlat
push
imull
dec
sti
call
and
mov
rol
popa
call
test
mov
xchg
or
cmpsb
jbe
pxor
pop
push
xchg
adc
sub
aaa
dec
push
inc
loopne
mov
loop
loop
cmp
testb
push
xor
out
pop
mov
push
pop
int3
fucomip
adcl
out
add
or
adc
or
dec
mov
repz
xchg
rclw
shlb
dec
icebp
rorb
mov
mov
sbb
lahf
mov
or
add
push
and
shrb
call
xchg
sbb
xor
adc
pop
push
adc
or
and
popf
mov
or
cmp
cs
les
jno
adc
fistpll
mov
mov
out
mov
fnstsw
xor
and
mov
fdivrs
insb
cld
arpl
repnz
cs
jnp
pusha
pop
out
jb
mov
ds
addr16
or
out
fcompl
cmp
iret
xlat
mov
ljmp
outsb
les
jns
aaa
push
mov
jns
cmpsl
dec
push
pop
repz
stos
xlat
and
fisubrl
in
data16
mov
xor
push
inc
cmp
enter
out
jno
sbb
popf
outsl
mov
aaa
xchg
fcoms
mov
add
and
pushf
jnp
aad
add
push
cmp
mov
sbb
sbbb
gs
jle
jmp
mov
push
xlat
cmpsl
inc
push
add
loopne
iret
mov
je
dec
cmp
pop
or
jo
dec
jge
out
mov
imul
mov
enter
ja
fsubl
hlt
insb
sub
js
mov
test
popf
into
stos
sub
std
into
cmp
jo,pt
sub
leave
pushf
hlt
cs
ljmp
cmp
clc
ret
push
mov
sbb
lcall
mov
adc
mov
or
sub
or
inc
dec
in
jo
lods
dec
aad
inc
push
lahf
lods
fidivs
pusha
jl
xchg
mov
pushf
enter
jae
jne
loope
or
pusha
mov
dec
xchg
or
leave
xchg
out
sbbl
movsl
pop
jle
loopne
add
pop
fidivrl
and
fiadds
out
out
aas
cltd
pop
sub
clc
int3
scas
das
out
aas
imul
dec
lcall
iret
jae
sbb
xchg
in
jecxz
xor
pop
outsb
lds
push
cmpsb
das
mov
mov
ss
sbb
jo
test
adcl
add
xor
popf
push
mov
test
cmpsb
std
xor
sub
adc
cmpsl
dec
mov
xchg
insb
mov
or
sub
mov
pop
xlat
sub
push
pop
mov
cmp
stc
in
lret
daa
pop
pop
orl
pop
xchg
pop
stos
sahf
push
fisttpl
stc
push
push
addr16
aam
adc
fs
sub
mov
add
push
dec
sbb
bnd
jg
ret
xor
dec
imul
fisttpll
push
std
adc
pop
gs
fidivl
mov
repnz
pop
aas
movsl
hlt
and
pop
setle
mov
jecxz
imul
and
adc
or
jge
cmp
sbb
jp
pushf
bound
pop
add
cmp
xorl
dec
dec
mov
push
outsb
dec
imul
lret
movsl
jl
dec
sub
aad
movsl
test
pop
movsl
dec
rcll
or
movsb
adc
pop
out
ds
inc
ss
jno
in
sbb
cltd
cmp
mov
mov
inc
mov
gs
popf
xor
rclb
clc
mov
xchg
pop
inc
pop
pop
in
loope
dec
dec
sub
sbb
and
cli
mov
xchg
mov
inc
int3
aam
sub
fwait
or
xor
mov
aad
popl
bnd
mov
pop
inc
bound
movsb
popa
pop
jmp
and
mov
mov
push
shll
xor
test
std
ret
out
push
cmp
cwtl
inc
push
and
xor
push
jecxz
dec
inc
dec
test
xor
divb
pusha
pop
addr16
jmp
fimuls
lret
sub
call
jne
outsl
push
inc
adcl
jmp
popa
push
fwait
dec
mulb
push
std
mov
sahf
std
and
cmp
out
and
stos
sbb
fwait
ja
pop
mov
in
sub
leave
popf
sbb
and
call
icebp
scas
inc
and
jmp
sub
xchg
inc
xor
and
imul
dec
jo
xor
mov
sub
mov
sahf
imul
inc
mov
mov
or
rol
repz
mov
cmp
stc
jge
ret
mov
mov
cltd
les
jno
inc
adc
aam
ljmp
sarb
cli
ffreep
enter
scas
shrl
xchg
gs
mov
test
cmp
or
outsb
popa
lock
outsb
test
aad
popf
adc
icebp
incb
inc
add
cmp
dec
fsubrl
sub
movsl
xor
ljmp
in
pushf
inc
in
je
jp
and
int3
out
imul
cltd
inc
stos
out
sahf
mov
push
rorl
leave
push
adc
mov
movsb
pop
cmp
pop
je
clc
push
ficompl
or
jecxz
sbb
cmp
jb
xchg
push
int
shl
xchg
std
in
adc
fistps
fidivrs
jge
sbb
lret
jecxz
jl
mov
or
inc
cmpsl
jbe
dec
pushf
push
mov
fimuls
out
cmpsl
mov
and
sbb
pop
inc
jmp
mov
out
mov
ds
push
dec
aam
outsl
in
adc
std
jle
add
jbe
adc
in
lea
push
les
mov
in
icebp
cld
scas
adc
lcall
xorl
loop
jmp
je
sub
and
xchg
lea
mov
imul
push
jo
push
lret
loope
xchg
js
pop
cmp
out
sbb
fdivl
pusha
adc
mov
sub
test
mov
or
repz
xchg
mov
push
inc
in
call
filds
push
iret
outsl
inc
fwait
clc
push
data16
adc
cld
fwait
pushf
jo,pt
or
push
in
xchg
sbb
lcall
cltd
cmp
sbb
jnp
movsb
dec
push
movsb
arpl
ljmp
cwtl
inc
inc
sti
adc
push
pop
dec
or
daa
add
lret
imul
inc
out
push
mov
inc
or
fst
movsl
leave
ror
xchg
push
jle
std
cli
jecxz
adc
incl
imul
xchg
int
or
mov
lock
loope
es
pop
mov
cmp
repnz
ret
out
jns
cld
dec
imul
mov
icebp
xor
cmpsb
addr16
jecxz
mov
hlt
out
sbb
rclb
cld
lods
mov
sub
stos
pop
mov
rcll
mov
inc
cmp
lods
das
sub
in
rol
bound
into
into
cli
sub
push
es
mov
lcall
mov
test
mov
ret
leave
out
or
shl
sbb
cmp
sub
pop
ja
xchg
jle
scas
ficompl
jo
jne
jns
pushf
jp,pt
adc
fildll
fs
or
daa
adc
mov
fstl
incl
push
fucomp
dec
cmp
push
cmc
sbb
xlat
cmpsb
popa
add
imull
or
clc
rorb
mov
xor
mov
lods
ja
and
inc
lea
pop
add
sub
xchg
push
int
mov
push
lds
add
pop
and
repnz
mov
out
addr16
xchg
fchs
movsb
and
and
rcrb
pop
leave
sub
inc
jmp
test
pop
dec
and
inc
daa
mov
idiv
xlat
stc
shlb
mov
xchg
jae
cmp
push
sbb
cmp
mov
xchg
inc
and
aad
insb
scas
inc
or
and
les
lock
aaa
loop
dec
fldcw
add
iret
test
sbb
xchg
out
sub
cld
mov
add
adc
cld
jmp
xor
inc
push
mov
mov
xor
in
mov
out
fmull
push
xor
pop
dec
cmp
ffree
shlb
faddp
mov
xor
test
subl
or
pop
fucomip
ret
push
xor
push
shl
clc
jns
rolb
xor
xchg
jnp
addl
das
into
test
mov
mov
inc
dec
push
push
imul
xchg
rcrl
punpckldq
cltd
cld
add
inc
xlat
shrb
jne
mov
push
insb
or
movsb
dec
pop
shrb
faddl
cltd
jmp
fs
out
sub
add
mov
cld
dec
outsb
inc
or
stos
fimull
out
push
aam
fdivr
push
orb
jg
mov
xchg
repnz
push
push
inc
notl
add
dec
xor
xchg
and
xchg
lds
push
imul
fcoms
jb
add
lods
mov
dec
pop
lret
sbb
xor
cli
mov
inc
pop
in
lcall
aad
test
in
icebp
push
enter
enter
xchg
sti
lods
mov
mov
jle
lock
pop
fidivs
icebp
cmp
cwtl
adc
mov
lahf
pop
shlb
mov
repz
out
out
and
adc
push
xchg
cld
push
test
test
stos
out
clc
pushf
out
shrb
imul
mov
inc
or
sahf
cld
pop
loopne
rolb
push
roll
cwtl
sbb
inc
push
jle
lds
xchg
in
andl
int3
pop
popa
lods
xchg
and
cmp
xchg
mov
dec
imul
fldenv
shr
test
test
push
lret
stc
pop
sbb
fimull
insl
mov
out
nop
mov
cld
sbb
dec
mov
ret
inc
pop
cmp
mov
jle
pop
xor
decl
ds
icebp
mov
xor
enter
jl
test
add
js
scas
xchg
add
fimuls
pushf
and
fists
xor
push
je
shl
adc
mov
adc
xor
cltd
scas
insl
popf
shr
mov
or
jno
push
pop
adc
adc
mov
adc
mov
pusha
lods
ret
mov
shlb
fistps
sbb
das
pop
loopne
inc
mov
adc
lods
jge
xchg
nop
fldl
cli
testb
test
imulb
dec
inc
xor
repz
aad
push
jo
lcall
sbb
cwtl
pop
sub
test
and
sub
lret
push
imul
inc
inc
popa
adc
cs
xchg
jge
fnsave
mov
cmpsb
fnsave
repnz
cld
fisubrl
filds
sbb
scas
lods
sbb
dec
fstl
adc
xor
mov
clc
inc
addl
jl
jl
and
pop
or
mov
scas
sahf
mov
jo
fstl
lock
jp
mov
mov
adc
pop
iret
xchg
shll
ficompl
rolb
jmp
aam
or
ljmp
leave
test
bound
push
sbb
sbb
mul
pop
push
dec
mov
loope
sahf
les
les
mov
pop
or
pop
data16
dec
cmp
sbb
and
shl
fcmovbe
popf
insb
ja
pop
insl
dec
xchg
in
in
inc
popf
push
int3
adc
sti
shll
adc
mov
dec
shll
lods
scas
xor
push
ja
rclb
shlb
imul
nop
jle
repnz
and
lock
sbb
cwtl
push
mov
ficompl
fidivrs
lea
dec
outsl
pop
fstl
mov
lods
shll
inc
out
sbb
mov
adc
aam
js
pop
mov
jge
xchg
cs
in
int3
fbstp
and
ss
dec
popa
popf
jle
arpl
mov
mov
and
nop
dec
mov
adc
pop
pop
add
mov
cmp
in
pop
mov
push
jmp
inc
xchg
popl
cmp
outsb
jns
shrb
jb
shr
lods
or
pop
scas
mov
dec
mov
adc
jne
push
leave
inc
xchg
cmp
mov
or
test
fsts
jle
shll
insb
nop
pop
icebp
cli
jns
mov
inc
clc
jg
push
jb
and
mov
push
xchg
and
rclb
rcll
mov
aad
insb
iret
mov
mov
or
lds
mov
fdivs
sub
push
popa
jl
dec
sub
shr
outsl
mov
leave
sahf
in
sub
adc
jp
push
xor
addr16
push
sbb
cmpsb
sbb
push
inc
iretw
scas
mov
clc
inc
shll
jnp
jg
sub
sarl
cmpsb
sbb
lock
mov
xchg
arpl
icebp
add
sbb
adc
cltd
lods
rorb
fisttpll
mov
xchg
imul
mov
imul
or
jno
out
lret
fdivrl
adc
mov
and
jmp
mov
push
fisubs
sbb
outsl
xlat
fwait
inc
lahf
pusha
sub
sbb
xor
sbb
ds
aam
int
push
shr
mov
repnz
pop
add
push
push
lret
in
scas
cwtl
mov
jne
lea
cmp
sahf
clc
test
je
in
mov
lret
das
shl
pushf
icebp
repz
clc
subb
mov
sub
int
cmpb
dec
mov
mov
ss
outsb
dec
enter
or
inc
test
cmp
outsb
and
xchg
push
and
gs
clc
pushl
in
aad
sub
sarb
cmc
inc
xchg
sbb
mov
test
mov
push
cwtl
jl
xor
pop
sarl
mov
sbb
ret
or
sub
dec
add
add
lret
out
xchg
rorb
lahf
pop
pop
pop
mov
and
jp
mov
fdivl
js
inc
mov
scas
jp
and
mov
xchg
sub
mov
mov
lds
cmp
inc
xor
fs
into
imulb
loopne
jae
divl
and
sbb
int
add
test
aas
repnz
loop
rcr
mov
mov
into
in
pop
pop
sbb
jnp
mov
mov
and
push
mov
xchg
js
jp
sbbl
mov
notl
or
xchg
add
inc
and
cmp
jg
inc
cmp
bound
cmp
mov
sbb
mov
inc
fs
int3
jl
dec
std
lret
mov
sub
scas
dec
sbb
xchg
cmp
xor
mov
mov
mov
xchg
and
inc
add
int3
lods
and
mov
popf
xor
mov
es
add
outsb
lahf
clc
faddl
ficompl
jns
jge
outsl
rcrl
int3
mov
bound
repnz
lock
aad
mov
jle
inc
dec
mov
jb
in
inc
loop
dec
and
aaa
fwait
icebp
adc
dec
mov
mov
jmp
mov
imul
cmp
adc
subb
hlt
mov
push
pop
xor
data16
imul
dec
lock
js
rol
in
cmpsl
or
push
jmp
push
dec
sbb
push
out
ljmp
dec
dec
cmc
out
enter
movsb
or
xlat
sbbl
js
add
and
dec
xor
pop
lods
cs
out
push
and
jle
mov
ljmp
dec
or
testw
cmpb
data16
pop
cmp
pop
push
pop
dec
cwtl
xorl
scas
es
sub
xchg
inc
push
nop
out
dec
push
cmp
data16
dec
lret
mov
dec
sbb
mulb
sbb
je
insl
lahf
or
push
lods
stc
sarb
movsb
orb
mov
adc
ss
popf
fcmovbe
mov
aaa
xchg
aam
and
or
mov
jno
leave
mov
and
in
adc
lret
dec
leave
das
add
mov
sbb
andb
xchg
lret
decb
sub
pop
lcall
ss
mov
mov
lahf
daa
mov
pop
imul
adc
out
int3
dec
nop
xchg
mov
sbbl
sbb
pop
push
adc
xor
cmp
sub
dec
jbe
ljmp
clc
jge
jnp
add
mov
inc
aad
sbb
scas
dec
push
mov
jne
push
outsl
add
bound
pop
rcrl
arpl
int3
mov
mov
pop
jo
or
and
lea
xor
mov
jne
lea
lret
cmp
aas
adc
add
movsl
daa
mov
pop
cltd
xchg
jecxz
popa
out
mov
gs
mov
xchg
dec
mov
or
hlt
xchg
lahf
sbb
int3
rcrb
pop
int
subb
fs
clc
cmp
dec
mov
and
std
lock
mov
pop
mov
push
rcrb
mov
dec
and
sbb
sbb
shl
test
jb
jmp
into
mov
imul
int
addr16
mov
sub
add
xor
inc
pusha
sti
or
fdivs
jne
and
in
ret
inc
inc
jmp
popf
push
mov
dec
rcll
push
std
outsl
cmc
stc
and
push
dec
lahf
js
sahf
cmc
inc
sub
pushf
adc
sub
jle
push
insl
fisubs
subl
or
in
jnp
mov
xor
jle
rcl
or
ja
stos
leave
fsub
repnz
sbb
xchg
jne
decb
sbb
push
dec
xchg
mov
jno
in
lcall
fstpl
jb
enter
fcmovbe
pusha
sub
cmc
stos
loopne
pop
lock
adc
in
ret
shlb
and
orl
std
mov
mov
fisubrs
mov
adc
sbb
ja
dec
test
int3
ret
add
in
into
frndint
mov
daa
mov
jae
jns
cmp
dec
dec
add
jne
mov
stos
and
or
mov
or
mov
ds
mov
and
pop
movsl
out
mov
out
ds
mov
test
loop
insl
arpl
add
scas
rolb
lret
push
add
pop
jmp
leave
js
pop
loop
loop
dec
repz
add
xchg
mov
add
mov
mov
sbb
pop
mov
xchg
pop
xor
sub
adc
stos
rcrl
mov
int3
xchg
jbe
data16
lea
mov
insb
xor
aam
jmp
cli
repz
pop
mov
mov
xor
aaa
scas
dec
movsl
aas
jmp
jne
ficoms
jle
clc
pop
decl
mulb
adc
insl
fdivl
fwait
ljmp
mov
jmp
jp
scas
add
lock
mov
std
outsl
movsb
int
stos
imul
jmp
dec
fwait
orl
aam
lret
stos
mov
jle
popa
pop
ss
ret
or
jno
xchg
ja
clc
sub
call
push
fdivrl
dec
daa
out
repz
inc
repnz
notl
pop
stos
scas
fcoml
idivb
movsb
pop
inc
xor
push
mov
es
gs
call
hlt
cs
add
ss
cld
cmp
sub
push
js
pop
fs
xor
push
cmp
cmpsb
push
push
inc
or
int
imul
popa
fisubl
in
loopne
mov
mov
sub
mov
jge
xchg
sub
les
mov
or
xor
outsb
and
adc
outsb
adc
dec
inc
or
shlb
xchg
call
jns
imul
gs
push
xchg
idivb
jno
jbe
mov
popl
into
jns
push
cmpsl
xor
test
dec
cli
in
mov
shlb
push
xchg
or
and
pop
aam
iret
fists
push
add
inc
lds
inc
ja
sbb
xlat
inc
stos
and
xlat
xchg
enter
mov
dec
cmovne
dec
jbe
hlt
insb
insb
in
inc
and
and
popa
push
lods
mov
repnz
sbb
sbb
pop
int3
pop
lods
push
fidivrs
add
mov
add
pop
xchg
and
cmp
sub
ror
push
decb
leave
push
hlt
test
or
inc
fucomip
xchg
out
add
cmc
mov
inc
cmpsb
icebp
sbb
inc
push
pop
mov
call
push
movsl
add
add
repz
lea
and
ljmp
js
mov
inc
imul
mov
jg
mov
mov
js
xor
ss
push
dec
or
or
push
mov
jg
xor
xchg
cmpsl
popf
mov
mov
push
xchg
and
daa
stc
pusha
or
test
lea
or
fisubl
nop
push
pop
cld
push
lock
push
push
mov
out
pusha
loop
ja
and
mov
imul
fsubrl
mov
and
jmp
jmp
movsl
add
jns
mov
xorl
inc
sub
movsl
mov
adc
aam
movsb
pop
notb
outsb
or
lea
mov
aas
jne
mov
inc
or
std
xchg
andl
movsl
xchg
and
or
sbb
shlb
pop
cltd
push
or
dec
dec
mov
jge
call
push
jmp
lock
sub
shlb
sbb
mov
sahf
das
popf
shlb
push
pop
test
lods
pop
jecxz
sub
iret
mov
jmp
xor
xchg
xor
test
scas
inc
lea
jle
enter
and
arpl
mov
es
push
jmp
enter
add
or
rolb
push
xchg
xchg
cmp
inc
or
pop
and
inc
icebp
jge
cmp
test
stos
mov
jae
adc
imul
xlat
xor
ljmp
stos
pop
std
xor
mov
insb
xor
movsb
lret
xchg
mov
jmp
push
mov
mov
out
sub
lea
xor
sub
stos
mov
pop
addl
xor
insl
movsl
outsb
pop
ds
roll
dec
cli
subb
cmpsl
or
mov
mov
jo
add
adc
shl
icebp
push
mov
popf
sub
or
xor
movsl
lcall
out
insb
imul
pop
mov
icebp
pop
inc
test
lock
repnz
add
xchg
idivb
and
push
ret
hlt
push
mov
sets
or
mov
jae
lcall
ret
inc
sti
mov
shll
mov
mov
or
sub
fdivrs
adc
adc
test
push
in
xor
xchg
sub
pushf
add
imul
xchg
sub
jle
addr16
sahf
xor
xor
adc
rol
or
divb
mov
mov
pusha
jne
dec
or
jl
sub
dec
and
dec
push
pop
mov
add
push
clc
cmp
fiaddl
clc
or
mov
pop
jb
addr16
xor
jb
xchg
lods
adc
nop
addr16
pop
out
les
cmp
jb
dec
loopne
movl
shrl
push
lret
mov
dec
pop
rorl
mov
orl
scas
mov
in
cli
xor
xchg
pop
cwtl
mov
dec
imul
push
stos
lds
fs
adc
add
adc
imul
pop
and
or
jmp
std
inc
xchg
sti
repz
jmp
adc
cmc
lahf
insl
inc
or
dec
repz
dec
mov
das
ds
add
sub
push
rcll
xchg
dec
pop
dec
and
or
push
pop
imul
pop
jne
sub
push
mov
insl
scas
jle
adc
and
dec
fstl
iret
dec
aaa
std
adc
sbb
sbb
pusha
lret
pop
adc
mov
sbb
loope,pn
pop
lret
mov
aas
rcrl
cwtl
lret
or
hlt
cmp
js
es
jns
movsb
xor
push
push
imul
and
gs
adc
cli
cmp
mov
and
mov
addr16
adc
lret
out
outsl
inc
cli
xchg
sbb
xor
pop
int3
stos
pusha
lret
popf
aas
and
mov
push
les
loope
mov
filds
cmp
sub
mov
xchg
pop
dec
sbb
notb
sahf
inc
clc
jae
ret
adc
imulb
addl
repz
pop
int3
popa
xlat
ss
lahf
jb
andl
cmp
dec
imul
dec
repz
subl
or
repz
dec
and
es
addl
jbe
faddp
sub
cmp
scas
out
push
push
outsb
dec
jp
push
pop
pop
sbb
jmp
out
push
mov
insb
call
dec
out
cmp
mov
xorb
lods
mov
data16
test
inc
mov
imul
cmp
outsl
fwait
dec
mov
cmpl
adc
data16
ljmp
jle
push
leave
fs
aaa
push
jge
mov
bound
xchg
and
jp
lock
mov
mov
jp
inc
jns
mov
cwtl
cltd
add
xor
inc
das
imul
adc
daa
bound
push
pop
inc
bound
push
dec
aad
outsl
xor
cmp
mov
xchg
in
movsb
sub
xchg
stos
and
cwtl
adc
aas
loopne
repnz
mov
xor
outsb
leave
xor
rcrl
fstl
mov
mov
or
out
mov
notl
jae
mov
mov
lock
loop
enter
stos
xchg
shrb
and
mov
push
dec
jnp
in
sarl
adc
out
or
imul
repnz
rcll
inc
stos
bound
int3
stos
sub
push
and
or
push
push
sub
jp
cmp
mov
fs
in
testb
xchg
push
test
out
dec
and
shlb
je
or
sub
loop
in
sbb
inc
repnz
outsb
ss
imul
mov
sub
pop
ret
mov
pop
scas
enter
pop
xor
push
sbb
insb
push
dec
jb
repnz
stos
aad
insl
push
sub
and
loop
psubusb
adc
out
push
sbb
mov
pop
das
insl
insl
push
shl
inc
cmp
or
fwait
scas
mov
sub
xor
pop
add
and
test
sub
aam
shll
dec
or
mov
out
aas
mov
aam
rorb
inc
scas
test
aas
cld
int3
jbe
add
bound
cmc
loop
mov
sbb
xor
fldln2
mov
ret
inc
or
stos
pop
dec
or
push
mov
sub
outsl
inc
into
sub
js
stos
push
mov
mul
or
cmc
ficomps
dec
mov
les
loope
add
jns
jp
aam
out
cmp
adc
idiv
adc
xor
push
jmp
dec
mov
std
xlat
ja
andb
sub
dec
imull
fs
and
js
mov
lret
mov
fidivl
or
std
push
les
mov
lea
ss
ret
add
cmp
jbe
out
faddl
sub
mov
pop
mov
jne
push
push
stc
push
out
sub
mov
pop
mov
inc
ljmp
sub
sub
lcall
inc
adc
cmp
mov
std
sub
aad
cmp
jae
and
sub
sbb
inc
out
daa
adc
push
sub
xchg
rcr
mov
or
mov
sbb
cmp
cltd
push
std
popf
xchg
cwtl
mov
inc
jecxz
mov
loop
int
out
xor
sub
jae
sarl
mov
lods
aas
es
outsl
out
in
sbb
mov
sub
inc
dec
mov
push
fwait
and
loop
mov
sti
out
out
popa
jo
adc
jns
out
mov
data16
xor
inc
xchg
dec
jns
push
or
inc
mov
xchg
jmp
stos
mov
mov
sub
fimull
push
leave
pop
into
cmc
cmpsl
call
mov
pop
movsl
inc
std
xchg
or
xor
test
push
int
and
loop
dec
aad
sbb
mov
pop
lret
test
xchg
test
pusha
sbb
cmpl
out
fisubrl
mov
ja
pop
xor
clc
xchg
push
sub
shlb
jle
dec
mov
insb
ds
hlt
inc
mov
packuswb
mov
xchg
movsb
ret
lcall
or
lods
push
aas
fwait
mov
jmp
sbb
adc
mov
aad
test
pusha
fs
icebp
cld
inc
jle
in
push
mov
fbld
jo
sub
push
ficomps
push
lret
push
lock
mov
or
aas
mov
pop
sub
push
repnz
fldcw
stc
xor
pop
dec
pop
push
ror
insl
cmp
cwtl
pop
jns
xchg
fwait
ljmp
cmp
sub
mov
sbb
cmp
daa
mov
mov
xchg
xlat
xorl
test
xchg
jo
mov
pop
clc
fldl
xor
and
pushf
arpl
mov
into
out
jae
fiadds
sub
test
lret
cmp
lods
out
and
cmp
out
out
sahf
mov
pop
stos
or
inc
mov
pop
arpl
cmp
clc
jmp
sbbl
pop
xor
mov
sbb
test
loopne
hlt
aam
push
sahf
scas
pop
sub
mov
lea
lods
scas
cld
lahf
test
push
ja
std
xchg
shll
lcall
sbb
push
mov
adc
push
xchg
int3
and
xchg
ret
dec
imul
add
cmp
shl
cmp
mov
cmp
aam
hlt
pop
fwait
xchg
push
mov
loopne
lret
ret
stos
mov
inc
mov
mov
jae
lods
jge
pusha
repz
lret
bound
stc
jne
movsb
mov
dec
cmpl
pop
pop
inc
inc
cmc
sub
fbstp
clc
jb
int
pop
add
insl
and
xchg
fs
int
loope
and
incb
add
call
cmp
inc
xchg
bound
das
mov
xor
call
push
and
enter
xchg
out
cwtl
adcb
ficoml
inc
sar
ret
mov
pushf
shrb
add
mov
cmp
jae
sbb
ds
adc
or
mov
inc
frndint
outsl
xor
cwtl
clc
jne
in
push
loopne
or
xchg
push
or
arpl
icebp
pop
sbb
ss
mov
sahf
nop
test
mov
jmp
sub
push
cvtps2pi
loop
das
movsb
or
jge
mov
sti
adc
mov
cmc
jle
mov
inc
or
push
mov
inc
bound
popa
cltd
daa
outsb
icebp
and
popa
insb
mov
inc
jo
sub
fidivrl
sub
outsb
xchg
fisttpll
xlat
adc
jmp
xchg
adc
sti
and
out
jns
fdivrp
and
jo
jb
or
xor
push
sub
inc
orb
jg
xor
sbb
lea
add
int3
cli
ja
inc
cmc
or
pop
ja
outsl
mov
xchg
sbb
shl
push
test
push
xchg
mov
addr16
cmp
aas
aad
leave
mov
bound
jle
xor
iret
jae
loopne
inc
cltd
sbb
xor
popf
fldl
cmpsb
out
mov
rclb
inc
call
mov
push
imulb
scas
loope
popf
ret
fnstenv
pop
sbb
aam
jecxz
pop
mov
jnp
fmull
xchg
pop
pop
sub
adc
addr16
mov
jo
inc
pushf
cltd
and
rolb
or
loope
fildl
imul
fs
int
ret
outsl
jp
dec
iret
or
cmpb
add
dec
fdivrp
lds
mov
les
inc
inc
cli
mov
xor
fwait
jae
and
xor
and
cmp
fxch
mov
shll
sub
test
mov
sbb
cmp
ret
imul
xor
jo
and
mov
pop
cmp
lahf
pop
jle
pop
cltd
mov
sub
xchg
pop
adc
inc
call
cmp
inc
dec
loop
push
mov
dec
scas
inc
jnp
xchg
rclb
ss
andb
out
pop
arpl
scas
test
insb
pop
insl
mov
add
in
xchg
test
pop
jnp
jo
mov
jae
push
and
movsl
gs
decb
and
jns
cmp
sub
stos
sbb
loopne
out
mov
pop
jmp
sub
ds
ds
mov
iret
pop
rclb
repnz
dec
in
scas
cs
and
inc
icebp
mov
fsubl
test
dec
mov
das
scas
pop
push
aad
xor
sub
ljmp
sub
mov
pop
arpl
popa
nop
out
out
addr16
popa
cmp
outsl
das
imul
test
jnp
jecxz
sti
popf
xchg
cmp
les
arpl
or
or
ret
dec
add
cld
cs
test
pop
out
jl
xchg
outsl
mov
sub
inc
xor
mov
and
push
and
mov
inc
aam
out
ja
mov
xchg
push
or
sub
mov
cmpsl
mov
jg
sub
loope
data16
mov
dec
jl
mov
ds
mov
push
lods
lcall
fwait
push
cltd
rcl
out
push
loop
push
cmp
sub
je
add
or
pop
cmpl
xchg
test
push
pop
sbb
pop
popa
inc
mov
out
sahf
in
mov
int3
leave
int
jo
mov
sbb
cli
push
mov
and
in
sbb
mov
or
insb
push
sbbl
test
nop
aam
jp
or
push
sub
sbb
in
mov
dec
pop
sub
bound
cwtl
jae
pop
xchg
call
in
out
adcb
pop
ss
cmp
pop
xchg
rorb
and
adc
repz
xchg
inc
mov
cmp
shlb
pop
stos
xchg
mov
ret
iret
xchg
push
fwait
xor
stos
xor
es
addr16
lret
jb
das
aaa
movsb
scas
movsb
sbb
aad
sub
xor
mov
pop
popa
mov
int3
pusha
jecxz
test
cmpsl
xor
daa
stos
push
jo
shll
ret
and
jnp
lods
subl
sub
and
lahf
inc
lret
push
outsb
in
mov
dec
loopne
scas
js
mov
push
mov
inc
jne
cltd
pop
ds
pextrw
stos
sbb
xchg
shlb
push
pop
repz
sbb
in
mov
mov
xlat
mov
sarb
std
pushf
add
lock
insb
fdivl
movsb
shlb
popa
jp
es
pop
push
xor
pop
fisttps
add
out
jbe
xchg
fbstp
inc
mov
add
sub
das
pop
adc
out
cwtl
out
hlt
and
das
rolb
js
pop
les
cld
pop
push
in
test
xlat
movsl
pop
push
lret
mov
jp
pop
int
rcrl
cld
mov
xor
sub
mov
pop
sti
and
jmp
data16
inc
sub
shl
or
lret
adc
mov
adc
shll
push
cmp
rclb
test
inc
cmovp
pop
lea
test
inc
jb
pop
mov
xor
sub
mov
xchg
outsl
pop
mov
mov
mov
sbb
lcall
push
add
aad
adc
ja
mov
add
pop
push
ss
add
xor
aad
movl
jmp
pop
cmp
je
mov
dec
out
xchg
fs
je
push
xor
insb
flds
icebp
and
add
jns
ret
add
and
cmc
mov
sub
movaps
mov
mov
and
add
das
out
mov
or
clc
mov
in
in
sbb
xor
jo
sbb
int
jecxz
leave
sub
ljmp
jg
imul
xor
push
aaa
xchg
ljmp
jae
test
add
add
addb
into
and
cmp
lret
push
jge
sub
xchg
add
std
aas
lcall
mov
lcall
pop
fcmovb
adc
inc
mov
cmpsb
inc
hlt
hlt
pusha
push
sub
mov
dec
mov
pop
cltd
mov
or
xchg
lret
cmpsb
test
sub
sub
fmul
adc
rolb
jbe
cmpsb
imul
rcll
cmpsb
or
jae
bound
sti
into
xor
test
pop
pop
lcall
dec
sub
and
push
popf
insb
inc
sub
sti
and
insb
lret
mov
push
and
xor
dec
leave
fcoml
xlat
adc
pop
inc
sbb
cmc
sarl
xor
sub
xor
ds
add
das
out
rcrl
xor
sub
in
xlat
pop
mov
pop
decb
aad
rep
or
mov
push
pop
jns
mov
mov
fisubl
stos
xchg
xor
pop
xor
iret
and
rcrl
insb
mov
jp
mov
add
mov
enter
stc
mov
sub
jp
dec
leave
adc
test
std
pop
imul
adc
mov
push
and
jg
xlat
in
pop
data16
lds
cmp
addr16
pusha
or
stc
cmpsb
cmp
cmpsb
and
inc
fcmovbe
inc
aas
stos
stos
sarb
fsubrl
dec
daa
int
xor
sarb
and
ljmp
popf
into
sub
jae
mov
rcll
loopne
mov
cmp
cmp
rclb
push
or
clc
adcl
cwtl
jg
ja
ljmp
cwtl
pushf
lods
hlt
xor
shll
lea
std
leave
jmp
stos
cmp
or
mov
jmp
icebp
stc
sbb
xchg
mov
pop
add
ljmp
dec
mov
mov
add
int
movsl
sbb
mov
ds
dec
sub
fnsave
in
cmovle
subb
cli
inc
popa
add
cli
jno
push
repnz
gs
sbbb
std
lahf
repnz
sbb
or
je
bound
xchg
xor
mov
pop
pop
push
mov
inc
xor
sbb
int
outsb
and
xchg
aad
pop
je
test
and
xchg
xor
adc
pop
ror
and
and
nop
jo
mov
es
outsb
aad
pushw
or
iret
push
mulb
fcomps
pop
enter
sbb
push
mov
sarl
mov
cmp
cmp
push
stos
inc
hlt
mov
cmp
test
outsb
mov
hlt
push
dec
mov
mov
add
mov
adc
mov
test
les
ja
jp
jne
mov
fsubrp
idivb
sbb
cmp
es
mov
lock
repnz
jbe
sbb
add
data16
test
cmpsb
js
pop
jno
pop
outsb
cmc
in
sbb
iret
xchg
lods
pop
sub
jmp
push
outsl
push
mov
sbb
or
pushf
or
mov
test
gs
jg
sub
insb
mov
and
and
pushf
and
pop
stc
addl
xchg
inc
dec
push
mov
loop
daa
iret
pop
fdivl
adc
mov
mov
mov
aad
mov
movsl
fnstsw
js
add
dec
mov
lret
mov
stc
lea
jns
andl
cmp
cli
sbb
jne
add
push
into
shl
add
push
xchg
add
adc
movsl
ss
loope
sub
fidivrs
adc
cld
out
push
or
out
cmc
sbb
int
in
xlat
imul
pop
mov
scas
stos
jl,pt
inc
mov
inc
mov
in
and
add
daa
rcl
fidivl
add
inc
and
cld
test
inc
hlt
bound
mov
outsb
je
into
data16
lret
and
push
jnp
pop
cmp
daa
bound
pop
enter
and
test
pop
xlat
outsb
mov
pop
adc
test
aad
iret
mov
test
pop
aad
sub
sub
repz
or
sbb
fisttpll
jns
jmp
dec
pop
xchg
loopne
xchg
jb
cmp
jno
jge
dec
data16
out
mov
ret
stos
or
dec
inc
insl
add
out
cmc
scas
add
filds
dec
daa
xchg
test
or
mov
jno
jp
scas
cld
test
aaa
test
pop
scas
xlat
aaa
fdivr
shlb
sub
out
sti
inc
shll
push
movsl
popf
sbb
pop
test
jbe
mov
mulb
lods
push
data16
insb
sub
and
push
repz
mov
loopne
lcall
add
aas
push
loop
push
pop
and
xor
jg
repz
je
dec
xchg
fiaddl
mov
mov
mov
mov
jge
cmp
mov
adc
or
xchg
mov
adc
pop
fsubrs
pop
fbld
mov
add
jp
mov
cmpsb
inc
mov
mov
mov
aaa
pop
inc
lea
nop
stos
sti
sub
fidivl
jb
in
adc
dec
pushf
lea
jae
xor
icebp
xor
inc
aam
out
and
shlb
daa
push
adcl
enter
mov
lea
xchg
sbb
add
jne
dec
inc
sbb
push
pop
xlat
cmp
inc
pop
xchg
dec
arpl
or
out
sbb
and
xor
lods
cmc
dec
adcl
adc
popf
les
sub
je
sub
push
dec
inc
sbb
or
lahf
xor
adcl
loope
aas
test
cmp
mov
clc
mov
in
pop
adc
call
sbb
movsb
bound
lcall
push
inc
clc
jae
incb
push
or
xchg
cmp
cmp
or
ljmp
sub
scas
fwait
scas
enter
jns
les
xchg
mov
push
lret
fwait
cld
mov
movl
lret
pop
dec
lods
into
cmp
push
mov
lret
adc
cmc
cmp
in
imul
add
mov
scas
mov
andl
ret
rcrl
mov
scas
icebp
fsubr
or
repnz
mov
adc
dec
addr16
pop
clc
push
jp
push
push
bound
push
and
imul
mov
mov
enter
mov
scas
lods
lods
call
pop
mov
and
cwtl
dec
fcmovb
enter
pusha
rclb
push
fcoms
xor
inc
ret
ss
andl
mov
test
xor
sarb
out
pushf
lahf
test
inc
cmc
test
pop
jae
mov
adc
lcall
outsl
pop
push
std
adc
mov
and
cli
aaa
data16
repz
xor
xor
test
cmp
lock
cwtl
push
shrl
cmp
sub
popf
push
and
stc
ljmp
aad
push
xchg
arpl
movsl
push
pop
movb
jle
jns
mov
subl
aaa
adc
popf
mov
cmpsb
mov
push
roll
outsl
xchg
push
dec
mov
lcall
and
cwtl
fucomi
loope
or
mov
test
xlat
das
and
imul
out
inc
je
or
push
cltd
cmp
pushf
nop
push
clc
mul
out
lret
sub
mov
jbe
jnp
lret
cmpsl
call
or
mov
or
xchg
and
cmp
fwait
test
cwtl
push
in
cmp
out
xor
cs
mov
imul
mov
mov
pusha
jne
xor
dec
mov
sub
sub
push
push
cmp
jae
xchg
int3
inc
mov
push
addr16
in
mov
add
filds
and
addr16
xor
xor
mov
hlt
fistpll
xlat
test
adc
mov
push
mov
push
xlat
jp
fnop
mov
push
insb
mov
imul
stos
pop
cs
in
loope
add
adc
or
sbb
aam
loop
adc
shll
je
push
pusha
pop
dec
jle
mov
xor
leave
movsb
or
dec
xor
dec
in
enter
pop
mov
mov
cmp
inc
insb
test
inc
lcall
jmp
dec
in
test
mov
and
sub
inc
leave
inc
jno
lods
mov
out
jmp
shl
sub
loope
or
fucompp
loopne
fs
jg
mov
add
stos
ljmp
mov
push
jno
sti
scas
mov
pop
mov
add
repnz
jnp
iret
inc
js
jbe
test
arpl
inc
stos
xor
push
sub
cmpsb
mov
rcr
sub
in
enter
jecxz
pop
jecxz
and
push
and
je
sub
stos
mov
jle
cmp
sbb
xor
pusha
lret
test
pop
jecxz
in
call
push
in
les
push
xchg
ficoml
mov
push
inc
stos
xchg
xor
push
dec
cmp
pop
sbbl
pop
stos
andl
out
pop
pop
xor
stc
ret
or
push
hlt
mov
dec
cltd
xrelease
jmp
add
mov
and
jbe
ljmp
shl
gs
iret
jp
pop
ret
popf
add
ret
ss
add
xchg
daa
imull
add
lods
jle
leave
popa
xchg
movsl
das
jnp
adc
push
aad
mov
adcl
inc
testl
pop
xchg
pop
inc
pushf
dec
mov
push
mov
stc
nop
pop
dec
adc
lods
dec
cld
adc
xor
pop
hlt
mov
inc
out
cwtl
xlat
push
insl
bnd
je
push
mov
mov
dec
pop
in
xor
stos
cmc
test
mov
mov
sahf
and
push
push
xchg
jl
or
mov
xor
cwtl
lahf
mov
mov
int
add
and
mov
xchg
pop
out
adc
ret
imul
cs
mov
aad
mov
shl
mov
sbb
adc
pop
xlat
icebp
mov
popa
cmpsb
mov
mov
sbb
stos
mov
and
adc
mov
jp
xor
insl
pop
mov
sbb
add
cmpsb
insl
xchg
cmpsb
loope
inc
pop
decl
pop
push
add
scas
cmp
stc
pop
shll
xor
dec
mov
cmpsb
adc
fidivs
push
xor
arpl
sbb
dec
xor
mov
cs
int
stos
scas
push
sub
gs
inc
pop
push
mov
out
adc
adc
jmp
pop
mov
push
scas
out
inc
add
clc
imul
je
adc
icebp
sahf
add
ljmp
cmc
dec
sub
jbe
lret
mov
mov
push
ret
scas
gs
in
inc
pop
dec
and
adc
test
clc
popf
push
adc
loop
xchg
sahf
mov
sub
fiaddl
es
xor
push
mov
sub
movsb
outsb
hlt
iret
pop
mov
mov
addl
je
xchg
push
jp
or
xlat
xsaves
cwtl
sbb
js,pn
sub
bound
popl
mov
mov
xor
push
out
mov
jbe
mov
cmpsl
mov
ficompl
lret
cs
cli
sarl
add
pop
mov
inc
repz
mov
jb
mov
fucom
mov
push
sub
out
or
icebp
nop
inc
mov
cmp
lcall
cmp
sbb
les
fldenv
jmp
mov
jmp
shl
dec
push
mov
imul
xchg
xchg
stos
ljmp
dec
in
xor
mov
inc
push
jge
out
pop
leave
fnclex
lods
incb
xor
pop
jl
mov
fiadds
and
sbb
lret
xchg
in
or
jae
aaa
sbb
daa
fwait
inc
subl
sbb
jg
imul
dec
mov
jle
pop
jmp
lods
mov
fwait
mov
or
iret
out
cs
sub
xor
dec
ret
xor
ljmp
mov
insb
test
and
jl
scas
arpl
mov
ss
negl
in
les
and
cltd
jge
pop
loope
push
es
xchg
push
push
sti
jns
mov
ja
cmp
xlat
enter
clc
cmc
sti
lcall
mov
insb
mov
mov
fiadds
sbb
mov
enter
cli
cmpsb
and
rcrl
dec
inc
ljmp
jne
call
lret
add
das
xor
push
dec
push
xor
dec
xor
mov
sub
or
faddl
icebp
mov
pushf
pop
shll
imul
sbb
int
xor
cmpl
push
push
icebp
jmp
out
push
rcrb
testl
xor
add
fwait
pusha
loopne
outsb
pop
lret
in
sub
sahf
push
into
and
adc
mov
dec
jnp
xor
icebp
repz
mov
sbb
subl
mov
call
shl
xlat
sbb
data16
ja
adc
xchg
and
lahf
or
icebp
js
push
pusha
cmp
neg
add
mov
pop
jecxz
push
xchg
xor
aaa
aam
add
out
and
aam
cltd
arpl
dec
push
xor
sbb
dec
cld
imul
cmp
adc
in
pop
push
movsb
sbb
jecxz
xchg
jmp
cmp
add
jmp
mov
mov
test
imul
jecxz
jp
push
dec
mov
les
dec
lret
icebp
or
rorb
leave
jb
jo
sub
inc
inc
adc
push
xor
pusha
mov
jg
pop
or
push
cmpsb
mov
cmp
jno
jno
xlat
or
fadds
pop
or
cmc
pop
das
call
pushf
enter
or
xor
nop
lock
inc
cmp
cmp
xchg
sahf
fstps
fsubs
xlat
pop
push
cmpsl
pop
push
out
mov
fwait
lock
fwait
loop
out
push
gs
or
pop
xchg
push
sbb
fisttpll
add
mov
cmp
in
or
loopne
outsb
sahf
fstpt
adc
fbld
jno
outsb
divl
mov
sub
dec
jne
or
push
pushf
jle
cld
xchg
xchg
mov
in
push
sub
jae
aaa
inc
cmc
sbbb
frstor
adc
xchg
sti
fadds
mov
xchg
scas
lock
xlat
cs
xor
jl
loop
xchg
fstl
jo
add
mov
pop
leave
cli
out
negb
or
popa
or
jae
arpl
add
cmp
and
and
xor
xchg
inc
in
and
pop
lahf
cmp
jnp
xor
repz
or
adc
dec
pop
cld
lret
push
jg
das
into
rcl
and
mov
mov
daa
imul
arpl
cli
fistpl
sub
push
inc
mov
pop
mov
inc
test
jle
mov
rclb
dec
sbb
idivb
js
jmp
data16
cmp
sub
int
adc
xchg
ds
and
mov
xor
xchg
loop
js
popa
lret
pop
aam
fstpt
jmp
push
mov
scas
aad
lock
or
cmpb
cmp
fmuls
xor
xchg
lahf
les
call
mov
faddl
je
repz
push
pop
dec
sbb
fistpll
xor
xchg
jp
and
and
shr
std
ja
sub
mov
jp
jmp
inc
add
imulb
jae
arpl
xchg
push
dec
sbb
mov
test
pushl
push
in
rorl
or
out
or
mov
je
sbb
pop
sarl
mov
loopne
add
add
mov
repz
pop
stos
xor
mov
pop
imul
fwait
mov
idivl
test
xor
pop
into
xchg
inc
in
cmp
bound
inc
int3
dec
frstor
scas
push
repz
scas
cmc
mov
adc
inc
loope
cli
cli
sbb
jmp
rcrl
movsb
pop
insb
cmpsb
adc
push
jae
push
sbb
cli
inc
rorl
sub
xchg
pop
jp
mov
sbb
adc
xchg
xchg
inc
jmp
dec
lahf
mov
mov
int
lahf
xchg
xorl
or
mov
dec
cmp
inc
cmpsl
and
cmpsb
iret
mov
push
stc
mov
push
cmc
pop
jl
pop
push
jecxz
cs
dec
pop
aas
mov
pop
repz
fstps
pop
rolb
inc
lcall
mov
mov
push
aam
cmp
imul
jae
rcr
or
out
mov
call
xchg
xlat
sahf
xchg
bound
loop
adc
add
mov
cmp
jmp
and
xlat
xor
xorb
ljmp
sbb
and
aam
imul
repnz
dec
jne
jbe
out
dec
lods
or
test
mov
mov
test
mov
in
pop
xchg
adc
cmpsl
mov
and
popf
imul
add
fcoms
xchg
addr16
and
imul
inc
psubb
push
xchg
ljmp
ljmp
add
sarb
xchg
loopne
xchg
fcmovbe
and
push
inc
sub
jns
popf
mov
ss
loope
ret
aad
ret
xor
out
adc
loop
lea
xor
and
jns
adc
inc
jp
dec
or
cmp
imul
scas
pop
cwtl
outsl
pop
stc
adc
insl
int
mov
cmc
sbb
outsl
dec
popa
popa
xchg
jo
and
sbb
push
push
mov
xlat
or
dec
push
dec
jae
xchg
sub
lods
adc
lds
jl
pop
mov
jl
add
in
arpl
popf
test
leave
ret
xorb
jecxz
imul
jp
pushf
push
fdivs
mov
cmc
mov
outsb
out
aad
fwait
bound
out
mov
pop
dec
jle
ss
arpl
inc
jns
xor
das
pop
mov
and
jnp
sub
mov
add
sub
cmc
lcall
sbb
pop
into
pop
mov
add
sub
mov
xchg
jae
inc
shrl
inc
or
iret
jnp
cmp
and
add
scas
sub
add
mov
dec
fsubr
jge
mov
or
dec
cmp
mov
mov
lds
insl
mov
arpl
sub
iret
insl
or
and
jmp
cmp
test
ljmp
sbb
repz
or
xchg
inc
fsubrl
nop
aam
fsubrl
std
bound
fwait
cmp
mov
ja
adc
adc
xor
push
pop
sbbl
xchg
shll
xchg
mov
enter
mov
mov
ret
and
sbb
push
mov
aaa
dec
std
repnz
dec
imul
cmovg
adc
push
fdivrp
xor
mov
loop
frstor
fisttps
lcall
mov
outsl
arpl
jne
loop
dec
lods
repnz
cmp
loope
mov
popf
sbb
xor
imul
lret
dec
ss
xchg
mov
fnsave
pushf
fs
adc
push
stos
adcl
outsb
nop
pop
insb
xor
and
mov
sbb
iret
test
in
test
movsb
or
loopne
cmp
test
mov
hlt
mov
push
movsb
mov
aaa
pop
repnz
push
xor
stc
pop
stos
stc
sbb
or
add
cmc
rorl
xchg
imulb
imul
mov
lock
jnp
pop
fimull
addb
inc
push
xchg
mov
ficompl
mov
adc
lds
mov
adc
adc
test
cmp
push
scas
loop
test
outsb
jge
xchg
pop
jg
pop
sbb
out
lock
adc
aaa
cmp
cli
test
cmp
leave
lret
std
ds
lods
decl
and
ret
or
and
and
ret
xlat
icebp
mov
xchg
cmc
pop
xorl
xor
jne
pop
dec
loop
repz
aad
inc
hlt
clc
and
xchg
ljmp
dec
mov
sub
pop
mov
ds
pop
xor
andb
jae
mov
and
call
xlat
cmp
cmp
dec
or
loope
mov
lods
push
std
sbb
cmp
pop
push
orb
sti
mov
push
jbe
cmp
pop
cmpsl
adc
mov
push
add
cmp
push
fs
jge
cmp
jecxz
int
lret
adc
in
lahf
rcl
mov
xchg
mov
cmc
add
add
stos
lock
aaa
jae
mov
and
sub
add
fs
xlat
popf
lods
xlat
das
adc
int3
aaa
adc
pop
push
adc
jno
jb
fcoms
sahf
insl
test
xchg
or
in
out
aam
ss
packuswb
out
imull
sbb
jns
sarl
lea
mov
arpl
adc
xchg
pop
mov
dec
and
xchg
fists
sahf
dec
or
push
jnp
jnp
xor
cmp
pop
rcr
xor
stos
push
pusha
stos
lods
out
subl
jge
shll
cmp
push
call
iret
dec
sub
in
stc
inc
cltd
dec
js
movsl
mov
sub
insl
pop
mov
addr16
js
sti
test
add
add
or
in
cwtl
fnstenv
js
pop
and
int3
pop
sbb
pop
outsl
decb
jl
xchg
mov
and
fwait
jno
or
ret
or
mov
mov
ret
mov
pop
scas
cmp
cli
sbb
inc
jo
dec
or
mov
mov
push
push
icebp
js
test
or
inc
fsubs
into
push
dec
scas
arpl
ret
movsl
leave
and
sub
aaa
dec
imul
mov
lret
pop
adc
fwait
mov
inc
ret
cwtl
jl
mov
movsl
cmp
decl
scas
mov
lock
jbe
ja
mov
movsb
ja
pop
sbb
sub
dec
xor
iret
arpl
into
push
rcr
xor
filds
lea
popa
popa
int3
xchg
out
mov
xchg
add
xor
adc
pop
testb
ds
mov
sub
shl
dec
pop
out
cmp
stc
push
insl
mov
mov
xchg
mov
dec
xchg
and
lds
and
movl
shll
test
sbb
test
xchg
push
xchg
js
les
je
xchg
or
div
dec
out
mov
popf
fstp
cli
notb
popa
mov
notl
mov
sub
push
xchg
imul
adc
mov
movb
sub
jb
dec
int
inc
dec
push
add
pop
call
into
adc
arpl
push
add
icebp
loop,pn
sbb
movsl
jge
adc
fisubs
adc
cmp
inc
xchg
pop
pop
pop
dec
or
stc
mov
loopne
cli
xlat
adc
popa
repnz
ds
jo
outsb
cmpsl
xlat
dec
jge
imul
pushf
pop
inc
and
cld
pop
push
mov
mov
or
or
push
pslld
jp
and
lods
in
cmpsb
jecxz
jnp
lods
or
xchg
ja
dec
push
mov
xchg
cld
pop
sti
pop
stc
out
js
jp
sbb
aas
add
jecxz
lods
push
cli
push
cmpl
jns
mov
sub
push
mov
dec
inc
add
leave
je
mov
xchg
or
leave
pushf
sbb
in
fsubp
scas
mov
xchg
xor
mov
pop
xor
pop
arpl
rolb
adc
push
mov
fmul
clc
dec
lds
stos
je
pop
add
xor
jl
ds
cmpsb
inc
cs
add
rorb
mov
xor
and
lods
lea
es
ja
shr
sahf
or
mov
scas
cmc
ljmp
sub
into
push
sbb
sbb
lods
push
mov
push
sub
aas
fsub
loope
outsb
outsl
and
add
es
scas
popf
aad
mov
dec
pop
and
cltd
adcl
xor
dec
addr16
std
dec
pusha
sarb
cmpsb
dec
push
inc
cmp
roll
das
or
pop
push
xchg
out
mov
lock
inc
ljmp
bound
mov
mov
mov
stc
cmp
addb
scas
mov
pop
sti
cmc
lret
cli
mov
outsb
jle
adc
push
mov
add
testb
push
mov
cmp
mov
sti
inc
cmp
mov
dec
adc
dec
mov
scas
cmp
add
test
cltd
push
leave
repnz
enter
loop
mov
push
sbb
sub
icebp
push
bound
xor
jno
daa
mov
jno
movd
adc
scas
pop
cltd
inc
inc
xor
or
popf
or
lret
call
fistpll
dec
sub
mov
mov
ljmp
add
mov
mov
jle
sbb
inc
push
std
jbe
lods
add
jnp
sub
into
inc
cmpsb
mov
mov
and
mov
scas
sbb
cmp
leave
lret
add
mov
js
or
xchg
or
pop
sbb
dec
mov
ret
xor
in
and
notb
or
gs
scas
jbe
aaa
xchg
in
mov
fwait
pusha
pop
addr16
ljmp
push
mov
rclb
jae
test
movsb
sub
and
push
movsl
in
rcll
cmp
jno
cmp
lock
leave
inc
jp
cmp
repnz
xchg
mov
movsl
or
mov
dec
xor
mov
mov
inc
pop
shll
mov
push
pop
inc
mov
cltd
cmp
lret
sahf
icebp
mov
pop
dec
dec
jp
push
push
xor
pop
sbb
push
loop
aas
pushf
mov
dec
subb
fmuls
push
cmc
rcrb
push
inc
jae
push
lret
add
pop
cmp
pop
pop
inc
mov
notb
xor
push
or
inc
add
pop
mov
or
test
cmp
xor
mov
clc
shll
mov
xor
test
xchg
sub
leave
dec
cld
xchg
cmpl
es
nop
xchg
jbe
sub
push
cmpsl
pop
push
pop
adc
nop
mov
dec
and
pop
add
popa
mov
in
inc
sbb
or
gs
lds
aaa
daa
lcall
fdivrl
mov
mov
jmp
jb
mov
lods
xlat
pop
pusha
or
icebp
rorb
jmp
or
inc
sarb
push
mov
pop
imul
movb
imul
dec
jbe
push
gs
mov
jg
cmp
ss
movsb
sub
or
sub
fwait
leave
mov
stos
out
jmp
in
and
push
dec
icebp
or
cltd
roll
pop
arpl
das
aad
das
addr16
sarb
sbb
jmp
arpl
testl
cmp
xchg
push
mov
mov
arpl
sub
xor
mulb
cmp
add
mov
shll
fiaddl
lods
inc
fnstenv
and
cltd
sahf
fmuls
ja
call
push
outsb
mov
jo
jp
aas
mov
mov
sub
push
dec
insb
ljmp
stc
jb
je
xor
inc
inc
mull
sbb
stos
mov
outsb
aaa
inc
mov
sub
sub
push
and
punpcklwd
roll
test
out
jnp
inc
cmp
fcompp
or
xchg
jle
pushl
push
int
and
faddl
mov
cmp
and
sub
cli
sti
mov
in
aaa
call
shr
mov
ret
cmp
jbe
lret
or
leave
je
push
push
dec
hlt
and
pushf
stos
or
jo
imul
insb
lods
ficompl
sbb
mov
add
mov
fcmovnbe
sar
mov
jbe
inc
hlt
push
sbb
sub
xor
insb
int
outsl
sub
mov
mov
nop
add
pop
loopne
adc
dec
aaa
mov
adc
arpl
insl
gs
jmp
iret
xchg
and
cmp
pop
sti
pop
rclb
xlat
jbe
movsb
mov
xchg
movsl
aaa
inc
std
add
push
push
sti
jmp
in
lcall
lret
outsb
pushl
shll
sti
iret
push
negl
inc
aad
vpcomuw
jnp
mov
and
or
stos
and
sti
loop
jnp
iret
mov
dec
lods
xlat
cmpsb
ja
pop
xor
js
xor
and
enter
push
mov
dec
mov
mov
pop
push
mov
roll
adc
inc
sub
push
mov
shrl
or
into
push
clc
fdivs
scas
stc
nop
xchg
jae
add
xchg
nop
mov
xor
mov
pop
into
call
xchg
cmpsl
sub
cmp
jle
dec
stos
jl
addr16
dec
xor
inc
sbb
mov
xchg
sbbl
mov
test
or
jo
scas
lods
sub
jecxz
dec
cmc
rol
and
call
mulb
lcall
mov
fsubs
pop
sbb
fisubs
shlb
push
add
into
jge
aas
test
nop
inc
sbb
add
xor
xchg
divb
pushl
repz
and
mov
sub
xchg
pop
sub
cs
add
std
imul
pop
xchg
lods
insl
xchg
shll
orl
jmp
movsb
pop
jmp
sbb
or
mov
sarl
mov
sar
mov
insb
jnp
cmpsl
cmp
jmp
punpcklwd
loope
sbb
and
adc
lea
loope
inc
js
push
mov
pop
pop
into
mov
loopne
sub
add
stos
hlt
push
push
xchg
icebp
lret
mov
ficomps
fwait
mov
popf
sbb
mov
addr16
movsl
movsb
aaa
daa
adc
fnsave
mov
aaa
mov
mov
sbb
jne
mov
sti
pop
bound
jmp
sub
and
data16
lea
add
sub
lods
sub
xor
mov
xor
add
aas
insl
push
lahf
imul
mulb
out
jp,pt
mov
jo
fwait
jp
movsl
js
and
mov
imul
dec
rcrb
aad
fcmovu
inc
push
psllw
mov
rolb
repz
sahf
out
bound
sub
pop
push
sbb
jg
mov
inc
adc
cli
lret
or
and
cmp
icebp
int
je,pt
cmp
bound
repnz
dec
repnz
mov
gs
fucomip
pop
aad
arpl
sbb
repz
daa
notl
mov
ss
sub
insb
aam
out
cltd
aas
add
pop
iret
mov
lods
or
mov
loope
popf
loopne
adc
mov
mov
dec
ret
movsb
xor
sbb
popa
frstor
cmp
fs
sahf
nop
and
cmpsl
push
jp
pop
outsb
xchg
or
push
out
ljmp
jne
add
pop
add
or
cwtl
subb
dec
outsl
outsb
aas
cmc
scas
adc
subb
sub
pop
mov
shlb
pop
mov
jns
xchg
inc
sub
xor
pop
rcl
push
lods
jno
jg
aam
mov
sbb
xlat
add
jp
adc
push
xor
scas
icebp
dec
push
push
xchg
and
cmp
push
mov
and
pop
xor
in
test
add
push
fisttpll
lret
fdiv
in
inc
aas
lret
mov
push
aad
in
mov
or
xchg
dec
sub
cmp
jecxz
adc
outsb
pop
lods
sbbb
push
add
divl
fmull
aaa
pushf
enter
or
dec
rolb
out
ret
fwait
xchg
push
and
adc
push
mov
cwtl
shl
mov
arpl
pop
cmpsb
add
inc
call
bound
cli
test
out
dec
inc
xchg
or
pusha
cmc
pop
jmp
hlt
push
sub
sbb
imul
lea
inc
adc
fstp
inc
sub
xchg
ds
repz
push
jo
enter
test
jecxz
cli
adc
testb
mov
cmpsb
mov
cmpsb
test
ss
out
jmp
or
in
add
aas
cmp
jg
xorb
popf
jg
xor
popa
cwtl
mov
rclb
shlb
shrl
sub
inc
xlat
xor
or
das
xchg
mov
mov
lods
push
in
ret
inc
mov
push
fmul
into
ret
ja
fisttps
out
xchg
inc
add
dec
mov
sub
loopne
pop
inc
pop
xchg
add
add
and
sbb
aad
cwtl
jle
jecxz
hlt
repnz
adc
sbbb
xchg
js
lock
pop
mull
mov
js
sbb
inc
mov
push
mov
aas
adc
mov
insb
mov
sub
inc
xchg
rorb
xchg
add
shlb
adc
jbe
loope
xor
cmp
pop
dec
mov
xchg
sub
cwtl
mov
mov
and
out
shl
int3
or
icebp
leave
gs
sbb
add
out
sar
mov
dec
push
loop
cli
hlt
xchg
lret
jg
mov
or
add
dec
mov
fdiv
fdivs
fbstp
cli
pop
pop
xchg
mov
in
lret
ds
inc
cmp
or
mov
xor
cmpl
jnp
pop
cmp
jbe
scas
in
sbb
jp
lret
dec
jae
mov
test
decb
clc
push
in
dec
pop
add
divb
inc
fdivp
out
cmc
cld
punpckhwd
pop
and
mov
sahf
jb
xorb
testb
fldl
pop
fstl
adc
mov
lahf
cld
loopne
inc
cmp
add
xchg
lret
subl
and
sahf
or
fiaddl
push
lcall
mov
cmpsb
sbb
rorl
and
loop
mov
out
mov
adc
dec
mov
xor
mov
roll
sub
jecxz
insb
enter
std
shrb
rol
stc
mov
push
jg
jb
jne
xor
push
pop
or
sub
push
mov
in
es
mov
aaa
adc
gs
das
testl
ret
lret
in
sub
jo
cld
mov
adc
sub
pop
jno
loopne
or
cmp
pop
clc
fwait
in
dec
xor
ret
ret
fiadds
insl
stc
cmp
lret
push
xor
jnp
rolb
in
cmp
cmp
push
inc
and
push
xchg
mov
pop
test
lret
push
loop
pop
and
pushl
cwtl
lds
xor
xchg
sarb
jmp
push
mull
and
cvtpi2ps
adc
adc
push
nop
ds
cld
enter
inc
or
sub
or
or
sub
jo
mov
xor
outsl
mov
xchg
adc
mov
mov
aam
xchg
jo,pn
push
movsl
dec
adc
and
int3
movsl
sbb
dec
sbbb
ds
jo
jae
sub
jg
push
cmovp
leave
call
lret
push
lret
inc
test
enter
movsb
xchg
scas
ljmp
inc
or
aas
jl
xchg
testb
xchg
iret
ljmp
addr16
xor
test
mov
in
cmpsb
rcr
les
push
mov
sbb
cmpsl
int
dec
cmp
cs
jo
stos
pop
outsb
mov
iret
cmp
or
xchg
jne
xor
ss
sbb
test
dec
pop
rorb
int
dec
iret
push
jecxz
cld
orb
or
push
jl
inc
lds
insl
lods
mov
das
repnz
popf
inc
daa
cli
xchg
enter
rorb
cmp
movsb
mov
in
mov
ja
dec
push
xor
pop
sbb
push
repz
and
shll
out
adc
fsubl
mov
out
and
ja
rorl
clc
clc
test
pushl
inc
aaa
mov
out
or
mov
xchg
mov
movb
sub
lds
fdivp
inc
testb
in
push
fcomi
outsb
jb
in
sbb
or
scas
aad
jmp
add
cli
bound
movsl
mov
push
sbb
and
rcrl
adc
fdivp
into
test
or
imul
push
jg
mov
cs
and
jmp
jp
fdivr
sbb
adc
leave
jno
hlt
pusha
fnstsw
rcrb
cli
xor
incb
pop
or
xchg
push
fdivl
in
arpl
mov
and
iret
mov
mov
push
mov
enter
ljmp
ss
and
outsl
jae
lcall
mov
add
jecxz
aaa
or
outsl
pop
inc
ret
mov
dec
in
jnp
aad
lea
in
sbb
and
mov
clc
call
dec
dec
sbb
imull
jbe
mov
dec
mov
jb
sahf
mov
pop
xchg
pop
cmpsl
std
cltd
out
addl
pop
les
lret
mov
fwait
cs
lods
in
and
jmp
dec
cmp
fwait
shld
adc
gs
lock
insl
xchg
xor
dec
inc
mov
xchg
lret
je
ja
cmp
shlb
data16
and
sti
fldt
popf
mov
rolb
and
cmc
push
out
fcom
mov
aam
push
fucomp
lret
sub
sbb
jb
cwtl
fucom
lock
test
sbb
rol
mov
jle
rcr
enter
jle
or
outsl
or
mov
sbb
std
not
xchg
jg
es
mov
ss
scas
nop
pop
aas
scas
mov
in
mov
mov
sbb
ret
mov
jns
xchg
mov
adc
and
add
mov
fimull
lahf
andl
sub
jb
pop
lock
fwait
mov
inc
imul
popf
mov
push
iret
mov
xchg
popf
pop
sbbb
lods
scas
aas
mov
pop
sbb
aam
rolb
cmp
sbb
sbb
sti
es
sarb
enter
ja
dec
imul
mov
jno
mov
and
xlat
out
test
rcr
aad
movsb
and
mov
cmp
sbb
fcomi
popf
and
aaa
out
incb
hlt
push
fistl
std
in
sbb
adc
dec
cld
out
cmp
or
je
dec
pop
push
stos
sbbb
rcrb
xchg
gs
stos
ss
cld
lahf
or
es
outsb
cmp
lea
mov
lcall
mov
xchg
push
divb
in
pop
push
push
jb
bound
ret
jbe
or
rolb
adc
pop
subl
xlat
pop
add
lea
jo
inc
fidivs
imul
xchg
sub
jl
aas
testl
push
cs
sub
cmp
sarb
pop
in
popf
cwtl
cmp
sub
ret
sub
xchg
ja
xchg
push
rcrl
pop
pusha
shlb
cmp
jno
lahf
incl
clc
adc
out
push
jle
ror
lcall
dec
push
out
arpl
add
jmp
inc
xor
sbbl
jbe
mov
and
sub
enter
stos
mov
cltd
outsb
or
movsb
icebp
push
lock
xchg
push
int3
mov
cmp
orps
aam
aaa
mov
cltd
rcrb
xchg
test
cmpl
mulb
cmp
lahf
imulb
sbb
int
stc
cld
subl
test
pop
mov
loopne
pop
sbb
sub
rcr
xchg
inc
mov
sbb
add
or
pushf
shrl
data16
inc
shr
pusha
sti
scas
in
icebp
addl
inc
sahf
jcxz
mov
je
or
imul
mov
ljmp
add
fsubrp
mov
hlt
cmp
dec
sbb
add
xor
ds
sahf
aas
test
xchg
mov
pop
rcrl
pop
into
cmpsb
stc
stos
test
fidivl
je
push
mov
idivl
mov
cwtl
add
cmc
and
shr
sbb
and
sbb
or
mov
jbe
push
dec
inc
sub
mov
adc
vmaxsd
pop
push
ds
push
or
test
dec
pop
xchg
jl
loopne
xlat
xor
inc
mov
sbb
orl
inc
pop
in
divl
jo
push
cmp
dec
aad
pop
mov
repz
int3
filds
lret
dec
pushl
push
flds
in
and
mov
mov
mov
jg
xor
push
fidivs
jae
pop
sub
jg
test
dec
add
int
int
decb
dec
aas
mov
ret
jb
notb
and
decb
fldl
out
xchg
push
popf
adc
inc
ja
mov
mov
and
or
hlt
pop
sub
fsts
cmp
mov
jle
mov
mov
mov
dec
pusha
sahf
stc
cmpsl
cmpsb
rclb
aam
jno
push
js
addl
inc
cltd
push
sbb
push
daa
or
lods
fildl
pop
xchg
ss
daa
jl
sbb
int
mov
pop
pushf
xor
or
xor
push
es
mov
aam
xchg
sub
adc
jae
addr16
cmp
aas
stos
mov
enter
xlat
mov
pop
pop
fnstenv
stos
inc
jp
xor
jo
fcoms
fs
insb
iret
xlat
int
mov
sbb
pop
cmc
repnz
pushf
pop
xor
dec
test
pop
xor
jge
ret
fiadds
xor
je
mov
jns
jae
or
jo
cld
xorb
es
aaa
fsub
loope
lock
int3
pop
cmp
int
mov
mov
xrelease
adc
lahf
ljmp
test
iret
call
adc
in
enter
add
mov
int3
movsb
iret
stc
mov
mov
mov
enter
sti
jnp
sahf
ret
shlb
call
inc
gs
call
mov
or
add
fwait
sub
dec
adc
pushf
out
and
mov
rcll
pop
cmp
daa
adc
lock
mov
pop
mov
outsl
push
mov
test
add
pop
inc
lret
jne
pop
sarb
jle
jmp
push
out
lret
fmul
fisttps
mov
jp
inc
fcmovbe
sbb
and
idivb
add
cld
outsl
or
mov
add
mov
xor
and
xor
movsl
jbe
sub
popf
mov
pop
adc
stos
ret
aam
rcl
jb
jg
fnstsw
inc
lods
jp
imul
aaa
pop
and
pop
cmp
xor
xchg
inc
movsl
fs
rolb
jmp
lret
xchg
nop
mov
mov
not
mov
jae
jnp
imul
inc
aad
pop
repnz
stos
in
andb
daa
jo
mov
sub
or
fistl
lock
and
rcl
loope
dec
clc
add
xor
or
nop
jnp
xchg
xor
pop
insb
clc
sub
add
rolb
pop
jmp
mov
dec
mov
adc
imul
sbb
fsave
mov
imull
inc
and
test
xor
mov
xlat
out
cltd
push
add
mov
outsl
add
pop
faddl
fwait
pushf
pop
push
imul
mov
incb
sub
push
push
adc
shlb
addr16
les
inc
add
push
sbb
loope,pn
ficompl
cld
cs
test
imul
cmp
repz
fucomi
scas
mov
je
inc
les
push
add
jnp
mov
test
ret
movsb
loopne
jne
cltd
push
iret
push
fs
out
jae
jge
daa
adc
faddp
in
outsl
ss
sub
lea
loopne
nop
xor
scas
dec
rorl
sarb
pop
insb
dec
adc
movsb
push
sti
fidivrl
jo
clc
insb
insb
adc
dec
sub
lret
mov
ljmp
jne
sub
jecxz
and
lods
sub
push
mov
sub
adc
or
pop
pop
push
xchg
adc
outsl
lds
arpl
or
lcall
mov
jae
inc
shll
xchg
in
daa
jmp
mov
cwtl
cmpsl
enter
push
xchg
divl
inc
je
jmp
popa
aam
out
add
pop
push
jne
fcom
push
leave
adc
xlat
es
pop
mov
test
jmp
fidivl
rol
lahf
divb
test
sub
into
add
pop
fldl
xchg
out
in
stos
sbb
jbe
cmp
cli
fimull
or
test
jbe
add
inc
loopne
xor
ja
add
adc
xor
pop
cmp
fstl
test
push
lock
and
scas
xchg
bound
mov
sti
in
mov
loopne
jo
sbb
lahf
aas
xchg
cmp
xor
xchg
int3
js
add
fistpll
in
loop
mov
aad
cmp
add
xchg
clc
lods
mov
inc
mov
std
add
push
adc
mov
shr
sbb
dec
ret
add
and
xchg
and
push
cmp
jg
jmp
pop
in
mov
xor
jo
lret
mov
pop
fcmovne
pop
sbb
std
out
inc
jecxz
roll
insb
xchg
cmp
push
or
xor
scas
icebp
dec
pop
or
dec
bnd
out
sbb
push
roll
push
pop
and
jb
push
mov
push
rcrb
mov
mov
imul
sahf
leave
push
or
jb
lds
sub
lret
and
mov
inc
jns
mov
push
rclb
rolb
pusha
in
xchg
lea
scas
adc
cmp
aas
dec
xor
inc
jno
dec
outsb
rcll
std
pushf
aas
cmpsb
sub
adc
rcrb
add
fisubrl
push
adcl
aaa
jns
add
mov
or
ss
mov
sub
loope
push
ret
cs
sbb
iret
int
and
mov
dec
sbb
sbb
push
mov
mov
iret
mov
mov
add
mov
ror
cmpsl
add
fcomps
inc
test
dec
and
shlb
adc
loope
cs
or
out
cmp
pop
add
ljmp
push
xor
sub
iret
imul
pushf
testb
push
inc
dec
sbb
ffreep
mov
clc
push
enter
hlt
call
arpl
popf
xchg
sahf
mov
jbe
bswap
sub
jg
leave
das
xchg
loopne
int3
mov
divl
xor
push
das
xchg
fstpl
aas
inc
aad
ret
jecxz
stos
sbb
sbb
cmpsb
shl
inc
mov
aad
lcall
mov
lds
fs
adc
push
or
imul
andb
push
dec
test
lahf
jecxz
mov
inc
cmp
jg
aaa
cmp
cmp
imulb
jle
bound
sbb
test
test
gs
xlat
push
add
ljmp
out
lock
test
jg
mov
add
push
sbb
cmpsl
mov
jne
sub
into
adcl
or
jle
mov
cmpsl
adc
movsl
mov
dec
mov
orl
scas
clc
mov
addr16
push
call
xchg
out
jo
insb
out
mov
and
testl
fistpl
rcl
out
test
cmp
pop
pop
cld
add
mov
mov
xchg
pushf
pop
pop
sti
pop
jle
pusha
cmp
out
xchg
aad
les
fmul
and
pop
xlat
lock
cmc
jecxz
jno
fwait
scas
cmc
daa
dec
pop
clc
lret
xor
shlb
lahf
aaa
in
lock
mov
hlt
mov
adc
test
or
das
sbb
inc
jne,pt
jb
incl
or
jo
data16
mov
sbb
add
xchg
pop
mov
jae
stos
movsb
lea
fisttpl
pushl
and
in
sbb
div
data16
aam
test
adc
mov
paddusw
sbb
bnd
ljmp
cmp
shlb
sbb
jmp
in
ss
orl
sbbl
add
nop
fwait
xchg
add
and
cmp
out
cmp
scas
rcl
xor
mov
mov
and
cmp
jmp
out
pop
lods
pop
jp
add
xor
xchg
cwtl
stos
nop
sbb
mov
fcmovnbe
xchg
maxps
mov
jmp
xchg
je
inc
cmp
sub
push
je
lods
decb
sbb
or
sbb
jge
lret
lods
mov
popa
lret
push
test
xchg
and
or
sti
cli
loop
add
out
lds
push
adc
mov
clc
cmpsl
jb
data16
cli
or
and
fstl
in
shlb
jg
test
nop
arpl
push
cmpsb
or
xor
pop
sbb
cs
jne
jmp
dec
insl
fwait
out
inc
xchg
push
scas
pop
jb
loop
in
daa
imul
adc
push
or
into
jg
adc
int
stos
xor
test
les
adc
bound
jns
or
aas
and
mov
or
dec
jne
dec
and
out
rcrl
es
movsl
les
loope
push
ret
orl
add
aas
aaa
call
testb
fisubrl
sub
sub
xchg
dec
sub
int3
jmp
pop
ds
rolb
inc
roll
in
and
int3
jge
and
pop
arpl
xor
push
pop
loopne
movsb
pusha
repnz
add
cmp
les
movsb
dec
jg
cmp
cmp
dec
xor
test
mov
xchg
mov
add
push
lods
fnstcw
jmp
xlat
call
mov
mov
sub
sub
imul
mov
and
ror
pop
inc
stos
inc
and
pop
jmp
dec
inc
pop
add
loop
mov
adc
dec
imul
loope
loope
mov
adcb
jmp
cld
cmp
daa
fistl
jp
loop
cmpsb
lods
movsl
pop
and
xor
xlat
jle
clc
dec
add
in
loopne
aas
and
out
leave
aas
xor
mov
repnz
lcall
push
leave
mov
lods
xchg
sbb
pusha
fcomp
adc
and
fs
cs
dec
jle
add
in
fstps
inc
cs
and
xorb
pop
sbb
nop
sub
in
inc
jno
pop
stos
es
or
negl
out
or
inc
add
sbb
lods
daa
call
fnstenv
insl
mov
or
test
jo
xchg
dec
fs
pop
add
femms
cs
mov
dec
mov
or
sahf
xchg
push
out
movsb
mov
out
loopne
and
pop
fadds
and
es
cmp
add
mov
cmpsl
shlb
sub
mov
rcl
push
xchg
or
mov
repz
xchg
leave
sahf
push
jae
sbb
cmpsb
rcrb
mov
lcall
sbb
icebp
xor
mov
les
not
lahf
iret
out
add
push
filds
and
and
in
in
in
jns
lcall
pushf
pushf
shl
enter
loopne
jbe
push
adcl
sub
stos
pop
sub
ret
dec
nop
in
and
cli
mov
stc
sub
je
inc
xchg
xchg
cwtl
mov
sbb
push
jae
xor
cld
lods
pop
adc
mov
mov
cmp
in
pop
negl
xor
push
stos
decb
jns
jne
add
mov
js
sbb
push
lock
pushf
ja
ja
lret
dec
ja
jnp
bound
mov
mov
sub
jmp
push
add
fdivr
test
mov
addb
fidivl
insl
cmp
xchg
and
pusha
in
jle
inc
cwtl
scas
gs
pop
daa
ffree
fcoml
iret
xor
lock
es
pop
icebp
je
push
out
ret
ss
sti
insl
pop
or
ds
repnz
add
add
fldl
outsl
mov
pop
or
das
std
int
push
lcall
out
aad
inc
lods
leave
mov
and
sub
std
out
out
push
xchg
add
mov
push
out
mov
cltd
stc
adcl
das
mov
cmpsb
nop
js
inc
call
mov
xchg
mov
sbb
push
mov
pusha
pop
adc
adc
inc
push
jnp
popa
push
ret
mov
das
and
lds
xor
mov
fcom
mov
hlt
test
dec
adc
mov
adc
xchg
inc
in
dec
loop
mov
mov
enter
push
scas
movsb
paddsw
adc
push
cmp
and
aad
and
adc
mov
dec
aas
jge
popf
inc
mov
out
pop
ja
xor
lea
ljmp
xor
mov
insb
aam
inc
push
sub
fistps
push
mov
pushf
lahf
or
xchg
iret
xchg
lods
lds
mov
movsl
jnp
test
dec
scas
jnp
or
mov
xchg
aad
repz
lcall
mov
inc
adc
lea
inc
push
xchg
cmpsl
test
icebp
push
sti
ss
test
xchg
in
push
pusha
cmpl
push
lods
mov
cltd
push
xor
fbld
cwtl
movsb
xor
std
fnsave
fucom
lcall
ret
adc
lret
pop
daa
adc
pop
loope
mov
jb
lcall
cltd
mov
push
int
add
push
cltd
and
aas
rclb
jnp
rorb
mov
in
xorl
jmp
and
mov
add
mov
fstl
dec
outsb
lret
pop
hlt
mov
idivb
inc
add
outsl
test
mov
push
dec
test
fdivl
jns
ja
pop
mov
cmc
lods
sub
sahf
xchg
push
mov
test
pusha
orb
in
xor
inc
pop
test
pop
jl
mov
test
mov
push
or
adc
jecxz
jns
popa
fbld
fucomi
inc
mov
jp
jp
dec
outsb
notl
jecxz
jge
out
roll
stos
subb
xchg
sahf
sub
push
jg
mov
lds
cmp
push
dec
adc
movsl
shrb
sahf
cmp
pop
das
mov
pop
mov
sarb
sbb
dec
jg
xchg
mov
push
stos
adc
mov
icebp
xchg
movsl
pop
fdivrp
loopne
jne
cmpsb
jnp
mov
stos
jno
int3
jno
jmp
pop
mov
inc
lret
pop
mov
repnz
jg
idivb
pop
popa
cmp
das
movsl
lret
mov
outsb
adc
aad
xchg
add
lcall
mov
pusha
cmpsb
into
cwtl
xlat
loope
and
int3
movsb
mov
cmpsb
call
and
imul
addb
popf
sbb
outsl
cltd
sbbl
push
xor
mov
call
fs
fstl
sub
add
aam
push
mov
xchg
or
push
add
or
sahf
adc
jno
stos
mov
in
insl
in
enter
int3
sub
mov
adc
dec
fcmovne
orb
jae
psubb
fwait
ja
fbstp
cmpsb
mov
sbb
inc
stc
mov
jno
mov
mov
xor
sub
int
or
int
aas
shlb
xchg
add
call
sbb
push
push
jge
push
bound
int
xchg
add
adcl
sbb
jg,pt
mov
sbb
cmpsb
mov
fisubl
mov
push
in
pop
add
mov
inc
xchg
cmpl
xchg
or
xchg
and
cmp
xchg
ljmp
pop
icebp
pop
lods
sbb
xlat
mov
push
cmpsb
hlt
lock
add
dec
push
js
nop
arpl
xchg
xorb
jmp
mov
ret
mov
test
popf
xchg
add
push
dec
mov
test
push
mov
cwtl
mov
adc
lret
mov
aad
xchg
sbb
xor
test
sahf
stos
xorb
loope
mov
push
mov
cs
dec
sub
pop
xor
and
loop
mov
divl
je
fwait
movsb
sbb
ret
ret
cs
rol
das
mov
push
fcomp
nop
push
mov
out
addr16
sbbb
ror
and
lock
sub
js
xorb
outsb
orb
daa
outsl
xchg
fadds
shlb
inc
mov
or
loopne
add
push
inc
mov
or
in
mov
stc
jge
movsb
inc
hlt
movsb
lods
mov
fnstenv
jp
aam
out
insb
jb
test
shrl
insb
xchg
sbb
or
xchg
inc
imul
dec
or
or
jno
popf
dec
xchg
add
sub
arpl
mov
sbb
ljmp
ficomps
xlat
mov
rcrb
xor
and
dec
sbb
and
add
mov
add
pushf
in
je
movsl
push
shlb
jo
dec
sbb
sbb
ljmp
icebp
jmp
mov
imul
ds
ds
fidivs
cltd
jae
rorl
pop
or
jmp
pusha
addl
sub
sub
insb
jg
and
fwait
push
imul
push
je
leave
imull
mov
jbe
rcrb
fst
mov
insb
movsb
mov
leave
mov
xor
rcrl
pop
jecxz
movsb
jne
pop
xchg
or
mov
cmp
mov
xchg
push
icebp
or
dec
jno
insb
iret
inc
and
inc
jno
push
cmc
mov
ficompl
cmp
stos
ret
aam
sub
xchg
cld
inc
inc
adc
mov
dec
mov
cwtl
xchg
jmp
aad
dec
mov
pop
pop
divb
jbe
aaa
shrb
inc
idivl
mov
clc
scas
xor
xchg
in
add
pop
mov
mov
jle
aam
stc
and
sub
cmp
sbb
mov
shll
and
inc
or
xchg
les
xor
fdivs
bound
xchg
adc
or
mov
or
hlt
aaa
pop
fistl
scas
cmc
and
push
or
or
ljmp
sahf
mov
rcr
mulb
xchg
pusha
enter
jmp
jb
insb
js
loopne
mov
dec
in
fwait
cmp
sbb
cmpsl
xor
push
in
pop
clc
imul
push
jecxz
push
mov
pop
inc
sbb
dec
out
inc
int
mov
aam
in
in
jle
jge
mov
inc
out
aaa
or
js
inc
fiadds
out
int3
stos
jno
hlt
std
cltd
bound
lods
dec
push
out
inc
imul
xor
sub
mov
dec
sbb
dec
stc
add
mov
insl
out
fs
xchg
or
iret
mov
aad
scas
dec
std
test
es
push
jl
fwait
out
mov
cmovns
outsl
cli
fdiv
push
sbb
in
cmp
arpl
sbb
mov
pop
sti
cli
xchg
mov
mov
push
jns
push
jo
ret
xor
loope
inc
cmp
cwtl
in
inc
outsl
ror
inc
xor
std
or
loop
adc
xchg
cwtl
adc
sti
jmp
cmc
mov
clc
push
cltd
out
mov
mov
xchg
in
jl
pop
xchg
je
aas
gs
ror
fstl
push
cmp
lock
aas
outsb
data16
jne
mov
mov
sbb
inc
repnz
fxch
test
cltd
out
sbb
lock
out
pop
sbb
scas
sub
push
xor
or
push
lods
jmp
repnz
sub
testb
xchg
push
jbe
lret
mov
sub
mov
push
cmc
insl
mov
jmp
enter
fcmovnbe
test
fisubrs
shll
sub
and
dec
adc
push
popa
fcmovbe
ja
sti
cs
aas
jnp
cmp
push
stc
psrld
cmp
xchg
fcomps
xor
xchg
jmp
and
testl
sub
insb
iret
arpl
repz
fisubl
iret
mov
out
cmp
mov
call
bnd
inc
rorb
lods
aaa
jmp
mov
mov
insl
stos
dec
hlt
iret
dec
ds
test
aaa
fdivp
sub
jne
je
inc
insl
mov
adc
cmp
negb
test
fsubrs
and
pop
mov
test
loope
sbbb
rolb
das
aam
dec
test
xchg
add
movsb
in
lret
mov
mov
cmpl
mov
outsl
lods
inc
loope
aam
dec
inc
fmul
and
insl
outsb
fistps
scas
sub
sub
loope
mov
int3
xor
dec
stos
adc
andl
jno
out
mov
jns
dec
out
pop
fildll
loopne
arpl
jns
sahf
pop
cmp
daa
fcoml
vmread
mov
and
arpl
rorl
xor
fsubs
add
jmp
outsb
in
lcall
xchg
and
lds
in
leave
push
or
inc
repnz
mov
mov
inc
call
mov
lods
jmp
shlb
mov
sub
add
popf
nop
sbb
inc
ds
dec
test
test
imul
clc
lea
shlb
ss
sub
mov
dec
push
push
out
cmp
dec
insb
mov
or
dec
cld
mov
repnz
add
jecxz
outsl
pushf
gs
in
mov
add
out
aas
out
mov
jnp
cli
cmpsb
in
mov
nop
mov
inc
or
cmp
call
push
sbb
andb
sub
mov
outsb
rolb
sahf
nop
shll
pop
je
pushf
mov
mov
sub
lahf
sub
mov
lahf
sub
inc
xchg
inc
xchg
sub
mov
pusha
mov
mov
sets
lret
out
divl
fdivrl
adc
in
mov
pop
fidivrl
inc
cmp
cs
xchg
pop
cmpsb
rclb
movl
sub
mov
aad
pushf
fistpll
sbb
nop
shll
lahf
lds
mov
add
inc
inc
pop
dec
xor
aad
jae
mov
rolb
cmp
pop
adc
xlat
ftst
scas
jle
ljmp
arpl
and
scas
sbb
mov
xchg
scas
pop
pop
push
cmp
jno
iret
xchg
loop
outsb
inc
shll
lods
cmp
cmp
mov
sub
fldenv
int
cmp
movaps
push
out
dec
xchg
adc
in
pop
ret
mov
jmp
lods
jg
jae
jle
cmpsl
fimuls
fsubl
jp
pop
lock
cmp
xchg
in
fcmovnb
outsl
das
cmp
rorl
mov
pop
arpl
out
fdivrl
mov
lea
push
mov
seta
fisttps
or
mov
stos
scas
cmp
xchg
outsl
cs
fdivrl
fidivrs
inc
iret
sbb
mov
mov
test
fstpt
jl
iret
dec
pop
cmc
sub
fwait
pop
std
and
dec
sbb
jg
mov
cs
pushf
mov
jns
push
out
lds
cmp
ds
pop
nop
scas
rclb
dec
outsl
test
neg
fnstcw
loopne
sbb
adc
sub
fwait
pop
mov
cli
in
stos
lock
or
iret
push
leave
xchg
push
jne
push
in
xchg
pop
or
add
insl
lret
and
dec
xor
jge
inc
fcoml
mov
sbbb
scas
icebp
push
cmpl
sbb
add
shr
popf
cmp
mov
dec
cli
call
aaa
mov
out
mov
ret
pop
xlat
and
sub
pusha
mov
xchg
rcrb
aas
cwtl
repz
xchg
or
cli
inc
xor
cltd
out
shr
adc
shll
jl
jp
add
dec
mov
lock
ljmp
add
sub
and
inc
stos
sub
bound
ret
dec
outsb
cmp
adc
je
jmp
cmpsl
push
cmpsl
imul
cmp
mov
sub
clc
imul
loope
or
adc
lods
stos
loopne
imul
sub
in
loope
cmp
xchg
fldl
mov
push
xchg
cmp
jo
lea
int3
lcall
push
popa
into
sbb
ret
cmp
mov
out
mov
clc
jmp
test
push
add
adc
clc
xchg
dec
lock
pop
popa
clc
movsl
push
push
aas
inc
mov
sub
adc
push
or
iret
or
mov
mov
vpand
std
je
push
mov
leave
fwait
mov
sbb
ss
push
pop
in
testl
repnz
dec
or
in
cmp
out
and
out
push
xchg
sbb
xchg
mov
cmpsl
sbb
xlat
sti
daa
and
sbb
fcmovbe
aam
ja
jecxz
leave
xchg
cmpb
dec
jo
gs
ret
sub
sub
ret
push
adc
xchg
cmp
shll
fdecstp
arpl
push
sbbb
insb
jae
mov
adc
sbb
and
or
dec
in
mov
movaps
out
add
pavgw
mov
orb
mov
js
sub
xchg
sti
sub
cmpsb
int
inc
inc
mov
fidivs
xchg
and
shll
pop
mov
mov
call
das
jne
push
xor
mov
inc
in
pop
xor
jo
push
ret
test
cmpsb
clc
jne
test
sbb
cmp
push
movsb
negl
lret
fiaddl
xchg
aad
mov
cmc
stos
xchg
iret
push
std
arpl
xchg
xchg
js
xor
fidivl
in
xchg
adc
sub
pop
jne
stc
sbb
push
jo
stos
lea
lods
dec
scas
mov
outsl
lock
mov
pop
int3
sub
push
mov
shll
pop
adc
jp
jne
jns
xchg
fcmovnu
cmp
sar
inc
repnz
call
xchg
lock
pusha
test
rcr
ljmp
ds
pop
xchg
shr
push
rcll
fs
jnp
lods
fwait
lcall
mov
mov
cmp
clc
gs
dec
mov
inc
inc
sub
xchg
mov
mov
test
aad
adcl
inc
les
lahf
fwait
ud2
jmp
jmp
bound
adc
inc
dec
test
cmp
jle
add
or
dec
jmp
push
les
stos
fimuls
test
aad
push
out
dec
stc
out
scas
daa
cmp
push
adc
arpl
push
inc
or
imul
iret
addr16
add
popa
xor
mov
insb
lcall
shll
lods
mov
daa
sub
push
gs
ljmp
icebp
mov
push
xchg
stos
cltd
enter
mov
enter
xchg
daa
mov
sub
or
mov
lret
pop
aam
and
in
scas
stc
inc
loopne
push
xchg
popf
jp
sahf
xchg
and
pop
and
shr
hlt
adc
mov
or
xor
popf
dec
pop
add
cmp
fildl
imul
movsl
pop
fwait
dec
ljmp
xchg
pop
mov
pop
mov
leave
leave
fisubl
shl
mov
clc
pop
test
into
test
and
int
or
dec
in
xchg
ds
add
mov
adc
xor
stos
mov
pop
bound
fcompl
xchg
adc
push
mov
ret
mov
outsb
loop
insb
addl
repnz
xor
test
pop
lcall
add
cmpb
adc
mov
mov
xlat
or
iret
sbb
movsb
or
inc
mov
sub
cmp
aaa
or
fwait
push
dec
mov
jae
mov
nop
mov
mov
mov
sbb
jl
xchg
push
cmc
fcoms
jle
jnp
repz
pshufw
and
insb
xchg
cmp
mov
inc
xor
and
pop
mov
mov
and
gs
jle
or
adc
xor
jb
dec
sub
les
mov
jnp
fstpl
ja
pop
fnsave
cmp
out
cmpsb
jmp
das
cmp
xor
sub
add
mov
sub
gs
repz
popa
mov
push
sbb
dec
addl
es
jmp
jbe
stc
xchg
xor
int3
inc
loope
xchg
jo
leave
scas
xchg
mov
and
clc
and
imul
cli
aam
xchg
or
dec
mov
sub
jecxz
sub
xor
cmp
xchg
or
jmp
cmp
ja
leave
jg
mov
dec
and
fstps
jg
mov
xchg
xchg
scas
dec
clc
enter
outsb
cli
and
and
lahf
ret
inc
lret
lods
roll
in
pop
insb
test
fistpll
inc
or
adc
imul
jle
cs
sti
test
out
mov
and
mov
notl
orl
sbb
push
lods
imull
jo
addr16
cmp
fsubrl
cmpsb
cmp
adc
insl
cwtl
jnp
ret
test
adc
xchg
add
dec
sbb
cmp
jno
imul
push
inc
cltd
mov
movsb
add
pop
lds
loopne
push
ja
mov
in
test
adc
aas
mov
mov
lea
mov
mov
rcr
out
scas
adc
into
or
js
imul
jle
cwtl
and
mov
jle
xchg
insb
lahf
mov
add
mov
ja
je
mov
ss
xor
jp
into
aas
arpl
pusha
dec
mov
in
push
stos
andl
ja
jle
cli
movsl
out
push
test
test
imul
out
or
stos
jmp
or
test
cs
into
xor
shlb
loopne
adc
cmpsb
dec
inc
mov
push
mov
jnp
sti
js
in
icebp
adc
jecxz
jnp
clc
nop
mov
out
sbb
adc
fs
div
arpl
adc
loope
call
pop
adc
push
sub
jecxz
insl
leave
int
mov
inc
int
ds
adc
pop
mov
xor
adc
sbb
cmp
imul
or
jbe
repnz
and
jo
fbld
and
mov
test
aaa
daa
arpl
insl
insl
test
int
sbbl
inc
out
xlat
fstp
push
lcall
cmp
cmpb
ljmp
xchg
jl
shl
jmp
cmp
cmp
sub
adc
xchg
lcall
mov
fdivrl
cmp
aas
sti
fsubrl
adc
imul
scas
lea
inc
idivb
and
push
pop
shlb
cmp
and
mov
lcall
dec
das
sub
push
mov
addr16
and
pop
ja
add
stos
cld
mov
mov
jbe
shrl
sahf
mov
mov
inc
lret
pop
dec
repnz
arpl
adc
add
into
imul
fdivr
lcall
iret
fdivl
mov
pop
xor
adc
mov
sub
movsb
cmpsl
imul
mov
incl
mov
pop
sbb
loopne
nop
mov
pcmpgtw
dec
call
pop
push
ss
mov
xlat
std
and
fisttpl
sbb
nop
sbb
mov
inc
inc
add
pop
lods
sbbl
cmp
xorb
jp
sub
jbe
or
imul
mov
int3
outsb
shl
mov
scas
daa
xor
packuswb
sub
sahf
push
mov
ja
clc
and
sti
or
xor
cwtl
and
pop
negl
inc
rclb
or
lods
adc
es
xor
and
push
or
inc
or
dec
sbb
pop
adc
inc
jg
cmpl
pop
arpl
fcoms
ja
dec
aas
xchg
push
mov
rorl
ret
aaa
ret
ret
data16
dec
xor
adc
xchg
test
lds
sbb
mov
cmp
pop
iret
icebp
pop
popf
sahf
lods
pop
loope
call
insl
xchg
popa
jnp
xchg
mov
stos
nop
aas
add
test
jecxz
shlb
shlb
dec
sub
rcrb
and
neg
pop
sub
fs
jg
or
aam
dec
hlt
sub
psubsb
xchg
xchg
shlb
jge
lea
in
lret
test
dec
add
mov
push
mov
fiadds
lods
fldcw
jne
fnsave
cmp
imul
jl
les
mov
fwait
cld
xchg
sbb
add
adc
popl
js
cmc
inc
stc
jbe
push
fnstsw
xor
jl
frstor
rorl
fdivrl
mov
pop
xor
mov
lock
mov
pop
fcompl
repnz
adc
cld
xlat
dec
push
lds
mov
adc
fcmovu
nop
and
pop
jno
fs
adc
cmp
outsb
jp
pusha
xchg
and
sub
sbb
adc
xchg
xlat
cmp
pop
inc
lcall
ret
mov
mov
cltd
or
mov
into
jo
cwtl
mov
push
lock
xchg
mov
mov
mov
das
into
add
xchg
stos
cmc
mov
sahf
fidivrs
mov
lock
mov
loopne
insl
xor
jno
sub
push
jb
addr16
sarl
pop
fistpll
jg
inc
inc
dec
mov
js
cmp
rcl
pop
inc
pop
pop
popf
inc
mov
fs
scas
push
mov
int
xorl
imul
or
roll
xchg
dec
inc
dec
pop
push
out
push
or
lea
mov
inc
hlt
inc
add
jecxz
repz
pusha
jno
and
dec
icebp
dec
arpl
cs
lods
testl
leave
shlb
mov
cmp
cltd
ljmp
lcall
inc
jno
cs
adc
sub
jno
ss
int3
fmul
fdecstp
add
pop
adc
outsb
jg
adc
pop
jnp
push
sbb
lea
pop
inc
sbb
pop
pop
inc
xchg
movsl
pushl
jb
repz
daa
mov
ret
cmp
and
insb
mov
push
pop
add
mov
cld
cmp
popa
jle
lds
sahf
pop
and
dec
xor
jne
aam
adc
jno
stos
sbb
mov
iret
scas
scas
dec
out
je
loope
loope
fneni(8087
pusha
sbb
pop
mov
sub
dec
mov
lahf
sub
popa
or
mov
jle
dec
add
add
lret
mov
test
icebp
and
jb
in
lahf
out
cld
shlb
leave
jbe
inc
loop
cmp
outsb
cld
adc
jbe
sub
fmull
dec
insl
jne
popf
stc
mov
mov
cmc
or
lods
out
les
jns
pop
in
stos
jp
movsb
xlat
in
das
fs
jge
nop
adc
jns
es
push
pop
dec
pop
push
adc
dec
daa
inc
movsb
mov
cmc
xlat
mov
add
adc
enter
adcl
inc
xor
int
inc
sbb
jb
mov
ljmp
inc
xor
stos
inc
xchg
xchg
mov
test
inc
lods
jno
ds
aaa
or
xor
clc
cmpb
pusha
sahf
cmc
rcrl
dec
inc
and
add
insb
out
add
sbb
testb
lret
dec
sbb
adc
ficoms
pushf
inc
rep
rcrl
addr16
ljmp
fwait
mov
mov
sbb
xchg
fsubrl
inc
add
fwait
push
ja
in
xlat
xchg
jp
push
jns
or
or
jg
dec
stc
xor
xor
fstpt
inc
jp
and
bound
inc
sbb
sub
fdivrl
jge
jl
mov
and
or
leave
daa
js
repz
bound
dec
js
sub
rolb
add
test
insl
sub
adc
insl
pop
call
adc
jno
scas
mov
rorb
cmp
ret
sbb
and
or
xchg
cld
pop
xchg
rorl
loope
mov
ds
mov
ror
dec
cmp
out
xor
movsb
cmp
xchg
icebp
pop
pop
adc
or
mov
test
add
cmp
jmp
dec
daa
xchg
jge
rcrl
jecxz
cli
lcall
es
int3
call
mov
loop,pt
adc
push
imul
jle
fadds
pop
cmp
lods
movsl
ror
add
fcomi
pop
inc
sub
mov
or
ss
jnp
jbe
out
dec
push
or
js
les
cs
daa
xor
push
jo
and
cltd
jecxz
hlt
lods
into
cmp
push
js
pop
xlat
pop
jae
adc
xchg
add
mov
mov
int
mov
pop
lods
push
sbbl
xor
xorl
jb
sar
subl
out
and
rcr
popa
cmpsl
dec
jge
dec
cmp
xor
push
and
cmp
lahf
in
cmp
push
add
imul
cld
xorb
outsb
cltd
mov
sub
pop
adc
push
mov
jg
imul
ds
int3
inc
cmp
js
mov
dec
out
js
pop
push
pop
push
sbb
and
and
dec
lahf
sbb
out
mov
into
add
iret
xor
cmp
xchg
fisubs
gs
lcall
in
push
jecxz
mov
inc
dec
out
dec
popf
add
push
and
int3
or
inc
pop
fs
or
mov
and
stos
das
scas
mov
jb
lret
pop
mov
in
leave
push
adc
jae
pop
sarl
ds
insl
adc
aaa
pop
in
aam
shl
test
push
adc
mov
inc
lret
sub
mov
mov
xlat
cli
inc
cmp
andb
xor
subl
das
cmp
pop
xchg
mov
xor
aad
mov
jle
adc
cmp
pop
lret
imul
ss
out
lahf
or
xchg
xchg
mov
push
adc
pop
test
ljmp
fistpl
fimuls
mov
mov
inc
test
push
or
lret
push
xor
sti
leave
mov
push
jmp
cs
push
stc
dec
cmp
push
test
rcr
je
gs
stos
pushf
or
mov
mov
nop
add
lret
loop
mov
stos
lcall
in
shl
push
jle
mov
dec
mov
mov
jecxz
xor
jns
jno
mov
jnp
push
add
dec
xchg
cmp
outsl
mov
icebp
xor
jecxz
adc
push
push
cmp
add
das
dec
std
jmp
jg
jecxz
movsl
stos
mov
test
jg
sub
stos
adc
loopne
lock
jb
cmp
jecxz
pop
inc
xchg
pop
ljmp
sarb
sbbl
iret
push
fsts
jle
sbb
jne
xchg
mov
lcall
aas
xchg
xchg
aad
mov
mov
mov
xchg
push
ss
mov
sub
into
add
mov
std
cmp
stc
fcmovbe
cmp
mov
adc
adc
adcb
xchg
add
leave
adc
dec
and
mov
or
mov
xor
sahf
sti
cmc
adc
cmp
sub
outsb
mov
enter
ret
dec
lea
lret
test
or
rorl
dec
repz
jge
push
mov
mov
loopne
cld
nop
aaa
jp
xchg
rclb
clc
mulb
daa
and
xor
lcall
mov
or
sbb
inc
mov
mov
out
aaa
mov
sti
out
jp
jp
jecxz
lods
inc
movsl
ss
insl
inc
into
scas
addr16
popa
push
mov
test
dec
mov
mov
addr16
push
cmpsb
mov
out
pop
aaa
fnstsw
or
dec
call
pop
imul
mov
pop
in
call
pop
int3
push
sub
call
xchg
mov
adc
or
test
dec
iretw
ret
inc
add
and
data16
es
jmp
push
fstl
sbb
das
pop
mov
movsb
push
or
adc
outsl
jnp
push
ds
cmpxchg
pop
popf
rcll
jae
inc
ret
mov
shll
xor
icebp
sub
push
jno
lea
pushf
adc
test
and
daa
mov
mov
int3
cli
pop
mov
lahf
fdivs
mov
enter
iret
push
xlat
dec
mov
and
push
std
cmpsl
sbb
pop
push
mov
rcrb
mov
test
adc
lahf
push
test
int
xchg
add
dec
imul
popa
cmc
out
mov
pop
push
pop
lods
ret
jp
xchg
or
lret
cli
les
call
cli
cmp
jno
retw
int3
lock
mov
sub
in
inc
aad
in
nopl
sbb
loop
dec
push
mov
and
inc
cld
xchg
inc
jmp
and
sti
xor
inc
sub
mov
xor
jg
lds
mov
mov
out
xchg
jmp
loop
fisttpl
pop
iret
ds
push
pushf
or
mov
mov
jg
cmc
jb
jmp
pop
sub
push
pop
inc
xchg
cmpsb
xchg
xchg
jl
add
push
ja
pop
movsbl
xlat
inc
out
hlt
adc
outsl
arpl
pop
inc
dec
lods
xor
add
pop
or
and
cmp
les
push
pop
scas
mov
jge
push
sbb
sbb
enter
cmp
lret
inc
and
in
ljmp
sbb
and
push
fmul
sbb
das
jle
jns
test
jp
push
xor
mov
adcb
shr
mov
loope
in
push
fbstp
out
push
test
inc
pop
test
add
test
ja
adc
scas
in
or
outsb
es
push
push
outsb
sbb
stc
mov
shrb
sbb
fdivl
aad
add
lret
lods
lds
cmp
cli
jnp
mov
mov
sub
divb
call
cmpb
and
mov
lea
int
pushf
aas
cmp
jns
sub
es
mov
addl
xchg
cwtl
jbe
lcall
inc
nop
subl
and
inc
mov
cld
mov
adc
xor
dec
or
add
push
mov
cmpsl
mov
inc
cld
sbb
mov
mov
in
xor
ds
pop
cmc
push
jo
cmp
lret
jnp
mov
lods
adc
jmp
movsl
inc
movsb
pop
sbb
call
lods
fdivrl
mov
fwait
cmp
sub
mov
ja
dec
add
lods
xlat
repz
icebp
addr16
xchg
movsb
mov
mov
test
imul
ja
xor
rcrb
push
push
cmp
mov
mov
xchg
repnz
movsb
mov
std
inc
out
shr
cmp
push
movsb
in
aad
sub
jno
out
jecxz
push
insb
cmpsb
pop
mov
inc
jle
jnp
dec
pop
mov
gs
lcall
fsubs
imul
mov
cmp
push
xlat
and
gs
neg
cmp
pop
or
cli
sbb
and
sahf
mov
lret
inc
cmp
daa
jp
rcr
das
pop
mov
and
mov
push
pushf
jne
das
push
sti
ficoml
fs
jl
xchg
xor
cs
clc
adc
inc
xor
cmc
xchg
sbb
sbb
jns
adc
xor
outsb
pop
inc
mov
out
jl
push
fdivr
bound
mov
insl
in
shlb
jb
outsl
popf
jns
jmp
jle
push
jns
sbb
jne
movsl
mov
mov
cmp
push
push
in
jo
fnstsw
mov
dec
icebp
mov
and
divl
adc
aaa
std
xchg
rorb
imul
sub
cli
aas
scas
stos
dec
mov
sub
mov
cmp
cmpsl
sub
ret
sub
fwait
push
mov
pusha
lcall
pop
fnstenv
sbb
mov
test
bsf
pop
aam
fstl
inc
push
cli
adc
add
inc
mov
sbb
lahf
jb
scas
arpl
jp
jne
cmpsl
lock
mov
jmp
mov
scas
pushf
dec
loope
xor
nop
cmpb
push
lods
push
sub
xor
ret
rolb
sahf
int
out
movsb
xlat
fisubrl
inc
movsl
test
push
loope
mov
pop
rolb
mov
jmp
mov
jbe
jnp
dec
and
mov
pop
call
repnz
push
mov
mov
cmp
mov
stos
fisttps
flds
inc
xor
rcl
cltd
pop
dec
js
or
gs
push
jmp
jbe
pop
and
sar
scas
in
jl
dec
pop
sub
jno
add
mov
sbb
jg
scas
test
inc
and
pop
adc
addl
orb
in
mov
xchg
into
lods
imull
outsb
pop
cwtl
adc
dec
fdivl
sti
shrl
rclb
cmpsb
fs
clc
mov
push
jmp
mov
stos
add
cmp
dec
mov
mov
xor
jle
rol
in
jnp
pop
mov
lock
in
loope
decb
sbb
mov
cmp
inc
mov
xchg
sub
and
lds
sarl
fnstcw
ss
pusha
pop
loopne
loop
cmp
mov
loope
addr16
mov
xchg
imul
mov
push
mov
inc
mov
insb
push
loopne
es
cmp
stos
daa
std
xchg
pop
add
or
icebp
jge
and
popa
xor
xchg
or
scas
jp
dec
xchg
pop
scas
push
leave
mov
bound
cmp
xor
daa
jmp
scas
push
ret
pop
sahf
xor
mov
je
dec
pop
mov
iret
mov
sub
imul
loope
cmpsb
je
arpl
push
push
jns
mov
sahf
aaa
mov
lahf
sbb
pop
cmp
call
pop
sbb
mov
xchg
aas
cmp
inc
addr16
pop
jbe
mov
pushf
in
xchg
clc
arpl
push
jae
jo
or
jecxz
push
shr
and
leave
push
mov
pop
test
test
sbb
add
xorb
insl
cltd
adc
insl
imul
scas
xchg
test
sbb
mov
jb
aas
lea
inc
fisttpll
and
mov
mov
adcl
adc
fs
xchg
cmp
hlt
in
faddl
out
mov
cmp
dec
push
scas
cmp
mov
jne
data16
idiv
add
adc
sub
arpl
jns
or
les
movsb
mov
in
das
push
mov
adcl
les
ds
out
aas
addr16
ds
xor
sbb
pop
adc
mov
neg
stos
xlat
xchg
hlt
xor
xlat
test
ret
sbb
push
pusha
int
inc
xor
fidivs
xchg
sub
inc
mov
xchg
negl
jne
push
and
push
mov
dec
inc
cmc
cli
in
pop
lahf
mov
xchg
mov
es
fistps
inc
inc
inc
loop
mov
cmpsl
ja
jle
dec
add
xor
xlat
loop
adc
or
adc
push
lods
or
mov
aaa
pop
push
leave
mov
out
sub
jmp
lods
mov
sti
test
lods
jmp
xchg
push
mov
add
jno
scas
push
subl
mov
push
inc
mov
ret
repnz
jmp
out
xchg
sbb
jl
dec
pop
aad
xor
icebp
rolb
sub
in
pop
rcrb
and
mov
in
shl
cmp
inc
stos
jle
stc
mov
pop
ljmp
cltd
mov
pop
push
push
jnp
ja
or
fs
inc
jecxz
cwtl
push
cmp
repz
add
mov
jbe
jbe
int
and
ds
mov
add
sbb
dec
pop
nop
outsb
add
fnstsw
cmp
lock
push
mov
fwait
push
adc
xlat
pop
lahf
pop
inc
testl
pop
inc
je
aaa
and
mov
stos
cmp
adc
dec
ljmp
les
loope
pop
xor
fwait
lea
cld
stos
pop
data16
test
fsubs
or
pushf
cmc
and
lds
jns
add
data16
int
fwait
or
lcall
shll
mov
mov
xchg
popf
push
enter
jge
mov
in
xlat
jae
mov
jnp
inc
insb
in
fisubs
jle
or
dec
push
push
sub
pop
cmp
pop
dec
and
scas
lea
fdivl
daa
sbb
or
test
xchg
inc
das
dec
and
push
xchg
out
and
rcl
gs
or
add
mov
fsubp
dec
iret
and
testb
sub
inc
pop
push
mov
push
aas
rolb
cmc
frstor
xchg
mov
andb
mov
xor
add
pushl
loopne
mov
mov
xchg
insb
or
pop
mov
gs
xchg
xchg
or
iret
pop
push
imulb
test
int3
aad
dec
enter
mov
cld
add
ficoms
sub
lret
xor
ret
in
pop
pusha
cmp
and
lds
sarb
xor
in
ror
pop
icebp
dec
dec
popa
jno
dec
test
push
push
cwtl
cltd
xchg
imul
rorb
lods
sahf
inc
adc
mov
sub
jg
ds
testb
les
mov
xor
loop
pop
aaa
jmp
jge
pop
sbb
cld
jae
aas
shrb
repnz
into
lea
out
mov
mov
push
leave
push
loop
loopne
scas
ret
pop
mov
sbb
and
add
mov
inc
pop
rcl
push
lret
fimuls
fwait
pop
pusha
xor
mov
cwtl
rclb
ficoml
aam
mov
addr16
fidivrs
fimull
add
mov
jg
sti
inc
sub
sarl
or
test
push
das
mov
ja
jge
jmp
inc
jae
inc
mov
pop
inc
xlat
cmpl
add
stos
movb
repnz
cs
repz
mov
cmp
push
mov
pushf
sub
outsl
and
ret
insl
sti
xchg
loop
or
mov
dec
or
fidivl
xor
push
sub
push
adc
popf
repnz
int
push
lahf
insl
mov
sbb
ret
xchg
or
sbb
sti
inc
dec
cmp
mov
ljmp
adc
jecxz
mov
xchg
mov
bound
dec
fmull
sub
jne
out
push
xchg
or
stos
out
daa
je
adc
in
mov
std
in
mov
lods
mov
sub
sbb
or
dec
insb
or
outsl
rcll
sub
inc
mov
ret
mov
pop
bound
outsb
xlat
movsb
jp
aaa
jmp
jb
lret
jbe
add
aad
scas
lods
pop
mov
push
dec
sbb
mov
sub
jmp
pop
mov
js
imul
sub
and
repnz
mov
adc
fcompl
int3
outsb
shll
add
mov
fsubrs
lods
pop
mov
push
adc
in
adc
aam
in
test
aad
push
in
arpl
pop
in
push
test
fwait
mov
xchg
das
rorb
insl
xor
adc
sbb
iret
fnstsw
loopne
test
fsub
sbb
mov
push
mov
push
in
addl
das
sub
outsb
sub
jp
add
stos
jne
stc
push
xchg
mov
push
dec
insl
xchg
es
sbb
push
imulb
out
outsb
mov
push
or
jmp
arpl
addb
xor
sar
push
je
leave
dec
jmp
sub
sub
jnp
mov
dec
rclb
inc
pop
test
push
lock
xchg
mov
test
mov
movsb
lock
mov
sbbb
sbb
scas
sbb
mov
mov
out
mov
lret
lods
cmp
adc
push
push
push
and
fcmovu
aam
mov
jo
shll
mov
fnstcw
fbstp
jnp
push
push
and
ljmp
loopne
in
pop
sub
mov
adc
scas
sub
mov
fsubr
adc
daa
rorb
xchg
sbb
sbb
xchg
outsb
push
add
inc
insb
mov
pop
shr
sub
adc
jp
lods
enter
je
xchg
out
inc
shlb
xchg
pop
push
js
adcb
fwait
cmc
dec
dec
adc
cmp
faddl
add
push
inc
sbb
sbb
xchg
lret
add
call
cmp
push
ret
and
int3
inc
push
mov
add
sbb
pop
leave
imul
dec
inc
adc
adc
movsb
cwtl
adcl
in
cwtl
sbb
jb
add
mov
ja
add
add
sub
push
push
xchg
jnp
inc
adc
jnp
leave
adc
mov
adc
popf
daa
sub
pop
push
sti
adc
loope
scas
in
fmuls
enter
pop
daa
mov
mov
mov
add
enter
ja
and
fcoml
fisubl
leave
xlat
out
leave
fstps
add
sbb
xor
insb
addl
imul
in
cmp
sbb
mov
mov
test
or
aaa
test
cli
xchg
std
lret
sti
std
jmp
cmpsl
mov
jge
and
cmpb
or
cs
push
clc
lahf
sbb
and
cltd
in
out
xchg
jnp
add
test
cmp
cwtl
adc
aas
push
mov
repnz
xchg
push
mov
test
jecxz
xchg
loope
or
test
stos
push
int3
and
jp
mov
loop
push
inc
push
push
jb
jbe
in
dec
sbbl
dec
stos
pushf
addl
push
cmc
cmpsl
xor
inc
pop
jle
xor
lret
xchg
lods
outsl
iret
sbb
adc
mov
pop
pusha
rorb
mov
pop
mov
mov
movsl
adc
pop
sub
pusha
cmp
jge
jl
pop
push
test
fiadds
lcall
jne
icebp
inc
popa
cld
jg
xchg
aas
push
adc
push
aas
fwait
add
lret
jle
in
fisubrl
dec
pop
adc
jg
cmp
and
sbb
or
leave
jg
in
cmpsb
sbb
or
mov
call
cmpsl
mov
cs
jbe
test
into
or
xor
jmp
inc
je
mov
add
mov
mov
enter
jae
fnstenv
orl
xor
mov
test
add
fs
out
popl
inc
in
xlat
fcmovne
stc
jbe
les
jmp
dec
push
std
cmp
bound
dec
loopne
test
pop
pop
mov
ret
arpl
xchg
and
mov
mov
aam
push
std
fwait
test
xchg
scas
inc
data16
aam
inc
cwtl
jge
jmp
sbb
shlb
movsb
xchg
data16
popaw
cli
mov
data16
fiadds
mov
rorl
popf
mov
push
aad
mov
dec
outsb
sub
mov
into
pusha
dec
jae
addr16
cmp
lods
out
repnz
push
mov
add
pop
jb
xor
mov
inc
push
jge
insb
sub
jmp
aad
pop
sub
mov
ficomps
and
inc
mov
incl
xchg
icebp
and
jae
xchg
sub
into
rolb
mov
push
dec
or
jb
scas
lret
incb
sbbb
cmp
xchg
jl
mov
dec
data16
push
pop
xorl
lret
sub
insb
subl
lret
push
loope
jl
shlb
aas
ss
rcll
mov
dec
lock
and
out
sub
int
loop
dec
mov
add
push
stc
movsb
and
push
nop
inc
adc
in
lret
xorb
shl
mov
mov
xchg
repnz
adc
pop
je
push
push
icebp
sub
in
pop
cmp
xchg
and
xor
xchg
mov
daa
lahf
lcall
jns
sti
cltd
aad
xchg
jb
sbb
in
jecxz
dec
outsl
jbe
in
xlat
pop
or
pop
imull
sub
jecxz
sub
mov
or
scas
mull
and
push
sbb
mov
addb
inc
loop
in
dec
mov
je
xchg
and
leave
adc
adc
mov
pop
gs
ds
jb
dec
jecxz
ljmp
repz
das
pop
sbb
pop
pop
push
xchg
call
pusha
mov
je
in
lret
push
add
aaa
data16
mov
addr16
sbbb
mov
pop
sub
pop
xchg
adc
les
push
shl
add
enter
mov
jp
xchg
xchg
push
push
adc
les
rorb
lret
int
add
dec
add
rol
push
add
pop
cmpsb
fists
add
fidivl
xchg
and
cli
adc
add
lret
movsl
orl
sub
out
push
inc
bound
inc
push
xlat
test
add
enter
cltd
mov
out
scas
arpl
in
rcl
sbb
cwtl
int3
add
mov
hlt
add
xchg
repz
cmpsl
jmp
mov
in
adc
inc
cmp
xor
jbe
ss
sar
jge
leave
fadd
add
mov
xchg
outsl
call
fisubrs
outsw
xchg
dec
jge
xor
int
pop
bound
repz
enter
or
jecxz
addr16
xchg
cmpb
mov
ds
in
in
mov
lcall
xchg
mov
test
jnp
aam
int3
mov
out
cmpsl
pop
xchg
fs
clc
imul
enter
in
stc
in
mov
or
push
bound
outsb
push
inc
and
pop
arpl
add
lods
or
push
pop
mov
cmp
jecxz
imul
cmp
cld
cwtl
push
push
test
in
jecxz
sahf
mov
jmp
pop
mov
aas
addr16
sbb
push
or
fidivrl
push
sbb
pop
mov
mov
inc
jg
adc
ljmp
repnz
and
dec
push
sub
jg
rclb
mov
push
fadd
jge
pop
rol
push
mov
or
sub
movsb
xchg
mov
jge
mov
sbb
addb
rcr
push
mov
push
xor
data16
jbe
add
mov
and
repnz
imul
fs
xacquire
clc
mov
inc
loop
dec
sbb
rorb
mov
loope
stos
aad
fistpll
pop
and
mov
popa
pop
push
add
ja
fmul
push
inc
mov
push
addr16
pop
test
fists
inc
sbb
rcl
test
or
mov
xchg
jbe
pusha
les
jge
lahf
fcoms
mov
dec
mov
sti
imul
cmpsl
jecxz
and
sbb
daa
roll
adcl
dec
adc
mov
iret
aas
shl
mov
add
xor
mov
int3
sbb
lretw
fnstenv
and
addl
mov
stos
loop
jecxz
out
lcall
add
sbb
fnstsw
and
ds
xor
fdivrp
inc
popf
sbb
mov
xchg
test
add
aad
jg
or
cmp
cmpl
push
push
adc
adc
dec
in
imul
cli
dec
bound
lds
jl
mov
cs
cmc
pxor
push
stos
call
scas
sub
nop
sub
fwait
mov
mov
test
mov
and
mov
pop
cwtl
pop
mov
fisubrl
xor
sub
ss
mov
test
or
call
rolb
bound
out
repz
imul
xor
pushf
inc
fldl
enter
vpsubsb
dec
mov
cmp
adc
xor
jae
xchg
repnz
dec
mov
xchg
lock
cmp
mov
sub
sahf
ret
sbb
push
mov
fwait
in
in
cmpsb
cmp
push
push
in
out
inc
add
js
and
icebp
out
inc
in
data16
movsl
outsl
loop
jnp
sbb
dec
fdivrs
sbb
imul
cltd
inc
imul
inc
mov
mov
lret
pop
dec
mov
mov
push
fdiv
scas
mov
mov
jmp
fwait
gs
cmp
cltd
bound
xchg
pop
aaa
jnp
xor
push
je
jne
add
push
pusha
push
scas
shrl
imul
iret
xlat
dec
mov
adc
pop
mov
sbb
add
xchg
outsl
or
test
test
rol
xorl
sbb
push
dec
xor
out
add
jmp
push
into
cmp
ljmp
adc
sub
scas
dec
cwtl
xchg
fdivs
out
mov
out
int
sub
popf
cmp
sar
xchg
in
das
sub
pop
mov
mov
movsl
mov
sbb
jae
cmp
xor
popf
sarb
mov
sbb
inc
pop
shll
push
test
test
push
lods
sbb
loop
adc
mov
imul
imul
mov
and
cmp
mov
inc
cs
out
call
pushf
arpl
push
gs
push
sub
les
push
jl
or
loope
enter
and
pop
mov
mov
test
out
stc
inc
xchg
test
xor
push
push
jmp
cli
xor
out
pushf
xchg
sub
push
ret
inc
lcall
pop
cli
xor
test
sbb
jmp
jb
jo
inc
mov
sbb
mov
jle
xchg
sbb
out
xor
out
mov
xchg
clc
test
sahf
decb
mov
popa
mov
inc
sbb
jp
roll
mov
sbb
or
inc
push
add
pop
cmp
cmc
aas
stos
cmp
dec
jns
in
sbb
pop
in
or
inc
pop
imulb
iret
or
jl
mov
pop
cmp
pop
mov
arpl
push
movsb
adc
repnz
jl
sbb
and
or
fsubl
das
push
ret
mov
push
add
mov
movsl
dec
adc
addr16
stc
ja
fildl
popa
je
insb
and
popa
cmc
sbbl
fs
cmpsb
loope
jl
jecxz
jmp
push
popf
push
jecxz
mov
push
sarl
mov
sar
mov
jle
jnp
ja
xchg
popf
or
sahf
popa
and
cmc
push
sbb
push
xor
loope
sbb
test
xor
cmp
pushl
mov
imulb
cmp
jecxz
int
mov
popf
nop
inc
lds
xchg
and
pop
aad
mov
test
std
pushf
inc
test
jle
int
mov
dec
fistl
jmp
shr
jge
mov
pop
fnstcw
dec
push
cmp
pop
cwtl
jp
fstl
call
add
fucom
jg
and
incl
lahf
enter
out
stos
jp
pop
testb
in
dec
aam
in
scas
cltd
inc
mov
pop
cmc
adc
daa
inc
adc
adc
aam
movsl
push
add
jbe
dec
add
leave
lret
cmp
add
mov
flds
fidivs
in
rclb
in
dec
add
jno
mov
xor
mov
iret
lahf
cmp
lcall
pop
cmpsb
jbe
jb
ret
icebp
fldenv
pop
sub
jo
mov
sti
fwait
lret
dec
fnstcw
sub
mov
cmc
js
pusha
and
mov
mov
aad
shr
fs
mov
jge
fmul
jb
mov
sub
inc
push
sbb
adc
inc
mov
add
push
and
mov
sbb
addr16
jo
mov
pop
dec
addr16
mov
add
jecxz
adc
fidivrs
aam
pushf
sbb
arpl
pop
negl
adc
or
movsb
xor
in
fcomps
pop
jp
mov
sub
jo
mov
inc
aas
dec
out
enter
enter
sub
push
outsl
fcomi
push
sub
mov
rolb
rcl
push
mov
adc
mov
insl
outsl
fsubrp
fidivrl
and
rcrb
adc
jmp
test
pop
test
loope
fsubs
jbe
and
jne
inc
jge
adc
sub
pop
fistps
inc
or
jb
test
scas
dec
push
push
mov
jg
leave
and
fimuls
iret
push
fnstenv
xchg
jnp
fwait
loope
cmp
xchg
sahf
sub
inc
or
xor
scas
inc
mov
ret
scas
sub
lds
lret
and
inc
push
popa
sbb
in
pop
cmp
xchg
sbb
and
lret
xor
lods
insl
pop
xor
aas
fisubrl
sbb
mov
mov
xor
sub
clc
movsb
inc
and
popl
inc
add
gs
mov
int
xor
xchg
daa
push
inc
fs
sub
mov
or
xchg
xchg
shlb
pop
jne
push
adc
dec
std
inc
bound
aas
sti
call
pop
mov
aas
inc
jb
loope
push
dec
je
xor
mov
addr16
lret
mov
rclb
and
inc
loop
loopne
push
pop
add
out
jmp
filds
iret
xchg
arpl
xchg
push
pop
test
jmp
lahf
loop
out
xchg
fs
pop
fstps
inc
cmpsb
js
ret
out
cmp
xor
imul
jp
xor
mov
ftst
or
adc
inc
int3
loope
dec
loopw
pop
hlt
test
nop
sbb
xor
xchg
push
fistpl
mov
rorl
std
push
mov
xchg
pop
mov
and
jno
mov
xchg
sub
inc
addr16
fidivs
test
ds
fistpl
rcl
and
or
lret
adc
jg
in
add
cwtl
mov
icebp
mov
and
ljmp
push
fld
xor
fucomp
inc
nop
mov
leave
call
inc
jnp
test
rolb
and
xchg
imul
andl
pushf
scas
push
mov
int3
push
cmp
xor
imul
jmp
mov
cwtl
es
ljmp
jnp
cmp
cmp
push
pop
xchg
insb
or
sub
je
jl
pop
mov
adc
xor
xor
mov
xor
shll
test
jno
leave
subb
mov
or
cmc
fdivrl
push
xor
fdivrs
jmp
imul
imul
imul
add
mov
in
mov
and
xchg
mov
stos
insl
hlt
scas
pop
or
lret
lock
jno
jns
push
aad
icebp
xchg
fisubrs
push
stc
out
div
mov
les
aam
ja
arpl
popf
pop
lds
into
xchg
lock
pop
aam
add
pop
mov
and
add
adc
cmp
sbb
cs
std
inc
call
bound
cmp
xchg
or
cmp
jo
popf
repnz
and
ret
clc
arpl
sar
lea
loope
fdivl
enter
iret
iret
icebp
push
push
push
jns
cmp
in
dec
icebp
mov
loope
sub
add
cmpsl
jb
pop
jg
and
mov
cld
das
push
nop
test
and
push
rcrb
test
mov
inc
ret
ja
xor
lock
xchg
stc
in
cmc
test
divb
and
inc
dec
rol
push
jne,pt
sub
mov
in
and
sub
fidivs
push
inc
add
rclb
stos
fsubr
cmpsb
arpl
pop
out
and
xchg
fwait
mov
or
jb
push
jl
hlt
scas
jnp
dec
out
out
sub
arpl
cmpsb
dec
lods
inc
xlat
mov
rclb
addr16
scas
pop
xor
jl
loopne
mov
mov
dec
xchg
and
mov
adcb
mov
bound
lds
ficoms
cmpsb
in
fadds
xchg
add
mov
sub
sbb
in
adc
cmp
cmp
pop
clc
pop
out
dec
xchg
fcmovnu
mov
daa
or
mov
shll
aam
and
rclb
ds
out
jmp
int
inc
shrl
out
jns
inc
loop
mov
lods
scas
rcl
mov
out
or
fldcw
add
mov
icebp
jnp
inc
je
cmp
xchg
lods
lcall
imul
add
xchg
lds
imul
scas
adc
push
sub
inc
daa
xor
xchg
mov
shlb
ficoms
pushf
xchg
mov
and
stc
sbb
imul
add
sbbb
out
xchg
jne
les
push
cmp
mov
sbb
mov
das
add
jecxz
les
cmp
xor
sub
pushf
fisubrl
jmp
push
adc
leave
jns
mov
sar
xchg
shrl
push
pop
or
xor
dec
cmp
jne
jb
divb
pop
aaa
movsl
or
push
fs
dec
subl
arpl
int3
jecxz
mov
iret
jle
lcall
test
ds
mov
pop
icebp
pop
out
aas
or
popf
mov
push
dec
or
mov
push
jmp
push
cmp
mov
xchg
lret
loopne
bound
or
cmp
shll
out
stc
out
and
mov
add
jbe
push
addr16
dec
in
jb
xor
and
mov
sub
inc
leave
dec
mov
jnp
push
xchg
setp
daa
cmp
sbb
mov
dec
sub
inc
dec
lcall
mov
jg
flds
mov
cmpb
xchg
dec
adc
bound
add
mov
cmp
sbb
cmp
mov
movsb
hlt
push
mov
test
jge
and
xor
push
jns
and
add
std
sbb
into
inc
push
xchg
js
out
inc
ret
pusha
adc
cmpl
xchg
shrb
xchg
testl
or
lds
testb
xchg
cmp
push
fwait
dec
inc
push
xchg
adc
lods
inc
js
jns
cltd
mov
or
inc
sahf
fisttpll
insb
shll
iret
push
out
insl
pop
jne
jne
ret
push
mov
int
mov
test
je
faddl
jl
inc
pusha
movsl
and
xchg
cmpsl
leave
test
xlat
loop
mov
xchg
dec
js
push
sub
jge
inc
xchg
cwtl
cld
push
fildl
dec
rorl
mov
pop
insb
or
popa
fimull
test
insl
cmp
pop
pop
inc
mov
int
aam
xchg
repnz
mov
add
movsl
or
pop
ficoms
mov
push
jbe
sbb
imul
jns
pop
add
mov
add
movsb
pushf
test
adc
inc
and
popa
pop
dec
js
sti
cmc
jp
adc
adc
jns
sub
movsb
jmp
sbb
int3
pop
dec
scas
fs
aam
ret
xchg
push
fs
out
les
jge
lret
jb
or
push
fwait
sbb
daa
xor
xchg
in
or
cmp
pop
loopne
daa
push
mov
and
dec
fcos
mov
fidivrl
inc
pop
imul
fucomp
and
in
fdivrs
in
xchg
xor
out
inc
in
jne
mov
movb
pop
rorl
out
mov
xchg
dec
pop
mov
jp
sbb
dec
or
stos
xchg
xorl
lods
jge
imulb
into
fdiv
and
sub
xlat
push
mov
mov
add
addl
push
fsubrl
dec
testb
jg
push
xchg
les
nop
rorl
mov
sbb
adc
cmpl
imul
repz
add
fs
into
mov
and
fdivs
xor
xchg
notl
push
iret
mov
and
mov
out
mov
jne
mov
fidivl
fisttpll
clc
inc
ret
pop
jge
fldcw
lret
xchg
lds
inc
adc
xchg
aaa
mov
jmp
roll
enter
and
sub
pusha
or
push
lea
sahf
sbbb
jle
mov
xchg
data16
add
test
jb,pt
cmc
fmuls
add
movsl
les
jbe
cmp
gs
cs
flds
and
pop
mov
sti
test
popa
adc
xor
loope
fnstsw
pcmpeqb
sbb
mov
sub
in
enter
movhlps
je
mov
jmp
mov
rcrb
jp
xor
mov
pop
dec
jnp
adc
cmp
mov
push
add
jp
or
pop
jg
jae
inc
jp
repz
sub
pop
adc
pop
outsb
fdivl
cmp
fwait
sub
pop
cmpsb
and
fildll
repz
sub
jmp
mov
int3
test
mov
loope
or
repz
hlt
ljmp
fwait
mov
daa
aas
fidivrs
in
jnp
mov
cmp
and
shlb
movb
mov
sub
loope
xlat
mov
adc
ljmp
mov
sbb
mov
xor
rcr
push
inc
adc
mov
lret
and
out
pop
int
enter
dec
xchg
ds
cmpsb
xchg
rcrb
push
xor
rcrl
dec
jae
push
rcrl
pushf
scas
cmpb
dec
cmpsb
xchg
lahf
jo
loop
iret
mov
test
test
sahf
mov
fisttpl
pop
and
jp
or
pop
push
ret
fiadds
jbe
or
pop
jae
jl
pop
rclb
pop
fists
movsb
sub
addl
into
mov
sbb
std
xor
std
iret
push
nop
pop
int
sti
mul
shl
mov
jno
test
pop
or
or
push
lds
pop
not
jns
sub
push
stos
ss
pop
pop
lock
fwait
add
imul
push
out
xchg
sub
out
push
mov
inc
aad
xchg
jmp
mov
or
test
mov
push
in
sub
icebp
rorl
into
int3
mov
dec
out
aam
inc
cmp
mov
xlat
mov
push
aaa
xchg
jg
pop
xor
popf
pop
mov
std
pop
dec
mov
jle
dec
lea
jns
mov
ja
xchg
shll
cmc
cld
leave
out
push
loope
call
inc
push
rorl
lods
pop
push
imul
loopne
sub
lcall
movsl
scas
loope
xor
lods
mov
nop
aad
xchg
mov
aad
xchg
cmp
movsl
mov
callw
addl
and
cmp
in
dec
and
xor
rorl
leave
xchg
pop
in
pop
shlb
xchg
dec
rcrl
mov
cmc
rolb
in
es
push
xchg
and
cmc
push
inc
xbegin
xchg
push
imul
fiadds
xlat
mov
idivl
pop
test
enter
fwait
js
leave
add
lret
fmulp
es
sbb
int
and
xor
out
int
mov
push
xchg
mov
cmpsb
aas
mov
andb
cld
jle
add
sbb
dec
pushf
jno
push
ds
cmpsb
loop
lods
inc
push
push
jmp
idiv
push
jle
inc
mov
push
lods
push
or
mov
adc
addr16
lock
call
sbb
insb
test
xor
insl
adc
cwtl
xchg
arpl
mov
clc
and
cmpb
aas
fisttpl
jae
sub
fidivrs
dec
sub
sub
xor
sbb
es
cwtl
xchg
mov
jo
adc
mov
mov
jmp
push
das
addr16
scas
push
out
push
and
daa
or
stc
sbb
xchg
iret
adc
fisubrl
outsb
pop
and
push
outsb
subb
insb
loopne
js
mov
jne
sub
insb
mov
lea
ljmp
pusha
test
sbb
mov
xchg
add
sub
add
pushf
mov
xchg
divb
push
add
cltd
and
shr
imul
jmp
mov
mov
xor
in
adc
stos
sbb
es
shll
pop
sbb
or
out
dec
test
cmp
stc
jbe
lcall
lds
aad
int
in
movsb
add
aad
sbb
sbb
cmp
loope
cmp
icebp
cmp
fs
mov
jns
ljmp
hlt
das
pop
add
idiv
cmp
and
out
dec
int3
jo
mov
sbb
idiv
pop
jo
scas
roll
aas
pop
mov
scas
push
adcb
mov
inc
lret
add
pop
fisttps
aam
das
mov
popa
std
jae
xchg
imul
cmp
das
mov
mov
stos
cmpsl
or
or
jmp
mov
in
stos
mov
adc
xor
sbb
push
sti
mov
mov
pop
test
es
xchg
aas
lods
add
mov
xchg
push
aam
mov
sub
in
cmpsb
dec
push
inc
into
cs
clc
inc
int3
pop
rcrb
mov
and
out
jno
in
mov
or
sub
inc
adc
add
fs
aas
imul
andl
add
sub
imul
adc
aam
sbb
push
mov
sub
por
scas
out
jmp
cmp
mov
cmp
cmp
inc
adc
add
or
imul
cmp
orl
inc
xchg
inc
sahf
decl
lcall
jl
mov
mov
scas
jge
sub
mov
imul
notb
stc
pushf
pop
into
lret
gs
jae
add
adc
adc
jae
test
leave
sti
ss
jecxz
in
sub
dec
mov
dec
push
stos
and
mov
nop
sub
mov
out
rolb
sbb
jns
aam
jae
shl
jg
fnstenv
pop
pop
mov
test
pop
in
cli
shlb
push
mov
gs
xor
loopne
in
cmp
inc
mov
pop
lock
das
ja
mov
mov
mov
jle
jmp
fsubs
fdiv
cli
subb
add
sub
es
daa
loop
mov
aas
xor
cmp
sub
xchg
cmp
add
mov
shlb
dec
pop
addr16
cmpl
scas
cli
hlt
daa
sbb
or
pop
repz
push
mov
inc
fsts
hlt
cmpsl
subb
dec
or
or
int3
repnz
sub
outsl
pop
out
imul
adcb
ja
imul
jle
or
push
lods
pop
test
and
push
test
sar
shl
push
dec
mov
lock
mov
test
mov
insl
push
add
out
imul
je
or
xchg
stc
mov
cwtl
mov
hlt
jnp
push
jmp
in
jbe
mov
cmp
jmp
pop
push
pop
call
testl
cmp
repnz
push
inc
pop
dec
enter
pop
xchg
and
add
sbb
bound
push
test
lods
sahf
and
adc
jg
bound
adc
mov
dec
shlb
sbb
xchg
mov
fst
mov
sub
mov
leave
ret
adcl
jo
sbb
pusha
adc
insl
dec
repnz
sbb
and
adc
insl
xor
push
aad
fs
inc
addr16
mov
cmp
nop
lret
sbb
arpl
test
mov
data16
mov
push
aad
lock
jno
out
fcmovbe
sbb
lods
outsl
fimull
ret
mov
notb
std
pop
pushf
lods
loopne
imulb
jbe
or
mov
daa
xchg
int3
lea
loopne
iret
lock
stc
aam
push
jg
hlt
mov
decl
cli
popf
mov
push
mov
negl
mov
lods
mov
cmp
daa
pop
es
insb
push
or
jg
dec
bnd
inc
ss
stc
mov
jp
xor
mov
mov
inc
push
orb
and
dec
mov
pop
loopne
push
rcr
mov
rolb
scas
lock
je,pt
cmp
mov
jae
dec
mov
dec
movsb
adc
add
sub
xor
test
pop
mov
inc
or
adc
jne
nop
insb
sub
leave
cmp
adc
sub
mov
xor
or
fdivrs
push
push
shll
sbb
sbb
xor
lret
push
out
pop
sbb
push
or
pushf
inc
out
cmp
loope
jmp
cmpsl
addb
jmp
aam
push
sbb
pop
mov
pop
and
test
sbb
push
fisubl
test
insl
mov
mov
shrl
dec
lcall
push
decl
adc
mov
xchg
jne
cmp
pop
adc
sbbl
and
xchg
jo
out
sub
pop
sub
mov
loop
aas
push
push
xor
adc
out
push
and
cmp
jb
shll
sarl
jb
jl
testb
rcll
jmp
mov
inc
stos
arpl
ja
cmc
stc
je
pop
or
adc
add
push
ret
xor
cmc
lock
xor
inc
aas
je
fistl
add
mov
push
fs
outsl
push
sbb
jle
mov
fidivrs
mov
int3
jae
in
sbb
jbe
enter
or
repnz
lahf
dec
stos
movsl
call
mov
insb
add
data16
xor
out
cltd
insb
add
das
mov
loop
inc
pusha
and
inc
sub
jp
mov
in
cmpl
rcrl
xchg
sarb
gs
rorl
cmp
test
sbb
daa
cmpsl
mov
push
xchg
rclb
sub
nop
jmp
js
imul
pop
ss
jecxz
fisubrs
or
push
mov
aaa
push
pop
pop
mov
pop
mov
fsubl
xor
and
push
sbb
outsl
mov
sub
ds
ss
data16
test
xor
pop
ja
pop
or
mov
repz
std
mov
int
mov
rcr
mov
fistl
adc
xchg
filds
jp
xor
jp
sub
mov
mov
lcall
pop
roll
jno
addl
shll
cmp
mov
mov
adc
xchg
cli
mov
jno
inc
mov
mov
negb
shlb
jmp
je
mov
loopne
mov
stos
pop
aaa
mov
movsb
dec
outsl
pop
test
out
push
mov
rclb
in
aam
sbb
xchg
mov
addr16
push
mov
jno
xor
jnp
sahf
and
lods
mov
cmc
jl
in
inc
mov
sbb
cmp
shr
jno
lahf
jne
mov
mov
test
fidivl
mov
stc
mov
leave
je
sub
or
test
lock
xor
rcll
or
sahf
cmc
xor
mov
and
mov
pop
sbb
mov
push
add
cwtl
xor
sbb
clc
mov
ficompl
fmul
shr
adc
fs
cmpl
xchg
clc
es
lods
and
dec
push
dec
into
into
xchg
jp
sbbb
cmp
xor
jne
addb
sbb
xor
sahf
ud2
xchg
inc
es
mov
aaa
enter
rolb
adc
xchg
popa
sub
daa
adc
inc
pop
dec
jns
test
sub
in
cmp
idiv
mov
push
xchg
add
call
rcr
sti
in
sahf
mov
fs
popf
jl
data16
jno
mov
mov
inc
add
out
iret
push
inc
and
inc
sub
add
out
jle
sarb
out
addr16
movsb
jl
insl
out
ret
push
sbb
jge
push
pop
sbb
push
aam
mov
popf
loop
not
inc
jecxz
nop
and
js
out
popa
out
mov
and
cmpsl
push
sbb
rcrb
mov
mov
rcl
aaa
dec
xchg
out
jge
insl
insl
movsb
xchg
cwtl
add
inc
sti
sub
mov
mov
mov
inc
stos
add
loope
inc
adc
daa
push
jne
xchg
xchg
aas
js
mov
fists
sbb
nop
popf
cwtl
in
stc
adc
pop
insb
push
push
mov
dec
nop
shll
mov
imul
test
pop
std
orb
in
jecxz
ljmp
mov
jp
lahf
mov
leave
sub
js
movsb
outsb
push
into
lret
cmpb
push
ljmp
cmp
sbb
ret
xchg
dec
outsb
loopne
ret
cmp
lret
xchg
leave
aaa
sub
fs
xor
cli
add
sbb
or
push
fists
loop
in
push
cmp
test
lods
dec
mov
add
scas
jmp
and
fistpll
mov
repz
lret
dec
into
and
mov
aas
jno
vmaxsd
sub
inc
and
cmp
cmc
mov
repz
int
and
cmp
or
mov
inc
bound
jg
mov
mov
pop
jae
sbb
cmp
inc
jo
sbb
ficomps
loopne
xchg
sub
in
dec
andb
fstps
daa
xchg
pop
push
call
leave
les
imul
xchg
or
cmp
adc
in
ljmp
adc
inc
mov
nop
inc
movl
add
in
jmp
cmp
sti
add
mov
push
mov
inc
out
dec
aam
xchg
movsl
or
sub
aas
jno
adc
mov
push
mov
cld
add
or
and
incb
xchg
roll
imul
jne
jns
scas
xor
push
inc
sbb
int
cmp
jecxz
sbb
lahf
pop
mov
push
sarb
out
popf
scas
mov
dec
mov
pop
cmc
push
stos
pop
pushf
pop
pop
xchg
out
test
pop
mov
ret
lcall
ss
dec
mov
insb
mov
lock
testl
adc
adc
push
fs
movsl
nop
addl
andb
xchg
ret
js
aam
push
add
dec
mov
or
mov
mov
jo
rcll
pop
push
jmp
xor
sub
popf
ss
xchg
mov
push
movl
jp
mov
or
lea
cmp
push
lret
leave
lds
push
daa
mov
dec
mov
stos
inc
xchg
xor
mov
call
cld
jns
je
xor
sahf
adcl
pop
icebp
mov
lcall
into
rorl
mov
insb
cmp
scas
pop
ss
xor
in
loop
xor
in
insl
data16
xchg
fldl
lcall
shll
sub
fsubrl
into
filds
mov
pop
pop
mov
mov
jle
imul
lds
fnstcw
bound
jl
xchg
ljmp
test
inc
loop
adc
or
dec
mov
sbb
js
cli
jb
push
rcrb
cltd
nop
xchg
cmp
sbb
xchg
sub
mov
xchg
test
pop
daa
in
outsl
xchg
into
push
iret
dec
cmp
ljmp
ror
xchg
xchg
sbb
sbb
mov
jl
repz
dec
andl
cmp
movsl
out
roll
sti
adc
lea
shll
je
cmpb
mov
fildll
movsb
xchg
filds
sub
or
inc
enter
and
and
xor
mov
and
push
imull
xchg
rep
mov
and
pop
cmp
jl
mov
adc
cmp
pop
iret
mov
pop
das
testb
push
int
je
mov
dec
ljmp
add
adc
fcoms
test
jl
or
leave
xorb
aas
and
cmpsb
ds
sbb
mov
cmp
jb
push
adc
xchg
hlt
arpl
sbb
push
xor
ljmp
repz
pop
rclb
test
dec
push
and
mov
pop
je
ret
mov
and
mov
sub
pop
cmpsl
push
and
lahf
aad
loop
mov
inc
mov
mov
adc
or
and
ds
or
int
je
mov
cmp
call
imul
cmpl
push
pop
adc
or
adc
int
fs
fstpl
cmpsl
cmp
je
in
mov
push
rorb
je
mov
push
insl
push
lds
outsl
mov
push
sbb
pop
xor
insb
inc
pushl
movsl
popa
into
lret
rcl
mov
sub
mov
sub
inc
jecxz
cmpsl
mov
adc
icebp
jl
imul
lret
lret
sub
mov
jmp
cmp
cmp
mov
out
cmp
cmp
ja
dec
lahf
mov
push
scas
jne
insb
inc
adc
lds
mov
es
mov
popa
or
pop
add
loop
or
cmp
xor
inc
cli
insl
xor
dec
loope
scas
test
rcrl
scas
aad
pop
js
int
jns
sub
cli
insl
sbb
mov
mov
test
aad
adc
push
dec
dec
movsb
xchg
pop
dec
cltd
add
or
in
cmp
rcll
or
das
addr16
jae
fldt
push
and
adc
dec
js
outsl
or
outsb
fcmove
mov
data16
and
test
xchg
mov
and
fisubs
ljmp
mov
pop
adc
out
nop
js
dec
xlat
ret
mov
jp
pusha
pop
cmpb
sbb
rol
movsb
enter
jae
pusha
je
cli
pop
pop
ljmp
mov
sti
ss
into
je
sbb
jge
xchg
xor
and
es
nop
inc
jg
xchg
fbstp
scas
pop
inc
push
pop
lcall
xchg
lcall
test
lret
or
lea
mov
sub
out
in
add
clc
fstps
fwait
push
push
adc
mov
repz
sahf
sub
in
ja
add
push
mov
cmc
add
push
jmp
int3
mov
inc
sarb
fidivrs
pop
cmpsb
dec
xchg
lock
cmp
insb
xchg
imul
adc
les
sbb
and
or
inc
mov
mov
jge
cwtl
sbb
setne
cmpsl
and
add
fxtract
lret
cmp
xchg
aaa
push
or
cmovp
es
xchg
jbe
ja
scas
out
pop
pop
sub
mov
cli
cmp
mov
loope
cmp
sbb
push
dec
xchg
sub
xchg
pop
int
xor
jmp
cmc
movsb
popa
inc
xchg
insl
aas
xor
mov
sti
iret
mov
imul
movsb
adc
test
dec
jp
out
adc
loope
cmp
daa
lock
push
jg
leave
mov
push
je
mov
push
popf
lcall
mov
sub
jg
outsb
lcall
data16
adc
imul
sbb
lcall
test
xchg
div
enter
mov
mov
test
inc
imull
cmp
aaa
or
mov
ror
mov
adc
in
fadd
cmp
lds
stos
aam
scas
and
adc
inc
jns
add
sbb
mov
scas
add
add
ret
dec
jbe
jnp
mov
sbb
aas
int
iret
outsl
aas
test
sub
addr16
movsl
and
cli
loopne
les
adc
pop
popa
mov
gs
add
mov
imul
movsb
mov
pop
or
and
ljmp
sbb
push
or
pushf
cmc
cmpsb
aad
mov
movsb
pop
and
sub
imul
lds
enter
ss
and
ja
sub
daa
gs
fidivs
inc
dec
or
aam
sbb
xchg
cmpsb
mov
push
fdivl
jnp
pushf
pop
lahf
sbb
or
pushf
xorl
pop
sbb
xchg
movsl
std
sarl
fbld
test
aas
push
inc
mov
aad
sbb
data16
jb
negb
jno
es
mov
lds
movsb
jbe
mov
outsl
lods
fbld
cmp
jo
loopne
jb
test
mov
jns
push
mov
jo
pop
scas
in
ljmp
and
aas
jno
xor
shll
sub
or
scas
mov
rolb
xor
inc
sub
mov
insb
insb
mov
imul
xchg
pop
mov
add
pop
pop
cli
sbb
or
jns
lahf
aad
fistpll
test
xorb
int3
mov
popa
xchg
jae
mov
pop
popf
xchg
jmp
mov
les
jns
ljmp
dec
cwtl
and
aad
xchg
fs
lods
ss
cmpsl
xchg
int
iret
dec
into
ja
pop
or
out
xchg
sbb
sub
push
cmp
decb
daa
xor
cmc
adc
mov
inc
xor
sbb
mov
insl
cmc
cs
adc
aad
cmp
daa
out
out
out
ja
xchg
push
xchg
mov
int3
adc
inc
adc
incb
push
scas
outsb
test
mov
sbb
bound
push
addr16
mov
stc
out
jo
jns
and
mov
xlat
push
mov
subl
sub
ret
and
ds
loope,pt
rclb
jge
inc
mov
pop
mov
nop
aam
sti
xchg
out
xor
imul
xor
add
inc
mov
mov
adc
std
addr16
addl
das
pushf
inc
imul
repnz
sbb
subb
jbe
pop
mov
sbb
cltd
sub
cmovg
mov
cmp
add
cld
xor
arpl
dec
out
iret
or
push
pop
arpl
adc
jb
mov
imul
push
add
jp
cmp
mov
testb
cmp
pop
testb
or
fimull
ss
adc
les
ret
sti
in
cmp
sub
mov
in
jl
sbb
jns
gs
mov
out
xor
punpckldq
xchg
sti
mulb
pop
sub
ds
es
and
jmp
push
test
lea
xchg
and
cltd
lcall
lods
sbbb
dec
or
and
jae
inc
fmuls
rorl
jmp
sahf
dec
mov
add
jns
into
pop
imull
mov
add
subb
fs
clc
add
nop
jbe
mov
or
test
jno
mov
mov
mov
push
xchg
push
inc
inc
and
je
dec
mov
xchg
movsb
insb
mov
int
std
xchg
adc
lret
or
out
mov
push
mov
xchg
and
ljmp
mov
rclb
dec
arpl
jnp
dec
mov
incb
subb
push
aam
loope
inc
mov
roll
lea
or
sub
sti
add
push
sub
mov
adc
and
adc
push
inc
insb
mov
bound
jmp
es
and
push
xchg
stc
push
pop
scas
adc
inc
push
in
shlb
xchg
loopne
cwtl
outsb
adc
inc
adc
jno
jp
insb
subb
insl
pushf
pop
or
or
mov
lahf
and
pop
popa
jmp
sub
mov
push
xor
and
add
movsb
xchg
cs
das
daa
add
cwtl
mov
into
dec
and
pop
add
mov
roll
mov
fsts
xchg
es
lock
bound
cmp
push
dec
fs
lahf
inc
clc
mov
add
out
out
cmp
leave
outsb
lods
aas
cmpsl
enter
lahf
mov
mov
and
jns
and
add
jo
icebp
enter
out
outsb
jl
cltd
cmp
pushf
jns
scas
dec
push
bound
ficompl
mov
cltd
cmp
mov
andb
jb
pusha
paddq
mov
mov
add
mov
xchg
mov
lods
xor
push
dec
cmp
push
jb
cli
rcrb
bound
test
or
xchg
sub
mov
rcr
std
mov
enter
push
scas
jbe
in
inc
mov
cmp
jnp
push
adc
sbb
call
add
mov
nop
inc
jmp
and
aad
mov
cmp
ss
cld
mov
xchg
push
imul
cmp
jnp
or
cmp
cmp
in
mov
cmp
mov
mov
sub
inc
cmp
stc
not
push
sub
sysret
push
or
mov
insw
lcall
jecxz
push
adc
sbb
lret
enter
sub
push
sbb
js
cmp
mov
lret
loopne
das
ds
push
pop
call
stc
and
aaa
imul
pop
pop
or
mov
das
jo
ds
sbbb
fbstp
aas
out
jle
xchg
push
or
pop
push
sarl
push
cmp
out
enter
jp
mov
sbb
jmp
fiadds
lds
shll
pcmpgtb
lock
hlt
out
lds
xor
sub
lea
and
call
xchg
mov
popf
add
mov
inc
popf
lds
and
dec
jge
and
scas
sub
stc
pop
xchg
dec
jns
or
insb
test
movsb
mov
mov
imul
jge
out
cwtl
imul
ds
stos
push
ret
out
loop
sub
mov
cmp
andb
xchg
out
addb
jp
xor
inc
xchg
cmc
xchg
pop
je
shrb
push
cmpb
inc
pop
jp
pop
orl
xchg
movsl
loop
stos
or
pusha
fwait
mov
ret
scas
add
mov
dec
roll
insl
cmp
test
rcrb
imul
mov
inc
pop
hlt
mov
dec
xorb
mov
mov
repz
xchg
adc
mov
leave
cmp
pop
sub
frstor
lret
into
loopne
inc
cs
or
sub
xchg
dec
push
shll
shr
dec
jns
jno
ja
pop
dec
cli
xor
mov
xchg
mov
insb
adc
nop
ljmp
dec
cmp
stos
add
xchg
shlb
push
push
stc
mov
cmc
dec
int
push
xor
and
test
leave
adc
sub
in
lcall
xchg
out
jp
rcll
mov
or
cmp
test
sbb
fstl
dec
cmc
mov
inc
jl
adc
mov
adc
jbe
lahf
xlat
fwait
dec
or
je
push
jmp
addr16
pushf
std
jae
and
in
lock
mov
sar
mov
cmpsl
and
pop
pop
dec
lock
mov
mov
inc
inc
sahf
push
add
sub
push
aad
mov
scas
test
cmp
xor
fs
jno
and
pop
adc
dec
lret
sub
shlb
pop
cli
adc
mov
push
call
popf
insl
ljmp
dec
jno
and
inc
push
xchg
adc
shrb
outsb
mov
daa
enter
adc
xchg
leave
inc
je
xor
loope
ljmp
into
rcrb
mov
lds
push
mov
cld
jge
cmpb
clc
lret
xchg
ret
xor
scas
xchg
ret
mov
xchg
stc
nop
mov
xchg
push
mov
jnp
xchg
dec
ss
frndint
outsl
mov
add
popa
add
clc
rcll
or
out
and
mov
out
ljmp
or
mov
je
sub
insl
sar
mov
leave
stos
int3
mov
or
lds
outsb
and
fidivs
xchg
fs
pop
push
loope
xchg
stc
mov
mov
std
push
es
xchg
mov
dec
pop
rcl
clc
cmp
je
data16
fadd
orb
push
add
es
pop
out
xlat
pop
jmp
aam
dec
inc
sbb
pop
test
outsb
rcll
jl
adc
sub
xorl
loopne
shr
inc
adc
mov
int
and
outsl
mov
jle
pop
negl
mov
sub
jecxz
adcb
fsubrl
inc
mov
ss
sbb
xor
or
jl
insb
adc
sarl
inc
pop
test
mov
jmp
sub
gs
imul
out
repnz
call
mov
sub
cld
push
add
shl
adcl
dec
and
test
push
dec
lea
or
loop
fwait
in
not
mov
int
sbb
pop
push
aaa
jae
enter
cmp
ret
add
adc
mov
dec
jp
sbb
add
and
and
int3
dec
hlt
stos
loopne
loop
xchg
ja
ds
xchg
pop
mov
jns
addb
adc
push
cmp
cmp
in
pop
sbb
into
cmpl
pop
xchg
mov
dec
mov
pop
push
xchg
loopne
mov
std
add
pushf
mov
mov
fcompl
pop
or
arpl
mov
shrl
mov
pop
lcall
push
test
sbb
adc
push
mov
add
mov
daa
pop
xchg
pop
lea
add
add
out
or
pop
icebp
rcrl
cmp
pop
jg
pusha
insl
and
push
push
movsl
xor
fwait
icebp
dec
dec
aad
xor
pusha
frstor
xor
loopne
pop
add
fistl
push
push
adc
iret
in
popa
mov
aaa
and
sub
mov
fwait
or
mov
pusha
ror
add
add
fadd
mov
cmp
cmpsl
aaa
pop
jle
sbb
daa
pop
or
push
push
sar
push
test
or
cmp
addr16
dec
cmpl
or
popf
cmp
xor
pop
cmpsb
nop
cmpb
sub
xor
ret
pushf
stos
ljmp
int3
xchg
shll
int3
clc
filds
and
xchg
sahf
mov
xchg
lahf
fldcw
leave
mov
push
rcrl
mov
xchg
nop
push
push
out
inc
add
and
and
mov
mov
xor
and
xor
test
insb
sub
insb
xchg
je
ret
mov
dec
inc
mov
dec
in
add
jbe
xor
xchg
sbb
movsb
cmp
mov
dec
and
add
dec
out
ja
mov
in
inc
sub
iret
daa
fisubrs
mov
mov
jl
ljmp
mov
inc
mov
outsb
pop
dec
imul
fldt
movsb
rcll
dec
imul
dec
mov
nop
xchg
dec
push
std
mov
repnz
test
shrl
ds
imul
mulb
stc
xchg
jp
divb
inc
mov
push
pop
adc
mov
and
sbb
jg
mov
data16
shl
add
call
and
stc
gs
je
xchg
push
fbstp
stos
sub
jle
leave
inc
xchg
addr16
mov
dec
jo
ss
xchg
mov
mov
lods
mov
lcall
pop
mov
ds
aam
ja
pop
nop
outsl
ljmp
dec
adc
sbb
or
pop
icebp
dec
add
andl
sub
pop
rol
in
shl
in
dec
xor
test
outsb
mov
adc
mov
test
push
pop
jmp
sbb
add
and
cmp
jg
xor
shrb
xor
add
dec
cmpsb
das
mov
out
notl
mov
ficompl
and
pop
test
jae
xchg
jmp
and
test
mov
loopne
dec
or
rcll
or
out
xor
mov
dec
in
mov
inc
xchg
jo
in
int3
testb
shr
sbb
mov
sbb
jbe
sub
cmp
sbb
cs
rcl
jge
inc
jg
push
or
sbb
mov
iret
xor
shrl
mov
jae
mov
pop
sbb
imul
ja
xchg
js
jae
in
mov
lret
into
inc
dec
stc
fcomps
add
mov
lds
mov
and
or
mulb
inc
sbb
daa
andl
and
pushf
repnz
push
and
add
cwtl
sub
ss
push
fisttps
ja
sub
adc
in
mov
push
fidivrl
pop
aam
ja
fwait
mov
xor
nop
pop
mov
scas
sub
cmp
jmp
sbb
jg
repnz
outsb
mov
out
cmp
mov
jns
in
jo
in
sub
subb
leave
push
mov
in
inc
cmp
mov
jnp
sub
cmp
andb
xor
lods
mov
and
daa
pop
add
cmpsb
sub
sub
jmp
push
lds
loope
add
pop
mov
scas
shll
fildl
push
je
fisubrs
popf
js
outsl
lret
out
neg
or
les
dec
sti
jnp
adc
lahf
insl
stos
add
and
pop
fcomps
clc
sti
adc
imul
sbb
pop
mov
and
aas
mov
xor
cmp
lods
fwait
sbb
cmp
mov
insl
aam
in
ss
jg
test
cli
cmc
test
gs
or
pop
nop
adc
push
pop
in
lret
pop
and
push
lcall
sub
xor
xor
stos
inc
mov
mov
mov
pop
sarb
inc
mov
lret
xlat
pop
outsb
dec
mov
pop
adcl
xchg
xchg
iret
mov
js
jno
lock
push
xor
ss
movsb
adc
inc
sti
sahf
in
mov
lcall
in
jle
xchg
xchg
mov
fldl
xor
mov
imull
sub
dec
sbb
xchg
sub
ds
dec
and
or
push
in
jbe
xchg
push
iret
push
ficomps
in
mov
shlb
test
cmp
fmull
loopne
loope
jb
es
pop
cmp
cmpsb
ret
pop
add
adc
mov
mov
cwtl
xor
mov
fwait
testl
jmp
mov
pusha
cmpl
fisttps
push
push
arpl
in
adc
or
lret
lods
mov
mov
jo
fcoml
xor
xor
xchg
repnz
xor
stos
add
leave
in
arpl
ss
xchg
xchg
push
out
loopne
push
pop
mov
or
xor
rorl
mov
sbb
inc
into
scas
repnz
push
jne
or
mov
xor
and
adc
adc
add
cmpsb
xor
sahf
or
cmp
adc
dec
movsl
sbb
sub
dec
or
push
sbb
sti
xchg
xor
push
sub
mov
cmp
fwait
pusha
or
sub
dec
pop
and
loop
push
orb
cmp
or
iret
jae
out
push
ja
pop
or
fidivl
push
cmp
scas
mov
sbb
sub
lcall
push
sbb
fsubr
xchg
cmc
xor
ja
sbb
add
repnz
push
push
inc
jo
out
mov
inc
lcall
rol
mov
aad
mov
lea
shrb
inc
sub
mov
pop
sti
cs
sbb
and
nop
das
repz
mov
add
xor
cmp
lea
mov
push
and
sbb
test
mov
arpl
push
cli
mov
ret
pop
aas
iret
psubsw
cli
inc
test
adc
cli
mov
jno
and
jo
aad
lret
in
add
in
daa
cmp
fldcw
adc
lret
xor
sarb
out
pop
jne
mov
in
cltd
cwtl
bound
push
idivl
addr16
std
stos
mov
rep
jp
jnp
outsb
movsl
decb
xchg
dec
pop
fdivrl
andl
xchg
scas
rcll
jne
and
dec
add
aas
insb
leave
jae
sbb
pop
mov
loopne
ficomps
pop
pop
cmp
or
cltd
mov
rolb
das
iret
cmpsb
loopne
mov
or
aam
push
sub
sbb
inc
int
insb
or
aad
mov
add
mov
cwtl
push
loopne
stos
test
ret
mov
jle
ror
inc
lods
add
cmp
nop
mov
jp
pop
fildll
rcrl
mov
lcall
mov
mov
add
fdivr
pop
pop
popa
or
or
test
xchg
fwait
xchg
ret
test
push
das
pop
xor
repnz
maxps
cmp
out
jb
push
add
lods
addr16
sub
sub
in
pop
out
mov
test
in
arpl
leave
mov
adc
cmp
int
cmp
push
test
push
and
ja
imul
lcall
cld
fsubrs
pop
or
repz
fwait
enter
xchg
mov
mov
nop
in
imul
xchg
push
jno
notl
mov
shll
mov
sbb
shll
not
or
ljmp
dec
jle
mov
pop
test
add
out
out
inc
cmp
out
aad
mov
leave
mov
cld
stos
push
rcrb
imul
loopne
dec
push
adc
sbb
addr16
dec
jmp
and
fldenv
nop
out
push
cmp
sub
cmp
add
cmp
push
adc
jg
adc
mov
repnz
hlt
and
push
cld
rorl
add
fdivrl
stos
lahf
aad
lret
xchg
ficompl
and
xchg
lds
xor
jge
cmpsl
dec
pop
xchg
push
xchg
xorl
out
mov
fiaddl
iret
mov
vmaxpd
fiadds
imul
xor
or
loope
mov
jnp
add
jne
outsl
out
sti
popa
in
mov
icebp
add
pushf
cs
jb
push
mov
pop
int3
or
fdivl
sbb
jp
mov
nop
mov
inc
sub
mov
jbe
inc
jle
sub
push
xchg
and
shrl
cs
inc
pop
mov
xchg
ret
mov
cmp
daa
dec
sub
inc
dec
xchg
cmp
fs
xor
or
dec
inc
adc
std
jl
dec
divb
flds
pop
dec
int
xchg
jns
cmpsb
test
jge
sub
xlat
inc
jp
in
nop
leave
aad
ret
sti
iret
inc
mov
push
jbe
icebp
loopne
jb
fcoml
jle
mov
add
ret
jl
mov
mov
aas
lret
jl
xchg
sub
dec
fs
mov
sbb
mov
sub
movsl
daa
outsb
mov
test
repnz
lret
repnz
push
idivl
xlat
jl
cmc
or
or
add
push
mov
xchg
sub
je,pt
enter
mov
outsb
imul
stos
jg
cld
push
dec
adcb
test
lods
and
shrb
cs
jnp
fnstsw
loopne
mov
jo
out
movsl
adc
push
testb
mov
mov
jl
out
mov
nop
pop
std
jle
xchg
and
mov
sbb
pushf
das
push
dec
pop
add
xor
sbb
jno
call
ret
fs
fistps
or
aam
lret
in
adc
push
inc
cmpsb
or
xor
movsl
int3
xor
mov
inc
mov
enter
or
repnz
lret
xchg
outsb
cmp
adc
fnsave
ret
adc
test
mov
ja
repnz
xchg
in
aam
sarb
pop
ficoms
test
loop
sub
setno
mov
or
pop
cmp
cmp
push
lahf
mov
mov
in
mov
push
xor
mov
cmp
sub
int
aas
das
add
jle
rcrl
je
push
enter
out
pop
mov
dec
imul
sub
xor
inc
inc
je
les
outsb
xchg
push
popf
rclb
call
lds
xor
mov
xor
subl
outsb
xor
and
or
inc
or
in
adc
cmp
lock
ja
dec
fwait
pop
sub
test
lret
fucomp
push
inc
add
jnp
sbb
test
push
sub
pop
and
dec
add
call
rcrl
lods
add
lods
test
popf
xchg
and
jns,pn
mov
dec
lods
xchg
das
insb
repz
jae
loopne
scas
jge
pop
push
es
xchg
mov
pusha
fisubs
xchg
imul
add
dec
jb
fwait
shll
jmp
lcall
pop
nop
pushf
jl
aad
jae
push
mov
mov
cmc
mov
dec
sub
imul
adc
bound
xor
scas
jmp
and
out
dec
sbb
fcmovnu
lods
cwtl
stc
es
lret
icebp
add
ds
xor
lods
jl
imul
add
mov
xchg
adc
sub
les
and
in
and
repnz
int3
pushf
repnz
test
and
xor
fdivrs
or
adc
iret
bound
dec
lods
sahf
or
adc
xchg
or
jns
cmp
int
xchg
add
int
scas
push
pop
push
lret
lea
lret
mov
dec
pushf
push
fdivs
nop
xchg
adc
movsb
imul
mov
add
insb
xor
mov
jbe
or
stc
mov
inc
dec
or
cmp
loop
jle
xchg
cmpsb
rcll
cltd
and
outsl
mov
test
cmpsb
insb
mov
int3
push
or
stos
pop
mov
loop
loope
movsl
aam
sbb
nop
mov
mov
sub
push
adc
cmpsl
sbb
jg
aas
add
mov
push
stos
adc
dec
ds
sbb
sbb
adc
mov
xchg
fs
scas
inc
push
and
cmc
ror
inc
or
mov
xchg
sbb
and
shr
lds
lds
mov
into
enter
xor
push
xchg
mov
sti
imul
inc
call
cmp
cld
xchg
sbb
into
push
scas
imul
lahf
pop
mov
adc
sbb
xchg
shll
jmp
out
sahf
sbb
push
inc
push
aad
inc
pop
fcmovnu
imull
enter
test
add
push
adc
sub
bound
inc
dec
sub
add
dec
nop
fwait
jmp
dec
cld
or
add
inc
dec
stc
cli
mov
scas
bound
mov
mov
inc
pop
test
cmp
arpl
in
xlat
add
sbb
pop
ret
jl
mov
sub
dec
lahf
mov
mov
adc
sub
xor
or
ret
add
pop
and
xlat
sub
xchg
arpl
int3
xchg
sub
mov
pop
addb
fists
sbbb
or
or
push
xchg
div
ja
adc
add
mov
push
or
test
inc
mov
js
push
or
xchg
loopne
mov
lods
cs
aad
xchg
test
mov
sbb
push
imul
or
rolb
cli
pop
fdivr
jne
movb
pop
adc
push
loope
rcrl
mov
mov
loope
mov
inc
jge
jne
rorl
or
xchg
cmp
push
sbb
mov
inc
lds
cmp
popa
add
mov
repz
push
cmc
cld
dec
in
adc
lret
xor
aas
leave
sysenter
enter
mov
sbb
push
push
fistpl
xchg
rolb
int
imul
jmp
rolb
stos
lea
lock
mov
cs
mov
lock
fnstsw
repnz
xchg
aad
xchg
adc
dec
and
int
xchg
js
cltd
xor
popl
jne
mov
dec
push
push
sbb
int
mov
cld
xor
imul
xchg
pop
aad
icebp
push
movsl
shrb
mov
movsb
jmp
sbb
dec
lret
mov
cwtl
std
aad
aas
mov
jl
mov
mov
add
cmp
pop
jns
sbb
push
loop
leave
add
stos
xchg
xchg
xchg
icebp
and
out
out
pop
pop
mov
adc
or
mov
cmpsb
and
js
cmp
lret
pop
pushf
lock
imul
dec
test
in
fdivr
pop
pop
das
fistpll
fcomp
and
mov
popa
inc
jp
add
in
or
mov
jl
call
and
movsl
pop
xchg
cli
out
ret
test
es
mov
adc
rolb
les
inc
cmc
adc
fstpl
pop
mov
pop
xchg
gs
shll
in
xor
xchg
fldl
jmp
test
mov
cmpl
lret
inc
cmp
or
enter
stos
movsb
aas
add
add
or
faddl
je
out
add
mov
mov
into
js
jmp
dec
loopne
bnd
jns
fildl
hlt
daa
cmc
mov
outsl
xor
sahf
inc
cwtl
arpl
in
add
in
movsb
pop
jl
movsl
inc
jmp
sub
stos
movb
in
cmp
rcrl
add
xchg
dec
scas
xor
jns
pop
adc
in
push
add
push
xchg
shl
cmp
dec
jnp
dec
das
popf
repz
hlt
or
stos
mov
jge
jmp
mov
push
dec
adc
int3
mov
lahf
mov
mov
dec
loopne
pop
dec
cmp
outsb
adc
lret
inc
in
push
jge
pop
and
scas
das
int3
dec
lcall
push
mov
call
pop
or
inc
das
call
jle
std
gs
xchg
sbb
mov
inc
scas
adc
icebp
xor
pop
pop
push
mov
cmp
pop
divb
lahf
mov
in
jp
sbb
cmp
inc
insl
into
fsts
loop
fadds
lods
push
and
icebp
mov
sbb
gs
cmp
ja
xchg
pop
or
rorl
cmp
shlb
hlt
pusha
mov
jmp
xlat
gs
jmp
imul
enter
inc
mov
movsl
jp
mov
and
sub
scas
push
pop
xchg
pop
lods
sbb
mov
lahf
xchg
jge
rcll
imul
cmp
movsb
movsl
fistpll
mov
addr16
or
push
jmp
dec
push
imull
pop
push
fsts
shrb
jecxz
pop
push
xchg
or
aas
lret
add
pop
out
sub
mov
push
push
sbb
fistpll
push
mov
mov
cli
fbld
pop
enter
std
mov
push
jp
lcall
xor
fldcw
int
cmp
and
mov
mov
push
mov
pop
test
ret
adc
sti
stos
popl
rcrb
ret
xchg
push
ret
call
mov
das
sbb
jl
push
outsb
jns
pop
stos
gs
adc
mov
fcmovne
dec
add
test
repnz
or
test
pop
test
div
sub
pop
push
mov
xor
cs
pop
sub
mov
pusha
mov
in
jge
shll
adc
adc
sub
adc
ja
mov
outsl
push
mov
xchg
je
lcall
loope
dec
shrb
xchg
roll
cmpsl
push
out
sub
lret
mov
test
sbb
push
inc
mov
es
nop
ja
adc
and
cwtl
lahf
pop
sbb
cmp
movsl
dec
stc
inc
or
popl
test
inc
jmp
sbb
cmpsl
lods
lods
push
movaps
addb
jp
fdivp
push
aad
xchg
cmp
ret
sbb
mov
ret
mov
xlat
and
pop
adc
mov
aad
adc
lea
sar
pop
cmp
dec
sahf
int3
jb
mov
aad
adc
push
outsb
inc
iret
jae
rorl
lcall
pushl
push
mov
rcrl
dec
sub
rolb
fnstsw
cli
xchg
push
cld
addr16
mov
adc
add
pop
or
mov
adc
xlat
fbstp
and
out
adc
pop
divb
xor
lods
stc
push
mov
dec
jg
jp
int
mov
cmpsl
sub
pop
test
and
dec
jns
jae
push
test
adc
jge
and
lahf
push
or
jp
into
out
inc
push
and
mov
dec
addb
inc
insb
push
jno
aam
repnz
std
es
repnz
dec
testb
or
test
dec
mov
lret
pop
push
pop
sbb
jbe
pop
stos
mov
in
sub
cmp
data16
cmc
out
ror
mov
ljmp
mov
adc
enter
cmp
test
lret
insl
in
jg
lcall
xchg
dec
int3
negl
mov
fwait
inc
adc
out
sub
scas
jmp
adc
ret
outsb
cmp
lcall
leave
dec
cmp
cwtl
xlat
jge
jmp
mov
jp
xchg
jnp
aam
hlt
cltd
mov
shl
sbb
jno
movsb
mov
and
xchg
js
sbb
aas
xchg
adc
arpl
or
lahf
push
jmp
jg
push
sub
dec
mov
adc
ljmp
and
pop
loope
je
adc
xlat
pop
mov
xor
pop
cs
insb
jnp
xchg
xor
cmp
aam
rclb
and
je
dec
mov
loope
addb
and
lods
enter
xor
lock
jae
addr16
lret
sbb
lcall
inc
bound
dec
jns
outsl
outsb
pop
test
lret
lret
rcl
pop
or
mov
lods
add
cmp
dec
imul
aam
xchg
sub
cltd
lahf
xchg
mov
insb
cmp
das
test
clc
or
adc
jp
lds
pop
lods
sub
jl
cwtl
mov
movsb
sbb
cmc
mov
sub
pop
out
jp
add
cmc
jp
mov
xor
arpl
out
pop
in
popa
inc
push
add
sbb
data16
push
ret
xchg
mov
fwait
add
lret
xchg
mov
out
icebp
jle
sbb
insl
mov
jp
adc
and
add
and
xor
mov
data16
andb
movsl
jle
inc
pushf
xor
or
sbb
add
cmp
inc
xchg
mov
ret
pop
jp
mov
add
stos
mov
lahf
cmc
sbb
arpl
jae
sub
xor
sub
cmp
movsl
mov
mulb
mov
jp
jno
inc
aad
sub
pop
add
call
loopne,pn
jg
loopne
loopne
mov
and
repz
xlat
mov
pop
add
out
repnz
je
insb
inc
xor
ret
mov
mov
fwait
inc
cld
push
push
stos
mov
push
loope
sbb
in
jb
sti
pop
out
jo
scas
repz
aaa
sub
jg
mov
add
lods
and
xchg
xchg
jns
jb
push
lock
lods
jo
fidivs
fs
and
and
int
mov
mov
or
xor
xchg
insw
sbb
pop
ds
sbb
movsb
adc
mov
mov
in
push
dec
mov
popf
pop
vpmacsww
scas
je
cmpsl
sub
arpl
int
add
push
shll
push
icebp
adc
cwtl
std
sub
jg
jae
cld
jg
ret
and
push
loop
scas
sbb
leave
enter
sub
stc
dec
and
rclb
jae
and
sbb
loop
dec
adc
jecxz
jo
sbb
xchg
mov
xchg
cmpsb
dec
lds
sbb
repz
pop
loope
xor
pop
mov
pop
push
scas
cs
rclb
cmp
or
in
add
mov
out
idivl
aam
push
jb
imul
stos
mov
jge
popf
adc
mov
adc
or
rcrl
movsb
pop
push
dec
ja
daa
das
inc
push
cmp
pop
jae
xchg
divb
fidivrs
push
inc
sub
stos
adc
or
add
and
pop
test
les
data16
daa
or
jmp
mov
dec
in
cmp
lds
fcmovb
push
pop
sbb
daa
jne
add
pop
out
pop
mov
add
xchg
pop
int3
mov
and
scas
pusha
add
adc
mov
in
std
inc
xchg
mov
xchg
in
outsl
push
insl
jbe
in
cmp
hlt
arpl
xchg
xor
sub
xchg
xchg
push
xchg
shrl
add
popa
out
test
fcom
inc
cmp
lret
and
dec
inc
mov
mov
jle
repnz
mov
xor
cmp
sti
jg
out
dec
xchg
mov
jg
sbb
ja
jge
rorl
jg
dec
xor
push
js
mov
ds
mov
sub
push
cmp
arpl
add
and
mov
cmp
sbb
mov
notb
dec
popf
sub
negb
jl
push
clc
xor
stos
sti
adc
inc
sbb
pop
js
int
jge
out
dec
xchg
insb
jmp
leave
xor
push
push
nop
fistps
xchg
mov
inc
xchg
aas
aam
and
fisubs
jno
dec
mov
loopne
stos
loope
cmovs
push
dec
inc
and
and
jnp
out
push
ret
lahf
jmp
pop
lods
push
sbb
or
xor
push
mov
push
and
aad
dec
inc
and
push
dec
js
repz
loop
movsb
mov
push
out
and
xor
mov
fidivs
mov
into
jne
aaa
mov
and
mov
out
in
shlb
fcmovnbe
std
add
xor
not
fsubs
test
rcll
xchg
adc
out
cmp
cmc
adc
lods
fisubrl
int
cmp
or
jnp
mov
jle
gs
dec
jns
add
adc
fidivrs
outsl
xor
test
mov
loopne
cmc
lock
jl
push
sbb
aam
test
cs
inc
ret
in
ljmp
xor
andb
fwait
add
dec
push
popf
in
mov
fcmove
lock
jb
out
cmc
xorb
cs
adc
jmp
xor
mov
ret
call
push
cli
push
andb
arpl
arpl
add
mov
sbb
mov
jg
pop
sbb
cld
scas
sbb
or
mov
popf
jns
arpl
sub
mov
add
push
jnp
inc
lcall
xchg
ret
or
mov
add
mov
xlat
enter
lock
insb
daa
xchg
pusha
cmp
outsl
fnsave
xor
push
test
push
mov
icebp
sbb
iret
add
fisubs
mov
push
pushf
and
or
push
in
in
orb
aam
std
dec
cmp
mov
ret
cli
shrb
adc
push
xchg
mov
push
mov
mov
sti
icebp
out
in
mov
aaa
inc
mov
cmp
aad
and
leave
jo
jg
sub
push
fldl
pusha
cld
push
jle
cli
jo
pop
imul
and
ret
mov
out
ret
jle
xchg
xchg
andb
add
xchg
xchg
shrl
test
scas
mov
jo
ret
ds
push
adc
pop
and
adc
mov
les
xchg
jge
push
add
xchg
in
pop
inc
enter
jno
ucomiss
lret
xlat
mov
sub
knotb
sbbl
jle
push
loop
loope
pusha
out
lahf
dec
je
adc
lods
or
xchg
andb
add
pop
cmpsb
adc
inc
mov
jg
dec
jp
or
xor
subl
and
dec
xchg
test
test
cmp
scas
push
fnstenv
arpl
xchg
fld
push
dec
scas
or
insl
outsb
push
repz
aam
in
mov
movsl
cmp
scas
sarl
repnz
and
nop
pop
dec
mov
fistl
stos
call
popa
icebp
lods
dec
add
aas
and
lods
stos
out
add
loope
mov
xchg
mov
lret
imul
popl
test
lret
pop
cli
fs
hlt
dec
xor
je
xor
mov
icebp
inc
jns
xchg
or
dec
sub
mov
enter
inc
lahf
fsubrs
sbbl
push
sub
int3
int
mov
subb
sub
and
jnp
or
xchg
xor
int
in
push
scas
mov
mov
xchg
fsubl
inc
cmp
subl
loope
popa
gs
in
jnp
pop
sub
jecxz
and
cmp
xor
jg
xchg
inc
lcall
xchg
sub
mul
ret
cwtl
adc
lods
mov
push
subb
js
lds
cwtl
lds
fimuls
jne
call
iret
sub
dec
in
jl
and
inc
test
mov
nop
dec
es
mov
fimull
pop
dec
adc
dec
dec
adc
dec
xchg
lret
cli
aad
fiaddl
cmp
gs
fmuls
fwait
lahf
aam
push
pop
pop
int
js
sub
lret
addb
xchg
push
mov
out
loop
cmp
xchg
fdivl
jbe
cmp
dec
xorb
and
sbbb
jo
imul
xor
sahf
push
insb
out
inc
push
cmp
jecxz
sub
mov
stc
test
mov
push
lea
adc
lahf
sbb
rcll
sub
scas
xor
xchg
and
lret
pop
pop
fdivr
mov
add
je
scas
jbe
sub
mov
cmp
inc
mov
das
push
cmp
xor
mov
xchg
and
jno
inc
lahf
jns
outsb
add
stos
xchg
push
mov
pop
or
mov
in
sub
add
std
pop
leave
mov
push
xchg
push
fsts
sub
sbb
dec
dec
push
out
ss
bound
xchg
sub
iret
mov
sahf
clc
mov
dec
nop
insl
inc
add
das
cld
xor
sbb
mov
aad
loopne
lcall
enter
lock
mov
sub
pop
sti
mov
daa
lock
mov
loopne
xchg
jg
popf
cmp
mov
jle
lcall
lret
push
imul
xchg
pop
scas
or
lods
std
jne
stos
cltd
xor
xchg
int
addl
cmp
adc
pop
inc
repz
popa
push
enter
out
adc
push
adc
mov
sbb
add
and
sarb
gs
pop
add
out
xchg
sbb
lret
pushl
or
dec
jle
daa
pop
pop
jecxz
sub
xor
add
arpl
push
dec
loopne
das
icebp
scas
dec
add
aaa
sub
sbb
hlt
mov
and
mov
add
mov
sub
addr16
inc
sub
xchg
repnz
insl
or
scas
ljmp
sbb
sub
lods
push
in
cmp
or
add
outsb
fsub
cmpsb
sbb
sbb
scas
nop
jb
cmp
sahf
mov
leave
ret
fiaddl
sbb
cmpsb
pop
lret
dec
push
les
mov
loopne
aad
adc
or
or
sahf
mov
loopne
out
or
mov
ret
sub
adc
jle
adc
repnz
cmp
mov
aas
or
mov
data16
out
cmp
pop
jne
push
or
sbb
add
cmp
sub
inc
std
or
mov
hlt
call
scas
jl
push
or
aas
push
cmp
cmp
mov
out
push
fwait
jns
cmp
hlt
jnp
insl
les
xchg
aam
aaa
push
add
cmpl
mull
outsb
inc
ljmp
es
adc
jno
adc
mov
call
cmp
mov
or
push
aad
xor
mov
mov
inc
subl
mov
mov
rcrl
cmc
std
call
sarl
inc
cmp
scas
hlt
out
mov
sub
push
movsl
out
xchg
pop
scas
add
fimull
jg
out
xchg
cmp
jmp
jmp
dec
rol
cli
jp
mov
testb
jp
repnz
cli
movsb
dec
jge
and
push
adc
loope
inc
cmp
xchg
rolb
cmp
stos
test
and
cli
fisubl
lcall
or
sbb
data16
push
xor
repz
sti
data16
add
subb
addr16
adc
out
sbb
push
pop
inc
pop
jo
jecxz
test
sbb
xchg
sbb
arpl
cld
in
push
dec
stos
lahf
xor
mov
push
mov
test
pop
push
xchg
mov
aad
testb
mov
loopne
addr16
popf
div
pop
pusha
sbb
cli
and
popa
cwtl
sbb
add
adc
jo
adc
xor
cmpsl
mov
lods
xchg
fcmovnb
mov
cltd
dec
dec
insl
push
loopne
push
in
je
jns
mov
cmp
nop
mov
imul
negb
pusha
dec
xchg
jmp
mov
outsl
cmp
fsubr
loopne
fnstenv
cmpsl
aad
jge
xchg
and
lods
rorb
lahf
divl
mov
lcall
xchg
loopne
adcl
sbb
dec
mov
mov
cmp
test
push
dec
xchg
add
ret
arpl
or
xchg
lret
pop
push
jmp
xchg
mov
xchg
xchg
adc
popa
fisubs
sub
pop
adcb
cltd
addl
push
testb
lahf
dec
mov
cmpsl
dec
mov
mov
push
test
test
ds
rcll
fsubrs
lock
aad
inc
mov
cli
pushf
jg
daa
inc
cmp
pop
dec
sbb
sbb
icebp
jne
int3
fs
lcall
mov
imul
pop
aaa
aaa
popa
xchg
add
test
inc
push
dec
sub
mov
movsl
ret
ja
arpl
fwait
and
jmp
lret
data16
cmp
int3
jle
mov
fisttpll
inc
lahf
neg
xchg
add
pop
test
sub
cs
scas
aaa
pop
push
into
mov
dec
aam
and
dec
dec
push
sbb
mov
daa
push
js
shrb
adc
loope
mov
and
push
lea
mov
inc
mov
push
dec
daa
shlb
pop
sub
mov
mov
dec
dec
xchg
test
add
lret
out
ret
stos
sub
or
clc
lret
mov
dec
dec
imul
leave
and
sbb
xor
sti
fwait
dec
mov
ds
dec
sub
test
loope
mov
incl
and
mov
xchg
sbb
mov
daa
shrb
ret
mov
icebp
fdiv
mov
inc
mov
jo
pop
xor
mov
xor
call
mov
stos
and
pop
pop
sub
les
jmp
mov
inc
lods
pop
mov
stc
push
pop
out
nop
and
loopne
mov
lahf
dec
les
inc
sub
mov
and
popa
push
cmp
bound
icebp
pop
xchg
in
divb
xchg
ficoms
imul
scas
cmp
cltd
orl
lds
jno
subl
movsl
repz
mov
test
mov
jp
mov
jmp
jae
addr16
add
gs
push
fcoms
cmp
pop
jbe
mov
mov
add
sti
xor
cmp
cmp
imul
sub
inc
enter
inc
fcomi
lock
shll
cmp
add
adc
rcll
pop
repz
cwtl
outsb
test
push
xchg
jnp
test
ret
ficoml
dec
pop
std
lcall
and
ljmp
in
mov
iret
mov
xchg
lods
add
daa
push
cmp
test
jns
lock
popf
sbb
jno
das
jmp
clc
clc
movsb
add
and
in
stos
mov
mov
arpl
call
inc
pop
mov
mov
ret
sbb
mov
pop
jl
mov
sbb
cltd
aad
jmp
jnp
mov
out
out
jp
loope
xchg
and
xor
ljmp
inc
xchg
pop
addr16
imul
sbb
push
adc
daa
or
subl
dec
pop
jb
push
jg
lret
test
jge
mov
inc
mov
sbb
mov
adcb
lahf
inc
lcall
xor
pop
dec
in
jno
dec
je
pop
stos
in
aam
fistl
pop
xchg
aad
lret
into
loope
cmpsb
pop
inc
int3
test
lods
jl
scas
jae
iret
dec
pop
js
lret
mov
ljmp
outsl
mov
and
repnz
adc
jbe
js
mov
test
inc
jp
lods
cltd
cmpsl
into
adc
fucom
lret
jbe
cmpsb
icebp
int
subl
imul
clc
fs
sarb
mov
loop
fistpll
mov
or
push
xor
std
repnz
push
scas
push
sbb
movsl
add
cwtl
add
mov
xor
mov
fidivrs
imul
adc
pop
xor
subl
iret
movsl
and
out
mov
or
jbe
or
jns
lcall
lods
test
mov
dec
push
adc
rcrb
rcrb
shl
jae
into
arpl
lock
inc
cwtl
ds
fdivs
imul
xor
cmpsb
adc
pop
data16
outsb
jecxz
jecxz
dec
loopne
sub
fsubs
mov
int3
call
push
cmp
dec
int
pop
and
push
mov
std
dec
sbb
push
not
and
pop
push
imul
outsb
imul
cmp
sbb
loope
rorl
or
sbb
outsb
sti
mov
cli
aaa
scas
rcrl
jnp
int
jns
ja
daa
add
sti
inc
subb
mov
or
xchg
or
pop
shll
fdivrp
sbb
add
rclb
and
insb
sbb
adc
cs
pop
fstpt
inc
mov
movsl
pop
gs
xchg
xchg
rorl
pop
add
and
out
ss
jmp
xor
ds
or
addr16
pop
loopne
jbe
and
mov
inc
movsl
clc
pusha
jno
push
inc
pop
jl
insl
addr16
imul
push
stos
sbbb
xchg
es
xor
inc
jo
psubd
ficoml
out
xchg
sbb
scas
and
pop
xchg
add
ljmp
faddl
mov
inc
cwtl
stos
add
and
push
jle
xchg
jmp
push
in
mov
ljmp
mov
adc
inc
jmp
mov
fnstenv
mov
or
xor
gs
sbb
pop
pop
outsl
cli
push
push
test
and
or
sbb
dec
cmp
add
cltd
push
cmp
test
mov
pusha
push
lcall
cmc
cltd
lods
inc
jge
pop
data16
sub
mov
fldenv
rorb
sub
cmpsb
inc
inc
je
mov
adc
hlt
jecxz
mov
rcr
or
jbe
sti
push
inc
sbb
jg
pop
xchg
or
xor
jbe
inc
out
dec
stc
test
iret
lea
sbbl
and
inc
cmpb
mov
inc
add
dec
les
xchg
mov
nop
lcall
shrb
aad
mov
sbb
mov
and
and
arpl
rclb
mov
loopne
es
aas
push
and
cmp
cmp
add
stos
xchg
frstor
jg
inc
in
test
aad
cmp
mov
dec
cwtl
ljmp
rcl
push
xchg
xor
movsb
pop
sub
adc
and
fisubl
imul
jmp
pop
fsubl
mov
xchg
in
gs
inc
jnp
leave
mov
sub
sbb
push
mov
int3
popf
cmp
adc
jbe
scas
test
jge
adc
mov
orb
jno
push
jp
imul
xchg
push
stos
fwait
mov
and
test
push
or
or
jae
ss
dec
mov
inc
cmp
jnp
movb
add
popa
scas
sub
int3
sub
mov
test
js
jecxz
sarb
push
pop
xchg
dec
daa
sahf
mov
pop
adc
mov
icebp
ss
iret
adc
fdivl
test
push
aad
aam
aad
adc
imul
jg
mov
hlt
inc
pop
and
or
mov
fnstsw
dec
roll
sbb
mov
and
push
jns
sbb
cmovs
sti
test
bound
cmp
shl
mov
mov
xorb
std
js
or
pop
pop
pop
out
xchg
lods
imul
mov
push
jle
mov
shll
inc
pushf
jb
test
push
jb
and
cmc
pop
sarb
jp
dec
inc
xor
inc
loop
adc
cmp
jmp
arpl
push
jp
repz
outsl
xchg
xlat
pop
pop
add
mov
push
dec
bound
cmpsb
xor
jnp
mov
xchg
cs
adc
rclb
dec
inc
dec
imul
mov
mov
mov
mov
ret
inc
or
lods
test
push
mov
or
fnsave
inc
enter
cwtl
leave
xor
inc
and
lds
jle
dec
sysret
push
outsb
std
mov
jns
xor
mov
jns
jecxz
lock
nop
sub
push
push
lds
rclb
call
outsb
pop
addr16
jle
xchg
inc
xchg
out
inc
test
notl
adc
aam
sbb
cli
and
sbb
mov
test
int
lods
mov
out
adc
jo
out
inc
xchg
movsl
pushf
fbstp
mov
cmpsl
stc
mov
cmp
imul
mov
fstpl
test
or
xchg
and
imul
add
ja
out
inc
sbb
fcoms
je
rorl
stos
rcr
mov
jg
jo
ret
dec
mov
pop
mov
inc
fninit
jbe
or
jp
sbb
scas
xchg
test
add
aad
xchg
rcll
stos
iret
repnz
aad
es
push
adc
cmpsl
js
mov
push
and
mov
ficoml
cmpsl
adc
scas
mov
popa
and
mov
dec
sbb
movl
sarb
inc
mov
ret
fists
sbb
inc
push
inc
rorl
dec
call
jbe
mov
movsl
cmpsb
inc
rcrl
insb
adc
xchg
lods
js
aam
insb
jg
loop
aam
das
cs
jle
shrl
adc
negl
pop
fdivrs
rcrl
cmpsb
dec
lods
xor
pushf
xorb
ret
test
add
jmp
sub
nop
test
into
push
hlt
fs
cmpsl
ja
in
xchg
and
adc
sub
test
cli
insl
outsl
mov
insl
test
rorb
mov
jae
into
inc
scas
add
out
mov
pop
sub
dec
fmulp
mov
mov
mov
pop
fildll
hlt
lret
call
movl
rcrl
jbe
push
dec
and
iret
cmp
jmp
mov
lock
and
mov
ss
jp
adc
dec
mov
fsubrp
or
cmc
mov
fisttpl
push
mov
sti
rolb
stos
cmp
lret
push
test
mov
clc
mov
sub
or
pop
and
and
les
jno
fistpll
ss
mov
in
out
push
xchg
or
pop
popa
sub
ljmp
dec
mov
fdivrp
mov
add
dec
popa
adc
sub
sub
mov
cmp
dec
jb
mov
loope
sub
sbb
movsb
test
out
jge
insb
mov
movsb
dec
outsl
add
mov
mov
orl
incl
mov
ja
push
add
out
mov
xchg
loope
enter
pop
inc
jb
push
fs
and
shr
aam
push
inc
inc
sahf
mov
repnz
mov
fsubl
sbb
pop
test
mov
popf
push
inc
pop
jge
stc
in
mov
ljmp
xchg
and
loope
jae
xor
sahf
jge
push
mov
into
adc
xchg
jg
inc
icebp
hlt
into
cmp
ret
sub
jbe
mov
movsb
test
inc
mov
in
sbb
xor
cltd
dec
xchg
ja
dec
or
xchg
test
arpl
in
test
adc
or
pop
pop
mov
pop
jmp
icebp
mov
int
stos
bound
loop
dec
movsb
filds
inc
inc
negb
stos
pop
das
xorl
dec
pop
dec
pop
pop
xchg
fdivrs
icebp
dec
jmp
bound
and
stc
leave
jb
mov
mov
dec
add
into
lcall
iret
je
pop
in
pop
sub
jle
movsb
sub
jae
cmp
sbb
mov
ret
add
adc
pop
arpl
out
aas
fisubrl
push
inc
leave
mov
xor
into
aaa
stos
ffree
ljmp
dec
and
popa
inc
mov
or
inc
jo
loope
cmp
das
xchg
arpl
jge
push
mov
cmp
fisubs
fcoml
jge
jns
call
xchg
fnsave
adc
xchg
lea
cmpl
pop
and
popa
out
aam
out
bound
adc
inc
movsl
and
jo
push
push
cmpl
dec
xchg
and
dec
insb
pop
hlt
and
js
adc
sbb
enter
mov
lahf
sbb
xchg
fisttpll
clc
mov
popf
aad
inc
iret
sub
pop
xor
push
xor
ljmp
mov
push
add
jo
call
es
loopne
es
xor
sbb
movsl
hlt
dec
inc
cmp
mov
adc
pop
test
std
xchg
push
dec
aam
out
test
cmc
or
mov
sub
mov
insb
fs
fbstp
dec
cli
enter
lahf
xchg
int
or
lea
dec
repnz
mov
mov
test
jnp
daa
aaa
mov
loop
dec
pop
fnsave
add
xor
cmpsb
adc
popf
sbb
mov
addl
push
and
push
out
aaa
ss
xchg
jge
add
sbb
mov
lock
push
inc
loop
pushl
xchg
xor
jns
adc
fcoml
inc
jb
push
pushf
aaa
xchg
lcall
lods
lahf
mov
cwtl
testl
lock
pop
pop
and
push
test
outsl
add
jae
sbb
cmpsl
inc
subb
rorb
mov
cmc
ljmp
xor
lds
lret
dec
insb
lods
mov
sbb
push
nop
mov
addl
xor
jg
inc
push
mov
inc
testl
imul
cmp
leave
fsubr
fdivrs
jb
and
cmc
jg
cmp
mov
mov
imul
jmp
stos
gs
outsl
sub
out
out
lcall
bound
in
cmp
test
mov
lea
cltd
cmp
push
push
xchg
jecxz
iret
aad
sub
mov
aam
scas
adc
lods
mov
mov
lds
arpl
fisubrl
popl
mov
std
hlt
mov
xchg
lods
mov
and
xlat
dec
mov
cmp
xchg
inc
pop
jp
cmp
int
popf
pop
lret
sbb
add
cmc
lea
repz
test
xchg
test
cmp
cmc
insl
xchg
pop
fcompl
cmpsb
or
pop
int
je
repnz
or
mov
sarb
popa
es
sub
mov
pop
mov
adc
mov
orb
push
movsl
add
loop
sbb
mov
mov
std
lds
aad
mul
pop
jmp
dec
orb
scas
pop
xchg
adc
out
rcrb
xor
fcomps
loopne
sbb
shll
bnd
xchg
xchg
xchg
int
fwait
cmpsl
pop
cmc
inc
mov
std
mov
or
or
divb
adc
fimuls
lret
loope
gs
sti
sub
mov
daa
imul
and
scas
add
inc
into
outsb
fdivl
push
clc
mov
testl
adc
inc
sub
adc
loop
stc
call
xor
mov
stos
push
aas
popa
subl
xlat
stos
lahf
sbb
lods
and
ja
mov
fildl
or
fidivrl
or
pop
call
rcrb
xor
sti
sbb
xchg
pop
jae
out
xorl
icebp
movsb
dec
inc
xchg
mov
aad
cld
out
js
add
iret
test
lea
int3
sub
cmc
ficoms
ljmp
js
popf
xchg
xor
mov
je
inc
lods
dec
shrl
cld
mov
out
xchg
fisubrs
ret
icebp
mov
nop
and
or
sub
ficomps
and
in
int3
and
in
adc
ret
xor
mov
cmp
pop
lods
inc
xchg
gs
lahf
jmp
es
xchg
dec
mov
mov
loope
mov
nop
arpl
push
ficoms
push
rcll
out
dec
or
shlb
dec
pop
fwait
ljmp
adc
dec
sbb
iret
xor
jl
lea
scas
into
fdivl
ds
test
movb
outsb
jge
jp
mov
cmp
fsub
jne
addr16
sbb
mov
icebp
sbb
lds
add
push
jmp
test
inc
mov
lods
push
addr16
xchg
jbe
mov
adc
ret
sub
popa
mov
imul
sub
xchg
cmpsl
aaa
jnp
xorb
jmp
inc
xorl
adc
ds
sbb
push
cli
push
or
xor
addb
dec
cmp
push
or
pop
dec
idivl
insb
fnstenv
push
push
fnstenv
inc
jecxz
add
xchg
mov
cmp
mov
sub
pop
inc
outsl
pop
lods
mull
mulb
imul
cli
jge
stc
int
lahf
iret
popf
or
cmp
add
cmp
ds
cs
inc
pushf
stos
loopne
inc
fstps
fisubl
sbb
aad
lods
shll
jp
mov
push
int
mov
mov
cmp
clc
stos
xchg
push
scas
mov
xchg
fisubs
mov
loopne
mov
stos
in
mov
mov
push
mov
xor
pop
mov
jp
ljmp
in
fists
mov
jb
lds
ljmp
imul
sub
mov
rorb
adc
test
lods
mov
push
sarl
cmp
inc
xchg
mov
outsb
lock
fnstenv
gs
xor
jbe
dec
lock
jg
jle
mov
clc
mov
ljmp
mov
mov
fnstenv
dec
jge
lods
or
out
adc
mov
xchg
mov
in
jo
push
stos
mov
orb
dec
in
add
stos
sarb
jnp
jg
pop
push
std
out
cmc
icebp
xor
sub
arpl
int3
and
test
int3
push
pop
jp
std
movsl
mov
movsb
lcall
loopne
cmp
loope
cwtl
fcoms
push
popf
xor
lea
test
scas
pusha
push
lcall
test
dec
test
jmp
xchg
data16
adc
pop
mov
cmc
mov
cwtl
stc
xchg
push
mov
nop
cwtl
das
sahf
stos
fs
call
push
enter
fistl
cmc
push
loope
xchg
jae
inc
out
clc
outsb
shll
pop
aam
test
inc
jmp
es
sbb
fstl
cmc
iret
xchg
mov
fdivp
test
or
push
fcoml
iret
adc
mov
xchg
or
out
jp
jecxz
test
add
enter
test
mov
push
and
cmpsb
mov
fistpl
rcl
dec
xchg
pop
add
push
stos
imul
mov
jnp
jno
mov
bound
cmpsb
and
pop
popf
ljmp
jbe
cmp
sbb
cmp
or
std
outsb
pop
adc
insb
jle
mov
cmpsl
xchg
dec
call
call
or
out
mov
in
push
enter
pop
sub
dec
ljmp
pop
pop
push
mov
inc
xchg
inc
mov
dec
inc
mov
negl
and
negl
lcall
inc
dec
into
addb
rorb
dec
mov
sub
dec
mov
xor
jae
shl
enter
stos
lock
mov
cltd
fldcw
mov
adc
pop
sbb
pusha
stos
sti
scas
je
pusha
mov
in
clc
sti
rorl
dec
or
adc
push
mov
add
inc
xchg
adc
in
mov
mov
mov
scas
popf
daa
cmpsl
or
push
into
mov
xchg
loop
data16
test
xlat
mov
pop
mov
out
imul
xor
sub
popa
and
sub
scas
mov
and
cmpsb
push
inc
repz
push
mov
pop
test
es
mov
mov
pushf
xor
push
mov
jne
push
xchg
filds
sbb
in
imul
stos
rorl
push
push
adc
or
fidivl
mov
or
and
std
shl
andl
test
xchg
push
iret
adc
mov
dec
add
dec
aas
cmp
push
jg
xor
xor
popf
pop
rcrl
dec
ds
pop
jge
mov
xchg
int3
cmp
cmc
addr16
in
loop
mov
das
inc
adc
loop
push
mov
adc
jnp
mov
xor
ficoml
mov
hlt
xor
subb
xor
add
jl
aam
out
fdivp
sbb
mov
inc
xor
jge
mov
pop
push
sbb
jmp
nop
incl
lret
push
inc
aam
inc
adc
lcall
negl
rorl
xchg
pushf
lret
lret
sbb
and
and
xor
or
rcrb
icebp
shl
xchg
movsl
int3
pshufw
adc
test
add
cwtl
jmp
es
jno
jecxz
testl
sub
ficoml
pushf
cmp
pop
ret
adc
xchg
stos
mov
enter
cmp
mov
mov
mov
int3
mov
iret
inc
push
or
mov
push
insl
mov
jnp
mov
lcall
jmp
fstpl
nop
jne
pop
xchg
lock
inc
mov
in
sub
jmp
xchg
dec
mov
or
xchg
icebp
jo
ret
sar
cmp
imul
stc
cli
push
add
cmp
mov
sbb
sbb
out
icebp
lods
les
aaa
pop
and
push
std
sub
sub
mov
pop
icebp
popa
arpl
push
inc
adc
addl
adc
or
mov
daa
xor
rcrl
and
mov
add
in
and
hlt
lods
cmpsb
iret
mov
adc
and
addb
pop
add
sbb
adc
cli
in
loop
xchg
xchg
cwtl
aas
popa
and
adc
pop
ror
or
sub
xor
pop
pusha
cs
push
add
inc
xchg
int
xchg
mov
cmp
dec
fldl
ja
std
mov
jne
sbb
test
mov
out
dec
sahf
mov
fisubrl
ds
fimuls
push
sub
test
shll
insb
shlb
js
fcmovne
lea
mov
fistpl
out
push
pop
and
jnp
andl
mov
mov
jmp
add
imul
test
dec
ret
add
mov
arpl
out
inc
push
sub
aas
decl
imul
xchg
movsl
add
sahf
add
scas
sahf
mov
cmp
xchg
push
mov
adc
xchg
and
aad
mov
test
jp
add
mov
cmp
ret
fptan
push
in
mov
inc
test
jb
xchg
mov
mov
inc
sbb
xchg
mov
or
inc
and
pop
js
andl
mov
idiv
xor
sub
shlb
dec
ror
fadd
pushf
mov
push
cmpsl
inc
jle
jns
inc
add
out
add
inc
xchg
xor
cmp
push
test
and
mov
push
movsb
mov
push
int
inc
cmpsl
xor
add
inc
pop
jb
ret
fucomp
sbb
stc
sar
xchg
cmp
or
imulb
jne
jnp
in
fstps
inc
jmp
popf
add
adc
pop
in
sbb
sbb
xchg
mov
icebp
jge
mov
in
dec
loope
or
dec
out
div
mov
and
or
shl
mov
scas
inc
lcall
ljmp
or
rcll
sarb
mov
xor
subb
movl
and
xchg
mov
mov
mov
in
ss
sarl
xchg
cmpb
stos
inc
stos
jns
movsl
std
pop
mov
pop
push
cmpsl
stos
add
xchg
insb
or
dec
or
push
loope
dec
loop
mov
adc
inc
ret
aam
mov
xchg
dec
dec
push
xlat
xchg
cmp
test
ljmp
add
and
leave
push
xchg
in
in
addr16
sub
das
add
and
ret
rorl
arpl
xchg
insl
cmp
adc
fidivrs
mov
inc
gs
xor
daa
adc
mov
jmp
imul
sti
mov
sti
loope
xor
cltd
jne
mov
ljmp
cmp
addr16
sbbl
sub
pop
xor
push
outsb
fs
push
adc
outsb
pop
jne
faddl
call
mov
adc
adc
jae
mov
sar
and
lret
push
adc
mov
lahf
inc
ret
pop
cmp
mov
dec
insb
cld
outsb
popf
lea
cli
popf
jle
xor
outsl
pop
mov
dec
vcvtsd2si
fnstenv
je
push
jg
and
in
cmp
jae
adc
add
in
call
in
xchg
in
or
addl
jg
inc
imul
sbb
push
das
cmp
in
aad
and
add
adc
scas
imul
pop
add
lods
testb
fisttpl
repnz
dec
mov
fnstsw
fistl
je
xor
iret
and
or
mov
inc
lahf
sub
or
sahf
or
gs
push
clc
cwtl
popa
and
xor
xchg
data16
fdivr
imul
dec
push
adc
xor
or
ds
mov
pusha
mov
and
cmc
add
mov
xor
arpl
popa
pop
add
outsl
repz
jae
cmp
seto
les
xor
ja
add
pop
and
rorl
jmp
xor
mov
lock
mov
mov
in
rolb
js
addr16
insl
nop
mov
cwtl
hlt
xchg
sub
mov
xchg
cmc
cld
mov
fnstcw
das
mov
cltd
xor
jl
dec
cmp
sbb
lret
dec
dec
into
ljmp
mov
sbb
out
push
ret
cltd
out
pop
inc
mov
jecxz
cmp
or
dec
jecxz
ficoml
mov
test
jecxz
out
in
jg
cmp
pop
jne
ret
add
jge
mov
adc
xor
mov
fbstp
adc
jne
push
jbe
mov
pusha
imul
push
cld
repz
fdivs
scas
inc
sub
xorb
xchg
push
add
mov
mov
push
test
adc
inc
push
out
out
pop
push
mov
cmp
incb
leave
fwait
xchg
fs
outsb
push
std
sbb
in
jnp
push
lret
mov
cmp
pushf
shlb
adc
stos
xor
push
inc
imul
test
scas
hlt
cmpb
sbb
fnsave
or
in
sub
ja
push
aas
imul
and
push
push
out
imul
lret
adc
jle
mov
sbbb
mov
and
dec
pusha
out
sbb
push
insb
das
mov
jbe
cmova
dec
outsb
daa
sbb
insb
sub
pop
loopne
repz
jne
les
aad
sbb
sub
cli
cmp
ret
xor
sbbl
stc
sub
arpl
fwait
out
cld
push
ds
ret
dec
in
imul
andl
test
inc
push
sub
cmp
jg
rcll
ja
add
scas
test
shll
jl
pop
sbb
or
jae
dec
hlt
push
xchg
dec
xchg
mov
pop
sbb
dec
cmc
xrelease
cmp
push
mov
dec
lret
loop
imul
jns
cs
movsb
jne
jmp
idivb
insl
or
call
divb
ss
add
adc
ret
dec
jp
outsl
add
adc
xor
mov
stos
jl
sub
adc
sub
mov
cmp
xor
int
dec
icebp
fcmovnb
int3
nop
xchg
into
movsb
jmp
subl
cmp
inc
xor
or
movsb
xchg
aaa
mov
outsb
in
jne
lret
pop
and
fdivrs
fldt
sub
push
mov
lret
or
or
int3
pop
aad
cmpsb
dec
mov
out
fst
aad
or
sbb
or
into
mov
push
lret
push
push
clc
ret
push
fcmove
push
nop
in
fidivrl
cmp
in
push
scas
ret
pop
call
leave
or
xorb
dec
outsb
mov
pop
xchg
mov
cmp
dec
aad
negb
inc
or
jb
sub
mov
shr
arpl
stc
push
pop
mov
adc
xor
mov
stc
add
ljmp
cmp
xchg
xchg
leave
jl
mov
inc
xchg
arpl
fcoml
test
in
scas
adc
lahf
enter
lret
xor
movl
addr16
mov
mov
sub
test
lds
ss
movsb
fwait
lret
arpl
jae
cmp
test
mov
xchg
fsubrs
xor
jl
jl
js
xor
jmp
cmpl
push
xchg
test
adc
popf
outsl
out
add
jne
in
xchg
or
xchg
pop
or
pop
cmpsl
mov
mov
ret
and
xchg
cmc
int3
push
loope
pop
lret
dec
fildl
ret
mov
fcoms
hlt
imul
sub
xor
sbb
dec
xchg
inc
pop
jge
cld
pop
cmpsl
dec
inc
aas
add
mov
cmpsl
or
add
lea
pushf
and
in
adc
insl
je
mov
inc
mov
sub
int3
loope
cld
lahf
dec
push
push
aas
insl
jmp
pop
je
pop
push
aad
mov
add
pop
mov
je
adc
add
rol
nop
and
xchg
dec
xchg
jl
inc
repz
insb
shr
js
sbbb
push
ror
mov
adc
in
sub
xchg
scas
imul
pop
push
gs
in
movsb
sti
mull
sub
sti
mov
cmp
in
jae
repz
call
cmovno
stc
out
sub
in
adc
sbb
in
fwait
pop
dec
adc
mov
insb
pop
pop
sbb
pusha
dec
imul
sbb
sub
hlt
inc
rcl
jp
adc
sub
jmp
push
xchg
add
data16
add
inc
push
stos
xorl
leave
sbb
movsb
sub
sahf
andb
test
sbb
xchg
cltd
loopne
mov
push
dec
cmp
or
in
mov
mov
pusha
push
xor
cli
ljmp
pushf
aaa
xchg
add
in
test
sub
xchg
sahf
push
mov
int3
mov
imul
cld
jg
mov
std
adc
lods
rcl
fisttpl
add
scas
mov
stos
out
and
push
mov
daa
push
popf
jmp
pop
dec
lret
data16
test
mov
hlt
pop
lret
aas
jnp
sub
cltd
test
pop
jp
ds
cltd
mov
mov
fs
inc
sbb
fisubrs
or
popf
daa
jae
push
inc
pop
fstl
mov
fucom
add
in
stos
dec
mov
repz
mov
cmpb
or
xor
and
sbb
ror
push
or
test
outsb
loope
jl
lock
movsb
and
inc
dec
add
lea
test
imul
mov
out
pusha
sbbl
and
xor
sbb
mov
gs
mov
adc
xor
mov
adc
cmp
mov
mov
mov
roll
cmp
mov
push
lahf
add
lcall
out
or
or
lods
dec
test
dec
imul
mov
in
das
jbe
icebp
cltd
rep
lret
je
mov
sbb
push
pop
push
pop
cmp
jne
lock
mov
inc
push
jle
xor
test
inc
jmp
lret
mov
test
xchg
inc
lds
jnp
inc
mov
fmul
dec
sub
jb
mov
rolb
in
pusha
daa
sbb
les
xchg
add
aaa
push
adc
pushl
xor
sub
dec
or
push
test
popa
mov
mov
mov
dec
sbb
stos
mov
cwtl
mov
movsl
and
aaa
imul
sbb
shrl
sub
cmp
push
cmc
xor
cli
imul
dec
inc
push
cmp
cld
pop
xchg
mov
je
shlb
push
xor
and
xor
jl
ficompl
or
xor
fidivrs
psrlw
dec
mov
or
sub
arpl
mov
and
xchg
push
mov
pop
sbb
insl
in
inc
pushf
xor
scas
xor
xchg
in
jmp
test
mov
jbe
stos
shrl
cs
jmp
push
adc
pop
cmp
aad
ss
jecxz
out
aaa
test
shlb
hlt
sub
in
cmpsl
lock
pusha
add
in
sahf
adc
xchg
fldl
sbb
out
pop
or
ja
insl
xorl
jle
lods
adc
and
inc
sbb
push
popa
rorb
pop
js
adc
inc
out
jbe
into
xor
adc
jmp
jmp
xchg
mov
int
bound
scas
aam
or
jno
jb
jmp
pop
sarl
xchg
stc
push
or
mov
mov
into
test
sar
mov
pop
sahf
sbb
cmp
in
js
mov
call
or
pusha
fs
ret
push
stc
xor
jmp
xchg
xchg
rorb
sub
bound
sub
fwait
xchg
xchg
loop
mov
dec
addb
hlt
mov
clc
adc
rcl
push
fidivrl
cmc
mov
xor
fdivp
xchg
repnz
or
int3
sbb
adc
ss
imul
mov
ss
and
pop
dec
int
mov
hlt
movsl
sub
in
pop
inc
out
scas
pop
fsubs
cmpsl
imul
inc
mov
scas
in
ljmp
fdivrs
or
and
andb
xchg
cs
jp
out
push
vpxor
mov
pop
pop
sbb
jp
sbb
test
cmc
scas
add
xchg
subb
ret
jge
hlt
std
dec
ljmp
jg
setno
jle
outsl
js
sub
mov
sti
mov
scas
mov
hlt
push
fwait
bound
mov
adc
rcrl
and
out
and
pop
test
je
cmp
mov
ja
aaa
sub
into
mov
xchg
adc
test
pusha
outsb
jns
into
inc
push
stc
je
mov
dec
fidivs
pop
das
nop
sub
mov
push
nop
jl
cwtl
int
or
negl
je
shll
jl
sub
xchg
jmp
dec
push
movsl
jle
daa
adc
outsb
xchg
test
add
lea
icebp
outsb
xor
push
sbb
cmc
fcmove
mov
dec
push
ljmp
imul
mov
cmpsb
sub
adc
sbb
out
stos
cmp
jne
mov
inc
xor
or
mov
fwait
push
mov
and
or
cld
pushf
lods
cmpsl
jle
adc
subb
pusha
cmp
push
and
dec
mov
subl
sub
mov
stos
push
jne
pop
inc
cli
shr
popa
int3
xor
xchg
add
jmp
shl
xlat
jl
bound
flds
test
cmp
mov
xchg
fs
or
and
adc
jbe
std
sahf
sub
in
inc
mov
and
sub
mov
pop
test
ret
cmp
sbbl
gs
mov
xchg
jns
mov
sti
es
adc
sbb
mov
clc
aas
push
mov
mov
mov
mov
lea
into
mov
sti
subb
or
mov
inc
aam
sbb
addr16
in
aam
jge
outsl
shlb
or
cs
cld
ss
xchg
cvtdq2ps
push
scas
stos
fsts
es
push
push
jne
jg
out
dec
data16
popf
scas
lret
push
xor
mov
movsb
insb
mov
mov
cli
jo
inc
test
je
push
bound
mov
jg
cmc
cmp
jl
outsl
pusha
cwtl
mov
inc
pop
dec
dec
outsl
sbb
mov
out
addb
fcomip
and
dec
mov
push
cmp
dec
ds
mov
jmp
subl
jecxz
ret
das
les
ss
cmp
jecxz
cmp
jne
scas
add
clc
enter
notb
cmp
inc
mov
or
adc
stos
fidivrl
add
int3
shr
lret
test
inc
nop
lcall
mov
out
lods
inc
xchg
or
ficompl
iret
mov
pop
shl
pop
js
dec
cwtl
dec
rorl
mov
xor
xchg
inc
lcall
jge
mov
pop
mov
push
cmp
shrb
xchg
sbb
dec
xor
or
sub
aad
and
ds
adc
repnz
ror
inc
mov
and
jnp
lcall
mov
not
cmp
or
cli
nop
mov
xor
inc
push
aam
rolb
das
add
stos
sbb
andl
xchg
adc
xor
outsl
sbb
sub
mov
adc
pop
fisttps
fcomp
pop
jno
sbb
hlt
inc
add
test
das
pop
ljmp
and
stos
das
cltd
add
dec
iret
pop
stc
mov
push
mov
rol
cmp
ljmp
outsl
inc
cmp
shll
movsb
dec
jne
jge
xchg
cmp
cmpsb
out
sub
cwtl
sbb
rsm
xchg
cld
into
mov
dec
pop
es
pop
or
inc
push
xlat
inc
aad
rcrb
inc
dec
xlat
jmp
enter
fistps
dec
sbb
popf
and
dec
mov
movsb
addb
cmpsb
mov
jmp
mov
loopne
mov
jg
sub
sub
cmpsl
in
roll
dec
scas
ss
xchg
aad
jmp
lea
lods
mov
js
dec
fimull
push
dec
mov
pusha
out
gs
sbb
popf
jmp
das
push
insl
cmp
stc
fwait
das
shrb
scas
push
cmc
push
mov
jno
movsl
and
and
jnp
xor
nop
push
aas
mov
dec
jg
xchg
dec
sub
or
push
test
mov
pop
ret
insb
jb
mov
pop
mov
xor
push
pop
cld
xchg
insb
mov
mov
lahf
gs
test
out
push
pop
pushf
mov
test
mov
xor
in
sub
xchg
arpl
sbb
fildll
testb
dec
sub
stos
shll
push
sub
dec
sbb
cmp
jne
xchg
xchg
dec
jp
test
cmp
push
mov
or
pop
gs
addr16
mov
pop
mov
out
push
fucom
sbb
jmp
inc
ficompl
incb
cwtl
add
imul
xchg
ret
push
clc
cmc
jmp
add
lock
adc
cwtl
mov
mov
and
bound
inc
push
jmp
cmp
mov
jnp
xchg
add
cltd
loope
shrl
fcompl
pushl
sub
sbb
adc
push
sub
jmp
out
rclb
aaa
mov
inc
pop
xor
out
sub
lret
jns
xchg
pop
es
call
mov
test
int3
xchg
std
sub
xor
mov
xor
ret
inc
out
mov
push
add
cmp
out
pushf
xor
mov
lret
xlat
inc
lock
jecxz
add
test
out
fdivs
aam
loope
dec
mov
cmpsb
jns
pusha
xchg
cwtl
movsb
subl
cmpsb
in
push
repz
and
in
ret
xchg
and
outsb
jg
xchg
cmp
or
enter
jl
lods
xor
or
dec
fistps
mov
mov
push
aaa
mov
rorb
insb
pop
inc
data16
mov
mov
movsl
adc
mov
mov
lea
lahf
inc
std
fdivrl
jl
out
jno
inc
add
nop
loopne
inc
xor
dec
jbe
add
nop
and
lret
inc
pop
push
and
jno
fs
add
push
dec
cli
dec
popf
popa
das
inc
stos
push
imul
fisttpll
cmp
sub
mov
jo
arpl
or
sbb
mov
lahf
sub
jnp
xor
or
lret
and
pop
clc
lock
or
or
popa
jbe
pop
sahf
fisttps
bswap
jne
sub
sbb
cmp
cmpsb
aaa
fwait
mov
mov
dec
sub
sbb
loop
js
or
xchg
repz
test
add
data16
insl
mov
popa
repnz
mov
xchg
jo
pop
jno
or
push
gs
outsl
dec
or
dec
mov
mov
pop
arpl
sbb
movsl
lret
xlat
jmp
lock
fsubl
mov
mov
lahf
mov
in
xor
xchg
movsl
sub
pop
pand
int3
push
dec
and
loopne
sbb
test
aas
popa
call
test
fistps
push
xchg
xor
mov
jns
pop
push
sub
shrl
inc
in
fdivrp
arpl
repz
or
mov
loop
jg
aam
test
dec
fsubr
push
lret
inc
lds
aam
mov
mov
lods
adc
pop
loope
orl
cmp
xor
push
in
inc
shl
adc
or
dec
das
dec
notl
sbb
notl
shl
and
cmp
mov
push
pop
mov
iret
jge
das
jns
repz
imul
mov
and
mov
shlb
loopne
bound
stos
scas
cmp
mov
aad
arpl
sub
hlt
sar
sbb
cmp
daa
or
pushf
test
fs
or
xchg
sub
aam
testl
cmc
test
or
or
pop
pop
mov
sbb
pop
pop
lock
cmc
dec
pop
orl
sub
sbb
inc
inc
add
adc
lea
packuswb
adc
mov
ret
mov
rcrb
rorl
lods
add
loopne
shrl
jp
xchg
fwait
mov
xor
lret
rcr
rcrl
sub
push
mov
in
sbb
mov
mov
in
jno
sbb
in
cs
mov
inc
out
in
cmp
decb
cmp
mov
lea
pop
jae
aad
ja
stc
xor
mov
cmp
lock
push
fcompl
jp
mov
ss
aam
stos
inc
cmp
mov
sub
ret
cmp
xor
sahf
push
and
push
mov
in
sub
incb
cmpsl
jle
xor
xchg
sbb
ss
cmp
or
inc
cltd
sbb
cltd
add
jl
fidivrs
jecxz
push
or
fld
or
and
jmp
mov
jno
and
push
mov
bound
loopne
pusha
jo
cmp
push
fwait
and
pop
xlat
mov
or
movsb
push
out
sbb
insb
inc
pop
cmpsb
push
push
shlb
sub
dec
add
sub
add
sub
mov
es
ljmp
jns
fstpt
or
add
lret
stos
adc
mov
orb
jge
push
xor
sub
cmc
xchg
dec
jnp
andb
mov
push
xor
or
sahf
pop
leave
mov
pop
shl
cltd
popf
fistpl
icebp
lea
jle
scas
push
call
mov
mov
cld
mov
inc
push
rcll
sbbb
pusha
push
lods
stos
imul
dec
fstpt
arpl
xchg
mov
mov
aam
or
nop
lret
mov
pop
xchg
lods
sbb
mov
fistl
movb
pop
or
jle
push
sahf
pop
push
ja
xchg
xor
inc
int3
leave
gs
rcll
add
add
addr16
addr16
lret
call
iret
call
cmpsb
xchg
sti
mov
test
jno
hlt
fisubl
mov
mov
mov
mov
pop
xchg
pop
sbb
popa
sub
add
dec
out
xchg
jmp
cmpsl
mov
int
mov
sbb
mov
fs
ds
mov
xor
sbb
subb
pushf
fisubl
push
sahf
sti
dec
ret
xor
dec
and
push
cli
adc
loope
and
pop
clc
adc
cmp
aas
xchg
push
repnz
xor
xchg
iret
int
push
movntq
fdivl
push
dec
stc
pop
or
pushf
mov
push
out
out
jmp
jae
mov
mov
dec
push
push
mov
outsl
orl
xor
sub
popa
lock
mov
rcr
jg
fwait
add
shrb
imul
fidivrs
xchg
sub
imull
adc
sub
jne
adc
les
inc
cmpsb
pop
out
mov
jo
call
cmp
mov
mov
cmp
daa
ret
mov
ret
out
push
xchg
push
jb
int3
pop
ffreep
hlt
cli
rolb
addr16
mov
mov
lret
loop
enter
fwait
addr16
cmc
adc
loop
mov
lahf
pop
out
mov
lods
das
mov
int
pop
in
jne
bound
int
jmp
lods
mov
jmp
xor
xchg
scas
add
xchg
lea
rclb
cmp
adcb
lods
mov
data16
xor
pusha
xchg
add
loopne
rclb
loop
push
mov
fbstp
ret
dec
mov
xor
adc
dec
sbb
cmpb
adc
push
sub
xor
ss
or
dec
push
cmp
fildll
outsb
mov
orb
dec
out
rcll
sub
mov
mov
sbb
jnp
pop
notb
stos
enter
lret
xchg
add
or
hlt
push
call
cmc
daa
and
aam
xchg
popf
orl
daa
shll
cmpsb
imul
fs
lods
je
lcall
inc
imul
out
jns
push
inc
lods
jnp
imul
xchg
pop
in
xchg
dec
mov
mov
popa
cmpsl
mov
and
aaa
popf
jmp
xchg
adc
mov
fstpt
aam
adcl
cmpsl
jecxz
add
fwait
sub
or
inc
and
inc
test
pop
test
push
and
ss
gs
inc
test
shll
jns
cli
and
nop
jl
jo
cmp
sub
testl
in
or
es
cli
mov
and
pop
cmp
aas
neg
shlb
prefetchwt1
fsubs
clc
xchg
cmp
jb
or
sbb
out
lock
adc
aad
outsb
dec
leave
push
mov
popa
push
in
aas
add
iret
add
test
in
sub
cmpb
mov
ljmp
lret
cmp
rcl
daa
dec
mov
or
jmp
push
sub
int
cmpsb
push
lea
roll
lods
loop
inc
lea
sbb
into
jg
ljmp
test
pop
lods
int
push
sub
js
adc
aaa
cmpsl
jp
sub
ss
ds
hlt
pushf
cmp
popa
xor
inc
into
fwait
cmp
cmp
enter
jbe
bound
dec
push
jo
scas
test
jle
mov
jb
xchg
outsl
mov
roll
mov
and
je
nop
lods
xor
pop
adc
and
mov
out
cmpsb
and
cmpsl
insl
jne
cs
add
sti
sub
test
and
lret
insl
ret
xor
addb
jmp
cmp
rcrl
jno
imul
cwtl
aaa
data16
sub
shlb
iret
xchg
or
mov
out
movsl
dec
cwtl
jb
lods
push
inc
cmpsb
jle
mov
add
js
push
mov
fdivr
pop
mov
sbb
fisttps
cmp
rcr
dec
clc
mov
js
in
mov
sbb
or
inc
ljmp
fsubrl
mov
jle
cmp
out
repz
pop
stos
jno
aam
ja
mov
ja
lret
jae
notl
cmc
pop
xchg
movsb
fmuls
sahf
mov
mov
and
push
inc
sbb
cmp
cld
movb
bound
mov
dec
leave
ja
dec
adc
in
adc
shll
xorl
inc
lret
rcrb
mov
push
addb
lret
fidivl
nop
loop
or
pop
fbld
pop
daa
mov
adc
push
daa
jmp
imul
mov
ret
and
xchg
ret
mov
sub
ljmp
aas
mov
aad
cli
mov
cld
cmp
mov
xchg
and
xchg
xor
mov
mov
add
push
bound
repz
add
ds
inc
inc
div
repz
test
lret
call
inc
movsb
shlb
and
xor
and
adc
jne
mov
xor
mov
insl
push
cwtl
cmp
iret
cmp
xor
xor
pop
addb
add
rcll
enter
int3
inc
push
mov
cld
and
sti
fimuls
inc
mov
adc
xchg
lret
test
scas
inc
movsb
repnz
pop
js
add
sbbl
xor
cltd
sar
icebp
mov
xchg
jno
subb
mov
sbb
inc
xorb
roll
or
sub
pop
icebp
dec
sahf
adc
jno
fstpt
cmp
fstpl
jmp
icebp
xor
sub
mov
jne
push
jecxz
mov
mull
inc
cmp
leave
movsb
popa
mov
aam
cmp
movsb
shlb
sub
ja
jnp
test
fcomps
pop
or
jmp
add
xchg
hlt
stos
sbb
adc
mov
sbb
int3
jg
jp
inc
cmp
add
jg
hlt
dec
mov
outsb
movsb
loopne
sahf
adc
les
pop
cmp
pop
sub
or
mov
lcall
mov
add
mov
jae
arpl
inc
sub
dec
add
fcomps
incb
int
mov
ret
dec
repz
subl
popf
push
sbb
jbe
or
movsb
dec
inc
test
dec
adc
pusha
mov
inc
cmp
or
push
or
and
pop
aaa
cmp
pop
xor
cltd
ja
addr16
push
pop
or
clc
loopne
jmp
sbb
lret
pop
mov
fcomps
sbb
adc
pop
or
or
mov
lods
and
sub
jbe
pop
popf
adc
xchg
mov
xor
push
jg
dec
fimull
adc
and
not
sub
and
adc
and
dec
adc
sub
enter
and
ret
iret
cld
xchg
xchg
pop
mov
insl
xchg
mov
cmpsl
repz
in
aam
jns
mov
mov
repz
jl
cltd
and
adcl
pop
mov
jmp
inc
jp
lcall
pusha
rcrb
mov
lcall
jg
xchg
repnz
inc
push
sub
xchg
in
jge
out
ds
xor
jns
stos
dec
in
out
mov
aaa
js
cmp
adc
and
mov
xlat
push
shll
lds
imul
mov
mov
aas
scas
sbb
jecxz
xor
jns
arpl
lcall
sbb
je
fbstp
jmp
js
cwtl
add
popf
sbb
fnstsw
daa
or
lcall
sub
add
pop
sub
mov
sub
cmc
sarb
or
mov
cli
mov
stos
daa
mov
cmp
add
stos
cltd
icebp
pop
push
add
push
jbe
dec
mov
scas
imul
lret
sub
pop
arpl
test
jmp
jb
push
push
decb
in
fiadds
pop
sbb
mov
xchg
mov
ret
add
out
adc
mov
js
xlat
jbe
scas
jb
ret
xchg
jecxz
fcmovb
filds
popa
mov
adc
xor
xchg
mov
leave
dec
adc
cld
dec
mov
es
sbb
cmp
insl
frndint
dec
ss
push
adc
in
or
movsl
or
fs
rcrb
dec
int3
pop
lea
mov
xor
mov
nop
and
dec
fisubl
js
aad
rcrb
mov
mov
mov
pop
lock
jnp
cmpsl
aas
cmpsb
mov
sub
xorl
jno
mov
add
sub
jbe
shll
icebp
push
mov
mov
dec
mov
push
test
loopne
mov
push
ljmp
push
sbb
sbb
fdivr
ss
xor
in
into
fdivl
or
das
xor
insl
rcl
or
imul
lea
insl
rcrb
arpl
adc
add
jge
sub
jg
stc
pop
fwait
cwtl
dec
sub
add
jne
mov
je
aad
xchg
mov
or
je
mov
xor
adc
pop
jle
fdivl
cmp
mov
and
out
sbb
test
bound
mov
pop
lock
sbb
push
xchg
lods
mov
lods
xor
ja
les
adc
xor
test
mov
adc
fnstsw
dec
xchg
data16
cmp
mov
popf
out
xlat
add
xor
fidivrl
out
jae
xlat
add
xchg
dec
cmpsl
mov
clc
jmp
imul
mov
pop
jmp
insl
push
sbb
popa
les
stos
xchg
adc
stos
inc
pop
inc
mov
and
stos
lcall
out
mov
data16
sti
push
jmp
pop
sub
sti
or
sbbl
das
push
jno
adc
sub
ret
outsl
pop
cmp
loope
adc
xorl
adc
das
jge
xor
mov
or
lock
jle
mov
xchg
mov
dec
repnz
add
mov
ja
xor
push
add
pop
push
sbb
rorl
ljmp
add
xchg
inc
ljmp
jmp
into
pop
xchg
imul
fwait
dec
sbb
lret
jb
pop
mov
lock
and
gs
shlb
subb
adc
daa
jge
dec
in
in
aaa
fwait
mov
mov
cli
xchg
je
pop
negl
aaa
cmc
dec
lret
cli
xor
repz
mov
or
mov
iret
jae
scas
aas
add
imul
repnz
add
iret
gs
mov
lea
mov
push
or
cwtl
cmp
inc
mov
xchg
mov
ds
out
mov
mov
jbe
std
out
sti
stos
loop
jne
sahf
lock
imul
pop
popa
pop
sub
or
sarb
popa
jle
mov
inc
ret
cmp
sub
mov
dec
es
cwtl
out
add
jbe
dec
sbb
orb
js
and
or
push
lcall
jl
jno
inc
xor
repz
push
stc
cwtl
and
mov
ja
fmull
add
bound
movsl
cltd
lahf
inc
enter
adc
insb
cmpl
repnz
ret
cmp
in
xchg
pop
js
dec
cmp
xor
movlps
and
stc
sbb
or
cmp
stos
push
or
das
inc
jnp
lock
jbe
das
ja
pop
lods
loop
and
add
push
sbb
xchg
sub
xchg
xor
or
add
clc
jne
leave
add
into
mov
std
push
repnz
cmp
test
out
leave
mov
arpl
inc
pop
mov
into
mov
roll
or
imul
sub
mov
cld
cmp
movsb
ljmp
jnp
sub
in
pop
and
outsl
mov
fistl
jno
pop
fstpt
mov
push
cmp
mov
lret
insl
jl
push
mov
mov
jbe
xchg
adc
in
call
in
push
dec
push
xchg
les
aaa
mov
enter
inc
in
mov
aam
mov
jmp
or
leave
inc
cs
add
sbb
push
and
or
movsl
jp
cmpsl
pop
fwait
mov
adcl
outsl
repnz
or
mov
pop
mov
sub
ds
xor
jbe
cmp
or
std
ja
ja
xchg
mov
mov
faddp
popf
xchg
and
push
outsl
dec
jge
jae
fmulp
fcom
aaa
jne
mov
fistl
pop
jle
xor
icebp
xchg
ljmp
rcll
jne
call
jo
cmp
fsts
cmp
cmp
sbb
sbb
jl
dec
and
std
cmpsb
mov
movsb
pop
and
inc
dec
or
bound
daa
cmpsb
jb,pn
jne
jge
mov
xor
and
flds
sahf
mov
lahf
cmp
inc
imul
inc
aam
sub
and
cmp
and
pop
lcall
test
inc
lahf
pushf
or
test
ror
in
and
shll
mov
loope
sub
pusha
pop
adc
adc
mov
and
mov
mov
cmp
out
adc
xchg
mov
loope
jg
mov
mov
sub
and
loop
data16
sub
subb
test
jne
xor
shlb
loope
jne
xchg
enter
sbb
cwtl
fcomps
xlat
push
xlat
add
xchg
sbb
xchg
jbe
idivl
pop
frstor
lods
mov
lret
or
mov
cmp
fdivr
in
daa
sbb
jmp
mov
sahf
fnstenv
lods
inc
inc
jno
addl
mov
repz
dec
mov
mov
push
lahf
inc
test
xchg
sbb
push
xchg
sahf
arpl
loope
mov
mov
mov
aad
testb
ljmp
fucomp
data16
sbb
subl
mov
adc
leave
push
or
jne
or
shll
je
dec
xchg
cmp
sub
inc
inc
jnp
inc
sub
and
mov
sbb
lret
cli
and
add
xor
xor
in
pop
cmp
or
and
sbb
scas
xchg
stc
andb
addl
sahf
pusha
or
jae
lea
xchg
inc
mov
add
dec
pushf
jno
jl
fsubrs
and
outsl
pop
mov
mov
aam
test
adc
mov
push
jo
ja
dec
sbb
mov
mov
mov
jne
decl
and
mov
cmpsl
jne
dec
pop
mov
ret
icebp
js
xor
push
cltd
scas
sub
shr
repz
aad
iret
mov
testb
pop
std
ljmp
jno
scas
or
sar
fs
mov
inc
mov
xor
mov
inc
out
insb
loopne
aam
addl
scas
test
lods
jg
aad
xor
mov
mov
ret
and
mov
in
xchg
adc
insb
push
das
outsb
out
nop
inc
and
xlat
push
repnz
xlat
bound
pop
test
pop
ret
sbb
dec
push
sahf
push
inc
leave
mov
mov
mov
or
cmp
ljmp
aas
movsb
mov
fisttpl
xchg
mov
cmp
jo
xor
or
dec
fnsave
add
or
or
sbb
push
ds
dec
sub
xlat
std
push
fidivrl
lcall
xchg
sbb
jmp
add
leave
adc
pop
xor
ljmp
addr16
cwtl
cmpsb
push
stos
inc
filds
cmp
testb
push
dec
xchg
jne
fsubp
push
popa
outsl
xchg
xchg
jmp
inc
mov
cmp
mov
imulb
loopne
ret
movsb
jp
jmp
nop
fs
xor
cmpsl
sbb
clc
ret
pop
xchg
lcall
push
or
pause
mov
imul
pop
je
cltd
fnsave
inc
and
and
icebp
xchg
movsl
jae
jmp
out
aaa
mulb
mov
out
inc
add
cmp
call
loop
flds
sub
int
pop
mov
add
adc
leave
sbbb
outsl
cmp
and
cld
pusha
aas
sub
push
int3
ret
cmp
pop
pop
xor
rclb
xchg
bound
dec
mov
jne
push
sub
jecxz
outsb
mov
enter
cmp
dec
fidivrs
cltd
dec
ror
push
fst
test
push
mov
pop
and
in
test
mov
jge
dec
xchg
inc
adc
fidivrl
jbe
cmpsl
sbb
mov
popfw
mov
sub
aam
mov
adc
jns
inc
mov
inc
dec
in
adc
ret
gs
mul
fsubrp
mov
sbb
mov
aaa
adc
mov
stos
in
adc
mov
xchg
std
sti
adc
sbb
jge
xorl
mov
cmpsb
xchg
cmp
cmp
mov
andb
out
mov
or
mov
testb
or
lods
xor
sbb
cmp
sub
xchg
ds
and
data16
out
iret
loope
popa
adc
fdiv
mov
pop
xchg
pop
jns
lea
pop
lret
repz
xchg
mov
test
or
repz
scas
pop
leave
mov
adc
fcompl
mov
mov
ficomps
jge
lock
dec
fcompl
hlt
test
lahf
or
mov
out
dec
dec
dec
xor
imul
jecxz
pop
jecxz
lea
pop
lcall
add
jmp
mov
ss
xor
push
mov
in
cltd
imul
repnz
ja
popa
ficoms
cli
mov
in
leave
mov
arpl
in
cmc
lods
stc
test
cmp
mov
test
data16
jae
das
clc
jo
les
loopne
daa
mov
adc
je
mov
fsubrl
aas
xor
cmp
hlt
out
lahf
mov
repz
jns
inc
push
stc
fsubrl
fcompl
lret
adc
xchg
inc
ds
cltd
loopne
sub
mov
cwtl
or
sbbl
jmp
cmc
scas
sbb
sub
pusha
sbb
and
pop
push
cmpsb
xchg
cli
xchg
sbb
shrl
loopne
and
jno
jne
shl
in
in
fwait
mov
stc
sti
repnz
pop
xor
fcmove
mov
gs
cmp
adc
hlt
scas
imul
scas
push
mov
test
out
sub
sbb
js
dec
mov
fisubl
sbb
mov
dec
clc
fucomp
mov
hlt
or
test
repnz
lcall
jbe
sbbl
push
dec
test
jo
sbb
adc
lock
decl
push
cwtl
mov
fwait
ret
mov
outsb
and
sub
in
cmp
inc
sbb
ljmp
or
out
mov
push
mov
faddl
jns
push
cli
mov
inc
ret
jl
int3
popa
and
inc
test
push
repnz
aaa
or
stc
test
leave
add
int
mov
les
loopne
decl
jmp
add
jae
mov
jp
cmovp
mov
aas
ret
into
loopne
scas
rcrl
js
pop
fcmovbe
xchg
gs
cmp
mov
push
fcompl
lods
cltd
test
inc
pop
fmull
outsl
cmp
jno
fs
push
dec
add
aam
mov
int3
int3
inc
sub
scas
cs
stos
jne
mov
outsb
ret
jmp
es
lds
test
inc
outsb
push
mov
lods
cltd
int3
movsb
cmp
es
pop
nop
sub
icebp
sub
ret
cmp
add
rcr
movsb
ljmp
insb
cmp
cmp
addb
hlt
pop
sub
sub
inc
data16
fiaddl
or
or
sar
sub
gs
dec
add
rcr
push
push
xor
es
nop
movaps
sub
imul
mov
inc
outsl
mov
jl
xor
and
push
ror
adc
or
data16
push
jo
cld
jp
dec
repz
scas
jge
in
aaa
pop
shlb
sbb
sub
sarb
inc
imul
imulb
mov
inc
mov
test
pop
inc
inc
cs
aaa
xchg
shll
scas
movsb
sbb
and
movsb
icebp
repnz
mov
pop
mov
xchg
ret
fists
mov
call
mov
pop
aam
roll
push
xchg
mov
inc
roll
popw
rorb
lods
sub
inc
add
xor
inc
sub
repnz
dec
inc
mov
int3
ret
cli
ret
push
add
lret
cli
mov
mov
pop
mov
inc
ljmp
and
out
call
dec
mov
xchg
shll
push
sbbl
jo
fdivs
stos
sbbl
ljmp
leave
adc
test
push
jae
fwait
cwtl
xor
cmpsb
cmc
and
hlt
cmp
in
scas
or
pop
in
sub
mov
test
mov
aad
push
ret
ljmp
jp
mov
mov
sar
sahf
cmp
nop
lret
lcall
push
lcall
push
push
sbb
mov
push
loopnew
addr16
adc
repnz
out
out
sub
pop
mov
add
das
movsl
call
aam
xchg
cmp
cmpxchg
shlb
cmp
data16
repnz
add
xchg
xlat
or
test
fidivrs
enter
mov
stos
rclb
popf
movsb
pop
sbb
xchg
push
and
xchg
into
add
cltd
lea
roll
xor
mov
mov
out
push
test
popa
xchg
in
inc
pop
cld
pop
adcb
sbb
jno
add
je
call
and
lea
movsb
outsb
sub
mov
adc
mov
fcoml
add
rcll
ror
lods
rep
or
ret
gs
mov
pushf
ret
sbb
dec
outsb
arpl
lahf
cli
push
pushf
loopne
mov
sub
push
mov
repz
mov
pop
int3
stos
out
mov
lcall
sbb
or
setge
push
lret
ss
pop
stos
out
inc
roll
sarb
push
cmpsb
in
dec
xchg
loopne
loop
pop
push
jp
dec
cwtl
xor
or
pop
std
lock
std
daa
cmc
add
jecxz
jl
orl
daa
insb
pop
xchg
xor
mov
and
sub
pop
mov
test
es
icebp
outsb
ss
cmpsl
sub
sbbl
jge
add
adc
mov
mov
mov
ljmp
xor
pop
jge
mov
or
int
pop
cmpsl
out
std
or
mov
pop
mov
push
or
jae
adc
mov
scas
push
or
xchg
ret
xor
add
div
ds
and
mov
mov
push
lahf
add
xor
cltd
dec
jbe
idivb
jae
loop
cmp
dec
push
roll
add
mov
lods
sbb
pop
jo
lods
mov
es
faddl
and
aaa
shll
and
test
jns
loopne
cmpsl
fwait
mov
cmp
dec
or
in
and
ljmp
and
push
cld
inc
bound
inc
xor
outsl
pushf
es
mov
add
aaa
jo
nopl
fstpl
fnstenv
in
loope
jle
fldenv
lods
test
pop
or
pop
adc
push
cmpsb
sbb
and
sbb
mov
xor
mov
cmc
adc
or
xchg
test
cmpsb
sub
test
and
popf
sbb
out
sbb
push
fistpl
inc
aaa
push
xchg
dec
aaa
or
dec
je
inc
xchg
pop
inc
test
inc
mov
hlt
call
dec
in
stos
push
push
mov
cld
mov
in
xchg
fptan
cmc
pusha
call
mov
aam
out
movsb
or
stc
pop
xor
sub
or
fldt
jp
leave
dec
iret
fimull
adc
repz
cmpsb
movb
ss
lcall
subb
mov
lret
inc
jbe
mov
adc
fcoml
leave
xor
out
xchg
or
jg
aam
xor
cmpsb
jae
add
test
ja
dec
loope
in
pop
mov
dec
lea
imul
sbb
push
push
xchg
sti
shrb
mov
push
inc
sub
jecxz
cmp
sbb
mov
xchg
stc
push
fiadds
xchg
lahf
sbb
sub
jnp
test
xor
loope
cmp
xchg
cld
ljmp
rorb
jo
aaa
call
xchg
pop
out
dec
les
push
imul
test
loope
lods
insb
sub
std
dec
and
cmp
int3
jmp
mov
lcall
or
imul
movsl
bound
sbb
ftst
cmp
out
iret
push
std
xor
jb
pop
adc
adc
mov
cmpl
push
xchg
xor
enter
cwtl
test
rcr
xor
push
sahf
das
pop
jge
dec
or
in
xchg
cwtl
pop
pop
fisttpl
mov
cmp
mull
stc
popf
ds
cmp
es
inc
dec
mov
jbe
out
cli
pop
xor
lods
repnz
inc
pop
lods
adc
cmpsl
adc
aaa
stos
scas
and
dec
je
dec
xchg
js
das
fnstenv
mov
cmpsb
cmp
shlb
xchg
dec
pop
fidivrs
jl
test
stos
pop
or
pop
mov
xor
and
push
pop
cmc
test
push
filds
pop
out
insb
cltd
das
hlt
inc
loop
sahf
fidivs
xor
leave
mov
mov
add
ret
in
push
xor
fildl
mov
ljmp
mov
fwait
cmp
sub
jne
cmc
xchg
test
sti
jle
addr16
mov
in
jp
pop
je
lahf
jmp
popf
cltd
dec
rcr
scas
mov
dec
mov
push
jb
test
add
lea
mov
push
pop
xchg
clc
movsl
pop
sbbl
cmp
xchg
sub
test
sub
fwait
push
sub
imul
or
lods
rcll
mov
movsl
jae
les
cmpsb
sahf
cmp
xor
mov
dec
mov
ret
xor
push
sbb
cmpsl
adc
push
mov
jmp
in
adc
pop
jbe
xchg
movsl
out
daa
lcall
mov
or
shrl
icebp
sub
mov
push
mov
faddl
cmp
negb
mov
clc
add
int
pop
pop
leave
pop
inc
jmp
pop
add
adc
xorl
rclb
jne
cli
fidivs
push
or
cli
add
stc
hlt
shr
hlt
push
lods
je
sbb
lods
aam
xchg
sub
stos
adc
xchg
mov
sarb
scas
sbb
push
push
or
sbb
aas
mov
pop
cltd
scas
dec
push
adc
icebp
mov
sub
and
adc
cmpsb
cli
mov
mov
jns
xchg
cld
in
inc
pop
test
push
mov
add
imull
pop
outsl
add
and
je
iret
iret
mov
imull
cmp
out
or
sub
and
inc
clc
and
jnp
xchg
mov
movsb
test
fsubrl
call
stos
dec
xor
adc
mov
into
dec
fildll
sbb
jbe
decl
sub
mov
jecxz
add
adc
stos
sahf
adcb
or
xchg
jge
mov
orl
fwait
dec
cld
xlat
mov
imul
in
add
jbe
pop
les
inc
aad
fstpl
inc
dec
sbb
pop
dec
out
pushf
add
cli
mov
mov
adcl
shlb
cmp
cmp
xchg
mov
lods
xchg
rorl
inc
cmp
arpl
insb
test
pop
mov
fstps
pop
fdiv
sar
adc
ret
aam
icebp
or
sbb
cmpsl
sub
in
push
xchg
lds
adc
and
xchg
sahf
mov
jp
test
icebp
repnz
dec
inc
sbb
pusha
das
in
pop
mov
mov
stos
mov
dec
mov
test
jp
xlat
dec
mov
xor
je
mov
in
sub
sub
arpl
cld
cmp
jb
inc
sub
mov
xchg
adc
dec
sbb
adc
adc
sub
xor
sbb
jne
dec
mov
unpcklps
int3
mov
inc
sti
cwtl
out
xchg
sti
sbb
mov
lods
scas
sti
pop
or
inc
add
jae
pop
lcall
xchg
in
mov
std
push
in
out
add
subb
cmp
xor
mov
dec
loopne
push
add
pop
repz
iret
pushf
enter
xchg
pop
inc
pusha
mov
fdivrs
clc
sbb
push
call
mov
sbb
push
pop
jae
mov
enter
testl
jae
xchg
sbb
push
adc
cs
test
mov
outsl
jne
js
ds
push
inc
jno
in
je
sahf
leave
xorb
jne
outsb
call
jecxz
sbb
mov
shlb
pop
shl
jns
cmpsb
add
xchg
push
sub
test
pushf
xor
ds
ret
jno
lahf
jnp
arpl
rcll
push
test
push
and
stos
in
mov
std
mov
addl
pop
scas
lret
mov
psubq
sub
lahf
xchg
into
scas
and
outsb
aas
in
and
das
xor
repnz
or
push
sbb
push
mov
pop
lret
loopne
or
push
mov
push
inc
push
test
sbb
loop
loopne
push
call
arpl
shlb
negb
popa
jo
or
add
fldcw
daa
es
mov
xor
aad
mov
sbb
mov
inc
dec
adc
pop
add
cs
xor
xor
adc
push
inc
call
inc
imul
pop
shlb
into
in
orb
inc
lods
shrb
jo
pop
enter
pop
pop
jo
add
jl
sbb
jecxz
add
outsl
lret
lds
jge
push
mov
sbb
shll
rorl
jg
jle
lods
fsin
aas
scas
movsb
loope
push
xchg
leave
iret
push
test
cmp
fsub
adc
inc
cmp
mov
fs
and
mov
jno
repnz
jb
adc
movb
push
jb
pop
push
sbb
nop
leave
test
mov
xchg
test
je
sbb
insl
bndldx
mov
ficomps
push
inc
and
aas
pop
xlat
out
sbb
push
in
push
inc
mov
jnp
mov
lods
fidivl
in
ja
out
push
inc
les
jae
jb
xchg
leave
inc
iret
aaa
add
add
les
and
sub
sbb
lret
jns
sbbl
iret
out
insb
adc
dec
or
lcall
out
xor
jb
mov
icebp
data16
push
xchg
adc
pop
rcll
movl
test
inc
hlt
repnz
adc
push
je
stos
jno
pop
hlt
cld
sbb
dec
into
je
popa
dec
xchg
out
mov
imul
push
mov
insl
and
lahf
enter
adc
cmc
push
aaa
outsl
jns
and
xchg
push
mov
mov
inc
in
loop
push
sbb
dec
xchg
sub
xlat
imul
add
sbb
movaps
jle
or
arpl
divl
test
js
pop
adc
adc
aad
jns
xchg
gs
inc
stc
cmpsb
or
or
lea
or
xchg
jecxz
mov
popf
fyl2xp1
or
and
ljmp
jmp
xchg
adc
add
adc
and
mov
loop
pop
push
xchg
mov
cmpsl
or
pop
mov
push
mov
push
mov
aas
shr
xchg
aaa
les
pop
arpl
shll
and
sub
ficompl
js
xchg
fildll
ds
mov
mov
aam
cmp
fcmovnbe
outsb
dec
fidivrs
je
add
add
testb
pop
pop
jle
lods
std
ret
das
mov
jp
pushf
add
cmp
mov
cmp
aaa
scas
mov
fsubp
xor
js
repz
cmp
push
jo
xchg
lds
out
sbb
cmc
sbb
cmc
outsl
movsl
xor
inc
and
repz
xor
mov
xchg
sbb
sub
and
pop
mov
clc
mov
fcompl
rorl
jl
test
scas
repz
rcrl
rol
cmpsb
ficoml
hlt
ss
shrb
test
inc
xorb
scas
pop
mov
dec
jno
leave
jge
push
mov
aas
inc
pusha
imulb
inc
aaa
pop
inc
movsl
mov
loope
test
inc
mov
or
push
lock
je
cmp
dec
pop
outsl
mov
inc
mov
jno
mov
movsb
stos
inc
in
cmp
sbb
cmp
jecxz
shr
test
mov
jbe
push
add
int
add
push
stos
xlat
mov
push
adc
push
pop
pop
inc
and
pop
pop
in
pushf
mov
xlat
ficoml
shrl
sub
mov
push
pop
sbb
loop
sbb
sbb
adc
je
adc
xchg
dec
mov
out
mov
out
loopne
xor
xchg
push
call
outsb
or
mov
imul
mov
lds
mov
dec
push
and
in
jbe
negl
dec
fadd
push
popa
ss
xor
cmp
mov
mov
mov
push
clc
rorb
repnz
movsl
mov
mov
fwait
lcall
mov
out
xor
xor
getsec
cmp
stc
sbb
cltd
adcb
arpl
inc
ss
out
loope
sbbl
je
movsb
test
sbb
push
movsl
pop
test
sbb
cwtl
arpl
xchg
inc
rcrl
xorb
mov
iret
mov
xchg
clc
movsl
lret
xchg
call
test
sub
arpl
notl
sahf
aam
push
and
leave
sub
xor
pop
int
sbb
or
mov
push
adc
gs
fld
rcll
or
test
xor
or
adc
cld
adc
fcom
add
sti
pop
mov
pop
lahf
adc
cmp
push
mov
js
mov
and
adc
mov
cmpsb
adc
scas
jle
adc
out
stos
mov
or
sbb
push
andb
out
loopne
dec
dec
fdivrl
fwait
mov
repnz
push
leave
xchg
jbe
enter
fsubrs
lea
adc
je
outsb
es
enter
mov
inc
pop
jo
mov
cmp
out
and
aas
mov
xchg
nop
jb
and
sub
adc
clc
pop
jb
jae
sub
gs
inc
pop
jbe
call
in
push
stc
scas
dec
xchg
rolb
test
pushl
mov
testb
and
hlt
push
adc
jno
mov
adc
mov
pushf
lock
mov
jl
adc
je
sahf
daa
sti
dec
sahf
and
pop
pop
or
fld
add
cltd
andl
sti
push
addr16
push
xchg
mov
shll
pusha
inc
fsubrl
loope
cltd
xchg
je
jne
in
adc
shll
mov
add
sbb
mov
roll
test
xchg
nop
sub
sub
cmp
adc
push
jg
and
dec
stos
std
mov
dec
out
test
push
inc
sbb
mov
jecxz
mov
lods
fsubrl
xchg
and
mov
popf
fsubs
stos
aam
dec
pop
pop
push
sbb
out
sarb
jmp
pop
jae
sub
push
test
mov
adc
mov
lahf
sbbb
insl
mov
aam
outsl
push
mov
dec
daa
mov
repz
mov
mov
leave
call
scas
push
and
insl
mov
ja
insb
jae
cmp
fs
pop
sbb
fmul
xor
outsb
loop
pop
mov
repnz
push
in
jge
movsb
insb
jl
clc
popf
daa
mov
fnstsw
int3
inc
dec
pop
jo
mov
sbb
mov
xor
inc
and
rolb
sbb
dec
imul
pop
stos
in
xchg
scas
pop
test
decb
fcompl
test
jl
test
cld
jbe
ljmp
and
sub
clc
ds
pop
in
cmp
or
add
js
push
adc
and
aam
scas
inc
sbb
subb
leave
popa
xchg
sbb
popa
rcrl
pop
adc
cwtl
out
int
frstor
xchg
xchg
data16
pop
jl
push
popf
cli
bound
lcall
and
jno
push
test
ljmp
cs
iret
scas
pop
fisubl
and
xchg
mov
std
fwait
nop
pop
aaa
dec
lret
stos
lods
add
addb
lcall
sbb
xor
cld
fimuls
fiadds
aam
mov
js
out
lds
jno
push
dec
iret
imul
sar
les
xchg
shlb
clc
adc
mov
sub
mull
or
cmp
in
mov
or
int3
inc
mov
or
mov
mov
lret
cmpsl
fiadds
stos
push
nop
js
xchg
jecxz
cwtl
leave
cmpsb
mov
mov
shrb
dec
dec
insl
fsubrs
xchg
aas
cmp
mov
insl
mov
lock
add
xor
addr16
cli
aas
xchg
mov
out
es
xor
mov
les
out
in
adc
imul
xor
lahf
movsb
pushl
test
ja
clc
push
lret
mov
fbstp
idiv
fldl
in
dec
adc
sub
push
mov
or
or
outsl
sub
int3
mov
mov
and
push
lds
push
cmpsb
mov
pop
test
sub
icebp
std
mov
sub
insl
xlat
pop
push
iret
push
fisubrl
xchg
shlb
loopne
fwait
push
inc
mov
inc
mov
fisubs
jns
jl
dec
add
inc
pop
lcall
inc
xchg
push
sti
mov
add
push
xor
cmp
testl
xor
test
pop
icebp
cs
push
pop
clc
xchg
mov
and
xor
into
sbb
inc
inc
inc
rcrb
movl
std
mov
pusha
pavgb
repnz
mov
mov
sbb
lock
stos
mov
push
xchg
push
sbb
mov
mov
xchg
mov
idivb
or
mov
push
dec
test
cmp
xchg
arpl
mov
jno
sbb
and
push
cld
mov
loop
insl
push
int
pop
mov
push
pushf
jo
movsb
sarl
xchg
push
imul
les
mov
cmc
pusha
in
or
mov
das
cmp
push
fwait
in
cld
sahf
in
stos
pop
mov
out
pop
xchg
xchg
call
and
iret
ljmp
in
test
mov
inc
and
repnz
shrb
dec
dec
push
orl
and
cmp
addb
inc
outsb
aam
sahf
add
push
ds
aad
jbe
stos
aam
dec
mov
mov
dec
xor
push
adc
test
stos
arpl
push
jbe
sub
clc
std
mull
pusha
adc
fwait
sbb
mov
jle
push
xchg
cmpsl
shrb
in
xchg
xchg
lret
jge
icebp
shlb
or
je
push
or
notl
sbb
lcall
mov
sahf
in
mov
xchg
xchg
aas
mov
add
in
xorl
xor
sbb
xchg
or
push
adc
push
jg
nop
shr
and
xchg
mov
fdivrs
sub
push
xchg
pop
cltd
lods
mov
repz
fsts
sub
es
lahf
js
orb
dec
mov
push
lahf
int3
push
punpckhwd
jb
in
push
jae
scas
lock
lret
daa
sub
js
in
fadds
dec
jo
push
dec
dec
ror
sub
mov
cli
adc
aaa
jmp
out
outsb
xor
add
or
push
sub
fnstsw
push
scas
cs
and
sub
scas
pop
mov
mov
cmpsb
adc
lods
push
mov
push
push
scas
mov
and
mov
popa
js
insb
in
sub
inc
lds
pop
aad
ret
cmp
adcl
sbb
sub
nop
xlat
or
int
push
push
mov
xor
rcrl
movsl
icebp
mov
std
sub
lcall
out
fs
out
inc
fbld
daa
mov
push
inc
lock
leave
mov
push
xchg
sub
test
fildl
subb
je
daa
or
inc
into
sub
pushf
jbe
xchg
and
cmpsb
outsl
mov
jge
jge
fdivrs
mov
or
push
xor
cmc
mov
lods
lds
adc
and
mov
sub
loopew
das
bound
iret
inc
mov
shlb
sahf
pop
rcrl
and
aam
pop
js
jne
mov
xor
popf
sub
loop
arpl
testl
sbb
mov
jle
xor
lock
mov
sub
cwtl
les
adc
mov
in
iret
xchg
sbb
cmovs
xchg
lock
dec
jno
and
gs
pusha
addr16
lds
mov
jmp
lea
dec
push
pop
rcll
mov
mov
sarb
iret
and
into
cmpsl
push
push
sub
xchg
fstl
mov
aas
ret
ucomiss
jg
jns
and
mov
in
jle
xor
aad
lret
xor
pushf
sahf
dec
aaa
filds
cltd
xor
jmp
test
pop
out
and
xor
add
js
xor
sub
addr16
testb
push
mov
addr16
out
adc
mov
inc
mov
xchg
add
push
loope
cmc
xor
rep
pop
mov
xchg
bound
outsl
push
fcom
and
pop
push
or
sbb
jnp
out
inc
mov
ret
testl
jg
add
xchg
fiaddl
cmp
fcompl
pop
mov
das
arpl
aad
pop
gs
mov
push
enter
scas
filds
rcll
inc
jge
and
add
mulb
ljmp
jns
add
xchg
adc
xor
pop
push
jp
loopne
test
dec
pusha
mov
popf
xor
push
jmp
fistl
mov
adc
cmp
test
xchg
xchg
or
xor
rcr
mov
lahf
xor
stos
loopne
nop
jnp
adc
sti
popa
addr16
mov
sar
cs
pop
inc
push
imul
clc
or
es
xlat
nop
add
pop
shll
cmp
out
fdivrs
aas
test
cmp
jmp
jo
daa
ja
stos
mov
rclb
or
mov
push
pop
push
imul
or
sbb
dec
sarl
fidivl
adc
and
mov
andb
xor
mov
dec
xchg
mov
test
add
xchg
xor
add
xor
in
xor
addr16
inc
lret
out
mov
xchg
stos
or
jbe
mov
dec
or
adcb
mov
std
js
in
cwtl
dec
add
mov
cltd
pop
xor
mov
cs
jne
int
mov
stos
sub
loope
xor
and
idivl
fstpt
cmpsb
xchg
ja
cmp
sbb
fisubl
xchg
cmp
mov
dec
addr16
rorb
jmp
dec
aad
adc
dec
testb
mov
lret
jp
jne
jbe
imull
jg
dec
rol
or
enter
lea
cmp
mov
or
sbb
xchg
sub
add
xchg
fcomps
lock
lock
bound
cmp
cli
sub
mov
sub
sti
loop
push
inc
push
ss
xor
jp
and
push
push
nop
sub
int
mov
push
cmp
inc
cmc
mov
addb
sbb
std
mov
movsb
pop
inc
push
jns
notl
and
cmp
dec
inc
sub
adc
jo
mov
or
or
xchg
and
push
inc
pop
in
cs
bound
xor
aaa
mov
sub
jl
jg
pop
aas
repz
insb
inc
xchg
or
sahf
adc
sti
xchg
es
es
and
mov
cmp
push
xchg
fsubrs
popa
jo
jecxz
inc
filds
outsl
dec
pop
jbe
xor
sub
sub
mov
ret
xchg
sub
loopne
mov
gs
fcmovnbe
mov
cmpsl
js
lods
mov
fsubs
outsb
scas
pusha
icebp
mov
fidivrs
fucomip
aad
addr16
xchg
pop
scas
jae
mov
notb
lods
jl
and
loop
in
outsb
push
arpl
clc
dec
and
mov
sarl
cli
xor
fstps
adc
movsl
or
xlat
lea
sub
inc
dec
dec
scas
mov
add
xchg
cmp
xchg
dec
test
xchg
pop
push
inc
pop
sub
fisttpl
ja
stos
mov
inc
mov
push
jae
push
add
xlat
pusha
mov
into
xchg
loopne
jmp
pop
insl
pop
jne
add
dec
push
ss
ss
mov
cmp
es
mov
xchg
stos
cli
orb
sbb
dec
insl
push
push
push
hlt
rolb
xchg
shl
push
adc
dec
in
mov
repnz
mov
mov
pop
clc
scas
mov
repnz
movsb
iret
repnz
bound
and
subb
icebp
in
add
sub
ret
and
mov
dec
mov
or
icebp
fildl
dec
in
fwait
inc
pop
add
push
arpl
ljmp
hlt
insb
fidivs
out
or
movsb
cmp
dec
dec
lods
stos
push
fwait
push
cmp
pop
add
jmp
pusha
add
movb
test
sbbl
mov
push
lret
call
push
inc
push
enter
out
xchg
ja
adc
push
out
insb
aad
test
ficoms
sbb
clc
mov
outsl
ret
and
sbb
mov
xchg
les
xchg
mov
and
loope
and
push
es
jp
sbb
addr16
push
jle
jmp
imul
add
xchg
sti
insb
es
inc
sub
mov
and
cmpsb
sbb
xor
test
push
aas
ret
faddl
dec
mull
in
enter
xlat
andl
and
add
jmp
xchg
repnz
into
test
mov
sti
out
out
das
push
cmp
or
jns
daa
popl
ds
les
or
adc
pop
mov
mov
mov
jge
int3
lcall
xchg
lods
adc
xchg
or
cmp
imul
cmpsb
cmp
adc
and
call
shll
adc
cmpsb
or
sub
push
jle
sbb
enter
test
sub
enter
xor
push
jno
fwait
pop
jge
aas
and
xor
mov
cmp
addr16
call
adcb
inc
mov
idivb
jo
dec
clc
daa
mov
xchg
dec
mov
xchg
daa
sti
scas
pop
sarb
and
dec
mov
outsl
adc
jnp
inc
ud1
mov
pop
dec
xchg
gs
cwtl
sub
mov
push
insb
jp
jmp
ljmp
or
xor
ds
addr16
or
sub
leave
lock
inc
fsubrl
push
mov
sub
xchg
cld
jg
in
jo
outsl
sarl
xlat
sbb
ficomps
jmp
cmp
insl
testb
jo
dec
jmp
mov
rep
stos
out
test
clc
push
inc
cmc
mov
jmp
jb
jno
mov
push
in
scas
xor
push
or
lds
lret
prefetch
xchg
push
xchg
xchg
mov
fwait
daa
or
out
push
ret
ds
loop
add
add
mov
xor
inc
out
push
sbb
xchg
daa
cmp
adc
pop
mov
mov
stos
mov
lods
mov
push
les
repnz
imul
fildll
xchg
jns
clc
or
in
mov
add
add
mov
das
and
add
xor
data16
jo
int3
push
aas
shl
xor
icebp
fcomps
imul
fiaddl
xor
outsb
push
or
ficompl
xor
fcomip
andb
lods
outsl
fldl
sub
incl
insl
pop
bnd
mov
inc
lds
cmp
inc
jge
cmc
lret
and
mov
test
ret
sub
imul
mov
sub
or
push
or
mulb
xlat
pop
dec
mov
shr
sbbb
push
jne
movsl
push
xchg
imul
or
pop
xchg
pop
lds
cltd
adc
adc
jecxz
lods
out
js
jno
js
iret
stos
mov
push
cwtl
add
mov
loop
rorl
ds
dec
fcmovb
outsl
push
sbb
jne
into
push
and
out
jae
les
in
mov
das
sub
arpl
fbstp
or
and
ret
pop
ds
es
push
cmpsl
xchg
nop
vmovups
hlt
and
push
push
adc
mov
mov
mov
std
fs
xchg
cli
push
adc
or
sub
mov
out
pop
jg
jbe
cmpxchg
fidivrs
ret
or
and
sarb
add
mov
pop
or
dec
dec
inc
stc
xchg
fwait
push
sbb
call
xor
mov
dec
add
xorl
mov
mov
les
jns
add
xchg
mov
add
in
aam
push
imul
and
push
adc
xor
mov
xchg
inc
cmc
or
cmp
pushf
xchg
les
rorb
call
insl
xor
stc
push
nop
mov
arpl
jne
mov
dec
mov
mov
cmpsb
ja
cmp
rcll
lea
scas
mov
popf
jp
insb
jns
int
cld
mov
subl
mov
dec
cmpsb
je
out
pop
jae
lea
mov
les
leave
pop
aam
xor
hlt
mov
out
ret
xchg
inc
std
push
stc
dec
pop
push
repnz
xor
orl
mov
adc
dec
shlb
adc
outsb
inc
cmpsl
mov
jno
ja
cmp
or
pushf
lea
stos
pop
in
push
dec
out
mov
sub
lods
out
stc
jno
xor
push
jb
ret
cmpl
sahf
sbb
mov
cmpsb
sbb
xor
mov
add
stc
lret
pop
jmp
lods
movsl
or
fxrstor
inc
xchg
push
call
fcomi
push
scas
hlt
pop
fwait
add
out
adc
jmp
dec
loopne
je
jb
jae
rcrl
fdivrl
sub
sbb
mov
mov
lods
pop
ja
and
icebp
fstps
repz
push
out
and
imul
jae
cmpsb
or
add
sarb
xor
or
fdivs
push
call
push
adc
loope
push
jge
mov
add
insl
mov
mov
push
adc
jne
cmp
jmp
jecxz
movsb
mov
add
fnstsw
inc
xor
fistpl
pop
xchg
testl
mov
daa
sub
jo
lods
mov
xor
sbb
movsl
pop
ljmp
pop
mov
les
mov
pop
push
rclb
sbbb
test
adc
push
mov
xchg
in
add
jnp
fcomp
jecxz
jg
sub
add
dec
jb
fistpll
insl
imul
mov
xor
push
stc
fsubr
sub
or
add
sarb
push
jge
andb
test
mov
push
in
pop
pop
pop
out
dec
mov
sub
out
or
xchg
aaa
sub
clc
imul
sti
xchg
or
sbb
arpl
add
aam
mov
daa
pop
stc
inc
xor
cmp
cli
jmp
cmp
nop
jo
pushf
out
add
pop
int3
cmpsb
loope
outsl
setno
das
bound
ret
jle
ja
icebp
and
js
push
mov
fdivl
fnsave
mov
bound
dec
fildl
cmp
dec
push
xlat
jmp
xchg
and
add
and
adc
xchg
mov
sbb
ficomps
or
hlt
cmpsl
movsl
fwait
push
add
sti
jmp
pushf
es
sbb
fs
fistl
int
and
mov
test
add
std
inc
dec
mov
ss
out
adc
leave
xchg
pushf
into
jns
jne
xor
and
ds
and
scas
mov
arpl
dec
je
faddl
aam
popa
push
mov
push
cmp
xor
and
ss
inc
cmpsb
call
ds
pushf
test
cmc
jl
jle
jae
mov
sub
or
leave
dec
pop
push
in
test
in
int
sbb
call
les
jo
mov
xlat
std
daa
jg
shlb
push
outsb
mov
pop
nopl
sbb
in
nop
and
sti
cmpl
add
clc
pusha
cmp
cwtl
push
or
stos
mov
and
mov
pop
repz
jno
imul
lretw
add
clc
pop
fs
jge
lds
dec
movsb
pop
notb
clc
cli
xchg
push
xchg
stos
and
adc
sbb
pop
push
xchg
cmpsb
cmc
insl
or
outsb
adc
push
jb
or
mov
xchg
outsl
lahf
stc
inc
loopne
mov
ret
xlat
push
dec
add
xor
jle
nop
mov
je
mov
loope
or
aaa
imul
test
stos
add
test
hlt
add
mov
jmp
fsubrl
rorl
sub
cmp
pop
stc
sbb
xor
or
das
jno
sub
adc
dec
insl
xchg
movsl
mov
push
popf
sti
lods
or
in
test
lret
dec
inc
cmp
outsl
out
jo
sti
mov
imul
inc
pop
rorl
lahf
sbb
lret
jnp
out
xchg
ret
cmp
sti
mov
mov
mov
stc
fisubs
cmpsb
nop
fmuls
add
inc
cmp
fldt
mov
jle
xchg
xchg
scas
ret
jae
and
xorl
hlt
fwait
jge
test
xor
push
mov
je
inc
shrl
fdiv
xchg
mov
shl
jl
adc
lods
popf
fsubs
push
daa
pop
outsb
test
add
dec
sbb
xchg
call
mov
pop
in
ja
shll
xor
hlt
jo
stos
push
push
fldenv
ds
mov
dec
mov
inc
mov
lods
fisttpll
push
ds
or
notl
out
rcr
incl
mov
sbb
xor
jge
in
lcall
lods
mov
pop
and
pop
xor
es
sub
add
pushf
rcrb
add
pop
cld
movsl
jmp
lahf
rcrl
pop
leave
vprotq
xor
xor
xor
movsl
xchg
sbb
mov
or
inc
sub
push
inc
pushf
pushf
xchg
cmp
filds
icebp
lds
aad
faddl
pop
pop
ja
movsl
movsl
imul
jp
ret
xor
inc
xlat
pop
ret
cmp
adcb
cmp
mov
arpl
aam
iret
sbb
xchg
mov
shl
add
leave
rcr
pushf
aas
sbb
into
add
ret
push
fs
xchg
jge
push
pop
fwait
cmpsl
push
mov
cmpsl
fsubl
jne
push
push
insl
push
lret
cwtl
push
jne
cld
mov
cmp
sti
rcrl
scas
cmp
lret
push
je
test
mov
fwait
xor
shlb
cmp
mov
add
sbb
cmp
icebp
xor
and
sub
enter
mov
rorl
cmp
rcr
cmp
adc
jecxz
dec
repnz
rol
nop
pop
fsub
scas
sti
stc
out
jnp
sahf
out
dec
jl
mov
insb
sub
shr
test
ret
rcrl
or
sbb
call
int3
notb
or
aaa
add
mov
mov
iret
push
xchg
mov
je
enter
mov
pop
dec
fnsave
mov
mov
and
mov
fdivs
inc
push
pop
stos
push
pushf
sbb
mov
fisubl
decl
jne
out
push
sbb
scas
lea
mov
test
popa
xor
into
arpl
jo
loop
int3
jg
push
mulb
mov
cmp
mov
dec
or
mov
mov
sbb
imul
bound
pop
xchg
mov
lock
fwait
lretw
dec
jle
cltd
in
dec
xchg
push
xchg
cmp
faddp
sbb
pop
push
adc
out
outsb
ja
ret
push
push
imul
popf
xchg
xchg
lret
cwtl
imul
arpl
sub
add
adc
ret
cwtl
jle
push
add
stc
insl
dec
add
mov
imul
outsl
xchg
mov
dec
into
mov
xchg
xchg
add
push
test
cwtl
aas
adc
mov
mov
dec
test
xor
sub
testb
fdivrs
lcall
xchg
xor
mov
mov
cwtl
imul
pop
lods
pop
add
insb
cmp
fnstenv
imul
mov
sbb
scas
push
in
addl
aas
cmpsb
adc
cmp
insb
mov
dec
jge
xlat
jp
test
pushf
mov
cmc
aad
adc
aaa
xchg
sbb
cmp
ret
fsubs
jp
xchg
lods
cli
ss
scas
dec
mov
fdiv
xchg
fs
in
jmp
dec
movsl
ds
sbb
pushf
negb
xor
movsb
fbstp
iret
sub
sub
mov
ds
je
inc
jl
sbb
pushf
aaa
adc
cwtl
push
mov
sbb
xchg
add
mov
in
pop
in
andb
adc
xchg
jge
call
ror
ja
movsb
insb
sbb
add
mov
test
test
pushf
in
jmp
add
sti
mov
outsl
jae
xor
gs
cmc
jmp
xorb
aad
sub
inc
stos
sbb
xchg
icebp
xchg
fnsave
js
pop
cmp
into
fldenv
aad
int
mov
pop
mov
andl
push
cmpsb
addr16
push
imul
cltd
jl
out
mov
fnstsw
shll
enter
push
jl
xor
cmovs
mov
add
out
hlt
iret
dec
or
sti
or
in
mov
inc
les
and
cmc
fwait
jo
inc
xor
fdiv
adc
pop
movsb
jo
xor
gs
mov
xchg
pop
stc
scas
test
scas
cli
jg
sub
push
divb
ljmp
sub
cltd
inc
sub
xor
push
cmp
inc
mov
repz
jno
xor
jb
or
ja
jo
pop
arpl
or
jne
shrb
xchg
clc
inc
sarl
dec
dec
repz
fdivrl
add
in
arpl
pop
fnstsw
inc
cld
pop
aaa
mov
sbb
push
into
jge
mov
push
jne
out
orl
das
xchg
bound
jnp
cmp
xchg
adc
arpl
push
mov
jg
or
ss
movsl
popf
push
fisttps
sub
enter
dec
sub
and
cmpl
enter
ja
in
iret
push
and
insl
scas
xchg
mov
push
dec
insl
mov
mov
xchg
jmp
xor
rclb
xchg
pop
pop
stos
ja
mov
fistps
mov
dec
adc
mov
scas
hlt
sahf
scas
jge
jecxz
sub
lcall
or
cltd
adc
pop
addr16
pop
addr16
lds
out
add
repz
jne
in
popa
pushf
mov
mov
in
mov
imul
outsl
cli
das
xor
add
in
insl
xchg
imul
rorl
scas
out
sti
fidivl
fstps
je
icebp
jbe
shll
lret
mov
insb
and
pop
and
mov
sbb
frstor
out
cmp
pop
inc
push
cmp
mov
imul
mov
pop
out
inc
mov
pop
mov
mov
lods
xor
mov
jge
js
aam
into
insb
lds
dec
and
cli
cmp
pushf
xchg
gs
pop
shll
xchg
mov
xchg
jb
mov
push
mov
fidivrs
into
or
in
push
or
gs
dec
hlt
lods
dec
aaa
sub
movsb
xlat
or
adc
in
sub
bound
mov
xlat
pop
adc
mov
ds
out
ds
jge
pop
cmp
push
mov
or
adc
and
add
stos
and
jnp
sbb
jle
mov
push
movsl
xchg
cmpsl
jne
jns
imul
outsb
shrb
dec
ljmp
int3
sbb
jo
out
pop
js
aas
mov
push
mov
xlat
ss
inc
and
nop
aam
loop
jl
gs
jp
mov
or
in
xchg
xor
cld
mov
outsb
aas
es
pop
or
and
xchg
push
sub
mov
insb
adc
mov
cmpsb
add
mov
and
mov
loope
push
or
sbb
int
inc
repnz
scas
dec
mov
dec
fisttps
jnp
mov
stos
dec
hlt
sub
dec
mov
mov
mov
mov
inc
dec
push
clc
jle
mov
or
sub
cmp
imul
out
cmp
pop
sub
mov
or
sahf
cmpsb
xor
push
mov
or
add
mov
test
sbb
xor
cmpsb
xchg
repz
imul
cmp
les
test
xor
sub
sti
and
movsb
imul
jge
pop
lret
jmp
or
test
pop
call
mov
xor
mov
inc
icebp
sbbl
jmp
fisubrl
loope
mov
mulb
pop
sub
sbbl
pop
sub
pop
sbb
inc
adc
pop
xchg
push
add
ret
pop
cmp
push
pop
push
cmp
mov
daa
lea
push
sbb
ljmp
sbb
jb
mov
lahf
andb
add
jne
outsl
xchg
inc
and
aam
mov
xchg
shr
sbb
aas
dec
push
or
fs
aad
movsb
dec
out
sti
mov
mov
movsl
sub
mov
in
ss
adc
cld
ja
rcll
clc
das
push
add
ret
into
or
pushf
xchg
mov
add
movsl
xor
movsl
adc
push
dec
jmp
sub
jae
mov
leave
dec
mov
adc
adc
adc
insl
inc
iret
subl
xchg
add
leave
fmull
lahf
stc
mov
sub
inc
xchg
adc
cmpsb
repz
popf
arpl
pop
icebp
hlt
imul
push
push
negl
add
jmp
push
dec
test
jns
xor
in
aas
jno
mulb
add
int3
addr16
jp
ds
int3
les
jp
test
inc
adc
or
push
ljmp
fiaddl
push
sbb
dec
sub
insl
dec
inc
mov
and
mov
negl
in
mov
js
outsb
sarl
leave
mov
xor
insl
insl
sub
lret
daa
fistpll
stc
int3
fsub
lods
sbb
dec
pop
stos
push
mov
mov
aas
mov
push
loopne
push
cli
sbb
xchg
jge
stos
setbe
cmp
loope
aad
xchg
nop
cmc
out
inc
call
xchg
cwtl
mov
je
lahf
push
nop
pop
pushf
call
std
pop
jecxz
add
mov
enter
ret
dec
je
sti
cs
cmpsb
and
sbb
jns
push
lret
daa
adc
adc
add
mov
cwtl
or
addl
push
std
addr16
push
push
aaa
dec
es
jg
sub
stc
sub
xchg
or
jg
push
cmp
out
frstor
or
fidivrl
dec
dec
shrb
push
out
packuswb
stos
pop
adc
das
pop
aam
aas
add
xchg
scas
add
inc
cmp
imul
jl
mov
xor
or
mov
add
or
inc
movsb
pop
dec
sbb
call
sti
fs
addr16
test
adc
rorl
xchg
in
xchg
out
push
push
stos
fldcw
aad
push
stc
clc
xchg
sbb
dec
adc
in
daa
movsl
mov
mov
sbb
into
jle
dec
xor
lcall
adc
int
dec
outsl
or
xchg
mov
inc
mov
int
stos
loope
call
dec
test
mov
inc
rol
hlt
rclb
mov
sub
adc
and
or
jle
fbstp
mov
dec
neg
outsb
cmp
xchg
pop
cmpsb
sti
inc
repz
insl
jge
cld
and
mov
js
or
mov
jg
dec
xor
mov
inc
push
fxtract
aam
xor
push
bound
dec
arpl
pushf
mov
cwtl
loope
shr
jle
pop
out
inc
fs
xchg
pop
sarl
pop
inc
repnz
mov
pop
sbb
stos
test
push
sub
js
push
pop
sarl
outsl
adc
dec
jnp
iret
xor
enter
add
mov
inc
mov
out
les
inc
inc
cli
daa
jne
push
loopne
jns
add
jo
rcl
cmp
xchg
into
mov
pop
mov
imul
cmpsb
sbb
repnz
bound
sub
popl
insb
test
movb
sub
push
scas
add
xlat
cs
mov
pop
mov
stos
js
or
roll
rcrb
outsl
mov
xchg
in
nop
jae
out
mov
stos
in
xor
ljmp
dec
and
xchg
inc
inc
mov
jb
negb
popl
and
cmp
mov
xchg
jae
dec
outsb
std
lret
lods
ss
and
es
aaa
je
sbb
testl
les
or
and
scas
mov
sar
jmp
mov
test
fidivs
mov
sub
lret
jp
lahf
ljmp
sbb
push
sub
hlt
mov
cs
and
mov
add
xchg
xchg
cld
inc
inc
adc
je
mov
mov
xchg
stc
xchg
dec
pop
mov
nop
gs
jbe
daa
add
mov
in
mov
dec
cmpsl
jmp
jbe
repnz
in
or
out
gs
xor
push
xchg
dec
jmp
mov
imull
mov
adc
into
insl
ret
out
in
push
push
dec
in
out
pushf
loopne
insl
or
dec
push
wrmsr
or
fisttpl
or
xor
es
xchg
movl
test
movsb
outsl
fstps
pop
cld
ljmp
jl
out
pusha
popf
movsb
in
iret
repz
aam
test
addr16
pop
add
mov
popa
inc
push
mov
inc
cltd
js
hlt
add
cmpsb
cwtl
sbb
push
lret
jg
or
xor
outsb
je
mov
lods
sbb
test
cmp
push
insb
mov
jmp
cmp
je
cmp
clc
icebp
add
out
push
out
xor
inc
mov
arpl
decl
scas
mov
sub
or
pop
ret
push
push
xor
mov
or
and
cmpl
mov
in
rclb
cwtl
push
data16
add
mov
daa
roll
call
and
dec
adc
push
arpl
adc
add
jp
jmp
or
sahf
jo
sub
dec
std
std
jo
jecxz
test
jnp
cld
imul
mov
out
popf
and
cmpsb
xor
inc
push
cld
adc
adc
adc
xor
cmpsl
xchg
jno
fs
push
shl
gs
sub
mov
ret
ret
loope
stc
adc
pop
out
add
pop
shrl
mov
sbb
push
aam
xchg
dec
les
push
subl
pop
lock
clc
outsl
xchg
adc
shrb
or
enter
inc
adc
cmp
xor
popl
jp
mov
rclb
iret
sub
cmp
mov
out
jno
mov
icebp
rcr
cwtl
jge
xchg
popf
inc
lret
insb
add
mov
xor
loopne
popf
jge
and
jbe
data16
repnz
xchg
mov
shll
adc
testb
dec
lds
aam
jmp
sub
fildll
push
pop
out
sahf
sbb
adc
rcrl
xor
sbb
jae
inc
lret
add
pop
mov
or
sub
out
in
inc
es
cmpsb
inc
fldl
imul
ljmp
sub
or
sahf
imul
adc
cmp
sbb
inc
or
push
pop
inc
push
dec
lods
das
xchg
dec
mov
aad
imul
call
es
pop
adc
int3
ss
fwait
inc
xchg
test
sbb
loopne
adc
and
lea
cwtl
sbb
inc
xor
jo
lds
cmc
add
pop
inc
insl
push
push
ja
push
mov
mov
xor
ss
call
movsb
push
rclb
jmp
dec
ss
adc
mov
push
imul
lret
and
ja
mov
stos
mov
cs
fsubrl
cmc
mov
push
jae
outsb
pusha
dec
fnstcw
dec
lods
into
add
push
cmp
mov
cltd
sbb
jge
pusha
xchg
mov
and
fidivrs
test
inc
ljmp
sbb
jae
in
mov
or
outsb
adc
pop
mov
and
jo
dec
sbb
ljmp
dec
cmp
mov
arpl
aam
out
mov
in
popa
sarb
mov
paddsw
mov
enter
lock
popa
or
mov
or
jne
push
fisttpl
lahf
xor
jnp
add
mov
push
decb
rcl
and
ret
test
in
and
xorl
push
cltd
pop
ror
icebp
dec
and
cmp
sarb
push
push
cwtl
ss
shll
subl
int3
inc
lods
aad
jge
cmp
test
or
aaa
movsb
jp
bnd
repz
adc
push
cmc
test
lret
sub
mov
jo
cmp
pop
cmp
dec
out
movl
mov
sbb
cmp
xchg
sub
enter
lahf
mov
push
inc
leave
lods
sbb
daa
pop
push
pop
lahf
adc
sub
mull
jle
cli
jp
out
imul
roll
lahf
les
and
test
jnp
jmp
test
rcrl
add
push
pop
push
es
inc
jno
pop
add
and
jnp
out
sub
pop
push
pop
dec
pop
jge
inc
adc
sub
adc
pusha
ja
sahf
je
cmp
mov
adc
loop
aas
adc
fucomip
and
pop
ret
cs
mov
and
stos
push
sbb
icebp
xor
push
lods
outsb
pop
push
out
mov
and
cmp
push
jns
sub
pop
and
dec
xlat
push
or
xlat
mov
dec
in
cmp
push
stos
add
mov
sub
out
lea
cmc
decb
pop
subl
outsl
stc
mov
addb
nop
fdivrl
dec
stos
add
les
cli
and
jmp
mov
outsl
imul
sub
jmp
sbb
sub
mov
loope
add
lock
in
test
cmpsb
mov
imul
add
xor
fcmovnu
test
ret
xorl
mov
insb
sahf
out
icebp
cs
sbb
xchg
and
iret
data16
sub
ds
lods
rcrl
add
pop
push
push
add
and
cli
sbb
adc
dec
stc
lods
ja
insl
fwait
push
mov
fbld
scas
popa
nop
out
and
aaa
xor
rcrl
jle
or
decl
mov
and
sub
pusha
aaa
in
or
jl
push
mov
fsub
pop
daa
dec
lods
dec
mov
xchg
pop
test
hlt
in
int
lods
in
negl
mov
movsl
shll
cwtl
pop
leave
sub
fimuls
jp
sub
dec
mov
and
jnp
or
inc
push
push
mov
roll
cs
cmp
jo
js
sbb
dec
mov
pop
clc
imul
mov
push
int3
jns
mov
push
inc
or
pop
cltd
mov
xlat
inc
mov
jne
or
mov
inc
popf
subl
mov
fadd
aas
aas
mov
fsubrs
adc
mov
push
adc
jl
rcrb
mov
or
inc
popf
roll
imul
inc
lods
xor
push
shrb
sub
push
xchg
mov
in
int3
push
dec
sbb
insl
insb
cwtl
aaa
out
popa
das
mov
adc
mov
mov
xor
int3
lea
fs
xchg
ss
pop
jge
imul
adcb
mov
cmovbe
fcomps
aas
xchg
or
ficompl
pop
or
mov
dec
jmp
int
xor
icebp
loop
js
das
pushf
out
and
outsl
repnz
mov
sub
mov
jp
push
cmpb
sti
sub
js
mov
push
iret
lods
in
adc
xchg
xchg
rcrl
sbb
and
pop
jb
or
mov
arpl
xchg
xchg
pop
int3
test
ds
movsb
mov
xorl
leave
jmp
cwtl
sbb
mov
mov
jo
vmovsd
xor
xchg
cltd
js
mov
fwait
and
add
ja
mov
in
shll
sub
enter
in
add
cmp
movsl
loope
sbb
sub
sarb
lods
arpl
das
ret
mov
insl
outsl
jnp
and
dec
mov
shlb
add
push
push
nop
enter
jnp
xchg
cmpl
mov
icebp
ficoms
repnz
mov
jp
das
shl
loope
adc
cmp
jp
xlat
push
repz
add
ret
outsl
lahf
lods
cmp
lods
rolb
mov
xchg
lods
mov
adc
mov
add
movl
call
loopne
mov
adc
adc
inc
les
repnz
push
mov
jl
adc
dec
fwait
pop
popf
sub
push
in
enter
movb
sub
jge
std
orb
mov
xchg
cwtl
ds
mov
pop
xor
cmp
add
lret
cwtl
jg
jno
jp
sbb
dec
lods
fnstcw
sbb
cmp
nop
daa
leave
js
mov
mov
repz
mov
pushf
out
inc
push
pop
cltd
shl
lods
ss
mov
ret
ljmp
cmp
call
mov
test
adc
jns
test
mov
jl
repz
xchg
outsb
imul
jle
and
inc
xor
xor
jge
fxtract
sahf
or
sbb
aaa
push
out
das
inc
mov
fwait
imul
inc
jl
mov
mov
mov
push
out
int
sub
adc
mov
scas
xor
jecxz
fwait
cmpsl
cld
hlt
push
scas
adc
or
hlt
mov
les
enter
arpl
in
push
imul
les
push
int
and
jno
mov
dec
ret
stos
and
addr16
leave
repnz
int3
push
mov
loope
ss
xor
ds
daa
fs
cwtl
stos
mov
movl
rcrl
jmp
jmp
and
inc
mov
movsl
bound
out
adc
pop
outsl
mov
arpl
inc
xor
ret
repz
faddl
dec
adc
dec
ret
dec
push
sbb
mov
pop
lea
push
or
push
and
ret
fistpl
jnp
ds
fstp
xor
add
or
push
lods
lea
loop
stos
in
push
sub
push
test
mov
repz
inc
and
repz
pop
dec
xor
pop
sbb
xlat
and
push
jl
test
mov
ret
push
mov
rcrb
pusha
lods
aam
adc
lret
sbb
daa
cmp
daa
or
pop
xchg
in
jae
jnp
dec
imul
test
jne
in
xorb
outsb
aas
flds
and
rolb
addb
out
push
scas
std
or
inc
push
jno
cmc
cwtl
jbe
fcmovbe
inc
mov
popa
sbb
pop
imull
pop
stos
lahf
or
push
add
cmp
ds
xchg
popf
jmp
cmc
lahf
lds
and
aas
lret
jno
shlb
pop
push
xchg
jbe
jmp
enter
test
cmpsl
enter
push
and
add
in
ret
loope
je
inc
nop
pop
mov
push
aad
lret
add
xor
add
repz
aas
movsl
xor
outsl
sub
pop
or
mov
cmpsl
inc
aas
cld
aas
xor
setge
pop
jle
ljmp
pushf
rorb
js
jg
mov
push
xchg
rcl
add
add
aas
inc
cmp
and
and
jge
mov
loop
xor
mov
or
out
movb
mov
xor
sub
cwtl
rorb
lds
std
sub
fstl
inc
orb
pop
daa
icebp
sbbl
outsb
ret
es
aad
mov
daa
and
sub
pop
ljmp
pop
mov
popf
mov
sbb
sub
js
jmp
mov
inc
mov
inc
mov
lea
jge
mov
inc
daa
mov
pop
fs
push
jo
outsl
cmpsb
xchg
cmp
inc
mov
xor
popf
push
mov
pop
insb
dec
sbb
or
ret
cmpsl
popa
test
sti
out
std
sbb
xchg
mov
jne
sbb
sti
aaa
or
mov
aad
push
xor
adc
pop
out
adc
xor
fadds
jne
adc
ds
xchg
stos
sub
cmpl
and
ret
dec
push
repnz
cmpb
add
jae
imul
xchg
sar
add
jle
fldcw
daa
pusha
fs
cmp
and
push
jg
sbb
std
arpl
jmp
sub
movsb
push
imul
mov
pop
lret
xchg
test
ret
std
mov
int3
dec
mov
jns
dec
rorb
xchg
or
enter
cltd
lock
inc
rorl
stc
lods
sahf
or
push
leave
clc
aas
repz
cmp
sbb
xchg
daa
xlat
sahf
jns
fsubl
cs
std
jne
mov
pop
imul
out
cwtl
jae
mov
int3
data16
mov
mov
push
mov
push
sub
in
jg
push
add
sbb
popf
dec
mov
lret
sbb
dec
mov
xchg
sbb
dec
mov
addr16
mov
pop
idivl
cmp
jl
xchg
movsl
outsl
mov
cli
pushf
cmc
lcall
mov
push
loop
dec
lret
push
xchg
sub
lock
test
fists
rcl
and
pop
loopne
dec
push
or
sbb
inc
mov
in
lahf
lods
mov
sbb
in
fisttps
pavgw
add
adc
mov
es
loopne
shrb
cmp
sub
inc
xor
ljmp
bound
aas
inc
add
push
mov
ss
sahf
je
lods
dec
push
sbb
jbe
outsb
scas
ret
fmull
or
popa
jecxz
add
out
mov
mov
push
movsb
cmpsl
jb
jg
aaa
xchg
repnz
adc
mov
dec
adc
js
mov
adc
jecxz
mov
push
inc
rcr
jo
inc
or
outsl
shl
inc
xor
sbb
repnz
imul
jb
sti
jmp
repnz
push
pop
push
loopne
pop
out
popf
mov
adc
dec
imul
pop
out
stos
lret
mov
push
aad
inc
dec
loopne
sub
pop
and
dec
jl
jecxz
loope
fsubrs
sbb
inc
std
das
rclb
jb
dec
imul
scas
je
cli
test
mov
xchg
jnp
mov
mov
mov
cmp
aas
sarb
xor
in
jbe
out
fnsave
leave
cmc
in
mov
pusha
mov
rcrl
push
xor
lea
pop
lods
hlt
jb
popa
pop
stc
jae
fwait
mov
sbb
inc
mov
shlb
scas
movsl
xchg
cltd
mov
lret
pop
ss
out
cmpsb
lea
xchg
pop
jecxz
cmpl
pop
mov
jmp
pusha
push
repz
or
xor
add
mov
jl
or
mov
mov
xchg
lods
mov
pop
les
push
ret
mov
xchg
gs
ret
mov
xor
ucomiss
pop
pop
pop
add
push
xor
loope
push
push
ds
dec
push
inc
push
pop
lods
fcomps
jp
cmp
xchg
pop
gs
xlat
mov
lods
pop
xchg
lret
es
fildl
ret
mov
xor
dec
ret
or
scas
enter
in
xlat
cmp
cmp
dec
into
pop
in
add
aam
repnz
fs
add
jg
iret
xor
and
hlt
iret
sub
sub
stos
lret
push
cmp
mov
scas
cli
mov
and
jbe
enter
icebp
jle
nopl
ljmp
cmp
inc
cli
pop
dec
and
clc
mov
sub
or
movsb
in
jbe
jge
decl
adc
rolb
arpl
fcomi
in
fcoml
push
dec
mov
inc
ja
or
dec
add
xchg
sarb
sti
rep
add
cmp
popa
jge
dec
sbb
addr16
cmp
iret
btc
inc
jo
push
mov
hlt
out
test
jle
das
fstp
dec
xchg
cmp
arpl
fbstp
or
out
fidivrl
mov
inc
rorb
test
pop
wrmsr
icebp
mov
lahf
daa
lret
fbld
sub
and
iret
fsubrs
cmp
or
aad
mov
pusha
enter
pop
int3
jbe
in
dec
or
lock
jmp
jmp
push
leave
sbb
or
cwtl
sbb
sbb
xchg
mov
movsb
mov
es
inc
push
mov
mov
xor
fiadds
xor
pop
imul
xchg
push
inc
pop
dec
call
jp
adc
repnz
push
jmp
ss
cmpsb
outsb
fidivrs
adc
std
ss
mov
inc
sub
mov
mov
and
lahf
rolb
mov
sub
dec
mov
lea
mov
xor
filds
filds
pusha
push
lods
adc
enter
ljmp
jge
jne
test
es
or
push
movsl
js
shll
mov
loopne
mov
sbb
bound
das
jno
stc
das
addr16
fldcw
inc
ds
dec
cmp
jne
push
lcall
aaa
or
push
addr16
jge
aad
mov
fcomp
adc
arpl
and
mov
test
inc
cmp
add
shlb
adc
xor
mov
push
aam
sbb
jmp
or
pop
jo
stc
daa
cltd
fnstenv
mov
sti
das
lods
iret
push
cmp
jge
dec
out
push
cmc
and
sar
jbe
mov
xor
push
sub
xchg
push
xchg
clc
adc
lret
jmp
imul
test
push
leave
ss
mov
mov
insb
or
les
or
scas
sbb
lea
or
push
inc
call
jno
pusha
sbb
xchg
xlat
int
out
push
mov
aam
inc
pop
mov
jae
mov
dec
cmp
jg
mov
fmul
cli
int
add
fs
xor
dec
imul
push
or
jl
mov
fs
popa
sub
movsl
adc
dec
or
fdivr
jno
shl
cmp
inc
fwait
pop
and
nop
push
mov
mov
push
pushl
rorl
aam
loop
cmpsb
into
outsb
lods
sbb
sub
add
shl
pop
cmpl
imulb
loopne
cmp
pushf
repz
pminub
mov
rcll
xchg
push
cld
bound
inc
cwtl
fistpll
inc
mov
cmp
pop
out
fidivl
clc
xchg
cld
push
je
inc
mov
push
or
cmc
mov
cmp
cmpsb
loopne
lret
js
push
stos
mov
add
fisttps
shll
data16
or
adc
out
and
mov
jge
xor
jbe
lods
pop
ljmp
ret
push
push
add
mov
jne
outsb
jle
clc
ret
pop
lds
fstl
sbb
dec
mov
mov
imul
sub
push
filds
in
sarb
mov
aas
cli
cmp
dec
sti
ljmp
jecxz
ds
push
loopnew
pop
int3
jns
cwtl
in
movsb
int
push
dec
stos
push
or
sbb
into
scas
sub
ret
adc
icebp
shl
push
sbb
pop
scas
adc
jb
inc
jecxz
mov
in
jne
outsl
fnsave
mov
dec
jecxz
inc
pop
imul
mov
hlt
loop
insb
mov
and
icebp
add
jbe
adc
inc
mov
mov
shrb
shll
cmp
jecxz
pop
cltd
adc
subb
stc
jno
push
cmp
out
lods
test
push
xchg
sbb
add
mov
lock
adc
cmpsb
dec
daa
mov
flds
adc
add
sbbb
icebp
dec
sub
sub
lret
mov
push
xchg
lcall
shll
adc
dec
pop
aad
ljmp
repnz
jp
and
test
push
daa
push
daa
xor
popa
fdivs
ret
adc
lock
fists
push
xchg
call
lock
cmp
cmp
mov
push
cwtl
or
subb
mov
sarb
addr16
mov
loope
repz
xlat
icebp
add
nop
inc
scas
dec
lds
and
in
ror
and
aad
inc
in
mov
cmp
loop
repz
jb
adc
sbb
insl
shlb
pop
and
cltd
iret
pop
xor
inc
ficomps
int3
cwtl
adc
in
arpl
xchg
push
shll
insl
adc
xor
dec
mov
sub
movsb
mov
ret
mov
bound
cmp
cld
and
xor
stc
and
test
inc
fdivs
stos
test
adc
pop
sub
jo
xor
loope,pn
sub
add
lock
dec
inc
loopne
or
push
push
loopne
or
insb
push
or
das
add
sbb
mov
dec
mov
jbe
nop
int3
es
out
das
test
stos
ret
cmp
xchg
mov
pop
cld
add
lock
push
negb
and
adc
out
lock
mov
mov
enter
adcb
dec
jbe
xor
xchg
inc
push
adc
clc
sbb
insl
mov
shlb
adc
mov
push
push
cltd
stc
sbb
pop
push
std
icebp
das
in
cwtl
jmp
mov
dec
rcll
push
jne
mov
out
int
xchg
sub
sub
dec
mov
cmp
fadds
nop
icebp
jmp
fisubrs
or
stos
xchg
push
test
fistpl
psubq
mov
fwait
inc
mov
push
ljmp
mov
arpl
std
in
popa
fldcw
pop
outsb
sub
ljmp
lods
pop
mov
ljmp
jp
or
xchg
nop
aaa
testb
ror
insb
push
jg
mov
arpl
mov
mov
xchg
push
or
pop
mov
pop
nop
sbb
mov
add
fisubs
leave
and
rcl
mov
mov
inc
pop
fs
xor
inc
int
inc
je
enter
push
adc
sub
dec
in
xor
add
add
dec
inc
and
fisttpll
enter
shll
nop
pushf
jnp
icebp
rclb
push
insb
repnz
add
icebp
fadds
mov
loopne
std
lret
cmc
cmp
movsl
add
pushf
popf
xor
push
and
sub
int
les
xchg
sbb
and
jmp
shlb
sub
jp
addb
ret
inc
adc
push
loop
jbe
pop
mov
iret
and
xchg
das
addr16
rcrl
dec
scas
int3
lahf
xchg
popa
pop
dec
js
in
dec
cmc
push
mov
loopne
hlt
movsl
mov
pusha
mov
jb
xchg
out
jnp
les
xor
shll
xchg
mov
call
jl
in
and
or
out
mov
sarl
and
adc
mov
sbb
xchg
mov
mov
dec
ret
shrl
ds
inc
lds
push
adc
mov
fstps
das
stos
adc
aaa
pop
les
pop
mov
jno
out
sub
inc
test
or
mov
sti
xchg
ja
mov
stc
add
jb
or
nop
icebp
mov
mov
or
icebp
mov
in
cmp
or
cli
add
sbb
pop
lds
fnsave
pop
xorb
into
xlat
jbe
popa
mov
mov
cmpsl
lret
cmpsb
aad
nop
ret
sbb
out
out
inc
pushl
mov
sahf
jnp
repz
int
imul
push
test
cmpsl
jge
int
or
shll
pop
cmp
inc
ljmp
lret
mov
fildl
add
push
enter
push
pop
int
sub
and
cld
pushf
dec
pop
xor
les
sbb
clc
into
ret
lcall
out
jae
pop
xor
dec
pop
leave
xchg
lods
std
testb
add
mov
arpl
inc
pop
js
js
cltd
jl
dec
xchg
xor
mov
shll
lds
jne
les
push
xchg
pop
call
dec
inc
mov
push
std
outsb
sbb
faddl
adc
cmp
call
mov
push
daa
sub
dec
and
mov
ror
adc
int
ss
daa
subb
enter
leave
loop
and
push
jns
out
cmp
inc
int
mov
mov
or
push
mov
test
mov
outsb
dec
mov
xlat
dec
adc
adc
jb
jae
and
and
ret
xchg
inc
enter
xor
adc
scas
daa
push
inc
dec
cltd
mov
and
jnp
cmp
fcmovu
cmp
push
sahf
mov
jg
mov
insb
outsb
or
pop
mov
aad
xchg
scas
leave
movsl
mov
jnp
loope
in
push
stc
je
add
or
lods
leave
lret
mov
lea
mov
rcll
mov
cmp
add
enter
adc
mov
sahf
push
nop
je
dec
xlat
ja
adc
or
lods
jo
adc
dec
mov
ja
mov
scas
jecxz
pop
and
and
in
mov
sar
jae
mov
andl
or
inc
aam
jnp
scas
or
inc
pop
pop
cwtl
inc
xorb
inc
cli
loop
notl
outsl
gs
xchg
pop
sub
jecxz
mov
dec
jne
jge
mov
mov
fldl2t
jb
add
jecxz
mov
pop
xor
push
xchg
idiv
xchg
hlt
js
push
cli
mov
arpl
js
lock
mov
push
rcrb
add
fdivrs
mov
lea
je
arpl
rorb
inc
inc
add
shlb
jl
insl
and
push
inc
test
inc
add
aas
xor
repnz
int3
dec
and
pop
sbb
enter
pop
adcl
rcll
mov
jae
jnp
cmpsl
mov
inc
stos
sub
enter
xchg
roll
jle
adc
xor
cmp
pop
or
ljmp
add
mov
lsl
mov
jmp
fdivrs
add
and
sbb
inc
arpl
fisubs
or
mov
sbb
push
sub
out
sbb
shlb
inc
xorb
adc
ljmp
je
fwait
sbb
std
repnz
push
push
mov
scas
fisttpl
shrb
pop
dec
cltd
ljmp
mov
loop
and
jns
xchg
scas
jg
cwtl
clc
xchg
jmp
leave
or
cmc
pushf
xor
enter
xchg
fimull
mov
mov
mov
adc
nop
fucomi
dec
push
push
enter
dec
mov
pop
jge
cmpsl
out
outsl
pop
xchg
xor
addr16
out
outsl
xchg
xor
cmc
and
or
inc
sub
push
mov
push
cmp
outsl
fidivs
dec
test
mov
adc
push
pop
scas
inc
push
xchg
sub
rcll
jbe
xor
fwait
pop
mov
call
ret
add
in
js
sub
inc
adc
rolb
inc
cmp
cmc
cld
cmp
cmpsl
rcll
int
rcll
push
push
xchg
in
stos
popa
inc
xchg
cs
jne
cmp
movsl
dec
mul
push
mov
push
aam
ja
out
mov
scas
icebp
nop
or
aam
jbe
aad
jb
js
hlt
in
cmc
gs
repnz
loop
cmp
pop
adc
fcom
int3
dec
in
add
ret
aam
ja
or
jbe
mov
jge
scas
push
adc
pop
mov
fdivs
imul
loopne
outsb
xor
lret
add
repz
adc
push
fstl
lret
sub
mov
and
pusha
xchg
mov
xor
mov
adc
ret
mov
pop
sub
cmp
jl
add
clc
in
movsb
mov
aas
pushf
popf
push
subl
cld
sbb
arpl
mov
sbb
mov
push
ss
je
or
loopne
in
push
hlt
push
xor
pop
jno
and
dec
pop
lods
test
add
loope
out
fs
loopne
fimuls
and
xor
scas
ss
lcall
dec
add
xchg
pop
mov
in
and
sahf
shl
mov
inc
movsb
shlb
lods
pop
mov
mov
faddl
shll
jbe
ja
jbe
pop
cli
mov
mov
mov
out
add
xorl
mov
testb
cmp
pop
jge
repnz
pop
jns
jne
or
dec
sub
aas
or
mov
outsb
fdivl
pop
nop
insl
scas
loope
jge
mov
push
inc
insb
jp
sti
ss
cli
movsb
adc
aaa
jge
jg
xor
repnz
push
mov
daa
xchg
sub
fstpt
in
repnz
mov
adc
or
stos
stc
orl
lret
add
push
shlb
rolb
loop
out
out
mov
sbb
pushl
scas
sbb
push
repnz
call
cld
jne
add
push
or
push
test
sbb
dec
cmp
lds
or
test
sub
inc
fnstcw
cld
fimuls
call
lahf
xor
movsb
loop
icebp
adc
jae
pcmpgtb
xchg
or
mov
push
sub
ret
out
insb
scas
and
mov
push
jno
pushf
popf
test
and
and
shlb
sbb
and
cltd
popa
fisubl
xchg
adc
lods
leave
flds
sub
cmp
jo
test
repz
nop
sbb
push
push
cmc
pop
cwtl
out
mov
jmp
pushl
jnp
mov
dec
fwait
add
loope
les
loope
jg
cmp
sub
mov
cmc
rcll
lea
mov
jb
pop
in
jnp
push
pop
cmp
scas
mov
call
ret
mov
pop
and
mov
lret
sub
dec
imul
loopne
xorl
gs
cmp
mov
sub
pop
or
lret
insb
and
leave
inc
ja
enter
or
gs
out
push
xor
stos
iret
stos
lret
je
cmp
jno
movsb
add
leave
sbbb
dec
mov
push
xchg
xchg
pop
push
scas
mov
repnz
add
xchg
sahf
jle
pusha
mov
mov
inc
mov
cli
jae
test
xchg
lods
xorb
jle
loopne
adc
cmpsb
leave
fmuls
xchg
insl
xchg
xor
fimull
mov
nop
xor
add
adc
mov
repnz
add
jge
dec
xor
cmp
or
mov
adc
and
pusha
loop
push
or
lcall
sbb
lcall
sub
or
or
outsb
sbb
mov
sub
lods
mov
mov
movsb
mulb
jnp
mov
or
and
fwait
mov
cltd
mov
leave
or
adcb
push
into
cld
pop
imul
mov
cmp
ss
fistpl
fisttpl
dec
std
clc
and
cmp
add
inc
inc
test
cmp
daa
inc
xor
xchg
sub
lahf
arpl
xor
xchg
sti
in
shlb
sub
lds
insb
dec
sub
mov
loopne
shlb
add
dec
mov
mov
fwait
movsl
sub
or
cli
notl
adc
jae
cli
enter
push
sahf
sub
repnz
hlt
js
inc
mov
fmuls
push
into
cs
sub
cmpsl
roll
mov
and
inc
mov
lcall
dec
scas
sbb
jnp
dec
xor
push
fnstsw
cmp
mov
pop
sbbb
jb
adc
mov
roll
stc
mov
in
iret
stos
movsb
cltd
inc
push
push
out
jge
lods
sub
or
nop
cs
stc
push
imul
mov
xchg
xor
mov
pop
or
pushf
lods
push
inc
inc
push
push
pop
subb
and
cld
mov
dec
movsl
jns
xchg
and
movups
cmp
jle
insb
in
scas
adc
xchg
jg
jb
jge
sub
imul
daa
and
mov
shrb
xor
das
into
loope
sbb
in
or
and
cwtl
and
mov
test
pop
into
push
add
jmp
mov
stc
fmuls
xorl
leave
xchg
pop
sub
lret
mov
ret
fldcw
sbb
fcomip
outsl
cmp
pushf
xor
mov
enter
das
xchg
add
lods
cli
cld
pop
sub
jg
sbb
rol
testb
inc
addr16
lahf
xor
inc
and
sbb
sbb
cmpb
sbb
xor
pop
iret
mov
inc
xor
dec
mov
sbb
addr16
pop
out
mov
ljmp
inc
cmpsl
int3
mov
xchg
push
sub
sub
push
sti
outsb
call
add
xor
sbb
out
pop
movsl
xchg
lods
jnp
jnp
mov
in
std
push
pushf
xchg
in
lds
jmp
outsl
push
xchg
rol
lods
add
arpl
push
out
mov
jb
scas
fcmovu
xor
inc
cmp
push
and
scas
mov
cmp
add
loopne
cmpl
sub
adc
xchg
jmp
aam
jecxz
mov
push
inc
test
sti
sbb
inc
repz
jbe,pt
mov
mov
push
out
xchg
ja
lahf
jmp
mov
pop
leave
gs
call
or
in
das
lds
push
lods
arpl
ret
test
sbb
push
cmpsl
cs
and
jbe
ja
jbe
xchg
pop
pop
mov
add
mov
js
mov
lcall
stc
xchg
add
add
andl
enter
movsl
jmp
sbb
mov
inc
out
jmp
pop
aaa
inc
sbb
sbb
xchg
movsb
xchg
mov
out
xor
outsl
in
dec
fs
cmp
mov
inc
jb
addr16
pop
sbbb
and
ss
dec
mov
bound
stc
cmpsb
jp
mov
ret
outsl
or
and
cltd
jb
ja
cmp
xchg
sarl
fcomi
bound
mov
jb
adc
dec
arpl
mov
rcl
push
int
lret
repz
jo
scas
insb
jle
and
stos
jno
push
lcall
fstpt
sbb
mov
loope
pop
jle
jae
adc
leave
xor
inc
int3
sbb
scas
pop
add
add
push
xchg
pop
xor
lods
shlb
push
push
pop
xor
mov
cmp
test
lret
cli
push
sbb
mov
gs
add
adc
jno
cmp
jp
aam
mov
and
mov
mov
ja
leave
in
jg
xchg
cmpsl
arpl
into
out
cmp
pop
cmp
inc
scas
lds
sbbb
xorb
inc
dec
repz
je
mov
mov
cmp
jns
sub
stos
xchg
lcall
mov
and
gs
xor
lahf
mov
fisttpll
sub
sbb
icebp
les
xor
mov
out
push
addr16
dec
dec
mov
mov
pop
adc
mov
xor
hlt
jno
stos
mov
pop
int3
lods
sbb
adc
xchg
push
cmpsb
movl
add
dec
rorb
add
clc
loop
mov
repnz
xor
jne
xchg
cmc
outsl
inc
sub
pop
pop
dec
jne
lahf
in
jae
dec
lods
pop
pop
cld
aaa
mov
mov
dec
mov
adc
mov
sub
testl
loopne
mov
add
icebp
pop
cmc
mov
stos
adc
cltd
mov
call
dec
pop
pop
ss
fcmovb
jl
push
test
test
fildl
ds
loope
pop
mov
insl
popa
push
adc
mov
sbb
ret
mov
inc
add
xchg
test
pop
or
jge
out
dec
jl
push
loop
mov
mov
mov
in
pop
ss
out
pop
sbb
mov
dec
ja
ror
mov
jo
out
push
aaa
sbb
jecxz
and
lahf
cmp
or
imul
out
in
clc
inc
repz
sub
cli
ljmp
add
sbb
insb
jbe
mov
cmpb
xor
mov
inc
jmp
adc
loop
sub
push
sahf
mov
mov
pop
pop
push
sbbb
dec
push
mov
mov
pop
jne
push
mov
xlat
int
mov
jmp
mov
or
addl
xchg
adc
mov
cmp
ds
arpl
jl
inc
mov
es
aas
nop
int
fcomps
sub
fld1
adc
pop
inc
xor
push
aam
mov
mov
mov
jne
push
cmp
mov
dec
mov
cmpl
mov
xchg
shll
lcall
pop
pop
insl
pushf
pop
das
adc
and
inc
mov
jecxz
xchg
lcall
adc
dec
imul
sbb
jnp
adc
mov
push
lods
push
loope
idiv
jp
jp
sub
aaa
jle
popa
jo
loopne
dec
js
rclb
in
adc
sub
add
loop
sbb
repz
xchg
add
aas
clc
test
iret
popf
in
rcr
pop
mov
hlt
dec
add
hlt
push
add
push
clc
add
pushf
les
add
js
ror
mov
mov
cmp
mov
ja
inc
int3
push
scas
mov
icebp
stos
pop
xor
mov
fsubr
int3
in
fnstenv
repz
mov
sub
out
fimuls
fildl
adcb
mov
cmp
dec
adc
mov
inc
js
jmp
and
lods
pop
jge
sub
ds
rcll
scas
pop
outsl
fdivs
pop
pop
clc
mov
jb
lods
iret
push
cmpsl
addr16
cltd
test
in
dec
xchg
mov
xor
out
mov
bound
inc
mov
test
outsb
fistpll
in
shl
and
cs
pop
addr16
sbb
push
inc
shll
jae
dec
imul
inc
dec
aam
lret
lret
jo
xchg
fstps
sub
shlb
inc
les
out
xor
xor
adc
mov
cmp
xchg
jb
lock
sub
pusha
pop
das
mov
int3
xchg
inc
mov
and
out
cltd
repnz
shlb
arpl
loope
cltd
mov
lods
cmp
movsl
movsl
cli
xchg
mov
addb
popa
cmp
xor
fcomps
clc
addb
xchg
jo
xlat
sti
lret
mov
jae
dec
movl
stos
cmp
imul
scas
dec
cmp
mov
sub
xchg
hlt
je
mov
out
cmp
jb
cmp
jae
push
mov
xchg
int3
and
cld
pop
xlat
jno
adc
test
mov
cli
int
in
cmc
dec
push
pop
in
xor
jnp,pn
dec
insl
shll
jns
pop
leave
fnstcw
cmp
sub
popa
das
inc
push
ret
aad
pusha
lcall
sbb
movsl
inc
andb
insb
jl
sub
pop
sub
push
jno
add
add
mov
int3
pop
mov
imul
out
ljmp
das
aaa
push
push
movsl
aaa
fisubs
xchg
push
outsb
cmpsl
mov
stos
dec
test
filds
mov
int3
sub
sub
or
rcr
dec
lods
rorl
bound
dec
iret
outsb
ret
cmpsb
fs
pop
and
lods
add
movsl
or
mov
mov
xlat
test
mov
scas
outsl
ret
imul
cmpsl
call
shlb
xorl
mov
cwtl
adc
mov
rcrl
sbb
pop
lods
add
xor
adc
imul
mov
data16
dec
xchg
pop
mov
fists
mov
or
xlat
add
mov
pop
out
mov
out
xchg
movsb
mov
mov
push
aaa
or
and
movsb
imul
daa
sub
push
leave
daa
loop
repnz
jmp
push
daa
or
je
cmpb
mov
or
test
lret
sbb
xchg
lret
pop
scas
pop
stos
sar
sbb
aam
cltd
xchg
test
insb
je
je
iret
das
pop
dec
imul
mov
pop
std
mov
das
int
lcall
stos
pushl
pusha
add
mov
add
mov
mov
push
adc
sub
jbe
enter
mov
mov
negb
xor
dec
sbb
jo
std
push
cmp
movsl
outsb
lahf
jns
or
rcr
pop
fwait
mov
popa
aad
gs
mov
xor
ret
and
xlat
adc
rcrl
cs
xor
dec
iret
push
mov
push
cwtl
jnp
iret
mov
dec
xor
mov
mov
add
subps
rclb
mov
dec
aas
mov
mov
mov
add
dec
stc
xchg
jge
loop
or
dec
mov
push
into
lea
jns
popa
adc
jmp
fs
pop
xor
or
in
aas
and
or
xchg
and
and
push
lock
lcall
jbe
lods
fisttpl
mov
and
cmp
aam
fists
mov
mov
popa
imul
cmp
mov
mov
pop
shrb
sbb
cmc
xchg
pop
sub
lea
mov
andl
lods
xchg
push
xchg
mov
sub
int3
sbb
jnp
xchg
xor
sahf
cmc
push
cmp
xor
adc
lcall
jo
jnp
mov
lods
jp
shrl
int3
lret
imul
dec
mov
in
jne
sbb
pusha
testb
cmp
ja
lods
ja
mov
inc
repz
inc
lea
xchg
cmp
jecxz
mov
imull
aad
push
inc
mov
adc
adc
adc
mov
stos
jecxz
cmc
fcompl
xchg
pop
insb
addl
repz
enter
or
dec
lods
pop
inc
fldl
jb
sti
jno
aas
inc
cmp
ror
dec
faddl
fs
sbb
inc
push
add
xchg
jno
or
xorl
inc
xor
sarl
fdiv
movsb
mov
fistpl
fs
pop
push
out
pop
cmp
repz
gs
stos
inc
icebp
ljmp
pop
mov
fs
iret
std
mov
movsb
xchg
lret
or
in
or
xchg
aaa
stc
and
dec
xor
aad
inc
leave
dec
adc
jg
or
cmp
in
out
nop
imul
idivb
sbb
push
or
jmp
lret
xchg
add
sub
hlt
mov
jg
mov
cmpsl
lret
mov
cmp
pop
add
test
pop
pop
sbbl
out
imul
aas
sahf
lds
and
sub
repnz
pushf
inc
cmpsl
call
lea
mov
ss
psllw
aas
fwait
cmpsb
scas
imul
lret
lcall
test
ret
jecxz
das
test
mov
pop
enter
mov
xchg
lret
aas
cmpsb
mov
xchg
dec
test
push
data16
jmp
nop
insb
daa
mov
mov
mov
inc
push
push
or
sbb
int3
cld
or
mov
cwtl
imul
and
mov
and
sub
les
sbb
lods
jl
in
dec
pop
or
or
hlt
push
cmpsb
hlt
sub
mov
dec
or
inc
out
push
sti
pop
mov
adc
pop
call
shll
xlat
mov
testb
div
pop
fisubl
into
nop
and
stos
xchg
cmc
inc
dec
jo
cli
dec
sti
push
sub
hlt
dec
mov
out
xor
scas
aaa
into
xor
dec
imul
inc
lods
inc
dec
xor
movsl
sbbb
sbb
push
std
lods
jns
adc
cld
andl
adc
daa
inc
mov
stos
mov
daa
add
popa
in
or
dec
push
sub
push
pop
cmpb
mov
lock
and
in
cs
inc
shlb
cld
push
inc
jae
loope
inc
push
nop
lea
xchg
jl
or
movsb
adc
mov
int3
push
incb
aaa
mov
insl
or
or
mov
outsl
adc
ss
inc
sbbl
adc
nop
stos
sub
xor
std
cmp
jmp
push
xchg
mov
mov
ja
imul
xrelease
stos
testl
sti
mov
push
and
sarl
fistpl
pop
inc
sub
xor
pop
jae
in
aas
xor
pop
je
mov
insb
dec
movsb
ror
sub
jne
dec
sahf
mov
orb
push
mov
push
dec
call
call
std
push
lcall
lods
mov
pop
scas
scas
cmp
cmp
jge
aaa
fs
je
mov
stc
lea
xchg
jecxz
mov
aas
test
mov
and
xchg
cmp
aaa
nop
shll
jge
sti
sub
pop
je
mov
enter
out
ja
xchg
hlt
fldt
and
aam
inc
test
mov
pop
fisubl
cmc
mov
push
std
rorb
jb
inc
cld
rcrb
cltd
and
sbb
pop
into
popf
push
mov
out
jecxz
xor
rolb
jmp
in
andb
cmp
movsl
pusha
mov
push
int3
xor
call
cs
les
add
jge
and
mov
xor
mov
or
in
enter
xchg
movsb
mov
inc
or
aaa
dec
xor
push
dec
cmpsl
add
loopne
out
scas
flds
fiaddl
dec
push
lcall
jne
bound
inc
push
shlb
in
popf
test
jg
insl
mov
stc
ret
and
inc
lret
aam
inc
pop
xor
out
shr
mov
cmp
push
mov
mov
adcl
inc
sub
cmp
sub
fistpll
adc
adc
add
lods
lcall
in
mov
ljmp
xchg
mov
int3
mov
ja
cltd
cmc
add
iret
xor
push
xor
mov
dec
vpaddsw
movsl
addr16
and
dec
jb
lods
xor
clc
jae
test
test
popf
cli
scas
push
jecxz
jb
and
xchg
sub
adc
sub
xor
test
adc
test
push
mov
ljmp
or
sbb
into
mov
jle
cmc
mov
mov
and
inc
out
xchg
aaa
xor
cmpsl
dec
lods
test
loopne
outsb
and
icebp
mov
int3
das
xor
imul
lods
inc
lock
xor
push
pop
xchg
aaa
sub
jmp
shll
xlat
mov
mov
repz
imul
jg
fistpl
repnz
pop
sbb
dec
add
cli
loope
cld
or
mov
stos
sbb
popf
pop
mov
andb
jp
shlb
jns
dec
cmp
loop
fsubrl
pop
add
pop
outsl
mov
fwait
dec
mov
adc
xchg
lahf
in
dec
and
das
pop
sbb
out
int
cmp
lahf
fdivr
mov
sbb
lock
mov
fisttpl
cmp
push
xor
fldl
popf
lock
ds
cmc
mov
xchg
add
out
mov
jle
imul
aam
iret
sahf
and
cwtl
xor
cli
lcall
fwait
adc
ficoml
dec
jecxz
loop
gs
aas
scas
jb
pop
xchg
lcall
mov
aam
mov
aad
push
js
psubd
into
sub
xchg
out
mov
mov
std
in
mov
js
js
adc
les
xor
cmpsl
or
push
shlb
or
push
mov
or
jne
mov
or
xor
pop
push
adc
leave
call
xchg
movsb
mov
lcall
jge
aad
jno
cmp
ret
xor
aad
pop
dec
jg
jg
insb
xchg
push
jp
sti
push
fldt
and
stc
mov
cwtl
lods
pop
jmp
mov
imul
jp
mov
and
sbb
aam
ljmp
mov
push
les
inc
popa
jbe
sub
dec
adc
mov
fs
icebp
mov
decb
cmp
bound
xchg
aas
dec
movl
cmp
pusha
mov
cwtl
cmp
pop
test
mov
mov
je
into
mov
push
ret
shll
pusha
push
mov
sub
lea
movsb
push
insb
adc
or
roll
ret
pop
or
jbe
mov
jne
dec
xchg
rcll
in
and
xor
inc
mov
movsl
and
lahf
mov
jnp
aaa
idivl
mov
ljmp
aad
adc
sbb
test
mov
adc
pop
sbb
sbb
in
cmp
insl
lahf
jbe
add
jo
clc
lret
jmp
sbb
xchg
stc
and
andb
mov
dec
add
mov
jnp
mov
fsubr
mov
loope
push
enter
cmpsl
jo
jb
jo
mov
cmpb
xor
mov
sub
sahf
sub
inc
icebp
gs
push
in
cmp
dec
add
inc
daa
cmp
and
adc
and
pusha
cmpsb
ljmp
dec
rclb
and
cmp
negb
pushf
loop
icebp
popa
mov
int3
loop
cmc
mov
mov
pop
test
pop
stc
mov
jge
test
adc
js
and
or
and
sbb
jp
mov
sub
lcall
sub
les
jmp
insl
sbb
cmp
sub
cld
iret
out
adc
loopne
fdivrl
dec
mov
jl
jge
xor
ret
sbb
xor
push
jp
insl
mov
sbb
inc
sti
test
testb
mov
daa
jge
jo
push
addr16
mov
mov
jb
fisubrs
jge
mov
push
inc
adc
sub
pop
mov
xor
dec
add
xor
incl
push
lcall
ds
jo
sbbl
lods
stos
clc
sub
adc
subb
pop
jnp
push
pop
mov
dec
mov
jae
cmpsl
pop
stos
std
and
sbb
mov
xchg
xchg
in
enter
ficoms
pop
sbb
push
sub
xchg
out
cmpsb
fmulp
and
xchg
and
sub
stos
test
push
push
fidivs
test
test
in
out
adc
imull
ds
jne
dec
insb
addl
enter
jecxz
mov
js
cmc
cmpsl
sbb
push
jl
xor
subb
call
mov
fwait
ret
out
xchg
pushf
mov
mov
pop
add
cwtl
and
adc
call
or
in
add
and
mov
mov
xor
mov
xor
lock
mov
fmull
jg
mov
mov
adc
lcallw
fstps
test
mov
sbb
fsubl
inc
dec
movsl
adc
mov
push
xchg
testl
sti
jl
pop
nop
mov
gs
idivb
cltd
aas
pop
xorl
pop
or
mov
mov
adc
dec
mov
testl
mov
push
cmpsb
xor
orl
push
sub
push
mov
scas
xchg
xchg
sti
bnd
out
mov
cltd
jl
jp
add
or
popa
lahf
fisubrs
sbb
enter
dec
int3
outsl
and
inc
sbb
adc
insl
paddb
scas
cmp
xchg
sbb
out
mov
dec
aaa
cs
jecxz
jge
jge
ficompl
test
push
pop
insl
clc
cmp
and
es
sahf
mov
mov
loope
push
jl
adc
or
leave
and
out
out
mov
aam
sub
sbb
push
pop
mov
lahf
dec
pop
dec
leave
fidivl
dec
jo
int
xchg
fnsave
mov
popa
out
jns
pushf
cli
in
stos
fidivrs
aas
xor
cld
stc
ss
scas
dec
stos
scas
loope
cmp
mov
cmp
add
xor
xchg
xchg
push
in
ret
ret
sti
pusha
push
xor
js
lret
sbb
in
xchg
mov
xchg
sbb
adc
aad
sbb
lahf
add
or
jns
outsl
outsb
imul
push
loopne
subl
cmp
call
dec
ret
mov
imul
mov
in
add
xchg
sub
mov
xchg
arpl
add
sbb
dec
cli
sbb
mov
aad
adc
cmpsl
flds
cs
adc
xor
dec
dec
sete
nop
push
es
xchg
cltd
push
or
out
push
into
and
jl
mov
mov
xchg
hlt
pop
or
add
mov
and
in
stos
mov
xor
pop
ret
lds
add
xchg
loopne
out
mov
aaa
sub
cmpsl
inc
mov
adc
std
and
mov
lds
adc
mov
orl
xchg
jns
out
into
popl
and
jb
popf
sub
mov
iret
pop
loopne
add
jae
sub
je
xor
push
stos
not
mov
push
cmpsb
jae
mov
inc
push
xor
aam
pushf
fwait
adc
push
xor
sbb
mov
lret
cmp
mov
fstp
xchg
or
xor
push
cmp
fdivrp
sub
xor
mov
dec
dec
hlt
xchg
cmp
int3
mov
sub
ret
cmp
std
lea
testb
cmp
pop
out
push
sti
mov
mov
aas
jne
andb
jo
pop
lcall
cwtl
mov
or
loop
adc
adc
pop
jl
pop
test
arpl
pop
aam
xchg
testl
pop
orl
arpl
iret
sub
inc
aas
int
addr16
in
mov
push
les
cmpsb
stc
or
out
lock
xor
sub
popa
and
jp
loopne
int
cmp
mov
pop
hlt
or
testl
cmc
add
rclb
in
dec
mov
and
jnp
sub
lds
fidivrl
mov
xchg
ds
cmp
mov
mov
add
xchg
cmp
inc
cwtl
aad
dec
insl
mov
jmp
out
jl
push
lock
popa
sbb
sub
or
mov
push
xchg
test
xlat
xor
adc
fidivrl
inc
adcl
and
into
push
aas
clc
mov
mov
shlb
lcall
jecxz
inc
pushf
insl
mov
pop
ss
add
gs
loop
jae
and
xor
xchg
fldcw
cmp
inc
push
out
adc
mov
mov
mov
scas
inc
and
lcall
leave
add
pop
xor
int3
mov
jo
mov
adc
fcomip
jbe
adc
add
xor
add
and
sti
mov
fld
insl
sbb
fcmovnb
dec
and
arpl
enter
mov
mov
sbb
xchg
bound
pushf
shrb
mov
gs
pop
ja
dec
jg
jg
fldlg2
jmp
addl
sub
xchg
mov
sbb
push
mov
mov
jecxz
sub
or
or
sbb
lret
in
ret
adcl
dec
xchg
mov
jno
mov
jns
testl
cmp
xor
ljmp
sub
test
test
fstpt
ljmp
cltd
xchg
inc
sub
cmpsl
and
xor
xchg
push
dec
or
addr16
lds
or
mov
add
cmpsb
mov
hlt
jg
cmpsb
dec
movsl
pop
imull
test
inc
ss
addr16
int3
xchg
mov
mov
sarb
ds
sub
pusha
cpuid
push
fs
push
movsl
sbb
loope
lock
je
shl
fucomp
cmpsl
jecxz
loop
call
dec
dec
das
in
faddl
mov
xchg
inc
sbb
cli
mov
jne
and
push
movsb
popa
xlat
or
mov
in
gs
fmuls
test
ds
icebp
stos
shl
xchg
out
pop
subb
and
out
inc
outsb
mov
jo
sub
repnz
pop
stc
cmp
lcall
scas
fs
das
inc
adcb
fldt
das
dec
jnp
push
aas
mov
add
pop
add
pop
pop
in
xchg
in
push
pop
es
aad
add
mov
mov
iret
test
iret
and
jle
mov
dec
fstpl
lea
loopne
popf
xor
jge
pop
jno
cmp
fisubs
mov
mov
pop
mov
pop
cmpsl
add
nop
jb
sbb
add
orb
pusha
test
ret
adc
js
inc
cmp
into
mov
sti
xchg
leave
sbb
aam
imul
cli
mov
sub
cmp
adc
lods
cltd
out
fs
popf
das
fidivl
mov
or
cltd
lods
adc
lock
push
hlt
daa
jb
lret
jne
adc
mov
lret
xchg
or
dec
out
test
push
add
test
cld
mov
movl
les
lret
popa
xchg
xorb
sahf
push
xchg
or
jecxz
les
inc
std
lods
lahf
push
xchg
push
cmpsl
ret
mov
jle
ds
mov
arpl
pop
push
jg
addr16
cs
push
lahf
outsb
jp
cmp
mov
dec
push
xchg
subl
sti
jge
data16
popl
push
fcmovbe
fidivs
xor
sub
rcrb
sub
mov
loopne
jmp
popf
sbb
xor
cltd
imul
leave
popa
enter
push
loopne
xor
xchg
push
cmp
push
inc
xor
movsb
daa
xor
pop
outsb
ret
sub
xchg
shr
shl
push
lret
sbb
ja
in
js
inc
dec
xchg
sub
inc
leave
jmp
hlt
ljmp
add
stos
and
jmp
ss
sbb
mov
xchg
sbbb
mov
jl
scas
adc
lods
lock
xrelease
push
push
adc
cmpsb
sub
lret
xchg
sub
addr16
mov
sbb
jecxz
mov
jne
push
pop
and
popl
sbb
jge
fcomip
adc
adc
aam
js
pushf
out
mov
fs
mov
loop
test
fsubr
ljmp
mov
std
mov
jge
mov
mov
mov
cmp
inc
mov
mov
cmp
pop
push
cld
mov
and
pop
rcll
aad
test
push
sbb
shrb
lret
push
and
or
mov
ss
mov
outsl
arpl
sbb
pop
fdivrl
or
sbb
sub
push
push
sbb
pop
lock
cmp
add
and
stc
sub
aam
pop
cmp
push
jmp
sub
imul
add
cmpsl
pop
ds
or
cmpsl
adc
push
orb
xchg
repnz
sbb
mov
sub
sub
mov
fstpt
iret
xchg
jae
or
stos
sub
mov
sti
sub
sub
xchg
mov
mov
and
and
push
in
fmull
xchg
in
aam
mov
fnstsw
and
and
jno
push
mov
enter
dec
push
dec
and
adc
mov
adc
sub
xor
hlt
sub
mov
loopne
outsb
mov
inc
xor
out
pop
ja
xor
gs
pop
shld
ss
mov
arpl
sub
out
imul
je
aam
push
insb
mov
test
fnstsw
push
jae
enter
imul
daa
pushl
mov
lock
lahf
mov
shrl
iret
imul
push
hlt
pop
jnp
pop
add
shl
xor
aaa
dec
lcall
popa
adc
repnz
xchg
sbb
and
movsb
dec
cmp
or
mov
xor
lret
mov
inc
fildl
jno
test
jecxz
dec
cmpb
push
xorb
jg
pop
push
jle
adc
push
iret
mov
mov
movsb
loopne
ss
es
jle
adc
or
test
movsb
jge
and
add
popf
xchg
and
mov
stc
or
std
xorb
loope
and
das
and
rcll
clc
gs
repnz
pushf
lds
loope
ret
outsb
mov
nop
in
shrb
imul
cld
imul
push
jmp
mov
js
in
or
adc
ficomps
jl
test
out
push
mov
inc
imull
call
out
rclb
push
sahf
fdivrl
lret
jne
scas
jb
rorl
push
pop
mull
mov
ficoml
mov
add
ljmp
sub
push
insb
pop
repz
ljmp
push
add
aaa
jp
lock
or
lock
jnp
add
push
jns
sub
scas
or
test
cmpl
imull
movb
pop
add
sub
jne
xchg
sub
les
jbe
jecxz
jl
fdivl
push
andl
mov
jecxz
pusha
addr16
adc
stos
inc
push
mov
out
or
mov
ljmp
or
iret
enter
or
dec
insl
mov
add
ljmp
lret
sub
add
iret
loopne
xor
xor
push
cmpsl
pop
sbb
mov
dec
jbe
xor
pusha
mov
fwait
stos
jbe
push
arpl
aam
in
xorb
cmp
and
ret
jbe
cmpsb
movsb
hlt
bound
cmp
xor
jb
push
cmpsb
add
cmp
xchg
adc
insl
and
sub
ljmp
xchg
sbb
mov
jle
lds
cmp
mov
out
pop
sbbl
dec
pop
adc
fwait
inc
sbb
sbb
push
nop
jne
leave
xchg
adc
xchg
inc
fidivrl
mov
add
repnz
mov
aaa
aas
ja
in
dec
xor
loope
ljmp
lea
outsb
dec
cmp
bound
cltd
insl
push
sub
arpl
pusha
or
les
adc
xchg
push
sbb
or
and
stc
sbb
in
mov
out
addr16
shrb
cli
mov
push
enter
mov
jns
cmc
popa
gs
add
pop
sub
jbe
sbb
enter
adc
orb
pop
cmp
mov
lret
out
mov
stos
dec
loope
push
xchg
push
out
push
adc
int
xor
or
push
ret
jle
lods
clc
frstor
mov
lret
mov
ja
daa
dec
popa
decb
jg
leave
lcall
aaa
mov
sbb
test
in
inc
dec
imul
mov
add
pop
fwait
add
jg
mov
notl
clc
xor
inc
push
cmp
jno
rcrb
or
or
bnd
repz
and
xor
push
sbb
fisubl
lret
mov
sbb
sub
xchg
lods
lds
lret
test
inc
pop
jbe
pop
cmp
ret
sar
dec
xchg
mov
testb
or
scas
jae
adc
and
lds
jns
pop
popa
int3
push
push
push
in
cmp
aas
push
dec
rorl
xor
rcll
mov
or
xchg
adcl
pop
scas
adc
push
in
test
xchg
scas
sar
notb
repz
cmp
shrb
mov
or
cltd
sub
insl
mov
push
mov
mov
jg
call
mov
shlb
fnstenv
jb
push
imul
sbb
inc
pop
outsl
pop
imul
xchg
das
sbb
test
pushf
test
cmp
push
add
dec
push
jno
and
xor
mov
in
sbb
mov
iret
arpl
pop
adc
mov
enter
dec
add
pop
cmpsl
cltd
sbb
cmp
cwtl
jmp
push
pop
dec
enter
flds
in
scas
dec
daa
sahf
das
dec
xor
inc
shlb
cmp
data16
data16
cmp
fldt
outsl
daa
add
nop
fwait
int
push
mov
dec
mov
mov
cmp
mov
push
fs
pop
insb
push
mov
adc
fstl
push
arpl
xor
xchg
out
mov
ds
insl
mov
int
mov
mov
cli
sub
jp
sbb
xor
xor
pop
mov
inc
movsl
ror
cmc
fdivr
movsb
das
jb
xchg
and
inc
push
jecxz
fwait
sbb
fstpt
add
fimull
in
mov
and
outsb
sbb
jmp
enter
mov
dec
hlt
push
ljmp
fcmovnb
push
pop
dec
mov
xchg
jecxz
ret
pop
sbb
sub
push
jne
adc
pop
jno
inc
or
iret
cmp
in
loopne
jle
cmp
pop
ja
and
mov
inc
das
mov
or
ret
xor
mov
sub
sarl
inc
inc
dec
out
sub
push
clc
les
sbbl
mov
ljmp
sti
inc
out
inc
fsts
and
orl
sbb
jns
imul
pop
out
pop
cmpsl
mov
and
mov
in
mov
push
push
mov
mov
or
dec
std
stos
push
enter
jmp
mov
and
and
push
pop
and
xchg
sub
repnz
add
mov
jns
sub
jnp
aaa
imul
jns
sub
test
and
push
sub
adc
mov
mov
insb
ja
loop
dec
cltd
sub
mov
jno
gs
icebp
and
in
jg
pop
fwait
repz
adc
pop
sub
cmp
dec
ljmp
sbb
cwtl
mov
xor
rol
fnstcw
outsl
xchg
add
ficoml
sub
add
push
push
adc
outsl
and
pop
pop
xor
fst
push
xchg
mov
adc
pop
loope
psllq
or
xor
daa
dec
imul
push
lods
add
bound
or
cmp
push
popa
jge
repz
dec
in
test
and
dec
lret
xchg
shll
xchg
dec
mov
sbb
andl
dec
xor
pop
jns
and
and
cmp
jp
xchg
pop
mov
jecxz
outsl
jns
push
out
into
ds
jne
fldt
fsubr
push
test
jno
out
ficompl
fwait
xor
mov
push
jl
int3
faddl
adc
or
loope
mov
loop
jno
sub
mov
dec
sub
int3
or
repz
mov
cmpb
ret
lods
repnz
pop
test
push
dec
cmp
jle
mov
mov
or
cmc
xor
cs
sub
shrl
sub
cld
lods
cmp
jno
cmp
cmp
lods
sbb
pop
cmpsl
lret
push
adc
repnz
or
rcll
xchg
xchg
shr
pop
js
and
icebp
adc
cli
mov
jbe
pop
mov
in
jp
ss
jo
pop
dec
mov
push
dec
sbb
loope
cmp
fistl
scas
jle
outsl
in
pop
arpl
push
das
pop
sti
cmp
sub
cmp
jb
lahf
shr
and
mov
js
inc
xchg
mov
mov
mov
inc
xchg
jl
mov
or
push
mov
dec
jg
push
and
adcb
mov
repnz
push
test
pop
fwait
nop
add
xor
inc
jp
push
std
mov
mov
xor
push
jp
pop
sub
neg
in
sbb
into
cmpb
xchg
jo
xor
xor
jns
pop
mov
inc
dec
mov
pushf
push
dec
outsb
xchg
sbb
add
pop
mov
lret
movsl
inc
jecxz
sub
xchg
jl
roll
shlb
inc
lret
sbb
or
insw
call
inc
aaa
cmp
ficoms
rol
mov
das
add
xor
cwtl
neg
dec
test
pop
xchg
popf
dec
lret
cmp
mov
fsubl
repz
scas
ljmp
mov
ss
or
leave
push
add
lret
cmpsl
in
mov
das
or
mov
xchg
ret
or
add
loope
mov
jae
mov
lds
xchg
xor
pusha
sarl
movsl
imul
aaa
lods
push
mov
pop
add
enter
das
mov
xor
mov
dec
sbb
push
lods
jge
orb
lret
mov
lods
aaa
sub
sbb
mov
or
js
in
sti
pop
jecxz
xchg
mul
push
loope
pop
outsl
push
inc
ret
into
pushf
or
out
enter
outsl
jle
lcall
out
cmp
les
lods
sub
xchg
gs
sub
cli
push
xor
adc
mov
scas
test
mov
repnz
lret
test
jle
cmp
out
fld
adc
xchg
mov
sti
sub
dec
cmc
cmp
dec
loop
push
in
aaa
lods
or
xchg
lahf
enter
jle
push
mov
lock
sbb
xor
cltd
lahf
out
aas
dec
addr16
sarl
into
fsubr
rcrb
std
push
xor
lods
xor
dec
push
pop
std
bound
cli
jg
cmc
repz
cmp
test
popf
pusha
cs
ds
iret
mov
push
into
push
xor
add
loopne
mov
test
xor
sub
sbb
and
imul
fldl
xchg
cmp
push
sbbb
mov
imul
lret
fcmovbe
les
push
das
inc
lock
dec
cmp
cld
dec
and
mov
jae
mov
adc
lds
ficoms
fstps
frstor
jle
jbe
add
inc
popf
jns
js
fs
cld
std
sbb
into
add
sub
mov
cld
inc
dec
sbb
addr16
shr
cmp
addr16
repz
shrb
ljmp
jg
hlt
mov
adc
lcall
outsl
jne
pop
out
mov
int3
ret
mov
imul
in
dec
cmp
gs
push
scas
inc
rolb
iret
xchg
mov
mov
pop
and
jecxz
or
stc
mov
fs
inc
cwtl
cmpsb
push
pop
rcl
adc
pop
mov
cmpsb
lods
jmp
outsl
scas
mov
popa
dec
adc
mov
sti
rcl
das
sti
js
xor
cld
into
dec
push
cmp
test
aaa
lret
inc
jnp
loop
dec
jmp
sarl
fsubr
call
adc
cmp
pop
clc
sub
pop
hlt
lret
cmc
pop
ds
jp
fcompl
stos
push
mov
push
lret
mov
push
xorb
mov
cmp
dec
push
push
xchg
dec
and
or
add
sbb
ja
cmp
rcl
inc
cmpsb
sbbb
lea
mov
sub
ficoms
negb
gs
mov
jmp
cmpsl
std
cmp
lcall
call
stos
ret
ucomiss
pop
cmp
mov
mov
mov
cwtl
push
pop
ret
repnz
scas
outsl
mov
xchg
xor
jnp
pop
and
imul
mov
lea
popf
std
xchg
cltd
in
and
cmp
push
lcall
pop
add
mov
movsl
add
cmp
mov
or
cmp
in
clc
xchg
popa
hlt
cmp
pop
ficoml
pop
stos
mov
or
mov
icebp
pop
int
mov
jg
xor
jmp
xor
movsb
add
push
mov
fs
aas
xchg
insb
test
add
andl
pusha
stos
sub
and
sub
mov
testb
pop
xchg
enter
or
and
pusha
jb
pop
cmp
cs
cltd
ficomps
dec
mov
sbbl
inc
and
cmp
out
lods
push
cltd
push
cmc
sti
mov
es
es
shll
movsb
cmpsl
mov
adcl
les
pop
ret
add
shlb
ljmp
icebp
inc
inc
jo
out
mov
fdivrs
xor
mov
push
lahf
popf
out
mov
push
mov
nop
cmp
ljmp
add
dec
push
mov
scas
stos
mov
aam
dec
jae
lar
insl
xchg
pop
adc
inc
push
cmpsb
ljmp
hlt
loopne
popa
mov
call
sbb
mov
cmc
dec
hlt
mov
lret
xchg
ss
xorb
mov
pop
test
cs
add
push
add
push
mov
mov
stos
mov
xchg
xlat
addb
xlat
bound
push
mov
ret
push
push
in
and
dec
pop
cwtl
xchg
leave
repnz
mov
lret
jne
inc
inc
leave
rorb
imul
xor
and
je
mov
adc
adc
icebp
cwtl
ret
cmp
and
popa
cmpsb
and
inc
sub
pop
iret
inc
lret
insb
aam
js
repz
shll
mov
js
fnstenv
xor
xor
clc
pop
fiadds
xchg
imul
testl
call
add
mov
pop
sti
mov
jl
cmp
mov
rcll
xor
dec
pop
fwait
iret
sub
ficompl
mov
and
in
es
idivb
add
mov
outsl
push
roll
shl
lcall
mov
cmc
ja
push
jnp
jno
push
pop
adc
rep
dec
pushf
cmpsb
mov
pop
adc
adc
int3
fucomp
cmp
movsl
ret
sbb
mov
out
mov
jmp
enter
mov
call
mov
add
in
fs
mov
andb
mov
push
sub
xlat
mov
insb
out
pop
lds
fiadds
and
jne
aam
cs
adc
inc
lock
and
negl
loopne
scas
in
aas
jg
clc
js
lds
repnz
and
push
dec
sbb
and
adc
xchg
into
lea
inc
lcall
mov
xchg
bnd
mov
inc
push
test
data16
xor
mov
push
dec
cmc
mov
cmpsl
es
arpl
cmpsl
mov
shr
fcmovne
ja
add
mov
mov
or
bound
outsl
daa
pop
pop
jmp
fcmovbe
push
adcb
imul
lods
out
jecxz
cmpsb
add
loope
es
shll
inc
stos
leave
test
lds
or
enter
cmp
inc
rclb
push
pop
fcmovnb
cwtl
and
inc
push
and
out
pop
mov
pop
vmovupd
lcall
or
sbb
cmpsl
loopne
sbb
iret
loop
int
out
mov
lods
int
dec
xlat
jnp
and
sbb
cmpsb
rcll
push
call
inc
push
ror
jns
rcrb
mov
das
or
sti
or
arpl
hlt
mov
dec
sub
xlat
lret
repz
add
shll
in
out
cmp
sub
mov
dec
mov
cmp
xchg
adc
lret
mov
lods
push
loope
notl
je
leave
ficoml
sbb
ret
popf
push
mov
and
sbb
insl
fstl
lods
mov
cltd
mov
jnp
mov
jecxz
xchg
shrl
cmp
pop
inc
in
adc
insl
pop
or
insb
es
adc
inc
sbb
inc
push
push
push
push
push
fnstcw
lret
mov
mov
outsl
push
or
iret
adc
xorb
add
aaa
inc
cmp
dec
pop
arpl
sbb
mov
cltd
inc
je
inc
clc
gs
call
xor
pop
aad
pushf
in
jbe
cmp
lock
fmuls
jns
addr16
adc
add
and
sub
lods
cmp
sbb
inc
adc
mov
or
cwtl
jae
lock
sbb
mov
jne
sub
pop
push
cwtl
jmp
js
arpl
mov
mov
popl
and
int3
popa
insb
push
lods
sahf
pop
sbb
mov
pop
popf
push
lea
nop
int3
mov
fsubs
mov
aas
stc
loope
jecxz
mov
jno
and
adc
test
xor
add
gs
out
imull
pop
mov
popf
shlb
out
sbb
cmp
dec
push
and
orb
sti
jmp
mov
cld
mov
das
test
in
cmp
xchg
xchg
arpl
mov
jg
movsl
pop
stc
sub
enter
xor
fldl
sub
das
sub
data16
dec
leave
inc
cltd
rcl
inc
jle
or
in
ds
jge
test
pop
mov
stc
add
jg
adc
test
rorl
add
xchg
mov
mov
push
sub
sub
sbb
and
adc
jl
ret
jecxz
inc
push
int3
mov
fdiv
push
call
loop,pt
aaa
loopne
test
pop
scas
out
dec
imul
cmp
sub
mov
es
or
mov
sahf
leave
inc
cltd
mov
mov
mov
fiaddl
xor
xchg
mov
scas
xchg
jg
aaa
repz
fdivrs
cli
and
sub
jge
sub
add
adc
cmpsb
bound
xchg
fdiv
jae
lret
jbe
or
mov
mov
ret
mov
aas
xor
cli
inc
lea
mov
cmc
inc
inc
rorb
adc
call
dec
and
rcll
inc
es
stc
into
and
push
pop
pop
mov
jnp
loopne
or
outsb
push
xlat
push
cmp
int
popa
add
es
xor
imul
mov
xchg
fidivrs
push
adc
add
adc
int
and
jp
mov
sbb
or
jnp
popf
fistpl
fcoml
cmc
mov
xchg
mov
fiadds
sbb
mov
jo
xor
fisubrl
mov
outsb
outsl
es
orl
or
sbb
mov
mov
push
push
in
in
insl
lea
movsb
and
in
sbb
shll
pop
mov
or
cmp
rorb
pop
pop
add
fwait
jmp
add
loop
dec
pop
pop
or
sub
shl
pop
dec
bound
xchg
pop
inc
and
int3
jg
imul
lods
mov
in
cmpsb
jno
loopne
stos
in
jecxz
jnp
pushf
popf
cs
pop
push
pusha
cmp
sbb
xlat
xor
add
jne
adc
and
sub
cld
ret
popa
loopne
mov
sbb
shlb
cltd
aas
addb
repz
sub
movsl
ds
jmp
xor
js
sbb
mov
xchg
inc
add
xor
push
cwtl
xchg
mov
aad
mov
arpl
fstl
imul
sbb
sbb
sbb
orl
test
xchg
dec
faddl
cmp
xchg
out
sarb
xchg
jl
and
xor
mov
jo
shl
xchg
push
mov
bswap
mov
dec
lret
imulb
fiadds
lea
inc
cmc
dec
dec
cmp
scas
xchg
mov
rclb
mov
lcall
xor
mov
test
or
gs
stos
sbb
pop
inc
pop
insb
xchg
daa
gs
sbb
pop
sti
jg
rcrl
aad
cmp
out
inc
fs
and
xchg
sti
jmp
sti
and
adc
mov
lods
aas
in
pop
push
or
and
divps
or
ficoml
pop
xor
pop
mov
lock
shl
sub
in
or
or
add
pop
push
sub
push
sub
fld1
sbb
jecxz
pusha
negb
adc
out
arpl
xor
xor
mov
adc
xchg
rol
pop
ret
jmp
mov
cmp
or
or
xor
inc
fs
jns
push
arpl
jbe
mov
vphaddubq
in
cmp
adc
cmpsb
pop
xchg
adcb
xor
fnstcw
mov
ret
hlt
mov
iret
imul
outsl
jge
ljmp
lock
xor
aas
mov
in
xchg
insb
and
mov
and
testl
lretw
movsb
sbb
stos
out
inc
movsb
sbb
rcr
mov
mov
jle
sub
fwait
xor
xlat
push
dec
adc
mov
jp
in
mov
adc
dec
test
and
ds
sub
test
fs
cmp
push
lcall
adc
les
repnz
popa
fimuls
jne
fnstsw
scas
clc
or
nop
or
andl
inc
push
fs
inc
psubsb
es
xor
sub
std
xchg
outsl
cmp
jnp
jne
popf
imul
xor
in
stos
out
clc
dec
add
sub
mov
push
test
pushf
adc
insl
aam
popa
push
mov
pushf
inc
or
push
scas
aad
testb
xor
dec
mov
jmp
pop
cmp
iret
push
int3
inc
sbb
xchg
outsb
cmpsl
sbb
insb
xor
pop
popf
dec
inc
dec
cltd
addr16
xchg
adc
xchg
movsb
push
inc
xor
xchg
jo
xchg
loop
push
and
sti
call
pop
nop
inc
in
dec
push
mov
inc
dec
std
cmp
arpl
faddl
push
arpl
outsl
bound
nop
push
jecxz
inc
jo
sbb
jp
mov
sub
push
dec
ret
ss
out
jo
loopne
xchg
add
sub
add
xchg
iret
in
fidivs
sahf
test
xor
mov
jg
pop
mov
push
jge
scas
push
ret
insb
sbb
sbb
std
loop
xadd
cld
xchg
out
ss
inc
inc
push
lea
and
push
inc
insl
int
adc
push
jp
pop
push
and
lods
mov
aaa
pop
icebp
loope
rorl
loope
jne
in
mov
and
cld
cmp
testb
dec
or
jne
movsb
mov
mov
aas
fisubrs
sub
xor
mov
xchg
pop
lret
and
sbb
jge
dec
mov
jo
mov
push
popa
in
adc
inc
shrb
aad
das
fstpl
addr16
push
mov
outsl
push
xchg
pop
icebp
mov
pop
mov
sbb
roll
push
mov
push
xchg
in
add
adc
or
xchg
outsl
mov
mov
xchg
stc
movsl
bound
jle
jmp
sub
inc
movsb
xchg
daa
push
pop
pop
stc
out
ds
fmulp
repnz
mov
sahf
push
lret
js
insl
mov
mov
mov
in
icebp
add
and
loop
fisttpll
aad
test
mov
pop
out
cmpsl
movhps
insb
inc
sarb
pop
aaa
in
push
xor
mov
jecxz
fnsave
xchg
sbb
cmp
cld
xchg
fldenv
cmp
out
xchg
xor
lds
pushf
ret
xlat
hlt
insl
shl
decl
lea
adc
adc
xchg
movswl
fldt
cmp
popf
scas
and
hlt
or
ja
or
add
jmp
bound
pusha
inc
and
push
mov
sbb
jl
sub
mov
nop
xchg
or
movsl
mov
jne
ret
xchg
cmp
mov
mov
iret
enter
outsl
inc
sahf
insl
sar
sbb
sbb
je
lods
mov
mov
inc
and
lret
outsl
movb
pop
fidivrl
cmp
sahf
mov
push
pop
xor
mov
repz
mov
fcompl
in
cmp
in
and
call
mov
cmpsl
mov
fsts
test
xor
and
or
sub
mov
inc
sbbl
add
jecxz
mov
xchg
int3
pop
in
jno
add
lret
rorb
movsl
cmpsl
into
or
pop
loope
xchg
test
jmp
insl
rorb
insb
test
fwait
inc
in
mov
sbb
std
or
lcall
iret
into
lret
stos
push
or
mov
jmp
fndisi(8087
mov
daa
mov
cmp
push
fdivr
inc
daa
cltd
fiadds
loop
loop
das
ret
movsl
insb
data16
addr16
mov
lret
add
mov
jle
push
test
inc
and
jnp
ficoml
call
ret
xor
icebp
cmp
fbstp
jae
enter
jg
jle
aam
aaa
jns
jmp
inc
hlt
test
push
add
jae
mov
push
push
lcall
push
or
mov
pop
popa
jl
jle
fwait
cs
jno
push
loope
mov
in
stos
and
push
pop
cmp
movsb
add
fimull
movb
mov
adc
dec
enter
and
xchg
mov
jae
js
cmpsb
mov
scas
jbe
test
in
dec
jecxz
mov
lea
int3
cmpb
ljmp
mov
xchg
adc
imul
and
mov
daa
pop
aad
jl
loope
packssdw
fstpl
or
cs
dec
push
das
in
pop
jae
fcomi
add
loop
andl
pop
xchg
jae
sahf
jp
inc
dec
xchg
dec
icebp
pop
or
inc
push
dec
sbb
or
int3
cs
and
addr16
je
imul
imul
cmp
pop
or
jno
mov
adc
call
test
adc
scas
adc
and
push
arpl
sbb
or
push
or
dec
and
mov
adcb
fcompl
jne
dec
imul
fstl
scas
rorb
push
jo
add
mov
jb
dec
call
shlb
mov
icebp
fbstp
jmp
lds
inc
sti
idivl
test
dec
imul
jle
dec
fmulp
and
nop
push
std
push
or
sahf
mov
xor
add
out
cmp
in
sub
inc
mov
test
popl
sbb
push
jo
imul
rcrl
cwtl
mov
out
je
mov
fwait
xchg
lods
ja
out
xchg
dec
scas
inc
mov
cmp
inc
lea
cltd
add
lods
jb
jne
std
ljmp
test
xchg
push
shl
pushf
lock
mov
xchg
cmc
pop
sbb
add
cmc
fisubrs
lcall
jmp
out
nop
testl
push
repz
and
pushl
mov
enter
mov
test
inc
add
int
lods
xor
repz
or
lahf
jne
enter
sahf
addr16
pop
mov
sub
adc
xchg
or
imul
jae
push
gs
sbb
insb
fidivl
sub
lret
les
sahf
cs
push
pop
jl
inc
dec
push
out
in
pop
test
cmp
out
lea
cmp
mov
stc
xlat
lds
xchg
and
cltd
push
sahf
cmp
insl
xchg
les
fdivr
jg
invd
out
cmp
lret
pop
and
es
cli
dec
xchg
inc
mov
mov
sbb
jmp
lahf
jne
out
iret
aam
out
fldl
dec
jns
idiv
inc
xor
mov
fnsave
sub
jbe
inc
xor
imul
mov
xchg
push
xor
inc
lods
and
icebp
subb
push
je
add
fisttps
jp
xchg
dec
dec
push
in
cmpsb
cwtl
cltd
xor
pop
insl
add
dec
and
fimuls
out
and
dec
jl
std
shl
pop
sti
jecxz
fmul
push
jp
mov
push
inc
jecxz
test
dec
addr16
inc
fsubr
mov
mov
ja
mov
repz
mov
jnp
int3
mov
adc
mov
push
fldenv
pop
nop
inc
add
int
mov
add
push
dec
imul
push
pop
or
inc
sub
add
mov
mov
cmp
fstpt
in
push
inc
xchg
mov
fimuls
push
lret
cld
sub
mov
insl
cli
cmpsb
divl
push
inc
xchg
push
push
lcallw
mov
fsts
pop
push
adc
or
cmp
and
inc
push
and
repnz
or
lds
pop
arpl
out
lock
inc
xchg
lcall
mov
orb
std
outsb
pop
outsb
jno
mov
cltd
in
adc
xlat
mov
mov
xor
movsb
fs
out
mov
icebp
sub
fwait
mulb
jo
hlt
push
push
add
jmp
jmp
imul
out
dec
xchg
into
push
movsl
mov
sbb
sbb
xlat
pop
cs
mov
sti
xchg
jno
cmp
mov
test
cltd
inc
xor
xchg
jb
cmp
inc
xchg
jns
cmpsl
or
nop
mov
jl
dec
rcl
subl
adcb
push
add
out
in
and
mov
mov
xchg
das
jb
jnp
orw
sahf
adc
fs
in
xchg
pop
jmp
jl
fistps
lahf
jne
outsb
cmp
popf
mov
add
push
nop
cmc
aam
out
mov
stos
insb
pushf
push
insb
jmp
scas
push
sub
xchg
add
adc
dec
cltd
push
inc
std
xor
fdivs
pusha
push
sbb
sub
insl
fstl
push
fdivl
call
jns
out
xor
outsl
mov
mov
sbb
mov
mov
in
pop
mov
mov
scas
mov
mov
inc
pop
psubw
pop
mov
and
std
lea
test
or
pop
mov
xchg
imul
cmc
stos
bswap
mov
icebp
adc
mov
aam
xchg
in
lods
pop
dec
pop
jae
aad
daa
or
in
ss
xor
cmp
dec
xchg
enter
xor
mov
jecxz
xchg
mov
pop
add
pop
sub
sub
popa
enter
inc
mov
rcll
std
cmp
or
stc
addr16
and
repz
or
out
mov
jbe
and
fidivrs
sub
sti
mov
xchg
stos
mov
jae
jo
scas
sub
jae
mov
imul
pushf
sbb
mov
xchg
jcxz
cmpsb
outsb
cmp
jp
add
sbb
or
adc
jle
mov
sbb
pop
sbbl
or
cli
adc
hlt
loope
cmp
add
or
pusha
inc
mov
aaa
hlt
ret
push
cmc
jne
loopne
jb
rorl
sti
sub
push
or
xchg
pushf
adc
sbb
add
ss
inc
mov
xlat
cmp
mov
mov
mov
addl
out
loopne
jl
xlat
inc
in
inc
mov
in
sbb
shrl
mov
in
fwait
test
aam
inc
cmp
and
push
movsl
jmp
jmp
movsl
add
jo
adc
push
repz
dec
jo
jg
fstpt
jge
push
mov
fnsave
adc
addl
insl
jno
lock
call
addr16
push
aaa
ss
add
inc
cmpsb
add
scas
fadds
popf
jg
or
in
pop
sbb
negb
mov
gs
daa
in
sahf
outsl
aam
ret
push
frstor
add
dec
loopne
inc
fistpl
inc
lods
cli
sub
scas
add
in
loop
adc
push
imul
movsb
cmp
adc
and
sub
mov
leave
xlat
call
pop
pop
repz
mov
shl
add
or
sub
daa
lret
push
push
mov
mov
inc
dec
sbb
xlat
push
fldt
stc
inc
xor
into
sub
call
pop
and
xor
jno
popa
mov
sbb
adc
out
mov
enter
out
imul
or
out
xchg
ljmp
xchg
mov
imul
push
cltd
stos
mov
sti
xchg
cmc
in
filds
fs
dec
add
and
mov
cld
push
imul
or
sbb
and
pop
and
lods
xor
sahf
shrb
jge
xor
mov
xorb
or
icebp
mov
mov
cmp
fists
mov
cmp
mov
mov
repnz
fadd
jo
jecxz
pop
mov
test
cmp
jne
pushf
xor
push
dec
push
dec
out
adc
mov
jge
inc
movsb
xchg
or
cmp
int
push
fs
mov
or
or
xchg
stc
mov
rcr
xchg
imul
int
mov
jp,pn
pop
jno
ljmp
lods
push
in
insl
inc
sub
xchg
sub
stos
test
loope
or
mov
pop
roll
jns
lahf
dec
add
sbb
push
mov
and
sbb
loope
push
dec
cmp
aad
dec
push
je
sahf
insl
adc
xchg
in
pop
cmc
jmp
out
adc
push
imull
xor
mov
arpl
js
subb
sub
fwait
push
mov
or
std
pop
sub
ds
out
mov
inc
mov
lds
push
push
push
popa
gs
cmpsl
test
mov
xor
sub
push
mov
iret
pop
add
filds
sti
ss
jp
or
jns
into
xchg
push
clc
push
js
ja
in
jae
mov
jle
fnstenv
in
lcall
jg
mov
mov
pushf
xlat
js
in
sub
dec
dec
xlat
pop
xchg
mov
lcall
pop
xchg
add
pop
aam
roll
mov
dec
pushf
and
out
subb
pop
jne
sbb
sahf
inc
movsl
out
sbb
je
es
std
rolb
mov
cmp
or
imul
cmp
je
int3
or
ja
dec
pop
aaa
or
pop
dec
xchg
pop
mov
repnz
call
stos
out
inc
js
jle
inc
mov
pop
adc
stos
stc
sub
pop
pusha
repz
pop
xor
ja
stos
popa
dec
mov
lea
add
pop
push
shr
shrb
mov
aad
sub
and
imul
sub
sbb
fimuls
mov
enter
inc
lea
orl
fadds
push
sar
aam
push
lea
ljmp
inc
test
flds
shll
adc
and
sub
pop
sahf
xchg
idivl
jo
sub
mov
inc
arpl
leave
rcll
push
movsl
pop
cmp
lcall
stc
push
xchg
fbld
xor
dec
add
pushf
xor
add
shrl
adc
fwait
aam
divb
in
in
lods
rcrb
jge
mov
mov
adc
push
cmp
insl
jo
sahf
ds
mov
scas
fwait
mov
cmp
fldcw
inc
mov
aaa
movsb
jo
xlat
cmp
xchg
shll
movsl
loopne
lods
push
push
lahf
stc
adc
pop
mov
and
add
aas
inc
stos
cmpl
jp
sahf
outsl
out
test
mov
pop
and
movl
jge
addl
ficompl
cmp
inc
in
adc
or
pop
imulb
fwait
dec
sub
jo
retw
in
add
outsb
shll
cmc
jmp
xchg
sbb
mov
sti
push
test
sbb
loop
xor
cli
orb
out
stc
loop
push
adc
xor
adc
subl
xchg
sbb
sbb
jp
rep
cmpl
or
mov
mov
xor
into
mov
push
sahf
mov
mov
rorb
loopne
mov
in
jne
sbb
inc
in
dec
cmp
mov
rcrb
sub
sbb
cmp
lds
fwait
adc
or
pop
sbb
jle
sub
pop
fs
popa
sub
imul
pop
or
jle
aaa
or
loop
pop
repnz
and
sbb
pop
addb
frstor
ret
jl
mov
inc
sbb
sbb
or
push
cmp
cmp
test
jecxz
jb
mov
cld
add
les
inc
test
fnstsw
push
add
scas
xor
mov
push
gs
sub
out
enter
jecxz
int
xchg
xchg
dec
inc
je
test
jb
mov
clc
or
stos
lret
jo
inc
lods
cmpsb
xor
xor
mov
jbe
and
xlat
jbe
lcall
mov
test
dec
mov
arpl
dec
mov
ret
loopne
fcmovb
loopne
adc
cmp
sti
sbb
les
adc
adc
pop
bound
jge
inc
sahf
adcb
js
leave
adc
popa
pop
cmp
divb
and
pop
filds
aam
and
cmpsl
mov
sbb
xor
stos
xchg
stc
fsts
test
mov
sbb
inc
cmpsb
loopne
lods
aaa
stc
push
sti
imul
sub
aam
sbb
pusha
les
gs
jmpw
push
ror
sub
jmp
jle
sbb
xchg
sbb
je
jne
std
mov
sahf
outsb
xchg
sub
xor
pop
aaa
sbb
xchg
pusha
dec
cwtl
sarb
mov
xor
cmpl
push
or
mov
and
xchg
mov
ss
cmp
dec
xchg
sbb
imul
inc
repnz
xchg
cld
mov
pop
test
icebp
mov
mov
pop
push
stc
neg
bound
adc
add
mov
mov
add
lahf
out
adc
out
add
push
out
ja
mov
addr16
jge
cmp
arpl
mov
push
cld
inc
adc
add
jecxz
lods
sbb
ja
iret
pop
sbb
leave
and
lret
and
ds
sbb
into
mov
sub
cmpsl
dec
xor
sar
xlat
cs
icebp
arpl
mov
adc
dec
fcoml
sbb
popf
test
ffree
stc
pushf
ljmp
jne
or
sbb
popf
mov
inc
mov
dec
xchg
les
adc
add
arpl
iret
pop
stos
push
xchg
imul
push
out
dec
and
mov
jecxz
lret
scas
mov
cmp
inc
cwtl
in
test
enter
dec
cld
dec
in
pop
in
push
rorl
xchg
jne
mov
adc
adc
out
mov
jg
test
xchg
mov
mov
fdivrs
fldl2t
mov
clc
stos
pop
mov
and
enter
sub
hlt
mov
loope
les
add
test
push
dec
sbb
ja
bound
mov
fnstenv
and
sbb
and
add
lret
divl
lods
mov
les
jmp
fcomps
mov
scas
mov
sahf
push
in
hlt
push
loop
fstp
imul
mov
sti
repz
cmp
add
mov
mov
ljmp
cmpsl
js
pop
es
sub
xchg
fstpt
or
inc
dec
aad
clc
push
push
outsl
out
cmp
insl
icebp
out
outsl
push
fnstcw
icebp
sbb
lea
clc
rorl
test
fsubl
sub
xlat
inc
cmp
jp
insb
nop
mov
sbb
add
fisttpll
arpl
mov
inc
fmull
xor
jns
lods
aaa
mov
fwait
sub
push
sbb
mov
sub
dec
loop
test
xor
sbb
fbld
pop
repz
dec
push
adc
loopne
adc
jo
addr16
xor
xlat
or
inc
sub
fcmovnb
cmp
imul
mov
hlt
andb
or
and
gs
call
mov
dec
pop
fsts
mov
je
adcl
push
sbb
nop
mov
aaa
test
and
sbb
test
xchg
mov
sbb
pop
sub
movsb
cmpsl
sarb
out
or
jb
testb
data16
imul
lret
scas
sub
fcom
pop
fldenv
loop
jo
orb
mov
sub
es
repz
xorl
mov
jns
xchg
dec
pop
daa
lods
mov
lock
shlb
aas
or
sbb
xchg
inc
insb
orl
mov
iret
repz
int3
addr16
ds
jno
cmp
psubb
mov
ss
mov
bound
and
je
stos
push
fstps
sti
ds
inc
lea
je,pn
push
jne
mov
xor
fistpl
xchg
into
clc
jle
adc
push
jle
in
and
aad
stos
xor
or
inc
int3
addr16
xor
push
aad
pop
cmp
outsb
pop
xor
dec
sub
rcrl
adc
or
outsl
add
sub
inc
imul
xchg
sub
psubsb
fmulp
stos
xchg
rorb
inc
arpl
fists
jb
cli
jbe
insl
loopne
rcrl
popa
add
insb
adc
test
sub
or
js
pop
mov
or
fmuls
jge
mov
jae
adcb
aaa
sub
lret
jp
jl
mov
cmp
adc
stc
mov
push
cmc
cmp
pop
stc
loopne
insb
orb
rol
push
call
outsb
xchg
xchg
mov
mov
dec
cmp
out
in
mov
je
dec
pop
imul
push
push
pop
lods
add
adc
iret
mov
jp
enter
xor
ret
popf
xchg
and
cmp
fsts
and
add
mov
sti
inc
adc
shrl
loopne
mov
movsb
mov
ja
and
and
adc
cmpb
shlb
xchg
pushf
out
mov
cmp
dec
mov
xchg
repnz
push
jecxz
in
xchg
jmp
add
int3
outsb
fsubr
in
lahf
dec
ss
flds
jge
mov
inc
sub
int3
inc
xchg
pop
push
mov
sbb
out
dec
into
xor
inc
sbb
in
jno
push
xchg
stc
insb
imul
jne
fcomip
jae
dec
pop
xor
pop
leave
dec
shlb
cli
ficomps
dec
dec
pop
push
mov
arpl
xchg
imul
pop
fnstenv
insl
int
or
ljmp
test
cwtl
lods
push
mov
pop
push
inc
ja
sub
sbb
or
jns
into
mov
rcrb
in
iret
fiadds
icebp
mov
adc
in
dec
mov
xlat
lcall
jp
mov
movsb
xor
fldl
jecxz
fdiv
adc
fidivrl
ja
mov
ret
mov
cmpsb
mov
test
imul
lret
and
sbb
cmp
inc
xchg
xor
pop
sub
sbb
xor
cmp
xor
ret
sarb
or
out
insb
hlt
dec
pop
dec
aad
push
pusha
xorb
cltd
inc
adcl
insb
xchg
icebp
inc
cmpsb
aam
mov
fscale
lock
inc
fwait
lret
les
test
sub
push
ret
movb
jae
dec
cltd
mov
or
mov
or
adc
jns
and
call
mov
cli
cli
push
mov
mov
lcall
pop
add
cmp
sbb
dec
fwait
cmpsl
inc
adc
mov
adc
lds
stc
sub
xlat
dec
cs
jb
out
jg
mov
inc
in
xor
mov
shlb
aas
mov
xchg
pusha
push
jae
jle
dec
push
je,pn
adc
pop
cld
in
push
mov
enter
push
pop
aad
aas
dec
push
sbb
popa
fidivl
jp
mov
mov
cmpsl
or
mov
clc
lods
or
push
cmp
mov
mov
popf
mov
xor
clc
cli
adc
dec
jbe
test
and
lret
jbe
xchg
xor
das
scas
mov
cmp
sub
mov
into
mov
pop
push
mov
subb
push
sub
sti
iret
imul
gs
lret
dec
jns
mov
push
pushf
cmp
cmpsl
in
popf
mov
push
mov
push
call
mov
hlt
sub
jg
js
rolb
add
aad
adc
fnsave
cmp
or
adc
and
aaa
push
cmp
mov
adc
ja
fabs
dec
adc
inc
push
ret
jnp
push
jl
insl
xor
xchg
jecxz
in
inc
mov
int
sub
sub
cmc
xchg
pop
mov
jp
xchg
jae
inc
inc
imul
add
inc
call
sti
es
fistl
xor
pop
xor
movsb
sbb
subb
je
repnz
mov
sti
dec
mov
push
xchg
fwait
nop
call
lock
enter
sar
movsl
addl
mov
fdivrs
rorl
loop
or
and
outsb
movsl
xor
stc
mov
ret
adc
xlat
inc
leave
shlb
mov
movsl
insl
hlt
sti
sbb
fadds
jp
sar
adc
inc
lcall
sub
shll
fsubrs
adc
mov
xchg
loop
in
js
pop
jle
xchg
mov
out
and
mov
and
mov
ror
iret
jb
sub
repnz
add
cs
nop
pusha
pop
and
pop
ffree
popf
dec
data16
sti
fsubrp
test
cmp
jbe
xchg
pop
js
lcall
movsl
fwait
lret
or
sub
aaa
fwait
xor
push
popf
int3
sub
lcall
mov
fcomip
test
inc
jbe
fists
repz
inc
insb
hlt
pop
in
push
dec
sub
imul
sub
sub
das
push
jno
stc
call
add
pushf
les
insb
loop
movsb
loope
sbb
pop
loope
subb
cli
jns
loop
cmp
or
call
mov
insb
pop
dec
dec
mov
push
push
ret
xor
test
outsb
mov
shlb
push
dec
lock
inc
adc
mov
test
movsb
shr
push
cli
jnp
adc
push
imul
push
test
inc
mov
lahf
ss
scas
mov
shl
popa
cmp
mov
cmp
adcb
sbb
movsl
mov
sbb
ljmp
inc
sbb
lea
pop
mov
push
sub
mov
mov
adc
inc
fucomi
daa
popf
movsb
jmp
cmp
dec
mov
sub
or
test
cmp
lret
into
imul
fs
inc
pop
andb
push
mov
out
loop
sub
push
lret
int3
cmp
mov
push
int3
xor
mov
push
ljmp
and
dec
push
testl
pusha
lahf
push
inc
push
push
icebp
lock
pop
orl
adc
mov
push
sbb
lea
push
test
aad
orb
aaa
sbb
sti
or
add
addr16
es
push
sbb
lret
cmp
into
loope
out
clc
andl
jl
dec
push
and
push
ret
mov
popl
shrl
ljmp
imul
xor
popf
push
outsl
fdivrl
pop
ret
and
arpl
lcall
xorb
push
push
nop
rolb
jno
daa
dec
loopne
mov
shlb
sub
mov
icebp
inc
aas
xor
or
push
adc
dec
pop
xor
rcrb
push
fld
out
xchg
cli
mov
sahf
mov
in
pop
push
imul
repnz
and
jae
aad
mov
dec
jmp
pop
aad
out
cld
push
or
scas
push
sub
jl
testb
jcxz
stc
int
jnp
cmp
cmp
jge
push
sub
int
enter
add
shlb
movsb
jnp
fsubl
jne
add
int3
lcall
sbb
aas
fucomp
jbe
xchg
repnz
ret
add
fcompl
dec
decb
jecxz
xchg
in
stos
js
enter
lahf
loope
cmpl
out
add
sub
and
pop
sub
fcomip
test
mov
daa
mov
fsubrl
jns
data16
addb
or
lds
add
inc
cs
gs
inc
movsb
dec
ficomps
out
push
or
xor
outsl
test
int
dec
andl
pop
into
clc
inc
mov
outsb
xchg
inc
cmpsb
test
iret
or
pop
loopne
sub
push
lea
jl
pop
lcall
lea
sbbl
inc
lret
lock
jecxz
int
cwtl
movsl
insl
xchg
out
imul
xor
clc
out
jbe
aam
daa
cmp
mov
add
bound
xor
mov
repz
cmp
cmp
nop
xor
pushf
inc
mov
jns
fdivp
test
xor
test
outsl
outsl
lock
int
and
jge
cltd
cmpb
cli
imul
sarl
push
add
xchg
xchg
xor
jp
inc
adc
jl
addr16
cmp
sub
mov
sbb
or
push
adc
pop
adcb
ss
xchg
sub
div
mov
jge
ret
loopne
lds
jnp
outsl
sub
mov
scas
test
test
or
out
mov
jbe
fbld
inc
repnz
push
mov
inc
cmp
adc
xor
pop
lret
test
aad
cmp
mov
js
xchg
xlat
dec
leave
xor
dec
aam
stc
fstps
mov
and
test
das
daa
push
jmp
xchg
mov
xlat
sub
xor
push
cli
push
jns
push
addr16
out
and
out
in
pop
add
icebp
sbb
test
sbb
lock
ret
jno
push
cmpsb
ds
jb
jns
clc
dec
repz
addb
push
push
and
push
push
xlat
jae
jno
jp
mov
das
jb
sub
push
pusha
dec
pop
pop
inc
shll
jb
xlat
xchg
xchg
dec
xor
inc
movsl
testb
cwtl
dec
or
mov
dec
push
adc
cmpsb
xchg
mov
mov
clc
pop
mov
shlb
jbe
sub
cmp
pop
rclb
ljmp
or
fimuls
inc
ret
xchg
sub
mov
lods
mov
xor
loopne
jge
pop
dec
dec
ret
movntq
add
aam
jne
push
xchg
mov
mov
aam
fisubs
mov
jmp
pop
mov
lods
add
sub
adc
arpl
les
int3
mov
cmp
pop
in
mov
xor
add
loopne
pop
sarl
cmp
stc
gs
enter
ret
repnz
push
ds
mov
inc
push
dec
mov
mov
adc
icebp
mov
inc
sub
mov
sahf
test
dec
inc
test
nop
push
add
in
ret
mov
pop
cmp
dec
mov
call
mov
or
pop
push
pop
mov
ss
gs
xchg
aad
ficomps
js
popf
test
movsb
and
add
fcmove
lahf
loope
es
loope
mov
dec
out
shrl
div
iret
lret
rolb
jmp
cmc
pop
outsl
jmp
imul
mov
cmpsb
stc
enter
xchg
addr16
lret
dec
add
pop
xchg
push
into
sbb
divl
pop
insb
push
fcoms
mov
imul
fwait
into
add
and
sbb
out
leave
pop
outsl
mov
mov
jmp
adc
fldcw
in
mov
bound
outsb
lcall
and
mov
sbb
fcmove
adc
int3
scas
imul
js
mov
and
and
test
js
xchg
lahf
cmpsb
inc
cs
dec
add
cmc
subb
xchg
mov
inc
dec
lea
and
cs
cmpsl
add
add
loope
aam
insl
mov
fwait
das
or
test
push
jmp
gs
xor
pushf
fs
cld
loopne
or
mov
pop
int
dec
fidivrl
adc
movsl
mov
mov
imul
stc
fisttpl
jo
and
pop
shr
pop
push
idivl
mov
mov
mov
jmp
enter
add
jno
movsb
fcmove
adc
out
dec
inc
movsb
in
and
leave
int3
cmp
andl
dec
fisubrl
add
inc
sbb
xchg
jle
enter
push
dec
xchg
shr
xlat
mov
cmpsb
mov
test
mov
cmp
jb
outsb
hlt
mov
adc
xchg
xor
or
sbb
icebp
lret
imul
into
xchg
test
mov
ss
repnz
lahf
mov
ss
repz
add
sbb
xchg
scas
cmc
push
push
xor
xchg
mov
daa
fsubl
mov
inc
pop
lret
gs
sbb
dec
dec
xchg
in
ret
sub
negb
out
or
push
mov
aas
jle
pop
into
notl
pop
or
in
in
push
test
push
mov
push
adc
shlb
int
out
or
ds
pop
pop
std
fyl2xp1
xchg
add
jge
jle
add
pop
push
sub
iret
js
inc
or
mov
jne
dec
jp
mov
jo
sub
pusha
dec
inc
cld
mov
ret
mov
cmpsb
cmc
pop
push
adc
mov
adc
and
mov
mov
data16
mov
sti
add
imul
inc
push
arpl
add
xlat
mov
mov
and
rolb
call
inc
out
inc
mov
dec
fstpl
xor
stos
addr16
cmc
sti
inc
sbb
fisttpll
sub
mov
jae
xorb
xor
mov
adc
dec
sub
mov
rcrb
mov
mov
adc
outsl
fcoml
xor
movsb
repz
jmp
int3
xchg
mov
mull
jb
mov
and
inc
inc
or
in
and
das
add
or
sahf
movsb
fnstenv
daa
insl
dec
sub
jnp
cmp
mov
stos
fdivrs
xor
xchg
test
sbb
fcompl
adc
int3
mov
stos
icebp
push
push
inc
mov
aas
adc
in
pop
cmpb
dec
adc
fnsave
sarb
icebp
mov
pop
pop
mov
loop
cmpsb
int3
mov
push
jnp
xor
pop
nop
imul
cmc
loope
mov
jmp
insl
xchg
sub
mov
je
xchg
cmpsl
mov
xor
mov
sub
aaa
adc
aad
jb
sahf
dec
out
mov
pop
repnz
jo
or
pop
lahf
outsl
mov
jge
fisubs
mov
das
outsb
pop
fsubl
inc
xchg
xor
sbb
pop
mov
sub
push
cli
mov
adc
jp
pop
push
adc
mov
mov
sbb
cld
xor
jg
adc
mov
or
inc
push
popw
sbb
test
lock
fs
sbb
dec
add
cmp
and
fucomip
pop
and
ficoms
iret
sahf
mov
loop
sbb
sar
movsb
in
icebp
xchg
push
imul
ret
pop
aad
mov
test
pop
push
lahf
sahf
xchg
loopne
ja
les
ret
adc
das
sub
ljmp
ret
or
cwtl
cmp
cmp
push
dec
pop
cmp
cltd
sahf
scas
mov
mov
mov
push
xchg
inc
xor
mov
les
fisttpll
loop
add
pushf
add
repz
scas
cmp
add
mov
push
adc
pop
ljmp
dec
mov
and
pushf
cmp
sub
repnz
ficompl
push
mov
mov
add
loopne
out
out
rcl
aam
cli
sub
jo
and
sbb
cmp
arpl
into
pop
push
and
stc
push
imul
and
inc
xchg
sbb
add
push
mov
test
adc
aam
xchg
daa
inc
into
das
outsb
add
push
cmp
pop
int
nop
sahf
aaa
jb
mov
push
mov
xor
popf
ss
or
adc
fsubp
iret
lock
shll
cmp
and
pushf
aaa
or
push
mov
fdivrs
xchg
divl
inc
fwait
mov
ja
cmpsl
pop
sar
cwtl
and
sbb
jge
arpl
cmp
negb
and
cld
mov
test
les
xor
cmpsl
call
lahf
nop
int
shrb
mov
sbbb
subl
cmp
fnsave
test
call
jne
arpl
aaa
ss
leave
mov
popa
xor
ljmp
jo
insl
xchg
mov
jl
in
iret
bound
jbe
imul
lods
imul
aas
pop
popf
jae
pusha
loopne
mov
outsb
sub
loopne
sbb
pop
push
sti
rclb
jmp
and
fmul
mov
sub
jns
sub
sahf
push
cwtl
mov
adc
icebp
inc
cmp
lods
push
dec
xor
sbb
popf
and
jg
inc
xchg
ds
frndint
xchg
push
in
scas
leave
dec
xchg
mov
xor
cbtw
mov
adc
ja
cmp
dec
adc
and
test
jnp
aam
filds
jns
fsts
clc
popa
push
bound
in
cmp
outsl
arpl
xor
imul
mov
data16
pop
push
enter
fistl
adc
or
xlat
push
xorb
cmpsl
adc
pop
add
sahf
imul
call
ficomps
imul
inc
arpl
cld
jecxz
cmp
nop
in
out
push
in
cmpb
and
mov
mov
xchg
or
outsb
test
lcall
xchg
aas
mov
and
rorb
cmp
adc
mov
mov
pop
sbb
popa
xchg
in
popa
loop
pop
ret
jecxz
push
push
nop
lock
andl
sbb
loopne
sub
andl
add
adc
pop
divl
lea
add
and
sarl
ss
insb
cmp
cmp
adc
inc
faddl
popa
test
lahf
push
in
jae
dec
ret
mov
jne
aam
sbb
xor
scas
fbstp
lahf
sub
das
cltd
fsubrp
loope
and
xlat
lret
sbb
test
mov
sbb
movsl
push
faddl
xor
jb
nop
out
movsb
clc
mov
leave
cmp
ret
sub
popa
nop
mov
jmp
sbb
aad
or
or
adc
aad
cmc
div
gs
inc
hlt
cmp
subb
cmp
sub
add
sbb
or
lea
mov
daa
pop
dec
push
out
out
jl
fwait
fwait
movsb
enter
add
dec
shll
sbb
sub
add
jp
mov
and
cmpsb
les
pop
push
cs
inc
popf
dec
mov
push
cltd
mov
jb
jnp
or
xchg
add
push
arpl
cmp
int3
xchg
pusha
push
out
aam
es
fisttpll
cmp
inc
push
dec
sbbl
sub
movsl
jb
sub
add
pop
mov
and
testl
push
push
stc
out
mov
add
jecxz
cmp
xlat
and
adc
lahf
cmp
in
mov
pop
add
inc
inc
or
popa
mov
cmp
cli
xlat
fwait
out
add
cld
adc
sbb
lea
arpl
clc
push
push
fldenv
insb
fisttps
sbb
xchg
jl
scas
push
outsb
je
fisubrs
and
jmp
sbb
add
jae
sbb
sbb
or
xor
sub
dec
clc
data16
mov
int
sbbb
mov
dec
ret
popf
adc
ss
cmp
xchg
add
inc
jl
pop
inc
and
mov
xor
pop
sub
jns
add
fldt
push
pop
adc
pop
mov
xchg
push
sbb
cmpsb
push
sub
push
sub
cmp
sbb
fwait
ljmp
jns
push
add
loopne
jge
push
xchg
xchg
into
out
pop
jge
repz
dec
cmpb
jae
test
mov
adc
in
mov
or
jno
lcall
xchg
mov
push
and
dec
add
shll
add
dec
cmc
jbe
scas
push
sti
adc
and
sbb
in
sub
xor
inc
testb
lret
xchg
pop
mov
cli
fcomp
inc
sahf
insl
popa
inc
aad
int
jb
lret
es
jb
cmp
xor
dec
aaa
es
add
add
adc
pop
repnz
adc
mov
dec
mov
jge
dec
jno
mov
add
pop
mov
cmc
push
mov
xchg
xchg
mov
into
dec
jg
lret
add
inc
cmp
test
andb
mov
inc
mov
je
cli
jl
fnstcw
mov
push
subb
js
aaa
xchg
in
clc
cmpsl
in
mov
xchg
mov
rorb
fisubrs
shlb
cmp
sub
cmpsl
adc
ret
loopne
push
in
faddl
pop
xchg
adc
int
movsl
pop
mov
dec
lock
and
mov
xchg
bound
add
loope
repnz
inc
pop
repz
mov
push
pop
xor
inc
xor
inc
and
jle
addr16
cmp
testl
push
lcall
xor
in
sub
les
sub
add
inc
pause
into
iret
in
aaa
and
out
mov
insb
mov
sub
insb
lahf
mov
push
adc
stos
mov
add
out
push
inc
gs
push
int3
push
add
arpl
pop
les
jno
sub
imul
aad
sbbl
clc
xor
aaa
fisubs
jecxz
leave
or
mov
jl
push
inc
push
std
inc
cmp
adc
sti
lret
fs
jmp
fimull
lods
push
pop
cmpsb
arpl
dec
mov
add
and
push
mov
mov
out
mov
xchg
iret
add
cmp
jge
push
paddsb
jg
stos
fwait
inc
lret
out
sub
dec
sbb
add
mov
push
ret
mov
mov
or
pop
cmpsb
test
rclb
adc
xorb
int3
xor
fildll
icebp
addr16
cmpsl
add
inc
mov
jns
mov
mov
call
push
push
lret
inc
jecxz
cs
push
pop
pushl
test
clc
inc
xchg
adc
adc
shrl
pushf
rcrl
inc
out
mov
dec
jl
aaa
lods
sbb
test
lret
test
mov
ds
mov
lret
fs
pushw
pop
lods
stos
ret
negb
ja
push
xchg
sub
sbb
stos
and
sbb
aam
pop
pop
xchg
cwtl
ss
mov
mov
mov
rol
rclb
ljmp
mov
mov
xchg
aas
leave
mov
xor
out
and
or
mov
scas
dec
push
and
bound
and
mov
dec
push
ljmp
outsb
ja
repz
add
mov
xchg
pop
fsts
add
fwait
jno,pt
cbtw
pop
leave
mov
push
push
push
shrb
xor
test
bound
push
lcall
sub
add
flds
cmc
pushf
push
xor
ds
add
outsl
or
sub
jb
movups
repz
in
mov
dec
stos
ror
rdtsc
test
and
es
add
jo
fists
imul
or
xchg
pop
sbb
push
inc
cmc
sti
scas
pop
call
xchg
int3
out
push
movsb
das
mov
fsubl
iret
pop
jle
js
dec
push
std
lds
fxch
sbb
and
and
fisubl
fimull
mov
sbb
mov
or
sub
nop
daa
pop
push
fcoms
imul
jne
mov
das
cmp
notb
pop
jb
xchg
fimuls
lret
xchg
out
inc
inc
cmpsl
cli
lret
out
mov
xchg
arpl
mov
lods
mov
lea
popf
sub
jecxz
mov
cmc
mov
es
jl
test
sbb
pop
sub
jae
ffreep
fwait
cmp
fnstsw
pop
or
mov
test
cmp
das
xchg
inc
fucomi
std
pusha
adc
ret
xor
pop
pop
mov
call
jmp
lahf
rorb
and
mov
insl
jb
xor
jno
je
cmpb
inc
imul
xor
mov
jnp
addr16
lock
stos
testb
popf
xchg
sar
add
jns
and
adcb
testb
ret
stos
cmpsb
add
jge
outsb
fmull
cs
dec
cmpsl
insl
cmp
pop
ds
aam
push
push
mov
jmp
mov
jns
xor
cmpsl
jl
xor
dec
fmuls
cmp
shrw
sub
out
adc
rep
in
mov
jl
jp
push
push
cmp
js
sbb
cmp
decb
int3
and
dec
in
add
mov
cmp
mov
sub
xor
in
mov
in
jno
imul
push
test
cli
loop
cmpb
mov
or
add
jnp
or
mov
into
and
in
mov
icebp
mov
jo
in
mov
and
ljmp
push
dec
mov
js
cmp
repz
icebp
push
lods
rorl
int3
xchg
lds
or
pop
dec
jmp
ret
or
or
es
adc
mov
ficoms
dec
mov
mov
out
loopne
xchg
xchg
cmp
sbb
or
or
and
sbb
cmpsl
outsb
mov
outsl
mov
scas
testb
jnp
fisttpl
aam
cmpsb
mov
scas
in
lock
out
xor
icebp
stc
sahf
std
outsb
mov
cld
mov
mov
mov
dec
insl
jecxz
jno
fcoml
inc
xchg
imul
adc
stos
inc
xchg
add
push
jmp
mov
mov
dec
adc
sbb
fsub
mov
movsl
std
lds
pop
or
jg
test
cld
ret
cmpb
xor
cld
arpl
sbb
pushf
mov
inc
add
scas
jg
mov
push
and
mov
fisubl
inc
add
dec
gs
out
mov
shll
int
push
lret
mov
cmp
mov
push
test
ret
dec
lret
jbe
movsl
jle
mov
das
jne
or
fsubrl
dec
xchg
sbb
fsub
mov
jmp
adc
les
or
push
sub
xorl
rorb
dec
jne
cmpsb
repz
mov
outsb
mov
jl
mov
dec
stc
jmp
cmpsb
idivl
jmp
stos
rclb
ret
les
nopl
inc
adc
mov
aaa
cpuid
imul
rol
xor
pop
add
sub
xchg
dec
mov
adc
ss
and
es
orb
aad
rcr
jnp
out
mov
mov
adc
icebp
fdiv
lcall
fstpt
fs
dec
pusha
jg
jp
insb
lock
icebp
test
mov
dec
fisttpll
sbb
repnz
mov
xchg
imul
in
and
xchg
jp
jb
inc
pop
jecxz
ret
mov
iret
scas
sbb
push
imul
dec
inc
mov
cli
popl
je
movsl
jmp
ja
fbld
sub
push
xor
daa
ja
popa
fwait
xor
dec
sbb
cwtl
add
ja
jge
repnz
insb
xchg
jl
das
and
push
pushf
xor
test
shr
movl
add
mov
js
sbb
lcall
cmp
inc
sbb
shl
xchg
insl
pop
sti
and
test
das
gs
out
sub
mov
loopne
cmc
mov
bound
or
ds
sub
lock
jl
mov
outsl
or
loope
adc
jae
cmp
std
in
out
sti
imul
adc
adc
cltd
es
push
popf
or
xor
or
adcl
pop
stos
daa
and
mov
cmc
lods
testb
cmc
push
dec
call
push
nop
mov
lods
les
xor
rorl
adc
dec
add
repnz
cli
sub
inc
loopne
adc
inc
dec
addl
stc
cltd
mov
cmpsl
cltd
xor
arpl
scas
xor
sbb
inc
fiaddl
add
subb
jne
test
lods
jnp
dec
or
cmp
mull
pop
scas
mov
iret
data16
mov
add
out
ja
lret
add
loopne
lods
jecxz
fwait
xor
adc
mov
dec
int3
push
mov
pop
or
iret
lahf
add
or
rclb
out
cld
adc
pop
into
mov
jo
xor
outsb
or
int3
lds
dec
sub
mov
mov
pop
cltd
decl
adc
add
jnp
ljmp
mov
xor
or
xchg
mov
pop
arpl
mov
sbb
pop
mov
in
pop
cmp
icebp
fdiv
add
mov
fdivrl
rcrl
adc
sbb
inc
xchg
pop
adc
cmp
lods
sbb
cmp
or
dec
and
sub
repz
mov
and
cmp
mov
add
jae
lret
bound
out
xchg
inc
cmp
sub
jnp
jae
mov
cmp
je
fiaddl
rolb
sub
in
fs
es
cmp
jp
mov
pop
xchg
test
dec
lds
fcoml
and
jp
jle
jmp
jnp
fstl
das
xchg
pop
mov
and
movb
pop
jb
mov
pop
arpl
lret
inc
rcrl
add
xor
xchg
call
sbb
dec
mov
ljmp
xchg
test
sti
das
mov
sti
leave
dec
sbb
mov
lods
mov
repz
sbb
jle
sub
lea
movsb
lret
sub
inc
mov
push
lcall
divl
push
pop
mov
test
cmp
fsubs
fbstp
aad
or
sbb
push
dec
jns
rcrb
push
lcall
mov
lock
and
jno
inc
gs
subb
push
sbb
dec
jne
ficompl
test
sbb
sub
xchg
lea
lahf
or
and
pop
mov
or
xchg
stc
mov
cmc
jns
ret
push
or
mov
sub
aas
add
lcall
loop
out
hlt
jl
xchg
aas
add
push
shlb
xor
lcall
mov
shll
sbb
in
pop
inc
pusha
mov
aam
imul
xor
fs
mov
mov
test
or
adc
mov
mov
xchg
push
rol
and
shlb
xor
cmp
and
int3
fcmovu
stos
int3
mov
push
ja
mov
ds
cmp
nop
clc
jns
cmp
cmp
pop
test
ret
sbb
shlb
les
pop
cmp
mov
ds
fstpt
test
add
shll
mov
mov
pop
bound
cmp
sahf
mov
loope
xchg
jle
xchg
sbb
or
cmp
mov
test
test
xchg
cmp
sub
ss
popa
cmp
adc
dec
mov
ss
sarb
mov
je
scas
lds
xlat
jae
jge
addr16
xchg
cld
xchg
enter
cmpsl
sub
movsb
cmpsb
scas
sub
mov
sub
dec
cwtl
push
fs
mov
cmpsl
push
cs
xor
pop
stos
sbb
daa
arpl
xor
xchg
scas
je
sub
cmp
push
xchg
mov
add
lcall
sbb
fsts
je
daa
aam
stc
sbb
adc
mov
and
jno
mov
scas
stc
mov
push
gs
movsb
jl
int3
sbb
jae
popa
lods
cmp
add
hlt
mov
fcoms
xor
sahf
aaa
stc
in
sti
ss
add
push
push
jo
inc
add
or
insb
mov
and
push
lods
call
lret
repnz
and
xor
pop
sbb
movsb
stos
inc
je
dec
dec
shlb
sub
or
mov
mov
mov
xlat
popf
and
test
test
stos
push
in
jp
repz
jmp
iret
dec
mov
jnp
loopne
push
bound
enter
mov
push
mov
push
mov
push
test
cmpb
mov
js
mov
adcl
push
sub
adc
mov
push
daa
push
and
aam
int3
jl
cmc
incl
xor
sbb
cltd
ljmp
lcall
fsubl
pop
push
call
in
push
sti
out
cs
lret
popa
sbb
stos
out
arpl
xor
bound
fmuls
mov
in
mov
mov
sub
lock
adc
mov
repnz
mov
pushw
and
fcoml
jecxz
jle
mov
jbe
xchg
fmulp
stc
sub
pop
fcomps
mov
movsl
mov
cmp
jo
fcmovnb
inc
nop
cmc
insl
clc
mov
call
push
or
iret
daa
in
and
dec
into
push
iret
pusha
push
pop
mov
xor
daa
jle
cmp
push
add
mov
int
dec
jg
inc
dec
outsl
inc
es
aaa
xchg
cs
pop
mov
and
jle
dec
movsl
lods
mov
pop
cli
rcrb
ds
and
div
mov
add
mov
stos
or
scas
mov
repz
fisubl
pop
imul
popf
cs
aad
movsl
sub
jae
add
hlt
hlt
lods
push
loopne
add
scas
xchg
xor
insb
sub
bound
inc
jl
push
mov
push
add
cmpsl
sahf
push
inc
scas
fsubs
scas
jle
cmp
call
pop
out
aaa
sahf
repnz
dec
or
mov
xor
dec
sar
pop
sti
push
mov
sub
negb
loop
mov
dec
mov
pop
scas
in
fidivrs
jmp
push
push
dec
or
loopne
mov
push
xchg
das
push
jl
pushf
inc
addb
push
aaa
fmul
outsb
inc
mov
scas
rolb
ret
xchg
mov
call
jo
dec
pop
xlat
fcoms
jmp
stos
out
and
es
inc
add
add
outsb
jmp
shlb
mov
ljmp
jg
push
xlat
pushf
clc
xchg
mov
adc
jne
dec
lret
je
and
add
and
lock
jo
repnz
lcall
ret
es
cmp
pop
cmpsb
subl
or
and
lods
jmp
dec
clc
lcall
adc
pop
fs
lods
pop
cmpsb
add
rclb
cli
cmp
outsl
in
aaa
inc
rcr
rcrl
lock
sbb
mov
fld
jae
adc
jecxz
jo
mov
icebp
mov
in
in
mov
dec
icebp
loop
and
shll
je
rclb
lcall
loop
int3
fcmovnbe
dec
mov
or
movsl
scas
into
xchg
dec
sub
mov
out
jmp
insb
push
dec
pop
pop
xchg
divb
cltd
dec
imul
call
jmp
scas
popa
cld
jb
loop
xchg
mov
or
and
xchg
sub
into
mov
mov
xor
inc
add
aas
xor
outsl
pcmpeqb
repz
lods
sbb
sub
adcl
arpl
inc
push
repz
pop
add
shrb
xor
jb
in
hlt
jbe
inc
cmp
scas
jle
addr16
sbb
sbb
dec
aaa
lret
mov
cmp
sub
xchg
call
ljmp
cli
cli
pop
mov
lock
push
add
jp
stc
cmp
shll
xchg
push
cltd
xchg
push
inc
push
sbb
xor
dec
lods
push
repz
dec
mov
or
jns
cmpl
dec
add
in
imul
mov
cs
pop
cli
fildll
cmpsl
shr
jmp
fs
cmp
test
jge
mov
xchg
push
imul
dec
adc
mov
shll
aam
mov
call
fisttpll
pop
adc
incb
aaa
or
add
pop
ds
int
push
repz
sub
pusha
mov
clc
add
mov
mov
in
and
fnstenv
aad
out
mov
push
ja
pop
repz
push
pusha
sub
aas
cmp
pop
stos
icebp
xchg
sarl
xorb
xor
dec
dec
jecxz
mov
mov
xor
cmp
mov
push
aas
or
mov
in
gs
xchg
add
test
cmp
sbb
aam
sbb
imul
rolb
push
push
aam
push
inc
fsubrs
gs
es
out
sub
das
add
pop
dec
mov
pop
aam
data16
add
jmp
rcrl
nop
imul
nop
data16
sub
push
mov
lret
dec
es
cld
inc
fistpl
push
xchg
pop
pop
shr
add
loop
dec
adc
iret
mov
lods
mov
xlat
je
scas
xlat
fwait
cs
add
inc
in
punpckhdq
sbb
mov
push
andb
pop
insb
pop
pop
cmp
push
add
adc
lret
sti
push
lock
jg
lods
jae
popa
mov
daa
sbb
shll
pushf
adc
sarb
jbe
and
sub
stos
pop
add
das
cli
or
pop
gs
pop
jb
mov
mov
xchg
shlb
ret
cmp
in
mov
xchg
mov
pushf
jp
loop
jns
and
imulb
pop
xchg
and
cmp
pop
aad
or
popa
push
mov
movsb
jb
sbb
loop
aad
add
in
mov
mov
push
cmpsl
mov
adc
mov
xor
pop
aam
sub
push
addr16
add
add
jg
cli
xor
movsl
adcb
push
outsl
fmul
jo
lock
rcll
lds
sub
lods
or
pop
std
sbb
int3
mov
pop
mov
jnp
pop
aaa
pop
inc
add
xchg
jne
iret
xor
lahf
in
insl
nop
pop
add
or
test
push
insb
into
pop
xor
cmp
push
es
mov
in
adc
sub
std
push
mov
xlat
mov
in
test
xchg
mov
and
mov
and
mov
jmp
xchg
cwtl
push
pop
lsl
test
adc
es
out
out
jae
into
test
and
sub
sbb
insb
or
mov
push
out
int
add
jp
test
pop
stos
xor
jle
cmp
leave
inc
imul
enter
xor
sbb
and
test
mov
int
leave
mov
loop
loope
sbb
out
cmp
idiv
mov
mov
xchg
lret
cmpsl
outsb
xchg
adc
xchg
and
xor
push
xor
cmp
add
mov
pop
inc
scas
lds
inc
xchg
lds
aam
icebp
sbb
sub
popa
fbld
pop
xlat
in
dec
loop
mov
mov
loop
inc
outsl
sbb
stos
pop
sub
cld
movsb
out
cli
clc
popa
mov
jbe
and
cmpsl
lds
loopne
jo
push
mov
inc
pop
jne
dec
ja
sub
xchg
popa
xchg
out
cmp
cmp
or
lock
xchg
in
cltd
inc
insl
pop
movsl
ja
sarl
or
sbb
dec
xchg
das
rclb
inc
ljmp
call
fdivrp
fcoms
ficoml
nop
in
js
js
mov
or
jecxz
imul
xchg
and
clc
ror
std
xlat
in
xchg
sbb
cmpsl
hlt
or
andps
add
in
sbb
test
fwait
add
xchg
cs
call
cld
cmp
xchg
sub
jne
enter
and
ret
in
dec
pop
cmp
xchg
cmc
rcrb
repnz
lods
fistpll
int
jo
pop
sbb
push
int
jecxz
and
mov
sbb
mov
out
sub
lods
pushf
lcall
push
mov
inc
or
cmp
pushw
mov
cmpsb
pop
cmpl
jge
movsb
insb
inc
gs
jae
and
shl
inc
repnz
or
xchg
fs
nop
iret
rol
jp
inc
mov
xchg
fwait
sub
inc
xchg
cmp
dec
sbb
nop
and
in
xlat
dec
add
pusha
mov
sbb
lret
pop
subb
test
cmp
adc
nop
dec
adc
jmp
fwait
mov
and
bound
xchg
ficompl
stc
stos
mov
mov
pop
sbb
add
in
test
or
clc
xor
sbb
out
leave
xorb
ss
imul
and
sbb
adc
sbb
addr16
sub
push
cmp
js
in
fdivrs
jnp
leave
test
imul
cmp
in
add
xchg
push
and
and
fldt
dec
das
cmp
in
cld
out
test
test
cs
leave
ret
test
push
dec
outsl
adc
mov
leave
mov
push
and
mov
xchg
mov
fidivl
mov
int
and
lea
stos
cmc
adc
sub
add
cs
jge
call
sbb
xchg
outsb
pop
test
aam
lods
jo
cmc
pop
lods
pop
pusha
into
aas
xchg
cmp
sahf
inc
sub
pop
dec
push
push
mov
cld
dec
mov
sbb
or
push
inc
sub
loopne
and
imul
shll
mov
aam
cwtl
dec
pop
pop
adc
cld
sbb
jle
test
leave
ret
dec
sbb
sub
cli
or
add
lret
or
ss
popf
xchg
jno
adc
mov
and
je
push
jle
sub
int
cmp
lock
fcomps
add
push
jle
clc
cmp
push
add
mov
pop
shrl
clc
sub
add
mov
xor
sub
or
sub
xor
rcrb
pop
mov
push
cmp
dec
jbe
inc
sbb
cltd
mov
jp
test
mov
pushf
je
out
pop
cmpb
arpl
sub
sub
jb
dec
xchg
cltd
add
add
adc
cmpsl
push
mov
push
inc
lds
icebp
lods
sub
dec
pop
inc
xor
out
sbb
daa
int
sbb
mov
ss
xor
xor
jb
dec
adc
cwtl
fwait
pop
out
lds
and
out
or
push
out
stc
pop
scas
and
lret
push
sti
movb
jnp
sbb
es
insl
test
xor
pop
add
mov
dec
and
aaa
xchg
pop
popa
push
lret
ja
subb
push
popf
outsl
add
pop
push
fdivp
enter
bnd
jmp
adc
dec
in
xchg
gs
in
mov
lods
out
push
pop
xor
inc
in
repnz
cs
pop
dec
orl
or
js
mov
adc
lods
jge
mov
xchg
repnz
scas
imul
cmp
add
lods
ss
data16
cli
imul
lahf
push
fdivr
pop
push
mov
and
mov
flds
jmp
push
imul
sub
and
cltd
push
push
or
xor
lods
loope
stc
cmp
adc
insl
leave
mov
outsb
ja
fldl
push
inc
cmp
pop
int
sbb
jns
int3
mov
mov
add
push
sbb
flds
lahf
xchg
and
or
mov
js
push
pop
out
mov
in
or
sbb
push
mov
sub
inc
imul
cli
and
sbb
mov
hlt
fwait
xor
push
jmp
mov
dec
inc
or
inc
scas
sub
jo
push
sub
lods
std
and
ljmp
or
clc
jl
jae
pop
and
or
test
ljmp
in
pop
enter
mov
inc
jp
adc
ljmp
test
popa
loop
lret
scas
and
pop
imul
push
pusha
pop
mov
jge
decb
int3
scas
ja
jnp
pop
mov
and
js
aaa
adc
cmpsb
push
pop
inc
pop
dec
leave
aas
cmp
jecxz
imul
and
push
sahf
xchg
aaa
add
negl
subl
in
ss
mov
jo
insl
hlt
jae
pop
mov
push
push
inc
sub
ret
jbe
movsb
lods
jbe
xor
jmp
pop
stos
push
sahf
xor
enter
or
aam
fwait
testb
mov
arpl
orl
lret
movhps
ret
xchg
insb
xchg
jge
pop
sbb
and
mov
adc
push
lret
das
lods
lahf
adc
xchg
cmp
lock
in
mov
lret
jmp
les
add
jns
and
jae
scas
out
push
stos
xor
sbb
out
inc
push
xchg
push
mov
test
daa
jg
sbb
int3
push
jae
or
add
repnz
push
loope
lock
xchg
paddb
imul
or
xchg
test
push
sub
aas
repz
ljmp
pop
mov
xor
or
mov
mov
loop
test
mov
cltd
or
add
fcmove
mov
dec
xchg
imul
test
sti
ds
adcl
ret
fninit
push
adc
push
xchg
cltd
pusha
testl
mov
or
loop
test
or
jecxz
jmp
shlb
xchg
shll
lcall
push
into
sarb
cmp
push
popf
xchg
dec
mov
mov
add
add
cld
xor
loopne
cli
inc
out
adcb
jg
inc
jp
push
lret
cmp
mov
mov
sbb
int
in
mov
mov
divl
aam
jl
daa
jae
sbb
fisttpl
lods
sub
push
out
mov
or
ret
jmp
jge
jb
cmp
and
dec
insb
add
push
push
push
inc
sahf
adc
sti
fwait
pop
xchg
adc
or
dec
add
arpl
push
mov
out
fstpt
pusha
rcll
mov
or
imul
insl
mov
and
cmp
in
loop
add
mov
shrl
mov
xchg
punpckhbw
scas
and
pusha
mov
cmpsb
fiaddl
testl
and
cmp
lcall
enter
push
mov
push
stc
jae
cmp
jle
clc
dec
out
or
scas
xlat
xchg
popf
hlt
lret
adc
mov
scas
mov
inc
push
and
inc
jge
lcall
or
mov
add
adc
xchg
arpl
xchg
and
fisubrs
add
pusha
lds
testl
cmp
mov
movsb
fwait
sub
pop
dec
leave
gs
cltd
mov
ljmp
in
or
cmp
add
push
mov
push
sbb
add
mov
ret
rcr
or
cvttps2pi
lods
sub
dec
mov
cwtl
int
pop
push
ret
sub
sbb
fsubrs
fcoms
inc
imul
mov
lods
sbb
add
jno
xchg
fcompl
stc
push
out
ds
mov
iret
pop
cmp
push
popf
and
lds
fistpll
imul
sbb
fmul
dec
xchg
in
xor
fstpl
pop
sbb
sbb
and
ret
movsl
adc
out
sub
loope
jle
pop
outsl
sub
div
cmp
xchg
sbb
xchg
mov
fs
movsb
or
outsl
fidivrl
jge
xchg
xor
jmp
sbb
mov
sti
iret
int
and
pusha
push
clc
dec
in
outsl
ret
cmc
push
sbb
push
int
lock
or
mov
push
cli
movsb
add
cli
push
sti
leave
cltd
int
inc
push
rcrb
les
pop
inc
arpl
repnz
sahf
push
out
loop
iret
pop
shlb
adc
out
or
loopne
stc
push
and
ret
lock
mov
test
sub
pop
jnp
pop
mov
sub
das
lahf
dec
test
outsl
cmp
mov
bnd
adc
xchg
mov
xchg
fwait
andl
mov
mov
sbb
jno
das
popf
repnz
lods
jle
jl
stos
sub
aad
leave
iret
cmpsl
sub
cmp
cmc
xor
test
cmpsb
jmp
pop
push
push
adc
mov
test
or
sbb
mov
push
in
or
adc
in
push
mov
pusha
sbb
shrb
or
movsl
or
or
ja
sbb
jp
lods
sub
mov
sub
mov
movsb
add
and
push
cmp
xor
ffreep
adc
pop
mov
xor
aam
ret
sub
inc
dec
stc
mov
add
jae
test
add
scas
sub
jb
adc
fistl
testb
je
cmp
popa
lret
ja
pop
ret
pop
out
sbb
in
ds
cmp
faddl
lea
es
dec
test
pushf
cmpsl
test
add
mov
rclb
gs
sub
cmpsb
int3
jae
inc
jo
pop
dec
jmp
shll
jns
and
xchg
enter
inc
jae
add
sbb
or
imul
jbe
orb
xorl
pushf
out
xchg
or
push
push
jmp
jge
lahf
mov
jnp
test
mov
cli
imul
push
cmp
dec
loop
std
and
xchg
mulb
dec
icebp
dec
addr16
dec
test
out
adc
nop
nop
xor
xor
mov
fildl
jb
push
lea
subb
cltd
rcr
popa
sbb
outsb
aad
sarb
xchg
and
stos
mov
push
fs
mov
xchg
scas
jne
inc
out
test
idivl
sbb
addb
mov
xchg
leave
fmuls
mov
add
icebp
sar
mov
andl
add
adc
sbb
int3
scas
outsl
cmc
sub
sub
inc
dec
adc
mov
dec
dec
addb
ret
and
mov
shrl
xlat
rcll
fiadds
test
sbb
lds
jbe
jne
stc
adc
out
inc
jae
call
pop
push
cmpsl
pavgb
arpl
adc
push
mov
mov
mov
aam
mov
test
pop
nop
loope
mov
std
add
dec
or
mov
mov
call
mov
insl
dec
lods
fs
cmp
dec
out
mov
jmp
pop
stos
xchg
lret
loopne
dec
scas
inc
mov
push
shrd
jbe
xchg
push
imul
inc
arpl
xor
xchg
arpl
ss
sbb
mov
movsb
in
lods
inc
add
pop
in
dec
xchg
jmp
push
ljmp
jo
add
or
xor
cs
xchg
sub
dec
mov
or
nop
bswap
or
sti
clc
pop
inc
es
fwait
sub
add
push
sub
icebp
and
jns
mov
or
jecxz
mov
sbb
pushf
pop
pushf
cmpsl
insl
xchg
inc
mov
mov
jo
lods
inc
jb
jmp
or
int3
rcl
inc
test
adc
adc
movsb
pop
jbe
lret
xchg
in
popl
sub
ret
and
outsb
mov
imul
mov
sbb
imul
jge
dec
sbb
jmp
fnstenv
sub
pop
mov
out
in
cmp
mov
lahf
jl
mov
mov
testb
sub
xor
gs
lods
mov
jo
xor
pop
push
mov
insl
mov
aad
push
adc
in
imul
adc
loopne
bswap
mov
push
mov
adcl
fcmove
cmp
or
outsl
or
inc
mov
not
or
xchg
pop
fs
xor
push
jmp
in
or
int
movsb
jne
push
icebp
iret
add
popa
clc
pop
scas
or
popf
testb
xchg
push
mulb
sbb
call
mov
loope
xchg
arpl
mov
push
jle
dec
sar
or
mov
inc
mov
imul
lods
stos
iret
lods
cmp
mov
test
notb
stos
or
in
cltd
pop
dec
mov
in
fnstenv
dec
ss
fcompl
mov
js
push
shll
push
jp
in
jg
push
cmpsb
test
cmp
enter
sub
pop
and
mov
ljmp
xor
in
push
dec
push
push
mov
not
xor
dec
lock
std
cli
insl
outsb
mov
jecxz
cmp
loope
lret
call
cwtl
dec
stc
mov
popf
mov
jg
fnstsw
sahf
popa
cmpsb
notl
mov
mov
jbe
pop
fists
pop
fdiv
lcall
dec
push
stos
bound
je
int3
pop
std
pop
mov
sbb
lods
lds
xor
aaa
dec
cli
pop
testl
xchg
bound
or
mov
push
xor
adc
lock
pushf
jmp
pop
push
fadds
xor
mov
rorl
movsl
push
pop
add
adc
out
test
add
sbb
pop
mov
mov
inc
jl
cli
pusha
loope
std
into
sahf
lret
cltd
push
xor
loopne
xchg
rclb
jbe
mov
ret
loop
movsb
loope
ret
lret
pop
adcb
clc
test
into
mov
pop
jo
les
aam
test
in
inc
xchg
pop
jle
rorb
cmp
scas
cmpsl
testl
test
mov
lret
adc
in
push
push
pushf
mov
push
mov
xchg
por
sbb
mov
mov
xlat
outsl
push
pop
ss
sbb
hlt
or
mov
mov
push
cwtl
mov
push
sub
adc
pop
test
shlb
enter
xchg
loope
push
stos
daa
push
pop
shll
das
cltd
or
in
mov
or
sbb
shll
into
mov
popf
xadd
loopne
xchg
push
movsl
stc
out
add
add
push
add
jg
sbb
xor
mov
mov
jmp
scas
cmpsl
sub
add
and
lds
movsl
xlat
jp
sub
adc
push
hlt
cwtl
and
sbb
ret
cmp
mov
push
popf
jge
dec
push
fldcw
test
insl
ss
sbb
mov
daa
jbe
add
insl
dec
dec
outsb
popf
xor
dec
clc
cmpsb
lock
adc
test
int
sbb
jge
out
popf
adc
loope
lret
sub
dec
mov
ret
cmp
and
mov
push
mov
push
movsb
and
jge
xor
insl
push
push
mov
test
mov
fsubrp
imul
mov
repz
jle
scas
xchg
out
clc
outsb
xchg
fs
shll
int
xchg
sti
sub
inc
decl
push
pop
mov
dec
or
inc
arpl
aas
fidivl
dec
test
adc
or
cs
js
das
aaa
mov
test
mov
add
add
push
scas
ret
add
xlat
cmpsb
clc
lods
aad
xchg
xchg
test
dec
mov
lret
nop
call
add
mov
pusha
outsl
dec
sub
repnz
dec
insb
sub
xchg
out
xchg
into
sub
loop
and
loope
mov
test
pop
pop
sbb
rclb
mov
test
into
push
out
test
cmp
cmp
adc
mov
es
xchg
pop
fdiv
loopne
sbb
lods
arpl
pop
and
insl
jb
arpl
mov
adc
gs
jne
jmp
loope
rcrl
push
test
xor
outsb
xor
adc
xchg
mov
ljmp
hlt
sub
cmp
jbe
add
pop
or
insl
pop
adc
mov
icebp
mov
andl
pop
and
dec
and
mov
mov
stos
sahf
das
cs
iret
mov
popa
pop
cmp
data16
xchg
adc
testl
and
xchg
test
test
push
xorl
fdivl
enter
lods
mov
dec
inc
cli
mov
dec
stos
jbe
pusha
jle
loope
push
or
xchg
mov
sub
sbb
sub
xor
ret
dec
push
insl
xorb
das
rcl
js
mov
fwait
nop
fcompl
popa
xor
xchg
lcall
cmpsb
push
push
ret
int
xor
int3
scas
jne
cmc
lret
icebp
xchg
dec
subb
push
jne
imul
jmp
sub
jle
fildl
dec
sub
mov
mov
in
cmc
mov
push
fildll
lods
add
mov
fadd
lret
mov
cltd
adc
lahf
xchg
loope
out
push
mov
cmpb
mov
movsb
mov
jg
jp
xor
outsl
icebp
xchg
stos
fwait
cmp
repz
push
push
mov
repz
jg
ror
mov
dec
or
test
cwtl
mov
imul
ret
mov
rcl
xchg
mov
loopne
hlt
js
fs
jne
pop
sbb
test
xor
testb
or
jmp
and
xchg
ret
sbb
dec
push
shr
inc
pop
lret
mov
mov
adc
aam
aaa
in
mov
pop
sub
add
sub
inc
mov
adc
sbb
xchg
pop
cmp
xchg
adc
or
xor
dec
hlt
jl
cmp
int3
mov
jecxz
xor
decl
mov
int
aam
xchg
push
mov
stos
in
dec
xchg
std
lahf
scas
ficoml
ljmp
jno
repnz
fistl
call
aas
adc
xor
xchg
mov
pusha
pusha
ss
sub
int
jne
int3
or
push
inc
inc
xchg
mov
cmpl
sbb
adcl
out
loopne
push
mov
mov
jbe
rsqrtps
cli
jne
xor
imul
xchg
add
loope
pop
stos
lds
fs
xchg
mov
icebp
bound
jg
out
mov
vpackuswb
fsubl
sbb
push
adc
push
xchg
or
mov
jae
fistps
leave
lock
add
jge
ret
or
and
push
add
sahf
mov
push
jnp
into
cmp
inc
test
ret
aad
mov
aam
dec
mov
mov
out
and
pop
cmp
push
fsubrs
dec
pusha
or
xchg
fs
or
mov
jnp
push
call
xchg
fwait
cmp
in
mov
mov
pop
xchg
add
cmp
shr
pop
jge
fcoml
lds
out
xchg
sti
fidivl
adc
sub
and
add
sub
lods
lcall
cmpsl
dec
popf
mov
mov
int3
fidivrl
fsubl
popa
mov
sbbl
dec
and
stos
sbb
cmp
bound
pop
testl
pop
ror
jbe
xchg
les
push
cwtl
out
ret
outsb
out
arpl
push
cmpsl
inc
add
push
in
push
ss
lret
xor
fmul
cmpsb
scas
or
rorl
hlt
dec
sbb
aas
push
js
cmp
lock
jae
jp
cmpsl
jns
in
mov
adc
pop
out
mov
sbb
fnstsw
pop
imul
xchg
and
shlb
mov
sbb
or
popa
push
jnp
sbb
outsl
dec
sub
leave
push
int3
ret
cmp
mov
jno
lahf
cmp
dec
adc
mov
lcall
popa
adc
or
xor
or
mov
notl
sbb
shll
jg
cwtl
pop
jle
test
and
sbb
and
pop
jp
rorl
shlb
nop
xor
mov
test
cmc
arpl
inc
popf
sub
insb
test
lret
cmp
test
popf
add
lods
std
push
insl
lcall
adc
mov
fimuls
fisttpll
push
dec
push
or
sar
ret
cmpsl
sarl
fsub
call
cmpl
sbbl
mov
or
insl
dec
xchg
sbb
lahf
and
mov
add
adc
pop
out
mov
sbbw
das
dec
dec
out
and
push
sbb
adc
xor
aad
rol
lods
adc
and
ffree
xchg
insl
sbb
and
leave
dec
enter
leave
push
dec
cli
adc
cmp
das
xchg
loope
pop
clc
lods
repz
mov
pop
stos
inc
lods
mov
je
test
sbb
stc
aas
das
pushf
movsl
pop
mov
clc
xchg
mov
xor
rcrl
test
insl
dec
push
in
add
xchg
push
add
inc
adc
ljmp
mov
pop
add
gs
mov
idiv
dec
xchg
push
or
imull
mov
in
popl
dec
and
cmp
stos
adc
or
add
jecxz
pop
jl
repz
imul
ds
cmp
les
cmp
sbb
pop
and
cwtl
das
arpl
lea
fs
sbb
sti
sbb
insb
dec
call
adc
sub
std
push
lret
or
xchg
mov
cmp
cltd
in
adc
or
mov
sbb
cmp
mov
adc
push
andl
scas
dec
jb
inc
insb
fidivl
inc
push
idivb
xlat
pop
cmpsb
mov
or
leave
mov
rcll
pop
fcomps
hlt
mov
sbb
and
imull
ret
aas
leave
lods
pop
xchg
cmpsb
or
into
int3
int
mov
xchg
hlt
add
popa
insb
mov
dec
in
inc
adc
jmp
mov
popa
call
xchg
ret
xchg
test
or
pop
adc
imul
fs
test
scas
dec
sbb
or
and
push
pop
cmpsb
xchg
push
stc
adc
jae
iret
jmp
in
inc
xchg
jno
mov
daa
mov
mov
daa
fdivr
repnz
mov
jmp
cmp
cwtl
xchg
ret
jb
ret
cld
xchg
dec
loope
stc
xor
in
sub
dec
pop
jle
mov
sbb
arpl
sub
mov
sbb
add
insl
cmp
pop
xor
int
or
push
sub
jne
cmp
je
ret
push
sbb
repz
jo
lods
push
push
add
lds
pop
jg
bound
lods
fsubp
push
enter
and
xchg
cmc
xchg
sbb
cmp
xchg
sbbb
outsb
push
mov
movsl
repz
decl
int3
ja
adc
shll
nop
fildll
enter
idiv
loopne
add
popf
loope
mov
leave
in
hlt
ret
push
cmp
in
pop
stos
int3
stos
dec
pop
jmp
fisttps
sbb
or
clc
pusha
mov
jb
scas
rcrb
push
push
leave
lods
mov
pop
pop
int
push
adc
pop
jmp
xor
push
lea
out
pop
adcl
mov
js
lcall
cli
iret
jge
inc
rol
or
and
lods
repnz
jno
sar
push
dec
fwait
icebp
out
pop
out
movsb
incl
push
fists
ret
bound
mov
loop
sbb
les
pop
sbbb
ret
push
add
pop
push
push
add
gs
xchg
es
jmp
inc
jbe
and
int
imul
in
pushf
xchg
sbb
popf
loopne
push
arpl
test
negb
mov
push
mov
lret
adc
cltd
fmul
stos
bound
je
mov
mov
pop
out
and
and
hlt
mov
dec
test
ret
in
xorb
xor
push
cli
imul
orb
mov
cld
push
loopne
cmpsb
sub
sub
pop
pop
dec
add
nop
lods
dec
pushf
movsl
inc
cs
mov
mov
sbb
push
mov
cmp
inc
jns
and
dec
add
lods
sti
test
rcll
popf
inc
jae
jg
add
lods
out
test
stc
mov
in
jmp
lds
sahf
pop
cs
insl
lods
fdivrl
data16
in
xchg
sub
icebp
push
adc
cmp
cmp
les
xor
sbb
inc
add
aas
add
insl
stc
add
out
fstpt
dec
dec
jnp
xchg
adc
lea
push
subb
enter
cmpb
pop
push
shl
pushf
fdivs
sub
inc
sbb
aad
xor
add
out
jbe
or
pop
or
sbb
iret
pushf
sub
cld
pushf
xor
ret
dec
sub
push
stos
out
pushf
repnz
mov
cmp
leave
les
insl
lds
jmpw
orl
fwait
inc
call
pop
add
in
jns
mov
pop
cmc
subb
jmp
mov
stos
cmpsb
das
mov
aaa
push
mov
cs
iret
lods
jle
jle
std
loope
xor
aas
mov
cmp
lret
or
and
cmpsb
div
pop
and
sbb
mov
mov
and
shlb
or
xchg
shl
xor
out
fnstcw
push
aam
and
cmp
int3
push
or
frstor
je
and
sub
inc
sbb
cmp
jmp
aad
clc
mov
pop
jmp
sti
daa
xlat
adc
or
arpl
aad
out
stc
ljmp
ljmp
jecxz
xor
shrl
jg
hlt
mov
dec
jnp
sub
sbb
and
xchg
cltd
pop
sub
sbb
mov
iret
imul
or
mov
sbb
sub
xor
movsb
push
insb
dec
jl
inc
push
mov
pop
mov
data16
dec
fists
adc
aad
cmp
and
add
ds
mov
jge
mov
push
push
pop
sbb
sbb
sbb
popa
sub
lahf
push
jmp
sub
sarl
idivl
mov
stos
mov
int
adc
inc
push
mov
aad
mov
nop
lods
test
jne
pushl
lret
xchg
fdivl
iret
or
and
pop
xchg
cmovnp
ljmp
pop
or
dec
dec
xchg
pop
add
pop
mov
xchg
mov
int3
test
cmp
adc
loope
sbb
int3
adc
sbb
les
sbb
pop
push
test
push
sub
ret
cld
daa
cmp
inc
cmp
mov
push
jbe
stc
mov
hlt
lock
movsl
and
pop
sbb
imul
sahf
xchg
lret
adc
mov
shlb
jmp
lcall
mov
arpl
adc
pop
pop
aas
cmc
out
jne
aam
jge
insl
jns
inc
mov
das
lcall
jmp
push
movsl
xchg
push
sub
dec
jle
jmp
cltd
ror
xchg
xor
cmp
dec
orl
sub
cmc
push
repnz
xchg
ret
shrl
dec
fwait
push
rclb
bound
aaa
sbb
cmp
in
outsl
insl
mov
and
ficompl
pop
pop
xchg
and
push
arpl
mov
stos
mov
and
gs
out
test
and
ret
arpl
xor
out
mov
call
sbb
movsb
mov
fisttps
stos
and
mov
dec
push
jmp
push
push
pop
rorb
sbb
sub
cli
jmp
sti
jle
jecxz
push
mov
lds
icebp
pushf
jge
les
mov
lds
mov
test
xchg
mov
cmc
add
push
lret
push
mov
aaa
sbb
fsubrl
sub
xchg
or
pushf
gs
stc
out
or
imul
icebp
out
jbe
cmc
push
cmp
in
dec
icebp
filds
into
stc
pop
jmp
jns
insl
push
mov
jo
daa
outsl
js
push
jg
out
mov
and
dec
shll
insl
mov
sahf
mov
lock
dec
insl
imul
sub
lret
dec
or
sbb
shr
and
jnp
cmp
cmp
les
push
int
lds
adc
sbb
pushf
jle
inc
lret
jbe
jne
fwait
mull
xor
adc
jl
mulb
rorb
jne
test
or
xor
out
sub
xchg
add
insb
repz
cmp
int3
cli
mov
das
inc
xor
imul
xor
popa
mov
rol
dec
adc
daa
push
in
fildl
xor
add
inc
cmp
push
or
lea
cmc
push
lods
sti
fmull
xlat
xchg
cmpsl
push
pop
test
loop
test
mov
lret
lret
or
push
insb
pop
sbb
repz
jo
and
out
mov
jnp
in
push
pop
push
inc
nop
cli
jae
push
mov
test
call
mov
loop
adc
aas
ret
jmp
sub
lea
scas
mull
enter
out
call
or
sub
sbb
imul
repz
std
enter
cmp
test
arpl
leave
scas
add
xchg
and
das
push
fcomp
mov
mov
cmp
dec
aad
push
aaa
data16
adc
hlt
pop
pop
mov
test
or
loopne
dec
add
mov
shrb
sbb
or
jo
into
int
stos
sbb
jns
mov
mov
mov
mov
pop
pushf
icebp
sbbb
mov
stc
jbe
sub
push
ret
xchg
aam
outsb
int
or
inc
cmp
mov
das
lock
inc
ljmp
lahf
rcll
scas
jmp
iret
mov
adc
xchg
arpl
adc
adc
xor
mov
mov
xlat
push
dec
jmp
push
test
cmp
lret
js
mov
lock
mov
xor
js
push
inc
mov
in
loopne
dec
adc
ficoms
jle
pop
jns
mov
pop
jecxz
add
pop
insl
je
pusha
pop
xchg
into
jb
repz
dec
fistpll
imul
leave
add
mov
ficoml
jle
aam
mov
loop
sar
iret
ds
bound
inc
bound
adc
or
cmp
or
inc
mov
sub
gs
mov
insb
test
push
ljmp
cmc
jmp
arpl
roll
or
ss
push
mov
test
orl
aad
loope
inc
pop
jecxz
std
add
cmpsb
jnp
lea
mov
stc
ret
loop
jmp
push
cmp
add
mov
xchg
sbb
mov
aad
xchg
in
and
int3
repz
cmp
repnz
mov
out
imul
out
mov
mov
mov
imul
mov
push
sub
xlat
or
into
xchg
clc
loopne
push
popa
jecxz
push
das
jne
lahf
mov
nop
lret
ds
or
mov
add
mov
loop
mov
dec
push
and
and
je
daa
mov
push
pop
mov
gs
xchg
pop
mov
mov
fcoms
dec
movsl
fwait
int3
pop
rcrb
es
cltd
sti
and
and
out
sahf
cs
push
add
stc
popf
pop
push
jp
sti
hlt
outsb
and
inc
dec
mov
inc
daa
mov
adc
push
add
int
adc
nop
dec
pop
das
pop
and
es
push
push
mov
cmpsl
cmp
aam
ficoml
aad
imul
or
pop
mov
lods
lret
fsubrl
pop
xchg
loop
and
mov
lea
fidivs
sub
xchg
lret
icebp
jbe
or
xchg
mov
jae
lds
fs
pmovmskb
inc
dec
cmp
and
rcrl
lock
stos
call
bswap
aad
push
pop
test
insl
dec
fsubrs
pushf
xlat
inc
insl
cmc
aas
or
ficomps
in
lock
xchg
icebp
inc
cmp
sub
mull
sbb
int3
mov
mov
sub
mov
jge
or
stc
inc
and
js
ret
mov
popf
mov
les
pusha
lds
rcrl
mov
call
sbb
lods
xchg
movsb
cmp
jne
and
inc
jg
jp
push
aaa
push
inc
jg
adc
and
pusha
gs
xchg
xor
bound
and
sub
mov
lea
imul
ss
cmp
pop
loopne
or
inc
iret
rcpps
insb
push
in
pusha
shl
out
or
addb
or
es
jg
ljmp
sahf
aad
xchg
mov
jnp
or
pop
mov
xor
and
jge
mov
or
push
test
push
ds
add
mov
xor
pop
pop
and
pusha
fcoms
push
icebp
push
ds
sbb
add
mov
in
fsts
cmpsb
ljmp
scas
daa
fwait
lcall
dec
lahf
xor
lods
vmwrite
fnstsw
adc
lret
xor
nop
push
sbb
add
adc
xor
cltd
jmp
nop
cmpsb
xlat
xor
fisubs
dec
cmpsl
sub
ja
jg
dec
dec
xchg
gs
mov
stos
fdivrl
jnp
arpl
add
add
test
lret
cmp
jns
sub
pop
sbb
mov
icebp
js
shll
mov
pop
jmp
lea
or
les
xor
mov
mov
loope
cli
xor
jns
stos
sub
inc
fidivl
sub
xchg
and
insl
pop
sarl
mov
rolb
xor
into
shr
and
iret
dec
adc
xlat
or
mov
lret
jo
pushl
push
cltd
test
repz
add
lds
mov
das
mov
add
sti
pop
inc
push
in
mov
mov
or
sbb
adc
sahf
or
mov
ffree
xchg
mov
stos
mov
ret
mov
imul
add
jmp
mov
and
cs
aaa
ds
jne
xor
pop
xchg
inc
adc
bound
sbb
pop
add
rorl
dec
movb
in
sub
pop
bsf
xchg
shll
arpl
outsl
push
testl
les
in
and
data16
pop
add
je
mov
mov
jecxz
shlb
testb
jnp
scas
aas
dec
mov
xor
mov
rcll
lret
test
dec
mov
mov
dec
shll
insb
jl
pop
cmc
ret
stos
insb
rorb
rorb
ljmp
mov
orl
push
pop
mov
mov
pop
ljmp
mov
test
inc
cmp
sub
sub
dec
mov
cmp
adc
mov
cli
daa
cld
mov
cmpsl
push
sub
pop
xor
sbb
fisubrl
imul
or
jp
shlb
imul
lods
adc
test
and
add
adc
jns
inc
adc
outsl
movsl
sti
mov
outsb
mov
pop
fisttpll
je
arpl
push
mov
repz
out
adc
mov
mov
xor
test
insb
mov
lods
rcll
lock
mov
stos
fucomip
out
cmp
in
lahf
roll
rcl
mov
pop
scas
popf
test
mov
pop
sub
xlat
arpl
popf
inc
addl
mov
imul
iret
xchg
xor
mov
fsubrl
sub
xor
dec
mov
adc
jmp
scas
cmp
clc
lea
xchg
adcb
xor
adc
pusha
mov
pop
xor
lcall
xor
push
push
xorl
push
pop
inc
cmp
xor
in
or
xchg
sti
mov
mov
pop
cli
mov
pop
pop
out
mov
in
popf
cmp
add
data16
ficompl
lea
dec
xor
aam
inc
lcall
lretw
mov
out
or
jns
mov
cmpsl
lahf
into
rorb
push
push
dec
xchg
stos
mov
aaa
pop
jbe
ret
xchg
mov
js
pop
and
ret
push
mov
mov
fld
inc
adc
mov
popa
and
sbb
mov
aam
divl
jo
outsl
sahf
dec
sti
rcl
jg
mov
loopne
dec
xor
in
in
out
sbb
or
loop
xchg
push
add
adc
fidivs
dec
mov
stos
add
scas
enter
pop
pop
xor
mov
adc
mov
jge
lds
int3
cs
or
lods
addl
movsl
test
jo
inc
ljmp
xchg
add
lods
pop
fs
cld
xor
lods
ds
jns
cmp
pop
mov
sub
cmp
push
addr16
dec
aad
xchg
dec
pusha
cmp
dec
xchg
xchg
xchg
into
mov
into
imul
push
xor
dec
jns
mov
mov
jp
cs
mov
fldl
mov
stc
xchg
int3
xor
in
test
int
sbb
or
mov
jge
int
into
sub
fwait
in
add
popa
jbe
icebp
popf
mov
push
ret
sbb
cmc
lods
inc
adc
sub
inc
fnsave
mov
adcb
adc
inc
jle
scas
xor
mov
cs
and
pop
enter
xor
in
aad
mov
pushf
mov
sbb
pop
jmp
icebp
es
sub
inc
xor
test
daa
fcoml
fwait
sub
out
push
cld
mov
out
mov
outsb
outsl
setnp
mov
sub
mov
xchg
notl
fimull
iret
loopne
sbb
aad
xchg
fdivrl
adc
fidivrs
inc
mov
call
mov
mov
andl
inc
aam
sbb
cli
inc
and
mov
inc
lods
lock
inc
push
xchg
sub
sub
push
cwtl
add
in
push
cmp
sbb
or
pop
fistl
cmp
imulb
jbe
inc
ret
subb
jp
mul
adc
cs
fs
mov
icebp
fstpl
fbld
push
jg
inc
aad
out
scas
pusha
scas
mov
inc
cmpsb
rol
sub
popf
add
arpl
lret
testb
fs
iret
pushf
insl
fucomp
mov
inc
mov
xchg
aad
adc
jle
mov
mov
push
dec
pushf
mov
pop
cmpb
dec
mov
repnz
or
inc
pop
mov
and
mov
sbb
add
imul
push
in
in
jns
dec
xor
push
mov
addr16
mov
insb
out
les
aas
iret
mov
mov
xor
test
add
loope
jecxz
jge
lods
push
xorl
stc
imul
jg
inc
cmc
addr16
push
jns
dec
in
jl
call
dec
mov
push
loope
or
pop
sbb
sbb
lds
stos
ljmp
fnstcw
jnp
bound
int
push
mov
push
mov
aad
jmp
push
mov
push
dec
mov
mov
lret
xchg
pop
cmp
es
aad
pop
pop
push
mov
pop
shl
das
aas
sub
mov
test
cld
or
ret
mov
xchg
cwtl
cmp
push
pusha
pop
xor
rclb
mov
pop
fistps
mov
pop
or
and
pop
push
add
xlat
insb
gs
divb
sub
sub
adc
mov
adc
testl
mov
jae
adc
jle
jnp
lahf
jg
std
cmp
inc
dec
or
popa
or
inc
jo
dec
adc
add
lds
scas
aas
fucomp
push
xor
inc
divb
test
pop
xor
pop
lcall
and
mov
or
jle
jb
daa
out
sub
jo
mov
cmp
ret
mov
dec
mov
inc
adc
mov
jns
lods
pushf
cmovl
xchg
or
xchg
fistpll
mov
je
mov
and
pop
ja
iret
lods
int
mov
mov
scas
setbe
ja
pop
jecxz
xor
lds
and
mov
jbe
movsb
inc
jns
rolb
mov
loopne
sub
xchg
dec
jno
sbb
aaa
test
repnz
and
pop
and
add
inc
lea
sbb
mov
jnp
pop
mov
popl
test
xor
popf
lea
rolb
pushf
or
dec
cmpsb
mov
pop
ret
mov
push
cmp
fs
add
push
adc
sbb
adc
xchg
mov
mov
add
dec
pop
out
stos
mov
scas
push
sub
outsl
mov
aad
mov
dec
adc
sub
lods
or
add
mov
out
mov
add
jb
lds
pop
xchg
xor
xchg
cld
pop
int3
jb
cmp
and
addr16
shll
inc
vmwrite
in
add
in
push
push
repz
or
cmc
jnp
subb
mov
add
dec
pusha
stos
aaa
ljmp
mov
mov
cmc
mov
test
inc
frstor
add
iret
and
rclb
pop
hlt
popf
xchg
and
movsb
jns
aam
dec
cmpsl
je
repnz
and
iret
cmp
sbb
sbb
popl
and
push
loopne
adc
ret
jbe
xchg
scas
adc
dec
dec
mov
arpl
iret
leavew
outsb
mov
xor
daa
fcmovnu
sqrtps
out
xchg
sbb
stos
ret
lahf
leave
insl
pop
pop
pushf
dec
popa
jb
and
push
xor
inc
xor
das
add
push
xchg
sub
out
pop
xchg
scas
into
pop
pusha
jb
mov
jne
pop
xor
cmpsl
rcll
mov
and
cmp
out
out
xor
pop
loope
mov
xor
sub
cmp
mov
or
insl
roll
pop
in
mov
mov
jae
popa
dec
aaa
fst
out
pop
jmp
inc
loop
call
shll
dec
dec
repnz
jo
divl
xor
inc
pusha
loope
in
fs
fdivp
into
jg
stos
icebp
push
xchg
or
and
cmp
ret
pop
push
push
mov
mov
pop
rcrl
xor
outsb
dec
mov
xlat
xchg
adc
lahf
xor
test
cmpsb
sub
cmp
mov
fldt
in
fwait
in
daa
test
outsb
sub
mov
dec
cwtl
pushf
pop
mov
mov
ds
out
aad
decb
lods
mov
pop
jge
movsl
xchg
sub
pop
and
je
sub
insl
xor
lods
jecxz
leave
lock
or
inc
mov
xor
dec
pusha
push
inc
dec
popa
outsb
pusha
adc
pusha
pop
imul
cwtl
inc
lret
outsb
pop
push
out
pop
xlat
idivb
int
sbb
ss
imul
sbb
loopne
push
iret
and
sub
pop
mov
jae
sti
dec
iret
or
pop
out
push
test
cmpl
fidivs
test
jmp
pop
test
adc
add
fcoml
inc
dec
sub
pop
cmp
jle
pop
pop
std
adc
jmp
xchg
int
