cltd
jge
pop
inc
xchg
mov
and
mov
xchg
mov
pop
mov
stc
mov
lret
ret
add
andb
inc
lds
rclb
cmpsb
dec
or
cmp
jne
lret
cld
xchg
push
adc
sub
imull
xor
dec
int3
dec
loope
mov
test
mov
add
in
mul
adc
add
mov
ljmp
pop
inc
or
lret
fs
push
or
mov
pop
push
shlb
or
inc
xchg
mov
jns
or
lcall
test
lods
hlt
cli
flds
jo
sbb
jge
jne
ret
mov
lock
insl
jns
or
xchg
jne
lret
push
mov
cmp
add
jns
sarl
roll
pop
mov
lret
mov
cld
adc
decl
inc
shll
xchg
ljmp
dec
test
sub
xchg
push
std
dec
inc
mov
out
mov
add
inc
xor
dec
xchg
push
aam
pushl
out
sar
dec
pop
push
sub
inc
xor
repnz
add
inc
push
sub
or
pop
je
mov
stc
rorl
xchg
mov
xor
arpl
ret
mov
inc
xchg
or
push
mov
mov
jb
outsb
xchg
mov
add
xchg
push
rclb
dec
push
cld
roll
push
dec
pop
lret
or
mov
gs
aam
mov
pop
ret
mov
add
mov
fmul
mov
dec
cltd
inc
popa
inc
pop
inc
xchg
mov
pop
jne
lret
adc
pop
jp
adc
lret
jge
pop
mov
or
stos
or
cmp
icebp
pop
xor
or
inc
adc
xchg
dec
jno
ljmp
mov
add
fdiv
fstpl
daa
fucom
sbb
in
jmp
mov
loop
fsts
clc
and
sar
out
fcomi
and
es
loop
into
aas
fsts
loop
and
fcmovnu
and
out
jmp
mov
dec
add
inc
rolb
mov
inc
and
sbb
pusha
xor
xchg
ret
pop
fidivl
dec
fdivrs
pop
push
pop
imul
dec
ds
pop
push
inc
xor
jbe
insb
addr16
push
dec
jle
and
je
pop
add
jg
call
mov
mov
fwait
shlb
cmp
add
and
fnstcw
inc
and
or
cld
fsubs
adc
rcrl
push
cmp
and
fyl2xp1
flds
fldt
adc
add
pop
shlb
ficompl
fucomp
outsb
sbb
mov
lcall
inc
and
push
push
movsl
push
mov
pop
inc
pop
fistpll
dec
push
arpl
mov
jl
sbb
add
fildll
cmp
ss
push
push
mov
mov
inc
pop
mov
adc
xchg
shlb
outsl
ret
cwtl
mov
inc
in
pop
into
jge
jmp
cmpsl
pop
pusha
pop
out
and
cld
xchg
minps
inc
and
adc
pusha
outsl
pop
fiaddl
inc
xor
mov
lcall
xchg
sub
mov
mov
inc
in
cmp
fadd
addr16
dec
ffreep
xor
xchg
pop
push
insb
test
insl
shll
jg
add
aaa
jle
push
xchg
pop
push
pop
mov
pop
pop
and
and
jle
and
je
pop
add
jg
jg
aas
inc
add
cmp
fldt
mov
and
fimuls
loopne
out
jne
mov
pavgb
stc
addr16
ficomps
adc
mov
cmp
push
cwtl
mov
loopne
ss
imul
insb
insb
test
sti
inc
imul
inc
imul
mov
mov
pavgb
shl
mov
pavgb
mov
pop
bound
xor
je
jnp
movsb
push
mov
hlt
rcrb
push
psubq
mov
repz
mov
adc
add
push
mov
aas
xchg
rorb
inc
insl
test
mov
aas
add
add
xlat
adc
dec
out
mov
rcll
fstp
cmc
xchg
adc
mov
xchg
shlb
jl
ret
mov
xchg
mov
inc
lds
mov
xchg
in
clc
cmp
or
icebp
cmc
xchg
shlb
cld
pop
cmp
fadds
jae
dec
sub
jbe
into
xchg
cld
jo
scas
inc
repz
mov
in
leave
xchg
shll
sub
push
mov
and
rolb
ds
fdivs
inc
repz
icebp
fsubrp
jmp
mov
add
adc
adc
mov
xor
into
aas
jb
mov
aas
sbb
inc
movntps
mov
out
or
clc
iret
mov
dec
or
je
out
push
mov
lahf
xchg
imul
ds
mov
inc
lds
divl
fldpi
in
push
xor
movsb
test
xchg
fidivl
inc
and
ss
and
sahf
and
sahf
mov
dec
sbb
popf
pop
xchg
lret
popf
movsl
mov
mov
jo
jne
xchg
dec
mov
mov
and
adc
xchg
ret
mov
inc
iret
fdivrp
fisubrs
flds
ja
xchg
cmp
xor
jle
loop
and
ds
pop
mov
adc
cwtl
jnp
and
adc
adc
add
invd
add
add
mov
aas
imul
mov
push
sbb
repz
mov
cmove
fimull
jmp
xchg
mov
in
sbb
and
xor
inc
pop
and
push
clc
push
je
inc
add
mov
mov
mov
dec
push
icebp
mov
xchg
push
inc
fmull
aam
adc
aas
add
fprem
jmp
out
mov
add
repz
rolb
scas
testb
sti
jmp
call
mov
fmul
xchg
cmp
jne
cwtl
add
out
ds
pop
addr16
jp
das
add
mov
jae
inc
pop
jae
dec
sub
mov
pop
repnz
dec
iret
dec
lods
ret
lock
pop
jbe
adc
xchg
fdivl
out
mov
add
and
and
or
inc
adc
inc
cmpsb
sbb
add
xor
daa
stos
inc
test
sbb
pop
pop
cs
std
ss
rclb
imul
out
xor
fwait
jmp
add
mov
or
add
movsl
dec
mov
inc
and
sbb
fildl
or
jmp
imul
push
aaa
or
and
stc
aaa
cmp
push
mov
mov
cld
gs
and
std
shl
jle
mov
mov
iret
fnstenv
push
sbb
clc
xor
dec
stos
mov
dec
or
adc
jge
jo
add
pop
mov
rclb
cld
jbe
sub
mov
or
and
adc
sub
pop
lcall
in
repnz
stc
pop
pusha
fildl
dec
mov
xchg
or
jb
add
xor
and
jo
test
or
sbb
or
xchg
fisubs
jnp
adc
aas
or
jmp
sbb
adcl
xchg
inc
pop
xchg
mov
repnz
sbb
cs
pop
mov
mov
push
jnp
aam
pusha
mov
inc
xchg
leave
filds
or
fcoms
dec
lock
jnp
pop
aas
lods
in
cmc
add
mov
xor
lods
and
adc
fidivrl
jp
std
andb
xchg
aad
notl
and
shlb
lea
dec
rorb
cmp
in
icebp
mov
fadds
mov
testl
mov
dec
aad
cmp
and
in
pop
cmp
pop
adc
or
hlt
ja
outsb
dec
bound
ss
lods
sbb
call
sbb
mov
push
xor
pop
pop
loope
mov
test
mov
or
mov
jle
add
add
ss
mov
pop
add
hlt
sub
icebp
cmp
ss
pop
bound
imul
jno
jae
push
sbb
lret
mov
push
sbb
clc
adc
lods
rcll
inc
push
mov
clc
xchg
in
sub
push
fstpl
outsb
bound
adc
js
pop
inc
movsl
mov
sbb
prefetch
xchg
shll
in
mov
std
mov
mov
cmp
jne
sbb
and
xchg
js
jne
inc
mov
mov
scas
les
rclb
std
incb
mov
mov
sub
mov
js
notb
ds
push
mov
adc
and
mov
in
and
dec
fwait
push
pop
and
fcoms
sbb
outsl
or
bnd
xlat
and
and
in
pushf
push
xchg
loop
adc
inc
add
cmc
mov
add
testb
or
test
sub
xchg
jp
sbb
rorl
or
stc
cs
iret
pop
adc
imul
xchg
pushf
imul
clc
inc
ja
in
movsb
inc
xor
cs
add
sub
mov
aas
push
out
mov
js
xchg
sbb
dec
adc
mov
cmpsl
pop
mov
enter
adc
pop
clc
push
es
push
mov
fwait
mov
addl
pop
dec
mov
outsb
loopw
inc
jge
daa
dec
scas
and
ljmp
or
shrb
mov
cmpsb
rclb
rcr
popf
adc
cmp
mov
call
test
push
jle
leave
pop
sbb
cmp
pushl
push
lods
mov
sub
adc
fs
les
adc
mov
ret
ficoms
fs
faddl
arpl
cmpsb
push
test
data16
insl
xor
pushf
cmc
sub
mov
xor
aad
bound
daa
stos
notl
mov
icebp
das
mov
inc
cwtl
lret
mov
insb
mov
pop
lret
loop
sub
clc
sbb
xor
stos
insl
jo
mov
minps
aam
iret
xchg
stc
mov
addr16
cli
ja
cmpsl
inc
push
pop
scas
mov
lods
add
sbb
push
rorl
xchg
shll
or
loope
bsr
out
xchg
ja
hlt
call
hlt
cmc
imul
pmaddwd
fwait
xchg
or
push
lahf
mov
das
jmp
push
jge
arpl
rclb
bound
cmc
and
push
adc
sub
pop
std
xchg
imul
and
xchg
adc
nop
xchg
jbe
xchg
cwtl
movsl
cs
lcall
mov
fnstenv
adc
inc
insb
hlt
rcl
orl
bound
pop
popf
std
pusha
test
xor
imul
inc
hlt
or
sub
xchg
mov
mov
outsl
ljmp
push
stos
sbb
mov
cmp
xor
aas
xchg
adc
sbb
and
arpl
cmp
xchg
xchg
mov
popa
mov
lock
stc
mov
dec
xchg
rorb
ds
in
jmp
mov
repnz
pop
icebp
mov
lds
add
lods
cmpsl
fisubrl
decl
int
test
and
lock
ret
add
imul
je
pop
insl
jae
mov
mov
pushf
dec
mov
inc
mov
into
incl
icebp
cmp
pop
cmp
jle
cmovno
repz
out
pop
movsb
or
in
add
push
pusha
lcall
mov
sub
adc
cmp
inc
xchg
adc
repz
xchg
out
cmp
arpl
in
mov
hlt
mov
pusha
or
and
dec
in
ja
imull
inc
push
fldl
xchg
adc
pop
daa
lock
int
testl
mov
cltd
rclb
push
mov
not
dec
ds
cmp
jne
fisubrs
int3
iret
mov
loop
or
dec
mov
adc
dec
andl
ret
and
test
fstpl
mov
pop
test
gs
or
xchg
js
shll
out
repz
mov
sbb
xor
xchg
daa
fildl
test
aaa
gs
and
jp
sbb
pop
mov
sub
jnp
mov
xor
ret
clc
cwtl
fdivl
enter
es
movsb
push
push
sbb
sarb
adc
lods
imul
cmp
aam
mov
dec
sub
outsl
push
mov
jae
mov
clc
dec
aas
pop
ret
jbe
test
inc
fmuls
mov
les
out
loop
sbb
jl
repnz
pop
cmp
fstps
add
mov
mov
lahf
sub
cmp
sub
ljmp
rcll
lods
or
outsb
insb
mov
mov
daa
sbb
fsubp
lret
sbb
je
adc
aas
jnp
iret
dec
je
dec
sbb
mov
mov
insl
repz
mov
adc
fldenv
addb
push
outsb
xor
adc
int3
in
mov
ds
xchg
test
push
clc
test
mov
push
xor
addr16
pop
movsb
push
mov
mov
cwtl
xchg
push
inc
nop
xchg
inc
push
mov
leave
jae
enter
ds
jb
adc
stc
xchg
jne
fs
mov
mov
lea
pop
cli
bound
xchg
sbb
xchg
test
mov
out
cmpsb
mov
in
jne
aaa
sub
mov
jae
arpl
addl
fisttpl
popa
repnz
dec
mov
orb
adc
outsl
mov
imul
addb
std
outsb
repz
arpl
sbb
insl
add
mov
mov
outsb
wrmsr
loop
call
cmp
subb
test
nop
sysret
fidivrs
pop
push
sub
jle
push
arpl
std
decl
xor
std
pushf
movsl
pop
sbb
aas
pop
jmp
imul
fldenv
es
push
or
popf
dec
push
push
push
adc
xchg
cmp
icebp
sub
cmp
scas
adc
ljmp
aad
cmc
xor
cmpsb
les
xchg
and
and
xchg
sub
mov
push
or
fsubrl
adc
arpl
add
push
mov
rcpps
mov
ret
or
into
sbb
inc
mov
and
repnz
arpl
faddp
push
pop
in
mov
xor
sbb
std
and
roll
xor
das
loop
or
data16
test
repz
ficomps
inc
jp
dec
sub
cwtl
lret
movups
xlat
mov
jmp
test
add
scas
cmpsl
add
test
xor
xchg
dec
cltd
aam
in
sti
jmp
mov
rcll
sti
pop
cmpsb
incb
pop
add
cmpsb
pop
dec
daa
jbe
pop
jmp
jmp
mov
or
outsb
adc
mov
mov
leave
sub
jge
mov
dec
or
push
aas
in
roll
push
cmp
or
clc
imul
sbb
rcrb
adc
and
aad
sub
cmc
inc
push
and
mov
icebp
xchg
jge
aad
arpl
shl
xor
push
pop
dec
push
leave
frstor
sbb
je
sbb
arpl
int3
aas
lahf
lret
xor
mov
or
movsb
jmp
addr16
cmpl
int3
adc
add
push
pop
cmp
dec
popa
cmc
xchg
pop
mov
stos
insl
std
fucomip
xchg
or
inc
sbb
mov
inc
mov
pop
cwtl
pop
icebp
pop
out
je
in
sub
push
lock
test
stc
repnz
xchg
jno
outsb
push
inc
aam
adc
xchg
add
aaa
push
lcall
sbb
add
push
cltd
les
mov
xchg
push
sub
dec
mov
cmpsl
cmpl
mov
clc
mov
std
test
sbb
fiaddl
ds
pop
orl
inc
repz
xlat
dec
out
push
stos
imul
mov
nop
add
push
sti
ds
ss
xor
dec
jns
js
lds
mov
sbb
ljmp
sub
mov
xchg
and
js
pushf
inc
inc
int3
sub
mov
or
inc
mov
inc
fstpt
sbb
out
lods
pop
hlt
pusha
in
mov
adc
shl
or
fmul
adc
jge
and
xchg
cmovp
int3
push
insl
mov
js
orl
and
jmp
ds
mov
jmp
adc
xor
xor
inc
fldenv
aad
cmc
cmp
mov
and
cs
push
loopne
fstpl
sti
add
aas
lods
pop
incb
pop
out
jge
mov
stos
cmp
sub
bound
xor
fcoml
push
sbb
cld
pop
xor
push
dec
xchg
test
loopne
push
add
push
xchg
mov
rorb
andb
push
add
xor
aam
add
add
movsb
popf
push
xchg
or
jle
pop
dec
out
mov
and
adc
iret
sub
xchg
cmpsl
js
imul
adc
shll
clc
add
push
fs
pop
sbb
sbb
mov
int3
or
xor
fldenv
adc
dec
stos
push
mov
jbe
lds
ljmp
xchg
sub
add
jle
cli
xchg
xor
push
pusha
xchg
push
out
xchg
sub
fiadds
inc
lret
ja
add
xor
pushf
cmp
mov
or
cld
je
or
scas
in
insl
push
cmp
js
add
es
mov
fdivs
movsl
xchg
jg
dec
sub
or
inc
imul
inc
fdecstp
lods
xorl
mov
mov
add
push
sti
aad
leave
int3
aad
mov
pusha
adc
cwtl
xchg
jae
mov
xchg
aaa
out
mov
inc
imul
popa
aad
clc
scas
or
scas
or
das
dec
loopne
cmp
mov
scas
shlb
rcrb
and
inc
xchg
sub
and
and
mov
jmp
sysexit
pop
add
rolb
pop
pop
mov
rep
out
adc
sbb
xchg
jg
in
arpl
stos
cmp
cmp
sbb
enter
cli
pop
cmp
fsubrl
xchg
out
daa
rcrl
xchg
fdivrs
mov
mov
ja
mov
std
popf
shl
push
movsl
cld
cmp
aas
jp
pop
jne
pop
sub
fsubrs
or
leave
jle
xchg
insb
dec
inc
add
loopne
adcb
jle
stc
adc
std
pushf
das
aam
lds
jmp
ret
lds
adc
jbe
or
cs
xor
push
sbb
fdivr
mov
ja
and
xchg
push
adc
inc
int
loop
sub
loope
adc
les
sub
test
xlat
int3
leave
subb
or
mov
xchg
lret
or
jecxz
nop
or
mov
les
cmp
divb
fs
cmp
movsl
pop
decl
ljmp
inc
in
add
and
dec
sbb
aam
inc
mov
cmp
mov
inc
mov
lret
loopne
inc
jge
mov
into
mov
add
ret
mov
xchg
sarl
lret
rcr
das
stos
pushf
out
je
add
push
repz
in
push
jnp
cltd
and
sub
loope
mov
nop
jle
mov
outsb
ds
inc
fimuls
aas
pop
pop
xchg
dec
mov
iret
cwtl
add
xchg
or
pop
cs
xor
test
xchg
lds
mov
outsl
or
lret
cld
shll
imul
cmc
scas
xchg
stos
inc
jle
push
mov
jle
not
ss
daa
data16
shll
adc
sarl
add
orl
imul
pop
dec
and
sbb
or
cmpl
fstps
incb
mov
or
dec
push
add
mov
cmp
icebp
and
in
fnstenv
mov
push
mov
sub
sbb
jmp
inc
jle
dec
je
pop
or
mov
xchg
or
jle
jle
in
xor
xchg
sub
in
xchg
dec
lds
in
test
in
cmp
mov
xchg
fldln2
push
and
adc
push
pop
dec
mov
and
add
test
lcall
and
dec
mov
scas
andb
lret
inc
mov
testb
orb
xor
inc
push
pop
fwait
mov
lods
repnz
mov
and
push
inc
dec
add
mov
ds
mov
adc
subl
push
lds
sarb
ror
pop
jl
mov
stos
addr16
adc
push
xor
cmc
cmc
xor
push
adc
mov
cmp
dec
arpl
dec
sub
mov
mov
scas
ret
aaa
push
xor
jg
adc
sbb
mov
xor
or
ret
aam
dec
ss
mov
mov
jge
lods
xor
pop
inc
xchg
sbb
inc
xor
adc
insb
sbb
sbb
fld
pop
push
adc
add
faddl
mov
cwtl
addr16
adc
jl
or
daa
mov
roll
fbld
pop
mov
jle
ret
xor
jae
cs
in
xlat
loopne
or
add
stos
movsb
or
cltd
sbb
ret
push
or
cld
cmp
out
xor
cmp
adc
out
ja
ja
cwtl
pop
or
or
or
add
jmp
icebp
lcall
test
add
jg
pushf
lea
fcomi
and
movb
jbe
and
scas
div
add
fdivs
bound
test
jg,pt
cmp
dec
sti
adc
adc
dec
sahf
pop
cld
jmp
repz
xor
aad
mov
sub
pop
and
daa
int
mov
inc
or
fldl
push
xchg
xlat
mov
mov
or
mov
into
mov
lods
inc
nop
ds
sub
sub
jne
leave
xchg
cmp
jno
xchg
test
add
insl
pushf
dec
sbb
sbb
pop
in
mov
push
dec
ds
adc
sub
pop
pushf
hlt
leave
sti
jl
out
or
cltd
cmp
and
rcrb
sbb
popf
nop
orps
fwait
es
mov
sub
xchg
sub
add
sub
mov
cmp
test
sbbl
push
mov
stos
jle
movss
es
adc
enter
test
adc
call
fs
rclb
popf
rclb
stc
jbe
ret
cmpl
sub
aad
xor
iret
aas
jae
jg
fldl
enter
fcoml
repz
push
ds
arpl
loop
or
mov
in
lds
scas
cmpsb
xchg
sub
repz
loope
xchg
push
mov
cld
imul
mov
xor
sbb
mov
sub
test
adc
fwait
imul
jne
incl
fwait
dec
in
push
inc
jle
sar
jp
cmpsb
fcoml
scas
psubusw
sbb
add
into
dec
pop
sti
xchg
ljmp
cmpsl
push
and
sahf
fiaddl
jne
hlt
push
adc
mov
outsb
mov
fnstsw
push
jle
mov
aas
dec
adc
scas
mov
jns
jle
or
mov
lcall
mov
mull
and
mov
xor
mov
mov
pushf
add
and
pusha
mov
or
lahf
addr16
cmp
cli
add
sub
inc
xchg
adc
jmp
fiadds
jmp
xor
sub
scas
int
xor
sahf
in
inc
cmpsl
sbb
arpl
lret
cmc
iret
mov
adc
loopne
sbb
add
cltd
sbb
dec
mov
xchg
adc
xchg
push
loope
adc
jns
icebp
scas
mov
jg
pushf
ds
gs
fidivl
pop
decl
es
cli
out
loopne
mov
std
pause
inc
repz
and
xchg
shll
cs
jg
add
fwait
in
or
fisttps
in
test
adc
sub
stos
and
add
out
fdivs
nop
cmp
sbb
and
xchg
loope
gs
cmpsl
aaa
repnz
mov
sub
mov
dec
xchg
cmp
data16
pusha
das
dec
nop
ret
adc
sub
negb
or
push
add
stos
add
outsl
arpl
add
ss
sub
pop
icebp
xchg
or
mov
test
testl
inc
lock
repz
jae
movl
push
stos
cmp
jo
jnp
jg
aad
inc
mov
mov
idiv
push
rcl
pop
lahf
adc
xchg
push
lods
aad
es
movsb
push
les
mov
rorb
aad
int3
shld
pushf
sbb
jp
sbb
test
inc
pop
lods
xchg
mov
daa
cmp
ret
mov
mov
dec
dec
jb
sub
inc
mov
xchg
movsl
and
out
push
cmpsb
add
inc
pushf
or
push
xchg
lret
inc
mov
test
jbe
test
sub
dec
sbb
jl
sahf
std
mov
dec
adc
add
pop
xchg
mov
dec
fstp
std
pop
sub
mov
xor
xlat
fcomip
loope
repz
es
adc
ror
adc
adc
nopl
add
xor
sahf
cmc
push
xchg
icebp
jecxz
or
jbe
sti
inc
fwait
pop
inc
jle
dec
push
inc
outsb
xor
sbb
aad
sub
in
cld
mov
or
stos
incb
pop
xorb
push
and
inc
lods
pop
sbb
xchg
repnz
stc
outsl
add
adc
pop
xor
insb
pop
push
adc
mov
lahf
xchg
iret
jle
pop
fstl
sbb
sbb
adc
pop
dec
fiaddl
aas
pop
scas
cmp
or
sub
pushf
jmp
push
lcall
xchg
lahf
mov
stos
xchg
cmp
adc
sub
in
xor
cmc
imul
rolb
out
dec
repnz
cmpsl
xor
xlat
cltd
push
dec
mov
cmp
lcall
cmp
xchg
sub
sahf
pop
mov
or
test
ret
mov
push
add
inc
icebp
or
adc
frstor
push
fisttpll
fwait
and
cmpsb
xor
aas
icebp
rcrb
lods
xor
jb
sarb
fcoms
nop
mov
dec
stos
fidivs
pop
sub
mov
movsb
dec
xchg
and
shr
mov
insb
inc
loop
jb
adc
cmpsl
pop
imul
adc
scas
clc
test
dec
notb
scas
and
pop
and
daa
pop
mov
iret
nop
mov
mov
ficoml
cmp
mov
test
std
fwait
add
leave
mov
adc
ror
mov
sub
nop
sbb
mov
mov
ss
mov
pop
sbb
or
lret
cli
fnclex
push
xchg
or
int3
xchg
es
pop
fcmove
nop
inc
nop
pop
cmpsl
sub
loop
nop
cmp
or
jmp
push
adc
mov
dec
mov
dec
pop
lret
lret
rolb
xor
stos
inc
adc
adc
addr16
dec
insl
andb
inc
in
jmp
dec
xchg
std
jae
pop
and
adc
outsb
cmp
je
adc
je
out
out
dec
aas
arpl
fildll
mov
sbb
fcmovu
pop
inc
into
cmc
jmp
movsl
loop
adc
orl
xchg
dec
cmp
es
lds
jl
sbb
rorb
and
jge
pop
test
into
sbb
jle
aas
pusha
mov
ret
inc
cmc
mov
cmp
mov
mov
pop
inc
or
cld
sti
xor
sbb
sbb
mov
mov
divb
imul
dec
jl
into
imul
xor
popa
mov
fldt
icebp
adc
dec
sbb
out
shl
lods
mov
pop
jno
adc
or
push
add
ficoms
cmp
imul
jmp
int3
and
dec
mov
pop
mov
icebp
mov
cmp
add
dec
xor
and
and
pop
push
popa
addb
xchg
xlat
stos
test
and
cmpb
jle
aaa
push
mov
in
cwtl
ss
movsl
int3
xor
sbb
jp
popa
jg
repnz
sbb
stc
sub
idivb
sarb
xchg
pop
jmp
inc
jb
mov
loopne
int3
dec
sbb
mov
push
fcomip
inc
xor
xor
rorb
inc
cmpsb
sub
jne
jne
pop
push
mov
pop
imul
dec
cmpsb
out
jno
shr
or
into
faddl
inc
dec
adc
cli
fcomip
and
enter
cmp
xor
cmp
mov
bound
ds
rcrb
mov
mov
test
repz
fwait
add
add
ret
inc
dec
push
jge
dec
xor
pop
mov
mov
aam
data16
jae
scas
pop
lea
mov
stc
add
mov
cs
xchg
aas
jbe
push
mov
cmp
jo
out
sub
or
test
pop
divb
inc
fcoms
cld
test
dec
dec
jo
add
sub
pop
pop
in
in
lsl
mov
hlt
cmpsl
dec
rorb
scas
cmp
mov
int3
sub
and
lods
scas
lcall
icebp
call
add
mov
inc
xor
outsl
dec
into
popf
ds
xchg
xor
enter
insl
inc
cs
mov
mov
and
in
cmp
mov
mov
bound
and
xor
bswap
addr16
loope
jbe
dec
test
fisttpll
ret
shll
shrl
adc
aas
mov
jl
xor
dec
leave
out
fsub
lods
adc
adc
int3
in
pop
lds
mov
cmp
sbb
xor
cmp
sbb
mov
adc
inc
xlat
mov
mov
cmp
xor
icebp
lods
cs
sub
add
adc
mov
negl
cmp
fisubs
sub
vaddss
xchg
out
test
xchg
push
aam
push
mov
inc
shrl
ffreep
rol
fs
pop
adc
repz
or
mov
xor
out
mov
or
lock
mov
push
pop
inc
xchg
push
xlat
repz
push
or
mov
dec
repz
cs
cmp
or
mov
arpl
movaps
cld
adc
int
adc
inc
sub
ret
sbb
imul
sub
in
mov
in
sub
int
lods
xchg
sbb
xchg
dec
loopne
mov
out
in
cmpsb
iret
dec
emms
rcll
jg
add
cld
inc
mov
add
mov
xor
add
adc
fwait
inc
ss
pop
setb
sub
mov
sbb
aad
cs
mov
cmp
dec
subb
orb
or
xchg
fs
cmp
jl
pushl
xor
xor
push
lret
in
mov
mov
ret
and
pop
sub
xchg
xchg
mov
test
in
daa
inc
push
fisubrl
dec
cmc
enter
pop
mov
outsl
testl
clc
fcomp
sub
dec
xor
ret
add
stc
xor
jmp
out
out
mov
add
loop
xor
loope
xchg
xor
xor
and
mov
ja
sub
int
mov
push
pop
adc
sbb
insl
dec
mov
mov
loope
out
mov
mov
mov
push
mov
mov
push
xchg
cltd
mov
mov
outsl
arpl
add
jb
mov
das
jne
jo
test
aaa
lahf
xchg
xchg
mov
insl
push
hlt
cmp
mov
enter
push
pop
adc
call
clc
mov
mov
leave
insl
pushf
xor
loopne
in
mov
pop
fbstp
ret
or
xchg
ficoms
pop
repz
int3
xor
jl
aas
pusha
imull
jp
jns,pt
outsl
jle
fcomip
sub
xor
add
daa
lods
mov
adc
shl
mov
cmpsl
mov
mov
fidivs
enter
imul
mov
or
mov
mov
inc
repz
rorb
in
mov
jle
adc
lea
call
aaa
or
push
daa
xor
adc
out
pop
movsl
xchg
std
mov
adc
xor
sahf
pop
pop
repnz
mov
sbb
pusha
rcll
xchg
or
movsb
bound
test
arpl
in
dec
pushf
loop
push
int
and
jb
mov
push
inc
ret
rorb
lret
ss
fmul
push
out
and
out
push
mov
repnz
mov
in
mov
movsb
mov
mov
jo
in
mov
pop
out
int3
mov
test
jge
scas
pop
adc
xchg
jmp
fnstenv
paddb
mull
sbb
push
mov
adc
jae
ljmp
repnz
in
in
jbe
adc
or
and
fcoms
mov
aas
jno
movsl
mov
loop
test
repnz
fs
fcmovb
insl
add
aad
push
lock
fincstp
adc
or
cmp
mov
aad
jmp
stos
ret
clc
lea
arpl
xchg
idivl
dec
stos
loope
insl
popf
outsb
mov
add
adc
std
fdivrs
jae
sbb
fcmovbe
mov
test
mov
xchg
insl
xchg
lods
jmp
mov
xor
fldcw
mov
cmpb
mov
push
or
mov
bound
mov
xchg
lds
enter
dec
test
out
pop
sbb
test
andb
fnsave
push
into
push
int
push
mov
cmpsb
inc
cmpsb
push
inc
loopne
jne
pop
adc
lods
push
repz
rcrb
cld
fcomi
arpl
adc
getsec
mov
xchg
iret
fcmovnu
sbb
in
out
jbe
pop
sti
or
adc
and
pop
push
faddp
icebp
fcoml
aad
pop
ja
mov
mov
dec
loop
mov
inc
push
mov
je
add
rcll
mov
enter
lock
and
lods
push
adc
shrb
in
sbb
out
int
mov
sub
mov
pop
dec
clc
pop
sub
cmp
xchg
adc
mov
outsb
xchg
push
and
call
and
inc
mov
mov
dec
les
inc
mov
or
rcrb
or
outsl
out
sbb
pop
rolb
and
imul
or
outsl
sahf
das
rcl
mov
out
inc
insb
inc
cltd
and
out
adcl
mov
in
les
std
dec
test
fdivl
jle
out
dec
sbb
es
rolb
cmp
or
mov
add
pop
ret
sbb
mov
rcl
push
fsubs
mov
jle
mov
mov
gs
enter
inc
xor
cmp
xchg
imul
ss
pop
push
mov
push
pop
negl
mov
mov
xchg
xor
outsb
adc
pop
pop
inc
fistl
icebp
xor
aam
negl
pop
notl
jnp
cmp
and
or
adc
push
pop
mov
mov
inc
cmp
inc
jle
mov
mov
andl
sub
fwait
test
pop
shlb
scas
shlb
add
xor
js
enter
test
adc
xor
scas
aad
mov
notb
addr16
adc
xchg
jmp
inc
cmp
cmp
mov
cmp
dec
pop
dec
cli
dec
jmp
cmp
jnp
mov
pusha
imul
push
out
mov
popf
dec
push
inc
xchg
inc
insb
lds
popf
fs
stos
out
daa
and
arpl
sbb
fisubl
push
sti
xlat
popf
xchg
mov
push
or
xchg
xor
aam
sub
in
xor
mov
int3
push
lea
inc
mov
mov
push
xchg
pop
fisubs
inc
lods
add
cli
sbb
hlt
scas
mov
arpl
sti
jne
orb
outsl
jl
inc
in
and
sahf
pop
cs
ret
cmc
out
aad
pop
sbb
fisubrl
mov
insb
push
push
in
lahf
mov
push
lock
dec
fs
adc
sbb
ret
pop
xchg
sbb
fistl
lahf
and
xchg
push
dec
pusha
stos
inc
add
testb
paddq
fcoms
in
push
push
lods
jmp
repnz
in
and
mov
push
ja
xlat
mov
repnz
iret
call
mov
mov
add
mov
dec
scas
mov
mov
jae
out
xchg
xor
mov
aaa
arpl
pop
push
fstps
popf
push
mov
mov
adc
daa
mov
mov
push
push
testl
imul
and
in
xchg
push
xorl
mov
mov
sbb
mov
adc
out
loop
hlt
test
xchg
add
or
mov
pop
lea
cmp
or
nop
shlb
enter
mov
ret
aam
pop
xchg
out
and
jg
xor
stos
sub
clc
syscall
adc
mov
int3
mov
sbb
fiaddl
ja
pusha
mov
push
jnp
cmpsb
rcrb
stos
rolb
pop
sarb
mov
sbb
pop
das
negl
in
pop
dec
sbb
adc
repz
add
repnz
dec
jg
int3
adc
das
push
pusha
and
lcall
jmp
int
sub
stos
repnz
loope
sahf
ja
sarl
into
lea
mov
jge
fwait
ja
enter
loopne
and
dec
xchg
mov
stos
cwtl
in
arpl
hlt
bound
orb
in
inc
lds
hlt
imul
fdivrl
mov
cmp
adcb
cli
fwait
stos
dec
cmp
punpckldq
mov
cltd
test
cs
adc
in
pop
ret
pop
into
xchg
mov
fstpl
arpl
pop
sbb
adcb
lds
fdivr
movsl
jecxz
dec
mov
popa
fldl
push
dec
mov
sbb
pop
push
jecxz
fwait
enter
dec
xchg
sar
push
or
subl
mov
dec
xlat
in
push
arpl
xchg
sbb
outsl
cs
push
in
aas
aaa
sub
shlb
mov
lret
push
mov
rcrl
in
sbb
loopne
insl
outsb
cmp
jge
pop
int
cwtl
pushl
or
fbld
push
ds
add
add
mov
lret
xor
push
mov
ja
push
out
sbb
test
mov
xchg
out
jnp
pop
lds
into
addr16
sbb
shr
mov
jecxz
fldt
fstpl
mov
jle
push
push
sahf
popa
mov
sub
aam
in
je
sub
mov
mov
lods
movsl
mov
test
inc
sbb
and
mov
mov
ret
mov
rcr
loope
lock
jge
fcmovne
dec
add
repz
lds
sub
movl
cltd
inc
repnz
arpl
and
and
cmp
cld
or
mov
push
fmul
inc
jbe
icebp
aaa
mov
icebp
jmp
lea
sbb
sub
mov
gs
cmc
pop
sbb
add
pop
mul
sahf
das
xchg
or
stc
jmp
pop
pop
pusha
xlat
sbb
push
xor
por
mov
pop
mov
pushf
rorl
ficompl
pop
inc
int3
shr
pop
add
add
fs
mov
lret
xor
mov
iret
jbe
aam
fstl
or
sub
xor
pop
sbb
xchg
sbb
icebp
loop
pop
dec
test
mov
push
ljmp
jg
mov
and
out
into
dec
lods
ss
and
mov
aas
pushf
roll
pop
and
xchg
dec
or
leave
mov
rol
movsb
fdiv
shlb
adc
jp
daa
testb
adc
pop
cld
hlt
lahf
dec
push
les
in
aad
pop
hlt
std
and
shlb
shrl
ds
fdivs
call
lret
or
mov
mull
aad
xchg
cmpsl
mov
xchg
dec
or
cmp
jmp
pop
push
pop
jbe
xor
cltd
xchg
iret
and
adc
je
cmp
sbb
xchg
and
xor
divl
adc
lea
cwtl
lods
daa
xor
out
mov
imul
and
xlat
ljmp
fdivr
add
lods
mov
icebp
stos
scas
daa
ret
fsubrl
loope
sub
movsb
int3
testl
or
insb
fcmovnu
push
push
je
fsubl
xorb
gs
cwtl
cmp
cld
notb
push
cmp
imul
outsl
adc
mov
push
cmp
add
lcall
repz
icebp
rcrb
pop
push
inc
inc
movb
cmp
out
cwtl
mov
jmp
sbb
sub
adc
cmc
ja
lea
scas
ret
add
lret
out
out
and
mov
mov
lods
cmp
add
add
xlat
xor
lret
jecxz
mov
add
pop
out
sub
jne
jno
popa
mov
and
push
jp
sub
cmpsb
xchg
sub
mov
loopne
jbe
inc
negb
hlt
mov
test
ds
xchg
daa
push
inc
test
push
popa
std
jmp
outsl
add
push
push
xchg
gs
addr16
dec
in
idivb
mov
inc
and
cmpb
repz
test
and
fsubp
add
enter
pop
in
adc
int3
dec
test
adc
notb
daa
jp
mov
sbb
cmp
mov
mov
ljmp
add
pop
jae
adc
rclb
push
xlat
insl
xor
dec
daa
and
out
lret
jnp
push
movb
add
in
cmpsl
mov
movl
pop
xchg
dec
rolb
jns
add
dec
xchg
sbb
out
into
jo
mov
xchg
loop
or
xchg
xor
push
loope
ja
pop
loopne
repz
mov
inc
into
in
jp
xor
mov
arpl
cmp
mov
sbb
mov
xchg
lret
dec
adc
cmp
shlb
sbb
adc
inc
adc
cli
cmp
mov
lret
ret
cvtpi2ps
cmc
outsl
dec
push
inc
xor
adc
bound
jno
cmpl
cmp
xchg
cmp
inc
jmp
or
jg
fs
jae
sbb
outsl
stc
test
sbb
loope
nop
adc
mov
and
aam
jge,pt
call
jne
push
cld
adc
xlat
jecxz
cmp
xchg
pop
xchg
in
div
fsubl
lock
xor
pop
adc
subb
js
add
jae
aaa
stos
fisubs
jl
xlat
or
sub
xor
add
mov
into
and
movsl
sarb
fdivr
enter
xchg
imul
sahf
jp
push
iret
shlb
movsb
cmp
mov
test
adc
sqrtps
arpl
pop
pop
sbb
sub
int3
fcomi
insb
gs
mov
testl
cwtl
xchg
jae
test
ss
popf
andb
mov
xchg
cmp
insb
mov
sub
pop
cld
jg
push
int3
adc
std
sbb
and
fwait
or
movsl
add
mov
lock
and
jle
adc
mov
hlt
push
sbb
xchg
out
out
mov
xor
neg
sub
loop
cmc
xchg
cltd
sbb
call
sub
pop
clc
dec
mov
push
mov
ret
cmp
xchg
inc
inc
jne
dec
js
pop
outsl
and
adc
jno
aad
dec
mov
mov
adc
inc
mov
in
cmp
fwait
sti
inc
icebp
jmp
aad
orb
and
mov
testl
int
hlt
or
inc
call
shrb
xor
repnz
and
loop
cmovno
repz
pop
popf
mov
call
shll
jo
and
loope
faddl
cmc
popa
outsb
add
and
sub
nop
xchg
push
cmp
insl
loopne
jle
xlat
js
or
mov
mov
inc
cmp
dec
xchg
rclb
or
sti
neg
jg
inc
loop
sub
jb
lds
fidivl
jl
call
jle
ss
adc
mov
push
adc
sbb
jmp
cmp
cli
cmpsl
push
mov
cmc
int3
out
or
dec
sbb
xchg
sbb
xchg
insb
dec
xchg
or
movsb
xchg
in
idiv
nop
mov
stc
cmc
aas
inc
dec
cltd
rcll
popf
insl
add
inc
push
fucomp
xor
dec
fstpt
dec
or
or
cmc
jg
push
aaa
mov
mov
call
xor
dec
mov
push
les
or
push
dec
cmp
fimull
lahf
jp
mov
fdiv
sub
jecxz
int
shl
mov
mov
es
mov
ljmp
mov
mov
push
lods
rcl
adc
adc
or
push
idivl
push
sarl
lods
cmp
add
das
sub
jb
mov
jne
dec
leave
stc
xchg
fwait
mov
inc
data16
xchg
roll
mov
cmp
in
mov
xchg
pushf
and
push
fs
lods
adc
lahf
cli
loope,pt
ja
and
in
leave
enter
or
xor
movsb
and
sarb
push
hlt
dec
sti
cmpsl
pop
mov
cmp
fcom
aas
add
rcl
and
test
pusha
sahf
fistl
dec
cmp
mov
push
sub
or
pop
cmp
popl
dec
and
and
push
lcall
ja
push
mov
cmp
xchg
scas
in
mov
adc
and
cwtl
sub
sub
aas
cmp
into
adc
and
push
adc
pop
fisubrl
pop
pop
xchg
cmp
test
enter
and
push
rol
sub
or
jl
xchg
je
das
lea
xchg
cli
daa
xchg
dec
shlb
sbb
add
add
push
in
sbb
out
subb
xor
sbb
inc
add
outsl
mov
jge
loop
pop
mov
or
sub
jg
inc
rcll
mov
xor
lret
sub
jle
daa
in
int
popl
lret
cmp
lret
push
or
in
repz
sub
push
jp
loope
xlat
inc
and
rclb
aas
test
leave
cmp
pushf
out
sub
test
das
cmp
jle
cs
sbb
cmp
mov
jle
mov
je
push
test
clc
adc
fucomip
pop
test
rclb
xor
fs
imul
mov
sub
pop
pushf
cmp
lock
and
dec
cmp
xchg
sbb
adc
cmp
sbb
mulps
int3
add
fsub
in
mov
jge
sub
sti
push
sbbl
and
stos
je
jg
enter
fsts
or
fdivl
xor
mov
jne
mov
add
and
sahf
loopne
jbe
sub
dec
aas
je
and
pop
fisttpll
pop
iret
jg
aad
jmp
mov
sub
inc
mov
fcoms
outsl
lods
mov
andb
adc
pop
in
mov
fstpl
push
out
mov
repnz
in
lret
cmp
mov
rclb
dec
cmpsb
xchg
imul
ljmp
or
xor
ret
scas
push
pop
push
jp
fwait
ret
ret
inc
rcl
inc
sub
adc
sti
xor
subl
fwait
je
cmc
jo
adc
or
inc
cwtl
pop
pop
inc
lods
lret
inc
insb
fistl
insl
jo
xor
pop
mov
pusha
mull
mov
mov
pop
scas
inc
bound
inc
cmp
jno
shl
jle
mov
lret
call
xchg
imul
pop
mov
dec
mov
push
xlat
clc
orb
xchg
sub
test
sbbb
pop
inc
out
pop
cmp
shll
add
sbb
xor
fs
adc
ret
mov
adc
add
xchg
pop
jge
xchg
lods
popa
jno
pop
les
push
sub
in
test
in
inc
mov
or
dec
mov
stos
fwait
ret
mov
ret
in
lds
mov
int3
scas
jb
dec
sub
mov
add
sub
les
aas
shlb
rolb
sbb
xchg
inc
xchg
or
std
cmpsl
outsb
fisttps
je
jbe
rcrb
push
mov
jecxz
xchg
pop
pusha
out
sbb
inc
mov
cmp
cmpsl
pop
jg
mov
in
fsubrs
pop
sbb
sub
and
lods
hlt
ja
loop
rcll
inc
dec
inc
adcb
sub
mov
fbstp
aad
xlat
lcall
repz
sub
inc
and
mov
das
dec
pop
into
icebp
jg
clc
jbe
pop
les
xchg
lods
inc
repz
loope
adc
push
insb
dec
jmp
push
sub
xor
xor
xor
xchg
scas
adc
pop
push
or
js
mov
cmp
and
je
jo
mov
pop
adc
popa
faddl
dec
ss
loopne
adc
add
pop
cmp
pop
lret
repnz
dec
and
adc
xchg
imull
mov
sbb
aad
push
jbe
sbb
xchg
pop
and
hlt
push
mov
mov
aaa
push
mov
scas
rcl
mov
xor
mov
adc
or
das
mov
inc
fnstcw
mov
mov
cmpsb
sbb
mov
adcb
int3
sete
lret
fmul
sbb
jge
frstor
bnd
idivl
int3
pop
nop
jle
push
dec
dec
push
enter
sbb
pop
insl
sbb
xor
in
test
adc
enter
cmp
pop
lea
dec
cltd
push
ficomps
inc
push
sbb
cmp
or
xor
or
scas
testb
cmpsb
fstpl
pushf
add
cmc
jg
jle
mov
sbb
sar
clc
push
pusha
mov
xchg
push
mov
pop
push
sub
dec
je
repz
xor
mov
sti
fsts
adc
pop
into
pop
inc
mov
push
adc
xchg
jno
lahf
loop
shll
cmp
cmc
movb
mov
shr
dec
pop
pushl
mov
les
pop
or
xchg
out
sub
inc
cli
add
sub
push
sbb
lods
mov
sti
or
inc
shrb
xchg
insb
add
xchg
movl
mov
arpl
push
mov
mov
push
cmp
xor
aaa
dec
stc
fists
push
clc
into
hlt
jmp
es
cmp
lret
jae
mov
lcall
and
mov
pop
xchg
ss
inc
add
jae
ficompl
jns
adc
bound
push
into
jmp
sbb
pop
into
xchg
test
mov
dec
xorl
mov
stos
push
mov
adc
mov
imul
push
push
mov
push
mov
and
adc
jge
shll
jl
xchg
mov
and
lods
inc
jne
scas
mov
lea
jmp
lods
pushf
sti
mov
sub
fcoml
pop
push
les
pop
add
loope
lock
mov
ds
subb
jge
pop
dec
sbb
sahf
ja
out
cmp
jnp
and
add
inc
stos
cmp
jle
jae
pop
or
or
add
pushf
dec
cmp
mov
jae
fistps
sbb
dec
or
pop
dec
pop
mov
mov
xchg
mov
push
test
ds
in
mov
jne
jnp
rolb
mov
pop
mov
inc
test
mov
jl
push
shlb
mov
sbb
pop
add
lret
mov
das
mov
add
leave
movsl
sub
and
mov
btc
ds
sub
ror
jg
and
daa
mov
mov
xor
cmp
testb
push
stc
sar
hlt
adc
push
pop
incb
inc
testl
push
xor
sub
mov
in
xor
mov
fcom
sbb
je
push
jne
sub
pop
and
into
mov
pop
jne
incl
push
sub
mov
sub
cltd
repz
stos
scas
cmp
scas
aas
fbld
xor
xchg
leave
xor
push
inc
push
or
cmpsb
pop
push
add
std
mov
lods
fxch
into
std
jmp
push
adc
dec
add
mov
jl
push
repz
cmp
jle
fistpll
and
shrl
sub
daa
enter
xchg
call
loopne
or
adc
cmpsb
stc
dec
sbbl
pop
inc
das
add
in
stc
xchg
cmc
push
mov
outsl
sbb
jmp
pusha
sbb
outsb
dec
xor
int
push
dec
or
test
dec
or
add
shrb
sub
pop
push
in
mov
cs
popa
out
and
sbb
mov
inc
dec
jge
rcrl
sarb
movsb
mov
gs
in
insl
mov
jmp
in
dec
test
adc
jecxz
addb
lods
outsl
push
dec
adc
divl
push
push
mov
sbb
and
cs
xlat
icebp
fwait
lahf
repnz
inc
and
lret
push
stc
js
adc
pop
rcr
xchg
push
nop
and
sbb
out
setbe
out
pop
mov
jg
and
sub
test
xchg
cmp
mov
push
xor
push
jnp
jb
xchg
mov
adc
add
add
inc
mov
add
movsl
clts
pop
sub
ds
mov
mov
or
js,pt
rolb
add
cmp
popl
adc
loope
push
aam
mov
outsb
push
mov
inc
pop
mov
mov
push
aaa
or
frstor
push
jae
add
adc
xor
mov
and
pop
nop
cmp
loop
xor
dec
mov
pop
or
pop
xor
enter
sahf
fistps
xor
int
add
mov
mov
push
add
rorl
je
xchg
rolb
sbb
add
sbb
out
dec
cs
addb
cmp
adc
out
ret
adc
int
cmp
cmp
fnsave
insl
rcr
xor
adc
sub
ds
lock
leave
pop
stos
mov
movsb
lock
sti
imul
pop
jb
or
jge
jl
cmpsl
jecxz
lods
out
movsb
cmp
xchg
lret
js
xor
sbb
mov
lahf
ror
gs
mov
fists
int
or
cmp
sub
jg
jb
fnstenv
or
repnz
xchg
addl
lods
js
pop
imul
dec
sbb
sbb
in
push
xor
adc
or
mov
sub
das
nop
sub
aaa
pop
pushf
lds
inc
inc
sub
daa
pop
mov
hlt
movsl
imul
push
aaa
mov
push
sbb
xchg
cs
lret
aaa
adc
out
cmovs
pop
push
dec
or
xchg
pop
les
fsubrs
lods
jbe
xlat
sub
out
in
test
repnz
adc
xor
jns
fwait
lock
cmp
repnz
mov
adc
mov
push
or
ja
lret
add
ds
movl
insb
ja
dec
rcrb
mov
adc
add
pop
insl
cmp
psrlq
int3
pop
jecxz
je
mov
xchg
sbb
xchg
in
outsb
pop
fbstp
cwtl
fiadds
cli
cmp
mov
sbbl
int
ja
lods
jmp
mov
xor
xchg
icebp
clc
call
mov
dec
mov
pop
or
cmovnp
rcll
sbb
add
es
aas
cli
jmp
icebp
mov
xor
in
mov
mov
and
cmp
lret
int
cmp
xchg
xchg
cld
mov
fs
jp
idiv
stc
loop
test
rcl
mov
rclb
inc
and
in
cmp
shll
jbe
cmc
push
add
es
cmp
and
inc
dec
cmp
les
xchg
fwait
cmp
das
cmpsl
iret
xchg
and
test
loopne
pop
pushf
in
mov
iret
insl
mov
jae
fsubp
push
xchg
inc
nop
std
jae
aam
pop
sub
push
sbb
inc
arpl
out
or
popf
cld
push
jmp
into
sbb
stc
into
pushf
mov
mov
mov
test
fs
mov
jnp
sbb
int3
mov
and
out
jge
mov
mov
inc
rcr
ja
mov
inc
pop
mov
ja
sarl
popf
sbb
cmp
inc
ss
jno
das
inc
int3
adc
sar
mov
fcomps
inc
shll
aam
and
ja
jno
shlb
scas
adc
iret
scas
ret
cmp
add
cltd
insb
inc
push
cmc
xchg
out
es
js
pop
adc
insb
xchg
out
daa
cmc
mov
add
mov
adc
add
add
adc
lods
aas
mov
cmp
movl
rorb
xlat
xor
cmpb
sub
das
cmp
fidivrs
jb
mov
cld
mov
sub
mulb
iret
push
cmpsb
sub
icebp
push
xor
pop
ljmp
lods
jmp
filds
imul
pop
sub
movsb
adc
in
rcrl
in
xchg
add
add
jl
scas
aam
test
jecxz
adc
jle
adc
jnp
jae
add
andl
xchg
push
fmull
dec
sarl
aam
ljmp
or
push
ret
pushf
pop
into
js
jae
movsl
nop
sti
in
clc
push
repnz
mov
xor
push
pop
into
sub
in
xor
adc
in
push
popa
scas
dec
jmp
dec
fisttpll
mov
cmp
dec
jge
and
mov
jl
sub
or
jne
out
fidivrs
pushf
into
push
int3
cmp
add
or
aas
fdivr
loop
mov
ret
cs
inc
pop
push
and
stc
ja
in
scas
sbb
adc
insl
std
push
stos
mov
sbb
and
xchg
fsubrs
addr16
sub
jns
in
fnstsw
pop
das
loope
jae
bound
mov
aas
or
push
sub
testl
jecxz
cltd
test
mov
rclb
mov
popf
je
scas
callw
imul
xor
mov
inc
in
scas
fmul
ds
sbb
xchg
jl
xor
cmp
adc
ljmp
sub
sub
enter
dec
pop
cld
lret
xchg
cmp
mulb
sbb
out
fistps
inc
add
mov
lahf
or
dec
js
ret
lds
test
cmp
xor
les
out
mov
adc
out
addl
mov
lret
and
inc
jb
mov
jae
lods
mov
mov
loopne
mov
jmp
mov
mov
shl
pop
push
into
je
mov
out
mov
enter
push
inc
call
and
mov
cs
add
and
xor
outsl
mov
adc
sbb
mov
les
jb
pop
rol
pop
lahf
mov
sub
pop
popf
dec
mov
lret
lret
fcoml
shrl
movsb
nop
int3
fistpl
xlat
int3
call
jae
stc
jmp
loopne
jecxz
lret
push
sbb
xchg
shlb
outsb
xchg
jg
aaa
aas
jae
cmp
imul
add
cwtl
sub
and
lods
loope
mov
sub
cmp
imul
and
insl
pop
cld
rolb
aas
cltd
cmp
scas
jp
clc
xor
jns
lcall
lea
mov
inc
pop
in
cmp
xlat
lock
xchg
mov
add
fistpll
fisubrl
mov
das
popf
and
xor
out
and
inc
scas
dec
inc
in
rcl
in
add
push
or
outsl
dec
add
mov
aaa
jae
mov
xchg
or
divl
out
and
int3
inc
and
sbb
xchg
ret
or
mov
pop
cs
pop
dec
add
nop
xor
pusha
mov
add
cld
lea
js
sar
jno
adc
jg
sub
in
jmp
pop
icebp
dec
daa
xlat
push
mov
sub
adc
cmpsl
test
push
add
mov
repnz
movsl
push
mov
mov
inc
cmp
ficoml
add
mov
mov
xchg
out
or
lret
out
mov
add
test
push
lea
cmp
lea
jmp
or
cmp
push
cli
adc
mov
pop
push
inc
aaa
mov
xor
push
jae
pop
pop
mov
dec
ss
dec
mov
dec
faddl
adc
add
sbb
xor
mov
push
int
jl
pop
or
jp
mov
mov
mov
inc
jle
push
mov
jecxz
ja
fiadds
scas
mov
add
call
adc
lock
mov
pop
loopne
mov
lock
dec
aam
mov
test
dec
ds
mov
in
mov
fisubs
insl
ds
xlat
inc
mov
in
insl
inc
sub
push
cmp
sbb
enter
pop
cmpsl
rcrb
jnp
jns
call
inc
inc
lea
dec
pushf
sbb
mov
lock
jmp
and
lock
gs
xchg
std
shrb
xor
and
je
cmc
pop
inc
push
sbb
dec
push
enter
enter
mov
repnz
les
push
imul
leave
insl
jbe
sub
lods
mov
or
in
out
les
hlt
imul
daa
mov
rol
add
or
lcall
mov
cmp
nop
movsb
imul
fcompl
ss
ds
inc
in
inc
mov
std
inc
test
jecxz
xchg
cltd
in
dec
and
xchg
fmuls
add
xor
loopne
pop
pop
sarl
cmp
cmp
clc
add
pop
pop
cmp
shll
cmpsl
lahf
inc
and
push
daa
addb
jb
xor
add
sub
mov
lods
inc
cmc
sbb
aaa
ret
rorl
mov
mov
jno
loop
loopne
movsb
or
dec
dec
inc
inc
aam
mov
push
xchg
xchg
jecxz
int
scas
inc
dec
dec
mov
jl
decl
mov
iret
jle
js
test
idivb
sub
add
cmpsl
scas
in
lds
sbb
outsb
cmp
pop
movsb
mov
ss
rcl
inc
sub
dec
ja
shll
xor
or
movsl
ss
push
inc
test
sarl
xchg
xor
cmp
mov
rcl
sub
xor
cmc
add
mov
lahf
push
push
ror
dec
jg
or
add
add
jge
pop
gs
mov
cmc
sub
mov
mov
xor
sbb
add
sbbl
lods
ret
mov
mov
xchg
sub
insb
xchg
sub
adc
loop
movsw
sub
lret
movntq
out
mov
add
lea
sub
cmp
jge
fsubrs
insl
or
out
jecxz
lods
jbe
or
push
cmp
or
mov
idivb
stc
xchg
mov
or
xor
xor
in
xor
aaa
mov
inc
inc
out
xchg
aad
dec
pusha
incl
arpl
cwtl
mov
adc
ret
adc
out
pop
pop
repnz
cli
mov
scas
xchg
out
sbb
cmp
cmc
fadds
ja
js
sbb
adc
pop
pop
es
scas
inc
aad
inc
fisttpl
sbb
inc
mov
inc
jle
pop
dec
xchg
inc
addr16
mov
cmpsb
pmullw
dec
jmp
push
bound
add
cmc
xor
pop
mov
push
test
fldl
and
cmc
dec
jnp
lret
mov
mov
sbb
fadds
jg
jmp
sbb
lods
add
xchg
lret
ret
jmp
sub
test
mov
cmp
lods
sarb
pop
mov
into
and
push
jp
xchg
negb
and
test
or
adc
mov
inc
xchg
cltd
and
or
mov
sbb
sbb
push
cmpsl
repnz
clc
push
mov
xlat
add
mov
shll
fldl
push
mov
arpl
scas
ficoml
aaa
lds
sbbb
shrl
clc
sbb
test
inc
push
cmp
ss
fs
push
cmp
xor
addl
cs
inc
call
xor
sub
test
mov
call
mov
iret
xorb
and
insb
pop
mov
pop
xchg
push
jne
or
or
les
sbb
or
ds
jmp
std
in
cmp
outsl
fdivrp
sbb
lods
jb
inc
sub
outsb
mov
cmpsb
es
frstor
add
les
and
jecxz
repz
xlat
cli
ficoml
int3
jne
es
mov
mov
std
mov
scas
jo
mov
ret
sbb
mov
and
lcall
dec
sbb
rorl
fdivs
popf
popf
dec
mov
adc
sbb
xor
out
xchg
cmp
mov
das
pop
icebp
div
dec
lret
cmp
and
lods
pop
imul
push
pop
mov
clc
sub
loope
int3
push
out
daa
mov
push
iret
lock
xlat
ret
push
clc
dec
faddl
inc
fstp
or
and
adc
ret
es
test
mov
pop
aas
mov
push
pop
adc
filds
sbb
repnz
mov
stos
inc
inc
inc
mov
mov
or
sarb
nop
sub
popa
mov
sub
test
cmp
pop
and
add
adc
iret
std
xchg
and
cmc
lea
mov
lds
mov
sbbl
ret
not
lret
ret
repnz
aad
sub
cs
add
push
shlb
cmp
dec
and
aad
mov
ret
js
pusha
pop
rcr
sub
insl
call
jmp
les
lods
sahf
out
add
lock
sub
cmc
mov
or
adc
in
jb
call
fdivl
movsl
dec
repz
mov
adc
idivl
icebp
mov
mov
into
out
or
push
pop
pop
shl
cmp
pop
das
xchg
mov
mov
pop
aad
pop
rorb
and
lock
mov
and
xchg
in
or
lret
imul
aaa
push
pushl
mov
mov
lods
into
xlat
fcmovnb
mov
mov
pushf
or
and
cmpsl
les
and
mov
fstps
and
in
xor
or
adc
aaa
inc
adc
mov
cs
inc
xchg
sbb
fcoms
cmpsl
shl
jmp
jmp
sbb
outsb
adc
add
sbb
pop
cli
repnz
jmp
mov
shl
push
movsb
cmp
xor
mov
dec
jle
mov
sub
bsf
push
scas
ret
ljmp
sub
and
mul
push
mov
mov
push
push
push
cltd
inc
pop
mov
notb
adc
aaa
aaa
cmp
dec
sub
and
mov
movsb
repnz
lret
mov
mov
nop
leave
shr
aam
or
sti
flds
loope
stos
fidivrs
les
xchg
aam
mov
jg
pop
cmpl
fnstcw
hlt
idivl
scas
and
mov
push
dec
pop
js
sub
popl
sub
in
jmp
pop
sbb
test
jl
fwait
dec
fsubrs
xor
lcall
insl
js
xor
fisttpll
lods
push
hlt
int3
icebp
mov
leave
pop
mov
arpl
in
repz
aas
sarl
pushf
push
sar
lret
mov
adc
sarb
or
pop
bound
imulb
mov
sbb
push
loopne
ret
sub
lcall
inc
cmpsb
jle
sub
loopne
jp
inc
out
or
hlt
add
add
movsb
sub
or
dec
movsl
xlat
cld
or
cmp
cmp
sbb
outsb
mov
decb
pop
pop
lds
lret
mov
jl
ficompl
dec
dec
adcl
sbbl
jle
sub
inc
fsubrs
push
stc
mov
daa
hlt
iret
into
cmp
xor
add
or
aam
sub
repz
call
in
xchg
ds
xchg
test
mov
ret
add
mov
filds
cmp
test
sub
adc
sarb
int
call
adc
cmpsb
jne
mov
and
loopne
sub
jl
sbb
loope
add
int
jmp
lds
fisubrs
push
ret
test
negb
jp
push
pop
lahf
orb
mov
pop
aas
xor
sub
repnz
mov
sbb
sbb
jmp
addr16
adc
and
mov
pop
sbb
pop
mov
iret
cmc
imul
pop
push
cwtl
rclb
sbb
cltd
xor
fistps
and
push
mov
push
inc
aam
and
nop
mov
ret
adc
enter
shrl
and
fimuls
mov
jmp
mov
or
lahf
push
mov
cmpsb
mov
popf
jo
lahf
insl
nop
sbb
incb
and
fwait
push
push
loope
xor
out
pushf
std
or
or
aas
dec
mov
in
sub
movsl
les
fmull
dec
into
test
das
mov
adc
cmc
lret
rcrl
fidivrs
movsb
pop
popa
inc
and
mov
sbb
inc
test
pop
xchg
fwait
mov
push
std
or
jle
mov
mov
fs
ljmp
ret
pop
shll
rorb
pop
mov
inc
push
or
inc
adc
addl
inc
mov
out
clc
sarb
cmp
shlb
insl
bound
ret
mov
fcoms
clc
fists
pop
mov
mov
jmp
lret
mov
aad
inc
mov
div
hlt
imul
bound
xchg
jge
jg
ss
sub
mov
mov
loope
orl
orl
xor
push
sbb
add
mov
xchg
insl
enter
jbe
xor
xor
push
dec
imul
in
pop
mov
pop
inc
test
push
clc
daa
xchg
sbb
out
xchg
out
fsub
fs
sub
jmp
stos
ss
mov
adc
shrb
fidivl
add
sarl
daa
int3
lret
mov
push
dec
mov
int3
add
add
inc
cmp
enter
sub
pcmpeqw
mov
sub
add
lock
outsl
add
stc
andps
and
mov
push
jmp
adc
xor
xchg
pop
jae
sub
idivl
loope
xchg
xchg
jno
mov
jl
pop
sub
daa
sahf
dec
mov
inc
loope
jl
sbb
ljmp
xchg
movsl
xchg
add
adc
sti
mov
fiadds
pop
in
dec
add
das
push
repz
mov
adc
pusha
repnz
adc
fld
icebp
addr16
or
clc
cmpsb
rolb
and
jbe
cmp
xor
xor
jp
sub
jo
sub
add
mov
stos
lods
sbb
aaa
int3
jno,pn
add
pop
push
jmp
sub
xor
push
adc
lret
cmp
push
and
loope
xlat
pop
lds
push
add
dec
outsb
call
xor
pop
xchg
aam
fnsave
cs
sbb
ljmp
iret
std
mov
loop
jl
add
xchg
orb
and
mov
xor
mov
loope
fistps
jae
mov
mov
fmul
xchg
daa
and
sub
mov
cmp
mov
movsb
int
add
sub
cmp
jle
fildll
mov
push
repnz
ss
icebp
imul
aam
and
roll
adc
jmp
ret
cmc
add
mov
ljmp
xchg
or
sahf
mov
xchg
push
lock
xchg
cs
je
shlb
aas
pusha
in
aas
sub
push
call
fwait
movsb
cmp
mov
lret
cs
pop
in
sbb
or
and
adc
mov
cmc
shll
sbbl
cmp
mov
test
mov
xchg
ret
arpl
lcall
inc
pop
cli
ja
xchg
sub
scas
mov
scas
lcall
out
popf
xchg
push
xor
pop
push
xor
mov
fstl
sub
aam
scas
stc
push
pop
fcomip
and
ret
aad
add
addl
fnop
mov
xchg
popf
ja
je
rolb
dec
ret
mov
iret
pop
push
icebp
pop
inc
sbb
sub
gs
ljmp
insl
sub
push
xchg
in
lds
adc
repz
or
sbb
xor
cltd
shll
or
dec
pop
add
jae
hlt
lea
and
aam
adc
les
inc
adc
mov
push
fnstcw
xor
imul
pushf
xchg
inc
call
add
aad
sub
scas
fdivrp
xchg
inc
into
clc
cmp
cmp
enter
xor
xchg
sbb
leave
and
stc
lock
push
pop
cwtl
stos
cmp
test
mov
das
pop
into
enter
sub
repz
adc
into
nop
shlb
fwait
push
lock
aad
sti
xchg
rorb
dec
adc
mov
sti
repz
xor
popa
xchg
or
addr16
xor
add
xor
and
sub
pop
add
movsl
in
jne
inc
ret
mov
and
shlb
sbb
cmc
jmp
pop
stc
inc
push
and
cmp
cs
xchg
push
ds
fstpt
push
and
hlt
mov
xchg
ljmpw
cmpsb
aaa
cmc
icebp
mov
xor
stc
mov
pop
mov
pop
pop
movsl
call
cmp
cli
mov
jmp
pop
ret
adc
cmp
dec
cmp
mov
push
and
cmp
fstpt
inc
daa
ficompl
xlat
repz
ja
je
fs
lret
fisubl
fcmovnbe
push
inc
cwtl
or
clc
xor
sub
int3
cmp
stos
dec
mov
pushf
jle
and
rol
arpl
sub
mov
mov
cmp
adc
or
es
inc
stc
jecxz
dec
icebp
cmp
sub
jmp
pop
icebp
sti
and
mov
out
mov
mov
push
xchg
dec
jbe
pop
cmp
js
cmpb
into
cld
pop
xor
ss
jmp
xlat
test
cmp
xchg
cmp
adc
stos
pop
sub
enter
mov
xchg
pusha
jge
mov
faddl
and
cmc
add
inc
cmp
xor
loopne
jnp
cmp
scas
add
stos
popl
sub
push
lods
push
addr16
imul
fmulp
out
hlt
jno
cmp
mov
xlat
jg
idivl
push
enter
mov
pop
xchg
add
add
jg
out
imul
dec
jmp
jg
ret
pop
cmp
mov
push
xlat
leave
data16
sbb
or
xchg
mov
ret
loop
int
ret
mov
cmp
xchg
cmp
clc
loopne
das
lret
mov
testb
jg
mov
add
les
pop
mov
jbe
dec
stos
lcall
push
cmp
push
movsb
jne
mov
adc
leave
inc
loop
rolb
xchg
aas
in
jns
in
sbb
loopne
mov
int
pop
xchg
mov
push
jge
cmc
pop
ja
pushf
shl
sbb
xchg
ss
sub
das
jl
int
cmpl
lret
jp
push
pop
shlb
and
data16
subl
or
or
dec
or
popa
push
lret
test
repz
mov
jmp
add
adc
popl
fildll
jg
int3
pop
adcb
xchg
shl
cmc
fnstcw
scas
scas
cmc
ret
mov
call
cmp
in
shl
xchg
inc
ljmp
mov
sbb
jnp
push
outsl
cs
push
stos
xchg
pop
setg
das
leave
adc
sbb
negl
pusha
insl
aam
popf
inc
movsb
push
sahf
mov
lcall
iret
mov
inc
xchg
jecxz
xchg
rcll
stos
test
mov
push
out
jmp
out
imul
push
div
rcll
adc
push
rcll
scas
neg
sahf
enter
mov
lret
dec
int3
cmc
push
sub
data16
xor
push
push
adc
int3
ja
rdtsc
cmp
xor
add
or
mov
mov
pop
xchg
xchg
push
std
sarl
inc
xchg
sbb
nop
add
ret
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
sub
inc
or
and
leave
add
inc
mov
sub
or
push
mov
ret
push
sub
or
mov
push
push
sub
add
mov
add
call
or
push
xor
xor
and
call
mov
mov
mov
je
add
dec
and
add
jmp
or
sub
xor
add
ret
dec
sub
push
xor
push
xor
mov
and
xor
push
sub
push
sub
dec
add
push
xor
mov
mov
call
or
and
xor
dec
add
mov
and
and
xor
dec
xor
push
sub
sub
add
xor
pop
shr
and
or
mov
and
lods
sub
xor
sub
and
xor
xor
or
xor
sub
mov
mov
inc
dec
mov
mov
mov
jne
pop
mov
and
add
add
pop
inc
and
add
add
pop
inc
and
dec
jmp
