and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
sub
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
or
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
add
inc
add
lea
push
mov
mov
xchg
xor
adc
inc
int3
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
ret
or
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
add
add
testb
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
adc
adc
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
sub
std
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
push
inc
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
je
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
and
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
and
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
sbb
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
adc
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
jnp
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
or
inc
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
out
inc
add
xchg
inc
lock
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
inc
jns
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
pusha
push
call
mov
sahf
add
testb
push
jl
mov
stos
sti
lret
add
push
jae
add
mov
loop
in
pop
jp
nop
mov
pop
cmc
filds
negb
mov
push
xchg
pop
lcall
jae
jne
mov
loopne
pop
xchg
add
push
push
push
push
push
push
push
push
lea
push
call
pop
fcmovnu
lret
add
scas
jge
add
rolb
mov
test
add
int
xchg
add
out
add
mov
scas
out
add
pop
add
pop
filds
stos
stc
xchg
data16
call
add
mov
add
add
lods
jmp
add
jmp
xchg
jp
xlat
icebp
test
add
mov
add
add
lea
pop
popl
push
push
lea
push
call
fdiv
mov
add
repnz
scas
xchg
roll
add
push
addr16
add
add
add
cmpsl
sar
pop
xchg
add
mov
xchg
jae
aad
push
mov
or
push
push
push
lea
push
push
push
push
call
add
clc
ret
jno
mov
int
add
push
add
add
pop
add
add
movsb
add
adcb
mov
mov
incb
scas
mov
jle
cmpsl
add
mov
add
add
jp
mov
add
mov
lea
pop
push
push
push
push
push
push
lea
push
call
into
in
add
push
stos
add
loop
into
jbe
ja
jle
xchg
add
mov
out
add
test
lods
add
lahf
add
mov
cmpsb
addr16
mov
pop
hlt
mov
fstl
add
pop
call
push
push
push
lea
push
call
add
add
stos
add
pop
add
stos
scas
lods
add
add
push
stos
leave
testb
cld
push
lods
xchg
mov
push
lahf
add
iret
add
jmp
add
xchg
into
lock
mov
enter
push
add
cwtl
jns
add
sti
out
push
stos
out
mov
loope
js
add
jle
jb
jnp
mov
mov
jle
cmpsb
insb
jl
hlt
lea
pop
call
push
push
push
lea
push
lea
push
push
call
jmp
xchg
popa
ja
pop
add
in
add
mov
add
add
push
add
xchg
test
pop
add
jmp
shll
add
pop
push
call
push
lea
push
push
push
call
mov
xchg
nop
add
fsubs
add
fistpl
add
rcl
add
arpl
xchg
out
scas
mov
add
add
loop
mov
push
add
add
stos
loopne
add
add
add
pop
mov
add
leave
rcl
aam
mov
lea
pop
jmp
ret
push
push
push
lea
push
push
push
lea
push
push
push
call
add
sbb
idiv
pushf
leave
sti
add
push
insb
filds
push
add
lahf
mov
push
add
xchg
mov
jo
scas
mov
ljmp
mov
arpl
into
movsb
add
mov
movsl
je
rorb
mov
mov
push
push
call
lahf
pop
cmc
jns
add
div
add
mov
dec
loop
mov
int
mov
test
popf
pop
add
add
add
mov
push
xchg
std
loopne
shlb
fildll
rcrl
leave
add
mov
iret
mov
add
add
mov
outsl
push
add
mov
add
jecxz
in
add
lahf
roll
aad
mov
lea
pop
add
add
push
push
lea
push
push
call
cmpsl
cwtl
add
int3
movsl
add
add
add
add
add
fldl
aad
add
add
add
add
push
mov
add
add
mov
lea
pop
add
push
push
call
popf
ljmp
add
stc
gs
add
push
cld
add
stos
add
lcall
sbbl
add
jle
jae
add
cmc
add
mov
ror
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
jns
add
jmp
mov
std
add
xchg
push
loop
lods
add
mov
aam
pop
lods
int3
out
fiadds
add
add
add
add
add
sahf
mov
add
add
add
xchg
add
and
xor
push
push
lea
push
lea
push
call
add
icebp
xchg
push
add
add
jbe
add
mov
add
add
scas
popa
test
add
test
divb
mov
pop
add
jmp
add
rorb
pop
add
push
push
sub
xor
add
push
push
pop
add
not
sub
lea
add
pop
sub
rol
add
pop
push
push
push
call
add
add
add
out
push
shlb
pop
add
fdivrl
mov
mov
addb
xchg
xchg
add
outsl
add
add
add
nop
stc
ficomps
adc
loope
lock
add
add
ja
aam
bound
pushl
push
push
push
call
sti
mov
gs
add
test
fistpl
mov
addl
imul
rcl
jecxz
fimull
add
add
mov
add
add
add
add
mov
into
add
imul
in
add
movsb
cmc
pusha
add
jb
mov
arpl
pop
add
or
call
push
push
push
lea
push
push
push
push
push
push
call
addr16
add
add
jl
add
add
pop
hlt
jns
loop
enter
test
lds
repnz
push
js
mov
int3
push
add
call
repnz
mov
lea
pop
mov
push
push
push
push
call
stos
test
les
add
pop
add
push
ja
mov
add
add
mov
add
int
pop
add
pop
andb
add
jge
xchg
push
data16
hlt
sti
iret
add
lds
add
mov
rolb
iret
add
adc
inc
loopne
add
add
inc
cmpsl
dec
out
jb
add
out
add
fucomp
add
jns
fisttpl
pop
add
mov
shlb
add
xchg
out
xchg
xchg
add
scas
imul
mov
rclb
cmpsb
push
add
add
add
lahf
cli
push
incb
jns
ror
movsl
faddl
mov
shl
pop
add
fs
add
xchg
int3
fcompl
xchg
add
jns
lock
pop
push
push
push
push
push
push
push
push
push
push
push
call
fsubr
addl
fmull
push
add
mov
jb
xchg
outsl
xchg
add
pop
lahf
mov
jns
aam
ffreep
add
add
add
xlat
add
fiadds
aad
test
popa
add
in
xchg
mov
lea
pop
pushl
pushl
push
push
push
call
movsl
mov
add
jns
jne
add
pop
mov
pop
lds
add
mov
lcall
add
enter
jge
add
test
enter
into
xlat
add
test
add
loope
mov
icebp
fiaddl
mov
push
pop
xlat
pop
std
mov
add
mov
lea
pop
call
push
push
lea
push
push
call
out
add
mov
addr16
add
mov
add
clc
add
add
add
stc
ja
test
cmc
add
fldl
adc
jne
push
push
push
push
push
lea
push
push
push
push
call
cmp
mov
add
add
clc
scas
lods
push
out
add
imul
add
add
leave
aam
mov
lods
mov
xchg
add
addr16
cmpsb
gs
fisubrs
les
jne
push
push
call
notl
mov
out
add
push
insb
std
popf
clc
ret
std
jmp
mov
loope
rolb
add
roll
add
in
cwtl
popa
add
pusha
add
mov
pop
call
add
jle
mov
jb
int
scas
mov
fcoml
movsl
je
mov
mov
add
jp
xchg
test
add
int3
lea
pop
call
push
push
shl
push
and
add
add
add
sub
inc
sub
pop
xor
sub
shr
pop
push
lea
push
push
push
call
sahf
jns
call
clc
repnz
sahf
popa
nop
mov
add
add
subl
add
mov
pop
movb
add
lods
add
movsb
pop
out
pushf
add
add
mov
lea
pop
pushl
call
push
lea
push
push
push
push
lea
push
call
add
mov
sahf
pusha
lea
data16
add
pop
loopne
add
add
add
mov
fdivs
jne
lret
xlat
xlat
push
in
add
test
jge
repnz
std
les
add
add
add
pop
pop
movsl
mov
lea
pop
push
push
push
inc
shl
add
push
sub
add
add
add
inc
sub
inc
rol
sub
dec
pop
rol
inc
pop
push
push
push
push
push
push
push
push
call
add
push
roll
add
add
icebp
mov
add
add
add
add
testb
subb
mov
add
add
add
add
int3
add
lcall
lret
add
mov
mov
add
sahf
add
cmc
mov
mov
stos
shl
pop
out
jbe
add
into
add
mov
push
and
push
push
push
push
push
push
lea
push
push
push
push
call
fwait
fs
ja
jl
ljmp
mov
ja
push
add
add
push
xchg
add
jno
hlt
add
aad
flds
add
add
add
test
add
add
jae
loop
mov
mov
lea
pop
call
push
push
call
add
sarb
rcr
mov
add
mov
add
add
cltd
movsl
dec
test
add
add
rolb
aad
movsl
enter
add
jb
outsl
add
lcall
addl
lods
add
add
xchg
sahf
bnd
div
ljmp
add
add
data16
clc
push
lea
push
call
addl
push
add
add
lret
xchg
leave
aad
add
rolb
jb
negb
mov
out
imul
rcrl
add
ja
add
mov
add
push
pusha
add
xchg
mov
add
add
les
push
lea
push
lea
push
lea
push
lea
push
call
add
je
pop
mov
pop
mov
shrb
jns
add
add
mov
stos
add
add
add
push
cmpsb
imul
rolb
lret
cmc
jb
cli
add
ret
loopne
add
add
push
add
cld
lea
pop
push
push
push
lea
push
push
push
push
call
add
add
jnp
xlat
add
jmp
push
mov
jge
cmc
mov
add
xchg
add
loop
mov
loopne
add
scas
push
stos
test
add
push
add
add
outsl
clc
add
add
add
cmc
add
arpl
in
jb
fmull
pop
in
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
fdivrl
jmp
add
stc
into
lds
add
in
in
mov
or
add
lods
add
flds
jmp
add
add
add
add
xchg
enter
push
shl
add
add
add
lods
cmpsl
push
xchg
add
loopne
cltd
push
arpl
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
call
leave
popl
cmc
add
mov
add
frstor
add
pop
scas
mov
rclb
cmpsb
roll
add
add
movsl
ja
stc
add
add
fwait
mov
add
cwtl
add
data16
add
push
push
lea
push
push
call
addb
add
loop
int
mov
out
mov
cli
add
lods
jge
add
push
sahf
imul
sarb
add
push
jo
je
add
lret
add
fildl
test
lea
pop
add
mov
push
push
lea
push
push
push
push
push
call
add
lods
add
add
popf
add
add
popa
je
add
into
lods
mov
lea
add
jl
add
aam
add
xchg
out
jmp
nop
add
mov
flds
out
xchg
push
mov
std
push
addb
mov
cmpsl
outsl
pop
fsubs
add
add
jle
jns
cld
add
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
pusha
lahf
mov
add
lods
lods
push
fists
add
popa
std
mov
add
push
js
cmpsb
xchg
add
movb
add
rorl
imul
les
les
add
push
push
push
push
lea
push
push
call
add
fs
add
test
aam
jl
incb
clc
jbe
mov
add
jbe
into
pop
add
xchg
add
fdivs
cmc
in
cwtl
mov
test
movl
jae
pusha
cmc
add
fadds
pop
loop
mov
lds
add
add
push
add
pop
add
push
push
push
push
push
push
push
call
add
add
add
iret
add
mov
repnz
fwait
imul
add
add
je
add
add
add
icebp
add
add
jl
add
mov
sbb
push
push
push
call
addb
cld
mov
jb
scas
aad
lret
out
add
jb
mov
add
icebp
xchg
mov
add
pop
incb
add
add
add
mov
fnsave
mov
iret
mov
add
stc
xlat
arpl
add
enter
rolb
add
xchg
negl
xchg
lock
pop
mov
xor
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
pop
out
add
cli
add
mov
add
cli
pop
jmp
add
pusha
add
add
add
int3
nop
mov
add
mov
xchg
movsb
push
add
mov
out
movsl
add
out
gs
data16
roll
outsl
push
add
mov
test
faddl
push
int3
lea
pop
add
pop
push
lea
push
push
push
lea
push
push
call
mov
in
filds
add
add
add
xchg
add
add
add
add
add
mov
push
xorl
mov
mov
xchg
add
stc
iret
add
jne
add
add
cmpsb
add
add
mov
push
leave
mov
sbb
dec
add
icebp
xchg
xor
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
call
add
jns
xchg
add
add
lcall
lret
mov
out
add
add
add
movsb
xchg
mov
jo
add
xchg
add
arpl
sub
mov
xor
push
push
push
lea
push
lea
push
push
push
push
call
add
push
mov
push
push
jnp
xchg
addl
add
jnp
sahf
add
xchg
filds
add
ffreep
pop
add
xchg
pop
add
mov
popa
js
add
sahf
jbe
mov
imul
pop
sub
push
push
push
push
push
push
push
push
push
push
call
fcomp
mov
clc
scas
push
add
out
pop
add
mov
add
add
mov
imul
test
pop
addb
pop
add
nop
add
lods
stos
out
idiv
add
add
in
xchg
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
outsl
push
add
add
test
icebp
xchg
test
mov
xchg
add
add
iret
add
add
aam
add
add
add
test
pop
push
add
out
add
pop
rep
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
mov
iret
cmc
fadds
jo
jo
lcall
add
lods
add
jb
sti
xchg
add
pushf
add
icebp
add
cltd
xchg
repnz
add
add
add
add
in
mov
add
add
add
pop
add
jne
add
add
add
push
cmp
addl
cld
lea
pop
pop
push
push
lea
push
lea
push
push
call
rcr
add
fucomi
jmp
lods
lods
addl
add
add
add
out
mov
add
stc
jmp
pop
push
loope
fwait
shll
mov
add
cld
lea
pop
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
stc
add
add
mov
mov
add
aam
add
pop
mov
fiaddl
mov
lods
add
add
imul
push
xchg
mov
mov
mov
hlt
add
mov
lock
add
add
in
add
add
mov
mov
mov
lea
pop
add
push
push
push
call
add
xchg
data16
push
mov
lods
add
in
cltd
add
mov
jmp
fucomi
add
shlb
fcomps
push
imul
add
popa
mov
jno
cmc
ficoml
add
mov
lret
jo
add
lret
stos
filds
mov
add
mov
roll
add
in
cld
mov
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
call
loope
arpl
add
fs
add
add
lea
hlt
add
pop
jo
add
add
out
jne
add
push
mov
aad
add
fisubrs
add
mov
jno
fadds
out
in
ljmp
add
push
ror
pop
mov
xor
push
pop
mov
push
push
push
push
push
push
call
mov
bound
push
int
add
mov
add
add
jl
cli
enter
pop
loop
add
out
add
add
add
add
enter
lret
shrb
out
mov
data16
xchg
rol
repnz
add
add
rolb
in
cwtl
push
jno
mov
pusha
adc
xor
push
push
push
push
push
push
push
push
push
call
nop
add
mov
jl
rclb
add
add
add
add
fadd
out
jno
add
add
lahf
add
mov
add
add
add
pusha
add
out
mov
lea
pop
add
push
push
call
add
add
leave
xchg
add
add
mov
popf
lahf
jge
jp
test
add
push
add
add
mov
jmp
outsl
add
mov
add
add
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
pushf
add
mov
stos
add
stos
scas
lea
scas
add
jae
add
jns
fs
jno
out
add
aad
sti
push
add
push
fiaddl
add
mov
icebp
mov
lea
pop
xor
push
push
call
add
pop
ljmp
mov
add
in
mov
ficompl
pop
add
cwtl
add
icebp
pop
jmp
add
aam
xchg
xchg
pop
movsl
add
add
mov
mov
pusha
arpl
jae
jge
add
cmpsl
add
add
mov
mov
add
stos
incb
fwait
jl
popf
add
xchg
add
mov
movsl
rolb
add
lea
pop
add
push
add
add
pop
add
push
push
push
push
call
stos
mov
jo
mov
mov
add
jo
cmpsb
in
sbb
sbbl
rclb
add
add
fistl
add
in
lahf
lods
in
cmpsl
jo
add
std
notb
sar
push
jge
fsubrs
jne
add
adc
rcll
inc
pop
mov
push
push
add
shr
push
or
inc
add
rol
inc
sub
sub
rol
shr
dec
xor
pop
sub
pop
push
rol
lea
pop
pushl
push
sub
dec
shl
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
hlt
mov
add
pop
lret
testl
mov
lea
aam
stos
add
add
mov
rcll
addr16
out
enter
add
cld
outsl
lcall
mov
arpl
out
add
les
jno
lahf
add
mov
fmull
add
inc
mov
rorl
xchg
ror
push
or
inc
add
add
shl
sub
sub
rol
pop
lea
rol
pop
push
lea
push
push
lea
push
push
push
push
call
add
mov
lahf
add
lods
add
jecxz
add
add
mov
mov
popl
add
jecxz
cltd
xlat
jno
add
mov
rolb
pop
in
pop
mov
add
xchg
xchg
test
out
mov
mov
lea
pop
push
push
push
sub
pop
call
push
push
push
lea
push
lea
push
push
call
mov
add
out
fbld
xchg
test
mov
add
fildl
bound
jnp
stos
add
neg
add
add
je
lahf
add
mov
addb
outsl
jle
lods
add
pop
add
add
outsl
movsb
add
pop
test
outsl
mov
lea
pop
mov
push
push
push
push
push
push
call
add
lahf
add
add
pushf
je
add
into
mov
in
mov
add
mov
xchg
add
add
add
hlt
mov
popf
add
stc
movsb
add
add
int
ja
mov
add
add
add
mov
add
sbb
push
sub
ror
pop
push
push
add
xor
add
pop
mov
add
push
shr
pop
add
push
lea
push
push
push
lea
push
call
add
add
mov
mov
add
add
imul
enter
cli
jne
add
add
cmc
xlat
pop
add
xchg
test
loop
add
mov
lea
pop
add
push
xor
not
shl
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
lret
sarl
mov
add
add
ja
filds
aam
add
xchg
add
stos
loop
add
clc
rolb
add
mov
clc
cli
fnstsw
push
mov
in
mov
in
add
lret
mov
add
cld
fistpl
addb
xchg
add
add
pop
popf
outsl
mov
je
aam
bound
pop
xor
push
push
push
push
push
push
call
add
add
add
jp
add
in
add
add
shl
fisubl
insb
add
pop
xchg
add
insb
add
mov
cmpl
mov
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
mov
out
xchg
xchg
add
lods
add
lret
js
faddl
jmp
bnd
add
shlb
stos
jp
mov
add
in
push
mov
add
add
add
and
jne
push
push
pop
mov
push
push
push
push
push
call
push
mov
addl
add
add
add
popa
lcall
test
mov
stos
lock
data16
mov
test
add
mov
add
jnp
lahf
andb
add
add
sarb
lea
pop
xor
push
push
lea
push
lea
push
call
pop
shlb
add
add
add
add
outsl
mov
adc
outsl
add
loope
add
pop
add
out
roll
add
add
mov
pop
out
rolb
movsb
add
xchg
cmpsl
mov
xchg
mov
add
test
testl
add
adc
les
add
push
push
push
push
lea
push
call
add
mov
add
add
out
add
cmc
leave
hlt
cltd
enter
test
add
ja
add
add
lock
mov
add
fistps
test
add
mov
mov
sti
push
push
mov
add
add
add
jp
add
scas
out
mov
imul
pop
imul
bnd
mov
lea
pop
add
pop
push
push
push
push
push
lea
push
lea
push
call
movsl
add
mov
add
add
imul
sti
int3
add
add
mov
test
mov
lods
add
add
scas
sti
add
hlt
lea
pop
mov
push
push
push
call
add
pop
cli
add
mov
jl
fisubl
jns
add
mov
add
stos
mov
xchg
aad
jle
add
add
add
add
cltd
sahf
mov
in
hlt
lea
pop
xor
push
push
push
lea
push
push
push
call
scas
xchg
mov
int3
icebp
test
mov
add
out
add
add
fbld
ficomps
popf
lods
add
jbe
add
push
pop
add
aam
add
mov
rcrl
add
popf
add
iret
pop
call
add
jb
add
mov
lea
pop
add
push
push
call
add
in
add
pop
mov
aad
popl
cltd
lahf
mov
add
bound
add
in
nop
push
fdivr
add
mov
jl
add
add
js
imul
cmc
enter
add
pop
lock
mov
in
xchg
add
arpl
add
roll
pop
add
ret
les
movsb
push
push
call
xchg
add
push
xchg
mov
push
lods
jmp
mov
in
add
mov
add
pop
add
mov
add
int
mov
add
add
sti
popl
sahf
les
pop
mov
push
push
lea
push
push
push
push
call
add
mov
ja
add
add
testl
mov
add
pop
pop
add
add
add
add
push
cli
add
fstpl
xchg
mov
add
add
stos
add
add
rcrb
testb
add
add
popf
mov
loop
nop
lds
ja
roll
add
imul
jmp
arpl
xor
push
push
push
push
lea
push
push
call
add
mov
js
add
fwait
pop
imul
add
mov
add
icebp
mov
add
jge
ret
add
add
lret
add
push
add
add
out
int3
lea
pop
add
push
xor
pop
or
je
push
push
push
push
push
push
push
push
call
push
lods
add
add
add
mov
mov
add
xchg
add
mov
add
add
add
add
idivb
aam
bound
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
rolb
cmpsb
fidivrl
jecxz
jb
std
stc
aad
add
mov
add
enter
add
add
cmpsl
out
add
push
add
jne
scas
push
add
add
movsb
add
int3
movsl
je
add
add
test
push
add
add
add
movb
test
add
mov
lea
pop
xor
push
lea
push
push
push
push
call
add
loopne
scas
pop
add
jle
add
outsl
jbe
add
popf
lods
xchg
sahf
add
lret
stos
aad
cwtl
add
mov
faddl
pop
add
jae
fildl
pusha
mov
push
add
push
enter
add
pop
outsl
push
mov
outsl
add
jbe
rcr
add
stos
add
int3
xchg
jecxz
mov
lea
pop
add
push
lea
push
push
push
push
push
call
cmpsb
incb
out
add
xchg
fcom
fsincos
add
leave
mov
add
add
jbe
add
bound
add
loope
out
mov
xchg
out
loopne
aad
les
add
mov
add
mov
add
leave
nop
add
les
push
sbb
xor
push
push
push
push
push
push
call
popf
cld
mov
add
addl
jb
add
add
jecxz
std
pop
xchg
jmp
cld
add
shlb
add
mov
into
add
add
add
std
add
cmc
lea
pop
mov
test
flds
rorb
pop
xor
push
push
push
push
lea
push
call
add
call
leave
add
cwtl
jge
push
xchg
pop
add
pushf
aad
add
mov
adc
popf
add
loop
int
pop
cmpsl
out
mov
mov
add
add
add
mov
fs
int
add
pop
add
add
xchg
add
ret
scas
add
out
add
pop
test
pop
add
rorl
pusha
mov
lea
pop
add
push
push
call
add
add
aam
add
jl
cmpl
xchg
cwtl
add
pop
jb
jbe
add
adc
int
lods
mov
add
lods
loopne
clc
int
add
mov
add
add
mov
jno
leave
addl
js
in
mov
out
scas
add
cmpsb
popa
add
add
mov
lea
pop
add
add
push
push
lea
push
call
add
ret
mov
add
add
add
mov
jnp
add
hlt
cmc
jbe
add
push
add
in
xchg
add
stos
add
lea
pop
push
push
rol
rol
pop
mov
xor
push
rol
xor
pop
add
push
sub
rol
shl
pop
pop
push
push
push
lea
push
push
call
les
popl
xchg
add
mov
iret
in
add
pop
add
mov
mov
add
cmpsl
add
add
cmpsb
mov
pop
movsb
add
cld
test
add
add
xchg
iret
add
mov
lea
pop
rep
mov
xor
push
xor
pop
or
je
push
push
push
call
mov
xchg
add
faddl
jno
lock
pop
add
out
movsb
pushf
add
add
hlt
add
mov
cwtl
mov
xchg
pop
add
add
pusha
fcom
mov
add
lods
testl
add
add
add
mov
lea
pop
mov
push
inc
pop
add
push
add
shl
pop
add
push
shl
sub
add
pop
rep
push
add
pop
pop
push
push
shl
push
sub
add
sub
rol
pop
pop
push
push
call
fcmovnb
std
add
add
add
sahf
push
add
add
add
add
pushf
add
pop
jl
xchg
xlat
add
add
sti
jge
int3
mov
mov
fs
add
mov
add
popf
mov
push
mov
add
push
mov
fiadds
add
mov
add
mov
lea
pop
pop
mov
push
push
push
push
push
push
push
push
push
call
add
out
add
add
cld
cmc
test
mov
mov
mov
arpl
out
roll
add
add
nop
add
add
addl
add
pop
mov
push
rol
ror
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
add
lcall
leave
enter
add
push
add
add
lods
pop
mov
xchg
out
xlat
imul
jns
add
lret
add
lods
rcrl
std
add
idiv
mov
add
mov
xchg
add
add
cmc
shrl
stc
mov
clc
lahf
icebp
mov
lea
pop
jmp
push
add
pop
push
push
lea
push
lea
push
lea
push
push
push
call
push
add
add
loopne
mov
mov
add
out
add
add
push
cld
push
add
fsubl
bound
add
add
add
add
add
add
jmp
loope
cld
sahf
add
mov
mov
add
into
popa
push
add
cwtl
jno
push
add
add
push
pop
fwait
pop
movsl
add
cltd
mov
lea
pop
mov
push
inc
add
pop
add
push
not
add
shr
pop
push
push
push
shl
pop
push
push
push
lea
push
push
push
push
call
add
mov
mov
add
jp
fwait
rcl
mov
addb
xchg
jne
addl
add
mov
add
mov
add
add
jecxz
out
add
add
add
add
add
add
pop
push
push
lea
push
lea
push
push
push
push
call
add
xchg
sarl
mov
out
ret
fadds
popf
pop
add
add
pusha
add
add
jns
int
push
jp
push
std
push
add
add
push
mov
in
add
lods
rolb
rol
repnz
add
add
jmp
add
fbld
lea
pop
mov
pop
push
xor
shr
add
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
cwtl
rolb
mov
pop
jae
add
filds
add
add
scas
int
arpl
add
shrl
lea
pop
add
jl
enter
add
add
xchg
add
lds
jge
add
pop
jb
ja
jnp
fildl
add
jmp
cld
push
mov
add
gs
add
popf
loopne
mov
lea
pop
pop
push
xor
not
pop
pop
push
shl
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
rolb
incb
lret
add
add
out
add
jge
jnp
pop
add
add
fnstcw
add
add
lret
xchg
icebp
test
aad
cmpsb
xchg
ret
add
add
insb
add
add
jle
add
mov
lea
pop
ret
push
push
push
push
lea
push
push
call
add
add
cli
push
add
cld
add
add
add
add
std
nop
xchg
fisubrs
sti
add
mov
add
add
leave
add
push
add
jmp
pop
lea
jbe
lret
add
add
push
xchg
mov
add
iret
cld
pop
fadds
popa
fiaddl
cmpsb
mov
add
mov
lea
pop
push
push
shl
not
pop
mov
push
push
lea
push
push
call
mov
gs
jp
add
mov
add
sti
insb
add
push
mov
les
add
mov
movsl
fs
lods
int
add
mov
mov
jge
stos
ja
mov
lea
pop
add
push
push
push
push
push
call
jno
add
add
push
cltd
add
roll
cmpsb
add
xchg
mov
test
fildl
mov
add
add
add
fiaddl
notl
add
faddl
add
add
push
add
les
add
addb
add
test
add
in
add
add
pop
lcall
push
push
push
call
aam
lcall
xchg
fdivs
fadds
rclb
ror
iret
add
mov
push
add
ror
mov
add
add
test
add
mov
mov
add
rolb
lds
add
add
add
jnp
add
mov
add
add
in
std
jmp
arpl
pop
push
push
shr
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
in
add
add
lret
mov
adcb
arpl
add
add
add
jo
add
add
cld
mov
rcll
mov
add
jo
stos
nop
cmpsb
mov
lea
pop
movl
addl
push
lea
ror
sub
pop
test
je
push
push
push
push
call
jl
cwtl
pusha
mov
mov
lahf
fimull
jo
xchg
add
fiaddl
leave
push
add
lret
insb
loopne
in
rcrb
lea
pop
mov
pop
push
push
call
push
mov
add
lcall
test
add
pop
shrb
pop
addb
add
mov
lods
add
adcb
imul
pop
add
scas
stc
add
aad
lea
icebp
jo
ret
add
fs
jns
movsl
add
std
jae
fmull
push
shl
pop
pop
push
shl
pop
pop
leave
push
lea
lea
pop
ret
push
push
pop
mov
push
push
push
push
call
pop
roll
in
lds
into
mov
pushf
sahf
add
mov
notb
push
fs
add
aad
pusha
jecxz
stos
add
sarb
add
aam
data16
addl
add
add
xchg
add
pop
testb
add
add
notb
roll
std
fdivl
xchg
jns
push
outsl
ja
pop
scas
mov
lea
pop
add
push
push
lea
add
dec
pop
push
push
lea
push
push
push
call
movl
mov
add
cli
add
add
add
mov
push
incb
loope
add
add
testb
jl
add
add
pop
xchg
cmpsb
add
test
add
add
scas
enter
mulb
add
int3
stos
add
bound
add
stos
mov
xchg
into
int
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
enter
iret
mov
test
les
mov
jo
pop
iret
add
add
push
shll
lret
pushf
jbe
mov
add
push
fcoml
push
loope
mov
les
add
ja
outsl
pop
jae
cmpsl
pop
int3
hlt
mov
lea
pop
push
push
push
push
push
lea
push
push
call
add
add
cmpsl
in
roll
lahf
add
jp
fdivrl
mov
in
mov
add
push
add
mov
rolb
add
flds
add
int3
add
stc
add
add
mov
bound
jp
add
pop
add
pop
push
add
pop
testl
push
not
add
shr
ror
pop
addl
push
lea
push
push
push
lea
push
push
push
push
push
push
call
pop
ljmp
add
nop
add
xchg
mov
aam
test
pop
add
add
mov
addl
add
mov
add
mov
add
add
add
shlb
add
add
pop
add
faddl
xchg
fsts
sub
add
push
push
call
gs
loopne
pop
add
jae
add
mov
jnp
add
cld
jno
mov
mov
add
repnz
test
scas
add
lock
fstpt
add
pop
mov
out
in
addb
incb
add
cltd
add
add
add
lock
add
pop
add
add
call
mov
add
adc
xor
call
xlat
push
lea
push
push
push
push
push
call
add
pushf
addl
pop
add
xchg
xchg
push
icebp
jge
call
add
test
cltd
push
add
add
mov
std
rolb
add
stos
loope
cwtl
add
fadd
add
mov
add
imul
int3
lea
pop
mov
push
push
push
push
push
push
call
mov
add
aad
add
fadd
jl
js
add
push
jo
add
cmpsl
mov
mov
gs
mov
scas
pop
xchg
mov
add
add
cltd
int
lock
shlb
push
mov
lea
pop
pushl
push
push
ror
pop
push
call
push
not
shl
pop
cmpl
jne
push
xor
inc
pop
pop
push
pop
pop
push
pop
pop
push
push
push
lea
push
call
add
add
cli
mov
xlat
jge
xorb
add
xchg
cmc
jne
mov
jb
add
int3
jns
add
add
lods
data16
add
push
add
shl
add
out
add
add
add
add
add
arpl
jl
out
add
insb
add
xchg
jecxz
add
add
rcrl
hlt
lea
pop
pop
leave
push
inc
pop
ret
push
lea
push
push
call
fldcw
filds
add
add
add
add
repnz
aam
jo
fstl
xchg
lcall
jecxz
je
pop
pop
add
add
iret
out
inc
mov
fcmove
push
add
add
jecxz
mulb
xchg
add
add
add
add
adcb
repnz
add
pop
add
pop
push
push
push
push
call
xchg
addr16
call
mov
ja
xchg
add
les
pop
pushf
add
push
jp
clc
jbe
into
add
add
mov
jge
add
xchg
xchg
add
add
add
add
push
push
int
add
jmp
jbe
aam
shrb
xlat
test
mov
lea
pop
mov
push
push
push
push
push
push
call
repnz
loop
add
lds
jle
add
leave
add
into
add
lahf
sub
jne
push
add
pop
test
mov
insb
xchg
jle
in
clc
jmp
jae
add
repnz
add
int
push
mov
xchg
jb
cli
xchg
pop
mov
mov
add
xchg
mov
jle
cld
lea
pop
add
push
push
push
push
push
push
push
push
call
xchg
std
pop
bound
out
lahf
lods
add
add
fs
add
add
lcall
push
add
adc
out
xchg
add
pop
lods
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
stos
iret
fcom
add
add
add
in
add
add
add
rcl
add
add
add
push
add
call
imul
incb
add
add
cltd
add
idivl
popa
mov
and
push
lea
push
push
call
jbe
out
mov
mov
pop
ja
mov
add
sahf
pop
add
out
rcr
add
bound
add
std
mov
mov
fwait
add
aad
jecxz
int
hlt
addb
loope
add
add
mov
add
ja
mov
repnz
rolb
add
cltd
add
jns
add
fwait
pop
add
lahf
arpl
aam
add
lea
pop
movl
push
push
push
push
push
lea
push
push
call
popa
xchg
add
in
nop
test
jbe
in
xchg
pop
hlt
add
mov
xchg
add
scas
xchg
stos
pop
mov
jmp
shll
stc
pop
lret
xchg
iret
add
addb
xchg
push
fs
orb
jecxz
xchg
int3
xchg
test
mov
fs
imul
add
add
clc
jne
mov
test
add
fs
lea
pop
call
push
push
add
add
dec
pop
call
push
rol
lea
dec
pop
subl
cmpl
jne
push
lea
push
push
push
push
lea
push
lea
push
push
call
jge
movb
shll
jl
jno
leave
out
jbe
add
jmp
fwait
imul
cld
out
add
sarb
xchg
pop
jo
jbe
add
push
lods
lods
fstps
add
add
ficompl
addl
add
add
push
aad
jmp
outsl
jne
stos
add
cltd
pop
adcl
mov
lea
pop
pop
pop
push
lea
pop
pop
push
pop
pop
push
push
push
call
add
shrb
pop
add
add
mov
add
cltd
lret
add
add
in
fiadds
jne
mov
mov
mov
add
arpl
push
pop
sarb
xchg
add
add
mov
add
pop
test
in
roll
mov
push
lret
ljmp
test
pop
cmpsb
add
iret
incb
add
pop
leave
ret
push
lea
push
lea
push
push
call
add
xchg
call
scas
ja
cmpsb
add
loop
mov
pop
mov
mov
cld
xchg
lret
xchg
in
xchg
les
add
add
fs
imul
jmp
mov
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
ja
jb
jne
test
lods
test
jge
jnp
add
add
add
add
test
add
out
nop
filds
mov
add
add
push
add
loope
add
sahf
add
fbld
aam
bound
mov
push
shr
shr
add
pop
add
push
push
push
call
xchg
xchg
add
add
add
mov
movsl
add
mov
add
ret
insb
cld
add
add
lea
add
mov
out
xorb
add
add
out
add
add
mov
subl
std
pop
in
mov
add
add
add
pop
out
pop
mov
lea
pop
push
push
add
lea
pop
push
push
push
push
call
add
repnz
lret
jecxz
outsl
pusha
mov
aad
add
lds
add
jp
add
add
popf
cwtl
add
add
fwait
add
mov
lea
pop
push
push
push
push
push
push
push
call
add
faddl
add
xchg
lea
enter
mov
add
add
add
in
movsl
push
add
add
jnp
add
jo
jo
add
add
sarb
mov
lea
pop
mov
push
lea
push
push
lea
push
push
call
add
aam
mov
hlt
mov
repnz
add
xchg
ljmp
mov
fildll
imul
fdivrs
add
in
lock
cmpsl
mov
fdiv
call
mov
lea
pop
lea
push
ror
add
pop
sub
push
inc
ror
pop
mov
push
push
push
push
call
cld
push
stos
add
add
js
add
clc
in
xchg
push
add
add
je
in
add
add
stos
jne
out
add
push
leave
std
jae
mov
mov
imul
lea
pop
shr
add
push
push
call
movsb
mov
mov
nop
sti
rorb
mov
mov
xchg
fidivs
orl
imul
add
add
je
push
ja
loop
scas
arpl
cmpsl
xchg
mov
add
mov
add
add
add
mov
lea
pop
mov
push
shr
pop
mov
add
push
add
rol
pop
add
push
push
push
call
add
pop
xchg
mov
cli
add
loop
add
addl
cli
nop
icebp
add
lods
add
filds
lods
cwtl
add
roll
add
lods
imul
push
add
cmpsb
add
lret
xchg
add
add
in
xchg
mov
add
jle
push
mov
lea
pop
mov
push
push
lea
push
push
call
add
add
xchg
ficompl
fimuls
add
pop
add
hlt
add
add
pop
add
popf
mov
mov
xchg
data16
aam
mov
fistpll
aam
bound
pop
mov
push
push
call
add
xlat
imul
add
repnz
test
mov
shlb
add
mov
add
mov
add
lea
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
add
gs
add
imul
repnz
jnp
push
aad
clc
push
add
add
sahf
push
pop
add
ljmp
mov
lea
pop
cmp
jne
mov
push
push
push
lea
push
lea
push
call
push
repnz
jbe
add
test
jmp
jp
add
loope
add
add
test
cltd
cli
outsl
stos
in
cwtl
cmc
add
pushf
add
add
jb
add
fildl
add
sahf
movsl
add
add
add
test
push
add
jnp
add
pushf
mov
adc
movl
jmp
push
xor
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
movsb
add
sahf
pop
add
mov
add
mov
add
add
add
arpl
mov
pop
add
rcrl
js
mov
add
add
xlat
scas
les
add
lret
add
loope
add
add
movsl
push
stos
add
aad
rclb
jb
mov
loopne
mov
lea
pop
mov
push
lea
push
push
push
push
call
out
add
loope
jne
roll
aad
add
add
add
testb
fildl
xchg
iret
mov
jae
push
add
add
add
lds
mov
subl
xchg
push
mov
insb
mov
add
mov
add
mov
hlt
neg
jb
add
mov
loop
mov
xchg
aam
bound
sub
jne
mov
push
push
push
lea
push
lea
push
call
add
push
add
mov
in
std
add
lret
roll
xchg
add
pushf
push
fmuls
push
lret
in
aam
add
jmp
out
mov
add
xchg
add
divb
call
hlt
add
mov
lea
pop
movl
push
add
shl
pop
jmp
push
add
not
pop
mov
mov
push
sub
xor
inc
pop
cmp
jne
push
lea
push
push
call
add
lahf
mov
hlt
add
fwait
add
ficomps
out
add
roll
mov
shrb
imul
add
popa
push
add
add
pop
add
loopne
add
rolb
cmpsl
push
mov
add
add
gs
mov
mov
roll
mov
pop
shlb
add
sti
shrl
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
mov
call
outsl
add
add
add
add
rorl
lcall
add
ja
rolb
loope
repnz
int3
icebp
mov
imul
repnz
loopne
jnp
jo
loope
add
pop
movl
jmp
push
add
pop
mov
push
push
push
push
push
call
xchg
add
notl
mov
mov
add
lock
std
add
popa
lret
fsubr
xbegin
pop
fst
insb
mov
arpl
arpl
add
cltd
test
scas
add
mov
add
jnp
aam
bound
cmpw
jne
push
add
add
sub
pop
mov
push
push
lea
push
push
call
movsb
sahf
jp
xchg
add
ljmp
repnz
pushf
leave
shll
lcall
fs
add
add
enter
jle
add
add
add
xchg
add
fldt
mov
adc
add
and
lea
push
lea
push
push
push
lea
push
push
push
call
frstor
add
add
cwtl
add
incb
movsl
enter
add
add
add
cld
push
lea
add
shlb
jns
add
mov
add
add
data16
mov
lea
pop
pushl
push
sub
not
rol
sub
pop
pop
push
sub
pop
mov
push
push
lea
push
call
add
add
jge
add
mov
jecxz
add
add
pusha
add
pop
add
mov
add
cmpsl
add
add
fwait
push
push
xchg
mov
add
add
add
ret
ljmp
pop
add
repnz
lock
lea
pop
mov
push
push
push
lea
push
call
jp
push
add
add
fwait
push
add
add
add
push
jno
add
add
gs
xchg
mov
mov
stc
xchg
fmuls
pop
mov
push
push
add
push
or
inc
add
inc
add
ror
sub
sub
add
not
dec
sub
pop
rol
pop
push
lea
push
push
push
call
js
leave
xchg
insb
sbbl
aad
add
shll
mov
xchg
add
add
add
jmp
add
push
movl
in
out
out
scas
sbbl
add
add
adc
push
push
push
push
push
push
push
push
lea
push
call
rolb
add
add
push
add
addr16
or
enter
leave
add
cmpsb
add
roll
movsl
popa
arpl
cmpsb
pop
sti
mov
add
add
movl
push
add
add
add
jmp
lea
pop
call
push
shl
inc
add
pop
cmpl
je
push
push
shr
push
or
inc
add
add
sub
dec
dec
pop
shr
rol
shl
pop
push
add
dec
pop
push
push
push
push
push
push
push
push
call
xlat
add
loop
jb
ret
ljmp
add
add
clc
add
add
add
mov
repnz
xchg
je
jne
fwait
add
ja
pop
xchg
xlat
mov
int3
lret
jno
xlat
jl
loop
mov
mov
faddl
add
cmpsl
mov
add
out
add
ljmp
sbb
call
push
lea
sub
dec
pop
cmpl
je
push
push
add
rol
push
or
not
add
xor
sub
dec
sub
pop
xor
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
rolb
adcl
fnstsw
jnp
jb
add
idivb
jns
add
mov
add
jbe
fcmovu
add
ja
add
pop
xchg
popl
jns
leave
enter
out
fldcw
mov
add
fwait
jl
lods
mov
mov
mov
imul
and
push
lea
push
push
push
push
call
lock
nop
enter
add
push
pop
add
mov
add
add
push
add
mov
add
add
add
test
add
mov
lea
pop
call
push
lea
push
call
add
mov
mov
jo
add
lea
aad
test
call
lcall
leave
in
xor
imul
mov
jp
mov
popf
add
fstps
in
add
loopne
loop
add
lods
add
in
add
push
add
icebp
cmpsb
add
xchg
xorl
add
add
int
stos
mov
lea
pop
cmpl
je
push
push
not
xor
add
push
sub
add
inc
sub
add
sub
inc
shl
pop
xor
not
rol
pop
push
shr
lea
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
jge
out
add
add
loopne
aad
sahf
mov
pop
jge
add
jne
lds
in
icebp
mov
test
popf
add
in
add
add
addr16
mov
push
lds
add
jno
movsb
popa
add
sbb
add
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
sbbl
add
mov
int
lahf
aad
in
add
xchg
add
arpl
insb
lcall
add
mov
ljmp
jl
xchg
loope
clc
jge
add
jmp
add
cld
push
add
popa
sub
cmp
test
bound
or
not
add
shr
dec
sub
xor
dec
ror
pop
sub
pop
push
push
call
cmpsl
mov
add
add
add
movsl
add
insb
mov
xchg
add
popa
aad
xchg
fwait
loop
mov
add
mov
add
push
icebp
mov
call
mov
add
mov
add
into
outsl
fcmovne
push
mov
add
icebp
nop
xchg
add
mov
lea
pop
push
push
lea
push
push
call
ret
fiaddl
push
mov
jno
mov
cmpsb
lea
roll
xchg
cld
push
adc
je
sti
jne
mov
add
xchg
add
add
mov
push
add
add
add
fcmovbe
add
jp
add
add
call
mov
add
mov
arpl
add
subb
add
ffreep
add
hlt
lea
pop
call
push
not
not
ror
pop
cmpl
je
push
push
rol
sub
push
and
add
sub
sub
sub
add
sub
pop
pop
push
rol
pop
push
call
push
not
rol
add
pop
cmpl
je
push
push
lea
xor
not
push
sub
add
add
sub
inc
shr
add
pop
shr
inc
add
pop
push
inc
pop
push
push
add
add
pop
call
push
push
lea
push
push
push
lea
push
push
push
call
test
addr16
roll
out
out
mov
loop
pop
loope
imul
add
popa
mov
testb
push
mov
mov
jecxz
add
mov
lea
pop
cmpl
je
push
push
sub
push
xor
add
shr
sub
sub
dec
shr
lea
pop
shl
lea
pop
push
push
push
push
push
push
call
mov
data16
mov
outsl
mov
subl
add
roll
jmp
jb
add
add
add
hlt
scas
add
int3
add
jmp
add
enter
hlt
scas
jns
testl
rcrb
add
add
scas
add
int3
ljmp
add
sbb
push
add
rol
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
call
fwait
aad
ljmp
jb
in
add
jnp
lods
mov
add
add
add
add
ret
aad
jne
addl
add
into
add
pop
cmpl
je
push
push
not
lea
add
push
and
add
ror
xor
sub
shl
pop
sub
rol
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
jb
mov
add
arpl
add
cltd
add
add
add
int3
bound
add
lcall
pop
add
popf
add
add
fs
test
add
aad
icebp
sti
aam
add
out
mov
lea
pop
push
push
dec
pop
call
push
shl
pop
cmpl
je
push
push
add
add
push
sub
add
not
add
sub
sub
not
not
inc
pop
xor
pop
push
push
lea
push
push
push
push
call
add
stos
out
mov
sarb
xchg
gs
xchg
mov
sbbb
mov
pop
scas
cmpsl
data16
add
add
loope
mov
mov
mov
sbb
push
push
lea
push
call
hlt
add
xchg
add
cmpsb
mov
pop
jl
imul
rcrb
movl
push
xor
int
mov
add
add
pop
add
mov
test
test
ficoml
out
add
rorl
lods
nop
add
add
add
mov
add
add
sahf
jns
add
push
fucomp
mov
lea
pop
call
push
inc
inc
pop
cmpl
je
push
push
ror
rol
push
or
inc
add
xor
sub
dec
pop
lea
sub
pop
push
push
lea
push
push
push
push
call
lea
add
add
loope
icebp
add
mov
lahf
jl
add
add
mov
add
add
add
add
loopne
fiaddl
repnz
pusha
sbb
call
push
xor
inc
add
xor
pop
cmpl
je
push
push
push
or
inc
add
inc
sub
dec
shl
lea
sub
pop
shr
dec
add
pop
push
pop
push
push
push
lea
push
lea
push
call
mov
jmp
ror
jp
outsl
in
add
popa
add
mov
add
add
add
add
add
add
aad
add
add
mov
add
add
add
roll
clc
add
scas
test
pop
insb
mull
add
fucomp
add
add
divl
adc
imul
ret
xor
cmpl
je
push
push
push
push
pop
add
ror
sub
lea
dec
dec
pop
add
xor
pop
push
lea
push
push
push
push
push
push
push
push
call
arpl
add
add
add
popf
add
std
in
mov
lods
add
add
out
mov
lret
mov
subl
mov
loopne
std
push
out
add
add
xchg
mov
add
mov
lea
pop
push
call
push
push
push
push
lea
push
push
push
call
faddp
add
movl
testb
add
jno
add
scas
cwtl
xchg
push
add
sahf
in
mov
add
add
in
stc
fcmovbe
add
mov
lea
pop
cmpl
jne
mov
push
push
push
push
push
lea
push
call
mov
mov
lret
fbld
xchg
add
fs
mull
add
loop
fsubrp
add
add
jo
stos
in
test
addb
hlt
out
gs
mov
iret
outsl
add
icebp
add
les
add
add
add
rcrb
subl
enter
pop
jmp
xor
push
rol
xor
xor
pop
pop
push
pop
pop
pop
push
not
xor
pop
pop
push
push
lea
push
lea
push
call
fwait
add
add
outsl
push
pop
mov
add
add
add
add
jbe
rolb
rol
add
out
add
je
add
add
jns
cltd
flds
call
mov
lea
pop
leave
push
ror
pop
ret
push
push
push
push
call
adc
je
ljmp
add
mov
out
stos
add
in
lcall
aad
add
mov
add
fldcw
add
add
xchg
or
int3
add
cmpsl
jl
aam
bound
pop
push
push
shl
pop
mov
push
push
push
push
lea
push
push
push
call
pop
add
jecxz
add
push
add
mov
pop
jb
fwait
sti
pop
mov
sub
mov
add
add
mov
push
add
loope
add
add
cli
add
popa
sbb
add
push
push
push
push
push
push
lea
push
push
call
add
icebp
add
add
lods
add
xchg
mov
bnd
add
add
add
xchg
cltd
add
enter
in
add
arpl
xlat
push
in
add
mov
add
fbstp
xchg
jne
arpl
add
cmpsl
fiadds
test
push
in
jp
pushf
arpl
lock
int3
lea
pop
cmpl
jne
push
push
xor
lea
add
push
xor
add
sub
add
sub
inc
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
xlat
add
std
add
add
add
add
imul
mov
add
jp
xlat
push
cmp
add
add
pop
xorb
loope
int
pop
mov
in
add
add
cli
in
mov
lea
pop
pushl
push
sub
sub
dec
pop
call
push
sub
not
lea
pop
push
call
push
ror
pop
jmp
push
sub
ror
add
sub
pop
cmpl
je
cmpl
jne
push
push
push
call
add
movsb
add
test
add
pop
bound
add
pop
cli
mull
fldl
add
les
jb
add
rcrb
add
in
add
mov
push
add
jmp
mov
mov
xchg
add
mov
sti
rcrb
add
jle
mov
imul
add
add
fists
add
pop
leave
add
push
push
push
push
push
push
lea
push
call
fimuls
jne
rclb
jbe
add
fiadds
add
addb
sahf
add
roll
repnz
add
out
nop
cwtl
add
jne
lret
jl
out
test
pop
push
mov
add
fildll
mov
lea
pop
pop
pop
push
push
push
push
push
push
call
add
lods
bnd
fdivl
lds
add
bound
push
add
cltd
stos
stos
add
test
clc
mov
jmp
pop
push
int
add
lods
add
popa
imul
jmp
inc
inc
pop
pop
push
push
lea
push
call
pop
stos
push
add
xchg
add
stos
add
out
clc
mov
out
add
fnstcw
scas
add
shl
out
lods
faddl
add
xchg
add
fwait
add
add
ljmp
jns
js
sti
test
jns
mov
loopne
mov
add
add
cld
lea
pop
leave
add
push
add
lea
sub
not
pop
ret
push
inc
pop
jmp
push
ror
rol
pop
cmpl
jne
push
push
lea
rol
push
push
pop
add
add
add
sub
pop
add
add
pop
push
lea
push
push
call
mov
mov
add
fdivr
add
testb
gs
testl
bound
int
add
imul
mov
add
nop
cltd
add
push
enter
mov
lea
pop
pushl
push
shr
shr
xor
dec
pop
call
push
ror
inc
pop
push
call
push
pop
jmp
cmpl
jne
push
shl
pop
mov
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
ja
pop
cwtl
add
push
add
push
add
add
scas
test
out
mov
xchg
mov
add
loope
add
fisubrs
add
add
clc
mov
add
add
in
push
lods
bound
imul
add
mov
lret
add
lea
pop
push
push
push
add
ror
sub
push
and
add
lea
sub
sub
sub
shl
pop
add
pop
push
inc
add
rol
pop
pushl
push
dec
add
xor
lea
pop
call
push
pop
push
call
push
push
sub
push
sub
add
xor
sub
not
shr
pop
sub
pop
push
xor
xor
inc
sub
pop
pushl
push
push
push
push
call
fisubl
add
add
movl
pop
xor
stos
cmc
test
nop
add
add
jbe
loopne
add
push
xchg
pop
mov
fisttpl
pop
call
push
sub
pop
call
push
push
not
inc
dec
push
xor
add
lea
sub
sub
pop
rol
sub
lea
pop
push
push
push
push
push
lea
push
call
cli
add
add
mov
mov
loope
mov
lea
add
xchg
rolb
add
add
add
test
push
sti
popa
add
xchg
jl
enter
enter
mov
add
add
add
icebp
iret
jl
pushf
mov
add
add
mov
add
iret
jp
fstl
arpl
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
push
call
loope
pushf
mov
mov
add
into
xchg
jne
leave
push
mov
lds
add
fmul
int
jmp
movsl
xchg
cmpsb
add
push
pop
out
add
jne
add
mov
add
jb
add
mov
mov
add
add
pop
icebp
mov
lea
pop
call
push
add
add
add
pop
call
lea
push
push
not
add
add
dec
push
sub
add
lea
sub
inc
dec
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
out
push
nop
jmp
jnp
add
add
cmpsb
jno
test
mov
add
add
add
mov
add
add
xchg
subl
push
addb
xchg
lds
add
je
fsubrs
add
add
fildl
in
mov
aam
add
hlt
mov
adcb
lea
pop
pushl
push
push
push
push
lea
push
push
push
call
js
stos
add
out
jae
mov
add
shlb
mov
add
add
cmc
add
shll
out
pop
repnz
add
loopne
lret
out
cli
add
lret
add
mov
add
fsts
xchg
pop
push
mov
lea
pop
call
push
push
shl
pop
call
push
push
rol
shl
inc
shl
push
and
add
xor
sub
rol
lea
pop
rol
sub
sub
pop
push
lea
push
lea
push
call
push
add
ror
add
mov
pop
add
stos
pusha
std
imul
mov
pop
lcall
mov
jnp
aam
lret
add
add
add
add
lcall
pop
rorb
add
lret
add
mov
mov
testl
movb
ja
fldl
xorl
xchg
aam
outsl
insb
lret
in
mov
lea
pop
pushl
push
push
call
mov
add
push
add
add
in
les
xchg
jmp
rolb
out
fiadds
push
jbe
je
add
add
in
push
jne
jl
xchg
add
add
add
int
pushf
add
sahf
add
add
add
hlt
lea
pop
call
push
sub
shl
shl
pop
call
push
push
push
push
lea
push
call
lret
add
add
add
pop
add
xchg
repnz
xchg
add
xchg
jo
jmp
gs
lods
flds
js
add
lahf
add
in
loope
loopne
in
push
data16
popf
roll
movsb
add
add
add
pop
popf
mov
out
add
push
push
add
add
cmc
imul
stos
add
test
push
push
fiadds
mov
lea
pop
mov
push
push
push
or
not
add
dec
lea
shr
sub
shl
pop
not
dec
shr
pop
push
add
pop
pushl
push
ror
inc
sub
pop
call
push
push
push
push
call
add
add
add
mov
add
xchg
popl
sti
add
add
mov
not
mov
xchg
add
push
jecxz
add
cli
fiadds
movsb
mov
add
incb
add
mov
stos
mov
add
cli
add
pushf
add
add
add
adcb
mov
lock
add
subb
arpl
pop
push
call
push
push
push
and
add
xor
inc
sub
not
add
pop
ror
add
shl
pop
push
push
call
test
add
add
xchg
add
add
jle
sti
add
xchg
popa
cmpsl
push
imul
jo
add
add
fadd
add
movsb
push
pushf
add
into
pop
nop
imul
add
jae
add
jp
add
into
nop
shll
int3
lea
pop
pushl
call
push
push
push
push
push
push
push
call
xchg
add
push
rolb
add
push
fiaddl
cmpsl
fnstenv
push
add
add
addb
push
fdivrp
lahf
rorb
testb
pop
rolb
sahf
xlat
add
xchg
lahf
add
mov
add
pop
add
add
add
pop
rorl
pop
push
push
rol
rol
rol
pop
pushl
push
push
push
push
push
call
add
mov
add
pop
incb
add
push
xlat
add
pop
je
add
fcomp
mov
add
mov
pop
ret
fs
jne
add
pushf
lcall
add
hlt
lea
pop
call
push
push
rol
push
push
pop
add
xor
shr
sub
sub
pop
sub
pop
push
push
push
call
pop
pop
jno
add
out
jns
add
lret
add
mov
shl
mov
aad
fdivl
add
push
jnp
faddl
xchg
into
add
xlat
push
call
push
add
add
fimull
pop
pushl
push
push
lea
push
lea
push
call
jge
data16
flds
add
fcmovnu
pop
add
add
lock
add
add
mov
mov
mov
pop
fiaddl
mov
out
movsl
out
les
in
lahf
lcall
mov
test
imulb
push
adc
ficompl
add
jne
add
loopne
not
ror
push
xor
add
lea
inc
inc
sub
add
add
shr
sub
pop
not
xor
pop
push
push
add
not
push
or
inc
add
rol
sub
sub
sub
lea
pop
shl
ror
pop
push
lea
sub
ror
pop
call
push
dec
pop
pop
push
pop
dec
jne
push
xor
sub
lea
pop
call
jmp
push
push
push
push
lea
push
push
push
call
out
mov
xchg
add
cmp
add
addl
mov
fcomps
lret
add
iret
test
fisttpl
sbb
add
add
add
aam
bound
call
push
push
push
and
add
sub
shl
sub
not
sub
pop
shl
add
not
dec
pop
push
lea
push
lea
push
push
push
push
push
call
mov
stos
int3
add
add
add
js
lahf
mov
add
loope
fwait
add
stos
add
push
fnsave
enter
add
popf
cmpsl
mov
mov
xchg
cmc
add
add
add
xchg
jmp
mov
add
loopne
add
mov
lea
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
add
jmp
add
sti
xchg
add
add
out
sar
movsl
jle
add
push
add
fistpll
add
xchg
rcrl
lock
fcomi
lea
add
push
pop
mov
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
push
call
test
xchg
push
push
out
push
xchg
in
add
std
add
test
fst
popf
fisubs
cltd
in
lahf
mov
xchg
add
jmp
les
add
lret
mov
arpl
add
add
add
add
add
test
enter
aad
push
add
add
mov
lea
pop
push
call
push
push
call
add
pop
mov
add
int
icebp
mov
add
xlat
icebp
jns
outsl
xlat
add
mov
bound
fadds
mov
jns
cmpsl
loope
fistl
add
movsb
add
lret
test
movsl
orl
push
mov
mov
lea
pop
mov
push
sub
shr
ror
pop
lea
push
push
dec
lea
push
push
pop
add
ror
ror
shl
sub
pop
rol
xor
pop
push
sub
pop
pushl
call
push
sub
pop
push
call
push
push
xor
push
and
add
inc
sub
not
pop
add
inc
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
lock
pop
lock
test
add
add
xchg
add
add
add
fs
add
cld
mov
xor
add
loop
popf
add
add
clc
jbe
cld
lea
pop
pushl
push
push
push
push
call
int
jbe
fdivr
ja
ror
xchg
push
add
mov
pop
fildl
lret
scas
jno
data16
add
popf
add
jo
testl
add
stos
out
std
mov
add
mov
push
iret
add
add
sar
add
movsb
mov
les
xchg
sbb
add
rclb
lret
add
inc
cld
push
xor
pop
lea
push
push
xor
add
dec
sub
push
or
not
add
not
sub
shr
add
add
shr
pop
rol
lea
pop
push
push
push
call
ja
add
pop
add
add
ret
lods
jno
pop
incb
pop
add
add
pop
push
pop
add
out
cmc
add
fidivrl
mov
jb
add
stos
imul
jb
ja
addl
add
add
lahf
fs
xchg
pop
int
lret
popa
test
cli
add
add
pop
add
mov
lea
pop
pushl
call
push
push
push
push
push
call
lahf
push
add
scas
add
pop
add
flds
mov
xchg
mov
add
mov
pop
add
sbb
add
lahf
gs
add
jns
add
loop
add
add
add
cmpsl
mov
xchg
add
push
sahf
mov
add
push
add
mov
mov
lea
pop
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
mov
into
hlt
add
cld
test
repnz
add
mov
je
mov
mov
push
repnz
int3
mov
js
loopne
add
cmpl
add
add
lock
add
mov
add
ljmp
push
push
pop
push
push
lea
push
push
push
push
push
push
push
push
call
out
test
add
push
lock
mov
roll
movsb
leave
fsubrs
pop
fnstsw
add
push
out
pop
cmpsb
pop
mov
lds
add
mov
push
xchg
add
add
andl
nop
pop
jno
add
fiadds
xchg
jne
rcr
add
mov
xchg
push
fs
lea
pop
push
push
push
call
mov
jo
in
lods
les
push
add
fildl
ja
jge
in
xchg
popl
add
sahf
stos
sti
add
lds
jae
out
cmc
jnp
xchg
pop
stos
add
pop
push
lea
aam
cwtl
add
cld
add
aam
test
add
xchg
mov
add
pop
jp
xchg
mov
mov
mov
pop
add
jp
in
test
or
jne
push
push
shr
not
push
or
not
add
xor
sub
dec
add
sub
add
dec
add
lea
pop
shr
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
addb
jmp
stc
cltd
push
int
sahf
filds
in
add
add
add
add
mov
fsin
xchg
mov
add
lahf
add
addr16
add
out
hlt
lea
pop
push
call
push
push
shl
dec
push
sub
add
dec
sub
xor
sub
lea
not
pop
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
into
jo
idivb
add
add
jecxz
pushf
push
add
add
add
pop
mov
add
je
cmc
add
out
movsl
ljmp
mov
sub
jne
push
lea
push
push
push
lea
push
push
push
push
call
lods
fistpl
cmpsb
mov
add
add
mov
repnz
in
addl
add
mov
enter
loopne
add
nop
cli
loop
add
add
je
add
add
pop
add
add
add
fadds
add
mov
add
testb
aad
add
push
add
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
movsb
scas
faddl
cmc
fcoms
add
andb
out
leave
mov
add
scas
pop
mov
sti
fisubrs
clc
test
mov
add
mov
add
popf
add
stc
mov
iret
add
mov
xchg
data16
arpl
push
push
push
push
push
push
lea
push
call
out
scas
add
add
add
cmc
add
jae
mov
aad
jbe
into
jo
push
lea
in
xchg
movsl
add
loopne
mov
add
js
add
out
cld
lea
pop
call
push
push
push
and
add
rol
shl
sub
rol
not
rol
pop
sub
xor
xor
xor
pop
push
push
lea
push
lea
push
push
call
add
mov
out
jno
add
push
mov
adcb
lret
add
int3
test
stc
add
hlt
add
ljmp
into
add
mov
lea
pop
pushl
push
pop
call
call
push
push
push
call
push
push
imul
mov
add
jo
add
add
xchg
jb
aad
jecxz
addl
fwait
add
push
imul
loop
in
lret
ljmp
arpl
data16
jmp
pushl
push
add
xor
shr
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
add
jbe
lahf
in
mov
scas
add
add
xchg
repnz
add
fidivrs
jne
scas
add
add
add
iret
out
movsl
aam
cld
popl
add
mov
lea
pop
jmp
push
push
sub
push
or
inc
add
add
xor
xor
sub
lea
sub
lea
pop
lea
lea
pop
push
add
inc
add
pop
pushl
push
push
push
push
push
push
push
call
roll
add
lret
add
add
xchg
add
movsl
pop
out
lock
add
add
movsl
les
add
jns
add
mov
clc
add
lret
movsl
insb
out
jcxz
int
test
jae
cld
lea
pop
call
push
push
call
add
loop
roll
pop
add
ljmp
add
mov
idiv
fmull
add
add
lods
pop
add
scas
add
in
add
xchg
mov
fldl
in
jo
add
jecxz
out
adcb
pop
int
add
add
jmp
pusha
or
add
shrb
lods
rcl
push
lea
sub
xor
push
xor
add
sub
shl
pop
not
pop
push
not
dec
rol
pop
pushl
push
add
dec
pop
call
push
push
rol
sub
add
pop
call
push
push
push
lea
push
push
push
call
test
lret
mov
fiadds
ficoml
add
movb
add
mov
add
mov
xchg
add
lock
add
mov
mov
xlat
movsl
testb
add
jmp
add
in
lret
add
mov
lea
pop
leave
push
push
lea
push
call
in
add
add
cwtl
add
subl
add
add
add
rcr
xchg
pop
out
jae
add
push
fwait
add
pop
testl
add
clc
add
ret
add
add
test
mov
lret
add
add
add
aam
mov
popf
in
movsb
pop
rorl
pop
add
push
lea
push
push
call
xlat
add
testb
movsl
push
fdivl
jbe
add
add
jo
addb
loopne
xorb
lock
add
lock
add
xchg
mov
mov
data16
pop
push
lea
push
lea
push
push
lea
push
push
call
leave
addb
fdivs
add
add
fmuls
mov
add
add
add
add
add
movsb
push
mov
add
negl
into
stos
test
pop
idiv
imul
js
call
aam
bound
pop
pop
push
ror
pop
pop
push
not
rol
not
pop
pop
push
shl
xor
add
pop
leave
push
sub
pop
add
ret
push
lea
not
sub
pop
leave
push
push
push
push
push
push
push
lea
push
call
add
sahf
in
leave
add
add
add
push
outsl
aad
jmp
cmc
cmc
rcl
loop
mov
in
mov
ja
pop
add
add
add
add
add
test
add
mov
in
rcrb
add
mov
jl
test
add
add
cld
push
add
add
test
in
jmp
and
or
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
outsl
stc
loope
frstor
add
jb
faddl
jecxz
push
add
jnp
pop
roll
fildl
lock
ret
add
mov
scas
sahf
lea
movsb
add
add
ret
add
ret
jne
incb
mov
into
jle
add
iret
mov
int
sti
mov
loopne
out
lea
add
lcall
lea
pop
push
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
ret
mov
in
xchg
gs
sar
out
hlt
push
add
jge
jp
lret
cltd
test
add
add
add
jp
push
add
push
js
xchg
jmp
jge
fistpl
add
add
test
xchg
pop
loop
pop
test
add
js
xlat
filds
add
lcall
in
mov
lea
pop
cmpl
jne
push
xor
inc
pop
mov
push
dec
inc
pop
jmp
push
sub
sub
pop
mov
and
push
not
rol
sub
sub
pop
xor
xor
push
push
lea
push
push
lea
push
push
push
call
push
add
add
int3
fiaddl
jb
testb
add
imul
add
imul
fimuls
mov
testl
add
add
les
rolb
push
call
add
jecxz
int3
xchg
fwait
sahf
addb
out
lds
lock
xchg
mov
sahf
add
cld
jecxz
scas
int3
mov
lock
push
iret
mov
les
movsl
jae
add
leave
popa
roll
add
mov
xchg
add
les
dec
decl
push
push
push
lea
push
push
push
push
call
test
mov
addl
xchg
iret
repnz
bound
stc
data16
into
out
std
test
pop
leave
add
popf
add
call
add
in
mov
add
cwtl
loope
xchg
jp
add
add
sarb
add
mov
mov
add
ret
add
shrb
add
stos
add
mov
lea
pop
sub
push
dec
pop
jmp
sub
push
push
push
push
push
call
repnz
add
jns
add
add
mov
cmpsl
out
add
lret
mov
out
add
mov
call
cmc
pushf
roll
int
add
lods
xchg
add
test
data16
ljmp
mov
lea
pop
pushl
push
add
add
xor
pop
pop
sub
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
pusha
addl
add
add
stos
add
scas
sar
add
les
mov
push
cmpsb
pop
jnp
imul
icebp
je
add
add
in
mov
mov
sti
add
push
push
add
out
add
pop
cmp
jne
push
sub
dec
pop
mov
push
sub
pop
lea
sub
push
not
add
pop
mov
shr
push
push
lea
push
push
push
call
out
jno
nop
addr16
fcompl
adc
sti
sti
int3
add
add
cmc
test
push
push
push
add
lcall
add
add
add
lret
jge
fldl
add
add
jle
xor
into
mov
andl
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
rol
xlat
fistl
xchg
lahf
xchg
out
pop
shlb
movsl
into
add
push
xchg
add
cmpsb
jo
test
xchg
add
jae
mov
outsl
add
fists
sahf
mov
int3
out
add
sti
mov
pop
sub
push
not
sub
add
pop
pushl
push
shr
pop
pop
shr
push
xor
sub
pop
and
sub
push
rol
xor
pop
cmp
jne
push
add
add
pop
leave
push
push
push
call
cmpsl
mov
add
lcall
add
add
popa
jle
add
add
add
add
jl
jno
add
add
fwait
add
xchg
fiadds
pop
pop
push
lahf
jecxz
xchg
fiadds
push
add
pusha
loope
rolb
lret
sti
add
out
add
add
jl
add
add
data16
xchg
add
add
pop
scas
add
orl
push
xor
pop
push
push
sub
rol
shl
pop
mov
push
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
jp
add
add
add
add
movsb
leave
in
push
add
add
loop
push
mov
insb
xchg
movsb
push
xchg
jmp
add
lea
pop
push
push
push
shl
not
pop
push
push
shl
add
pop
push
mov
push
shr
add
lea
pop
lea
push
push
push
push
push
call
pop
out
fiadds
xchg
stos
les
add
lds
add
add
xchg
mov
add
add
stos
add
mov
pop
pop
mov
xlat
push
add
mov
mov
lea
pop
sub
mov
push
push
push
push
call
lret
in
xchg
add
mov
mov
add
mov
lds
push
subl
add
in
add
add
add
jb
add
fwait
xchg
pop
add
out
mov
add
arpl
add
add
jecxz
enter
push
popf
add
stc
add
movl
cli
xchg
clc
fmuls
pop
shr
add
push
push
push
push
lea
push
push
push
call
add
bound
add
nop
aam
jbe
push
push
add
aad
lret
adc
pop
add
leave
add
lock
add
gs
fildll
xorl
push
sbb
mov
push
xor
pop
add
push
inc
add
pop
mov
push
dec
rol
pop
add
push
push
push
push
lea
push
lea
push
call
add
add
call
push
add
add
push
mov
rolb
jo
std
pusha
add
fucomip
add
add
add
add
testb
add
stc
test
add
std
mov
lds
add
lds
fadds
cmc
ja
add
mov
cmpsl
mov
pop
xor
push
add
inc
sub
pop
mov
push
add
add
pop
and
push
push
push
push
push
push
push
push
call
data16
add
add
scas
ja
xchg
mov
add
push
pop
xchg
subl
rolb
add
add
lcall
xchg
js
xlat
add
add
ret
jle
stc
shll
xchg
push
mov
add
stos
add
les
rolb
cltd
cmpsl
dec
jle
push
push
push
push
push
lea
push
push
call
fsubr
mov
push
shrl
int3
add
loop
sarb
popf
lds
cli
fsub
jnp
add
faddl
mov
add
popl
pop
push
in
lcall
add
push
mov
add
add
add
fiadds
pop
add
pop
xor
push
lea
push
lea
push
lea
push
push
call
add
fisubs
cli
add
mov
add
add
roll
out
mov
shl
add
add
add
roll
fsubs
mov
cld
add
stos
xchg
xchg
add
add
add
nop
mov
mov
add
stos
je
add
std
mov
mov
mov
jge
add
movsl
nop
add
add
push
imul
pop
inc
cmpb
jne
push
push
push
push
push
push
call
add
fwait
js
xchg
add
pushf
add
add
mov
jae
loopne
mov
add
in
mov
jp
xchg
icebp
in
icebp
add
jge
int3
pop
ret
add
gs
add
mov
idivb
pushf
add
aad
imul
outsl
push
mov
insb
stc
add
mov
cmc
mov
lea
pop
add
push
sub
sub
shl
pop
cmp
je
push
inc
dec
pop
add
push
shr
pop
cmpl
jne
push
push
push
push
push
push
call
add
jle
popa
lock
mov
add
popa
testl
add
js
add
jecxz
mov
add
sahf
mov
add
add
ja
out
add
add
xchg
add
pushf
idiv
mov
add
pop
rolb
mov
scas
mov
mov
push
add
pop
add
ret
jno
add
pop
xor
push
push
call
cli
add
add
add
enter
pop
add
in
add
ja
mov
cld
mov
movsb
rcll
add
mov
add
enter
xchg
les
mov
out
mov
out
repnz
add
orb
pop
pop
push
ror
lea
add
pop
pop
pop
push
lea
push
lea
push
push
push
call
mov
push
xchg
add
rcr
lock
jmp
push
add
jecxz
aam
add
add
add
bound
pop
stc
add
add
test
roll
movsb
add
cltd
ja
lea
add
std
jnp
mov
out
add
mov
add
add
add
lea
pop
pop
push
shr
add
shl
shr
pop
leave
push
inc
pop
ret
push
add
sub
lea
pop
mov
push
xor
shl
not
pop
add
push
lea
sub
add
pop
push
push
not
dec
add
not
pop
push
push
rol
not
rol
dec
pop
add
xor
push
shr
xor
pop
add
push
sub
add
shr
shl
pop
add
pop
push
dec
shr
sub
pop
pop
push
pop
mov
push
rol
xor
pop
push
push
add
sub
sub
pop
call
push
push
push
lea
push
call
cmpsl
popf
pop
scas
add
stos
jle
mov
sbb
add
stos
lret
pusha
add
loope
rolb
push
push
add
add
fs
pop
fs
loop
lock
in
add
lea
pop
xor
pop
push
lea
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
jbe
popa
stos
xchg
pushf
cli
jle
add
movb
xchg
add
pop
add
add
xchg
nop
add
iret
add
cmpsl
nop
jl
iret
mov
lea
pop
pop
push
push
call
mov
add
pusha
add
roll
add
hlt
add
add
movl
add
loope
iret
add
add
loop
ret
add
shll
push
push
aam
add
imul
lret
add
in
add
or
pop
push
not
pop
leave
push
rol
pop
ret
push
push
xor
lea
ror
pop
mov
add
push
xor
add
pop
push
push
push
push
push
lea
push
push
call
cld
sti
add
out
add
imul
popl
add
cmc
cwtl
lahf
push
jle
xchg
xchg
rolb
std
xchg
add
add
add
mov
mov
arpl
mov
add
add
pop
push
push
pop
push
mov
push
pop
push
push
sub
add
dec
dec
pop
pop
push
lea
add
add
pop
lea
push
push
lea
push
call
push
fildl
mov
jmp
add
add
test
jecxz
xlat
imull
add
mov
mov
jl
add
add
lcall
stc
hlt
push
add
jae
pop
add
add
add
add
add
add
add
mov
movl
scas
int
add
add
cld
add
xchg
mov
mov
add
stos
add
pop
add
mov
cld
lea
pop
sub
push
lea
push
lea
push
push
push
push
push
push
call
add
lcall
add
lods
add
addl
mov
filds
add
adcb
pop
add
addb
add
push
gs
lods
jno
mov
jbe
mov
add
pushf
add
cwtl
cltd
sti
xchg
jo
lock
add
pop
mov
push
add
shl
sub
pop
shr
push
not
sub
pop
add
mov
push
shl
pop
add
push
add
inc
add
pop
pushl
popl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
popf
ffree
andl
cwtl
mov
add
add
out
jbe
add
add
push
add
jb
mov
add
push
imul
loop
add
fs
out
lods
add
add
ljmp
mov
lea
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
lea
push
call
fwait
jno
roll
jecxz
mov
add
lea
jge
jne
add
jnp
add
cmp
clc
pop
add
sti
lret
xchg
fcmove
add
pop
xchg
add
add
add
xchg
mov
mov
data16
notb
je
adc
cmp
add
shr
mov
aad
add
add
pop
enter
xlat
roll
cwtl
add
xchg
pop
push
lods
jecxz
addr16
popf
jne
xchg
add
xchg
mov
lea
pop
lea
push
shr
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
jge
rolb
mov
add
je
addr16
arpl
mov
cwtl
add
sti
test
clc
pop
ffree
add
add
add
add
in
add
add
scas
cmpsl
add
ret
lret
mov
cld
add
stc
add
test
xchg
add
add
fdivr
mov
jl
ljmp
jmp
add
xorl
nop
mov
lea
pop
add
xor
push
ror
xor
add
pop
rol
push
shr
shr
pop
nop
push
lea
push
push
push
push
push
lea
push
call
sahf
fildl
add
add
add
add
mov
nop
mov
lock
cwtl
aam
add
or
add
add
add
mov
rolb
nop
add
add
add
jmp
mov
push
add
add
add
add
add
add
xchg
movsb
xchg
pop
add
popa
jb
add
mov
lea
pop
nop
push
add
sub
not
not
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
movl
filds
outsl
jnp
les
add
add
mov
add
roll
xchg
xlat
pop
add
test
add
data16
add
add
cwtl
jo
add
movsl
ret
push
pop
mov
add
mov
lret
push
imul
xchg
add
pop
mov
cld
lea
pop
nop
push
not
pop
nop
push
push
push
push
push
call
push
pop
jmp
in
add
add
ljmp
jp
add
fadds
mov
roll
add
scas
add
nop
hlt
cmpsl
je
add
in
loope
sbb
add
cmpsl
push
jo
xchg
arpl
add
mov
lea
pop
inc
nop
push
inc
pop
nop
push
push
push
push
lea
push
call
xchg
add
add
sahf
stos
add
clc
stos
jge
loop
pop
jne
lcall
add
add
add
test
mull
lods
lret
pop
add
jnp
outsl
faddl
add
cwtl
push
mov
hlt
push
add
sahf
out
mov
lea
pop
cmpb
jne
add
push
inc
sub
pop
nop
nop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
hlt
add
add
int
rorl
in
rcr
add
xchg
cmpsl
roll
js
add
ljmp
fistpl
add
movb
push
fwait
add
add
add
sahf
mov
pop
cmp
je
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
roll
add
imul
add
xchg
movsb
add
push
add
add
rcl
xchg
add
rolb
lods
xchg
add
pop
test
adc
leave
mov
pusha
lods
push
mov
insb
push
fs
out
roll
roll
add
add
sahf
std
ljmp
jle
ret
sarb
int3
lea
pop
nop
push
inc
not
xor
pop
nop
inc
push
lea
push
call
xchg
add
add
add
push
add
cld
lahf
jae
lods
movsl
push
add
mov
jne
subl
fadds
lods
js
pushf
add
push
add
xchg
jno
add
add
jb
add
hlt
lea
pop
nop
push
lea
push
push
push
push
lea
push
call
push
add
fstpl
add
lock
mov
sti
add
addb
push
in
add
nop
mov
popa
add
add
in
stos
mov
loope
add
cmc
mov
add
xchg
jno
add
add
add
iret
aad
jbe
jb
jbe
jne
add
xchg
add
repnz
add
pop
nop
push
push
lea
push
push
push
push
call
add
scas
mov
outsl
pop
cmpsl
sarb
add
ljmp
lcall
xchg
fs
add
mov
iret
stos
jle
inc
fistpl
pusha
sbb
jne
jb
push
shl
xor
sub
pop
xor
jmp
push
push
push
push
push
push
call
mov
in
mov
add
push
int3
add
lock
js
stos
add
add
mov
aam
add
add
add
add
in
add
pop
cld
xchg
add
xchg
push
add
add
negb
add
add
fisubs
add
add
lods
fmull
pop
mov
add
push
lea
push
call
add
push
lahf
mov
add
lahf
add
roll
rcrl
add
lcall
add
lods
mov
js
push
cmpsb
add
enter
cltd
sti
insb
add
add
mov
sti
lret
scas
cltd
jo
in
sahf
bnd
fs
shll
popa
or
mov
jb
xor
pop
mov
push
sub
rol
pop
add
push
rol
dec
shr
pop
mov
push
lea
push
push
push
lea
push
call
mov
add
add
addb
add
xchg
jbe
add
mov
jae
icebp
mov
add
push
jne
add
out
add
out
add
push
arpl
add
add
pop
xor
push
lea
rol
rol
pop
xor
push
push
lea
push
lea
push
push
push
push
call
jo
jge
xchg
cmpsb
push
pop
cltd
cmc
add
add
xchg
xlat
jnp
add
leave
xchg
in
jl
add
add
add
add
add
add
addl
add
popa
mov
add
jb
mov
fidivrs
add
add
add
mov
pop
add
test
pop
shl
push
ror
shr
shl
pop
xor
shl
push
lea
push
push
push
lea
push
push
lea
push
push
call
movsl
mov
mov
fsubr
mov
cli
jge
push
add
add
add
add
cmpsl
add
subb
add
popa
movb
jo
push
rcr
stc
add
jl
add
out
mov
add
add
jns
mov
pop
xchg
add
lret
test
add
sarb
lds
lea
filds
popa
fistpl
add
and
dec
nop
add
sbb
loope
xor
push
dec
dec
pop
mov
push
pop
add
pop
push
shl
shl
pop
pop
pop
push
rol
pop
pop
leave
push
push
push
call
pop
mov
movsl
add
add
add
add
jp
jl
add
add
add
add
jecxz
add
add
cmpsl
fiadds
mov
push
fwait
add
add
add
testl
nop
add
nop
loop
add
mov
lea
pop
ret
push
push
shl
pop
mov
push
lea
push
push
push
push
push
call
add
add
gs
rorb
in
add
jns
arpl
ffreep
rcr
push
fiadds
in
add
in
add
push
add
popa
jno
add
cwtl
scas
push
add
add
add
add
add
add
add
hlt
lea
pop
push
push
add
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
push
cld
arpl
pop
add
shll
les
leave
fldl
arpl
add
popf
add
add
pop
jmp
lahf
jp
add
cli
scas
push
out
in
shl
mov
cwtl
pop
add
add
lods
mov
lea
pop
push
push
push
push
push
push
push
push
call
add
add
add
pop
mov
push
hlt
lds
jno
cli
les
out
add
add
addb
xchg
loop
out
out
loop
add
flds
mov
add
ljmp
shll
sbbl
lds
xchg
fsts
jo
push
addl
les
push
push
push
push
push
call
jle
add
mov
add
mov
jo
mov
fidivl
add
add
add
xchg
clc
clc
sahf
out
xchg
add
scas
cltd
pop
in
sbbl
add
addr16
movl
sbbb
mov
movsl
add
add
cmc
add
aad
add
add
int
mov
mov
lea
pop
mov
push
xor
inc
shr
xor
pop
mov
mov
push
add
add
pop
test
je
push
pop
mov
test
je
push
push
push
push
lea
push
push
push
call
add
mov
xchg
add
add
add
nop
add
stos
iret
sbbl
lods
addr16
jo
add
filds
add
lea
in
add
add
add
aad
add
push
cmc
fwait
sti
pusha
ret
jno
mov
xchg
icebp
add
jmp
add
movl
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
push
mov
add
std
add
gs
add
mov
add
lods
jge
rcr
sbbb
add
mov
scas
add
add
add
jmp
shll
mov
rolb
loope
xchg
icebp
popf
out
pop
push
add
push
lods
out
add
jnp
loope
add
and
dec
or
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
lds
add
add
test
add
lahf
add
add
add
out
loope
push
push
lret
andl
in
add
add
pop
leave
mov
mov
mov
arpl
mov
inc
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
jle
popf
pop
js
nop
xchg
pusha
arpl
pop
add
add
stc
mov
shrl
mov
add
test
xchg
enter
fnsave
gs
mov
pop
cmp
je
push
lea
push
push
call
add
add
add
add
call
push
lret
add
add
add
add
jmp
add
loope
jns
imul
fs
add
jae
mov
lods
add
lea
pop
test
je
push
push
lea
push
lea
push
call
add
cli
add
add
mov
insb
xchg
add
add
add
xchg
add
stos
add
add
add
lds
jns
incb
rcrb
add
fnstsw
outsl
add
add
into
add
pop
add
imul
pusha
adc
push
inc
push
xor
shl
pop
cmp
je
push
sub
sub
shl
pop
test
jne
xor
push
push
push
push
push
push
call
pop
add
add
jnp
add
mov
popa
test
add
push
cmc
add
ficoml
test
add
call
sbbl
jle
add
sti
add
add
movsl
imul
fistpl
popa
add
mov
mov
add
mov
movsl
add
add
push
pop
mov
lea
pop
pop
pop
push
ror
inc
pop
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
jo
add
add
push
or
pop
add
mov
xchg
iret
mov
mov
xchg
fcmovnbe
add
mov
sahf
lret
lret
jbe
jb
add
mov
mov
bound
lret
mov
add
mov
add
cwtl
ret
add
aad
push
lret
add
mov
lea
pop
leave
push
pop
ret
push
xor
pop
mov
inc
push
rol
ror
pop
cmp
jne
push
shr
shr
pop
lea
push
push
lea
push
push
push
push
push
call
xchg
je
add
mov
movsl
outsl
les
loope
jp
fstl
add
repnz
lret
add
jmp
les
fdivrs
pop
add
cmc
outsl
jb
add
sahf
mov
add
fs
jbe
jmp
add
imul
add
mov
std
add
add
pop
mov
push
ror
add
pop
test
je
mov
push
add
xor
pop
add
cmp
jne
push
dec
pop
mov
test
je
push
push
lea
push
push
push
lea
push
call
jb
ret
int
add
popa
fadds
loopne
add
repnz
mov
leave
add
add
ret
add
add
add
add
add
mov
add
jle
jnp
cmpsb
mov
jbe
testb
add
add
push
add
repnz
add
arpl
loope
scas
orl
int3
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
xchg
mov
lret
test
add
add
add
add
cld
add
mov
pop
in
add
mov
xchg
movb
add
add
add
xlat
xchg
jl
add
rcrb
add
mov
add
lret
in
push
xchg
mov
lea
pop
add
push
add
shr
pop
cmp
je
push
add
inc
rol
pop
jmp
push
add
shl
sub
pop
xor
pop
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
cmpb
pop
pop
pop
add
std
int3
add
lods
add
scas
stos
ret
add
iret
xlat
popl
neg
lea
pop
shrl
xlat
add
leave
pop
pop
add
add
add
xchg
add
cltd
add
sarl
js
pop
add
divl
popa
and
pop
pop
push
xor
shl
inc
pop
pop
push
push
lea
push
call
shll
xchg
mov
xlat
popf
cmc
scas
out
pop
add
jb
cmpsb
mov
add
pop
in
cmc
fistl
mov
fildl
mov
add
mov
aad
push
add
andb
js
xchg
add
add
add
or
leave
push
lea
push
push
push
lea
push
push
call
clc
addl
in
add
addb
add
jbe
add
scas
pop
jb
add
lock
add
add
into
mov
push
add
mov
sbb
or
push
shl
shr
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
call
jp
fnstcw
mov
cwtl
fwait
add
add
jge
add
add
movsl
add
outsl
ja
stc
add
add
add
add
add
add
mov
mov
lea
pop
pop
pop
push
shl
inc
inc
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
js
pop
add
popa
fs
fwait
push
mov
icebp
roll
add
add
add
imul
add
push
add
cwtl
mov
mov
lea
cmpsb
repnz
jb
ror
add
add
add
fwait
mov
lock
add
push
cld
fimull
pop
leave
ret
push
push
push
push
lea
push
call
mov
add
mov
mov
movb
add
fisubl
add
add
pop
add
fsubl
add
popf
imul
jecxz
add
stc
add
mov
lea
pop
mov
push
add
inc
pop
pop
push
push
push
lea
push
push
lea
push
push
call
movsb
add
fwait
add
arpl
add
add
notl
test
enter
add
add
test
jp
add
data16
add
add
mull
ret
mov
je
push
jp
xchg
add
mov
mov
stc
add
add
mov
add
js
lods
data16
mov
lea
pop
pop
pop
push
lea
push
call
add
ret
lods
add
mov
test
out
add
mov
stos
add
jnp
add
lods
add
fdivrl
in
push
add
add
add
rolb
add
jbe
jae
pop
add
lret
add
pop
pop
leave
push
not
pop
ret
xchg
xor
xchg
loope
imul
loope
imul
dec
je
cmp
je
xchg
xor
xlat
jne
idivb
pop
cmp
adc
iret
pop
add
push
stc
xor
fs
mov
or
push
mov
mov
pop
xor
fdivl
sti
fwait
rorl
repz
mov
aad
xchg
xchg
incl
sub
push
sub
cmp
hlt
mov
testb
gs
stos
push
movsl
mov
mov
lods
iret
ja
jg
or
jnp
mov
sub
inc
xchg
cli
push
movsb
dec
jno
pop
xchg
data16
or
aaa
pop
hlt
or
adc
adc
imul
aaa
cmp
sub
add
mov
pop
les
in
sub
sbb
sbb
xchg
cmpsl
es
sbb
add
sbb
mov
mov
sub
adc
xor
add
lret
pusha
in
pop
sub
leave
add
push
gs
ffreep
or
movsl
shll
movsb
insl
mov
and
pushf
ds
xor
leave
pop
leave
push
mov
std
sbb
dec
mov
mov
test
xchg
adcl
sbb
jae
jbe
lds
pop
cmp
mov
fs
dec
mov
mov
adc
cmpsb
dec
jno
adc
jne
adc
xlat
push
fwait
jns
loop
cmp
pushf
xchg
jp
adc
lret
into
mov
aaa
push
inc
mov
dec
mov
xchg
inc
in
in
add
and
inc
or
xchg
aas
es
inc
lods
mov
xor
out
divl
loope
outsl
cwtl
addr16
lods
push
jp
je
mov
fistps
cmp
add
in
cs
mov
and
inc
movsl
out
mov
sbb
add
stos
pop
cltd
jne
rcpps
sub
adc
cld
xchg
sub
fisttpll
ja
aas
divb
ss
out
push
cli
mov
dec
mov
mov
aad
lcall
leave
mov
dec
lret
and
inc
imul
adc
lods
pop
nop
mov
push
adc
mov
scas
jmp
mov
sbb
test
cmp
pop
aas
test
loop
sub
jne
ss
inc
arpl
out
outsb
adc
sub
xor
mov
inc
add
jne
pop
mov
pop
xor
cmpsb
js
es
cmp
mov
mov
or
es
cmp
jae
lret
in
imul
xchg
fidivs
cmp
pop
mov
adc
or
push
mov
mov
sarl
lcall
cmpsl
and
jmp
sbb
adc
test
mov
movb
sbb
lcall
pop
add
inc
jnp
fbstp
mov
xor
inc
mov
pop
sub
jp
dec
mov
sub
jl,pn
lret
out
hlt
sarb
andb
push
cmpsb
fisubl
mov
and
mov
xchg
mov
les
aad
enter
clc
and
mov
mov
inc
cmp
leave
sub
mov
adc
mov
movsl
int
cwtl
xchg
rorl
xlat
ficompl
pushf
sub
jo
jecxz
mov
test
adc
fxch
xor
mov
int3
popf
mov
std
adc
cmp
loopne
mov
iret
push
jb
mov
jb
jmp
popf
adc
in
xor
dec
fwait
inc
push
in
or
cmc
push
dec
orb
add
adc
dec
lock
insl
test
enter
jl
mov
in
cld
divb
cltd
jb
mov
test
movb
dec
mov
and
add
repz
fcmove
sub
jge
sbb
adc
and
fisubl
cmpsb
push
or
add
mov
add
push
and
adc
add
sbb
pop
cmpsb
push
dec
iret
cmc
inc
lret
inc
mov
aam
sbb
sti
dec
stos
jge
imul
rcrb
ljmp
rorl
addr16
jnp
pop
cmc
jge
xchg
xlat
push
je
push
gs
test
shll
push
shlb
sbb
in
add
ficompl
lret
cmp
dec
cs
jnp
add
es
cmp
test
xchg
mov
pop
shlb
cmc
mov
jge
out
push
sbb
mov
mov
cmp
pop
jo
call
mov
cli
pop
jecxz
inc
jecxz
sub
xor
cmc
int3
lods
pop
aas
addr16
cs
packssdw
ds
loope
sbbl
negb
and
xor
lods
or
mov
hlt
add
jp
adc
add
call
xor
ficoms
sbb
in
jp
and
cwtl
jp
jp
iret
cs
pop
fwait
dec
shrb
mov
in
pop
jo
mov
lahf
cld
lds
addr16
mov
xlat
push
mov
ret
inc
add
lahf
xor
ljmp
or
in
adc
outsb
jno
xor
mov
fnstsw
test
icebp
cs
sbb
ds
mov
sti
lds
mov
hlt
push
push
xor
jp
push
sti
mov
or
test
push
int
push
jp
mov
int3
dec
jae
lret
ljmp
xchg
testl
adc
movsb
popa
xor
fmulp
or
add
add
divl
ret
xchg
leave
aad
test
in
das
push
inc
jmp
dec
dec
enter
rolb
cmp
xchg
or
push
mov
fimull
inc
jb
movsb
jne
jl
repnz
xchg
lods
lahf
gs
into
xor
mov
push
lret
jl
xor
push
emms
sub
imul
sti
orl
dec
lock
jns
cld
js
jg
pop
push
mov
sub
inc
mov
lret
jae
repnz
cmp
xchg
fistps
inc
hlt
xchg
cmp
shrb
push
fists
push
enter
cmp
fildl
xchg
daa
sbb
lods
lcall
or
jo
mov
notb
leave
jl
xrelease
leave
mov
jl
adc
pop
jne
es
imul
inc
jb
sbb
mov
pop
push
push
pusha
push
inc
sub
cmp
outsl
mov
push
in
cmp
cli
xchg
inc
jae
sarl
or
popf
inc
inc
or
imul
and
inc
jo
jp
aaa
enter
dec
sbb
push
outsl
fbld
pushl
xchg
dec
jb
xor
fs
jne
pop
cmp
stos
and
shrl
pop
push
fs
fnstsw
in
adc
setns
mov
cli
push
mov
popl
bnd
pop
mov
sahf
pop
ret
sahf
xchg
ja
sbb
pusha
push
mov
mov
lret
scas
das
daa
iret
xor
xchg
add
jo
in
or
jmp
sub
or
sub
popa
test
mov
out
lods
push
or
lods
xchg
popa
adc
push
pop
sub
xchg
int
es
cmp
jno
add
xchg
sub
jne
cld
pop
mov
jb
push
je
sub
andl
cltd
hlt
mov
add
sbb
jmp
out
push
stc
neg
sub
in
mov
or
out
sub
movsb
gs
jmp
and
xor
jb
hlt
xchg
rcrl
fadd
jne
imul
ret
bound
leave
add
inc
jns
jnp
push
pop
inc
sub
add
mov
jbe
or
mov
imull
mov
sbb
nop
cmpsb
nop
in
inc
mov
cmp
mov
jbe
dec
mov
mov
or
push
adc
flds
fcoms
xchg
int
lea
cmpsl
fcmovnbe
push
cmp
or
mov
jne
movsl
add
inc
mov
xchg
loopne
fists
stc
ja
push
int3
out
cmpsb
imul
adc
addl
mov
hlt
mov
sub
mov
repnz
call
push
sub
sub
movsl
icebp
pop
fdivs
fnstsw
mov
cmp
imul
ja
mov
or
jb
fildl
jl
iret
dec
xchg
aam
sbb
dec
sbb
xor
dec
icebp
mov
mov
inc
enter
dec
pop
fwait
inc
in
fidivrs
fdivs
jp
aas
dec
or
push
jae
jbe
or
lods
add
notb
popa
mov
aam
mov
fstl
movsl
inc
outsb
inc
jbe
inc
jns
mov
dec
call
inc
lret
in
scas
stos
cmpsb
xchg
iret
push
fcompl
stos
addb
fmuls
inc
sbb
adc
cmc
add
into
sbb
and
lret
sub
mov
and
lcall
jbe
orl
cmpsl
sbb
fnstcw
sub
cmp
pop
mov
out
add
fimull
lds
add
dec
popa
fs
ret
dec
cld
pop
push
xchg
and
addl
xchg
sbb
es
add
ds
xorl
jno
imul
push
mov
lret
inc
mov
in
mov
or
testl
sbb
pop
push
je
imul
leave
mov
outsb
lods
jmp
movsl
cmpsb
icebp
jecxz
xor
bswap
jge
in
jno
jne
lret
xchg
sbb
mov
inc
div
popf
je
sbb
iret
push
in
mov
push
sub
sub
mov
into
or
popa
dec
fcomps
jle
int3
hlt
jmp
fnstsw
jb
pop
mov
in
repnz
loop
repz
adc
mov
jge
add
xchg
leave
xchg
jo
punpckhdq
pop
test
icebp
test
jmp
mov
xchg
repnz
and
or
int3
out
xor
aas
push
adc
lcall
xchg
mov
mov
lret
push
mulb
call
xchg
pop
xchg
sbb
aam
inc
mov
rolb
sti
push
push
sbb
lret
push
dec
jmp
inc
xchg
add
add
push
jo
data16
jecxz
xor
xor
sub
cmp
out
adc
cmp
lock
popf
push
std
pop
push
xchg
jle
cmp
cmp
mov
cs
sarb
mov
inc
pop
xor
mov
pop
test
aaa
enter
xchg
js
or
xor
cmp
xor
cwtl
out
loopne
jmp
inc
sub
popa
lds
ret
mov
lret
notb
cs
rcr
jmp
fwait
jecxz
pop
and
out
adcb
dec
lahf
xorl
in
test
mov
fwait
popa
js
xor
sbb
pop
mull
pop
sub
scas
and
repnz
dec
aam
or
jne
push
icebp
int
mov
je
xorl
dec
outsl
jp
mov
std
lcall
stos
je
jg
jle
xchg
nop
xchg
cmp
sub
push
sbb
sub
outsl
lea
xorl
imul
leave
mov
cwtl
jo
fdivs
ret
push
les
or
sbb
add
pop
push
fwait
sbb
jmp
jae
cltd
pushl
cmp
cmpsb
cli
cmp
or
dec
insl
add
mov
data16
pop
bound
mov
lods
out
mov
into
inc
pop
pop
jl
jge
xlat
cmp
inc
lahf
mov
adc
push
lret
in
or
xor
push
cmp
sub
icebp
mov
sbb
add
jg
test
cwtl
sbb
es
dec
fildl
movsl
xlat
or
pop
pop
sub
mov
cmp
pop
add
movsb
repnz
sbb
or
and
sub
stos
ret
stos
mov
wrmsr
in
addb
xor
xchg
ror
scas
mov
movsl
xor
ror
cmp
hlt
sti
sub
in
aam
fwait
icebp
xor
pop
add
cmp
aas
je
pop
mov
dec
push
pop
pop
and
mov
cmp
pop
jg
clc
clc
scas
lea
cmp
inc
mov
add
int
mov
pop
shll
inc
mov
shrb
sbb
lret
pop
rcrl
inc
loope
xchg
add
sti
xor
push
in
inc
insb
pop
fxch
adc
bound
jo
ss
jne
ja
jno
pop
ljmp
adc
lods
ljmp
bound
mov
orb
sbb
in
insb
sbb
inc
adc
movsl
ja
mov
jb
inc
mov
and
insb
xor
xor
adc
xor
push
in
jl
cwtl
cmc
and
pop
movsl
push
mov
sbb
adc
mov
aaa
sbb
ret
out
addr16
inc
adc
cld
sbb
mov
jl
xor
or
cmp
push
push
dec
repnz
cmp
lret
push
lock
xchg
bound
adc
scas
mov
xchg
jl
loope
xor
and
lcall
mov
sahf
fldcw
xchg
cmp
rcr
hlt
mov
xchg
addr16
es
xchg
xor
movl
jmp
fcoml
push
fcompl
cmpsb
lods
sbb
mov
sbb
mov
nop
inc
inc
test
cmp
leave
jnp
fwait
inc
jno
mov
lods
dec
sbbl
mov
arpl
add
enter
cmp
ret
divb
ficoms
test
mov
mov
in
and
push
or
mov
rorl
mov
xor
rolb
push
loope
jae
inc
ja
inc
sub
xchg
inc
sbb
insl
orb
cmp
adc
fcomps
pop
push
arpl
inc
push
inc
insl
cmpsb
mov
cs
jmp
push
out
aam
rcrl
xor
mov
mov
into
test
popa
xchg
xchg
push
xor
dec
mov
xor
imul
fldt
ret
popa
mov
push
fldcw
mov
in
xchg
cmp
lods
dec
rcr
mov
enter
in
int3
mov
xor
xchg
loop
cli
rorb
push
insl
jnp
adc
loope
into
inc
dec
add
stc
sub
aas
out
fwait
aaa
aad
xadd
sahf
xchg
xchg
gs
dec
add
mov
inc
jb
inc
inc
or
push
lcall
pop
gs
mov
pop
pop
stos
gs
jno
fistpll
xchg
pop
repz
cs
push
mov
test
pusha
cli
inc
jb
cmp
lods
mov
lea
and
xchg
adc
outsl
pop
enter
push
aad
mov
popf
repnz
gs
push
js
icebp
out
lret
sbb
gs
pushf
adc
sbb
and
insl
pushf
pushf
fimull
xchg
and
lret
lods
mov
dec
out
clc
dec
loope
pop
push
out
lahf
mov
cs
scas
jns
packssdw
mov
or
cmp
loopne
and
push
jge
shll
inc
nop
jo
je
push
into
fidivl
leave
outsb
in
ret
loop
mov
popf
mov
mov
test
inc
lea
push
test
mov
or
mov
cmpsl
dec
ret
xchg
out
xchg
cmpsb
movsb
insb
pushl
in
aaa
jo
in
sbb
dec
movsb
std
push
out
arpl
cmp
mov
loopne
add
or
add
pop
xchg
ret
lds
out
pushf
xor
fmul
dec
shrb
shlb
xor
shll
pop
inc
dec
outsl
inc
std
roll
pop
mov
insb
pushf
cltd
and
cli
cmp
fs
fadds
xorl
mov
jmp
inc
push
das
es
mov
rclb
sub
adc
outsl
pop
jae
adc
pop
stos
sbb
enter
add
gs
xchg
mov
in
xor
adc
pop
in
mov
push
pop
addb
mov
in
add
ja
ja
pop
push
and
icebp
jne
xchg
stos
inc
dec
inc
fbstp
mov
iret
mov
sbbb
mov
jne
in
mov
test
push
dec
or
jecxz
cs
pop
mov
cmp
lret
lret
mov
imul
mov
arpl
jp
inc
ffreep
es
gs
cmpsl
xchg
lret
shl
add
data16
pop
xor
repnz
insb
jo
mov
or
mov
loope
insl
outsl
sub
pop
aas
push
aas
ret
jns
ss
sbb
loopne
enter
ja
or
push
ss
push
pop
ds
ss
xchg
xchg
push
pop
xchg
cmp
fcoml
dec
sbb
lds
das
jl
lods
xlat
sbb
popf
in
jecxz
fcoml
and
enter
movb
push
mov
inc
mov
adc
jg
add
push
or
lahf
pop
or
mov
lods
push
ss
xor
jns
sub
scas
movsl
sti
out
or
mov
bndstx
inc
inc
jo
out
popa
sti
jl
mov
icebp
or
je
bound
mov
test
mov
sbb
jbe
xchg
or
outsb
mov
lods
rcl
xchg
and
es
or
xchg
xchg
imul
lea
lretw
mov
inc
mov
lods
roll
lea
dec
popa
push
stc
add
mov
ljmp
int
push
and
dec
and
pop
xchg
jmp
cmp
pop
or
dec
loopne
or
xchg
jns
add
scas
pop
stos
fdivl
jbe
push
xchg
pop
fcoml
xchg
mov
scas
sub
cmp
push
mov
sbb
aam
sub
jns
xor
cmp
scas
sbb
push
rorl
inc
je
in
sbb
dec
xchg
xchg
mul
pusha
push
xor
mov
cmp
adc
lahf
pop
test
fsubrl
jl
cmpsb
scas
sbb
outsl
scas
xchg
and
adc
or
lds
stos
mov
cld
out
push
xor
jae
sbb
test
cmpsb
adc
mov
jl
mov
pop
sub
stc
iret
add
shr
xchg
mov
fistpl
xchg
push
sbb
imul
mov
and
js
out
pop
add
paddd
xor
sti
dec
fs
cmp
rorl
pop
in
daa
negb
out
fldcw
inc
icebp
adc
xor
sub
xor
jae
nop
int3
cmp
pop
nop
mov
scas
sub
rclb
mov
mov
std
mov
jle
sbb
push
add
jns
pusha
mov
outsb
and
mov
cmp
pop
push
pop
sub
jne
mov
in
test
iret
cmp
cwtl
xchg
mov
jb
mov
outsl
imul
stc
jae
or
push
aad
adc
pop
dec
mov
adc
jne
xchg
adcl
dec
jo
xchg
leave
fcompl
add
addr16
sbb
mov
cli
adc
faddl
repnz
sub
gs
fsubl
cmp
pop
aad
inc
cmp
jnp
push
inc
xor
scas
ret
mov
dec
repnz
out
daa
xor
stos
cmpsb
cmpsl
arpl
fwait
and
sub
xlat
or
cs
adcl
test
imul
and
js
imul
inc
out
mov
add
mov
mov
inc
and
out
imul
iret
incl
shlb
xlat
and
outsb
fidivl
es
scas
dec
mov
add
fadds
lahf
xor
jecxz
mov
push
push
adc
fld
adc
push
inc
pop
test
lret
pop
ficoml
mov
clc
aad
paddw
and
fstp
bound
mov
sarb
xor
outsl
pusha
imull
test
or
adc
jno
bound
or
add
loope
movsl
es
scas
pmaxub
or
mov
std
fwait
cltd
and
insb
inc
pop
mov
inc
jnp
scas
or
in
cltd
pop
or
sbbb
sbb
imul
adc
mov
mov
cmpsb
cwtl
mov
lea
enter
or
lea
cmp
push
popa
mov
aaa
mov
push
sbb
negl
pop
js
dec
stos
aam
cmp
das
push
in
sub
jmp
lret
lods
jmp
shrl
shll
xchg
pop
outsl
mov
push
push
aas
mov
shufps
xor
movsl
js
bound
into
arpl
jle
inc
mov
dec
popf
xchg
mov
andl
mov
cmpsl
nop
inc
ficomps
push
test
add
inc
mov
sbb
outsl
dec
lahf
pop
sarl
adc
in
mov
test
mov
jne
icebp
mov
je
iret
cld
sbb
push
jmp
in
dec
fidivrs
cld
mov
and
andb
test
in
mov
pop
daa
clc
shlb
inc
incl
adc
lds
popf
mov
dec
out
jl
pop
nop
test
mov
adc
test
push
testb
jo
leave
in
xchg
es
dec
cs
sahf
sub
out
enter
fs
jmp
adc
ret
out
test
and
scas
call
jg
push
add
stc
ja
pop
inc
inc
lea
cld
mov
cmp
add
cs
dec
adc
adc
lea
scas
loope
shlb
ffree
lds
xor
ret
and
iret
in
mov
movsb
ja
inc
paddq
jp
adc
orl
and
cmc
sbb
push
push
mov
and
cmc
push
or
pop
jecxz
xchg
xchg
pop
sub
cmp
pop
sahf
mov
iret
dec
stos
dec
jo
push
rorb
and
cmp
fwait
pop
add
into
jae
adc
sbb
daa
jmp
inc
cltd
ja
movsl
mov
push
lahf
inc
push
ds
push
cmp
lea
ljmp
push
lahf
add
int
lods
das
or
adc
ds
ror
add
xchg
ja
lcall
bound
and
dec
push
or
clc
mov
xor
cli
loope
push
xchg
aad
aaa
xchg
rcrl
push
push
out
sub
cmc
cltd
js
add
stos
icebp
mov
jl
or
push
mov
lock
or
sbb
inc
sbb
decb
pop
xchg
shr
dec
ret
insl
xchg
int3
adc
insb
pop
std
mov
jecxz
fstpt
stos
cwtl
inc
xor
mov
sti
xchg
pop
and
sub
xor
mov
scas
jne
sub
add
or
not
popf
out
inc
std
or
ds
pand
push
add
and
push
pop
mov
lea
inc
push
xchg
mov
or
mov
imulb
or
loope
xor
sub
mov
and
test
lret
shlb
loope
aas
xlat
adc
int3
cmp
and
jb
or
push
loop
xor
mov
xor
movsl
test
imul
aad
sub
mov
dec
or
ja
fimuls
in
push
lret
or
mov
repnz
fsubs
dec
jno
hlt
push
int
jno
mov
inc
mov
push
sbb
cmp
jge
cvtps2pd
and
jb
add
out
shll
gs
inc
and
loopne
sbb
js
call
inc
cwtl
xchg
mov
sub
addr16
fcom
orl
out
aas
inc
xchg
xor
xor
clc
cmp
lods
add
adc
push
lret
mov
fisttpll
push
sbb
push
ss
dec
jno
inc
test
jmp
mov
fcom
cmp
sbb
gs
sub
mov
out
into
and
mov
test
loop
push
and
sub
fs
adc
aad
std
inc
test
lahf
dec
xorl
scas
shl
jo
add
andl
mov
inc
testl
push
idivl
adc
jbe
popa
mov
int
xlat
xchg
and
push
xchg
cmpsl
scas
iret
mov
rcl
jo
and
in
mov
jb
inc
cmp
ret
mov
fiaddl
imul
pop
add
cmp
sbb
xorl
xchg
cmp
icebp
jo
jne
add
mov
sub
mov
jle
add
sti
push
in
arpl
mov
stc
push
add
lods
xchg
push
stos
fcomip
and
hlt
jle
lds
lcall
add
mov
cmp
popf
roll
lcall
or
popa
lret
sahf
sbb
xor
mov
jg
adc
push
pop
sub
mov
xor
or
addb
int
cli
xorb
lret
movsl
stos
mov
mov
xor
sbb
push
add
iret
outsl
add
push
arpl
push
scas
mov
cmp
rorl
cmc
pop
sub
les
leave
js
movsb
addr16
lods
out
roll
mov
lcall
jle
fiadds
aad
xor
cmc
lds
lcall
xchg
pop
xor
sarl
ds
subb
or
cli
insl
cmp
xchg
lret
lds
stc
and
in
fisubrl
stos
pop
das
xor
jge
push
lods
fisubrl
and
dec
cmp
loopne
add
out
jnp
std
in
inc
xor
jmp
sbb
cmp
pop
rcrl
ds
sbbl
cmp
pop
fstpt
lret
repz
jmp
ret
dec
test
xor
mov
inc
xchg
sbb
xchg
push
add
aad
cmp
popa
fidivs
je
insl
pop
les
stos
int3
push
les
pop
lret
call
loopne
test
rclb
sbb
xor
arpl
pop
das
mov
inc
and
imul
xchg
cmp
mov
pop
or
and
pop
inc
shlb
cmp
lods
test
sub
jae
sbb
push
dec
cmp
loop
xlat
push
adc
test
nop
mov
fsubrs
inc
pop
jnp
xchg
add
push
mov
push
std
inc
repz
push
xor
and
inc
lock
hlt
out
mov
scas
dec
stos
pop
xor
mov
lahf
gs
bound
repnz
push
ret
cmp
xor
lea
mov
push
insb
loopne
pop
jae
fstpt
xlat
inc
dec
iret
outsb
add
sbb
dec
imul
add
arpl
sti
pop
pop
dec
jbe
adc
pop
jb
jnp
cmp
cmp
xlat
add
pop
and
add
movsl
xchg
fbstp
std
inc
es
sub
scas
bt
scas
aas
push
scas
jae
negb
or
test
push
popf
fcoml
adc
iret
mov
sub
xor
jne
sbb
inc
ds
pop
imul
out
into
cmc
jae
jne
clc
ficoml
add
push
and
jle
popf
xchg
jb
jecxz
fadds
add
xchg
mov
jg
subl
out
sub
add
icebp
iret
jp
inc
std
lds
je
or
ja
cmpb
cs
cmpsl
rcr
sub
sarb
mov
jno
mov
inc
mov
aas
add
shlb
xchg
dec
jmp
mov
pop
sub
fwait
cwtl
pop
mov
add
outsl
sub
lds
sub
insb
lcall
jp
pop
add
scas
aad
in
mov
int
cmpsl
lds
cld
mov
or
inc
push
inc
shl
xchg
or
push
ret
faddl
adc
push
add
pushf
lahf
lock
dec
push
xchg
jnp
ficoms
out
ljmp
mov
out
lcall
inc
push
add
mov
mov
dec
cmp
mov
iretw
pop
adc
dec
ljmp
dec
out
fcmovne
notl
or
push
mov
jl
sbb
xchg
scas
ljmp
sbb
xor
out
sbb
in
pop
stc
jne
pop
mov
mov
aam
jge
cmc
inc
test
shrb
sarl
jb
sub
icebp
add
in
adc
pop
pop
repz
push
cmc
pop
test
hlt
cmpsl
pop
jnp
xor
push
or
cmp
add
out
out
addr16
jb
cltd
xor
cmp
pop
xor
cmp
dec
add
xor
xor
xchg
xor
mov
sub
movl
roll
enter
adc
roll
ret
mov
mov
dec
idivb
ljmp
in
mov
fsubrl
xor
add
jecxz
mov
mov
cld
jae
jno
push
xor
cmpsl
cmc
ret
xchg
pop
push
jle
mov
dec
pop
cmc
std
mov
add
cltd
mov
xchg
pop
push
out
xor
push
mov
nop
xor
xor
mov
insl
pop
out
bound
mov
stos
gs
scas
hlt
cld
lret
mov
push
or
ret
and
test
cmpsl
jmp
mov
push
movsl
xor
loope
mov
xchg
cmpsb
test
mov
addr16
xlat
push
inc
jl
pop
aad
sbb
dec
sar
cmp
jo
xlat
lods
into
fbld
mov
sub
repnz
xor
repz
mov
xor
out
inc
clc
in
enter
sub
scas
adc
xchg
pushf
fyl2xp1
lods
pop
or
xchg
sbb
mov
imul
mov
iret
jg
jns
mov
inc
adc
pop
fldt
sub
cli
xchg
sbb
dec
arpl
iret
jbe
mov
pusha
sbb
sub
jbe
mov
push
jge
aam
lods
inc
xchg
pop
loopne
dec
mov
mull
int3
cwtl
xor
jo
adc
pop
int3
push
insb
mov
aad
xchg
jb
jge
in
cmpsl
xchg
cltd
insb
scas
xchg
sub
lret
add
jbe
mov
and
xchg
xchg
dec
lahf
inc
jmp
lea
sbb
insb
repnz
mov
push
sub
dec
xor
xor
mov
insl
and
inc
jb
inc
fldenv
sbb
mov
pop
inc
and
jno
xchg
jl
xlat
cwtl
sbb
pusha
mov
cmp
cmpsb
jo
xor
stos
lret
rcrl
lret
sbb
mov
sti
in
jno
cld
out
into
and
in
loop
mov
xor
mov
jl
out
mov
and
repnz
mov
add
enter
xlat
inc
sarl
cmpsb
ss
mov
inc
rorb
or
cmp
pop
push
mov
clc
addb
jl
push
jb
xchg
mov
push
fmull
push
stos
push
mov
pop
ja
push
mov
add
jmp
je
sub
adc
mov
stos
es
cmp
orb
mov
cmp
dec
in
lahf
shrl
loope
aam
push
dec
icebp
mov
xchg
icebp
push
add
lret
cmp
xor
popa
mov
fisubs
xor
out
or
mov
dec
and
xor
sub
mov
in
jge
pop
sarl
mov
sar
inc
push
data16
sbb
pop
call
or
and
les
inc
in
test
jp
jae
and
cmp
mov
std
ljmp
sub
fs
xor
cmp
arpl
movsb
stos
out
sar
js
cltd
dec
sahf
in
sti
push
lds
push
jp
out
roll
mov
mov
jmp
add
jno
fs
sbb
jl
ja
xchg
addl
jecxz
pushf
xor
xor
push
pop
jns
inc
sub
aas
cmp
sbb
clc
pop
mov
nop
or
lret
xchg
outsl
jmp
in
pop
and
jno
mov
ja
mov
outsb
rolb
add
and
inc
into
or
and
mov
xchg
mov
pop
cwtl
scas
leave
mov
movsb
or
inc
push
sbb
ss
test
inc
jg
fwait
push
jae
in
and
push
loope
jb
movsb
and
mov
jo
out
pop
test
sbb
pop
rcr
inc
out
and
mov
leave
jmp
mov
pop
push
add
pop
jbe
arpl
mov
or
mov
outsb
xor
les
jne
mov
pop
cmpsb
fbld
jmp
insb
pop
pop
fcmovbe
into
imulb
cmp
das
outsl
repnz
mov
jecxz
jnp
sbb
rcll
inc
sti
aaa
les
dec
mov
add
nop
xchg
hlt
pop
inc
dec
mov
xor
pop
out
call
mov
ds
ljmp
pop
hlt
jne
and
inc
jno
push
je
cmp
mov
in
or
xchg
pop
cmpsl
jle
push
pop
cmp
mov
stos
into
cmp
or
mov
scas
xchg
push
nop
ss
lret
lcall
cmc
sub
or
xor
dec
sti
mov
fmuls
ret
sub
jno
xchg
leave
nop
xchg
pop
repnz
out
movsb
int
ds
stc
idivb
mov
pushf
mov
mov
test
icebp
xchg
sbb
cmpsl
rcrl
inc
sub
inc
leave
movsl
push
mov
xchg
icebp
inc
xor
movsl
xor
lods
xchg
sbb
arpl
out
aas
lahf
fdivrl
ja
or
adc
mov
inc
and
or
or
lea
push
cmpsb
or
push
nop
sub
push
fistpll
mov
orb
inc
icebp
aad
adc
pop
push
dec
aam
mov
inc
adc
pushf
fsubrl
or
or
jle
loope
cmp
movsl
push
jmp
sahf
mov
adcl
jmp
cmpb
fdivl
icebp
in
pop
mov
daa
cmp
ror
out
aam
adc
or
adc
dec
dec
out
sbbb
mov
outsl
adc
lds
dec
outsb
rcrb
out
enter
or
pop
es
dec
call
mov
popf
push
roll
jl
jmp
add
daa
cmp
ret
enter
fs
sub
pop
and
rcr
mov
cmpsb
jmp
movsl
das
or
jmp
mov
xchg
jne
push
xor
data16
repz
xor
dec
dec
cmp
aaa
mov
adc
pop
rolb
sub
add
add
imul
loope
mov
insl
xor
push
fimuls
scas
fists
es
enter
movsl
xor
pusha
dec
and
aaa
sbb
nop
jg
rol
lahf
out
loopne
data16
out
jmp
xchg
data16
push
add
sub
sub
mov
or
sar
adc
mov
aam
xor
cmp
call
dec
stos
pushf
add
push
into
adc
sub
bt
sub
jnp
mov
add
les
sbb
add
jge
add
lea
mov
jl
push
outsb
pusha
jl
icebp
je
pop
sar
and
sti
subb
mov
in
push
mov
xor
ret
push
mov
fdivl
repz
xlat
pop
scas
xor
fisubrl
jb
jno
daa
loop
pop
jle
pop
pop
and
lcall
dec
xchg
jmp
test
jp
bound
dec
sbb
call
scas
icebp
xchg
jg
test
sbb
sub
cmc
mov
adc
adc
jg
mov
xor
lret
mov
hlt
xor
imul
test
or
ja
fldenv
fwait
ljmp
out
ds
mov
lcall
shrl
inc
mov
aaa
leave
movsb
fldcw
or
leave
dec
addb
mov
into
jmp
jmp
rorl
mov
cmpsb
mov
jae
sbb
addl
outsb
ds
outsl
arpl
mov
enter
jae
scas
mov
push
arpl
lock
rcl
andb
ljmp
and
add
repnz
and
sub
pop
jl
lods
push
mov
sbb
xchg
cld
cmc
fwait
pop
fiadds
mov
divb
out
adc
sub
push
push
jb
or
sub
aad
clc
fidivs
mov
mov
adc
xor
jle
xchg
adc
and
inc
ja
xchg
push
add
out
dec
dec
mov
jo
je
push
cmc
loop
add
sbb
add
pop
mov
clc
stos
sbb
xchg
inc
xorl
les
mov
ds
mov
jmp
sub
std
outsb
jle
mov
add
fstpt
xchg
into
jno
add
aam
cmc
adc
leave
daa
mov
add
dec
mulb
mov
and
add
js
scas
imul
stos
test
pop
push
pop
loop
xchg
prefetch
mov
lock
inc
stc
inc
jns
fiaddl
jg
call
sti
xor
xor
mov
pop
sub
hlt
shlb
pop
xchg
stos
pop
subl
mov
js
mov
lods
jno
lds
loope
aad
sahf
mov
imul
in
adcl
or
pop
aam
pop
andl
pusha
pop
and
aam
or
in
aad
mov
xchg
clc
jmp
sti
push
push
rolb
lea
jl
shlb
push
test
xchg
int
jnp
pusha
jbe
shll
push
adc
in
dec
inc
pop
pusha
mov
pop
xchg
and
sbb
lds
mull
mov
pop
cmc
imul
adc
adc
shll
jns
call
les
xchg
push
lods
notl
int3
dec
mov
jle
jecxz
loope
inc
outsl
test
fsub
mov
inc
sub
bnd
gs
js
ret
mov
xchg
mov
pop
aam
out
mov
push
lret
xchg
fidivl
mov
testb
fnstenv
daa
add
fnstenv
sub
les
cmp
fisubl
adc
sbb
aam
sub
sbbl
sbb
jne
mulb
inc
inc
mov
addr16
sbb
out
cmc
push
leave
ja
aas
jmp
ret
lret
adc
lock
push
pop
push
sub
lods
or
jle
sbb
push
xor
cmp
aam
lock
aaa
fcom
enter
xchg
jge
out
jae
fimuls
stos
insl
addb
bound
mov
cwtl
pop
sbb
mov
inc
arpl
mov
sub
add
inc
inc
jp
roll
lods
pop
dec
pop
push
or
cmp
adc
ror
or
or
or
or
cli
push
jbe
std
ljmp
add
cmpsb
loope
stos
ret
cmp
sub
or
call
pushf
add
pushf
mov
out
pop
fsqrt
dec
pop
lods
inc
pop
ficompl
test
xchg
jae
lret
mov
int
sub
idivl
test
mov
fcmovnu
lods
sbb
mov
cwtl
xchg
int3
cmp
mov
ret
inc
in
loop
jns
adcb
loopne
or
sarb
lret
cmc
dec
and
icebp
sbb
and
out
jns
imul
dec
je
addr16
push
xor
jae
int3
leave
dec
icebp
lds
insb
loope
push
int3
pop
pop
jge
insl
je
sahf
xor
and
out
adc
cmpsb
xchg
bound
mov
sub
sub
mov
cmpsb
lret
es
push
iret
lea
pushf
add
hlt
sub
inc
ret
cmp
test
jbe
mov
jl
mov
sbb
xchg
push
clc
cli
xor
insb
mov
fcompl
adc
push
jmp
inc
lcall
data16
jmp
std
out
rcrl
test
jo
mov
sub
and
mov
sub
sub
inc
inc
jl
pusha
rcrl
gs
mov
xorl
jle
sub
xlat
sub
adc
cmc
add
lock
outsb
fsubs
shll
sbb
ret
aas
ds
sbb
cmp
xor
cltd
cltd
mov
mov
call
movsb
pop
cmpsl
add
test
ficoms
sbb
xor
mov
mov
mov
jge
inc
mov
push
adc
sbb
insl
mov
pop
cld
popf
out
aas
stc
ljmp
cmpsl
test
dec
es
xchg
mov
shll
or
scas
xchg
mov
clc
xchg
xchg
pop
ja
aam
pop
and
je
add
addr16
repz
scas
enter
inc
adcl
ds
cmp
test
or
sub
incb
cmp
pop
cmp
lret
jns
mov
xchg
test
or
cmp
shl
insb
nop
xchg
cmp
adc
loop
sbb
add
lret
lea
mov
xlat
mov
icebp
sub
fisubrl
jg
sahf
daa
repz
imul
jo
xor
loope
xor
and
lock
inc
roll
loopne
or
lahf
xlat
test
repz
xchg
sub
xchg
cld
cld
push
sbb
or
add
xor
out
loop
mov
jmp
cmpl
lods
leave
jmp
std
mov
rcll
mov
xlat
cmpsl
andb
mov
fnsave
subl
jb
mov
inc
xchg
mov
and
dec
jns
hlt
xchg
ret
jb
mov
arpl
xchg
in
std
jmp
jns
aaa
dec
pop
movsb
testb
cmp
loop
pop
cmpsb
stos
add
cli
or
sub
inc
test
pushf
lea
sub
jp
fimull
sub
cmpsb
imul
jmp
nop
scas
mov
insb
mov
xchg
push
adc
repz
mov
daa
push
mov
cmc
lret
inc
lret
iret
aad
xlat
xchg
shr
lcall
lcall
shll
push
mov
out
les
xor
fistpll
or
pop
cltd
scas
stos
das
mov
les
add
data16
dec
jno
push
rcrl
jns
or
lret
jl
and
fmuls
sub
mov
mov
dec
test
cmpsb
fdivp
xlat
inc
stos
in
or
jl
push
push
and
out
sbb
adcl
dec
xor
mov
inc
imul
inc
addr16
sahf
push
in
flds
test
lret
mov
dec
rolb
lret
iret
xchg
out
ds
xchg
pusha
or
dec
lcall
fidivrs
popf
inc
scas
mov
adc
jecxz
shll
sbb
imull
loope
push
pop
push
mov
or
stc
or
jns
test
gs
cmpsb
outsl
ret
mov
add
addr16
xchg
push
pop
and
add
and
lahf
in
xchg
lcall
cmp
xchg
into
pop
minps
jl
cmc
xchg
mov
xor
mov
fists
ret
xchg
or
lods
pushf
lret
mov
fmul
inc
mov
lock
inc
daa
loopne
push
inc
sbb
jge
dec
and
inc
sbb
adc
inc
xor
in
cmp
and
adc
std
stc
hlt
push
add
jg
sub
inc
sub
ja
dec
sbb
cs
pop
insl
push
cli
and
fwait
mov
cmc
movsl
enter
pop
push
and
xchg
shl
jnp
pop
xchg
and
jno
fnstsw
cmp
pop
cmpsb
cmp
daa
jo
xchg
sub
in
jg
pop
in
xchg
ret
mov
jbe
lea
xchg
jp
cs
js
fiadds
mov
adc
imul
jp
cmp
addr16
mov
mov
and
sub
jb
leave
loope,pn
inc
and
mov
mov
cld
add
loopne
dec
movsl
sbbl
das
mov
insb
cmp
scas
dec
in
or
test
cwtl
xchg
jl
dec
xor
sbb
ds
push
sub
push
lods
fnstenv
inc
jge
lcall
sub
es
jecxz
gs
addr16
mov
mov
jb
out
out
sbb
outsb
mov
je
push
inc
xchg
mov
xchg
iret
jnp
cmpsb
sbb
jge
or
xor
popf
dec
repz
loopne
andb
add
addr16
mov
cld
sbb
lea
call
ret
stos
pop
mov
sbb
or
pop
add
ja
and
inc
ret
pop
out
adc
fcoms
cmpsb
insb
adc
jl
ret
popf
mov
aam
lds
and
or
mov
cli
lods
andb
lods
xor
jbe
cmp
mov
mov
pop
ljmp
cwtl
xchg
shl
cmp
fcmovb
loope
inc
xchg
fidivrs
or
and
dec
dec
cmp
ja
mov
sub
fnsave
ja
sbb
ficomps
mov
cmp
mov
push
popf
popf
aad
lods
push
jmp
xorb
pop
add
dec
outsb
pop
pop
loope
mov
jns
sub
mov
stos
popf
popf
adc
imul
and
push
pop
pop
inc
add
decb
iret
rcrb
or
int
mov
adc
je
jg
in
aad
aas
and
jp
xor
mov
jo
or
mov
movl
into
movsb
in
pop
pushf
fstl
or
cmp
xor
sub
xor
or
std
xor
sbb
push
pop
je
shll
sub
pop
or
stos
add
mov
lods
mov
outsl
mov
aas
sahf
fs
fldcw
add
adc
or
push
sub
popf
in
push
mov
mov
mov
arpl
sbb
xor
pop
inc
cmp
dec
push
sti
and
out
pop
xor
jg
cmc
ljmp
pop
push
sub
lret
mov
repnz
dec
inc
inc
cmp
pop
imul
mov
pop
mov
cltd
pusha
loope
lret
add
xor
bound
push
and
xlat
jl
jae
and
cmc
les
gs
jp
pop
xor
mov
mov
fimuls
or
loop
jno
adcl
popf
mov
std
roll
xchg
inc
aas
push
jge
sahf
inc
mov
add
or
daa
sbb
rorb
fdivrl
xchg
lds
mov
stos
cld
sbb
sub
pop
iret
lahf
mov
rorb
mov
inc
inc
fiadds
push
mov
popf
addr16
shrl
gs
mov
adc
push
and
gs
subb
jbe
xchg
popf
and
leave
xchg
iret
add
push
hlt
and
xchg
dec
cmp
daa
fs
addr16
cli
sub
xchg
inc
lahf
int
add
mov
insl
loopne
ret
lea
int3
shl
loope
sbb
rcll
cmpsb
cwtl
in
insl
mov
pop
adc
shlb
adc
cmp
loope
mov
out
sub
clc
mov
in
inc
jbe
mov
add
jecxz
mov
push
out
stc
imul
shrl
in
pusha
punpckhdq
jge
mov
jbe
jl
mov
filds
into
and
sbb
adc
daa
xor
jge
mov
sub
stc
fcomi
mov
push
xchg
jno
push
cmpsb
pop
pop
dec
lods
add
aas
jne
sub
decb
cmp
jnp
jae
repnz
add
lds
inc
in
mov
js
int
sahf
add
dec
push
orb
icebp
pop
adc
pop
push
insb
dec
xchg
cmp
test
clc
and
scas
or
shll
adc
xchg
lea
cld
into
outsl
pop
and
cltd
push
or
mov
ljmp
mov
sbb
out
mov
inc
jo
or
adc
ds
fstp
out
mov
inc
dec
aas
sub
jmp
out
outsl
lods
je
in
lods
mov
test
dec
scas
pushf
cmp
sarb
or
dec
ret
xor
arpl
mov
pop
inc
fsubp
adc
sbb
and
add
aaa
negl
sbb
push
int3
fwait
jp
mov
inc
mov
inc
mov
shlb
mov
flds
enter
ds
aas
cwtl
push
lock
pop
xor
ret
push
xchg
ficoms
mov
mov
cltd
scas
les
mov
outsl
aad
dec
test
sbbb
sbb
xor
inc
sar
outsb
or
cmp
dec
jle
sbb
sub
inc
js
cmp
push
mov
aaa
scas
jge
jp
ljmp
push
adc
xor
sbb
jmp
push
movntq
or
push
mov
int3
push
mov
idivb
push
stc
cmp
push
orb
out
xor
push
sarl
stc
mov
xchg
mov
push
push
sub
mov
adc
aas
cwtl
and
push
jge
pusha
mov
add
jmp
xchg
inc
pop
mov
call
fwait
les
fdiv
jb
gs
inc
cmpsb
jo
aad
stos
or
adc
jl
cs
dec
rcll
fidivrl
xor
gs
mov
xlat
xor
fwait
loope
insl
fwait
cmpsb
mov
push
loopne
jbe
sbb
jge
and
pop
clc
dec
xor
xor
jl
fiadds
dec
addr16
dec
dec
push
cwtl
ror
inc
pop
add
pop
test
or
pusha
aaa
pop
jmp
xchg
add
jne
fsubl
movb
dec
in
in
insb
xchg
stos
push
adc
mov
push
fwait
or
outsl
pop
add
movsb
je
sbb
mov
push
push
pop
mov
stc
sbb
fdivrl
sarl
mov
repnz
lret
js
lds
mov
pop
add
int
outsb
outsb
aad
stos
imul
stos
fwait
hlt
fsub
mov
fwait
pushf
fcoml
mov
sbb
out
test
movsl
adc
mov
je,pt
cmp
pop
xchg
push
dec
imul
push
ficomps
lods
sbb
sbb
adc
mov
jo
jmp
mov
lahf
dec
ret
mov
in
gs
mov
movsb
xchg
push
and
mov
in
xor
clc
lea
hlt
mov
cmc
fwait
pop
sbb
sahf
fistl
sub
inc
adc
imul
push
sbb
pop
or
push
jae
dec
test
pop
cmp
popf
sahf
push
rclb
test
push
bound
adc
clc
jle
jp
rorb
lea
mov
adc
aaa
or
xchg
adc
xor
cli
inc
imul
aad
fwait
lret
outsb
mov
push
lods
xchg
fistpl
mov
aam
inc
push
add
das
adc
pusha
clc
inc
shrb
les
push
stos
fistpl
lods
movsb
sbb
fs
inc
push
orl
test
gs
test
sub
out
mov
adc
imul
mov
movsb
push
push
aas
je
mov
xor
xor
faddl
and
inc
xchg
xor
xchg
push
gs
imul
mov
imul
cmp
or
mov
test
adc
mov
push
ror
loopne
mov
ds
lcall
dec
testl
pushf
les
cmpl
aaa
cmp
mov
adc
cmc
sub
mov
dec
rolb
dec
out
mov
sahf
sbb
in
jle
cwtl
sahf
push
xlat
mov
in
sarl
pop
push
dec
cmp
add
adc
or
jle
testl
pushf
mov
stos
loop
dec
xor
jns
shrl
enter
jb
push
shrb
jg
or
shl
sbb
sub
negb
stc
pop
lret
xchg
dec
mov
pop
jg
dec
insl
clc
ss
inc
rclb
daa
stc
dec
xchg
out
xchg
jbe
ds
mov
es
mov
xorb
and
je
aaa
int3
cmp
sbb
mov
shll
add
test
push
inc
or
aas
inc
mov
out
pop
lret
int3
mov
or
and
fdivrl
mov
xor
imul
cmp
xchg
cmpsb
sub
and
mov
pop
inc
push
push
push
cmc
lock
mov
sahf
out
pop
out
mov
jbe
ret
and
add
xor
and
enter
inc
insl
mov
pop
jp
sub
test
ljmp
cmpsl
add
mov
lds
push
mov
ss
nop
jmp
push
or
sbb
insl
adc
cmp
push
inc
in
inc
xchg
ret
call
std
mov
or
jb
cmpsb
sar
adc
imul
mov
lds
mov
jb
pop
mov
mov
xchg
icebp
nop
sti
fs
stc
jecxz
xor
xchg
inc
jecxz
outsb
push
cli
pop
xchg
leave
dec
sbb
test
call
mov
test
cmp
or
es
and
mov
cmp
sahf
jg
pop
arpl
mov
push
in
mov
clc
mov
pop
pop
jae
dec
pusha
roll
xchg
nop
jo
daa
push
pusha
push
subb
les
rolb
std
jmp
mov
push
cli
mov
jle
cmp
jmp
jb
xorb
add
test
or
push
pop
cmp
xchg
xchg
inc
xchg
jmp
fcmovbe
pop
subb
push
mov
loopne
inc
mov
orl
sub
lods
cmc
xchg
fcomps
cld
xchg
call
sub
xor
mov
dec
lahf
mov
jl
push
pop
add
in
xchg
pop
xor
lods
mov
adc
lods
push
nop
mov
idiv
fs
test
cmpsb
mov
inc
cmp
aas
jbe
sub
pop
push
dec
loopne
add
xor
outsl
sbb
add
add
adc
outsb
jecxz
scas
in
cltd
je
cmp
xor
push
mov
loope
clc
jmp
adc
push
xchg
cmc
jae
frstor
popf
xchg
ret
mov
pop
add
mov
sub
dec
and
sub
xchg
sahf
cld
push
test
adc
aad
inc
jle
jp
data16
xlat
pop
mov
or
lds
add
cmp
xchg
sub
push
bound
lret
decb
inc
mov
or
aad
adc
jno
fsubs
lret
das
stos
cmp
pop
aaa
mov
pop
ljmp
mov
sahf
pop
xchg
sbb
xchg
xchg
push
sub
movl
mov
or
sbb
lds
adc
movsl
add
push
xorb
or
mov
lods
push
jne
xchg
sti
mov
test
jae
enter
and
mov
fsts
mov
insl
adc
in
ds
sbb
push
pop
push
loope
rorl
ud2
subb
ja
stos
push
or
lods
cltd
mov
push
int
pop
mov
jbe
int3
xorb
mov
mov
imul
rcr
lcall
fistpl
adc
pop
add
or
fwait
outsl
lea
out
insb
and
repnz
enter
push
bound
out
leave
push
loope,pt
jae
jno
loop
fwait
sbb
out
fwait
sbb
add
stos
mov
into
orl
rorb
pop
jb
addl
push
sbb
ficoms
int3
iret
insl
or
push
xor
mov
mov
outsb
mov
ljmp
imul
add
inc
cli
adc
mov
scas
or
aad
add
pop
stc
decb
mov
jp
adc
pop
mov
cld
jne
lret
adc
mov
sbb
xlat
sbb
xchg
jbe
pushf
pop
jne
jne
scas
adc
add
push
sarl
pusha
mov
xor
pop
sub
add
cwtl
insl
jmp
int3
xor
iret
dec
imul
arpl
jecxz
add
dec
gs
pop
or
xchg
inc
sub
adc
in
nop
stc
jp
push
js,pn
xchg
xor
add
pusha
stc
repz
repnz
xchg
loop
aaa
mov
push
add
js
pusha
cmp
mov
int
adc
rorl
test
out
stc
js
aaa
xor
xlat
jno
add
and
dec
loope
or
xchg
and
gs
jno
add
jp
mov
fidivs
dec
fs
or
mov
sub
scas
js
pop
sahf
inc
jne
sahf
iret
popa
cltd
pop
cmp
inc
sub
or
dec
lret
push
int3
mov
into
fcmovnbe
out
cmp
dec
sub
shll
aas
data16
or
pop
pop
ret
mov
mov
js
repnz
mov
popa
cli
xchg
or
loope
xor
push
push
add
es
lds
movsb
dec
push
pop
mov
ja
sub
je
jo
push
xor
sbb
jae
mov
imul
xchg
or
cmc
mov
pop
xchg
sarl
jl
xor
xor
ret
mov
imul
xchg
push
fldenv
call
ss
fidivrs
in
jae
sti
iret
push
out
sub
mov
stos
mov
dec
pop
xchg
mov
les
or
aad
ds
inc
cmpsb
mov
inc
xchg
and
fdivrl
loope
lods
or
pop
jmp
add
nop
hlt
and
cmpsl
test
loopne
or
pop
xchg
dec
jae
cmp
negb
add
cmpsb
repz
jne
loopne
inc
movsl
scas
dec
gs
xor
lret
dec
and
push
int
xchg
ds
rolb
pop
subl
sub
adc
out
and
les
mov
repnz
push
std
les
xor
inc
aad
jb
cld
lods
prefetcht0
dec
sbb
adc
in
push
xchg
rclb
and
shll
xor
push
mov
dec
lahf
popf
scas
cmp
clc
xor
ja
int
and
xor
pop
ficoms
adc
jae
xor
lock
pop
imul
and
cmp
incl
jge
outsl
xor
lock
dec
shll
add
fcompl
dec
inc
sub
mov
in
aad
es
jmp
pop
out
add
outsb
inc
xor
cmp
insl
pop
pop
mov
sbb
jge
jo
xchg
pop
mov
rcrb
adc
push
ret
adc
sub
lcall
lea
mov
lcall
data16
dec
enter
mov
iret
adcb
xchg
mov
mov
cmc
scas
mov
ss
inc
mov
sbb
ja
xorb
and
xor
sbb
iret
cmp
cmp
in
sub
push
adc
xlat
shll
jo
push
xchg
stos
or
idiv
xchg
out
mov
divb
mov
dec
sbb
les
and
jmp
imul
ss
fists
and
mov
push
push
add
lcall
xor
inc
popf
or
pop
enter
shrl
mov
push
fucomip
xchg
test
jae
lods
popf
jg
push
xchg
lea
push
lea
sub
dec
jle
dec
push
mov
fimuls
inc
xchg
ret
and
loop
stos
mov
andl
pop
mov
or
loope
and
xor
or
jo
cmp
push
mov
cmp
outsb
scas
in
insl
cmp
or
lahf
retw
loope
inc
lahf
push
jne
ljmp
ret
adc
enter
cli
xchg
shlb
nop
sbb
das
add
mov
loope
jae
ljmp
dec
in
cmp
notb
inc
jne
imul
sub
in
imul
sarb
aaa
adc
lret
das
loope
addr16
loop
jae
dec
daa
fisttpll
subb
mov
les
sahf
out
les
shrl
pop
mov
mov
test
xchg
vandnps
pop
out
aad
jl
sub
jge
inc
adc
sub
test
push
add
cwtl
outsl
cmp
lret
xchg
enter
dec
push
push
clc
das
mov
ret
rorb
xor
insb
mov
aam
and
add
lret
push
cmp
mov
sbb
nop
pop
dec
xor
divl
mov
fs
mov
out
pop
inc
pop
enter
les
jae
or
ljmp
aam
rclb
pop
jb
mov
mov
pop
push
inc
push
call
aam
xor
or
push
outsl
mov
nop
lods
mov
loopne
lahf
rcrl
inc
enter
popa
mov
test
dec
sub
add
inc
adc
jbe
mov
sub
lahf
pop
mov
mov
test
pop
mov
cmp
jecxz
in
sbb
test
jns
repnz
mov
inc
and
and
gs
dec
or
adc
ljmp
mov
adc
repz
into
sub
mov
pop
dec
or
jmp
sub
aad
stos
adc
adc
inc
imul
mov
and
inc
fimuls
mov
rcrb
and
addr16
ljmp
xchg
cmc
sbb
xor
cltd
cli
sbb
add
pop
jne
jl
add
divb
stos
inc
mov
and
rorl
nop
push
jb
sub
xorl
cmp
outsb
sti
sbb
into
mov
insb
test
lds
dec
push
xchg
ljmp
xchg
inc
ret
mov
aas
jbe
add
loopne
push
call
test
dec
imul
scas
mov
fcmovne
cs
mov
movsl
test
cmp
out
mov
mov
fwait
xchg
dec
mov
pop
or
xchg
jae
xor
lcall
shlb
jb
dec
cmpsl
dec
adc
pop
popf
add
or
adc
call
movsl
inc
xchg
nop
sahf
sbb
insb
rcrb
aam
rcrl
xchg
mov
insl
mov
and
mov
pop
mov
les
xor
imul
stos
faddp
cmpsb
call
or
cmp
or
fwait
push
and
arpl
pop
add
int
dec
movsb
sub
add
stos
xchg
lods
sub
push
fdivl
lods
add
add
cmpsb
test
lret
mov
push
es
sub
mov
insb
out
test
aaa
rorb
js
pushf
scas
push
and
data16
mov
repnz
stos
xchg
xchg
jno
add
dec
mov
out
jecxz
sbb
jmp
push
lret
push
pop
jp
pusha
jnp
or
mov
clc
fcoms
push
or
sbb
cli
mov
xlat
mov
cmp
pop
xchg
seta
enter
jecxz
int3
xlat
cmp
jns
xchg
mov
push
sub
and
pop
gs
dec
sub
adc
std
ret
es
push
enter
mov
adc
shll
cli
jne
imul
imul
loope
sub
arpl
xorl
adc
gs
js
jne
test
push
out
cld
sbbb
bound
scas
arpl
xchg
pop
mov
mov
jno
lods
sub
in
jb
pop
pop
sub
rol
xor
push
in
pop
xor
and
adcb
push
sub
cmp
shrl
in
jg
jns
out
ja
mov
dec
mov
int
jmp
hlt
lods
aam
or
les
and
jae
imul
fwait
mov
and
adc
dec
mov
fmuls
push
or
adc
and
rcrb
push
test
into
xchg
cmpsl
xor
rcrl
daa
xchg
add
push
cld
loop
nop
sub
and
pop
sarb
mov
add
add
aas
add
and
clc
xor
cmp
rcrl
and
out
popa
imul
cmp
loope
sbb
call
hlt
movsb
lea
sub
xchg
fists
insl
jp
pop
jle
pusha
fistps
mov
hlt
push
adcb
sub
or
mov
mov
in
xor
mov
pop
pop
fmuls
mov
popa
cli
ret
mov
xchg
daa
cmp
test
inc
stos
sbb
test
fdivrl
imul
add
shll
jo
and
or
add
xor
data16
lds
jp
mov
dec
and
fldcw
push
pop
mov
adc
add
pop
and
mov
je
aaa
fnstsw
lret
mov
movsl
mov
enter
xchg
loopne
decb
out
mov
rolb
fs
jge
es
aaa
mov
jecxz
test
xchg
jns
push
mov
mov
and
or
inc
mov
fstp
push
loopne
push
out
and
pop
jecxz
ds
pop
je
jbe
out
pop
xlat
ficompl
sub
inc
add
stc
test
push
or
sbb
addr16
shlb
cltd
roll
out
mov
pop
and
and
cmp
xchg
roll
sbb
mov
sbb
jle
add
jne
jbe
or
mov
lods
jle
jge
je
xor
out
out
push
xor
push
loope
dec
rol
jne
cmp
loop
dec
pop
xor
cmpsb
lret
jnp
jno
adc
xlat
cmp
loopne
sbb
scas
aaa
pusha
adc
xor
mov
into
std
lret
cld
cld
das
and
lods
les
aam
mov
sbb
aaa
bound
dec
gs
test
dec
xchg
popf
cmp
sahf
and
and
pop
fiaddl
xor
jl
fstps
clc
mov
in
push
mov
xor
cmp
and
imul
pop
psrad
cwtl
stos
mov
scas
xchg
push
jecxz
push
rcl
cmp
dec
push
add
fidivrl
jno
repnz
adc
jns
inc
aaa
pop
rolb
test
xor
mov
cltd
lods
aaa
scas
mov
push
xchg
fisttps
adc
div
sbb
cli
lods
mov
mov
cli
and
cmpsl
xchg
pop
push
xchg
push
inc
adc
adc
or
sub
lahf
adc
nop
xor
sub
out
adc
xchg
inc
jl
or
jo
xchg
cmp
outsb
fmull
mov
cltd
aas
adc
mov
pop
das
sbb
in
scas
cmp
filds
cli
pop
lods
dec
cmp
loop
aas
sub
cwtl
pushf
sub
xchg
or
scas
sti
lea
cwtl
sbb
push
clc
stos
mov
mov
fidivrs
inc
jg
fistl
pop
cmovp
jnp
test
jne
pop
xchg
push
imul
pop
rcll
ss
adc
mov
fimull
push
pop
imul
out
pop
idivl
daa
adc
ljmp
adc
jle
pop
mov
xchg
cmp
sub
testb
sbb
loopne
sub
and
push
adc
push
push
fidivs
sbb
hlt
jmp
test
jg
adc
ret
cmp
jl
lods
bound
jge
loop
mov
test
int
fisttpll
aad
test
cmpsl
push
and
sbb
xor
scas
jmp
push
aam
lcall
jecxz
shlb
xor
jp
rcll
gs
dec
out
or
xchg
push
xor
push
cmpl
dec
mov
clc
movsl
push
mov
arpl
jb
dec
int
scas
inc
sbb
fstpl
jmp
add
hlt
add
xor
mov
orb
add
pop
mov
mov
cmp
fistps
or
negl
xchg
outsb
ja
pop
testl
mov
test
lods
pop
and
shlb
lock
jnp
aaa
jmp
and
in
xchg
push
jnp
adc
sub
aad
push
fnstenv
addr16
adc
cmp
xor
fs
and
js
xor
inc
addr16
dec
add
data16
out
repnz
or
push
jns
jns
xorl
ret
push
imul
mov
cmpsl
adc
pop
adc
cmp
xchg
es
out
sub
or
int3
pop
in
mov
leave
jl
xchg
movsl
scas
and
movl
cmc
jae
cmp
mov
mov
push
cmpsl
mov
sti
adc
insl
insb
push
cmp
imul
gs
push
or
lret
pop
and
lea
adc
sub
sub
enter
and
in
jg
dec
scas
xchg
adc
daa
sbb
icebp
sbb
xor
dec
aaa
movsl
cmp
mov
xor
pop
or
push
or
xor
out
xchg
repz
movsb
aas
xchg
add
inc
rcrb
or
push
mov
jnp
aad
rolb
pushf
sbb
fs
mov
cmp
fisubrl
popf
xor
dec
into
sbb
rorb
sbb
jae
cwtl
jecxz
ret
mov
iret
insl
sub
mov
xchg
sub
fadds
cld
adc
outsb
sub
idivb
push
adc
push
inc
jne
fsubr
bound
add
icebp
test
iret
and
imul
mov
pushl
enter
sub
push
mov
sub
add
add
loop
cli
pop
cwtl
push
xchg
jg
sbbl
pop
mov
dec
cmp
clc
cmp
inc
lcall
pop
mov
fdivp
out
loope
lods
and
dec
push
lret
aad
sub
imul
out
xchg
loope
pusha
xor
mov
in
in
inc
stc
or
enter
pop
push
std
push
hlt
cmp
xchg
jno
and
push
xor
mov
sub
pop
cld
rcll
push
dec
rcrl
cmc
sub
enter
dec
sarl
jg
leave
addb
hlt
movsb
repnz
repz
outsl
lods
bound
jl
cmp
xchg
xchg
xchg
je
int
cmpsl
or
dec
xchg
mov
stos
popa
push
push
movsb
pop
sbb
mov
push
es
rcrb
mov
and
inc
pop
sub
hlt
pop
xchg
dec
mov
enter
jns
fldt
ret
shrl
or
outsb
scas
pop
repz
int
mov
arpl
adc
and
sbb
dec
pop
dec
pop
stos
loop
or
loop
push
daa
xchg
inc
jbe
push
cmp
jbe
test
icebp
fbld
sti
outsb
push
mov
adc
decb
xcrypt-ecb
cmpsl
dec
xchg
fs
pop
adc
push
jp
cmp
dec
or
fstp
jmp
adc
dec
adc
ljmp
nop
mov
sbb
movsl
mov
xor
cs
out
sub
out
inc
sbb
dec
jge
imul
mov
sahf
out
sti
sub
xchg
ja
mov
fimuls
cs
in
jle
out
jne
fidivl
sub
out
scas
in
jbe
mov
pushf
jne
inc
pop
add
popa
jo
aad
insl
bound
or
fwait
test
sbbb
inc
imul
fiaddl
adc
imul
mov
pushf
push
jae
jno
in
lret
sarl
inc
jecxz
xchg
int3
sbb
and
out
lcall
aam
dec
push
sub
fnstsw
stc
aam
test
add
push
lock
scas
mov
mov
pop
adc
psubw
mov
inc
shll
inc
pop
fstl
or
addr16
xlat
push
push
dec
pop
add
outsb
test
sbb
lods
or
dec
xchg
daa
jbe
sbb
call
int
sbb
jle
test
rcrb
imul
cmc
test
jp
pop
loop
mov
mov
jle
pop
cmp
rorl
imul
dec
decl
call
nop
mov
push
andb
pusha
aad
push
and
mov
lahf
mov
rcrb
sub
vmwrite
shl
jmp
jmp
adc
xor
bound
loope
or
out
xchg
das
hlt
xor
xor
xchg
cmp
sbb
lods
in
imul
xor
mov
jae
mov
add
out
pusha
mov
sub
and
dec
push
rcrl
jae
xor
or
insb
shll
rcll
stc
int3
cmp
inc
es
mov
pop
xchg
cwtl
dec
enter
xchg
push
sub
sar
jo
inc
sarb
or
jb
cld
cmp
imul
push
jno
or
cli
mov
cmc
add
xchg
scas
or
test
outsb
fcompl
popf
mov
cmc
addr16
and
aas
lea
movsl
fldl2t
inc
in
std
mul
lcall
adcb
xor
das
movsl
jl
stos
fsubrl
xchg
sbb
xchg
scas
or
ss
mov
andl
jbe
mov
dec
jecxz
test
orl
in
clc
arpl
cmp
rolb
out
jbe
cld
lret
mov
mov
push
lods
ficoms
xchg
mov
enter
fsubs
sub
sbb
cmp
pop
lcall
pop
sbb
rcrl
in
sbb
sub
cmp
orl
pop
inc
or
or
and
push
fmuls
sub
jo
scas
inc
mov
mov
inc
fidivl
push
shll
mov
or
xchg
jae
ljmp
jae
sbb
xchg
mov
rolb
sub
mov
push
adc
jle
orb
add
out
mov
jbe
push
lods
shll
xor
push
and
mov
repnz
movsl
imul
cmp
insl
adc
mov
out
mov
push
or
bound
popa
jl
sbb
int3
int3
cmc
mov
dec
lcall
sarb
or
mov
dec
out
adc
aaa
rcrb
mov
xor
push
test
addr16
hlt
test
bound
pop
mov
pop
dec
repz
sbb
andb
mov
mov
sbb
gs
inc
in
mov
xchg
jle
push
popf
scas
popf
in
nop
aaa
mov
push
mov
mov
cli
mov
iret
jge
lds
fimuls
mov
sahf
into
sarl
decb
dec
icebp
mov
out
loopne
mov
pop
dec
hlt
xor
or
or
ret
xchg
xchg
push
cmp
cmc
pop
and
aad
mov
test
inc
fs
cmpl
xchg
pusha
ds
jnp
push
xchg
push
test
xor
mov
cmp
sub
xchg
das
add
mov
jns
loope
or
fcoms
ss
dec
pop
cmp
dec
fsubrl
sbb
orl
hlt
inc
push
jo
pop
add
lods
and
bound
inc
into
test
insl
test
lods
xor
pusha
mov
fdivp
or
movsl
test
cmc
mov
lret
imul
push
cmpsb
arpl
cmp
js
movsl
lock
daa
test
sbb
mov
dec
clc
and
jbe
pusha
sbb
les
in
or
std
inc
loop
push
sbb
outsl
mov
lock
xchg
xor
cmpsl
pop
push
mov
mov
lahf
xchg
testb
pop
fimull
xor
mov
mov
hlt
push
push
mov
into
pop
loop
popf
cmp
push
inc
fsubrp
pop
cli
jge
repz
fadds
mov
pusha
rcr
push
es
testl
nop
inc
inc
imul
hlt
pop
add
jg
push
add
cmp
stos
fwait
inc
push
lods
inc
or
cwtl
push
test
xchg
and
dec
enter
addr16
xchg
xor
pop
mov
sahf
leave
out
xsavec
aas
inc
in
cltd
push
js
adcl
push
sti
mov
push
hlt
xor
inc
ret
jne
setb
sbb
mov
arpl
rol
mov
push
icebp
mov
inc
lahf
popf
dec
cmpsl
inc
inc
xlat
cltd
pushf
dec
loopne
mov
mov
pop
js
daa
testb
vmulpd
xor
lret
lods
bound
mov
jl
jne
cmp
push
sbb
fs
test
cmpb
out
repnz
jl
jns
bound
dec
scas
xchg
fwait
sbb
adc
loop
rcl
test
popf
lcall
mov
insl
or
jl
mov
mov
stos
fidivs
lret
cmp
icebp
or
pop
xor
mov
pop
jle
adc
out
pop
sub
pop
sbb
inc
fsubl
fimuls
jbe
jmp
aad
movb
fists
push
test
lret
and
cmc
jns
and
bound
xchg
push
fnstenv
mov
movb
hlt
aam
and
xor
add
mov
imul
sbb
lea
mov
out
rcrb
test
push
or
cmc
mov
arpl
pop
lods
xchg
and
icebp
jecxz
daa
addr16
mov
test
imul
xchg
inc
push
test
xlat
sub
pop
pop
ret
adc
sub
pop
std
pop
ret
inc
lret
fisubl
dec
pop
or
push
and
cmp
and
xchg
cs
outsl
hlt
adc
pusha
aas
insb
lret
aad
fadds
xchg
subb
rclb
lods
test
fldenv
adc
fwait
mov
repz
in
cmp
into
push
das
movsb
jae
cmc
jns
stc
popa
add
test
inc
fstp
and
rcrb
fiaddl
sbb
cli
scas
push
mov
pop
ja,pt
or
js
xor
enter
mov
fisubl
sbb
in
lock
cmp
dec
cld
into
loope
and
or
rcrb
pop
mov
xchg
mov
in
rclb
jge
sbb
mov
inc
xor
outsb
pop
lret
mov
mov
test
in
pusha
jl
mov
xchg
ret
sub
and
or
xor
popf
cmp
lret
lods
sub
mov
push
cltd
jl
rcl
fwait
xchg
stos
add
out
or
or
xchg
add
leave
mov
or
cld
jns
pop
fcomps
les
dec
ja
sub
stc
call
das
test
jae
loope
cmpb
in
shlb
jecxz
lea
mov
rcr
lret
mov
popa
jle
mov
loop
stc
adc
lea
pop
insl
sub
add
pop
mov
lret
shr
cld
clc
test
gs
insl
shll
push
jl
notl
xchg
iret
icebp
ret
call
sub
cli
cmp
rorl
das
or
sbb
cmpsl
inc
rolb
mov
inc
idivb
add
dec
mov
cmp
popa
add
xchg
xchg
xor
stc
sub
mov
lods
mov
lds
dec
push
jne
mov
pop
mov
shr
and
bound
sub
sti
aaa
pop
inc
imul
mov
xor
mov
fbstp
mov
xchg
add
adc
push
inc
xor
shrl
mov
add
ss
ficoml
nop
jp
fidivl
sub
xor
and
in
sub
jno
fdivs
testb
in
mov
cmpsb
jbe
push
aaa
loop
fwait
pop
or
sbb
sahf
lret
std
js
cmp
icebp
adc
and
cmp
aas
adc
jbe
push
ds
lock
add
and
call
jb
mov
das
push
sub
xor
test
xor
sbb
jg
inc
adc
stos
add
aad
mov
cmp
jl
test
adc
xchg
loope
dec
loop
jbe
sbb
dec
loopne
aaa
push
into
adc
or
cmp
jbe
cmpsl
lcall
cmp
stos
mov
pop
mov
xor
jo
cs
int3
push
jmp
fsubrp
cs
std
mov
xor
adc
imul
test
addl
xchg
xor
and
enter
imul
push
shl
enter
ret
andb
jbe
fbstp
test
repz
mov
sub
inc
pusha
push
inc
inc
add
jp
out
or
test
cmp
push
f2xm1
mov
sub
insl
push
pop
xchg
cmp
cltd
add
add
push
mov
push
sti
add
popf
imull
jle
lods
add
ljmp
pushf
fisubrl
sub
and
pop
push
loopne
sbb
adc
cs
bound
mov
popa
mov
fdivs
adc
popf
add
xor
cmc
cwtl
leave
and
enter
dec
mov
imul
jl
mov
ret
mov
je
addb
pop
cmpsb
test
adc
aad
cmpsb
jnp
jae
cmp
cmp
scas
sbb
inc
sub
rcrb
inc
sub
shll
testl
daa
mov
mov
jnp
jmp
and
inc
enter
mov
cli
xlat
adc
cmpsb
xchg
jg
mov
mov
xchg
pop
add
fidivrs
inc
out
scas
fcomi
mov
jmp
out
stos
stc
adc
pop
das
xchg
xchg
add
or
inc
mov
mov
cs
rcl
nop
lock
cltd
out
outsl
enter
push
js
hlt
mov
dec
cwtl
pushf
mov
js
jle
es
test
xor
mov
out
cmp
add
jmp
mov
movsb
out
inc
movsl
dec
jo
repz
jecxz
les
cwtl
ljmp
and
or
inc
out
test
lea
imull
in
add
mov
xchg
adc
xchg
sbb
mov
fistl
out
pop
xchg
adc
data16
or
mov
js
insb
and
adcb
lahf
and
and
lret
loope
push
clc
add
clc
xor
jmp
vmwrite
imul
arpl
subl
mov
and
insb
jecxz
pop
adc
dec
icebp
xor
xor
adc
add
enter
out
insb
stc
gs
dec
out
cmp
aaa
adc
sbb
cmpsl
inc
push
cmpb
cmp
mov
jnp
push
shlb
and
dec
inc
xor
cmp
and
sarl
jge
mov
ret
cmp
jg
arpl
push
pop
mov
cmpsb
cs
iret
loope
mov
xorl
xchg
out
ret
ret
pop
inc
lods
xchg
cmpsb
or
ja
les
jbe
add
addl
fadds
scas
pushf
out
dec
push
movsb
jp
or
and
in
cmp
sub
cmc
mov
or
adcb
imul
in
sbb
xchg
push
xchg
fsubrl
mov
sub
insb
mov
inc
sbb
mov
cli
cmp
xor
cmpsb
cmp
and
inc
je
outsb
call
mov
popa
and
mov
push
dec
movsl
inc
fstps
sbb
lret
sbb
xchg
xchg
mov
xchg
mov
push
xchg
aas
dec
dec
lcall
cmpsb
fisubrs
subb
data16
push
or
pop
enter
fnstenv
jae
rcrl
xor
ja
icebp
cmpl
adc
loop
xchg
mov
les
ret
scas
addl
gs
fdivp
xor
loop
cmc
mov
in
sbb
dec
sub
sub
dec
cmp
pop
test
dec
or
into
add
or
mov
xor
xchg
loope
and
inc
pop
je
inc
jle
iret
mov
sub
mov
xchg
les
mov
out
imul
das
vmovntps
cld
sbb
and
mov
push
stos
stc
jl
popf
push
push
jns
aad
clc
fwait
push
sbb
dec
sub
jb
out
sbb
cmpl
imul
push
dec
gs
sub
sti
xchg
cmc
jb
push
push
fs
push
inc
mov
push
int
ljmp
push
fisubl
aas
shlb
cmp
test
cwtl
je
and
mov
in
out
add
das
cld
pop
fnstcw
sqrtps
xor
frstor
sub
cltd
insl
pushf
mov
hlt
jmp
lret
stc
jp
xchg
or
push
in
insl
jmp
cmc
dec
lods
push
fmuls
scas
xchg
inc
loopne
sbb
push
or
mov
fcomps
scas
jne
insl
cmp
inc
jnp
mov
repz
sub
jns
ja
mov
xorb
pushl
cli
in
fs
push
dec
jns
loope
inc
pop
das
lods
sub
stos
mov
mov
stc
rcrl
movsl
sub
cwtl
stc
in
sub
and
xchg
pop
loopne
dec
or
jbe
jbe
sbbb
cs
xor
mov
rcrl
mov
inc
dec
outsb
popl
ret
pop
ret
xchg
xchg
int
int
adc
lcall
push
iret
cmp
call
out
sub
xchg
adc
cmpsb
jnp
push
test
mov
xor
loope
fisttpl
ficoms
pop
cmp
leave
pop
shr
inc
fistpl
sbb
push
sti
mov
jnp
jge
loopne
mov
arpl
dec
fiaddl
iret
aas
jle
pop
loop
xchg
pop
ret
cmp
out
mov
jle,pt
idivl
add
mov
lcall
xchg
fstpl
cs
inc
sub
lahf
repz
js
mov
aad
mov
mov
notb
cmpsb
inc
rcrb
or
shlb
fimuls
push
out
test
div
lods
cld
iret
fildll
imul
leave
dec
bound
adc
and
xchg
daa
dec
out
inc
inc
mov
or
jmp
xor
jns
and
sarb
fldcw
icebp
in
addr16
stos
jl
add
xor
cmp
jg
sub
repnz
rolb
in
jns
scas
out
popf
out
mov
int
adc
cmp
clc
loopne
mov
mov
imul
lret
cs
xlat
test
xor
push
scas
push
shl
push
test
popa
fs
pop
cmp
adc
sbb
pop
cmp
adc
das
lret
add
test
dec
xchg
cmp
mov
repnz
inc
imul
out
fcomi
roll
push
push
mov
jg
mov
mov
dec
mov
and
mov
cmc
jne
xchg
dec
cmp
pop
or
aaa
xchg
stos
jb
push
xchg
or
sub
mov
pusha
sub
cmp
jo
push
add
sbb
inc
cmpsl
jmp
out
and
push
test
sbb
add
fmulp
sbb
inc
sub
xchg
mov
out
ss
and
clc
xchg
arpl
in
dec
test
push
dec
popf
into
dec
push
popa
rorl
xchg
aas
leave
mov
xor
mov
cltd
dec
sbb
lock
add
adc
sbb
inc
sbb
sarl
push
cmpsl
or
mov
in
mov
pop
push
cmpsl
iret
cmpsb
jne
inc
mov
sti
in
lret
inc
and
int
adc
je
xchg
mov
mov
push
lds
inc
xor
cmp
fwait
jnp
into
jns
imul
lret
mov
jge
adc
mov
push
pop
test
pop
and
push
or
int
fs
sbb
imul
cli
mov
mov
pop
std
das
xchg
inc
sbb
xchg
add
xor
test
rorb
decl
popl
push
in
jmp
lcall
fsubrl
leave
adc
xor
movsb
lock
adc
lret
pusha
outsl
jmp
inc
pop
xchg
repnz
stos
jae
add
pop
stos
sbb
std
fldl
aas
imul
or
into
pop
ret
dec
xor
lret
lcall
lret
mov
rolb
xor
loope
iret
mov
xchg
mov
push
aas
xor
addb
add
dec
cmp
fs
pop
addb
pop
xchg
dec
dec
mov
sbb
dec
mov
mov
test
push
xchg
mov
pop
scas
or
and
pop
xchg
enter
and
mov
shl
mov
push
mov
mov
fiaddl
adc
jb
imul
push
outsb
xchg
mov
pop
pop
mov
stos
imul
mov
out
dec
lods
repz
aam
mov
and
mov
fadds
cmp
jbe
xchg
pusha
addb
loope
sbb
cmp
or
stos
and
xchg
jmp
clc
mov
xor
cld
arpl
pop
test
sahf
fmuls
in
test
or
or
sbb
sbb
lret
in
pop
movsl
filds
dec
lret
xchg
jle
repz
mov
inc
loope
mov
sbb
insb
xor
sbb
mov
inc
xor
icebp
push
xor
outsb
lods
pop
into
pop
jg
and
push
movsb
jg
rep
js
jp
inc
mov
notb
ret
and
add
mov
test
popa
pop
in
cmp
idivb
xchg
sti
pop
aam
popf
push
out
nop
and
ret
insb
popa
mov
rcll
repz
xchg
in
sbb
insb
mov
lea
mov
decl
add
mov
fstl
cmp
sbb
dec
push
insl
dec
movsb
pushl
popf
sbb
outsb
push
out
jp
and
imul
or
sbb
dec
cli
inc
xchg
push
hlt
sub
and
jp
jmp
pop
inc
adc
sub
adc
into
dec
xor
push
xchg
pop
sub
cld
push
jecxz
gs
push
inc
stc
movsb
out
outsl
rcr
fadd
rol
sub
fadds
fwait
icebp
mov
cmc
addb
pop
aas
jmp
fists
lret
movsl
inc
or
push
clc
sbb
push
inc
pop
scas
or
ror
cmpsl
sbb
fldt
push
push
pop
ljmp
push
gs
mov
xlat
dec
cmp
cwtl
push
out
cmp
add
in
mov
cmpl
call
mov
rorb
jle
scas
insb
mov
loop
xor
sbb
sub
ds
or
popf
dec
mov
mov
cmp
pop
mov
jnp
loope
mov
cwtl
aam
cmpsl
add
sub
test
mov
out
lret
call
jno,pt
ja
mov
dec
bound
push
popa
lret
cmp
and
daa
mov
add
dec
and
out
xchg
inc
js
je
jl
js
mov
xor
cmpsl
mov
sub
mov
leave
orb
dec
pusha
lea
in
fsts
leave
shll
push
adc
jo
xchg
fwait
mov
fstl
and
sub
test
mov
call
sahf
mov
push
xor
cltd
icebp
ret
fdivs
lds
add
shr
mov
mov
xlat
cmp
jge
fwait
mov
adcl
clc
outsb
inc
into
push
shlb
ja
sub
in
pop
or
popf
sub
mulps
adc
test
or
addl
push
cmpl
sbb
add
xchg
mov
lret
iret
filds
xor
or
addr16
imul
je
inc
adcb
scas
pop
out
imul
inc
fdivs
push
jmp
lret
and
xor
sub
xor
dec
rorb
icebp
sbb
ret
rcr
and
lcall
xor
maskmovq
notl
push
or
es
mov
popf
push
cmpsb
push
mov
int
sub
loopne
fiadds
add
push
and
push
add
mov
add
aas
or
in
in
mov
test
cld
shl
out
shll
jo
and
dec
shl
xor
xchg
lahf
add
fsubl
insb
sub
stc
je
fwait
dec
jno
mov
cmpsl
out
and
xchg
enter
and
xchg
push
mov
mov
xchg
stos
lock
push
lods
lret
std
push
pop
xor
push
sqrtps
push
fdiv
mov
aaa
cs
xchg
repnz
xchg
arpl
popa
mov
mov
gs
popf
aad
xchg
dec
out
mov
cli
add
popl
adc
mov
int
cmpsl
lret
ret
cmc
mov
fsubl
pop
fcmove
pop
pop
std
int
adc
or
xchg
pop
mov
clc
ret
mov
add
inc
jmp
or
dec
loope
inc
xchg
and
sahf
jp
push
sti
movl
adc
adc
xchg
jnp
sub
pop
add
sub
lret
mov
daa
aaa
fstl
add
arpl
lds
shlb
cs
aaa
es
mov
cmpsl
mov
pop
cs
push
cmpb
rcll
add
loop
jne
dec
adc
js
xor
cli
jp
push
je
cmpsl
adc
pushl
pop
jb
test
sarl
stos
dec
enter
sahf
pusha
in
cmc
mov
in
insl
je
jg
es
fs
sub
xor
stos
and
jnp
sbb
jns
std
js
in
insb
mov
xchg
loop
into
push
insb
mov
sbb
inc
ret
mov
mov
popa
sbb
sti
pop
nop
xor
and
loope
jecxz
icebp
fcompl
pop
testb
dec
nop
fstpl
imul
or
daa
pop
mov
jbe
in
mov
inc
add
jns
or
lods
jl
aas
pusha
xor
sub
xchg
ljmp
xor
cli
loope
add
orb
inc
push
movsb
es
or
xor
xchg
fs
jle
fwait
ret
outsb
or
rorl
pop
jp
xor
and
jb
mov
bound
fstpt
xor
sti
les
fcomp
adc
push
cmp
adc
movsl
das
dec
pop
and
in
push
cli
pop
loope
and
mov
dec
push
xchg
es
jle
pop
mov
out
dec
adc
mov
loopne
dec
pop
lock
stos
dec
insl
jg
push
jne
mov
mov
fisubrl
sbb
dec
or
push
pop
mov
or
push
in
mov
scas
push
pop
xlat
inc
pop
negl
jecxz
xchg
jge
int
repz
jo
out
push
or
pop
movsl
sub
cmp
mov
and
mov
mov
lret
cld
lock
pusha
mov
cmc
enter
shlb
and
mov
xor
aam
mov
imul
adc
ljmp
add
cld
lret
in
adc
dec
stc
inc
bound
lock
shrb
mov
dec
jne
mov
dec
icebp
xchg
in
dec
mov
pop
aam
outsb
sahf
adc
push
enter
sub
and
add
fadd
aad
pusha
roll
mov
jg
xchg
ja
cmp
les
outsl
and
inc
dec
jge
hlt
xchg
mov
sub
mov
dec
inc
es
mov
popf
rol
xchg
addl
push
addr16
adc
mov
inc
jbe
add
scas
lret
jb
subb
jo
iret
inc
mov
insl
push
fwait
imul
push
inc
in
cmp
movsb
vpsubsw
movb
mov
adc
rcr
xchg
scas
mov
test
inc
jg
xchg
sub
jmp
and
mov
inc
adc
or
xor
and
pop
fidivrl
add
push
lret
cwtl
mov
jo
xchg
xchg
push
iret
sbb
jnp
imul
dec
enter
stos
sbb
out
adc
pop
cmpsb
repz
in
xchg
fildll
lcall
clc
push
xchg
or
jl,pt
lock
addr16
ficoml
add
lcall
adc
test
add
sbb
pop
and
sub
mov
fs
push
shrb
or
fisubrs
mov
inc
shll
out
cmp
push
popf
les
cmp
mov
test
jmp
xor
sbb
inc
mov
mov
insl
loopne
sarb
lods
movsb
jae
rorl
repnz
dec
dec
cmp
sub
pop
mov
cld
mov
add
and
sbb
push
fmull
adc
mov
push
lods
ljmp
jno
pop
xor
pop
mov
lock
xchg
int
hlt
inc
int3
jns
js
sub
mov
stc
es
cmp
push
cmpl
xchg
inc
shll
in
sarb
imul
mov
xor
stos
scas
movsl
out
mov
push
movsb
insb
xchg
test
mov
outsb
test
movsl
push
cmp
mov
lock
sub
adc
orb
fsubrl
jg
call
mov
andl
das
pop
and
push
and
cli
jl
mov
mov
pushf
in
jle
adc
cmp
or
mov
cmp
add
sub
data16
mov
les
or
xchg
xchg
jbe
add
dec
xchg
cmp
fimuls
jmp
pop
mov
jmp
cld
add
in
in
es
subb
scas
scas
scas
ljmp
push
subl
faddl
shll
jecxz
inc
pop
int3
mov
fstps
cmp
imul
add
dec
and
xchg
sub
rolb
sbb
push
pop
stc
fadds
fimull
lock
cmp
test
loopne
mov
jnp
xor
in
iret
clts
push
je
xchg
inc
mov
push
cmp
xchg
sub
sub
or
lcall
fistpll
mov
dec
pop
lds
rolb
jno
cwtl
pop
mov
xchg
mov
or
in
jae
mov
sub
mov
ret
mov
lods
andl
jecxz
dec
and
cwtl
aas
faddl
lods
mov
dec
lcall
lods
push
popf
pop
mov
mov
std
jbe
pop
xchg
adc
push
fwait
inc
fchs
outsb
sbb
dec
setl
pop
and
std
push
jg
push
mov
cmc
js
shl
and
loope
mov
in
ljmp
stos
dec
jl
sahf
mov
js
fnstenv
rcrb
bound
lods
js
scas
test
or
loope
aaa
shll
xor
jmp
sti
pop
gs
jns
mov
inc
add
cmp
and
aam
inc
enter
into
into
xor
push
push
mov
pop
dec
lds
jmp
sub
xchg
mov
mov
stos
shrl
or
ret
and
inc
rorb
or
ljmp
dec
adcb
popa
lods
and
xor
mov
fucom
loop
xchg
push
ret
stos
shrb
shr
adc
sbb
and
leave
fldt
sub
or
test
fs
sbb
push
inc
add
xchg
scas
sbb
rcrb
cmpsb
into
pusha
bound
pushf
orb
dec
sub
jmp
dec
lock
pop
xchg
shll
xchg
call
in
sub
xchg
xor
test
xchg
jno
add
ds
xchg
dec
ret
bnd
out
cld
pusha
push
jle
enter
fwait
inc
dec
or
popa
bound
adc
or
mov
shlb
push
push
ss
out
hlt
mov
xor
mov
jno
xchg
push
pop
incl
cld
iret
mov
and
lds
fstpl
in
enter
cmp
xorl
cs
aas
jle
pop
ja
test
rcll
cmp
pushf
push
sbb
jg
lock
push
cld
into
test
popf
cmpsl
jl
mov
mov
inc
jne
cld
jne
out
cmc
xchg
mov
cld
aam
push
push
and
sub
adc
jge
addr16
pop
lds
outsl
call
xchg
shll
stc
icebp
sub
mov
int3
mov
into
add
mov
call
insb
mov
jl
push
notl
movsb
notl
inc
push
and
xor
cmc
popa
cmovp
mov
pop
iret
and
repz
int
inc
xchg
insl
lods
xchg
xor
test
xchg
shr
data16
scas
jge
int
sbb
jge
mov
xlat
sbb
lea
iret
adc
add
inc
lea
mov
lcall
shr
clc
insb
andb
arpl
cld
mov
fisttps
test
pop
cmp
mov
mov
dec
ja
fdivr
rol
gs
lahf
movsl
rcrb
pop
sub
mov
daa
or
fnstenv
or
adc
int
dec
mov
xor
cmp
sbb
push
pop
lock
xchg
out
pushl
pop
lcall
push
add
iret
daa
mov
mov
popl
xchg
fmull
inc
add
inc
in
aas
sbb
lods
push
shrl
out
popf
mov
inc
xor
pop
pop
adc
inc
push
xchg
rcr
inc
jnp
cmp
jae
sub
dec
daa
sbb
sarb
dec
xchg
stos
fisubrs
mov
in
es
sbb
pop
mov
jg
out
fs
xchg
jne
ljmp
xor
loopne
jmp
fmul
imul
sub
sub
stc
enter
inc
ljmp
add
aad
jb
dec
jb
sub
and
dec
aaa
ficoml
outsb
aas
jl
stos
int3
in
push
push
xchg
jae
je
addl
mov
in
addl
add
push
mov
jne
jg
shlb
pop
mov
cmc
cmpsb
sbb
and
imul
jp
and
mov
out
jl
xchg
mov
lds
cmp
fsubrl
push
xor
xchg
fidivrl
das
enter
adc
cmp
pop
xchg
orb
xor
cmp
ffreep
or
sti
xchg
addl
bound
int3
inc
mov
pop
shrb
mov
push
adc
jbe
mov
dec
and
jmp
or
or
and
or
mov
xor
dec
fcoms
add
std
sub
mov
data16
sub
jo
repz
mov
dec
adc
mov
push
and
icebp
addb
aas
insl
testb
rclb
mov
add
and
fcmovnbe
push
aaa
rcrl
mov
in
and
push
scas
mov
cmp
lea
lea
sbb
sbb
lret
sbb
sub
push
sbb
push
outsb
popw
pop
test
inc
popl
mov
or
jnp
scas
addb
cmp
fs
xchg
insl
mov
ss
adc
into
fidivrl
mov
push
pushf
pushf
dec
inc
dec
std
pushf
sub
sub
push
inc
test
jne
loopne
loop
fucomi
incl
imul
je
in
sbbb
repz
cmpsl
or
sub
push
addr16
jecxz
mov
add
xor
in
call
std
push
shrl
sub
mov
scas
sub
stc
pushf
and
add
mov
jae
mov
in
jge
push
dec
pusha
ficoms
jl
roll
cmp
xchg
in
xchg
scas
dec
dec
sbb
pop
repnz
aas
stc
inc
add
shll
je
mov
movsb
xor
out
xlat
jae
aam
xchg
add
in
hlt
dec
jnp
repnz
mov
imul
inc
icebp
xor
mov
cmpsb
add
out
rcll
fcmovnu
adc
fsubrs
push
fwait
sub
aas
and
add
icebp
pop
mov
push
insl
imul
mov
and
jp
mov
fsubl
mov
jmp
das
push
iret
push
aad
add
adc
and
jo
xor
xor
shrl
aam
pop
mov
je
inc
or
adc
dec
mov
jmp
inc
flds
sbb
cmpb
mov
or
cmpsl
aas
lahf
insb
in
ljmp
stc
int3
mov
sub
add
pop
sub
jg
ljmp
dec
cmpsb
mov
mov
cli
or
out
adc
cld
xor
lds
shrl
dec
inc
dec
mov
sub
pop
sbb
mov
pop
mov
or
cmp
mov
xchg
adc
adc
loop
and
out
jmp
insb
test
filds
filds
and
mov
push
clc
aaa
push
negb
stos
adc
stos
mov
mov
mov
push
inc
or
and
cmp
out
movsb
cmp
sbb
mov
insl
jle
xchg
shl
adc
popa
dec
mov
sbb
repz
pop
mov
adc
fisubl
lods
jl
inc
adc
cltd
call
mov
ljmp
xorl
shll
enter
les
add
pop
sti
sarb
or
sbb
or
arpl
add
xor
xor
inc
xchg
insl
xor
cmp
mov
ja
rol
std
sub
xor
les
sub
dec
test
add
pop
cmp
sub
pusha
push
xor
pop
jnp
mov
shlb
aaa
mov
pop
mov
adc
push
xor
mul
int
fsub
pop
dec
sbb
dec
imul
push
jbe
add
cmpsl
cmp
das
leave
inc
jle
pop
adc
sti
jp
in
repnz
mov
push
out
pop
fildll
jno
sahf
sub
jb
test
fldcw
cmpsl
or
mov
ds
out
pop
xchg
outsl
test
repz
cmp
sti
popfw
out
add
popf
dec
jno
cltd
pop
adc
mov
mov
dec
scas
ljmp
xor
aad
shl
adc
xchg
fsubl
xor
dec
enter
mov
repnz
fisttpl
sbb
add
mov
cld
cmpsb
xor
inc
push
sbb
or
bound
mov
dec
sub
adc
jg
dec
cmpsb
loopne
cwtl
sub
ret
mov
or
fs
stc
das
enter
xor
adc
jle
xorb
out
push
mov
popf
push
xchg
jle
or
in
pop
shlb
addl
cmpsl
mov
xchg
incb
enter
les
cmc
xlat
lahf
mov
test
insb
sbb
cmp
or
xchg
or
jno
mov
sub
pop
scas
lahf
push
sub
cmp
inc
jae
stos
inc
fwait
stc
sub
int
outsb
sbb
cmp
sub
lcall
cmp
mov
dec
pop
adc
push
mov
xor
nop
add
lods
pusha
add
jmp
fs
xlat
xor
in
mov
cmp
adcb
repz
insl
mov
cmpsb
outsl
sub
outsl
push
jmp
imul
pop
lods
fsubrl
sbb
hlt
out
or
mov
cmp
mov
mov
jg
jo,pn
test
mov
fdiv
push
fcmovb
in
and
cmpsl
aad
sarb
pop
xchg
cmpsl
dec
out
scas
mov
pop
stos
rolw
cmp
pop
sbb
lds
lcall
hlt
fisttps
cld
ret
and
dec
lds
les
pop
lock
lods
fnstcw
push
xchg
int3
sbb
dec
insb
dec
inc
sub
cmp
popl
notl
les
adc
jle
inc
adc
pop
jp
dec
dec
sbb
leave
ja
cltd
adc
loop
mov
lods
ss
mov
lds
ret
mov
mov
fprem1
and
mov
mov
bound
inc
enter
pop
sbb
daa
jb
push
push
hlt
mov
sahf
dec
or
dec
mov
or
xchg
and
fnsave
xor
xor
mov
xor
jne
in
and
mov
inc
fs
cmp
testb
adc
or
aaa
xlat
movsb
jne
inc
stc
or
or
adc
mov
ds
cwtl
inc
xor
int
rcr
xchg
xchg
ret
xchg
xchg
outsl
addl
das
xor
or
pop
xchg
add
pop
fdivl
add
mov
nop
or
add
lock
fs
jmp
int3
mov
cmp
and
cmp
sub
cmp
mov
lds
or
add
aam
jmp
test
and
aam
or
dec
repz
out
sbb
repz
out
dec
mov
adc
mov
cmpl
rolb
jmp
jne
add
lds
mov
stos
ja
int3
pop
dec
mov
dec
xor
and
push
jle
lods
inc
bnd
rorl
dec
sub
loopne
mov
loop
into
cwtl
nop
or
mov
loopne
push
in
pop
push
aad
sbb
and
sub
mov
nop
mov
cli
or
sub
and
push
cmpsl
enter
cltd
or
mov
lock
out
in
pop
je
mov
jb
pop
mov
ds
cmpl
push
sbb
popl
mov
in
push
jo
cmpsb
call
ror
push
int3
outsl
mov
test
cmp
mov
les
js
ljmp
fsubrs
out
popf
fs
or
aam
into
jno
jnp
test
ljmp
sbb
hlt
adc
xor
push
popa
cltd
mov
inc
sbb
cmpsl
cmp
mov
scas
sbb
pop
inc
xchg
add
push
nop
push
mov
sbb
xchg
mov
sbb
iret
gs
push
clc
push
inc
mov
jle
mov
and
add
sub
push
add
jge
mov
jae
pop
inc
test
mov
bound
cmp
addb
stos
cmpsb
push
scas
pop
fwait
jp
cmc
jo
adc
mov
das
leave
push
adc
test
ret
cmp
mov
sahf
push
mov
loopne
jge
push
loop
xor
jb
add
or
movsb
push
jl
xchg
rcll
add
jg
inc
adc
or
aam
jns
inc
push
xlat
pop
and
in
inc
adc
sub
dec
mov
dec
sub
aas
fisubrs
inc
mov
sub
jp
lret
mov
xlat
cli
jo
sub
dec
xor
jp
xchg
jecxz
aam
lcall
cltd
imul
and
cmp
xor
movsb
js
cmpsb
pop
xchg
xchg
int3
aad
mov
cmpsb
mov
rclb
xchg
ss
imul
ss
push
out
jmp
dec
dec
iret
inc
inc
jge
or
mov
push
movsb
outsb
ss
adc
daa
cmc
pop
stos
adc
sti
jnp
pushf
lods
mov
sbbb
mov
pushf
xchg
cmpsb
add
jbe
cmpsl
sti
outsb
les
dec
mov
jge
sarl
push
sub
jecxz
pop
jne
mov
mov
jg
scas
divb
lds
adc
xchg
mov
insb
fisubrl
adc
and
ljmp
inc
int3
xor
add
push
adc
push
sub
jl
jecxz
mov
fsubrl
mov
jl
out
push
aas
sti
lret
lods
and
leave
inc
mov
mov
jge
popf
push
subb
xor
cmc
add
fisubrs
cmp
scas
inc
and
aaa
jp
xchg
add
and
dec
ds
sub
fcoms
lret
stos
xchg
or
add
add
lods
inc
sub
dec
mov
pop
insl
out
or
and
shrl
xchg
xchg
imul
adc
ljmp
xchg
adc
jns
sub
repnz
fidivl
fbld
pop
stos
push
stos
lea
insb
popf
std
and
stc
xchg
cmc
xchg
cmpsb
in
mov
les
hlt
jmp
test
inc
push
and
xor
inc
pushf
pop
fmuls
sub
jb
negb
cs
mov
mov
enter
ficoml
lock
xchg
push
cmp
jae
and
mov
mov
mov
mov
ss
scas
in
fnstenv
aad
sbb
adc
inc
jge
inc
mov
cld
xchg
in
movsb
iret
imul
es
mov
bound
inc
adc
inc
push
movsb
add
add
lds
and
movsb
iret
insb
jb
addb
cmpsl
inc
push
scas
adc
pop
addr16
push
inc
xchg
jnp
add
lret
sbb
jb
or
ja
mov
addr16
xlat
das
pop
mov
pop
push
repz
add
dec
into
mov
cmpsb
enter
ja
push
popf
in
mov
mov
and
dec
fsubl
add
shr
lret
aas
add
out
ret
mov
stos
push
sub
dec
add
add
jmp
jnp
inc
lcall
out
sbb
popl
shl
in
adc
mov
or
repz
inc
cmpb
in
push
stos
jb
push
mov
adc
sti
pusha
outsb
jl
pop
stc
jne
mov
lret
mov
in
and
and
shrb
cmp
mov
adc
push
push
outsb
enter
pop
push
push
dec
add
mov
aaa
fsubs
add
push
popf
scas
adc
pushf
xor
xor
inc
xchg
pop
xor
shll
push
jae
stos
int
lock
mov
das
fs
aam
je
adc
dec
pop
jns
out
push
inc
xor
dec
leave
jnp
dec
stos
xchg
hlt
outsl
clc
fwait
outsl
scas
cmp
rcl
mov
orl
sarb
mov
in
popa
cld
loopew
pop
adc
and
and
jg
inc
sbb
pop
fiaddl
lcall
arpl
pusha
adc
test
adc
sub
mov
dec
xor
in
cmpsl
push
sahf
inc
inc
pop
mov
jb
pop
into
sub
mov
sbbb
sbbl
lods
xchg
xor
xchg
xor
test
in
lods
inc
dec
out
jp
xchg
pop
jns
in
das
psllq
adc
jo
jmp
inc
xlat
and
fisttps
sti
push
dec
mov
arpl
pop
mov
data16
in
aaa
cmp
pop
cmp
pop
popf
mov
ljmp
aam
shrb
hlt
rorb
lods
add
push
adc
sbb
je
mov
pop
sti
inc
aas
popa
cmpsb
or
repz
loopne
ljmp
inc
xchg
pop
sbb
sub
jno
jle
lods
jno
stc
jmp
jo
or
mov
dec
mov
pop
cmpsb
mov
dec
jbe
sub
andb
lret
fidivrl
scas
lret
scas
ror
mov
sbb
lea
inc
pop
or
hlt
sbb
in
pop
pushf
lea
std
jo
mov
gs
movsl
xchg
fldenv
pusha
push
rclb
push
das
jo
gs
popf
add
pop
stc
stos
call
nop
sbb
pop
jns
inc
aaa
jo
jne
int
push
add
test
pop
das
stos
lret
out
jb
mov
mov
fcom
push
xor
fwait
sbb
out
test
fdivr
dec
int3
sahf
cmpsb
pop
popa
in
mov
lock
xor
jmp
out
arpl
les
push
enter
xlat
jle
out
adc
add
bswap
or
push
lods
arpl
arpl
ret
and
out
xor
ja
inc
lret
orb
add
mov
xchg
push
testb
inc
lds
mov
mov
push
cmpb
mov
cwtl
jns
jb
xor
aas
in
daa
aas
aas
xchg
pop
cmp
push
mov
xlat
js
xor
in
ret
cmp
mov
push
popf
dec
stos
or
fnstsw
xor
test
inc
dec
sub
xor
rcrb
cmc
dec
inc
cmp
jp
mov
cmpb
cmpsb
xlat
loopne
pop
xchg
xor
lods
and
outsl
inc
jnp
clc
shll
mov
push
mov
xchg
dec
stc
test
jle
or
movsb
mov
ficomps
mov
leave
call
lock
jle
mov
cmp
inc
mov
inc
pop
xlat
pop
mov
mov
stc
ljmp
sub
or
test
or
insb
and
cmp
or
out
gs
cld
jbe
sub
inc
xor
jg
adc
cli
xor
inc
nop
jg
mov
and
jmp
push
movsl
xchg
xor
add
lock
rol
add
mov
xor
int
mov
mov
pop
jno
adc
xchg
inc
fs
out
icebp
jp
mov
pop
sub
xchg
ret
stos
cld
cmp
pop
sbb
movsl
aam
je
popf
dec
sub
insb
push
push
jg
fdivl
lret
mov
sti
jne
test
mov
mov
ljmp
mov
or
jg
les
icebp
ja
testb
or
push
push
repz
negb
or
mov
fdiv
sbb
fnstsw
dec
pop
iret
cmpb
sbb
stc
dec
bound
in
call
shlb
cmpb
repnz
push
xchg
and
cwtl
mov
cmp
xor
add
insb
xor
or
or
scas
icebp
in
mov
std
mov
lods
cmp
pop
jle
push
pop
adc
imul
inc
sub
xor
dec
movsb
sahf
int3
cmp
pop
fwait
out
inc
test
fdivs
loopne
ja
dec
xor
mov
add
mov
clc
jne
int
xchg
sub
dec
insl
leave
cmc
fists
fistl
mov
mov
cmpsb
inc
lds
sbb
testl
aad
cltd
clc
mov
fcoms
divb
sub
movsb
push
ljmp
sub
mov
lahf
inc
fwait
popa
sub
mov
sbb
std
sbb
inc
sub
insl
and
out
test
frstor
mov
hlt
mov
jo
in
test
insl
jnp
lcall
mov
jge
movsb
daa
arpl
les
rclb
data16
sub
push
les
call
hlt
or
adc
cmp
or
push
jo
dec
xor
pop
lcall
mov
and
xchg
add
jb
push
scas
mov
add
andb
pusha
add
fadds
movsl
mov
cmpsl
sbb
push
push
shlb
mov
sbb
lock
popa
negb
mov
push
repnz
push
jle
leave
adc
mov
mov
push
iret
sbb
loope
or
cmpsl
mov
cmp
scas
inc
xorb
mov
lret
xor
dec
out
xchg
mov
cltd
arpl
outsb
lods
rcrb
xchg
pop
cmp
sbbl
xor
sub
dec
ret
cli
pop
mov
scas
jb
sbb
inc
inc
inc
pop
aas
flds
out
int3
jno
lock
into
movsb
adc
into
call
test
xlat
mov
mov
shrl
imulb
xchg
push
jmp
scas
pop
imull
pop
test
or
mul
into
mov
or
arpl
cmp
pop
cltd
loopne
ds
fisubs
cmpsb
outsb
popa
and
fadds
jecxz
mov
pop
movsb
or
cmovge
cmp
jmp
or
fst
call
es
das
sarl
subl
add
mov
movb
call
sahf
cmp
lods
in
rclb
out
xchg
dec
xchg
and
pushf
aas
insb
cltd
xchg
jle
fs
pop
jg
mov
xchg
dec
adc
pop
shll
add
xchg
pop
or
add
mov
decl
test
sub
pop
and
mov
into
mov
aas
gs
inc
and
out
sti
cmp
adc
in
popa
add
or
and
xlat
mov
out
jno
add
dec
jno
dec
add
faddl
divl
jbe
scas
roll
scas
or
pop
xchg
mov
sub
loopne
jbe
lcall
sbb
jp
sub
mov
or
pop
cmp
clc
push
xchg
fadd
cmp
xor
dec
fldenv
add
xchg
jl
in
ret
pop
sbb
daa
adc
lret
fnstsw
push
fwait
test
imull
or
out
jnp
in
scas
lahf
and
pop
push
push
stos
mov
mov
mov
mov
pop
stos
xor
stc
lds
xor
push
mov
sbb
jl
inc
or
push
inc
fwait
insl
dec
and
add
sbb
repnz
xchg
not
mov
jp
rcll
pushf
repz
movsb
ret
add
mov
int3
mov
mov
xchg
clc
pop
push
pop
adc
xor
push
jmp
xchg
stc
das
adc
xchg
inc
dec
stc
pop
lret
xchg
int
cld
movsl
and
jo
int3
jb
les
out
or
stos
xor
push
and
lds
push
clc
scas
cld
popf
dec
xor
add
sub
subb
xchg
mov
xor
pop
dec
in
repnz
lret
int
outsl
xchg
pop
xchg
in
lods
adc
addl
lret
outsb
fbld
mov
int3
mov
out
mov
fsts
outsl
je
dec
loop
lret
out
cltd
mov
int
daa
jp
out
enter
mov
addb
push
das
xor
cmp
sub
fcomps
xlat
fldcw
cld
test
jae
movsl
mov
jmp
loopne
adc
mov
or
add
test
cltd
fcomps
jb
outsb
xchg
insb
outsl
rolb
push
std
add
movsl
mov
out
or
pop
shrb
in
inc
sbb
stc
mov
and
mov
jmp
lods
mov
xchg
xor
inc
ret
mov
mov
jge
xchg
pop
sbbl
jae
enter
mov
shl
orl
js
xchg
cwtl
sahf
stos
out
add
dec
popa
gs
pop
push
stos
ss
fildll
mov
push
inc
fcoml
je
add
popf
leave
mov
fmuls
test
lahf
dec
mov
inc
jno
push
xchg
mov
add
push
pop
int3
push
xlat
mov
aaa
sub
push
jl
fisubrs
sub
jb
cmp
fdiv
pop
jae
ds
mov
and
push
push
sbb
xor
cmp
aaa
dec
mov
ljmp
mov
or
imul
xor
icebp
jnp
loopne
out
loopne
pop
pop
rcr
cmp
std
pop
xor
shrl
outsb
lods
loope,pt
jne
xchg
ss
lcall
push
outsl
mov
xorl
call
movsl
xchg
mov
dec
into
push
outsb
xchg
push
test
sbb
shlb
lret
pop
loop
pop
or
inc
fiaddl
mov
into
sbb
scas
jmp
inc
sub
adc
sbb
sub
add
adc
mov
test
fisttps
rclb
xchg
pop
dec
inc
xchg
das
mov
cmp
jae
popa
call
inc
sub
mov
shlb
jp
pushf
daa
mov
mov
lret
aaa
mov
out
sbb
mov
std
inc
push
and
lods
insb
xchg
jb
out
ret
push
pop
adc
cmpsl
lahf
sbb
mov
mov
sbb
pop
sbb
movsb
ja
and
test
popf
push
sbb
dec
jnp
sbb
push
mov
and
inc
fmuls
arpl
xchg
shl
stos
out
test
sbb
and
mov
test
std
pusha
dec
clc
mov
inc
js
xchg
int3
insb
inc
outsb
push
outsl
sbb
fdiv
sti
cmpsl
mov
ficomps
pop
test
sub
adc
aaa
cld
sbbl
jnp
aam
jle
pop
fisubrs
addb
cmp
ficompl
notl
cmp
das
xor
mull
js
lcall
fdivr
jle
or
xor
and
xchg
pop
mov
sbb
cs
and
xor
addl
and
mov
mov
mov
sbb
mov
xchg
xchg
adcl
pop
lret
cmc
adc
inc
pop
mov
cltd
and
imul
arpl
pusha
lahf
or
sbb
js
cli
mov
icebp
sub
inc
jecxz
mov
popa
pusha
or
test
push
jmp
ljmp
lea
repz
add
fsin
mov
mov
mov
cmp
add
sbb
jge
adc
dec
leave
or
xchg
mov
jl
les
mov
adc
test
test
sahf
push
and
pop
rclb
lods
xchg
dec
cmp
aaa
cmp
dec
mov
insl
mov
add
dec
stos
mov
ljmp
mov
jo
ret
flds
and
lcall
cmp
inc
pusha
ja
sub
mov
sub
push
mov
push
lcall
mov
mov
fwait
dec
sbb
enter
lret
in
jnp
or
iret
mov
adc
leave
lods
loope
and
jl
sarl
dec
lods
add
mov
rorb
or
imul
xor
jo
jne
nop
inc
mov
aam
into
test
jns
es
in
add
push
loope
mov
push
les
repnz
cld
add
mov
add
adc
ds
jno
push
lret
ss
aam
adc
sbb
test
mov
mov
inc
arpl
pop
and
jecxz
mov
mov
pop
shr
xchg
mov
into
adcb
mov
xor
mov
mov
mov
lods
pop
shlb
jns
xor
mov
pushfw
jae
lea
test
pop
add
pop
and
xor
push
repz
aaa
cli
jp
mov
or
cwtl
ljmp
shrb
adc
pusha
aam
pop
and
pop
sbb
lods
imul
mov
cmp
stos
jp,pn
iret
mov
test
fbstp
push
loope
xchg
or
js
fucomi
js
mov
jnp
pop
mov
adc
cltd
jne
jns
fadd
ja
add
repnz
jne
jns
test
lret
lahf
pop
cltd
mov
inc
add
inc
outsl
pop
in
and
add
inc
daa
dec
es
shr
push
and
out
add
add
out
cltd
or
mov
jnp
cltd
sbb
and
jp
js
mov
adc
dec
js
imul
jl
insl
arpl
mov
pop
jno
push
scas
inc
fdivs
mov
test
aaa
adc
jl
inc
sbb
xchg
pop
xor
lret
pop
mov
inc
aaa
mov
mov
and
mov
or
out
lea
pop
and
cmpsl
mov
mov
mov
jbe
loop
xor
movsl
jns
mov
out
mov
or
in
pop
jae
push
leave
cs
xor
jge
mov
push
jne
mov
or
out
pop
imul
mov
mov
add
nop
addb
lahf
push
pop
sub
daa
mov
xor
jno
dec
jne
mov
add
cmp
and
pop
ss
lea
sbb
jle
pop
lret
shrb
mov
dec
aas
xchg
push
test
sub
lea
into
ja
pop
fildl
jae
mov
jo
das
lret
inc
ret
xchg
dec
sub
mov
test
scas
and
aad
mov
addr16
push
xlat
jl,pn
addb
inc
gs
sub
sub
in
in
jg
jb
pop
cmpsl
lcall
cmp
lds
jns
push
xor
cmpsb
add
pop
rorl
jl
jle
sbb
cmpsb
imul
mov
arpl
cltd
scas
sbb
mov
les
dec
xchg
push
std
lret
mov
ss
jb
sbb
adc
std
add
rorb
push
bnd
push
push
mov
push
adcl
mov
or
mov
hlt
test
sub
adc
inc
scas
rcr
jle
mov
mov
fidivrs
jge
loopne
dec
aas
fdivr
mov
dec
xchg
xchg
mov
bnd
fcom
mov
fdiv
dec
rcll
fucomi
mov
dec
cs
sub
and
mov
fisubl
div
push
popf
aas
add
imul
shl
jne
in
mov
cmp
aad
mov
aad
sbb
les
hlt
dec
xchg
outsb
or
stc
add
mov
cmp
sbb
xor
call
ret
sti
and
mov
or
icebp
push
outsl
jae
push
push
sbb
mov
sub
enter
fwait
mov
sahf
cmpl
lret
cld
mov
popa
adc
test
mov
sbb
inc
repnz
stos
iret
dec
mov
pop
mov
es
dec
lret
jl
jp
mov
mov
fisubrs
dec
mov
jbe
outsl
fwait
dec
inc
test
xchg
cmp
mov
pop
sub
xchg
daa
mov
mov
sahf
dec
xadd
push
mov
push
mov
cmpl
jmp
inc
cmc
cmp
xchg
jmp
jb
mov
xchg
push
bound
mov
lahf
test
lret
call
loop
mov
pusha
xor
xor
movsb
test
inc
cmp
nop
pushf
std
xor
insb
mov
or
push
icebp
es
mov
cmpsl
push
out
lds
adc
int
mov
int
cmp
lret
jno
push
sbb
xchg
mov
pop
jecxz
repz
sbb
outsb
jl
aaa
adc
inc
sbb
dec
push
dec
inc
ds
popf
push
fwait
and
shrb
mov
mov
xchg
sub
jecxz
adc
lock
sub
inc
pop
cwtl
fs
and
mov
jae
in
sbb
pushf
jbe
and
mov
pop
fbld
pop
and
xor
out
cmp
lock
jp
ds
nop
sti
or
lahf
js
push
xor
mov
adc
cld
push
xchg
push
mov
lock
sbb
dec
ljmp
notl
pop
pop
push
std
cmc
jbe
or
fstpl
cs
stos
mov
lock
jg
push
adc
mov
cmp
mov
mov
pop
imul
jg
dec
int3
cmp
das
push
js
lds
test
pop
cmp
lret
dec
mov
pop
jo
test
bnd
fs
aam
and
push
add
lods
mov
fs
ja
add
jnp
mov
fwait
test
xchg
cli
cwtl
jns
stos
pop
je
inc
xchg
dec
cmp
idivb
jbe
in
or
sbb
pop
lret
jo
or
mov
aam
or
shrb
jl
push
jns
dec
jp
sbb
int
imul
into
jecxz
mov
pop
js
outsb
xchg
lcall
shlb
jp
jnp
out
dec
sbb
lods
dec
dec
repnz
add
cmp
testl
or
nop
cs
add
imulb
jge
mov
dec
mov
jmp
pop
cmp
cmp
xor
lods
popf
sbb
insb
orl
jp
mov
lods
inc
push
mov
clc
lea
and
lcall
jne
ror
jge
jb
out
jbe
sub
call
add
pop
out
hlt
add
xlat
into
lds
aad
lret
dec
pop
insb
hlt
lret
sbb
jl
rcr
jae
out
cmp
inc
sbb
and
adc
out
mov
push
roll
mov
andb
push
add
add
leave
cmpsb
aaa
add
out
sbb
push
sti
mov
jns
fadds
xorb
add
jno
sbb
dec
adc
xor
mov
lahf
stc
nop
test
jmp
xchg
mov
cmp
jmp
mov
adc
pop
jg
fmulp
sbb
mov
fdiv
or
push
scas
or
fwait
lods
mov
cli
xchg
or
push
mov
xchg
call
or
sbb
sub
into
xchg
mov
pop
jg
insl
in
notb
sbb
pusha
jp
test
out
mov
roll
add
cmp
pop
sub
iret
cmp
jnp
push
test
push
jb
push
mov
sub
and
xor
aad
push
mov
inc
inc
test
push
cmpsl
adc
adc
inc
scas
pop
push
bound
inc
add
js
shlb
xor
lret
test
fstl
pop
out
stos
inc
jne
popf
insl
xchg
dec
dec
imul
test
insb
sahf
mov
jns
lea
jae
or
and
rol
icebp
test
add
add
clc
lods
fidivl
test
xor
cmc
stos
nop
push
stos
fisubs
loope
addr16
cwtl
add
test
xor
in
popf
inc
es
div
dec
sbb
adc
jae
loopne
xchg
jno
pushf
xchg
xor
and
cmpsl
push
push
stos
xor
and
and
cmpb
pusha
jns
cmp
stos
and
in
mov
outsb
and
push
jb
lods
adc
add
or
and
and
push
orb
dec
dec
jno
andl
pop
mov
out
icebp
outsl
and
fwait
nop
imul
stos
sbb
mov
pop
cmp
lock
mov
jle
dec
fimull
ficompl
mov
xchg
mov
out
jae
dec
je
hlt
addb
cmp
outsb
adc
add
cmc
loop
imul
mov
dec
insl
out
dec
cmpsl
scas
ljmp
and
scas
sub
pop
fdivs
sub
jecxz
mov
inc
cmpl
les
adc
cmp
ds
cmpsl
enter
adc
lcall
mov
cmpsb
fstp
fiaddl
or
add
lret
mov
les
lds
xor
sbb
fistpll
push
sub
cmp
jne
mov
mov
orl
jp
loopne
jns
dec
shl
push
inc
insl
mov
adc
dec
cli
adc
in
aam
dec
dec
lret
daa
mov
iret
call
jne
out
and
outsl
movsl
lcall
mov
stos
dec
rcl
cmc
sti
mov
dec
imul
and
mov
push
jo
jb
out
je
pop
je
lods
scas
shrl
or
sub
mov
loope
insl
in
rclb
mov
lods
push
mov
inc
sbb
outsb
lods
mov
fwait
push
or
lea
xchg
xchg
lods
sub
fstps
push
es
jns
sub
stc
int3
in
shll
push
outsb
lret
sbb
jecxz
dec
mov
jb
mov
stc
jmp
and
lahf
mov
lahf
mov
jmp
adc
in
push
sub
pop
ss
mov
mov
hlt
outsl
call
sub
in
cltd
adc
sub
test
fidivrl
inc
leave
out
dec
cmpsl
sub
iret
leave
xchg
lock
mov
xlat
mov
int
mov
jnp
sbb
xchg
call
add
xor
cmpsb
xchg
fsub
inc
pushf
adc
sbb
pop
lcall
leave
mov
in
mov
sub
dec
jl
dec
pop
test
jp
dec
lea
stos
fwait
sbb
pop
cmp
adc
lods
mov
in
or
cmp
or
fistl
ja
xor
jge
test
xchg
pushf
sub
mov
dec
rcr
aad
jle
push
loopne
mov
mov
pop
outsb
pop
ret
sub
iret
push
add
dec
or
mov
adc
data16
push
push
xchg
dec
mov
push
sub
xchg
pop
psllq
push
call
stc
or
mov
ljmp
mov
cli
mov
int
mov
mov
scas
loopne
pop
es
out
dec
stos
inc
in
mov
inc
xchg
ja
xor
pop
dec
cmp
mov
mov
and
loope
subl
lret
adc
shl
adc
mov
fs
push
in
sbb
repnz
outsl
icebp
sbb
and
lock
stos
cmpsb
add
jne
call
and
not
gs
mov
rorl
into
inc
jo
mov
mov
invd
push
xchg
pop
shlb
outsl
outsl
sub
mov
ret
leave
cmp
inc
xlat
inc
mov
inc
scas
jb
jno
push
pop
das
and
mov
xchg
xor
test
dec
shrb
decl
inc
xor
xor
sub
jb
out
lret
jne
or
in
ja
outsb
xlat
out
sbb
mov
xlat
leave
push
rcrl
fnstsw
adc
mov
sub
xchg
adc
mov
xchg
gs
mov
outsl
jns
cmp
mov
fucomip
xor
cmp
jl
repz
push
jl
cs
cwtl
fxch
inc
aas
loop
loopne
jg
nop
sti
pop
sbbb
dec
push
pop
xchg
es
scas
xor
jne
dec
and
loop
lods
aas
push
daa
rcrl
add
cmp
mov
or
or
scas
in
xor
aas
aaa
test
mov
mov
xchg
repz
pop
mov
cltd
inc
std
push
pop
add
adc
adc
sbb
or
push
jmp
subb
loopne
mov
dec
lods
push
fidivrl
mov
int3
fnstcw
jl
lcall
jae
push
in
dec
xor
add
stc
das
xchg
les
pop
mov
mov
call
mov
bound
cs
fidivs
arpl
pop
popa
fidivrl
push
add
and
dec
add
mov
cmp
xchg
lods
addl
shll
cs
add
xchg
repnz
dec
adc
iret
sub
cpuid
test
adc
xor
fwait
mov
out
shrb
xchg
xchg
movsl
push
dec
mov
jbe
ret
fsub
inc
xor
mov
enter
add
mov
or
xchg
sub
adc
cmp
inc
je
lahf
js
and
loopne
push
xor
fildl
cwtl
jmp
cltd
mov
mov
dec
mov
pushf
lret
xor
mov
inc
je
fwait
ja
push
imul
pop
pop
je
and
and
cmpsb
rorl
mov
pop
std
aad
out
lods
test
jnp
icebp
add
je
fnsave
pop
jle
push
imul
mov
cmp
xchg
leave
insb
push
cmpsl
popa
arpl
pop
pusha
cs
mov
pop
and
popf
push
mov
into
lock
lret
and
push
ss
adc
sub
out
mov
addr16
fisttpl
pop
lcall
mov
imul
sub
rclb
and
aaa
mov
cmp
outsb
aam
in
lock
movsb
data16
and
dec
dec
xchg
or
sbb
mov
inc
loope
movsb
mov
inc
in
fldl
jnp
cmc
fbld
daa
mov
popf
cmp
sti
sbb
sub
jge
cmp
testb
xchg
xor
jae
ret
pop
dec
je
or
movsl
mov
or
cltd
bswap
jno
scas
sub
ljmp
mov
lea
inc
pop
gs
push
shlb
scas
in
mov
dec
popa
jecxz
push
popf
mov
les
das
into
mov
stc
hlt
and
imul
dec
pop
mov
adc
pop
jmp
inc
and
mov
dec
dec
sbb
mov
into
pop
fs
scas
xchg
inc
adc
mov
loopne
js
push
jmp
jnp
lods
xchg
dec
dec
jle
push
pop
xchg
dec
rcl
push
fstp
push
imul
xor
in
data16
mov
das
dec
inc
push
in
xchg
fwait
cmp
stos
movb
add
lock
mulb
push
icebp
adc
mov
es
repnz
int
pop
cmp
rclb
sub
cmpsb
fsubs
retw
and
insl
test
dec
addr16
cld
mov
adc
cmp
push
xchg
int3
jns
shl
fnstenv
pushf
data16
fldl
mov
add
sbb
sti
call
push
fwait
cmp
sub
sub
jmp
mov
mov
push
dec
sti
mov
gs
mov
mov
pop
les
or
dec
mov
mov
daa
adcb
out
mov
inc
js
sbb
mov
shlb
lcall
push
scas
mov
in
je
pop
push
js
xchg
pusha
xchg
xchg
sub
jb
mov
insl
jmp
sbb
addr16
sub
jo
add
test
add
add
add
mov
rol
rclb
aas
inc
push
mov
loop
mov
sub
outsb
ret
mov
dec
scas
fisubl
xor
mov
mov
lea
cltd
test
mov
jmp
jne
or
cmp
xchg
mov
clc
sub
aaa
mov
hlt
shrl
orl
sub
mov
in
pop
xlat
mov
xor
mov
mov
adc
pushf
cmp
inc
mov
fwait
xor
lods
rolb
rcl
loopne
aas
int
insb
pop
dec
lock
pop
mov
cltd
pop
test
fisubs
mov
jne
xchg
adc
mov
daa
loope
push
pop
fs
mov
pop
aaa
adc
lods
pusha
jl
push
dec
fsubrl
sbb
repz
lods
and
mov
mov
inc
imul
in
sub
cmp
pop
xchg
loop
pop
fs
add
stc
test
lahf
mov
or
cmp
xchg
xor
sub
das
jge
dec
mov
loope
add
push
mov
adc
je
cmp
das
mov
push
mov
idivl
xchg
and
cmp
or
xor
xor
xor
out
or
pop
mov
jle
jne
dec
sbbb
scas
or
sub
and
mov
fsubp
sbb
mov
xor
and
aas
cld
jp
push
xchg
repz
add
dec
push
mov
cld
mov
fidivrl
cltd
ror
cmc
xchg
push
xchg
or
in
mov
sbb
xchg
sub
and
mov
mov
out
xchg
xchg
cmp
mov
es
xlat
mov
pop
dec
je
je
push
test
mov
mov
or
outsb
notl
pop
fists
ret
cmp
outsb
mov
insb
stos
or
cltd
shr
mov
mov
cmc
xor
dec
in
ljmp
daa
stos
jp
pop
mov
leave
in
ret
jge
sub
xchg
repnz
mov
push
shlb
out
mov
hlt
pop
mov
cmc
jge
mov
cmp
cmp
pop
sub
cwtl
jle
sarb
addr16
lods
xchg
pop
movsl
mov
inc
iret
or
lods
insb
mov
inc
andl
jecxz
add
sbb
pop
repz
xor
push
or
je
dec
std
dec
mov
lcall
jb
pop
lock
bound
sti
fwait
test
dec
fdivs
xchg
adc
imul
call
out
les
or
mov
orl
test
sub
sarl
xor
dec
loope
aam
add
and
and
arpl
cltd
sti
outsb
xchg
test
iret
add
jl
dec
and
popf
or
mov
xchg
mov
les
aas
fldt
or
jge
dec
out
pop
rcr
sbb
popa
pop
cld
test
sbb
arpl
push
cmc
iret
outsb
adcl
push
insb
hlt
push
pushf
ds
out
mov
fsubl
aaa
xchg
in
cs
dec
jecxz
rorl
and
jmp
mov
cmpsb
aaa
les
or
adc
sbb
jbe
aaa
scas
dec
test
xchg
mov
jae
lahf
mov
adc
cmp
and
dec
pop
and
mov
mov
xlat
mov
jbe
sbb
xchg
std
inc
stos
fwait
ljmp
pop
sbb
mov
sub
xchg
insb
dec
test
outsb
lahf
leave
cmp
pusha
inc
adc
fs
sub
mov
imul
inc
push
dec
mov
lea
clc
sti
imull
and
cmp
insb
fwait
pop
hlt
add
mov
pushf
popa
popa
xlat
es
or
mov
mov
shrl
stos
add
cmp
scas
sub
sbb
imul
jne
les
rcrl
out
push
sarb
xchg
push
mov
mov
or
icebp
popa
xchg
sub
out
sbb
mov
jno
iret
es
jle
mov
mov
dec
sub
mov
xor
mov
mov
test
mov
sbb
add
cwtl
repz
xor
test
xor
adc
xor
add
je
push
popa
xchg
mov
dec
sti
cwtl
adc
fldt
mov
or
pop
aad
adc
mov
mov
ret
push
sub
dec
scas
shll
aas
or
std
adc
insb
push
clc
add
loop
xchg
mov
xor
cwtl
mov
inc
cmpsl
sbb
jns
and
shl
ret
add
inc
out
stos
lahf
inc
es
ret
inc
pushf
push
fs
mov
sbb
or
dec
sub
repz
cs
popa
test
pop
or
lds
mov
adc
push
pop
mov
repnz
nop
or
mov
xor
sti
mov
push
push
xchg
rorl
daa
pop
scas
dec
mov
mov
cmp
xor
mov
ret
aaa
iret
sbb
testl
mov
outsb
insb
dec
in
jno
push
push
in
add
rolb
pushf
into
subl
adc
lcall
dec
rcrl
cltd
nop
mov
fwait
fs
mov
pop
inc
movsl
xor
mov
push
inc
add
adc
enter
addr16
fs
inc
mov
inc
push
aas
xchg
xchg
test
dec
cmp
sti
insl
push
inc
mov
mov
jo
fbstp
lret
push
xchg
es
test
xchg
xor
lahf
imul
call
sbb
dec
dec
jecxz
scas
or
xor
subb
scas
sbb
pop
adc
sti
sub
adc
les
stc
and
loopne
imul
lods
or
pop
add
mov
push
stos
sahf
push
pusha
pop
lahf
lret
lods
jb
mov
and
scas
mov
lods
jns
pop
out
adc
push
je
xchg
clc
adc
popa
adc
ds
cmp
mov
std
test
aad
arpl
or
lcall
push
adc
dec
push
out
push
shrl
xchg
adc
xchg
pop
stc
jecxz
push
lea
and
cld
cmp
mov
pop
imull
lahf
subb
xor
cmpsl
loopne
sbb
dec
or
sbb
xchg
jns
push
lods
scas
push
rorb
cld
leave
push
xchg
push
pop
sahf
and
add
sahf
cld
in
or
movsb
aam
mov
es
sub
pop
testl
cmpl
mov
push
dec
and
stos
aam
mov
mov
cmp
adc
dec
push
xchg
and
jp
jmp
or
leave
rsm
add
mov
movsb
divb
dec
psadbw
add
movsl
xchg
push
out
fcoml
mov
ljmp
jns
mov
and
mov
inc
mov
imul
lret
sbb
ljmp
in
and
mov
jb
mov
stos
rcr
or
inc
stos
out
fildl
cwtl
mov
stos
out
adc
push
push
add
push
sub
jecxz
dec
or
or
in
mov
xor
popa
push
pop
dec
ja
lock
lock
mov
fsub
and
dec
or
or
stc
fs
dec
sar
inc
fwait
clc
xchg
test
repnz
dec
rolb
lret
or
cmp
lcall
pop
sub
cmp
pop
into
mov
push
imul
cmc
sarl
pop
adc
jo
mov
and
mov
jge
mov
daa
mov
add
imul
xchg
in
lahf
aas
mov
loope
or
cmpsb
sbb
and
mov
fldcw
push
fmul
adc
mov
test
dec
addr16
cmp
adc
mov
pop
jg
jb
loopne
jg
mov
in
ret
insb
mov
dec
sub
mov
mov
imul
xor
fdivs
aaa
and
pop
cmp
xor
sub
fs
popa
fstpl
inc
cmp
add
rorb
imul
repz
cmp
mov
mov
pusha
mov
leave
and
test
and
cmc
lds
lds
mov
sahf
inc
aas
mov
aam
push
adc
fsubrs
sbb
nop
push
push
jo
sbb
jle
loope
or
mov
mov
dec
add
sahf
mov
mov
cli
sbb
sti
push
adc
xchg
popf
fidivrl
div
ss
push
aaa
push
lret
pop
adc
mov
adc
dec
call
repz
inc
dec
mov
sub
cmp
sub
sbb
negb
pop
adc
sahf
in
pop
shll
aaa
adc
adc
test
inc
stos
jg
int3
cwtl
popa
iret
sub
test
jns
xor
repz
fistpll
lcall
sub
and
and
outsl
movsb
xorl
dec
les
xchg
jmp
jbe
fwait
sub
test
arpl
insl
push
adc
test
lahf
cwtl
cwtl
lock
imul
mov
add
and
mov
scas
mov
or
es
jne
ja
and
test
repz
pop
sbb
and
or
in
push
or
jecxz
adc
mov
lods
jge
cmp
loopnew
pop
pop
fidivs
xchg
xchg
push
mov
mov
push
out
dec
or
or
and
xlat
add
sub
arpl
xor
mov
add
idivb
scas
aas
mov
mov
jb
fiadds
pop
into
test
pop
test
cmpsb
add
pop
incb
iret
sbb
sbb
cwtl
pop
push
pop
jg
popf
jge
jecxz
push
mov
jns
std
fnsave
jmp
loop
repz
gs
outsl
push
test
push
outsl
pop
shl
mov
frstor
inc
into
jne
call
ja
das
outsb
std
imul
inc
inc
pop
ds
mov
sysexit
pop
jne
push
testb
out
xchg
rol
xor
mov
lret
stc
pop
sti
ss
adc
dec
mov
pop
in
ja
jg
fimull
sub
xchg
int3
stos
jns
ljmp
or
imul
aam
sbb
in
test
xchg
push
cltd
ljmp
gs
imul
inc
sbb
cmp
imul
push
dec
pushf
push
inc
cmp
or
cs
lret
mov
out
dec
pop
and
mov
and
ja
iret
pop
repz
rolb
xor
mov
xchg
xchg
push
es
les
int3
push
lret
and
outsb
lret
inc
mov
mov
mov
xor
pushf
sbb
cmp
ret
inc
mov
daa
fs
mov
adc
xor
jae
cmp
imull
cmc
and
and
fdivr
push
mov
ret
in
push
aad
mov
sub
cltd
mov
loopne
mov
and
push
jp
xor
movl
es
or
cmp
fwait
xor
push
mov
or
pop
cmc
subb
jle
mov
inc
jg
and
pusha
dec
xchg
sti
push
fcomi
mov
add
test
aas
xchg
dec
xor
insl
mov
sti
mov
xor
push
add
mov
mov
icebp
xlat
out
cmp
or
stos
jle
shll
test
lea
mov
jb
mov
lahf
jle
xor
and
lds
fdivl
mov
mov
test
mov
mov
call
dec
or
mov
pop
cmc
out
pop
scas
in
hlt
sbb
pop
jne
add
mov
mov
sub
dec
nop
adc
and
xor
fildl
leave
pop
and
rorb
mov
fadd
movsb
push
das
xor
scas
lcall
aas
in
adc
out
mov
cmpsb
jns
fnstsw
loope
mov
or
mov
dec
mov
or
bound
sub
and
mov
or
xor
add
mov
idiv
stc
mov
mov
fadds
pop
sbb
mov
lock
hlt
rorb
inc
mov
fwait
test
aad
dec
bnd
sub
aad
insl
in
mov
xchg
pop
cli
sub
imul
shlb
cmc
fs
jecxz
loope
pop
inc
xchg
repnz
repnz
xor
xchg
xlat
xlat
pop
xchg
xorl
push
mov
js
push
ret
or
jmp
push
cmp
mov
icebp
loop
pop
jne
dec
xchg
inc
mov
mov
shl
xchg
test
xor
dec
mov
sbbb
inc
xchg
or
jmp
xchg
xchg
stos
jg
es
cmp
pop
js
xchg
call
push
fs
mov
mov
lock
push
daa
dec
fistl
or
hlt
dec
dec
jb
into
daa
das
call
outsl
adc
pop
push
sbb
lret
loope
adc
and
cld
dec
inc
inc
adc
ljmp
push
dec
and
mov
sbb
int
int
cmpl
cltd
cmpsb
adc
loop
mov
or
daa
jmp
sbb
xor
cmp
cmc
jne
mov
mov
push
jmp
mov
int3
dec
sbb
sub
mov
fstpl
lret
addr16
subl
mov
push
xlat
inc
mov
xor
sbb
or
inc
pop
stc
xchg
aad
cs
xchg
xor
out
enter
cmp
cmp
fdivl
inc
cmp
shll
or
out
add
mov
sti
push
cld
gs
adc
cmpsl
loope
mov
mov
xor
dec
leave
push
jl
sbb
shl
pop
xor
xor
or
fiadds
bound
add
xchg
mov
sub
or
leave
shlb
jns
mov
add
jbe
push
push
mov
psubw
pop
aas
sbbl
xchg
enter
xor
rolb
and
pop
cmp
xor
sub
test
pop
mov
popl
pop
loop
add
aaa
out
sbb
jb
sbb
mov
std
mov
dec
dec
jae
mov
mov
test
jnp
adc
in
gs
or
sub
out
out
pop
mov
aaa
inc
cmpsb
sub
mov
adc
or
mov
mov
xlat
jae
dec
pop
sub
add
inc
test
mov
testl
test
ret
lahf
lea
xchg
and
sbbl
cmpsl
add
pusha
cmp
movsb
rolb
push
das
lahf
mov
psllw
xor
fwait
jno
xchg
mov
or
add
inc
or
imul
sbb
loopne
mov
mov
mov
icebp
mov
lea
ja
push
jecxz
ds
es
das
add
jb
inc
jg
fdivl
inc
mov
sub
lods
cld
pop
adc
leave
rcl
int
out
fwait
dec
les
pop
mov
push
dec
rcrb
xchg
shr
bound
imul
fdecstp
push
in
pop
mov
mov
sbb
cmp
or
or
mov
push
js
jg
pop
insl
xchg
test
mov
mov
dec
push
xchg
sahf
jp
add
dec
mov
push
and
insl
cltd
loope
sub
xor
jno
je
mov
fnstenv
imul
fiadds
popf
es
cltd
pop
clc
push
loop
fdivr
sub
fwait
aad
and
stos
ret
add
out
mov
cmpsl
subb
int3
outsl
ret
sbb
aam
push
mov
sub
loop
cmp
mov
or
mov
mov
out
push
mov
inc
or
xchg
gs
rclb
push
std
lcall
ljmp
andl
cs
jae
jmp
cmpl
jb
cs
das
pop
mov
push
lsl
push
imul
inc
lret
pop
ficomps
mov
aam
cltd
pop
sti
xchg
mov
int
mov
jge
fs
fdivs
rcrb
into
in
push
or
lock
mov
jb
ss
int3
in
mov
sub
mov
aas
frstor
and
adc
sub
sub
adc
mov
xchg
xchg
push
pushf
in
adc
in
mov
mov
aad
mov
push
in
or
or
mov
xor
push
enter
jbe
sbb
rcrb
movsb
jb
cmpsl
jno
scas
outsb
and
loop
cmp
add
call
or
daa
idivl
dec
fistps
jae
mov
into
mov
push
rclb
jns
mov
fildl
sbbl
xor
fwait
xor
shl
sti
test
lea
xchg
pop
aad
or
cmpsl
pop
jae
out
lods
in
arpl
push
pop
mov
push
pop
lds
cmp
cmp
sub
and
and
aad
sub
jne
add
aaa
fwait
mov
jge
add
push
mov
mov
xchg
mov
add
sbb
mov
fcmovnb
fisubl
jmp
adc
cli
fwait
arpl
fwait
mul
add
dec
xchg
inc
pop
orb
inc
call
mov
dec
xor
std
gs
insl
pop
scas
daa
lretw
je
add
dec
adc
prefetch
mov
xchg
movl
fwait
test
ja
mov
fcomp
and
jmp
or
add
push
push
test
push
clc
in
or
int
loop
sbb
and
jo
dec
mov
lods
cmp
mov
xor
mov
or
cmc
adc
leave
jns,pt
roll
roll
mov
lods
sub
fadds
mov
mov
ret
jge
in
jmp
stc
fidivrs
mov
in
adc
outsb
faddl
push
cwtl
fwait
jge
mov
pop
cs
cmp
popa
rcrl
out
jnp
test
mov
test
imul
xor
je
int3
mov
pop
repz
adc
lret
pop
xchg
xor
or
testb
mov
inc
ljmp
pop
inc
ds
test
lods
jo
out
js
jecxz
nop
mov
add
jge
imul
lret
das
mov
in
jp
dec
add
jle
stos
pop
jecxz
dec
popf
jae
sbb
loopne
lock
lods
sbb
cltd
or
adc
jo
fdivs
mov
mov
pushf
inc
pop
dec
push
adc
xor
jmp
and
jecxz,pn
cmpsb
mov
push
xor
pop
push
inc
and
xchg
or
lahf
aas
ds
hlt
rcrl
test
jl
pop
push
jnp
cmc
dec
mov
popf
pop
icebp
xor
mov
imul
mov
gs
push
aas
je
mov
add
add
mov
push
sub
fmul
pop
inc
xchg
add
jno
sbb
cmc
ljmp
cmp
mov
sub
push
mov
cmp
in
mov
adc
frstor
mov
mov
jg
mov
insl
jae
outsb
sahf
add
jecxz
or
mov
push
push
or
dec
mov
js
mov
xchg
jl
stos
push
dec
pop
sub
int
add
shll
xchg
stos
inc
push
insw
and
adc
rcrb
inc
xor
sbb
add
clc
daa
and
or
mov
adc
fstps
nop
rcll
insl
jae
rorl
idivb
aas
repz
mov
xchg
iret
and
push
push
mov
xchg
clc
std
mov
mov
ja
mov
jns
mov
inc
cmp
insl
cmpsb
dec
or
inc
pop
cwtl
lret
nop
in
das
pmulhw
inc
sub
imul
add
pop
xchg
dec
or
dec
and
rorb
or
shll
cmp
jle
push
pushf
cld
in
es
mov
mov
je
pop
pop
clc
mov
loope
jmp
testl
or
push
mov
movd
jae
mov
pop
jg,pt
fwait
add
inc
add
mov
xor
cs
inc
jl
fsubl
sbb
mov
lahf
or
fsubl
leave
inc
xor
fisubrl
imul
test
fnstenv
sbbb
push
ja
add
jns
xchg
stc
test
mov
add
shl
sbbb
sub
pushf
stos
jp
das
sub
pop
mov
ljmp
inc
movsb
mov
cmp
mov
cmc
sti
inc
or
or
push
mov
lock
push
mov
adcb
cwtl
cld
and
fs
cld
pop
or
popf
jmp
addr16
lods
xchg
les
sub
jp
sahf
mov
xchg
loope
jno
xor
xor
lock
in
sti
pop
lret
daa
inc
jle
roll
inc
shrl
bnd
cltd
je
fs
adc
cld
repz
xchg
rorl
xchg
fcoml
mov
imul
sarb
pop
clc
and
pop
mov
inc
pop
adc
in
mov
cmp
repnz
xchg
subl
sbb
xchg
mov
enter
adc
cs
rcr
cmp
mov
mov
mov
neg
inc
xchg
movsb
or
outsl
in
push
or
out
js
scas
imul
test
fwait
sar
sbb
mov
push
and
inc
outsl
sub
sub
jb
pop
mov
push
jecxz
sbb
and
mov
lret
out
mov
clc
cli
add
dec
out
daa
movsb
inc
fs
add
mov
es
and
jo
and
and
push
mov
and
test
pop
ss
lahf
cwtl
mov
dec
xchg
push
inc
mov
enter
je
pop
bound
pop
std
sub
push
xchg
adc
mov
lret
jbe
xchg
xchg
out
jecxz
mov
shl
call
lds
test
loope
xor
popf
out
inc
mov
cli
and
pop
test
cmpl
aam
call
push
add
pop
xchg
es
popf
pop
adc
lret
and
push
push
mov
pop
mov
data16
test
push
xor
push
push
insb
test
mov
insl
or
int
push
mov
shll
fsubrs
loop
and
cmp
pop
mov
cmp
xchg
es
add
test
stos
fsubrs
xchg
out
arpl
xor
cmpsb
sahf
mov
out
sbb
sub
gs
add
fisubrl
lds
lds
jge
sub
mov
dec
int
lahf
jo
sub
pusha
les
leave
addr16
int
mov
xor
pop
or
xor
daa
sbb
xor
ja
mov
push
sub
xor
stc
pushf
ljmp
sbb
sarb
pop
cli
rclb
outsl
add
add
imul
clc
jb
fsts
xchg
cmp
push
bound
int3
call
ret
rcll
jg
push
dec
adc
roll
inc
mov
pop
push
in
mov
lock
jge
dec
out
add
insl
fwait
aaa
jnp
xchg
loop
xchg
mov
fisubrl
lret
dec
sbb
or
adc
xchg
adc
adc
outsb
xchg
ret
dec
or
fwait
push
inc
cmpsl
into
popf
sub
dec
jne
fcompl
in
sub
or
mov
inc
xchg
dec
sub
mov
mov
inc
mov
repz
xlat
cmp
jge
loopne
xor
ret
sub
xchg
jecxz
cmp
xchg
jmp
aas
jg
std
insl
movsb
mov
xor
add
push
push
dec
push
je
popa
in
dec
and
jge
leave
cwtl
pop
lods
iret
js,pn
dec
jecxz
je
jecxz
xchg
pop
or
mov
adc
int
xchg
lods
into
fs
outsb
xchg
sbbl
stos
inc
test
movsb
fcoml
xor
fildll
lea
leave
loop
movsl
push
pop
inc
enter
fmul
popa
ret
add
mov
fwait
sub
mov
popf
cwtl
repz
push
std
jmp
dec
inc
lahf
or
sarb
xlat
mov
test
je
ret
mov
out
jg
bound
xchg
lahf
mov
imul
in
xlat
lret
enter
xchg
leave
sbb
xorb
jbe
xchg
jmp
pop
push
mov
mov
rorb
add
addb
je
jp
xchg
out
push
fmuls
fmull
mov
lods
ja
add
insb
mov
mov
cmp
push
push
cmc
int
repz
dec
fadds
jbe
cmp
repz
fisttps
push
mov
out
movsb
out
dec
ja
or
fidivrs
iret
push
cmp
adcl
cmp
cli
std
cmp
jne
or
fsubrl
pop
mov
into
enter
fnsave
jns
test
cmc
xor
mov
pop
xor
add
les
xchg
aam
in
pop
fmull
enter
sbb
xor
loope
xchg
pop
inc
sahf
xchg
mov
push
jns
mov
out
cmp
daa
jg
sbb
sbb
sub
cmp
gs
imul
int
sbb
mov
xchg
add
gs
add
leave
clc
sub
testl
test
aas
and
adc
shrl
lea
mov
mov
push
jg
adc
jnp
add
cmp
push
stos
into
pop
ss
or
mov
mov
aam
dec
sub
jg
out
out
mov
faddp
lds
fstpl
jbe
mov
jmp
lock
adc
jge
ds
xchg
mov
cld
das
ret
jg
fldln2
inc
or
fldt
stos
sub
into
inc
push
mov
loopne
cli
in
sub
repnz
int
insl
mov
lcall
stos
push
jle
imul
jo
dec
shl
add
push
dec
cltd
inc
pop
cmp
out
cwtl
negl
jne
aas
xchg
shlb
ret
scas
add
and
fidivl
jns
lea
out
xor
dec
or
push
cmpsl
mov
mov
lds
mov
inc
lea
mov
jmp
and
call
int
arpl
mov
push
cmpl
pop
mov
div
mov
sbb
mov
and
lea
push
in
adc
or
daa
add
dec
add
sahf
pop
push
xor
add
adc
sub
pop
push
popf
pop
je
inc
js
or
movsb
psubb
xchg
arpl
sub
push
lret
push
jmp
xchg
out
jp
ret
mov
lcall
scas
rorl
lock
aam
inc
mov
hlt
or
bound
jg
xchg
cld
and
out
stos
adc
pop
inc
lcall
popf
push
push
jg
or
jne
lret
inc
jo
pop
push
ljmp
cwtl
inc
sbb
inc
out
dec
sub
daa
out
lds
into
cmp
outsb
adc
xchg
and
adc
dec
lock
sbb
je
sbb
popa
das
pushf
out
cmpsl
lahf
fsubrs
leave
test
cs
pop
fnstsw
or
cmp
dec
jns
jns
das
mov
xchg
lods
xor
sbb
scas
sbb
xchg
pop
add
sub
shrl
enter
fstl
bound
dec
mov
int
push
push
in
pusha
push
push
push
sub
filds
cs
repnz
in
mov
icebp
or
mov
mov
in
aam
fcomip
sbb
in
std
fildl
push
push
xchg
xlat
adc
into
pop
icebp
cltd
mov
stos
imul
adcl
ss
pop
addl
loope
push
mov
jo
add
lret
adc
push
mov
cltd
mov
xchg
xchg
negb
out
cmp
mov
mov
inc
sub
xchg
mov
dec
call
popf
movsl
jns
jbe
aas
in
mov
push
push
sbb
fcmovnbe
sub
rolb
leave
inc
pop
push
pop
jnp
lret
xor
addl
jmp
or
js
pop
lods
f2xm1
mov
sbb
lock
and
dec
shl
dec
aam
cmpsb
xor
mov
sahf
insl
inc
mov
dec
sbb
sub
loope
and
mov
movsb
xor
add
mov
aaa
cmp
or
sub
jnp
movsb
mov
outsb
add
mov
mov
flds
push
add
ljmp
test
inc
rolb
leave
inc
dec
pop
fs
inc
mov
xor
jnp
ds
popa
push
hlt
cmc
in
cmp
fistl
add
and
jne
adcl
sbb
inc
sbb
push
scas
cwtl
xlat
sahf
pop
xchg
iret
insb
cmp
mov
stc
push
nop
lret
test
fisubrl
cmpsb
mov
or
push
ret
add
mov
sbb
xor
sbb
out
inc
mov
sub
test
popa
lcall
iret
cltd
sub
rcrl
gs
add
repnz
cs
dec
sbb
inc
adc
std
outsb
movsb
mov
test
or
mov
and
sub
insb
repz
or
test
xchg
inc
icebp
jnp
adc
fcomps
jno
xchg
xor
test
jne
mov
xchg
push
push
clc
jp
lods
sub
sahf
mov
add
inc
push
arpl
jne
jnp
int3
sbb
popa
rorl
lods
inc
xchg
jle
xchg
inc
fisubrs
mov
mov
sub
mov
mov
aaa
cmp
inc
imul
jl
lea
push
mov
ljmp
scas
sbb
fnstenv
faddl
shll
xchg
mov
xchg
push
mov
ljmp
sub
xor
arpl
lods
add
adc
lret
mov
xorb
movsl
stos
add
push
rcr
rcll
mov
repz
jne
pop
lods
js
mov
xchg
sarb
pop
in
data16
inc
sbb
jae
fistps
shll
pop
dec
mull
mov
adc
les
sbb
es
in
cmp
sub
aaa
jb
inc
ret
int3
adc
push
test
out
insl
jae
imul
mov
scas
test
aam
jno
mov
roll
dec
push
fnstsw
out
imul
pop
scas
jg
ljmp
and
into
das
int3
push
fiadds
jp
mov
mov
xchg
add
shl
in
outsl
inc
les
fs
mov
daa
add
sti
add
mov
loopne
insb
in
imul
ja
xchg
xlat
outsl
push
mov
int3
push
adc
jns
fdivrl
adc
std
sbb
stc
add
xchg
push
sub
sti
cmp
sbb
jne
iretw
stc
xchg
lret
inc
mov
lret
push
dec
lds
jae
pop
shll
mov
jle
nop
dec
pop
jae
and
cmpsb
or
out
mov
sbb
idivl
shlb
xchg
mov
jo
and
mov
fsts
mov
ljmp
std
sbb
pmaxsw
pop
lods
push
xor
test
loope
mov
or
push
add
in
clc
xchg
xor
or
test
and
les
add
jle
jbe
inc
sub
push
xchg
push
in
lahf
or
inc
add
adc
test
lahf
sahf
cld
aaa
xchg
inc
dec
add
or
sbb
das
int
enter
sahf
push
pop
dec
dec
and
iret
cmp
push
lods
push
or
sti
loope
mov
fcoml
jge
fidivs
lahf
add
in
push
bound
pop
cmp
lock
cmp
cmp
cltd
ror
xor
popa
jnp
or
pop
push
fildl
push
xor
and
ficoms
sub
xchg
jg
jle
push
pusha
adc
psllq
push
mov
inc
testb
nop
fcoms
jne
out
fs
dec
popa
test
loope
repnz
out
or
lcall
cmp
mov
mov
cmc
and
test
mov
cltd
pop
mov
add
add
es
sub
popf
mov
arpl
fidivrl
mov
jp
hlt
scas
mov
add
dec
cmp
aad
sub
fcoml
jb
sub
and
and
shl
subl
mov
cmp
cmc
xor
fstpl
outsb
or
dec
divb
push
gs
dec
rorb
nop
jno
mov
int
stc
sbb
add
fs
mov
xchg
inc
movsl
jg
cmp
jb
add
mov
in
dec
mov
push
out
mulb
ret
es
mov
rolb
clc
test
xlat
mov
cmc
xor
add
pop
stos
pop
daa
aad
jns
iret
out
pop
ja
outsl
popl
dec
rcr
push
jle
pusha
mov
xor
xchg
shl
lods
ret
stos
jmp
imul
lock
xor
fists
testb
and
int
dec
pop
mov
stos
adc
lcall
stc
aaa
inc
xor
ret
aad
fisubrs
jae
lcall
out
fnstenv
mov
js
add
or
pop
jo
in
es
imul
pusha
jge
test
insb
mov
pusha
xor
pushf
xchg
cmp
mov
and
movsb
std
inc
push
dec
mov
aas
jb
lret
mov
cmp
sub
add
test
cli
dec
pushf
shlw
loop
sbb
bound
pop
mov
out
and
or
insb
sub
js
sbb
pusha
ljmp
push
stc
inc
push
mov
mov
test
testb
cmp
imul
mov
fstpl
and
or
mov
sti
xor
push
dec
add
imull
sub
add
sbb
hlt
repz
rorb
xchg
pop
shlb
pushf
jp
iret
clc
sbbb
and
adc
imul
xchg
cs
and
xor
push
mov
jmp
sub
inc
dec
inc
lock
and
lahf
aam
xchg
cmpb
xor
sub
lods
jle
lods
dec
iret
divl
push
outsb
dec
pop
pop
shlb
mov
mov
add
repnz
push
mov
cmpsb
add
jle
jge
mov
dec
cmp
aas
inc
or
insb
arpl
cmpb
push
stos
ds
mov
pop
sub
out
pop
lcall
leave
js
mov
xchg
scas
in
shl
mov
adcl
mov
mov
and
pop
ss
fistl
pop
pop
cmc
cs
inc
in
sbb
push
and
push
repz
adc
lods
sub
dec
aad
incb
sub
imul
mov
loopne
jae
and
push
cmpsb
shrb
mov
fimuls
int3
mov
jle
stc
mov
dec
enter
adc
shrb
lock
addr16
or
imul
fsts
js
js
movsb
push
push
lret
in
test
sub
scas
mov
adc
imul
cmpsl
xchg
add
das
jl
pop
cmp
pop
xor
add
adc
jmp
adc
jns
pop
and
repz
test
jne
push
aaa
subb
shl
into
xchg
out
orb
push
adc
pop
nop
pop
add
push
mov
jo
xchg
push
lds
daa
jo
lahf
jecxz
jge
sbb
imul
dec
cmp
subl
pusha
dec
mov
icebp
push
push
scas
test
sbb
push
adcl
push
arpl
mov
pop
add
imul
xchg
into
aam
mov
adc
clc
add
sub
lods
add
jns
mov
sub
xorb
hlt
jno
and
cs
and
mov
xchg
call
cmp
xorb
stos
sub
and
push
imul
mov
gs
out
xchg
jns
lcall
loope
sub
pop
cs
lret
push
mov
xor
mov
inc
mov
imul
sub
mov
mov
std
xchg
int3
jmp
and
pop
scas
ficoms
add
inc
push
add
jbe
scas
js
pop
dec
sub
es
mov
rolb
adc
jae
ret
mov
or
add
sahf
cmpsb
mov
daa
sub
lret
and
leave
xor
aas
adc
push
lcall
stc
add
outsl
mov
leave
je
jecxz
mov
bound
mov
mov
dec
pusha
cmp
leave
and
sbb
and
cmpsb
xchg
stos
gs
sub
pop
test
inc
sbb
lods
std
dec
aaa
popf
jns
xchg
xor
ljmp
ljmp
das
xor
jns
cs
xlat
push
lea
lret
push
push
nop
pop
nop
mov
pop
movb
dec
jb
hlt
test
fcoml
xor
lret
mov
cmp
out
jnp
je
cs
aaa
jnp
and
mov
push
inc
leave
pop
arpl
xchg
in
je
cmc
out
mov
add
call
adc
rcrb
aam
and
mov
scas
mov
es
dec
cmpb
xchg
pcmpgtw
inc
mov
mov
adc
xchg
cmp
mov
pop
inc
sti
in
cld
adc
daa
inc
mul
cmp
frstor
aam
mov
jmp
das
negb
pushf
repnz
lds
cmp
scas
pusha
pop
movsl
mov
adc
iret
xchg
repnz
cld
mov
push
lock
pop
ljmp
idivl
sbb
pop
rcrb
adc
jg
add
push
or
int
jbe
pop
dec
gs
scas
in
fwait
sbb
pushf
dec
push
jns
mov
aam
push
cmp
mov
outsb
adc
jg
into
loop
xchg
test
cli
repz
lock
repz
add
loop
push
scas
inc
outsl
push
sbb
test
sti
dec
arpl
movsb
test
lea
repnz
and
mov
test
sbb
pop
rol
cmc
out
mov
lcall
xchg
mov
push
sub
xor
or
cmp
xchg
pop
jne
push
insb
lret
leave
lds
add
add
or
add
jo,pn
enter
test
add
fisubrl
jl
inc
sub
mov
xor
clc
lock
lds
adc
dec
stos
stos
and
cs
rolb
int
and
pop
xchg
sub
push
sti
sahf
lea
in
stos
xchg
js
popf
sbb
js
adc
cmp
push
xor
ja
fcmovbe
test
addb
or
and
into
xchg
jmp
dec
ud0
es
pop
adc
adc
jl
cmp
jecxz
cwtl
popf
inc
aam
cli
pop
in
bound
fisttpl
inc
jnp
psraw
jae
add
aad
pop
mov
mov
push
addr16
mov
sub
scas
pop
cmpsl
lods
iret
aam
xchg
or
xchg
and
add
es
sub
int
sbb
fidivrs
or
fs
cld
pop
dec
or
xchg
xor
in
adc
xorl
inc
div
push
pusha
hlt
lcall
pop
fdivs
ja
lods
addb
testb
push
test
pop
push
js
mov
flds
mov
pop
flds
mov
xchg
loopne
pop
or
shl
xor
sub
mov
stos
push
or
fsub
scas
in
cmp
lods
push
test
sbb
in
into
xchg
in
push
and
int
xchg
pop
insb
sbb
jns
jle
adc
sub
dec
icebp
aas
fwait
push
mov
xor
xchg
push
pop
inc
stc
mov
les
xchg
mov
pop
mov
xor
sbb
mull
dec
xor
xchg
sbb
lock
sub
push
iret
in
fsubl
or
repnz
and
sub
inc
dec
mov
out
add
aaa
xor
imul
xor
push
add
xchg
pop
or
in
aas
jle
cmp
push
dec
es
pop
pop
call
push
adc
shl
cmp
lods
insb
repz
add
fisubs
stc
scas
std
mov
decb
mov
arpl
int
xorl
push
flds
add
test
pop
test
pushw
negl
es
pop
sub
mov
or
sbb
cmpsl
repz
cmp
xchg
loopne
sbb
insb
mov
push
pop
pop
and
push
mov
push
in
shr
jb
jecxz
xor
dec
sbb
adc
pushf
dec
stos
cmp
adc
add
jle
and
mov
out
pushf
cmp
inc
sub
int3
stos
mov
addr16
sbb
nopl
xchg
hlt
daa
or
jne
inc
push
or
fs
fbstp
rcr
mov
xor
jl
test
cmpsl
pop
ja
xlat
cmp
push
hlt
es
mov
push
int3
add
push
mov
pop
sbb
xor
cmpsb
out
cmpb
test
add
inc
sbb
mov
xlat
inc
dec
sti
jmp
and
ljmp
es
mov
pop
out
push
xor
jecxz
lock
ljmp
into
iret
lret
or
adc
jl
lea
cmp
pop
jle
mov
cmp
sub
into
into
sbb
sar
cmc
sahf
movsl
mov
jae
rcrl
push
lea
add
popf
pop
pop
pop
subl
xchg
adc
mov
or
mov
mov
xor
add
jecxz
or
adc
loop
ret
notb
mov
clc
fmuls
push
dec
sar
mov
div
xor
cmc
lea
hlt
es
mov
push
sbb
outsl
jecxz
loope
mov
and
insl
pop
es
cmp
das
push
lcall
push
ds
cltd
insb
in
div
aam
rcr
push
nop
popa
ss
inc
push
sbb
mov
mov
push
lods
mov
neg
and
xor
cmp
cmp
cmp
repnz
cs
aas
mov
mov
xor
daa
sub
nop
dec
test
stc
pushf
mov
jno
arpl
cwtl
popf
in
ljmp
push
mov
jecxz
arpl
cld
inc
mov
sub
dec
mov
addr16
js
imul
std
cwtl
js
mov
xor
lahf
dec
repz
xor
fstps
in
mov
cmp
popf
push
loopne
sub
jmp
iret
jns
jp
pusha
inc
je
xchg
fnstsw
inc
addps
mov
dec
cmpsb
push
mov
sbb
mov
rcrl
test
les
jbe
loopne
mov
lods
sbbl
stc
fsubr
gs
sbb
inc
or
push
cmp
clc
pusha
je
xlat
fucomp
loopne
or
into
cmovl
test
mov
jo
shll
aam
lret
rorl
leave
inc
fistpl
push
xorb
add
mov
and
lret
inc
f2xm1
pop
mov
jae
and
mov
idiv
pop
mov
mov
or
cwtl
and
mov
add
pop
dec
sbb
cmpsb
mov
outsb
rorb
cmp
inc
push
dec
cld
cmp
jmp
shlb
and
stos
xor
mov
jae
lcall
ret
gs
pop
mov
push
ss
test
sbb
into
and
xor
orb
aaa
mov
or
xor
pop
cmp
dec
jl
lods
jb
and
adc
cmp
sub
movsb
test
fildll
fsubrs
sub
add
xor
clc
cwtl
jl
dec
xor
into
shrb
dec
cmpsl
mov
xchg
add
std
fiaddl
cmp
call
cmpsb
mov
fsubs
jb
sbb
sub
popf
icebp
sbb
xchg
je
push
sti
pushf
pop
push
push
push
mov
jge
push
pop
sbb
std
cmp
subb
mov
mov
mov
shrl
cs
xor
cmp
pop
xchg
scas
daa
push
and
xchg
lds
nop
sets
not
inc
xlat
xchg
call
and
test
das
xor
pushl
std
push
adc
mov
movsl
cmp
scas
mov
movsb
push
xor
mov
mov
cltd
pop
mov
scas
add
sub
lcall
push
push
sarl
adc
stc
stos
mov
jns
pop
push
hlt
mov
pop
rclb
inc
fs
in
jbe
cmpsb
repnz
lret
push
pop
bound
mov
fisttpl
jmp
popa
movsl
xor
movsl
ror
cmc
imul
jecxz
xchg
fdivrl
push
jnp
xchg
inc
les
lods
mov
scas
add
out
andl
mov
dec
push
pushf
out
pop
out
clc
js
sub
jb
xchg
add
pusha
push
mov
and
or
mov
mov
and
es
mov
mov
inc
loop
into
pop
mov
pusha
sbb
shlb
lods
popf
mov
das
outsl
fistpll
xchg
mov
daa
cmp
es
jp
pop
pop
and
pusha
mov
scas
push
lcall
cltd
es
xchg
pop
ret
add
hlt
test
clc
ffree
mov
inc
mov
push
repz
sbbb
pop
mov
imul
xor
rcr
scas
jno
aam
mov
cmpb
xor
pop
sbb
scas
push
xorl
movsb
xor
or
out
pop
iret
jp
test
shl
xchg
testb
mov
nop
mov
enter
nop
xor
aaa
in
dec
mov
xchg
push
mov
outsl
add
aas
push
dec
mov
or
pop
mov
mov
adc
inc
fisubrs
fstps
sahf
xchg
es
push
adc
sahf
mov
jp
dec
pop
mov
jmp
inc
fldl
mov
lcall
out
pop
dec
pop
es
and
dec
add
add
push
push
scas
mov
and
cmc
xchg
and
aas
pop
dec
push
fstpl
pop
cwtl
mov
xchg
enter
jl
or
insb
adc
ficoml
cmpb
jbe
mov
hlt
nop
xchg
pop
mov
jae
je
sbb
add
fnstsw
mov
mov
dec
clc
push
cmp
fcmovnbe
add
ja
adc
xor
insb
add
lods
adc
outsl
data16
sub
sub
gs
adc
mov
xchg
js
push
scas
ljmp
pop
push
xor
pop
fs
mov
wrmsr
jnp
cltd
andb
mov
mov
ss
repz
sbb
pop
xlat
lods
or
popf
inc
aas
dec
dec
ret
adc
pushf
rcll
cld
and
lret
xor
mov
iret
ljmp
loope
or
shlb
adcl
xchg
pop
jg
es
mov
fdecstp
insl
pusha
mov
popa
test
stc
pop
lcall
dec
xchg
add
jp
push
call
outsb
jno
xlat
xchg
in
scas
lock
insb
sti
mov
or
mov
pop
xor
jbe
outsb
lods
test
dec
in
add
add
add
xchg
rorl
enter
xchg
nop
movsl
das
outsb
inc
movsb
imull
dec
inc
xchg
mov
mov
sbb
or
mov
out
pop
imul
pop
sbb
xchg
stos
or
nop
push
loopne
cmpsb
sbb
inc
pop
xchg
adc
jecxz
cmpb
adc
fiaddl
jns
popa
push
mov
insb
mov
jl
push
outsb
fimuls
lret
in
dec
mov
xlat
sti
sbb
jmp
out
andl
jb
or
repnz
cli
cmc
hlt
mov
mov
inc
test
jecxz
xchg
push
mov
or
mov
addr16
adc
call
out
mov
jg
or
movb
adc
das
rolb
cmp
mov
jae
mulb
lret
in
mov
imul
adc
xchg
jg
std
out
cmc
stc
movsl
adc
xor
xchg
int3
imul
fsts
and
pop
sbb
mov
ret
or
mov
inc
jecxz
test
or
adc
test
nop
jae
inc
arpl
popa
sbb
dec
cmovge
aas
fistpll
lea
add
jle
sub
mov
loop
push
shll
push
inc
push
sub
scas
paddusb
or
stc
rcrb
mov
movsb
arpl
sub
xor
dec
and
pop
std
jg
sahf
push
mov
mov
enter
fisubrs
filds
outsl
or
mov
lahf
adc
mov
add
push
push
push
les
inc
fbld
push
aam
push
or
mov
push
in
adc
xor
xchg
pop
fsubrs
pop
aas
push
sub
pop
daa
add
and
pop
mov
testb
ret
or
daa
mov
pop
pop
or
fmull
fmuls
in
adc
dec
mov
push
cmp
xchg
mov
or
xchg
outsl
xchg
les
addl
lret
xor
std
icebp
mov
dec
inc
mov
add
and
jecxz
lods
jge
inc
loope
or
push
add
jnp
xor
push
fwait
xor
stos
dec
jns
in
stos
pop
bound
jl
mov
push
test
sub
faddl
in
lcall
ljmp
jecxz
sarl
push
ja
mov
pop
sbb
dec
bnd
mov
addl
fwait
notb
test
arpl
add
or
xchg
ret
adc
sub
scas
mov
test
mov
cmp
jns
scas
jmp
fcmovnu
xchg
stc
loop
add
in
lds
stos
in
inc
mov
mov
ja
outsb
loopne
xchg
lea
push
test
js
and
sub
add
xchg
lcall
jb
sbb
bound
jmp
xor
xchg
mov
add
jl
mov
add
mov
stc
lahf
int
mov
sub
aad
call
push
fsubl
adc
into
mov
or
bound
out
xchg
pop
in
sub
jg
rcl
into
test
sbb
sub
sbb
test
mov
ret
int3
aas
xchg
mov
xchg
adc
adc
aad
cmp
sahf
sub
pop
add
mov
dec
mov
movsl
or
and
push
div
les
jno
je
sti
mov
ss
and
and
xchg
aas
pop
cmp
xor
sub
decb
mov
jo
rclb
int3
cmovl
adcb
or
add
pop
lds
xchg
adc
mov
xchg
xchg
cli
sbb
or
and
or
push
cwtl
or
lods
icebp
adc
mov
sub
pop
jne
ljmp
cmp
sbb
out
fidivrl
inc
les
aad
fldcw
in
mov
jl
pop
into
inc
inc
inc
mov
jmp
sub
fsubrl
std
mov
inc
mov
test
aad
inc
shlb
adc
std
int3
and
dec
pop
push
xchg
jae
in
inc
aaa
xor
sbb
clc
shlb
sbb
and
xchg
int
push
or
pop
ljmp
int
movsb
lods
xchg
enter
mov
ljmp
scas
leave
inc
mov
mov
fs
fistps
xor
mov
and
addb
and
les
icebp
sbb
divb
add
xor
xchg
out
call
mov
or
lods
jge
add
subb
in
inc
into
jecxz
hlt
xor
sub
dec
cmp
scas
cmp
sbbb
inc
mov
cwtl
repnz
sub
inc
xlat
adc
std
cwtl
push
in
jns
movsl
mov
xor
mov
cmpl
sub
push
jns
aad
lret
icebp
adc
pop
fstps
rorl
push
jmp
cmpsl
dec
ds
lock
test
pop
inc
xchg
xor
push
arpl
stc
mov
sbb
scas
vmovntps
gs
dec
dec
jo
or
outsb
dec
or
std
insb
loope
daa
lea
sbb
pop
inc
fimull
fnstsw
insb
outsl
jne
xchg
push
lcall
outsl
xchg
std
fucomi
jo
or
mov
sbbl
add
pop
and
sbb
xorb
insl
std
cmp
jmp
imul
xor
push
dec
mov
mov
shl
fs
and
dec
hlt
fwait
shll
or
mov
stos
push
ret
jp
push
bound
add
sub
and
das
les
dec
notl
xchg
cwtl
sarb
dec
mov
fbstp
mov
add
ss
or
jmp
pop
stos
or
fsts
std
push
mov
enter
jp
xchg
clc
fsubr
ds
test
icebp
pop
pop
scas
push
imul
add
push
xor
je
loop
sbb
subb
pop
cvtps2pi
stc
dec
mov
std
sub
enter
add
pop
subb
jmp
xchg
lea
jl
pop
test
mov
pop
loope
cld
mov
test
jle
add
mov
jnp
jg
xor
aam
xchg
jne
xor
popf
test
and
icebp
fs
imul
pop
sbb
ss
scas
sbb
aad
lea
adc
pop
cmp
les
repz
fstl
sub
cmp
mov
mov
xchg
nop
out
out
or
inc
or
add
les
sbb
jle
mov
sub
lods
js
out
push
sbb
out
inc
daa
mulb
sub
sub
mov
fnstcw
arpl
or
out
icebp
sub
fucomip
pusha
cmp
or
gs
test
movsl
mov
push
pop
test
aaa
shl
jns
mov
mov
pop
xchg
testl
fstpt
mov
shld
cmpb
rcr
add
in
negb
in
fsubs
sbb
shll
call
test
mov
adc
sub
add
inc
addr16
rorb
inc
cli
int
fimuls
add
lods
call
movsl
and
lods
stos
xor
repnz
or
mov
out
aad
cmpsb
cld
xchg
dec
pop
xchg
xlat
in
and
repnz
shll
jp
sbb
xchg
xchg
mov
ss
sub
fwait
adc
test
mov
int
add
sub
cmp
inc
push
loop
pop
or
aas
pop
roll
or
or
or
cmp
jbe
in
mov
arpl
xchg
add
pop
mov
dec
popa
testb
mov
ds
mov
push
xor
test
das
xchg
inc
repz
rol
dec
xor
xor
sub
fcmovnu
xchg
ds
jns
mov
adc
mov
adc
jp
add
mov
mov
addr16
push
inc
mov
mov
mov
mov
jle
lret
adc
jmp
jnp
loop
fstps
xchg
xchg
popf
das
jg
fstps
cs
aam
fstps
cmp
pop
pop
es
dec
fiadds
xchg
lock
rcrl
push
xchg
movsl
idivb
jno
test
clc
sbb
add
fwait
into
rcll
call
imul
fstpl
sub
mov
addr16
inc
cmp
hlt
movups
aam
aad
or
xchg
jle,pn
mov
or
call
std
rcrl
or
push
scas
inc
inc
nop
and
adc
push
lock
push
sbb
sub
or
lods
jno
jecxz
les
in
cli
jecxz
dec
xor
imul
imul
subl
mov
int3
push
push
jl
ja
xchg
out
xchg
cmpsb
add
sub
xchg
sub
fdivrs
sub
cmpsb
lcall
int3
cmp
shrl
cmp
loop
jnp
sub
mov
enter
sub
or
mov
cmp
pop
inc
push
inc
movsl
add
imul
jle
imul
sahf
lods
inc
and
clc
add
xlat
jmp
xchg
outsl
loop
and
jb
xlat
lock
rcrl
jbe
cmp
xor
outsl
cli
pop
xchg
mov
xor
hlt
or
xchg
pop
adc
add
add
jnp
stos
in
daa
add
pop
jmp
lahf
pop
cmpsb
fsubr
icebp
scas
xorb
push
push
imul
add
jp
push
fwait
push
scas
testb
ja,pn
mov
fmuls
pop
fisttps
mov
dec
test
ror
dec
insb
add
arpl
push
mov
test
xchg
stc
fwait
and
push
fidivs
lcall
mov
shll
mov
or
adc
imul
adc
mov
stos
sub
sub
jl
lahf
ktestw
stos
inc
push
pop
push
popa
dec
pushl
rcrb
shrb
std
jb
testl
adc
outsb
xor
stc
xchg
dec
loopne
lahf
pop
in
inc
out
cmp
icebp
lcall
sub
scas
sbb
mov
sub
cld
pop
std
add
cmp
push
ds
or
sti
aad
push
pop
test
inc
into
and
pop
cltd
pushl
lcall
int3
out
jo
push
mov
es
mov
xchg
mov
pop
adc
cmp
sbb
and
push
dec
lea
cltd
jp
adc
loop
lahf
or
cmp
or
stc
sub
test
test
pusha
xor
filds
mov
imul
js
decb
mov
jge
inc
add
push
test
andl
sub
in
lods
lret
or
out
xchg
lea
leave
cmp
xchg
shlb
aam
pop
cmp
mov
test
cwtl
mov
adc
fisubl
daa
push
mov
cli
jns
or
enter
sbb
loope
mov
subl
ss
pop
mov
push
push
cmp
pop
dec
push
test
cmp
fldl2t
sarl
lret
ja
push
rorl
jno
xor
divb
mov
jo
or
pusha
jge
and
loope
sub
std
push
ds
fdivs
out
pushf
movsb
and
mov
lods
dec
mov
and
inc
loope
bound
addr16
mov
push
lock
xlat
mov
cld
add
lea
push
enter
call
adc
jae
clc
popa
test
and
inc
bound
mov
sub
outsb
xchg
cmp
dec
jg
jle
xchg
ja
push
ljmp
cmp
mov
push
cmpsl
add
insl
adc
jnp
pushf
sub
mov
adc
pop
jne
daa
roll
fiadds
mov
int3
inc
lock
repnz
lret
add
sub
sahf
fistps
neg
repz
dec
js
add
jp
cmpb
xchg
cmp
push
mov
lahf
int3
ds
rorb
test
cmp
out
es
stos
ds
aam
xor
jae
in
inc
mov
bound
xchg
scas
sbbb
pop
jp
mov
out
je
dec
fstl
mov
mov
mov
xchg
mov
mov
rorl
xor
mov
jbe
cwtl
mov
lret
xor
fsts
mov
lahf
fsubp
sbb
ss
stos
in
push
adc
jb
jnp
or
jbe
mov
pop
stos
or
imul
cmp
pop
pop
out
repz
repz
jp
sub
testl
adc
out
pop
push
adc
xor
add
sahf
cmc
subps
dec
jo
pop
or
cltd
and
fnsave
sub
sbb
sar
insl
mov
push
sbb
arpl
mov
sub
andl
aaa
repnz
xchg
jns
adc
jp
cltd
or
out
jns
call
pop
cltd
cmp
pushl
idivb
out
dec
fucomi
cmpsb
loop
mov
ret
mov
cli
and
aaa
mov
les
pop
mov
repnz
jge
add
popf
cli
jecxz
push
xlat
ja
in
sbb
dec
stos
orb
mov
leave
bnd
add
dec
xor
pop
ljmp
xorb
xor
push
orb
insb
dec
pop
push
push
mov
test
dec
stc
out
cmp
lods
cltd
sbbl
out
or
cwtl
nop
les
mov
push
jo
stc
clc
xchg
in
xor
push
push
fnstenv
add
scas
pop
popa
out
out
inc
adc
xor
push
ret
shrb
ret
cmp
int
outsl
pop
mov
loop
push
mov
test
andl
mov
jns
xchg
stc
loopne
in
stc
lods
mov
mov
push
fcmovu
int3
mov
add
mov
test
loope
cltd
pop
mov
es
adc
push
enter
push
add
xchg
mov
dec
sbb
lcall
pop
daa
dec
addr16
add
daa
jg
stos
test
pop
lods
iret
rcr
dec
lret
push
decl
pop
cmc
push
test
dec
cwtl
insb
popf
rcr
mov
jno
or
jno
push
jg
dec
in
jns
stos
lret
je
fstpt
xor
aas
jmp
in
sbb
xor
jne
lret
or
inc
jnp
mov
mov
jecxz
sbb
push
push
push
jnp
gs
add
add
xchg
hlt
sub
fstpl
cld
arpl
data16
adc
jge
mov
xor
and
mov
sub
xchg
ds
xchg
jge
mov
push
idivb
daa
mov
lahf
stos
mov
icebp
sub
loopne
push
mov
mov
fisttpl
mov
inc
adc
adc
into
pushf
xchg
repz
pop
and
push
pop
or
pop
outsl
dec
lods
aaa
or
inc
and
jbe
mov
sbb
cmp
xor
sbb
mov
iret
adc
xchg
xchg
mov
in
cmp
mov
xchg
hlt
ss
and
cltd
add
xlat
test
jmp
cs
adc
xor
inc
js
jbe
dec
ss
testl
and
xor
aam
sbb
or
adc
pop
arpl
loope,pt
push
sbb
xor
aam
mov
daa
iret
xchg
add
into
movsb
test
fisttpl
push
push
imul
mov
mov
adc
and
loopne
data16
sub
jno
loope,pn
scas
imul
xchg
lods
repz
mov
mov
dec
das
aad
test
loopne
pop
add
jmp
jo
push
cmp
xor
and
sbb
and
lods
lahf
xor
inc
xor
fcoms
scas
mov
lods
pop
ja
or
sar
popf
sti
inc
call
add
xchg
jl
pop
rclb
jbe
xchg
and
push
mov
iret
jns
fwait
jle
rcl
mov
push
pop
sbb
sbb
imul
and
ret
mov
mov
loopne
jae
xchg
lahf
scas
imul
cwtl
sbb
and
lret
inc
xor
fcoml
inc
in
in
push
jge
xchg
xor
mov
jne
std
xchg
pop
fiaddl
lret
xchg
pop
cmpsl
mov
xor
add
sbb
push
rcrl
arpl
jl
cmc
pop
jne
mov
xchg
in
fldl
leave
adc
repnz
lahf
shll
cld
and
sahf
fwait
mov
daa
aam
xchg
out
js
aas
lods
or
push
pushf
call
push
dec
test
push
int
dec
add
mov
inc
jg
in
pop
lock
adcb
subb
into
hlt
call
fadd
and
arpl
add
jae
mov
push
leave
push
stc
inc
mov
push
push
or
jp
sarl
mov
in
jg
jg
or
loop
mov
icebp
lahf
ljmp
xchg
pusha
hlt
mull
int3
rorb
mov
dec
mov
push
add
add
jns
mov
sub
faddp
and
mov
sar
dec
mov
xchg
mov
push
lret
enter
out
dec
pop
fisttpll
repnz
stos
test
cmp
lahf
ljmp
inc
and
arpl
out
and
sub
icebp
lcall
fcompl
jmp
fisubl
mov
mov
push
pop
mov
nop
andb
ret
cmp
lock
aad
pop
aam
inc
test
sbb
icebp
rcl
js
fsubl
dec
inc
xchg
mov
jmp
movsb
sahf
sarb
sahf
in
addr16
fnstenv
jp
xor
push
fsubrs
add
push
ds
inc
and
sbbb
cmpsb
jmp
dec
xchg
fs
stos
dec
das
pop
adc
fs
lods
pop
cmp
cmpsl
push
pop
sbb
js
xchg
es
inc
and
push
sbb
into
imul
or
shlb
xchg
pushf
fldcw
mov
mov
push
cmp
scas
sbb
pop
ret
xor
inc
movsb
pop
hlt
mov
fmul
daa
xchg
rcl
adc
push
das
pop
inc
fcomp
pop
mov
cld
fcomps
mov
out
setg
or
dec
movsb
dec
mov
adc
imul
lret
dec
repz
inc
out
push
mov
mov
dec
jmp
daa
stc
xchg
movsl
cwtl
jp
mov
out
or
adc
enter
push
xchg
add
xor
mov
daa
aam
test
pop
jns
or
out
mov
push
dec
mov
push
in
pop
xchg
sub
scas
subl
dec
outsb
mov
in
mov
or
jb
xchg
pop
mov
leave
lcall
mov
enter
adc
sub
and
sbb
fsts
enter
mov
js
mov
in
jecxz
jb
sub
xor
sub
imul
dec
rcrl
mov
mov
addr16
enter
and
mov
dec
repz
and
outsb
mov
fdivrl
outsb
lods
jno
std
test
cmc
sbb
cmp
dec
je
cs
mov
pop
loopne
pop
jo
cltd
aad
popa
push
repz
cmp
test
jbe
add
icebp
test
push
lcall
xchg
mov
aam
imul
lcall
jge
push
sbb
dec
cwtl
xlat
enter
or
jne
repz
xorb
ret
stos
jle
dec
xor
aaa
arpl
dec
pop
sub
popa
xchg
pop
jo
push
jge
pop
cmp
pop
mov
and
repz
jbe
repz
adc
repz
xlat
cmp
in
dec
push
lock
xor
push
or
push
sti
inc
divb
mov
pop
mov
adc
add
adc
stos
or
jae
pop
add
mov
jnp
daa
jp
jb
rorl
xchg
in
js
jnp
dec
cmp
dec
shl
inc
dec
lock
and
sub
pop
jecxz
xor
jle
negb
sbb
rclb
in
xor
and
push
mov
movsb
or
xor
rcll
pop
mov
aas
jae
mov
mov
sub
push
jb
dec
pop
in
mov
out
shlb
int
jbe
xchg
fimuls
xchg
pop
adc
cmp
and
cld
mov
sar
mov
mov
out
fst
add
inc
xchg
push
lahf
jae
jne
mov
shl
mov
cmc
out
data16
mov
push
cmpsl
shl
push
and
mov
cmp
xchg
adc
pop
pop
xchg
and
push
xchg
push
pushf
aad
sbb
insb
out
sub
scas
inc
push
cmp
fs
out
dec
test
dec
adc
sub
sub
jmp
in
jle
lock
pop
pop
pop
cwtl
test
xchg
mov
sbb
in
and
pop
dec
push
popa
dec
stos
int
stos
lcall
pop
push
pcmpeqb
in
xsavec
out
cmc
xchg
inc
sub
mov
in
in
mov
cmpsb
aad
je
test
adc
cmp
enter
jns
popa
in
cltd
movsl
inc
data16
out
adc
xabort
in
ja
push
test
cmpsb
pop
jnp
ja
dec
lret
ret
sub
and
push
add
lods
std
xlat
push
adc
movsb
mov
xchg
add
insl
adcb
dec
dec
out
shll
cli
test
mov
into
aad
aad
stc
insb
xor
imul
scas
or
push
sbb
push
orl
mov
lods
movsl
xor
push
pop
andl
xor
mov
mov
js
pusha
fsts
pop
in
dec
out
pusha
cmc
arpl
sbb
clc
pop
inc
outsl
pop
out
pop
shrb
insb
es
orl
subb
jb
inc
xor
or
mov
rolb
rorb
mov
in
cmpl
repz
stc
or
sub
ss
jmp
test
cmpsb
addr16
dec
inc
mov
add
mov
inc
imull
jne
popf
mov
xor
push
insl
mov
pop
and
add
fstpl
push
stos
mov
sub
adc
xor
xchg
pop
lret
lods
arpl
lea
jbe
mov
sbb
jns
das
loopne
hlt
push
cmp
mulb
adcb
ficoms
jne
push
arpl
imul
cmp
xchg
sub
adc
repz
and
popa
pop
jo
pop
add
cs
fcoms
jge
xchg
stc
lcall
out
pop
push
pop
imul
xchg
dec
or
sbb
or
dec
jge
push
xor
aad
inc
fcomps
outsl
add
jnp
inc
in
pop
xchg
xchg
pusha
les
add
loopne
jae
add
jae
mov
imul
mov
push
out
push
cmpsb
enter
mov
rclb
pop
stc
repz
mov
pop
mov
mov
repz
dec
lcall
fcomi
inc
int
jnp
dec
int
arpl
push
lret
xchg
into
stos
push
inc
imul
cmp
inc
stos
mov
mov
or
push
sbb
push
mov
add
sbb
mov
lds
aaa
int3
sub
movl
js
mov
repz
hlt
xchg
cs
push
jb
fsubrl
ss
jb
inc
rolb
ret
sub
xchg
mov
mov
outsl
stc
cltd
mov
movsb
outsl
lock
cmp
lods
sti
cmpsl
and
sbb
pop
pop
inc
sbb
in
pop
fs
scas
mov
adc
jnp
lret
mov
mov
pop
jnp
imul
dec
aam
sub
test
outsb
adc
pusha
nop
aad
repnz
fwait
idivl
jp
shll
inc
cmp
inc
addr16
sbb
in
lcall
cld
cmp
mov
jp
bound
dec
arpl
inc
lahf
enter
push
repz
cmp
inc
mov
jge
insb
sbb
jne
fbstp
jno
mov
lods
dec
fwait
adc
mov
dec
or
cmc
xor
and
pop
push
stos
jle
and
pop
inc
shlb
andb
push
inc
pusha
repz
adc
jbe
aaa
add
sar
add
mov
js
test
imul
dec
std
movsl
sbb
hlt
cld
dec
add
adc
cmp
outsl
ja
std
sbb
adc
dec
mov
popl
es
std
pop
test
ret
add
scas
add
aas
test
bound
aam
sbb
into
loopne
cmp
mov
mov
mov
movsb
pop
xlat
lods
fisttpl
adc
divl
aaa
in
sub
dec
data16
push
sub
xchg
mov
stos
loopne
mov
das
lea
ss
inc
mov
fidivs
ss
iret
jo
js
iret
stos
gs
js
push
fisubrl
sub
push
adc
icebp
ss
and
pop
test
clc
repnz
sub
mov
cmp
xlat
les
mov
adc
int3
mov
sub
mov
push
sbb
incl
adc
aas
mov
in
stos
jmp
add
adc
jbe
xchg
jmp
loop
cmp
popa
stos
add
push
jns
mov
fs
leave
je
fstl
jno
loop
mov
xor
and
enter
aad
mov
add
addl
adc
dec
icebp
adcb
pop
or
cmp
insb
lods
cmp
push
lods
push
jmp
inc
or
mov
rcrl
and
aam
sub
ljmp
pop
ds
shlb
jnp
aad
lods
jp
xor
hlt
fidivs
push
icebp
add
out
cmpb
loopne
or
sti
in
mov
mov
mov
mov
push
mov
and
xor
adc
mov
add
nop
dec
push
stos
inc
pop
clc
cmp
jge
pop
movsb
add
out
push
cmp
mov
hlt
mov
das
arpl
push
push
mov
cmpsl
andb
call
faddl
je
push
and
nop
adc
out
fs
adc
popa
pop
fcomp
mov
xor
int
jge
and
mov
mov
mov
push
orb
rcrb
push
xor
push
test
push
or
loop
inc
imul
pop
mov
data16
dec
and
out
push
jns
lret
mov
inc
cli
mov
cs
jle
mov
fstpl
sti
cmp
and
insb
in
dec
mov
sbb
mov
push
scas
fsts
sub
insl
test
stc
mov
cmp
imul
or
mov
dec
xchg
jge
sub
js
loopne
xchg
aaa
sahf
hlt
add
inc
movsl
jo
xor
aas
mov
add
popf
mov
stos
clc
mov
adc
adc
pop
sub
das
mov
lock
cs
aam
repz
shl
pop
sbb
adc
jae
xor
pop
xchg
aas
bound
insb
push
xorl
out
scas
push
divl
push
inc
subl
out
mov
dec
in
mov
aad
sbb
lods
or
mov
dec
pop
push
pusha
push
pop
addl
lods
shll
addr16
scas
cli
pop
xchg
enter
jnp
arpl
stc
xchg
pusha
cltd
push
mov
mov
inc
mov
aaa
inc
aad
cmp
push
adc
outsl
adc
inc
iret
or
pop
ds
and
icebp
mov
pop
mov
dec
and
mov
sub
fistps
loopne
pushf
add
add
add
push
bound
dec
xor
jns
hlt
fisttps
mov
jmp
cmp
pusha
rolb
lcall
and
adc
cmp
stos
push
dec
cltd
jne
shrb
fistpll
jmp
fbstp
out
daa
sbb
sub
adc
xor
xchg
sbbb
pop
sub
push
rcr
in
jae
xor
psubb
inc
addr16
idivl
rolb
cs
popf
cmp
data16
je
shl
pop
jo
int3
cmp
lret
add
test
add
call
movsl
and
out
or
pop
nop
shll
xor
jbe
mov
iret
mov
frstor
loop
pop
aad
ja
or
pop
jecxz
jecxz
jl
fs
mov
xor
repz
lods
shlb
orl
adc
xor
xor
mov
mov
sbb
cmp
int3
clc
push
sbb
inc
ds
push
mov
icebp
jmp
and
cmp
inc
jle
push
add
mov
pop
test
cltd
jns
or
xlat
mov
sub
es
into
push
inc
xor
outsl
xchg
xchg
scas
add
repz
fdivl
add
bnd
pop
dec
xor
repnz
sub
enter
mov
fsubs
sub
adc
repz
test
in
push
pop
adc
xlat
std
or
sub
das
int3
cs
mov
add
dec
imul
inc
cltd
js
fwait
add
pop
pusha
int3
and
test
push
ja
dec
movsl
imul
mov
sub
aad
mov
mov
lcall
ja
xchg
or
mov
ljmp
cmp
sub
loopne
inc
push
scas
dec
imul
xchg
daa
gs
out
push
cli
push
iret
or
movsl
clc
inc
sbb
pop
cmpsb
pop
data16
mov
cmp
mov
aaa
loopne
jo
pop
push
mov
scas
sbb
inc
je
dec
jl
dec
mov
std
popf
push
and
fsubrl
mov
cmp
mov
je
cmp
pop
xchg
or
mov
ds
std
mov
cltd
in
push
aas
nop
add
orl
mov
adc
xor
jnp
or
lret
mov
aam
sbbl
push
int
pop
adc
xor
cmp
dec
sbb
pop
cmpsl
mov
push
xlat
sbb
jne
mov
push
jmp
ja
inc
xchg
les
lds
or
sahf
and
sahf
sbb
dec
push
mov
mov
mov
add
sbb
inc
cmp
movsl
adc
jno
sub
stc
bound
adc
dec
push
movsl
lods
hlt
scas
or
sbb
inc
cmp
andb
aam
jbe
inc
rcrb
stos
jmp
cli
sbb
xchg
jp
xor
and
mov
fstl
mov
fwait
add
repnz
push
pop
insl
jle
mov
mov
inc
xor
jb
lock
inc
push
aaa
scas
cmpsl
in
cmp
aaa
dec
insl
pop
mov
push
adc
enter
or
arpl
and
stos
aas
rclb
mov
adc
inc
inc
mov
fs
enter
das
jmp
sbb
scas
int
repnz
sbbl
xor
adc
or
out
jmp
scas
mov
adc
sub
jl
repnz
or
cmp
cmp
sub
or
gs
out
push
sarl
xchg
jg
xchg
nop
cmp
movsb
xchg
cmp
jns
cmc
lahf
rcll
mov
mov
inc
xor
into
enter
call
adcb
addr16
fiaddl
dec
xor
push
add
pop
jnp
mov
fistpll
cmpsl
loop
add
test
mov
sub
jbe
sub
mov
loop
sbb
adc
push
sbb
pop
sub
xlat
std
lahf
shl
into
and
mov
punpckldq
lahf
mov
bound
mov
jb
lahf
pop
mov
jb
fdivs
add
or
dec
mov
ror
mov
pop
adc
add
call
xchg
movsb
sti
data16
dec
push
add
add
pop
movsl
lret
cltd
ret
jno
movsb
cmp
or
test
mov
les
cmc
scas
add
xchg
add
int3
or
pop
sub
pop
mov
cld
pushf
and
cmp
outsl
in
fdivrl
lock
fstl
mov
sahf
call
adc
sbbl
jo
in
in
cmc
or
sarl
add
enter
cwtl
mov
push
cmc
mov
imul
xchg
adc
pop
jo
fsubrl
cmpsb
out
dec
sahf
aas
dec
mov
xor
adc
pop
test
mov
subl
and
dec
aad
repz
mov
mov
dec
xchg
adc
mov
push
inc
loope
dec
int
out
pop
fidivrs
sahf
or
in
nop
repz
cmpsl
pop
test
or
sqrtps
adc
mov
jle
lcall
movl
imul
imul
pop
nop
sti
iret
loope
mov
rol
stos
loopne
sbb
xchg
movsl
dec
xor
mul
movsl
bound
mov
lea
adc
mov
jo
pop
into
cmp
push
push
push
cmp
push
xchg
std
and
sub
test
mov
mov
adc
mov
fsts
outsb
sub
int
jbe
pop
test
xchg
pop
outsb
or
sahf
mov
jecxz
lea
in
add
dec
sub
jns
xor
std
leave
xlat
test
inc
loope
popf
jp
mov
stos
xor
fucomi
lcall
mov
jmp
and
loop
mov
pusha
in
jb
mov
push
lcall
repz
addr16
test
ljmp
leave
pop
cmp
and
mov
lea
jbe
outsl
andb
movsl
es
mov
mov
mov
jmp
jmpw
ja
sub
pop
nop
mov
mov
out
pusha
jne
or
fwait
in
adc
sbb
out
sarl
push
inc
xlat
xchg
or
imull
xchg
movsl
mov
adc
lods
rcrb
push
inc
repz
xchg
adc
repnz
xchg
pop
jno
mov
xorb
ds
jmp
in
jle
arpl
jp
ss
orl
xlat
adc
sahf
clc
aaa
dec
test
ret
jle
insb
out
jnp
dec
push
mov
pop
je
adc
call
loopne
mov
imul
mov
cmpsb
xlat
stc
outsb
mov
sbb
dec
mov
cmp
popf
mov
pop
addr16
jo
cmp
jbe
jnp
ljmp
test
xor
insb
fimull
cmp
cs
addl
insl
int
cld
insb
push
aad
ds
out
ds
lea
or
mov
aas
lds
xor
jl
ss
jecxz
and
and
dec
xor
pop
loop
outsl
mov
negl
pop
xor
cmp
pop
loop,pn
xchg
mov
out
mov
test
mov
mov
and
pop
lret
jmp
ds
pop
ffree
mov
pop
pushf
aaa
mov
xchg
add
mov
ficompl
stos
push
cmp
dec
std
subl
push
fwait
ret
push
or
cmpsl
dec
push
jne
inc
or
xchg
cmpsb
sub
ds
xor
out
dec
fwait
mov
mov
mov
call
mov
xor
lahf
push
lods
sti
scas
mov
dec
ret
sbb
ss
int
pushf
lcall
out
mov
sbb
and
jmp
mov
into
test
xor
dec
jae
hlt
dec
add
lret
int
or
lds
imul
sahf
jae
imul
dec
bound
lahf
outsl
fs
inc
inc
push
testb
nop
mov
lods
inc
inc
testl
inc
mov
inc
call
bound
int
inc
andl
mov
daa
loop
or
je
lock
mov
dec
sbb
mov
movsb
gs
push
lock
mov
push
in
pusha
mov
pop
cmp
jmp
ficompl
dec
fucomi
fwait
sahf
push
mov
or
mov
mov
jp
jb
mov
mov
cmc
jno
hlt
loop
inc
shrl
pop
jbe
in
scas
fsub
mov
xchg
das
shl
push
mov
mov
inc
loop
xorl
dec
and
or
dec
sbb
lret
fiadds
incb
loop
addr16
in
nop
mov
lds
and
sbb
stos
adc
sub
sub
mov
push
adc
ja
mov
pusha
pop
jns
sbb
mov
push
pop
mov
shl
xlat
lret
test
popf
fcmovnbe
ljmp
or
ja
mov
out
sub
pop
clc
adc
sbb
adc
dec
aam
push
dec
cmp
and
jo
rorl
mov
dec
ret
push
mov
mov
popa
popa
les
and
je
pop
loope
lea
mov
push
cmp
fstp
nop
call
faddl
jle,pn
je
insb
xlat
ret
sbb
insb
dec
imul
jmp
push
je
lcall
mov
sbbb
sub
jp
push
je
jo
loop
push
push
or
jle
jo
cmp
adc
adc
pop
aad
in
jp
in
dec
pop
push
mov
sub
out
dec
pop
mov
mov
popa
ljmp
pop
fldt
fs
clc
mov
daa
and
aam
jle
arpl
lahf
leave
xor
cltd
int3
adc
lcall
in
test
loope
stc
faddl
or
notb
out
adc
stos
adc
call
pusha
or
cmpl
loope
into
das
outsl
pusha
pop
adcb
inc
jp,pt
aam
dec
loope
shlb
lahf
leave
inc
and
aad
subb
hlt
setno
pop
mov
leave
movb
enter
imul
rclb
std
lds
pushl
bound
sbb
in
ja
cmp
push
sahf
mov
hlt
shll
adc
in
xchg
mull
jo
sbb
out
mov
enter
pusha
inc
jo
xor
inc
pop
sub
cltd
inc
test
add
mov
add
in
outsl
push
sbb
loop
push
jbe
sbb
push
sbb
adc
add
rorl
and
cwtl
pop
shrb
lret
enter
cmp
dec
idivb
pop
xor
pop
jo
insb
inc
inc
aas
or
push
ja
addl
ljmp
push
push
adc
addr16
dec
cld
push
jg
push
push
jne
repz
mov
dec
test
cmp
and
or
xor
pusha
xchg
adc
jno
adc
sub
and
test
daa
sbb
loopne
in
inc
or
mov
adc
cmpsb
jae
test
movd
test
jne
and
stc
sti
mov
adc
sbb
jle
fs
repz
scas
mov
bnd
mov
jb
mov
lock
cmpsl
cmp
add
mov
test
loopne
shll
push
pop
sarl
sbb
inc
mov
rorl
fsts
shlb
mov
mov
in
scas
xchg
mov
stos
cld
gs
in
imul
dec
pop
test
imul
mov
sub
add
aam
push
cmpb
push
leave
out
sub
pop
dec
adc
jge
xor
cmpsb
fnstsw
jns
push
add
cwtl
daa
add
sub
jmp
cld
mov
inc
aad
cmp
mov
sub
sub
xor
or
lahf
add
add
movsl
fwait
push
pop
popf
jb
or
subb
cmpsb
rorl
sahf
pop
daa
je
and
push
adcl
mov
fwait
and
mov
into
out
push
test
fstp
pop
mov
xchg
dec
cmpl
adc
popf
stc
test
pop
mov
loop
jl
imul
lea
fs
push
xor
fstp
and
push
faddp
mov
ret
adc
mov
or
pop
or
jl
cmp
leave
push
sbb
pop
xchg
pusha
repnz
push
or
and
mov
fwait
addr16
call
push
jne
and
stos
pop
js
adc
mov
pushf
pop
xor
cmp
xor
push
fstl
ljmp
mov
cmp
jle
icebp
and
jmp
shlb
fistl
arpl
cld
into
lods
rorl
cmc
or
cmc
push
aam
cmpsb
adc
xor
test
lahf
cli
shl
sti
and
inc
mov
jg
pop
pushf
adc
jne
insl
out
push
sub
sbb
and
into
test
sbb
or
adc
pop
or
popf
dec
int3
fdivr
pop
sti
sub
in
sahf
iret
out
fstenv
pop
fwait
push
addr16
adc
and
pop
pavgw
ret
popa
push
imul
outsb
je
insb
push
push
test
xchg
pop
aam
int
aas
mov
cs
in
jbe
leave
sahf
loopne
sbb
pop
hlt
push
pop
fiaddl
mov
repz
mov
dec
loope
cli
mov
mov
popf
mov
and
ljmp
fisubrl
mov
xlat
stos
js
jmp
mov
popf
hlt
loopne
pop
out
scas
jno
cltd
arpl
push
add
dec
shlb
movsb
popa
push
and
sti
dec
xor
mul
cmp
pop
push
pop
les
inc
scas
popa
mov
loop
mov
enter
mov
lods
jbe
xorb
out
testb
cmpsl
arpl
ror
xchg
popa
cmpb
outsb
daa
scas
xor
mov
pop
inc
and
adc
std
add
mov
ret
ficompl
stos
adc
dec
enter
xchg
repnz
inc
rcr
pop
push
lds
in
sbb
popf
jle
xlat
inc
xor
cld
cmp
inc
jmp
aaa
lahf
pop
push
sub
test
jne
and
rol
cmp
jmp
cwtl
inc
ja
out
imul
lock
cmp
out
mov
sub
add
cmpsl
jnp
add
call
popf
adcl
out
insl
dec
and
aad
adc
inc
pop
repnz
lods
test
mov
into
test
loop,pn
insl
adc
pop
cmp
lcall
mov
push
mov
sub
ljmp
add
xor
movsb
jb
push
xchg
test
in
push
out
sarb
push
popf
imul
lahf
and
jnp
add
sub
das
cwtl
mov
dec
popf
call
loope
mov
pop
jo
fisttpll
fbld
leave
mov
lret
cmp
jp
cltd
mov
pop
sub
add
jmp
dec
mov
cmp
sub
mov
pusha
cli
out
or
out
push
int
mov
cltd
sbb
xor
cwtl
leave
in
ret
aas
and
adcl
xor
mov
loope
dec
push
dec
xchg
scas
add
imul
push
sbb
je
out
popa
push
fnstcw
fwait
dec
outsb
loop
jg
dec
stc
ror
mov
push
inc
push
les
push
xor
sahf
push
scas
pop
mov
shr
out
pop
push
and
push
jno
scas
jo
out
faddl
sbb
daa
push
jge
shlb
adc
stos
fbstp
jge
mov
icebp
repz
push
mov
out
push
repz
jl
adc
mov
dec
aas
push
xchg
pop
add
insl
fisttpl
aad
lods
mov
shl
xor
adc
fiaddl
repnz
jp
in
xchg
arpl
bound
sub
lds
push
mov
jno
sahf
fldenv
jecxz
mov
adc
movsb
xchg
mov
fdivr
pusha
in
pop
cli
sti
mov
mov
call
imul
fs
add
fwait
adc
sahf
mov
iret
cmpsl
cmp
jmp
and
inc
mov
into
mov
test
subl
leave
push
mov
cld
repz
out
jbe
sub
decl
into
scas
jg
movsl
sbb
cmpl
insl
out
fisubs
ds
lods
mov
gs
jnp
loopne
or
jle
mov
ret
aad
dec
aad
es
xchg
ds
sti
inc
sbb
sbb
aas
push
pop
inc
mov
stos
pop
push
out
pop
into
mov
jp
mov
mov
sub
and
inc
mov
popf
rol
mov
pop
in
or
inc
xor
dec
xchg
mov
jns
daa
inc
dec
ror
mov
fnsave
push
lret
or
xchg
imul
sbb
shlb
gs
nop
or
adc
dec
mov
mov
repz
insl
pusha
add
repz
pop
shll
dec
pop
icebp
add
adc
push
push
pop
out
pop
push
rclb
cmp
pop
imul
popf
jne
jp
gs
inc
push
repz
jg
cld
fiadds
sub
fs
fildl
inc
stos
ds
pop
mov
xchg
cmc
dec
movsb
mov
ja
adc
aad
xchg
imul
mov
fnstcw
push
imull
dec
mov
lahf
subl
jge
in
jecxz
push
or
xchg
pushf
fsub
aam
mov
xor
mov
sub
jmp
add
fimull
xchg
shrl
pop
or
das
icebp
xor
xor
cld
or
add
inc
or
mov
jo
xor
std
jb
and
loope
or
lahf
adc
imul
in
cmp
xchg
xchg
xlat
cwtl
push
push
jnp
out
xchg
repnz
fsts
arpl
sub
adc
daa
jnp
adc
dec
sub
mov
rolb
sarb
lds
test
sub
adc
out
push
data16
push
inc
ds
ds
rol
sub
cmp
in
pop
mov
or
xor
cmc
sbb
pop
leave
adc
mov
bound
mov
nop
cld
mov
pop
dec
stos
enter
out
cmp
or
hlt
bound
jae
dec
cmp
sahf
xor
fcmovnbe
divb
lret
mov
repz
pop
add
jns
lret
stos
stos
sub
int3
movsb
arpl
cmp
push
xchg
fdivl
push
pop
gs
in
es
loope
icebp
lock
test
adc
scas
xchg
lret
inc
mov
adc
frstors
or
xor
sbb
repz
sub
push
or
jp
sti
xchg
xchg
in
cmp
add
lret
sub
dec
inc
enter
pop
pop
dec
push
or
xchg
sbb
xor
mov
inc
in
cmpsb
xlat
mov
xchg
mov
outsb
sbb
pusha
cmpsb
loopne
daa
xor
mov
jb
andb
push
mov
add
xor
arpl
fstl
bound
in
inc
mov
mov
ja
cmp
ret
in
ret
add
nop
sbb
mov
mov
neg
sub
ret
imul
push
test
clc
call
xor
mov
pop
mov
push
int3
sbb
stc
mov
addb
into
mov
cmp
and
popa
pusha
imul
js
insl
stos
shll
sub
xchg
push
idivl
loope
or
gs
in
repz
hlt
adc
mov
out
movsl
test
pop
dec
inc
nop
outsb
pop
push
xor
sbb
jno
push
inc
sarb
les
lret
imul
and
mov
push
movsl
mov
adc
sub
lret
mov
fldcw
mov
fbstp
mov
lcall
mov
inc
xor
repz
cli
adc
or
in
jmp
pop
and
fucomp
add
cmp
adc
test
ljmp
pop
cli
mov
push
fcmovb
sub
rep
in
jle
dec
es
inc
jmp
cli
pop
jge
sti
fbld
mov
push
pop
imul
pop
sub
inc
xor
fnstsw
jb
fisttpl
and
xor
jcxz
mov
movsl
mov
mov
imul
mov
cmp
inc
ss
add
sub
sub
inc
cmpb
aaa
in
addr16
push
mov
aaa
repz
fwait
movsl
inc
inc
ret
sar
pop
jmp
insl
out
clc
inc
into
int3
inc
cmp
jle
push
jo
aad
mov
enter
jmp
lods
xchg
cmp
and
mov
jns
ljmp
adc
pop
push
popa
out
mov
sub
lret
or
movb
push
cs
popf
mov
pop
testl
stos
fwait
sti
in
leave
and
imul
lds
and
and
mov
das
pusha
aam
xchg
jbe
fdivs
mov
loopne
fstpt
cld
hlt
fildl
cltd
dec
sar
jbe
jnp
insl
push
mov
fisttps
push
jl
push
push
inc
jecxz
mov
push
in
mov
or
adc
test
cmp
mov
popf
jo
inc
add
jno
xchg
pusha
xor
iret
push
mov
jo
int3
pop
push
mov
or
shll
movsb
lahf
mov
push
stos
cmp
jno
pusha
test
sbb
lock
das
ds
ror
repz
mov
pop
pushf
mov
xchg
mov
xchg
mov
pop
xchg
insb
jo
pop
or
outsl
push
jmp
adcl
test
mov
jmp
or
aad
mov
mov
add
enter
insb
pop
add
movsb
fisubrl
lea
push
push
adc
fistl
into
ret
aaa
cld
es
or
inc
jl
fwait
sub
icebp
and
es
stos
fcomp
xchg
cmp
aas
cmpsb
mov
cwtl
pusha
orl
insl
add
test
push
dec
and
clc
pop
stos
jp
cmp
je
mov
lea
push
rclb
mov
cli
mov
fdivl
pop
movsb
pop
mov
push
fwait
xor
jns
loop
sub
imul
lds
jns
sbb
dec
push
mov
cmpb
outsb
iret
loopne
mov
lods
pushf
ficomps
xchg
mov
mov
sub
sub
ljmp
popf
test
fs
sub
sub
fs
jmp
adc
sub
ljmp
mov
shll
mov
push
leave
lods
repz
dec
fldt
fs
in
pushf
lea
imul
xchg
inc
out
int3
pusha
inc
fdivr
out
xor
pop
sub
add
jp
mov
pop
cltd
push
mov
jmp
test
es
sbb
xchg
loope
stos
or
or
add
cmpsb
xchg
mov
pop
rorb
je
xchg
adc
push
out
adcl
cltd
push
into
dec
xlat
dec
mov
fwait
push
sub
into
adc
push
lret
dec
xchg
mov
jbe
xor
dec
in
adc
enter
xchg
stc
jne
and
pop
mov
arpl
inc
lcall
call
jecxz
and
xchg
stc
mov
pop
sahf
arpl
loope
rorl
in
and
jmp
cmc
xorb
in
mov
in
aad
jbe
loop
call
xchg
adc
push
push
mov
enter
cmp
ret
inc
mov
xchg
fcmovnb
xor
repnz
mov
pop
std
sbb
jnp
pop
sub
cmp
dec
mov
addb
or
sub
mov
push
mov
lahf
cmp
cmpsl
dec
and
sbb
jg
stc
and
loope
aad
ret
stos
sub
sbb
repnz
jno
addb
outsl
adc
rsqrtps
sub
adc
aad
xchg
test
rorb
pop
leave
mov
inc
icebp
pop
sbb
je
or
sbb
xor
enter
movsl
std
inc
std
in
mov
or
lods
adc
mov
adc
lods
add
push
add
adc
ljmp
int
pop
outsl
sti
push
in
add
sub
imul
sbb
out
mov
cmpl
mov
addr16
inc
out
add
and
add
mov
dec
or
add
cld
cs
decl
pop
push
test
imul
int
inc
mov
call
pop
jo
sbb
mov
mov
jno
xor
aaa
aas
les
repnz
or
clc
sti
popf
rsqrtps
ficompl
inc
cmpsb
repz
sub
or
or
pusha
repnz
mov
pushf
movsb
fsubr
mov
xlat
lcall
in
mov
pop
mov
int
push
sti
in
movsl
dec
pop
int3
xchg
mov
test
mov
pop
push
jmp
loop
mov
xchg
adc
mov
cmp
btc
aas
stos
jno
loope
jno
arpl
inc
mov
fiadds
ss
popf
xchg
adcb
mov
lods
fsubs
shrb
pop
into
mov
aaa
ficompl
xchg
sbb
dec
inc
sub
mul
orl
pop
stos
inc
ljmp
loopne
xchg
cmp
sub
jmp
testb
test
orl
je
inc
sub
or
test
aam
insl
inc
repnz
xor
daa
ja
cmpsb
xor
gs
add
mov
cmc
cld
cli
pop
mov
and
je
add
inc
leave
aad
pop
pop
mov
sub
bound
sub
jmp
cld
jne
push
sub
sub
add
or
daa
pop
push
lock
mov
mov
mov
mov
sub
xchg
jae
mov
mov
fidivs
mov
cmpsb
jecxz
sbb
fisttps
mov
dec
pop
ss
sub
popl
ss
fsubr
out
xchg
mov
sbb
sbb
popa
fistpll
xor
jp
imul
pusha
sub
and
sub
clc
sub
out
adc
jmp
xor
jns
dec
jns
ds
into
jl
or
cwtl
jg
push
bound
sub
lret
jmp
subb
xchg
sub
fsubl
push
mov
jb
cld
mov
mov
into
mov
mov
loopne
popa
int
fistpl
flds
ja
mov
mov
sub
inc
add
xor
mov
adc
pop
mov
dec
cmpsl
mov
or
mov
rorl
aam
cmp
stos
ds
push
sbb
jns
push
mov
mov
mov
xlat
sbb
jg
lods
lods
pop
lahf
mov
sbb
cmp
jl
push
mov
insl
in
je
dec
mov
jg
insb
insb
stos
add
jecxz
aas
mov
jae
xchg
xchg
xor
xlat
lret
lods
shl
mov
lock
adc
gs
ret
cmp
enter
sbb
test
addr16
mov
lcall
lods
push
jbe
push
aad
pop
mov
adc
mov
ss
stc
xchg
jg
in
sub
sbb
inc
jl
enter
add
add
cmpl
ret
jle
mov
mov
out
sbb
rolb
test
jge
cmpsl
lods
pop
xchg
push
sbb
sub
mov
push
mov
jae
enter
xchg
call
sub
into
mov
aas
in
cmp
loop
and
and
testb
popa
lods
imulb
out
aam
xor
jo
push
push
cltd
push
sbb
cmp
adc
fwait
sub
push
push
add
cltd
inc
fs
call
cmp
dec
dec
mov
jg
fbstp
mov
aaa
inc
push
sbb
or
das
arpl
jmp
jmp
pop
out
test
xor
js,pn
and
es
notb
or
xchg
inc
ja
loop
addr16
mov
jb
cmpsb
out
icebp
inc
ljmp
shl
mov
and
insb
mov
movsb
sub
pusha
stos
test
xor
popa
addb
fmuls
flds
dec
rep
jns
dec
jne
fwait
add
or
or
pop
arpl
out
mov
stos
xchg
test
add
or
mov
lret
inc
clc
sbb
je
sarl
ljmp
ds
sahf
pop
dec
add
adc
ljmp
enter
cmp
in
xor
enter
dec
mov
out
divl
and
dec
lcall
push
or
jbe
lret
fdivl
cmp
je
and
xchg
xchg
int3
inc
stos
outsl
iret
outsl
or
xchg
jno
or
hlt
cmc
jnp
push
in
push
pop
inc
push
scas
fmuls
out
pop
or
fldenv
cli
int3
rclb
out
icebp
cld
enter
jecxz
mov
sbb
rcrb
sbb
pop
sbb
decb
xor
cltd
das
sub
imul
mov
jmp
mov
pop
pop
cmc
loopne
in
pushf
adc
test
repnz
stos
into
sub
repnz
arpl
jle
shrb
lods
fs
jno
lds
xchg
pushf
and
out
sub
or
and
cmp
jmp
add
or
ljmp
push
push
xchg
fmul
flds
mov
adc
dec
sbb
rcrl
fbstp
faddl
push
imull
xchg
inc
and
mov
add
shrb
jmp
mov
add
in
sbb
cs
and
push
adc
sarl
sub
lods
sarb
sbb
or
cmpsb
jecxz
fisttpl
into
sbb
inc
inc
mov
xchg
and
call
mov
mov
js
fidivrl
or
pusha
adc
ror
std
mov
std
loop
pop
sarl
sbb
mov
ljmp
outsb
mov
inc
test
mov
mov
fxam
loop
std
hlt
sub
mov
inc
dec
out
dec
mov
ret
push
fdivl
pop
add
lods
xchg
and
mov
or
push
cmp
mov
test
push
push
mov
ret
mov
sbb
in
inc
xchg
in
dec
or
cmpsl
push
sahf
jns
inc
inc
shlb
mov
shrb
test
lods
call
cmc
popa
insb
out
insl
js
out
in
call
sti
int3
ret
and
shr
arpl
pop
push
fdivl
pusha
pop
xchg
jecxz
sub
push
xor
add
jp
in
idivl
ja
sub
inc
cld
sub
fisubrl
stos
mov
cmpb
imul
push
test
mov
sub
int
lods
pushf
adc
loop
mov
imull
dec
sti
cwtl
jecxz,pt
cld
rorb
insb
xchg
pop
sbb
jg
mov
mov
xchg
rorb
std
sbb
add
sub
rcrl
push
out
push
mov
inc
ret
icebp
sti
lret
lcall
insb
icebp
cmp
jo
jno
sub
orl
lock
shrd
inc
jno
fmuls
cli
add
cld
insb
pop
or
or
lea
xchg
cld
fsubrs
add
pop
call
and
pop
outsl
dec
pop
push
aas
sub
adc
and
push
mov
call
seto
mov
push
or
inc
inc
cmpsb
mov
mov
es
dec
aaa
cli
mov
dec
mov
or
rol
xchg
dec
mov
sbb
mov
movsl
or
or
mov
fisttps
into
sti
aas
loope
addr16
test
loopne
push
mov
clc
stos
sbb
stos
add
add
inc
pop
sub
and
inc
call
xor
push
es
adc
jne
adc
out
incb
adc
lcall
xchg
repz
ljmp
inc
sub
shrb
jbe
gs
bound
pop
stc
push
push
pop
popa
dec
lret
sarb
push
xchg
outsb
flds
std
shlb
push
lds
movsb
mov
and
sti
push
jns
je
mov
inc
ja
add
cmpl
pop
xchg
hlt
sahf
dec
mov
dec
fistpl
push
push
stc
push
dec
aaa
jle
or
call
jp
repz
in
call
stos
cmpsb
jecxz
test
push
cwtl
fbld
push
jp
mov
jno
aaa
fiaddl
mov
and
dec
out
bound
out
dec
shll
insb
and
out
push
hlt
loop
and
inc
inc
fisubl
nop
jbe
inc
or
adcb
outsl
xchg
repz
xor
cmc
shrl
or
xor
js
int
and
adc
inc
in
jnp,pn
cli
cmp
xor
je
sti
xchg
cmp
movsb
jne
clc
add
pop
ret
cmp
mul
sbb
lods
incb
inc
sub
push
bound
bound
add
push
das
inc
call
mov
arpl
jg
push
and
mov
fwait
push
cmp
pop
lcall
mov
fdivrp
jnp
cmp
sub
loopne
cmp
push
movsl
push
xor
adc
in
int
lods
outsl
mov
stos
xchg
sti
xchg
jecxz
xchg
les
int
bound
cld
adc
inc
jne
push
push
icebp
dec
out
or
lods
jnp
shll
neg
insb
rorl
mov
dec
stos
insb
ss
mov
inc
clc
mov
mov
dec
iret
movsl
push
xchg
or
loopne
mov
pop
pop
cmp
inc
jo
adc
std
stos
divb
jb
iret
cmp
add
pop
cs
je
imul
aas
inc
lods
mov
dec
xor
aas
jge
mov
sub
add
jg
sbbl
push
cmp
imul
jo
lods
inc
and
adc
pusha
in
jecxz
jbe
mov
ret
mov
jmp
jns
sbb
pop
sbb
jbe
mov
roll
jle
jmp
setae
push
xchg
xlat
sbb
inc
in
enter
jnp
fdivl
pop
mov
xor
fisubs
scas
test
sbb
push
lods
lret
dec
cltd
push
rcrb
sbb
js
mov
nop
mov
mov
sbb
xor
bound
ja
scas
jge
repnz
inc
sub
adc
fldenv
mov
jmp
or
jbe
push
dec
repnz
sub
fisubs
out
pop
mov
mov
dec
add
pop
outsb
lret
cmp
pop
push
dec
lock
cmpsb
dec
cld
inc
dec
lock
inc
mov
ljmp
rcrl
aas
sbb
rclb
sti
mov
arpl
in
adc
xor
or
negl
popa
std
inc
sub
jno
or
orl
jno
sub
sti
inc
dec
xchg
xchg
adc
into
adc
imul
popf
and
lret
jb
cmp
jbe
push
lret
dec
sarb
cmp
ja
sbb
inc
stos
sub
loope
adcl
add
outsl
pop
cmpsb
sbb
dec
cs
hlt
aas
cmp
imul
push
fld
push
adc
test
clc
xchg
test
pop
pop
fidivs
push
inc
repnz
sub
push
hlt
push
jl
push
repnz
loope
hlt
mov
ss
hlt
push
push
call
dec
jge
insb
repz
xor
and
jp
mov
adc
dec
add
loopne
cld
jle
xor
insb
adc
or
je
sbb
gs
sbb
popf
cli
mov
add
ja
jl
inc
mov
fisubrs
fwait
int3
std
inc
lea
loop,pn
or
pop
pop
lea
popf
dec
jb
test
fucom
dec
aad
jnp
popa
or
or
repz
fcomi
test
out
sahf
cs
and
fistpll
insb
add
popa
add
jecxz
xchg
imul
dec
loopne
push
dec
push
push
fwait
jae
mov
lock
cmp
push
mov
xchg
aas
adc
dec
loop
imull
out
lret
dec
inc
cmp
push
popa
xchg
movsl
stos
inc
inc
jg
inc
sbbl
aad
repz
mov
out
xor
adcb
add
jge
mov
jns
sub
pop
aas
cmpsl
sarb
call
pop
push
lcall
ficoml
jns
mov
add
leave
and
jp
jecxz
jecxz
and
cli
jg
testb
xchg
in
fimull
push
icebp
std
outsb
xor
out
xor
stc
out
je
xchg
loope
sbb
sbb
stos
out
popf
enter
sbbl
inc
test
xchg
pushf
scas
xchg
push
jge
cmp
or
bound
mov
cltd
mov
mov
mov
inc
pop
das
out
cmp
jns
dec
es
inc
bound
aad
mov
daa
cmp
lods
or
jmp
sub
xchg
mov
enter
jnp
xor
pop
mov
cli
sub
jge
mov
xchg
hlt
icebp
and
xchg
push
adc
movd
into
inc
push
dec
sbb
fsubrl
jb
pushf
and
repz
add
cmp
or
lock
test
jae
out
push
mov
mov
insl
lret
sbb
inc
fnstsw
push
je
ret
movsb
movsb
adc
dec
je
pop
xchg
inc
xchg
rorb
pop
pop
mov
bound
fcmovb
xor
cwtl
add
fisttpl
mov
and
cmp
pop
jbe
mov
sbb
cmp
in
bound
mov
daa
test
call
add
pop
jle
int
fbld
or
imul
push
push
adc
adc
loop
push
pop
std
mov
and
push
push
mov
cmpsb
ss
jae
sub
or
popa
adc
push
or
cmpsb
shlb
fwait
jle
pop
jge
jno
negl
pop
push
mov
pop
or
adc
bswap
sarl
scas
sbb
mov
jle
mov
jne
jo
out
push
add
imul
loope
lcall
sysret
inc
inc
ja
lret
mov
jne
xchg
pop
int
jle
imul
xchg
adc
movb
sbbl
cmp
dec
out
movsb
jnp
push
lcall
fdiv
in
scas
jo
jp
dec
test
imul
add
daa
pop
sub
arpl
lret
push
dec
and
ja
dec
and
frstor
loop
js
push
mov
add
into
mov
sub
popa
push
ljmp
xor
clc
cs
jne
shlb
call
and
push
mov
loop
daa
adc
mov
or
es
cmp
jg
jle
test
or
cmp
sbb
jno
sti
out
mov
xlat
dec
adc
rorl
pop
repnz
push
orb
jno
add
pop
jmp
stos
lea
cmpl
xchg
movsb
lds
or
inc
sub
roll
call
xchg
push
jb
adc
jmp
mov
ds
xchg
jge
push
add
sub
jl
and
test
push
inc
push
and
push
cwtl
jle
ret
mov
mov
cmp
mov
cmp
bound
js
cs
stos
dec
movsl
loope
adc
add
and
sbb
out
push
fs
scas
sub
insl
stos
scas
or
fisubrs
jnp
or
xor
stos
mov
sbb
testb
shll
inc
add
andb
and
sbb
and
adc
push
mov
or
push
sub
insl
rclb
fstpt
mov
cmc
jg
ret
orb
xchg
mov
pop
xchg
fldl
sti
mov
jg
fs
sub
popf
aas
call
and
dec
push
push
iret
orl
psubd
mov
punpckhbw
test
xchg
fmull
sub
push
imul
cs
or
fisubl
cmpsb
adc
sub
popf
or
scas
jp
mov
pop
sbb
pop
aaa
cmp
mov
js
in
mov
cld
in
sub
add
pop
inc
ss
sbb
lcall
sub
and
lea
lock
or
jns
lods
push
adc
ret
out
jecxz
out
add
in
inc
outsl
mov
movsl
inc
pop
sti
repz
clc
fimuls
fmul
dec
mov
es
into
mov
pushf
mov
lcall
popa
jle
add
mov
mov
pop
arpl
xchg
mov
fldenv
pusha
roll
in
hlt
cmpsb
imul
pop
gs
mov
xor
mov
data16
xlat
lock
mov
sti
add
test
inc
fisttpll
jne
popf
sub
iret
bound
test
xchg
enter
push
xchg
or
xchg
iret
arpl
fs
adcb
stos
and
cmp
mov
scas
add
dec
xchg
cmpb
xchg
sub
cmp
cltd
sarb
push
sbb
andb
sbb
ret
and
cmpsb
push
cmpl
pop
aad
cmpsb
and
jp
in
and
dec
es
fs
ds
out
and
std
cmp
add
roll
jo
mov
leave
adc
lcall
inc
jge
adc
inc
pop
mov
xchg
leave
xchg
jno
sar
mov
loopne
sbb
lods
jecxz
push
cmp
cmp
shrl
push
and
cltd
jmp
nop
popf
aas
xchg
out
mov
shrl
inc
insl
ja
daa
ds
loopne
test
mull
cmp
in
cmp
gs
icebp
add
nop
aam
les
and
scas
das
push
push
inc
clc
adc
xor
scas
adc
dec
ret
dec
push
in
insl
jecxz
icebp
mov
jmp
mov
pop
pop
test
lods
inc
inc
loope
inc
cmp
ds
push
ds
negl
jno
cltd
shll
sbb
lahf
lds
dec
inc
mov
stos
lret
or
jnp
repnz
push
test
bound
int
sub
aad
out
adc
testb
sbb
sub
divb
xchg
push
or
push
lods
sub
cmp
xchg
fdivr
lcall
ret
imul
jl
adc
sar
mov
jp
dec
std
mov
pop
mov
pop
mov
in
es
xchg
into
imul
pop
or
and
loop
mov
nop
in
mov
or
xchg
cmpsb
popa
cld
int3
pushf
pop
mov
mov
jecxz
adc
in
gs
sub
mov
cmpsl
cmp
pop
mov
jne
dec
sti
sahf
leave
clc
mov
mov
pop
jecxz
add
das
pop
sub
in
fisubs
xor
ja
xor
out
ficompl
repnz
jge
add
mov
sub
icebp
xor
fwait
shll
adc
ror
int3
int3
dec
jo
shlb
xor
sbb
repnz
push
push
loop
xorb
jbe
mov
idivl
movsb
flds
mov
outsl
into
loopne
mov
add
lret
imul
mov
push
sbb
pop
pop
sbb
push
incb
sub
fcoml
push
pusha
pop
xor
xor
push
loopne
xchg
clc
cs
cwtl
adc
mov
or
sti
mov
sub
mov
mov
insl
dec
mov
iret
in
add
add
inc
add
and
out
in
mov
loope
repnz
mov
add
mov
movsb
jne
jb
shrl
add
icebp
popa
push
xchg
inc
movsb
jo
int3
push
jl
and
cltd
outsb
rorl
popa
les
ljmp
movb
pop
jns
cmp
cmpsb
xchg
mov
sbb
jp
xchg
out
test
push
pop
ret
cmp
push
xor
and
mov
adc
add
cltd
ret
rclb
sub
outsl
ljmp
sahf
push
shlb
arpl
adcl
jns
dec
pop
stos
test
mov
and
bound
leave
lret
hlt
mov
out
mov
scas
push
test
sub
jae
inc
and
add
subb
jo
inc
jno
dec
inc
or
cmp
stc
test
and
and
and
dec
mov
push
in
xor
lock
loopne
ljmp
imul
sbb
ja
fisubrs
and
xchg
into
cmpsl
movsl
in
mov
in
arpl
cmp
fadd
cmpsb
lret
in
mov
jg
inc
fmuls
inc
inc
js
or
std
xchg
mov
sbb
rolb
aas
pop
inc
notb
cmpsl
int
fcoms
xchg
sbb
popa
movsb
pop
or
mov
ljmp
push
mov
clc
out
jnp
mov
fcmovnu
mov
sub
aaa
loopne
dec
push
mov
sub
adc
inc
xchg
xor
dec
fisttpl
imul
sub
jg
out
iret
jbe
pop
sbb
rcrb
sbb
xchg
lods
xchg
xor
aam
jae
pop
pop
mov
sbb
stos
mov
sbb
sbb
es
push
mov
dec
dec
test
aad
add
dec
jae
adc
sbbb
inc
loopne
cs
lods
push
stos
mov
mov
loop
or
sub
addb
and
testl
sbb
stos
xchg
dec
push
ds
lret
sahf
inc
fsub
pop
mov
pop
dec
mov
insl
rcr
stos
in
gs
stos
loopne
loop
pusha
mov
in
iret
dec
hlt
add
sbb
push
inc
insb
lcall
add
dec
pop
fwait
jle
fcmovbe
push
xor
aas
bound
xor
sti
xor
push
push
jmp
mov
fidivl
adc
outsl
cld
stc
cmpsl
lret
mov
lock
cmc
and
iret
jecxz
lret
push
xchg
adc
pop
dec
lcall
repnz
push
and
shl
dec
rcr
adc
shrl
loope
add
cmp
and
or
dec
mov
ds
inc
iret
mov
sbb
or
xlat
mov
pop
inc
sbb
bound
dec
clc
inc
daa
jmp
xor
sti
jp
notl
add
xchg
xlat
mov
push
popf
lahf
xchg
inc
popf
nop
mov
stos
stos
scas
cmpsl
sub
sbb
cli
or
add
pop
lahf
in
shr
sahf
pop
arpl
into
movsb
test
dec
call
jge
mov
fimull
fistl
jo
mov
js
or
cmpsb
pop
les
clc
sahf
cwtl
and
push
xchg
pop
push
in
ret
mov
jl
sub
ret
shl
out
ljmp
es
shlb
jno
mov
data16
dec
cltd
push
cmpsb
fdivl
fcompl
ja
or
adc
icebp
pop
jnp
mov
fsubrl
pop
aas
test
test
jle
inc
flds
fsubs
int3
iret
mov
iret
call
data16
adc
jge
int
add
repnz
out
and
fdivl
stos
ret
xor
jae
sahf
sbb
inc
mov
pop
or
pop
jg
xchg
adc
imul
cli
mov
pop
jge
mov
cmp
cmpsl
sub
jge
or
icebp
xchg
dec
add
rcll
add
or
dec
jl
fst
mov
in
push
bound
dec
mov
cmp
and
sub
jbe
rolb
sbbl
or
push
outsl
mov
xor
in
iret
dec
test
push
pop
xlat
in
dec
mov
sbb
je
out
jge
test
lods
stos
enter
cmc
cmp
addr16
jmp
scas
addr16
mov
mov
jge
ds
rcrb
or
add
mov
enter
xchg
adc
push
dec
or
ljmp
sbb
pop
addr16
repz
xor
sahf
cmp
ljmp
inc
jne
in
adc
pop
mov
jmp
mov
icebp
push
jmp
shl
cmpsb
aas
int3
and
ja
adc
and
mov
xlat
mov
idiv
ret
push
sahf
test
stos
pop
fldt
jo
nop
cmp
sub
cmp
pop
xchg
sbb
int3
int
pop
gs
pop
cmp
dec
aad
in
fdivl
mov
into
xchg
mov
push
sbb
cmp
inc
mov
mov
in
mov
fnstenv
adc
mov
sbb
inc
inc
outsb
cmp
jns
pop
test
xor
mov
fs
pop
jg
jb
xchg
and
mov
nop
cwtl
inc
call
mov
repnz
fs
out
rcr
subl
popf
mov
shl
pop
push
cmp
je
test
orl
and
and
outsl
xchg
aad
int3
sub
icebp
sarl
dec
add
mov
xor
dec
push
mov
xor
into
into
bound
cltd
cld
jne
dec
jns
subl
xchg
orl
mov
ficompl
fnstcw
pushf
popa
icebp
xchg
xlat
stc
mov
fiaddl
insl
test
fs
lret
mov
sub
das
ficoms
hlt
mov
outsb
mov
mov
dec
push
pop
shlb
mov
stos
inc
cld
and
sub
repnz
ja
setb
loopne
jbe
xlat
adc
mov
std
insb
xor
lods
loope
jo
adc
je
sub
inc
nop
mov
mov
rcrb
or
ljmp
cmp
gs
push
pushf
push
lods
fsubrs
movsl
push
lods
cld
je
imul
xor
rolb
lock
and
sbb
ja
add
sub
xor
aad
adc
jns
lgs
cmp
adc
enter
push
outsl
daa
jno
lahf
mov
xchg
dec
les
xor
gs
shrl
sbbb
dec
out
scas
stc
mov
cmc
int3
push
mov
pushw
movsl
or
dec
test
mov
aad
pop
arpl
insl
mov
or
addb
movsb
lock
push
add
pop
iret
loop
inc
or
mov
dec
pop
aaa
add
cs
mov
mov
jb
dec
push
ja
pushl
push
inc
addb
mov
and
out
cs
sbb
push
jbe
pop
adcl
js
push
in
out
es
out
imul
das
lret
lret
in
add
jnp
int3
vmovupd
test
mov
dec
in
data16
out
push
push
scas
sbb
test
and
mov
push
movsb
sub
mov
xorl
adc
test
ret
xor
cmp
mov
dec
movsb
aad
pop
push
scas
icebp
loope
inc
pop
push
hlt
stos
bound
jno
lods
adc
repnz
cwtl
cli
fwait
mov
inc
jae
test
call
js
sbb
popa
push
sub
sub
in
and
pop
sti
stc
xorl
fsts
mov
jp
mov
mov
aad
sar
mov
mov
divps
lds
add
out
leave
mov
or
scas
lret
cmp
sarl
addr16
push
rcl
aas
in
xchg
not
inc
mov
mov
xor
sbb
cltd
inc
push
data16
ds
js
loope
pop
out
xor
loope
fidivl
jno
xlat
fldcw
icebp
sub
mov
arpl
mov
ret
shl
xor
mov
xchg
lcall
xchg
jne
jecxz
sbb
xchg
cmp
aaa
dec
pop
les
leave
imul
jmp
mov
cmp
xor
jbe
call
mov
lahf
mov
lds
jg
cmp
inc
or
test
dec
push
movsl
stos
push
inc
mov
mov
clc
outsl
add
dec
adc
sub
lock
out
ret
movsl
adc
pop
sbb
test
mov
xchg
mov
cld
pop
cmp
hlt
cmp
inc
xchg
mov
inc
lcall
outsb
sbb
cmp
adc
jo
sub
xor
inc
sti
xchg
mov
add
ja
cli
fptan
mov
inc
and
sti
jg
cmc
movsb
int
mov
inc
test
lahf
pop
cwtl
push
test
divl
call
inc
push
mov
in
xchg
repnz
shrl
sbb
sbb
jo
pusha
mov
outsb
mov
sahf
pop
fdivp
ret
and
adc
and
icebp
out
out
cltd
mov
les
pushf
mov
loope
daa
adc
lret
rorl
lds
lcall
inc
movl
cmpsl
cmp
arpl
in
cmc
inc
inc
sahf
in
jns
dec
fimull
stc
sar
pop
inc
mov
int3
test
mov
mul
xor
sarb
and
dec
pop
rclb
fsts
popf
outsb
icebp
scas
shll
fcomp
daa
adc
cmpsl
jl
movsl
lods
imul
push
jmp
inc
xchg
testl
xchg
jns
mov
sub
mov
daa
inc
inc
cmp
aam
add
test
dec
out
xchg
data16
sahf
call
adc
lret
bound
or
negb
insb
xor
pop
cmp
repnz
sub
idiv
xchg
insb
or
sahf
inc
sbb
lcall
xchg
imul
imul
mov
push
and
mov
add
push
sbb
arpl
andl
inc
imull
in
lcall
out
in
cmp
push
push
stos
daa
add
lcall
jbe
into
iret
cs
faddl
je
adc
push
push
dec
cld
jp
dec
sub
pop
pop
lahf
xchg
lods
jg
cmp
mov
xchg
test
testl
roll
cmc
jmp
shlb
fldt
adc
clc
lods
sbb
ds
or
es
test
sub
rcr
inc
mov
int3
shrb
stos
in
jmp
fcmovnbe
mov
lcall
aad
std
cmp
add
mov
sub
adc
stc
das
jp
add
pop
xor
iret
xchg
xor
inc
jbe
lods
je
jl
dec
dec
daa
inc
jno
enter
not
je
ret
add
loop
stos
xchg
mov
xchg
jge
std
loop
addr16
xlat
fisubrl
test
or
inc
idivb
xor
int
inc
mov
and
test
sub
and
fwait
jle
icebp
inc
cmp
dec
ret
roll
movsb
xor
adc
mov
mov
test
mov
dec
loope
pop
aas
lods
cmp
icebp
aad
jmp
lret
fimuls
aam
push
js
lods
enter
gs
mov
sbb
stc
lcall
out
dec
and
test
loopne
dec
aas
push
push
mov
outsl
sub
mov
lret
inc
mov
push
pop
cmp
out
sahf
fcmovu
or
sub
negl
xor
jns
xchg
push
ret
mov
lods
xor
out
jl
xchg
xor
adc
adc
cld
cmp
rorl
jmp
stos
ret
xor
adc
pop
and
rep
mov
rclb
pop
pop
xorl
pop
rcll
test
shlb
xchg
fistl
inc
cmpsl
sti
mov
rorb
dec
shrl
add
out
in
mov
pop
sbb
orl
mov
mov
into
mov
jecxz
xchg
int3
inc
addb
jns
push
and
mov
xor
das
repnz
fisubs
pusha
cmpsb
push
inc
dec
mov
jne
mov
mov
xlat
rcrl
xchg
cmp
adc
push
sbb
test
test
shlb
or
sub
rcrl
mov
iret
rorl
adc
repz
nop
pop
lcall
mov
sbbl
out
jmp
fcomps
mov
lret
std
or
inc
imul
sub
call
mov
jbe
imul
dec
in
in
add
mov
stos
out
dec
cmp
jne
xchg
dec
jno
inc
inc
fs
add
repz
lods
jne
in
jne
sub
lea
pop
fisttpl
jno
lret
mov
jno
in
cs
xchg
inc
ljmp
and
repnz
test
jp
fiaddl
dec
mov
aas
and
out
push
fstl
xor
pop
test
cmp
test
lret
pop
mov
rclb
lock
neg
jg
mov
jns
sbb
cs
fwait
call
xchg
sti
ss
push
add
dec
lea
cmp
inc
out
out
mov
push
dec
aas
jns
push
test
or
test
mov
adc
dec
cmp
xor
inc
mov
cmp
mov
xchg
lret
push
mov
pop
popa
pop
mov
movsl
call
mov
push
rep
inc
mov
jle
cltd
mov
mov
cs
pop
sub
ljmp
das
stos
movsl
daa
or
cli
or
push
push
xlat
xor
lret
ljmp
daa
push
and
insb
out
ljmp
xchg
jae
jl
insb
mov
ds
xor
insb
scas
mov
push
mov
lds
jge
mov
in
cmc
fs
cmp
pushf
pop
and
fdivrp
fdivrl
pop
shlb
cli
out
orb
div
call
pop
dec
sbb
loop
pop
mov
adc
or
pmaxsw
in
aaa
gs
inc
add
lock
pop
push
insl
insl
das
push
out
push
pushf
iret
dec
dec
loopne
cmp
stos
push
xlat
lock
jl
in
in
cwtl
cld
test
je
sbb
in
jmp
pop
cmp
sti
les
sbb
push
or
inc
push
pop
add
jno
mov
xchg
hlt
and
inc
pop
ret
xchg
inc
sub
push
mov
mov
iret
xor
loopne
dec
dec
or
pushf
outsb
fisubl
add
scas
lds
xlat
shrl
pop
mov
sbb
repnz
sahf
lock
sahf
ljmp
aas
ficoml
fisubl
push
cwtl
add
lock
wbinvd
je
lods
xchg
std
mov
out
or
add
je
jns
fisttps
jecxz
inc
insl
cwtl
xor
popl
inc
and
push
andb
add
push
pop
test
int3
and
mov
or
mov
jecxz
adc
test
aad
call
fcompl
jg
or
pushf
jns
add
pop
shlb
push
aaa
cmp
roll
addr16
mov
dec
sbb
cmp
inc
sub
sub
xchg
cmp
push
pop
pop
pop
lahf
or
test
mov
inc
sub
pop
loopne
clc
in
pop
shrl
ljmp
shlb
pop
add
rorl
sarl
dec
mov
and
jl
loopne
inc
inc
cmpsl
hlt
mov
negl
iret
mov
cmpsb
sbb
call
push
and
out
xchg
ret
xor
cltd
ss
dec
je
pop
hlt
or
or
js
test
lret
lret
shrb
popa
adc
pop
stos
jb
xchg
sbb
sub
testb
out
and
fildll
mov
scas
pop
dec
test
stos
arpl
cli
fidivs
cmp
dec
jmp
fisubrs
xchg
dec
iret
and
pop
cwtl
fcmove
pop
mov
add
ret
pop
mov
cmp
fdivrs
icebp
insb
js
push
iret
inc
add
repnz
leave
inc
in
ret
cmp
mov
es
pop
rclb
mov
inc
out
negl
sub
cmp
cmp
push
sti
imul
pop
mov
dec
dec
xchg
je
lret
lock
bound
mov
mov
aas
aad
xor
mov
int3
or
es
aaa
push
lock
out
or
hlt
dec
jl
mov
stc
es
and
pop
jae
repz
sub
sbbb
or
ret
test
inc
cmp
sbb
dec
jge
push
inc
cmp
inc
xchg
fdivrl
dec
lret
shlb
push
xor
mov
mov
into
jnp
xlat
push
lret
pusha
mov
shrl
je
xor
pop
je
jmp
orl
in
xor
pop
dec
scas
test
jb
cmp
dec
cwtl
imul
stc
mov
cwtl
call
sahf
lahf
and
sub
out
mov
addr16
jno
movsb
dec
mov
pop
mov
add
in
mov
lods
std
cwtl
imul
insl
bound
fwait
inc
or
popf
pusha
ss
push
iret
ficompl
pop
test
aam
popf
mov
dec
and
mov
test
mov
rorl
mov
loop
aad
js
mov
insl
imul
aad
inc
dec
add
inc
addb
dec
lods
repz
shl
and
test
mov
xlat
mov
adc
mov
dec
dec
and
pop
iret
cmp
mov
cmp
repz
les
popf
notb
xor
and
pusha
lea
or
ds
and
mov
push
repz
or
out
sbb
jno
mov
mov
fdivr
jle
insl
in
mov
cmp
adc
lcall
lds
cmpsl
jnp
nop
pop
and
aad
fstpl
cmp
push
jge
or
pop
test
sbb
leave
jo
ja
andl
daa
mov
ja
push
roll
push
fs
dec
out
bound
pop
nop
push
movsb
ja
jl
loopne
cmp
int
orb
add
mov
dec
push
leave
cmpsl
mov
xchg
stc
pop
es
mov
dec
fisttpll
pop
xchg
dec
adc
cwtl
lret
sub
sub
push
fisubrs
fldt
mov
test
xorl
sbb
inc
movsb
xchg
mov
push
inc
xor
inc
inc
cmpsb
enter
scas
sub
nop
mov
mov
adc
xorl
in
jmp
sbb
adc
stc
push
insb
ljmp
into
push
shlb
push
rol
fldl
aas
sub
xlat
dec
popf
push
rolb
adc
and
jmp
addr16
or
sbb
dec
push
push
je
ljmp
jnp
xor
addr16
inc
les
lcall
aad
lods
lcall
test
xchg
enter
es
sub
add
repnz
pop
and
imul
pop
outsl
add
scas
mov
sbb
ficoms
test
mov
jnp
xchg
je
sbb
lret
loopne
pop
paddsw
pop
mov
or
test
jne
mov
push
xor
ret
adc
sub
std
mov
ljmp
lea
cld
loope
jne
das
mov
sbb
jecxz
pop
dec
in
lahf
outsb
mov
sub
mov
sub
mov
es
mov
hlt
dec
je
mov
mov
enter
inc
cmpsb
jbe
xlat
fwait
syscall
cmp
push
cmp
or
outsl
add
add
inc
jge
mov
sub
imul
or
jl
sub
int3
push
push
cmp
sbb
and
mov
out
add
pop
sub
and
in
testb
xchg
dec
fisubrs
test
mov
es
xchg
cld
mov
sti
add
inc
popa
sbb
inc
lcall
sub
lret
jne
or
xchg
push
pop
xchg
cmp
dec
lret
inc
cwtl
ljmp
mov
nop
or
stos
ljmp
cmp
jecxz
mov
stc
mov
fwait
xchg
mov
stc
mov
adc
int
or
cld
mov
in
adc
orb
or
xchg
pop
imul
fcoml
mov
add
inc
push
push
xchg
add
mov
mov
mov
sbb
out
add
add
push
mov
inc
cmp
stos
sub
ja
int
nop
pop
cld
push
popa
mov
push
in
xchg
loope
cmp
push
pop
xchg
mov
xor
mov
gs
out
mov
adc
xor
ljmp
sbb
sbb
loope
icebp
mov
jne
cmpsl
inc
add
push
mov
add
pop
sahf
mov
sub
arpl
in
popa
daa
rorb
mov
ljmp
aaa
xchg
cmp
jbe
rclb
cs
out
and
sbb
ss
pop
mov
or
test
stos
movsb
push
inc
loopne
call
shlb
fwait
cld
dec
loop
sub
and
add
lock
xchg
and
pop
mov
adc
pop
mov
sub
loop
mov
adc
test
push
repnz
es
rcl
sarl
inc
ja
les
and
cltd
js
sub
push
dec
daa
fmull
jo
bndldx
and
xlat
movntq
out
adc
mov
lods
inc
jno
stc
xchg
ljmp
ds
sbbl
mov
repnz
mov
shlb
int
xor
aaa
fdiv
push
mov
add
mov
sub
adc
rorl
sbb
mov
pop
in
movb
shlb
dec
pop
add
stc
adc
andb
shlb
lods
mov
add
in
stos
scas
aas
inc
cmp
ret
std
mov
dec
cmc
mov
inc
out
and
sbb
sub
push
nop
pop
pop
divb
pop
lods
subb
sub
jg
xor
xchg
sub
or
cs
stos
mov
pop
rorb
inc
stc
pop
fistpl
dec
xchg
clc
xor
flds
cld
fsubr
cmp
cs
push
jecxz,pt
nop
in
jecxz
in
push
lret
lret
push
sbb
loope
test
jp
or
add
icebp
std
mov
out
shlb
rclb
cmp
jge
bound
repnz
adc
jg
mov
mov
lock
push
push
pop
pop
push
push
sub
jge
cmp
mov
add
dec
fwait
popf
inc
xchg
aad
adc
adcl
xor
jo
and
mov
pop
clc
inc
inc
cmp
out
leave
in
xchg
out
lea
cmp
push
pop
and
inc
mov
or
mov
sub
rcr
in
pop
and
cmp
icebp
stos
dec
or
rcr
outsl
dec
mov
push
cmpsb
jns
arpl
pop
cmpsb
xor
clc
xchg
iret
jno
test
int3
sbb
mov
dec
vpacksswb
aad
andb
lcall
je
lret
sub
inc
test
adc
adc
rcll
mov
adc
jle
push
outsb
data16
arpl
pop
jne
test
xor
les
stc
dec
rcll
and
sub
push
add
repz
jmp
push
hlt
xor
scas
push
jge
jo
mov
pop
or
mov
xchg
outsb
push
jbe
xchg
cmp
mov
pusha
daa
lret
cmp
mov
mov
bound
inc
xchg
aaa
jno
pop
and
mov
in
adc
or
stos
cmp
ja
fdivr
inc
fs
insl
data16
push
pop
outsb
xor
insl
hlt
fiadds
mov
les
xchg
lret
adc
or
arpl
dec
push
test
test
mov
add
mov
inc
jne
add
push
loope
repnz
cmp
jne
and
cmc
je
cli
pop
xchg
lods
leave
sti
sub
sahf
jecxz
stc
mov
minps
cmpsl
push
mov
shl
rcll
aam
sbb
rcll
sbb
lret
add
mov
mov
aam
pop
lea
cmpsl
mov
mov
fs
push
adc
and
add
or
nop
test
popf
repnz
divb
lcall
or
cmp
cmp
cli
pushf
push
lea
add
or
adc
ja
sbb
pusha
out
mov
cwtl
in
or
subb
imul
insl
out
xor
stos
pop
push
pop
in
aam
shrl
in
shll
pop
ret
js
cmp
push
inc
xchg
aaa
inc
les
imul
add
or
lahf
inc
out
int3
xor
inc
mov
js
cmc
dec
xchg
outsl
cmpsl
mov
cmpsb
cmc
jb
loope
add
adc
add
sbb
push
clc
sbb
cmp
repnz
push
shrb
xor
filds
mov
ss
jb
test
xchg
hlt
cltd
stos
xchg
push
les
addr16
dec
sbb
push
sahf
lea
fdivrl
fnsave
lds
and
mov
in
cwtl
push
pop
xchg
clc
aaa
addr16
stc
cwtl
iret
push
and
loop
inc
cmpsb
add
inc
fisubrl
mov
sarb
pop
xchg
shl
jecxz
jg
inc
push
or
fs
jnp
aad
int3
mov
rcrl
fidivs
mov
push
stc
add
push
sub
shlb
int
lcall
out
jnp
ss
cld
sbb
sub
mov
aaa
icebp
cmp
lods
or
dec
clc
cli
repz
das
loopne
icebp
mov
clc
lcall
test
mov
push
pop
xchg
cli
jo
inc
icebp
and
xchg
fwait
add
inc
add
or
dec
inc
fiaddl
rorl
stc
and
pop
nop
push
jl
mov
cmp
pop
and
aaa
pop
xchg
xor
enter
sub
cmp
sbbl
pop
lods
lea
push
lret
lahf
mov
and
and
aaa
sarb
adc
test
repz
inc
cmp
adc
les
pop
test
xchg
sti
adc
add
rolb
fsubrs
daa
mov
and
mov
mov
stos
leave
push
bound
fwait
jns
xchg
fadd
in
mov
daa
inc
arpl
push
in
sbb
popf
mov
adc
push
insl
and
jne
daa
mov
jecxz
push
xlat
dec
aad
jge
cmp
imul
insl
jl
int
test
fdivs
adc
mov
xor
mov
dec
ficompl
hlt
lods
mov
xchg
sub
out
push
or
aaa
push
lds
mov
loopne
lock
inc
aaa
test
lret
sbbl
pop
xor
add
and
test
mov
mov
xor
out
adc
add
call
or
aas
jmp
test
add
insb
xor
fildl
mov
sub
das
mov
movsb
hlt
and
stos
add
mov
outsb
inc
sarl
push
clc
pop
or
enter
pop
push
sbb
aaa
mov
sub
sbb
stos
insb
fildll
add
add
sub
inc
dec
mov
out
push
mov
loope
scas
in
popf
mov
es
fmull
xchg
aam
mov
inc
cltd
cld
mov
pop
jp
mov
mulb
mov
fisubrs
mov
and
pop
pop
jne
jecxz
mov
cmpsl
xor
push
mov
mov
in
aad
dec
loope
cmp
stos
dec
sub
cmp
add
scas
dec
sbbb
mov
lahf
inc
pop
loopne
lods
andw
mov
movsl
stos
ds
jne
ljmp
inc
ret
push
in
pop
mov
cwtl
mov
mov
xchg
cmpsl
bound
or
push
cmp
lea
or
imul
inc
sbb
push
cmpsb
gs
xor
cmp
fs
xor
xlat
mov
mov
dec
xor
ljmp
test
sbb
mov
dec
outsb
mov
popw
cmp
aaa
hlt
xchg
gs
xchg
mov
scas
mov
sub
imul
cs
popa
push
xchg
iret
mov
cmpl
imul
in
mov
aad
pop
pop
aaa
cs
push
les
fnstenv
push
xor
mov
pusha
mov
ret
bound
sub
jns
addl
cmpsb
and
aad
add
push
mov
mov
jmp
aad
pop
push
outsl
and
stos
insl
stos
pop
cs
ret
or
sarl
addr16
mov
xchg
inc
enter
iret
dec
mov
sbb
jp
out
mov
leave
pop
cmpsl
test
sub
mov
push
and
push
loope
pop
add
mov
in
orl
xor
fsubrs
jnp
movsb
lods
popf
push
rcll
flds
rolb
mov
xchg
pop
add
add
dec
in
inc
and
jle
imul
sbb
mov
mov
jge
and
fistpl
mov
mov
fildl
adc
fbld
or
stos
sbb
mov
mov
mov
fisubs
adc
dec
addb
call
sub
rcl
sbb
xchg
mov
push
addb
jne
jno
ss
sbbl
out
inc
test
ja
jno,pt
mov
in
push
lods
mov
sub
mov
dec
add
mov
xor
out
pop
scas
cmc
scas
sahf
add
pusha
dec
das
mov
jl
xchg
mov
fdivr
dec
shl
inc
mov
jl
ljmp
adc
dec
jo
in
sub
mov
pop
sbb
fnstcw
and
cld
sub
or
in
pop
cmpb
mov
pop
popf
jmp
sbb
sbb
push
mov
jp
cmp
push
testl
lahf
and
aam
lods
stos
inc
pop
pop
mov
fs
ja
lods
stc
add
lods
fdivl
sbb
mov
lods
test
nop
mov
xchg
imul
test
dec
push
mov
inc
ds
cld
test
push
mov
sub
out
aas
rcrl
mov
or
hlt
out
cmpsl
pop
push
bswap
cmc
pusha
pusha
sbb
clc
inc
adc
push
fidivrl
sbb
je
movsb
mov
fsubrp
ficoms
popa
movsb
dec
push
sub
or
movsb
or
xorb
cmp
dec
ds
test
das
fisttps
or
sub
test
cmp
pushf
sub
dec
test
mov
sub
cmpl
inc
sub
ret
ds
in
stc
inc
adc
imul
lock
or
dec
push
xorb
shlb
jmp
scas
decl
movsl
fwait
shll
pop
sbb
aad
pusha
pusha
or
fimuls
sbbb
jbe
mov
nop
loope
sbb
sti
scas
movsb
mov
jae
cmp
mov
imul
nop
sbb
xchg
xchg
push
or
adc
or
xor
loope
jmp
sbbl
iret
test
int3
push
jg
mov
add
incl
scas
fists
mov
inc
cmp
push
int3
movb
rclb
jb
scas
fildl
push
loopne
adc
dec
xchg
fwait
ja
and
sub
add
mov
xchg
enter
xchg
pop
xlat
les
push
cmp
mov
cmpsl
lock
lods
into
cli
fwait
and
es
and
out
cmp
push
mov
sub
insl
scas
sbb
dec
pop
or
add
adc
sub
push
push
or
ficoms
mov
mov
push
stos
ja
ret
push
hlt
sbbl
lock
fadds
or
ljmp
jg
sbb
seto
inc
and
loopne
aam
jnp
call
mov
sbb
xlat
rcrb
push
cmp
dec
pop
sti
loopne
popf
dec
lret
leave
pop
popf
push
jb
xchg
push
lods
and
push
mov
pcmpgtb
add
test
cmp
mov
push
enter
sbb
add
insb
add
jp
dec
mov
aam
fdivrl
add
dec
pop
xchg
je
stc
add
sbbl
xchg
js
dec
push
add
mov
cmp
psllw
mov
outsl
lahf
xchg
jns
mov
call
mov
xlat
ljmp
mov
sahf
or
xor
lahf
into
xor
jo
jno
sbbl
dec
or
lcall
adc
xor
dec
repz
out
push
int3
pop
int
imul
test
jecxz
insb
adc
jp
mov
sub
mov
mov
sub
out
fbld
les
jecxz
or
and
xchg
icebp
xchg
lcall
xchg
filds
sbb
mov
fidivl
dec
aad
es
jge
jnp
pop
lock
rcl
adcb
fldl
jno,pt
int3
pop
dec
sti
lods
pop
sub
push
push
jb
leave
pop
out
ljmp
daa
out
or
fcmovu
xor
sbb
imul
pop
les
dec
dec
push
push
pop
out
lea
jne
adc
jne
push
xchg
jae
or
jo
adc
inc
cmp
xor
and
pusha
in
sub
ja
jge
std
and
lods
cmp
push
mov
out
loop
aaa
in
push
shr
mov
flds
adc
imul
xchg
sbb
mov
push
out
outsb
push
test
xchg
jmp
pop
pushf
psubw
mov
je
sub
add
fldl
mov
inc
pop
fs
and
push
std
xchg
jo
or
popf
jl
mov
jo
sub
pusha
paddsb
mov
cmpsb
insb
pusha
dec
cmp
dec
dec
cmp
push
mov
push
mov
scas
insb
sub
jo
pop
or
jbe
lcall
int
test
lods
repnz
xchg
push
ret
adc
mov
lret
sbb
inc
icebp
cmpsl
push
cmpsl
test
xor
or
in
repnz
and
inc
ss
push
push
insb
push
sahf
adc
xchg
sbb
cmp
mov
cmpsb
jp
rcrl
push
movsb
push
cmp
cmpsl
cs
pop
gs
or
lret
jno
repnz
pop
pop
dec
pusha
xor
lea
cli
pop
and
mov
or
pop
sub
and
fdivr
fiadds
push
push
jle
in
js
lock
pop
out
or
mov
adc
mov
add
ja
mov
arpl
mov
mov
pop
jmp
cwtl
out
fcomi
loop
adc
mov
adc
loopne
pusha
pop
lea
jp
xchg
cmp
xchg
add
fs
cmc
aas
pop
add
jl
pusha
cwtl
js
mov
arpl
lret
jns
nop
mov
jb
cmpsb
pop
cmp
cltd
jb
cmp
and
and
mov
movsb
add
mov
dec
nop
jle
nop
pop
loop
mov
add
adc
rclb
cmc
fldl
mov
roll
pop
sbb
mov
xchg
icebp
xchg
pop
scas
js
add
aas
xor
mov
mov
push
inc
shr
cmpsl
fs
mov
jle
movsl
rcl
add
dec
pop
jl
rorl
incl
cld
add
pop
pop
aam
lahf
insb
insl
xchg
dec
sub
cmp
push
xchg
imul
loop
jmp
xchg
loope
movsb
jl
out
test
sbb
jg
jg
stos
pop
push
xchg
lahf
cmp
and
adc
sti
icebp
lods
inc
mov
jo
jo
shr
xor
mov
in
sti
insl
push
orl
bound
and
jge
pop
in
dec
xor
outsl
push
scas
xchg
in
pop
jg
lret
dec
stos
repnz
cmp
aaa
push
sub
adc
mov
jge
into
sub
xchg
dec
add
cs
xor
out
push
jb
cmpsb
jge
push
je
mov
lcall
and
data16
push
imul
mov
fiaddl
xchg
push
addps
fdivl
xchg
loope
or
cmp
add
push
icebp
mov
lods
cwtl
iret
movsb
xchg
xchg
mov
xchg
fisubrl
movups
orl
xor
aad
mov
inc
sub
dec
fwait
in
stos
fdivl
or
xchg
lods
jl
mov
in
cltd
xor
repz
xlat
imul
enter
flds
sbb
push
xchg
movsl
push
arpl
ficoms
inc
in
test
insb
enter
cmp
xor
jbe
andl
cmp
cli
or
sbbl
loopne
movsl
aaa
dec
sbb
dec
shll
sbb
push
iret
jp
pop
ficomps
gs
and
in
xchg
push
adc
fcmovu
dec
hlt
cli
jo
jns
adc
lds
arpl
std
loopne
shlb
lret
push
pop
scas
pop
add
cltd
push
aam
nop
or
sti
mov
fildll
adc
insb
adc
cwtl
cmp
cs
mov
mov
add
xor
pop
ljmp
lods
rorl
jle
or
and
adc
jle
loopne
mov
pop
xor
jae
sub
xchg
fistpll
and
xchg
mov
shlb
mov
adc
sarb
mov
test
sbb
ja
xor
add
or
cmpsb
xor
cmpsl
sub
cmp
stc
pop
cmp
fcom
rorl
mov
adc
mov
inc
sti
cmc
je
popa
sub
out
repnz
mov
leave
pop
aad
sub
mov
std
fstl
mov
mov
add
inc
xchg
fidivrl
mov
xor
inc
jle
lret
adc
jo
test
push
int
test
test
out
ret
or
loopne
sub
adc
push
ds
aaa
mov
xor
fstps
call
mov
inc
or
fs
setnp
jno
idivl
or
xlat
inc
fists
test
je
xchg
mov
outsb
sbb
lcall
loop
daa
xchg
xchg
xchg
fwait
xchg
add
test
mov
fucomi
and
scas
cmp
jae
mov
stos
hlt
divl
mov
mov
add
je
xor
neg
cmp
push
mov
lahf
push
mov
fstpl
cmpsb
adc
inc
mov
ja
dec
frstor
and
mov
enter
out
fucomip
aaa
pop
div
xchg
jmp
shlb
cmp
fwait
gs
ja
cmpsl
rorb
pop
cmc
loop
jl
pop
fimull
mov
pushf
sahf
rcrb
mov
fwait
pop
cwtl
lcall
push
dec
mov
sbb
sub
inc
cmp
mov
and
loop
adc
push
dec
mov
loope
mov
aam
lds
rclb
popl
pop
jge
fnstsw
lcall
imul
scas
push
fxch
jb
ds
mov
loopne
sbb
dec
sbb
fisttpll
cmp
fdivl
test
push
test
call
or
sub
xor
pushf
or
cltd
inc
xor
cwtl
mov
cmp
jge
or
sub
mov
sub
jb
dec
mov
sar
add
push
push
mov
inc
addr16
enterw
je
mov
cli
mov
jp
inc
mov
or
inc
xor
jmp
fidivrs
sub
jnp
lea
mov
sub
push
addr16
pop
dec
out
and
gs
adc
and
je
sub
jl
test
adc
fucomip
push
sub
adcb
mov
or
lods
clc
mov
inc
scas
loopne
jmp
dec
pusha
mov
cmp
inc
jmp
dec
outsl
push
call
cwtl
jle
ljmp
decb
lahf
sbb
xor
sub
dec
or
lret
jecxz
imul
daa
lods
pop
inc
and
push
stos
inc
inc
add
lahf
sbb
cmp
mov
push
cmp
xchg
repnz
lock
mov
cld
cmpsb
pop
mov
jns
pop
sub
lods
in
aam
xchg
loop
sbbb
jb
stos
jp
ret
add
adc
sbb
push
loopne
mov
arpl
xor
cltd
sub
fldenv
jle
pop
fsubl
cmp
scas
sbb
push
cmp
ss
xchg
mov
push
or
test
dec
push
insl
movb
mov
es
jne
divb
push
jp
pop
out
jg
rcll
shlb
lds
in
inc
xor
sub
and
mov
in
add
pop
nop
ja
and
inc
mov
out
dec
cmp
shr
mov
mov
pop
lahf
adc
mov
xchg
insb
inc
sbbl
sub
add
sub
jno
and
cltd
cli
int
pop
adc
push
pusha
jo
arpl
mov
sbb
jl
jo
sbb
int
and
nop
icebp
jmp
cli
or
mov
movsl
xchg
nop
and
ds
jnp
push
jmp
mov
aam
inc
push
mov
lds
push
add
pop
jno
aad
cmpsl
mov
mov
cmpsl
dec
and
inc
fwait
in
jbe
ja
xor
mov
jecxz
pop
adc
fldcw
lea
dec
adc
pop
cwtl
and
xor
icebp
cld
ljmp
pop
xchg
icebp
outsl
jle
adc
dec
inc
arpl
das
imul
cmc
mov
mov
sub
cmp
jmp
pusha
mov
pop
stos
pop
clc
mov
fsts
push
mov
jns
fwait
test
out
lods
xor
cs
push
xchg
popf
lods
out
jmp
inc
xlat
lret
test
loopne
ss
mov
mov
dec
mov
xor
lret
xchg
mov
sub
lret
cmp
pop
data16
leave
enter
and
push
mov
sub
sahf
lods
sbbb
jb
mov
in
sarl
sub
inc
lds
inc
pop
sbb
and
sbb
fidivrs
outsl
xor
pop
pop
sbb
shl
sub
cmp
jno
pop
jno
and
sbb
arpl
cmp
pop
cmpsl
inc
mov
and
test
pop
push
push
loop
movsb
mov
out
jno
in
adc
ficomps
xor
inc
xlat
jae
cmpsb
ss
cmp
pop
cmpsl
xchg
scas
clc
mov
fisubrl
mov
pop
sahf
jb
js
sarl
mov
test
icebp
pop
nop
sub
loopne
stos
or
add
or
mov
dec
mov
rorb
xor
lock
push
lods
gs
jmp
ret
sbb
stc
mov
mov
leave
jb
cmp
xor
test
sbb
jo
jl
cmp
push
jle
call
mov
push
ja
les
inc
cmc
push
addr16
cld
imul
sti
push
cs
pop
mov
or
add
sbb
loop
popa
inc
mov
pop
push
rcl
stos
mov
push
in
ja
imulb
test
adc
push
test
aam
xchg
push
jmp
add
mov
sub
jp
stc
adc
adc
inc
enter
mov
lods
xor
dec
mov
aas
cmpsb
not
inc
sub
rorb
mov
rsm
std
popa
call
jle
test
xor
push
cmp
and
jle
or
jp
ja
mov
add
das
sbbb
shll
mov
cld
leave
lret
in
loop
inc
jge
or
fwait
adc
jno
cmp
mov
dec
cmp
div
push
loopne
cmpsl
or
stos
or
jno
xorl
pusha
pushf
inc
clc
mov
add
sub
inc
mov
int3
sti
ja
clc
mov
data16
stc
or
jae
insb
inc
jge
adc
and
add
or
or
pop
cmpsb
fiadds
lcall
xor
inc
push
mov
addr16
fcoml
imul
ret
int3
jmp
call
xchg
mov
mov
ret
jmp
jg
mov
xchg
mov
jg
mov
xor
sub
jo
jl
push
and
jmp
repz
push
jl
sbb
dec
pop
mov
dec
in
push
jp
and
mov
cmc
cmp
push
nop
out
mov
gs
xchg
jle
xchg
cwtl
stos
mov
push
dec
adc
mov
push
adc
and
xor
in
sbb
or
mov
pop
jl
xlat
sub
jg
and
ljmp
fdivs
scas
fdivr
inc
jo
mov
punpckldq
enter
in
mov
aaa
js
jg
push
and
fcomps
mov
call
lods
sub
into
pop
cmp
or
sbb
sub
in
dec
sbb
fwait
decl
pop
fsts
xchg
cmc
xorl
repz
lods
mov
fmull
mov
enter
iret
xchg
insl
or
inc
push
dec
inc
inc
mov
mov
mov
push
ret
jno
xor
or
xlat
out
mov
outsl
mov
call
ffreep
add
lret
inc
dec
pop
shlb
jno
jae
movsl
in
in
loopne
lods
cmp
enter
jg
ret
push
stos
inc
aas
mov
bound
sub
adc
dec
xchg
ret
insl
jnp
mov
mov
mov
clc
enter
icebp
adc
mov
mov
sbb
sbb
pop
mov
les
sbb
mov
adc
imull
rorl
out
test
les
arpl
iret
xor
sbb
call
push
xchg
add
sbb
cmpsb
lret
xorl
mov
dec
mov
dec
int
pop
xor
out
pop
ret
add
inc
add
mov
and
jbe
pusha
cwtl
push
cltd
xchg
daa
jne
aas
pusha
adc
in
and
lahf
mov
jbe
mov
xor
add
sub
insb
imul
lods
jecxz
and
leave
push
cmp
ss
pop
test
xor
in
mov
and
pop
mov
xchg
repnz
add
mov
jno
inc
aas
fnstcw
fstl
dec
cmp
jne
jno
xchg
cmpl
inc
or
int
dec
mull
adc
mov
in
jne
shlb
or
repnz
daa
loop
movsb
lds
mov
mov
xchg
jmp
push
shrl
loop
or
movl
add
pop
jle
pushf
aaa
push
mov
jae
mov
cld
sub
inc
fmull
pop
bound
add
mov
pop
sbbl
or
lock
repnz
cli
ss
fcompl
js
jecxz
popf
not
decl
aas
cli
or
pop
cmc
popa
xchg
inc
lret
fwait
sub
xor
pushf
cmc
inc
xor
pop
mov
daa
mov
in
pop
decb
mov
mov
roll
xor
adcb
push
int
and
cmp
xchg
push
jle
jb
jg
out
cmp
lcall
and
sub
cwtl
and
mov
cmpb
scas
test
lret
jbe
imul
cmp
dec
shrl
push
adcl
cmp
fistl
clc
cmp
jns
dec
sahf
divl
cmp
or
stc
stos
mov
out
mov
mov
jle
mov
popf
lock
mov
add
hlt
in
or
dec
mov
fildll
gs
jmp
orb
jl
or
call
lcall
pop
gs
mov
decb
cmp
ficoms
xchg
jno
xor
ss
pop
dec
push
adc
push
lods
ror
test
lret
add
int
aas
rolb
or
lock
sbb
mov
daa
xchg
push
dec
xor
hlt
inc
test
adc
lods
lods
add
cmp
cld
mov
into
bnd
and
pop
sbb
push
hlt
push
add
cmp
and
push
pop
pop
jbe
incl
negb
lea
xchg
arpl
outsb
out
hlt
out
or
push
ds
mov
dec
xchg
jne
orl
mov
xlat
bound
inc
or
or
insl
xchg
add
les
mov
mov
out
out
sub
cltd
push
stc
fadd
jmp
pusha
add
in
fsubs
or
inc
xorb
pop
sub
test
insb
and
rcrb
mov
cmpsb
addr16
les
push
aaa
mov
xchg
dec
stos
test
dec
jp
xor
and
pop
mov
mov
inc
out
push
inc
add
and
push
iret
xor
inc
sub
cmp
and
and
xor
push
mov
sbb
dec
xchg
xchg
sub
jmp
test
cmc
lock
lds
ds
sub
jecxz
andps
cwtl
push
xor
test
loope
xchg
mov
sub
icebp
dec
int3
out
stos
mov
into
mov
add
and
out
cmp
fidivs
sbb
std
inc
xlat
inc
cld
scas
xchg
inc
movsb
jbe
inc
jecxz
inc
cld
lahf
inc
pusha
iret
icebp
sub
pop
and
jno
das
bound
mov
arpl
cs
in
pusha
mov
sub
ljmp
ret
sub
je
mov
ret
mov
xor
rol
adc
inc
subb
mov
dec
add
sub
cwtl
add
inc
mov
insb
rolb
xchg
push
dec
pop
jmp
xchg
test
fbstp
fmuls
cmp
inc
xchg
stos
cmp
icebp
fisubs
mov
sbb
leave
mov
sbb
jo
jmp
jge
and
loop
xchg
xchg
aad
or
xchg
mov
data16
lds
push
or
mov
pushf
dec
lods
movsb
pop
insb
add
jnp
repnz
xor
loope
jbe
and
sbb
imul
loope
insb
cmp
push
sahf
lock
cmp
les
adc
out
ljmp
and
fimull
jb
mov
sbb
daa
push
inc
pop
push
mov
jo
subl
cmc
insl
pop
sub
scas
push
popa
enter
fiaddl
cld
push
sub
lret
push
movsb
cmp
xchg
jbe
add
stos
pushf
inc
test
cmp
push
ficompl
cmpsl
lock
stc
dec
fs
push
fdivr
mov
out
sbb
sub
push
shl
mov
push
sbb
jne
jo
mov
push
pop
push
mov
out
in
fnstsw
cwtl
xchg
cwtl
es
xlat
dec
jae
or
aad
push
int3
cli
push
xchg
mov
movsb
push
loope
sbb
or
sub
stos
popa
das
imul
inc
mov
inc
cmp
jo
movsb
test
mov
mov
ss
iret
cs
mov
mov
aam
out
std
push
cli
leave
inc
mov
lahf
lret
lahf
push
sub
jno
sub
mov
lret
out
in
push
icebp
arpl
bound
fldt
pop
pushf
push
ret
mov
outsl
test
pop
sub
out
loop
add
popf
dec
lahf
adc
push
popa
aad
aam
sub
adc
mov
mov
dec
jno
enter
ljmp
sub
fst
adc
jb
mov
nop
sub
daa
jno
ljmp
push
std
mov
jb
push
iret
out
into
jno
inc
lret
add
out
in
jl
pop
in
jbe
mov
cmp
mov
pop
scas
pusha
jns
push
in
and
scas
jns
lds
int
xchg
jae
and
dec
lahf
cli
jnp
sub
insb
call
cmp
aad
add
pop
mov
mov
adc
cli
in
in
rol
test
fisttpl
lea
and
push
dec
lds
sub
nop
jns
fmul
cltd
add
pop
pushf
inc
sbb
dec
xchg
ja
mov
out
sub
ljmp
andb
lock
cmpsl
sti
inc
repnz
mov
push
fimuls
sbb
mov
int
push
pop
sbb
cli
stc
xchg
inc
clc
or
mov
in
cmp
movsb
pushl
add
mov
popf
push
lods
cmp
lods
pop
sbb
gs
out
clc
adc
sbb
sbb
mov
mov
sub
in
arpl
aaa
cld
rolb
sbb
outsb
sub
cmpsb
sub
jmp
cli
adc
shlb
xor
ljmp
lsl
in
dec
pushf
ss
inc
mov
mov
imul
adc
pop
mov
imul
and
outsb
fldenv
movl
das
imul
sti
lock
repnz
add
mov
sbb
sbb
insl
push
dec
inc
mov
or
fwait
mov
add
mov
sbb
sbbl
pop
fdiv
shrb
call
insb
lret
xchg
mov
push
ja
leave
loopne
and
movsb
int
enter
pop
mov
repz
jne
daa
fcompl
jb
pop
inc
cltd
push
xchg
jmp
pop
sub
xor
adc
cld
cmc
insb
in
pop
mov
xchg
adc
lods
xchg
add
das
push
cmp
jae
adc
inc
nop
ja
lahf
push
ja
xchg
test
dec
push
fildl
and
or
fildll
ljmp
xor
xchg
and
aaa
mov
dec
stc
sub
adc
xor
adc
add
mov
xchg
imul
xchg
add
xchg
fisubrl
test
rol
aaa
pop
and
lahf
wrmsr
lret
inc
andb
mov
sub
jne
dec
call
jno
ss
inc
inc
flds
or
jmp
pop
inc
out
sahf
inc
push
jmp
loop
jne
fdivl
stos
call
ds
shl
sub
or
test
mov
jbe
dec
mov
add
test
gs
or
cltd
outsb
sbb
xor
lcall
push
ljmp
jge
std
pop
int
jle
jne
and
xchg
pop
mov
mov
aas
arpl
nop
das
adc
stc
rcr
mov
fdivr
aam
iret
mov
scas
aam
push
pop
push
test
mov
xor
mov
jbe
xchg
dec
insl
inc
pop
mov
lahf
aad
cmpsb
pusha
bound
push
fstp
mov
outsb
or
cltd
xchg
paddusw
mov
insl
stos
sub
loope
xchg
xor
mov
mov
xchg
mov
jl
mov
xor
lods
repz
jbe
xor
mov
ljmp
stc
mov
dec
mov
std
jns
pop
ret
call
rcr
imul
mov
push
shlb
repz
push
xor
mov
jmp
dec
or
inc
mov
dec
mov
imul
jb
cltd
out
lcall
dec
hlt
pinsrw
inc
push
fnsave
int3
test
dec
inc
scas
pop
movsl
mov
dec
sub
mov
xchg
es
or
idivl
or
mov
outsb
sti
pop
push
je
aaa
jnp
push
xchg
icebp
and
aad
mov
js
add
mov
sbb
jge
fldl
cld
loope
lret
divps
add
adc
sbb
mov
xor
mov
orb
push
and
xchg
push
js
push
and
add
stos
add
jle
cmp
fld
push
aas
xor
repz
xchg
xchg
cmc
dec
inc
or
adc
andl
flds
imul
cs
xchg
pusha
mov
mov
ror
movsb
dec
outsl
pushf
mov
sahf
in
mov
jno
jg
lock
jno
inc
inc
cmpsl
out
je
xchg
jae
xchg
mov
and
mov
or
cmp
mov
mov
cmp
mov
jnp
in
iret
loope
pop
fisubl
xor
and
xor
mov
dec
jg
jecxz
or
outsl
adc
addr16
xchg
dec
mov
sti
aad
imull
push
jg
int
pop
test
xor
cmp
mov
mov
insb
roll
dec
mov
fisubs
cltd
sbb
pushl
sbb
or
nop
or
out
xchg
divl
ficomps
adc
jmp
dec
not
jnp
xchg
xchg
jnp
fstp
add
xor
dec
jp
test
arpl
lds
dec
idivb
jle
fstp
add
pusha
push
imul
fisubs
jmp
mov
dec
add
xchg
pop
iret
or
jo
push
stc
push
dec
rclb
add
aam
scas
dec
lret
sub
add
lret
cmp
pop
imul
adc
inc
call
xor
jmp
cli
cmc
mov
xchg
and
stos
mov
and
movsl
out
sub
and
enter
popf
jae
mov
xchg
loopne
inc
loope
mov
sbb
imul
dec
adc
sub
outsl
dec
lods
loope
outsb
sub
inc
addr16
shr
sub
sbb
mov
ss
xchg
sub
loopne
cli
in
or
out
push
fimuls
xchg
mov
jg
inc
dec
cli
push
fs
xchg
cmp
pop
lcall
jbe
test
cwtl
test
pop
inc
fisttpll
cmc
enter
adc
pop
test
jle
dec
cmp
jne
lock
fwait
sti
xchg
push
imul
rolb
imul
mov
fstp
fldl
sub
jle
imul
mov
leave
add
adc
iret
lcall
xor
loope
fnstenv
push
mov
out
loop
dec
push
gs
mov
and
push
in
cmp
mov
loopne
in
pop
xorb
pop
adc
int
push
test
in
cmp
iret
loopne
pusha
dec
and
mov
lock
fwait
mov
rcr
bound
xor
scas
rcll
das
iret
cmpsl
sub
mov
mov
mov
js
pushf
jmp
iret
adc
outsb
lock
out
cmp
sub
jb
inc
das
xchg
test
mov
ficoms
push
jecxz
or
mov
dec
addl
gs
jb
nop
pop
jmp
cmp
imul
popf
add
pop
fmull
push
aad
ret
push
push
mov
mov
call
popf
and
mov
mov
add
dec
movsb
lcall
cmp
push
sbb
out
pushf
mov
cwtl
adc
mov
std
sub
push
inc
add
fldcw
outsb
sbb
adcb
mov
push
sar
mov
sti
outsb
add
jbe
and
rcrb
mov
cli
shrl
pop
xchg
add
sbb
pop
add
loope
xor
sahf
in
ljmp
shl
mov
and
sbb
mov
mov
and
dec
stos
adc
test
sarb
jae
inc
nop
mov
and
cs
leave
mov
es
pop
lret
cwtl
out
cltd
stc
pop
or
js
in
xor
dec
jbe
popa
mov
lds
mov
test
into
jno
add
cmpb
repnz
dec
mov
mov
push
int3
jmp
jns
imul
xor
add
mov
sbb
pop
jbe
mov
jb
loopne
cmp
xchg
jecxz
mov
call
adc
frstor
adc
or
shlb
and
movsl
and
push
fimuls
rorb
jmp
mov
repnz
xchg
sti
push
js
shlb
into
dec
inc
xchg
mov
ljmp
bnd
daa
orl
dec
pop
mov
jmp
clc
or
push
out
test
sub
lock
or
fisttpl
notl
sbb
hlt
enter
xor
in
dec
push
dec
shlb
fcmovnbe
cmp
jb,pt
lock
int3
pop
cmp
imul
clc
push
mov
int3
rorl
rolb
test
mov
lea
test
sub
xor
fsubrl
jp
mov
cmpsb
outsb
loop
mov
mov
lret
sub
push
jbe
outsb
fst
roll
lret
sub
sub
in
adc
outsl
push
lahf
xchg
lods
cmc
lods
bound
stc
lock
cmpsl
push
lcall
aas
addb
xchg
adcl
mov
sbb
add
dec
imul
shl
push
cli
mov
xor
push
push
sub
fsubl
lods
jecxz
gs
add
cmp
fsubs
jb
mov
dec
pop
es
cmp
jmp
lds
int3
fcom
sbb
stos
shlb
adcl
jne
cmp
neg
rorb
jle
insb
addr16
xchg
xor
cld
stos
outsb
dec
pop
push
aas
shl
pop
out
testl
pop
aad
out
enter
push
sets
cmp
loope
hlt
jae
sbb
jbe
inc
jb
leave
das
in
neg
hlt
cwtl
mov
rcl
lods
jae
dec
mov
fbstp
xchg
lahf
icebp
push
je
xchg
sahf
cli
mov
and
xchg
insl
scas
movsl
mov
cs
xchg
inc
shlb
test
mov
rolb
pushl
data16
popf
fld
push
flds
pop
adc
in
xorb
mov
add
mov
cmpsl
ret
aam
test
les
decl
daa
cmpsl
jb
lcall
dec
mov
xchg
sub
push
shlb
jmp
push
mov
lret
jle
out
mov
les
fisubl
shl
in
adc
inc
pushf
loopew
lods
mov
insl
dec
xchg
call
and
cmc
mov
into
repnz
xchg
mov
out
insb
cwtl
add
sarb
fstpl
dec
nop
cli
ret
fiaddl
push
in
shll
sbb
add
sbb
stc
pop
sbb
out
sahf
es
clc
sbb
pop
xchg
dec
fistps
cmp
jmp
and
mov
aaa
lods
lods
xor
adc
dec
sbbb
movsl
movsb
aas
or
dec
fildl
negl
adc
mov
jns
lahf
dec
fstpt
les
sarb
notb
push
xchg
lcall
mov
jo
jo
dec
jno
out
or
call
sub
cmpsb
test
dec
mov
mov
or
sbb
inc
inc
dec
lock
stos
rcrl
iret
cld
mov
xchg
lret
nop
jne
ss
stos
je
popf
xor
fdivs
push
loop
cmp
repz
cmp
mov
mov
loop
mov
cld
je
jbe
mov
cwtl
jge
push
pop
das
add
pop
and
sti
stos
lods
pop
jl
cmpsb
jle
inc
into
das
cld
mov
jne
mov
pop
cli
movsb
fs
ret
dec
pop
mov
mov
dec
rolb
cmp
adc
or
sbb
or
sbb
in
jno
sbb
dec
jb
cmp
jae,pt
test
scas
dec
dec
loop
mov
sub
xor
pop
loopne
and
or
adc
roll
icebp
ljmp
pop
lds
pop
repz
insl
xchg
addr16
adc
jmp
and
repz
pop
add
dec
popl
outsb
or
dec
clc
lock
outsb
aad
mov
test
loopne
test
mov
xor
xchg
xchg
movsb
jle
xor
push
dec
adc
xor
popf
out
cwtl
stc
pusha
ret
inc
outsl
daa
xor
clc
mov
add
push
sub
loope
adc
jno
outsl
imul
push
cmp
jp
or
mov
mov
jecxz
subb
and
lock
add
js
es
xor
push
push
ret
fs
std
xor
iret
mov
nop
in
sub
pop
repnz
movsb
mov
or
mov
xchg
xor
add
pop
xchg
mov
adc
mov
imul
fsts
add
mov
out
insb
pop
cwtl
out
scas
push
rorl
adc
orl
in
jp
lods
push
aad
ljmpw
popa
mov
in
in
jne
arpl
jge
addb
inc
add
adcb
shlb
and
daa
addps
js
stos
lret
mov
scas
add
xlat
jb
pop
cwtl
loop
dec
add
in
add
cltd
insb
std
sbb
dec
rorl
rorb
fnstenv
xchg
sbb
mov
mov
idivb
sub
mov
addr16
mov
push
sub
and
pop
mov
xor
je
push
divb
adc
add
rclb
mov
lcall
or
fs
mov
fldenv
adc
mov
gs
mov
pop
fidivl
outsb
sub
add
aad
inc
jo
cmc
cmp
ss
faddl
sub
xor
pop
fcmovbe
push
mov
cmp
dec
and
int3
sub
daa
rcrb
data16
jns
jge
dec
les
sbb
pushl
xor
addr16
sbb
inc
push
sbb
orl
inc
sti
mov
ds
dec
pop
sub
jge
mov
ret
mov
popf
stos
lret
pusha
and
inc
cli
aas
pushf
ja
mov
int3
pushf
fmuls
push
cmpsl
xchg
sbb
pushf
pop
mov
inc
xchg
mov
xor
pop
mov
or
mov
in
xlat
setnp
fiadds
in
sub
pusha
cmpsb
lea
loop
fwait
sbb
call
jne
and
je
or
jbe
movhps
xchg
xor
movsl
int
push
inc
pushf
push
xor
ja
out
push
xacquire
pop
sub
femms
loop
push
addr16
lahf
repnz
jno
aad
jge
fisubrs
gs
iret
sub
inc
push
sbb
fcmovnb
inc
fwait
add
inc
dec
pop
mov
pop
cmc
adc
shll
and
adc
lods
lds
shlb
in
pop
mov
int
pop
in
add
cmp
mov
xchg
jecxz
mov
xchg
push
cld
in
pop
shrb
adc
or
imul
cmp
sub
mov
pop
mov
in
sbb
fnstsw
orl
xchg
jmp
aaa
adc
sub
js
stos
les
mov
call
ret
into
in
mov
mov
dec
and
sbb
mov
jbe
imul
xor
dec
push
out
xor
xor
mov
js
jbe
pop
aam
shlb
or
mov
inc
pop
push
xchg
pmuludq
insl
inc
xor
pop
push
cmp
cli
hlt
insl
shrl
gs
push
pop
dec
cmp
inc
imul
test
pop
xchg
cmc
popf
call
loop
dec
pop
gs
pop
pop
les
push
xor
add
loop
pushf
xchg
fdivr
pop
or
test
or
jmp
pop
mov
mov
xchg
mov
mov
jle
out
xchg
mov
sti
pop
sub
push
insl
ret
out
lea
mov
test
cmp
addl
js
inc
cld
cmpsl
fcomps
insb
push
jb
imul
pop
dec
xor
adc
cmc
ss
dec
rcl
les
pop
mov
addl
xchg
insb
sub
inc
enter
shll
test
and
lds
push
cmp
mov
sahf
loop
sbb
push
jecxz
jb
xlat
aaa
lahf
lock
xor
cmpsb
xlat
pop
xor
xor
pmaxub
in
cmp
pushf
cmc
lea
cmp
push
push
inc
sbb
sub
testl
cmpsl
mov
popf
aaa
dec
jns
push
dec
js
dec
sar
adc
pop
insb
hlt
int3
rclb
ja
dec
mov
testl
out
push
mov
xlat
ret
mov
subl
sub
call
iret
sub
or
shrb
mov
dec
jecxz
pop
sti
and
repz
push
jle
ljmp
movsl
imul
fnclex
lea
arpl
cmp
lds
push
jl
fstps
fsubrs
nop
out
dec
mov
ds
fldcw
lds
cmp
leave
pusha
mov
stos
cmc
inc
adc
push
stc
out
add
dec
mov
imulb
test
mov
call
and
leave
push
pop
mov
sub
sbb
in
out
imull
and
and
inc
and
xor
cwtl
shll
lea
jo
xlat
cmpsl
aad
js
sbb
adc
sbb
fidivrs
inc
xchg
mov
rclb
mov
lret
stc
sub
orb
lods
pop
jne
adc
sub
push
cmc
test
mov
xorb
test
inc
orl
push
call
pop
into
or
loope
xchg
popf
inc
shrl
sub
rolb
lret
xlat
sbb
shrb
ds
imul
mov
popa
lock
inc
or
sahf
seta
xchg
das
xor
cmpsb
sub
dec
inc
int3
cmc
push
adc
pop
push
pop
jns
mov
dec
inc
mov
jg
outsb
flds
sub
sbb
clc
mov
js
push
repz
mov
push
in
ret
ret
inc
test
pop
jbe
xor
lods
pop
or
push
jecxz
pop
lock
fiadds
cmp
inc
clc
xchg
add
mov
and
cli
jge
enter
pop
add
ljmp
sbb
icebp
scas
dec
ja
mull
xor
xchg
mov
dec
arpl
add
push
mov
push
jnp
push
or
mov
pushf
jae
daa
in
mov
fstl
hlt
xor
lea
push
lock
call
push
pop
sub
xchg
pop
sub
cltd
mov
cmpsb
sarb
cli
ljmp
out
mov
dec
rcrl
mov
sahf
inc
mov
or
cli
xor
add
cmpsl
or
imul
or
dec
fadd
mov
in
sbb
test
lcall
and
imul
es
cmp
cli
add
push
adc
movsb
dec
movsl
fadds
push
adc
xchg
dec
fidivrl
mov
fsubs
in
pop
adcb
pushf
xor
shlb
mov
adc
and
cmp
incb
testl
pop
loopne
mov
push
inc
inc
in
lds
jo
imul
cmpsb
add
ja
push
and
cltd
test
sub
ljmp
push
and
mov
imul
xchg
repnz
insl
test
movd
xlat
push
loop
and
mov
scas
pop
mov
inc
add
scas
jle
cltd
cmp
push
cmpsb
push
gs
push
add
xor
data16
flds
pop
adc
xchg
leave
jle
in
jno
lret
jecxz
jle
pop
adc
sbb
inc
sbb
fstpt
adc
stc
lcall
adc
push
fs
jmp
xor
or
add
mov
cmpl
leave
jle
push
pop
mov
and
and
xchg
out
sub
fdivs
fdivrp
mov
cltd
sub
cmp
fimuls
fldl
insl
repnz
icebp
pop
lock
inc
jmp
xor
or
ljmp
ja
add
sub
push
loopne
rcrl
movsl
lds
lcall
push
xchg
inc
int3
into
jmp
stos
leave
fwait
xlat
rcr
ficoml
jo
cld
ret
call
out
cmpsl
mov
cld
ds
or
fdivrl
outsl
outsb
cmp
jmp
pop
int3
inc
inc
fs
fisubrl
mov
cmp
sbb
dec
mov
pop
xchg
mov
xchg
mov
call
push
aas
andb
popa
repnz
roll
in
stos
sub
or
fidivl
cmc
jle
mov
aad
out
aaa
jmp
xchg
push
mov
lds
push
jno
emms
mov
mov
mov
mov
and
scas
or
ficompl
jnp
mov
and
sub
lea
mov
fcoms
jmp
inc
ficoms
or
dec
cmpsl
arpl
sbb
mov
inc
xchg
sti
dec
fsubs
mov
cmp
imul
mov
xchg
addl
sub
es
add
jns
add
scas
jp
sbb
ficompl
mov
pop
and
mov
outsl
push
inc
addb
sub
xchg
adc
cmpsb
arpl
mov
gs
mov
aam
dec
fistpll
mov
mov
cmpl
call
out
dec
add
cmpsl
nop
loop
pop
sub
divb
mov
jo
sbb
sbbb
mov
out
sub
add
sub
mov
je
xchg
nop
cltd
pop
in
rorl
fisubrl
into
pop
xor
fmulp
push
mov
out
mov
pop
mov
sub
xor
and
loop
push
in
ret
test
fstp
popa
sbb
pop
jb
mov
js
insb
ss
insb
jecxz
lods
adc
shll
mov
imul
popa
call
sbb
lock
jecxz
lods
jns
inc
add
arpl
lods
lret
mov
outsb
jmp
jno
xor
mov
in
sbbl
sub
aas
je
adc
mov
push
xchg
clc
int3
mov
imull
sbb
xor
mov
cmp
out
and
les
ss
mov
test
repnz
push
sbb
or
mov
sub
add
xchg
push
movsl
popf
xor
inc
sti
icebp
test
cmp
xchg
cmp
fnstsw
insb
push
cmpsl
mov
push
ret
mov
dec
jl
test
int
sbb
adc
sbb
mov
cwtl
std
outsb
push
push
jge
ror
lods
cltd
mov
mov
std
call
push
pushf
cli
jns
je
in
jo
push
stos
sub
and
lahf
jbe
mov
and
jo
std
inc
inc
or
in
cmp
mov
adc
aas
adc
test
mov
dec
dec
mov
sub
out
jecxz
sbb
test
jg
ret
cmp
lock
int
ret
in
xor
frstor
in
out
sar
daa
xor
jmp
das
jp
pusha
lea
and
mov
mov
iret
sub
lea
in
lea
and
test
test
or
imul
push
inc
cli
push
push
mov
inc
cmc
and
xchg
inc
jae
xor
mov
mov
ret
inc
cmp
adc
adcl
mov
std
sbb
shrl
push
cld
push
mov
imulb
pop
roll
fisttpll
pusha
popa
cltd
push
ja
loopne
lock
cmp
ficoml
mov
jae
cli
and
xor
push
cmpb
cmpsb
push
jb
imul
in
daa
shr
dec
xor
dec
pop
jno
sbb
or
xor
push
out
shll
or
pop
xor
cmp
je
in
push
imul
repz
sti
push
sti
aad
sbb
in
int3
mov
bound
es
enter
mov
mov
dec
imulb
adc
pop
lods
aam
dec
imull
jl
mov
dec
mov
sbb
std
cmp
jmp
aaa
inc
dec
dec
add
fmuls
push
push
loopne
popa
and
mov
mov
push
movsb
mov
je
pop
loope
test
mov
sbb
jno
push
lcall
inc
fildl
dec
xchg
dec
push
adc
jbe
out
cmp
or
imulb
lahf
out
xchg
mov
fwait
rcl
shll
cli
icebp
das
xchg
or
cwtl
mov
je
and
in
decb
push
xorb
push
dec
sub
xorb
sahf
or
sbb
mov
divb
jb
and
or
lahf
ficompl
and
or
shl
jle
adc
adc
fcompp
sbb
push
xor
and
daa
popa
xchg
mov
data16
mov
pop
pop
fisubrs
mov
push
xor
jnp
cmpsl
insl
or
iret
sbb
testl
pushf
push
cmp
add
imul
cmp
imul
sbb
into
inc
lods
adc
push
into
dec
jbe
je
and
out
inc
mov
mov
pop
pop
les
and
push
push
ss
nop
sbb
shl
push
test
pop
or
push
inc
jo
loop
in
or
pop
aaa
addl
daa
cli
jp
inc
test
push
sbb
scas
inc
stos
bound
push
and
jl
mov
ja
mov
inc
shll
mov
push
add
dec
cmp
call
pop
rcrl
cs
out
pop
imul
pop
fistpll
cltd
mov
mov
push
rorl
mov
dec
aam
sub
sti
inc
fdiv
dec
scas
xchg
pop
sbb
and
cmc
fidivrl
out
pop
stos
and
pop
imul
push
xorl
sahf
cmpsb
push
scas
inc
imul
out
lods
push
test
lret
jle
push
dec
aas
adc
jg
idivl
mov
dec
adc
imul
rcrl
pop
notl
mov
push
pop
rcr
sub
and
bound
loope
jb
mov
push
stos
loope
lret
shlb
cmc
std
cli
mov
push
aaa
arpl
sub
push
mov
mov
not
popf
dec
insb
int3
push
inc
repz
push
inc
test
stos
je
loope
outsb
dec
push
imul
loopne
pop
std
in
jb
push
pop
in
push
mov
aas
imul
pop
xchg
mov
mov
inc
mov
xchg
and
repz
sbbl
les
shrl
add
adc
xorb
faddl
inc
es
pop
dec
jl
sub
ss
and
mov
aaa
adc
inc
dec
xor
andl
js
xor
push
scas
pop
cmpsb
movsl
and
arpl
popa
cmpsb
push
and
sbb
in
sti
pop
sub
jmp
repz
xchg
aaa
mov
lock
sub
inc
popf
mov
fisttpll
mov
ds
imul
mov
mov
sub
sbb
sub
sti
push
adc
sub
sbb
mov
xor
adc
fildll
loopne
enter
inc
jmp
lods
ja
adc
xor
popa
inc
andb
mov
sub
imul
mov
add
mov
andb
pop
push
push
lcall
dec
mov
aad
jp
outsb
arpl
push
inc
into
clc
and
dec
adc
stos
jne
sub
int
xchg
mov
das
jne
xchg
mov
or
outsl
ret
mov
mov
call
aad
push
jne
outsb
xchg
cli
into
mov
rclb
js
inc
decl
add
inc
add
scas
test
movsl
jo
xchg
pop
pop
inc
outsb
mov
add
data16
inc
push
daa
and
cmp
lods
ja
or
xchg
mov
cmp
rcll
sub
aas
out
sbb
mov
xchg
sub
dec
or
dec
add
loopne
sub
adc
mov
gs
push
call
insl
inc
repz
push
xchg
loope
lret
test
loop
jnp
lret
loop
push
xchg
dec
cli
repnz
xlat
lea
out
xor
cmp
push
fistl
pushf
mov
cmpsl
xchg
add
popa
push
ret
mov
popa
cmp
les
clc
jp
cmp
lods
in
aaa
push
hlt
not
ret
mov
sbb
mov
dec
xlat
cwtl
jns
sub
sbb
cmp
jnp
dec
sti
and
and
add
iret
imul
aam
test
xchg
out
mov
les
add
push
das
pop
mov
js
test
outsl
or
sbb
cld
sarl
je
dec
jle
stos
out
and
leave
jp
clc
and
sarl
loopne
in
mov
mov
or
ja
cmp
int3
out
inc
ret
outsl
inc
dec
das
inc
or
mov
loopne
addl
mov
movsb
lahf
cli
sbb
repnz
lods
pop
xor
or
push
adc
into
hlt
xor
xchg
sub
sbb
iret
lcall
adc
mov
cmc
xchg
int3
xlat
xor
cli
les
inc
sub
or
and
test
fisubs
and
mov
xorl
cmp
mov
lods
mov
pop
push
in
pop
jbe
jmp
insl
pop
xchg
xor
aad
dec
cwtl
pop
push
adc
sbb
dec
out
cmp
inc
fsubs
mov
cs
push
cmpsl
push
nop
es
adc
xor
push
aam
enter
fcompl
mov
jae
xchg
sbb
adc
push
mov
outsb
insl
je
adc
push
bound
mov
jl
jne
jnp
push
in
insl
jns
or
xorb
clc
inc
scas
dec
push
mov
outsb
ret
and
ds
jl
aad
cmp
push
add
add
xchg
jb
push
jge
popf
sbb
cmp
ss
adc
push
stos
cwtl
call
lret
and
jp
orb
push
aas
or
inc
sbb
loopne
mov
xor
xchg
insl
cld
repnz
push
std
pop
jmp
stc
lret
push
mov
push
add
repnz
mov
xor
adc
jo
add
push
and
loopne
mov
movsb
mov
lret
call
push
aaa
pop
inc
in
xchg
cltd
inc
dec
pop
jns
dec
mov
dec
pop
aam
out
test
sbb
pop
movsl
and
adc
in
js
mov
std
testb
mov
cmp
mov
sub
inc
push
mov
pop
adc
aad
aas
ja
adc
mov
call
insl
mov
lock
lods
mov
int
addr16
scas
out
ds
mov
jb
jecxz
lock
insw
dec
inc
js
mov
pushf
stos
lea
mov
iret
pop
cmp
xor
bound
clc
imul
mov
hlt
rcll
gs
xchg
jle
cmp
and
fwait
mov
pop
lret
dec
std
mov
and
mov
shlb
sub
jp
pop
push
test
lret
sub
inc
inc
loop
push
xchg
sub
sbb
jo
jl
scas
aas
pop
negl
mov
je
mov
mov
lcall
js
pop
popf
sbb
fsubrs
decl
idivb
out
roll
xchg
ljmp
mov
adc
das
orl
ljmp
sub
js
insb
bnd
daa
mov
movl
adc
push
or
inc
pop
mov
push
andb
xchg
out
rcrl
pop
movsl
pushf
or
lea
fs
pop
pop
pop
push
aam
or
stos
int
pop
clc
xchg
dec
in
xlat
inc
hlt
lods
mov
xchg
mov
icebp
inc
add
into
mov
test
jbe
or
cmp
adc
mov
jo
mov
int3
std
and
aas
out
xorb
xor
inc
push
pop
testl
rcrb
cmpsb
xchg
cmovo
ror
sbb
aam
stc
daa
shll
mov
roll
call
sbb
jb
push
lds
mov
ret
push
or
out
std
stos
push
lcallw
fidivs
mov
je
pop
leave
inc
outsb
and
xlat
test
cmpsl
xlat
pop
sbb
mov
js
movl
pop
xor
mov
and
js
sbb
clc
int3
mov
xchg
cmpsb
mov
lock
pop
pusha
ficompl
mov
pop
mov
comiss
dec
mov
scas
sbb
movsb
sbb
inc
daa
stc
xor
imul
mov
mov
sbbl
repnz
in
push
pop
xchg
add
movsl
fcmovbe
mov
std
xor
scas
nop
stc
es
test
out
sbb
enter
les
xor
xchg
insb
inc
inc
xchg
orl
arpl
fsts
outsl
leave
rolb
push
push
in
fwait
les
cld
cli
adc
leave
xchg
lds
push
xchg
addr16
or
outsb
sub
xor
sub
and
daa
pop
lods
inc
dec
fisttpl
sahf
mov
cmp
lcall
lcall
sahf
leave
jl
mov
mov
pop
xor
mov
rcl
adc
xchg
gs
sarl
xor
pop
repz
mov
mov
fs
cwtl
push
xchg
leave
and
andb
jle
mov
imul
mov
sub
pop
das
jp
idivb
enter
int
in
repz
popf
mov
aad
inc
sbb
mov
jl
mov
xor
xor
enter
lahf
lds
xchg
mov
adcb
xchg
popf
les
mov
aad
mull
testb
int
int
adc
scas
lret
ret
fdivrl
cmc
inc
push
fsubrl
or
leave
mov
dec
mov
cltd
xchg
push
bnd
mov
mov
sbb
movsl
test
pushf
or
movsl
add
mov
rol
mov
cmpsl
and
sbb
movsb
pop
pop
push
mov
push
sbb
adc
xchg
mov
insl
sti
xchg
xor
adc
in
xlat
adc
push
lods
xchg
clc
ret
cmp
mov
inc
and
inc
xchg
aam
jmp
negl
or
jae
js
ds
jb
fisttps
push
dec
js
into
jno
mov
test
shlb
inc
pop
mov
jg
movsl
addr16
sbb
cmp
je
xor
je
into
jnp
sti
aaa
cmc
fbld
push
inc
call
out
mov
mov
or
cs
mov
adc
loop
leave
cwtl
sub
jo
outsl
push
ss
jbe
and
push
dec
pop
test
inc
fmul
in
lods
xchg
ds
cwtl
enter
inc
imul
mov
push
ja
icebp
ret
roll
cmp
inc
push
jmp
enter
xor
out
cli
jae
out
push
out
pop
nop
pop
int
bound
ror
cmp
cmp
in
xchg
sub
sbb
pop
pop
pop
sbb
sbb
outsl
jmp
mov
sbb
dec
mov
sub
adc
cmp
pusha
mov
push
xchg
mov
adc
pop
sbb
sti
lahf
in
cltd
iret
and
adc
push
add
jo
nop
lea
push
cmp
fldcw
mov
mov
cwtl
mov
mov
lcall
mov
pop
cmc
xor
fsts
push
jno
sahf
fnstcw
push
lods
cmpsb
shlb
dec
mov
cs
in
and
bound
dec
inc
jmp
add
shll
es
xchg
push
int
cmpsl
sbb
imulb
int3
mov
jp
nop
ljmp
aam
data16
in
addr16
xor
xor
cmp
jns
imul
stc
rclb
pcmpeqb
dec
cmp
or
jmp
fdivl
in
xchg
xor
enter
cmpsb
xor
into
fcoms
or
data16
cmp
xor
sti
ror
fldl
movsl
insl
add
pop
mov
sub
inc
mov
insl
mov
and
inc
fadds
test
es
test
testb
call
mov
pop
cmpsb
push
outsl
sbb
jo
rorb
lds
xor
push
sbb
andnps
mov
push
pop
or
xchg
lret
adc
js
add
or
jg
add
fwait
andl
inc
movsl
in
fwait
push
stc
bound
call
push
dec
inc
mov
inc
adc
adc
in
mov
sbb
mov
sub
adc
add
sub
cmp
icebp
aam
popa
add
fcomip
rcll
mov
jg
cwtl
test
adc
push
cli
pop
mov
xor
shll
test
lds
jno
xor
out
mov
jno
mov
aaa
xchg
dec
pusha
rcr
adc
jb
xlat
xchg
pushf
fwait
sub
aad
and
scas
dec
mov
jg
sub
xchg
pop
sub
imulb
scas
in
jecxz
lods
aas
pop
test
add
xchg
add
mov
mov
push
cli
adc
adc
push
or
xchg
shrb
arpl
jnp
aaa
jbe
or
add
pop
repz
jno
pop
inc
add
imul
jmp
ss
mov
or
scas
jns
mov
add
inc
jns
test
xor
enter
jg
sbb
push
inc
das
lcall
or
lds
int3
sub
rcll
out
fnstsw
fnstcw
jno
js
in
mov
cwtl
add
and
out
mov
push
xor
mov
stos
iret
xchg
arpl
push
inc
push
mov
dec
push
xchg
js
inc
dec
push
adc
jl
sub
sbb
xchg
sti
sub
sub
add
and
mov
sbb
inc
jp
mov
add
mov
loop
xor
mov
ss
aad
mov
ja
loope
fadd
sbb
mov
lods
mov
jmp
add
xor
pusha
pop
roll
dec
nop
xchg
pop
ljmp
and
imul
rclb
jp
xchg
test
out
stc
add
cmp
ret
jae
arpl
jne
out
hlt
fadd
or
xor
xchg
jge
dec
mov
add
mov
sub
xchg
out
xchg
jle
xor
jle
out
rorb
test
jne
mov
loope
icebp
es
aas
ds
inc
fldenv
sub
mov
xor
jge
out
movsb
dec
inc
aad
lods
mov
jg
nop
push
sub
push
dec
adc
cmpsl
sub
mov
mov
sbb
jne
add
dec
push
dec
pop
mov
xchg
nop
sub
jb
bound
subb
and
and
mov
mov
outsb
mov
inc
sbb
pop
into
sub
enter
in
inc
js
jge
dec
mov
xchg
fimull
stos
ret
jl
and
mov
ret
movsb
out
aam
leave
pop
aas
loopne
mov
ret
lock
push
xor
jge
test
rorb
adc
roll
mov
imul
jl
and
push
fcmovu
dec
xchg
xchg
sbb
inc
push
cmpsl
js
outsb
js
pushf
pusha
add
xchg
call
push
icebp
filds
and
add
xchg
inc
push
pop
inc
cltd
xchg
mov
jae
idiv
div
out
pushf
insl
adc
inc
pop
adc
inc
add
gs
scas
hlt
clc
jmp
lods
mov
xor
daa
pop
div
jnp
nop
imul
xor
push
mov
xchg
pop
gs
pop
xor
jmp
rcll
jecxz
enter
mov
push
rcll
ror
jp
or
std
adc
shll
pop
adc
gs
sub
fwait
pop
xor
pop
lahf
and
pop
lret
rcl
inc
jo
pop
or
testb
repnz
fistps
rcl
adc
and
lds
xlat
and
jnp
xchg
testb
je
testb
push
inc
inc
inc
inc
lretw
xor
xchg
mov
aas
cli
andb
mov
sub
js
pop
push
or
dec
das
cwtl
mov
orb
sub
cmpb
sbb
pop
push
mov
xor
loopne
pop
mov
lahf
mov
xor
sarb
dec
rcll
and
out
lahf
sub
jae
out
bound
mov
jge
stc
sbb
push
dec
mov
and
and
les
inc
pop
shll
or
inc
lcall
and
inc
jmp
hlt
pop
push
cmp
sbb
jecxz
adc
adc
xchg
push
test
add
sbbb
inc
loopne
sub
cmp
jb
aas
lret
pop
xor
xchg
push
cmpsb
outsb
inc
mov
sub
xchg
xor
scas
pop
lcall
xor
mov
dec
leave
xchg
xor
imul
push
jne
sbb
jne
add
add
and
pop
mov
std
mov
scas
xor
push
add
movsb
aam
xchg
movsb
fstl
pop
mov
imul
and
lds
mov
daa
xor
pushf
test
fwait
data16
mov
sub
fisttpll
inc
push
add
popfw
sbb
sahf
fdivrl
fs
cmp
xchg
popa
push
push
addr16
rcrb
add
in
mov
cmpsb
js
dec
mov
into
xchg
loop
add
in
sub
imulb
cmpsl
or
inc
mov
push
mov
push
loopne
imul
mov
add
std
loopne
xchg
lds
sbb
mov
int
jmp
xor
imul
push
xor
mov
stos
inc
jb
cmpsb
adcb
popf
int
ret
add
fnstenv
fsubrs
aam
stos
data16
test
cmp
cld
hlt
mov
dec
adc
mov
xchg
xor
out
sub
push
mov
rcrb
insb
xor
sub
inc
inc
pop
xor
scas
pop
int
daa
test
mov
mov
shlb
sub
add
shl
jmp
sub
lea
jp
or
add
sti
cmovb
jge
ret
mov
leave
adc
and
ds
xchg
mov
push
pop
dec
and
daa
or
sarb
sbb
lods
mov
push
cld
jl
sbb
xchg
in
xchg
add
and
pop
dec
cmp
add
cmp
insl
xchg
or
jecxz
test
out
lea
subb
jmp
jne
sbbb
mov
inc
xchg
pushf
mov
ret
cltd
xchg
mov
xchg
mov
clc
and
pop
cltd
inc
mov
dec
dec
jae
push
mov
dec
push
bnd
sub
out
insb
dec
orb
imull
cmpsb
bound
mov
dec
in
xchg
aas
mov
push
dec
out
in
push
sti
push
aam
cmp
add
sub
mov
add
ficoml
out
push
push
xchg
sub
and
mov
sub
aad
repnz
sub
jns
lret
fldenv
mov
pop
mov
jle
or
add
fcomp
dec
xor
sub
icebp
sub
mov
cmc
out
lds
loopne
jp
call
jno
pusha
outsl
mov
call
mov
push
movl
adc
fimull
ficomps
xchg
push
enter
xchg
xchg
add
jnp
mov
xchg
icebp
adcl
push
enter
loop
and
add
icebp
dec
fisubs
xor
mov
xor
ret
adc
cmc
mov
push
rcll
mov
sub
adc
cmpl
push
adc
rcrb
cld
sub
sub
xchg
push
int
aas
sub
out
add
mov
sub
mov
dec
pop
dec
sbb
notl
cmpsb
out
stos
push
push
or
push
test
xor
pushf
imul
sbb
xor
sub
mov
xchg
sbb
fdivr
pop
push
ret
dec
dec
lds
xor
adc
xor
jb
xchg
dec
pop
cmp
adc
fsub
mov
aad
fs
push
dec
mov
stc
leave
out
outsb
das
inc
xchg
ja
lds
adc
or
cmp
lahf
jne
jae
enter
jbe
jl
mov
cmp
cltd
insl
bnd
mov
cmp
mov
lret
jno
jae
inc
xlat
push
inc
push
fisubs
jno
les
dec
fmull
into
cmp
sbb
add
mov
outsb
xchg
outsl
add
mov
mov
jns
rclb
lds
pushf
mov
jno
in
sbb
adc
jnp
push
cmp
jne
xor
sub
mov
pop
pop
out
filds
jg
push
cld
sub
and
adc
cmp
call
sarl
push
cmp
in
cltd
or
lods
or
fists
mov
aam
jecxz
push
dec
xchg
call
rclb
clc
push
popf
dec
jp
sub
jg
sbb
jmp
pushf
adc
lods
sti
arpl
adc
insb
in
and
mov
jo
sub
mov
sub
cmp
push
cwtl
adcb
daa
mov
pushf
push
arpl
mov
and
jmp
push
std
movsl
daa
imul
das
dec
repz
push
out
xchg
xchg
or
push
std
sbb
jle
mov
push
or
mov
aaa
repz
and
stc
jge
hlt
ja
stos
add
jecxz
jmp
xor
lret
inc
repnz
jnp
push
push
aam
aaa
lcall
push
test
out
leave
mov
mov
lret
mov
and
ret
jne
sub
jecxz
insb
test
hlt
imul
fstl
orl
dec
ss
xchg
xlat
fcmovnbe
cmpb
push
pop
ret
dec
jg
daa
lret
mov
bound
ljmp
fndisi(8087
mov
and
cmpsb
jmp
inc
and
push
ljmp
xchg
push
dec
sbb
arpl
popa
pop
mulb
mov
xor
xchg
pop
movsb
stos
xchg
insl
dec
and
ja
add
or
pop
sbb
aas
fnstcw
dec
in
xchg
push
push
cmp
loopne
out
outsl
sbb
inc
imul
sahf
push
xchg
sub
jg
fldenv
rcrl
xchg
cmp
xor
xchg
cmc
add
in
push
cltd
mov
pop
test
adc
aam
daa
sub
mov
or
stc
push
jp
fdivl
sbb
xchg
scas
sub
add
jmp
dec
push
jl
push
adc
fmuls
adc
stos
les
lcall
sub
mov
cli
les
sub
mov
imul
test
and
inc
xchg
vmulsd
mov
call
fld
dec
arpl
repnz
sbb
hlt
roll
fldl
loop
and
call
lss
push
adc
dec
fnstcw
mov
mov
cmp
pop
sbb
inc
call
jg
rcrb
xchg
fstpt
push
lcall
fdivs
js
movsb
nop
mov
jb
and
jecxz
lret
and
xor
jp
and
mov
adc
loope
mov
shll
sbb
movsl
sahf
js
mov
in
add
inc
out
mov
inc
mov
movsb
inc
xchg
lahf
into
or
shr
mov
xchg
movsl
adc
mov
adc
imul
into
sbb
outsl
lahf
xchg
push
and
or
std
sub
lret
mov
sub
out
es
mov
int
dec
adc
jne
jp
inc
jnp
adc
test
mov
std
je
test
lcall
fsubr
pop
xor
dec
rcrl
cmp
rcl
les
inc
dec
add
inc
xchg
fidivrl
fs
ss
push
jg,pn
lret
ret
out
xor
inc
push
fcompl
test
inc
aaa
cmpsl
mov
cmp
pop
xor
adc
and
adc
outsb
mov
ficoms
in
test
jle
mov
cld
push
or
out
or
shlb
add
aam
lea
xorl
mov
psubsb
imul
mov
pusha
dec
aam
xor
call
or
nop
jo
mov
mov
dec
cmc
push
pop
and
fadd
repz
jno
je
inc
scas
movb
mov
scas
cmp
aam
cwtl
push
je
jae
mov
push
push
fcomip
push
dec
xchg
hlt
test
adc
in
mov
xor
jno
dec
pop
outsl
es
lahf
pop
mov
insb
mov
enter
in
pop
cmpsb
sub
aam
in
inc
cmp
push
sub
fnsave
mov
ffree
mov
adc
es
add
dec
mov
adc
nop
mov
repnz
xor
dec
scas
lea
lods
or
dec
sbb
in
xor
jmp
shll
sti
jno
push
jmp
bound
mov
lock
scas
push
aad
out
jp
or
rol
sbb
repnz
gs
bound
repz
mov
daa
inc
rcrl
repnz
insb
movsl
jp
sbb
cwtl
jb
stc
xchg
mov
lret
not
add
ljmp
add
mov
nop
pop
repz
cld
testb
dec
xlat
jae
vxorps
pusha
xchg
shlb
movsb
push
and
xor
push
mov
cmp
inc
int3
add
sti
outsb
fcompl
adc
je
cmp
lahf
xchg
gs
jbe
jae
mov
out
dec
fisttps
mov
lcall
mov
and
lods
jecxz
repz
jne
addr16
mov
lds
idivb
xchg
sub
xchg
xchg
adc
jae
add
mov
push
outsl
mov
or
pop
aaa
shl
and
int
mov
test
fwait
and
dec
xchg
clc
push
jb
loop
xchg
es
and
jle
sub
pop
sbb
push
fisubrs
mov
test
adc
inc
pop
jle
adc
push
mov
xorl
adc
sbb
test
aad
sarl
xor
push
push
outsl
lcall
mov
xlat
in
add
mov
daa
stos
dec
enter
cmp
fcomps
mov
inc
les
sar
dec
or
jle
mov
mov
out
loopne
jmp
pop
dec
idivl
cli
lcall
imul
cmp
mov
bound
cwtl
or
and
out
jae
arpl
out
ret
or
out
adc
or
out
imul
jge
jle
mov
movsl
popf
adc
xchg
idivb
mov
fcmovnu
add
or
sub
pop
sahf
cmpsl
loop
pop
push
jnp
shl
or
and
and
add
sti
pop
push
mov
stc
lret
lds
pushf
jg
sub
and
dec
sbb
call
ja
stos
cmc
jle
aam
pop
out
cwtl
dec
push
data16
out
jge
cmp
mov
loopne
js
cli
popf
sub
fisubl
inc
in
sahf
sar
mov
mov
pop
popa
xchg
push
jmp
cmp
mov
iret
icebp
ret
xor
jnp
jmp
xchg
mov
lcall
or
arpl
inc
iret
aaa
mov
inc
out
pop
xorl
bound
std
ja
cmc
jmp
xchg
mov
outsl
repz
sar
mov
inc
fdivrl
sub
add
iret
pop
xchg
aaa
addl
test
cmp
push
clc
and
xchg
inc
outsb
lods
dec
cmp
mov
jge
scas
mov
push
mov
or
jle
aad
aaa
mov
rcrl
subl
std
mov
mov
rolb
sbb
lds
mov
sub
push
mov
adcl
mov
xchg
sub
pop
stos
mov
jae
jbe
cmp
jmp
mov
fisttpl
sbb
and
dec
mov
out
cmp
scas
mov
out
adc
and
bound
xor
cmp
add
shrb
fcomps
ret
push
xchg
arpl
cmc
outsb
mov
jmp
test
push
stc
repnz
cmpsl
push
out
or
sub
adc
jo
mov
jg
cmp
fs
jae
xlat
int
dec
sbb
fistl
inc
sub
or
movsb
out
dec
jb
mov
mov
inc
cmp
pop
test
inc
adc
lret
inc
jno
fidivrs
rol
loopne
adc
in
jmp
movsb
stos
clc
xor
cmpsb
jl
dec
out
xchg
popa
insb
push
push
fwait
aas
ja
adc
or
pop
inc
iret
icebp
mov
push
dec
hlt
and
jne
cld
inc
dec
pop
sbb
lret
pop
pop
xchg
xchg
fsubl
inc
loope
xor
mov
mov
insb
insl
pop
xor
bound
stc
and
ds
stc
filds
arpl
out
xor
pop
cmc
mov
mov
movsl
adc
int3
push
dec
jmp
xor
xor
fdivr
fiaddl
outsb
jg
sbb
push
push
pushf
push
rcrb
es
es
test
or
jg
xor
dec
bound
mov
sub
fwait
dec
idivl
repz
lds
popf
sub
add
jo
ret
leave
shlb
and
enter
cltd
shll
adc
dec
add
inc
mov
sub
lret
push
aam
ror
fs
push
test
fnsave
mov
lahf
mov
pop
and
cmp
test
mov
notb
xor
movswl
sub
into
cmp
imulb
insl
pop
or
xchg
inc
inc
xchg
lods
data16
mov
test
hlt
sar
push
rol
les
in
lahf
imul
mov
or
push
divb
and
xorl
fisubrs
hlt
outsb
stos
stc
cmp
pusha
pop
in
fidivrl
rcrl
xchg
pop
repnz
pop
rcl
movsl
pop
jmp
shr
mov
das
jg
sub
orl
sub
iret
pusha
fisubl
pop
call
divl
mov
data16
pop
or
push
mov
addl
adc
int
sub
movsb
cmp
xor
xlat
notl
mov
or
arpl
xchg
pop
xchg
popf
sarl
mov
in
push
je
or
adc
inc
int
push
pop
xchg
pusha
mov
inc
cmp
xor
jnp
add
adc
aas
dec
adc
hlt
insb
fdivl
movsb
lahf
adc
mov
and
dec
lcall
hlt
xchg
repz
xchg
aad
add
inc
inc
ret
addr16
leave
jmp
idivl
jnp
mov
push
sbb
fs
fsubrs
and
jne
add
lcall
movsl
adc
mov
cmp
std
stc
dec
out
xchg
out
pusha
sub
and
push
and
sub
sbb
lcall
mov
ret
mulb
or
pop
xor
add
cmp
cli
pop
xchg
xor
lds
add
cmp
push
jne
adcb
xor
in
stc
xlat
mov
cltd
das
fiadds
adc
es
push
das
scas
test
and
test
push
movsb
rcrb
enter
int
mov
jge
js
adc
xor
clc
pextrw
dec
das
xchg
and
push
addr16
lock
cmp
dec
and
xor
aaa
xchg
mov
xchg
in
fisubrs
push
inc
es
pop
cmp
cs
mov
aaa
aaa
xchg
loope
shl
pop
loope
in
mov
out
roll
jge
jmp
sub
xor
sbb
in
xchg
call
inc
mov
arpl
push
add
ljmp
jle
mov
pusha
rolb
mov
push
add
lahf
push
pop
sub
lret
mov
sub
shlb
mov
outsl
add
insl
ficoms
les
xchg
insb
jnp
js
arpl
addb
cs
xor
in
adc
fsts
jle
add
or
cli
cmovnp
mov
mov
mov
adc
test
sub
hlt
imul
in
call
mov
xor
xchg
jmp
insb
roll
sbb
pushf
inc
xchg
lods
jle
push
sarb
mov
nop
xor
aad
loop
popa
sbb
push
xor
cmp
push
push
pop
sbb
mov
inc
je
push
not
jle
sub
pusha
shll
xchg
pop
gs
repz
lea
insl
movsb
hlt
enter
mov
cmp
jl
das
daa
enter
jae
and
xor
push
jl
mov
mov
push
stos
mov
or
pop
mov
or
pop
jb
mov
sbb
outsl
lret
cmc
jecxz
push
jge
addr16
push
neg
mov
mov
jle
sub
sbb
incb
in
loope
daa
ja
std
js
movsl
call
adc
and
xchg
mov
pop
test
jae
sbb
iret
push
adc
xchg
xchg
add
inc
mov
sahf
imul
movl
mov
adc
xchg
adc
hlt
jae
jo
xor
imul
scas
cmp
jp
inc
pop
jecxz
add
enter
aaa
mov
popf
out
subl
mov
cli
pop
divb
in
lods
daa
aaa
add
cs
inc
test
dec
in
mov
int3
pushl
mov
push
lcall
sub
jg
mov
pop
pusha
leave
iret
inc
les
mov
cmpsl
fistps
inc
loopne
repz
jecxz
mov
sub
out
pop
imul
add
imul
dec
and
cmp
fisttpll
lea
loope
out
pop
cmp
cmp
fnstenv
cmp
mov
aam
sbb
pop
cmp
add
mov
loop
sahf
cltd
mov
and
or
lret
push
scas
sbbl
inc
mov
inc
iret
cmp
push
les
dec
jg
fisubrs
es
jo
lock
sub
es
jns
jns
ret
mov
nop
ret
inc
jle
sub
cwtl
fists
cltd
aad
aam
sarl
sub
or
adc
enter
sarl
dec
pop
loope
loope
xor
cs
fsubp
jl
aam
xchg
xchg
sahf
sbb
or
sti
std
adcl
pop
divb
jo
cld
push
sahf
jmp
jnp
pop
cs
in
push
stc
es
lds
adc
pop
xchg
pop
dec
bnd
adc
xor
stc
mov
loopne
rcr
ja
neg
cli
or
add
add
jae
xor
ret
into
gs
fcoml
fistpl
mov
or
xchg
mov
test
dec
lcall
xchg
in
lcall
arpl
daa
mov
and
mov
lret
punpckldq
mov
pop
inc
je
inc
cmp
inc
inc
add
rorb
or
sti
push
lret
hlt
data16
push
das
add
neg
out
loop
push
lods
and
mov
cmp
cmp
xchg
movsb
xor
add
jbe
mov
out
push
dec
sbb
out
sbb
sbb
push
mov
push
cmp
lret
adc
add
sbb
mov
fiadds
cltd
cmp
out
sub
enter
push
les
cmpb
int
cmp
sub
or
test
in
jo
aad
sbb
out
jl
xchg
cmpl
jge
aaa
test
cwtl
push
divb
inc
pop
test
dec
mov
and
adc
and
mov
clc
push
xor
clc
cwtl
repnz
jge
iret
pusha
push
stos
mov
lods
fsubrl
fmul
leave
pop
mov
rclb
aas
lret
shlb
jmp
or
push
bound
dec
hlt
mov
sti
pop
xchg
inc
jnp
lahf
mov
out
cmp
mov
pop
jne
inc
jne
add
and
cmp
lods
call
sub
movsb
or
icebp
and
imul
test
outsl
add
outsl
decl
aas
xchg
dec
shll
andb
pop
imul
lods
je
pop
push
int
repnz
or
or
mov
add
push
cmp
and
mov
push
ds
es
or
cmpsb
mov
jle
add
sub
bound
add
inc
in
push
xchg
testl
adcl
push
xor
mov
movsb
push
cltd
jns
das
rolb
mov
pop
cmpl
js
rorl
pop
lea
inc
int
xlat
or
sub
inc
push
cld
inc
pop
jae
cli
add
pop
pop
or
push
lcall
mov
jp
rolb
sub
out
mov
jns
aas
les
lahf
outsb
fiadds
rclb
jge
icebp
jg
bound
xor
dec
pop
add
mov
adc
mov
pop
inc
inc
xchg
loopne
xor
test
dec
jo
sub
lahf
pop
dec
mov
pop
call
cmp
mov
xlat
inc
fcmovnu
movsb
cmpsl
xchg
fs
or
push
repnz
fwait
sbb
ret
inc
imull
outsb
inc
push
stos
push
js
out
cmp
dec
dec
jnp
jmp
into
pop
adcl
fdiv
mov
push
hlt
cmp
inc
cmp
mov
or
push
and
xchg
js
insl
in
lea
fidivrs
xor
sub
lret
cld
and
mov
movntq
test
sub
addb
push
sbb
stos
adc
stos
or
push
movsl
mov
outsb
mov
mov
cmp
mov
or
pop
adc
bound
sub
dec
das
pop
push
mov
jmp
mov
pop
mov
dec
jbe
fsubrl
int3
das
mov
xchg
jmp
fdivrl
mov
test
add
in
sub
fbld
xchg
decb
sub
mov
and
add
roll
mov
cli
cmpsl
test
insb
loop
rcr
dec
xor
stos
mov
add
dec
or
dec
stos
negl
in
imul
lret
scas
das
rcrl
in
jp
xchg
or
insl
pushf
cwtl
sub
lods
out
imul
lahf
out
lods
push
mov
lret
movsl
jp
div
es
in
jle
cli
jp
outsl
dec
mov
mov
roll
add
mov
outsl
daa
adc
xor
loop
and
add
cmp
jl
push
ja
repz
aas
mov
shlb
jg
jmp
sub
pop
das
inc
and
js
xor
insb
jle
scas
push
dec
test
dec
lea
sub
xor
pop
mov
out
mov
jo
dec
and
push
lods
push
mov
adc
inc
cld
pop
insl
dec
dec
mov
cld
dec
insb
fnstsw
sbb
add
lods
and
jns
lcall
fadds
sub
test
mov
and
nop
iret
jns
add
aad
in
pop
cmp
mov
aas
filds
aas
hlt
imull
adc
into
daa
cwtl
push
jg
les
cmp
cld
into
mov
mov
stos
pop
pop
es
aaa
cmc
lods
ret
xchg
movsb
xor
xor
lods
inc
cmp
in
jne
inc
clc
clc
lahf
sub
cltd
daa
repz
xor
lods
lcall
call
lea
outsb
rol
or
in
das
imul
jl
xor
mov
add
fs
mov
jb
loop
mov
xor
pop
shrb
mov
test
ret
cltd
adc
xlat
ljmp
aad
mov
and
mull
push
sahf
es
sbb
dec
mov
nop
stos
xchg
js
iret
scas
pushf
cs
lock
int
in
pop
fistl
inc
mov
out
fisttps
pop
and
jno
push
add
push
sbb
pop
jnp
cwtl
pop
pop
pop
inc
rcrl
icebp
je
dec
pop
mov
dec
push
and
inc
fwait
jmp
es
jp
pop
dec
or
mov
pop
jg
sahf
xor
xchg
xchg
stos
push
and
xor
nop
fimull
imul
aad
sub
les
ds
xor
bound
in
push
loope
icebp
pop
or
push
nop
xchg
mov
pusha
xlat
jns
lahf
aas
pop
daa
pop
jnp
xor
adcl
lret
cmp
out
lret
movsl
les
test
inc
fs
add
fadd
rcrb
inc
add
inc
lret
popf
sub
stos
dec
inc
ret
int3
aam
in
iret
mov
jl
shll
das
cld
jl
call
add
in
inc
xor
cmpsb
xchg
xchg
mov
cwtl
or
fstl
filds
out
jo
loopne
es
daa
mov
push
loop
mov
fldenv
pop
negl
pop
jne
popf
xchg
jmp
add
cmp
mov
adc
aam
addr16
cmc
jo
pop
outsl
shrd
mov
jo
or
cmp
pop
xchg
ss
loope
xchg
aam
loop
mov
dec
xor
and
shrb
enter
inc
mov
inc
cmc
bound
leave
inc
sub
sub
aam
in
pop
sub
mov
push
std
movsl
lcall
aas
outsb
inc
in
fldt
rol
mov
push
jmp
mov
lahf
stos
cmpsl
xlat
lods
and
xchg
xor
andl
pop
test
lret
mov
add
jb
mov
stc
inc
xor
data16
xor
shll
sub
iret
loop
dec
dec
sub
ljmp
push
push
cmp
test
subb
cmp
and
jno
mov
insl
scas
andb
notb
js
jmp
xchg
sbb
sub
arpl
jo
loopne
mov
fcomp
jo
mov
cmpsl
scas
mov
add
jecxz
push
shrl
out
cld
stos
xchg
scas
aas
int3
adc
xchg
aad
or
bound
mov
jb
ret
push
sub
or
sbb
pop
leave
cmpsb
xchg
rcrb
je
fxam
cmp
enter
adc
ret
cwtl
cmp
jmp
or
mov
pop
ret
out
and
push
cmpsl
mov
popa
je
sbb
stos
xchg
testl
cld
cld
es
jb
sarb
lds
fists
pop
pop
and
jb
stos
sar
mov
leave
jecxz
cmpsl
mov
loopne
xor
jns
pop
mov
jae
pushf
sti
psubq
push
dec
mov
pop
cmpsl
sbb
xor
outsb
or
scas
jns
cmp
sarl
jo
lods
jo
and
push
pop
arpl
xor
push
cld
mov
jo
loop
stos
jno
jmp
lahf
xorb
sbb
pop
cmp
xor
pop
inc
pop
sub
push
das
push
adc
and
loop
push
mov
daa
int
std
or
mov
push
mov
scas
mov
cmc
xor
inc
mov
push
icebp
int
jae
add
repnz
add
lret
mov
loop
cmpsl
lods
ret
xchg
ja
loop
call
leave
rolb
es
add
dec
xchg
inc
addr16
cmpsb
fs
rol
decb
jns
inc
shrb
jb
mov
ret
pop
sub
adc
ret
cmp
mov
add
in
dec
out
adc
inc
stos
dec
in
aam
test
and
lahf
lret
add
dec
mov
cmp
xor
mov
out
mov
mov
iret
mov
fdivs
adc
sub
nop
addl
xchg
fcompl
nop
sub
pop
mov
inc
mov
inc
test
or
lock
or
mov
pop
adc
out
call
xor
shll
lods
cmp
aaa
test
jle
sbb
adc
pusha
ljmp
jle
lcall
je
les
aaa
jo
or
imul
sub
outsb
stos
or
leave
push
hlt
sahf
push
adc
pop
mov
test
and
sbb
mov
mov
fwait
push
add
cld
and
movsb
decl
xor
int3
mov
pop
add
xchg
or
adc
jns
push
rorb
ja
dec
mov
out
insl
fbstp
loopne
mov
xchg
pop
in
and
mov
repnz
hlt
mulb
push
sub
push
add
fs
cmp
add
out
test
jb
subl
fsubl
or
sbb
sub
xchg
push
inc
xchg
mov
sti
daa
add
sar
mov
movsb
sub
fst
xchg
xchg
jmp
cmp
sar
std
add
inc
ret
mov
mov
insb
rcrb
and
push
ljmp
cld
int3
out
bound
cli
pop
stc
and
fmull
cmc
xchg
jmp
jae
mov
jo
xor
arpl
fcomip
imul
jge
dec
mov
jmp
mov
mov
sub
sahf
inc
mov
sbb
jecxz
ret
inc
fnsave
push
sahf
imull
pop
xlat
sub
test
adcl
mov
lea
mov
inc
test
mov
cli
add
in
sbb
or
inc
lcall
mov
xor
lods
push
push
dec
mov
out
xchg
daa
cmp
cmp
sub
mov
adc
mov
inc
push
addr16
mov
mov
rcrl
addr16
cmc
sub
fsub
cmp
inc
adc
lahf
cmp
xchg
leave
clc
pop
sub
call
xlat
lret
out
movsb
adc
jae
xchg
mov
cli
mov
mov
mov
test
xchg
pop
lahf
lods
cmp
xchg
int
inc
scas
cld
cwtl
lret
jae
movl
popa
and
ja
daa
pop
cltd
fldt
cmp
push
aam
ret
xchg
arpl
xor
out
shrl
mov
aad
jb
test
leave
adc
addr16
mov
push
xor
lock
pop
fsubp
int3
mov
push
adc
push
cmc
or
outsb
jno
push
lahf
sti
adc
test
in
mov
aam
pop
cmp
mov
fstp
cmp
jmp
outsl
pop
lea
or
repnz
aaa
daa
xor
mov
push
mov
sub
push
cmp
inc
add
fwait
push
in
outsl
aaa
mov
lods
movsb
in
addl
mov
cli
and
shrl
in
lods
ja
inc
fimull
dec
xchg
adc
mov
pop
xchg
jp
xor
andb
movsb
xchg
pop
xchg
cmp
ds
sub
mov
mov
adc
cmc
ja
sub
cmp
mov
fdivs
mov
sbb
scas
out
add
dec
out
jnp
push
jge
sti
aam
test
pop
xlat
cld
mov
pop
iret
mov
fnstcw
scas
pop
popf
sbbb
fists
xchg
mov
or
in
or
fldz
into
mov
cs
gs
fs
push
cmpsl
adc
lea
adc
out
negl
lcall
pop
out
mov
mov
add
sub
icebp
ret
jle
cmpsb
fmulp
xchg
and
pushf
sbb
dec
cmpsb
xor
pushl
add
mov
sbb
or
xchg
dec
pop
fsub
sti
push
in
cmc
or
push
loopne
les
pop
sbb
mov
lods
enter
and
aaa
mov
sub
cmp
sub
popa
add
sbb
stos
inc
fbstp
rol
enter
mov
insl
dec
rolb
imul
mov
das
add
mov
adc
pushf
mov
roll
aam
cmpxchg
sarl
inc
out
mov
or
mov
mov
lcall
mov
xchg
stos
mov
and
jmp
pop
lahf
aam
fdivrl
jne
sbb
mov
xor
out
mov
sti
popf
adc
mov
shlb
cmp
xchg
lds
dec
mov
pushf
gs
lcall
inc
sbb
loopne
pop
cmp
xchg
andb
add
mov
int
test
pop
mov
sbb
lds
mov
pop
mov
mov
lcall
repz
sub
sub
pushf
mov
mov
outsl
cld
jg
test
cmc
push
dec
mov
xchg
jns
inc
jbe
ret
sub
mov
icebp
push
add
inc
adc
inc
cs
shrl
pop
push
jle
xor
das
shr
ja
jns
sbb
mov
leave
mov
insl
fsubl
in
jle
fxch
sbbl
add
xchg
sub
dec
mov
push
fucomi
je
ret
mov
xor
sub
inc
in
rcrl
cmp
dec
push
shlb
adc
jns
pop
dec
pusha
sbb
ror
mov
mov
cmpsb
repz
jae
call
sbb
lods
rcrb
out
mov
mov
js
cmc
mov
xor
ficoms
dec
jmp
sub
jmp
aam
test
test
dec
shrl
add
gs
aam
push
dec
aad
adc
stos
imul
mov
jl
adc
lds
cmp
out
mov
push
pop
test
push
mov
inc
flds
subb
cltd
test
dec
pushf
mov
stc
cli
shll
insl
hlt
jnp
lret
pop
xor
add
arpl
cmp
cmp
loop
les
aam
push
adc
xor
mov
outsb
fisubl
cmp
fstps
inc
sbbl
or
push
inc
and
mov
sub
cmp
dec
push
push
fnstcw
aas
cmpsb
daa
popf
and
outsb
push
xor
xchg
clc
les
pop
sbb
cwtl
xchg
lea
shrl
rorl
in
and
mov
test
xor
adc
push
out
nop
test
roll
into
jl
into
mov
xchg
int3
inc
pusha
pushf
mov
das
loope
inc
mov
int3
int3
outsb
lret
js
add
push
cmp
add
lods
les
xchg
rol
jecxz
addr16
and
mov
or
xchg
hlt
arpl
xchg
mov
jp
dec
mov
pusha
insb
cmp
mov
inc
sbb
xlat
fdivs
jo
ja
dec
rclb
and
or
fistpll
xlat
out
adc
cwtl
mov
xchg
std
imull
stos
imul
dec
cs
jmp
test
movsb
inc
cli
aam
push
xchg
jmp
adc
popa
inc
lds
pop
xchg
pop
fcompl
cmpl
and
xchg
fadds
loopne
cld
pop
mov
rcrl
xchg
mov
or
xchg
xor
fs
cltd
sub
pop
mov
scas
mov
stos
xchg
jae
pop
pop
pusha
out
fs
cli
or
mov
xor
cmp
jmp
scas
mov
or
test
mov
push
test
mov
mov
xor
lea
popa
xor
adcb
jne
and
sub
mov
xchg
jb
sbbl
hlt
stc
jge
enter
mov
adc
mov
fmul
mov
jle
dec
jge
add
mov
clc
ret
xchg
outsb
ss
cmp
cmp
push
lds
das
dec
fbstp
pop
das
ret
xchg
and
mov
jbe
xchg
add
aaa
scas
sub
xchg
or
push
test
push
in
or
sub
data16
dec
std
push
nop
fwait
dec
mov
cltd
sub
movsl
mov
bound
pop
mov
out
sub
insb
xor
jg
push
addl
std
dec
or
adc
mov
push
lret
gs
and
popf
test
out
mov
sbb
push
outsb
adc
loope
sarb
das
sub
das
or
cwtl
das
rolb
inc
inc
lock
or
aaa
mov
inc
popa
mov
xor
arpl
insl
cmpl
call
inc
or
xor
jp
arpl
dec
mov
jo
ret
add
fdiv
or
arpl
dec
mov
lahf
rorb
mov
fwait
test
test
repz
lods
es
jne
icebp
lock
dec
out
jge
cmp
jne
pop
or
add
xor
fsub
add
sub
rcrl
adc
out
pop
xchg
je
push
pop
push
sub
stc
add
into
cld
js
clc
lahf
in
and
shr
stos
fistpll
subl
and
outsl
movsl
and
mov
mov
jae
pop
mov
sbb
repz
es
mov
push
inc
xchg
pusha
daa
adc
or
sbb
xor
jle
in
sahf
push
mov
inc
sti
inc
push
gs
jae
out
negb
mov
push
pop
push
and
popl
movsl
mov
adc
push
or
ret
es
xor
pop
lods
ss
out
xchg
xchg
int
mov
lock
in
aad
mov
loopne
sarl
movl
pop
js
lret
cmp
in
mov
dec
mov
or
dec
fiadds
int
rcrb
int3
and
xchg
pushf
push
mov
stc
int
js
loop
pop
dec
andl
mov
mov
adc
xchg
sbb
mov
push
xchg
stos
fdivs
and
cmpsb
fiadds
mov
clc
inc
xlat
cld
cmp
sub
sbb
mov
add
lret
out
sub
sbb
adc
aaa
mov
mov
jle
loope
rolb
lods
mov
inc
inc
lar
dec
lret
insl
pushf
cmp
int
pop
push
out
shll
iret
push
dec
xchg
push
inc
xchg
fwait
inc
stc
ret
lea
fisubrl
icebp
pop
sbb
adc
lods
and
jno
lcall
movsl
int
lods
adc
cwtl
bound
xchg
daa
inc
cmpsb
lahf
int
inc
fbstp
mov
cli
mov
xor
sbb
dec
gs
fisubrs
jne
rcll
pop
jp
sub
loopne
push
frstor
mov
xchg
repz
pop
mov
or
mov
hlt
es
mov
cli
inc
in
divl
mov
mov
cld
test
mov
jmp
mov
loopne
test
mov
pushf
push
and
std
out
jb
outsb
and
pop
sahf
inc
xchg
xchg
xor
mov
aaa
cltd
sahf
sbb
jns
addb
cmp
xor
xor
mov
js
jae
ja
imul
push
cmpsl
rcr
xchg
jl
imul
testl
outsl
cmp
sub
or
repz
jno
xchg
ret
bsf
or
fs
mov
xchg
adc
xor
cmp
nop
push
sub
jp
rcrl
lret
or
sub
outsl
push
je
jmp
xorb
pop
arpl
pop
enter
mov
push
push
push
xor
cwtl
int3
jno
push
mov
and
repz
lret
in
gs
xchg
dec
orb
sarl
add
iret
push
repz
loop
je
cmp
and
sbb
mov
jge
mov
repnz
mov
xchg
rcrb
or
mov
pop
sti
popf
mov
mov
mov
fbld
pop
fdivl
pop
mov
data16
fwait
cwtl
and
sub
rcr
mov
mov
mov
outsl
dec
mov
lock
mov
int
mov
push
adc
repnz
xchg
sbbl
xchg
xor
lods
pop
ja
push
addr16
adc
lcall
mov
sub
rcrl
xchg
add
jmp
mov
ljmp
aam
incl
add
dec
sbbl
jle
das
aas
stos
mov
sbb
xchg
daa
inc
pop
mov
addr16
cmp
popf
add
shll
aad
or
push
xor
cli
mov
xor
stc
out
stc
jg
fisttpll
xor
std
iret
mov
pop
inc
add
sbb
cld
ja
mov
jecxz
sbb
cmp
xor
jne
dec
loopne
add
jge
rclb
sti
fldl2e
sub
inc
sbb
mov
mov
pop
loope
lret
dec
cmp
mov
shrl
lods
aad
and
jge
jl
int3
cmp
loopne
lods
xor
cmp
pop
rcrl
adc
bound
inc
push
adc
or
ficoms
adc
sahf
lds
adc
loope
pop
int3
sbb
sub
jns
rcrl
sbb
fcomps
sub
fsubr
add
scas
inc
jmp
fsubs
cmp
mov
aad
mov
shl
in
mov
jl
jp
adc
mov
sbb
mov
xor
adc
or
lods
pop
push
movsl
out
mov
or
xchg
int
aam
insb
dec
add
pop
lcall
repz
add
push
aam
mov
pop
pop
loope
fdivr
pusha
into
mov
lods
or
inc
subb
cmp
cmp
int3
mov
and
cmp
xor
adc
sub
xchg
mov
dec
and
adcl
in
cmp
andl
or
testb
sbb
dec
arpl
sahf
cmp
movsb
and
pop
stos
nop
call
leave
sbb
adc
xlat
pushf
or
adc
addl
fsubrp
es
popf
mov
sub
add
add
xchg
in
mov
and
fstps
xchg
mov
lahf
push
nop
test
into
inc
push
test
push
add
add
and
out
mov
dec
js
scas
fdivr
adc
lret
cmp
xor
jne
arpl
inc
pop
pop
pop
mov
jno
mov
push
cmpl
loopne
pop
or
cwtl
xchg
cmpsb
lcall
or
inc
pop
mov
mov
sub
push
add
dec
add
cmpsb
ret
xor
leave
xor
ss
pinsrw
test
iret
xchg
gs
sbb
das
fstpl
inc
daa
loop
sub
lret
sbb
test
mov
js
xor
ret
iret
icebp
lds
inc
push
pop
stos
in
mov
xchg
inc
stc
dec
loope
sbb
imul
and
rolb
sbb
call
xchg
xchg
int3
and
pop
les
add
test
fwait
insb
push
js
daa
or
inc
pop
dec
xchg
xchg
mov
mov
in
sub
lret
fwait
dec
pop
or
ficoml
pushf
je
adc
jae
into
xchg
repnz
sub
movsl
sahf
lea
js
adc
dec
scas
or
push
mov
sti
movsl
add
mov
icebp
cmp
inc
test
dec
cli
adc
sarl
mov
cli
cli
addb
pop
fidivs
fs
in
sarb
jmp
jp
in
loope
loopne
out
xor
fcompl
dec
push
pop
in
mov
mov
std
es
lret
dec
cmpsl
outsb
mov
imull
ret
inc
pushf
mov
adc
cmp
cmp
les
pop
repnz
fwait
movsl
nop
aaa
lods
push
mov
subl
and
sbb
dec
mov
add
push
mov
xor
into
push
mov
mov
subb
inc
jp
adc
es
mov
mov
sbbl
xor
sti
jae
and
push
jle
bound
mov
lret
clc
mov
sbb
mov
test
sbb
dec
and
pop
or
fdivl
mov
mov
stos
and
jp
adc
push
or
adc
push
pop
jecxz
sbb
pop
arpl
adc
enter
sub
outsb
or
jecxz
mov
data16
pop
xor
andl
push
pusha
add
loope
dec
jle
das
popf
xchg
xchg
ret
stos
jb
in
push
fiadds
inc
aaa
aaa
cmp
add
and
repz
sub
pop
inc
mov
push
repnz
cmc
inc
adc
xor
or
mov
cmp
addr16
inc
or
push
sbb
fisubs
loope
xchg
or
mov
jnp
or
outsl
xchg
xor
js
sub
sti
pop
fld
dec
xchg
sbb
cmp
mov
mov
push
imul
enter
mov
xor
out
jo
pop
mov
dec
dec
mov
cmp
jno
bound
push
or
clc
ret
mov
fimuls
xor
fwait
data16
aaa
xor
stc
add
push
inc
fnsave
pop
stos
outsl
int3
sbb
mov
stc
sarb
sub
or
ficoml
test
mov
mov
sub
cmp
adc
mov
aaa
sbb
sub
jb
nop
or
lods
scas
lea
out
mov
cmpsb
test
outsb
mov
es
dec
imul
sbb
xchg
mov
cmp
bound
ds
nop
inc
cmpsb
lods
nop
out
pop
mov
or
or
fstps
xchg
out
sub
fs
insl
int
jg
mov
jmp
push
mov
fdivrs
cs
cmp
sbb
xchg
mov
xor
test
outsl
dec
dec
mov
add
out
and
inc
scas
mov
sub
sub
in
lods
dec
in
cli
xchg
or
sbb
add
pop
je
push
and
stc
mov
or
mov
stos
in
mov
adc
jb
xchg
dec
lret
inc
and
int
nop
mov
popf
mov
or
pop
jmp
sub
vpackuswb
jae
sbb
add
mov
push
out
xor
pushf
cmp
enter
xor
enter
push
sbb
inc
xchg
mov
cltd
sbb
jmp
fdiv
pop
incb
ret
jnp
sbb
sub
icebp
and
add
sti
ja
jg
push
jne
add
sub
jnp
dec
mov
hlt
sub
in
inc
mov
fimull
leave
cli
lea
adc
mov
sahf
add
pop
stos
fdivs
outsl
adc
sub
mov
xor
xchg
dec
fsubr
in
fnsave
dec
sub
lret
cld
in
dec
push
pop
sbbb
int3
pop
pop
popa
inc
jmp
and
dec
jmp
lods
mov
or
cmp
aaa
mov
sbb
call
xchg
leave
jp
push
fxtract
gs
inc
scas
mov
jae
ret
cmp
hlt
out
fsubr
mov
mov
in
popf
hlt
pop
cwtl
int
das
mov
mov
inc
lods
lock
out
paddusb
sub
stos
clc
adc
imul
or
int3
pushf
xchg
adc
xchg
jnp
dec
jae
push
repz
sub
inc
jp
icebp
add
sbb
pop
test
push
pusha
lahf
outsl
lods
sbbb
inc
xor
cmp
mov
xor
dec
jnp
push
jg
andb
and
pop
dec
lcall
popa
inc
inc
inc
test
sahf
sbb
or
int3
push
push
jae
and
xchg
adc
repnz
pop
mov
jae
popa
lock
sub
aas
add
insb
mov
mov
inc
loope
das
bnd
aaa
out
or
mov
dec
repnz
icebp
adc
pop
pop
mov
mov
test
bound
and
pop
dec
mov
xorb
jmp
pop
sub
fwait
ljmp
arpl
xchg
push
mov
cs
mov
and
out
mov
andl
outsb
insb
sbb
mov
jae
mov
cmp
add
inc
lods
or
inc
xor
rcll
sub
mov
cmp
jmp
ret
adc
sbbl
push
push
dec
push
xchg
mov
xchg
mov
xchg
popa
pop
and
and
incb
into
mov
in
fisubrl
xlat
daa
fistpl
mov
sti
pop
jp
adc
test
stos
cmp
cmp
in
bound
pusha
lds
mov
push
add
ja
dec
mov
mov
xchg
loop
popa
into
outsl
or
mov
test
adc
nop
nop
inc
add
xchg
shl
add
lods
sub
out
insb
in
mov
shr
pop
lock
mov
into
push
mov
call
in
aad
xchg
sbb
seta
xlat
sub
enter
stos
movsl
ds
mov
inc
imul
cmpsb
xor
daa
sbb
out
xchg
adc
push
rorw
mov
xor
adc
ljmp
ss
mov
and
sub
xchg
inc
mov
inc
and
lods
jl
jae
sub
out
pushf
sbb
xor
push
cmpsb
je
loop
adc
lcall
or
cmpsb
sub
lahf
repnz
js
fiadds
xorl
fwait
push
cmp
xor
cmpsb
or
push
mov
not
mov
je
mov
push
or
add
jne
jp
jmp
addr16
or
adc
dec
mov
rcll
das
sbb
sbb
ds
cmp
push
xor
cmp
jno
cmp
call
sub
aas
sbb
lret
mull
repz
stos
and
add
jae
hlt
fldenv
ret
mov
orb
sbb
adc
stos
adc
and
or
mov
pop
andb
jl
sbb
and
mov
inc
inc
add
sub
fisubs
jecxz
mov
mov
sbb
call
out
add
push
es
shlb
xchg
cmp
push
nop
mov
call
sahf
nop
fisttpl
cltd
and
dec
xchg
imul
aaa
daa
stc
add
dec
add
mov
xlat
push
gs
lcall
ja
push
and
pushf
pop
cld
fadds
xchg
sbb
insb
jge
push
iret
ds
and
adc
adc
adcl
loop
fdivs
jg
sbb
pop
leave
jno
mov
stos
or
sub
loop
jp
hlt
fmuls
mov
mov
xorl
pop
mov
stos
pushf
cmp
jbe
push
popf
pusha
in
jae
mov
insb
xor
push
pop
mov
mov
neg
insb
mov
out
test
xorb
lret
movsl
and
cs
scas
sbb
push
int3
add
ret
mov
push
repz
mov
repz
mov
test
js
cld
ret
pushf
sub
inc
jo
jno
popa
sahf
adc
stos
ljmp
mov
dec
inc
fnstsw
push
es
sahf
int
mov
xchg
mov
fiadds
call
enter
jge
mov
mov
pop
scas
adc
jnp
mov
les
addb
and
xchg
fistpl
pop
std
mov
pop
mov
sub
gs
push
popa
jo
movsb
mov
mov
orb
test
xchg
and
and
sub
fisttpll
add
mov
je
pop
stc
shrb
dec
dec
dec
mov
in
decb
ss
lock
sub
jae
sub
pop
outsl
adc
cmp
mov
popf
loop
aad
or
add
xor
add
rclb
cwtl
xor
stos
lret
jp
sub
outsl
lcall
daa
xor
sbb
fsubrl
push
mov
mov
add
jbe
into
push
cmpsl
test
push
sbb
iret
jns
inc
xchg
paddb
push
sbb
inc
fcomps
pop
cltd
fidivrl
insb
adc
pop
stos
lcall
mov
pop
test
ret
jae
pop
inc
mov
push
cmp
fcmovbe
add
inc
std
fcom
lret
adc
jb
xor
jecxz
push
cs
and
aam
jmp
mov
push
sti
mov
xchg
fisubs
jb
ljmp
dec
pop
andb
cmp
inc
cmp
mov
cmpsl
adcl
xchg
les
ljmp
and
xchg
xchg
adc
and
test
xrelease
rolb
mov
in
push
out
push
shlb
inc
push
rcll
scas
ret
sahf
int3
cmpsl
adc
pushf
cmp
cwtl
stos
and
jmp
mov
mov
mov
adc
inc
add
mov
mov
sti
loope
pop
mov
jecxz
sub
jmp
mov
scas
adc
inc
rcr
gs
mov
in
cld
std
pop
dec
dec
cmpsl
and
fstps
sti
cmp
sub
jp
loopne
movsb
das
xchg
jle
jge
shrl
jns
shl
dec
and
inc
dec
iret
xor
xor
cmp
pop
insl
aam
sbb
adc
ret
mov
rcr
or
xlat
xchg
sub
into
leave
add
clc
or
and
jecxz
inc
sbb
sti
push
mov
pop
imul
jnp
ja
cwtl
xor
in
lods
jecxz
mov
jae
mov
repz
mov
xor
out
push
hlt
dec
bnd
ret
shlb
mov
or
jbe
mov
adc
movb
pop
or
adc
lret
ljmp
hlt
pushf
inc
loope
cmp
push
lods
fs
inc
jbe
out
mov
mov
push
fucomi
fldcw
add
lods
pop
jae
lock
mov
inc
ja
repnz
push
vphaddubd
adc
rcll
or
les
dec
mov
xchg
hlt
xchg
xor
mov
mov
mov
cmp
cmp
test
mov
mov
into
imul
adc
les
push
lea
mov
daa
mov
aad
ret
sbb
into
test
cmp
pushf
rcrl
sub
xor
inc
inc
scas
fwait
lock
mov
sbbl
mov
lahf
xchg
aas
pop
adc
mov
imul
test
and
pusha
cltd
out
pop
test
fsubrs
ja
pop
cltd
repnz
aam
mov
cmpsl
or
mov
xchg
xor
pop
xlat
dec
push
ffreep
jmp
cmpsb
inc
lcall
xor
xchg
icebp
xchg
test
dec
popa
cmp
ret
iret
in
xchg
xchg
xor
ja
enter
push
sbb
test
ret
movsb
sbb
rorb
fildll
push
pushl
pop
jnp
sub
push
outsb
sahf
cmpsb
push
mov
pop
mov
sbbb
xchg
adc
cmpsb
push
sbb
mov
mov
fldenv
fmull
sti
pop
lret
pop
aas
adc
in
arpl
xchg
sar
cwtl
pop
pop
xlat
pushf
jecxz
popf
andl
outsb
icebp
retw
es
and
add
in
cld
jb
pop
mov
scas
jecxz
lcall
mov
lds
and
sbb
sub
shll
push
gs
dec
sbb
pop
mov
out
iret
aad
in
inc
mov
scas
xchg
data16
push
mov
pushf
jmp
fs
stos
sarl
push
in
cmpb
xchg
or
in
outsb
fiaddl
sbb
jmp
jmp
jge
jnp
shrl
pop
push
jle
aam
in
and
fdivs
leave
cmp
es
cwtl
pop
jmp
fisttps
notb
arpl
cpuid
dec
popa
jnp
pop
cmc
scas
xchg
xor
leave
enter
cmp
jl
push
or
rorb
or
inc
jb
jmp
mov
cmp
pop
lock
jge
aam
cld
fldenv
fwait
dec
ljmp
leave
ds
mov
pop
shlb
adc
sub
cwtl
add
jns
ljmp
sbb
add
shrl
loop
adc
adc
ss
xchg
daa
jno
ss
mov
inc
pushf
insl
mov
ljmp
adc
add
pop
fbld
mov
loopne
dec
sbb
push
mov
lock
adc
pop
in
loope
mov
insl
shlb
loope
and
sub
pop
repz
jns
sub
scas
call
inc
subl
jge,pn
pop
stos
cmovg
scas
sub
lret
mov
add
in
loopne
cltd
lods
jecxz
pop
adcb
cmc
fiaddl
fwait
lods
push
or
arpl
nop
popf
jnp
cltd
loopne
bound
icebp
lds
shr
add
lcall
rcrb
push
fiaddl
jl
insb
scas
pop
outsb
outsb
shlb
lock
ret
fildll
es
cli
sahf
inc
add
cs
push
adcl
push
shlb
jle
and
adc
pop
int3
mov
pop
pop
sub
dec
mov
cltd
hlt
jae
push
cmp
add
add
add
pop
sbb
pop
sub
sahf
jns
xlat
scas
adc
ja
subl
movsb
mov
jle
loop
xor
dec
loopw
gs
xchg
jl
sbb
mov
rolb
loope
mov
jae
andl
aaa
enter
and
icebp
movsl
mov
fnstcw
add
or
xchg
test
rcll
push
push
mov
adc
clc
jns
movsb
xchg
cli
and
les
pop
lret
sub
push
and
sub
lret
mov
xor
mov
fmul
in
or
xchg
inc
rorb
xchg
sbb
or
and
jl
xor
mov
lods
insl
stos
ret
xchg
sbb
aad
adc
add
out
test
jg
out
pop
dec
add
fsts
mov
enter
lret
mov
in
add
inc
scas
sub
push
push
popf
mov
cmp
xchg
je
aam
jmp
cmp
add
dec
repnz
mov
icebp
sub
jmp
mov
rclb
or
jo
sub
repz
sbb
cs
push
fwait
adc
jae
xchg
pop
sbb
addr16
rcll
popa
repz
sub
pop
pop
in
cwtl
sti
mov
jno
scas
dec
or
daa
gs
pop
subl
scas
mov
ljmp
loope
faddl
pop
orl
dec
jmp
or
mov
xor
xor
jg
test
test
xor
mov
xor
das
hlt
in
xchg
add
adc
or
sbb
shr
push
pop
test
movsb
orl
std
mov
sub
jnp
inc
out
les
adc
bound
push
mov
loope
mov
and
out
inc
dec
jg
imul
sub
push
adc
jb
adc
sub
mov
xchg
adc
mov
pop
out
sub
roll
jp
mov
test
xor
fwait
mov
lock
scas
adc
lret
iret
stos
push
sbbl
push
xchg
lcall
jg
test
pop
divl
sub
fs
lock
stos
xchg
push
push
in
sub
lds
vmulss
sub
cmp
lahf
jae
jge
lods
repnz
mov
loopne
sub
stos
inc
or
testb
sbb
xchg
rep
mov
adc
mov
lret
and
mov
out
outsl
lcall
out
not
insb
pop
lods
or
and
inc
mov
stc
ljmp
pop
cmp
data16
es
inc
orb
repnz
pop
js
shr
repz
and
jge
enter
pushf
dec
aas
js
frstor
stos
iret
pop
shrb
jmp
xchg
enter
mov
pop
mov
mov
mov
add
mov
xor
mov
pop
fcomp
outsl
rorl
les
movsb
pop
inc
lret
sbb
inc
aam
mov
aas
push
aaa
push
sbb
imulb
idiv
stos
pop
push
push
movsl
push
dec
jle
push
loopne
mov
dec
sbb
cmc
cmpsl
insl
xor
inc
cmpsb
mov
adc
sub
js
stc
add
imul
sbb
leave
or
inc
shll
push
fisttpll
mulb
sbb
pop
inc
in
xor
lahf
jl
lret
es
mov
push
pusha
or
shl
inc
xor
push
push
mov
test
orl
mov
mov
mov
cmpb
xor
push
insb
out
fcom
test
push
mov
push
and
dec
dec
call
cmp
pop
cwtl
mov
inc
jb
in
add
cmp
pop
sbb
mov
das
inc
jns
xchg
mov
aas
jg
mov
fadds
jmp
aaa
movsl
test
pusha
icebp
sub
jns
pop
adc
cmp
clc
jbe
lock
repz
js
adc
rcrb
in
shll
mov
sbb
lret
add
cmp
jmp
push
jmp
loop
popf
mov
iret
adcl
orl
xchg
xor
cmpsl
ret
sbb
mov
test
push
cmc
rcl
rorb
out
dec
sbb
add
jl
mov
aas
or
fstpl
out
test
int3
mov
mov
adc
cli
or
sahf
pushf
sbb
mov
popf
and
cmp
cmp
cs
insb
pop
je
and
jecxz
mov
add
out
or
adc
jo,pt
lcall
and
dec
xor
or
jns
or
xchg
jp
fdivrl
jne
subb
fcomip
cli
and
mov
aas
mov
test
adc
mov
mov
push
and
sarl
mov
inc
sub
ljmp
rorl
shl
push
and
cmp
sbb
cld
shlb
pop
in
xchg
lea
aam
mov
gs
popa
push
loopne
mov
sti
in
fimuls
lret
mov
pop
ja
lea
daa
sbb
xchg
notb
sub
scas
xor
lret
out
cltd
mov
mov
cs
icebp
in
movsl
pop
xor
jbe
es
out
fwait
sub
add
loope
dec
sbb
mov
test
inc
popa
sub
sbb
sub
roll
pop
adc
inc
movsb
push
jge
push
out
ljmp
sub
daa
jg
mov
daa
fisubrl
xchg
stos
cmpsl
xchg
sbb
andnps
sbb
lret
fs
push
add
push
jp
in
xchg
xchg
and
cmp
cmp
andl
or
sub
mov
adc
and
aas
out
aas
inc
push
xchg
fisttpl
loop
dec
adc
and
loopne
icebp
adc
mov
scas
pushf
adc
inc
fbld
in
fiaddl
sub
or
test
push
adc
je
int3
sahf
sahf
std
mov
loope
add
cli
cmpsb
pop
lds
pop
nop
xchg
daa
mov
jns
stc
pop
sbb
mov
stos
into
add
xor
and
push
and
fidivrl
pop
addl
sub
sub
sbb
sbb
test
sub
mov
insl
out
mov
movsb
fnsave
out
cli
in
imul
and
dec
test
dec
pushf
mov
aaa
mov
mov
out
xchg
bound
aad
push
add
icebp
pushf
sub
sarb
sbb
and
in
loopne
lods
lods
jecxz
pop
js
inc
sub
mov
fwait
xor
add
and
arpl
push
mov
out
pop
cmpsb
inc
push
mov
das
pushf
push
out
sub
jecxz
jp
cwtl
jg
loop
cmp
arpl
mov
enter
sub
jbe
push
stos
fcomps
frstor
lds
