sbb
add
sbb
addr16
xchg
fists
std
fst
push
add
shll
xchg
in
fwait
jb
in
popa
aam
sbbl
stos
enter
push
stos
mov
stos
aad
mov
mov
cmpb
out
aas
sbb
ss
test
jo
daa
dec
test
mov
ljmp
push
cli
or
loope
or
or
jb
jp
imul
mov
insl
adc
jae
repz
push
clc
adc
loopne
rorl
jb
test
dec
jp
out
mov
pushl
cmp
stc
xor
shlb
fsubs
fcoml
in
cmpsl
fs
test
sbb
ret
sub
push
fwait
mov
inc
add
mov
dec
sbb
pop
sbb
in
dec
sbb
jl
jmp
sub
mov
sub
or
cmpsl
adc
sbb
mov
pop
push
ja
adc
xor
repz
mov
outsl
movswl
stos
cmp
mov
inc
mov
lahf
sbb
es
sub
stc
insb
outsb
cmpsl
repz
and
xchg
adc
sbb
mov
int
xor
div
adc
rorl
adc
add
jb
popf
mov
notb
sbb
sub
mov
push
imul
dec
lods
jb
mov
clc
pop
ret
mov
and
sahf
inc
movsl
out
or
add
in
jl
or
jno
inc
cld
clc
jb
mov
and
divb
fstp
or
mov
dec
iret
mov
lods
dec
add
fwait
in
or
mov
jnp
sub
lcall
dec
jp
test
cmp
inc
dec
or
pushf
sbb
jbe
cld
jnp
xor
inc
stc
dec
mov
fwait
mov
jg
fcoml
xchg
nop
pop
clc
xlat
nop
mov
movsl
mov
mov
js
mov
testl
popf
test
in
std
jmp
adc
stos
or
mov
pminsw
sbb
aaa
jo
mov
mov
daa
out
cmp
jle
cmp
and
mov
enter
lds
sahf
cli
sub
icebp
shrl
push
cmc
lret
mov
pop
int
ret
repz
adc
fisubrs
push
cltd
popa
fcomps
dec
das
notl
clc
adcl
mov
cmc
fisttps
test
sti
testl
mov
mov
add
and
jmp
aam
and
mov
xor
mov
shrb
jne
xchg
call
jmp
loopne
call
pop
jle
or
push
ret
mov
pop
xor
andl
cmp
xor
fdivl
aam
clc
sbb
mov
daa
out
mov
pop
pop
fisttpl
push
mov
loopne
or
and
insl
jg
popf
test
cmpsb
xor
lea
xchg
cmp
call
jbe
scas
or
add
inc
movsl
rcr
xchg
out
jnp,pt
adc
mov
nop
mov
sbb
add
mov
jg
add
jl
cmp
or
test
outsl
icebp
jae
mov
sbb
arpl
sbb
lcall
nop
popa
lret
shrb
fs
jo
mov
cld
pushf
out
lea
xor
sbb
scas
outsl
and
adc
and
scas
ficoms
mov
outsb
and
pop
mov
stos
xchg
push
inc
gs
inc
jne
test
or
ds
ljmp
out
lret
jg
repnz
add
addl
cwtl
xor
sub
call
sub
test
mov
pushf
sub
inc
loopne
xchg
cmpsb
adc
repnz
js
or
or
dec
dec
or
das
lret
cmp
mov
ficomps
stos
jge
dec
fdivl
and
stc
movsb
lock
cli
xor
test
loope
adc
dec
or
push
test
cmpsl
ja
iret
xor
lea
pop
inc
int3
and
shll
cmpsl
test
testl
sub
sbb
lods
aad
mov
jl
mov
repz
pop
pop
inc
movsb
in
or
lea
into
pop
mov
rcr
xlat
inc
rolb
fsts
dec
cs
sub
xchg
sub
push
fldt
scas
in
sbb
xor
dec
fisttpll
hlt
sti
mov
and
push
test
outsl
mov
lock
hlt
pop
je
mov
lret
ficompl
lea
jnp
inc
and
pop
adcb
popf
dec
popa
aaa
adc
in
pop
imul
adc
iret
dec
push
xchg
fistl
sahf
outsb
pop
stos
mov
sbb
shll
fisttpll
mov
rol
and
lods
lock
lds
mov
sub
jmp
popf
adc
pushf
xor
rcrb
aam
push
cmp
movsl
gs
or
sbb
mov
aas
add
cli
dec
iret
jle
push
adc
inc
inc
cmp
loop
xor
push
faddl
inc
push
xchg
imul
cmp
jo
sub
inc
mov
popa
divl
in
imul
je
inc
mov
jno
addr16
inc
sub
inc
sbb
es
lcall
push
lret
cmc
sbb
sbb
add
and
mov
fwait
mov
jb
jnp
mov
push
out
or
aam
pop
jne
jmp
dec
jg
jg
sbb
test
push
ljmp
in
loopne
sbbl
movsl
inc
cmp
movzbl
xchg
imul
dec
fnstsw
iret
out
ss
sub
lahf
mov
adc
cmc
ljmp
adc
incb
xor
or
or
mov
scas
fs
adc
ss
cltd
pop
insl
lret
dec
xor
jp
out
jnp
sub
pop
jmp
cli
cmp
jle
mov
out
sbb
xchg
push
ds
dec
sbb
mov
cmp
add
fs
in
or
mov
adc
fsubl
jne
hlt
or
in
icebp
gs
int3
ja
pop
add
pop
xchg
and
xor
inc
into
lret
mov
stos
push
cli
mov
mov
icebp
jns
pop
mov
xor
mov
jno
dec
gs
js
inc
adc
and
fdivr
push
pop
sbb
jb
or
mov
or
jl
ljmp
jecxz
shll
mov
decb
jno
push
call
addl
mul
shlb
stos
pop
lods
out
push
enter
jnp
or
xchg
popf
sahf
cld
cmp
inc
gs
scas
cltd
mov
xchg
cmc
js
inc
mov
cmp
pop
push
and
test
cmpsl
shl
push
xor
std
mov
scas
xchg
fstpt
dec
addb
cld
push
stc
test
push
adc
xor
or
sti
fsts
stc
add
jmp
push
cwtl
xchg
xchg
addr16
xchg
mov
mov
mov
push
mov
add
ds
sarb
imul
in
aam
outsl
cli
test
das
fiaddl
mov
mov
sub
mov
mov
mov
add
push
or
inc
mov
cmc
js
loope
leave
addr16
push
les
sbb
mov
stos
xchg
pushf
push
xor
cmp
push
addl
jge
decl
int
fidivrs
inc
pusha
jno
pop
in
insb
prefetch
sub
ss
lahf
sbb
jg
adcl
jne
push
pop
shll
imul
mov
insb
sbb
cmp
fildl
jae
fcomps
lock
in
inc
sbb
js
imull
and
test
cli
and
pop
push
adc
jmp
ret
and
in
scas
sub
xchg
adc
icebp
mov
jbe
out
mov
jl
mov
mov
pop
in
cld
fnop
inc
and
repz
xorl
pop
push
shrb
mov
rcrb
cmpsb
push
jbe
loope
mov
jg
repnz
mov
stos
call
rcrl
lret
test
xor
aaa
jb
jb
sub
das
jnp
pop
fucomip
push
addr16
sarb
mov
xor
cs
fstenv
inc
add
add
lea
and
int
cmpsb
inc
out
subb
fwait
gs
cwtl
or
aas
ds
mov
sub
test
sbb
inc
loope
inc
fisubrs
push
or
fcompl
pop
lret
mov
shl
push
xor
jns
add
fldl
mov
repz
cs
xchg
fwait
dec
adcl
aaa
loope
sbb
lods
mov
inc
idivl
mov
pop
cld
dec
adc
sub
leave
cmc
ss
lret
sub
inc
add
add
shrb
inc
sbb
dec
aad
lahf
in
inc
lods
ret
imul
pop
data16
jae
or
imul
sbb
and
push
adc
mov
es
sbb
outsb
addr16
or
lahf
leave
int3
pop
shll
xor
sub
xchg
sub
loop
push
cmovge
arpl
xchg
enter
mov
aas
ja
fstps
insl
iret
cmpsb
adc
in
jecxz
jno
pop
jbe
por
or
inc
or
pop
dec
jne
and
lock
add
jo
xchg
lret
push
pop
fimull
ret
sbb
mov
lds
pop
rcr
inc
sub
xchg
push
dec
leave
push
inc
inc
xchg
repnz
in
mov
push
inc
nop
mov
jns
sub
sti
cmpsb
jmp
xchg
fs
jo
imul
cs
xchg
scas
add
and
adc
cmp
cwtl
dec
sbb
jl
and
push
push
cmp
je
add
jge
outsb
push
sub
mov
aaa
stc
pop
gs
sbb
fsubp
xchg
enter
dec
mov
push
jns
gs
orb
fidivrs
and
sbb
jne
out
js
inc
dec
inc
mov
insl
jne
hlt
cmp
sahf
pop
sbb
jge
or
mov
ret
xchg
imul
or
dec
xchg
cld
xchg
dec
in
inc
sub
fld
or
mov
mov
push
or
adc
and
add
dec
aas
mov
dec
sti
ret
mov
cs
mov
pop
movsl
xchg
int
sub
inc
xor
adc
nop
sub
and
inc
lods
push
sub
pop
and
test
shl
mov
lea
popa
fidivl
stos
out
pop
sub
lock
lahf
out
pop
push
cmpsl
sbb
lgs
adc
insb
loope,pt
jne
int3
mov
add
out
shlb
movsb
mov
shrb
in
aad
arpl
xor
pop
aas
add
mov
fs
sub
mov
popa
lret
stos
mov
or
aas
push
adc
pop
xchg
sbb
mov
lcall
fdivrs
cmc
mov
rcrl
push
push
pop
outsb
sbb
sub
movsl
sbb
clc
and
in
ljmp
dec
cmp
push
fucomp
xchg
insl
gs
ljmp
dec
inc
inc
pop
mov
das
neg
push
mov
aas
fsubs
dec
mov
xchg
gs
pop
insl
flds
cli
cltd
out
test
stos
adc
dec
adc
cmp
jp
push
and
stc
int
or
sbb
pop
xor
mov
in
in
mov
or
fsubrl
inc
xor
repnz
xor
shll
flds
push
jb
shrl
cld
das
dec
jnp
test
fmull
dec
mov
mov
movsb
fwait
idiv
xchg
je
xlat
daa
fistpll
mov
rorl
cmpsl
add
jecxz
mov
sub
nop
mov
roll
xor
aas
cmc
mov
pusha
xor
mov
jb
pop
xchg
imul
ljmp
aam
add
lods
mov
cmp
repz
jae
xor
je
sbb
iret
lret
scas
xor
xchg
jge
xor
movsl
mov
ret
sub
dec
sub
or
into
mov
mov
mov
and
adc
fldl2t
sbb
insb
pop
gs
ja
sbb
xlat
cs
ljmp
mov
ret
in
ret
leave
icebp
lea
lods
mov
add
cmp
les
jae
insl
std
pop
inc
cmc
lods
insb
pop
hlt
popf
xchg
mov
pushf
xor
lret
fwait
dec
sarb
dec
mov
pushf
xor
outsl
rcl
xlat
fimull
or
xor
xchg
jl
fdivs
jbe
or
out
icebp
cmp
sqrtps
out
mov
loope
push
jno
dec
sarb
int3
enter
fisubrs
mov
jae
test
lods
into
andl
push
xor
push
test
shrl
mov
pop
hlt
call
inc
imull
and
cwtl
xor
jle
sahf
mov
sarl
stos
movsb
out
addr16
out
push
jbe
and
add
add
mov
lcall
mov
add
lcall
xor
pop
push
les
mov
mov
sbb
pop
fidivs
subb
nop
jecxz
add
adc
outsl
stc
push
xchg
clc
and
outsb
lods
lods
sub
mov
les
mov
add
jge
cmp
testb
lock
dec
mov
ror
in
xchg
loope
daa
movsl
aaa
dec
cltd
cmp
icebp
out
rcr
pop
mov
xchg
lcall
lods
iret
push
jmp
je
cmp
mov
mulb
mov
sub
fwait
negb
mov
aaa
cmpb
inc
cmp
pop
jne
jne
fdivl
adc
inc
pop
mov
cwtl
cmp
or
and
and
xchg
hlt
popa
insb
ss
or
mov
lods
in
int3
sbb
sahf
sub
mov
or
movsl
adc
fdivl
push
adc
mov
out
jae
pop
icebp
mov
mov
dec
jo
xchg
mov
mov
jmp
mov
jecxz
lret
test
js
cli
fildll
and
add
lock
sahf
nop
dec
js
out
add
and
lea
mov
add
pop
xchg
adc
popf
inc
xchg
lock
mov
scas
outsl
out
inc
jmp
loopne
icebp
je
outsb
pop
and
arpl
popa
shl
aam
xor
out
lcall
sbb
and
shrb
sbb
loop
std
push
mov
sahf
inc
mov
mov
mov
addb
test
cmpsb
pop
shr
mov
pop
inc
adc
push
rcr
movsl
jg
les
fimull
sub
out
or
pop
pop
xchg
nop
jecxz
cltd
imul
incb
mov
flds
xchg
and
cmpsb
movsb
lods
frndint
out
mov
and
pop
jp
loop
test
out
sub
sub
vcvtss2sd
repnz
jae
aas
sub
or
mov
jmp
lret
movsl
in
popa
aad
stos
test
add
mov
data16
cmp
add
stc
dec
gs
xchg
xchg
rcr
xchg
cmp
jne
jo
push
es
gs
and
nop
rolb
rcrl
or
mov
jo
std
mov
rclb
lock
dec
cs
jo
and
out
xchg
dec
test
cmc
inc
xchg
leave
mov
lods
sbb
inc
std
sarb
ljmp
popa
pop
xchg
xor
dec
lcall
pop
dec
jne
flds
sar
inc
ret
lock
pusha
into
out
lods
xor
or
pop
inc
inc
sbb
and
lret
rcrb
or
in
lahf
in
nop
mov
and
ffreep
test
and
sbb
xor
fcomps
and
pushf
push
adc
jo
stc
pop
data16
in
fsubp
pusha
les
dec
in
cmc
push
imul
mov
jp
and
inc
mov
add
xchg
and
cmpsb
pop
jns
push
mov
ffreep
pushf
frstor
ja
leave
idiv
xorl
test
sbb
xchg
xor
mov
aam
push
stc
mov
rcl
sub
mov
jp
lods
xchg
cltd
aaa
and
xor
pop
hlt
mov
jmp
out
mov
lahf
sbb
pop
shll
pop
incb
sbb
rolb
out
mov
jb
pop
dec
sbb
fmuls
mov
clc
adc
jnp
shld
add
mov
cmpl
insb
or
mov
lock
and
ljmp
lds
xchg
pop
lea
out
addr16
mov
fcoml
pop
test
stc
nop
sub
inc
ret
mov
hlt
stos
fwait
jmp
push
jbe
fsubs
mov
cmpsl
mov
ret
iret
xor
inc
add
insb
into
and
fnstcw
jle
and
dec
adc
push
cli
aaa
sbb
mov
inc
leave
cmp
std
lcall
clc
jnp
pop
bnd
pop
lcall
and
shlb
jbe
nop
repz
lock
repnz
pop
sub
scas
shlb
ds
shll
aam
mov
mov
jnp
xchg
xchg
mov
ja
aaa
inc
adc
lock
daa
repz
mov
int3
sub
dec
fcmovb
jbe
add
gs
push
enter
gs
into
push
push
sbb
enter
pop
cs
nop
cmp
sub
lret
or
insb
push
fisubrs
jmp
push
clc
pushf
add
xlat
pop
jbe
or
sbb
aad
lods
sub
test
xchg
dec
jge
push
lds
pop
cmpsl
repnz
xchg
in
and
xchg
mov
xor
mov
sarl
arpl
adc
xor
test
jle
cltd
imul
mov
mov
imul
lods
mov
pop
dec
stos
rcrb
sbb
stc
outsl
repz
sarb
mov
jmp
int
jnp
hlt
jns
pop
cmp
aad
cmpsl
jne
push
les
dec
into
xor
push
mov
xor
mov
test
nop
cwtl
adc
test
add
test
dec
shrb
enter
test
lret
cmp
nop
push
push
cmp
iret
nop
xor
adc
repnz
push
inc
addl
lret
cli
mov
outsb
cmp
mov
cmc
push
in
push
js
lret
mov
or
fidivs
mov
scas
scas
push
cltd
lea
in
push
aam
fcoms
gs
pop
cmp
fs
push
xchg
sbb
lcall
outsb
add
mov
xchg
loop
loop
pop
enter
push
mov
mov
cmp
fcoms
loop
scas
jno
shl
ret
ss
and
addl
or
dec
gs
mov
adc
push
add
jne
mov
xchg
and
xchg
jne
jl
jp
jl
sub
mov
adc
ds
push
add
aaa
lahf
xchg
ret
mov
mov
mov
test
ja
dec
fs
sbb
xchg
mov
add
xor
aas
mov
and
cmpsb
loope
xchg
add
jp
cmpsl
sahf
pop
loope
sub
int
scas
jmp
fwait
jge
xor
adc
out
xchg
popa
xchg
stc
pop
lock
add
push
pushf
lods
jg
inc
in
xor
mov
and
sti
out
add
jmp
notb
loop
les
call
mov
dec
dec
cmpsl
loope
xor
test
dec
xor
sbb
sub
loope
jne
mov
xchg
push
push
hlt
mov
push
adcb
andb
or
sbb
inc
adc
sbb
std
push
aam
mov
mov
orl
mov
outsl
add
pushf
rcr
xor
cltd
add
cli
or
dec
clc
fwait
cmp
mov
outsl
ret
mov
rcl
sub
sarl
push
add
ret
lods
call
outsl
xor
mov
xor
pushf
rcll
xchg
inc
mov
push
mov
mov
rcrb
jns
xor
jae
dec
dec
push
sub
arpl
mov
cmp
test
mov
rolb
pop
sbb
sahf
push
cs
push
push
mov
repz
lea
push
fmull
jnp
adc
rcl
xchg
xchg
jp
sbb
rorl
mov
xchg
sbb
mov
xchg
insl
sbb
in
loop
mov
add
scas
test
pop
out
lret
fcomps
dec
sbb
cmp
inc
mov
pop
push
hlt
icebp
cmpsl
mov
mov
mov
out
int3
insb
ljmp
outsb
adc
scas
cmp
mov
imul
pop
orl
imul
xor
mov
push
movsl
adcl
cmp
loop
pusha
push
cmp
js
inc
mov
xor
cmp
add
movsb
mov
addr16
jbe
xchg
push
mov
stos
mov
pop
mov
ret
inc
mov
dec
sbb
pusha
pop
inc
inc
iret
xchg
inc
cmp
movsb
sbb
in
push
dec
xor
lahf
jp
lds
iret
push
adc
lock
fwait
sbb
je
jmp
add
or
in
out
xchg
xchg
push
pusha
repz
cli
cmc
sahf
shlb
mov
cli
cld
cmp
rcrl
jp
or
loope
and
fisttps
pop
mov
fsubr
pop
ror
sub
fisubrl
jecxz
adc
test
jae
loopne
dec
xor
andb
mov
xlat
xor
lock
std
jle
inc
in
mov
enter
imul
cmp
push
lods
inc
sub
ja
jl
lds
jnp
pop
dec
push
xchg
test
imul
aas
shl
mov
ja
sbb
mov
xchg
pushf
adc
xchg
or
inc
test
shr
cmp
test
jp
xchg
mov
icebp
aam
push
ficoms
dec
pushf
iret
lods
in
pop
inc
xchg
jg
test
in
fs
fdivr
scas
arpl
sti
lret
mov
sub
add
jl
push
pop
dec
cmp
push
pop
movsl
cwtl
inc
jae
or
push
mov
clc
adc
flds
mov
icebp
bound
cwtl
test
les
ds
adc
stos
icebp
mov
out
jb
stc
sbb
cmpsl
insl
xchg
pop
sahf
pop
aad
xchg
or
mov
dec
sarl
stos
adc
push
lahf
pop
outsb
stos
fstpt
add
xor
out
adc
push
lahf
xor
sbb
xchg
shrl
mov
sbb
inc
pop
outsl
mov
jo
pop
xor
push
subl
push
dec
pop
hlt
or
rol
jl
stos
xor
loopne
and
sub
rclb
push
xchg
jl
pop
int3
pop
lret
inc
mov
xchg
xchg
shlb
jg
jmp
and
jmp
rcrl
loope
push
push
cmp
push
adc
adc
mov
ret
idiv
add
mov
mov
std
dec
hlt
xchg
aas
loope
in
imul
mov
and
cmc
sbb
aas
push
mov
inc
int
xchg
lods
pop
sbb
loope
xchg
je
in
jp
pop
shlb
ret
or
lock
mov
sti
xor
add
and
stos
pop
mov
fnsave
stos
fiadds
dec
test
mul
fists
ljmp
pop
jns
icebp
inc
ja
stos
fstp
lcall
sub
fcmovu
out
sbb
ret
imul
pop
mov
dec
mov
std
inc
mov
cmp
xchg
bound
inc
and
add
pop
pop
repnz
push
scas
or
out
nop
adc
cwtl
cs
leave
mov
out
movsb
xor
loopne
test
es
cmpsl
and
adc
cs
pop
cmp
lret
xchg
add
mov
cmp
xchg
arpl
jle
mov
pop
pop
dec
rorb
ror
addb
dec
jae
stc
jmp
jb
ds
push
mov
into
daa
pop
lea
dec
mov
push
int3
cld
sbb
movsb
sarl
movsl
loope
jle,pn
jbe
and
negb
test
xor
add
mov
adc
inc
sbb
mov
pop
mov
jbe
cmp
mov
mov
imul
xor
jmp
inc
mov
inc
pop
cmp
icebp
testl
or
insl
inc
out
lahf
in
lret
jecxz
call
dec
in
lea
out
testl
add
xchg
aad
mov
xlat
fcoml
ret
ficoml
fadds
popf
outsb
loope
and
bound
cmp
cmp
idivb
jecxz
in
stos
push
xor
movsb
sub
xchg
jbe
out
mov
mov
jg
rclb
and
sbb
xlat
out
jmp
les
rcrl
inc
sub
xchg
incl
dec
xchg
xlat
test
sbb
push
push
int
jbe
icebp
fisubl
mov
pop
adc
mov
mov
das
jbe
jle
orb
aas
clc
xor
cmc
jo
scas
mov
out
jmp
adc
daa
pop
sti
stos
jp
sbb
push
in
sub
push
sub
xor
fbstp
push
cmp
cmc
adc
dec
push
adc
push
adc
out
cmpsl
or
sbb
scas
xchg
adc
in
mov
mov
jbe
sbb
add
stc
sar
movsb
out
push
inc
pop
aam
pop
outsb
ret
mov
mov
or
xor
aad
jns
dec
and
hlt
cmp
orl
xchg
adc
jno
arpl
fiaddl
fstl
ljmp
movsb
ret
pop
pop
in
push
mov
popf
pop
shr
cld
pop
mov
xchg
dec
inc
ja
or
xchg
mov
imul
dec
xchg
shll
subb
mov
xor
xchg
inc
mov
icebp
fldenv
jo
adc
add
aaa
ljmp
add
sub
mov
mov
nop
hlt
rclb
mov
xchg
jl
cwtl
enter
lea
xchg
mov
call
jmp
sbb
or
insb
pusha
pop
cltd
cmpsl
jmp
pop
and
sar
jbe
xor
mov
lcall
add
pop
mov
mov
iret
xchg
jbe
sbb
ljmp
das
mov
lods
xor
xchg
push
data16
lcall
mov
push
adcl
xchg
adc
mov
sub
xchg
xor
sahf
rclb
inc
xchg
daa
push
adc
xor
data16
test
into
movsb
test
in
ret
fldenv
mov
jnp
ds
out
push
ja
inc
loop
pop
or
stmxcsr
fwait
bound
mov
pop
es
fdivr
mov
push
cmp
jmp
loop
xor
and
mov
mov
mov
lahf
leave
sbb
ret
xchg
repz
pusha
jne
jb
je
pushf
clc
jmp
daa
repz
enter
mov
mov
push
adc
xlat
jmp
cltd
push
jl
test
sub
push
pop
inc
cmc
and
adc
or
loope
dec
cli
sub
cmp
xlat
rorl
lret
push
sbb
mov
into
cmp
into
mov
mov
jnp
int
ds
dec
rclb
jb
pop
jmp
mov
ret
int3
mov
inc
xor
dec
outsl
pop
inc
daa
cmp
pop
dec
xor
push
inc
push
pop
and
push
movsl
push
push
nop
inc
movsl
push
jne
fistl
jb
cmpsb
and
addr16
jecxz
aam
test
push
lods
adc
arpl
div
xchg
pop
xor
fisubl
pop
cmp
mov
repnz
mov
add
sub
dec
jne
jge
mov
fdivrl
loop
adc
mov
xorb
adc
aad
mov
loopne
adc
jp
mov
sub
and
lea
lea
lret
cli
inc
insb
xchg
int3
fisttpll
jmp
mov
lcall
push
sbb
add
sub
es
pop
adc
cli
jmp
and
sti
movsb
and
jecxz
stc
test
mov
cmp
xlat
jne
sbb
repz
xchg
pop
loop
test
inc
pushf
lods
rcl
push
cmc
cmp
sbb
in
scas
mov
mov
test
mov
lcall
push
lods
cmc
mov
jl
add
popf
in
push
push
and
and
sbb
and
mov
out
dec
dec
sub
in
and
insl
enter
pop
lods
inc
pop
in
sub
arpl
push
rolb
int3
inc
bound
test
sahf
dec
pop
mov
mov
adc
loope
mov
pushf
fiaddl
lret
gs
mov
jmp
mov
mov
fs
nop
int3
ss
push
popf
mov
out
push
pushf
in
inc
cmp
outsl
aas
mov
cmpsb
loop
inc
cmp
outsb
mov
insb
pop
std
je
mov
mov
mov
pop
and
xchg
stos
and
dec
popa
xchg
pop
push
fidivl
jb
aas
int
or
xchg
outsb
inc
mov
repnz
adc
jle
mov
push
mov
adc
push
push
xchg
jbe
hlt
xchg
lret
and
les
insb
dec
das
adc
int3
leave
push
pop
imul
sbbb
sahf
adc
repz
cmp
mov
or
lret
mov
cmp
dec
xchg
sahf
sti
push
lock
iret
pop
ja
xor
rol
out
loop
out
mov
cltd
dec
sub
icebp
cltd
and
push
mov
rcl
out
cmpsl
clc
int3
insl
sahf
push
and
shll
dec
inc
sbb
xchg
arpl
sub
jno
and
dec
push
call
addb
leave
xchg
pop
stos
incl
mov
je
stc
inc
sbb
jne
and
cmpsl
fcompl
mov
push
mov
cmc
and
mov
imul
jg
jl
xchg
sbb
push
xchg
xchg
add
sarl
add
sar
cltd
xor
dec
enter
adc
dec
xchg
pop
xor
fxch
in
insb
or
push
je
push
scas
fisubrs
subb
jg
leave
xchg
insb
xchg
pop
andl
mov
sbb
mov
aaa
je
loopne
insl
call
sub
es
insb
cld
adc
push
out
ds
ret
add
dec
out
sbb
outsl
daa
mov
notb
or
push
std
nop
mov
jp
jmp
sub
sub
stc
test
xor
pop
popl
push
inc
xchg
inc
push
ds
fs
es
xchg
push
scas
fsub
stos
clc
sbbl
or
adc
imul
ss
pop
jp
pop
push
ret
sub
mov
cmpl
mov
sub
out
jb
mov
push
shll
mov
jg
bound
mov
cmp
jne
mov
mov
mov
mov
lods
leave
mov
repz
or
popa
fstpt
dec
xor
add
inc
int3
jno
stc
nop
pop
call
test
rolb
pop
divl
fiaddl
test
fistps
cld
xlat
and
xor
xor
clc
add
outsl
inc
inc
in
test
enter
mov
in
jns
pop
inc
inc
jecxz
mov
int
or
cs
xor
rcr
mov
push
aas
mov
jo
mov
sub
cli
outsl
in
call
sub
adc
mov
push
cmpsb
dec
in
sub
inc
cmp
sub
dec
popa
push
inc
shll
dec
adcl
mov
adc
xchg
lock
neg
out
push
cmpl
fcmovb
jmp
nop
push
out
sub
mov
movsb
sbb
into
je
outsl
idivl
dec
test
scas
mov
test
es
bswap
cmpb
pop
pop
sub
mov
cmc
pop
adc
pop
cwtl
or
xchg
add
lock
cltd
fwait
add
mov
je
jecxz
xchg
mov
lret
sahf
xor
xor
push
ret
push
and
lods
fildll
cli
aad
shlb
pop
add
ja
fsubrs
stos
repz
ss
mov
fwait
cli
xlat
es
aam
pop
sets
fdiv
into
push
push
fisubl
mov
pop
in
xchg
inc
call
adc
mov
mov
dec
ja
mov
add
dec
sbb
dec
scas
push
rol
pop
ret
mov
test
cmc
hlt
mov
inc
sub
adcl
aam
loopne
fiaddl
movsl
sbb
jae
cmp
and
lds
outsl
stos
mov
rolb
mov
pop
daa
cmp
fistpll
out
lcall
clc
aam
pop
xchg
pop
sarl
aad
roll
pause
sbb
add
xchg
xchg
insb
aam
push
sub
out
js
or
cmp
insl
push
jmp
scas
daa
sbb
ret
aad
sbb
mov
or
les
fcmovnb
clc
test
sbb
pop
xor
gs
sbb
push
xor
push
jle
pop
mov
dec
cmpsl
cmp
pop
push
ljmp
jns
mov
int
sahf
dec
jb
fcomi
and
imul
pop
xor
sub
pop
cmp
jo
mov
pop
shll
in
push
adc
inc
aas
push
xor
xchg
adc
adcb
adc
pop
stc
mov
test
push
cmp
jle
or
jno
aaa
out
cmpsb
cmp
aad
clc
cmp
push
in
repz
jmp
push
data16
stos
outsl
pop
shll
sar
jge
cmp
xor
jnp
pusha
mov
ret
dec
outsb
or
daa
mov
popf
mov
cmp
repz
push
add
mov
leave
jns
jb
xor
xchg
test
cmp
jo
mov
adc
imul
mov
jne
dec
jb
inc
xchg
lock
inc
mov
aaa
pop
gs
loope
adc
add
cltd
aad
mov
and
mov
dec
ds
mov
je
dec
mov
and
mov
ss
xchg
rolb
daa
mov
cmc
mov
jmp
push
xchg
mov
in
mov
mov
std
mov
xor
test
ror
mov
pop
out
dec
cmpsl
negb
mov
mov
xchg
xor
and
add
or
insb
cwtl
jno
jle
cltd
inc
pop
xor
push
mov
in
xchg
cs
add
sbb
push
add
or
push
into
imul
test
pop
inc
roll
add
fwait
xor
aam
pop
xchg
mov
into
gs
mov
add
loopne
push
jbe
mov
inc
ss
lods
nop
adc
sub
lcall
xchg
iret
out
xchg
fldlg2
jmp
lcall
out
clc
mov
inc
xchg
and
add
std
out
mov
cli
test
shrb
adc
fisttps
iret
push
pop
or
xor
sbb
sti
loope
addr16
jle
pop
dec
gs
js
jne
inc
cmp
fldenv
fs
icebp
mov
or
cmpsl
jg
lret
add
pop
mov
dec
push
fcmovb
cmc
mov
or
jno
mov
inc
and
lahf
mov
inc
lret
sbb
jg
hlt
jge
pop
pop
idivb
sub
cmp
outsb
mov
inc
inc
xor
dec
mov
rcr
jae
imul
adc
xchg
adc
adc
push
sbb
pop
shll
loopne
ljmp
xchg
imul
cmpsl
daa
popf
jne
je
jp
push
inc
adc
xor
cs
jnp
fnsave
faddl
push
xchg
mov
repz
cmp
sbb
inc
jge
add
cmpsb
pop
mov
xchg
push
push
daa
dec
out
cs
inc
dec
or
sbb
xor
arpl
cwtl
sub
xlat
aaa
add
divl
scas
ja
xchg
inc
shlb
sbb
ja
adc
and
pop
hlt
iret
lret
pop
jle
cmpsl
cmc
imull
dec
ds
scas
jns
scas
pop
jb
test
fs
pushf
add
mov
lods
and
jecxz
inc
movsb
and
push
insb
out
dec
fadd
int
repz
cli
sub
jecxz
push
nop
add
fs
lods
insl
stc
aad
lea
mov
xor
outsl
int3
outsl
cmp
cs
roll
jge
mov
xchg
or
sub
mov
lods
jle
jnp
in
mov
mov
out
inc
adc
or
stos
dec
cmpsl
int3
sub
dec
je
out
sub
test
jg
push
jg
or
imul
jbe
int3
push
pop
cmpsl
lea
sahf
mov
jbe
and
jo
xor
mov
cmp
cmp
jae
mov
out
sbb
mulb
cmc
push
int
adc
repz
xchg
lcall
cwtl
add
rcrl
jl
mov
add
sub
mov
stc
and
mov
inc
int
sbb
dec
jmp
lret
pop
repz
or
test
add
or
lret
test
or
mov
xchg
pop
movsb
dec
jbe
push
xchg
cmp
adc
push
jo
jecxz
cltd
cmp
in
out
shl
push
dec
stos
cmp
ljmp
jne
cmp
cwtl
cld
adc
imul
sub
stos
xchg
addr16
pusha
inc
pop
std
in
inc
js
mov
xchg
subps
cmpxchg
inc
xor
inc
loope
hlt
bound
inc
mov
dec
add
out
cmpsb
mov
dec
outsl
mov
adc
mov
test
int3
push
ret
out
ss
mov
cmp
mov
aad
xchg
adc
fldt
push
gs
add
cmp
pushf
insb
insl
mov
lret
jle
outsb
add
loopne
pushf
popa
out
push
inc
cld
movsb
mov
xor
cld
and
js
hlt
dec
mov
push
pop
pop
pusha
sahf
inc
pop
sbb
test
imul
das
jle
jae
or
div
stos
cmp
push
mov
jp
stc
popf
popl
mov
mov
cld
add
jno
mov
cmp
push
ror
cwtl
mov
xchg
adc
arpl
lret
nop
and
data16
add
ret
pop
clc
cli
xlat
jl
mov
das
mov
outsl
movb
rcrb
push
scas
pusha
sub
jb
cmp
sub
and
mov
xchg
cwtl
lods
in
loopne
or
shll
push
std
fldcw
mov
jbe
xor
mov
and
sub
xor
cmpsl
pop
rclb
insb
scas
frstor
shrl
aam
xchg
int3
sbb
popl
fs
sub
out
fs
pusha
mov
fcomps
push
ljmp
loop
push
ds
push
icebp
cmp
mov
ja
sub
test
xchg
imul
pop
xor
pop
or
and
mov
mov
mov
push
mov
ja
daa
lcall
and
xchg
outsl
inc
xor
adc
fsubs
sub
sbb
push
cmp
mov
jbe
push
add
xor
adc
adc
inc
mov
cltd
inc
andl
scas
dec
and
rcr
ret
loope
negb
pop
bound
inc
sahf
js
mov
lcall
sbb
inc
lret
mov
pushf
in
nop
cmpb
ss
xor
js
cmc
bound
cmpsb
aad
xchg
ds
push
scas
mov
pop
mov
or
pushf
push
cli
dec
ret
fwait
popa
ficoml
aad
mov
sarb
cmp
scas
orb
test
fwait
and
mov
popa
fistpll
inc
pop
add
pop
dec
inc
xor
mov
dec
xor
cltd
stc
pop
movsl
inc
int3
push
push
mov
mov
pushf
call
cld
mov
jne
pop
or
or
scas
arpl
xchg
shlb
rcrl
push
mov
jns
or
xchg
decb
xchg
sub
daa
push
inc
fildll
add
sbb
jecxz
dec
and
loopne
adcb
cld
dec
test
and
or
ss
jmp
mov
mov
jecxz
and
mov
in
xchg
shl
pop
sbb
push
fnstsw
add
mov
loope
jg
movsl
xchg
sub
and
jns
fwait
mov
or
scas
or
cltd
mov
loop
xor
es
cmp
loop
insb
push
sub
jns
jle
sub
call
aam
xor
aam
or
adcl
pushf
dec
hlt
fiadds
xchg
popa
or
ficomps
xor
dec
xor
or
sbb
mov
inc
aad
iret
movl
pop
add
fnstenv
hlt
inc
mov
icebp
inc
imul
mov
or
arpl
mov
fildll
cltd
or
sbb
sar
xchg
jl
cli
and
mov
gs
or
adc
lahf
testb
jecxz
cld
clc
cmp
mov
adc
pop
test
and
inc
push
sub
push
outsl
test
sbb
mov
insl
gs
mov
aam
mov
mov
mov
lret
inc
sub
jbe
cmp
cltd
add
and
outsb
sub
jmp
fwait
in
xlat
fcomip
cs
inc
jle
add
xchg
je
lcall
xchg
jp
orl
lea
leave
mov
outsl
cmp
jg
mov
dec
lahf
insb
ret
adc
push
fnsave
mov
gs
aad
dec
divl
mov
ficompl
pop
test
cmp
gs
push
repz
js
repz
xchg
outsb
sbb
lret
aam
jmp
jo
xchg
int
add
fcmove
pop
jne
insb
xor
test
xchg
jae
in
insl
adc
cmp
inc
sub
jno
or
outsl
adc
adc
cli
into
mulb
dec
movsl
fsubp
adc
sub
xchg
call
repnz
in
mov
xchg
pop
outsl
or
lock
cmp
imul
jp
or
ds
cmp
mov
add
leave
sub
push
insl
int
mulb
rcll
sbb
bound
insb
movsl
xchg
mulps
pushf
inc
out
daa
aaa
cwtl
lea
sahf
jmp
sbb
cmp
xor
cs
inc
jb
mov
sbbb
addr16
lods
jb
ret
mov
mov
or
gs
call
andl
jge
mov
mov
jnp
stos
xor
jge
pop
pusha
sub
test
jae
push
add
mov
xchg
xchg
fucomp
stos
fcoml
push
mov
push
cmp
nop
notb
push
jge
dec
inc
pop
pop
inc
stc
add
test
mov
fnsave
xor
ret
es
jp
repz
adc
pop
cmp
jns
fistpll
and
push
pusha
cmp
into
mov
repz
rclb
dec
aam
int
lcall
ljmp
hlt
imul
gs
push
jo
xlat
pushf
mov
xchg
dec
jmp
leave
inc
jo
cmp
rorb
stc
push
nop
xor
fnstcw
cmp
int3
mov
call
cmp
bound
call
or
adc
enter
and
or
and
pop
xlat
movsb
dec
inc
std
in
pop
sub
adc
pop
repz
fldenv
dec
jg
mov
xchg
push
lods
out
lods
inc
mov
mov
push
sub
push
mov
loopne
add
jmp
das
pop
mov
adc
clc
shrl
cmpsl
ljmp
and
push
cmp
out
into
sub
xor
pop
xor
test
xchg
dec
shlb
sbb
mov
mov
mov
lods
add
addps
mov
pop
sahf
rep
popa
lods
or
add
gs
in
dec
fdivr
sbb
bound
and
mov
rcll
sub
hlt
jno
xchg
mov
sarb
test
lahf
cmpsl
in
scas
popa
aam
sbbl
lds
and
cli
pop
mov
xor
bound
mov
test
jle
push
pop
inc
cmpsl
add
mov
iret
out
or
xchg
sbb
mov
push
sbb
clc
cmpsl
outsl
mov
outsb
js
repnz
std
xchg
sub
call
mov
push
je
loopne
test
pop
xor
cmp
mov
shll
pand
mov
sbb
inc
inc
mov
jno
xor
mov
cwtl
push
scas
push
push
in
out
inc
mov
xchg
mov
xlat
scas
inc
mov
out
in
xchg
aam
mov
scas
xor
cmp
mov
inc
cmp
int
xor
xlat
sbb
out
stos
inc
into
test
push
pop
ret
push
pop
adc
sub
scas
cmpsl
sbb
push
rorb
insb
dec
loope
je
orb
aad
sar
jl
js
mov
call
mov
pop
std
xor
dec
testl
je
movsl
inc
cltd
loope
adc
insl
push
out
daa
mov
sahf
pop
pop
andb
add
scas
or
movsb
shrl
sbb
xchg
xchg
jb
mov
mov
xchg
jmp
cmpsb
add
add
rorb
add
int3
scas
leave
dec
repz
mov
hlt
xchg
inc
mov
or
out
stos
push
cmp
into
push
fildll
push
cmp
adc
or
nop
outsb
and
data16
inc
outsl
jbe
pop
push
add
out
nop
repnz
pusha
push
mov
in
dec
mov
push
in
push
inc
movsb
xchg
out
jnp
test
add
xor
mov
sbb
pushf
push
rcr
pop
imul
in
xor
push
mov
xorl
mov
inc
jae
pusha
repz
or
sahf
cld
mov
stos
adc
sbb
cmp
mov
dec
repnz
fcmovb
pop
hlt
cmpsl
sbb
pop
xor
mov
in
adc
cmp
xchg
mov
dec
rorl
imul
mov
mov
data16
mov
stc
leave
int3
mov
push
xchg
nop
fs
repnz
push
imul
xor
inc
push
lods
scas
cmp
mov
lahf
xchg
dec
rclb
test
adc
add
xchg
sbb
aas
addr16
jecxz
ret
lea
mov
push
sbb
push
mov
xchg
inc
mov
out
daa
movsl
scas
in
push
in
pop
mov
or
das
rcrb
mov
call
add
outsl
and
sub
out
aad
push
lret
sbb
fdivl
push
mov
dec
lods
push
push
jo
aad
loopne
out
adc
mov
in
mov
jle
pop
cmp
mov
icebp
movsb
lret
push
jnp
pop
daa
xchg
imull
xchg
push
xchg
call
push
les
add
incl
pop
rcl
sbb
sub
bound
daa
mov
in
cmp
dec
pop
iret
pusha
push
data16
popa
int
js
push
push
jmp
stos
fsubrs
sbb
cli
xor
push
xchg
and
mov
test
ror
sbb
out
les
testb
rcr
sbb
je
mov
xchg
movsb
xchg
loop
and
pop
adc
push
add
daa
adc
scas
out
push
jns
aas
xchg
dec
adc
push
and
lret
in
rorl
push
stos
test
mov
outsb
lcall
sti
jl
adc
test
aas
jo
dec
subl
shll
xor
lods
sbbb
cwtl
test
shlb
add
inc
les
icebp
jl
loopne
movsl
out
cmp
sbb
jo
xor
call
xor
sbbl
aaa
int3
mov
imul
lret
imul
adc
mov
add
out
dec
popf
leave
pop
jge
aam
pop
repnz
jne
dec
mov
insl
inc
in
sub
xor
push
fdivs
lcall
xchg
sub
adc
fidivs
pop
pushf
mov
fsubrl
inc
mov
push
aad
xchg
jge
mov
clc
jno
outsb
and
xchg
push
aaa
pop
imul
inc
shl
lcall
sub
cmpb
ret
adc
and
std
int3
psrlw
icebp
cmp
mov
in
xor
pop
clc
xor
mov
sub
es
sbb
mov
xchg
test
sub
cld
sahf
mov
test
ss
fwait
sbb
testl
cs
out
out
scas
jno
push
mov
out
xor
sub
mov
inc
pop
inc
push
inc
adc
imul
and
push
add
cmpsb
insl
adc
mov
mov
popa
test
xchg
or
pop
popa
push
xor
mov
test
in
sub
mulb
nop
inc
mov
fistpll
or
mov
adc
pop
push
lods
mov
fcoml
ret
adc
lret
jne
jo
mov
in
lahf
fildll
pop
ret
inc
xor
pop
outsb
fisttpl
clc
pusha
mov
icebp
xchg
push
mov
pop
pop
inc
dec
lods
push
dec
jo
mov
jne
cmp
pop
add
mov
jbe
aaa
outsb
ss
pop
lret
or
and
push
add
stos
stc
push
test
dec
push
jb
aaa
push
sbb
xchg
ds
xchg
out
xlat
mov
and
sbb
or
call
out
add
andl
les
int
es
aaa
add
je
rcl
add
test
push
ja
icebp
sub
mov
inc
add
sti
ss
cmpsl
cltd
mov
roll
out
xor
jae
push
xchg
rorb
loopne
jo
jecxz,pt
ret
stos
ja
jno
insb
add
cmc
insb
icebp
rcll
mov
lock
xor
in
andl
sub
mov
aam
adc
push
jns
fucomp
jge
mov
in
ja
in
cltd
xchg
out
mov
cmp
add
adc
jb
mov
xlat
and
sbb
cmpsb
clc
xlat
je
imul
xchg
adc
mov
pop
pop
push
cld
push
sbb
ja
leave
arpl
rorl
fiadds
xchg
bound
popf
arpl
test
shlb
addb
ficomps
cmc
add
lock
sub
xchg
push
lret
mov
add
lds
sahf
add
pop
fisttpll
pop
add
xlat
and
dec
inc
mov
lahf
and
arpl
sahf
mov
xor
cmp
xor
scas
rorb
out
or
add
stos
add
lret
and
fbld
push
cld
xchg
in
mov
dec
sbb
lahf
mov
push
sarb
mov
loop
fmull
lock
roll
fsubrl
jno
xor
lods
adc
rcl
stos
mov
adc
nop
adc
adc
adc
pop
imul
lcall
subl
xor
popf
jb
mov
dec
repnz
arpl
sarb
xchg
test
bound
stc
and
sub
dec
stos
push
lds
les
xor
decl
pop
fiaddl
xchg
test
std
outsl
scas
incb
pop
aaa
fs
mov
and
notl
pop
lcall
pop
mov
xor
sbb
cwtl
ja
addb
shll
lods
int3
xchg
mov
dec
dec
cmp
jg
cwtl
jle
leave
lcall
pusha
or
jge
inc
cli
and
pop
jne
sbb
mov
cwtl
or
sub
lds
in
nop
dec
call
sub
cmp
js
mov
sub
int3
xor
in
pop
and
pop
arpl
inc
mov
adc
je
pop
out
rorb
cld
jne
xor
push
cmpsl
into
pop
jge
in
mov
or
js
sahf
adc
fdivr
mov
stos
addb
nop
stos
cld
fmuls
data16
hlt
mov
pop
dec
dec
clc
outsb
iret
xchg
aam
cmp
dec
add
jo
mov
push
es
inc
mov
repz
es
dec
icebp
loope
dec
xlat
out
jno
nop
andb
sbb
add
int
pop
test
popa
pop
insl
push
mov
popa
jmp
lock
ljmp
dec
je
popf
cmp
pop
jmp
ljmp
inc
nop
pop
add
sub
call
gs
aam
loopne
pop
fwait
mov
vrsqrtps
ret
repz
ret
and
and
insl
fsubrs
xchg
jne
mov
inc
jle
jp
jnp
xor
out
mov
stos
mov
adcl
andl
mov
dec
xchg
mov
inc
push
enter
push
rolb
dec
jnp
es
aaa
shll
sub
sub
sbb
jecxz
sahf
in
test
pop
push
and
add
scas
jp
dec
adc
adc
cmp
fsub
jp
pop
scas
mov
or
mov
push
fsubs
push
or
adc
lcall
xorb
pop
cmp
scas
xlat
xchg
test
aam
adc
test
pop
lods
pop
sbb
test
shrl
push
test
mov
pop
incl
mov
xchg
jae
or
adc
push
or
std
mov
xorb
pushf
push
pusha
jle
xor
mov
sbb
jl
je
sbb
xor
xchg
jno
xchg
xlat
cmp
jl
push
jge
xchg
sub
rcrb
or
mov
adc
add
repz
mov
jmp
test
sub
sahf
jmp
ret
out
fsubl
push
int3
jge
pop
es
jge
xchg
jo
cmc
mov
incb
adc
fbld
ss
gs
scas
xchg
fsubl
push
inc
outsb
dec
andl
xor
mov
divb
sbb
xchg
out
fsubs
lret
mov
daa
pusha
in
enter
push
mov
jb
ret
cmp
das
push
fimuls
in
inc
gs
add
pop
xor
filds
sbbb
into
mov
inc
pop
push
aad
fxch
rclb
jbe
xor
sbb
xchg
jne
mov
push
lcall
pop
nop
lret
ficoml
or
fdivr
std
call
cmc
push
nop
shll
in
das
cmp
pop
incl
int
and
scas
inc
pop
pop
dec
std
inc
rcr
xlat
bound
adc
pop
imul
sub
jecxz
add
rep
shlb
ret
int
lret
lcall
cmc
inc
roll
andl
ret
and
testl
shlb
add
push
outsl
popa
dec
push
cmp
fimuls
mov
lret
mov
sarl
pop
sbb
out
cmp
dec
jmp
loop
xchg
sbbl
sbb
hlt
sti
adc
mov
jo
pushf
test
cld
lea
or
push
cmp
daa
fmull
adc
faddl
imul
sub
mov
add
out
xor
inc
push
inc
push
dec
pop
mov
mov
aad
jb
fwait
adc
cmpsb
lahf
movsl
add
mov
pushf
jg
xor
dec
jnp
mov
repnz
cmp
pushf
pop
clc
dec
and
jbe
test
fnstsw
or
xchg
or
ss
fmul
stos
jns
cmp
mov
sbb
in
orb
das
push
outsb
sti
cmp
mov
fwait
in
loop
imul
dec
hlt
add
gs
lret
int
dec
notb
scas
xor
lea
stc
jg
ret
out
and
imul
mov
mov
inc
lock
scas
out
xor
rclb
push
sahf
test
push
stos
loopne
mov
mov
push
arpl
inc
lea
mov
xor
aad
add
jl
push
popf
mov
mov
jns
or
enter
jmp
xchg
outsl
jb
lods
push
dec
cli
jmp
into
push
ror
cmp
in
mov
stos
shll
leave
jnp
adc
add
nop
int3
xchg
sub
mov
out
add
pop
lods
rcrl
mov
push
mov
xchg
push
lods
test
or
push
push
or
frndint
or
jl
adc
jae
xchg
cmpsl
and
xchg
bound
js
xor
cmovno
adc
loope
or
mov
mov
mov
test
nop
xlat
pushf
adcl
cltd
xchg
sbb
clc
std
fwait
push
sub
mov
mov
adc
ss
xchg
in
int
lcall
mov
cmp
push
sub
inc
add
test
or
pop
loop
sbb
in
sarb
dec
lret
mov
ret
in
lcall
repz
cld
inc
mov
movsl
cwtl
mov
mov
iret
call
mov
cmp
cmp
imul
aaa
popf
mov
push
aas
jne
fnstenv
sub
inc
sbb
jmp
dec
popf
int
jmp
xorb
adc
cmpsb
jl
popf
aas
cs
adcb
int
lcall
or
or
sub
dec
bound
adc
pushf
sbb
cmpsb
xchg
push
jp
cs
pop
outsl
jnp
fbstp
sub
out
xlat
loop
xor
or
adc
xchg
ret
adc
fistpl
daa
dec
xor
push
push
ljmp
mov
pop
std
mov
xor
sbb
sub
insl
scas
lcall
pushf
push
push
mov
in
int3
dec
inc
lds
std
mov
jmp
pop
mov
mov
scas
test
pop
or
mov
aad
cwtl
push
mov
xchg
out
sub
fstpl
adc
roll
movsl
repnz
shrb
enter
nop
cmp
stos
pop
sbb
mov
push
mov
xor
popf
xor
ja
out
stos
loopne
jo
sub
je
and
dec
mov
cs
push
std
loope
or
dec
xor
outsl
inc
adc
cld
arpl
sbb
push
push
jnp
push
in
dec
jae
mov
out
es
push
movsb
in
cld
pop
sub
pop
dec
cmp
or
ljmp
inc
xchg
sub
xor
in
mov
push
mov
push
rolb
jmp
mov
push
mov
dec
jmp
dec
inc
bound
push
outsb
notl
repnz
jne
push
das
imul
lret
pushf
and
ljmp
jp
sub
adc
adc
and
xorb
mov
add
mov
inc
aam
xlat
imul
daa
jg
adc
sbb
in
sahf
outsb
insl
pusha
pop
aaa
cmp
adc
ds
pop
out
test
adc
inc
rcll
shlb
mov
in
mov
xchg
call
add
adc
std
jno
ljmp
ja
ja
pop
mov
sahf
out
add
addr16
movsb
mov
mov
jnp
or
out
cmp
jp
fdivrp
hlt
cmp
mov
pop
push
jo
xorl
clc
gs
push
fcoms
xor
pop
in
xlat
fists
mov
inc
mov
lret
mov
xor
mov
arpl
or
cmp
scas
movsl
or
popf
inc
fisttps
jmp
push
adc
mov
xchg
xchg
xor
test
adc
jle
outsb
jmp
js
and
add
sub
cwtl
stos
dec
adc
or
loop
ficoms
mov
out
mov
push
nop
or
xor
sbb
jp
jecxz
pop
add
push
inc
adc
pushf
xchg
out
ret
aam
cmp
test
xchg
ret
icebp
jmp
aas
arpl
mov
dec
mov
fsubs
in
iret
aad
pop
mov
xchg
clc
xchg
in
dec
ficoml
repnz
sub
or
mov
int
cwtl
pop
popa
popf
push
pop
mov
repnz
shr
push
jnp
pop
bound
stos
xchg
out
lret
mov
out
out
dec
mov
icebp
mov
and
mov
dec
icebp
sbb
out
imul
add
stc
paddusw
xor
fwait
inc
jl
cmp
add
loope
movsb
ds
pop
fwait
movsb
bnd
clc
or
dec
or
cmp
mov
or
push
and
ds
push
pop
or
ret
fnstcw
test
push
sbb
jl
iret
and
imul
insl
imul
pop
dec
inc
and
ja
add
cwtl
cmp
in
leave
insb
adcb
lock
jo
pop
inc
aaa
lea
sub
rclb
push
xchg
cmp
aad
mov
xchg
loopne
or
jmp
mov
sti
xor
mov
rclb
inc
and
ljmp
loope
xor
sub
pop
cmpl
cmpb
or
adc
in
shlb
testb
and
dec
mov
mov
addr16
and
movsb
out
and
adc
out
jnp
push
sbb
pop
sub
fldl
popf
stos
sbb
test
pop
ss
ljmp
jecxz
push
jge
cmp
fwait
out
movsl
inc
sbb
jmp
push
push
ss
push
stc
xor
aaa
xorl
inc
dec
rcl
cmp
ret
xlat
lcall
popa
out
sarb
icebp
adc
pop
insb
jle
mov
out
push
les
dec
jmp
and
jg
in
aas
out
xor
stos
xchg
and
aad
adc
sbb
or
jge
push
push
xchg
dec
enter
dec
stos
jns
sub
mov
movl
xor
or
jns
push
test
movsl
outsl
sub
jmp
inc
dec
fildl
enter
incl
push
lret
push
mov
or
ds
popf
popa
movsl
neg
leave
add
push
cmp
mov
xchg
mov
shlb
lcall
push
add
or
std
mov
ret
pop
jecxz
addr16
mov
in
and
push
sbb
adc
adc
loope
out
mov
and
call
loopne
imul
push
idivl
cwtl
mov
bound
mov
mov
or
rolb
sub
and
ljmp
mov
aam
cmp
imul
add
lods
mov
popf
sub
mov
inc
scas
mov
mov
add
adc
push
movsb
sti
ffreep
dec
xchg
cmpsb
popf
jg
cs
pop
stos
stos
enter
arpl
xchg
mov
fs
add
mov
test
aas
movsb
pushf
dec
lahf
push
cltd
dec
subl
xor
cmp
jg
nop
xchg
mov
mov
jb
sbb
jbe
xor
call
add
mov
aas
in
orl
out
jo
fiaddl
ret
and
cmp
shl
jbe
enter
popf
xor
and
xchg
mov
cmp
loop
cwtl
rcl
insl
ss
or
out
fwait
test
and
cmp
push
mov
dec
adc
outsb
pop
out
push
sub
test
ss
in
or
inc
jno
jge
int
adc
ret
sub
jl
rclb
pop
test
jecxz
adc
test
mov
dec
es
dec
ret
jae
loop
test
fwait
mov
mov
hlt
lds
pushf
imul
iret
loop
xchg
sbb
xor
insl
add
es
mov
cmpsl
mov
or
pop
and
out
adc
lock
imul
cmp
loopne
roll
or
pop
addl
fisubrl
cmpb
orl
mov
push
adc
orb
pop
cmp
pushf
and
jae
push
dec
dec
mov
jmp
pop
clc
outsl
js
lcall
push
or
sbb
sti
clc
and
in
sbb
fisttpl
negb
dec
push
loope
push
cmp
icebp
aas
in
fs
dec
aaa
adc
jae
mov
pop
pop
or
cmp
and
jb
and
inc
dec
push
dec
cmp
aam
cmpsl
popa
cmp
nop
pop
pop
dec
push
cmpsb
pop
in
cmpb
sbb
pop
and
adc
mov
push
test
jecxz
int
std
rcll
mov
pop
jno
pop
sub
pusha
daa
xorl
jecxz
inc
int3
jge
bound
xchg
imul
gs
insl
leave
mov
sub
jae
pop
addl
pop
mov
cmp
mov
pop
outsl
adc
pop
arpl
sbb
lock
fdivrl
sub
insl
into
addr16
sub
loope
fmul
or
shrl
add
cmpsl
and
adc
lcall
xchg
movsb
arpl
jmp
pop
and
sub
push
loope
out
sbb
mov
clc
xor
sub
dec
mov
xchg
sub
adc
push
insl
jmp
adc
jnp
cmpsb
mov
push
sti
or
cmp
mov
loop
imul
rcr
mov
loope
adc
and
nop
add
adc
add
pop
nop
add
scas
jle
loop
push
iret
ljmp
in
scas
cmp
in
xchg
inc
dec
stc
or
ljmp
xchg
adc
adc
call
cmpsb
inc
adc
adc
cmpsl
and
pop
les
adc
stos
shlb
testl
pop
jle
aam
jp
xor
frstor
aaa
addb
jno
jae
cld
add
adc
dec
or
mov
jp
and
movsb
jg
lahf
or
ljmp
js
dec
inc
je
adc
cs
out
repnz
icebp
and
mov
mov
rol
aam
fucomi
xchg
addr16
pop
inc
sbb
sbb
rcr
push
insb
sbbb
rclb
rcrb
test
shll
imul
mov
mov
mov
fwait
pop
gs
sub
subb
fcmovne
ret
fs
aam
cmc
in
xchg
pop
mov
data16
lods
lret
in
pop
xor
jo
pop
dec
push
and
xchg
mov
dec
jns
sbb
scas
inc
pushw
push
pop
inc
cld
mov
div
inc
cmp
pop
ljmp
mov
pop
iret
in
inc
jo
jp
xor
imul
xchg
std
jmp
test
je
xor
xchg
cmp
dec
and
dec
les
mov
push
mov
mov
jb
mov
stc
push
inc
mov
test
pop
pushw
fstps
push
jns
je
pop
ret
mov
fldcw
dec
aam
movsb
sbb
filds
add
iret
adc
stc
push
sub
dec
lock
cmp
jmp
lds
sub
adc
pop
shrl
push
pop
lds
sti
dec
jmp
mov
and
adc
and
outsl
popa
pop
lcall
push
or
lea
adc
jo
pop
xlat
icebp
inc
push
ret
hlt
dec
fwait
jno
xor
mov
movl
filds
xchg
xchg
xor
add
cwtl
pushf
subl
sbb
fwait
imull
popf
mov
scas
inc
cld
jge
subl
jl
lea
les
gs
pushf
rcrl
mov
fstps
imul
out
xor
pop
clc
xor
fwait
jbe
nop
xor
pop
mov
cli
shlb
imul
insb
mov
xor
lea
cmpsl
cmp
loopne
mov
cwtl
pop
mov
xor
sub
pop
jae
in
out
xchg
dec
xor
es
xchg
xor
xchg
test
inc
sahf
rcrb
in
rcl
add
jne
cmp
filds
jge
addb
nop
sti
loope
out
pop
ds
pop
in
dec
inc
pop
dec
push
or
stc
pop
and
shll
pop
cmc
sti
mov
xor
inc
sbb
jecxz
push
xlat
shlb
dec
adc
push
loop
xchg
jmp
jb
sub
jp
imul
in
cltd
shrb
insb
lods
mov
adc
jne
mov
inc
push
stos
dec
inc
push
loopne
insl
and
xor
hlt
test
inc
mov
jmp
sbb
test
stos
adc
xchg
dec
lret
jae
lock
sub
fistps
aaa
adc
pop
pop
movsb
ret
push
aam
pop
cld
xchg
sub
xor
dec
cmpsl
aad
jo
in
in
cmp
cmp
call
inc
xchg
pop
mov
cmpsb
push
mov
imul
jns
sbb
orb
sub
std
pusha
dec
clc
push
mov
roll
cmp
out
pop
mov
pop
sub
imul
inc
xor
sbb
and
ret
and
cltd
jmp
cs
ret
xor
mov
test
jecxz
ja
scas
lock
mov
inc
xor
loopne
adc
or
ret
mov
fbstp
ret
add
pop
movsb
cmp
shrb
mov
outsl
cwtl
inc
pop
jnp
push
cli
inc
icebp
insb
mov
mov
mov
jmp
stc
pop
jecxz
mov
inc
mov
aad
pop
dec
rorl
inc
aas
stc
nopl
and
es
cmp
jle
insb
fisubrl
jae
mov
out
mov
daa
mov
popa
jnp
mov
mov
mov
inc
mov
cmc
xchg
mov
ss
pop
fistpl
into
add
jp
push
push
popf
das
push
or
js
or
or
es
clc
sub
stc
add
cmp
jns
orl
mov
pop
mov
test
lahf
addr16
xor
sti
in
mov
dec
inc
adc
cmp
mov
sti
fcomps
or
ret
pop
push
and
inc
mov
sub
or
push
aas
stos
cs
and
mov
iret
sub
je
jl
or
and
add
aaa
add
push
xor
dec
push
jle
daa
popf
ss
sbb
mov
mov
adc
jno
shll
scas
pop
xor
push
pushf
repnz
jae
cmc
in
sbb
push
sub
lods
xor
push
insl
pop
frndint
add
mov
mov
cld
xor
mov
out
xor
cmp
scas
adc
mov
mov
cmp
xchg
aad
or
pop
test
or
sarb
test
sbb
scas
jne
rcr
mov
dec
cmp
mov
icebp
popa
xchg
xor
sti
jns
xor
cmc
mov
and
mov
cmpsb
scas
push
in
into
dec
data16
out
lea
pop
push
push
aas
adc
jno
loop
jne
es
fsubrl
andl
loopne
das
pop
jmp
lea
add
pop
mov
mov
shlb
call
je
sub
cwtl
into
inc
jecxz
cltd
in
inc
mov
jge
xor
popa
sbb
nop
or
or
and
fwait
int
popa
loope
push
jno
ljmp
out
dec
inc
rorl
out
pop
xor
xor
int3
mov
xchg
adc
sarl
cli
mov
mov
xorb
mov
mov
xchg
jae
iret
aaa
into
or
data16
out
data16
imul
cltd
out
sbb
and
test
test
xchg
insb
cmpsb
imul
cmp
mov
shll
gs
xor
adc
fisubl
xchg
andl
in
mov
dec
adc
add
roll
pusha
les
add
sti
jp
out
mov
clc
shll
add
repz
out
mov
daa
cli
insl
jle
push
inc
int
inc
add
jp
dec
mov
xlat
rorl
je
pusha
mov
outsl
xchg
mov
dec
or
mov
add
popf
lods
pusha
outsl
in
xchg
hlt
or
inc
sub
rolb
out
cld
popf
cmp
pop
out
lahf
adc
or
insl
outsb
add
outsb
bound
pop
xor
cmp
out
jmp
xor
test
data16
fildll
pop
mov
dec
xchg
pop
stos
jo
ror
rcrl
inc
mov
xchg
push
loope
adc
or
dec
icebp
pop
ljmp
and
cmpsb
roll
mov
orb
cmp
mov
imull
dec
je
mov
mov
mov
scas
sub
ficoms
aad
bound
pusha
push
mov
pop
mov
sbb
dec
dec
and
cwtl
leave
mov
rol
inc
push
movsl
push
jl
xchg
jbe
xchg
xchg
out
outsb
dec
repz
cmp
call
stos
iret
sbb
push
orb
bound
scas
ss
in
cmp
xchg
jb
mov
test
repnz
mov
mov
popf
loopne
scas
push
xchg
sbb
xchg
add
sbb
bound
inc
ss
pop
into
movsl
sarb
fwait
iret
popa
rcrb
xchg
adc
testb
jb
mov
pop
inc
stos
sbb
imul
and
mov
and
pop
gs
data16
repnz
xchg
xchg
fimuls
mov
sbbb
sbb
enter
aaa
ficompl
jo
out
cmpsl
cwtl
orl
xchg
jns
ret
push
sbb
sbb
fiadds
push
out
mov
sbb
dec
xchg
mov
xchg
add
xchg
push
adc
cmp
sbb
stos
enter
stos
out
lret
in
jbe
test
xor
pop
adcl
fadds
pop
jecxz
fists
test
out
add
adc
dec
daa
mov
xchg
mov
inc
call
aam
jb
daa
es
mov
inc
addb
aad
xchg
fwait
ret
sub
fstpt
loopne
test
inc
add
and
sahf
dec
in
divb
inc
mov
adc
push
sbb
sub
pop
and
pushf
fs
mov
mov
mov
mov
push
pop
das
cmp
jne
dec
xor
push
out
in
push
andl
cmp
lret
pusha
push
add
repz
jb
mov
jecxz
cmp
scas
cld
lods
mov
fs
lcall
push
mov
dec
pop
or
popa
push
arpl
or
xor
cmp
cmp
je
cmp
xor
in
rclb
mov
mov
pop
and
lea
mov
sti
mov
loopne
pusha
sub
movsl
pop
sahf
ret
pop
cmp
push
push
inc
lds
sub
mov
and
fiadds
xchg
add
pop
sarb
xchg
sub
insl
dec
faddl
inc
mov
lea
cmpsl
dec
fsts
hlt
lret
mov
jecxz
popf
add
pop
loope
rcr
jb
int
push
lock
and
add
aaa
xchg
jge
dec
hlt
nop
xor
popf
test
jns
dec
xor
mov
loopne
or
dec
jmp
push
push
push
rolb
pop
jo
out
xchg
fildll
mov
sbb
insb
outsl
jmp
nop
shlb
in
sbb
mov
xor
add
pop
mov
loopne
int
cwtl
cs
dec
je
arpl
rcrl
pop
mov
push
mov
ret
popa
dec
mov
mov
shrl
std
sub
imul
fwait
pop
in
add
pop
test
pop
rcll
dec
jmp
jns
andl
loop
fwait
sub
jb
in
add
push
push
or
daa
push
jne
jnp
adc
mov
inc
loope
and
or
test
pushl
mov
push
je
int
xor
mov
lahf
int
mov
loop
imul
adc
pop
gs
sti
jo
in
rorl
and
cwtl
sub
cs
push
fbld
xchg
adc
lcall
lods
lds
jae
jp
and
fistpll
fsubrl
mov
lods
jbe
mov
mov
xchg
aaa
into
push
adc
sbb
dec
push
sbb
inc
mov
dec
insb
mov
jne
or
dec
xchg
dec
enter
push
cmp
ja
movsb
lret
jo
scas
add
push
icebp
mov
sub
inc
pop
pushf
mov
cmp
mov
xchg
mov
outsb
sub
ljmp
ds
sti
sub
mov
filds
sub
movsb
test
jp
test
ds
xor
dec
rorl
jae
xchg
lods
ljmp
shrb
xor
mov
cmp
mov
std
insb
inc
xchg
adc
imul
xor
sub
aaa
xchg
xchg
loop
push
in
cwtl
pop
inc
xor
lret
lahf
test
shr
jecxz
xor
sahf
data16
jo
inc
add
sub
dec
mov
push
repz
loope
adc
je
call
mov
xor
rorb
fs
adc
mov
out
xchg
dec
sub
popa
lret
mov
jmp
imull
lret
lcall
add
int
jo
xchg
aaa
or
xor
fistpl
jecxz
sahf
pop
sbb
sub
inc
pop
ret
jl
jne
push
push
xor
push
fistps
xor
cmp
xor
dec
jne
lcall
push
cmp
mov
fistpll
loopne
test
push
js
mov
dec
jae
ret
dec
pop
lret
je
popa
sahf
ds
inc
bound
loopne
push
xchg
adc
int3
sub
ret
sbb
inc
mov
xor
imul
test
sti
mov
mov
in
fistpll
gs
pusha
test
iret
loope
cmp
ljmp
loopne
lcall
xor
jl
dec
ljmp
fsts
jbe
cmp
xor
jmp
mov
inc
mov
scas
es
or
pop
repnz
jbe
add
sub
test
ficompl
out
xchg
movsl
rclb
ss
jle
mov
dec
sub
ss
push
jb
std
jp
cmc
addr16
negl
cwtl
xchg
iret
stos
fiadds
out
add
mov
mov
testb
sbb
jmp
aaa
std
mov
je
out
jmp
push
movsl
mov
xchg
add
sbb
xor
and
es
out
push
movsb
mov
jb
dec
add
sbb
xchg
mov
sub
data16
bound
ret
inc
aas
out
mov
pop
push
pusha
subl
popa
stos
inc
and
and
inc
mov
lock
xchg
sbbb
jmp
fsubs
sbb
jmp
sub
repnz
fstl
push
ljmp
pop
mov
in
addb
dec
imul
testl
daa
xchg
mov
sbb
mov
sbb
fld
in
pushl
push
je
add
imul
and
cmp
add
xor
or
shlb
inc
in
ss
std
xchg
rorl
mov
aas
cli
push
enter
push
enter
pop
mov
outsl
or
stc
insl
and
xlat
mov
in
enter
es
das
push
cltd
shl
jb
ret
shrb
js
push
mov
mov
jmp
inc
div
sbb
clc
cmp
xchg
bound
jne
outsb
in
sub
popf
lods
fnstcw
push
add
add
push
add
pop
data16
loope
mov
dec
mov
fldenv
int3
int
fisubs
fs
orl
mov
push
add
pop
push
cmp
sub
or
mov
sub
movsl
or
dec
pop
and
insl
add
pop
dec
add
repnz
add
and
dec
lret
andb
and
push
and
sub
add
dec
xor
sbb
lea
fsubrs
xchg
sti
or
push
adc
push
adc
push
lahf
lea
iret
mul
adc
loop
sbb
xor
test
jmp
fucom
jp
popa
lods
fcompl
int3
jae
in
mov
movsl
adc
pop
fs
xor
push
push
sub
add
mov
fs
and
and
dec
sub
loope
sub
mov
nop
mov
pop
out
testl
inc
cwtl
dec
imul
leave
mov
mov
jne
add
pusha
std
cld
in
sarb
cwtl
or
mov
push
imul
arpl
xchg
icebp
ss
outsb
loop
xchg
jns
xchg
and
sbb
cmp
mov
cmp
push
aad
dec
and
aam
rcrb
mov
mov
jno
adc
pop
sbb
jae
jecxz
jge
lds
lahf
mov
test
xor
push
push
mov
sub
sti
xchg
fdivrl
stos
fdivs
leave
or
gs
dec
mov
enter
or
xor
xchg
or
ret
mov
cmp
cmp
jb
sbb
pop
push
mov
ss
push
pop
mov
cmp
and
push
xor
and
sbb
cmpsl
int3
ljmp
push
adc
lret
imul
int
and
hlt
call
mov
jge
mov
push
test
or
roll
lcall
cmp
cmc
pop
in
movsb
push
rcrl
lret
ss
test
rol
cmpsb
push
adc
sti
add
adc
or
stc
dec
lahf
int
sbb
jmp
push
sbb
xor
mov
inc
movsl
ja
js
js
inc
xor
and
mov
or
fnstenv
adc
dec
sub
jbe
shrl
ljmp
cmp
ret
adc
aam
mov
lea
mov
jg
xchg
adc
or
or
jg
xor
lock
cmp
imul
cmp
dec
fcoms
push
and
dec
push
cs
int3
push
jmp
sti
aas
test
and
scas
push
mov
imul
add
repnz
imul
cmp
nop
mov
mov
es
dec
addr16
shlb
cmp
loope
es
pop
cmpsb
sti
fadd
ja
lahf
mov
bound
lods
fadds
jnp
cmc
sbb
call
loope
fcmovnbe
sub
into
dec
or
pop
sti
mov
hlt
ss
sbb
enter
xchg
or
out
popf
push
jno
sbb
sub
cmc
sbb
mov
mov
faddl
movsl
mov
icebp
lods
push
mov
out
test
ficomps
jecxz
out
dec
mov
dec
lret
pop
mov
clc
xor
lds
mov
xchg
jbe
sub
push
inc
jne
mov
imul
lahf
stc
push
gs
test
inc
roll
aad
out
inc
adc
mov
leave
icebp
paddd
and
pop
push
inc
dec
sub
adc
xor
into
arpl
pop
test
cltd
pop
xlat
pop
push
leave
aam
out
push
jle
inc
lods
lcall
cmp
mov
clc
fisubs
sub
jl
mov
aas
loopne
lahf
inc
sbb
rcrl
lahf
fdiv
mov
in
xchg
push
shll
ret
in
pop
test
mov
scas
and
xchg
stos
push
fiaddl
sbb
repnz
pop
stos
pop
rclb
push
loopne
addr16
sbb
cli
mov
sahf
in
outsl
pop
cli
xor
repnz
jb
xchg
jb
imul
sub
stc
adc
pop
push
in
sub
ja
mov
dec
jnp
push
pushf
daa
in
ret
mov
jg
pop
mov
mov
insb
xchg
jg
or
icebp
xchg
outsb
mov
mov
jp
in
outsb
scas
aaa
cwtl
nop
adc
push
xchg
lock
inc
scas
cli
fcoms
pop
lods
xlat
dec
mov
sahf
repz
jb
stos
pop
cmp
scas
pop
mov
ljmp
rcl
je
mov
jae
test
ds
mov
add
bound
aas
sti
insb
add
arpl
pop
addr16
jge
pop
cmpsb
fucomp
insb
addb
lret
mov
add
arpl
aad
xor
mov
daa
lds
adc
outsb
scas
adc
pop
dec
and
ljmp
lds
lods
add
mov
ljmp
ljmp
pop
lods
xor
shll
ja
icebp
scas
orl
bound
pushf
dec
jg
push
inc
xor
add
ja
adc
loopne
mov
movsl
clc
mov
xchg
push
sbb
adc
icebp
dec
cld
xchg
js
cli
mov
mov
rclb
lods
inc
xor
stos
imul
cs
dec
aaa
mov
dec
mov
shlb
loop
add
je
ds
in
cltd
in
cld
lods
add
mov
lock
adc
in
jecxz
rclb
mov
dec
add
cltd
sub
xchg
and
rorl
jmp
add
mov
dec
cmpsl
out
test
inc
or
sbb
lds
dec
fmuls
out
repnz
mov
notb
loopne
xor
cltd
sbb
imulb
ja
pop
mov
jbe
mov
or
aam
shl
sub
icebp
lock
xchg
faddl
sub
in
cmp
jb
cmp
dec
sti
pop
pushf
test
lock
add
sahf
adc
xchg
das
jae
and
and
and
stos
sub
jge
or
insb
lret
pop
push
test
movsl
enter
repnz
sub
sbb
xchg
sub
and
inc
mov
xchg
and
pop
shrb
js
dec
inc
pusha
or
insl
sbb
jne
pushf
add
movsb
push
push
adc
jae
jge
jmp
ds
pop
scas
cltd
sti
push
xor
pop
sbb
cmp
sbbl
sarb
or
mov
dec
iret
popf
push
fstps
or
cmp
mov
gs
stos
push
stos
icebp
mov
call
mov
sub
sbb
ret
je
xchg
push
xchg
xor
pop
test
out
cmpb
adc
adc
jae
mov
stc
shr
dec
insb
ss
loopne
mov
mov
loopne
out
jae
scas
xchg
fisubrs
jmp
jno
sub
sub
sub
jo
mov
xor
sub
sub
bound
popa
jno
inc
or
ja
dec
incl
and
cwtl
ret
mov
jbe
and
imul
xor
test
or
push
add
dec
jmp
jecxz
xchg
mov
fisubl
stc
dec
cmp
pop
dec
sub
and
jp
dec
push
pop
nop
mov
dec
and
lods
adc
out
push
mov
data16
cmc
movsb
or
xchg
sbb
ja
popa
dec
cli
sub
shl
aad
cli
inc
into
shrl
sbb
mov
lret
mov
inc
dec
decb
push
xor
fwait
jns
notb
lods
dec
sti
push
mov
xchg
mov
stc
dec
or
fwait
clc
hlt
push
movsl
adc
xchg
outsb
lcall
jmp
dec
push
pusha
imul
adc
cld
ret
or
ds
dec
adc
cmpsb
push
mov
mov
sub
iret
mov
push
cmpl
xchg
sbb
les
push
jne
mov
insl
addb
push
mov
pop
cmp
sbb
dec
in
xchg
movsb
mov
sbb
out
cmp
add
aad
dec
negl
mov
add
push
aaa
in
maskmovq
subb
push
adc
jl
out
jle
cs
test
jbe
fcom
push
icebp
movsb
jns
jns
jmp
sahf
lret
sbb
xchg
xchg
addr16
xor
jno
test
cld
mov
cmpsl
pusha
mov
push
cmp
cmp
push
out
decb
and
cmp
jg
pushf
adcl
arpl
lods
addr16
mov
adc
test
sub
popa
aaa
pop
mov
loope
sbb
mov
es
repnz
sbb
xor
data16
in
int
stos
shlb
hlt
cmp
inc
and
stos
mov
dec
in
mov
xchg
hlt
xorl
jmp
mov
adc
add
xchg
aad
sub
out
jae
shlb
cwtl
fisubl
mov
xor
xchg
clc
clc
out
ret
out
xchg
pop
dec
push
or
pusha
test
add
adc
sbb
xchg
sbb
les
cwtl
subl
dec
stc
or
add
nop
loop
dec
xor
sub
and
rcrb
dec
jl
dec
enter
mov
movsl
fdivs
mov
mov
cmpb
mov
sub
outsb
daa
sbb
cs
and
xchg
sub
test
and
fwait
inc
and
add
xchg
mov
nop
xor
cmp
inc
adc
xchg
adc
jb
movb
outsb
leave
jno
sbb
sbb
lock
ror
cmp
inc
mov
xor
stos
and
jb
js
pushf
jp
and
shll
push
sub
test
aam
fistps
mov
mov
mov
test
fdivrl
xor
cltd
dec
std
ficoms
andl
insl
test
mov
mov
clc
fildll
icebp
xor
dec
imul
dec
test
imul
sub
mov
mov
fmull
sub
loopne
mov
dec
shll
scas
and
sub
daa
sub
outsl
mov
divb
mov
inc
mov
inc
das
mov
dec
psadbw
loope
sub
sbb
in
push
fstpl
cli
mov
lcall
xchg
mov
push
in
push
ret
sbb
inc
cmp
and
dec
leave
xlat
ret
jno
movsb
dec
jmp
cmpsb
mov
enter
nop
popf
xorb
repz
xor
adc
jmp
cmp
jo
inc
rcrb
mov
pop
jl
sub
dec
jecxz
dec
out
mov
sarb
idivl
mov
cmc
pop
rcrl
mov
aaa
push
subl
add
mov
in
rcrl
in
sub
xor
mov
int
pop
mov
stc
mov
adc
out
jmp
mov
add
pusha
cmp
sbb
sbb
lret
xlat
jl
add
int3
loope
pusha
add
xor
stos
xchg
aaa
shrb
loop
je
xchg
div
es
fisubrl
cmpl
adc
movsb
mov
jns
xor
into
push
ret
filds
cwtl
ret
ds
test
test
shl
pop
and
clc
insl
nop
stc
outsl
pop
xchg
dec
fsubrs
push
es
fldl
lock
mov
sbb
xchg
dec
lock
sti
mov
inc
arpl
in
mov
pop
pushf
pop
aam
mov
aas
imul
movsl
out
mov
clc
pusha
fists
push
xor
bound
cmc
mov
sub
add
mov
test
enter
or
cmovae
cmpsl
out
inc
pop
outsb
ja
xchg
sbb
stos
add
adc
std
rorl
stc
add
push
xchg
inc
sub
fstpl
mov
mov
es
in
fdivrl
les
mov
xchg
cmc
mov
dec
cmp
and
cmpb
dec
sub
repnz
xor
xor
rcll
imul
ficoms
pop
pop
jne
imul
dec
xor
mov
jae
repz
push
cs
int
cmp
nop
test
test
pop
into
push
popf
sub
mov
sbb
pop
adc
jae
cltd
retw
lahf
or
jno
je
pop
push
ret
xor
dec
rorb
lahf
xchg
jne
dec
mov
fidivl
repnz
push
mov
cmpsl
jp
setns
mov
adc
cmp
or
in
shll
xchg
mov
repnz
mov
and
cmp
cld
aad
mov
jl
cli
ljmp
leave
jb
jne
add
bound
or
test
rorl
jbe
mov
xor
cmpsl
and
ss
insb
pop
or
jmp
pop
push
jns
into
xorb
mov
jns
aam
inc
fdivrs
xor
cmp
and
xlat
loope
shll
and
mov
jae
outsl
cmc
jl
xchg
clc
movsl
push
into
pop
xor
inc
in
pop
pushf
scas
popf
lds
out
add
loop
mov
dec
daa
popf
xchg
jb
xor
mov
inc
pushf
dec
jns
pop
ret
stc
cwtl
mov
mov
cmpsl
jp
mov
popf
dec
icebp
adc
out
stos
subl
jmp
add
jbe
into
xchg
add
fisttpll
loopne
pop
shlb
xchg
fwait
xchg
dec
fidivrs
mov
dec
and
sbb
xor
scas
stos
int3
stos
fildll
pop
pop
jge
lret
jmp
popf
test
in
fsubrl
adc
test
add
outsl
mov
inc
pop
dec
cmp
notl
in
add
jp
mov
loop
fnsetpm(287
dec
dec
adc
mov
jns
push
dec
mov
mov
or
push
mov
cld
icebp
scas
scas
imul
mov
test
adc
jno
fwait
repnz
jecxz
les
movsb
xchg
ret
sahf
filds
enter
pop
int
jle
dec
je
or
mov
push
inc
add
sahf
cmpsl
or
jno
or
pop
cwtl
jb
gs
adc
xor
inc
adcl
movl
movsl
push
jle
mov
int
pushf
test
sub
jo
sbb
out
mov
js
xchg
pusha
and
sub
sub
add
xor
xor
dec
sbb
dec
cmp
scas
dec
xchg
sub
hlt
pop
into
push
push
cltd
mov
pop
dec
clc
mov
lock
xchg
repnz
outsl
sti
and
push
mov
and
cmp
pop
push
lret
xchg
ds
das
rcrl
cmc
inc
sub
inc
jbe
sub
sub
xor
aas
fnstsw
or
mov
push
push
jb
jg
xchg
movsl
sub
mov
mov
jbe
adc
sub
mov
fstl
push
or
popf
add
sub
int
cmpsb
xchg
pop
adc
or
jnp
lret
fisttpl
cs
andl
inc
sbb
js
aaa
push
adc
cmc
cmpsl
sub
dec
adc
or
in
inc
pop
adc
aam
cmpsb
stos
in
mov
int
cmp
mov
push
pop
mov
mov
out
cmpsb
jle
sbb
sbb
movsb
jne
loope
mov
jmp
mov
lea
sub
xor
inc
lcall
pop
lods
sub
pop
jno
or
mov
jae
and
cmc
mov
cltd
dec
inc
mov
icebp
jbe
mov
sti
movsl
cmp
xchg
mov
inc
loopne
xor
je
repz
cmp
fidivrs
arpl
aad
test
jl
fwait
sbb
inc
jns
lea
xor
cld
je
push
ja
test
dec
dec
lcall
icebp
xchg
in
jno
pop
push
in
das
stc
sbb
repz
inc
mov
pushf
fdivrp
arpl
leave
mov
lahf
test
push
mov
add
in
and
inc
inc
and
push
and
orb
in
adc
sbb
out
mov
and
fnsave
xor
daa
shl
mov
popa
lea
xchg
pop
sub
movsl
fsubr
pushl
pop
xchg
movsl
mov
add
out
lret
fisubrl
lods
aaa
dec
push
cwtl
scas
and
push
das
mov
nop
mov
xchg
adc
movl
clc
sarb
das
fimull
mov
rclb
stos
dec
adc
adc
and
imul
arpl
mov
inc
mov
cmp
mov
xchg
adc
adc
test
mov
mov
add
push
inc
mov
les
arpl
pop
cmp
in
sub
gs
mov
shlb
fstl
xchg
xchg
roll
cld
jo
shlb
add
addl
int3
mov
call
adc
imul
mov
out
dec
push
jecxz
add
sub
xchg
mov
pop
orl
popf
pop
mov
mov
xlat
mov
cmp
lret
test
and
or
stos
xchg
jne
add
aad
das
push
loope
jb
test
inc
rorl
out
ret
fidivs
in
shll
fdivs
addl
xchg
cli
dec
jl
call
es
dec
mov
cmp
inc
jno
pop
mov
jae
add
push
sti
inc
icebp
mov
xchg
cmp
mov
mov
or
add
mov
cmp
fwait
enter
sbb
cwtl
xchg
cmpsl
js
jg
add
sub
lods
xchg
xor
pop
inc
sbb
loope
test
int
or
pusha
mov
jo
fsub
movl
in
mov
repnz
pop
das
or
mov
shlb
push
cmp
mov
lds
mov
jl
xor
insl
jmp
fdivrl
and
mov
cltd
stos
call
push
pushf
movsb
stos
dec
pusha
pop
lods
icebp
dec
popa
xchg
jae
pop
jne
mov
jae
xor
inc
sub
xchg
adc
repz
loop
in
insl
cmpsl
pop
add
pop
andl
push
cmpb
hlt
dec
cmp
sub
fcoml
adcb
fwait
int3
add
and
int
jecxz
jo
jl
lods
xchg
imul
adc
lahf
xchg
push
add
cmp
inc
and
cmp
je
into
add
push
mov
xchg
xor
pop
dec
xor
out
cs
jg
push
jmp
testb
insl
push
jo
mov
ret
fisttpl
ja
popa
aaa
sub
stos
cmp
stc
xchg
mov
mov
mov
sub
insb
pop
hlt
sbb
or
je
mov
in
mov
bound
cmp
ljmp
loop
mov
lcall
ffreep
or
inc
scas
push
mov
ss
jmp
add
shlb
gs
fwait
jns
push
out
add
cmpsl
mov
cmp
sub
out
inc
cld
movsb
mov
mov
fs
mov
and
add
or
sub
fsubrp
imul
fs
push
sub
xchg
push
push
gs
repnz
mov
or
sub
pop
insl
sbb
jl,pt
jg
addb
loop
and
aam
dec
je
jae
ljmp
or
dec
out
pushf
push
int
scas
mov
flds
in
ljmp
push
addr16
ds
mov
ljmp
adc
inc
or
test
test
xchg
push
dec
adc
insb
lods
subb
mov
ljmp
sarb
and
mov
mov
xchg
pop
and
push
clc
dec
pop
in
mov
sbb
fimuls
lcall
jns
sbb
xchg
push
or
pusha
jl
fbld
in
mov
icebp
mov
mov
inc
pop
lock
push
out
lahf
mull
imul
fstpl
popa
loopne
lret
inc
push
sub
mov
out
shll
mov
ret
sbb
sti
push
stos
mov
add
sbb
xor
adcb
dec
jae
mov
test
push
popa
xor
je
dec
and
cld
fistl
mov
repz
std
xchg
je
loope
mov
xor
mov
jbe
mov
pop
cs
aas
add
ljmp
sti
out
or
sub
push
xorl
sbb
ss
pusha
and
popf
inc
loope
icebp
sub
imulb
inc
or
rorb
scas
ss
les
dec
scas
jbe
xor
popf
pusha
stc
das
inc
ds
mov
test
rcrb
loope
out
jp
sub
push
icebp
test
push
pop
sahf
movsb
sub
les
in
or
loop
mov
lods
test
es
incb
xchg
push
jle
cli
cmp
iret
jecxz
pop
push
psllw
rcrb
fdivrl
imul
popl
jmp
xchg
xor
lcall
and
adc
mov
sbb
jle
ljmp
cmp
test
repz
dec
arpl
stos
negb
and
dec
stos
sahf
adc
cmp
sub
xchg
in
iret
repnz
aas
xchg
movsl
sbb
stos
hlt
dec
lcall
sbb
mov
dec
ja
lods
jmp
mov
outsl
popf
bswap
sub
lahf
scas
leave
lret
dec
loop
mov
mov
push
fmulp
rorl
imul
lea
incl
movsl
fldt
mov
xchg
jbe
dec
inc
mov
fidivl
jb
enter
push
mov
call
pop
jp
inc
add
loop
inc
sub
jo
lock
adc
ret
movsb
call
test
pop
push
inc
imul
flds
cmp
sar
lret
pop
adc
xchg
out
repz
movsl
dec
mov
movsl
cmc
adc
repz
ficomps
dec
inc
std
ret
cli
pusha
ds
and
addr16
mov
popf
enter
lret
sbb
repz
push
inc
insl
test
mov
xor
and
ljmp
cmpsb
adc
adc
sbbl
dec
dec
cmp
add
add
addl
xor
mov
std
push
and
cmp
mov
loope
lds
loope
sbb
xchg
stos
xor
sbb
pop
sub
inc
lcall
lods
push
push
pop
jns
push
loopew
imul
and
cmp
xlat
aam
sbb
pop
into
std
fdivrp
out
leave
nop
aaa
orl
push
leave
sbb
mov
cmpb
out
pop
jnp
movsb
mov
xor
push
pop
lea
adc
es
jmp
xor
dec
je
push
xchg
aam
sbb
repnz
fisttpl
xchg
cmc
and
stos
and
adc
or
xor
xchg
lret
mov
aas
push
mov
imul
push
ja
fiadds
xorb
sbb
movsl
mull
and
std
push
jnp
add
psubd
xor
test
movsb
cmpsb
jle
inc
les
in
int
sub
jecxz
pop
hlt
scas
inc
push
imul
xor
sbb
jmp
cmovns
arpl
xchg
mov
inc
lret
jno
jo
ja
std
cmp
jle
xor
out
mov
flds
sbb
xchg
xchg
sub
cwtl
mov
in
cmpsl
jo
rclb
inc
sbb
sbb
clc
push
pop
add
nop
adc
fucomi
call
push
add
in
bound
mov
xor
orl
dec
mov
popf
inc
xor
loop
imul
pushf
dec
mov
or
or
into
mov
in
jmp
xor
mov
cli
scas
mov
outsl
or
push
cmp
insl
stc
addl
jecxz
jecxz
cmp
xchg
stc
pop
push
out
xor
fimuls
or
idiv
or
and
stc
test
xchg
mov
xchg
cmpsl
add
and
dec
fwait
jmp
adc
push
and
pop
lea
or
andb
iret
cmc
outsl
add
add
cmpsb
mov
dec
fimull
dec
push
insb
int3
xchg
fucomi
push
into
add
dec
or
stos
mov
lods
or
mov
jl
cmpsb
adc
add
jmp
sub
sbb
cmp
pushf
push
mov
sti
or
fsubs
pop
add
leave
aas
push
data16
mov
and
xor
xchg
xchg
adc
xchg
push
adc
jae
arpl
jecxz
adc
and
outsl
ret
xor
loop
ret
lds
and
fsts
cmp
mov
dec
gs
das
mov
push
mov
jb
fdivs
rol
or
scas
and
les
add
loop
xchg
xor
add
cmpsl
push
or
inc
aas
and
enter
add
sub
pop
sub
ds
mov
imul
icebp
lock
pop
icebp
imul
test
xchg
sti
xor
jo
test
jecxz
xchg
push
lods
mov
stos
pop
cld
pop
push
cmp
sub
ret
cmp
jne
xchg
jbe
cmc
push
mov
xlat
push
xchg
push
pop
jg
stos
cmpsl
stos
leave
filds
fincstp
call
shlb
mov
dec
mov
ja
test
xchg
lods
mov
fs
mov
jae
xchg
cmpsl
push
dec
fsubs
movsb
cmp
cltd
cmp
mov
insl
adcl
or
push
jge
cmp
jns
dec
subb
push
push
mov
pop
mov
xchg
into
in
adc
arpl
push
xor
imul
test
push
adc
pushf
arpl
lods
pop
inc
int3
sub
sbb
fdivl
mov
mov
fs
daa
sub
push
xor
ja
jno
push
out
iret
fstpl
sbb
push
dec
mov
pop
rclb
cs
xor
cs
fwait
lock
mov
adc
pop
mov
jg
pusha
je
insl
scas
adc
sbb
mov
sbb
xchg
mov
out
adc
sbb
and
push
xor
mov
inc
push
sar
cli
add
mov
mov
movsl
cltd
cmp
or
stc
aas
add
ja
sbb
lea
fwait
dec
cmp
lock
int3
in
fcomps
inc
dec
add
xchg
mov
sub
in
mov
inc
jb
adc
add
dec
mov
mov
jge
flds
mov
mov
xchg
test
dec
xor
xorb
pop
mov
js
sbb
andl
push
mov
outsl
insb
outsb
test
enter
adc
mov
and
subb
inc
cmpsb
lcall
in
test
iret
daa
sub
jmp
xchg
push
inc
and
pusha
jno
stos
mov
clc
out
mov
icebp
lock
fstpt
imul
lods
and
pop
pop
mov
push
jmp
or
ja
aam
pop
test
adc
out
pop
daa
and
lret
add
fs
aad
loopne
sbb
je
out
jge
aas
lea
test
dec
test
rcll
jp
jg
jne
lahf
inc
push
cmpsl
fimuls
mov
dec
jge
inc
push
das
push
aad
aaa
les
ds
je
fisttpll
sbb
inc
cli
pop
incb
sti
mov
jo
stos
insl
xlat
lret
std
mov
popa
and
hlt
jnp
xchg
add
push
sbb
xor
and
push
jnp
mov
sub
jecxz
stos
pop
shrb
xor
jg
outsl
sbb
fnstenv
loop
mov
cmpsl
lock
sub
fwait
dec
std
lahf
pushf
dec
call
xorl
arpl
push
cmp
mov
push
dec
sub
repnz
push
in
jb
mov
and
jns
lds
cmp
shrl
sbb
in
dec
push
push
sub
sbb
and
es
adc
aas
pop
mov
loope
jmp
sbb
mov
push
ret
and
enter
gs
push
das
mov
jno
or
mov
jnp
rolb
imul
aam
sarb
push
mov
pop
push
ja
arpl
mov
aas
push
jp
or
add
mov
dec
or
loope
pop
jecxz
out
outsl
out
pushl
push
mov
aaa
push
scas
scas
dec
mov
xchg
test
push
push
jnp
push
ret
in
test
sbb
in
sbb
push
cld
fcoml
sub
pop
dec
mov
ret
fidivl
les
popf
clc
mov
int3
repz
dec
insl
pop
jb
add
mov
into
pop
xor
jecxz
xchg
lock
bound
push
pushf
in
ss
mov
rcl
cwtl
xor
xchg
jns
movsb
jge
jo
xchg
jns
ret
sub
rorl
xchg
cmp
out
fwait
arpl
ja
push
or
fadd
inc
jo
xor
lcall
jmp
or
cltd
data16
adc
loopne
in
sub
inc
repz
adc
xor
aam
push
sbb
push
mov
in
add
lds
lods
nop
stos
pop
ds
lcall
cmp
adc
adcb
cmc
dec
jg
fcmovu
jno
add
pop
jp
xchg
cld
aaa
aas
sbb
aas
aad
fnstcw
xchg
fcompl
sub
mov
xor
pop
dec
inc
adc
add
cmp
dec
cld
cmp
cmp
mov
jg
pop
les
negl
xlat
icebp
incb
test
pop
aas
mov
lods
pushf
inc
mov
movsb
dec
jno
push
test
sti
push
mov
pop
push
jmp
imul
mov
testl
shlb
xor
jl
loop
pushf
jns
mov
aas
sub
inc
popf
lcall
push
sub
sub
or
flds
ret
inc
mov
adc
jecxz
push
jne
inc
and
arpl
rclb
sub
jg,pt
mov
jl
test
mov
jp
jno
sbb
push
movsb
add
mov
push
hlt
pop
inc
fdiv
or
aaa
loope
cs
push
lea
iret
dec
js
lahf
sbb
lret
imul
jbe
in
and
push
push
out
mov
mov
test
push
mov
out
mov
cmpl
dec
scas
sub
leave
lods
xchg
pop
and
sbb
jle
mov
add
out
pop
sbb
and
fisttpl
je
mov
lret
fwait
add
inc
mov
xor
mov
out
aad
insl
loopne
stc
mov
mov
call
rcrl
jbe
leave
xor
je
mov
xor
cwtl
lcall
rcl
js
mov
jns
insl
xor
and
icebp
and
test
dec
leave
lock
pop
mov
or
xor
int3
vmovupd
nop
lcall
mov
dec
xchg
xchg
adc
cmp
mov
inc
dec
sarl
aad
js
jp
inc
dec
inc
pop
out
popf
xor
push
or
sahf
orl
mov
outsb
adc
aad
sub
xchg
xchg
push
mov
mov
mov
loop
xor
sbb
add
push
push
jne
call
lret
adc
jbe
push
sub
movsb
mov
mov
arpl
or
mov
and
rcr
pop
dec
mov
dec
sbb
inc
pop
loop
dec
cmp
out
push
jmp
mov
xor
incl
sub
sub
pop
popa
push
mov
cltd
popa
xor
xchg
out
daa
popf
mov
jae
shl
or
mov
mov
mov
popf
insl
lock
lods
sahf
ret
inc
xor
ds
add
out
outsb
testb
shrl
sbb
push
ds
push
lock
sbb
insb
fiadds
xlat
dec
add
daa
jno
daa
into
leave
add
adc
dec
adc
enter
inc
xchg
sub
cld
sub
mov
lret
xor
jb
repz
and
cmp
dec
stc
pop
into
xlat
cwtl
in
aad
fdivs
incl
mov
pop
add
mov
dec
mov
dec
mov
je
rcl
and
cltd
lods
mov
in
je
data16
fnsave
ficoms
shlb
xchg
lret
out
inc
fnstenv
mov
mov
imul
push
out
sub
ljmp
sub
shrl
mov
and
sbbl
dec
xor
or
out
xchg
cmp
jne
dec
mov
shll
testl
mov
sub
cmp
scas
aam
pop
xchg
or
stc
in
dec
outsb
push
xchg
mov
test
scas
lcall
sbb
xchg
jbe
pop
les
in
add
push
das
sti
aam
xor
cmp
rcrl
mov
pop
dec
out
pop
sub
and
dec
popf
int3
xor
mov
sub
adc
fmull
add
mov
stos
insl
filds
mov
mov
mov
or
add
jo
lea
stos
imul
fbstp
decl
add
stc
sbb
push
out
jmp
adc
cmpsb
fdivrl
sub
cltd
int3
jae
mov
push
xchg
test
sub
pop
out
ret
stos
lods
out
fldcw
in
adc
fisubrl
lea
sti
aam
cmp
call
les
test
mov
jo
xor
pop
pop
push
push
rcl
and
icebp
jge
xchg
jns
mov
xchg
cmp
sti
jns
push
pop
inc
outsb
or
insb
lahf
in
sub
pusha
ss
sbb
jae
lahf
pop
mov
nop
jg
sbb
roll
cmc
pop
mov
dec
jmp
mov
lods
xchg
insl
hlt
andl
mov
cs
sbb
addr16
mov
pop
loop
and
hlt
js
cltd
xor
xchg
jmp
mov
hlt
repz
int
popa
icebp
adc
jmp
mov
mov
jae
mov
gs
mov
and
shlb
jle
jle
inc
cmp
cmp
lahf
ss
adc
jae
mov
mov
pop
add
xor
sar
xor
or
xor
popf
ds
clc
rcl
mov
ret
mov
adc
jb
and
push
push
mov
rolb
out
push
and
pop
sub
add
mov
adc
cmp
pushf
sub
dec
ss
dec
pop
cmp
js
dec
mov
es
mov
and
loop
shrb
dec
daa
inc
cmpl
push
inc
or
inc
xchg
clc
pusha
jge
scas
in
es
jge
iret
add
iret
jbe
fisubrs
adc
scas
sbb
lcall
imul
inc
mov
sbb
push
and
ja
pop
xor
jge
mov
fcomps
enter
sub
push
inc
jge
add
in
adc
and
xchg
pop
dec
jns
lock
lods
lods
mov
cmp
fs
sbb
test
push
shlb
inc
cmp
movsl
adc
or
inc
loop
or
and
and
aad
cmp
scas
fsubrs
adc
adc
xchg
insb
cltd
push
or
sbb
negl
stos
mov
and
push
js
lahf
xchg
pop
lds
push
icebp
push
popf
and
jle
shl
ljmp
or
inc
inc
lret
sbb
pushf
insb
mov
mov
imul
adc
ret
xchg
mov
insl
mov
or
xlat
sahf
sahf
push
lods
rorl
cmp
imul
cmpsl
jae
cmp
iret
add
imul
mov
mov
push
cmp
fld
inc
xlat
add
in
mov
jecxz
xor
or
dec
repz
mov
add
and
pop
add
mov
xor
clc
add
jbe
cmp
pop
sub
lret
jo
xor
push
bound
scas
jno
sub
sbb
sahf
js
mov
push
push
mov
jae
jne
scas
das
cmp
mulb
mov
jl
cmp
mov
addl
cld
dec
pop
xchg
xchg
xor
adc
cmp
fstpt
jge
sbb
push
lret
loop
dec
cmpsb
repnz
clc
add
fisubrl
jge
scas
loop
fwait
ret
imulb
mov
sbb
nop
inc
xchg
cmp
outsl
xor
decb
xlat
gs
sbbb
cmp
inc
push
xor
repnz
push
jo
and
loopne
mov
mov
enter
push
push
pop
dec
jmp
aas
sbb
jns
dec
icebp
lcall
push
imul
inc
mov
xchg
ja
inc
mov
dec
jp
jae
repnz
sub
arpl
mov
test
cmp
ljmp
and
test
cmp
jle
push
and
fs
mov
jb
cmp
sbbl
ds
push
mov
pop
ss
negb
jl
xchg
jle
mov
jg
lods
lret
and
dec
pop
add
popf
les
std
rcrl
movsb
sub
daa
iret
mov
lret
xchg
dec
jmp
mov
rclb
xchg
push
adcb
cmp
pushf
mov
push
out
stos
imul
xor
je
pmulhw
js
test
arpl
scas
pusha
lock
ret
pop
shr
loopne
mov
cltd
xor
sbb
xor
xchg
and
lret
pop
adc
repnz
sbb
jl
ss
pop
push
sub
dec
outsb
dec
and
jg
jmp
cmp
pop
dec
sub
mov
push
clc
imul
xchg
movsb
pop
lods
shr
xchg
mov
push
sbb
ret
sbb
out
and
loope
or
pop
icebp
xor
cmpsl
mov
clc
iret
pushf
xlat
xor
fisubrl
fsubrl
aaa
adc
jbe
sbb
das
lcall
out
pop
sub
jne
push
and
and
loope
les
xor
cmpsb
ja
popf
adcb
mov
fldenv
leave
imulb
and
pop
cmpsb
push
fsubrl
rclb
mov
add
and
test
pop
pop
movsb
rcrb
dec
call
xor
inc
lds
jb
push
and
mov
fisubrl
lret
push
movl
sub
aaa
sbb
sub
adc
repnz
dec
dec
mov
sbb
xor
xlat
lods
pop
pop
xchg
lahf
mov
out
or
call
aas
mov
shrl
adc
dec
movl
add
mov
mov
pop
or
mov
xlat
fnsave
mov
jns
sarb
fs
es
sbb
cmp
sbb
push
aaa
mov
cmp
out
push
scas
jmp
call
inc
xchg
lock
inc
lret
fcoml
adc
push
ja
push
lods
jl
jnp
inc
das
cmp
lahf
and
dec
repnz
addr16
mov
enter
inc
sub
loopne
inc
dec
shrl
lret
lret
imul
mov
sbb
sub
add
rcrb
sub
std
insl
pop
mov
pushl
xor
inc
int
loop
lcall
xchg
or
sbb
test
xor
les
dec
dec
adcl
inc
insl
dec
outsl
fucomi
in
test
ret
jg
imul
sbb
sub
test
jne,pt
jae
pop
sub
or
je
dec
xchg
push
sub
js
out
mov
add
lret
dec
dec
out
imul
leave
pop
jb
sbb
mov
loope
pop
mov
mov
ret
pushf
jp
push
jae
xor
cmp
fwait
bound
cmpsb
leave
sbb
dec
lea
dec
aas
or
sbb
icebp
inc
pop
or
imul
ds
fwait
loope
xchg
add
cwtl
dec
fwait
lods
mov
push
push
aad
inc
mov
mov
jnp
in
aam
sbb
sbb
das
jle
sub
add
mov
pusha
sbb
sbb
mov
pop
stos
jmp
pop
and
movsb
dec
cmc
jle
mov
das
push
loop
push
mov
ljmp
sahf
stc
or
adc
stos
negl
jbe
test
add
repz
into
mov
add
mov
insl
sbb
dec
jne
cltd
pop
call
cli
fldcw
jg
fiadds
rclb
and
mov
push
ja
xor
das
sub
icebp
cwtl
aad
jmp
xlat
out
dec
jge
xor
adc
int3
int
mov
jge
cmp
ret
aas
pop
mov
movsl
sbb
push
xor
aaa
mov
test
sub
leave
cs
ds
jmp
xor
ficoml
gs
xchg
out
mov
xor
std
inc
inc
push
jecxz
push
adc
sbb
mov
xchg
jne
loopne
jl
sub
push
jae
dec
jo
inc
icebp
ss
xorb
dec
mov
fwait
fwait
je
push
jge
iret
repz
sbb
push
jge
sahf
pop
into
pushf
cmp
cmp
sub
aaa
add
push
stos
stos
dec
add
cmp
adc
xchg
adc
dec
js
ret
bound
je
add
int3
lcall
sbb
fmuls
or
lahf
sbb
pop
movsb
fs
mov
adcb
adc
mov
xor
mov
xchg
xor
jp
xchg
mov
idiv
and
leave
inc
sti
mov
dec
in
sbb
cmp
inc
adc
fisttpll
inc
xor
shrb
hlt
jp
out
lock
in
imul
mov
out
or
fsubl
nop
mov
sarl
jnp
cmp
inc
add
add
add
shlb
mov
and
push
icebp
or
stc
orb
inc
fimull
rorl
mov
mov
inc
adc
cld
cmp
push
rcl
pop
out
cwtl
lods
dec
cmpsl
out
icebp
loopne
clc
xorb
sub
dec
mov
jmp
inc
dec
int3
add
xlat
mov
cmp
repnz
push
outsb
mov
scas
dec
mov
push
outsb
xchg
jl
pop
cmp
int3
push
cmp
fwait
mov
ss
fwait
sbb
mov
cmp
jg
es
dec
add
sbb
xchg
loope
jns
inc
pop
out
pop
mov
push
imul
mov
dec
xor
mov
test
and
scas
add
add
push
lods
mov
sub
and
sahf
outsb
jae
in
jne
xchg
fiadds
icebp
pop
dec
xchg
clc
mov
or
xchg
daa
adc
mov
hlt
mov
sbb
stos
sbb
push
inc
cmp
ds
mov
orl
popfw
add
and
jno
mov
push
daa
push
dec
jle
int
jb
inc
pop
mov
jae
cs
xchg
cmp
jmp
fcmovb
xchg
and
sub
pop
xchg
inc
jmp
pop
mov
pop
movb
mov
mov
push
and
ja
int3
icebp
std
fldt
or
nop
xchg
jns
dec
sahf
add
shl
mov
leave
clc
test
mov
inc
test
jg
or
ret
pusha
push
mov
insb
jle
enter
push
jecxz
or
sub
iret
sub
bound
dec
sbb
leave
jmp
cmp
lret
test
push
ret
dec
fstl
cmp
int
sarb
mov
xlat
jo,pt
stc
sub
leave
loope
lods
popf
dec
dec
sbb
cmp
int3
aad
lods
ret
loopne
lock
loope
mov
sbb
fwait
arpl
xor
and
adc
mov
jmp
or
jge
insb
push
jg
dec
clc
jo
push
inc
aas
and
lods
fbstp
dec
pop
mov
lahf
shll
jl
cmp
test
mov
in
lds
pop
cmpsl
fidivrl
aaa
imul
fisttps
mov
xchg
push
add
mov
mov
cmp
mov
pop
cld
stc
out
add
jecxz
pop
mov
push
je
loop
or
aas
mov
leave
aas
sbb
push
add
mull
inc
ljmp
inc
mov
xchg
jo
stos
mov
jbe
scas
daa
adc
imul
and
inc
fildll
xor
push
int
dec
push
pop
test
aaa
nop
cmc
jb
outsb
xor
add
dec
cmpsl
icebp
popa
xchg
jo
insb
ret
cwtl
pop
push
pushf
in
sub
in
cmpsl
fisubrl
cmc
sarl
test
mov
jp
sbb
fidivrl
xor
or
xchg
lret
adc
dec
cmp
fisttps
pushf
rcr
fwait
lock
sti
sbbb
loopne
and
mov
mov
movsb
sbb
rorl
mov
and
fsubrp
mov
and
int
in
and
xor
in
xchg
in
rcrl
mov
inc
repz
sbb
mov
fldcw
sub
sub
xor
cmp
and
xchg
add
xlat
or
cmp
and
fdivrs
jbe
or
cld
popf
xor
add
sub
cltd
push
sti
cmp
sub
inc
sbb
push
dec
sub
adc
mov
fdivrs
and
dec
cs
icebp
dec
test
cmp
cwtl
pop
push
iret
jo
sub
sbb
aas
stos
jmp
ja
or
roll
in
jmp
test
aam
pop
cltd
adc
fwait
inc
leave
clc
aas
repz
popf
sub
pop
scas
rolb
lret
aad
jmp
adc
stos
cld
fnsave
iret
fistps
dec
inc
test
into
imul
push
sub
mov
roll
push
in
out
inc
cmp
mov
cwtl
mov
jns
mov
mov
test
scas
push
or
and
stos
push
aas
mov
shlb
mov
ja
pusha
mov
jge
ss
inc
lahf
notb
cmpsl
repz
pop
or
fwait
xchg
scas
rorb
std
das
fldenv
rcl
mov
je
pop
imul
cli
shrb
adc
xor
lock
mov
pop
mov
push
cmc
shrb
bound
psrlw
push
sub
mov
popa
sti
or
imul
cmpsl
push
insl
js
aas
inc
fs
incl
mov
cs
out
movsb
shrl
inc
scas
sbb
mov
adc
and
cli
cmp
xor
iret
mov
mov
cmp
pop
movsb
jbe
or
pop
mov
jge
cli
std
xor
add
loop
mov
adcb
dec
mov
sbb
xchg
pop
lcall
loop
mov
cmpb
add
push
xor
stos
in
cli
clc
pop
pop
dec
mov
pushf
insb
adc
in
mov
sub
inc
fs
lret
mov
call
mov
jg
fs
div
jno
xor
out
nop
fbstp
cltd
push
outsb
inc
insb
cld
sub
and
sbb
mov
xchg
ds
out
aaa
nop
insl
bound
shl
aam
movsl
push
add
sbb
ret
sbb
lret
cltd
jg,pt
int3
mov
add
xor
cmp
mov
popa
push
pop
dec
cmp
adc
add
ja
jecxz
sbb
dec
loopne
repnz
test
mov
xchg
mov
push
call
mov
pop
pop
lods
fmul
ret
cwtl
cmp
mov
es
pop
rorl
test
sbb
dec
test
int3
pop
sub
push
mov
xchg
pushf
adc
adc
cmc
ror
outsl
data16
push
sbb
xchg
xor
gs
cmp
in
add
lods
dec
or
jno
mov
or
push
fwait
rorl
mov
in
popf
jno
int3
push
mov
inc
inc
mov
adc
inc
nop
add
inc
xchg
pop
fwait
adc
cmp
pop
pop
mov
bound
je
lods
dec
outsb
in
in
leave
test
gs
gs
nop
push
pop
es
popf
int3
add
cmc
mov
scas
scas
lods
dec
aas
or
mov
stc
in
lret
ds
mov
repz
out
sbbb
cmp
mov
mov
sub
dec
cmp
add
xor
enter
inc
jbe
mov
insb
mov
or
fs
in
pop
test
push
lret
jge
inc
shlb
int
in
push
ret
pop
bound
aad
mov
pop
jnp
and
loop
iret
pop
loopne
fwait
push
pop
xor
addb
std
mov
or
into
aam
loop
in
xor
ret
dec
or
sbb
xor
fsubl
adc
loope
dec
sbb
sub
inc
fistps
lea
out
int
test
rcl
enter
icebp
pop
in
jnp
push
aas
outsl
push
imul
testl
adc
inc
mov
fwait
ja
jmp
adc
das
sub
and
cs
xchg
and
mov
or
test
xchg
mov
adc
cmpsb
outsb
mov
mov
or
scas
lret
jb
adc
xchg
imull
fstpl
jecxz
sub
mov
jb
out
notl
sbb
mov
jge
pop
rclb
fwait
cmp
fisubl
and
and
mov
ficompl
and
std
rolb
xlat
jecxz
xor
les
ret
das
and
test
cmp
es
shll
adc
cli
dec
loopne
shrb
adc
and
push
shrb
cmp
fbstp
std
jae
xchg
js
xor
bound
xchg
xlat
xor
mov
mov
iret
shll
packuswb
aas
adc
enter
rcl
stos
sbb
jae
ljmp
loop
sub
and
repz
loopne
pop
mov
lds
and
xor
inc
pop
sbb
mov
pop
push
roll
sbb
jle
es
or
mov
and
out
cmc
dec
aaa
and
add
jnp
aas
jno
jbe
cli
test
and
out
js
cltd
andb
jnp
sbb
push
or
mov
dec
jns
in
repnz
cmp
andb
adc
dec
addr16
ror
jb
adc
pop
call
dec
dec
test
pop
out
mov
push
fistl
add
jmp
jae
and
mov
sbb
dec
aad
mov
cmpsb
in
inc
xchg
push
loop
ss
stos
ret
lds
lds
mov
fwait
inc
or
push
mov
ljmp
roll
mov
enter
gs
xor
sub
pop
pop
sti
push
pop
xchg
hlt
loop
fwait
mov
pop
add
jae
mov
test
repnz
add
cmp
xor
xor
sbb
pop
adc
add
pop
sub
xlat
or
jns,pt
push
cwtl
inc
dec
test
cmp
iret
mov
sub
rorb
testl
pop
out
xchg
xor
sub
dec
fnstenv
jl
or
stc
mov
lea
jl
dec
xor
ror
insb
enter
enter
cmpsb
cmc
mov
mov
and
cmp
inc
aad
mov
cmp
mov
adc
dec
pushf
test
pushf
adc
push
test
pusha
and
mov
aad
xchg
dec
dec
fstpl
cmp
es
pop
mov
arpl
and
in
jle
aaa
mov
test
xchg
out
push
jb
ljmp
inc
stc
or
or
in
pop
jb
ja
or
lods
lods
pop
push
cmp
dec
in
movsl
cmp
jne
mov
and
lds
push
pop
insl
and
popf
and
push
add
out
enter
loop
push
cmpsb
gs
pop
clc
push
cmp
pop
xchg
adc
pop
jl
mov
dec
mov
cltd
mov
push
mov
xor
js
jne
cmpsb
mov
xchg
jb
cmp
jp
sub
rcl
inc
adc
adc
mov
mov
push
and
loop
cs
sbbb
inc
pop
jecxz
jmp
cmc
shlb
jbe
ficoml
sbb
xor
and
xor
sbb
jno
xchg
mov
and
adc
ja
mov
nop
out
test
ljmp
jge
jbe
popf
mov
fs
fadds
adc
shrl
xchg
mov
mov
cmc
xchg
shll
inc
mov
xor
cmp
push
and
sub
pop
out
jb
scas
push
push
mov
outsb
push
dec
mov
mov
mov
mov
push
hlt
add
hlt
mov
push
sub
cmp
pushf
push
sub
adc
xchg
jmp
sub
pushl
cmp
aam
cmp
inc
adc
in
ljmp
mov
adc
push
fisttpll
into
sbb
sahf
mov
cltd
insb
cmc
fldl
int3
and
or
in
and
lret
mov
loop
push
cmpsb
movsl
scas
cli
sbb
jl
fwait
ljmp
dec
loope
int
enter
sbb
mov
cwtl
push
sahf
cltd
add
ss
daa
jg
mov
out
mov
mov
add
sub
cltd
and
sub
fists
jno
test
sub
movsl
stos
fadds
je
shlb
je
push
call
inc
movsl
test
dec
fdivrs
shlb
push
mov
mov
xor
jp
lds
outsb
fdiv
cmp
adc
fstps
pop
insl
imul
lret
cmc
xor
inc
ss
aas
sbbb
lods
sbb
cld
call
cwtl
dec
pop
pop
xchg
mov
mov
mov
cmp
in
push
shll
daa
push
stos
xor
test
and
ror
dec
enter
mov
lds
out
xchg
fwait
pop
pushf
inc
jo
inc
mov
push
push
sbb
mov
mov
int
pop
test
test
mov
test
rcr
pop
loope
in
push
mov
movsl
fwait
movsl
sti
scas
sub
xbegin
popf
scas
mov
inc
push
xchg
inc
fcmovbe
mov
imul
and
mov
and
xchg
mov
inc
mov
jp
sub
loopne
cli
scas
scas
sarb
pushf
pop
inc
lahf
cs
insb
leave
adc
jl
cmp
repz
test
add
aaa
ljmp
and
adc
push
mov
loope
mov
orb
cli
inc
add
clc
xor
daa
sub
cmp
jle
int3
lret
in
fiadds
jmp
dec
stc
inc
inc
jmp
mov
std
ljmp
imul
add
enter
std
sbb
jnp
fld
jb
jecxz
aas
enter
pop
sahf
sub
cltd
cld
jg
jb
mov
rcl
lret
in
movsl
test
dec
scas
mov
lock
aas
sbb
inc
icebp
pushf
dec
testb
andb
stos
adc
pop
icebp
test
cs
fs
dec
in
xchg
out
pop
and
shll
and
lret
push
mov
fmul
pop
mov
sub
lods
mov
dec
adcl
cmpsl
std
daa
sub
shlb
les
jle
mov
xor
jg
dec
data16
sub
push
stc
cmp
adc
or
pusha
dec
jle
add
addr16
js
mov
std
dec
fcmovnbe
mov
push
scas
pushf
adc
xor
sar
inc
xchg
and
mov
movsb
aaa
les
add
insb
adc
xlat
gs
je
andl
mov
shl
les
or
xor
xchg
outsb
dec
sbb
mov
mov
insb
je
adc
dec
addr16
clc
gs
and
add
mov
sub
kmovb
cmp
sub
test
sahf
fildll
das
cmp
cmpsl
sub
outsl
aaa
sbb
and
push
ds
rclb
or
and
rcl
aas
push
inc
insl
daa
pop
roll
mov
push
lea
sti
and
stos
push
pop
idiv
push
ret
cmp
push
dec
test
cmp
dec
pop
ret
std
jp
jno
sbb
lods
xor
gs
jae
aas
icebp
shll
or
sbb
xchg
movsl
adc
xchg
mov
mov
pop
push
xchg
aas
stos
pop
mov
adc
loop
sbb
and
add
into
divb
add
mov
fidivs
inc
xor
sbb
cmp
scas
mov
add
sub
pop
mov
mov
add
hlt
cmp
inc
mov
negl
fadds
sub
cs
test
push
push
sub
data16
cmp
mov
sbb
mov
fs
push
push
std
iret
in
add
dec
mov
lahf
roll
adc
imul
push
std
or
imul
mov
or
pushf
pop
xor
add
ret
adcl
leave
adc
loop
mov
push
or
push
outsl
out
enter
out
jp
mov
sub
arpl
pop
pop
mov
arpl
pop
sbb
pop
jns
aad
nop
out
faddp
pop
sub
mov
jno
cmp
mov
repz
scas
movsb
push
loopne
cmp
jae
mov
ret
je
in
sahf
sbb
xchg
adc
lock
mov
pusha
jg
or
dec
in
cmpsl
insb
inc
pop
push
adc
jecxz
dec
imul
in
pop
inc
aam
ret
jge
mov
pop
add
xor
negb
int3
pop
cmp
xor
fldt
inc
mov
dec
cmp
fcompl
cs
pusha
pop
cld
cmpsl
in
scas
lock
dec
add
sarl
sub
add
lods
leave
mov
jb
scas
adc
and
mov
pop
loop
enter
out
pop
adc
es
test
push
loop
jbe
ds
aam
loope
pop
fimull
fstps
rolb
push
ds
xor
inc
adc
adc
aaa
or
mov
inc
mov
mov
push
js
dec
fiaddl
sub
stos
adc
jno
dec
int
loope
and
or
fs
negl
std
cmpsl
cmp
cmp
in
and
pop
in
mov
and
mov
add
fmulp
jle
imul
lret
sub
cmp
pop
insl
aaa
outsb
in
mov
out
addl
mov
or
cmpsb
aas
jne
dec
repnz
inc
sbb
cli
andl
outsb
fdivs
sub
and
jne
sbb
or
cltd
pop
outsl
out
daa
bound
sbb
into
aas
pop
add
int3
jecxz
insl
jae
sub
push
dec
cltd
push
scas
enter
repnz
les
xor
or
mov
or
stos
arpl
pop
ljmp
mov
xchg
rcl
shl
mov
dec
dec
subl
jle
es
mov
leave
adc
jl
mov
cmp
imul
mov
fmull
pop
cmp
inc
mov
aam
mov
add
sub
and
mov
in
jp
adc
dec
nop
out
jns
orb
dec
sbb
mov
inc
rclb
divl
test
cmpsb
lret
inc
jg
push
in
mov
fstp
and
int
lds
pop
pop
add
push
push
sbb
jl
orb
and
and
out
das
jnp
jl
inc
insl
rcr
jne
fsubr
mov
js
cmp
jmp
jmp
cmpsb
daa
ficompl
loopne
jbe
cmp
or
or
out
mov
cltd
xor
test
dec
mov
loope
cwtl
mov
call
pop
fdivrl
mov
push
arpl
sbb
test
stc
fiaddl
cli
mov
andb
and
lods
sbb
xchg
lahf
pop
test
jns
cltd
aad
fistl
loopne
int3
into
jb
loope
jb
ja
int
mov
cs
mov
push
jne
ror
mov
mov
scas
sbb
pop
movsb
mov
push
pop
out
jge
outsb
adc
push
cmp
mov
out
stc
lods
lods
adcb
pop
jecxz
adc
pushf
movsl
xor
into
popf
or
sub
or
ds
hlt
or
mov
dec
push
dec
cmp
aas
pop
push
pop
pop
sbb
into
popa
xchg
add
stos
and
xor
in
negl
or
and
std
jge
jmp
adc
rcrb
and
add
add
and
dec
xorl
dec
mov
cmc
push
outsb
js
adc
stos
mov
ja
cmpsl
cmp
aad
popf
push
push
stc
mov
pop
in
mov
mov
pusha
xor
and
pop
jbe
loope
push
xchg
or
test
inc
popa
lds
cmpsb
add
movl
add
cmpsb
mov
push
mov
stos
pop
cmp
fdivrl
cmc
push
scas
jae
ds
loopne
das
xor
jp
lcall
lds
nop
lods
dec
xor
ret
sbb
fwait
addr16
dec
xchg
stos
test
movsb
jecxz
xchg
jae
push
inc
xor
push
lods
js
inc
les
mov
xor
loope
cmc
pop
in
andl
inc
xorl
push
adc
mov
mov
sub
adc
mov
sub
mov
hlt
mov
aad
sub
and
icebp
mov
lahf
mov
inc
mov
jecxz
mov
iret
ja
xor
daa
outsb
ljmp
es
test
jecxz
xor
les
xor
outsb
arpl
push
mov
lret
mov
jp
sub
mov
arpl
sub
push
mov
lret
add
insb
or
add
leave
lret
fisubs
xchg
bound
sbb
loope
jae
popf
fnstenv
test
add
push
addr16
adc
add
adc
jp
adc
mov
test
sahf
and
add
push
xchg
jmp
mov
sub
sbb
ret
cmpsl
mov
or
jb
in
das
cmovg
out
imul
ret
xor
enter
adc
testl
mov
inc
repnz
and
enter
in
mull
jnp
mov
das
test
sti
adc
mov
in
loop
outsl
pop
sbb
mov
push
xor
adc
mov
xor
xchg
insl
xor
lods
out
lock
aam
clc
and
lcall
pusha
pop
repnz
es
leave
adc
shl
and
xchg
test
in
add
sub
sbb
nop
pop
xor
loope
loopne
arpl
lock
or
mov
arpl
mov
or
or
lock
sub
popf
movsb
nop
add
iret
sbb
movsl
lcall
push
jp
jne
nop
or
jecxz
lret
jne
push
dec
inc
lahf
pop
add
pop
out
and
mov
aaa
mov
aaa
das
clc
or
pop
jle
into
les
xor
sub
xchg
push
cld
sub
sbb
pop
fcom
dec
add
icebp
mov
clc
test
xor
and
xchg
add
lds
sbb
enter
mov
nop
sub
movsl
push
cmp
xchg
cmpsb
xor
inc
cwtl
rclb
jne
mov
xlat
fxam
jl
push
das
loope
jecxz
shrb
push
cmpsl
pop
cli
pop
popf
fwait
leave
xlat
addr16
mov
lcall
jns
mov
add
ds
sub
and
pop
mov
jp
dec
int
xchg
fadds
hlt
imul
inc
adc
lcall
mov
jbe
das
imul
stc
and
and
cmp
sub
or
and
mov
mov
ret
adc
mov
mov
inc
mov
xchg
sbb
fs
ret
popa
jne
mov
add
mov
sbb
sbbb
xchg
loop
cmp
cmp
not
xchg
bound
cld
push
insb
mov
ret
jno
pushf
ficoms
scas
repz
cmp
imul
add
xchg
xor
jnp
outsb
fisttpl
xchg
xchg
je
pop
jnp
pop
test
and
scas
pushf
jne
scas
fcomip
push
xchg
mov
mov
ss
pushf
loopne
xor
sbb
or
dec
pop
std
and
negl
xorl
inc
stc
adc
cld
sub
cmpsl
sub
push
push
jo
mov
scas
in
mov
adc
ret
lds
adc
aaa
cltd
dec
pusha
dec
cmp
xchg
fisubl
push
or
push
and
cmp
lds
lock
js
mov
cmpsb
sbb
add
xchg
jb
inc
push
lods
fstps
iret
sub
jnp
push
cli
sbb
test
jp
cmpsl
lret
mov
dec
aam
xor
scas
or
stos
addr16
xor
sub
and
and
es
rcrl
adc
jg
hlt
pop
sti
std
mov
in
inc
call
push
imul
out
xor
mov
inc
aam
ja
stos
sti
cmp
or
cmp
hlt
adc
push
data16
repz
xorb
or
cmp
jne
shl
xchg
mov
stos
or
dec
mov
pop
pop
rcl
enter
roll
or
dec
mov
lods
adc
xor
stc
xlat
bound
test
int
ret
cld
jo
mov
xor
popa
addr16
shll
lret
jnp
adc
mov
mov
push
pop
lret
mov
insb
sbb
pop
lahf
lahf
bound
adc
mov
out
push
mov
xchg
mov
mov
loop
frstor
pusha
arpl
cmpsl
addb
fisubl
pop
aad
fdivs
adc
shl
mov
or
fidivrl
inc
sti
jae
mov
jne,pn
and
sub
xchg
int
in
xchg
push
shr
xor
pusha
mov
inc
add
adc
out
icebp
cltd
in
pop
incl
and
jl
out
scas
sar
mov
dec
ror
out
fwait
insl
out
pushf
mov
lea
adc
sub
xor
sbb
bound
ds
jp
dec
fidivrs
add
mov
loope
cmpsl
int
push
mov
loop
shr
fadds
fmull
imul
aam
or
daa
pop
inc
and
adc
insl
xor
mov
or
lea
loop
int
stos
add
mov
negb
xor
push
cmc
adc
sub
test
or
movsl
push
jmp
adc
push
xchg
iret
xor
pop
xor
lods
dec
push
aaa
or
xor
sbb
pop
mov
push
push
and
ret
out
mov
xlat
adc
pop
xchg
mov
jg
inc
cmp
push
pop
xchg
mov
pop
mov
cmpl
jo
jp
leave
jbe
mov
adc
sub
pop
add
test
add
mov
push
xchg
subb
dec
xor
and
andl
jl
lods
sub
rcrb
aad
loop
xchg
mov
cs
push
mov
mov
sti
popf
fsub
push
mov
inc
popf
sahf
inc
cmc
cld
outsl
mov
cmc
mov
xor
jo
and
jo
cmp
out
xchg
add
push
or
xor
jge
dec
xchg
push
mov
xchg
xchg
xor
imul
ss
jbe
mov
insl
fmuls
gs
loope
lods
push
push
and
mov
data16
in
outsl
test
das
add
ljmp
inc
sbb
jbe
xor
pop
mov
sahf
test
add
mov
inc
push
pusha
mov
inc
mov
cli
inc
movsl
adcb
ds
add
fcoms
xchg
cmp
push
in
inc
mov
pop
loopne
lahf
xor
mov
push
loope
add
cld
das
stc
pop
inc
mov
iret
push
cmp
sub
popa
lds
mov
xor
shl
stc
addr16
and
cwtl
out
dec
dec
pop
addr16
mov
cld
jo
jb
or
lods
lahf
testl
mov
and
sahf
jae
xor
mov
sub
ret
adc
ljmp
mov
stc
aad
dec
dec
rcrb
ss
ss
mov
mov
popf
push
mov
iret
dec
imulb
test
jne
pusha
mov
lcall
jns
jmp
mov
scas
int
pop
movsl
outsb
pop
shrl
cmp
xchg
cwtl
pop
aam
pop
out
repz
data16
cmp
rol
ret
push
dec
cmp
dec
sbb
inc
repnz
mov
push
mulb
fs
mov
shll
mov
mov
les
aas
pop
add
mov
lods
or
or
pop
pop
popa
mov
popf
lcall
aas
inc
dec
mov
lods
push
dec
lahf
mov
iret
mov
pop
jp
push
push
cmpsl
push
out
fwait
mov
rorl
stc
addl
adc
fmull
and
imul
mov
in
cmp
insl
cmp
mov
mov
hlt
xchg
movsb
dec
ss
cmpsl
dec
aad
je
js
adc
push
xchg
jl
pop
pop
jle
fidivl
lods
pop
xchg
and
add
jg
mov
cmpb
lahf
pop
call
cmp
push
add
sbb
push
aas
fnstcw
jge
mov
das
fs
jmp
jge
inc
pop
daa
mov
xlat
mov
xchg
into
pop
xorb
mov
push
mov
shll
dec
fnstenv
cmp
push
in
inc
or
and
or
fimull
lods
cs
dec
int3
hlt
sbb
pop
fistpll
pop
push
shr
cltd
bound
ffreep
xchg
in
lahf
sbb
shrl
insl
ret
dec
gs
hlt
push
add
les
leave
cmpsb
push
lcall
xchg
sar
cmp
mov
nop
inc
popa
add
data16
aad
and
repnz
dec
sub
add
test
adc
test
andb
sbb
bswap
out
fwait
hlt
pusha
aaa
das
movsb
jbe
insl
mov
cmpsl
js
mov
loopne
outsb
std
mov
pop
jg
jecxz
cmp
enter
add
lds
cmp
stos
adc
icebp
sbb
pop
ljmp
jns
cmp
fs
mov
add
sub
pop
mov
inc
movsb
out
es
imul
popa
rcr
test
dec
test
cmp
xchg
pop
dec
lret
lods
and
mov
adc
enter
popa
xchg
jge
shlb
pop
enter
pusha
lahf
pop
orb
pusha
mov
xchg
sub
imul
jl
inc
pushf
fst
sbb
test
jmp
mov
mov
daa
scas
jg
test
cs
pop
nop
jl
adc
in
adc
outsb
add
fldt
adc
insl
jg
f2xm1
or
inc
into
mov
adc
dec
xor
add
insb
int
ljmp
inc
cmp
ljmp
icebp
push
mov
std
popa
in
mov
lock
adc
loope
jl
jnp
xchg
scas
sbb
rorl
mov
shrl
or
jmp
int3
push
out
mov
xchg
cmp
sbb
scas
jns
and
insl
and
scas
rcrb
in
lds
call
add
jae
icebp
gs
xchg
lods
mov
insl
push
xor
loope
dec
stos
dec
outsb
shrb
shr
lret
jecxz
test
adc
insl
push
outsb
xchg
loop
mov
jle
in
jmp
xor
inc
fucomi
popa
call
rcl
push
jp
in
lods
jo
mov
cmpsb
shlb
pop
in
lret
pop
in
mov
sbb
enter
xor
cmp
xchg
jnp
lret
pop
jne
shrb
aaa
push
xchg
lret
lock
push
cmc
inc
jnp
ret
dec
fdivr
stc
cs
divw
mov
inc
xorb
xor
nop
mov
sub
fbld
cmpsb
sbb
add
rorl
xchg
dec
mov
and
inc
and
aad
xor
mov
dec
ret
ja
jp
popa
xchg
add
bnd
mov
insb
mov
pop
call
fs
sub
mov
and
push
movsb
xchg
add
lret
adc
sub
adc
mov
je
cmpsl
mov
addl
xlat
dec
xor
clc
imul
out
mov
fistpl
cmpsb
insl
add
stc
in
sub
mov
mov
pop
sbb
cmp
test
cmp
jp
mov
in
cltd
loopne
adc
mov
mov
cmpsb
adc
les
cmpsb
testb
adc
inc
fsts
mov
push
cmp
inc
call
mov
push
adc
cmpsb
mov
fldenv
jnp
scas
scas
or
clc
cmp
lea
xchg
mov
sub
shl
xor
rcrb
scas
lea
dec
leave
es
dec
mov
sub
push
or
stos
jp
or
pusha
mov
scas
setns
fwait
int
xchg
popf
fmuls
fcoms
sbb
mov
push
nop
loope
test
nop
cmp
aad
xchg
push
not
jns
or
ret
movsb
aaa
mov
xchg
test
test
inc
xor
into
pop
jae
jp
aaa
pop
push
push
push
mov
roll
cmc
ss
nop
inc
inc
cli
push
mov
jne
cld
clc
fstpl
in
or
xchg
scas
mov
mov
arpl
mov
mov
xor
pop
popa
xchg
mov
and
fisttpll
push
gs
gs
test
aam
leave
dec
cmc
cmp
rolb
mov
xchg
cmp
test
mov
divl
push
jge
and
shl
movb
dec
or
int3
xor
pop
dec
xor
cmp
outsb
ds
ror
mov
pop
clc
dec
sbb
mov
push
mov
repnz
lret
in
jl
sbb
lods
sub
dec
mov
rcr
adc
fildl
mov
in
jge
int3
push
push
sub
push
test
iret
fsub
jl
xor
and
pushf
mov
inc
jbe
imul
test
mov
jno
daa
faddl
pop
mov
shlb
adc
xchg
push
push
push
fistl
dec
ret
leave
pop
scas
dec
add
addr16
fistps
cmp
inc
dec
loop
push
mov
fxch
bound
jnp
dec
xchg
pushf
outsb
mov
rolb
adc
test
loop
push
adc
xchg
lahf
std
test
adc
ja
adcb
cwtl
jno
test
ret
pop
lock
cmp
es
dec
ds
popf
pop
in
ss
fiadds
adc
loopne
cmpl
cli
mov
xchg
scas
cwtl
inc
es
scas
jmp
leave
jmp
outsb
dec
std
addr16
cmp
stc
mov
mov
cwtl
stos
jmp
scas
lock
inc
stos
push
push
ja
xorl
shlb
mov
dec
cmp
xor
int3
jae
dec
leave
adc
dec
loopne
mov
xor
add
das
aaa
dec
jl
adcl
daa
pop
cmpb
pop
into
call
in
ret
xorb
sti
pop
add
push
inc
xchg
stos
xor
shlb
xchg
out
push
cmpsl
push
rorl
scas
inc
xor
dec
push
pop
jo
jno
enter
push
push
dec
into
jb
cltd
fistpll
jle
adc
sbb
and
daa
leave
mov
jae
push
mov
sbb
mov
dec
add
jae
pop
shl
cmp
jecxz
js
lahf
cmpps
test
jl
add
aaa
mov
mov
inc
into
jb
dec
test
xlat
mov
test
mov
out
xor
dec
cmpl
hlt
ja
push
cmp
and
xchg
in
pushf
pop
or
sub
aam
mov
cmp
mov
push
inc
cmp
call
in
inc
out
pushw
and
dec
xchg
mov
cs
bnd
mov
inc
xchg
ljmp
repz
cmpsl
mov
mov
popa
sbb
lret
push
add
mov
in
sbb
lahf
loop
or
lcall
xchg
arpl
aaa
xchg
js
dec
aaa
pop
out
outsb
psubusb
call
gs
cltd
jmp
cmp
xor
push
cwtl
sub
and
sbb
lods
sbb
sbb
add
push
bound
mov
cmp
and
mov
pop
insb
pop
into
mov
push
lahf
std
mov
dec
xchg
in
js
test
insl
divl
mov
data16
pushf
outsl
addb
aas
push
ss
inc
das
lods
das
stos
jle
mov
mov
aad
xchg
cmp
mov
dec
adc
fimuls
dec
cmp
xlat
adc
push
lds
rol
push
or
popf
fstl
idivl
aas
jle
jb
mov
jns
cld
inc
add
or
sub
dec
test
movsb
nop
push
movsb
push
push
push
roll
aas
mov
ficoms
jl
popf
je
call
pop
xlat
and
movsb
adc
mov
insb
inc
adc
inc
fdivs
lds
mov
mov
dec
cmp
or
cmp
cld
cld
fimull
mov
sarl
addr16
sub
mov
pop
push
jne
daa
roll
push
in
pop
pop
xor
fwait
sti
imul
mov
in
ret
xchg
mov
mov
xchg
jnp
jnp
sub
and
sub
pop
pop
fs
pushf
mov
sarl
loop
stos
test
adc
dec
cltd
push
xor
cltd
enter
bound
loope
dec
xor
lods
divb
xchg
cmp
cmp
xor
sbb
mov
insb
mov
pop
into
jmp
icebp
mov
jb
dec
cltd
jno
adc
adc
into
pop
push
push
shlb
inc
rcll
mov
sbb
fwait
or
sbb
shll
daa
add
imul
add
ljmp
mov
in
sbb
pop
in
inc
adc
in
xor
das
icebp
in
mov
xchg
aam
jl
push
cmp
push
pop
inc
pop
cmp
jp
ljmp
int3
mov
lret
cli
pop
hlt
and
call
cmp
mov
mov
xchg
cmp
jl
fcomi
mov
arpl
mov
adc
rcrl
ds
movsl
xchg
js
mov
test
adc
testl
mov
and
fwait
ret
les
and
in
imul
jl
xchg
cli
in
xchg
lcall
rcr
in
and
je
or
or
popf
test
xchg
sti
or
xor
add
ret
xchg
sbb
fnsetpm(287
adc
jno
pushf
mov
pop
out
or
ret
out
xchg
mov
add
shrl
pop
sbbl
in
mov
insb
movsb
clc
mov
push
mov
sbb
es
cmpsb
cmp
dec
shll
aad
xchg
mov
push
and
mov
dec
decl
arpl
and
lea
imul
xor
sbb
sub
es
push
jle
aam
icebp
pop
adc
or
jmp
mov
outsb
stc
push
mov
inc
repnz
cmp
xchg
inc
jl
aam
mov
push
push
ret
mov
shlb
pop
movsl
scas
pop
xor
rcrb
adc
mov
lcall
imul
inc
frstor
push
inc
push
jmp
lret
incb
fdivl
int3
fcmovne
dec
ss
push
mov
mov
pop
pop
pop
lcall
rorb
adc
mov
and
fdivl
ds
arpl
es
push
jnp
adc
leave
add
and
inc
out
andb
mov
adc
test
mov
lret
pop
popa
je
jecxz
and
data16
push
jp
pop
xchg
inc
and
inc
sub
push
dec
cmp
hlt
mov
nop
stc
jle
mov
dec
ret
adc
leave
in
xchg
mov
lock
cmpsb
xlat
mov
ret
xchg
mov
or
mov
inc
inc
inc
jmp
adc
div
ss
test
roll
gs
or
push
test
add
cmp
cmp
fcoms
pushf
daa
lods
push
cmp
adc
sbb
jp
cld
data16
pop
sti
inc
dec
pop
mov
test
pop
or
mov
inc
or
icebp
or
push
push
mov
sub
aam
cwtl
add
xor
arpl
sbb
in
xor
clc
sahf
std
sub
cmpsb
hlt
jns
shl
insb
testl
xor
icebp
shl
cmp
mov
icebp
mov
aas
shll
mov
cli
pop
sahf
shrl
mov
add
push
fiadds
sub
js
jbe
mov
adc
test
pushf
in
lods
or
inc
push
fs
dec
xchg
loope
shrb
shrb
stos
mov
sbb
outsl
push
scas
xor
push
jge
int
in
inc
aaa
xchg
lock
add
and
push
inc
je
jne
lods
sbb
sub
sarl
pop
sub
add
mov
hlt
scas
push
iret
jecxz
mov
std
rcrl
rcr
outsb
jbe
jle
xor
js
loope
int3
fidivl
mov
bound
lahf
inc
insb
lret
sub
and
xchg
out
cmp
outsl
into
fcoms
xor
repz
jl
mov
sbb
scas
das
xchg
std
stos
mov
loopne
pop
sub
inc
fimuls
pop
xchg
cmp
pusha
or
scas
cmp
testb
push
fbld
test
rcll
adc
jmp
shlb
ret
js
and
outsb
cmp
movsl
mov
fstpl
ror
or
test
mov
sbb
xor
jbe
push
and
mov
inc
or
cmp
iret
aad
add
jle
push
dec
adc
sub
sti
shlb
cwtl
xchg
pushf
mov
add
adc
jg
sti
imul
in
cltd
adc
arpl
mov
cli
jg
add
das
or
pop
push
pushf
add
imul
lods
cwtl
xchg
and
mov
sbb
pop
pop
and
jnp
sub
dec
and
in
sti
sbb
mul
pop
mov
call
int
pusha
aaa
lods
ret
stos
sahf
pop
dec
mov
jle
inc
xchg
jns
lock
imul
mov
out
ljmp
mulb
jmp
inc
sub
sbb
lods
dec
inc
jl
shl
mov
adc
cmc
subl
aam
test
cli
mov
fidivl
lds
lcall
mov
and
push
insl
ret
bound
and
insl
sahf
xchg
out
pop
push
sbb
cmp
mov
pop
pminub
pushf
test
lret
mov
cmp
loop
mov
jne
sbb
insl
outsl
cmp
in
sub
pop
ljmp
mov
pop
imul
push
jl
popa
addr16
int3
xchg
jl
add
andl
sub
xchg
inc
jnp
sbb
je
int3
fnsave
outsl
mov
in
iret
movsb
cmp
pop
push
stc
jbe
int3
inc
test
xchg
imul
cmc
push
icebp
dec
shll
pop
sbb
lret
push
sbb
mov
cmp
push
adc
xchg
dec
pushf
ret
gs
fiaddl
in
push
in
mov
out
sbb
jp
push
outsb
add
sub
mulb
add
test
jns
xor
es
push
jo
in
cld
ja
pop
imul
movb
and
or
ljmp
xor
imul
lods
dec
cmp
stc
scas
inc
jno
int
jae
mov
push
scas
je
jno
mov
aam
mov
adc
hlt
bound
jmp
stos
sub
aaa
sbb
mov
pop
gs
dec
mov
popl
jmp
jo
mov
dec
data16
jp
jns
lahf
push
add
and
in
mov
mov
cmpl
sub
push
inc
dec
jne
fistps
fwait
jge
xor
cltd
jne
pop
or
das
ds
lods
mov
scas
xor
repnz
mov
dec
dec
jge
push
clc
jmp
arpl
shrl
dec
jae
or
xchg
cmp
mov
incl
mov
dec
mov
mov
pop
pop
add
add
gs
xor
dec
pop
mov
mov
inc
pusha
call
enter
xchg
jns
test
xor
clc
mov
cmp
mov
cmpsl
mov
js
sbb
cmpl
cli
mov
pusha
call
enter
sub
mov
sti
aaa
mov
pushf
pushf
or
out
push
dec
popa
out
fisttpll
dec
sbb
sbb
sub
inc
loope
lods
fucomip
sub
adc
pushf
adc
or
xchg
repz
push
sub
insl
xor
mov
stc
loopne
lods
sbb
das
mov
cltd
cmp
inc
jae
leave
stc
sarl
mov
ret
test
repz
movsb
in
rcll
adc
lods
lods
test
xlat
cltd
sub
ficoml
enter
arpl
bound
loope
add
xchg
gs
sbbl
das
or
orl
frstor
fdiv
pusha
jno
jl
fs
insb
pop
call
je
mov
popa
aas
int
push
cmpsb
sub
outsb
repz
icebp
call
adc
inc
out
cld
fadds
scas
fwait
sub
lcall
jmp
sub
scas
hlt
push
cli
pop
outsl
test
es
jmp
lcall
stc
xor
adc
add
ret
cmpsb
dec
mov
fisttpll
cmp
sbb
lea
mov
sbb
fs
xor
shrb
addr16
popa
sahf
pop
lea
lods
xchg
stos
fmulp
inc
loope
adc
int
dec
ja
and
xchg
mov
sbb
shll
mov
mov
adc
test
or
out
cmp
or
leave
sub
ljmp
push
and
les
add
pop
mov
stc
jecxz
push
je
or
in
xor
sbb
ss
cs
xlat
sbb
test
outsb
cwtl
push
jno
pop
cmpsl
pushf
data16
iret
or
mov
das
loope
push
inc
lahf
jmp
std
arpl
movsl
jl
test
fildll
clc
or
out
sub
jno
mov
pusha
aas
dec
outsb
pop
movsb
movsb
xor
iret
sub
pop
lea
push
mov
leave
into
in
add
loop
imul
cwtl
mov
mov
mov
es
dec
jecxz
mov
cld
push
outsl
sbb
sub
xorb
daa
add
fidivrs
ja
pop
jne
rcr
sub
cmpsl
jno
cmp
dec
mov
and
sub
fdivl
sbb
add
aad
into
add
or
and
insl
ficompl
jo
mov
jl
les
xchg
push
push
shlb
xchg
repz
cwtl
loopne
push
push
push
pop
lods
in
iret
mov
dec
pop
int3
mov
and
jmp
xchg
pop
fstps
mov
insb
jle
shll
push
shrl
loopne
shlb
jnp
test
mov
addr16
es
jbe
movsl
outsb
pushf
cld
inc
addr16
or
in
and
shrd
mov
mov
mov
pop
cmpl
mov
es
rclb
add
mov
push
sub
mulb
sub
int3
push
mov
icebp
pop
mov
cmp
cld
dec
mov
nop
adcb
push
loope
cld
fucom
or
movsb
rol
xlat
inc
mov
es
xchg
xchg
fcoms
in
or
mov
rsm
push
arpl
sarb
cmp
xchg
jne
mov
fsubl
inc
cmpsl
mov
mov
and
xchg
dec
mov
cli
in
sub
add
jge
leave
rcrb
adc
sbb
xchg
test
push
das
mov
movsl
test
jle
and
cmpsl
stos
in
lea
or
test
movsl
mov
pmulhuw
xchg
sub
cmp
popa
jle
iret
aad
fldl
sub
sub
dec
nop
sarb
adc
ss
push
shr
jmp
jecxz
test
ljmp
leave
xchg
mov
inc
shrl
xchg
jl,pn
jp
ljmp
rclb
dec
cltd
nop
cmp
dec
pop
push
test
jno
clc
rcr
in
sahf
cmp
stos
test
mov
pop
jne
mov
jecxz
scas
mov
cmc
loopne
fdivs
pop
and
sbb
xor
ret
out
fidivrs
add
int
std
pop
add
jge
out
je
push
test
add
sub
pop
insl
cmp
repnz
and
jbe
dec
rclb
jg
in
stos
cmp
in
sub
icebp
cld
imul
repz
jmp
das
xchg
cmp
sbb
inc
mov
jmp
pop
imul
stc
out
cmp
lret
rcl
xchg
insb
cmp
adc
jge
outsb
add
or
add
adc
xor
pop
adc
cmc
nop
push
jmp
hlt
jg
cmp
mov
push
pop
add
cmp
imul
cmp
fyl2x
jnp
int3
add
push
cs
lock
lahf
sub
lret
shrb
xchg
lcall
movsl
out
popa
outsb
out
mov
mov
div
mov
into
dec
adc
mov
sbb
xlat
push
rcrb
add
sub
sbb
iret
fmuls
add
aas
aam
aam
ret
fnsave
test
sub
xor
mov
pop
cwtl
lret
pop
jno
lcall
adc
cmp
bound
aam
xor
in
mov
test
xchg
adc
dec
cmp
aas
adc
pop
jo
mov
pop
pushf
cmpl
dec
daa
adc
outsl
xorb
cmp
xchg
pop
scas
mov
incb
orb
sbb
xor
mov
popa
cmpl
dec
mov
mov
movsl
sub
or
stos
mov
lds
jo
jne
out
mov
popf
test
mulb
pop
sbb
add
sti
movsb
stos
mov
sbb
mov
cld
inc
mov
mov
dec
dec
inc
sbb
test
lods
out
mov
sbb
ja
int
sub
inc
cmp
mov
xchg
or
sub
scas
js
lods
fwait
cmpsl
push
mov
jp
das
fldenv
inc
pop
mov
cli
push
adc
clc
mov
pop
mov
push
mov
repnz
jne
push
addb
push
jnp
mov
xchg
dec
movsb
inc
les
and
mov
push
xchg
popa
out
push
dec
nop
mov
mov
push
cmp
mov
mov
mov
pop
push
jg
shl
aam
adc
cmpsb
sbbb
fnop
lea
push
fwait
mov
cmp
iret
fdivl
adc
mov
fsub
int
xchg
stc
mov
jecxz
insl
add
aas
scas
test
rolb
out
sbb
leave
adc
rclb
orl
or
mov
fcmovu
xor
add
sub
fstpt
mov
leave
scas
mov
ficomps
insb
call
adc
arpl
cmp
mov
and
and
clc
pop
dec
jmp
addr16
push
ja
scas
dec
jno
push
or
fsubrp
ja
push
imul
daa
cmp
and
jne
cltd
rcl
lret
invd
data16
roll
push
enter
das
ja
adc
out
dec
rcrb
pop
shl
xchg
xor
in
xor
sub
dec
push
add
ja
inc
sub
xchg
daa
adc
inc
out
test
mov
ds
rcrl
in
xor
adc
push
pop
je
cmp
xchg
cs
cmp
dec
or
scas
and
aas
xor
sub
jae
jo
push
or
mov
aas
add
inc
dec
int3
loopne
jbe
or
call
out
pop
mov
in
nop
xor
dec
test
test
jb
in
jns
sub
addr16
sub
mov
pop
push
sarl
in
jo
fwait
loopne
mov
test
and
fwait
mov
roll
movsb
fcomps
pushl
jb
cmp
adc
dec
test
mov
lcall
leave
mov
xor
push
stos
cld
mov
leave
arpl
pusha
in
js
vpshlb
mov
mov
xor
add
jne
decl
mov
mulb
shl
and
dec
push
jo
cmp
stos
sbb
shlb
adc
cmp
jg
jecxz
mov
push
or
mov
cwtl
pop
stc
cmp
xor
movsb
dec
outsl
dec
ljmp
cmc
mov
mov
sti
fldl
and
jl
loopne
out
stos
es
and
xchg
out
and
jp
mov
cmp
jg
xchg
fdivrs
mov
push
mov
les
pop
jecxz
leave
and
test
daa
testl
in
lods
adc
nop
mov
jno
mov
and
mov
outsb
aam
dec
mov
mov
adc
push
out
mov
mov
loop
fstpt
shl
insl
fcoms
test
les
test
aaa
outsb
cmc
inc
addl
mov
stos
sahf
xchg
arpl
je
dec
push
pusha
nop
movsb
lret
xchg
lret
sahf
jle
mov
mov
lock
movsl
stos
arpl
gs
xor
jbe
aas
inc
xchg
iret
jmp
mov
jp
sahf
fcmovnbe
das
jne
jae
add
pop
xchg
mov
xchg
jmp
or
dec
cmp
fwait
test
movq
pop
or
cmpsb
test
out
in
xchg
sbb
pop
icebp
aaa
inc
sbb
andb
stos
je
dec
push
xchg
lock
jb
testl
cld
imul
pusha
ds
sbb
call
imul
add
ss
mov
mov
test
ficomps
ret
and
leave
mov
mov
pushf
push
stc
jns
pusha
lds
out
shl
in
pusha
lods
pop
xchg
fwait
lea
prefetchwt1
push
loope
inc
lcall
nop
fstpl
mov
xor
in
jb
stos
mov
fisubrs
lahf
aad
call
aad
js
popf
cmpsl
push
mov
xchg
push
mov
mov
or
mov
lea
add
add
decb
adc
and
xchg
stos
sbb
dec
pushf
mov
push
pop
rorb
nop
or
call
aad
outsb
icebp
ljmp
ljmp
repz
ss
xchg
sbb
mov
cmpl
mov
in
ss
pop
ja
mov
loop
pop
inc
sbb
pop
loop
mov
cli
icebp
or
addr16
cwtl
in
pop
and
jl
mov
cmc
inc
shrb
mov
or
xchg
inc
sbb
dec
jmp
jo
inc
inc
lds
mov
mov
mov
cmp
xchg
pop
dec
add
pop
sub
cmp
or
mov
sarb
dec
push
jge
cmp
and
push
mov
sbb
ret
dec
outsl
inc
xchg
sbb
pop
stos
cld
cmp
test
lea
sub
inc
push
jo
xacquire
cld
dec
nop
mov
xchg
sbb
dec
lock
cmpsb
cmp
mov
mov
out
js
push
test
xchg
adc
mov
mov
loopne
or
sbb
sahf
mov
xchg
pop
divl
mov
lods
dec
sbb
sbb
jno
adc
clc
cmp
cmp
mov
jbe
cmp
ljmp
mov
cmpsl
sub
mov
push
hlt
jecxz
jecxz
dec
dec
mov
hlt
dec
dec
cmp
in
or
push
lods
sbb
cli
mov
xchg
mov
inc
sahf
sbb
lret
sub
jo
fbld
dec
inc
inc
icebp
call
pusha
out
movsl
add
fldenv
aad
cs
popf
das
cmpsb
xor
aam
or
cmc
mov
mov
sbb
sbb
add
pop
mov
test
roll
dec
sahf
stos
sub
push
loop
or
push
loope
cmp
mov
or
shr
jl
cs
addr16
mov
lret
andl
pop
gs
nop
mov
incb
ror
or
out
rcll
arpl
icebp
xchg
pop
daa
xor
xchg
jbe
ljmp
push
jno
xor
outsb
add
sbb
icebp
pop
test
popa
cmp
int3
mov
xchg
ss
jg
sub
rolb
sub
cs
fimuls
cli
adc
sahf
mov
loop
pop
shrl
dec
and
stc
fistpl
testl
lahf
sub
hlt
aas
aad
je
loopne
cmp
mov
lahf
jmp
cmpsb
jmp
mov
fwait
or
or
mov
inc
mov
xchg
jbe
cltd
add
lahf
or
pop
adc
add
jnp
cmp
fwait
add
movsl
mov
stc
fdivr
mov
mov
pop
sti
add
les
aas
pushf
arpl
cmc
icebp
int3
lret
and
mov
mov
add
scas
popl
lods
mov
cmp
ret
ljmp
jecxz
pop
cmpsl
mov
nop
adc
outsl
pop
clc
movmskps
dec
jmp
aas
xor
jns
repnz
stos
dec
mov
outsl
adc
or
popf
fdivrs
outsb
mov
add
sub
mov
inc
xchg
jb
jno
nop
out
cwtl
jbe
push
mov
add
mov
push
mov
movsl
aad
adc
and
fs
cmp
lret
iret
jns
xchg
mov
pop
cmp
stc
pxor
fnsetpm(287
push
testl
in
and
mov
jecxz
lock
inc
lea
repz
movsb
mov
in
push
orl
fidivl
sub
pop
jmp
cmp
pop
push
arpl
loop
jecxz
rcrb
push
rclb
in
bound
push
and
push
xchg
pop
popf
sbb
and
stos
popf
nop
stc
loop
dec
into
and
clc
mov
ss
push
enter
pop
aad
adc
xlat
repz
mov
sbb
ljmp
cld
lcall
sar
scas
in
sub
dec
mov
add
shlb
adc
push
jmp
ficoms
push
adc
pop
sub
unpcklps
xchg
jl
lahf
push
mov
mulps
ret
pop
loop
jecxz
push
cltd
push
outsb
cmc
cld
adc
add
insl
lahf
jns
into
sub
loope
pop
push
mov
add
sub
inc
mov
jge
fistps
cmp
dec
mov
and
xchg
mov
add
outsb
adc
cli
xchg
xchg
clc
and
dec
mov
jne
subl
cltd
sub
push
mov
adc
sbb
lds
nop
orb
sub
sahf
loopne
mov
enter
mov
dec
aad
pop
xchg
pop
jmp
loopne
in
xchg
mov
mov
gs
push
cmc
sbbl
push
inc
cmp
xor
mov
cltd
addr16
cmp
pop
mov
push
imul
pop
imul
xchg
int
jno
dec
pop
or
jmp
stos
sbb
cld
in
cmp
iret
outsb
mov
push
iret
xor
in
in
stos
dec
and
in
or
fcmovnb
repz
mov
repnz
je
gs
mov
mov
sub
dec
mov
gs
xchg
idivl
cmc
cmpsl
sub
or
in
pop
and
loopne
sub
test
scas
sti
jno
xchg
loopne
ret
outsb
add
pop
lds
ret
push
out
push
pop
fwait
cmovo
enter
pop
mov
in
js
xchg
sar
xchg
movsl
mov
adc
push
jne
les
or
jbe
xchg
rolb
mov
push
sub
sub
xchg
imul
mov
fwait
adc
jmp
xor
adc
sub
sbb
pop
dec
int3
adc
rcrl
fs
in
jmp
inc
std
imul
sbb
in
jecxz
imulb
lea
cmp
pop
mov
jns
push
and
sub
pop
filds
movsb
bound
adc
aad
or
sbb
mov
bound
es
stos
cmp
pop
aas
xchg
inc
fnstenv
insb
fstpt
jg
addr16
popa
in
cwtl
jbe
insb
inc
xchg
pop
pop
jmp
stc
mov
jle
sub
sbb
dec
aaa
mov
rsqrtps
jecxz
pop
push
inc
push
gs
fwait
push
cli
jo
jp
js
stc
aad
sbb
sub
mov
add
cmp
test
mov
scas
mov
dec
ficoml
bound
lock
fcmovbe
pusha
xchg
cltd
iret
dec
outsl
xchg
out
pushf
out
hlt
insl
sbb
mov
scas
js
cmpl
loop
sbb
lahf
mov
cs
ss
cmp
icebp
sub
push
stos
addb
enter
push
lock
sbb
jne,pt
dec
arpl
scas
stos
sub
jge
jg
nop
inc
adc
and
data16
add
pop
add
je
leave
cmp
sbb
js
fisttps
lret
test
leave
pop
sarl
filds
inc
fs
push
aad
cwtl
add
popf
ss
loopne
jmp
push
out
clc
adcl
data16
fisubrl
mov
in
add
loop
ret
mov
int3
int3
arpl
pop
aad
add
or
call
or
stc
lret
es
mov
push
mov
dec
xchg
mov
sbb
ja
pop
outsb
inc
mov
jge
jo
cmp
test
mov
dec
icebp
rcrb
bound
pop
jle
dec
add
test
adc
push
data16
inc
pop
test
add
loope
rcrl
into
add
push
inc
inc
lods
shll
pushf
xchg
nop
in
in
ret
mov
fimuls
push
lret
shll
xchg
sbb
fwait
decl
sub
shlb
xor
xchg
xor
ja
push
outsl
xlat
xchg
mov
in
fildl
cmp
inc
loope
cmp
es
pop
cs
movsb
sahf
gs
adc
nop
xor
adc
daa
xor
ret
int
fcompl
mov
mov
or
hlt
mov
cwtl
sub
stos
inc
lcall
outsl
mov
rcr
jnp
das
pop
repz
mov
iret
sahf
or
int3
adc
stos
adc
out
rol
push
js
jge
sbbb
outsl
gs
sahf
into
repz
mov
or
sar
adc
int
mov
cli
mov
pop
nop
aas
mov
aam
xchg
mov
das
push
femms
pop
jb
jecxz
mov
xorb
pop
in
xor
clc
lods
xchg
lea
cltd
scas
push
pop
sbb
jns
mov
sub
xor
dec
push
lds
fistpl
push
nop
adc
adc
icebp
ss
sbb
jmp
pop
mov
popf
lcall
cltd
ss
push
push
add
dec
bound
jne
jne
stos
jmp
fildll
xchg
inc
jecxz
inc
xlat
push
movsl
int3
mov
lcall
lea
mov
and
xchg
enter
xor
mov
push
cmp
inc
cmp
cs
test
add
jne
adc
cmp
cltd
pop
mov
in
mov
inc
mov
pop
imull
lock
and
xor
jbe
adc
and
sub
or
mov
cmp
xchg
outsl
lods
loope
pop
and
push
das
cmp
pushf
mov
pop
push
imull
cld
jg
dec
or
adc
mov
push
bound
push
test
leave
and
int3
mov
add
enter
ret
dec
mov
je
mov
jecxz
sub
cs
cmp
dec
dec
inc
mov
dec
mov
stos
push
mov
adcl
xchg
adc
cld
push
ja
outsb
or
mov
inc
data16
xor
negl
sarb
pushl
test
jle
add
movsb
xchg
cltd
jle
push
dec
adcl
mov
push
xchg
mov
or
add
sahf
icebp
les
xor
ret
mov
or
test
push
lret
pop
popf
push
push
aad
call
xchg
data16
data16
hlt
mov
add
or
jg
rcrb
mov
bound
push
mov
lea
jmp
cld
jne
lcall
out
es
call
dec
rolb
pop
jge
into
daa
xor
and
lahf
out
sub
fdivrl
adc
mov
dec
lea
movsb
sbb
pop
jp
push
ret
test
pop
sub
add
jge
mov
idivl
fldcw
sbb
xchg
and
leave
int
outsl
js
dec
inc
pop
js
cmpsb
push
dec
cmpsb
lret
int3
or
xlat
dec
adc
sub
out
movsb
mov
adc
inc
cmp
fwait
es
jns
mov
inc
addr16
sbb
pop
cmpl
cld
jle
mov
mov
mov
inc
mov
sub
and
ret
cmp
push
sub
outsl
cmpsl
cmpl
sbb
add
sbb
cmp
mov
or
cmp
adc
repz
xor
sbb
popf
lods
sub
aas
push
int3
mov
and
push
imul
pop
sbb
mov
mov
cmp
pop
js
xlat
dec
lret
inc
or
cmp
in
inc
dec
lock
mov
add
gs
push
jp
dec
xor
fisubl
push
fcomps
popf
adc
stos
subl
lahf
jne
add
mov
and
scas
ja
add
inc
into
dec
pop
fstpl
sbb
add
mov
lret
pop
loop
cltd
fcmovne
ret
jge
ljmp
cmc
js
mov
sarl
movsl
cmp
xor
inc
cmp
js
in
add
pop
clc
mov
roll
push
or
aam
or
dec
xchg
or
pop
jne
insl
jg
iret
cmp
mov
or
add
cmpsl
mov
mov
gs
outsb
or
leave
adc
popa
flds
cmp
pop
fimull
jb
jmp
jae
xor
mov
ljmp
xorl
rcrb
xchg
cmp
mov
jle
jbe
push
pop
jp
adc
testl
decb
test
mov
xchg
fcmovne
push
mov
ror
pop
dec
hlt
add
adc
mov
jmp
xor
xor
scas
cmpsb
insb
push
pop
ja
test
fdivr
push
push
stos
shlb
lods
test
insl
adc
and
sub
cmp
int3
jae
jns
push
ljmp
pop
daa
cmp
in
cmp
cmpsl
cmp
xchg
sub
sarb
int3
sbb
lds
test
ljmp
sbb
movsb
sbb
or
ds
negb
cmpsl
push
arpl
xchg
pop
ss
or
mov
sbb
daa
cmp
xor
gs
pop
dec
cltd
mov
lds
pop
pusha
sub
dec
clc
fwait
test
push
inc
imul
test
mov
mov
xchg
mov
loope
mov
jb
mov
cmc
sti
mov
or
adc
mov
adc
ss
push
mov
outsl
bound
cmp
or
xor
jns
mov
dec
repz
pop
mov
int3
jnp
scas
mov
ds
adc
lret
lret
into
mov
adcb
push
or
jne
xlat
mov
push
sub
aas
adc
add
fucom
movsb
cmp
sub
sbb
insb
insb
in
xchg
fabs
dec
mov
lret
std
repz
add
in
sbb
fst
dec
aad
push
adc
adcl
pusha
add
out
lret
push
addl
in
int3
ja
sbb
sahf
fistps
nop
fldt
add
fbstp
in
xor
ja
cmpxchg8b
aam
xchg
popf
and
xchg
int
rolb
ret
les
ljmp
stos
and
inc
js
lcall
jp
and
das
loop
clc
dec
cmp
test
mov
inc
stos
ret
sub
inc
sub
push
loopne
and
lea
fdivrs
sub
cwtl
bswap
je
pop
jo
orb
fildl
push
fisttps
inc
lock
mov
xor
sbb
inc
pop
push
pusha
jne
cli
test
xor
mov
xchg
popa
sub
inc
xchg
cs
push
insb
or
cmp
scas
addr16
dec
mov
jo
je
pop
or
dec
repnz
mov
inc
ja
mov
pop
mov
aad
sub
inc
out
stos
aas
adc
popa
adc
aas
daa
add
mov
and
aad
pop
std
hlt
adc
add
daa
pusha
jp
jo
test
clc
xlat
mov
mov
pushf
fndisi(8087
inc
movsb
mov
test
or
sbb
das
add
repz
loop
and
cli
push
xlat
out
insl
add
pushf
movsb
add
lea
pushf
dec
mov
push
jae
adc
pushf
aad
fldenv
fists
mov
mov
jae
or
shrb
cwtl
push
scas
ja
mov
aas
test
jae
aas
das
pop
icebp
mov
jmp
jmp
xor
scas
or
shrb
jb
sbb
add
and
sbb
mul
jp
xchg
mov
sub
idivl
xor
cmp
aaa
ss
xchg
popf
sbb
push
pop
add
test
int3
pop
das
pop
fldenv
add
movsl
sub
xlat
sti
fcmovbe
into
sti
arpl
push
or
and
and
jne
push
push
pop
sahf
in
dec
xchg
out
stos
sub
sbb
jg
je
xchg
sbb
xlat
pop
sbb
mov
out
jne
mov
mov
mov
cmp
xchg
push
ss
jne
std
stos
mov
or
jbe
int
pop
jg
adc
arpl
leave
sbb
shlb
xchg
test
inc
cmc
insl
lods
mov
mov
dec
push
loop
jmp
xchg
jle
xchg
pop
pop
inc
jmp
imul
mov
repz
in
iret
adc
scas
lret
out
icebp
loope
ja
push
popf
xor
pop
inc
pop
stc
ja
dec
jne
popa
sub
pop
rcrl
sub
mov
sti
jbe
ss
push
sbb
sub
outsb
cltd
popf
add
add
mov
arpl
push
mov
insb
add
xchg
scas
sti
jnp
fdivl
in
push
jb
inc
sbb
sub
fs
sub
stos
sub
add
clc
fidivrl
mov
add
test
sub
jmp
or
xchg
mov
push
repnz
repz
imull
cmp
sbb
lcall
sub
hlt
clc
daa
sbb
rol
mov
mov
jno
cltd
mov
test
test
cli
fsubl
mov
xchg
sti
jne
mov
imul
shlb
sub
cwtl
pop
adc
or
adcl
sub
cmp
jg
nop
repz
jnp
push
aam
mov
or
orl
jmp
and
sahf
dec
fsubs
adc
test
cmp
popa
inc
xor
rcrl
mov
js
jl
pop
std
mov
ret
test
push
leave
jmp
or
stc
inc
fisttpll
sub
jle
aas
add
sti
pop
xchg
test
cmp
pop
mov
mov
scas
enter
xor
and
sbbb
mov
popa
js
loopne
push
add
lahf
xchg
inc
mov
fs
mov
jmp
jg
and
mov
dec
sub
sub
xor
aam
mov
mov
lods
leave
sbb
add
mov
pop
jmp
sub
pop
shlb
xchg
call
ffree
xchg
aas
mov
jg
cmp
in
sbb
mov
xchg
inc
sbbb
shrb
add
aam
loopne
shl
inc
subb
rolb
outsl
fwait
mov
push
ficoml
inc
fists
lock
das
daa
and
scas
ds
test
xchg
mov
imull
loop
lds
push
pop
mov
aad
sub
mov
dec
inc
xlat
mov
iret
xor
mov
mov
lods
pop
pop
shl
add
xor
sarl
mov
adc
mov
mov
sbb
push
loop
mov
aas
or
and
fs
mov
or
xchg
clc
xlat
or
rcrl
or
push
adc
adc
imul
or
enter
jg
mov
sub
cmp
mov
inc
aas
pushf
scas
mov
pusha
push
mov
stos
popf
mov
test
shrb
sbb
pop
in
test
insb
mov
shl
data16
aad
inc
mov
xor
popf
jl
dec
ss
hlt
movsl
flds
mov
push
pop
orb
mov
jno
scas
jp
mov
test
psubq
lret
or
adc
cmpsl
pop
in
cmp
pop
adc
in
js
push
push
adc
cmp
jnp
mov
xchg
mov
pop
add
sub
mov
loopne
inc
xchg
inc
xchg
or
sub
daa
and
mov
push
rcr
mov
or
and
add
sbb
in
or
cmp
adc
jl
pop
pop
bound
test
mov
inc
xor
sbb
ljmp
lock
mov
movsb
xlat
das
mov
push
loope
outsb
jg
and
stos
stos
cmp
xor
pusha
and
dec
sbb
push
lods
out
std
mov
jno
inc
in
push
jae
or
xchg
push
arpl
inc
pop
mov
jmp
adc
add
call
inc
test
push
cmpsb
int
adc
popa
xor
inc
pop
pop
sbb
sahf
pop
mov
fwait
and
sarb
pop
popa
sub
jae
xor
sub
or
dec
int3
pop
sbb
dec
loopne
add
stos
add
sbb
mov
sbb
xchg
mov
repz
gs
and
xchg
xor
mov
lret
dec
les
mov
test
inc
sbb
cmp
mov
jmp
int
sbb
add
jb
add
arpl
push
adc
jecxz
insl
scas
jle
adc
add
scas
iret
dec
xor
cmpsb
cltd
bnd
cmp
addl
adc
pop
in
push
xchg
jecxz
pop
loopw
test
shll
cli
adc
sbb
int
add
cs
sub
js
xor
test
xlat
fcomi
adc
sbb
add
xchg
lret
xchg
shll
test
outsl
loopne
loope
out
jp
and
inc
addr16
sub
inc
lods
shrb
sub
andb
adc
cmp
pop
mov
negb
xchg
and
sbb
outsb
mov
lds
jge
sbb
in
dec
out
sbb
cmp
call
aad
inc
jmp
xor
add
xlat
lahf
rorl
mov
adc
jp
icebp
sbb
push
xor
and
xor
pop
xchg
movsb
mov
mov
mov
lret
or
gs
clc
push
or
adc
xor
clc
insb
div
xchg
sub
int
cld
push
fisttps
out
sbb
orb
fmul
pop
mov
das
mov
add
addl
and
loope
das
xchg
fistpl
sbb
cwtl
loop
aaa
mov
pop
or
or
pushl
insl
das
jecxz
jnp
shll
push
shlb
ret
adc
and
or
call
sub
in
stc
icebp
and
out
in
test
jmp
mov
push
xchg
jb
lcall
addr16
or
lock
adc
jl
in
push
test
gs
lret
cmpsl
push
dec
das
or
movsl
lock
xorb
mov
cli
push
and
push
mov
inc
mov
pushf
dec
rcrl
dec
rcrl
push
fs
stos
mov
loope
adc
fwait
pop
insl
xor
ja
das
int3
outsb
aas
loope
adc
mov
ss
mov
bound
enter
mov
shr
xor
adcb
push
cmp
incb
and
adc
insl
sbb
fistpl
xchg
mov
in
hlt
push
lods
xchg
call
adc
cmp
adc
and
add
jno
and
loope
pop
push
es
outsl
mov
xor
cmpsl
and
jne
data16
adcb
movsl
das
dec
popf
test
clc
andb
push
adc
mov
inc
ljmp
roll
xlat
xor
mov
pop
shlb
cltd
push
repnz
mull
lcall
pop
mov
fwait
mov
arpl
pop
lret
or
sbb
xor
jmp
iret
inc
push
sub
jno
pop
out
cmp
push
pop
and
dec
lret
std
push
or
jl
popf
add
mov
fnstsw
mov
cmp
outsl
mov
xchg
mov
out
popf
ss
jg
rep
or
and
hlt
shrl
and
lods
jb
xchg
mov
divl
hlt
lods
outsb
ss
hlt
mov
fstpt
sbb
and
shlb
cwtl
pop
repz
das
lcall
mov
cmpsb
inc
cmpsb
pushf
push
ret
imul
dec
xchg
je
xchg
mov
xor
push
js
test
or
xchg
inc
add
lcall
frstor
push
sbb
add
mov
jbe
or
xlat
jb
pop
xor
data16
fidivrl
xchg
add
pop
idivb
jne
test
sbb
add
fdivs
insb
push
or
test
mov
js
insb
xor
divl
jae
outsb
insl
popf
push
popa
mov
insb
das
adc
std
or
pop
fstp
testb
fstpt
lea
push
adc
stc
int
xchg
cs
and
lahf
and
mov
sub
lods
cmpsl
jbe
adc
lcall
sbbl
in
sti
pop
rorl
dec
lret
sbb
jnp
nop
jge
es
mov
jns
clc
jle
jno
into
xlat
cld
test
loope
inc
inc
clc
mov
xchg
aas
or
xchg
or
push
mov
hlt
test
mov
cmp
test
cmp
or
jle
and
ret
or
push
jno
insb
xchg
xor
mov
sar
inc
jno
pop
leave
rorl
pop
das
fwait
xchg
test
push
cmpsl
and
or
push
adc
frstor
clc
sbb
daa
dec
fs
mov
movntq
out
imul
push
out
xor
cld
jns
outsl
clc
insl
dec
jne
cwtl
pop
popf
jbe
ja
sar
mov
aad
cmp
ffreep
rcrb
shrb
aaa
add
sti
jl
pop
nop
or
arpl
iret
and
xchg
add
mov
and
push
add
mov
cli
jo
imul
xor
lret
push
gs
sbb
xor
mov
int
cmp
mov
dec
inc
xchg
sub
and
xorl
movsl
dec
fcompl
cltd
adc
stc
xor
shrb
cmc
out
movb
cld
mov
jb
dec
cmpsb
add
and
es
mov
sbb
xadd
mov
nop
fistpl
loope
sbb
outsl
shr
les
pop
and
popa
les
xlat
fadds
shlb
push
and
ljmp
gs
stc
ja
aad
in
insb
mov
je
xchg
inc
dec
cmpsb
mov
cs
ret
je
pop
xchg
test
sbb
in
mov
or
lret
push
mov
stos
push
cli
pop
cld
xchg
dec
push
pop
aad
pop
lret
test
push
idivb
cmp
xchg
lds
mov
or
push
jle
into
adc
add
mov
cmp
and
pop
dec
cmc
in
shl
or
mov
or
dec
lcall
jl
mov
and
dec
incb
jnp
nop
iret
push
pop
shr
xchg
faddl
insl
lods
add
icebp
sbbb
inc
jg
xor
lret
bound
subl
fs
arpl
xor
mov
iret
xchg
shrb
imul
cmpsl
or
ja
lret
cmpsb
sub
pop
aas
or
nop
push
add
mov
pop
xor
int
aam
jno
mov
mov
jmp
fidivs
xchg
insb
inc
pop
fsubs
mov
pop
cmp
nop
jle
enter
xchg
pop
jle
movsl
ds
mov
testb
sbb
lods
movsb
add
popa
push
sub
stos
mov
mov
dec
je
cltd
adc
loope
das
pop
call
fs
loop
push
aad
rcrl
mov
addr16
sbb
jmp
add
fwait
cwtl
getsec
sub
add
in
cmp
out
jnp
push
mov
daa
daa
xchg
pminsw
mov
aad
loopne
cwtl
scas
cs
or
xor
clc
insl
adc
cld
or
lcall
push
jns
pop
outsl
push
xchg
lret
stos
stos
jo
sub
cli
inc
popl
data16
lret
mov
xchg
dec
paddq
fcompp
lock
pop
cld
daa
jbe
sub
fcomi
adcl
xchg
xorl
push
ds
xchg
fistps
subb
jbe
push
lea
pop
out
ljmp
insb
or
scas
es
xchg
pop
or
push
out
out
adc
pop
mov
push
mov
fistps
enter
jl
mov
xorb
rclb
imul
fadds
cmp
adc
cmpsl
mov
lds
push
add
sub
mov
dec
roll
inc
sbb
sbb
fnsave
fmull
ds
dec
and
and
jbe
lods
and
add
xlat
pop
jmp
and
mov
mov
shl
inc
add
mov
insl
xchg
mov
ret
dec
pushf
gs
mov
ljmp
mov
sarb
lods
ljmp
in
pop
xchg
sbb
cmc
sti
rcrl
mov
jo
lret
add
cmp
into
xchg
mov
push
sbb
jno
jmp
pop
sbb
stos
mov
xor
imul
jnp
adc
xchg
xchg
add
or
mov
int
lea
pop
fstps
divl
mov
int
dec
mov
sbbb
mov
nop
sbbb
repz
cld
addr16
lahf
js
pop
ret
or
jp
aam
daa
outsb
mov
jl
cs
mov
rorb
outsb
fistps
test
cli
xchg
dec
test
out
jle
xchg
inc
xchg
fimuls
insl
sti
rol
adc
pop
test
sbb
ja
enter
nop
jp
es
out
adc
or
mov
fnstenv
lret
push
inc
add
scas
shl
xchg
es
pusha
das
push
int3
mov
push
pop
ja
ficoml
shlb
aam
clc
lret
fsts
imul
push
jmp
lds
sub
mov
push
jnp
es
cmpsb
xor
push
sub
dec
inc
pusha
lret
sub
xchg
mov
rclb
mov
negl
mov
push
add
fbld
mov
std
and
insl
mov
inc
fcomp
mov
mov
ljmp
scas
dec
cmp
xor
std
lret
xor
jmp
xchg
fwait
or
stc
in
adc
les
xchg
cmc
xor
fimuls
aas
mov
xor
inc
stc
sub
xchg
and
ret
imul
push
fwait
pop
mov
add
cmpsb
shll
call
mov
sub
and
jmp
push
push
mov
jno
mov
clc
xlat
jbe
xchg
xchg
popa
or
sbb
dec
sbb
sar
jle
mov
fsubrl
sbb
inc
mov
adc
lret
xchg
sbb
je
cmp
mov
add
add
sbb
sbb
ja
mov
xchg
pushf
les
inc
mov
add
lret
shlb
cld
rolb
inc
and
mov
movsb
icebp
mov
call
sub
push
and
out
scas
andl
cs
add
jmp
mov
in
in
push
add
inc
and
and
das
mov
ljmp
fidivrs
fisttpl
insl
sub
cmp
dec
xchg
fsts
push
push
mov
mov
sub
imul
pusha
sbb
jno
aaa
adc
jae
cmpsl
xchg
xor
fmull
popa
scas
lods
pop
push
dec
enter
clc
ljmp
pop
inc
rcrl
push
add
ret
dec
cmpsb
adc
cmp
push
inc
fdivrl
dec
shrb
mov
sbb
shlb
xor
es
mov
stos
or
shrl
ja
fisubl
in
cs
gs
lds
adc
inc
fldcw
gs
mov
jno
ret
pushf
cld
xlat
aas
inc
cwtl
insb
mov
std
repz
out
int
mov
dec
je
xchg
arpl
out
stc
fiadds
xchg
je
push
xlat
mov
mov
test
fldcw
imul
and
test
cwtl
bound
std
mov
sub
cmpsb
movq
mov
add
push
inc
cmp
add
mov
outsb
int3
push
clc
dec
outsl
inc
aaa
fidivl
and
mov
push
data16
pushf
push
into
std
pop
lahf
pushf
push
mov
push
push
sub
out
jge
fcomps
bound
stos
fdiv
sub
push
pop
pop
call
ljmp
add
mov
dec
and
push
mov
mov
test
in
cmp
stc
mov
btr
xor
mov
cmp
or
inc
sub
push
nop
jbe
dec
mov
pop
adc
aam
out
push
in
rcrl
pop
mov
aas
enter
add
lock
sub
pop
or
jns
cmpsb
outsb
xor
ficompl
jge
mov
lods
dec
xor
jns
xor
lret
pop
sarl
cld
push
data16
xchg
adc
in
add
pop
inc
mov
ljmp
jno
repnz
sub
mov
dec
int3
jns
repnz
inc
pop
jno
fdivrs
bound
pop
in
data16
repnz
pop
and
pop
les
cwtd
push
int3
ljmp
xor
lahf
out
in
inc
sarb
sub
cmp
xchg
inc
pop
fimuls
adc
push
mov
pop
icebp
adc
inc
aaa
or
mov
jae
or
adc
cld
pop
push
js
ss
adc
gs
sti
push
push
sbb
or
lahf
push
in
cld
enter
data16
jne
pop
in
mov
leave
es
ficoml
flds
pop
xor
or
add
imul
es
xchg
pop
leave
xor
ret
xchg
mov
mov
lods
enter
repz
loope
inc
adc
rcrl
lcall
mov
in
sahf
push
pop
push
push
iret
pop
notl
xchg
cli
iret
adc
repz
mov
int
fiadds
pop
int
pop
clc
fildll
in
clc
cmp
lahf
xchg
scas
lds
mov
pop
aam
sub
mov
adc
sub
lcall
shrb
enter
jge
lahf
add
inc
test
iret
xchg
sti
out
imul
scas
add
hlt
outsb
inc
and
add
inc
mov
adc
out
mov
jno
jo
out
xchg
mov
cmp
add
or
cmp
aad
sub
and
mov
or
scas
jmp
cmp
fld
adc
push
xchg
xchg
jmp
or
cmp
sub
mov
xorl
rorl
xor
hlt
ror
adc
pop
cwtl
in
dec
pop
jae
mov
xchg
test
vdivpd
dec
arpl
or
les
cmp
cld
pop
push
xchg
test
cld
mov
hlt
fnstenv
cmpsb
mov
xchg
mov
rcrl
adc
and
arpl
jnp
inc
insl
lret
jmp
rorb
rol
cmp
in
int
pop
rcrb
inc
add
pop
stc
inc
dec
jg
ja
xchg
repnz
jo
adc
icebp
into
add
dec
adc
cltd
icebp
xchg
rorb
inc
sahf
pop
dec
mov
daa
loope
loope
adc
pop
into
hlt
ret
adc
adc
gs
push
out
xchg
mov
pop
mov
jg
cmp
add
scas
cmp
cmp
inc
inc
pop
push
pop
test
dec
pusha
mov
adc
sbb
add
and
xor
lds
test
adc
xor
adc
bound
or
sahf
mov
inc
jo
mov
leave
aad
pop
into
xor
loop
pop
xchg
mov
push
loopne
cmp
fcoms
and
icebp
ss
mov
fisttpll
cmp
jmp
inc
or
stc
push
dec
or
hlt
or
enter
adc
adc
jb,pn
cmp
jns
sbb
or
mov
inc
insb
pusha
std
ficompl
sbb
call
fdivl
or
subl
aaa
push
add
or
fisubrs
push
pop
enter
out
mov
cmp
sub
stos
cmp
test
sbb
stc
cltd
lds
lahf
rorb
in
hlt
lcall
dec
repnz
mov
scas
push
ja
fwait
sub
push
popa
rcll
lret
sub
jge
pop
iret
aas
popf
xor
iret
icebp
cmp
mov
fisttpll
mov
test
mov
xlat
dec
push
and
mov
out
loope
mov
push
js
inc
lret
or
testb
xor
mov
mov
loopne
adc
ds
movsb
fisttpl
int
sbb
xchg
push
into
out
sahf
aad
and
mov
call
pop
rolb
pusha
cmp
dec
jns
fidivs
mov
cmp
dec
imul
std
in
jp
cld
mov
mov
xor
push
cmp
gs
mov
rcr
icebp
jae
loop
repz
mov
mov
mov
mov
shl
insb
xlat
leave
enter
cs
jno
dec
stos
insl
fwait
cltd
inc
test
or
mov
mov
loop
xlat
push
push
fsubl
jnp
aas
bound
das
out
insl
inc
jno
lods
push
pop
pop
data16
inc
loop
push
gs
mulb
cli
mov
lret
mov
iret
out
sub
inc
dec
inc
xchg
repz
cwtl
sbbb
push
inc
add
negl
lds
xchg
insl
inc
enter
popa
pop
sbb
lock
data16
scas
sub
and
leave
xor
pop
sbb
dec
inc
xlat
inc
mov
test
stc
icebp
mov
jb
test
pop
pop
ja
xor
inc
nop
lret
fldln2
test
lds
add
iret
scas
test
je
hlt
mov
jp
and
sub
std
bound
and
das
test
scas
cmp
sbb
jg
inc
bound
dec
cltd
xchg
mov
inc
inc
pusha
push
sahf
cli
mov
outsb
pop
mov
lea
xchg
out
arpl
adc
mov
into
pop
jp
push
mov
dec
bound
jmp
fadds
repz
xchg
add
incl
mov
cltd
or
sbb
loopne
jecxz
les
push
ret
addr16
in
fwait
mov
bound
in
ss
adc
repz
sub
imul
jmp
fcmove
mov
out
ret
dec
stc
sub
push
push
stos
adc
test
insb
jl
sub
iret
lods
es
add
aaa
mov
int
sbb
or
xchg
push
mov
push
inc
cmc
mov
jmp
jno
sub
adc
es
sti
push
lds
mov
and
inc
mov
inc
ret
dec
jl
out
ret
mov
xor
icebp
adc
leave
xor
lcall
js
filds
inc
xlat
nop
push
push
movsb
add
jge
cltd
bound
test
std
xchg
rclb
mov
push
or
pushaw
int
inc
and
jb
clc
and
rclb
lods
dec
mov
fcomps
dec
xchg
outsb
lock
sub
inc
xchg
mov
or
divl
jmp
cmp
add
lret
jmp
in
in
jge
pavgw
inc
in
push
adc
fwait
pushf
jne
xchg
mov
push
pushf
add
sub
sbbb
aam
jle
cmpsl
and
pop
roll
pop
mov
shrb
scas
stos
lea
xor
filds
mov
outsb
or
int3
movsb
inc
jmp
cli
jae
jns
je
outsl
popa
or
mov
inc
das
outsl
xlat
adc
push
jbe
mov
inc
insl
jmp
cmp
sbb
jl
rclb
rolb
out
cli
inc
or
out
sub
adc
push
add
cs
in
cmp
lret
jne
or
out
repz
pop
call
xchg
adc
lcall
push
xchg
pop
xchg
mov
mov
mov
xchg
cltd
xlat
stc
inc
in
jbe
aad
mov
cmp
xchg
xlat
jp
jbe
sti
mov
mov
mov
lock
add
xchg
imulb
cmp
sarl
xor
xor
mov
adc
movsb
push
das
xchg
inc
insb
arpl
add
jae
push
sbb
pop
mov
outsb
xchg
mov
out
mov
push
fistps
push
int
adc
fldcw
pop
int3
mov
bound
mov
sbbb
xchg
fimuls
add
cmc
out
inc
das
cmpsl
jmp
outsl
scas
adc
xchg
loop
rorb
jb
dec
add
inc
cs
push
pusha
js
pop
mov
jl
les
push
stos
out
es
jmp
in
mov
imul
imul
cs
movsl
cwtl
clc
stc
mov
sub
jns
addb
and
test
cwtl
mov
cmp
dec
bound
mov
push
js
addl
mull
xchg
jo
jmp
int
mov
push
mov
cmp
mov
xchg
mov
xlat
and
adc
pop
std
adc
sarl
xlat
inc
xlat
jmp
std
jbe
pop
or
insl
fisubrl
shlb
pop
pop
fwait
and
mov
cmpb
outsl
movsl
add
call
insb
scas
and
pop
in
jmp
ja
std
adc
mov
add
pop
adc
je
loopne
jbe
clc
inc
push
cmc
fsincos
dec
andl
bound
adc
push
push
mov
jmp
scas
or
sub
lcall
hlt
jns
and
stos
out
jle
lahf
loopne
pop
incb
divl
jecxz
pop
out
push
and
mov
fdivl
out
arpl
mov
and
adc
or
scas
mov
jmp
lret
sub
cmp
and
movsl
imul
sti
mov
pop
xchg
movsb
adc
sub
and
add
xor
sbb
mov
xor
and
inc
ss
or
add
mov
or
lret
sbb
or
fsubrl
stos
jg
add
lea
pop
pushf
sbb
jl
adc
dec
loopne
cmpsl
xor
mov
mov
sti
mov
idivl
jle
add
push
sbb
in
adc
mov
in
test
push
nop
sub
cmp
xlat
ficomps
fistl
arpl
push
push
les
pop
add
pop
ds
cmp
xchg
add
dec
out
and
add
push
mov
movsb
dec
jo
inc
mov
movsb
dec
inc
icebp
vmwrite
imul
ds
mov
xchg
add
xchg
pop
bnd
add
and
push
xchg
dec
syscall
mov
xchg
pop
pusha
cmpsb
fdivrl
jle
iret
push
loopne
ds
adc
out
icebp
pop
cmp
cvtpi2ps
or
shufps
xchg
add
out
xor
or
cmpsl
mov
xor
jae
dec
xchg
aad
insb
inc
dec
cmp
pop
addl
mov
fldenv
stos
push
mov
xor
loop
push
jnp
inc
test
sti
xchg
xchg
mov
hlt
sbbb
call
mov
notb
inc
sub
jmp
inc
pushf
out
sub
mov
dec
test
push
xchg
push
mov
cmp
pusha
dec
fimull
clc
push
cmp
out
or
cmpsl
cmpsl
xor
xor
xchg
imul
add
mull
lds
sbb
leave
adc
mov
xchg
sub
popf
and
lds
test
repnz
addr16
stos
push
cltd
push
cltd
cmpsl
adc
lods
xor
cmp
push
xchg
push
leave
adc
pop
xchg
jle
xchg
and
mov
lock
push
test
cmp
stos
bound
pop
xor
ljmp
push
test
jns
dec
clc
mov
sub
test
orl
pop
imul
adc
xchg
call
sbb
mov
push
mov
fwait
mov
adc
mov
out
in
out
mov
sbb
jmp
imul
stos
pop
mov
xchg
inc
sub
push
add
adc
and
shll
gs
fwait
int
jnp
inc
mov
pushf
or
aas
xor
xchg
push
pop
xlat
inc
fsts
pop
fnstenv
push
and
scas
loop
nop
adc
mov
or
adc
pushf
in
loopne
ret
push
cmp
cmc
les
push
inc
movsb
shl
scas
pop
rcrb
or
mov
ret
lcall
jecxz
daa
shlb
fimuls
push
in
mov
push
xchg
xlat
lcall
int
mov
sysenter
cld
pop
mov
cmc
mov
sbb
cld
xchg
xor
jg
popa
and
and
mov
mov
xchg
loope
scas
mov
push
rcrb
mov
lods
mov
das
mov
push
repnz
lods
mov
imul
lahf
sti
mov
cmp
mov
movsl
or
jnp
sti
cmpsb
push
mov
and
push
xor
jno
pop
shr
stc
loopne
dec
gs
xchg
leave
call
cmp
cltd
cld
dec
scas
das
ret
mov
xor
pusha
sub
dec
daa
jo
jo
sbb
adc
or
and
sub
inc
ret
outsb
scas
mov
mov
pop
nop
xchg
push
jne
fsub
mov
cmp
orl
in
mov
arpl
dec
fsubrs
loope
add
sbb
inc
lcall
add
lds
sub
push
pop
pop
xchg
xchg
mov
adc
clc
loope
dec
jns
int
test
xchg
in
into
push
adc
sbb
adc
add
and
pop
leave
iret
cs
pop
fst
cmpsl
data16
jge
cli
lret
xor
fwait
out
lret
test
mov
jns
mov
sbb
cmp
out
repnz
test
in
mov
and
jp
pusha
pop
xor
mov
jmp
or
adc
dec
scas
xchg
or
bsr
xchg
adc
add
cltd
fs
das
icebp
xor
mov
in
into
jne
sub
mov
adc
dec
out
je
idivb
add
dec
jb
pop
dec
jne
ja
iret
insl
jp
outsl
dec
xchg
test
push
outsb
pop
xchg
int3
mov
fstpt
sarb
sub
imull
adc
or
in
dec
sbb
or
mov
mov
push
cld
cmp
arpl
lcall
dec
jg
into
stc
mov
fdivl
lock
or
test
jg
dec
nop
and
push
fsubr
add
bound
test
stc
hlt
mov
and
xlat
inc
cltd
xlat
mov
jne
cmp
xchg
rorb
cmpsb
lock
lods
add
test
sti
xchg
bound
fisttpl
push
rorb
stc
es
in
jle
sub
stos
mov
mov
outsb
out
push
inc
adc
or
clc
iret
fucomip
arpl
mov
aas
test
add
andb
test
pushf
add
push
lret
hlt
jbe
fs
mov
fadds
jbe
push
fldl
dec
push
ret
xchg
scas
popf
int
jne
pop
cmp
xor
jg
lods
loop
add
sub
cmp
test
xor
xor
inc
mov
outsb
outsb
push
adc
das
js
pop
mov
jecxz
mov
and
adc
imul
scas
dec
xchg
pusha
push
adc
cltd
jg
test
int3
and
xlat
xchg
xchg
ret
lret
test
lret
dec
outsb
lea
jne
addr16
in
loopne
negb
dec
jno
jno
shrl
push
mov
loop
push
mov
ficoml
mov
shl
add
out
mov
loope
imul
and
pop
push
iret
test
out
jae
push
lods
add
lock
adc
fistpl
push
loope
push
movsb
fwait
add
inc
rclb
xchg
es
icebp
je
repz
sbb
push
mov
cmpb
cmpsl
pop
pop
cwtl
inc
pop
dec
movsl
clc
inc
cli
adc
icebp
lea
in
addr16
out
inc
dec
xorl
pusha
test
fbstp
inc
aaa
out
test
xor
cmp
inc
rcr
into
aas
xorl
ds
das
push
mov
or
outsb
fdivs
or
in
fdecstp
outsb
mov
decl
adc
jmp
aaa
pop
fiadds
cmp
jb
jg
sub
scas
in
sub
and
cmp
lret
mov
add
insb
sub
cwtl
aad
aaa
js
mov
adc
jg
push
and
in
inc
arpl
mov
or
add
cmp
sarl
gs
lahf
xor
mov
push
inc
push
imul
or
push
arpl
bnd
xchg
nop
mov
int
mov
mov
int3
call
inc
insb
push
inc
cmp
push
out
dec
scas
rcll
or
lods
xchg
push
hlt
scas
xlat
mov
jb
call
gs
pop
mov
cmp
ret
in
shlb
xchg
xchg
push
cld
xchg
inc
sarb
outsb
clc
sbb
jg
enter
mov
movsb
xchg
dec
pop
popa
sbbl
dec
lds
sub
test
xchg
enter
jp
mov
mov
push
mov
jg
and
jnp
test
fstps
addl
lcall
lret
dec
cli
pop
xor
movsl
insb
fcomp
outsl
cmp
push
xchg
je
dec
jmp
adc
popa
out
xchg
addr16
test
and
popa
push
cmpsl
cmp
adc
jnp
cmpsb
sub
js
stc
mov
dec
or
stc
iret
fsubrs
call
stos
rcl
or
pushf
inc
push
fistpll
mov
fwait
cmp
in
cli
test
add
sub
fwait
lea
mov
inc
push
xor
ljmp
adc
fadds
icebp
inc
fstl
cmpsl
pop
push
aad
adc
or
add
mov
cmp
or
xlat
mov
enter
and
mov
jo
push
sbb
push
cmp
push
into
mov
mov
popa
and
adc
idivb
call
fnsave
aad
mov
cs
movsb
fdivp
cld
mov
int3
push
cmp
xor
fldenv
xchg
cmp
pop
cmpsl
frstor
pop
push
dec
pusha
pushl
xor
ror
lret
mov
ffree
adc
fadd
mov
adc
dec
dec
daa
notl
repnz
ljmp
pop
or
xchg
mov
in
mov
xchg
addr16
lock
bound
or
fcoms
jb
test
mov
sahf
push
xchg
xchg
outsl
mov
fildl
jle
push
pop
dec
outsl
clc
cmp
iret
mov
mov
mov
push
pop
sti
and
pop
mov
cwtl
adc
sbb
pop
repz
call
add
cmp
adc
js
xchg
call
jge
in
sbb
xlat
hlt
cmc
movsb
arpl
mov
adc
hlt
mov
sbb
jae
aam
jbe
mov
xor
shlb
push
test
sub
jg
lcall
pop
les
cmp
inc
mov
jle
cltd
dec
mov
cmp
sub
daa
popa
orl
mov
lock
cmp
insb
sub
sbb
sub
js
ja
or
outsl
icebp
aaa
mov
mov
add
mov
stc
ljmp
jmp
sub
mov
daa
neg
movsb
jle
enter
cmpsb
dec
ss
inc
inc
xchg
xorl
jmp
lock
test
aas
ds
pop
add
mov
test
loop
test
js
sti
aad
movsb
lock
lea
adc
das
jne
sub
inc
pushf
fiadds
inc
test
pop
in
in
sbb
inc
dec
or
fsubs
in
lret
icebp
or
int
scas
aaa
scas
jno
les
loopne
iret
inc
clc
pop
lods
test
mov
dec
mov
xor
jg
mov
pop
cli
dec
jbe
sub
test
in
inc
ret
adc
dec
outsb
push
mov
mov
dec
leave
fwait
in
fcomps
sub
faddl
jae
icebp
push
sbb
xor
mov
leave
inc
loope
cmp
out
frstor
int3
lods
call
dec
sub
aas
mov
pop
dec
in
pop
mov
mov
push
jbe
push
clc
mov
mov
addr16
scas
xorb
and
cmp
or
sub
sbb
bound
insb
push
pop
lcall
pop
in
sbb
andl
sub
or
pop
push
xchg
loopne
std
add
pop
jbe
push
push
das
mov
mov
sbb
pop
scas
enter
mov
push
mov
mov
aas
push
rclb
cmp
mulb
es
int3
test
dec
lods
arpl
fistps
and
inc
adc
call
lahf
int
cmp
pushf
in
shl
pop
out
imul
dec
jno
xchg
add
je
dec
addl
cld
orb
dec
or
xor
push
mov
clc
push
dec
fbld
push
test
ret
pop
sub
cmp
mov
lret
push
ljmp
pop
call
inc
ret
in
push
fstl
sub
pop
sahf
xor
push
mov
jno
or
movsb
xor
and
or
jge
jbe
pop
and
sahf
adc
add
je
sti
fchs
adc
mov
sub
and
and
dec
or
add
pop
or
push
xchg
lods
cmp
push
fsubrs
sar
push
stos
mov
sahf
jns
daa
int3
dec
scas
int
mov
sbb
stos
mov
pop
push
loopne
fnstsw
lea
out
push
add
lahf
xchg
push
dec
mov
test
cmp
aad
sub
or
sarl
inc
inc
mov
in
jmp
xor
aas
jb
aam
jae
dec
ret
xchg
dec
mov
sti
ss
sarl
leave
insl
mov
dec
lock
adc
fisttps
add
sbb
xorl
push
idivl
clc
out
cld
mov
adc
insl
shl
pop
stos
pop
pushf
imul
aad
cmp
pop
pop
mov
xor
dec
leave
fildll
mov
sti
cmc
jns
jbe
mov
mov
repnz
roll
pop
adc
aas
jle
iret
jae
xor
stos
or
dec
add
cltd
ret
scas
dec
movsl
out
stc
shrb
scas
jb
sub
insl
icebp
sbb
rcrl
test
push
push
fidivrl
sub
xor
or
lcall
add
fdivr
cmp
incl
repz
push
push
inc
cmpsl
pop
ljmp
adc
xchg
add
mov
mov
or
out
loopne
inc
and
nop
out
cmpsb
sub
sbb
call
lcall
bound
rcr
and
ret
jg
xchg
cmp
repnz
sbb
mov
add
xchg
rcll
sti
cld
mov
test
inc
cwtl
fcmovb
mul
popa
in
insb
xchg
and
nop
cld
inc
sub
test
and
sub
xchg
pushf
cmp
cmpl
icebp
loope
push
sbb
jb
mov
add
std
xchg
ficomps
mov
int3
mulb
loope
and
inc
jmp
pop
cmp
mov
lods
or
loop
mov
and
dec
adc
or
and
add
push
popa
fists
fisubl
mov
pop
pop
or
mov
popa
shrb
in
mov
cli
pushf
sub
mov
jl
sbb
fists
std
rcrb
call
mov
sarb
or
mov
jnp
jle
dec
out
pop
pushf
icebp
push
jns
dec
cld
in
rorb
rorl
idivl
int
mov
dec
pop
jg
and
or
in
mov
dec
adc
xchg
mov
mov
and
inc
sahf
in
shr
push
test
loopne
cmc
popa
repnz
pop
imul
hlt
lret
add
mov
fdiv
pop
mov
push
fnstsw
cmp
subl
push
sub
dec
aas
mov
and
hlt
out
jge
lea
jb
pop
inc
sahf
cwtl
pop
out
add
dec
xchg
dec
xor
divb
push
ret
pusha
sub
xor
fnstcw
or
std
test
xchg
movsl
xchg
rep
jno
out
and
js
push
popa
mov
sti
mov
push
push
in
sahf
lods
insl
popa
jmp
dec
outsb
lods
popa
jge
push
jp
xchg
aad
mov
mov
push
pop
pop
rcrl
mov
adc
icebp
nop
cmpsb
lret
or
or
add
rclb
stc
pusha
xchg
daa
sub
adcl
mov
mov
jb
lock
mov
adc
lahf
lods
mov
xchg
add
jp
jle
test
pop
cmp
das
xchg
movsl
sbb
ds
fdiv
setnp
dec
xor
and
loope
dec
jns
lods
nop
repnz
or
jg
daa
aad
dec
inc
jbe
sbb
leave
int3
and
fwait
out
xchg
adc
shl
pusha
mov
and
and
xchg
lret
mov
fs
push
cli
pop
pop
xchg
orb
inc
adc
pop
test
dec
mov
xlat
call
adc
jns
xor
lock
adc
sub
loopne
loopne
mov
inc
hlt
shll
je
gs
cmp
cmpsl
mov
outsb
fcompl
or
jbe
lea
inc
enter
pop
mov
fisubs
js
les
enter
les
xor
mov
das
lret
int
or
leave
int3
cli
loop
inc
sbbb
jmp
das
mov
sub
jb
aas
inc
std
cmp
in
cmc
rorb
jo
and
xchg
in
aam
out
push
scas
fsubl
inc
lahf
mov
int3
stos
pop
scas
rcll
push
xor
mov
jl
mov
mov
add
add
js
pop
testl
mov
cld
loopne
xchg
dec
or
xchg
stos
idivl
or
pop
jg
ret
aaa
jnp
mov
imul
xchg
inc
push
sbb
mov
xor
dec
cmp
xchg
testb
mov
hlt
jge
fs
push
fldcw
mov
sub
sbb
mov
jb
mov
and
out
jne
jb
test
adc
adc
test
or
or
sti
xchg
bound
in
xchg
inc
cltd
sbbl
mov
sub
lock
sub
inc
adc
cli
xchg
lods
mov
cmp
f2xm1
sub
fistl
mov
add
sub
push
xchg
dec
sub
loope
push
into
in
mov
ret
mov
and
xor
cmc
cmp
adc
aad
aam
jae
mov
adc
inc
ret
xchg
xchg
or
std
sub
scas
int3
lea
mov
and
xor
ret
inc
adc
inc
mov
test
jbe
cmp
sub
push
xor
lret
sbb
lret
xchg
mov
sbb
mov
jmp
fisubs
insb
icebp
mov
nop
jmp
jmp
pop
fldt
mov
cmp
lds
in
and
mov
sub
aaa
or
popa
dec
mov
pushf
leave
mov
cmp
int3
pusha
and
mov
and
pop
cmp
shl
lods
lds
mov
xchg
mov
mov
leave
leave
mov
pop
push
or
popa
fldt
cmpsl
cld
and
out
push
jmp
mov
lock
test
insb
pcmpeqd
scas
orb
mov
jbe
fwait
push
jne
cmp
mov
in
sar
add
pop
into
cmp
mov
jl
stc
and
jge
lret
jns
lahf
cli
mov
inc
push
dec
out
frstor
aaa
inc
mov
cwtl
mov
mov
cmp
out
int3
mov
cmp
lock
aam
adc
mov
ret
xchg
aad
enter
subb
or
sahf
aad
gs
imul
dec
shl
sub
je,pn
subb
sub
arpl
int3
rolb
gs
lds
push
pushf
addr16
mov
aad
cmpsb
insb
int
pop
lock
sbb
js
imul
dec
mov
ret
push
add
aam
call
mov
mov
shll
mov
and
repnz
stos
jg
mov
lea
nop
sub
xor
push
mov
xchg
arpl
jge
xchg
ds
xor
pop
pop
std
mov
repnz
jmp
repnz
lahf
cmpsl
rclb
jb
loop
xchg
xor
inc
push
in
cmpsb
pop
mov
adc
cmp
mov
test
jae
arpl
xor
dec
inc
or
mov
bound
sub
ljmp
push
sti
int3
xor
cmp
xchg
or
pop
fistpl
or
repz
stc
shl
mov
sub
pusha
mov
inc
sub
pop
xor
cmp
xchg
fistps
js
fidivrl
mov
scas
ja
in
add
jb
xchg
pusha
lods
mov
clc
dec
sysexit
mov
jp
mov
inc
jo
sub
les
xor
pop
ficoms
cmp
adc
lds
jns
jl
test
xchg
int3
push
popa
imul
sarl
stc
cs
loopne
andl
jns
outsb
leave
xor
add
int
fprem
loop
jecxz
xchg
adcb
xor
cwtl
call
mov
fistl
out
push
adc
pop
or
mov
xchg
xor
jns
push
jno
mov
adc
sahf
sahf
jnp
loop
data16
pop
adc
add
pop
mov
loopne
pop
push
ret
cmc
data16
aaa
add
je
cmpsl
hlt
mov
fst
decl
je
xor
adc
add
je
and
test
ds
stos
fwait
cld
sub
mov
imul
mov
jmp
clc
lahf
jno
fwait
pop
jns
rcrb
stos
stos
ret
cmpl
icebp
lock
cli
add
je
mov
pushf
mov
pusha
int
sbbl
scas
call
lcall
add
es
lahf
jmp
iret
push
xchg
mov
orb
cmp
out
xor
adc
adc
pop
jb
push
imul
imul
pop
js
gs
rclb
insl
sub
pop
xor
push
ljmp
and
aad
push
adc
push
mov
dec
inc
jle
iret
sub
adc
imulb
inc
data16
int3
std
test
pop
imul
jno
lods
stos
std
mov
and
inc
jl
push
mov
cmp
and
ljmp
cmc
sbb
jno
mov
mov
outsl
int
scas
xchg
jmp
pop
enter
pop
popa
fsub
addb
cmpsl
mov
xor
xor
adc
mov
jno
js
add
mov
mov
mov
xorb
fisttps
adc
lret
dec
cltd
push
cmp
aam
jle
xorl
push
mov
sbb
dec
cmp
imulb
fcmove
inc
pop
mov
jae
sbbb
mov
fptan
push
mov
hlt
or
repnz
lds
ret
push
mov
enter
mov
imul
in
bound
xchg
push
std
ja
jmp
in
cmp
mov
in
sub
push
dec
xor
rcll
cmpsb
mov
notl
pop
ljmp
cltd
add
int3
pusha
jbe
ret
or
lcall
cmp
enter
inc
jae
popf
cmp
xlat
jmp
in
jge
pop
addr16
dec
or
and
cmp
shll
and
or
sbb
jmp
pop
pop
ds
test
loop
outsl
cmp
std
movsb
xchg
fwait
sarb
xor
and
loopne
mov
sbb
inc
stos
push
inc
sbb
pop
sarb
or
pop
xchg
repnz
and
mov
outsb
insl
int
cmp
cli
cmpl
mov
mov
test
xchg
jo
mov
loope
push
adc
mov
and
gs
push
add
mov
into
lcall
mov
negb
addr16
jno
lret
repz
inc
cmp
clc
rol
adc
repz
xchg
out
xchg
sub
es
inc
dec
lods
sub
jl
xchg
je
call
push
inc
lahf
xor
and
cltd
push
gs
jnp
neg
insb
mov
hlt
aam
xchg
jne
jmp
shrl
xor
xchg
jae
sub
imul
xchg
sbb
cmc
js
sbb
je
lock
ss
in
inc
push
pop
and
push
adc
sbb
out
cmp
mov
out
or
hlt
pop
push
fcmovne
fcmovnbe
cmp
movsb
jne
popa
sbb
lahf
dec
fdivrl
shll
pop
add
aam
push
in
filds
mov
xor
mov
scas
and
imul
add
imul
inc
cltd
aaa
mov
dec
mov
sbb
stos
jle
cmp
mov
mov
add
mov
loope
mov
stc
mov
fistps
popa
mov
fmull
mov
cmp
dec
arpl
dec
movsb
fnsave
sahf
pop
pop
mov
cmp
pop
in
subb
push
jle
and
add
jmp
mov
sub
mov
enter
test
jmp
xorb
data16
mov
stc
in
cmp
push
mov
push
nop
mov
xchg
xor
je
push
mov
and
xchg
in
xchg
ret
jo
cmpl
or
add
into
add
push
sbb
mov
rorl
popa
adc
test
cwtl
mov
and
or
aam
lcall
mov
test
cmpsb
fnstenv
imul
addl
and
xchg
ljmp
mov
scas
xchg
adc
xchg
push
push
xchg
xchg
pusha
ret
adc
sbb
mov
or
popa
sti
cmp
sub
mov
push
mov
cmp
test
lret
add
push
dec
sub
ret
pop
test
sbb
jnp
mov
sbb
jp
add
pop
add
fdivl
xchg
mov
push
add
hlt
cmp
imul
das
ss
fimull
lret
cmovns
mov
inc
test
mov
lds
jg
jb
or
das
inc
scas
and
inc
enter
push
push
push
cmp
inc
leave
push
rcl
insb
inc
ljmp
scas
dec
repnz
stos
and
mov
jo
fsubrl
mov
stos
cmpsb
enter
fists
inc
mov
adc
add
pop
int
cmp
inc
xor
or
cmc
es
cmpsl
inc
mov
cmp
cli
orl
cmc
in
jae
lret
jge
sbb
mov
stc
or
jmp
xchg
mov
pop
cmpsl
cmpsl
mov
xor
imul
pop
mov
mov
push
sti
mov
stos
or
lock
into
sub
popa
test
mov
sbb
add
idivl
les
or
shll
fimull
jno
inc
add
inc
xor
ljmp
std
imul
iret
in
fisubrl
cmp
push
sbb
faddp
jp
push
rcll
test
pop
push
push
inc
add
inc
orb
mov
call
bound
dec
xor
jno
mov
xlat
xor
cld
or
sti
clc
dec
mov
inc
xor
jp
shlb
mov
popa
ret
cmp
push
lea
enter
add
push
sti
jg
fisubrl
pop
mov
jp
ljmp
movsb
mov
out
lods
xchg
inc
sub
orl
lahf
pusha
mov
adc
jmp
mov
and
xchg
popf
daa
sbb
ja
and
jle
xchg
shll
fwait
mov
sbb
addb
test
mov
cmp
mov
cmp
push
in
aam
aad
xor
mov
sbb
ss
sbbl
pop
dec
jecxz
out
mov
sub
lock
fcomip
cltd
add
ja
imul
cltd
lods
pop
insl
mov
jbe
cmp
pop
mov
adc
jnp
xor
outsb
add
xchg
bound
insl
and
movd
loop
sarb
scas
xchg
js
js
fcmovnbe
adc
clc
inc
fdivrl
mov
stos
sub
pusha
out
ret
imul
adc
add
pop
rolb
mov
test
dec
pop
push
pop
lods
xor
leave
imul
push
jns
ds
shrl
aad
dec
mov
loopne
xor
sbb
mov
adc
mov
fiaddl
xchg
mov
jg
adc
mov
jecxz
movsl
leave
movb
push
xor
aad
push
test
cwtl
xchg
sbb
loope
aad
jae
leave
inc
and
sahf
leave
fidivrs
fmul
frstor
neg
out
push
dec
mov
add
inc
mov
bnd
test
mov
in
insl
mov
lret
xor
stos
add
repz
adc
pop
push
pop
mul
inc
andl
jl
je
shll
stos
adc
arpl
xchg
sbb
out
mov
sbb
mov
mov
ret
je
push
sarb
mov
xor
popa
das
pusha
pop
inc
jle
inc
fld1
aad
fistpl
ja
call
js
push
jp
ret
pop
sbb
int
leave
mov
fistpll
push
roll
jle
lods
faddl
sub
mov
add
cmp
sub
std
adc
loop
sbb
dec
pop
adc
shl
lods
bound
mov
fsubrl
int3
in
out
loop
int3
sbb
sub
sahf
pop
xchg
mov
pop
xor
sub
xchg
inc
sub
loopne
cmp
push
cld
xchg
or
push
mov
sub
inc
daa
js
pop
popf
xor
popf
loopne
aas
xlat
in
adc
mov
ss
sub
fwait
iret
stc
sbb
xchg
data16
es
pop
mov
mov
fisttpl
test
mov
cmpsl
add
xor
icebp
fstpl
adc
mov
pop
popf
dec
xlat
scas
fninit
hlt
cmp
jo
and
xchg
gs
and
jnp
je
push
mov
mov
inc
cwtl
mov
ljmp
push
das
push
fisubl
jne
jbe
and
imul
mov
enter
orb
gs
push
xor
jle
dec
pop
adc
cld
or
notl
xchg
inc
add
adc
cltd
or
ret
sbb
jl
leave
push
jge
fs
negl
dec
dec
xor
pop
push
mov
adc
fistpl
sub
dec
xor
icebp
or
insl
scas
mov
lds
loopne
fstpt
mov
xchg
stc
and
testb
imul
cmp
in
cld
jo
inc
out
inc
mov
test
or
jg
dec
sbb
insb
addr16
mov
dec
mov
arpl
movsb
sbb
js
popa
gs
sub
loopne
dec
out
test
dec
lods
test
cli
ret
adc
xor
popa
stos
jl
sbb
cmpb
dec
xlat
adc
mov
cs
movsl
mov
jbe
scas
and
adc
cmp
imul
in
roll
inc
fsubrs
rorl
inc
sub
and
dec
repnz
jmp
aad
test
sbb
sahf
fiaddl
mov
dec
and
push
dec
bound
push
pop
stc
pop
or
fs
inc
or
pop
mov
test
rcll
sbb
fldcw
aas
icebp
in
insl
loop
imul
test
pop
xchg
and
mov
add
jg
out
dec
pop
repz
push
lods
or
lea
dec
jmp
and
in
push
lret
inc
xor
lods
icebp
in
push
cltd
jmp
or
cmp
jmp
xchg
addr16
xchg
addr16
mov
dec
jg
push
cmp
and
jnp
mov
mov
sbb
jb
leave
push
out
add
pop
xor
data16
in
mov
push
mov
imul
xorb
test
sar
cmp
dec
jbe
ds
mov
jmp
out
jge
sbb
sub
aaa
lds
fcom
popa
or
jmp
pop
mov
dec
add
addr16
pop
rorb
add
add
pushf
mov
push
pop
hlt
and
mov
fwait
popa
fistps
cs
push
xchg
sti
lsl
adc
pop
sarb
scas
ljmp
in
and
mov
push
or
push
or
ds
fmuls
push
jae
push
cltd
mov
or
mov
popf
divl
inc
aas
add
jbe
ret
mov
cli
sub
in
cwtl
cs
inc
fists
test
inc
cmp
call
ret
je
xor
rcr
push
lods
dec
and
lcall
adc
enter
push
xor
loope
pop
loope
push
cmpsb
out
pop
ficompl
cmpsl
dec
inc
mov
jge
je
sbb
mov
pusha
xor
push
ret
pop
jnp
movsb
mov
inc
jle
pop
cli
push
add
test
mov
sbb
out
xchg
ret
adc
jnp
pop
dec
mov
fnsave
push
fidivrs
xor
add
or
inc
out
push
inc
aas
xchg
mov
add
ja
testb
mov
dec
pop
aaa
int
in
jo
jge
and
xor
pop
push
push
and
xchg
mov
stos
mov
pushf
jge
ss
movb
and
xchg
cltd
sbb
cld
mov
dec
sahf
sarl
arpl
xor
pop
xchg
out
in
into
lea
and
or
and
xor
jb
lods
lret
adc
cmpsl
xchg
mov
lahf
daa
jae
roll
mov
push
fcom
rcll
add
push
jecxz
lret
in
je
imul
outsl
cmp
cmp
jae
sbb
adc
jae
xchg
xchg
cli
inc
xchg
adc
push
out
and
xchg
popf
repz
insl
push
cmp
xor
lcall
push
push
rcrl
mov
sub
xchg
xchg
cltd
and
or
jecxz
jle
inc
adc
push
insl
jno
test
add
movsb
sbb
sub
inc
and
das
iret
and
cmpsl
out
sbb
mov
sub
or
xor
lret
mov
jo
mov
inc
outsb
mov
mov
mov
rclb
jmp
push
add
add
jnp
cmpsb
mov
xchg
jae
mov
ret
cmc
mov
sub
lods
mov
sub
push
popa
mov
mov
or
lea
ljmp
inc
dec
les
push
je
or
adcb
aad
adc
jmp
aaa
xlat
inc
daa
add
add
cmpl
mov
out
sbb
and
lods
cmc
in
push
int
or
add
stos
cmp
inc
push
rcrb
pop
ret
push
push
xorl
mov
mulb
push
cmpsb
sub
nop
lds
xchg
xchg
rcll
adc
int3
adc
push
decl
pop
mov
sti
sub
xchg
incb
pop
mov
add
lcall
pop
das
pop
arpl
cmpsb
imul
nop
sub
ja
sbb
dec
mov
inc
mov
jge
sub
push
mov
cwtl
test
push
sbb
jbe
fistpll
or
fildl
mov
push
ljmp
daa
dec
in
sbb
inc
mov
dec
lods
sub
outsl
jno
pop
dec
sub
jae
imul
sbb
fs
pushf
ficompl
shll
test
jle
std
cmp
imul
and
ljmp
shrb
aas
adcb
movsb
in
call
faddl
sbb
jo
adc
mov
in
loopne
jp
xchg
jo
jne
mov
js
shrb
adc
push
scas
pop
lahf
xorl
xor
jne
and
daa
or
mov
mov
push
lahf
pushf
cmpsb
and
adc
fsts
mov
shl
faddl
int3
or
sub
cld
and
sbb
adc
and
cmp
pop
nop
movsb
pop
dec
int3
mov
ds
sbb
and
loop
push
jle
xor
inc
add
mov
push
dec
mov
adc
sbb
iret
cwtl
mov
or
inc
repz
js
pop
pop
jnp
dec
jl
test
inc
pop
inc
frstor
or
lcall
jns
pop
shll
lea
mov
test
xchg
cmp
orl
xor
add
scas
dec
test
daa
cs
popa
in
nop
cwtl
mov
dec
into
fadd
test
les
lcall
out
dec
pusha
push
loopne
movsl
test
inc
mov
cmc
mov
sahf
lcall
dec
in
adc
fs
iret
or
jl
daa
sbbb
jnp
movsb
dec
mov
xchg
and
out
js
lret
mov
cltd
popa
push
xor
xor
adc
xor
mov
xor
fildll
mov
push
rorb
cld
loopne
ss
dec
xchg
sarb
testl
pop
ljmp
adc
xchg
jle
sbb
sbb
dec
mov
fwait
push
mov
scas
and
push
jp
mov
push
int
je
lahf
in
movsb
mov
xchg
int
ficompl
and
ret
jnp
ss
iret
jno
aaa
mov
push
jno
mov
icebp
sub
push
nop
cmpsb
xlat
cmp
cmp
insl
and
jp
mov
cmp
and
mov
xchg
scas
lock
faddl
dec
movsl
out
jb
fwait
push
cwtl
pushf
inc
push
xchg
sar
sbb
sbb
sub
pop
cmp
pop
mov
jp
cmp
mov
jg
jno
fmul
pop
adc
or
cmpsl
loope
push
xor
fwait
and
or
into
test
test
xchg
push
lret
xorl
mov
mov
icebp
cmp
ja
jmp
mov
pop
or
ja
outsb
out
jbe
and
sub
pop
cmpsb
lret
cmpl
lods
fcomp
push
mov
rcll
ret
push
in
cmp
fiadds
jmp
xchg
adc
enter
xchg
push
push
mov
mov
add
mov
int
ret
mov
and
jno
pop
mov
xlat
mov
sahf
xor
insb
adc
mov
sbb
test
lret
jbe
in
aas
push
into
sbb
js
rcr
popl
and
fmull
jnp
xchg
sbb
xor
sarb
movsb
ss
out
loope
test
pop
mov
xlat
jb
mov
gs
cmp
aad
imul
mov
sbb
xor
mov
subl
or
sub
xor
hlt
push
mov
mov
imul
mov
xchg
inc
or
sbb
ja
mov
mov
add
mov
in
test
mov
mov
mov
dec
add
and
pop
push
divl
dec
or
shrb
mov
mov
xchg
pop
mov
lahf
lds
sbb
repz
shrb
or
jmp
push
imul
sbb
or
pop
aad
jmp
lret
repz
xor
dec
out
inc
push
xchg
jmp
or
push
cmp
lret
ret
adc
sbb
or
mov
or
mov
mov
out
adc
xlat
lahf
pop
xor
add
lcall
iret
and
mov
cmp
dec
adc
mov
and
and
rorl
inc
mov
jmp
sbbb
jge
mov
popa
inc
jae
mov
stos
add
add
mov
jle
mov
insb
sbb
mov
test
stos
xchg
jecxz
mov
in
sbb
inc
jl
dec
add
inc
mov
js
xchg
arpl
daa
rclb
sti
imul
mov
mov
and
push
jl
xchg
xchg
fisttpll
rorl
push
enter
mov
jg
sti
add
jle
push
mov
clc
cmp
pop
aam
divb
es
push
in
pushf
movsb
sahf
fists
mov
adc
roll
push
dec
pop
pop
and
fwait
pushf
loope
sbb
lret
adc
push
inc
mov
mov
push
xchg
mov
mov
jae
or
orb
lds
add
cmp
mov
js
push
pop
push
sub
xor
repz
jg
dec
rorl
and
add
outsl
add
mov
push
mov
je
jle
test
pop
popf
test
jmp
add
sub
jle
add
fistpll
ficoml
inc
dec
test
xor
mov
fisubrl
icebp
adc
jge
pop
lock
or
test
imul
mov
ja
lret
std
sahf
cmp
lock
ret
stc
adcb
arpl
popf
cmpsb
jge
or
xor
push
xchg
xchg
out
push
ret
pop
lcall
fmul
pop
insb
fdivrl
mov
clc
mov
or
push
lods
pop
cltd
fs
inc
adc
mov
mov
xchg
fdivs
inc
jl
pop
divl
rcrl
add
push
dec
stos
lcall
mov
icebp
pop
pop
mov
push
test
jecxz
xchg
scas
fs
mov
stos
mov
daa
rclb
int
pop
mov
scas
mov
out
push
int
fs
lcall
aaa
dec
cmc
into
std
jbe
mov
fwait
dec
jge
xor
je
and
adc
aas
fldcw
repnz
cld
jnp
shlb
xchg
sub
xchg
mov
inc
cltd
fdivrs
sub
scas
jo
xchg
pop
adc
xchg
mov
loopne
pusha
sub
sbb
out
jl
add
add
pop
xor
push
sbb
xchg
or
jmp
test
pop
gs
paddw
add
jo
cmp
push
test
pop
mov
cmp
mov
sub
popa
and
bound
add
mov
sub
mov
dec
dec
mov
sbb
rcr
bound
stc
out
xchg
ss
mov
stos
push
inc
out
lods
mov
cmc
test
lods
xor
xchg
or
jg
inc
cmp
popa
push
data16
push
jno
dec
movsl
xchg
xchg
mov
xchg
insb
mov
adc
incb
jae
shll
imul
mov
jmp
mov
rclb
daa
pop
fisttpl
fdivr
xchg
dec
inc
cmpb
insb
cmp
push
add
xchg
aam
sarl
imul
outsb
jnp
aad
pop
dec
jnp
nop
mov
mov
rcrl
pop
mov
imul
faddl
lock
stos
dec
shlb
or
jb
test
cmp
loopne
test
arpl
sub
je
fistl
fdivs
add
or
pop
in
and
sbb
jb
cmpsb
mov
mov
add
rcr
sbb
lcall
lds
mov
xchg
adc
mov
add
int
adc
xor
push
rcrb
mov
je
loope
or
movsl
adc
jo
push
adc
sbb
pop
pop
cmpl
push
lret
insl
add
jle
push
or
push
ret
mov
cmpsb
adcb
and
popf
xchg
bound
and
add
add
xchg
pop
cmp
mov
ljmp
jae
out
lcall
jg
fs
cmc
dec
std
popa
xchg
fs
pusha
xor
lods
sbb
xchg
jge
imul
loop
repz
jnp
sti
mov
adc
test
cs
test
dec
cmp
insb
mov
out
or
xlat
dec
cltd
shll
add
pop
mov
imul
inc
insb
adc
pushf
mov
rclb
inc
xchg
iret
dec
sahf
dec
and
jecxz
push
aad
dec
sbb
cwtl
cld
lea
xchg
jp
repz
cmp
push
popa
int
popa
insl
leave
cltd
fiadds
adc
imul
push
mov
ret
mov
rcrl
insb
mov
js
xor
pop
mul
mov
das
cmp
cld
push
add
mov
cmc
push
adc
pop
jg
cmp
in
cltd
cmpsl
or
out
cmc
in
out
out
mov
push
xor
mov
cmp
movsb
shlb
push
lea
jp
popf
and
std
xchg
shl
xchg
mov
or
adc
dec
dec
inc
clc
repz
inc
dec
rcll
inc
mov
lret
popa
cmpsb
inc
int
fisttps
dec
rorl
movsl
sbb
popf
sbb
out
mov
cmp
jle
sub
or
dec
jecxz
push
negl
mov
jns
add
push
fs
dec
push
mov
das
inc
and
push
jae
jb
mov
xor
insl
daa
cli
scas
je
loope
xchg
dec
sub
rcrw
mov
fistpl
push
loop
inc
add
pushf
pop
sahf
popf
out
outsb
xorb
lock
add
sub
andl
pop
lds
xor
cmp
dec
jg
test
adc
arpl
outsb
xchg
sbb
mov
push
stc
or
and
cmp
pop
clc
add
ljmp
pushf
xchg
add
xchg
jo
and
pushl
jmp
into
dec
inc
jb
scas
sub
in
arpl
fs
repz
and
mov
mov
lret
adc
pop
loop
xchg
loope
dec
ror
sahf
jge
sbb
sti
mov
ljmp
jle
sub
inc
push
pop
shlb
das
imul
sbb
pop
sbb
xchg
adc
popf
test
bswap
mov
mov
add
or
repnz
je
shrl
call
std
fcmovne
xchg
das
daa
xchg
mov
dec
sbb
or
mov
stc
mov
je
je
xlat
dec
ret
mov
insl
out
dec
push
jne
or
inc
scas
mov
add
lock
or
xlat
push
and
out
mov
xor
jp
movsb
inc
inc
imul
jle
cmp
add
fs
pop
inc
xor
adc
mov
stos
test
push
ljmp
loope
repnz
xchg
icebp
cmp
loopne
stc
jge
andb
cli
jg
aaa
pop
fbstp
int
ds
stos
add
sbb
loop
cwtl
xchg
adc
lods
cmp
inc
test
push
or
fsubl
jmp
pop
je
lods
pop
jb
dec
ret
fisttps
add
aad
cmp
jae
lcall
fidivl
fistpl
cmp
and
or
xchg
movsl
xchg
mov
jp
insb
jecxz
rcrl
fstps
or
mov
cmp
pop
lret
aas
bswap
mov
or
addr16
cli
repnz
dec
dec
inc
dec
sbb
pushf
push
pop
xchg
xor
lock
out
rorl
lret
ret
dec
sti
shlb
pop
add
xor
sub
add
in
push
xor
or
sub
or
jnp
pushf
push
iret
inc
sbb
mull
rcll
lock
xor
jno
mov
lret
jo
xor
insb
orps
pop
and
dec
cmp
adc
sub
daa
call
mov
lret
lret
enter
mov
pop
into
or
sub
cmp
data16
inc
xchg
enter
stc
add
rcr
iret
sbb
rclb
aas
movl
mov
xor
in
cmp
movsl
sarb
rclb
push
call
sarb
test
lret
insb
stos
ret
mov
les
fs
or
not
ret
lahf
fwait
add
int3
push
xor
jns
mov
jecxz
jae
repz
and
aaa
xor
sti
ljmp
lea
push
push
shrl
add
add
ljmp
sub
aad
in
lcall
xor
mov
out
fbstp
sti
aaa
fldenv
test
lea
aam
mov
fcmovnb
pop
mull
imul
lcall
movb
sbb
das
adc
push
pop
sbb
cmpsl
xlat
daa
rclb
adc
adc
andb
iret
push
jb
mov
mov
insb
test
outsb
add
cmp
je
mov
jge
jae
xor
mov
xchg
inc
lock
pop
push
lods
xchg
arpl
pop
lret
jecxz
ucomiss
cwtl
mov
rcrb
mov
or
fbstp
push
jmp
addb
cwtl
imul
pop
test
stc
lret
out
jae
push
fimull
dec
mov
cmp
dec
imul
dec
and
aam
mov
pusha
xor
test
xorb
add
pop
or
popf
push
mov
mov
push
sub
mov
pop
imul
lock
mov
pop
mov
jb
frstor
sub
cli
imul
mov
xchg
cmp
lods
push
sub
adc
add
and
add
xor
jb
aam
pop
or
mov
mov
xchg
push
pop
das
add
mov
mov
or
repnz
add
mov
mov
cmp
push
scas
push
jno
cmpsl
mov
mov
push
jl
push
adc
mov
pusha
or
mov
fcomp
rclb
add
sub
bound
lret
adc
mov
gs
jg
lds
std
test
mov
sbb
lods
mov
ret
mov
jo
add
outsb
and
pop
out
jl
mov
push
and
imul
mull
lea
mov
xor
mov
lods
push
cltd
rclb
pusha
mov
jnp
add
mov
mov
mov
bsr
sub
icebp
xchg
fsubrs
push
mov
cmp
xor
and
push
dec
push
inc
lock
out
stos
pop
sbb
out
or
pop
xchg
jno
jae
out
fisttps
lahf
inc
or
ret
pop
adc
addr16
push
push
fisubrs
or
fbstp
cmp
xchg
repz
push
push
out
mov
adc
inc
lea
inc
in
dec
scas
xor
mov
lock
mov
or
lock
loopne
movntps
adc
jae
popf
lods
decb
sarl
aaa
vpcmpgtw
mov
out
test
rcrl
pop
and
lods
xlat
inc
scas
and
mov
ja
rcrl
fst
ja
pop
sbb
mov
bound
cmpsl
stos
xchg
js
mov
pop
scas
jae
xchg
mov
and
movl
xor
imul
divb
lret
sbb
sub
adc
sti
mov
lock
stc
xor
jle
adc
ficoml
add
jge
and
jns
je
mov
scas
rcr
cmp
fnstenv
inc
lods
pop
insl
push
adc
cmpsb
cltd
push
jl
cmp
roll
sbb
shlb
negl
pop
sti
fs
mov
pop
mov
add
add
loop
adc
data16
out
into
push
icebp
cmp
imul
cmp
imul
mov
fprem1
lods
sub
xchg
stos
cwtl
mov
sti
jb
or
lret
enter
cmp
jecxz
lcall
jb
pop
pop
insw
std
xor
pop
mov
scas
aas
push
dec
mov
cmp
fdivrl
rcll
or
add
mov
insl
addr16
fdiv
xchg
jl
in
mov
jg
test
xchg
push
stc
adc
test
shrb
inc
sbb
icebp
scas
jg
xchg
pop
fmull
xor
jnp
lock
ja
mov
dec
test
pop
xchg
movsl
push
repz
add
mov
and
ds
sub
push
out
mov
xchg
and
dec
mov
add
dec
dec
stos
xor
int
add
ja
sub
mov
push
push
pushf
bound
mov
call
xor
dec
std
or
jmp
mov
mov
test
push
add
repz
jmp
push
sahf
ret
ss
adc
mov
pop
mov
test
xor
and
xor
jae
pop
mov
dec
ror
xchg
jl
outsb
xchg
pop
adc
inc
xchg
xchg
xchg
mov
out
mov
shl
mov
hlt
btr
fwait
cwtl
jp
stos
mov
sbb
clc
mov
test
xor
inc
shl
popa
xor
pop
fsubl
pop
pop
jecxz
push
cmp
mov
or
sbb
mov
sub
or
or
sbb
test
jno
jp
xor
pop
jne
add
fidivrl
test
enter
pop
adc
cmp
lea
or
test
and
cmp
adc
adc
imul
push
pop
mov
pusha
mov
aad
fmuls
jno
mov
xchg
popa
scas
aas
lcall
xchg
jmp
movsb
adc
data16
and
mov
pop
fistpll
mov
push
lea
push
mov
mov
lds
xor
mov
dec
subl
jmp
jbe
pop
les
and
mov
lds
mov
insb
inc
test
sub
jb
sbb
and
jmp
jmp
inc
insl
pop
jo
push
shlb
aam
in
mov
fstpt
stc
hlt
out
hlt
out
lret
scas
or
outsb
mulb
mov
hlt
dec
inc
and
into
adc
mov
push
jmp
mov
mov
and
into
or
add
and
repz
scas
push
xlat
repnz
test
mov
cld
std
lock
lods
pop
cmp
pop
add
pusha
leave
jne
iret
sub
sbbl
push
jmp
iret
cld
lock
add
cltd
mov
push
pop
lea
mov
and
cltd
fcompl
mov
cli
mov
das
add
cmc
push
pop
ds
adc
inc
jl
ja
push
jns
dec
int3
xor
cltd
jg
jno
xor
jbe
fcmovne
test
jb
xor
push
lea
mov
xchg
hlt
fistpl
push
cld
dec
into
inc
shlb
jbe
insl
popa
xor
cmc
inc
mov
push
sbb
or
and
insb
sbb
incb
adc
in
out
pop
jle
insb
in
lret
lret
ret
mov
and
adc
ljmp
fcmovu
add
sti
lock
pop
dec
mov
test
movsl
cs
cmc
push
inc
add
andl
inc
lods
cwtl
fildl
mov
sub
push
mov
es
sub
stc
inc
xor
jno
cmpsb
mov
add
arpl
add
leave
or
xchg
sahf
mov
ds
xlat
add
mul
iret
or
andb
xor
popf
push
loope
shlb
xorl
jbe
cwtl
cmp
ja
sbb
aam
mov
pop
addr16
pop
and
cli
fldcw
jne
or
inc
mov
xor
inc
jno
mov
add
sbb
push
lcall
scas
sbb
adc
loop
sbb
mov
add
xchg
sti
push
push
rorl
push
lcall
int3
cwtl
fisttpll
daa
dec
loope
mov
sbb
jno
mov
push
mov
push
sub
or
std
jle
iret
int3
jns
lds
sub
adc
pop
pop
xchg
insl
xchg
push
mov
add
stos
bound
loopne
sbb
sbb
cmpl
inc
and
fadd
aad
out
mov
push
imul
repz
in
adc
xor
sub
bound
xchg
push
cmp
cmpsl
or
lods
in
lods
mov
lods
xchg
adc
adcb
jno
or
out
fildl
cmp
xor
lcall
mov
mov
pop
shrb
and
das
xor
adc
jno
add
mov
cmc
cli
mov
jecxz
or
fsubrp
mov
andl
and
pop
jae
in
and
loopne
cmp
daa
or
push
loopne
outsb
dec
lds
mov
pop
jge
and
push
mov
xchg
xor
xor
ds
aad
jae
push
sub
ljmp
cmpsl
pop
jp
sti
sti
adc
lcall
and
mov
insb
lret
fwait
and
cmp
sbb
js
mov
pop
jb
rep
jecxz
pop
int3
mov
call
out
int3
mov
mov
mov
lock
fsts
mov
push
aam
push
mov
pushf
pop
imul
stos
xchg
adc
aaa
cmc
cmpsl
push
and
loopne
mov
mov
fstps
sub
inc
inc
out
stc
and
out
stos
shrb
mov
sub
nop
stc
arpl
test
es
push
jl
mov
aas
repz
or
scas
xchg
push
cmp
jl
insl
mov
and
inc
fmuls
xor
sahf
int3
ss
div
or
push
jnp
fdivp
test
mov
adc
cmp
movsl
xor
pop
add
int3
xchg
cmpsb
idivl
add
into
adc
lahf
xor
adc
xchg
xor
pop
cmp
dec
insl
adc
ss
jp
push
push
add
xchg
lret
adc
test
mov
add
bsr
lcall
sub
jmp
int
cmc
out
orl
and
push
in
subl
mov
ds
mov
cmp
loop
mov
xchg
addb
and
push
mov
and
push
shrw
sub
in
loope
add
xchg
cmpsb
pop
push
mov
sti
scas
mov
cmp
or
out
pop
pop
sbb
mov
xchg
sub
andl
and
and
mov
out
sbb
pop
fstpl
roll
test
pop
rorl
fldl
mov
outsl
push
lcall
adc
jmp
cmp
or
xchg
cmc
xchg
jmp
loope
das
fs
push
int3
push
mov
fs
outsl
jne
jp
in
out
mov
rclb
add
call
fwait
xor
jb
dec
sbb
push
fsin
ds
rorl
cmp
pop
mov
dec
push
lods
push
or
jecxz
shll
lret
sbb
rolb
mov
aad
jb
icebp
fiaddl
pushf
adc
test
cld
inc
mov
stos
aad
cmpsb
mov
push
stos
stos
adc
and
in
pop
scas
movsl
sahf
add
clc
out
mov
dec
hlt
scas
sarl
aad
roll
das
mov
sbbb
sbb
push
inc
cmp
mov
outsb
loope
mov
push
push
fstps
sub
push
pop
iret
sti
fwait
out
repz
fdivrl
fdivl
sub
sbb
sub
jle
mov
mov
or
js
jae
mulb
ja
push
mov
imul
sub
jbe
inc
push
int3
mov
jmp
jo
mov
pop
test
lcall
stos
loop
mov
add
pushf
test
mov
es
xor
std
es
or
xchg
sbb
dec
lods
adc
push
arpl
loop
xor
stos
inc
sub
push
mov
ret
mov
xchg
bound
sbb
loope
xchg
inc
stc
mov
add
fbstp
mov
inc
sarl
insb
enter
mov
jno
test
jle
xchg
loopne
jecxz
std
adc
xchg
add
push
and
out
je
fwait
cmp
xor
adc
shlb
loope
mov
pushf
jns
pop
andl
outsl
jb
mov
and
sti
cld
orb
mov
push
jbe
cmp
dec
inc
fcomps
or
mov
cmp
xchg
mov
mov
xchg
enter
fdivs
addr16
sarl
mov
sbb
test
push
in
cmpsb
fs
in
outsl
lea
xchg
sbb
pop
and
mov
xchg
jns
cmpb
dec
sahf
xchg
mov
std
loope
je
lahf
xor
add
dec
outsb
fistpl
rcrl
insl
in
insb
or
ret
jne
fisubrl
out
sub
cmpsl
push
pusha
inc
and
ja
pop
mov
mov
bound
xchg
add
shrb
callw
inc
xchg
inc
push
sar
and
fadds
out
and
mov
xlat
lods
int
mov
stc
fcomps
out
ljmp
adc
lds
cmpsl
test
or
jno
sub
jge
aad
jle
cwtl
clc
mov
dec
dec
sbb
or
out
xor
leave
mov
rol
sarl
pop
cmp
xchg
outsl
aad
mov
mov
ds
shr
mov
fidivrl
jae
sub
imull
jb
aad
mulb
pop
cmc
pop
aas
adc
mov
push
xchg
cltd
cmpb
pop
xlat
push
lcall
sbb
sbb
push
jae
lods
pushl
sbb
push
lods
in
or
push
pop
jb
and
push
stc
dec
fcoms
jl
shr
popf
pop
loopne
mov
inc
adcl
add
xchg
outsl
mov
mov
cli
aad
jecxz
mov
sub
stos
rorl
lods
test
xchg
sarl
fwait
dec
sar
xor
lds
ja
pop
je
cs
in
leave
adc
xchg
out
lods
lea
push
bswap
icebp
mov
xchg
dec
push
and
cmp
sbb
sub
subb
push
out
rcl
imul
stos
inc
pop
sub
pop
and
int
mov
in
sub
cmp
daa
or
out
out
ret
cwtl
dec
inc
repnz
mov
mov
nop
rorl
enter
das
out
int
inc
outsb
xchg
push
mov
mov
rol
xchg
xchg
leave
pop
pop
mov
jecxz
rcrl
jge
jmp
addr16
pop
push
push
fs
mov
outsb
add
mov
fildll
cli
dec
adc
sbb
cmp
lds
jge
je
add
subl
cltd
dec
stc
push
mov
fsubl
add
mov
pop
into
xchg
stos
inc
or
sub
rcr
sub
adc
les
out
cmp
add
jmp
in
add
push
stc
in
fstpl
ljmp
lock
std
inc
and
shrl
in
jb
pop
test
jge
addr16
adc
inc
and
xchg
jns
xor
jns
xchg
into
xchg
xchg
push
cmpsb
nop
sti
aaa
cmc
fidivrl
les
pop
sahf
xchg
fisubrs
mov
xchg
add
xchg
int3
adc
fcmove
scas
dec
jb
cmp
mov
xor
sbb
jp
lock
popa
jmp
push
mov
adc
mov
sbb
scas
dec
lret
shll
roll
jge
push
lods
cmc
and
mov
test
jne
fsubs
sti
or
je
dec
or
adc
jmp
les
cmpsl
jmp
int3
or
cwtl
mov
fisubrl
inc
outsb
das
cwtl
pop
shlb
mov
add
call
xchg
repz
dec
mov
ret
cltd
mov
loopne
pop
mov
adc
mov
xor
hlt
ja
mov
pop
movsb
fwait
cmpsb
pop
mov
and
pop
lret
xor
stos
addr16
repz
movsl
jmp
cld
pop
stc
sbb
cld
cmp
cmp
xchg
int
and
shlb
pusha
mov
xor
ror
and
jmp
jl
hlt
mov
and
add
bound
mov
xor
fisubl
jnp
mov
xchg
xchg
xchg
xor
hlt
insl
inc
dec
mov
inc
mov
or
mov
xor
test
cmp
jmp
add
jge
mov
pushf
mov
roll
fistpll
pop
and
sbb
jecxz
js
and
js
cmp
cmpsl
sbbb
fcmovbe
test
mov
push
xchg
stc
adc
add
sub
es
add
lods
xlat
sbb
outsb
fsubrp
insl
sbb
jecxz
sarb
gs
cld
cmp
popa
fstps
outsb
les
out
xchg
out
cmp
sbb
mov
lods
ret
flds
add
sahf
js
mov
js
push
inc
xchg
popf
in
pop
xchg
dec
int
push
sbb
sbb
xchg
imul
jge
mov
movsl
lahf
lret
fistpl
push
sbb
dec
fcoml
call
cld
jne
push
into
xor
xchg
orb
jl
mov
aad
js
jle
call
ret
add
shr
xor
and
dec
call
loopne
rcrl
aad
aam
and
lret
fmuls
lods
mov
or
pop
stc
ljmp
out
or
push
shrb
dec
bound
sbb
inc
repz
enter
fwait
jp
ja
mov
fstpl
push
and
inc
mov
shr
jecxz
enter
or
popf
inc
xchg
cmp
js
jg
mov
pop
fs
sub
fwait
pusha
sub
cltd
pop
mov
clc
xchg
bound
xor
push
sub
push
and
call
inc
fidivrs
mov
ret
scas
xor
inc
aad
in
adc
mov
mov
mov
xchg
cmp
mov
or
andl
fdivr
mov
push
jbe
xchg
or
inc
add
xchg
out
lcall
pop
stos
aaa
jo
loop
and
or
bound
push
cmpsl
xlat
in
ret
pop
jge
sub
repnz
cltd
or
and
push
ja
jl
cmp
and
xorl
repnz
insl
xchg
add
icebp
dec
lret
std
ds
xor
mov
repz
lret
fwait
xor
loop
loopne
idivl
fwait
mov
js
pop
sbb
mov
xchg
repnz
jne
fldl
jno
dec
or
pusha
jl
inc
sbb
cltd
ret
dec
sbb
push
cmp
inc
scas
xchg
cld
xor
ret
mul
xlat
jo
jecxz
cltd
and
je
or
pop
or
and
and
stos
add
rcr
loop
aad
pop
imul
cld
jle
push
jecxz
or
fdivrp
sti
bound
popl
ret
lret
rorl
dec
xchg
lcall
sbbb
xchg
or
rolb
mov
or
dec
ret
movsb
ss
imul
gs
rolb
popa
push
or
push
inc
addb
loopne
xor
test
imul
lret
push
xor
shlb
decb
pop
xchg
in
es
pop
push
dec
xor
fldenv
jae
or
sub
jge
lock
mov
push
pop
mov
lods
inc
test
daa
jge
movl
mov
loope
or
pop
adc
icebp
fsubp
mov
ss
ret
mov
arpl
je
or
xor
pushf
call
cld
push
and
iret
cmp
ficoml
or
jae
jne
push
movsl
cmp
fimuls
enter
scas
mov
imul
sub
incb
popf
mov
jg
pop
mov
vpxor
pop
mov
sub
mov
test
incb
mov
dec
adc
pop
add
pop
adc
dec
subl
into
addb
push
sti
mov
mov
pop
orb
xchg
shll
pop
sbb
les
ret
fwait
cltd
push
fdivrl
ljmp
sub
stos
dec
xor
inc
cbtw
and
xor
xrelease
js
clc
cli
sbb
push
test
inc
jnp
and
or
in
and
xor
and
xchg
and
sbbl
jle
pop
ljmp
sbbl
xchg
rcrl
jbe
cwtl
aad
mov
xchg
jecxz
mov
and
rorb
sbb
mov
inc
jo
hlt
mov
add
adc
cli
daa
xchg
stc
jmp
inc
and
gs
je
sbb
mov
lods
and
test
roll
xor
pop
ret
pop
inc
mov
popa
andb
lcall
ret
push
xor
push
lahf
jb
inc
cli
dec
insl
xor
insb
in
mov
xlat
out
mov
xorb
loopne
imul
adcl
out
pushf
jbe
adc
test
aas
inc
lret
lods
mov
ret
aad
xchg
sub
adc
and
test
into
pop
shlb
divl
xor
les
sub
xchg
mov
fwait
push
clc
andb
frstor
leave
hlt
sbb
ds
mov
aad
sub
sahf
mov
push
xchg
dec
movl
aam
sahf
sub
mov
add
sub
jno
lahf
movsb
xchg
push
dec
cmpb
insb
jmp
adc
in
roll
in
shlb
das
sbb
daa
stc
test
xlat
push
mov
mulb
pop
scas
xchg
push
int
outsb
subl
pop
sub
add
loopne
dec
fnop
dec
fldenv
inc
mov
or
or
push
add
out
jae
push
pushf
pushf
cmp
dec
mov
lcall
ss
dec
int3
fistpl
and
ljmp
iret
adc
inc
stos
mov
daa
sbb
test
icebp
sub
push
in
leave
xchg
push
nop
repnz
test
in
testl
pop
xlat
aaa
adcl
sub
mov
push
fidivrl
adc
mov
mov
loop
in
in
daa
or
mov
dec
movsl
lret
cmp
aaa
pop
in
push
mov
xchg
adc
popa
mov
lret
sahf
jle
jb
mov
stos
jecxz
lods
adc
cmpsl
inc
out
imul
push
in
mov
mov
ficoms
push
sbb
pop
mov
inc
sub
xor
jb
xchg
sub
jle
mov
lret
and
adc
fnsave
inc
jmp
rcrl
or
xchg
mov
mov
jb
aad
push
push
in
sbb
xlat
mov
xor
lock
daa
mov
cmp
pop
cmp
inc
fs
lahf
jmp
sahf
xchg
mov
scas
lock
pop
aad
hlt
mov
enter
push
cmpb
pop
or
xchg
inc
push
into
cmp
mov
and
sub
cmp
mov
loop
hlt
in
xor
push
and
xor
movsb
in
scas
daa
mov
out
repz
xchg
pop
movb
lea
mov
pop
std
add
pop
int
cmp
jp
pop
add
pop
jle
and
in
and
rcl
xchg
inc
adc
mov
int3
movsb
pop
lds
pop
adc
add
aas
lret
add
cmp
dec
mov
loopne
pop
cmp
int
inc
mov
jmp
ja
sub
in
in
xchg
scas
jbe
ljmp
sub
mov
aas
rcll
ds
pop
xor
sub
lods
dec
imul
cli
cmp
or
mov
push
ja
xchg
sbb
imul
or
icebp
aad
movups
shlb
mov
mov
ljmp
jbe
sbb
xlat
jle
jbe
aas
lret
mov
cmpsb
jle
aas
jmp
mov
push
dec
leave
ds
mov
popf
and
push
jns
pop
pop
idivl
out
xor
xorl
xor
orl
inc
jo
nop
sbb
out
xor
mov
xchg
inc
cmp
int
addr16
repz
lods
rorl
pop
jle
cmp
xchg
or
xchg
loopne
cmp
lods
nop
or
mov
push
stc
mov
stos
stos
cmp
cmp
cmp
xchg
sub
sub
imul
ss
ja
push
sbb
in
fwait
jb
in
outsl
xor
sti
ja
icebp
addr16
dec
out
dec
int3
aam
test
xchg
adc
mov
sar
ret
adc
push
das
inc
fwait
add
or
or
shrb
faddl
or
lods
sti
movl
mov
jp
imul
mov
add
mov
int3
stos
dec
xor
in
jg
pop
stc
dec
inc
mov
lods
fistps
jno
cmp
out
sti
xor
xchg
xor
cli
jnp
and
inc
cmp
outsb
sbb
sub
sbb
sarb
pop
sub
mov
jae
and
test
adc
sub
js
sub
and
mov
cmc
rclb
sub
arpl
out
rcr
cmpsl
pop
mov
lahf
popa
push
xchg
add
pop
loop
mov
lea
inc
scas
ds
sahf
fisttpll
fidivrl
dec
add
popf
addr16
insb
dec
cltd
dec
outsb
loop
and
lods
in
orb
mov
cmpsl
fwait
or
loopne
dec
std
inc
cs
cltd
filds
int3
adc
test
jae
mov
aaa
pop
popa
addl
mov
insl
inc
ret
das
aaa
fidivrs
mov
push
cltd
arpl
xlat
hlt
cmp
jecxz
xchg
imull
mov
out
cli
lahf
ljmp
xchg
cli
jns
scas
js
cli
pop
sub
xchg
xor
stos
loope
rclb
mov
ret
jb
mov
pop
repnz
jae
mov
sub
sub
mov
les
pushf
je
das
sub
je
sti
jle
mov
lods
rorb
pop
xchg
shrb
xchg
adc
mov
jb
xchg
gs
jb
pop
jle
sbb
mov
cmp
mov
sbb
frstor
xchg
inc
lds
inc
push
jmp
or
xchg
imul
clc
inc
mov
push
clc
add
xchg
pop
xchg
mov
mov
mov
xor
dec
fstl
push
repnz
shl
mov
gs
lock
adc
lret
mov
sbb
ds
sbb
insl
insb
fwait
pop
pop
push
shlb
ljmp
je
sbb
scas
iret
jb
ljmp
fs
inc
or
ja
mov
mov
cmp
test
inc
pop
sub
cmpsb
pop
jbe
xor
jo
enter
or
arpl
mov
lcall
xchg
adc
jmp
inc
xchg
inc
into
mov
loope
sahf
dec
dec
mov
sbb
das
dec
shrl
push
scas
sahf
cmp
inc
dec
pop
add
movsl
jge
mov
or
mov
jg
cmpsl
push
nop
int
mov
call
aad
lret
pop
jne
stc
ja
aad
arpl
inc
ret
rcrl
xor
cmp
cmp
cmp
int
jecxz
dec
mov
imul
insl
icebp
jecxz
jne
dec
mov
fstl
loop
stos
mov
lret
sti
xchg
cmp
in
mov
cld
and
sbbl
mov
outsb
xchg
mov
inc
xor
in
sub
dec
test
cmp
data16
mov
adc
mov
pusha
xchg
or
sbb
cmc
cli
nop
mov
mov
mov
fs
cmp
icebp
mulb
cmpl
jo
xchg
inc
rclb
push
xchg
adc
push
fcmovnb
xor
and
movsb
jge
mov
mov
test
mov
dec
outsb
lcall
mov
or
and
inc
popf
jae
sbb
mov
mull
sbb
outsl
or
jl
pop
out
int3
clc
mov
sub
test
ja
jae
pop
mov
mov
fs
dec
lds
push
cmp
test
add
lret
mov
mov
pop
cld
or
dec
adc
ljmp
xlat
jp
iret
repz
mov
jb
mov
inc
out
aam
icebp
xor
mov
jp
mov
mov
pop
push
mov
into
push
fmul
sbb
in
push
or
cmpsb
cmp
gs
xchg
rolb
mov
pop
mov
xlat
repnz
dec
mov
adc
mov
pop
fnsave
rclb
or
adc
cli
mov
call
mov
fwait
push
imul
push
in
cmp
or
sbb
fcompp
jbe
xchg
or
jo
stc
xchg
cwtl
xlat
and
jg
icebp
imul
cmc
cltd
push
push
dec
sbb
sub
sarb
inc
mov
decb
adc
das
cli
jbe
or
call
out
xchg
sub
lea
test
int3
das
jno
nop
bound
mov
stc
ficompl
mov
outsl
movsl
cltd
stos
mov
push
data16
sub
push
and
mov
and
and
xor
scas
mov
adc
sub
lahf
pop
sub
mov
or
roll
sub
call
and
sarb
lods
fsubl
sbb
sbb
dec
sbb
or
popf
stos
cmc
jb
sbb
test
hlt
mov
lret
add
pop
ret
adc
fwait
xchg
xchg
jo
flds
cmp
mov
dec
fsub
jne
gs
negb
jo
subl
jb
push
xchg
js
aad
mov
leave
fmulp
pop
or
mov
or
jbe
xchg
icebp
xchg
xor
push
shlb
lret
xchg
fsubl
fisttpl
xchg
inc
and
or
xlat
dec
mov
loope
test
pop
mov
sbb
iret
pop
dec
cs
pop
ja
mov
xlat
push
jne
lcall
fdivrs
mov
lahf
mov
and
push
daa
imul
xchg
pop
cmp
add
jbe
fwait
and
adc
movups
dec
xchg
addr16
pop
je
push
fs
push
cmp
cmp
mov
neg
xor
shld
adc
fbstp
cmp
mov
add
sarl
push
repz
stos
push
pop
bound
and
repz
jno
pop
jecxz
rcrb
cmpsb
fcmove
stos
gs
int3
scas
jb
sbb
lods
loop
mov
rcrb
fwait
leave
sbb
mov
sbb
push
popl
jl
xor
push
loopne
adc
into
ret
inc
imul
xor
ret
mov
sub
lods
mov
push
pop
dec
imul
and
adc
cmp
cmp
sarl
mov
xchg
add
push
jle
pop
pushf
roll
jns
push
xchg
and
xchg
xchg
pop
xchg
adc
out
mov
scas
adc
fidivs
cmp
jae
jg
jmp
decb
pop
mov
mov
movsb
ret
xchg
mov
test
roll
xor
push
pop
pop
push
or
outsl
or
sub
out
jp
lahf
repnz
lcall
sbb
and
push
push
cmp
out
out
into
mov
pop
mov
adc
rcll
pop
mov
nop
mov
rcrb
iret
aad
adc
sbb
sti
jmp
inc
pop
stos
rcrb
xchg
fmul
test
add
pop
adc
sub
push
data16
ds
gs
movsl
out
push
cmp
inc
mov
adc
sbb
mov
fsubr
dec
test
fisttpll
push
cwtl
dec
add
mov
out
xchg
push
lds
popf
out
xor
xchg
out
xchg
out
inc
push
jecxz
addb
and
inc
int3
enter
adc
push
add
adc
repnz
mov
imul
fisubs
and
mov
orl
mov
or
cmp
pop
jo
es
push
in
rcl
push
xlat
xor
pusha
xor
int3
push
mov
and
mov
out
mov
adc
mov
sbb
hlt
mov
stos
std
jne
xor
data16
std
mov
mov
cltd
movsb
and
out
jb
xchg
dec
inc
bnd
fstpt
cmpsb
leave
nop
adc
test
xchg
test
fwait
pop
cmp
push
orl
imul
data16
mov
in
add
fmull
xchg
cmp
xchg
pushf
int
loop
jg
nop
je
leave
in
pusha
pop
lods
fwait
mov
add
gs
and
dec
push
mov
ss
sbb
lock
imull
adc
shr
mov
push
cmpsl
js
push
shrb
dec
ss
cld
test
stos
into
adc
pop
xchg
push
jmp
flds
dec
dec
push
push
and
or
cwtl
lods
mov
mov
test
in
out
jne
mov
mov
into
cltd
test
push
xchg
divl
out
jo
test
xchg
out
mov
fnstsw
dec
xor
dec
sub
sub
adc
cmp
cmpsl
outsb
cmp
lods
clc
das
mov
jg
add
add
cmp
push
inc
xchg
clc
xlat
testl
daa
or
in
in
daa
mov
adc
pusha
adcl
fistps
inc
push
bound
pop
pop
inc
dec
lds
into
xchg
dec
mov
sbb
fildl
xchg
cld
adc
xchg
jns
lea
mov
xor
inc
push
mov
add
mov
inc
je
negl
cmpsl
mov
sub
mov
fldenv
cmp
imul
scas
mov
xor
iret
jb
mov
and
aad
aam
je
push
mov
adc
je
es
dec
push
mov
push
hlt
dec
mov
xchg
adc
and
repz
sarl
lods
adc
xor
xchg
mov
cmp
mov
mov
xchg
ss
or
addl
sub
movb
xchg
pop
aaa
mov
cmc
or
xchg
sbb
jb
pop
call
mov
mov
cmp
sbb
pop
jecxz
push
test
xor
lds
cltd
fisttpll
mov
ret
or
add
fsubrs
pop
loopne
mov
decb
mov
bound
lcall
xchg
xchg
xchg
jnp
iret
faddl
pop
xchg
sbb
addr16
dec
fs
push
adc
xchg
dec
dec
pusha
sub
pop
mov
sbb
negl
mov
push
sub
sbb
xor
add
ret
gs
and
jns
idivl
and
pushf
mov
cmp
repz
push
mull
imul
cmp
dec
pop
je
aaa
jbe
in
xor
fimull
xchg
lods
arpl
xchg
push
sub
in
sarb
mov
jnp
movzbl
popa
add
loope
push
push
loop
sub
adc
in
les
shrb
icebp
adc
add
addb
or
jae
sbb
sbb
lock
cmp
pop
and
push
pop
xchg
mov
ret
repz
je
mov
popa
push
adc
adc
push
mov
cmpsl
aas
or
dec
sub
int
push
nop
fcomps
cmc
repnz
repnz
out
inc
sbb
adc
add
mov
mov
mov
aad
gs
sbb
mov
popf
fldt
adc
adc
test
in
sbb
lods
cmp
pop
push
mov
sub
mov
push
pop
sub
ret
in
push
sbb
add
jmp
xchg
aad
xor
ljmp
lods
into
mov
inc
rorb
sbb
pop
lods
jle
loop
or
push
jb
fsubl
xchg
and
outsb
outsb
fistpll
push
out
push
mov
jge
mov
mov
or
sub
mov
sub
inc
push
fbld
pop
jecxz
add
fsubrs
mov
pop
sub
cmc
roll
hlt
aaa
dec
add
popa
test
nop
ja
jae
sbb
push
pop
dec
jmp
fcmovnbe
addr16
data16
js
xor
inc
pop
adc
pop
enter
adc
pusha
adc
ret
sub
push
mov
stos
jg
ret
or
mov
mov
mov
hlt
or
cs
jnp
enter
jo
lret
lret
sub
lea
cmpsl
mov
or
jno
fst
add
rorl
insb
cs
cmp
push
mull
aad
aas
hlt
testl
sti
jnp
and
cmpb
xchg
fistpll
and
pusha
xchg
loop
dec
push
xor
inc
loopne
rcrb
shll
and
push
pop
mov
idivb
cmp
scas
push
jp
mov
sub
jge
dec
mov
mov
push
cmp
adc
jne
and
iret
jne
out
js
push
xchg
inc
sar
pop
js
xor
repz
pop
sahf
in
xor
lcall
not
sbb
in
or
lret
dec
les
cld
inc
xlat
mov
xlat
lahf
in
cmovns
jmp
sbb
or
jae
ret
jo
fs
call
dec
cmp
ret
fiadds
jge
mov
sti
stc
pop
stos
sbb
sbb
dec
test
aad
js
mov
fbld
xlat
popa
mov
xchg
sbb
mov
mov
not
out
xchg
fidivl
in
addr16
mov
in
ss
pop
fidivrl
or
xor
or
xor
sbb
sbb
outsl
push
int3
test
adc
mov
pop
and
popa
std
lods
mov
repnz
xchg
icebp
rcll
stc
add
xor
and
aas
lods
push
addl
inc
popf
jg
mov
xchg
cltd
sub
cmp
imul
in
mov
mov
sbb
out
and
pop
stc
sub
stos
or
clc
pop
sti
xor
repz
ljmp
adc
pop
pop
outsl
jne
das
mov
mov
je
stc
jmp
clc
and
icebp
popa
test
testl
xor
fisttpl
fcmovb
push
shll
imul
cmp
add
sbb
dec
test
popa
lea
ds
push
mov
shll
adc
jp
aam
cwtl
push
xchg
loop
scas
pop
aam
and
repz
imul
add
sti
jae
mul
cmp
cld
movsb
push
leave
lods
cmp
imul
push
push
dec
jbe
dec
ljmp
ds
cwtl
mov
cmpsl
lret
repz
inc
cmp
mov
pop
dec
mov
jbe
mov
or
nop
jecxz
jecxz
iret
stos
hlt
lods
scas
mov
jg
movsb
and
inc
fsubrs
adc
filds
mov
out
lcall
movsl
inc
fildll
mov
sar
add
stc
adc
or
shl
xor
in
xchg
es
jo
dec
addl
arpl
clc
ds
movsb
cwtl
lcall
ja
ds
push
mov
jns
and
pop
insb
adc
in
pop
sbb
loopne
mov
lds
sub
daa
pop
sbb
ficoml
mov
js
sub
push
ja
cmpsl
or
xor
icebp
xchg
repnz
int3
or
idivb
jge
out
adc
mov
cmpsl
jg
adc
cmpsb
jge
lds
xchg
pushf
dec
mov
and
sbb
scas
cmc
or
stc
outsl
inc
cwtl
mov
xor
pop
imul
ret
add
inc
outsl
insb
xchg
pop
fisttps
xor
lea
enter
xchg
call
pop
pusha
in
dec
sub
pop
mov
jmp
jp
mov
decb
test
jmp
inc
pop
or
and
ljmp
jb
sub
loopne
ss
cmpb
dec
stc
inc
stc
pushf
je
sub
fs
ljmp
inc
iret
ficomps
xor
sbb
sahf
sub
xchg
repnz
xchg
pop
cs
ja
or
dec
adc
and
push
popf
xor
loop
jl
sbbb
fs
popf
sbb
movsl
loop
insl
cmp
push
lea
rcrl
sub
push
cmp
and
lcall
ss
xorb
out
push
push
and
sarl
cltd
clc
lea
xchg
jno
daa
xor
xor
xlat
popf
sub
ret
call
dec
jmp
shrl
cld
bound
addl
sbb
sahf
ret
xchg
into
ljmp
pop
jbe
testl
mov
or
aaa
xor
dec
pusha
add
jb
fnstenv
cld
dec
cwtd
out
arpl
aad
sti
or
add
loopne
and
cmp
pushl
rolb
scas
cltd
adc
jnp
dec
test
jns
enter
add
clc
imul
ljmp
lcall
sbb
out
adc
add
mov
pop
cmp
adc
jecxz
jb
outsl
mov
aas
insb
pop
sub
push
xor
add
xorb
je
inc
jno
cltd
or
inc
cmp
inc
sub
loop
dec
cmp
mov
pop
ss
lret
fbld
iret
filds
or
fidivs
sub
aad
daa
dec
fcoml
mov
push
lods
sbb
push
lds
outsb
adc
negl
push
fimull
sub
dec
sub
jne
inc
outsb
sbb
xchg
sbb
xchg
mov
cs
in
inc
enter
cmp
outsb
je
jecxz
jne
mov
sbb
fists
shlb
rolb
scas
mov
iret
push
adc
mov
xchg
sbb
pop
jge
pop
xlat
cmp
movsb
les
add
xchg
push
lret
pop
push
cltd
cmp
stc
mov
hlt
out
and
cmp
push
adc
scas
cmpsb
dec
mov
das
xchg
xor
push
mov
adc
xor
testl
outsb
jecxz
and
rcrb
loop
sub
or
sbb
xchg
lods
inc
jnp
or
movsl
aam
ficompl
push
xor
mov
or
xchg
outsb
mov
rclb
add
or
sbb
sub
ja
cltd
loope
push
dec
push
xchg
in
push
pop
pop
inc
mov
lcall
outsl
mov
sarb
cmpsl
bound
ja
shrd
sub
out
jnp
decb
dec
dec
dec
aam
cli
mov
stos
dec
popa
in
jecxz
dec
mov
push
xlat
sub
cvtps2pi
cltd
sub
and
mov
lret
cmpsl
jp
inc
mov
lcall
sbb
inc
popa
xchg
inc
out
jmp
and
sbb
loopne
aam
loop
adc
jg
jbe
aaa
int
dec
xlat
mov
or
adcl
inc
xor
dec
adc
mov
testl
push
add
cli
imul
push
shll
in
fwait
jno
in
pop
push
mov
jg
and
inc
inc
fistpll
loope
out
fildl
add
ljmp
inc
jmp
ror
sahf
outsl
nop
add
data16
xchg
lahf
in
cmpsl
iret
sub
pop
sbb
sbb
mov
in
adc
mov
mov
ret
sub
or
inc
gs
and
jnp
clc
mov
mov
add
mov
dec
push
mov
xchg
push
xor
jne
aad
mov
lret
test
pop
imul
idiv
mov
push
std
push
lret
out
push
cmpsb
cli
jns
mov
sbb
inc
mov
rolb
fsubs
and
into
cmp
xlat
jnp
pop
lock
fadd
cmpsb
stos
stc
adc
aaa
imul
push
es
ss
cmpsl
dec
data16
in
dec
out
push
jp
imul
in
fwait
and
arpl
push
jecxz
pop
int
cmc
sub
ret
cli
jnp
push
jno
inc
push
or
out
sbb
pushf
push
movsl
inc
pop
lahf
int
imul
push
rcr
fistpll
push
sub
and
inc
sti
int
sbb
aas
into
mov
xor
jno
sub
mov
mov
jae
pop
loope
xor
pop
mov
in
xchg
movsb
ret
adc
push
xchg
add
inc
loope
cmc
lea
stos
dec
push
xchg
jbe
cmp
in
mov
xchg
clc
add
sbb
lret
enter
lret
jg
stos
mov
arpl
test
xchg
xorl
test
and
popf
inc
fwait
cmpl
jno
xlat
and
std
push
jnp
add
xor
xchg
scas
jecxz
mov
fdivl
sbb
xor
sub
pop
dec
mov
in
pop
test
add
arpl
inc
aad
adc
mov
dec
mov
test
loopne
hlt
mov
test
stc
add
inc
push
push
popf
cmp
dec
cwtl
ficompl
int3
mov
sbb
or
pop
fmull
lea
arpl
mov
sub
inc
add
fstps
movsb
push
mov
xchg
cmp
xor
sbb
inc
out
push
call
xchg
fs
into
idivl
mulb
mov
ret
push
mov
mov
or
fcoms
repz
and
push
lds
addr16
mov
add
jl
inc
add
pop
cmp
out
cmc
lret
mov
outsl
jmp
test
loopne
dec
les
std
aad
mov
pushf
ret
dec
pushf
cltd
xor
inc
cltd
inc
cmc
dec
mov
fisubl
sbb
pop
mov
pop
testl
cmpsl
add
adc
push
lret
stos
mov
fsubl
mov
or
in
int3
push
dec
ljmp
mov
bound
loop
pushf
jecxz
pop
mov
int3
xor
xorl
mov
jecxz
cltd
add
data16
es
je
mov
nop
adcb
sub
lcall
pause
xor
add
mov
and
mov
sub
mov
sub
fadds
pushf
sbb
jne
xchg
mov
xchg
cmpsl
mov
clc
add
push
sbb
push
shll
hlt
dec
xor
xor
xchg
add
jns
jmp
in
das
pop
xor
rorb
jb
ljmp
add
add
loopne
stos
out
mov
sub
leave
stc
xchg
jmp
mov
mov
sub
pop
cmc
mov
mov
insb
mov
cmp
jae
and
sysexit
xchg
int
inc
sub
jno
sub
repnz
xchg
pop
stc
shl
xor
mov
sub
lods
and
ret
push
mov
push
gs
sub
sahf
fistps
js
test
cmp
fimull
push
stc
mov
xor
rorb
std
xchg
inc
mov
arpl
mov
out
push
mov
flds
mov
cltd
pop
add
fldcw
adc
xchg
lods
push
add
sub
add
sbb
jmp
fwait
cmp
rcll
jae
test
push
xor
aam
xor
leave
aad
adc
adc
xor
inc
pop
add
sbb
add
enter
add
movsl
cmp
xor
xchg
lahf
dec
pop
mov
push
mov
aam
pop
in
int
mov
cmp
push
cmp
nop
adc
cmp
cmpb
clc
push
push
sub
push
mov
enter
pop
sub
jno
cmp
push
xor
shrb
pop
rolb
cmc
decb
xchg
cltd
sbb
out
bound
sub
adc
mov
sub
out
leave
ret
xchg
das
stc
jle
add
test
jmp
pop
lods
daa
cwtl
aad
ss
int3
xchg
jo
stc
sub
je
pushf
or
pop
aad
xchg
add
jo
xchg
and
jecxz
aaa
dec
test
add
leave
and
and
scas
dec
rcrb
ret
xchg
xchg
movsb
neg
sub
jns
js
or
outsl
cmp
pop
pusha
ret
nop
mov
pop
cmp
jb
adc
add
inc
fmuls
xor
mov
cmp
inc
lret
jne
adc
xor
les
in
ror
push
adc
and
pusha
in
xchg
aaa
jne
clc
addb
cld
jae
mov
cmp
addr16
and
mov
pop
aad
movsb
sbb
in
push
clc
mov
and
jl
repz
icebp
loopne
mov
or
add
mov
mov
xor
pop
lds
mov
sub
cmp
and
xor
rcrb
lds
add
iret
mov
shll
aas
mov
out
fs
add
in
add
adc
pop
pop
add
stos
sbb
push
icebp
cs
imul
dec
stc
les
push
loopne
and
push
push
mov
iret
sbb
sub
mov
fisttpll
dec
mov
dec
hlt
cmp
ss
add
inc
outsb
and
cmp
ss
push
fdivrp
das
xchg
cmp
lret
daa
imul
jp
insl
lret
cmpsb
sti
xor
sbb
ret
in
int3
mov
sahf
test
jge
inc
mov
mov
repz
pop
add
fnsave
xchg
aaa
stos
xchg
pop
sub
les
mov
adc
xrelease
loopne
addr16
add
push
nop
cli
mov
cmp
dec
in
dec
push
cmpsl
and
xchg
lods
pop
sar
outsl
leave
hlt
mov
mov
inc
lods
loope
dec
not
imull
push
ljmp
andl
mov
cltd
cmp
test
and
xchg
cmpsl
adc
pop
dec
lock
cmp
and
dec
mov
es
adc
lock
sbb
call
and
dec
inc
jnp
dec
pop
das
fs
pop
add
mov
repnz
xchg
mov
push
jle
ret
push
xor
mov
pop
test
call
xor
mov
stos
out
or
inc
into
in
mov
scas
pop
imul
jne
or
test
xor
mov
ret
ja
add
fs
cmp
jae
add
inc
dec
outsb
loopne
dec
pop
cmc
or
cwtl
add
in
daa
inc
xor
dec
mov
sub
mov
subl
sahf
mov
lret
out
int
add
lods
dec
inc
inc
and
lea
mov
lods
out
ret
pop
int
mov
imul
pushf
repz
and
push
enter
in
mov
adc
cltd
imul
jne
mov
scas
mov
out
icebp
add
mov
dec
adc
pop
das
fisttpl
push
ss
inc
push
mov
scas
cmp
lock
cmc
popf
mov
adc
xchg
cmp
cmpsl
sbb
xor
sbb
sub
mov
push
sbb
fs
mov
push
jle
gs
test
inc
dec
mov
leave
adc
jne
and
enter
cld
add
dec
pop
ja
pusha
sub
mov
mov
fs
jnp
sbb
push
push
inc
jl
or
ret
xchg
jne
inc
lods
jne
pop
js
xlat
mov
xor
push
imul
xchg
scas
cli
cmc
and
iret
enter
iret
jne
jl
mov
mov
pop
jp
js
decl
lods
inc
pop
loop
hlt
pop
inc
pop
push
dec
xchg
lds
jbe
xor
push
push
xor
imul
std
add
movsb
ljmp
push
sti
xor
mov
push
sbb
sbbl
add
ficoms
or
sub
cld
xchg
jp
mov
pop
in
push
cmpsl
or
lds
xor
cmpsl
rorb
movsb
pop
ss
mov
mov
sahf
loope
lods
add
sbbb
push
dec
jae
leave
std
mov
ljmp
jl
jo
or
fwait
je
sub
fdivp
dec
or
pop
rcll
and
loop
fs
jp
int
push
pop
test
xchg
iret
push
leave
add
loop
jg
sub
in
or
call
xor
jge
mov
mov
cmp
add
push
sbb
push
hlt
xor
mov
cwtl
clc
jecxz
stos
dec
pop
daa
pushl
mov
fcoms
pusha
push
scas
xor
jae
jle
enter
mov
mov
pop
test
mov
sbb
mov
repnz
loop
cs
jp
mov
hlt
and
adc
sti
mov
mov
and
lods
fcmovnbe
sahf
xor
xchg
mov
data16
les
outsb
aam
fdiv
ja
and
idivl
xor
pusha
sbb
xor
and
mov
sbb
jo
mov
nop
jno
enter
das
aaa
fsubs
mov
jle
lahf
out
xor
dec
add
sbb
fnstsw
xchg
fadd
adc
data16
pop
jae
dec
mov
mov
out
push
adc
sub
mov
xchg
jne
addr16
mov
inc
pushf
jnp
sub
xchg
lea
lea
xchg
popa
outsl
push
stos
es
cmp
mov
add
mov
inc
and
sub
and
xlat
addr16
cmc
popf
mov
sub
shll
hlt
flds
jl
sar
or
add
dec
call
stos
or
int3
jg
insb
pop
push
aas
leave
leave
dec
movsl
or
sbb
pushf
fsubrs
mov
xchg
das
add
add
mov
lahf
xchg
mov
and
and
fs
imul
dec
mov
mov
in
js
outsb
and
mov
pop
fldl
and
mov
inc
into
fisttpll
dec
push
es
dec
in
push
pop
ljmp
ss
jae
inc
dec
stos
sbb
dec
into
jecxz
iret
pop
mov
repnz
mov
test
lea
daa
jbe
stos
sarl
in
sbbb
scas
fcomps
jecxz
aam
jo
jecxz
out
out
dec
sub
andl
xchg
cmp
lret
or
out
xchg
sarb
xor
and
xlat
faddl
jge
inc
fwait
aam
mov
jle
loop
lods
in
sbb
sub
cmc
fidivrs
addr16
pushf
dec
inc
imul
movd
out
push
xor
push
or
cltd
pusha
or
pop
push
jo
ds
inc
out
mov
push
outsb
pop
popa
adc
ss
sbb
fsubs
les
mov
aam
outsl
pop
mov
mov
mov
out
sahf
fstl
xchg
mov
push
iret
or
jns
pop
fwait
jae
mov
out
hlt
xor
mov
cmp
cmp
repz
adc
pop
mov
xor
adc
cwtl
mov
ret
or
dec
addr16
dec
adc
cmc
jl
sbb
pop
add
outsl
sbb
push
mov
add
cmp
setb
dec
and
lret
negl
pop
test
pop
fnstenv
push
fmull
fldenv
xchg
movsb
call
sub
sub
jb
popa
dec
pop
cli
call
jle
xchg
lret
mov
jecxz
movd
pop
jb
mov
stos
xor
push
sub
cmpsb
cmovb
push
loop
mov
out
mov
gs
xchg
aas
add
jle
outsb
lds
int3
jno
cwtl
hlt
jg
cmp
lock
out
inc
mov
ja
adc
call
fstpt
pushf
fldcw
rcr
and
sub
add
mov
sarb
mov
jmp
dec
and
loopne
data16
push
fcoml
imul
dec
mov
mov
adc
add
out
hlt
or
jl,pn
xchg
push
ret
mov
popf
in
jg
pop
jmp
icebp
mov
pop
ss
test
rolb
js
adc
fucom
fnsave
sbb
xor
lods
and
movsl
and
mov
and
lcall
jns
loop
insb
sub
pop
push
inc
adc
lds
nop
orb
jbe
mov
lods
mov
lcall
or
xor
clc
aas
hlt
pop
sbb
mov
ret
iret
scas
imul
sbb
scas
shlb
enter
push
jl
add
subb
fdivrs
xor
or
xchg
test
jnp
xchg
pop
mov
mov
pop
arpl
movsb
loope
pop
push
pop
adcl
push
mov
jns
in
movsb
jle
movsl
cs
cmp
insl
fildll
mov
pop
mov
jnp
push
call
rcll
test
or
stos
sub
push
inc
push
jnp
pop
loope
pop
mov
inc
cmp
pop
aam
out
cmc
stc
mov
xchg
stos
cs
adcb
sbb
mov
mov
mov
push
dec
sets
sbb
or
scas
or
mov
scas
mov
cmpsb
pop
popa
cmp
jae
loopne
sbb
or
fnstcw
in
sbb
push
jmp
mov
push
push
popa
mov
dec
mov
dec
cmp
mov
jbe
sub
outsl
stos
std
cmp
out
inc
cli
cmp
push
lds
jg
ret
pop
fnstsw
pushf
imull
dec
popa
dec
xchg
xchg
dec
or
dec
int
addr16
jnp
push
mov
daa
arpl
decb
gs
jae
xorb
stc
sbb
subl
shl
pop
fildll
shrb
adc
cmc
dec
xchg
aas
xchg
mov
in
pop
sub
adc
push
clc
xorl
mov
xchg
push
fldl
pop
push
cld
test
push
push
test
inc
adc
clc
call
push
or
and
cmp
pop
xor
mov
push
mov
inc
or
or
push
mov
aad
pop
adc
jb
pop
lods
loopne
lret
stos
mov
lahf
out
push
inc
into
inc
pop
push
push
mov
pop
jne
enter
mov
call
pushf
adc
mov
dec
je
lods
mov
aas
gs
fistpll
aam
cmp
mov
push
lock
add
cmpl
shr
mov
pop
jecxz
cli
js
js
testl
sbb
cmp
cld
mov
adc
dec
frstor
iret
imul
cmp
mov
push
rep
push
je
pusha
jmp
add
add
mov
rcrl
leave
int
and
cmp
push
mov
xchg
or
and
jne
fucomip
or
add
aad
fimull
popa
push
mov
sbb
dec
test
xchg
shll
mov
jmp
in
xor
inc
mov
and
and
insl
push
cmp
adc
adc
test
dec
adc
scas
out
mov
mov
xor
sbb
in
lea
and
and
inc
fists
cmp
xor
push
cmp
cmc
pop
and
ja
mov
xor
notb
jo
or
scas
pop
lods
inc
or
lods
jne
inc
push
aad
mov
mov
jbe
or
fisttpll
testb
mov
lock
rcrl
dec
or
mov
out
add
mov
stos
push
dec
mov
adc
sub
adc
icebp
xchg
lcall
test
sbb
cmp
xchg
popa
adc
mov
mov
test
lret
test
fldcw
pop
or
mov
sbb
mov
cmpsl
stc
insb
aam
pop
sbbl
inc
adc
jb
out
fimull
push
mov
imul
fimull
inc
mov
push
je
scas
test
int3
mov
imul
adc
lods
cmpsb
push
test
dec
daa
sub
cs
les
xchg
pop
dec
push
mov
loopne
xchg
xchg
fldcw
bound
fnop
int3
cmp
dec
xchg
ss
xchg
insl
dec
or
je
inc
fdivrs
inc
mov
stos
dec
int3
les
push
test
xchg
sbb
mov
pop
pop
enter
cmp
xor
inc
push
dec
jmp
xor
lods
mov
sbb
faddl
sub
test
fwait
push
xchg
test
cmp
push
jne
mov
cltd
add
or
add
inc
cmpb
sbb
sbb
lock
sti
sahf
and
pop
mov
push
ret
xchg
fbld
and
push
cmc
push
push
les
jmp
cmp
test
lcall
loope
lods
in
fistl
add
aas
push
add
adc
mov
jg
xchg
push
dec
fisubrs
cltd
subb
ja
mov
dec
cli
xchg
popa
xor
mov
push
add
lods
pop
test
sub
outsb
in
shl
mov
dec
adc
dec
sarb
ret
xor
stos
stos
xor
add
pushl
stos
push
fstpl
or
push
icebp
adc
and
xor
icebp
pop
lea
jmp
sub
jae
cld
leave
jne
enter
jns
pop
mov
inc
mov
out
push
aad
ja
je
pop
out
adc
repnz
stc
mov
pop
fs
shlb
loope
outsl
xchg
jae
and
test
fiaddl
lock
nop
xchg
push
scas
testl
sbb
jb
mul
pop
xor
fcoml
addl
xchg
mov
and
push
out
mov
jecxz
test
mov
and
mov
ds
fs
sarb
fadds
or
bound
cwtl
xchg
adc
and
std
sbb
or
dec
xor
int
and
adc
xchg
pop
cltd
inc
cmp
jo
fwait
mov
dec
lods
sti
jmp
jl
push
jecxz
xchg
dec
popf
aaa
mov
cmp
into
push
xor
ret
popa
ja
xorl
xor
sbb
cmpsl
add
jbe
fists
add
popf
xchg
pop
test
outsl
enter
in
inc
and
mov
inc
shlb
cmc
inc
or
dec
sub
or
pop
mov
shlb
ss
adc
call
fcoms
cltd
sbb
mov
pop
lcall
insl
cmpsl
cs
in
push
ret
mov
in
xchg
lahf
cltd
xchg
pop
fistpll
cmp
pop
fisubl
xor
pop
dec
push
rclb
popf
sub
adc
mov
cmp
sarb
call
lods
or
mov
xor
jae
pop
cmp
cltd
or
mov
sbb
negl
lret
in
outsl
cmpsb
jno
push
dec
jecxz
and
xor
mov
sub
aam
movsb
mov
add
and
pop
cmp
or
or
jo
and
pop
mov
inc
rorb
mov
int3
insb
pop
ljmp
mov
jo
push
imul
je
adc
lret
mov
pop
fadd
pop
roll
dec
pop
mov
or
ljmp
pop
aas
sahf
pop
dec
xchg
xor
ret
jecxz
mov
mov
fsubrl
clc
cmpsl
sbb
pop
pop
or
inc
ss
cmpsb
fs
das
xor
out
stos
data16
mov
jp
mov
pop
and
push
in
daa
mov
popf
sub
mov
pop
push
mov
mulps
or
push
hlt
xchg
jmp
gs
icebp
adc
dec
aas
ja
mov
mov
mov
cmp
dec
mov
movsl
push
add
cmp
pop
ror
rcrb
loope
inc
adc
hlt
pop
fcoms
dec
inc
out
out
cmp
mov
cwtl
sbb
sbb
aam
xlat
mov
push
jecxz
lods
mov
dec
add
jno
scas
add
pop
stos
insl
pop
fidivl
fidivs
cmpb
xchg
xchg
jo
test
inc
jg
push
enter
jns
add
in
jmp
pop
jnp
inc
iret
dec
xchg
lock
cmp
pop
dec
jl
inc
add
stc
or
std
cmp
rep
mov
mov
sbb
filds
push
int3
sbb
sbb
inc
cmp
mov
jae
cmp
mov
dec
xchg
xlat
fucomp
insb
inc
pusha
int
pop
xchg
push
and
dec
outsb
in
in
add
push
pop
fdivl
ja
cmp
mov
nop
push
xor
in
test
add
es
adc
cmpsl
inc
pop
lret
out
out
subb
clc
and
mov
test
and
mov
and
dec
xchg
lods
or
mov
out
pop
lods
cmp
rcll
add
mov
pop
push
addr16
or
inc
lcall
rorb
cmp
mov
add
adc
mov
xor
in
incl
cmp
pop
popf
dec
push
ljmp
outsb
jecxz
jne
vunpckhps
lcall
add
jp
xchg
sbb
jl
std
dec
mov
mov
popf
sarb
mov
cld
jmp
int3
popa
dec
sub
xchg
sbb
pop
jno
mov
fmuls
gs
cmp
adc
push
inc
inc
xor
jbe
xchg
cmp
sbb
movsb
xchg
loopne
jne
ret
push
popa
cmp
iret
data16
mov
add
pop
in
xorl
out
iret
or
scas
mov
push
mov
dec
popa
pop
movsb
jo
sbb
int3
lods
push
psllq
jno
shrl
clc
pop
out
push
mov
aad
imul
sarb
cmpsb
loopne
repnz
xchg
nop
popa
mull
popa
push
cmpsl
in
out
and
mov
clc
bound
jle
xor
mov
cltd
sub
into
fldcw
push
call
popf
stc
movsb
sbb
int
mov
mov
pop
jge
aad
dec
test
mov
lea
fmull
dec
mov
jae
dec
jb
push
pop
mov
pop
cmp
jnp
dec
mov
mov
add
mov
les
mov
test
movzbl
ljmp
call
cmp
mov
mov
xor
cs
mov
inc
xchg
lock
dec
cmp
movsl
insb
pop
arpl
bound
mov
mov
dec
push
jecxz
hlt
pop
imul
jmp
je
or
and
jb
cmpl
sbb
push
aam
lds
lcall
dec
in
xor
outsb
inc
pop
sbb
loope
fists
or
insl
xchg
fimuls
dec
mov
add
test
mov
in
repnz
add
and
inc
jo
sbb
push
loop
mov
add
xchg
push
jl
dec
pop
movsb
roll
pop
mov
jle
loope
lock
mov
mov
pop
imul
negl
mov
xlat
mov
out
pop
xchg
or
jl
rcl
test
insb
cli
and
sub
mov
loope
fs
pushf
mov
les
scas
in
std
jb
sub
lea
rcrb
cmc
mov
out
into
imul
sub
in
pop
out
or
inc
sbb
jl
imul
inc
add
les
les
outsl
daa
cli
fnstsw
sub
or
or
repnz
and
xor
shlb
jp
jp
mov
imul
call
sbb
shrb
fsubp
shll
pushf
cmp
and
fcompl
test
jmp
push
lahf
imul
test
mov
sub
test
adc
mov
inc
insb
pop
inc
andl
push
lds
inc
sbb
mov
loop
adc
sbb
fsubs
mov
lods
and
clc
hlt
in
push
cmp
mov
js
and
popa
cmp
fstpl
movsl
pop
push
insl
scas
push
mov
adc
xchg
adc
in
lea
cmp
sub
rol
sbb
movsb
cli
mov
and
mov
aas
push
shrl
gs
cld
sbb
lock
xchg
cwtl
repnz
fbstp
xor
jge
cwtl
test
inc
mov
add
shll
mov
aaa
daa
jmp
mov
int3
call
mov
outsl
pushf
out
insl
cmpsl
xor
mov
mov
mull
loope
adc
lahf
hlt
cmp
test
xlat
call
push
iret
jecxz
adc
dec
repnz
push
xor
imul
fisubrl
push
xchg
sub
imul
fistps
or
jmp
movsl
xchg
xor
mov
rcll
cmpb
mov
or
shll
xchg
push
jne
addb
xor
jne
pop
outsb
xchg
pusha
mov
or
outsb
fadd
sbb
cmpsl
mov
enter
mov
jg
rcll
push
scas
mov
mov
rorl
aam
fwait
lds
sub
in
sbbb
adc
arpl
mov
pop
insl
dec
pop
mov
test
jp
out
in
xor
mov
xchg
je
into
scas
cli
cmp
aam
xchg
loope
insb
or
fcmovnb
cmpsb
hlt
xchg
stos
int3
xor
dec
pop
mov
inc
cmc
call
cltd
hlt
rol
ja
arpl
jb
sbb
lea
aaa
data16
dec
jp
fwait
dec
or
sarl
mov
push
xchg
xor
negl
and
dec
inc
xchg
inc
jp
std
xor
hlt
add
adc
dec
xor
add
xor
xchg
pop
xchg
jbe
adc
dec
jl
into
inc
push
sub
in
aaa
cmp
out
pop
jge
fcoms
bound
and
mov
mov
std
xor
in
adc
data16
pusha
iret
jns
lea
loope
dec
mov
cli
andl
push
fs
nop
lcall
cli
rcrb
sub
lret
fistpl
ror
fwait
push
xchg
sahf
lods
shl
mov
loopne
gs
int
shlb
and
loopne,pn
sub
mov
das
mov
insl
jg
and
mov
adc
ret
and
jle
clc
cmpsb
out
loopne
and
repnz
mov
imul
popf
jne,pt
mov
mov
push
rcl
pop
cs
push
rcrb
xchg
in
test
mov
outsb
cmp
xor
repnz
and
scas
jne,pt
mov
mov
push
cmc
jne
insb
in
shlb
mov
xor
lret
jo
or
cmp
addr16
push
push
cmpsl
mov
aaa
popa
push
or
sbb
jp
das
gs
lock
add
xlat
pop
fimuls
stos
and
xor
shrl
ljmp
add
mov
sbb
insb
shrl
pop
roll
pusha
xchg
push
sarl
add
ret
mov
jmp
push
pusha
mov
mov
dec
mov
imul
add
add
fimuls
cmp
xor
aad
nop
dec
sbb
mov
push
and
pop
mov
add
and
push
div
mov
cs
or
pop
leave
in
xor
mov
xchg
xchg
xchg
cmpsl
adc
xor
xchg
ds
imul
out
clc
inc
sub
aad
inc
out
cwtl
rorb
mov
jp
lods
sbb
in
bound
jle
or
dec
cld
mov
add
xlat
dec
int3
call
dec
ret
xchg
mov
jns
ljmp
add
orb
xchg
cmc
jnp
daa
jo
add
jno
lret
push
pushf
rcll
jg
mov
pop
jge
daa
dec
cld
mov
insb
add
inc
into
dec
mov
shll
pop
mov
rol
sbb
stc
inc
mov
stc
cmp
or
fdivr
cs
and
xchg
jl
mov
aad
nop
dec
mov
lahf
roll
int
mov
adc
lret
lret
arpl
and
dec
pop
out
dec
inc
cld
lret
xorb
sbb
push
in
and
loop
mov
imul
pop
scas
stos
arpl
dec
popf
and
push
ljmp
push
scas
scas
sub
mov
jo
out
insb
in
roll
inc
push
es
aad
lcall
adc
push
popf
in
pop
jno
mov
daa
les
and
sbb
xchg
add
aam
lods
sub
inc
jns
push
icebp
rorb
enter
test
mov
cli
or
xchg
cmp
mov
pop
dec
shr
cmp
mov
mov
push
call
test
lods
push
ljmp
movsl
repz
popa
cld
les
cli
push
or
or
or
dec
adc
imul
cmp
mov
rcll
mov
or
push
lea
adc
push
pmovmskb
and
test
cmc
cltd
sbb
mov
jge
xor
pushl
mov
jno
jecxz
mov
add
repnz
hlt
jb
cwtl
mov
pop
mov
pushf
pop
adc
fldlg2
or
fisubs
mov
outsl
or
movsl
mov
pop
dec
cmc
cmp
aad
shlb
enter
jecxz
rcrb
dec
dec
gs
daa
xchg
scas
rclb
cmp
or
push
iret
ljmp
mov
clc
in
adc
inc
jge
push
inc
iret
mov
int
dec
repz
scas
cli
push
push
sti
push
inc
test
cmc
cwtl
popa
lret
ljmp
sahf
jo
roll
fisttps
cwtl
ja
sbb
xchg
iret
xchg
xchg
pop
adc
lret
leave
in
cmpsl
mov
xlat
inc
jg
dec
lret
add
arpl
mov
int3
cmp
shlb
inc
lock
iret
daa
add
jge
mov
int
les
lds
ficoml
hlt
aam
push
mov
mov
sub
sbb
test
rorl
clc
cltd
inc
test
test
ja
sbb
mov
add
jp
jne
and
lock
jecxz
clc
xchg
fiadds
mov
jge
das
daa
mov
outsl
fistpll
ror
testl
jg
and
xchg
jmp
test
fwait
and
mov
insb
outsl
mov
cmp
cmpsl
xor
ret
in
adc
std
dec
fsts
fbstp
int3
mov
clc
arpl
pop
jge
lods
mov
aam
mov
mov
lret
and
addb
inc
into
mov
cli
cmpsl
add
adc
mov
sbb
mov
icebp
gs
into
pop
adc
xchg
gs
and
pop
decl
rorb
and
pop
or
es
xlat
insl
testl
jne
lret
push
aaa
cwtl
and
push
cmp
sub
leave
adc
and
mov
cld
stos
inc
xchg
mov
cmpsl
and
js
jp
lock
xor
imul
fwait
ss
filds
mov
in
xor
ljmp
add
sti
out
int
add
gs
js
movsl
adc
mov
xchg
sub
inc
shll
ucomiss
push
cli
push
sub
les
mov
pushf
xchg
out
das
stc
xor
pop
xor
test
mov
jmp
aam
or
cmpsl
push
adc
cld
test
lock
cli
mov
xchg
cwtl
xor
add
aas
cmp
movsb
ret
stos
roll
push
add
cmc
enter
sarb
sbb
pushl
jnp
je
sti
mov
aad
dec
rcr
leave
sub
insl
std
cmp
shlb
xlat
fnstcw
cmpb
xchg
scas
outsl
imul
test
push
mov
shlb
dec
xor
sub
mov
in
repz
pop
xchg
jle
mov
and
ret
sub
scas
mov
jnp
inc
mov
mov
mov
lods
idivb
jne
dec
xchg
sub
lea
ja
aam
pop
movsl
xchg
dec
mov
leave
xlat
daa
push
rorb
push
outsb
sbb
das
jg
sti
inc
push
cli
xor
pop
lret
mov
daa
rcll
jl
add
insl
mov
adc
pusha
sahf
push
mov
push
stos
js
xlat
pop
jb
mov
mov
sbb
or
xchg
sbb
add
pop
jno
hlt
adc
pop
filds
add
test
loop
cmp
pop
decl
xchg
icebp
adcl
outsb
pop
enter
mov
cltd
add
cwtl
and
mov
xchg
xchg
mov
dec
mov
dec
cmp
rolb
mov
sbbl
push
adc
mov
clc
jmp
xlat
mov
inc
andl
sti
out
dec
js
shll
push
push
push
daa
ret
push
dec
lcall
shrb
movsl
faddl
icebp
jo
jmp
hlt
push
popf
xchg
lahf
ss
ret
frstor
fs
lods
pushf
jne
das
rcr
xchg
mov
fsqrt
cmpsl
addr16
stos
pop
mov
mov
test
and
imulb
cmp
jg
aas
aam
add
aaa
fimull
xlat
cmpsb
lds
fldcw
pop
dec
jmp
divb
iret
xchg
xor
xor
xchg
mov
add
adc
add
xor
or
pop
pop
mov
adc
arpl
cmpsb
sub
jmp
test
fldt
jl
lcall
sub
lea
inc
popf
orw
add
xchg
les
cli
jne
pop
or
lods
sar
jmp
fstps
pusha
test
pop
lds
jbe
test
das
or
or
and
inc
inc
out
xchg
jne
mov
pop
dec
scas
push
push
cwtl
ret
aad
sub
jae
dec
pop
icebp
and
mov
dec
sbb
jbe
cmpxchg
cwtl
sub
das
cmpsb
gs
lds
mov
inc
fs
dec
ljmp
dec
ret
mov
push
lret
movb
cltd
sub
sbb
jp
stc
std
test
cmpsl
add
fistpl
push
ds
mov
repnz
fldcw
mull
or
pop
sbb
pusha
ret
and
imul
mov
mov
lret
shll
dec
add
add
cltd
mov
mov
ret
mov
aad
fucomip
and
dec
aad
dec
leave
dec
shl
adcb
ss
js
out
aad
cmovp
lea
inc
test
push
xchg
cli
add
fbld
push
cmp
sub
adc
icebp
fistpll
pop
cmpsl
cmp
std
loopne
imul
push
mov
pop
clc
sub
test
xchg
test
add
movsb
jg
lds
xchg
cld
cmp
mov
mov
xchg
pop
je
loop
xlat
dec
push
adc
jecxz
incl
insb
loopne
fdiv
sub
repnz
mov
cli
outsb
bound
xor
push
std
cmpsl
and
jno
nop
movsl
adc
push
outsb
pusha
fs
ficomps
xor
jle
mov
cmp
dec
outsl
jmp
or
fimuls
and
and
add
inc
jle
xor
dec
test
pop
lods
xchg
ds
in
test
shl
cltd
lods
jecxz
xor
sub
in
jo
push
xor
or
mov
es
mov
xchg
int
outsl
in
test
mov
ja
icebp
scas
mov
mov
nop
xor
push
sahf
fsub
jge
scas
mov
es
pop
arpl
mov
cmc
popf
xor
xchg
adc
nop
das
lds
push
jnp
cmp
xor
xchg
jnp
stos
stos
insl
test
pop
fidivrl
dec
sbb
arpl
stos
push
outsb
push
fs
pop
lods
test
scas
scas
jp
stos
inc
pop
and
cli
roll
adc
outsb
ret
xlat
sti
andb
popa
add
cli
daa
push
loopne
push
mov
jmp
push
sub
jnp
leave
mov
int
mov
incl
jecxz
fs
inc
push
nop
sbb
xor
mov
outsb
ljmp
mov
ja
lcall
sti
shlb
data16
fwait
lret
cwtl
fstpl
add
test
stc
insb
mov
jbe
sarl
push
pop
sub
mov
sub
out
leave
mov
insb
push
scas
xchg
ss
out
bound
jb
add
lods
std
imul
sub
dec
add
jmp
stos
movsl
cmp
inc
or
jno
add
ficoml
push
push
xchg
mov
mov
mov
sbb
jl
mov
pop
repz
stos
fs
mov
adc
pop
out
repnz
inc
mov
mov
xchg
sbb
ficoml
rcrl
push
push
jecxz
leave
sub
cld
rorb
sarl
sbb
mov
pop
fmull
add
arpl
andl
out
fmul
add
mov
xor
xor
xchg
lret
sub
loope
adc
xchg
popf
fbstp
jnp
sub
inc
push
sub
sub
andb
pop
sbb
mov
leave
addr16
pop
jge
arpl
fimuls
mov
xchg
test
orb
mov
int
push
icebp
movaps
cli
cmc
test
cmp
xchg
fwait
decl
inc
out
sbb
into
in
daa
adc
jno
or
jl
mov
int3
mov
xchg
mov
mov
loope
add
pop
je
stos
adc
push
mov
jge
push
cmp
mov
scas
lea
adc
dec
popf
push
push
mov
stos
out
inc
mov
scas
loope
sub
jp
pop
fs
cltd
xchg
fcoml
xchg
mov
cwtl
mov
addl
in
cmp
insb
mov
or
mov
popa
mov
cmpsb
jl
xor
insl
mov
ret
lock
dec
pop
repnz
es
sbb
fwait
push
add
lods
xchg
sub
mov
inc
gs
mov
sahf
adc
dec
cmpsb
loop
dec
in
imul
push
les
fsubrl
push
push
cmpb
repz
mov
hlt
or
std
shlb
push
jae
es
xchg
rcrl
lds
ja
cmc
jge
fsubr
add
fldenv
stc
mov
pop
or
fistps
and
loope
cwtl
lock
mov
fbld
mov
sbb
sbb
and
xor
jle
mov
mov
cmpsl
add
add
mov
cmp
jnp
fmulp
cmp
pop
cld
xor
test
aam
mov
mov
repnz
adc
out
mov
int
ss
push
xchg
adc
sbb
pop
aaa
ljmp
jmp
push
or
mull
insb
push
add
mov
lcall
aam
dec
dec
or
or
sub
stc
int3
stos
daa
jl
pushf
xchg
lock
pop
sub
idivb
int3
or
and
fldl
mov
out
adc
in
add
cld
lret
mov
idivl
add
fcompp
sbb
lods
lret
pop
xchg
mov
fsubl
pop
test
push
imul
popa
sub
test
or
jp
xor
mov
and
or
push
std
dec
sbb
inc
xor
jae
rolb
lods
and
push
inc
xchg
push
in
xchg
pop
mov
mov
or
sub
fs
cmp
sub
cwtl
mov
push
add
mov
and
mov
lods
mov
adc
cmpsb
pop
push
push
rolb
aas
inc
push
adc
dec
int3
icebp
in
xchg
add
cmp
sbb
jg
push
sbb
push
fidivrs
popf
jp
push
cli
btsl
push
push
push
test
xorb
iret
push
pop
jbe
cli
dec
fwait
cltd
data16
pop
stc
push
adc
es
xor
mov
rorb
mov
adc
xchg
into
repnz
and
les
sub
cltd
shll
inc
dec
sarl
test
push
fmuls
icebp
sub
out
mov
sub
xor
mov
and
cmc
mov
aaa
and
and
push
fistpll
inc
sbb
push
test
add
out
arpl
jle
shrb
movsb
pop
cmpsb
and
push
jle
scas
into
and
pop
fnstsw
sahf
xchg
push
jmp
push
sub
and
mov
test
insl
bound
xchg
out
push
lahf
sbb
mov
adc
sub
iret
fs
push
adc
faddl
popa
mov
add
loop
cli
mov
pop
mov
xchg
sbb
xor
xchg
leave
xor
imul
cld
aam
xchg
dec
xchg
push
nop
pop
ss
jp
add
and
insl
std
xlat
je
stc
push
mov
pop
or
xchg
push
arpl
out
pop
push
mov
add
inc
nop
idivb
sub
mov
push
mov
out
xchg
lock
int3
nop
pop
dec
mov
jle
xor
lahf
xchg
mov
hlt
push
or
push
in
jmp
xchg
mov
mov
dec
jno
xchg
test
or
push
in
movsl
and
stos
mov
lret
xchg
mov
xorb
cltd
nop
xor
imulb
pushf
jmp
iret
sbb
dec
push
ljmp
add
mov
lods
dec
cltd
cs
out
loope
js
xlat
jg
mov
mov
ret
jns
and
popf
adcb
cmp
mov
insb
call
cmpsl
outsl
jle
mov
popa
push
call
inc
aaa
xor
cmp
sub
mov
in
pop
sub
in
push
sbb
push
jp
xor
movsb
mov
or
repnz
xchg
repz
and
add
aas
pop
inc
outsb
daa
loope
mov
aam
mov
sbb
add
addr16
xor
add
stos
pop
rorb
sub
push
iret
push
adc
hlt
lds
aad
push
push
mov
rcl
cltd
xchg
fadds
imull
sbb
lea
repz
mov
andb
jne
in
pop
lods
push
mov
mov
sub
outsl
aam
push
mov
pusha
jnp
ds
inc
mov
stos
popf
test
fwait
and
aam
inc
mov
fbld
and
clc
fldcw
shlb
mov
sbb
fisttps
rorl
jno
lds
xadd
outsb
xor
jge
push
xchg
add
fs
imul
xchg
cs
imul
inc
cs
jne
je
adc
jp
or
pop
pop
inc
loope
and
xchg
mov
xchg
or
imul
leave
sub
pop
arpl
loop
fcompl
mov
test
xchg
es
loope
pusha
mov
cli
cltd
rcll
fwait
sbb
inc
mov
test
arpl
out
shlb
in
gs
xchg
xchg
jl
jl
cmp
cmp
dec
addl
xchg
inc
mov
xchg
pop
mov
cmp
imul
dec
or
xor
push
mov
and
sbb
adc
les
cmp
fldcw
lcall
xor
mov
lea
into
fsubrs
adc
js
mov
faddl
loopne
sub
lret
sbb
insb
dec
ror
stos
push
es
movsb
sarl
test
or
negb
fwait
cmpsl
dec
sti
mov
mov
roll
mov
icebp
sahf
jo
faddl
stc
rcrl
sbbb
jne
mov
sti
add
sub
fsts
dec
mov
xor
sub
lds
repnz
rorl
shrb
test
bound
xor
lcall
sbbb
jp
cmp
lods
mov
lods
stos
and
jg
lock
sbb
push
int
inc
pop
xchg
and
and
or
sbb
jns
scas
cwtl
cmp
pop
sbb
cmp
add
xchg
push
ret
loopne
hlt
loopne
jb
ss
das
push
dec
push
pop
cmp
xchg
into
mov
out
or
sbb
mov
and
pop
mov
std
sbb
mov
aad
inc
pop
lods
sub
out
jbe
or
mov
mov
lahf
or
cmp
pop
scas
xchg
adc
dec
pusha
iret
stc
rcll
pushf
adc
hlt
stc
sub
jo
jne
shr
hlt
popf
sub
mov
int3
cmp
lea
push
addr16
in
inc
sbb
mov
popa
sbb
fldenv
lea
and
sbbl
sbb
jmp
pusha
xor
imul
data16
pop
push
out
clc
push
out
out
push
lock
clc
out
mov
mov
fwait
imull
jmp
push
cmpsl
xor
sbb
or
loope
cltd
dec
int
dec
push
pop
addb
push
mov
jecxz
pop
fs
fwait
push
push
and
in
leave
iret
andb
test
in
jecxz
adc
sub
out
fnstsw
sbb
mov
fistps
jp
inc
call
xchg
nop
sbb
add
out
clc
push
negb
les
int
loope
orb
scas
jl
push
rolb
insb
xchg
call
stos
jo
aad
incl
jp
sub
dec
inc
mov
add
inc
and
add
sub
insb
xchg
sub
push
lock
sbb
jge
imul
mov
out
filds
mov
adc
pop
mov
hlt
ja
sbb
push
dec
je
imul
add
jle
dec
jb
xchg
in
pop
dec
stos
push
lahf
or
dec
mov
leave
mov
pop
jmp
les
add
pop
or
ss
std
ret
fistl
cmp
jg
cmp
aad
cltd
movsl
push
xorl
mov
sbb
dec
fidivrl
clc
xor
ficoms
adc
mov
dec
mov
int
dec
leave
cwtl
jge
jno
fsubrl
mov
cmp
loopne
nop
and
lsl
popf
fldt
imul
movsl
ja
mov
loope
das
int
jmp
jle
sbb
jecxz
mov
push
lahf
shll
call
push
jl
andb
dec
or
sti
mov
je
add
sbb
xlat
push
cltd
jb
push
lea
sub
iret
push
imul
ret
adc
les
repz
sbb
inc
stc
ds
jne
inc
out
adc
mov
and
scas
dec
mov
pushf
mov
dec
mov
adc
add
hlt
insb
imul
sbb
add
test
in
pusha
ja
sub
mov
mov
cmpsb
jb
and
sub
sbb
fwait
push
sbbl
lcall
cld
pop
xchg
push
xchg
outsl
mov
xor
notb
xchg
cmpsl
repnz
mov
icebp
lea
pop
test
and
incb
mov
push
dec
ljmp
lds
push
xor
popf
mov
ja
nop
jl
ret
cmc
imul
xchg
leave
inc
add
fidivrl
stos
xchg
popf
and
bound
outsl
dec
lcall
and
inc
stos
pop
js
xor
aaa
andl
push
inc
in
and
and
mov
out
in
fsubs
nop
in
popa
mov
dec
adc
cmp
aam
sbb
pop
test
sarb
sbb
push
add
jb
jmp
mov
scas
test
fcomps
sbb
neg
jg
inc
fiadds
dec
mov
test
mov
xor
repnz
out
mov
sub
rolb
jp
mov
mul
and
pop
fs
add
pushf
push
dec
iret
leave
add
cmp
pop
repz
enter
adc
sahf
arpl
arpl
mov
push
sahf
imul
cmp
cwtl
fsubp
push
leave
mov
ja
dec
fisubs
cmpsl
cli
push
xchg
in
jns
inc
mov
lret
mov
or
add
xchg
sbb
sub
jae
pop
or
dec
cmc
or
cmp
sbb
xchg
mov
scas
push
fisttps
push
in
mov
jg
ret
stos
mov
add
mov
fs
pop
out
pop
mov
repnz
mov
xchg
pusha
jbe
and
push
repnz
imul
mov
pop
mov
pop
fimuls
clc
mov
mov
mov
cmp
jmp
xchg
aad
fists
lahf
pop
jecxz
mov
mov
enter
fldt
xchg
mov
xchg
jne
adc
movsl
sahf
cmc
movsl
cmp
jmp
leave
fstp
or
fwait
aaa
adc
inc
and
or
icebp
out
mov
fildll
or
xorb
add
jnp
mov
arpl
add
dec
or
mov
es
xchg
insl
stc
popa
mov
sbb
je
test
pop
mov
subl
mov
lcall
std
in
fcomip
pop
sub
mov
jbe
std
mov
pop
enter
cmp
cmp
in
xor
mov
imul
adc
movsb
or
xor
or
mov
mov
push
jg
add
push
lods
je
out
lcall
data16
lock
mov
ss
jns
or
aad
jl
hlt
cltd
adcb
pushf
pop
dec
mov
add
outsb
xor
jne
cmp
jae
stc
add
std
xchg
minps
or
inc
dec
nop
popf
pop
pop
lock
and
ja
and
mov
adc
das
int3
xor
cmpl
sub
adc
push
insb
cmpb
stos
js
add
fs
mov
xchg
clc
test
mov
lods
xchg
jmp
inc
imul
in
inc
jae
cmp
adc
in
sbb
jnp
dec
inc
add
adc
ljmp
sbb
in
mov
rcl
lret
aad
mov
add
jmp
divl
shrb
stos
cwtl
ss
inc
adc
sbb
mov
lods
xor
aaa
cmp
ret
push
pop
add
mov
hlt
push
dec
jmp
lcall
fs
push
scas
mov
out
push
cmp
imul
clc
daa
sbb
jecxz
imul
inc
dec
pop
push
aas
sbb
stos
jl
leave
cmpsb
test
push
pop
push
loope
hlt
flds
mov
sbb
stos
lds
xor
and
addb
test
out
or
int3
in
xlat
sbb
das
in
jl
lret
pcmpeqw
cmpsb
inc
and
xlat
in
pop
pop
insb
jo
or
sbb
loopne
jmp
shrl
insb
icebp
push
mov
cmpsb
push
jb
fbstp
xor
imul
hlt
xchg
sub
push
mov
sbbb
xchg
bound
adc
xchg
xchg
inc
cli
mov
out
cmp
cmp
cmpsl
adc
movsl
mov
jge
jns
dec
call
mov
aaa
push
cmp
add
hlt
inc
adc
lret
nop
stc
or
pop
dec
or
repz
sub
imul
data16
cmpsb
inc
mov
ret
jge
xchg
jle
inc
pushf
aam
hlt
xchg
dec
test
push
inc
je
cmp
adc
fdivp
xchg
adc
dec
or
lea
movsb
rcrb
movsl
aas
adc
cmp
adc
loop
popf
sbb
pop
rcrl
xchg
shlb
aas
dec
add
call
dec
cltd
cmp
das
mov
aad
scas
or
push
cltd
mov
jae
adc
sub
inc
jle
shrl
jno
data16
lea
cmc
lock
pop
sub
fwait
and
sbb
dec
xchg
or
ljmp
mov
mov
jp
divps
adc
cmp
fmull
test
test
sub
sbb
insl
sti
add
fistpll
sbb
mov
loopne
sub
aaa
mov
repz
inc
xchg
adcl
mov
mov
cmp
cltd
aaa
cmc
bound
imull
popf
push
in
jnp
sub
mov
fwait
xchg
pop
mov
cs
lret
test
xor
xor
stos
in
aad
mov
insb
cmp
xchg
stos
fadds
inc
lock
jge
add
pop
popf
mov
dec
in
roll
xor
inc
and
inc
cmp
xchg
addb
lahf
mov
inc
test
insb
push
fildl
xorl
vpavgb
shll
dec
adc
imul
or
aaa
aad
xchg
sbb
push
aaa
loop
test
pop
addr16
insl
in
sub
xor
popa
xchg
in
push
xor
mov
sbb
mov
mov
xlat
inc
mov
adc
clc
arpl
outsb
jg
dec
in
xor
mov
xlat
mov
adc
push
adc
or
mov
mov
mov
lods
stc
cmp
lret
and
add
push
mov
mov
lcall
adc
shufps
xor
jmp
in
xor
xchg
pop
xor
repnz
data16
subl
lock
popa
jmp
xchg
mov
xor
mov
das
lcall
sbb
or
mov
lret
xor
in
lock
ret
repz
xchg
and
and
xlat
mov
xor
imul
cmpsl
jnp
sub
push
fwait
cmp
jnp
jl
in
sti
dec
mov
xchg
call
inc
or
ljmp
sbb
insl
repz
popf
cmp
cwtl
jne
test
mov
jmp
inc
mov
xor
xlat
mov
fwait
repz
shll
ljmp
xchg
jmp
cmc
lahf
into
mov
sti
ds
sbb
lcall
push
test
testb
adc
and
out
loop
sbb
and
and
leave
xor
arpl
jae
fidivrl
addl
jae
dec
imul
test
sub
int3
loopne
pop
push
das
mov
repz
bound
cmc
cmp
shrl
lods
test
jno
int3
dec
sbb
sub
mov
cmpsb
xchg
mov
adc
std
popf
daa
xchg
cli
push
imul
dec
stc
into
cmp
das
shrb
repnz
sbb
jecxz
pusha
clc
nop
dec
xchg
pmulhw
pop
incl
in
into
rorb
xor
cmp
dec
mov
sub
popa
mov
das
out
ljmp
fstps
inc
pop
jae
je
pop
cwtl
testl
mov
push
inc
or
outsb
mov
filds
je
jae
jno
arpl
push
int3
mov
pop
pop
out
add
mov
shrl
jns
sti
and
lret
pop
inc
adc
out
xchg
ss
cmpsl
mov
fwait
lret
cmp
sbb
jl
xor
lods
rcr
mov
push
cmp
push
hlt
outsl
xchg
mov
enter
dec
push
push
add
mov
jle
push
or
inc
lea
sub
pop
lahf
xchg
mov
cmp
push
push
mov
bound
ret
mov
mov
iret
push
dec
mov
sbbl
or
imul
clc
mov
inc
sbb
ja
scas
and
les
push
in
cmpl
popa
add
fdivrl
testl
mov
into
cmpsl
movsb
xor
mov
cmp
aaa
inc
cmovs
inc
gs
dec
imul
hlt
arpl
insl
cmp
das
add
dec
nop
push
mov
mov
and
imul
adc
or
std
aaa
jae
ret
loopne
xchg
shrb
jmp
jb
stos
mov
xor
cmp
clc
mov
xor
xor
sub
add
pop
insl
rcrb
sbb
jmp
scas
bound
aad
dec
inc
push
imul
cmp
roll
add
cs
out
or
test
push
call
push
imulb
stc
das
cmp
xchg
in
add
jl
imul
sub
std
or
shl
xor
rorb
cwtl
cmpsb
cltd
xchg
aad
sub
cwtl
int
ss
mov
cmp
push
test
xchg
imul
ds
sub
xor
mov
mov
cs
jo
xor
pop
femms
cmp
fcompl
not
imulb
add
mov
dec
adc
pop
pop
xor
imul
jns
xlat
jp
test
inc
test
lods
and
lret
and
in
add
outsb
pop
cs
xor
and
insb
je
insl
insb
add
insl
lds
pop
mov
cmc
fisttpll
gs
push
hlt
xchg
jno
jno
xor
in
or
out
int3
sub
sbb
xchg
aaa
mov
push
out
adc
fwait
push
push
cmp
mov
pusha
mov
or
pop
test
shrl
dec
decl
adc
arpl
pop
cmpsb
cltd
pushf
xor
movzbl
stos
or
repnz
dec
dec
sbb
icebp
inc
sub
adc
int
movsl
dec
pusha
cmc
or
js
addr16
imul
jb
out
dec
cwtl
add
dec
adc
hlt
xchg
push
jp
test
xchg
dec
dec
fidivrs
mov
mov
jg
push
cmpsl
fstpl
pop
mov
push
jp
test
adc
or
dec
mov
mov
loopne
xchg
std
fnstcw
in
imul
add
lahf
xor
add
jae
into
pushf
mov
sbb
in
jecxz
push
cmp
bound
push
jg
add
out
mov
xlat
push
cwtl
movsb
push
fdivr
insb
pop
or
lock
movsb
ret
mov
mov
pop
sub
mov
push
fucomp
xchg
xchg
cmpsl
xor
adc
fists
nop
add
jns
mov
xchg
mov
jno
repz
inc
sub
loope
xchg
pusha
add
int3
int3
clc
repz
in
pushf
xchg
xchg
pop
std
incl
and
pop
cmpsb
nop
cmpl
fdivrs
hlt
push
sahf
jo
or
stos
mov
shlb
les
pop
cmc
fnstenv
insl
fdivrl
icebp
lods
daa
mov
xchg
sahf
mov
jp
xlat
lock
xlat
jp
mov
mov
insl
push
mov
arpl
ja
cmp
fists
stos
jge
int3
test
mov
adc
xchg
rep
cmp
inc
in
mov
sar
add
fwait
push
aaa
pop
lret
jmp
add
aaa
cld
sub
lcall
fsub
fisttpl
dec
out
andl
popf
jae,pn
push
inc
push
gs
lock
popa
mov
das
inc
scas
clc
lds
dec
sub
pop
and
loop
pop
lcall
int
or
popf
jmp
xor
push
popa
inc
mov
adc
xchg
jb
idivl
stc
int
add
jmp
loopne
adc
outsl
fwait
cld
faddl
nop
testb
add
sub
lods
cld
aaa
inc
sbb
and
out
ss
pushl
out
jge
xor
cmp
stos
outsl
imul
leave
or
add
dec
mov
sub
aam
inc
xor
cwtl
enter
xor
inc
js
orb
and
xchg
pop
and
shll
clc
cwtl
pop
cwtl
scas
pop
and
mov
jb
adc
pop
popa
rcl
jbe
jmp
mov
movsl
out
adc
dec
clc
inc
adc
or
cmp
out
xchg
daa
adc
inc
int
test
nop
addr16
mov
push
pusha
out
jae
repnz
xor
pop
test
popf
fstps
lock
movsl
into
sbb
in
mov
mov
sbb
movsl
mov
jmp
test
xchg
jno
test
cmc
push
dec
sbbl
movsb
data16
jmp
jp
cmp
mov
mov
jl
jmp
es
cs
xchg
popf
push
into
and
out
sbb
push
sahf
pop
mov
out
mov
jle
dec
push
mov
in
in
stos
pop
push
xor
dec
lea
inc
dec
insl
push
sar
test
stos
rclb
fstl
rclb
sbb
xchg
movsb
or
sbb
xchg
add
mov
dec
mov
add
mov
sbb
stos
inc
add
pop
cmp
jmp
mov
in
sub
add
repnz
push
adc
mov
rorl
ficomps
outsl
pop
inc
sti
aaa
test
ljmp
mov
or
pusha
repnz
ljmp
add
das
fistpl
push
leave
push
lods
adc
scas
sub
jecxz
test
ss
inc
es
sbb
in
push
iret
leave
inc
loop
cmp
popa
jmp
sbb
cmp
out
xchg
js
or
pop
int3
push
inc
jo
dec
and
loopne
es
jae
mov
xor
mov
sub
nop
adc
out
push
jecxz
xchg
out
rclb
insl
cmpb
xchg
cmpb
pop
dec
loop
mov
sub
movsl
nop
or
fldcw
loope
jl
inc
cmpsl
test
enter
sahf
fmul
push
xlat
fistl
pop
in
mov
out
sub
or
mov
stc
loopne
les
stos
popa
enter
ljmp
orl
cmp
mov
rcrb
in
xchg
jo
push
es
inc
mov
icebp
andb
inc
add
loope
lea
dec
lock
or
repz
add
xorl
fwait
imul
or
js
xchg
jb
jge
pop
iret
incb
out
es
imul
fcoms
and
sbb
das
jnp
flds
cmpb
push
and
mov
dec
pop
pop
shlb
lret
int
dec
mov
fwait
xlat
jns
smsw
repnz
jecxz
push
xor
mov
js
ret
cs
push
sbb
pop
jge
iret
and
cmp
out
outsb
outsl
push
iret
sbb
hlt
push
xor
or
mov
jmp
cli
insl
jns
jo
mov
in
lods
sahf
add
sub
or
add
sahf
cmp
in
movsb
push
cld
push
cmp
inc
gs
ret
into
insl
jle
jp
imul
aas
inc
add
cmpb
or
push
es
xchg
jno
arpl
sbb
test
pop
leave
loop
xchg
test
negl
inc
test
inc
mov
cmp
das
push
pop
xor
rorb
int
add
imul
cmp
decl
scas
push
add
push
cmpsl
and
mov
mul
incb
lret
jnp
sti
popf
or
mov
sbbb
dec
scas
sub
or
dec
aam
test
inc
mov
mov
xor
push
cld
dec
cwtl
mov
lods
mov
pop
pop
xchg
ss
loop
jb
dec
dec
test
jbe
mov
inc
pop
adc
and
dec
cld
or
xchg
jno
into
cmp
add
sbb
xchg
mov
outsl
jae
cwtl
sbb
sbb
xchg
data16
ret
cmpsl
dec
aam
nop
rcrb
mov
jb
ds
xchg
lea
mov
inc
mov
test
sahf
ret
xor
sub
stos
push
mov
push
xchg
repnz
pushf
fcmovne
xchg
test
sub
sbb
aad
adc
call
roll
add
jl
ljmp
fs
inc
mov
cwtl
imul
cmp
shr
pop
cmp
jge
xor
mov
xchg
cmp
jno
call
popf
add
mov
cli
push
jo
lock
aam
dec
pop
and
push
and
aad
sub
fcoms
loopne
mov
mov
pusha
rolb
sbb
dec
es
lret
xchg
enter
or
mov
push
pusha
inc
lods
aad
mov
add
out
insb
je
cld
scas
ljmp
xchg
incl
out
das
rcrl
sub
js
sbb
xchg
sbb
loopne
stos
cmp
and
push
ret
adc
sahf
sub
pushf
mov
push
xor
xor
adc
sbb
stos
push
pop
mov
dec
inc
mov
fs
dec
pop
mov
std
int
scas
pop
pop
in
sbb
dec
push
inc
lods
lds
dec
mov
inc
lret
pop
lcall
sub
popf
divl
push
push
sahf
orl
cmpsb
xchg
out
pop
push
mov
or
testb
test
push
lds
adc
add
clc
ja
jae
and
jnp
dec
aaa
call
lods
pop
sbb
sub
ret
pop
cmp
loope
sbb
mov
or
popa
arpl
jbe
fstpt
mov
or
and
sbb
mov
pop
jmp
sub
sub
xchg
ljmp
imul
mov
lock
daa
cltd
leave
sbb
sub
or
mov
xor
cmpsl
adcl
add
into
mov
cmp
cmc
lret
mov
roll
aad
cmp
rep
int3
push
lock
pop
and
dec
rcrl
out
insl
mov
mov
cltd
xorb
enter
test
mov
xchg
or
sub
push
std
jmp
in
pop
ljmp
rcrl
fstl
popa
add
dec
push
sub
sub
imul
xor
cmp
inc
dec
xchg
inc
xchg
iret
pop
mul
or
inc
lds
ds
bound
stos
pop
insb
sarl
xchg
cltd
out
jb
mov
iret
fldcw
sub
jbe
pop
mov
add
pop
jecxz
or
cli
push
add
mov
jl
push
sbb
bound
ret
push
sbb
cltd
mov
sbb
icebp
cmp
mul
sub
movsl
or
iret
pusha
loop
das
jl
mov
addr16
inc
mov
ljmp
pop
ret
mov
mulb
mov
jecxz
dec
cmp
sbb
repnz
cmpsl
stos
sbb
ret
rcrb
xchg
dec
paddw
inc
sbb
test
cli
shll
jns
xchg
push
sbb
cs
repz
daa
jl
lods
and
adc
inc
ds
leave
test
mov
push
call
mov
in
loope
and
xor
enter
xchg
test
aas
rcll
punpckldq
data16
cltd
stos
dec
pop
push
in
and
ds
add
lock
pop
bound
adc
iret
push
push
call
mov
cmc
movsl
ja
mov
pop
mov
arpl
popf
push
and
ja
push
pushf
fbld
pusha
or
aad
out
cs
in
sahf
xor
test
push
enter
push
in
dec
out
lret
sub
into
in
and
sub
inc
sti
mov
push
mov
iret
repz
js
cmpl
xor
push
dec
pop
push
mov
out
inc
pop
adc
mov
or
in
imul
addr16
addl
push
sub
mov
sub
mov
and
subb
sbb
inc
add
lcall
out
mov
mov
aaa
add
jnp
mov
and
xorb
jecxz
cmp
stos
pop
in
std
dec
clc
add
sbb
xchg
lcall
sbb
add
aas
sbbb
data16
test
cmp
insb
out
push
jne
in
into
xchg
aaa
out
sbb
push
push
inc
xchg
data16
xor
or
rol
xchg
ds
sbb
test
andl
lds
cwtl
lods
out
push
inc
mov
nop
out
cmp
xlat
pop
xchg
in
ljmp
cmp
dec
pop
std
mov
lcall
ds
icebp
rorb
fiadds
xor
sti
xchg
xor
jmp
stos
fidivrs
xlat
stos
xchg
arpl
jp
mov
pop
in
ss
and
pusha
cli
scas
popa
out
es
aad
mov
pop
subb
pop
ja
mov
jae
dec
dec
xor
cli
adc
pop
andl
mov
pop
cmp
sbb
mov
movsb
or
jo
mov
bound
loop
or
sbb
and
shlb
out
repz
sahf
push
cli
mov
mov
mov
xor
lahf
pop
cmpsb
dec
mov
loope
outsb
lcall
lods
insl
loop
jg
push
imul
sbb
xchg
out
rcrb
pop
adc
iret
movsl
es
scas
cmp
jae
test
cmp
jne
xchg
outsb
sbb
rcrl
xchg
sbb
lret
mov
dec
ja
dec
adc
dec
dec
cli
pop
sbb
int
xchg
sub
icebp
fcom
jns
mov
ror
out
loop
arpl
push
mov
pop
test
jno
adc
lods
jmp
xchg
rcrb
out
jne
sbb
xchg
jmp
lods
dec
push
clc
cmp
stos
fildl
sub
movsb
adc
sub
push
pop
lret
mov
mov
jnp
inc
daa
jne
adc
mov
xlat
fsubrs
inc
add
xor
outsl
and
cltd
fidivrl
movsl
mov
cmp
inc
ds
std
jl
add
adc
scas
mov
andb
pushf
repz
jo
jl
std
mov
int
mov
add
les
iret
cwtl
movsl
xorb
jge
mov
mov
push
in
divl
and
xchg
sbb
push
idivl
cltd
mov
sub
mov
cmp
or
rclb
imul
loope
or
jns
mov
pop
insl
cli
push
mov
pop
add
jae,pn
adc
pop
sbb
adc
rcr
ret
push
int3
xchg
les
lahf
mov
xorl
out
stos
lock
add
idiv
gs
push
gs
notl
and
es
stc
enter
dec
and
lds
hlt
rcr
jno
ds
jmp
dec
mov
lods
loope
adc
aam
dec
and
pop
lods
and
push
testb
jo
pop
mov
sbb
jns
mov
in
dec
sbb
test
aad
mov
test
mov
xchg
sbb
mov
mov
dec
fsubrp
or
xlat
aad
inc
mov
dec
daa
les
stc
push
xchg
cs
jge
icebp
pop
dec
out
outsl
jle
jnp
mov
mov
pop
add
ja
lock
ss
dec
jne
orl
xchg
mov
cmp
jmp
rolb
sahf
push
cli
inc
mov
into
pushf
fiaddl
sbb
mov
filds
dec
mov
and
pop
cmpsb
das
into
xor
fwait
sub
and
jmp
shl
clc
ja
xchg
cli
lcall
sbb
aam
cmp
mov
xchg
popf
and
cmp
pop
mov
or
movl
pop
bound
cmp
push
or
jnp
pop
insl
sbb
in
mov
aaa
in
adc
lods
dec
je
mov
shl
mov
inc
jno
dec
in
dec
outsl
mov
sub
push
fnsave
mov
notl
push
or
insb
jp
jne
mov
xchg
push
clc
mov
and
nop
loop
mov
and
outsb
mov
push
insb
cmpsl
test
pop
inc
lea
add
mov
jb
inc
mov
std
push
pop
aad
movups
mov
repnz
fwait
jae
int
sub
gs
sub
mov
push
repnz
sbbl
sub
cwtl
shll
sub
pop
daa
fcmovnb
sarl
dec
out
add
xchg
fists
adc
cmpsb
add
or
or
mov
stc
mov
rcr
or
ds
leave
pop
rorl
shrb
cmovo
cmp
sbb
pop
shll
andl
sbbl
pop
cli
push
jecxz
inc
fwait
lahf
dec
in
movsl
adc
mov
cld
mov
mov
jno
and
insb
push
jle
lock
jl
jge
out
jecxz
cmp
cmp
push
inc
push
fdivr
xchg
xlat
das
and
jg
loop
or
shll
adc
xchg
cmc
mov
mov
ds
sbb
pop
xor
and
push
shl
adc
je
jle
popf
movsb
sub
mov
xchg
pop
add
jbe
push
jo
mov
stc
mov
push
dec
int
out
fs
mov
sub
rcr
pop
repnz
pop
sbb
adc
or
aad
insl
dec
cmpsl
mov
int
pop
pop
and
push
pop
rorb
fisubl
lds
sahf
ljmp
movsl
cmpsl
adc
dec
push
in
addr16
or
je
mov
ret
jecxz
test
push
aaa
or
pop
cltd
xchg
jg
movsb
cmp
push
xchg
insl
cmp
pop
pop
push
mov
sub
popf
dec
push
cmp
adc
movsl
mov
adc
cmp
inc
add
mov
mov
mov
lods
and
xchg
add
popf
cltd
sbb
adc
jnp
sub
push
pop
loope
repnz
sbb
adc
inc
push
cli
addb
bound
test
test
je
or
mov
pop
inc
fcoml
cld
adc
or
pop
enter
xchg
pop
lea
mov
xor
je
cmc
cmp
test
sti
add
mov
sub
adc
sbb
mov
je
sbb
je
int3
ds
mov
inc
call
mov
jae
test
int3
jge
mov
inc
inc
fs
hlt
jae
xchg
lds
sbb
or
rol
popl
jl
mov
jmp
sub
cmc
adc
inc
push
or
sub
sysenter
lods
push
mov
shrb
inc
call
and
test
push
aad
into
call
cwtl
into
inc
mov
out
jmp
mov
mov
leave
mov
outsl
adc
rorb
cmpsb
aaa
add
lods
xorb
jmp
iret
negl
pusha
fcomi
sub
ja
ljmp
mov
cld
fdivs
and
pop
and
test
sbb
sbb
fiaddl
mov
lahf
mov
lock
xor
fisttps
ljmp
sub
inc
lret
stos
cmpsb
jge
outsb
mov
aaa
jnp
push
push
jg
fsts
add
repnz
pop
sbbl
aas
fbstp
add
cmpsb
lods
lods
nop
inc
stos
in
fiaddl
mov
dec
in
jecxz
and
sub
or
aas
or
mov
ret
cli
pop
daa
divl
mov
ss
xor
xor
loop
sbb
sub
test
lcall
or
gs
decb
jbe
jae
cmp
fucomp
lret
inc
std
dec
pop
int3
ret
lds
int
push
aas
mov
mov
stos
mov
call
jmp
add
dec
fcmovnu
pop
out
nop
ds
xchg
push
cmp
das
movsb
xchg
movsl
xchg
push
or
sub
cmpsl
jnp
push
mov
enter
out
jmp
das
into
lea
mov
cmp
ja
add
ret
loope
rorb
sub
push
pop
pop
xor
lea
cli
ror
outsl
lret
pusha
xor
jbe
test
hlt
dec
in
jno
std
arpl
in
inc
and
sbbb
mov
popa
mov
fs
dec
shrl
ljmp
push
fldcw
mov
mov
imul
stos
rol
jge
mov
adc
leave
ljmp
push
fcomps
xor
and
xchg
mov
mov
lods
dec
jo
in
mov
loopne
or
xor
loop
mov
mov
mov
and
cmp
inc
mov
pushf
or
stos
sub
aam
pop
adc
test
dec
push
mov
leave
orb
fs
mov
pusha
cmpsl
mov
sub
loopne
pop
bound
cmpsb
push
add
and
icebp
bts
mov
mov
and
adc
lcall
ret
push
cmp
push
sub
pop
iret
sub
xchg
cltd
int
jle
mov
iret
pop
cld
push
imul
nop
cmpsl
sub
mov
xchg
sbb
rclb
or
ret
mov
xchg
xor
xchg
jle
cmpl
mov
mov
xor
inc
std
jecxz
das
sbb
mov
jne
dec
repnz
sub
gs
adc
fs
pop
push
mov
call
xchg
jge
orl
aad
adc
cli
gs
mov
mov
xor
cltd
mov
push
js
dec
mov
enter
sbb
dec
call
pop
add
mov
pop
sub
popa
mov
and
mov
add
mov
outsl
aam
arpl
aad
fistpl
movsb
in
fadds
and
icebp
lret
fistpl
sub
movsl
jecxz
xchg
fildll
add
ss
dec
sub
and
cmp
add
jbe
cwtl
out
jb
xchg
push
repnz
push
jno
dec
cmp
ds
lcall
daa
xchg
sub
push
sbb
cmp
fsts
leave
sti
test
dec
dec
mov
fstsw
out
inc
mov
popa
mov
lret
mov
rcrl
jecxz
xchg
jp
notb
push
out
ret
imul
pop
je
vmovupd
test
jl
push
notb
fucomi
movsb
repnz
or
int3
repz
sub
testb
aaa
xchg
rcll
push
fs
and
mov
sub
out
inc
sbb
and
lea
movsl
lret
iret
jp
pop
fildll
cwtl
and
add
lahf
add
fistl
mov
cltd
out
or
mov
adc
rclb
iret
pusha
sub
jo
sub
in
jb
jbe
cmp
mov
push
js
sub
cmp
popf
in
dec
or
stc
inc
add
push
frstor
mov
lods
mov
adc
pusha
mov
add
loope
add
lock
mov
jno
outsb
inc
shll
movsl
jg
nop
movsl
mov
pop
dec
pop
out
sbb
push
pop
lock
pop
fbld
insb
cs
cmp
cltd
inc
or
dec
add
getsec
pop
rol
and
fildll
jae
mov
sahf
xor
sbb
push
testb
cwtl
les
gs
cmp
mov
hlt
pop
cmpsl
and
fmul
pop
bound
jmp
mov
jp
or
fisubrl
or
int
pop
add
rcll
imul
sbbl
into
push
cli
cltd
test
scas
push
lock
dec
xchg
mov
push
rep
bound
xor
clc
lods
add
jg
pop
les
mov
clc
ds
shl
xchg
hlt
sbb
test
ret
or
lea
in
pop
jp
data16
push
jecxz
shl
sub
xor
rcrb
icebp
xchg
mov
xchg
les
ficompl
aaa
out
adc
loopne
or
mov
mov
sub
daa
orb
iret
or
ret
into
pop
stc
gs
inc
cmpsb
xchg
outsb
mov
sti
fwait
add
push
in
ja
mov
sbb
es
lahf
repz
mov
jne
test
rorb
jb
iret
in
push
cmp
ja
xor
dec
rcr
fsubrs
mov
pop
mov
out
jg
dec
sub
push
cwtl
shrb
add
mov
xor
or
aad
jmp
jl
roll
movsl
add
push
sahf
mov
lahf
push
stos
cli
cmp
mov
add
dec
cmp
test
repnz
dec
sub
mov
inc
insl
jg
inc
mov
rcll
xor
sub
mov
adc
pop
sub
mov
add
popf
testl
daa
mov
fisubl
add
push
jge
xor
cmp
cmc
lock
xorl
mov
fldl
loopne
popf
add
cmp
stos
rcl
cld
mov
movsb
mov
sbb
adc
scas
and
dec
sub
fcompl
inc
and
mov
pop
cwtl
cmpsl
cmp
shrb
inc
aas
mov
ror
sub
out
cmpsb
dec
mov
cmp
sbbb
les
sbb
mov
and
lods
dec
jg
xchg
loopne
adc
mov
aad
pop
sbb
xor
push
movsl
lea
cmp
in
pop
inc
cmp
repz
iret
xchg
test
dec
les
data16
mov
scas
stos
inc
xor
test
xlat
mov
fs
mov
dec
mov
xor
icebp
aaa
xor
das
movsb
add
jl
mov
stc
jg
sbb
std
dec
push
pop
push
push
sub
dec
rclb
pop
push
sbb
jle
or
aas
addl
daa
mov
in
mov
add
dec
hlt
and
inc
push
push
mov
inc
and
int
mov
jae
mov
insb
jns
xlat
out
js
xchg
cs
cmp
imul
repz
decl
pop
int3
stos
sbb
fdivrs
loop
and
lea
adc
pop
or
repz
mov
mov
and
test
dec
push
lds
bound
jno
aaa
lahf
les
pop
cli
and
rcl
push
xchg
push
jmp
ret
jno
rcr
cli
out
stc
xor
add
and
pop
decb
mov
cmp
bound
adc
add
mov
mov
lea
sub
pop
dec
mov
stos
adc
pop
cmp
pop
add
xchg
mov
nop
cwtl
mov
dec
adc
pushf
push
pop
add
or
mov
and
dec
mov
or
cmp
dec
and
sub
jge
icebp
xchg
push
int3
sub
cmp
sbb
stos
lret
pop
aaa
push
dec
ficompl
leave
mov
stc
sbbb
aas
out
mov
out
push
dec
pusha
orl
sub
xchg
xchg
in
fisubrl
leave
xchg
mov
mov
rorb
cmp
xor
sti
mov
sbb
in
and
popf
jns
test
andl
push
scas
mov
fldcw
mov
cmp
jae
lea
stc
and
out
add
or
jecxz
lock
adc
push
xchg
push
mov
inc
lret
xchg
lea
and
push
js
mov
popa
jge
dec
int3
out
and
push
inc
pop
sar
jg
dec
ret
daa
jnp
dec
shl
xchg
hlt
test
mov
mov
sub
dec
xlat
test
leave
pop
jae
jbe
push
jg
xlat
js
xchg
xchg
jbe
shlb
mov
jp
inc
mov
dec
or
aaa
jno
adc
test
rorb
or
std
pop
sub
rcr
adc
data16
jmp
add
cwtl
nop
rol
sbb
sahf
or
cmp
dec
jl
mov
sub
popf
pop
sti
cmp
add
data16
mov
ss
pop
push
xorb
push
cmp
cmp
in
stc
sarl
jae
es
arpl
aad
adc
repz
sbb
xchg
loopne
fiadds
dec
mov
inc
adc
pop
aas
stos
jo
ss
jmp
pop
icebp
xor
out
pop
sub
cmp
sbb
jb
das
sbb
pusha
stos
xchg
xchg
jg
push
push
add
aad
jp
popf
jle
mov
or
adc
icebp
xchg
sbb
dec
scas
das
loope,pn
or
into
inc
push
bound
pop
fistl
push
lret
add
fdiv
ja
and
push
mov
sub
pop
mov
pop
movsb
scas
xor
dec
aaa
insl
dec
insb
adc
insb
and
mov
cmp
jae
scas
xchg
adc
and
mov
jno
mov
xchg
lods
aad
inc
clc
xchg
inc
jle
ljmp
or
cmpsl
pop
pushf
mov
xor
pop
stc
ret
repz
jo
push
push
fs
repz
notl
cmc
fwait
cmpsl
aam
or
pop
sub
xchg
cli
fimull
push
xchg
movsl
push
andl
les
cmp
pop
push
xor
loop
mov
fstp
stc
iret
stos
ljmp
dec
push
dec
mov
out
test
repz
sub
stos
mov
push
push
add
aas
negl
loopne
aad
xchg
mov
scas
push
std
cmpsl
popa
jae
test
or
aas
scas
ffreep
push
inc
add
ljmp
mov
sub
and
mov
subl
jbe
or
mov
cltd
or
mov
push
in
in
inc
sbb
dec
in
lea
fcompl
inc
rcl
mov
test
mov
mov
pop
inc
in
into
or
das
push
xchg
xchg
dec
pop
and
in
adcb
hlt
popf
aad
mov
lcall
mov
hlt
vcvtsd2ss
mov
int3
push
inc
loope
repz
jp
in
test
cmp
out
and
inc
into
imul
adc
pop
imul
jmp
lea
adc
xchg
pushf
or
adc
std
inc
lret
lahf
decl
jp
orb
cli
jecxz
movsb
inc
orb
pop
lods
ret
outsl
stos
mov
in
jp
je
out
fisttps
lret
clc
es
pop
push
es
je
dec
push
sub
scas
mov
std
pop
sub
add
pushf
ds
lret
repz
xlat
movsb
fimull
mov
xchg
lcall
enter
lods
das
adc
inc
aaa
mov
mov
insl
xor
pop
aad
fst
jo
add
xchg
and
jp
mov
fisubl
nop
jae
cmc
in
dec
pop
xor
fiaddl
ficoms
inc
gs
dec
xorb
scas
mov
adc
mov
fsts
out
fdivs
sbb
cmc
sbb
and
inc
push
sbb
repnz
mov
lahf
pop
in
cmp
or
cmp
dec
popa
pop
shrl
rcll
pop
push
mov
subb
sbb
out
pop
rolb
icebp
inc
xor
roll
int3
mov
pop
dec
loopne
mov
add
and
fs
lret
xlat
inc
addr16
xor
jg
andl
insb
push
jle
jns
es
out
std
iret
arpl
js
subb
cmpb
cld
xor
imulb
int3
push
and
pop
stos
xchg
push
mov
out
xchg
negl
jmp
mov
push
push
arpl
xorb
incb
in
push
pushf
mov
inc
mov
mov
or
out
xchg
test
sbb
cmp
adc
enter
int3
dec
jmp
call
nop
das
xlat
mov
insl
cmpsl
cltd
xchg
mov
loopne
mov
and
popf
mov
mov
mov
sbb
jnp
pop
pop
jno
push
pop
cli
push
cmp
jno
xchg
dec
and
push
or
adc
repnz
rcll
and
xchg
pop
mov
pop
add
test
andl
push
jbe
pop
jnp
mov
mov
mov
mov
xor
jmp
adc
jl
lcall
jl
xor
loope
iret
lret
xlat
pop
sub
jge
push
cmp
push
rol
test
mov
sbb
lods
adc
and
cltd
cwtl
or
push
arpl
pop
mov
sbb
addr16
xchg
test
cmp
jle
cmpsl
xor
imul
add
or
jg
pop
shlb
bound
loop
add
fidivl
outsb
jne
jl
mov
push
popf
inc
mov
loopne
or
scas
loope
add
sti
sub
jg
enter
scas
enter
inc
aad
imul
mov
xchg
pop
adc
jb
movsb
inc
push
int
push
mov
clc
fisubs
into
push
loope
sbb
stos
or
scas
dec
push
loope
cwtl
xchg
mov
and
scas
scas
clc
fiadds
mov
movsl
addr16
jnp
xchg
jg
push
jno
xor
inc
lret
scas
int
pop
push
pop
int3
int
test
xor
jp
stos
imulb
cltd
lret
jbe
mov
xchg
pop
cmp
pop
nop
xor
cs
pop
ret
daa
push
and
mov
sub
push
xor
jno
dec
in
xor
push
jg
add
jne
pop
in
enter
jp
test
push
add
out
lds
mov
lds
roll
test
prefetchw
xor
mov
sub
mov
add
pushf
cmpsl
xchg
sub
dec
add
pop
in
sub
lahf
fs
fwait
mov
mov
and
cmc
mov
nop
imul
xor
adc
pop
lret
jno
cwtl
add
sbb
mov
jno
jle
sbb
xor
xor
insl
ret
aam
shll
outsl
cli
inc
fnstcw
fs
dec
daa
aaa
jmp
push
clc
ficomps
mov
data16
jp
addb
lock
je
ljmp
out
push
lcall
addr16
sti
mov
xor
je
pop
adc
sub
pop
xchg
out
dec
aaa
outsl
fs
mov
mov
sahf
mov
lahf
push
aad
xor
lahf
insb
lods
out
call
push
inc
mov
outsl
mov
pop
test
dec
mov
and
cmp
sarl
into
dec
jae
ret
xor
inc
or
jne
push
movb
call
adc
stos
mov
icebp
mov
mov
mov
pop
ficoml
adc
mov
sub
xlat
jns
movsl
jne
jmp
mov
push
pop
push
dec
pusha
int3
push
sbb
aas
mov
and
jnp
loopne
xchg
xchg
cmp
xchg
pop
sbb
mov
adc
in
mov
mov
mov
adc
push
ret
xor
push
sub
rorb
pushf
jo
push
push
daa
sub
test
adc
call
jmp
xchg
cmpsl
mov
xor
or
sbb
dec
rcrb
push
inc
pop
sarl
cmp
xor
dec
xlat
pusha
xchg
and
push
repnz
sub
adc
data16
mov
push
into
xor
xlat
lds
cli
or
outsb
push
push
sbb
pop
xor
hlt
push
fld1
inc
cmp
iret
iret
repnz
call
xchg
loop
sbb
pop
aas
shlb
loop
fcompl
mov
xor
std
adc
out
cmp
jns
push
inc
mov
ret
jae
xchg
add
or
cmp
loope
pop
fs
dec
aas
xchg
rcr
lret
cmp
or
testb
pop
and
jno
inc
adc
test
sub
cmp
ja
and
fcmove
fidivl
lods
cmpl
pop
push
cld
jb
pop
flds
addr16
jae
fstpt
xchg
add
inc
inc
scas
push
dec
insb
dec
lock
mov
stc
loop
movsl
cmc
mov
dec
in
in
cmp
inc
pop
rclb
mov
pop
subb
add
lcall
mov
leave
xor
inc
sub
in
mov
mov
push
jle
out
sbb
mov
lock
mov
fwait
icebp
jo
and
and
sarl
shll
sub
xor
cmp
scas
cwtl
idivl
pop
pop
aad
outsl
dec
addr16
stos
sub
addr16
push
pop
mov
jne
addb
or
test
mov
ljmp
call
out
xchg
inc
xlat
and
or
sbbl
inc
xor
mov
xchg
mov
rolb
popa
pushf
xchg
mov
xor
sub
and
int3
outsl
pop
mov
xor
mov
iret
mov
jecxz
arpl
mov
outsl
outsl
frstor
mov
fs
jo
mov
in
xchg
cld
popf
popl
xchg
rcr
sub
xor
fisubrl
xor
mov
adc
inc
aad
fdivrl
push
pop
in
jge
gs
xchg
jnp
out
cmc
mov
fnstenv
and
push
ret
fsub
xor
inc
jmp
sub
jno
outsb
add
jle
add
movsb
andl
cld
bnd
push
push
xor
lea
out
mov
mov
xchg
in
sbbl
cltd
jl
xor
xchg
adc
lods
or
pop
jae
mov
bound
mull
push
in
aaa
add
dec
out
and
dec
clc
jecxz
int3
xchg
data16
movsl
add
pop
ret
fcomip
js
add
fwait
add
out
dec
jecxz
sti
int
mov
das
shlb
fimull
pushl
jmp
jne
jb
mov
cmp
pop
adc
xor
sbb
sbb
out
jns
xchg
into
cmpsb
xor
test
pop
and
daa
jg
mov
into
mov
mov
test
enter
push
sahf
icebp
bound
and
ret
popa
dec
xor
sbb
jl
in
repz
loop
sub
xchg
and
and
mov
fistpll
fldz
lahf
pop
ficoml
or
lahf
insl
xchg
jno
xchg
loopne
inc
cmp
jge
or
push
shrb
pop
cmc
or
mov
idivb
stos
mul
xchg
pop
sbb
mov
aas
adc
xchg
fwait
jle
stos
es
fidivrl
cmpsb
in
mov
sbb
and
jnp
dec
test
lret
out
jp
push
mov
lods
movsb
pop
inc
or
xor
std
aaa
xchg
mov
test
loop
movsb
dec
je
sub
movsl
fisttps
adc
aam
jo
mov
mov
or
sbb
cmc
aad
stos
add
mov
mov
and
ds
add
gs
jo
sbb
outsb
loop
loopne
int
in
out
out
ja
js
jmp
mov
ror
mov
nop
inc
cmp
fwait
mov
jo,pn
in
cmc
mov
push
sbb
pop
xchg
lea
mov
in
mov
or
outsb
push
xorl
push
sahf
std
mov
jmp
push
adc
or
aam
rcl
test
cmp
cmp
fs
dec
pop
pusha
loope
mov
mov
les
outsl
mov
shll
cmp
inc
mov
sub
test
daa
adc
or
mov
inc
gs
cmp
ficoml
clc
pop
out
ljmp
std
pop
cwtl
pop
loopne
ret
daa
mov
mov
fstl
lds
rcll
test
loope
fabs
loopnew
subb
dec
nop
enter
jmp
dec
repnz
sarl
jb
cmpsl
dec
mov
stos
jl
dec
adc
mov
std
pushf
arpl
inc
outsl
sbb
sbb
and
push
and
adcb
dec
xchg
sbbl
enter
and
xor
mov
lret
cmp
and
or
pop
jnp
xchg
dec
pop
frstor
jp
ss
cmp
out
sbb
test
cmp
push
fisubrs
cltd
xchg
gs
daa
add
fldt
imul
das
test
inc
sub
fwait
in
dec
andl
xlat
xlat
inc
sub
fdivs
sarb
adc
test
and
jle,pn
mov
pop
outsl
add
fs
lret
jns
jne
xchg
decl
add
mov
in
push
or
add
xchg
out
dec
mov
fimull
or
bound
ss
iret
xor
insb
xchg
outsl
and
xor
shrb
and
jne
mov
enter
add
fnstenv
lds
enter
dec
pop
adcb
sub
jmp
dec
ja
and
mov
ja
xchg
outsl
cmp
imul
cltd
aas
fsubrs
xchg
in
test
or
das
jnp
fsubr
outsl
push
jge
test
sbb
inc
or
xchg
jnp
gs
das
push
fwait
dec
ds
ljmp
pop
dec
inc
std
push
jg
push
sub
cmp
push
data16
hlt
mov
or
push
fiaddl
lcall
xor
cmpsl
and
push
andb
sub
out
mov
aaa
data16
orb
mov
repz
fdivrs
cmp
mov
cmp
test
repnz
jb
and
movl
xor
add
aas
sbb
mov
cmc
push
bound
adc
into
jns
outsb
loopne
pop
pushf
mov
imul
outsl
pop
aas
call
or
fwait
sub
push
jne
ret
in
and
sarl
inc
mov
xor
jecxz
loop
orb
repz
adc
cmp
mov
insb
sbb
mov
cs
or
adc
sbb
lods
jge
rcrl
lock
fucom
lahf
ret
inc
or
xchg
mov
cmpb
rcrb
fldenv
or
sub
movsb
add
jl
push
push
adc
jge
xor
lahf
movsl
sub
fldcw
jne
out
out
lock
aas
daa
push
sub
pushl
adc
imul
std
pop
ljmp
pop
lret
in
mov
inc
shrb
mul
je
clc
mov
dec
sti
push
mov
hlt
stos
lret
jle
and
mov
lods
dec
xlat
fisttps
adc
fisttpll
mov
call
bound
stos
stos
ficomps
out
out
push
ljmp
add
rorl
arpl
pusha
pushf
mov
mov
mov
or
shlb
pop
adc
scas
xor
or
jmp
leave
push
cwtl
adc
in
stos
cmp
out
lds
ss
sbb
adc
mov
insl
rcrb
jecxz
jp
arpl
push
mov
jnp
jl
or
std
ret
xchg
ljmp
cs
pop
cmpsb
xchg
or
into
adc
les
push
imul
mov
cmp
xchg
jbe
arpl
hlt
sub
cmp
int3
jle
pop
pop
push
pop
push
xchg
dec
push
leave
pop
je
dec
lds
enter
mov
and
sub
int3
fcmovne
bound
sub
lods
pop
add
rclb
adc
test
xchg
ret
xchg
jge
movsb
int3
mov
xor
fiaddl
mov
fdiv
arpl
cld
icebp
insb
pop
add
cmpsb
pop
mov
xor
jge
int3
cmc
mov
sub
dec
bound
ja
jmp
std
movsb
dec
loope
pusha
add
dec
jp
mov
xor
push
push
out
pop
dec
lret
inc
inc
inc
push
pop
push
mov
aas
lahf
les
adc
out
lsl
mov
mov
jno
movsb
xchg
dec
lcall
nop
popf
sahf
add
adc
test
mov
pop
insb
aas
lahf
and
or
fidivl
jecxz
std
mov
and
test
popa
adc
hlt
adc
cs
sbb
push
subb
loopne
imul
rcrl
mov
rcll
rorb
jo
mov
jmp
fwait
outsb
and
daa
xor
cmc
mov
aaa
mov
mov
pop
sbb
pop
push
js
adc
adc
aad
repz
out
mov
adc
pop
mov
aas
fsubrp
lods
in
enter
mov
dec
sti
ret
nop
sbb
shrl
push
jle
icebp
nop
fstps
and
sub
mov
inc
adc
ret
inc
test
lds
mov
jo
pusha
dec
adc
jnp
push
aaa
or
bound
pop
out
inc
test
mov
cwtl
jb
xor
pusha
sbbb
mov
adc
and
jmp
test
adc
js
cld
jae
inc
cs
or
sbb
lret
dec
inc
add
inc
jge
inc
mov
fwait
pop
hlt
mov
jecxz
adc
imul
add
push
sbb
in
xor
sarb
or
xor
add
jae
mov
lahf
push
aaa
stos
sub
leave
mov
icebp
incb
leave
or
xchg
lret
imul
cmpb
jle
aaa
adc
and
imul
pop
adc
and
popf
cmp
popf
and
iret
call
jo
gs
dec
pop
lcall
scas
xchg
adc
sub
rol
jmp
sbb
jo
cmp
inc
ds
push
cmpb
lds
jo
dec
test
adc
jp
adcb
mov
test
push
in
scas
leave
int3
lret
dec
push
sarb
in
mov
adc
mov
inc
mov
or
ja
insl
mov
jg
or
adc
shl
cld
cli
adc
outsb
fs
cmpsb
into
xor
mov
add
cmp
pop
iret
rolb
fildl
xchg
push
das
pop
pusha
pop
addb
pop
mov
mov
out
testl
clc
ja
sub
sub
test
pusha
and
leave
pop
sub
cmpsl
cmpb
adc
xor
ret
test
dec
mov
cmpsl
push
call
dec
sub
movsb
imulb
adc
mov
nop
decb
rol
pop
dec
xchg
test
dec
push
jae
pop
inc
pop
cld
cli
jp
pop
movsb
out
pop
in
out
sub
ret
push
pushf
xchg
sub
add
sbb
mov
mov
sti
and
and
cmp
repz
jo
push
jne
xor
fldcw
dec
and
sub
sub
scas
mov
jo
push
lahf
loopne
call
add
push
xchg
mov
sbb
rcrl
sub
pop
inc
in
or
nop
push
cmp
lret
dec
mov
shll
mov
out
inc
sbb
into
or
xchg
test
sti
ss
mov
movsb
movzbl
push
add
mov
hlt
arpl
movsb
call
push
sbb
cmp
mov
xchg
jl
nop
addr16
cli
lahf
clc
pusha
jl
adc
ja
out
mov
fs
or
sbb
inc
sahf
push
lahf
pop
pop
ret
add
push
mov
and
mov
and
les
into
mov
pop
or
mov
add
xchg
cmpsb
mov
lcall
repz
dec
fwait
clc
mov
mov
push
mov
xchg
ja
cmp
arpl
sbb
imul
mov
xor
call
test
cmp
test
roll
add
leave
test
jle
pop
mov
insb
mov
loopne
mov
push
lret
or
pop
fldcw
inc
lock
fstps
popa
jne
xlat
and
fwait
lret
and
or
movsl
into
jae
mov
sbb
mov
jg
ljmp
mov
in
imul
mov
clc
cmp
sahf
notb
subb
mov
add
and
mov
mov
xlat
xchg
dec
scas
xchg
fiadds
or
repnz
ja
sbb
outsb
push
out
js
ljmp
push
out
add
xorl
pop
dec
lcall
daa
mov
cmp
adc
sarl
inc
mov
aas
fbld
xchg
jg
loopne
adc
out
xor
xchg
fidivrl
aaa
iret
imul
or
into
insb
sbb
or
lahf
inc
add
cmc
mov
xchg
cmp
daa
popf
ficompl
aaa
inc
mov
daa
cmp
add
jp
jae
pop
nop
hlt
bound
push
dec
lret
ljmp
mov
roll
fldcw
iret
mov
mov
daa
dec
movb
add
fidivrl
divl
jl
sbb
push
mov
inc
rclb
mov
cwtl
lods
dec
ret
fnstsw
fnstcw
sub
mov
in
or
push
data16
cmp
shlb
sahf
xlat
push
push
aas
fsubl
les
arpl
jns
or
sub
cmp
clc
jno
or
in
xlat
in
jle
hlt
add
and
test
loopne
add
or
stos
aad
repz
xor
shrl
sti
rcll
aaa
mov
dec
and
and
cltd
inc
in
jb
std
jno
mov
or
faddl
fcoms
loopne
mov
sbb
lods
bound
repz
and
inc
idivl
fs
add
loope
fildll
push
jecxz
mov
inc
dec
ret
add
pop
jmp
sbb
xor
stos
push
jge
and
insl
sbb
mov
lret
fcmovne
mov
xchg
pop
ficompl
test
push
ja
xchg
pop
adc
and
leave
cltd
lods
int
and
lds
dec
test
lcall
sub
cmp
add
test
mov
xor
in
jmp
mov
xchg
jb
mov
movsb
mov
clc
jnp
out
sub
sub
out
inc
push
stc
imul
sub
add
ljmp
rclb
fucomi
pushf
push
stos
pop
imul
repz
js
repz
std
test
cmp
or
xchg
pop
fdiv
invd
popa
pop
cli
dec
xchg
lret
cwtl
negb
cli
sbbb
mov
cmpb
mov
cmp
lret
loopne
sbbb
mov
loope
sub
inc
inc
bound
lret
push
enter
mov
lahf
adc
pop
outsb
bound
or
enter
outsb
sub
xor
pop
mov
jle
stc
dec
add
jbe
and
subl
and
mov
jns
add
enter
scas
push
orb
lds
addl
gs
jge
pop
dec
fsubr
mov
pop
add
adc
or
sbb
mov
add
jne
adc
dec
jmp
sbb
xchg
xchg
dec
push
lea
outsl
push
andl
push
mov
adc
sub
cld
inc
ja
sarb
fwait
loop
push
mov
rcll
pop
lcall
leave
mov
mov
movsb
pop
cs
inc
or
pop
cmpsl
jo
jmp
ud2
mov
pop
mov
adc
cld
mov
sbb
xlat
add
push
or
inc
iret
cmp
jmp
pop
scas
sub
rcrl
push
jns
es
sbb
lahf
add
xchg
mov
sarl
sub
fsubrl
push
add
xor
loopne
or
fmull
pushf
sub
mov
mov
pop
mov
or
pusha
stc
ss
pop
mov
inc
loop
test
adc
adc
cld
test
jno
jae
or
mov
out
cs
pop
and
rol
loopne
in
mov
cmc
xor
xchg
xchg
sarb
scas
es
mov
or
test
repnz
xchg
jb
sbb
adc
pop
jo
adc
xor
add
push
mov
or
mov
and
andl
sbb
cltd
scas
call
fidivrl
mov
nop
lds
movsl
insb
mov
adc
daa
shlb
mov
adc
leave
dec
and
mov
and
sub
cmpsb
mov
pop
and
sbb
sbb
push
aaa
cmp
scas
mov
lock
lea
aad
movsl
pop
out
rcll
or
xor
inc
pop
cli
push
aaa
or
dec
loopne
ds
mov
lahf
push
mov
pop
sbb
sub
out
aaa
jno
fcomi
cltd
stos
roll
sub
dec
mov
iret
cmp
pop
push
test
fstps
mov
ljmp
sbb
or
jno
xor
rcl
add
loopne
sbb
std
dec
xchg
ja
fsub
ret
mov
mov
push
push
mov
insl
push
jecxz
jnp
add
ljmp
inc
adc
dec
stc
imul
div
jns
inc
sub
push
daa
je
inc
int3
cmpl
fildl
movsb
cmp
mov
mulb
daa
test
mov
ss
movsb
push
or
xchg
cmp
inc
jo
sbb
inc
gs
test
xchg
sub
jae
mov
mov
inc
jge
mov
sbb
or
js
loope,pn
xchg
jae
xchg
and
dec
cmp
pusha
sub
test
ret
mov
mov
dec
in
cmp
testb
sub
cs
or
mov
xchg
pop
xchg
add
cmpsb
cltd
das
enter
jo
mov
gs
push
cmp
jb
mov
adc
sbb
stc
subb
scas
cli
dec
sub
notl
and
mov
int
sub
jnp
dec
rcrl
mov
outsb
cvtpi2ps
jecxz
add
out
rorl
loope
inc
cmp
leave
sub
lahf
inc
pop
push
movsl
and
mov
xchg
ret
xchg
and
ljmp
in
inc
mov
lds
xchg
xchg
jl
stos
insb
lahf
loop
dec
sbb
sbb
cmc
xchg
or
lret
jno
nop
jno
mov
and
loop
cmpsl
push
xor
mov
cwtl
inc
lds
inc
jg
stos
icebp
sub
sti
mov
pop
mov
out
sbb
outsb
pop
imul
adc
ss
mov
pop
or
andl
add
fdivr
mov
xchg
orb
mov
or
lret
jbe
jmp
and
and
fidivrl
sbb
js
sti
rcrl
jae
adc
pop
sbb
dec
mov
mov
repnz
ficoml
push
add
cwtl
dec
shrb
stc
insb
idivl
lods
inc
sbb
sub
lret
cltd
inc
sbb
sbb
gs
ja
mov
mov
fs
shll
xchg
notb
cmc
mov
insl
test
pop
inc
mov
stos
repnz
int
add
repnz
sarb
sub
pop
sbb
or
adc
movsb
movsb
push
pop
mulb
jns
xchg
pop
lods
cmpsb
mov
gs
xor
idivl
stos
mov
sbb
ds
into
pop
aaa
adc
outsl
mov
adc
push
mov
inc
pop
xchg
lds
int3
gs
ja
vpmovmskb
arpl
push
or
pop
fcomi
xchg
imul
sbb
insl
in
or
and
xor
lods
shl
push
movsl
cli
cmp
cmp
push
rcr
xchg
addb
adc
jns
xchg
hlt
int
loop
mov
mov
mov
subl
pop
dec
jo
pop
aaa
hlt
or
push
stos
mov
mov
setb
xor
mov
jmp
cltd
test
out
les
fldenv
sahf
decb
pop
adc
fstpt
jp
mov
test
lahf
outsl
mov
cmp
stos
mov
add
pop
or
cmpsl
push
inc
adc
cld
xor
mov
test
pop
repz
mov
pop
jb
cmp
mov
aas
cmp
and
jbe
pop
xchg
push
xchg
shr
nop
or
aad
addb
shrb
push
movsl
jp
into
mov
add
popf
adc
notl
sbb
fdivl
cs
es
iret
sub
push
insl
shll
jl
sbb
xchg
cmpsb
addr16
imul
cmp
ss
add
clc
jle
rol
aas
in
sahf
xchg
jnp
nop
push
aas
and
movsl
xor
inc
dec
out
jp
push
push
aas
cwtl
mov
mov
into
fwait
aas
mov
mov
or
add
ljmp
sbb
addr16
mov
sub
mov
pop
and
andb
inc
popa
dec
call
iret
mov
pop
jns
xlat
dec
stos
add
dec
imul
std
subb
sbb
call
push
mov
mov
cmp
mov
scas
popf
inc
lahf
or
mov
push
jnp
std
lret
aas
mov
orb
sbb
xchg
xor
adc
mov
std
jge
data16
movb
pop
loop
cwtl
lea
jle
ret
cltd
jge
aad
mov
in
mov
mov
mov
mov
pop
push
add
mov
mov
mov
cmp
scas
pop
aam
adc
daa
int
out
fiadds
mov
push
cmp
mov
mov
aas
pop
rcr
pop
mov
adc
adc
pop
lcall
popa
push
gs
stos
mov
and
or
fldenv
into
stos
and
sbb
mov
adc
inc
ret
or
stc
push
loop
jnp
outsl
mov
push
ljmp
xor
push
add
pop
mov
cld
mov
jnp
inc
xchg
or
push
fidivrl
push
into
and
xor
mov
sbb
push
mov
fsts
pop
adc
mov
mov
imul
jp
cmpsl
das
mov
sub
out
or
xchg
lahf
imul
nop
test
daa
pusha
jno
lods
mov
mov
and
cmp
arpl
test
imul
xchg
pop
aas
cmp
push
mov
es
mov
mov
mov
push
outsb
in
fcmovnu
sub
mov
mov
fimull
cmp
pop
ljmp
imul
jge
fcoml
sarl
xchg
and
mov
sbb
or
pop
pop
cltd
sub
mov
outsb
lret
lods
sbb
pop
or
sbbb
cmp
jl
xor
xor
sahf
mov
dec
pushf
fmulp
inc
ret
adc
and
stc
xor
imul
popa
test
xchg
add
das
or
movsb
sbb
sub
dec
rclb
dec
push
cwtl
mov
or
les
lret
mov
pop
inc
out
mov
mov
pop
inc
shlb
cmp
inc
icebp
les
mov
and
adc
pop
sub
cmp
xor
arpl
add
add
mov
push
mov
loope
xchg
jb
sub
sub
xchg
lods
pop
inc
clc
xchg
in
data16
jmp
outsl
cmpsl
jbe
push
loope
vmovupd
or
dec
mov
test
jbe
data16
call
mov
sub
lods
ficoms
imul
in
aaa
or
push
cmp
bound
xchg
jecxz
out
cmc
jl
and
js
mov
rcrl
mov
mov
xchg
or
add
insb
jno
adc
aas
cmp
and
mov
or
inc
mov
jns
aad
dec
xor
fdivp
xor
push
add
mov
loopne
push
pusha
mov
mov
cs
inc
data16
mov
fisttpll
lea
ds
pop
add
and
xchg
dec
inc
sahf
push
jle
or
pop
xor
pop
pop
je
add
xlat
scas
jno
ret
push
mov
cs
mov
xchg
and
ror
int
imul
mov
iret
hlt
outsb
jae
push
adc
cmpsl
sbb
loope
fimuls
cmp
and
fisubs
addr16
and
push
inc
mov
push
cmp
pop
adcl
ss
stc
std
push
popf
movsl
or
xchg
cmp
insl
fimull
inc
add
adc
jmp
inc
sub
in
push
adc
jo
mov
dec
and
and
mov
adc
xchg
out
sub
sahf
cmp
shlb
xchg
icebp
push
scas
mov
pusha
inc
dec
xchg
mov
xor
lret
das
push
jg
sub
in
sbb
add
adc
push
sbb
jae
push
pop
mov
aaa
jae
adc
push
repnz
clc
mov
ja
jb
adc
jne
ret
sbb
cltd
sub
mov
stos
inc
nop
xchg
or
add
sbb
addl
jl
mov
mov
iret
insl
cmp
mov
mov
inc
and
mov
mov
sbb
lcall
mov
adc
aam
xor
mov
jmp
push
push
xor
xchg
dec
push
ss
stos
cmpsl
lahf
pop
and
mov
push
push
movsb
sahf
cmp
je
push
fcomi
and
push
mov
clc
rcrb
test
xor
test
mov
push
loop
pop
inc
adc
dec
sbb
repz
dec
xor
cmp
scas
cmp
out
pop
sahf
dec
jno
in
mov
fisubrl
in
adc
jnp
and
pop
in
push
int
pop
adc
popa
stc
xchg
jecxz
bound
mov
push
js
pop
mov
call
or
popa
or
nopl
out
dec
or
outsb
dec
add
add
punpckldq
mov
mov
pop
push
mov
and
pop
pop
mov
aaa
stc
pop
aad
imul
mov
xor
cs
scas
adc
push
aam
add
in
sbb
loop
out
scas
fadds
adc
xor
repz
sarb
scas
repnz
xchg
mov
xchg
fdivrl
pop
pop
ds
xor
ljmp
sub
cmp
int3
mov
jno
or
js
dec
xor
mov
scas
push
int3
cmp
stos
std
adc
lret
push
pop
lea
shlb
push
popa
mov
xchg
mov
dec
insb
xorb
mov
lods
pusha
pop
pushf
sub
pop
hlt
mov
pop
int3
ja
pop
cmc
mov
iret
lcall
jg
inc
sahf
shlb
jo
test
lcall
addl
or
popf
mov
xor
jmp
fsubl
pop
fldl
andl
push
inc
cld
in
popa
sahf
jmp
stc
mov
pop
xor
lods
test
ss
adc
add
xor
ret
mov
jmp
repz
ret
add
daa
dec
fsubrp
and
fidivs
add
sub
pop
xchg
rolb
pop
call
ljmp
rolb
icebp
ret
fwait
xor
xlat
dec
ljmp
call
or
iret
push
xchg
xchg
sahf
mov
fdiv
pop
repz
lea
repz
mov
sbb
mov
sbb
outsl
dec
xor
int3
mov
roll
pop
insl
sti
bound
cmp
mov
ljmp
in
mov
scas
inc
push
and
idiv
mov
les
insl
xor
aam
hlt
stos
mov
mov
push
loop
mov
das
je
jo
dec
cmp
ret
push
out
sbb
call
or
and
cltd
add
shll
sti
mov
int3
jae
xorl
les
inc
scas
aaa
in
lds
pop
inc
sbbb
mov
sbb
dec
and
jne
push
hlt
push
jnp
pop
cli
inc
dec
mov
cltd
pop
in
or
push
pop
repnz
rorl
ret
lea
push
lret
js
stos
mov
xchg
jge
xchg
xchg
int3
test
add
int3
and
fistl
outsb
in
pushf
push
lock
out
mov
fsub
or
jp
lret
jo
sub
pop
xchg
and
cmp
cmpsb
xchg
mov
inc
sbb
inc
xor
out
dec
leave
xchg
jmp
pop
jne
mov
outsb
jecxz
pushf
push
jecxz
or
rcr
dec
dec
pop
xchg
pop
adc
mov
clc
cmp
mov
fs
push
fwait
add
xchg
or
daa
aaa
mov
pushl
mov
mov
mov
lret
test
shl
push
sub
outsl
mov
mov
rorl
pop
xchg
add
sbb
xchg
or
cmc
mov
xchg
cld
sub
sbb
cmp
movsl
mov
jo
insb
lea
clc
xchg
sub
mov
cltd
add
das
dec
cmp
mov
push
mov
ljmp
or
test
scas
ss
mov
leave
jns
in
adc
mov
aam
add
mov
stos
test
sti
pop
repz
insb
mov
mov
inc
jnp
xchg
or
xchg
subb
cmp
and
aad
lds
mov
mov
mov
jle
lock
test
mov
push
add
fs
xchg
inc
jnp
dec
icebp
add
cmp
add
enter
mov
jne
outsb
outsb
sti
aam
add
push
pop
xor
fdivrl
ret
xor
push
push
rcll
outsb
xlat
ds
scas
mov
in
cmc
cmp
and
pushl
push
mov
push
mov
stc
adc
xor
mov
fs
xor
pop
lret
sub
push
cli
jae
iret
fnstsw
mov
ljmp
inc
jne
cmp
push
nop
sbb
movsl
pop
sub
jne
mov
repz
pop
leave
pop
shl
ljmp
es
sbb
out
fwait
mov
inc
sub
shlb
sub
clc
js
mov
xor
jno
mov
mov
cmp
inc
sbb
dec
mov
adc
rorb
inc
jg
outsl
paddusw
push
shll
mov
nop
shlb
in
adc
mov
sbb
lret
jns
sti
push
xor
add
add
inc
aaa
pop
xchg
rcr
push
imulb
mov
jle
test
dec
fisubs
xor
test
adc
ret
push
push
loope
lret
mov
mov
jmp
rorb
xchg
shll
pop
xchg
movsl
xchg
stc
inc
jne
lds
jmp
xor
cmp
mov
xchg
shr
pop
mov
jnp
xlat
jmp
dec
xor
push
and
addb
imul
xchg
and
xchg
ljmp
pop
subl
cwtl
push
jl
bound
lock
outsl
and
insb
daa
sahf
xchg
pop
aas
stc
out
ret
inc
lea
fidivrl
mov
xchg
push
dec
mov
test
inc
cmpsb
xchg
mov
das
xchg
mov
stos
adc
leave
sub
inc
and
adc
or
out
dec
ret
mov
imul
xlat
enter
jo
and
je
pop
out
inc
sti
push
lcall
in
fiadds
or
jp
jg
movl
xor
int
repz
jecxz
lods
pushf
imul
jnp
sbb
add
daa
mov
mov
pop
inc
cmp
cmp
sub
inc
shll
fstps
cmp
pop
movb
popf
cmp
aam
fwait
cmp
cmpsl
inc
scas
and
cs
pop
scas
inc
push
das
jo
outsl
adc
in
dec
xchg
fdivr
pop
add
adc
pop
xorl
sub
clc
push
and
or
mov
enter
dec
pop
pop
int
test
xchg
dec
out
dec
imul
sub
cmp
cmp
jl
pushf
imul
inc
cwtl
dec
fbstp
je
inc
fnsave
mov
lahf
push
pushf
mov
pop
int
mov
js
xchg
push
sbb
jmp
push
xorb
ficoms
in
jns
cltd
arpl
push
fidivrl
fldcw
mov
and
pop
cmp
mov
cmp
xor
push
inc
xchg
cmp
sbb
test
insb
lret
scas
loope
mov
xchg
testl
shr
nop
sti
mov
and
cltd
orb
mov
or
enter
jnp
push
fdivrs
inc
cmc
dec
adc
sbb
rolb
fidivl
xacquire
roll
dec
inc
mov
loop
sbb
fwait
rorb
lods
xor
xchg
dec
or
cli
jo
xor
jo
mov
pop
lret
dec
rcrl
arpl
nop
leave
cmp
ljmp
or
mov
jae
mov
xor
cmp
aas
daa
push
jbe
add
lret
add
pop
xchg
cwtl
imul
nop
xchg
leave
xchg
dec
cmpsb
push
add
dec
xchg
js
in
shrl
cmpsl
sbb
arpl
stos
cmp
out
aaa
xchg
ss
dec
pop
mov
and
adc
hlt
addr16
inc
ljmp
pop
mov
sbb
mov
pop
movsb
push
cmp
mov
adcl
adc
popf
out
xchg
addb
mov
loopne
outsl
loop
pop
clc
movsb
jae
mov
aad
cmp
cltd
sbb
mov
bound
mov
and
xlat
dec
and
jp
loop
sub
push
mov
cmp
add
test
lcall
jnp
scas
jne
rcr
idiv
mov
add
lret
pop
adc
jb
gs
jns
loopne
pop
ljmp
std
arpl
mov
inc
and
cli
inc
inc
fs
data16
hlt
les
add
aam
arpl
inc
sbb
push
adc
jge
xor
sbb
in
sbbb
jge
sbb
inc
inc
cmp
jno
pop
push
jecxz
or
xchg
sbb
adc
into
cmp
out
rcll
inc
jle
add
jae
clc
jmp
pop
adc
dec
dec
add
ret
test
mov
mov
push
xchg
pop
pop
sbb
loope
and
lret
icebp
fsub
imul
iret
or
dec
inc
gs
icebp
popf
push
lock
aam
int
das
lods
jno
cltd
es
xchg
lods
adc
push
and
inc
jge
and
add
push
dec
roll
mov
inc
and
xchg
jl
push
or
sub
or
add
xor
xchg
je
sbb
push
hlt
lds
push
cmp
arpl
movsl
pop
aad
popf
xor
mov
add
mov
jmp
mov
je
jecxz
mov
aaa
jnp
mov
mov
popa
stos
into
mov
rclb
lcall
insl
lret
dec
ljmp
movsb
addl
jp
negl
inc
or
gs
sub
fisttpll
lahf
leave
arpl
mov
dec
jns
sub
dec
gs
xor
xor
jne
in
cmpl
lods
adc
test
outsl
or
dec
inc
popa
movsb
xchg
fisubl
sub
push
mull
scas
sub
and
push
pop
pop
or
sar
mov
push
xchg
scas
mov
shl
dec
mov
rcrb
mov
sbb
jb
jae
fisttpl
scas
pusha
adc
mov
lds
pusha
mov
sub
hlt
lock
sub
incb
or
sti
ljmp
add
mov
in
add
mov
xor
xor
xor
lahf
movsl
mov
pop
cwtl
jb
adc
push
push
daa
insl
and
dec
adc
call
mov
jo
sbb
pop
xchg
dec
inc
int3
loope
in
adc
stos
pop
xchg
adc
ds
addr16
adc
pop
xchg
lods
mov
shr
cld
outsb
lea
push
or
cmp
and
lods
icebp
ds
xor
loop
dec
add
cmp
inc
sub
rclb
pop
or
add
or
sub
sbb
fistpl
lods
jl
fadds
adc
leave
push
dec
sub
imul
jns
clc
jno
gs
inc
pushf
inc
push
pop
dec
push
hlt
jo
jae
lock
sbb
enter
in
loopne
jle
xchg
cld
mov
inc
jmp
pop
das
call
pop
jbe
inc
pop
xor
dec
lret
mov
xchg
jp
inc
mov
icebp
sbbb
dec
sarl
mov
lods
sub
test
mov
stos
movsb
mov
test
outsb
gs
cmp
sub
and
daa
inc
pop
out
mov
stc
xchg
test
pusha
pushf
jge
push
add
xor
mov
cmp
and
jp
cmp
nop
bound
jno
sbb
or
xor
jp
movsb
add
test
pop
inc
int
in
scas
push
jo
inc
ljmp
cwtl
popf
mov
cmp
in
jns
jecxz
nop
pop
les
push
adc
fnstenv
ficomps
mov
xchg
jmp
ds
leave
mul
hlt
arpl
pop
ja
inc
in
aaa
repz
pop
stos
mov
js
adc
dec
test
push
outsl
popl
insb
decb
jae
add
adc
pop
stos
leave
shr
in
cmp
adc
loopne
sub
and
sub
sub
inc
rcl
sub
jle
mov
add
lods
scas
fdivrs
fisttpll
outsl
inc
and
out
push
mov
cmp
mov
adc
push
mov
addr16
sbb
pop
mov
adc
popf
and
add
jns
sub
cmovno
adc
aaa
cs
mov
rol
add
cmp
push
hlt
push
cld
xor
add
sub
sub
aaa
outsl
ljmp
jmp
mov
jg
movsb
in
mov
sub
mov
out
stos
add
lret
pop
addr16
or
xchg
cli
pop
mov
std
adc
sahf
push
mov
mov
or
mov
int3
mov
jne
sbb
ja
pop
xor
ret
idivl
out
fadds
lcall
add
sbb
movsb
mov
lods
stos
out
xchg
test
aaa
lcall
jno
cmpsl
mov
fisttps
add
cltd
add
mov
fldcw
outsl
outsb
rorl
lea
mov
insl
rcrb
jmp
sbb
mov
scas
mov
cltd
mov
add
or
aas
pop
inc
scas
add
and
sub
mov
mov
ja
push
call
push
lcall
addr16
imul
lds
test
pop
dec
mov
enter
scas
xchg
incb
or
loope
ret
js
inc
mov
jno
rdmsr
dec
xchg
clc
mov
dec
inc
and
push
div
jmp
rorl
jns
jne
cmp
jp
lret
xor
mov
popa
sbb
out
rcr
call
arpl
dec
sbb
fwait
add
xor
aam
mov
inc
mov
xchg
push
cmp
sub
out
mov
repnz
dec
das
push
outsl
fs
adc
xchg
clc
pop
movsl
push
adc
popa
dec
subb
lods
sbb
jbe
add
iret
dec
lea
dec
orb
inc
shl
and
daa
dec
jl
mov
xor
and
pusha
filds
jns
int
mov
xchg
jns
jne
pop
lret
loopne
in
stos
mov
inc
push
cmp
mov
jl
fidivl
mov
stos
jg
in
lcall
push
ss
loopne
inc
xchg
lret
mov
shlb
jp
insb
test
xor
mov
mov
push
mov
mov
lret
ret
jb
movsl
add
xchg
sub
pop
jl
dec
push
test
inc
out
jmp
pop
in
or
outsl
xor
insl
popf
adc
pop
xchg
mov
adc
mov
mov
xor
xchg
xor
inc
cmp
pop
mov
out
or
fsubrp
inc
lods
outsb
inc
mov
add
out
sub
jp
mov
stc
jbe
push
in
cltd
inc
or
jge
sti
or
cmp
sbb
sub
sbb
adc
repnz
stos
lds
roll
test
cli
popf
aam
sbb
cmp
stos
ret
loopne
jnp
sub
fldl
adc
sbb
ret
sub
adc
mov
mov
push
xchg
mov
mov
pop
pop
or
pop
mov
jae
adc
lods
mov
lds
mov
lahf
jge
in
and
shl
cltd
pusha
dec
lret
xchg
outsb
cs
repz
adc
push
adc
jno
sbb
and
push
test
xchg
dec
data16
push
ret
cmc
jle
mov
test
addr16
out
xchg
cld
inc
fwait
insb
fwait
into
xchg
ret
add
mov
lahf
filds
or
popa
jp
jle
lock
cli
repnz
int3
addb
fistl
nop
stc
stos
pop
jo
lods
ret
stc
fnstsw
add
push
mov
sbb
sub
xor
pusha
push
inc
jae
rclb
aaa
cmpsb
repnz
js
test
jb
nop
fdivs
add
mov
pop
xor
xor
in
jle
xchg
jmp
enter
test
mov
jnp
test
cmp
je
and
mov
scas
adc
cli
and
sbb
std
push
addr16
push
jb
insb
xor
nop
pop
mov
mov
sub
mov
pop
mov
scas
out
or
pop
xor
jecxz
pop
mov
stc
in
jge
pop
sbb
mov
inc
xchg
fstl
jne
cmp
notl
mov
cmp
and
mov
push
mov
mov
add
stos
leave
push
icebp
jl
xchg
add
inc
xchg
jp
iret
mov
mov
push
mov
daa
cmp
dec
lea
xchg
jae
adc
jae
mov
clc
mov
or
fimull
push
xor
xor
xchg
daa
adc
push
out
jp
adc
dec
dec
roll
and
mov
sti
jecxz
test
dec
and
sahf
fdivrl
imul
and
ljmp
sbb
xchg
mov
xlat
mov
adc
inc
test
xchg
cmp
mov
pop
add
fcomi
aaa
cmc
fwait
inc
fdivs
daa
dec
test
in
and
pop
aas
int3
repnz
inc
fnsave
in
cwtl
lret
mov
bound
loope
adc
push
imul
daa
outsl
loop
lret
xchg
and
mov
xchg
adc
xchg
jo
mov
xor
loop
push
inc
pop
insb
lahf
rcll
cmpsl
pop
mov
mov
inc
int3
rolb
push
fstpl
movsl
cld
sbb
je
mov
jno
cmp
aad
sahf
mov
cmp
fs
mov
push
push
lods
loope
lds
mov
xor
xchg
aam
clc
xor
testb
mov
cmp
stc
jne
int3
imul
add
movsb
or
pop
pushf
push
mov
jle
stc
xchg
inc
mov
je
iret
add
inc
pushf
cld
jecxz
fwait
out
mov
or
imul
addr16
xor
cmp
pop
adc
es
cmpsl
cmpsl
imul
dec
pop
subl
sbb
stos
fisttps
xchg
daa
mov
sahf
and
and
and
sub
cmp
sti
xchg
pop
jne
and
xchg
fwait
push
call
pop
push
dec
scas
push
sbb
xor
in
dec
lock
xrstors
jp
xor
cmc
fstpl
loope
push
jecxz
sbb
out
xor
jb
jmp
cmpsl
jb
mov
sub
cltd
dec
js
cmp
ret
lahf
jmp
leave
incb
jnp
not
nop
iret
jne
cmp
add
pop
jmp
and
mov
mov
mov
ds
pushf
dec
imul
xchg
data16
add
rorl
clc
dec
inc
xor
mov
mov
ret
push
cli
jnp
popa
pop
pop
sbb
sub
sub
mov
scas
dec
mov
mov
les
out
test
xor
and
mov
les
push
iret
mov
fadds
sub
xchg
dec
mov
pop
mov
xor
add
cmpsl
test
fimull
daa
mov
push
jmp
stc
test
icebp
fimuls
xor
jo
nop
and
fbld
mov
fisttpll
pushf
mov
cmpsl
cmp
sub
mov
jecxz
lahf
inc
popa
lds
xchg
pop
sahf
mov
scas
add
mov
dec
out
push
negb
and
mov
mov
xchg
in
insb
hlt
aam
enter
and
in
dec
addr16
jecxz
inc
sbb
cmp
mov
scas
into
gs
shrl
adc
insb
and
das
dec
outsb
xor
dec
cltd
aad
pop
dec
add
subb
ss
and
pushf
mov
imul
or
testl
inc
cwtl
imul
inc
add
cld
out
ja
subb
jp
fisubrl
xor
add
je
cmp
push
mov
sbb
clc
pusha
xchg
fiadds
sub
notl
pusha
je
xor
cmp
add
js
jbe
cmpsb
xor
push
lahf
pusha
add
push
jno
mov
shlb
xchg
shll
cltd
xchg
addr16
outsl
adc
pop
mov
movsb
pop
jno
and
out
mov
xor
or
rorb
lret
mov
hlt
mov
xor
outsl
inc
or
sbb
orb
dec
shr
or
divb
push
xor
aaa
xor
sbb
xor
pop
xor
ucomiss
dec
bound
inc
cmp
and
sarb
push
and
pop
sbb
cli
fistl
fsub
lock
addl
lock
sub
jnp
pop
sbb
inc
mov
mov
lods
xor
add
adc
and
inc
pop
adc
sarl
inc
xchg
pop
repnz
mov
test
in
jl
enter
pop
sbb
and
popa
fcom
and
aas
and
aaa
das
sbb
call
stc
jno
cwtl
pop
xchg
aam
nop
mov
out
adc
imul
xor
stos
je
stc
popf
ljmp
pop
mov
test
orb
call
jb
pop
cmpsl
sbb
sub
bound
sub
jbe
sub
rcrl
shrl
push
shr
in
cmp
fsub
push
mov
hlt
xchg
icebp
dec
push
mov
adcb
or
fsub
rcrl
cmp
xchg
shll
hlt
call
hlt
pop
enter
cmp
icebp
jl
out
mov
cmc
icebp
dec
insb
subl
fiaddl
cld
hlt
stc
jle
inc
lcall
test
xchg
xor
and
sbb
or
out
fbld
adcl
xchg
sub
sahf
in
pop
sbb
mov
lea
jmp
jb
dec
imul
sub
dec
test
sbb
test
push
inc
add
adc
ljmp
inc
mov
pop
and
test
arpl
fs
cmp
nop
xchg
cli
mov
xor
mull
andl
icebp
mov
push
add
push
out
mov
clc
push
or
out
incl
mov
pop
sub
xor
sub
pop
jg
push
xchg
repnz
push
or
daa
jae
mov
cs
add
pusha
cmc
jno
dec
or
fs
xor
pop
jge
out
sub
and
jle
lods
lret
mov
pop
mov
fadds
outsl
daa
sub
cmp
ret
dec
jbe
push
and
test
mov
fcomps
std
pop
adc
imul
mov
and
add
pop
jae
ds
or
or
rcrb
std
loop
mov
dec
fsubrs
aaa
dec
popa
lahf
movsl
cmp
in
jno
add
fisttpl
inc
sub
loop
mov
add
sbb
sbb
sub
push
pop
mov
or
in
mov
pop
jbe
mov
stc
inc
and
push
jecxz
movsl
and
ret
xchg
hlt
das
lods
insb
cwtl
out
and
fwait
mov
fbld
loop
jmp
rclb
dec
fcoml
aam
repz
xor
shrl
mov
xor
fistpll
dec
push
sbb
mov
mov
insb
push
sti
fists
in
jnp
mov
jne
and
mov
push
mov
push
cmp
andl
pushf
stos
or
rcrl
xchg
in
stc
sbb
and
add
jecxz
jle
enter
xor
shl
sbb
add
jb
dec
pop
pop
gs
jge
and
or
or
mov
jae
addr16
cmpsl
repnz
fsubl
mov
daa
inc
stos
into
pop
adc
clc
pop
loopne
call
sbb
cmp
lds
cmp
insb
js
pop
or
and
mov
dec
mul
out
sub
roll
loope
scas
xor
lret
cmp
xchg
mov
adc
lret
fstpt
test
mov
cmc
ret
dec
leave
add
cltd
subb
dec
out
pop
lods
jmp
test
scas
sbb
loope
dec
sub
xchg
xor
bound
imul
nop
aam
imul
cmp
add
and
decb
addb
lea
roll
jp
je
pop
cmp
mov
jl
xchg
and
testl
inc
or
jbe
fcoml
hlt
sub
jbe
push
insb
loopne
mov
notl
adc
jmp
sub
sahf
push
push
mov
cmc
fistpll
mov
mov
pop
loop
dec
cmc
sahf
stos
jg
adc
std
orl
xchg
jl
sub
pop
out
loopne
mov
pushf
sbb
jae
inc
cmp
cmovs
test
dec
insb
scas
lea
add
ds
aam
sbb
mov
stc
mov
lret
fstpt
jb
sbb
and
mov
gs
mov
lahf
mov
or
add
mov
pop
adc
scas
dec
sbb
jp
xchg
push
fwait
inc
sbb
and
mov
xor
outsb
movsb
push
in
rorb
sbb
clc
cmc
dec
les
int
cmp
adcb
sahf
and
js
jp
jge
das
fnstenv
inc
paddq
or
or
dec
pop
in
mov
cli
jne
enter
sub
mov
cmpl
out
xor
movsb
repnz
push
push
push
or
aad
test
inc
in
ljmp
push
cmpsl
popf
lcallw
xor
call
mov
sub
push
test
rolb
add
leave
jmp
dec
scas
xchg
clc
push
mov
mov
dec
test
call
pop
sub
inc
out
mov
adc
aam
popf
iret
mov
xchg
push
leave
out
pushf
jae
or
mov
sbb
fsubp
movsl
insb
jns
add
aad
fwait
cmp
jl
jg
dec
loop
lret
cwtl
cmp
push
out
sbbb
fwait
out
mov
sbb
pop
mov
or
lret
xor
mov
roll
cmp
popa
in
jns
dec
shlb
sbb
sbb
in
lahf
scas
lods
mov
addr16
cmp
mov
call
sub
lret
pop
jg
mov
jne
icebp
and
ljmp
pop
fwait
in
xor
push
jmp
jne
gs
adc
jo
sbbl
dec
in
lahf
or
push
loop
pop
hlt
int
aam
add
mov
or
sbb
mov
outsb
mov
movsl
pop
clc
adc
mov
mov
push
adc
pop
mov
fisttpll
xorl
iret
push
dec
into
pop
fmull
mov
scas
cmp
lods
lds
inc
shll
sarl
dec
cld
adc
add
cltd
cmc
test
dec
or
pushf
adc
pop
nop
cltd
out
daa
pop
fidivrs
cltd
cs
mov
lret
pushf
sbb
adc
or
or
rsm
inc
aam
push
and
cmc
pusha
fcmovbe
in
out
mov
cli
mov
arpl
add
xchg
insl
movsb
xchg
cld
hlt
sub
cmp
imull
lcall
out
and
ss
dec
dec
dec
inc
loopne
gs
fdivl
aas
lret
fucom
sub
lock
cmpsb
les
jno
mov
fistpll
xchg
ja
add
clc
mov
push
rcrl
cmp
sbb
shlb
push
xor
inc
and
sti
pop
sub
jmp
in
ds
xor
ja
sar
jmp
out
or
adc
jle
xchg
pop
stos
mov
dec
pop
mov
pop
call
ret
jp
and
mov
test
and
inc
lret
mov
popf
insb
sub
pop
lods
mov
and
into
les
cmp
sub
data16
hlt
sbb
out
call
aad
xor
outsl
mov
or
adc
sbb
xor
lcall
lret
stos
test
cmp
aas
adc
mov
ret
ss
fcmovbe
fadds
jnp
mov
and
inc
pop
jae
mull
mov
add
imul
fwait
xchg
adc
mov
or
stc
movsl
jp
insb
es
movsl
fidivs
pusha
out
push
add
xor
aaa
sbb
orl
syscall
out
insl
xchg
xor
rcrb
test
aas
into
loopne
push
icebp
ja
mov
testl
int3
jmp
push
push
pop
fstl
mov
adc
adc
in
lods
dec
xor
es
cmp
mov
cwtl
aam
loope
adcb
mov
or
dec
pushf
jmp
pop
or
pop
sbb
or
push
jbe
call
and
out
push
push
push
fwait
xchg
ficomps
repnz
aam
dec
mov
lds
pop
mov
neg
cmpsl
sub
mov
push
fs
add
mov
mov
cmp
enter
stos
mov
hlt
outsb
push
xchg
xor
insb
lcall
sbb
push
in
push
sub
adc
pop
or
push
in
sub
mov
mov
outsl
mov
sub
cltd
dec
sbb
pushf
jp
mov
inc
das
out
dec
repnz
gs
fstl
test
aaa
js
adc
mov
scas
and
push
inc
xchg
ret
adc
jmp
xlat
and
and
ja
adc
xchg
out
movsl
xchg
ret
lahf
shr
pop
jno
mov
mov
xchg
adc
push
rcl
cmp
aaa
movsb
sbb
add
stc
lea
mov
mov
push
lock
in
dec
daa
cwtl
push
lods
pushf
ret
fcomps
add
lahf
cs
mov
rcrl
lods
movsb
stos
adc
xchg
mov
loope
aaa
popf
sahf
dec
cmp
rorl
cltd
dec
and
add
stc
inc
sbb
mov
sub
clc
adc
popl
jle
nop
pop
mov
ret
sbb
add
dec
sbb
sbb
in
mov
dec
sbb
pop
fisubs
mov
jns
insl
lds
fiadds
sub
bound
push
jle
mov
pop
and
hlt
mov
hlt
ss
sbb
sbb
inc
mov
cmp
sub
rcrl
pushfw
fstps
lcall
add
add
fidivl
ljmp
jns
out
xor
cmp
mov
out
sti
dec
jae
and
ja
mov
outsb
loope
aaa
enter
aam
imul
cmpsl
and
inc
lock
aas
push
dec
sub
ja
sub
mov
cmc
fldt
fucomi
aad
lret
and
pop
add
pop
mov
or
lods
or
push
inc
stos
ja
cwtl
cmpl
jb
adc
jge
aad
adc
sub
aaa
imul
pop
or
addr16
or
lret
bound
add
in
push
pop
or
push
int3
xor
add
pop
out
negb
and
shll
cltd
arpl
cmp
addl
mov
mov
adc
call
xor
in
out
mov
add
mov
jecxz
cmp
imul
xor
push
test
cltd
sub
add
repz
xchg
fdiv
sbb
or
stos
inc
out
scas
not
in
fnsave
sahf
dec
add
push
int
cmp
push
mov
lods
pop
push
shlb
fdivs
mov
jecxz
push
dec
cmpsb
mov
hlt
push
and
popa
mov
loopne
sub
sbb
dec
xchg
iret
repnz
sti
nop
xchg
rorb
mov
movsb
lods
loope
xor
push
outsb
and
insl
popf
dec
mov
pop
or
push
dec
cmpsl
push
xchg
or
call
pop
je
bound
pop
fadd
dec
stos
xor
lcall
sahf
gs
ss
push
add
push
filds
sub
xor
cmp
xor
sub
and
daa
mov
inc
cmp
mov
and
xchg
nop
icebp
mov
cli
daa
pop
add
cmpl
lret
adc
adc
js
xor
push
dec
ja
out
repz
xchg
aad
cwtl
or
ret
inc
cmp
ds
inc
outsb
sub
adc
mov
mov
nop
inc
sahf
pop
das
gs
imul
dec
push
jne
cmp
imul
ss
or
pop
inc
out
rol
adc
push
jns
dec
es
jae
sub
push
xchg
mov
ja
xchg
dec
sti
cltd
out
xlat
stc
and
daa
or
fldenv
dec
cmc
scas
lea
ljmp
ret
push
xor
ss
outsl
pop
dec
mov
cli
push
dec
xchg
push
sub
sti
outsl
xchg
xchg
cmp
roll
out
push
pop
add
inc
pop
push
mov
mov
insl
mov
jno
int3
sbb
stos
mov
es
adc
movsl
ds
cli
cltd
mov
cmpsb
sbb
pop
cmp
std
add
bound
mov
jl
or
fistpl
test
int3
sub
sbb
inc
pop
jns
imul
clc
shlb
xor
sbb
stos
movsb
incl
jge
iret
enter
dec
mov
out
adc
in
and
scas
jne
xlat
nop
and
mov
add
cmc
add
insw
xor
sbb
adc
xchg
xchg
push
and
int3
les
stos
xor
sub
je
jecxz
int3
gs
mov
je
clc
push
jns
inc
imul
push
insb
mov
cld
movsl
xchg
lcall
imul
out
and
mov
ljmp
xchg
fcoml
mov
sbb
xchg
inc
pop
loop
ljmp
mov
adc
xchg
jp
lock
mov
out
cmovns
repnz
leave
mov
rcr
enter
add
inc
cmp
jle,pt
mov
mov
sub
adc
cmp
rorb
sbb
sti
sahf
adc
leave
add
jl
lcall
int3
adc
jg
lcall
data16
dec
lods
addr16
xor
mov
fidivrl
pop
rorb
jp
pandn
daa
arpl
addr16
clc
pop
in
inc
dec
ret
xchg
popl
dec
jnp
or
leave
sbb
cmp
inc
push
jecxz
sbb
clc
shrb
int
es
mov
add
cmp
loopne
std
shrl
lock
decb
sarb
movsl
fimull
add
shll
rolb
jne
stos
jl
cmc
adc
sbb
aad
pop
pop
fimuls
xchg
dec
das
sarl
xorl
pop
leave
mov
or
pop
jl
push
std
jle
mov
xchg
jg
mov
dec
and
mov
stos
pop
and
rol
test
je
sub
jb
dec
ficoms
cltd
fwait
mov
ret
fldt
add
hlt
sbb
fidivrl
jnp
mov
ds
sub
sub
addr16
rcrl
push
mov
xchg
testl
out
data16
insb
ss
cmp
js
dec
mov
fs
add
mov
mov
andl
sbb
or
jae
adc
xor
sbb
mov
sbbb
std
mov
fnstenv
push
mov
xchg
xchg
push
shr
mov
pop
cwtl
dec
into
xchg
dec
fisttps
cld
jg
repnz
hlt
aad
mov
scas
push
jo
hlt
ficoml
loopne
andl
aam
cwtl
dec
stc
dec
mov
xor
loopne
pop
scas
dec
call
js
ja
movsl
or
addr16
push
aas
ja
pop
push
push
or
push
ss
jmp
mov
jae
xchg
sub
cmpb
mov
mov
pop
mov
mov
pop
cli
test
mov
mov
out
cwtl
mov
push
jecxz
stos
inc
lock
cmp
pop
xlat
push
xor
cmp
rcrb
inc
pop
pop
stc
es
sbb
mov
and
sub
mov
cwtl
push
cmp
xchg
jp
nop
and
minps
sahf
cltd
mov
mov
push
push
xor
sbb
cs
dec
pop
add
sti
xlat
mov
aad
inc
push
and
aaa
adc
fdivl
divl
cli
stc
aas
push
sub
outsb
pop
les
sbb
jecxz
push
xchg
xchg
je
mov
mov
aam
jae
hlt
lcall
shrl
out
mov
jb
mov
hlt
inc
sti
cwtl
cli
popf
lds
xor
aad
jp
dec
mov
js
lret
loopne
sub
xlat
lret
mov
push
xchg
add
sub
sbb
jno
inc
push
mov
push
scas
dec
js
mov
dec
aad
shr
xor
sub
fisttpl
iret
inc
mov
in
inc
cmp
aas
mov
sahf
pop
pop
test
lock
add
dec
cmp
test
rorb
xchg
lret
in
and
out
xor
xor
cmp
sbbl
mov
popa
and
into
loop,pn
lcall
mov
cmp
test
jo
jb
aad
inc
sbb
sbb
xchg
add
cltd
mov
mov
out
scas
push
xor
daa
inc
sub
mov
paddsw
testb
push
xadd
cli
mov
rclb
popf
jp
out
ss
dec
add
or
sub
orl
cltd
pop
inc
cmp
xorb
cmpsl
incb
mov
inc
pop
xor
jge
xchg
dec
mov
inc
sbb
xor
sbbb
popf
push
and
imul
xchg
repnz
mov
push
loopne
xlat
cmpsb
arpl
cmp
leave
jb
inc
jp
outsl
cmpb
rol
xchg
and
xchg
popa
jae
loope
adc
xchg
push
pop
add
xor
sub
mov
call
daa
xor
aas
in
jmp
adc
push
push
aas
jecxz
mov
xor
int3
loope
pop
fwait
test
mov
sub
lods
in
lods
xchg
pusha
and
fsubrl
pop
adc
daa
ss
ss
jne
xchg
lds
shll
or
loop
mov
nop
mov
test
mov
data16
in
jecxz
add
xchg
outsl
push
push
lds
ds
sub
push
dec
in
nop
inc
movsl
clc
jg
lcall
icebp
lret
outsb
jb
inc
sub
inc
and
shlb
cmp
and
jge
daa
nop
aaa
pusha
xor
push
lea
int3
shrb
mul
pusha
mov
push
add
out
fidivl
aaa
mov
xchg
ds
fwait
adc
loope
not
sub
mov
and
js
ja
out
jl
lea
rcll
mov
and
sub
push
ljmp
das
mov
add
andb
cvtps2pd
lcall
or
or
push
int
push
mov
dec
stos
out
imul
cmpsb
test
pushf
sub
mov
cmp
xchg
jb
push
and
and
test
fldcw
icebp
dec
inc
test
xchg
xlat
cli
ja
in
ljmp
jae
pop
out
stos
lods
mov
nop
dec
dec
ret
mov
sub
sub
shlb
mov
fimuls
sub
jns
popa
xor
adc
movsl
pop
fidivs
xchg
and
inc
inc
sbb
dec
dec
loope
movsb
ret
adc
lods
call
inc
jl
dec
lret
sub
push
push
ret
repz
das
mov
mov
push
inc
mov
fwait
add
mov
mov
repz
imul
repnz
xchg
pushf
jae
push
jl
jno
and
inc
out
adc
jp
out
rcrl
jno
push
movsl
in
push
popf
sub
out
xchg
mov
jae,pt
cwtl
pop
sbb
cwtl
clc
xchg
cltd
inc
xorb
mov
mov
adc
insl
fsts
mov
mov
repnz
addr16
xor
shll
ror
push
rol
xchg
rclb
xor
push
push
loop
sbb
cmc
stos
aad
jnp
sbb
mov
inc
mov
test
dec
hlt
and
xor
es
mov
sbb
add
mov
popf
xchg
aam
pushf
mov
pop
push
cmp
ret
mov
dec
test
mov
pop
call
lret
pusha
mov
shlb
mov
cmp
push
out
fcmovb
adcl
fucomi
rol
in
sarb
int
or
into
sbb
ljmp
cmp
xchg
cmpsb
out
scas
pop
push
dec
mov
in
mov
sub
jns
pop
mov
fs
pop
jnp
ret
add
lods
mov
lods
stc
mov
jl
nop
lcall
mov
adc
ret
int
and
fisubs
push
jecxz
sbb
fs
push
jmp
pushf
sbb
scas
mov
mov
cmpsl
bound
add
or
mov
mov
ret
lods
enter
hlt
js
ds
jns
sbb
xlat
sbb
push
repnz
ljmp
mov
test
subl
or
xor
jno
sub
or
nop
aad
jle
adc
or
cmc
lds
pusha
sub
loop
xor
add
and
out
dec
repz
jno
sub
and
sahf
xor
xchg
inc
adc
in
js
mov
hlt
rorb
sub
push
xchg
popa
mov
ret
mov
aam
add
xor
iret
lods
cmp
dec
sbb
mov
or
mov
test
or
enter
mov
sub
movsb
inc
repnz
jl
iret
shll
xchg
or
out
notl
fcmove
clc
xor
popf
cmpsl
add
jle
jbe
dec
movsl
test
pushf
mov
pop
push
or
test
stc
sub
jp
test
pop
dec
xor
or
mov
scas
arpl
divb
inc
addr16
rcrb
cmp
mov
jne
das
mov
sarl
pop
data16
jle
mov
pop
xor
in
les
sti
loopne
sbb
icebp
rcrb
call
testl
enter
add
lahf
xchg
je
mov
lock
mov
inc
adc
jo
jl
inc
jne
cwtl
fwait
cmp
add
aad
faddl
movsb
and
sub
loop
loop
add
cmp
das
ret
sahf
cmp
mov
popa
adc
fidivrl
lret
mov
in
jb
sti
xlat
jb
or
hlt
aas
adc
inc
pop
cmpsl
jle
inc
inc
sub
int
and
enter
loopne
pop
sbb
in
mov
cs
test
mov
push
jno
fs
pop
insl
pop
sub
dec
movsb
enter
mov
into
testl
aaa
test
aad
insb
cmc
subl
sbb
cwtl
xor
pushf
push
cwtl
mov
sbb
xor
flds
pop
pop
xor
xchg
push
sub
mov
mov
add
cmp
lret
lock
mov
xor
imul
sub
in
js
jmp
add
push
cld
test
jg
and
cld
jne
mov
adc
cmp
sbb
int
aad
enter
sahf
mov
and
data16
inc
push
std
mov
inc
mov
mov
mov
mov
test
mov
stc
jmp
xchg
mov
dec
mov
push
fsubrs
imul
outsb
dec
pop
xchg
stc
rcr
mov
push
movl
filds
mov
mov
insb
mov
int3
sbb
leave
add
xchg
add
repnz
gs
dec
cltd
inc
aad
test
push
mov
test
stos
sbb
sbb
sbb
test
repnz
sbbb
jbe
mov
mov
jns
jnp
xchg
fdivs
movsl
xor
xchg
and
jg
nop
dec
sbb
and
cld
xchg
pushf
scas
pop
add
add
jp
xchg
ja
xchg
subl
fcompl
ss
dec
push
pop
and
lods
decl
icebp
mov
add
sub
xor
aad
cwtl
fs
xchg
cld
leave
pop
lcall
sub
in
mov
rolb
ret
or
js
imul
inc
mov
data16
sub
stc
fs
mov
in
addr16
cld
push
int3
into
mov
pop
andl
jbe
stc
icebp
std
jno
dec
xbegin
sub
lcall
sub
lcall
aaa
mov
es
leave
in
test
add
scas
xor
jne
xor
pop
add
or
and
loop
movsl
jg
push
and
add
shll
sbb
pop
jp
leave
push
sub
inc
push
into
sbb
inc
jecxz
mov
shrb
push
inc
in
xchg
mov
mov
sbb
xchg
shlb
and
ret
nop
int3
lods
push
addr16
mov
gs
jge
lea
xor
movsl
sbb
add
fsubp
push
cmp
lahf
insl
inc
jle
xorb
pop
pop
arpl
pushf
and
cmp
pop
sbb
pop
jmp
sub
movntps
es
fs
and
clc
nop
jno
mov
pop
into
fidivrs
or
stc
divl
test
lods
or
inc
loope
pop
shl
dec
out
pop
dec
in
cmp
in
pop
jo
dec
test
xchg
sub
jmp
xor
mov
pop
out
test
push
outsl
adc
ds
movb
in
pop
add
xchg
fdivr
sbb
and
add
cltd
jp
push
sbb
outsb
sbb
stc
inc
adc
jns
shlb
cwtl
inc
mov
ss
pop
jne
xchg
jmp
push
lret
rcrl
loope
pop
decl
dec
daa
call
push
jae
add
push
daa
pop
mov
pop
aam
and
lahf
in
lret
rep
push
inc
cmp
jg
and
ljmp
int3
xchg
xchg
bound
mov
adc
imul
loop
push
inc
test
jmp
add
subl
mov
adc
and
sub
mov
test
movsl
push
jbe
fcompl
add
movsl
jecxz
fs
jne
js
lods
adc
fistpl
mov
sbb
imul
stc
movsb
sub
popa
mov
dec
ljmp
mov
icebp
shrl
ss
aaa
pop
mov
adc
aam
in
and
or
add
jp
insl
push
or
xor
ffreep
aam
movsl
pop
jl
jp
add
pop
int
mov
inc
push
xchg
push
or
aad
inc
mov
mov
cwtl
fldcw
ljmp
mov
aad
sub
xorb
mov
push
pop
outsb
aad
jle
pop
push
mov
mov
lahf
sbb
mov
lret
lds
add
cmp
xchg
inc
cwtl
mov
fldl
inc
popf
sub
mov
andl
jns
push
out
mov
lret
add
shrb
cmc
clc
xorb
gs
test
jmp
adc
cmpsl
sbb
mov
popa
cmp
inc
adc
mov
xchg
inc
test
clc
fwait
inc
push
out
adc
push
stc
jge
mov
stos
idivb
dec
rclb
lds
pop
jp
xor
push
cwtl
rolb
pop
dec
pop
add
es
mov
or
add
mov
mov
into
cmp
mov
jmp
enter
push
and
shrb
ss
test
fwait
mull
ss
sbb
sarl
in
insb
xor
aaa
add
aaa
lahf
and
push
pop
jmp
out
bound
dec
cmp
rolb
pusha
divl
cltd
fs
jmp
add
nop
fwait
ljmp
cmp
stc
ljmp
mov
pop
leave
icebp
adc
repnz
test
bound
sub
test
out
xor
pop
leave
jne
idiv
push
cmp
mov
sti
sbb
push
in
mov
in
cmpsl
jnp
lds
out
mov
mov
loope
push
les
stc
xchg
or
pop
in
ja
roll
add
xor
cltd
gs
and
fisubl
mov
xchg
addr16
sub
inc
arpl
dec
mov
mov
pop
icebp
ret
shll
test
mov
fs
cli
xlat
dec
mov
icebp
cmpsl
sub
inc
out
aam
inc
inc
and
mov
mov
and
sbb
push
mov
dec
in
cmp
xor
xor
mov
mov
dec
mov
stc
or
movl
aaa
sbb
pop
add
and
sbb
cmp
mov
xchg
dec
in
inc
push
mov
jo
jp
sbb
bound
sbb
lcall
and
cs
repnz
pusha
xor
or
jmp
ljmp
popw
cmc
cmpsl
and
mov
push
jg
in
mov
and
lret
lds
fwait
mov
das
inc
lods
call
sub
dec
cmp
sti
inc
test
pop
dec
ljmp
adc
test
sub
mov
lret
into
stos
xor
pop
cmp
sbb
test
add
lcall
push
fildll
lcall
push
popf
or
or
mov
xor
loopne
lret
xchg
iret
adcb
fs
push
repz
test
cmp
sbb
js
cwtl
lcall
inc
fcomp
sbb
jmp
repz
jecxz
pop
xchg
test
adc
pop
push
jmp
and
push
cmp
test
lods
push
pushf
sbb
mov
insl
cld
dec
xlat
pop
mov
cli
pop
and
stc
js
sbb
mov
in
sbb
cmpsb
cltd
xchg
fldl
insl
inc
fcom
lret
jmp
jo
or
scas
xor
jo
xchg
dec
adc
ror
jl
sbb
jo
or
pop
push
fxch
inc
mov
mov
add
sbb
es
pop
pop
icebp
cmpsb
sub
flds
pop
inc
add
cltd
fimull
int3
inc
dec
insb
leave
add
xchg
aaa
adc
sbb
inc
mov
inc
and
xchg
push
push
push
das
push
sbb
push
popf
lea
inc
mov
scas
ret
sub
fimull
jae
mov
xchg
enter
inc
lret
cmp
lods
outsl
lds
sub
mov
testl
divb
arpl
andl
scas
lret
mov
int
lahf
adc
lds
gs
into
pusha
xor
jno
andb
loop
cmp
jbe
movsl
imul
jmp
test
aad
inc
das
pop
or
push
mov
movsb
hlt
dec
mov
mov
pop
push
mov
cmpsb
add
cmp
sti
adc
xorl
mov
adc
cli
jno
xchg
add
mov
outsl
xor
dec
roll
mov
cwtl
sub
mov
test
rcl
push
pop
inc
jl
jns
data16
add
int3
mov
ja
inc
rorb
cld
sbb
sub
mov
ja
pop
shr
and
xor
inc
add
outsl
repz
out
rclb
push
cltd
popa
xor
xchg
loopne
popf
xor
out
pop
aaa
jo
add
xchg
cmp
xrelease
jecxz
stos
clc
sbb
hlt
or
scas
dec
nop
lahf
mov
pop
xor
movsl
mov
inc
inc
lds
clc
ror
stc
mov
dec
ss
lret
das
fldt
jge
mov
cmp
lods
xchg
outsb
dec
add
add
mov
xchg
cmp
gs
rcll
push
lea
imul
push
sbb
scas
push
adc
adc
enter
scas
sbb
jg
vpxor
stc
sbb
test
icebp
mov
shlb
mov
cmpsb
mov
mov
fdivs
mov
jl
dec
cltd
lcall
push
test
dec
icebp
insb
repz
fwait
mov
pop
push
enter
push
rcr
hlt
ljmp
push
test
jmp
loopne
out
fstps
jle
outsb
mov
mov
dec
mov
pop
push
sahf
sub
cmp
inc
inc
bound
jbe
jmp
clc
xchg
mov
and
sarb
lret
out
cmp
shll
jnp
xorb
lret
stos
xor
aam
aaa
mov
int
or
jecxz
xchg
arpl
xchg
daa
mov
inc
push
je
cmp
or
stos
mov
pop
xchg
cmpb
repz
push
and
stos
mov
jne
insb
mov
andb
inc
sub
loope
pop
je
aam
push
in
mov
sbb
push
stos
lock
cmc
in
scas
pop
cmp
je
pusha
push
mov
mov
mov
out
cmp
repnz
adc
clc
mov
lret
idivl
ja
scas
sti
inc
and
xchg
mov
test
imul
dec
pop
insb
sbb
loop
outsb
jnp
sbb
aad
je
dec
mov
mov
cmc
mov
ljmp
inc
stc
fiadds
xor
stos
and
jae
fbstp
sub
inc
pmulhw
add
arpl
ds
nop
mov
jl
movsl
js
sbb
in
xchg
out
adcb
jmp
or
mov
jge
or
dec
cmp
sub
sarb
out
pop
fnstenv
pushf
and
inc
xchg
outsl
xor
sbb
pop
adc
lea
into
push
gs
mov
dec
in
push
aaa
stos
adc
sub
mov
jo
pop
movsl
insl
or
arpl
fcoml
sbb
push
xlat
jle
and
xor
ds
ret
jne
stc
xchg
adc
test
loop
stos
adc
shrb
or
in
je
jno
addr16
in
fdivrs
push
cmpsb
test
mov
sbb
mov
jmp
scas
xchg
jnp
dec
push
adc
insb
aaa
mov
aam
outsl
sti
int3
or
in
dec
inc
xlat
jbe
pop
mov
cmp
or
sbb
mov
data16
movsb
mov
ja
in
imul
and
test
iret
or
push
in
into
pop
loopne
jge
rcrl
rorl
test
pop
mov
fwait
in
add
sbb
add
cld
mov
or
inc
mov
lahf
addr16
in
call
pop
mov
pushf
ljmp
imul
inc
pop
lahf
mov
and
inc
mov
sub
out
adc
mov
and
stc
scas
and
stos
and
loopne
pop
mov
rcl
mov
dec
pop
or
lret
inc
pop
lods
add
jne
pop
cmp
int
ds
inc
jl
mov
rcll
outsl
lods
inc
push
stos
addr16
js
out
pop
jns
mov
adc
mov
mov
mov
pop
nop
inc
sbb
lret
arpl
dec
inc
add
inc
sbb
jnp
xor
sub
imul
sub
test
dec
adc
fidivs
andb
popf
add
out
xchg
xchg
out
inc
scas
mov
dec
int
push
and
iret
xchg
mov
cmpsl
outsl
xor
mov
xchg
shlb
roll
and
dec
adc
or
inc
cmp
dec
out
mov
add
lods
leave
enter
push
ds
pop
mov
sti
push
mov
pop
push
push
push
gs
mov
std
aas
mov
jmp
mov
mov
jns
lret
pop
mov
popa
xchg
imul
mov
int3
sbb
jg
inc
je
imul
fmulp
sub
sub
cmpsl
subb
inc
pop
xor
push
sub
sub
add
sub
rcll
cwtl
mov
mov
lret
divl
xor
xor
lahf
jmp
movsl
sub
outsl
pop
outsl
addr16
les
out
es
jmp
mov
add
xchg
dec
dec
and
and
inc
clc
aas
or
stc
int3
cmp
xchg
dec
sbb
ffreep
add
or
rcl
cmp
jmp
pop
mov
sar
mov
out
insb
data16
flds
or
dec
lret
and
sub
stc
push
into
insb
test
lds
fimull
fnstenv
enter
sub
jp
fsubrs
andb
test
fstpl
movsb
cli
jmp
and
cwtl
sbb
insl
add
stc
stos
sub
rorb
cmpsl
loop
mov
jg
mov
xchg
pushf
lahf
pusha
xchg
rcl
lds
mov
dec
jecxz
pop
mov
jg
push
xchg
dec
sbb
cmp
pop
or
mov
xchg
movsb
jb
adc
dec
pop
mov
loop
mov
add
clc
rcrb
mov
push
lret
dec
mov
pushf
pusha
adc
mov
aam
adc
inc
insb
xchg
sbb
scas
scas
mov
dec
data16
movsb
fldt
pop
ret
std
imull
and
popa
mov
and
stos
stc
pusha
pusha
xchg
outsl
idivb
and
sub
js
pop
ffreep
rcll
jb
stc
cmpsl
insl
movsl
lahf
mov
lods
shrl
xor
pusha
push
pushl
popa
inc
loopne
ficoms
mov
jnp
cmp
pop
mov
push
cwtl
push
int
hlt
inc
push
jg
ds
xchg
lret
mov
popf
fnstenv
pop
pop
test
cmp
lods
or
addr16
inc
cli
jns
inc
addl
xlat
xor
mov
addl
and
pop
mov
cmp
ss
shl
repnz
push
xor
mov
into
fidivs
icebp
insb
insb
pop
imul
mov
lock
sbb
xchg
jns
mov
lods
popf
cmpb
rol
sbb
xor
xchg
mov
sub
inc
xor
and
inc
pop
cmp
lods
cli
cmpsb
out
mov
jl
mov
insl
lahf
push
sub
push
repz
imul
push
mov
dec
fsubrs
scas
pushf
xchg
xchg
xor
jbe
adc
add
xchg
lcall
bnd
lret
sub
and
mov
mov
xchg
mov
cmp
rol
lods
mov
scas
ficompl
cmp
mov
mov
mov
pop
pop
je
jecxz
and
pop
cwtl
and
mov
test
xlat
fisubrs
popa
cli
adc
cmp
imul
inc
xor
or
das
mov
adc
dec
sbbb
stos
sbb
sub
repz
jg
stos
push
aas
lret
ds
aaa
nop
mov
movsl
xchg
test
adc
in
test
or
jnp
inc
std
dec
xchg
popa
adc
mov
inc
divb
int3
loop
pushf
loop
sahf
xchg
jae
mov
mov
sbb
sub
inc
sti
mov
cmp
dec
sti
fmuls
sub
test
cltd
hlt
xchg
add
out
cmpsl
movsb
inc
fimull
cmpsl
xchg
jle
mov
pop
push
jne
cwtl
push
movl
mov
mov
push
jbe
add
and
cmp
dec
xor
sbb
mov
fcmovbe
xchg
mov
cmp
inc
cmp
data16
jno
lea
subl
aas
push
cwtl
push
fcoms
xchg
or
scas
jge
in
shl
leave
or
pusha
das
testl
arpl
inc
adc
lcall
mov
lahf
popa
mov
push
mov
xchg
dec
in
clc
loopne
inc
push
adc
filds
xor
imul
or
jge
nop
jge
popa
pop
mov
pop
dec
pop
dec
mov
push
int3
pop
push
rclb
hlt
rorb
push
imul
xor
subl
mov
jmp
inc
sbb
jl
scas
das
fdivr
mov
xchg
push
sbb
and
jbe
call
mov
imul
rorb
jns
mov
fdivl
xor
or
push
stc
mov
mov
cmp
add
clc
aam
mov
adc
push
repnz
dec
shlb
xchg
rcrl
add
pop
push
mov
neg
lds
xorl
roll
jb
push
cld
dec
lock
pop
adc
cmc
dec
push
mov
insb
rol
lock
or
adc
push
scas
jg
pop
cmp
out
xor
xchg
xchg
dec
fnstcw
push
popa
sbb
fwait
adc
lods
hlt
jo
int3
pop
add
enter
jbe
ja
xor
loop
xor
add
enter
mov
push
fisttpl
push
out
xlat
inc
xchg
repnz
mov
es
loop
pop
inc
enter
icebp
repz
push
lea
sahf
pop
push
push
ss
pop
push
or
jmp
jecxz
lret
pop
xor
pop
inc
lcall
mov
stos
add
lds
add
in
lods
mov
pop
jns
movsb
cmc
adc
add
notb
xorl
mov
mov
adc
clc
int
mov
aam
cmpsl
pop
dec
or
sub
daa
mov
std
pop
pusha
xchg
xor
das
out
mov
sbb
in
not
pop
jnp
aad
add
lret
cmp
sbb
mov
sub
in
call
pop
mov
sti
sub
push
stc
imul
loope
stos
inc
nop
in
pop
pop
lods
dec
stc
int3
bound
mov
outsl
xlat
or
mov
movsb
lret
mov
jp
mov
out
testb
pop
fidivl
pop
popa
push
loop
jbe
movsl
sub
roll
mov
mov
mov
shlb
sub
dec
test
add
or
scas
inc
sbb
scas
push
fdivr
repnz
sbb
or
je
insl
push
ret
in
btc
push
insl
cmpsl
bound
movsl
fxch
xor
enter
sub
pop
jmp
cltd
push
push
clc
mov
fistps
xchg
lock
mov
lock
icebp
sarl
fimull
hlt
push
fcmovnbe
test
sub
dec
dec
mov
insb
add
push
frstor
push
or
xchg
cwtl
inc
push
into
bound
jb
or
cmc
movsl
sub
inc
in
cs
push
adc
imul
inc
divl
mov
pop
xlat
bsr
dec
xor
dec
in
test
sti
sbb
xchg
das
jae
in
mov
lods
dec
sbb
push
mov
dec
pop
push
cld
insb
insb
sahf
xor
push
loope
add
rolb
push
lcall
and
mov
xchg
sub
push
cmp
movsb
lret
or
sti
mov
mov
xor
repz
enter
ds
lcall
mov
add
lahf
jl
xchg
mov
aam
je
lds
inc
lods
bound
movsl
jl
add
cltd
out
aam
xchg
enter
push
dec
dec
cmp
insb
pop
pop
add
add
mov
adc
fisubs
ss
pop
inc
sbb
popf
outsb
aaa
pop
or
sub
lahf
lods
and
jle
lret
pop
cmpsl
in
jmp
insb
push
pop
lcall
jecxz
and
xor
dec
mov
popa
inc
adc
arpl
or
pop
loopne
sub
fimull
add
sbb
lret
jmp
or
roll
ja
ret
mov
in
sti
dec
xchg
jmp
lea
sub
jo
aad
lret
loope
test
lret
xorb
xor
pop
fcmovnbe
add
call
rorl
nop
fidivrs
push
lods
ret
push
sbb
lea
push
stos
inc
dec
pop
lret
jno
scas
hlt
sbb
mov
popl
xchg
cmpsb
xor
push
add
and
mov
mov
push
insb
scas
mov
je
scas
dec
call
cmp
mov
out
jbe
cmp
divl
int3
insb
fsubrl
xor
out
into
mov
add
or
xchg
mov
or
cmpsl
and
into
lret
test
outsl
sbb
mov
mov
mov
dec
add
jno
fwait
mov
xorb
call
sarl
stos
loopne
outsl
fidivs
stc
cmc
jo
insl
cli
mov
mov
adc
dec
inc
lret
cmpsb
out
pop
cld
xor
imul
mov
aad
inc
inc
hlt
shrl
pop
pop
mov
push
pop
mov
cmp
enter
les
nop
adc
and
inc
push
inc
sbb
and
iretw
test
ret
sbb
push
movsl
jno
xor
jnp
inc
and
in
in
xor
fwait
xor
mov
aaa
popa
and
push
and
pop
sbb
push
xor
and
call
xchg
std
mov
pop
mov
sbb
sbb
ja
push
daa
js
and
div
jne
lds
ss
cmpsb
in
cmpsb
aam
test
add
iret
xor
leave
stos
ljmp
inc
dec
pop
arpl
pop
add
push
repnz
mov
push
je
dec
popf
pop
into
jg
fimuls
outsl
push
aaa
ljmp
or
int3
out
mov
xchg
or
dec
arpl
out
mov
and
leavew
adc
lcall
shlb
cltd
shlb
xor
ljmp
and
xor
add
push
lock
cmpsl
int3
fadds
das
lods
xchg
ss
cs
jmp
sub
popl
insl
loopne
fimuls
mov
shr
test
dec
out
mov
cli
gs
daa
mov
xor
and
mov
es
and
sbb
dec
scas
and
mov
push
stos
pop
test
ss
shlb
jle
out
sbb
imul
mov
test
jecxz
dec
dec
divb
lcall
pop
and
and
subl
out
xchg
les
subb
rcrl
or
fmull
enter
lods
data16
adc
sub
jp
leave
add
push
les
cmp
jl
std
sbb
rcrl
sbb
cld
or
sbb
fsubl
notb
mov
mov
mov
mov
hlt
adc
int
notl
mov
lock
sbb
in
arpl
xor
nop
and
lds
das
es
sarb
add
shlb
jl
movsb
insl
mov
jmp
jl
fmuls
pop
pop
in
das
mov
cwtl
inc
jbe
mov
mov
mov
or
lock
lahf
insb
je
stos
xlat
sub
insl
aas
pop
sbb
ficoms
jmp
lods
xorb
leave
push
push
dec
push
loop
mov
cmp
stos
inc
sbb
out
inc
lahf
fisttps
aad
fnstenv
fadd
out
push
stos
lods
sbb
push
sbb
add
lods
and
ss
pop
and
imul
ja
mov
pop
add
movsl
cmpl
mov
sub
and
leave
push
lret
jge
add
cmp
lods
imul
inc
inc
xor
dec
adc
es
mov
divb
into
cmpb
sub
call
addl
sahf
push
jns
jl
test
dec
cmpl
mull
mov
mov
dec
xor
test
cmp
pop
jg
scas
sarl
sbb
mov
mov
and
push
mov
gs
dec
inc
pusha
xor
fs
daa
pushf
add
xor
ss
int
mov
mov
out
mov
inc
mov
je
mov
loop
xchg
loope
jb
cmp
addb
cs
sbb
pop
aaa
jl
mov
jbe
stc
add
xor
jne
mov
lea
xchg
mov
ret
xchg
push
sbb
je
inc
adc
dec
mov
jmp
add
jae
dec
shrl
pusha
xchg
in
loopew
xchg
xchg
push
cld
pusha
lret
test
negb
cli
xor
jae
xchg
mov
sbb
out
add
xor
sti
andb
hlt
out
scas
ret
adc
jl
xor
mov
out
jge
out
mov
jp
sahf
xchg
arpl
div
rcl
clc
mov
push
mov
push
or
imul
inc
or
inc
sub
and
lods
cltd
test
les
mov
aas
ja
mov
pop
js
xchg
cmp
and
mov
loope
pop
call
sub
out
xchg
out
arpl
stos
lcall
std
into
push
outsb
lret
int
xchg
jle
mov
jb
add
fincstp
shrl
mov
std
mov
dec
and
push
or
or
dec
ljmp
aad
fnsave
imul
lea
xor
mov
jg
pop
mov
add
adc
push
rorb
outsb
stc
jne
inc
mov
xchg
pop
lret
mov
push
pop
arpl
cmpsb
jle
lcall
pushl
fists
lret
shr
jp
sub
frstor
push
rcr
in
jecxz
jle
push
mov
enter
gs
js
in
mov
sbb
repz
inc
dec
loop
mov
jo
mov
xchg
icebp
test
dec
xlat
or
mov
jge
outsl
adc
test
or
insb
popf
test
xor
jge
xchg
cld
mov
cmpsl
cmp
inc
mov
sti
sub
dec
push
rorl
into
ret
add
movsl
lds
xchg
dec
call
dec
mov
xchg
adc
mov
ljmp
or
sub
jno
dec
sahf
pop
mov
addb
jecxz
ret
outsb
or
inc
pushf
add
mov
inc
push
mov
inc
test
and
aad
mov
sub
cmp
mov
jbe
stos
lock
push
lahf
test
mov
and
cmpsb
sbb
pusha
mov
or
test
aad
fcoms
fucomi
aam
fcmovbe
je
pop
xor
sahf
and
jecxz
cli
les
std
or
enter
lods
std
push
mov
xchg
add
insb
cmp
pop
fldcw
outsl
lret
popf
lret
dec
iret
jnp
and
js
pop
data16
sbb
or
mov
mov
ret
pop
add
std
add
adc
sub
iret
jb
jno
divb
mov
mov
adc
lea
ret
stos
lahf
jle
jb
inc
add
pusha
icebp
lcall
jmp
xchg
out
cli
cld
mov
xor
fildl
dec
xlat
add
xchg
sahf
lret
sbb
add
lea
lds
sub
andl
pop
aad
mov
aaa
and
popf
dec
shrl
lds
and
jne
imul
mov
addr16
test
pop
and
add
iret
mov
ret
or
mull
dec
lods
xchg
in
icebp
mov
cmpsl
div
jle
in
sub
mov
pop
push
jne
push
inc
shlb
sub
test
sti
sbb
pop
dec
out
fwait
out
iret
insl
mov
push
cmp
loop
mov
js
popa
jno
push
icebp
popa
jl
pop
mov
in
aad
movsl
rsqrtps
mov
aam
inc
inc
repz
mov
cmp
adc
addl
shrl
imul
gs
jb
jb
push
bnd
testb
pop
jl
lock
xchg
popf
imul
jne
in
outsl
dec
data16
test
dec
hlt
mov
and
push
paddsw
subb
loop
cwtl
in
je
movsb
int3
sub
inc
rclb
mov
loop
inc
jmp
imul
push
fisubs
xor
add
imulb
mov
push
adc
ds
int3
repz
push
lret
pop
lds
leave
insl
pop
dec
lahf
push
rcll
mov
mov
scas
loope
sbb
aam
inc
mov
data16
mov
xor
movsb
js
xchg
outsb
mov
movsl
call
xchg
out
xchg
lock
adc
and
add
ffree
and
outsb
jno
jg
insl
aaa
jb
mov
mov
in
and
sbb
xor
rcl
or
shll
mov
ja
ret
loop
inc
push
insl
movsl
out
sbb
pusha
dec
sahf
cmp
mov
ja
push
ds
cli
cs
or
imul
push
sub
gs
mov
lock
and
jmp
in
rcrb
sub
dec
call
divb
or
push
imul
lods
jnp
push
mov
lods
ffree
xor
pop
add
mov
pshufw
rcrl
sahf
lahf
jmp
out
sbbb
arpl
inc
cmp
shrl
out
movsb
icebp
icebp
enter
ret
adc
pop
test
orl
loope
rcrl
mov
and
adc
shrb
sti
jge
mov
clc
mov
mov
mov
cli
sub
pop
or
in
push
std
enter
lods
icebp
movsb
mov
adc
add
mov
mov
shrb
fs
cli
mov
jnp
mov
jp
dec
bound
test
mov
mov
xlat
add
mov
mov
jp
sbb
insb
mov
out
ficoms
fdivl
in
push
jmp
push
repz
pop
jb
push
in
insl
cwtl
stos
mov
pop
xor
test
xor
stos
cmp
adc
pushf
or
xchg
stos
pop
iret
jns
push
cwtl
lds
mov
fdivrl
out
add
mov
sub
pop
jo
out
addb
xchg
aad
sbb
sbb
add
sub
lret
pop
mov
add
test
inc
xor
mov
nop
pop
int
pop
push
cwtl
sbb
jle
addl
jecxz
jge
and
and
mov
xor
jmp
dec
jno
inc
jae
mov
mov
jle
mov
xchg
fs
pusha
lea
push
fldenv
or
jp
cmc
aas
es
push
pop
in
movl
or
daa
xchg
mov
ret
xchg
mov
cld
xor
fstl
pop
mov
sbb
mov
add
jp
push
add
dec
push
ljmp
icebp
or
mov
loop
pushf
xorl
addr16
inc
movsl
adc
mov
fcomps
push
idivb
stc
dec
div
xchg
xchg
sbb
mov
jbe
out
push
or
adc
lock
int3
push
mov
loopne
int
out
stos
iret
cwtl
sub
adc
mov
fs
and
xor
sahf
push
call
dec
ficompl
sbb
mov
in
cli
es
gs
jmp
lods
fcomi
fwait
fs
adc
push
cmp
add
add
add
gs
lods
inc
jo
js
or
xor
add
scas
fmull
adc
pop
data16
push
mov
je
xor
add
int
jnp
push
sbb
mov
fwait
mov
faddp
gs
add
mov
cmp
mov
dec
xchg
mov
mov
adc
xlat
jo
repnz
xchg
mov
jne
inc
or
xchg
mov
mov
in
dec
or
mov
adc
sarb
pop
mov
les
dec
out
and
dec
ret
cmpsl
pop
or
mov
sub
xor
aam
cli
sub
ja
xor
xorl
das
and
stos
mov
pop
int
pop
inc
push
xor
je
movsl
lods
push
stc
ret
and
int3
aad
insl
outsb
das
or
xchg
dec
rcr
popf
sti
and
pushf
loopne
jp
rorl
dec
sahf
pop
inc
adc
fiaddl
lea
mov
and
push
cltd
nop
cli
cld
and
jb
jbe
add
jbe
adc
add
dec
mov
sahf
xlat
or
stc
and
arpl
xor
cwtl
mov
out
insl
mov
ret
aaa
push
ret
das
test
mov
mov
inc
lods
inc
lods
and
adc
out
mov
sub
add
les
in
das
pop
jecxz
insl
nop
addl
and
stos
pop
in
cmp
aaa
mov
mov
cmp
xchg
addl
and
xchg
mov
mov
xor
pushf
int3
add
jmp
or
enter
sbb
sub
cmp
divb
dec
test
mov
stc
or
adc
outsb
add
into
jne
xchg
jp
mov
mov
mov
push
aam
and
sbb
mov
jno
fwait
jns
cmp
inc
or
jnp
push
mov
arpl
imull
test
mov
ja
lret
scas
mov
or
adc
or
data16
test
adc
jnp
inc
cmc
adc
ja
and
pop
bound
daa
xchg
pop
inc
call
sbb
inc
mov
stos
adc
fmuls
sarb
in
inc
addl
cli
movsb
dec
sbb
xchg
mov
add
imul
dec
jae
xlat
cmp
push
fwait
mov
push
addl
stos
sahf
jno
push
lret
xor
and
xchg
das
xor
movsb
push
pusha
pop
mov
push
rclb
mov
lock
fildll
mov
mov
xor
into
mov
inc
in
add
sbb
int
push
add
and
push
repnz
mov
iret
pop
push
lret
jecxz
into
inc
xchg
push
inc
mov
dec
xor
mov
out
hlt
lods
and
push
adc
inc
or
sbb
and
test
popa
test
add
lods
jbe
mov
and
pop
sub
arpl
fistpll
shlb
call
adc
pop
lods
jle
mov
pushf
stc
cmc
dec
bound
nop
dec
lds
or
push
inc
cmp
movsl
adc
push
cmpsb
test
daa
pop
les
out
xlat
push
xor
xor
xchg
mov
outsb
mov
sub
mov
dec
add
int
and
int3
das
jecxz
enter
push
xchg
mov
dec
inc
pop
orps
push
lret
fcomps
notl
cmp
jne
jnp
xchg
pop
add
cs
and
fiadds
or
aad
ljmp
sti
push
xor
and
cmp
jp
stos
and
dec
call
testb
push
ljmp
insl
cmpsl
mov
mov
dec
inc
jno
mov
jle
adc
pop
or
xchg
add
xchg
inc
cld
add
lahf
mov
dec
lds
stc
ss
stc
lea
dec
and
out
dec
out
aas
mov
lock
test
mov
jp
sti
push
pop
add
testl
data16
push
mov
mov
test
movsb
fcoml
loopne
nop
pusha
mov
in
mov
arpl
cmp
repz
sub
mov
subb
pop
nop
outsl
mov
adc
or
aam
subb
jp
sbb
pop
nop
and
lcall
movsb
push
fcoms
jge
cli
inc
xchg
and
push
pushf
xchg
popf
sub
rcrb
pop
scas
cwtl
mov
xor
jl
nop
xchg
adc
and
dec
sbb
xchg
fwait
mov
mov
inc
xchg
dec
sarb
insb
aas
fcoml
mov
pop
push
je
es
mov
clc
sbb
fldt
ret
call
idivl
or
out
cmpsb
mov
mov
adc
lods
call
iret
addr16
cmp
setne
out
xor
aam
clc
push
mov
mov
hlt
push
ret
mov
xor
push
stos
xor
popf
jecxz
aad
repnz
push
rclb
pop
push
mov
sbb
movsl
dec
mov
test
sahf
mov
inc
mov
andb
mov
std
ljmp
mov
lods
mov
jno
fbstp
hlt
insb
imul
pop
pop
jo
or
mov
das
sub
fcmovbe
test
jb
mov
xchg
pop
jecxz
hlt
insb
sarb
or
test
push
inc
stos
repnz
loope
leave
push
inc
xor
daa
pop
push
and
fmulp
sub
mov
jns
sbb
cmpl
scas
push
jecxz
push
shl
rcrb
pop
mov
mov
insb
adc
test
cmpsl
sub
adc
gs
xchg
sahf
xor
pop
and
xor
jp
jo
into
cmp
aad
sarl
rol
cltd
mov
movsb
cmp
xchg
jae
rcrl
int
out
mov
sbb
fldcw
or
push
frstor
std
inc
xchg
int3
xor
mov
xor
repnz
push
sbb
enter
jmp
xor
mov
xchg
fbstp
mov
sbb
jbe
je
aas
and
dec
les
inc
rclb
test
jp
xlat
repnz
cmpsb
adc
in
dec
ja
pop
out
repz
fstps
dec
je
cmc
cmpl
loopne
sbb
mov
ret
sarb
ja
in
out
mov
cmp
mov
jp
and
pop
ss
shlb
imul
jmp
inc
data16
xchg
in
nop
addr16
pusha
and
out
or
notb
idiv
std
xchg
mov
jo
add
push
bound
lret
inc
jle
sbb
dec
movsb
push
out
sbb
sub
movsb
mov
cld
dec
pop
out
dec
adc
push
aam
push
push
mov
out
push
pop
fwait
pop
push
iret
jno
lock
push
jnp
jp
mov
add
xlat
out
arpl
insb
hlt
bswap
or
test
pop
ret
lcall
mov
sbb
das
cmp
mul
push
xor
ja
inc
out
jno
pop
jnp
xor
hlt
repz
cmp
jl
add
jmp
jmp
sbb
movsb
popf
adc
sbb
lret
inc
bound
fldcw
jecxz
pop
sahf
fwait
js
les
in
mov
mov
sbb
loopnew
insl
xchg
out
and
xor
flds
cmpb
dec
popf
int
cmc
icebp
mov
sub
sub
fstp
mov
movsw
cwtl
dec
ret
bound
jmp
inc
pop
cwtl
fnstsw
or
and
decl
cmp
dec
xchg
add
inc
push
or
in
pop
pop
pusha
js
jge
sahf
adc
inc
sub
std
dec
pusha
push
inc
adc
cmp
jns
pop
out
mov
push
idivb
xor
lea
xchg
test
popa
mov
stos
mov
adc
xor
popa
shll
repz
or
sub
es
sbb
pop
pop
aaa
lods
sbb
and
sbb
push
lea
sti
jnp
notl
cmc
or
pop
cmpsb
movsb
xchg
lcall
enter
push
mov
xor
jmp
jle
push
fisubrl
rolb
ss
andb
jmp
in
mov
jl
or
movsl
lock
jle
loopne
adc
sahf
ror
dec
or
stc
or
test
lret
jge
add
mov
xchg
mov
push
call
jbe
add
xchg
fistps
fwait
seto
ret
stos
push
and
push
push
ret
and
neg
lahf
xor
jmp
jle
rcrb
ja
adc
lds
xor
mov
sbb
aas
and
inc
scas
mov
adc
dec
mov
jecxz
push
dec
addr16
or
pop
mov
push
lahf
cmp
or
push
repz
dec
mov
xor
xor
lods
xchg
xchg
dec
mov
pop
add
out
push
sbb
cmp
inc
sbb
mov
call
pop
test
xor
mov
cmp
cmc
push
int3
popf
mov
ja
inc
inc
mov
push
jae
fdivrs
sub
or
ja
pushl
mov
cmpsb
aas
mov
lret
les
mov
fmul
xor
insb
mov
loopne
addb
fstpt
pushf
push
std
inc
cmpl
and
xor
sbb
add
lret
lods
cmp
jae
and
pop
push
outsb
out
dec
fidivrl
cli
imul
insb
int
xor
std
or
shl
pushf
negb
lods
daa
lcall
mov
adc
pop
int
jl
loop
mov
push
orb
inc
fmull
cmpsb
or
test
insl
orl
dec
stos
sbb
inc
push
js
dec
nop
mov
adc
call
mov
mov
mov
iret
not
mov
push
jg
in
pop
mov
addr16
inc
psllw
jmp
pop
xchg
shlb
cmp
cmpl
dec
pushf
add
dec
scas
cmp
shl
jae
dec
lds
xorb
xchg
fwait
cld
int3
dec
adc
mov
mov
data16
orb
fdivs
arpl
pop
repnz
je
loopne
xchg
je
repnz
push
xor
das
jnp
les
nopl
cmp
ror
sbb
out
lock
dec
fs
outsb
add
xlat
mov
xor
fcoms
rcrl
jae
add
adc
movsl
cmpl
cmc
fcmovnu
add
lods
outsl
stos
or
sbb
inc
xchg
xchg
dec
rclb
mov
ljmp
xor
xchg
cwtl
test
inc
sub
stc
cmpsl
rol
adc
add
fwait
adc
negb
mov
sub
cmp
pop
scas
out
iret
incl
jo
iret
adc
sahf
cltd
ljmp
adc
dec
jno
pop
inc
add
es
cmpsb
out
adc
push
push
xchg
xor
jecxz
xchg
popf
sti
loopne
imul
xchg
and
loopne
dec
stos
stos
pop
ds
push
xchg
test
jns
ds
add
adc
ds
inc
push
push
cwtl
xchg
dec
mov
shrl
push
into
mov
pop
out
shrb
shlb
insl
xor
sti
mov
cwtl
mov
into
pop
xor
sbb
test
imul
loope
add
sub
lcall
mov
add
enter
cmc
pop
jp
push
sbb
push
test
adc
inc
loop
mov
out
sub
mov
sub
movsb
mov
scas
dec
jo
sbb
mov
rcrb
mov
jnp
push
pop
xor
test
dec
pop
outsl
ja
mov
xchg
test
outsl
adc
mov
mov
fsubl
dec
cmp
out
inc
rcrb
jnp
fadds
out
sti
daa
cmp
mov
xchg
jns
daa
dec
ret
sbb
pop
jbe
xorb
ret
dec
or
mov
es
hlt
in
jecxz
je
pop
test
and
arpl
sbb
cwtl
rcrb
ss
or
mov
dec
test
dec
xchg
xchg
aam
pop
push
sbb
xor
adc
sub
xchg
test
or
xchg
fsub
mov
clc
stos
outsl
jge
push
cmp
jbe
sbb
sbb
dec
lods
fistps
leave
mov
lret
fmuls
pusha
ja
and
jns
add
mov
mull
push
orl
mov
pop
jle
pop
or
mov
ds
mov
adcb
lea
mov
cltd
iret
mov
shlb
push
sahf
mov
shll
ror
mov
iret
jp
rcrb
cmp
or
mov
xor
dec
mov
in
mov
adc
cltd
inc
jg
push
outsl
mov
mov
or
fimull
sbb
pop
pop
pop
xchg
in
shll
int
fmull
iret
scas
xor
fdivl
cmp
or
xchg
push
dec
in
dec
jge
jg
mov
xor
and
out
cmp
jg
and
xchg
adc
popf
or
xchg
js
cmp
jmp
or
jecxz
push
loop
sub
outsl
mov
sbb
jecxz
adcl
adc
aad
xchg
xchg
popf
sbb
add
popa
pop
loopne
outsl
in
push
jge
pusha
add
xchg
mov
lock
testl
call
push
sub
cmc
xor
xchg
fistpll
fdivrl
or
push
loop
mov
ret
mov
cld
mov
cmp
bound
dec
std
mov
aas
xchg
push
sub
cmp
mov
and
pop
add
inc
fisubrl
sub
inc
sub
or
aas
out
ljmp
clc
mov
dec
mov
xchg
and
push
push
out
inc
xor
sar
xor
cmp
rclb
xlat
push
ret
push
adc
push
jle
mov
test
pop
hlt
lret
leave
mov
cli
mov
out
les
dec
lods
or
jo
add
adc
lock
outsb
dec
cmp
mov
mov
adc
dec
push
jnp
pusha
dec
jb
lahf
ljmp
mov
add
xor
xlat
sub
or
xchg
push
rorb
daa
stos
bound
sbb
adc
lock
pop
sbb
pusha
push
mov
xor
inc
xor
xchg
pop
pusha
shll
pop
lret
push
pop
negb
testb
mov
sti
loop
iret
mov
jp
xchg
stos
arpl
xor
pop
outsb
inc
adc
sarb
rorl
loope
mov
aam
or
jo
in
not
or
jmp
jg
sti
dec
mov
push
sbb
sub
or
into
jo
push
stos
dec
mov
rorb
js
gs
cs
push
ds
xchg
hlt
or
mov
out
test
pop
add
jecxz
jno
cmp
cs
inc
nop
out
mov
and
stc
jl
fisubl
shl
xchg
jle
addr16
mov
add
sbb
mov
sub
cld
inc
sbb
sar
sub
fdivl
lret
push
jl
jp
out
ss
mov
ds
mov
push
jmp
pushf
aas
mov
mov
and
xor
outsb
call
xchg
pop
mov
cmpsl
cwtl
sbb
addb
or
inc
out
push
xchg
cwtl
ret
pop
aas
adc
dec
call
loop
adc
pop
add
cmc
sub
mov
adcl
cs
mov
sbb
inc
push
xchg
stos
ficompl
sub
mov
push
sub
xchg
shr
fisttpl
in
pop
xchg
fnstsw
test
icebp
mov
mov
adc
icebp
test
xchg
loopne
lret
imul
mov
ss
push
cmp
movsl
aad
cmp
adc
add
rclb
cmp
mov
leave
rcr
mov
ss
loope
mov
into
mov
loope
movsl
inc
cs
lds
mov
jle
xor
add
jmp
adc
ja
addr16
mov
js
popa
loope
in
push
sbb
cmpb
aaa
ficompl
dec
loop
lods
aad
jb
inc
pop
rcr
add
jp
push
stc
sub
ror
mov
mov
mov
jp
and
bound
mov
sub
pusha
stos
iret
daa
test
pop
xor
jno
lock
dec
add
stos
jnp
in
daa
sub
int
cmp
adc
icebp
je
rcrl
sub
xchg
or
add
or
push
lcall
pop
jp
fstpl
inc
mov
shll
mov
sbb
mov
dec
xor
inc
cbtw
xor
inc
mov
dec
mov
aas
movsl
movsl
cmc
fcompl
rcrl
bound
ljmp
call
jle
add
pop
iret
cli
mov
or
mov
into
xchg
into
add
push
fnstsw
gs
mov
mov
xor
and
push
dec
xor
sbb
jbe
lret
fists
andl
cmpb
ds
mov
mov
sbb
mov
daa
in
sub
shl
repz
mov
fcoms
aam
xor
xchg
pop
das
out
xchg
xchg
pop
into
mov
mov
pop
sbb
or
inc
mov
repz
dec
dec
icebp
xlat
mov
pop
lea
cmc
cmp
pop
addb
gs
sub
data16
lret
cmovle
cwtl
mov
mov
inc
fwait
xor
add
sbb
rcrb
cli
adcw
jecxz
arpl
lods
xchg
cmc
xor
pop
and
jo
loope
dec
dec
inc
into
ja
cmp
and
mov
outsb
sub
push
rcll
jmp
xchg
and
sub
or
iret
lods
inc
fcompl
mov
jb
mov
insb
pop
out
ja
mov
stc
dec
leave
sarl
movsl
push
mov
dec
fs
dec
or
mov
nop
fsubs
test
mov
xchg
call
add
outsb
push
push
sbb
pop
xor
jnp
sub
mov
scas
popa
cmpsl
ljmp
xor
jae
popf
call
lcall
and
mov
lahf
adc
mov
flds
xor
cs
adc
mov
and
and
sahf
add
enter
or
jnp
ret
cwtl
pop
out
bound
push
aad
mov
rolb
cmp
push
inc
mov
shll
jmp
pop
dec
insl
shlb
or
and
and
fmull
mov
jne
dec
daa
xchg
movb
push
jl
jnp
add
pop
push
cmp
push
add
xchg
and
pop
ret
icebp
cwtl
pop
push
out
daa
inc
enter
psubsb
pop
xor
pop
mov
mov
lret
sbb
dec
es
loop
inc
fdivp
sahf
jns
add
adc
mov
lods
sbb
addl
lds
cmpsb
xchg
sahf
test
dec
cmpsl
push
or
jmp
js
into
cld
sub
out
addl
lret
pushl
loop
daa
sbb
cmp
not
in
rorb
ret
aaa
jae
es
adc
gs
addb
xchg
xor
xor
and
xchg
inc
inc
dec
icebp
mov
ss
test
sub
xchg
js
sbb
sub
dec
xor
mov
ficompl
push
inc
inc
xor
jg
jb
ja
arpl
js
dec
add
inc
add
mulb
fdivl
add
xor
xor
test
out
mov
inc
sbb
sbb
jno
pop
xlat
cmpsb
shl
ret
inc
mov
jne
xor
fwait
sub
jecxz
push
ljmp
and
adc
sbb
adc
cmp
lock
adcl
repz
cs
fxch
lea
push
mov
arpl
shrb
pop
add
pop
bound
push
add
mov
cmp
xor
jmp
dec
rcr
int
sti
outsb
or
insb
addr16
cmpsl
mov
adc
push
mov
xor
testb
push
add
sbb
cmp
xor
cld
movsb
int3
imul
mov
xor
mov
in
out
push
mov
mov
fmull
dec
int
inc
out
and
lods
adc
in
mov
xchg
iret
push
xchg
outsb
inc
sbb
lret
cld
in
xor
fwait
xor
lea
loope
adcb
popf
push
mov
jbe
push
dec
inc
inc
inc
in
mov
push
jne
and
sbb
fldl2t
idivl
push
orl
ljmp
xchg
pusha
sbb
out
clc
xchg
inc
mov
push
insl
ljmp
lahf
xchg
jg
out
xchg
mov
pop
js
aaa
adc
sbb
pop
or
and
sbb
pop
inc
ljmp
pusha
in
cli
sbb
dec
dec
movsl
mov
mov
ljmp
jg
pop
dec
sti
mov
mov
jmp
out
sbb
sub
and
lock
dec
cmpb
mov
flds
push
sbb
xor
dec
dec
mov
inc
jmp
sub
lea
xchg
ret
and
stos
and
es
adc
testb
test
add
mov
and
pop
jg
xorb
jge
mov
movsl
cmc
add
daa
sbb
pop
mov
mov
sbb
mov
mov
dec
add
or
or
mov
mov
inc
push
insb
or
and
test
jno,pt
ret
stos
pop
mov
lock
loop
jno
les
jle
test
cltd
sub
leave
jnp
add
xor
sarl
ja
out
aad
mov
push
mov
and
sbb
addr16
mov
in
outsb
into
int
mull
fyl2xp1
mov
aas
xchg
fistpll
pop
and
test
cs
xor
jo
out
sbb
sub
xchg
or
out
repz
inc
jp
pop
mov
ss
or
imul
rclb
lods
jo
call
jb
out
or
cld
sub
hlt
lret
mov
ss
push
out
mov
sbb
mov
jmp
repz
mov
movsl
sbb
int
das
add
push
mov
xor
in
ja
inc
out
mov
xor
or
adc
dec
test
test
mov
insl
or
ds
stc
and
mov
lods
fs
adc
sahf
push
dec
pop
pop
inc
es
fcmovnb
dec
adc
fmull
jle
or
sub
nop
jno
andl
gs
stc
gs
ret
fcompl
or
mov
jns
lea
ss
sbbl
push
add
repnz
xor
bound
popf
flds
xchg
adc
mov
faddl
pop
movsl
mov
inc
xchg
mov
popf
faddp
orb
adc
push
xchg
adc
popa
xchg
and
pop
rorl
int3
mov
cmp
daa
pusha
movsl
add
int3
out
pop
push
ds
mov
adc
rolb
push
or
jne
test
add
mov
xor
and
pop
daa
movsl
jmp
out
mov
mov
mov
inc
xor
jp
mov
dec
cmc
add
xchg
dec
loope
xchg
or
arpl
fcomip
je
outsl
pop
cmpsb
sbb
sub
lods
push
fstpl
mov
test
mov
pushf
movsl
pushf
pop
xor
xor
mulb
cmp
out
xchg
xchg
loope
sbb
ficompl
and
fsub
and
sbb
inc
jns
ljmp
fildll
mov
js
fwait
and
push
xchg
jp
mov
jne
mov
ss
mov
mov
in
sub
fistpll
divl
push
loop
int
cmp
cmp
mov
rclb
jl
jg
cmpsl
add
mov
xchg
scas
mov
jl
jmp
frstor
pop
aaa
push
jae
mov
push
xchg
sbb
js
das
xor
mov
mov
cwtl
mov
stos
insl
adc
aad
scas
dec
scas
int
leave
lret
sahf
fmul
sub
jne
lock
add
push
out
cltd
add
outsw
stos
stc
xchg
jns
popf
nop
hlt
or
xchg
and
imul
sbb
push
in
jecxz
cmp
stc
dec
rsqrtps
lea
xor
fiaddl
fidivrl
cmp
mov
scas
out
sub
pop
rclb
push
stc
aas
cmp
out
inc
scas
ljmp
lret
push
cwtl
je
js
dec
inc
stc
cmp
ret
jbe
jl
in
sbb
xchg
push
push
das
xchg
ror
sub
xor
or
and
add
inc
mov
fisubrs
pop
pop
push
xchg
inc
add
add
aas
inc
mov
fmull
rcll
insb
pop
out
popa
lcall
iret
stos
fiaddl
xor
cmpsb
scas
add
insb
stos
adc
add
divl
mov
mov
and
xor
or
jmp
imul
sbb
mov
out
jno
jl
jo
xchg
test
fcmovnb
push
movsl
mov
pop
push
test
push
ja
xor
lahf
xor
mov
rorb
imul
cmp
xor
pop
adc
fbstp
lcall
add
push
sti
mov
jecxz
adc
imul
or
insl
push
push
pop
in
xchg
sbb
scas
lret
leave
lods
iret
jns
inc
roll
iret
adc
imul
and
mov
adc
pop
pop
mov
sub
clc
sbb
mov
jno
rcrl
int3
jle
aam
scas
sbb
and
or
int3
call
movsb
movsl
test
fs
inc
sbb
sub
sub
mov
pusha
or
imul
mov
mov
jae
sub
inc
in
dec
divb
dec
mov
insl
inc
ret
xchg
pop
cmpsl
fnstsw
or
fs
loope
sti
jne
jecxz
cld
xor
nop
push
mov
xchg
out
dec
pusha
or
pop
jo
addr16
xor
sub
orb
xchg
jg
ret
mov
lcall
mov
jle
cli
fcoms
icebp
pop
xchg
push
add
mov
int
or
repz
sti
adc
mov
push
mov
mov
lret
jns
sbb
sbb
mov
xorl
jno
stos
sbb
pop
add
ljmp
xchg
dec
lods
xchg
push
cwtl
and
ja
rorl
scas
sbb
or
in
push
jae
mov
lret
xor
test
movsb
iret
pop
mov
push
jne
lret
dec
fstpt
scas
ret
xor
push
mov
pop
movsl
aas
mov
stos
test
mov
enter
cmp
shll
pop
push
lea
lods
push
stos
stc
inc
jno
pop
mov
je
sbb
pop
dec
aaa
pushl
mov
inc
call
sub
inc
mov
jp
rorb
mov
add
sbb
pop
sbb
movsl
push
pop
inc
sbb
es
xor
mov
sti
sbb
add
cmp
loopne
sub
pop
mov
lock
sbb
icebp
ret
add
push
ljmp
mov
into
inc
or
adc
nop
cmp
lods
inc
mov
lods
fimull
mov
mov
and
mov
xor
adc
js
push
out
jecxz
or
jmp
sbb
loope
insl
fdivs
pop
cmpl
push
es
ds
int
int3
cmp
test
fidivs
mov
shrb
rclb
imul
mov
neg
mov
cwtl
lods
xchg
cmp
pop
fcoml
jl
mov
jp
mov
sub
out
ror
mov
push
sbb
test
mov
pop
mov
jmp
int
mov
repnz
push
mov
popf
dec
shrb
call
sbb
jge
pop
push
je
add
lock
xchg
add
scas
jnp
dec
lcall
jo
or
pop
push
xchg
iret
loop
fildl
jno
pop
dec
sbb
iret
pusha
ret
cld
xchg
dec
pusha
into
push
pushf
sub
push
mov
sbb
movsl
repnz
or
loopne
enter
push
in
adc
inc
push
js
xchg
mov
inc
xor
push
movd
push
mov
mov
test
cmpl
mov
mov
sbb
mov
call
mov
xor
xchg
add
je
xchg
outsl
adc
jg
dec
int3
xchg
roll
jmp
fiadds
cmc
dec
je
or
cmp
pop
insb
inc
and
data16
loopne
fdivp
mov
cmp
push
fisubl
dec
ja
mov
add
adc
aaa
or
pop
jae
add
sahf
ljmp
cmc
jge
mov
or
adc
mov
ljmp
dec
and
jbe
adc
jmp
in
fcmovb
es
jbe
outsb
inc
push
pop
mov
test
negb
jno
repz
lcall
mov
lock
jp
lret
mov
dec
xor
in
inc
out
fimull
aam
mov
pop
test
xor
jno
jp
ljmp
add
pusha
mov
in
out
pop
and
out
clc
mov
ss
fistpll
xor
mov
fnstsw
mov
les
cmp
mov
sub
cmp
dec
xor
insl
daa
mov
xor
and
inc
cmp
int3
add
add
lret
in
cwtl
cmp
je
jmp
xor
mov
mov
notb
hlt
pop
call
inc
mov
add
in
jb
mov
dec
cmpsb
inc
inc
jo
cmp
lret
cmp
or
imul
push
aas
iret
lods
inc
jg
or
cmp
and
stos
jo
popa
lret
add
cmc
or
ret
pushf
sub
repnz
lret
xor
jg
push
movsb
movsb
mov
addl
mov
js
movsl
int
cmc
xlat
sbb
or
push
xlat
or
pushf
lea
sti
gs
mov
mov
xor
outsb
xchg
xchg
sub
lcall
mov
cs
arpl
insb
scas
leave
jecxz
in
cmp
mov
mov
add
cwtl
ja
pop
pop
push
incl
fisubs
mov
test
inc
sub
test
jo
push
push
sahf
or
aam
call
add
add
outsl
fnsave
cmp
push
dec
pop
les
out
add
inc
scas
mov
sub
jp
out
pop
mov
fsts
jno
inc
sub
rol
dec
and
out
mov
movsl
lret
repz
aaa
jnp
mov
dec
imul
xchg
stc
pop
and
sub
cmp
fidivrs
sbb
xorl
je
mov
jo
add
fsubl
sub
je
in
mov
mov
ret
or
call
jnp
inc
adc
sti
ss
adc
and
push
mov
iret
dec
or
stos
cltd
out
int3
sub
ds
sbb
rcr
movsb
int
sub
out
push
enter
es
inc
jg
push
add
cld
movsl
sub
repnz
scas
cwtl
mov
mov
test
mov
inc
and
lahf
jge
inc
inc
lret
mov
mov
adc
push
jmp
add
adc
das
mov
imul
cmp
mov
call
sub
mov
out
les
xor
jnp
cwtl
cld
push
pusha
mov
push
mov
arpl
ficomps
inc
mov
sub
lcall
jle
mov
cmp
xor
repnz
push
jmp
out
outsb
mov
xchg
mov
lods
xchg
jle
sbb
inc
mov
adc
sqrtps
arpl
mov
and
mov
cmp
push
jb
aad
aad
lcall
hlt
sbb
insb
push
inc
enter
lahf
lock
xchg
inc
cmp
pop
pop
inc
or
cmpsb
test
mov
pop
xchg
inc
popa
sub
sub
iret
pop
lds
inc
negb
dec
sbb
adc
iret
repnz
dec
sub
ja
cmp
fdiv
push
xorl
out
das
repnz
or
aas
xchg
test
es
inc
adc
mov
add
aas
mov
sbb
inc
jle
adc
dec
push
aam
and
out
negl
dec
sbb
inc
aas
outsb
push
mov
popa
popa
add
xor
imul
das
sub
adc
ret
stos
aad
add
jl
adcl
mov
jns
add
stc
sbb
outsl
icebp
popa
push
push
xchg
dec
jecxz
adc
xor
jge
pop
fwait
or
cltd
lret
push
pushf
xor
or
xchg
push
insl
xor
push
add
orl
sbb
dec
mov
inc
ja
movsb
movl
add
adc
daa
int3
inc
sahf
mov
and
pop
jmp
stos
pushf
sbb
sbbl
mov
cmpsl
insl
mov
ds
mov
call
pop
xchg
or
xchg
shrl
mov
lds
repz
push
pusha
nop
cltd
mov
mov
sbb
outsb
fs
pusha
fistl
fisubrl
pop
sub
adc
movsl
add
shlb
xor
sbb
inc
scas
adc
push
jmp
xor
repnz
ret
or
outsl
sub
and
adc
mov
movsb
stos
outsb
and
xorl
jle
mov
xor
inc
jno
push
fistpl
mov
xchg
and
mov
xor
pop
outsl
mov
fwait
mov
insl
mov
cli
lret
xor
fists
sub
inc
pop
sbb
sbb
xorb
and
xchg
or
push
xor
jno
mov
jb
pop
out
es
loopne
dec
jno
sub
mov
and
push
rcll
in
test
test
push
xchg
push
retw
cmp
jl
inc
insl
stc
add
jae
arpl
inc
mov
fisubrl
jmp
jno
jmp
out
ja
fsts
pop
jg
data16
jns
rolb
pop
sub
dec
add
test
inc
jle
sbb
jnp
inc
stos
mov
pop
orl
movsl
jge
lret
and
shrd
xor
xor
rclb
mov
cld
pop
and
test
cmp
mov
dec
mov
div
insl
dec
sub
or
outsb
push
inc
dec
aam
mov
ss
rcll
inc
and
fdivr
cmpb
cmp
push
sti
mov
movsl
sahf
or
ficoms
mov
outsl
add
out
adc
cmp
mov
sub
aaa
sub
and
jmp
lea
mov
mov
fwait
adc
pop
daa
mov
add
dec
jnp
sub
test
aad
cmp
push
mov
add
mov
mov
andl
add
aaa
mov
loop
push
call
shlb
mov
je
mov
push
mov
sbbl
test
loopne
jae
jg
xchg
xchg
sbb
test
mov
lock
repz
in
jmp
push
lret
or
dec
jns
ljmp
pop
dec
pop
scas
jle
sub
dec
clc
fstl
out
sub
sbb
std
mov
in
sub
jo
cmp
pop
xor
pop
in
fldenv
add
fucomi
jmp
mov
fiadds
add
pop
loope
vpmulhw
gs
shll
and
lahf
cmp
lock
test
es
adc
jecxz
pushf
fnstenv
addb
fisubs
mov
sub
xlat
jge
aas
repnz
jo
mov
popf
push
hlt
lods
out
scas
iret
pop
xchg
cld
popf
and
mov
mov
dec
mov
mov
mov
je
shr
ljmp
and
xchg
cld
mov
movsb
mov
jge
jle
add
test
pop
mov
xchg
push
das
inc
jl
fisubrs
xor
loope
repnz
dec
and
jecxz
or
sub
push
loopne
inc
ret
daa
mov
jl
leave
ret
xor
in
pop
pop
loopne,pt
fiaddl
xor
test
notb
sub
imul
cli
mov
int
add
and
enter
out
cmp
enter
push
stos
das
push
cmp
mov
repz
adc
imul
cmp
rclb
or
mov
sahf
daa
xchg
add
sbb
mov
lret
out
ret
stc
setp
scas
jl
test
je
cmp
iret
int3
ds
lods
lahf
lcall
aam
fisubrl
sbb
ljmp
movsl
xchg
xor
in
mov
inc
insl
push
shlb
pop
fnstenv
jecxz
mov
inc
add
xchg
add
loop
sub
call
inc
push
pop
ror
dec
idivl
jns
std
mov
repnz
rol
bound
test
dec
sub
push
cmc
add
mov
lret
lret
sbb
pop
push
inc
jg
and
push
daa
mov
daa
and
sbb
mov
jae
aas
stos
pop
dec
shrl
aas
movsl
cmp
dec
mov
repnz
jl
flds
adc
ret
stos
ret
mov
call
xchg
ret
mov
in
mov
mov
mov
imul
sbb
adc
bound
fcompl
enter
fbstp
mov
gs
lock
jbe
pop
sbb
mov
xchg
pop
xchg
outsl
sbb
adc
inc
sbb
push
push
rcll
adc
loope
jp
adc
mov
outsl
adc
push
push
testb
stc
test
mov
test
aaa
jmp
jl
push
add
xchg
es
movsl
pop
add
data16
and
push
movsl
cmpsb
in
ja
mov
insb
mov
out
lcall
xor
dec
dec
push
push
lret
dec
or
lods
sbb
xchg
jecxz
add
xchg
cmpsl
lea
push
js
cmp
fcmove
test
int3
sub
dec
cld
or
mov
and
stc
push
mov
out
mov
lahf
movsb
xchg
lods
sub
pop
xchg
ret
fnstenv
int
add
fisubrs
pop
xor
jl
push
iret
mov
icebp
xchg
cld
sub
sar
mov
sub
rcrb
adc
in
mov
dec
cmc
jecxz
pop
inc
out
mov
ljmp
xchg
out
ss
popa
call
loopne
cli
xor
lret
cmp
mov
cpuid
aad
iret
ret
mov
enter
jne
push
jle
call
js
sub
push
xlat
pop
or
pop
push
lea
pop
pop
ret
loopne
jge
jp
jnp
push
int
dec
mov
inc
sbb
mov
shr
insb
stc
fbld
jle
jge
in
add
push
scas
sub
xchg
int
ljmp
addr16
int
dec
popf
xor
cld
lahf
mov
lret
out
sti
and
xchg
pushf
inc
out
sbb
movsl
jmp
aas
push
jb
jge
xchg
pushf
sbbl
in
sub
mov
lcall
sub
aad
mov
out
sbb
sub
mov
mov
in
ret
inc
lds
inc
decb
or
mulb
je
pop
and
fs
idiv
mov
popf
cmpsb
dec
dec
aaa
cltd
push
add
adc
int
dec
jo
xorl
mov
call
pop
mov
repz
ret
jmp
cmp
adc
addr16
pop
test
pop
negb
push
out
roll
pop
dec
mov
movl
in
push
loop
or
les
out
js
icebp
fwait
jle
push
outsl
popf
shrl
dec
sbb
mov
or
mov
shll
inc
inc
mov
push
js
mov
pop
adc
ss
mov
pop
push
fmull
test
adc
jno
jp
cmp
mulb
cli
std
pop
jecxz
lret
mov
jbe
imul
mov
pop
enter
jnp
inc
data16
push
jecxz
cmpsb
sub
dec
push
push
enter
or
int3
addr16
gs
push
xor
mov
scas
loopne
cwtl
inc
lds
cmp
repnz
les
enter
andb
aad
insb
xchg
pop
add
or
adc
xchg
mov
fs
ds
and
inc
mov
aaa
sub
cmpsb
pop
decb
cltd
shlb
je
bswap
js
push
jae
pop
mov
stc
insb
cli
mov
dec
inc
lea
clc
pusha
sbb
xorb
movsb
push
les
in
dec
and
dec
inc
and
jmp
jns
lcall
sbb
aam
test
sbb
cli
loopnew
in
xchg
adc
test
xchg
xchg
pusha
cmp
ficomps
mov
gs
lcall
icebp
in
sbb
fsts
mov
sbb
call
push
xlat
adc
mov
in
test
mov
stos
js
lret
repz
push
mov
nop
adc
jns
sub
leave
jb
xor
sub
sub
mov
fsubl
inc
and
pushf
mov
cmp
ret
out
jno
cld
movsl
mov
pusha
pop
push
sbb
adc
fcomps
mov
mov
xchg
enter
jnp
sub
pop
inc
push
xchg
dec
out
mov
test
outsb
loope
jecxz
mov
pop
inc
mov
xchg
jo
ret
rclb
jns
fwait
out
ja
sahf
cmp
scas
stc
lret
jp
mov
js
out
scas
lcall
mov
sbb
ret
mov
ror
mov
adc
sub
mov
ret
dec
dec
shl
daa
stc
push
and
cmpsl
inc
xor
lret
rcll
and
pushf
mov
mov
subb
pop
mov
test
jbe
mov
inc
cmp
lea
das
jne
mov
add
add
and
jge
lock
mov
pop
mov
iret
xchg
or
imul
mov
push
push
cmp
fs
cmpsl
and
jb
scas
inc
push
int3
popa
mov
cmp
nop
cmp
adc
test
arpl
cmp
lock
ret
aaa
arpl
mov
mov
enter
test
ja
mov
inc
es
mov
mov
adc
jle
loop
or
lcall
mov
inc
mov
testb
test
das
mov
ret
movsb
mov
scas
stc
add
jmp
and
insb
fbstp
lods
pop
sahf
out
int
xchg
pop
int
mov
mov
mov
loopne
test
mov
subb
mulb
sbb
and
sbb
pop
in
shl
xchg
stos
push
inc
dec
cmp
inc
mov
lock
xor
inc
push
sbb
xlat
repnz
mov
aad
outsl
mov
xchg
push
inc
sarb
cmp
jns
dec
mov
pop
add
sbb
pusha
mov
mov
loopne
cltd
pop
shrb
push
jnp
dec
jecxz
sarb
mov
imul
mov
pop
sbb
jp
sbb
in
cmp
mov
mov
or
insl
jg
dec
pop
adc
inc
push
inc
cmpb
mov
test
fimull
shrb
wbinvd
out
pop
mov
lcall
add
pop
loope
add
mov
xor
push
add
and
lahf
sbb
test
rcll
popf
xchg
jno
fstpl
sub
in
adc
adc
shlb
jno
je
lea
jno
hlt
inc
push
xor
sbb
inc
stc
int3
arpl
pop
adcb
icebp
mov
xchg
sub
xor
enter
ja
aas
pop
inc
pop
sbb
and
stos
xchg
jno
cmp
popa
add
pop
fbstp
adc
or
push
pop
mov
gs
xchg
xor
dec
mov
sti
sub
cld
push
pop
cli
notb
loope
addl
and
test
or
mov
inc
cli
out
shlb
sub
test
sub
dec
and
cmp
mov
mov
ficompl
fs
movsb
out
sti
and
lahf
aas
or
addr16
mov
push
xor
mov
lods
xor
jae
jecxz
mov
lods
push
pushf
xchg
mov
bound
jae
add
push
push
cwtl
pusha
sub
inc
jecxz
add
xchg
lcall
xchg
push
scas
out
scas
jno
jns
add
jg
push
jno
pop
in
shll
pop
sbb
popl
adc
out
push
jbe
pop
mov
notb
pop
div
test
sub
or
scas
xor
xlat
cmp
sbb
leave
cmp
xorl
shlb
jo
loope
loopne
lock
imul
xchg
push
jo
lret
jmp
pop
ja
jecxz
out
mov
repnz
and
mov
push
sbb
mov
shlb
push
ror
cld
jp
mov
loop
repnz
mov
xchg
and
mov
cmp
int
xor
mov
xchg
dec
cli
add
pop
loop
push
and
jp
test
add
iret
pop
test
inc
cmp
out
mov
push
popa
pop
arpl
scas
out
dec
cli
mov
data16
xlat
cs
inc
outsb
xor
arpl
add
lret
xchg
mov
mov
mov
bound
mov
xchg
add
xchg
or
sbb
adc
inc
pop
cmpb
in
out
jmp
dec
xchg
loopne
js
and
cltd
lret
out
xchg
or
movsl
dec
int
and
mov
in
xchg
mov
or
loope
add
rcll
ret
ja
fisttps
mov
sbb
addr16
mov
mov
enter
arpl
cmpl
mov
pop
inc
dec
data16
xchg
iret
sbb
mov
and
sub
imul
cmpsl
xchg
add
cli
roll
aad
sub
pop
cmp
xor
arpl
hlt
insb
repz
imul
ja
stc
push
inc
jae
pusha
and
jg
cmpsl
adc
fwait
pop
jae
jne
cmpsb
dec
push
pop
or
repnz
xor
fisttps
push
nop
dec
ljmp
or
fwait
and
fnsave
mov
xchg
mov
test
inc
es
clc
jle
xor
add
and
pushf
jbe
sbb
add
mov
xchg
ja
lea
add
sarb
dec
add
mov
xchg
cmp
js
out
addr16
jnp
mov
adc
les
sub
shll
pop
into
addl
insl
movsb
outsl
jbe
pop
ret
jge
leave
mov
out
insl
lock
xchg
inc
fbld
in
mov
movsb
sti
std
aad
sahf
or
push
and
push
push
addl
lretw
rclb
cmc
ficompl
movsb
mov
loopne
push
or
xchg
daa
ds
dec
push
pop
lret
into
sahf
mov
lea
dec
fimuls
out
add
sub
outsb
lock
mov
adc
movb
test
xchg
xor
xchg
jp
jbe
popa
dec
mov
or
stos
mov
mov
mov
xor
insb
insl
push
inc
test
pop
ljmp
sbb
int
fdivrl
push
repz
jb
xchg
addb
sub
mov
pop
fmuls
push
jg
insb
aaa
int3
mov
test
jnp
fidivrl
xor
ljmp
push
mov
lar
stos
jg
scas
es
ljmp
sub
pop
das
xchg
inc
mov
and
rol
out
xor
cs
stc
pop
inc
jnp
ljmp
add
xor
imul
fldcw
icebp
sti
add
mov
and
jp
scas
mov
jmp
mov
xor
sbb
push
rcl
sbb
cmpsb
jmp
sbb
in
mov
add
push
inc
mov
lock
and
in
or
icebp
cli
lds
mov
mov
jle
xchg
adc
mov
fprem
cwtl
mov
fcoml
jae
mov
in
xchg
divl
scas
mov
inc
pop
lret
daa
and
adcl
ds
mov
jbe
rcr
repnz
sbb
sub
jo
fsubs
loop
hlt
aas
fsts
jb
rorb
jbe
sub
lea
lock
mov
and
cwtl
cmp
mov
into
fadds
jmp
sar
adc
lret
gs
pushf
jne
imul
movsl
call
or
rorl
das
mov
addb
xlat
fs
cmp
lret
xor
ds
cmp
aas
mulb
jno
fldt
cmp
cmp
lds
lods
loope
repz
mov
mov
inc
and
jp
mov
insb
cld
push
sub
push
cmp
les
inc
fdivr
jae
push
je
aad
sub
out
pushl
pop
jecxz
inc
out
xchg
adc
or
test
out
xor
lret
or
pop
adc
add
xchg
or
hlt
jno
push
push
bound
jo
and
sbb
pop
inc
jp
pop
test
push
int
adc
mov
inc
cs
fcomps
cmpsl
cld
inc
mov
ret
sub
pop
sbb
sbb
ss
dec
mov
adc
pop
sbb
jbe
lods
mov
push
sub
ret
es
add
stc
jge
repz
call
pop
or
adc
and
repnz
lds
shrb
cs
push
xchg
insb
pop
rclb
lods
mov
loope
xor
or
cmc
jle
mov
xchg
adc
jl
cwtl
clc
pop
pop
xor
sub
mov
loop
es
jbe
aaa
mov
push
jb
xchg
dec
mov
scas
icebp
cltd
jle
loopne
int
test
cmp
xchg
out
ja
dec
xchg
daa
movsb
out
cmp
sbb
pop
pop
nop
bound
nop
scas
adc
xor
xchg
stc
sbb
mov
push
popf
jg
push
push
movsb
cmp
push
lret
fcompl
pop
xchg
in
sbb
cmc
mov
fwait
and
imul
jle
testb
test
adc
and
test
adc
rep
notb
fdivs
addr16
mov
adcl
dec
push
nop
xchg
test
mov
inc
aaa
add
mov
repz
pcmpgtb
cld
in
stos
or
sbbb
nop
mov
inc
fcompl
scas
loopne
in
int
or
mov
cmp
ljmp
mov
sti
jmp
mov
mov
lcall
std
cmpsb
das
sub
ss
fimuls
fdivl
push
push
outsl
or
popf
into
xor
xor
cmc
jns
sub
bound
sbb
dec
rolb
xchg
mov
js
data16
stc
mov
dec
sbb
ja
xor
mov
xchg
faddp
dec
in
mov
and
xchg
pop
dec
pop
jmp
incl
es
fninit
pusha
jbe
jns
xor
pop
and
lahf
fstp
insl
jb
push
jo
nop
pop
mov
inc
imul
xor
iret
push
cmp
push
cmpsl
test
adc
xchg
imul
sbb
shll
shr
js
jbe
outsb
cwtl
xchg
mov
lret
fsts
push
push
mov
xchg
add
adc
enter
jecxz
add
mov
pop
pop
clc
imul
mov
repz
pop
pop
cmp
orb
icebp
sbb
mov
and
stos
sub
test
inc
jmp
sbb
mov
mov
aaa
sbb
mov
jb
xor
rolb
dec
bound
push
push
sub
mov
jb
lea
mov
imul
dec
out
lcall
mov
jl
xchg
mov
outsb
out
popf
fstpt
and
rcrb
cwtl
and
cmp
mov
xor
mov
push
xchg
dec
push
push
adc
and
mov
scas
cs
std
test
jl
aas
push
lock
lret
mov
leave
fdivr
jo
pop
ret
mov
adcl
jae
ret
movsl
loopne
cltd
xor
sub
aaa
mov
cwtl
cs
rorl
data16
shlb
mov
jl
cmpsb
popa
dec
rcrl
dec
out
inc
and
ss
jp
into
dec
xchg
clc
je,pt
cmpsl
push
sub
ja
adc
jns
pop
aam
sub
rorl
imul
jmp
adc
or
push
mov
in
fcmovne
jbe
mov
cmp
sub
jb
jmp
aad
int
loope
dec
in
inc
xor
and
imul
push
out
jns
jmp
out
adc
arpl
and
cmpsb
adc
cmc
lods
cmp
jne
cmp
test
mov
inc
ss
mov
push
push
jno
mov
shlb
fstp
push
sbb
xchg
dec
push
out
je
push
js
and
int
pavgb
sub
pop
cli
push
pop
xchg
rcrb
sahf
push
jge
inc
loopne
push
mov
or
nop
mov
adc
das
cli
push
push
jg
aaa
icebp
aam
mov
movsb
jb
jbe
inc
cwtl
filds
dec
and
aam
push
sarl
call
scas
lret
xor
aas
xor
leave
pop
mov
adc
pop
cmp
mov
push
xor
push
enter
dec
or
daa
stos
pop
xlat
and
push
fsub
push
nop
js
dec
rcrb
stos
mov
insb
movsb
rorb
addl
sti
fnstenv
ja
push
mov
out
mov
fsub
xorl
mov
adc
dec
int3
push
dec
adc
add
mov
stc
sbb
out
fisttpll
pop
dec
mov
and
pop
push
xor
mov
iret
xor
pop
adc
adc
pop
sbb
or
push
add
mov
repnz
mov
imul
test
into
in
jg
mov
mov
inc
out
add
and
pop
dec
xor
inc
idivl
dec
aam
leave
xchg
pop
add
push
int
pop
aas
hlt
sub
dec
cmpsb
leave
mov
bound
call
negl
inc
scas
push
out
pushf
cmp
xchg
xchg
pusha
jae
paddsb
jecxz
int
in
dec
mov
data16
inc
or
repz
fisubs
aaa
pop
popa
daa
or
mov
mov
xchg
pop
xor
mov
dec
fmuls
lret
mov
pop
xlat
aas
aad
fdivrs
shll
data16
mov
js
out
mov
adc
fcmove
cmp
into
inc
fistl
inc
fstl
in
mov
lods
aaa
addb
dec
ret
cmp
push
ret
add
sbb
mov
lods
xorl
ja
xor
inc
notb
and
in
mov
pop
cmpsl
mov
push
cmp
std
sahf
dec
jbe
push
xchg
mov
xchg
sub
and
inc
leave
repnz
dec
mov
and
push
push
cmp
xchg
pushf
mov
lahf
enter
adc
mov
aam
mov
inc
outsb
jns
pushf
xchg
cs
mov
stc
or
movsl
cmp
icebp
test
inc
js
ret
mov
xor
aad
pop
lea
movsl
dec
xchg
imul
pushf
mov
popa
sbb
jge
pop
dec
mov
repnz
fisttpll
rorb
mov
iret
add
fstps
push
repz
stos
lret
fs
dec
fsubr
sub
bound
repz
das
shl
pop
test
pushf
and
push
push
cli
dec
jo
outsb
out
call
cmpsl
sub
arpl
fildll
in
lock
pop
fldt
cltd
xchg
xor
insl
inc
fwait
ss
add
add
xor
inc
sub
and
or
sub
jg
into
pop
mov
mov
insb
cmp
xchg
fimuls
arpl
leave
test
in
mov
dec
es
test
roll
jge
dec
jge
push
popf
fs
loopne
mulps
push
and
jae
xor
sbb
fwait
rorl
ret
loopne
mov
fsubs
jmp
mov
inc
stc
jne
inc
push
addb
nop
xor
clc
iret
stc
mov
cmpsl
vsubps
push
pop
shll
jne
lock
adc
in
push
mov
call
mov
mov
xor
or
iret
data16
xchg
adc
xchg
adc
fcom
fstl
and
jp
push
addr16
mov
xchg
cmp
sti
mov
mov
pushf
mov
mov
fdivrp
pop
ljmp
repz
jle
divl
cmpsb
sahf
inc
sarl
mov
xor
cmp
ret
jecxz
fisttps
in
or
dec
divl
inc
clc
fistpl
push
out
loopne
int3
cmc
ds
pop
stc
mov
and
ret
pop
pop
push
and
les
mov
xchg
sub
int3
mov
sbb
mov
jecxz
stc
rcll
scas
popa
mov
mov
sub
and
xlat
lahf
loopne
sub
inc
int3
jp
lcall
loop
mov
mov
and
sub
cmp
dec
lret
push
jle
pop
fwait
sbb
xchg
jns
pop
jbe
lock
mov
mov
push
js
adc
jo
mov
fcmovu
add
ljmp
jmp
mov
cwtl
xorb
jmp
in
aaa
sub
insl
icebp
adc
or
mov
xorl
pop
lret
mov
inc
xchg
mov
xorb
push
mov
pop
jle
fdivr
hlt
cmp
insl
ret
pop
adc
ljmp
je
or
call
in
mov
cmp
cmpl
inc
or
popa
sbb
pop
or
mov
push
jae
int3
jnp
dec
push
push
imul
pop
stos
out
jno
push
mov
sub
and
aam
mov
loop
pop
cmc
outsl
ja
or
push
xchg
bound
data16
and
fldt
out
ja
stos
push
flds
xabort
lods
test
jb
mov
xchg
repnz
scas
fadds
push
inc
out
adc
fnstsw
scas
dec
fucom
dec
js
xor
sbb
xor
mov
bound
sbb
push
aam
in
lret
fsub
sahf
in
dec
mov
mov
xchg
jae
cmp
inc
aas
push
cmp
dec
jbe
lds
bound
outsl
adc
xor
out
jp
sub
lods
in
sub
insb
jbe
cmp
push
addb
shl
call
and
out
cmp
popa
aas
dec
jo
fwait
jp
sub
lods
std
aas
xchg
xchg
xchg
adc
add
mov
fwait
push
dec
in
pop
es
push
sbb
push
cmc
mov
jb
dec
sbb
cmp
mov
mov
inc
xchg
roll
js
arpl
add
xchg
in
out
pop
dec
xor
push
jnp
xchg
lcall
mov
aaa
rorl
es
into
dec
fistl
and
inc
pop
push
and
cmp
fxch
inc
insl
push
jecxz
icebp
int3
push
push
dec
adc
mov
hlt
mov
outsb
adc
and
mov
inc
sbbl
fcmovnb
cld
lret
sub
mov
mov
jno
jb
dec
add
mov
ret
mov
mov
sub
dec
mov
adc
scas
mov
pushf
out
adc
cltd
xchg
scas
mov
in
inc
scas
js
into
sbb
outsl
inc
mov
push
add
pop
inc
and
ret
out
add
add
cmpl
loop
popa
xor
cltd
lods
pusha
stc
out
in
out
nop
aad
mov
cmp
adc
push
add
jg
cwtl
xchg
arpl
subl
repnz
fstl
push
or
shlb
sbb
insl
ret
popa
mov
push
mov
add
std
cld
inc
mov
int
test
push
xchg
push
mov
jae
shll
sub
inc
push
in
rcll
mov
mov
add
lods
shll
push
les
jp
lret
insb
pushf
lahf
aas
push
ljmp
mov
jns
inc
sub
aas
dec
daa
shll
movsb
dec
icebp
mov
mov
loopne
dec
jo
push
or
pop
push
stos
sub
cli
ret
aas
loopne
mov
mov
xorb
je
adc
ret
orl
dec
pop
lret
xchg
sbb
pop
iret
and
cltd
jg
sub
inc
mov
mov
push
rorb
xchg
adc
mov
mov
xchg
nop
mov
ret
lahf
fwait
insb
mov
mov
and
xchg
iret
jmp
xor
loop
jb
cmp
scas
aam
stos
mov
data16
fldl
inc
dec
ror
lock
stc
data16
push
mov
pop
cltd
adc
xchg
inc
pop
jb
ljmp
push
jg
scas
dec
test
int3
aam
push
xchg
lds
aam
mov
out
pusha
or
push
lahf
stos
into
lods
mov
loope
fs
jbe
fs
outsb
into
add
jb
mov
stc
or
fldenv
lcall
jno
outsl
scas
mov
jo
cmc
mov
mov
lods
mov
jecxz
repz
lret
bound
rorb
lea
fstpt
pop
and
lods
pop
push
out
push
scas
inc
mov
aaa
xor
loope
pop
pop
fwait
sbb
pop
mov
cmp
or
push
xor
mov
sbb
push
mov
inc
sahf
fisttpll
shrb
imul
ds
icebp
cmpl
shll
xor
sbb
inc
out
sbb
out
sti
aas
mulb
jnp
cmpsl
dec
sub
popf
jle
cli
data16
push
cmpsl
loope
ficomps
pop
in
or
insb
daa
sbb
clc
mov
mov
stos
test
push
push
iret
or
pop
jmp
sarb
pushf
jne
imul
shrb
movsl
add
pop
jo
pop
mov
cwtl
fdivl
adc
shl
int
xchg
add
sti
push
adc
shll
loop
jecxz
movsb
mov
sbb
pop
das
insb
fwait
or
lods
mov
test
xor
lods
fldcw
xchg
cmp
fcom
sarl
cmp
aas
sbb
nop
dec
sbb
shrl
inc
ljmp
ret
pop
fs
out
cmp
stos
inc
icebp
scas
das
sti
les
jae
mov
lock
pop
test
outsb
insb
fildll
cmpsb
pop
cmp
arpl
mov
add
outsl
repnz
nop
cmp
adc
push
in
clc
sbb
fisubs
iret
add
xor
mov
ret
mov
or
sub
sti
mov
testl
adc
test
insl
loop
xchg
js
jns
out
enter
sub
repnz
rorb
ret
addb
or
xchg
jg
in
adc
lds
cmp
imul
cmc
sub
aaa
lret
xchg
clc
movl
and
xor
xlat
shrl
mov
out
je
or
lods
mov
popf
cmpsl
adc
icebp
cmp
mov
repz
mov
dec
add
popf
fcmovnbe
add
rcrb
xchg
mov
cwtl
int
cmpsb
sbb
cmp
pop
into
sar
lcall
ljmp
sbb
rolb
out
out
mov
cs
dec
mov
and
push
sub
pop
int3
fwait
adc
mov
sub
and
movsl
push
jmp
pop
mov
arpl
sbbl
sub
pusha
stc
mov
xchg
jg
mov
ret
push
inc
jo
in
dec
es
mov
mov
std
and
pop
mov
mov
inc
mov
test
xor
daa
mov
xchg
adc
loop
dec
adc
xchg
stc
xor
loop
mov
sbb
orb
iret
sub
or
mov
cltd
sub
xor
loope
dec
rcrl
call
popa
inc
jp
outsl
xchg
or
push
out
insl
std
ret
scas
push
and
or
movsb
xor
xor
out
sub
or
xor
mov
roll
adc
inc
pop
or
and
fsubrl
jns
lods
sub
sub
fisubs
jmp
adc
cmp
jo
test
xchg
mov
addb
testl
xchg
lock
loope
mov
not
and
mov
adc
push
dec
dec
push
arpl
pop
xor
das
mov
mov
inc
sbb
in
and
push
pop
dec
lret
fwait
mov
imul
mov
and
dec
fsub
movsb
or
pop
popf
sti
jnp
push
cld
add
sub
aaa
pop
out
xchg
jno
mov
add
into
adcb
stos
jbe
hlt
inc
fdivr
push
adc
and
decl
mov
xchg
pop
pop
lock
jecxz
dec
daa
cmpsl
cmc
add
leave
les
adc
mov
inc
into
cmpsb
ror
ret
scas
leave
cmp
arpl
lcall
cmp
test
roll
cmc
or
pusha
add
adc
imul
inc
cld
test
arpl
subb
sub
xchg
or
fistps
daa
lret
lods
cs
ret
mov
fdivrs
mov
adc
mov
sbb
cwtl
push
cmpsb
dec
mov
bound
cli
pusha
jmp
scas
cmp
sbb
call
cld
lret
mov
jnp
xchg
mov
sbb
inc
push
cltd
lock
mov
int
push
push
outsb
sbb
dec
jmp
js
dec
sbb
xor
push
mov
adc
test
in
jge
cmp
out
fldt
js
inc
adc
jno
into
sbb
sbbl
or
and
adc
xor
mov
or
lea
scas
jb
rolb
xor
and
xchg
push
sbb
test
lods
jge
or
pop
xor
stc
push
in
inc
adc
xchg
fldl
jl
jo
mov
xorl
stos
push
and
mov
xchg
jg
pushl
xchg
clc
mov
or
sub
inc
in
mov
mov
add
movsl
cmp
loop
adc
inc
xlat
into
sub
popa
add
dec
stos
pop
jecxz
push
mov
mov
daa
aam
das
dec
adc
inc
ja
into
sbb
lea
out
push
xchg
jnp
cmc
inc
mov
pop
in
xor
testb
lods
lds
stos
js
mov
aas
mov
xchg
push
xchg
and
jp
stc
lret
js
sti
pushf
jno
push
jo
scas
push
cmp
sbb
fistl
and
xchg
cld
mov
add
lcall
pop
mov
roll
loope
sbb
xchg
cld
aas
jmp
adc
iret
push
mov
cmp
mov
inc
fdivl
pop
pop
push
loopne
clc
sbb
popf
cs
cmpsl
lods
pop
mov
jno
lcall
repnz
je
out
movsb
pmulhw
shll
push
mov
dec
xchg
popf
jl,pt
and
push
xchg
movsl
mov
xchg
mov
cld
loope
jae
cmpb
or
shll
loopne
les
inc
cs
sub
pop
dec
cmpsl
lods
jmp
or
mov
mov
fadds
mov
pop
cld
shlb
pop
xchg
lret
pop
enter
push
add
rorl
je
adc
push
cbtw
and
pop
mov
mov
jge
jl
stos
jge
push
cmp
adc
xchg
popa
xlat
enter
fbld
cwtl
in
add
cmpsl
mov
push
xor
clc
mov
mov
mov
dec
aam
sub
cmp
mov
shrl
clc
repz
cli
or
pop
push
jmp
stos
dec
cmc
jns
ficoml
add
hlt
cld
add
adc
xor
mov
or
cmp
lds
push
lods
into
jbe
and
insl
into
rorb
jmp
push
cmp
add
xor
jmp
daa
aas
xor
dec
bound
cmc
clc
fstpt
fcoml
int
xchg
dec
insl
xor
cli
jno
push
push
in
insl
insl
pop
push
adc
sub
shll
cmp
mov
pop
pop
and
xchg
pop
movsl
or
inc
mov
mov
popf
dec
pushf
mov
cmp
test
push
sbb
test
out
sbb
dec
sbb
enter
xchg
and
adc
ss
aaa
cli
div
or
lock
xchg
xor
shl
fisubs
jp
dec
into
or
xlat
fcompl
mov
outsb
push
jmp
jno
jp
add
xchg
ss
push
mov
xor
push
dec
cwtl
jmp
leave
outsl
jb
inc
xchg
loopne
addr16
je
pop
and
pop
dec
jl
pushf
lret
aad
sbb
push
mov
popa
stos
outsb
jo
mov
scas
out
mov
shl
cmp
xchg
adc
and
jae
push
sbb
and
sub
xlat
cmpsl
in
out
mov
lds
add
cmpsb
add
repnz
scas
mov
out
dec
aad
mov
out
add
sahf
inc
rcl
and
mov
and
cld
xor
cli
test
mov
push
aam
adc
std
lcall
arpl
mov
gs
add
xor
push
jo
adc
jbe
aam
add
push
dec
push
cmpsl
dec
scas
and
push
es
adc
mov
xchg
add
mov
fisttps
call
cmp
addl
mov
sbb
daa
cmp
out
mov
jle,pn
out
inc
push
jl
add
mov
iret
lcall
loop
in
cld
xor
frstpm(287
sbb
out
dec
int3
or
dec
test
ror
aaa
stos
lahf
shll
mov
ljmp
in
xchg
lret
sub
addb
add
jle
cmp
push
jns
cmp
pusha
ja
scas
ljmp
std
in
hlt
pop
push
inc
test
insl
xchg
orb
push
mov
cmpsl
pushf
aas
pop
fisttpll
fwait
daa
lret
shl
inc
push
push
test
mov
add
and
loop
test
lcall
loopne
addr16
pop
xor
out
ret
pop
push
adc
aas
xor
sbb
mov
nop
out
xor
sbb
push
ds
cmpsb
ret
hlt
out
push
cli
add
outsb
iret
shlb
test
vpmacssdd
sarb
fs
xor
cli
pop
jns
inc
push
inc
and
mov
jl
stc
mov
mov
mov
or
jg
and
aad
out
cwtl
jne
test
and
add
fiaddl
or
add
fwait
dec
sbb
cwtl
inc
rcrb
test
stos
inc
aaa
iret
sahf
mov
xchg
inc
mov
cmp
rcrl
lret
clc
shrl
push
push
jg
jp
fs
in
xchg
jge
out
adc
xor
jo
push
dec
adc
ja
and
jbe
fsts
in
sub
lea
ror
jb
scas
ret
ljmp
dec
scas
jae
cmc
rcrl
ret
cld
les
rolb
loopne
lcall
call
rol
mov
xchg
and
or
lret
pop
add
add
mov
jns
xchg
adc
ret
cltd
ret
jmp
sti
inc
sbb
add
cli
sub
xchg
mov
push
push
rorl
pop
xor
cltd
sbb
cmp
cltd
xchg
cmp
and
jne
fdivs
pop
inc
push
xor
les
jae
push
ret
xchg
leave
jns
adc
andb
out
incl
dec
mull
adc
popf
bound
add
dec
test
aaa
movl
stos
call
frstor
cmp
aad
cld
xchg
or
mov
or
adc
out
cwtl
lret
dec
cmp
iret
sbb
fucompp
rcl
hlt
jl
jecxz
sbb
mov
xlat
loope
cmp
insl
out
cli
mov
push
xor
xor
mov
popl
andl
pop
imul
xchg
ljmp
das
jmp
push
inc
sbb
xchg
arpl
jecxz
inc
xor
hlt
test
gs
sbb
jg
inc
and
dec
or
jnp
jmp
mov
scas
inc
push
mov
insb
stos
inc
das
xchg
sbb
mov
stos
fidivs
sub
mov
sbb
fcomp
popf
into
xlat
jne
popf
xor
aam
cmc
mov
scas
scas
dec
dec
xchg
push
xor
cmc
jnp
pop
sbb
and
and
stos
sub
stos
stos
or
xchg
mov
ret
cmpb
data16
ljmp
mov
ja
fsubrs
push
jl
shrb
fs
adc
mov
pop
icebp
mov
cmp
cmp
fwait
xchg
or
or
pop
mov
inc
mov
fistpll
adc
add
and
mov
add
clc
js
hlt
test
loope
aam
je
mov
iret
sub
fsts
mov
mov
inc
and
or
jb
push
xchg
cmpsl
lds
mov
cmp
mov
jne
faddl
mov
adc
jnp
inc
daa
or
xor
popa
push
aam
dec
xchg
enter
or
movsb
fwait
or
jecxz
in
lods
and
mov
fimull
dec
xchg
mov
scas
jl
push
xor
loopne
inc
or
dec
xor
test
bound
or
cs
xor
mov
add
inc
lcall
push
xchg
arpl
test
push
sub
iret
hlt
lahf
jns
lea
jle
jne
pushl
and
enter
fidivrl
aaa
xor
mov
es
mov
sahf
mov
sbb
mov
aam
lock
xchg
icebp
stos
xchg
mov
jae
popa
fs
mov
inc
sbb
jmp
ja
push
push
mov
and
jbe
mov
push
mov
cmpsl
add
cmc
mov
xchg
jecxz
aas
ror
mov
ja
popf
popf
mov
xchg
inc
in
jns
push
out
outsl
imul
xchg
cmpsl
mov
outsb
js
mov
adc
jmp
jno
dec
push
call
lret
xchg
adc
push
or
ror
test
mov
dec
fsts
push
dec
mov
data16
or
pusha
into
sub
lcall
adc
sub
pop
scas
fisubs
jecxz
jb
in
cld
add
ljmp
sbb
arpl
test
test
or
outsl
mov
cwtl
mov
jns
xchg
xor
or
jae
jecxz
cmpsb
sbb
ret
loopne
sahf
bound
loopne
mov
push
shlb
xchg
push
adc
in
loope,pt
inc
cli
or
sbb
sbb
jbe
int3
mov
adc
dec
jle
sbb
lahf
xor
pushf
push
ret
jecxz
cmpb
fisttpl
aas
adc
test
pop
rorl
es
xchg
push
lods
in
daa
xor
jge
loop
inc
scas
xchg
mov
out
mov
int
xor
add
push
in
adc
lret
in
adc
mov
jae
inc
push
loope
jne
xchg
mov
insb
out
xchg
pop
pop
fwait
cmc
mov
xchg
stos
cmp
sub
xor
sahf
cs
push
add
js
jns
test
ja
or
mov
dec
jno
cwtl
mov
adcb
call
mov
stc
add
xchg
or
jne
jnp
xor
xchg
cmp
out
hlt
mov
sahf
xchg
mov
shl
iret
daa
sub
sti
jnp
iret
in
push
lea
dec
jno
pop
pop
lds
ja
cmp
pop
les
mov
test
sti
pushf
out
and
shl
xchg
jbe
testb
xchg
inc
psubq
sub
xor
sub
and
leave
mov
mov
add
xchg
fstps
out
adc
push
mov
daa
sbb
dec
ss
add
divb
push
pushl
cmc
lahf
pop
xchg
les
int3
fdivr
movsb
xchg
add
in
inc
jp
jbe
mov
mov
jb
pop
cmp
mov
inc
inc
lods
xchg
lods
mov
jb
push
sahf
loope
sub
es
cld
xchg
aam
fidivrl
xchg
jne
hlt
xor
lock
lahf
sbb
mov
dec
scas
lahf
bound
xchg
mov
mov
mov
push
loopne
push
pop
stc
shll
push
out
or
pop
in
pop
arpl
xor
add
test
cmp
mov
jae
pop
mov
pop
iret
jns
fdivl
xchg
loopne
mov
inc
cmpb
pop
std
push
or
push
outsb
mov
or
xor
arpl
add
imul
popa
cmc
fldl2t
mov
xor
jmp
imul
mov
mov
shlb
lret
and
mov
hlt
pop
sti
mov
inc
xchg
push
shll
in
dec
sbb
test
xchg
xor
pop
inc
adc
cmpsl
stc
dec
lret
dec
or
xor
shlb
int3
pop
ljmp
mov
pop
shrl
loop
sbb
xchg
pop
std
out
hlt
adc
lcall
or
xchg
lahf
xchg
mov
cli
cmp
sbb
in
sub
ret
inc
or
jae
gs
pop
es
xor
rol
je
xchg
jl
push
lret
enter
sti
xor
cmpsb
push
fstpt
sub
inc
dec
pop
ja
lods
pop
icebp
or
adc
stos
pop
enter
adc
push
enter
sub
aas
push
andl
mov
jle
mov
cltd
cmc
scas
out
aas
cmpsl
outsb
jle
push
jl
inc
xchg
jmp
movsb
cmp
cmc
aad
in
mov
mov
loop
xchg
jne
mov
nop
sahf
arpl
push
fidivs
sbb
mov
and
shrl
xchg
inc
xor
push
scas
sbb
sbb
dec
dec
fstl
popa
push
pop
sti
add
mov
jmp
jns
or
sbb
dec
cmp
lret
mov
ror
sbb
mov
adc
inc
xchg
inc
shll
jecxz
cwtl
push
adc
xchg
jmp
mov
shrl
push
das
xor
bound
or
cmp
popa
add
dec
inc
pop
lret
fiaddl
test
pop
inc
mov
sbbb
dec
xor
fidivrs
pop
rcl
cwtl
scas
mov
mov
cld
mov
dec
cmp
pushl
jne
cmpsl
ret
inc
and
shlb
addl
sub
out
mov
leave
add
mov
notb
icebp
cmp
std
push
sti
lahf
insw
into
popf
addr16
jl
insl
stos
lret
andb
insb
mov
inc
sbb
in
out
jno
xor
pop
sahf
adcl
or
xchg
icebp
js
into
out
mov
addr16
mov
ds
sbb
cmp
test
mov
mov
adc
dec
pop
adc
dec
rcll
push
in
xor
mov
push
jle
cmp
adc
adc
jl
and
mov
divb
repnz
dec
jmp
mov
xchg
mov
shll
lret
sahf
popl
inc
add
std
sub
inc
fwait
mov
mov
pop
xor
bswap
insl
push
adc
sub
or
popa
inc
jmp
fs
mov
jnp
cmpb
jo
shrl
jg
cmc
or
adc
pop
add
sbb
arpl
push
mov
push
cli
or
mov
daa
sbb
xchg
xchg
push
imul
jnp
insl
fwait
mov
lret
fistl
enter
enter
xchg
or
mov
sbb
jo
ret
inc
pop
imul
dec
jo
and
mov
add
addl
or
filds
push
jp
fdivs
popf
stos
pop
lret
and
sti
mov
cmc
sub
fdivp
adc
sub
dec
xchg
js
dec
jne
push
sub
aas
in
stc
sti
lods
repnz
andb
jge
in
mov
test
in
popl
or
cwtl
leave
ja
fldl
xchg
xchg
in
ds
jmp
mov
arpl
ficoml
pusha
push
or
dec
sub
inc
xchg
and
inc
std
lcall
mov
aaa
dec
mov
lds
push
pop
leave
popa
lock
pop
add
aad
pop
push
inc
pop
mov
add
pop
lea
inc
push
out
mov
sub
push
cltd
xchg
push
les
mov
fnstenv
push
jle
jecxz
ret
xlat
mov
sub
add
jno
pusha
stos
testb
fildll
xchg
into
lahf
repz
lods
cmpsb
aad
fdivs
bound
lret
mov
dec
inc
mov
push
into
dec
out
mov
inc
inc
push
out
fcmovnb
scas
pop
xor
jo
aas
out
jecxz
test
mov
jae
ljmp
pop
sbb
sbb
xor
test
orl
xor
push
int
arpl
test
jns
mov
outsl
cmp
xor
dec
cmp
fistpll
fwait
cmp
ja
pop
mov
test
sti
inc
mov
mov
enter
and
sbb
aaa
adc
cmc
sub
in
add
mov
pop
jmp
loopne
cmpsb
packssdw
subb
leave
cltd
addr16
adc
addl
pop
mov
push
inc
fcmovnbe
mov
pushf
popf
prefetcht1
and
or
jge
adc
cmpl
mov
out
clc
xor
aas
mov
testb
pusha
xchg
fs
jo
adc
pop
nop
stc
add
mov
pop
push
rcrl
arpl
jae
fadd
add
pop
leave
dec
add
js
dec
leave
xor
cli
push
jbe
pop
cmp
inc
xlat
outsl
lds
xchg
clc
insl
and
test
call
loopne
sbb
fistps
sub
sub
imul
das
mov
jp
push
push
in
cmp
and
inc
fbld
roll
mov
adc
lret
jmp
push
push
add
repz
and
lods
jne
cmp
jg
aad
pop
sbb
dec
pop
ret
pop
dec
lock
rolb
js
scas
inc
cmp
xor
push
testb
aas
dec
gs
lods
in
jge
mov
or
shll
loopne
jnp
xchg
inc
sbb
insb
mov
push
int
es
dec
push
xchg
dec
push
push
fisubs
gs
mov
sub
mov
sar
jl
inc
xlat
out
or
inc
out
icebp
cmc
jne
ja
ss
les
and
xor
sub
mov
cs
scas
je
sbb
push
ret
test
in
push
xchg
jg
loopne
adc
xchg
iret
jle
in
repz
cli
inc
push
divb
pop
push
jp
int
clc
inc
sbb
mov
mov
and
push
dec
add
movsl
push
fs
cmc
fs
repnz
cli
mov
ss
fisubrl
dec
call
jecxz
arpl
push
or
xlat
adcb
in
jno
icebp
fwait
xchg
sub
cs
mov
int
addb
dec
push
std
addr16
std
adc
bound
cmc
pop
out
push
mov
mov
andb
mov
cli
mov
js
inc
xchg
inc
mov
test
mov
lret
ret
iret
std
pop
outsl
mov
outsl
cmc
xor
into
fbstp
loopw
pop
and
je
cmpb
push
jnp
xor
pop
dec
iret
cmc
mov
and
outsl
mov
out
push
jle
aas
jecxz
out
loope
xlat
pop
xlat
ret
sbb
sti
inc
lds
icebp
lahf
rorb
sbb
sarb
js
lret
lret
ds
pushf
xchg
clc
call
push
movsl
xchg
add
add
daa
daa
adc
cmp
movsl
jg
push
daa
int3
sbb
ret
add
int3
pop
mov
lret
icebp
in
pop
and
fsubs
std
jb
xchg
mov
sub
pop
out
adc
enter
int
mov
dec
jmp
test
out
cmp
repnz
imul
loop
lret
lret
push
mov
pop
jmp
jo
jb,pt
icebp
outsl
mov
mov
jge
in
add
dec
sub
stos
adc
jge
add
mov
xor
cmp
rorb
fisttpl
dec
adc
int3
pusha
xor
push
lret
dec
out
pop
gs
orl
sbb
mov
shll
icebp
mov
std
cwtl
rclb
setnp
fwait
cmp
rcrl
pop
adc
mov
pop
outsl
dec
int
dec
mov
pop
cmp
stos
int
xor
inc
xchg
hlt
jp
imul
add
mov
dec
outsb
pusha
imul
inc
sti
fsubl
add
mov
arpl
pop
scas
mov
pushf
xchg
jp
sub
aad
sub
mov
mov
xor
mov
or
mov
js
dec
jne
cs
into
xchg
and
or
fstl
bnd
loope
out
xchg
and
sub
sbb
xchg
in
xor
add
std
int
test
pop
mov
or
dec
cmpsb
popf
xchg
aad
push
popf
mov
sbb
je
pop
scas
bound
jo
xor
mov
sub
jge
pop
cmpsb
js
insb
pop
inc
adc
repz
add
aad
lock
in
test
imul
cmp
jg
adc
or
dec
or
dec
lret
jle
in
dec
jge
sub
mov
jno
pop
lahf
push
je
inc
pushf
ret
subl
jl
push
movsl
inc
cmp
xchg
xchg
ss
stc
int
jbe
dec
pop
lcall
xchg
xor
pop
mov
popa
outsb
cmpsl
cwtl
inc
lret
jns
das
pop
aam
lds
xchg
repnz
and
leave
fcomp
jno
pushl
ret
mov
imul
daa
sub
fsub
je
jp
push
in
dec
dec
sbb
in
popa
push
fldcw
jmp
rorb
jno
or
and
imul
das
pop
push
movsl
dec
mov
xlat
mov
mov
je
pop
inc
ljmp
and
sbb
cmpsl
jbe
popf
adc
dec
lret
cs
jecxz
xchg
das
outsl
ss
insl
inc
or
mov
mov
xchg
insb
out
jnp
dec
rcr
je
cmpsl
dec
push
and
mov
leave
dec
mov
add
or
data16
scas
aam
rcrl
cltd
out
sahf
add
fdivl
jge
and
pusha
mov
sub
push
lret
or
mov
push
jmp
int3
subb
adc
fnstenv
mov
cmp
adc
subl
fs
mov
push
adc
push
xchg
bound
ja
inc
negl
and
movsl
xchg
dec
in
pop
xchg
out
sar
inc
cmpsl
mov
mov
xchg
xchg
cmp
insl
mov
or
and
sbb
stos
shll
inc
pushf
dec
dec
hlt
clc
pop
out
jp
out
mov
std
push
cli
mov
sbb
bnd
fwait
add
add
and
add
mov
adc
stos
mov
sbb
sub
pushf
dec
addl
lret
hlt
xor
ljmp
lahf
stc
pop
hlt
jb
dec
scas
or
add
mov
fdivrs
jmp
pop
sbb
pop
cwtl
dec
sbb
loopne
mov
or
pusha
ret
popa
jle
jp
jp
add
inc
xchg
xchg
les
pop
fists
xor
icebp
xchg
inc
xor
and
push
sar
push
mov
sbb
cmp
in
add
push
mov
negl
cli
stos
push
inc
into
daa
insb
sub
jl
out
jg
fwait
js
test
inc
adc
mov
jbe
xor
xor
shll
outsb
cmpsb
inc
or
mov
jle
or
cli
in
lret
dec
mov
mov
scas
cmp
cli
jb
mov
jg
daa
bound
out
push
outsb
std
lds
pop
lret
xchg
adc
out
out
aam
pop
xchg
and
pop
or
mov
cmc
leave
out
cmp
jecxz
xchg
movsl
add
sub
rclb
dec
stc
or
and
xchg
mov
mov
push
lds
mov
sbb
stc
mov
push
mov
das
insb
stos
in
sar
out
cmc
adcl
daa
adc
ret
imul
lahf
gs
add
cmp
les
or
test
popl
out
and
out
xchg
sbb
lods
dec
cld
stos
outsl
les
stc
pop
mov
add
push
cmpsl
push
loope
das
sub
outsl
inc
mov
cmpsb
fwait
sti
cs
clc
pop
lea
faddl
adc
push
sbb
scas
into
outsl
and
fwait
int3
cmpsl
push
jp
int
cltd
jecxz
pop
cwtl
shlb
dec
sub
mov
push
inc
clc
or
adc
es
cmpsb
loop
mov
out
adc
or
pop
mov
add
mov
pusha
pop
cmpsb
pop
test
hlt
int
jbe
sti
or
call
fstl
jbe
in
stc
loopne
imul
sub
xorb
mov
xchg
mov
inc
pushf
sbb
fstpt
aam
dec
fcompl
out
pop
push
test
add
pop
mov
lahf
push
inc
roll
aam
mov
xor
dec
push
xor
mov
mov
mov
insb
inc
incl
fisubs
and
jne
mov
cld
cmp
scas
adc
pop
adc
shrb
out
adc
cmp
dec
lcall
xlat
jb
sub
xchg
outsl
sbb
leave
sbb
data16
mov
mov
outsb
sbb
add
sub
push
cmpsl
jo
outsb
xchg
sub
popf
push
idiv
cmp
scas
or
inc
out
adc
lret
mov
fldl
sbb
sysret
pop
in
xchg
pop
imul
pop
push
repz
arpl
xrelease
cs
xchg
inc
push
stos
leave
int3
inc
pop
jmp
mov
jae
jge
mov
lret
insb
bound
mov
push
sbb
jne
mov
dec
fmul
xor
push
lret
subl
mov
mov
mov
test
mov
fcompl
inc
jg
and
or
lods
xor
imul
sbbb
mov
pop
and
rcll
repnz
mov
dec
push
hlt
add
add
rcrb
lcall
sti
pop
push
mov
pop
pop
lods
fmuls
ss
out
push
mov
jae
clc
xchg
femms
xchg
sarl
in
xchg
inc
mov
mov
xchg
add
mov
ss
inc
cli
jmp
push
pop
aas
sub
xchg
icebp
lret
repz
jg
cmp
rcrl
imul
push
test
cmpl
imul
add
arpl
in
and
fwait
xchg
jg
mov
cmp
xor
add
dec
xchg
arpl
dec
adcl
dec
xchg
call
lret
fcomp
add
into
sahf
fcomp
call
jle
mov
je
lret
stos
jb
mov
mov
in
jle
imul
sahf
movsl
sub
push
ljmp
xchg
int
sbb
mov
mov
and
call
stos
or
push
mov
jne
adc
inc
mov
xchg
add
mov
jns
pop
inc
pop
pop
or
xchg
je
xor
subl
sub
ficoms
aas
in
xchg
rcrb
repz
ret
or
std
mov
mov
inc
xor
sbb
jp
jno
lcall
ds
add
sub
push
add
ror
or
ss
pop
mov
xor
inc
pop
cld
movsb
jne
into
cmpsl
cmp
int3
pop
and
adc
mov
aaa
iret
fdivl
repz
lds
dec
call
mov
adc
pop
int3
pop
nop
aas
push
gs
and
sub
and
cwtl
and
jg
into
lahf
imul
adc
fcmovnbe
arpl
sub
add
xor
add
add
mov
inc
stos
inc
mov
ss
jno
sahf
mov
push
std
mov
out
jle
adcl
push
xchg
lret
mov
mov
lret
mov
jle
pop
sarb
mov
int
pop
adc
adc
scas
roll
lret
push
or
aam
fwait
xor
in
sbb
arpl
and
orb
test
push
cmp
sub
insb
jno
gs
rorl
repnz
jl
mov
aas
pop
test
xor
in
mov
call
out
mov
xor
pop
sub
sbb
mov
ret
cltd
sub
mov
pop
pop
cmpsb
in
mov
cmc
pop
xor
mov
int
gs
push
inc
pop
fists
and
mov
add
jecxz
or
out
sub
dec
sti
lds
pushf
leave
inc
pusha
fldenv
cmp
testb
fistpll
mov
imul
mov
loope
push
sbb
js
mov
sbb
cmovo
dec
lahf
pop
jne
cwtl
mov
lds
push
adc
and
sarl
mov
shl
xchg
and
pop
sti
fisttps
jbe
pop
mov
inc
push
pop
add
jno
popf
fxch
push
testl
mov
cmpsl
jmp
or
xor
cltd
outsb
into
insb
push
outsb
neg
gs
mov
lcall
fsubrs
jno
ds
sarb
jno
not
mov
out
push
dec
mov
mov
sbb
mov
push
js
filds
inc
arpl
popf
pop
pushf
push
xor
push
hlt
pop
jae
push
loopne
in
shll
or
es
mov
and
xchg
xchg
add
fsubl
xchg
outsb
shll
fisubs
mov
jbe
sbb
lcall
je
sbb
sub
shrb
add
cmp
pop
sub
or
and
inc
call
push
xchg
mov
inc
push
mov
push
or
movb
jnp
fiaddl
cli
pop
in
jns
aam
aam
repnz
insb
jb,pt
sbb
pop
xor
push
repnz
or
cmp
hlt
dec
mov
xchg
fdivl
mov
stos
leave
outsb
jne
in
sbb
jmp
dec
sub
cmp
popa
mov
mov
or
push
push
aaa
loopne
sub
xchg
xchg
inc
jns
xchg
mov
sub
pop
xchg
shrl
and
adc
fidivrl
repnz
xchg
push
fmull
push
pop
loopne
or
fwait
loop
in
lods
ja
mov
jl
das
mov
push
jbe
rcll
loopne
fadd
movsl
mov
jns
mov
pop
int
dec
stc
mov
pop
add
into
leave
insl
push
fistpll
and
loopne
movsl
lret
xchg
lcall
test
out
rcr
je
jno
inc
stos
pop
jmp
call
out
mov
clc
push
aaa
jmp
dec
das
nop
ss
xor
cli
pop
test
push
lret
js
mov
mov
inc
das
dec
sbb
pop
lods
add
dec
test
mov
jae
mov
fsubl
and
sar
cmp
in
imul
arpl
lods
mov
xchg
dec
cmp
jecxz
inc
add
aad
or
dec
aad
ja
xor
mov
fcomps
xor
jle
nop
push
scas
xor
pop
jno
mov
mov
pusha
mov
jne
test
push
fidivrl
pop
jae
mov
psrlq
pop
int
sub
xchg
out
dec
stos
outsb
push
movsb
dec
xchg
movsl
push
jb
mov
push
or
inc
int
gs
lret
sbb
in
pushw
xor
pop
xchg
xor
push
mov
pop
mov
bound
mov
clc
dec
repnz
nop
xor
cmpsb
out
push
and
arpl
mov
ss
clc
mov
enter
outsb
sbb
inc
mov
cmp
aam
or
mov
pop
push
aam
xor
in
in
lock
mov
pop
arpl
xchg
and
pushf
test
rclb
sub
imull
jne
mov
dec
in
xorb
xlat
lahf
insl
lods
stos
int
out
jp
int
dec
add
cwtl
xor
pop
sbb
subl
scas
sub
push
xchg
or
test
mov
inc
loopne
pop
push
lcall
flds
les
xor
xorb
or
push
mov
das
cwtl
mov
out
scas
jl
mov
stos
daa
and
stos
sarl
mov
add
scas
pop
daa
fmul
cmc
mov
cmpsb
dec
xor
loope
and
push
pop
cmp
repz
repz
scas
cwtl
jmp
cli
jo
mov
cmpsl
outsl
dec
sti
popa
cmp
pop
push
andb
mov
mov
gs
mov
hlt
es
popf
cli
jmp
jle
adcb
divb
add
add
jg
xchg
arpl
mov
adc
test
out
and
mov
push
pop
push
inc
in
jmp
cmp
loopne
jmp
inc
mov
xchg
loope
lahf
push
push
adc
stos
cmp
or
inc
out
mov
push
sub
ss
out
cmp
dec
iret
cs
mov
subl
sub
mov
sub
bound
pop
push
mov
adc
shll
in
test
iret
call
hlt
pop
dec
pushf
jp
jg
lahf
dec
insb
in
lea
lret
sbb
cltd
push
fs
or
xchg
rol
fldl
lea
adc
xor
nop
inc
aas
fiadds
in
andb
fidivl
push
cmp
dec
mov
enter
mov
push
out
stc
mov
lods
mov
repnz
rol
fmuls
push
int3
mov
jnp
mov
jle
clc
jecxz
ret
js
dec
test
lret
mov
testb
xor
das
xchg
popf
jb
inc
xchg
std
cwtl
loope
push
push
out
subb
aas
mov
out
pop
cwtl
or
orb
push
inc
pop
lea
fstpt
mov
pop
mov
test
mov
pop
mov
pop
cmp
push
insb
xchg
or
nop
push
jge
adc
sti
jo
out
xchg
sahf
sub
stos
pop
adc
mov
push
or
adc
cmp
call
lahf
or
int
and
mov
push
in
jbe
or
mov
cli
shll
shrb
dec
xchg
push
jnp
stos
adc
sti
jmp
loope
fnstcw
out
subl
jo
sahf
xor
jmp
push
pop
jno
mov
sbb
mov
insb
cs
ret
sub
leave
pop
mov
clc
push
adc
push
cmp
stos
rclb
mov
andb
cmpsb
cmp
sbb
adc
mov
hlt
ret
scas
jmp
gs
xor
ror
aad
adcb
stc
inc
loopne
add
ljmp
stos
gs
mov
pop
repnz
stos
inc
flds
jg
mov
ret
jle
js
ds
ja
testb
das
outsb
xor
out
les
fcom
out
jecxz
lock
dec
lcall
nop
ret
data16
sbb
stos
gs
jb
push
xchg
clc
js
add
sub
dec
aaa
jmp
sarl
ja
cmp
sahf
mov
mov
push
sub
mov
test
xor
aas
stc
jb
test
sub
pop
sub
bound
aam
lret
leave
int
mov
dec
add
pop
jle
bound
push
or
lcall
push
mov
stos
rclb
inc
or
cmp
mov
in
and
pop
aas
addl
push
scas
inc
cmp
dec
stos
test
adc
in
push
xchg
sub
push
jge
leave
push
lcall
push
add
dec
ret
mov
or
push
repnz
mov
shl
push
clc
shrl
push
jle
sub
leave
lret
jbe
mov
jne
imulb
insb
cmovs
pop
mov
adc
popf
jge
xchg
pop
nop
shlb
push
imul
scas
je
negb
jb
jmp
ficoml
pop
push
mov
sbb
aad
push
jb,pn
ja
in
mov
lcall
adc
lret
pop
cmp
out
add
sarl
and
mov
sub
jbe
add
push
xlat
pop
mov
sbb
divl
jbe
ret
arpl
mov
int3
popf
adc
sbb
jecxz
pushf
sub
push
and
and
adc
sub
cs
dec
ds
dec
les
or
orb
bound
call
dec
jl
and
insl
shr
clc
push
add
mov
xchg
lods
and
jbe
jnp
movsl
xchg
mov
outsb
dec
test
test
ds
inc
mov
ret
jge
stos
jge
jb
sub
mov
scas
jne
pop
add
xor
fnstsw
sub
push
adc
pop
add
push
arpl
hlt
push
mov
or
inc
add
inc
mov
sub
pop
sub
mov
add
out
cmp
popf
sti
and
bound
xchg
jne,pt
fldl
into
cmp
loope
or
lret
std
lods
xchg
enter
push
mov
aaa
lods
jl
mov
outsb
addr16
lods
stos
out
push
push
mov
test
pop
adc
popf
pop
ficomps
adcl
pop
test
mov
dec
jnp
scas
mov
clc
lods
aad
dec
jns
and
dec
xchg
cmpsl
sub
pop
mul
in
jg
pop
cmp
in
stos
inc
pop
cmp
or
mov
aad
ret
es
stos
jle
clc
push
cmc
mov
repnz
stos
sbb
out
mov
dec
and
xchg
sub
inc
bound
lret
mov
pop
push
lret
sarb
arpl
jl
pop
fsts
les
and
ret
mov
ljmp
or
pop
fstpl
lret
xchg
lahf
push
xchg
repnz
sbb
std
scas
stos
and
das
rorb
sbb
sbb
sub
cli
mov
push
test
arpl
mov
and
movsb
xor
cmp
outsl
fidivs
stos
mov
xor
aam
jl
add
xor
jle
adc
stos
stos
into
push
mov
dec
loopne
into
xchg
sarb
pop
mov
and
adc
cwtl
imull
pop
aad
sahf
mov
bnd
add
cmp
ljmp
fsubs
jp
mov
mov
push
fcoml
aas
shll
bound
and
inc
mov
jmp
xchg
pop
cltd
push
stos
loop
xor
adc
xor
xchg
ret
sbb
push
mov
daa
xor
xor
ljmp
or
jae
xor
mov
xchg
aaa
frstor
stc
out
popa
inc
add
cmc
loope
pop
movsl
push
clc
adcl
into
push
dec
or
sub
fsubl
in
icebp
dec
fsubrs
adc
insb
pushf
inc
and
scas
in
les
in
push
fbld
enter
scas
push
dec
or
add
cmp
mov
xchg
pop
mov
rcrl
fsubl
sub
ds
cmp
lret
in
sbb
fwait
mov
hlt
std
adc
or
cmp
jp
movsl
jo
data16
pop
push
inc
sub
rcrb
dec
test
jo
pop
mov
mov
ja
jnp
fldl
jge
mov
jb
pop
in
mov
jmp
dec
and
std
jmp
sub
xchg
in
mov
mov
outsb
loop
pop
add
sti
adc
insb
xchg
lods
aas
or
repnz
ds
aam
in
cmp
mov
stos
popf
ret
arpl
xlat
insl
lods
adc
ficoms
pop
stc
xor
mov
mov
mov
call
imul
fwait
in
xchg
pop
fisttpll
push
sub
cli
cld
rorl
imul
jns
xchg
fdivrp
clc
nop
sub
push
push
adc
gs
pop
dec
pushf
adc
iret
sub
or
mov
or
sbb
ljmp
data16
or
sbb
cli
ret
xlat
and
xlat
xor
mov
pusha
mov
imul
push
shrb
in
setne
divl
int
mov
divb
shlb
cld
hlt
lds
push
or
pop
or
inc
push
pop
push
dec
xchg
inc
adc
aam
xchg
fimuls
imul
pop
ja
insl
cmp
xchg
jnp
aas
mov
les
cltd
sub
out
adc
xchg
arpl
imul
or
incl
add
inc
scas
pop
movsl
push
xchg
ret
rorb
pushf
and
fists
xchg
pushl
or
mov
mov
int3
pop
xchg
std
and
mov
test
cmpsl
or
ret
cmp
xor
jge
mov
pop
mov
pusha
fistpll
xchg
mov
mov
pop
out
lock
popa
pop
jns
and
mov
pop
pop
int3
in
push
xchg
sarl
push
je
icebp
inc
int
cs
fldt
pushf
xor
mov
inc
pop
jbe
js
mov
icebp
or
cmpsl
sbb
ret
test
pop
mov
sbb
push
ljmp
scas
xor
ret
or
sahf
mov
xor
subl
sub
jno
xor
add
dec
jb
xor
inc
popf
and
fisttpll
stc
adc
cmp
pop
cmpb
cmpsb
pop
leave
mov
test
add
or
add
jb
int3
syscall
jbe
lock
es
ret
imul
addr16
aad
fisttpll
out
mov
jo
mov
add
gs
out
xor
lret
add
sub
sahf
hlt
arpl
mov
cmp
add
jl
mov
mov
cmp
cmpb
pop
add
and
jno
popa
sbb
cli
or
lret
dec
or
insl
daa
icebp
mov
aam
es
hlt
mov
stc
pop
sub
cmp
mov
mov
nop
xor
adc
inc
andl
dec
repz
lea
int3
outsl
jp
scas
xchg
sub
cmp
adc
mov
outsl
mov
push
les
push
push
sbb
inc
sub
clc
rolb
pop
movsb
lods
in
rcll
pop
pop
xchg
push
sub
xlat
inc
loop
xchg
sub
js
and
sbb
mov
cmp
adc
mov
stc
fldl
jne
mov
push
sub
in
addr16
das
jns
das
pop
add
sub
repnz
pusha
in
or
pop
push
popa
sbb
sbb
fbld
les
and
in
cmp
push
ja
mov
mov
fnsave
not
mov
bound
jns
in
pop
xchg
cmp
mov
loop
mov
or
adcl
stos
inc
popf
lods
movsl
imull
xor
mov
dec
daa
test
gs
mov
push
xchg
sbb
push
dec
mov
sub
xchg
xor
xchg
popa
jmp
mov
inc
aad
lods
cmp
mov
das
adcl
push
pop
repz
repz
push
mov
es
add
dec
pop
movsl
xchg
sub
adc
pusha
xchg
jmp
push
mov
insl
fisubl
in
and
jae
cmp
and
mov
xchg
pop
and
jb
out
aad
sub
repnz
jo
inc
lea
popf
mov
cs
int3
add
out
mov
das
out
push
inc
jecxz
mov
insl
cli
ds
aaa
xchg
mov
push
imul
xchg
sbb
shrb
cltd
sahf
mov
mov
lahf
mov
repnz
adc
cmpsl
pop
outsl
jbe
rorb
or
cmp
mov
sub
movsl
repz
vpsubq
push
lcall
daa
push
aaa
dec
negl
ja
mov
xor
inc
movsb
ljmp
mov
adc
pop
mov
pop
or
xchg
cld
int
xchg
ds
std
xchg
fstpt
xchg
repz
jmp
mov
or
mov
or
jmp
scas
dec
xchg
dec
add
std
inc
dec
fldenv
std
add
adc
pop
pop
jno
repz
pop
push
jbe
jb
adc
cli
daa
adcl
jg
jae
sub
adc
cli
fildl
add
dec
test
fildll
clc
or
xor
aaa
pop
or
fldenv
icebp
outsl
mov
mov
mov
out
xlat
add
cltd
push
and
cmp
push
int3
adc
xchg
inc
fmuls
out
push
add
dec
and
mov
sbb
dec
or
and
xchg
mov
sti
enter
lret
lock
fs
xchg
iret
sbb
and
inc
mov
mov
inc
jmp
jle
loopne
popf
push
fistpll
ja
stc
test
xor
lods
pop
mov
mov
int
inc
jge
jp
cmpsl
fs
mov
cmpb
std
and
jne
test
repz
nop
js
xchg
jmp
pusha
sub
mov
loope
xorl
push
adc
out
xchg
cwtl
lock
cmpsb
pop
leave
cmpsb
and
xchg
adc
and
jnp
inc
mov
fwait
sub
sbb
movsl
xchg
test
sub
dec
hlt
pop
call
mov
inc
jg
aad
addr16
pop
lahf
ss
std
xorl
imul
xor
lock
add
movsb
and
je
or
insl
in
xchg
mov
and
fisubl
push
dec
pop
hlt
insb
loope
jae
cmp
mov
out
inc
cmp
cmp
xor
mov
mov
dec
sbb
jo,pn
scas
jmp
mov
dec
or
test
push
dec
mov
xchg
and
sar
mov
push
mov
add
fucomp
jecxz
or
out
into
push
sbb
jne
jno
pop
inc
xor
aad
push
jns
ficoms
mov
push
and
imul
xchg
sbb
adc
mov
cmp
cmp
jecxz
cld
cmc
movsl
and
mov
cmp
jbe
sub
jecxz
les
jmp
nop
jne
sbbl
pop
and
call
mov
test
ja
mov
divl
mov
cmp
push
or
push
inc
xchg
lcall
add
or
adc
shrl
aam
mov
adc
icebp
es
jmp
mov
leave
xchg
pop
add
push
or
inc
jbe
inc
out
sub
mov
fstpt
mov
loopne
fs
jle
sbb
cmp
cmovns
push
js
test
mov
or
arpl
xor
movsl
add
inc
enter
out
ss
jno
xor
add
in
push
dec
push
test
mov
sub
and
xchg
xchg
push
aam
mov
cltd
xor
jl
mov
daa
xor
popa
lods
mov
cmp
fwait
daa
cmp
xchg
sbbb
addr16
add
mov
inc
aam
inc
mov
jge
mov
lea
lock
lcall
cmc
jnp
mov
xchg
xchg
fcoml
mov
scas
push
push
rorl
ljmp
pop
fs
add
and
outsb
mov
ds
jl
mov
add
mov
sti
xchg
pop
jle
inc
sbb
or
add
and
mov
das
xchg
imul
hlt
sbb
mov
cwtl
gs
inc
mov
and
adc
scas
lds
adc
test
pop
xorl
pushf
fmuls
popa
call
xchg
call
in
mov
mov
xchg
scas
or
add
push
mov
popa
daa
inc
pop
std
dec
lea
jl
dec
cmp
and
jmp
and
movsb
cld
paddusb
pop
mov
cmp
sbb
shlb
pop
push
cs
and
aaa
andl
pop
movsb
xchg
pusha
push
insb
cmpsl
aad
push
call
int3
shlb
add
sti
pop
fwait
xchg
mov
fucomip
lods
jno
lahf
cld
or
lcall
adc
pop
dec
lret
stos
scas
jne
or
xchg
sbb
xor
adc
push
jl
inc
arpl
cli
cltd
push
lock
mov
pop
dec
int
push
add
pop
insl
pushf
inc
fs
in
shrl
add
fsub
dec
iret
lret
pop
sub
xchg
xor
sbb
cltd
mov
clc
out
pusha
shll
cwtl
jecxz
xchg
test
repnz
cli
sub
push
jmp
jmp
gs
cmpsl
xchg
test
mov
dec
stos
mov
mov
sub
inc
fisubrs
loop
pop
fmul
push
std
adc
fldl
insl
inc
scas
mov
jns
loop
add
rcrb
cltd
scas
je
ss
outsl
jae
pop
test
xor
scas
outsb
ss
adc
lds
rcrb
out
aaa
addr16
jmp
inc
jne
ret
adc
jle
push
scas
sub
stos
dec
push
jecxz
movsb
stos
sti
mov
xor
dec
or
pop
adc
popf
fwait
clc
dec
add
sti
push
mov
mov
pushf
mov
in
dec
jne
and
dec
xchg
out
adc
repnz
push
lods
scas
fdivs
push
jo
cli
pop
and
mov
popf
das
dec
xchg
je
cmpsb
mov
mov
push
pop
hlt
out
or
and
mov
clc
adc
pop
sub
jp
gs
add
add
movsl
sbb
and
pop
xor
push
orb
test
mov
call
test
lds
push
sti
pop
imul
push
fnstcw
fnsave
mov
or
pushf
out
lret
or
int
movsl
cmp
mov
call
pop
loop
nop
loope
lds
pop
push
aas
subb
loop
fistpl
cmpsb
push
shlb
lds
sbb
adc
int3
jl
call
mov
sahf
pop
and
repz
xchg
mov
movsb
lret
push
mov
loopne
clc
xchg
push
fs
push
aaa
pop
hlt
jae
push
imul
mov
adc
out
hlt
xchg
adc
leave
mov
nop
jae
xor
mov
jbe
xor
dec
leave
iret
push
adc
jo
fstl
pushf
cmc
clc
adc
xchg
lahf
leave
xchg
inc
leave
fldenv
and
nop
fwait
pop
cli
inc
pop
lret
mov
mov
adc
dec
int
subl
jne
nop
jg
inc
out
xchg
call
sub
mov
lock
jecxz
and
xchg
adc
sbb
push
pop
cmp
xchg
jmp
mov
dec
jmp
bound
cmp
sti
push
das
ja
and
pop
push
aaa
sbb
xchg
les
inc
mov
data16
outsl
mov
ss
aaa
imull
jnp
push
push
mov
fsubrs
andnps
or
and
push
dec
xchg
loop
dec
incb
int
into
sub
nop
xchg
lock
or
xor
mov
insb
inc
mov
jo
mov
out
repnz
push
fildl
shl
rclb
rcll
xlat
fisubrs
add
push
mov
stos
sub
push
cmpsb
mov
sahf
cmpsb
cs
sub
sub
pop
and
sub
in
idiv
mov
mov
rorb
in
mov
into
jg
gs
mov
mov
xchg
or
xlat
jne
movsb
dec
test
jne
sbbb
mov
scas
pop
pop
add
jnp
dec
add
mov
mov
sbb
cltd
mov
sbb
xor
xor
test
pop
xor
push
adc
jmp
inc
jp
imul
subb
imul
push
xchg
out
mov
xchg
aaa
pop
outsl
adc
iret
push
call
test
jne
mov
jne
sahf
or
push
pop
aas
inc
nop
mov
daa
test
and
xor
push
and
dec
xchg
fs
dec
xchg
jno
xchg
ds
adc
inc
cmp
lods
inc
fisttpl
jo
fucomp
rclb
lcall
mov
pop
add
inc
loope
mov
sub
aad
mov
ljmp
into
out
mov
cmc
cmpsb
push
dec
xchg
outsb
sbb
hlt
jge
movsl
add
ljmp
jmp
cli
shll
jmp
and
xchg
insl
mov
jno
pushf
imul
flds
dec
call
cs
mov
call
xor
push
push
rcr
jo
les
test
xor
jne
mov
cwtl
lret
push
mov
jns
dec
lock
cld
sbb
repz
push
inc
adc
iret
jns
jo
jno
pop
cmp
call
push
pop
imul
ss
jl
out
mov
fidivl
jg
xchg
cmc
add
mov
fs
dec
push
cld
stc
in
mov
sub
inc
push
outsl
imul
sbb
pop
sub
mov
std
mov
cmp
out
or
inc
lahf
mov
ret
dec
pushf
mov
mov
and
xchg
add
leave
aas
pop
imul
dec
sub
pop
idivl
or
sbb
ret
xchg
sbb
push
mov
add
std
lock
mov
mov
loope
jle
and
test
jle
add
jmp
cmpsl
enter
pushf
and
fists
test
jae
mov
psadbw
dec
mov
xchg
push
jb
popf
mov
sbb
inc
and
mov
jno
push
inc
push
pop
sahf
dec
mov
sbb
mov
dec
cmp
nop
push
fmull
test
mov
fisubl
cld
jb
add
sbb
scas
sahf
lds
sub
imul
push
dec
fstl
js
xchg
cltd
adc
push
jbe
test
gs
shrl
jl
les
push
dec
sbb
aad
enter
int3
adc
je
ds
xor
sbb
ja
mov
cmc
jno
or
push
mov
mov
dec
or
xchg
movb
scas
jns
mov
loopne
fistl
pop
ss
sbb
negl
adc
in
mov
loope
out
sub
xchg
and
push
jnp
push
xchg
movl
sub
test
push
adcb
xchg
shlb
es
daa
jmpw
adc
and
int3
int3
or
aam
sbb
daa
mov
add
jg
xlat
push
jg
inc
fisttps
jge
cld
test
test
cmp
mov
test
xor
cltd
insb
jnp
jl
cmp
es
xchg
add
leave
cld
xchg
adc
pop
cs
outsl
jbe
jmp
lret
mov
push
jnp
add
int
lahf
fwait
xor
add
mov
fnstsw
filds
or
cmc
sbb
xchg
mov
rorb
jmp
push
adc
sub
sub
xlat
into
cmp
push
das
lods
cmpsl
rcll
xor
ss
mov
pushf
dec
lock
push
pop
lods
adc
jns
mov
pushf
ss
and
insb
pop
jo
pop
cmp
imul
cs
imul
mov
das
imul
sbb
xchg
test
lcall
mov
pop
fistl
or
mov
jno
imul
es
xchg
xchg
in
sub
jne
push
mov
or
dec
sbb
push
mov
mov
outsb
orl
gs
mov
jbe
rcrb
xchg
ja
aas
aas
cmp
scas
nop
mov
test
sbb
popf
ret
push
addb
mov
enter
insl
inc
sbb
loope
xchg
fwait
and
xor
adc
cmp
shl
mov
jae
cmp
cmp
incl
jns
cmpsl
xlat
xchg
mov
rorb
jae
sbb
sbb
xchg
cli
mov
or
mov
das
push
mov
bnd
mov
push
cltd
pop
dec
outsb
movsb
adc
mov
movsb
cltd
clc
ds
jne
adc
cs
dec
cmp
lock
adc
mov
fcoml
inc
xchg
pop
mov
mov
inc
popa
xor
pop
outsl
xlat
mov
add
nop
pop
pusha
mov
jp
and
jno
inc
cmp
in
mov
dec
mov
mov
int
xchg
stos
mov
lret
negl
pop
add
imul
or
jns
and
xor
push
aaa
push
pop
stos
add
shlb
dec
or
mov
stos
push
sub
sbb
mov
mov
jae
or
xor
jle
push
jae
pop
mov
xor
jbe
shll
mov
adc
outsl
insl
arpl
sarl
scas
pusha
test
fucomi
lcall
jns
mov
adc
xor
push
pop
repz
std
or
fisubrl
sbb
and
and
push
sub
or
xchg
dec
ror
cli
lahf
mov
mov
dec
lods
js
into
es
cmp
cmc
fstl
mov
popa
add
popf
sbb
xor
pop
cmp
int
sbbb
xchg
mov
mov
cmp
push
push
xchg
push
mov
dec
mov
mov
das
and
movsb
adc
imul
je
dec
popa
fwait
lea
jmp
xchg
gs
pop
sbb
lock
testb
imul
cltd
inc
push
cmp
shrl
sbb
xchg
fisttpll
mov
jno
leave
add
pop
aas
push
pop
test
popf
xchg
sbb
aas
inc
inc
lcall
icebp
dec
sbb
sub
inc
insl
xchg
jmp
outsb
adc
cli
dec
in
in
mov
shl
mov
aad
dec
cltd
iret
cmpsb
or
adc
nop
incb
ja
sbb
and
movsl
xor
sbb
popa
in
rcr
das
inc
mov
js
jge
xchg
mov
pushf
les
jb
sub
inc
push
mov
lds
out
test
mov
push
cltd
lods
ja
mov
addb
aaa
fildll
addr16
test
aaa
mov
push
lahf
inc
sbb
sti
test
or
data16
mov
iret
mov
out
out
ret
stos
lods
cld
mov
cmpsl
and
imul
addl
out
sar
popf
cmp
ret
test
data16
pop
mov
sub
mov
int
ret
cmp
cmc
xor
sbb
push
or
inc
lds
dec
sbb
and
sbb
push
cmp
out
out
stos
xor
nop
and
fwait
pop
insb
sub
cmp
cmp
sbb
hlt
into
aad
jg
jnp
mov
mov
out
das
xchg
lahf
fldl
sub
push
decl
sbb
outsl
jnp
cmovbe
xchg
fimull
mov
fcmovnbe
pop
js
xchg
cli
fisubl
out
or
mov
imul
adcl
enter
jbe
nop
jns
loop
in
and
stos
push
mov
imul
jge
pushf
push
push
sub
inc
and
into
mov
dec
and
hlt
imul
shrl
xor
sbb
or
jecxz
setg
xchg
rorl
sahf
cmp
jns
sub
xlat
mov
jae
xchg
out
jns
subb
pushf
lcall
jbe
movsl
dec
mov
or
sub
add
push
lret
xchg
scas
push
cmp
dec
adcl
mov
repz
xor
icebp
pop
enter
repz
cmp
shlb
xor
adc
push
inc
xchg
int3
adc
loopne
add
mov
repz
pusha
mov
mov
outsl
pop
xorb
in
xchg
mov
dec
or
cld
fwait
add
adc
dec
stc
sbb
sbb
mov
icebp
jb
and
stc
or
inc
mov
inc
or
push
ja
lcall
arpl
insl
pop
shr
sbb
push
cltd
insb
mov
popf
adc
add
enter
inc
fnstenv
jle
test
cmp
mov
mov
push
mov
les
outsb
popa
mov
push
and
sbb
dec
xor
rcrb
notl
cli
das
jno
repnz
icebp
ret
movsb
dec
fildll
arpl
sarb
pop
into
stos
cwtl
push
sbb
adc
je
inc
pop
dec
sub
add
sbb
cmpsl
xchg
dec
cs
mov
sub
push
mulb
xchg
imul
test
mov
fldenv
sbbl
add
lods
jmp
loopne
hlt
testl
imul
outsl
pop
pop
xchg
mov
testb
fdivrs
mov
lock
aad
xor
lahf
fnsave
adc
imul
mov
dec
cli
or
fwait
sbb
cmp
jecxz
add
adc
xor
lods
test
mov
out
je
push
add
inc
in
div
and
jmp
jmp
mov
mov
mov
sbb
je
mov
sbb
lds
mov
sbb
dec
adc
mov
lcall
push
shrb
jne
leave
push
mov
or
xchg
cld
adc
mov
popa
das
fwait
cmp
sub
and
test
sbb
adc
dec
xor
xchg
lock
pop
ret
inc
loopne
mov
cli
mov
cmc
das
testl
les
out
je
rorb
shl
xchg
bnd
cs
push
mov
fstpl
mov
mov
xor
lea
jno
cli
or
jg
popa
addr16
dec
pop
out
shlb
lods
push
enter
mov
rolb
pop
dec
mov
cmp
incl
adc
jb
jnp
pop
mov
or
rorl
jmp
loope
lea
xchg
shrl
cs
insl
push
rolb
jmp
outsb
lahf
mov
jmp
adc
pop
lea
sub
rcrl
std
xchg
pop
pusha
mov
push
sbb
pop
fwait
cmp
cmc
xor
loop
mov
es
add
test
vmresume
add
es
xlat
push
scas
xchg
fdivs
or
icebp
or
jno
fxch
and
pop
and
int3
nop
jecxz
sbb
mov
repz
out
lods
imull
lea
push
jnp
ja
ljmp
outsl
aam
lds
mov
sti
mov
inc
divl
fdivrl
xor
stos
sarl
lds
call
jle
add
dec
sbb
dec
sub
int3
mov
xor
lret
xchg
frstor
movsl
pop
push
or
out
fiadds
cmp
inc
testb
orl
xchg
adc
push
xchg
mov
je
shrb
ret
xor
and
mulb
mov
mov
and
pop
ljmp
repnz
enter
push
cmpsl
sahf
push
sbb
push
testl
cmp
xchg
invd
pusha
jg
push
cmp
lods
and
mov
out
jb
add
lds
inc
or
or
std
test
test
shlb
adc
jmp
push
inc
ds
aas
outsl
push
jns
imul
and
dec
jo
mov
lods
es
aaa
push
mov
jl
lcall
push
add
stc
lock
mov
xor
inc
addr16
dec
xlat
mov
jle
bnd
jp
repnz
inc
call
in
pop
mov
jno
jns
lea
cs
sahf
push
sti
and
sbb
or
mov
push
test
or
sbb
aam
inc
sbb
push
ljmp
mov
jne
sahf
fwait
mov
popa
mov
or
xchg
cmp
nop
cmp
insl
bound
xchg
sbb
pop
sub
into
inc
jl
dec
insl
mov
loopne
pop
pop
mov
arpl
adc
xchg
ret
fs
out
scas
iret
sbb
inc
nop
inc
and
mov
or
rorb
mov
cli
inc
test
or
mov
ljmp
push
pop
pushf
popl
jno
ja
push
inc
mov
xchg
cld
out
adc
mov
push
cwtl
cltd
in
xchg
in
jecxz
repz
push
cwtl
sub
mov
mov
iret
scas
mov
push
pop
adc
aas
scas
das
push
sbb
dec
cmp
xchg
xchg
orl
rep
mov
mov
push
xchg
out
imul
lret
aad
and
inc
shlb
js
cmpb
shrl
mov
addr16
push
jbe
mov
addr16
stc
ja
stos
push
mov
iret
inc
jge
xchg
or
cltd
mov
add
test
mov
pop
pop
in
fstl
xor
fdivrl
lret
inc
call
lret
rclb
mov
loopne
pop
jb
jecxz
adc
sub
xor
cmp
lahf
mov
int3
push
or
pop
pop
xlat
out
cmp
push
mov
outsb
pop
cltd
lods
sub
ss
cmp
and
pop
flds
cmp
fsubrl
addb
fcomi
pusha
cltd
add
daa
jmp
arpl
clc
jo
mov
push
scas
lds
xor
dec
push
lea
stos
fistps
push
mov
jbe
test
ficomps
stc
lods
or
jo
jb
mov
cmc
test
outsb
test
dec
adc
out
scas
ss
or
push
data16
lds
pop
outsb
pop
push
js
loop
cmpsl
xorb
pop
and
sbb
adc
mov
and
mov
int
adc
movsb
fs
jle
and
cmp
into
imul
push
outsb
add
pop
or
xchg
sti
out
fstl
ret
jp
xchg
arpl
arpl
pop
fs
faddp
std
test
stos
imul
xor
mov
push
pop
syscall
pop
cltd
aas
inc
pop
sub
mov
jmp
cmp
fistps
mov
icebp
mov
popl
cmc
setnp
cmc
inc
cmp
bound
lods
jg
jo
and
iret
test
sbb
add
loopne
inc
lock
test
mov
test
jg
out
ret
sti
mov
inc
adc
mov
cld
cs
jge
sub
rorb
cmpsl
sbb
adc
imul
xchg
dec
xadd
mov
sarb
cmp
adc
xlat
mov
push
sbb
out
das
sarl
pop
jo
mov
cltd
adc
sahf
cmc
lods
inc
pop
adc
loop
mov
insl
vphaddbq
int3
mov
adc
push
sub
push
cmp
sub
aad
push
in
mov
or
divb
outsb
stos
inc
shl
loop
bnd
mov
ja
jne
shl
enter
mov
mov
cmc
push
ret
std
sbbb
aad
fcompl
or
jns
mov
dec
dec
add
dec
enter
lahf
sbb
mov
xor
xor
fucomp
in
jecxz
test
cmpsb
mov
sub
pop
lret
jecxz
mov
je
sbb
cmpsb
jns
ss
pop
add
xchg
sahf
fildl
sub
jge
shr
sarb
mov
mov
jge
testb
out
mov
mov
inc
push
push
dec
pushf
push
adc
cmpsl
sub
jp
dec
cmp
adc
gs
push
std
test
gs
xor
mov
lahf
add
pop
stos
cmp
xchg
lods
test
stos
mov
out
pop
mov
jp
ja
addr16
xchg
in
or
outsb
sarl
insl
jo
sub
popf
pop
or
add
imul
lahf
pop
repz
adc
ja
adc
xchg
nop
ficomps
shlb
and
dec
push
repnz
leave
cmp
sbb
sbb
sub
push
imul
rcr
outsb
pusha
jae
or
jmp
mov
icebp
xor
lret
test
aaa
loope
or
push
adc
ljmp
ljmp
cmp
or
rorb
test
add
xlat
xor
jns
cmpsl
ja
movsb
leave
jno
mov
jns
or
popa
push
mov
mov
idiv
fsubrp
ds
sbb
mov
fmulp
lea
js
sub
mov
pop
add
jbe
arpl
es
pop
faddp
dec
xor
adc
mov
sti
outsw
cmc
xchg
outsb
icebp
pop
daa
int
adc
cli
pop
rclb
xchg
fisttpl
push
std
scas
dec
xchg
push
pop
jne
jne
pop
syscall
outsb
test
scas
mov
mov
ja
push
xchg
jnp
xchg
lret
mov
dec
fnstenv
dec
push
jg
jne
js
and
out
shlb
mov
or
and
mov
repz
jne
xchg
mov
lret
xchg
mov
pop
pop
lods
lods
cmc
push
inc
adc
mov
out
dec
push
aam
sub
nop
jg
test
push
fisttpll
test
cmp
xchg
adc
stos
loope
dec
cwtl
ds
xlat
scas
xchg
jo
cmp
jns
adc
imul
sbb
pop
aaa
mov
mov
iret
adc
scas
jae
test
jecxz
insl
popf
pop
jns
out
and
jbe
inc
push
push
inc
gs
fdivrl
stos
dec
adc
lahf
sti
iret
xor
lock
sub
mov
mov
testb
subb
cmp
push
in
lahf
inc
xor
fcoml
adc
jne
or
dec
mov
cmp
testb
out
movsb
sub
fsubrp
icebp
mov
aad
lret
stos
jmp
xchg
cmpsl
mull
mov
push
inc
dec
xchg
imulb
dec
fisubl
inc
xchg
cmpsl
insl
icebp
adc
out
push
sbb
mov
push
adc
int
add
and
xor
movups
add
repnz
ljmp
mov
scas
add
cmp
jne
mov
xor
loope
hlt
imul
mov
leave
mov
scas
adc
stos
xchg
ret
xchg
push
jg
cmp
push
cmpsb
and
mov
adc
xchg
lea
jbe
ret
inc
pop
std
int3
xchg
shll
iret
into
addl
adc
in
jmp
jns
add
inc
lcall
add
mov
inc
cmp
out
rclb
xor
fimull
cmp
enter
sub
ret
jle
mov
dec
lret
aas
add
loope
loope
mov
jae
jecxz
cs
add
cmp
gs
in
push
loopne
mov
sarl
pop
xchg
cmp
test
jo
mov
bound
daa
stos
add
into
out
push
xchg
pop
rorb
out
jle
popa
pop
enter
xchg
mov
fs
inc
jge
pop
mov
cmp
scas
pop
stc
lret
fs
pop
into
mov
out
daa
jp
fsub
pop
fbstp
rol
fisubrl
or
jge
xchg
xor
inc
sub
fcoml
fwait
sub
rcr
xor
jno
xor
xchg
rclb
mov
inc
sub
dec
cmp
cld
andb
adc
mov
pop
out
push
lcall
push
jge
jbe
in
or
jne
sub
xchg
push
mov
out
xor
clc
mov
icebp
cmpsb
sub
sbb
mov
sub
mov
cmpb
mov
int3
mov
jmp
inc
jl
fstpl
pop
sub
fstpt
inc
pop
mov
fst
xorl
fbstp
mov
cmp
dec
fdivs
or
mov
jecxz
jns
sar
mov
cmp
xchg
xchg
add
pusha
ds
stc
arpl
cmp
fs
loop
or
or
inc
jbe
mov
lock
jg
xor
pop
andb
cmp
std
popa
lret
shr
cmp
add
scas
cmpsl
nop
xor
mov
fdivrl
dec
or
push
sbb
iret
jo
xchg
pop
andl
mov
cli
ret
or
jne
dec
mov
cmp
xor
daa
mov
rolb
outsl
xchg
jo
push
adc
cmc
dec
push
pop
inc
xor
adc
sub
mov
cmpsl
push
pop
mulb
test
cmp
jge
jecxz
jecxz
mov
in
aad
mov
fsubl
jecxz
lods
adc
orl
fcoms
sub
pop
xor
scas
in
xchg
xchg
or
cmpsl
cmp
adc
in
loop
insb
fdivl
xor
adc
fisttps
jne
mov
and
mov
dec
shr
cmpsl
mov
loop
movsb
pop
test
nop
fcmove
pop
leave
cmp
lods
ss
cmp
xor
subl
faddl
lret
loopne
cmp
lds
lahf
jecxz
xchg
ret
push
mov
sub
inc
mov
mov
dec
sarl
mov
xor
xchg
mov
push
jbe
les
and
mov
cmp
xor
pop
ljmp
popf
sub
aaa
mov
mov
stos
int3
scas
nop
scas
pop
lock
sbb
jmp
push
add
adc
sub
jno
aad
cmp
loop
addl
repnz
test
sub
add
pop
cmp
lahf
jecxz
mov
or
int
add
rolb
sbb
sti
push
mov
clc
fidivs
popf
and
jne
push
dec
lock
xor
xorl
pop
je
and
mov
mov
repz
es
addl
push
lods
jae
aaa
mov
sub
fstl
mov
xchg
aas
push
subl
es
xchg
lahf
push
int
pop
push
mov
mov
push
ret
mov
jmp
inc
jns
xchg
lret
xchg
leave
sub
cwtl
imul
sub
je
pop
mov
addl
lret
jecxz
or
or
sub
loop
arpl
or
in
mov
out
movsl
push
jae
lcall
insl
test
push
ja
jne
xchg
in
push
xor
ret
jne
dec
add
inc
out
xor
lret
push
popa
cmp
mov
push
clc
es
jmp
xor
jl
push
xlat
push
mov
cwtl
scas
pushf
loope
cli
jb
mov
mov
or
out
lods
add
pusha
push
ret
push
aas
cmpsl
xchg
out
mov
pop
fwait
cmpsl
dec
arpl
adc
lods
inc
mov
mov
jne
ret
in
cmp
push
or
fs
pusha
push
leave
addr16
iret
adc
mov
out
inc
inc
xchg
mov
adc
daa
aam
stc
xrelease
mov
xor
pop
sbb
das
jns
test
jmp
xor
or
andb
inc
sub
push
fsub
mov
mov
jbe
jnp
cmp
test
or
imul
and
sbb
push
push
add
pop
out
pop
xor
inc
pusha
adc
pop
mov
lret
and
sti
inc
inc
dec
and
push
in
cmp
xlat
fwait
mov
xor
sub
cwtl
loopne
add
popa
xchg
push
pop
sub
sbb
jmp
rorl
pop
lret
orb
cld
dec
dec
cmp
daa
and
add
movsb
ljmp
jnp
lret
shlb
in
inc
js
mov
pop
in
loope
xchg
adc
iret
in
adc
push
dec
push
xor
mov
xchg
pushf
push
mov
mov
inc
cmc
lock
mov
mov
test
mov
add
mov
push
imul
adc
jecxz
cmpb
rorb
mov
arpl
addb
sub
xchg
cmp
sbb
or
jp
jle
int3
xchg
push
jb
lock
test
and
and
adc
cmp
mov
sbb
push
loopne
sbb
or
push
mov
ficomps
test
cli
stos
dec
xor
jmp
mov
outsl
repnz
cli
fcmovnu
mov
xchg
push
mov
mov
sub
out
out
cli
dec
cwtl
roll
mov
sbbb
sbb
mov
frstor
sub
fsubl
ret
std
clc
pushf
syscall
jecxz
stos
outsl
pop
xchg
jb
out
add
xor
jp
sbb
rclb
push
sbb
add
pop
cli
pusha
pusha
or
pop
into
mov
push
mov
dec
adc
inc
mov
bound
int3
je
dec
mov
pop
andl
inc
sbb
lock
adc
mov
and
std
fwait
leave
js
cli
lahf
sub
sbb
addr16
mov
fidivrl
mov
pushf
int3
mov
test
scas
xor
dec
cld
push
das
pushf
mov
mov
out
lea
clc
lds
mov
paddusb
inc
sbb
fldcw
ja
outsl
aam
repz
call
mov
out
mov
aaa
fscale
dec
cmc
pop
int3
mov
int3
cmp
aaa
xchg
lea
in
sbb
and
pop
int3
aad
fmuls
sbb
dec
sbb
pushf
je
xchg
shlb
pop
insb
dec
ss
sbb
sahf
pop
xchg
iret
movsl
mov
mov
aaa
mov
lret
scas
dec
jg,pt
fdivrl
cltd
push
gs
inc
jns
pop
sub
mov
bound
push
xor
sbb
test
test
xchg
mov
jo
cs
mov
cmp
ljmp
cmc
into
jns
ljmp
cs
and
ja
mov
rcrb
and
push
jle
aam
popa
jecxz
pop
cmpsl
je
pop
repnz
mov
push
jmp
push
out
loop
sbb
add
test
add
movsl
ljmp
push
addr16
out
mov
insl
lods
add
stos
lods
insl
fstpt
mov
add
cmp
out
int
dec
push
push
push
push
lea
data16
or
mov
xorl
rcl
adc
mov
add
or
and
icebp
jmp
mov
sub
arpl
mov
nop
sub
and
inc
sbb
add
mov
xchg
or
ljmp
data16
sbb
mov
clc
xchg
rcl
add
repnz
test
icebp
out
movsb
pop
inc
cmp
and
sub
jne
xlat
mov
adc
and
popf
call
inc
dec
or
mov
pop
jns
add
idivl
ja
xlat
add
or
int
shll
cld
imul
xchg
cmpsl
mov
sbb
mov
xor
test
pushf
pusha
mov
jne
outsl
push
xchg
cld
in
jle
inc
imul
out
stos
addb
imul
jne
jnp
inc
das
jp
and
jl
xor
pop
sub
cmpsl
mov
cmp
rorl
mov
testl
subb
je
ds
add
mov
leave
nop
sti
pop
in
jmp
adc
out
outsl
cmp
sti
sub
je
fisubrs
lret
in
cmpsl
pop
sub
es
push
test
and
xchg
dec
jne
clc
es
inc
stc
inc
lcall
push
loopne
inc
pop
add
or
nop
rcll
mov
add
jnp
sub
sub
fwait
out
icebp
xor
xlat
out
es
xchg
mov
rclb
insl
adc
scas
cmp
mov
aad
enter
add
es
scas
andb
test
add
stos
or
xor
sbb
pop
das
ja
inc
or
mov
xlat
outsb
rorl
imull
arpl
aad
push
and
jg
rcrl
cmp
imul
int
rcrl
pop
insb
bound
rcr
rorl
adc
sahf
test
push
cmpsl
push
sub
test
inc
push
out
mov
fstps
mov
ljmp
mov
mov
adc
sahf
call
rclb
mov
jo
es
sti
cmpsl
and
shrb
add
inc
sub
fs
test
sbb
sub
stos
jge
cmp
pop
xlat
mov
mov
sub
sbb
mov
cmp
into
leave
int
sbb
dec
add
ja
pusha
cltd
sub
xchg
arpl
movsb
jne
leave
ret
push
pop
pop
psrld
outsl
loope
popf
iret
xchg
jge
xor
adc
lcall
mov
mov
adc
add
lods
jne
fldl
jp
bound
cmpsb
jge
inc
jbe
jo
clc
push
xchg
icebp
rolb
cmp
pusha
add
rorl
xlat
shll
shll
stc
loopne
test
aaa
mov
leave
pop
loopne
sbb
xor
push
lahf
fnstsw
sar
mov
ljmp
subl
sbb
add
inc
jnp
stos
add
aaa
ja
adc
jnp
inc
into
dec
xchg
in
scas
sahf
inc
fadd
aaa
mov
cld
pop
or
sbb
popf
jle
ret
adc
lcall
xchg
or
add
inc
out
jb
mov
pop
in
mov
in
adc
sbbb
outsl
repnz
pop
add
and
mov
es
mov
sbb
xchg
addr16
in
dec
or
dec
xchg
jbe
push
inc
pop
stos
push
fwait
ja
ja
outsb
cltd
cmpsl
mov
scas
jmp
lea
push
jo
mov
sub
dec
mov
addr16
jb
and
push
inc
or
xor
ja
shr
pusha
mov
mov
in
das
shrl
xchg
stos
jmp
rolb
lods
push
and
sti
pop
or
popf
mov
push
xorl
inc
pop
int
jne
arpl
jge
mov
mov
ds
pusha
push
dec
jl
xor
pop
fisttpll
std
pop
mov
sbb
lret
jno
xchg
cmc
negb
fisubs
push
lahf
add
push
ja
pop
seto
fildll
in
pushf
daa
int
xor
inc
rcrb
fcmovbe
push
scas
pop
loope
xchg
loopne
mov
mov
rcrb
mov
inc
cmp
adc
sub
iret
fsts
fs
adc
call
shlb
lret
add
idivl
jo
pushf
mov
aam
orb
sub
stc
xor
inc
les
xchg
cmp
fisttpl
mov
out
xor
inc
mov
jmp
inc
jno
mov
dec
addr16
cmp
push
pusha
lcall
orl
cmpsl
sbb
out
jnp
je
das
addr16
adc
es
fadds
xor
adc
sub
inc
in
sbbb
add
les
cltd
mov
mov
shrl
ret
fstp
arpl
cwtl
and
and
mov
push
push
push
jo
mov
lcall
sbbl
leave
jns
cwtl
xchg
push
repnz
xor
push
or
and
and
pop
and
incl
shl
pop
rcll
movsl
pop
rcll
inc
orb
jns
ret
nop
imul
frstpm(287
and
lods
push
test
stc
dec
push
xor
rcrb
dec
push
adc
pop
mov
movsl
stos
stos
cld
aaa
and
mov
or
or
js
cmpsb
adc
mov
ss
adc
shl
dec
adc
add
negb
push
andl
sbb
mov
jne
xchg
adc
xchg
ja
addr16
les
fdivrl
pop
lock
ja
cs
lock
sub
pop
popa
call
cmpsb
adc
loop
mov
xchg
orl
add
add
or
movsl
inc
push
jp
xor
in
inc
popf
mov
test
adc
inc
add
push
sbb
mov
pop
adc
sbb
xchg
inc
leave
dec
jnp
xlat
pop
xor
jbe
pop
and
push
ljmp
outsl
mov
enter
leavew
or
test
int
mov
in
cmp
and
sarb
add
std
sbb
push
aad
movsl
clc
push
movsb
daa
or
out
stos
lods
sub
leave
lret
scas
jns
fstl
pop
adc
cltd
jae
iret
fwait
or
out
xchg
ljmp
dec
stc
aam
sub
mov
mov
mov
pop
mov
stc
add
pusha
loopne
test
inc
xor
cmp
adc
sub
push
mov
xchg
jne
inc
loop
mov
addr16
sbb
lods
xlat
add
popa
cltd
push
and
out
sahf
lock
inc
stos
sub
dec
aas
in
js
mov
sbb
mov
test
mov
cmc
loopne
stc
inc
mov
shlb
sub
fmulp
test
cmp
mov
daa
rcll
bound
add
sbb
popl
push
sbb
lock
out
push
jmp
jmp
imul
ss
jo
pop
clc
push
mov
push
adc
mov
pop
mov
pop
cmpsl
inc
gs
or
xorb
xorps
sti
mov
sub
sub
inc
shll
jmp
fsubrs
pop
push
fisubrs
test
or
es
xchg
clc
out
sbb
or
test
pop
iret
frstor
mov
out
imul
lret
mov
mov
adc
scas
jns
push
pop
fs
lods
sbb
push
aad
jge
movsl
cltd
outsl
inc
dec
jmp
insb
mov
lods
cmpsl
push
jmp
pop
jns
and
and
cmp
mov
jecxz
dec
jno
cmp
and
andl
pop
adc
addr16
jo
repnz
lds
sbb
cmp
fadd
dec
xchg
and
lea
test
push
jl
or
stc
leave
insl
shll
dec
je
mov
pop
xor
mov
pop
jle
repnz
in
mov
pushf
std
xor
jmp
repnz
aad
fildll
push
arpl
pop
push
test
test
shl
cmp
mov
incb
enter
push
imul
jmp
dec
fdiv
ljmp
push
rorl
xlat
lret
repnz
jae
ret
mov
xor
mov
ss
mov
xor
cwtl
test
mov
and
sbb
fst
icebp
inc
jecxz
fidivs
std
inc
or
fldcw
add
jl
imul
jmp
hlt
dec
fiadds
icebp
ds
test
pop
lock
mov
gs
js
sub
mov
in
and
sbb
xorl
sbb
cltd
lock
mov
push
cmpsb
add
and
mov
rorb
xchg
cmpsb
mov
lods
loop
mov
xchg
jl
add
mov
es
fdivrl
stc
ss
mov
cwtl
aam
xor
out
add
out
add
and
xchg
shlb
mov
mov
jnp
sarb
sub
xchg
daa
or
mov
xchg
daa
xlat
sbb
and
add
xchg
cmp
pop
and
adc
lret
add
xchg
sub
push
jae
je
sbbb
pop
es
adc
jno
pusha
loopne
mov
shrl
iret
pop
and
test
lods
pop
sarl
loopne
mov
loope
popf
fsubrs
xchg
lcall
pop
sub
sbb
fwait
sbb
fcmove
push
inc
lock
sti
jecxz
cwtl
stos
adc
mov
nop
lock
div
jo
enter
pop
or
add
jge
in
push
xlat
mov
shr
xadd
and
testb
xchg
aaa
mov
fs
addr16
dec
test
out
cmp
xor
mov
fcoml
mov
sub
ss
push
jmp
ret
pop
lods
mov
xchg
mov
push
xchg
rclb
push
xor
push
aad
dec
or
mov
or
dec
es
decl
leave
add
out
jns
cmp
lret
movsb
je
aas
push
decb
pop
cmpsb
cwtl
imul
or
aad
cmp
push
pop
xchg
jmp
fldt
xlat
dec
xchg
cmpsb
xchg
push
inc
mov
or
lret
jo
push
cmp
lds
or
iret
jo
int3
cmpsl
xchg
jp
push
inc
jge
stos
filds
mov
mov
jne
jecxz
pop
and
sub
aam
test
pop
inc
stos
dec
mov
add
mov
test
pushf
jle
test
sbb
in
push
test
jp
mov
mov
clc
jle
out
xor
arpl
or
jno
movsb
adc
adc
stos
or
pusha
imul
ss
and
sub
aas
pop
cwtl
dec
push
cmpl
lock
rcrb
or
scas
pop
imul
bswap
ret
adc
or
jp
push
adc
and
bswap
dec
repz
add
mov
mov
push
mov
cwtl
cltd
fisubl
jae
sahf
pop
jge
ret
aas
mov
or
push
imull
stc
mov
dec
in
lcall
dec
sbb
mov
push
push
pop
jmp
and
xor
movsl
pop
jo
mov
test
fisubrl
test
loop
daa
into
push
notb
movsl
repz
pop
sub
ja
dec
sahf
movsb
dec
push
xchg
xchg
inc
jmp
sahf
sahf
sub
mov
lods
loop
push
aas
out
mov
push
pop
mov
fisubl
mov
pop
popa
cwtl
loop
sbb
cmp
out
sub
mov
mov
mov
jbe
mov
mov
out
cmp
test
mov
rcl
out
mov
cld
scas
push
xchg
outsb
jg
pop
cmp
xchg
cld
jne
or
add
and
mov
rcrb
jo
cs
aaa
out
loope
aam
push
xchg
loope
insb
lods
and
das
sti
in
pop
and
push
faddp
aam
cmpb
jp
inc
sbb
mov
and
in
xchg
mov
das
xchg
aam
fcoml
push
es
inc
fmul
cmp
stos
arpl
jbe
sub
adc
aas
add
cwtl
subb
pop
addr16
mov
inc
sub
xchg
into
dec
cli
adc
inc
rcr
mov
fs
popa
inc
xor
xchg
lahf
mov
adc
inc
enter
cmp
in
jbe
std
push
and
repnz
push
mov
loop
aam
dec
leave
scas
loop
or
sub
in
dec
stos
test
lea
mov
lock
mov
inc
int
pop
mov
pop
aaa
pop
in
clc
add
dec
xchg
mull
jno
xchg
jecxz
dec
ja
loopne
or
loopne
add
mov
cs
push
dec
push
fldl
dec
outsl
cmp
cmc
add
pop
out
xchg
adcl
or
sub
push
xor
xor
fs
pop
inc
je
push
and
cli
jle
movsb
fs
and
into
add
pop
add
push
cmp
push
test
iret
mov
in
ret
in
jp
pop
lds
sbb
push
push
mov
jmp
test
mov
ds
push
rcrb
mov
rclb
sarb
xor
out
shr
and
mov
andb
repnz
shrl
xchg
scas
xor
insl
xor
gs
sub
leave
aas
sub
inc
or
and
add
outsb
xor
in
adc
mov
aad
add
xchg
mov
xor
add
xchg
mov
fimuls
dec
mov
inc
das
xor
lcall
lods
add
mov
dec
pop
lea
xchg
sbb
out
jl
adc
out
ds
mov
and
sti
test
push
dec
adc
stos
jnp
inc
pusha
adc
fiadds
xchg
push
dec
pop
push
pop
cmp
mov
lods
out
push
popf
bound
push
cmpsl
xor
mov
movsb
xchg
mov
xor
add
push
mov
movsl
fbstp
sub
or
movsb
cmpsl
out
movsb
mov
lcall
and
sbb
repz
dec
pop
lods
pop
rcr
adcl
arpl
adc
popl
out
or
imul
mov
cli
pop
mov
pushf
mov
pop
add
push
add
mov
mov
ljmp
sbb
dec
or
inc
fsub
rcll
fcomps
jns
into
jno
jmp
fistl
fimull
imul
xchg
jnp
mov
dec
icebp
fildl
sub
push
jg
clc
sub
std
fidivs
mov
mov
sub
jmp
xor
mov
adc
xor
xchg
stc
xchg
mov
xor
jo
push
adc
lock
jo
ffreep
mov
pop
xor
lret
lds
mov
cmp
inc
leave
cmc
sub
xchg
add
imulb
push
shlb
add
cld
dec
or
inc
xchg
aaa
out
mov
leave
inc
cli
scas
lods
subl
dec
mov
jmp
dec
jge
mov
push
dec
mov
sub
or
xlat
fwait
test
cmc
mov
imul
xchg
outsb
sbb
inc
jmp
mov
cmp
or
push
add
or
outsb
sarl
fs
cltd
cli
int3
mov
scas
aad
repnz
push
jp
mov
mov
mov
dec
sarl
repz
and
cwtl
js
hlt
xor
inc
in
fcomip
mov
cs
push
cmp
and
jno
cld
jecxz
lahf
sub
push
inc
dec
jns
mov
lret
arpl
hlt
fistps
and
aad
int3
jnp
inc
adc
dec
pusha
and
ja
push
pop
xchg
sbb
test
inc
loop
pop
jle
and
out
xchg
cmc
aam
clc
nop
ret
mov
pop
adc
aam
pop
sbb
pop
jae
adc
lahf
daa
in
mov
dec
in
add
shlb
addr16
or
out
lds
xchg
mov
xchg
ljmp
push
mov
fimuls
mov
aaa
adc
mov
adc
std
pop
ficomps
xchg
bound
imull
adc
int3
pop
push
push
mov
adc
fnstenv
div
imul
push
into
out
and
mov
sub
add
or
mov
mov
dec
mov
aad
outsb
rcr
mov
pushf
jbe
subb
push
cmp
lods
sarb
in
inc
outsl
or
rcrl
pop
popf
jne
aam
dec
pop
jle
mov
ljmp
outsb
daa
dec
pop
stos
cmpsl
pop
and
jmp
and
or
sar
iret
sub
adc
jb
aaa
inc
test
orl
scas
mov
rcrb
adc
rclb
neg
adc
mov
jmp
in
xchg
xchg
cwtl
iret
jae
xor
lret
pop
dec
data16
fs
lcall
jle
xchg
adc
jae
dec
cmp
add
inc
gs
loop
push
xorb
rorl
mov
mov
xchg
jmp
movb
lods
in
aaa
or
xor
test
jne
xor
iret
sbb
popf
inc
or
jecxz
adc
movsl
xchg
cmc
mov
sbb
sahf
push
out
or
cmp
dec
aam
rolb
or
cmpsl
mov
and
push
scas
xor
aas
add
sbb
shll
in
adc
int3
in
dec
flds
pushl
stos
lret
aam
mov
pushf
jmp
push
imul
inc
aad
mov
in
and
loope
add
mov
ret
subl
xchg
les
mov
push
repz
xor
ret
daa
push
mov
mov
loop
push
or
pop
push
imul
test
push
and
pop
mov
fcmovu
dec
pushf
push
sti
jle
cmc
lods
push
inc
or
ljmp
test
jo
cmpsl
sarb
fcmovnu
ret
stos
fsubr
mov
push
outsl
inc
pusha
sub
in
push
inc
xchg
dec
inc
paddsb
and
fidivs
inc
stos
add
lods
sbb
or
int
adc
adc
jno
xor
push
std
loop,pt
push
fwait
xlat
jle
and
out
out
loope
int
sub
xor
stc
dec
xchg
sbb
pop
mov
and
roll
push
mov
xlat
js
inc
mov
call
mov
mov
arpl
es
in
sub
mov
xorb
ficoml
cmp
scas
push
sub
repz
adc
mov
xorl
add
iret
pop
mov
mov
jns
sub
sbb
or
rolb
cli
inc
adc
dec
push
push
clc
aad
aaa
pop
test
pop
push
cli
inc
dec
ja
mov
fldenv
fadds
push
std
or
jo
fiaddl
mov
inc
sbb
mov
xor
jmp
mov
ljmp
loope
fstps
xchg
cmp
pop
fldl
xor
cwtl
mov
lahf
test
fdiv
js
fwait
add
dec
inc
jp
sub
mov
mov
mov
js
xlat
cmp
pusha
out
mov
aas
enter
jns
xchg
adc
dec
mov
or
and
and
aaa
aam
push
inc
ss
out
scas
pop
out
movl
pop
push
and
xchg
daa
in
lahf
cmp
pop
mov
add
call
push
mov
sub
sbb
push
or
push
mov
push
cmp
jge
xor
ss
add
test
dec
loop
adc
sbb
pmulhw
pop
clc
insl
inc
cli
std
cmp
inc
inc
push
in
movsb
inc
xchg
or
shlb
int3
jp
hlt
add
vaddsubps
leave
fs
add
and
jp
out
mov
adc
sub
clc
sbb
aad
aad
ljmp
lods
mov
daa
dec
fucom
scas
stos
les
out
xor
shl
out
mov
ss
jne
adc
cmpb
testl
dec
push
jmp
mov
int
dec
mov
ficompl
push
pop
lods
and
fisubrs
push
cs
ret
dec
inc
sti
cs
cmp
ss
pop
xchg
repnz
cs
sbb
jae
mov
mov
int3
sbb
shl
pop
and
or
push
outsl
cmpsb
add
test
aas
cmpsl
mov
push
fstl
xchg
dec
push
fwait
xchg
or
cmpsb
sbb
aam
inc
adcl
adc
pop
icebp
rcll
xor
pop
cs
rep
lock
push
mov
lds
mov
or
add
xlat
cli
ret
shll
lahf
pop
xor
push
jl
cmp
lret
inc
mov
sbb
and
ljmp
xchg
daa
push
ljmp
ja
mov
cmpsb
mov
enter
cmp
cmp
mov
pop
outsl
loopne
jb
dec
lret
mov
sub
inc
push
test
loope
or
sbb
cmp
sub
add
test
xor
and
dec
movsb
or
mov
push
lret
out
int3
ror
ds
sbb
push
imul
outsl
and
sbb
repnz
mov
mov
in
ror
sbb
pop
cmpb
stos
mov
adc
xchg
hlt
xchg
mov
and
lods
out
xor
leave
pop
xchg
dec
adc
lcall
push
icebp
shrl
and
fbld
sbb
arpl
mov
movsl
jecxz
xchg
lock
nop
cli
mov
inc
cs
add
sub
mov
fwait
lret
sbb
lcall
mov
inc
xchg
and
push
js
test
fs
xor
fs
leave
movsb
int
iret
clc
ja
pop
int3
jno,pn
lods
and
or
push
and
fadds
dec
mov
cltd
jns
push
js
jnp
and
push
mov
and
test
and
dec
into
pop
cmp
pusha
rol
loop
outsl
push
jmp
leave
loope
add
xchg
pop
repnz
xlat
push
aaa
loopne
xchg
mov
or
sbb
xchg
mov
jnp
xchg
mov
and
sbb
imul
jae
jp
faddl
addr16
xor
mov
repnz
jecxz
inc
loopne
add
xor
xor
inc
xor
fbstp
movsl
aaa
push
xchg
xchg
pop
scas
lea
jecxz
std
fstl
jecxz
dec
push
out
loope
rorl
or
icebp
pop
pop
out
ret
out
loope
mov
data16
repnz
inc
mov
and
inc
pop
jb
and
adc
xor
mov
jne
mov
mov
push
mov
jle
mov
add
aas
mov
ret
icebp
sbb
or
mov
and
inc
jae
pop
add
hlt
push
gs
insb
inc
lods
sbb
repz
inc
sbb
xor
dec
jae
cs
jbe
pop
xor
int3
add
cmp
idiv
jmp
sti
lret
pop
jl
sbb
push
sub
imul
push
arpl
jecxz
add
scas
in
jl
lea
loope
je
cmp
inc
nop
push
rolb
jge
addl
popf
aas
inc
test
xor
call
mov
out
nop
test
mov
mov
adc
mov
or
js
incl
jne
xor
outsl
xchg
mov
outsb
addr16
sub
add
mov
xor
dec
pop
cltd
outsb
aam
bound
out
scas
lds
mov
pop
adc
inc
xlat
cmp
scas
lods
lods
xchg
insb
ds
dec
or
outsb
shrl
popa
clc
sub
jnp
mov
daa
sub
dec
push
xor
mov
and
cmpsl
sbb
jb,pn
int
fstpt
sbb
test
inc
cmc
jge
xchg
and
mov
insb
adc
notb
mov
jne
aaa
jl
mov
in
fs
rorl
adc
adc
push
scas
sbb
dec
pop
xchg
mov
sar
repz
popa
mov
jle
pop
fsubrl
mov
filds
sbb
lcall
lret
adc
mov
pop
dec
xor
lret
stos
cmp
or
sub
adc
xchg
inc
add
dec
mov
jecxz
das
clc
cmpsb
mov
test
cmpl
outsl
sub
and
cli
mov
adc
push
std
test
stos
addr16
xor
into
ret
arpl
sbb
testb
sub
push
inc
mov
or
idivb
imul
daa
add
lock
xchg
nop
cmpsl
shlb
popf
int
pop
or
or
mov
test
and
sub
rol
adc
pop
cmpsl
dec
sbb
xchg
popa
sub
inc
fstp
sub
xor
pop
sarl
hlt
ljmp
repz
pop
adc
jge
mov
lret
fdivs
je
sub
sub
inc
pushf
jne
xchg
mov
inc
and
jge
and
or
hlt
pop
dec
dec
jno
sbb
lods
daa
nop
test
or
dec
inc
sbb
gs
xlat
push
sbb
rcll
xchg
xor
lock
xchg
xor
hlt
add
sbb
inc
test
mov
shrl
xchg
cmp
adc
jg
jbe
std
xchg
cmp
bound
jmp
jns
jnp
out
cmc
push
out
fmull
mov
jg
adc
cmpl
add
gs
sbb
sbb
icebp
paddusw
mov
sub
fdivrs
cs
cmp
adc
push
mov
xor
jg
stc
cltd
loopne
shrl
cmp
insl
adc
out
cmp
loope
shll
rcll
arpl
mov
nop
mov
cmpsb
sbb
mov
mov
xor
incl
mov
ja
adc
pop
mov
adc
rol
add
xchg
dec
push
mov
mov
xorl
inc
pop
ret
inc
pop
inc
inc
imul
push
jge
fldl
mov
movb
add
dec
adc
pop
daa
or
xor
cwtl
sub
xor
js
jo
test
repz
testl
es
popf
xchg
cmp
out
mov
mov
jmp
test
mov
and
es
in
test
mov
in
mov
jmp
jb
mov
xchg
jns
push
addr16
loope
lea
lock
out
fimull
daa
mov
mov
mov
cmp
shlb
jno
add
arpl
test
push
jbe
xchg
xchg
sub
movsb
iret
xor
adc
out
push
ljmp
mov
sbb
mov
sbb
into
push
and
popf
inc
or
shll
xor
mov
adc
adc
add
andb
push
mov
mov
mov
loope
in
out
outsb
xchg
dec
mov
mov
or
push
fdivs
mov
jg
popa
sbb
subb
mov
sbb
push
loopne
rorl
adc
ficompl
pop
push
loop
mov
in
mov
push
xor
out
pop
xor
shll
or
push
jne
lods
xchg
loope
int3
in
test
push
mov
lcall
lcall
cmc
cmpsb
sti
mov
into
scas
pop
inc
jle
and
ss
hlt
rorl
int3
xor
xorb
sbbl
std
icebp
dec
jns
jb
xchg
pushf
adc
mov
mov
daa
sbb
dec
mov
xchg
pop
mov
ljmp
sbb
loopne
call
mov
int3
jb
jno
or
mov
cli
in
dec
ficoms
repz
jns
out
xor
mov
mov
aad
out
popa
adc
sub
ret
pop
mov
cwtl
pop
out
lahf
dec
in
test
cmpsb
fistpll
mov
jo
sub
xchg
add
inc
aam
ja
push
cli
mov
pop
xor
pop
mov
inc
cltd
sub
cmc
out
test
or
hlt
rcrb
pop
ret
adc
rorb
enter
cmpsl
loop
push
pop
mov
jmp
rep
jno
adc
call
inc
ds
std
lret
ja
xchg
ror
jp
shl
sbb
push
mov
xchg
lret
icebp
or
ja
popl
nop
mov
adc
add
aam
push
hlt
sbb
pop
roll
and
xchg
jmp
jae
mov
mov
jne
aas
scas
mov
mov
movsl
jnp
dec
insl
fisubl
push
inc
sub
stc
cld
pop
ret
cmp
pop
jbe
jns
xor
jae
cmc
inc
pushf
dec
in
jns
fs
mov
fwait
mov
pop
mov
fistps
andl
mov
int
pop
cld
fldt
mov
aam
dec
loope
push
sbbl
xlat
pop
cmp
push
pop
shrl
ret
test
mov
ret
xchg
movsb
in
mov
mov
std
in
test
and
fcompl
xor
push
dec
jecxz
mov
popa
loop
cmp
mov
fidivs
cmpsb
jns
cwtl
push
stos
mov
addr16
arpl
aad
daa
ret
push
nop
cmp
cmp
jbe
rcl
std
adc
sahf
and
mov
jmp
adc
sub
je
dec
ja
test
xor
inc
out
mov
push
and
sbb
pop
mov
insb
xchg
and
je
cmp
enter
clc
cmp
sbb
cmc
data16
add
sahf
lahf
andb
sub
dec
jmp
es
mov
xchg
push
outsl
pop
ss
cmp
inc
mov
pop
pop
mov
shll
std
daa
cmp
xchg
and
jne
push
js
mov
dec
adc
ret
dec
mov
iret
mov
xchg
fs
ss
cmpsb
and
jg
add
jne
leave
cmp
pop
mov
outsb
xorb
push
enter
ljmp
dec
jne
jbe
mov
sarb
fidivl
xor
or
jae
xor
nop
imul
pop
cmc
sub
outsb
test
sub
jno
inc
leave
push
jp
push
sbb
add
sbb
lods
incb
test
aam
push
mov
adcl
test
adcb
jne
pop
or
movsb
jno
add
xchg
push
jge
mov
sub
add
sbb
and
enter
xchg
adcl
dec
mov
inc
mov
lds
es
pop
mov
clc
adc
mov
mov
jns
mov
push
mov
push
lret
or
shl
cmp
mov
std
xor
xchg
and
xor
in
adc
jg
pop
dec
fnstsw
push
lret
rcll
push
decb
ljmp
movsl
jns
shll
adcl
mov
test
xlat
stc
push
enter
stos
movsl
mov
jno
jmp
adc
fldl
jmp
sub
aad
lods
addl
pushf
jg
lea
fdivl
std
sti
sbb
lds
jbe
loop
xor
scas
jmp
jbe
add
fidivrl
jae
call
movsb
sahf
push
or
xlat
or
cmc
cmp
pop
add
cmp
xchg
push
ss
push
jp
pop
sarl
shll
jg
jle
dec
push
push
lea
inc
into
jmp
push
push
push
fcomi
loope
adc
push
push
add
mov
mov
jo
xlat
add
test
scas
sbb
pop
pop
test
subb
jl
int
pop
cmp
sub
gs
test
stos
push
dec
cltd
es
or
mov
into
jns
fimull
int
mov
mov
or
lods
in
push
mov
or
push
xor
leave
outsl
or
xchg
cmp
mov
pop
push
out
sbb
add
mov
daa
push
shll
ljmp
addr16
sbbb
out
lock
fisubs
lcall
sub
dec
insl
sbb
xor
movsb
jne
dec
push
pop
pop
pop
nop
inc
mov
test
int3
fwait
scas
and
cmp
ds
lock
outsb
mov
loopne
xor
orl
add
add
fdivrl
xor
inc
jmp
adc
push
push
dec
popa
xor
js
test
or
mov
mov
push
test
fcomps
fisttpll
lock
enter
cmpsl
inc
bound
or
cmp
popa
arpl
movsl
sbb
sbbb
push
cmpsb
push
pop
pop
in
movsb
push
mov
or
inc
rorb
push
mov
loop
bound
cld
xchg
pushf
shrl
clc
imul
or
push
sub
lret
sahf
xchg
shlb
test
das
mov
in
sbb
cmpsl
push
aaa
std
dec
mov
mov
ret
mov
mov
fwait
and
bound
jg
cmp
rcrb
and
shll
mov
mov
mov
mov
lods
gs
add
pop
jb
in
lods
mov
push
inc
aaa
pop
mov
add
cmp
mov
pop
jae
icebp
in
dec
cmp
mov
inc
jle
stos
pop
dec
je
jg
adc
int
jo
lods
xchg
mov
inc
lcall
add
inc
xchg
and
dec
andb
or
pop
mov
out
sub
pusha
sbb
imul
cs
test
imul
in
sbb
add
add
dec
xchg
fisubrl
mov
sub
repz
into
mov
inc
mov
vpcmpgtb
xor
xchg
push
dec
aad
jecxz
aad
adcb
add
push
cs
std
dec
lods
in
jbe
cli
mov
shrl
inc
cltd
xor
inc
mov
fcomip
cmp
xor
ss
addr16
lahf
scas
pop
enter
xor
adc
imul
cmp
pop
int
add
adc
orl
pushf
pop
mov
lret
int
shl
xchg
mov
cs
repz
xchg
jnp
mov
push
fstps
pop
les
cld
adc
sbb
mov
sarb
pop
fst
sub
aad
sbb
adcb
lcall
xchg
popl
add
xchg
push
rcrb
adc
sti
xlat
or
push
dec
mov
in
aam
push
add
push
mov
push
pop
popf
pop
sbb
dec
mov
std
sahf
xchg
sahf
rcr
xchg
pop
adc
jbe
out
mov
adc
or
stos
je
lret
inc
dec
cs
mov
jg
jge
jbe
pushf
add
out
jns
stos
inc
jo
push
scas
mov
mov
push
es
nop
mov
dec
mov
clc
lock
mov
cld
aaa
aaa
outsl
int3
inc
in
add
pop
in
xor
test
mov
sbb
jnp
aad
push
and
inc
or
jg
xlat
and
sbb
fs
nop
inc
or
mul
sub
sbb
push
lods
outsb
or
fisttpl
ret
jae
ret
int3
push
daa
cmpsl
and
mov
insb
in
sub
scas
and
mov
mov
dec
fiaddl
lret
js
fs
ds
mov
pop
push
sti
xor
jecxz
out
nop
sub
mov
xor
push
adc
pop
mov
int
and
inc
insl
aad
enter
arpl
cmc
xor
mov
jbe
rolb
push
addr16
pop
cwtl
mov
jge
jbe
push
dec
push
bound
xlat
mov
push
rcrb
jno
in
sbb
mov
cmpl
js
rcll
lods
aaa
and
sbb
jecxz
mov
fdivs
out
cmp
pop
jae
fs
je
ja
xchg
add
test
ficomps
sti
daa
mov
lahf
add
dec
push
jbe
adc
cwtl
in
xor
mulb
mov
mov
xorl
aam
xor
inc
pop
orb
push
int
loope
push
aaa
xchg
cmc
xor
vpsubb
and
push
jge
lods
pop
jae
xlat
scas
push
adc
dec
imul
or
xchg
fldl
out
mov
jmp
mov
pop
rcr
data16
outsb
loopne
push
jae
xor
xor
pop
pop
sbb
add
mov
inc
test
dec
sbb
in
push
add
pop
xor
mov
mov
xor
jne
and
scas
orb
mov
xor
and
xorl
jb
cld
add
daa
sbb
mov
mov
xchg
sub
rclb
pandn
pop
jnp
stos
aam
jns
and
jbe
aam
jb
inc
dec
push
loop
inc
push
insb
sub
mov
inc
or
dec
shl
pop
jne
dec
cmp
mov
mov
sbb
imul
fnsave
add
test
sarb
loopne
repz
jmp
jge
insb
pop
jmp
dec
push
imul
gs
mov
popa
sub
fsub
cmpsb
xor
jbe
jge
mov
in
cmpsl
fnsave
xchg
add
jecxz
mov
or
adc
jge
xchg
mov
mov
sub
leave
imul
jge
mov
adc
mov
sub
out
jle
inc
push
repz
or
mov
push
dec
mov
fcoms
push
jbe
aaa
les
mov
daa
test
sahf
inc
fs
jge
pop
xchg
dec
std
mov
es
push
mov
ljmp
mov
loope
nop
jbe
jl
lahf
pop
aad
mov
adc
or
mov
rolb
mov
add
andl
out
lds
lahf
mov
mull
add
pop
jno
js
cmp
sbb
xchg
lea
jbe
cmp
sti
push
sub
jge
xchg
xchg
mov
clc
push
adc
add
cmpsb
bnd
pop
or
mov
cmp
sahf
leave
es
lds
or
iret
inc
jge
stos
add
movsb
lds
pop
lods
cmpsl
cwtl
imul
xlat
mov
add
cmp
sub
cs
int
push
movsb
jg
jmp
aaa
pusha
lret
inc
daa
dec
mov
out
sub
jl
or
and
push
lcall
rorl
bound
hlt
mov
or
test
cmpsb
mov
xor
aad
leave
xchg
push
jo
sbb
lret
fwait
in
int
test
stos
mov
pusha
or
jge
push
mov
scas
add
roll
daa
jmp
pop
pop
xchg
scas
pop
push
pop
cmc
test
xchg
mov
iret
cld
sbb
imul
jle
clc
pop
add
in
addl
and
mov
push
inc
adc
dec
sub
pop
push
imul
movsb
jb
out
test
repnz
jns
mov
test
jno
push
add
mov
mov
notb
and
fs
test
mov
scas
stos
push
into
mov
dec
push
adc
pop
je
pop
jmp
mov
out
and
fimull
pop
sti
dec
scas
mov
lock
jg
inc
movsb
add
gs
inc
jle
or
adc
pop
dec
loope
mov
inc
mov
in
shll
in
and
adc
inc
testb
push
bound
fs
js
movsb
sub
xor
xor
ss
push
test
cli
add
jmp
dec
jns
bound
sbb
fidivrs
test
negb
mov
jnp
aam
jae
pop
and
rorb
or
cmp
repz
and
call
cli
mov
sar
cld
icebp
adc
into
cli
gs
into
sub
mov
dec
fs
cli
arpl
xchg
shlb
popf
cltd
nop
xchg
mov
and
loopne
stos
xchg
jle
nop
add
bound
push
cmp
sub
push
jnp
pop
hlt
rclb
data16
xlat
jo
stc
mov
dec
mov
bnd
mov
gs
jge
or
pop
in
push
aaa
xor
pop
cmp
mov
repz
inc
mov
sbbl
sub
cmpsl
xor
inc
call
ljmp
sub
pop
jp
ds
call
or
inc
out
fldenv
je
fdivrs
fs
lcall
in
jp
sbbb
inc
pop
enter
mov
cmpl
test
push
add
std
mov
insb
pop
lods
ret
inc
sub
roll
xchg
pop
dec
es
mov
adc
fs
and
fmul
mov
ja
cmp
pusha
push
aad
cld
mov
mov
push
push
pop
push
fdivr
movsb
pop
out
xor
pushf
adc
xchg
adc
push
imul
push
flds
cs
mov
push
dec
or
mov
dec
icebp
outsb
mov
sbb
rorb
mov
xor
add
cmc
add
jp
pop
dec
iret
pop
bound
mov
std
out
xor
inc
mov
test
shlb
cltd
dec
pushf
jbe
xchg
imul
scas
insb
add
fcomp
test
and
loope
addr16
ret
outsb
push
mov
sub
cwtl
mov
jge
in
fisubs
dec
es
cwtl
pop
xchg
lahf
into
add
push
pop
pop
add
fmuls
test
test
push
inc
mov
ja
add
cmpsl
sarb
aad
mov
sbb
fldt
popa
xor
ds
decb
fistps
ljmp
aad
lods
pop
lcall
js
sbb
or
mov
fistl
jbe
lock
call
ljmp
mov
notb
lods
dec
ret
test
push
or
shll
loop
test
xchg
rol
data16
inc
fisubrl
scas
ljmp
imul
mov
shlb
xorl
mov
push
jle
jmp
mov
jo
push
sbb
clc
pusha
xchg
sbb
push
xorl
jb
arpl
fcoml
xchg
xor
pop
cmc
loop
jmp
mov
sarb
and
sub
cmc
cmp
out
add
xor
fs
shl
stos
movsb
mov
lods
inc
mov
repz
jmp
test
cld
pop
stc
adc
fstpl
sbbb
call
pop
arpl
add
mov
addr16
pop
in
das
rorl
rorb
jae
fistpl
adc
adc
dec
jne
icebp
insb
mov
mov
decb
and
mov
pop
jo
push
fistpl
push
push
sbb
push
out
lret
cmp
sahf
mov
lahf
movsl
xchg
addl
scas
xorb
sub
push
pop
push
std
int
jb
call
movsl
sahf
xchg
loop
pushf
inc
decl
dec
pop
pop
lods
push
shll
lea
test
jmp
add
sbb
pop
into
cmp
leave
sarl
fisttpl
loope
push
mov
dec
sti
mov
loope
ja
and
test
or
add
aam
pushf
aam
jl
nop
mov
iret
jae
and
or
out
cmp
cmp
sub
into
ror
cmp
inc
or
push
cmp
jl
xor
inc
push
cmp
stos
fldl
jnp
mov
mov
js
mov
pop
and
xor
jmp
stos
jmp
arpl
or
and
sbb
xchg
test
inc
ret
movsl
sbb
call
xchg
idivl
aam
in
popa
mov
add
and
outsb
pop
stos
jo
cmpsb
stos
lods
bound
push
movsb
dec
push
hlt
stos
jge
jecxz
sbb
jne
rorb
adc
out
pop
cmp
loopne
add
mov
mov
mov
adc
or
mov
adc
stos
pusha
inc
xchg
cmp
push
lods
ret
int
xchg
insl
addr16
arpl
push
loopne
data16
cmp
aad
mov
incl
insb
and
cli
or
dec
dec
pushf
fdivp
dec
scas
sbb
nop
or
ja
jns
push
popa
sub
loop
les
inc
jg
mov
or
movlps
aad
xchg
mov
xchg
push
js
stos
mov
jno
mov
pop
lahf
cmp
jle
lahf
ja
sbb
sub
inc
imull
in
addr16
fwait
sbbl
mov
or
out
cwtl
mov
jnp
xor
es
mov
push
mov
aam
jne
fistpl
lcall
fisubs
mov
sbb
repnz
pop
jge
addl
mov
loop
xlat
dec
and
push
push
mov
mov
imul
fdivr
adc
mov
mov
xchg
cmp
mov
enter
inc
scas
mov
rolb
in
mov
imulb
test
pop
in
cmp
jge
inc
es
xchg
jnp
aad
sbb
or
pop
loop
jbe
dec
ret
lret
or
mov
cli
rol
loopne
inc
xor
cmpsl
hlt
cmp
mov
orl
push
scas
or
sub
xor
out
fs
test
scas
sahf
notb
popf
adc
pushf
rcrb
jns
gs
or
sub
imul
jp
ret
call
xchg
lea
leave
test
sub
adc
and
pop
or
aam
sub
ss
jae
in
mov
cmc
jmp
adc
ja
cs
aam
jo
push
inc
adc
cmp
mov
push
jne
push
and
sti
pop
cmp
cmp
ror
cmp
int
outsl
cmp
sbb
dec
test
pop
cmp
push
sub
lret
pusha
xchg
jne
lret
int
add
aaa
inc
push
adc
lea
dec
lret
and
outsb
jno
pusha
nop
loop
jmp
mov
xlat
dec
mov
and
les
imul
jle
adc
xchg
push
lcall
aam
outsb
add
add
fadds
leave
inc
cs
or
jge
jle
xor
cmp
push
cmpsl
or
inc
loope
in
and
add
xor
dec
adc
pop
push
push
jb
pop
push
or
adc
int
aam
out
cltd
mov
add
popf
and
mov
and
add
insl
adc
xchg
and
addl
aaa
mov
xor
enter
mov
inc
sub
scas
inc
jp
leave
lods
or
mov
inc
jg
jge
dec
jae
das
jae
aam
mov
push
test
jmp
filds
sti
mov
xchg
rcll
rorl
cmp
js
in
push
push
lret
aaa
stos
enter
and
psllq
int3
mov
cmpsl
dec
in
mov
mov
in
cmp
test
scas
sahf
movsb
lahf
in
or
xor
mov
and
iret
scas
loop
loopne
jp
lea
mov
leave
gs
pop
push
mov
mov
inc
test
xchg
lret
add
push
pushf
jae
jno
roll
mov
lret
pushf
cmpsl
nop
xor
loopne
loopne
in
adc
dec
pusha
dec
mov
mov
pushf
cmp
mov
je
pop
js
fmul
je
popf
mov
jno
imul
stc
pop
hlt
and
push
push
outsb
das
addr16
jae
jno
push
adc
test
and
push
dec
cmp
int
stos
jbe
arpl
cmpb
mov
jae
pop
lcall
hlt
push
and
setns
push
mov
mov
insb
add
js
xor
mov
jb
and
dec
mov
mov
cli
jns
inc
sub
sahf
in
imul
jle
add
nop
test
xchg
fcmovbe
adc
push
pop
xor
sbb
movsb
xlat
sub
xchg
testb
insl
inc
push
rcrl
xor
daa
pop
push
cmp
pop
jecxz
fwait
es
sahf
xor
cli
pop
and
rclb
inc
stos
test
add
adc
xchg
and
sbb
add
sub
and
dec
inc
mov
push
and
xchg
sbb
xchg
cmpsl
xor
mov
sti
adc
add
mov
xor
adc
negl
dec
imul
jl
xchg
popa
sub
pop
lods
movsl
scas
loopne
lret
jecxz
lret
aam
lock
xchg
mov
mov
xchg
adc
into
push
jb
cmp
inc
addr16
dec
push
jo
cltd
jne
fimuls
ja
js
or
cmpsl
clc
push
popa
cmp
jp
jle
push
mov
push
shlb
std
test
nop
and
or
xor
leave
push
sbb
cmp
cmpsl
mov
pop
lds
mov
shll
jg
xor
inc
add
dec
test
xor
in
xchg
js
jecxz
dec
pop
out
sub
mov
sahf
flds
in
into
clc
pop
divb
or
int3
cld
cmp
cltd
jp
xor
or
sarl
or
push
cmp
popf
dec
addr16
pop
jge
and
dec
inc
fldt
scas
leave
or
dec
push
stos
pop
pop
cmp
hlt
ja
cmpsl
xor
int3
daa
dec
mov
and
clc
enter
inc
shrb
outsb
out
out
adc
enter
nop
xchg
xchg
lea
aam
jl
fwait
popf
mov
stos
adc
inc
and
call
rorb
out
add
fptan
mov
pushf
imul
shll
jle
cs
xchg
cmp
xchg
cmp
call
inc
pop
cltd
pop
data16
jne
add
sub
and
loopne
fsubrl
cmp
cmp
lret
adc
cmp
pop
repz
mov
pop
das
loope
dec
mov
mov
lock
pop
icebp
push
popf
cmp
lds
jp
add
sahf
rorb
lods
and
test
lea
xor
push
daa
mov
dec
dec
add
xlat
xor
add
and
mov
lods
mov
mov
neg
rol
fidivl
lret
pop
xor
push
clc
mov
insb
adc
pop
negl
dec
and
dec
mov
jbe
bound
cmpsb
push
xchg
jecxz
into
data16
lcall
cs
int
data16
and
xor
lcall
in
out
mov
int3
mov
pop
cmpsb
jg
lods
cmpsl
jns
aad
int
pop
sarb
cli
cmp
aad
out
fidivs
sub
or
mov
pop
mov
jle
xor
xchg
aam
sub
shrl
fists
inc
add
movsb
xchg
add
mov
add
sub
push
jl
std
xor
adc
push
lea
adc
mov
shlb
in
out
hlt
xchg
rcl
or
sub
push
or
or
aaa
inc
faddp
int
icebp
test
addr16
xor
les
stc
imul
cmp
dec
aaa
mov
xchg
or
lret
imul
lods
ret
inc
lret
or
and
jbe
shr
mov
shlb
and
xor
les
nop
out
das
push
sub
sub
daa
mov
outsl
adc
sub
jns
fisubs
jecxz
lcall
fsub
mov
or
das
insl
add
pop
sti
or
bound
cmp
std
cmc
loopne
cld
jno
ret
test
pop
or
leave
call
mov
rolb
in
mov
sbb
jge
js
pop
xchg
lods
js
sbb
xchg
mov
idivb
fld
adc
lods
cld
mov
dec
shlb
sbb
cmp
pop
xchg
lahf
dec
mov
xlat
cmp
push
data16
stos
cmp
popa
xor
fsub
int3
addr16
fwait
ret
sqrtps
fcmovnu
jne
dec
cmp
cmpsl
sbb
pop
mov
popf
jae
mov
in
andl
xchg
hlt
add
jge
aas
mov
push
or
mov
mov
cs
push
xchg
sbb
mov
call
pushl
mov
stos
push
aam
stc
in
pop
jno
int
xor
loope
jg
pusha
js
and
rcll
ljmp
sub
xchg
shr
dec
popf
faddl
imul
xchg
mov
xor
sbb
mov
mov
sub
lret
push
stos
push
jbe
xchg
push
push
negl
push
test
or
stos
movsl
outsl
out
mov
stos
xchg
loopne
push
call
and
into
fisubrl
popf
lods
movsl
mov
cld
insl
bound
popf
mov
sahf
add
rcrb
adc
add
cmp
sub
cwtl
inc
inc
sub
push
sub
pop
addr16
shll
xor
cmp
mov
lock
mov
call
push
shrb
mov
jne
fistpl
push
es
xchg
js
mov
imul
fcomps
loopne
xlat
sbb
cmp
or
push
or
add
pop
push
filds
orb
jae
jmp
lret
iret
xor
cli
cmc
dec
cmp
cmc
int3
mov
sbb
pop
mov
adc
mov
cwtl
and
ret
or
in
in
sub
push
xchg
sub
mov
dec
pop
fcompl
in
mov
sub
enter
lret
or
mov
pop
push
pushf
jp
aas
pop
insb
mov
pop
scas
subb
xor
xor
pop
and
push
add
push
sti
adc
or
mov
jne
ds
shr
xchg
shl
xchg
xchg
push
push
scas
dec
mov
push
bnd
cs
and
rorb
push
clc
mov
in
aas
sbb
mov
pandn
mov
push
xrelease
mov
cmp
cmp
sahf
fsubrs
sub
sbb
push
movsb
mov
sahf
test
dec
addr16
lods
ds
scas
lret
fldt
out
jmp
cmp
mov
lret
movsl
cli
adc
in
mov
push
lret
xchg
outsb
push
jno
or
adc
dec
mov
inc
jmp
int3
inc
ds
fimuls
ret
push
stos
leave
xchg
stc
ja
dec
jo
les
or
into
mov
ret
pop
push
inc
nop
push
das
lret
pop
cmpsl
imul
sahf
subl
int
movsl
add
out
mov
sub
data16
les
cs
sbb
scas
scas
push
sbb
dec
mov
mov
jmp
xor
pop
rcl
cltd
loop
lods
loopne
lret
loop
and
rcrl
add
enter
mov
jo
mov
aam
fsubs
outsb
and
inc
iret
jbe
loop
sub
dec
fcmovu
pop
std
push
jmp
bound
mov
divl
cwtl
imul
xor
xchg
nop
hlt
xchg
mov
aaa
js
adcb
and
and
mov
ds
lock
inc
ret
mov
add
xchg
popf
dec
xchg
add
add
in
rdtsc
filds
popf
movsl
dec
sti
lock
test
xor
jno
pop
xor
nop
dec
data16
out
inc
ljmp
popf
cmp
lcall
xor
mov
adc
sub
sar
movsl
shll
mov
mov
mov
add
xor
sub
je
in
stos
jle
add
insb
insl
lods
divl
pop
js
push
pushl
mov
xchg
cmc
push
jle
adc
and
and
mov
xor
ja
and
xchg
xchg
push
enter
mov
and
pop
js
scas
jmp
shll
das
jecxz
mov
call
push
out
xor
popf
mov
dec
xor
mov
push
adc
push
lods
xor
cld
jle
push
lea
sbb
fsubl
jmp
adc
jge
mov
pop
out
push
shrb
sbb
adc
xchg
push
add
aas
arpl
xchg
push
cmp
mov
out
inc
mov
pop
jnp
testl
xorl
cmc
sbb
push
pop
inc
xchg
mov
lods
mov
xchg
jae
popf
shl
jl
pop
scas
loop
xchg
iret
jecxz
and
lods
outsl
add
lods
addr16
repz
push
ljmp
lahf
flds
cmp
xor
sbb
mov
xor
jbe
clc
mov
and
fstpt
pushf
sbb
cmp
mov
mov
dec
pop
mov
push
psubusw
lods
aas
bound
cltd
mov
and
xor
pusha
roll
outsb
lea
sti
aad
cmp
jb
sbb
xchg
mov
stos
pop
add
loope
mov
or
bound
pushf
pop
out
out
cmp
add
cmp
pop
or
push
ret
cmp
es
bnd
lods
in
lahf
test
mov
jl
cmp
sbb
cwtl
mov
pop
pop
fs
sbbb
hlt
in
outsl
les
jge
xchg
in
mov
xlat
fsubl
mov
cld
notl
iret
int3
shrb
mov
pop
mov
neg
inc
jno
jbe
leave
outsl
dec
push
decb
sbb
add
inc
xchg
inc
lods
mov
addr16
add
dec
xchg
jnp
fs
fiadds
sub
sbb
push
rcrl
xorl
inc
mov
add
and
push
xor
jnp
ds
pop
outsb
inc
jne
nop
mov
sti
mov
rcrl
ja
addr16
cli
sub
push
sub
push
or
scas
mov
jae
popf
pop
cwtl
mov
imul
inc
sbb
push
fnclex
insb
push
and
pop
jne
adc
lock
cmp
in
xor
push
cwtl
dec
add
push
xchg
xor
stc
push
jne
sbb
popa
or
mov
fstps
xor
mov
lret
fdivrp
stos
testl
pop
mov
xlat
xor
add
je
inc
push
out
push
int3
xor
xlat
adc
in
jmp
out
xchg
repz
and
mov
out
test
push
push
pushf
inc
cmp
xor
sbb
xlat
arpl
and
repnz
int
lods
inc
and
mull
stc
jmp
dec
adc
push
mov
nop
repnz
into
mov
imull
mov
imul
and
jl
subb
cltd
pop
or
mov
insb
sbb
std
scas
push
xor
aad
inc
adc
test
inc
mulb
cmp
shl
and
in
dec
int
rcrb
loope
lret
test
xchg
inc
jne
aaa
outsb
fwait
jl
ja
dec
stos
cmp
inc
push
ret
sub
aam
dec
out
inc
mov
mov
sahf
ljmp
insb
dec
imulb
shlb
sarb
mov
gs
push
xchg
mov
decb
pop
jnp
call
pop
fwait
pop
push
mov
jp
xchg
mov
lods
inc
xchg
xchg
add
mov
negb
mov
or
jge
mov
decb
xchg
adc
divl
subl
sbb
xor
cmp
sub
arpl
stc
fwait
cmp
in
sub
imul
xchg
dec
jbe
jno
dec
push
js
push
push
in
mov
mov
in
popf
jle
cmpsl
add
xlat
test
fldcw
in
scas
jno
subl
pop
addl
incl
adc
js
pop
push
dec
inc
fldl2t
loop
jb
push
scas
adc
sub
add
or
lods
adc
or
dec
ret
push
xor
out
fmuls
sbb
pop
cld
mov
mov
aam
cmp
adc
sbb
mov
psubusw
mov
and
adc
shl
xor
cmp
sub
xor
cmp
aad
sub
sbb
add
insl
jg
inc
xor
jb
movsl
std
cmp
or
loopne
and
das
adc
idivb
mov
sbb
fbstp
jmp
adc
shl
mov
in
mov
mov
aam
imul
loopne
adc
add
fldenv
jp
cmc
addr16
dec
int3
hlt
fists
jmp
inc
and
lods
jl
icebp
shrl
mov
shr
fwait
jle
subb
sti
or
lcall
dec
or
jo
dec
shrb
xor
push
jg
cld
ret
addr16
mov
cmc
mov
mov
lods
int
jge
nop
int3
and
or
inc
adc
xor
sbb
pop
mov
mov
cwtl
mov
push
call
imull
or
inc
test
scas
jmp
jns
dec
fsubrs
mov
push
cmpsb
push
pop
or
mov
inc
jae
sub
sub
scas
jno
or
movsb
xor
fildll
fsts
add
xchg
xor
adc
nop
dec
sbb
jmp
pop
jns
xor
cmp
mov
lock
sbb
pop
xor
xchg
sub
ljmp
cli
mov
in
add
push
or
inc
clc
xorl
mov
addb
mov
mov
jge
cmp
mov
jl
sarl
cltd
inc
int3
xchg
sub
mov
popa
mov
fwait
mov
pop
arpl
clc
jge
pop
xor
push
push
ficoms
pop
lahf
or
out
pop
dec
rcrb
mov
pop
jle
nop
cmp
leave
daa
push
jl
into
fcmove
or
orb
pop
iret
pop
add
adc
or
mov
js
dec
add
jne
mov
or
cs
scas
pop
test
inc
pop
movsl
add
ss
jp
inc
push
decl
dec
and
test
stos
rcrb
xor
out
mov
inc
lret
fst
or
gs
adc
cli
xor
add
cmp
xor
mov
in
imul
sub
inc
xchg
addb
inc
sbb
aam
jge
insb
je
insl
bound
sub
cmpsl
jmp
sbb
adc
jbe
es
jns
and
jno
das
pop
mov
xchg
enter
inc
out
adc
mov
cmp
mov
mov
sub
add
enter
repz
and
sub
push
mov
dec
cltd
int3
cmp
mov
imul
insl
add
and
bound
jle
std
mov
mov
dec
adc
int
orl
js
inc
addb
sarl
popa
stos
or
pop
or
loope
lahf
mov
les
ds
adc
xchg
shrb
jmp
dec
cmc
js
mov
rorl
sub
loop
mov
inc
std
cmpsb
xor
jmp
sbb
mov
push
clc
inc
xor
les
jle
pop
xor
and
cmc
dec
int3
mov
adc
add
sti
cmp
data16
outsl
lcall
ret
sar
dec
xchg
inc
sbb
xor
lods
push
jno,pt
jg
pavgb
mov
in
xchg
outsb
test
ret
jge
lea
xchg
es
cmc
mov
sub
and
aas
xchg
adc
cmp
xor
es
stos
push
push
inc
ret
in
cli
adc
imul
mov
jnp
ficompl
hlt
push
pop
fidivs
lds
xchg
jle
push
add
inc
fldcw
xchg
xor
jne
jns
and
ret
sbb
mov
subb
push
push
sti
push
inc
adc
add
or
pushf
imul
sub
mov
mov
inc
sub
dec
push
xor
jecxz
imul
data16
sbb
sbb
pop
repnz
in
xchg
aam
out
xor
push
test
adc
and
add
or
inc
xor
add
lret
cmp
fistpll
data16
pop
xor
psubsb
in
movsb
jae
ret
jge
in
mov
repnz
cmpl
imul
int
pusha
out
js
cmc
imul
es
test
lcall
mov
cmp
not
mov
icebp
ret
adc
out
sub
fimuls
or
adcw
sub
into
ret
sub
xor
xchg
mov
cmp
mov
mov
cmp
push
xor
std
outsb
fs
outsl
test
sbb
imul
sbb
adc
repnz
mov
enter
stos
add
addr16
or
cld
arpl
dec
or
mov
adc
insb
out
add
mov
cmp
inc
dec
fucomi
mov
xchg
movsbl
xchg
sbb
mov
mov
stc
roll
ret
add
inc
sub
loope
pop
leave
js
cmpl
sti
sub
inc
mov
xchg
ret
push
dec
stc
inc
cs
sub
jmp
lahf
xchg
push
xchg
sub
repnz
pop
pop
into
or
push
das
sbb
cmp
xchg
leave
cmp
push
popa
out
adc
add
in
dec
lret
fstl
dec
cmp
ja
cmp
push
shlb
fisttps
icebp
repz
push
cmp
aaa
sti
mov
jne
mov
test
dec
xchg
data16
jmp
clc
or
es
test
sahf
ret
mov
cmp
pop
dec
mov
jmp
int3
xchg
imul
mov
and
imul
in
and
mov
mov
jo
xor
cltd
jmp
jbe
loopne
sahf
push
jae
pop
cmc
mov
loop
xchg
mov
lea
mov
lock
nop
lcall
jae
adcl
add
push
clc
mov
ss
xchg
ljmp
sbb
cmp
outsb
fwait
cld
imul
xor
rclb
popa
subl
out
pminub
and
and
addr16
lods
repz
xor
in
sbb
jb
add
push
cld
out
icebp
aad
mov
into
lods
gs
rolb
andl
pusha
lret
or
cltd
dec
mov
shrb
mov
jmp
iret
imull
mov
roll
repz
es
cmp
push
icebp
mov
sarl
loope
in
xchg
mov
lds
mov
add
lret
test
stc
stos
and
in
xchg
cmc
jbe
imul
add
and
adc
aam
mov
pop
push
mov
inc
or
lods
cltd
xchg
mov
stos
jmp
adc
movsb
sarb
sub
sub
ficoml
cmp
push
push
and
adc
aas
cs
mov
repz
mov
jbe
or
lret
or
sub
and
popa
imul
jae
lods
es
push
jnp
sarl
mov
jmp
pop
mov
pop
mov
lcall
inc
mov
test
jle
mov
xor
cltd
push
pop
sbb
jb
inc
addr16
xorb
scas
jmp
or
cmpl
xor
loop
bound
sub
sti
and
jno
and
call
loopne
std
sbb
lahf
jg
xor
repnz
xlat
fistpl
imul
loop
xchg
add
out
sub
jp
andb
add
fwait
dec
shlb
jns
dec
mov
in
stos
mov
jle
dec
cmp
push
fcomp
lcall
sahf
je
sub
lret
and
incl
je
sbb
in
stos
dec
add
sub
in
ss
aaa
mov
xchg
and
sub
push
mov
mov
push
nop
inc
jecxz
jb
pop
into
test
scas
int3
cmp
fwait
ret
mov
jmp
subl
in
sbb
lret
inc
ljmp
test
mov
cmp
jmp
sbb
push
mov
xchg
inc
sbb
aas
mov
ds
mov
int
insl
mov
ss
mov
cmc
cmp
es
or
jbe
icebp
int
aam
and
jns
mov
lds
pop
jne
pop
jge
mov
mov
dec
cmp
aas
outsl
cld
jo
fnstsw
add
ret
leave
insl
nop
out
dec
jae
lret
xorb
ljmp
cld
jmp
inc
repz
scas
mov
imul
es
dec
inc
push
pop
int3
imul
out
xor
scas
mov
movsl
dec
clc
sahf
mov
in
push
pop
jne
pop
rolb
movsb
jnp
aas
inc
loopne
ret
jns
shlb
cmp
clc
outsb
or
imul
xchg
mov
pop
scas
or
and
into
es
arpl
add
es
dec
inc
pop
mov
xchg
or
rclb
add
movsb
jmp
stos
loop
jns
ret
fistps
cmp
je
xchg
push
frstor
and
shlb
enter
bnd
scas
les
sahf
jne
pop
dec
ss
das
lock
iret
xchg
xor
sbb
mov
mov
fisttpl
xor
ja
test
jmp
aad
dec
data16
sbb
and
test
xchg
and
sti
sti
aas
mov
mov
cmpsb
xchg
mov
adc
adc
add
pop
inc
ds
out
scas
sti
daa
cmp
aam
ds
mov
fiaddl
jnp
mov
mov
arpl
jecxz
pop
push
inc
repnz
or
ret
outsl
add
into
inc
push
ret
in
scas
fwait
daa
test
shl
add
stos
out
sbb
ret
xor
sbb
jge
adc
cmp
xor
gs
loop
cmpsb
and
sbb
clc
out
shl
ret
mov
test
and
es
xchg
cld
lods
in
ds
adc
jl
hlt
lds
cwtl
das
scas
ss
subb
push
mov
loop
and
sbb
rcrl
push
adc
scas
stos
mov
and
sbb
add
insl
in
mov
lods
adc
int
mov
cmp
bswap
add
out
pop
or
inc
arpl
out
loope
mov
outsl
cmpsb
ljmp
jge
mov
dec
xor
into
pop
cmpsb
mov
add
jne
add
ror
pop
push
push
stos
rorb
mov
xchg
lret
sbb
ss
in
por
cmp
xchg
lret
js
inc
arpl
arpl
and
add
sub
addr16
push
scas
push
lds
adc
not
jno
adc
rcrb
jo
lds
adc
adc
mov
xor
xorl
lea
loop
idiv
jecxz
xlat
dec
ljmp
leave
pop
loope
sbb
sub
lods
lahf
pop
push
aas
dec
into
iret
add
inc
sar
jb
sbb
fcmovne
testb
ret
lret
sbb
jge
mov
stc
int3
js
mov
xorb
and
push
pop
push
push
dec
xchg
cmp
xchg
inc
pop
sub
cmc
xchg
test
fsubr
out
nop
fildll
lods
enter
stos
sahf
rcll
mov
mov
jns
pxor
or
fsubr
loopne
jno
rolb
fs
jns
mov
sub
mov
loope
xor
xchg
xor
fsubs
push
cld
cmpxchg
icebp
adc
icebp
aas
jb
pop
sub
jle
push
sub
dec
aaa
in
jl
mov
fnsave
sbb
sbb
daa
ja
movsb
imul
mov
loope
ret
lods
sub
lcall
mov
xchg
fsubl
push
or
lahf
mov
les
jae
cmp
iret
adc
push
lds
lret
mov
pop
jg
aas
lods
fisubs
adc
cmovbe
sbb
loope
mov
pop
xchg
and
int3
fnstenv
xor
bound
jnp
mov
and
add
push
mov
rclb
mov
popf
mov
cmp
and
call
dec
adc
js
movsb
fmuls
mov
iret
add
or
cmp
sub
into
mov
bound
jmp
movsl
loope
push
push
pop
in
xor
lahf
adcl
out
in
xor
shlb
push
or
repz
xchg
std
loopne
nop
fadd
sub
cld
cmpsb
xor
mov
xchg
xchg
sbb
add
arpl
pop
addr16
and
sarb
pushf
test
pcmpeqd
int
stos
repnz
sbb
repnz
rcrb
and
adc
adc
aad
lods
cmpsb
pop
cmp
add
jmp
cmp
imul
inc
jl
je
scas
ds
ret
scas
das
dec
cld
js
js
stos
sbb
test
mov
sbb
lea
pop
adc
xchg
scas
push
mov
lds
jo
insb
mov
inc
mov
xlat
add
adc
sbb
adc
ret
data16
add
xchg
pop
xor
add
add
dec
cli
mov
xor
push
mov
inc
in
push
enter
dec
dec
xchg
lock
xchg
sub
xlat
movsl
push
incb
mov
cmpsb
fs
inc
leave
mov
xor
movsb
test
sub
fstl
das
ret
popa
mov
cmpsl
sahf
mov
sub
hlt
lcall
stos
inc
jecxz
sbb
jg
jp
stc
stc
in
adc
repz
jns
hlt
xchg
shl
add
clc
or
test
cli
dec
gs
push
pop
mov
pop
lcall
icebp
ret
js
lret
fwait
lcall
das
std
scas
test
stos
sbb
stc
or
lds
cli
lcall
sub
jo
ret
enter
push
cwtl
loopne
sbb
es
hlt
arpl
pop
cli
sub
inc
out
adc
sbb
ja
mov
lea
std
and
inc
stos
and
sbb
fisubl
cli
add
xchg
mov
xchg
out
dec
dec
mov
dec
sub
les
push
add
push
mov
ja
inc
lea
jl
mov
lcall
mov
mov
inc
jg
in
adc
js
mov
or
imul
stc
xchg
outsb
jnp
cltd
lods
pop
std
cmp
ss
out
inc
sbb
pop
cmp
dec
cmp
and
push
aas
inc
fldl2t
mov
sbb
xchg
lds
mov
push
pop
idivb
add
pop
mov
test
scas
fsubl
mov
insb
sub
fdivrs
jmp
adc
mov
adc
lret
fisubl
stc
lock
pusha
es
jno
sub
insb
mov
ret
cmp
inc
call
std
sbb
xchg
sub
insb
mov
je
fisubl
sub
or
push
jle
sti
and
movsb
insl
addr16
fisubrs
xchg
mov
lods
jnp
mov
push
mov
jo
mov
adc
sahf
sub
add
out
jp
mov
pop
inc
jp
mov
cmc
faddl
pop
push
dec
xchg
lcall
sti
xor
dec
mov
and
fadd
mov
pop
mov
imul
fidivs
fsubrp
mov
fmuls
and
xchg
mov
cmpsl
xor
idivl
xchg
leave
test
pushf
lret
push
idivl
pusha
mov
dec
sbb
cwtl
xsha1
cmpsb
dec
xor
jge
ljmp
addr16
mov
daa
stos
push
aas
add
test
ret
mov
out
add
sbb
lret
cmp
mov
pop
and
cwtl
ds
cmp
mov
mov
and
mov
pop
mov
out
cmc
xor
clc
push
call
mov
cmp
call
pop
lret
jb
mov
xor
cli
inc
mov
cmp
enter
mov
std
mov
sahf
xchg
xchg
int3
mov
lret
pop
loop
aaa
lods
dec
outsb
out
sbb
dec
and
sbb
mov
mov
sub
clc
divl
pushf
jbe
stos
sub
pusha
mov
movsb
scas
xor
or
and
stc
push
sbb
xor
pop
insb
adcb
jle
popf
push
sbb
or
into
xor
aaa
xor
movsb
push
push
push
xchg
sti
xchg
mov
push
sub
jmp
jge
ja
leave
mov
loope
mov
into
rcrb
imul
data16
lea
fcomip
aad
test
jnp
out
decl
lahf
xchg
aas
aad
xchg
call
push
adc
or
mov
lock
nop
push
or
rcll
loopne
mov
sub
and
jecxz
aas
dec
mov
mov
jbe
adc
jle
mov
cmp
xor
insl
xor
lods
mov
scas
fstpl
jmp
repz
fidivrs
call
pop
sbb
imul
clc
imul
ret
sub
insb
jns
popa
inc
shl
insb
jge
cmc
cmp
out
xchg
ds
xchg
lods
mov
mov
add
daa
imul
cmpsb
cmp
push
jo
arpl
ret
push
jbe
push
and
lock
pusha
mov
std
adc
mov
gs
jle
cs
jno
stos
loope
adc
inc
xchg
jle
pushf
sub
push
stc
push
and
movsb
leave
mov
mov
insl
xchg
sahf
pop
add
stc
mov
mov
sub
and
sub
pop
int3
loopne
jnp
pop
add
adc
fwait
xor
mov
addr16
rolb
fwait
or
divl
imul
mov
jmp
out
jle
push
gs
js
iret
mov
mov
cld
pusha
stc
xorl
pusha
push
sbb
sub
repz
lahf
leave
je
sbb
fs
loop
cmp
inc
pop
movsl
jl
loopne
sbb
loop
mov
add
xor
pusha
pop
sar
mov
pop
scas
mov
test
jns
test
sbb
xorb
mov
das
mov
sbb
ret
rcrb
or
pop
data16
je
mov
aad
add
jbe
ljmp
fcoml
mov
mov
xor
dec
popf
popa
rcr
lret
cmp
aas
icebp
xor
leave
push
push
ljmp
loope
int
addr16
sbb
sbb
loope
add
push
sbb
jmp
incl
xchg
jb
fadd
or
cmpsb
lcall
inc
adc
icebp
pop
or
cli
mov
bound
adc
and
daa
adc
call
js
cmp
outsl
inc
out
xchg
ljmp
mov
mov
imul
pop
jb
adc
aam
not
sub
add
fwait
sarl
xchg
hlt
or
pushf
pop
repnz
lea
dec
mov
int
pop
jns
daa
xor
cld
xchg
pushf
xor
xor
faddl
aam
cmp
pop
fnsave
mov
fsubrs
cmp
stc
mov
lock
ja
loopne
mov
mov
mov
sub
add
or
lods
icebp
xchg
push
or
test
enter
cmpsb
pop
jl
adc
mov
imul
test
aaa
ret
mov
movsl
in
pop
cmc
int3
insl
mov
cmp
jbe
pop
fimull
scas
jnp
pop
mov
sub
sbb
jne
aas
fcompl
pop
lods
es
mov
mov
dec
aam
xchg
add
add
add
sbb
or
mov
add
into
dec
fneni(8087
lea
and
add
ljmp
getsec
fld
dec
xchg
out
add
fcmovb
and
fadds
xor
test
push
cld
pop
test
or
ret
jecxz
mov
mov
repz
inc
mov
fyl2x
jno
mov
dec
bound
lcall
jo
or
imulb
lea
dec
fwait
leave
mov
push
fucomp
push
pop
adc
sub
cmp
sbb
adc
test
lahf
cmp
jge
test
mov
push
in
sahf
movsl
fadds
stos
lahf
push
xchg
mov
in
mov
add
in
lret
mov
jp
xor
call
mov
cmpsl
xor
mov
enter
xor
loopne
les
stos
movsb
lea
dec
fxch
sbb
jnp
fucomp
xor
sub
lea
je
mov
addr16
xor
call
or
adc
lea
xchg
jb
jns
push
std
mov
stc
add
gs
push
mov
ds
inc
or
pop
addr16
push
fisubrs
jmp
inc
js
adc
cmp
loope
stc
xchg
je
mov
pop
and
or
adc
mov
jae
adc
jns
pop
xor
jmp
popa
fldenv
arpl
pop
fwait
std
flds
and
xor
pop
add
rcrl
dec
aaa
pop
add
push
mov
test
pmulhw
mov
ficomps
enter
adc
pop
sub
mov
sub
mov
hlt
out
leave
and
adc
test
test
repz
inc
dec
sbb
addr16
pop
bound
mov
subl
mov
xchg
add
out
xchg
jno
loopne
lahf
cwtl
push
xchg
or
pop
sub
push
arpl
in
xorl
lds
mov
rcll
rol
ds
mov
cmp
push
clc
xor
fs
cmp
mov
sbb
stos
push
daa
stos
or
sbb
dec
push
mov
mov
lods
xchg
mov
push
jns
lahf
xor
hlt
inc
ds
fstps
xchg
movsl
mov
xor
cmp
jb
sbbb
repnz
jb
loope
cmp
pop
repz
xor
mov
fdivs
into
fdivs
xor
stc
sti
lahf
fists
xchg
xor
jne
fsubrs
cs
roll
sub
push
movb
test
xchg
enter
fsub
test
push
jno
fwait
shlb
and
aas
fs
sbbl
in
and
jns
push
imul
aad
dec
mov
mov
cmpsl
je
lock
popa
das
pop
aad
xchg
sbb
inc
and
out
movsl
jmp
call
pop
push
xchg
push
pop
in
lea
xchg
insb
fnstcw
in
movsl
cwtl
and
add
pushw
imul
lock
mov
mov
insl
rcll
lret
jb
cmp
xchg
pop
inc
dec
jns
decb
std
aas
arpl
sbb
xchg
adc
xchg
dec
mov
test
sbb
daa
lock
xchg
js
ljmp
pop
sbb
adc
pop
sti
call
pslld
cmpsl
test
or
mov
in
sbb
aas
mov
push
popf
mov
cmpsl
rcr
call
cli
into
mov
push
mull
aad
stos
insb
fbld
mov
add
jg
punpckhbw
jnp
call
dec
cmp
daa
cld
cmp
sub
lds
or
mov
mov
vmwrite
arpl
mov
lods
jbe
dec
xor
pop
add
lea
jl
mov
and
mov
and
negl
fstl
lea
adc
ds
push
je
divb
shlb
sbb
fs
add
cmpsl
popaw
cmp
outsl
mov
pop
cli
pushf
xor
cmp
scas
sub
add
dec
hlt
notl
inc
adc
inc
iret
mov
xchg
push
inc
pop
mov
mov
shlb
mov
push
mov
adcl
jno
js
jb
jb
dec
pop
pop
insb
push
ja
loop
jmp
push
sbbb
mov
xchg
test
es
out
lods
loopne
lahf
adc
xor
mov
cmp
jl
sbb
sub
jmp
pop
add
xor
icebp
mov
mov
loopnew
add
or
dec
inc
pop
inc
ljmp
sbb
push
pop
hlt
movsl
jae
inc
hlt
mov
jo
cmpsb
xchg
daa
incl
cmp
enter
xchg
ja
xor
les
subl
arpl
mov
loope
push
inc
imul
leave
ljmp
repz
lock
mov
mov
dec
out
iret
push
fs
push
clc
sub
adc
mov
in
mov
cltd
mov
inc
or
pop
sbb
dec
mov
ret
cwtl
into
dec
imul
ss
out
push
xchg
mov
leave
and
xchg
int
push
in
repz
dec
aam
cwtl
mov
push
in
fadds
push
lret
out
xchg
mov
ret
fadds
add
popf
nop
sub
repz
adc
imul
xchg
xor
cmp
daa
cmp
sti
push
jmp
pop
std
in
inc
test
sbb
cmpsl
mov
fwait
xor
out
lea
pop
xchg
fwait
or
sub
rolb
ficompl
sbb
xor
out
daa
cmpl
test
stc
rcll
fldenv
imul
adcl
mov
jge
push
fcompl
mov
or
xor
orb
inc
or
popf
daa
dec
xor
sub
pop
cmp
xor
movsb
outsl
cli
jbe
popa
pushf
out
push
inc
or
and
sahf
js
pop
inc
mov
shlb
sub
jecxz
into
ja
jb
mov
out
scas
xchg
adc
pop
pop
andb
lods
xchg
cwtl
lock
cmp
jbe
iret
adc
or
inc
push
cmc
and
adc
jp
push
push
aad
jns
jbe
mov
outsl
js
fidivrl
ja
insb
fwait
jl
add
gs
jns
mov
sti
inc
je
sbbb
jp
adc
loopne
jg
sbb
hlt
mov
shr
cmp
cmpb
xchg
std
cld
jne
stc
adc
pop
cmc
pop
iret
xor
sub
in
xchg
int3
mov
pop
push
xchg
call
ja
loope
add
out
cld
pop
add
inc
lock
pop
out
fadd
lea
lcall
xor
popa
jmp
inc
repnz
sub
add
dec
fdivl
in
ret
lahf
pop
ss
push
in
or
outsb
dec
add
mov
cmp
adc
sti
icebp
xchg
mov
mov
adc
sti
hlt
mov
xor
leave
imul
adc
or
pop
cmp
jo
mov
mov
mov
loope
test
bound
imul
mov
xor
mov
mov
add
xchg
and
cwtl
call
sbb
mov
xor
sarl
fwait
mov
loop
les
inc
push
xorb
jae
mov
andl
dec
xor
js
test
dec
call
in
sub
add
cld
push
cltd
mov
adc
test
addr16
xchg
add
cmpsl
mov
push
xchg
shll
addr16
and
iret
push
aas
sub
pop
add
push
in
mov
cs
enter
out
gs
and
outsb
xor
and
inc
jbe
pop
or
outsb
dec
pop
cli
lret
lcall
push
ret
lods
addb
dec
nop
cmp
scas
fs
pop
call
lret
popa
inc
mov
xor
outsb
push
push
dec
pop
mov
mov
das
pop
fbstp
jno
push
andl
xchg
cmpsl
repz
mov
rol
mov
pop
jge
ja
pop
aas
lahf
cmpsb
jne
in
dec
sbbb
orl
xor
shl
lock
push
scas
sub
xor
std
pop
sbb
sub
nop
repnz
cwtl
in
sahf
sbb
xchg
or
movsb
mov
mov
ret
pusha
arpl
mov
mov
ficompl
inc
popa
and
into
mov
outsl
stos
mov
mov
incb
popa
pushf
adc
cmpsl
mov
je
pop
mov
lds
test
aas
test
jo
dec
dec
movsb
aad
or
sub
xchg
adc
add
cs
push
push
in
mov
repnz
xor
mov
lret
roll
fwait
xor
sbb
inc
cwtl
stos
or
inc
ja
into
lret
sbb
jbe
hlt
je,pn
insb
popa
xchg
mov
es
push
mov
enter
loop
sbb
hlt
clc
movsl
ja
jns
mov
sbb
cmp
test
jg
addr16
or
mov
lahf
push
fwait
ja
inc
fiadds
aam
out
push
les
xchg
fimuls
mov
cli
adcb
leave
push
jae
movsb
mov
cld
shl
pop
aam
fdivrp
mov
mov
int3
sarl
out
dec
into
jne
je
mov
out
andb
rorl
or
js
stos
pop
ret
into
lock
fidivrs
fadds
shll
lock
and
popa
outsl
lcall
cmc
fidivl
enter
push
stos
scas
outsb
sbb
cmc
js
nop
xchg
es
mov
push
inc
lods
add
push
popa
cmpsb
xor
sbb
int
push
and
inc
xchg
bsf
cmp
xlat
jg
nop
dec
stos
fidivrl
pop
push
test
stos
add
inc
je
dec
loop
shl
mov
cmp
inc
jns
xchg
ljmp
dec
sub
hlt
dec
int3
lods
out
ss
push
movsl
cmpl
jo
hlt
cli
jae
rclb
repz
lcall
cmp
and
push
push
hlt
les
pop
dec
push
les
pushf
jb
arpl
cmpl
jl
fs
and
test
cmc
mov
orb
adc
enter
in
add
mov
dec
cltd
fidivl
iret
xchg
sub
insl
jae
push
in
cs
aaa
xor
or
loope
in
mov
sbb
sub
orb
cmpsl
lret
cmp
pop
out
ljmp
in
pop
and
or
insl
int3
and
cmp
cmp
fiadds
aaa
add
rcl
inc
add
fnstcw
or
loopne
jno
data16
jns
dec
aam
adc
sub
cld
cwtl
insb
jo
sub
imul
leave
or
cld
pusha
and
sbb
sub
pop
ds
xor
fs
aad
or
cs
movsl
hlt
sub
xor
mov
pslld
cmp
xchg
cmp
testl
xchg
in
or
stos
out
ds
xlat
rorb
jge
test
mov
cmpsl
dec
sbb
lret
xor
pusha
mov
sub
cltd
adc
add
mov
add
push
incl
scas
push
push
ds
aad
pop
ret
inc
xor
js
jb
fisubs
faddl
sti
ljmp
subl
cli
into
mulb
xchg
or
outsl
pushf
xchg
leave
jae
in
out
fcoms
mov
xchg
sbb
scas
lods
fcmovu
lods
jo
je
xor
shrb
hlt
jle
outsb
push
cmp
out
mov
mov
mov
sbb
add
in
roll
je
mov
std
inc
lret
fdivs
sub
sbb
lods
dec
cmp
push
mov
or
add
cmp
leave
cmp
in
pop
lods
mov
addl
or
shl
mov
rclb
push
scas
les
push
ss
insl
dec
ret
stc
push
jge
and
cmp
lcall
mov
cmc
in
sub
dec
out
out
dec
lret
movsb
adc
movsl
lahf
stc
aaa
xor
loope
sub
int3
add
daa
mov
adc
add
dec
shll
out
inc
or
xchg
xor
arpl
push
xor
outsb
mov
mov
add
inc
shrb
int3
cmp
inc
add
cli
jae
push
mov
in
cmpsl
std
iret
mov
xchg
sub
arpl
cmpsl
int3
fwait
jg
mov
jne
dec
adcl
sbb
mov
xchg
xchg
pop
sbb
mov
sbbb
mov
ret
mov
xor
dec
fbstp
mov
aad
clc
xlat
cmpsb
mov
movsl
cmpb
lock
popa
cmp
or
pop
sbb
lret
and
fists
lock
xor
gs
insl
loopne
out
sub
mov
cmp
push
lds
es
dec
mov
dec
leave
jge
pop
lods
in
pop
xor
lds
add
shlb
ret
cmc
push
icebp
push
mov
fwait
lods
pushf
sbb
sub
dec
adc
sub
fidivs
cmp
xchg
push
xlat
sub
movsl
sbb
icebp
push
jbe
mov
je
adc
xchg
dec
call
callw
mov
push
mov
ret
sub
jne
and
inc
or
add
mov
insl
cltd
push
xchg
push
add
pusha
dec
lret
jo
gs
cmpsb
stc
push
and
cmpsl
mov
arpl
aad
repnz
xchg
push
fstpl
push
xlat
popa
aas
faddl
aas
fidivrs
shrb
or
pop
or
xor
xlat
fimull
mov
jg
fwait
cwtl
add
lock
lret
push
lahf
test
or
and
int3
jne
sbb
or
test
bound
sub
icebp
mov
sbb
xchg
lret
and
inc
pop
lds
aaa
add
mov
mov
mov
xchg
rorb
or
bsr
pusha
cwtl
incb
jb
pop
pop
sub
pop
cmp
mov
imul
xchg
aaa
push
cmp
inc
pushf
data16
push
je
arpl
cli
adc
mov
ljmp
add
jno
xor
or
mov
xor
add
mov
pop
repnz
into
incb
dec
mov
movsl
int3
cmpsl
cmp
loop
dec
mov
cmpsl
aaa
cmp
inc
lods
mov
testb
xchg
mov
add
sarb
insl
dec
or
movsl
pop
test
cmp
shrb
aam
cmp
adc
cmp
mov
loopne
xor
jmp
jne
in
xor
les
dec
shrb
push
mov
test
inc
sbb
mov
shll
imul
in
lret
dec
test
in
loop
movsb
sbb
ja
mov
jmp
pop
popl
stos
jg
int3
daa
sbb
test
lret
xor
xor
xchg
dec
push
jae
xor
stc
cmp
sbb
mov
xor
jne
dec
xlat
and
sbb
idivl
xor
notb
loop
xchg
pop
mov
icebp
pop
arpl
lcall
mov
fcmovnbe
mov
mov
data16
dec
insb
ljmp
sahf
mov
and
sbb
sub
mov
mov
cmp
cltd
subb
add
scas
pop
add
outsb
in
and
cmp
adc
xchg
push
push
out
testb
mov
lcall
sub
add
stos
sbb
ficoms
cwtl
mov
lcall
jmp
push
dec
aaa
adc
addr16
shll
dec
or
aam
and
imul
ja
scas
lock
insl
pop
je
out
push
mov
lods
mov
push
pop
aas
mov
jmp
out
mov
jnp
jl
jae
dec
enter
test
xchg
fdivl
std
or
pop
cld
sbb
and
push
arpl
mov
loop
push
pop
jge
daa
clc
std
ret
repnz
popf
sub
ss
cmpsb
fcmovb
cmpl
daa
dec
cmpsb
pop
push
adc
xchg
cld
push
call
int3
data16
js
inc
pushf
push
int3
shll
cmp
shll
dec
scas
movsb
fcmovnb
fsubs
cli
ret
push
fwait
test
dec
mov
dec
aaa
ss
sbbl
jae
aad
lret
mov
and
sbb
inc
inc
mov
movsl
das
sbb
xor
pop
or
xchg
popa
mov
movsb
loope
jno
icebp
push
jb
xchg
movl
inc
lret
aad
icebp
mov
test
xchg
adcb
dec
loopne
gs
repnz
ljmp
adc
adc
jmp
dec
imul
jg
imull
lods
or
js
pop
lret
jae
cld
outsl
into
aas
adc
sar
push
pusha
in
gs
cmp
inc
enter
or
and
mov
shll
lea
inc
int3
pop
jbe
ret
dec
pushf
sbb
mov
xchg
fidivl
fstp
adc
cmp
dec
lods
sub
gs
pmuludq
mov
xchg
adc
idivb
aas
or
adc
int
imul
fs
adc
adc
push
call
pop
sbbb
loopne
inc
mov
mov
aad
in
mov
rcll
and
mov
gs
jl
inc
outsl
push
cmp
add
cwtl
mov
js
mov
fistl
es
movsb
adc
adc
test
mov
js
loopne
push
cltd
jle
gs
jns
pusha
cmp
cmp
cld
cmc
shll
dec
pop
pop
xchg
imul
cmp
ret
pop
std
ja
or
ja
sub
mov
push
jp
loope
xchg
stc
push
je
cmpsb
push
scas
xor
xchg
pop
adc
and
add
push
xor
xor
xchg
shrb
jnp
or
mov
shl
lock
mov
nop
pop
adc
sub
les
xchg
and
jmp
test
insb
movsl
inc
lods
jl
jmp
mov
lcall
inc
fdivr
mov
inc
dec
pop
add
push
rclb
push
mov
aam
sbb
fcompl
inc
rol
ljmp
rolb
out
into
insl
mov
int3
test
gs
pop
fucomp
mov
adc
bnd
out
and
or
and
rcrb
dec
int3
dec
sub
push
fxch
out
mov
push
fcmovne
sbb
mov
xchg
arpl
jmp
shll
adc
addr16
adc
repz
push
mov
adc
push
hlt
loop
dec
jp
sub
test
repnz
push
pop
mov
mov
stos
aam
cmp
jne
sti
rclb
pop
sub
sub
stos
jbe
mov
xchg
xor
sub
mov
mov
xchg
mov
int3
cmp
mov
leave
lcall
scas
push
pop
sbb
out
push
sbb
hlt
jne
iret
aaa
add
jg
leave
pop
cld
mulb
movq
or
stos
mov
cmpsb
add
pop
ja
mov
daa
dec
push
sub
or
and
fstpl
ffree
cmp
into
sbb
add
dec
dec
jge
les
mov
scas
pop
ja
sti
daa
sahf
jg
fisubrs
mov
ss
sti
cmp
mov
dec
imul
mov
add
jo
cs
test
in
adc
jmp
mov
or
stos
ja
aam
xor
cmp
or
sub
dec
mov
xor
es
inc
xchg
enter
loope
mov
push
ja
cmc
fists
mov
fidivrl
cmc
scas
int
decl
mov
popf
bound
xchg
shll
in
dec
cmp
int
push
pushf
in
fsts
adc
push
sbb
push
xor
lcall
insl
or
fcompl
push
or
dec
xor
xchg
pop
movsb
adc
xchg
mov
insb
mov
and
shll
push
sarl
fs
mov
pop
push
inc
mov
pop
and
inc
ljmp
daa
mov
mov
pop
insl
int
or
sbb
xchg
dec
mov
pusha
jmp
orb
sub
xchg
and
nop
shlb
inc
pusha
lds
mov
pop
sbb
popa
fdivr
cli
inc
loope
notb
dec
test
adc
jo
pop
cmp
sub
cld
and
jge
mov
xchg
lods
fistps
aas
add
sti
pop
lahf
mov
mov
daa
fcompl
out
orb
out
push
in
push
lret
sahf
das
cmp
xchg
out
sub
mov
add
mov
xchg
adc
sti
out
inc
sbb
mov
and
adc
nop
aaa
push
negb
in
dec
mov
in
arpl
dec
and
lea
mov
or
mov
and
sbbl
daa
je
fsubrl
push
call
push
ljmp
jb
add
je
cmp
add
in
pop
mov
in
sub
push
enter
add
fisubrl
ret
fnstcw
add
cmpsb
test
jp
and
out
imul
fmull
push
int
inc
mov
jbe
add
aam
and
add
dec
mov
sahf
fstpt
cltd
add
cs
fsts
fnstcw
nop
loopne
mov
jmp
pop
xchg
fwait
sbb
les
ljmp
pop
sub
loope
orb
mov
and
push
mov
gs
mov
imul
cmp
out
jae
xor
xor
lock
das
mov
xchg
int3
jmp
sbb
fcmovnbe
out
je
xchg
adc
repz
push
inc
lret
lret
push
int
loopne
inc
hlt
incl
or
aam
xchg
es
sahf
push
leave
dec
xchg
fiaddl
rclb
inc
ret
insl
mov
add
fdecstp
and
xor
lret
lods
dec
imull
pusha
jmp
imulb
addr16
popa
cmp
adc
fwait
sbb
aam
jp
incb
mov
adc
loopne
cld
xchg
jecxz
fnsave
mov
enter
lods
aad
push
cmc
shll
imul
sbb
test
or
sbb
sbb
mov
xchg
aas
inc
imul
out
scas
lcall
xchg
xchg
in
jb
mov
cwtl
dec
popa
sbb
jnp
test
je
jbe
xchg
hlt
mov
or
daa
stos
jo
addr16
cwtl
mov
aad
popf
lock
push
xchg
xchg
daa
or
sahf
shrb
popf
inc
xor
dec
xlat
cld
dec
sub
cmp
inc
lods
sub
test
out
pop
fisubrs
gs
mov
ret
cmp
in
movsl
xor
jp
les
fistpll
stos
in
pop
aam
adc
insl
or
and
movsb
add
cmp
cltd
jno
imul
mov
push
outsl
mov
iret
cmp
jmp
jp
in
decb
adc
repnz
jae
mov
repz
in
mov
test
xor
and
ljmp
inc
leave
mov
sahf
and
fbld
frstor
dec
pusha
mov
sbb
addr16
adc
mov
mov
enter
cld
jg
mov
mov
push
and
jle
ds
les
enter
dec
das
adc
xchg
and
xor
mulb
dec
or
mov
outsb
push
mov
and
pop
mov
lods
outsb
pop
ficomps
test
test
cmp
nop
out
lds
dec
popa
add
mov
add
std
jo
sbb
mov
dec
ffreep
int3
mov
pusha
sbb
push
mulb
outsb
orl
push
data16
setl
adcb
dec
call
and
add
sbb
insb
jno
or
push
imul
or
fldt
mov
cmp
cltd
dec
dec
mov
icebp
xor
ja
outsl
sbb
bound
push
decl
rcrl
or
imull
bound
sub
js
xorb
pusha
mov
mov
inc
and
out
pop
jo
cwtl
ficoml
jno
daa
and
pop
les
insb
ret
leave
lods
xor
lea
mov
inc
and
push
inc
add
adc
aaa
cmp
scas
incl
mov
stos
outsl
push
inc
add
sub
jle
inc
mov
clc
xor
ds
lods
addr16
sub
out
imul
adc
loop
in
xchg
ljmp
mov
pushl
iret
dec
stos
into
imul
out
cli
sarb
int3
xchg
xchg
mov
shlb
mov
pop
test
add
ffree
das
xchg
mov
dec
cmp
psrlw
pop
mov
inc
xor
cwtl
mov
iret
arpl
sbb
sahf
shlb
xor
xor
lds
and
dec
popa
lods
es
int
xor
push
push
ja
adc
shl
clc
les
sbb
xor
test
int3
inc
loop
inc
mov
adc
fsubrp
xchg
cmpsb
fadds
jo
mov
sub
cmpsl
sbb
aas
and
push
mov
and
push
aam
in
pop
jb
hlt
sbb
bound
push
mov
out
stos
jb
movsb
popa
repnz
jns
gs
mov
arpl
and
push
insb
gs
lcall
fnsave
jnp
mov
adc
push
or
xchg
or
jb
mov
mov
add
pushf
cmp
inc
sub
in
dec
or
or
stos
into
daa
faddl
xor
push
or
jge
and
ss
sub
pusha
adc
mov
xlat
cmpsl
aad
inc
mov
pop
repz
sti
xchg
push
xchg
and
popf
lds
in
sub
mov
dec
lock
shrb
dec
sbb
dec
lock
clc
jo
sub
imul
jp
repz
in
rclb
or
stos
loop
stos
xchg
sbb
arpl
repnz
faddl
sub
mov
jnp
nop
rcl
stos
clc
cmpl
icebp
cwtl
add
in
adc
mov
push
mov
and
push
inc
mov
mov
and
mov
push
mov
movsb
in
mov
test
aad
andl
add
pop
pop
pop
jmp
cmp
mov
gs
enter
shlb
cmpsb
out
cmc
cwtl
into
pop
fwait
nop
cmp
repnz
negb
subb
adc
cltd
js
sbb
push
push
jle
ja
popf
adcl
into
add
push
xor
ja
pop
cmp
pop
leave
jnp
dec
into
daa
dec
adc
xchg
stc
sub
lods
push
in
cmp
loope
xchg
sbb
insl
call
jl
xchg
add
push
mov
lret
sti
sbb
xchg
stos
gs
out
scas
int
mov
push
and
adc
ror
hlt
inc
push
mov
mul
pop
int3
shl
cmp
sub
fcmovbe
mov
pop
xchg
dec
and
pop
popf
push
subl
mov
add
push
jne
push
jae
push
je
sbb
mov
lret
push
inc
jbe
jge
testb
cli
mov
ljmp
add
cmpl
jp
mov
inc
xor
jne
or
outsb
xchg
filds
jl
or
and
sbb
dec
inc
ret
mov
arpl
xchg
and
dec
das
outsb
push
xor
lods
fsts
adcb
fwait
rorb
sahf
and
jbe
jbe
cmpsb
lret
sbb
out
push
stos
test
jnp
iret
cs
sub
adc
dec
imull
pop
jnp
and
fldcw
dec
scas
jns
push
mov
mov
ss
fcmovu
enter
ja
test
pop
movsl
jle
repnz
dec
outsb
jecxz
ja
out
xchg
mov
mov
cmp
aaa
mov
sbb
mov
fisttpl
stos
mov
sub
push
shlb
shrl
arpl
inc
inc
ja
cli
int3
cmc
loop
insl
push
cmp
fsubs
test
push
mov
aas
jb
pop
mov
jb
xchg
gs
xchg
fld
mov
jecxz
fwait
loop
sbb
sub
sbb
pop
pop
mov
and
inc
fnstenv
jbe
or
pop
jbe
push
cld
les
lret
popf
push
adc
loop
push
popl
mov
xor
push
mov
sub
adc
xlat
jbe
es
jl
cs
jns
pop
xor
cltd
sbbl
lahf
xchg
outsl
and
iret
loop
jecxz
cltd
xchg
aaa
addb
mov
adc
push
enter
sbb
pop
loope
js
cmp
jo
lds
int
pop
xchg
push
icebp
test
lds
test
push
push
lods
mov
cmp
je
pop
mov
ss
cmp
nop
scas
cmp
sub
in
sbb
xor
data16
test
mov
stc
jge
cmp
adc
adc
push
or
jg
add
push
loopne
jmp
xchg
and
pop
aad
sub
mov
js
nop
sbb
jne
mov
sbb
mov
dec
inc
in
rol
inc
add
lds
xchg
cs
neg
jne
mov
inc
ret
xchg
jl
pushf
xchg
dec
xchg
popfw
stc
dec
test
and
popl
xchg
pop
sbb
mov
lods
insl
or
stos
lret
and
scas
loopne
pop
leave
mov
mov
lods
cmp
xor
pushf
mov
pop
or
push
push
fisttpll
hlt
fistpll
inc
loop
fwait
adc
mov
xlat
mov
mov
xchg
std
mov
movsb
sahf
cli
dec
leave
or
mov
pusha
add
mov
andl
push
pop
std
sbb
loopne
mov
fmull
adc
in
arpl
or
fbstp
addr16
pop
dec
pop
adc
lds
sbb
ret
dec
loop
or
scas
leave
xchg
loope
sbbb
mov
outsl
jae
inc
jns
inc
mov
lcall
jp
pop
rolb
js
add
addr16
fsubrs
xor
sub
hlt
imul
mov
andl
and
gs
xor
ficoms
inc
aas
or
xor
int
mov
xor
jb
add
pop
adc
adc
xor
mov
mov
mov
xor
cmp
or
std
mov
cmp
test
popf
xchg
rcrb
lret
adc
call
lds
fwait
ret
xor
jmp
shl
cwtl
and
ljmp
push
sbb
mov
xchg
outsb
add
lcall
push
fcmovb
movsb
fbld
xchg
mov
rcr
nop
xor
jbe
stc
int3
sarl
push
sbb
andl
arpl
aam
lret
cs
pop
mov
add
sbb
mov
nop
inc
loopne
adcb
and
push
mov
dec
or
xchg
mov
aaa
jns
jg
jge
pop
popf
inc
cltd
fisttps
pop
push
fldcw
adc
rcrl
movb
mov
dec
das
lret
test
mov
movb
mov
xchg
loope
jb
sahf
push
dec
mov
icebp
ret
mov
bound
jmp
into
nop
lods
ret
sub
dec
test
adc
les
dec
xchg
sub
cmc
gs
jl
push
pop
hlt
rclb
mov
in
in
addl
fdivl
arpl
idivb
xor
xchg
leave
add
sbb
ljmp
adc
in
lods
or
xchg
mov
or
add
pop
cld
test
xlat
inc
adc
cmp
ss
fs
mov
push
or
repz
sbb
dec
sbb
jae
in
ds
push
into
in
xchg
das
mov
adc
jae
pop
lret
push
adc
ja
sbb
xor
aas
insb
nop
jecxz
call
mov
movsl
js
jnp
arpl
popa
mov
mov
mov
mov
fldl
outsb
leave
popa
mov
sub
lret
dec
sub
dec
push
push
pop
mov
movsl
dec
rorl
cmpsl
and
or
adc
mov
add
push
test
bound
mov
and
push
and
push
pushf
aas
repnz
mov
sahf
dec
popf
sub
outsl
mov
sar
push
cld
dec
mov
fbstp
rcrb
cld
mov
out
mov
lret
adc
jecxz
insb
jbe
in
scas
push
movsb
or
imul
lret
loopne
jl
inc
jne
daa
mov
in
mov
lret
sbb
lods
hlt
inc
sti
bound
jge
jo
push
mov
lock
scas
jae
jns
push
inc
mov
test
push
outsl
push
pop
leave
cmp
ds
xchg
mov
xchg
aas
push
clc
adc
mov
js
sub
rcrb
imul
aaa
test
in
pop
add
cltd
cmp
out
pushf
repnz
fistpll
stos
les
orb
xor
divl
inc
enter
mov
stos
outsl
cmpsb
in
iret
pop
jg
inc
leave
jnp
nop
fisubl
cmp
or
push
jg
lods
jl
mov
push
jl
xchg
cmpsb
sahf
mov
jg
inc
callw
pop
imull
mov
pop
stos
outsb
pushf
repnz
in
mov
jne
mov
mov
cld
xor
cmc
push
aam
ljmp
adc
push
rorl
cmpsb
ret
insb
dec
sub
xchg
and
ljmp
icebp
lods
and
push
xchg
mov
xchg
cmpsb
inc
mov
push
pop
test
add
lret
clc
fsubrs
loopne
sub
sbb
cld
rcrl
pop
pop
ljmp
mov
or
inc
push
in
jno
sub
pop
inc
push
mov
and
add
int3
mov
xchg
lcall
push
or
cmp
mov
inc
rorl
or
mov
das
xchg
iret
or
dec
rcl
dec
pop
dec
enter
jns
sub
lock
or
fidivrs
das
sbb
xorl
add
jl
mov
mov
loope
sub
movsl
jle
out
insb
test
iret
aas
mov
out
test
xchg
mov
out
mov
cs
sbb
push
mov
inc
push
mov
fists
addb
icebp
and
mov
fisubrl
sbb
notb
mov
nop
sub
xchg
enter
xor
mov
jge
inc
push
mov
outsl
sub
xor
dec
inc
or
lcall
repnz
jbe
cld
test
pop
or
outsb
jb
int
push
dec
and
fs
repz
into
or
push
mov
mov
fisttpll
ret
es
scas
mov
mov
mov
inc
jae
mov
sub
lcall
loope
sub
jmp
rcl
mov
dec
fidivrs
sbb
adc
dec
mov
xchg
jb
test
mov
movsb
push
cmp
std
adc
inc
ja
sub
inc
dec
ret
inc
xor
leave
notl
inc
lea
arpl
mov
xor
mov
fstl
adc
jns
dec
decl
inc
in
cmp
inc
cwtl
adc
push
ret
ret
inc
dec
mov
push
sub
and
ficoms
xchg
xchg
push
loope
scas
jmp
sbb
sahf
jmp
xor
xchg
and
pop
outsl
adc
and
cltd
mov
adc
clc
outsb
out
cmp
movsb
add
jnp
pusha
rorl
sti
inc
fnstsw
int3
xchg
lret
dec
adc
push
jg
lds
pop
mov
sarb
test
jmp
or
xor
outsb
fistl
adcb
push
inc
in
mov
or
mov
dec
mov
inc
fisubs
mov
mov
popa
scas
ds
cmpsl
in
pop
jae
push
mov
dec
in
and
or
insl
pusha
scas
in
loop
xor
xlat
scas
dec
and
pop
mov
test
push
icebp
cmpsl
inc
pop
add
or
xchg
fcomps
and
cmp
mov
cmp
jg
int
jmp
mov
leave
scas
into
ss
push
insl
sub
push
adc
stos
imul
adc
push
adc
or
adc
mov
xchg
sti
test
or
adc
enter
aaa
in
int
cmp
adc
insl
rolb
inc
rorb
push
jno
xchg
mov
pop
push
out
dec
repz
fucomi
int3
out
jns
adc
fmull
mov
xchg
divb
insl
ss
out
ficomps
push
pop
rcl
or
lock
fdivl
cmp
daa
insl
sub
pop
cltd
jns
push
push
ljmp
add
andl
loopne
repnz
adc
loop
mov
push
inc
push
fnstcw
adc
out
clc
push
lea
pop
rclb
das
push
pop
cltd
push
inc
pop
sub
les
xchg
in
dec
lcall
test
cmpsb
or
fbstp
ds
jecxz
adc
push
and
push
jl
aaa
rcll
test
lods
mov
xchg
scas
mov
dec
cld
rcr
and
xor
ljmp
mov
aas
dec
std
jp
lock
and
sbb
lcall
test
std
ror
icebp
jl
mov
test
pop
push
jb
test
or
jnp
push
aad
hlt
add
inc
mov
xor
or
repz
xchg
pop
xor
lret
or
and
push
xchg
adc
ret
hlt
mov
mov
adc
sub
mov
add
adc
mov
js
sbb
int
mov
add
xchg
jmp
xor
loop,pt
js
popa
mov
lods
rorb
popf
lock
out
bound
ffreep
rcll
dec
xorl
mov
pop
mov
cld
test
cmp
xlat
jmp
std
dec
push
inc
std
enter
cltd
cwtl
cmp
cmp
cmp
push
fs
add
pusha
jge
pop
sbb
and
stc
lea
insl
mov
lahf
dec
aam
sub
stos
mov
leave
sub
fwait
mov
and
mov
test
fcmovbe
or
mov
xchg
adc
mov
sbb
test
leave
push
lcall
aad
push
adc
out
adc
xchg
in
dec
mov
and
and
imul
ja
pop
dec
lret
lds
hlt
ret
push
orb
iret
mul
jp
pop
data16
pushfw
dec
xlat
jg
arpl
jecxz
push
mov
ret
add
xorb
dec
insb
dec
loope
stos
dec
sbb
dec
dec
or
inc
lods
movsl
stc
pusha
std
cmp
ja
mov
xor
iret
xor
push
xchg
push
into
testb
pop
sbb
mov
sub
xchg
dec
fldenv
test
dec
pushf
imul
inc
lock
mov
and
mov
ret
aam
fisttpl
pushf
rorl
push
xchg
xchg
test
push
jno
push
clc
inc
xchg
ror
adc
sti
or
imul
or
mov
cwtl
dec
lock
mov
mov
lcall
shrb
sbb
sub
mov
aaa
push
cmp
lcall
jae
hlt
das
movsb
cmp
cmp
stos
mov
mov
dec
push
add
test
addb
out
mov
inc
dec
and
ss
dec
push
rcll
xor
or
leave
notb
jo
and
ljmp
jne
pop
inc
out
icebp
push
outsb
push
fdivrl
push
mov
mov
fstps
xor
cmp
ss
cmpsl
jae
sub
and
ret
xor
push
inc
iret
push
shrb
sbb
and
push
cltd
push
lahf
pop
mov
sub
in
shlb
cmp
ljmp
add
insb
stos
dec
test
pop
movsb
sarl
cmpsl
test
mov
fistl
shll
js
shrb
lock
pop
sbb
mov
xlat
jecxz
lea
cmp
jae
lea
in
lahf
pop
bnd
jae
adc
scas
lock
xchg
push
cmpsb
test
jo
sbb
testl
pop
xchg
and
loop
ja
stos
mov
insl
repnz
fisubs
inc
out
xlat
pop
test
jnp
ds
hlt
xchg
jle
and
cmpsl
mov
call
jle
pop
inc
push
cmp
data16
insl
xor
out
sbbl
sar
shlb
les
mov
mov
fs
cmp
subb
adc
in
jno
mov
xor
jo
adc
sub
push
sbbb
rorb
dec
and
in
xlat
pop
rcll
sarb
fildl
jp
mov
cmpb
jae
pop
in
sarl
mov
mov
add
mov
mov
lret
inc
aaa
xchg
mov
sahf
and
sbb
lods
xor
rorl
movsl
out
jle
add
daa
push
jge
out
mov
sub
push
movsb
ds
lods
xchg
lea
icebp
xchg
cli
cmp
dec
ret
lock
fsubrs
aas
xor
call
or
jp
xor
jne
scas
orb
push
push
jb
into
and
push
test
sbb
adc
les
in
adc
ja
stos
pop
divl
mov
sub
out
loope
ret
xor
divb
adc
push
loopne
bound
adcb
cmpsb
popa
outsb
xor
scas
mov
add
movsb
dec
pop
cmp
xor
mov
xor
push
jno
pop
scas
and
mov
mov
ja
call
out
cs
repz
sub
cmc
or
mov
and
in
outsl
out
mov
mov
xchg
xchg
scas
mov
cwtl
mov
fmull
mov
add
dec
sub
adc
adcb
xchg
sbb
in
imul
xor
enter
gs
icebp
xchg
mov
pop
and
int
adc
push
clc
mov
js
test
dec
daa
mov
sbb
push
sbb
add
int
xor
dec
mov
pop
lret
cld
stc
jmp
xchg
sbb
xor
addr16
popf
sub
add
pop
dec
sub
bound
mov
and
inc
xchg
jmp
pop
addb
or
loop
iret
in
lcall
add
mov
push
das
mov
int
adc
mov
and
mov
xchg
pop
test
push
out
repnz
mul
into
xchg
pop
pop
adc
testl
je
inc
fs
sti
dec
and
notb
imul
mov
mov
movsb
insb
push
mov
and
movsl
dec
xchg
jo
fmuls
lods
pusha
test
mov
mov
jo
jl
sbb
insl
pop
movsl
iret
cmp
call
mov
xchg
mov
mov
push
test
fldenv
scas
jmp
or
or
loopne
ficomps
std
cmove
psrld
pop
mov
xchg
jnp
movsl
sub
inc
in
insl
pop
push
add
popl
orb
imul
test
leave
in
mov
dec
flds
xchg
out
pop
in
call
cli
push
cmpsl
loope
scas
jmp
mov
mov
addr16
or
pop
cli
icebp
adc
sub
cmp
roll
cmp
mov
and
push
mov
add
in
adc
cmp
out
mov
int3
dec
sbb
push
pop
sub
xor
rcrl
or
xor
in
pop
into
xchg
add
leave
sub
test
sbb
pop
icebp
mov
and
cmpsl
andb
or
icebp
inc
shlb
arpl
push
fdivrp
neg
mov
jns
shrb
hlt
mov
dec
add
leave
movsb
jbe
ret
and
cmp
mov
dec
sub
movb
mov
mov
in
push
insl
lahf
enter
clc
mov
sbb
in
loope
dec
or
icebp
dec
out
xchg
test
test
inc
xor
test
test
pop
movsb
dec
jecxz
mov
popa
pop
iret
xchg
adc
add
test
aaa
testb
lds
test
fldl
jo
inc
roll
fmull
add
adc
jno
lret
jl
jo
dec
imul
std
fwait
std
and
rolb
inc
ljmp
mov
movsb
enter
pop
shlb
dec
out
xor
and
bound
aam
jbe
imul
or
mov
mov
dec
cli
sub
xchg
dec
mov
sti
cmpsb
mov
pushf
enter
dec
xchg
lret
inc
cli
enter
dec
push
jg
or
shrb
cmp
pop
out
ffree
cmpb
aas
adc
sub
pushf
test
mov
sub
pop
jno
div
fdivp
outsb
mov
pop
mov
add
pop
sbb
sbb
pop
jecxz
xor
ror
or
out
cmp
addr16
ds
mov
test
ret
mov
jbe
inc
outsb
push
lret
sbb
stos
dec
movsl
mov
outsl
jecxz
dec
sbbb
mov
dec
cld
fs
clc
jle
dec
mov
test
jne
jl
leave
cwtl
push
or
fsubrs
jae
pushf
rcrl
inc
sub
mov
pop
stc
jnp
push
call
mov
pop
stos
dec
fsubl
jp
pop
jmp
pop
inc
mov
ficoml
or
sub
push
das
ljmp
mov
xor
and
cmpb
xor
stos
fstpl
xchg
mov
mov
lret
push
stc
out
js
lea
sbbb
push
or
mov
pop
sbbb
cmp
dec
jbe
fs
mov
or
sub
or
ret
nop
mov
popa
dec
icebp
push
mov
or
ja
lods
das
and
mov
jne
pop
inc
adc
fmull
xorl
jmp
xchg
xor
mov
insl
dec
into
or
insl
roll
add
cmp
sbb
lret
cmpsb
jo
pop
inc
adc
push
xor
dec
out
lret
hlt
mov
sub
xchg
push
std
daa
jle
mov
xchg
sbb
clc
test
push
or
mov
xor
mov
lcall
cmpsl
jp
pop
das
pop
movb
pop
iret
jp
jmp
lods
mov
fisttpll
sar
cltd
or
push
push
sub
repz
pop
push
lahf
cltd
adc
cmp
scas
mov
pop
pop
inc
pop
das
ljmp
test
pop
ds
in
lsl
jle
xchg
or
sub
sbb
imul
xor
cmp
dec
nop
jns
adc
test
fwait
cmc
inc
adc
xor
nop
jno
and
jl
scas
or
aas
sbb
in
insb
fs
lahf
inc
jle
sub
pop
cltd
pop
sub
and
mov
jecxz
or
shl
mov
pusha
jge
fadds
aad
inc
xchg
call
and
xchg
lock
lret
adc
test
add
lret
mov
add
sbb
sbbl
sub
and
inc
js
pop
mov
repz
stc
popa
les
inc
jo
inc
shlb
aad
pop
call
mov
sbb
jmp
ja
stc
or
dec
jg
aam
mov
imul
scas
loope
fidivrs
and
fisubrl
jp
dec
push
add
push
cmp
inc
push
ficoms
scas
ja
fidivrs
xchg
lods
mov
push
dec
lea
dec
xchg
cmp
aas
cltd
pop
mov
mov
stos
rcrb
xlat
cmp
add
ficoms
and
xchg
jno
nop
push
mov
fldl
int
ret
jb
cmp
mov
mov
loope
in
mov
clc
fnstenv
cmp
cld
push
repnz
aaa
outsb
test
je
mov
and
pop
xchg
sahf
mov
cli
or
bound
jae
mov
xchg
js
lds
cltd
dec
out
adc
dec
jb
adc
pop
sbb
adc
mov
push
or
adc
pop
ja
jns
stos
xor
fldl
mov
cli
mov
cs
jo
dec
cmp
cmpsb
and
jmp
xchg
leave
cmp
orl
dec
pop
push
out
stos
fstps
cs
mov
and
or
cltd
mov
push
jae
outsb
xlat
out
push
add
repz
aas
shlb
mov
mov
cld
push
push
sbb
addr16
lds
jns
fsubrl
adc
filds
mov
pusha
dec
jno
fdivrs
and
jns
mov
and
int
cmpsl
pop
cmc
mov
mov
mov
jb
cmp
cs
ja
jecxz
out
cltd
dec
xlat
mov
xchg
imul
xor
mov
imul
lock
or
rcrb
and
dec
push
nop
out
cmp
jns
dec
lahf
inc
jns
test
das
pop
mov
push
ja
and
testl
adc
pop
dec
in
xlat
inc
clc
push
push
test
jle
jae
cmpsl
rcl
jmp
and
das
jo
out
and
ja
call
ss
out
dec
sub
push
in
push
in
orb
sub
sub
data16
scas
mov
xlat
lods
out
dec
rorl
stc
mov
mov
std
cmpl
adc
jbe
loope
decb
test
sub
pop
test
scas
ljmp
mov
sbb
sub
js
mov
xor
ret
xchg
inc
mov
xor
ja
cmp
push
loop
out
or
mov
ret
pop
inc
cli
xchg
les
jns
rcrb
dec
and
movd
lcall
iret
push
lock
mov
sbb
jl
cwtl
cmpsl
data16
bound
dec
jb
cmp
jge
cmp
aas
xor
cli
les
mov
cmp
xchg
adc
packuswb
mov
jo
add
jmp
es
ljmp
cmpb
and
sti
push
mov
dec
test
nop
add
fiaddl
dec
xor
push
ret
gs
mov
xchg
adc
dec
lds
adc
fimull
in
xlat
aas
adc
fcoml
imul
in
add
jl
push
pop
hlt
fs
iret
inc
pop
mov
aaa
daa
mov
movsl
xor
stos
xchg
cli
data16
into
ja
in
jecxz
adc
mov
sub
outsb
scas
into
jl
inc
imul
dec
mov
cmp
push
xchg
fsubrp
push
jecxz
jl
xchg
mov
fldt
sub
lods
stc
jae
pop
loopne
pop
xor
fcomps
cmc
iret
cli
xor
fidivrs
add
pop
rorb
push
xchg
sub
jne,pt
mov
int3
aad
mov
sub
or
adc
loopne
push
push
xor
inc
mov
nop
add
jno
aam
dec
shll
repz
and
adc
insb
pop
jge
in
dec
out
das
loope
testb
fisttps
out
int
iret
lret
pop
je
jecxz
gs
popa
stos
dec
lcall
inc
test
adc
in
mov
mul
jb
cwtl
out
pop
lock
notb
push
push
test
adcl
out
sub
jne
sub
hlt
sbb
fadds
leave
or
inc
xchg
out
adc
mov
or
incb
jp
aad
mov
std
jne
loopne
dec
xor
lcall
add
fldl
rorl
jae
cld
pop
mov
cltd
add
loope
xchg
lahf
cmp
jae
fmull
imul
in
mov
leave
test
add
xor
loopne
sbb
xchg
mov
or
mov
out
mov
inc
and
jns
sub
pop
in
push
inc
fsubrs
inc
loope
dec
daa
into
fucompp
cltd
xchg
lods
push
cmpsb
xchg
shrb
shrb
add
out
loop
dec
outsb
or
sbb
enter
adc
dec
lret
sbb
add
pop
negb
loope
mov
jecxz
insb
ljmp
dec
xchg
and
inc
in
cld
rcrl
mov
arpl
imul
jmp
xchg
lret
xchg
js
loopne
push
stc
outsl
jns
in
int3
stos
push
sbb
cmp
lock
xchg
mov
push
jp
and
jle
sub
or
mov
int3
aas
xchg
aas
das
inc
into
lods
pop
xchg
push
mov
js
push
lock
sub
or
popl
loop
arpl
mov
push
mov
jo
mov
and
cmpsb
push
adc
cmp
mov
xor
pop
xchg
fstpl
lds
inc
jp
sbb
sbb
add
jl
sarb
cmpsl
push
pop
or
inc
push
hlt
stos
int
mov
loopne
clc
lahf
imul
incb
addr16
outsl
mov
mov
lock
mov
mov
idiv
and
add
inc
jmp
xor
bound
xor
cmp
rorb
inc
das
scas
stos
jnp
out
fistl
stos
mov
imul
xor
sub
pop
add
sub
into
popa
popa
cmp
cwtl
adc
cmp
movsb
xor
xchg
getsec
movsl
ljmp
sub
shr
out
push
sub
xchg
fidivrs
test
xchg
push
je
add
push
roll
negb
js
mov
mov
push
jp
das
cmp
or
insl
inc
ljmp
push
imul
jmp
mov
mov
jecxz
cli
lea
cli
mov
xchg
mov
es
repnz
add
jno
mov
imul
sbb
fisubs
rorb
xchg
cmp
aad
pop
xchg
jbe
dec
jne
and
popf
add
pop
outsb
sub
mov
popa
jnp
xchg
dec
imul
fidivl
add
data16
sub
sbb
fchs
flds
sub
cld
loope
ljmp
jno
and
jae
ja
in
cmp
mov
ret
xchg
pop
xchg
lahf
jge
sbb
aas
sub
pop
movsb
call
aaa
outsb
add
mov
aaa
xor
adc
stc
or
inc
and
daa
mov
push
jle
lret
push
xchg
js
adc
adc
sti
cmc
popf
xor
mov
mov
shrb
daa
adc
mov
sbb
addr16
inc
lods
jl
mov
or
lock
cmp
mov
enter
jg
adc
in
adc
sub
add
clc
mov
jne
xchg
shrb
lcall
test
jmp
repnz
pop
lods
adc
pop
loopne
in
jg
mov
lods
xchg
cld
lock
dec
or
push
lods
icebp
or
es
jl
ljmp
or
jge
cld
xor
inc
leave
mov
stos
negb
in
jns
sarb
push
jmp
sti
or
roll
jnp
mov
sti
sbb
dec
int
mulb
jmp
das
pusha
inc
addr16
movsl
xor
mov
jns
cmp
xor
or
shrb
inc
shl
aam
sbb
lds
sbb
inc
lcall
and
scas
xor
cmp
xor
mov
incb
sti
jns
cmp
test
mov
or
sub
push
dec
mov
mov
mov
leave
mov
mov
xchg
pop
pop
mov
stos
xchg
or
pop
mov
mov
cmp
testb
and
mov
movsl
sti
sbb
adc
and
inc
inc
addb
cld
lods
nop
adc
sbb
push
ss
sbb
stos
cmp
sbb
adc
push
imul
adc
xchg
xor
movsl
fnstsw
mov
xlat
mov
daa
test
push
cmp
lods
and
mov
mov
add
fsubr
xor
pop
cmp
mov
and
push
pop
pop
jo
mov
fsubl
loop
adcl
pop
xchg
and
popa
sarb
popf
pop
mov
std
inc
enter
outsb
sarl
pop
stos
movsb
and
fstpt
xor
push
fsubs
add
cld
inc
mov
rcl
mov
in
xor
js
fbstp
lahf
clc
xorl
imulb
jnp
mov
stos
xchg
add
xor
aam
or
xchg
and
stc
es
fidivrs
jge
push
ret
bound
and
jp
jp
xlat
sarb
or
adcl
xchg
ret
es
loopne
mov
xchg
jno
sub
mov
clc
jl
lcall
jne
dec
stos
jp
mov
in
stos
cmp
ret
push
sub
adc
lods
jp
jbe
sbb
inc
in
jle
dec
aad
dec
add
dec
mov
mov
pop
inc
nop
dec
mov
out
add
xchg
mov
sarb
arpl
daa
xor
push
nop
add
xor
add
xor
pmuludq
push
sbb
mov
lret
adcl
push
je
lock
dec
adc
les
mov
cltd
loope
sahf
fwait
add
test
xor
and
jl
lahf
mov
pop
xlat
inc
and
pop
cmp
aam
xlat
and
or
cmpsb
or
cmp
inc
push
aaa
aas
ret
xchg
enter
jno
popa
sahf
imul
in
jl
into
shlb
out
lods
hlt
jno
int
loopne
inc
jno
aam
mov
pop
adc
mov
mov
push
fucomp
in
sub
insb
icebp
decl
stos
leave
cmp
dec
leave
hlt
cli
inc
mov
call
dec
dec
aad
cmp
sahf
adc
xchg
lea
inc
fs
out
push
mov
xor
push
js
ljmp
sbb
mov
mov
add
pop
das
and
es
and
sub
xor
dec
and
std
insb
jl
movsl
fldcw
mov
sbb
cmp
inc
adc
insb
aam
orb
inc
shl
sbb
subb
pop
das
push
in
xchg
mov
adc
in
lds
rcrb
mov
sub
mov
adc
add
sbbl
mov
mov
xchg
add
pop
enter
aaa
xchg
and
divb
dec
repnz
rolb
ret
xlat
push
out
pop
out
mov
or
xchg
inc
xor
cwtl
adc
mov
call
ret
imul
rcrb
sbb
dec
dec
fldt
push
and
iret
ds
into
test
jmp
pop
mov
pop
in
pop
test
fmull
or
pop
lret
gs
fisttps
clc
cmpsb
cli
fcomip
es
iret
push
and
mov
xchg
int3
fsubrl
push
ljmp
cmp
mov
push
cld
ss
xchg
addb
or
push
lods
lods
dec
das
movsb
jge
xor
ret
xchg
xchg
lods
adc
sub
ja
aaa
int3
je
adc
inc
and
jnp
cld
pop
fidivrs
std
mov
sbb
sub
xchg
mov
movsl
lcall
or
push
jecxz
and
negb
push
jnp
adc
inc
xlat
in
popl
dec
xor
push
push
dec
cs
pop
cwtl
test
push
fwait
inc
pop
iret
cli
subl
jge
in
aad
ss
nop
jp
cmc
outsl
or
lcall
add
movsb
sbb
iret
out
cmpb
xor
sub
xor
aaa
pop
aaa
sbb
imul
xchg
je
imul
ss
sub
xchg
xchg
pop
fnstenv
jbe
loope
xchg
inc
cmpsb
cmp
adc
idivb
enter
arpl
cmpsl
sub
movsl
xor
sbb
dec
fisubrs
pop
add
cs
orb
inc
fs
pop
nop
push
xor
je,pt
jmp
adc
cwtl
mov
sbb
push
outsl
jae
and
push
and
pop
nop
loopne
jmp
fisubl
lret
xchg
shll
jge
adc
jl
dec
mov
add
add
inc
cmpsb
sub
daa
hlt
aas
cmp
push
add
jbe
out
fnsave
jns
dec
and
xor
lret
in
cwtl
mov
std
push
frstor
aaa
mov
adc
xchg
in
inc
pushf
adc
cmp
js
sarb
and
lock
sarb
sarb
jmp
push
add
xorl
or
ficompl
pop
pusha
repz
ret
scas
loope
das
jecxz
repz
mov
cs
inc
lahf
ret
dec
sbb
insb
push
aad
or
and
inc
jns
leave
and
inc
out
cmp
push
lea
int
test
sub
lahf
imul
xchg
or
loope
fisubrs
outsb
jl
aam
dec
in
lds
cmp
inc
inc
inc
and
or
pop
xor
sub
cld
sub
dec
loopne
mov
out
lods
dec
pop
jp
dec
lret
int
cmp
jnp
xchg
xchg
sbbl
imul
push
in
push
data16
cmp
push
cmpsl
mov
pushf
stc
iret
xchg
popf
push
sbb
pushf
enter
aas
push
mov
nop
sub
test
jle
fs
xor
inc
pop
add
sbb
icebp
jge
repnz
or
in
sbb
cmp
inc
inc
enter
xchg
pop
shll
lods
push
icebp
adc
and
adc
rorb
add
mov
inc
xor
pusha
daa
ja
mov
xor
mov
cmc
and
ljmp
mov
push
mov
test
xchg
adc
xchg
dec
test
clc
jnp
cmp
pushf
in
sbb
cli
xchg
jmp
and
stos
or
sub
int3
xchg
dec
pop
lahf
push
xor
pop
dec
xchg
jns
test
mov
pushf
xchg
cmpsb
es
adc
push
pand
jg
mov
or
scas
sbb
repz
out
xchg
js
mov
inc
scas
adc
inc
xchg
fisttpl
cmp
out
cltd
xor
push
add
popf
jmp
mov
pop
addb
xchg
jle
icebp
into
add
adc
cltd
sub
fucom
push
cwtl
mov
pop
jmp
xchg
mov
jo
ror
call
cmp
pop
xchg
decb
scas
pushf
xor
in
xor
out
call
in
sub
in
add
push
int
mov
daa
inc
mov
fidivrs
cmp
stos
mov
call
jbe
ljmp
lret
adcb
testb
pop
sub
xor
ds
xor
inc
cmp
stos
gs
jge
mov
mov
add
rolb
adc
dec
repz
int3
test
cmpsb
push
aas
mov
mov
mov
or
xchg
add
adc
or
xchg
cmpsl
inc
or
dec
and
ret
daa
stos
lahf
push
loopne
push
fwait
push
xchg
xchg
data16
dec
std
cmpsl
xchg
je
jecxz
call
out
das
sbb
xchg
sbb
stc
popf
int
imul
mov
loop
push
inc
jle
pop
mov
popf
dec
sbb
enter
aas
sub
jo
jne
negb
cmp
add
mov
mov
add
pop
dec
icebp
or
ja
jecxz
jl
mov
mov
and
es
stos
iret
jbe
mov
mov
icebp
push
xchg
scas
pop
cmp
or
in
and
push
rcr
adc
sbb
cmc
je
adc
dec
mov
jne
data16
gs
fbstp
mov
sahf
mov
mov
stos
sbb
popf
sahf
mov
movsb
mov
fistl
into
xor
movsb
or
shrl
test
imul
jmp
adc
jg
sbbb
scas
sbb
jo
neg
xor
out
js
jne
stos
rcrl
loopne
in
jb
pop
aam
cltd
repnz
or
pop
mov
cmp
call
stos
mov
test
out
mov
jb
sub
mov
gs
sti
mov
or
pusha
aam
lea
std
mov
rorb
mov
dec
scas
idivb
nop
imul
pmullw
test
jp
les
movsb
sub
adc
fwait
sarl
mov
insb
cmp
pop
mov
push
repnz
push
sub
or
xor
loop
push
push
or
cs
inc
fmuls
nop
pop
xor
xor
jg
jbe
sub
andl
filds
mov
in
mov
add
lods
out
arpl
cmp
mov
push
ret
mov
lcall
push
jge
out
add
adc
inc
sub
std
xor
enter
push
stos
xor
pop
add
bound
cmp
sbbb
add
hlt
fcoms
mov
pop
jp
sub
mov
lock
sub
cmpsb
and
gs
xor
push
fwait
adc
add
fisubrl
or
leave
inc
mov
into
mov
int3
test
cltd
mov
and
out
mov
rcrb
js
psubd
lea
pop
icebp
popf
mov
jnp
push
add
push
out
mov
jge
sbb
cmpsb
adc
cmp
pushf
push
adc
add
dec
orb
outsl
enter
lea
repz
pushf
nop
push
lret
cmp
xor
test
push
mov
sub
in
shlb
fimull
lahf
sbb
sahf
loopne
push
xor
add
sub
shlb
mov
sub
ret
cmp
adc
jns
cs
fwait
sti
push
mov
lea
cmpsb
jae
pushf
mov
sbb
in
push
fildl
cmp
mov
sahf
out
mov
lret
xlat
pop
push
std
mov
lcall
sti
xor
lahf
icebp
test
lcall
popa
push
out
push
or
mov
in
mov
inc
adc
sub
xchg
pop
call
mov
aam
es
jmp
enter
stos
roll
add
lock
lcall
jp
cs
add
ficompl
mov
and
sahf
jl
sub
adc
adc
in
mov
lods
xor
sbb
and
mov
andb
add
and
int
jns
cmp
push
and
push
loope
enter
imul
aaa
je
and
sbb
push
push
jecxz
xchg
shr
bound
pop
popf
mov
push
xchg
movsl
pop
or
les
lcall
cltd
clc
adc
adc
mov
pusha
cmp
jle
adc
mov
imul
cmp
sub
out
call
mov
ds
iret
cwtl
cmp
and
inc
and
inc
ds
mov
mov
mov
arpl
vmovupd
gs
test
mov
mov
sbb
stos
cld
mov
aad
sti
shl
imul
jns
fs
scas
mov
mov
sahf
sub
out
nop
cmc
xchg
icebp
push
pop
stc
mov
inc
or
sbb
push
cmp
pushf
xlat
enter
mov
shll
mov
push
dec
xor
pop
stos
mov
adc
add
insb
xchg
sub
fstpl
pop
add
cmp
shlb
jo
stos
inc
lods
adc
sub
into
xchg
stos
cli
ret
xchg
stc
jmp
mov
jns
dec
pop
cmpsb
mov
nop
gs
push
or
loop
out
xchg
add
xchg
xor
xlat
pop
inc
cmp
jnp
gs
pop
dec
push
xchg
push
xorl
adc
leave
inc
push
add
mov
call
xor
or
mov
ret
fnstcw
xor
and
mov
dec
pop
inc
mov
and
cmc
mov
rorb
xor
push
test
ss
xor
push
xor
push
arpl
in
iret
ret
mov
mov
enter
cmpsb
lods
lods
mov
pop
jmp
cmc
xchg
adc
sub
sub
adc
mov
xor
mov
test
adc
sub
ja
add
mov
xchg
mov
nop
pop
dec
mov
dec
mov
fcomp
xchg
xor
pop
dec
mov
xchg
pop
repnz
jmp
jb
clc
out
adc
inc
push
inc
xchg
mov
xchg
cmp
test
pop
mov
sub
xchg
clc
test
lahf
dec
pop
loopew
pop
fdivrp
lock
sub
icebp
insb
imul
xchg
adc
ror
dec
sahf
das
sbb
mov
fldt
inc
xor
inc
mov
add
test
inc
ss
bound
mov
ds
adc
inc
push
push
fwait
inc
aas
cmc
lahf
lahf
enter
cmc
pop
jmp
sub
mov
xor
mov
lods
cmp
fldenv
xor
je
xchg
inc
cmc
movsb
imul
inc
xor
mov
rclb
jp
sub
pop
dec
lock
push
rcll
scas
jecxz
xor
test
push
mov
xor
pop
fisubl
aas
add
mov
lods
adc
push
xchg
ret
test
add
shll
lods
push
in
loopne
mov
fdivs
jb
jae
inc
ret
add
in
mov
jb
adc
shll
sbb
xor
stos
jmp
scas
xchg
dec
mov
mov
es
mov
cltd
les
pop
lcall
and
jbe
and
repnz
lds
pop
and
nop
jl
lahf
test
cmp
in
inc
mov
repnz
call
adc
filds
inc
lods
insl
adc
dec
flds
cmp
lcall
data16
jp
and
pop
push
loopne
adc
aad
sub
int
roll
mov
or
pop
insl
pusha
and
aad
mov
stc
or
mov
jmp
outsb
jo
xlat
sub
out
repz
fstpt
mov
int3
jb
shr
pop
addr16
push
jmp
or
in
repz
cwtl
mov
adc
mov
and
xor
pop
test
adc
test
pop
notl
adc
fcmovu
mov
leave
test
icebp
lret
adc
ret
mov
lea
pop
imul
scas
into
hlt
mov
aas
sub
dec
jo
inc
dec
scas
mov
fst
xor
xor
pop
and
insb
sub
lret
push
rcrl
movl
xchg
sarb
adc
jp
mov
cs
and
jecxz
sbb
push
repnz
outsb
stc
pop
int3
mov
sub
xchg
sbbb
imul
xchg
xchg
mov
mov
sub
xchg
fidivrl
cmp
or
loop
out
pop
sbb
pop
clc
dec
subl
in
movsb
mov
or
in
std
test
fsts
dec
push
xchg
or
es
xchg
xchg
nop
dec
jno
test
xchg
into
test
ss
push
mov
ret
mov
push
push
xchg
adc
fildll
ljmp
push
inc
das
sbb
xor
in
jae
fadds
in
sub
int
adc
mov
hlt
mov
mov
mov
jge
mov
test
xchg
or
inc
cmpb
adc
pushf
jno
xchg
insl
movl
inc
cli
push
and
fisubs
pop
cmpb
mov
das
xchg
or
adc
xor
cwtl
mov
sbb
and
mov
ss
mov
std
ret
daa
pop
xlat
jmp
add
fistpll
movsl
or
clc
xor
es
mov
adc
lret
inc
push
sbb
mov
repnz
fwait
sub
jno
enter
je
dec
xchg
orl
mov
push
adc
pop
leave
cltd
into
cmp
ljmp
mov
mov
adcb
inc
add
mov
mov
mov
mov
xchg
imul
in
scas
into
or
cmc
mov
jnp
mov
add
mov
shll
xchg
cmp
loop
mov
lods
sub
arpl
adc
cli
mov
enter
int3
xlat
mov
mov
imul
cmc
jbe
pop
xchg
popa
sub
push
push
mov
xchg
mov
pop
in
sub
inc
add
pop
shrb
jbe
ss
out
jbe
fidivs
xor
aam
icebp
fdiv
fwait
out
int3
cmpsl
inc
ret
shll
ret
cs
inc
adc
lods
call
or
imul
ja
int3
cli
mov
jno
int3
push
mov
xor
imul
js
rcr
xchg
filds
push
sub
mov
jp
in
stc
and
pop
mov
inc
test
mov
push
lcall
mov
hlt
mov
pop
icebp
cwtl
dec
dec
push
mov
lahf
jb
frstor
dec
iret
cmp
sbb
inc
mov
jmp
inc
pop
pop
push
pop
mov
iret
imul
mov
jecxz
cmp
add
lods
jne
stos
pop
lahf
arpl
dec
jg
adc
push
jle
test
aaa
enter
inc
nop
ret
jne
pop
mov
out
pop
gs
cmp
stc
push
out
js
sub
fsubp
cmp
jae
movsl
pop
inc
movsb
std
jg
cmp
jnp
xor
dec
fimull
call
insb
fistps
sub
dec
cmp
arpl
mov
push
push
cmp
sbb
adc
or
and
cli
dec
mov
jecxz
push
dec
push
roll
ljmp
jae
repz
popa
or
jbe
push
add
jb
push
stos
cwtl
xlat
ret
xchg
push
leave
addr16
push
mov
ss
mov
push
adc
shrb
or
pop
into
jo
or
mov
dec
cmp
push
inc
mov
xchg
push
jb
mov
lods
divl
pop
cld
clc
sarl
push
sbb
xchg
cwtl
xchg
or
pop
fsub
xchg
jb
stos
cmp
xlat
dec
dec
movsb
xor
xor
bound
sti
ljmp
nop
inc
push
fiadds
jnp
push
push
fistps
inc
out
mov
adc
or
xchg
cwtl
pop
add
ja
dec
jo
add
mov
pop
dec
lock
aas
fwait
xlat
rcll
mov
and
jmp
lods
popw
mov
pop
add
or
push
jle
ss
and
mov
push
cmp
cmp
sub
adc
mov
inc
push
add
mov
call
and
sti
adc
in
inc
and
stos
inc
mov
cmp
addb
or
std
cld
lds
xor
jge
nop
jg
fsubl
adc
mov
arpl
mov
lret
mov
repnz
mov
negl
adc
aas
cmp
mov
xchg
call
loope
lret
push
lods
push
fidivl
xchg
int
cli
cltd
jae
pushf
iret
iret
nop
cltd
push
faddl
aaa
ljmp
cltd
mov
sub
ja
shll
and
scas
jb
mov
dec
xlat
fisttpl
pusha
lret
jl
mov
mov
ds
icebp
ljmp
inc
shrb
adc
inc
sbb
cli
loopne
dec
popf
mov
jns
push
cmp
mov
repz
mov
jnp
and
mov
clc
mov
mov
push
mov
inc
aas
jae
pop
jmp
adc
das
mov
enter
and
fisubrs
mov
xchg
pop
pop
adc
sbb
inc
je
shlb
leave
inc
sbb
dec
js
ja
adc
sbb
jg
loope
mov
cmp
idiv
movsl
shr
mov
int3
jo
fadds
adc
pop
xchg
sub
cwtl
icebp
mov
sbb
fidivl
adc
outsl
mov
in
add
inc
dec
xchg
mov
sbb
int3
cltd
ljmp
xor
add
sub
mov
add
adc
call
pop
aaa
hlt
fs
shrb
aam
les
test
rorl
xor
or
dec
pop
inc
test
loop
sub
add
mov
popf
cmp
mov
jnp
cmp
test
in
add
mov
sub
jnp
mov
xor
inc
cli
push
xchg
imulb
icebp
outsl
xchg
mov
xor
pop
xchg
dec
int
lahf
push
les
insl
pop
dec
cmc
cwtl
or
sbb
icebp
mov
mov
mov
jae
xchg
xchg
pop
xor
pop
inc
enter
out
add
xor
mov
inc
dec
sub
push
lock
ss
adc
sub
ficomps
int3
outsl
mov
je
loopne
jb
push
add
adc
testl
push
xor
insb
mov
adc
sar
cmp
cmpsb
jne
outsl
jle
out
and
in
bound
pop
data16
gs
sub
xchg
aam
jmp
cmp
mov
movsb
dec
popf
sbb
in
add
in
jle
ljmp
loope
mov
pop
jb
test
fs
negl
jmp
push
or
mov
mov
cwtl
fs
mov
pop
jno
mov
addb
cmpb
fldcw
mov
xor
add
ret
ss
jmp
jecxz
dec
icebp
ds
mov
and
cmpsl
outsb
std
rorb
aas
mov
and
outsb
enter
add
mov
dec
js
or
mov
sub
pop
in
xor
push
cld
ljmp
adc
jb
sarl
mov
mov
cmp
scas
in
movb
in
xchg
rorb
mov
mov
std
cmpsl
insl
gs
xor
xor
testb
mov
push
inc
iret
ss
addr16
fidivrs
sbb
jns
in
mov
lcall
ljmp
cld
or
add
lods
repnz
ds
cmp
mov
sarl
jbe
cmpsb
cmovp
aad
add
add
aas
sbbb
add
add
mov
push
out
mov
xchg
popf
pop
repnz
pop
add
fstpt
sub
push
icebp
push
xchg
mov
mov
cmp
push
test
icebp
push
inc
xchg
jl
sbb
in
lods
popf
and
shrl
dec
fsts
cmp
cli
jne
lcall
inc
sbb
jecxz
test
add
sub
mov
out
and
pushf
dec
push
sub
and
out
jno
into
mov
into
cltd
ds
popa
inc
repz
aaa
sub
call
mov
and
and
or
jl
cmp
rcll
cmp
outsl
fs
dec
in
mov
jb
adcl
lock
pop
jmp
shl
mov
stos
add
sbb
push
mov
mov
and
inc
push
sbb
out
jmp
imul
push
and
sti
fisubs
imul
push
dec
dec
inc
cmc
mov
or
sub
ljmp
fdivs
push
push
inc
fsubp
or
sbb
mov
push
les
insb
and
into
ret
sbb
rol
and
xchg
cli
or
and
loopne
fcomp
pop
lock
dec
out
mov
pop
inc
lret
ret
loope
sti
pop
cltd
cs
ret
outsl
mov
mov
idiv
pop
mov
lcall
lahf
rolb
dec
stc
pop
cmp
xchg
sub
adc
inc
cmpsl
int3
mov
shll
ror
mov
test
inc
sbb
out
jge
add
dec
dec
in
pop
sbb
pop
sbb
push
pop
push
cmp
xchg
mov
push
ja
push
or
inc
stos
f2xm1
xchg
hlt
mov
fisubrl
push
scas
mov
rcrb
and
push
inc
ss
in
jne
imul
dec
and
sbb
inc
xor
pop
out
and
dec
orb
adc
xchg
cmp
test
andb
mov
jge
inc
mov
push
pop
insl
bound
and
stos
dec
mov
lret
xchg
jns
mov
fnstsw
loop
xchg
inc
xor
xchg
cltd
out
int3
mov
popf
xor
mov
mov
rolb
sahf
sbb
adc
mov
nop
xchg
and
cmp
cli
xchg
dec
fst
cld
data16
test
sub
testb
dec
inc
out
add
push
push
mov
bound
dec
in
loopne
jne
mov
mov
mov
xchg
push
loopne
rolb
clc
dec
shlb
jbe
mov
mov
ja
adc
subl
pop
mov
loopne
push
mul
fldt
and
cmpsl
dec
push
fwait
repnz
jp
pop
out
push
xchg
sub
mov
xor
pushf
add
aas
fnsave
xchg
jp
and
lahf
mov
pop
mov
ljmp
pop
xchg
pop
nop
cmp
stos
scas
mov
call
pop
pop
xchg
mov
adc
fwait
sub
mov
test
and
out
sbb
lcall
mov
or
add
sbb
cmc
push
xchg
mov
fsubs
rcr
mov
out
add
stos
mov
and
xchg
dec
jl
dec
shrb
mov
xor
jo
outsb
jne
scas
lock
add
sub
xchg
pop
mov
xchg
sub
inc
scas
xchg
cld
sbb
fsub
dec
and
repz
orb
add
leave
sub
test
lock
ja
jle
jnp
mov
loop
or
mov
aad
aam
scas
jmp
mov
cmc
jbe
sub
lret
mov
gs
jae
outsl
repz
xor
pop
or
inc
out
adc
dec
inc
lea
push
loope
lret
xchg
inc
mov
sub
xor
movsb
push
push
push
xor
xchg
loope
aas
jno
mov
dec
shll
push
mov
dec
xor
in
pushf
std
imul
sub
mov
sti
jg
pop
and
mov
mov
jecxz
lds
mov
leave
mov
es
mov
lods
repnz
idivl
jns
cmp
pop
push
cld
ror
adcl
daa
jmp
mov
fsincos
shlb
dec
hlt
notl
roll
adc
test
mov
outsl
nop
fwait
data16
int
dec
add
push
shlb
in
out
orl
push
and
push
cs
aas
fsqrt
xor
test
cmp
jo
mov
jl
rclb
rolb
cmp
test
mov
lahf
push
dec
pop
int3
test
add
stos
jno
test
rcrl
cmp
jnp
mov
and
xchg
jp
push
loop
xor
xchg
popa
jo
xchg
inc
xchg
shll
cmc
adc
loop
pop
and
gs
xor
dec
jo
pop
ret
pop
dec
inc
icebp
jle
test
loope
into
pop
inc
out
pop
ds
faddp
call
jb
mov
cld
xor
mov
add
idiv
stos
add
add
outsl
test
and
in
je
lret
sub
jmp
cmc
cld
fildll
gs
scas
and
xchg
lock
mov
mov
jnp
fisubl
bound
add
adc
jo
and
push
movsl
cmp
or
std
arpl
fnstenv
ljmp
sub
add
jae
jo
xchg
xchg
mov
mov
ret
mov
popf
andb
push
jp
cs
leave
or
or
mov
rcpps
or
and
lahf
inc
ljmp
outsb
inc
loopne
loopne
stc
mov
inc
bound
or
inc
mov
jnp
sbb
mov
aam
call
jmp
lds
or
imul
mov
xchg
ret
out
xor
lods
pop
xor
data16
push
cmp
sbb
xchg
adc
push
jecxz
insb
jle
icebp
mov
jae
jg
icebp
mov
jne
aas
xchg
std
push
cwtl
cmpsb
fyl2x
mov
test
pop
pop
and
cltd
mov
arpl
xchg
pop
lahf
jg
or
mov
mov
addr16
jg
cmp
lret
data16
sbb
pop
cmp
mov
inc
stos
jae
test
fidivl
movsb
out
push
js
out
inc
mov
stos
inc
push
in
adc
sub
mov
fcoml
cmp
ret
pop
or
mov
add
sub
ds
movsl
sub
mov
push
rcr
pop
ror
jmp
pop
mov
bound
jno
dec
addr16
mov
xor
imul
es
mov
adc
mov
pop
inc
in
stos
jp
and
xchg
fsts
imul
mov
insl
sub
mov
lods
or
cltd
shll
jns
ss
repnz
enter
daa
pop
cmc
mov
data16
push
inc
fldl
mov
icebp
mov
sbb
dec
daa
mov
cmp
and
push
ret
adc
dec
ret
push
cmp
jg
lods
out
xchg
xor
mov
ret
mov
in
inc
mov
aaa
pop
ret
out
adc
or
dec
fistps
in
pop
cltd
shlb
fld
cld
loopne
jne
loop
inc
stos
loopne
xchg
mov
lock
in
cmp
in
bound
loop
lods
or
andl
mov
scas
jmp
js
daa
dec
out
pushf
pop
adc
cmp
add
sbb
cmpsl
and
pop
repnz
imul
xor
popf
test
xchg
adc
or
sbb
push
xchg
imul
or
xchg
add
jbe
xlat
stos
and
fs
cld
mov
push
in
ror
mov
xchg
inc
or
inc
add
adc
lcall
incl
xchg
xor
add
pop
fdivl
push
jno
call
add
xchg
out
or
sub
loop
or
shrb
mov
xchg
xchg
sub
mov
enter
pop
lea
mov
cmpl
pop
xor
xor
xor
into
loop
adc
ret
flds
or
sbb
sbb
adc
ss
loopne
mov
sbb
xchg
cld
mov
movsl
cmpsl
jle
jo
call
lds
adc
mov
shl
popf
loope
mov
xchg
or
xchg
aad
adc
clc
sbb
gs
je
xor
js
xor
inc
in
mov
cmp
loopne
push
outsl
inc
cmp
shr
div
fsubrs
popa
mov
stc
add
jb
xlat
fisttps
imul
sbb
dec
sub
imul
iret
out
mov
loop
cmpsl
push
jg
fists
mov
test
dec
mov
inc
sub
fdivrl
insb
mov
stos
stc
cmp
ja
pop
xor
and
push
icebp
out
das
rolb
mov
pushf
pop
mov
push
es
and
and
mov
nop
std
dec
cmp
icebp
ret
adc
pop
pop
leave
std
mov
xor
jle
jno
mov
cwtl
mov
insb
dec
loope
cmp
pusha
and
stos
int3
mov
leave
and
mov
adc
adc
es
ss
sbb
lock
xor
scas
dec
cmp
jmp
xchg
out
mov
or
pop
pop
mov
xchg
xrelease
sub
cmpsb
bound
scas
fnstcw
std
lods
mov
xor
or
adc
gs
jns
jecxz
jp
hlt
dec
xchg
add
sub
jnp
pusha
rcrl
incl
rolb
ficompl
bndstx
es
in
ret
and
inc
adc
int3
stos
cmpsb
mov
mov
xor
bnd
std
mov
ds
mov
ret
xor
cwtl
test
or
mov
push
subb
movsl
xchg
xchg
sti
rolb
inc
xchg
dec
aaa
xchg
mov
pop
int3
sbb
jl
shll
addr16
add
lods
mov
adc
mov
dec
pop
lahf
push
ljmp
mov
subb
and
sbb
mov
aas
insb
repz
add
inc
sbb
inc
imul
sbb
jne
mov
lret
stos
sbb
dec
jge
sbb
ss
mov
leave
push
or
loopne
test
lods
lds
jbe
pop
sub
jp
fdivp
pop
xchg
mov
cwtl
push
imul
dec
sarb
sbb
mov
dec
push
out
loopne
cmc
push
test
mov
mov
jmp
divl
test
and
pop
jns
insl
pop
jb
fsubrs
popl
dec
sub
add
imulb
xchg
rol
data16
cs
aaa
mov
ds
dec
ja
bound
in
xchg
sbb
stos
fs
push
push
push
cmp
faddp
notl
and
clc
pop
aam
dec
mov
ja
mov
outsb
xor
or
jp
sub
lcall
sbb
arpl
cmp
int
jmp
xorb
cmpsl
jnp
mov
xor
mov
inc
cmp
inc
mov
out
clc
xchg
fcomip
mov
lock
les
sbb
movb
xlat
and
mov
xchg
and
or
push
repnz
push
mov
pop
mov
nop
mov
sub
lock
arpl
lahf
fisubrl
mov
pop
sub
jle
add
add
pop
cs
dec
or
xchg
cmp
adc
inc
dec
push
sbb
aad
testl
loopne
negb
dec
lcall
mov
xchg
mov
xchg
arpl
popf
inc
jno
xchg
jp
or
lods
push
jge
in
push
push
aad
clc
lcall
add
sub
jae
sarb
fcoml
clc
xor
jl
leave
mov
jne
adc
mov
in
ret
add
inc
repz
lds
and
pop
jbe
xchg
pop
lret
or
and
popa
push
cmp
mov
sub
idivb
mov
dec
loopne
mov
sbb
dec
mov
rcrl
subl
ror
cmp
dec
jns
xchg
mov
cli
popf
insl
adc
fildll
push
test
push
test
imul
repz
lea
test
xor
dec
fs
ja
push
push
aam
fst
dec
icebp
sub
inc
cmp
pop
and
xor
xchg
int3
or
into
dec
test
rcrl
enter
rcl
or
insl
cmp
cmp
jmp
test
pop
pop
add
ja
fldl
adc
pushf
xor
cmp
js
mov
cmpb
pop
lret
push
mov
or
notl
or
sub
in
bound
jne
subb
call
mov
mov
fs
push
jge
fsts
and
xchg
adc
lods
fldenv
xor
call
push
in
cmp
and
jmp
inc
movw
fsubrl
adc
push
mov
stc
lcall
lret
inc
push
call
les
inc
push
fadd
mov
lret
push
into
inc
sub
mov
mov
jmp
push
fbstp
dec
pop
rolb
jns
mov
sub
jmp
inc
mov
mov
mov
xor
xchg
fimull
sti
mov
lds
aad
dec
fdivrl
lret
cld
addb
xchg
insl
xlat
jns
jge
mov
and
add
std
or
out
cli
push
mov
push
loopne
add
and
mov
push
int
inc
push
xchg
push
cs
xchg
xchg
fwait
mov
xorb
int3
jg
pop
iret
mov
add
mov
xchg
mov
and
mov
xchg
leave
pop
ljmp
mov
pop
stc
push
stos
faddl
cltd
xchg
fldl
mov
enter
jo
sub
popa
fdivrs
inc
pop
mov
dec
push
and
jle
and
in
lods
insl
andl
adc
lahf
cmc
dec
mull
pop
insb
lcall
idivb
sbb
aaa
xchg
pusha
dec
pop
aas
iret
cltd
fs
pop
lret
mov
xor
mov
xchg
adc
pop
stos
xor
mov
out
mov
adc
aas
sbb
jge
into
daa
mov
sbb
add
xor
xchg
mov
jne
xchg
shr
scas
add
nop
es
imul
cltd
ret
test
ret
xchg
dec
xorl
lods
adc
pop
arpl
js
in
pop
and
push
movsb
mov
out
test
pop
xchg
cld
sbb
scas
pop
cmpsb
mov
mov
pop
mov
mov
ljmp
sti
ss
das
loope
mov
scas
aaa
sbb
xchg
jmp
ds
cmc
frstor
mov
push
nop
push
gs
add
fcomps
clc
rclb
mov
push
cmp
lahf
fisubrl
adc
mov
mov
dec
inc
mov
jns
clc
xchg
movsl
push
shll
out
mov
sbb
sbbl
fst
sarl
xchg
ds
mov
add
mov
or
lret
xor
scas
cmp
lock
dec
popf
filds
rolb
leave
mov
loopne
push
jne
or
stc
dec
jbe
insb
std
cmp
xor
jle
xchg
pop
fnstcw
ds
jo
int3
nop
xor
shlb
or
movsb
lret
rol
sbb
fistps
mov
and
adc
mov
frstor
int3
cmp
orl
lahf
lea
sbbl
leave
jne
add
dec
ficompl
mov
into
xlat
and
ror
or
mov
nop
dec
out
movsb
roll
push
sbb
test
jg
sub
jnp
pop
fcomps
fstp
sbb
lea
dec
push
jbe
dec
shlb
movsl
xchg
adc
js
mov
inc
sub
push
lret
cmp
iret
cmc
setne
add
push
or
pop
les
add
mov
jne
mov
and
push
adc
add
push
aas
xchg
jle
test
dec
stc
mov
mov
jns
setne
bound
sub
ret
lahf
sbb
lods
and
mov
rorl
jae
mov
movsb
test
repnz
lret
mov
mov
dec
pop
xor
ljmp
xor
mov
fldt
mov
lcall
les
mov
dec
dec
les
sbb
lock
pop
sbb
dec
cmp
and
pop
ljmp
mov
mov
pop
repz
leave
orl
mov
mov
push
or
add
jb
dec
sub
insl
repz
jno
out
sbb
jle
add
jg
test
add
mov
fisttpll
add
out
outsl
dec
or
outsb
jnp
lock
cmpsb
cld
xlat
pop
xor
cmp
call
icebp
and
insl
and
andl
loop
mov
and
imul
cmp
or
test
pop
scas
jecxz
int3
push
dec
jae
mov
aas
or
out
push
fdivr
fstps
ja
nop
inc
cli
cmc
xchg
push
andb
mov
sub
jns
lea
mov
cs
dec
dec
sbb
aam
test
pop
or
push
sti
push
jno
inc
jge
or
mov
push
mov
aaa
mov
xchg
sub
subb
cmc
ret
adc
lcall
mov
les
jnp
pop
sahf
xchg
inc
leave
xchg
jne
mov
add
jne
inc
mov
mov
out
inc
movsb
repz
loope
fildll
cltd
ljmp
sbb
flds
or
sub
pop
ds
cs
jl
dec
mov
pop
mov
loope
ljmp
movsb
ja
push
lods
or
push
push
cmp
mov
jnp
dec
mull
in
adc
lods
fnstsw
pop
cmp
decl
lods
fwait
les
cmp
fbld
and
jecxz
or
jg
outsb
xchg
sub
cs
jo
movsl
out
mov
jp
sti
loopne
inc
or
mov
icebp
cmpl
cmp
std
push
sbb
mov
repnz
lock
mov
test
in
sub
or
test
cmc
mov
push
ljmp
inc
in
mov
mov
push
test
pop
fcompl
mov
mov
mov
cwtl
mov
jo
in
mov
icebp
mov
bound
inc
sahf
xlat
arpl
ds
outsb
jno
in
inc
jns
sbb
or
jnp
hlt
out
orl
or
cmp
push
dec
scas
mul
out
mov
dec
and
cs
add
pop
cmp
test
ja
nop
mov
and
sub
dec
cmp
inc
cmp
jo
cmp
push
mov
outsb
mov
enter
mov
subb
push
cmpsb
stos
jle
ret
mov
test
jmp
mov
mov
adc
decb
dec
iret
lds
sub
mov
cmp
pop
lock
push
fdivs
imul
loopne
pop
mov
pop
cmp
push
pop
adc
loope
mov
fdivs
xchg
notb
es
pop
hlt
nop
negl
test
xorb
fisubs
popa
xchg
scas
adc
push
popa
fldenv
outsb
jecxz
push
repnz
xchg
aas
cmpsb
out
pushf
ret
pop
jmp
pop
lods
lea
lods
or
movb
filds
arpl
mov
into
xchg
pop
add
xchg
push
rclb
outsl
call
icebp
rol
out
dec
outsl
mov
bound
mov
mov
xor
or
push
fstl
adc
mov
xchg
xchg
inc
or
xchg
adc
ds
shll
subb
shrl
and
mov
sbb
imul
ror
cmp
sub
dec
pop
repnz
insl
dec
icebp
dec
out
sub
mov
push
aaa
pop
jmp
mov
push
mov
and
roll
mov
nop
test
jns
lret
lods
out
imul
repnz
mov
rcl
cmp
pushl
or
pop
pushl
int
jle
popa
and
int
rclb
fistpll
fsubrl
into
shrb
imul
pop
loop
cmp
nop
nop
jbe
test
xor
or
mov
push
cmp
pop
jo
pop
into
and
push
mov
xchg
add
roll
adc
mov
adc
dec
sub
adc
mov
inc
faddp
in
mov
in
mov
mov
xlat
inc
mov
orl
push
dec
jae
dec
mov
cmpl
xor
clc
adc
mov
mov
loope
jmp
int
jns
mov
sub
in
sub
dec
in
mov
lods
lock
cld
ja
inc
jmp
repz
mov
dec
xchg
imul
sub
sbb
popf
mov
adc
jle
xor
push
js
aam
lea
jp
pop
mov
mov
add
sub
jecxz
cli
or
adc
sahf
data16
stos
mov
and
sub
dec
movsl
jl
xor
jge
aad
cmpsb
mov
jns
sarl
add
lret
jg
or
sahf
int
sar
xchg
jle
test
mov
pcmpeqw
sbb
frstpm(287
xorl
es
mov
lds
jns
addr16
js
icebp
or
pop
cmpsl
sbb
aad
aad
call
cli
fiaddl
idivl
sbb
in
clc
insl
mulb
mov
add
xor
dec
outsl
xchg
sbb
ret
lds
fildll
xor
lret
pop
in
insb
pop
xor
icebp
push
inc
jecxz
mov
in
xor
call
cmp
enter
cmc
adc
aas
jno
xor
fistpll
repnz
testb
lds
cmpsl
adc
cmp
cmp
daa
add
xor
out
jp
push
pop
add
std
mov
mov
pop
popf
repz
lods
cltd
clc
mov
add
aas
insl
xchg
jp
jle
push
dec
filds
pop
mov
out
adc
jl
idivb
shlb
or
cmpsb
push
or
shlb
xchg
pop
lret
pop
ret
sahf
rcrb
insb
cli
daa
outsb
sub
mov
fs
enter
mov
dec
push
mov
das
lods
sub
or
mov
hlt
inc
jns
xlat
inc
xchg
inc
sti
pop
int
insl
xchg
cmp
in
ja,pt
orl
add
repnz
mov
outsb
mov
add
stc
sahf
xor
sbb
add
cmp
inc
jo
lods
dec
xor
xchg
shlb
ja
xor
add
hlt
push
jnp
cmp
addl
pop
nop
xor
mov
stos
sbb
xlat
dec
inc
push
add
rorb
enter
cmp
ljmp
pop
into
clc
fildll
pop
jecxz
and
cli
jnp
adc
icebp
jle
pop
jne
or
dec
push
lcall
outsb
and
aad
leave
std
and
imul
and
out
push
bnd
repnz
stc
fwait
or
movsl
lea
push
aas
ja
add
je
and
aaa
adc
out
push
fimuls
push
inc
repz
lods
arpl
lcall
loope
imul
cltd
or
dec
les
inc
pop
add
mov
out
cmp
out
nop
lods
clc
sahf
adc
push
sbb
sbb
add
push
fwait
fs
cmp
jp
inc
adc
rcrl
adc
adc
in
ljmp
ja
int
out
fcomip
in
into
sbb
pop
scas
mov
adc
aam
bound
mov
fwait
popf
daa
push
push
movsl
loop
call
stos
dec
fs
mov
out
mov
fsubs
jmp
dec
or
adc
ljmp
inc
shld
std
adc
sub
insb
cmp
lahf
push
enter
push
cmp
pop
ds
addr16
dec
aad
pop
push
imul
jbe
mov
cs
cmpsb
xlat
dec
and
add
test
ret
loop
ret
lcall
jbe
sub
mov
lds
jg
push
xor
pop
mov
inc
push
out
stos
or
negl
adc
repnz
ja
or
mov
std
cmp
test
fdivs
pop
inc
add
mov
cwtl
sbbl
insb
adc
inc
mov
mov
mov
xchg
scas
lahf
fwait
adc
out
xor
pop
push
clc
and
repz
pop
ret
fcomip
push
xchg
or
jmp
xchg
scas
pop
out
subb
ljmp
jg
sub
xchg
aad
xchg
gs
and
cmc
sub
outsb
incb
pop
or
mov
test
mov
inc
loope
test
or
cmc
inc
and
vmread
adc
mov
lret
pushf
aaa
xlat
mov
jmp
cmp
pop
and
hlt
imul
cltd
cmc
inc
jl
add
and
dec
cwtl
dec
lret
cmc
jmp
mov
inc
xchg
push
dec
pushf
mov
cmpsl
into
fcmovnbe
pop
mov
lcall
xor
adc
mov
jg
xchg
std
movsb
out
pop
sbb
decb
cltd
mov
es
mov
js
mov
scas
sbb
inc
je
dec
inc
repz
xchg
mov
scas
and
daa
sahf
lea
dec
sub
push
imul
popf
and
cmpsl
cltd
scas
movsl
mov
dec
cs
sub
add
fldcw
mov
aaa
in
mov
pop
ret
pop
leave
inc
in
outsl
inc
pop
mov
in
dec
icebp
xor
insl
mov
cmp
and
hlt
stos
pop
add
insb
and
int3
sub
push
lds
xchg
adc
xchg
xchg
ss
jns
aam
pop
mov
mov
mov
mov
adc
sub
pop
inc
loopne
stos
call
push
leave
daa
pop
popf
inc
popa
loop
loop
stc
je
jp
push
loopne
outsl
push
sub
popa
je
in
ss
push
adc
movsl
out
cmp
stc
out
jmp
test
push
in
xchg
mov
pop
xchg
sub
out
incb
or
mov
mov
cmc
enter
sbb
push
jb
and
and
addr16
inc
fwait
jo
mov
cmp
in
aas
imul
adc
out
sbb
jl
js
dec
and
mov
int3
sbb
xor
les
idivl
adc
loope
push
mov
sbb
mov
jp
inc
mov
xchg
jl
jecxz
lea
adc
lret
js
sub
xchg
push
cmpl
jmp
jecxz
mov
movsl
pop
lea
inc
mov
inc
je
in
scas
fstp
xchg
repnz
jno
dec
jl
shl
js
pop
inc
outsl
push
and
std
popa
stc
cmpb
ret
in
dec
sahf
pop
stc
or
movsl
or
cs
cmp
aad
xchg
out
pop
test
pop
out
loope
jmp
lahf
xchg
pop
insb
lods
aaa
cmc
mov
lds
push
cmp
out
hlt
xlat
jae
fwait
imul
movsl
adc
mov
xchg
jmp
cmp
rcll
or
loop
test
int
insb
in
dec
iret
inc
insl
sahf
cmp
add
sbb
imul
out
mov
imul
dec
sub
out
ret
js
ja
hlt
int
or
jae
push
loopne
adc
push
hlt
push
xchg
testb
lods
in
jb
xchg
sbb
cmpsl
mov
push
or
push
sbb
pop
les
cmpl
jecxz
nop
mov
inc
and
xorb
stos
shr
jne
xor
int
push
test
xchg
js
ds
lock
dec
test
rep
hlt
fnclex
sbb
shlb
hlt
add
repnz
aas
out
jl
pop
adc
test
mov
enter
cli
jbe
adc
leave
ret
mov
ljmp
sarl
jae
mov
sub
lret
jae
inc
pop
addr16
fsts
adc
shll
lds
xchg
push
ja
pop
and
mov
or
adc
in
fistpl
outsb
mov
dec
adc
sub
mov
cmp
hlt
add
pop
and
cmp
fwait
aas
int
mov
addr16
sbb
pusha
sub
shrb
mov
xchg
and
jns
mov
out
cmp
testb
in
pop
imul
dec
loopne
lods
dec
cmp
fistl
mov
xchg
or
cld
adc
mov
mov
jg
ds
sub
test
push
sbb
push
pop
jae
mov
fcoms
idivb
cmp
mov
pop
inc
mov
ret
loop
enter
stos
pop
cmp
sbb
aaa
add
cmp
xor
sub
scas
mov
xor
fdivrs
gs
aam
jns
xlat
aas
adc
dec
pop
scas
xchg
cltd
cmp
pop
jns
sbb
mov
mov
aam
push
jp
std
bound
data16
jmp
and
mov
sbb
fbld
sub
xchg
lret
push
imul
lret
int
nop
xchg
out
push
icebp
sbb
jge
jno
loopne
popf
sub
cmp
inc
cmpsb
add
pop
jle
ja
push
jmp
ja
sbb
jo
add
mov
dec
nop
aam
jle
jmp
dec
mov
xchg
and
dec
xchg
mov
cmpsl
imul
cmpsb
mov
sbb
clc
icebp
faddl
add
shlb
dec
ret
mov
loope
aam
popf
cs
mov
cmpb
xchg
aam
push
je
sahf
or
lret
xor
mov
pop
mov
das
cmp
movsl
sbb
pop
jae
aad
sub
aam
inc
pushf
inc
fs
leave
stos
bound
cmp
add
sti
xchg
jb
aad
jg
negl
cmp
test
push
jne
jb
stos
jmp
cli
ficomps
fnstenv
or
leave
adc
jp
jmp
push
std
xor
inc
mov
inc
divl
hlt
add
movsl
or
mov
inc
test
fsubr
pop
adc
fisubrl
sbb
pop
add
xchg
push
or
jne
js
sub
pop
inc
xchg
cmp
lods
xchg
push
loope
jmp
fucom
xor
inc
call
addl
dec
idivl
and
arpl
scas
and
out
mov
xor
jle
loopne
ja
cmp
lods
mov
add
imul
iret
popf
ret
mov
mov
mov
mov
popf
mov
aad
in
add
sub
pop
sub
loopne
lea
shlb
loop
lods
into
inc
sub
mov
orb
in
arpl
push
ret
sbb
mov
jle
fisttpl
or
gs
lds
repz
vpshaw
vpsubusb
or
rolb
out
mov
fsts
push
test
in
cmp
mov
into
lods
andl
cmpl
cmp
loope
push
adc
mov
mov
das
sub
sarb
icebp
inc
pop
mov
sahf
dec
inc
lret
xchg
popa
aam
xchg
sar
lahf
pusha
leave
jmp
mov
inc
mov
test
xor
xor
shll
push
pop
jne
fimuls
mov
pop
aad
out
gs
cmp
inc
push
inc
cmp
xchg
cmp
inc
inc
cmpl
mov
pop
sbb
and
sbb
pushf
inc
test
stos
ds
cmpb
icebp
push
leave
ljmp
dec
loop
add
out
push
or
or
cmp
mov
repz
jmp
aad
pop
and
push
lods
mov
xor
mov
xchg
or
es
sbb
lods
cwtl
pop
add
mov
sbbl
cmp
aam
out
std
popf
mov
clc
subl
imul
adc
fidivrs
insl
outsb
scas
je
orb
cmp
add
or
lods
pop
mov
push
sbb
mov
pop
test
pop
push
rcll
movsb
loop
cmpl
xor
push
mov
xorb
lods
aaa
cmp
ja
sub
repz
out
jnp
mov
and
pop
movsl
jne
fxch
decb
jb
imul
pusha
xchg
insb
jbe
cmp
or
and
pushf
movsb
mov
pop
jl
adcl
js
pop
sahf
mov
or
mov
insl
jb
fimuls
mov
pushf
in
pop
mov
enter
jmp
sahf
addr16
push
push
popf
lcall
mov
lea
cli
xorb
jns
je
dec
inc
mov
sbb
sbb
mov
dec
aaa
pop
cmc
insl
xchg
lock
fwait
push
jge
push
xchg
loop
pop
iret
test
int3
orb
sti
rorl
dec
movsb
add
cmpsl
lcall
dec
ret
sbb
push
mov
add
pop
or
push
sbb
lock
sub
mov
int3
inc
roll
imul
add
xchg
add
into
push
into
adc
mov
insl
push
cmp
clc
sbb
test
cmpsl
cmp
pop
ret
push
aaa
mov
mov
data16
adcb
pop
popa
pushf
mov
push
mov
adc
fsubrs
loop
in
insl
nop
fistps
push
in
gs
dec
shlb
stos
prefetch
mov
xchg
outsb
pop
inc
dec
aad
loope
or
outsb
loop
adc
adc
orl
int
and
xor
adc
in
inc
decl
rcr
pop
dec
jo
adc
je
pop
xchg
enter
sbbb
mov
push
outsl
jbe
xor
mov
mov
in
in
dec
icebp
mov
jl
cltd
pushf
rolb
fdivr
fcmovu
scas
out
jmp
push
lahf
fidivl
mov
addr16
mov
movsl
outsl
and
mov
fucomip
movsb
adc
js
jle
adc
cmp
cmp
mov
push
in
dec
jo
adc
pop
pushf
jne
xchg
xchg
cmc
notb
cmp
jmp
push
fucomi
pop
lock
push
in
mov
xchg
fstl
out
ja
add
shl
int
call
sub
xor
dec
mov
js
idiv
ja
sub
incw
lods
sub
jns
pop
mov
push
stos
inc
rorl
pushf
mov
sub
int
mov
mov
push
dec
dec
sahf
icebp
cmc
popa
mov
xchg
jge
mov
or
outsl
xor
pop
ss
mov
aam
mov
or
ljmp
adc
insl
sbb
dec
ja
xlat
jbe
push
cmpsb
loopne
pop
sahf
test
jp
jo
fstpt
pop
xor
clc
jle
add
jne
cwtl
negb
sbb
lcall
and
xchg
mov
repz
lds
leave
push
notb
cmp
sti
sahf
inc
shl
inc
imul
je
adc
lret
iret
cmp
fwait
cmpsb
fwait
jl
mov
mov
lock
repz
out
fwait
insl
std
push
js
fiaddl
popf
sub
push
lods
xchg
mov
mov
dec
and
out
stos
sbbb
and
in
repz
sbb
shr
loopne
imull
lret
cmp
sbb
movsl
ret
cmc
mov
dec
mov
and
testl
shll
insl
pop
insl
popa
sub
ret
rorb
enter
jo
xor
push
push
in
cmp
lahf
cmp
outsl
mov
mov
pop
add
hlt
adc
int3
out
push
cmp
lods
cli
or
inc
cmp
inc
aam
jge
and
push
aam
cmp
pop
mov
mov
std
test
rol
mov
lahf
fcmovbe
xchg
mov
out
pop
mov
mov
and
in
and
cltd
insl
mov
arpl
inc
jle
cmp
pop
femms
dec
or
jno
push
xor
dec
and
shrb
out
scas
in
adc
jmp
mov
mov
mov
adc
cwtl
loopne
setns
pop
mov
out
mov
sbb
jl
jge
add
and
arpl
arpl
xor
xchg
insl
xchg
xor
cmp
and
push
ss
and
jbe
xor
icebp
shrb
cmp
jmp
pop
div
cmp
das
les
add
loop
cli
ret
test
sti
push
push
lahf
xor
clc
jae
cmpsl
or
ret
clc
jns
jne
mov
inc
cmpsb
mov
loope
mov
adc
xor
dec
add
bound
jle
jae
mov
lock
mov
xor
cmpsb
test
fiadds
dec
arpl
into
jne
in
ret
das
orl
sbb
sbb
jge
adc
sbb
sub
addr16
ljmp
lea
loopne
inc
rol
add
shl
icebp
loop
xor
adc
jmp
adc
cld
adc
mov
repz
lods
gs
cltd
std
and
sub
dec
imul
out
jge
clc
das
fisubrs
mov
pop
xor
lret
or
inc
daa
cmp
insl
test
adc
cli
add
pushf
repnz
dec
pop
inc
sub
test
leave
mov
sahf
shl
add
pop
jno
fdivr
xchg
xor
dec
movsb
jle
sarl
sarl
int
faddl
leave
mov
mov
dec
inc
dec
dec
mov
jo
fisttpl
shlb
loop
mov
jmp
mov
notl
mov
js
xchg
sbb
and
adc
sbb
cmp
inc
inc
xchg
push
int3
push
lds
dec
pop
sub
mov
dec
dec
adc
jg
es
sub
pop
push
adc
mov
push
cwtl
in
out
mov
mov
xchg
data16
sub
and
adc
sbb
mov
add
push
fwait
xchg
xchg
aaa
hlt
ret
sahf
nop
ret
out
jmp
clc
test
call
inc
xor
jecxz
outsb
pop
mov
shl
lods
sub
ss
insl
notb
call
dec
in
cli
jo
mov
mov
or
cltd
and
imulb
int3
icebp
mov
clc
mov
in
mov
fcoms
add
fdivr
sub
inc
in
mov
out
aas
ljmp
pusha
mov
dec
jns
cmp
pop
adc
cli
sbb
mov
push
mov
adc
test
fwait
or
jne
daa
cli
fcomps
jl
cmp
aam
call
int3
dec
jp
sti
ljmp
push
pushl
rcll
fwait
cmpsl
add
sub
shrb
fsubl
rorl
aam
dec
mov
pop
adc
jno
inc
xor
insl
or
dec
mov
nop
pop
add
daa
dec
pop
movl
mov
mov
or
roll
fwait
inc
or
out
outsl
test
mov
cli
popa
dec
cmp
adc
jnp
outsl
xor
bound
and
or
inc
movsl
and
xchg
hlt
scas
cmp
cmpsl
mov
scas
arpl
mov
stos
outsb
pop
sub
repz
dec
dec
jle
ret
negl
out
decb
mov
sbb
xorb
or
mov
mov
sbb
push
insl
and
movsb
clc
xchg
mov
ja
jmp
sub
jns
mov
or
enter
mov
push
mov
andl
xchg
add
stc
shlb
imul
sbb
adc
outsl
push
add
add
iret
and
aaa
ljmp
xor
outsl
fs
addb
adc
jb
cmpsl
cmp
ss
mov
mov
es
ret
jae
sub
cmp
cmp
dec
push
stc
cmp
push
fsubrs
pop
mov
pop
daa
ud1
aas
loope
cli
jle
ja
fldcw
pushf
sub
popf
xchg
inc
mov
int
into
nop
xor
push
stc
mov
rclb
xchg
jo
push
push
repnz
pop
or
es
leave
movsb
rcrl
faddl
push
jb
in
shlb
scas
push
sub
mov
add
popa
sub
sti
ja
iret
shlb
stc
movsl
xor
xchg
clc
data16
nop
cli
pop
aad
fsubr
dec
inc
sbb
int
in
testb
ss
sub
xor
cmp
jbe
cmp
sub
lods
add
rcrl
mov
nop
push
dec
adc
insb
addl
ret
dec
rolb
fldenv
adc
and
call
rcll
sbb
sub
sub
jl
aad
inc
scas
jnp
pop
out
push
xchg
fdivrp
les
out
cmp
iret
pop
pop
sbb
mov
cmpsb
imul
cltd
jmp
cmp
fs
inc
jmp
cmp
aam
in
mov
paddb
xlat
test
and
xor
in
inc
mov
call
imul
adc
test
testb
jnp
nop
leave
movsb
jge
imul
mov
cld
mov
shrl
jmp
movsl
negl
lods
aam
xchg
mov
mov
cltd
repnz
cld
mov
imul
subb
add
xchg
add
call
jmp
mov
adc
dec
shll
pop
adc
and
mov
add
stos
inc
mov
stc
mov
sub
pop
mov
add
add
mov
or
fs
js
jno
test
test
ja
dec
ret
adc
mov
repz
mov
cmp
jmp
sub
push
hlt
xchg
cmpl
xchg
ja
loop
pop
and
fs
and
jnp
pop
sbb
and
out
mov
fwait
and
test
in
lock
xor
aad
mov
xor
inc
inc
sbb
mov
cmpb
cmp
mov
sbb
inc
loop
xchg
cs
pushf
loope
sbb
nop
std
pop
cmpsl
test
mov
dec
or
fldenv
fimuls
jmp
sub
fnstenv
int3
pop
hlt
sub
sub
inc
jge
jae
add
mov
stos
jmp
cltd
icebp
pop
pop
mov
mov
sub
sahf
cs
xor
mov
sar
mov
ret
mov
aas
cmc
bound
incb
stos
jne
ret
fs
outsl
ljmp
stos
arpl
lea
mov
jo
or
out
sub
xchg
adc
test
pushw
in
dec
addr16
cltd
mov
test
mov
imul
in
push
cwtl
dec
es
sbb
jl
xchg
jo
es
add
addb
rol
xchg
add
shrb
jmp
iret
pop
push
push
out
adc
fisttpl
xor
je
inc
scas
ljmp
mov
cmp
sarl
xor
jl
jbe
pop
repnz
xor
mov
stos
lahf
sbb
idivl
shrl
inc
pop
imul
mov
mov
rorb
jo
jl
adc
inc
add
xor
and
dec
shll
jmp
subb
ds
cwtl
test
mov
xor
add
roll
dec
inc
cli
daa
push
xchg
cmpsb
loope
fists
pop
push
pop
test
jl
adc
sbb
pop
int
loope
mov
fists
test
and
cmc
add
aad
xchg
dec
xlat
jecxz
cwtl
cmpsb
hlt
lods
fistps
push
push
xlat
jne
inc
aam
dec
sbb
pop
stos
jp
and
dec
rcl
jnp
das
aam
cld
out
scas
jp
mov
or
iret
push
xchg
mov
pop
std
jbe
popa
ficoms
popa
mov
jecxz
leave
pop
sbbb
cmc
aam
imul
sub
cld
mov
mov
pop
jae
fbld
jg
scas
popa
dec
push
lret
test
mov
pop
push
roll
mov
movl
leave
je
jg
or
jno
jnp
leave
add
sarl
fsubl
in
je
pop
out
dec
mov
in
js
jno
mov
dec
jecxz
fnstcw
jne
daa
arpl
pop
enter
mov
mov
rolb
mov
pop
or
adcb
xchg
xor
out
inc
cmpsl
or
mov
fcoml
mov
fs
scas
testl
adc
add
jmp
test
ss
fucomip
sub
push
shll
je
test
xor
enter
add
mov
lods
stc
jo
cmp
pop
shll
cmp
orl
sbb
mov
lret
sti
fistps
pop
cmp
cmpsb
out
sub
cmp
in
jmp
mov
scas
clc
or
pop
cld
pop
push
movsl
sti
dec
lret
dec
adc
sbb
jne
xchg
adc
push
jne
push
les
pushf
pop
xchg
std
pop
inc
push
xor
mov
add
pop
push
pop
mov
sub
sti
mov
xor
and
je
sub
clc
add
mov
pop
clc
xchg
push
cmp
sbb
xchg
mov
cmp
inc
mov
ret
and
sbb
test
mov
scas
std
shr
clc
pushf
in
push
xor
ljmp
mov
jne
daa
bound
jge
paddsb
nop
mov
movsb
out
dec
rorl
or
imul
ret
je
add
mov
dec
mov
mov
adc
push
sub
dec
es
out
sub
ljmp
test
jecxz
jecxz
adc
and
pop
out
enter
shrb
popf
mov
nop
pop
or
ja
inc
cwtl
cmp
xchg
mov
fcmovbe
ds
dec
rol
jnp
aas
stc
bound
cmovo
jp
mov
sti
mov
xor
ljmp
sbb
sbb
xchg
movsl
mov
sbb
jae
jmp
sti
mov
adc
adc
les
shrl
mov
cmp
std
inc
int3
andl
and
dec
lds
pop
dec
fbld
mov
les
push
loope
cmpsb
not
mov
sarl
cmp
dec
xorl
stc
jecxz
test
sbb
xor
jp
leave
jmp
in
xor
fbstp
dec
xchg
or
sub
jp
pop
mov
pop
sub
xchg
leave
movsl
cmp
push
out
repnz
or
f2xm1
testl
subb
jne
mov
pop
in
jae
push
sarl
push
jmp
das
and
out
test
or
lahf
xor
scas
or
js
push
mov
jnp
sahf
adc
xchg
push
add
testb
adc
sarl
sub
xor
and
int
xor
cltd
lea
lret
add
loope
cmp
mov
arpl
push
fstpl
addl
popa
jnp
cmp
pusha
daa
outsl
or
test
xor
dec
cld
pop
mov
add
push
add
adc
loope
jae
dec
mov
ret
negl
aad
push
popf
daa
popw
int3
mov
add
ja
cwtl
icebp
syscall
xchg
int
inc
cmpb
test
mov
stos
fnsave
inc
popf
je
sub
xchg
or
lea
push
repz
fcoms
fadd
das
mov
test
jecxz
or
insb
cmp
out
pop
nop
mov
repnz
push
add
sbb
lods
mov
mov
and
inc
push
in
pop
mov
cmp
mov
jmp
and
cmpsb
xchg
cmp
pop
mov
mov
cmpsl
addr16
out
aam
fldcw
pop
outsl
pop
fwait
cmp
mov
enter
push
jle
nop
pop
xor
movsb
into
les
filds
enter
push
outsl
mov
or
xchg
mov
clc
xchg
sub
cltd
sub
in
mov
push
xchg
push
insl
nop
lcall
andl
pushf
enter
push
fchs
daa
incl
addl
cli
lea
pop
rcrl
fisttpll
sbb
call
popf
mov
sub
pop
mov
xchg
lea
xor
mov
add
test
loope
sarl
ret
xchg
inc
fstpt
mov
pushf
add
test
fwait
loope
in
lock
jno
xchg
clc
movsl
push
and
push
ja
dec
mov
dec
test
mov
fucom
fsubl
jo
jp
imul
push
jne
sbb
push
xor
mov
xorb
call
jge
xchg
xor
pusha
shrl
pop
or
iret
pop
jl
scas
sub
mov
sahf
lret
movsb
cwtl
mov
dec
lock
enter
repnz
inc
lret
stc
mov
push
ret
dec
mov
cmp
push
dec
or
push
loopne
outsl
ss
jne
push
out
loope
in
arpl
dec
stos
jmp
ds
xlat
mov
sbb
add
addr16
cld
mov
data16
push
gs
ret
fsts
jne
lock
mov
scas
fs
adcb
push
mov
adc
pop
or
lods
cmpsl
sbb
stos
push
int
add
mov
jb
xchg
int
mov
addr16
in
add
lcall
pop
popf
and
or
cmp
out
mov
mov
mov
dec
push
xor
subl
and
inc
jb
cmp
or
jne
xchg
shll
sarb
pop
cmpsb
mov
leave
test
inc
in
mov
xor
repz
dec
push
das
lret
mov
lds
sarb
push
mov
xorb
add
scas
mov
xor
fidivs
adc
leave
lret
adc
insb
push
push
push
lahf
jecxz
adc
fists
add
cmp
add
mov
push
cmc
pop
lahf
mov
in
sbb
sbb
inc
xor
icebp
shll
mov
outsb
sbb
scas
jle
in
test
je
ret
fnstcw
aaa
insb
mov
addr16
movsl
out
mov
cwtl
mov
mov
nop
fdivrs
cmp
inc
sbb
data16
int3
xor
dec
dec
bound
fs
jle
mov
repnz
pop
jns
lret
and
xchg
shll
cmp
push
pushf
mov
outsb
loope
push
jp
dec
daa
push
push
xlat
out
sub
pop
or
dec
inc
inc
push
lock
or
jo
sub
test
adc
icebp
xor
cmp
dec
pop
nop
mov
push
cmp
jb
pop
ja
and
mov
xor
mov
lahf
push
dec
dec
aad
jbe
loopne
nop
or
push
or
or
cmp
xor
enter
push
jp
mov
mov
and
daa
andl
jae
pop
inc
jle
jno
ret
clc
xchg
lret
int3
mov
jne
pop
or
mov
cli
nop
jo
stos
pop
cmp
insl
ret
lahf
mov
imul
enter
ljmp
out
sbb
cmc
shrb
in
insl
xchg
push
mov
lahf
popf
mov
xlat
mov
leave
subl
lds
mov
add
mov
pop
fs
sbb
fmulp
push
xchg
sahf
dec
shl
das
loop
xchg
lcall
mov
popa
in
push
push
pop
test
xchg
mov
inc
testl
imul
mov
imul
lds
xor
inc
fs
movsb
or
outsb
fsub
mov
mov
repz
loope
pop
cmc
lods
mov
xchg
fldcw
or
and
outsl
outsl
xor
aaa
or
test
pop
jne
sub
cltd
lock
push
and
cld
sbb
jb
and
push
je
add
arpl
bound
into
mov
scas
pop
repnz
mov
inc
add
inc
mov
ljmp
outsl
jmp
pop
repnz
insb
xlat
dec
scas
js
arpl
ret
fimuls
and
loop
mov
pop
mov
cmpb
mov
sub
clc
mov
fnsave
lcall
adc
lcall
jle
xlat
cmp
je
faddl
in
push
out
out
xor
add
out
jne
repnz
imul
call
sub
jge
gs
mov
pop
and
jo
mov
stos
repnz
in
cmp
cmc
inc
call
and
and
pop
dec
adc
dec
lock
fstpl
out
and
jns
mov
imul
les
add
les
push
push
and
push
jno
pop
adc
rorb
push
lea
and
mov
orl
push
cwtl
lahf
pop
andb
es
insb
cwtl
sbb
arpl
jno
jae
jmp
adcl
add
jmp
cmp
int
push
push
repnz
mov
sbb
add
lret
pop
addr16
fxch
push
xor
repz
stc
jge
insb
sahf
popa
pop
test
arpl
ja
sbb
xor
loopne
jmp
sti
out
jbe
mov
lret
nop
mov
sbb
mov
cmp
push
sbb
xor
inc
cmp
mov
cli
fisubrl
inc
add
inc
fs
adc
push
mov
mov
push
cmp
sbb
notb
pminsw
in
call
push
pop
jne
inc
adc
push
notb
out
and
gs
xor
iret
mov
inc
imul
mov
movsl
mov
faddl
jp
inc
in
lea
rcrl
das
fdivrl
mov
testl
mov
ret
packuswb
or
dec
movsl
add
scas
jmp
popa
jl
fistpl
inc
adc
addb
shrl
sub
and
xchg
dec
lds
lahf
mov
adc
mov
jp
or
loopne
mov
popf
js
stos
fiadds
scas
cmp
in
jo
jnp
loop
popa
ds
ret
iret
cmc
add
nop
out
mov
out
xchg
push
xchg
lods
std
cmp
push
inc
icebp
jmp
cmpsl
mov
add
aam
pop
or
push
dec
mov
clc
cmp
jecxz
cmp
out
imul
in
fldl
mov
ret
shll
cmp
add
jmp
rorl
pop
jmp
push
loope
int
mov
cmp
sbb
call
addb
ja
out
mov
cmp
cltd
clc
mov
ss
ret
push
adc
dec
mov
sti
xor
and
test
and
ret
test
push
test
mov
mov
popa
js
xchg
movsb
push
ret
sub
inc
out
in
jge
mov
xchg
or
fidivl
subl
repz
adc
loopne
sub
popa
mov
xor
sbb
cwtl
loop
bound
js
mov
in
mov
mov
or
fstpt
mov
add
sbb
f2xm1
mov
push
jnp
iret
addl
rorl
pop
shlb
out
mov
adc
popf
lea
sbb
pop
int3
push
sbb
mov
das
xchg
mov
in
add
cs
fiaddl
out
inc
sbb
dec
or
adc
repz
std
shr
and
sub
push
mov
fcomps
xor
cmpl
xchg
xor
push
jle
mov
add
popa
aad
pop
lcall
dec
push
add
inc
ret
sub
cmp
inc
xor
sbb
pop
sbb
mov
xchg
movsl
cmp
clc
cmp
outsl
iret
cmp
sub
rolb
into
ss
shll
add
cmp
mov
repz
add
movsb
data16
std
jle
pop
stos
iret
movsl
xchg
mov
lock
fadds
add
mov
cld
fisubrs
test
pop
imul
cmp
dec
push
adc
mov
xchg
and
jp
and
sahf
pop
loope
fsubs
xchg
xchg
ret
push
aas
mov
push
lret
sbbb
pop
aaa
sbb
mov
addb
rcrl
cmp
xor
xchg
mov
aaa
xchg
test
mov
mov
movsb
addl
fiaddl
sub
sbb
jo
scas
mov
mov
xchg
cs
pop
cmp
cmp
iret
sub
aad
xchg
fnstenv
cmp
in
in
repnz
add
jge
push
insl
stos
mov
ljmp
cmc
pop
jecxz
movsl
mov
xchg
xchg
scas
icebp
cltd
jno
movsl
js
mov
fnstenv
jp
call
subb
push
dec
pusha
pop
cmovle
stos
jg
sti
movsb
mov
shrl
test
sbb
jl
mov
add
fwait
cmc
pop
inc
inc
sbb
adc
mov
insl
js
pushf
fbld
push
mov
xchg
xchg
stc
aam
lret
inc
je
stc
sub
jno
inc
lret
push
dec
mov
shll
ja
push
outsb
jnp
rcrb
fwait
cwtl
std
decb
push
mov
adc
leave
mov
pop
push
push
sbb
jge
ret
mov
dec
mov
mov
xchg
jns
lea
loop
sbbl
das
xchg
repz
repz
or
jge
and
mov
scas
ficoml
addl
push
mov
adc
insb
inc
inc
repnz
xor
cmp
std
fwait
enter
ds
sbb
into
inc
mov
pop
dec
jmp
mov
les
mov
mov
daa
mov
rcrl
mov
mov
inc
insl
jns
test
xor
inc
mov
push
stc
jo
dec
cmp
fisubs
inc
sahf
inc
imul
mov
jle
mov
adcb
int
xchg
jo
mov
xchg
xchg
add
cmc
mov
mov
and
imulb
movsl
add
aas
xor
adc
fistpl
cs
lods
test
adc
lea
test
xor
or
test
pop
mov
cmpsl
cmpsl
loop
sahf
push
inc
xor
xchg
xor
xchg
out
or
cmp
xchg
outsb
mov
and
and
mov
leave
das
xor
nop
jae
hlt
das
sbb
and
loope
int3
inc
pop
jp
fbld
push
stos
sub
mov
les
mov
cli
fwait
xor
pop
mov
out
cmp
mov
pop
or
fistps
fisubs
arpl
add
inc
imul
cmp
cmp
or
dec
push
inc
cmpsl
adc
aam
cmp
dec
jmp
jecxz
incb
xor
or
aas
xchg
adc
and
xchg
xchg
mov
or
inc
rorl
push
ss
or
inc
adc
das
push
inc
addb
mov
insb
cmp
dec
mov
sbb
cmp
std
testb
jne
pop
mov
cmc
mov
imul
vpsubb
out
dec
cwtl
nop
outsb
daa
sarl
aad
popl
lret
ljmp
cs
fwait
or
hlt
stos
or
js
jp
xadd
push
aam
lcall
push
pop
push
dec
jmp
push
mov
ret
idivb
jne
xor
add
sti
daa
imul
sub
and
add
mov
daa
and
dec
adc
in
js
jno
je
push
rcll
mov
sub
and
mov
outsb
xchg
push
xchg
pop
xchg
test
xor
mov
fldt
sbb
jb
mov
sbb
lsl
jmp
fistps
cwtl
pusha
inc
outsl
sbb
fistl
inc
jg
xchg
mov
ret
adc
loope
or
jne
pop
push
fs
pop
adc
sbb
cwtl
sbb
push
daa
sbb
pop
int
orl
jmp
sbb
sahf
and
cltd
mov
fwait
adc
pushfw
jo
push
out
out
movsl
jo
mov
fisubs
sbbb
ss
push
xchg
pop
test
das
and
jge
shll
loopne
jne
pop
jp
out
mov
push
inc
inc
stos
movsb
lcall
aaa
push
mov
fdivrs
xchg
lods
mov
fucomi
paddq
cmp
sub
imul
testl
into
loope
cmp
movsb
fistps
jl
mov
jle
add
pop
jns
jp
orl
cwtl
adc
adc
sub
enter
je
hlt
loopne
xor
mov
and
loop
mov
sarb
mov
jb
in
cmpb
lret
lcall
into
jo
in
cmp
les
clc
cwtl
pop
xchg
or
jnp
rcrl
pop
sbb
test
pop
lock
pop
dec
cmpsl
scas
insl
pop
mov
out
leave
leave
sbbb
sbb
mov
jmp
mov
mov
jne
add
mov
ret
loopne
iret
mov
mov
call
push
stos
rolb
mov
fwait
push
pop
sub
test
xor
out
mov
loop
loopne
fbstp
outsb
lods
and
mov
pushl
push
pop
mov
adc
pop
pop
int3
andl
pop
mov
pop
push
pusha
ja
in
aaa
or
cmpsl
scas
test
repnz
int
pushl
lret
cwtl
add
aas
aad
js
inc
dec
pop
repnz
scas
or
roll
pop
mov
in
in
jle
dec
das
cld
inc
popa
push
ficoms
pop
cmpsb
lahf
dec
repz
gs
pop
inc
negb
out
xchg
jnp
in
add
cmp
xchg
ret
sbb
push
xor
stc
mov
cmp
cwtl
cwtl
and
stos
jge
add
xchg
cmp
shrb
sub
mov
aaa
int
jns
ss
xchg
xor
nop
push
aas
pop
roll
pop
in
popa
int
xchg
sahf
lds
and
out
pop
cmpsl
xor
xor
sahf
mov
imul
jge
pop
mov
gs
mov
inc
dec
stos
inc
mov
mov
jnp
xor
fldcw
lret
jle
filds
leave
sbb
adc
daa
mov
push
pslld
inc
call
mov
pop
add
sub
cmp
push
jo
les
cwtl
stc
cmc
sub
dec
inc
and
push
mov
sub
push
xchg
cmpsb
out
popf
je
pop
push
fidivs
xchg
shl
sub
add
rorl
mov
fwait
insb
pop
mov
aam
out
icebp
mov
psrlw
sbb
pushf
mov
cld
sbb
cmp
and
ja
hlt
movsl
int3
pop
loope
fildll
ror
inc
scas
out
mov
inc
xor
xchg
lahf
je
pop
xchg
test
sbb
cmp
push
fnstcw
data16
pusha
xchg
cmc
pop
shlb
xchg
lods
add
ss
test
mov
out
add
adc
sbb
sbb
xor
inc
xchg
push
negb
xor
mov
jge
push
inc
lret
push
pop
mov
inc
mov
xor
ljmp
push
adc
fbld
ret
adc
andl
dec
insb
mov
pop
push
js
jg
out
test
imul
mov
push
cld
push
repz
cmp
shl
inc
cwtl
movsb
bound
push
mov
out
push
push
mov
pop
test
sbb
push
call
push
push
orb
pop
jg
jno
add
jl
pop
lret
cwtl
mov
filds
xor
sbb
lods
sbb
fisttpl
loope
cmp
jne
jns
mov
pop
xor
cmpb
ljmp
push
sub
sub
adc
sarl
out
sub
jl
insl
mov
gs
jb
popf
dec
inc
popa
mov
add
jnp
cmp
push
jbe
lods
pop
push
inc
pushf
sub
mov
sbb
shl
xor
lock
das
sti
dec
inc
icebp
jbe
and
bound
aaa
movl
je
sub
pop
into
les
test
jl
sti
xor
inc
mov
mov
test
adcl
int3
mov
popa
or
ja
push
jne
filds
data16
mov
lds
js
repz
sbb
push
out
fidivs
dec
xchg
cld
icebp
mov
and
mov
mov
adc
mov
add
inc
sbb
dec
inc
push
add
sbbl
bound
sub
aaa
mov
mov
fwait
mov
arpl
ds
and
and
mov
sbb
xchg
adc
fists
dec
pop
inc
in
add
jnp
out
mov
cli
js
sub
jns
add
or
push
cmpsl
push
lret
push
ja
pop
addr16
clc
inc
pop
popf
hlt
sbb
adcl
mov
xor
enter
in
mov
adc
iret
hlt
pop
push
jge
or
rorb
in
push
mov
push
iret
fidivrs
ja
fists
xchg
sub
inc
mov
and
sub
jbe
imul
fldcw
iret
mov
xor
fimull
jnp
mov
mov
cmp
mov
push
add
lret
scas
mov
mov
adc
je
pop
js
stos
stc
aas
xchg
imulb
dec
shll
cs
xchg
test
in
daa
cmpsb
xor
pop
js
mov
leave
push
into
push
int3
dec
and
aad
cltd
xor
sbb
ss
and
in
sub
imul
xchg
fistpll
jp
add
inc
xor
pop
mov
sub
notl
scas
jnp
ss
sbbb
repnz
repz
xor
in
and
pop
les
sub
inc
nop
ljmp
not
inc
sbb
cmp
cmp
mov
xlat
adc
sbb
pop
adc
mov
ds
jge
out
sub
dec
lahf
je
xorl
and
mov
popa
xchg
out
jg
lea
jne
adc
adc
imull
pop
cmp
in
mov
sub
fbld
andb
ret
leave
loop
push
xchg
xchg
adc
int
mov
jns
mov
adc
out
ja
dec
adc
mov
es
mov
ret
sbb
jnp
testb
cltd
das
and
mov
jbe
aaa
loopne
hlt
out
lret
out
loope
mov
fisubrl
jecxz
sub
mov
push
stos
sbb
cmp
or
or
jl
or
push
mov
push
jno
xchg
xchg
push
imul
xchg
shlb
xor
add
fiadds
xchg
cs
pop
mov
lods
jae
pop
and
popa
int3
or
shll
sbb
es
clc
xchg
sarb
mov
cmpsl
lock
ljmp
imul
jnp
ja
test
arpl
add
mov
loopne
les
push
dec
nop
push
or
sbb
dec
leave
lea
pop
pushf
lea
push
in
in
sub
ds
xchg
lret
mov
scas
dec
and
test
push
das
sub
ds
mov
mov
iret
pop
or
sbb
sub
cmpb
cmp
cwtl
inc
imul
jle
pop
xchg
pop
dec
jno
or
pop
mov
add
sub
pusha
xchg
imull
scas
daa
fwait
cmp
xor
std
sti
push
mov
add
lret
jp
pop
push
xchg
js
sahf
push
mov
es
pop
icebp
jp
pop
jl
add
dec
mov
fwait
mov
in
shl
xor
mov
mov
jae
jmp
test
jne
inc
pop
aas
pusha
testb
xor
hlt
jb
movsb
pop
jge
ds
cs
idivl
test
arpl
dec
dec
dec
popf
fadd
rcll
fnsave
pop
sahf
cmp
sti
divb
popa
inc
in
andb
sbb
pop
dec
mov
xchg
sbb
out
jmp
ds
loopne
cmp
ds
cmp
addl
ret
mov
out
lea
sbb
dec
dec
pusha
xchg
std
mov
push
jns
inc
rcll
sub
xor
dec
test
in
mov
shll
xchg
mov
mov
out
mov
push
jmp
adc
aam
fcmovbe
pushf
cmp
or
xor
js
das
jae
mov
cmp
movsl
sub
mov
frstor
fcomip
sub
int3
test
lock
cmpsb
test
push
jnp
adc
div
jge
mov
int
push
cmp
sbbb
fcmovne
cmpsl
sub
out
dec
push
rcrl
popf
xchg
sbb
fsubs
lea
popf
scas
leave
xchg
mov
or
sti
jnp
jnp
ficomps
notl
cli
ret
cmp
lret
rolb
adc
cmc
inc
lcall
sub
adc
stos
ffree
jge
pop
lret
adc
pop
insl
cwtl
fwait
icebp
pop
sub
rcrl
sbb
jae
add
mov
xchg
jp
aas
pop
jmp
and
xor
fildl
sub
push
xchg
in
inc
inc
push
sub
adcl
mov
jnp
popf
inc
add
dec
pop
pushf
adc
mov
mov
pop
xlat
pop
repnz
scas
test
imul
cli
add
lock
sbb
mov
xchg
mov
leave
or
or
pop
jle
mov
pusha
jns
push
push
nop
fcoms
mov
lret
and
mov
cmpsb
jg
pop
cmp
add
push
jecxz
ljmp
push
popa
mov
or
fisubs
dec
cld
cmp
les
shlb
inc
xor
mov
mov
test
or
bound
sbb
stc
fistpl
sbb
lods
jo
ss
faddp
cld
sbb
cmc
jo
pop
jle
std
or
xor
repnz
cmp
repz
clc
hlt
test
dec
das
fcoms
or
pop
test
sbb
into
or
dec
pusha
push
or
scas
or
push
cs
and
or
jp
movl
add
out
dec
fldt
sarb
ret
jns
cli
adc
lret
cmpsl
inc
fmul
hlt
or
fisubl
fs
mov
cmp
insb
jcxz
push
rsqrtps
aad
daa
adc
repz
les
inc
rcll
fstl
fcmovu
sub
mov
jae
xchg
das
pop
sarb
testl
cmp
dec
pop
scas
popa
hlt
lret
mov
insl
out
add
std
xchg
adc
inc
out
xlat
cmc
mov
sti
fcmovnbe
jae
je
cmp
mov
mov
incb
loop
or
adc
push
pop
mov
icebp
out
jne
fldl
mov
iret
in
adc
cmp
xchg
push
jbe,pt
inc
push
repz
cmp
insl
cmp
inc
jno
lahf
cwtl
clc
pop
and
mov
xchg
xchg
sub
jno
dec
dec
mov
aas
imul
bswap
mov
popa
lods
lret
in
xor
test
scas
shlb
mov
dec
test
nop
push
fwait
jp
add
orb
test
add
xor
fisttpl
in
push
arpl
cmp
test
xor
mov
lret
pusha
pop
jns
dec
imul
addr16
lock
or
xchg
pop
jl
and
ret
and
dec
and
ds
sbb
inc
mov
pop
nop
inc
mov
xchg
and
xor
jecxz
shll
fwait
scas
aaa
xor
push
push
cmp
xchg
mov
jl
mov
sub
push
mov
and
outsl
add
push
nop
mov
mulb
pop
sbb
cmpsb
push
cmp
jbe
enter
inc
pop
fistpll
inc
movsb
add
aas
outsb
push
or
jecxz
fwait
outsb
loop
in
mov
inc
dec
inc
mov
push
xchg
sub
jno
mov
mov
movsb
in
jno
test
xchg
gs
adc
adc
in
lods
shlb
repnz
mov
paddusb
rcrl
xchg
mov
pop
repnz
inc
and
mov
mov
and
cmc
jge
push
sbb
test
shlb
loopne
lds
adc
xchg
orl
test
xchg
pop
pop
mov
les
push
stos
in
bound
cld
pcmpeqd
iret
mov
cmpsb
mov
mov
inc
lret
sbb
push
les
js
sub
mov
xorps
xlat
scas
iret
into
mov
jbe
std
pop
sbb
push
aam
lods
sti
cs
adc
xchg
int
and
and
stos
push
mov
mov
jns
sbb
leave
mov
int
je
lret
push
mov
mov
jae
add
mov
dec
repnz
dec
add
sub
je
mov
mov
lahf
cmp
cltd
stos
ret
or
pop
and
mov
jl
shrb
shrb
lods
mov
out
test
imul
push
mov
repnz
sbb
shlb
fidivrl
aad
inc
pop
fndisi(8087
xor
fcmovu
ret
sbb
mov
mov
add
jbe
mov
jo
in
sbb
xor
cwtl
inc
pop
aas
jno
popa
sub
sbbb
xorb
stc
xor
clc
push
lods
pop
or
das
or
push
xchg
aam
loopne
into
scas
pop
in
dec
pop
ret
fidivs
hlt
and
loop
cmpsl
jmp
les
in
add
cltd
and
dec
cs
adc
push
incb
aad
andb
imul
adc
inc
fxch
sub
in
jnp
push
jmp
cltd
jg
jle
mov
xchg
bswap
stos
jbe
xchg
data16
pop
call
lea
icebp
in
sub
push
xor
mov
push
sub
les
push
jnp
mov
in
sub
dec
bound
in
add
sbb
xor
insl
pop
movsb
rcr
cmp
es
dec
sbb
dec
outsl
pop
inc
and
stc
daa
nop
xchg
cs
mov
mov
fidivl
popa
loope
aas
imull
xchg
aaa
outsb
mov
jbe
hlt
xchg
divl
outsl
xchg
inc
int
addr16
movsl
sbb
xor
lock
add
leave
cmp
pop
lcall
rorb
push
adc
add
push
outsl
lods
in
out
cmpsb
data16
jns
jbe
mov
or
mov
call
jge
cmpsl
push
pop
or
leave
mov
mov
mov
cmp
adc
inc
xor
cmpsb
faddl
add
neg
outsl
adc
pop
repnz
fcmovne
jae
test
sbb
add
das
inc
clc
xchg
jl
pop
pop
add
and
push
insb
push
pop
sahf
int
jb
ret
pop
ss
jbe
sub
cmc
dec
mov
xchg
stos
cmp
or
inc
jmp
jnp
jo
lahf
mov
xchg
fisttpl
jge
mov
mov
cmp
shrb
ja
fidivs
pop
push
js
mov
subl
mov
xor
test
gs
dec
sbb
pop
pop
push
mov
ds
ds
stos
psraw
xchg
ljmp
imul
cmpsl
shll
xlat
bound
and
popa
adc
jae
cmc
and
or
add
and
rolb
pop
imul
sbb
inc
inc
pop
xchg
cs
aaa
divl
push
push
mov
mov
mov
shrb
jns
ss
push
sub
dec
aaa
mov
mov
or
pop
insb
in
cltd
push
pop
inc
jno
rcrl
stos
mov
push
or
sub
jne
mov
push
ds
out
xchg
ljmp
adc
out
inc
dec
mov
add
xor
dec
mov
and
push
gs
or
sbb
jl
pushf
mov
push
aam
enter
mov
hlt
hlt
ss
adcl
test
outsl
movsl
pop
mov
cmc
js
xchg
imul
fdivs
mov
push
aaa
stc
inc
inc
jecxz
xor
jne
aad
ret
les
cmp
lret
inc
pop
cmp
jge
cmp
mov
pop
push
xor
adc
dec
mov
xchg
decb
arpl
sub
xchg
xor
and
mov
cmpsl
jo
add
xchg
or
mov
xchg
ss
cmp
test
std
or
les
scas
xchg
jns
cli
mov
scas
repz
push
ror
cmp
insb
imul
stos
cmp
mov
sub
pop
pop
in
mov
arpl
cmp
xor
inc
mov
adc
adc
stos
cmp
hlt
test
cs
add
xchg
test
sbb
xchg
movsl
out
loopne
adc
pop
ja
add
mov
movsb
push
lds
inc
outsl
lea
or
jmp
mov
dec
mov
popf
movsl
jnp
inc
jbe
and
jo
out
rclb
dec
out
fcoms
sbb
cmp
mov
sub
sbb
mov
repz
or
dec
push
inc
cmp
int
stos
stos
xchg
mov
out
outsb
mov
call
aas
nop
and
mov
pop
dec
fsubrs
mov
dec
sarb
roll
mov
ljmp
cld
jnp
shll
repnz
pop
repz
mov
xchg
and
sbb
scas
mov
lods
jae
popf
jl
pop
aad
cmp
or
inc
frstor
bound
adc
cmp
push
hlt
push
dec
cmp
inc
outsb
mov
out
push
push
inc
loop
aaa
ljmp
cmc
popf
inc
xchg
xchg
jb
movsl
mov
stos
or
imul
fs
xchg
iret
xor
adc
sub
insl
add
inc
enter
sti
mov
mov
jbe
notb
ret
push
and
pop
dec
mov
enter
sbb
pop
adc
fcmovnu
repz
sub
test
cwtl
mov
xor
jge
xlat
or
out
mov
test
push
or
cmpsl
xchg
outsb
into
outsb
add
mov
xchg
cmp
mov
xchg
cmc
sbbb
xchg
pop
adcl
aam
dec
fldenv
out
dec
and
jge
fists
push
xorl
or
nop
fldt
mov
ljmp
adc
mov
es
fists
xchg
lock
mov
lret
fadds
aas
nop
les
mov
mov
push
mov
jno
or
pushf
test
into
mov
mov
ljmp
push
fidivrs
push
fdivrs
jno
call
lods
mov
adc
sub
xor
jle
es
repnz
xchg
mov
sub
daa
inc
or
xchg
pushf
push
jae
sub
sub
xchg
push
push
dec
pop
jno
rolb
jle
fiaddl
push
pushf
sub
in
add
xchg
dec
mov
repnz
popl
add
pusha
pop
call
inc
bswap
inc
add
xor
scas
les
push
sti
xchg
pop
adc
imul
pop
ss
push
aad
cltd
fimull
mov
cmp
cs
adc
or
sub
int
cmp
sub
out
push
test
outsl
xchg
lock
mov
out
inc
sbb
dec
sub
pushf
pop
stos
xchg
lret
pop
inc
add
push
or
aam
pop
cmpl
pusha
movsb
es
push
add
mov
aaa
sub
ljmp
mov
hlt
js
aas
mov
js
jg
shl
xor
fstpt
pop
sbb
dec
mov
jl
cmp
push
sbb
add
popa
ljmp
pop
sti
mov
fisttps
mov
push
and
jb
mov
fdivl
bound
fsubs
aaa
outsl
cmp
mov
push
inc
mov
ret
mov
loopne
lods
add
dec
mov
popa
dec
stos
scas
cmpsb
cmp
in
sbb
mov
xor
jb
mov
stos
jg
int
les
aam
adc
shlb
push
jl
sbb
out
mov
lock
jbe
adc
xchg
idivb
and
ret
or
xchg
in
addr16
movb
dec
sub
negl
lods
insl
pop
mov
popf
inc
push
add
dec
mov
cmc
and
pop
cltd
nop
test
sarb
int
pop
jp
insb
into
data16
pop
and
jno
or
inc
gs
stos
xchg
pop
lods
mov
jg
sub
loopne
pop
dec
xor
push
sti
arpl
movb
mov
dec
mov
mov
cmpsl
and
cmp
roll
lock
add
rorb
mov
dec
or
mov
addr16
pop
popf
sti
repz
roll
inc
mov
inc
rcrl
loope
xor
sbb
mov
idiv
cmpsb
or
push
cmp
jp
ds
xchg
loope
xor
ror
fidivrl
mov
inc
jmp
lds
mov
cmpsl
test
jl
psraw
xlat
inc
pop
add
push
dec
dec
lods
iret
dec
cmp
and
mov
mov
dec
out
loope
mov
adc
jp
pop
lods
dec
sub
loop
inc
das
je
fcmovnu
lret
lods
popf
jae
stos
xchg
inc
mov
pop
outsb
adc
stos
enter
dec
subb
or
clc
dec
loop
int3
xchg
stos
lea
clc
mov
mov
pop
jno
xchg
in
imul
in
ret
out
adc
leave
dec
push
pop
jno
xchg
arpl
push
lods
push
lahf
xlat
lcall
add
jbe
mov
jp
data16
in
mov
sbb
push
ljmp
sbb
pop
adc
enter
in
dec
push
scas
adc
mov
mov
sbb
or
outsb
push
mov
out
lods
jnp
jb
cli
inc
jl
dec
testl
dec
mov
xchg
repnz
jb
xchg
cmc
movsb
test
gs
jg
js
or
ret
adc
out
stos
daa
sbb
lock
jl
aaa
sub
mov
sahf
out
iret
dec
subl
enter
inc
pop
mov
push
call
mov
sbb
push
jb
inc
mov
das
test
lret
jbe
or
andb
test
xor
or
xor
dec
push
aam
insl
js
mov
es
dec
mov
inc
push
mov
outsl
aam
repz
adc
mov
pop
shlb
push
subl
cmp
or
and
mov
jns
scas
popa
cmpsl
mov
and
ljmp
inc
dec
loopne
sub
add
lcall
xchg
adc
push
inc
and
cs
jp
xlat
bound
xchg
subl
and
cmp
cld
and
vpslld
std
dec
mov
fmuls
xlat
fwait
dec
inc
cli
push
addb
dec
jmp
and
mov
pop
insl
sbb
arpl
stc
mov
cmp
xlat
repz
add
xor
test
sbb
pop
mov
dec
imul
xchg
adc
cmp
sbb
fimull
flds
inc
xor
push
push
adc
and
dec
lods
mov
mov
sbb
sbb
in
adc
imul
movsl
movsb
push
mov
and
sbb
jp
or
imul
mov
jae
pop
shrl
mov
dec
out
notb
jmp
push
clc
push
push
add
rcrb
je
inc
and
inc
mov
push
and
gs
bound
stos
pop
inc
xor
sub
inc
cld
mov
ret
xchg
pop
mov
xchg
ficoms
rolb
les
and
and
hlt
ret
jmp
and
scas
sbb
ja
addr16
push
pop
pop
mov
pop
add
push
scas
mov
sub
rol
imul
mov
fstps
cld
hlt
addr16
push
adc
push
pop
lret
in
out
jecxz
jg
inc
push
out
mov
fdiv
pushf
push
test
mov
lods
mov
inc
add
pushf
in
cld
push
lods
sub
cmc
dec
in
clc
movsb
push
clc
fbld
cmpsl
jecxz
sub
shr
dec
jl
add
es
cmp
and
cli
mov
cwtl
shrl
sti
arpl
stos
or
xchg
inc
sbb
cwtl
push
push
add
sbb
jge
cmp
cmc
aad
dec
xor
add
or
pusha
inc
mov
out
dec
sti
sbb
mov
xchg
push
xchg
out
push
xchg
push
incb
test
data16
mov
lahf
fdivrs
jmp
mov
sbb
in
adcl
mov
insl
add
mov
insb
ficoms
ljmp
mov
jp
push
inc
in
and
jg
imul
shrb
mov
dec
mov
mov
cmpsl
pop
xlat
mov
mov
jo
mov
icebp
repnz
sub
ds
and
jns
sbb
aam
ds
mov
clc
outsb
icebp
cmpsl
test
stc
out
in
rolb
test
test
iret
pusha
mov
ficoml
sub
cmp
mov
cli
add
mov
shlb
dec
jl
push
cmp
ds
push
movsl
xchg
cmp
lods
and
push
aam
rclb
jae
stos
jecxz
jnp
jae
adc
push
gs
cmpsb
rcrl
push
xor
jecxz
cltd
scas
inc
or
adc
addl
ror
cmp
mov
cmp
or
pusha
aas
cmpsl
imul
inc
lcall
mov
inc
push
scas
clc
aam
xor
sub
push
loopne
mov
sbb
mov
push
xchg
mov
dec
sbb
icebp
ss
or
dec
push
xchg
cld
and
and
push
js
push
mov
shll
jmp
mov
dec
mov
mov
pushf
sahf
and
xchg
jecxz
addl
or
lock
pop
cmp
test
aaa
mov
push
sbb
aad
or
sbb
arpl
jg
xchg
lds
pushf
mov
insb
mov
jbe
inc
inc
xchg
ficomps
mov
inc
push
sti
xor
sub
ja
dec
mov
mov
faddl
inc
or
int3
push
cld
jae
jnp
ss
ljmp
jp,pn
das
sub
ds
fwait
mov
jno
and
inc
xor
fiaddl
insl
mov
lea
lods
inc
add
xchg
push
cld
dec
adc
dec
mov
mov
mov
jge
add
mov
cmp
mov
push
jnp
decb
add
push
clc
aas
jno
dec
int
pop
dec
add
adc
sub
nop
sbb
pop
scas
cmp
jg
xchg
js
xchg
out
pop
scas
repz
jg
pop
push
jle
push
inc
push
sbb
mov
jecxz
inc
xchg
fiaddl
mov
xchg
in
and
arpl
rolb
add
sub
push
sub
mov
ljmp
lcall
push
xchg
pop
sub
pushf
mov
stc
pop
cli
dec
jae
scas
pusha
push
shll
ret
xchg
scas
add
ffreep
push
mov
inc
xchg
rorl
sti
int
mov
push
adcl
repnz
nop
pop
outsl
out
add
mov
cwtl
test
stc
adc
jo
push
add
mov
dec
mov
pusha
mov
mov
insl
sub
push
mov
das
loopne
ret
inc
jae
popf
mov
inc
arpl
imul
imul
es
mov
add
loope
lahf
cmp
cltd
pop
les
cwtl
je
add
popf
test
outsl
xchg
jae
imul
wrmsr
sahf
mov
dec
or
pop
mov
jp
mov
iret
pop
cmp
mov
and
jb
ret
and
pop
hlt
cmc
nop
mul
stos
jecxz
xchg
add
jbe
outsl
sti
fs
shl
pop
pop
or
jnp
adc
filds
inc
fs
roll
lcall
aam
repz
idivb
sub
fsubp
mov
cltd
cwtl
aaa
les
dec
lahf
incb
out
and
imul
pop
sti
dec
pop
pop
insl
add
ja
lret
pop
xchg
sbb
adc
xchg
pushf
dec
mov
repnz
mov
mov
test
imul
and
mull
stos
pop
cwtl
mov
sahf
rcll
scas
pushf
in
xor
stos
push
test
cmpsb
push
mov
out
scas
ret
pusha
mov
ds
in
and
pop
inc
out
dec
add
dec
sbb
nop
shlb
xor
aas
add
test
push
push
lret
mov
push
pop
mov
push
in
testb
fdivp
dec
test
repz
xor
cmc
jbe
mov
push
xor
repz
inc
add
cwtl
push
fsubs
dec
mov
xchg
callw
cmp
movsb
cmp
outsb
mov
cmp
sbb
flds
mov
add
sub
inc
mov
xchg
jae
ja
push
adcb
out
mov
shl
jnp
inc
decw
xlat
add
xchg
sub
dec
shlb
xchg
or
jnp
sub
add
sub
mul
cmp
fwait
sub
mov
mov
cmp
pushf
inc
loope
aaa
cltd
sbb
loopne,pt
sbb
xor
aas
cmpsb
mov
push
mov
test
cltd
test
adc
dec
add
popf
pop
and
aam
push
iret
push
push
pop
sub
sar
cmp
imul
sub
lret
movsl
mov
hlt
mov
xchg
cmp
lea
jbe
lret
into
pop
addr16
mov
pop
jnp
nop
loope
jo
xor
fs
inc
xchg
add
insb
cwtl
jo
cmp
jmp
mov
js
adc
test
std
enter
scas
and
clc
inc
or
jmp
jp
cld
push
pop
nopl
inc
sbb
cmovge
jl
jl
or
or
xchg
mov
js
push
pusha
and
cmp
aad
xchg
jg
in
pop
inc
ffreep
sub
mov
dec
push
dec
sub
pusha
int
pushf
stos
jo
push
sar
mov
mov
or
sub
fcomi
or
scas
mov
xor
xchg
divb
sub
mov
sbb
outsl
jmp
jb
movsl
adc
aaa
lahf
dec
lds
stos
xchg
inc
stos
pop
scas
sbb
cmp
sub
dec
stc
jns
cmp
adc
insl
cltd
xor
scas
testl
ret
sbb
mov
mov
inc
sub
pop
cmp
pop
push
outsl
std
mov
push
xchg
sub
fxch
loop
xchg
pop
mov
fwait
popa
mov
jle
mov
test
mov
scas
and
push
sub
inc
mov
or
call
jae
cmp
xor
jmp
adc
and
and
push
inc
bound
fidivl
xchg
fisubl
loopne
xchg
mov
push
and
add
insb
jge
rcrl
sub
lret
dec
or
nop
sub
call
cmovge
je
repz
pop
outsb
cmpl
mov
xchg
fdecstp
add
mov
push
test
insl
mov
roll
jnp
mov
ret
push
lods
inc
and
bound
xchg
jo
push
adcl
sub
test
dec
pop
ret
test
stos
dec
sbb
sbb
test
jp
or
in
push
rorl
loope
mov
mov
jae
sub
inc
xchg
inc
adc
ljmp
jo
inc
xlat
sbb
setne
cmp
loope
sub
ja
mov
frstor
int3
xchg
sub
popf
leave
scas
or
shl
sbb
adc
inc
lods
ljmp
mov
cltd
inc
mov
je
or
loop
pop
and
cmp
lret
frstor
mov
addps
push
mov
jmp
roll
stc
rclb
ds
jne
movsb
insl
dec
ljmp
pop
dec
test
dec
scas
jecxz
xchg
mov
popa
call
dec
das
in
fistpl
repz
or
pop
jg
sahf
mov
test
add
insb
sub
push
push
loope
loop
sub
push
daa
mov
sub
call
call
lret
mov
xchg
push
sub
push
stc
mov
in
xchg
iret
jne
xchg
add
mov
ret
push
je
or
insl
dec
fistps
mov
ret
lock
cmpsl
cltd
xor
test
mov
pop
sbb
mov
or
dec
inc
mov
je
movsl
add
ret
fsubs
in
push
cmpsl
jecxz
es
cltd
imul
or
add
lret
in
pop
sub
out
iret
cltd
jae
mov
cltd
stc
cmp
mov
cmp
nop
push
pop
bound
sbb
pop
jg
imul
push
jnp
popf
push
orb
subb
sahf
dec
inc
cmp
inc
movsl
lret
hlt
int3
subb
or
push
arpl
pop
and
mov
lahf
cmp
push
ret
stos
clc
jne
psubd
ja
xchg
hlt
dec
add
addr16
je
pop
je
movsb
add
pop
gs
cld
movsb
jmp
fstpl
clc
mov
pop
aaa
jp
and
cmp
ror
xchg
and
negl
sahf
xchg
outsb
jns
pop
mov
fadds
out
repnz
rcrb
lock
pop
mov
mov
enter
sahf
ret
mov
pusha
jmp
adcl
mov
pop
add
inc
aad
rorb
lock
in
dec
push
pop
xchg
jecxz
cmp
pop
push
mov
cmpsl
sub
xor
cmp
or
xor
sbb
cmp
xchg
adc
and
out
mov
and
int3
test
push
xor
loop
int
dec
mov
xor
das
push
jge
lds
repnz
xchg
xchg
sbb
sub
mov
shrl
fists
les
push
cwtl
lea
out
es
pop
adc
cld
test
loope
add
mov
adc
aas
adc
dec
mov
sub
pop
test
rorl
sbbl
jp
data16
cmp
mov
or
pop
cltd
arpl
outsb
xchg
int3
sub
insb
ret
xor
and
cmp
test
pop
jo
xor
sbb
ds
xor
cs
add
adc
adc
mov
imul
cmc
xchg
xor
movsl
inc
cmp
fucomp
xchg
mov
push
xor
or
insb
or
rol
mov
lcall
mulb
pop
aaa
xor
cwtl
mov
pop
inc
cwtl
les
pop
mov
xchg
mov
adc
scas
sub
fxch
mov
mov
sub
aad
loope
das
jbe
push
mov
mov
mov
in
fld
loopne
or
add
cmp
leave
outsb
loop
popl
dec
pop
fs
enter
in
inc
adc
inc
sbb
clc
xlat
in
push
int
fwait
mov
and
inc
aam
inc
test
push
xchg
sbb
pop
das
dec
rorb
adcl
inc
xor
xchg
scas
insl
insb
add
or
mov
jp
fstpt
pop
das
mov
test
pop
iret
mov
dec
aam
pop
pop
data16
cmp
into
cmpsb
call
rolb
dec
jo
or
add
push
mov
mov
ja
or
pop
outsb
scas
dec
adc
jg
jno
add
push
inc
add
cmpb
mov
mov
jns
pop
sti
cs
cwtl
jg
in
stos
cmpsb
or
ror
int
dec
pop
dec
std
mov
cmp
push
inc
sbb
stos
mov
inc
add
mov
test
scas
stos
aad
or
sub
xchg
cwtl
mov
das
stos
sbb
push
divl
outsb
aam
stos
mov
or
dec
out
mov
enter
daa
mov
movsb
sub
mov
fucomp
dec
punpcklwd
sub
les
outsl
jno
and
call
push
ficomps
xor
lahf
stos
adc
ds
shlb
inc
hlt
movsb
outsb
les
insl
mov
test
jno
notb
and
mov
fsts
popa
leave
fstl
sbb
or
inc
mov
jbe
addr16
out
ss
fstpt
jno
lcall
dec
xlat
add
mov
cli
dec
ret
inc
aas
dec
ret
sbb
subl
call
inc
sub
mov
pop
add
jbe
xchg
and
fs
mov
sub
lahf
xchg
mov
lret
arpl
outsl
adc
xchg
xor
cmpsb
mov
push
xor
or
xchg
sti
xor
loopne
insb
and
jl
pop
or
cs
jnp
test
xor
jle
jns
dec
sahf
outsb
inc
movsl
push
push
push
lret
mov
pop
jbe
xchg
inc
mov
daa
xchg
gs
add
ja
movsl
sub
jo
sub
in
inc
pop
xchg
pushf
mov
cmp
push
jb
dec
sub
push
decl
mov
cmc
clc
push
andl
aas
sub
mov
or
push
push
mov
xor
xor
adc
cli
outsl
fistpl
test
add
fcmovnu
shll
cmp
mov
in
leave
adc
adc
cmp
or
inc
mov
stc
mov
popl
cmp
and
dec
push
mov
dec
and
sbb
aam
in
addr16
or
pop
pop
inc
mov
fs
inc
push
int3
mov
inc
mov
leave
or
mov
or
cli
or
or
popf
fwait
pop
mov
mov
jo
sbb
pop
dec
pop
leave
mov
xchg
jge
es
stos
sahf
mov
fwait
add
cmp
mov
pop
daa
sub
fsubl
sar
mov
push
adc
jno
jecxz
pop
dec
hlt
sub
inc
xor
lods
aam
jp
aaa
push
pop
jle
inc
ljmp
dec
lods
mov
jne
fnstcw
jb
mov
mov
or
add
dec
stos
cld
lods
push
jmp
jmp
fnstsw
push
lret
mov
pop
mov
mov
loope
xlat
data16
pop
or
das
adc
adc
mov
shrb
mov
pop
std
add
push
lret
fistl
stos
pop
push
outsl
lret
cmp
stc
xchg
fidivrl
push
jmp
jnp
add
nop
xchg
std
xchg
sub
dec
pusha
and
nop
jae
xlat
lds
cwtl
mov
mov
mov
mov
adc
popa
xor
add
rolb
es
inc
dec
insl
fidivl
lds
or
mov
les
xor
mov
mov
in
std
test
or
ficompl
cld
insl
sahf
mov
cmp
in
lret
xor
out
and
into
pop
hlt
inc
cmpsl
push
dec
jmp
cmp
adc
in
cmp
adc
sub
sub
pop
pop
mov
xchg
ret
mov
mov
xchg
sbb
test
add
movsl
leave
dec
pop
and
call
lea
insb
or
or
push
add
imul
add
sub
popf
dec
mov
pop
into
adc
pop
push
loopne
mov
and
repz
push
lret
add
stos
arpl
arpl
pop
call
xchg
add
xchg
mov
orl
jne
iret
jg
pop
test
mov
xor
push
data16
sub
adcl
aad
xor
push
stc
ljmp
cmp
push
outsl
adc
push
loopne
in
mov
mov
mov
insb
lods
sub
sub
pop
scas
pop
cmp
mov
in
lret
subl
xchg
xchg
jo
inc
sbb
jo
sbb
call
test
je
xchg
cmp
cld
nop
sub
testb
insb
mov
movsl
mov
pop
stos
xchg
inc
cmp
or
jmp
sub
pop
insl
cwtl
jbe
stos
mov
sub
mov
cld
push
pop
and
nop
popf
cmp
or
add
nop
loope
mov
stc
adc
mov
scas
xor
test
cmpsl
inc
or
dec
leave
iret
enter
icebp
jnp
rcll
add
testb
add
add
fistpll
xchg
sub
pop
bswap
jmp
mov
cmp
ret
pusha
gs
inc
pop
mov
pusha
push
pop
pop
mov
addr16
xor
sub
divl
pushl
ret
pushf
fsubs
lock
jns
mov
in
xor
pop
pop
aas
scas
movsl
jle
ljmp
push
add
cmp
loopne
adc
cmpsl
jge
out
inc
sub
imul
dec
shrb
pop
inc
out
xor
jns
jns
xor
pop
std
andl
hlt
xor
loop
scas
dec
mov
repz
push
mov
bound
loopne
push
xchg
and
ds
xchg
adc
loopne
int3
mov
int3
sub
jmp
lret
xchg
fildl
push
adc
movsb
inc
inc
pusha
arpl
mov
scas
cld
push
jb
ljmp
icebp
sub
jbe
lret
mov
push
mov
pop
pushf
mov
insl
push
push
sub
add
cs
inc
sti
add
lds
sbb
cs
mov
adc
push
jb
jp
sbb
inc
out
cmp
sbb
jle
mov
jno
lret
cmp
jnp
jae
mov
fisubs
insb
les
add
mov
negl
add
xchg
fwait
or
and
dec
outsb
inc
ds
inc
cmp
sub
inc
sti
js
sub
inc
aad
push
je
mov
ror
cltd
adc
adc
sti
in
pushf
push
mov
pop
jl
lret
and
jecxz
arpl
bound
icebp
dec
mov
jl
idivl
mov
inc
xchg
adcb
orl
ret
add
sub
mov
ss
dec
fistpl
ffree
dec
push
ljmp
ret
out
sbb
cwtl
lock
cld
into
lods
sbbb
ja
insl
nop
cli
std
int3
fldl
inc
ljmp
notl
xor
test
mov
test
lods
mov
mov
inc
movsb
and
and
repnz
stos
lret
out
incb
jecxz
push
fists
jmp
mov
test
lahf
inc
push
jl
nopl
lods
and
shl
sub
insl
fbstp
inc
lcall
cmp
test
enter
dec
insl
std
movsl
ss
fwait
xchg
mov
sub
mov
pop
mov
push
mov
fiaddl
test
mov
pusha
dec
add
xchg
cmc
rorl
push
mov
push
fwait
mov
imul
xchg
lcall
mov
imul
pusha
rcr
daa
cmpsb
cmp
aad
jno
xchg
mov
jmp
or
fldcw
aam
jmp
mov
cmp
hlt
dec
mov
iret
sub
popl
cmp
jne
jbe
push
inc
notl
push
rcrl
sti
lret
out
pop
subb
inc
ficoms
clc
cmp
xor
clc
sub
jno
sub
cmp
jns
or
mov
add
icebp
enter
lcall
cmpsl
or
test
cmp
sub
mov
mov
in
lods
adc
xchg
pop
stos
xchg
lods
je
adc
jge
clc
test
jl
pop
mov
shrb
in
repnz
cmpsl
sub
xor
dec
xor
out
jl
pop
xlat
lret
mov
outsl
insb
aad
mov
in
adc
xor
sub
test
adc
inc
cwtl
cmc
add
jns
rcll
adc
pop
sbb
je
movsb
inc
inc
mov
mov
xchg
sbb
cmpsb
aaa
test
sub
xor
shrb
jmp
inc
scas
hlt
mov
and
pop
cld
cmp
clc
xor
xor
mov
jmp
out
popf
cs
cmp
divl
add
xor
call
ret
dec
in
sbb
sub
andl
push
mov
fiadds
mov
xor
icebp
xchg
int3
push
jnp
pop
out
fwait
outsl
sub
or
fimull
mov
es
lea
xor
and
fsubs
int3
cmpsb
xor
jbe
sbb
and
fdivrp
sbb
cmp
lods
cwtl
and
jb
adc
or
lret
mov
idivb
and
scas
push
pop
outsb
jecxz
or
push
divb
add
push
push
mov
sub
add
hlt
push
into
lea
xchg
jae
mov
jge
es
sub
cwtl
imul
fimuls
loop
and
js
xor
ss
xor
mov
jnp
je
fldenv
fwait
lods
mov
stos
call
push
jnp
lock
hlt
jg
xor
fsubrs
push
mov
sub
and
sub
into
pop
xchg
imul
aad
out
sbb
or
fwait
add
fnstenv
mov
fadds
jl
arpl
inc
mov
mov
mov
iret
mov
pop
outsl
push
nop
adc
sbb
add
int
int
std
dec
sub
inc
or
ds
xchg
xchg
push
pop
lods
pop
mov
bnd
xor
pop
push
cmp
in
inc
bound
jp
lea
jmp
imul
sbb
add
mov
insb
fdivrs
inc
addl
or
fstpt
std
loopne
or
fcoml
inc
xchg
pop
xchg
sbb
inc
nopl
scas
punpcklbw
les
es
pop
pop
enter
pop
mov
shl
scas
outsl
std
xor
pop
sub
xchg
call
xor
imul
dec
and
push
xorb
push
push
movsl
mov
push
mov
call
bound
fcoml
test
sti
cmp
add
fwait
movl
xor
loope
jb
pop
lea
insl
mov
popl
outsb
cs
sub
adc
adc
cs
xchg
dec
xor
daa
scas
mov
cli
mov
pusha
push
dec
enter
jb
and
mov
dec
lea
mov
fs
in
pop
lea
movsl
xchg
leave
cmp
dec
add
mov
cmp
leave
mov
push
test
mov
jbe
pop
loopne
sub
pop
and
inc
add
sub
popf
push
adc
cs
nop
call
jbe
fs
xchg
mov
pop
ja
dec
in
pop
jns
push
sti
dec
enter
test
test
lods
shrb
imul
cli
cmp
xchg
mov
sbb
cmpsl
loope
xor
xchg
push
sub
neg
mov
roll
lock
pop
fcomps
hlt
jae
outsb
or
mov
ds
les
fistpl
and
mov
inc
ds
jbe
lock
shl
in
scas
and
xchg
stc
out
daa
mov
push
mov
mov
test
dec
sub
clc
inc
sub
clc
add
mov
mov
adc
stos
testl
adc
dec
int3
xorl
lods
xchg
jne
jle
pop
pusha
cmpsb
std
movsl
push
inc
divl
loopne
mov
jg
sti
push
aaa
jne
out
out
xchg
push
adc
or
into
cmp
inc
add
push
inc
cmp
test
dec
loope
dec
dec
mov
mov
pop
popa
and
mov
sahf
xchg
cmpsb
sbb
gs
mov
jle
cmp
test
test
jno
mov
and
mov
adc
push
fisubl
shlb
addl
xchg
push
ljmp
ret
fbld
or
sarb
sub
adc
fdivr
dec
das
lods
stc
insb
test
fbstp
jp
sbb
dec
mov
pop
sub
repz
cmpsb
in
mov
jg
add
popa
fmull
rcrb
inc
daa
jp
mov
dec
std
les
addr16
mov
add
negb
jae
inc
pop
mov
iret
and
adc
filds
inc
sbb
cmp
imul
es
dec
fcomp
pop
dec
adc
hlt
mov
adc
pop
pop
sub
fidivs
jmp
clc
rorl
dec
call
jg
cmp
fcmovnb
jmp
jge
lock
and
xchg
cmc
jp
push
cs
subl
fcoml
lods
repz
mov
xchg
inc
cmp
jg
leave
repnz
sub
jg,pt
cmp
outsb
lcall
scas
lds
leave
adc
icebp
pushf
hlt
sbb
test
idivl
lret
lds
iret
xchg
movsl
mov
das
movsb
outsb
notl
icebp
fstps
scas
dec
movb
cmp
or
jae
sbb
mov
xchg
mov
movsb
inc
jae
ljmp
add
into
cmc
lea
mov
out
push
xchg
jmp
enter
and
arpl
inc
je
cltd
mov
mov
xlat
je
scas
pop
aad
cmp
cmp
jle
or
daa
rorl
xchg
mov
mov
xchg
negl
xor
js
loopne
add
pusha
push
arpl
ds
ficompl
int
xchg
mov
test
scas
call
imul
data16
fnsave
iret
outsb
push
xor
jb
pavgw
xchg
xchg
mov
pop
lock
mov
mov
fistpll
sub
cld
jb
push
jnp
in
cmpsb
sub
adc
div
lea
pop
cmp
pushl
aas
in
jle
push
mov
leave
pusha
add
sbb
jnp
ja
adc
stos
insb
lods
xchg
sub
xchg
lock
pop
dec
mov
test
jno
nop
jg
inc
or
xchg
lock
pop
add
ja
xchg
jle
cwtl
in
mov
gs
jmp
xor
inc
jnp
inc
loope
pop
js
mov
pop
loop
dec
addr16
sbb
xchg
mov
dec
or
and
jge
nop
xor
adc
fstpt
shld
les
orl
test
and
andl
leave
add
mov
inc
mov
sbb
pop
cmp
push
inc
add
lods
jae
icebp
rcll
inc
pop
mov
xor
jae
das
mov
adc
mov
push
pop
mov
mov
lcall
inc
in
stc
imulb
mov
scas
xor
push
xor
inc
pop
inc
jp
aas
jnp
lods
inc
cltd
cli
mov
fcompp
outsb
pop
xor
inc
jbe
repz
cmc
mov
mov
cs
jl
pusha
fstl
scas
push
jno
test
fldl
mov
aas
lcall
nop
push
and
push
push
jae
mov
xor
ficoms
xchg
repnz
int3
mov
add
push
inc
pusha
cmp
and
inc
enter
sti
repz
repz
fldt
lcall
cmp
dec
mov
adc
shld
enter
mov
movsl
sbb
out
pushl
jnp
leave
jg
sbb
cs
js
push
pandn
xchg
and
cld
cmpsb
ljmp
ja
cmp
nop
pop
jp
xchg
mov
fisubrl
xchg
inc
insb
scas
pop
jne
std
push
aad
mov
jecxz
add
xchg
fwait
mov
outsb
rorb
sbbl
dec
cld
cmp
sbb
xchg
adc
xchg
sub
pop
push
and
mov
test
push
push
sbb
xchg
dec
addb
fsubl
lock
xchg
dec
movsb
xor
sub
jmp
mov
push
push
xlat
mov
adc
mov
sbb
jmp
push
lods
inc
dec
mov
addr16
jle
filds
xchg
das
ret
ljmp
lods
jnp
shrb
sub
test
mov
scas
cwtl
adc
mov
ja
iret
iret
add
int3
xlat
jbe
cmpl
in
cmovle
mov
sahf
psrld
add
cs
xchg
jecxz
adc
sbb
jge
or
sahf
mov
mov
fs
lea
pusha
or
push
sahf
mov
addl
cmpl
cmpsl
sbb
push
push
mov
clac
dec
inc
inc
stc
fnstenv
fiadds
mov
mov
or
mov
xchg
shll
and
mov
cmp
pop
mov
arpl
out
pop
xchg
in
cmp
and
mov
or
and
jae
sub
mov
sbb
cs
and
je
cmp
jg
push
push
and
sbb
jae
or
insb
dec
std
movsb
sub
pop
add
fneni(8087
pop
add
cmp
cmp
mov
std
sbb
xchg
mov
clc
or
jle
pop
sub
filds
dec
daa
insb
shlb
popa
jmp
aaa
mov
jo
inc
jle
jns
aam
cli
hlt
dec
mov
fnstenv
bound
xor
pop
lret
in
sub
cmpl
push
sbb
jl
jnp
pushf
mov
xorl
movsb
pop
pop
stos
shll
movsb
or
hlt
outsb
jae
inc
loopne
repnz
jp
pop
ss
mov
jns
pop
je
int
and
das
out
gs
adc
ja
shl
in
sub
dec
leave
push
lods
dec
cld
cmp
xor
jp
arpl
mov
ja
fwait
cwtl
fsubs
jp
aaa
and
cmp
fistps
inc
icebp
shll
adc
jno
dec
xor
push
cs
push
in
fucomip
mov
int3
lock
lret
adc
and
fdivp
test
addr16
movsl
jns
test
fldt
dec
cwtl
jb
fisttpl
hlt
aas
out
mov
add
ffree
mov
lods
cltd
and
mov
push
hlt
in
cmp
std
cmp
add
and
and
scas
sbb
pop
rcrl
mov
sbb
inc
stos
mov
fsts
adc
cmc
inc
or
push
adc
inc
mov
cmc
pop
cmpsl
test
lods
nop
aas
push
push
push
lds
aaa
test
ja
stos
outsl
xchg
mov
rorb
fdivrl
xorps
cmp
add
inc
inc
add
xor
testb
test
lock
cmp
ljmp
stc
sahf
pop
int3
xchg
outsb
xchg
or
loope
hlt
sbb
fcmove
cmp
fwait
dec
xchg
popf
mov
iret
pop
push
in
pop
mov
mov
andb
repz
leave
test
xor
jl
adc
push
lea
pop
movsl
jg
leave
stos
cmp
sub
mov
mov
frstor
ficomps
nop
lds
pop
jb
shrb
xchg
jmp
adc
inc
shl
or
inc
cmp
sub
insl
and
jp
lcall
ret
push
xchg
enter
icebp
popf
gs
jp
cltd
sbb
and
pop
mov
pop
adc
push
or
jg
sbb
fdivl
mov
cmp
rorb
inc
loopne
negl
add
push
mov
iret
ret
mov
mov
ja
outsb
int3
lods
inc
mov
xor
push
xchg
inc
daa
pop
pop
push
ss
inc
or
sub
mov
mov
mov
cli
inc
jle
sets
dec
inc
testb
dec
in
js
dec
inc
imul
mov
xchg
sbb
shll
mov
jge
or
jmp
jae
ja
mov
insl
das
test
jle
jmp
sub
iret
push
jmp
push
push
cmpsb
gs
cs
dec
daa
iret
jmp
iret
fidivrl
or
clc
mov
sbb
cmp
xor
inc
mov
into
xor
pushf
fstp
and
push
pop
push
xchg
inc
sbb
cmp
or
jg,pt
jb
xor
inc
scas
int3
xor
sbb
les
inc
inc
inc
pop
out
adc
mov
mov
cld
pop
inc
jae
les
jmp
mov
xor
sub
cmpsb
mov
push
pop
movsb
mov
scas
mov
mov
test
in
mov
sub
xor
push
sti
cmpsb
adc
je
mov
mov
lea
push
rclb
or
xchg
xor
jmp
pop
xor
mov
int
mov
leave
adc
repnz
mov
or
pop
mov
jno
xchg
mov
es
nop
imulb
mov
dec
insb
sub
fistl
adc
pop
aaa
dec
cmpl
mov
icebp
fildl
pop
dec
sbb
sub
test
test
pop
add
pop
adcb
ljmp
add
pusha
push
xor
xor
push
inc
loop
mov
in
popf
icebp
cmpsl
xlat
mov
jle
mov
out
loopne
addr16
aaa
dec
jno
stc
sub
mov
shll
xchg
daa
jae
test
pusha
imul
and
pop
rorl
xchg
call
jecxz
fs
sub
repnz
push
call
lods
push
inc
fwait
inc
pushf
mov
sub
and
xor
adcl
jecxz
ss
pushf
cmp
js
lsl
mov
addr16
push
push
punpcklbw
movsl
adc
xor
mov
adc
adc
bnd
mov
insb
leave
cmpsl
pop
and
sti
sbbl
push
fsts
test
and
jle
ror
xchg
adc
mov
fwait
add
je
add
call
out
sti
fstpl
mov
outsb
jne
jge
mov
rorb
fsubrl
nop
inc
fbstp
cli
int
add
in
mov
sub
out
xchg
lret
ret
test
iret
insl
clc
insb
add
and
adc
push
sti
decb
and
ret
lods
inc
mov
leave
adc
jno
push
fcomps
aam
sub
pop
out
enter
sub
and
cmp
arpl
lcall
cmp
imul
inc
lock
popf
jle
test
in
adc
xor
test
mov
mov
push
sbb
xor
mov
loop
push
pop
mov
lret
and
and
pop
mov
jecxz
mov
cwtl
imul
test
push
mov
outsb
lds
int
push
lds
bound
js
punpcklwd
pushf
sub
sbb
lret
ss
sub
lods
mov
out
and
xchg
pop
imul
cwtl
xchg
dec
inc
push
jno
and
mov
or
xlat
icebp
inc
test
inc
hlt
sbb
cmpb
add
push
scas
movsb
loope
daa
out
sbb
mov
or
movb
rcll
dec
out
mov
incb
loop
xchg
mov
cmpsl
dec
jle
jp
hlt
jne
icebp
stos
shrb
sub
call
in
xor
pop
dec
mov
jbe
fdivp
dec
jecxz
ret
jl
pop
pop
stc
aad
dec
xchg
ljmp
push
or
pop
jl
push
sbb
sub
push
adc
pop
out
lds
jnp
gs
pop
mov
add
fstl
out
icebp
add
fcom
xchg
es
lret
xor
shrl
aam
mov
inc
roll
inc
dec
ficompl
jmp
out
std
addr16
clts
ret
xlat
jg
sbb
pop
in
mov
inc
dec
adc
in
mov
sub
mov
fimull
push
mov
mov
dec
cmpsl
fldenv
add
cmc
bound
and
movsb
dec
mov
into
pop
rclb
hlt
inc
cwtl
nop
xchg
nopl
xchg
ret
and
dec
test
inc
dec
or
sbb
cli
fistl
lret
dec
hlt
ret
dec
popa
pop
test
sub
pop
addr16
jp
sbb
ja
ret
xor
sub
dec
push
or
sbb
pop
test
cmpsb
daa
js
ret
fistps
mov
or
add
jecxz
sub
scas
clc
test
push
jecxz
paddq
lret
add
push
out
sbb
rorb
xor
idivb
mov
stos
pop
mov
cmp
xchg
mov
or
fildll
in
fidivs
add
mov
mov
aam
mov
lea
push
fdivrp
ret
lds
adc
mov
outsl
cmpsb
jno
ja
jl
inc
faddp
inc
mov
fwait
mov
mov
in
cs
push
add
pop
pop
cwtl
dec
dec
jp
repnz
jno
aad
mov
sub
pop
inc
lcall
sbb
push
inc
aad
lcall
fistpll
mov
addl
rolb
fsub
add
leave
or
fcmovb
mov
fmuls
push
pop
mov
pop
jo
loopne
xor
pop
cltd
pop
repz
addr16
lahf
mov
xchg
mov
jne
movsl
aad
push
push
scas
xchg
ds
out
pop
lods
lods
jb
iret
mov
sub
fwait
test
pop
xor
mov
fwait
and
fiadds
mov
insl
imul
adc
aaa
mov
es
pop
cmp
jg
inc
inc
cmp
pop
int
mov
or
cmp
cmp
push
add
daa
movsb
and
movsb
outsl
fs
sub
outsl
cmp
cwtl
mov
repz
inc
rclb
aad
cmc
aaa
or
add
outsl
imul
out
sub
xchg
adc
ss
mov
push
imul
add
lods
ja
push
lcall
out
mov
mov
lock
stc
cmp
sbb
cmp
iret
ja
xor
mov
push
aad
xchg
jl
cmpsl
mov
leave
xor
jg
mov
inc
push
xchg
leave
mov
push
mov
jge
pop
fadds
add
xchg
mov
mov
inc
xchg
xor
mov
mov
sub
cmp
imul
cmp
aaa
inc
lcall
adc
insb
or
sub
loope
add
aad
cmp
ficoml
adcb
js
xor
ret
loope
cld
cmp
psrlw
test
stos
out
push
out
ds
push
cmp
dec
mov
xor
fildl
jecxz
scas
or
repnz
and
in
test
decl
mov
aaa
xchg
jl
and
xchg
and
and
mov
or
inc
orl
daa
int
push
sub
lock
dec
and
ds
repz
xchg
sub
stos
sbb
mov
xor
repnz
push
jnp
mov
arpl
xchg
mov
push
mov
pop
enter
aas
int3
pop
or
fidivs
jg
jb
cmp
jp
enter
lret
mov
mov
rcl
lret
in
outsl
jns
imul
imul
push
arpl
sub
icebp
in
repnz
leave
mov
jne
cltd
cltd
pushf
fucomip
xor
dec
jg
dec
repnz
outsl
daa
fidivs
add
andb
test
mov
push
jbe
and
or
insb
popa
sub
loope
outsl
or
mov
jns
dec
pusha
repnz
out
jl
cmp
jp
add
aad
repz
xchg
pop
imul
call
sub
int
mov
lds
xor
hlt
jecxz
mov
fists
fdivs
lods
imul
mov
pop
rcll
repnz
ret
and
push
dec
out
xchg
mov
test
xor
jb
iret
hlt
cs
mov
sub
sbb
pusha
mov
mov
stc
popf
mov
call
push
mov
loope
cmp
inc
or
lods
testl
push
mov
ret
into
enter
fwait
add
dec
outsl
adc
shl
mov
push
outsl
xor
lcall
mov
push
sub
test
or
ja
insl
push
xchg
cmp
mov
jp
mov
xchg
pusha
je
jg
clc
cwtl
jl
jne
mov
leave
pop
shll
push
repz
sub
pop
mov
push
outsl
xchg
sub
adc
pop
hlt
mov
pushf
mov
test
and
and
mov
mov
xor
nop
call
daa
xchg
stos
orl
ret
addr16
pop
push
and
loopne
fldt
jl
push
fistpll
and
xor
bound
fmull
sub
xchg
out
aam
cmpsb
ficoml
cmp
fstl
cmp
add
push
jno
adc
imul
mov
out
dec
nop
les
stos
mov
in
pop
ljmp
imul
pop
mov
mov
orb
movsl
pxor
mov
imul
mov
add
adc
cs
shl
jne
stc
fidivrl
test
and
enter
push
push
sub
scas
mov
add
jae
or
clc
xor
orb
ret
mov
imul
sub
mov
into
fxch
jle
pop
test
lock
sub
jge
xchg
xor
sahf
sbb
mov
into
cmpb
out
add
mov
nop
jb
sti
sub
add
dec
movsl
adc
jmp
scas
xor
xchg
rol
fidivrs
mov
in
mov
jne
cmpsl
popf
sub
scas
mov
mov
cmpsl
sbb
insl
fcmovnbe
rcrb
jle
shrb
cli
push
ljmp
push
cmp
sti
sbb
test
ficoml
xchg
std
push
dec
sub
fistps
push
bound
and
in
popf
xlat
popf
or
js
xlat
and
mov
std
mov
mov
std
inc
push
push
xchg
xor
inc
adc
addb
dec
cmpl
xchg
and
mov
roll
insl
lds
inc
mov
test
mov
add
mov
aam
add
pop
shr
mov
inc
cmp
les
mov
xchg
ja
add
fsts
sbb
mov
or
lret
mov
add
and
xlat
jle
push
mov
frstor
scas
cwtl
hlt
push
sbb
pop
push
outsb
cs
scas
inc
rcl
std
push
icebp
push
jp
sbb
fidivrs
add
jg
fadd
bound
movsl
inc
pop
out
lds
jnp
movsl
in
mov
jmp
sahf
or
bound
jp
dec
adc
push
pop
lret
clc
sub
test
imul
lea
mov
inc
divb
sbb
mov
fldl
in
popa
leave
out
mulb
jo
add
out
les
lret
scas
cmp
dec
inc
js
mov
fstpl
mov
jl
popl
jns
jns
add
xor
scas
adc
mov
jl
jbe
mov
int3
jo
pop
in
call
test
adc
lahf
inc
add
lods
das
pop
sbb
frstor
push
xchg
or
jo
sub
pusha
jmp
and
mov
mov
test
sub
ret
fbstp
inc
jnp
jb
ficoms
mov
aas
push
aam
js
xchg
pop
jbe
sbb
bound
mov
sbb
loopne
lea
and
leave
add
or
dec
test
xor
pop
rorl
scas
dec
stos
pop
push
pop
sub
and
rcl
and
jl
rcll
sbb
adc
aam
sarb
or
flds
in
fsubrs
shll
popf
mov
jmp
push
ret
xchg
jnp
fisttps
sarb
sub
dec
cmpsb
test
lea
jecxz
add
test
or
mov
or
mov
fdivrs
mov
fbld
sbb
xor
mov
xor
stos
sub
mov
insb
cmpsl
push
subl
ds
mov
or
add
pop
cmp
mov
xor
sbb
add
xchg
add
movsb
adc
inc
test
pop
mov
cmpsl
adc
xor
cwtl
dec
push
stc
movsl
es
sub
adc
arpl
pop
add
add
sub
ficomps
sbb
orb
sarb
inc
lods
gs
mov
pop
aaa
stos
shrb
test
sbb
shrd
xchg
or
dec
adc
sbb
sub
cmc
adc
jge
loopne
sub
ja
add
sbb
or
gs
adc
mov
push
push
js
and
dec
jnp
xor
xor
xchg
ljmp
das
inc
cmpsl
mov
bound
pop
andb
push
push
cs
mov
mov
ret
cmc
je
jo
push
sub
lahf
sbb
out
ret
iret
sub
dec
xchg
inc
add
sub
push
push
mov
lods
ds
aam
jae
popf
add
adc
xor
jmp
and
inc
or
inc
rorb
pushf
cmc
inc
lds
pop
shrl
pop
add
ja
mov
shlb
sti
mov
push
mov
jno
and
or
adc
aas
outsb
mov
xor
add
mov
flds
xchg
fcmovnb
hlt
dec
es
lds
add
enter
xor
sbb
push
lods
jl
idivb
mov
pop
mov
ret
push
stos
test
inc
jnp
call
or
pop
das
sub
subb
sbb
mov
jl
mov
hlt
jle
dec
test
rol
test
dec
cmpsb
subb
and
dec
pop
outsb
fistps
xlat
lods
scas
cmp
xchg
outsb
in
or
jmp
mov
data16
jl
jns
xor
std
or
das
ret
push
push
add
pop
and
fstp
cltd
imul
cmp
mov
int
add
out
sbb
xor
scas
repnz
xchg
or
lds
shlb
jge
cmp
sbb
loop
sarb
cmp
cmp
scas
inc
push
add
faddl
jecxz
mov
test
pop
pushf
push
ds
clc
jo
push
fsubl
adc
stos
or
fstps
mov
push
push
push
xchg
jo
clc
xchg
xlat
mov
xor
inc
dec
dec
cld
push
xchg
fwait
imul
cltd
cli
int3
xchg
iret
insb
pop
fstps
into
push
shlb
add
sbb
push
lea
rdpmc
ret
stos
pop
push
and
jmp
sub
jo
idivb
pop
je
add
lods
sub
and
arpl
push
xchg
mov
bound
and
adc
mov
push
mov
gs
cwtl
mov
mov
in
out
movsb
add
stos
outsl
mul
sbb
das
test
addl
xor
jns
rorb
je
xchg
iret
pop
mov
fnstenv
inc
enter
repz
add
pop
loop
adc
mov
mov
xor
add
and
fnstsw
jno
int3
or
sub
bound
lods
jge
cmp
int3
mov
sbbb
fcmovne
dec
imul
push
das
push
das
push
es
add
mov
mov
sub
outsl
xor
sub
cmp
sub
sub
fcmovne
dec
jno
adc
inc
mov
bt
mov
shrb
and
cmpb
ds
fidivs
mov
cmp
mov
pop
in
lcall
enter
aaa
lock
jnp
or
lds
and
adc
hlt
fcoms
ss
ret
outsl
mov
push
iret
dec
cmp
jb
adc
xor
js
pop
sub
jl
fistl
in
movsb
inc
ljmp
les
inc
lret
xchg
lods
jge
aaa
adc
mov
movsl
add
lock
lods
add
pop
inc
outsl
add
test
sub
xor
jg
mov
mov
movsb
std
test
sbb
test
icebp
mov
das
xchg
push
jbe
cmp
les
dec
sbb
loopne
xlat
rdpmc
rcll
mov
add
jmp
inc
ja
pop
aad
mov
pop
mov
popa
repnz
repz
js
or
shlb
and
mov
xorb
push
cmpb
fwait
loopne
pop
cmpsl
add
add
iret
and
nop
inc
mov
sub
add
icebp
cld
in
inc
out
and
imul
mov
jge
lret
or
out
js
jns
jge
adc
pushf
dec
xchg
popf
fsubrp
outsb
push
out
cmp
mov
jns
test
mov
or
inc
leave
inc
jbe
loopne
mov
inc
stc
push
es
push
xchg
test
jns
div
push
push
or
lods
jbe
and
xor
sbb
cmp
xchg
inc
es
or
dec
dec
and
cwtl
shlb
mov
fnstcw
mov
das
or
mov
and
jp
jb
cli
mov
in
mov
xchg
inc
cmp
out
push
outsb
cmp
xchg
lcall
in
in
outsb
ficompl
in
inc
xor
cmp
or
sbb
arpl
leave
nop
lock
fstl
pop
mov
push
push
shll
repnz
xchg
in
xchg
cmc
iret
cmc
jle
pop
std
pop
push
sub
nop
mov
jle
stos
lods
inc
lods
xchg
popa
sub
ret
fists
xor
fimuls
adc
push
cltd
lcall
data16
icebp
clc
xlat
loope
adc
xor
fnstenv
and
cmovge
and
mov
pop
xchg
sbb
fildl
dec
mov
lods
push
daa
rcrb
dec
cmp
outsl
dec
andb
push
cmp
inc
sub
inc
shll
xchg
xchg
cmp
popa
mov
sbb
sub
pop
add
adc
push
fiaddl
sbb
cmp
int
pop
push
xor
adc
fucomi
jo
xchg
mov
lods
inc
and
daa
lret
fnsave
gs
add
push
mov
push
and
testb
stos
or
cs
pop
in
sub
dec
icebp
mov
out
sarl
push
xor
push
stc
ret
push
cmp
or
pop
mov
dec
push
call
mov
add
lcall
jmp
arpl
pop
sti
ljmp
ds
dec
cmp
enter
adc
inc
dec
ret
lret
and
fstpl
subb
cld
push
stos
cmc
mov
cltd
xchg
mov
in
shll
pop
mov
aas
test
push
cmp
lret
mov
aad
mov
sub
mov
mov
jecxz
sub
and
or
in
popf
mov
js
mov
mov
xchg
mov
lea
add
push
add
in
lea
loop
movsb
lret
sahf
movsb
and
ret
xchg
arpl
mov
push
and
inc
loope
rcrl
popa
in
pushf
sbb
mov
push
scas
add
mov
fidivrl
xchg
push
mov
das
add
add
adc
mov
pop
test
sbb
mov
aad
sub
into
mov
lret
push
jbe
sbb
push
bound
cmp
pop
dec
adc
ficompl
mov
sub
aaa
dec
sub
into
xrelease
rolb
push
push
mov
or
addr16
mov
bound
mov
aaa
mov
jg
mov
adc
sub
cmp
or
movsl
fdivrs
popa
adc
jg
push
pop
ror
sbb
in
imul
into
mov
mov
addr16
fimull
xchg
lret
ds
incl
out
sub
shrb
pop
dec
negb
out
sbb
mov
xchg
dec
mov
in
insl
mov
inc
add
fidivl
mov
les
sbb
add
add
lds
mov
push
inc
jbe
mov
sub
pushf
fsts
sub
add
mov
adc
or
mov
mov
push
in
pop
lcall
inc
pushf
cld
push
rcrb
mov
popf
sbbb
mov
movsb
sub
shll
inc
imul
test
lcall
pop
mov
and
orl
popf
and
or
insb
ss
sub
ss
pop
lcall
xor
out
mov
jp
inc
dec
xor
ja
cltd
push
mov
xchg
sbb
mov
adc
cwtl
adc
into
int3
lock
lods
push
mov
jmp
stos
fldl
mov
movsb
subb
ja
int
adc
mov
jmp
xor
lds
or
bound
add
inc
and
mov
pop
cmpsb
or
lret
inc
movsb
dec
xchg
out
mov
and
jle
mov
outsb
inc
mov
mov
in
add
ja
mov
lock
jp
xor
add
adc
test
in
add
mov
aad
jle
loope
adc
hlt
push
cmp
popf
ds
mov
outsb
subb
and
pop
repnz
loope
inc
aam
lock
adc
adc
xlat
fmuls
pusha
into
cld
cmc
test
mulb
leave
cmp
add
sbb
cwtl
sbb
sbb
cmpsb
and
movsl
test
mov
imul
jae
int3
pop
loop
cmpsl
cmp
frstor
aas
mov
mov
push
push
xlat
out
clc
inc
andb
xor
or
push
enter
imul
push
ljmp
mov
cmp
loop
loope
mov
test
push
lods
pop
push
add
pop
push
insb
push
jp
add
out
sbb
int3
outsl
out
mov
fidivrl
inc
mov
repnz
aad
aas
pusha
outsb
mov
addb
scas
jne
and
cmp
or
sbb
mov
dec
fisubrs
or
sbb
js
cld
cmp
add
and
pop
shrb
mov
add
cmp
movsb
mov
cmpsl
subb
push
push
mov
mov
dec
mov
push
outsl
push
inc
fcoms
push
pop
movsl
mov
imul
mov
mov
dec
fidivl
test
imul
out
jg
fbld
or
jmp
or
fstpl
je
dec
xchg
les
push
dec
adc
aad
cltd
int
add
stc
int
or
pop
clc
inc
cs
add
cmp
jnp
mov
andb
dec
fidivrs
adc
xchg
fistpl
aam
pop
jb
mov
rcll
daa
mov
pop
xor
fyl2xp1
sub
xor
dec
pop
adc
pushf
aad
cmp
inc
leave
repz
js
jl
cltd
and
mov
jp
loop
fbld
cmp
jne
push
xor
popl
xchg
xorb
mov
pop
xorl
mov
jl
enter
dec
cld
int3
sbb
xor
sbb
in
lds
xlat
mov
aad
in
adc
sub
xchg
jb
mov
loopne
int
pop
add
sub
in
jno
mov
cmp
xchg
inc
and
fs
pop
fs
dec
mov
or
jno
mov
aam
mov
shrl
mov
xchg
subb
lds
add
fcomi
lcall
or
xchg
aad
movsl
sti
push
std
mov
test
cmp
hlt
xorb
cli
cmp
inc
leave
pop
lods
outsb
mov
mov
lea
jno
push
cmp
xchg
int
dec
jb
fwait
xor
in
mov
xchg
mov
gs
adc
data16
pop
jns
dec
mov
xchg
out
icebp
or
push
cwtl
es
into
fidivrl
mov
and
xchg
xor
dec
adc
lods
cmpsl
bound
roll
lahf
dec
loop
aaa
fcmovb
dec
inc
outsl
testl
inc
mov
outsb
cmp
int3
xor
ret
jmp
lret
addps
or
movsl
addr16
and
pop
mov
add
pop
lahf
or
rolb
dec
xchg
and
jne
in
stos
hlt
and
dec
fisttps
pop
mov
sarb
fstl
test
adc
fcmovnb
cmp
pushf
gs
pop
cmp
iret
xchg
xchg
push
jecxz
stos
dec
scas
push
loopne
pop
add
xchg
lret
mov
add
fcoms
mov
sti
loop
mov
movups
sbb
dec
pop
adc
sbb
xor
add
aaa
inc
add
sub
ljmp
es
xor
cmp
cs
mov
movsl
adc
cmpsb
in
or
cmp
inc
neg
jmp
push
mov
or
jg
stos
push
add
pop
cld
repnz
cltd
lock
je
ficompl
rcll
test
mov
cli
out
sbb
push
fdivr
xchg
xchg
sbb
ret
jns
mov
push
dec
std
bound
roll
notb
or
mov
jmp
push
test
sbb
adc
rcrl
cmp
add
or
xchg
xchg
cmc
cmp
iret
lret
sub
mov
imul
mov
dec
pushf
mov
xor
lret
push
in
adc
inc
push
leave
fildll
sub
rclb
dec
hlt
and
aaa
mov
fldl
mov
pop
in
roll
jnp
adc
cli
push
xchg
mov
mov
stos
adc
mov
adc
clc
cmpsb
jno
dec
push
subb
push
sti
dec
mov
and
aam
push
sub
or
mov
stos
mov
lods
daa
xchg
daa
sbb
push
insl
xlat
scas
cmp
fistl
mov
fadds
pop
stos
out
arpl
adc
xchg
dec
mov
mov
lods
jmp
and
and
sbb
jl
cld
add
lahf
cmpsl
xchg
jnp
jge
movsb
push
lock
cmpsl
jnp
inc
cmpsl
push
pop
dec
testb
fsubl
xchg
mov
mov
xor
sub
fldcw
jb
subb
lea
cmc
fisubl
dec
pushf
jecxz
pop
fmuls
ja
adc
push
xchg
insl
je
stos
loop
loop
sbb
loop
mov
fsubrl
test
inc
or
add
cli
in
cmp
cmpsb
ds
xchg
lods
jg
iret
pushf
fldenv
or
inc
push
les
mov
fnstenv
xchg
sbb
cmpsl
or
cmpsb
test
cmp
xor
in
addl
cmp
cmpsl
xlat
adcb
mov
fs
lods
cwtl
cmpsl
sbb
xchg
lock
push
mov
sbb
aaa
scas
movsb
inc
inc
pushf
pop
gs
and
mov
dec
mull
testl
movsl
mov
pusha
xor
sub
stos
push
std
outsl
push
xchg
push
adc
mov
imulb
cs
insl
repz
mov
test
pop
inc
int
imul
aam
cmp
lret
lret
mov
or
ja
jl
stos
in
out
fcmovnbe
sarl
dec
ljmp
jb
rcll
btc
or
in
cmp
pushf
sbb
sahf
into
push
add
arpl
jge
push
ds
push
out
mov
aam
sub
pop
shll
mov
das
imul
mov
in
loope
mov
mov
in
fisttpl
imul
loop
xor
mov
or
or
add
std
aad
dec
icebp
popf
fwait
pop
mov
pop
cli
dec
jecxz
insl
jecxz
lret
in
cmpsb
xor
push
rcl
or
cmp
sbb
or
lods
dec
mov
lods
daa
pop
cmp
or
cli
xchg
jnp
lods
dec
mov
testl
movsl
push
cmp
icebp
jge
fs
xor
lahf
mov
testb
dec
mov
pop
adc
notl
rcll
popa
push
pop
lock
mov
mov
fnstenv
cmpsl
jae
fmull
cli
mov
or
pop
xor
mov
jno
hlt
icebp
cmp
adc
fadd
pop
push
insl
jbe
push
sbb
mov
inc
pop
xchg
pop
adc
dec
mov
ret
jmp
sarl
paddw
loopne
cltd
push
xlat
enter
jae
sub
xor
xchg
je
and
fisubs
sub
push
sub
push
arpl
loopne
sbb
cld
fistl
lock
je
or
fsubl
in
xchg
mov
sbb
insl
popf
sub
push
in
stos
mov
add
orb
inc
cs
push
int3
cmp
popf
lret
daa
int3
jnp
inc
sbb
inc
and
xor
js
jo
shlb
pushf
loop
cmpsb
add
sub
push
dec
imul
add
xlat
fbld
in
int
in
mov
xchg
lods
out
dec
dec
ret
into
jmp
ds
pop
jle
dec
jg
and
and
or
sub
mov
add
inc
bt
adc
imul
pushf
in
adc
mov
xchg
cld
jns
and
movsb
push
mov
test
daa
gs
int3
lds
aam
in
pop
lock
rclb
push
jp
mov
hlt
jae
cltd
arpl
in
lahf
ret
pop
mov
inc
les
and
popa
push
mov
fcoml
push
bound
xor
pop
dec
lcall
push
aam
scas
fs
ret
pop
aaa
insb
mov
gs
inc
dec
mov
dec
sbb
sbb
testl
xor
scas
sbb
and
cs
xchg
ret
sub
sbb
mov
movsl
int3
pop
test
dec
ret
mov
xchg
iret
aas
bound
cmp
mov
xor
cltd
popf
jns
sub
inc
adc
sub
dec
enter
add
out
mov
adc
or
ja
mov
out
cld
cmp
xchg
movsl
inc
push
aas
jle,pt
mov
sbb
pop
sti
sbb
jb
push
enter
or
pop
jmp
fs
jl
rorl
dec
fimuls
adc
movsl
stos
push
xor
lds
push
lods
mov
xchg
popf
jge
mov
in
jl
jg
or
sbb
push
outsb
rorl
mov
adc
and
pop
dec
loop
fstps
pop
mov
xchg
mov
out
ret
push
dec
dec
xor
mov
inc
dec
xchg
pop
rcrb
jb
popl
and
mov
mov
jns
mov
push
fucomp
cmp
jno
mov
cli
and
sbb
std
xchg
adc
std
or
ss
sbbl
outsb
mov
mov
loop
sub
leave
inc
pusha
loopne
ljmp
push
mov
sbb
inc
frstor
or
sub
jne
stos
mov
aaa
xchg
outsb
repz
jge
mov
mov
in
and
sbb
dec
or
aaa
xor
inc
test
mov
push
xchg
push
adc
and
cltd
stc
aas
jl
mov
push
xor
leave
mov
xor
adc
sub
mov
xor
sbb
test
jae
sbb
jo
adc
jno
xor
pop
mov
int3
push
add
xchg
inc
add
mov
cld
gs
cmp
mov
mov
xor
pushf
outsl
xchg
scas
arpl
pop
jle
cmp
dec
push
mov
sbb
mov
and
mov
rcll
or
and
aad
fwait
cmpsl
jb
repz
insl
sbb
mov
sarl
sbbb
inc
hlt
scas
test
adc
hlt
push
subl
sub
xchg
sub
hlt
dec
lret
out
imul
loop
aam
xchg
fdivrl
jle
pop
adc
mov
testb
cmp
inc
ret
inc
sarl
rcrl
adc
cwtl
inc
jmp
call
adc
jo
dec
rcrb
jge
mov
aad
mov
push
mov
clc
popf
add
or
or
cltd
aad
push
test
addr16
mov
lods
jl
xchg
not
fistps
jle
or
imul
jb
pop
or
mov
lock
jo
jae
pop
cmp
xlat
lret
xlat
xchg
push
and
repz
inc
fdivp
out
jo
aas
mov
jne
sub
mov
jo
pusha
rcll
push
into
sbb
or
sti
jo
aas
add
les
push
cmp
inc
fdivs
sub
cmp
int
outsb
push
imul
bound
add
ljmp
rorb
push
mov
bnd
icebp
ret
mov
aad
sbb
xchg
push
jmp
push
or
lods
fsin
sub
push
jle
cmp
lret
mov
repnz
ss
mov
dec
aam
add
jmp
je
fs
xchg
mov
cmpsb
bound
lods
test
outsb
int
cmpsl
rcll
shr
pop
push
push
mov
adc
mov
mov
jno
mov
bound
push
imul
lock
add
pop
xchg
pop
xchg
call
mov
mov
in
iret
and
push
push
adc
nop
sbb
inc
mov
loope
cltd
mov
mov
xlat
xor
lea
mov
ret
ss
push
pushw
les
pandn
add
fstps
adc
pop
xchg
loopne
mov
or
cmpsl
push
cmp
and
mov
sbb
cli
mov
push
insb
sub
or
mov
loope
xor
scas
sbb
fs
das
and
mov
imul
mov
aas
adc
fistpl
and
push
in
test
div
shlb
cmpsb
dec
incb
cwtl
sbb
aam
dec
mov
stos
rcrb
and
les
mov
test
hlt
mov
and
push
mov
icebp
imull
jle
lahf
mov
sbb
lods
cmpb
outsl
mov
inc
sbb
ret
jbe
cli
add
cmpsl
lret
jb
xor
mov
and
popf
push
xchg
xchg
and
adc
and
repz
push
outsb
push
mov
repz
and
add
std
add
notl
hlt
loopne
lea
aas
xchg
hlt
sub
das
sbb
push
loop
call
push
and
lahf
fldcw
xchg
xchg
cld
jmp
xor
bound
pop
scas
imul
pop
ficoms
cmp
xchg
movsb
lret
cmp
add
jb
inc
sub
xor
pushf
clc
cld
lret
and
fwait
xchg
pop
cwtl
cltd
cmpb
mov
adc
xchg
jno
rcrl
inc
or
jl
rcr
addr16
push
jae
jge
jge
out
movsb
add
xor
aas
fsubs
in
dec
pop
aaa
push
rcrl
in
and
int
clc
xor
inc
cmp
or
xchg
aas
xchg
sub
add
hlt
inc
pusha
inc
xchg
dec
adc
arpl
or
aam
or
adc
adc
subb
cltd
mov
test
xchg
xchg
sub
loop
cmpsl
stc
mov
daa
insl
out
push
jmp
lahf
jmp
sbb
in
ljmp
shrb
movsb
adc
push
inc
stos
pop
aaa
icebp
scas
sbb
pop
cmpsl
inc
les
lcall
pop
add
push
outsb
jb
in
pop
jae
fnsave
xchg
mov
jo
push
shlb
pusha
sbb
pusha
bound
cltd
into
fldenv
push
fdivrp
aas
mov
mov
cmp
pop
ss
int
sbb
pop
sub
inc
repz
pop
stc
xchg
xor
pop
test
arpl
dec
test
jae
insl
jno
bnd
outsb
xchg
es
jge
push
jle
inc
insb
orb
aaa
inc
pop
rcll
cld
aam
popf
orl
pop
dec
jae
rorl
arpl
js
mov
out
xchg
pop
inc
and
sub
int
lds
iret
and
jp
sub
jno
mov
in
cmp
test
daa
insl
xlat
dec
daa
and
negl
inc
xchg
mov
filds
inc
int3
bound
fadds
call
add
fcomps
dec
dec
cmpsb
dec
pop
pop
pop
fs
int3
lcall
insb
sbb
mov
mov
xor
jmp
cli
xchg
inc
sbb
sub
jl
insb
ret
pop
cs
andl
loop
jne
scas
bound
mov
sti
bound
nop
lret
leave
push
stc
or
fcomip
bound
pop
mov
jnp
js
mov
sahf
xchg
add
flds
in
jbe
jmp
mov
rclb
add
sti
push
aad
nop
out
xorl
rep
out
cmp
je
mov
idivb
movb
mov
ret
rclb
mov
mov
and
add
adc
xchg
xchg
lcall
cmpsb
hlt
jl
xor
test
cli
jmp
and
in
cmpsl
dec
or
pop
or
inc
mov
push
dec
mov
stos
mov
in
inc
push
scas
push
adc
stos
lods
outsb
cmpsl
add
adc
fdivs
mov
or
loope
xchg
mov
jmp
and
cld
pop
mov
fsts
pusha
mov
fadd
aas
push
popa
test
inc
jg
xchg
test
mov
int
sbb
sbb
andl
or
jecxz
dec
rclb
cwtl
pop
mov
movsb
pusha
frstor
repz
andb
dec
aaa
sbb
outsb
int
movsl
push
sub
imul
push
and
push
movsl
and
add
mov
sub
clts
mov
jle
mov
jp
jg
cwtl
jbe
push
iret
mov
cmp
jp
and
xchg
in
mov
jecxz
in
xor
sete
insb
es
adc
adc
icebp
sub
movsl
xchg
add
mov
das
scas
dec
push
das
pop
or
push
mov
test
int
mov
mov
pop
pop
push
adc
aas
stc
fldt
daa
push
xchg
mov
mov
std
sbb
inc
ret
ret
aad
stos
ret
mov
dec
clc
cltd
outsb
mov
scas
xchg
lea
sub
pop
pusha
or
mov
ljmp
out
icebp
pop
sbb
std
xchg
pop
out
add
push
adcb
js
sub
sbb
jnp
mov
add
or
jb
loopne
aaa
in
fadds
push
push
jle
icebp
mov
sarl
mov
fmuls
movsb
stc
fcmovne
and
push
movb
xor
sar
out
push
icebp
insb
je
adc
sbb
cmpb
xor
dec
pop
sbb
xor
mov
and
jae
in
xchg
push
mov
mov
mov
xor
cli
test
fdivr
nop
pop
xchg
jno
adcl
mov
xchg
in
mov
lock
testb
and
lret
jne
mov
outsb
aaa
jmp
jne
hlt
jge,pt
imul
in
das
in
xchg
fadd
in
rorb
pop
dec
inc
insb
xlat
call
mov
ss
push
xchg
or
push
dec
dec
out
jb
xchg
movsl
add
add
lret
lds
test
int
pop
adc
aad
sub
xor
inc
jg
insl
fmull
jnp
call
xchg
add
pop
xor
out
sarl
inc
jno
add
dec
outsl
stos
jne
sub
or
idivb
dec
push
mov
mov
ret
dec
push
mov
pop
push
inc
test
mov
mov
jmp
add
mov
cmp
lea
jl
ret
and
les
mov
aaa
push
jle
xchg
test
fidivs
lret
pushl
dec
dec
xor
jnp
clc
adc
stc
in
mov
cmc
popf
mov
lea
push
fadds
push
lock
jg
mov
push
lret
lret
roll
jo
mov
mov
xchg
cld
add
rcrl
andl
cmpsl
mov
test
ljmp
adc
test
enter
and
pop
push
ljmp
je
cmpsb
pop
mov
subl
inc
pop
sbb
push
cmc
dec
sbb
xchg
and
jne
orl
sub
mov
loopne
sti
outsb
insl
jecxz
push
sub
cmp
sub
in
imul
dec
xchg
rcr
dec
outsl
fdivs
movsl
mov
sub
xor
ds
loopne
jno
movsb
mov
ds
mov
push
fcom
mov
dec
cmp
imul
cmc
fsts
in
ds
cld
sub
lods
or
mov
cmp
mov
aam
xor
dec
out
mov
cmp
xor
repz
inc
adc
inc
mov
xor
and
js
es
mov
jle
ljmp
sub
jbe,pn
cmp
lds
mov
rcll
pop
mov
testb
rcll
divl
dec
lock
mov
xor
cli
cli
fs
movsb
imul
or
mov
aad
push
jo
xlat
push
test
mov
mov
xor
adc
lods
sbb
mov
insb
out
mov
insb
fdivrs
jb
and
inc
rorb
pop
aam
nop
out
mov
mov
imul
pop
sub
push
mov
cmp
lcall
cmp
mov
pop
add
mov
in
jle
jno
cltd
add
lcall
xor
repnz
sbbl
mov
add
pop
xchg
je
cs
jmp
add
add
adc
mov
in
mov
pop
sahf
adc
jg
outsl
in
scas
lods
mov
lcall
aam
or
mov
or
jecxz
movb
mov
outsb
mov
ja
push
lret
or
or
loopne
mov
pushw
mov
lcall
inc
pop
jnp
outsl
xlat
aaa
outsb
lods
test
add
inc
jge
dec
jecxz
leave
xchg
shl
add
jge
adc
loope
push
push
subl
leave
clc
fstps
mov
jns
scas
add
int3
push
gs
stos
mov
das
testl
movsl
adc
mov
mov
add
xor
pop
dec
dec
or
addl
xchg
sahf
insl
stc
xchg
push
sub
cmp
popa
or
insb
jecxz
sarb
push
aam
cmp
jns
dec
add
add
aam
mov
dec
ja
out
ret
push
adc
shrb
fsubl
lock
aaa
dec
ja
mov
mov
xlat
mov
add
cwtl
push
fcomps
scas
fs
fwait
cmpl
int3
pop
lock
cld
adc
xor
stos
and
bnd
xor
push
scas
mov
sti
pop
int3
xor
sti
xchg
xchg
iret
mov
jg
xchg
call
xchg
fldt
aas
inc
cmp
mov
rcl
aas
and
sbb
ss
out
add
sarb
lahf
imul
hlt
cs
ja
stos
rol
jl
aas
inc
or
push
pop
incl
in
ljmp
cmp
shll
xchg
pop
mov
les
std
mov
push
sbb
jl
dec
mov
es
mov
pop
out
inc
and
aad
mov
mov
mov
sub
jne
out
test
push
in
call
inc
sbb
sbb
outsl
push
push
leave
loopne
pop
pop
xor
popa
fs
cmovg
icebp
ljmp
and
push
lcall
jo
sub
ss
cli
test
insb
fdivs
xchg
hlt
inc
fwait
or
shll
sbb
and
push
mov
xchg
jge
sti
xor
add
in
cmp
sbb
fidivs
jmp
push
cmp
mov
sti
movsl
in
xchg
inc
repz
dec
cmpl
out
pop
testb
pop
jne
in
cli
out
xlat
jne
loope
xchg
or
xchg
sub
and
push
lret
popf
pop
inc
int
ret
mov
stos
enter
imul
out
xlat
or
or
xchg
add
divb
pop
jg
and
cwtl
xor
push
hlt
xlat
repz
lds
movsb
addr16
enter
int
fsubp
or
mov
mov
into
imul
in
sub
stc
pop
jg
sbb
cmp
add
cltd
push
jae
mov
mov
sbb
pop
fbstp
daa
ret
dec
js
outsl
push
aas
sub
pop
fwait
in
sbb
inc
je
xchg
or
je
lds
mov
fstl
cmp
cmpb
ja
adc
out
mov
popf
jge
jbe
test
arpl
test
repz
aam
into
and
sub
lods
fstpl
push
cmp
fwait
lret
bnd
leave
xor
dec
addl
arpl
adc
insl
js
out
insl
sub
lahf
data16
movsb
or
mov
mov
xchg
hlt
jnp
loop
mov
sbb
mov
adc
test
mov
js
fsts
std
inc
iret
negb
cmpsb
pop
popf
inc
loop
stos
mov
mov
push
lea
sub
jmp
adc
out
pop
sub
cltd
dec
out
or
test
imul
sbb
dec
in
and
and
in
mov
sub
xchg
push
jl
stos
cmpsb
jmp
in
xlat
shrb
sti
stos
add
xchg
add
push
cmpl
push
mov
stos
and
int3
cmp
push
xchg
in
or
cli
arpl
loope
jg
mov
xchg
lea
aad
int3
loopne
xchg
sub
pop
insb
jge
sub
pusha
push
mov
xchg
mov
subb
in
int3
sarb
and
loopne
imul
rorl
es
pop
insl
cmp
xchg
mov
dec
push
cmp
mov
incb
data16
fcompl
fstpt
in
mov
imull
jecxz
pop
stos
ss
incl
push
push
jecxz
mov
dec
dec
jnp
or
mov
cmc
mov
mov
and
in
sub
push
sti
or
mov
ss
adc
int
sbb
lcall
in
cmp
in
stc
leave
test
cmp
fbstp
sbb
pop
cmc
jle
insl
jmp
jnp
sbb
cmp
in
dec
add
and
and
jecxz
xchg
ficoml
xor
xor
mov
arpl
movsl
and
rolb
pop
stos
cmpsb
out
cmp
nop
jo
mov
pop
sbb
rcrb
repz
jg
addl
push
pop
jnp
iret
lods
mov
into
sbb
fstps
in
and
aad
push
adc
jb
mov
mov
ljmp
mov
lcall
fisubrs
mov
addr16
add
shrb
leave
pop
lret
sbb
inc
mov
mov
or
dec
mov
mov
fcmovbe
aam
mov
pop
mov
adc
inc
sbb
lahf
mov
fiaddl
popf
jns
push
cmp
ds
out
popa
adcb
push
idivb
jecxz
jb
rorb
dec
aaa
nop
pusha
dec
ret
mov
lock
arpl
jecxz
mov
push
add
clc
adc
in
pop
ret
insb
pop
ja
cmpsb
xlat
gs
and
sbb
cmp
into
lock
iret
xor
mov
sbb
or
iret
ficompl
cmp
pop
fwait
cli
lods
sti
mov
mov
inc
gs
jp
icebp
fnsave
out
popf
mov
in
inc
cmp
dec
inc
hlt
sbb
jb
pop
mov
sbb
mov
stos
jne
pop
enter
cmp
scas
repnz
int3
mov
call
cmp
mov
and
cltd
mov
fwait
jne
inc
mov
or
leave
in
push
add
xchg
mov
out
mov
xchg
pop
adc
popf
out
push
xor
mov
xchg
int3
sbb
mov
cld
xor
cmc
dec
dec
xchg
cmp
adc
mov
mov
adc
insb
cmp
mov
sub
inc
fistl
fnsave
cmp
mov
sub
fldz
adc
inc
outsb
jns
mov
inc
xchg
rcl
js
roll
mov
add
leave
cld
neg
dec
mov
sbb
adc
sub
mov
daa
sarl
dec
int
cltd
cs
xor
mov
setb
push
push
decl
into
sbb
shlb
movsl
in
fists
add
jnp
add
xchg
sbb
lods
xor
pop
fs
or
xor
in
dec
call
pop
mov
in
test
enter
fwait
xchg
and
push
push
gs
mov
filds
and
xor
jecxz
cmp
jecxz
jecxz
and
pop
pushf
jmp
insb
test
andb
ja
stc
push
cs
mov
imul
repnz
pop
jl
lcall
mov
push
iret
or
out
fidivrs
xor
adc
lods
shlb
andl
pop
sbb
popa
shr
xchg
lret
mov
and
mov
in
xlat
out
fcmove
shll
pop
adc
xor
and
jnp
das
and
or
ret
add
dec
ret
shr
inc
stos
je
and
and
fs
push
pop
in
lock
mov
cmpsl
xchg
jo
push
inc
iret
jo
add
mov
push
test
mov
js
and
mov
scas
fdivrl
insl
adc
shll
hlt
imul
jmp
sbb
jg
xchg
mov
pop
pop
add
cmpl
and
mov
push
movsl
jbe
cmp
ss
mov
sbb
arpl
push
pop
mov
sbb
or
pop
dec
mov
mov
pop
popf
push
lcall
clc
dec
je
lds
les
dec
push
movsl
test
pop
or
jp
xchg
inc
adcb
ljmp
out
add
jp
sbb
scas
addr16
mov
xchg
inc
lods
fcmovnbe
pop
movsl
test
xchg
dec
and
add
xor
dec
jmp
insl
shl
imul
and
and
push
cmp
fisubrl
fbstp
jns
mov
std
dec
or
inc
fwait
jp
pop
arpl
jmp
test
std
int
dec
imul
imul
xorl
mov
stos
test
mov
jle
fwait
pop
sbbb
and
pop
cli
repnz
sbb
and
add
jbe
jge
xor
pop
js
ffreep
and
and
out
shrb
shrb
dec
or
shrb
in
jo
sbb
pop
std
movsb
out
int3
sbb
mov
cli
adc
out
pop
jne
xlat
rolb
enter
lea
pop
xchg
mov
jl
dec
mov
push
iret
les
bnd
inc
clc
loopne
pusha
jp
loope
nop
insl
jl
jns
sub
icebp
jns
sub
mov
subb
roll
iret
scas
into
scas
mov
mov
pop
sub
test
lods
ret
mov
hlt
test
cmp
adc
cli
mov
push
pop
mov
sbb
jle
pop
mov
cs
int3
xchg
loop
ret
pop
stos
mov
cs
jge
daa
mov
in
sysenter
dec
push
mov
out
movsl
add
adc
out
roll
add
add
iret
testb
jae
adc
sub
dec
and
inc
dec
jmp
ja
adc
outsb
stos
test
repnz
cmp
mov
inc
test
hlt
add
and
adc
xchg
dec
or
shrb
dec
mov
orb
js
or
cmp
mov
mov
cs
pop
iret
mov
jno
stos
xor
cltd
sahf
iret
movsb
cwtl
loop
push
sahf
dec
mov
and
out
adc
sbb
mov
adc
movsl
mov
pop
outsb
adc
ss
push
pop
jge
xor
sbb
sub
or
loopne
fwait
movsb
and
out
pop
fsts
sub
test
test
pop
loopne
stos
test
and
push
cmp
push
hlt
xor
mov
xor
xchg
cmc
cmpsl
jge
jge
stos
lret
and
inc
lods
mov
xorb
shrl
icebp
fisubs
fdivrl
push
movb
inc
lods
faddl
addl
lods
ljmp
inc
mov
negl
mov
push
cmp
cmp
mov
mov
jns
fcoml
mov
test
cld
loopne
adc
andb
fisubl
sub
fidivrs
sub
sbb
and
or
sub
inc
in
xor
add
jbe
add
ret
mov
sub
mov
sub
cmp
cwtl
jge
and
cltd
cli
cs
xchg
xchg
les
xlat
outsl
xlat
imul
scas
push
mov
mov
mov
pop
repnz
add
xor
pop
out
dec
jge
stos
xchg
rolb
ljmp
or
test
pop
dec
imul
jns
or
lret
cmpsl
lods
shll
fnstcw
fwait
inc
aaa
je
mov
mov
mov
sbb
xchg
jno,pt
xchg
imul
insb
xor
push
jo
ljmp
imul
sbb
shlb
insl
adc
cmp
fwait
pop
nop
sbb
jg
loope
cmp
jge
fnstsw
sbb
pop
cmp
jbe
inc
cwtl
add
imul
hlt
jb
js
and
cli
sahf
pop
cmp
mov
sub
add
data16
xchg
dec
push
rol
mov
jecxz
sbb
insl
je
jg
shll
popf
mov
gs
or
shlb
ljmp
shrb
pushf
xorl
cmc
xchg
xchg
movsb
fcmovbe
mov
in
stos
mov
adc
and
add
addr16
adc
inc
pop
push
iret
in
lcall
cmc
xor
and
sahf
mov
test
nop
in
push
dec
out
mov
sahf
or
fcomip
push
inc
jo
outsb
jnp
ljmp
sbb
sub
adc
sbb
cmp
adc
sbb
ss
cli
rcl
xchg
aaa
cmp
dec
leave
repnz
adc
addr16
in
xchg
clc
mov
out
sbb
stos
insb
test
fidivl
lea
sti
dec
xchg
adc
or
jb
call
inc
cmp
mov
loop
mov
addb
mov
movsb
xchg
dec
adc
mov
call
sub
xor
imul
bound
loopne
arpl
jg
mov
jge
mov
cmp
data16
lcall
ljmp
arpl
xor
cmp
in
lret
mov
in
add
and
pop
sbb
lea
das
push
scas
ds
lret
xlat
xchg
and
ret
imul
or
ret
pop
lret
clc
pop
jecxz
mov
stos
mov
adcl
mov
ret
faddl
call
add
mov
outsl
pop
push
or
ror
push
and
adc
dec
add
insb
icebp
dec
push
sub
sbbl
dec
rolb
mov
les
in
das
cltd
popa
and
inc
pop
sbb
mov
mov
lea
shll
out
test
test
jbe
fcoms
dec
sbb
pushf
test
je
xor
push
push
mov
in
in
aam
int3
xor
or
dec
sub
sub
mov
xchg
push
lret
filds
fs
ret
data16
cmpsl
loop
dec
sarl
dec
pop
push
mov
inc
rolb
fwait
push
shll
jecxz
xor
mov
jno
cmp
fwait
jb
aam
dec
stc
mov
test
push
mov
jecxz
pop
sbbl
or
sub
scas
pop
push
add
add
or
loop
adc
mov
cmp
jnp
call
jnp
xor
roll
scas
and
bound
and
es
movsb
sub
pop
jb
mov
outsl
stc
cmp
dec
mov
add
lods
mov
dec
push
sub
push
out
lock
ja
cli
push
addb
mov
and
mov
stc
lea
daa
loopne
pop
mov
xor
notb
mov
rorl
mov
xor
leave
les
jmp
mov
stos
lea
mov
rcrl
test
pop
popf
in
popf
mov
push
push
jp
lds
pop
scas
inc
dec
xor
jbe
and
mov
repz
hlt
xor
mov
outsb
dec
pop
cmp
addl
dec
insb
jp
add
or
leave
int3
bound
fadd
insb
sbb
fnstcw
or
lcall
lcall
pop
cmpsb
adc
aam
push
pop
mov
fidivrs
jmp
jno
and
pushf
sti
sbb
popa
sub
sub
dec
jp
cmp
mov
stos
pop
dec
mov
cltd
xchg
add
data16
lahf
mov
ds
ficompl
rorb
mov
pop
mov
insb
nop
xchg
mov
pop
scas
je
jno
mov
ret
jle
loopne
dec
ds
loop
mov
push
pop
push
inc
ficoml
rcl
mov
mov
inc
push
fistpll
push
push
ret
insl
ss
adc
or
loop
leave
xchg
ret
jno
cmp
outsl
fnsave
jge
sub
pop
cmp
lods
dec
in
xchg
ror
daa
leave
test
pop
lret
idiv
shll
out
push
pusha
pop
sub
add
or
int3
push
imul
cmp
cmpsl
cmpsb
push
imul
test
and
push
icebp
popf
int3
mov
jae
je
lock
js
movsl
add
xor
into
mov
mov
data16
cmp
xchg
add
ss
cmc
jno
insl
add
js
imul
mov
ljmp
mov
mov
negb
iret
xchg
shrl
mov
jg
insb
xor
xchg
test
sti
jns
cmp
aas
sub
outsb
xchg
inc
pop
pop
js
enter
sbb
movsb
int
xchg
pop
fcmovnb
ljmp
jle
jle
int3
pop
daa
outsl
sbb
jp
test
daa
aam
ja
jge
cwtl
push
test
sbb
mov
lret
subb
cs
int
push
lea
fs
pop
and
test
cmpsl
daa
or
push
cmp
imul
jb
out
pop
inc
xor
lods
mov
frstor
popf
mov
gs
mov
and
jle
push
rolb
dec
xor
rclb
dec
popf
jae
outsl
aas
dec
jle
cmp
xchg
mov
mov
dec
rolb
into
scas
gs
mov
mov
and
fmull
cmp
mov
sub
pop
lret
pop
loopne
push
aaa
sbb
repz
jne
add
xchg
movsl
lcall
cmp
aas
mov
push
mov
insl
xor
mov
jns
jns
rcll
sub
adc
push
popa
adc
insl
mov
jbe
stos
pop
push
or
testl
sbb
bound
add
push
lcall
outsb
xchg
ds
leave
xchg
cmp
push
jmp
xchg
xchg
lock
push
ja
xchg
or
jne
fmuls
cld
ljmp
enter
fsubrl
outsl
jle
int3
cwtl
push
push
std
icebp
cwtl
imull
shll
pop
lret
sub
movl
dec
test
mov
add
stos
xchg
mov
clc
inc
scas
mov
outsl
inc
inc
inc
mov
jo
jb
daa
outsb
xchg
inc
outsb
pushf
mov
call
add
imul
aad
sub
jns
jmp
popa
mov
pushf
ds
pusha
fimull
mov
cltd
jne
cltd
lret
ljmp
cmc
stos
xchg
and
bnd
jbe
leave
fidivrl
bound
nop
mov
xor
inc
and
data16
lods
lahf
insb
shrl
daa
and
lret
sub
loope
mov
mov
dec
fnsave
imul
in
push
outsb
cmpsl
les
jns
je
scas
jecxz
mov
nop
mov
sbb
imul
dec
cmp
pop
movsl
mov
mov
pcmpeqd
xlat
pop
and
sub
and
scas
loope
out
mov
sahf
pop
out
inc
and
jge
sahf
dec
addr16
adc
cs
fs
jecxz
stc
jecxz
xchg
filds
jb
cwtl
dec
fstps
and
leave
pop
sub
cs
jnp
sub
push
fwait
dec
jle
pusha
repnz
push
and
cld
fs
jnp
and
dec
pop
insl
test
nop
xor
scas
pusha
fstl
xchg
ja
inc
inc
mov
fidivrl
scas
fildll
sub
pop
sub
in
sarb
dec
lea
rorb
aam
inc
dec
imul
dec
lcall
adc
lea
scas
fadds
cwtl
mov
ljmp
sbb
out
mov
push
ret
sub
and
fstps
std
add
xchg
jnp
mov
mov
ss
mov
sub
daa
std
leave
aaa
jge
and
pop
xor
mov
popf
ret
fwait
clc
fimull
pop
stos
cmpsb
mov
loop
mov
jmp
stos
cmp
mov
or
mov
je
inc
faddl
xchg
jo
imul
cmp
adc
lods
repnz
aam
adc
ds
pop
dec
addr16
lock
hlt
int
mov
dec
clc
in
push
sbb
daa
or
ja
call
cmp
add
imul
xlat
mov
mov
test
out
xchg
cltd
les
cmp
fists
adc
aam
mov
movsb
stos
imul
iret
enter
xchg
inc
mov
test
loope
inc
pop
xchg
mov
jge
inc
mov
popa
in
sub
cmpb
lret
xor
push
je
push
xchg
adc
mov
sub
mov
dec
or
call
add
aas
push
pusha
mov
pop
pop
and
cvtdq2ps
mov
das
adc
movsl
int
sub
xchg
pushf
or
adc
dec
fldenv
push
icebp
call
outsb
xchg
xchg
test
cmp
push
sbb
and
lcall
dec
push
or
sahf
adc
xchg
into
je
cs
shrb
add
cmc
je
scas
dec
sbb
sub
jge
imul
in
and
xor
ss
cmp
push
das
lock
xor
mov
pop
xor
out
data16
lahf
inc
inc
jecxz
push
and
in
hlt
mov
dec
sbb
in
scas
cmp
insl
lea
sbb
cmpsb
jb
fiaddl
pop
call
adc
push
lea
lahf
das
adc
jl
andb
or
aas
jo
fistpl
lea
outsl
in
faddl
in
inc
sar
push
dec
bnd
hlt
add
jb
mov
push
adc
xchg
mov
dec
insb
mov
loope
insb
fstps
inc
jbe
mov
orl
push
add
lret
xor
mov
jmp
inc
rorb
frstor
xlat
movsb
test
imul
or
adc
call
lock
lret
push
mov
test
out
fistpl
push
shr
jmp
sub
movsb
add
inc
push
fbld
dec
cmpsl
movsb
inc
ja
xor
jecxz
rcll
test
jp
sbb
test
pop
idivb
cld
push
xchg
and
idivb
push
inc
movsl
push
hlt
xchg
stos
xchg
lcall
lods
ja
mov
dec
hlt
jbe
shlb
mov
dec
and
popl
xchg
repnz
or
adcl
inc
popf
or
jl
add
div
sbb
mov
xchg
dec
sahf
mov
xor
xchg
ficoms
add
mov
push
mov
out
rcll
and
daa
adc
sbb
stc
je
lret
inc
leave
sbb
movsl
out
dec
cltd
pushf
jecxz
fistpll
daa
out
and
sbb
aaa
push
dec
mov
cwtl
inc
mov
icebp
adc
jge
jbe
xor
andb
jge
scas
loopne
loop
sbb
or
push
repnz
cmp
lock
cwtl
shll
outsb
mov
or
pop
sub
notb
ja
mov
sub
dec
sbb
xor
jae
fimuls
pop
outsb
sbb
insl
cmpsl
push
insb
js
pop
sub
jo
movsb
out
mov
int
test
jns
push
xor
inc
jle
push
mov
cs
and
push
push
shl
push
pop
sti
pop
stc
aaa
pop
inc
cli
or
das
or
popa
out
insb
lret
sbbl
movb
xor
xlat
inc
jno
mov
fdivs
in
imull
out
sbb
inc
rep
mov
push
imul
into
add
push
xchg
and
and
out
cmp
cmp
sub
movsl
insb
sbb
adc
nop
fsubrs
into
adc
ja
add
insl
jns
repnz
cmpsl
cmp
xlat
xchg
in
xchg
cmp
push
test
adc
lcall
inc
jbe
cmpsl
push
loope
xor
call
xchg
in
scas
sbb
dec
jnp
enter
pusha
aad
jmp
jns
and
nop
jo
xor
sbb
shrl
xchg
mov
sti
test
cmp
idivl
or
sbb
jnp
sub
mov
jno
xchg
jg
stc
dec
cmp
fsubs
leave
cwtl
or
outsl
divl
mov
adc
add
mov
add
and
imull
mov
jmp
bound
inc
ror
jmp
push
stc
sbbl
lahf
add
test
xchg
int3
mov
ljmp
cmp
aaa
mov
push
sbbb
pop
add
lahf
sbb
in
js
in
gs
in
shl
insl
cs
aas
cmp
xchg
pop
fmuls
fdivrl
sbb
out
lea
or
cmp
scas
push
fnstenv
or
ss
cli
mov
hlt
scas
and
push
mov
pop
shll
mov
cmpsl
sbb
mov
je
add
shl
gs
push
popf
pushf
mov
out
in
or
cmc
cli
xor
pop
sbb
out
xchg
jnp
pop
xchg
mov
pop
in
mov
push
repz
stc
dec
jo
lock
sti
and
lea
adc
rcl
stos
imul
or
and
loop
ficoms
push
das
test
mov
rolb
pop
aad
cmp
push
andb
mov
das
pop
ret
shlb
xor
fsubrs
jg
adc
jp
adc
and
roll
in
inc
enter
push
or
out
lret
xor
push
adc
cmp
fbstp
xchg
movsl
adc
add
int
push
mov
inc
adc
outsb
mov
xchg
mov
adc
std
xchg
sahf
mov
ret
xor
iret
dec
stc
test
rcrb
icebp
sti
test
scas
jecxz
ret
and
mov
stos
outsl
lret
sbb
xchg
in
aam
shrl
xchg
test
stos
sbb
jp
data16
mov
mov
orb
inc
lret
and
mov
movsl
mov
cmp
lods
lods
repz
pop
daa
add
fs
insl
in
add
pop
pop
sbb
mov
pop
mov
cmp
divb
loop
shl
ret
sbb
xor
jo
xchg
xchg
jg
lcall
divl
in
fisubl
mov
cwtl
pop
sbb
jns
inc
jns
test
ja
stos
xchg
adc
mov
pop
test
sbb
aam
inc
cmp
pusha
repnz
or
shll
out
cmp
shll
ljmp
sub
xchg
pop
int3
sbb
cmp
lds
dec
stc
mov
mov
jge
lahf
scas
adc
push
pop
and
jne
pop
out
je
fiaddl
fwait
iret
xor
mov
outsb
dec
cmpb
repz
pop
pop
and
or
push
jge
jecxz
enter
dec
std
cmpsb
lds
mov
test
xor
xchg
mov
cmpsl
push
sbbl
jns
jne
mov
loop
mov
pop
push
rclb
xchg
mov
mov
std
or
push
xchg
fcoms
mov
and
popa
or
sub
pop
pop
int
sar
push
mov
jbe
or
cmp
pop
shll
sub
jg
xor
dec
dec
sahf
cmp
rcl
popf
ret
cmp
pop
loope
xchg
lret
punpckhbw
mov
jg
pop
cld
push
adc
ret
or
hlt
inc
xor
push
cs
int
test
in
pop
dec
jge
ds
in
pop
push
pop
mov
push
mov
cmpsb
sub
mov
testl
std
cmp
je
xor
imul
jns
cmpsb
scas
andl
aas
lahf
test
movsb
cmp
add
fimuls
jae
loope
mov
jnp
jo
jge
ds
lods
sub
mov
fistpll
pushf
push
cmp
sbb
icebp
loope
inc
push
cmp
popf
pop
ljmp
dec
mov
pushf
aaa
ret
cmpsl
and
jo
mov
jmp
out
xchg
test
out
pop
int3
sub
jbe
inc
or
or
ret
jnp
add
mov
or
mov
std
in
ret
jge
sti
repnz
bound
das
shl
inc
outsb
es
fldcw
sub
inc
lods
sbb
mov
aad
lock
push
xchg
pop
cmpsl
lods
mov
xor
push
mov
mov
out
push
cli
add
ja
cli
pusha
push
cmp
pushf
stos
ds
nop
cltd
loopne
int
in
sub
ljmp
roll
mov
rcrb
push
int3
sub
mov
mov
out
pop
sbb
adc
rcll
mov
movsb
mov
fadds
jl
dec
out
pop
add
inc
jle
cmpsb
push
and
mov
popa
xchg
or
sub
lret
imul
xchg
inc
xchg
sub
clc
lock
and
fstpl
lods
movl
loope
add
mov
or
mov
cmp
push
xchg
sbb
pop
mov
stos
mov
push
aas
xor
xor
data16
jbe
stos
data16
adc
mov
jae
out
xor
adcl
das
push
jno
outsl
mov
dec
push
inc
sub
sub
fwait
into
sar
mov
sahf
test
push
in
test
push
push
push
fwait
push
movsl
xchg
xchg
adc
insb
mov
repz
jne
sub
ror
and
movsb
imul
ret
dec
ret
ds
push
fidivrl
xchg
pop
popf
repz
add
outsb
adc
enter
push
iret
mov
push
or
cli
jge
push
cli
dec
xchg
mov
adc
sub
es
mov
enter
dec
dec
pop
jnp
jmp
arpl
or
or
mov
insl
cmp
addb
fcomi
dec
add
in
dec
or
add
arpl
lcall
insl
popa
mov
mov
cmpb
and
ret
xchg
push
gs
push
addr16
adc
pop
jbe
mov
sub
xchg
sub
sbb
int3
push
dec
std
lods
out
add
rorb
insl
aaa
cmp
ficoms
mov
popa
rolb
addl
push
mov
jecxz
push
lods
pop
xor
inc
test
imul
loopne
or
nop
in
adc
xchg
lea
cltd
adc
and
dec
mov
call
dec
and
js
and
sbbb
rcll
lea
sbb
imull
sub
jnp
dec
push
sub
aam
add
ljmp
lret
jmp
pop
pop
dec
sti
and
fs
pop
dec
insl
jle
adc
push
or
leave
sbb
add
jne
cmc
jne
dec
push
lods
out
sbb
jae
push
mov
mov
mov
jge
aad
daa
mov
aas
sub
popl
mov
pushl
jae
xor
pop
adc
fistpl
neg
lods
cmp
xchg
jnp
and
xor
into
xchg
sbbb
fwait
loopne
pop
lret
or
pusha
push
cmp
xlat
sti
or
xlat
pusha
icebp
in
inc
je
xchg
mov
pop
xchg
lods
or
lret
xchg
cmpsl
xchg
add
adc
sbb
mov
pop
fsubr
inc
mov
popf
popf
shll
pop
idivl
xchg
aaa
mov
pusha
mov
xor
xchg
adc
in
stc
or
pushf
ficompl
cmpsl
stos
scas
icebp
ljmp
xor
inc
fwait
xlat
aam
dec
dec
test
xor
jae
adc
cmpsb
arpl
sub
pop
dec
adc
or
add
jle
movsl
in
stos
enter
pop
mov
pop
or
add
cld
jno
cli
mov
pop
test
push
xchg
fistpl
les
test
dec
pop
in
mov
mov
cmp
js
push
pop
push
jb
mov
mov
cmc
jp
int
mov
inc
lods
pop
fcmovbe
ss
scas
push
sbb
sub
jns
push
xor
hlt
mov
push
xor
mov
push
fwait
xlat
inc
dec
push
inc
scas
pop
xor
jl
shrl
jg
lock
rorb
sub
sub
mov
dec
fildl
pop
clc
mov
inc
sbb
or
or
out
mov
sub
pop
aam
or
in
fmull
add
es
sbb
xor
clc
xchg
add
dec
jb
xchg
or
in
pusha
fwait
pop
orl
mov
fildll
cld
and
aam
push
adc
rclb
leave
push
sbb
repz
dec
rorb
inc
aas
adc
push
dec
les
ficomps
push
inc
adc
add
imul
and
cmpsl
in
fs
jo
dec
aas
iret
add
frstor
sbb
sarl
scas
jle
cmp
and
adc
and
mov
mov
mov
outsl
mov
push
jno
ret
inc
lea
jl
mov
mov
xchg
inc
sub
fxch
mov
mov
lea
mov
loopne
dec
mov
xchg
scas
adc
push
xchg
js
xchg
push
adc
into
xchg
out
cmp
or
pushf
and
imulb
inc
fcomi
repz
out
orb
inc
xlat
fs
ss
cmpsl
cmp
mov
roll
out
jns
adc
xchg
jnp
cmpsb
adc
xchg
repz
mov
in
jp
and
in
jle
pop
sbb
inc
ss
jge
cmpsl
ljmp
lret
stc
mov
jns
xchg
cwtl
push
fcoml
xor
push
adc
ljmp
dec
push
mov
jge
xchg
fwait
pop
inc
cltd
mov
sub
fldt
orb
or
adc
pop
or
pop
dec
mov
pusha
sbb
in
test
dec
fimuls
cmp
cmp
xchg
pusha
and
ret
mov
test
pop
jne
xor
out
xor
cmpsb
sub
scas
push
mov
cltd
test
dec
std
adc
push
fs
int3
dec
stos
or
sbb
es
pop
fiaddl
mov
outsb
scas
or
cmp
adc
adc
mov
aam
aad
xchg
lret
out
into
gs
inc
add
add
adc
mov
bnd
lret
out
pminub
xor
aaa
icebp
pop
mov
lcall
xchg
arpl
fnstsw
cmpsb
cmp
fldcw
jbe
push
test
cwtl
in
fiadds
and
mov
mov
push
jae
push
hlt
sbb
mov
adcl
mov
popf
sbb
dec
js
sub
mov
xor
sahf
inc
push
mov
xchg
fsubl
inc
adc
jbe
scas
fnstcw
mov
dec
push
fsubrs
mov
hlt
jle
test
mov
push
daa
movsl
jp
jns
jae
int
mov
fwait
mov
jb
stos
jb
push
xchg
aam
mov
lods
jb
mov
mov
sub
popf
insb
push
data16
call
and
test
leave
mov
or
ss
pop
pop
or
shlb
jb
or
icebp
mov
mov
adc
dec
aaa
data16
daa
jmp
divb
jp
fcmovbe
push
mov
testl
loope
lock
es
in
add
push
test
loope
lret
sbb
ret
inc
mov
arpl
inc
xchg
jbe
push
jle
and
cmc
adc
out
jae
mov
bound
jmp
xor
mov
jp
cmp
push
push
push
pop
scas
pop
pop
js
push
pop
cmp
pop
dec
dec
stos
ss
xor
mov
cmpsl
sub
outsl
pop
ljmp
into
dec
pop
pop
insl
fidivrl
cli
mov
out
mov
adc
xchg
pop
mov
imul
inc
dec
lret
imul
dec
aas
xor
sub
push
or
xor
call
and
cmpsl
pushf
dec
jmp
mov
xlat
pop
incb
jmp
pushf
lods
out
rcr
cmp
adc
mov
pop
fneni(8087
sub
adc
xchg
insb
mov
adc
cmp
in
lock
jge
jo,pn
call
mov
sahf
js
add
xchg
dec
inc
movsl
or
cmp
mov
xor
notb
sbb
in
push
xchg
xchg
or
mov
jge
rolb
mov
pop
lds
mov
lods
xchg
scas
lret
adc
mov
xlat
add
fildll
lea
sbb
xor
rcl
pushf
cmp
xchg
lds
sub
cld
sub
cmp
test
cmp
xor
or
xor
dec
push
cmp
ds
pop
xor
push
hlt
adc
dec
mov
mov
jne
rolb
dec
clc
and
andb
loope
ss
out
jnp
xchg
sub
jle
jae
jne
and
sub
xchg
out
mov
add
mov
in
int3
insb
sbb
inc
xorb
cli
imul
pop
hlt
jo
jl
mov
xchg
cwtl
push
or
fwait
mov
loope
cmp
and
pop
shr
out
mov
test
jne
int
out
sbb
pop
icebp
mov
xchg
mov
mov
and
popa
or
jl
lcall
fcomi
xchg
or
dec
mov
and
xchg
or
pushf
or
add
or
inc
sbb
cmpb
push
jb
dec
lds
aam
int3
fidivl
and
push
xor
hlt
pop
roll
mov
pushl
in
and
hlt
cltd
add
add
push
mov
fs
push
cmp
xlat
push
sbb
sbb
push
mov
inc
mov
test
mov
ja
sbb
loop
xchg
mov
mov
popa
cmp
dec
fists
mov
cmc
cmc
push
cmp
loopne
jns
jo
adcb
jae
sti
lret
pop
fcompl
and
mov
add
xchg
pop
sahf
xor
scas
test
push
idivl
ds
push
and
aad
es
dec
xchg
dec
cld
scas
jmp
addr16
jo
push
rcrb
sub
cmp
cmpsl
imul
xchg
sub
add
pop
out
xor
imul
pop
push
mov
nop
das
leave
jbe
dec
out
ss
scas
lahf
int3
sbbb
in
int
icebp
mov
inc
push
lahf
leave
pop
rcll
loope
mov
lods
sub
ret
sub
mulb
xlat
or
add
ja
jmp
into
inc
sub
leave
aas
jae
mov
roll
inc
mov
aaa
adc
jge,pt
mov
jmp
push
mov
mov
roll
fldenv
movsb
xchg
fistpl
daa
or
push
inc
out
xor
xchg
jnp
rolb
aam
mov
fwait
cmp
jns
sbb
repz
fiadds
dec
mov
cltd
pushf
pop
push
adc
insl
dec
inc
loop
pop
xchg
xor
sbb
mov
sti
sarb
and
pop
or
into
cmp
inc
mov
lods
daa
outsl
in
leave
jbe
lcall
aaa
pushf
mov
inc
inc
mov
daa
js
not
test
data16
jb
xchg
cmp
or
add
mov
add
xchg
inc
pop
into
cs
and
cmp
and
jae
imul
pop
insl
repnz
inc
outsb
insb
xchg
pop
stos
shr
mov
sub
cmc
lret
inc
and
das
jecxz
cmc
or
or
cli
mov
or
test
gs
loopne
arpl
es
fnstsw
dec
xor
pmaddwd
mov
enter
out
push
pusha
push
lods
xor
adc
adc
and
fsubrs
pop
int
lds
lds
mov
push
into
rorl
pop
adc
inc
xchg
pop
and
sub
jg
cwtl
clc
pop
and
insb
dec
sub
sbb
inc
or
stos
mov
aaa
pop
lds
jb
fldcw
xchg
jl
je
lcall
aaa
xchg
sti
in
sbb
jo
and
sub
mov
mov
adc
sti
addb
dec
push
cmpsb
cmp
jno
dec
mov
mov
jns
dec
mov
rclb
lods
testb
sub
push
cmp
mov
mov
ss
xor
mov
test
ds
ljmp
mov
inc
add
je
push
jae
rorl
test
cmc
jo
adc
inc
mov
testl
xor
rolb
mov
mov
sub
lcall
int
pop
dec
lret
pop
mov
mov
mov
ret
lods
push
xor
mov
mov
rcr
mov
es
or
addb
xor
inc
lock
mov
mov
inc
adc
add
xchg
clc
rcrb
in
lods
sub
nop
popa
out
push
lods
and
push
or
sbb
cltd
jb
cltd
in
lret
or
outsb
mov
in
adc
repnz
int
add
aaa
pushf
repnz
sub
mov
push
iret
dec
out
cmpb
add
inc
dec
and
jle
js
and
out
popf
mov
xlat
fisubl
xchg
cmp
sbb
in
push
add
sub
push
cmpsl
xchg
adcb
and
mov
fsubr
mov
sbb
mov
and
mov
xor
mov
icebp
repnz
cmpsb
cmp
and
lcall
add
dec
js
iret
lcall
outsb
cmc
jg
idivb
pop
push
mov
popf
dec
imul
mov
lret
mov
push
jae
xchg
mov
xchg
aad
mov
test
cmp
cmpsl
enter
mov
imul
dec
das
cmp
aas
and
rcrb
popf
mov
in
push
insl
inc
xor
mov
mov
imul
insl
jmp
push
arpl
mov
adc
jmp
jo
lret
aad
sub
pandn
mov
push
jmp
cs
sub
sbb
js
inc
or
mov
fdivp
ds
pop
adc
mov
gs
sub
dec
and
fcoms
test
adc
cmc
pop
jae
and
xor
test
adc
call
dec
push
and
mov
xchg
mov
mov
lods
rcl
test
in
sub
insl
cltd
movsl
cmpsb
xor
jb
mov
or
push
std
sub
xchg
popf
pop
push
or
jle
pop
xorb
stc
loope
mov
in
call
xchg
xor
shll
pop
push
fld
and
add
insb
popf
outsb
sub
inc
outsl
addr16
inc
pop
xchg
adc
cmpsb
push
rclb
mov
sti
loopne
test
pop
jge
push
cmpsl
mov
xor
scas
bound
xchg
xor
cmpsb
sub
pop
xchg
les
iret
jnp
xchg
arpl
flds
je
ja
mov
aaa
cmc
aas
dec
mov
dec
cld
pop
and
bound
sbbl
lods
lret
iret
pop
mov
lds
dec
sub
test
dec
xor
xchg
xor
loope
repz
push
in
sub
dec
dec
cs
fs
xchg
js
xlat
js
sahf
inc
push
adc
jo
and
pop
ficompl
lods
aas
xchg
data16
cwtl
repz
add
test
int3
jmp
into
cmc
xchg
sbb
rorb
lds
pusha
ljmp
sub
sbb
filds
movsl
sub
ds
xorl
hlt
push
and
aas
out
nop
mov
daa
mov
add
fists
cltd
push
int
mov
mov
jl
inc
repz
cmpl
cltd
es
and
adc
push
ja
sbb
fidivs
stc
stos
and
jb
and
fs
sub
jg
jno
test
cmp
stos
pop
fmul
mov
cld
jns
jecxz
sbb
cli
mov
jge
sbb
aas
imul
stos
mov
gs
sbbb
movsl
and
cmpsb
stos
lret
cld
in
push
outsl
push
pushf
daa
mov
testl
lea
out
cld
cmp
pop
les
inc
cli
jg
mov
and
pop
out
lods
cmp
cltd
in
mov
lcall
push
mov
scas
xor
cs
mov
aam
stos
ret
jbe
mov
jb
pop
xchg
mov
jns
in
inc
repz
adc
xor
or
cmp
ret
sub
sub
je
loopne
in
add
inc
add
push
outsb
lret
incb
mov
pop
xchg
fdivl
push
xor
jecxz
sub
and
adc
popf
into
dec
jnp
pop
sti
lock
adc
call
xor
sbb
pushf
mov
inc
or
leave
test
inc
idivb
push
pushf
in
shrb
testl
push
mov
mov
cmc
xchg
enter
mov
push
mov
mov
jbe
xchg
aad
popa
mov
dec
lret
pop
fdivs
mov
push
clc
push
pop
psllw
or
cmp
repz
movsb
lret
hlt
push
cmpsb
inc
lea
in
subl
sbb
and
out
call
dec
push
jns
lods
mov
das
mov
cli
xlat
mul
shll
lahf
sbbl
inc
scas
call
sbb
aas
adcl
ss
shlb
mov
ss
loopne
clc
mov
lsl
xor
stos
iret
ret
sub
jns
jns
out
pushf
shll
xor
mov
xchg
jno
push
in
iret
mov
jne
jbe
mov
jecxz
ljmp
mov
repnz
mov
xchg
int3
mov
push
and
rcl
mov
sub
addr16
out
lods
mov
je
call
cmp
rorl
sub
add
fstps
mov
rolb
push
imul
imul
sti
adc
inc
dec
dec
cmpsb
jecxz
sbb
repnz
scas
sub
out
sti
sbb
mov
scas
jmp
and
inc
mov
mov
aad
cmpsb
lods
cld
ret
pushf
jo
fcomps
fiadds
andl
shrl
push
add
fs
test
jge
cmp
or
xchg
shlb
enter
imul
loopne
mov
rcll
idivb
jne
loopne
xchg
and
fsts
sbb
inc
rcrl
jge
dec
loop
lret
loopne
lret
push
in
jae
dec
divb
sbb
sbb
mov
push
xchg
ficomps
or
shll
aad
insb
inc
push
push
leave
mov
stc
adc
cwtl
dec
addl
mov
repnz
in
mov
cwtl
ljmp
xor
add
mov
mov
and
or
inc
add
in
push
push
mov
dec
or
mov
ljmp
loope
out
sub
cmpsl
cmp
jno
xor
xor
lcall
mov
push
dec
stos
lret
add
push
push
mov
aad
jecxz
and
inc
mov
cmp
fidivs
bnd
mov
fwait
cmpsb
mov
nop
cld
and
insl
push
mov
out
xchg
aam
pusha
pop
mov
leave
aas
rclb
ljmp
stos
inc
into
int3
jo
lahf
jbe
es
add
fildl
movsl
dec
pop
mov
cvtps2pi
popa
aad
inc
mov
sbb
in
and
addb
jo
icebp
out
push
cwtl
or
insl
movsb
jmp
cmp
ja
adc
dec
imul
push
add
mov
inc
ljmp
dec
jo
mov
ss
fsub
mov
ja
adc
jle
jne
shrl
daa
sub
arpl
push
in
fcos
mov
push
adc
insb
loopne
push
jecxz
inc
cmc
adc
mov
ret
cwtl
stc
sahf
mov
ficoml
lcall
insb
ror
repnz
or
gs
xor
in
jge
int3
ljmp
add
mov
icebp
adc
lret
aam
scas
dec
ljmp
add
adc
sahf
push
leave
lret
xchg
jo
cmpsb
hlt
loop
add
add
das
shr
sbb
sbb
mov
add
jb
movsl
rol
mov
fwait
xor
stos
popa
arpl
jl
push
clc
xorb
pop
inc
movsb
outsb
imul
cs
dec
sbb
mov
inc
and
xchg
xchg
jns
dec
mov
out
cli
xor
cltd
push
push
or
adc
and
je
push
mov
loop
push
pop
iret
mov
or
ret
or
cmp
test
rorl
dec
or
mov
and
js
lret
lods
les
cmp
inc
out
mov
adc
xchg
and
mov
sub
mov
lret
ficompl
pop
sbb
mov
mov
int3
push
cmpsb
jb
mov
loopne
repnz
xorb
fadd
imul
mov
add
in
pop
xchg
jle
mov
mov
sarb
or
mov
xchg
dec
sti
jae
orl
orl
sbb
lods
cs
pop
and
nop
test
frndint
fstps
scas
mov
les
shl
dec
mov
pushf
clc
les
ljmp
aas
mov
stc
push
sbb
inc
lret
xchg
dec
cmp
sbbb
dec
jne
add
faddp
in
daa
cmp
lret
xchg
out
jns
insb
lods
mov
or
sbb
repnz
pushf
call
pop
mov
pop
fdivrs
inc
jp
loope
sub
test
pushf
push
and
mov
gs
xlat
cmp
inc
pop
mov
js
jo
dec
pop
sbb
or
data16
cmp
gs
popf
xor
outsb
out
in
or
out
sub
jg
in
pop
aad
call
std
or
roll
push
inc
jnp,pt
movsl
bound
or
clc
mov
stos
add
call
dec
ljmp
popf
push
sti
mov
mov
add
pop
lcall
mov
subl
cmp
sub
sub
xor
mov
rcll
in
mov
scas
test
call
ds
aas
mov
bound
mov
mov
fistpl
mov
ret
popf
mov
mov
popa
sub
nop
mov
add
cld
bound
imulb
pushf
call
jbe
lret
xor
add
je
xchg
cwtl
lds
pop
jbe
lcall
mov
js
push
das
inc
push
pop
movsl
rcl
mov
stos
pop
or
push
sub
insl
pop
int
mov
add
jne
scas
out
inc
pusha
aas
nop
or
popa
sbb
ret
lock
mov
stc
push
mov
jb
dec
mov
les
insl
mov
inc
iret
push
dec
mov
int
cwtl
lods
xchg
test
sub
jb
aad
mov
out
sbb
cmp
lods
sahf
into
shrl
in
loope
stos
add
sarl
sbb
dec
sub
mov
fwait
add
lcall
enter
gs
or
repnz
out
rol
es
imul
lods
xchg
adc
xor
enter
mov
pusha
dec
cmp
rclb
sbbl
fistps
xchg
ljmp
xor
sub
push
pop
push
jo
cmc
cmp
pop
testl
fmul
and
rorb
sub
into
dec
repnz
xchg
js
pusha
imul
test
outsb
jge
jne
repz
xor
roll
jnp
test
mov
out
add
imul
mov
push
mov
cmpsl
xchg
jl
push
iret
fistl
mov
into
push
pop
xor
xchg
cmp
stc
mov
loopne
push
mov
imul
inc
jae
jle
nop
sub
jmp
mov
mov
or
or
and
fidivrl
xchg
add
outsb
push
xchg
add
shlb
pop
addr16
cwtl
xor
mov
les
or
and
push
lods
insl
jb
jp
fsubrl
inc
enter
mov
inc
repz
sub
add
xchg
adc
add
popa
scas
jp
lahf
jecxz
mov
je
cmc
mov
cmp
xchg
sub
lds
enter
arpl
pop
sub
mov
loopne
and
add
pop
xor
sub
lahf
lret
repnz
in
insl
lods
out
pop
mov
and
adc
mov
jl
or
and
add
aas
sub
bound
xchg
pop
lcall
mov
mov
pushf
cs
mov
lret
xchg
pop
in
dec
xchg
ret
out
xchg
push
inc
dec
dec
sub
adc
pop
jne
cli
mov
stos
aaa
add
icebp
pop
or
stc
push
mov
cmp
out
ss
cmpsb
mov
mov
xor
pusha
xchg
adc
or
xor
jle
ljmp
mov
cmp
inc
and
mov
push
sar
sub
subb
in
mov
into
cs
or
mov
add
inc
push
rorl
cli
outsl
in
jno
stc
cmc
test
stos
xchg
mov
loopne
dec
sahf
and
cmp
in
add
clc
pop
mov
in
stc
test
les
fidivs
or
dec
cld
push
fidivs
or
mov
jno
push
and
pop
outsb
xor
xor
push
daa
incb
lea
dec
hlt
mov
fs
dec
loopne
jmp
adc
push
call
inc
lods
lret
push
pop
xchg
xchg
pop
out
stos
cmp
mov
jp
xchg
xchg
xchg
scas
flds
mov
jmp
jg
aaa
xchg
test
test
or
stc
adc
jne
xor
mov
or
pop
nop
faddl
cltd
lret
or
add
imul
aaa
cmp
jbe
sub
inc
push
xor
lahf
in
cmp
pop
int3
add
sub
adcb
sbb
call
push
addr16
movsl
xlat
xchg
jmp
push
scas
aas
repz
cltd
or
push
lods
inc
dec
inc
add
and
insb
xchg
push
lahf
test
les
lock
fwait
pop
adcl
xor
pop
and
inc
out
xor
pop
nop
pop
mov
mov
ss
adc
mov
xchg
add
mul
lock
mov
jns
test
xchg
lret
outsl
push
adc
xchg
test
sbb
mov
cs
imul
and
cs
fadd
jo
xchg
lahf
or
mov
hlt
and
aad
jecxz
push
xor
in
cmp
aam
pop
xchg
add
clc
in
stc
jmp
in
iret
out
and
cmp
fwait
les
testb
pop
mov
outsl
stc
test
loopne
adc
cmp
dec
adc
jecxz
out
pop
test
lea
fisubs
jbe
jnp
jo
imul
or
fldenv
into
cmp
lds
xchg
sbb
sbb
mov
mov
mov
mov
call
cmp
jne
cmpsl
and
xor
aas
mov
adcb
bound
fs
cmpsl
lahf
xchg
xchg
add
cli
leave
sbb
lea
xlat
stc
xor
mov
movsl
call
loop
jo
and
das
rcll
adc
dec
inc
cmp
pop
paddb
sub
sub
sti
xchg
pop
inc
cmc
inc
fdivp
out
or
popa
ss
popl
push
add
jne
dec
xorl
subb
adc
mov
inc
push
in
jp
cmp
ret
mov
sbb
fnsave
and
movsb
xor
sbb
dec
lea
outsl
scas
ljmp
mov
push
add
nop
out
adc
int3
jns
ss
cmp
cmc
add
sub
dec
ret
outsl
orl
addr16
dec
mov
adc
nop
in
jecxz
adc
inc
pop
mov
cli
inc
or
loop
aas
ja
jmp
xor
in
mov
lds
aam
push
adc
movsb
fstl
jbe
shr
mov
aam
scas
cld
cmpsl
mov
cmp
xor
mov
nop
pop
pop
push
xor
test
fs
xchg
cmp
leave
imul
pop
or
push
outsl
test
insl
mov
out
test
or
adc
fsubrs
xchg
pop
pop
mov
in
mov
xorb
ror
daa
and
addr16
js
test
cmp
mov
add
cmpsb
cmpsb
jp
xorl
mov
push
xor
rol
rorl
lods
jno
gs
jne
jno
inc
imul
in
mulb
pop
mov
ret
mov
popa
test
push
push
push
stc
mov
sbb
pushf
inc
lret
xor
xchg
lea
call
ret
jno,pt
sbb
jo
insb
pop
sbb
sbb
sahf
out
xor
xorb
mov
out
movsb
lods
mov
pop
scas
daa
jmp
lahf
jecxz
and
js
mov
xor
fisttps
dec
imul
adc
pop
sahf
mov
test
in
xchg
push
mov
cmp
scas
xor
addr16
mov
inc
outsb
sub
roll
mov
mov
xor
fcompl
mov
xor
data16
pushf
jmp
pop
mov
mov
xchg
xor
cmp
mov
enter
outsb
or
xor
sub
mov
lcall
pop
cmc
mov
dec
test
or
sub
jnp
test
xchg
cld
lret
xchg
inc
idivl
mov
pop
cmpsl
sbb
lret
mov
cli
mov
shlb
ss
sub
ret
cmpsb
data16
mov
push
jle
lock
adc
test
sbb
stos
nop
sti
lock
repz
out
add
xor
push
iret
sarb
lahf
xchg
addr16
cmp
adc
pop
cld
rclb
sbb
xchg
adc
cwtl
inc
hlt
push
jle
fs
cmp
xchg
mov
fdivl
mov
dec
and
jle
sbb
repz
jp
outsb
pop
pop
sarl
ret
sub
xor
dec
orl
pminsw
mov
dec
rcr
cltd
push
or
int
sbb
inc
or
stos
jg
cltd
lahf
fwait
arpl
sbb
jge
jo
int
popl
daa
and
jle
pop
push
jae
xchg
lds
dec
mov
aaa
xor
xor
lods
aad
cmp
out
ja
shlb
or
mov
lods
adc
pop
out
mov
mov
movsl
fs
rorl
outsb
inc
pushf
ja
loope
mov
in
adc
fstps
out
repnz
jnp
push
outsl
mov
jo
mov
mov
jae
add
sub
movsb
jb
pop
sbbl
adc
and
mov
adc
xchg
cmp
jno
test
fucomi
xchg
jmp
jecxz
inc
mov
push
pop
sub
pop
mov
mov
insb
mov
in
jp
push
sub
rol
or
cld
pop
mov
jl
push
add
jp
add
inc
jecxz
cltd
add
inc
mov
nop
xchg
push
repz
push
fsubs
popa
jae
xchg
pop
test
xor
sub
inc
add
push
xchg
ss
adc
xchg
xchg
cli
push
jnp
aam
xchg
sbb
and
mov
pop
daa
dec
sbbl
sbbl
addr16
mov
fldcw
jno
cmp
and
cmp
dec
jg
cmp
mov
faddl
dec
cli
leave
sbb
iret
push
xchg
sub
shrb
jns
push
mov
fcomps
pop
push
push
cli
cmp
call
call
mov
jne
scas
sbb
adcl
xchg
int
pop
pop
sahf
loopne
shrb
sbb
cmpsb
mov
xor
and
add
sti
adc
xchg
xchg
xor
jns
leave
lea
test
sbb
dec
insb
cmp
and
call
push
jo
loopne
xchg
fucom
sub
or
lahf
int3
hlt
push
popa
lods
sub
mov
dec
pop
test
loope
and
lds
inc
xchg
push
call
mov
cmp
push
js
scas
lea
sub
and
or
jbe
adc
std
iret
rorl
or
out
sbbl
add
jmp
repnz
aaa
push
jp
cmc
movsl
jp
fistl
pop
inc
daa
daa
inc
xor
jmp
xorl
pop
aas
sbb
cmp
daa
and
or
mov
adc
pop
sahf
popa
inc
ret
das
mov
leave
mov
pop
push
inc
loop
leave
add
add
int3
jp
xchg
aaa
pop
mov
aas
fsubrs
xor
les
outsl
in
gs
mov
jmp
xor
and
bound
mov
sbb
std
jle
mov
popf
xchg
les
jge
je
cmpsb
fs
push
dec
mov
add
andb
xchg
sub
jae
mov
mov
mov
mov
cli
jo
push
adc
fmull
sub
shrl
cmp
mov
fs
mov
jo
push
sbb
or
clc
mov
int
shrl
es
dec
pop
cmpsb
mov
push
xchg
imul
add
or
pushf
mov
cvtdq2ps
push
data16
xor
outsl
jmp
push
pop
sub
sbb
in
into
push
jnp
lods
sbb
push
pop
pushf
movsl
cmp
add
ljmp
popa
push
mov
mov
shr
push
out
stc
push
adc
pop
lock
lods
not
dec
test
add
andb
stos
jmp
or
sub
sub
sub
mov
sbb
in
inc
lahf
aad
ja
lods
push
pop
std
ljmp
cli
lea
xor
mov
test
out
xchg
xlat
sti
xor
mov
mov
subb
sbb
push
shll
and
xor
movsb
cmp
push
mov
outsl
sub
jne
sub
jmp
jecxz
stos
adc
vpavgb
cmp
dec
cmp
idiv
aas
cmpsb
aaa
push
cmpsb
enter
out
xlat
test
in
mov
mov
sbb
fcomps
dec
fnsave
push
dec
adc
leave
push
out
mov
mov
in
mov
dec
xchg
push
pop
pop
jmp
inc
sbb
dec
mov
stc
push
sahf
aad
push
jecxz
sbb
repnz
pop
daa
addr16
pusha
adcl
sub
pop
nop
loop
add
mov
xchg
das
push
push
aas
sbb
xlat
pop
sbb
mov
insl
and
and
or
out
adc
lret
fdivrs
outsb
cmpsb
sbb
pop
jo
push
mov
les
push
mov
and
cmp
das
xor
add
rep
cmp
pop
jne
add
mov
lods
push
call
sahf
popa
cmp
cmp
icebp
stos
repnz
xchg
in
push
sti
shlb
mov
mov
and
into
rcr
shll
and
mov
out
xor
adc
jg
ss
cmp
push
cmp
lcall
xchg
insb
push
std
das
mov
aam
cmpsb
popa
xchg
and
sbb
xchg
call
sub
mov
mov
and
cmp
imul
orb
add
orl
mov
leave
xchg
mov
xor
aas
test
push
out
nop
rcrl
adcl
xorl
mov
je
sub
fstps
and
lods
in
adc
inc
lret
scas
or
int3
push
dec
addr16
lea
jecxz
lcall
in
popa
push
xor
das
pushf
aaa
das
xor
mov
jbe
adc
sti
sbb
mov
test
cmp
mov
lock
xchg
jb
es
out
out
iret
fwait
sbb
inc
repz
push
ret
out
icebp
repz
aaa
mul
mov
imul
std
arpl
mov
repz
les
mov
cmpsl
jnp
aaa
mov
xor
or
sub
add
push
xchg
in
push
cs
roll
out
das
insb
mov
test
out
adc
dec
jecxz
pop
push
in
jno
dec
adc
dec
pop
or
ljmp
mov
push
adc
es
sub
mov
dec
inc
jmp
fistl
adc
push
es
popf
out
cmp
cmpsb
gs
cltd
adc
mov
scas
daa
scas
outsl
testb
daa
sbb
lret
pop
or
push
decb
dec
mov
mov
lea
mov
or
jb
aas
mov
addl
inc
mov
jmp
xchg
divl
std
je
mov
aad
jmp
fistps
rol
push
jns
mov
stc
jno
loopne
in
inc
push
lods
nop
clc
or
xchg
jnp
ljmp
push
pop
fdivr
js
les
xchg
jle
or
rol
subl
mov
js
sahf
inc
xchg
cld
lock
cmp
jae
jecxz
mov
icebp
cmp
cmc
cmp
mov
mov
cli
inc
mov
pusha
xchg
and
or
mov
push
cld
dec
push
popa
xchg
hlt
mov
sbbb
sbb
inc
sub
pusha
data16
fwait
icebp
lds
pop
test
xchg
push
lods
ja
out
iret
push
jge
enter
inc
ja
ljmp
negb
cmp
pop
mov
into
inc
into
lahf
aad
nop
cli
mov
cmp
ror
pop
xchg
fmull
shrb
cwtl
jb
xor
or
imul
cwtl
push
fimuls
xchg
dec
jae
and
repnz
inc
test
xor
ret
sub
add
das
dec
movsl
frstor
push
sub
sub
jne
push
fcmovu
mov
pop
cmpsb
adc
mov
cmpsb
push
out
and
fwait
out
test
outsl
pop
out
scas
fldcw
sub
xchg
sub
push
sbb
aas
sub
pop
mov
aaa
mov
jae
xchg
xchg
sbb
mov
out
aam
icebp
ss
iret
nop
push
bound
fstpt
cmp
push
ficompl
lock
mov
mov
scas
insb
sti
xor
inc
movsb
cmp
movsb
mov
sub
adc
push
dec
lods
ret
sub
call
pop
and
shlb
jg
dec
shr
insl
cmp
xor
jge
xlat
adc
mov
inc
mov
mov
negl
pop
inc
movsb
fwait
mov
xchg
sbb
outsl
jo
les
mov
ds
repz
xchg
mov
mov
adc
jbe
loop
cmc
fnsave
test
popf
aas
add
and
jmp
cmc
inc
inc
icebp
and
xchg
xchg
std
in
lahf
jb
fwait
adc
das
mov
mov
xor
iret
mov
cmc
jns
push
sbb
divb
jle
stos
into
pop
imulb
pusha
neg
and
jg
lds
pop
int3
lock
into
aad
cltd
pusha
xor
or
rolb
inc
popf
aad
push
push
testb
out
inc
ss
sbb
jb
ficoms
es
mov
std
xchg
dec
jne
mov
sbb
add
aam
popf
sbb
add
push
xor
jo,pn
adc
lret
cmp
xor
out
push
sbb
and
add
mov
xchg
repz
icebp
sub
xor
repnz
daa
test
int3
push
and
xor
movsb
mov
pop
mov
int3
scas
mov
jle
xor
pop
jne
je
mov
jl
adc
clc
add
and
dec
sbb
fstpt
jne
push
lds
int
insl
movsl
jge
push
mov
add
out
add
mov
xor
fcompp
fdivrl
int3
hlt
dec
mov
test
int3
adc
mov
scas
adc
popa
lcall
xchg
out
fdivrs
pop
cmp
fcompl
push
insl
lahf
sub
jle
leave
mov
test
mov
mov
lcall
xchg
pop
xor
pop
jmp
mov
js
mov
into
xchg
push
fdivrs
jno
imul
sti
aam
fsts
cwtl
jmp
jns
aas
push
dec
and
inc
push
mov
sbb
outsb
lods
push
call
pop
outsl
mov
cmpsb
dec
push
xor
loop
incl
mov
xor
jns
xchg
xor
cmp
push
push
pop
inc
test
lock
repnz
cmpsb
imul
jne
test
mov
lock
test
pop
arpl
jp
cld
inc
add
adcl
push
out
sub
cmpsl
fwait
cld
rcl
outsb
pushf
add
xlat
dec
dec
out
xchg
xor
and
cs
mov
popf
add
icebp
jle
in
jecxz
mov
push
fildl
mov
bswap
jae
aad
loop
lret
jl
add
lret
cmp
test
fidivrl
dec
mov
ljmp
imul
mov
cmc
nop
cmp
ja
mul
outsl
pop
pop
xor
mov
pop
mov
jmp
cld
rcrl
insb
sar
das
bnd
filds
lds
lcall
in
dec
scas
test
inc
pop
inc
and
shlb
mov
fidivrl
or
pop
push
and
sbb
push
cltd
in
pop
cmp
or
lods
and
movsl
push
ds
jbe
outsb
inc
das
pusha
add
cmp
das
mov
decb
outsl
lds
insl
imul
mov
insl
rorl
daa
sub
je
int
repz
into
cmp
fbld
and
popf
adc
mov
les
and
cltd
xor
addr16
push
add
fldenv
and
call
in
aas
mov
add
addb
enter
or
int3
fdivs
aaa
jecxz
xchg
fsubrs
cli
mov
stos
mov
add
and
movsl
push
mov
dec
fldenv
jb
pop
push
loopne
mov
insb
les
ret
das
pop
divl
add
es
cmc
inc
adc
mov
cld
add
pop
fnstcw
sahf
addr16
and
and
mov
mov
scas
sbb
movb
lea
fs
jo
mov
pusha
pop
scas
mov
js
mov
jae
sbb
test
ja
pop
pushf
add
clc
in
inc
adc
adc
pusha
inc
or
sbb
cwtl
cli
ljmp
sbb
mov
jo
mov
push
pop
and
jbe
add
mov
adc
lods
jle
or
mov
pop
adc
push
sub
out
cwtl
xor
ljmp
pop
jo
sub
and
add
lods
or
in
push
aas
inc
add
arpl
xor
mov
fwait
xor
cmp
test
jle
lcall
bound
movl
pop
fsubrl
mov
imul
sbb
repnz
dec
ret
addl
or
les
scas
popf
in
sub
or
mov
orb
add
stc
mov
adc
subb
testb
insb
cwtl
pop
push
sub
shlb
into
fsub
push
daa
jecxz
js
ret
mov
repnz
out
or
pop
fwait
xor
mov
lock
xchg
push
cwtl
mov
sbb
push
and
mov
dec
ljmp
jae
and
mov
cmp
adc
adc
jge
fiaddl
xchg
mov
out
ret
push
mov
mov
mov
es
out
ficoml
adc
lcall
adc
fisttps
dec
iret
xorb
out
into
and
or
mov
lea
or
pop
and
push
adc
call
or
xchg
push
imul
movb
decb
push
pop
inc
jp
pop
xchg
jo
ljmp
pop
xchg
nop
xchg
mov
movsb
mov
int
xchg
jmp
push
push
ljmp
sub
xchg
push
stos
daa
inc
scas
push
mov
les
push
aaa
pushf
xchg
cmpb
shll
fisubrl
inc
andb
out
mov
cmp
mov
arpl
data16
pop
jge
stc
xor
pushf
bt
lcall
push
stos
pop
cmpsb
cmp
mov
je
inc
roll
rcrb
das
sti
mov
jle
pushf
jl
mov
sub
xor
fdivl
push
enter
jnp
inc
xor
imul
ja
mov
xchg
das
sub
pusha
jo
iret
pop
pop
imul
adc
fsubs
imul
xor
adc
gs
sub
mov
addr16
inc
movsb
push
mov
push
repnz
xor
pop
or
jge
inc
mov
popa
jae
push
test
xor
mov
adc
dec
imulb
cmpsl
fildll
adc
sub
movsb
xchg
ret
dec
nop
or
dec
pmaddwd
in
add
or
subb
hlt
ret
cli
pop
test
dec
inc
xchg
sbb
push
xor
jb
push
popa
mov
push
mov
cmp
je
je
push
jae
aad
mov
cmp
mov
or
jp
pop
xor
mov
jle
mov
dec
int
out
xor
ret
call
mov
addr16
dec
rcrl
mov
mov
mov
aam
xchg
pusha
jo
mov
aas
mov
and
cs
data16
fcoml
cmpsl
jmp
lock
push
inc
ljmp
pop
cmp
lret
push
push
pop
and
dec
in
icebp
inc
pop
lds
mov
test
outsb
inc
bound
push
stos
lods
insl
jmp
jl
dec
jo
outsl
push
push
xor
adc
cmpsb
cld
fldl
adc
pop
out
out
sti
jae
ret
sub
fstpl
push
cld
jl
pop
fstpt
and
or
add
test
adc
and
js
xor
sbb
xor
jae
adc
mov
mov
repnz
mov
or
js
test
pop
sub
pop
in
icebp
bound
fdivrs
hlt
dec
add
fcmove
gs
add
push
repnz
xchg
xorl
fstl
jns
sub
mov
lea
mov
pop
jmp
mov
movsl
or
cmp
pop
daa
push
jmp
mov
mov
push
out
mov
jle
int3
add
test
lcall
or
jmp
dec
ja
repnz
add
outsl
rcr
sub
add
cltd
jmp
addr16
gs
testb
jns
mov
fnsave
aad
aad
fsubs
test
imul
test
add
sub
adc
popa
test
loopne
ret
daa
out
lock
orl
jbe
jp
mov
mov
fsubrl
push
mov
mov
js
orb
popf
sarb
mov
cmc
fisubrl
push
lret
test
push
mov
jns
mov
xchg
shr
bound
dec
imul
xchg
pushf
test
cmp
mov
mov
rclb
lock
add
dec
jb
push
mov
add
push
xchg
jl
jne
push
dec
test
push
xlat
gs
test
mov
jge
std
cltd
adcb
xlat
mov
sbb
pop
push
dec
scas
add
add
adc
xchg
into
mulb
pushl
bound
push
push
xor
xlat
xor
cli
sahf
dec
jmp
cmp
adc
mov
outsb
aas
fwait
cmpsb
xor
fldt
push
daa
pop
xchg
cwtl
sbb
dec
fcomi
add
iret
out
cmp
add
mov
lret
sbb
sbb
popf
jae
adc
dec
lock
add
aad
xor
mov
pop
xchg
dec
ret
insl
mov
add
insb
mov
mov
xorb
je
movb
test
adc
les
cli
jbe
mov
mov
std
push
xor
fildl
insl
sbb
lods
lea
cmp
mov
add
ss
cld
imul
mov
loop
jno
cwtl
addr16
push
mov
mov
popl
or
push
push
int
stos
mov
cmp
adc
aas
sbb
jnp
movsb
cmp
xchg
jnp
movsb
dec
aad
add
aad
mov
mov
dec
cmp
scas
rcll
dec
mov
repnz
nop
sbb
daa
add
out
push
hlt
jecxz
repz
pop
jb
mov
and
fidivrl
xchg
inc
sbb
push
xchg
cmp
fildl
nop
jmp
cmpsb
mov
lea
ds
xchg
fsts
pop
sbb
sub
cmpsb
leave
cmc
in
pop
mov
sbb
xchg
xchg
inc
ret
cmc
imul
push
imul
lds
ds
pop
push
and
out
cmp
push
or
outsl
stos
dec
out
testl
adc
push
fcoms
xchg
jo
popa
jl
mov
lcall
cmp
lahf
test
sub
sarl
pushw
mov
test
sub
adc
xchg
mov
out
stos
and
pushf
in
xchg
mov
mov
stc
xchg
daa
xchg
pop
push
mov
imul
push
sbb
movups
push
test
sbb
xor
insb
mov
lret
movsb
mov
cmc
inc
int3
jle
and
pop
test
hlt
or
andb
or
add
mov
andb
pop
int
sbb
sbb
mov
stos
lahf
in
out
xchg
hlt
and
add
sub
lea
xor
cli
mov
or
mov
leave
mov
leave
andl
push
sub
arpl
and
lods
sub
es
lods
push
dec
inc
pop
cmp
push
pop
int
sbb
aam
shr
stc
das
inc
xchg
cmp
pop
sbb
loope
pusha
xor
xchg
add
dec
aaa
mov
push
dec
inc
pop
and
and
cmp
sub
lock
cmpsb
add
push
push
sub
notb
add
into
xchg
pop
mov
inc
sar
mov
push
in
movsl
push
adc
push
or
jo
in
jle
push
ss
push
inc
lock
mov
pusha
push
jg
mulb
imul
cld
gs
cmp
cmc
dec
lods
sub
push
cmp
test
push
xchg
cltd
scas
ljmp
imul
mov
sbb
iret
sub
pop
mov
add
cmp
ja
shlb
aam
cmp
jne
push
jl
mov
shlb
cli
std
add
mov
insl
mov
adc
or
mov
xchg
inc
lock
xchg
testb
sarb
cs
adc
xchg
imul
in
xor
outsb
push
pop
fcmovnb
mov
jmp
divl
jge
adc
jne
push
and
push
sahf
pushf
mov
aam
aam
push
pop
mov
scas
clc
inc
insl
sbb
hlt
mov
add
jl
push
push
jecxz
adc
sub
cmp
add
push
test
rcr
xor
add
or
push
jne
mov
cld
lods
mov
xchg
loope
cmpl
mov
jb
les
imul
mov
push
cmpsl
icebp
in
cmp
std
jg
cmpsb
inc
xchg
cmp
adc
daa
adc
pop
push
repnz
pop
mov
mov
out
movsb
sbb
push
xchg
popf
xchg
call
jl
gs
mov
cwtl
ret
xchg
hlt
and
inc
inc
sarb
mov
mov
push
outsb
stc
inc
in
cmpsl
ret
sub
lret
imul
scas
ss
test
xor
pushf
push
or
in
mov
cmpsb
sub
inc
ds
fcoml
add
je
inc
mov
jo
jns
hlt
test
cmp
jo
rcll
cld
negb
scas
push
push
dec
lods
lahf
xchg
sbb
mov
mov
or
fldenv
sub
movsl
lods
jae
fistl
imul
xchg
jne
int
adc
jnp
inc
outsl
inc
je
std
repnz
in
adc
enter
pop
mov
cld
cmp
pop
shll
dec
or
hlt
add
xor
mov
loopne
pusha
cwtl
xor
jo
or
sub
or
out
and
sub
add
outsl
imul
pusha
xchg
ret
outsb
sti
xchg
cwtl
sahf
cmpsl
in
push
pop
call
dec
stc
shll
xor
push
nop
sbb
sub
xchg
mov
stos
fwait
rolb
test
xor
ljmp
or
rcrl
fs
pop
cwtl
cltd
xchg
pop
aam
dec
in
jae
ficompl
cmpsl
jae
pop
scas
cmp
push
testl
inc
sub
adc
in
pop
add
lea
and
cmp
adc
sbb
xchg
loopne
pop
sbb
dec
add
cmpsl
lret
xlat
aam
mov
and
jno
fsts
adc
bound
xchg
subl
jae
mov
lea
pop
outsl
xchg
das
lods
jmp
push
and
orl
repnz
push
inc
push
pop
xor
mov
mov
in
pop
addr16
sub
or
std
scas
mov
ljmp
test
dec
mov
sbb
mov
xchg
xchg
lahf
ret
or
mov
je
popf
je
mov
dec
push
mov
adc
pusha
push
pop
xchg
int3
sbb
xor
scas
jbe
push
loopw
mov
xor
xor
movsb
pop
jp
jle
mov
lcall
inc
push
imul
js
xor
jmp
in
and
xor
shr
negb
jno
fdivr
dec
ss
out
loope
pusha
lds
rcll
or
stc
xor
or
cltd
pop
pop
sti
sbb
mov
add
popa
pushl
popf
push
mov
sbb
sbb
out
shl
jg
mov
dec
mov
scas
ss
lahf
mov
xor
fidivl
adc
test
cmc
pop
pop
add
stos
and
rcrl
adc
mov
pop
push
gs
push
cmp
stc
pop
in
jmp
xor
adc
xchg
sbb
mov
jns
pop
jbe
cli
mov
outsb
shr
lret
cmpsl
fs
mov
or
cwtl
lock
mov
lcall
js
and
xor
call
cmpl
test
mov
outsl
out
xchg
xchg
cltd
xorl
xchg
sbb
orb
shrb
mov
ja
push
scas
daa
icebp
cltd
mov
mov
xor
ljmp
pop
fstpl
push
add
push
push
call
dec
dec
cmpsb
pop
lods
or
adc
mov
cs
testb
push
cmp
xor
or
xor
stos
clc
cmpsb
loope
daa
sub
push
mov
aaa
js
and
repz
pop
jle
test
cmc
jl
jbe
aaa
jne
xchg
xor
xchg
pop
adc
jmp
mov
xor
adc
add
movsb
pop
js
cli
loop
inc
cmpsl
cwtl
mov
icebp
mov
pop
mov
arpl
jns
iret
xchg
and
cld
push
and
mov
jge
stos
scas
pop
or
into
add
jl
mov
or
stc
adc
sub
mov
aam
and
pop
hlt
pop
icebp
pop
mov
addr16
jne
inc
mov
jo
dec
sbb
imul
xabort
decl
mov
cli
pusha
daa
push
rcrb
hlt
mov
mov
repz
inc
pop
cmpsl
nop
hlt
cmp
mov
cltd
jno
cld
out
xor
repz
mov
arpl
rorl
xor
pusha
mov
iret
lret
xchg
dec
mov
push
push
mov
addr16
sub
popa
imul
dec
mov
xor
xchg
add
xchg
add
pop
fnstcw
dec
ret
xchg
out
in
sarb
mov
ds
mov
mov
aam
aas
pop
imul
jno
into
mov
lods
lea
jp
out
loopne
add
cli
les
mov
dec
pop
insb
outsb
adc
cmpb
nop
or
mov
mov
pop
xchg
pop
xchg
jle
add
fwait
adc
push
mov
bound
jle
mov
lock
fsubs
ret
cmp
mov
sub
dec
test
gs
rolb
xchg
fistpl
pop
pop
push
into
loop
sbb
xor
pop
and
xchg
mov
subb
mov
pop
xor
sete
mov
xor
inc
sbb
adc
sub
pop
movsb
dec
cmc
sub
mov
mov
pop
sbb
pop
pop
sub
jecxz
out
cmp
mov
dec
loopne
mov
mov
add
ret
sbbl
xor
ljmp
mov
jg
xchg
xchg
pop
jmp
push
and
mov
inc
pop
push
das
clc
jae
dec
inc
adc
hlt
xchg
push
gs
sub
or
mov
xor
pushf
sbb
pop
iret
push
dec
mov
test
pop
in
fwait
fs
sti
sbbb
inc
int3
mov
add
add
movsb
and
xor
mov
xchg
push
pop
aaa
adcb
xor
ja
sbb
mov
loope
sbb
rol
sbb
clc
inc
add
mov
nop
fdivrp
mov
sub
inc
sarb
mov
popl
aas
sti
cli
adc
mov
xchg
dec
rorb
es
aam
lock
mov
and
xchg
incb
jae
adc
add
out
orb
inc
test
dec
shl
and
cld
stc
idivl
xchg
mov
mov
xchg
out
stos
jecxz
adcb
imul
push
mov
rolb
mov
ds
jge
scas
lcall
cmp
test
mov
and
pusha
mov
xchg
jae
imul
dec
inc
icebp
xchg
cs
push
push
jg
pop
shll
shlb
add
mov
push
stos
cs
jg
add
xor
pushf
repz
xchg
inc
scas
cld
mov
lcall
stc
or
cmp
dec
lret
mov
add
mov
sub
push
sub
shlb
rol
push
shr
aas
or
sahf
xchg
add
iret
js
stos
ja
push
jmp
dec
pusha
icebp
inc
mov
jns
xchg
jae
das
xchg
xchg
in
in
jge
scas
mov
adcb
mov
insl
lods
mov
imul
sbbl
add
orl
dec
push
imul
jle
cmp
mov
mov
inc
movsb
sbb
or
rorb
or
add
sbbb
shll
sbb
adc
call
dec
dec
dec
mov
cmp
shlb
aaa
les
out
scas
out
bound
add
fmull
jle
jg
scas
sbb
cmp
int3
inc
test
pushf
pop
cld
clc
lods
fstps
fcomps
cld
mov
mov
cli
in
adc
jae
xchg
ss
xchg
jb
dec
stos
sub
movsb
pop
sbb
adc
mov
mov
mov
xchg
psubsw
daa
ficoml
mov
pop
push
xchg
insb
les
mov
subb
add
mov
and
rcrb
insl
sbb
mov
adc
jns
pop
sbb
lahf
ficompl
cmc
mov
lods
inc
roll
sub
jo
fstpt
mov
je
iret
test
xrelease
in
sub
inc
mov
mov
mov
jnp
or
nop
in
and
xchg
int
adc
ret
or
sbb
lcall
dec
cs
sub
repz
imul
push
jle
cmc
add
mov
movsb
lcall
cs
push
imul
shll
lock
rorb
adc
xchg
rcr
std
cmp
shrl
and
mov
cmp
aaa
pushl
int
mov
idivl
fldcw
cwtl
dec
fisttps
mov
dec
cmp
mov
andb
adc
mov
sbb
ss
test
jmp
inc
push
cmovae
mov
loope
adc
add
cmc
push
mov
fcoms
pop
out
and
outsb
imul
sti
pop
ds
out
mov
cmp
xor
and
mov
pop
data16
jmp
jp
es
or
movsb
lret
mov
cmp
xor
fsubr
scas
jmp
loop
dec
lds
int3
adc
out
and
cwtl
push
xchg
std
loopne
arpl
fmuls
cmp
inc
cwtl
dec
scas
jne
test
push
xlat
js
roll
or
mov
repnz
inc
sbb
jp
add
mov
fistpl
jg
jae
subl
jl
into
jne
ror
icebp
dec
icebp
inc
test
lret
sbb
jge
ret
popf
cmp
mov
pushf
test
out
xchg
incb
dec
fldt
push
jb
pop
iret
mov
xchg
iret
insl
or
or
ss
sbb
dec
lret
sbb
or
or
fcmovnb
push
add
mov
jno
mov
shrb
fdivrp
dec
das
sub
adc
clc
dec
pushf
xchg
sbb
cmp
sub
xor
sbb
adc
ret
mov
adc
lret
sub
mov
incl
xchg
dec
int
imul
lahf
imul
push
xchg
cwtl
mov
mov
mov
cmp
jle
je
aaa
and
pop
enter
call
scas
lret
adc
xchg
loop
or
jmp
adc
mov
and
lea
lahf
dec
insl
lods
mov
ret
insl
in
sbb
ljmp
fldt
nop
inc
xchg
push
mov
xlat
lea
in
cmp
insl
pop
or
rcrb
loope
imul
dec
stc
ror
in
or
test
lods
add
or
outsb
adc
xchg
mov
std
mov
into
pop
mov
cmpsl
jbe
jns
xchg
fnsave
movsb
or
insb
cmc
mov
repz
sub
jnp
cmpsl
out
cmpsl
rcl
push
enter
popf
mov
sub
and
pop
test
xor
fwait
jle
jmp
sbb
push
push
shrl
enter
lods
lret
ret
push
cs
test
ffreep
subb
xchg
pop
insb
stc
ret
out
lds
and
push
add
cmp
loop
adc
scas
das
xor
loope
cmp
pop
push
pop
je
pop
jne
dec
add
mov
jp
lods
loop
dec
inc
pop
jbe
rcl
ss
jnp
sbb
or
inc
mov
iret
xor
xchg
repz
sub
into
mov
pop
sbb
mov
cmpsl
out
mov
in
xchg
shrl
jno
lock
or
fistl
mov
std
loop
xlat
mov
fists
inc
dec
xor
dec
mov
xlat
and
aas
xor
inc
add
adc
jno
mov
inc
cmp
fwait
outsb
popa
mov
jl
dec
xchg
add
push
daa
mov
push
sub
xchg
sub
dec
dec
ljmp
and
fucomi
pop
pop
repnz
mov
rorb
ds
inc
pop
dec
adc
xchg
sbb
pop
or
xchg
aam
lret
imul
insb
clc
ljmp
and
mov
push
xor
stc
pop
das
xor
mov
aas
test
sbb
shr
sub
repz
xchg
push
shr
push
aas
enter
icebp
repnz
jmp
movsb
repnz
fildll
mov
loope
mov
cmc
jo
mov
jmp
mov
pop
xor
movsl
data16
ficoml
cmp
stc
test
or
sti
int
les
imul
cmp
sub
inc
dec
ss
lcall
testb
add
push
stos
push
test
push
aam
mov
popf
pop
aam
mov
sub
ficoms
push
jmp
xchg
add
lock
pop
xchg
rcll
jecxz
adc
sbb
es
pop
fbld
ljmp
dec
mov
enter
inc
fildll
in
xchg
sub
jecxz
dec
fbld
xlat
ret
dec
in
mov
push
inc
mov
cs
jbe
sub
mov
push
loop
sub
push
jmp
test
cmp
pop
fldt
mov
std
mov
fsub
inc
or
cltd
repnz
or
movsb
cmp
pop
les
mov
jno
xchg
cmc
sub
in
sbb
lret
dec
or
aaa
and
inc
shrl
push
imul
and
shl
jge
and
mov
push
mov
jb
or
xchg
sahf
or
adc
loop
add
jge
sub
or
jbe
test
ja
int3
xorb
mov
sub
stos
div
push
xor
pop
ja
int3
mov
lock
sahf
dec
cmpsl
fdiv
fiadds
lea
or
push
inc
ljmp
adc
mov
loopne
into
mov
into
mov
in
jle
xchg
dec
sub
add
xchg
cmp
cli
clc
jo
loope
mov
xchg
dec
mov
insb
xchg
mov
xor
sbb
sbb
stc
add
push
push
pop
pop
push
xor
dec
jmp
xor
pop
add
mov
xor
hlt
pop
dec
movb
adc
ja
subb
or
jne
mov
cld
mov
push
push
inc
out
les
mov
sub
jmp
push
or
fldl
repnz
nop
ljmp
mov
shrl
fldt
xchg
mov
and
jecxz
or
xor
xchg
cmpsb
shl
fbld
js
push
jns
mov
int
push
and
pop
mov
movsl
mov
mov
xor
jns
sbb
inc
push
cmp
dec
les
mov
and
mov
add
sub
jne
add
mov
sbb
nop
lds
jb
pusha
jle
sti
cmp
push
and
cwtl
es
mov
sub
push
daa
out
incl
jno
dec
add
xchg
xor
test
adc
sub
jge
jo
fsubs
fcomps
adc
or
out
dec
hlt
ljmp
mov
mov
sbb
insl
jmp
or
cmp
dec
add
mov
sbb
inc
add
pop
nop
xchg
stc
mov
sub
out
xchg
sbb
test
int
mov
into
lret
xchg
push
loopne
add
push
mov
dec
adc
push
out
jbe
push
inc
inc
fxch
leave
insl
or
ja
push
cmc
loopne
mov
mov
subl
xchg
jecxz
mov
and
mov
imul
out
jge
xchg
aam
mov
out
push
mov
sub
imul
jae
pushf
xchg
sbb
push
in
cmp
ds
popa
ret
movb
sub
aaa
pop
je
jle
or
movsb
outsl
in
jns
inc
mov
lret
mov
fwait
push
popf
out
sub
in
push
cld
xor
jmp
ja
mov
xchg
ret
cmpsl
enter
and
out
sbb
push
jle
dec
jp
pop
popa
pop
adc
std
lods
pmaddwd
xor
cmp
call
out
push
and
leave
addl
rclb
data16
out
leave
dec
adc
int
xchg
mov
xor
enter
xchg
sub
sbb
outsl
xchg
push
aas
push
cwtl
adc
mov
pop
pop
push
add
pop
loopne
and
clc
mov
inc
repnz
pusha
roll
setge
jmp
xlat
and
mov
aaa
mov
push
in
mov
fwait
in
jb
ds
push
mov
and
inc
cmp
mov
and
dec
mov
imulb
imul
jg
ljmp
inc
stc
loopne
sbb
js
jmp
push
repz
mov
icebp
cmp
pop
inc
scas
push
mov
dec
outsl
dec
xor
mov
push
cmp
mov
cmp
imul
inc
pop
ror
xchg
pop
pop
mov
stc
xor
cmp
cmc
push
or
pop
test
insb
cmp
leave
mov
sbb
stos
test
and
pop
arpl
cmp
lods
pop
mov
sbb
hlt
outsl
xchg
cmp
push
cltd
data16
sbbb
add
dec
pop
stc
dec
adc
pop
or
mov
add
shll
int3
sbb
lret
push
dec
cmp
inc
jg
sub
stc
push
cli
sbb
testl
pop
jle
dec
dec
or
jl
xchg
sbb
jnp
neg
mov
lds
xor
mov
test
and
jae
popf
pop
ja
mov
cmpl
addb
nop
jg
mov
scas
inc
mov
popl
nop
adcl
std
in
rorl
addr16
push
adc
enter
ljmp
movsb
pushf
xchg
xchg
jecxz
dec
or
popf
fidivs
data16
lock
mov
mov
xchg
sahf
and
push
sti
mov
ljmp
jle
mov
in
dec
jnp
cmp
int3
repz
lahf
push
daa
add
dec
mov
xchg
push
jl
int
cltd
scas
sub
inc
adc
gs
inc
jl
fcmovb
pop
inc
mov
leave
je
mov
hlt
push
dec
cltd
clc
mov
mov
stos
jp
fistl
xchg
pop
movsl
adc
es
adc
inc
mov
or
push
int
jns
not
js
or
adc
xor
xchg
mov
add
push
test
xor
les
adc
push
add
addr16
pop
outsb
mov
popf
sbb
sub
test
push
and
fisttpl
mov
mov
dec
imul
ss
sub
pop
mov
or
dec
push
aam
mov
jae
jne
mov
jg
sbb
xchg
scas
int3
and
sbb
xor
mov
sub
adc
mov
daa
xchg
mov
jmp
ret
xchg
aaa
fisubl
cmpsl
fadd
push
xchg
push
push
dec
add
cmp
rcl
fwait
jecxz
cltd
inc
mov
xchg
je
dec
mov
mov
jl
mov
inc
pop
bound
movsl
mov
mov
iret
and
movsl
test
icebp
outsl
xchg
movsb
aad
cltd
lods
and
cmp
into
mov
jp
in
popl
sub
push
mov
xor
rol
icebp
test
xor
incl
jne
roll
enter
ret
and
fdivr
cmp
pop
or
mov
inc
mov
jle
int3
add
mov
fisubs
rorb
lret
pop
dec
hlt
add
int
xor
mov
cmp
subl
or
push
shll
push
ds
in
mov
fidivl
cmp
mov
cmp
call
xorl
stos
shl
call
outsb
push
pop
pop
les
mov
push
or
fimull
adc
sub
testb
test
inc
out
stos
pop
and
nop
nop
cli
xchg
and
imul
sbb
clc
xor
loop
rcl
push
pop
and
movsl
xchg
mov
xor
sbb
rcr
ror
das
fnstsw
sti
stos
push
mov
sub
repnz
or
push
jo
dec
jb
sti
or
mov
adc
pop
scas
mov
dec
sti
cmpsl
inc
jecxz
ret
scas
out
arpl
mov
sub
das
stc
cmp
out
xchg
outsl
fildl
mov
mov
mov
mov
loope,pn
xchg
inc
icebp
fmull
bound
call
lahf
sbb
adc
jns
mov
sbb
adc
out
cmp
mov
xor
ds
sbb
leave
pop
sub
push
jg
cltd
jecxz
subl
stos
lahf
push
ror
push
push
mov
sar
fcomp
fnstsw
mov
sub
push
pop
cmp
outsl
and
sbb
or
add
iret
fnstenv
and
mov
popf
inc
mov
orb
iret
sbbb
popf
jg
scas
pop
stc
mov
xchg
andl
sub
jo
xcrypt-cfb
cmpsl
movsb
fbld
loop
mov
shlb
or
cltd
cmp
pop
and
xor
int3
aam
sub
sbb
mov
or
dec
jne
nop
je
pop
out
dec
mov
add
fwait
push
bound
pop
inc
shlb
test
mov
aas
loop
push
int
jae
xchg
test
add
dec
mov
adc
push
stos
dec
cmp
xchg
test
into
dec
fcoml
lahf
add
add
mov
out
aaa
cs
lea
loope
movsl
out
test
fisubs
cmp
and
or
jge
or
clc
ss
cmp
pop
decl
xor
xchg
scas
jnp
pop
shlb
int
jmp
mov
mov
incl
pop
jmp
call
enter
gs
inc
daa
data16
mov
mov
xchg
sbb
xor
ljmp
pop
jmp
rorl
jg
jo
sbb
cli
stc
cwtl
shrl
mov
sbb
lods
nop
push
movsb
or
sbb
xor
clc
cmpsb
pop
adc
xchg
loope
pusha
sub
cmp
or
xchg
mov
popf
mov
sbb
pop
pop
cs
in
push
test
add
add
shll
idivb
jbe
popa
dec
pusha
iret
push
notb
imul
mov
and
gs
and
lret
mov
inc
sti
dec
movsl
pop
repnz
sbb
out
mov
add
scas
push
fldt
or
push
daa
pop
mov
inc
popf
pop
daa
test
push
lea
xchg
add
sahf
sarl
lods
xor
push
and
sub
roll
aad
adc
addr16
mov
xchg
adc
imul
and
inc
je
mov
test
sbb
fcomp
mov
jge
into
dec
or
cmp
dec
sub
movsb
test
push
addr16
sahf
scas
cli
leave
imul
loope
fdivrs
imul
in
mov
mov
jge
int
jns
hlt
jo
leave
xchg
fwait
out
sbb
repnz
je
inc
xchg
fwait
arpl
in
pop
aaa
repnz
xorl
add
push
inc
xor
outsb
stos
xchg
outsl
push
inc
xchg
jns
ret
mul
sub
or
jl
bound
rolb
lds
fldcw
or
jbe
adc
pop
cmpsb
cmpsb
adc
pop
mov
adc
dec
xor
test
mov
xor
or
sbb
mov
xchg
int
mov
shll
or
mov
mov
push
push
adc
pop
mov
orl
xor
lcall
js
mov
ret
mov
fwait
mov
mov
imul
repnz
mov
push
aas
jne
dec
cmp
stc
jmp
inc
or
repnz
sbb
cwtl
movl
push
cmp
mov
das
dec
or
add
and
pop
lea
mov
xor
adc
and
outsl
jle
popf
fwait
add
add
jle
imul
fcoml
or
mov
dec
rcrb
add
xor
dec
jmp
mov
xor
repz
iret
popa
das
aad
sbb
mov
pop
fisubrl
test
sbb
jecxz
or
xor
movsl
lods
ss
gs
add
mov
jbe
jno
adc
push
in
xchg
stos
in
xchg
into
push
inc
test
cmp
and
lahf
test
mov
addr16
mov
mov
les
sti
dec
leave
mov
sub
cmpsl
xchg
mov
mov
mov
xchg
cs
ret
add
nop
sarl
inc
movl
hlt
leave
out
pop
loop
add
jg
pop
jb
adc
out
xchg
and
and
fimuls
out
or
adc
xchg
enter
movsl
cmp
fdivp
lods
lock
hlt
ds
pop
push
fsts
add
in
dec
pop
fiadds
mov
or
push
fldt
jns
inc
xlat
jg
and
out
mov
cmp
bound
loope
pop
mov
stc
mov
std
jmp
jno
cwtl
add
add
dec
inc
jns
pop
nop
push
dec
or
pop
adc
pop
cmpsb
arpl
scas
cmp
dec
xchg
int
fidivrs
cli
lcall
aas
lods
add
daa
data16
mov
mov
sub
lods
jb
repnz
adc
loop
adc
cld
jae
sub
xchg
out
xchg
adc
or
xchg
imul
cmpsl
sub
xchg
cmp
test
loope
mov
and
pop
icebp
jo
cmp
mov
es
cmc
adc
push
push
adc
aas
and
dec
mov
das
mov
jbe
in
push
je
mov
adc
push
call
fcomp
pop
or
daa
stos
call
in
int
cmp
into
imul
int
push
inc
arpl
cmp
cld
leave
dec
andb
es
das
sti
shrl
jns
mov
dec
push
aaa
pushf
test
outsl
mull
xlat
icebp
je
and
cltd
loope
or
imul
shll
xchg
adc
ds
mov
iret
sub
cltd
pop
jnp
or
sbbb
and
enter
mov
fisttpl
shll
push
aad
rclb
xor
xchg
jbe
aad
xchg
mov
movsb
outsl
sarl
cmp
xor
pop
mov
stos
mov
movsl
mov
add
push
cli
dec
icebp
mov
divl
data16
js
in
lcall
lea
add
fisttps
xor
popa
addr16
or
mov
push
repnz
rolb
inc
pop
fwait
cmp
mov
sti
sub
loopne
jmp
adc
hlt
adcb
iret
mov
pushf
loopne
xor
enter
or
test
shrl
ret
insb
cli
xlat
dec
popa
cmpsl
stos
dec
ret
cltd
inc
js
pop
and
jp
test
pop
pop
mov
xor
fwait
pop
rcrl
mov
stos
stos
push
out
pushf
adc
inc
cltd
push
test
adc
test
pop
jns
scas
inc
pop
pusha
movsl
xor
push
sbb
in
cmp
outsl
mov
in
and
daa
adc
cmp
push
iret
hlt
stos
xchg
add
das
aad
and
mov
sbb
outsb
add
cs
stos
jg
ds
nop
lret
xchg
icebp
pop
sbb
xor
arpl
mov
stc
mov
inc
pop
cmp
push
cs
in
cli
cld
add
int3
cmp
jne
outsb
push
cmp
out
pop
inc
ja
jmp
mov
cmpsb
test
push
scas
cwtl
cs
in
jnp
cs
leave
cltd
inc
gs
rorw
in
movsl
repz
andl
mov
sbb
sub
mov
lcall
shrl
ds
and
xchg
lea
xor
out
mov
andb
lcall
mov
push
xchg
dec
imul
mov
test
dec
nop
push
push
mov
mov
and
insl
leave
jne
stos
mov
aas
mov
ja
and
dec
push
or
jmp
jge
fstps
fldt
xlat
in
jb
sbb
jecxz
ficoms
data16
or
dec
fsts
xor
popa
pop
leave
test
stc
lea
and
and
push
mov
pop
dec
mov
shrl
add
cmp
fidivrl
push
and
rcrl
pop
pusha
pop
sbb
push
shlb
outsl
shrb
in
out
or
out
enter
lcall
fstps
or
push
sbb
mov
stc
push
in
inc
cmpsl
fwait
adc
fwait
xchg
jno
push
je
sub
jnp
sbbb
js
sbb
mov
imulb
inc
js
gs
iret
repz
xchg
in
xlat
or
imul
xchg
jl
cmp
xorb
pop
xchg
or
add
add
push
adc
mov
shll
aas
xchg
mov
xchg
xchg
daa
adc
adc
or
ja
fcoms
adc
push
mov
cmp
movsl
clc
daa
mov
or
test
add
popa
adc
mov
pusha
outsl
das
iret
in
mov
outsl
and
jge
insl
push
mov
ja
xchg
mov
cmp
scas
pop
mov
pushf
mov
fistps
insl
mov
sti
pop
sbb
roll
into
or
or
das
loope
in
rorb
negb
jae
mov
cmpsl
outsb
cld
call
push
dec
shr
dec
dec
adc
mov
data16
mov
push
jns
shl
in
mov
daa
mov
shll
mov
js
loop
enter
push
or
cmp
fcmovnb
adc
leave
jl
fsub
xchg
pop
pop
sti
push
jecxz
xchg
call
or
stos
nop
jbe
aam
stc
push
jno
lock
mov
mov
loopne
inc
xchg
push
mov
inc
cmpsb
out
cwtl
sti
mov
mov
fsts
push
add
jl
sbb
and
sbb
outsb
push
popa
xor
inc
jg
es
sti
mov
in
mov
fisttpll
ja
mov
mov
dec
popa
adc
push
and
lods
addr16
push
inc
xchg
lahf
into
lock
jne
pand
adc
jae
test
and
ficoml
pop
jge
inc
nop
bnd
int3
inc
cmp
push
lret
insl
and
mov
fstps
pop
dec
out
and
xchg
outsl
testl
loope
stos
shlb
add
setno
add
cltd
fimuls
add
mov
sbb
loopne
push
faddp
ljmp
iret
shr
jno
adc
imul
aaa
movsb
sbb
or
jp
std
leave
mov
dec
ljmp
or
jno
jmp
leave
orb
notl
or
sbb
pop
xorl
pop
or
sub
jge
mov
add
dec
mov
out
addr16
test
xchg
mov
ja
mov
adc
push
sub
push
cmpsl
into
pop
and
push
add
addr16
aam
adc
and
pop
pop
cltd
mov
aaa
lret
call
pop
out
xor
popa
mov
dec
lret
fbstp
xrelease
mov
cld
and
sbb
pop
sbb
mov
fisttpl
add
xchg
jo
fildll
lds
shlb
leave
push
add
sub
sbb
iret
sub
xchg
scas
xchg
fadds
dec
mov
cwtl
sti
or
test
or
jg
jg
stc
pop
movsb
pop
jae
cmp
and
aaa
dec
div
fwait
jne
xor
cmc
mov
and
xorl
cmp
mov
inc
sahf
push
aas
inc
mov
and
das
imul
stos
mov
mov
jne
lret
fidivl
mov
nop
xchg
lret
inc
icebp
rcrl
jb
xchg
sti
xlat
jl
jge
sbb
cmc
out
enter
mov
fsincos
jbe
popa
fnsave
jle
insb
dec
pop
sub
cmc
aad
inc
mov
dec
ss
inc
movsl
mov
mov
fwait
sub
fsubl
jl
out
push
lds
dec
gs
mov
jb
or
xchg
sub
jmp
sub
repnz
sbb
jno
inc
mov
sarl
std
mov
pop
adc
pop
jle
cli
push
mov
inc
xor
clc
cmp
pop
or
pop
lods
sti
rclb
je
in
fdivp
inc
mov
rorb
push
sbb
adc
jne
leave
xchg
popf
js
int3
xor
into
jp
jge
lds
xchg
push
loop
pop
xorl
repz
lret
ja
mov
jbe
jae
loopne
jle
and
pusha
lods
and
push
mov
ds
rolb
dec
aas
push
fmull
pop
ror
xchg
xorl
push
in
out
in
add
mov
loop
in
add
inc
push
jbe
sub
dec
and
addr16
pop
inc
js
sub
cld
in
mov
jle
jecxz
scas
ljmp
inc
dec
bound
lret
pop
fs
dec
xchg
and
bswap
dec
sub
sbb
adc
mov
lock
popa
test
xor
outsb
cmpsl
jg
test
pusha
andb
fidivrl
and
cs
arpl
push
adc
je
adc
push
call
inc
jmp
cs
push
mov
fiaddl
mov
push
popa
insl
loopne
outsb
add
sbb
loopne
jns
insb
inc
mov
cmp
outsb
mov
mov
js,pn
cmp
mov
movsl
or
shll
mov
adc
jbe
inc
popf
pop
aad
ja
pop
icebp
jne
popf
test
sbb
cmp
and
out
push
dec
out
cmp
adc
fisttpl
lahf
mov
mov
pop
push
xor
lret
out
out
inc
das
jmp
pop
push
mov
leave
outsl
xchg
and
fldl
in
popf
sbb
xchg
mov
add
neg
push
xor
jb
insb
jb
xchg
sub
stos
dec
push
xchg
jmp
fbstp
and
sti
inc
xchg
xchg
mov
jnp
popa
mov
jl
push
add
or
sub
add
cmp
sti
ss
sub
stc
out
pop
cs
push
fistpl
push
daa
xor
out
mov
push
in
ror
push
jmp
lods
imul
mov
xchg
js
cmpsl
push
jg
xchg
addr16
dec
push
test
add
jne
jmp
inc
sbb
xorl
jns
cmpl
xlat
inc
in
pop
pop
sub
data16
int3
setae
mov
arpl
mov
pushf
or
int
insb
ja
sub
pop
sub
cmp
lahf
lock
cmpl
xchg
or
out
sbb
and
adc
into
dec
pop
sub
adc
popa
mov
popf
lret
or
xlat
in
mov
xor
adc
cmpsl
mov
mov
add
addr16
hlt
pop
or
sahf
ss
or
xorl
jmp
jns
push
int
push
dec
lret
jle
push
or
push
js
iret
pop
ffree
addb
icebp
inc
dec
lret
add
pop
xor
sbb
mov
mov
mov
jae
mov
jnp
stos
mov
addl
mov
adc
push
lret
push
cmp
lock
sbbb
xchg
cmp
push
lds
dec
arpl
loop
inc
mov
xchg
std
sub
or
mov
in
and
sbb
xchg
sbb
lods
mov
hlt
dec
mov
mov
fmuls
imul
xchg
ja
cmp
jo
cmpsb
lcall
addr16
pop
mov
in
sub
pop
test
jg
aas
pop
lcall
int
or
cmp
adc
and
jl
enter
xor
jl
es
mov
jo
push
cs
lock
cmp
mov
call
sbb
les
mov
stc
push
dec
cs
pop
or
pop
and
mov
pop
sti
and
movsl
adc
in
mov
orl
jge
push
sbb
fnstsw
jecxz
repnz
and
and
fimuls
jb
outsb
test
pop
std
rclb
es
leave
sbb
adc
and
std
loopne
in
fisubs
inc
sbb
push
mov
lahf
and
test
mov
outsl
xlat
sub
faddl
clc
ficompl
jbe
jnp
stos
or
hlt
mov
orb
dec
mov
popf
push
ss
inc
pop
int
jecxz
add
cmp
incb
push
int3
scas
add
pushf
popf
shr
dec
inc
xchg
jg
inc
mov
mov
subb
xor
xor
mov
jae
lds
fdivs
imul
in
inc
mov
repnz
xor
or
repnz
lret
out
and
fwait
and
mov
mov
inc
cmp
jns
mov
pop
push
mov
es
fistpll
dec
mov
jl
adc
out
sbb
std
rorb
mov
cli
jns
ss
push
cmpsl
cwtl
pop
scas
dec
mov
dec
cmovge
xor
inc
cmp
jle
push
or
jle
cli
sub
add
or
xchg
sub
addr16
and
in
mov
push
das
aam
inc
push
loop
dec
into
test
mov
mov
iret
mov
out
stos
mov
mov
arpl
scas
push
shll
mov
xchg
dec
repz
mov
mov
insl
ja
movsb
imul
les
mov
cmp
mov
sbb
mov
gs
cli
popf
mov
push
cmp
pop
fisttps
hlt
cmp
cmp
inc
call
add
sbb
loop
sahf
mov
xchg
xchg
je
lea
cltd
inc
push
movsl
sahf
cs
in
lret
test
mov
or
shr
jno
push
lret
push
pop
xor
adc
stos
or
cmp
insb
pop
dec
jo
in
push
idivb
xchg
les
mov
gs
mov
addb
xor
inc
pop
sub
pop
push
xor
shll
mov
inc
xor
inc
cmc
iret
or
lods
sub
andl
push
adc
mov
hlt
or
lcall
aas
sbb
jmp
mov
push
fs
jp
pop
frstor
shlw
or
leave
xor
lea
out
fisttpll
sub
push
push
in
push
insb
and
jbe
dec
mov
cmp
xchg
das
scas
pushw
xchg
cltd
add
lods
add
aaa
jg
in
test
cmpsb
imul
divl
xchg
adc
pushf
addr16
sar
jbe
inc
xchg
loop
out
add
shr
inc
lds
adc
xor
and
dec
mov
mov
jle
mov
jg
cltd
cli
cmp
aaa
pop
and
popa
sbb
jno
jl
rcl
imul
je
imul
lods
sti
gs
int3
popa
push
cli
jl
push
jmp
mov
movsl
stos
push
jbe
mov
sarb
mov
pop
outsb
int
jge
cli
mov
stos
adc
or
shll
mov
test
nop
push
mov
std
push
pop
lds
or
dec
repnz
mov
lret
in
insl
pop
lcall
cmc
scas
xchg
sbb
adc
xchg
addr16
mov
rorb
xchg
adc
fcomi
loop
cmpsl
pushf
mov
mov
lahf
dec
cld
push
xchg
stos
fdivrl
cmp
sub
cmpsl
ficomps
ljmp
std
cmp
lret
xchg
inc
cwtl
pop
dec
xchg
or
testl
push
scas
or
add
lret
sti
jmp
and
test
mov
pop
inc
dec
jo
ret
lret
lods
setle
dec
scas
or
sub
cmp
pusha
jmp
lds
imul
adc
ljmp
ret
push
sbb
jae
adc
mov
push
or
pop
or
adc
aad
sbb
jge
es
and
mov
clc
or
push
or
jbe
mov
sbb
out
faddp
imul
fisubl
add
sti
pushl
sub
gs
test
mov
lahf
jge
push
mov
lcall
cmp
cmp
dec
ljmp
jp
cmp
sbb
fmull
dec
incb
adc
ficomps
xchg
xchg
ret
shl
sbbl
or
xchg
push
or
int3
mov
jo
dec
orl
mov
sarb
jecxz
test
and
call
sbb
xchg
sbb
push
clc
icebp
dec
jo
fdivr
pop
add
cmpl
sbb
cs
adc
mov
mov
sbb
jne
sub
gs
scas
dec
xor
test
cwtl
dec
fildll
inc
popf
xchg
out
push
inc
loop
cmc
pushf
push
jae
dec
sbb
sub
adc
out
pop
neg
mov
inc
xor
mov
push
sub
pop
xchg
adc
jp
xor
mov
mov
inc
fildll
jae
sub
adc
inc
push
jnp
push
mov
dec
xchg
lret
hlt
imul
test
add
xor
push
fidivrs
jl
or
lods
inc
test
arpl
imul
pop
out
pop
fnsetpm(287
xor
cmc
ret
out
lcall
loopne
adc
movsb
mov
mov
dec
sarb
sahf
adc
xor
shll
xor
bound
ficoml
fldenv
push
mov
sbb
data16
movb
mov
clc
fists
push
mov
into
stc
sbb
mov
ret
pop
push
jmp
test
push
addb
cmc
rclb
leave
pop
fs
lock
or
inc
adc
fisttps
lahf
out
subl
hlt
popa
in
and
loopne
adc
cmp
cmp
in
cmp
in
xchg
pop
loop
mov
rcrb
cs
add
ljmp
mov
cltd
cmc
inc
jne
mov
dec
mov
lcall
in
cwtl
dec
fildll
fldt
sbb
andl
push
out
inc
scas
sbb
xchg
push
mov
ja
lret
ss
cmp
and
cltd
repnz
jb
jno
inc
pop
mov
inc
pop
sbb
cmpsb
adc
pop
inc
add
xchg
or
aad
dec
fldl
mov
xor
ret
sbb
fisttpl
andb
pop
jecxz
inc
dec
xadd
sub
mov
push
fmull
xchg
inc
sbb
pop
push
fdiv
and
enter
cmp
jo
mov
mov
jmp
out
inc
in
pop
ss
js
lods
adc
sbb
ljmp
data16
push
mov
adc
call
jmp
in
adc
dec
xor
out
mov
shll
nop
mov
sbb
sub
sbb
icebp
and
pop
pop
mov
sub
cmp
sti
sub
mov
sub
fdivrl
and
sbb
pop
push
xchg
xchg
lock
cltd
add
and
rorl
push
addb
xchg
jbe
pop
pop
cltd
scas
inc
xor
jns
dec
push
insl
jge
cmpsb
les
ret
int3
xor
and
push
jge
out
int3
pop
pushf
fnstenv
dec
adc
gs
aad
cmp
int
pop
sbbb
pop
mov
push
ficoms
decb
xor
aaa
test
adc
scas
jnp
lods
imul
mov
outsl
fistps
popf
jb
mov
jne
movsl
int3
scas
pop
and
aaa
inc
into
sbb
movsb
pop
aam
sub
jae
xor
cmp
movsl
sbbl
cwtl
cmp
jp
xor
pop
stc
rorl
out
adc
mov
das
aaa
jbe
ror
aaa
movsb
test
cmc
pop
dec
mov
sub
xchg
fs
mov
cmpsb
aam
imul
cmp
push
xchg
mov
js
cmp
dec
jae
xchg
inc
cmp
jecxz
adc
cmp
shll
out
out
test
fsubrl
or
cld
or
xlat
fstl
scas
fsubrl
and
orb
inc
imul
daa
xchg
in
loopne
push
mov
lret
mov
jnp
push
sub
push
cwtl
scas
imul
inc
xchg
jns
lds
xorb
insl
les
outsb
adc
shl
repnz
cmp
push
sub
sarl
push
push
xor
leave
jp
sub
sti
inc
lods
inc
pop
fistpl
stc
andb
xor
aad
pop
leave
scas
repnz
ret
lods
repz
jmp
pop
lret
xchg
flds
adc
dec
sahf
out
mov
add
sub
arpl
jns
sub
call
ret
mov
mov
test
popa
imul
bound
mov
dec
or
lret
incb
cmpsl
sub
xchg
out
adc
mov
push
call
push
lret
jno
dec
jle
hlt
fwait
scas
mov
and
je,pn
add
mov
repz
loope
mov
ljmp
push
adc
mov
add
mov
stos
cmpsl
inc
inc
sub
insl
mov
sub
mov
lret
mov
lds
inc
decb
cmpsb
inc
pushf
aam
jne
mov
pop
popf
mov
cwtl
inc
jo
mov
int3
fcmovnb
loope
in
dec
push
jg
lea
xchg
mov
movsb
stc
push
mov
ljmp
enter
test
out
cmc
js
pop
pop
out
xlat
cmp
test
es
cmp
mov
dec
out
js
ds
xor
mov
clc
outsl
rcr
dec
outsb
jcxz
iret
daa
or
jl
sub
roll
mov
out
mov
test
cmp
cmp
inc
stos
lret
mov
outsb
out
sahf
fninit
jb
rcrl
dec
js
test
dec
xchg
stc
adc
push
nop
pushf
jle
fldcw
popl
div
test
cmpsl
das
push
xchg
inc
scas
jb
pusha
lock
repz
and
imul
sbb
jg
in
out
jmp
xor
lods
dec
lds
fdivs
or
pushf
inc
test
push
ljmp
or
add
mov
mov
cwtl
loop
leave
bound
shrl
scas
popf
shll
fisubl
inc
jmp
mov
repz
inc
cmc
addr16
sti
or
jp
sbb
std
pop
xor
pop
dec
pop
xchg
insl
lahf
inc
add
shrb
inc
daa
mov
shlb
or
repz
sub
xorb
or
ja
clc
add
inc
hlt
ror
add
fldcw
inc
add
das
cli
imul
shr
scas
call
and
add
xor
mov
lock
data16
ret
sub
mov
xchg
or
sub
pop
mov
jne
mov
stos
fmul
add
adc
sub
add
jne
pop
das
push
or
push
test
fucomp
out
es
adcl
jge
mov
jp
mov
xor
and
jmp
enter
cmpsb
addr16
inc
stos
mov
pop
sbb
stos
and
mov
cmp
ss
xchg
movsl
jbe
dec
out
mov
dec
sub
mov
inc
mov
add
icebp
in
ret
mov
push
push
jp
aaa
sub
mov
sar
sbb
and
cmp
cld
and
out
sub
xchg
mov
sbb
dec
jnp
lea
jl
or
push
xchg
test
andl
cmp
sbb
loopne
and
loopne
dec
mov
jns
daa
push
or
stos
dec
cmp
rcrb
cmp
cmp
insb
int
adc
mov
pusha
pop
fwait
adc
pop
mov
adc
bound
addl
xchg
int3
ds
mov
push
lret
sbb
cmp
add
sub
mov
loop
sbbl
mov
js
les
call
stc
lahf
inc
sub
sti
iret
xlat
rcl
data16
sti
outsl
push
les
fld
push
pushl
add
mov
sbb
push
jecxz
cmpsl
adc
and
inc
cmc
mov
call
iret
testl
stos
test
pop
aam
stc
sbb
lds
clc
sbb
mov
fdivl
rorl
dec
js
mov
lahf
fistps
clc
inc
hlt
sbb
push
cmpsb
cmpsl
call
or
pop
in
int3
pop
mov
repz
lods
les
and
sub
stc
and
scas
mov
stos
cwtl
in
xor
pop
dec
push
out
aaa
in
wbinvd
popa
arpl
mov
frstor
cwtl
or
mov
lahf
sub
pop
call
mov
insl
xchg
cltd
or
mov
jmp
js
sbb
mov
xchg
xchg
sti
cmp
rolb
sti
in
lock
push
insb
xchg
int
out
xor
add
mov
mov
xchg
test
push
out
and
test
cmp
fs
sub
iret
pop
jp
scas
in
inc
je
aam
sahf
cmp
lret
dec
add
sub
cmp
scas
sti
sahf
cmp
scas
pop
insl
mov
adc
mov
cltd
btr
mov
xchg
and
push
frstor
lret
test
repz
nop
mov
in
idiv
mov
aam
jbe
sub
jp
test
mov
leave
shl
test
ror
mov
and
jge
jmp
jge
pushf
dec
push
out
adc
sub
std
jg
scas
sahf
inc
mov
inc
pop
mov
popf
aam
fistl
adc
arpl
lret
xor
mov
cmpsb
mov
imul
test
inc
into
clc
inc
jg
mov
sub
orl
mov
and
movsb
sub
jno
xor
mov
sti
shlb
repnz
and
cmp
or
dec
cwtl
and
jmp
push
pop
movb
outsl
inc
cli
sbb
mov
sub
popf
js
or
mov
mov
into
stos
jle
sbb
cmpsb
sub
push
es
incl
out
jl
loopne
leave
sub
mov
inc
sbb
xchg
cmp
sub
cs
mov
push
mov
stc
and
lods
mov
fldcw
pop
sti
mov
repz
ljmp
inc
cmp
lahf
xorb
adc
jg
gs
popa
mov
mov
mov
pop
sbb
arpl
xor
subb
ret
jnp
mov
pop
loopne
into
fdivs
lahf
lahf
mov
loope
popf
or
insl
mov
or
add
popa
cmc
test
shl
sbb
mov
push
mov
xchg
mov
mov
lock
popa
push
mov
sahf
arpl
jb
test
scas
sub
ret
xorl
fisubrl
cli
aam
jge
repz
out
outsb
mov
dec
mov
addr16
outsl
sbb
cmc
dec
loope
dec
or
loope
cmpb
mov
xchg
jns
xlat
hlt
cmp
adc
adc
sbb
jg
je
push
cld
dec
mov
js
cmp
imul
mov
andb
daa
jp
insb
stc
inc
and
dec
jnp
mov
jl
icebp
jp
mov
cmpsb
inc
adc
dec
pop
loope
fdivrl
xchg
inc
and
movsb
add
jg
jge
shl
inc
add
jge
dec
insl
cmp
and
ss
fadds
gs
mov
mov
stos
je
cmp
add
mov
out
call
js
mov
shl
mov
popa
lret
sub
mov
pusha
or
loop
xor
pop
mov
cmpsb
fmull
mov
sub
mov
test
xlat
cmp
inc
jno
rclb
in
repnz
jae
test
ljmp
incl
jl
lods
rclb
xchg
mov
jmp
jno
lods
movsb
test
jp
or
insl
jb
arpl
xchg
mov
mov
leave
mov
loop
and
xchg
push
xlat
shll
or
push
jmp
mov
stc
pop
out
and
ret
adc
test
push
daa
inc
lcall
mov
mov
mov
outsb
fs
and
sub
push
in
jp
and
int
mov
and
int
loope
mov
enter
lea
orl
nop
insb
add
dec
mov
adc
fsubrs
push
scas
mov
xchg
outsl
xor
stos
xchg
mov
fsts
int3
xchg
and
add
lock
xchg
lahf
jnp
imul
fs
xchg
mov
movb
jg
lea
icebp
imul
push
aad
jle
inc
out
xor
fsubl
icebp
or
ss
fisttpl
vpunpckhwd
shlb
mov
xor
inc
xor
mov
jge
cmp
mov
cmp
gs
or
scas
add
ss
sbb
pop
fbstp
and
pop
lcall
xchg
jne
fidivrs
mov
xchg
push
pop
cmpsl
sarb
push
mov
mov
sub
xchg
jmp
scas
push
enter
in
fsubr
cmpsl
adc
mov
lods
cmp
out
jp
outsb
imulb
outsl
dec
push
rorl
adc
add
cmc
inc
mov
jmp
add
xchg
xchg
add
adc
adc
inc
int3
jge
mov
mov
jecxz
popf
xchg
inc
in
bound
jl
adcb
int
cli
mov
mov
stos
mov
pop
xchg
out
aam
and
mov
leave
mov
iret
cmp
push
test
rolb
add
sub
inc
dec
xor
xor
lds
or
sub
inc
inc
mov
sbb
movsb
mov
dec
push
mov
movsb
xor
cmp
xchg
pmuludq
imul
andb
inc
out
negl
push
add
popf
test
mov
inc
inc
push
nop
lret
xor
iret
add
mov
mov
out
rcl
xlat
xor
or
pusha
mov
sbb
inc
inc
je
adc
and
mov
xchg
adc
xor
inc
push
push
imul
xchg
push
pop
push
pop
xor
inc
xor
pop
stc
mov
or
shr
xchg
sbb
cwtl
add
pop
scas
xlat
inc
xchg
cmp
xchg
in
and
stc
cs
and
movsl
insb
jg
jo
cmp
dec
aam
pop
mov
aas
pop
cs
pusha
jnp
loopne
cmpsl
pop
cli
mov
or
inc
or
jl
sahf
xorl
test
aaa
sub
pop
xchg
push
push
in
push
adcl
arpl
mov
fstps
dec
ja
dec
cli
mov
cwtl
xchg
les
xchg
and
in
stos
es
daa
popa
push
cmp
insb
js
leave
pop
cs
sti
pop
mov
rclb
movsb
rcrl
sbb
dec
sbb
pusha
pushf
xor
xchg
dec
mov
dec
or
daa
js
rcrl
or
out
imul
pop
ret
push
popa
rcll
push
xorb
jge
iret
pushf
inc
inc
sarl
rolb
daa
dec
push
push
mov
cli
mov
pop
xor
enter
testb
and
addr16
mov
out
cmp
loop
xor
dec
push
pop
add
xchg
mov
add
call
mov
fwait
int3
in
int3
scas
ss
movsb
mov
daa
loop
fsubl
std
mov
stc
sub
addr16
jnp
push
push
clc
xchg
xor
jae
adc
rorl
lahf
das
stos
leave
out
mov
pop
pop
stos
cmc
outsl
or
and
test
lahf
ss
in
inc
jo
mov
pushf
pop
loop
xchg
jbe
push
loopne
and
mov
mov
jecxz
mov
pushf
lods
pop
dec
xrelease
xchg
jle
sub
xorb
adc
aas
lea
push
in
xchg
jb
cmp
sbb
inc
inc
inc
xchg
ficomps
mov
in
inc
stos
cld
mov
scas
stos
mov
xor
cmp
or
outsl
insl
frstor
push
push
mov
xor
and
add
clc
gs
push
les
lods
cmp
loopne
xchg
insl
adc
jno,pn
negb
add
xchg
inc
pop
xor
lock
out
jge
fadd
out
fwait
push
mov
mov
adc
pop
sbb
in
xchg
mov
cmp
cltd
or
push
sub
hlt
jo
pop
ret
out
mov
add
sbb
jbe
sbb
push
pop
lods
push
hlt
movsb
mov
add
aaa
jg
idivb
sub
push
xchg
jno
das
subb
cmp
adc
inc
loope
or
jns
imul
jno
xor
and
adc
adc
xchg
xlat
dec
xlat
jns
fs
aaa
ds
add
ffreep
add
pushf
jb
mov
aas
ficomps
aam
pop
lods
mov
sarb
fsubs
les
movsl
dec
cmp
push
stos
push
outsl
add
sbb
aad
xor
inc
lret
add
jmp
outsb
lahf
movsb
sbb
fisttps
xchg
add
neg
dec
popf
inc
pusha
int
mov
push
pop
cmc
gs
fstl
fcmovnu
xchg
xchg
mov
pop
fmuls
lcall
add
add
sbb
sub
and
mov
pusha
gs
cmp
lods
dec
xchg
jecxz
push
mov
test
sub
sbb
sub
jmp
xchg
pop
aas
imul
xchg
aam
fisubrl
or
jp
orl
add
dec
ljmp
icebp
repz
lock
cld
jecxz
ds
fsub
push
dec
popf
mov
fnstcw
mov
or
push
lret
xchg
es
arpl
sub
cmc
pop
lods
bound
or
arpl
and
loop
pop
dec
mov
popf
xor
adc
mov
dec
mov
fld
scas
jno
or
xlat
cmp
cmp
das
in
in
add
push
bound
data16
pop
mov
cmp
int3
push
rcll
jnp
cmp
pop
mov
les
mov
xchg
lock
outsb
sbb
and
mov
cmp
sti
andb
and
mov
adc
and
push
out
pop
jmp
fdivl
or
popf
jge
or
stos
notb
imul
sbb
mov
ja
jge
frstor
hlt
mov
xchg
and
rolb
loop
ja
jmp
nop
xchg
cmp
cmp
and
enter
icebp
imul
inc
out
test
inc
xor
mov
lds
sbb
inc
imul
shll
das
jnp
xor
or
mov
adc
xchg
daa
mov
fwait
cmc
jne
mov
aas
mov
rorl
xor
add
adc
jp
mov
mov
mov
fisubl
cmp
jge
movsb
repnz
mov
sbb
adc
mov
es
cmpsl
int
test
mov
jmp
inc
mov
adc
loop
xchg
jmp
in
out
cmc
cmp
push
ja
imul
insb
sti
ljmp
cmc
gs
jmp
or
xor
cwtl
repnz
loop
mov
xor
push
es
mov
push
add
shl
pop
mov
rclb
fdivrs
int3
xor
mov
ljmp
lock
pop
dec
xchg
mov
mov
lcall
inc
addr16
mov
repz
adcl
cmp
nop
nop
int3
mov
push
xor
or
test
ljmp
jge
call
xchg
push
mov
stos
mov
sub
mov
mov
ds
add
sub
push
mov
xchg
adc
dec
clc
push
sub
popa
lods
fisttps
incb
mov
cmpsl
mov
pop
mov
sahf
xchg
sbb
out
test
arpl
js
loopne
dec
inc
jo
nop
movsl
loop
rcll
mov
cmpsb
mov
fs
xor
xchg
inc
enter
scas
call
test
jp
inc
jb
mov
and
and
sub
push
stc
inc
imul
sahf
mov
repz
inc
inc
xchg
test
pushf
stc
into
xor
xchg
fdivs
jb
adc
scas
jle
in
and
dec
stos
add
add
mov
outsb
call
jno
mov
cmpsl
cs
fimuls
jge
sub
add
cmp
sub
mov
cmp
xor
jecxz
add
dec
jnp
sbbb
mov
bound
lods
repnz
loopne
adc
lods
push
cmp
cmpsl
push
rcl
sub
fnsave
xor
push
roll
jo
pop
mov
and
pop
mov
andl
ret
push
lods
dec
jbe
push
rolb
dec
mov
adc
imul
mov
xchg
lahf
lods
xor
mov
int3
inc
stos
adc
or
imul
add
cmp
mov
jl
arpl
idivl
loope
popf
fnsave
cltd
mov
push
xlat
pop
scas
xchg
xchg
push
divb
js
cltd
in
ja
xor
xchg
faddl
add
imul
adc
sbbl
jmp
in
cli
inc
sub
leave
pop
cvtps2pi
cmp
xlat
or
aaa
mov
sub
cmp
popa
insb
xor
dec
push
dec
iret
xchg
mov
pop
push
sti
mov
clc
cltd
fiadds
mov
add
mov
jg
mov
nop
mov
test
sbb
cwtl
sti
xor
bound
stos
rolb
push
lcall
xor
in
out
retw
sarb
mov
sti
push
cmp
das
fiaddl
out
push
leave
aad
mov
mov
mov
jns
xor
push
fdivrl
jmp
addb
pop
fiadds
aaa
mov
xchg
lock
lret
add
lea
mov
orl
call
scas
sub
dec
push
push
or
rol
sbb
rolb
xor
sbb
add
or
xchg
jbe
pop
mov
pop
lret
test
lds
sub
jne
mov
roll
sbb
icebp
jg
mov
stos
sbb
cmpsl
out
push
push
sub
out
pop
or
ljmp
ret
inc
cmp
pop
xor
sub
in
adc
sti
cmp
iret
lods
mov
repnz
push
dec
cmpsl
mov
jae
xor
cmpsb
add
out
jae
sbb
sbb
pop
out
inc
xchg
sub
lret
mov
into
cmp
popa
js
inc
lahf
iret
inc
push
popf
call
mov
xor
icebp
lods
fisubrs
push
ret
cmp
stc
pop
add
adc
jae
jg
xor
mov
stos
lock
dec
or
push
xor
mov
int3
xor
xor
dec
imul
shrl
ret
pop
and
sahf
sbb
adc
add
dec
inc
inc
and
and
push
push
and
out
and
hlt
inc
fwait
clc
pop
cmp
ror
test
cwtl
or
jno
popa
pop
xor
inc
cmpsb
jecxz
sbb
cmpsl
cmpsb
std
scas
scas
push
hlt
and
mov
sub
xchg
sub
add
mov
je
in
shll
xchg
fwait
cmp
mov
adc
ds
mov
movsb
lfs
cmp
adc
and
mov
rcl
fnstsw
mov
mov
sbb
mov
enter
mov
jg
es
and
pushf
rolb
jno
test
sbb
fcoml
in
inc
or
out
or
push
js
mov
call
lock
lret
subb
mov
sub
mov
sub
int3
mov
push
lret
xchg
sbb
cmp
sub
mov
pop
ret
test
test
insb
lods
in
jae
mov
loope
mov
call
enter
sbb
pop
or
add
shrb
mov
push
stc
ja
fidivrs
pop
push
jmp
pop
mov
pop
jge
lahf
out
xor
adc
test
sbb
mov
dec
push
enter
cs
pop
add
pop
hlt
add
imul
mov
outsb
lea
ret
push
lods
sbb
fcomp
ss
or
data16
add
or
push
and
or
repnz
ja
clc
leave
movsb
mov
jo
dec
addps
or
mov
xor
push
repnz
mov
jb
push
leave
push
fdivrs
mov
rolb
lcall
inc
out
jno
xchg
imul
lea
mov
jg
lods
pop
ss
test
mov
lock
xchg
ljmp
fs
mov
inc
or
push
mov
pop
mov
jle
mov
int
and
imul
mov
mov
mov
addr16
icebp
mov
add
push
loop
mov
pop
rcrl
inc
paddw
push
subl
push
jmp
and
dec
sahf
xchg
subl
fnstsw
inc
sbb
xor
mov
lods
and
jg
ds
dec
pop
call
insb
mov
dec
add
jp
cmpsl
data16
cs
xchg
push
or
pop
jp
ret
xchg
jne
fwait
cmp
idivl
mov
insl
shr
mov
in
fmulp
push
adc
in
dec
sgdtl
and
xlat
inc
sub
push
and
ds
aaa
mov
filds
popf
pop
mov
outsl
fisubrl
sub
scas
aam
fs
call
push
jbe
pop
mov
push
and
out
jnp
jo
movsb
stos
inc
lock
out
dec
clc
cld
stos
adc
xchg
jg
adcl
das
pop
cltd
mov
mov
mov
test
aaa
js
iret
cmp
xchg
mov
cmpsl
sarb
shrl
inc
hlt
mov
out
pushf
jno
mov
pop
shl
loope
fs
icebp
fidivrl
xchg
in
fwait
push
sub
adc
jo
add
pop
ds
shl
mov
and
mov
stos
xchg
loopne
lea
mov
push
pop
call
aad
dec
lea
add
mov
aad
sub
inc
mov
pop
les
idivl
pop
es
mov
pop
inc
ljmp
mov
sti
out
outsb
jge
ljmp
in
fidivl
fdivs
loope
jnp
icebp
loop
sbb
lods
inc
adc
xlat
sahf
enter
aam
mov
lock
xor
hlt
loop
or
cwtl
mov
inc
aam
jg
xchg
adc
xchg
mov
jbe
push
pop
lret
out
inc
sub
sub
popf
dec
sbb
les
dec
push
xchg
mov
dec
xchg
js
mov
pop
aaa
popa
sbb
xor
std
insl
nop
adc
jecxz
jno
sbb
clc
adcb
test
mov
enter
jl
cmpsl
push
clc
out
add
mov
push
sub
icebp
aaa
dec
sub
cmc
adc
daa
sub
stos
insl
sub
mov
int
mov
lds
adc
and
dec
add
scas
mov
sbb
nop
and
sbb
sbb
mov
filds
and
mov
in
gs
or
mov
adc
dec
jmp
ret
ret
cli
ljmp
push
aad
nop
adc
pushf
dec
jb
pusha
into
adc
test
mov
data16
xchg
push
jle
ljmp
negl
inc
fcomp
cmc
push
and
imul
sar
faddl
cs
mov
mov
es
test
cli
pop
out
mov
dec
cmp
jp
stos
xor
and
xorl
sbb
imull
fdivs
ja
and
rolb
clts
je
and
xor
shl
push
and
dec
cs
dec
mov
into
sub
icebp
mov
out
sti
sbb
stos
int3
adc
mov
jg
push
cmp
jae
stos
aam
subl
jo
push
mov
out
jb
fmull
mov
outsb
inc
in
int3
sbb
xorl
sbb
clc
cmp
lods
lret
cmpb
outsl
jp
mov
adc
lcall
popa
repz
ret
and
loopne
pop
cmp
mov
cli
push
js
or
push
int3
outsb
js
dec
cli
mov
xlat
xchg
dec
mov
cmp
xlat
imul
das
cs
int3
js
packsswb
les
negl
rcll
inc
loopne
sub
push
rolb
orb
jo
xchg
pop
ljmp
xchg
arpl
sbb
push
outsb
dec
loop
push
faddl
and
test
outsl
sub
push
sarl
sbb
pop
dec
outsb
jge
int3
scas
or
mov
scas
xor
dec
jge
ja
dec
mov
add
cld
mov
and
subl
lret
mov
mov
mov
out
fwait
jmp
shr
mov
sbb
add
xchg
sti
xchg
lods
push
fsubs
adc
bnd
sti
mov
cmpsb
cs
xor
adc
mov
jle
mov
push
int
ljmp
jmp
jb
mov
or
xchg
jno
sub
dec
lock
xor
fstps
fwait
and
add
sub
and
xorl
andb
jp
add
fstpt
sahf
pop
inc
rorb
movsb
inc
xor
les
popf
xchg
addr16
dec
aad
xchg
aas
sarb
ret
jge
mov
jg
mov
sub
xchg
shll
lock
mov
mov
test
jo
repnz
iret
push
rcl
dec
sub
stos
inc
sub
mov
sbb
and
xchg
cwtl
inc
sti
xchg
inc
jge
xor
inc
sbb
lret
int3
repz
mov
aad
icebp
xor
push
lods
cmp
insl
mov
mov
dec
push
fistps
push
or
fwait
add
add
mov
fdivrl
push
push
out
out
cmpsb
mov
cmpb
inc
lret
aad
jg
mov
lods
inc
jnp
xchg
xor
icebp
movhps
int3
cmc
sub
imulb
cld
and
or
repz
loope
insl
add
lahf
fstps
xchg
mov
jns
call
jae
cmp
popf
addr16
and
scas
mov
jnp
fdivrl
popa
mov
cmp
xchg
jmp
int3
mov
dec
je
pop
je
js
sub
jle
call
fisubrs
gs
ret
filds
sbb
cmp
movsb
jb
cmp
add
loop
cmp
ja
lret
repz
dec
pop
cmc
xchg
fnstenv
sahf
flds
in
dec
out
push
cmp
gs
sub
mov
mul
ja
push
and
cmc
pop
testb
insl
add
outsl
cmp
imul
sbb
and
inc
xchg
fbld
jno
pop
insl
jmp
in
daa
adc
pop
and
jbe
lahf
fs
adc
push
sbb
jg
ja
popf
iret
add
push
sub
jns
loopne
sti
lcall
lock
js
aaa
mov
xchg
enter
dec
pop
jmp
jg
sbb
pop
in
andb
adc
push
cmpl
ret
subl
jl
mov
push
out
xchg
cmpsl
add
jp
jmp
mov
test
push
xchg
or
ja
scas
lret
jae
mul
cmp
dec
call
push
imul
cmp
dec
mov
aaa
or
and
or
cmpsl
inc
and
outsb
jbe
outsb
sub
sub
imul
fidivs
in
jg
cmp
mov
sbb
inc
sbb
mov
jl
cwtl
andl
jns
push
lods
jns
cmp
inc
rcrb
jg
cmp
cltd
shll
sub
cmpsl
arpl
dec
sbb
test
mov
in
call
jne
or
les
shlb
add
jns
sub
inc
dec
mov
insb
sub
jno
pop
cmp
or
fisttpl
inc
movsb
xchg
out
add
aas
ficoms
xchg
lock
sbb
andb
addr16
je
dec
rcll
mov
bound
mov
mov
mov
lock
mov
add
sbb
cltd
sahf
jmp
cmp
nop
js
lods
xor
shll
push
sbb
aas
xor
pop
pop
inc
jno
cmc
out
shrb
xchg
cmc
xor
lods
push
je
repnz
and
or
ret
pop
mov
push
repnz
sbb
dec
das
test
inc
idivl
xchg
sub
scas
dec
pop
jmp
jb,pt
movb
lsl
inc
fists
cmp
push
mov
stos
icebp
scas
iret
ja
icebp
cmc
sahf
sarb
ja
bnd
leave
fdivr
xor
dec
push
repz
jl
cmp
icebp
stc
ljmp
int
pusha
cwtl
push
mov
jle
pop
cmp
jge
inc
mov
mov
push
shll
push
xchg
into
xlat
adc
mov
sbb
mov
in
daa
loope
test
sbb
add
dec
aaa
fsubrl
xchg
mov
inc
popa
je
mov
lahf
push
dec
inc
lods
sub
stos
jge
pop
cmp
mov
popa
dec
or
mov
sbb
outsl
in
clc
push
jns
out
cmc
addl
jmp
sub
mov
xchg
xchg
sub
xor
gs
lcall
mov
pop
or
rol
sub
push
cmpsl
sub
xor
inc
sub
ret
in
aas
cli
and
push
pop
sbb
inc
jl
lea
xor
jno
xor
jg
dec
cmc
pop
pop
aad
ret
sub
insb
pop
inc
call
lcall
iret
mov
adc
adc
lock
ds
mov
test
jb
popa
lea
fdivrl
enter
in
daa
push
or
rclb
push
mov
sahf
dec
repz
lock
mov
jb
aas
mov
hlt
pop
cmp
jns
jg
add
cmp
pushf
inc
or
mov
out
push
dec
jae
outsl
popf
das
cwtl
and
shll
jp
pusha
and
pop
or
cmp
test
push
or
mov
xlat
sbb
mov
xorl
test
iret
mov
enter
outsb
cmp
sub
sbb
mov
aad
add
imul
or
mov
dec
cmc
in
mov
jmp
or
decb
int3
das
xor
and
lret
std
popa
xchg
add
mov
and
or
cmp
pushf
cmp
pop
xor
aam
dec
negb
fs
jg
sti
lret
out
mov
in
call
ljmp
arpl
add
cmp
sub
hlt
add
sub
pop
sub
notl
ficoms
mov
or
ret
and
shll
ja
jno
inc
sub
mov
in
arpl
pop
push
stos
leave
xchg
cmp
mov
jg
or
bound
mov
push
add
lret
ficomps
xor
push
xor
aas
rolb
ret
and
cmp
fwait
mov
or
ret
cli
mov
push
adc
lods
jbe
adc
shll
xor
addr16
xchg
les
mov
sbb
mov
add
ret
enter
xchg
or
jns
xchg
dec
in
pinsrw
cmpsl
leave
test
imul
jns
leave
iret
mov
nop
sub
xchg
mov
mov
stos
enter
out
push
fcomip
int3
sahf
aas
sub
icebp
jmp
xor
mov
lods
in
sub
fiaddl
imul
mov
insb
mov
enter
or
jmp
scas
rorb
ret
mov
cmc
movsl
adc
fs
cli
cltd
in
aad
sbb
add
mov
shr
xchg
cwtl
inc
jmp
cltd
jp
or
adc
rorb
xchg
hlt
gs
scas
xchg
sahf
ret
cltd
into
jle
lods
sub
jl
outsl
mov
sub
inc
enter
add
subb
sahf
jnp
xor
sub
mov
mov
jle
add
mov
mov
mov
jg
mov
ljmp
dec
js
decb
xchg
stos
imul
jns
fwait
xor
lea
idivl
repz
call
mov
or
in
sub
or
xor
jb
sbbb
cs
cld
jns
sbb
fs
outsl
push
je
imul
add
mov
arpl
mov
clc
mov
icebp
pop
mov
insb
pusha
xchg
hlt
loope
test
lock
lcall
ret
cmp
mov
mov
mov
jo
mov
inc
aas
adc
xor
inc
outsb
push
out
xor
daa
adc
daa
lret
lret
push
popf
dec
inc
lret
push
or
mov
lods
jbe
push
mov
dec
sub
sub
push
mov
push
cmp
testb
sarl
testl
bound
push
push
icebp
testl
and
imul
stos
lret
cli
or
mov
test
mov
bound
fwait
mov
stos
call
adc
mov
into
mov
int3
xchg
xchg
mov
sbb
xor
leave
fdivrl
jmp
mov
xchg
lods
sahf
das
in
mov
mov
xchg
cltd
outsl
or
into
iret
lods
int
fimuls
aam
cmp
lea
leave
jo
push
mov
call
and
xchg
inc
xchg
jo
jb
stc
pop
bound
std
dec
mov
mov
cmpsb
pushf
sbb
push
mov
inc
stos
test
cmpsb
idivl
xchg
cmp
mov
sub
stos
cmp
aad
or
les
jmp
mov
mov
cwtl
xchg
and
lds
fdivl
push
mov
xor
sahf
notb
ljmp
lcall
inc
fcmove
jno
jge
aam
scas
cwtl
int3
pop
or
in
xor
mov
xchg
dec
enter
js
mov
mov
add
cmp
or
push
sub
sub
sub
aad
std
nop
push
std
sub
push
dec
sub
repz
pop
mov
xchg
iret
jl
sbb
cmpsb
cmp
push
add
push
cltd
mov
ret
jno
aad
ljmp
pushf
sar
or
outsl
mov
cli
ret
mov
jo
jp
popa
mov
add
and
mov
inc
bound
in
dec
cli
std
lret
mov
adc
push
nop
sbb
pop
cwtl
out
pushf
repnz
mov
xor
xlat
push
test
roll
inc
dec
fistl
xorb
iret
lods
mov
cmp
mov
repnz
jbe
xor
out
in
jno
mov
mov
fldt
push
xor
outsb
mov
outsl
push
fcmove
cltd
dec
stc
stos
repnz
xchg
mov
leave
push
out
outsl
mov
or
out
sahf
or
bnd
in
mov
cs
insb
addl
add
leave
sahf
cmp
clc
cmp
jns
jmp
leave
hlt
ret
mov
push
jae
mov
and
xchg
call
fs
push
hlt
mov
rorl
mov
sub
out
das
fs
hlt
flds
dec
add
insb
fnsave
or
add
dec
push
sub
mov
pop
mov
in
inc
int3
divl
push
sbb
lds
mov
dec
call
push
sahf
dec
cmc
mov
scas
mull
fs
cltd
lock
loopne
outsl
inc
sbb
into
mov
in
shl
test
sub
mov
sarl
lods
insb
or
rcr
push
cmp
sub
mov
lret
jb
dec
cli
mov
add
cltd
sub
cmp
clc
push
hlt
shlb
aas
mov
leave
xor
inc
out
cwtl
stos
fdivr
add
add
cmp
std
xchg
push
ficompl
daa
lods
jmp
mov
push
daa
hlt
sbb
fsubl
test
rcrb
sbb
jnp
sub
sub
lret
repz
dec
mov
cmp
push
mov
arpl
daa
mov
push
out
dec
push
outsb
pop
jbe
cld
xlat
jmp
cmp
sbb
jo
sbb
fdivr
push
out
pushf
or
aaa
mov
mov
adc
sbb
xor
cmp
sub
pop
xchg
popf
dec
dec
push
jge
jnp
fisttpll
xchg
inc
js
inc
insl
movaps
clc
insl
push
sbb
sbbb
mov
enter
adc
cmp
sbb
pop
movb
push
xchg
dec
sub
nop
ficoms
xor
mov
dec
dec
xchg
or
rcrl
mov
sub
lods
dec
fmuls
inc
push
sbbb
arpl
repz
jnp
dec
add
mov
jbe
jmp
into
stos
fnstsw
bswap
or
jl
xchg
pop
adc
pop
stc
jg
shlb
add
sahf
pop
cmp
mov
and
shrb
cmp
jo
mov
out
xchg
xchg
test
aad
lds
mull
sarb
fmul
jecxz
jae
test
aas
sbb
inc
add
jp
rclb
lock
adc
icebp
fldl
jle
fwait
fwait
adc
add
pop
test
cmp
and
shlb
adc
lock
dec
dec
mov
sbb
or
loope
lret
fidivl
cmp
xchg
fucomi
jbe
cwtl
dec
adc
xchg
jle
cmp
xchg
arpl
mov
aam
leave
or
in
or
aam
gs
divl
orb
sub
sbb
fyl2x
jae
sbbb
ret
ljmp
mov
cwtl
xor
dec
adc
pop
push
jb
imul
std
movsb
jb
ljmp
mov
je
nop
jne
mov
lahf
ss
aam
push
movsl
pcmpgtd
cmp
stc
shl
popa
push
pop
lret
jmp
cltd
xchg
push
push
ds
or
and
xor
dec
jecxz
adc
fs
daa
mov
fcompl
cmpsl
pop
int3
popa
mov
jb
jns
lahf
std
lock
inc
pushl
mov
fsubp
dec
sbb
jmp
outsb
stc
mov
adc
fnstsw
nop
xor
push
push
mov
inc
fabs
push
and
inc
push
insl
cmp
insl
repz
adc
pushf
mov
call
jno
dec
mov
popa
hlt
ds
sbb
cmpsl
imul
dec
in
cs
mov
fwait
xchg
push
cli
in
ret
lods
sbb
and
sti
mov
in
ds
inc
cmp
pop
out
xor
cmp
outsb
sub
and
add
fwait
inc
lahf
das
loope
popf
lret
xchg
shlb
ja
stos
pusha
dec
dec
xor
dec
push
arpl
inc
daa
dec
push
add
adc
popf
push
mov
shll
aas
shl
xchg
insb
fs
data16
inc
pop
xor
dec
jno
mov
ja
xchg
mov
mov
mov
scas
lcall
push
dec
movsl
test
sub
xchg
or
inc
lar
sbb
add
iret
pop
dec
and
and
pop
lahf
aaa
cmp
and
pop
jmp
push
adc
sbb
push
xchg
bound
xchg
mov
cmp
lea
out
push
push
push
xor
outsl
call
cmp
sub
icebp
fnstcw
mov
clc
adc
cmp
xchg
and
lcall
shrb
fdivrl
imul
lods
jae
adc
cmp
inc
xchg
mov
es
xor
add
mov
int3
pop
xlat
mov
lcall
sub
mov
jno
push
add
aad
fnstcw
xlat
aad
or
push
xchg
fs
insb
pushl
or
aaa
xchg
notb
mov
or
xchg
or
add
and
or
into
int
aas
pop
or
push
aam
xor
cwtl
jae
movsb
in
inc
and
push
aam
cmp
test
daa
push
jmp
aaa
test
pop
sub
xchg
push
mov
push
or
jo
in
cmc
dec
fucomip
mov
gs
mov
push
mov
out
jbe
dec
jno
jmp
cmp
xchg
clc
je
popa
inc
iret
daa
add
pop
scas
inc
or
sarb
sub
cmp
inc
xor
stc
in
xor
push
stos
daa
xchg
jb
push
aas
notb
test
xchg
pop
sub
xchg
or
pop
xchg
sub
divb
int
push
out
cwtl
aam
lods
in
lret
jge
test
outsl
pop
loopne
loopne
push
mov
popa
xor
cmp
jl
jp
fwait
jbe
or
or
add
imul
jno
out
negb
aam
cmp
mov
out
fdivl
dec
dec
push
sub
pop
mov
fsubl
pop
or
adc
lea
movb
mov
push
push
sbb
xchg
clc
scas
or
dec
insl
repnz
mov
mov
stc
ds
pop
jmp
fs
stc
insl
cld
jns
cs
movsb
jle
or
add
fidivs
xchg
mov
adc
and
cmp
lock
stos
cmpsl
cmp
insl
addr16
mov
jmp
pop
and
ja
pop
mov
ret
sbb
cltd
adc
les
mov
ret
push
mov
daa
int
sbb
pop
jo
ja
ja
arpl
mov
push
imulb
fstpl
cmp
xchg
out
push
les
mov
push
add
scas
mov
in
jne,pt
dec
mov
mov
and
lods
out
or
inc
and
imul
rclb
lret
ffreep
out
dec
clc
inc
fadd
dec
sbbl
push
push
pop
shll
add
cmp
fdivp
das
inc
mov
js
mov
cld
xor
testl
insl
inc
fbld
or
and
into
test
add
daa
adc
xchg
inc
int
sbb
push
pop
inc
push
cli
jecxz
xor
out
adc
insb
sub
push
insl
sub
jns
in
inc
mov
xchg
jle
pop
add
and
xchg
xlat
stos
sub
mov
add
mov
jae
inc
or
test
gs
cmp
or
pop
lret
lea
movsb
mov
or
push
xor
pop
mov
mov
mov
xor
add
stos
leave
scas
repz
mov
dec
shll
sbb
sub
int3
cwtl
push
xor
adc
sbb
leave
inc
test
and
repz
call
clc
test
sahf
mov
jno
arpl
sbb
mov
inc
mov
int3
inc
fcomps
inc
cmc
sbb
jbe
mov
xchg
push
lock
dec
popa
or
lea
fldcw
sub
out
inc
xor
jle
out
arpl
mov
lock
les
add
std
cmpsb
dec
sar
and
pop
cli
in
loop
push
pop
xchg
sub
into
fsubp
pcmpgtd
mov
inc
cs
mov
ja
or
insl
sub
xor
mov
cli
cmp
dec
popa
cld
cmpl
jmp
jg
cmc
bound
arpl
cli
mov
mov
xchg
jg
inc
mov
mov
mov
shlb
enter
sti
mov
fdiv
add
movsl
aam
mov
xor
lcall
cmpsb
jno
or
cli
jae
mov
rolb
js
jbe
fcoml
pusha
incl
jae
lods
push
cmp
gs
dec
mov
fsubl
sub
leave
jno
daa
mov
and
xlat
call
mov
inc
pop
pop
cltd
cmc
loopne
jne
sbb
mov
mov
out
push
out
stc
fs
in
mov
lahf
xchg
push
fbstp
cs
pop
jg
push
mov
ljmp
lsl
add
pop
cmp
mov
inc
xlat
fs
lds
cltd
sub
loop
jle
or
cmp
pop
scas
xor
loope
jns
xor
mov
mov
imul
fists
mov
bound
or
jp
add
cmp
rol
ret
loop
push
outsb
jae
push
add
and
out
add
mov
stos
in
pop
pop
outsb
sahf
push
xchg
and
xchg
pop
xor
in
ret
outsb
aaa
or
xor
in
jb
inc
dec
or
push
lret
jg
push
pop
lahf
inc
std
pop
movsl
leave
fsincos
rcrl
sub
add
xchg
adc
pop
push
insl
dec
add
push
cmp
mov
sar
stc
cmp
add
es
sub
pop
add
xchg
test
add
aad
sub
sbbl
mov
add
dec
add
imul
or
push
sbb
jbe
lret
push
jb
int3
std
popf
cmp
shll
fsubp
xchg
out
lds
add
js
pushf
jecxz
jecxz
cmp
mov
jae
mov
lahf
out
dec
sahf
sti
adcl
add
jnp
lret
or
push
scas
enter
sbb
js
fldt
out
mov
ljmp
cli
sti
or
xchg
outsl
int3
push
xor
push
pop
aad
hlt
sub
in
test
add
ja
adc
xor
mov
stos
mov
cmpsb
dec
mov
data16
dec
fdivrl
in
sbb
inc
les
sbb
fsub
inc
imul
adc
jnp
aad
push
cmp
hlt
not
mov
lods
inc
or
out
fwait
insl
xchg
mov
lret
or
mov
in
add
fwait
arpl
jae
mov
enter
lret
add
pop
and
in
xchg
xor
add
dec
inc
xchg
lods
sti
test
rolb
add
lock
fdivrs
jbe
jmp
xchg
repnz
xchg
divb
incl
add
daa
sbb
scas
jne
xor
repnz
inc
adc
outsl
in
scas
dec
sub
dec
and
xchg
inc
out
mov
jne
and
sub
cmp
and
pusha
dec
mov
sbb
jp
push
inc
mov
fists
repz
and
daa
lahf
jno
and
push
stc
jno
shrb
or
push
dec
daa
inc
ret
xlat
loop
mov
inc
jbe
fisubs
cmpsb
bound
pop
inc
dec
inc
or
iret
cmp
add
cmp
dec
bound
mov
push
loope
cltd
ds
sbb
shr
or
in
mov
aam
dec
arpl
lcall
fwait
cli
fs
shlb
mov
push
mov
jmp
xchg
rcl
push
aam
xor
pop
or
pop
out
into
iret
sbb
fwait
rclb
imul
adc
cmp
fwait
and
sbb
hlt
sbb
push
cmp
xchg
push
cld
subb
dec
mov
inc
out
xchg
push
push
ret
mov
shlb
and
push
iret
cmp
dec
xor
dec
js
mov
pop
xchg
outsb
jne
xchg
mov
gs
mov
repnz
test
dec
bound
or
test
mov
rcll
das
sbb
das
xchg
or
inc
in
nop
push
inc
mov
jecxz
xchg
add
pop
add
or
xchg
movsl
loopne
push
popf
mov
pop
mov
mov
ret
add
or
or
flds
inc
push
mov
pavgw
push
jl
daa
aaa
lods
ja
mov
push
mov
les
fs
inc
jge
and
jg
fistpll
jae
push
dec
into
adc
mov
and
inc
xchg
jp
xor
aas
hlt
movsb
pop
imul
mov
out
fcomps
sbb
xor
scas
xor
add
stos
jne
cmpl
push
addr16
cmp
adc
ja
cs
xor
rol
faddl
jle
clc
sub
inc
jb
mov
jo
mov
stc
mov
pop
js
fisttps
or
insl
std
cmp
lahf
jl
cmc
cltd
jae
push
lret
pusha
cmpsl
pop
push
cmp
test
aad
push
enter
sbb
pushf
aaa
jnp
xchg
cmpsb
cmp
popa
or
in
into
das
sub
aas
or
int
je
arpl
xchg
fsubrl
dec
rcll
xor
loope
dec
sub
fcmovnbe
insl
jp
mov
in
rcrb
fldl
fcoml
stc
cmpsb
test
mov
cs
out
divb
inc
cs
sub
mov
jge
xor
ret
std
cmp
xor
add
rcrl
mov
scas
lods
inc
xorl
inc
cltd
push
sub
int3
roll
aaa
dec
pusha
fs
int3
ficompl
adc
lss
das
jbe
lods
call
xor
pop
adc
inc
mov
mov
dec
inc
xlat
jmp
arpl
ret
xor
add
push
mov
and
pop
sahf
enter
int
push
sub
int3
cmp
cmp
mov
cmp
push
in
and
out
cld
in
fadds
popf
xlat
call
sbb
movsl
mov
jne
loop
jnp
scas
adc
rorb
sti
es
cmp
push
and
data16
ljmp
xlat
stc
cmp
pop
sbb
jo
adc
test
add
mov
add
cmp
fs
mov
jecxz
cmp
jge
xlat
stc
and
cmp
push
jp
push
je
jo
adc
outsl
jmp
mov
jae
dec
cmp
fdivs
nop
insl
inc
mov
inc
adc
inc
std
and
dec
jno
enter
cs
lcall
test
mov
mov
or
ret
xchg
pop
pop
xchg
and
cli
fdivrl
inc
aam
insb
pop
sub
repz
shl
call
push
mov
ret
or
add
jno
jnp
cltd
pop
inc
fsts
mov
sub
xor
mov
dec
cmp
mov
push
xchg
and
inc
rolb
gs
lea
xchg
cmpsb
mov
mov
mov
jp
cld
push
lea
sub
aam
jbe
inc
sub
sub
sbb
jmp
dec
outsl
ja
xchg
rcll
xchg
fisubrl
call
mov
mov
test
test
fidivrl
pop
rcl
jno
push
js
test
jnp
mov
aas
mov
sub
cmp
scas
xchg
sub
dec
push
jle
jle
xchg
jl
mov
add
lcall
imul
aaa
xchg
ds
or
scas
cli
mov
nop
xor
pop
pusha
xchg
xchg
push
jbe
or
pop
cwtl
sbb
mov
popf
mov
push
imul
movsl
mov
cmp
mov
or
aad
aam
jns
filds
sahf
fsubl
stos
cmc
addr16
arpl
shlb
cmpsb
mov
rol
in
into
leave
fidivrs
xor
mov
mov
repnz
jae
xor
lret
xor
sub
add
add
and
js
mov
scas
adc
cmp
jo
mov
cld
xor
lcall
jl
jnp
push
cmp
mov
add
push
mov
push
adc
mov
popl
in
popf
int
rcrl
les
dec
cwtl
cmc
data16
dec
jne
cli
fists
sahf
fistpl
inc
jae
ljmp
sbb
shlb
push
out
mov
inc
pop
repz
in
push
push
mov
add
jne
mov
stos
mov
add
lds
cmp
stos
mov
push
shrl
int3
inc
sbb
or
jl,pt
pop
push
out
mov
mov
sbb
movsb
out
hlt
pop
jge
and
inc
dec
cmpsb
push
ds
sbb
std
dec
sub
lcall
xchg
add
push
sti
dec
inc
jecxz
cmpsb
mov
iret
jl
cltd
cmc
mov
xchg
inc
push
push
mov
add
xchg
sub
xchg
js
bnd
lods
mov
jp
shlb
movsl
adc
or
pop
bound
jnp
pop
imul
add
fwait
paddw
fdivr
aas
push
mov
or
cmp
cmpsb
xchg
test
mov
cli
and
testl
or
xor
xor
jle
clc
and
stos
dec
pop
sub
pop
add
outsb
pop
adc
test
xor
cmc
sub
cltd
jbe
add
cmpsl
add
imul
cmp
inc
pop
lods
jbe
into
movsb
jne
popa
mov
jle
dec
sub
pop
call
adc
ret
fists
cli
inc
rcrb
mov
sub
dec
jp
shl
inc
popa
sysexit
jl
jl
aam
movsb
insl
mov
js
pop
mov
js
fcomip
cmp
scas
mov
mov
test
mov
ja
cmp
push
push
outsb
arpl
lahf
xor
adc
mov
xchg
jns
loop
rcrl
and
cltd
int3
movsb
cmp
movsb
cld
xor
int3
cli
insl
addr16
std
pop
xor
jl
sub
inc
pop
mov
dec
imulb
shrb
andl
adc
lds
loope
cmp
lods
cmpsb
bound
fiaddl
jecxz
imul
rolb
mov
clc
mov
sbb
inc
inc
lds
push
loope
aas
sub
shlb
inc
or
fdivl
sbb
sbb
shrl
pop
pop
sub
mov
int
jne
dec
hlt
arpl
inc
pop
xchg
cmpsl
addr16
outsb
es
rcrl
or
pushf
xchg
lcall
mov
jno
ret
jg
pop
cmpsl
in
imul
jl
cmp
mov
mov
flds
ja
cmp
rolb
sub
outsb
je
mov
icebp
call
jge
mov
cmpsb
out
in
testb
and
data16
or
and
aam
pusha
fs
aas
jl
cmp
stc
pop
outsb
ret
daa
sub
repz
in
jns
mov
mov
lcall
xchg
outsl
xchg
jbe
mov
std
mov
out
notl
sub
bound
adc
mov
pop
stos
fimull
fcoml
in
lret
data16
push
dec
leave
test
scas
icebp
sbb
cmp
fs
test
push
mov
jne
cli
add
push
jns
lock
fbld
pushf
xchg
push
jl
test
cmp
es
dec
test
jmp
cmpsb
push
mov
mov
adc
jno
hlt
sahf
pop
push
out
call
repnz
popf
lock
shll
jge
add
sbb
xchg
sub
addr16
ret
jg
scas
int3
into
cltd
pop
xor
test
or
jns
inc
dec
and
cmp
loop
popf
cwtl
lret
mov
xor
push
or
xchg
mov
mov
push
inc
mov
roll
ficoml
pop
jmp
das
sub
icebp
imul
push
fbld
cmc
dec
adc
or
dec
mov
pop
jno
insl
pusha
std
nop
dec
xor
in
jp
fsts
adc
mov
jl
jne
mov
push
or
clc
jnp
fcoms
mov
pop
inc
test
outsb
daa
mov
mov
hlt
inc
test
in
adc
and
xchg
popf
rolb
fimull
or
xchg
movsb
and
imul
stos
cmp
call
mov
push
mov
mov
inc
mov
ljmp
mov
pop
out
repnz
cld
cwtl
and
aam
in
adc
daa
js
jb
jno
imul
int3
cmpsb
xchg
cmp
push
inc
inc
xchg
push
movsb
pusha
dec
inc
mov
mov
sub
icebp
jnp
push
push
jae
cmc
in
leave
cmp
out
out
fimuls
gs
adc
cmp
dec
jae,pt
rolb
es
pop
xchg
jmp
in
and
enter
sub
sbbb
stos
lods
lea
mov
scas
cmp
pop
xchg
es
ss
cmpsb
sti
repnz
fwait
cmpsb
and
mov
sbb
mov
in
push
in
shlb
in
inc
fldcw
mov
shlb
test
dec
repnz
jg
xchg
je
lods
adc
imul
out
insl
es
inc
push
mov
pop
xor
dec
and
fists
and
dec
je
inc
fsub
mov
sbb
ret
dec
mov
or
mov
cmp
in
push
mov
inc
dec
push
mov
cld
mov
push
xlat
xchg
mov
push
ret
outsb
push
cwtl
repnz
inc
sbb
mov
xchg
sub
sbb
lock
lret
mov
repz
mov
xor
ret
in
mov
imul
test
pop
pop
lahf
push
fs
cld
adc
xchg
lahf
or
enter
mov
mov
aad
mov
nopl
imul
mov
in
lret
adc
and
xor
inc
repnz
jo
out
mov
shll
push
pop
fisubrs
or
ds
out
sbb
dec
cmp
insl
xchg
out
mov
test
jmp
mulb
pushf
aas
mov
lds
out
rorb
lahf
test
jns
push
outsl
add
mov
dec
addr16
adc
sbb
mov
movsb
in
push
pop
xchg
loop
push
pop
out
jl
int
mov
sahf
ret
xlat
clc
sbb
imul
in
mov
arpl
or
xor
push
or
mov
sahf
cmpsb
and
jecxz
movsb
arpl
mov
xchg
lret
insl
aam
xchg
push
push
push
cli
js
sbb
jnp
clc
pushf
cs
pop
adc
mov
mov
mov
pop
jl
push
push
sti
shr
aas
out
stos
fistl
mov
pop
push
jg
popf
push
call
push
inc
jo
cmpsb
test
mov
fbld
scas
in
mov
jb
add
lods
xchg
imul
adc
push
pusha
push
ljmp
daa
mov
pop
cli
mov
adc
jmp
es
sbb
cmp
iret
pop
sbb
imul
sub
fwait
int
jae
mov
popa
divb
mov
sub
xchg
jns
movsl
lods
stc
and
ret
lret
int
dec
and
nop
sbb
mov
gs
jle
sti
jnp
mov
imul
out
cwtl
in
inc
sti
rorl
mov
ret
push
push
mov
addr16
inc
jge
xchg
loope
sahf
push
push
dec
orl
push
push
ljmp
mov
loop
push
push
psrld
and
xor
pop
jp
jecxz
dec
add
mov
jle
push
pop
divl
scas
xor
cmp
mov
or
rcrl
xchg
mov
dec
or
fsubr
mov
bnd
jp
sbb
sub
insl
insl
cs
lcall
popf
lcall
stos
lds
add
mov
lret
and
pop
scas
pusha
bound
loopne
shr
xorl
mov
cmp
sbb
dec
push
inc
mov
xchg
fstpt
cld
push
mov
sbb
add
data16
cmpsb
cmpsb
loop
cmc
in
lcall
adc
add
jbe
push
scas
mov
iret
xlat
filds
pop
cmp
std
sub
fisubrs
dec
mov
xchg
stc
ficoms
and
sarl
ret
jg
xor
repz
test
aaa
and
pop
pop
dec
or
insb
mov
inc
adc
dec
mov
fnstenv
dec
dec
lahf
mov
and
add
int3
xchg
pop
mov
jmp
push
out
or
pop
lods
mov
and
sarb
in
sbb
out
xor
test
cli
adc
inc
mov
aaa
repz
pop
mov
mov
sub
dec
dec
into
sbb
in
jle
jno
je
sub
sbb
imul
jo
and
out
inc
flds
out
cmp
repnz
jb
cmpsl
push
insl
and
and
ffree
repnz
sbb
or
aas
call
stos
inc
in
jb
xchg
jmp
push
arpl
xchg
or
sub
push
inc
in
addb
mov
cld
mov
dec
pop
mov
mov
adc
jbe
in
lret
xchg
push
daa
push
clc
je
pop
jg
aam
cld
clc
mov
fildl
jmp
imul
mov
test
daa
cli
fcoml
jge
mov
lock
test
adc
ja
ds
and
sti
mov
imul
xorl
xchg
and
movsb
jl
imul
lret
leave
les
inc
sub
enter
mov
jne
test
dec
inc
jecxz
ja
and
in
xor
dec
add
mov
jo
out
xchg
test
subl
repz
call
jl
adc
addl
add
les
sti
jnp
fwait
sbb
hlt
sub
mov
fbstp
int
or
mov
add
in
pop
push
lret
mov
adc
adc
pop
inc
pusha
cmp
add
xchg
aaa
adc
push
mov
test
mov
ret
mov
inc
push
fwait
jg
push
jge
adc
ljmp
jo
mov
test
cmc
ror
jns
push
or
popa
lret
out
xor
jmp
sbb
insb
aad
push
inc
sbb
or
sarb
adc
inc
jmp
scas
pop
mov
push
inc
lret
scas
aaa
movsb
test
mov
dec
in
push
pusha
or
stc
and
cmpsb
or
or
mov
cmp
mov
in
adc
leave
test
pop
aam
mov
sub
insl
cmp
or
sbb
int3
pop
enter
push
outsl
mull
je
fsubr
stos
or
orl
xchg
mov
in
pop
cmc
js
mov
inc
mov
cmp
test
outsb
or
shl
jmp
mov
and
fucomip
sub
cmpsb
out
jle
jmp
xchg
mov
xor
call
mov
push
inc
push
ror
cmp
loop
sbb
fcoml
popf
xor
clc
aad
inc
insb
push
insl
sbb
fsubrs
out
mov
cltd
lods
mov
ret
xchg
mov
push
mov
mov
xchg
pop
nop
fmull
pop
mov
hlt
shr
or
and
and
sbb
lods
adc
dec
rclb
mov
add
inc
lahf
add
cmpsl
mov
push
jbe
pop
popl
rolb
mov
insb
mov
xor
lods
int
aad
adc
sbb
scas
dec
mov
lods
rorl
xchg
push
pop
mov
aas
in
shl
std
sub
insl
movsl
arpl
sub
dec
in
scas
xchg
cmp
jp
testb
ffreep
pop
pop
call
add
lds
cmpsl
mov
mov
repz
xchg
fwait
sbb
imull
fildl
cli
and
dec
ret
sub
mov
sbb
shl
insb
lret
push
cmp
in
std
inc
movsl
pop
repz
pop
pop
xchg
inc
inc
dec
dec
sarl
gs
cmp
xchg
and
dec
arpl
movsl
cmp
xor
mov
test
add
arpl
test
cmc
sbb
stc
insb
xchg
sub
xchg
je
mov
frstor
loop
fidivrs
fsubs
test
aas
ror
popa
add
loop
jns
cltd
imul
pop
mov
mov
xchg
mov
gs
test
aaa
sbb
inc
je
shll
add
adc
sub
sbb
jg
lret
dec
xlat
mov
and
lret
xchg
or
fwait
test
sti
sahf
add
dec
in
xlat
iret
jnp
jmp
in
push
out
mov
add
sbb
imul
pop
xor
mov
lcall
adc
adc
movsl
xor
shrd
sub
lods
mov
inc
jg
popl
sbb
cltd
data16
imul
cli
das
or
cltd
call
mov
dec
sbb
scas
lods
clc
in
cli
pop
mov
lods
xor
adc
mov
jo
xor
dec
mov
loope
or
in
jg
cwtl
into
mov
stc
mov
insl
xor
push
lock
push
xchg
sbb
pop
je
jae
inc
pop
mov
add
xchg
cmc
push
jmp
jne
sub
and
lods
or
jle
jae
in
mov
cwtl
xchg
stos
mov
dec
int3
std
pop
lds
cmp
lods
das
pop
test
popf
cmp
mov
add
cs
mov
xchg
dec
cli
cmc
loopne
cwtl
sub
jbe
imul
pusha
das
mov
or
add
mov
daa
dec
aad
pop
inc
aam
sbb
vmwrite
lods
pop
pop
imul
ror
les
push
xchg
ljmp
sub
stc
jge
jnp
mov
dec
xor
mov
cmp
aaa
inc
push
push
jns
fstps
adc
lds
jmp
pop
cmp
mov
pop
mov
mov
cli
sahf
ss
leave
loop
dec
and
ljmp
jp
or
cmp
fbstp
sahf
jbe
adc
dec
dec
pop
ss
xchg
cs
add
cmpsb
inc
daa
sub
pushf
xchg
mov
inc
jecxz
test
sub
fmulp
mov
cmp
push
out
inc
das
mov
dec
scas
sub
jae
push
loopne
mov
jmp
jle
addl
popa
adc
dec
adc
mov
arpl
aad
fsubrs
ret
es
mov
inc
test
ret
insl
call
mov
sub
mov
in
jne
flds
lret
pop
sub
cmp
in
icebp
mov
push
imul
int3
test
xor
inc
cmp
mov
jno
insb
ss
dec
ss
loope
mov
sbb
push
add
jne
xchg
jg
ficompl
rolb
sbb
ljmp
lea
xor
add
in
sbb
sbb
ss
mov
out
mov
mov
lcall
cli
sbb
gs
lret
push
faddl
mov
cmp
xor
mov
cli
sub
push
aaa
imul
nop
sub
xor
jno
pop
test
dec
inc
leave
add
cmp
xlat
or
mov
and
pop
xchg
push
dec
xchg
cs
or
and
pop
mov
pusha
push
jae
push
and
sbb
pushw
ljmp
push
push
in
loope
sbb
push
dec
sub
mov
dec
inc
je
sbb
push
add
in
lods
xchg
or
popa
push
and
xchg
testl
mov
out
movsb
pop
and
es
adc
push
ret
mov
out
hlt
mov
cli
sub
ret
pop
push
hlt
mov
test
pusha
out
sub
jp
dec
adc
les
pusha
in
into
je
cmp
in
cltd
lods
cmp
add
jl
sub
cmc
sbb
mov
imul
jno
push
mov
dec
or
mov
rcrb
adc
ret
mov
ret
mul
in
sbb
call
fnstsw
mov
aas
nop
fsubrs
test
add
aas
sub
dec
or
push
js
cmp
pusha
push
insb
push
fwait
data16
xchg
push
jb
shlb
inc
int
xchg
dec
in
pusha
mov
or
and
lock
fidivl
push
gs
jb
lds
dec
jne
add
fwait
loopne
dec
sbb
xchg
orl
jge
sbb
scas
popa
push
xchg
imul
cli
aam
fcompl
xchg
xchg
adc
stc
cmp
fmuls
fcompl
stc
push
push
or
lret
sti
movsl
int3
adc
xchg
push
hlt
or
push
shrl
shlb
mov
in
fistpll
js
data16
mov
mov
xchg
add
mov
je
pop
dec
push
fisubl
push
ret
aaa
mov
imul
pop
dec
insl
jp
add
mov
stos
sub
decl
movl
sub
mov
ja
fsubl
xor
or
popa
or
stos
xor
xchg
mov
test
out
incl
or
out
dec
jbe
outsb
add
mov
int
scas
mov
ss
test
dec
sbbl
and
lret
pop
cmpsb
enter
or
aam
aas
add
pop
iret
and
mov
cmp
mov
mov
push
dec
stc
ds
mov
out
or
sbb
mov
or
call
lahf
jnp
inc
shrl
lods
sbb
sub
push
push
nop
sbb
pop
jmp
push
dec
or
lds
addr16
add
adc
push
lahf
lods
cmpsl
xchg
test
stc
les
pop
les
fcoms
movsb
fwait
mov
sbb
jle
out
subl
jb
pop
mov
pop
push
fdivs
push
popf
jae
mov
inc
add
addb
dec
adc
fwait
enter
sub
cmpsl
mov
sbb
data16
jge
mov
test
mov
push
sub
repz
xchg
and
pop
cs
mov
push
popf
adc
mov
pop
mov
repz
jbe
aaa
daa
fdivs
loope
bound
mulb
ljmp
and
adc
xor
testb
adc
cmp
lds
test
push
pop
std
mov
add
xchg
shrl
sub
cmpsb
inc
std
leave
xor
mul
cmp
lods
aam
inc
push
cmpsl
sahf
test
in
sub
jmp
or
sbb
jle
popa
mov
push
and
stos
nop
or
mov
xchg
daa
addr16
lea
mov
sahf
mov
cmpsb
mov
mov
xchg
xchg
mov
mov
cmp
aad
sub
sbb
dec
dec
mov
jle
lds
std
jecxz
js
test
pop
loop
cmp
insl
inc
push
testb
mov
mov
sub
xorl
les
xchg
adc
mov
into
add
icebp
dec
jge
inc
fwait
sbb
xchg
add
sbb
push
mov
das
adc
push
push
mov
popf
pop
cmp
in
dec
enter
inc
pop
sub
inc
aaa
dec
cltd
lret
dec
loop
jge
push
sub
inc
fnstenv
push
cli
outsb
sub
jecxz
pop
pop
in
aam
imul
shrb
push
ret
cmp
or
mov
xor
inc
or
dec
daa
dec
std
cltd
xchg
out
cli
mov
out
mov
add
xchg
cmp
lret
test
add
push
rclb
jl
arpl
mov
dec
repnz
mov
mov
mov
mov
add
mov
mov
dec
loope
mov
sti
popa
pop
xchg
push
data16
jmp
lds
das
lea
out
not
cltd
sub
dec
mov
jae
dec
sbb
outsl
inc
xchg
push
out
xor
sub
scas
jmp
adc
xchg
scas
push
mov
rolb
pop
sbb
pusha
mov
lcall
cmp
inc
std
inc
jecxz
inc
pop
ljmp
gs
and
lods
dec
lahf
mov
ja
add
cmovo
je
ja
mov
sub
mov
loopne
push
jb
imul
ja
sbb
and
jns
leave
jecxz
incl
imul
pop
sti
mov
adc
mov
push
cmpl
notl
das
push
imulb
sbb
fwait
xor
cmpl
xchg
ja
movsb
std
scas
xor
or
xchg
pop
mov
or
and
test
or
test
mov
push
outsb
cmc
movsb
rcl
or
xchg
xor
jp
push
add
mov
shlb
mov
mov
loope
dec
sub
mov
pop
push
in
rclb
mov
cwtl
cltd
mov
fsubs
cmp
cmp
push
aas
ds
ja
xchg
mov
and
test
les
or
cmp
aas
dec
stos
mov
cmp
sahf
inc
cltd
mov
and
and
jp
add
repz
jb
inc
sahf
imul
shll
push
dec
xor
call
adc
adc
push
rol
inc
push
ja
icebp
mov
stos
repz
cltd
pop
outsb
enter
ret
cwtl
ficoml
es
repz
pop
jno
imul
jns
subb
flds
xor
jns
lods
inc
inc
xchg
in
aaa
je
test
mov
jle
jp
stc
inc
sahf
ds
xchg
arpl
pop
movsb
pop
push
mov
andl
mov
mov
data16
and
out
xor
test
ret
roll
jb
insb
jecxz
or
sbb
cmp
into
pop
addl
out
ret
add
mov
cmp
jle
adc
lds
scas
jb
repnz
scas
or
pusha
sbb
add
movlps
mov
icebp
faddl
out
sbb
mov
rcrl
jae
adc
rcll
mov
nop
cld
repnz
loope
inc
mov
stc
les
repz
and
fwait
stos
das
inc
stc
mov
xor
xchg
test
ret
nop
in
pop
sti
fsubs
ds
js
inc
mov
fiaddl
fidivrs
lods
movsb
fcmovu
insl
or
xorl
add
push
or
cmp
les
xchg
dec
pushf
fwait
jnp
iret
ds
fildl
sbb
fwait
cli
ret
imul
jl
adc
add
sub
cmp
mov
mov
dec
dec
mov
inc
in
rorw
int3
inc
cmp
xor
scas
push
push
mov
inc
and
sub
jmp
cmpsl
scas
in
jo
je
adc
xor
add
daa
ret
inc
test
std
pop
in
mov
jl
mov
fstps
loope
loop
pop
in
clc
fsubrp
adc
or
pop
mov
mov
cld
pop
dec
xchg
push
lock
xchg
pop
in
mov
dec
pop
gs
cmp
cmc
mov
pop
loope
gs
mov
repz
imul
lret
inc
or
adc
lock
js
pop
insl
xor
mov
inc
fisubs
sub
mov
pop
testb
imul
lods
add
sub
out
mov
jl
jge
pop
sbb
pop
cmp
out
pop
push
add
push
in
push
pop
mov
enter
push
jae
mov
into
mov
leave
inc
sub
sarl
push
xor
and
mov
mov
xchg
js
lds
cmpb
and
or
in
xchg
inc
pop
mov
cs
mov
filds
push
jne
movsb
flds
pop
add
sbb
lods
fdivr
cs
or
repnz
pushf
mov
mov
out
xchg
xchg
cmp
repnz
and
sbb
mov
mov
js
imul
pop
adc
pop
and
jns
jge
push
rcr
cmp
lret
popf
test
xchg
inc
mov
mov
ret
jmp
and
addb
xchg
cmp
sbb
mov
dec
ljmp
ds
cmp
dec
mov
dec
and
push
ds
js
mov
mov
stc
lret
add
jo
js
and
pop
lahf
fs
xor
insb
lds
jle
and
das
add
dec
push
popf
add
cli
pop
sbb
mov
and
hlt
mov
mov
clc
inc
test
out
pushf
popa
inc
imul
dec
insb
call
fs
dec
inc
mov
mov
sahf
jge
out
mov
fadds
and
data16
and
pop
imul
pop
lods
add
add
mov
sbb
aad
push
int3
add
fwait
inc
stc
push
es
add
imul
gs
cli
dec
sarb
mov
out
jne
sbb
sahf
pushf
push
icebp
sbb
xchg
mov
outsl
adc
lret
inc
sub
jecxz
insb
push
dec
mov
sub
jae
mov
aaa
popf
stc
icebp
sbb
pusha
and
jbe
mov
or
movl
pop
pop
and
adc
push
cmp
mov
or
out
pop
xor
adc
xchg
ds
dec
int
sbb
divl
ret
jbe
outsl
sbb
cmp
imul
push
mov
test
inc
cwtl
loopne
xor
ss
ja
pop
and
lods
repz
lcall
or
mov
jae
jp
cld
arpl
les
adc
subb
pop
sub
repz
insb
mov
mov
xorb
pop
arpl
rorl
jg
sub
xlat
and
cmpsb
in
xor
rol
and
jp
icebp
outsl
mov
mov
leave
je
in
mov
mov
jbe
std
or
pop
ret
adc
sbb
in
sbb
inc
in
insl
rcrb
mov
shlb
scas
into
mov
or
xchg
xor
adc
out
leave
push
fistpl
adc
sti
pop
or
icebp
jno
xchg
mov
lea
daa
dec
or
xor
ret
mov
or
pop
mov
in
dec
mov
xchg
and
out
mov
pop
xchg
and
xchg
xchg
out
xchg
rclb
pop
xor
cli
les
sbb
int3
hlt
out
insl
aaa
push
cmp
add
inc
cmp
xlat
jmp
call
mov
push
and
or
roll
in
das
adc
and
or
jno
and
lret
adc
mov
pop
data16
cmp
mov
fs
mov
xor
or
mov
int
es
mov
xchg
jno
push
sub
loope
push
adc
mov
bound
fcomi
inc
cmp
fimuls
xor
cmp
sarl
inc
add
arpl
adc
sub
insl
mov
cwtl
or
cmp
add
mov
clc
or
xor
and
mov
aad
sbb
dec
jno
adc
mov
sbb
lret
mov
jae
mov
lods
push
out
jmp
inc
cmp
fistps
sub
test
gs
test
sub
sarl
pop
adc
jle
push
mov
sti
xchg
std
out
xchg
xorl
push
or
pop
add
adc
fs
lods
mov
rol
jb
sub
mov
pop
mov
or
cmpsl
pop
int3
cmp
jnp
mov
mov
push
test
cmp
jp
xchg
lahf
push
xor
movsb
divl
add
jg
data16
mov
fisubs
cmpsb
loope
loope
bsf
lods
ret
loopne
adc
jp
sbb
jb
adc
adc
repz
inc
in
movsb
sbb
mov
test
add
jo
push
fs
int3
sub
ljmp
fldl
fs
jno
mov
stos
inc
push
addr16
jmp
add
arpl
fnstcw
inc
xor
xchg
repz
stos
adc
lret
imull
mov
add
mov
push
out
movsb
lds
pop
out
in
and
lcall
scas
repz
scas
cli
push
pop
sub
mov
lods
sbb
test
jno
cmp
pusha
sahf
xlat
and
add
add
jno
into
arpl
ret
or
push
xor
push
dec
inc
mov
outsb
dec
jl
jl
jb
jl
call
mov
pop
xorb
mov
imulb
lahf
std
pop
stos
jge
das
dec
popa
jne
add
les
sub
mov
orl
test
cltd
pop
inc
jo
push
cld
inc
mov
lock
fildl
xlat
xor
filds
jge
add
mov
fdivl
push
mov
gs
gs
hlt
jg
xchg
movsb
lds
iret
jmp
or
das
stos
inc
lods
int3
lea
jbe
fnstcw
add
adc
mov
or
add
into
test
xlat
int
add
je
lods
stos
aaa
call
sti
jle
mov
xchg
xchg
push
in
fcomip
push
jl
sub
or
ja
xor
retw
jp
jge
es
mov
lock
pop
adc
leave
lcall
mov
add
pop
or
addb
sbb
xor
data16
pop
repz
fmuls
xchg
popa
sub
push
cmpl
xlat
je
lcall
dec
xchg
lds
mov
pop
fwait
ja
cli
sbb
outsl
pop
pusha
int3
cmpb
in
daa
push
pusha
inc
inc
cmp
adc
pop
add
sar
cmp
xlat
xor
dec
movsl
sbb
stc
mov
daa
adcl
fnsave
ljmp
test
bnd
stos
add
aam
lcall
test
or
clc
insl
mov
adc
stos
lcall
in
mov
cmp
andl
aas
es
push
cs
out
stos
mov
ja
fldt
fnstsw
xor
xchg
fdivs
pushf
push
push
andl
sub
pop
cmp
and
ljmp
sub
pop
and
sub
mov
outsb
inc
mov
inc
adc
pop
outsl
repz
cmp
push
xor
cmc
mov
ficompl
cld
jb
das
jbe
pop
rcr
mov
arpl
lds
into
mov
xchg
dec
xchg
jg
bnd
fcom
push
adc
orl
jge
sub
adc
popf
pop
push
lret
pop
test
mov
ds
out
incb
test
movsl
roll
test
dec
int
fxch
sahf
sahf
in
cltd
lret
inc
cltd
xchg
rolb
cli
mov
xchg
shll
mov
xor
jge
sbb
jl
stos
mov
sbb
pop
fistps
in
movsl
xchg
out
xchg
movsl
shrb
cmp
dec
aad
mov
cltd
rcll
rorb
push
popa
insl
push
enter
mov
jmp
int3
lods
xor
mov
sub
clc
cli
pop
mov
call
mov
jmp
push
pop
fisubl
in
inc
inc
push
insb
jbe
mov
leave
leave
cmp
or
adc
pop
mov
jbe
or
add
imul
pop
mov
aas
or
push
push
mov
ret
mov
mov
cltd
sub
rorb
add
mov
and
mov
jbe
lods
ss
inc
lock
sbb
ja
add
mov
lods
adc
pop
push
cmpsb
sub
and
rcrl
sbb
sbb
xchg
fisubs
add
arpl
js
das
lds
outsl
sbb
jle
xchg
mov
sub
push
jl
sub
aaa
mov
jmp
pop
in
and
xor
cwtl
jnp
cmp
xchg
pop
fs
cwtl
dec
pusha
xchg
xchg
mov
dec
testl
ss
inc
rclb
xchg
decl
mov
aas
ficoml
std
dec
roll
jg
inc
inc
cmpsl
jle
out
aas
and
call
xor
dec
adc
ret
pop
aam
and
out
sub
insl
mov
xchg
and
lahf
in
es
mov
or
push
or
andb
or
loopne
push
xchg
sub
xor
push
add
call
clc
stc
pop
cmpsb
mov
cltd
clc
pop
jmp
orb
push
jbe
and
xchg
inc
out
mov
mov
mov
mov
or
mov
into
js
popa
xchg
dec
jg
push
call
add
imul
xchg
mov
xchg
mov
iret
mov
fcoml
and
pop
pop
rorb
cli
lods
dec
fmull
leave
lds
imul
jb
pushf
mov
jl
in
push
es
aad
insl
push
ret
or
icebp
mov
dec
mov
fmull
add
sbbb
movl
fdivrl
jecxz
pop
pop
scas
adcb
adc
dec
mov
out
outsl
divb
mov
sbbl
push
leave
out
sub
dec
aaa
xchg
jg
sub
jge
mov
cmpsb
cmp
adc
sub
inc
sti
lret
mov
mov
jge
or
mov
jo
loopne
adc
out
arpl
jmp
mov
inc
outsl
mov
inc
sub
cld
fsubrl
sbb
addr16
dec
clc
shr
add
add
loop
mov
andb
push
leave
ja
adc
stos
or
mul
sub
test
in
add
mov
cld
or
pushf
xor
fcomps
dec
clc
push
push
pop
mov
pop
add
clc
repnz
push
pop
cmp
add
ja
jecxz
sbb
inc
and
lret
addr16
inc
test
test
repz
stos
inc
push
cmpsb
fdivl
xor
test
or
emms
jge
jmp
out
sbb
outsl
push
outsb
and
jne
je
cmpsl
sbb
lods
in
cld
sub
sbb
out
lea
or
cmpsl
in
jmp
push
movsb
clc
sahf
fwait
jb
imul
push
push
xchg
and
mov
mov
ror
mov
pop
pop
rcll
mov
dec
sub
pushf
mov
adc
je
sub
xlat
sub
sti
mov
sbb
inc
cmp
push
pop
add
add
dec
and
aas
loope
imul
pop
pop
mov
and
js
xchg
int3
lret
mov
sti
mov
sbb
shlb
add
addr16
icebp
sub
mov
jle
push
dec
data16
sub
pop
add
and
adc
or
notl
es
push
pop
adcb
mov
mov
sbb
mov
loop
mov
enter
fistpl
cltd
mov
addr16
mov
pop
int3
inc
das
and
bound
ss
mov
inc
cmp
ja
push
out
aaa
mov
faddl
add
sbb
pusha
xor
fwait
mov
aaa
dec
in
add
xchg
rclb
sub
xor
push
leave
jmp
movsl
negb
sub
aam
out
xor
mov
push
mov
es
ljmp
lods
ss
or
push
lock
xor
xor
and
sub
fwait
mov
fadd
es
cmpb
push
xchg
and
rorb
jo
fistps
xlat
nop
jno
or
xchg
jns
push
pop
or
cmp
test
ror
push
repz
sub
sub
sbb
js
add
xor
sub
add
movsb
or
shll
mulb
imul
out
mov
inc
out
push
cmp
cmpsb
xchg
aaa
pop
test
add
out
cmp
pop
pop
sbb
and
rcll
adc
jle
pop
fs
pop
push
sub
cmp
in
ljmp
mov
repz
dec
jmp
cmp
mov
inc
lea
jg
xor
xor
jg
and
push
sarb
cmpl
cltd
adc
jno
sub
les
xchg
fwait
shl
mov
xor
dec
sbb
loopne
lods
jbe
xor
out
sti
xor
stos
sub
pop
sub
cmc
adc
adc
test
pop
sbb
mov
push
adc
or
movsb
iret
push
hlt
or
or
mov
mov
fcomp
outsb
jg,pn
scas
hlt
daa
push
fisubl
fstpt
mov
xchg
in
mov
mov
cwtl
mov
fsubs
movsl
jmp
adc
jle
test
jo
or
and
or
sbb
and
mov
push
fistps
jg
scas
xchg
xchg
fcmovbe
hlt
stos
out
enter
mov
fsts
into
mov
sub
add
das
push
stos
jmp
inc
xchg
xchg
addb
mov
add
loop
ljmp
mov
sub
insb
mov
or
mov
pop
hlt
xchg
or
insb
in
lea
xchg
sub
mov
test
sbb
fistpll
xchg
xor
sub
fisttpll
outsl
push
add
popa
push
js
jno
jmp
leave
jmp
insl
jge
sbb
mov
xorb
sub
jle
pop
call
loop
xor
xor
mov
subl
pop
mov
fisubl
jae
lret
test
cwtl
jle
out
ret
adc
push
fsubrs
inc
dec
test
cli
or
xchg
insb
cltd
mov
dec
xchg
inc
stos
lahf
and
lret
int3
sbb
push
shll
repz
lret
loopne
mov
lea
jno
mov
mov
xchg
adc
enter
orl
push
mov
nop
or
pusha
es
in
shrl
and
mov
test
pop
mov
test
lds
fwait
mov
stc
std
and
sub
jl
xor
clc
pop
pop
divb
nop
ret
sbb
mov
repz
inc
movb
popa
jns
in
je
sub
lcall
jno
mov
xor
notb
aam
push
pushf
add
sbb
iret
movsb
lret
lods
jg
cmp
inc
pop
js
inc
sub
aaa
push
stos
arpl
andb
sbb
ret
stos
pop
jae
sub
mov
push
mov
out
pop
in
cmp
adc
es
lcall
xchg
cmp
cli
sub
push
ss
out
fisttpll
mov
xor
and
inc
leave
cmc
sbbl
dec
push
mov
imull
push
je
pop
daa
ljmp
bswap
cs
aas
fdivrs
cmpsb
stc
shlb
insb
scas
adc
cmp
or
inc
push
negl
mov
cmp
cmpb
inc
call
add
test
inc
out
ja
jne
push
decl
cmc
add
sbb
sbb
cmc
add
and
mov
add
pop
into
pop
jne
fsubrl
jecxz
pop
bound
ret
enter
call
sbb
mov
icebp
insb
cwtl
movsb
mov
xchg
and
sbb
out
test
lds
repnz
xchg
popa
or
lret
or
add
mov
xlat
add
cmpsb
mov
std
xlat
faddl
daa
xchg
sub
pushf
insb
pop
jbe
inc
test
pop
jp
fcoms
imul
push
adc
stos
pop
or
in
test
push
mov
cwtl
ljmp
mov
xchg
packuswb
fdivr
or
inc
pop
sub
mov
popf
ficompl
xor
dec
push
mov
rcll
mov
cmp
or
lcall
inc
and
loop
jo
dec
add
cs
xor
cli
inc
cmpsl
jne
stc
and
jle
rclb
into
mov
ljmp
ljmp
fistl
rcrb
inc
xchg
pop
mov
imul
push
cmp
shl
jg
inc
pop
inc
or
mov
aad
cmpsl
shll
cmp
sahf
in
cmp
ret
arpl
inc
movsb
pusha
rol
mov
movsb
pop
sbb
das
xchg
ja
adc
dec
fs
pop
shlb
ficomps
inc
or
fisubs
stos
sub
je
pop
in
push
loop
pop
sbb
pop
icebp
icebp
jns
shrb
xchg
rclb
push
pop
dec
inc
xchg
rclb
pop
jle
mov
mov
xor
std
insl
rcr
inc
les
fists
enter
int
lock
add
push
xorl
cmp
or
cmpl
inc
mov
sbb
inc
nop
xchg
sub
jbe
je
jne
sub
dec
shrb
push
xor
je
les
push
add
movsb
test
push
clc
lea
outsb
mov
dec
or
mov
insb
xor
xor
sub
cli
ja
pop
leave
stos
mov
xor
sbb
xlat
jbe
arpl
gs
mov
fs
ret
loop
jnp
xchg
sub
xchg
and
pop
adc
mov
or
arpl
push
fs
and
filds
stc
jno
jmp
cwtl
fldenv
jb
nop
es
jecxz
add
and
jmp
adc
jmp
cmpl
das
loop
out
sub
cltd
sbb
pop
loop
pushf
xchg
jno
pushf
jbe
inc
divps
pop
insb
mov
nop
mov
xchg
std
or
ja
outsb
adc
jo
inc
cli
dec
andl
mov
jle
mov
jmp
xchg
xor
push
cmc
ds
inc
adc
xor
shl
sahf
inc
dec
lods
and
shr
fdivl
lds
lds
stc
push
test
xchg
fstl
sbb
sub
in
mov
arpl
jg
add
cmp
mov
orl
pop
sahf
dec
popf
and
inc
stc
dec
subb
popf
sub
sbb
cmc
sub
mov
jmp
in
jne
imul
lcall
cld
sub
xor
adc
inc
icebp
pusha
inc
inc
arpl
push
xchg
push
jne
push
jae
test
mov
push
loope
or
into
xorb
jns
pop
int3
mov
lds
clc
nop
idivl
aam
lds
pop
and
pushf
push
pushf
out
fcomp
in
pusha
in
xchg
cli
pop
rcll
push
jno
push
imul
push
mov
mov
inc
or
push
das
pop
popa
dec
outsb
xchg
xor
lods
aam
cmp
pop
push
ror
stc
sub
and
push
imul
adc
xor
insl
push
popa
inc
add
nop
add
xchg
and
adc
cmp
lods
ljmp
cmp
pushw
sbb
in
xchg
add
inc
fcmovb
xlat
insb
loope
cwtl
mov
xor
cwtl
cmpsb
add
testb
mov
insb
push
dec
iret
push
clc
jb
mov
add
scas
and
pop
jecxz
les
out
xor
xchg
xlat
cmpb
adc
outsb
in
pop
push
jle
aas
mov
out
rorb
xor
jp
neg
mov
push
xchg
nop
ss
data16
into
mov
pop
ljmp
xor
lea
mov
fcomps
mov
push
mov
fildll
mov
sbb
sbb
enter
jae
int3
pop
fistps
rclb
sub
test
and
fnstenv
hlt
fisubrl
fcomps
dec
jo
and
and
add
cltd
or
mov
sbb
in
enter
loop
jb
sti
fldcw
enter
dec
icebp
xor
gs
fdivrl
or
shrl
mov
dec
lds
pop
jns
push
adc
fsubrl
inc
arpl
sbb
pop
sub
xchg
push
dec
cltd
orb
cmc
dec
fxch
mov
xlat
and
dec
dec
lea
loope
popf
cwtd
in
insl
dec
mov
inc
jnp
fdivrs
das
xchg
and
and
and
pop
dec
ds
nop
mov
pop
and
pop
adc
lret
mov
cmpsl
xor
pusha
fisttps
or
mov
fdivrs
xor
jmp
enter
test
rclb
nop
xor
mov
lret
es
aad
xorb
push
or
jmp
out
imul
out
inc
jbe
in
push
cmp
and
inc
iret
aad
aas
or
push
stc
int
add
mov
imul
int
jno
cmpsl
aas
stos
aaa
mov
or
js
and
shrl
cmovle
jbe
cmp
lods
psubw
sahf
pushf
sbb
inc
or
xchg
jl
jg
push
lds
shr
and
sub
les
fwait
pop
cmp
lahf
fisttps
xchg
in
mov
jne
fwait
xor
mov
lods
pop
sbb
cmp
cmpb
lock
mov
jl
inc
testl
aaa
mov
cld
adcl
dec
xchg
sub
std
adc
inc
mov
fisubrl
push
mov
fs
and
pop
fwait
jno
lds
popf
mov
cltd
xchg
lods
xchg
out
lret
lock
jl
lcall
imul
rcrb
jp
ret
cmp
int
enter
test
fimuls
xchg
test
andb
sbb
xchg
test
subb
enter
lret
out
inc
mov
pusha
loopne
mov
das
lcall
dec
or
pop
xchg
push
inc
adc
lock
add
jmp
mov
scas
xorl
lock
xor
dec
adc
mov
aas
in
test
rolb
add
jne
ds
xchg
cmc
cmpb
mov
adc
and
pop
mov
mov
push
and
dec
xor
and
and
push
inc
sahf
push
repz
sub
adc
cs
cmp
add
stos
xor
aam
xchg
mov
push
cmp
pop
cmp
jo
and
cmpsl
mov
js
fldcw
dec
mov
rclb
xchg
xchg
fs
stos
cmp
notb
daa
dec
leave
push
imul
ffreep
leave
icebp
mov
lds
or
dec
xchg
jg
pop
lea
in
cmp
inc
idivl
aaa
push
js
push
pushf
dec
sbb
out
add
adc
shr
lods
or
sbb
push
lret
cltd
iret
shll
jl
mov
test
jl
mov
jge
outsb
inc
mov
test
out
mov
aad
addl
add
dec
cld
rol
pop
cmp
mov
xchg
lods
push
gs
fisubl
rorb
in
cmpsl
hlt
mov
cltd
stc
push
lds
jno,pt
cs
push
daa
xor
dec
sahf
loop
and
pop
ljmp
cmp
int3
mov
or
sub
pop
std
push
sti
xchg
jns
call
sub
addl
scas
push
adc
and
jnp
fldenv
pop
sbb
mov
mov
inc
cmpsb
loop
pop
dec
inc
jecxz
mov
xchg
xchg
paddq
or
xlat
push
sub
mov
or
adcl
int3
enter
mov
faddl
mov
lret
xchg
xchg
outsl
imul
arpl
mov
jo
mov
xor
stc
into
xor
ja
push
and
inc
repnz
fldcw
bound
mov
mov
aam
out
pop
test
lods
and
sbb
push
pop
or
pop
pop
jmp
stos
mov
fdivrs
push
stos
out
std
push
lret
lret
sbb
sub
stos
mov
imul
aad
test
push
shrl
push
sub
jmp
mov
sti
ds
jp
and
fs
sub
xchg
xchg
mov
mov
lods
das
divl
dec
addr16
rcll
call
icebp
cmp
inc
add
imul
xchg
add
inc
adc
pop
sub
lret
lods
insb
or
gs
popf
mov
inc
sbbl
scas
mov
ss
xchg
cmp
sbb
enter
mov
test
mov
int3
inc
mov
pop
jbe
mov
pop
dec
je
xchg
lods
add
mov
out
es
jecxz
mov
xchg
pop
sbb
cmp
push
int3
sub
divb
arpl
in
pushf
mov
sahf
bound
outsl
cmp
andb
dec
out
inc
scas
in
or
xlat
dec
fisubrl
rcr
adc
loopew
nop
mov
xchg
ret
add
xlat
movsl
sbb
adc
popa
hlt
lods
std
sub
cmp
repz
andb
adc
mov
insl
ret
mov
jl
xchg
inc
ja
jle
dec
bound
mov
mov
addr16
push
jbe
xorb
imul
insl
lret
shlb
mov
xor
xchg
outsl
inc
dec
mov
xchg
movsb
lods
xchg
enter
daa
outsl
xchg
bnd
mov
jmp
aas
stos
mov
dec
mov
loop
mov
lods
in
repz
inc
mov
cld
scas
nop
stc
in
cli
dec
pop
rclb
popa
ljmp
dec
inc
dec
cmpsl
push
pop
mov
push
cld
mov
filds
pusha
ja
icebp
inc
add
inc
jmp
or
in
enter
push
xchg
les
daa
push
cmp
sbb
xchg
out
cli
lahf
inc
aaa
xor
loopne
lcall
cltd
xor
cli
pop
sub
push
test
xor
sbb
pop
xchg
jo
mov
jg
xchg
icebp
inc
das
daa
insb
push
aaa
push
cmp
xlat
popf
sbb
insb
outsl
pop
cmp
add
push
sbb
lock
mov
add
aas
or
stc
mov
mov
icebp
xchg
inc
nop
test
rorw
mov
mov
ss
sti
jl
hlt
mov
test
stc
or
pop
pop
sub
daa
push
mov
loope
dec
or
into
sub
inc
push
cmp
pop
aas
pop
addb
mov
adc
dec
add
jecxz
cmpsl
xchg
fsubrp
inc
push
cmpb
inc
lea
xlat
xor
jb
rclb
lods
jno
pop
dec
out
mov
mov
movntq
xchg
pop
mov
loopne
jecxz
mov
nop
rcrl
xor
sub
cmp
mov
cld
icebp
mov
lods
lods
push
and
or
in
das
in
cmp
add
js
call
fstl
test
rcrb
dec
inc
push
daa
inc
ds
inc
adc
mov
shrl
test
and
pop
xchg
add
pop
lcall
loop
xchg
adc
or
call
loopne
adc
sub
add
imul
push
sbb
insl
and
dec
dec
pop
pop
mov
enter
enter
or
pop
jecxz
sbb
jae
ret
sub
mov
sub
scas
pop
cmp
pop
aad
clc
cmpsl
repnz
sbb
mov
lds
fimuls
lret
adc
jl
jnp
outsb
mov
push
jae
mov
xor
dec
test
xor
test
sahf
loopne
push
mov
inc
sub
mov
outsl
mov
xchg
pop
je
scas
lret
imul
out
dec
cltd
sbb
cmc
sub
lret
and
das
xchg
cmc
outsb
add
pushf
test
fstl
xor
icebp
sub
jecxz
stos
outsl
sti
inc
ss
cld
movsl
push
sarb
cmp
scas
cmp
mov
fs
imul
and
sarl
imul
add
in
sub
pop
jnp
dec
mov
mov
add
xchg
and
scas
das
xchg
scas
or
push
fimuls
leave
scas
imul
jo
mov
pop
insb
adc
enter
aas
mov
jns
jecxz
cmpsl
jge
xor
sbb
mov
je
push
sti
pop
mov
fs
pop
add
mov
insb
inc
scas
cmp
das
outsb
mov
hlt
mov
jnp
xor
movsb
mov
xchg
cmp
xchg
data16
sbb
in
pop
ds
rol
jg
sahf
lods
inc
push
stos
das
testb
cld
sbb
pop
pop
mov
pop
jmp
in
data16
push
sahf
icebp
cmp
inc
repnz
cmp
xchg
cs
mov
jp
sub
mov
test
aad
movsb
js
jmp
inc
gs
xchg
les
push
xchg
bound
push
xchg
jae
ja
push
xchg
inc
xor
jle
pop
adc
sbb
insb
pop
inc
in
jmp
mov
cltd
nop
popf
mov
add
xchg
cmp
rol
outsb
scas
sub
aad
or
scas
push
xchg
jbe
clc
sub
loop
mov
fs
loop
scas
cmp
lods
jno
cwtl
sbb
pop
fsubl
popw
cmp
pop
leave
or
stos
into
pop
xchg
xor
push
fldl
cmpsb
push
lods
arpl
sti
mov
mov
mov
xchg
and
push
mov
pusha
rcr
mov
xor
rcll
jge
dec
je
xor
mov
mov
mov
inc
lods
into
outsl
sti
stos
sub
fdivl
movsl
sub
data16
xchg
sbb
jae
aad
ja
push
jp
xor
js
inc
out
addl
jno
adc
mov
cmpsw
les
adc
and
aad
pop
lock
inc
xor
cmpsl
lods
push
stos
xor
je
shl
push
rcrb
sbb
clc
xchg
or
sti
jge
leave
mov
cmp
dec
std
loop
notl
fdivs
xchg
mov
and
or
inc
push
cltd
adc
dec
sbb
pop
subb
and
push
cmp
in
mov
cmp
pop
push
mov
scas
bnd
push
or
lcall
xlat
add
pop
cmpsb
insl
stos
popa
movb
ljmp
icebp
adc
insl
dec
jg
mov
cmp
pop
jmp
ja
out
mov
xor
cmpb
push
ss
andps
scas
push
mov
jnp
mov
ror
xchg
mov
inc
cld
lret
and
dec
aam
xchg
inc
cmp
mov
hlt
or
pop
add
sbb
and
cmpsl
adc
loop
lea
aas
mov
scas
xor
cmp
ljmp
bswap
or
mov
sbb
xor
mov
sar
mov
adc
jl
xor
push
stos
push
pop
ret
out
xchg
int3
dec
dec
add
add
fwait
std
adc
rorl
add
pop
jb,pt
insl
xchg
stc
push
scas
xchg
cltd
jecxz
icebp
lods
xchg
lea
into
test
pop
mov
mov
fwait
pop
sahf
pop
out
outsl
mov
jnp
jno
push
imul
popl
jae
sub
lret
push
inc
daa
cmp
daa
out
mov
iret
jb
jbe
push
adc
cli
inc
fldenv
loope
out
pop
sub
aad
jns
test
es
mov
jne
mov
loope
inc
sarl
in
dec
int3
mov
mov
insl
mov
imul
inc
dec
xorl
scas
mov
dec
or
sbb
sub
dec
loopne
ret
jp
sbb
fidivrs
fucomp
xchg
lods
mov
cmp
fdivl
push
pop
repz
loopne
cmp
cltd
stos
sbb
jmp
ret
mov
cmc
xorb
mov
leave
push
shlb
jno
xchg
dec
js
cmp
pop
dec
sbb
imul
sti
std
jo
inc
int3
mov
sub
bound
cmp
adc
inc
pushf
add
rorl
lahf
cmp
push
loopne
or
lock
movsl
roll
push
ljmp
outsl
mov
stos
clc
inc
pop
decl
mov
xchg
cmp
mov
jno
xchg
je
add
stos
jbe
dec
push
cmc
fsubrl
das
mov
xor
sbb
adc
ss
cmp
jp
jg
and
cli
ds
and
pop
rorb
sbb
test
outsl
adc
call
add
mulb
xchg
in
push
dec
jle
mov
xchg
pusha
dec
das
outsl
fbstp
cli
out
adc
insb
xchg
dec
dec
lahf
sub
mov
fldenv
mov
dec
enter
adc
or
dec
jmp
inc
movsb
inc
das
xchg
divb
push
dec
nop
sub
fldt
test
adc
push
sub
aam
mov
aaa
ficompl
adc
and
loop
and
popf
ja
sub
leave
pop
das
and
jp
pop
xchg
repz
test
mov
xor
mov
pusha
dec
mov
es
jge
sbb
xchg
cmpsl
xor
jmp
int
add
int3
popf
arpl
lcall
nop
or
mov
dec
jae
jae
sbb
lret
ss
fisubl
in
mov
ds
ret
xchg
mov
push
sbb
outsl
lods
pop
nop
jmp
mov
repz
fisubrs
fwait
rcr
sbb
test
sbb
nop
testb
inc
enter
dec
js
addl
aam
stos
cmp
stos
or
rol
inc
out
pusha
gs
loop
and
sub
je
pusha
or
push
mov
mov
adc
cwtl
mov
or
xchg
adc
imul
leave
sahf
ds
lds
xchg
pop
iret
loop
out
adc
insl
in
adc
xor
aaa
mov
push
or
insb
adc
push
shl
stos
daa
ret
fs
das
and
jae
call
push
mov
lahf
lcall
pushf
lods
lock
cltd
movsl
pop
popa
jnp
adc
lock
shl
inc
notl
pop
js
movsb
jnp
cmpsb
sbb
test
cmp
out
std
mov
xor
dec
mov
lods
lret
add
mov
scas
out
movsl
inc
and
out
into
call
int3
sbbl
enter
dec
and
xchg
xor
aas
add
add
movsl
rolb
mov
adc
adc
daa
rcl
rcr
cmpsl
mov
or
orl
mov
lods
cmpsb
push
es
inc
dec
stc
xchg
std
ds
test
cli
enter
out
fldcw
loopne
std
cwtl
and
mov
xor
sbb
cmp
jb
in
mov
test
or
in
adc
xchg
js
push
push
mov
mov
insb
inc
scas
lcall
dec
cwtl
pop
pop
fldl
pop
cmpsb
test
xchg
xor
fcompl
dec
das
shrl
test
enter
push
loope
int3
shlb
mov
add
outsl
add
jle
pop
add
andl
nop
sub
jns
and
in
pop
sti
jnp
add
push
adc
sub
fwait
stos
mov
inc
popf
sahf
mov
mov
in
add
scas
dec
imul
push
pop
mov
dec
adc
aad
adc
adc
mov
xchg
mov
loope
mov
xlat
mov
cld
xchg
sbb
sahf
push
imul
jle
das
out
nop
or
jno
mov
sti
and
inc
leave
mov
scas
sti
out
adc
inc
mov
or
cmp
icebp
pop
and
stc
sbb
jno
daa
pop
push
xor
add
push
adc
add
push
dec
sti
iret
dec
xchg
and
jmp
mov
mov
xchg
cmpsb
adc
mov
lea
stos
sub
repz
or
mov
stc
xlat
push
sbb
add
mov
adc
dec
jge
mov
jecxz
fwait
and
pushf
mov
inc
jae
popf
in
repz
pop
icebp
into
inc
lret
mov
lods
shll
and
mov
nop
jge
adc
mov
out
push
ss
insl
aam
mov
pop
xchg
leave
push
dec
in
loope
cmp
out
sub
xor
cltd
cwtl
inc
pop
dec
cmp
cmp
loopne
jge
jns
mov
sarb
cld
cmp
adc
mov
sahf
cmp
es
mov
addl
inc
push
data16
sti
cmp
cwtl
iret
dec
cli
xor
push
mov
popa
pop
arpl
int
jbe
mov
mov
sahf
popa
ret
jns
dec
cli
and
push
jmp
mov
xchg
ja
xor
clc
test
or
outsb
xchg
repz
aam
jmp
and
xchg
mov
pop
adc
jo
arpl
inc
fs
lds
dec
addr16
fs
fcmovne
ret
stos
shlb
inc
sub
fildll
and
lret
js
test
fsub
das
xor
sub
jge
adc
sar
inc
jns
cs
gs
adc
int3
bnd
jl
bound
lds
jecxz
lods
push
cmp
mov
fistpl
xchg
jb
and
sub
inc
fdivs
inc
pop
into
adc
fisttpl
pop
xor
xor
mov
xchg
and
add
mov
push
xchg
repz
insl
scas
iret
push
je
cmovl
popa
in
ret
xor
out
inc
cmp
sbb
mov
pop
mov
push
out
jb
jo
xchg
xlat
ljmp
and
aam
es
sub
loope
ljmp
cmc
test
sub
mov
and
xorb
adc
mov
push
mov
adc
test
cli
and
xchg
sbb
mov
xor
enter
dec
sub
sti
cs
in
orl
scas
cmpsb
cmc
sub
mov
lret
mov
insl
stc
xor
mov
dec
out
adc
ret
or
andl
push
mov
dec
xchg
pop
mov
out
arpl
mov
addr16
mov
enter
dec
pop
mov
pop
pop
adc
addr16
je
call
loopne
insb
mov
addr16
pushf
fnstcw
sbbb
and
mov
dec
push
rorl
das
add
push
push
inc
rorl
repnz
xchg
mov
adc
pop
dec
pushf
pop
gs
aaa
dec
ret
push
xor
mov
jnp
ficomps
jbe
repnz
mov
xor
or
cmp
sarl
test
stc
add
push
mov
popf
adc
adc
clc
or
andb
test
mov
loopne
jle
mov
push
dec
lret
mov
cs
pop
dec
lahf
sbb
add
add
jne
dec
jae
xlat
mov
call
and
ficoms
jp
js
pop
mov
sub
add
pusha
lods
mov
mov
out
sub
decb
adc
arpl
fsubl
incb
pop
inc
pushf
inc
or
jmp
xor
or
adc
and
dec
jl,pn
and
jo
cmp
sbb
or
cmp
das
repz
cmp
jl
fsubrp
popa
pop
add
lret
mov
push
lods
dec
mov
nop
dec
push
sbb
das
push
push
adc
xor
fidivl
pop
and
aas
inc
inc
leave
and
cltd
push
cs
sbb
fmuls
add
sub
arpl
inc
mov
ja
out
inc
and
leave
jge
repz
cmp
adc
pop
insb
or
pop
mov
and
mov
mov
jne
idiv
mov
jne
ret
mov
add
xor
fdivr
adc
pop
lds
sbbl
xchg
pop
inc
pop
inc
bound
cmpsb
or
xchg
out
fwait
imul
out
ret
inc
xor
loopne
clc
and
add
insb
inc
int3
stc
inc
inc
push
roll
jge
jbe
and
jl
add
jle
dec
test
ret
and
jge
dec
mov
lds
ret
push
and
xchg
into
cmpsb
push
into
mov
push
cwtl
les
cld
jns
or
popf
mov
dec
xchg
xchg
repz
shrl
cs
cmpsl
inc
fucomp
pop
mov
mov
inc
fs
xorb
lds
out
ret
dec
out
xor
and
inc
xchg
xor
mov
add
addr16
stc
mov
cmp
mov
adc
jp
cmpsl
int3
loope
enter
js
mull
stos
das
cmp
dec
mov
xchg
test
lods
push
add
jno
xor
xchg
and
adc
mov
orb
ret
dec
or
ds
insb
popl
or
jge
out
jnp
xor
cmp
je
aas
jo
je
and
andl
push
mov
sub
mov
sub
std
pop
lods
push
aaa
adc
xchg
rclb
mov
inc
je,pn
and
je
lret
sub
ret
repz
bnd
hlt
mov
lock
jb
int
aad
sbb
sub
mov
lods
inc
ljmp
fiaddl
adc
ret
fidivs
rcl
adcb
xchg
call
xchg
push
dec
cmp
repz
ds
clc
sub
jmp
sub
int
sahf
dec
add
int
dec
rclb
push
std
mov
xchg
and
scas
pop
dec
stos
loope
test
and
push
addl
imul
adc
iret
stc
cmp
mov
add
pop
mov
mov
mov
jb
popf
call
adc
sub
std
xchg
flds
dec
xchg
inc
mov
mov
inc
sbb
int
xor
or
mov
or
jbe
and
or
add
mov
add
sub
dec
cmp
push
mov
lds
lds
push
inc
jp
inc
push
push
inc
inc
test
sub
pushf
int
fdivl
std
out
or
xor
mov
xchg
adc
pop
nop
or
mov
sub
arpl
arpl
jb
mov
mov
dec
cmpsb
dec
push
mov
push
enter
outsb
lahf
out
or
push
lods
loopne
mov
jbe
in
in
movsl
js
pop
cmp
add
xor
mov
std
lods
xchg
add
adc
imul
xchg
xor
jmp
lock
lea
jp
scas
dec
add
into
jns
xchg
les
add
cmp
inc
lds
jne
xlat
out
jmp
insb
xchg
subb
jp
subb
adc
cmp
sbb
add
push
fdivr
push
lcall
inc
jp
inc
mov
mov
add
jmp
add
rcrl
std
dec
jmp
push
jmp
xor
lahf
xchg
adc
iret
adc
sub
pop
clc
repnz
leave
out
nop
sub
test
loop
inc
fs
scas
jge
inc
sti
les
pushf
clc
jo
xor
movsb
fstp
orl
outsl
inc
imulb
pop
adc
and
xor
repz
adc
add
and
not
stos
dec
test
pop
pop
jb
and
lds
lret
into
rolb
xor
fmuls
insl
dec
dec
mov
sub
leave
jbe
adc
fwait
scas
adc
or
out
cmp
mov
rcpps
mov
decl
cmp
add
xchg
in
scas
andb
push
pop
mov
xlat
pusha
jbe
sbb
sbb
das
push
pop
mov
adc
or
jb
in
je
addr16
ret
and
cld
cli
jge
dec
and
hlt
mov
pop
js
aas
jnp
ret
mov
popf
ret
mov
ret
lea
repz
push
cwtl
adc
ja
sub
or
mov
subl
sbb
repz
xchg
imulb
cmp
mov
push
pop
dec
adc
adc
mov
inc
mov
call
shlb
push
mov
dec
mov
in
jge
sbb
fisttps
out
or
testb
movsb
dec
movsb
lods
movsl
push
inc
pop
lcall
fcmovne
leave
ret
in
cmp
mov
cmpb
fstps
mov
fsubl
sbb
push
mov
add
push
push
sbb
mov
jl
popa
mov
cs
les
into
jnp
mov
and
loope
add
mov
or
cmp
xchg
or
jle
mov
jae
push
jle
aaa
gs
sti
cmp
mov
leave
pop
enter
stos
xchg
xor
int
outsb
arpl
mov
addr16
add
call
fimuls
sahf
lahf
pop
mov
nop
mov
cmp
lret
add
ja
addr16
mov
sbb
or
pop
xor
and
sbb
lods
loope
mov
inc
lahf
call
inc
daa
fdivr
pop
out
inc
inc
push
nop
out
out
jbe
mov
and
jl
ss
cmpsl
push
push
and
inc
lea
repz
jae
in
addr16
mov
js
or
iret
pushf
mov
stc
jge
lods
jmp
ret
les
inc
and
mov
outsl
ja,pn
pop
aad
insl
fs
xchg
repnz
scas
sbb
sub
mov
test
or
ja
mov
jno
push
sub
repz
push
sti
xchg
mov
lods
dec
fdiv
mov
shl
ja
adc
cmp
xchg
xchg
imul
bswap
shrb
iret
cmp
push
sbb
adc
ror
inc
cmp
mov
sarl
fst
fisubrs
push
mov
xor
cmp
cmp
push
pusha
nop
xor
lret
sub
mov
sti
push
inc
mov
dec
add
mov
mov
movsl
jmp
jl
nop
aaa
push
iret
in
add
fsubs
mov
lea
mov
dec
jns,pt
mov
sbb
adc
dec
or
imul
int3
repz
or
or
movsb
lods
xor
lock
mov
push
push
dec
mov
mov
and
xchg
incb
jo
pop
sbb
daa
pop
test
enter
add
movd
leave
loope
lods
lds
pushf
push
mov
out
sbb
les
jb
aaa
lods
mov
decb
ljmp
jmp
xor
cmp
inc
and
stos
sub
inc
jnp
dec
and
test
out
int3
xchg
pop
test
std
dec
mov
in
and
ds
loope
pop
mov
push
int
mov
dec
fwait
popf
repz
jo
jmp
sbb
bound
dec
inc
daa
inc
in
sbb
mov
mov
mov
inc
in
sbb
fnstenv
jl
dec
inc
mov
imul
push
xchg
nop
pop
jno
movsl
xor
inc
repz
cmp
cmp
add
or
add
inc
lcall
ret
xor
jne
push
xchg
jne
dec
js
stos
adc
mov
in
test
cltd
ss
lret
in
in
jmp
imul
je
sub
mov
lret
pusha
sarb
add
xchg
push
ror
lsl
mov
jo
pop
leave
addb
or
arpl
ljmp
xorb
fstpt
mov
sbb
mov
or
mov
sbb
outsl
mov
push
imul
pop
mov
icebp
fbstp
pop
push
lds
adc
inc
in
push
lahf
in
sbb
sti
xor
popa
fwait
aaa
movsl
xor
inc
lds
inc
or
fimuls
xor
in
std
mov
iret
jo
cwtl
das
dec
mov
inc
mov
ljmp
sub
sbb
movsl
mov
jmp
rep
mov
pop
adc
insl
shrl
jo
fldcw
loopne
inc
add
xchg
mov
loope
pop
push
jo
mov
lcall
ljmp
repnz
xchg
test
into
dec
lods
adc
std
imul
scas
insl
push
leave
test
and
popl
sbb
xor
adc
push
inc
fldl2e
cltd
inc
sbbb
push
scas
push
adc
jmp
xchg
outsb
ljmp
std
fistpl
imul
fs
cmc
push
jge
inc
jle
adc
outsl
stos
pop
mov
out
push
adc
lds
jo
push
daa
hlt
dec
lret
dec
insb
bound
arpl
lods
outsb
mov
cmpsl
sbb
insb
aas
sahf
fcomp
dec
push
inc
cmp
add
adc
loopne
scas
mov
sbb
or
jmp
bound
out
test
out
into
loopne
popf
mov
mov
xchg
and
out
xchg
jl
gs
rorb
adcl
cmpsb
and
jecxz
sarl
mov
jge
imul
inc
aad
add
cmp
loopne
jnp
lahf
inc
mov
and
sahf
std
xchg
pop
cld
aad
adc
lock
add
xor
stos
movb
aas
shrb
pop
imul
sub
fldl
push
and
add
icebp
daa
das
psubsw
dec
adc
inc
add
push
iret
loope
sub
pop
sbb
push
popf
data16
int3
fs
xlat
clc
test
ret
xor
dec
std
adc
or
adc
pop
nop
fwait
pop
xchg
cld
imul
nop
jg
stos
sbb
js
shrl
push
xor
test
dec
sub
mov
sbbl
mov
add
mov
into
mov
xor
ret
in
int
fstpt
cmpb
mov
iret
jne
mov
add
pop
sub
scas
jo
pop
xor
stos
mov
movsb
push
xchg
fiaddl
fcomp
fsts
cmpsl
mov
push
push
sbb
add
outsb
push
jae
pushf
adc
or
inc
push
fdivl
jmp
in
sub
xchg
sub
push
je
testb
push
mov
imul
mov
out
or
test
mov
jno
pop
add
xchg
inc
into
cmp
mov
je
xor
cltd
jle
mov
mov
popf
mov
mov
lcall
mov
inc
mov
packsswb
fcmovnbe
lea
jae
and
push
and
mov
add
add
dec
xor
lods
pop
xorb
dec
call
sub
push
repz
movsw
xchg
fildll
jge
insb
mov
bnd
lods
aad
pop
add
inc
cwtl
into
movsb
jne
mov
push
sbb
out
sbb
lcall
into
jl
mov
test
mov
and
add
dec
test
lods
sub
mov
cmpsb
pop
mov
cltd
addr16
andb
fdivr
mov
ljmp
inc
not
xlat
dec
pop
mov
imul
push
js
push
inc
or
and
jo
sbb
or
scas
ror
inc
pop
pop
cs
pop
je
adc
insl
or
or
add
and
jbe
sarl
std
push
stc
dec
lock
cmp
imul
sahf
dec
cwtl
subb
rorb
mov
leave
call
fwait
leave
aas
xchg
adc
movsl
stos
or
out
mov
test
icebp
jno
lcall
add
mov
or
outsl
dec
and
lods
notb
or
jecxz
cmp
clc
sub
frndint
cmp
scas
ficompl
xor
flds
xor
cmp
sub
xchg
jae,pn
dec
data16
mov
out
mov
push
sbbb
mov
jecxz
call
inc
arpl
scas
sarl
pop
sub
daa
dec
cmc
clc
cmp
push
sbb
mov
ss
pop
xor
out
ficompl
jmp
dec
pop
cmp
dec
cmp
cltd
xor
fistpl
shlb
push
inc
dec
or
in
inc
aam
mov
lods
mov
sbb
in
jecxz
movsb
xchg
in
fbstp
fstps
or
mov
push
aas
mov
push
lock
loopne
sbb
xchg
movsb
pop
mov
add
mov
outsl
je
dec
das
adc
xchg
mov
jecxz
push
xor
js
nop
sub
mov
mov
int
jmp
adc
and
xchg
inc
or
or
push
movsl
imul
push
loopne
jb
pop
pop
mov
lods
lock
gs
fmulp
fstl
call
mov
subb
gs
nop
inc
or
push
xor
mov
mov
inc
xor
inc
push
adc
das
lret
xchg
mov
xchg
sub
push
loope
test
fistps
push
sub
cmp
dec
inc
aam
pop
cli
imul
mov
inc
mov
scas
aam
xor
movsb
pop
mov
aad
mov
jo
adc
cli
bound
pusha
out
enter
aam
aad
inc
popa
add
shl
out
lods
push
or
hlt
rorl
inc
lods
mov
pop
xchg
xchg
mov
leave
lods
push
lret
xchg
xchg
sarl
cmp
movsl
test
xor
jecxz
push
movsb
dec
int
in
outsl
sti
push
fisubl
xlat
lds
cmp
in
mov
pop
lock
ret
in
arpl
or
in
xchg
fwait
lods
ret
sbb
dec
pop
iret
sbb
imul
sbb
aas
xchg
push
xchg
insl
test
fwait
push
jae
nop
mov
fisttpll
fs
aad
adc
ljmp
pop
aam
jp
and
mov
xchg
xchg
pop
cmp
mov
fidivl
out
pop
xor
pop
sub
adcl
adc
pop
or
bound
mov
mov
cs
sarl
mov
pop
mov
mov
mov
insl
imul
mov
hlt
lret
add
sahf
incl
lock
xor
jge
dec
mov
cmpsl
dec
inc
ret
push
mov
out
fidivrs
iret
push
mov
mov
mov
mov
out
push
fwait
push
imul
pop
mov
jle
push
mov
nop
fisubrs
xor
test
out
shlb
je
jbe
jge
repz
insb
cmp
insb
xor
mov
aaa
pushf
test
inc
jmp
rolb
int
mov
add
cmp
sbbb
mov
xchg
scas
pop
cmp
cli
dec
add
pop
sbb
dec
inc
out
push
or
cld
pop
cld
fwait
aaa
leave
jmp
jge
fld
negl
mov
in
sub
jecxz
jns
xor
add
stos
dec
loopne
daa
aas
sub
pop
mov
xchg
movsb
loop
pusha
orl
add
movsb
mov
ret
stc
cwtl
test
data16
cmpsl
add
shrl
les
and
push
xchg
jne
and
inc
pop
inc
dec
mov
mov
sbb
push
xor
adc
mov
adc
mov
jbe
cmp
dec
mov
test
xchg
stos
adc
aam
or
mov
aam
pop
xor
call
dec
loop
test
adc
or
lods
sub
mov
aas
add
insl
mov
jl
je
lret
ds
nop
lahf
rclb
xor
cmc
sub
pushf
cmp
ja
push
imull
dec
add
cli
xor
sbb
add
and
push
and
cltd
pop
xor
pop
ljmp
or
cmp
loope
dec
add
out
sbb
inc
jae
push
cmp
mov
test
loop
mov
sbb
js
sub
mov
aaa
dec
std
dec
mov
ffree
ret
jne
test
xchg
sti
ret
outsl
addr16
out
mov
or
ret
clc
inc
pop
or
jno
shll
fmul
ljmp
jbe
je
mov
cld
xchg
mov
jnp
mov
adc
sbb
or
ret
out
pusha
jg
daa
and
leave
xor
pop
and
testl
cmpsb
sbb
aas
outsb
push
test
cmp
xchg
addr16
pop
loop
aaa
dec
sbbb
mov
xchg
push
in
mov
clc
aam
cmp
adc
test
mov
aaa
out
das
aam
in
repz
addw
lea
pop
and
jecxz
jge
aaa
bound
pop
pop
shrl
sub
push
push
rcl
push
xchg
jo
and
pushf
and
pushf
lahf
out
pop
push
pushf
stc
popf
movsb
mov
mov
fisubl
adc
pop
and
cmpsl
adc
aaa
cmpsb
movsb
cmpl
jb
or
mov
cmove
cli
mov
xor
adc
or
jmp
outsb
pusha
or
pop
shlb
aas
les
pusha
inc
stos
xor
repz
insl
inc
leave
jecxz
fwait
xor
and
xchg
cli
insl
mov
enter
push
insb
scas
add
add
adc
inc
pop
les
shll
jmp
fidivrs
fildl
add
xlat
pop
lock
in
sub
xor
cs
outsl
test
cmpsb
cmp
pop
xchg
bnd
jne
in
ss
test
add
out
loopne
push
push
dec
push
addr16
test
dec
or
dec
outsl
das
jae
lods
add
movsb
clc
imul
pop
inc
sub
xor
mov
cwtl
popa
mov
cmpsl
jp
mov
aam
mov
in
jae
or
mov
mov
sarl
lcall
loope
xor
das
lcall
fmuls
lds
push
pop
shrb
xchg
dec
push
gs
out
ret
push
mov
lods
jno
movsl
inc
and
int3
movsb
sub
mov
gs
pop
sbb
push
mov
sub
cwtl
lock
jbe
pop
inc
xchg
sti
mov
adc
aad
mov
push
push
add
push
mov
jnp
lods
out
inc
lock
ds
sub
int
outsl
push
popf
add
jb
jge
or
imul
mov
aaa
sbb
int3
hlt
aam
psllw
sub
inc
jp
js
lods
mov
or
lcall
cmpsb
lods
mov
push
faddl
ds
xorb
xor
gs
or
icebp
mov
xor
pop
sub
jecxz
in
jp
xchg
sarl
fistps
mov
ret
fldenv
mov
es
sarl
call
xchg
lock
or
push
or
cli
aam
dec
and
rclb
jae
or
in
push
dec
and
dec
test
or
stos
push
outsb
stos
nop
jne
ss
loope
stos
cmpsl
addr16
or
mov
test
mov
lock
push
pop
pop
mov
outsl
or
movsl
sbb
or
mov
push
mov
inc
push
sbb
mov
lods
into
pusha
push
mov
inc
scas
cmpsb
adc
sub
jg
add
jnp
add
adc
pop
out
mov
ss
fwait
test
scas
adc
lret
xchg
cmpb
push
mov
pop
mov
fistpll
insb
ret
out
pop
ss
jle
insl
imul
dec
pop
pushf
jae
in
das
loop
addl
jns
mov
out
pop
or
inc
jg
call
mov
negl
dec
test
repnz
shlb
jecxz
jmp
push
repnz
add
dec
pop
jmp
cmpsl
rcrl
sarb
jg
pop
or
out
sub
pop
adc
or
movsl
lea
pop
jle
ds
xor
mov
hlt
scas
xchg
addr16
sub
fcmovnu
sub
pop
sbb
ljmp
push
and
mov
popa
stc
dec
in
dec
mov
imul
data16
daa
ret
mov
cmp
inc
fldt
push
mov
mov
xchg
and
bswap
push
jne
adc
je
mov
imul
icebp
popa
pop
fcmovb
in
and
aaa
pusha
insb
jle
add
adc
shll
lcall
dec
push
xor
inc
pop
add
pop
xor
pop
fdivl
and
sub
inc
repz
xor
insb
cs
dec
ret
pop
cmpsb
mov
mov
xor
mov
movsb
adc
push
jg
shlb
int
adc
shl
xchg
mov
popf
and
push
leave
out
dec
lock
mov
and
je
push
ja
adc
enterw
mov
or
rcl
outsb
push
jg
and
pop
out
popa
pop
push
mov
push
sub
lea
pop
pop
fs
and
jmp
scas
lret
pop
cmp
and
prefetch
int
ja
add
mov
adcb
mov
repnz
ja
icebp
fwait
mov
lahf
cli
arpl
or
jle
jmp
sbb
dec
mov
or
in
into
dec
mov
repz
mov
pop
mov
jp
sub
pop
dec
hlt
in
out
push
push
and
mov
and
mov
xor
xchg
dec
inc
sub
or
add
test
mov
push
xchg
xchg
inc
sbb
repnz
cld
inc
out
scas
push
repz
lret
cmp
pop
push
push
adcb
addr16
fimull
push
adc
adc
mov
std
andnps
rcrb
gs
gs
test
xchg
lcall
inc
imul
adc
nop
push
int
xchg
sub
js
mov
gs
cld
push
loop
mov
ljmp
inc
mov
inc
mov
scas
and
mov
jbe
test
out
aaa
push
insb
inc
inc
inc
rorb
cwtl
mov
xor
movsl
cmp
adc
mov
shrl
rcll
cmp
call
xlat
dec
jae
leave
mov
out
push
cmpl
jp
scas
loop
into
nop
mov
push
jo
loopne
aam
push
cld
jb
xchg
pop
cmpsb
push
inc
pusha
inc
xchg
std
inc
in
mov
in
jmp
jge
movsb
xchg
out
in
xor
pop
ds
sub
pop
xchg
add
stos
mov
lahf
fisttpl
dec
mov
into
fmull
xor
jb
clc
pop
dec
mov
xor
mov
sbb
lods
sbb
push
scas
roll
jmp
sbb
inc
xor
push
and
and
push
lds
sbb
fmul
inc
sub
aam
outsb
iret
aad
xchg
enter
sub
test
dec
fs
mov
sbb
mov
pushf
sbb
fcomps
fnstenv
pop
pusha
xor
sbb
mov
sub
jp
lret
fidivrl
sub
sub
sbb
sub
xchg
in
mov
jb
in
shll
jge
lahf
mov
pop
lret
sarb
iret
out
adc
cwtl
jge
shll
inc
mov
mov
add
pusha
std
call
ja
and
jp
lods
in
in
cmpsl
mov
xor
bswap
jg
mov
adc
sbb
test
add
aas
pop
adc
mov
leave
xor
pop
push
and
movsl
and
mulb
into
lret
addb
mov
dec
stos
mov
leave
add
pop
jns
adc
fimuls
sbb
bound
jmp
lds
dec
xchg
je
adc
cmp
jecxz
out
mov
xor
mov
fidivl
or
out
ljmp
rorl
pop
and
xchg
stc
mov
outsl
cmpsb
sbb
test
cmp
push
rolb
inc
pushl
push
arpl
ror
jno
mov
shll
pop
in
pushf
cmp
arpl
mov
sub
push
aas
sub
add
adcb
jnp
mov
mov
mov
mov
mov
cmp
pop
xor
ss
sbb
sti
testl
pop
cmpsb
movsb
dec
jb
push
mov
mov
add
in
out
adc
out
sub
cmp
insl
mov
adc
sbb
push
inc
int
cmp
mov
testb
jmp
mov
cmp
xor
or
scas
imul
int3
jmp
push
pusha
ljmp
loope
loope,pn
decw
adc
jmp
out
or
xor
mov
leave
lret
pop
xchg
lahf
jmp
sbb
or
cwtl
imul
jmp
pop
push
or
andl
mov
mov
ljmp
clc
adc
pop
mov
movsb
pusha
pop
mov
pop
test
mov
jl
in
inc
cmp
out
mov
outsb
dec
mov
in
andl
pop
and
icebp
scas
sbbb
int
mov
cmp
and
lcall
das
cs
mov
jg
xchg
fdiv
cmc
push
cmp
mov
sbb
lret
pop
das
fbld
cld
jp
mov
repnz
xchg
xorb
scas
push
sbb
cmc
scas
cmp
enter
jp
jle
sbb
scas
jmp
ds
mov
or
out
sub
ja
mov
shrl
mov
lods
sub
jg
ds
rcrb
push
pusha
dec
inc
inc
adc
mov
ret
clc
jb
popf
xchg
mov
or
xor
das
inc
test
les
sbb
mov
pop
icebp
out
jle
cmp
out
fxch
and
push
test
fucomi
pop
push
rorl
cltd
divl
mov
fdivs
push
bound
stc
insl
rorl
cmc
pop
scas
inc
outsl
pop
jl
lret
in
cmp
mov
sbb
inc
cmp
cmp
das
lret
xor
pop
cmp
sbb
ss
mov
bound
incl
push
daa
or
dec
cli
xlat
sbb
data16
push
adc
xor
or
xchg
dec
in
inc
inc
adc
lcall
jmp
fimull
mov
fimull
push
and
mov
adc
out
pop
enter
sbb
jae
mov
cmpsb
and
lds
shll
insl
add
bound
fidivrs
scas
in
xorb
icebp
mov
sub
pop
fists
add
orb
jb
xchg
or
mov
ja
movsl
cmp
test
mov
enter
push
int
dec
lahf
ds
loopne
pop
dec
lcall
mov
xorb
inc
in
stos
jmp
orl
adc
aad
movsl
mov
subb
xor
lret
adc
pushf
popa
je
adc
push
jmp
outsb
pushf
mov
fdivl
push
fcoml
dec
scas
push
shl
pop
sbb
add
loope
nop
inc
or
lcall
mov
iret
inc
cld
add
jg
cli
cs
sbb
movsb
dec
fwait
rcr
mov
leave
in
inc
movsl
push
sub
fdivrs
hlt
xchg
xchg
scas
and
add
cmp
outsl
scas
adc
xchg
addr16
push
push
pop
jp
xchg
pop
in
popa
cmp
mov
sahf
ficoms
mov
xchg
xchg
mov
fiaddl
add
push
test
repz
js
jo
pop
into
jae
push
ret
cmp
movsl
sub
or
addr16
aas
push
dec
add
xchg
xlat
dec
pop
mov
dec
dec
cmc
dec
xor
lock
fwait
insb
scas
bound
ficoms
dec
push
xchg
and
push
gs
dec
out
adc
mov
jno
inc
pop
call
pop
repz
jmp
cmp
sub
jo
mov
xlat
fisubrs
jecxz
adc
stc
mov
mov
inc
mov
xchg
sbb
stc
jbe
pop
or
pop
and
scas
push
xor
cmpsl
les
aaa
testl
ja
pop
mov
ja
pop
ja
push
xor
sub
cmc
imul
dec
pop
mov
imul
clc
fadds
xor
xor
pop
or
push
jne
jmp
push
mov
jae
ret
fisubrs
or
mov
adc
pop
js
adc
dec
sbb
add
or
shlb
add
lods
dec
out
pop
scas
cmpsb
bound
mov
les
jb
pop
dec
test
imul
dec
dec
lock
sbb
jne
add
cmc
pop
dec
mov
inc
cmp
lahf
xchg
adc
int3
aas
push
fdivr
xor
jo
sbb
icebp
mov
cmp
inc
mov
xor
stos
cmp
popf
mov
mov
and
pop
sahf
stc
bound
cmp
decb
sti
out
mov
scas
dec
mov
sbb
pop
pop
and
inc
repnz
xor
int3
push
inc
jo
and
sub
add
mov
push
fwait
lcall
cwtl
pop
cmp
adc
gs
addr16
icebp
mov
cmpsb
mov
pop
inc
gs
xchg
xchg
scas
mov
mov
or
push
stos
mov
out
push
inc
insl
push
out
push
sbb
mov
aad
dec
push
xchg
add
insb
iret
int
aad
cwtl
adc
dec
sbb
inc
push
xchg
xchg
jae
push
andb
ret
loopne
mov
mov
xor
rolb
es
nop
clc
adc
mov
and
mov
leave
xor
mov
and
mov
mov
adc
pop
imul
xchg
sub
mov
dec
dec
test
sbb
and
mov
xchg
mov
clc
test
and
push
inc
pop
jecxz
xchg
pop
arpl
dec
mov
cmp
notl
mov
loopne
lock
fists
sahf
les
xor
in
xchg
xchg
dec
jl
sbb
fstps
and
adc
mov
dec
adc
sub
mov
fbstp
aad
test
and
stos
bound
fidivs
cmpsl
ja
mov
into
inc
icebp
out
pop
sub
pop
ljmp
shrb
outsl
mov
or
or
pop
in
xchg
push
les
mov
xor
fstpl
push
sub
mov
rol
add
bound
es
or
sbb
sbb
in
stc
pop
lret
adc
jecxz
dec
inc
ja
add
push
jbe
jnp
xchg
jmp
cmp
lds
ljmp
rol
test
jns
mov
mov
add
jae
pop
repz
or
mov
xor
fwait
dec
hlt
and
imul
xchg
mov
jp
pop
outsl
iret
push
pop
lahf
add
cmc
fcoml
cmpsl
sarb
and
mov
push
jl
xchg
push
ja
mov
xchg
adc
jmp
add
push
mov
in
shrb
xchg
sbb
xor
cltd
inc
jbe
scas
call
cmp
sbb
arpl
ss
in
hlt
sub
push
jnp
push
movsb
xchg
bound
mov
filds
aam
fdivrl
xor
mov
xchg
hlt
and
hlt
mov
daa
dec
pop
sub
idivb
mov
dec
loop
rolb
sti
jae
mov
jnp
popf
addr16
out
shlb
mov
mov
push
arpl
pop
sbb
icebp
jle
sbb
fidivrs
and
xchg
cmc
fcomps
mov
dec
adc
ss
push
mov
jbe
sarl
pusha
xchg
stc
mov
and
ljmp
data16
push
cld
ret
insb
xor
in
push
mov
lea
out
push
jecxz,pn
ror
aam
push
nop
and
xchg
test
and
or
loope
jns
push
xchg
sbb
sbb
adc
imul
cwtl
addl
div
cmpsb
push
pop
fcmovu
xlat
sub
and
mov
push
shlb
aaa
out
push
insl
bound
sbb
loope
jle
mov
mov
jnp
inc
movsb
mov
mov
mov
test
sar
orb
lods
pop
add
mov
jp
in
push
inc
mov
fisubrs
insb
lret
fisttpl
movl
repnz
jns
sbb
mov
imul
adc
pushf
test
xchg
xchg
mov
outsl
push
std
jmp
add
inc
mov
and
mov
into
pop
data16
fwait
pop
mov
fstps
jmp
in
cmp
data16
xchg
sub
xchg
cld
out
lret
pop
cmpsl
cli
mov
in
into
jns
mov
push
jbe
sub
sub
add
outsb
jmp
xchg
mov
inc
sarb
push
icebp
in
mov
xor
inc
cmpsb
and
sti
inc
or
sub
mov
sbb
adc
idivb
jno
fucomi
jb
pop
sub
js,pt
cmc
int3
sbb
std
mov
lcall
add
inc
mov
adc
mov
out
cmp
hlt
call
or
xorb
in
jmp
dec
pop
test
outsb
in
addr16
adc
aaa
mov
sub
aam
pop
lret
jnp
inc
out
leave
shrl
test
sbb
pop
arpl
add
sub
inc
daa
pop
dec
xor
addr16
in
pop
flds
mov
movsb
sub
inc
movsl
rcrl
movsl
xor
xor
or
sub
mov
fldt
scas
pusha
and
movsl
dec
call
into
mov
xor
stos
aaa
inc
xchg
jne
aam
inc
das
out
jae
and
xchg
mov
lret
or
aas
cmc
fwait
inc
outsb
les
sbb
sbb
sbb
mov
mov
and
into
mov
lods
xlat
lock
and
dec
stos
stc
aaa
bound
pop
mov
shll
xor
adc
ljmp
jmp
pop
dec
mov
cli
push
inc
adc
mov
pushf
cld
xchg
adc
dec
inc
popa
mov
mov
pop
repnz
jnp
adc
movsl
enter
test
adc
push
ret
jge
test
or
std
lret
sti
lds
xchg
mov
or
scas
dec
stos
inc
test
mov
cmp
je
arpl
add
sub
test
cwtl
js
test
dec
and
testb
pop
adcb
sub
inc
xlat
test
jns
mov
movsb
es
pop
fstpt
loop
mov
push
lds
jmp
jge
sbb
xchg
gs
xor
push
movsl
jg
loop
adc
test
icebp
leave
out
or
loope
mov
shr
push
mov
xchg
jnp
xor
or
xor
lods
sub
xchg
and
test
test
fcmovnu
fadds
cmp
mov
cltd
sti
xchg
xchg
out
cmp
adc
lcall
mov
repz
pop
mov
push
je
mov
xchg
pop
pcmpeqb
call
pop
std
cs
loop
pusha
lret
idiv
or
sub
and
lret
cmp
lds
repnz
xchg
ljmp
outsl
add
push
mov
stc
mov
loope
insl
into
inc
inc
push
fs
sbb
stos
mov
cwtl
stc
leave
mov
mov
pop
add
pop
insb
cmp
je
mov
orb
stc
dec
pop
add
xchg
test
fnstcw
add
dec
popa
xorb
lret
pop
movsl
movsb
rol
in
or
xchg
xchg
dec
iret
mov
lods
inc
arpl
mov
cli
pop
lret
pop
cmpsb
push
ja
lds
mov
nop
jns
push
mov
cmpsl
mov
decb
sub
pop
pop
movsl
test
push
adc
push
sub
lods
xchg
imul
insb
not
inc
pusha
cli
jnp
addr16
mov
sbb
inc
insl
das
push
dec
dec
inc
jmp
loope
and
int
adcl
adc
dec
lock
add
cs
icebp
and
sub
clc
orb
lcall
enter
stos
push
orb
stc
sub
jle
ds
inc
sbb
idiv
inc
dec
loop
mov
dec
push
hlt
movsl
cmp
mov
out
mov
js
imul
and
stos
aam
mov
and
popa
std
jp
shrb
pop
std
sahf
xlat
mov
sahf
repz
push
cmp
lret
or
mov
loope
fchs
inc
mov
orl
in
fsubs
lret
in
fs
je
test
mov
rclb
mov
shlb
lds
xchg
orb
xchg
loope
std
iret
mov
ljmp
jae
hlt
test
gs
adc
aaa
lock
jae
xor
push
dec
sub
outsb
ret
cmp
movsb
test
repz
sub
pushf
or
test
loop
orb
dec
push
in
mov
xchg
inc
loopne
pusha
push
fwait
inc
scas
data16
movb
aam
dec
pop
sub
out
ficoms
add
fcom
aam
orb
aam
aad
ficompl
push
cltd
add
push
jns
dec
leave
or
pusha
out
add
ss
orl
push
aad
mov
mov
cmp
xchg
cmpb
mov
mov
pop
std
and
imulb
adc
xchg
js
outsb
or
pop
xchg
cld
dec
lahf
mov
aaa
das
cmpsb
movsl
dec
add
outsb
mov
xchg
stos
or
in
mov
push
sub
les
inc
jnp
sti
mov
mov
jmp
sti
jecxz
xor
fdivr
mov
leave
fs
mov
mov
pop
loop
add
cmpsl
loop
bound
mov
xor
push
pop
scas
loope
inc
adc
enter
test
sbb
test
cmp
mov
adc
jb
shll
push
or
mov
push
pop
andb
adc
ss
popa
test
mov
xchg
lar
int3
mov
mov
jno
out
ds
outsb
cwtl
jl
imul
push
dec
movsl
mov
aam
xchg
jns
xlat
adc
push
loop
add
ja
mov
ljmp
push
dec
mov
leave
in
pop
xchg
inc
in
mov
pushf
and
cltd
ds
mov
roll
dec
mov
mov
adc
mov
test
jmp
mov
rorb
push
aaa
icebp
xor
sbbl
push
mov
push
inc
addr16
mov
inc
imul
mov
pop
pusha
gs
adc
iret
or
test
mov
dec
xchg
dec
andb
xchg
xchg
repz
xchg
lods
xlat
leave
rolb
xchg
fucomi
add
or
fcmovu
pushf
mov
cli
imul
popf
lahf
inc
mov
addr16
stos
push
mov
pop
data16
popa
or
dec
lea
inc
out
mov
jbe
xor
test
lods
lock
jecxz
xor
cmp
icebp
out
push
movsl
jle
xchg
cmpsb
les
std
ljmp
lret
rcll
mov
jae
jg
stos
push
inc
out
frstor
scas
mov
lds
repz
and
shll
sti
aam
add
fnsetpm(287
mov
shr
mov
sub
stc
scas
enter
xor
cs
je
mov
add
outsl
sub
push
in
sbb
stc
add
cmp
mov
and
test
into
jg
insl
loope
jp
nop
sbb
xchg
mov
movsl
fisubs
cwtl
enter
dec
int3
pop
push
jp
pop
cmpsl
inc
cmp
sar
dec
test
es
sub
not
push
les
aaa
sbb
in
stc
leave
outsl
cmp
lret
and
popa
mov
push
loope
and
pusha
into
movsl
lods
mov
add
mov
and
hlt
rcrb
add
aaa
jbe
push
push
push
repnz
cmp
jmp
out
or
add
jns
ds
sbb
cmpsl
mov
mov
jge
xor
verw
sbbl
and
cmp
sub
pusha
mov
push
jbe
push
jmp
scas
jno
mov
orl
push
movsb
sub
fwait
mov
push
cmp
test
push
adc
or
out
int3
push
sub
test
xchg
mov
sbb
out
lret
int
and
push
or
sahf
pop
xor
int
push
push
ja
sub
loop
xchg
sbb
pop
out
inc
sub
push
shrb
push
inc
loopne
mov
int3
cmp
idivl
pop
push
ret
mov
fdivs
sti
insl
mulb
dec
cmp
pop
out
pop
sub
sbb
push
pusha
mov
stc
das
pop
cltd
out
ljmp
loopne
jo
ja
or
jb
push
je
adc
ja
lahf
lret
aad
in
outsl
xor
gs
dec
out
mov
sub
ret
or
andl
push
add
addr16
mov
int3
enter
out
insl
into
pop
inc
inc
popa
popl
rolb
xorb
mov
test
inc
stos
sbb
scas
shlb
pop
mov
leave
xlat
repz
mov
sub
xchg
dec
test
xchg
xchg
dec
cli
fistps
adc
jb
orb
cmpsl
mov
imul
aad
fbld
mov
stos
cmp
ficoms
mov
nop
rorb
fnstcw
xor
int3
pop
push
sub
and
out
jmp
icebp
adcl
popf
aam
and
inc
sub
and
popa
loop
xchg
stos
stos
sbb
jecxz
jp
sub
ja
dec
outsb
mov
call
xor
sbb
add
arpl
adc
and
pop
sub
sbb
mov
pop
xor
arpl
fidivrs
bound
fcoms
push
or
push
int3
push
xlat
add
xchg
xor
jb
stc
rcr
mov
cmpsl
push
fs
cmp
add
cld
mov
mov
sbb
lock
jg
rcrl
push
cmc
mov
js
rolb
adc
jmp
int
cs
add
push
sbb
movsb
mov
cmp
cmovbe
rorb
insl
mov
mov
lock
lcall
stc
sub
aas
dec
imul
test
push
pop
sahf
inc
push
pop
mov
push
scas
imul
adc
subb
or
in
fldl
jmp
testl
or
out
call
cmp
mov
pop
out
xchg
adcl
scas
mov
mov
pop
cmc
xor
mov
xchg
aam
scas
cmpl
cmp
pusha
cli
jnp
sti
pusha
scas
xchg
mov
addr16
nop
fwait
push
sub
jmp
icebp
movsb
aaa
das
aam
test
rol
sub
cmp
dec
ss
mov
shlb
or
sarb
gs
sbbl
jl
push
xor
js
cld
jns
sub
and
cmc
adc
xchg
cmp
lock
or
mov
pop
bnd
jns
out
pop
pop
adc
stc
call
mov
mov
mov
lods
test
or
popf
aam
mov
out
pop
inc
dec
fsubr
in
mov
mov
or
sar
mov
cs
test
lahf
hlt
push
or
xor
pop
add
mov
mov
ret
push
stc
jae
pop
aam
jle
add
cmp
mov
lret
mov
add
xor
loop
adc
mov
mov
int
rorb
bound
mov
nop
sub
jp
jae
inc
cld
lcall
push
xchg
cmp
or
cmp
mov
inc
gs
jmp
dec
and
xchg
pop
adc
popa
adc
loope
xor
stos
cmp
mov
xor
sbb
scas
xchg
add
gs
movsl
mov
ret
push
xchg
sbbb
cltd
daa
cltd
add
lods
mov
jl
testb
imul
scas
imul
into
andl
pusha
arpl
adcl
add
sub
mov
popf
lret
ss
or
or
aaa
loop
sti
jge
fistpl
adc
and
or
sub
inc
fdivrs
jo
adc
lahf
adcl
es
mov
pop
cwtl
stc
cmp
sbb
push
lahf
pushf
insl
xchg
fisttps
out
cmp
sahf
cmc
jb
mov
ljmp
cmp
and
out
or
push
cmpb
lds
not
pop
lea
mov
mov
stos
addl
outsl
mov
int3
jno
or
gs
ficoml
sub
aad
loope
lock
push
inc
out
sahf
ds
stos
mov
test
pop
and
mov
jb
sbb
mov
rcrl
xlat
arpl
lock
jns
mov
sahf
pusha
or
or
call
push
sub
insl
sub
cmp
and
xchg
xchg
leave
inc
jge
or
ror
repz
inc
lret
jg
sub
pop
push
push
push
mov
aas
xor
jb
into
cld
pop
ret
insl
pop
push
jb
mov
mov
dec
pop
push
push
xor
mov
aam
mov
cld
or
mov
jno
andb
push
cmp
inc
push
mov
shrl
insl
push
hlt
daa
pop
leave
hlt
std
andb
sbb
mov
mov
sbb
scas
mov
pop
xchg
mov
xchg
mov
daa
shl
adc
repz
push
mov
adc
cld
xchg
stos
loope
sbb
insl
hlt
insl
cmp
mov
xor
aam
sub
mov
arpl
sahf
imul
sub
lret
push
adc
add
andb
push
test
mov
xchg
lock
out
and
and
dec
jg
andb
jnp
cld
mov
fwait
cmpsl
sub
xchg
sub
dec
and
push
cwtl
and
xorb
hlt
in
outsb
fstpt
pushf
sub
mov
xor
jle
jbe
lret
sbb
lods
insl
out
pop
and
mov
pusha
xor
and
mov
fwait
js
adc
aam
iret
mov
les
or
lock
cmp
cwtl
sbb
out
je
pop
xchg
pop
leave
mov
add
mov
sbb
ret
jno
test
ficomps
std
jle
lret
sbb
jbe
lret
movsl
test
gs
in
xchg
nop
pop
mov
test
insb
iret
jns
add
cltd
out
jns
stos
aaa
inc
lea
outsl
pop
inc
or
inc
and
xor
jge
cltd
test
jae
bound
dec
jae
rcll
cmc
sbb
push
stos
sbb
psraw
xchg
sub
add
cmp
xor
cmp
dec
movsb
es
jns
xchg
xchg
into
insb
in
imul
mov
in
or
mov
and
ljmp
pop
inc
jl
xchg
mov
fwait
sti
cmpb
loopne
cmp
sbb
inc
xor
sbb
lret
cmp
xchg
fld
add
or
fdivs
and
js
pop
int3
jp
xlat
ds
inc
add
rorb
in
push
push
das
jae
pop
imul
subb
cmpsb
lods
jp
mov
loope
sub
inc
dec
push
andl
xchg
inc
and
movsb
xchg
fcompl
repz
dec
add
jecxz
mov
lods
out
das
and
dec
sbbl
lds
lcall
out
ds
sub
mov
divb
dec
add
jl
pop
xor
push
push
mov
rorl
inc
xor
mov
mov
call
stos
out
repnz
sbb
jecxz
pop
dec
popf
cmp
mov
mov
clc
mov
cld
sbbb
cltd
cmp
sub
call
fiaddl
test
xchg
lahf
cmp
cwtl
in
movl
adc
sbb
lods
xchg
pop
in
inc
push
jne
mov
pop
mov
fdivs
inc
inc
daa
xor
mov
lods
decb
lods
jge
pop
outsb
cmpsl
dec
jb
jo
cmpb
inc
jge
add
call
dec
jo
popf
sub
mov
ficoml
push
inc
cs
repz
ds
cltd
dec
ss
add
sub
xor
sbb
das
and
xchg
insb
add
cmp
adc
dec
cmc
mov
fidivl
push
adc
test
into
leave
dec
inc
inc
push
roll
test
push
pop
jge
fadds
dec
int3
jecxz
dec
add
sbb
repnz
cmp
xchg
icebp
sbb
or
dec
lods
dec
movsb
into
stos
jb
xchg
xchg
xor
stc
push
test
mov
mov
cmpsl
pop
inc
cltd
jno
pop
dec
add
mov
pop
lea
shll
sbb
pop
aaa
mov
pop
nop
fistl
orl
pop
dec
mov
adc
loopne
shrl
push
mov
fdivl
xchg
sub
cmp
pop
lea
adc
daa
icebp
in
insb
or
xor
ss
and
or
ret
and
inc
cwtl
jg
lcall
lock
mov
jg
fnop
xchg
and
in
push
jo
ja
cmpsl
add
notl
xchg
sti
out
add
pusha
jo
movsl
div
fs
jl
push
sbb
lahf
add
or
adc
mov
jle
sub
test
mov
push
stos
cmp
pop
mov
mov
mov
sub
sbb
cld
sbb
sarb
test
popf
pop
loop
sub
or
comiss
call
out
xchg
or
xchg
jp
xchg
mov
outsb
mov
test
mov
rcr
mov
add
xor
int
dec
cmp
ds
fmull
mov
and
int3
loopne
adc
scas
push
mov
lds
test
insl
xor
mov
add
push
mov
jg
mov
movsl
sub
sub
sub
inc
ljmp
push
ret
lcall
lods
pop
fwait
js
fs
mov
sbb
fidivrs
inc
cmp
add
cwtl
adc
pusha
jp
insb
and
push
nop
iret
mov
jno
cs
repz
outsl
repnz
xchg
and
xchg
push
aas
pusha
mov
repz
cmpsl
aas
xor
scas
jnp
imul
jp
out
xchg
or
in
test
inc
push
xchg
adc
sbb
cwtl
ja
dec
xchg
jp
inc
addl
jae
in
ss
push
sbb
mov
add
movsb
push
fidivs
movsb
cltd
adc
sub
es
dec
ljmp
mov
sub
jbe
add
sub
and
mov
mov
scas
call
sub
or
mov
jae
test
push
jg
xchg
cmp
mov
out
xchg
sbb
iret
push
test
jl
and
jmp
rcll
jmp
cmp
mov
arpl
sub
mov
xchg
sbb
jns
and
ds
and
xor
jge
daa
xor
ljmp
lret
mov
cs
imul
mov
fdivrl
dec
xchg
imul
add
cltd
mov
ret
sahf
and
ds
xchg
cli
les
xchg
jae
sbb
sbbb
aad
test
mov
out
push
jg
sub
scas
push
loopne
arpl
cli
out
negb
add
dec
xor
cmp
stc
sbb
cli
cmp
mov
ja
adc
pop
cmp
test
sbb
mov
in
mov
push
sub
lcall
add
imul
or
mov
test
push
pop
iret
lret
popl
cmp
fldlg2
movsl
fldl
mov
pop
movsb
or
xchg
push
jno
inc
mov
js
and
inc
cltd
test
jbe
push
push
imul
inc
sahf
mov
mov
ds
into
dec
mov
loop
daa
call
out
insb
notb
shlb
scas
aam
out
rcll
rclb
data16
mov
loopne
pop
jnp
mov
test
xor
cmp
cmp
insb
xor
pop
cmc
push
lock
mov
jo
cmpsb
faddl
push
js
in
cmpsl
mov
adc
cmc
mov
subb
bnd
fldcw
push
add
cmp
sahf
dec
pop
mov
fdiv
jmp
adc
enter
inc
mov
sub
ret
jl
lods
or
push
sbb
lea
pop
pop
pop
xchg
push
movsl
push
jnp
scas
and
aad
movsl
and
mov
aas
andb
rcll
in
pop
ss
in
aam
push
sub
js
xor
mov
xchg
xchg
lcall
test
mov
sbb
dec
pop
ret
int3
and
cmp
sub
in
js
dec
repz
in
dec
and
test
or
or
ficoms
mov
out
dec
push
adc
xchg
push
fs
dec
push
loop
outsl
imul
sub
mov
lods
shl
dec
xlat
mov
test
inc
test
enter
mov
cmp
outsl
sti
mov
cs
loopne
pop
cltd
std
mov
cmpsl
mov
repz
jae
dec
repnz
movsl
push
mov
mov
mov
push
enter
dec
jg
adc
out
outsb
jecxz
mov
test
int
js
lcall
aas
ret
mov
xchg
inc
jl
and
enter
add
fwait
mov
fadds
scas
adc
inc
adc
and
les
cmpsb
loope
sub
and
jno
dec
jae
jecxz
mov
inc
jecxz
lock
mov
push
jl
xchg
dec
mov
xor
insl
xchg
pop
aad
push
jmp
test
xor
adc
inc
outsl
xchg
xor
xchg
pop
push
test
pop
ret
outsb
sarl
lods
icebp
push
jp
cld
dec
mov
out
and
and
ja
filds
ss
lods
jl
fidivl
stos
int
sub
mov
push
inc
int3
hlt
sub
insb
sub
pop
sti
push
mov
iret
adc
mov
cmp
sub
xlat
fwait
in
xchg
push
outsl
push
dec
aaa
mov
xchg
adc
push
push
repnz
jmp
xchg
add
pop
cld
adc
rorl
add
adc
and
jg
fstp
pop
lds
adc
sub
cmp
lods
fsts
pop
cs
pop
mov
je
mov
push
jg
test
dec
adc
pop
les
push
cmp
cs
jo
push
enter
pushf
pop
fadds
ret
push
dec
push
cmp
scas
es
test
push
int3
imul
pushf
mov
dec
shrl
in
stc
inc
stc
xchg
mov
cs
xor
es
iretw
push
mov
arpl
gs
mov
sub
mov
pop
or
sub
je
adc
push
popf
pop
imul
je
fsubl
sub
adc
lock
lcall
pop
out
mov
gs
sub
mov
sbb
iret
add
inc
and
int3
aaa
cmp
sub
pop
mov
int
mov
xor
lods
mov
add
out
mov
js
xlat
sahf
into
mov
repnz
inc
test
inc
fwait
cmp
jp
push
jge
mov
loop
xor
lcall
decl
sub
pop
push
inc
mov
inc
incb
mov
je
lock
jmp
jl
adc
push
lea
xchg
sbb
cmp
sub
cwtl
cmp
cld
pop
add
cmp
pop
mov
pop
jnp
leave
xchg
xor
xor
ficoms
xchg
lods
test
cmp
xchg
pusha
mov
cmc
or
aad
std
cs
clc
stos
mov
xchg
hlt
add
dec
out
fbstp
js
insb
sbb
jns
mov
push
jle
test
testl
ret
or
sti
pop
in
fstpl
inc
mov
xor
adc
xchg
movsb
pop
cli
inc
addb
aad
pop
add
aad
fcoms
leave
bound
sbb
inc
mov
arpl
ljmp
add
push
mov
sub
jne
jge
hlt
jmp
ljmp
hlt
rorl
dec
lds
das
pop
mov
test
int3
lcall
loopne
repz
mov
inc
dec
imul
and
je
adc
clc
add
pop
lahf
xchg
imull
sbb
gs
push
xor
push
in
pusha
int3
negl
stc
mov
cmc
fdivs
mov
into
dec
fnsave
or
idivl
int
add
stc
fcomps
mov
fsin
lods
sbb
lods
scas
adcl
push
dec
inc
inc
jmp
push
fdivrs
movsl
jecxz
frstor
cwtl
sbb
cmp
lahf
add
pushf
xchg
cmp
mov
idivl
and
xor
loope
jnp
jno
shlb
out
test
xchg
pop
lods
lret
lea
xor
adc
les
into
imul
sbb
ss
push
ffree
aam
adcl
xchg
pop
or
and
fstpt
aas
xchg
and
mov
xor
stos
mov
ljmp
push
sbb
push
pop
lret
loope
out
out
and
adc
in
push
mov
push
pop
push
leave
in
pop
push
stc
jae
cmpsl
jae
out
fldl
int3
xchg
pop
sub
xchg
mov
js
push
shlb
jp
loope
pop
out
loop
add
out
pop
outsb
sarl
js
mov
sti
cmp
test
xor
jne
jb
divb
in
or
push
mov
mov
movsb
test
push
addr16
test
mov
mov
cs
mov
fwait
lea
and
mov
add
je
loopne
popf
js
cmp
sub
insl
cli
or
sbb
push
insb
hlt
mov
inc
call
mov
pop
fs
cli
js
xchg
cmp
cmpsl
subb
es
xchg
xchg
add
lock
pop
push
aas
arpl
gs
adc
std
adc
les
insl
movsb
movsb
repnz
mov
cmp
push
push
push
pop
xor
sti
test
cmp
aas
jae
and
loop
or
sub
sahf
jns
movsb
test
testb
push
or
stos
xor
xchg
adcl
cmpb
xor
dec
dec
dec
fisubs
aas
in
in
loope
jle
divl
or
insb
in
mov
sub
repnz
xchg
cmpsb
lret
hlt
mov
sarb
into
in
sub
mov
sub
lds
insb
fidivs
and
push
push
pop
adc
or
sbb
cs
and
loope
daa
inc
mov
testl
pop
inc
clc
imul
mov
push
cmc
inc
adc
dec
xor
adc
cmp
xor
fildl
jl
adc
popa
lock
or
pop
lds
add
pushf
add
js
out
leave
pusha
add
into
mov
lret
xchg
xor
repnz
and
sbbb
scas
fildl
mov
jp
rorl
mov
movsb
adc
mov
xchg
leave
jl
push
lret
xchg
enter
mov
lcall
mov
fldt
pushf
inc
jno
cmp
xor
jb
and
xor
outsb
scas
jb
cmpsb
inc
loop
mov
ret
push
shrb
mov
fistps
int
fisubs
call
xchg
nop
add
test
xchg
mov
xchg
enter
mov
and
xlat
insb
mov
pop
ret
and
push
xchg
mov
loop
xchg
or
ja
sbb
ret
inc
repnz
cmpsb
int3
jb
add
in
inc
das
popa
xor
loop
js
ljmp
enter
mov
adc
mov
dec
cld
loope
inc
inc
sbb
hlt
enter
inc
lock
adc
loope
mov
int
iret
sbb
inc
sbb
mov
lret
sub
lock
pop
outsb
les
dec
adc
mov
addr16
cmp
mov
pop
cli
rcll
and
test
in
push
iret
dec
push
push
ja
and
out
inc
jb
rorb
or
or
add
cmpsb
jns
in
xor
mov
in
xor
cs
scas
and
ljmp
pop
in
mov
mov
dec
or
inc
add
cmp
inc
mov
test
jge
adc
sub
ret
mov
mov
lods
push
adc
or
cmpsl
cmpl
add
mov
xchg
cmpsb
insl
push
mov
xchg
subb
adc
std
insb
dec
sub
dec
ret
sub
push
nop
mov
xchg
pop
push
clc
cld
rorl
aas
xchg
pop
mov
pop
ss
and
mov
and
pop
pop
and
mov
lahf
or
or
test
cmp
push
add
xchg
mov
pop
movsb
push
mov
andl
loope
loop
dec
nop
lds
jnp
cmpsb
xor
stc
test
cmp
pusha
jmp
jmp
ja
arpl
xchg
push
sbb
fcmovnb
cmp
inc
mov
imul
nop
pop
aam
jg
push
scas
push
inc
aad
ljmp
imul
sub
fwait
loope
adc
test
lahf
cmpsb
fmuls
sbb
fistpl
mov
aas
mov
xlat
push
hlt
adc
and
iret
hlt
pop
push
sarb
fidivrs
jne
pop
pop
mov
or
gs
fildll
sub
test
xor
stos
sub
pop
pop
cmc
repz
sti
jmp
insb
gs
push
out
inc
sbb
fs
hlt
je
mov
scas
xlat
fists
dec
push
pop
fistps
test
mov
ret
mov
jb
pop
lock
jo
pop
es
test
daa
ret
pusha
movsl
xchg
fnstsw
jg
adcl
push
xchg
xchg
enter
mov
jle
imul
mull
pop
adc
jl
mov
int3
popf
or
push
divb
insl
das
mov
aam
in
xchg
push
or
sbbb
in
adc
cmc
js
sbb
sti
xchg
fnstenv
and
add
scas
ret
mov
inc
jle
ret
jne
and
scas
into
fldenv
std
xchg
jne
mov
xchg
sti
rolb
decb
and
stos
push
es
jae
mov
lret
mov
pop
test
in
fdivr
push
mov
dec
cs
push
sbb
pop
inc
loop
adc
sbb
imull
aas
les
aam
divl
fidivs
push
jge
sti
jo
fadd
ja
nop
popa
pop
push
push
pop
mov
loop
jns
pop
inc
call
aaa
fiaddl
nop
mov
xchg
test
push
cli
idiv
and
push
lcall
jno
ja
jns
dec
shrb
push
loopne
sbb
gs
or
cmpsl
popa
lea
jns
test
xor
mov
fadd
lret
pusha
adc
imull
push
sub
das
sub
cmc
fstl
negl
testb
adc
das
dec
or
in
enter
sub
popf
sbb
data16
fwait
jne
outsl
inc
ljmp
sahf
out
mov
sub
jnp
pop
add
sbbl
push
loop
sub
lcall
enter
fsubrl
leave
mov
push
xchg
jmp
inc
xchg
out
push
jb
test
pop
inc
popa
lods
stos
pop
leave
mov
mov
loopne
push
push
cwtl
test
idivl
lret
out
js
test
push
adc
ret
or
sbb
cmp
leave
push
lret
mov
add
popf
andl
pop
repz
orb
xor
repnz
jmp
sbb
xor
xchg
add
jg
dec
dec
adc
mov
daa
or
addr16
ds
jae
pop
add
jge
cmp
insb
cmpsl
mov
cmp
pushf
insl
repnz
cmp
pop
xor
sbb
aas
mov
add
xchg
mov
push
mov
mov
pop
add
arpl
and
imul
push
sbb
jle
mov
xlat
cmp
into
es
addr16
inc
aam
sub
movsl
mov
cwtl
xchg
ret
dec
outsl
or
or
mov
pop
push
in
repz
gs
cwtl
push
fsts
mov
xchg
pop
jns
add
xor
push
inc
ficomps
or
push
jbe
jp
lods
out
mulb
mov
mov
inc
lcall
sbb
shl
outsb
dec
loopne
mov
add
cld
clc
mov
jns
inc
dec
icebp
dec
dec
dec
ret
inc
add
gs
sub
scas
inc
aam
xchg
repnz
sub
sbbl
cmp
int3
rol
pextrw
fsubs
insb
add
lahf
push
js
dec
jo
dec
push
dec
or
xlat
add
aaa
fsubrp
fiadds
adc
outsb
push
imulb
ss
stc
fcmovb
add
jbe
movsl
rolb
out
pop
inc
cmp
or
add
enter
sarb
jno
ja
mov
add
push
aaa
mov
cmp
test
cmpsl
test
pop
data16
push
insb
lcall
push
dec
js
gs
cmp
mov
lods
mov
sbb
xor
mov
push
call
movsb
cmpsb
mov
mov
pop
fcmovb
push
sbb
repz
ds
or
push
mov
mov
outsl
sti
jmp
daa
or
jl
xchg
xchg
push
xor
or
fstpl
js
ror
dec
mulb
fstpt
jno
jle
cmc
bound
jne
xchg
cmpsb
scas
xchg
in
pop
scas
adc
data16
push
sub
fisttpl
lcall
sahf
rorb
pop
ficoml
dec
cmp
out
ljmp
push
bound
mov
and
xor
jns
imul
push
adc
mov
dec
sahf
stos
pop
cld
rcrb
flds
mov
or
test
xor
rcrl
or
cmp
shl
mov
push
or
jl
cld
xchg
lods
adc
cld
push
cmp
pop
dec
mov
push
outsl
insl
jb
dec
int3
movsl
xchg
jl
cmp
dec
mov
jo
dec
stc
sti
aas
stos
hlt
mov
loope
sti
pop
lds
sbb
push
or
mov
outsb
and
and
or
movsl
int3
sub
or
xorl
aas
add
jae
fs
push
or
jmp
fwait
movsl
mov
in
scas
out
cmp
int
js
test
dec
out
adc
loopne
out
test
jb
xchg
inc
inc
les
movsb
jl
data16
je
cmp
repz
cmp
fcoml
dec
iret
mov
aaa
adc
cmp
divl
mov
push
popf
std
add
sub
mov
mov
shlb
incl
adcb
adc
cwtl
and
adc
mov
xchg
mov
push
sbb
push
scas
cmp
rcll
je
in
pop
ja
aad
mov
incb
or
shrl
inc
cmp
inc
inc
cmp
xchg
int3
xchg
gs
cmp
inc
out
xor
adc
adc
push
pop
sub
jne
sbb
int
fistpl
dec
push
out
mov
push
jmp
cs
hlt
mov
dec
mov
jns
sti
jne
mov
jbe
inc
ret
inc
loop
and
push
and
daa
testb
leave
ss
ret
mov
xchg
mov
lret
je
sbb
pop
pop
scas
pop
stos
fdivr
mov
sti
ja
popa
popf
add
mov
stc
daa
adc
cwtl
shrb
int
insl
addr16
and
test
aaa
lret
push
aad
xchg
lods
xor
stc
imul
cmp
rcrb
in
cmp
and
leave
fs
push
or
xchg
das
ja
out
mov
push
cltd
pop
sub
xchg
leave
push
repz
lods
pop
insb
lods
and
and
inc
shrb
and
nop
jno
cmpsl
mov
in
movsl
out
dec
aaa
inc
pop
xchg
test
sahf
and
mov
clc
fnstenv
insl
push
out
lahf
cltd
lret
inc
jb
pop
les
add
pop
loop
das
cmp
fisttpl
mov
push
push
andb
test
and
scas
dec
push
pop
gs
cmp
push
mov
sub
aad
movb
punpckhwd
mov
lahf
mov
ja
dec
push
popl
imul
jecxz
xchg
aas
mov
ljmp
lock
jns
jbe
into
push
repz
adc
inc
mov
gs
std
cltd
jle
xor
lret
into
jae
jbe
inc
movsl
pop
aad
mov
fsubrs
jo
sbb
pop
sbb
lret
cmp
xor
xor
xchg
sub
sbb
sbb
mov
xchg
mov
inc
push
mov
jge
mov
test
or
call
lcall
pop
mov
in
ja
and
mov
cmp
jg
cmp
test
das
xchg
pop
scas
cmp
scas
test
and
leave
test
call
stos
pminub
push
jae
lea
fwait
mov
cmp
jb
inc
mov
sbb
lds
push
push
xlat
push
jae
cltd
outsb
jecxz
push
popa
adc
pop
int3
lret
push
push
jno
sbb
add
dec
fs
mov
mov
insb
push
push
sbbb
sbb
dec
cwtl
dec
insb
or
mov
leave
lahf
out
xorb
clc
push
es
daa
dec
out
cmc
les
clc
test
stc
or
push
push
and
or
lea
jge
int3
lods
cmp
jne
xchg
popa
mov
xor
cld
out
xchg
jge
les
pop
lret
and
rorl
mov
nop
jp
and
add
pop
dec
xor
insl
push
lret
fnstsw
sub
mov
repz
jecxz
xchg
cltd
dec
out
hlt
push
mov
jae
dec
cmp
loopne
xchg
addr16
lret
mov
movsl
pop
and
rcrb
jnp
sbb
inc
mov
int
inc
outsl
sti
dec
shll
imul
scas
js
dec
and
popf
dec
sbb
lea
mov
inc
sbb
rcrl
int3
xor
ja
imul
add
mov
pop
loop
push
test
xor
dec
jo
mov
in
xor
and
clc
das
sub
push
mov
push
xchg
xchg
add
pop
pop
cwtl
lret
sub
jo
pop
fistpl
int
mov
sub
out
mov
test
iret
stos
stc
pop
outsb
xor
mov
sbbb
pushf
test
jle
mov
orb
mov
or
cmc
nop
inc
inc
jecxz
jmp
pushf
xchg
dec
push
faddp
inc
sahf
aad
arpl
dec
pushl
ds
pop
in
xor
pop
lahf
add
xor
push
jecxz
xor
cld
mov
xor
ret
jle
loope
mov
xor
bound
repz
pusha
pusha
sti
push
leave
popf
fs
mov
cmc
xchg
xchg
ja
addr16
in
xchg
in
xchg
test
xchg
adc
lcall
sub
xchg
lret
mov
rolb
sub
push
imul
pusha
out
inc
inc
jl
cmp
jne
and
in
push
or
lret
imul
mov
adc
push
push
inc
mov
subb
lea
rcrl
jns
add
ret
aad
push
push
inc
mov
pushl
sub
xchg
sub
jp
dec
loop
mov
inc
jno
mov
dec
ss
sbb
push
cmpb
out
nop
fdivp
mov
ret
and
outsb
jb
push
or
or
pop
in
xor
push
cmp
rcll
pop
or
fwait
and
jnp
and
push
adc
sbb
scas
bound
or
adc
or
fisttpl
sbb
movsl
xchg
insb
push
pushf
inc
dec
lock
jnp
in
ss
cli
sbb
mov
inc
ljmp
push
scas
sub
sub
das
popa
inc
pop
cmpsl
leave
aam
mov
popa
xchg
and
mov
push
pop
sub
jb
int
mov
mov
sti
loopne
pop
jmp
cmp
pop
mov
push
or
lods
cmpsb
stos
push
jo
addb
xchg
xchg
push
cmp
ret
or
sbb
cwtl
cmp
push
nop
fwait
std
lds
xlat
sub
mov
lods
popa
loop
out
xchg
jmp
mov
mov
xor
jae
push
daa
gs
dec
xchg
inc
and
pop
in
cwtl
push
adc
nop
mov
test
push
das
stos
cmpl
call
fsubr
mov
mov
xchg
mov
fwait
inc
in
repnz
mov
add
sbb
cwtl
add
sub
les
jns
imul
add
sub
nop
pop
push
dec
fs
xchg
mov
xor
cwtl
loope
add
lods
mov
fsubrs
fs
sar
pop
sbb
pop
stos
sbb
dec
dec
or
add
iret
nop
cmp
and
lcall
int3
dec
sti
xchg
mov
xor
xchg
xor
lds
adc
mov
ret
pushf
mov
out
mov
mov
shll
xchg
sub
pop
shll
out
inc
je
stc
shrb
xchg
jns
pop
outsl
test
pop
jb
or
xor
dec
mov
sbb
call
dec
cwtl
bound
jne
pop
inc
out
dec
xorl
ljmp
rorl
adc
pop
lret
sub
mov
push
xadd
mov
mov
mov
xchg
leave
loop
mov
sbb
data16
pop
push
or
stc
fs
setle
scas
mov
outsb
dec
loope
and
test
test
cmp
in
lods
inc
mov
int3
push
decl
movsb
mov
addr16
clc
xor
pop
jno
in
mov
andb
or
sub
mov
sub
std
insb
xlat
lea
sub
xchg
pop
adc
lcall
add
mov
cmp
mov
bound
cmp
decb
mov
mov
lock
lea
push
adc
push
dec
sahf
inc
in
cld
xor
das
aaa
pop
stos
inc
mov
mov
inc
fdivrs
sbb
cmpsb
je
jo
xchg
scas
sbb
push
mov
mov
push
mov
xchg
mov
decb
or
fnstcw
data16
inc
les
rcrl
out
jp
insb
and
jmp
imul
mov
hlt
inc
cld
xlat
mov
mov
mov
jo
outsb
jae
or
jecxz
adc
jmp
insl
push
xchg
jne
or
popf
or
cli
inc
dec
jg
adc
or
test
out
rcrb
inc
in
dec
out
sub
lret
stos
jle
in
cmc
mov
ja
push
push
gs
in
fistps
xchg
mov
shlb
inc
lret
jecxz
dec
dec
mov
out
jecxz
mov
js
nop
mov
inc
or
jl
pop
in
xchg
sub
fldt
mov
stos
xor
and
push
xor
jmp
cmc
and
mov
jmp
or
fs
jl
fsubrp
repz
mov
dec
sbb
in
icebp
cmc
push
jns
push
vpaddsb
push
jmp
dec
dec
xchg
pushf
cwtl
test
adc
ss
arpl
pop
adc
mov
inc
xchg
cmpb
dec
stc
jmp
push
stos
inc
jle
cmp
push
stos
mov
add
mov
into
lods
fldt
sub
outsb
nop
mov
inc
movsb
mov
mov
test
pop
sbb
je
pop
adc
mov
sbb
inc
fwait
pop
xor
lock
repz
in
cmp
dec
inc
mov
mov
fcom
les
and
add
dec
xor
bound
imul
lods
fisttps
into
lds
movsl
mov
test
lea
xchg
jo
lods
cltd
loope
mov
jge
mov
cmpsl
imul
shr
into
cmp
aaa
jmp
nop
add
or
sbb
test
xor
idivl
jne
out
xchg
fwait
sub
sbb
fildll
out
fcmovnu
rclb
imul
cwtl
add
int3
xchg
jns
mov
push
cli
cmp
push
mov
imul
xor
push
push
add
lret
adc
in
arpl
lods
cli
repz
dec
shrl
xchg
mov
mov
insb
in
fcomi
adc
cmp
adc
aam
sbb
js
pop
sub
repnz
pop
sub
sbb
mov
pop
or
mov
stc
mov
xchg
out
dec
mov
sub
dec
dec
clc
mov
cli
mov
cmp
xchg
test
add
push
cmpsb
flds
aas
and
aam
push
dec
movsl
shrl
pop
stos
inc
daa
movsl
jp
clc
and
stc
test
lock
sbb
lock
pop
mov
incl
icebp
adc
cltd
shr
mov
iret
pop
add
dec
cmp
roll
mov
jae
int3
jge
jne
dec
pop
ret
cmp
arpl
lret
out
iret
mov
int
push
push
out
aam
stc
sti
mov
mov
jmp
sbb
bound
cli
gs
notl
xchg
inc
push
push
mov
js
enter
daa
outsl
addl
mov
mov
dec
out
xchg
int3
xchg
stos
push
push
sbbb
jno
aad
lds
mov
inc
inc
and
decb
jns
not
outsl
test
mov
push
sub
jno
data16
out
jp
stos
cmp
xorl
jmp
sbb
mov
or
push
lock
mov
fiadds
pop
cmp
shrl
pop
popa
sbb
jl
jno
sbb
push
and
in
lret
mov
test
mov
repnz
icebp
jbe
or
sbb
insl
pop
notl
dec
pop
lock
inc
mov
sub
adc
adc
insl
xchg
adcb
mov
sahf
xchg
push
or
and
int3
cwtl
xor
jl
jecxz
out
pusha
test
pop
clc
movsb
mov
dec
ret
pop
dec
outsb
and
and
and
lret
and
ja
loopne
sbb
jne
mov
cmp
mov
in
jno
sbb
adcb
and
fsincos
scas
xor
stc
push
sbb
stos
mov
xlat
cmp
ljmp
or
sub
add
add
or
lods
pop
sub
lds
mov
mov
jmp
popa
inc
jns
ds
pop
jp
xchg
or
add
ret
pop
out
jns
fucom
lods
std
cmp
hlt
and
push
das
lock
mov
aad
hlt
cmpsl
idivb
movsb
mov
shl
fstps
pop
js
ja
mov
cmp
mov
enter
jns
mov
or
cld
bound
mov
int
and
mull
push
movsl
inc
adc
ss
push
add
sbb
push
addl
pop
paddb
pop
rcll
lods
sti
push
lea
xchg
adc
mov
lock
movsb
ds
addr16
ret
dec
call
cmp
mov
jl
inc
and
fsubs
loope
adc
cmp
mov
cmp
pop
movsl
xchg
pop
sbbb
daa
push
fs
je
cmp
cmpb
jmp
ljmp
xor
fs
out
sub
scas
call
rcrb
push
jns
stos
movsl
loope
les
jp
jge
jo
int
xchg
movsl
into
dec
mov
nop
jbe
push
jp
icebp
in
outsl
xchg
aaa
and
cmp
repnz
mov
sub
lea
mov
aas
sti
or
xchg
dec
push
and
loopne
test
pop
repz
lods
orb
scas
aam
test
cld
add
push
inc
scas
add
and
into
xchg
or
inc
pop
es
xor
mov
xchg
jo
je
aaa
sbb
out
loop
jnp
popa
jno
cmp
dec
dec
fiaddl
notl
xchg
jmp
sub
imull
cwtl
popf
cmp
test
ds
jns
imul
jo
inc
cld
shll
in
sbb
jecxz
jmp
loop
mov
outsl
mov
movsl
push
dec
xor
mov
dec
inc
jmp
xchg
dec
inc
arpl
aad
mov
push
aaa
mov
gs
gs
cmp
daa
cmp
sub
ret
dec
sub
fisttpl
repnz
jg
jmp
push
inc
mov
je
mov
sbb
lret
jno
or
imul
jecxz
mov
xchg
adc
add
add
popf
adc
mov
jecxz
ss
in
xchg
pop
js
imul
dec
mov
xchg
lea
mov
es
int
and
cli
push
lcall
jnp
xor
fbld
lock
test
inc
mov
mov
pop
mov
xchg
mov
scas
lret
jbe
out
popf
cmp
sbb
notb
ss
sar
scas
daa
inc
iret
or
dec
and
adc
push
sti
push
bound
inc
add
and
fwait
push
insl
dec
fld
xchg
les
cmp
mov
stos
shll
add
jle
ffreep
add
xorl
push
cltd
out
stos
in
clc
mov
and
dec
addr16
cld
mov
sub
xor
ja
ss
lahf
xchg
nop
pop
outsl
sub
adc
jle
enter
xor
je
xchg
mov
movsl
mov
xchg
int
lahf
insb
inc
loopne
xchg
mov
iret
mov
jl
pushf
xchg
xchg
cmp
jle
add
sub
push
das
pop
xor
and
push
jg
dec
ss
outsb
mov
cli
or
xlat
pop
sbb
lds
adc
xor
loopne
inc
mov
adc
in
sti
hlt
xor
vsubsd
daa
rclb
mov
cmp
sub
ja
pop
mov
xor
sahf
mov
pushf
cmpsb
xor
loop
mov
pop
mov
push
out
xchg
movsl
les
in
sbb
inc
repnz
push
test
icebp
push
aaa
push
mov
lods
xchg
iret
sub
add
adc
xchg
je
pop
mov
mov
cmp
mov
mov
pop
fs
aas
sbb
adc
out
cmp
or
leave
jae
push
mov
and
inc
les
sahf
mov
cld
pop
iret
inc
sbb
gs
and
enter
ds
mov
mov
adc
outsl
push
aaa
in
dec
out
lahf
and
lcall
aam
adc
jns
cmpl
mov
repnz
push
cmpsb
sub
or
dec
test
push
and
dec
mov
rclb
jae
or
push
fsubrs
mov
fwait
shlb
aas
cltd
push
stos
outsl
pop
mov
mov
xchg
jl
cltd
mov
clc
jo
mov
or
pop
or
icebp
loope
xor
pop
fildll
pop
fsts
addr16
mov
xchg
div
mulb
aad
xchg
dec
addr16
xchg
mov
mov
imul
sub
mov
lds
movsb
arpl
out
test
shrl
sbb
or
inc
or
jle
mov
dec
movsb
push
inc
jg
cld
fidivl
mov
clc
cmp
sub
inc
jge
ffree
add
xchg
sub
mov
jle
sbbb
adc
mov
adc
mov
push
cmp
fwait
ljmp
xorl
int3
enter
dec
push
push
inc
jno
pushf
sub
mov
loopne
in
pop
pop
jnp
stos
jns
aas
into
pop
sbbl
xchg
lret
iret
xor
and
repz
pop
xchg
mov
es
sti
mov
adc
pop
fmulp
cmp
lcall
sub
xor
fsubs
or
adc
cwtl
push
cs
nop
rclb
jle
jne
cltd
mov
fst
mov
mov
out
and
adc
popa
cmp
xlat
sub
stos
popf
xchg
push
xchg
shll
xchg
add
ljmp
loopne
cltd
pop
aad
pop
and
or
jnp
jp
cli
sar
call
jo
cmp
int
and
mov
rorb
sub
lret
jns
push
adcb
ret
adc
jg
jae
lahf
jge
jle
fxam
xchg
out
add
sbb
push
lods
mov
js
xchg
loope
fmuls
add
out
xor
movsl
xor
dec
cs
xor
sub
call
xor
jl
mov
gs
jmp
xchg
sub
popf
arpl
sbb
rorl
and
inc
sbbb
arpl
inc
bound
scas
mov
aaa
xor
push
xor
cmp
arpl
cmpsb
fcmovne
sbb
push
adc
push
test
xchg
int
stc
push
icebp
popf
jle
and
dec
clc
cmpsl
inc
sbb
xchg
sbb
push
scas
jle
pop
movsl
mov
pop
leave
lock
inc
loope
add
cld
faddl
adcl
inc
andl
lret
pop
mov
sbb
bound
ds
aam
popf
adc
dec
jnp
cmp
pop
and
nop
bound
iret
ss
fdivs
in
lcall
xchg
shr
xlat
push
out
jg
scas
adc
sbb
pop
movsb
dec
cmpsl
or
nop
jecxz
fmuls
push
cmp
push
cwtl
mov
mov
xchg
inc
pop
and
fwait
test
or
dec
sub
mov
inc
mov
add
lods
lret
add
stos
inc
iret
aas
pop
xor
sub
push
xor
ret
cmpsb
mov
dec
push
out
dec
shrb
imul
mov
jns
loopne
loop
aad
mov
adc
das
pop
stos
push
sbb
scas
sbb
int3
outsb
das
sub
sub
shrl
in
aam
xor
inc
inc
cmpsl
push
into
leave
je
lret
stos
cmc
sahf
roll
xchg
or
hlt
mov
add
jg
js
adc
addr16
add
movsl
popa
out
stos
push
mov
adc
push
iret
xchg
les
mov
mov
push
ljmp
in
add
cmc
and
cmp
test
jge
push
mov
adc
xchg
mov
adc
push
ffree
and
push
jb
and
mov
and
adc
pusha
ret
sahf
das
lock
jno
mov
stos
xor
clc
pop
out
pop
jb
outsb
data16
aas
cmc
ret
cld
cmp
loope
adc
in
cmp
sub
aam
xlat
iret
cmp
les
push
xor
xor
mov
dec
scas
ljmp
inc
addr16
mov
test
mov
call
notb
push
dec
pop
std
nop
int
sarb
dec
mov
mov
ljmp
loopne
and
xor
loope
gs
mov
cld
adc
leave
jl
fwait
in
mov
popa
stos
inc
mov
mov
je
lods
dec
cld
cwtl
xor
inc
and
out
aam
sbb
fnstenv
xchg
leave
jno
push
in
add
xchg
into
mov
jns
stos
mov
xor
aam
jbe
xchg
fscale
jl
cmp
and
and
data16
jp
rorl
negb
jae
das
jbe
es
nop
xor
pop
add
lods
and
cltd
adc
clc
dec
adc
lods
or
mov
addb
clc
dec
add
xor
imul
ss
mov
dec
rcl
mov
shlb
xchg
insb
jb
pop
jo
lcall
call
fwait
mov
flds
sbb
outsb
push
cmp
mov
cmp
fsts
xor
dec
jle
mov
push
lret
adc
mov
cld
das
xor
clc
cmp
pop
add
and
and
test
cmp
or
lahf
lcall
mov
fs
cmp
cwtl
xchg
hlt
fimull
and
and
cmpsl
xor
icebp
xchg
mov
mov
testl
or
cltd
insl
mov
popa
mov
jp
jp
stos
fiadds
ja
fs
test
dec
add
icebp
loope
insb
push
fdivp
scas
fcompl
xor
add
rcrl
pop
xchg
or
cld
mov
inc
imul
sub
cmp
fadds
cwtl
stos
mov
sbb
das
loope
popa
outsl
je
ret
imul
in
inc
pop
and
stos
or
add
hlt
aas
aad
sti
sbb
sbb
push
jmp
and
nop
lods
or
adc
clc
stos
addr16
jb
or
cmpsl
cmc
sti
cs
popa
mov
mov
sarl
mov
lods
es
movsl
neg
xor
ss
dec
xlat
fldl
xor
cmp
or
fwait
adc
and
cmp
cmp
pop
cmp
jns
pushf
popf
into
push
dec
sti
xor
lcall
cmpsb
enter
adc
push
cwtl
outsl
sub
dec
push
push
pop
aam
jl
rcrb
cmp
xorb
mov
xor
jecxz
mov
inc
movsl
sbb
mov
sub
in
mov
push
and
mov
stos
xchg
jnp
xchg
inc
lock
fwait
push
cmpsb
add
icebp
inc
jne
add
sbbl
mov
dec
sub
out
repz
pop
out
mov
enter
push
push
out
mov
pop
sti
outsl
int3
xor
mov
imul
lods
mov
divl
rep
fdivs
push
xchg
mov
or
sub
cs
cmp
subb
xchg
mov
testl
orl
jmp
mov
push
pop
out
stos
jo
sub
pop
dec
mov
adc
mov
jmp
in
inc
mov
shrl
xchg
lea
lea
cltd
dec
cmc
add
mov
jno
sarl
int
sub
push
loop
push
pop
xor
jb
cmp
push
mov
sarb
mov
dec
mov
mov
ret
outsb
movd
inc
inc
lahf
push
pop
out
mov
adc
push
cli
fimuls
xor
cmpb
stos
lahf
fwait
or
jle
loopne
mov
xlat
push
jae
fidivrl
imul
arpl
pop
mov
mov
or
daa
xor
or
imul
stos
mov
mov
ret
lcall
aad
outsb
xchg
pop
rorl
test
mov
cli
orl
sub
enter
ret
inc
pushf
add
aam
xchg
scas
in
out
and
bound
ja
cwtl
gs
adc
ret
sbb
pusha
add
inc
sub
lcall
mov
int3
push
or
loop
lods
xor
cmp
lahf
jg
sbb
pmaxsw
xchg
fisubl
sarl
repz
add
sbb
je
shrb
cmpsl
mov
dec
fimuls
mov
outsl
cmp
xchg
lahf
lcall
jg
fsubrl
push
add
shll
test
mov
jmp
jb
pop
sbbb
sbb
mov
add
int3
xchg
clc
jns
sub
insb
jnp
add
fadds
pop
fwait
mov
mov
jecxz
pop
push
xchg
xchg
fstpt
movsb
push
sub
popa
negl
rorb
sbb
push
ljmp
mov
bound
movsb
inc
gs
hlt
or
out
out
inc
sbb
add
add
ss
cmp
jge
inc
popa
loope
push
lods
lahf
jne
mov
push
add
int3
sahf
mov
add
je
fcmovu
add
xchg
jp
lea
inc
es
lahf
ret
rorb
adc
mov
es
rol
mov
pop
xchg
xorb
pop
cmp
sti
xchg
sahf
and
add
lret
fiaddl
inc
xchg
fcom
add
jne
popf
xchg
jecxz
mov
les
scas
add
push
mov
xchg
pop
dec
xchg
jp
les
shlb
mov
nop
or
call
fs
stos
pop
or
scas
jg
test
pop
or
mov
jle
lahf
xchg
pushf
mov
pop
popa
lea
dec
rolb
inc
jbe
testb
jmp
repnz
popa
pop
pop
out
xchg
jmp
xchg
push
shl
mov
push
shll
in
mov
xchg
in
mov
adc
mov
mov
faddl
xchg
dec
lea
push
rolb
ror
loop
shl
nop
arpl
mov
shll
xchg
inc
add
mov
xchg
out
outsb
mov
sub
inc
test
cs
push
jno
lods
clc
andb
testb
add
fs
push
sarl
xor
lret
rcll
imul
scas
out
push
inc
hlt
add
clc
leave
push
stos
add
mov
push
pop
adc
fistps
sub
outsl
jno
mov
inc
notb
cwtl
ss
fstpt
fs
pushf
gs
sub
xchg
jge
insb
inc
bound
jbe
pop
loope
enter
jp
or
shll
or
repnz
mov
or
xchg
sub
mov
mov
cmp
lea
cli
cmp
mov
xchg
imul
test
lahf
addr16
outsl
inc
dec
xchg
xchg
scas
movsb
mov
pop
sub
aas
mov
shll
jge
test
pop
jmp
xchg
shll
mov
cltd
daa
xchg
push
push
mov
jge
xchg
cmp
out
mov
mov
call
sub
mov
imul
imul
jae
mov
mov
in
fistps
mov
jno
jp
mov
lds
mov
xor
xchg
mov
enter
pop
in
push
add
test
sbb
pop
aad
push
push
sub
ja
pop
outsb
pop
fistps
mul
mov
dec
jg
cli
xorl
cmp
fwait
push
mov
xlat
popa
mov
fidivrs
mov
imul
in
sub
cwtl
rcr
adc
addr16
arpl
jecxz
push
jmp
in
add
rcrl
mov
pusha
fistpll
lea
sub
addl
pop
enter
cli
mov
jmp
rcrl
mov
push
fisubrs
mov
fwait
dec
adc
inc
cmpsb
sub
test
sub
adc
cwtl
push
xor
mov
rol
leave
xchg
add
mov
sbb
rclb
mov
in
mov
push
add
xlat
ret
stc
mov
clc
xchg
push
std
mov
sahf
inc
sub
push
inc
mov
xor
mov
pop
jbe
or
shlb
jle
xchg
in
stc
xchg
test
push
pop
or
cmp
daa
repz
xlat
jle
movsb
ds
dec
aaa
lret
arpl
pop
push
pop
sahf
cmpsl
inc
fdivrs
cmpsb
mov
sbbb
xor
mov
decb
xor
xchg
sub
fst
std
mov
sbb
xchg
and
jb
mov
or
arpl
sbb
daa
popa
sarl
call
jnp
or
popa
xchg
stc
mov
and
push
pop
aam
mov
loop
xchg
pop
sbb
test
ret
xchg
xchg
add
add
sub
lahf
xor
xor
mov
hlt
lret
jo
inc
movsl
lock
cld
add
fs
mov
mov
or
les
aaa
mov
shlb
scas
bound
cmc
mov
sbb
clc
dec
std
mov
iret
dec
aaa
sbb
inc
insb
fmulp
and
lock
ja
sbb
inc
xor
xchg
xor
pushf
fidivl
cs
shrb
mov
xor
sbb
shlb
fistpll
test
jmp
inc
mov
jns
mov
mov
xor
mov
repnz
testb
xor
xchg
jnp
in
mov
push
xchg
sub
aad
repz
jmp
int
sbb
push
js
pop
xchg
add
daa
loopne
aas
fistpll
inc
in
dec
inc
iret
push
pop
orb
sarl
sub
jge
dec
pop
sbb
xchg
xchg
insl
fwait
icebp
hlt
mov
xor
xchg
cmp
mov
xor
sbb
jge
sub
cwtl
push
and
ljmp
sbb
dec
inc
fcoms
rol
push
mov
jmp
test
xchg
mov
aad
add
std
rolb
sub
jmp
scas
adc
sbb
jmp
jne
jp
jo
outsl
adc
jne
imul
dec
lret
pop
inc
int3
mov
and
scas
mov
inc
sbb
jb
push
movsb
lock
inc
repz
outsl
arpl
fdivrs
lcall
rorl
push
popf
cmc
cmp
cltd
cmc
xor
or
mov
mov
add
ret
cld
jg
mov
add
inc
fmull
push
ss
cs
or
push
mov
inc
pushf
lret
and
mov
push
std
cwtl
mov
jmp
adc
bound
lahf
push
sub
in
clc
cwtl
mov
test
addr16
bound
sub
xchg
pop
dec
repnz
cltd
sub
cltd
push
rcl
out
std
xlat
mov
fbstp
stos
mov
mov
hlt
fwait
cltd
xchg
mov
xchg
movl
ficoml
arpl
adcl
lds
cmp
or
mulb
and
sub
popf
push
lock
adc
pop
add
jecxz
pushf
inc
push
fdivrs
into
cmp
mov
test
cld
jns
jb
cmpsl
dec
scas
fsubr
mov
aad
ljmp
sub
sbb
mov
mov
xchg
repz
in
dec
adc
sub
fwait
xor
xchg
pushl
and
and
std
sub
push
jmp
sbb
fs
or
int3
inc
pop
int3
and
or
jb
fidivrs
mov
incb
sub
divl
outsl
dec
cmp
jg
cmpsb
fldcw
in
sti
mov
xchg
sbb
sbb
test
or
mov
nop
sub
and
sub
inc
push
add
and
in
push
fildl
mov
cmp
push
and
pop
aad
imul
loop
jae
imul
sub
aaa
lods
xor
or
out
xor
inc
ret
mov
jecxz
sub
in
roll
ret
cmp
inc
jge
lret
stos
in
arpl
jmp
add
mov
push
push
test
cwtl
adc
aad
mov
mov
add
int3
or
or
fucomip
sub
mov
lahf
movsb
stos
ja
sub
pop
push
jge
mov
les
xchg
inc
sub
push
movsb
inc
jecxz
out
in
inc
jle
pop
lock
repz
leave
jb
add
inc
dec
xchg
orb
jno
and
mov
iret
sub
arpl
in
fldcw
mov
cli
xchg
xor
mov
daa
dec
sbb
and
out
or
loop
ljmp
dec
ret
and
jb
add
mov
scas
cmp
mov
sbb
pop
xor
hlt
mov
dec
jle
push
add
clc
nop
in
stos
mul
cs
xor
loopne
test
pop
xor
bound
pcmpgtb
inc
or
pop
mov
ret
test
push
aaa
gs
cmp
repz
fsub
pop
add
mov
pop
xlat
jle
test
sub
loope
addl
and
lods
cmpsb
pop
repnz
jmp
lods
mov
fildll
jno
fs
and
lea
cmpsl
js
dec
addb
daa
movsb
dec
push
xchg
push
or
clc
out
or
push
jp
scas
push
outsb
or
mov
sbb
inc
jbe
push
shl
mov
cmp
cmp
and
xor
ficoml
pop
xchg
aam
std
inc
out
pusha
xor
idivb
inc
lea
js
sbb
idiv
mov
lret
xchg
and
lcall
into
mov
mov
lret
ja
xchg
push
int3
gs
mov
mov
fcoms
aam
dec
sahf
mov
push
add
and
push
gs
into
inc
jmp
xorb
mov
mov
or
push
scas
xchg
ficomps
jecxz
sti
inc
add
push
js
aaa
fisttpl
mov
jle
lahf
ficompl
out
push
jne
mov
inc
add
out
push
xchg
sub
fdivrs
sbb
adc
sbb
js
std
mov
jg
fcomip
mov
fildll
push
divl
sahf
call
mov
push
cld
fs
test
test
jg
test
lahf
jp
xlat
imul
adc
dec
xor
mov
imul
hlt
fwait
dec
xchg
fs
mov
lret
stos
sbb
xchg
xchg
inc
js
pop
pop
rep
mov
mov
shrb
mov
in
jae
lods
inc
mov
fdivrl
lods
jp
mov
mov
clc
stc
int3
sahf
adc
xchg
jp
gs
lret
enter
and
jmp
roll
mov
aam
sahf
push
movsb
out
mov
cld
lods
dec
cmp
push
pop
sti
out
pop
gs
pop
lods
jmp
pop
push
mov
lahf
std
push
imul
push
bound
add
sahf
xchg
mov
mov
xchg
adc
insb
mov
icebp
lret
dec
lret
cmpsb
cmp
pop
lahf
pushf
das
inc
dec
sahf
lcall
adc
std
mov
cmpsb
jp
mov
push
mov
sub
and
loop
loope
mov
imul
jnp
adc
in
sbb
mov
pop
jns
cmp
xor
sub
jp
loope
xchg
push
fistps
stos
enter
mov
mov
push
inc
aam
aas
xchg
iret
hlt
fmull
mov
ficoml
lret
pop
fdiv
mov
and
mov
or
leave
push
mov
jnp
iret
sti
out
test
mov
inc
adc
outsl
jge
mov
mov
pop
dec
gs
daa
icebp
cmp
aad
inc
iret
jno
leave
imul
adc
inc
adc
jo
ret
adc
and
push
aad
xchg
jg
in
pop
test
sbb
fcmovbe
xor
mov
xor
add
ss
fcmovu
xor
jne
mov
test
lret
pusha
addr16
mov
or
js
and
jns
scas
push
jo
je
xor
sub
mov
test
repnz
or
mulb
xchg
pushf
xchg
hlt
xlat
cs
pop
and
push
mov
mov
mov
shll
fcomi
test
loopne
push
xlat
mov
inc
je
cmp
std
mov
orb
inc
cmc
fldcw
push
xchg
in
imul
mov
arpl
andl
loope
inc
cmp
sbb
push
repz
mov
pop
and
pushf
stos
mov
cmpsb
add
mov
addl
xchg
xorl
xor
xor
ds
cltd
mov
scas
or
out
add
push
bound
imul
cwtl
loop
repz
in
dec
push
fsubrs
push
fwait
lock
dec
lcall
sub
jns
mov
ret
addl
inc
shlb
mov
out
inc
cmpb
stos
mov
fs
mov
das
test
into
loope
cmpsl
add
sbb
dec
mov
rorb
mov
or
add
and
gs
adc
push
xchg
sbb
fwait
sub
sbb
stos
leave
pop
pop
jle
jp
filds
call
in
orl
or
pop
adc
lds
in
xorl
fadds
mov
fsubrs
xchg
xor
ljmp
lds
mov
int
in
call
jb
push
mov
mov
icebp
pop
scas
mov
in
loop
lret
mov
xchg
jb
shlb
movsb
outsl
arpl
aad
cwtl
outsl
scas
mov
or
and
mov
subl
push
mov
loop
sub
loope
pop
lahf
sub
test
xor
sub
cmp
inc
sti
fcmovne
sub
cwtl
repz
test
lock
fcomps
lret
pop
aam
loop
call
push
lea
sub
cmpb
inc
test
and
or
mov
addr16
aad
psraw
xor
push
rcrb
dec
dec
cmpsl
insb
ret
add
lret
cwtl
mov
out
pop
lret
shll
les
mov
add
pushf
sahf
pcmpeqw
gs
out
pusha
ret
cmp
addr16
stc
clc
dec
movsb
inc
js
leave
icebp
push
ss
xchg
test
fiadds
out
push
inc
fcomps
pop
les
cmp
pop
xlat
xchg
fimull
dec
vpackuswb
mov
or
in
push
stos
inc
inc
xchg
jo
xchg
push
ret
loop
outsl
xlat
test
and
fmuls
or
mov
sbb
jnp
mov
cmp
pop
and
sbb
leave
scas
cmc
xchg
outsb
mov
movsb
hlt
inc
pop
negl
push
pop
mov
les
out
jne
mov
mov
loop
mov
stc
ret
fwait
les
stos
xor
in
dec
bswap
cmpsl
push
mulb
dec
mov
mov
inc
in
pop
idivb
imul
add
xor
adc
mov
xor
les
insb
lea
and
mov
mov
psrad
rsqrtps
xchg
mov
bound
xchg
inc
dec
loop
push
in
out
mov
xchg
push
rcll
inc
push
cmp
lcall
ftst
inc
sbb
pushf
dec
sub
fmuls
jecxz
jmp
push
nop
or
push
and
fnstcw
fdivp
cli
sbb
cmp
out
push
adc
adc
fwait
mov
sti
dec
dec
inc
jmp
jge
cmp
jo
cmc
cmp
or
int3
js
xchg
cmp
sub
push
hlt
jge
xlat
sbb
mov
stos
inc
add
jle
sahf
pop
push
push
adc
mov
fs
inc
pop
lret
stos
push
push
ffree
dec
lret
repz
int
nop
and
pop
sub
imul
jns
in
pop
mov
outsb
add
lods
add
mov
push
and
xor
mov
fwait
pop
add
sub
mov
data16
fneni(8087
cld
sub
clc
xor
pop
bound
push
mov
cmpsl
jg
xchg
and
imul
sub
fidivrl
sub
std
jne
subb
push
lahf
sbb
fistl
xor
xchg
mov
fdivs
sti
lcall
stc
ja
mov
xchg
push
pop
mov
negb
mov
jns
pop
sub
inc
inc
pop
inc
pop
adc
and
cmp
sti
fists
in
sarl
cmc
inc
sub
iret
addr16
iret
cmp
mov
leave
and
es
cmpsl
or
dec
ja
ds
pop
xor
or
cmp
fsubrl
inc
dec
orl
cltd
pushf
sbb
add
ja
cmp
insl
aaa
repz
sbb
or
inc
dec
mov
mov
ret
pop
cmp
mov
in
mov
dec
mov
add
cltd
and
or
push
ds
bound
xchg
in
or
inc
inc
testb
mov
mov
add
xor
push
stos
dec
push
ja
loop
push
out
or
clc
aaa
fwait
gs
inc
ljmp
popf
outsb
mov
cltd
mov
jne
ljmp
lcall
mov
jl
fildl
repz
insb
rol
pop
jp
sbb
push
cmp
jg
stc
ret
fildll
xchg
jnp
lcall
cmpl
fcomi
add
jecxz
loop
ficomps
fcoms
enter
and
insb
repnz
pushf
push
repz
divl
mov
cmp
das
mov
shl
outsb
mov
xchg
test
aas
push
loope
mov
dec
xchg
test
cmp
and
inc
bound
lret
dec
mov
push
bnd
jge
imul
cmp
mov
outsb
xchg
adc
add
and
mov
or
jbe
out
sar
inc
mov
add
jno
xor
xor
inc
sbb
inc
dec
inc
decb
stos
mov
fldenv
outsl
and
rcll
sbb
xchg
dec
pop
xlat
cld
mov
mov
sbb
mov
or
into
add
and
cmp
push
loop
sbb
popa
mov
mov
xchg
outsl
lret
lret
mov
shr
sbb
aaa
es
xor
mov
outsl
add
movsb
or
insl
cmpl
icebp
add
mov
dec
inc
fmul
sub
xor
popa
imul
mov
cmp
es
or
xchg
pop
fbstp
sbb
jecxz
adc
mov
jae
inc
sbb
stos
sub
cltd
adc
add
icebp
loope
sbb
jnp
fnstenv
loop
lcall
nop
jg
jb
jle
pop
push
pop
mov
pop
sarb
inc
jno
mov
pop
pop
ss
mov
pop
sti
pop
mov
xor
loope
and
pop
movsb
mov
mov
dec
push
jb
insl
add
dec
mov
mov
mov
shlb
pop
push
lcall
push
int3
mov
push
sub
cmpsl
cli
mov
push
clc
push
fwait
jle
ja
mov
repnz
pop
test
loopne
adc
mov
jae
scas
sub
or
stos
cmp
push
and
out
fisttpll
pop
mov
mov
aas
cmc
lds
inc
fsub
rcll
mov
test
cli
and
xor
rcll
mov
push
or
xor
mov
or
repnz
mov
fadd
and
sub
jne
bnd
inc
jle
pop
jp
jb
or
push
xchg
mov
scas
test
sbb
insl
fdivrp
jge
ror
outsl
stos
imull
sbb
cmp
in
aam
mov
xor
inc
push
outsl
shll
adc
dec
cli
push
pop
sub
sbb
test
mov
inc
sub
mov
adc
clc
pop
jno
pop
mull
arpl
jp
data16
inc
pushl
sahf
jg
scas
mov
jl
jmp
pop
mov
dec
xchg
jne
xchg
xchg
orl
mov
pop
leave
pop
leave
cmpsl
cmp
fidivs
clc
mov
je
push
inc
xor
aas
xchg
jmp
cmp
inc
and
popf
sbb
push
xor
fwait
dec
add
leave
mov
in
or
mov
pop
cmp
cld
jae
inc
xor
test
dec
lods
test
into
cmp
xor
inc
jnp
push
imul
lock
addr16
int3
xor
pop
rcrl
jl
xor
add
or
inc
lret
stc
xchg
dec
lods
or
mov
in
sub
and
sub
cs
fwait
movsb
push
push
outsb
es
cmpsb
push
ret
xchg
loopne
ss
xor
shr
and
icebp
xchg
or
imul
xchg
in
int3
xlat
and
add
mov
pop
jge
mov
out
xchg
dec
leave
inc
mov
shl
xchg
jle
in
and
in
int3
adc
dec
sub
sbb
jp
xor
mov
adc
ja
loope
fimuls
xor
inc
insl
xchg
lods
pop
mov
inc
in
inc
mov
push
adc
add
mov
cmp
adc
push
fstpl
das
mov
fnstenv
mov
insb
jmp
pusha
loopne
out
out
pop
sbb
fdivs
rorb
xor
das
pop
cmpsb
fstpt
pop
in
sbb
push
jno
xchg
rclb
pushf
das
repnz
xor
loop
mov
outsb
mov
in
inc
jl
call
xacquire
mov
lret
pop
lret
jnp
scas
sbb
fisttps
cmp
push
adc
sub
mov
ss
xchg
adc
push
test
jl
inc
sub
inc
inc
cmc
and
call
jno
sub
sbb
add
xchg
incb
out
push
sub
jns
fadds
ds
rol
pushf
jmp
sbbl
mov
daa
adc
in
aas
inc
packuswb
mov
bound
cmc
jo
in
int
mov
loop
incb
out
sub
xor
or
mov
xor
aad
lea
push
mov
jae
data16
sti
add
test
and
jle
ret
fmuls
pop
subb
gs
pop
cmp
pop
ret
sbb
jne
les
sbb
dec
pushf
xchg
mov
adc
ret
jl
jns
xor
jno
mov
adc
sbb
pop
sbb
rolb
cmp
and
sub
fs
inc
cmp
inc
cli
imul
lods
stos
sbb
nop
mov
lds
lcall
sbb
cmp
add
and
nop
rclb
pop
fldl
cmp
push
inc
stc
mov
inc
sub
jmp
xor
fcoml
add
cmpsb
cmp
decb
xchg
mov
orb
pop
cmp
imul
jl
cmp
test
jnp
sarb
lahf
pop
push
cmp
lret
inc
stc
subb
orb
pop
xchg
fmuls
jmp
mov
jl
inc
lcall
dec
imul
pop
lea
sub
arpl
mov
jl
jb
in
cmp
or
jmp
outsl
dec
addr16
fisttpl
loop
pop
sti
imull
xor
inc
outsb
insl
push
mov
aad
or
inc
int3
out
lods
mov
inc
shrl
mov
aad
jmp
add
push
cli
mov
xchg
cwtl
add
je
push
loopne
jbe
aad
sub
lret
jp
lds
cmpsb
xchg
adc
jmp
mov
xchg
insb
je
jle
mov
push
jb
mov
daa
ljmp
push
ret
fistpl
or
outsb
pop
push
fs
xor
loop
into
push
inc
sbb
push
outsb
lods
in
jmp
lcall
rorb
loop
push
pop
mov
arpl
stos
adc
imul
pop
jg
in
mov
out
mov
mov
insb
sub
mov
xchg
mov
loope
fidivrl
std
outsb
inc
push
jmp
and
lea
test
mov
xchg
pop
cld
cmc
pop
into
sti
add
jbe
mov
sub
jns
dec
pop
jae
outsl
cmp
stos
pop
nop
aad
push
and
fmuls
jne
jg
xchg
lock
out
sbbb
test
out
daa
aaa
fcom
mov
and
popa
in
xor
mov
mov
ja
scas
jle
insl
or
imul
inc
jne
adc
sti
testb
cmp
lcall
mov
lea
shlb
loope
sbb
repz
popf
daa
dec
push
fstpl
pop
or
insl
xor
ror
push
fstpt
push
test
test
xor
mov
gs
cmpsl
popa
pop
call
mov
aad
repz
xor
cmc
mov
mov
jg
pop
xchg
orb
nop
cs
arpl
mov
insb
sahf
es
mov
sbb
in
sti
add
add
aaa
lret
mov
xor
in
mov
mov
jge
mov
loope
xorb
test
mov
dec
arpl
sarl
and
xor
mov
lods
cmp
dec
inc
mov
mov
clc
mov
shrb
fildl
int3
push
mov
or
in
dec
cmpsb
xlat
mov
push
pusha
gs
incl
dec
jmp
xchg
sbb
mov
inc
mov
in
outsb
gs
in
and
push
mov
popf
les
pop
leave
cmp
mov
sub
clc
out
pushf
and
lcall
sub
adc
cltd
das
dec
sub
imulb
pop
repnz
fimuls
mov
sbb
out
out
push
mov
pop
xlat
mov
lahf
jbe
sub
xor
mov
test
push
movsl
xor
test
les
js
out
mov
test
xor
adc
add
mov
into
clc
pop
add
scas
xor
fwait
push
data16
xchg
add
mov
xchg
add
fwait
push
dec
mov
loopne
mov
xor
dec
pop
and
jns
out
subl
dec
dec
loope
push
add
xchg
mov
js
jns
movsl
sbb
lea
call
and
xor
jbe
insb
mov
sub
pop
sti
push
lds
cld
push
jb
popf
fwait
mov
jecxz
add
pop
jp
jecxz
movsb
jno
lret
adcl
ret
mov
xor
or
arpl
fwait
push
adc
mov
shll
dec
inc
jns
loope
gs
mov
shll
mov
lds
cmp
ret
mov
bound
into
lea
das
mov
daa
or
sub
add
mov
dec
test
add
add
btc
das
cltd
push
push
mov
inc
pop
and
rorl
cmp
mov
pop
mov
stos
stc
mov
popf
call
nop
in
inc
adc
inc
push
sbb
in
and
mov
int3
pop
mov
mov
jbe
xchg
adc
stos
cmp
mov
pop
add
jecxz
cmp
push
in
stc
push
push
fstpt
or
cmp
mov
or
cwtl
push
enter
mov
push
aas
aas
mov
mov
cmpsb
ds
jnp
jge
movsl
mov
arpl
shr
mov
mov
xchg
sbb
andb
mov
xor
xchg
cmpsb
fistpll
in
in
xchg
repz
mov
sub
lcall
test
and
adc
adc
popa
and
enter
pop
push
mov
xor
xorl
adc
dec
repz
mov
decl
inc
fnstcw
out
adc
lds
shr
mov
shll
or
test
adcb
add
add
icebp
sbb
mov
std
in
push
call
mul
or
sub
sbb
cmp
shrl
pop
ret
push
push
mov
pop
lret
sbb
xor
sub
pop
sbb
jns
or
mov
jo
imul
and
fcmovnu
aaa
mov
cmp
jbe
movsl
pop
jp
je
or
test
stos
lods
jne
repz
int
push
sahf
in
out
les
ljmp
mov
nop
fisubrl
push
pop
sub
push
or
mov
aam
and
dec
ss
add
xor
lea
sbb
and
cli
mov
das
inc
cli
shlb
push
adc
sub
mov
lds
mov
fmul
adc
or
cmc
scas
dec
sub
add
test
push
inc
cmp
cld
sbb
or
int3
jns
int3
pop
fadd
sbb
cli
imul
and
inc
sub
decl
das
lods
jl
xchg
jl
cmc
xchg
gs
pop
mov
or
and
sbb
inc
or
mov
int
or
xchg
out
pop
pop
flds
adc
nop
std
fstps
bnd
in
lcall
cmc
inc
push
loop
js,pt
ror
sbb
jo
dec
mov
fisttps
test
xchg
les
hlt
ss
dec
xor
test
test
pop
cli
sub
or
mov
push
mov
fwait
outsb
adcl
jmp
and
test
test
and
jne
dec
icebp
pop
fisttpl
mov
enter
cmp
add
out
bound
imul
decb
or
cmpsl
dec
xchg
pop
jbe
repnz
fidivl
and
inc
xchg
xchg
push
inc
mov
xchg
imul
daa
int
inc
dec
xchg
and
inc
cmp
arpl
pop
notb
fwait
pop
mov
xorl
cmp
out
cli
cmpsl
lcall
daa
aaa
push
sahf
mov
inc
xorl
scas
aad
xor
pop
push
sbb
cltd
dec
in
mov
inc
leave
filds
cmpsb
sbb
or
lock
imul
dec
adc
sub
jmp
clc
sub
iret
jmp
fdivp
mov
and
inc
stc
push
cmp
in
inc
popf
mov
aaa
jo
outsl
jp
pop
loop
push
mul
dec
jge
cmp
jbe
jl
mov
pop
add
lret
and
les
jmp
push
jno
mov
subl
add
mov
movsl
jno
add
aaa
in
mov
or
xor
inc
fistps
imul
clc
gs
loope
cmp
add
sbb
iret
lock
loop
and
add
mov
sbb
mov
mov
inc
sub
sbb
push
jge
lret
jne
lcall
or
cs
cs
push
jmp
jno
imul
dec
je
imul
cmp
add
push
push
jmp
jo
add
inc
jbe
push
icebp
push
lods
fisttpll
icebp
sahf
xor
mov
xchg
daa
and
mov
std
xchg
loop
pop
and
mov
xchg
inc
lret
iret
cld
out
xchg
rcr
push
push
or
pop
push
js
sub
mov
sar
mov
xchg
pop
and
pop
fsubl
outsb
jns
ljmp
in
jle
dec
js
add
push
ja
outsl
mov
inc
out
stc
mov
and
or
andl
xchg
aaa
cmp
and
inc
repz
aaa
mov
or
cs
inc
lcall
and
or
cli
negl
cld
cli
adc
cli
mov
lahf
adc
sbb
xchg
test
cmp
das
and
push
push
mov
into
out
popf
cltd
std
jmp
pop
xor
adc
mov
or
dec
mov
std
pop
enter
cmp
scas
sub
test
dec
pop
ja
rcrb
jo
cmp
xor
out
test
xor
ljmp
out
mov
loope
add
sub
addb
push
jae
js
and
neg
jp
mov
xor
push
cmpsl
mov
mov
push
jns
mov
cmp
or
mov
fsubrs
rol
addr16
fcompl
add
or
pop
fistl
test
lret
fstl
xchg
jp
jne
inc
sbb
fsubl
movsl
out
scas
pop
out
xchg
nop
adc
notl
call
mov
jge
lret
sbb
push
movsl
and
or
push
and
ja
push
add
cltd
je
cmpsl
mov
add
stc
popf
andb
test
sub
mov
add
jle
cld
out
jo
aas
sub
inc
pop
pop
adcb
adc
push
sbb
push
add
sub
lcall
cmp
push
je
cmp
sub
mov
jnp
dec
testl
subb
in
push
mov
jo
inc
cmc
or
lock
push
int3
movb
addr16
inc
xor
loop
ret
pop
gs
fisubrl
dec
inc
in
adc
xchg
mov
sbb
or
and
mov
out
add
das
jg
movsl
xor
lea
fidivl
sub
sbbb
mov
loop
shrb
xchg
dec
mov
xchg
inc
push
cmc
sahf
fnstsw
cli
daa
mov
pop
and
sub
sahf
arpl
pop
xchg
jp
popf
xor
mov
mov
je
mov
fmull
adc
push
mov
cmpl
and
sarb
mul
mov
add
mov
sbb
pop
movsl
lock
std
std
loope
lock
adc
sbb
gs
lock
fstp
inc
jl
jle
sub
popf
daa
mov
mov
out
es
mov
cmp
xor
add
and
fdivrl
dec
jmp
ret
push
repnz
jnp
fistps
jae
repnz
xor
inc
sarb
inc
dec
sbb
loope
dec
push
mov
int3
or
mov
sbb
push
mov
xchg
jecxz
das
fildll
mov
sub
sub
inc
stc
in
mov
pop
add
cltd
testl
mov
pop
push
into
popa
sti
cli
adcl
daa
lods
push
sub
data16
push
adc
movb
ljmp
pusha
xchg
xchg
imull
dec
pop
push
xchg
jne
les
mov
mov
aaa
mov
fwait
loop
nop
cs
push
inc
xor
or
xchg
or
dec
dec
mov
push
or
repnz
sub
scas
fstpl
mov
ja
mov
neg
out
shl
pop
xchg
and
fs
or
ds
push
divb
push
dec
sub
cwtl
mov
pop
mov
cmp
jp
add
in
xor
out
jae
flds
inc
aad
ljmp
pusha
push
rcrl
and
push
jl
repnz
xorl
sbb
sub
jge
leave
xor
cmp
std
fs
jg
aad
out
xor
sub
adc
sbb
fwait
in
sbb
leave
cmp
add
rcl
fucomip
xchg
leave
mov
test
jnp
in
inc
cmp
pusha
aad
je
inc
jae
mov
cmp
inc
shr
xchg
cmpsl
cld
mov
fldcw
mov
mov
pop
rolb
xchg
or
and
pushf
mov
and
test
into
outsb
mov
jge
fsubrs
mov
jbe
mov
jbe
mov
lcall
xchg
cmp
pop
out
ja
xchg
inc
sub
xor
shlb
out
push
roll
pop
into
pushl
sahf
cld
cld
and
ljmp
js
cld
shrb
adc
clc
inc
dec
push
fistl
mov
add
sub
mov
stos
and
push
xor
jbe
pop
and
fisubrs
test
pushf
insb
out
les
mov
pop
xchg
adc
repnz
jl
push
and
inc
sti
scas
and
mov
bound
lods
dec
sbb
mov
cmp
mov
inc
aas
cld
sti
insl
or
adc
mov
mov
mov
mov
xor
inc
nop
clc
xor
iret
jp
fsubrs
out
cmp
hlt
mov
out
cld
and
cli
inc
add
ss
xchg
insb
fdivr
sbb
sbb
cmp
hlt
cmc
sbb
mov
clc
mov
push
iret
jae
inc
hlt
cmp
imul
movsl
out
add
stos
cmp
mov
or
pop
jle
xchg
sub
jb
mov
mov
push
outsb
sbb
jp
mov
mov
and
cmp
arpl
mov
adc
test
icebp
inc
dec
aad
sbb
ja
and
arpl
mov
fcomps
lcall
int3
sti
mov
pop
movsb
fwait
jae
aaa
cmpsl
add
mov
sbb
push
aam
sbb
cwtl
push
sbbl
pop
clc
nop
fwait
es
mov
mov
mov
dec
dec
and
pop
jo
add
sahf
rclb
jo
cmc
movl
cmpsl
hlt
setle
into
call
mov
int3
xor
faddl
addr16
xchg
mov
cmp
out
mov
loopne
cmpsb
test
rorb
mov
lea
and
icebp
insb
push
cmp
dec
lods
jmp
out
xchg
inc
int3
lcall
je
jg
jge
stos
or
sbb
pushf
nop
pop
mov
hlt
cld
adc
xchg
rorb
fsubrp
jbe
jle
inc
adc
popa
stc
pop
inc
sub
xchg
add
pop
pop
push
arpl
and
push
ffree
mov
stc
scas
das
sbb
or
outsb
xchg
mov
call
sbb
ds
push
fwait
jns
idivl
ljmp
cwtl
lcall
and
loopne
loop
jno
jge
sub
ss
mov
and
dec
insb
cwtl
mov
and
jmp
repnz
mov
or
cmp
pop
cmc
repz
out
mov
dec
outsb
mov
cmp
popa
pop
push
inc
into
sbb
andl
stc
mov
ja
adc
lea
jl
cmc
mov
lods
dec
cmpl
jp
cld
sbb
mov
push
inc
divb
hlt
mov
jle
test
mov
inc
pusha
pop
nop
fdiv
aas
clc
out
push
mov
add
mov
notl
es
adc
jb
jne
cmpsl
movsl
jbe
sub
adc
shr
enter
sti
xchg
push
call
add
xorl
scas
shlb
adc
mov
or
out
push
inc
rorb
sahf
sub
add
aaa
mov
outsl
mov
cli
shlb
jmp
jp
popf
add
mov
jge
decb
dec
lcall
fstpt
lret
inc
int
xchg
sbb
sahf
movsb
and
jns
arpl
mov
adc
sbb
dec
mov
daa
scas
inc
cmp
and
push
push
loope
js
xchg
stos
push
leave
dec
clc
sub
insb
mov
fsubrs
aam
int
ret
ds
sbb
arpl
inc
cmp
ss
lret
pop
incb
mov
sarb
mov
lcall
loopne
jge
push
jno
mov
sti
test
popf
int
es
jge
jmp
mov
lds
and
enter
mov
pop
in
xchg
movsl
lods
push
adc
or
mov
jb
inc
rorl
mov
lock
mov
add
and
adc
cmp
jo
pop
fmuls
jp
push
cmp
cld
mov
or
jle
sbb
mov
imul
xor
adc
fs
jns
sti
dec
adc
loope
std
xchg
xor
inc
push
inc
jae
dec
jae
rsm
adc
outsl
in
jle
push
icebp
jp
jp
and
nop
cmp
inc
and
push
ja
jne
xchg
popf
xorl
addr16
outsb
adc
and
push
fiadds
hlt
adc
mov
push
mov
insl
arpl
test
addr16
ja
jecxz
sbb
dec
pop
push
sti
push
iret
inc
subb
into
sub
jge
dec
jge
mov
inc
jg
sbb
add
mov
fnstsw
lea
orb
rorl
sahf
stos
lret
lahf
into
negl
xor
pop
add
adc
mul
push
in
cli
jns
lea
call
sub
in
mov
mov
into
ret
cmpb
adc
dec
mov
xchg
sbb
sub
aas
xchg
pop
adc
xor
bound
pop
iret
lock
cmc
or
fucomi
jmp
inc
or
sbb
inc
and
inc
xor
push
test
pop
and
cmp
out
ss
pop
inc
jle
aam
inc
ds
filds
add
or
dec
inc
shll
lock
int3
hlt
jg
xor
sarl
test
cmp
pop
inc
mov
fidivrl
or
js
pop
push
xor
lods
dec
mov
pop
pushf
out
jl
int
jns
sbb
push
adc
enter
pop
lods
pop
sbb
sub
push
xchg
jp
push
movsb
dec
add
scas
jne
aas
or
or
sub
and
ds
xor
loopne
test
sbb
pop
out
push
inc
inc
les
xchg
xchg
pop
out
lea
or
xor
cmp
inc
mov
addr16
dec
in
stos
add
jle
es
cmp
sub
fs
xchg
mov
test
or
inc
xchg
lds
into
sub
in
adc
lret
sub
xchg
mov
inc
ds
scas
add
shlb
inc
adc
fildll
jl
movsb
push
and
je
jle
fs
mov
mov
sti
pushf
sbb
arpl
ret
sbb
mov
scas
cwtl
adc
xor
test
xchg
push
xchg
pop
inc
or
mov
xor
jns
mov
fwait
jg
andl
pop
ss
jne
fs
das
mov
or
mov
daa
push
sbb
mov
cmc
fiadds
lcall
mov
dec
sub
ds
jne
mov
and
out
mov
xchg
mov
adc
stos
dec
pop
fnstsw
fcomp
jmp
or
push
es
mov
shlb
es
push
call
cmp
sbb
lahf
mov
push
rcll
daa
sub
and
push
sub
sbb
jae
adc
idivl
popf
jae
out
fildl
lods
add
movhlps
out
addr16
mov
push
int3
push
ret
adc
sub
pop
add
push
jecxz
sub
sub
xlat
ljmp
imul
mov
jne
sbb
xorl
xor
xor
std
sub
fwait
pop
mov
dec
xor
add
or
int3
je
jecxz
das
movsl
ret
scas
shrb
fwait
sbb
call
addr16
push
subl
mov
cmp
jns
test
inc
loop
or
lea
jno
dec
mov
mov
push
adcb
sub
xor
loopne
arpl
pop
movsl
mov
movsb
clc
subl
mov
mov
mov
inc
mov
mov
jmp
popf
movsb
mov
ret
dec
mov
inc
cltd
sub
push
scas
mov
or
fs
lods
mov
aas
aas
pop
sub
int
or
ds
sub
ss
inc
js
dec
inc
lret
nop
fstps
in
xchg
mov
out
rcr
mov
dec
pop
xor
push
leave
into
inc
roll
mov
mov
pop
jb
sub
add
mov
pop
adc
scas
xchg
jecxz
sbb
push
jbe
pop
push
das
cli
jns
sbb
andb
fstpt
jmp
push
sbb
mov
fcoms
shrl
dec
arpl
jg
xor
mov
cld
sbb
rcl
lret
jno
add
add
jno
cmp
mov
enter
xor
lea
ds
fldl
loop
mov
mov
xor
cli
lods
scas
jle
bound
jnp
sub
lods
arpl
push
adc
pop
movsb
mov
cmpl
sbb
inc
or
sarb
and
mov
xchg
sub
in
mov
jg,pt
rolb
pushf
mov
xchg
fwait
int
pop
or
jmp
mov
pop
jg
sub
cmpsb
mov
popf
jo
shll
cltd
mov
dec
into
sbb
in
mov
push
adc
mov
push
inc
mov
xchg
mov
test
xor
pop
aad
add
popa
add
mov
jl
pop
fcmovnbe
roll
sahf
nop
cmpsb
jecxz
sbb
add
clc
jo
clc
insb
fwait
dec
jge
cmp
mov
fs
fwait
hlt
jbe
lods
adc
stos
pop
das
test
pop
xchg
jg
in
stos
inc
mov
xchg
pop
dec
ja
adc
insb
jge
or
push
leave
in
repz
pand
int3
scas
inc
lret
push
inc
jge
test
push
mov
test
sbb
mov
xchg
adcl
pop
orb
test
xor
leave
cmc
insb
dec
leave
pop
jne
insl
xchg
adc
mov
loope
stc
fdivl
clc
test
fs
push
xchg
pop
xchg
imul
mov
mov
clc
test
js
sbb
int3
push
les
jo
mov
into
dec
mov
ja
mov
movsb
lds
mov
cmp
adc
mov
test
mov
fbld
jns
aam
mov
or
popa
mov
and
stc
xchg
and
lea
mov
sbbb
into
xor
fs
sbb
mov
sub
jecxz
pop
fcomip
inc
cmp
mov
sbb
mov
subb
mov
int3
repz
addr16
sub
sub
sbb
dec
xor
mov
aaa
outsl
mov
jl
mov
push
and
insb
or
mul
adc
ret
cmp
pusha
mov
and
jns
jmp
aam
sbb
scas
jmp
push
cmp
lcall
sub
sti
imul
bnd
negl
mov
mov
fidivl
cltd
push
out
xor
push
mov
xor
cltd
loope
std
in
rorl
cmp
mov
sarb
jp
decb
cmpsl
sub
inc
out
mov
addr16
sub
lock
inc
je
adc
fstp
mov
sbb
jp
or
and
out
or
xor
js
sub
dec
lret
jnp
mov
mov
ds
jle
jbe
push
nopl
cwtl
das
and
add
dec
inc
pop
lcall
mov
mov
xor
cmp
inc
sub
repz
mov
adc
cwtl
sbb
mov
rcr
popf
repz
push
addl
push
test
out
incl
cmp
mov
insb
test
xorb
pop
pusha
inc
adc
xor
subb
mov
push
add
pop
mov
jnp
or
mov
push
push
leave
adc
ja
nop
fbld
int3
dec
jno
in
lahf
cli
in
addb
jg
enter
cld
out
insb
mov
jne
xchg
or
pop
les
popa
inc
scas
shlb
imul
popl
mov
sbb
fstpl
xor
out
push
inc
mov
add
and
mov
pop
cmc
dec
shr
cmp
out
jp
test
in
call
movb
or
pop
aam
adcl
fbstp
pavgw
pop
loop
add
cli
inc
jmp
roll
or
and
jecxz
mov
mov
mov
cwtl
adc
or
gs
ja
out
push
mov
bound
std
jo
cld
pop
rorb
or
or
add
add
lds
dec
stos
adc
sub
insl
pop
inc
push
das
and
divb
adc
mov
inc
or
arpl
xchg
mov
mov
in
cmp
nop
bnd
enter
dec
gs
and
mov
add
mov
sub
sahf
mov
into
mov
adc
sahf
jns
and
pop
dec
or
rcrb
mov
dec
add
inc
xchg
inc
inc
fimull
shrb
dec
xor
or
mov
test
push
cmp
mov
adc
mov
mov
popa
xchg
push
sub
jb
stos
adc
cmc
pop
push
jb
ret
aam
sub
in
xor
sbb
xor
add
or
test
pusha
ljmp
jmp
adc
popf
or
xor
fcompl
loope
negl
mov
pop
nop
inc
xchg
inc
sbb
addr16
shrb
imull
imul
push
cmp
mov
js
sbb
cmp
aad
xchg
out
mov
xchg
mov
mov
push
into
frstor
and
stc
mulb
dec
jae
mov
enter
in
xor
mov
jbe
pop
xchg
or
call
adc
andl
dec
nop
lds
cld
cmp
ds
aam
push
jle
aam
sub
push
xchg
jge
xor
into
xchg
jle
dec
mov
add
mov
cwtl
mov
pop
xchg
das
push
out
or
mov
int
mov
aaa
test
dec
sbb
insb
daa
lcall
ret
push
stos
sub
push
mov
mov
sbb
xlat
lods
jae
mov
sbb
imul
jno
xchg
sahf
es
ret
mov
cmc
cltd
in
jne
fcmovu
mov
dec
iret
jae
insl
icebp
leave
sbbb
jg
pop
push
xchg
mov
xlat
cmp
push
mov
sbb
sub
or
addl
push
pop
add
xchg
jbe
adc
dec
pop
loopne
and
cmp
inc
pop
mulb
into
shrl
enter
lret
push
pop
mov
jge
jge
mov
mov
jne
inc
cwtl
ss
and
mov
xor
push
fs
xchg
mov
lods
jns
test
add
lret
pop
push
mov
pop
dec
mov
lods
in
jnp
arpl
sbb
xlat
lret
movb
pop
xchg
das
or
sahf
rol
nop
sti
push
pop
ret
repnz
inc
adc
add
rorl
hlt
mov
xor
jg
push
pop
js
xchg
inc
sub
sub
leave
sbb
push
fsubrl
fcmovne
push
mov
sub
and
rorl
repz
jbe
pop
das
push
jecxz
fstpl
xchg
push
cmp
jno
dec
push
insl
lcall
aas
push
mov
cs
cmc
cmpsl
jmp
rcrl
fwait
push
add
call
in
imul
add
and
inc
mov
mov
jge
jge
cmc
aam
cmp
movsl
stc
lret
add
mov
mov
movsl
pop
sar
ds
or
shlb
std
pusha
mov
repz
adc
mov
lds
std
in
jns
fbld
sbb
outsl
mov
inc
rcll
int
mov
into
or
icebp
hlt
imul
xchg
adc
pop
or
hlt
and
js
mov
subl
jecxz
out
pop
or
inc
mov
pop
mov
addr16
inc
xchg
enter
in
lahf
mov
orb
imul
fnstenv
cmp
data16
or
cli
mov
mov
push
icebp
ljmp
mov
pop
gs
aas
rcl
jg
add
push
cmp
dec
test
inc
adc
pop
sub
nop
cmp
lods
fucompp
pusha
std
daa
push
dec
or
mov
inc
mov
popf
iret
in
jbe
into
push
int3
inc
adc
hlt
mov
icebp
xchg
arpl
lods
loopne
movsb
mov
outsb
dec
loope
mov
sar
sub
iret
xor
fists
fcompl
sub
fnsetpm(287
out
outsb
xor
jns
mov
mov
inc
fistpll
scas
stc
iret
dec
arpl
inc
fmuls
adc
pop
adc
cltd
jmp
push
xchg
aam
mov
adcb
popf
ss
es
jne
loope
iret
ret
loop
ljmp
fcoml
adcb
loopne
loopne
fcmovb
out
popa
mov
mov
lahf
jl
lds
and
mov
xor
ljmp
fstpt
xchg
pop
ss
test
mov
rclb
push
addr16
in
cld
push
sbb
push
repz
inc
aaa
lea
roll
insl
enter
shrl
push
jbe
and
andb
mov
fdivl
popf
lcall
fwait
scas
addl
jge
lock
sub
imul
out
fs
mov
mov
ss
jle
mov
cwtl
and
pop
cmp
dec
and
mov
xor
fs
ljmp
sub
int3
jne
outsb
adc
mov
mov
push
cltd
aaa
in
pop
and
clc
in
sub
cmpsb
add
xor
or
dec
iret
hlt
jmp
inc
add
mov
or
ds
inc
cmp
fmuls
sbb
iret
fbstp
add
sbb
push
add
popa
cmp
jl
test
cmp
movsl
xor
and
pop
add
pusha
mov
lret
ds
cmp
out
aad
jmp
mov
into
mov
add
lcall
rcrb
dec
test
iret
jp
cwtl
push
cltd
test
fbstp
push
sub
pop
shll
insb
or
test
mov
ljmp
mov
pop
cmpsl
cwtl
lods
mov
adc
test
mov
pusha
clc
mov
push
jle
stc
cs
xchg
mov
andb
add
sbb
jo
in
scas
mov
repnz
repnz
aam
mov
mov
adc
cmp
repnz
test
mov
cmp
or
stos
cmp
cli
std
addb
sub
lcall
nop
jmp
pop
icebp
mov
push
cli
inc
mov
in
push
mov
mov
xchg
sub
xchg
stos
ret
outsb
pop
jge
jp
xor
add
mov
popf
dec
xchg
out
pop
mov
fdivrp
pop
rcrl
scas
and
add
ret
lock
iret
sbb
loop
dec
and
or
shll
out
clc
shr
stos
out
sub
repnz
jne
movsl
pop
rcr
cmp
fs
jl
and
xchg
cmp
pop
data16
sbb
xor
std
cli
jl
pop
ds
push
dec
sub
mov
outsl
pop
imul
dec
dec
in
dec
dec
pop
sarl
add
out
lret
lods
and
outsb
cmpl
fs
and
clc
ss
addb
push
or
lock
inc
movsl
cmp
ret
fldenv
pop
ret
or
es
xchg
into
cmp
add
fwait
sahf
pop
out
inc
cmc
and
sarl
or
xor
jns
adc
jle
adc
scas
data16
decl
out
jnp
push
push
push
pop
test
fwait
scas
jmp
ret
inc
sub
xlat
push
xchg
push
inc
dec
cs
cs
shll
mov
subb
aas
xchg
dec
lock
xchg
jbe
xchg
inc
mov
rcll
and
ss
daa
iret
adc
xchg
popf
pop
cmp
sbb
test
call
nop
xor
cs
cmovge
fmull
test
es
insb
xlat
roll
sbb
sbb
pop
cmpsl
or
bound
ljmp
jbe
mull
or
jns
sub
jmp
lret
sbb
repz
mov
cmp
aam
pusha
lods
inc
inc
bound
jns
cs
sbbb
fstps
dec
xor
pop
in
push
test
mov
add
dec
adc
inc
mov
mov
jnp
mov
movsb
push
in
aam
inc
imul
jl
cld
cmpl
ret
and
sbb
jns
jecxz
mov
pop
mov
lds
rolb
or
mov
out
jle
rcll
inc
test
cmp
sbb
mov
mov
sub
mov
mov
xchg
and
ss
fdivl
sbb
dec
jl
adc
lods
jle
test
movsl
mov
jb
mov
xor
adc
and
xor
mov
scas
pushf
pop
sbb
push
addb
stos
pop
iret
or
jo
dec
add
es
lret
lret
add
push
mov
in
in
push
push
cmp
add
add
fmull
stc
xchg
loop
frstor
les
mov
std
mov
mov
jp
pusha
aaa
mov
aaa
cmp
pop
jecxz
dec
or
add
es
jb
adc
leave
lods
add
cwtl
imul
mov
leave
dec
push
push
outsb
push
icebp
cmpsl
mov
pop
cmpsb
mov
adc
imul
xchg
xor
mov
imul
aaa
sub
add
add
xor
and
out
pop
cmpsl
adc
sti
mov
das
mov
and
lock
ljmp
gs
aam
pop
js
sahf
js
std
push
pusha
mov
repnz
cli
push
outsb
lcall
xor
inc
inc
xchg
js
lret
mov
popf
push
in
pop
inc
pop
add
xor
or
jne
or
adc
out
sbb
fcompl
out
scas
idivb
and
lret
in
xlat
icebp
rol
mov
mov
pop
and
sbb
loope
lret
push
loopne
testb
dec
repz
gs
adc
mov
sub
sbb
out
cltd
movsb
roll
and
insl
shr
das
sar
sub
test
add
mov
jmp
loop
push
scas
out
orl
mov
push
int
sbb
sub
jp
dec
pop
mov
gs
shr
ss
lahf
into
rcr
dec
gs
dec
sub
data16
mov
arpl
xor
or
or
and
push
inc
dec
adc
adc
fsubr
iret
xchg
test
ret
inc
mov
pop
mov
pop
in
adc
inc
daa
adc
cli
add
fwait
or
lret
aam
add
adc
and
popa
aad
xchg
jecxz
pop
xchg
repnz
sub
rcll
movl
out
cmp
cmp
cld
adc
dec
dec
aad
cmpsb
lret
and
pop
or
adc
pop
or
in
lods
add
push
arpl
cmp
pop
lods
test
or
fistpll
mov
cltd
or
mov
or
and
and
mov
and
jecxz
cmpsb
dec
lret
cmp
pop
outsb
les
mov
push
or
xor
das
xchg
fsubrl
push
fistpll
clc
mov
lcall
jmp
loope
rol
jo
xor
mov
jns
xlat
decb
mov
out
mov
mov
adc
fisttpl
ret
nop
and
push
les
mov
mov
fwait
pop
inc
pop
popa
fistps
es
or
push
push
test
cmp
cs
cmp
out
or
jae
insb
push
sub
adc
or
push
push
dec
dec
inc
dec
es
enter
mov
nop
sbb
inc
fildll
mov
mov
jmp
je
jbe
jbe
nop
movsb
mov
xlat
inc
ret
push
les
pop
pop
and
addb
int3
xchg
pop
in
pop
adc
and
cltd
pop
add
xchg
push
sub
arpl
push
sub
sti
test
push
ret
lret
mov
cmp
loopne
mov
cmp
xchg
cmp
adcb
or
nop
inc
cmpsb
outsl
ja
xchg
mov
add
fwait
aam
leave
bsr
xor
arpl
leave
jge
int
fildll
dec
lds
xor
adc
mov
push
int3
inc
jle
out
testb
jmp
out
rclb
addr16
adc
sbbl
int3
jnp
out
ret
and
dec
aam
lock
mov
cmc
push
enter
xor
nop
dec
fidivrl
and
in
mov
adcl
sub
inc
inc
add
sub
inc
rcr
xchg
insb
outsb
and
sub
inc
addr16
jl
shl
cmp
call
fcomps
fistps
mov
imul
sbb
mov
push
mov
es
jg
jle
push
lods
xor
lea
aas
sahf
hlt
dec
pop
sub
mov
xor
jmp
sub
test
out
sub
das
push
cmp
cmp
ds
push
cmpsb
push
scas
cld
xor
push
rcll
mov
lods
fidivrs
in
ret
lahf
jmp
mov
gs
mov
leave
or
les
outsb
mov
inc
loope
xchg
enter
sbb
push
scas
adc
pop
aam
addb
arpl
fstl
test
out
lock
jp
out
jns,pt
incl
int3
scas
daa
and
ljmp
push
push
aaa
fadd
jg
cmp
test
add
xchg
jb
iret
cmp
push
xchg
and
ficoml
mov
mov
sub
mov
std
push
xchg
in
or
mov
push
cmp
sub
sahf
pop
push
push
mov
mov
mov
int
xchg
inc
pop
pop
adc
xor
clc
dec
imul
icebp
es
scas
mov
jge
or
mov
or
inc
imul
dec
lods
sti
or
mov
and
inc
mov
pop
jmp
xchg
mov
aam
mov
pop
stc
ret
xchg
gs
jbe
add
or
negl
mov
outsl
xchg
enter
and
add
ja
sbb
mov
jbe
iret
add
inc
push
imul
pop
ret
cmp
rorl
sbb
add
push
push
push
fwait
push
andl
in
fucomi
adc
pop
loope
jle
popa
clc
push
jle
mov
mov
in
lods
call
ja
xchg
mov
in
sti
cwtl
fidivs
fwait
and
daa
bnd
jmp
xchg
fists
xor
in
js
in
mov
ljmp
dec
adc
imul
push
cmpsb
xchg
leave
pop
add
dec
push
inc
cmp
push
aam
add
add
mov
add
jecxz
shll
adc
sqrtps
loope
loopne
lretw
lods
jae
jl
enter
jp
sbb
daa
mov
mov
adc
ret
cs
lods
imul
xor
xor
rclb
xchg
cld
push
sub
pop
sahf
push
dec
adc
loop
out
mov
addr16
mov
or
pop
mov
mov
sub
jo
push
shlb
sbb
ljmp
scas
jg
sbb
out
fidivrs
fdivs
bound
dec
lcall
adc
jb
mov
pop
pushf
cmp
lods
push
pop
add
xchg
pushf
push
inc
jae
fsub
lret
dec
fnsave
mov
pop
cltd
or
gs
lods
cmp
movsl
movsl
lods
jne
xchg
mov
push
pusha
stc
scas
cmp
in
dec
and
out
add
inc
jo
insl
mov
faddl
iret
push
xor
mov
cs
repnz
int
setno
out
mov
adc
push
dec
dec
and
sub
pop
push
ret
les
je
aas
or
subb
mov
mov
psubb
jle
aaa
mov
stos
pop
or
adc
fdivs
in
pop
push
andb
sti
iret
decb
xchg
pushf
movsb
mov
dec
inc
not
dec
jb
mov
notl
jle
cmp
in
lcall
cmp
cmpsb
cwtl
or
inc
push
movsl
hlt
fcos
test
aad
mov
and
add
cmp
lods
cld
in
stos
add
xchg
aas
jl
arpl
sahf
insb
pop
aam
popf
and
outsl
push
mov
jl
add
cmp
mov
and
cmpsl
cld
jb
mov
push
repz
jno
outsl
std
test
xchg
add
pop
sub
lds
or
rcll
out
sbb
shl
xchg
imul
add
pop
outsb
in
dec
movsl
shll
fisttps
test
and
lahf
ljmp
inc
stc
icebp
pop
clc
pop
xlat
clc
stos
movsl
icebp
mov
push
dec
pop
pushf
push
sub
popa
in
outsb
mov
dec
ret
push
fs
insb
mov
sbb
mov
mov
cmp
add
imul
sub
and
outsl
adc
data16
push
or
sub
loopne
jne
lock
push
inc
and
xor
jl
push
addl
in
std
rol
lods
xlat
and
mov
ja
cwtl
push
mov
sbb
pusha
stos
ds
mov
gs
or
sbb
pop
push
sub
jbe
and
sbb
mov
lods
and
push
or
and
cltd
out
push
lcall
push
adc
mov
popf
or
mov
movsb
mov
dec
flds
test
push
push
add
dec
pop
adc
xchg
pop
sub
fildll
jns
incl
fnstcw
sti
or
popa
rol
xor
dec
xor
lods
sub
mov
sbb
pop
repz
sbb
sbb
stc
arpl
lahf
lahf
or
cmp
sbb
insl
pop
xchg
ror
push
sub
xor
stc
adc
aaa
jmp
pop
daa
lds
mov
imulb
leave
cld
cmovo
icebp
mov
aam
jecxz
dec
jmp
and
push
nop
sub
out
push
imul
jg
imul
cs
push
mov
enter
pushf
mov
faddl
jg
cmp
cmp
jo
aad
adc
cli
das
shrl
mov
push
icebp
std
pop
or
jl
les
aaa
les
mov
push
test
mov
loop
push
push
cwtl
dec
pop
daa
inc
shrb
cmpsb
test
fsubrp
dec
loope
imul
push
add
push
fs
jmp
pop
xor
push
loope
mov
cs
cmp
push
out
bound
pop
or
cmp
push
push
xchg
lahf
adc
adc
cmp
mov
bswap
xchg
dec
in
and
cmpsb
cmpsb
jbe
sub
pop
int3
shl
lahf
inc
cld
push
icebp
clc
pop
call
mov
cmpsl
sbb
pop
mov
iret
adc
daa
sbb
dec
mov
mov
dec
out
xorb
icebp
dec
inc
js
jmp
push
cltd
pushf
jg
rclb
ror
mov
and
push
xchg
dec
lods
nop
fwait
addl
dec
cmp
lret
jb
push
out
adc
cmp
cmpsb
fcoms
xchg
iret
or
pop
imul
push
andl
loope
and
imul
cmp
shr
movb
cmpsb
mov
test
push
add
pusha
ret
outsb
stos
popf
push
iret
mov
fidivl
pop
out
je
xor
insb
popf
cmpsl
xchg
adc
cmpsl
mov
in
outsl
lea
cs
bound
jae
inc
cmp
das
mov
push
std
subb
pop
adc
bound
jo
inc
cmp
mov
push
dec
jge
cld
sahf
jae
mov
aam
cmc
push
cwtl
cmp
adcb
cmp
or
push
mov
int
loop
dec
dec
lret
repnz
pop
inc
flds
shrl
cmp
lcall
rclb
xchg
pop
ljmp
scas
fistps
fldl
pop
test
jg
hlt
jo
fisubrl
ret
sbb
popf
mov
add
pop
mov
mov
sbb
mov
out
imul
loop
adc
fimull
cmp
mov
ds
sti
adc
scas
mov
cwtl
ret
fldt
mov
xor
repz
nop
push
stos
push
xor
testl
test
das
lret
dec
cmp
mov
stos
jae
mov
dec
mov
iret
inc
in
mov
daa
mov
push
mov
pushf
pop
jmp
lret
push
dec
rorb
pop
and
fistps
fwait
pop
or
add
js
dec
int
push
mov
into
sahf
push
jbe
inc
lea
dec
into
add
addl
or
es
cmp
mov
aas
dec
sbb
inc
xchg
cmp
push
mov
inc
ds
pop
fs
pusha
push
push
stos
xor
aad
loopne
jne
aas
mov
pop
ror
mov
jge
out
xor
scas
inc
out
cmc
cmp
aad
outsl
movsl
xor
les
fwait
negb
jmp
or
adc
xchg
cmc
pop
lea
clc
mov
dec
push
dec
or
movsb
mov
test
rol
mov
pop
test
mov
test
test
dec
pop
stos
inc
inc
sub
adc
cwtl
aam
sahf
cmp
insb
dec
sbb
fs
adc
scas
test
daa
jb
outsl
les
pop
cmp
pop
pop
cmc
xchg
testl
jns
int
in
pop
in
imul
rcr
hlt
jno
jae
add
inc
or
rcrl
mov
push
xchg
movsl
sub
out
and
lea
xor
jmp
les
test
xor
pop
and
xchg
push
mov
fs
mov
cwtl
xchg
xchg
lds
xchg
sahf
pop
mov
rolb
aas
stc
pop
lea
arpl
push
fs
test
xchg
cmp
sarl
insb
insb
xor
sub
sub
lea
daa
out
les
lds
lea
aad
dec
inc
hlt
cmpsb
shr
add
jmp
lahf
cli
test
pop
xchg
sub
fwait
or
test
mov
mov
jns
inc
aam
insb
adc
aas
or
push
and
mov
into
dec
insb
mov
pusha
xlat
scas
pop
dec
loop
js
mov
mov
adc
push
cmp
sbb
adc
sbb
mov
mov
iret
stos
jecxz
add
fstl
adc
int3
faddp
lods
add
repz
adc
and
sub
sbb
push
adc
ljmp
int3
jecxz
rol
lock
shll
mov
fisubl
cwtl
cmp
jo
mov
popf
or
out
adc
call
in
cmpsl
mov
sub
icebp
mov
pop
or
fdivrs
add
sbb
cmp
xor
mov
cmp
in
jb
mov
mov
or
xor
incl
mov
scas
xchg
outsb
lock
push
jo
fwait
cwtl
xchg
inc
sahf
xchg
sbb
popa
jp
or
mov
or
add
cwtl
add
cmp
sbb
cwtl
jl
arpl
in
dec
repz
jecxz
adc
cmp
xor
sbb
inc
or
rcrb
xchg
mov
fwait
hlt
lods
jns
add
cli
sti
mov
cmp
sbb
push
fstps
daa
xchg
repz
xor
xor
jne
mov
push
xchg
and
popa
xor
jb
sarl
dec
repnz
inc
mov
das
push
movsb
bound
clc
das
pop
rolb
stos
testb
or
pop
adc
hlt
adc
add
clc
rorl
mov
mov
das
add
adc
out
imull
pop
push
and
iret
movsb
out
test
sti
mov
into
push
mov
and
fidivl
xor
xchg
in
iret
ret
and
loope
dec
mov
sbbl
xchg
add
or
dec
rorb
mov
push
scas
loope
lahf
repnz
lret
lds
mov
fmull
and
inc
repz
sbb
push
sub
test
dec
scas
xchg
pop
mov
add
imul
ret
test
xor
inc
subb
insl
popa
sbb
shrb
filds
icebp
lret
cmp
inc
jecxz
std
ss
movsl
push
bound
mov
into
call
cmp
or
test
pop
add
fnsetpm(287
xchg
cs
outsb
xchg
xor
and
out
cmp
mov
stc
les
out
push
ljmp
xchg
popa
fisubrs
dec
xchg
mov
dec
xchg
shll
push
scas
pop
fs
xchg
xchg
pop
sti
pop
push
pop
hlt
mov
add
xchg
mov
and
mov
in
es
pop
mov
jecxz
clc
in
aaa
and
sub
xchg
popf
lret
fidivrs
push
mov
aam
jmp
mov
jle
js
mov
xchg
repnz
dec
shl
sbb
fistpll
jb
pushf
mov
loopne
xor
imul
push
insl
push
std
dec
sub
aaa
leave
mov
into
mov
stos
sub
cli
fnsave
fwait
cmpsb
lahf
sbbb
inc
aam
filds
in
inc
orb
int3
popa
mov
pop
jge
cmp
loope
pop
inc
lret
dec
inc
inc
sbb
fnsave
adc
xchg
aam
sub
iret
jno
xor
ret
fsubs
ljmp
arpl
mov
cltd
mov
addl
adc
pop
int
xor
fcomp
or
pop
push
pop
adc
push
xchg
insl
int3
adc
nop
cwtl
inc
bound
or
jnp
loopne
notb
xchg
pop
subl
jns
scas
cmp
add
movb
xchg
xchg
test
in
xor
jge
scas
mov
cmovne
aam
fsubrs
ja,pt
es
mov
jmp
cmp
testl
stos
or
pop
adcb
sbb
lcall
jg
jb
adc
adc
sbb
lret
sbb
inc
sub
test
cltd
sub
mov
stc
adc
mov
sub
push
push
test
jmp
stos
mov
aad
jnp
cld
mov
rcrb
mov
cmc
push
popa
or
hlt
aad
fidivrl
stos
cmp
popf
xor
cmp
push
push
push
pop
fldcw
icebp
xchg
add
jg
and
fildl
cmp
pop
xor
dec
xchg
xor
mov
pop
jl
jb
adcl
xchg
jmp
int3
int
pop
push
imul
fildll
cmpsb
pusha
or
addr16
in
push
mov
pop
pop
clc
popa
mov
inc
mov
test
scas
faddl
adcw
dec
adc
sub
xorl
pop
xchg
add
loope
pop
dec
mov
mov
mov
sub
lods
or
inc
dec
popa
jo,pn
lcall
data16
cli
fistpl
jo
sub
adc
dec
xchg
mov
outsb
lcall
cmp
repnz
xchg
jge
mov
pushf
push
pop
mov
pop
or
and
mov
xor
pop
cmp
push
or
lret
and
lret
mov
out
cs
scas
lea
sub
leave
lods
adc
pop
push
or
enter
jge
push
popf
lea
xlat
out
add
ds
adc
and
pop
xchg
imul
test
and
sbb
fwait
ljmp
mov
arpl
je
fisttpl
or
dec
adcb
movsl
scas
mov
cmp
test
and
lcall
pushf
test
adc
mov
sarb
sti
fcoml
mov
sbb
mov
cmp
imul
lds
out
sbb
inc
xchg
push
cwtl
and
popa
aad
ret
daa
push
daa
loope
xchg
dec
test
cmp
aad
adc
clc
xor
and
pop
ss
mov
xor
rol
push
inc
mov
out
loope
xorb
in
sahf
into
movl
dec
inc
in
inc
jp
mov
scas
icebp
sub
stos
lea
pop
mov
mov
aas
or
iret
jne
cld
cmp
test
ds
sub
inc
dec
or
or
imul
inc
cmpsl
dec
cli
scas
imul
mov
lock
mov
outsl
das
add
out
mov
push
in
fcomip
cmpsb
inc
jae
shlb
hlt
xchg
lods
sbb
repz
dec
lock
pusha
pushf
lahf
cmp
and
dec
out
jmp
lret
and
cmp
aam
add
cmp
pop
imul
pop
add
sarl
jbe
cli
inc
aad
xchg
mov
fbstp
insb
jg
pop
sub
mov
push
pusha
and
lahf
jge
mull
ret
insb
mov
aad
negl
mov
pop
clc
pop
jecxz
subb
add
clc
dec
pop
mov
sbb
cmp
lret
sub
fidivrl
test
jnp
inc
rorb
mov
push
mov
and
roll
jmp
pop
ja
xor
cmp
out
sub
and
fsubs
add
lahf
or
ljmp
sbb
xlat
adc
cltd
cmp
xor
xchg
fldl
jmp
fimuls
cmp
stos
xchg
push
xor
call
jecxz
lret
mov
ret
sti
adc
aas
jnp
pop
mov
mov
sub
xchg
jo
cld
out
sub
cmpsl
aas
pop
scas
dec
push
cmc
sahf
jmp
fisubrl
loopne
jp
and
dec
mov
push
into
stos
mov
and
clc
std
lcall
pop
xor
sbb
dec
sub
or
mov
pop
data16
sub
stc
loop
inc
fbstp
je
mov
xchg
rcll
sbb
jnp
mov
lods
sub
lret
xchg
add
data16
mov
add
repz
or
fsubr
add
sub
adc
dec
repnz
pop
arpl
xchg
scas
fwait
lcall
cmp
ljmp
int
ja
fs
jg
aad
cmpb
pop
pop
pop
xchg
inc
sbb
sub
jae
cltd
adc
cmp
std
out
mov
push
sub
sub
ficoms
insb
data16
hlt
cmp
dec
lret
mov
hlt
in
cmp
xor
push
in
jg
inc
fists
clc
cmp
cmc
outsb
cmc
xchg
cmp
fs
sub
aas
test
sahf
xor
cwtl
push
sti
lds
mov
sub
inc
popf
aad
fisttpl
popa
mov
in
cmpb
mov
mov
sysret
imul
hlt
data16
aad
into
cltd
jle
add
test
add
enter
jae
cwtl
mov
or
pop
gs
push
sub
leave
sahf
test
mov
jno
lahf
mov
out
and
pop
ss
imul
cmp
das
xchg
xor
push
cmpsb
stos
clc
jbe
ja
roll
bound
fdivr
or
jge
je
out
fildll
shl
imul
xchg
cs
and
sbb
mov
insb
lock
mov
push
in
lds
testl
std
jge
inc
adc
imul
inc
pop
aas
outsb
cltd
scas
in
scas
adc
ss
insl
daa
jns
mov
out
mov
pop
mov
pusha
hlt
std
jl
and
inc
aam
sub
add
or
cltd
mov
mulb
sbb
out
jns
lods
mov
fwait
lods
out
push
mov
sbb
into
xchg
or
pusha
ja
lret
push
mov
addr16
cltd
nop
syscall
mov
cmp
repnz
jecxz
or
cltd
xchg
mov
femms
xchg
ret
add
cwtl
sub
and
cmp
cli
adc
insl
jno
push
mov
push
movsl
int3
hlt
jmp
mov
dec
pop
cli
es
mov
shrl
mov
in
iret
add
and
push
jecxz
mov
mov
pop
sub
cmp
iret
ja
in
mov
and
ds
mov
out
xor
out
pop
dec
dec
dec
xchg
clc
mov
cli
mov
loope
inc
inc
xor
out
cwtl
mov
jp
push
and
sub
push
popa
outsb
dec
and
sbbl
cltd
push
sub
sbb
jno
or
jb
mov
gs
pop
mov
adc
aam
cs
hlt
cs
sub
sbb
mov
jne
mov
add
mov
repnz
cmpsl
jle
xor
js
cld
leave
mov
and
fildl
outsl
adcb
sub
filds
or
fcomip
rcr
int3
lock
xor
or
add
jge
jl
mov
mov
adc
cmp
bound
ds
sahf
cltd
adc
ds
push
mov
pop
xchg
cmp
or
xchg
pushf
inc
icebp
adc
xlat
int3
cli
ja
xlat
es
lds
push
shrb
sub
pop
xor
scas
stc
push
data16
les
repz
les
icebp
out
sub
cwtl
jge
and
shl
or
lahf
pop
cs
xchg
aam
jb
rorl
mov
xchg
jecxz
mov
lock
ficoml
aaa
jmp
std
add
sub
jmp
jle
enter
testb
clc
sub
mov
or
cmp
inc
enter
mov
lds
sbb
fistpl
lock
repz
and
loope
cmpsb
pop
xor
subl
sub
movsl
out
addr16
mov
lahf
inc
ret
lods
lods
inc
insb
std
data16
icebp
cmpsl
add
andb
lahf
popa
setl
jnp
sub
xorl
pop
or
or
mov
mov
loope
mov
xor
xchg
inc
daa
add
cmp
jns
scas
nop
fidivs
dec
xor
push
inc
imul
ret
push
imull
loope
lahf
cmpsl
xorb
hlt
or
loop
push
add
popf
xchg
sub
adc
sub
repnz
push
rcrb
out
inc
jge
sub
pop
inc
inc
jae
in
or
xor
add
dec
leave
rcrb
xlat
push
lds
repz
mov
adc
fiaddl
lret
je
dec
sub
push
addr16
les
add
or
xchg
mov
out
cmp
rcr
scas
push
jb
sbb
adc
pusha
adcl
ja
ss
addr16
test
faddl
cld
out
or
nop
sub
call
adc
push
dec
fidivrl
jp
xchg
xor
ret
jne
inc
sub
dec
and
sbb
mov
mov
cmp
sub
mov
lcall
sbb
lds
icebp
out
add
lds
push
imul
mov
add
fisubrs
lds
pop
adc
pusha
out
or
pop
sbb
inc
ljmp
lret
sbb
adc
cmp
xor
mov
daa
cmpb
rcrl
int3
aaa
push
or
sub
sbb
mov
inc
hlt
mov
movsb
je
fwait
xchg
jge
sbb
sahf
insb
add
ret
ret
mov
push
mov
in
cli
adc
pop
pop
cmpl
daa
jmp
in
dec
mov
push
int
hlt
in
cmc
ss
sbb
les
xchg
mov
divl
fidivrs
jne
idivb
mov
inc
rorb
xor
xor
stc
iret
and
add
mov
js
sahf
iret
adc
sub
cs
fwait
adc
hlt
sbb
leave
sbb
mov
inc
sub
sbb
fstpt
xor
shlb
mov
shrb
data16
jmp
xlat
jno
sub
push
sbb
sub
push
imul
mov
addb
shlb
aaa
out
inc
push
or
cltd
mov
rcrl
xchg
jle
mov
add
pop
mov
xchg
add
cmpsl
sbb
fildl
jp
cmp
movsl
xchg
in
jmp
in
nop
mov
lds
stos
outsb
std
hlt
and
dec
dec
std
repnz
icebp
outsl
pop
add
adc
popl
stos
in
cwtl
cld
mov
xor
mov
cld
push
outsl
test
fsubs
mov
mov
ja
mov
dec
inc
call
and
adc
lds
or
pop
stos
cs
mov
loopne
popf
mov
fimull
lods
cltd
into
outsb
test
and
shl
imul
imul
pop
inc
inc
call
jo
cltd
imul
loopne
out
sub
sub
loope
xor
sub
pop
sbb
frstor
mov
add
rorl
or
pop
or
jmp
iret
divb
sbb
cmp
push
clc
outsl
pop
call
or
idivb
jbe
stos
push
xor
gs
or
les
stc
add
out
int
inc
cmpsb
inc
int
sti
inc
pop
jle
ja
fists
filds
insl
sub
cmp
aam
push
nop
lcall
inc
lret
dec
sub
cmc
rcrl
ljmp
dec
xor
es
xchg
fucom
cmp
and
js
sti
popl
sub
scas
push
daa
cmc
out
pop
cltd
cmp
jl
pop
je
mov
fsubr
or
jnp
call
bound
arpl
dec
dec
mov
scas
movb
mov
inc
lea
fmuls
add
or
sub
lret
mov
shll
in
scas
sbb
pop
in
cli
cli
sarb
xor
call
jmp
mov
mov
jg
pop
or
cwtl
jmp
jl
test
loop
cltd
xor
add
jp
xor
test
dec
dec
test
jnp
mov
jge
dec
xchg
fcoms
mov
rorl
xor
daa
sarl
or
incl
jp
dec
jmp
push
insl
and
pop
cmp
push
bound
add
sbb
mov
xchg
and
arpl
outsb
fiadds
nop
shrb
js
loopne
adc
dec
push
xchg
sub
fdivrl
aad
push
sbb
divl
push
ss
inc
push
arpl
das
sub
fmulp
mov
push
and
cld
pop
mov
ud1
lret
jp
add
pusha
adc
stc
popl
xor
push
jg
cmp
jne
mov
and
pop
mov
test
inc
mov
mov
mov
inc
decl
into
mov
lret
pop
pop
xor
out
sti
mov
mov
mov
sbb
push
push
pop
lods
and
sbb
sbb
aam
adc
test
fwait
sbb
repz
push
lods
loope
jae
in
push
mov
pop
adc
or
push
movsl
mov
mov
xchg
fsts
or
test
xchg
sbb
fdivs
pop
push
mov
mov
and
jne
xchg
inc
setne
and
mov
and
ret
into
daa
jp
xchg
lret
jmp
mov
adc
clc
test
jl
imul
cltd
ss
sub
inc
push
mov
sub
sub
cmp
inc
daa
xor
or
dec
add
sub
mov
pop
enter
xor
rorl
jmp
mov
and
pop
scas
mov
rcrl
std
fimuls
cltd
es
jno
out
jb
movsl
je
rcl
sbb
dec
ljmp
stc
or
mov
out
mov
mov
dec
jno
sub
sbb
lret
hlt
jmp
inc
xchg
mov
sub
ds
add
jne
fdivrs
movsl
mov
mov
mov
adc
or
ljmp
test
cmp
lea
dec
xlat
lods
insl
imul
jnp
xor
mov
mov
out
lods
and
imul
les
aam
fstl
gs
lea
imull
cmpsb
push
jae
push
inc
shrl
nop
mov
cs
filds
popf
es
pop
into
fs
xchg
jg
stos
cmpsl
inc
insb
and
lea
mov
lock
les
pop
xor
fnstenv
shrb
dec
repnz
pop
ror
mov
ret
arpl
repnz
sub
xchg
ret
push
cmpl
pop
cmp
cmpsl
pop
movsl
imul
xlat
push
xchg
dec
insb
sbb
inc
sub
test
push
out
jecxz
dec
lret
repz
pusha
das
jmp
cltd
aad
aam
stc
push
pop
sub
xor
cwtl
lds
inc
fidivrs
push
adc
jae
movsl
sahf
xlat
lcall
mov
cmp
mov
xchg
xchg
aam
fcos
mov
das
pop
mov
jbe
into
sub
in
imul
sbbb
lds
dec
pop
call
xchg
and
jnp
lock
cmc
rcrb
imul
aas
push
mov
jecxz
mov
sbb
or
push
inc
clc
dec
jp
pop
lcall
leave
ljmp
or
or
adc
jno
js,pn
int3
imul
xchg
out
dec
dec
pop
sub
nop
inc
inc
inc
popf
mov
clc
mov
movsl
inc
dec
mov
push
leave
push
int
loop
adc
mov
sti
mov
jbe
cld
addl
loope
insl
ds
add
gs
insl
xor
mov
bound
dec
adc
xorl
sub
jmp
jp
lahf
jns
mov
pop
negl
add
xchg
test
call
ss
xchg
dec
jne
outsl
jp
pop
mov
pop
inc
mov
mov
or
fwait
mov
push
sti
rclb
aas
out
push
scas
inc
inc
lcall
xchg
sub
stc
rclb
std
dec
jg
out
sub
daa
repz
mov
aam
or
mov
ja
bound
sub
push
cs
dec
fsubrs
mov
pop
dec
int3
icebp
cs
xor
push
aad
cltd
pop
xor
iret
add
lret
sub
mov
cwtl
xchg
scas
mov
cmc
sbb
cmp
adc
fstps
scas
shr
adc
pop
pop
lock
and
das
inc
push
or
xor
mov
arpl
mov
and
inc
sub
mov
lcall
hlt
sub
cs
pop
in
sbb
jnp
mov
sub
dec
cmp
mov
cltd
pop
mov
test
cmp
xlat
inc
repnz
in
in
xchg
push
fcoms
jae
push
and
xchg
jecxz
push
mov
rcl
ds
xchg
enter
inc
mov
push
push
xlat
mov
fcmove
xor
and
sub
test
xlat
mov
xlat
divb
cs
and
mov
cltd
ljmp
push
cmpsl
and
mov
push
cli
xchg
mov
and
cwtl
pop
decl
or
lea
xor
data16
jle
fstl
or
jle
ficompl
cmp
gs
loope
loop
ljmp
xlat
mov
mov
or
outsb
jge
int3
lret
outsl
enter
cs
mov
push
stos
add
lea
adc
stos
sbb
mov
lret
sar
outsl
frstor
inc
xchg
repz
test
loop
jle
dec
xchg
icebp
jmp
sub
bound
cmp
or
mov
sub
sub
imul
fbld
or
mov
lds
dec
inc
icebp
inc
and
xor
push
lock
xor
jmp
into
cmpsl
push
push
ja
push
pop
push
loop
int3
mov
ljmp
push
xchg
adc
mov
inc
cld
push
adc
adc
xor
je
fs
inc
or
mov
in
lods
and
sahf
adc
xlat
mov
jno
sub
mov
stos
inc
or
xlat
mov
sbb
sbb
adc
adc
mov
mov
pop
push
jp
clc
xor
mov
pushf
popa
ljmp
aam
inc
jb
xor
push
sub
in
pop
jmp
repz
icebp
cmp
and
inc
mov
mov
and
ljmp
sbb
mov
push
insl
scas
scas
xchg
mov
cmp
repz
push
mov
repnz
mov
add
cmp
mov
push
ret
fdivl
push
mov
mov
nop
loopne
jecxz
xchg
aad
pusha
addr16
shll
sbb
or
xchg
inc
cmp
sub
push
fs
test
cmpsb
int3
and
mov
inc
add
push
test
or
or
imul
out
lock
popa
movsb
in
cld
sbb
mov
in
pop
scas
sbb
xor
xorl
mov
push
adc
loope
dec
fidivrs
xor
not
in
aad
push
push
push
adc
test
push
mov
in
psubd
adc
cmc
mov
jo
inc
push
in
xor
std
lea
mov
nop
int3
inc
dec
push
inc
das
nop
or
divb
adc
shrl
dec
xor
enter
lret
mov
aam
pop
mov
aas
fadds
mov
or
adc
pop
xchg
cwtl
sbb
sbb
iret
mov
pop
data16
loope
push
hlt
and
pop
call
in
jp
aad
pop
mov
fwait
add
add
push
and
and
mov
cmc
fucomi
dec
cmp
aam
cmpsl
xchg
or
pusha
xchg
and
inc
test
xchg
xor
lods
mov
sbb
lods
mov
push
repnz
lahf
ds
pop
in
pop
test
stc
pop
ss
out
adc
loop
int
pushf
or
inc
jne
cmpsl
push
in
pop
add
ljmp
or
out
loope
es
das
jne
lret
repz
loopne
imul
aam
lahf
lock
shrl
push
jmp
icebp
jmp
addr16
mov
call
sbbl
fildl
lret
loope
std
or
jb
xor
jmp
xchg
cmp
mov
or
fimuls
inc
mov
push
mov
cmc
inc
jge
cmpsb
pop
loope
sub
mov
out
cmc
pop
repnz
add
imul
mov
bound
sbb
stos
insb
leave
idiv
in
mov
push
out
cmp
xchg
aas
mov
cpuid
jne
fcoml
testb
pushf
mov
mov
mov
arpl
in
mov
cwtl
pop
inc
test
test
xor
sub
sub
xor
dec
aam
addl
pop
pop
add
mov
gs
mov
xchg
clc
or
dec
mov
inc
imul
push
xchg
mov
std
iret
sbb
repz
ret
je
inc
test
mov
icebp
sahf
mov
xorb
jbe
lock
xlat
ret
shlb
sbb
sbb
cmp
pop
repz
shlb
gs
xchg
xchg
push
inc
in
push
std
pop
jno
popa
or
in
es
out
inc
push
test
add
add
mov
jle
pop
bswap
inc
aam
js
sbb
pop
and
cmp
std
in
fnstenv
repnz
pop
xor
jbe
inc
push
push
insb
arpl
into
sbb
push
or
fs
sbb
xchg
push
dec
dec
cs
rol
cmpsl
aaa
leave
mov
mov
les
test
sub
or
fwait
aas
jne
in
stos
and
inc
popl
jmp
in
fsubs
push
jne
adc
hlt
sbb
aas
lock
xchg
mov
sub
leave
jnp
lds
daa
or
pushf
cli
les
test
xchg
repnz
push
adc
sti
sti
inc
stc
jmp
stc
cmc
dec
loope
sub
mov
mov
push
sub
push
pop
movsb
les
shl
mov
iret
fiadds
in
sbb
cmc
adc
movsb
fmull
mov
jge
cmpb
into
aad
mov
mov
cld
or
adc
pop
mov
cmpsb
fyl2x
add
xchg
xchg
dec
push
fcoml
xor
xchg
insl
add
inc
adc
pushf
xlat
fdivrl
in
add
aad
adc
mov
lret
ss
mov
jns
fists
inc
cmp
clc
and
push
aaa
outsl
inc
inc
scas
jg
js,pt
xor
push
decl
fisubs
pop
pushf
inc
clc
push
inc
mov
cmp
jno
jl
inc
inc
xchg
insl
mov
loopne
sub
hlt
jp
test
out
cltd
dec
stos
sbb
shll
dec
aam
pop
dec
mov
sub
loop
shrl
mov
and
pop
iret
fcoms
inc
test
lcall
or
xchg
rcr
mov
inc
mov
pop
daa
push
fidivrs
fists
sbb
and
jne
lret
or
adcl
jae
insl
lcall
mov
nop
push
popf
js
push
inc
and
popa
dec
or
ret
repz
sub
dec
add
iret
cmp
leave
adc
jns
sbb
cmp
sub
push
addr16
pusha
push
in
lods
xor
lahf
ret
push
dec
jne
imulb
xor
or
leave
sarl
jl
cmp
and
mov
pop
hlt
inc
dec
pushf
mov
adc
mov
pushf
fsts
jno
mov
test
and
clc
xchg
testb
add
add
mov
pushf
es
out
insb
daa
sub
les
popf
fucomip
adc
mov
pop
in
xchg
mov
inc
mov
ja
jbe
xor
test
xchg
in
loope
inc
sub
out
in
dec
adc
lret
pop
je
xchg
ret
push
andb
push
xchg
les
pop
mov
and
dec
out
xchg
fs
or
xchg
mov
loopne
dec
int
mov
call
cmc
mov
das
bound
mov
push
repnz
cmp
out
gs
iret
and
lea
shlb
and
neg
jb
sbb
dec
lock
adc
dec
hlt
push
call
lods
inc
add
outsb
ret
push
dec
lret
add
add
sbb
mov
imul
dec
pop
or
inc
pop
fwait
loop
adc
lcall
nop
mov
pop
pop
in
jbe
ret
scas
mov
pop
test
in
ljmp
lea
sbb
sti
and
mov
pop
pop
ret
jmp
cmpsl
stos
jp
decl
cwtl
pop
jns
js
adc
mov
dec
mov
cli
andl
in
mov
lds
mov
xchg
insb
arpl
test
add
lods
mov
nop
push
lea
jge
repz
sbb
loop
jo
sbb
inc
enter
aam
adc
stc
das
mov
mov
mov
pop
lods
pop
jae
pop
lret
sbb
rorb
fwait
push
or
fs
xchg
push
pushf
jnp
fisttpll
insl
sti
add
mov
mov
lahf
xchg
or
sub
fwait
jg
mov
in
andb
sbb
ss
add
loop
pop
xchg
lret
or
dec
mov
inc
add
xor
imul
xor
push
hlt
push
push
hlt
add
add
aam
dec
mov
dec
pop
mov
lcall
cmp
imul
popl
daa
outsl
pop
pop
and
test
stos
cmp
mov
imul
fistpl
or
pop
xchg
dec
or
sbb
in
jl
push
add
cmp
jae
rorl
out
jg
jo
mov
sbb
lods
sub
icebp
ret
test
sbb
fldenv
or
xor
dec
fsubrs
popf
mov
sub
jmp
je
sbb
popf
jmp
pop
ss
pop
std
push
rorl
mov
cwtl
sub
mov
xchg
jp
xchg
sti
xchg
std
push
mov
pop
lods
repz
fs
xchg
pushf
inc
sti
punpckhwd
icebp
test
daa
dec
cmp
jmp
loope
inc
inc
shr
loopne
pop
lret
mov
scas
xchg
outsl
pop
out
insl
push
mov
ss
cltd
dec
leave
int
scas
pop
scas
rolb
cmp
pop
addr16
cmp
push
shlb
aaa
inc
xor
mov
mov
xor
loope
call
jnp
and
xlat
fstps
std
jb
outsb
inc
push
mov
pop
jmp
aaa
push
mov
pushf
inc
jbe
outsl
jp
movsbl
stc
popf
and
adc
cmp
sbb
or
sbb
push
cmp
mov
arpl
stc
add
lds
or
fs
pop
movsl
xchg
adc
sub
ret
in
cli
sub
mov
test
leave
xor
jno
push
andl
xor
cld
in
repnz
in
adc
fcoms
mov
es
divl
ffreep
popf
test
xchg
mov
sub
sub
outsb
cmp
or
fmul
mov
dec
mov
repnz
xchg
cmpsl
push
scas
add
xchg
inc
fnsave
aas
loopne
lret
iret
pop
adc
popa
add
pop
pop
jb
pop
push
and
cmc
mov
push
fs
push
or
loope
in
cltd
push
push
es
aad
sbb
jg
inc
jle
pop
pop
jle
and
dec
fwait
pop
aas
jg
lahf
out
xchg
mov
lea
and
lock
mov
cmpl
mov
fidivl
mov
scas
aas
mov
sub
aam
inc
fwait
push
mov
dec
cmp
add
repnz
imulb
test
jne
pop
mov
lcall
push
mov
add
sahf
pop
sbb
jle
mov
inc
jb
sub
sub
out
xor
inc
sbb
out
push
jb
jb
jnp
adc
repnz
pop
dec
mov
adc
subb
cld
lahf
fwait
xchg
in
mov
ret
in
sub
and
inc
push
sub
inc
fsubrl
or
jmp
lods
jmp
lock
mov
js
pushf
cmpsb
int
xchg
sbb
adc
adc
xchg
cmpsb
loopne
mov
mov
movl
ss
mov
bound
call
add
xchg
inc
inc
addr16
mov
aad
cli
mov
ds
dec
sbb
loop
dec
dec
cwtl
inc
cmp
jbe
or
mov
lahf
inc
pop
xor
push
jns
lea
fcomip
mov
push
icebp
ret
loope
les
testl
loop
jb
js
test
xor
outsb
bound
mov
je
adc
ret
inc
test
stos
out
push
movsb
jns
divl
cmp
mov
adc
add
inc
test
or
negb
lods
unpckhps
jecxz
mov
inc
sbb
pop
fwait
jns
nop
loope
add
rcrb
aas
shlb
cmp
test
sahf
jae
cmp
js
mov
xor
xor
fistpl
inc
pop
shll
mov
adc
jecxz
cmpsl
dec
sbb
ss
jae
or
or
cmc
pop
dec
mov
adc
adc
ss
sahf
mov
jns
loop
movsl
pop
jecxz
push
std
sbb
mov
nop
xchg
jb
dec
jge
push
lahf
push
pop
xor
push
enter
add
pop
inc
ljmp
loope
js
dec
aam
inc
push
mov
push
orl
lds
cltd
xchg
scas
es
add
movzwl
pusha
dec
mov
jns
imulb
add
lahf
ficompl
cmp
adc
sbb
adc
loop
cmp
leave
cmp
leave
add
stos
cwtl
arpl
or
in
inc
add
add
or
push
jmp
or
dec
mov
push
dec
aaa
jecxz
and
jg
cmp
in
fwait
jnp
call
cmp
sub
fdivl
imulb
cs
sub
punpckldq
push
push
push
push
and
movsl
mov
pop
aad
mov
inc
mov
in
cmp
loop
ret
add
mov
scas
sarl
inc
or
or
mov
pop
neg
jb
das
and
test
js,pn
mov
push
mov
lret
and
orb
xor
xorb
adc
push
repz
insb
or
jno
adcb
loope
addr16
push
loopne
ja
push
mov
jnp
inc
sub
popa
cmp
outsl
lcall
mov
push
ror
mov
bound
push
xchg
into
popa
mov
stos
sti
add
out
jae
inc
hlt
and
pop
shrl
es
sti
sub
lods
dec
add
adc
or
aaa
xchg
adc
mov
ljmp
loope
cmp
cmp
and
fdivs
cmp
scas
mov
xchg
mov
jl
jge
xor
ret
push
and
pop
add
dec
sbb
punpcklbw
inc
xchg
sbb
pop
push
and
xor
imul
cmp
pop
lret
loopew
xorb
mov
jns
outsb
adc
sub
pop
ds
push
sbb
mov
pop
stc
jbe
call
fistpl
inc
mov
jp
outsl
pop
jb
shrl
mov
test
sbb
sbb
popf
dec
into
test
mov
shrl
add
jecxz
aad
les
xor
xchg
enter
cmp
in
loop
mov
mov
les
sti
sub
cmc
jp
fcoms
ret
sti
inc
je
jb
pcmpeqb
loopne
jmp
ret
cmp
xchg
mov
fsubrs
add
mov
mov
lret
cmp
sbb
and
mov
bound
out
out
jle
xchg
adc
movsl
out
repz
test
cli
sub
ja
ret
xorb
js
sub
lock
xchg
adc
clc
add
stos
mov
and
mov
test
mov
push
arpl
out
outsb
jge
xor
pop
add
jne
loopne
stos
lret
sbb
imul
xor
dec
je
cmpsl
cltd
ret
inc
sbb
jne
out
push
stos
jecxz
pop
les
data16
fcomp
mov
ds
inc
cmp
inc
adc
in
fcoml
xchg
ljmp
dec
js
out
xchg
sub
roll
xor
adc
and
xlat
xlat
jl
insb
fdiv
sbb
xchg
je
xchg
cmp
or
xor
test
xchg
jo
jecxz
jb
xlat
xor
testb
xchg
idiv
pop
jns
int
movsl
cmp
cwtl
sub
pop
or
jge
jb
jl
mov
mov
ja
insl
add
in
xchg
lret
pop
push
push
sbb
loope
pop
jl
rolb
pop
lret
cmpsl
jns
popa
push
push
mov
xchg
icebp
dec
mov
push
fisttpl
mov
sub
sti
mov
jp
mov
push
mov
sti
cmpb
adc
xor
nop
mov
mov
xchg
sbb
xor
jbe
push
rcll
sbb
stos
and
mov
out
jge
or
dec
call
lcall
pop
or
sub
push
into
bound
pusha
cmp
jmp
xlat
imul
andb
lret
add
ficomps
loope
lods
jno
jg
mov
cmp
cmpsb
inc
jns
lods
mull
lods
not
ljmp
dec
insl
lcall
mov
addl
add
dec
push
std
jbe
insb
xchg
mov
mov
xlat
ja
sub
dec
mov
cmpsl
sahf
push
jg
cld
pop
jmp
dec
sbb
mov
lcall
sahf
je
adc
insl
subb
push
insl
ret
xchg
js
test
ret
test
push
dec
xchg
jmp
jmp
inc
fs
xchg
cmp
divl
mov
dec
mov
loop
sub
dec
push
scas
cli
es
fstps
pop
pop
sub
xchg
call
shll
add
shrl
mov
jne
mov
fcoms
cmp
subl
add
movsb
pop
int
movsl
pop
sbb
test
inc
dec
mov
and
lock
cmc
xor
pop
aaa
sub
jge
sub
mov
adc
fistpl
pop
sbb
outsb
pushf
mov
incl
xchg
cwtl
sti
test
ret
scas
fwait
sub
add
ret
jle
rclb
mov
dec
sahf
fisttpl
daa
dec
mov
push
push
xchg
push
mov
lods
mov
vpsllw
dec
hlt
jns
xchg
in
aas
in
push
mov
sbb
jge
jnp
outsl
jno
cmp
mov
push
lea
dec
aaa
int3
inc
jle
mov
jns
and
pop
push
out
mov
push
ret
inc
or
enter
inc
lahf
int
outsl
mov
mov
cltd
mov
arpl
dec
cmp
jl
xchg
mov
push
cmpsb
push
fildl
movl
add
sbb
dec
dec
push
or
push
and
push
fs
jno
lcall
test
aaa
stc
ja
movsl
mov
into
in
aas
into
movsb
addb
shrl
or
int
loopne
rorb
shl
jno
push
stos
push
rolb
fucomi
addr16
mov
and
add
xchg
or
into
push
add
jge
inc
int3
xchg
pavgw
gs
std
out
loop
ss
xchg
jecxz
popf
lret
ret
jl
aaa
out
push
dec
aas
cli
hlt
int
outsl
push
imul
inc
lods
sbb
pop
inc
push
inc
stos
jle
enter
jae
dec
call
shrb
dec
cmovae
cmp
jp
iret
je
sbb
dec
ljmp
push
dec
inc
int
mov
fiaddl
cmpsb
push
mov
mov
push
testb
inc
fmul
and
jb
imul
stos
jno
push
adc
adc
nop
enter
pop
sbb
pop
pop
add
test
sub
jne
orl
fbld
cltd
xor
mov
pop
lahf
jno
pop
xor
jecxz
jp
dec
fmull
leave
xor
cld
fimull
inc
sarb
les
and
cmc
jmp
aam
xlat
popa
add
jb
cli
sbb
pusha
push
andb
mov
jg
in
jp
push
push
shrb
mov
sub
xlat
scas
cli
je
cmp
add
scas
push
fists
test
add
cmp
xchg
mov
inc
rcr
call
outsb
pop
scas
adc
xchg
ffreep
pop
mov
cmp
fwait
mov
or
fs
cmp
dec
es
fld
xor
push
lea
dec
xchg
xor
pusha
sbb
dec
inc
adc
and
sub
mov
shrb
sub
jmp
fsubl
xchg
out
cwtl
lock
sub
nop
mov
adc
mov
cmc
push
jno
movsl
das
xlat
jb
adc
pop
add
ds
in
lods
mov
xorb
ret
in
sti
lods
add
mov
mov
mov
pop
cltd
mov
push
popf
lods
xchg
dec
and
lds
mov
xor
and
in
lods
inc
dec
je
stos
pop
adc
xchg
rol
xor
ds
or
les
ret
jnp
or
cli
int3
mov
stos
pop
stos
pop
jb
jmp
mov
pop
push
xchg
out
jmp
lret
cmp
and
and
fisttpll
add
dec
adc
cmp
add
dec
out
mov
movsl
push
loop
xchg
xchg
xchg
xchg
and
out
out
ds
fwait
jecxz
arpl
es
cltd
mov
add
inc
aas
mov
leave
rcr
loop
scas
lret
push
iret
mov
dec
sarb
dec
cmc
outsl
lret
leave
mov
cmp
repz
data16
shlb
ja
insl
push
in
cmp
inc
push
mov
jo
add
jnp
or
cmp
hlt
jnp
pop
fsubrs
pop
push
xlat
dec
and
inc
mov
jne
addb
push
mov
fsub
xor
or
mov
loop
sbb
cld
aad
stos
inc
and
ds
mov
pop
movsb
cmpsb
cmp
out
push
pop
lahf
jns
leave
sub
ss
aad
push
xor
jb
fisttpll
inc
and
mov
jle
flds
addr16
hlt
sahf
pop
fcoml
cmp
and
imul
adc
aam
mov
push
mov
popa
mov
mov
pop
popf
push
movsb
jle
dec
push
nop
repz
cmp
aaa
sbb
jge
fdivr
add
pop
in
dec
rcll
rorl
pusha
jb
out
sahf
mov
mov
mov
or
xor
mov
aad
dec
lds
int3
cmp
push
enter
push
mov
cmp
mov
sub
push
xchg
mov
add
sub
sbb
sti
sub
pop
mov
cmp
fisubrs
fcmovu
push
ds
xlat
into
lea
mov
scas
test
mov
mov
ljmp
leave
clc
xchg
ficoml
cmp
or
imul
jp
adc
scas
mov
jmp
jae
gs
xchg
inc
inc
mov
leave
cmp
lcall
push
xchg
mov
and
adc
ja
cmp
out
lds
mov
mov
push
mov
adc
filds
icebp
pop
xchg
ror
cwtl
outsl
ret
fstl
aaa
jl
mov
bound
inc
push
lds
scas
ret
cmc
aas
inc
lods
push
jns
popf
orl
jmp
ss
imul
push
push
jo
scas
xor
das
and
scas
popa
push
jl
test
mov
adcb
std
adc
bound
inc
pop
and
mov
stc
mov
imul
inc
cld
add
mov
push
scas
stos
rol
jbe
add
stos
add
in
aaa
or
nop
enter
push
jg
xlat
cmpsb
lahf
sahf
and
add
lea
leave
cmp
xchg
lods
jnp
lret
mov
xlat
add
pop
cli
lds
pusha
shrl
aad
jno
mov
ret
dec
std
xor
pop
shl
xchg
cld
aas
xchg
arpl
sub
mov
and
fwait
cmp
sub
xchg
adc
mov
adc
add
outsb
insb
dec
int
mov
push
in
add
pop
aas
fwait
js
scas
adc
push
paddq
in
xchg
mov
fildll
cmp
and
push
and
pusha
add
addl
inc
jnp
and
mov
in
dec
sbb
lods
and
sbb
test
stc
xchg
lock
into
push
xchg
int3
adc
xlat
fs
test
push
xor
push
lock
stos
jle
and
cwtl
scas
ja
pop
xor
aas
push
loope
outsl
dec
ja
out
xor
jb
mov
movsl
fstpt
repz
sub
mov
lret
hlt
cmp
rcll
dec
into
push
and
sub
or
lcall
cmp
or
fwait
jno
aad
pusha
mov
pusha
rorb
xchg
pop
fcoms
adc
ljmp
mov
xchg
flds
mov
jle
or
sub
and
pop
and
push
xlat
loop
dec
mov
cmpsb
cmc
xchg
mov
xorl
cmp
test
xor
sub
jnp
cwtl
out
dec
jnp
imul
mov
pop
dec
lea
ds
dec
call
push
out
xchg
sbb
xchg
jne
xor
bnd
lcall
jae
popl
xlat
xor
mov
sub
pop
sbb
fld
pop
pushf
cmp
xchg
shll
inc
cli
outsl
out
inc
fwait
add
sbb
cmpb
dec
out
push
repnz
outsb
adc
or
cmpsb
testl
test
cmp
pop
and
xor
push
jp
test
imul
push
enter
pop
scas
cld
mov
int3
push
push
shrb
lods
outsb
or
data16
pop
mov
or
adc
rcl
loop
mov
and
les
shr
out
fmuls
outsl
xchg
pusha
xor
xor
test
inc
aas
lods
jg
sbb
daa
lea
mov
mov
int
jae
mov
mov
dec
test
or
rol
enter
mov
aad
test
mov
dec
adcb
dec
pop
pop
push
xchg
cmpsb
aad
jp
sbb
aam
push
into
or
inc
inc
test
mov
or
jns
jae
sahf
sbb
mov
xor
jo
sbb
jns
movsl
cmp
inc
push
stos
jns
out
jae
out
and
ljmp
jl
pop
iret
cmp
add
pop
aaa
aad
mov
adc
push
sbb
inc
lea
push
inc
mov
scas
adc
lea
cmc
mov
or
mov
pop
or
rorl
pop
stos
out
dec
push
jmp
into
mov
outsb
in
mov
inc
fimull
aad
adc
in
push
push
shr
xor
mov
sub
cld
fnstsw
std
mov
adc
cmp
dec
inc
push
out
outsl
and
je
outsl
je
sbb
test
leave
inc
push
test
push
cwtl
mov
repnz
jp
lods
outsb
inc
cmpsl
popa
xlat
lock
orb
loopne
repnz
cmp
push
jnp
daa
arpl
in
out
movsl
mov
add
das
mov
add
adc
loope
shld
stos
jb
push
clc
enter
mov
sbb
fcomps
mov
lods
mov
adcb
pop
into
cli
mulb
pusha
jp
jecxz
std
mov
inc
iret
aam
leave
int
frstor
rcr
les
lret
add
add
cs
insb
and
jge
je
inc
lock
lods
repz
or
ja,pt
je
dec
and
mov
mov
shr
lcall
cmp
jl
dec
push
fldenv
daa
fcos
lea
xchg
repz
mov
loope
jns
mov
mov
push
fwait
sub
neg
enter
or
mov
and
mov
lcall
dec
das
int3
filds
cltd
mov
outsl
cltd
repnz
ret
lcall
mov
mov
mov
iret
xchg
mov
xchg
scas
or
sar
addb
clc
fldt
in
mov
and
or
push
pop
movsb
lods
sbb
jmp
ja
mov
inc
pop
pop
rorl
dec
aaa
test
sub
loopne
popf
icebp
es
add
push
pushf
add
mov
mov
cs
ja
push
lcall
addr16
movzbl
or
sub
in
add
mov
lods
dec
inc
lods
mov
xchg
scas
jle
mov
push
sub
repz
cmp
stos
mov
cmpsl
pop
push
outsl
std
loop
cmc
hlt
scas
jo
mov
add
hlt
int
xchg
pop
jmp
pop
cmp
fwait
pop
repnz
adc
mov
mov
mov
mov
sbb
test
nop
fldl
push
jl
in
add
jae
dec
mov
cmp
lret
je
sbb
cmpsl
insl
push
xchg
sub
push
inc
lods
inc
sub
or
notl
add
pop
hlt
fsubr
cltd
sub
andb
xchg
cmc
fwait
loop
cmc
in
jecxz
and
bound
mov
mov
insl
outsl
in
xchg
int
inc
lahf
xor
cli
push
xchg
dec
mov
mov
mov
roll
leave
adc
or
fidivrs
jnp
rolb
xor
shrl
mov
lds
ss
stos
or
dec
mov
push
orl
scas
jns
data16
repz
xor
mov
mov
mov
lds
pop
adc
xchg
fcomi
mov
punpcklwd
cwtl
push
push
inc
faddl
call
push
add
pop
and
inc
lea
push
mov
jae
jp
scas
pusha
imul
inc
lahf
jae
enter
mov
sbb
or
shl
je
gs
movsb
xchg
ja
ja
ret
push
sti
fadds
test
shlb
sbb
push
pop
push
lahf
in
jnp
loopne
outsl
and
xchg
mov
inc
shrl
rcll
sub
push
in
and
jp
int
mov
iret
and
sbb
sbb
or
lcall
pop
push
dec
mov
mov
out
and
jp
mov
push
sbb
mov
pop
inc
mov
mov
mov
shlb
add
scas
mov
lods
inc
push
ficompl
cwtl
lods
jo
sbb
jae
repnz
addr16
in
cld
and
scas
mov
cmp
ja
xchg
incb
jmp
lret
imulb
mov
and
jle
adc
push
fmuls
mov
push
mull
xor
shll
nop
mov
push
adc
mov
dec
out
lcall
stc
sar
daa
jnp
int
sbb
push
movsb
ret
push
mov
adc
sub
adc
add
pop
adc
cwtl
pop
loopne
bound
mov
mov
in
mov
loop
jb
daa
aas
ret
sub
enter
subl
sahf
pop
outsb
rcll
outsb
xchg
mov
fdivs
lret
enter
dec
push
repz
jl
ss
cli
mov
lds
mov
mov
rcr
fdivs
jle
inc
sbb
bound
or
jg
lret
cwtl
mov
shr
outsl
fsubs
mov
test
flds
pop
arpl
fisubs
int3
leave
adc
lcall
jbe
test
adc
out
and
lcall
fwait
xor
in
jbe
jge
testb
mov
and
mov
rcrl
xchg
loope
int3
lahf
dec
inc
or
out
clc
test
cmp
call
pop
inc
push
shlb
ja
shrl
js
subl
cmc
dec
cli
out
jl
mov
test
and
sti
repz
push
mov
sbb
arpl
ljmp
ret
shl
into
pop
or
mov
mov
pusha
out
jbe
rcr
adc
jmp
and
cmp
cmp
add
shl
fprem1
mov
push
lods
xlat
jae
pop
imul
mov
mov
cwtl
adc
sub
dec
xchg
xorb
std
out
fwait
movsb
aad
sub
pop
sub
xor
push
stc
jb
push
je
sub
push
adc
rcrb
mov
inc
mov
lcall
test
pop
xor
and
push
aad
mov
sub
es
lock
mov
pop
fwait
mov
dec
add
or
sbb
loop
pop
xor
fxch
and
push
out
mov
divl
xchg
and
shll
int3
stc
and
pop
in
movsb
fisubrl
imul
and
shlb
inc
push
and
lret
ds
push
test
adc
aad
daa
and
jb
fprem
push
or
lea
iret
cmp
push
movsb
fwait
mov
or
std
out
mov
insl
mov
inc
gs
cld
cwtl
inc
enter
jne
or
jnp
scas
fsubrp
or
sbb
mov
jno
jmp
push
aaa
loope
mov
push
daa
lds
dec
test
mov
js,pt
pop
xor
cmp
dec
xor
sbb
mov
scas
fnstenv
test
outsb
lea
mov
adc
imul
xor
jmp
insl
adc
push
scas
adc
in
bound
jmp
xlat
decl
dec
xor
rolb
mov
fistpl
pop
mov
pop
sti
ret
lods
sbb
in
test
mov
cmp
lcall
dec
roll
xchg
push
lds
and
jmp
add
cmp
ret
jae
cmpsb
fldenv
adc
push
or
cmp
pop
push
inc
push
nop
sbb
xchg
mov
insl
je
mov
inc
popa
test
test
and
fstps
cmp
adc
and
inc
nop
insb
out
jl
dec
or
jmp
ds
enter
xor
daa
lods
test
fisttps
fdivl
dec
mov
popf
mov
xor
fildll
call
pop
ret
test
clc
mov
mov
pop
pop
and
mul
xchg
xorb
xchg
lock
inc
inc
or
or
sbb
fcmovbe
push
outsb
lret
mov
aam
push
in
cmp
popa
jmp
pop
mov
divb
add
xchg
mov
cvtps2pd
aaa
xor
adc
xchg
fcos
lahf
xor
xor
jbe
xor
add
dec
dec
xor
lods
into
or
stos
cmp
adc
dec
js
push
popa
lret
mov
dec
push
inc
push
dec
iret
mov
sub
xchg
enter
shll
xlat
mov
aaa
mov
movhps
in
dec
sbb
dec
ret
cmp
pop
add
pusha
pop
lods
mov
testl
push
adc
sbbb
pop
shll
mov
adc
push
pop
pushf
imul
jbe
arpl
mov
das
gs
push
aaa
push
sub
pop
pop
lock
jmp
xchg
add
popf
mov
ljmp
jp
mov
cld
movsl
jns
lds
dec
adc
dec
data16
fstps
enter
lock
sbb
adcl
sbb
push
or
mov
call
in
xor
sarl
subl
mov
ret
lahf
inc
xchg
add
jle
mov
cmp
sub
es
pop
jne
mov
aaa
and
mov
aas
mov
scas
jb
call
add
pop
push
xchg
or
jp
out
fisubl
enter
call
sub
xor
lret
dec
mov
andb
gs
andl
mov
negb
test
mov
adc
xor
jns
cli
int3
outsl
pop
repz
xchg
push
enter
sub
int
popf
mov
adc
mov
aaa
ss
loop
pop
sub
out
in
das
insb
cltd
lods
pop
stc
hlt
inc
sbb
aas
fabs
add
mov
ror
adc
mov
adc
cwtl
ret
jecxz
arpl
sbbb
inc
lock
pop
sub
inc
enter
pop
jo
and
mov
adc
mov
jl
mov
pushf
fmull
mov
mov
das
gs
lea
imul
sbb
dec
sarl
insb
and
dec
idiv
jnp
jb
inc
push
push
pop
repz
lahf
xchg
pop
jmp
mov
xchg
or
push
ss
cs
push
and
bound
stc
cmp
out
inc
and
mov
cmp
jns
loop
ret
inc
jb
mov
add
pop
testl
and
pop
in
rorb
pop
dec
lcall
fnstcw
or
jecxz
push
add
mov
icebp
mov
or
out
add
mov
sub
fdivp
mov
std
data16
push
push
or
paddb
dec
mov
in
imul
imul
orb
stos
jmp
sbbl
pop
popf
cmc
sub
sbb
pop
fcomps
cmp
ret
movsl
push
loope
divl
enter
inc
loope
add
pop
insl
mov
xor
out
mov
adc
fstps
mulb
mov
sub
mov
popf
lret
dec
int3
dec
imul
dec
jl
mov
jo
insb
cld
movsl
test
mov
pop
mov
outsb
data16
fbld
paddb
inc
fildl
outsl
sbb
sbb
sbb
je
and
sub
mov
adc
jb
mov
shrl
pop
xor
pop
cld
lods
lods
icebp
outsl
cmp
mov
int
pusha
in
jb
xor
inc
pop
mov
outsb
popf
xchg
push
loopne
push
jp
pop
cmp
ret
test
cli
nop
stc
cli
rol
test
cmp
jo
jp
icebp
push
lds
or
call
push
xchg
ror
mov
xchg
jno
dec
in
jl
test
pusha
nop
ret
in
in
inc
ret
nop
cltd
imul
adc
data16
pop
lret
add
sbb
bound
sub
add
aam
loopne
inc
es
es
notb
fiadds
xchg
dec
sub
nop
add
pop
xor
dec
stos
cmpsb
lock
and
mov
pop
scas
sub
leave
repz
jg
cli
sub
xor
andnps
xor
into
call
leave
cmp
daa
sub
out
sbb
std
push
addr16
sti
sub
lods
fnstenv
sbb
xor
pop
fisubrs
and
push
jb
sarb
enter
cmp
nop
insb
cmpsl
push
je
jo
sub
cmp
push
pop
es
jmp
and
shll
test
jnp
dec
icebp
cmp
rcll
aaa
enter
out
insb
and
je
dec
lcall
rcl
lods
jge
and
mov
repz
xor
and
std
sub
test
mov
or
int3
stos
dec
pop
cmp
cmp
adc
jg
mov
inc
push
and
dec
add
scas
cltd
hlt
sub
dec
or
stos
out
mov
and
mov
cmp
fisubl
jnp
pop
dec
push
inc
loope
mov
push
sbb
test
in
sbb
add
jbe
iret
adc
sub
lret
pop
and
adc
jmp
mov
call
rcrb
and
jg
inc
lods
adc
jecxz
int
shrl
inc
shll
out
pusha
lods
arpl
jno
sub
mov
gs
aas
mov
aam
test
push
loope
mov
stos
mov
ret
popf
sub
cmpsl
sbb
movsl
inc
mov
or
rcll
push
sub
push
mov
ljmp
cmpsb
std
mov
mov
test
scas
cmp
movb
mov
sbb
and
cmpsl
mov
push
lret
or
adc
jnp
loop
push
jne
ds
adc
jmp
pop
or
dec
xor
outsl
jl
lea
dec
sbb
shr
cwtl
test
adc
inc
jnp
ss
nop
int3
pop
sub
push
nop
sbb
daa
dec
repz
inc
push
in
sub
inc
enter
es
jns
or
xchg
sub
dec
xlat
aaa
push
mov
mov
stc
push
ret
cmpsb
dec
sbb
jge
cmc
add
dec
mov
cmp
xor
in
xor
fiadds
add
pop
sahf
sub
repz
rcll
push
dec
xor
mov
xor
or
cmp
imul
pop
lret
cld
mov
cmp
jns
xor
js
ljmp
push
mov
inc
xor
sub
loope
mov
lret
push
inc
mov
dec
xchg
movl
out
outsb
test
jno
sbb
jl
out
and
jle
js
js
cmp
and
push
add
push
outsl
lods
movsl
ds
and
insb
push
pop
sub
out
inc
mov
fdivrs
sbb
sub
mov
inc
sub
jmp
ficoml
cmp
inc
popf
cwtl
aad
cmp
jnp
adc
push
sahf
into
xor
sbb
insb
mov
fdivrs
scas
sarb
popa
sbb
leave
pop
sub
xchg
pop
scas
leave
outsl
xchg
in
in
push
arpl
fnstcw
mov
adc
mov
leave
scas
inc
adc
icebp
jle
shl
cmc
insb
inc
push
aaa
lcall
jg
data16
push
or
clc
test
les
inc
test
scas
push
add
push
jae
xor
stos
push
sub
adc
das
push
clc
xlat
ficoms
pop
fstl
lcall
inc
cmp
mov
sub
stos
mov
sub
cs
shrl
pop
rcr
aad
mov
jns
pop
sub
lods
repnz
xorl
dec
ret
pop
inc
adc
insb
mov
xchg
rcll
sbbb
pop
icebp
jmp
push
jo
xor
fsubl
jl
je
xchg
sti
or
mov
adc
sbb
out
call
subl
sub
push
cltd
nop
pop
inc
jle
jle
cs
shll
jl
mov
test
mov
push
enter
popa
ss
pop
jae
out
out
cld
dec
sub
pop
rolb
and
subb
pop
shl
je
mov
or
imul
jecxz
dec
xchg
test
adc
dec
lahf
out
pushf
sbb
std
cli
fmull
stc
cmp
imul
ljmp
scas
inc
xchg
push
or
in
nop
mov
popa
push
jge
add
in
fcmovne
popf
rorb
mov
mov
icebp
jle
in
fsubrl
aas
pop
xor
aaa
in
cmp
into
sarb
sbb
push
xor
aas
inc
std
sub
test
jmp
and
fidivrs
dec
jmp
cmpsl
sbb
lret
movsl
lea
dec
jbe
fldt
sub
add
movb
adc
jns
ja
idivb
jg
and
xorl
loop
int
inc
out
cmc
in
orl
je
push
mov
or
xor
movsl
divl
daa
or
call
es
inc
lods
and
pusha
and
push
enter
sbb
test
repnz
and
sbb
add
aas
je
rorb
lds
pmulhuw
mov
insl
aad
loop
fs
int3
aad
aad
xchg
sub
cwtl
pop
mov
cmpsl
popf
pop
aam
push
jge
stc
ljmp
xor
mov
jo
insl
jmp
and
jg
idivb
int3
push
pop
push
addl
insb
sub
push
cmpsl
pop
push
sbb
rorl
inc
xchg
inc
or
testl
push
push
jmp
or
mov
dec
fdivrp
dec
pushf
jecxz
ss
xchg
fldenv
sarb
sbb
mov
shrl
addl
jno
cmc
lcall
ss
mov
fistl
xor
add
sti
addl
fldenv
sub
dec
jne
add
loope
out
aam
scas
sbb
xor
aaa
jns
xchg
cmc
adc
push
xor
jl
or
arpl
mov
dec
mov
iret
push
into
adc
stos
jg
sub
mov
and
addb
push
xchg
sbb
stos
div
xchg
mov
mov
mov
daa
shr
mov
rcll
cs
rorl
adc
xchg
insl
pop
loope
test
je
cld
mov
xchg
lret
loope
loopne
and
ret
shr
mov
aam
lahf
jmp
mov
outsb
push
aaa
ret
les
or
mov
xor
divl
jns
sub
adc
gs
cltd
jo
jb
or
ljmp
push
xchg
cmc
jbe
out
mov
adc
sub
shlb
into
cltd
lods
fwait
mov
adc
xchg
orb
ss
add
gs
mov
mov
pop
and
aad
sbb
adc
mov
out
mov
inc
mov
mov
jg
insb
inc
mov
dec
fxch
orb
adc
loop
sbb
push
lret
sbb
lret
dec
lock
sub
inc
das
shlb
ret
adc
mul
popf
popa
cmp
das
cmp
into
adc
lea
pop
mov
add
sbb
ljmp
xor
jmp
rcr
pop
icebp
cwtl
rcrl
shrb
mov
cmpsl
sbb
stos
sahf
mov
sub
pop
ja
jbe
les
test
jl
imul
cmp
sbb
imul
inc
xorb
mov
gs
rorb
enter
pop
std
inc
popf
out
mov
add
xor
or
cwtl
mov
add
pop
push
fucom
outsl
xchg
sarb
mov
sbb
mov
jae
mov
push
push
xor
or
sub
test
jne
push
dec
out
jmp
adc
mov
ja
adc
xchg
push
call
inc
xor
mov
aad
daa
arpl
mov
lods
lret
cmp
xor
fldl
loopne
push
dec
stc
adc
dec
sbb
jle
shlb
fs
test
iret
pusha
lods
mov
and
nop
sti
and
notb
sub
cmp
jge
test
mov
dec
inc
out
sbb
cltd
xchg
or
lret
in
ljmp
movsb
cmpsl
xchg
cmp
dec
xor
mov
xor
bnd
and
fisubrl
movsb
not
push
out
sbb
and
cmp
je
adc
lds
stos
je
pushf
pop
and
outsb
inc
cmp
sbb
fs
jae
lods
pop
cmp
mov
test
adc
sub
push
dec
in
or
or
bound
mov
sbb
je
inc
in
jg
shr
arpl
push
mov
insb
pop
mov
fldcw
inc
test
xrelease
int3
std
cld
pop
dec
loope
inc
ljmp
or
cmpsb
jl
imul
mov
fmull
fidivs
adc
xlat
sarl
cwtl
or
sahf
push
fistpl
fists
mov
mov
and
sub
xchg
dec
pop
fs
clc
rcl
sbb
stos
pop
mov
jge
mov
mov
test
jmp
leave
and
cli
jne
sub
mov
popf
fs
scas
aaa
test
jnp
add
jp
out
lds
pusha
inc
dec
lock
shr
int
ret
sbb
movsl
test
add
push
psubw
xchg
mov
lahf
cmp
inc
jecxz
in
xor
imul
movsl
adc
flds
xor
jns
inc
cmpsl
movsl
push
std
pop
pop
mov
cmp
xchg
lods
mov
test
xchg
jecxz
xor
dec
andb
sbb
push
push
lret
lods
cmp
rclb
xor
in
sub
lods
or
imulb
jg
mov
in
shll
jb
int3
sub
je
jg
adc
arpl
and
aad
std
les
inc
dec
hlt
mov
sub
int3
out
rcll
pop
insl
sub
aam
pop
pop
mov
fiaddl
fsubrs
add
clc
inc
insb
xor
adc
add
pusha
loop
gs
test
jbe
lods
sbb
in
add
jb
subb
popf
jl
and
in
nop
pusha
js
das
mov
clc
sbb
int
and
fwait
out
es
push
cmc
jmp
inc
push
pop
aas
jp
or
addb
and
repnz
or
rorb
es
push
call
mov
cmp
insl
icebp
cltd
and
add
fld
jne
leave
jle
mov
cli
popa
shl
pop
mov
fs
pop
jne
pop
jge
jg
sbb
add
push
fcmovu
xchg
xlat
ljmp
outsb
mov
mov
jno
les
scas
cmpsl
outsl
xor
movsl
fldenv
push
test
cmpb
xor
repnz
lea
into
adc
sub
mov
dec
add
jp
shrl
sbb
decl
lea
lea
xor
jp
jnp
mov
adc
jmp
out
xor
push
pop
mov
cmp
push
inc
pusha
mov
aad
in
pop
aam
jmp
cmp
in
push
and
mov
je
pop
cmc
adc
orl
repnz
dec
or
lretw
mov
repnz
cltd
cmpb
fcmovnu
out
sub
or
sti
loop
mov
roll
push
xor
shlb
sub
clc
ljmp
outsb
push
pop
jae
aas
call
sub
daa
adc
out
mov
and
pop
out
push
pusha
roll
jecxz
int
add
std
and
pushf
pop
in
adc
in
pop
negb
ficomps
xchg
mov
jge
mov
sbb
cs
loope
arpl
test
bound
pop
les
icebp
cmp
lret
inc
lahf
int
pop
jbe
pop
push
insl
out
ljmp
enter
push
scas
mov
icebp
sub
add
test
ret
push
mov
test
adc
xchg
push
fistl
inc
cli
pop
sahf
rcrb
mov
push
negb
dec
scas
es
test
imul
mov
jno
push
inc
push
sbb
test
divb
fldl
aaa
in
insl
loop
je
repnz
pop
add
shl
push
mov
xor
rclb
cmpb
xlat
mov
inc
aaa
addr16
inc
out
sub
xchg
adc
repz
cmp
je
and
dec
dec
sbb
inc
lcall
push
dec
pushf
mov
add
sbb
adc
pop
adc
jg
inc
nop
jmp
fldl
mov
pop
xor
cmc
xchg
inc
sbb
jno
or
pop
mov
xchg
dec
ret
sub
sbb
sahf
lret
xchg
pop
xchg
or
xchg
scas
or
add
insb
mov
cmp
pop
pop
mov
jmp
jecxz
imul
cmp
pusha
fldl
movb
sarl
stos
cld
cmpsb
lock
mov
mov
jb
pop
sahf
enter
xor
sub
cmpsl
aad
incb
imul
jo
fcmovbe
pop
in
xchg
push
inc
xlat
loope
jecxz
jae
adc
fstps
testb
cmp
enter
roll
pushf
or
mov
test
divb
cli
mov
jl
push
dec
imul
js
in
aam
test
push
sub
sub
mov
and
jp
pusha
movsb
pop
mov
lret
xchg
outsl
mov
adc
cmp
xchg
pop
add
sbb
and
addr16
push
mov
jmp
dec
jbe
ds
sub
enter
add
mov
dec
pop
inc
aas
nop
add
mov
addb
mov
mov
xchg
sbb
dec
push
inc
icebp
adc
adc
push
inc
fbstp
and
dec
test
jecxz
iret
or
lock
inc
push
imul
out
lahf
fs
and
loope
jle
pop
mov
cli
adc
scas
mov
loopne
xor
gs
cmc
mov
pop
xchg
pusha
push
xchg
sub
push
push
mov
pop
jmp
xchg
std
mov
push
hlt
mov
jg
add
je
jl
lret
ret
hlt
pushf
inc
lcall
test
cmovg
sub
mov
scas
mov
xchg
mov
hlt
mov
loopne
dec
xor
xchg
push
mov
aad
xchg
or
mov
pop
mov
rolb
int3
cmpsb
ljmp
mov
bnd
lods
aam
test
mov
frstor
in
pop
mov
sahf
add
lret
je
or
clc
fsubs
js
fwait
lods
adc
sahf
inc
movsb
sbb
fwait
mov
pop
xor
aam
mov
jmp
repz
mov
jae
int3
pop
dec
test
pop
out
das
sub
mov
jge
icebp
repz
aas
or
xchg
jb
mov
xor
or
ja
jg
xchg
loop
jne
xorl
in
test
cltd
mov
mov
cmpsb
ja
jl
mov
add
rorl
popf
addr16
or
test
out
push
mov
and
pop
push
sbb
into
mov
cmp
and
jb
or
clc
mov
gs
mov
pusha
loope
fdivrl
or
insb
cmpsl
rcl
dec
mov
rolb
std
jmp
insb
and
mov
lcall
jg
jmp
stc
ret
xchg
imul
out
push
pusha
mov
insl
fidivrl
xor
andl
sar
ret
sbb
inc
mov
or
push
dec
lods
push
mov
adc
es
mov
mov
or
jb
inc
inc
mov
mov
mov
int3
fstl
mov
pushf
lret
mov
shrl
adc
xor
push
xor
sbb
in
xchg
xchg
inc
jle
mov
outsl
xor
push
movsb
cmp
lcall
shlb
lcall
cmp
mull
outsb
jl
mov
je
fidivrl
xor
lret
shlb
jo
call
xchg
mov
jl
stos
fiaddl
jo
js
push
mov
jbe
mov
outsb
jne
jl
sbb
sbb
jb
push
jmp
js
or
jecxz
xor
mov
lcall
dec
sti
pop
jg
dec
push
jl
in
lret
add
into
fsts
loopne
xor
aad
dec
pushl
mov
adcb
xchg
mov
inc
sub
jbe
clc
test
stc
xchg
and
inc
sar
adc
jns
cmc
daa
in
cs
xor
cmpsb
push
adc
das
xorl
lcall
inc
push
add
test
pop
shrb
xorb
fldl2t
xchg
or
jge
mov
xor
iret
xorl
xchg
decl
jl
mov
inc
adc
mov
jne
cmp
jge,pn
cmpsl
lds
cmc
out
jmp
in
sahf
xchg
imul
xor
out
sub
jp
sub
pop
push
jae
imul
nop
pop
jp
loop
rclb
cwtl
popl
xor
pop
inc
mov
es
pop
pop
rcl
shll
inc
mov
aas
pop
sub
or
fiaddl
sahf
xchg
jbe
lcall
stos
push
add
lcall
push
daa
jne
push
les
jmp
fnstcw
push
pusha
or
or
or
pop
roll
push
mov
cmpl
sahf
sbb
mov
lea
and
mov
cli
jge
mov
pusha
and
sti
cwtl
xor
push
repz
popf
jmp
data16
loop
mov
cmp
xlat
xchg
inc
sti
mov
addr16
cli
subb
stos
lds
andl
popa
movsl
cmc
loope
mov
push
sbbb
rclb
dec
clc
add
scas
pushf
ret
test
fmull
xchg
sbb
lret
jb
jne
cmp
adc
sub
in
adc
jae
mov
push
in
push
lock
sti
test
xchg
shll
fbld
add
insb
sbb
fisttpll
orl
mov
pop
pop
jbe
pop
mov
and
lods
adc
push
loop
movsl
push
sub
out
xchg
mov
pop
in
cmp
lcall
arpl
int3
scas
jbe
push
push
sarl
mov
fs
decb
cmp
call
das
push
mov
push
sbb
fucom
mov
xchg
jns
and
sbb
lret
xor
int
jnp
xor
and
sar
bound
std
mov
sbb
xor
lret
leave
mov
movsb
push
push
data16
mov
shld
les
test
sahf
ss
mov
sub
mov
dec
outsb
jae
outsl
xchg
mov
lcall
xchg
push
jno
xlat
jae
inc
out
mov
loopne
pop
mov
aam
mov
push
add
rcll
xchg
or
mov
push
mov
mov
inc
jbe
daa
jg
sbb
sub
adc
mov
inc
stos
mov
js
dec
pop
mov
jns
scas
lods
adc
addr16
jnp
pop
or
pop
stos
push
loopne
push
sbb
and
test
sub
pushf
xlat
es
mov
test
and
xchg
fcomps
rcrb
in
inc
fisubrl
sbb
insl
jb
and
data16
aaa
or
pop
jnp
xlat
push
xchg
and
add
xchg
xchg
xor
or
sti
jo
shl
mov
flds
push
cmp
xchg
sbb
dec
lods
jl
mov
or
leave
scas
shll
cwtl
push
int
pusha
imul
out
cmc
nop
jbe
into
add
hlt
pop
pop
fcmovbe
pop
mov
cmpsl
sti
adc
sub
lds
loop
add
movsl
imul
or
stos
cmpsl
nop
cli
cltd
sub
cmpsb
mov
stos
cwtl
mov
lea
imul
out
jmp
mov
enter
dec
enter
nop
lea
aas
into
push
cmpb
mov
push
loopne
in
les
shrb
ret
ss
mov
insb
or
dec
ljmp
push
mov
sub
inc
mov
pop
lds
cmp
ds
adcb
lret
xchg
movsb
lea
pop
add
pop
xchg
mov
cmp
xor
pop
adc
dec
push
push
rorl
and
mov
andl
pop
popf
sub
mov
test
pop
hlt
fs
jge
mov
cmp
jns
in
pusha
popf
mov
cli
xchg
sti
cmp
into
mov
mov
stos
cmp
xor
rolb
stos
inc
dec
dec
in
jp
mov
push
sub
ds
das
mov
cmc
enter
fstpl
into
outsb
pusha
push
movsl
mov
outsb
xchg
and
mov
mov
sbb
pop
imul
mov
outsl
int3
xchg
push
out
mov
and
imul
fwait
jl
cmp
xchg
fnstcw
inc
adc
subl
and
xor
jl
push
add
stos
pop
push
insb
enter
push
mov
pop
push
adc
mov
filds
popf
mov
xchg
rclb
cmp
push
mov
ja
push
pop
or
jbe
outsb
fistpll
or
rcll
arpl
dec
adc
push
es
dec
aaa
xchg
xor
into
push
filds
jp
fstpl
sti
and
repz
add
or
lcall
out
arpl
jg
leave
mov
call
sbb
insl
ljmp
fneni(8087
xlat
shrb
mov
jmp
cmp
subl
jl
insl
dec
pop
push
insb
std
cmp
push
pop
cmp
into
popl
dec
sahf
fs
inc
out
xchg
data16
scas
int3
or
loop
out
cmp
push
add
inc
dec
pop
in
xor
pop
dec
rcrl
lock
aaa
in
sub
jp
or
mov
sbb
pop
xor
aam
shrb
or
jmp
cli
popa
pop
sbb
xchg
and
mov
jne
fwait
or
mov
add
daa
fcmove
mov
cmp
jecxz
jnp
jp
ss
shlb
push
iret
cmpsl
xor
shlb
xchg
pop
and
ficompl
push
data16
ss
xor
fistpll
andl
inc
jmp
lahf
leave
loope
sub
xchg
push
inc
lods
jb
inc
xor
test
jmp
or
cltd
mov
sbb
mov
inc
inc
and
popa
clc
imul
pop
loope
sub
push
rcrl
push
jbe
imul
xchg
sub
movsb
pop
ja
or
xchg
mov
les
subb
cmp
xlat
icebp
pop
dec
jae
je
and
dec
sub
je
jg
aaa
jle
add
sbb
jae
insb
fisttps
mov
iret
mov
mov
clc
jg
mov
and
or
push
lods
cmc
mov
add
ljmp
push
sub
sti
mov
out
in
stos
mov
and
mov
ja
stos
mov
test
push
adcb
push
sahf
es
push
lds
adc
push
cmp
xor
movsl
cld
sub
mov
mov
jle
ret
xchg
cmp
mov
xor
jae
mov
dec
dec
push
ja
pop
adc
je
sub
xor
adc
dec
in
push
in
dec
lds
jmp
test
lahf
jle
sbb
roll
dec
push
add
mov
out
into
fcomps
add
sbb
dec
cltd
mov
cltd
mov
push
test
pop
jmp
sub
mov
icebp
jge
sub
xchg
insb
outsb
ljmp
stos
vpaddsb
jae
xlat
inc
push
add
aad
adc
subl
lock
or
mov
mov
loop
and
clc
dec
mov
inc
das
loop
and
and
cmp
in
ljmp
cli
push
out
jbe
andb
imul
mov
cmc
sub
cmpsl
cmpsb
test
ret
xor
push
iret
sti
and
inc
movhps
cmc
push
xchg
into
push
out
outsl
movsl
mov
mov
and
dec
cwtl
ss
aam
inc
inc
lods
dec
mov
push
and
cmpl
into
xor
or
gs
lds
cmpb
dec
arpl
or
in
out
sbb
mov
fbld
pop
adc
in
lret
push
imul
jno
jae
out
xchg
add
or
adc
lahf
pop
mov
fnstenv
add
pop
xchg
or
mov
and
loop
and
or
mov
repz
into
cwtl
mov
fists
aam
movsl
jle
lds
cmp
addr16
pushf
nop
inc
insl
jb
fisttpll
mov
jg
dec
rorb
xchg
jb
shlb
and
cmpsb
cmpsl
and
sbbb
mov
test
insl
orb
jle
push
push
mov
fmul
scas
or
mov
fsin
mov
jns
sbb
rcrl
repz
in
dec
les
pop
leave
enter
loope
cmp
cmp
int3
xchg
cmp
cwtl
lds
mov
sub
or
adc
lahf
cmp
sbb
into
ret
clc
jo
xchg
ljmp
fistl
mov
movsl
ds
mov
int3
cmpsb
jl
push
cmp
dec
nop
dec
cmp
call
fstp
insl
push
add
repz
fldt
in
mov
and
icebp
hlt
xchg
and
ss
sbb
pushl
data16
pop
sub
fadds
roll
in
adc
pop
mov
loope
lcall
jno
cmpsb
ret
ficomps
lret
test
fbld
fisubrl
adc
add
mov
pop
rcrb
cmc
shlb
pop
jmp
cli
dec
ja
movsl
xchg
mov
add
mov
jp
and
add
popf
push
inc
or
mov
push
mov
call
inc
mov
xchg
lret
push
jmp
cmp
xchg
pop
mov
sub
icebp
xor
ret
xor
jmp
stc
pop
and
and
jp
mov
dec
andb
fwait
lret
aaa
or
inc
mov
xchg
ds
leave
jmp
adcl
mov
cmpsl
int3
xor
mov
push
push
ds
xchg
xchg
push
mov
lock
mull
scas
push
dec
and
popa
xchg
cmp
pop
xchg
pop
mov
cmpsl
cmp
cld
es
lret
sub
insl
jb
movsb
sbb
jbe
iret
daa
subb
fildll
call
dec
pop
popf
jge
mov
xor
add
lcall
xlat
les
xchg
in
lret
sbb
adc
adc
fwait
aas
cli
popa
testl
cmp
jns
or
pop
sbb
imul
xchg
sbb
out
push
jns
jno
ud1
cwtl
out
std
cmpsb
push
mov
mov
aaa
std
fistpl
push
lods
jle
cmc
loopne
or
bound
jnp
and
scas
jb
and
lcall
mov
cmp
and
icebp
add
stos
mov
inc
lahf
arpl
data16
push
flds
daa
mov
sub
adc
and
push
xchg
push
xor
mov
sub
rcrb
negb
lock
aad
mov
push
popa
int
cmp
sbb
and
xchg
mov
repnz
mov
out
mov
jae
jnp
lahf
pop
sub
pusha
sub
push
inc
outsl
add
int
mov
xchg
daa
aad
cmpl
sbb
movsb
and
sub
repnz
out
mov
stos
dec
dec
mov
jl
std
jbe
push
popf
adc
and
push
xchg
jmp
pop
ja
in
mov
mov
jg
js
pop
push
sub
popa
add
pop
mov
rorl
and
and
stos
sbb
mov
adc
ret
shlb
mov
mov
into
pop
iret
push
std
cmp
or
frstor
fstl
cwtl
and
push
aam
mov
lods
shrb
insb
arpl
fsubp
scas
adc
xchg
jo
test
mov
add
addr16
cld
fwait
xor
mov
lcall
sub
mov
adc
popf
lock
mov
or
wrmsr
xor
xchg
pop
sub
enter
push
adc
jne
popa
fs
icebp
and
and
loopne
or
in
pop
mov
sbb
in
inc
int
dec
pop
mov
xchg
mov
aam
push
fidivl
shll
push
cwtl
pop
and
mov
int
loop
pop
inc
insb
pop
or
xor
in
nop
popa
sti
mov
jnp
cmpl
jno
pop
inc
add
je
mov
iret
test
pop
cmp
jg
add
mov
or
test
xchg
out
loope
pop
dec
in
sbb
test
jbe
aam
pop
icebp
in
nop
sahf
cmp
cs
rclb
outsl
pop
push
pop
fsubrs
loope
mov
mov
xchg
xchg
outsb
fwait
lret
lcall
add
adc
and
cmp
xchg
fstp
xchg
shl
lea
dec
adc
xor
test
push
or
fwait
ss
dec
pop
sbbb
dec
sbb
rcrl
shlb
jge
pop
adc
mov
scas
jp
out
push
mov
insb
or
inc
int3
sbb
aad
rol
push
and
push
es
sub
dec
stos
je
pop
lcall
popa
pop
in
andl
test
movsl
pop
jno
daa
sub
cmc
mov
pop
imul
mov
and
pop
outsl
ret
mov
scas
ja
dec
dec
adcb
in
mov
test
pop
sbb
lock
mov
mov
push
incb
and
outsl
mov
out
adc
addl
push
fdiv
hlt
cmp
in
mov
xchg
adc
aaa
add
out
pusha
push
fldenv
cmp
sti
imul
loopne
push
pushl
pop
or
or
cltd
and
ja
in
xchg
sahf
jno
out
sbb
test
inc
pop
icebp
lds
sub
add
mov
int
out
adc
cld
pusha
or
push
mov
outsb
divl
stos
sbb
pop
cmpsb
sub
int
xor
push
and
sbb
ficoml
les
out
add
inc
dec
fiadds
xchg
xor
push
mov
cmp
jl
inc
sbb
dec
mov
or
insl
xchg
std
loop
leave
les
sub
add
sub
xor
mov
movsb
loop
fdivl
fidivrl
push
clc
inc
add
loop
aas
sub
wrmsr
jp
jg
out
or
and
mov
pop
cmp
lea
mov
repnz
out
dec
add
fs
dec
mov
push
int3
push
loop
and
lea
cs
or
fwait
outsb
sub
into
jns
cli
sbb
in
fnsave
mulb
addl
lods
add
mov
mov
inc
in
pop
adc
mov
scas
xor
xor
pushf
and
add
icebp
mov
mov
jne
call
pop
icebp
inc
int3
cvtps2pi
mov
dec
xchg
pop
cmp
cmp
out
insl
aaa
xor
cmp
lods
cli
pop
mov
loopne
pop
mov
fbld
cmc
pop
popa
lods
mov
push
mov
sub
stos
pop
jl
mov
sub
movswl
stos
arpl
cmp
adc
movl
sub
aam
add
fwait
bound
mov
jns
enter
int3
or
inc
sti
cmp
or
and
jle
pop
or
dec
push
mov
jl
testb
ret
repz
cmp
or
js
pop
adc
loope
nop
sarl
nop
or
cmp
out
jns
bound
mov
call
cmpsb
popa
sub
xor
adc
adc
cmpsl
int3
lods
popa
in
dec
pop
or
push
mov
insb
std
mov
dec
scas
dec
xchg
pop
movsl
dec
and
enter
loope
pop
lret
jb
into
pop
mov
js
mov
pop
scas
hlt
insb
loop
ja
or
adcl
xor
cld
xor
xchg
xor
inc
add
jp
outsb
stos
mov
rcrl
cwtl
push
xchg
cmp
dec
cmc
push
jae
aas
pop
aas
out
or
jecxz
fldenv
xor
push
xchg
stos
cli
jae
aam
or
ss
pop
in
xchg
mov
ja
pop
jae
jo
icebp
xor
add
mov
dec
sbb
sti
cmp
xchg
add
cmpsl
scas
das
in
add
jno
adc
jnp
lea
and
cmpsl
add
out
jecxz
push
cmpsb
insb
xchg
addr16
pop
inc
scas
sub
xchg
xchg
mov
sub
int3
aas
mov
inc
ror
cwtl
lea
ss
sub
add
imulb
adc
cs
bound
xor
rolb
mov
xchg
adc
lahf
xor
mov
hlt
or
es
cmp
jne
rorb
mov
fs
in
lret
scas
in
cltd
fdivr
mov
nop
mov
xchg
inc
or
mov
add
pop
pop
subb
and
les
jecxz
mov
jl
arpl
or
adc
outsl
ret
jns
ds
xchg
jmp
xor
loope
xor
rorb
add
push
add
sbb
push
fstpt
push
loopne
pop
mov
in
enter
inc
dec
xchg
lret
push
test
pop
fistl
out
sub
cld
shlb
fcoms
mov
push
int3
push
pop
push
movsl
fmull
cld
pop
lods
xchg
cmp
xchg
or
fstpt
adc
mov
out
add
pop
cltd
pusha
xchg
dec
insb
inc
mov
mov
or
lock
cmpsb
mov
int3
sub
xchg
divl
and
jnp
inc
cs
inc
inc
add
jb
mov
sbbl
mov
dec
adc
out
test
fsubl
adc
frstor
clc
add
add
ljmp
pop
mov
rorl
sbb
cmpsb
mov
aam
repnz
add
sbb
xchg
lret
mov
lret
sbb
lret
pusha
xchg
push
jnp
addr16
xor
imul
dec
cmpps
movsb
xchg
jle
shlb
pop
in
push
or
mov
mov
push
cmp
cmp
mov
inc
hlt
in
das
dec
or
inc
shll
repnz
adc
cwtl
inc
sbb
push
cmp
aaa
xor
sahf
insb
cmp
dec
out
out
mov
mov
dec
jnp
repnz
subl
jle
jno
insl
les
cmp
inc
js
pop
rcr
pop
popa
mov
mov
popf
repnz
mov
push
mov
sahf
imul
data16
jl
imul
add
jns
lcall
add
aad
mov
mov
ret
ljmp
test
jne
push
outsb
dec
hlt
mov
dec
sub
mov
push
loop
push
push
sub
cmpsl
xchg
mov
popa
insl
jnp
pop
cmp
add
jle
das
adc
cmpsb
lahf
call
adc
cmpsl
xchg
js
fdivs
loop
js
adc
mov
mov
pop
pusha
jne
inc
pextrw
imul
add
arpl
iret
pop
adc
mov
or
ret
cmpsl
xor
scas
sbb
jp
fs
adc
call
divb
jg
ss
sub
popa
idivl
lods
test
dec
cwtl
ja
mov
scas
xor
xchg
sub
add
jne
adc
cmp
cs
in
cld
pop
xorb
hlt
ret
mov
imul
adc
divb
rorl
mov
mov
add
in
cmc
dec
push
inc
pop
or
push
adc
loop
push
or
fdivrl
dec
ja
stos
mov
cmpsb
repz
std
aaa
arpl
jl
jecxz
mov
inc
and
sarl
sbbl
mov
inc
loope
inc
mov
xchg
dec
mov
mov
mov
and
movsb
mov
out
pop
push
pop
inc
mov
pusha
lds
sub
jp
lock
movsb
lret
out
das
adc
decl
scas
adc
inc
lea
fmull
fmull
jecxz
sub
imul
shlb
test
adc
sbb
in
inc
mov
mov
mov
shrb
bound
jb
jno
xor
mov
das
imul
mov
sbb
mov
and
repz
xor
jns
es
mov
mov
sbb
jl
inc
scas
ret
dec
shrb
xor
pop
leave
outsb
fstl
pop
xchg
sub
mov
push
mov
pop
jge
daa
stos
lret
inc
jae
hlt
push
jne
inc
std
repnz
adc
inc
mov
ss
xor
outsb
cli
cltd
fadds
xor
and
daa
cs
adc
sarl
popf
or
stos
jmp
cmp
ljmp
in
scas
add
sub
push
mov
ret
loope
pushf
jp
rcr
ja
inc
sub
fsub
sar
and
dec
orb
jne
es
and
xor
mov
loop
xchg
jge
cmp
xchg
jns
aas
push
xchg
divb
adc
sub
push
sahf
dec
and
cmp
addr16
cmp
mov
push
pop
push
testb
outsb
xor
cmp
ret
pop
fimull
jns
rolb
nop
ljmp
cwtl
add
mulb
fnsave
cmp
cmp
pusha
push
adc
or
andb
jmp
daa
imul
mov
jge
shlb
stc
ret
sub
out
or
xchg
call
jmp
stc
mov
popa
or
stos
pop
sar
push
push
dec
add
adc
push
mov
jg
dec
mov
jns
sbb
pushf
mov
test
test
xorb
test
inc
lcall
scas
push
scas
loop
and
mov
sbbb
test
mov
je
and
test
sub
xor
dec
cmp
jge
push
and
movsb
imul
js
cmp
jmp
xor
test
ja
mov
sti
adc
cmp
aas
dec
or
cld
and
jmp
push
das
xchg
pop
xchg
pop
dec
jle
rorb
loope
mov
popl
mov
mov
pop
cmp
lahf
mov
outsl
xchg
insb
loop
jle
add
sub
cld
sbb
and
adc
inc
jp
ds
push
jmp
pop
scas
mov
lcall
dec
jmp
out
inc
ret
sub
leave
xchg
mov
aaa
and
std
pop
sbb
push
add
mov
pop
jne
pop
push
jne
cltd
xlat
sbbl
or
inc
pop
cmp
cmpsb
insl
jbe
hlt
aam
jg
repnz
push
inc
fs
xorl
jmp
outsb
addb
add
mov
std
filds
aas
sahf
jbe
aaa
add
adc
sub
add
dec
es
cwtl
xor
dec
or
lcall
inc
mov
jne
pop
imul
xsavec
push
xchg
scas
hlt
push
sub
or
cli
pop
outsb
adc
lret
fnsave
insl
push
xchg
gs
rcll
mov
cmpsb
sub
std
adc
lods
pop
lahf
out
mov
cltd
jl
xchg
or
add
gs
repz
out
xlat
cmp
inc
xchg
getsec
dec
and
scas
andb
data16
bnd
adc
and
push
mov
imul
cwtl
dec
mov
pop
xchg
cmp
push
pop
fwait
sub
push
into
inc
add
insb
rcl
sbb
cmp
gs
lock
icebp
xchg
outsb
mov
out
push
mulb
addr16
ja
outsl
cmp
dec
outsl
nop
out
xchg
fistpll
xor
or
mov
push
push
cmp
mov
jno
clc
push
push
mov
sub
arpl
popa
cs
ljmp
std
and
pushf
rcl
and
ds
addr16
fdivrp
cmpsl
in
ds
add
cli
or
fadds
jmp
cld
xor
mov
push
fmull
push
andb
xor
push
popa
insb
ret
jmp
notb
pop
in
shlb
mov
mov
jnp
sahf
mov
les
cld
shll
test
ja
jmp
idivb
in
adc
icebp
mov
or
inc
pop
out
jmp
icebp
cmc
stos
roll
arpl
xor
mov
add
and
mov
out
inc
jge
aam
jbe
or
xlat
hlt
popa
subb
push
imul
andb
xor
in
xchg
insl
xchg
ret
mov
and
mov
push
bound
or
pop
aam
mov
adc
xchg
cwtl
mov
arpl
adc
and
insl
mov
cmp
xor
jnp
jl
mov
pop
or
push
shr
das
cwtl
xchg
jl
lea
andb
pop
fwait
out
jecxz
mov
jp
add
sub
push
roll
sbb
stos
std
pop
pushf
out
gs
dec
push
test
mov
pop
mov
enter
mov
mov
sub
imul
out
pushf
adc
adc
jle
cmp
lahf
ffreep
roll
cmpsb
in
scas
push
cmp
mov
cs
fsts
mov
outsl
inc
int3
sbb
inc
cwtl
arpl
add
xor
jecxz
mov
jb
cmp
inc
ret
sub
mov
movsl
lods
xor
or
bound
jge
fdivl
fstpl
jg
mov
mov
js
xchg
cmp
cmpb
push
add
fdivl
pop
imul
roll
mov
dec
pusha
mov
ja
mov
mov
xor
pop
int
scas
outsb
arpl
xlat
add
test
pop
mov
gs
inc
out
test
and
movsl
repnz
out
mov
stos
dec
xchg
sahf
imul
in
inc
insb
add
les
bnd
aam
adc
mov
mov
loop
lea
jl
decl
mov
outsl
cmpsl
inc
ret
mov
in
fmull
test
or
ret
iret
xor
inc
or
insb
popf
jo
scas
lret
in
bound
jg
cld
sbb
push
add
inc
or
stc
cmp
loop
mov
gs
sbb
pushf
mov
adc
imul
bound
cli
daa
pop
xorb
and
rolb
inc
orl
movsl
xchg
push
movlps
jbe
mov
cmp
pop
pop
adc
jbe
xchg
and
add
mov
xorl
xor
outsb
and
mov
setg
scas
inc
xchg
jg
mov
add
and
icebp
rcl
out
js
mov
and
rcll
fisubrl
jns
insl
cmc
push
leave
hlt
sarl
shlw
and
subl
push
or
es
sbb
inc
sub
in
jmp
jnp
mov
fimuls
push
int3
nop
jns
dec
lcall
lahf
cwtl
dec
sbb
stc
hlt
or
mov
icebp
cmpsb
lret
jae
sbb
jge
mov
add
inc
js
scas
int
sarl
cmpsl
stc
setnp
mov
and
xor
or
xorb
test
adc
inc
xor
xchg
and
sub
mov
cld
push
jnp
movsb
cmp
inc
sbb
stos
in
into
mov
mov
push
rolb
jl
push
loope
and
or
loop
fldl
sbb
add
call
fisttps
aaa
dec
dec
cmp
rorb
hlt
ja
mulb
push
pop
mov
gs
cmpsl
lret
fsts
ret
fidivl
mov
das
dec
jo
or
jle
rcll
xor
test
stos
mov
push
stos
mov
xchg
jecxz
test
dec
mov
xchg
cmp
dec
or
sub
adc
mov
jecxz
in
xlat
jle
loopne
outsl
fs
push
mov
mov
sub
shrl
lahf
sbbb
int3
sti
and
push
pop
pop
shl
dec
jb
into
loope
not
cli
test
xor
clc
mov
in
lret
icebp
das
lea
fsub
mov
add
sub
inc
push
mov
dec
pop
xchg
xrelease
mov
rcl
add
pop
dec
push
bound
mov
adc
jecxz
je
stos
movsl
cmp
xlat
add
mov
push
cmp
add
test
ss
ret
insb
aad
stos
xchg
fildll
rcr
repz
es
in
call
cmpl
adc
rorb
hlt
adc
mov
cmpsb
adc
dec
sub
or
mov
rcrb
xchg
cmc
xor
movsb
pusha
aad
mov
pop
sbb
imul
push
add
es
jecxz
pop
outsl
mov
cmp
pusha
mov
ret
and
ror
push
mov
sbb
insb
mov
enter
push
insl
pop
imulb
rcll
sub
aaa
outsl
fdivr
imull
dec
mov
cli
dec
stc
daa
int3
hlt
or
repz
mov
mov
mov
cmp
push
xchg
sbb
ret
in
inc
shlb
iret
lcall
sub
push
or
inc
inc
mov
dec
jbe
inc
rol
ret
out
std
sarb
sub
adc
sar
repz
xchg
xor
fisubl
cmpsl
inc
and
mov
push
pusha
dec
test
call
xor
push
ds
aad
xchg
cmp
and
cltd
hlt
into
jne
repz
pop
mov
cmp
mov
dec
bound
inc
cmp
jmp
int3
shll
hlt
fadds
pop
xchg
das
mov
adc
clc
jne
push
add
jns
dec
and
fsubrs
mov
and
test
pop
inc
ja
test
jbe
mov
lret
fisubl
mov
std
sub
jbe
dec
scas
push
mov
jbe
or
cmp
mov
xchg
mov
sbb
pop
adc
es
loopne
sbb
shl
sub
leave
xor
jl
sti
fsubs
add
repnz
lahf
loop
into
adc
aaa
lods
cld
js
xchg
push
push
jle
pop
adc
in
subl
xchg
or
jo
arpl
mov
mov
push
or
mov
pop
inc
inc
xchg
sub
push
mov
stc
dec
ss
cwtl
dec
jbe
adc
push
inc
sub
mov
xor
dec
pushf
fs
scas
sub
daa
cmp
bound
stos
fucomip
lods
jae
sbb
cltd
call
ret
adc
mov
xor
adc
rol
mov
es
inc
inc
jmp
movsl
push
or
jge
and
cltd
and
or
lcall
and
sbb
cmp
fnstenv
insb
rcrb
enter
and
jecxz
imul
xchg
cmp
shll
pop
dec
xchg
cld
adc
das
inc
dec
lock
xchg
loopne
aam
sub
outsb
leave
or
pop
mov
cmp
pop
mov
and
xchg
xor
cs
fiadds
inc
adc
incl
dec
in
pop
insl
add
jae
orb
nop
hlt
xor
inc
push
jne
cmp
mov
xchg
jecxz
push
cld
lret
mov
in
sub
cmp
dec
icebp
jge
mov
push
push
push
mov
mov
into
leavew
xor
or
pop
jmp
xchg
int3
insb
xchg
sbb
add
cmp
scas
stos
pop
sub
sub
std
push
mov
cmp
mov
subl
test
jne
xor
int
aad
enter
sub
mov
into
xor
adc
ret
adc
and
adc
stos
lret
iret
insl
jmp
iret
dec
cmp
fwait
jno,pt
es
clc
or
cmp
aas
push
xchg
sub
outsl
call
testb
hlt
sbb
jne
push
dec
and
adc
test
fisubrs
xchg
xchg
out
in
xchg
and
shl
mov
outsb
push
sub
lret
sti
fcmovne
mov
mov
call
nop
lods
aas
mov
ljmp
lcall
push
cmpsl
subb
je
add
add
jns
sub
setb
adc
mov
add
mov
xchg
sahf
push
or
mov
sbb
inc
repz
sbbb
mov
push
push
outsl
dec
cltd
pop
mov
inc
jne
mov
in
movsb
sbb
daa
jo
and
cmp
inc
jecxz
mov
inc
in
xor
sbb
je
fwait
rorl
rcrb
mov
sbb
xor
xor
pushf
push
mov
push
mov
fwait
sub
mov
jno
testl
xor
cmp
cmp
aad
mov
sub
xor
loope
mov
iret
fdivl
mov
or
lcall
xor
dec
jmp
shrb
insb
mov
add
mulb
sub
mov
sbb
and
jno
adc
jb
jae
push
mov
add
sti
loopne
or
push
sbb
inc
bound
ljmp
pop
stos
push
fwait
sbb
push
data16
pop
decb
and
icebp
jbe
or
mov
enter
dec
out
push
xchg
stos
rcll
add
pop
insl
mov
jp
adc
jge
movsb
mov
ss
fistpl
and
mov
adc
sbbl
xlat
xor
pop
cmc
inc
mov
and
js
lahf
outsl
aaa
out
mov
dec
outsl
stos
sbb
nop
pop
lods
out
mov
cmpsb
loope
push
mov
cwtl
jb
push
or
pushf
cmp
aaa
cmp
xchg
mov
mov
sbb
rclb
jno
push
in
dec
cmp
aam
in
lret
test
add
ss
mov
push
or
xchg
ss
aaa
lahf
rorb
xchg
fidivl
enter
xchg
mov
xchg
in
push
mov
xchg
jmp
inc
out
ficoms
xor
adc
les
xlat
addr16
mov
aam
sbb
scas
or
popf
imul
popa
push
sbb
jge
cmp
lahf
je
ret
iret
push
daa
jge
stos
cmpsl
out
outsl
sbb
ds
xchg
cmpsl
out
in
pushf
ss
fldenv
mov
pop
enter
push
rolb
decb
and
add
addr16
leave
jg
int3
add
cmpsl
mov
shll
scas
test
and
mov
stos
adc
leave
push
test
cmp
daa
sub
sub
mov
jne
js
int
adc
mov
addr16
lds
aad
cld
pop
pusha
push
pop
cs
inc
xor
clc
adc
fdivrl
insb
jno
pop
sbb
scas
out
jo
movsb
xchg
sub
data16
jbe
ja
scas
jg
cs
lods
test
xchg
cmpsl
sbb
loope
cmp
inc
addr16
dec
xchg
in
sbb
pusha
mov
xchg
pop
iret
lea
mov
mov
and
mov
shl
std
loop
cmp
xor
and
and
inc
test
cmc
dec
bound
sbb
pop
mov
sbb
shlb
pop
xor
pop
out
sbb
pop
adc
mov
push
ja
shr
das
inc
jecxz
xchg
mov
or
es
fsubl
outsb
add
inc
ret
mov
pop
das
repz
stos
cltd
jb
ds
mov
clc
mov
inc
and
jmp
fisubl
addb
std
cwtl
cmp
mov
mov
add
fildl
pop
js
xor
xlat
inc
dec
mov
in
out
lods
cmp
popl
xchg
or
inc
push
lea
jne
aas
sbb
dec
xchg
jb
fdivrl
push
idivl
mov
lds
sub
pslld
insl
jns
std
mov
jl
loop
loopne
rorl
lock
dec
outsb
push
jae
lret
mov
test
lret
fsubrs
push
mov
or
mov
sub
wbinvd
pop
es
jnp
adc
roll
addr16
aad
mov
jge
pop
popa
data16
sbb
and
into
sub
dec
push
mov
ret
ljmp
in
cmpsb
mov
lods
cmc
and
clc
inc
mov
cwtl
imul
insl
cmp
and
adc
jb
ret
mov
or
cmp
or
fwait
test
jno
cmp
or
dec
fcomp
clc
push
clc
loopne
add
xchg
adc
or
repnz
int3
loope
inc
sub
xor
scas
mov
xchg
mov
mov
ja
fmull
gs
outsl
rcrb
imul
and
mov
xor
cmpsl
outsb
insb
adc
cmp
pop
lret
cli
push
imul
shr
data16
popa
test
pop
int
out
adc
mov
pop
sub
aaa
fsubrl
push
add
push
mov
lahf
lret
cmc
inc
or
sub
mov
or
push
leave
xor
ja
push
cwtl
inc
nop
in
cmpsl
pop
inc
ret
ret
cmp
lcall
test
inc
jg
stos
mov
fstpl
sbb
sbb
jmp
and
xor
scas
cmpsl
arpl
pop
sbb
mov
mov
xor
bound
pusha
pop
mov
jno
cwtl
lahf
fiadds
sub
rcl
xlat
mov
fnsetpm(287
pop
cmc
adc
sti
xchg
les
xchg
lret
out
mov
add
shl
sbb
mov
int
push
sbb
shr
scas
mov
data16
movsb
lea
mov
rcr
inc
popf
push
cmp
test
clc
cmpb
or
stos
test
scas
mov
push
jl
jns
aad
push
repnz
clc
push
daa
adc
lea
xchg
mov
cmp
jmp
test
xor
jl
cmpsl
into
inc
imul
loopne
jns
inc
jbe
lods
jo
sbb
test
pop
jno
imul
repz
ror
dec
and
push
xchg
xor
imul
xchg
add
and
ds
in
testl
adc
jbe
jns
int3
xor
sub
push
and
pcmpgtw
inc
push
pop
and
out
xchg
ja
push
or
pop
jge
mov
insb
mov
mov
xlat
lret
and
int
inc
insl
push
adc
lea
nop
mov
js
cld
jecxz
inc
add
popf
and
out
out
imul
adc
adc
divb
adc
push
idivl
cwtl
repnz
rcrl
hlt
and
addr16
rcrb
sbb
push
clc
nop
dec
pop
leave
lea
mov
pusha
push
jns
sbb
sbb
mov
sub
adc
fadds
mov
icebp
and
lret
fiadds
push
xchg
filds
push
std
pop
repz
fwait
mov
xor
mov
imul
push
divl
leave
popf
in
jg
mov
clc
fmull
ja
mov
fwait
add
sbb
cmp
bound
icebp
hlt
aaa
sbb
push
sub
std
jg
in
mov
stos
loope
addr16
jp
subl
push
faddl
dec
mov
jmp
aad
jmp
pop
out
inc
pop
dec
pop
mov
sarb
cmc
data16
xchg
aas
mov
fidivrl
mov
out
addr16
cmp
aas
cmp
jne
jp
bound
pop
jecxz,pn
rcr
loop
mov
cmpsl
dec
lret
jae
rcrb
jl
shlb
shll
push
dec
jae
js,pt
in
mov
cmpsl
loop
cmp
pop
outsb
sub
xchg
repnz
dec
sub
pop
psrlw
das
jns
into
ret
les
push
subl
xchg
pop
mov
xchg
sahf
inc
gs
lret
mov
sbbb
fsubrs
mov
lret
sbb
in
cmp
je
cmp
scas
lds
and
les
loope
sbb
scas
movsl
jge
jle
and
push
adc
inc
mov
sti
aaa
insb
add
aaa
fnstenv
lea
int3
sub
mov
xchg
inc
xchg
or
pop
and
adc
or
loope
rclb
add
in
inc
movsb
pop
jnp
mov
pop
push
mov
jp
outsb
xor
lods
subb
jmp
addr16
inc
rorl
imul
xchg
imul
or
add
cmp
arpl
mov
mov
icebp
jl
add
sbb
jb
ret
or
daa
mov
mov
iret
dec
adc
mov
sub
mov
fcomps
test
add
shr
scas
mov
repz
test
mov
sarb
jle
sahf
cltd
push
je
sub
push
pop
test
mov
sbb
ret
inc
notb
adcl
shrb
je
ljmp
sbb
enter
jge
js
lret
test
adc
frstor
push
stos
xor
xchg
and
mov
test
xchg
jno
inc
jge
call
push
imulb
out
fcomps
push
int3
and
push
pop
inc
leave
cmp
inc
mov
jne
orl
sbb
sub
push
jecxz
jo
pop
orl
push
jg
idivl
sbb
rolb
jle
cmp
jl
lcall
jb
pop
sub
or
js
lods
in
ds
add
test
inc
cmp
pop
in
in
mov
mov
scas
shlb
into
mov
and
rcrl
fld
call
nop
mov
gs
pop
aam
pop
mov
test
pop
mov
push
loopne
stos
std
push
xchg
jns
sbb
out
mov
add
cmpsb
gs
push
pushf
clc
int3
cld
int3
sbb
pop
lret
frndint
or
jae
ret
sub
sahf
aad
push
popf
nop
imul
pop
adc
dec
lahf
pop
outsl
leave
fcmovb
add
inc
xor
xchg
aaa
bound
jmp
movsb
mov
ret
push
call
lock
lcall
mov
ret
dec
and
mov
sbb
xor
imul
or
lcall
lahf
cmp
je
outsl
add
gs
pop
nop
or
insb
jmp
or
sbb
push
pusha
pop
add
insb
cmp
loopne
mov
pop
testl
mov
push
xchg
inc
xchg
ret
insb
xchg
ret
out
or
add
pop
cli
add
xchg
movsb
sub
jns
push
enter
mov
pusha
lock
push
arpl
sahf
push
adc
loopne
jae
dec
sbb
cld
scas
cld
inc
sub
mov
push
lds
lock
imul
sbb
xor
pusha
inc
iret
adc
std
hlt
sti
call
jno
xchg
inc
mov
push
add
xchg
cmp
push
movsl
test
sbb
mov
loope
mov
mov
insb
cli
dec
add
mov
cmpsb
cmp
cmpsb
inc
add
xor
int
jecxz
shl
out
push
dec
mov
loopne
push
adc
gs
das
jle
and
std
push
subb
and
add
int3
add
cmpsl
sub
cwtl
out
jne
lcall
movsb
or
test
xor
adc
cltd
push
mov
dec
cmpsb
fucom
sbb
cmp
push
pop
repnz
inc
ficompl
cmpsl
stos
sub
pop
inc
push
cmpsb
pushf
popa
dec
push
out
flds
fimull
pop
cltd
addr16
dec
push
orl
xor
adc
cmpsb
mov
jecxz
mov
push
fistpll
or
jnp
aad
mov
mov
mov
xor
lret
xchg
test
out
mov
imul
pop
loop
jnp
inc
and
movsb
cmpsl
or
roll
test
in
jg
jmp
cmpsl
stos
push
adc
outsl
popa
mov
sub
sar
jo
add
and
popa
jge
pop
or
lret
dec
shlb
ficomps
fldenv
out
pop
mov
cmp
add
inc
data16
xlat
pop
jne
sub
adc
mov
arpl
pop
jnp
das
push
cli
xor
xchg
add
dec
repz
rorb
in
add
andb
bnd
sbb
testb
mov
fldt
bound
xor
pop
aaa
in
insl
subl
sub
cmp
test
pop
or
out
lret
in
or
imul
xor
xor
xchg
insb
sub
outsl
in
cmp
out
xchg
orb
xor
fwait
dec
int3
hlt
imul
in
ret
push
in
aad
adc
cmp
mov
pop
jecxz
xor
lret
movsb
aam
repnz
lea
dec
sub
jb
dec
repnz
in
pop
loop
push
enter
shlb
sarb
fdivs
adc
popa
outsb
jo
jbe
movsl
jo
xor
out
dec
push
add
inc
jmp
xchg
fiadds
repnz
add
lret
jbe
inc
scas
lock
cltd
xor
xchg
jno
add
adcb
mov
mov
lcall
scas
mov
xlat
test
in
push
jl
scas
arpl
cmp
dec
shr
xchg
fadds
and
lret
or
aaa
stos
xchg
dec
stos
dec
or
sar
add
aad
mov
mov
adc
fsubl
test
rorb
fisttps
or
push
add
jmp
xchg
in
cwtl
mov
in
xor
or
add
mov
or
dec
sub
sbb
jmp
pop
aas
js
lcall
xchg
xor
push
arpl
sti
in
ja
ror
push
cld
inc
pop
rcrb
push
loope
aas
notl
xor
pop
mov
inc
cmpl
roll
mov
in
pop
xorl
shrl
cmp
xchg
test
pop
scas
ljmp
out
lock
adc
mov
outsb
loopne
inc
or
add
pop
int
hlt
jbe
mov
loope
popa
dec
fisttpll
js,pn
lret
push
add
jae
andb
xchg
ret
push
or
and
sti
sbb
or
popf
push
out
mov
int
cmp
cmp
nop
xchg
dec
add
and
lret
out
shl
lea
lret
and
cli
rorl
sub
js
xor
outsb
inc
rorl
adc
cmp
cmc
fwait
xchg
shl
mov
or
push
push
aas
add
jno
push
jg
dec
add
sub
in
lods
cmp
rcll
xchg
xor
std
jns
loope
divb
mov
movsl
sbbl
sbb
cmp
pop
mov
lods
xchg
rcll
jecxz
mov
mov
ds
pop
roll
fisubrs
aas
dec
into
jg
cmc
and
mov
xchg
leave
lods
jae
adc
sub
xor
inc
adc
arpl
pop
xchg
lea
rolb
nop
imull
movsb
ljmp
jnp
push
push
lock
xor
cmp
div
fs
outsb
scas
inc
cwtl
enter
rorb
fcomps
imul
sub
mov
aam
dec
filds
ja
inc
mov
mov
xchg
popf
cmpsl
shl
push
in
les
xor
into
xchg
mov
fnstcw
cmp
leave
inc
repnz
xor
ja
popf
clc
mov
cld
mov
push
or
call
xchg
cmp
mov
jno
loope
imul
xor
outsb
jbe
aad
inc
test
dec
test
mov
leave
sbb
xchg
scas
ud2
mov
iret
aaa
iret
ja
sub
or
cmp
iret
int3
lcall
mov
stos
ficoms
mov
adc
pop
pop
in
cwtl
pushf
dec
mov
add
mov
orl
cs
mov
fwait
shrb
imul
jns
lcall
lods
adc
mov
xor
in
pop
in
adc
es
cmc
or
dec
popa
cld
repz
test
inc
int
movsl
mov
xor
mov
inc
cli
jae
sbb
pop
jg
aaa
je
pusha
fnstsw
fildll
call
jecxz
mov
sbbb
dec
jge
add
dec
mov
repnz
xchg
push
mov
rorb
and
push
cmp
jmp
xchg
sub
adc
xor
je
push
jnp
inc
mov
clc
inc
dec
cmp
cmp
loop
ljmp
ret
fmull
into
push
adc
pop
scas
lods
daa
fistl
outsb
es
xchg
lahf
push
jb
xchg
cmp
testb
sbb
sub
jl
push
aaa
in
add
mov
or
dec
jmp
mov
xchg
inc
jbe
ja
adc
fidivl
mov
cwtl
aad
leave
lds
sub
and
xor
sbb
cltd
je
aam
setae
mov
pop
sub
adc
mov
or
cli
bound
cld
in
es
lahf
inc
aaa
xor
adc
cmc
xor
xor
subw
push
pop
dec
repnz
dec
in
push
pop
xchg
pop
sbb
ret
lds
mov
and
loop
scas
cmpsl
fsubr
mov
cmpsb
ret
sbb
loop
mov
jg
repz
cld
int
inc
sbb
repz
mov
jp
lds
inc
sub
jle
stos
insb
jne
push
cwtl
inc
pop
cmpsb
mov
stc
jp
sbb
fistl
jbe
stos
mov
rolb
scas
mov
in
pusha
and
mov
cs
adc
test
xor
cmp
jecxz
cmp
aam
outsl
addr16
cmp
loope
shrb
pusha
dec
lcall
leave
sbb
jnp
xchg
loop
or
lock
into
or
loopne
enter
mov
sub
sbbb
ljmp
pop
movsl
jp
testl
test
inc
cmp
repz
xchg
push
lret
aam
mov
adc
faddl
push
pop
rol
lods
lods
push
into
sbb
sub
call
cltd
sbb
add
adcb
mov
shl
in
sbb
sub
jmp
dec
and
xchg
sbb
fnstenv
cmpsb
dec
push
adc
hlt
sti
fldt
ljmp
rcrl
xor
out
mov
dec
out
adc
lock
sbb
ret
mov
sub
daa
cmc
xor
test
pop
push
sub
and
mov
cmp
xchg
rorl
in
imul
xor
stos
inc
movsl
jmp
rcr
cmpsl
and
jns
xor
mov
mov
mov
add
loopew
rol
inc
push
lret
int3
add
sub
mov
sub
out
cmpl
sbb
xchg
inc
add
loop
fisubrs
mov
addr16
rep
int
je
mov
hlt
cmp
daa
push
orl
insb
dec
lret
jecxz
fnstenv
cltd
mov
idivl
cmp
mov
fs
xchg
sub
jle
je
frstor
mov
sub
push
cmp
lret
push
rorb
mov
jae
xor
inc
out
dec
loopne
mov
mov
add
ficoml
xchg
pop
jmp
std
push
cwtl
sbb
cli
xor
xchg
push
mov
mov
in
lods
mov
shlb
gs
repz
mov
and
pop
repnz
push
mov
or
je
sbb
into
bound
sarl
mov
repz
mov
in
outsb
inc
jl
lcall
jae
andb
adc
jecxz
push
xchg
sub
push
iret
xor
loopne
pusha
pushf
inc
dec
dec
xor
or
sbb
sahf
fists
mov
test
push
mov
popf
test
cmpsb
push
div
into
shrl
lahf
in
jmp
aad
sbb
add
mov
ds
enter
mov
and
popa
repz
mov
adc
inc
aaa
stos
xor
imul
add
fbld
in
xchg
pop
dec
jmp
mov
xlat
mov
jae
pusha
ret
jo
icebp
mov
test
lret
rolb
mov
mov
stc
adc
inc
xchg
loopne
or
int
shr
and
mov
mov
xchg
and
dec
inc
push
pop
lods
vorps
or
add
dec
jne
lea
lea
dec
jnp
movsl
pop
scas
loope
fdivs
ss
add
sti
adc
push
inc
xor
adc
dec
mov
out
jl
push
out
pop
sbb
push
xchg
or
jle
pop
das
push
sarb
les
push
xor
adc
fcomps
inc
mov
icebp
shll
popa
cltd
cmp
ds
push
loope
pop
add
dec
push
stos
rcrb
mov
ret
sbb
movsb
ret
in
lret
xchg
rcrb
xchg
fstps
pop
mov
mov
mov
sahf
rcr
xchg
mov
sub
dec
mov
xchg
sub
sub
inc
mov
mov
pop
push
sarl
push
jnp
mov
std
mov
push
jnp
mov
int3
dec
adc
fistpl
fnstcw
cmp
inc
and
mov
adc
dec
mov
shlb
dec
adc
out
cmp
fs
aam
xchg
ljmp
and
stos
imul
jno
push
sub
test
mov
adc
data16
adc
push
xchg
inc
pop
sahf
scas
mov
sbb
in
mov
add
mov
xchg
push
ja
xorl
fdivrs
aam
sub
xchg
dec
aad
and
mov
cld
jp
aas
sbb
roll
dec
mov
pushf
dec
punpckhwd
and
or
sti
mov
stos
push
popf
xchg
stc
push
out
scas
mov
arpl
movsb
inc
pop
adc
jg
adc
adc
aas
orb
xor
add
mov
mov
mov
pushf
ret
idiv
add
loope
sub
sbb
sbb
loopne
stos
out
mov
call
mov
sub
fwait
shll
cmp
xchg
daa
pop
fdivrp
mov
adc
sbb
xor
add
cmp
ja
ret
int3
pop
pop
lret
push
push
shll
fwait
inc
roll
out
enter
jns
scas
mov
cmpsl
bound
cmp
subb
mov
sbb
mov
sbb
les
aas
push
sub
sub
cmp
mov
or
insl
iret
daa
mov
dec
jmp
mov
ja
xchg
test
xorl
hlt
movl
leave
ror
scas
xchg
sub
jns
stos
fcmovnu
shlb
xor
lcall
ljmp
xor
jle
ret
cs
shlb
dec
rolb
icebp
imul
adc
cmp
bound
adcb
dec
ljmp
movsb
jne
pop
addr16
dec
push
jl
cmp
imul
adc
in
lds
add
push
insb
cmp
and
pop
cmp
hlt
xor
enter
inc
ds
call
iret
fldl
call
sub
in
jo
cmpsl
repnz
enter
and
and
movsb
jle
into
stos
dec
stos
adc
popf
gs
and
inc
cmp
dec
rorl
adc
arpl
add
jne
mov
add
dec
mov
mov
out
stos
and
mov
aas
cmp
mov
or
mov
sahf
mov
enter
mov
push
mov
or
enter
sti
or
stos
btc
test
add
xor
sbb
das
mov
fadd
mov
or
mov
mov
out
outsl
and
mulb
je
je
out
imul
icebp
inc
or
rorl
inc
mov
mov
add
xchg
sbb
shrb
dec
and
cwtl
add
push
pop
mov
fmuls
mov
fdivs
pop
fildl
or
popa
xchg
add
push
nop
adc
xchg
mov
and
outsb
inc
or
inc
add
jge
mov
lock
pop
mov
lret
lds
push
fdiv
outsb
pop
xchg
xlat
aas
pop
push
mov
fcoms
test
or
add
push
outsb
push
ficoms
outsb
dec
imul
push
add
xor
inc
mov
call
int
lret
ljmp
andl
adc
pop
pop
push
push
lea
push
adc
movsb
mov
in
cmp
pop
mov
push
cwtl
ret
hlt
add
out
lcall
mov
roll
ja
sub
gs
mov
mov
adc
mov
pop
jae
lods
mov
add
or
fs
stc
dec
sub
ljmp
insl
jns
popa
dec
jl
dec
xor
jne
cmp
das
mov
fsubrs
out
or
xor
pop
mov
mov
cmp
cmp
and
sbb
loope
sbb
push
xchg
sbb
mov
and
icebp
cmp
nop
mov
scas
jo
push
shll
push
adc
mov
mov
sbb
or
lea
scas
and
cwtl
mov
popf
testb
push
jp
es
lret
shrb
repnz
idivb
cltd
jecxz
sbb
xchg
sub
icebp
mov
aas
insl
mov
xor
lret
xor
mov
sub
aam
ljmp
out
mov
or
jp
aam
or
aam
push
subb
test
lea
pop
fldcw
mov
das
lcall
push
je
mov
lret
sbb
xor
je
pop
jge
sbb
xor
aaa
popf
dec
les
out
repnz
sbb
test
cld
mov
ret
push
fisubrl
jge
pop
adc
popf
xor
cs
shll
pushf
incl
xor
call
aas
int3
rclb
fwait
xor
in
pop
lds
out
push
incl
cmp
jae
rolb
add
add
pop
ffreep
xor
addr16
sbb
xchg
xchg
pop
or
clc
stc
sarb
mov
jae
cli
xlat
mov
insb
mov
inc
mov
sbb
lret
lods
xchg
or
inc
notb
insl
imul
es
stos
fisttpl
inc
cmp
pusha
jp
xchg
dec
xchg
stc
xor
jns
push
mov
rep
push
movsb
les
arpl
sti
pushf
jge
sbb
sub
inc
fstl
nop
mov
xlat
dec
stc
jp
adc
or
lock
imul
pop
sbb
mov
lods
leave
cmp
jmp
outsb
repz
lcall
push
sub
pushf
das
or
push
movsb
sbb
bound
jle
sbb
cmc
sbb
addr16
arpl
loop
sub
cmp
stos
stos
jl
stos
into
push
push
int3
fidivrl
push
pop
xorb
adc
dec
andb
stos
xor
std
add
imul
or
dec
scas
inc
cmp
add
arpl
mov
pop
mov
gs
lods
xor
push
cmp
pop
popa
add
int3
test
mov
mov
mov
mov
sbb
ds
les
pop
paddsw
xor
lods
push
sub
dec
jge
repz
divb
pop
cmc
sbb
jmp
imul
ja
lret
test
jbe
outsb
mov
add
pusha
ljmp
push
mov
xchg
inc
pop
addl
loop
inc
sbb
ss
jns
dec
in
roll
loop
xlat
jecxz
xor
xchg
jl
fwait
cmpsl
lret
jecxz
loop
sub
push
cld
add
js
pushf
dec
pop
jnp
inc
add
dec
fwait
ss
and
cmp
lods
jecxz
adc
push
scas
pop
in
call
popa
rcl
shlb
xchg
adc
mulb
enter
mov
cwtl
jo
dec
mov
xor
pop
lret
jo
int3
cmpsl
mov
or
xlat
cltd
imull
and
sbb
mov
xchg
dec
arpl
int3
lods
hlt
in
jns
mov
inc
lret
hlt
cltd
ror
sbb
and
mov
sub
ret
dec
mov
adc
pop
test
xchg
fcmovu
push
mov
mov
in
shlb
clc
adc
sbb
mov
push
insb
test
and
cmp
adc
rcll
add
pop
push
inc
orl
inc
fidivs
cmp
stos
fdivrl
inc
mov
cmpsl
insb
mov
clc
fisubl
sub
cld
mov
scas
jno
movsb
mov
rclb
out
lea
lret
mov
xchg
in
and
pushf
pushf
jnp
dec
and
aaa
inc
mov
shlb
ret
push
lcall
or
jp
xor
inc
call
mov
pop
orl
xchg
adc
popa
movl
xchg
push
and
fidivl
insb
xchg
mov
pop
aam
mov
andb
mov
mov
mov
sti
or
popa
sbb
or
movsl
push
test
mov
hlt
cmp
mov
mov
jbe
or
jb
inc
fbld
lea
cmp
stos
rcrb
sub
mov
xor
cs
sub
mov
lds
fldl
sbb
lds
cmpsl
mov
outsb
jmp
pop
insb
push
mov
jb
icebp
sub
pop
jae
mov
out
popf
push
lcall
fbld
adc
jae
in
add
leave
dec
shr
dec
mov
or
inc
movsl
dec
shl
adc
lret
add
mov
jge
fbld
add
xchg
and
bound
jo
push
sub
out
rclb
dec
push
sub
mov
or
mov
test
push
sub
arpl
adc
inc
scas
mov
loopne
xor
cmpsb
loop
adc
pusha
and
mov
lret
xor
or
push
mov
fiadds
pusha
sbb
mov
xchg
sbb
add
gs
mov
mov
jbe
inc
pop
mov
mov
gs
clc
jge
ljmp
or
jle
mov
add
shl
mov
dec
and
push
pop
mov
scas
clc
outsl
ficoms
stos
test
lods
cltd
jno
pop
movsl
aad
mov
std
mov
jp
das
push
sbb
adc
adc
daa
fistps
dec
lcall
and
notb
dec
pushf
push
push
jge
or
mov
sahf
in
in
pusha
mov
daa
ljmp
jo
lea
pusha
outsb
sbb
mov
lock
lahf
mov
push
das
lea
push
adc
pushf
ss
inc
push
sub
jecxz
xchg
lret
mov
inc
int
dec
sub
in
add
sub
mov
xchg
add
int3
or
pop
pop
dec
inc
frstor
mov
test
rcrl
enter
lock
hlt
mov
xchg
or
add
add
std
into
pop
lods
sub
call
xor
aas
xlat
into
mov
push
jecxz
sar
mov
add
dec
enter
ja
ds
in
fidivrl
dec
mov
inc
pop
push
lea
repnz
cli
lods
or
mov
lahf
jb
or
add
loope
movsb
cmp
fcoml
adc
es
hlt
js
out
xchg
xlat
adc
mov
popa
xor
hlt
and
imul
pop
aad
xchg
fisubl
adc
mov
pop
and
les
pop
lcall
sbb
cwtl
gs
or
cs
mov
idivl
idivb
lock
stos
or
aas
outsl
fnstcw
cld
push
adc
xor
je
cmpl
mov
loopne
sbb
mov
cmpsb
pop
jns
jae
inc
lcall
jecxz
mov
mov
sbb
jo
dec
movsl
sar
into
add
mov
xor
jge
loope
mov
rclb
cmp
pop
inc
fs
mov
fs
or
nop
sbb
and
stos
inc
and
adc
adc
scas
mov
mov
inc
lahf
xor
and
fcmovnu
dec
xor
ds
clc
xchg
push
jno
inc
push
xchg
or
add
jnp
cmp
lea
jbe
mov
jp
mov
addr16
mov
cmp
mov
into
dec
mov
enter
neg
repnz
aas
loop
add
les
pusha
shl
das
aas
mov
sub
es
inc
mov
mov
push
inc
imul
enter
sbb
pop
clc
hlt
insb
jle
movsb
jno
lock
xchg
sbb
push
inc
xor
inc
loop
sbb
cld
adc
mov
imul
clc
daa
mov
ss
ret
jns
mov
xchg
or
adc
xor
ja
negb
cld
pop
push
jae
ret
or
jns
mov
push
enter
repz
jp
add
dec
fisubrl
sbb
add
repnz
outsb
movsl
xorb
insb
sbb
cwtl
add
inc
mov
in
dec
cli
sbb
pop
sub
test
out
lcall
push
xchg
nop
sub
sbb
dec
lcall
xchg
inc
mov
sbb
or
mov
pusha
pop
cwtl
pop
mov
push
fwait
nop
fldenv
pop
cli
or
sbb
sahf
mov
jp
push
mov
adc
push
pop
fcoms
fisubl
mov
cmp
xor
dec
fs
dec
popa
xor
adc
inc
in
or
std
inc
ret
hlt
add
stos
cmp
adc
aas
lock
push
in
rorl
add
xchg
fiaddl
add
dec
mov
dec
lea
ja
push
add
push
sbb
mov
faddl
sbb
cmp
lods
cmp
ret
ret
es
inc
ds
dec
push
add
xchg
ret
xchg
adc
push
add
fmuls
mov
lock
ret
inc
into
das
jmp
sarl
xchg
in
je
test
stc
jle
pop
out
movsl
decl
mov
inc
push
aam
adc
or
xchg
adc
jb
rclb
mov
xchg
cmc
or
shll
add
or
test
push
cmc
movaps
fwait
test
js
mov
cld
add
mov
je
cmp
fisubs
sub
sti
das
dec
jmp
pop
lods
hlt
enter
loopne
jecxz
call
mov
cmp
push
xor
lret
rep
mov
je
insb
xchg
xlat
mov
and
dec
xchg
lock
xchg
pop
dec
addl
in
repnz
ds
out
or
sub
in
or
pop
push
mov
in
and
mov
fidivrs
mov
mov
adc
add
inc
ds
hlt
or
enter
test
push
inc
out
and
rorl
aad
adc
mov
cmp
and
out
test
sbb
sub
xchg
xchg
pop
sbb
push
pusha
sti
sahf
mov
dec
imul
jae
push
loope
repnz
aas
push
cs
orl
add
enter
jae
and
mov
mov
ret
test
inc
ror
lock
lods
fdivrp
loopne
popa
jle
sarl
lock
shlb
dec
mov
jo
adc
repz
mov
sub
push
ljmp
ficomps
imul
stos
das
out
mov
jg
decb
mov
aad
xor
cld
test
add
loop
cwtl
lods
inc
inc
pop
mov
xchg
shr
getsec
cmp
loope
mov
add
mov
aaa
out
and
jl
cmp
sbb
lds
andl
jns
cwtl
or
and
loop
jne
fldcw
imul
lea
xor
rcrl
and
sbb
addr16
pop
mov
popf
lods
adc
add
aam
cmp
add
imul
cltd
addr16
pushl
lret
or
out
xchg
loop
cmp
sbb
fs
lret
movsb
out
dec
outsl
ret
sub
dec
jo
lret
ds
sub
or
in
sub
xlat
scas
jo
cmp
scas
mov
cmp
out
cmp
test
int3
lret
popa
aaa
or
fsubs
lea
insb
jnp
or
mov
mov
sbb
pop
dec
jbe
push
mov
test
xor
sarb
push
idivb
je
aaa
mov
sarb
movsb
sbb
mov
inc
fisubs
je
fs
pop
loope
out
sbb
fsub
hlt
mov
sub
imul
aas
popa
aam
sub
int3
stos
xor
test
std
mov
popf
nop
mov
ljmp
mov
jno
js
sbb
xchg
sbbb
stc
scas
sbb
shlb
mov
sbb
mov
push
sahf
dec
sbb
sub
insb
enter
fbld
fwait
push
ljmp
pop
push
mov
adc
xchg
or
inc
sub
sub
mov
cmp
or
ret
pop
movsl
dec
and
add
cwtl
mov
or
sbb
adc
loopne
mov
cmp
mov
mov
loopne
xchg
js
mov
dec
and
stos
in
adc
dec
cmpl
sub
das
test
insl
dec
aaa
outsb
test
gs
int3
test
mov
out
int
mov
fsub
sbb
pop
adc
stos
xor
shrl
hlt
testl
dec
sbbb
loope
push
lahf
rol
adc
adc
andl
pop
xchg
lret
cmpsl
xchg
lret
addl
ljmp
jp
or
jns
jo
les
pop
cmp
subl
dec
rclb
pop
cld
insl
fisubrs
or
push
or
and
mov
jecxz
pop
jge
aad
xor
xchg
data16
lret
pop
rcl
sahf
cmp
adc
sub
sbb
fwait
enter
or
push
fwait
jmp
dec
jmp
xchg
add
mov
dec
mov
test
pusha
pop
das
sti
mov
cwtl
dec
push
mov
lcall
mov
cs
xchg
insb
and
loop
mov
fxam
sbb
sub
outsb
repnz
ljmp
inc
pushw
aas
pop
add
mov
sti
lret
leave
lcall
mov
lds
and
fiadds
into
stc
dec
mov
mov
iret
sbb
lret
dec
mov
mov
jmp
push
andb
lret
mov
mov
aad
je
mov
jp
mov
lods
pusha
xor
dec
xbegin
mov
mov
fcompp
lds
nop
and
lods
daa
jl
jbe
sbb
lea
jno
stos
cmp
pop
xor
leave
and
adc
or
jae
les
mov
jmp
imul
push
push
add
sub
mov
xchg
shrb
dec
std
test
ret
xchg
mov
sub
ret
leave
insl
aaa
rep
test
sub
leave
push
inc
or
orl
movsl
stos
clc
pop
or
inc
lock
divb
sub
inc
jb
add
mov
shrb
adc
add
mov
push
push
xor
dec
shlb
mov
jns
add
scas
xchg
enter
or
mov
sub
mov
mov
sbb
adc
push
or
mov
inc
mov
xchg
mov
loope
mov
inc
mov
pop
mov
insb
jecxz
adc
test
jb
pusha
add
sbb
lahf
rorb
sbb
sbb
inc
sti
xor
bound
dec
leave
repnz
mov
sbb
adc
xor
add
lret
adc
test
and
in
dec
xor
push
xor
push
push
mov
or
lods
jb
mov
sbb
mov
fisubrs
imul
popf
int
pop
xchg
lds
jl
mov
popf
adc
repz
scas
cmpsl
outsl
cli
in
pop
push
pusha
sbb
ss
and
out
rcrb
fcmovnb
fwait
sbb
insl
ljmp
adc
mov
insl
cmp
xchg
push
jl
leave
push
rorb
scas
dec
xor
mov
inc
push
hlt
stos
and
lret
xor
or
pop
inc
movsl
ret
jmp
jp
push
ljmp
mov
test
in
adc
iret
fwait
movsb
or
sub
in
xor
add
sbb
arpl
mov
cmp
xchg
sub
add
push
gs
test
sub
fxch
shlb
outsl
out
push
fimuls
xchg
loope
and
pop
enter
call
fnstcw
scas
cmp
or
shll
in
mov
aad
jns
mov
push
pop
std
fs
push
mov
mov
inc
aad
repnz
mov
aaa
ficomps
ficoms
movsl
cmc
jo
sahf
rcrl
adc
inc
push
iret
sub
xor
lret
sbb
gs
fwait
jbe
cld
mov
ss
sbbb
and
adc
xchg
in
rorl
sarb
std
or
mov
inc
ret
adc
decb
jno
out
dec
and
jge
mov
fcomps
cmpsb
cmpsb
pop
into
movsb
outsl
lahf
fistpl
icebp
mov
pop
imul
clc
lods
aad
xchg
mov
jle
pop
mov
inc
jae
pop
fisttpll
add
mov
jne
inc
test
jecxz
push
clc
ljmp
sub
adc
mov
repnz
fldcw
mov
and
roll
mov
ja
enter
in
iret
xchg
inc
stc
adc
test
xlat
sbb
inc
lods
and
fwait
xchg
push
inc
loop
xchg
pop
xor
lods
arpl
and
outsl
mov
pop
or
add
mov
fcmovu
iret
pop
pop
xchg
push
push
testl
adc
cmp
loope
mov
mov
imul
push
jge
jp
shl
stos
cli
mov
aaa
jg
out
fisubs
jno
fcomps
orb
xchg
add
jge
jno
xor
data16
push
inc
push
dec
das
push
in
sub
inc
loopne
cmpb
xchg
test
pop
test
and
cmp
dec
sbb
or
inc
dec
inc
popa
jnp
into
inc
xchg
dec
test
jae
nop
shll
add
adc
mov
stos
mov
cwtl
sub
mov
in
clc
jl
mov
xchg
or
add
mov
or
and
negb
mov
aaa
loopne
adc
imul
adc
js
mov
aad
jg
xchg
push
dec
pop
add
mov
fcomi
cmc
mov
or
xchg
push
loopne
imul
mov
jle
cmpb
add
mov
dec
and
xchg
scas
mov
mov
stos
adc
js
adc
add
int3
je
ret
cmc
leave
mov
addr16
enter
leave
mov
adc
and
pop
jmp
iret
js
dec
inc
out
cmp
add
or
testl
mov
int
cmpsl
out
ret
mov
hlt
dec
scas
cltd
ror
imul
xchg
scas
mov
cs
inc
sbb
jns
addl
mov
adc
fdivs
jge
repnz
cmpsl
sub
shlb
xchg
inc
lcall
testl
add
rcll
mov
roll
inc
cmp
push
push
flds
and
mov
push
enter
fwait
leave
dec
cmp
push
mov
cmp
push
cltd
sub
hlt
xlat
xchg
mov
loopne
pop
add
aad
insl
jge
dec
ds
jmp
lods
lcall
mov
cmp
push
push
and
push
mov
mov
data16
jg
std
or
cmc
lcall
sbb
aad
lahf
stos
outsl
or
add
lods
push
push
repnz
mov
xchg
out
mov
cltd
dec
dec
mov
fcompl
lret
dec
sti
lcall
mov
dec
sbb
imulb
das
js
cmc
aam
add
rcrb
add
fidivrs
sbbb
clc
std
int3
mov
repnz
mov
scas
dec
pop
pop
jbe,pn
sub
sbb
or
jne
mov
mov
cmp
xchg
jns
pop
inc
xlat
mov
movsb
pandn
arpl
pop
out
dec
mov
or
sbb
xchg
dec
std
jae
cmpl
xchg
dec
mov
push
or
repnz
jbe
mov
push
ret
pop
jle
dec
cwtl
popa
out
xchg
mov
and
in
mov
inc
dec
insl
mov
push
or
scas
dec
mov
inc
mov
fstpl
or
cmpsb
pop
in
pop
movhps
mov
pop
mov
idiv
fcomps
inc
sahf
fs
mov
mov
fwait
lret
sub
lret
stc
push
pop
mov
sbb
lods
imul
es
add
cmp
cmp
or
mov
pop
cmp
mov
das
jae
sbb
out
insl
fsubrl
jmp
lahf
out
nop
add
in
sbb
xor
lcall
fisttpl
dec
lods
rcll
outsb
out
and
sbb
fisttpl
test
ficompl
cmpsl
fwait
iret
data16
xor
ret
add
or
sub
repz
imul
dec
jnp
jle
cmp
mov
jp
mov
sub
cmp
mov
xrelease
xor
ja
dec
nop
mov
jp
mov
sub
imul
jmp
loopne
jmp
push
xlat
popf
xchg
mov
cmp
and
push
adc
mov
aaa
outsb
out
inc
sub
loop
mov
xchg
aaa
mov
lret
push
out
imul
mov
push
dec
test
icebp
xorl
sbb
cmpsb
sub
pop
addl
loop
mov
jnp
in
pop
dec
ss
mov
into
jb
mov
cmp
insl
xlat
stc
out
ficomps
rol
test
inc
sub
jecxz
addr16
loopne
add
xor
notl
int3
mov
sub
mov
pop
adc
ret
pop
idivl
jo
stos
mov
lcall
push
pusha
fbld
xchg
add
in
test
cwtl
inc
xor
mov
inc
iret
fnstenv
jnp
mov
mov
mov
xor
mov
repz
aad
jae
jnp
leave
or
mov
push
or
stc
mov
stos
sar
sub
mov
pop
movswl
jno
fwait
out
inc
mov
mov
lcall
call
ja
xlat
pop
pop
fs
lahf
mov
aam
mov
push
adc
xchg
not
pop
arpl
cmp
test
mov
push
dec
xchg
or
popaw
mov
xor
ret
je
popl
add
or
clc
lods
add
cwtl
shr
inc
xor
mov
ds
mov
cld
sbb
cmp
outsl
stos
ss
es
mov
mov
ret
ficoms
add
movsl
add
ret
sub
add
jbe
dec
pop
push
test
cmp
add
cs
xor
sbb
popf
mov
sub
sbb
xor
jo
adc
cmp
push
out
mov
inc
pushf
or
and
cwtl
and
popa
lahf
add
sbb
xchg
stos
adc
mov
pop
xchg
cs
sbb
jb
pop
mov
imul
std
inc
addr16
inc
jp
adc
dec
push
inc
cwtl
cli
subl
mov
xor
mov
xchg
pusha
adc
dec
test
add
sbbl
int3
jecxz
andb
bound
loope
cmp
sbb
jmp
xchg
dec
push
filds
sbb
xor
cmc
pop
xor
xor
jno
outsb
dec
adc
std
rcrl
mov
mov
leave
lret
in
and
push
dec
icebp
rcl
fdivr
addl
cmp
sbb
lret
sub
xor
push
mov
pop
jne
shll
mov
das
jno
add
fs
xor
rolb
bound
in
mov
mov
movsl
addr16
pop
fisubs
mov
addr16
ret
sbbl
repnz
xlat
sti
dec
mov
or
inc
sahf
jge
mov
push
clc
sub
sahf
pop
nop
xor
and
repz
aaa
or
sbb
xchg
mov
rorl
lret
mov
pop
inc
mov
sbb
mov
adc
cs
gs
push
shlb
jecxz
lock
dec
sub
into
adc
ja
cld
lods
leave
shll
jecxz
out
cmpsb
xor
pop
repz
pop
jg
xchg
sub
and
mov
push
inc
add
xchg
dec
inc
inc
sbb
fistpll
push
sqrtps
aad
jmp
fcoms
imul
call
sarb
mov
stos
nop
pop
xchg
insb
and
clc
jns,pt
adc
xlat
cmp
sbb
pop
cmp
xor
adc
mov
jbe
les
or
nop
inc
sti
push
add
xchg
pop
gs
mov
ret
stc
out
cld
cmp
out
sbb
sub
push
adc
xchg
jecxz
mov
xor
adc
lods
adc
mov
pop
cltd
insb
mov
pop
mov
push
idivb
mov
or
iret
cmpsb
ljmp
jl
cli
xor
and
xchg
stos
andb
jo
faddl
xor
mov
aas
fiadds
pop
mov
cmp
das
mov
sti
inc
or
leave
sub
arpl
mov
xchg
insl
jg
aas
ret
push
mov
sahf
out
insb
xchg
inc
imul
daa
inc
jns
push
gs
jo
push
movsl
lahf
adc
pop
jle
or
pushf
sti
pusha
ffreep
negb
scas
inc
sarb
pusha
popa
nop
mov
push
push
push
lahf
push
xchg
xchg
sbb
mov
lods
jbe
jge
ljmp
arpl
cmpsb
add
imul
sub
mov
and
cltd
and
push
mov
mov
mull
jae
mov
mov
push
loope
adc
popa
fisttps
mov
add
sub
inc
sti
jp
aad
cmp
jne
dec
xchg
xlat
pop
loopne
sub
out
gs
pop
outsb
into
or
stos
pop
and
rolb
stos
dec
outsb
mov
jge
dec
xchg
sub
jbe
scas
mov
movsl
jb
mov
mov
popa
sbb
sub
sbb
mov
jb
fcompl
out
scas
sbb
sub
mull
lods
test
sub
stos
add
movsl
fsubr
test
in
mov
bound
fsts
es
test
popf
push
mov
out
lcall
or
rorl
movsb
pop
popf
cmp
sbb
jo
cmp
repz
sarl
adc
jp
ffreep
test
adc
adc
mov
pop
outsb
hlt
sub
jg
jnp
and
and
ss
xchg
lock
or
dec
test
std
loopne
xchg
cmpsb
imul
jb
addr16
inc
les
jne
dec
data16
cmpsl
es
ds
ja
sub
scas
rcrl
push
lea
adc
cmp
lea
test
push
xchg
pop
jg
jle
cmp
mov
ret
jo
push
lods
cli
jle
outsl
mov
adc
popf
pusha
dec
push
xor
fidivrl
or
lds
aas
mov
loopne
pop
in
or
or
lcall
xor
imul
xor
or
pop
xchg
loop
xor
and
adc
push
hlt
in
aad
cwtl
xor
cli
mov
inc
mov
adc
test
sahf
cmp
inc
icebp
xchg
pop
jne
mov
dec
loop
jmp
test
aaa
xor
ja
push
nop
jno
js
mov
arpl
xchg
ret
stos
out
test
insb
sub
push
jle
test
mov
pop
pop
adc
repnz
xchg
xor
mov
out
adc
out
xor
or
pop
sub
jmp
dec
jmp
mov
mov
gs
adc
imul
negl
arpl
bndstx
js
or
pop
jb
push
std
rcrl
cmp
nop
pop
cmp
lfs
jo
sbb
sbb
or
pop
in
fisubrl
dec
rcl
sahf
rclb
sbbl
sub
mov
mov
or
sbb
cltd
dec
das
scas
pop
mov
pop
inc
xchg
sbb
cmpsl
cmp
in
loop
mov
add
imul
sbb
repz
xchg
ret
sbb
jmp
xchg
and
aad
push
and
aam
and
adc
out
cmpl
sbb
popf
scas
es
sbb
outsl
loop
or
adc
or
and
in
add
mov
daa
and
addr16
insb
cld
push
imul
adc
hlt
mov
stos
aaa
add
in
test
loope
into
les
cmp
pop
push
xchg
lods
push
dec
inc
repnz
push
sub
sub
and
jg
cmpsb
in
xchg
hlt
sub
sub
jg
dec
sbb
or
ret
cli
outsb
sbb
jmp
ret
pusha
dec
add
sbb
jo
cltd
cmpsb
fsubl
mov
inc
or
lret
hlt
shlb
xor
jle
js
and
lods
cwtl
jns
xor
pop
push
add
stos
jbe
inc
mov
in
lock
int3
mov
lods
js
jmp
pushf
push
ret
ss
cmp
mov
inc
out
push
sub
xchg
add
scas
and
sahf
insl
inc
jmp
sub
adc
js
aas
out
stos
fcomp
sub
mov
cpuid
xchg
pop
mov
inc
shrb
loop
fcompl
and
test
pushf
fstps
pop
loope
inc
and
pop
mov
mov
xchg
push
int
or
sti
dec
hlt
mov
shrb
ret
shlb
out
fisttpl
cmp
clc
cmp
int3
dec
divl
jl
pop
adc
loop
out
jmp
push
mov
pop
aam
or
xchg
mov
inc
sbb
nop
mov
je
ret
loop
lea
call
in
add
mov
lret
test
dec
dec
popf
mov
cmp
stc
jns
xchg
mov
and
stc
out
sbb
scas
loopne
cld
or
push
stos
jg
push
adc
pop
jnp
sbb
cmp
sbb
sbb
inc
int
mov
icebp
leave
cmp
xchg
push
dec
insb
inc
leave
push
mov
dec
repnz
and
lods
jg
push
adc
push
add
or
call
mov
add
loop
aam
cmc
sbb
push
mov
cmp
sti
or
sar
outsl
xchg
fstps
cmc
divb
outsl
cli
test
lret
jecxz
clc
out
dec
je
pushf
jne
in
or
hlt
xlat
sbb
fidivrs
scas
into
mov
xor
out
mov
and
cmc
cltd
sbb
sti
js
add
in
jmp
imulb
jne
sbb
push
test
mov
push
push
js
ljmp
out
xchg
pop
dec
roll
jne
or
gs
ljmp
xchg
lret
rcrb
jecxz
jnp
sbb
mov
xchg
and
cmpsl
lock
iret
insb
in
arpl
jp
mov
lock
cmp
in
js
mov
je
enter
popa
rcrl
lods
into
add
jecxz
xchg
ja
jecxz
mov
push
orl
mov
mov
and
lahf
mov
push
lods
sti
pop
cmp
sbb
pop
mov
stos
mov
lds
push
fisttpll
or
aad
xchg
mov
xchg
lea
and
movsl
jo
stc
sahf
xchg
xchg
inc
mov
cmp
xchg
push
inc
push
dec
sbb
xchg
repz
jb
fcoms
in
addl
cmc
inc
mov
xchg
mov
mov
je
out
iret
dec
out
psubusb
std
lock
rorl
inc
xor
adc
das
jl
shll
mov
add
fldpi
lea
or
out
mov
mov
jb
mov
push
lret
adc
out
into
shl
movsl
cmp
and
sti
jp
jge
jbe
test
data16
shrl
in
and
aad
jmp
and
test
sub
fidivrl
inc
mov
icebp
test
pop
in
shlb
jbe
xor
push
mov
and
dec
ja
pushf
cs
and
es
cs
or
dec
mov
add
pop
mov
mov
leave
cmp
dec
repnz
push
test
push
or
mov
mov
movsl
inc
inc
jle
negb
inc
fstl
sbb
inc
pop
fsubs
enter
push
leave
xor
scas
bound
aaa
scas
lret
sbb
jnp
data16
dec
mov
push
jns
ja
pop
insl
mov
mov
pop
inc
inc
push
xor
mov
leave
jp
int3
push
sbb
sub
pop
mov
add
push
mov
adc
pop
add
pop
cmp
xchg
popa
aad
lods
xor
push
push
jne
dec
push
pop
in
adc
jns
movsb
and
iret
fisttpl
adc
inc
mulb
fisttps
sahf
mov
xor
xchg
bound
les
sub
or
stc
add
xor
pop
int3
mov
lret
mov
jnp
pop
adc
and
adc
mov
rorl
in
xlat
bound
add
mov
pop
iret
xchg
mov
push
scas
ret
xor
sub
call
jle
sub
or
jbe
das
or
stos
xchg
mov
inc
inc
test
mov
xchg
repnz
inc
and
inc
out
rclb
cmp
add
clc
inc
fwait
push
pop
xchg
mov
mov
enter
nop
insl
mov
pop
mov
sbb
mov
mov
jp
stc
arpl
inc
incl
ja
or
xor
dec
mov
mov
add
jle
pop
flds
or
fstpl
leave
push
pop
add
mov
out
cmc
mov
mov
shll
sub
add
inc
pop
test
popa
xchg
int
add
ficoml
fcomi
inc
add
mov
jne
test
fidivrs
lock
test
pop
cmp
adc
xchg
dec
and
cmp
loop
jge
lret
int3
rclb
xlat
xor
orb
sub
repnz
jmp
lret
popf
lods
inc
imul
rcll
fstp
bound
inc
mov
adc
sbb
mov
pop
pop
add
pop
mov
xor
dec
lock
xor
int
cwtl
jge
lahf
arpl
bound
jle
adc
push
jge
push
pusha
or
or
aas
cmp
jns
cwtl
mov
xchg
sbb
sbb
xlat
stos
int3
nop
in
ja
push
inc
mov
mov
hlt
push
popf
push
aas
dec
pusha
lsl
pop
data16
mov
adc
into
fildll
inc
out
push
jle
sbb
repnz
popf
fisubl
xorb
sub
aaa
dec
and
out
xor
jle
pop
sbb
stos
adc
xchg
fcoml
mov
in
mov
insl
pop
jnp
cmp
scas
mov
push
cltd
clc
loope
insl
shr
pop
loop
jns
push
call
not
loope
mov
inc
cld
pop
xchg
fs
cmpsb
xchg
aam
inc
sbb
testb
aam
inc
cvtdq2ps
aas
xor
cmp
in
push
xor
xchg
ret
out
test
cmc
add
insl
shl
add
ljmp
pop
fcomps
loopne
fildll
cmp
leave
ss
mov
jge
jo
pop
xor
jo
sbb
aas
out
out
cmp
adc
sbb
cld
mov
dec
mull
adc
stos
mov
add
mov
int
sar
mov
loopne
shr
jle
sbb
inc
stos
out
mov
std
mov
nop
push
and
stos
jecxz
jecxz
xchg
sbb
sbb
test
xor
push
push
aad
pop
fwait
pusha
push
and
add
iret
es
inc
in
sbbb
mov
dec
aam
and
cmp
dec
mov
xchg
pop
rclb
shlb
popa
sbb
loope
cmc
fidivrl
stc
stc
cltd
test
js
mov
jg
cld
or
iret
movsb
scas
clc
je
rcll
daa
jg
pop
mov
hlt
test
pop
cmpsl
push
xor
lock
sbb
add
int3
lahf
lret
in
icebp
mov
mov
mov
int
imul
ss
inc
mov
aad
xor
adc
pop
xchg
shll
lret
fldt
add
decl
pandn
hlt
dec
sub
andl
rclb
sbb
adc
outsl
imul
fisttps
pop
sbb
fisubrl
js
filds
xchg
loope
aad
stos
and
jne
pop
jg
test
push
fs
xchg
mov
ss
mov
dec
outsb
jmp
inc
repnz
mov
sub
ret
and
xor
mov
in
test
rcr
push
repz
bswap
roll
movsl
push
lods
mov
hlt
inc
mov
enter
in
cmc
in
jg
ja
stc
bound
mov
mov
push
pop
cmp
fbstp
jle
imul
call
inc
and
cmpsl
lcall
mov
movsl
push
cli
scas
inc
mov
imul
ret
cltd
jns
ds
xor
outsb
and
push
out
jnp
cmpsb
jae
iret
xchg
mov
or
out
jle
jp
lods
cli
cld
and
imul
mov
or
cmp
es
je
popa
sahf
mov
sub
xor
xchg
fadds
cmpsl
xor
js
dec
push
fcoms
jecxz
push
pop
cmp
mov
rcll
filds
insl
or
push
lods
scas
imul
lea
test
or
int3
fwait
sub
pop
loope
testl
int
out
add
cmp
cmp
iret
pop
mov
inc
dec
pusha
pusha
das
arpl
cmpsb
push
push
imul
icebp
dec
and
cmp
cmpsb
dec
cmp
xchg
in
dec
dec
pop
mov
xchg
ret
sub
rcr
mov
sub
mov
add
out
fdivrp
les
insl
dec
jb,pn
mov
inc
cwtl
ja
push
js
and
add
repnz
sbb
movsb
scas
jne
xchg
imul
nop
xchg
arpl
sbb
pusha
dec
sub
dec
xor
xchg
enter
jae
in
pop
add
jbe
xor
movsb
mov
iret
lods
or
faddl
fs
pop
adc
mov
leave
ret
hlt
adc
jbe
push
testb
int
mov
outsl
movsb
adc
popa
shll
dec
inc
testl
jge
lods
pop
popl
inc
sbb
addl
scas
hlt
pusha
push
loopne
int3
adc
jge
dec
dec
mov
cmp
inc
sbb
orl
xchg
adc
push
in
repnz
cmp
ss
fstp
mov
negl
in
pop
pop
push
das
mov
aad
scas
sbb
mov
je
imulb
std
ficoms
pop
cltd
dec
enter
lock
inc
jmp
sbb
mov
or
mov
adc
jecxz
sahf
icebp
out
xchg
sahf
adc
out
std
mov
je
push
pop
data16
xor
lcall
jnp
push
lds
test
mov
sbb
into
xchg
adc
push
inc
push
lret
push
cltd
test
incb
pop
dec
sub
sarb
mov
hlt
pop
adc
lahf
js,pt
cmp
out
lea
cmp
enter
push
inc
popa
pop
push
inc
enter
dec
icebp
lock
or
push
cmpsb
arpl
icebp
push
icebp
push
mov
idivb
jg
jp
xchg
popa
or
xchg
mov
paddb
cmpl
inc
out
push
mov
into
and
pop
and
in
fldt
idivl
xor
dec
xchg
gs
add
xchg
push
mov
out
push
cmp
mov
pop
outsb
pop
aam
loopne
xor
ret
popa
jecxz
repz
fldcw
or
les
pop
jo
loopne
push
ja
hlt
adc
mov
mov
nop
push
mov
jecxz
and
pop
fstl
outsl
dec
dec
into
and
int3
xchg
pop
and
jns
pop
xor
inc
and
push
and
lds
je
aad
xor
dec
push
insb
cmpl
mov
sub
pop
in
add
xor
sbb
pop
push
sbb
mov
data16
xchg
push
call
fsubrs
arpl
adc
int
mov
mov
push
ret
cmp
aaa
add
mov
outsb
jb
shll
test
pop
add
call
xor
clc
mov
out
adc
inc
test
mov
dec
scas
jmp
cvtps2pi
cmp
xchg
cmp
daa
cmpl
push
es
mov
arpl
push
mov
dec
sub
push
cmp
and
mov
cmc
adc
cmc
out
imul
pop
cmp
jg
pop
pcmpeqb
sarb
push
test
scas
rcll
repnz
je
ret
in
xor
cmp
ret
or
stos
in
add
shll
inc
daa
cli
jg
xor
xchg
pop
xchg
and
mov
jp
nop
mov
or
repnz
or
cmp
loope
and
xchg
jp
lret
scas
pop
jge
mull
pop
pop
mov
xor
in
arpl
and
movb
popa
rcrb
test
fwait
push
mov
out
loopne
sbb
inc
pop
fs
sbb
jg
incl
cmp
fs
add
rcl
push
in
push
cld
int
incb
pushf
imul
adc
jg
xchg
insl
push
or
incl
add
mov
add
stos
dec
aaa
jb
scas
dec
aas
push
aas
push
jg
nop
arpl
pushf
fs
or
ret
adc
imul
pop
imul
xorb
addb
or
xchg
sub
fstl
sahf
inc
and
loop
xor
psubsb
sti
jnp
cli
popf
xchg
cmp
push
sbbb
cwtl
and
sbb
lods
dec
lods
sbb
mov
outsl
add
int3
repz
test
sub
nop
scas
xchg
mov
mov
decb
dec
dec
sti
cmp
leave
and
hlt
lock
stos
jb
shlb
mov
and
repz
pop
mov
fwait
nop
xchg
data16
and
shrb
jno
cmpsb
mov
dec
jns
xchg
mov
stc
push
lret
dec
dec
dec
xchg
loope
scas
movsb
sub
fninit
fstpl
mov
sub
bound
aas
mov
adc
push
je
jle
add
and
fwait
cmp
pop
pop
xchg
icebp
mov
insb
lcall
lret
push
mov
adc
add
pushf
jecxz
xor
dec
adc
cmp
mov
test
les
mov
mov
adcl
inc
jbe
fdivp
aaa
mov
sbb
mov
push
lcall
sar
mov
push
lods
pusha
data16
loopne
mov
jl
jbe
movsl
jg
mov
call
push
in
call
pop
sub
int3
dec
push
rolb
adc
fsubrl
dec
mov
xor
sub
xchg
mov
jle
adc
pop
pop
cld
add
pop
shrb
mov
mov
sbb
adc
dec
pop
pop
and
ss
loope
push
adc
sub
mov
out
cmp
das
into
loop
dec
push
repz
adc
int
ret
and
sbb
mov
into
lds
rcl
lahf
jl
clc
sbb
lods
jmp
jp
lock
add
mov
mov
rclb
lock
ds
popa
pop
sbb
movsb
inc
or
addb
aad
sahf
adc
lcall
or
aas
xchg
fnstenv
imul
lods
or
sub
int
mov
inc
repnz
push
dec
loop
out
sub
xor
in
into
and
rclb
adc
movsb
sub
and
mov
enter
sub
jo
sbb
scas
sub
shlb
and
repnz
xor
iret
jnp
jp
mov
or
mov
int3
into
push
sub
das
push
stos
cmp
mov
cmpsb
sbb
xchg
mov
sahf
movsl
mov
mov
stc
cmp
stos
inc
mov
adc
add
jb
pop
ficoml
push
ret
shlb
in
mov
dec
or
push
xchg
sbb
mov
cmp
push
inc
iret
cwtl
lods
insb
or
adc
push
pop
or
aad
in
push
stos
and
aad
out
cmp
scas
je
aam
negb
and
cmc
inc
cwtl
jbe
push
jecxz
dec
int
in
push
in
push
out
lock
or
jne
jno
cli
or
pop
aad
inc
arpl
add
inc
sub
mov
in
test
std
in
sbb
mov
int
mov
test
push
push
test
sahf
pushf
add
fcomps
pop
or
or
mov
movsl
pop
dec
lods
mov
mov
cmpsb
imul
push
das
or
and
cmp
mov
filds
jne
push
push
dec
pop
dec
dec
and
cmc
mov
mov
sbb
test
or
test
and
and
add
sarl
jle
jb
dec
out
push
push
outsb
repnz
xlat
in
jns
mov
fwait
add
xchg
cs
add
xor
pop
test
popa
cmp
inc
addr16
test
cmpsb
cwtl
cmpl
cmp
sub
in
push
adc
push
outsb
fs
lds
ss
mov
pop
cli
fistpl
hlt
ret
xlat
add
pop
in
fidivrl
std
call
pop
jp
lods
mov
pop
scas
push
or
imul
lds
mov
mov
hlt
fadds
and
daa
and
push
cmp
lds
stos
clc
xchg
jg
adc
dec
movsl
add
enter
mov
cmp
insb
xchg
mov
rcll
lahf
pop
cli
dec
cmc
cmp
outsb
jbe
xchg
iret
or
mov
pop
pop
test
jl
inc
mov
xorb
test
jo
inc
sbb
aam
inc
inc
test
mov
cmpsl
clc
sti
xchg
in
add
lret
push
mov
mov
add
lahf
add
push
into
cmp
inc
bound
outsb
xchg
dec
fisubrs
incl
lods
mov
cmp
inc
sbb
pop
cmc
xchg
jb
xor
cmp
or
fldenv
adc
imul
ss
xlat
sbb
repnz
ja
xor
je
dec
add
jle
out
call
mov
inc
enter
push
jns
imul
ja
jmp
movl
dec
jb
popa
or
rcrb
push
enter
add
daa
mull
sbb
mov
jo
shll
jnp
shll
mov
test
inc
add
push
test
sbb
push
outsl
mov
inc
cwtl
pop
lods
or
adc
fisubrl
xor
sbb
leave
adc
sub
cmp
sahf
lods
xor
mulb
cmp
fldl
into
outsl
xorb
aaa
rorl
mov
xchg
and
leave
imul
xchg
loop
xor
dec
xor
push
fimuls
xor
out
cmpsb
add
dec
jne
dec
ja
and
inc
sub
rolb
and
cs
scas
popa
jnp
or
xlat
iret
mov
push
cmc
sub
sbb
dec
or
push
xchg
xlat
cmp
cmp
mov
test
jns
test
mov
dec
cmpsl
xchg
xchg
cli
mov
xorb
mov
push
lds
sbb
fisubrl
mov
cmp
ss
jle
push
movsb
xor
or
in
subb
lcall
push
ret
test
jecxz
push
cmp
fldl
or
test
lret
mov
jo
aam
aas
rorb
adc
int
jnp
and
out
jge
sti
fwait
and
xchg
outsb
rol
mov
lods
scas
mov
clc
divb
mov
out
cmpsl
jb
into
nop
dec
rcr
fdivl
add
cmp
cmp
loope
adc
cmp
call
dec
mov
mov
push
or
sub
jo
adc
mov
in
stc
ja
sti
adc
xchg
adc
iret
mov
test
out
mov
test
xchg
mov
int
mov
leave
jb
aaa
or
and
lods
fnsave
sub
cli
das
xor
push
addr16
rorb
xor
inc
test
in
fs
sub
movsb
in
push
push
xchg
leave
push
subl
fldl
imul
lea
cmc
test
or
scas
ss
mov
sub
scas
adcb
xchg
sub
out
adc
in
xchg
push
out
or
cmpsb
sbb
mov
aaa
divl
repnz
fwait
leave
add
mov
fdivrs
xlat
test
sub
aas
add
push
in
add
ljmp
pop
mov
stos
lcall
pop
in
and
xor
sub
aam
fnclex
mov
lods
sbb
and
sub
mov
aaa
push
push
ret
push
aad
xorl
cs
inc
fmull
sbb
inc
in
mov
jnp
in
mov
or
sub
bound
outsl
repz
in
dec
mov
inc
mov
mov
xchg
sbb
mov
fstl
xor
and
pop
adc
imul
and
aam
jge
lods
stc
sbb
sub
ljmp
jno
shrl
or
bound
call
pop
sbb
movsb
and
jb
clc
pop
xchg
jo
scas
push
ss
movsb
insb
imul
in
adc
std
jne
stc
cltd
out
aam
lret
sbb
ds
push
add
mov
cld
cmp
fdivl
mov
sub
rcr
and
repnz
mov
inc
js
orl
jecxz
fs
sbb
dec
call
jae
mov
fldenv
out
jae
gs
aaa
dec
aam
movl
shlb
jl
inc
xchg
cmp
xchg
adc
ret
or
xor
xlat
mov
orl
fstpt
fcoms
and
daa
cmovo
cli
sbb
jbe
and
push
pop
lcall
or
dec
in
stc
out
lcall
fmul
inc
cmp
enter
and
cmp
pop
arpl
jbe
test
cwtl
and
xchg
lock
out
lds
cmc
dec
pop
stos
lods
daa
imul
dec
mov
xchg
loop
jo
pop
popa
mov
dec
fstps
add
jge
jae
push
movsb
dec
add
mov
cld
loopne
loop
out
and
xchg
divb
push
inc
or
xor
ret
dec
test
and
dec
sbb
cmpsb
push
flds
push
test
jmp
mov
dec
pop
and
xor
mov
pushf
fldt
stos
in
xor
mov
mov
add
icebp
push
into
call
mov
dec
in
add
mov
insl
inc
xchg
mov
lret
dec
mov
jp
stos
or
rcrl
jbe
pop
loop
add
jp
adc
mov
adc
pop
mov
lock
popf
aaa
test
xchg
lret
add
mov
stos
fistpll
out
xchg
sub
push
mov
pushf
pop
jg
aam
call
push
xor
sub
xchg
jle
and
pop
push
pop
outsb
mov
in
xchg
leave
data16
shll
ljmp
pop
push
shrl
mov
incb
bound
mov
push
sti
fsts
sub
sahf
shll
scas
adc
jno
daa
outsl
dec
pop
inc
and
cmp
sbb
sbb
lret
and
sbb
push
mov
inc
imul
cwtl
cwtl
and
in
inc
lret
fcompl
adc
iret
mov
imul
adc
pop
addr16
jge
std
mov
cmpsl
mov
xchg
push
test
shl
and
stos
lea
xor
inc
jno
pop
insb
or
or
and
xchg
push
jmp
lods
adc
mov
add
mov
jno
sbb
pop
jo
xor
jp
repnz
dec
gs
pop
aaa
clc
cltd
sbb
jns
popf
mov
sbb
cmp
rorl
test
cmc
inc
cmp
add
aas
push
add
mov
inc
ljmp
bound
fcomps
inc
xchg
icebp
cmp
ret
stos
insl
lods
in
sub
lret
sub
cmp
fwait
xor
daa
push
cltd
out
jno
jne
ret
pusha
mov
bound
cmp
add
das
adc
addl
jp
cmpl
mov
stos
repnz
xlat
fcompl
mov
popa
mov
jmp
adc
outsl
xchg
es
cmp
loop
insb
or
repnz
mov
push
movb
adc
mov
aas
inc
std
out
inc
fimuls
mov
inc
popa
xchg
aam
dec
and
fists
pop
dec
jge
push
push
jmp
or
xor
jle
je
jno
fstpt
push
push
imull
mov
xor
das
fidivrl
push
inc
sbb
in
push
jg
insl
lods
adc
mov
xor
sarl
jecxz
xchg
pop
sti
js
aaa
xlat
cwtl
fldl
inc
sbb
jecxz
lods
lea
xchg
push
scas
pop
pop
lods
xor
ret
jge
xor
and
sub
test
inc
aas
pop
push
adc
and
mul
stos
pop
rclb
cmp
xor
int3
cmp
lret
in
testl
daa
and
enter
leave
sub
sbb
out
pop
pop
neg
insl
rcrb
imul
out
xacquire
cmp
push
enter
lret
js
lock
aad
ret
xchg
xor
icebp
ficomps
test
xchg
inc
ret
mov
aaa
dec
ds
sti
pushl
das
cmpsb
pop
clc
mov
pop
rorb
rclb
push
lods
test
gs
and
or
loope
fimuls
xchg
mov
push
fwait
stos
mov
add
lahf
sbb
pop
out
iret
mov
jno
pop
and
inc
fcmovb
mov
je
mov
int3
add
cmpsl
sub
lahf
pop
mov
adc
enter
in
in
lret
sti
stos
mov
dec
fnstenv
pop
mov
jno
popf
pop
add
pop
mov
jns
xchg
ljmp
jns
mov
ds
xor
jo
out
aad
cld
add
jp
test
hlt
push
std
in
imul
sbb
out
jg
lahf
dec
sub
sahf
and
push
xor
jp
push
dec
pop
mov
adc
outsb
mov
or
mov
loop
daa
dec
jp
push
mov
dec
jns
in
jmp
notb
cmc
loopne
or
xchg
movsb
iret
xor
pop
pusha
jmp
mov
push
cs
bound
mov
leave
jg
insb
cmp
mov
lock
xchg
xchg
fwait
jmp
jecxz
clc
fisubrl
fwait
es
aam
sub
pop
repz
int
daa
or
xchg
pop
pushl
in
sub
sbbb
or
pop
and
sub
cld
in
or
pop
or
cmp
adc
loope
dec
hlt
in
js
ljmp
imulb
mov
outsl
or
jmp
shr
dec
pop
loopne
dec
arpl
push
pop
adc
and
xchg
pminsw
adc
mulb
loop
jmp
scas
mov
sub
loope
push
or
ret
lds
xor
outsb
in
mov
push
push
pop
movsl
or
icebp
cmpsb
fidivrs
cmpb
dec
mov
les
xchg
pop
lea
stc
jmp
arpl
mov
sub
mov
fwait
jne
sahf
push
add
pop
jae
sbb
je
dec
mov
cmp
jmp
push
mov
mov
push
mov
xor
push
jne
xchg
sarb
and
xchg
sbb
sub
xchg
add
popf
stos
jns
pop
pop
push
push
lods
mov
mov
test
imull
ret
jnp
pop
jo
jmp
jl
nop
or
sbb
adc
inc
cmp
call
ret
xchg
or
popa
mov
inc
mov
in
add
imul
popa
imul
notl
mov
fldl
in
cs
pop
jmp
insl
mov
aam
daa
mov
testl
adc
daa
lods
mov
aam
ja
clc
ret
jae
stc
ljmp
rcrl
nop
sahf
aaa
dec
in
mov
adc
sbb
pop
jl
xor
pop
mov
nop
mov
sbb
call
fsubrs
jnp
push
enter
hlt
shr
stc
cli
jmp
mov
cmpsb
dec
aas
pcmpgtb
data16
mov
pop
inc
pop
mov
mov
in
stos
fstl
push
pop
xchg
adc
sbb
sbb
iret
jle
xchg
xor
cmp
aam
xor
xor
or
bswap
bound
or
pop
dec
mov
sub
jmp
stos
call
mov
inc
loope
je
cmpl
jb
test
mov
push
es
dec
sahf
int3
incl
pop
loope
and
and
jnp
sbb
xor
out
in
arpl
add
pop
push
arpl
test
push
jb
mov
nop
sub
cmp
pushf
arpl
fwait
cli
pop
xchg
movups
sub
leave
test
xchg
mov
aad
into
xor
aaa
xchg
sbb
xor
mov
nop
jl
into
lods
xor
pop
cmp
inc
sahf
jb
mov
adc
leave
loopne
mov
das
dec
lret
push
cmp
out
xor
jmp
cmovs
leave
jb
or
push
cmp
add
lahf
inc
outsb
std
rcr
and
xchg
fcmovbe
clc
adc
cmc
push
jp
jno
insl
sbb
insb
imulb
and
mov
add
lret
mov
cli
jecxz
dec
dec
data16
mov
xchg
ret
add
scas
inc
test
xchg
xchg
add
subl
adc
jne
bswap
push
add
test
jno
dec
cmpsb
shlb
out
xchg
nop
fimull
fs
cmp
js,pn
inc
and
mov
clc
stos
sbb
inc
mov
mov
fdivp
mov
ffreep
decl
loopne
rcll
out
stos
mov
and
sub
sub
fisubs
fimull
testl
mov
jmp
cwtl
pushl
hlt
aas
ja
imul
je
in
sbb
aaa
mov
fsubr
leave
sahf
jae
or
pop
mov
push
je
add
jnp
loop
jl
fs
call
rolb
pusha
outsb
iret
adc
lods
test
repnz
popf
jecxz
cmpsl
in
sub
and
xlat
aas
jo
dec
popa
xor
popa
fldenv
mov
outsl
aam
nop
inc
push
mov
xor
push
sub
cwtl
bound
je
xchg
jns
in
ret
mov
lahf
mov
xchg
mov
push
es
fldl
enter
fsub
adc
mov
aas
cmp
aam
mov
cli
mov
mov
jl
je
inc
jb
sar
dec
ficoml
sub
fidivl
iret
sti
lahf
cmpb
jb
mov
cltd
sub
ja
inc
sub
stos
pop
inc
loopne
dec
and
je
xor
vmovups
xor
push
addr16
lods
outsb
lea
pop
out
inc
push
dec
jg
jbe
out
pop
iret
jecxz
xor
xchg
stos
daa
jne
add
nop
scas
rcrl
jecxz
add
cmpsl
test
dec
aas
jl
jno
push
mov
adc
xchg
pop
int3
dec
mov
fwait
outsl
xor
stos
sub
add
xorl
cwtl
cmp
mov
fldt
add
adcb
stc
arpl
mov
dec
mov
cmp
test
fstpl
dec
je
mov
mov
sbb
out
mov
pop
sbbl
pop
dec
xchg
dec
mov
icebp
inc
fwait
daa
dec
popf
xor
mov
scas
shrl
jno
imul
int3
in
lret
out
cmp
outsl
icebp
popa
aad
cmp
lcall
test
jecxz
arpl
push
xor
popf
sub
and
jmp
iret
fs
sbb
je
pop
xchg
ficomps
in
aam
or
jge
add
pop
mov
inc
xchg
sub
inc
shll
sbb
jge
cmpsb
push
sub
inc
scas
adc
in
xor
shll
push
or
in
out
mov
shll
cmc
addb
cs
test
jnp
inc
push
fwait
aam
fmull
cmp
mov
dec
inc
jmp
lret
dec
sbb
add
call
arpl
or
sub
xchg
inc
jmp
int
push
mov
imul
pop
fnsave
sub
in
out
mov
clc
cmp
add
cmpsl
repz
in
inc
clc
subl
mov
nop
sbb
cld
mov
clc
int3
push
dec
arpl
xor
mov
dec
adc
in
add
pop
fadds
pop
add
push
xor
mov
cmpsl
jno
clc
mov
jecxz
mov
icebp
push
xor
arpl
je
mov
pop
ret
popf
dec
or
xor
jb
sub
xor
negl
nop
ss
push
mov
sub
out
sub
and
fcoml
cwtl
test
dec
movsb
fmulp
xor
mov
data16
and
mov
or
adc
enter
insb
pop
mov
sub
push
pop
hlt
popf
fadd
lock
cmp
mov
in
mov
fcoml
es
mov
xchg
out
mov
jl
dec
stos
cmp
out
fwait
xchg
mov
or
out
sbb
adc
cld
mov
and
clc
xchg
sub
aas
jmp
fiaddl
cmpsb
fsubp
add
iret
insb
sub
push
scas
cmc
xchg
in
repz
dec
jg
cmp
mov
adc
cmp
pop
scas
pushf
inc
or
inc
hlt
adc
xchg
out
push
adc
xchg
inc
and
scas
inc
jp
dec
rorl
or
pop
mov
aad
sbb
iret
sbb
imul
std
inc
mov
mov
nop
fisttps
pop
mov
pop
out
push
xlat
pushl
ret
je
push
aam
mov
and
mov
cwtl
mov
popa
mov
mov
adc
lods
inc
cmp
stos
ret
stos
add
ret
sub
test
push
popl
xchg
dec
ljmp
dec
xchg
imul
mov
ja
sbb
movb
jp
imul
lock
ja
ret
cmpsb
test
mov
jne
fs
jo
iret
fistps
enter
jg
loop
je
jmp
lcall
jnp
mov
push
xchg
xor
xchg
aaa
mov
cltd
push
pop
xchg
pop
std
shl
adc
aad
cmp
pop
sbb
out
lods
fisubs
fcompl
imul
nop
adc
mov
add
inc
js
loopne
sbb
mov
out
cmp
jae
cmp
lea
stc
inc
jo
adcl
ss
jle
and
pop
push
xor
jnp
pop
mov
hlt
adc
pop
mov
cmpsb
js
xchg
mov
sub
sbb
xchg
xor
and
pop
adc
in
das
cld
mov
dec
in
lcall
in
aad
mov
rcrl
and
mov
push
xchg
cmpsb
insb
push
sti
sub
lods
push
xchg
cmpsb
add
mov
and
rol
push
push
clc
test
cltd
xor
mov
adc
movsb
or
andb
rcl
in
int
ret
ja
out
sbb
rcrb
dec
mov
imul
js
enter
popa
or
aaa
mov
enter
mov
lods
cwtl
les
and
popf
ljmp
fistps
jno
into
mov
out
jge
rorl
inc
repnz
xchg
cmp
dec
sti
mov
xchg
cmp
clc
popf
nop
jge
push
imul
bound
jl
mov
in
xor
inc
test
ret
imul
sbb
dec
sbb
popf
lds
mov
xchg
xchg
dec
mov
aaa
jno
or
out
inc
xor
xor
outsl
lea
data16
pop
in
sub
in
inc
lock
in
pop
dec
fisttps
or
inc
and
inc
imulb
lods
fstpt
inc
mov
and
mov
bound
lahf
add
inc
inc
popa
inc
jg
loop
xchg
scas
jae
out
hlt
popa
les
cmc
scas
xchg
or
ljmp
sub
sbb
sar
lods
rclb
dec
stc
push
jle,pt
xchg
rcll
imul
xchg
sub
outsb
adc
mov
lea
rcr
push
mov
jbe
inc
cmpsl
and
xor
inc
ljmp
out
outsb
flds
mov
hlt
pop
fwait
mov
push
lahf
and
sbbb
lcall
mulb
jnp
in
dec
jo
jg
sbb
pop
pop
jl
and
add
fisubrs
adc
out
jg
mov
dec
dec
bound
inc
mov
test
or
movsb
test
mov
loopw
pop
add
js
dec
push
jne
add
push
in
hlt
sbbl
mov
pop
pop
insb
or
rcrl
into
pop
mov
lds
inc
rcr
in
arpl
push
add
mov
aaa
xchg
or
repz
daa
add
inc
xor
xchg
inc
idiv
stos
shl
cmc
adc
lods
adc
int3
jmp
stos
sbb
adcl
adc
mov
andl
xor
movsl
or
out
std
or
cld
cmc
cld
mov
adc
or
inc
pop
or
xchg
mov
or
repnz
add
loop
jns
inc
push
jecxz
jmp
out
adc
cmpsb
pop
out
add
xchg
enter
push
aam
sbbb
xchg
out
shr
push
sbb
xchg
xor
pop
push
and
es
loope
iret
xchg
iret
lret
mov
leave
xor
test
add
mov
dec
add
aad
push
jb
adc
adc
cmp
test
cmp
mov
and
pushf
adc
scas
pop
movsb
dec
add
xor
in
add
pusha
scas
out
js
arpl
insb
repnz
js
sbb
das
and
ror
jnp
mov
and
test
mov
and
clc
daa
cmp
inc
mov
lret
mov
cmp
addr16
mov
test
pop
push
out
repz
lock
and
inc
int3
add
inc
fsubs
xor
pop
sahf
jl
sub
and
dec
and
data16
and
stos
adc
sti
js
jge
leave
sarl
mov
sbb
inc
fdivrs
xchg
mov
mov
into
push
adc
ret
call
cmp
sub
mov
xchg
and
jecxz
and
pop
jae
push
ret
mov
sub
push
and
mov
cmp
jnp
jae
pop
fcmovbe
add
xchg
fildll
lcall
push
adc
add
out
fxch
add
repnz
filds
and
dec
lahf
inc
push
sub
imul
in
ficompl
mov
adc
bound
xrelease
stc
pop
btr
sub
lea
in
out
nop
mov
inc
ljmp
add
jbe
insl
imul
push
daa
pop
mov
push
jmp
notb
je
loop
pushf
flds
ja
jecxz
mov
pusha
fidivrs
je
sbb
sti
ds
lock
inc
jno
sub
popa
fwait
out
sub
ret
push
pop
jecxz
ret
sbb
stos
data16
cmc
cmp
sub
ret
sbb
add
aaa
jne
mov
and
jns
ret
movsl
mov
mov
or
add
inc
lods
rcrb
insl
dec
es
mov
clc
and
fstpl
inc
mov
data16
outsb
jp
adc
sbbb
ss
add
int
push
mov
push
filds
sub
pop
mov
addr16
ja
ror
pop
cmp
sahf
test
or
pop
pop
addr16
idiv
scas
fadds
push
sbb
adc
fucom
cwtl
add
push
lea
mov
pushf
rcll
jmp
hlt
out
test
push
mov
hlt
lods
scas
stos
nop
std
stc
jle
push
ds
aas
and
aaa
cmp
mov
pop
shll
pop
lret
movsl
ss
cltd
pop
inc
pop
lret
mov
cmp
lret
inc
aaa
mov
and
je
lcall
dec
fucom
xlat
mov
adc
gs
mov
add
jo
ds
sti
cmp
push
add
cmpsl
mov
inc
into
loop
popl
mov
sbb
orb
xor
call
lods
xchg
call
stos
or
push
cmp
outsl
push
pusha
push
pushf
cmpsl
sub
or
test
or
mov
outsb
cltd
movsl
push
outsb
test
cmp
mov
sub
push
ss
add
in
mov
sti
fistl
mov
ljmp
into
shl
ljmp
outsb
dec
push
loope
or
nop
movsb
jns
cmc
outsl
lea
jmp
shlb
fsubs
pop
int3
test
mov
leave
pop
push
ljmp
rcr
push
pop
mov
into
xor
xor
push
sub
test
pop
ja
jnp
shlb
sub
mov
loop
inc
mov
jle
loopne
cmp
test
test
iret
and
and
xor
cmpl
pop
mov
cmp
adc
stos
in
xor
stos
sbb
mov
shl
aas
pop
or
aas
imul
xchg
xchg
out
gs
nop
inc
repnz
pop
lahf
and
pop
jmp
push
xchg
mov
mov
or
jbe
add
add
scas
cmp
xchg
cmpsl
pop
dec
mov
xlat
int3
sub
sbb
je
pop
lds
rcl
leave
movsl
ret
nop
inc
inc
in
or
scas
cmp
fldt
mov
xchg
ljmp
stos
xchg
mov
lret
and
test
sbb
jmp
and
xchg
outsb
xchg
out
sub
retw
fidivs
mov
movsb
mov
jmp
ss
not
decl
and
mov
shll
jnp
pop
loop
in
fdivl
icebp
gs
xor
cltd
inc
in
lods
xorl
cmp
cmpsl
bound
in
add
adc
xchg
mov
cltd
es
aaa
data16
and
pushf
push
gs
nop
lea
mov
clc
test
inc
push
sarb
je
push
dec
cmc
jge
inc
ljmp
std
dec
sub
inc
add
fisttps
ljmp
clc
push
arpl
bound
fs
repz
mov
adc
push
inc
inc
sbb
in
xchg
or
aad
sub
add
fmul
pop
fs
cmpsl
mov
cmpsl
adc
in
push
aas
dec
lahf
adc
ficoml
ret
sub
fdivl
jmp
orw
cmc
cmp
in
mov
mov
imul
mov
daa
mov
jecxz
mov
clc
jecxz
aas
inc
inc
fsub
test
iret
je
out
fstps
shl
int
dec
jmp
adc
pop
ret
fldt
sub
and
iret
jb
into
sbb
mov
stos
xor
or
mov
inc
or
fdivrs
je
ja
or
rcrl
xor
loop
pushf
les
aas
out
iret
roll
cmp
les
push
jbe
lcall
in
push
popa
sub
and
jns
aad
pop
jmp
mov
sahf
fsin
pusha
in
loop
add
and
aam
or
lds
je
dec
hlt
pop
cmp
cs
ljmp
out
pop
cli
jb
xchg
xor
add
mov
test
pop
mov
ljmp
or
loope
xchg
push
inc
pop
dec
jecxz
sub
out
and
mov
pop
fdivrs
sbb
xor
es
dec
cmp
fcoms
out
pop
sub
and
and
jbe
jmp
sbb
ja
xchg
sub
push
sbb
rolb
faddp
lock
inc
sub
xchg
mov
sub
test
dec
xor
out
out
addl
ds
push
neg
dec
shr
push
stos
mov
pop
lret
ss
lea
shr
inc
imul
ficoms
out
pushf
add
sub
mov
or
call
test
lea
add
roll
loope
push
jb
or
or
jae
jbe
pop
fisttpll
push
imul
int
call
push
movsl
lods
cmp
cs
inc
notl
pop
xor
pushf
push
pop
push
fimuls
sbb
inc
aaa
ret
sti
pcmpgtw
mov
int3
push
test
shlb
pop
adc
dec
hlt
cmpsb
out
popw
dec
mov
ss
mov
stos
mov
aas
jmp
mov
movsb
adc
in
mov
cmp
fisttpl
mov
jp
ljmp
add
inc
fs
lds
cmpsb
inc
lds
in
inc
mov
popl
lds
jmp
jge
jle
sub
test
pushf
fcmovnu
stos
movsl
andb
nop
and
dec
sbb
out
inc
pop
lods
lods
stos
mov
insl
cmpsb
int3
fs
push
out
lret
ljmp
xchg
es
addr16
jb
mov
inc
cmp
lret
add
cmc
mov
int
ljmp
push
inc
popa
arpl
xchg
and
mov
xchg
push
mov
jl
lods
cmpsl
enter
lods
jl,pn
add
push
cmpsb
jp
lcall
insl
or
or
xor
jmp
cli
fnsave
cmp
mov
sub
mov
ja
xchg
loope
popa
pop
xor
xchg
or
push
push
cltd
mov
out
inc
sbb
xchg
cmp
daa
bound
data16
jp
nop
xor
fwait
mov
adc
dec
sbb
mov
mov
xchg
cmp
xchg
adc
sahf
call
hlt
xor
in
lds
add
jns
mov
cltd
xchg
fwait
cmp
add
jnp
loop
inc
jg
bound
mov
lods
hlt
cltd
jb
fwait
push
mov
lcall
jge
xchg
mov
jmp
push
cli
dec
ret
dec
repz
outsb
mov
loope
jb
aaa
addl
repz
dec
mov
adc
inc
push
rorb
push
fistps
lods
in
or
lret
xchg
dec
push
xchg
aad
add
adc
pop
pusha
jae
lcall
ja
or
sub
xchg
les
ss
pop
das
pop
mov
out
js
adc
and
push
pop
cltd
mov
sar
mov
jg
mov
in
mov
mov
jp
negb
popf
bound
in
hlt
xchg
xchg
fisttps
mov
inc
push
clc
lods
fbstp
nopl
xchg
shll
sub
and
lods
sbb
pop
and
les
inc
test
jmp
sub
std
scas
mov
minps
repnz
fs
lods
jmp
dec
mov
aad
mov
shrb
loop
or
loope
ss
dec
mov
dec
adcl
inc
jo
and
lods
pop
adc
scas
jg
mov
push
lcall
inc
cwtl
inc
push
lea
stc
mov
dec
dec
mov
je
mov
or
imul
test
adcl
pop
rcll
aam
punpckldq
push
jl
sbb
cwtl
sbbb
pusha
pop
mov
inc
or
xchg
iret
test
iret
insb
push
loope
pop
mov
inc
add
mov
test
pop
pop
xchg
cli
inc
add
aaa
push
icebp
sbb
es
pop
sub
sbb
pop
or
mov
movsl
setl
arpl
inc
rcrl
xchg
push
push
push
push
int3
jg
mov
sub
outsb
sub
inc
add
or
jbe
lret
sub
adc
cmc
scas
in
lds
mov
es
int
std
call
test
hlt
icebp
cli
mov
stc
jge
fdivs
cmc
jns,pt
pop
xor
jmp
xchg
mov
pop
mov
inc
pop
pop
addr16
push
js
out
out
xor
outsb
jne
insb
stc
enterw
cmpsb
imul
dec
mov
mov
pop
push
fadds
jns
scas
aas
fdivs
fcomps
add
js
dec
and
int
mov
push
lods
scas
push
outsb
jecxz
pop
jg
out
aaa
cmp
andb
mov
cld
ds
xor
cmp
xor
loopne
adc
into
bound
adc
mov
jb
lret
pop
cmpsb
fists
sub
pop
fsub
imul
cli
push
mov
mov
inc
fwait
xor
sarl
fwait
shlb
push
push
sbb
xor
repz
and
test
lods
inc
sahf
dec
cmp
out
lcall
mov
dec
xchg
addr16
or
push
ret
sbbl
cs
cmp
in
je
push
sbb
mov
nop
rclb
clc
movlps
lcall
xchg
lock
ljmp
dec
xchg
inc
sub
push
jg
aad
mov
popa
adc
scas
mov
push
aaa
in
mov
cmpsb
xor
test
pop
rorb
pusha
lock
xchg
mov
or
xor
mov
xor
pop
hlt
subb
js
das
cmp
pop
or
lret
inc
test
fwait
xchg
pushw
mov
aas
ret
pushf
pushf
sbb
xor
mov
insl
jnp
sbb
clc
loop
pop
pop
fnstsw
sbb
std
movsl
out
subb
cmp
adc
pop
sub
int3
in
out
out
in
and
aad
mov
dec
sub
add
or
insl
inc
bswap
fildl
lret
gs
std
addl
enter
aam
push
rorl
lds
lods
or
insl
mov
in
hlt
mov
fildl
fsubrs
mov
xchg
xor
out
test
sahf
fisubrs
stos
or
fst
mov
mov
adc
out
popa
or
in
pop
inc
mov
sbb
dec
add
cmc
test
sbb
outsl
imul
mov
icebp
outsl
bnd
pop
fimull
mov
xchg
lds
sub
into
mov
xchg
xchg
mov
push
cmp
sbb
insl
cwtl
sbb
imul
jbe
or
xor
shlb
test
stos
loope
push
mov
xor
adc
dec
rolb
or
xor
sbb
inc
repnz
mov
adc
repnz
and
es
xchg
sti
int
ret
insb
inc
roll
arpl
sahf
lret
xor
xchg
lock
dec
arpl
sti
cmp
xchg
loop
outsl
cmp
imul
mov
test
cmp
divl
lea
mov
mov
xchg
cs
movsb
adc
int
inc
outsb
push
stos
sub
dec
adc
rorb
ds
stos
aam
js
outsl
popa
mov
adc
into
xchg
out
lds
pop
bound
outsb
lods
and
push
push
push
aam
xor
adc
ljmp
dec
xchg
jns
jl
or
cmpsl
pop
add
outsb
pop
int3
mov
addb
push
movb
mov
and
adc
jns
subb
fsub
out
sbb
or
ror
scas
lods
dec
dec
mov
mov
pop
add
cld
mov
gs
pop
mov
stos
int3
pop
jae
ljmp
je
int3
pop
dec
leave
fldcw
jge
or
jmp
std
inc
aas
ss
adc
mov
fldcw
and
mov
dec
cltd
adc
repnz
push
jne
adc
lret
es
idiv
lods
xor
std
mov
push
lods
inc
shrb
sub
shr
xor
or
fcmovnbe
test
mov
mov
mov
ss
in
and
mov
xchg
mov
push
cs
xchg
test
addl
xor
fldenv
mov
outsb
adc
out
inc
push
decl
cmp
sbb
fs
out
lods
adc
or
movsl
bound
movsb
test
aaa
pop
push
jae
out
lock
sub
and
inc
movsl
push
jp
mov
jne
inc
pusha
fcmovne
mov
jge
rcrb
or
push
imul
out
pop
cmp
aas
xorb
insl
aam
dec
lods
movsl
add
int
cs
push
cltd
call
sub
sbb
es
mov
ret
cmp
dec
test
inc
out
pusha
mov
dec
push
fstps
xchg
int
inc
dec
loope
sub
dec
xor
test
imul
add
cltd
jmp
mov
jns
push
scas
adc
xor
xchg
lods
lock
mov
xlat
mov
in
sub
xchg
jne
inc
imul
xchg
fsts
jno
pushf
jle
nop
lods
sbb
out
fsubl
mov
nop
and
add
xor
mov
mov
rolb
and
mov
inc
xchg
pop
cltd
jecxz
sub
out
or
adc
test
push
pop
push
and
jbe
adc
mov
lahf
add
mov
or
cmp
mov
rcl
cld
xchg
xchg
dec
cltd
xor
scas
repz
xor
cltd
xchg
xchg
add
movsb
clc
mov
jnp
jbe
movb
lods
lods
cwtl
scas
xchg
mov
and
cli
mov
jns
add
xchg
pop
xlat
scas
mov
mov
adc
pop
mov
pop
push
mov
sub
les
or
adc
sub
xchg
leave
rcl
cmp
popf
or
mov
pop
insl
and
pop
rolb
fisubl
mov
push
add
mov
xchg
aaa
mov
lods
jo
in
sti
addl
mov
and
sbb
cmp
sub
fnsave
mov
fs
lds
icebp
loopne
sbb
pop
popa
bound
cmp
je
gs
push
add
nop
or
fnstenv
lock
das
or
add
xor
add
xchg
lods
jae
lods
push
push
cmp
mov
jle
mov
xchg
mov
push
sahf
jbe
mov
jns
mov
stos
adcl
pop
xchg
rol
lret
roll
outsl
icebp
jp
and
or
mov
dec
movsb
cmp
adc
jbe
pop
lock
jecxz
enter
sbb
stc
inc
mov
jg
inc
mov
in
mov
out
cld
and
lock
in
jl
cmpsl
inc
roll
pop
imulb
xchg
xchg
rcl
test
push
cli
fs
mov
mov
cmpsb
mov
dec
push
test
xor
mov
xchg
xchg
mov
aaa
cs
cmpsb
test
inc
mov
rcrl
arpl
in
cltd
jecxz
loop
pop
outsl
pop
xor
and
sbb
push
add
jno
push
shll
lods
in
or
mov
notl
pop
pop
ja
mov
pushf
mov
sbb
enter
scas
add
inc
loop
adc
in
nop
dec
lock
ss
adc
push
pop
add
jge
idivb
fwait
xor
popa
and
bound
pop
xchg
addl
and
push
fisubrl
scas
cmpb
mov
jecxz
dec
mov
fucomip
sub
scas
dec
push
jne
xchg
adc
scas
rolb
xchg
roll
jb
int
dec
mov
inc
nop
iret
or
lds
xorb
js
inc
mov
scas
push
mulb
jmp
mov
dec
and
stc
orl
mov
gs
xlat
data16
in
les
das
mov
pop
enter
sti
push
stos
xchg
dec
jo
and
mov
push
jmp
xchg
push
dec
dec
or
leave
leave
and
loope
lock
pop
sbb
adc
pop
xchg
mov
aaa
inc
out
or
mov
mov
std
adc
jle
inc
sbbl
popa
lods
or
movsl
or
loopne
out
mov
ret
ss
dec
dec
clc
mov
repz
js
inc
push
pop
insb
push
into
ret
ja
jnp
push
xchg
mov
and
dec
cltd
push
out
xor
adc
out
movsb
jg
or
out
add
jg
sahf
xchg
popf
cltd
je
xchg
mov
movsb
fisttpl
or
lds
cwtl
lods
inc
mov
fistpl
inc
aam
ljmp
xchg
aas
out
loop
inc
sub
and
and
mov
notb
lods
sub
dec
jl
nop
sub
nop
add
push
inc
dec
lret
xchg
int
ja
cmp
cmp
cmp
or
mov
ja
jp
sub
scas
int
jae
push
aam
idivb
mov
hlt
addr16
mov
stos
sbb
dec
pop
xor
jle
jae
stos
les
movb
aad
rcll
push
scas
dec
cmpsl
mov
aaa
stc
xchg
daa
aas
and
push
test
dec
or
gs
test
test
xor
inc
cmpb
push
push
cmp
shll
mov
dec
push
pop
xchg
sub
lods
xchg
cmpb
inc
jl
cli
dec
outsb
daa
mov
jle
insb
push
out
leave
sahf
ret
xorb
loopne
out
add
xchg
sbb
mov
jne
or
aaa
data16
lret
sub
adc
hlt
xchg
pop
out
imul
shl
mov
push
jge
pop
shrb
filds
mov
fiaddl
adc
popa
fistl
stos
push
int3
add
mov
sbb
mov
pop
mov
insl
sub
das
mov
mov
test
stos
js
xor
lret
xchg
fnstenv
pop
dec
loop
push
inc
mov
mov
inc
push
ss
jo
aas
pop
pop
mov
fists
push
cmc
push
loope
notl
shll
cwtl
cmp
aam
push
aam
out
repz
iret
lahf
sub
bound
dec
jb
cli
and
add
rclb
int
mov
or
push
rcrb
mov
fwait
mov
add
lods
and
pop
inc
scas
mov
and
inc
clc
fisttpll
or
in
icebp
xchg
inc
loope
pushf
sub
mov
loop
ficoml
mov
repnz
daa
mov
dec
jb
pop
inc
pushf
fisubl
dec
sbb
ja
jbe
pop
mov
icebp
add
cmc
push
repnz
cmc
out
out
cli
sti
mov
dec
addr16
push
popl
cmp
adc
in
scas
push
mov
outsb
fisttpl
push
dec
jno
jmp
jg
add
jmp
mov
pop
shll
ret
push
rcll
cmpl
and
outsb
adc
jae
outsl
xchg
mov
enter
stos
out
push
je
ja
or
sbb
sub
fs
mov
ljmp
dec
loopne
sahf
stc
push
push
mov
add
iret
cmp
pop
in
push
popf
stc
pop
mov
pop
mov
adc
stos
or
cwtl
jmp
dec
movl
fcoms
cmp
rolb
stos
inc
inc
inc
pushf
aaa
out
mov
or
mov
push
arpl
jno
ficoml
pop
dec
and
pop
xchg
lds
leavew
adc
and
jo
sub
sbb
iret
aad
repnz
flds
in
mov
fadds
sbb
lds
mov
outsb
out
pop
pop
sbb
insl
or
fdivrl
mov
out
and
mov
jge
inc
lock
lret
lret
insb
pop
fisttpl
mov
push
lods
or
add
mov
das
mov
xchg
push
sub
and
add
lods
jp
mov
sbb
repz
xlat
inc
xchg
xor
pushf
inc
mov
stos
jl
and
incb
and
mov
jge
out
pop
mov
sub
sbb
outsl
sahf
pop
add
int3
cmp
testb
je
lret
rorl
in
jbe
mov
pop
test
movsb
arpl
xchg
andb
pop
inc
dec
lcall
lcall
shrb
lcall
cmpsl
lods
jbe
push
mov
insb
js
aaa
dec
ds
scas
push
jno
imulb
in
mov
xchg
lods
outsb
mov
hlt
xchg
das
dec
test
adc
xor
push
shrl
cmpsb
clc
outsl
cld
cld
inc
loope
sahf
das
in
leave
pop
mov
xor
nop
xlat
arpl
push
mov
jp
xor
insb
sub
rcrl
test
loop
push
mov
and
or
push
insl
dec
mov
dec
imul
xor
popf
repnz
jle
aad
call
jae
jl
jns
jle
mov
add
xchg
mov
pop
andb
pusha
pop
arpl
pop
out
fcomps
sub
push
cmp
in
mov
add
push
clc
adc
mov
xchg
out
xlat
jo
cmp
insb
aad
nop
stos
mov
lods
mov
les
push
add
xor
lea
add
inc
and
addl
lods
dec
push
inc
mov
cmp
pop
mov
mov
and
xchg
inc
cmc
ss
dec
cmp
insb
pusha
jo
ljmp
lea
incb
mov
cmc
jmp
dec
cli
mov
xchg
inc
dec
xchg
mov
cmp
sahf
jp
sbb
push
cltd
lds
es
mov
sub
sbb
or
mov
mov
jle
fs
nop
iret
and
mov
or
push
add
in
lret
lea
sbb
movsb
dec
jg
mov
shll
inc
jecxz
xchg
stos
movb
orl
fs
jnp
gs
add
xchg
shl
into
iret
adc
pop
xor
bound
or
popf
and
xchg
sbb
cmp
pop
pop
cmp
inc
movl
mov
pop
xchg
xchg
fisubl
lahf
imul
pop
pop
fdivl
xchg
inc
ret
out
pop
adc
or
cmp
mov
sbb
shlb
jo
fidivl
cmp
or
ds
andb
mulb
sub
push
mov
push
mov
dec
dec
sbb
push
imul
jp
sarl
mov
cmc
shl
cmp
and
push
stos
rclb
dec
mov
mov
xchg
aas
out
push
add
aam
scas
jecxz
decl
jp
lcall
test
es
pusha
shr
lahf
mov
mov
sahf
adc
sub
cs
or
imul
push
in
data16
ret
push
pushf
cld
jne
xorb
sub
or
test
cmp
dec
scas
stc
push
ffree
push
pop
iret
out
adc
scas
push
xor
lods
movsl
jno
inc
adc
sub
or
pushf
push
adc
call
or
sub
fildl
call
imul
and
cmp
push
dec
stos
dec
mov
adc
mov
sahf
ret
in
ret
pop
push
sbb
mov
pop
call
pop
or
or
negb
pop
add
data16
pop
cmpsb
movsl
or
xchg
fidivrs
pushf
cmp
push
pop
jle
decb
popa
cmp
mov
xchg
out
lret
repz
cs
push
pop
sub
fstpt
sbb
out
in
jno
loop
out
bound
sbbb
repnz
scas
sub
jl
sub
sbb
sbb
sbb
lcall
in
imul
xor
mov
inc
or
push
push
xlat
stc
sti
xor
bound
push
ljmp
push
into
ss
xchg
mov
imul
jne
sub
and
or
mov
adc
lcall
inc
or
scas
mov
scas
les
outsl
xchg
pop
das
add
lea
and
sub
add
sub
sahf
sbb
sub
fwait
scas
jecxz
psubw
lret
data16
add
sub
add
jns
imul
std
test
ret
int3
repnz
imull
cmp
or
idivb
jns
jmp
mov
jmp
cmp
shlb
and
push
test
lcall
sarb
xor
in
adc
fdivrs
pusha
cmp
sub
pop
sub
jnp
fsubrs
out
movsl
push
sbb
or
sahf
cmpsb
nop
fimull
cmc
push
rcll
sbb
fidivrs
mov
sahf
pop
or
xchg
dec
xchg
leave
jge
popa
mov
lret
call
xchg
jb
mov
adc
cld
sub
hlt
cmp
jae
and
out
in
movsl
filds
push
lahf
gs
lods
xchg
hlt
inc
int
add
cmpsb
mov
jne
sahf
hlt
mov
jae
push
frstor
jle
int3
mov
mov
cli
daa
gs
in
enter
lock
ds
sbb
pop
push
leave
repz
es
push
or
inc
xchg
push
test
aaa
push
cmp
push
imul
pop
test
orb
adc
jl
mov
leave
inc
sarb
cwtl
movsl
leave
jmp
adc
pop
mov
aas
inc
in
add
cmp
sub
imul
loope
mov
movsb
and
mov
mov
mov
mov
mov
or
push
adc
popa
xlat
push
jge
sub
stos
inc
xchg
mov
pushf
pop
fidivs
jp
jnp
jbe
and
mov
out
cltd
rorb
dec
mov
shlb
stos
cmp
outsl
mov
sub
or
cs
push
mov
repnz
lahf
cltd
and
sbb
mov
loope
shll
pop
add
sbb
aam
push
out
sub
jo
fnstsw
std
inc
xor
enter
push
xor
or
lds
xchg
and
pop
lahf
and
jns
xlat
xchg
ret
inc
sbb
icebp
jg
ret
lret
adc
not
xlat
lcall
inc
cs
push
pop
mov
mov
xor
movsl
jmp
dec
add
push
and
xor
iret
test
jl
mov
or
dec
adc
push
lds
inc
test
icebp
and
xchg
sub
mov
or
js
jmp
xchg
aas
push
je
cmp
and
popf
test
xor
adc
roll
in
cmp
ljmp
jo
xchg
pushf
mov
int3
leave
mul
mov
pop
aam
push
fxch
and
repnz
add
xor
add
and
pop
cmc
xor
cmp
sub
dec
aam
filds
jno
inc
push
push
xor
pop
ljmp
ss
pop
dec
pop
mov
push
test
inc
inc
filds
xor
add
out
adc
cld
sbb
or
aad
jge
arpl
jge
cltd
pop
adc
addb
gs
sbb
xchg
jo
daa
test
cs
mov
mov
jnp
sub
leave
addr16
adc
or
imul
andb
movsl
fscale
fsubs
mov
xchg
cmp
sbb
mov
std
sub
lods
mov
out
adc
pop
cmp
or
cmpsb
cmp
rorb
loop
pop
cltd
ror
xor
xor
pop
test
mov
push
xor
and
or
sub
inc
pop
insb
adc
xor
cmp
pop
shrl
and
jge
cli
orl
cmc
cmpl
int
pop
mov
aaa
cmp
sarl
lcall
rcrl
add
pop
cmc
push
sarb
aas
jmp
xchg
jnp
jns
aam
out
int
inc
push
sub
mov
rclb
jg
lahf
pop
cld
push
jb
std
add
outsb
pop
sbb
cmc
xchg
addr16
in
mov
stc
into
js
clc
stc
jbe
jle
std
cltd
shll
fiadds
movhps
ret
push
pop
cmp
rorl
scas
jns
add
mov
xchg
cmpb
lret
test
aad
das
inc
xchg
imul
das
jne
ljmp
insl
test
jo
dec
enter
cmc
jecxz
jae
xor
fistl
add
dec
sub
loope
adc
ret
in
and
jae
and
mov
mov
cmp
push
mov
icebp
cld
xchg
jl
pop
mov
in
mov
stc
push
in
inc
mov
popa
sub
pop
outsl
ret
outsl
dec
push
out
sub
rorl
pop
pop
pop
lahf
insb
jle
inc
cwtl
add
push
xlat
xchg
mov
pop
jne
cltd
stos
ja
imul
imul
mov
sub
jge
inc
int
jle
mov
adc
dec
xchg
mov
mov
mov
aam
push
adc
pop
push
sbb
adc
sbb
stos
push
lret
xchg
out
dec
push
add
pop
outsb
jg
lods
je
mov
pop
idivb
dec
sbb
sar
or
pusha
cli
dec
push
repz
popf
movlps
jns
xchg
repnz
cltd
mov
aam
add
cltd
push
stos
mov
inc
testb
adc
repnz
xor
add
lea
sbb
sub
mov
sbb
jno
push
iret
dec
sahf
fsub
pop
add
push
mov
mov
loop
scas
xchg
ret
addr16
frstor
or
pop
outsb
cmp
aas
bound
fiaddl
loopne
mov
mov
inc
fimuls
pop
cmp
push
lret
add
scas
mov
mov
adc
mov
fdivrl
mov
mov
sub
mov
sbb
shlb
adc
or
dec
in
jo
sub
push
lahf
and
pop
mov
nop
in
test
aaa
sbb
pop
outsb
mov
cmp
dec
jo
mov
in
add
add
jae
sbb
out
dec
scas
xchg
icebp
mov
bound
adc
adc
push
sub
jnp
lcall
jge
rol
outsl
dec
lods
mov
push
into
orl
clc
lret
addr16
inc
fs
sub
jae
lcall
hlt
jg
fs
mov
add
sub
shll
adc
dec
lahf
dec
and
and
js
add
mov
jo
mov
mov
daa
dec
fadds
clts
mov
in
jbe
push
mov
jge
inc
js
jl
and
and
dec
xor
adc
mov
pop
dec
and
lret
cmp
xchg
sub
push
roll
stos
mov
dec
pop
ja
icebp
cmpsl
jge
lds
jb
mov
dec
pop
mov
jge
dec
xchg
leave
pop
inc
aam
jno
aas
xor
dec
push
aaa
loop
xlat
movsb
jb
ljmp
mov
inc
jb,pt
ret
sahf
in
xlat
rorb
bound
mov
sub
les
sub
ss
mov
mov
adc
or
mov
pop
jge
mov
lret
mov
fnsave
in
dec
aad
mov
adc
lret
sub
pop
shrb
mov
and
jae
jno
cmp
sti
fnstsw
arpl
jno
jnp
imul
pusha
push
dec
push
pop
ds
pop
cmp
in
lret
ss
sub
pop
es
repz
lds
sub
fsubrl
test
and
adc
inc
jmp
das
gs
mov
xchg
push
aaa
cmp
mov
sub
lock
pop
ret
mov
ja
addr16
stos
sub
cld
mov
cmpsb
pop
fstps
lret
lods
push
mull
imul
enter
lods
and
sbb
adc
loopne
cli
jp
or
pop
xchg
mov
push
pop
push
cs
insl
adc
lret
dec
adc
imul
adc
add
cmp
fildl
out
inc
int3
mov
dec
data16
stos
aam
in
test
dec
movsb
cltd
cmp
xchg
mov
jns
lods
sub
mov
adc
addr16
shlb
cltd
inc
xor
jae
mov
gs
fwait
pop
and
pop
arpl
sub
notl
je
addl
sar
rcl
inc
push
insb
rcrb
ss
xchg
int3
cmc
xchg
hlt
or
cmp
hlt
add
addr16
cltd
rcl
cmp
out
fs
frstpm(287
scas
dec
sbb
test
mov
leave
sar
lods
pusha
clc
sbb
mov
cli
mov
popl
roll
dec
xor
mov
outsb
push
fistps
adc
mov
into
inc
sbb
icebp
ret
pop
fstpl
insl
stos
ret
lock
lret
test
ret
pop
ja
lahf
sbb
les
lods
jbe
inc
pop
dec
enter
nop
pop
in
and
cmp
roll
cmp
dec
dec
dec
fdivs
rcrb
sub
adc
rcrb
inc
xchg
jns
sbb
out
sub
xor
mov
xor
adc
jmp
stc
dec
push
or
adc
ret
and
push
mov
pop
fidivrl
jecxz
pop
mov
imul
sbb
inc
sub
bound
inc
in
sbb
and
and
mov
pop
dec
adc
mov
and
inc
inc
outsb
sti
icebp
lods
add
xchg
imul
xor
repz
stc
ret
mov
mov
jb
mov
rcll
dec
fildl
cmp
shll
cwtl
pop
ret
fs
popf
mov
adc
into
leave
ror
fs
add
sub
gs
cmpsl
out
inc
into
out
push
cltd
js
cmpsl
sbb
repz
cmp
leave
xchg
je
pop
es
mov
nopl
dec
mov
dec
pop
outsb
call
xchg
fdiv
cmpsl
stos
in
ljmp
mov
jecxz
sbbb
test
dec
pop
mov
aam
push
xor
dec
repz
xlat
test
popa
adc
xor
xor
pcmpgtb
movsl
pop
pop
mov
int3
lds
movsb
sarl
sub
iret
mov
jl
or
sti
push
testl
mov
into
jns
mov
sub
xor
sbb
xchg
je
xchg
inc
dec
pushf
jns
mov
int3
jb
or
loope
sti
into
cli
and
ljmp
or
cli
call
or
js
inc
xchg
test
dec
idivb
and
rorb
lds
scas
jle
sbb
inc
sahf
xlat
lods
cmp
sahf
sarl
jae
into
cmpsl
dec
or
into
dec
sub
mov
jmp
or
shrb
mov
bswap
mov
xor
pop
sbb
inc
nop
aam
push
loope
rcrb
js
push
ret
mov
pop
leave
sbb
inc
and
loop
mov
and
test
sbb
int3
mov
xchg
jle
add
jmp
mov
jns
jo
mov
pop
mov
jle
int
int
sub
pop
fsubs
mov
loop
xchg
sti
fwait
negb
lcall
test
leave
xor
cmp
ds
jg
push
aas
lock
test
cs
iret
addr16
sub
lods
sbb
pop
inc
flds
inc
or
or
cltd
filds
ffreep
stos
cwtl
je
popa
cmp
or
es
xlat
mov
jecxz
mov
das
dec
jns
mov
rolb
xor
flds
aas
hlt
jne
hlt
pop
inc
rcrl
test
mov
pop
jae
imull
dec
add
in
xchg
jb
xchg
pop
mov
push
mov
dec
sarl
mov
fs
pop
xchg
sbb
js
cmp
inc
sub
fcmovnbe
cmpsb
inc
incl
adc
pop
xor
lock
orl
cs
cmp
outsl
in
decl
lods
daa
les
test
cmc
repnz
dec
subl
and
unpcklps
shlb
ficoml
pop
idivb
dec
fucomi
arpl
sbbb
jnp
or
dec
in
lods
into
cltd
mov
imul
xchg
insb
and
inc
sub
int3
in
rcll
cmp
dec
and
fdivs
stc
js
icebp
fwait
into
enter
pop
arpl
push
out
jmp
stos
lea
pop
aaa
and
cltd
cwtl
leave
rorl
push
xor
push
stos
push
cs
xchg
leave
mov
out
test
xchg
movsb
pop
stos
lret
int
xchg
add
int3
mov
mov
ficomps
sarl
mov
cmp
lea
cli
sbb
add
popf
rcrl
pop
repnz
cmc
add
loop
mov
sbb
das
mov
xchg
inc
jp
outsl
js
sbb
es
popa
rorb
into
adc
lods
jle
xor
dec
jns
push
and
cmp
shrl
mov
lds
xor
ret
adc
in
lahf
xor
popf
into
das
daa
into
pop
pop
jg
out
cmp
cmpl
fisubs
test
stc
mov
scas
hlt
aam
mov
clc
jno
scas
push
add
jnp
xchg
stc
xchg
pop
out
out
in
imul
ds
push
push
pop
sahf
push
fistpl
js
xlat
xor
rcrl
sti
push
jmp
cmp
sub
sbb
and
mov
sbb
mov
stos
cld
popa
push
jge
xchg
loopne
xchg
jmp
rolb
adc
out
lods
rcrl
adc
xchg
outsl
aad
sub
scas
daa
stos
aam
aas
lods
mov
push
imulb
cmp
out
adc
push
stos
pop
push
je
repz
pop
push
fsubrs
add
imul
fidivl
shrb
sbb
pop
test
jle
push
fs
lea
pop
cmp
pop
das
fwait
ss
jp,pn
test
ds
div
pop
stos
movsl
std
xor
loop
mov
dec
or
outsb
jp
push
mov
jb
mov
lods
mov
mov
daa
mov
mov
shll
addb
add
test
xchg
in
or
add
aad
push
cmp
pop
movsl
adc
push
ja
push
outsl
mov
add
out
mov
in
or
xor
pop
roll
mov
lret
mov
pusha
je
or
loopne
nop
lock
pop
jle
pop
cwtl
sbb
movsl
pop
sbb
mov
test
xor
cli
icebp
jl
sbb
push
xor
or
xor
mov
lods
jecxz
xchg
inc
mov
push
xchg
push
xchg
and
lea
mov
repnz
lret
xor
arpl
cmp
stc
jp
mov
dec
adc
cmp
in
jbe
mov
add
mov
sub
mov
push
out
in
adc
or
pop
xorl
loopne
mov
outsb
das
mov
push
mov
rorb
adc
adc
dec
jae
jne
shrl
sub
movsl
inc
mov
out
icebp
and
cltd
add
sbb
in
repnz
stos
adcb
ds
repnz
xor
sbb
gs
jge
push
test
mov
adc
test
mov
dec
pop
xchg
xchg
repz
call
cmpsb
mov
cmpsb
push
or
in
int3
sbb
ja
or
mov
mov
add
stos
test
pop
incb
rcrl
lock
sbb
pop
outsb
cltd
xchg
lcall
cs
push
mov
fcmovu
std
lret
in
prefetchw
or
repz
sub
out
push
sbb
jmp
imul
sub
lahf
ficoml
sbb
fsubs
push
push
push
inc
jb
pop
shrb
dec
xchg
fists
push
xchg
and
push
sub
push
insl
int
les
imul
push
xor
pxor
ltr
mov
cwtl
dec
xchg
cmpsb
pusha
fsubrs
lahf
push
fcoms
stos
pop
iret
sub
jo
xor
lret
inc
ljmp
iret
int
fsts
inc
mov
hlt
loopne
push
push
rol
mov
sbb
add
imul
fldl
sbb
xor
xchg
jo
push
sub
ja
mov
aam
lcall
mov
outsl
hlt
imul
out
rorb
sbb
out
imul
xchg
scas
out
ficompl
js
scas
mov
xor
std
enter
in
cmp
inc
inc
cmp
out
sbb
and
and
inc
es
dec
xchg
shll
popf
rorl
mov
cmpsb
push
insl
xchg
loop
testl
fcomps
in
out
mov
cli
into
inc
dec
repnz
lea
mov
sbb
data16
or
sarb
push
jg
call
xor
lods
fisubl
add
ja
sbb
ljmp
cmpl
cmp
or
mov
push
std
mov
or
fs
sub
add
xchg
in
inc
push
or
xor
dec
hlt
cmp
jo
mov
les
dec
xor
rcr
jae
adc
out
sahf
fiadds
push
cmp
data16
lea
jg
repz
add
cmpsl
jnp
jae
scas
cmpsb
xchg
sbbb
popa
mov
insl
jnp
cmpsl
clc
push
sahf
lock
je
jl
jecxz
lret
xchg
clc
outsb
ret
push
xor
fisubl
cs
xchg
pop
push
icebp
pop
outsl
stos
stc
add
icebp
inc
sbb
add
insb
fdivs
or
scas
loope
sbb
push
mov
ret
jnp
scas
sbb
ret
subb
ss
jb
mul
out
gs
mov
xor
pop
mov
cmpsb
iret
push
pop
roll
fwait
push
cmp
sub
hlt
sahf
xchg
pop
cmp
xchg
cmc
lret
es
sbb
pop
jne
add
hlt
sbb
es
mov
sub
sbbl
xchg
and
sub
aaa
mov
fs
mov
adc
movsb
xchg
and
out
jb
and
insb
mov
mov
insl
dec
subb
xchg
test
repnz
inc
sub
jns
in
jno
cwtl
or
and
push
inc
fcom
mull
mov
or
inc
sbb
dec
aad
cmp
std
cmp
inc
dec
jns
push
stos
ficompl
out
pop
in
sub
jbe
xor
push
push
rorb
bound
adc
or
add
lods
push
xor
pop
testl
pop
push
dec
outsb
mov
popf
add
fisttps
cltd
pop
cs
mov
adc
mov
add
jne
imul
fidivs
mov
mov
mov
dec
xchg
inc
push
loop
jecxz
or
ss
inc
fs
hlt
loop
cmp
mov
mov
pop
jne
cli
lds
mov
cli
dec
inc
insb
push
inc
sti
jmp
mov
clc
mov
ret
push
stos
outsl
inc
je
dec
icebp
sub
sub
stos
bound
lret
or
cmp
xchg
add
daa
mov
lods
test
jl
pop
mov
jl
add
cmpsl
xchg
xor
sub
adc
push
int
pushf
cmc
jns
das
popf
lods
lea
push
sub
dec
sti
xchg
shlb
rcl
movsl
pop
inc
neg
mov
mov
cli
fsubrp
popa
mov
mov
lods
adc
test
add
xchg
mov
mov
daa
jnp
lock
fstpt
and
dec
inc
add
mov
mov
cltd
ja
cld
fistpll
xor
pop
das
adc
cli
ffree
dec
add
ficoml
pop
cmp
xor
push
inc
sbb
lcall
mov
or
mov
loop
mov
xchg
lea
sbb
mov
fbstp
and
dec
out
in
fadd
pop
int
aaa
or
jge
mov
sbb
sahf
test
dec
jmp
nop
adc
push
dec
mov
mov
stc
pusha
and
sbb
xchg
sbb
or
xchg
and
sbb
sbb
lock
test
shr
mov
bound
lea
mov
inc
ror
cs
test
mov
jno
xchg
jae
test
out
cld
lds
or
ficomps
repz
push
pushf
mov
xchg
sti
push
popf
mov
into
aaa
in
mov
and
cmc
sbb
lods
std
push
ljmp
and
fwait
dec
mov
popf
adc
mov
int
shll
cmpsb
movsb
dec
pusha
cmp
and
clc
clc
mov
mov
adc
adc
fdivs
lahf
int3
cmc
sub
ficoml
and
dec
and
mov
data16
test
jne
mov
and
jns
bound
cmp
or
aam
sbb
jo
loope
imul
icebp
adc
das
adc
imul
inc
mov
add
repz
cli
mov
sub
rcr
xchg
shll
adc
xchg
lods
fwait
xchg
call
mov
and
dec
sbb
popf
popf
xlat
adc
iret
xor
testl
inc
cli
push
dec
popa
jo
jns
mov
pop
mov
testb
dec
sbb
popf
ret
subb
push
jns
rorl
decb
pop
lock
insb
gs
xchg
and
adc
icebp
jp
mov
imul
test
jmp
gs
daa
cmp
mov
mov
or
cmpsb
repz
int3
mov
add
add
int
mov
and
adc
mov
cwtl
rol
pop
or
incl
and
mov
jmp
pop
in
loope
rol
adc
stos
inc
insl
jno
rolb
jl
decl
push
insb
sub
and
les
sub
adc
pop
cmpsb
adc
repz
jbe
pop
jb
mov
loopne
dec
add
pop
mov
sbb
push
rorl
dec
or
push
fsubrs
adc
jecxz
jecxz
icebp
fldenv
mov
leave
xchg
push
dec
pop
pop
add
ljmp
cld
jo
sahf
dec
mov
add
addr16
mov
mov
sbb
dec
push
sub
push
push
mov
pop
add
into
jo
fcomp
cli
sub
divl
leave
mov
test
add
dec
mov
cmp
lret
cmp
mov
outsb
adc
jp
insb
out
pop
mov
cmc
clc
ja
aam
mov
insb
cmpsl
lret
mov
sub
add
push
dec
rclb
adc
mov
cld
push
test
mov
pop
mov
out
lahf
imul
mov
pop
addr16
mov
out
fimull
sub
fldt
in
arpl
ret
movsl
xor
call
insb
and
inc
push
push
testl
clc
sbb
pop
fs
arpl
pop
in
jge
adc
xchg
sbb
jmp
stos
sti
xor
imul
and
fxch
mov
push
js
setno
daa
jo
scas
ljmp
mov
into
rol
sbb
shlb
into
lcall
pop
cmp
mov
sbb
fwait
jno
dec
ljmp
pop
sar
inc
out
push
sbb
cli
inc
dec
cmp
leave
je
sti
movsb
fistl
xchg
jmp
imul
xchg
fmull
push
test
in
cmp
out
sbb
outsb
push
test
push
roll
jle
and
sahf
inc
repnz
pop
aas
test
in
dec
xor
cmp
ljmp
sub
aad
iret
lret
lock
pop
push
in
ret
add
push
sbb
mov
test
shrb
xor
fs
cmp
aas
bound
xor
xor
fwait
sub
mov
fwait
jae
sbb
daa
or
popf
or
jp
fsubrs
incl
repz
aad
xorb
xlat
mov
sbb
adc
pop
jmp
mov
mov
adc
push
cmpsb
mov
xorl
push
mov
xor
insl
xor
loop
stos
imul
inc
out
testl
in
jmp
xchg
cmp
notl
dec
out
xchg
mov
repnz
lahf
jbe
inc
cmp
int3
test
xchg
js
js
ret
jno
pop
and
lock
dec
sti
adc
push
sbb
mov
negb
jl
ret
push
out
popf
mov
adc
push
js
ret
jb
or
fsubl
push
jbe
dec
mov
rcll
cmp
out
cmp
sub
adc
out
int
ljmp
pop
mov
cmp
imul
and
je
cmp
xor
in
aaa
stos
adc
in
dec
dec
loope
notl
shrb
fdivr
int
inc
icebp
icebp
mov
in
movsb
sub
sub
in
sti
cmp
aad
or
div
ljmp
jns
add
and
jae
rclb
pop
lcall
adc
out
in
dec
push
dec
jle
arpl
pop
push
mov
repz
aam
mov
xor
push
shrl
jle
stc
xchg
mov
bts
fildll
sub
loop
mov
daa
ljmp
cmpsb
and
cltd
mov
aas
push
adcl
orl
jno
add
popf
lea
repz
adc
and
rcll
sbb
es
push
mov
lret
pop
dec
xor
sbb
mov
mov
sbb
stc
xchg
in
iret
js
cmpsl
push
inc
out
clc
push
fs
xchg
js
sbbl
mov
xor
xchg
dec
test
je
add
pop
adc
flds
mov
shrb
xchg
cmp
mov
jnp
cwtl
inc
add
or
jg
push
sti
fidivrl
daa
out
mov
cmc
popl
lahf
mov
jecxz
lock
sbb
cmc
ljmp
out
sbb
pop
mov
outsb
inc
xor
std
repz
jae
inc
fistpl
daa
push
in
xchg
adc
ja
cmp
fucom
dec
cmc
push
loope
push
push
lret
aas
shll
or
inc
jle
jns
dec
daa
sbb
in
and
test
sarb
andb
lea
jae
mov
inc
subl
adc
gs
jp
shlb
jge
pop
divb
sub
subb
adc
mov
ds
ss
add
loope
je
mov
shl
stos
jmp
cmp
jns
rol
ret
ljmp
inc
sub
int3
sub
addr16
hlt
mov
mov
sbb
adc
hlt
sub
xlat
inc
push
and
xchg
add
mov
pop
addr16
outsl
and
in
mov
cmp
mov
popa
mov
shlb
and
fistpll
xchg
pop
in
scas
fdivrl
outsb
dec
inc
cmp
sbb
cwtl
ja
add
fstl
cwtl
pushf
mov
mov
dec
inc
mov
mov
and
cltd
mov
push
pop
dec
lds
xor
adc
and
popa
jmp
lea
in
fwait
daa
mull
jl
cmc
cmp
insl
xchg
out
js
aad
insb
stc
mov
mov
lods
outsb
xchg
adc
or
xchg
lods
scas
movsb
xchg
sub
pop
subl
sbb
mov
rcl
pusha
xchg
mov
xor
add
mov
jp
inc
inc
or
loope
push
dec
adc
or
mov
jmp
int
fsubrl
pop
stos
lret
pop
adc
insl
dec
and
cs
jae
mov
push
pop
push
add
push
add
fstl
adc
push
imul
and
cmc
pop
pop
mov
sub
daa
les
jecxz
insl
dec
mov
insl
cmpsl
test
bound
fstpt
out
js
insl
das
or
iret
pop
daa
idivl
cmp
sub
jmp
popf
cltd
cmp
cmp
push
add
mov
adc
mov
sbb
mov
cmp
sub
xchg
fimull
outsl
sbb
cltd
js
pop
jnp
jl
and
decb
adc
or
enter
mov
sbb
mov
inc
shl
mov
ljmp
or
mov
mull
sub
xchg
imulb
jmp
shll
stos
sbb
scas
and
xchg
inc
leave
pop
leave
mov
mov
pusha
stc
mov
inc
mov
fadd
inc
enter
push
pop
popa
sbb
push
mov
shl
fldt
in
jge
lea
hlt
mov
scas
out
popa
outsl
and
orl
sti
mov
enter
mov
mov
loopne
mov
inc
xchg
mov
gs
lret
jnp
test
bound
into
inc
or
xchg
pop
cmc
xor
jmp
jmp
lock
jg
and
inc
aaa
std
and
xchg
nop
leave
daa
mov
pop
add
and
cmp
adc
pop
std
cmp
xlat
in
mov
loope
shll
xor
stc
jl
sbb
pop
mov
fucomp
in
push
xlat
cmc
cmp
mov
jl
in
add
sbb
or
jmp
sub
sub
ss
mov
imul
inc
lea
cmp
fdivrs
fs
enter
out
add
push
add
cmovl
inc
mov
daa
addb
and
fbld
pusha
cmp
xchg
call
icebp
push
sub
mov
loopne
arpl
cmp
lret
add
shrl
out
pop
inc
pop
jns
orb
dec
daa
jmp
in
add
xor
rcr
dec
or
dec
lods
or
push
sarb
mov
pop
pop
xchg
arpl
sub
ror
dec
ja
xchg
jb
mov
jno
in
sub
cmp
aas
fcomp
push
mov
push
push
sahf
push
in
jg
or
mov
es
add
xchg
push
icebp
out
fiadds
and
jge
pushf
jae
pop
jp
and
sub
xor
nop
movsb
hlt
out
dec
ja
fistpll
jae
pop
negl
sub
push
inc
test
out
movsl
push
hlt
or
cmp
fsts
testb
inc
lock
xchg
jge
lret
jbe
jge
sub
aaa
out
xlat
push
andb
stos
mov
dec
mov
stos
repz
mov
add
out
jne
sub
loop
or
ja
faddl
mov
pop
mov
xorl
pop
imul
adc
inc
xchg
rol
xchg
out
int3
cmp
mov
and
mov
leave
sbb
push
pop
das
pop
and
cmp
stos
push
sbbb
mov
insb
and
ja
rcrl
dec
ljmp
aas
jle
push
jo
pop
incl
loop
iret
jecxz
adc
addb
mov
iret
ljmp
lock
popa
hlt
inc
xchg
mov
xor
je
insl
fnsave
sub
and
dec
push
and
or
xor
fistps
xchg
jae
adc
fistpll
inc
hlt
aaa
dec
jge
cmp
push
xchg
xor
in
push
push
add
aam
jmp
out
pusha
and
int3
ljmp
lds
je
xchg
mov
shlb
iret
in
stos
fcoms
or
dec
pop
sbb
pushl
add
push
fstpt
clc
adc
in
scas
mov
roll
dec
aad
pop
cwtl
cmp
push
adc
push
cltd
inc
pop
add
vmread
xchg
sbb
mov
cmp
mov
adc
add
push
bound
fs
dec
insl
clc
subl
sbb
mov
cmp
push
mov
fidivrs
jmp
cmova
test
mov
sbb
xchg
stc
lods
cmc
jbe
stos
push
jne
xchg
dec
pop
jno
dec
sub
fimuls
divb
add
push
lret
faddp
mov
xchg
inc
xchg
jmp
sub
push
push
cmc
xor
sub
xchg
hlt
inc
in
or
outsl
adcb
pop
cmpsb
inc
outsb
cmp
shl
jo
push
or
push
mov
sbb
popa
insl
pop
sbb
test
mov
and
cmc
inc
fistpll
bound
filds
sbb
pop
ds
mov
loop
jns
pop
ljmp
popa
sub
cwtl
mov
jecxz
call
mov
movb
mov
add
pop
adc
or
lds
cmp
xorl
cli
hlt
ficoml
xchg
sbb
add
imul
sub
leave
cmc
je
or
lods
dec
cmp
mov
sub
or
fwait
mov
mov
loope
out
xchg
mov
sub
or
push
fldcw
cld
hlt
push
movsb
and
hlt
pop
outsb
pop
in
jae
adc
lods
pop
mov
jecxz
add
jns
cli
loop
push
insl
movsl
xor
mov
dec
xchg
xchg
adc
imul
mov
test
jb
push
mov
cmc
imul
shlb
mov
mov
push
in
jno
gs
jb
inc
and
fiadds
out
loopne
inc
push
test
imul
mov
xchg
in
cmc
cmpsb
mov
mov
fisttpll
test
cmp
lds
push
mov
add
mov
popa
movsl
add
les
lret
xchg
pop
addl
cld
mov
fbstp
pavgb
mov
mov
cmpsl
jmp
dec
push
jnp
add
ljmp
pop
sub
inc
lahf
mov
enter
push
mov
xchg
imul
pop
test
in
cld
test
adc
cld
mov
iret
sub
pop
dec
sub
and
movsl
xor
clc
jmp
xchg
dec
jnp
out
nop
pop
lret
dec
arpl
pop
xorb
and
mov
add
push
pop
movsl
loopne
jnp
mov
icebp
ret
cmc
fcmovne
or
mov
and
in
mov
movl
push
xor
test
add
inc
cmp
adc
pop
lret
mov
sbb
add
cld
jecxz
dec
es
adc
out
inc
lret
rcl
cmpsl
notl
pop
popf
pop
jns
mov
or
mov
push
mov
popf
popa
xlat
shrb
mov
push
scas
add
jecxz
pop
sbb
sub
repz
cld
xor
notb
push
mov
jmp
or
shll
dec
mov
roll
xlat
cmpsl
xor
xor
movsl
call
test
int
mul
mov
adc
or
ds
aad
mov
rcrl
neg
adc
loopne
mov
xchg
or
in
push
cltd
aas
dec
test
sarl
lret
pop
pop
pop
mov
mov
jbe
in
out
daa
cmp
sbb
jb
mov
in
mov
fdivrp
ret
aam
jmp
jmp
and
enter
aas
notb
cwtl
xchg
test
fisttpl
mov
ret
stc
jnp
sub
or
adc
fwait
or
call
dec
xor
imul
mov
rcrl
inc
enter
dec
in
movsl
insb
mov
push
lea
cmp
push
mov
xchg
dec
lcall
leave
gs
addr16
cmp
jl
push
fadd
popf
add
push
mov
ljmp
in
jbe
cwtl
and
mov
imul
sbb
loopne
lds
pusha
sbb
jmp
lods
xor
lods
pusha
push
repz
adcl
fwait
push
mov
inc
outsl
mov
je
add
lods
push
test
jp
sbb
cwtl
inc
outsb
mov
rcll
adc
stc
std
add
inc
push
mov
sbb
jl
aad
xor
out
and
stos
shrb
pop
add
dec
mov
loop
je
or
pop
test
hlt
mov
es
popf
jno
sbb
sbb
dec
leave
jge
stos
add
out
movsb
or
push
not
enter
pop
shlb
mov
loope
or
scas
frstor
sub
jge
fidivs
and
adc
inc
adcb
pop
test
stos
sahf
sbb
jl
int3
out
cltd
or
inc
xchg
je
movsb
pop
jmp
dec
fcomip
mov
aad
mov
outsb
enter
scas
add
pop
jl
push
inc
dec
ds
fcompl
or
int
xor
jno
jbe
lods
pop
shlb
inc
mulb
mov
push
hlt
loop
mov
xchg
into
rclb
fistpl
addr16
imul
push
data16
mov
pusha
andl
lds
lret
in
popf
sbb
cmp
mov
lds
or
dec
jne
lds
lahf
xchg
or
sbb
lcall
pop
ret
adc
cmp
aad
push
xchg
divb
scas
scas
daa
mov
imul
test
enter
jg
in
adc
sbb
sbb
pop
repnz
pop
xchg
imul
leave
add
je
mov
ret
and
test
sub
push
addb
add
inc
fists
mov
mov
cli
mov
testb
call
add
orl
ret
aad
cltd
inc
popf
testl
or
out
mov
je
addr16
pop
mov
shrb
push
dec
insl
nop
adc
xor
fidivrl
lcall
cmpsb
pop
js
sub
das
cmpsl
mov
mov
mov
jge
out
sbb
je
mov
scas
jno
rolb
in
xchg
push
stos
push
jne
xchg
ret
in
pop
iret
mov
adc
in
and
shll
pop
mov
push
mov
fisubrl
jbe
sarb
mov
lret
aas
in
sub
adc
out
scas
add
addr16
lahf
adc
rep
je
loop
inc
mov
adcb
je
push
sahf
dec
loop
xor
fisubl
out
test
dec
adc
movsl
sbb
std
adc
imul
bound
inc
inc
dec
pop
mov
jl
sub
sbb
and
sti
push
add
mov
bound
sub
test
xchg
mov
dec
sbb
fcmovne
inc
das
mov
fsts
aas
adc
insb
add
adc
cmp
fcmovnbe
shll
xor
mov
push
xchg
cmpsb
pop
dec
jbe
mov
add
inc
or
rclb
sbb
andl
call
out
mov
fsubrl
loope
pop
aad
mov
ss
or
inc
cmpsl
xchg
icebp
movsl
or
inc
rclb
rol
shrl
ret
rolb
clc
jns
cmp
sti
popf
inc
inc
and
and
xchg
sbb
pop
push
mov
aad
mov
lcall
imul
push
mov
xor
pushf
mov
dec
cld
ds
adc
push
jns
out
loop
push
cmp
movsl
data16
adc
fnstenv
cmp
dec
popa
dec
loop
fildll
lock
mov
lret
fidivrs
pop
inc
icebp
sbb
imul
inc
and
adc
inc
or
cmpsb
cmp
iret
push
filds
repnz
int3
mov
mov
lcall
inc
icebp
xchg
icebp
cwtl
rcr
repz
dec
aaa
mov
mov
add
and
dec
or
insb
cld
lods
dec
adc
loopne
bound
bound
setle
dec
mov
das
and
inc
push
sub
mov
cld
sub
addr16
popa
mov
fsubl
push
lock
cmp
add
out
xchg
rol
or
mov
cmp
inc
cld
imul
iret
popf
in
fsubs
pop
rcr
mov
es
dec
mov
push
bound
xchg
fsubl
pushf
sub
jnp
leave
pop
dec
push
xchg
add
jbe
in
push
adc
cmpsb
cs
or
or
ds
xchg
and
push
lds
rclb
aad
xor
aad
imull
outsb
cmp
shl
daa
nop
fimull
mov
adc
xor
outsl
mov
es
hlt
pop
push
ret
pop
imul
jnp
rorl
loop
sub
mov
int3
jmp
out
ljmp
mov
and
mov
jnp
xchg
pop
add
shr
adc
dec
or
out
arpl
lods
sub
mov
stc
out
notl
xchg
es
loopne
mov
mov
out
xchg
icebp
push
sbb
mov
jp
int
daa
repnz
jo
outsb
in
sbb
lcall
cmp
add
jg
cwtl
dec
mov
xchg
cmp
mov
xchg
inc
shr
test
pop
push
mov
mov
xchg
lret
jmp
mov
mov
fadds
lret
inc
add
sbb
adc
clc
xor
rclb
xor
mov
fistps
pushf
ret
or
adc
mov
mov
sbb
sbb
add
scas
fidivl
hlt
leave
out
loopne
and
sbb
or
mov
dec
lret
gs
shr
pop
je
sub
testb
xchg
lods
cmp
icebp
add
xchg
pop
fcoml
and
ss
mov
adc
popa
addr16
adc
push
cmovb
mov
jmp
inc
sub
out
mov
dec
hlt
xchg
stos
fidivs
aam
mov
xchg
mov
dec
lret
xor
xchg
or
pop
pop
jno
bound
dec
pop
adc
cmp
or
push
stos
or
aam
or
ss
inc
mov
inc
aas
or
inc
cmc
cli
arpl
call
sub
add
out
rcrb
icebp
test
mov
daa
xchg
xor
or
fisubs
cld
sbb
pop
cmp
cmc
dec
jno
faddl
and
lea
dec
icebp
dec
jle
movsl
cmp
loopne
jns
mov
mov
xchg
hlt
and
inc
cld
and
imul
cmp
mov
outsb
test
rol
shll
push
hlt
cwtl
or
jg
arpl
mov
shr
sub
xchg
imul
bound
mov
push
dec
rclb
pop
sub
movsb
or
pop
xor
sub
xchg
mov
add
out
add
add
idivb
lds
pop
xor
push
push
sub
les
out
loopne
aad
lds
js
mov
pop
data16
out
dec
cmc
shrb
xlat
movl
cmp
mov
dec
mov
inc
mov
cmp
adcl
ret
sbb
adcb
lahf
mov
fwait
mov
inc
adc
outsl
dec
sti
inc
int
lods
ss
fld
sbb
inc
popa
jl
icebp
dec
xchg
or
test
stc
adcb
sub
or
mov
adc
aad
jp
jecxz
stc
neg
or
xchg
test
mov
pop
scas
loop
cmp
shrl
and
mov
movsl
outsl
bound
pop
std
pop
mov
dec
gs
std
pop
lds
xor
push
mov
xchg
jmp
sub
push
fcmovnu
shlb
or
push
pop
push
inc
repz
lods
push
and
mov
in
pop
xor
mov
enter
pop
nop
pop
mov
lods
mov
lds
jo
les
sbb
lret
std
pop
xchg
decl
testb
cs
pusha
push
in
insb
lds
and
or
mov
movsb
dec
ljmp
and
cmp
inc
push
jns
daa
sete
inc
xor
cmpl
mov
mov
int3
pop
jbe
fdiv
decb
mov
ss
jns
mov
cmc
pop
push
xchg
xor
shl
lods
adc
clc
xor
and
dec
scas
add
mov
aas
mov
or
int3
lds
mov
xor
push
xor
cmp
inc
div
lea
jbe
pushf
out
cmp
adc
xor
in
jno
je
or
add
xchg
inc
mov
fwait
mov
pop
mov
movsb
shr
fs
pop
push
mov
lret
dec
incl
mov
cli
filds
pop
sbb
inc
movl
mov
push
out
lock
lea
testl
out
rcll
pop
sbb
lods
cmp
negb
push
test
push
aaa
xchg
test
mov
sbb
jmp
xchg
cmp
cmp
inc
test
xor
or
sub
push
fistps
sbb
shll
lcall
xchg
cmpsl
dec
dec
addb
push
sbb
pop
xchg
or
lret
js
jl
pop
scas
call
insl
addb
je
sbb
fnstsw
xchg
jb
or
push
cmpsl
mull
pop
mov
sbb
cmp
lods
hlt
xlat
ds
add
or
jl
sub
mov
and
mov
xor
push
dec
arpl
mov
ficomps
loopne
inc
or
pop
jne
xchg
imul
lret
add
test
sbb
in
repz
mov
sbb
mov
clc
dec
mov
out
dec
xchg
dec
popa
xor
ret
push
std
sub
mov
or
add
int3
or
in
xorb
in
jb
ss
int3
in
inc
andl
jnp
into
cmp
jns
mov
jo
loopne
std
mov
ret
lds
stos
or
into
jle
pop
cmpsl
dec
or
movsl
and
ljmp
xor
inc
inc
cmpsb
stos
js
mov
push
andb
sub
dec
aam
dec
and
cmc
into
popf
das
int
lcall
sarl
xor
jg
test
hlt
mov
out
mov
mov
aam
cmpsl
aad
push
mov
push
sbb
fcoml
mov
je
sub
xchg
sub
ja
add
loope
cmp
inc
xchg
arpl
daa
mov
repnz
repz
ret
inc
aad
frstor
sub
addl
hlt
gs
stos
adc
jo
sar
lods
and
and
pop
lds
and
or
jecxz
into
shl
jp
push
push
inc
sub
sbbb
cld
dec
std
xchg
stos
mov
ss
jl
mov
mov
imul
pop
dec
mov
addl
out
push
xchg
bound
cwtl
cli
push
adc
out
sub
popf
add
mov
loope
dec
aaa
cmp
adc
lods
add
mov
mov
xor
repz
adc
sub
divl
test
loopne
repnz
push
les
adc
add
dec
lea
push
jae
leave
fisubs
cli
ss
nop
inc
mov
int
push
aaa
cmp
jmp
inc
push
icebp
mov
fcmovnbe
or
sub
cmp
in
sbb
lcall
ror
mov
cmp
sub
push
mov
jbe
lods
push
daa
xchg
stos
in
mov
mov
stos
xchg
arpl
adc
xchg
or
movsl
adc
ficoml
cmp
sbb
mov
add
push
and
mov
sub
dec
pop
add
xor
pop
int3
cli
push
mov
or
xchg
mov
push
xor
jp
cmp
fstpl
negl
dec
repz
js
fs
scas
add
pop
sub
sahf
and
cmpsb
and
xor
mov
jno
sbb
sahf
loopne
inc
xchg
fists
sub
dec
mov
push
lahf
inc
sahf
stc
in
ja
and
fldt
adc
clc
rclb
aaa
mov
or
jp
xchg
xchg
shlb
pop
push
push
and
sub
aad
and
stos
cmpsl
shr
fldcw
out
xorl
mov
jae
push
xchg
inc
dec
and
ror
insb
std
add
fdivp
adc
fmulp
out
gs
pop
and
fs
push
dec
lahf
scas
rclb
pop
cmp
mov
insl
andb
cld
jbe
mov
mov
hlt
pop
iret
rcll
jns
into
mov
jl
xchg
xchg
cs
xor
fidivs
out
and
cmp
sub
pusha
xchg
popf
and
adc
push
scas
jno
jp
icebp
fdivl
clc
fistps
outsl
push
adc
sbb
pop
ja
adc
out
fists
xchg
das
jo
imul
hlt
aas
sbb
lds
and
scas
add
or
inc
stos
pop
jle
pop
in
sub
icebp
mov
imul
mov
int3
push
out
fs
insl
mov
dec
fbld
repz
adc
test
pop
pop
jne
rorb
add
js
je
mov
push
pushf
push
pusha
call
add
addb
stos
jmp
mov
ds
inc
mov
mov
jbe
jmp
cmpsl
cmc
sbb
aam
dec
test
xor
jno
mov
mov
pop
pop
sbb
cmp
mov
cmpsb
adc
jnp
test
in
mov
pop
xchg
pavgb
pusha
jge
mov
cmp
mov
push
sub
int3
repnz
fnstcw
adc
lret
aam
inc
ret
sarb
pushf
cmc
cs
cmp
pop
fisttps
mov
push
lahf
mov
sub
test
push
dec
and
lcall
dec
lock
call
xchg
dec
xchg
lods
mov
xchg
das
dec
cmpsb
in
loop
sbb
mov
jg
in
sbb
out
push
inc
andl
rclb
mov
xchg
testb
fildll
sub
pop
pop
test
out
cmpsl
push
jge
pop
lods
push
sbb
ljmp
push
int
cmp
or
push
rolb
mov
ret
adc
out
clc
lret
cmp
pushf
dec
adc
pusha
cmp
cmp
mov
sub
xchg
pop
rcll
int
sub
mov
cmp
xchg
push
inc
cmp
mov
push
lea
das
add
push
xor
fidivrl
les
sbb
adc
dec
ljmp
shlb
fucomi
roll
gs
xor
nop
ficoml
stos
std
mov
mov
mov
jg
pop
mov
xor
mov
push
sbb
loop
rcrb
iretw
push
adc
and
fidivl
sbb
adc
jmp
addb
pop
fwait
pop
sarl
stos
int3
and
pop
mov
rcrl
push
stos
in
sti
sbb
mov
mov
mov
sbb
in
aad
sbbl
adc
in
leave
jp
jl
cli
cmp
out
and
lock
inc
stos
mov
je
add
test
jo
ror
outsl
sub
mov
hlt
test
dec
cmc
inc
add
add
aam
pop
insl
cmp
bound
daa
jmp
jnp
shlb
add
xor
jge
loopne
xchg
ret
add
and
and
push
mov
lods
cld
sub
movsb
in
js
pop
pop
jb
push
mov
pop
mov
jae
mov
dec
ficomps
test
cmc
ror
sub
in
mov
push
addr16
rclb
push
mov
xchg
cmp
add
push
xor
cli
cwtl
or
mov
jo
test
adc
push
repz
sub
push
mov
xor
iret
fildll
jge
in
roll
or
cltd
lcall
jne
push
aas
popf
jl
dec
scas
inc
out
pop
or
movsb
aaa
cwtl
cmp
pop
fs
or
negb
push
aad
xor
in
push
mov
add
cmp
das
cwtl
or
inc
push
xor
je
orb
imull
jmp
cmp
repz
out
jo
out
jp
test
inc
push
iret
mov
sbb
mov
in
les
lahf
xchg
adc
dec
fucomi
ljmp
insb
and
fidivrl
cmp
adc
lds
push
pop
sar
cmp
in
push
xchg
je
notb
xchg
xor
cli
and
xor
test
sbb
push
lea
sbb
sbb
inc
inc
popa
insl
pop
pushf
loop
xchg
cmp
or
pop
adc
pop
cs
pop
pop
mov
mov
sub
push
je
rolb
jmp
sub
mov
push
inc
and
adc
adc
xchg
or
push
jmp
fucomip
sar
and
jbe
rorb
out
jg
int3
imull
test
xchg
mov
lock
popa
jge
or
mov
adc
scas
rol
sub
xor
fildll
cmc
icebp
bnd
add
dec
ljmp
les
push
addl
rcrb
sub
and
push
cmp
jl
inc
mov
sar
adc
addr16
movsl
cmp
jp
mov
pop
inc
cltd
cmp
push
imul
lds
jbe
into
mov
lahf
pop
std
lods
pusha
adc
push
sub
xchg
mov
and
pop
and
pop
movsb
jae
xlat
pop
lret
xlat
push
lahf
clc
out
sub
fbstp
daa
adc
pop
xchg
or
lds
cmp
out
xor
xchg
and
loope
frstor
rcll
in
enter
ds
fnstenv
jns
jmp
enter
cmp
mov
xchg
or
cmc
push
cmp
popa
sub
adc
lods
push
lods
fnstsw
imul
imul
cmp
stos
cmp
add
mov
mov
in
sbb
xor
and
mov
je
and
push
jne
adc
pusha
scas
xchg
or
clc
adc
add
sub
push
sub
push
mov
cwtl
xchg
mov
clc
or
adc
idivl
insl
pop
jmp
pop
or
pop
shll
mov
jbe
push
fisttps
jne
xchg
adc
rcrb
xchg
ret
dec
push
mov
sub
push
add
mov
mov
mov
roll
fwait
ss
subl
sub
inc
sti
hlt
pusha
push
stc
jle
inc
or
adc
pop
cmp
jecxz
pusha
xor
lcall
in
incl
int3
mov
pop
mov
and
push
outsl
mov
cmp
in
lods
push
dec
xchg
and
insb
sarb
xor
or
and
and
loop
sub
xor
xchg
mov
mov
mov
add
and
gs
jbe
popf
lahf
mov
mul
xor
decl
mov
sbb
imul
jg
cmp
or
pop
push
sar
outsl
mov
mov
pmulhw
imul
aam
icebp
repnz
mov
mov
mov
inc
outsb
mov
pop
and
popa
xor
mov
mov
add
adc
ret
dec
das
int3
out
jle
adc
fdivrl
lret
call
subl
add
out
mov
xchg
out
int3
andb
sub
mov
xor
insl
adc
adc
testb
leave
add
pushf
cmp
orb
test
rorl
and
sbb
or
decl
clc
orb
cli
push
mov
push
mov
pop
jecxz
xchg
adc
jmp
pop
sarb
cmpsl
sti
repnz
mov
ds
sub
cmp
mov
pushf
jp
push
in
xlat
sub
scas
idivl
jl
rorl
enter
fstl
ljmp
inc
cmp
xchg
inc
aaa
gs
int3
add
test
adc
dec
pop
out
shll
pop
ds
orb
arpl
sbb
jle
lcall
pop
add
fistpll
xchg
or
xchg
inc
mov
std
cmpsb
pop
mov
addl
or
sbb
xchg
xor
lock
or
mov
fmull
cwtl
insl
xor
dec
jb
mov
scas
sbb
adc
push
movsb
sbb
and
add
push
jle
les
xor
pop
es
cs
jae
and
cmpsl
cwtl
lcall
push
icebp
cld
push
lds
imul
mov
pop
mov
cwtl
imul
xchg
xchg
test
into
inc
jno
sub
ret
cmp
int
in
loope
test
pmaxsw
iret
hlt
lock
cmc
adc
or
jle
adc
sbb
addr16
push
mov
iret
lcall
xchg
mov
and
incb
out
sbb
adc
lods
mov
mov
xchg
mov
icebp
mov
jb
imul
data16
jecxz
iret
out
out
jo
or
pop
nop
ret
mov
push
leave
mov
ficomps
jb
pop
int3
ds
mov
out
roll
sti
push
and
jbe
lds
stc
push
sub
fdivl
mov
xchg
pop
push
jns
sbb
mov
jge
inc
lods
cmp
ljmp
test
insb
js
push
gs
mov
mov
imul
push
pop
lahf
shrb
lret
sbb
adc
imul
and
in
push
leave
and
lods
xchg
lret
mov
pop
out
stos
mov
js
lahf
lret
sti
insl
xor
jmp
sahf
test
add
rorb
movsl
fs
les
loope
ret
push
neg
push
dec
sbb
sub
mov
pusha
fidivs
xor
nop
inc
inc
cmp
mov
inc
dec
pushf
loopne
lods
sbb
bound
xchg
bndstx
sub
mov
aam
lea
inc
inc
mov
push
jno
iret
ret
testl
mov
sub
and
or
scas
repnz
mov
inc
sub
movsl
jns
jmp
jnp
mov
sbb
mov
fstpt
and
lods
adc
mov
out
xchg
or
mov
hlt
arpl
arpl
cmp
sahf
stc
ds
mov
sub
mov
or
ljmp
outsl
pop
ja
mov
and
dec
adc
outsl
jb
les
adc
sub
sub
xor
mov
dec
nop
mov
call
lea
push
cmpb
das
mov
cltd
dec
sub
test
ss
mov
mov
cmp
js
ret
inc
inc
xchg
nop
xchg
aam
mov
ret
adc
cmpsb
aad
lret
fadds
popa
push
jecxz
jp
jns
lds
test
mov
xor
push
jns
repz
inc
sub
outsl
adc
loop
mov
shlb
push
cwtl
or
jno
and
or
mov
je
pop
rol
mov
or
pusha
aas
aas
das
pop
lret
aas
imul
lea
mov
into
push
xor
loop
jp
mov
jo
lock
and
dec
pop
mov
mov
fstpl
ljmp
sti
dec
mov
push
push
or
es
fst
ss
mov
lret
mov
mov
lock
xor
fistl
das
fmuls
test
push
sbbb
push
xchg
fnsave
cmp
out
dec
stos
lret
mov
lahf
mov
xor
sbb
sbb
mov
dec
and
xor
sub
nop
popa
pop
sub
daa
daa
lcall
sub
adc
popf
outsb
arpl
sub
repnz
xor
sub
push
scas
les
insb
cmp
add
push
lret
sbb
mov
outsb
add
mov
mov
xor
outsb
pop
je
addr16
mov
or
mov
and
cwtl
nop
mov
stc
out
lds
cltd
pop
jnp
mov
bnd
cmpsb
inc
addl
mov
mov
sub
adc
outsl
or
ja
fbld
push
lds
pop
rolb
pushf
mov
push
push
stos
daa
mov
cmp
xchg
sub
mov
push
shlb
ja
sub
test
sahf
daa
dec
fstpt
in
sbb
fwait
mov
push
push
shl
fiaddl
es
adc
cs
cli
mov
std
pop
xor
outsb
lret
push
ljmp
adc
dec
mov
pop
gs
lret
aas
and
js
inc
sub
mov
insl
cmp
cmpsl
cmp
int3
push
mov
fbstp
shl
cmp
adc
lcall
cmpsb
mov
outsb
or
add
jp
inc
add
push
push
inc
pop
dec
sbb
pusha
mov
sub
ljmp
add
or
and
movsl
sbb
dec
jbe
add
lea
cmp
lds
repnz
stos
loope
add
movsb
fs
jmp
stos
sbb
fs
andb
cltd
mov
pushf
sub
jg
xchg
mov
call
repnz
mov
lahf
dec
add
sub
mov
in
daa
jnp
adc
dec
addl
pop
sti
cmp
add
idivl
push
mov
iret
add
and
movsl
popf
mov
pop
adc
repz
xor
xchg
ja
movsl
cmp
cmc
cmp
mov
and
xchg
bound
inc
push
out
adc
lahf
pop
popf
mov
ret
int3
jae
push
cmpsl
adc
dec
inc
jl
or
dec
adc
xor
mov
in
push
cs
incl
fidivrs
mov
or
cvtpi2ps
loope
push
add
push
cmp
pop
or
push
dec
pop
insl
sub
mov
ds
or
in
fisttps
test
cmp
jns
movsl
fmull
jne
and
imul
rep
xchg
mov
mov
pusha
rcll
adc
jg
mov
bound
ret
fcoml
sti
leave
cltd
sbb
div
shl
dec
and
shlb
mov
icebp
cmpsb
xor
shrb
data16
xor
sahf
push
js
cmp
add
jp
cmpsb
lds
dec
test
stc
xchg
add
xchg
jnp
sbb
or
test
lahf
bound
scas
popf
enter
push
ret
movsl
inc
dec
addl
inc
rorl
nop
xchg
add
fwait
xchg
xchg
insl
cmp
or
inc
ret
gs
add
std
cld
je
dec
shll
fstpl
mov
add
push
sub
xor
faddp
pop
or
stc
inc
push
xchg
repz
fisubl
rcrl
mov
mov
sti
repnz
and
aas
add
inc
xchg
ss
pop
outsl
lods
out
stos
push
icebp
shr
and
cmp
aaa
dec
mov
mov
cmp
adc
xchg
stos
into
push
mov
cmpsb
in
push
into
fisubrs
shll
loopne
out
nop
jne
pusha
sub
inc
frstor
mov
ljmp
out
or
in
adc
cmp
sbb
daa
mov
fstpt
add
mov
mov
movsb
sbb
sub
jnp
inc
test
xchg
out
dec
ss
js
inc
scas
pop
js
push
cmpsl
ss
data16
adc
mov
aas
dec
arpl
repnz
test
mov
pop
outsl
fdivl
insl
mov
lock
inc
pop
lds
inc
sbb
daa
add
insb
ss
dec
cmp
jno
jae
mov
or
jo
subb
pop
repnz
pop
xorl
add
inc
jg
popa
dec
es
fimuls
lret
aaa
cwtl
mov
push
into
in
xlat
lss
stos
mov
std
loop
sbb
loope
adc
mov
dec
sub
pop
ret
pop
and
mov
push
xor
icebp
sahf
stos
sbb
test
mov
inc
mov
push
loope
nop
mov
hlt
push
adc
mov
lock
pusha
and
or
jae
sarb
out
roll
or
sub
mov
cmp
fldcw
int
fstpl
sbb
leave
cmp
mov
test
inc
inc
jnp
lods
jmp
sahf
fsts
sbb
or
mov
pop
nop
test
adc
xor
lret
adc
movsl
stos
loope
cltd
cli
in
in
lret
mov
rcll
fmuls
loop
pop
loope
cmpsb
push
sub
sbb
test
mov
inc
sbb
je
pop
orb
nop
rorb
std
and
insl
ljmp
mov
cmpsb
mov
push
leave
xor
mov
mov
pop
orb
sub
pop
dec
lahf
aam
je
and
pop
add
add
das
xor
lret
lods
andb
lret
pop
jle
push
inc
andl
enter
mov
mov
repnz
inc
pop
and
mov
xorb
stos
mov
nop
or
or
xor
jae
sub
stos
jnp
mov
pusha
dec
jg
mov
loope
out
fdivs
fwait
dec
cltd
mov
xor
adc
sbb
inc
pop
sub
dec
xor
jmp
xor
push
outsl
cmpsb
ret
jb
inc
in
xorl
test
pminsw
iret
les
mov
mov
cmp
hlt
add
mov
lds
in
ljmp
fcmove
out
or
and
xorb
jnp
test
sbb
adc
xchg
fcomp
mov
test
push
sbb
ss
movsl
bound
push
add
fiaddl
popf
xor
mov
push
nop
cmp
lods
popf
rorb
dec
jmp
adc
sarl
in
pop
es
mov
push
movsl
sbb
lret
xchg
stos
pop
adc
adc
into
stos
adc
sarl
sarl
dec
leave
mov
sbb
aad
mov
sbb
or
or
aad
and
mov
push
xor
add
cmc
movsl
xor
or
or
cmpsl
test
flds
imul
pop
sub
in
icebp
push
arpl
jo
loop
dec
lea
add
fucomi
imul
popa
nop
sub
push
in
cmpb
aas
dec
ss
pop
xchg
cwtl
adc
in
mov
add
int
in
jmp
loope
sti
pop
data16
subl
dec
pop
pop
nop
ja
orl
push
jb
or
inc
loope
lcall
inc
scas
dec
clc
js
sahf
pushf
mov
cmp
jg
pop
cld
and
adc
inc
mov
or
xchg
leave
and
pop
out
mov
or
push
loope
in
mov
mov
dec
gs
or
bound
cmpsl
loopne
push
lret
push
sub
push
aaa
jbe
xor
jge
popf
out
imul
js
cmpsl
jge
inc
punpckhbw
sti
test
outsl
xchg
adc
bnd
shlb
popf
mov
call
push
push
pop
stos
sub
ljmp
leave
push
lods
cmc
mov
cmpb
mov
out
loope
cmpsb
jecxz
inc
jl
rcrl
mov
sub
mov
test
loope
scas
and
jmp
fbstp
pusha
sbb
jne
out
jmp
push
lret
jecxz
andb
push
fdivr
pusha
sub
push
roll
pusha
aaa
pop
adc
cs
mov
ret
cmp
add
sub
push
and
insb
btr
hlt
add
pop
xor
int
or
mov
add
fs
scas
scas
xor
push
dec
or
loope
add
cmpsl
add
scas
pop
ja
sub
jns
xchg
hlt
lahf
sbbl
in
mov
int3
sbb
in
aad
das
sarl
xlat
sarl
inc
pop
mov
popf
jl
xchg
mov
aad
cmpsl
pop
mov
xor
imul
pop
sahf
js
popf
pusha
les
xchg
fiadds
test
shl
jg
mov
and
jp
lods
faddl
out
mov
xor
insl
sbb
subb
sbb
xlat
push
addr16
mov
les
popf
or
adc
pop
mov
xorb
or
addb
mov
dec
call
sbb
mov
mov
add
fstpt
or
rolb
mov
adc
fstps
pop
xchg
dec
dec
dec
cmc
arpl
scas
divb
sub
adc
sub
imul
sub
sbb
xor
rorl
sub
or
inc
inc
cmp
and
jmp
add
rolb
aad
xor
cmpl
ss
pop
das
inc
xchg
jne
sahf
insl
negb
push
inc
and
or
jp
add
in
lock
mov
push
bound
push
or
ljmp
push
inc
int
pop
cmp
pusha
jp
lret
cmpsl
adc
mov
in
call
mov
xchg
iret
add
adc
push
xor
int
mov
mov
rcll
push
add
cmp
ret
or
cmp
cmp
and
pop
xor
mov
push
insb
jnp
bound
sub
in
sub
lahf
inc
add
hlt
sbbl
sub
dec
pop
call
gs
cld
xor
imul
push
aas
stos
into
lods
fucomi
clc
sub
enter
shrl
pop
imul
aad
bound
in
cmp
push
and
loopne
and
notb
pop
mov
arpl
int
mov
inc
test
scas
mov
je
jle
popf
enter
in
mov
inc
push
nop
sbb
fwait
jg
and
call
inc
test
jae
mov
stos
adc
push
mov
mov
pop
add
adc
pop
imul
pushf
in
fdivr
push
or
adc
push
std
pop
scas
dec
test
inc
imulb
popa
orl
mov
dec
lods
mov
ficomps
repnz
popa
lea
inc
cmp
sbb
loopne
dec
aad
pushf
xchg
out
push
xor
mov
hlt
xchg
push
divl
jl
cmp
mov
dec
and
jge
pop
rcll
or
or
cmp
je
push
lret
clc
cltd
clc
outsl
mov
movsb
pop
test
xlat
shl
clc
pop
sbbb
and
in
mov
sbbl
data16
or
xor
xor
cmpsl
lea
or
sbb
add
push
das
int
and
sub
add
bnd
lods
icebp
iret
bswap
mov
loop
push
aam
add
fildl
push
dec
in
rol
add
sti
aam
push
pop
cwtl
inc
adc
jg
hlt
xor
push
xchg
jge
xchg
inc
cmp
or
insb
or
xor
push
lods
xor
repz
mov
lret
mov
lds
push
mov
scas
jle
test
push
push
cwtl
fsts
xchg
nop
daa
movsb
mov
fdivs
mov
hlt
int3
mov
dec
fisubrl
ret
dec
cwtl
cld
and
sub
push
pop
ffree
sub
movsb
std
and
js
mov
cld
ds
rcrb
pop
mov
fiadds
and
or
cmp
jno
out
outsl
mov
mov
nop
into
roll
imul
xor
orb
lds
arpl
mov
sbb
dec
inc
sub
pop
int3
repnz
pop
fisttpl
mov
push
pop
inc
mov
push
int
pop
outsl
ret
dec
xor
fnstenv
mov
cld
mov
push
sub
xor
enter
cmc
clc
pop
mov
push
push
pop
push
mov
iret
dec
ret
subb
test
call
test
jg
or
mov
pop
xchg
add
sub
mov
loope
shlb
lcall
loopw
in
pop
xor
and
rcrb
lret
les
sarb
mov
push
mov
pop
xchg
shll
outsl
inc
fiadds
add
icebp
sub
add
mov
mov
sbb
scas
fstpl
xchg
mov
push
or
pop
mov
fdivr
push
cmp
xchg
sub
sbb
int
mov
stos
or
add
test
mov
outsb
mov
daa
repz
repz
dec
mov
aas
cmp
ret
out
push
ja
arpl
mov
pop
clc
mulb
movsb
add
push
cmpsb
fimuls
int
or
scas
in
xor
ja
popa
aas
mov
xchg
or
int
shlb
pop
fcomip
jb
insb
out
inc
loopne
adc
adc
int3
sub
nop
test
mov
xchg
dec
adc
push
movsl
or
jns
imull
pop
add
push
jno
imul
pop
jge
std
lods
mov
test
jg
xor
movhps
lret
pop
or
jmp
xchg
aam
cmpsl
aas
xchg
es
fwait
lods
jg
mov
sahf
pop
or
adc
jb
gs
sbb
push
jl
xchg
jmp
push
addl
push
xchg
and
pop
push
push
testl
cltd
clc
test
pop
dec
stos
mov
dec
cs
bound
xor
loope
sub
xorl
push
aam
cltd
mov
or
pop
mov
ja
xchg
xor
fs
imul
pop
sub
es
scas
push
in
xlat
hlt
jl
cmpsb
incl
add
dec
std
adc
insl
insb
fstl
pop
push
xchg
push
jg
or
lea
push
fwait
sub
popa
jbe
int3
cmp
xor
pusha
mov
out
push
gs
xchg
insb
bound
jb
pop
mov
lcall
data16
andl
enter
rorb
in
mov
fcompl
nop
pop
xor
cmp
loope
jne
test
test
mov
and
imul
pop
sbb
movsb
push
fcoms
mov
adc
mov
and
int3
xchg
push
daa
hlt
dec
adc
dec
inc
mov
xchg
pop
add
stc
fdivs
jg
pop
in
dec
jle
pusha
sti
roll
pop
mov
adc
insl
lret
dec
mov
aas
out
in
aam
jbe
xchg
negl
fnstsw
jae
jp
in
sahf
push
shl
sub
jecxz
sbb
arpl
xor
jl
in
mov
stc
pop
data16
or
repnz
dec
std
sbb
or
stc
xor
cmpsb
iret
mov
sbb
jne
and
rcll
add
scas
push
js
mov
sbb
push
or
in
out
aas
clc
ljmp
testb
and
and
sahf
aad
dec
out
dec
ja
lret
mov
jl
fsts
pop
stc
ja
dec
dec
and
fs
ret
repnz
sar
cmc
lds
pop
shr
pop
inc
or
pop
cli
sub
dec
add
pop
adc
test
push
jp
or
cmp
add
loop
loope
bound
jge
sbb
lret
push
lods
in
std
scas
daa
mov
adcl
std
out
cmp
mov
stos
ds
cld
push
mov
ficoml
popa
testl
fildl
cmc
jecxz
mov
fs
sbb
jmp
and
jno
sub
pop
in
ja
jo
sbb
dec
xchg
adc
jns
sarb
lret
and
or
mov
aaa
mov
mov
scas
xor
fwait
sub
ror
shll
push
xor
lods
es
xor
pop
pop
cmpsl
mov
and
jp
lret
xor
pop
add
fcoml
push
arpl
cmp
and
dec
lds
mov
popa
push
pushf
scas
xor
mov
ja
pop
xchg
or
insb
push
mov
das
out
xchg
repz
mov
pop
pop
shlb
outsb
and
jmp
xchg
push
iret
xchg
jg
xchg
mov
movsl
int3
hlt
ds
les
scas
fiadds
test
inc
icebp
xchg
add
sub
xor
xchg
push
cmp
add
mov
andb
adc
je
mov
repnz
loope
out
and
mov
rclb
icebp
mov
sbb
movsb
nop
fisubrl
sarb
scas
ljmp
outsb
mov
or
in
ds
mov
loope
mov
fwait
out
inc
xchg
js
loop
pop
and
push
sbb
gs
pop
xorl
out
and
outsb
dec
inc
push
add
or
out
fstpl
mov
lahf
loopne
cs
jne
adc
fwait
insb
lods
pop
and
push
jne
idivl
dec
push
hlt
stc
addr16
popf
jo
push
or
rorb
cmpsl
dec
mov
or
imul
pusha
lret
dec
in
test
xchg
loop
outsl
xchg
gs
adc
sahf
push
pop
dec
dec
and
xchg
int3
loope
ficoml
adc
mov
clc
pop
cmp
pop
jae
sub
adc
dec
jp
add
adc
mov
fdiv
push
pop
cli
jno
xchg
dec
or
divb
rep
mov
xchg
cmpsl
int
jmp
insb
mov
push
pop
test
stc
popf
rcl
es
mov
nopl
pop
cltd
scas
rolb
jns
and
add
push
outsb
inc
mov
xchg
or
pop
sub
lret
jle
lea
push
cmp
mov
nop
pop
ss
jle
cmp
sub
out
das
in
inc
iret
popf
imul
or
sbb
fwait
andl
xor
xchg
pop
mov
mov
loope
ljmp
sbb
sti
enter
cmp
sbb
add
cltd
lret
pop
repnz
mov
inc
arpl
hlt
add
mov
cmp
mov
fisubs
cwtl
dec
in
add
cmpsl
mov
mov
xchg
imul
mov
lahf
mov
or
rol
cwtl
cmp
fistpl
bound
sbb
cwtl
imul
mov
in
push
mov
inc
add
jo
in
out
adc
scas
pop
sbb
into
add
xchg
cmp
lods
mov
incb
fistps
lods
stos
mov
or
adc
lods
jg
test
aam
ljmp
cli
ljmp
lret
movsb
dec
rcl
add
mov
add
movsl
loop
aas
cmpsl
mov
cs
inc
adc
in
sahf
loope
push
mov
into
mov
jle
outsb
into
jg
jmp
jno
mov
inc
add
scas
xor
lcall
jmp
je
add
add
ss
mov
lea
xor
sub
outsl
pop
or
les
xchg
and
mov
xchg
bound
pop
cmp
sar
pop
jle
sub
in
imul
xchg
ds
imul
push
out
and
pop
jbe
ret
jle
mov
pop
test
xchg
xor
and
lods
cli
adcb
mov
push
hlt
jl
cmp
inc
jl
idivb
das
push
fsubrs
cs
xchg
xchg
repz
dec
pop
adc
test
sti
jae
stos
mov
jns
lcall
add
jb
les
stos
xchg
scas
scas
pop
and
ficoml
das
pusha
xchg
pop
insb
movsb
dec
xchg
loop
enter
jb
inc
mov
mov
ljmp
add
add
add
xchg
sbb
xchg
sub
rorb
xchg
or
adc
cmpsl
jl
gs
or
xchg
add
inc
jb
jge
mov
push
outsb
add
shlb
cmp
call
push
jbe
fisubl
es
imul
sbb
inc
or
sub
inc
pop
dec
je
loopne
and
test
fnop
daa
orl
push
ret
mov
fisubrl
sub
testb
shlb
xchg
mov
fnsave
cli
push
seta
outsb
and
push
xor
push
fnstcw
push
inc
cmpsb
jns
das
push
repnz
sbb
lcall
cmp
imul
push
push
mov
xor
add
repz
cli
lret
ret
fwait
jp
push
shr
mov
jecxz
sahf
push
enter
fs
inc
push
mov
push
cmp
aaa
gs
aad
adc
movsl
pop
push
mov
mov
push
push
adc
or
mov
or
scas
sbbl
add
into
lahf
das
fistpl
das
mov
and
fwait
imul
mov
xor
shrb
adcl
sbb
xor
push
scas
fsubr
fisttps
jo
xchg
pop
jae
fs
mov
in
cltd
or
adc
mov
fdiv
jae
ljmp
add
mov
inc
leave
mov
mov
or
jecxz
lahf
ret
xor
adc
ss
xlat
sbb
test
jmp
dec
push
inc
adc
jb
pmuludq
iret
sbb
inc
push
mov
out
xor
aaa
in
subl
repnz
orl
inc
outsb
xor
cmpsl
mov
mov
adc
add
sub
incl
mov
aam
les
xchg
or
ror
mov
ss
xchg
jne
xor
jno
and
stos
sbb
aaa
lret
cmpsl
jbe
jge
mov
xor
cmpsl
jp
shll
icebp
sbb
adc
sbb
add
cld
mov
pop
mov
inc
popf
mov
jnp
xlat
arpl
das
cmp
and
or
insl
pop
or
das
pop
jmp
inc
lock
pop
roll
cltd
cmp
and
test
xchg
or
xchg
leave
test
adc
shl
dec
push
jo
adc
mov
js
and
push
adc
xor
aas
arpl
nop
adc
loop
sub
aas
xor
and
mov
gs
mov
xor
ljmp
lods
les
pop
jl
in
ds
cwtl
cli
mov
ficomps
js
push
pop
aad
xchg
enter
or
pop
pop
lea
mov
jb
or
push
xchg
sub
das
sti
lret
aas
mov
in
test
rcrl
stmxcsr
mov
out
add
ljmp
xor
jae
jne
jmp
jl
inc
mov
cmp
sbb
insb
mov
aad
jb
xor
sbb
loope
jl
cs
cwtl
rep
leave
imul
mov
push
test
pop
daa
icebp
clc
add
jae
xchg
push
insb
ljmp
add
pop
add
xchg
fmul
mov
mov
mov
icebp
cmp
jecxz
gs
mov
jns
jg
xor
push
lock
sbb
adc
jns
ret
add
adc
scas
or
pop
push
ret
stc
xchg
or
xchg
bnd
and
int3
mov
es
mov
flds
bound
adc
rcrl
xchg
pmuludq
jnp
mov
lods
xchg
lret
cmp
psrlq
mov
nop
push
fs
xchg
push
fidivrl
andl
cli
mov
mov
jg
ljmp
shrl
mov
pop
out
idivl
pop
jg
cmpsl
cmp
pushf
mov
idivb
jnp
sbb
iret
ljmp
rep
jmp
sub
mov
into
in
pop
hlt
jns
leave
push
jp
and
pop
add
std
pop
ss
push
dec
jmp
add
or
pusha
cmc
stos
sub
or
repnz
sbb
pop
in
sub
mov
add
rorb
movsl
xchg
dec
jg
fnstcw
dec
push
cld
cs
mov
sub
cli
stc
mov
pop
push
mov
cmp
ret
adc
mov
les
ds
bextr
dec
sti
sub
xor
leave
mov
fisubrs
pop
stos
outsb
test
jb
mov
ljmp
int
cmc
xchg
dec
push
xchg
cltd
xchg
sti
dec
in
xchg
dec
shll
dec
out
mov
mov
push
dec
cmpsb
aaa
js
cltd
inc
in
int
adc
stos
xchg
ja
cmpsb
pop
subb
mov
lock
adc
inc
or
es
xchg
in
pushf
icebp
es
movsl
mov
out
cli
adc
enter
cmpsb
mov
pop
ja
dec
pop
cltd
mov
je
xlat
sbb
push
mov
pop
cmc
xor
sub
inc
cmp
inc
adc
xor
or
adc
sub
cmp
lcall
lret
push
aam
test
push
jo
rcrb
jne
les
inc
dec
add
dec
sub
mov
insl
arpl
sarl
jge
jge
les
pushf
mov
movsl
xchg
std
cld
das
xorl
push
or
pusha
pop
test
xor
iret
hlt
jle
sub
je
jl
movsl
js
cmp
mov
inc
shl
mov
repz
mov
ret
das
dec
fimull
inc
js
mov
cmp
sti
jecxz
dec
sbb
pop
ds
daa
out
cmp
das
mov
sub
bound
insb
pop
fisttpl
bound
or
or
scas
inc
repnz
sahf
cmp
lret
repnz
sarb
mov
xchg
ficoml
cltd
sbb
adc
pop
sub
lcall
and
mov
ljmp
lock
cwtl
ret
and
cmp
push
clc
aam
stos
mov
aaa
push
xor
mov
dec
call
js
cmp
inc
out
aaa
es
imul
insl
sbb
add
jb
jg
inc
dec
aad
pop
clc
into
add
push
cmp
and
sub
jg
call
cmpsl
fwait
mov
xchg
sti
call
pop
stos
push
mov
cs
cmp
pusha
inc
sub
mov
shll
jg
push
push
scas
adc
aaa
push
cmp
sub
xchg
adc
mov
adc
push
mov
nop
and
pop
mov
push
jmp
out
test
cmpsb
iret
sub
mov
xchg
shrl
dec
xchg
imul
aam
ljmp
lahf
jmp
and
loopne
aas
xor
xor
stos
adc
jmp
ret
in
shlb
test
adc
xchg
into
addr16
push
cltd
bnd
shrl
out
or
loop
imul
sub
lods
into
repz
repnz
mov
jle
cmpl
stos
inc
imul
xor
je
adc
adc
daa
push
lgs
mov
sbb
xor
outsb
test
in
fwait
cmpsl
jg
ret
or
shrb
pop
mov
add
or
popf
lret
out
jecxz
lods
jecxz
sbb
sub
repz
std
and
inc
or
clc
insl
adc
outsb
aam
ja
ds
xchg
outsb
inc
shlb
repnz
mov
add
pop
loope
das
and
pop
mov
sub
xchg
jg
test
popf
popa
cmp
mov
adc
jl
mov
inc
lea
jl
push
mul
jl
sbb
or
lret
fs
inc
jmp
lret
ss
or
loopne
out
fildll
pushf
das
mov
inc
mov
pop
push
jge
stos
mov
push
imul
std
int3
sar
stos
iret
outsl
ficomps
stc
or
lcall
mov
rcr
jge
loop
stos
pop
add
xchg
repz
adcb
andb
dec
imul
bound
fildl
xor
pop
lret
push
dec
pminsw
jge
cmpsb
inc
or
fists
or
add
ror
into
psubd
sbb
pop
sbb
jo
stos
unpcklps
xchg
aaa
ss
mov
add
fmulp
dec
sti
aad
push
fcmovb
add
leave
mov
add
pop
xchg
sbb
or
cld
adc
fs
push
cmp
aaa
incb
mov
or
add
lcall
outsb
jmp
cmp
jg
xor
adc
adc
add
insl
jno
xor
test
aad
xchg
add
pop
sub
leave
popf
or
push
pop
in
sbb
sti
lods
or
pop
les
in
into
jbe
out
xor
jmp
pushf
iret
sbb
dec
xlat
sbb
les
pop
out
movsl
fadds
sbb
mov
pop
inc
insl
xor
scas
dec
jle
jg
jae
sbb
aas
loop
pushf
pop
add
and
int
arpl
aas
int3
ret
inc
test
cmp
hlt
xchg
jns
mov
mov
mov
sbb
add
push
mov
add
test
inc
lea
push
mov
mov
clc
aas
jmp
dec
in
inc
adc
mov
jge
addl
mov
pop
fidivs
jmp
in
addr16
mov
lock
inc
aas
pop
sbb
insl
and
fs
out
xchg
cli
fisubl
mov
roll
leave
imul
jmp
push
and
sbb
imul
jmp
out
mov
aas
div
and
dec
xchg
popa
sbb
inc
xlat
mov
mov
ds
jmp
leave
repnz
jge
mov
adc
ficomps
pushf
xchg
and
and
shll
jle
push
mov
inc
push
test
aam
nop
cmp
cwtl
sub
inc
push
pop
lods
push
popa
cwtl
jle
cs
add
xor
stc
cmp
cmp
cs
pop
and
mov
neg
dec
pop
pop
adc
add
push
inc
shlb
fisubrs
scas
or
and
fs
dec
lods
outsb
push
mov
fmuls
xchg
cld
jne
mov
cmp
iret
fisttpll
sub
jl
and
push
jns
inc
pop
or
sbb
stc
sub
xor
aam
add
shrl
mov
sbb
mov
mov
out
test
inc
cmpsb
mov
sub
shll
push
or
inc
nop
dec
mov
es
dec
cld
inc
les
clc
push
scas
int
push
xchg
jno
popf
add
popf
mov
xchg
jo
cli
xor
sub
push
mov
mov
jecxz
dec
js
mov
jno
iret
fcoms
int
and
mov
rcr
outsl
shll
test
scas
xor
push
or
insl
adc
push
dec
sub
imul
sub
enter
test
mov
insb
lcall
sbbb
aas
mov
fiaddl
sarl
test
or
pop
mov
repz
push
mov
cmpsb
cmp
push
addr16
xor
lahf
dec
rcll
cwtl
jp
dec
rclb
iret
fbld
adc
repnz
inc
inc
add
add
pop
and
or
addr16
je
xlat
or
sub
sbb
fsubs
mov
nop
iret
add
es
sti
xchg
leave
lods
out
cmp
out
mov
pop
cltd
push
sub
push
js
mov
adc
mov
mov
les
sahf
add
push
add
sub
mov
cli
push
inc
mov
cmp
fisubrs
mov
jno
dec
pop
dec
jge
aam
mov
imul
jmp
dec
stc
pushf
jne
icebp
inc
lret
pop
pop
add
cmp
insb
lock
cs
dec
dec
push
adc
sti
out
and
fwait
dec
into
mov
adc
add
xchg
ja
stc
les
cltd
adc
mov
inc
pushf
out
inc
dec
stc
mov
jge
and
jae
ljmp
xchg
test
jp
call
pushl
leave
enter
push
mov
pop
xlat
mov
cmp
push
in
mov
adcl
call
sahf
cmc
dec
pop
fsts
mov
arpl
mov
add
fadds
lahf
mov
decl
subb
dec
mov
sub
out
xchg
cmp
cmpsb
mov
xlat
sub
cmc
mov
sbbb
test
std
dec
add
arpl
jae
ljmp
inc
pop
and
jo
xchg
movsb
xorl
mov
sub
sahf
adc
outsl
fdivp
out
sti
push
adc
or
jne
jp
in
mov
sub
das
popf
scas
ficoml
cmp
inc
movq
inc
add
loop
pop
mov
mov
lock
aad
jmp
sbb
mov
scas
push
sbb
rcrb
adc
jns
bound
push
and
jne
leave
add
icebp
or
nop
sbb
pop
jg
or
inc
loop
ds
mov
lret
jmp
push
roll
aad
in
lret
out
fnstsw
sbb
ret
cmp
dec
dec
sub
jmp
test
cmp
adc
xchg
scas
or
xor
push
pop
push
in
sbb
cwtl
aam
push
push
movsl
std
mov
lock
pop
call
lahf
xchg
int
cld
jno
push
loope
sub
rcll
mov
fldt
jbe
push
js
es
inc
pop
fcmovu
pop
xor
pop
scas
in
sbb
cli
mov
mov
pop
std
xchg
test
fucom
lock
loopne
aam
pop
pop
mov
pop
je
xchg
insl
jp
in
jbe
repnz
cmp
mov
cvtdq2ps
ja
jns
sub
aad
mov
aad
mov
stos
sub
lea
push
je
dec
mov
add
pop
mov
inc
pop
xor
push
mov
dec
cltd
cltd
inc
jmp
mov
loopne
jp
dec
cmp
es
lea
pop
jge
pop
or
push
mov
call
xor
inc
andl
mov
aad
add
mov
mov
es
stos
jo
sbb
repz
pop
clc
and
shll
data16
or
and
aam
jmp
lahf
jg
sub
or
xchg
jecxz
pop
addl
cmp
xchg
ror
add
and
inc
andb
sbb
mov
and
pop
mov
sbb
shrl
test
adc
fnstcw
inc
aaa
nop
mov
pop
in
js
inc
sbb
clc
mov
dec
inc
loope
aam
pop
add
cli
mov
insb
and
mov
dec
xor
shll
mov
les
mov
jnp
cwtl
aam
lret
inc
mov
sub
or
inc
stc
mov
pop
adc
and
mov
cs
lahf
inc
in
orl
pusha
lods
gs
sahf
fldcw
addr16
pushf
aaa
push
js
mov
std
dec
xchg
or
mov
cmp
mov
in
jno
stos
iret
cmpsl
mov
pop
call
scas
mov
sub
ror
mov
cmc
add
mov
jnp
mov
and
jno
sti
and
push
dec
sarl
les
lock
imul
scas
mov
addr16
rcr
popf
call
lret
aam
add
js
cltd
and
movsb
lret
ljmp
or
aam
xor
sub
push
rclb
fwait
mov
ja
test
bswap
rorl
sub
add
sub
es
jg
les
arpl
out
add
cmp
adc
xor
lock
outsl
popf
sti
andb
cmp
dec
mov
clc
jno
add
stos
pop
sub
sub
shll
inc
movsb
cld
cmp
inc
popl
call
mov
pusha
sub
stos
jo
lea
ficomps
repz
mov
bnd
movb
sub
cmp
pop
mov
mov
in
insl
and
inc
xchg
push
rclb
jne
or
cmc
mov
insl
call
pop
cmpsl
cmp
adc
jmp
in
ds
xchg
cmpsb
int3
cmp
pop
pop
dec
cmp
mov
enter
xchg
adc
lea
cwtl
and
pop
mov
and
pop
mov
adc
cmpsb
imul
dec
push
lcall
push
pop
popf
aas
fldcw
inc
dec
aad
cmpsb
pop
add
lahf
dec
push
xchg
std
or
and
sub
lds
leave
ss
mov
stos
xchg
push
xor
push
bound
cld
push
jp
xor
xchg
enter
jno
dec
mov
idivb
mov
fcoms
add
leave
and
int
fistps
icebp
lret
push
jbe
xchg
jg
mov
mov
iret
je
outsl
cmp
int
jo
mov
aaa
int3
into
js
pop
xchg
fiaddl
sbb
jl
mov
dec
out
outsb
mov
out
out
mov
pop
mov
or
jne
popa
sarb
pop
fidivrl
cmp
pusha
mov
shl
shrb
call
popa
sub
movsb
aam
mov
pop
adcl
jle
fsubrp
shl
hlt
xchg
shrb
aam
lds
jns
sbb
int3
out
inc
pop
push
sbb
and
pop
mov
daa
sbb
adc
in
ret
dec
cmp
cmp
jecxz
icebp
pop
pop
das
jg
cld
xchg
jno
adc
push
hlt
adc
adc
push
nop
cmp
pop
pushf
jns
or
pop
fildl
lahf
addr16
sahf
sub
pop
lea
mov
popa
pop
in
ret
or
cmpsb
pop
sub
pusha
or
sub
inc
addb
xor
aaa
jp
xchg
sbb
aas
cmp
ja
dec
cmp
pop
or
in
filds
lret
std
shrd
dec
pop
mov
jmp
hlt
dec
mov
or
pop
cmc
out
bound
enter
push
cld
mov
sbb
sbb
jb
call
jne
loop
loope
xor
cmp
popf
xchg
call
pop
iret
mov
lahf
lcall
rcr
repz
inc
mov
fidivrs
imull
push
jecxz
mulb
arpl
push
lret
xor
jl
pop
in
rcrb
jl
out
mov
stos
test
or
cmp
fs
lds
xor
xchg
icebp
sub
lock
jmp
push
adc
dec
dec
shlb
mov
fimuls
xchg
addr16
inc
xchg
dec
out
aad
adc
cmp
cmp
dec
mov
pop
mov
xchg
divb
je
das
out
mov
jmp
clc
negl
xchg
lret
shr
jp
cmpsl
add
push
and
test
dec
rcrl
pop
push
pop
lahf
push
pushf
mov
xor
dec
mov
fdivs
mov
and
ja
sbb
lahf
int3
push
push
push
pop
outsb
in
pop
push
cmp
jp
ret
cmpsb
rolb
dec
fcoml
push
call
out
iret
cmp
int3
loopne
sbb
or
mov
add
test
shlb
dec
jg
sti
mov
add
out
inc
jecxz
scas
sbb
xchg
aam
test
scas
cmc
int
iret
xor
jge
mov
xchg
bound
mov
call
xor
or
pop
xchg
and
pop
mov
es
or
lea
ficompl
dec
in
je
mov
icebp
jmp
jle
test
cmpsb
xlat
cld
dec
clc
rcl
and
mov
ret
mov
or
cmp
mov
push
dec
daa
push
fstps
clc
insl
out
mov
push
sub
pop
add
push
cmpl
and
iret
out
pushf
filds
dec
leave
lahf
fiadds
leave
loope
jae
hlt
cltd
jecxz
jl
xor
sbb
jne
clc
jle
pop
es
ret
pop
lret
pop
sub
jecxz
dec
outsb
lret
xchg
test
lret
and
cwtl
icebp
ss
mov
mov
lret
das
lods
jge
and
sbb
in
mov
daa
mov
insl
mov
or
lods
stc
pop
sbb
popf
dec
dec
fcomps
jbe
push
dec
call
pop
mov
inc
xchg
mov
in
pop
jno
mov
inc
mov
xor
and
andl
sbb
icebp
mov
out
pop
outsb
cmp
dec
xchg
aam
mov
xor
loop
pop
sub
ret
insb
mov
push
pop
xlat
insb
xchg
in
add
fcompl
or
cmp
sbb
popa
lea
mov
xchg
std
xlat
fld
and
mov
sahf
xor
lret
jl
insl
push
sbb
stos
addr16
or
lret
je
popa
cs
cwtl
lea
lods
or
sub
icebp
inc
ljmp
lcall
sub
ja
mov
out
mov
push
int
mov
bound
inc
pop
daa
call
hlt
aas
or
add
xor
sbb
out
jb
dec
mov
cmp
xor
or
push
rcrb
mov
hlt
dec
jecxz
out
mov
mov
cmp
pop
mov
lods
cmc
out
mull
adc
pusha
mov
cmp
idivl
nop
imul
dec
or
xor
pop
fdivs
es
loopne
adc
adc
add
loop
icebp
test
cmp
xor
dec
je
scas
add
leave
xor
pop
pop
xlat
test
popa
nop
adc
in
clc
xlat
add
arpl
aas
insb
xchg
push
add
xchg
mov
out
add
popw
push
push
pushf
fiaddl
jo
or
mov
pushf
xor
pop
movsl
adc
jbe
mov
test
sbb
jbe
add
xchg
out
int
movsl
loope
lods
cmpsb
xor
outsb
or
fimuls
stos
shr
fisttpl
inc
jnp
out
ss
mov
outsl
add
fsubl
jge
pop
or
lahf
adc
test
jne
pop
call
xor
inc
enter
and
je
mov
or
push
or
mov
cltd
sahf
insb
arpl
dec
dec
cmp
jbe
dec
jns
rclb
inc
mov
lock
push
lret
pop
dec
mov
xor
pop
sti
sub
or
insb
sub
imul
mov
push
test
out
pop
ret
mov
dec
rorl
jecxz
test
fisttpll
in
xor
scas
lret
or
imul
push
add
add
mov
inc
or
pop
mov
mov
ss
test
out
in
sub
mov
xchg
iret
imul
test
mov
mov
ficoml
jae
xor
inc
jge
imul
xchg
or
das
rorb
dec
lods
ljmp
jo
ss
and
add
ss
add
sub
sbb
pop
mov
sbb
mov
mov
jle
shr
cmp
push
data16
xorl
push
pop
push
push
repz
jmp
sbb
or
push
mov
cmp
push
flds
xchg
xorb
filds
xchg
pop
fidivrl
stos
ret
jecxz
adc
enter
xchg
ret
sub
dec
push
stc
or
mov
jmp
add
idivl
cmc
fwait
sbb
sbb
lea
lds
jg
js
jns
in
sub
jb
mov
ds
in
fldl
inc
xchg
xchg
sbb
nop
lds
lds
cwtl
add
pop
mov
xchg
push
pop
xor
mov
mov
les
out
loopne
cwtl
std
jnp
das
shrb
adc
adc
sbb
sbbb
mov
jmp
inc
push
or
lods
popa
rclb
jle
sbb
jle
sub
adc
scas
dec
dec
scas
arpl
out
sti
movsb
dec
xchg
scas
jnp
daa
mov
movl
adc
shufps
dec
mov
mov
aam
loope
pusha
xchg
mov
mov
cltd
inc
rcrl
imul
mov
jl
cmpsb
push
mov
xchg
out
cmp
jge
or
cmpb
xchg
sbb
sbb
adc
or
in
push
pop
cltd
in
push
jg
loopne
sbb
aaa
jbe
hlt
xchg
add
cmp
add
in
mov
sahf
lds
pushf
mov
insb
xorb
fs
pop
push
and
and
or
mov
xchg
mov
jge
or
or
test
fistps
mov
jne
dec
adc
fstps
inc
push
cmp
or
ljmp
data16
out
add
push
fdivrl
inc
dec
push
pop
mov
push
or
push
jge
lcall
jle
int
jle
fildll
fbstp
jae
mov
add
stos
mov
loope
call
and
hlt
sbb
aaa
pop
sbb
call
push
inc
pop
out
push
ja
cmp
jge
sbb
xchg
dec
mulb
rcrb
mov
insb
sarl
addr16
mov
imul
jae
push
and
lahf
outsl
shlb
dec
mov
and
orl
pop
sarl
mov
mov
and
std
sahf
aas
shll
sub
xlat
loope
gs
arpl
pop
jbe
mov
jns
movsb
add
or
push
enter
xchg
outsb
and
push
cmpsb
jb
jo
in
xchg
leave
pop
fnstenv
xor
imul
lods
adc
ja
or
inc
fisttps
sar
xor
bound
shrb
iret
mov
sub
jne
xor
add
xchg
in
mov
dec
mov
popa
iret
cmc
cli
jbe
imul
sbb
inc
pop
push
jbe
mov
iret
mov
or
out
pop
and
cmpsb
add
pop
inc
inc
dec
inc
bswap
hlt
shll
jo
jae
xchg
or
les
inc
stc
mov
in
cmpsl
cmp
push
insb
mov
mov
adc
jne
push
and
and
fidivrl
sti
fmuls
std
mov
mov
mov
xor
add
cltd
jb
push
arpl
fwait
add
in
jb
adcl
rcll
imull
inc
xchg
or
mov
jb
cs
dec
mov
jne
mov
icebp
lretw
fcoms
jge
repnz
or
cltd
test
or
add
push
sar
cld
push
leave
mov
mov
nop
pop
loope
xor
test
xlat
lcall
iret
sub
loop
out
movsl
push
jns
popa
loop
xchg
daa
mov
fldl
xor
fwait
push
hlt
sarb
adc
and
je
call
cmp
pop
sti
mov
das
idiv
mov
push
mov
dec
pushf
push
mov
mov
xor
sub
movsl
enter
mov
orb
and
cwtl
and
add
in
out
inc
adc
or
in
stos
mov
fs
push
test
push
hlt
shll
jbe
outsl
xchg
mov
mov
mov
pop
rcr
in
lcall
loop
mov
and
insb
jp
int3
jl,pt
xchg
aam
jle
ds
jl
sub
inc
add
pop
cli
sbb
or
lret
mov
jmp
jno
scas
push
aam
mov
add
jmp
ret
inc
sbb
add
adc
sub
dec
negb
pushf
push
rorl
sub
mov
mov
jmp
jne
xchg
loopne
aad
add
xor
ret
cmp
aam
mov
jnp
adc
daa
and
sbb
mov
addl
inc
xlat
dec
cld
pop
mov
addl
sbb
inc
stos
mov
mov
testl
iret
dec
dec
mov
jge
test
roll
push
jg
cs
push
mov
xor
mov
in
stos
add
jne
call
sbb
orb
lahf
mov
push
out
adc
xchg
push
lret
movsb
inc
outsl
and
mov
roll
cmp
inc
sbb
das
pop
push
or
inc
dec
into
push
or
imull
hlt
hlt
hlt
xor
or
or
fld
sbb
mov
adc
add
push
rolb
mov
les
dec
and
mov
gs
fisttps
push
outsl
pop
sbb
mov
hlt
in
jae
mov
out
or
roll
sub
out
popl
mov
jecxz
push
aad
pop
out
push
outsl
mov
lea
push
dec
jg
lds
push
jle
std
push
mov
mov
mov
mov
xchg
stos
mov
jecxz
cmp
mov
mov
gs
mov
sbb
pop
jae
dec
dec
inc
sub
out
mov
lret
pop
mov
sbb
sti
push
hlt
push
ret
add
in
movsl
xchg
mov
in
mov
nop
pop
jmp
push
or
add
lds
cltd
aaa
add
idivl
sahf
cwtl
or
iret
dec
pop
loope
xchg
adc
lods
lret
inc
movsl
xchg
add
aad
xor
cmp
xchg
pushf
add
lahf
imul
cld
movsb
idivl
es
pop
cmp
cs
addps
or
ret
cmp
popf
mov
dec
dec
mov
jns
mov
notb
repz
nop
sbb
shll
dec
divb
scas
cmp
mov
scas
cmpl
ja
mov
xchg
fcoms
mov
adc
in
mov
push
aaa
dec
dec
sahf
fldl
add
cmp
cli
inc
enter
iret
push
movsl
fmulp
fidivrs
test
fisubrl
jbe
dec
push
inc
movsl
cmpl
push
mov
mov
lret
push
sub
jnp
rep
subb
roll
aam
sub
adc
jmp
test
dec
xor
orb
jecxz
call
lahf
push
movsb
cwtl
xchg
jne
cmp
pop
dec
mov
inc
leave
sub
add
xchg
xor
ficoml
popf
mov
and
jnp
inc
js
lea
lcall
sbb
sub
sub
popa
mov
test
inc
mov
hlt
dec
outsb
and
inc
aas
fisttpll
xchg
and
ret
mov
dec
cmp
sbb
push
cs
pop
jg
outsl
lcall
aam
fwait
and
xor
mov
mov
rorb
xchg
inc
rorb
jg
xchg
pop
sub
sub
scas
inc
jecxz
pushf
mov
lret
lods
cs
rorb
and
xor
mov
stc
mov
pop
push
and
dec
xor
dec
lret
lret
sub
dec
shll
aaa
dec
dec
int3
sub
dec
mov
and
out
in
push
cmp
push
adc
jge
or
inc
nop
jg
xchg
mov
inc
inc
das
xlat
int3
push
jo
jnp
call
or
lock
insl
in
jle
nop
out
es
cmp
jl
sbb
jno
enter
cmp
orl
daa
ss
mov
push
scas
mov
add
ret
cwtl
sbb
and
in
in
in
fwait
inc
ror
mov
cmp
pop
mov
enter
adc
mov
xchg
cwtl
pop
fsubrl
and
push
insb
push
icebp
rcrb
je
push
out
and
ljmp
mov
mov
push
lret
test
aas
jl
cmpsb
test
push
test
ficoml
sub
sub
or
xorl
cmp
cmp
fucomi
jne
lock
jnp
push
out
jmp
subb
dec
mov
arpl
or
std
xchg
sub
pusha
xchg
jmp
jle
mov
lea
cli
mov
mov
mov
cmp
aad
into
test
push
add
movsb
mov
mov
add
xchg
fildl
movsb
jmp
popa
dec
jg
mov
icebp
fisttpl
das
rcrw
mov
fstps
xchg
or
sbb
test
sbb
xchg
pop
insl
gs
cmp
push
pushf
fnsave
aad
insl
das
pop
enter
cmpsl
sahf
jg
push
mov
xchg
ret
lcall
jg
mov
jmp
xchg
add
pop
dec
cmp
out
lcall
dec
sbb
and
fwait
mov
dec
jno
pop
stos
loop
ljmp
leave
inc
mov
dec
ds
fsub
sub
mov
ljmp
mov
lret
mov
adc
shll
lret
in
mov
xchg
add
push
adc
inc
lret
and
cli
or
shrl
test
addb
cltd
rcr
fmulp
fldenv
pop
push
and
pop
mov
and
mov
enter
popa
jge
inc
ss
lahf
jl
in
adcb
pop
jl
add
aam
dec
insb
push
pop
cmp
push
and
or
lods
stos
fildll
xlat
and
push
adc
xchg
mov
aad
movsb
jae
pop
xor
xor
clc
rcrb
js
mov
loop
arpl
cmpsl
jb
mov
in
jbe
inc
pop
jne
or
movsb
roll
cltd
xor
sbbl
lods
ds
lods
xchg
dec
shlb
cmp
add
mov
sub
mov
xchg
jg
data16
inc
mov
aas
adcl
sub
aam
mov
xchg
fldt
fiadds
and
add
insb
or
mov
mov
icebp
loope
addb
enter
or
cs
cli
js
xchg
in
lods
rorb
lcall
jno
mov
out
jnp
lcall
outsl
cltd
xchg
addr16
pop
adc
into
sub
mov
push
fcomps
in
xchg
add
test
pop
fldcw
ret
data16
pop
jecxz
inc
pusha
jne
rorl
xor
mov
jge
jle
push
inc
jl
dec
pop
mov
cmp
push
mov
pop
and
push
push
add
es
rcl
out
lret
jl
pop
dec
inc
ja
sbb
xchg
stos
inc
jp
les
fisubl
mov
in
or
jmp
test
aad
adc
cmp
cld
inc
adc
adc
and
cltd
and
and
daa
cli
inc
pop
outsl
repz
xchg
jmp
cmp
or
add
js
inc
mov
jns
clc
pusha
adc
xchg
mov
mov
mov
and
add
pop
setge
pop
fisubl
in
or
shl
movsl
dec
ror
xchg
fisttps
sahf
xchg
cmp
push
xchg
addr16
dec
icebp
in
inc
mov
mov
dec
dec
js
cmp
sti
jb
cmp
jmp
cli
divb
das
adc
daa
jp
jns
or
adc
dec
bound
jecxz
cltd
or
enter
sbb
xchg
push
dec
pushf
pop
orl
adc
adc
jno
push
and
ficompl
outsb
pop
stos
dec
fcoml
fisttpll
aam
popf
ds
rcll
push
movsl
lret
cs
inc
and
inc
fdivrp
adc
mov
mov
mov
xor
mov
leave
fdivp
call
sub
aad
or
mulb
mov
mov
iret
mov
dec
test
cmp
pusha
stc
mov
es
vxorps
outsl
pop
addr16
imul
jge
es
sbbl
cmp
xlat
movsl
dec
fiadds
jmp
or
inc
add
or
subl
add
pop
pop
and
insb
js
imul
inc
inc
adc
mov
hlt
nop
test
xchg
insb
push
insl
xchg
popf
pop
sbb
int3
lahf
jnp
or
sarb
mov
arpl
stos
stc
push
loopne
mov
divb
adcb
adc
mov
or
dec
inc
fldt
fidivl
xor
dec
pop
cmp
ficomps
push
scas
movsl
xlat
pop
jecxz
sub
stc
fstpt
cmp
cld
repz
lods
cmp
test
xchg
scas
xor
popf
sub
arpl
lods
lock
mov
scas
push
aas
adc
or
mov
mov
insl
jmp
sbb
sbb
xor
mov
lret
sbb
jns
dec
xchg
cmp
mov
push
push
add
push
aam
repnz
xor
add
xor
xchg
les
jg
sbb
add
scas
rolb
scas
xor
lret
lock
rcr
cmp
jp
fsts
xor
xchg
and
and
xor
scas
jae
bound
dec
sbb
pop
mov
shlb
pusha
into
inc
sbb
mov
jns
push
clc
xor
ds
incl
mov
and
andb
out
fstps
lods
pushf
jo
inc
std
lock
mov
rorb
or
insb
dec
imul
int
sbb
mov
loope
xchg
push
out
iret
inc
xor
ljmp
xchg
push
xor
mov
jp
jnp
and
rol
jbe
fnstsw
jb
lahf
movsb
rolb
test
sbb
mov
stos
push
cld
jae
test
stos
xlat
lods
adc
inc
push
shrb
sub
sbb
jbe
lods
mov
jno
pop
int
mov
andl
jns
adc
movsl
sahf
jbe
outsb
pop
pop
add
xchg
and
cs
cli
pop
and
inc
cltd
add
or
inc
lods
fwait
pusha
out
xchg
mov
fdivrs
jp
mov
mov
jnp
test
jmp
test
mov
jecxz
mov
pop
arpl
jo
loop
dec
test
push
stc
lret
movb
jp
out
mov
in
sub
bound
jno
inc
in
out
xor
in
je
lahf
nop
xchg
pop
mov
dec
iret
sub
sbb
lret
xchg
pusha
icebp
push
lods
sbb
push
pop
pushf
cs
cmp
lret
cmp
jge
pushf
test
or
xor
add
xor
or
push
stos
jne
xchg
leave
jg
sbb
add
push
xchg
rcrl
mov
jg
sub
cmp
fists
cmp
mov
sub
testb
imul
sub
shrb
outsb
xchg
repnz
into
in
push
into
xor
adc
sbb
mov
popl
cltd
in
dec
imul
clc
adc
inc
loop
jae
and
or
jno
scas
cld
mov
sbb
test
les
aaa
lret
sbb
repz
mov
xchg
xchg
jge
inc
mov
jnp
mov
cs
dec
and
sub
imul
in
pop
insb
stos
popf
mov
aaa
fwait
push
shlb
fmuls
call
clc
cmpsl
or
cmp
lock
movsl
push
fsts
daa
mov
jle
shr
ror
mov
jns
cld
aad
or
int3
outsl
mulb
in
and
push
mov
inc
les
inc
aad
pushf
pop
mov
loopne
lods
sub
inc
stos
and
cld
mov
sub
dec
ljmp
jmp
repz
xchg
imul
icebp
divb
nop
lock
jae
roll
jmp
cmp
pop
jp
inc
inc
insl
lea
into
fnstenv
rcrl
inc
loopne
stos
pusha
dec
inc
cltd
mov
mov
cs
inc
addr16
in
xor
out
mov
pop
aaa
arpl
es
cmp
mov
dec
dec
fxch
cmpsl
mov
imul
stc
sub
rorb
les
mov
sub
in
or
adc
stos
into
fistps
fldl
mov
jnp
xchg
jl
mov
sbb
sbbl
push
inc
jg
mov
mov
lds
or
sbb
rcl
mov
jne
jo
pop
push
jge
mov
test
icebp
das
pop
in
sub
fbstp
fsqrt
mull
inc
or
in
in
cmp
or
aam
or
ljmp
and
xor
push
iret
xchg
das
cmp
mov
cld
pop
push
mov
push
daa
outsl
int3
cmc
push
int3
clc
or
adc
iret
or
jle
bnd
dec
sbb
sub
sbb
and
sbb
loop
xchg
xchg
pop
mov
xor
movsb
jnp
cli
cli
pop
mov
repz
push
mov
mov
jg
xchg
push
das
fs
jecxz
outsl
clts
decb
sub
mov
sarb
cwtl
and
hlt
lods
adc
mov
out
mov
mov
push
test
icebp
lret
cld
push
jb
mov
ja
pop
xchg
cmp
and
pop
mov
inc
adcb
and
das
fs
loopne
mov
jmp
je
ds
int
roll
js
sub
sahf
push
mov
mov
or
daa
fnstenv
pop
cmp
icebp
icebp
xchg
push
std
add
dec
scas
and
aaa
adc
add
ds
insb
pop
mov
int
and
fadd
mov
cmp
fstpl
mov
insb
and
jle
iret
daa
mov
pop
xor
popa
scas
lea
add
cmc
jp
pushw
lods
fs
xor
add
push
adc
add
movsb
xor
sti
lock
adc
pusha
icebp
cmp
push
push
popf
call
push
mov
repnz
out
jmp
clc
add
add
lods
test
jmp
cli
pop
scas
fwait
push
icebp
sbb
mov
in
and
mov
sub
pop
test
jecxz
cmp
scas
sti
push
jns
mov
xlat
add
cmp
das
or
ret
mov
or
cli
ficomps
loope
and
enter
outsb
pop
shr
in
int
mov
mov
lock
cmpsb
push
jno
inc
pop
xlat
cld
sti
jg
cmp
jae
pop
adc
cmp
je
and
in
fistpl
xor
or
xchg
dec
mov
mov
rol
mov
push
lock
xchg
jl
pop
mov
in
mov
pop
adc
and
mov
xor
mov
xor
rol
add
pop
fildl
adc
mov
xor
xchg
adc
sbb
addr16
xor
push
and
jns
scas
fsubrl
jnp
aas
xchg
or
rol
shll
jg
inc
lret
jne
add
in
cmp
divb
cmp
popf
mov
cltd
clc
xor
stos
testb
out
loop
push
push
lods
lds
or
in
lods
ljmp
dec
rcrl
inc
xchg
pop
add
cmp
push
call
pop
rcrl
inc
fldl
mov
jge
push
cld
int3
jmp
pop
lods
repz
pop
xchg
add
and
pop
mov
adc
out
data16
pop
int3
cmc
push
xor
mov
xor
pop
dec
and
js
leave
fmull
xchg
aaa
mov
inc
lahf
pop
bound
add
jne
xchg
dec
mov
repz
divb
clc
call
cmp
pop
mov
jbe
mov
xchg
addr16
adc
pusha
add
test
xchg
shll
push
filds
addb
pop
mov
das
or
mov
xor
push
int3
int3
ret
xchg
cwtl
cwtl
cwtl
divl
lahf
cltd
adc
and
into
mov
xor
sahf
jmp
xor
loope
pop
pushf
lret
mov
mov
inc
and
push
mov
xor
or
mov
popf
xchg
jp
shlb
jp
fsubr
shr
fisttps
inc
jae
popa
roll
jno
jbe
fsub
inc
jecxz
loop
mov
cs
add
adc
push
mov
leave
in
rcrb
stos
imul
inc
adc
xchg
push
sub
mov
jne
inc
xor
fdiv
in
ljmpw
in
or
mov
and
dec
sbb
out
jecxz
jg,pn
inc
pop
shrb
notl
icebp
gs
addb
adc
imull
cli
xor
in
loop
lret
stc
mov
xchg
mov
out
popf
or
mov
icebp
add
xor
and
shl
icebp
cmpsl
mov
mov
popa
and
push
iret
xor
aad
adc
mov
test
ljmp
or
cmpsb
adc
shrb
and
and
fisttps
lret
push
sbb
mov
jne
fidivrl
ljmp
outsl
xchg
test
lahf
sub
cmp
rcl
sahf
lods
daa
fiaddl
in
jns
movsb
cmp
lods
dec
imul
inc
mov
jecxz
mov
cwtl
loopne
in
frstor
ss
jne
sahf
sub
test
shlb
xor
xchg
cmp
mov
mov
xchg
das
outsl
in
test
cmp
and
jg
cmp
fsts
push
or
add
dec
mov
cmpsb
and
sti
xor
orl
popa
int
push
cmp
pop
xchg
push
stc
gs
push
stc
lock
jo
pop
insb
daa
ljmp
test
fbld
mov
xor
or
clc
iret
xchg
push
mov
scas
mov
bound
insl
pop
rclb
cli
xor
mov
xor
mov
mov
add
imul
dec
adc
shrl
out
imul
cld
in
xor
outsl
stos
sar
mov
sbb
sbb
ds
mov
jae
jle
adc
jb
std
jecxz
sarl
hlt
pop
scas
cmpsb
stc
fisubrs
clc
cltd
inc
mov
ret
dec
in
fwait
push
ljmp
xor
scas
test
mov
jmp
stos
xchg
dec
int3
ret
movsl
dec
popa
or
lds
mov
hlt
push
lea
sbb
lds
cmp
cmpsb
loope
pushl
clc
out
xor
push
test
out
mov
gs
cmp
pop
cmp
push
sbb
mov
jo
cmc
fidivs
lock
sub
adc
xlat
imul
popf
fwait
mov
es
imul
inc
mov
aad
adcb
leave
sub
jno
cmp
leave
fnsave
rcll
sahf
xchg
mov
cmc
xchg
xlat
inc
std
pop
mov
clc
jecxz
fxtract
ret
jg
aas
movsb
cs
stos
roll
add
fsincos
mulb
inc
sbb
repnz
fcomip
inc
dec
ret
xor
jmp
add
pusha
pusha
adc
add
mov
out
cmp
in
das
les
cmp
xorb
push
sub
mov
jmp
ret
and
repnz
sbb
sahf
fwait
mov
and
in
cmp
aad
push
bound
jae
mov
cmp
xchg
pop
push
dec
out
add
into
rcrl
dec
inc
dec
aas
sub
pop
lods
add
out
pop
and
sbb
test
pop
fcoms
mov
in
adc
inc
or
addb
test
dec
stos
out
or
aas
test
lahf
cmpsb
jne
lret
clc
mov
or
imul
mov
addl
loop
mov
mov
adcl
outsl
pop
and
sti
insl
pop
bound
xchg
push
js
pop
mov
mov
cltd
inc
testl
inc
cli
or
scas
jne
xor
int3
jle
je
cltd
inc
aas
jne
popf
push
imul
sbb
push
push
js
cmp
mov
xchg
into
stc
sub
cmp
test
lods
sbbl
nop
lcall
xor
sbb
addr16
test
decb
testl
push
push
mov
xchg
push
cmp
mov
mov
inc
scas
aaa
mov
mov
insl
loopne
popf
sub
and
insl
add
ds
into
rclb
and
popa
jb
inc
jle
mov
enter
popf
aam
movsl
aam
push
push
scas
stos
in
cs
pop
aaa
xchg
fwait
cmpsl
mov
cld
sbb
jge
in
test
pop
mov
cmp
inc
aad
shr
mov
sbb
push
mov
and
sbb
xchg
clc
or
pop
int3
jno
lods
push
jne
sub
scas
mov
inc
ja
icebp
mov
jns
dec
jbe
pop
sub
fdivrs
xor
fidivl
pop
mov
lods
jno
add
mov
insl
mov
and
pushf
loop
call
test
imul
popf
clc
outsb
hlt
sub
ljmp
dec
leave
gs
fisubl
sub
sarb
mov
fisubs
imul
sub
mov
xlat
dec
mov
inc
bound
lock
mov
dec
cs
jbe
lret
cwtl
add
je
push
outsb
inc
stc
jle
lret
or
mov
pop
inc
addr16
sub
shl
push
inc
push
push
loopne
dec
fwait
lret
pop
fimuls
les
pop
cmp
decl
mov
fs
mov
ffreep
addr16
cmp
cs
loope
jb
mov
arpl
out
je
aas
loopne
xchg
inc
sbb
push
push
inc
aas
pop
push
sbb
xor
in
addr16
mov
dec
inc
jecxz
or
into
mov
cli
jo
cwtl
push
pusha
fwait
in
inc
jbe
add
or
inc
fs
sbb
stos
dec
xchg
scas
in
sarb
cmp
out
jae
aas
ficompl
mov
inc
je
jb,pn
sti
imul
cmp
adc
mov
or
es
mov
mov
es
adc
in
aad
xchg
jecxz
push
inc
outsl
cmp
mov
rol
push
inc
xlat
pop
dec
aam
sub
addr16
neg
test
lcall
dec
adc
pushf
dec
pop
repnz
sbb
jne
shll
shll
mov
bound
rcrb
sub
mov
subb
adc
mov
loope
and
push
xchg
jb
push
out
les
inc
adc
cld
ljmp
int3
hlt
xor
popf
ss
sti
pop
pop
in
push
insl
mov
mulb
mov
mov
mov
ds
enter
mov
pusha
xchg
nop
je
jg
dec
cmpsb
rcr
sub
out
fmuls
push
or
push
mov
xor
or
scas
movsl
enter
jae
insl
jbe
xor
xchg
and
gs
loope
jno
stc
imul
sarl
in
jns
push
xor
mov
mov
lods
mov
add
mov
jge
es
jbe
out
test
inc
pop
rcrl
addl
pop
lock
xchg
sahf
cmp
fcomip
icebp
cmp
sti
movsb
mov
ret
sbb
insl
push
and
or
mov
ja
mov
movsl
jge
mov
sub
out
scas
add
hlt
into
mov
fucomip
mov
rorb
shrb
jmp
cmpl
mov
mov
cltd
or
dec
or
or
sbb
mov
fistpl
iret
sahf
loopne
or
loop
data16
daa
dec
movsb
add
or
call
jno
mov
inc
shll
mov
arpl
stc
gs
in
int3
xor
fdivrl
sbb
fnstenv
test
ljmp
ffree
xchg
loope
adc
or
or
jp
ljmp
or
das
lods
repz
inc
hlt
mov
cs
notb
mov
push
repz
jl
mull
adc
shrl
mov
loopne
fdivl
push
ja
fistps
lahf
push
mov
jnp
xchg
scas
xlat
enter
sbb
or
in
pop
inc
xor
cs
push
imul
je
mov
ja
mov
xchg
pushf
xchg
mov
fmull
sub
mov
sarl
cwtl
jbe
dec
jne
add
mov
adc
inc
sahf
cmp
ds
dec
insb
jae
enter
push
gs
popl
inc
js
push
jbe
test
mov
mov
adcb
cld
dec
mov
loop
mov
add
loopne
fisttpl
jnp
xchg
or
mov
pop
mov
and
pusha
fs
aas
cmp
cmpsb
mov
fs
fnsave
xchg
into
mov
mov
ds
icebp
jp
scas
ss
out
bound
outsl
scas
addr16
push
xchg
insl
pop
or
mov
mov
jns
xchg
jb
pop
mov
insb
aas
dec
test
shlb
in
push
fadds
fsubr
in
pop
xchg
jae
fldt
sti
sub
sbb
sub
mov
sub
stc
rclb
mov
pop
sub
pop
push
clc
popf
pop
fs
pusha
sbb
xchg
mov
mov
ss
mov
js
push
mov
xor
inc
subb
dec
xor
mov
sbb
mov
sti
ret
jo
xchg
cmp
je
popf
mov
imul
inc
repnz
mov
mov
mov
test
jle
mov
mov
jl
es
dec
cltd
stc
xchg
cmpl
into
sbb
lods
or
outsb
cmp
icebp
adc
test
sub
aam
xchg
cld
popf
fistpll
jmp
jmp
push
sbb
push
hlt
and
mov
outsl
std
pushf
push
ret
mov
insb
ficoml
or
push
lods
xor
fsts
sub
push
and
xor
sbb
pop
mov
popa
jecxz
scas
flds
out
mov
add
mov
aam
dec
inc
xor
pushf
stc
mov
lahf
jl
movsb
mov
xchg
xchg
outsb
loope
enter
scas
or
cmp
dec
jg
aaa
fs
and
jb
xchg
adc
sti
in
mov
popf
push
test
cmp
inc
test
mov
popa
out
rorl
gs
mov
aad
lret
jne
xor
icebp
sub
mov
jno
call
push
pop
in
sub
clc
sbb
arpl
arpl
jno
outsb
xchg
mov
frstor
lea
insl
mov
mull
cmpsl
push
pushl
fcompp
rorb
cli
cmp
mov
mov
jmp
stos
mov
xor
scas
and
pop
jns
jnp
jl
cmpsl
sub
sbb
iret
adc
inc
cmp
pop
add
cld
jg
mov
lahf
jp
imulb
jg
adc
and
jle
mov
ja
push
push
in
outsl
xor
aad
xor
popf
xlat
sub
ret
mov
mov
or
int
daa
frstor
sbb
fwait
pop
shll
add
and
cmp
notl
or
stos
pop
xor
xchg
int3
test
js
cmp
lret
jp
lods
or
js
out
gs
or
mov
jmp
add
arpl
inc
dec
daa
mov
sbb
insl
inc
cmc
adc
inc
or
imul
sbb
jo
cs
mov
xor
out
sahf
push
out
dec
ret
divb
rcrl
mov
out
mov
mov
ljmp
sub
xchg
jnp
mov
fnstcw
rclb
popa
inc
mov
incb
data16
add
add
negb
data16
ror
fxch
lds
sub
test
movsb
cltd
pop
repz
cld
pop
push
lea
push
jns
arpl
idivb
out
jg
xchg
daa
pop
insb
stc
cmp
sbb
inc
addr16
outsl
fistps
rcl
xchg
inc
mov
xchg
pop
add
add
ret
pminub
ja
jmp
lds
sbb
jecxz
dec
inc
sbb
roll
xchg
xchg
out
sar
lea
cmp
sub
pop
daa
imul
mov
xchg
scas
xchg
xor
push
lahf
movsl
outsl
lock
call
xchg
mov
or
jl
fwait
outsb
je
mov
push
enter
jmp
es
push
sbb
test
or
stc
inc
cmp
pop
sub
fcompl
popa
inc
dec
add
pop
jge
fucom
push
ljmp
xor
out
flds
repz
jle
pop
negl
out
push
rorl
pushf
cmpsl
adc
pop
cmp
and
push
inc
addl
imul
adc
sbb
arpl
dec
xor
ss
cmp
xchg
xchg
imulb
mov
les
insb
adc
fistl
inc
lods
fwait
and
mov
pusha
xchg
iret
enter
mov
repz
repnz
mov
push
jg
pop
lahf
aas
js
jmp
sub
fs
es
or
cli
mov
repnz
out
out
out
movsb
mov
pusha
push
and
xor
mov
cmc
push
outsl
test
pop
icebp
ljmp
mov
decl
jg
pop
cmc
clc
xchg
es
es
or
addr16
shlb
inc
mov
dec
imul
loope
jnp
mov
jae
imul
fisttpll
jne
and
inc
pop
cmpsb
xor
inc
rcll
add
gs
xchg
shlb
inc
rcrb
mov
mov
mov
rolb
out
push
or
ljmp
sub
decl
cmp
out
fdivs
insl
jmp
push
dec
mov
push
out
in
imul
xchg
loopne
jnp
rep
popf
sbb
jbe
rdpmc
pushf
jl
sbbb
mov
jo
shrb
aaa
xorl
pop
sbb
cwtl
fcmovnbe
xchg
sub
in
inc
int3
pop
add
sub
cmp
fdivrl
aaa
faddl
loop
adc
out
xchg
adc
jecxz
jl
adc
cmp
outsl
arpl
mov
es
jbe
push
lcall
addr16
cmpsl
pop
mul
mov
cmpsl
inc
add
sub
pop
jb
xchg
cmp
cmp
repnz
les
aad
mov
imul
cmp
dec
mov
cmp
test
dec
jbe
mov
ret
fwait
cmc
mov
mov
btr
cmpsl
hlt
into
das
mov
fs
sub
cli
daa
pop
adc
scas
daa
xor
cs
aad
idiv
mov
dec
xchg
stc
dec
jge
jge
sub
mov
ja
xchg
pop
mov
add
cmc
stos
movsb
mov
out
iret
xchg
cmpsl
cmp
adc
add
cmpsb
outsb
pusha
rorl
aaa
xchg
les
insb
jecxz
sub
add
insl
sbb
sub
cwtl
loope
rorl
add
mov
and
and
cmc
lahf
imul
xchg
out
cmp
loop
dec
inc
into
xchg
inc
sbb
push
sahf
mov
repz
clc
dec
fcom
in
xchg
xlat
fwait
adc
insl
loopne
pop
lock
cmpsl
sbb
adc
daa
inc
fdivrs
dec
js
dec
shlb
and
lret
pop
pop
test
mov
shl
and
cwtl
push
lods
lods
test
or
lret
mov
stc
clc
orl
and
push
out
popa
pop
cmp
lock
xchg
push
mov
or
popf
mov
shrb
outsl
cli
jnp
out
leave
push
pop
lret
push
mov
ljmp
loop
enter
dec
and
pop
jle
cmp
popf
fdiv
inc
mov
repnz
push
xchg
jp
mov
mov
imul
imul
bound
cli
mov
push
insl
jl
mov
cli
je
sub
push
sti
mov
inc
adc
cmpsb
pusha
scas
movb
aad
enter
jb
xchg
inc
jmp
inc
jb
pop
lea
fcompl
adc
mov
jecxz
push
popf
mov
out
cli
xor
popa
xor
inc
mov
flds
mov
xchg
mov
data16
pop
mov
ss
clc
loop
mov
mov
js
mov
inc
pushf
xchg
mov
xchg
jb
insb
std
iret
pop
mov
test
pusha
cld
arpl
int
jmp
jno
mov
sub
es
mov
or
push
mov
pop
sbb
stc
inc
out
cwtl
shr
in
mov
jecxz
testb
and
faddl
or
and
xchg
xchg
ss
pop
push
repnz
inc
ss
neg
cmpsl
lahf
add
incb
xor
push
popf
lds
mov
daa
mov
mov
sub
pusha
mov
inc
add
dec
fisttps
mov
or
rol
int3
stos
inc
lret
fwait
je
movsb
in
mov
andl
lahf
pop
xchg
push
cmpsl
jge
popf
xor
and
ret
scas
sbb
inc
push
lret
dec
cwtl
add
cltd
popa
pop
push
xor
cmp
inc
mov
mov
push
adc
and
addl
stos
adc
aad
xchg
push
out
mov
test
fbstp
push
jmp
xchg
sub
rcll
pop
repnz
mov
ret
pop
xchg
jae
fiaddl
and
enter
inc
inc
push
cmc
lods
sbb
int
xchg
int3
pop
out
out
dec
and
ret
jmp
xchg
jno
jb
repnz
mov
or
inc
jl
add
mov
imul
sbb
sbb
sbb
xor
and
dec
add
ljmp
sbb
xchg
push
lea
loopne
shlb
push
inc
cwtl
insl
adc
mov
idivb
out
sub
mov
lds
mov
fcom
push
nop
stos
fldcw
add
in
int3
test
push
stos
xchg
out
int3
adc
or
dec
xor
xchg
adc
punpcklwd
xchg
fwait
add
je
fwait
repnz
cltd
xchg
std
pop
scas
pop
fisttpll
mov
dec
loop,pn
aad
pop
pop
dec
lds
rolb
add
leave
xchg
aas
fsubs
push
adc
frstor
sbb
xor
dec
testl
test
in
push
loope
out
mov
ret
dec
lock
or
daa
pop
jns
pop
std
inc
mov
insb
jae
mul
mov
lahf
or
ficompl
fwait
mov
cli
xchg
push
ret
jmp
enter
scas
push
pop
mov
and
repz
es
addr16
dec
pusha
cmp
aaa
push
sbb
or
dec
sbb
mov
or
mov
in
imul
imul
or
mov
sub
sti
push
inc
test
fs
or
int
aaa
cmpsl
lock
divl
dec
leave
ljmp
cmp
ja
mov
mov
push
dec
fs
add
and
jb
int
dec
and
sbbb
cmpsl
sbb
mov
and
ja
add
arpl
sarl
xchg
add
test
mov
loop
push
ljmp
jo
sbb
in
jecxz
xlat
add
fwait
inc
jle
ret
pop
hlt
mov
jmp
mov
out
movsl
imul
sbb
xchg
cmp
popa
test
out
pushf
cmpl
sti
enter
ret
mov
pop
sub
sub
sub
sub
pop
mov
lret
mov
sub
inc
cmp
subb
in
cmp
pop
cmp
xor
repz
pop
mov
or
sbb
dec
call
adc
ret
sub
insl
out
mov
outsb
adc
sub
fs
sub
out
mov
push
and
inc
iret
testl
add
rorb
aas
xlat
xlat
mov
adc
pop
mov
pusha
inc
in
cmp
mov
lea
cmpsl
adcb
lock
cmpsl
cmpsb
pop
enter
insb
das
ficomps
or
fstpl
xor
ret
inc
fmull
test
pop
mov
sub
pop
aam
xchg
movsl
jge
lods
fnstsw
jp
std
xchg
and
and
sbb
inc
shl
mov
lods
push
negb
dec
sbb
jecxz
repnz
jecxz
push
imul
jno
pop
out
pop
push
cmpb
rcll
in
repnz
cmp
and
jle
sub
sub
in
ret
jno
sbb
rcll
sub
mov
idivb
pop
pop
mov
adc
fwait
test
push
jge
ss
and
rorb
sbb
push
out
seto
dec
push
jb
jmp
mov
ret
bound
test
lret
push
mov
dec
xchg
push
sbb
stos
out
sbb
fs
inc
dec
cmp
test
or
pop
test
mov
lods
jecxz
inc
ljmp
repnz
inc
cmp
enter
jno
jp
push
cwtl
pop
mov
lds
repz
pusha
scas
in
sub
ds
aam
addl
enter
je
mov
sbb
shr
jmp
fwait
sbb
test
std
mov
stos
and
cmc
sbb
xchg
fisubl
imul
ret
shrb
aaa
pop
imul
addb
gs
cmc
out
xor
sbb
push
lret
or
inc
add
inc
loopne
push
fucomp
mov
fcomi
push
mov
push
test
cmp
xor
add
xchg
pusha
arpl
clc
mov
scas
push
sub
ret
and
out
rol
leave
loopne
jge
stos
popf
and
es
and
and
lods
mov
aas
adc
xor
sbb
shr
das
in
fldcw
jo
fmuls
sahf
mov
gs
and
mov
adc
push
add
out
xor
lds
push
dec
sahf
les
inc
xor
dec
movsb
mov
mov
scas
enter
mov
mov
adc
cmp
adc
and
pop
xchg
lss
sbb
xlat
insb
fmul
xlat
sub
mov
mov
mov
rcrl
fsubrl
xor
jae
pop
gs
jmp
out
in
pop
jae
lods
sarb
mov
or
pop
nop
or
mov
pop
stos
add
ja
xchg
mov
xor
jae
imul
fdivl
pop
adc
in
mov
test
or
lahf
adc
push
lcall
loop
cmp
mov
sbbb
mov
jno
xchg
adc
sub
cmp
mov
ret
xchg
loopne
dec
mov
mov
mov
out
dec
pop
or
insb
pop
mov
popa
cmpsl
data16
sbb
xor
push
push
push
or
xchg
sbb
mov
xchg
pop
call
inc
mov
cmpsl
push
icebp
adc
out
insl
sbb
in
jns
inc
sub
mov
cmp
xor
sbb
je
movb
fwait
cmpsb
daa
movsl
mov
test
in
mov
push
aaa
scas
cmp
add
and
jnp
jmp
cwtl
sbb
push
clc
mov
sbb
pop
in
adc
rcl
adc
xor
insl
in
test
xlat
iret
imul
push
lods
dec
pop
sub
jge
das
sbb
idivl
add
or
les
jmp
pop
push
xchg
and
inc
ss
sbb
scas
out
adc
cmpl
xlat
jle
dec
fisttps
fiaddl
pop
out
add
in
pushf
jns
mov
mov
insl
jne
jo,pt
xor
mov
xchg
stc
jne
mov
mov
mov
out
leave
and
dec
clc
push
mov
adc
outsl
lcall
das
mov
push
cmp
cltd
inc
jo
dec
loopne
outsl
xchg
lret
rorl
cmpl
insl
fldl
into
setne
pop
orb
test
push
movsl
in
push
mov
push
dec
fdivrs
or
stos
shll
and
or
in
daa
push
lds
cmp
adc
outsb
insb
sbb
xchg
xor
mov
aas
js
jbe
or
fnstsw
mov
push
jne
or
push
aas
std
sbb
iret
lcall
clc
dec
cmpsl
push
cli
outsb
insb
stos
sbb
loop
movsl
mov
loopne
outsb
mov
adc
andb
lcall
and
mov
xor
jne
mov
fstpt
mov
popf
xchg
cli
jecxz
mov
repz
mov
sub
aam
inc
bswap
lds
ljmp
aas
sub
dec
mov
popf
pop
push
addl
scas
repnz
insb
in
cmp
push
xor
jns
sub
sbb
push
cmp
lahf
pop
mov
mov
jae
pop
push
sbb
mov
cmp
ss
mov
dec
jle
repnz
push
je
xlat
dec
mov
push
and
jge
dec
inc
dec
sub
mov
fiadds
push
fidivrs
jl
jge
mov
pop
je
adcb
cmp
dec
out
or
inc
or
mov
in
mov
jl
int3
int
scas
mov
aas
dec
dec
push
mov
mov
push
cmp
inc
add
js
mov
sbb
mov
popf
lds
xor
call
cmpsl
sub
xchg
mov
hlt
mov
movsb
sti
js
push
sbb
jbe
adc
pop
inc
and
push
ret
xor
test
inc
mov
hlt
cmp
sbb
insb
or
cltd
notl
push
cmp
dec
cwtl
lahf
pop
pop
and
jno
ljmp
sbb
iret
xchg
jo
into
pop
pop
pusha
jae
jne
inc
cmp
ljmp
adc
js
inc
adc
xchg
or
shlb
mov
sbb
jbe
lret
int
adc
push
test
xor
lock
lea
push
pop
in
mov
sbb
fmuls
add
push
stc
inc
and
inc
push
pop
cli
test
inc
xlat
hlt
in
mov
cmp
push
lret
repz
dec
xor
dec
mov
out
stos
int
xchg
xor
enter
mov
xlat
pusha
push
push
dec
xchg
pop
dec
mov
jb
ljmp
push
aam
xor
ds
mov
adc
push
xchg
adc
xchg
jg
in
fmulp
adc
xchg
adc
daa
or
sbb
pop
mov
outsl
xchg
sub
shl
int3
popa
std
inc
push
pop
and
cmp
lods
jle
pop
mov
xor
int3
mov
mov
jmp
js
inc
fcmovne
sarl
test
out
test
jae
scas
push
cmp
into
dec
dec
pusha
mov
lock
aaa
xchg
pop
dec
cwtl
adc
or
fnstenv
hlt
aam
jle
mov
popa
add
aaa
or
mov
pusha
jle
cmc
stos
mov
pushf
ljmp
mov
mov
and
mov
movsb
mov
jae
add
xor
ficomps
mov
add
rolb
das
dec
push
mov
cmp
or
sarl
add
out
pop
lea
add
inc
ja
aaa
pop
mov
jle
sarl
outsb
imul
test
lods
arpl
and
imul
cwtl
cmpsb
cmp
inc
pop
cmc
inc
nop
fists
int
sahf
xor
insb
fs
sbb
push
cmp
fldenv
lds
inc
sahf
xchg
mov
movsb
lods
bound
fisubrl
xor
jge
or
xchg
jne
out
lea
je
pop
mov
fisubrs
mov
push
cmpsb
mov
mov
loope
adc
je
ljmp
mov
out
mov
jl
lcall
pop
outsl
ds
push
push
les
push
std
sbbb
mov
enter
mov
imul
out
mov
cmpsb
mov
mov
icebp
jecxz
inc
adc
inc
xchg
xor
jb
call
pop
push
push
mov
out
in
xor
xor
add
outsb
push
addr16
lret
out
sar
rorb
cmp
jne
lcall
shlb
mov
mov
out
push
dec
xchg
test
jb
xor
dec
popa
movsl
pop
jae
push
ljmp
fsubr
cmp
cld
jo
outsl
icebp
fscale
call
mov
push
pop
idivl
cli
pop
or
xchg
fcmovnb
shll
cmp
sub
aam
xchg
pop
dec
out
cmp
xlat
das
push
sub
push
imul
sub
lods
xor
in
fdivrs
add
aas
cmc
dec
ror
cli
sbb
lods
data16
jecxz
pop
in
in
xor
push
jo
arpl
mov
inc
and
es
ror
stos
imul
push
mov
cs
aad
pcmpeqd
inc
popa
mov
js
mov
imul
xchg
inc
xor
imul
mov
push
dec
insb
sbb
mov
rcr
xchg
inc
cmp
hlt
fiadds
icebp
xor
sbb
and
jns
das
adc
jmp
das
movb
inc
pop
ucomiss
xchg
std
scas
aam
mov
mov
or
sbb
xlat
push
lock
nop
and
mov
ret
xor
or
insl
mov
jb
lcall
push
ss
cmp
adcl
jnp
mov
hlt
call
mov
addr16
dec
fidivrs
jns
xor
add
sbb
dec
add
cli
dec
loop
das
lret
mov
mov
push
jge
shll
jg
lds
lcall
xor
cld
adc
mov
test
data16
in
sbb
jnp
orb
sub
stos
lock
sub
setl
push
dec
mov
jae
xchg
jae
je
lea
jecxz
and
lcall
stos
pop
pop
pusha
outsl
xlat
jnp
ds
int3
jg
jle
sarb
push
mov
test
test
pop
outsb
add
mov
aas
or
aam
imul
xchg
test
pop
call
cmp
pop
inc
leave
pusha
cld
inc
adc
xchg
lret
push
jb
cmp
in
fiaddl
pop
pop
sbbl
ss
xor
adc
hlt
xor
mov
cmp
pop
fsts
scas
sahf
btr
leave
xchg
cli
mov
lds
sbb
add
mov
lret
jp
pushf
pop
or
jnp,pt
or
pop
sub
ret
inc
stos
movsb
cmp
add
int
lahf
dec
jge
incl
je
xchg
add
sbb
loope
mov
xor
push
mov
add
stos
xchg
add
popf
pushf
lret
xor
cmpsl
inc
sahf
jecxz
andl
xor
popf
xor
mov
das
inc
xor
pushw
inc
jecxz
push
mov
pop
mov
lds
cltd
stos
add
xchg
jg
cmpsl
cmp
sub
repnz
cmp
inc
jp
push
mov
out
cmp
iret
lret
jno
adc
xchg
loopne
loop
shll
lret
push
adc
mov
push
xchg
mov
lret
ss
cmc
popf
outsb
aas
cwtl
and
jge
add
mov
or
sbb
in
stos
add
sub
shrb
clc
mov
js
data16
lock
jnp
push
pop
fcoml
pop
adc
lret
pop
insb
arpl
test
cmp
jle
sub
lods
or
stos
mov
mov
cmp
imul
add
aad
pop
mov
add
sbb
pop
or
pop
adc
test
pop
jns
mov
inc
add
rep
pop
mov
sti
subl
xchg
call
and
scas
repz
repz
fs
xchg
cmp
nop
pusha
aad
dec
push
out
fidivrl
pushf
dec
mov
pop
cmp
pop
lods
mov
outsb
pop
xorb
sbb
or
lret
xchg
repz
sub
xor
inc
outsb
repnz
cwtl
fwait
iret
lds
dec
das
push
sub
cmp
leave
mov
mov
popf
std
movsb
inc
mov
adc
and
testl
pop
mov
mov
mov
jecxz
ljmp
ds
scas
pop
mov
lods
aad
add
addr16
into
xor
mov
xor
popf
fnstcw
insb
dec
mov
xor
cmp
scas
fisubs
movsl
dec
xor
lds
sbb
lods
popf
add
sub
sub
mov
into
lods
mov
outsb
cltd
les
push
ljmp
scas
rcr
lods
sti
jno
pop
dec
mov
insl
les
push
xchg
inc
dec
and
fwait
scas
mov
cmp
pushf
cmc
mov
ret
call
fdivrl
lods
jge
cmp
push
jecxz
xorb
jne
xchg
sub
dec
test
leave
adc
sbb
mov
push
push
ljmp
inc
repnz
sahf
outsb
sub
lea
out
sbbl
ret
pop
ljmp
push
test
mov
fadds
shrb
cmp
push
cwtl
out
jmp
push
jo
ss
inc
jg
sti
call
fstps
add
xchg
fs
or
adc
xchg
mov
mov
sahf
scas
ljmp
jmp
push
mov
mov
loop
adc
leave
push
sbb
sub
or
pop
movsb
cltd
add
mov
xor
jae
dec
adc
xchg
lea
dec
push
lret
xor
mov
add
mov
loopne
mov
fmul
cmc
stos
pop
insb
fisttpl
call
jmp
xor
sarb
lock
jl
test
pop
push
sub
loopne
pop
out
in
push
lods
movsl
scas
push
add
scas
in
and
mov
arpl
sbb
sbb
xchg
sub
aad
lea
ret
fiadds
inc
ljmp
adc
adc
mov
insb
jge
sub
fistl
pop
fsts
jle
lods
pop
cmp
jp
cmp
nop
mov
cmpsb
call
inc
fs
add
add
popf
das
push
inc
ds
jnp
inc
es
mov
shlb
insb
insl
xchg
in
je
jg
sbbl
add
fists
arpl
jns
jmp
pop
xchg
pop
xor
push
pop
cmp
adc
sub
sub
jl
xchg
rcrl
outsb
or
sub
test
inc
pop
add
xor
jne
stc
jno
pushl
dec
sti
in
sub
push
or
in
inc
outsl
addr16
mov
adc
lret
and
dec
xchg
in
cwtl
jge
enter
or
inc
icebp
xchg
mov
xchg
push
aad
js
adc
mull
cmc
sahf
cmp
aas
dec
fmuls
pop
mov
addb
gs
in
xchg
in
push
mov
cmp
loopne
xchg
inc
and
pushf
test
lret
mov
mov
enter
aam
jp
lahf
pop
addr16
aam
or
mov
es
jp
cmc
lds
ljmp
nop
rclb
cmp
in
xor
or
adc
cmp
xor
insb
fisttpll
sbb
jo
cmp
push
cmpsb
int3
cld
pop
scas
test
add
sub
stos
mov
jmp
mov
or
outsb
repz
jmp
fcmovu
sti
jle
outsb
out
jnp
ret
stos
jle
mov
pushf
test
aad
cli
sbb
cmp
bound
fcomi
shll
ret
addl
adcl
mov
scas
push
sbb
pop
test
lods
repz
mov
aas
inc
jge
lret
dec
inc
sub
incl
scas
cltd
push
ficomps
xchg
test
mov
mov
in
or
fs
shlb
adc
adc
loopne
ret
lret
jb
jae
xor
pop
mov
test
adc
movsb
in
lahf
into
cmp
mov
es
jecxz
pop
jecxz
sub
pop
out
add
data16
test
fnsave
js
fsubl
mov
test
sahf
out
clc
pop
ss
mov
das
test
fsub
mov
leave
cmp
insl
outsl
arpl
dec
sub
mov
mov
xchg
cwtl
les
inc
das
lods
push
or
loopne
or
inc
mov
and
outsb
pop
lret
fimull
sub
ss
push
fsubrs
dec
fstl
pushf
and
lret
lret
ficoms
mov
mov
sub
dec
jge
push
sub
lods
mov
xchg
lret
sub
cltd
mov
sbb
das
lret
ss
xlat
dec
mov
ror
pop
scas
jl
or
mov
movl
mov
int3
lret
popfw
subl
jne
add
icebp
dec
mov
fsubl
enter
addr16
in
in
sti
sub
push
nop
cmp
pushf
inc
int
xchg
stc
insb
mov
cmpsb
add
fisubrl
xchg
outsb
adc
xor
lret
icebp
mov
mov
sub
and
rorl
aas
pop
mull
dec
test
daa
adc
test
loop
cmp
and
add
enter
fucomp
mov
dec
ja
leave
out
hlt
adc
pop
cmp
push
cmpsl
xchg
dec
jg
inc
mov
jbe
jmp
shrd
sbb
arpl
es
pop
cmpsl
lods
insl
aad
pusha
bound
cmp
movsb
aad
js
lds
sub
jns
xor
jno
cmp
popl
sti
sub
sub
mov
repnz
mov
add
test
sbb
orb
int
in
fwait
mov
dec
dec
jl
jge
rcrl
mov
xchg
add
sbbb
lret
cmp
mov
out
pop
stc
xchg
clc
mov
sub
test
xor
adc
shl
add
and
xor
mov
in
rol
mov
sarb
out
mov
add
push
pop
aaa
inc
jb
mov
or
or
cld
int3
mov
ja
sub
push
mov
data16
mov
das
insb
sbb
mov
xor
xor
push
imul
rcll
mov
adc
adc
or
sub
bound
int3
mov
mov
in
sub
add
insl
jle
push
sbbb
out
push
mov
fsubrs
jmp
int
orl
addr16
repz
scas
je
push
mov
adc
ljmp
test
push
push
aad
sbb
lret
and
push
dec
rclb
dec
call
xchg
movsl
fimuls
rcll
test
es
les
mov
dec
add
and
out
icebp
add
xlat
dec
pop
stos
fwait
hlt
fsubrl
mov
inc
shl
dec
lds
sarb
push
leave
scas
cs
pop
ljmp
mov
in
push
cmc
loop
addr16
mov
pop
iret
into
dec
fstps
inc
cmc
pop
leave
lcall
or
inc
sub
mov
lahf
mov
xchg
daa
pop
incb
mov
cmpsl
sbb
clc
sub
mov
ss
xor
es
aam
repnz
cmp
push
imul
pop
sbb
and
pop
mov
mov
lahf
arpl
push
dec
pusha
imul
cmpsb
xchg
cltd
pusha
loop
test
aas
stc
andb
shll
fists
daa
rcrb
jecxz
cmp
insb
xlat
nop
dec
push
xchg
div
or
inc
out
mov
out
nop
or
test
orb
sub
jmp
xor
inc
pop
adc
push
cmpsl
sub
push
popa
mov
push
loopne
and
dec
mov
push
int
pop
push
jno
in
mov
mov
sarb
sbb
pop
sti
test
inc
sbb
sarb
cmp
pushf
fstl
jns
test
repnz
test
fs
aam
jno
and
adc
dec
xor
fdivl
dec
dec
push
and
gs
lret
test
xchg
adc
daa
xchg
mov
jns
xor
or
mov
test
push
cmc
xor
push
push
pop
sahf
stos
push
jge
cli
cwtl
pushf
jbe
test
lret
lcall
jbe
addr16
shll
test
jmp
xor
shlb
pop
andl
dec
cwtl
inc
inc
xor
jg
jmp
mov
mov
or
fcomps
sar
push
shll
mov
aad
push
xor
cmpsb
push
or
and
mov
imul
push
sti
jp
sub
add
sti
aas
sbb
push
aaa
mov
enter
scas
push
pop
rol
rclb
or
mov
mulb
cmp
stos
dec
aad
leave
pop
cld
cmp
pop
push
loope
and
imul
inc
mov
add
xor
pop
or
imul
push
dec
and
cmp
mov
jge
fists
xor
addr16
and
mov
inc
mov
jbe
and
aaa
fsts
leave
nop
pop
jmp
cmp
push
push
test
jae
stos
xor
mov
rclb
hlt
adc
in
ret
es
repz
xchg
std
jne
xlat
xor
add
filds
push
xchg
mov
adc
inc
pop
pop
jp
xchg
sbb
idivb
cmp
ds
stos
mov
mov
mov
in
dec
or
mov
js
fwait
sbb
and
std
cltd
sahf
les
pusha
dec
xlat
jmp
mov
ds
loop
sub
push
mov
pop
mov
fld
push
jae
or
mov
push
push
sarl
js
inc
mov
sbb
movsb
sbb
mov
sbb
insb
mov
lods
mov
sub
lock
ljmp
pop
call
insl
dec
pop
xchg
dec
stos
inc
inc
jns
gs
cwtl
cli
mov
xor
mov
int3
imul
out
movl
inc
outsl
cmp
fldenv
in
loopne
pop
fs
outsl
ss
jecxz
mov
mov
or
jmp
iret
aam
sti
ds
dec
push
stos
push
inc
xor
cmc
sub
shr
stos
push
je
ljmp
lea
mov
repnz
scas
cmpsb
notb
lods
in
or
or
iret
lret
repnz
xchg
call
mov
jne
in
sub
mov
pop
les
push
cmp
sub
inc
test
dec
lcall
lea
sbb
sub
jl
jmp
cmpsb
popa
inc
mov
push
arpl
test
insl
out
scas
or
aas
lods
cmp
xlat
xor
pop
mov
roll
lret
mov
or
sarb
or
outsb
jp
orb
adc
lcall
jo
push
fisttpll
mov
ret
iret
cmp
xchg
out
mov
pusha
mov
in
mov
dec
sub
fs
xchg
pop
mov
shl
lds
or
aad
andl
cli
rorl
aas
push
and
xchg
fcoml
mov
jne
push
out
mov
repz
mov
xchg
pushf
sub
or
adc
push
pop
sbb
js
mov
adc
jne
fisubl
push
lods
rcrb
xchg
sbb
adc
mov
sahf
add
adc
jnp
or
xchg
je
in
pop
mov
loop
movsb
mov
js
sbb
xor
xor
icebp
or
movsl
cmp
mov
repz
shlb
cld
loop
xchg
pop
cltd
lock
sub
mov
shrl
ret
inc
dec
mov
cmc
cmp
pop
in
loop
push
roll
scas
test
notl
push
cltd
dec
lds
dec
jle
xchg
jae
jp
out
out
test
outsl
in
inc
ret
cmc
out
mov
pop
imul
jmp
mov
mov
arpl
sub
aaa
cld
xor
jnp
popa
sbb
mov
pop
lds
dec
sub
shrl
mov
fcompl
mov
inc
pop
lret
dec
iret
jge
or
insl
mov
mov
and
push
mov
push
xlat
sub
dec
cmp
mov
fcompl
inc
xchg
jb
fsubrs
jb
stc
sarb
jnp
fildl
cld
push
adcl
mov
xchg
test
in
xchg
push
xchg
repnz
hlt
stos
outsl
out
dec
repnz
dec
cmpsb
mov
hlt
or
adc
pop
xor
cmc
fisttpl
dec
or
jns
mov
add
pushf
push
add
mov
jbe
mov
jmp
push
gs
in
iret
ror
xchg
sarb
iret
sub
pop
fsubs
sti
in
stos
mov
sbb
sti
cmp
shll
sub
adc
adc
mov
cwtl
stc
mov
lods
inc
cmp
fdivl
ja
mov
jg
fs
test
lcall
cmp
es
and
shl
dec
ret
out
fisubs
xor
dec
cmp
add
mov
push
jmp
clc
mov
xchg
or
nop
sbb
mov
rorl
fld
les
stos
lock
loopne
jmp
out
call
cmp
insl
inc
pop
inc
xor
inc
jo
lcall
out
mov
ret
sahf
movsb
sbbb
lds
testl
in
jp
pop
xchg
push
and
inc
fildll
out
push
ss
or
addr16
jmp
call
dec
gs
cmpsb
out
and
jnp
sub
jb
jl
imul
rolb
push
nop
jae
xor
rorb
mov
fwait
jg
jmp
mov
xor
out
cmp
xor
dec
sub
mov
mov
ret
add
pop
movsb
cmp
sub
pop
mov
ja
cmp
cmc
or
and
fsubrs
fwait
addr16
test
ficoms
sub
out
mov
fnstsw
jo
push
push
mov
not
mov
ja
adc
adc
push
sub
fidivs
les
into
test
xlat
rcrb
popf
insl
and
push
ss
movsl
or
mov
repnz
jnp
test
pushf
mov
xchg
dec
repz
cmp
push
fs
mov
js
push
hlt
in
fmuls
je
adc
addr16
add
test
jge
clc
jp
mov
stos
lods
add
and
repz
pop
out
arpl
sbb
lods
mov
inc
pop
add
sub
dec
pushf
push
cmp
enter
shl
xor
push
add
andb
and
mov
insb
mov
icebp
out
lods
ds
hlt
data16
js
shrb
jg
and
and
int
std
andl
loope
hlt
sbb
icebp
imul
cmp
or
or
std
sub
rep
mov
subl
mov
sub
inc
std
insb
mov
arpl
xchg
orl
test
mov
inc
push
cmp
sbb
outsl
lods
pop
test
mov
pop
das
push
cmp
mov
mov
xor
punpckhwd
aam
inc
fwait
int3
movsb
lods
gs
stos
push
cmp
mov
xor
adc
xor
outsl
imull
rorb
or
stos
mov
adc
add
xchg
and
lods
add
push
hlt
add
mov
stos
jns
addr16
cld
lret
push
dec
test
add
dec
cmp
cs
cmp
stc
ljmp
add
inc
imul
rol
dec
mov
out
pop
pusha
ja
adc
inc
fucomi
xchg
lods
loop
in
jp
shll
jecxz
mov
imul
push
test
mov
insl
xor
les
dec
lcall
add
sbb
inc
loopne
pop
pusha
es
pop
xchg
cs
fbstp
lret
jmp
aad
adc
popa
sub
loop
roll
pop
xchg
out
sbb
mov
dec
inc
inc
in
rclb
bound
fldenv
push
mov
sub
jp
lcall
add
cmp
bound
pushf
in
add
sub
ret
insl
stos
push
in
jl
fs
mov
rolb
loope
inc
cmpsb
adc
out
push
mov
inc
mov
sub
enter
inc
xor
xor
mov
jbe
testl
pushl
pop
lret
cmp
testb
inc
out
imul
and
cmp
add
stc
lock
rcl
mov
dec
fcmovbe
add
das
pop
mov
out
cmp
xchg
cmp
mov
dec
mov
stos
arpl
ja
jnp
ret
mov
jo
test
mov
addr16
push
lea
cmp
cmp
imul
or
dec
xor
adc
lret
mov
push
imul
inc
rol
pop
mov
nopl
pusha
sub
arpl
in
pop
fidivl
xchg
hlt
add
add
ds
jae
xor
and
sub
leave
lahf
lret
xchg
push
sbb
add
shl
mov
mov
mov
jns
dec
fdivrs
mov
add
xor
jne
add
jne
and
jb
inc
xlat
cltd
fdivl
push
enter
cli
inc
sbbl
les
adc
sub
lea
popa
enter
mov
ret
mov
sub
mov
mov
push
xchg
pop
lods
lock
mov
cmp
dec
pusha
cld
orb
or
inc
xor
cmpsl
or
and
mov
nop
push
xchg
inc
nop
dec
jo
mov
and
pushf
pop
xor
sub
sub
push
mov
mov
push
loopne
sub
pop
adc
cmovge
dec
arpl
dec
xchg
aas
imul
fcompl
xorb
jo
mov
repz
fcoms
xor
sub
je
sbb
push
jle
cmp
pop
jns
sbb
mov
loop
adc
xchg
in
popf
sti
les
stc
pop
cld
jo
jne
adc
push
rcrl
cmp
cld
leave
std
outsl
dec
sarl
xorl
lret
inc
adc
push
xchg
lods
sub
mov
mov
orl
mov
add
push
jmp
in
sub
jge
ss
ficomps
mov
jp
jnp
mov
push
sti
inc
lahf
loop
sbb
push
lret
mov
loopne
cld
enter
inc
and
push
call
or
mov
pop
xchg
mov
jmp
bound
cmp
testl
cwtl
adc
push
push
hlt
pop
or
cmp
dec
sub
jns
ficompl
in
loopne
loope
adc
push
and
cmpsl
dec
jae
sub
lret
or
inc
loopne
fwait
mov
fwait
js
outsb
xchg
loopne
adc
mov
and
sbb
xor
shll
add
imul
sub
loop
inc
sbb
push
inc
movsb
add
inc
cs
jns
mov
push
xchg
mov
cld
jge
aam
xor
push
pushf
clc
mov
je
mov
fmul
in
hlt
es
cmp
pop
jno
lods
or
call
push
sub
into
lret
cwtl
adc
or
test
mov
or
in
mov
dec
lds
scas
lahf
push
jns
sub
fs
sub
or
mov
testb
shll
sbb
loopne
popa
dec
inc
jo
jmp
pushf
jecxz
sub
fiaddl
xchg
pop
fildl
mov
mov
imul
mov
sub
jp
jecxz
call
fadds
mov
fisubl
mov
sub
in
mov
clc
imul
pushf
xchg
pop
mov
psubd
adc
cmc
push
out
cmp
push
daa
push
mov
stos
stos
leave
adc
popf
loopne
lret
pusha
out
daa
push
push
pop
inc
mov
xor
xchg
pop
xchg
lock
sbb
cld
daa
mov
dec
aas
adc
rcrl
and
xchg
pushf
stc
in
or
lcall
lods
jp
roll
push
cmc
stos
popf
jbe
fs
insl
dec
add
fldt
pop
faddp
add
mov
dec
and
add
out
add
lret
jbe
test
lock
faddl
in
testb
push
jo
rolb
jo
xor
mov
mov
jecxz
inc
mov
pop
pop
iret
and
movsl
fsub
sarl
pop
fcmovnbe
push
or
fcoml
push
push
push
test
push
sub
pusha
movsb
xchg
test
in
mov
scas
or
mov
mov
das
mov
insl
or
xchg
lods
dec
or
sub
js
ljmp
mov
in
pop
repz
icebp
mov
jo
jnp
pop
fidivrs
cmp
movsl
cs
rorl
daa
xchg
je
icebp
data16
repnz
and
mulb
xor
idivl
in
fists
das
icebp
adc
and
cmp
ret
xchg
push
std
jae
movsb
mov
cmp
add
and
ss
jge
lahf
scas
loopne
sbb
aas
inc
movb
mov
inc
gs
scas
jo
jp
test
loop
mov
lods
push
lret
stc
dec
aaa
push
add
adc
or
std
push
push
push
lods
jae
pop
adc
and
loop
xor
cmp
out
dec
inc
sbb
and
repnz
add
push
jne
stos
cmp
lahf
or
arpl
addr16
mov
cmp
sub
movsb
jno
out
jae
popa
mov
jne
sbb
or
xchg
in
ss
lret
xchg
xor
xor
mov
cmpsb
shl
imul
addl
loope
jae
xchg
dec
sub
or
and
sbb
sbb
fsts
cmp
sbb
stos
sbb
jmp
call
jns
insl
push
ds
ja
js
outsl
xor
popf
sub
mov
add
loope
jl
ss
mov
dec
adc
hlt
mov
sti
and
outsl
xchg
xchg
adcb
mov
lods
pop
adc
sbbb
rcl
dec
fs
or
pop
push
cld
pop
adc
rcl
insb
and
sbb
iret
arpl
jmp
test
jb
or
je
push
mov
sahf
movsb
and
gs
sbb
add
jp
sub
xor
add
xorl
dec
into
xchg
test
and
add
jmp
rol
push
lods
cmpsb
mov
xchg
xor
sbb
push
xor
out
sub
lret
nop
lea
movsb
pop
pop
cmpsb
sub
cmp
mov
les
outsb
fwait
push
sbb
insb
movsl
sbb
inc
ret
rcr
sahf
lahf
push
push
dec
jp
int
mov
test
in
pop
scas
fcmovbe
cmp
je
aad
push
pop
pusha
cmpsb
sbb
daa
aaa
dec
pop
pop
das
add
or
jp
mov
add
push
pop
popa
cmp
inc
testb
sbb
mov
mov
mov
mov
arpl
sub
or
add
push
cmp
xchg
xchg
stos
push
gs
fidivl
in
jecxz
into
dec
lock
out
daa
lret
int3
pop
je
fcmovnb
jae
mov
or
ds
stc
lea
jnp
and
shrl
mov
addr16
jnp
in
jl
mov
scas
insb
push
jg
cmpsl
rcrb
cmc
mov
jbe
ss
mov
push
dec
adc
shl
test
jmp
repnz
adc
lods
ret
jmp
add
enter
or
cmpsb
jb
mov
push
lock
and
sti
in
lcall
andl
je
les
mov
aas
jne
into
push
mov
popa
inc
test
stos
out
subl
mov
add
imul
push
jg
movsb
rep
cmpsb
push
sub
sbb
out
add
mov
jecxz
cmp
jns
mov
jae
scas
subb
sub
xor
cwtl
cmp
cmp
pop
loop
arpl
adc
mov
push
add
loop
mov
outsb
hlt
shl
sti
jge
out
mov
mov
lea
push
outsb
mov
xchg
pop
xor
mov
mov
hlt
cmp
scas
data16
popf
xor
rolb
xchg
fdivrl
push
pop
test
push
or
test
xchg
cmp
cmp
push
mov
sub
repnz
adc
push
jne
imul
inc
cmp
pop
aam
lods
stc
negb
cmc
jecxz
mov
or
sub
sub
mov
pop
push
dec
pop
mov
ljmp
mov
and
cwtl
lcall
mov
outsl
aam
adc
into
sbb
mov
adc
mov
cwtl
std
sbb
sbb
scas
xchg
sbb
gs
push
mov
in
push
adc
movsl
in
and
ja
lock
xchg
stos
fdivs
mov
sti
dec
mov
div
lock
pop
mov
and
jge
dec
xchg
pop
addr16
dec
das
movsb
scas
loope
xchg
mov
sahf
mov
push
scas
inc
sbb
mov
into
jge
hlt
inc
push
mov
call
dec
cmp
popa
jo
fwait
add
xchg
out
push
into
and
inc
or
lods
xorb
sbb
les
and
fs
scas
repz
dec
test
sub
jmp
pushf
dec
bswap
outsl
push
mov
xor
lret
in
pop
iret
inc
inc
inc
fisubs
sbb
pushf
dec
cmp
dec
je
mov
arpl
insl
pop
or
jge
mov
inc
mov
pop
hlt
add
mov
lds
and
pushf
pop
dec
or
test
adc
mov
adc
push
pop
cmp
mov
icebp
dec
aas
ret
xchg
jecxz
xchg
rcrl
add
xchg
fdivrp
leave
push
cmp
ljmp
lods
pushf
arpl
xchg
enter
enter
push
mov
and
aas
inc
repnz
push
loope
lahf
xchg
dec
push
mov
sbb
loop
mov
lahf
pop
or
mov
in
jge
mov
mov
lret
mov
enter
enter
loop
jmp
cmc
push
sub
popa
ss
in
and
xchg
push
fisubrl
gs
ljmp
fcoms
cmpsl
xor
mov
xabort
mov
aam
mov
or
test
loop
jg
sub
jmp
mov
push
popf
ret
js
int
inc
lds
sbb
jp
rclb
sbb
or
mov
popa
lods
or
sarb
push
dec
adcl
cmove
je
daa
imull
pop
sbb
sub
jae
add
xchg
stos
inc
jmp
push
sbb
arpl
mov
outsl
xor
cmp
outsl
mov
out
push
inc
jne
mov
adc
lock
add
lods
and
sub
jbe
pop
push
cwtl
test
pusha
mov
lret
or
test
sbb
dec
xor
enter
adc
mov
add
pop
lcall
enter
loopne
rolb
dec
inc
pop
or
sub
bound
js
mov
pop
jno
inc
fsubs
rorb
push
les
sti
or
pop
add
jle
mov
xchg
test
or
call
andb
cld
loop
sbb
xchg
sbb
jecxz
jp
loop
dec
xchg
mov
mov
jb
xor
aam
lahf
fwait
dec
fs
out
mov
dec
je
std
xor
arpl
mov
mov
inc
popf
pop
xor
xor
dec
js
movsl
adc
cmp
pop
inc
stos
mov
adc
xchg
out
sub
jp
outsb
mov
sbb
dec
adc
mov
mov
xchg
stc
mov
mov
outsb
cmp
adc
cmp
andb
add
lock
ss
jae
ja
xchg
fistps
imul
push
call
mov
loopne
inc
loope
nop
sbb
mov
mov
pop
popf
movsl
or
or
push
cmc
pop
hlt
add
testl
jle
adc
bound
subb
call
ja
inc
daa
xchg
lds
lret
mov
scas
push
leave
nop
out
mov
add
or
int
adc
int3
mov
iret
cmp
into
and
mov
mov
popa
or
int
xlat
rcll
mov
sbb
movsl
sub
fstl
jnp
es
daa
xchg
lods
je
test
mov
jns
mov
push
jbe
test
fsubr
mov
mov
and
aas
and
pop
xchg
addb
lods
jge
insb
sbbl
into
les
and
xchg
out
xor
adc
mov
pop
cltd
cli
popa
bound
in
shr
xor
mov
popf
stos
enter
xor
pushf
mov
and
adc
xor
pop
add
int
clc
sub
jecxz
mov
or
dec
inc
std
mov
leave
fisttps
push
xlat
ds
fsubl
push
or
inc
sbbb
mov
leave
jb
test
fs
add
mov
add
sub
enter
fcmovnu
roll
and
test
sub
adc
int3
imul
sbb
enter
mov
cltd
push
shll
add
stos
pop
inc
mov
inc
pop
bound
sbb
push
sahf
aaa
xor
jp
loopne
or
add
int
cs
ja
sahf
test
popa
and
cmp
mov
pop
inc
divb
popf
and
or
outsl
xchg
dec
xchg
sbb
mov
xchg
xchg
lock
hlt
sub
pushl
push
lods
mov
jb
out
mov
insl
or
jne
lcall
loopne
push
out
add
push
sbb
jp
inc
nop
inc
cmp
sub
repnz
jo
jnp
jns
arpl
call
iret
and
in
daa
xchg
scas
pop
adc
sbb
cwtl
sub
es
fsubs
xor
xchg
mov
ret
rcrb
sub
sub
scas
mov
std
je
xor
inc
daa
add
fdivrs
mov
xor
imul
fmull
mov
lret
inc
or
iret
sti
mov
sti
loope
fs
out
add
jp
lahf
lea
and
sti
xchg
fisttps
jne
mov
cmc
push
outsb
es
mov
rclb
mov
jmp
shl
jo
jmp
out
stc
int
or
cmp
sub
xchg
mov
push
jbe
dec
mov
pop
test
je
mov
nop
test
inc
jo
iret
mov
outsb
xchg
pop
dec
aas
arpl
js
lds
fs
mov
mov
addr16
cmp
aaa
pop
sbb
cltd
mov
cwtl
out
pop
jo
mov
mov
xchg
or
jne
jle
lock
adc
or
xchg
fcoml
nop
mov
in
adc
and
inc
cmpsl
lods
adcl
dec
stc
cmp
cld
sahf
or
pusha
and
mov
call
cld
lret
out
jno
outsl
das
out
popf
cmpsb
stos
push
lret
je
adc
dec
jge
aas
mov
adc
ret
cs
push
test
loopne
jecxz
hlt
jmp
adc
outsl
sahf
stos
pop
inc
icebp
js
mov
jp
xor
les
push
jp
insb
jne
popa
pop
jp
or
dec
mov
fldl
adc
adc
neg
loope
pop
or
shlb
movsl
xor
sub
xor
mov
cmpsb
leave
push
les
nop
mov
cmp
pop
and
mov
sbb
add
dec
pop
pushl
mov
rolb
or
adc
jg
mov
sbb
jmp
sub
xchg
adc
loop
lods
cld
scas
dec
sti
jo
jmp
clc
pop
mov
jle
jg
mov
pusha
cwtl
mov
mov
xor
and
cli
xchg
mov
xchg
ret
call
xchg
out
xchg
loopne
sti
sub
mov
adc
out
mov
imul
xor
stos
sub
data16
fwait
sub
pop
testb
pop
adc
add
sbb
loope
rorb
ds
inc
mov
cltd
push
and
arpl
gs
mov
cmpsl
movzwl
sub
cmp
xor
outsb
mov
rorl
popf
xchg
lods
cmc
push
inc
pop
or
ja
mulb
aas
movsl
rorb
bound
pop
nop
push
mov
sbb
mov
and
stos
jmp
inc
dec
jge
xchg
nop
pop
bound
push
jno
jecxz
rorb
test
bound
rorl
mov
mov
bound
scas
inc
ficoms
inc
sbb
push
adc
shlb
negl
adc
jg
fs
mov
inc
insl
insl
xor
rcr
mov
out
data16
xor
inc
or
ja
lock
mov
call
fisttpll
adc
adc
jae
es
push
and
lahf
mov
inc
pushf
inc
mov
sbb
ds
andl
sbb
xor
jle
or
dec
push
add
f2xm1
in
pop
fs
aas
or
test
xchg
sbb
push
mov
xor
lods
js
cmp
ss
pop
repz
push
xchg
aam
lcall
roll
repnz
mov
or
lods
adc
repnz
enter
sahf
stos
jle
and
pushf
and
jns
add
xor
call
fsubs
or
adc
cmp
or
pop
stos
xchg
sub
daa
push
jmp
outsl
lods
bound
std
pop
adc
lea
insb
cs
lret
fiaddl
rcr
xchg
mov
xor
jmp
sub
xchg
xchg
dec
hlt
pop
outsl
cmp
ja
mov
push
jne
cli
sarb
pop
aaa
push
ja
iret
or
lock
mov
sub
pop
inc
xchg
jge
jae
push
aaa
mov
pop
fstp
punpckhdq
in
adc
popa
aaa
movl
jo
imul
mov
out
out
and
stos
add
and
aas
dec
xor
iret
fwait
mov
pop
push
xor
enter
jg
mov
pop
data16
push
jge
mov
dec
push
shl
hlt
fidivrl
inc
cmpsb
shl
push
mov
data16
test
dec
mov
adc
jp
outsb
xor
add
adc
or
loop
xor
push
out
stos
cmpb
filds
clc
aam
jnp
xchg
int
or
push
pmaxsw
packsswb
xor
sub
imul
xor
leave
outsb
mov
dec
es
mov
cli
sbb
sbb
sbb
stos
push
cmp
or
or
xchg
jecxz
pushf
dec
sarl
pop
add
xor
and
movb
movsb
dec
and
cmp
mov
add
int3
xchg
imul
pop
lock
sarb
leave
sub
xchg
pop
sti
sbb
scas
js
loope
sub
xchg
push
pop
mov
orb
push
pop
or
pushf
pushf
ja
jae
stos
sub
push
pop
movsb
xchg
out
shl
push
imul
or
adc
pop
xor
inc
lods
mov
mov
fmull
sbb
pusha
jg
fmul
sub
std
sub
movsl
out
nopl
cmp
jl
sahf
jg
xchg
clc
mov
jg
adc
xor
inc
xchg
sbbb
std
and
pop
enter
cmp
adc
jecxz
fs
adc
mov
push
mov
cli
aas
shll
es
jg
lret
adc
inc
jge
femms
icebp
fisubs
jae
arpl
inc
lods
mov
mov
int3
fmull
sub
in
cld
call
and
jg
outsl
or
and
or
or
movsl
lcall
ja
mov
ret
sarl
fistpll
test
addr16
xchg
lcall
ret
pop
mov
ja
stos
sbb
add
arpl
aaa
dec
push
inc
push
inc
mov
sti
lods
push
arpl
pop
push
insb
inc
cmpsb
fmull
or
imulb
rolb
or
mov
das
cld
aad
mov
pop
or
mov
sbb
and
add
das
mov
or
aas
daa
push
sub
mov
and
cmp
push
mov
insl
cmp
aas
ret
lahf
bound
movsl
ret
scas
imul
loopne
and
adc
insl
test
test
mov
insb
jmp
xchg
and
lock
and
adc
cld
xor
mov
push
mov
idivl
lock
sbbl
sub
lret
int3
add
arpl
inc
out
shrb
out
imulb
sub
aaa
sbb
and
in
dec
icebp
iret
mov
cmpsl
pop
sbb
jl
or
into
lret
test
testb
inc
or
jmp
add
lret
rcll
pop
cmc
ss
jge
push
pop
push
in
in
les
pop
lret
sub
mov
xchg
xchg
int
fwait
mov
xor
ret
bnd
lahf
mov
out
pop
insl
dec
mulb
aas
inc
cmc
js
iret
mov
incb
push
add
stc
std
pop
lcall
xor
lret
adc
sub
lcall
cwtl
lods
jnp
out
pop
sub
or
ja
shll
out
jbe
popa
cs
adc
sub
lret
mov
inc
cmp
sub
outsl
fdivp
js
mov
shl
out
les
mov
stc
ja
pop
or
add
dec
dec
orl
loope
addb
cld
aad
movsb
xor
xor
jmp
pushf
pop
mov
fnstcw
mov
lds
xchg
pop
fisttpll
mov
add
in
sbb
push
icebp
test
cs
das
and
push
sahf
pusha
aas
sahf
adc
and
push
mov
or
ss
insl
mov
lahf
hlt
fisubrs
jge
fmull
insl
out
insl
test
es
and
cmp
jmp
pop
mov
lcall
mov
mov
iret
ja
and
push
push
pushf
dec
sub
mov
and
mov
inc
push
insl
mov
outsb
inc
xchg
jno
loop
mov
out
push
mov
mov
push
out
fs
pop
aas
pop
sbb
sbb
std
push
push
sbb
cmpsl
mov
cmpsl
js
push
aaa
call
push
lock
mov
icebp
inc
jp
mov
sbb
in
enter
les
adc
cli
mov
iret
mov
stos
fimuls
cwtl
mov
sbb
das
dec
adc
mov
cmp
mov
lcall
in
inc
add
jge
cwtl
inc
xchg
jb
in
jmp
out
inc
mov
imulb
cmp
push
stos
cmp
popf
pop
jmp
dec
mov
jno
add
in
jmp
das
pusha
movsl
push
mov
jnp
sub
push
or
pushf
pusha
scas
sbb
inc
mov
push
filds
mov
or
and
lods
fcmovne
popa
incb
lahf
sub
mov
sbb
pushf
scas
fiaddl
xchg
jmp
aad
push
pop
loopne
mov
inc
out
inc
call
dec
sbb
jae
mov
popa
lret
sbb
lret
outsl
shlw
mov
pushl
imul
pop
aad
test
jae
add
add
inc
insb
mov
sub
in
mov
jg
sbb
aad
xchg
cltd
jg
sbb
jb
pop
or
pop
aas
inc
in
or
imul
mov
mov
stos
pop
call
adc
mov
repnz
out
cmpsb
repnz
jno
sahf
fnstcw
loopne
into
sub
bound
mov
dec
andl
iret
int
sub
fwait
fistpl
fsubrl
mov
cmp
cltd
cmpsb
sbb
mov
jbe
fdivr
xor
mov
lods
and
cmp
push
aam
pop
mov
mov
cmp
pop
dec
pop
push
jbe
in
es
jle
mov
cld
dec
mov
mov
les
pop
push
mov
xor
jae
shrb
sbb
mov
mov
mov
inc
fwait
enter
and
mov
roll
sbb
xchg
shll
lds
int3
sbb
adc
and
push
shll
into
int
mov
push
in
jae
sbb
int3
ja
icebp
sub
xchg
stos
push
dec
xchg
push
dec
cld
mov
mov
or
add
add
faddl
sbb
jns
fiaddl
mov
or
push
push
rclb
mov
ja
push
jne,pn
in
adc
test
enter
hlt
jbe
xchg
and
ret
fsubs
sbb
nop
js
inc
hlt
dec
negb
lods
mov
loopne
pop
and
pop
in
cli
ljmp
arpl
lea
sbb
dec
lret
sub
outsl
mov
aad
inc
push
xchg
imulb
push
push
daa
dec
daa
mov
mov
lret
sub
xchg
movl
cltd
mov
aam
andb
outsb
setg
or
pop
or
fs
xor
mov
loope
into
hlt
mov
jecxz
sbb
fistpl
mov
dec
ds
and
in
or
fmulp
jl
mov
mov
xchg
shll
sbb
push
pop
int3
cwtl
pop
out
inc
dec
xchg
push
icebp
jae
sbb
push
test
xor
mov
fisttpll
pminsw
or
in
out
inc
sbb
push
leave
faddl
hlt
lods
stos
pop
inc
jne
xchg
mov
je
ret
add
in
and
jle
call
nop
pushf
lahf
rcrl
dec
aaa
inc
sbb
lret
add
pop
mov
jne
sub
and
or
fimull
gs
clc
enter
out
add
lods
xchg
sbb
mov
mov
add
aas
pop
add
mov
sbb
inc
sub
fadds
jnp
arpl
or
out
xor
int
mov
pinsrw
bound
xchg
xchg
jo
jecxz
pop
cmp
pop
pop
dec
ja
mulb
dec
push
cwtl
jb
xchg
lock
int3
add
cmp
and
mov
pop
fcoml
stc
sbbb
jno
push
insb
pusha
pop
sub
mov
jb
sub
mov
iret
imul
sub
jb
mov
push
mov
mov
add
xchg
jns
mov
pop
lahf
push
roll
jo
jb
test
adc
lds
int3
jmp
sahf
xor
jge
xor
pop
jb
das
bound
outsb
ficompl
inc
and
jno
pop
or
cmpsb
cs
xchg
xor
je
jnp
pop
test
iret
push
fnstcw
fdiv
jecxz
pusha
sub
outsb
and
sub
sbb
stos
push
push
sahf
pop
std
inc
lock
mov
adc
jo
xchg
push
and
imul
xor
les
or
jge
repnz
add
inc
movsb
xchg
mov
ret
ret
sbb
sub
sarl
adc
mov
fxch
dec
pop
mov
push
jp
stos
sub
or
mov
fisubrs
leave
cmp
push
push
rorb
imul
stc
imul
sub
sub
or
adc
mov
fildll
shrl
sub
add
xor
push
inc
sbb
pusha
ja
lahf
add
rcr
repz
add
mov
stos
pop
xchg
lret
jp
sahf
cmpsb
test
loope
inc
dec
ja
add
mov
or
dec
frstor
adcl
mov
mov
xor
mov
and
sbbb
ss
fcompl
mov
mov
hlt
inc
jle
inc
insl
enter
outsl
mov
das
fistpl
sbb
dec
adc
jne
dec
aad
popa
add
stc
aad
fwait
mov
push
ja
orb
xchg
call
cwtl
cmp
aam
or
daa
sti
jo
int3
inc
sub
add
sbb
adc
adcl
adc
repz
jl
inc
push
lea
inc
subl
push
insl
popa
push
std
loop
sub
imul
sarl
dec
or
sub
out
cld
and
push
inc
mov
repz
loopne
sub
sub
push
das
or
es
or
pop
cmp
adc
xchg
pop
repz
push
roll
lret
push
jge
out
nop
lock
adc
cmp
shll
cwtl
mov
xchg
adc
add
xor
dec
and
mov
es
or
cli
cmpsl
xor
popf
mov
loopne
outsl
xchg
pop
das
iret
jbe
pop
xor
pop
push
jnp
sbb
add
fwait
push
cli
adc
rcr
sbbb
inc
scas
iret
movsb
in
paddb
aas
xchg
jae
jp
clc
and
lds
ja
negl
jle
and
push
pop
inc
push
adc
cmpsl
jno
inc
in
xchg
cmpsl
ljmp
sahf
lret
mov
cmp
fs
in
or
cmpsl
dec
scas
ss
rcll
push
gs
xchg
dec
and
add
xor
jns
stos
jecxz
push
mov
jg
add
add
es
jo
jnp
mov
or
repnz
popa
and
pop
aam
movsl
sbb
sahf
rolb
mov
test
mov
xchg
testl
or
ds
xchg
xchg
xchg
xor
mov
sbb
js
jno
push
push
push
adc
jg
jmp
mov
jno
or
and
or
std
fmull
out
jecxz
movsl
and
push
cmc
add
das
push
xchg
mov
and
pop
fs
xchg
mov
add
rclb
mov
add
mov
mov
pop
fidivl
pop
dec
pop
mov
mov
test
inc
lcall
es
aam
notb
cmp
pushf
out
sub
test
push
es
test
les
les
add
ficoms
mov
gs
sub
test
arpl
ficoms
mov
add
ret
stos
mov
push
in
jge
mov
and
rolb
test
imul
sar
mov
test
test
movsb
leave
jmp
lods
mov
js
pusha
adc
sbb
call
add
mov
inc
out
sahf
cltd
js
inc
sbb
ficompl
hlt
jle
ljmp
divl
rcrb
pop
ljmp
mov
jbe
xchg
insb
pop
scas
fdivl
repz
mov
data16
xchg
xor
leave
sbb
inc
ds
inc
pop
scas
sbb
cli
fistpll
nop
addr16
in
add
jnp
mov
test
test
mov
lret
sbb
cmp
jg
push
push
push
int3
lods
mov
add
mov
xorl
ja,pn
and
int
insl
inc
and
sub
popa
push
or
daa
sbb
sub
cmp
push
or
fwait
inc
inc
fisubl
mov
lret
lret
shrb
lods
jge
and
aaa
fstpt
call
addl
mov
stos
inc
adc
int3
data16
lcall
sub
pop
scas
lods
add
fstps
add
out
sub
dec
jne
mov
je
push
and
adc
popa
or
les
push
or
and
cmpsl
bound
sub
mov
cmpsb
ljmp
mov
js
pop
push
add
int
or
xor
jle
into
ja
push
mulb
jmp
inc
faddl
je
aad
insl
jl
clc
cwtl
shl
jl
jbe
sti
sti
std
cltd
pop
xchg
arpl
subl
add
mov
loopne
add
test
movsl
cmpsl
push
daa
xor
loopne
push
pop
push
lret
pop
adc
jnp
nop
test
add
add
xor
ja
pop
jecxz
pushf
lret
sahf
push
add
iret
outsl
popa
sbb
or
inc
into
add
jle
repz
into
mov
ds
ret
icebp
shll
or
push
cmp
sbb
and
stc
test
jb
popf
cmpsb
push
push
call
xor
and
dec
cmpsb
push
mov
mov
cmp
push
sub
rcrl
jnp
sbb
lods
jle
gs
inc
xorl
xor
jnp
sbb
dec
xchg
fstpt
xchg
enter
xchg
adc
test
sbb
fcmovu
dec
aad
adc
jae
and
repz
mov
aas
testb
adc
ret
or
cltd
mov
add
cmp
xchg
pop
lods
addl
add
and
or
scas
cmc
cmp
mov
insl
nop
and
adc
insb
dec
jge
sbbb
lahf
repz
sub
pop
push
cld
lods
int
push
adcl
add
call
pop
loop
dec
mulb
mov
pop
out
inc
pushf
loop
mov
and
inc
sub
adc
mov
inc
jbe
mov
mov
add
or
std
stc
into
test
push
jecxz
cmpsb
and
sarl
imul
xor
mov
mov
push
mov
dec
pop
and
in
inc
test
push
imul
xor
pop
dec
popa
in
mov
xor
jb
or
push
cmpl
mov
jnp
lcall
mov
pmulhuw
leave
or
mov
push
nop
xchg
fs
stc
push
fisubrl
cmpb
mov
stos
cmp
insb
add
jge
shlb
loope
sbb
cmpsb
and
imulb
push
lods
aaa
cmp
mov
add
pop
pop
mov
xchg
std
cmp
jnp
jno
xor
jns
aaa
movb
dec
add
test
inc
stc
xchg
rcrl
mov
out
jle
pop
in
popa
adc
xchg
andl
fsubrs
xchg
mov
movb
sbb
adc
shlb
sub
mov
xor
das
mov
repz
fwait
or
mov
mov
sahf
in
lods
adc
dec
rclb
mov
movups
pop
mov
idiv
sub
fisubrl
ret
lods
in
lods
push
adcb
jb
inc
insb
and
sbb
das
pop
test
ds
rcll
push
call
rolb
xchg
insl
les
jb
ljmp
nop
das
nop
gs
or
push
cmp
adc
imul
sub
xchg
jecxz
dec
test
outsb
push
icebp
mov
cmp
xchg
push
xchg
xor
mov
pop
popl
jl
ds
inc
adc
clc
xorl
daa
inc
lret
dec
pushf
daa
outsl
int3
jne
add
pop
mov
lock
pusha
jge
daa
pop
outsb
dec
std
cmp
jge
je
stos
dec
in
rcrl
sbb
mov
push
sbb
mov
cmp
and
roll
push
call
imul
fsubrl
mov
loopne
xchg
inc
es
pop
cmp
test
pop
xor
and
push
add
rorb
bound
push
adc
adc
jns
jo
rorl
hlt
dec
shlb
sub
push
into
inc
outsb
ds
mov
push
and
sub
lahf
scas
ret
jmp
jmp
sub
addr16
inc
sahf
fisubl
icebp
es
jne
mov
fldenv
sub
jmp
movb
xchg
jnp
je
push
inc
into
repnz
orl
push
fldl
xchg
push
jns
pushf
inc
ret
push
dec
testl
inc
leave
adc
out
jbe
xor
fsubrs
sub
cmpsl
cmpsl
add
loopne
adc
mov
clc
cli
int
jns
xchg
addr16
cmpsb
jmp
stc
add
xchg
cli
out
mov
xchg
out
pushf
lods
xchg
imul
mov
mov
pop
pop
xor
mov
test
lods
test
rorl
push
jno
pop
aaa
loopne
xor
cmp
jge
adc
inc
shrb
addr16
ficoms
or
lds
ffreep
pop
push
divb
popa
out
in
push
shll
xor
out
jb
test
jp
testl
fisttpll
test
mov
pop
lret
rcr
push
adc
enter
push
pop
and
into
push
in
pop
mov
jmp
fidivs
dec
test
jmp
dec
fxch
jns
outsl
jnp
push
loope
jp
jne
adc
rolb
push
das
nop
sti
xlat
pusha
cltd
add
push
lods
jl
ret
lcall
sbb
adc
sub
cmp
pushf
loopnew
jl
int
add
stos
out
push
mov
jbe
data16
sbb
jo
lds
push
push
dec
sti
inc
or
push
inc
jne
jb
nop
mov
mov
test
hlt
mov
pop
cmc
sub
outsl
jge
aaa
leave
scas
fnstsw
or
push
dec
cs
ss
outsb
mov
push
mov
push
aad
les
mov
pop
hlt
push
inc
pop
mov
rorl
nop
cmp
mov
pusha
push
fwait
adc
test
nop
jns
jg
popf
xchg
pop
xor
cmc
cld
mov
stos
es
out
lods
mov
mov
push
xor
addl
sub
sbb
mov
data16
fisttpl
jns
jg
sub
xchg
push
int3
lea
ret
jmp
mov
push
subb
sbb
sbb
nop
lcall
cli
out
cmp
rclb
or
roll
stos
pop
lock
dec
cmp
cmp
movsl
fadds
xchg
sahf
mov
testb
mov
xchg
sbb
pop
dec
pop
mov
aam
or
dec
and
aam
into
xchg
add
pop
lods
icebp
jp
je
leave
mov
jmp
pop
adc
testb
push
jbe
scas
hlt
pop
push
mov
sarb
pushf
out
int
dec
sub
repz
fsubr
mov
jl
xor
mov
push
and
aas
das
jo
mov
push
or
cmp
pop
cltd
pop
inc
xor
mov
xchg
das
add
inc
xor
hlt
repnz
cmp
cmpsl
xor
sahf
call
outsl
and
xor
fmuls
js
ret
cmpsl
inc
imul
xor
ret
sbb
mov
push
cmp
nop
mov
push
lret
dec
push
xor
aas
mov
or
inc
shll
je
jecxz
jo
mov
inc
hlt
js
cmp
or
nop
cli
or
movsl
fmuls
ljmp
cltd
sbb
mov
lahf
sahf
xchg
adc
xchg
and
js
fxsave
inc
add
mov
jp
aad
hlt
rorl
fdivs
fdivrl
pop
out
lock
fadds
sbb
test
into
adc
push
subb
insb
dec
pushf
das
jno
or
imul
xor
jecxz
adc
mov
inc
adc
xor
es
mov
aas
push
shlb
imul
test
mov
lds
jl
aam
push
cmp
push
mov
pop
lret
mov
popa
add
cli
mov
aam
rcll
sub
sub
test
stc
fwait
add
je
fdivl
pop
push
add
pop
cmpsb
pop
mov
mov
sti
inc
je
pop
arpl
xchg
fstpl
cltd
ficoml
jne
mov
or
imul
mov
mov
sub
popf
clc
add
bound
les
sbb
sbb
ss
stos
cwtl
rcr
push
pop
ret
leave
call
stc
mov
dec
in
lahf
test
sub
das
pop
aas
add
les
icebp
fstpl
jbe
imul
cmp
ss
imul
jmp
dec
rcll
xchg
icebp
jb
jnp
jmp
mov
mov
mov
sbb
mov
rcr
addr16
popf
adc
in
sbb
jo
in
test
xor
stos
test
or
xor
aam
inc
adc
int
flds
sbb
movl
adc
mov
and
fwait
insl
pop
or
repz
movsb
and
inc
cmp
cmp
jl
mov
ret
out
arpl
imul
jo
idiv
repz
fisttpl
aaa
jne
xor
push
sub
mov
pop
jmp
test
xchg
outsb
shlb
lret
jg
je
xor
dec
push
dec
inc
out
aaa
pop
fistpl
ss
mov
push
shl
sub
pop
insl
pop
in
js
push
jle
mov
stos
mov
fldcw
popa
cmp
inc
mov
or
jge
mov
ds
xchg
or
lret
push
fwait
ret
jge
jmp
aas
lret
adc
adc
mov
aam
gs
mov
mov
fldl
adc
int3
push
ret
xor
mov
push
imul
dec
add
movsb
pop
inc
out
push
iret
out
push
or
jmp
or
ret
sbb
pop
mov
movsl
mov
or
bound
xchg
mov
mov
test
mov
fisttpl
aam
push
inc
jg
shll
rorl
jo
into
into
repnz
dec
iret
fwait
dec
sbb
xchg
inc
fisubrs
cmpsl
xchg
jne
xchg
aad
addr16
dec
orl
jmp
dec
mov
ss
outsb
fcomps
or
in
ret
mov
jle
pop
popf
jno
daa
xchg
dec
je
cwtl
lds
cld
dec
orl
mov
xor
cmc
push
push
sbb
mov
ja
inc
pop
jl
popf
push
inc
int3
push
cld
enter
dec
push
fwait
inc
and
mov
mov
ret
ds
pop
loopne
les
cmpsl
lods
mov
pop
icebp
pop
dec
aam
pop
shlb
mov
into
insb
das
push
repz
xchg
repz
scas
ret
pop
gs
fisubs
scas
cwtl
dec
arpl
or
xor
push
cmpsl
cltd
jne
cmpsl
gs
cmpsl
into
mov
mov
adc
fwait
ret
loope
fstl
lahf
inc
mov
movsl
test
icebp
add
cwtd
pop
outsl
pop
in
std
mov
add
pop
or
jmp
popf
add
fcomip
dec
xchg
mov
push
inc
test
cltd
xor
ss
mov
dec
sbb
push
arpl
cld
aaa
mov
cmpsb
push
outsl
pusha
mov
jbe
icebp
pushf
mov
push
je
rcll
jb
ja
jns
xchg
andl
or
push
aas
bound
sbb
mov
scas
enter
pop
and
mov
dec
lahf
push
mov
mov
je
xor
lcall
pop
aam
adcl
adc
xchg
push
cli
andb
mull
fcoml
ja
cs
insl
testl
ret
out
std
sbb
cmp
and
inc
add
subb
lods
xchg
movsl
jp
cmp
pusha
or
jno
mov
fidivrl
leave
repnz
jge
stos
test
or
push
push
divb
sbb
addr16
leave
sbb
cmp
sub
addr16
out
jnp
data16
stos
mov
pop
lahf
push
pop
mov
pop
xor
out
or
imul
bound
inc
mov
adc
or
mov
sub
aad
xor
scas
cld
mov
loope
and
imul
cltd
push
jae
xchg
mov
add
lcall
jecxz
gs
mov
dec
push
mov
loop
push
or
fcoml
xchg
and
les
mov
mov
scas
test
ret
xor
pop
test
mov
aad
clc
push
sub
jl
adc
jl
or
pop
inc
or
xor
and
mov
mov
dec
loop
sub
out
sub
sbb
push
leave
outsl
cmp
shll
and
push
sub
lods
mov
daa
addr16
movsl
loopew,pt
scas
mulb
test
jge
or
add
add
mov
and
jb
out
repz
mov
cmpsb
pop
outsl
pop
dec
sti
mov
mov
mov
dec
adc
fmuls
stos
stos
mov
fistps
test
pop
and
add
pop
movl
insl
adc
imul
inc
sbb
sub
jecxz
pop
cmp
dec
cmp
jbe
pop
cmp
cmp
sti
sub
ljmp
mov
or
xor
outsb
pop
orb
push
xor
mov
lret
bound
pushf
xchg
wbinvd
ja
icebp
dec
sbb
movsl
int
inc
repnz
out
inc
arpl
and
outsl
ds
push
dec
lea
jl
aam
fisubs
adc
fildl
fsubrs
shlb
cmp
aad
mov
jle
insb
es
mov
dec
mov
sub
sub
push
fisttpl
pop
clc
stos
inc
repnz
bound
ljmp
out
imulb
sub
jle
push
pop
ret
sub
cs
lret
movsl
nop
mov
sbb
inc
gs
adc
dec
add
xchg
dec
xchg
or
ds
cld
jnp
std
mov
iret
fwait
ja
push
nop
dec
sub
pop
mov
sbb
imul
cmp
pop
repz
inc
sbb
insb
rcrl
ss
fisubrs
and
jecxz
adc
pop
push
lahf
and
test
xchg
es
xchg
icebp
add
mov
in
movsb
cmp
mov
dec
jmp
nop
cmpsb
pop
add
aaa
je
sub
lods
shl
shl
jo
jmp
or
lds
cltd
icebp
popf
fnstsw
fisttps
out
add
loopne
xor
xchg
mulb
sti
dec
imul
xor
pop
fistl
lret
test
or
and
fwait
loopne
jl
mov
pop
mov
aas
inc
or
cmc
aaa
decl
fistps
mov
adc
sub
or
sahf
sbb
aam
cmp
jbe
pop
and
frstor
inc
adc
ret
adc
lods
jg
push
mov
sub
or
cmp
insb
ja
mov
xchg
mov
aam
xor
das
sbb
mov
popf
or
mov
pop
or
mov
addr16
inc
cmp
popf
add
push
ret
int3
mov
ljmp
test
and
mov
cmpsb
outsb
xlat
js
add
int3
push
xor
add
inc
hlt
mov
dec
push
pop
test
dec
sub
outsl
xchg
ds
popf
testb
jle
fdivrl
jns
mov
sarl
push
push
ret
cltd
inc
and
jmp
enter
dec
popf
call
aad
xchg
mov
xor
lea
fnsave
add
mov
fcoms
daa
out
test
sub
jmp
lea
adc
sbb
jmp
push
sbb
jo
pop
or
and
ja
dec
add
icebp
nop
leave
les
or
pop
or
mov
test
xchg
mov
jl
lret
fwait
xchg
popa
popf
adc
pop
mov
and
ficompl
mov
in
data16
leave
dec
stos
mov
adc
ret
mov
imul
stos
and
sbb
hlt
in
repnz
lds
xchg
mov
test
pop
fistl
jg
and
fsub
jbe
push
adc
jmp
pop
lock
xchg
adc
inc
mov
stos
cmp
notb
and
cmpsb
jbe
or
xchg
cmp
mov
test
enter
add
xor
dec
ret
jecxz
dec
and
cmp
je
repnz
arpl
in
push
mov
sbb
ja
add
cmp
lcall
mov
jbe
es
mov
repz
andb
push
loop
mov
mov
test
inc
dec
pop
adc
xchg
add
push
popa
mov
jg
aas
das
pop
testl
ja
shrb
dec
or
test
mov
dec
les
test
jmp
pop
cmp
inc
sub
int
mov
xchg
lahf
popa
push
shr
jge
sub
leave
adc
dec
cwtl
fisttpll
repz
nop
jae
call
push
fwait
clc
dec
sub
push
mov
in
pop
adc
popf
adc
clc
jecxz
sbb
stos
mov
out
dec
enter
xlat
rolb
pop
mov
iret
jns
iret
sub
and
jg
jne
jg
xchg
out
mov
sub
in
xchg
cmp
pop
adc
xor
adc
and
mov
dec
iret
lods
lea
add
jbe
add
clc
stos
inc
pop
sub
cli
scas
push
hlt
xchg
lea
push
pop
in
and
inc
jno
into
icebp
push
push
or
adc
cwtl
loopne
cwtl
push
insl
pop
stos
jl
cmp
sub
imul
inc
and
fcom
lods
mov
fdivl
add
les
push
or
lods
push
add
in
add
out
cmp
dec
sub
shll
nop
jo
das
cmc
stc
xchg
add
stc
daa
dec
inc
outsb
cmp
xchg
add
cmp
loop
lock
pop
cmp
ret
mov
mov
shll
pop
push
je
push
mov
addr16
out
lret
or
and
cwtl
sti
mov
data16
scas
stos
dec
in
lea
gs
lret
cmpsb
aad
push
negl
lods
lcall
push
and
rcl
inc
lock
dec
mov
add
cmc
inc
lahf
push
pop
dec
outsb
mov
mov
dec
sbb
int
dec
ret
ds
push
fdivs
cmpsb
shlb
out
test
add
hlt
and
icebp
push
cmp
xchg
dec
out
in
imul
sbb
lods
bnd
xchg
mov
push
addl
xchg
scas
test
lods
out
lret
add
cs
aaa
add
push
cwtl
nop
mov
repnz
icebp
inc
xchg
je
mov
push
mov
mov
cmp
mov
dec
mov
push
std
push
and
inc
stc
enter
mov
out
cld
out
add
sub
vcvttss2si
push
leave
jl
mov
dec
mov
das
sti
push
push
push
test
jns
mov
jns
in
into
push
cmp
dec
nop
mov
inc
cmc
adc
jge
jo
loopne
mov
sub
mov
psubsw
outsb
adc
xchg
hlt
lea
xchg
adc
xor
inc
cld
into
pop
arpl
xor
jmp
pop
sub
mov
sub
outsl
dec
jno
les
rol
bound
pop
insb
mov
dec
pop
ret
movsl
dec
out
dec
testl
xchg
daa
xchg
loope
add
into
fs
push
jge
stos
inc
inc
and
push
push
subl
mov
push
add
jge
xchg
push
sbb
popf
imul
or
dec
das
js
mov
mov
pop
dec
mov
imul
in
stos
cld
lcall
lods
das
out
adc
inc
sub
adc
xlat
fstpt
aad
fdivrl
push
movsl
loopne
sub
std
mov
mov
test
enter
adc
inc
int
push
sahf
pop
test
mov
push
loopne
jmp
in
inc
in
dec
inc
mov
jb
xor
dec
loope
sub
sub
data16
sahf
xchg
in
push
sub
pushf
cmpsb
or
mov
lods
fisubs
cmpsl
dec
rcrl
jnp
or
lds
jl
shlb
jmp
in
lahf
lods
cmp
sub
sub
in
out
or
lea
add
gs
je
pop
dec
lods
outsb
je
push
mov
xchg
sbb
xchg
inc
inc
cld
roll
and
push
nop
adc
pop
cmp
xor
and
shr
shrb
push
scas
sbb
inc
jb
add
jmp
push
add
cmp
cwtl
mov
cwtl
cmp
lcall
pop
dec
leave
xor
add
push
cld
mov
push
iret
out
mov
mov
testb
sbb
es
xchg
repnz
push
xchg
mov
add
add
mov
add
dec
daa
clc
loop
jb
out
ret
adc
mov
in
ret
pushf
mov
mov
xor
cmp
pop
es
lea
push
push
cmp
push
or
push
adc
outsb
sub
inc
sbb
xor
fimuls
scas
or
push
pop
int
xor
xor
pop
rcrl
in
ds
ja
shrl
add
adc
pop
lahf
pop
imul
pop
arpl
mov
lock
cmc
pushf
mov
mov
mov
push
out
pop
mov
lahf
enter
dec
add
fdivs
in
imul
ljmp
jmp
fistl
lods
fsubs
mov
pop
cmp
and
ret
movl
fs
clc
stc
jle
pop
fsts
rolb
testl
xor
ss
orl
xchg
outsb
mov
add
mov
mov
int
shl
mov
inc
int
sub
sbb
sub
jne
push
bound
pop
jo
ret
mov
inc
inc
dec
push
jne
and
cmp
rcll
in
nop
xor
ljmp
imul
dec
int3
mov
sub
lret
loop
repnz
adc
adc
clc
xchg
repz
loope
mov
movsl
jo
jo
insb
xchg
mov
inc
pop
cmc
int
repz
push
pop
mov
lods
bndldx
ret
into
push
sbb
adc
in
and
sub
sbb
jno
popa
loop
fwait
xor
outsb
popa
inc
jp
popa
out
cmp
lcall
leave
and
mov
cmp
inc
or
shrd
jg
and
fldcw
repnz
lret
lods
inc
push
pop
test
cmp
sbb
sarl
fwait
cs
mov
mov
scas
jb
pop
ds
xor
ret
pop
push
popa
mov
xlat
or
sahf
cmp
sub
cmp
and
scas
bswap
ret
sbb
notb
clc
out
in
js
sub
xchg
mov
xchg
sti
stc
cmp
lret
dec
imul
pop
cmp
cs
enter
fidivrs
or
leave
sbb
aam
cli
sbb
pop
jmp
cwtl
mov
inc
mov
jo
inc
mov
inc
sub
shlb
mov
jnp
js
sub
sub
push
imul
inc
push
scas
cwtl
cmpsl
cmc
icebp
jae
scas
cmp
dec
adc
jae
testl
int
xor
mov
add
int3
aas
lds
xchg
push
jmp
scas
sub
mov
sbb
iret
daa
stos
les
rorl
pop
dec
adc
mov
or
mov
pop
mov
in
test
push
sbb
cmpsl
mov
lahf
scas
sbb
xchg
shl
jb
rep
add
into
inc
jo
bndstx
ljmp
pop
jge
daa
test
aas
scas
adc
frstor
fisttpl
js
ds
loope
sbb
jmp
add
cwtl
popf
data16
mov
ret
cmpl
add
adc
mov
sub
mov
xchg
or
jnp
dec
daa
enter
xchg
les
fidivl
sub
cltd
lods
push
pushf
cld
loopne
jns
adc
mov
mov
push
add
test
add
xor
and
dec
js
and
cs
popa
nop
lds
rcll
pop
or
cld
and
test
add
jbe
call
mov
sbb
xchg
lcall
sbb
sub
shl
pushf
das
cmp
movsl
xchg
dec
jp
scas
cmp
jbe
mov
addl
shll
adc
inc
xor
rcrb
pop
cs
cmp
stos
insb
mov
mov
icebp
std
js
and
call
gs
fldenv
push
pop
sub
push
fwait
decb
xor
jg
cld
lods
scas
adc
pop
sub
mov
fstl
sub
cs
pushf
mov
push
add
adc
mov
lods
in
mov
mov
inc
cmp
aad
cmp
mov
into
xchg
dec
mov
jle
mov
mov
push
in
push
ss
sub
pop
aas
adc
nop
popf
and
lods
sub
or
call
pop
js
pop
jns
xchg
fwait
add
stos
aad
adc
jle
bound
ljmp
inc
inc
lret
mov
into
push
idivl
sahf
dec
xorl
jne
pushf
addr16
into
jnp
xchg
int3
aad
rol
out
lock
fldenv
adc
incl
mov
pop
add
popf
leave
xchg
mov
cmc
cmp
daa
add
and
cltd
push
jb
inc
negb
mov
or
loopne
xchg
push
sub
jp
jmp
test
mov
in
movsb
jle
push
push
cld
movsb
sub
xor
scas
sbb
mov
jae
mov
inc
popa
sbb
jno
mov
cmp
pop
lds
out
xlat
sbb
xchg
inc
iret
fwait
add
dec
xlat
fwait
xor
fsts
jl
out
sbb
pop
pop
mov
stos
sub
xor
pop
mov
push
frstor
arpl
cli
xorb
push
stc
xor
lret
jnp
or
ret
add
dec
adc
and
inc
sahf
sbb
sub
sub
sbb
cltd
popa
dec
xorb
lret
add
leave
pop
jno
mov
rcll
and
out
das
lods
or
jns
push
or
mov
movsb
hlt
pop
cwtl
add
sub
pop
cmp
sub
and
adc
pop
adc
push
cmp
and
aaa
movsb
and
cmp
pushf
mov
out
push
jle
lret
pop
adc
cmp
or
ds
in
cmp
and
jo
jae
insb
adc
pop
leave
jle
push
sbb
out
inc
pop
jae
mov
jg
and
rcll
xor
mov
divb
je
call
enter
jns
pop
dec
repz
sub
orl
inc
cmc
lds
jns
mov
mov
test
aas
xlat
test
or
mov
ljmp
lds
inc
mov
push
bound
sub
inc
mov
jle
dec
shll
test
out
cs
daa
add
into
mov
lods
sarb
ret
add
cmp
out
push
mov
call
imul
pop
jl
sub
rcrl
push
add
shl
insl
add
cmp
pop
pop
rolb
popfw
fdiv
imul
insl
xor
push
outsl
sub
insl
insl
lcall
pop
mov
jecxz
cmpsb
leave
lea
enter
mov
cltd
mov
add
test
and
in
lds
imul
nop
xorb
popf
outsl
inc
mov
inc
or
stc
jae
cmpl
sub
faddl
lret
sbb
sbb
sbb
push
push
in
xchg
mov
cltd
test
inc
ljmp
lods
fcmovnb
add
cltd
jle
xchg
sbb
in
lea
nop
or
add
mov
test
inc
mov
cwtl
js
or
out
leave
xor
lret
dec
dec
pop
push
add
int
fdivl
adc
mov
sbb
out
stc
xchg
mov
fildll
jae
pusha
cmpsb
std
in
jmp
cmp
ljmp
mov
cmp
inc
into
ss
leave
push
and
mov
arpl
in
outsb
aam
push
push
cmp
mov
dec
cli
or
adc
mov
dec
jecxz
lret
cli
outsb
and
push
sbb
inc
test
jp
js
and
shrb
fs
xor
cmp
jae
incl
xor
inc
add
mov
dec
jecxz
and
or
jns
fcoms
test
adc
shlb
lods
mov
jb
dec
pop
sbb
sbbb
mov
inc
mov
xchg
cld
rorb
lret
mov
lock
das
jo
cmpsb
loope,pt
sahf
rolb
jae
push
call
jge
mov
xchg
sti
mov
sub
push
push
sti
or
pushf
or
pop
xchg
aad
mov
push
mov
inc
jo
ljmp
lret
out
dec
mov
sahf
mov
mov
fldcw
add
scas
mov
dec
mov
mov
adc
iret
ja
call
mov
adc
ret
and
mov
or
cltd
cmp
rolb
jecxz
das
mov
push
das
inc
sub
cmpsl
pop
orb
sub
or
push
sbb
jb
and
cmp
pop
xchg
inc
dec
shrb
push
int
clc
add
adc
pop
cmp
ja
imul
addr16
in
xor
inc
test
lock
fwait
jp
in
cld
clc
es
xor
lea
into
add
gs
inc
mov
pop
ss
test
add
cs
add
movsl
stc
and
push
mov
repz
sbb
push
jns
mov
into
leave
or
inc
xchg
adc
test
adc
jne
je
cmp
sub
mov
jmp
cmp
inc
or
xchg
dec
xor
mov
je
jg
cld
mov
je
jo
out
mov
and
cli
pop
hlt
ficoml
and
outsl
dec
je
das
jg
test
dec
add
dec
popf
and
mov
or
mov
flds
fidivs
stc
mov
sbb
xor
xchg
jnp
cmpsl
mov
popf
jmp
int3
mov
fcomps
dec
lods
fsubs
adc
xchg
fsubl
shlb
push
xchg
xlat
jnp
or
sbb
in
int
mov
cmpb
mov
jecxz
ljmp
or
cmpsb
pop
dec
mov
sub
xor
lret
add
and
push
cs
mov
xchg
dec
sub
push
jp
popf
lock
push
sahf
shll
inc
js
xchg
mov
mov
imul
gs
icebp
ret
xor
hlt
sub
addr16
push
scas
ja
jmp
jg
js
sbb
rcrb
rcrl
fisubrs
bound
pop
push
mov
xlat
cmp
insb
jp
mov
ret
fldpi
movsb
sub
pusha
int3
shl
inc
lcall
aas
adcb
gs
sti
adc
mov
orb
add
loopne
add
movsl
bound
jmp
orb
mov
mov
mov
cmp
gs
mov
int3
aad
or
or
mov
dec
dec
dec
adc
test
cld
xchg
and
xchg
jnp
es
sbb
lds
lret
add
add
xchg
xor
or
mov
stc
mov
mov
jg
xchg
fisubrs
pop
idivb
rolb
std
lods
aas
xor
dec
sub
lahf
loopne
push
push
dec
xchg
lahf
cmp
inc
jp
adc
pop
jge
repz
call
cs
or
ja
or
mov
sub
aam
xor
push
stc
xor
add
fisttpl
jle
jmp
sti
push
inc
jp
sbb
add
ret
mov
inc
adc
cld
popf
sub
fdiv
pop
jb
inc
or
xlat
push
int3
enter
jbe
lcall
jbe
xchg
adc
pop
sub
scas
add
dec
leave
std
cmp
loope
and
lods
int3
sti
aas
mov
adc
popf
xor
jno
bound
adc
fld
xor
pop
out
mov
dec
into
stc
push
pop
ljmp
add
pop
scas
cs
sub
repz
dec
in
adc
adc
mov
mov
jmp
pop
and
int
dec
aam
popf
xor
bound
inc
dec
and
xchg
xchg
push
mov
pop
lahf
scas
xor
inc
mov
cli
dec
mov
gs
leave
mov
pop
mov
mov
jge
or
stos
or
loope
ja
jae
das
cmpsl
iret
in
out
pop
xchg
or
subb
js
mov
sub
enter
outsl
pop
and
xor
shl
add
lret
fldl
pop
sbb
popa
and
arpl
xor
nop
cmpsl
pop
ja
adc
mov
shll
pusha
cmp
mov
xor
mov
xlat
and
jbe
addb
fistpl
xor
mov
je
insl
cli
pop
cmc
test
xchg
nop
pushf
imul
lds
mov
xorb
cltd
test
dec
enter
pop
mov
lds
hlt
mov
test
dec
sbb
fwait
push
sarl
sub
mov
dec
pop
mov
sbb
scas
aaa
mov
push
xchg
pop
cmp
xor
jmp
mov
sub
in
jmp
jns
testb
nop
mov
adc
dec
iret
jl
xchg
jnp
stc
cli
inc
and
jp
and
jb
add
call
test
je
push
sbb
and
xlat
add
rclb
call
inc
sub
mov
or
jp
cmp
mov
mov
clc
ret
insl
addr16
scas
mov
enter
xor
xor
or
mov
pop
fcoml
or
add
jno
std
push
cwtl
or
or
imul
add
fstpl
adcb
mov
push
jns
ficomps
rcrl
js
jp
pop
adc
fimuls
in
and
andl
imul
out
sbb
stos
or
sbb
dec
ja
dec
in
dec
sbb
pop
cmc
mov
outsl
dec
pop
or
shr
jecxz
movsl
pop
and
repnz
adcb
icebp
dec
dec
push
es
mov
fsubs
jp
aad
mov
jmp
repz
in
and
lahf
pop
fidivrs
mov
or
add
sbb
dec
push
cmp
pop
aam
mov
out
loop
xor
addb
pop
xor
inc
sub
mov
outsb
mov
jne
jmp
cld
loopne
repz
jp
inc
dec
mov
push
mov
icebp
clc
xor
adcb
sub
lock
cmp
shl
and
and
ljmp
push
and
movsb
shlb
xlat
pop
cltd
cmp
or
inc
test
rcl
loopne
je
js
jnp
sub
repnz
dec
mov
cs
jg
add
imulb
xor
jb
push
loopne
lcall
sub
push
sbb
jne
xor
ret
sub
push
push
cwtl
ffree
rcrl
int
add
insb
sub
int3
loope
stc
js
mov
in
cs
pop
into
rorl
jg
cmp
xor
cmp
push
clc
or
adc
leave
pop
mulb
ds
push
ret
xchg
popa
arpl
fildl
loop
idivb
pop
in
ljmp
stc
insl
mov
cwtl
lds
mov
and
push
fsub
and
jo
stos
call
fcomp
cld
repz
cld
sub
aas
aas
inc
cmp
in
cli
sub
bswap
jle
inc
xor
rorl
mov
bound
dec
pushl
mov
leave
pop
mov
push
add
jns
sbb
outsl
dec
add
mov
ret
pop
sbb
hlt
lret
inc
gs
into
jns
cmp
data16
incb
or
add
cltd
inc
or
popf
lcall
fmull
fisubrl
dec
stc
mov
stc
mov
and
or
movsl
dec
adc
popf
stos
sub
mov
shl
std
push
mov
or
xor
xchg
cli
cmpsl
insl
outsl
mov
dec
pop
scas
jbe
xchg
scas
pop
xor
std
leave
dec
jbe
shll
leave
push
fimuls
imulb
or
addr16
mov
pop
pusha
cmp
stc
out
mov
xor
idivb
sub
dec
stos
andb
repz
loop
mov
cmpsb
pop
jo
clc
mov
cmp
sbb
mov
lds
pop
lahf
sbb
std
mov
or
ret
and
shrb
mov
or
mov
push
aas
lds
mov
or
jns
inc
or
mov
xchg
mov
icebp
sbb
or
inc
out
int
imul
sub
icebp
imul
dec
jle
aad
nop
mov
test
push
addr16
sub
inc
inc
sub
pop
lahf
push
inc
sbb
pop
and
fucomi
jb
sub
imul
cltd
into
daa
shll
mov
pop
popf
dec
mov
pop
jo
jle
mov
mov
mov
test
pop
xchg
arpl
cmp
pushf
dec
aam
shrb
cmp
pop
jnp
mov
cmp
xchg
rclb
xlat
sbb
inc
add
jmp
sub
sti
mov
loope
sahf
cld
sub
jecxz
js
pop
out
hlt
outsb
and
xor
cli
and
inc
fidivs
hlt
cs
ss
sti
fmull
mov
mov
sbb
fwait
stc
push
dec
xor
mov
xor
sbb
jle
fisubrl
xchg
sti
lahf
xor
mov
dec
mov
cmp
mov
sbb
mov
adc
mov
mov
pop
dec
adc
js
pop
jl
jo
repz
and
pop
jg
fimull
repnz
mov
sahf
flds
sub
xchg
mov
sbb
dec
push
out
sub
push
loopne
sub
jge
mov
cmp
mov
pop
cmp
nop
fs
out
lcall
fldenv
repz
mov
orl
leave
and
rolb
inc
cmpsb
inc
mov
dec
mov
mov
jmp
mov
and
xchg
hlt
adc
and
push
popf
adc
int3
cmp
add
sti
push
dec
add
leave
testl
repz
movsb
pop
in
mov
cltd
jl
add
out
or
stos
add
mov
cmp
dec
jno
xchg
aas
insl
jbe
mov
dec
pop
cmpsb
jns
stos
out
xchg
mov
loope
pop
cmc
xor
add
inc
jns
mov
cld
es
icebp
push
dec
aaa
test
cmp
cmp
decb
cmp
aad
lcall
lret
xor
sarb
sub
lret
xor
test
cmp
hlt
jnp
cmp
dec
sbb
xorl
xor
sub
sbb
ds
mov
xchg
popf
es
mov
xlat
and
adc
loopne
jmp
std
pop
cmpsl
mov
lods
fildll
js
jbe
imul
push
movsb
lret
mov
aad
fidivrl
and
and
mov
cmpsb
and
mov
enter
push
jbe
dec
pop
lahf
mov
scas
js
cmp
in
fcompp
js
xor
into
nop
mov
pop
negl
testl
pop
std
repz
adc
es
push
rcl
jmp
sarl
push
adc
jb
adc
pusha
cltd
js
out
inc
imul
out
jae
out
lea
inc
cltd
scas
andb
sbb
sti
or
add
dec
sbb
and
es
push
fisubl
adc
and
xlat
adc
push
jns
xchg
rol
and
adc
pop
mov
test
sub
scas
add
sub
jns
inc
cmp
adc
ss
cmpsl
add
inc
jb
mov
das
xchg
sbb
xor
divl
push
sub
pop
jne
mov
fimull
stc
xchg
ret
fadd
pop
jle
je
icebp
rcr
jle
pop
mov
push
subl
push
and
arpl
out
mov
aaa
aam
push
fdivrs
decb
pop
aas
gs
out
pop
sbb
add
mov
daa
cli
sbb
test
shlb
iret
sbb
icebp
call
and
lret
xor
and
sub
js
or
xchg
cmp
cmp
mov
shrl
mov
int3
ss
jae
push
mov
jo
cmp
insb
ret
mov
or
jmp
pop
fwait
dec
xor
lahf
aad
ss
lea
adc
xchg
test
xor
pop
in
lods
into
push
sbb
push
fsubr
pushf
dec
cmp
mov
mov
jne
pop
fcompl
test
inc
test
in
int
dec
xchg
cmpsl
and
jbe
mov
mull
in
sub
jbe
dec
or
dec
in
pop
mov
xor
jo
shrb
inc
cmc
pop
in
lods
lds
movsb
push
loopne
adc
cmp
mov
xchg
ds
cmp
push
jne
and
dec
sahf
push
mov
inc
sbb
sbb
sarb
or
mov
enter
addr16
dec
sbb
cld
sbb
ret
mov
notl
ja
xor
pop
mov
inc
fmul
jb
lods
data16
push
adc
pop
add
mov
mov
dec
je
pop
pusha
push
std
ja
mov
mov
out
cmp
sub
outsl
jl
pop
and
fstpl
lret
push
insl
popa
scas
adc
mov
inc
push
add
lods
hlt
lret
sub
test
fsts
rorl
push
push
xor
sbb
jb
das
addr16
push
hlt
sti
fistpll
sti
scas
cmp
data16
rorl
push
pop
outsb
lret
outsb
ljmp
xchg
orl
fstps
mov
mov
nop
packsswb
fidivs
mov
lods
rclb
sub
fadd
pusha
add
pop
ljmp
mov
lods
jno
mov
cmp
lods
stc
pop
jnp
loope
cmp
or
and
jle
add
pop
mov
sub
and
lahf
test
dec
aad
inc
sti
out
in
pusha
fsts
in
xlat
jl
add
cmp
fwait
ja
lods
xchg
ja
adc
mov
rolb
inc
inc
lret
lahf
pushf
test
xchg
clc
in
jns
mov
xor
push
out
xor
popf
test
or
xor
lods
loopne
and
mov
xchg
imul
mov
pusha
stos
or
and
xor
fstpt
stos
xor
xchg
add
cs
mov
dec
lret
out
test
push
mov
mov
fiaddl
rclb
add
sbb
cmp
inc
outsb
insb
push
movsb
xchg
cmpsl
or
xchg
out
bound
mov
sti
and
mov
insb
and
pop
repnz
mov
mov
cmpsl
in
fbstp
fsubrp
push
sbb
mov
ret
mov
jno
fldl
ret
sub
sub
push
mov
xor
add
ljmp
jno
aas
mov
daa
fdivrl
movsb
es
sbb
fbld
xchg
mov
js
lahf
sub
or
out
sbb
xchg
dec
fwait
addr16
inc
push
adc
lods
sahf
pop
fucomp
sbb
cli
stos
fs
insb
lahf
test
jno
push
in
push
pop
pop
cmpsb
rclb
dec
push
add
pushf
scas
jge
pop
flds
push
insl
incl
xor
lds
idiv
scas
sub
xchg
xchg
jns
mov
test
mov
clc
insb
mov
pop
xor
test
mov
stos
pop
inc
mov
fldenv
mov
fdivrl
fs
daa
cld
add
push
jns
shlb
fsubrl
mov
pop
cmp
pusha
push
daa
xor
ja
xchg
stos
addr16
mov
jo
pop
lods
pusha
jge
call
mov
outsl
int3
insl
adc
jmp
ja
dec
jno
xor
pop
inc
test
out
lret
ss
popf
dec
sahf
push
std
cwtl
rol
pop
adc
dec
std
daa
adc
ja
sbb
insb
add
push
fnstsw
mov
iret
cld
shrb
popf
lea
push
or
loop
rcll
mov
rorl
mov
arpl
outsl
sets
in
rorb
push
xchg
test
orl
ss
lock
jl
cmpsl
jp
fcompl
lds
aam
dec
test
ret
push
pop
flds
jb
dec
into
test
test
adc
cmp
sub
rcrb
lahf
inc
ret
je
sar
or
and
outsb
inc
arpl
pushf
mulb
sub
pop
lods
jge
lea
js
mov
jbe
data16
or
cmp
fs
daa
mov
mov
add
cmpsl
inc
sub
mov
das
and
mov
pop
pop
cmovnp
push
lods
fmulp
mov
mov
aad
outsb
mov
dec
cmp
and
jecxz
inc
je
cmp
xchg
ret
mov
mov
fs
inc
movsb
scas
sub
pop
add
xchg
dec
cmp
rorb
in
push
or
push
std
sub
lea
decl
repz
xor
mov
inc
out
imul
iret
and
aaa
xchg
lret
lahf
or
and
fwait
and
pushf
fs
mov
aas
jnp
dec
mov
fists
mov
in
fdiv
aam
lret
jno
xchg
lahf
call
clc
out
testb
xor
xchg
jnp
jno
mov
xor
gs
lods
mov
insl
jl
push
fst
fsubl
push
push
fimull
mov
or
pop
ret
imul
mov
aas
jecxz
out
shrl
fnsave
out
loopne
cwtl
addr16
out
mov
cmp
cmc
xchg
dec
xchg
iret
mov
and
adc
push
push
aam
xor
and
add
test
jno
cmp
icebp
test
or
mov
sub
pop
xor
sahf
in
dec
adc
mov
mov
shr
mov
stos
fildl
fwait
and
adc
push
je
jge
push
push
ret
inc
fisubl
push
jne
psubb
je
xchg
pop
dec
ja
int3
xor
cmp
cli
inc
cs
push
popf
jmp
les
pop
dec
inc
mov
xor
pushf
push
popf
push
cmp
adc
sub
sub
xchg
jl
ja
cmp
sub
dec
rep
lea
out
cmc
stc
mov
ds
and
xor
negb
in
push
out
lock
xor
adc
imul
scas
jle,pn
mov
cld
xor
add
cmp
push
in
push
pop
jecxz
shll
sarb
mov
fsub
mov
jno
or
je
ret
mov
mov
xor
nop
jge
addr16
push
mov
add
push
out
in
jae
pop
and
cmp
dec
or
push
mov
mov
sbb
outsb
jbe
aam
sub
mov
xor
sub
pop
cmp
aas
sbb
popf
scas
rolb
jo
mov
outsl
adc
test
gs
test
push
pslld
xchg
pop
inc
and
cmc
das
adc
in
lea
xchg
nop
sti
insl
mov
or
push
adc
cwtl
nop
repnz
inc
ljmp
xor
addr16
movsl
jns
sbb
es
mov
mov
mov
pusha
xor
loopne
sub
loope
push
loopne
sbb
hlt
mov
ror
jne
push
mov
insb
daa
outsb
jmp
mov
xchg
les
mov
mov
inc
mov
cmpsb
mov
pusha
mov
lret
mov
sbb
fmuls
out
cmp
jg
pop
lods
xchg
sbb
shll
sbb
fimuls
daa
sub
imul
mov
jo
in
or
jne
lock
in
mov
in
or
dec
clc
xchg
mov
or
push
lea
sub
and
enter
stos
and
out
xchg
in
dec
das
stos
fisubl
jl
mov
clc
sub
lods
sbb
call
outsl
xor
in
mov
pop
sub
inc
imul
decb
xor
and
xor
dec
dec
shrl
ss
pushl
xor
inc
int
aam
jne
dec
shl
mov
inc
test
inc
movsb
mov
lds
mov
inc
push
and
push
lret
sub
dec
lahf
sub
scas
mov
lds
imul
mov
rorl
into
insb
cmc
in
ss
das
cmpsb
movsb
cltd
mov
fs
adc
inc
push
test
push
aam
pop
xchg
in
int3
sub
test
out
arpl
icebp
jne
add
sahf
cld
addb
inc
lods
lods
jae
jns
int3
out
mov
repz
cmp
scas
stos
sub
test
mov
sbb
and
cmp
mov
ret
cmp
jecxz
stos
xor
jne
add
push
imul
cs
clc
mov
out
lods
cli
ret
mov
lock
sub
add
dec
clc
cmp
adc
divl
mov
mov
daa
inc
dec
pop
test
stos
int
xor
dec
sti
sbb
out
lea
mov
xchg
ret
cmp
lahf
pop
push
and
fistpl
movsb
push
mov
push
int3
or
add
in
sbb
stos
aad
enter
and
popa
add
out
sahf
cld
push
push
fdivrp
scas
outsl
xor
xchg
mov
add
push
out
scas
ficompl
pop
pop
call
stos
xchg
jmp
cmp
inc
rorl
je
arpl
sahf
inc
lods
cmc
mov
dec
xor
stos
xchg
mov
mov
mov
sub
repz
cmpsb
mov
mov
faddl
and
cwtl
adc
insl
adcl
xchg
lods
arpl
jo
xchg
dec
cmpsl
addr16
add
mov
enter
cmpsl
jae
leave
loope
mov
mov
int
int3
mov
sub
or
pushf
sahf
ds
ror
xchg
jecxz
cltd
sub
lods
jle
push
lret
stos
push
ja
mov
shll
stos
adc
mov
js
adc
dec
fstps
sar
sar
inc
rorb
fsubrl
adc
mov
xor
pop
shll
xchg
test
mov
dec
push
sbb
sbb
test
aad
and
xchg
mov
adc
cs
inc
test
mov
es
mov
mov
xor
push
nop
dec
dec
mov
jmp
mov
mov
outsb
add
or
repz
es
push
xchg
xor
push
dec
sub
inc
and
es
fs
xchg
jg
das
mov
pop
cmp
jecxz
movsl
fcomip
xchg
lret
hlt
out
inc
sbb
xchg
push
fdivrl
xlat
jne
mov
aaa
cmpsb
adc
test
movsl
repnz
ja
xlat
outsb
mov
fimull
movsb
push
xchg
and
pop
sbb
cmp
xchg
repz
std
ss
mov
cmp
arpl
jae
sbb
mov
and
out
stos
pop
subl
inc
loop
hlt
jle
dec
test
lret
fstpl
or
addr16
pop
lods
cld
popf
sub
pop
or
les
inc
mov
or
cli
data16
xor
outsb
and
icebp
outsb
fcomps
xchg
aad
repz
jo
push
sub
movsb
fdivs
pop
aas
inc
sar
mov
in
jae
mov
dec
hlt
dec
int3
jbe
jmp
shl
sti
add
xor
jl
movsl
pop
jle
xchg
mov
jae
jecxz
inc
inc
aas
xchg
enter
sarl
and
shl
ror
adc
mov
sub
arpl
fsubrs
jl
sahf
mov
mov
jmp
fbstp
adc
repz
stos
and
fs
mov
cltd
inc
test
inc
mov
add
jg
ds
mov
les
or
fcmovnbe
mov
push
mov
icebp
add
or
movsb
addr16
jbe
insl
ja
sub
gs
jbe
dec
es
shrl
sbb
in
es
shrb
cmp
pop
inc
jmp
sub
add
stos
movb
scas
div
sahf
loope
stos
xchg
xchg
inc
pop
sub
mov
fimull
mov
pop
xchg
push
loopne
aaa
fs
mov
ds
in
mov
test
ss
hlt
pop
jp
ret
cmpsl
jae
inc
push
jb
lret
enter
pop
test
cmp
lock
push
fimuls
arpl
cmp
fcmove
push
mov
mov
cmp
sbb
daa
ds
push
mov
adc
and
mov
int3
insl
loop
lods
add
pop
out
loopne
ja
dec
mov
nop
dec
push
idivl
loopne
lret
lds
dec
loopne
aam
out
dec
hlt
fwait
imul
jbe
cmp
outsb
outsb
test
cmpsl
rcr
subb
cli
pop
inc
or
dec
fisubs
and
mov
push
outsb
mov
int3
popf
mov
int
in
mov
add
in
test
enter
aad
addl
subl
mov
shr
out
in
sbb
hlt
push
cli
sbb
in
es
jp
or
pushf
fildl
mov
ss
sarl
shll
sahf
sbb
dec
dec
xor
sarl
jp
iret
mov
pop
and
into
mov
insl
cltd
adc
cmp
dec
imul
popa
fld
mull
movsl
lods
scas
std
shrb
inc
pop
push
xor
jp
out
xacquire
test
neg
mov
adc
mov
int
cltd
in
into
dec
andb
sub
sub
lea
scas
cmpsl
or
mov
add
mov
data16
lret
mov
and
or
push
addr16
xor
mov
pop
jge
mov
ja
pop
pusha
mov
inc
imul
popa
pop
rorb
into
pushf
and
in
ljmp
and
and
mov
lods
cmp
mov
xor
aaa
out
pop
shrb
mov
incb
scas
mov
loope
inc
sbb
or
fdivr
mov
cld
lret
dec
or
mov
int
pop
fcomps
xchg
xchg
popf
aas
fsts
mov
mov
repnz
dec
lods
xchg
adc
pop
in
sti
sub
inc
cmp
popa
mov
cmp
add
or
fistpl
mov
dec
clc
ljmp
daa
bnd
mov
arpl
mov
repnz
cmp
imul
lods
dec
insb
cmpsb
jge
je
fcompl
inc
push
add
out
test
mov
int
mov
dec
pop
push
mov
xchg
loopne
icebp
js
adc
out
cmp
push
in
and
sarb
pop
mov
mov
addr16
fwait
cmp
fmuls
xchg
repz
push
xor
mov
push
xchg
push
lock
das
cli
adc
es
jo
fs
aaa
lret
sub
lock
xor
mov
jns
call
push
inc
mov
out
and
pusha
mov
jl
push
sbb
jp
lret
test
stc
and
in
jl
nop
fwait
ds
addr16
pop
push
xor
loop
rcrl
lea
push
in
push
scas
cs
call
mov
xchg
or
jb
sub
adc
mov
and
jl
push
jae
popa
sar
int3
jmp
dec
jp
or
call
in
test
mov
jmp
fs
aas
sub
mov
dec
pop
mov
sub
mov
cmpsb
int3
gs
inc
es
cmp
popa
cmp
push
js,pn
and
enter
jo
fwait
sub
ret
test
imul
repz
mov
pop
or
aas
andl
adc
mov
jne
lahf
repz
dec
ja
movsl
ja
push
lods
stos
push
add
in
push
mov
mov
fisttpll
mov
not
mov
pop
or
test
dec
inc
fmul
shrb
push
push
pop
push
dec
gs
call
and
inc
lods
loope
cmpsb
hlt
sub
lea
dec
or
inc
negb
mov
adc
or
dec
mov
xchg
inc
sti
daa
xchg
les
jp
clc
fwait
add
mov
xchg
push
dec
ljmp
mov
ret
dec
inc
mov
and
ja
sbb
push
loopne
mov
clc
ds
cld
cmp
lock
lcall
dec
sub
outsl
xor
jecxz
cltd
sbb
adc
xchg
xor
mov
imul
xchg
or
shr
xchg
pop
lcall
xor
test
jno
jbe
fs
rorl
pop
or
xor
movsl
mov
cmp
insb
xchg
push
mov
stos
enter
jmp
fistpl
cmp
inc
dec
xor
cmpsl
and
bound
cmp
pop
xor
xor
aam
test
imull
mov
mov
xchg
stos
pop
add
test
dec
fbstp
cld
xchg
addr16
incb
sti
add
loopne
push
sbb
les
inc
pop
enter
jno
xor
pusha
leave
push
popf
mov
xchg
dec
xchg
push
sarb
aas
xor
adc
push
pop
loop
cld
cmpb
scas
adc
and
sahf
lahf
pop
push
push
sub
jmp
fdivrs
pop
cmp
pop
daa
dec
sbb
jp
aad
inc
lds
out
jb
negb
gs
rclb
xchg
inc
and
ds
mov
jmp
test
fadds
ja
adc
lahf
xchg
rorb
mov
out
imul
or
mov
aad
lcall
js
xor
and
inc
aam
and
outsl
ja
popf
rdpmc
insl
lods
fisubrs
cmp
ret
dec
mov
xor
xchg
push
xchg
jg
out
add
mov
daa
test
xor
sti
mov
lret
dec
mov
push
shrb
les
jg
out
cmp
pop
xchg
cmp
jns
fs
js
int3
mov
inc
ret
pop
incl
adc
jnp
xchg
push
stos
icebp
jbe
movsb
mov
xchg
xor
andl
enter
adc
xor
ds
clc
mov
js
test
cs
jmp
pop
adc
stc
push
mov
dec
push
push
or
mov
add
stc
xchg
or
lock
mov
mov
test
insl
movsb
push
inc
dec
stos
sbb
xor
jo
fistl
repz
stos
mov
lods
loope
pop
pop
jg
or
jecxz
pop
cli
decl
pop
mov
je
cmp
lahf
or
arpl
sbb
hlt
test
and
call
cmpsb
arpl
iret
inc
jne
cltd
jo
rcl
lahf
sub
cld
int3
mov
sub
test
cmpsl
xor
fstps
inc
fmuls
and
test
fwait
call
mov
fcomp
jo
and
adc
mov
std
and
mov
iret
dec
xchg
cmp
push
dec
cmpsb
fs
lret
jbe
add
jb
adc
rclb
xor
mov
pop
aas
adc
cmp
in
aad
movsl
addr16
mov
push
cmp
jbe
popa
movsb
sbb
xor
jp
hlt
sbb
push
adc
ret
fdivs
ret
jo
lock
outsb
dec
clc
aad
cld
xchg
cmc
cltd
arpl
sbb
outsl
in
mov
iret
test
sbb
sub
mov
dec
push
jle
fisubs
add
sbb
xchg
mov
or
rorl
lret
loopne
test
fistl
pop
lcall
shrb
ret
or
nopl
enter
add
into
jo
mov
mov
sub
xor
push
mov
psubsw
mov
negl
push
pop
popa
mov
test
mov
data16
ret
gs
mov
mov
imul
cs
xor
jmp
popf
or
inc
test
mov
aaa
mov
int
fsubs
jecxz
popa
mov
jge
shlb
add
sbb
mov
add
repz
lods
mov
es
mov
ljmp
sbb
stc
popa
add
or
dec
jle
add
sbb
loop
popf
push
sbb
outsb
test
or
jg
out
mov
insl
imul
cmc
cli
xlat
movsb
dec
push
xor
mov
xchg
inc
lcall
lahf
pop
xor
sbb
call
out
lea
cmp
icebp
or
bound
stos
mov
xlat
mov
stc
cmp
xchg
jnp
shr
movsl
es
cmp
es
cmp
sub
int3
mov
push
xlat
or
cmpsb
add
mov
push
or
inc
mov
lret
xchg
jbe
ljmp
mov
outsb
inc
loopne
out
sbb
add
pop
arpl
ret
fbld
sbb
push
and
test
push
add
mov
mov
xor
out
adc
lret
or
call
xchg
int3
mov
sub
cli
arpl
jg
add
popa
jnp
xchg
jle
pop
xor
or
add
lea
mov
xchg
or
repz
jg
nop
mov
cld
stos
mov
mov
push
fwait
pop
and
lret
add
push
mov
mov
xchg
ffreep
dec
jp
mov
movsl
sbb
and
mov
xor
push
sub
sub
pop
imul
movsl
jl
test
adc
mov
xor
mov
jg
xor
test
inc
call
stc
or
cmp
mov
xor
sub
xchg
mov
push
dec
sub
xchg
xchg
insb
dec
sub
cmp
or
movsl
adc
xlat
xchg
fnstenv
orb
inc
mov
pop
repz
mov
cmpsl
fstpl
jns
lds
jmp
insb
push
push
sbb
inc
jno
aad
or
or
fisubrl
stos
mov
pop
fbld
cltd
and
pop
mov
es
call
push
jge
pushf
mov
bound
and
push
pushf
ret
es
mov
dec
cwtl
clc
dec
mov
imul
cmpsl
inc
mov
xchg
enter
in
pusha
lcall
in
mov
fimuls
mov
outsb
repz
mov
out
lahf
pop
movsl
sub
xchg
inc
pop
add
pop
sbb
add
sbb
add
push
xchg
add
mov
mov
push
pusha
xchg
push
or
roll
dec
or
lret
mov
or
or
cmp
lods
addr16
rclb
jp
jecxz
mov
push
sahf
clc
outsl
sub
xor
mov
pop
xchg
daa
imul
cmpb
push
sbb
inc
std
sub
push
adc
xorl
in
inc
stc
mov
mov
mov
sbb
push
add
adc
jmp
adc
fs
mov
jb
sub
push
xchg
into
xor
cld
jecxz
mov
fidivs
das
in
dec
lret
jno
insl
cmpsl
ret
shll
pop
jo
das
lock
mov
push
jmp
fwait
mov
mov
into
mov
sbb
pop
out
aas
add
push
cmp
inc
pop
mov
and
cmp
cmpl
or
inc
mov
mov
popf
jns
jo
mov
sub
and
lods
fs
xor
rcrb
add
sbb
cli
shll
gs
arpl
jbe
call
mov
adc
push
xchg
mov
pop
and
imul
push
pusha
pop
out
sbb
push
clc
in
adcl
xor
xor
inc
adc
fistl
mov
mov
mov
cmp
inc
push
mov
push
cmp
mov
data16
sub
idiv
xchg
out
rolb
adc
push
jbe
cli
in
xchg
loop
sbb
pop
adc
stc
sbb
or
pop
lcall
mov
cmp
lret
ds
mov
lock
add
and
pop
add
mov
stos
pusha
std
or
int3
jle
les
jmp
sub
push
mov
push
sub
popf
mov
dec
cmp
push
movsbl
adc
cmp
inc
loope,pt
repz
movb
in
push
sub
lss
xchg
popf
in
andl
imul
lds
arpl
popf
xlat
clc
pop
mov
jl
xor
loop
and
iret
pop
sti
lea
es
push
or
mov
cmp
lahf
add
jo
sbb
xor
mov
or
pushf
mov
cmpsl
imul
adc
cmp
sub
outsb
decb
jae
xchg
pop
insl
insb
and
push
adc
xor
sar
sti
cmpsl
jne
xchg
pop
aam
sub
jnp
out
mov
inc
add
inc
rcrb
xlat
adcl
shll
inc
movsb
icebp
pop
ret
sti
inc
ds
repnz
sub
ss
and
cmp
sbb
outsl
andl
outsb
sub
push
pop
out
push
inc
int3
inc
sbb
andb
test
xor
jne
rcrb
lods
or
lods
inc
aas
xchg
mov
pop
aad
loope
mov
jno
xlat
push
or
fwait
push
lods
and
jae
hlt
inc
arpl
jb
fidivl
jp
jmp
push
or
cmp
adc
pop
sbb
xlat
and
push
jle
in
push
pop
mov
dec
test
jl
cmp
lret
inc
popa
imul
popf
sahf
ret
sub
das
imul
push
or
jecxz
inc
xchg
or
push
flds
clc
je
sbb
pop
mov
adc
imull
daa
clc
loope
mov
xchg
or
lahf
pop
jg
ljmp
test
push
cld
cmc
push
movsb
outsl
inc
mov
mov
lahf
xor
mov
clc
jae
movsb
add
cmp
cmp
sub
test
xor
cltd
mov
test
add
in
es
push
popf
dec
sub
and
adc
push
stc
pop
leave
les
test
in
gs
pop
fisubs
xchg
sti
movsbl
jbe
btr
mov
bound
ret
xchg
pop
sub
mov
lea
mov
in
pop
jno
imul
sbb
xchg
bound
sbb
imul
ret
push
pop
cmpsl
call
sub
push
cmc
add
fmuls
cs
mov
lds
mov
or
imul
lds
mov
push
or
push
push
jmp
inc
adc
sub
adc
inc
out
in
adc
cmp
and
ficomps
rorb
sti
pop
cmc
insl
roll
pop
cmpl
inc
cli
sahf
inc
es
insl
xchg
push
clc
in
mov
scas
cmp
or
mov
pusha
int
ret
iret
or
out
fsubrs
sub
cmpsl
subl
arpl
sarl
subb
mov
inc
adc
mov
add
add
loop
sbb
insl
mov
dec
leave
add
decl
jl
sbb
xorb
mov
test
xor
shl
scas
lea
sbb
mov
sbb
push
enter
add
push
or
rcrb
mov
cld
repnz
mov
sub
dec
jg
aam
test
sub
es
iret
iret
xchg
cmp
in
movsb
loop
pop
lock
push
test
push
mov
movsb
mov
jg
jns
mov
sbb
out
xor
jle
adc
pop
pop
push
dec
gs
dec
cli
ret
ret
outsl
xchg
fs
andb
hlt
sahf
mov
cmc
jo
mov
fwait
mov
std
testb
scas
mov
das
dec
in
ds
lahf
mov
stos
sub
or
mov
mov
arpl
daa
loopne
js
inc
inc
outsb
stos
mov
sti
out
aad
aaa
out
push
add
push
lahf
mov
inc
dec
enter
dec
aad
xchg
xor
shrl
es
stos
inc
mul
jle
sbb
jl
add
loopne
in
pushf
outsl
pop
sbb
dec
sub
pop
loope
in
xchg
add
mov
popa
dec
inc
pop
testl
js
push
pop
lea
lea
pusha
scas
popf
pusha
shrb
push
sbb
sbb
or
and
ret
arpl
jg
test
pop
mov
and
adc
adc
add
js
test
add
rcll
mov
fisttpll
adc
xorb
out
inc
pop
rcrl
mov
cmp
bound
lock
sahf
jecxz
xchg
aaa
loop
sar
das
mov
pop
pop
test
inc
add
sbb
lock
es
dec
mov
mov
clc
pop
xor
xchg
xchg
dec
sbb
jae
add
or
sbb
adc
icebp
cmp
lods
ljmp
dec
jmp
imull
jp
addl
lahf
dec
jl
add
in
and
sahf
dec
cmp
mov
sbb
cld
test
fisubrl
imul
movsb
and
mov
pop
in
das
int
outsb
jg
mov
ret
filds
mov
dec
jecxz
mov
or
xor
vcmpsd
or
fidivrs
jb
enter
les
vdivps
mov
xor
push
out
adc
arpl
cmp
frstor
dec
mov
pop
and
cmp
movsb
fcompl
mov
cwtl
lea
xlat
comiss
add
xchg
js
xor
int
pusha
inc
das
fidivrl
mov
add
iret
cmc
jmp
mov
pop
and
xor
inc
xchg
lea
dec
jg
pop
out
ja
xchg
int
cmpsl
jne
jle
addr16
dec
aaa
jne
push
fcomps
insl
mov
mov
mov
mov
subl
push
ficomps
push
inc
stc
and
dec
mov
es
callw
sti
inc
lock
push
shrb
mov
and
fimuls
mov
or
dec
popa
mov
jl
insb
sbb
test
jmp
jae
pop
inc
add
add
pop
icebp
jb
push
fimuls
aad
mov
popf
orl
sub
pop
mov
ret
push
xchg
mov
fs
mov
das
cmp
lret
xchg
cmp
pop
inc
out
mov
movsl
nop
das
out
repnz
jg
mov
scas
movsl
fisubs
pop
testb
mov
sbb
fldl
cmp
rcrl
fbld
sbbb
mov
jae
xor
clc
fs
mov
fnstsw
shll
mov
adc
scas
mul
adc
xchg
xchg
ja
loopne
pslld
and
ja
ds
dec
jecxz
and
inc
xchg
cltd
into
mov
shr
fs
xor
push
jge
fwait
pop
adc
and
push
popf
xor
or
or
out
lcall
out
mov
jg
les
sbb
jmp
cmp
adc
add
test
leave
push
mov
lret
pushw
loop
lcall
adc
imul
inc
pop
adc
dec
pop
cmpsb
sub
lret
pop
stos
push
lock
adc
leave
rorl
pop
leave
jmp
sub
or
mov
adc
jns
mov
or
adc
sahf
mov
and
or
xchg
dec
mov
or
xlat
fbstp
mov
gs
xchg
sti
xor
add
pusha
fsubrp
icebp
sbb
adc
mov
mov
push
outsb
mov
cwtl
ficomps
mov
loop
or
std
imul
mov
cmpsb
sarb
push
mov
add
fucomip
arpl
idivl
in
xor
fildll
loopne
pop
cmpl
add
cwtl
ja
push
les
shlb
cltd
xchg
lret
cmp
fdivs
mov
add
out
loop
cmp
cwtl
imul
mov
mov
adc
mov
nop
xor
add
pop
mov
outsb
jns
test
inc
aam
sahf
push
xchg
push
sub
enter
mov
and
pop
inc
push
imul
push
pop
test
setge
inc
mov
mov
or
pop
out
pop
mov
shlb
test
int3
scas
mov
or
dec
jecxz
inc
dec
jns
push
ret
mov
aam
mov
xor
inc
adc
sub
jecxz
in
das
or
xor
mov
xor
mov
inc
mov
adc
bound
nop
movsb
in
cmp
fcomps
in
dec
jae
scas
sbb
sbb
push
jno
sbb
aas
test
mov
sbb
imul
outsl
lods
push
aaa
xchg
xor
stc
lret
xor
or
push
adc
pop
inc
jns
push
fdiv
rcrl
call
nop
jno
enter
addr16
aad
mov
xchg
add
nop
pop
mov
imul
xchg
fistps
and
xchg
mov
jne
pop
inc
lock
adc
and
mov
das
inc
pop
or
adc
adc
mov
or
pop
xor
pop
sahf
fwait
jno
xchg
mov
stos
hlt
xchg
mov
add
shr
mov
pop
jp
cli
dec
les
jnp
xchg
dec
jbe
shrl
mov
psubsb
jge
movsb
fstps
sub
stos
inc
mov
sub
and
dec
inc
jb
adc
adc
dec
xor
imulb
add
mov
loope
aaa
add
inc
push
fcoms
in
cmp
dec
lahf
and
add
aas
repz
push
jp
mov
jmp
pop
lods
cmp
inc
push
repnz
add
push
lahf
mov
out
push
cmp
mov
ljmp
lods
add
dec
xorps
test
pushl
dec
xchg
rclb
sbb
fwait
cmp
fs
or
in
pop
jg
ss
in
add
jns
jp
lds
inc
repnz
sahf
les
jge
jo
data16
jae
push
push
jl
subb
notl
ja
sti
mov
lds
insb
push
xor
push
fs
shr
mov
lods
das
fidivrs
push
fsts
and
inc
xchg
mov
hlt
cwtl
popa
mov
js
mov
out
push
pusha
add
and
fildll
test
pop
imul
xchg
fidivrl
ds
push
xor
dec
mov
lea
jg
push
imul
out
and
fdivrl
scas
addr16
out
je
daa
xchg
jo
sbb
aas
sbb
add
xor
xchg
xchg
xchg
lret
jle
iret
jnp
call
push
fmul
data16
in
mov
int
adc
and
fucomi
aas
out
faddl
mov
out
insb
sahf
rorl
xchg
fldenv
bound
out
ret
popa
and
sub
shl
push
fdiv
dec
or
orb
cmp
push
mov
xor
inc
inc
jb
nop
jmp
add
out
cltd
cmp
cmp
push
in
scas
cltd
mov
xchg
xchg
outsb
xor
inc
inc
pop
shll
sub
sub
jns
inc
push
mov
iret
dec
push
mov
test
xor
jl
outsb
xchg
stc
inc
loope
aam
mov
add
and
inc
sti
sub
leave
in
xchg
mov
mov
popa
das
icebp
mov
jp
sahf
pop
roll
loope
nop
and
dec
cmp
and
xchg
out
mov
ja
and
mov
pop
cmp
pop
sbb
lods
xchg
cld
js
lcall
and
xchg
mov
and
fs
sub
adc
mov
mul
mov
push
push
jmp
ja
add
popa
add
movsb
sub
pop
inc
pushf
enter
add
shrl
add
lea
pushf
dec
call
mov
sub
adc
daa
cmp
mov
adc
orb
mov
pop
mov
shll
stos
mov
sub
mov
jmp
aaa
xchg
add
mov
xchg
xchg
xor
movb
or
pop
xor
mov
fdivl
lds
or
push
movsb
iret
stc
stos
pop
pop
mov
movsl
push
add
out
insb
int
outsb
mov
mov
adc
insl
fwait
movl
outsl
lods
cmp
movsb
scas
pop
jecxz
mov
inc
mov
xor
cli
les
jmp
ljmp
sqrtps
jno
xchg
cltd
test
les
sbb
ja
orb
xchg
icebp
xchg
ljmp
test
push
jno
gs
pusha
cmpb
push
aam
test
mov
loopne
test
cmp
push
pop
popf
jle
jle
ds
push
xchg
cmpsl
imul
or
ret
mov
cmc
je
ret
rep
mov
outsb
jp
icebp
rolb
add
or
xchg
xor
xchg
inc
mov
jae
jo
fsubrl
xchg
push
pop
hlt
lods
push
dec
outsb
jb
js
adc
cmc
jbe
stos
jp
hlt
inc
or
sub
mov
jb
xor
sub
lods
xor
cmp
lds
ds
shlb
das
push
xchg
insb
sub
pop
sahf
popf
jb
inc
lods
xchg
mov
dec
mov
push
mov
inc
subl
out
mov
mov
inc
out
mov
xchg
stc
jg
scas
mov
push
or
cmp
sub
or
out
sub
test
push
cld
clc
lds
fwait
add
mov
jb
sahf
sbb
add
xor
repnz
mov
xchg
push
mov
sbb
mov
pop
xor
insb
lods
shlb
jns
push
inc
lock
jb
pop
jge
add
inc
jnp
es
mov
add
adc
push
xchg
imul
fs
jmp
shlb
jge
roll
jg
call
mov
jge
jnp
jb
push
xor
repz
in
stos
pop
or
ret
negl
fidivl
sub
insl
and
mov
add
out
add
jnp
cmp
leave
cli
in
mov
or
mov
inc
lods
sahf
sbb
sub
pop
stos
jp
inc
xchg
fistl
cmp
and
outsl
stos
je
and
insl
repz
push
adcl
fbld
test
mov
add
test
adcl
aad
jnp
mov
hlt
push
push
xchg
mov
push
inc
jb
or
lahf
sub
cltd
test
mov
mov
mov
sbb
jb
push
in
xchg
adcb
mov
addr16
clc
roll
int
roll
fwait
fwait
mov
stos
rolb
fnstcw
mov
arpl
jns
nop
out
xchg
mov
pop
add
ss
shlb
add
pop
pop
cmp
mov
jnp
test
out
out
jo
mov
or
mov
lock
push
ss
andb
aaa
pushf
lock
gs
adc
fadd
popa
fwait
data16
adc
hlt
mov
test
repnz
or
xor
adc
call
add
mov
pusha
jno
jns
xor
cmp
inc
lds
mov
mov
aam
fldcw
ds
sbb
mov
inc
add
pop
push
les
lret
es
aam
sbbb
xchg
pop
and
xor
pop
xchg
cmp
das
std
dec
lret
mov
cwtl
lcall
pop
pop
lods
loope
mov
lret
xor
ror
scas
vpshufhw
lock
push
lret
pop
stc
mov
jmp
popa
mov
or
inc
push
xchg
xor
dec
inc
push
arpl
andl
mov
sbb
sub
mov
testl
inc
lret
pop
ret
lods
jle
stos
loop
iret
add
rorl
sub
test
mov
mov
fs
adc
or
das
out
ljmp
fnstcw
pop
loop
sub
jnp
stos
sub
and
pop
and
jno
or
adc
loope
int3
fiaddl
ret
idivl
adc
fnsave
jp
fisubrl
das
ret
dec
jmp
hlt
das
sbb
cmpsl
xorl
mov
rcrl
sahf
pop
imul
or
cltd
in
dec
dec
ficompl
and
push
jb
mov
cmp
dec
xor
cmp
fildll
ds
int3
nop
fdivl
jb
shr
mov
push
jo
push
sub
dec
cmp
sbbl
leave
jne
sub
lock
cmp
or
push
xchg
mov
pusha
push
mov
xchg
or
xchg
aas
movsb
xor
dec
out
nop
mov
xchg
aam
adc
popa
fwait
jo
out
dec
dec
sahf
ja
mov
pushf
mov
adc
std
mov
adc
mov
xlat
ja
cmp
out
pushf
pop
xchg
test
in
ret
push
mov
daa
xchg
mov
pop
int3
lea
cmp
lcall
sbb
and
sub
adc
lcall
xor
jmp
jp
xchg
cmpsb
inc
push
cmp
stos
xchg
ds
imul
add
outsl
xchg
jnp
shl
pushf
push
lods
aas
xchg
ja
push
mov
xor
dec
cltd
aas
inc
cld
cmp
mov
cmp
imul
nop
roll
xor
sbb
iret
out
cli
xchg
pop
sbb
jmp
data16
sub
cmpsb
add
push
fidivl
push
lods
push
pop
jecxz
aas
movsl
jnp
sbb
dec
xor
pop
dec
fs
daa
and
pop
mov
mov
aas
xchg
loop
cmp
in
jle
adc
in
lcall
testl
push
inc
xchg
cmp
xchg
pop
js
cmc
mov
int
inc
pusha
cmpsl
xchg
xor
cmp
cld
scas
pop
cwtl
cmpsb
jle
lock
fcoml
and
cmc
and
movsb
mov
xchg
pushf
xorb
inc
xorl
and
sbb
jno
out
frstor
movb
xor
mov
imul
xor
aas
or
inc
dec
stos
xchg
sub
adcl
orb
sub
mov
cmp
mov
pop
mov
inc
cmp
negb
mov
sbb
cmp
jmp
adc
sub
fadd
push
mov
addb
mov
pushf
pop
stos
lea
fstp
aas
push
movsb
ficoms
lods
sub
pushf
adc
lahf
testl
aad
clc
in
div
sub
and
sub
sub
push
sti
test
xchg
dec
imul
gs
pusha
pop
rorb
mov
pop
arpl
lahf
cmpsb
jg
push
mov
xlat
idivb
inc
push
and
push
movsl
leave
mov
mov
fisubrs
icebp
hlt
dec
leave
ret
bound
lea
ljmp
fistpl
stc
aad
jp
loopne
fwait
out
fwait
adc
cmc
js
push
and
mov
jnp
pop
shrb
jmp
jg
xchg
test
out
jb
sub
fisttpll
mov
inc
rcl
add
cwtl
push
or
mov
movsl
adc
mov
pop
xlat
mov
xor
inc
movsl
mov
loop
xchg
lods
stc
enter
push
sub
aad
pop
sub
jmp
adc
lret
andl
or
xchg
repz
or
movsl
xchg
mov
test
sbb
sbb
data16
out
out
add
inc
mov
sbb
ja
jecxz
scas
int
dec
or
filds
int3
pushf
addr16
inc
sti
mov
pushf
jo
decb
rclb
xchg
adc
jae
insb
roll
test
rcr
aad
in
xchg
jge
aas
ljmp
xchg
mov
insl
inc
push
in
aas
pop
inc
int
adc
lods
mov
cmp
sub
dec
movsb
mov
roll
lea
shrb
in
call
rcl
hlt
jae
push
mov
mov
andl
cmpsl
pop
push
movsb
cld
lods
push
cmp
imul
cli
loopne
jge
or
mov
bound
scas
shlb
pusha
int3
test
jo
mov
mov
cmp
xchg
std
aaa
mov
add
or
and
dec
into
push
test
sbb
add
mov
mov
sbb
xor
mov
repz
je
mov
jmp
jae
imul
ljmp
and
cmovl
or
addr16
lock
std
aaa
xchg
mov
roll
push
cs
in
movsb
inc
mov
push
push
or
add
ret
xor
jb
push
adc
stos
mov
xchg
sub
inc
push
push
enter
lods
mov
das
imul
mov
cmp
ljmp
mov
pop
sbb
addr16
dec
test
pop
dec
push
xor
test
jnp
push
pop
and
xchg
lds
fsubr
mov
fcomp
add
cmpsl
add
and
adc
out
xor
jmp
push
shrl
lret
std
jle
fdivs
jb
popl
or
in
jnp
jmp
sbb
add
test
xchg
cld
mov
xor
mov
push
inc
daa
dec
push
aaa
cmp
test
loop
outsb
out
jno
roll
xchg
mov
xchg
jne
or
scas
and
mov
push
inc
xor
jmp
ret
aaa
shll
mov
and
cmp
movsl
out
ds
lahf
rorl
mov
mov
adc
ljmp
push
push
sub
push
repnz
xorl
jnp
inc
mov
xchg
sti
std
in
aad
and
fistpl
movsb
outsb
out
sub
sbb
jae
int
cmpb
adcl
xchg
imul
outsb
testl
cmp
loopne
xlat
fs
and
push
icebp
lret
rcll
lock
mov
xor
out
das
dec
or
ret
aam
nop
push
rolb
jne
push
or
mov
stc
movsb
xchg
mov
dec
cmp
or
jne
insb
xchg
adc
xchg
mov
cmp
mov
stos
sub
mov
mov
ds
and
mov
daa
push
mov
outsl
push
dec
data16
mov
jnp
push
data16
mov
lret
jae
out
in
mov
xchg
aas
leave
ds
xchg
test
mov
pop
in
cmpsb
lods
addr16
adc
pop
mov
jmp
sub
stc
cmp
inc
outsl
pop
xor
cs
push
sub
mov
pop
and
cmp
bswap
jp
fcmovne
es
pusha
sub
ret
mov
sar
and
pop
adc
jbe
fdivs
andl
sti
std
cmp
push
dec
outsl
and
cmc
or
jnp
dec
clc
sbb
cwtl
stos
fidivs
shrl
fwait
js
push
and
cmp
mov
in
or
addr16
push
jge
clc
clc
cmp
scas
addr16
shrl
mov
mov
push
jb
imul
cmp
cmp
loope
or
pushf
stos
xchg
pop
push
dec
int
inc
outsb
push
dec
lea
inc
sub
cltd
sbb
mov
fcoml
push
pop
push
xor
in
loopne
jb
mov
ret
cmovne
es
fildll
sub
subl
cmpb
or
and
nop
cli
adc
or
sub
clc
push
in
and
test
inc
adc
fsts
out
pop
test
and
dec
call
mov
inc
in
add
cltd
xchg
insl
pop
sub
ja
movsb
and
faddl
xchg
adc
push
jmp
xchg
push
push
je
mov
mov
roll
cmp
inc
popf
outsb
mov
jmp
dec
or
pop
lods
xor
adc
xchg
inc
dec
cltd
jns
inc
jge
in
pop
lret
cmp
mov
dec
out
enter
xlat
sbb
fwait
sub
jns
pop
push
mov
or
cmpsl
shl
stos
mov
cmpsl
jo
xchg
lods
les
jnp
and
cmpsl
pop
mov
sahf
test
xor
mov
xchg
aas
inc
sbb
lds
jns
xchg
cld
xchg
mov
rep
add
mov
mov
sub
cmp
mov
sub
sahf
mov
fldcw
les
xor
into
fs
das
dec
insb
add
push
cmp
shl
aad
xor
jo
mov
into
int
outsb
adcb
movsl
xor
mov
push
xlat
stos
repnz
cmp
stc
xor
addr16
roll
push
pushf
fldcw
jle
inc
sbb
sbbl
cmp
mov
push
int
mov
dec
out
arpl
int3
inc
push
repnz
dec
add
es
add
movsb
out
mov
mov
add
sub
shll
push
jo
ficoml
mov
outsl
push
mov
shrb
mov
jne
fldl
xor
mov
jl
ja
and
mov
mov
dec
sub
aas
cmp
cs
test
jmp
lahf
mov
lock
adc
adc
cltd
jp
mov
sbb
daa
fs
mov
sub
push
movl
ljmp
cmpsl
das
cmc
dec
and
rcrb
cmp
mov
pusha
lret
xchg
cmpl
inc
lods
loope
inc
xor
push
ucomiss
sub
je
sub
dec
jg
fdivrs
or
push
lahf
test
inc
xchg
jmp
cmpsl
stos
sub
mov
stos
and
push
jb
in
push
clc
cwtl
idivl
push
push
lea
mov
imull
dec
aas
imul
mulb
sub
cmpsl
test
xor
insl
aaa
pop
pushf
and
push
inc
dec
mov
mov
inc
gs
lret
inc
ret
sarb
test
add
xchg
and
sub
push
adc
inc
fmul
xor
clc
bnd
and
sbb
pop
adcl
repnz
insl
dec
aaa
fsubr
xor
jnp
xchg
sub
in
cmp
pop
xchg
push
inc
xchg
mov
xor
xchg
sar
out
inc
orb
mov
mov
pushf
mov
dec
cmpsl
out
push
lret
bound
inc
dec
ficoml
push
or
dec
xchg
mov
leave
and
xchg
mov
stc
sub
insl
add
std
cmp
subb
gs
xchg
shll
fs
adc
jb
addb
jge
scas
les
sahf
enter
mov
fs
sbb
cld
out
pop
nop
push
inc
xor
pusha
sub
mov
xor
shrl
push
jo
cmpsb
push
icebp
lret
adc
out
pop
xchg
ja
shr
scas
popf
adc
lds
sbb
es
cltd
mov
mov
xor
add
mov
into
xchg
dec
movsb
jbe
bound
jne
cmp
push
call
iret
and
xchg
push
push
sbb
xchg
cltd
inc
sub
jle
mov
call
mov
jg
inc
dec
mov
loopne
xchg
fwait
fwait
stc
inc
jno
mov
cmpsl
or
je
sub
xchg
scas
into
mov
mov
mov
loop
sub
mov
inc
push
xchg
or
inc
test
call
rcr
pop
xor
xlat
push
and
mov
push
sbb
pop
or
out
mov
xchg
and
pop
les
xchg
cwtl
push
stos
adc
push
out
loopne
inc
add
pop
mov
rcll
test
push
jge
fs
nop
mov
mov
pop
mov
sub
sbb
pusha
cmpsl
cwtl
adc
adc
sbb
sbb
jae
or
and
in
push
sbb
addr16
lcall
lret
repnz
push
adcl
dec
xchg
dec
cld
ljmp
iret
dec
fcoml
push
pop
test
jmp
dec
push
xchg
sti
icebp
mov
repz
repnz
shll
ret
insl
add
add
pop
rorl
sub
fildll
add
inc
xor
xchg
pop
xchg
inc
xchg
xchg
fistl
jp,pn
mov
push
loope,pt
inc
adc
out
push
push
cltd
ficomps
jnp
mov
in
or
ret
cli
loope
aam
aas
icebp
adc
inc
mov
and
lods
sti
stos
testl
adc
xchg
or
sub
dec
outsl
fs
ret
std
imul
mov
push
lods
pop
sbb
jl
dec
fdivr
sbb
popa
and
icebp
mov
outsl
lahf
int
es
xchg
xchg
xlat
xchg
test
in
pop
push
mov
or
sbb
pushf
ds
fwait
sub
popa
cli
mov
and
inc
loopne
idiv
pop
jp
push
je
push
js
pop
pop
mov
xchg
std
jno
push
jae
jl
jp
ret
or
js
iret
add
mov
out
jp
movb
ss
mov
test
jo
push
outsl
sbb
outsl
cs
xchg
arpl
lret
mov
inc
xchg
xchg
pop
mov
das
sub
mov
mov
cli
dec
in
mov
mov
lea
xchg
in
jp
push
es
push
rcl
sbb
push
cmc
mov
mov
add
outsb
ret
mov
ja
and
sbb
data16
leave
or
es
fucomip
pop
aaa
and
add
jl
lock
fcmove
dec
mov
jbe
imulb
xor
push
and
mov
jno
jns
cmpsl
outsb
push
mov
fdivs
jae
xchg
jno
mov
and
call
push
push
test
fnstcw
dec
jmp
cld
sub
and
aaa
call
xor
mov
jb
jo
lret
loopne
pop
scas
stos
sbb
xchg
push
mov
mov
pop
pop
lcall
enter
movsb
stos
xor
popf
sahf
lods
fwait
inc
push
inc
jmp
sti
pusha
mov
adc
xchg
mov
repz
pop
pop
popa
movsb
pop
pop
imul
push
xor
add
mov
mov
test
or
mov
cmpsl
pop
mov
lods
dec
stos
push
insb
sub
cmpsb
add
ja
sub
pop
stc
lret
sbb
pop
out
cmc
enter
imul
sbb
or
inc
dec
imull
push
adc
stc
cmovge
mov
pop
jns
push
jg
dec
mov
inc
xor
mov
sub
es
push
add
jno
push
cld
push
inc
inc
sbb
and
jl
jp
adc
push
fwait
pop
mov
aam
fnsave
adc
sbb
pop
cli
lds
outsb
cmp
cli
cwtl
fwait
lret
mov
fistps
xorl
mov
lods
pop
sbbl
mov
rcr
stos
jl
adc
std
hlt
cmp
cmp
xor
lock
sub
push
fmuls
clc
pop
mov
mov
stos
sahf
mov
pop
repnz
pop
xor
fldcw
mov
nop
sbb
lods
push
jbe
cmc
dec
add
stos
mov
int
pop
pop
jp
adc
mov
xor
dec
mov
into
mov
mov
adc
mul
ret
push
data16
mov
aam
jo
add
mov
movsl
inc
cmp
mov
mov
sbb
das
cmp
repnz
shll
mov
push
adc
into
push
sub
dec
fidivs
xchg
insb
sbb
inc
mov
mov
mov
aas
jns
jb
adc
aam
lret
ret
xchg
outsb
cmp
cmp
sub
out
stc
rcll
add
sub
cmpsb
enter
arpl
jmp
dec
and
pop
movsb
insb
xchg
adc
add
xchg
pushf
fcoml
pop
fwait
add
xor
mov
fistl
popa
mov
icebp
push
jnp
les
aam
inc
push
push
out
push
mov
fiaddl
insl
in
addr16
xor
jo
lret
sub
loope
mov
aad
inc
mov
cld
movsb
sub
movsl
push
data16
sahf
xor
jle
std
dec
sbb
pushf
xor
jp
cli
adc
xorl
inc
aaa
mov
cld
jp
mov
cmpsb
pop
lods
push
pop
xor
xchg
cmp
jo
call
lcall
clc
imul
add
call
dec
pop
xchg
jb
clc
cmc
jmp
add
cmpsl
icebp
mov
push
outsl
and
pop
inc
mov
push
loope
cld
cmp
shll
movsl
jp
mov
daa
or
inc
jl
imul
imul
jle
or
loope
cld
sub
cltd
lcall
sbb
mov
lods
or
xor
cli
cmc
adc
mov
dec
jb
inc
fstpl
nop
jecxz
mov
dec
jmp
mov
add
pushf
xchg
xor
test
adc
cmp
mov
loopne
and
out
fwait
mov
js
cmc
pop
xor
sbb
push
xchg
xor
pop
dec
aam
mov
clc
jb
mov
js
adc
push
fsubrp
arpl
adc
mov
jnp
idivl
jbe
mov
cwtl
clc
jns
in
mov
and
sub
add
cs
cli
in
dec
mov
mov
imul
and
aad
inc
pcmpgtd
mov
and
mov
repnz
sbb
pop
or
or
sbb
lret
or
sbb
stc
shrb
aas
mov
push
out
mov
cmpsb
pusha
jge
mov
call
daa
mov
lds
bound
cmpsb
adc
fdivs
dec
cmc
xchg
sub
xor
mov
mov
add
lock
dec
push
mov
push
outsb
nop
and
jne
cli
push
mov
mov
mov
xchg
dec
dec
inc
insl
xchg
imulb
mov
sarb
stos
nop
insb
mov
adc
adc
decl
loope
stos
jo
aam
cmpsb
push
pusha
push
pop
cmpsb
fistpll
lods
push
scas
mov
cmp
lcall
push
push
inc
cmp
cmpsl
xor
mov
cs
adc
sub
or
sbb
mov
es
stos
xlat
je
in
icebp
xlat
push
sbb
sahf
sub
dec
ret
cmovns
pushf
les
mov
sar
cwtl
pop
out
or
outsb
pop
mov
insb
mov
js
push
test
gs
ds
lahf
jbe
sahf
dec
js
jge
sbb
test
dec
scas
in
arpl
add
mov
and
xadd
cmp
xor
fisttps
mov
xchg
out
es
sbb
and
test
jmp
imul
lret
pop
xchg
das
cmp
data16
xchg
push
dec
mov
addr16
aam
or
xchg
mov
push
out
leave
imul
jecxz
or
outsl
inc
fs
pop
icebp
and
sub
popf
cmpsb
mov
jmp
mov
in
in
loopne
stc
outsl
repnz
xor
test
or
movsb
mov
test
aas
stc
adc
fdivrp
add
fdivl
sub
mov
cmp
inc
cmp
xchg
jno
das
sbb
fcompl
mov
popa
testb
scas
cmp
arpl
aaa
add
jmp
add
pop
xor
sbb
mov
push
scas
in
cwtl
sti
mov
jmp
ljmp
mov
or
push
ret
cmpsb
js
out
pop
xchg
jmp
push
push
cmp
in
add
sbbl
and
rclb
in
div
mov
push
rcll
hlt
cmp
stos
insl
mov
inc
aaa
dec
stos
rcl
mov
test
into
pushf
aam
jmp
sbb
mov
lcall
out
test
ficompl
mov
lods
jl
add
push
add
adc
das
add
and
rcr
mov
pushl
sub
daa
stos
mov
xor
or
mov
stc
insl
stos
pop
jne
hlt
arpl
into
jae
xor
jbe
fwait
repnz
int3
or
pop
or
sbb
in
xor
icebp
adc
pop
mov
lods
jne
or
jl
mov
stc
lcall
dec
or
imul
jge
lahf
lea
shrl
sub
jmp
mov
ret
ljmp
jecxz
jmp
imul
shll
lcall
sarb
xchg
push
sbb
pop
sub
fcoms
or
mov
les
xor
mov
sarb
nop
pushf
fndisi(8087
rcrl
sahf
xor
sbbl
cmpsl
or
fcmovu
jge
lods
inc
int
adc
pop
arpl
sub
adc
xor
loope
push
popa
hlt
test
scas
push
sub
adc
and
push
repz
mov
cmpb
fs
fs
xchg
mov
pop
imul
adc
ret
xchg
dec
shll
lds
iret
sahf
push
hlt
ljmp
shll
fs
xchg
and
negb
mov
jae
mov
lret
xchg
xor
aaa
int3
data16
and
cmpsb
push
mov
cmp
popf
sub
pop
gs
imul
popa
pop
push
xchg
insb
cs
mov
icebp
cmp
mov
jp
add
out
xchg
jno
popa
rcll
sbbb
fldt
and
xchg
jp
leave
es
inc
out
out
cmc
rol
add
jne
pop
les
cmp
scas
cmp
ficoml
fwait
or
xor
mov
lahf
jl
ljmp
dec
ja
call
test
jb
das
mov
adc
xor
inc
sarb
rorl
push
mov
gs
out
xchg
aam
mov
pop
out
lret
call
lcall
xchg
cmp
inc
xlat
mov
pop
jo
or
popf
xor
sbb
mov
or
sub
divb
lock
rolb
mov
cmpsb
push
aaa
pop
adc
arpl
push
es
jle
push
or
mov
sub
push
scas
leave
inc
int3
mov
cmp
sbb
js
decl
add
rolb
pop
outsb
sbb
push
xorb
mov
push
inc
mov
xchg
fidivl
pushf
movsb
pop
or
xchg
stc
sbb
push
xacquire
pop
stos
push
cmp
cld
cmpsb
sub
add
inc
xor
dec
pushf
push
mov
lods
fadd
daa
sbb
cmp
dec
xor
lahf
push
in
hlt
mov
cld
cltd
lcall
xchg
xor
in
xor
jne
lahf
inc
js
ljmp
mov
and
mov
adc
or
add
cmp
test
push
adc
ret
xchg
outsl
aas
jo
xor
push
cmp
cmpsl
rorl
insb
in
repz
xlat
xorb
mov
dec
test
dec
gs
cld
clc
inc
fnsave
shll
and
arpl
or
movsb
in
or
out
pusha
lods
leave
pop
push
jp
std
mov
adcl
mov
sbb
push
push
js
outsl
xor
mov
xor
lahf
gs
and
inc
pop
xor
xchg
loop
mov
movsl
sbb
mov
jecxz
jno
pushf
push
cmp
adc
mov
test
mov
imul
adc
fistpll
mov
sbb
and
jmp
cmp
mov
xor
and
test
or
xchg
test
add
push
fld
pop
inc
das
add
and
repz
int3
nop
xor
push
and
mov
xchg
std
mov
and
lahf
dec
push
cltd
lahf
inc
insb
mov
test
mov
andl
test
and
aas
sti
xorl
je
mov
dec
out
mov
lds
mov
xchg
ss
ret
adc
jb
push
lods
scas
iret
sbb
inc
icebp
test
in
das
outsl
rcrb
popa
inc
popa
xchg
cmpsb
xchg
test
mov
and
addr16
in
push
aas
mov
xchg
pop
lret
jl
lock
and
pop
ja
sub
rcrl
es
ljmp
fisubl
dec
into
movsl
ret
push
cmp
sti
pop
testb
mov
imull
mov
xchg
push
fistpll
lret
xor
stc
fimuls
push
lahf
or
out
outsl
pop
mov
or
lcall
addr16
or
call
scas
mov
scas
es
ljmp
lret
push
ds
out
or
hlt
sahf
mov
shlb
pushf
daa
inc
and
lahf
jp
pop
and
cmpl
xor
pushf
push
test
aad
sbb
dec
loop
imul
jecxz
arpl
stos
iret
sbb
xor
jne
xchg
dec
ffree
jle
pushf
out
cmp
popa
mov
loop
sub
sbb
cmp
pop
arpl
mov
pop
lret
dec
leave
xchg
in
ljmp
xchg
pushf
xchg
mov
xor
mov
js
clc
adc
loope
sub
dec
fisttps
aas
aas
mov
sub
iret
int
pop
xor
dec
pop
xor
mov
sbb
gs
das
stc
jne
loopne
jge
outsb
ja
test
mov
xchg
rorb
xchg
sub
mov
int3
outsl
or
push
xchg
jge
aas
lods
mov
jp
sahf
loopne
clc
js
xchg
leave
push
aad
cld
xchg
and
lock
stos
bound
inc
pop
push
out
leave
pop
sub
mov
mov
xor
inc
pop
frstor
arpl
cltd
fsubrs
adc
mov
into
mov
lea
or
xchg
and
pop
adc
cmp
mov
and
ucomiss
and
mov
fsubrs
sbb
dec
mov
push
jge
xchg
adc
sub
add
fucomp
bound
pop
pop
ja
mov
jae
push
mov
daa
mov
xlat
fcmovnb
shl
in
push
adc
mov
jae
int3
das
add
sbb
icebp
xchg
icebp
xchg
push
shr
loopne
and
mov
or
lret
push
sbb
daa
push
outsb
push
push
jmp
mov
enter
cwtl
scas
movsb
and
shr
push
pop
out
mov
or
dec
mov
lods
inc
mov
and
leave
push
pop
movsb
idivb
mov
mov
push
adc
dec
sub
je
aam
je
das
xchg
repz
out
mov
pop
or
pop
or
jnp
loopne
and
inc
call
rclb
jg
jae
sbb
in
std
or
imul
sbb
adc
cmp
cmp
loop
push
dec
fmull
jno
dec
xor
movl
loope
xor
mov
dec
mov
lret
scas
fldenv
dec
fwait
jnp
and
popf
pop
arpl
subb
ds
sarl
pop
fnstsw
xlat
aas
jecxz
aad
sbb
pusha
rolb
push
ja
add
cmpb
lahf
inc
mov
jno
jo
adc
js
fisubs
adc
scas
fnsave
popf
mov
push
aad
fld1
dec
mov
pop
mov
mov
aaa
mov
fdivrs
sahf
popa
faddl
cs
sbb
rorl
ret
or
fcoml
test
popf
and
inc
or
push
push
dec
test
mov
mov
enter
xchg
and
cwtl
jle
jle
gs
je
cmp
or
push
and
push
push
sbb
repnz
into
pushf
dec
andl
sbb
xchg
inc
pop
xchg
add
lcall
sub
add
ficoml
mov
aas
mov
pop
lret
aad
jae
push
frstor
dec
movsb
or
aad
jo
sub
lea
outsb
inc
jnp
pop
gs
shrl
xchg
fucom
icebp
outsl
jae
rcll
rclb
add
test
aaa
ljmp
pop
fidivl
xor
xchg
inc
jecxz
leave
adc
out
inc
xor
lcall
in
dec
cmp
aad
inc
insl
add
cmp
mov
mov
mov
add
push
ds
jns
das
enter
pop
iret
pop
mov
movsl
loope
pop
jp
addr16
cltd
mov
fstp
inc
sub
rcrl
loopne
arpl
int3
hlt
cmp
imul
loope
in
lea
test
cmp
pop
into
sbb
sub
in
sbbl
xor
mov
imul
jl
sahf
xor
movsl
in
cmpsl
cltd
jp
out
dec
lds
push
mov
stos
pusha
cmc
pop
lods
fcom
int3
rorb
in
inc
dec
xchg
add
sti
xchg
loope
and
test
mov
jae
fistps
xor
outsb
jle
int
or
repz
stos
jecxz
pop
cli
adc
stos
fdivl
insl
jg
cmp
sar
mov
out
leave
pusha
insl
into
in
or
iret
jns
adc
push
and
popa
xor
lea
mov
xor
xchg
xchg
insb
dec
dec
xor
out
iret
mov
ja
jmp
ja
add
in
mov
inc
xor
sbb
lods
jmp
adc
imul
mov
fistl
lahf
out
pop
jecxz
pop
jecxz
in
adc
dec
or
data16
cld
std
pop
xlat
out
popf
adcb
das
jae
jbe
leave
sbb
test
xor
pop
jp
sub
fnsave
xchg
lret
stc
cmc
ljmp
mov
push
or
inc
cltd
insl
push
xchg
ret
jns
test
ja
insl
push
and
xchg
jg
cmc
jg
fnstcw
add
imul
test
adc
inc
bound
pop
push
xor
mov
mov
dec
and
mov
fbld
jbe
add
bound
mov
movsb
test
pushf
int3
and
adc
fucom
mov
xor
sbb
popf
rorl
cs
aas
jb
repnz
sub
jb
es
ljmp
fldcw
fs
jge
xor
outsl
enter
xor
je
das
test
cmpl
sbb
lret
aas
dec
test
add
lahf
xchg
lods
mov
aam
jge
add
push
cltd
popa
scas
pop
mov
lods
xchg
imul
jmp
dec
lahf
cmpsl
sbb
xchg
mov
lods
push
sbb
dec
cli
cmp
inc
stc
testb
push
mov
inc
jmp
ret
cmc
scas
outsl
inc
add
ja
rorb
aas
aaa
enter
lea
cli
icebp
push
cmpsb
xor
sbb
mov
dec
lret
xchg
push
test
inc
insl
aas
or
dec
push
aad
inc
clc
and
mov
lock
mov
or
adc
ret
mov
jbe
fdiv
pop
addr16
push
push
dec
arpl
mov
pop
push
add
push
adc
bound
xchg
rol
xor
arpl
xchg
sti
ljmp
ja
pop
lret
mov
mov
cld
addr16
mov
pop
in
in
add
push
xchg
icebp
mov
pop
sub
cltd
pop
leave
lea
int
push
std
pop
push
push
shrb
ja
push
aad
idivb
loopne
mov
testb
push
call
push
cmp
jbe
xchg
lcall
call
fmull
dec
dec
pusha
add
fsubrl
call
and
das
xchg
xor
cmpsl
sti
hlt
popf
ljmp
pushf
clc
dec
out
jo
or
imul
mov
jl
add
push
ret
fnstsw
addr16
cmpsb
cld
mov
negb
idivb
aad
sarb
push
pop
add
repz
jae
push
sti
cld
lret
mov
mov
lahf
stos
shlb
int3
fmuls
lahf
jns
mov
and
sub
mov
shlb
mov
out
outsb
jne
pop
xchg
shlb
adc
and
decb
jb
lods
aas
and
xchg
mov
adc
jp
xor
movsb
mov
sbbl
pop
adc
cmpsl
and
imull
pop
adc
outsl
movntq
mov
cmp
and
adc
lea
test
adc
icebp
lods
ss
mov
into
and
stos
fwait
xor
mov
jle
das
adc
dec
fcmovnbe
jl
and
sub
ljmp
adc
lods
cmp
sub
je
push
xor
xor
push
push
push
loop
cli
mov
mov
or
ljmp
fidivs
bound
push
mov
sub
les
cmpb
popl
cld
push
or
mov
idiv
mov
xor
in
mov
imul
daa
push
fcomps
adc
adc
cmpsb
and
int
xor
inc
mov
pop
inc
sub
lea
jb
mov
dec
call
dec
loope
adc
jae
xor
mov
adc
jne
aas
mov
rolb
clc
sbb
mov
pushf
inc
xchg
movsl
mov
xchg
pop
imul
lret
jae
rcrb
mov
test
incb
push
sbb
sub
stos
leave
jg
mov
loop
lret
popf
pop
mov
fwait
clc
xor
or
fidivs
mov
mov
aas
add
push
jle
divb
cltd
inc
pop
loop
push
sbb
mov
in
cltd
push
add
out
in
or
lret
iret
or
test
int3
ss
jecxz
mov
idiv
add
mov
pushf
outsb
arpl
clc
cmc
dec
add
outsl
sarl
nop
inc
cmpsl
sbb
push
and
pop
in
scas
mov
cs
dec
or
or
insl
in
incl
xorl
mov
jl
xchg
lds
arpl
fldl
arpl
addr16
jae
adc
ret
mov
sbbb
lret
or
pusha
fisttpl
lock
sbb
out
stos
iret
cmp
or
in
hlt
adc
cmpsl
xor
sub
inc
sbb
dec
add
pop
test
ret
xor
subb
and
test
or
xor
loope
xchg
lret
loop
jb
mov
hlt
mov
push
jp
mull
loop
push
mov
jno
imul
subb
jle
iret
cmp
mov
ret
sbb
mov
jmp
cmc
into
popf
lret
jecxz
cmpsb
add
cmpb
mov
cmp
aas
jecxz
sarb
add
jmp
fwait
or
nop
xchg
sbb
negl
daa
jae
bound
sti
adc
repnz
mov
mov
out
sub
jno
inc
sub
pop
dec
mov
loope
dec
lds
or
out
and
mov
rorl
xor
and
mov
bound
pop
in
insl
inc
test
inc
mov
dec
cmp
test
lds
fiaddl
xchg
mov
dec
pop
test
xchg
leave
outsl
cmp
int3
cmp
mov
out
jnp
dec
sub
xor
in
jp
mov
call
idiv
or
movsb
jmp
pop
aam
das
loope
arpl
fistps
jge
js
push
cmc
and
fdiv
adc
xlat
mov
or
out
add
mov
outsl
scas
pop
fistl
mov
rcl
adc
mov
incl
dec
pop
xchg
iret
mov
jg
jmp
mov
out
jns
dec
jns
es
pop
js
or
int3
scas
jne
or
push
jge
xchg
add
scas
outsb
ret
adc
bt
mov
cwtl
call
adc
add
dec
xlat
jmp
push
into
in
lahf
dec
jge
lahf
loopne
or
outsl
mov
outsb
loopne
clc
out
mov
aad
iret
fsts
cmp
add
jns
sti
sbb
xchg
cmp
cld
jl
jns
cmc
or
mov
xlat
mov
aad
int3
outsl
add
mov
mov
push
arpl
jns
dec
es
test
dec
jle
adc
pop
stos
repz
hlt
xor
xchg
sbb
dec
add
mov
shrb
dec
pop
jae
mov
xor
cld
or
adc
and
dec
scas
je
fwait
aaa
dec
ljmp
ljmp
in
stos
inc
outsb
mov
scas
push
pushf
mov
dec
or
inc
test
imul
xor
outsl
seto
cmpsb
int3
stos
loope
pop
nop
shrl
iret
shll
pop
pop
dec
dec
sbb
cmpsl
xor
mov
jbe
mov
jmp
mov
cmp
lret
push
cs
stc
sti
pusha
test
or
mov
dec
sbb
shl
adc
sbb
pop
ret
adc
int
lret
ljmp
dec
ret
mov
sahf
flds
mov
mov
cmpsl
mov
and
roll
push
bound
jns
jg
pop
setae
jp
adc
xor
test
and
inc
pusha
dec
popf
cmpsb
jecxz
mov
push
das
adc
js
cwtl
jge
pushl
sub
cmp
mov
push
mov
jae
div
je
ds
sti
jmp
pop
sub
push
add
test
and
lret
or
adc
adc
jmp
xor
gs
in
jno
lcall
orb
mov
inc
es
dec
rcrb
mov
lcall
mov
pop
or
adc
testb
sub
push
adc
jne
enter
xchg
push
das
cmpl
lock
aam
cmpsb
js
sbb
jb
int
movsb
mov
sbb
and
repnz
jl
cmpsb
cmp
jne
das
dec
leave
push
shll
ret
arpl
je
aas
icebp
cmp
faddl
insb
in
gs
shll
jle
lods
int
lods
shl
sbb
or
fidivs
hlt
cli
lds
ret
jle
insb
inc
shrb
and
fldenv
pop
push
sub
add
mov
jmp
test
pop
fmul
testl
andb
scas
das
or
lret
sub
stc
xorl
sbb
xchg
shll
xchg
inc
add
xor
or
xlat
loop
or
out
lahf
insb
lahf
cld
push
out
imul
fadds
xchg
adc
lea
push
fsubrs
push
sahf
or
test
inc
rcr
test
lret
movsb
mov
fucom
xchg
fsubl
lret
scas
add
incb
scas
jae
mov
sarb
mov
mov
movsl
pop
sbb
pop
shll
adc
mov
je
jnp,pt
jmp
mov
jge
out
mov
cs
or
rcr
aad
popf
jl
adc
ror
xchg
xor
dec
repnz
repnz
out
lret
pop
jns
cmp
mov
fidivl
xchg
std
cld
clc
adc
pop
hlt
adc
mov
gs
push
std
adc
pop
daa
insl
scas
xchg
imul
sub
ds
lods
mov
pop
mov
mov
popf
sbb
popa
dec
mov
cmpsl
hlt
xorl
enter
and
jmp
out
xchg
jnp
shrb
decb
push
test
popa
dec
push
pop
jo
aaa
sbb
mov
fstl
rolb
jl
pop
mov
pop
dec
and
xchg
dec
cmpsl
add
jae
pop
hlt
xchg
subb
mov
popa
xchg
mov
mov
mov
mov
es
lock
push
imul
adc
jae
dec
fnstcw
aad
lds
stc
sbb
mov
sbb
mov
mull
test
lds
pop
xchg
mov
cmp
sbb
or
ds
popa
lods
add
inc
scas
xor
add
pop
test
mov
jns
jg
in
sbb
lds
out
ret
xchg
mov
adc
leave
out
cmc
test
rclb
sub
lds
dec
jl
jns
cmp
adc
pop
dec
or
in
out
sbb
adc
xchg
dec
push
iret
sbb
mov
and
mov
and
xchg
out
fsubrp
shrb
or
mov
push
add
test
test
imul
orl
push
and
in
sbbl
popf
into
add
repnz
adc
mov
inc
cmp
cs
or
mov
lds
mov
dec
cmp
cwtl
cmp
jl
xor
ds
mov
in
mov
fcompl
lds
les
fs
xor
lock
dec
mov
pusha
push
dec
push
int3
pop
je
mov
dec
inc
push
xchg
push
out
mov
xor
jae
mov
sbb
push
notl
fsubrs
add
push
out
push
xchg
xchg
xchg
cmp
dec
push
divb
push
pop
fistl
and
adc
pop
shr
mov
jecxz
scas
out
aas
sbb
sbb
push
mov
repz
fldcw
sub
inc
xchg
pop
ljmp
pop
mov
aad
test
adc
jb
rol
jnp
shlb
stc
push
test
lods
stc
arpl
jb
cmc
clc
popf
xchg
add
dec
ret
stc
sbbl
lods
cld
imul
sub
push
pop
loope
dec
lea
inc
cmpsl
adc
enter
out
les
mov
nop
push
call
pop
enter
outsb
xchg
in
add
cld
addr16
push
lds
stos
or
lea
inc
lahf
movsb
rorb
ljmp
cmp
movsl
push
dec
test
mov
sbb
xchg
sbb
xor
and
daa
dec
add
mov
adc
lods
pop
cmpsb
cmc
add
push
lret
in
jecxz
adc
pusha
jp
push
into
xlat
jg
nop
cld
push
or
jl
clc
mov
insb
push
or
imul
imul
aam
cmp
dec
xchg
xlat
ds
or
dec
int
add
popf
scas
nop
in
sub
xlat
lcall
cmp
aas
push
dec
inc
insb
sub
in
sbb
cmp
fwait
pop
enter
xor
mov
imul
neg
jp
es
mov
scas
sbb
xor
push
push
je
and
into
lods
movsb
shrb
cmpps
inc
lahf
pavgb
movb
test
cwtl
insb
sub
mov
jmp
in
mov
jbe
imul
sti
jmp
dec
mov
pop
cmc
inc
bound
in
mov
sbb
mov
pop
scas
cmpsb
cltd
jo
sub
ret
sbb
add
scas
mov
add
dec
es
pop
fstpt
mov
push
push
mov
rcr
sbb
xor
shll
rcrl
dec
sbb
int3
movsb
bound
bound
mov
testb
cmp
cld
jg
rcrb
or
insb
sbb
fnstenv
mov
es
mov
cmc
and
mov
xchg
mov
jnp
xchg
clc
cmc
mov
arpl
insb
mov
jo
mov
rcll
adcb
dec
inc
mov
out
mov
imul
xor
std
test
lds
test
popf
push
jns
push
loope
cwtl
fwait
sti
sub
stos
xchg
sub
sbb
xchg
inc
pop
lock
stc
clc
adc
mov
cli
add
cmpsl
push
dec
add
push
xchg
and
sub
push
scas
mov
xchg
fs
out
ljmp
and
jno
adc
idiv
mov
push
pop
xchg
pop
les
mov
sbb
sbb
fisubrl
push
xchg
inc
pop
mov
push
data16
and
mov
cmpb
dec
call
rcrb
xor
adc
xor
in
js
and
test
iret
adc
sarl
xchg
sub
mov
mov
sub
repz
scas
pop
fcmovb
push
stos
xor
inc
dec
and
xor
movlps
sub
xor
or
das
pop
mov
cld
cmp
iret
es
adc
cmovp
xor
xor
adc
pop
jmp
mov
std
fisubrl
push
popf
nop
and
push
xor
bound
pop
jns
shl
xchg
lahf
lcall
insl
scas
jl
pop
cmp
pop
or
push
adc
and
mov
cmpsl
sub
cmpsb
test
xchg
push
int3
xchg
fst
sbb
or
push
sub
lods
mov
jns
inc
xor
mov
cmc
adc
insl
jae
pusha
cmp
lods
jo
jns
jbe
mov
push
or
mov
subb
adc
cmp
cwtl
pop
icebp
pop
xor
inc
test
pop
fs
xchg
mov
ss
clc
mov
test
movsl
cli
pop
iret
sub
roll
mov
lahf
pop
dec
mov
call
cmp
dec
inc
lock
mov
mov
sbb
xchg
inc
mov
and
in
fwait
test
pop
imul
adc
mov
sbb
lret
add
jmp
mov
fbstp
dec
add
divb
pop
xchg
jg
jl
mov
test
cmp
pop
cmp
push
bound
push
int
aas
push
in
int
repz
jb
stc
push
push
push
adc
jo
rcrl
aam
pop
xor
and
adc
push
xchg
xor
sbb
pop
dec
mov
lahf
cmp
xchg
aaa
arpl
fmuls
sbb
in
loop
add
shll
mov
add
mov
fwait
adcb
xchg
in
jns
iret
dec
mov
test
inc
mov
imul
test
jge
push
jle
xor
pop
aam
xchg
out
arpl
les
out
gs
popf
dec
mov
inc
fmul
sahf
int3
xor
sarl
call
mov
das
xchg
hlt
jno
mov
gs
decl
sbb
shr
push
stos
sub
xchg
mov
and
das
lock
fisubrs
mov
jno
mov
nop
je
and
adc
or
jmp
cli
in
xchg
sbb
std
jno
xchg
loop
cmpsb
pusha
in
push
push
dec
dec
in
push
fiaddl
loop
cmpsb
xorb
add
int3
push
out
sarb
arpl
stc
ja
and
or
fdecstp
and
fisttpll
pop
loopne
ljmp
les
push
and
xor
lret
aaa
shl
lret
gs
cs
jne
or
clc
xlat
repz
loop
push
imul
xor
cld
cwtl
sbb
inc
sbb
sub
sbb
cwtl
loop
and
aad
lods
mov
rcrb
ss
ret
lahf
cmp
mov
mov
xchg
insb
push
jge
adc
fidivrl
push
sub
or
jae
ja
adc
out
and
imul
cmp
fs
add
call
notl
subl
dec
jle
iret
add
push
rolb
bound
push
fnstenv
sti
lods
stc
sub
lcall
mov
lods
push
test
push
decb
add
mov
scas
inc
mov
in
lret
xchg
jo
adc
mov
ja
enter
stos
data16
xor
mov
adc
scas
mov
iret
insb
mov
sub
xchg
push
cld
dec
adc
fs
addb
popf
and
and
mov
push
push
push
sub
add
jne
hlt
scas
push
cmp
add
in
and
and
iret
xchg
mov
pop
leave
inc
fildll
add
cmp
or
xchg
and
sarl
cwtl
rorl
in
dec
jo
jcxz
vpaddsw
mov
cmp
jne
or
and
cmpsb
mov
dec
sbb
mov
inc
out
repnz
lcall
pop
ss
mov
and
mov
sti
popf
mov
xchg
xor
mov
xchg
mov
das
mov
sub
js
ds
pop
xor
shlb
sbb
inc
loope
xchg
sbb
dec
xchg
sbb
or
push
int
push
aaa
dec
cmc
and
push
or
lahf
dec
and
pop
sbb
out
dec
or
sub
mov
loopne
mov
int
pop
mov
push
popa
mov
aam
adc
add
push
mov
pop
clc
mov
xchg
and
push
cmp
push
arpl
sbb
orb
enter
imul
sub
loop
pop
cmp
xlat
pop
mov
xor
xchg
and
add
in
nop
je
sub
add
mov
inc
push
out
push
fistpl
pop
mov
andl
mov
int
push
jae
jge
sub
add
aad
or
test
push
dec
arpl
xor
into
cmpsb
sete
cmp
and
scas
nop
cli
mov
xor
and
jb
lret
lods
push
jl
fmull
add
adc
cs
xchg
push
fdivr
test
pushf
enter
mov
xor
mov
mov
lds
movsl
data16
test
repnz
ror
sub
jno
sbb
xor
xchg
push
in
inc
aas
cmp
mov
jmp
and
mov
inc
cmc
add
mov
mov
repz
sub
sbb
mov
test
test
fsubl
aaa
outsb
shrb
lret
mov
scas
popf
sbb
insb
cli
fisttps
sarl
sub
negb
repz
mov
je
loope,pt
inc
pop
test
cmp
pop
dec
loope
leave
fbld
jb
or
inc
inc
pop
inc
cmp
mov
fwait
dec
mov
aas
dec
adc
adc
mov
push
lahf
popl
push
mov
pop
fadds
xchg
jno
mov
and
push
pop
dec
cmp
flds
mov
hlt
iret
lods
leave
hlt
pop
stc
call
hlt
sbb
les
inc
mov
iret
jmp
cmp
mov
loope
jns
cmp
andb
xor
mov
push
ret
cmp
mov
aad
lahf
int
fstpt
popf
repnz
cmp
sub
mov
pop
cld
adc
jmp
dec
sub
movsl
jl
xlat
cmpsb
dec
mov
jae
loop
adc
xchg
jno
outsb
mov
jge
sahf
jl
push
fsubs
inc
mov
loop
pop
shll
push
out
jle
push
test
mov
rclb
decl
jg
adc
js
pusha
and
mov
int3
push
rol
adc
and
xor
push
rolb
clc
cmp
cli
adc
aaa
dec
cmp
add
test
push
into
add
andl
das
ljmp
or
fstp
cs
mov
loop
sub
and
mov
add
mov
out
stos
and
fldl
xchg
xor
xchg
push
sub
lods
push
cmpsb
cmp
and
sbb
hlt
sub
inc
dec
inc
test
xor
inc
xchg
push
scas
inc
loope
scas
inc
jb
std
pop
pop
fldlg2
jno
lcall
xor
or
jmp
jecxz
cmp
or
iret
inc
cs
jp
sbb
sbb
in
or
repz
cmc
mov
pop
fdivs
jno
mov
outsl
adc
test
sahf
mov
mov
daa
aad
por
fldcw
lret
shrb
xchg
lea
js
sub
push
mov
sbb
add
dec
test
addr16
cmpsb
testl
mov
cld
sti
pop
testb
adc
sbb
movsl
mov
mov
mov
pop
mov
push
stos
stos
mov
mov
data16
or
frstor
jge
cmp
push
imul
inc
pop
iret
jle
sar
jge
xchg
stos
test
aaa
lret
pop
add
xor
mov
push
movsb
inc
dec
aam
lock
iret
jg
or
arpl
xlat
mov
js
xchg
adc
mov
push
pop
es
loop
inc
sarb
and
mov
in
out
daa
and
xchg
xlat
stos
mov
ret
into
xchg
xchg
fldcw
cmovbe
icebp
sbb
and
cmp
pop
mov
mov
dec
add
sub
bnd
enter
push
fisubl
les
adc
push
sub
movsl
mov
pop
adc
xchg
dec
xor
std
mov
popa
jnp
sub
inc
mull
leave
rcl
mov
aaa
sar
xor
fidivl
out
push
and
fildl
or
int
aad
cmp
xchg
pop
shlb
and
fists
lods
mov
add
imul
insl
add
mov
ljmp
sti
cmp
adc
add
mov
and
imul
es
pusha
add
sub
jmp
mov
jo
inc
rcr
loopne
ficoms
or
incl
jne
mov
rorl
jecxz
movsl
sub
loope
lods
jecxz
clc
adc
xorl
movsb
pop
jns
out
jle
outsl
into
test
or
std
jae
sahf
inc
out
dec
sub
fimull
push
sahf
add
lock
cmp
xchg
mov
repnz
sub
arpl
inc
mov
divb
cld
insb
pusha
scas
mov
rcll
es
xchg
add
call
and
es
jno
in
xchg
ret
jno
push
lret
popa
in
fcmovbe
cld
dec
push
inc
inc
adc
xchg
divl
adc
push
and
es
cs
mov
in
xor
jg
cmp
pop
orl
cs
inc
or
or
dec
jb
push
mov
push
test
aas
mov
lahf
jp
xchg
cmpsb
jno
mov
test
push
imul
and
and
jmp
imul
addr16
fcmovne
icebp
dec
xor
xchg
or
fwait
inc
jg
clc
ret
icebp
fs
xorb
mov
push
cs
lea
push
rorb
bound
leave
iret
cmp
in
movsl
xchg
scas
mov
mov
dec
mov
or
pop
std
adc
xchg
loop
pop
dec
pop
sub
or
inc
fcomi
sbb
scas
push
and
enter
mov
adc
data16
xchg
hlt
xchg
push
mov
sarl
divps
push
iret
lds
sbb
sub
xor
outsl
movsb
cmp
imul
xchg
lods
sbb
bnd
outsb
sbb
pop
mov
loopne
sbb
pop
cmp
or
xor
pop
nop
pop
mov
adc
decl
and
and
sbb
aas
xor
es
lods
int
adc
push
xchg
test
std
outsb
and
idivl
xchg
fsub
dec
and
jnp
pop
jb
sti
jno
mov
sub
sbb
stos
mov
enter
js
mov
mov
nop
rorb
cmp
mov
cmp
sbb
lahf
lcall
outsl
shrl
out
stos
imul
popf
mov
call
push
test
jmp
fwait
push
jns
in
jl
pop
sbb
std
out
cmp
pop
push
jge
cli
pop
or
in
mov
push
jno
lret
xor
xchg
or
inc
mov
mov
nop
aam
mov
leave
jbe
pop
push
js
sub
mov
cmovo
imulb
jae
jl
inc
iret
add
ds
adc
mov
cmp
nop
cmc
dec
hlt
xchg
sbb
testl
pop
in
inc
mov
jns
sbb
insb
and
fdivrl
push
in
jecxz
inc
aaa
xchg
outsb
push
ss
jb
sahf
je
xor
mov
sbb
int3
fsubr
out
xor
fidivs
ss
cmp
jb
and
daa
jp
pusha
hlt
jle
xor
loopne
movsb
mov
in
ret
leave
movzwl
lods
cmp
hlt
dec
mov
sub
inc
dec
loop
test
pop
fdivl
hlt
fs
in
mov
psubusw
and
jne
dec
mov
test
movsb
clc
mov
into
mov
in
scas
xchg
sahf
jno
adc
pop
sbb
notb
jp
or
inc
jg
jnp
mov
and
push
lret
jb
jg
mov
xor
push
fsub
jno
loopne
mov
out
jno
movsl
lock
imull
test
out
mov
js
leave
cmp
jmp
xor
lods
push
mov
fildll
dec
mov
gs
ja
aaa
mov
or
fcompl
lods
xchg
aaa
sbb
xchg
and
sub
and
add
push
in
adc
out
movsl
xlat
into
xchg
movsb
rclb
mov
push
cmp
dec
add
jle
jge
shll
adc
lods
sbb
and
cld
shll
push
xor
mov
into
rorb
adc
sub
jg
enter
mov
jb
addr16
sub
test
scas
stos
popa
jae
jle
mov
je
dec
movsb
pop
mov
mov
push
push
out
test
sub
sbb
out
mov
pop
mov
ds
test
loop
test
sub
push
pop
fistps
movsl
dec
cmp
push
cmp
and
xchg
pop
fidivs
mov
cmp
xlat
enter
cmp
stos
gs
xchg
adc
xchg
popa
pop
imul
test
xor
stc
xor
in
cs
mov
das
xchg
roll
ret
sbb
hlt
insl
sahf
sub
dec
ljmp
or
push
adc
loop
insl
movsl
ljmp
cmpsl
std
push
stos
int
fisubrl
xlat
inc
and
cli
cmp
inc
pop
mov
cmpsl
out
lret
shrb
xlat
movsb
call
jmp
push
push
enter
dec
xor
movsw
mov
inc
push
dec
sahf
jae
mov
int3
lcall
mov
lret
cmc
sub
mov
out
xchg
ret
xchg
and
je
cmp
fdivrs
inc
push
jp
adc
mov
aaa
es
sti
clc
cmp
sbb
push
inc
ds
js
mov
popa
les
out
and
add
mov
es
and
addl
dec
mov
add
les
sub
data16
jmp
movsl
jnp
add
into
popf
adc
loopne
or
pop
xchg
test
cs
add
insl
sbb
cmp
pusha
push
ljmp
iret
push
mov
mov
mov
mov
rorb
xor
and
or
jne
pop
and
sub
push
jns
add
enter
inc
ret
jle
leave
mov
xchg
cmp
bsr
flds
mov
aad
out
icebp
loope
jnp
push
pop
xor
jmp
mov
dec
popl
mov
xor
sbb
das
add
icebp
jl
cmp
dec
mov
pop
or
jno
insl
mov
and
adc
and
lods
roll
cmp
movl
lcall
lahf
and
jno
push
outsl
sub
push
mov
inc
xor
xchg
jecxz
mov
jge
mov
dec
or
scas
add
mov
cltd
int
ret
test
pop
popl
mov
fcom
fimull
loop
imul
jmp
push
nop
xchg
adc
imul
pop
pushf
gs
dec
popf
stc
add
insl
repz
out
rol
dec
and
test
jecxz
adc
inc
dec
lock
xchg
pop
aaa
inc
das
mov
lods
dec
xchg
rorl
mov
jo
ljmp
or
inc
pop
ficompl
jge
hlt
out
fisttpll
or
aaa
insb
sub
movsl
push
mov
and
pusha
push
rcll
xchg
fcoms
fisttpll
outsb
sti
xchg
nop
fmul
cmpl
mov
lea
adc
xor
iret
scas
xchg
test
fdivrs
nop
or
gs
adcb
mov
into
mov
mov
lret
test
lcall
push
cmp
push
outsl
xchg
inc
icebp
push
pop
mov
cltd
mov
and
push
adc
xor
adc
pshufw
rcll
or
out
lahf
in
dec
int
popa
filds
pushf
inc
jb
or
lahf
lock
stos
jne
and
insb
popf
and
outsb
fnstenv
test
test
dec
lret
mov
jmp
int3
shl
adc
into
call
cltd
movsl
mov
xchg
ret
outsb
jg
pop
shrl
pop
push
in
mov
sub
add
inc
cs
mov
mov
mov
ds
insb
xchg
pop
aaa
testb
in
cmp
mov
hlt
repz
sbb
and
mov
cmp
xchg
sbb
xor
cmpsl
adc
lret
call
jmp
std
pop
cwtl
fs
aaa
mov
cld
pushl
mov
ds
push
subl
call
or
stos
ret
xchg
dec
or
add
pop
cmp
outsb
add
sar
ror
dec
mov
jp
out
imul
outsb
repnz
loopne
out
jns
mov
push
pop
out
push
jno
cli
mov
xor
dec
xor
pushf
push
subb
movsb
mov
out
outsl
test
push
cmp
popa
sbb
popa
scas
add
sti
mov
pop
pushf
jae
jno
shl
adc
test
dec
mov
xchg
sub
popf
sub
push
lahf
cwtl
rclb
mov
jmp
fnstenv
outsb
cli
pop
out
jnp
inc
push
fwait
push
pop
sar
dec
imul
das
add
sar
fdivr
and
cmp
xchg
dec
mov
ljmp
icebp
hlt
jno
inc
push
push
add
jns
mov
inc
push
ret
jecxz
or
data16
inc
jg,pt
out
add
jo
ret
int
icebp
add
lahf
jne
aaa
mov
mov
adc
sbb
incb
pop
lock
test
cmp
xchg
in
jo
mov
lcall
subb
stc
gs
lock
push
in
add
popf
push
shrl
jp
lcall
jle
imul
mov
cmp
repnz
cmp
frstor
push
sub
mov
mov
ja
sbb
add
pop
sub
mov
popa
mov
and
int
push
or
nop
shrb
popf
js
cmp
stos
xor
or
push
push
mov
xchg
or
int
mov
cmpb
int
sbb
mov
pop
push
inc
loopne
mov
dec
lock
jge
adc
fistpll
mov
popf
std
mov
mov
lods
push
xor
xchg
xor
pop
lea
adc
pusha
jb
jnp
or
addr16
sub
mov
jle
scas
pop
clc
xchg
jnp
sub
aam
xor
fisttpl
jbe
jmp
or
imul
jmp
mov
dec
adc
cmp
sbb
jnp
sub
rorb
mov
pop
outsb
inc
outsb
inc
mov
rclb
mov
and
and
and
loope
mov
aam
mov
or
mov
mov
icebp
push
ja
push
inc
sub
xchg
gs
pusha
jl
lret
cmpsl
jns
out
xchg
sbbl
addr16
fidivrl
cmp
xchg
push
aam
pushf
pop
mov
adc
int3
xchg
push
into
dec
mov
push
lods
push
out
test
sbb
or
ljmp
cmp
push
xor
ja
mov
pushf
cld
fdivrs
int3
lea
ficompl
dec
popa
in
adc
dec
ret
add
gs
and
into
inc
lahf
cmp
mov
xchg
push
stos
add
sub
sbb
gs
mov
fiaddl
cmpsl
mov
xor
sbb
xchg
jge
mov
push
jae
add
push
in
push
faddl
push
push
jg
test
xor
outsl
push
sub
jmp
icebp
in
cltd
or
fwait
mov
aam
mov
cmp
jb
or
xchg
pushf
mov
int3
xor
push
or
pop
lods
or
mov
pop
rolb
test
xchg
and
dec
push
pushf
in
mov
jns
or
push
out
out
lret
jnp
aas
sbb
gs
mov
int3
mov
xor
jge
stc
pusha
jl
in
scas
jge
xchg
mov
cmp
cmp
clc
pop
scas
insb
dec
imul
test
push
add
dec
dec
push
mov
push
test
inc
ss
push
iret
sbb
push
lcall
cmpsb
outsb
xchg
stc
enter
pusha
iret
xor
add
cmp
test
add
pop
xor
mov
fidivl
inc
dec
test
rclb
icebp
nop
pop
fadds
add
sbb
sbb
out
aaa
jl
jnp
mov
das
cmp
push
xchg
data16
stos
pop
xorb
adc
out
rol
imul
invd
test
xor
dec
popl
repnz
rcl
jnp
and
or
push
add
ret
popf
xchg
mov
ret
cmc
shl
stos
push
pushl
xor
and
jb
and
pop
pop
nop
scas
or
sahf
mov
inc
lea
dec
flds
test
daa
gs
sub
xcrypt-ctr
cmpsl
fadd
shll
jno
sbb
mov
cmp
pop
mov
sbb
xchg
cld
sbb
retw
insb
jp
jecxz
mov
sub
inc
negl
xor
lret
nop
pushf
or
test
adc
cltd
mov
pop
mov
faddl
aad
xor
mov
inc
inc
push
xor
and
jl
mov
xor
orl
fwait
imul
repz
push
popa
mov
fdiv
sahf
and
jg
mov
lcall
lods
cmp
repz
out
cmp
fcoml
int
xchg
push
or
ret
mov
data16
cwtl
sbb
mov
cmpsb
popf
and
add
movsl
mov
sub
mov
push
xor
fcompl
je
push
dec
les
cmp
or
fwait
inc
cli
mov
mov
ss
dec
sbb
mov
mov
popf
cmp
in
or
jnp
dec
sahf
test
pusha
mov
or
add
add
pusha
sti
jbe
pushf
push
jle
enter
insb
fstl
fidivrs
repnz
cmp
sub
enter
adc
push
push
cmp
xor
inc
mov
out
and
add
pop
and
aaa
cs
jle
sbb
dec
fsubs
sti
jle
inc
fxch
jmp
pop
arpl
idivb
dec
mov
xor
pop
jecxz
rorl
fisubl
jmp
and
push
call
pop
dec
lahf
push
fnstenv
xchg
add
sbb
and
mov
jnp
sub
mov
bswap
adc
add
mov
push
cmp
repnz
cmp
or
int
adc
xchg
lods
cli
frstor
adc
and
mov
sahf
or
cmpsl
dec
insl
fs
add
and
push
dec
movsb
add
lcall
push
movsb
sarb
sbb
or
int
popl
out
add
jns
and
mov
je
and
and
xchg
lret
xor
loop
adc
mov
jns
push
mov
jne
pop
std
add
movsb
pop
loopne
adc
ret
xchg
lahf
push
insb
cli
lcall
iret
loope
xor
add
mov
xchg
dec
sub
mov
add
stos
addr16
push
test
pop
loopne
jbe
cld
add
xchg
sarb
imul
push
mov
mov
adc
xlat
iret
adc
in
clc
mov
mov
mov
ret
xchg
cmp
adc
or
ljmp
pop
add
pop
mov
in
aaa
les
mov
mov
jbe
roll
inc
jo
jbe
aas
in
inc
fimull
adc
ss
icebp
mov
data16
lahf
cmpsb
hlt
mov
xor
pop
or
insl
fisubrl
xrelease
pop
dec
and
lahf
dec
out
in
adc
xor
lock
test
test
dec
hlt
mov
sub
out
fwait
addl
data16
leave
ret
enter
decl
sub
mov
push
arpl
and
push
shlb
add
js
aas
stos
jle
push
cltd
cmp
fs
dec
cmpsb
cmc
jae
xchg
out
or
int3
jl
cmp
mov
lds
lret
ja
mov
pop
jge
int
stc
and
pop
jge
mov
jp
push
adc
cmp
scas
rolb
fabs
or
divb
cltd
mov
fdivrs
sbb
xor
inc
inc
lea
cmp
std
cs
arpl
ret
jne
test
lods
jge
inc
mov
push
ljmp
lahf
sub
fdivrp
aaa
stos
xor
pop
push
mov
sub
mov
lret
push
adc
mov
pop
movsb
and
mov
lock
pusha
jbe
sahf
mov
andl
inc
into
lods
cs
dec
movsl
adcl
pop
ror
jecxz
data16
ds
movsb
add
mov
cmovg
cmp
and
dec
movsb
mov
mov
add
aas
std
sbb
loopne
je
mov
cs
adc
fisttpl
mov
aad
push
add
in
out
popf
pushf
jb
imul
notl
pushf
push
loop
cmp
xchg
mov
inc
test
pop
fs
sahf
or
lahf
es
inc
jg
dec
push
lahf
add
sarl
or
into
leave
xchg
pop
pop
xor
inc
adc
sti
lods
repz
sub
and
sbb
mov
adc
cmp
cmp
shll
paddusw
fidivrs
and
aad
es
jp
lea
arpl
cmp
mov
push
jo
cmpb
and
dec
jno
mov
add
mov
sub
lods
mov
subb
mov
stos
xor
addr16
aam
dec
insl
xor
fisttps
popf
dec
stos
imull
mov
outsb
pop
ss
push
jae
xadd
push
mov
xchg
outsb
jmp
mov
pusha
and
bound
mov
jbe
mov
leave
movsb
leave
imul
xor
scas
shlb
xchg
mulb
jecxz
bound
cwtl
jg
les
js
loop
sarl
adcb
add
dec
cmp
pop
lret
pop
push
sbb
movl
mov
subb
mov
ds
popa
or
adc
or
aam
jae
mov
pop
rcll
adc
mov
jne
inc
mov
adc
in
jae
out
push
test
and
xchg
jmp
outsl
ljmp
test
inc
testl
and
inc
pop
dec
push
aaa
cmp
mov
ja
inc
and
lods
into
xor
jp
stos
loop
imul
loope
inc
icebp
add
sub
push
clc
mov
mov
pop
lcall
sbb
adc
mov
jmp
add
add
pop
xor
subl
mov
inc
roll
je
sbb
daa
sarb
popf
sti
scas
jge
imul
sbb
xor
jp
in
fnstcw
scas
scas
push
and
add
fstps
sahf
stos
into
and
jb
add
rcr
into
in
sahf
xchg
je
pop
mov
out
out
or
inc
outsb
add
lea
sub
adc
jbe
pop
test
push
das
popa
shrl
popa
shll
push
and
pop
xor
roll
jecxz
lret
cmpsl
sbb
mov
xchg
and
push
lahf
push
jbe
mov
and
sub
std
dec
addl
xchg
add
pop
xlat
inc
test
cmp
xchg
aad
cld
enter
sahf
xchg
push
mov
les
or
loop
repz
pop
ljmp
dec
adc
inc
xor
sub
jnp
das
sub
lds
ja
pop
mov
sbb
xor
popf
xor
dec
mov
mov
dec
icebp
mov
sbb
clc
pushf
push
aaa
cmp
or
adc
xor
jmp
jbe
nop
pop
ffreep
sbb
cmp
shrl
cmc
and
push
cmc
pop
push
leave
pop
iret
pop
jnp
fwait
jmp
dec
lock
dec
clc
sub
jmp
test
aad
cld
adc
xor
addr16
jge
sbb
in
cmp
jb
mov
sub
in
das
push
inc
mov
cmc
stos
pusha
aad
sbb
add
int3
adc
out
pop
dec
xor
jo
mov
dec
sti
push
fidivrl
or
sti
lods
arpl
jns
xor
pop
push
insb
adc
sbb
cmc
sub
mov
stos
and
and
popf
scas
hlt
stos
sbb
lds
addr16
lock
addb
jecxz
xorb
scas
jne
out
xchg
xchg
and
fcoms
int3
jge
and
fisubrs
mov
dec
and
outsb
jge
jnp
lds
out
push
xchg
push
add
test
xor
mov
add
shl
rclb
pop
mov
dec
js
mov
push
in
neg
hlt
test
adc
inc
std
fs
inc
or
push
fisubl
lcall
sahf
mov
add
mov
sub
test
mov
loope
lea
mov
mov
mov
pop
and
xchg
mov
sti
filds
pop
cld
movsl
stc
and
ret
cli
cli
insb
mov
lahf
inc
outsl
mov
lods
xchg
mov
pop
dec
jmp
pop
add
push
add
adc
lods
je
push
pop
cmpb
push
mov
sub
push
cmp
and
add
call
setl
nop
jge
inc
scas
into
mov
sbb
imulb
int
pop
rclb
pop
add
mov
faddl
outsb
sub
in
cld
js
clc
pmuludq
jle
adc
mov
stos
packsswb
js
cmp
stos
jle
inc
jp
cmpsl
rcr
stos
shr
sbb
inc
mov
in
daa
test
sbb
es
sbb
jmp
inc
into
insb
cmpsl
int3
fdivr
inc
pop
cmp
sbb
pusha
pop
mov
adc
inc
jle
pop
jmp
leave
ficoml
icebp
pop
test
pushf
sub
in
mov
add
dec
bswap
and
fdivrp
pop
jp
fcom
inc
outsb
rorb
test
pusha
arpl
push
mov
lea
mov
pop
sub
ficoms
ss
jmp
adc
mov
shr
xchg
in
adc
cwtl
cli
rclb
pop
xor
dec
pop
mov
pop
rorb
push
mov
loopne
or
sbb
cli
in
es
lret
xlat
push
jo
aam
fistps
std
lods
in
push
push
mov
mov
fucomi
orb
mov
imul
imul
mov
mov
cmp
into
push
jge
adc
outsb
dec
lcall
xor
jnp
bound
lock
into
scas
sahf
add
in
jne
shll
lcall
inc
shll
sub
cmp
clc
cld
sbb
dec
cmp
inc
lret
fstpt
nop
mov
out
subb
pop
pusha
dec
dec
lret
rolb
dec
xchg
ja
mov
aas
pop
mov
fnstenv
dec
add
cmp
lock
aaa
and
lahf
xor
push
sub
rep
sbb
push
in
inc
icebp
ds
ja
inc
jl
pop
ret
rclb
mov
pop
repnz
and
inc
xchg
mov
cmp
fbld
xchg
add
sub
push
push
arpl
shl
sbb
sbb
sbb
cli
and
or
jnp
xor
push
jg
dec
lea
push
and
rcl
ja
mov
rcll
mov
aam
mov
fwait
pop
dec
sub
lcall
mov
sbb
popa
repnz
nop
fnstcw
sbb
jns
pop
and
jecxz
mov
inc
mov
jne
inc
or
pop
and
lea
cltd
pop
xchg
addl
iret
imul
repnz
stos
mov
inc
pop
push
xor
jle
orb
xor
popfw
pop
aaa
ror
xchg
in
imul
dec
loope
mov
push
loop
xchg
nop
dec
es
nop
xor
in
jno
xor
pusha
jge
mov
lret
js
mov
jbe
jo
sub
inc
popa
jae
aad
sbb
or
fwait
and
in
nop
jg
adc
das
mov
pop
int3
add
ljmp
cmp
fsubp
in
js
push
pushf
leave
sar
gs
xchg
jae
in
imul
dec
lods
fisubs
js
jnp
mov
imul
test
cmc
cltd
gs
pop
cmpsb
aas
imul
push
xchg
and
sbb
adc
loopne
les
sbb
and
fwait
dec
mov
mov
xor
loopne
in
mov
jle
pop
jp
dec
ds
addr16
adc
stos
je
pop
icebp
pop
mov
insl
jmp
popa
add
mov
outsb
mov
adc
ljmp
push
mov
icebp
push
addr16
cmpsl
or
cmc
dec
dec
stos
xchg
int
xchg
adc
xchg
sub
subl
mov
and
ret
push
fstps
push
mov
hlt
mov
mov
mov
dec
or
outsb
mov
nop
mov
fsubrs
sub
leave
test
icebp
adc
inc
cmp
int
pop
xchg
or
add
sti
shlb
pop
push
je
cld
scas
shlb
xchg
inc
cmp
rcll
nop
out
gs
cwtl
popa
clc
sbb
in
cmp
lea
in
ss
mov
sub
lea
mov
sti
fsubr
rol
mov
in
ljmp
cld
push
in
jg
addr16
add
mov
jg
rclb
imull
jbe
xchg
add
adc
sarb
dec
cmpsl
cmp
iret
or
add
inc
add
dec
loopne
ja
out
js
mov
add
fdivrp
xor
add
sbb
test
repz
das
jne,pt
pop
fcmovnbe
push
mov
sbb
dec
adc
pop
dec
in
lcall
adc
push
pusha
adc
fdivrl
inc
inc
insl
cmpsb
adc
xchg
sbb
push
cmp
testl
jb
cmpsl
inc
daa
in
and
in
xchg
pop
pop
shl
sbb
les
rcrl
pop
xor
gs
xchg
lds
out
out
mov
stos
cmp
inc
fdivrl
cli
adc
inc
les
xor
inc
out
push
outsb
inc
xchg
loope
fidivl
stc
add
adc
or
lret
lret
inc
pop
jge
or
in
sub
das
adc
cmp
inc
jbe
pop
cmpsb
push
int
xor
cwtl
and
pop
mov
pop
or
and
push
pop
das
adc
js
or
adc
cmp
and
xchg
fildl
hlt
fcmovnbe
adc
xor
cltd
push
push
dec
sti
ret
imul
cmp
add
push
jmp
ficompl
add
lcall
or
enter
mov
xchg
and
sub
fsubrl
fiaddl
add
cmp
mov
test
inc
inc
sbb
mov
loop
sub
and
xchg
and
push
dec
jecxz
pop
fdivrs
nop
mov
movsb
xchg
adc
jb
xchg
or
pop
cmp
pop
lret
jbe
add
popf
sbb
in
mov
or
and
lock
pop
jnp
pop
ret
in
popf
std
lret
pusha
xchg
sub
stc
xchg
push
mulb
sbbl
jmp
push
cli
jmp
int
repz
mov
sbb
inc
cmp
inc
je
iret
popf
je
repz
cmpsb
add
inc
xchg
pop
cmp
cmp
xorb
iret
incl
inc
cmp
dec
pop
jmp
mov
fldt
jl
ja
mov
je
ds
mov
jns
fdivrl
ror
ret
in
xchg
push
std
xor
imul
lret
mov
add
in
adc
aaa
sti
mov
fdivl
stos
sub
and
mov
push
aam
push
dec
add
bound
xchg
jne
icebp
push
pop
and
jo
mov
movsl
cmpsl
mov
xor
lret
add
test
mov
mov
mov
sbb
daa
mov
and
jmp
jle
pop
sbb
cmc
cmpsb
adc
stos
ja
dec
inc
cli
in
outsb
mov
push
jae
inc
shll
loopne
je
cmc
cmpsb
mov
pop
push
and
into
dec
rcrl
add
dec
add
pcmpeqd
add
and
out
sbb
xor
xchg
push
clc
lcall
mov
pushf
das
jo
mov
data16
xchg
mov
xchg
and
sbb
push
es
shrb
jecxz
mov
fnsave
mov
and
fs
aas
outsl
add
inc
sahf
je
xor
mov
sbb
imull
dec
mov
xchg
dec
pop
xor
insb
cmp
cmp
scas
in
ja
sub
or
sbb
cltd
lcall
cmc
jo
xor
xchg
lods
inc
sbb
xchg
cltd
aaa
cwtl
xchg
push
sub
push
push
lea
mov
cmp
adc
fimull
repz
jmp
pop
jp
jb,pn
test
rcrb
loope
jne
mov
adc
je
pop
push
lock
fdivrs
or
popa
fwait
cmp
pop
test
inc
cwtl
outsb
rcll
arpl
mov
cmc
cmp
clc
mov
or
out
xchg
imul
stos
scas
adc
push
pop
cld
push
add
pop
cmp
scas
aam
push
clc
insb
dec
mov
jle
pop
jp
testl
in
dec
cltd
hlt
fs
add
scas
xor
shlb
xchg
leave
ljmp
iret
adc
jne
fsubs
cmc
int
add
cmp
and
cmp
out
fwait
and
push
adc
adc
lret
add
mov
out
and
je
jns
xlat
or
testl
out
or
mov
sbb
jle
stc
into
shl
cmp
or
cmpsl
jns
in
ret
jmp
jmp
xor
mov
jle
mov
xor
adc
shl
ds
int3
cmc
mov
test
inc
mov
push
and
das
icebp
inc
inc
loope
or
pusha
je
mov
xbegin
xchg
addr16
lret
sbb
test
test
lods
iret
aad
scas
pop
jnp
pop
sub
cmc
jbe
loope
xchg
arpl
jno
mov
jecxz
cmpb
fwait
pop
push
stc
push
js
data16
xor
icebp
xchg
ds
adc
dec
sbb
dec
rcl
sub
jl
pop
pop
add
aad
adc
cwtl
and
hlt
jno
mov
adc
fcompl
shl
xlat
push
insl
cmpsl
int
mov
and
and
cmp
shrb
sub
xchg
jle
stos
sbb
xchg
jle
hlt
ss
dec
incb
pusha
lret
call
out
jns
dec
call
fidivrs
xlat
fiaddl
adc
lret
adc
dec
jg
cltd
mov
or
std
cmp
roll
mov
js
adc
cmpsl
dec
sbb
inc
xor
add
cs
lahf
stos
iret
nop
in
unpckhps
sbb
jecxz
jecxz
jne
adc
dec
pop
sub
leave
push
mov
daa
cmp
cmp
adc
lcall
int3
sub
xlat
call
fmul
or
xchg
jmp
sbb
or
in
sti
jns
push
push
loop
lret
mov
fstl
rcrb
sbb
xchg
dec
jno
inc
add
dec
mov
xor
and
jg
adc
leave
mov
sarl
mov
popf
idivl
aaa
pop
shld
fwait
loopne
xchg
jmp
mov
inc
ljmp
and
sub
add
mov
sahf
test
in
sti
out
sbb
int
es
vsubss
or
stc
aam
scas
mov
dec
mov
mov
iret
adc
adc
pop
pop
lods
pop
cmp
xchg
jne
outsb
mov
add
jno
adc
xchg
add
popa
shll
mov
cltd
pmullw
jno
xchg
mov
lret
jb
aam
push
test
cli
out
inc
in
stos
scas
outsb
jmp
jbe
fwait
outsl
jge
pop
push
in
and
dec
jnp
mov
mov
inc
imul
dec
in
and
pop
divl
movsl
ja
inc
xchg
adc
in
scas
inc
nop
jno
push
mov
cltd
fwait
ja
or
pop
shlb
adc
dec
sbb
push
sbb
sbb
data16
std
push
pushf
xchg
popa
pop
mov
mov
imul
mov
pop
sbb
dec
pop
aad
ja
or
xlat
fistpll
dec
out
negb
arpl
bound
stc
or
xchg
aam
and
xchg
cs
bound
mov
and
pop
div
notl
sbb
mov
insb
mov
or
dec
cmpsb
push
pop
and
dec
pushf
daa
mov
xchg
pop
xchg
pushf
or
in
mov
es
jo
rolb
or
push
inc
leave
hlt
data16
loope
sub
aas
fistpl
sarl
push
mov
jns
sub
mov
jae
jecxz
inc
or
bound
pop
mov
out
ljmp
jmp
lock
pushf
arpl
and
jl
int3
adc
je
inc
xor
cmp
out
sub
jo
xchg
hlt
mulb
pop
mov
pop
sub
jg
xchg
pop
pushf
leave
cltd
loope
and
arpl
les
hlt
or
and
xlat
mov
jmp
jl
xlat
cmp
push
mov
jae
adc
inc
stc
and
mov
jge
mov
xor
aam
out
cmpsl
mov
lret
jge
adc
movsl
adc
mov
cmp
stc
pop
pop
pop
lock
imul
mov
sbb
jle
sub
xor
or
pop
adc
cli
inc
repnz
scas
je
cmp
sub
popw
push
mov
out
and
xchg
fucomi
jns
leave
add
repz
cli
cld
mov
stos
mov
or
sub
mov
dec
je
repnz
sbb
pop
mov
and
scas
scas
cmp
mov
inc
ss
jb
mov
jmp
repnz
enter
mov
cmp
xchg
jg
mov
mov
add
mov
jle
shl
inc
or
xchg
pop
push
pop
les
scas
xor
mov
cmc
jne
jp
cmp
out
cltd
mov
mov
push
lds
and
pop
lret
and
push
rol
scas
mov
jne
lock
mov
xor
mov
dec
mov
lcallw
and
mov
fs
adc
dec
das
mov
test
in
shrb
cld
push
or
jne
pop
ja
adc
inc
mov
add
rcrb
call
fnstenv
inc
loop
mov
pop
dec
jmp
adc
lock
and
push
cs
or
leave
pop
mov
fisttpl
xor
push
arpl
adc
fidivs
sub
add
push
dec
pop
add
xchg
fldenv
dec
and
clc
dec
sub
sub
cmp
xchg
test
dec
ja
fmul
int3
test
ret
jle
fadd
mov
ret
rol
mov
sbb
repz
dec
mov
fdivrp
scas
pop
mov
out
and
sbb
rol
mov
cmp
cmp
das
add
test
dec
cwtl
imul
inc
or
xor
insl
popa
shll
sub
dec
leave
stc
and
or
inc
cwtl
xor
cmpsl
sub
inc
add
cmp
enterw
jecxz
mov
add
rcrb
mov
add
mov
xchg
pop
jmp
and
xor
in
scas
mov
push
cmp
aaa
test
loop
std
in
mov
pop
outsl
inc
pop
imul
lcall
mov
sbb
sub
out
adc
push
subl
mov
push
subb
insb
jmp
jne
mov
xor
mov
std
lds
daa
les
sub
fistpll
call
popf
pusha
dec
sub
push
add
xor
mov
dec
or
and
add
cmp
js
repz
neg
icebp
ret
xchg
sub
jo
lods
sub
jecxz
daa
xor
stc
sahf
fnstsw
lock
loop
push
sub
cmp
push
enter
jns
addr16
adcb
xor
lret
adc
sbb
pop
test
mov
and
paddusw
jbe
adc
push
ss
inc
or
or
jne
fistpll
cmp
or
test
sub
cld
lahf
xchg
dec
not
push
pusha
subb
notl
push
mov
lahf
loope
xchg
pop
add
cmp
sahf
cmp
gs
adc
push
cli
pop
cmpsb
cmp
jmp
xor
stos
mov
adc
pop
out
fisttps
jne
jl
cmp
rcll
mov
pop
pop
out
cmp
mov
jo
inc
cmc
push
das
sub
xchg
inc
in
lahf
psubw
aad
sub
sub
inc
notb
push
je
loopne
imull
sti
in
mov
std
adc
push
pop
bound
xor
or
lods
sub
mov
ja
xchg
jbe
add
repz
scas
sub
xchg
cmc
jp
ss
std
mov
cmp
stc
add
imul
test
lgs
fdivrl
jle
pusha
sub
out
lea
dec
cs
popf
mov
or
push
outsb
inc
mov
ret
insl
fdivr
lods
jo
and
xor
shrl
lahf
cwtl
push
pop
insb
jg
idiv
sub
loop
inc
xor
cwtl
sub
fstpt
xor
mov
mov
xor
inc
addr16
dec
imul
mov
xlat
cmpsl
imul
mov
add
push
cmp
jg
or
jno
jmp
add
push
int3
outsl
jae
fsub
jge
xchg
daa
mov
cmpsb
in
pop
stos
add
adc
mov
jp
dec
movsb
or
add
js
lcall
xlat
push
ret
mov
pop
aam
xchg
loope
sub
inc
pop
cmpsb
push
aas
push
add
pop
dec
movsl
xor
xchg
lret
xchg
das
das
jg
dec
enter
cmp
sbb
dec
xchg
pop
add
outsl
sar
or
sbb
cld
mov
movsl
push
xor
push
roll
mov
jbe
pop
jne
inc
inc
mov
pusha
and
dec
test
push
fsubp
sahf
jne
arpl
mov
push
lods
or
mov
adcl
or
inc
jmp
sub
add
jns
mov
stos
das
lods
jbe
push
mov
jmp
jp
cwtl
mov
jmp
mov
inc
fdivrl
loop
cli
insb
dec
sub
jno
and
fistpll
pop
mov
dec
inc
in
scas
mov
pop
push
xorl
sub
mov
adcb
pop
sub
incl
xchg
adc
sti
jle
xor
imul
or
pop
aaa
inc
xor
push
add
daa
je
pop
cmp
xlat
out
inc
jns
loop
in
xor
dec
sbb
je
out
jb
add
iret
pop
ss
sahf
rcrb
rol
xchg
xor
push
push
cmp
cs
push
and
adc
out
xorb
cmpsl
pop
sbb
push
mov
lods
sbb
pop
cmp
shrl
and
push
xchg
pop
sub
and
inc
dec
dec
imul
or
out
cmp
mov
and
push
push
lret
sub
push
push
mov
sub
mov
loopne
fs
xchg
sbb
xchg
scas
jne
jmp
fdivl
jle
lea
mov
jp
pop
hlt
lods
cmp
ss
ja
push
out
inc
xor
add
test
cmp
insl
imul
loope
or
add
in
and
out
arpl
mov
cmp
or
fwait
rol
mov
adc
dec
aam
inc
test
popa
mov
int3
mov
clc
rclb
mov
xor
inc
pop
int3
inc
or
xor
xlat
cmp
pop
scas
xor
add
pop
stos
adc
into
pop
cmp
sub
push
out
fs
xor
jo
mov
fisttpl
es
pop
insb
enter
pushf
mov
loopne
clc
adc
xorl
jne
add
mov
inc
sub
ret
push
inc
or
out
or
jmp
jge
xchg
push
pop
hlt
loopne
bound
jle
fwait
mov
in
mov
jae
cwtl
loop
cmp
dec
hlt
mov
mov
push
popf
mov
cmpsb
push
test
mov
cmp
rcll
adc
nop
js
sbb
dec
mov
or
add
xor
sbb
cmp
xor
sahf
or
jne
loop
cmc
and
sti
push
stc
adc
scas
adc
enter
out
xor
cmc
out
mov
movsl
loopne
inc
and
cs
insl
lahf
stos
fwait
sub
dec
icebp
inc
cmpsl
hlt
push
push
jle
pop
fidivrs
loope
es
push
js
in
psubw
aad
repz
mov
ja
sarb
dec
add
decl
jge
jno
push
repnz
out
fnstcw
test
pop
lret
in
int
sarb
ss
fsubrs
cmpsb
ljmp
loop
lret
inc
test
jmp
and
cmp
xor
mov
in
daa
lret
sub
push
dec
in
mov
sub
scas
mov
dec
mov
leave
lcall
scas
fstpt
into
shlb
das
pop
out
fcompl
repnz
xchg
sbb
sub
jae
mov
cmpsb
or
mov
dec
out
outsl
fadd
pop
pop
nop
and
xchg
pop
pop
and
inc
ljmp
xchg
std
xor
jl
xchg
jno
adc
mov
lock
mov
in
and
or
aam
jne
cli
test
push
and
push
push
jg
clc
pop
dec
jnp
in
mov
jae
jb
pop
and
mov
adc
mov
push
xor
aam
sahf
bound
lods
fwait
inc
xorb
call
jo
aam
imul
jl
mov
push
pop
daa
push
sahf
push
cmp
jge
in
mov
cmpsb
shll
shlb
addr16
mov
lods
je
cld
pushf
in
dec
imul
xchg
add
call
mov
fs
sahf
lret
int3
jb
mov
xor
or
mov
insb
push
sub
jno
mov
enter
push
add
out
cwtl
cwtl
hlt
adc
inc
scas
jnp
cmp
aam
roll
daa
sbb
cmp
cmp
cwtl
into
inc
dec
shll
leave
aam
or
mov
pop
lret
xchg
or
outsl
ret
addb
jp
roll
inc
rorl
and
sbb
dec
hlt
notl
xlat
xchg
repnz
dec
xor
push
add
inc
repnz
push
out
xor
stc
or
outsl
mov
out
cmc
push
xor
inc
imul
and
pusha
imul
pushf
pushf
xchg
jbe
pushf
sarb
fcom
insl
fcmovnbe
inc
push
mov
lods
std
addr16
add
stc
out
and
sbb
in
and
add
mov
xor
and
pop
les
das
jns
add
icebp
sarl
push
pop
subl
push
sbb
dec
stc
flds
sbb
arpl
sub
clc
lock
scas
xchg
mov
ds
mov
aad
mov
fldenv
lahf
pusha
mov
in
or
in
and
cmp
xchg
fwait
leave
fcoms
xor
adc
mov
stc
scas
jecxz
cmp
mov
outsb
cmpsl
enter
repnz
jmp
and
cs
mov
loop
lret
mov
sbb
push
push
cmp
or
movsb
dec
add
fistps
shrb
mov
jnp
push
les
icebp
jo
sbb
inc
dec
push
scas
adc
cs
je
jae
push
test
aaa
adc
xchg
adc
shrl
or
sub
int
fldt
jne
and
sub
adc
out
sub
xor
es
cli
and
and
iret
cmc
mov
data16
dec
mov
daa
leave
push
lock
mov
xchg
into
dec
or
lods
sbb
es
ss
test
mov
add
neg
iret
divb
ficoms
out
aaa
xchg
shl
stos
fs
pop
add
cwtl
mov
cwtl
fadds
aad
sub
dec
push
push
and
repz
call
dec
xor
xor
sub
sbb
dec
pop
loop
mov
adc
inc
jne
or
mov
mov
mov
adc
pop
movsb
pusha
mov
add
inc
test
mov
insb
sbb
in
in
mov
rcrb
loop
lcall
pushw
inc
shll
push
fmulp
faddl
in
add
cmp
into
orb
sub
popa
ja
pop
add
xor
les
neg
test
or
in
lods
and
lods
gs
jae
push
clc
loop
ja
push
inc
sub
ret
pushf
add
popl
shlb
mov
mov
popf
icebp
leave
push
sub
insb
js
mov
xorb
popa
pop
lods
fldl
scas
and
xchg
add
mov
adc
add
arpl
out
push
push
mov
pop
xor
add
into
cmpsl
ja
and
insb
in
shrl
adc
test
inc
pop
inc
fbstp
cmp
add
cmp
xlat
repz
cmp
push
in
jge
enter
and
cmpsl
adc
mov
lret
adc
and
lea
add
inc
iret
in
cltd
and
aaa
xlat
mov
out
lret
push
mov
xchg
mov
rclb
shrb
sbb
ret
es
inc
push
mov
jl
enter
jnp
cs
stos
cs
sub
inc
xchg
or
ss
dec
int
and
mov
in
mull
cmp
xor
arpl
loopne
mov
fwait
dec
dec
dec
test
cmc
pop
dec
pop
lods
int
xchg
jge
subl
mov
sub
fcompl
xchg
jbe
jo
leave
sbb
fsubr
pop
jge
std
dec
int
mov
push
xchg
stos
jae
movb
dec
leave
xlat
arpl
sahf
insl
jg
add
ret
mov
sub
cmp
adc
dec
call
adc
push
aam
pop
repz
fwait
mov
dec
insb
pushl
lret
enter
sbb
xchg
mov
mov
mov
aaa
sarb
fs
mov
cmc
pop
movsb
sub
cld
push
inc
xchg
push
xchg
pop
cmpsl
loopne
add
cmp
dec
jl
mov
idivb
int
ljmp
inc
rolb
dec
jne
pop
xrelease
add
mov
jle
pop
jbe
xorl
popa
adc
and
ret
cwtl
fistpl
jno
jecxz
xchg
arpl
xabort
push
rclb
mov
addb
mov
add
repz
or
xchg
sti
jmp
int3
popf
cld
movsb
jno
push
pusha
push
xlat
and
lods
test
jecxz
sbb
xor
fmull
cmpsb
loop
jnp
xchg
aas
push
mov
scas
sbb
sahf
dec
int3
jmp
sbb
imul
mov
inc
sbb
out
dec
jns
xor
pop
jmp
adc
cmpsl
push
ja
cltd
xchg
repnz
mov
ficomps
cmpsl
sub
mov
mov
inc
jne
lret
into
add
in
rolb
insb
fisttpl
jo
ficoml
cmp
jno
add
outsb
bound
enter
mov
cmp
sbb
insl
out
dec
pop
jnp
pusha
dec
jecxz
mov
adc
scas
stos
cmc
cli
fstl
shr
cmp
jecxz
or
fsubrp
movsl
xor
jp
nop
mov
aas
push
xor
jmp
jmp
shl
arpl
pop
mov
mov
pop
xchg
mov
test
fwait
aas
mov
jns
sti
stos
test
and
dec
pop
mov
mov
ret
test
xor
push
pop
lret
es
in
dec
mov
das
jae
das
dec
jne
jno
cmp
mov
sub
jecxz
xchg
scas
pop
xor
rol
adc
jo
movsl
scas
push
test
repz
mov
outsb
aas
nop
inc
enter
sti
push
inc
pop
std
cmp
inc
xchg
test
jecxz
in
arpl
mov
outsl
adc
cmp
mov
jno
mov
and
outsl
sti
mov
movsl
fldenv
sbb
and
aad
mov
outsb
icebp
sbb
ljmp
dec
fwait
imul
xor
jg
repz
hlt
pop
dec
repnz
test
mov
cmpsl
push
test
cmp
mov
inc
mov
jg
pop
divb
cmp
in
fidivrl
loop
mov
adc
repz
mov
lcall
fisubs
mov
movsl
mov
add
hlt
inc
out
xchg
fsubrl
dec
stos
xchg
popa
fs
sbbl
push
xor
test
fldl
scas
ja
sub
jmp
imul
adc
vrcpps
sbb
bnd
fs
inc
and
mov
call
mov
jmp
xchg
ss
adcb
sahf
jg
mov
shll
ds
cmp
pop
int
outsb
rorb
test
sbb
cmp
pop
mov
fstl
jbe
mov
je
jge
ss
push
sub
ljmp
push
xchg
push
ljmp
icebp
cmp
loopne
and
ret
fwait
mov
inc
lcall
mov
sbb
mov
shr
jno
dec
sub
pop
xor
repnz
ja
and
mov
sarb
mov
popf
clc
jo
mov
dec
pop
imul
lds
rclb
daa
and
data16
outsl
clc
inc
sub
xchg
les
movsb
aas
xchg
adc
xchg
ret
mov
repz
out
rorl
out
mov
les
leave
jae
js
icebp
out
mov
cmp
mov
ret
shll
inc
imul
mov
jo
mov
and
cmpsl
xchg
push
fsubr
push
mov
cli
enter
push
fwait
lea
popf
ficomps
sub
and
or
mov
sarb
fcoms
inc
adc
push
mov
stos
lret
pop
mov
imul
add
adc
ds
cmp
or
fimuls
cmc
pushf
pop
adc
dec
sahf
sub
fcompl
lcall
fs
movsb
sbb
fildll
stc
mov
cmc
lret
insb
in
or
pop
insl
jae
mov
inc
aad
jl
test
lds
xchg
pusha
aas
adc
add
clc
inc
lock
insb
jb
iret
stos
adc
jnp
xor
fadd
inc
std
mov
pop
mov
push
pop
mov
sbb
push
sbb
sbb
dec
in
movsl
cmp
add
inc
sub
loopne
cmpl
fstps
or
sub
mov
sbb
cmp
subb
sbb
sbb
stos
mov
mov
fidivrl
xchg
cmp
sti
push
addl
popa
out
push
push
mov
test
cwtl
pop
cwtl
cli
out
push
cli
enter
fimuls
push
js
movsl
xlat
int
mov
push
pushf
pop
sub
dec
lahf
xchg
pop
rcrb
xchg
xorb
or
cmp
iret
lods
rcl
mov
pop
fdivl
imul
je
adc
mov
int3
rcll
das
push
jmp
andb
pop
jp
inc
adc
inc
cmp
push
clc
ret
adc
push
addb
int
outsl
xchg
and
pop
hlt
cwtl
mov
pop
mov
daa
inc
hlt
test
ret
test
mov
aam
mov
cmp
dec
mov
in
int
pop
and
aad
cmp
xchg
cli
mov
dec
shl
loop
adc
inc
addl
add
pop
mov
pavgw
mov
dec
imul
sbbl
sbb
dec
popa
das
test
jae
faddl
inc
adc
pop
fs
cmp
aam
cmp
inc
push
or
push
lcall
cmp
sbb
jne
cltd
jl
push
mov
fcmove
xor
sub
into
cwtl
sbb
xchg
or
adc
jl
mov
jne
inc
lcall
inc
jecxz
push
adc
jae
mov
cmpsb
movsl
adc
jmp
scas
gs
divl
mov
add
adc
xor
mov
cmp
in
cmpsl
dec
cmp
pop
xchg
sti
sub
int
push
and
adc
lahf
mov
mov
daa
lds
and
jg
mov
push
dec
jbe
aas
outsl
adc
cli
in
mov
sbb
enter
nop
jo
dec
mov
fsubs
mov
xor
ljmp
xor
pop
push
mov
adc
cmp
inc
fisubl
lods
xchg
or
cmp
add
xor
in
dec
jno
add
add
adc
or
add
pop
pop
call
sub
xchg
mov
sti
sub
das
das
fsubrs
repnz
mov
dec
out
xor
nop
aad
add
mov
and
push
jo
inc
cli
mov
push
aad
and
push
add
lock
inc
mov
fs
addr16
jbe
fcmovbe
loop
js
mov
mov
ret
shl
cmc
pop
push
push
in
mov
dec
cmc
pop
mov
pop
aad
aad
ljmp
movsb
nop
pop
sub
and
xor
loop
cmp
sarb
xor
fcmovne
jge
mov
mov
pop
pop
mov
xor
lcall
adc
fs
call
mov
inc
mov
sbb
mov
in
cmp
es
pop
push
xchg
sbb
cwtl
sbb
int
stc
fldcw
adc
push
faddl
outsl
xor
movsl
popaw
cmpsl
mov
add
aas
mov
mov
int3
outsl
stos
pop
dec
add
ror
in
insb
cmovae
or
lcall
pop
mov
fwait
sbb
xlat
adcl
cmp
popa
fisubl
lods
cld
test
jne
mov
push
cli
jne
das
push
lds
stc
aas
test
lret
rorb
dec
cmp
enter
cs
inc
pop
ret
lcall
mov
mov
fdiv
int
mov
add
loope
std
mov
xchg
mov
movsb
cmp
pop
jp
jle
fucomip
add
orb
or
and
mov
loope
lret
push
int3
jbe
jle
adc
mov
into
cmp
mov
lds
stos
mov
jecxz
dec
sub
sbb
enter
and
movsb
addl
aad
mov
repnz
popf
loopne
rclb
stos
outsl
or
imul
cmp
sub
inc
mov
frstor
adc
subb
push
adc
out
lds
loopne
gs
xchg
lock
pop
jl
cmpsb
inc
adc
mov
mov
pop
cld
out
add
int3
jge
cwtl
out
frstor
ds
popf
movsl
test
xor
into
jo
sub
push
add
jo
sbb
add
mov
cmp
mov
mov
rcrl
ret
repz
enter
push
lock
add
clc
cld
xor
mov
and
stc
lcall
leave
ds
stc
addl
cmpsb
test
aad
pop
popa
add
sbb
mov
push
or
pop
mov
loop
push
mov
cs
xchg
ja
sbb
imul
xchg
sbb
mov
cld
xor
test
mov
xor
dec
mov
scas
sbb
adc
adc
dec
es
mov
xchg
or
dec
mov
pushf
imul
mov
xor
mov
mov
adc
mov
fnstsw
ljmp
pop
adc
jno
out
add
mov
add
scas
call
imul
popa
mov
mov
xchg
icebp
les
adc
mov
mov
scas
sub
mov
adc
arpl
testb
pop
xorl
jne
dec
and
xchg
arpl
sbb
mov
out
stos
pusha
push
mov
int3
push
push
and
aas
insl
test
mov
cwtl
push
js
jg,pn
and
xchg
mov
movsb
xor
stos
stc
ljmp
cmp
les
jmp
sahf
les
cmp
mov
data16
cli
inc
xchg
inc
es
daa
popf
lods
outsb
cwtl
and
jp
jp
jecxz
pop
movsl
cmp
push
mov
push
add
stc
sub
scas
insl
es
jmp
sbb
mov
dec
push
lcall
js
and
dec
repz
das
lahf
popa
scas
pop
sahf
mov
push
loopne
push
mov
repz
imul
icebp
sbb
dec
int3
inc
adc
cmpsb
fcmovnu
lcall
sahf
jns
sbb
xchg
les
push
xchg
repz
sbb
inc
adc
inc
sti
adc
nop
mov
pop
push
shll
mov
std
push
addr16
test
jno
mov
xchg
add
jbe
fdivrl
in
int
xlat
mov
daa
cmp
stc
fcmove
js
xchg
insb
aaa
xor
ljmp
lods
adc
dec
sbb
lods
sti
out
or
sub
mov
ret
adc
scas
ret
stos
jge
pop
aas
aam
pop
and
push
xchg
dec
and
inc
ret
cmp
jl
cld
add
mov
pop
mov
test
jbe
pop
push
in
call
xor
inc
inc
aas
les
dec
mov
mov
cmpsl
pop
dec
mov
mov
mov
sub
mov
sti
shll
fstps
adc
mov
or
jg
idivb
push
cmpsl
cmp
std
insb
xor
xor
int3
insb
jbe
push
sub
inc
cmc
push
imulb
push
fsubl
jmp
fsub
out
push
stos
pushf
pop
jp
dec
jae
movsl
les
movq
cltd
addb
push
lea
push
jp
mov
add
sarl
andb
sbb
aas
bound
add
dec
call
pusha
or
imul
lcall
out
dec
mov
fdivrl
pop
out
jo
aaa
jmp
sti
push
ds
sub
xor
mov
fnstenv
jne
movsb
sub
push
inc
mov
lret
mov
bnd
xor
xchg
subb
daa
push
cld
mov
loopne
sbb
lahf
mov
cmp
in
stos
lahf
incl
mov
int
ret
bound
addb
fistpll
negl
cld
int
pop
cmpsb
leave
scas
adc
ffree
out
mov
adc
inc
outsb
mov
fbld
xlat
insb
loope
jo
or
xor
fsubs
adc
or
pushf
les
inc
dec
push
jge
inc
imul
movsl
ss
mov
push
dec
out
pop
mov
mov
push
int
xlat
sub
das
pop
ret
inc
xchg
mov
mov
jle
cmpl
fwait
lcall
and
ja
sti
es
jg
cmp
test
pop
push
in
test
cmp
icebp
mov
mov
test
add
and
jmp
mov
loop,pt
and
sbb
push
inc
inc
mov
sbb
js
mov
or
mov
pop
out
jg
inc
popa
jno
out
lret
pusha
mov
ss
outsl
push
lods
cwtl
push
add
lret
and
and
jno
arpl
ljmp
jns
lea
pop
xorb
inc
xchg
jns
movsl
adc
push
pop
outsl
push
out
cs
and
xor
fidivrl
xchg
fstl
int
fistpl
jmp
cltd
faddl
jl
jbe
jmp
loope
inc
mov
jne
sub
test
jp
xchg
notl
sbb
gs
cmp
out
popf
dec
aam
push
pop
fstps
dec
lret
adc
xchg
aam
xchg
xor
ljmp
or
lds
call
movsb
sub
pusha
jle
popa
sbb
and
dec
in
cmpsl
mov
fs
aam
insl
dec
or
xor
scas
stos
or
shrl
mov
call
movsl
pop
pop
add
xor
lea
pop
repnz
jnp
in
jne
cmpsb
hlt
out
loop
aaa
push
inc
push
sahf
cmp
mov
and
mov
dec
outsl
fwait
cmc
fnsave
or
mov
ljmp
ja
inc
ds
jl
mov
out
ret
cmp
pop
cmp
inc
rcrl
scas
or
xchg
ljmp
arpl
sbb
adc
pop
jmp
pop
add
dec
inc
popa
mov
mov
hlt
or
xchg
cmpsl
or
test
mov
sbb
mov
lods
jae
popf
cmp
mov
push
xchg
fnstsw
cwtl
inc
dec
jns
dec
pop
xchg
aam
add
mov
mov
das
ds
jne
je
iret
sub
popf
mov
lods
xchg
push
popf
inc
or
andw
jp
mov
call
sub
cli
mov
sti
jp
pop
mov
test
loop
jmp
andb
test
scas
or
jge
rolb
data16
into
inc
adc
jns
jns
inc
rcll
stos
dec
lret
pop
clc
dec
cmc
dec
sbb
push
adc
aas
mov
xchg
adc
outsb
cmc
loop
jl
adc
pop
fisttps
xchg
sbb
ja
xchg
imul
dec
sbb
movsb
mov
mov
jl
pop
subl
dec
push
mov
std
cmp
imul
xchg
mov
or
jge
out
fidivrl
movsl
xor
or
or
or
ljmp
mov
cld
icebp
jns
or
movsl
pusha
sbb
sbb
sahf
add
sbb
jg
std
xchg
mov
pop
pop
std
adc
cmp
ljmp
mov
push
in
cmp
fs
cmp
fsubrs
cmpsl
lret
pop
adc
inc
mov
mov
pop
imul
cs
sahf
mov
stos
mov
mulb
dec
xchg
rorb
sbb
cwtl
xor
add
andb
mov
dec
sbbb
or
xchg
adc
mov
jno
adcb
or
adc
test
dec
aaa
lea
movsb
and
loopne
mov
and
mov
cli
xchg
lock
sbb
sahf
cmp
add
fsubr
int
xchg
lcall
mov
pop
add
nop
and
and
addl
sub
or
ret
dec
and
adc
test
sbb
test
mov
fsts
push
dec
xchg
mov
das
shrb
jo
xlat
shl
jns
xchg
cmpsl
js
mov
mov
adc
and
insl
jp
pop
pop
pop
or
push
mov
pop
pop
int3
lods
mov
addl
xlat
popa
xchg
mov
adc
pop
jnp
push
mov
mov
dec
rcll
and
js
push
jle
int3
lret
pop
leave
jmp
pop
lods
movsb
mov
lret
nop
adc
outsl
sub
adc
fcomps
mov
xor
in
test
mov
aam
call
repz
jo
lock
outsb
sub
adc
mov
dec
inc
mov
jo
push
xchg
ljmp
test
dec
cmp
addr16
mov
dec
out
in
jne
cmpsl
jle
pop
inc
and
test
ffreep
mov
sbb
out
and
cli
fsubl
cld
movsb
call
inc
add
mov
ret
sub
cltd
ret
pop
pop
adc
in
in
or
sti
cmp
xor
pop
outsl
jne
psubq
ljmp
jmp
into
int
scas
daa
int
or
loope
xor
imul
push
mov
aad
addl
add
dec
sbb
add
and
xor
lea
jmp
jae
bound
cld
mov
and
push
add
jle
xchg
and
mov
int3
add
ret
arpl
stc
push
aad
inc
inc
push
add
sbb
outsl
push
inc
call
ds
out
mov
ds
js
sbb
lods
sbb
inc
push
int
out
xchg
outsl
sahf
insl
jl
xchg
lcall
pop
aaa
es
stc
and
mov
adcb
lods
in
ljmp
xorl
push
jg
sub
stos
jb
mov
insl
repnz
test
ret
jl
imulb
mov
xor
out
xor
popf
mov
mov
jnp
inc
imul
and
cld
dec
cwtl
call
add
fwait
jp
fldlg2
inc
cli
imul
fs
mov
mov
movsl
test
mov
sbb
gs
es
icebp
jecxz
or
add
aam
out
push
xchg
or
mov
or
cmpsb
inc
fcomps
push
xor
lcall
fs
dec
or
int
cmpsl
push
or
cmc
les
jle
jnp
out
lds
outsl
pop
stc
adc
dec
lcall
jge
jno
mov
subb
pop
pop
and
js
js
popa
cmpsb
mov
xchg
push
cld
andb
rcrl
mov
mov
inc
cmp
mov
popa
hlt
test
loop
rorl
outsl
mov
addr16
sbb
sub
mov
push
push
fildl
sbb
sub
push
fldcw
push
xor
push
fcompl
mov
sbb
jne
xorl
mov
iret
lea
rcrl
sti
add
jg
adc
iret
mov
and
sbb
sbbb
aam
push
pop
xor
or
mov
cld
or
push
jnp
je
sub
inc
jnp
pop
fadd
sub
and
cmpsl
mov
mov
movsl
mov
mov
cmp
lea
sahf
cmp
cs
pusha
movntq
out
filds
mov
push
or
mov
cwtl
mov
inc
xchg
mov
mov
leave
sbb
adc
ljmp
fcmovbe
adc
ja
jp
stos
mov
inc
adc
pushf
mov
shrb
xchg
jb
push
mov
pop
lds
add
lret
fwait
cld
or
jmp
xchg
les
or
pop
jl
aaa
push
loopne
into
loope
ffreep
mov
adc
push
add
arpl
and
in
imul
insl
sbb
in
leave
loop
cs
scas
test
ret
adc
lsl
std
lea
or
xor
adc
dec
and
inc
sbb
in
jl
push
out
popf
adc
test
repz
mov
test
cltd
push
push
dec
xchg
mov
je
dec
sbb
in
mov
sbb
movsl
xchg
les
rorb
repnz
and
lret
jg
xor
jge
mov
jg
dec
add
mov
iret
in
sub
in
pop
cmp
xor
mov
push
sub
inc
lods
bound
out
test
into
ja
rorl
dec
push
sahf
movsl
xor
xor
xchg
fildl
fwait
lcall
mov
jns
std
cwtl
in
incb
pop
lahf
adc
pop
int
sbb
repz
add
gs
adcl
push
push
shlb
add
add
push
mov
pusha
fwait
jb
shrl
adc
aad
and
push
cmp
mov
jle
add
adc
stos
dec
push
aas
addr16
xchg
sub
cltd
mov
lcall
pushf
push
add
mov
ret
sbb
dec
fwait
jl
aad
sti
dec
aas
inc
js
jp
cltd
roll
add
and
push
jl
js
nop
es
add
les
addb
sbbl
sub
xor
lea
test
adc
add
inc
push
je
addl
xchg
inc
insb
notl
mov
and
out
inc
push
ret
cmp
cli
sub
pop
sbb
lods
fistpl
adc
jl
stos
movsl
lcall
sahf
xor
add
jmp
in
scas
mov
lea
xchg
dec
movsb
jnp
mov
fwait
push
sub
xor
or
push
sbb
dec
out
sbb
jbe
lcall
js
mov
std
fdivl
fists
sbb
cli
cmpsb
adc
xchg
push
ret
or
or
jge
adc
jnp
mov
inc
in
jmp
sahf
imul
dec
cmc
or
push
inc
cmp
aaa
jns
sbb
or
sbb
xchg
lahf
fwait
push
xchg
cmp
ljmp
sbb
es
stos
out
fiadds
movsl
jno
test
xor
jmp
jae
jno
xchg
pop
shl
notl
out
mov
sbb
stos
xlat
inc
cmpb
jnp
dec
les
sti
push
mov
ja
lock
jle
les
out
jns
btc
cmpsl
es
sbbl
inc
repnz
scas
jg
dec
pop
es
sub
addb
mov
idivl
xchg
in
cld
rol
mov
inc
dec
clc
mov
sbb
push
jb
xlat
repnz
pop
insb
sahf
xor
mov
out
xchg
lret
and
push
jge
ret
pop
pop
inc
adc
in
xchg
mov
lret
mov
pop
xlat
mov
into
push
out
pop
push
int3
aaa
jle
sbb
leave
ret
push
imul
jmp
mov
pop
fs
movsb
lods
add
push
repz
jp
popa
lock
icebp
lcall
out
mov
int
stos
push
fs
lret
dec
mov
cld
aad
outsb
adc
push
movsb
jp
rolb
sbb
jbe
sbb
pop
sbb
mov
mov
enter
jbe
loop
mov
test
imul
jmp
data16
popa
dec
pusha
mov
addb
cmc
and
popa
shll
xor
push
fdiv
js
fwait
mov
mov
pop
fisubs
mov
test
or
mul
mov
out
and
mov
push
repz
vpshuflw
sub
xchg
loopne
or
mov
mov
ja
int3
and
cmpsl
xor
xchg
in
fisubrl
xor
sbb
jp
sahf
xchg
scas
xor
jb
sub
jl
cmp
cmp
jmp
fcoml
mov
gs
xorl
mov
in
daa
call
mov
jno
jns
cmpl
xchg
mov
mov
sbb
inc
or
adc
cmp
or
testb
fdiv
push
push
jns
inc
push
repz
xlat
push
lcall
mov
sub
xor
test
sub
lds
xor
add
cmp
lds
jb
sbb
das
aas
mov
jp
fsubl
fwait
dec
push
sub
fimuls
cmpsl
in
cmp
nop
mov
push
sbbl
adc
xchg
andl
mov
push
jbe
test
cmp
movsb
adc
jb
pop
in
imul
pop
jp
mov
xor
call
ret
add
test
sub
test
inc
mov
mov
xor
jp
cmp
mov
ret
fisubrl
push
mov
dec
push
scas
mov
cmp
cmp
pop
xchg
ret
fcomps
mov
les
lcall
into
call
loopne
and
add
pop
ja
iret
ss
movl
sahf
nop
and
jecxz
adc
jo
cld
imul
jecxz
xchg
int3
in
movsb
ret
adc
cmp
cmpsl
or
mov
inc
mov
cmpsb
or
and
jne
mov
or
and
jp
fildll
mov
pop
mov
sbb
cwtl
fsubs
movsb
outsl
xor
loop
push
hlt
popa
sti
je
cmp
xor
popa
push
mov
xchg
pop
mov
mov
movsb
and
jo
clc
fsub
inc
cmc
jne
shr
repnz
sbbl
lcall
push
xchg
loopne
xchg
xchg
inc
outsl
insb
sbb
cwtl
push
addr16
dec
jmp
iret
cmc
mov
cmpsb
mov
sub
push
mov
push
mov
push
sbb
mov
sub
xchg
push
xchg
sahf
addl
lds
dec
dec
mov
int
xor
and
int
adc
cltd
int3
popf
out
fists
sub
jo
mov
sub
cmpsl
add
lret
push
lock
adc
xchg
sub
stc
pop
add
add
sbb
sbb
mov
iret
push
cwtl
loop
kandb
stos
js
mov
pop
mov
inc
lock
mov
mov
stc
push
dec
cs
pop
jle
pop
lods
and
sub
push
dec
push
fnstsw
fdecstp
clc
sub
icebp
sub
adc
cltd
enter
or
outsl
insb
in
mov
insl
addr16
add
jge
popa
xchg
sub
int
lcall
cmp
std
mov
jl
inc
mov
popa
lds
push
inc
sbb
jo
and
test
pop
ljmp
add
imul
mov
inc
inc
stos
mov
xchg
sbb
ljmp
push
mov
ret
jmp
clc
aad
dec
mov
dec
xor
movsb
xor
das
push
negb
ret
stc
mov
imul
sahf
insb
mov
adc
cmp
dec
push
mov
loopne
pop
cmp
push
cmc
insl
lock
fs
pop
lock
fcoml
je
inc
xchg
pop
cld
into
pop
sarl
jmp
pop
add
push
inc
bound
out
ljmp
sbb
push
cmp
jae
xlat
fxch
ja
inc
xchg
outsl
ret
sub
in
jge
inc
sub
iret
or
lods
add
mov
push
dec
xchg
mov
iret
test
dec
sub
in
insl
in
int
mov
lods
or
cmc
adc
jle
xor
cld
into
pushf
arpl
divb
data16
pop
subl
jnp
enter
call
jb
jle
cmpsb
int3
mov
push
sub
push
subl
jge
dec
adc
push
test
mov
mov
mov
add
xchg
pop
mov
out
pop
xchg
rcrl
and
adc
pop
or
loope
pushf
jbe
adc
out
mov
xchg
xchg
stos
test
scas
mov
mov
mov
and
lea
xlat
cmp
pop
sti
mov
dec
push
stos
and
jnp
fucomip
xor
fsub
nop
dec
xchg
and
outsl
inc
ja
cmp
and
mov
jp
mov
inc
jecxz
add
in
cmpb
pop
cmp
dec
test
xchg
lret
je
push
xor
out
ret
rolb
jbe
aaa
in
cmpsl
fidivrl
hlt
xor
sub
push
push
std
inc
ss
dec
lret
fisttps
cmp
movsb
ret
jnp
lods
cltd
pop
or
push
mov
sar
aam
decb
pop
addr16
push
sub
fidivl
mov
mov
lcall
push
xor
scas
sub
push
mov
fwait
and
imul
and
or
repz
sub
aaa
icebp
xor
in
daa
adc
cmp
xchg
adc
sbb
pop
xchg
push
mov
das
mov
lock
sbb
test
push
xchg
mov
mov
pop
jnp
sbb
adcb
xor
jle
xor
ficoms
pop
xlat
sbb
push
cmpsb
jmp
fcoms
div
dec
mov
mov
xchg
jbe
rcl
push
inc
inc
cmp
inc
clc
pop
das
fistpl
add
mov
pop
dec
xor
pusha
shlb
jg
dec
pop
xchg
ss
or
and
clc
cltd
enter
ret
jnp
lahf
and
aaa
inc
cmpsl
xchg
mov
std
xchg
neg
leave
or
test
or
mov
enter
into
es
jge
decb
in
add
push
adc
enter
push
add
cmpsl
nop
pop
shlb
fdivl
push
test
xor
pop
cmp
int
sbb
fisubs
add
je
dec
mov
cwtl
sbb
push
and
insb
loop
and
push
mov
jo
push
ss
pop
mov
pop
inc
mov
outsb
jb
push
dec
aad
mov
mov
shl
jae
and
rcl
xor
shrb
lret
gs
dec
xchg
cs
xchg
add
or
add
and
hlt
or
stc
xchg
test
lcall
cwtl
negl
daa
push
pop
jmp
adc
cmpl
mov
jo
inc
lahf
fnsave
popf
or
adc
xor
push
xlat
and
and
or
dec
fcompl
das
icebp
push
jns
mov
mov
jb
and
es
lock
mov
mov
cli
xchg
dec
pop
decb
test
int
jp
in
cld
cmc
sbb
int
push
iret
xorb
add
inc
push
stos
data16
jns
sub
push
xchg
jl
das
lods
pusha
fwait
sti
jns
bound
imul
pushf
call
aam
cwtl
clc
jae
jo
aas
scas
rcrl
stc
push
out
mov
lret
jb
jg
push
mov
subps
leave
sti
push
outsl
mov
add
fdivrs
fcmovnb
mov
fidivs
loope
dec
sub
lock
aam
out
mov
or
mov
sbb
adc
shll
sub
sub
sbb
stos
scas
into
fstpl
clc
xor
fiadds
aam
push
leave
rcll
insl
pop
xchg
mov
fcmovnbe
fisttpll
cld
dec
fmuls
or
rolb
pop
sbb
jle
xchg
test
or
sub
lret
ss
xchg
nop
je
aas
arpl
jo
push
xchg
stos
hlt
repnz
movsl
scas
lret
add
in
jae
das
mov
adc
mov
rcr
push
mov
ror
int3
sub
jae
sbb
shr
inc
mov
clc
in
jg
xor
pop
lods
jne
mov
shl
xlat
stc
cmp
flds
mov
adc
mov
fdivs
imulb
jns
adcl
or
out
sub
mov
pop
test
pop
es
push
fstp
ret
mov
xchg
xchg
cmp
and
lcall
sbb
ja
int
fistpll
sbb
filds
shll
sub
fsubrp
sti
nop
popa
or
sti
pop
mov
cmpsl
lahf
pop
mov
cmpsb
add
cmp
xor
int
xor
jge
popf
push
clc
cmp
add
shlb
and
int3
or
cmp
idivb
repz
shlb
int3
xlat
lcall
jne
cld
sbb
adc
and
sbb
in
in
pop
imul
cltd
and
mov
push
push
pushw
mov
rcll
test
addr16
mov
cmpl
loop
cmp
sar
inc
fnstenv
out
inc
cmc
outsb
out
push
jp
testb
repnz
imul
mov
in
inc
mov
test
xor
jl
gs
jmp
mov
popf
popa
pop
jmp
stos
mov
imul
mov
jae
arpl
imul
pop
popa
leave
fwait
nop
mov
sub
push
sar
add
mov
sti
loope
lret
pop
loope
push
lock
jno
dec
xor
psubsw
add
add
pop
jle
or
mov
fwait
adc
negb
xchg
adc
fucomp
xor
dec
jl
xor
xchg
out
repz
pop
daa
add
adc
pop
pop
retw
dec
stos
jns
xchg
add
cmp
pop
out
icebp
cmp
sbb
xor
cltd
fdiv
out
xchg
fildl
add
sti
jbe
and
loopne
ror
cmpsb
test
cltd
in
out
loope
in
adc
subb
sbb
or
sub
lds
push
dec
push
jmp
cmpsl
sub
inc
jl
add
ja
adc
cwtl
pop
mov
mov
cmp
mov
lea
jge
push
shlb
icebp
pusha
ret
pop
jmp
pop
and
cli
dec
dec
mov
sub
out
mov
insb
stc
lret
mov
insl
ret
pop
push
fs
cmpb
jl
out
ret
js
add
xchg
in
mov
xchg
aaa
imul
out
inc
clc
sahf
or
jae
std
xchg
dec
orb
mov
jp
jno
dec
or
in
or
adc
mov
xor
dec
sarl
std
mov
cltd
out
dec
minps
push
lret
adc
push
xchg
js
xor
mov
and
xor
inc
lret
or
and
test
arpl
mov
dec
xchg
cmc
jb
pop
sbb
sub
mov
cltd
mov
mov
or
push
jae
dec
test
pusha
into
push
sbb
add
and
jnp
pop
int
jp
cmp
movsl
xchg
aaa
jmp
mov
insb
repz
movsl
or
jl
movsb
les
ret
ficompl
scas
sbb
sahf
iret
dec
push
fs
ja
rorl
add
subl
sub
or
mov
mov
fptan
inc
pop
inc
and
andl
ror
fwait
push
mov
loop
mov
and
clc
fmull
push
sub
mov
adc
testb
sbb
jo
imull
movb
jne
cmpsb
dec
sub
push
loopne
hlt
loope
or
sbb
icebp
mov
in
pop
mov
mov
inc
add
mov
inc
pop
push
mov
or
sti
lods
addb
aaa
out
inc
push
pop
daa
test
ja
mov
outsl
pop
fldl
jno
imul
cmp
or
icebp
icebp
mov
rorb
aas
insb
in
pop
add
pusha
mov
scas
outsl
lcall
int
pop
pop
adc
not
or
and
xchg
imul
int
mov
ljmp
inc
rcl
and
in
pop
mov
adc
rcrb
push
cmp
mov
adc
lods
imul
mov
dec
loop
stos
jno
xor
shlb
jmp
shrb
daa
xchg
xchg
arpl
push
stc
mov
jne
scas
cltd
lret
jb
inc
stc
outsb
jle
push
je
mov
jbe
aam
mov
dec
test
incl
jg
add
sub
addr16
bound
bound
adc
aam
mov
mov
mov
xor
add
fisubrl
xor
sbb
sarb
mov
dec
out
outsl
mov
nopl
je
hlt
cli
xchg
cmc
fs
mov
es
dec
daa
jg
jbe
cmp
bound
lret
das
mov
sub
in
adc
ret
leave
loop
and
roll
jmp
xchg
lods
mov
iret
or
arpl
call
inc
fiaddl
jge
and
sahf
dec
data16
sbb
mov
loopne
cmp
in
xchg
mov
adc
push
js
iret
rcr
push
dec
mov
nop
lock
xchg
cmpsl
and
xchg
je
pop
inc
sbb
jmp
sub
push
cld
stos
or
cmp
les
and
jge
aad
mov
lret
lcall
dec
pop
sub
imul
add
mov
lret
xlat
add
das
and
aas
int3
rorl
or
ffreep
inc
jmp
sbb
cli
in
popf
cmp
xor
ret
sbb
xor
mov
ret
mov
lahf
xchg
inc
scas
dec
and
lret
cmp
fs
call
jp
cmp
cmpb
or
jecxz
cmp
adc
lahf
movsl
cmpsb
sub
push
inc
mov
rcrb
mov
les
rcrb
pop
xor
jmp
rcrb
cmp
pop
cltd
adc
es
adc
sub
xor
and
mov
jge
jecxz
dec
jmp
test
mov
pop
int3
ss
cmp
and
cmp
dec
out
xlat
and
push
mov
inc
sub
mov
xchg
lock
and
hlt
test
inc
out
and
push
adc
jge
sub
stos
nop
push
cmp
mov
loope
popf
test
jp
fiadds
mov
mov
fdiv
inc
mov
loope
and
insb
std
les
push
in
out
mov
mov
mov
stos
jns
push
shlb
mov
pop
xchg
dec
dec
inc
cmpsb
movsl
adc
pushf
jno
jg
sub
ret
imul
jns
lcall
testl
cmpsb
push
pop
push
imul
dec
aam
jb
std
out
into
sub
gs
repnz
xchg
xchg
aad
mov
xlat
je
cli
imul
icebp
repz
adc
fidivrl
rorb
hlt
lds
mov
leave
xchg
je
out
jo
pop
in
adc
sbb
push
pop
jbe
mov
inc
mov
jns
aaa
lock
pop
mov
dec
add
nop
out
lock
out
and
arpl
dec
mov
es
add
inc
jo
mov
or
in
cmp
xlat
mov
inc
lock
sbb
and
fnsave
ja
pop
dec
push
push
enter
leave
sti
inc
mov
shl
lcall
mov
clc
xchg
or
or
sub
cmp
add
dec
xor
sarl
cs
lods
outsl
push
and
loope
sub
mov
push
cltd
xorw
xchg
push
and
enter
mov
ljmp
xchg
xor
cmp
insl
push
jae
cmp
aad
std
xchg
test
in
ja
inc
dec
cmpb
out
jne
inc
mov
mov
in
imul
jecxz
dec
add
mov
sbb
outsb
in
movsl
xchg
cs
mov
insb
pop
push
pop
mov
mov
jns
jo
mov
pop
add
test
test
xchg
inc
mov
and
subb
and
jo
inc
notb
pop
jne
adc
loopne
sub
lods
mov
cmp
test
sahf
js
adc
and
jbe
mov
icebp
mov
push
xor
xchg
repz
mov
mov
fidivs
sti
stos
push
lret
mov
xor
bound
jae
or
stos
bound
dec
mov
ret
and
aas
daa
fsubp
scas
xor
out
in
iret
xchg
jb
jg
push
clc
sub
je
mov
fs
xchg
ljmp
je
out
inc
adc
mov
pop
clc
pop
pop
fstpl
jno
popf
mov
and
mov
call
pop
data16
mov
mov
dec
mov
inc
inc
sbb
das
shlb
imulb
add
aaa
cs
cmp
aad
sub
sahf
xor
repz
or
pop
and
mov
dec
rclb
cmpsl
mov
fucom
lock
movsl
jb
adc
and
pusha
aaa
jmp
cmp
mov
jmp
in
clc
dec
xor
aaa
mov
xchg
or
stc
pop
jle
stos
js
cmp
or
push
push
mov
inc
das
push
xor
icebp
lret
cld
xchg
xchg
mov
pop
inc
mov
fwait
or
cwtl
mov
shlb
in
dec
test
mov
sbb
fsubs
add
shl
movsl
push
adc
dec
sbb
adc
jecxz
or
add
cmp
inc
rep
sbb
negl
push
mov
iret
xchg
mov
push
or
movsl
xchg
mov
leave
lea
test
pop
inc
imul
lahf
je
add
adc
and
outsl
xchg
sti
lock
in
test
iret
or
out
or
aad
pop
dec
ja
mov
rcrl
sarb
pushl
inc
xchg
cmp
lock
popf
xor
jle
int3
ljmp
cmpsb
shl
dec
outsl
addr16
cltd
mov
dec
imul
jecxz
leave
and
or
pop
sub
pop
inc
and
enter
jecxz
mov
outsl
xchg
inc
or
mov
pop
mov
movb
mov
bound
pushf
outsb
shlb
cltd
sbb
clc
xlat
testb
repnz
jecxz
movsb
cwtl
xlat
lods
dec
cmpsb
and
fsubr
xchg
sahf
inc
clc
adc
icebp
and
inc
imul
movsl
mov
inc
mov
ss
ja
mov
mov
xchg
dec
mov
dec
and
cmpsl
icebp
and
call
jnp
add
mov
xor
mov
sbb
xchg
xchg
out
shl
std
arpl
and
xor
out
aam
fwait
adc
jae
test
loopne
inc
std
adc
xor
push
out
loop
popa
gs
xorl
enter
into
test
aas
fs
mov
iret
jae
push
jle
push
lea
mov
cmpl
or
jecxz
in
frndint
dec
sbb
mov
clc
jne
push
dec
mov
pusha
hlt
pop
sub
into
sbb
mov
add
aaa
inc
imul
and
lahf
nop
mov
leave
lock
pop
lods
sbb
and
stos
fstl
lahf
or
xchg
mov
lea
sbb
ljmp
jg
and
fwait
aad
push
cmc
call
push
sbb
push
inc
ja
xor
stc
lea
xor
cwtl
cmp
std
out
push
push
das
fs
mov
sbb
or
adc
enter
or
pop
xor
push
lcall
mov
arpl
xchg
aad
mov
sub
push
jmp
jg
push
mov
fildl
aam
inc
shrb
testb
lret
int
pusha
or
into
add
test
ljmp
cld
addr16
hlt
adc
pop
fildl
xchg
daa
jle
inc
pop
mov
push
loopne
clc
xor
arpl
jp
add
xchg
punpckhbw
add
push
out
das
mov
sbb
bound
in
mov
pavgb
pop
push
mov
outsb
push
rolb
test
and
xchg
cli
inc
push
adc
out
jp
sub
iret
lds
pop
outsl
fcmovnbe
bound
and
xor
cltd
addl
aas
mov
sub
mov
stc
cmp
imul
nop
in
fldl
sbb
xor
push
lods
lret
xor
in
cs
into
pop
cltd
cmpsl
rorl
test
or
es
sbb
mov
in
out
xor
aas
inc
loope
das
ror
adc
push
shrb
mov
mov
mov
xchg
insl
cwtl
inc
push
lcall
fstps
xor
pop
out
or
shll
push
or
cwtl
insl
push
or
int
adc
add
push
bound
aad
stos
mov
mov
shrl
mov
jmp
call
adc
push
mov
jmp
out
mov
mov
out
xchg
push
repnz
jg
int
sub
and
ds
clc
cmp
mulb
mov
inc
sbb
adc
call
mov
adc
and
pusha
nop
ret
les
lret
xlat
sbb
fisubrs
jle
add
sahf
ret
dec
loop
cmc
test
mov
push
faddp
repnz
addr16
dec
cmp
push
mov
aas
mov
or
jo
mov
push
mov
inc
sbb
add
js
loopne
std
mov
mull
popl
sbb
pop
xor
and
cli
popf
sub
mov
sbb
cmp
insl
jmp
and
and
jb
xor
inc
jnp
xor
xor
lods
push
sub
xchg
loope
mov
jno
lods
aam
push
mov
aad
test
into
ret
pop
mov
dec
repnz
sbb
push
dec
xchg
addl
lock
repz
test
or
mov
sub
ret
jmp
mov
fwait
mov
je
loop
mov
test
mov
cmp
les
lds
sti
jmp
mov
sub
push
orl
cpuid
out
out
xor
mov
sahf
lcall
loopne
dec
daa
cltd
jns
rcll
jns
add
xlat
sub
pop
mov
inc
inc
les
loop
or
push
mov
stc
sub
inc
mov
jbe
mov
adc
or
adc
stos
pop
pop
mov
sbb
imul
insb
xchg
adc
or
lds
cmp
int3
sub
in
or
sbb
mov
push
mov
std
test
and
cmp
cli
ja
cltd
pop
sbb
int
push
cmp
stc
xchg
fbstp
sbb
inc
sbb
dec
les
data16
and
adc
jb
fs
add
addl
inc
aas
push
int3
pushf
xchg
imul
call
dec
lock
cmp
addr16
add
inc
sbb
js
pop
out
push
jle
cmp
cmpsb
mov
insb
xor
imul
jg
aas
test
push
es
jmp
push
or
lea
mov
inc
mov
out
jle
jl
ss
sbb
lods
daa
mov
lcall
pop
add
sarl
jb
gs
xor
sahf
xchg
lds
mov
movsb
insl
add
clc
sbb
mov
sbb
ljmp
lret
jg
xchg
pop
add
mov
aaa
adc
mov
sti
xchg
out
mov
sbb
ljmp
push
xor
adc
aam
ret
movsb
jne
dec
push
cld
pop
inc
aas
and
shrl
inc
stos
int3
int3
icebp
fdivrs
popf
jecxz
push
aad
popl
jbe
sub
jg
insl
inc
insb
ret
sub
cmp
cld
out
dec
add
inc
je
in
inc
sub
and
push
sbb
jns,pt
iret
fcomps
fdivr
bound
divb
das
fucomip
rclb
adc
loopne
adc
addl
scas
pop
fwait
incl
pushf
jno
out
pop
out
in
popa
mov
nop
aas
mov
in
mov
or
dec
and
mov
cmpsl
push
jg
inc
into
cmp
in
rorl
movsl
and
popf
push
and
push
outsb
loopne
add
or
out
xchg
nop
or
adc
std
or
jns
out
icebp
dec
dec
ds
notb
jg
lods
notl
push
bound
xor
ja
jae
mov
adc
cmpsb
test
sbb
mov
mov
mov
ret
out
sbb
mov
mov
dec
sysenter
ret
xchg
pop
ret
dec
pop
fdivl
sbbb
jmp
pushf
mov
fcmovnu
je
mov
inc
mov
shrb
pusha
and
cwtl
dec
sub
sbb
call
cmpsb
jb
dec
cltd
and
mov
or
insl
mov
repnz
inc
cmp
fimuls
insb
and
scas
cli
jmp
and
cmp
bound
std
or
stos
jae
jle
dec
pusha
or
aaa
push
mov
push
or
cld
popf
mov
fucomi
sti
and
out
pop
lods
or
sbb
fsubs
hlt
adc
data16
pushf
push
sbb
push
mov
mov
fstps
cmp
jp
mov
or
clc
sbb
push
hlt
in
or
cmp
and
mov
wbinvd
repz
jmp
insl
cwtl
int3
das
xchg
lret
pop
popf
fmuls
repnz
aad
dec
adc
push
stos
jne
mov
jge
mov
loopne
add
roll
scas
or
xor
imul
jb
sub
jecxz
dec
ljmp
xor
mov
dec
dec
cmpsb
or
jecxz
icebp
jb
inc
imul
outsb
lahf
pushf
pop
dec
mov
xchg
push
dec
and
jne
adc
in
loope
push
out
fxch
jecxz
dec
or
or
dec
adc
adc
push
hlt
fcos
mov
jmp
push
dec
jno
ljmp
insb
es
repnz
imul
push
fstpt
sub
std
jae
mov
mov
in
adc
iret
inc
arpl
cmp
jmp
and
jne
jl
jnp
shl
fidivrl
add
inc
or
and
mov
test
jns
lods
push
sarb
push
shll
xor
movsl
subb
cmp
lret
pop
fucomip
ja
push
push
mov
and
sbb
divb
ljmp
xor
cmp
or
jge
dec
jmp
call
push
jg
aas
icebp
sbb
mov
arpl
jl
inc
xchg
ljmp
and
cli
sub
push
mov
mov
pushf
iret
icebp
or
mul
mov
lea
out
pop
mov
xchg
test
cmp
inc
rcll
ljmp
and
mov
mov
pop
jns
pop
jb
xchg
ficompl
push
mov
fcmovu
cmp
stos
loopne
xor
in
inc
loopne
das
lods
es
sbb
lods
pusha
ret
xchg
xor
cmp
outsb
dec
popa
inc
fildl
hlt
inc
mov
jmp
and
cmp
inc
imull
test
jb
jb
scas
pop
std
rcrb
test
jmp
cmpl
sbb
fcmovnbe
mov
jbe
popf
bnd
mov
lods
bound
mov
data16
stos
xor
out
xor
or
inc
aaa
arpl
stos
dec
add
inc
cmp
jnp
nop
and
inc
int3
cld
popa
js
pop
sbb
mov
lock
push
mov
xchg
shll
in
jb
xor
push
imul
cmpsl
pusha
mulb
pop
in
cmp
int3
sbb
xorb
movsb
sahf
sub
inc
push
in
ret
lret
mov
pavgb
or
aas
cmp
jl
mov
cltd
mov
mov
mov
adc
mov
icebp
js
rol
inc
jmp
jmp
jae
scas
cmp
mov
jne
cld
or
and
cwtl
mov
push
subl
mov
data16
or
mov
aad
pop
test
icebp
lds
mov
stos
cmp
mov
iret
lods
sub
and
xchg
and
adcb
pop
dec
pop
xor
ljmp
cli
or
ss
lods
pop
in
mov
adc
jle
stos
xor
and
inc
mov
notb
imul
imul
dec
jge
cmp
push
mov
test
push
add
add
or
add
in
inc
dec
loopne
add
cmp
cmp
xlat
push
push
cmp
mov
pop
popa
jnp
pop
pop
or
pop
mov
mov
fidivl
test
repz
fisttpl
es
outsb
add
imul
mov
adc
cmp
pop
jae
mov
adc
cli
push
or
mov
iret
mov
inc
lea
in
fwait
sbb
leave
int
sbb
outsb
loop
sub
lods
mov
outsb
data16
inc
pusha
scas
xorl
test
sub
and
ljmp
or
movsb
pop
dec
cmp
test
cmp
inc
sbb
jmp
orl
lea
sub
mov
insb
xchg
aas
add
adc
cmp
mov
pop
jo
mov
push
or
xchg
mov
jmp
ret
push
mov
fucomi
out
and
lahf
callw
lds
inc
movsb
lds
test
mov
sub
es
mov
jb
loop
das
push
mov
jo
stos
inc
lcall
sbb
lcall
arpl
in
fdivs
cwtl
jo
xor
mov
out
adc
jne
mov
into
jle
mov
loop
es
mov
xor
push
dec
arpl
mov
jg
in
inc
add
or
inc
iret
rorl
push
dec
lret
xchg
jge
insb
cmp
sub
not
mov
loop
add
push
out
rcrb
mov
inc
push
inc
mov
lods
cmc
ja
pop
rorb
dec
dec
test
sbb
insb
sbb
outsl
adc
jb
xchg
pop
ja
repnz
out
test
jno
stos
je
push
lret
and
pop
arpl
inc
pop
dec
out
imul
iret
sub
cmp
outsb
aas
dec
test
mov
in
lret
pop
pop
push
rcrb
mov
push
jno
xchg
inc
arpl
cmp
pop
xchg
out
inc
adcb
add
pop
ja
lock
and
xchg
mov
pop
ficoml
loopne
out
dec
mov
adc
mov
cld
push
jne
pop
xor
mov
sbb
test
daa
or
repnz
pushf
hlt
fimuls
lret
xchg
sub
pusha
movsl
and
mov
sub
imul
loop
mov
xor
jecxz
push
mov
sub
loopne
inc
xor
clc
sub
push
sub
and
movsb
cmp
es
aam
out
movsl
sbb
sub
jnp
in
add
pop
lahf
arpl
mov
aad
mov
andb
mov
inc
pop
sub
mov
add
cs
jnp
push
push
aad
mov
pop
fsubrl
sbb
clc
mov
jne
push
jo
cmp
imul
int
cmp
fldcw
out
sub
lahf
mov
inc
popf
ret
cs
stos
push
aaa
imul
dec
ret
sbb
adc
rorb
xchg
arpl
lcall
sbb
in
adc
lock
jb
mov
inc
or
or
jmp
jp
sbb
test
lret
mov
fdivs
cmp
xchg
psllq
out
xor
mov
cmp
mov
call
mov
fwait
inc
cld
jecxz
pop
jbe
int
dec
cltd
hlt
mov
nop
add
pop
in
and
into
addr16
inc
mov
jp
js
mov
inc
sbb
jno
rclb
adc
pop
mov
cmp
stc
in
mov
mov
in
les
jmp
test
ftst
enter
js
sbb
iret
hlt
xlat
hlt
mov
stc
cltd
imul
out
pusha
pop
adcb
mov
mov
mov
divl
push
icebp
ja
icebp
add
outsl
push
repz
or
jle
cli
xor
fnstcw
mov
sub
fadds
outsb
and
pop
push
shll
fsubrl
clc
xchg
fcmovne
ds
data16
incl
and
xor
xchg
or
ret
and
jl
and
pop
xor
or
nop
cmc
mov
cltd
push
sub
aaa
dec
fsts
pop
repz
add
add
push
mov
xchg
mov
scas
jo
push
sbb
jae
inc
jo
fstpl
es
pushf
jno
test
in
insb
sarb
mov
push
cmp
sub
push
push
bound
outsl
xchg
out
sub
pop
aaa
pop
inc
enter
rolb
inc
xor
jp
cmp
push
pop
in
push
shrl
add
pop
cmpb
and
jp
shll
xchg
dec
push
lret
sbb
sti
push
jb
mov
jnp
scas
xchg
aad
dec
xor
pop
pop
aas
cmp
or
add
outsl
push
ljmp
lods
dec
pushl
out
insl
lock
loope
aam
mov
iret
adc
lods
sbb
shlb
sbb
jne
ss
dec
bound
das
lds
loope
add
loop
push
dec
rolb
xor
aas
daa
xor
inc
out
hlt
mov
push
pop
repnz
dec
mov
push
rorl
ja
add
shlb
and
shl
inc
repnz
pop
cmp
mov
mov
sub
jno
lods
pop
add
inc
repz
mov
into
inc
je
je
lcall
cmp
inc
inc
push
adcb
or
clc
add
repz
cs
imul
xor
push
sbb
cmp
sub
mov
inc
shrl
lcall
insb
and
push
scas
sarl
fcoms
add
movsl
imul
mov
pop
fdivr
outsb
mov
push
lret
jl
mov
xor
mov
lea
ret
mov
mov
adc
or
mov
push
sarl
or
insb
add
bnd
int
iret
adc
sbb
dec
sahf
pop
loop
std
addr16
mov
and
repnz
or
cs
lcall
sub
jns
es
enter
pop
cwtl
nop
dec
sbb
pop
aas
xchg
mov
ljmp
lods
lcall
roll
mov
and
cmp
xor
xor
or
je
pop
int3
gs
or
jnp
xchg
in
ret
lret
jle
ja
inc
lret
loope
rclb
or
pop
mov
inc
imul
dec
cmp
sahf
ja
cmpsl
jp
mov
fadd
scas
add
int
or
stc
stc
cld
fisttpl
adc
in
repnz
dec
jl
mov
orl
or
jle
cltd
and
call
jmp
sub
mov
add
pop
fwait
idiv
dec
xchg
fnsave
jl
addb
push
repnz
jle
loop
inc
sbb
and
jae
dec
or
sbb
fs
fwait
cmpsb
dec
mov
or
outsl
js
std
dec
sahf
cs
or
dec
mov
push
jns
faddp
fmull
fldl
pop
xchg
pop
pushf
iret
into
jb
out
cmpl
movsb
mov
jmp
stos
add
jo
out
pop
xchg
mov
rorl
xor
fimuls
dec
fiaddl
je
idivb
lret
and
insb
sbb
add
dec
jle
sbb
enter
arpl
dec
cmpsb
subb
out
pushf
icebp
test
inc
lahf
cmp
add
push
mov
mov
movsb
xchg
sti
stos
loopne
xchg
jmp
lods
stos
cmp
push
lcall
outsb
cmp
cmp
mov
xchg
pmaddwd
mov
push
cs
mov
lret
jle
ficompl
cld
dec
mov
aas
xchg
pop
loopne
jge
rolb
les
ret
fs
stos
nop
push
inc
mov
push
pop
jg
mov
repnz
jg
mov
sbb
cmc
jmp
ja
add
out
shlb
imull
cmp
nop
cwtl
lds
sbb
and
dec
lret
pop
pusha
daa
popa
pop
and
rorl
inc
mull
push
xchg
xchg
out
cwtl
test
enter
mov
out
fdivrs
outsb
mov
pop
or
test
sbbb
int3
inc
inc
mov
mov
js
push
mov
mov
lcall
add
pop
sbb
pop
mov
repnz
push
aaa
and
lea
jp
lock
hlt
cmc
mov
mov
adc
push
lcall
pop
scas
mov
movsb
mov
adc
jb
sbb
sbb
mov
fstps
push
xchg
pushf
out
je
push
stos
in
push
dec
movsb
xlat
ja
cmp
or
call
repnz
lods
or
daa
add
bnd
or
cmp
add
xchg
bound
pop
xchg
loop
fsubs
rcr
mov
imul
test
jmp
inc
data16
daa
aaa
mov
outsb
test
daa
mov
push
je
into
rcl
dec
shll
repz
mov
mov
addr16
sub
rorb
xor
fnstsw
fbld
mov
fisubrs
or
clc
pop
inc
xchg
stos
out
fsubrl
scas
decb
ds
or
cmp
xor
ret
pop
in
mov
or
xchg
push
jne
and
sub
cwtl
and
mov
mov
scas
adc
shl
sbb
out
aam
push
pop
xlat
ret
outsl
ja
adc
jp
in
je
enter
pop
mov
icebp
aad
bound
rorb
repnz
call
or
add
xor
stc
mov
lret
mov
inc
inc
jl
outsl
mov
lret
fnstenv
xchg
adc
lret
mov
pop
and
jmp
xchg
mov
push
sti
mov
mov
cmp
testb
pop
pusha
leave
inc
stc
jns
jb
xchg
es
in
xor
lds
cs
imul
mov
push
int3
sbb
ret
jnp
bound
pop
clc
bound
inc
mov
test
cli
dec
xchg
je
jo
adc
xchg
outsl
pusha
inc
xchg
icebp
sub
mov
push
fnstsw
inc
stos
leave
xchg
call
push
pusha
jnp
icebp
and
inc
cmp
xlat
mov
inc
fiadds
dec
std
in
add
insb
lds
psubusw
xor
ljmp
test
loopne
popa
xchg
into
mov
xchg
xchg
loope
imul
int3
sbb
insl
pop
fdivr
sub
in
ds
mov
jg
xor
pop
cli
sbb
dec
adc
adc
dec
lretw
cmp
pop
not
inc
cmc
jns
xor
popf
mov
push
call
sbb
rep
mov
add
push
jle
jmp
sbb
cmpsl
aaa
sub
mov
adc
sbb
out
nop
jecxz
and
and
cwtl
aas
std
push
std
popa
cld
aaa
out
mov
push
es
ret
mov
jbe
jne
jecxz
mov
adc
lea
addr16
sub
dec
in
cmp
pusha
ret
out
xlat
xor
sub
pop
inc
xor
xor
xchg
sbb
mov
push
inc
test
xchg
cmpsl
lods
mov
jo
addr16
mov
push
cmp
cmp
jnp
cmp
int3
lret
je
push
xor
popa
loope
add
and
in
and
push
clc
pusha
fiaddl
cwtl
dec
mov
leave
dec
sti
push
mov
hlt
pop
jmp
push
cmp
ret
adc
and
aam
nop
subl
xor
mov
inc
pusha
gs
mov
xor
mov
push
popa
mov
mov
cltd
aas
xchg
jg
shr
int3
cltd
pop
dec
test
aas
mov
ss
push
or
push
sub
mov
xchg
xchg
push
pop
mov
shll
pop
lods
dec
lahf
mov
rolb
out
push
out
test
cmp
xchg
ficompl
test
xlat
xor
inc
mov
sub
pushl
shrb
aad
dec
dec
add
adc
and
dec
data16
iret
add
lock
dec
jne
sub
movsl
stc
dec
add
dec
sarb
pop
pop
call
shll
jno
or
or
inc
lds
push
int
mov
lret
lcall
sbb
nop
inc
mov
pop
icebp
mov
sti
sub
in
sub
xor
std
andl
icebp
hlt
ret
cs
repz
enter
mov
jae
cwtl
aam
stos
inc
jns
mov
mov
jae
xorl
pop
sbb
xchg
dec
lcall
popa
test
in
ljmp
cld
iret
lods
fstpt
xor
mov
repz
loop
push
fwait
popf
movl
sbb
or
dec
lock
div
cs
leave
iret
adc
push
inc
xchg
xor
cli
fwait
cmpb
sub
stc
cltd
outsb
outsb
stos
mov
in
xchg
stos
stos
jne
push
xor
hlt
outsl
add
aas
lahf
push
cs
xor
inc
lahf
insl
mov
push
and
ljmp
or
and
dec
in
inc
xchg
jnp
test
sbb
push
ret
mov
imull
mov
js
out
jl
push
sub
or
sub
cmp
jecxz
sub
clc
imull
xor
aas
pop
addl
aad
popa
push
or
movsl
cmp
mov
in
xchg
jns
pushf
sbb
mov
imulb
nop
dec
int3
and
enter
mov
repnz
stc
aas
xchg
mov
aam
icebp
push
aam
frstpm(287
pushl
sub
adc
jns
iret
inc
xlat
int3
outsw
test
mov
mov
ljmp
cmpsb
fsubp
lock
sbb
fstpt
push
pop
dec
mov
mov
dec
inc
dec
cmp
mov
out
mov
scas
das
bt
jecxz
cli
scas
insb
inc
cld
cmp
jo
or
or
cmc
rcrl
icebp
xor
push
dec
jecxz
mov
nop
jno
inc
add
inc
in
shlb
gs
xchg
sub
mov
loopne
pop
cli
out
push
or
movsl
punpckhbw
mov
das
data16
inc
lret
cmp
xchg
and
test
fstp
shll
aaa
xlat
bound
xchg
sub
mov
test
fdivrl
loop
mov
jp
ss
inc
stc
push
mov
aad
shrb
sub
insl
pop
shrl
imulb
insl
pop
stc
test
inc
sbb
mov
adc
add
cld
ds
repz
dec
loope
jp
dec
fildll
sbb
ds
adc
lea
inc
push
mov
sti
gs
stos
push
cld
jnp
xchg
vunpcklps
pop
sahf
hlt
aad
insb
nop/reserved
inc
sbb
add
decl
rcrb
xchg
in
xlat
repz
xor
in
inc
loop
xor
xor
je
adc
loop
inc
sub
jp
ds
dec
mov
and
mov
inc
mov
jg
icebp
lods
xor
jnp
pop
push
cmpsl
jns
cwtl
outsb
insl
add
cld
pop
cs
and
pop
leave
call
and
mov
mov
xor
ret
pop
push
fucomi
subl
cmp
daa
jbe
daa
stc
add
cmpsl
or
mulb
jmp
mov
aaa
in
das
mov
inc
lahf
std
xchg
cs
movsb
dec
je
xchg
push
and
arpl
mov
mov
movsl
push
shrb
hlt
stos
jb
sbb
cmp
lret
jnp
in
es
mov
test
shl
std
fldenv
lods
scas
and
rcr
movsl
pop
sub
and
mov
sub
subl
adc
ret
movsb
xchg
xchg
out
xchg
loop
sbb
dec
mov
pop
lods
cmp
stos
add
into
pusha
mov
stos
mov
mov
stos
hlt
ja
xor
icebp
les
sbb
inc
cmp
pop
xchg
inc
fcompl
push
enter
std
cltd
loope
jnp
add
mov
mov
in
test
mov
xchg
and
out
scas
inc
insb
inc
adc
outsl
pushf
imul
aas
inc
jbe
jge
mulb
mov
je
imulb
pop
ja
std
into
sub
jp
out
ret
fidivl
ret
aam
adc
ret
or
xchg
dec
lret
stos
jge
inc
pop
pop
add
mov
repnz
and
or
xor
fistps
jb
aad
cmp
xorb
in
lret
test
scas
fwait
cmp
in
adc
pop
es
push
mov
pop
js
sti
repnz
sub
ret
xchg
subb
out
mov
xor
sbb
and
fisttpl
ljmp
xchg
orb
xor
jno
adc
insl
lock
int3
loopne
int3
adc
mov
pop
adc
aad
fistpll
lcall
pop
push
outsl
popf
sbb
or
call
mov
in
inc
fwait
int3
mov
ror
fbstp
cmp
mov
repnz
sub
ds
mov
ja
xor
pushf
roll
dec
andb
lret
mov
icebp
out
test
and
gs
adc
push
fsubs
cmp
movsl
jecxz
testb
icebp
call
int3
imulb
arpl
lock
lret
dec
or
xchg
rol
sub
pop
fmul
rclb
adc
fstpl
sbb
sub
sarl
jle
mov
inc
aam
inc
add
xor
lret
or
call
test
mov
and
adc
jns
dec
push
std
mov
insl
lock
sub
je
data16
sbb
imul
in
adc
cmp
adc
and
jl
sbbl
scas
enter
enter
test
mov
lock
lea
stos
sbb
fs
lret
stos
popf
out
test
frstor
mov
sbb
ja
sbb
imul
jno
xchg
into
push
mov
sbb
mov
mov
xor
pop
lcall
in
push
ljmp
fcmove
aaa
sub
test
out
roll
sbb
xchg
pop
add
pop
stc
lea
xlat
pop
dec
pop
add
xchg
stos
in
or
jp
pop
lcall
shlb
jmp
icebp
ljmp
xor
mov
loop
add
out
jg
xchg
xchg
das
lcall
ret
movsb
sbbb
aad
xor
inc
es
popa
xchg
pop
mov
mov
out
or
stmxcsr
bound
push
xchg
cmp
xor
sahf
adc
push
insl
pop
sub
sbbl
mov
xlat
push
inc
fmuls
test
icebp
mov
out
bound
add
popa
lahf
xor
repnz
push
mov
rorl
or
jb
cmpsb
mov
mov
test
xor
insl
fistps
aam
std
pop
jge
in
jo
ja
aas
xchg
lods
mov
addr16
scas
movsb
adc
ficompl
dec
aaa
push
fucom
orl
insb
ja
cli
fwait
cmp
add
sub
push
jne
mov
xchg
and
fisubs
sbb
int
js
push
icebp
enter
lret
pop
push
enter
icebp
jg
out
clts
repz
pushf
pop
dec
xlat
sub
imul
pop
inc
mov
lds
icebp
lret
daa
dec
mov
outsl
push
aas
adc
xor
and
xchg
mov
xor
and
pop
lods
mov
ss
sub
mov
cmp
cs
jp
cmpsl
pop
inc
xor
movsl
fildl
inc
xchg
imulb
pop
mov
xchg
lcall
movsb
xchg
mov
push
out
bound
movsl
movsb
fmul
dec
lret
sbb
dec
sti
ljmp
aad
leave
addr16
pusha
push
adc
ret
insl
insb
ljmp
orl
ret
repnz
popa
mov
leave
and
push
daa
jnp
push
xchg
repz
icebp
add
cmovbe
jb
adc
mov
push
pop
mov
xchg
test
iret
std
mov
cmp
jne
push
xchg
sbb
hlt
mov
std
mov
subl
cmp
xor
adc
aad
inc
js
jbe
das
ss
dec
gs
mov
cmpsl
mov
xor
jl
cltd
sub
push
adcb
push
push
jge
and
orb
mov
mov
jnp
inc
dec
flds
lcall
test
dec
cmp
pushl
mov
imul
outsb
adc
in
sti
inc
aam
out
stos
push
dec
test
inc
int
or
rep
arpl
mov
push
les
dec
or
daa
sqrtps
dec
sub
pop
out
or
es
push
dec
fidivl
mov
cld
jb
or
xlat
xchg
ljmp
lds
sub
mov
push
pop
sbb
push
es
fndisi(8087
adc
mov
xchg
pop
lea
add
shrl
push
push
filds
pop
jns
xor
cmp
jns
pop
dec
cli
scas
andb
mov
or
in
and
cmp
inc
hlt
in
adc
cmp
inc
je
xchg
aam
cltd
sub
pop
sbb
insb
inc
cmp
mov
adc
mov
dec
scas
mov
sarb
dec
int
jb
and
xchg
filds
cli
cmpsl
mov
sub
in
jns
inc
clc
push
fisubrl
adc
popf
xor
test
jno
clc
mov
in
mov
cmp
jbe
stos
or
pop
mov
push
jae
cmp
mov
inc
in
loopne
sbb
xlat
jbe
sbb
test
dec
ds
or
loopne
mov
cmp
adc
xchg
iret
and
dec
cmp
andb
xchg
sbb
dec
shll
pop
shll
filds
pop
mov
mov
and
popf
xchg
xor
inc
xor
dec
sbb
xor
leave
cld
sarl
adc
outsb
imul
inc
loop
xchg
cmp
xor
fsubrp
mov
sub
daa
lock
sbb
xchg
push
cmc
mov
and
cmp
sub
pop
dec
inc
shlb
imul
fdivrs
popf
jmp
xor
incl
mov
push
stc
fimull
aaa
outsl
adc
filds
fnstenv
stos
dec
add
lock
ret
cmp
mov
lea
les
cmpsb
xchg
mov
loope
inc
push
cwtl
xchg
clc
inc
test
mov
xor
xchg
and
cwtl
xor
xchg
shlb
push
ret
stc
pop
and
cmc
insl
jmp
in
dec
pop
mov
pusha
call
pop
inc
mov
cli
dec
mov
mov
cltd
mov
sti
int3
out
xchg
je
push
sbbb
xor
movsb
aas
sbb
adc
out
adc
push
pop
pusha
fsubl
jno
shl
mov
in
add
jg
jecxz
add
imul
out
add
sahf
push
add
pusha
jp
add
repz
mov
adc
loopne
in
or
clc
out
and
outsb
ja
das
mov
mov
insb
ja
jne
inc
ljmp
xor
add
iret
xchg
inc
mov
das
cmpl
dec
clc
orl
jb
jmp
mov
sbb
inc
stc
or
hlt
mov
pop
sbb
mov
xchg
push
mov
mov
enter
movsl
popf
call
lods
sarb
adc
inc
test
xorb
clc
sahf
popa
sub
dec
inc
push
mov
daa
pushf
test
mov
mov
push
xor
aaa
sub
dec
insb
mov
nop
pop
test
mov
dec
pop
hlt
mov
lahf
push
mov
cmpsb
outsb
mov
js
hlt
jl
and
dec
mov
shrl
rcl
jl
add
add
lods
mov
lcall
aas
ds
sbbl
mov
in
pop
xchg
push
and
jmp
push
pop
jg
aas
fstp
xor
fnstenv
mulb
jo
test
add
or
pop
aad
repnz
sub
into
cmc
xor
lcall
xor
or
pop
mov
icebp
cmp
sbb
addb
xchg
out
sarl
loope
into
push
getsec
mov
les
ret
fistpll
stos
push
popf
fildl
cld
test
scas
jne
dec
add
sbbl
mov
xchg
shrl
imul
stc
sub
jp
inc
ljmp
dec
push
adc
movsl
arpl
adc
fldcw
dec
test
xor
pushf
add
xor
and
popa
mov
sbb
pop
and
fsubrl
lods
inc
in
adc
lahf
adc
fidivl
andb
stos
loopne
mov
imul
dec
test
or
icebp
faddl
jns
inc
div
cltd
dec
fisubl
mov
dec
mov
mov
rcl
je
jle
je
aam
mov
inc
or
jne
xchg
pop
xor
jne
lret
lcall
js
mulps
shrl
mov
dec
and
mov
fidivl
clc
pop
jbe
and
sarb
rep
outsl
test
out
mov
repz
xor
jne
inc
jno
je
stc
call
add
dec
pop
xor
cmp
cmc
aad
pop
gs
pop
shll
dec
fcoml
insl
inc
xchg
inc
sbb
enter
fildl
inc
and
cmc
imul
cmp
adc
inc
and
mov
popf
test
addl
push
daa
inc
jno
mov
ss
sub
test
mov
jb,pt
cmp
mov
in
xor
and
loop
fldl
ret
push
lcall
popf
xor
lahf
insb
jns
vpshufhw
fdivrs
scas
hlt
ds
cmc
lahf
and
mov
movl
or
xchg
jecxz
ss
inc
push
test
sbb
mov
jmp
xor
insb
mov
jno
pushf
or
stos
stos
xchg
sbb
jne
and
push
fwait
ds
or
bound
inc
ret
clc
std
shl
inc
push
xchg
cld
pop
cmpsb
pop
mov
mov
aas
int3
out
jno
xor
and
push
int3
pop
push
insb
jge
dec
test
shlb
clc
ljmp
inc
xchg
xchg
arpl
dec
pop
aas
sahf
daa
in
add
fstps
clc
gs
adc
in
clc
mov
dec
ds
dec
adc
add
dec
mull
mov
lock
gs
sti
push
in
xchg
and
mov
test
icebp
mov
mov
std
and
sahf
mov
cmp
xchg
cmpb
fcoms
mov
push
test
lret
xlat
lahf
xchg
mov
inc
sub
xchg
pop
adc
mov
add
and
cmpb
iret
pop
and
loope
adc
rcrb
mov
and
jne
push
int
dec
sbb
mov
mov
sahf
adc
test
std
lcall
in
push
int
movsb
push
addr16
or
insb
mov
clc
sbbb
push
dec
mov
push
and
ret
pop
sbb
xor
jmp
jne
js
push
pop
movl
dec
xlat
faddp
adcl
ljmp
cli
insl
xchg
sbb
mov
sub
inc
mov
push
xchg
fcmovb
xor
jecxz
dec
out
and
push
in
aaa
mov
mov
sub
jnp
outsl
or
movzwl
xor
push
std
mov
in
fimuls
mov
lds
lret
xchg
mov
out
sar
mov
xchg
or
adc
mov
sub
push
fldl
call
lds
sub
jp
push
add
cmpsl
inc
pop
out
cld
cmp
sti
push
rorb
dec
pusha
mov
repz
shrb
cmp
lret
int
pop
adc
fdivr
mov
jecxz
das
cmpsb
jns
aam
pop
cmp
cmp
and
leave
pusha
into
and
cmpsl
flds
xchg
mov
mov
mov
aas
jno
mov
or
out
dec
xlat
sub
fsub
repnz
js
fwait
out
enter
lods
cli
inc
pop
addr16
add
push
jbe
push
add
popf
cmp
mov
movsb
xlat
insl
xor
push
sbb
repz
pop
sahf
decl
loope
pop
aam
out
push
jl
loope
jbe
sbb
push
loopne
jg
jg
adc
adc
add
pop
pop
dec
andb
jnp
cmp
xsavec
dec
pop
add
pop
fsubs
leave
outsb
or
xchg
lods
scas
test
decb
out
popf
std
in
push
inc
adc
adc
out
repnz
jle
inc
addr16
fdivl
in
mov
mov
mov
mov
add
cltd
push
aas
cltd
cwtl
imul
imul
out
popf
aad
mov
xor
fisubrl
pushf
push
iret
jp
subl
fcoml
ret
push
mov
dec
gs
or
sub
int
mov
int3
hlt
jmp
xchg
adc
dec
pop
jns
clc
mov
cmp
mov
pop
add
data16
movsb
aaa
test
jno
cmp
in
xor
sbb
pop
cmp
clc
push
xchg
xor
or
mov
cli
dec
mov
popa
rcll
and
sbb
icebp
mov
std
shl
cli
jne
shll
adc
inc
sbb
add
hlt
fcoml
jno
sbb
pop
into
insl
dec
gs
adc
ss
pop
push
mov
mov
mov
xor
push
sub
xor
sbb
and
mov
xorl
pop
xchg
add
stc
call
mov
sub
test
sbb
dec
push
pop
dec
leave
jle
hlt
dec
pop
mov
dec
mov
repz
pop
add
jge
dec
lods
inc
std
scas
test
sub
rclb
sbb
jo
mov
mov
lcall
push
pop
sbb
out
mov
int
sarb
int3
mov
imul
in
loop
mov
stos
pushf
mov
adc
jg
arpl
adc
repnz
imul
xchg
int3
mov
sub
mov
hlt
dec
test
pusha
movsb
xchg
mov
enter
and
push
sahf
sarb
push
xor
aad
push
sub
in
into
rolb
ja
xor
sti
cmp
cmp
aaa
mov
inc
imul
imul
je
xor
push
sub
scas
push
or
scas
imul
cmp
push
das
pop
icebp
bound
invd
push
or
sub
xor
sbb
cmp
es
pop
rcrb
in
pushf
jae
lods
or
or
adc
push
scas
jno
lods
sub
clc
ficoms
push
mov
fcmovbe
adc
out
mov
out
fidivrl
fbld
movsb
or
gs
dec
popa
les
push
mov
push
cmp
arpl
dec
js
inc
mov
hlt
inc
dec
push
daa
or
push
xchg
jo
incl
out
in
jmp
mov
push
aaa
pop
jl
dec
pop
mov
sahf
or
daa
jmp
sbb
mov
and
sbb
add
imul
xchg
xor
mov
cmpsb
mov
push
jb
mov
lret
or
nop
pop
xchg
sub
sbb
mov
mov
iret
push
and
mov
data16
loopne
sahf
rolb
dec
in
jnp
ucomiss
dec
xchg
jns
loope
xor
and
push
test
lcall
outsb
cmp
adc
and
aam
jns
push
fdivr
adc
jle
xchg
lds
dec
mov
sub
adc
push
inc
dec
shlb
jg
dec
dec
icebp
int
dec
or
xchg
daa
test
jbe
dec
and
jae
xchg
fnstenv
inc
lods
sub
push
adc
jbe
mov
sbb
push
mov
mov
xchg
test
dec
jmp
adc
mov
mov
sti
and
add
jge
mov
sbb
std
idiv
lcall
jbe
outsl
neg
xlat
mov
inc
mov
ss
inc
and
mov
adc
js
leave
mul
je
jns
push
xchg
loope
cmp
dec
cld
lock
mov
sbb
xor
jg
sbb
mov
gs
test
cmp
mov
jo
enter
int3
cmp
call
cld
xor
aas
test
pop
inc
imul
cmc
incl
call
orl
sbb
test
inc
sarb
cmc
jp
or
insb
fildl
stos
xchg
es
fcoms
dec
xchg
lods
loop
pop
mov
test
adc
enter
xor
std
enter
mov
rolb
and
mov
xchg
movsl
jg
in
xchg
loop
dec
dec
jmp
js
mov
fldenv
notb
mov
fs
pop
push
dec
pop
dec
cwtl
adc
pop
fistpl
iret
lahf
add
mov
mov
push
or
scas
adc
iret
call
sub
cmp
mov
or
add
mov
mov
and
or
enter
fbstp
ja
xor
adc
jg
iret
hlt
arpl
xchg
je
pop
in
or
iret
adc
fadds
out
hlt
xchg
imul
out
les
clc
push
pop
gs
pushf
push
pop
adc
addr16
mov
pop
adc
fnstcw
push
mov
xor
call
repnz
sub
pop
enter
outsb
fimull
into
jo
mov
push
cmpl
test
aaa
xchg
xchg
stos
call
iret
mov
addr16
pop
sub
push
push
cmpsb
jo
push
mov
and
aaa
push
pushf
lahf
xchg
push
daa
aas
rcrb
stos
fisubl
lcall
in
aad
sti
pop
leave
fnstsw
outsb
pop
push
or
andb
in
xor
push
pop
pop
dec
sbb
negl
jno
stos
push
pop
ss
negl
dec
cmp
sbb
cltd
add
imul
push
leave
cli
mov
sti
mov
inc
rol
sbb
fcoms
repnz
xor
jo
popa
nop
sbb
call
in
mov
out
dec
adc
sbb
rcl
lods
dec
mov
ja
pop
popl
jb
gs
je
sub
orl
inc
pop
idivb
cld
insb
decl
mov
adc
repnz
mov
mov
add
shl
xor
stos
sub
sub
sbb
push
push
lcall
bound
mov
push
pop
mov
fsubl
mov
out
lea
add
pushl
int3
je
insl
lret
in
xchg
in
adc
stc
mov
cli
int
mov
xor
gs
mov
daa
nop
mov
iret
ljmp
cwtl
inc
or
mov
stos
push
push
sub
enter
testb
xchg
jmp
sub
mov
js
lret
cmp
and
mov
pop
loopne
leave
shll
push
add
repz
add
pop
push
or
xchg
mov
ljmp
mov
in
sub
aaa
lret
pop
rcr
das
mov
xchg
frstor
xor
lret
dec
ja
rcrb
aaa
xchg
xor
hlt
sbbl
xchg
adc
leave
inc
pop
or
lea
xorl
jecxz
ror
dec
fistpl
out
jae
repz
adc
jbe
add
fcmovnb
and
mov
adc
xchg
in
insb
jns
loope
push
mov
insl
pop
jnp
cs
sbb
push
cmp
cmp
xor
lahf
and
inc
mov
call
add
push
ficomps
enter
jns
in
cld
jmp
jae
popa
cmp
xchg
cmp
scas
jbe
cmp
sub
sbb
inc
jp
sub
pop
int
sbb
xchg
push
test
mov
aam
and
fcmovne
xlat
inc
enter
inc
out
inc
test
sub
pop
mov
dec
aad
mov
jp
mov
ljmp
inc
push
inc
adc
adc
mov
xchg
sbb
mov
stc
mov
cmp
pushf
cwtl
jb
xlat
rcrl
sbb
test
xchg
jg
xchg
fmul
push
fidivrl
dec
pop
imul
mov
test
js
rclb
pop
dec
jnp
ret
int3
popa
je
aad
jne
or
adc
stos
int
xor
inc
test
push
jae
pop
pop
inc
adc
dec
es
inc
mov
lock
loope
int3
test
xchg
stos
insl
push
sbb
mov
popa
mov
mov
frndint
cmp
dec
mov
fdivl
inc
stc
fildl
dec
test
stos
mov
shrl
das
mov
mov
xchg
inc
xchg
cmp
mov
insb
xchg
jno
rorb
loope
xor
pop
cmp
and
lret
int3
in
xchg
ffreep
iret
jo
repnz
stos
pop
pop
into
lcall
sbb
push
roll
inc
and
pop
xor
mov
push
lcall
fs
cmp
addr16
push
adc
in
mov
in
loope
adc
subb
push
les
aas
mov
adc
scas
xor
add
pop
jns
jge
cmpsb
mov
pop
mov
jno
aas
mov
hlt
inc
imul
inc
stc
cmp
lock
mov
scas
out
or
gs
cli
sbb
sbb
dec
movsl
fldenv
stc
or
daa
mulb
xor
jmp
ljmp
stos
pop
push
sbb
adc
dec
je
jmp
daa
sbbl
pop
clc
mov
add
pop
mov
lret
fcom
data16
pop
mov
sbb
pminub
mov
dec
cmp
lds
adcb
enter
mov
push
cmp
xor
pushf
incb
movsb
lods
xor
adc
bound
mov
xchg
xlat
push
aas
add
mov
pop
in
in
xchg
inc
roll
xor
push
fcomps
cmpsb
jmp
mov
cld
push
push
pop
rclb
mov
mov
push
add
popf
cmpsl
dec
jno
enter
sub
mov
xor
and
fwait
pop
ljmp
dec
xchg
dec
popf
mov
mov
in
loopne
ds
mov
cltd
nop
daa
in
lcall
cwtl
lahf
mov
scas
mov
xor
or
adc
enter
mov
imul
insb
adcl
pop
push
mov
mov
cltd
push
jno
inc
xchg
sub
sub
nop
fsts
incl
and
les
add
add
or
lock
arpl
and
adc
sub
daa
jmp
or
clc
adc
imul
pushl
inc
xor
inc
jmp
pop
add
xchg
outsl
rcll
icebp
int
shrb
push
and
cmp
mov
js
mov
xchg
add
stos
jbe
rolb
in
jg
inc
rclb
das
mov
mov
cmp
mov
jmp
pop
loop
dec
lods
cli
push
lea
jp
sbb
sub
xor
mov
cld
push
mov
pop
bound
int
sub
aaa
ret
jae
jne
leave
nopl
jbe
scas
std
lock
mov
cli
in
xor
adc
xor
adc
adc
inc
pop
aas
push
je
jmp
imul
push
mov
mov
fistl
inc
adc
push
in
lods
mov
mov
int
mov
inc
pop
shlb
dec
sub
sti
cwtl
fwait
cwtl
loopne
scas
sub
dec
or
mov
sarl
push
int
xchg
int3
pop
lods
dec
iret
lea
and
mov
adc
in
cs
aaa
scas
jmp
bound
mov
sub
int
enter
sub
pop
jns
and
es
push
dec
insb
in
dec
and
lds
jb
scas
mov
nop
test
outsb
pop
cmp
lds
frstor
jmp
mov
jl
cmc
lret
xor
jbe
inc
sub
push
inc
dec
inc
ret
dec
mov
cmpsb
std
imul
jge
mov
cmp
pusha
int
add
insl
sub
stc
xor
fwait
xchg
cmc
and
add
xchg
and
xor
pop
popf
loop
cmpsb
sub
mov
xchg
dec
loopne
adc
inc
jo
xor
into
data16
pop
vcvtps2ph
xchg
fidivs
mov
mov
or
mov
mov
lret
or
lea
push
scas
outsl
cmc
fs
mov
adc
sub
inc
pop
js
mov
lret
push
sbb
mov
dec
std
push
pop
xchg
push
sbb
pop
aaa
mov
inc
loopne
xchg
les
push
nop
or
pop
test
cs
mov
cmpsb
stc
in
flds
push
loop
mov
andl
je
jmp
adc
xchg
jmp
mov
jge
ud1
insb
add
add
dec
test
loopne
and
imul
adcl
aad
sub
dec
jae
sub
xchg
mov
pop
pop
leave
push
cli
in
push
or
lods
add
jns
mov
das
lahf
xorb
rcrb
stos
out
mov
xor
add
scas
jg
cmp
negb
icebp
sti
inc
or
push
and
test
fsts
push
mov
fabs
test
pop
mov
or
int
mov
jbe
outsl
xor
mov
je
jg
cmp
fimuls
add
xchg
mov
pop
inc
ljmp
mov
lret
adc
or
js
shrl
sub
mov
dec
push
jl
jb
pop
ret
movsl
cmpsl
mov
pop
mov
mov
stos
and
cmp
bound
shlb
sub
cmp
imul
sub
ja
repz
cltd
rcl
mov
bound
pop
dec
xor
or
push
nop
jno
xor
push
xchg
shr
xor
fsubs
add
jne
fnstsw
es
pop
incb
push
jg
mov
pop
push
arpl
jb
dec
pop
ljmp
jle
or
inc
icebp
mov
cmp
xchg
sti
push
lea
push
popf
ret
call
mov
xchg
insl
jae
jo
lods
inc
lods
pushw
iret
mov
cs
mov
or
ret
xchg
lods
int3
dec
in
mov
out
pop
arpl
ret
adc
jo
jbe
inc
push
push
inc
cmpsl
scas
shlb
cmc
pop
inc
inc
adc
add
pop
popf
add
pop
lahf
and
ret
inc
fs
sbb
ja
fisttpl
fs
xchg
add
push
shll
adc
adc
jp
adc
inc
test
jnp
icebp
jecxz
xchg
sub
hlt
int
in
dec
outsl
in
ret
xchg
test
mov
fcompl
pushf
movsl
dec
inc
jmp
ljmp
cmp
movsb
add
add
decl
push
xchg
fstpl
fwait
sbb
add
out
pop
aaa
ja
lret
enter
mov
ficoms
addr16
mov
dec
xchg
cmp
lods
rcl
dec
mov
lahf
lock
jp
or
in
mov
scas
data16
push
imul
add
lds
jge
mov
cmpsb
mov
pop
add
fwait
xchg
lea
lahf
icebp
jnp
cmp
cmp
cmp
imul
ljmp
push
movsl
adc
cwtl
sub
or
mov
lahf
andb
gs
adc
sbb
js
push
pushf
out
cmp
adc
sub
add
lret
ficomps
out
xacquire
mov
xchg
rorl
lods
pop
mov
pop
push
mov
ficomps
gs
sbb
jne
cwtl
cmpsl
popa
fisubrl
mov
fstpl
xchg
jnp
bound
in
adc
mov
call
andl
ret
add
jp
fwait
ja
inc
inc
mov
inc
movsl
mov
push
sub
inc
push
pop
xchg
lahf
mov
mov
or
xor
sahf
fildll
sub
leave
add
data16
xor
repz
mov
rcrb
sbb
mov
pop
loope
jg
insl
jns
mov
in
out
lahf
push
pop
cld
bound
and
xchg
lcall
out
out
fwait
jmp
mov
popa
inc
or
js
push
ljmp
das
addr16
xchg
inc
jmp
out
push
lea
adc
popa
vpmaskmovq
pop
test
ss
jo
out
sbb
movsb
mov
aad
mov
mov
dec
out
mov
aad
nop
popa
adc
cmp
cmpsl
fistpl
jecxz
cltd
icebp
mov
xchg
and
jecxz
pop
jns
insl
jmp
in
inc
fcompl
hlt
dec
insl
imul
mov
data16
es
sub
scas
out
cmpsb
dec
jns
cmpsl
sti
insl
int
pop
test
ss
iret
mov
ljmp
mov
dec
mov
fwait
mov
test
sub
sub
add
fiaddl
mov
lret
xchg
jns
mov
dec
inc
leave
lock
fisttpll
add
lods
cwtl
push
mov
ds
loopne
lods
mov
jg
sub
sar
sti
punpcklbw
fsubr
lea
pop
rclb
ljmp
movsl
fiaddl
mov
into
or
mov
lds
sahf
dec
in
pop
pop
mov
lcall
pop
jmp
inc
inc
movsb
rolb
arpl
lock
fwait
or
inc
sbb
push
cmpsb
inc
shr
push
jne
js
cld
dec
add
fdivrl
and
mov
icebp
mov
jl
sub
dec
popa
inc
and
push
je
popf
wbinvd
or
xor
jnp
std
push
repz
in
xchg
dec
out
xor
dec
cltd
in
push
jp
aad
je
lea
push
test
add
cmp
mul
jmp
cmp
inc
shrl
cmpsb
lcall
arpl
jns
xchg
mov
cld
mov
in
fbstp
fwait
mov
xor
daa
out
cmc
mov
adc
movsl
inc
clc
cld
orb
decl
cmpb
test
ret
mov
push
dec
int3
pop
pop
out
cmpl
inc
mov
jle
mov
das
mov
loop
cmp
lods
add
fprem
xor
aam
xchg
daa
pop
sti
sbb
cmp
addr16
xchg
push
jns
mov
sub
mov
mov
cmc
hlt
mov
in
testb
aaa
daa
add
data16
movsl
push
jo
popl
add
daa
cmp
mov
push
jne
push
pop
dec
ucomiss
divb
adc
or
cmpsl
mov
adc
ds
sub
jge
dec
mov
fisttps
aaa
pop
and
jl
mov
and
and
xor
lcall
cmp
in
out
bound
xchg
jo
ret
sti
lock
icebp
cmp
test
ret
mov
int3
push
popf
in
jge
hlt
fsubrl
mov
daa
cmpsb
scas
cmpsb
and
popa
and
or
outsl
data16
cmp
xchg
push
mov
fcomi
loope
sbbb
jmp
or
popa
or
add
mov
and
arpl
test
repz
loope,pn
aaa
and
jae
adc
sti
mov
popf
push
mov
push
add
test
mov
xchg
int3
xchg
out
sub
pop
xor
scas
pushf
dec
icebp
popa
into
outsb
mov
and
add
inc
cltd
or
adc
sbb
adc
xchg
xchg
loopne
mov
or
fisubrs
xchg
popf
aad
push
shl
and
jne
aaa
outsl
xchg
je
jp
adc
sbb
push
push
pop
sub
aam
shll
repnz
test
inc
sahf
scas
cmpsb
mov
fistl
adc
insl
aad
out
imul
cld
mov
xor
push
mov
dec
and
pop
push
dec
stos
andb
sbb
fldcw
je
cmpb
push
mov
push
stos
ja
lahf
sbb
or
pop
movsb
cltd
pop
push
mov
aam
lods
jae
mov
inc
fistl
js
aas
pusha
push
adc
movsl
lds
sub
int3
in
sub
hlt
mov
shrl
jge
pusha
iret
mov
pop
push
xchg
idivb
xchg
xor
out
and
push
xchg
fidivl
lock
cmc
in
sbb
and
sub
xor
addb
ret
and
push
out
insl
out
inc
mov
out
xchg
jg
xor
and
popa
sbb
adc
or
mov
xchg
into
xchg
sbb
dec
aad
test
movsl
push
mov
mov
fisttpl
xor
in
add
mov
rorb
add
adc
mov
xor
hlt
ret
int3
out
cmp
cmp
push
or
xor
int
and
ret
xchg
shl
push
jp
cmp
or
fs
dec
cli
in
std
sbb
pusha
push
sub
jmp
mov
push
xchg
mov
inc
loopne
ror
dec
aaa
jle
sar
stos
aas
cmp
stos
xchg
jmp
popa
push
std
stc
xor
cmpsl
dec
cld
xchg
mov
sbb
pop
pop
dec
pop
pop
stc
mov
sbb
das
push
sbb
add
jp
sbb
sbb
pop
adc
sub
ljmp
ljmp
mov
mov
fistps
pushf
xor
mov
mov
nop
add
out
sbb
xchg
inc
pop
xchg
sbb
jno
and
js
mov
sti
lret
pop
popa
fcoms
outsb
movsl
ret
push
cltd
pop
mov
jne
mov
jbe
add
movsb
test
adc
cwtl
outsl
jp
ficoms
fcomip
adc
add
lahf
jbe
mov
fdivrp
mov
push
fwait
sti
cltd
ljmp
jmp
jb
setae
cltd
ret
xlat
mov
clc
mov
xor
dec
push
push
je
lret
cltd
cmp
loopne
or
cwtl
inc
push
mov
fstps
mov
push
out
cmpsb
dec
dec
sbb
inc
enter
data16
leave
aam
in
xchg
jne
sbb
les
push
fisttpl
push
pop
ljmp
dec
mov
into
cmp
insb
inc
inc
mov
sahf
xchg
mov
enter
mov
lea
ficompl
scas
pop
movb
pop
popf
sub
mov
lahf
xor
jge
mov
je
icebp
mov
jmp
mov
in
aas
push
cmpsl
jnp
popa
fwait
nop
sbb
cli
arpl
cmpb
mov
jmp
mov
pop
test
push
cmp
lahf
sbb
sub
push
pop
repnz
les
dec
cmpsl
sub
inc
xchg
scas
nop
adc
add
clc
stos
xor
cld
jnp
xchg
jl
lret
inc
sbb
jns
aad
sbb
inc
cmpsl
fstl
dec
sub
xchg
cmp
pop
lret
mov
outsb
push
or
lahf
shlb
imul
mov
iret
add
sti
leave
xchg
scas
jmp
jmp
lods
cmpsl
adc
mov
int3
mov
loopne
jae
imul
pop
mov
mov
add
pop
pusha
int3
sbb
push
xor
pop
push
xchg
out
out
fidivrl
mov
pop
xchg
adc
dec
dec
xor
lods
aaa
test
dec
mov
fdivrl
orl
lcall
pop
dec
inc
loopne
outsl
setge
into
fstpt
mov
stc
out
mov
push
push
add
and
cmp
jge
inc
mov
or
cmp
mov
pop
cmc
test
mov
ljmp
into
inc
mov
jle
jae
jno
or
ds
cmp
addl
rcrb
inc
inc
jne
sbbl
js
sbb
mov
fcmovb
pop
or
push
inc
test
shll
sub
fisubs
paddusw
ljmp
arpl
pop
pop
mov
mov
xor
aam
or
adc
xchg
fwait
insb
cmc
cmp
test
sub
je
rorb
rcl
test
jmp
or
cmp
sub
inc
mov
aad
clc
loopne
mov
xchg
loopne
cmc
xlat
imul
inc
pop
lahf
cmc
cmc
mov
faddp
inc
rcl
add
sub
popf
dec
dec
movsb
pop
sbb
jl
lahf
cmp
adc
daa
ljmp
xchg
neg
add
cmc
int3
xchg
sub
pop
mov
adc
cmp
push
mov
push
push
shlb
lods
push
lcall
fcom
into
cmp
fidivrl
dec
lahf
adc
mov
xchg
push
out
adc
push
aas
iret
and
aad
mov
sarl
jne
dec
jl
push
negb
pop
xor
xor
adc
loop
xor
cmpsl
jp
sbb
mov
jmp
mov
pusha
sub
xchg
dec
xchg
xchg
push
xchg
pop
stc
mov
and
sbb
xor
xchg
add
pop
inc
lret
push
inc
test
xchg
and
push
pop
sub
push
adc
loop
ljmp
jne
cmpsb
int
or
add
push
mov
int3
orl
ja
bound
xor
insl
aas
sbb
out
xor
bound
das
xchg
call
insb
dec
jmp
insl
push
jge
xchg
xchg
je
mov
or
adc
pop
inc
jp
test
in
push
xor
jae
mov
mov
mov
cmp
outsl
jno
mov
test
inc
pop
or
mov
mov
pop
test
cs
scas
gs
mov
mov
sub
std
and
inc
ds
add
mov
push
sub
addr16
cmp
mov
inc
jb
loopne
mov
cltd
mov
or
test
das
dec
fcoms
mov
dec
fwait
sbb
jl
ffreep
pusha
jae
je
push
int
jp
popa
sub
or
fwait
push
pop
pop
mov
mov
push
push
int3
dec
push
dec
jmp
xor
push
mov
adc
and
ret
test
shrl
inc
jle
fstpl
fstpt
sub
dec
mov
jae
xorb
push
sbb
mov
push
xor
jl
xchg
push
sahf
divb
ret
jp
pop
push
dec
mov
sub
mov
cmpsb
mov
popf
pop
push
push
pop
pop
or
push
movsb
insl
sbb
mov
xor
fucom
add
movsb
fisubrl
lods
jae
xchg
push
fwait
jae
mov
out
pop
lock
iret
imul
pop
pop
push
ja
ret
pop
jl
imul
test
mov
xchg
xchg
clc
push
and
enter
push
icebp
pop
in
in
mov
jo
inc
inc
int
mov
cli
cwtl
and
cltd
mov
fstpl
pop
sub
mov
movsl
cmc
mov
xchg
mov
sbb
movsl
in
clc
add
mov
es
aad
xor
into
mov
jae
dec
add
and
cs
pop
cli
mov
pop
call
hlt
cmp
scas
jbe
insl
adc
jl
mov
adc
dec
call
in
imul
nop
jno
les
cmp
xlat
mov
sbb
mov
mov
dec
lds
sub
cmp
jmp
test
movl
adc
out
out
test
push
neg
push
cmc
or
lcall
fdiv
fistpll
sub
mov
push
mov
ficoml
xchg
sar
aam
mov
xchg
bound
cmpsb
shr
dec
daa
ja
js
inc
rorl
pop
sarl
cltd
add
scas
loopne
out
jno
add
sbb
mov
shrl
sbb
js
or
cmp
aaa
shlb
inc
in
inc
push
shlb
or
int
les
sbb
leave
and
hlt
adc
dec
arpl
jp
jge
mov
aam
mov
jl
addr16
sarb
daa
cmc
jae
and
bound
icebp
mov
push
arpl
mov
iret
roll
mov
test
inc
xchg
cmp
mov
and
pushf
stc
ljmp
push
fistps
and
xchg
adc
repz
das
xor
gs
cli
dec
jns
xor
sbb
sbb
push
out
push
testb
sbb
jnp
addr16
xlat
sarl
cltd
bswap
sahf
fcompl
mov
das
adc
je
jb
popf
dec
mov
dec
adc
lret
in
call
test
add
jmp
mov
cli
out
andb
repz
fs
mov
add
frstor
push
mov
inc
mov
pusha
jmp
sbb
jne
cmp
add
adcb
push
pop
addr16
push
gs
subb
les
adc
fwait
mov
pop
inc
cmp
fisubl
cmp
sbb
mov
loop
xor
xor
bound
jnp
bound
push
or
cmp
pop
sub
pop
out
adcl
and
xchg
mov
dec
cli
imul
or
jnp
fistl
inc
mov
sbb
inc
cwtl
icebp
outsl
sbb
sbbl
jbe
push
mov
loopne
push
dec
pop
cltd
cmc
mov
scas
mov
fxam
jg
sbb
sahf
das
adc
sub
pop
cli
cmp
lods
jmp
dec
push
gs
call
inc
in
repnz
push
inc
sti
sahf
pop
jns
movsb
adcb
adc
adc
bound
pop
or
shll
inc
enter
push
insl
add
or
out
cs
inc
xchg
xor
daa
shll
mov
out
xor
jno
xchg
push
insb
cmp
into
int
icebp
jg
mov
popf
xor
enter
cli
push
pop
repz
push
lea
push
rcl
inc
pop
hlt
in
packssdw
mov
mov
mov
fidivs
icebp
push
pop
sahf
ret
add
mov
pop
rep
push
fmuls
mov
pop
push
push
pop
cmp
adc
or
and
jns
ds
data16
call
mov
pop
and
in
mov
stos
ss
sub
mov
fs
cltd
or
xlat
ud0
rclb
mov
inc
lret
sbbl
out
and
outsb
out
sub
fidivs
mov
pop
loope
imull
cmp
repz
and
insb
push
push
jge
ret
dec
test
cmp
lret
insb
sub
jo
fcmovbe
bound
adc
jmp
inc
push
testb
pusha
xor
jecxz
dec
pop
jl
roll
iret
cs
pop
fs
inc
pop
jl
mov
push
pop
cmp
divl
leave
sbb
pop
ja
xchg
sbb
xor
cmpsb
cs
imul
mov
jp
lods
push
jno
dec
sub
add
adc
xor
xchg
out
hlt
sub
dec
push
cltd
jb
dec
es
mov
or
stos
mov
cmpsl
and
pop
add
add
xor
sbb
pusha
xchg
mov
popf
rcl
push
push
sbb
add
or
sub
adc
dec
pop
xchg
mov
add
and
fcmovne
jb
pusha
mov
sti
out
insl
xchg
into
or
ja
mov
pusha
in
ljmp
sarl
lods
lcall
jbe
cmp
jmp
xor
xorl
out
jl
ljmp
sbb
shlb
daa
mov
fdivr
sub
xchg
mov
mov
hlt
ljmp
cmp
mov
xchg
test
push
jmp
mov
ds
popa
insb
sub
popa
fwait
jb
mov
jbe
popf
outsl
aad
ljmp
sbb
and
push
mov
push
mov
enter
rclb
cmp
or
mov
loopne
incb
mov
inc
out
out
mov
test
dec
jge
fs
add
sbb
test
jge
cmpsl
stos
or
cmp
hlt
lcall
mov
sbb
adc
inc
call
mov
mov
in
xchg
jle
imul
mov
lock
fwait
jne
xchg
sbb
or
adc
sahf
sahf
stos
inc
jmp
jmp
push
xor
roll
leave
push
test
or
pop
pop
jp
jecxz
sub
sub
jb
clc
cmp
sbb
mov
jl
jecxz
sub
rcr
lea
jmp
dec
int
cmp
faddl
push
or
mov
popa
lock
add
daa
push
mov
jns
es
pop
lock
out
daa
cltd
mov
std
cli
xchg
dec
mov
in
mov
das
divl
mov
ss
mov
mov
mov
cld
sub
in
orl
xchg
aas
xchg
push
imul
push
xchg
pop
push
ds
push
xchg
push
and
lahf
stos
inc
pop
jne
in
cmpl
aad
pop
clc
xchg
andb
inc
inc
dec
fstpt
lods
dec
in
and
or
fistpl
mov
pushw
ss
mov
ret
imul
dec
dec
in
pcmpgtw
xor
je
sahf
cmp
aad
mov
scas
sub
arpl
aad
into
dec
repnz
push
xchg
xor
cwtl
jb
mov
inc
jmp
mov
stc
cmp
in
add
shrb
sahf
cmc
bound
inc
dec
lods
iret
sti
sub
je
jp
mov
inc
test
jle
xchg
fnsave
mov
arpl
fdiv
pop
xor
cltd
pusha
ret
pop
sti
mov
or
dec
push
lret
leave
add
mov
aam
sbb
mov
lods
or
mov
dec
pop
jmp
inc
dec
pop
out
fwait
or
mov
sbb
cmpsb
sarl
pushf
dec
pop
sbb
enter
cmp
push
push
cld
sbb
mov
inc
or
aam
mov
or
lods
ja
push
and
in
jl
push
mov
jmp
cmpsb
daa
add
jbe
push
repnz
sub
push
and
loope
xchg
sub
in
cmpsb
xor
jg
mov
pop
inc
iret
xor
mov
pop
adc
push
push
mov
xchg
push
shll
aas
cmp
ds
leave
out
popf
jecxz
cmp
enter
aaa
iret
jl
in
pop
adc
iret
and
or
hlt
mov
cmpb
outsl
scas
push
jl
leave
jl
out
mov
xlat
inc
sbb
or
cmp
js
test
ljmp
push
and
mov
stos
mov
mov
pusha
adc
out
ljmp
inc
sub
andb
adc
aad
out
jbe
mov
mov
pop
push
repnz
sub
lret
icebp
mov
sub
pop
aad
inc
cmp
rcll
in
loope
jp
jnp
and
mov
imul
out
lahf
cli
mov
fdivrl
xchg
lds
addb
sti
sub
testl
mov
mov
cwtl
in
xor
and
dec
add
xlat
mov
push
jge
sub
daa
hlt
mov
or
sub
jns
sbb
or
adc
pusha
shll
mov
icebp
fsubrl
jnp
dec
push
lods
ret
mov
push
out
xchg
cmp
in
jg
popf
xorb
mov
adc
jl
les
or
mov
inc
aam
and
adc
test
or
js
movsb
rcrl
shrl
pop
sbb
in
sbb
sbbl
imul
xchg
std
dec
lods
mov
pop
push
dec
fidivrl
outsl
sub
adc
cltd
dec
mov
imul
mov
lods
mov
dec
jbe
push
fstl
cmp
bound
and
fcomi
outsl
xor
push
adc
cmc
pop
rolb
mov
and
add
xchg
mov
jmp
inc
lock
outsl
incb
jns
pop
or
ret
bound
leave
scas
lret
push
sbbl
cltd
inc
fcmove
add
in
cmp
xchg
pop
or
fisubl
sub
xchg
add
dec
fimull
xor
mov
rcrb
lods
fwait
add
push
loope
inc
insl
aam
lcall
jl
ds
jae
adc
mov
aas
enter
mov
push
adc
mov
in
stc
jl
pushf
push
push
cmp
pop
xlat
cmp
pop
aas
mov
loopne
push
jae
out
pop
ja
fabs
xlat
insl
and
pop
rorl
inc
push
push
mov
movsl
jg
dec
push
lret
or
into
data16
icebp
mov
adc
inc
xor
xchg
ss
push
lea
loopne
mov
js
add
ljmp
clc
push
jmp
rcll
jns
lahf
sbb
aas
fildl
shlb
push
int3
out
mov
loop
mov
outsl
inc
mov
cmp
sbb
mov
sarb
push
sub
jge
push
xchg
fists
mov
or
dec
mov
mov
adc
pushf
dec
inc
cmp
pop
xchg
int
mov
inc
cltd
imul
movl
dec
xorb
icebp
lret
repz
mov
inc
add
pop
pushf
cmpsb
stos
mov
sbb
and
mov
mov
mov
xor
add
inc
fmuls
jnp
mov
and
bound
movsl
fcoms
dec
scas
imul
test
mov
mov
aaa
sti
lds
mov
popl
fmull
and
pop
stos
mov
sub
lahf
mov
pop
loope
ljmp
dec
inc
ljmp
cwtl
xchg
push
stos
std
gs
xchg
daa
pushf
hlt
and
sub
xor
shrb
cmp
inc
cmp
lods
or
cmp
dec
sbb
push
adc
mov
pop
in
cli
pop
dec
ljmp
stos
mov
sbb
popa
call
cmp
insb
movsb
ds
iret
mov
fistps
push
sbb
mov
testb
shrl
ljmp
divl
std
data16
andb
insl
push
xor
xlat
movsl
adc
sub
fidivs
jmp
out
in
je
sub
movsl
mov
mov
and
rcll
nop
lret
add
mov
mov
sar
mov
dec
xchg
insl
add
negl
hlt
dec
pushf
lds
mov
and
inc
sbb
mov
xchg
push
and
adc
push
sbb
push
fstpl
jnp
push
adc
repz
leave
in
dec
sub
mov
pop
add
jmp
arpl
cmp
int
pop
ret
repnz
clc
dec
mov
out
nop
bound
addr16
lret
fisubl
lea
cmc
orl
sbb
jb
mov
jo
jmp
sbb
push
add
in
stos
test
add
gs
sbb
push
mov
testb
ljmp
aaa
repnz
fistpll
add
mov
mov
lds
cmp
or
add
cmpsl
mov
pop
push
mov
mov
push
subl
test
inc
arpl
cltd
cs
pop
pop
cmp
scas
adc
mov
out
cmpsl
cli
aaa
xchg
mov
push
mov
mov
lret
and
hlt
or
aad
mov
mov
rcrl
mov
sbb
xchg
or
push
and
xchg
bound
jo
jo
jo
fimull
push
push
in
pop
ret
std
cmp
cmp
add
out
mov
movsl
xor
hlt
mov
fs
movsl
adcb
in
fmull
jl
lahf
les
add
shlb
mov
ds
inc
dec
gs
gs
sahf
xor
shrb
push
xor
fbld
je
lahf
cli
mov
cmc
mov
dec
leave
ds
fwait
xchg
mov
rclb
gs
jmp
dec
and
jecxz
loop
incb
outsl
push
into
cmp
mov
das
push
aas
loop
xchg
inc
fbstp
scas
cmp
jo
ss
inc
nop
dec
xor
sub
sub
stos
int3
outsb
adc
jb
std
call
push
cmp
xorb
xor
scas
mov
flds
loopne
pop
push
repnz
arpl
shrb
push
fwait
in
pop
lahf
jae
lret
ret
sahf
cmp
xor
pushl
stc
stos
shr
int3
xchg
bound
and
imul
sbb
dec
andb
mov
push
push
dec
push
xchg
pop
cld
insb
test
xor
loope
adc
aad
aas
data16
movsl
aaa
xor
pushf
dec
mov
add
rcl
xor
xor
std
mov
cmpsb
pop
lods
push
mov
mov
fadds
or
loop
adc
pop
cmp
lock
xor
push
mov
loopne
push
daa
inc
jp
in
push
mov
ds
iret
dec
aad
jbe
inc
incb
mov
or
sub
pop
popf
sub
clc
cli
aaa
in
xchg
or
adc
int
lds
lret
xchg
push
push
pop
imul
xor
cmpsl
inc
or
mov
cmpsb
call
or
sarl
fstps
clc
or
sub
or
jge
imul
test
pusha
xchg
mov
out
jle
out
mov
lahf
iret
jmp
jg
sbb
mov
xchg
jnp
lock
into
jl
sbb
sahf
push
out
push
mov
inc
mov
stc
adc
and
lret
jae
pop
jge
loopne
add
cmc
add
cli
aad
daa
xor
cmp
mov
pop
inc
outsb
jb
jmp
cwtl
mov
pop
outsl
movsl
mov
movsl
and
dec
jp
xchg
int3
data16
dec
cmpsb
nop
icebp
stos
jle
jns
or
cmp
mov
xor
pop
add
xchg
lock
loope
dec
mov
mov
dec
fldl
cltd
xor
sbb
imul
mov
xor
or
dec
fadds
pop
std
mov
mov
das
pop
sub
xchg
fstl
cmc
arpl
jp
push
lret
mov
sbb
lcall
add
nop
icebp
mov
movsb
test
in
and
add
mov
sahf
clc
ss
arpl
xchg
mov
pushf
or
xchg
js
mov
jp
adc
mov
mov
je
mov
jp
in
enter
push
pop
popf
insb
dec
mov
cmp
sub
add
sbb
clc
adc
or
jecxz,pn
mov
sbb
pop
push
inc
dec
neg
cltd
in
fcompl
fs
int
lods
test
fstl
jns
leave
adc
aam
cwtl
filds
dec
cmp
sti
sbbb
jb
fldz
jbe
cltd
inc
cmpl
aad
adc
xor
sbb
shl
inc
ret
jg
mov
daa
xlat
mov
xchg
mov
mov
mov
jmp
mov
sti
pop
jnp
popa
jnp
imul
ja
loope
dec
leave
lods
dec
sbb
rol
xor
mov
call
fisubrs
sbb
dec
cmc
rcrb
sub
jp
aas
mov
sar
sbb
push
add
xchg
push
insl
dec
sahf
or
mulps
dec
xchg
das
cmpsl
cmp
test
inc
addr16
mov
pop
jns
xchg
xchg
in
push
faddl
pop
rolb
inc
mov
cmp
dec
jmp
fbld
lea
icebp
ret
sbb
popf
push
cmp
adc
lods
int3
ret
rol
push
or
movsl
daa
pop
mov
mov
xabort
push
or
mov
sbb
sub
ret
and
stos
push
aaa
je
aam
or
mov
pop
daa
or
pusha
jno
dec
out
addr16
nop
pop
movsl
lcall
jo
xchg
out
xor
and
loope
lret
cmp
inc
mov
push
mov
sub
popf
sub
sahf
andl
js
cltd
dec
loope
enter
push
mov
mov
push
rclb
push
out
mov
ror
rcl
mov
fsubrp
imulb
int
aad
jge
addl
mov
loopne
outsl
data16
dec
call
mov
negl
and
jle
cmpsl
test
mov
xchg
movsb
lea
jno
addb
xor
ret
and
push
mov
adc
movsb
mov
add
cltd
mov
push
push
pop
nop
mov
in
mov
sbb
js
adc
push
sbb
pop
dec
or
add
pop
cld
pop
inc
xor
mov
mov
pop
lret
iret
xlat
and
aaa
cmp
sbb
and
and
outsb
mov
es
shrb
dec
lcall
cltd
aam
inc
enter
adc
pop
outsl
lret
sahf
xchg
inc
movsb
inc
repz
out
in
stos
xchg
or
cwtl
lahf
add
insl
and
mov
xchg
sti
cmp
pop
xor
mov
ljmp
stc
sbb
adc
ja
sbbl
push
movsb
cmpsl
stos
in
mov
jmp
sub
add
and
mov
mov
icebp
mov
mov
sub
add
add
jae
adc
fcom
xor
sub
bts
lret
jnp
imul
lahf
es
fbstp
out
mov
lods
inc
pop
mov
mov
mov
fcoml
inc
loopne
ret
dec
pop
hlt
mov
repz
push
cmp
inc
in
sbb
nop
into
movsb
or
mov
mov
femms
insl
mov
or
or
shlb
cmp
push
mov
pop
sbb
sar
adcl
daa
loop
loope
repnz
sub
dec
xchg
test
out
jle
sub
rcrl
mov
sub
aam
sub
add
add
dec
sub
inc
or
arpl
mov
notl
cmpsl
icebp
je
xor
push
stc
or
sub
push
xlat
push
aad
dec
in
subl
pop
and
cmpsl
xchg
sbb
pop
lods
cmp
xor
sbb
inc
repz
jp
mov
aam
lods
mov
add
jbe
mov
jae
jae
or
lret
jl
loopne
or
imul
push
jno
in
das
sbb
xchg
dec
xchg
jnp
jg
adc
jecxz
mov
sbb
push
cmp
pop
mov
insb
pusha
add
leave
sbb
add
mov
adc
daa
aad
stc
lret
test
or
dec
stos
out
mov
xor
jns
jbe
fbstp
jl
hlt
xor
pop
add
maxps
icebp
mov
aas
adc
scas
mov
jge
aaa
pop
push
mov
test
repz
sbb
lock
inc
push
loope
pop
stos
aaa
adc
cmp
push
mov
jno
or
mov
leave
cs
iret
lea
das
mov
add
je
bound
out
sbb
sub
leave
mov
gs
sbb
and
push
pop
or
cltd
inc
cld
in
in
jne
xchg
xor
adc
stos
das
mov
addr16
sub
icebp
pop
push
sub
xchg
in
jae
push
insl
mov
sbb
int3
les
rclb
sub
pop
in
push
aad
dec
fcmovnu
sub
popa
jmp
sarb
cwtl
gs
fnstcw
xlat
inc
ret
fidivrl
mov
and
call
ret
xor
dec
aaa
xor
insb
xchg
popa
xchg
icebp
jg
ss
repz
movl
add
jo
outsl
mov
add
sub
and
push
dec
pusha
xor
mov
insl
out
mov
fstl
and
mov
lock
pop
aas
xchg
mov
push
lcall
xlat
sub
cmp
insb
cld
lret
fsubrp
insl
xchg
pcmpeqw
lods
addr16
je
in
add
mov
mov
ljmp
sub
jmp
clc
imull
xor
out
jg
or
pop
inc
leave
ja
adc
test
add
jecxz
sbb
notl
aas
mov
pop
ret
dec
pop
movb
cmc
push
sub
enter
pop
jbe
jo
push
cmp
jo
dec
aas
data16
imul
fisubs
fldcw
adc
mov
test
aad
pop
rorl
pop
lcall
jp
cmp
lds
jb
in
into
pop
lahf
sti
pop
push
rol
lds
adcb
je
lock
out
in
mov
jl
cmp
out
mov
or
in
clc
or
cmp
add
push
roll
push
push
loope
xchg
fsts
and
sbb
daa
ds
call
inc
mov
pop
adc
mov
mov
inc
mov
scas
adc
aam
out
add
jge
or
xchg
sbb
add
cmp
jbe
pop
pusha
xchg
xchg
ds
jecxz
cmp
cltd
ja
push
jmp
popf
gs
icebp
clc
repz
jmp
fsubl
js
xor
sarl
xchg
xor
or
ljmp
repnz
jle
test
addr16
fisttpll
enter
sbb
imul
xchg
dec
xor
dec
mov
cmp
imul
or
cmp
inc
mov
test
gs
call
daa
adc
and
jle
xchg
loopne
inc
loope
or
rolb
aam
or
popl
jl
adc
mov
mov
jnp
cmp
or
xor
push
rcr
addr16
scas
hlt
lret
push
sub
add
adc
xchg
aaa
call
jl
aas
loopne
inc
lea
fdivs
adc
and
adcl
push
cmp
inc
xor
lcall
test
icebp
or
inc
adc
daa
lcall
lret
mov
arpl
adc
inc
fcomip
fimuls
jmp
cmp
bound
repnz
les
dec
lcall
into
cmp
xlat
std
test
lea
dec
pop
and
fldenv
stc
popa
or
enter
mov
sbb
jns
mul
imul
fnstenv
dec
pop
inc
sub
push
bound
rcrl
inc
pop
cmpsw
test
xchg
rcrl
mov
fldl
out
das
jp
cmp
clc
pop
js
sbb
jle
mov
push
sahf
mov
cmp
movb
jnp
aad
test
mov
xchg
push
push
sbb
jp
cmp
imul
push
ja
xchg
adc
sbb
jo
and
lods
std
fisttps
das
fistpll
das
push
out
mov
in
insb
out
cmpsb
loope
mov
cmc
ljmp
pop
push
test
jmp
dec
jo
ja
xlat
rcrl
jecxz
fmull
or
adcb
xchg
insb
daa
sub
pushl
sub
sub
addr16
mov
mov
mov
inc
into
movsb
xor
in
or
popf
jp
push
mov
js
jge
jb
push
cmp
out
mov
fidivrl
fidivrl
call
dec
fcoms
dec
mov
inc
jge
xchg
mov
push
or
inc
loop
adc
mov
bound
cs
xor
dec
clc
push
cltd
ret
andb
enter
ret
ficomps
cmp
cmpl
push
in
js
loopne
pop
cmpsl
mov
and
aaa
and
jnp
cmp
imul
jmp
dec
xchg
lods
int
outsl
push
sbb
xchg
pop
or
sbb
add
add
push
inc
gs
stc
addl
add
dec
fdiv
xor
scas
mov
flds
jg
call
adc
sarl
mov
sub
adc
xor
in
mov
jl
sub
dec
pop
pop
subl
dec
pop
sahf
aam
or
bound
sub
frstor
push
xor
cmp
push
js
or
mov
jle
cli
mov
mov
xor
xor
in
and
mov
jne
jo
daa
mov
mov
idiv
loope
sbb
pop
stos
and
fisubs
adc
test
adc
mov
xchg
jp
loope
jmp
inc
add
daa
mov
cmp
inc
int3
ror
and
in
sarl
pop
sub
xor
xchg
or
das
inc
or
jo
mov
xor
push
sub
xor
daa
sarb
pushf
aaa
jecxz
mov
adc
rcrl
lods
sti
xchg
andb
or
jecxz
jae
rcl
push
cmp
leave
cs
popf
mov
jae
pushf
dec
push
in
icebp
xor
lret
andb
dec
pusha
aaa
fstpl
mov
cmp
ljmp
movsb
icebp
blcmsk
in
push
pusha
in
lcall
sbb
outsl
cmpb
cmp
mov
mov
add
rcll
push
dec
push
xchg
test
push
gs
cmp
pop
jno
ret
push
call
push
mov
int
dec
xor
int3
imul
data16
pop
aad
repnz
repz
imul
in
shll
fldt
cwtl
sbb
ficoml
lds
rcll
imul
dec
sbb
sub
das
inc
in
fdivrs
inc
dec
xchg
mov
jae
xchg
push
sbb
popa
int
mov
pop
adc
xchg
add
icebp
and
out
add
sti
push
jo
sub
cmpsl
jo
cwtl
fnstcw
les
ficompl
inc
cltd
adc
sub
mov
pop
lock
or
xor
in
cli
dec
dec
cld
int3
and
inc
mov
xor
pop
inc
sub
shrb
fstps
xor
jb
cmpsw
mov
loope
addr16
into
sbb
mov
notl
pushf
inc
pop
mov
push
scas
and
sub
mov
out
mov
sub
lea
mov
add
mov
mov
lea
lcall
imul
stos
mov
stos
ret
arpl
sbb
mov
jbe
and
sub
jb,pn
stos
mov
fmuls
rcll
adc
mov
shrb
jne
sarl
mov
jg
pusha
sub
fmuls
das
push
outsl
pusha
xor
enter
xchg
lahf
pop
jg
xor
enter
cwtl
or
insl
add
mov
test
xchg
push
push
jne
test
jmp
ja
imul
push
aaa
scas
cmc
hlt
outsb
jno
out
popa
mov
add
ja
addr16
inc
insl
xchg
push
or
sub
les
xor
sub
jecxz
sar
sarb
sub
and
xchg
mov
cmp
dec
aaa
jbe
add
in
call
sbb
ret
cwtl
inc
lods
or
cmp
mov
or
lahf
std
cmp
insb
repnz
jmp
add
cwtl
mov
sub
xor
cmp
int
sbb
mov
pop
cmpsb
pop
loope
mov
aaa
xor
mov
rol
out
ret
push
lods
xchg
add
repz
jae
jge
add
mov
cli
mov
xor
jecxz
les
mov
idivb
lahf
dec
jl
mov
je
sub
jl
xchg
mov
dec
inc
pop
test
mov
pusha
into
and
adc
adc
jmp
adc
imul
aaa
stos
adc
std
mov
fisubrs
fs
xchg
hlt
je
fstps
clc
pop
xor
in
fldl
movsl
addr16
test
outsw
pop
int
sbb
jo
inc
sub
pop
popa
dec
scas
lea
mov
mov
pop
or
adc
xchg
or
xlat
sbb
das
rolb
mov
dec
stc
cmpsl
cmp
sbb
push
xlat
mov
iret
insl
sbb
insl
mov
and
stc
pusha
and
jp
sub
add
cmpsb
in
lcall
lds
cmp
pushf
iret
in
fiadds
and
in
cmp
and
lret
repz
data16
mov
dec
cltd
add
adc
pop
add
sub
or
dec
cmc
clc
and
push
lret
lahf
jns
mov
adc
inc
ret
dec
in
adc
adc
outsb
js
add
dec
jle
mov
and
and
adc
jg
cmp
pop
pushf
and
jb
inc
cmpsb
cmc
pop
sbb
sbb
adc
sub
adc
cmp
jbe
jmp
push
out
dec
mov
adc
repz
jecxz
push
sbb
outsl
outsb
bound
ja
shl
aas
mov
and
push
ds
in
rcr
adc
iret
or
test
movsl
in
sub
psubw
std
outsb
push
std
lahf
adc
and
mov
mov
xchg
icebp
xlat
int
test
ja
or
lods
and
popa
mov
lods
mov
pop
subl
or
xchg
dec
ja
add
rcrl
dec
out
ljmp
xor
and
faddl
jnp
iret
inc
inc
loopne,pn
enter
xchg
inc
jno
xor
lahf
imul
daa
or
xor
fstpt
sbb
xorb
mov
xor
outsl
in
movsl
scas
imul
fbld
stc
fcomps
std
out
add
mov
jns
test
inc
test
cmp
xchg
idiv
test
add
pushf
ficomps
dec
mov
sbb
xchg
fwait
push
push
mov
dec
jbe
mov
pop
mov
std
gs
ret
xchg
outsl
pop
mov
mov
jb
aam
cli
inc
sbb
add
pop
mov
sub
fcompl
mov
mov
adc
shll
cmp
sub
push
dec
and
xchg
mov
stos
inc
je
scas
negl
outsl
cmp
dec
mov
inc
out
lcall
rol
or
scas
punpckhdq
mov
or
push
shlb
mov
push
addr16
loope
push
test
rolb
data16
test
insb
push
setb
xchg
fisubrs
dec
mov
test
pusha
cld
jmp
jecxz
mov
and
lods
movsb
fmull
subl
enter
mov
loop
pop
mov
fwait
jmp
add
int3
mov
xchg
add
in
pop
cld
push
mov
xor
jmp
mov
ret
cmp
add
jo
cmp
lret
stos
push
movsl
out
inc
int3
xchg
cmp
cmp
sub
jmp
and
add
outsb
test
push
fdivr
mov
lret
and
adc
divps
dec
push
or
cmpl
mov
test
popa
xchg
popa
fldcw
inc
gs
loope
push
add
or
sub
cmc
fmull
or
inc
adc
xor
outsb
sub
and
out
pop
inc
cli
bound
dec
dec
sbb
pop
movsb
invd
je
dec
pop
jmp
push
dec
mov
lret
mov
sti
mov
mov
ss
push
xor
stc
inc
fistpl
jbe
lret
fstpl
stc
mov
jle
xchg
dec
xlat
nop
fstl
xor
fistps
ljmp
cltd
mov
push
lods
mov
dec
pusha
and
add
or
xchg
rcrb
orl
hlt
das
pusha
mov
push
loope
repz
push
daa
insl
inc
test
or
int3
mov
mov
mov
test
movsb
or
push
add
lret
dec
cld
xchg
scas
test
lcall
out
loop
jmp
popfw
stos
sahf
inc
int3
and
cmc
mov
enter
arpl
shrb
jp
xlat
pop
jle
xor
xchg
data16
fcmove
pop
dec
test
scas
stos
sbb
gs
cvtps2pi
ret
lods
popf
test
lods
push
rorb
adc
scas
cmp
cmpsb
inc
dec
push
pushf
movsl
mov
mov
fucomp
repnz
test
js
push
ficompl
push
sti
pop
pop
fcmovnb
rorl
leave
push
jbe
cmp
xchg
std
add
mov
lea
xor
mov
das
add
ret
outsb
out
cmpsl
fbstp
popf
xchg
test
mov
mov
mov
adc
lock
inc
sbb
sbb
rcll
mov
cmc
jg
stos
dec
lock
cld
inc
mov
outsl
jmp
and
lea
icebp
mov
popf
sbb
jne
inc
cli
shll
dec
add
sahf
mov
subl
mov
mov
add
jo
jae
jae
or
dec
sahf
xor
dec
fldl
pop
dec
dec
incl
jle
push
mov
shrl
test
adc
jle
sahf
rol
iret
idiv
push
out
cmp
pusha
jae
jmp
cmc
adc
fwait
add
jle
test
xchg
lea
scas
pop
pushf
pop
dec
add
cld
mov
xor
loope
mov
xchg
lret
and
dec
push
in
push
cwtl
sti
fimull
in
jp
stos
int
call
shr
inc
push
out
stos
pop
arpl
ror
mov
leave
pop
fwait
add
stc
lea
push
jns
outsl
push
sbb
push
sub
aaa
in
cmp
pop
mov
lret
add
push
cmpl
mov
insl
loope
scas
adc
jbe
cmpsb
cmp
imul
pop
inc
mov
and
stos
sub
loop
jb
aad
sub
xchg
out
jecxz
fwait
imul
dec
dec
insl
mov
add
adc
stos
cmp
out
pusha
jo
ret
dec
mov
rorl
jo
divl
add
hlt
mov
cmp
popf
dec
fldcw
dec
pop
xor
jmp
stc
push
sti
jns
or
xchg
mov
cmp
mov
loope
mov
or
call
or
dec
scas
pop
jl
xor
stos
mov
inc
jl
loope
scas
lea
pop
test
inc
and
lret
or
xchg
lret
xor
sarl
dec
sbb
push
mov
push
pop
movsb
push
dec
push
xchg
pop
pop
dec
push
les
sub
cmp
arpl
mov
jp
call
iret
in
sbb
and
clc
pop
xor
lods
xor
pushf
mov
fistl
fdivs
mov
mov
loope
test
add
rcrl
popa
sub
mov
mov
sbb
popa
pop
dec
mov
push
shll
push
push
cmp
sti
cs
hlt
lcall
push
sbb
mov
sub
mov
cmp
gs
add
ret
aas
add
iret
stc
add
add
sarl
cmp
mov
inc
icebp
movsl
push
not
xchg
mov
loopne
xchg
cli
push
push
pop
adc
rcrl
and
stos
test
test
js
push
jnp
mov
inc
cltd
and
aaa
push
sar
pop
sbb
inc
repnz
and
jmp
jecxz
bnd
hlt
clc
mov
sti
and
push
nop
loop
ss
mov
push
aaa
imul
in
pop
cmpsl
addb
lahf
pop
dec
jl
adc
lcall
adc
aas
lret
xchg
repnz
jg
or
subl
fisubrs
adc
mov
add
or
mov
lods
jp
test
sub
dec
add
xor
pop
int3
dec
jno
pop
flds
jbe
minps
dec
push
dec
pop
cwtl
lds
inc
mov
cmc
mov
lods
fldcw
add
xor
negb
lret
xchg
mov
into
movsb
push
jns
outsl
sbb
inc
mov
cli
jmp
push
fidivl
in
cltd
loop
jnp
cmp
mov
dec
inc
jl
jg
add
call
stos
xchg
xchg
xchg
adc
notl
pop
mov
mov
mov
xchg
add
andl
loop
std
int
jle
out
imul
sub
sbb
sub
cli
push
dec
pop
ja
cmp
je
cmp
dec
mov
fidivrs
je
sub
sbb
sarb
sub
data16
js
push
jnp
xor
and
test
jge
mov
aad
lods
push
push
push
sbb
dec
add
jg
jae
ret
out
mov
push
and
lcall
pusha
outsb
push
xlat
lods
mov
jo
ficoml
add
adc
iret
add
jmp
lcall
fwait
js,pn
inc
repnz
mov
or
xor
xor
cld
imul
pop
mov
lds
dec
cmp
jle
sbb
or
sbb
pop
xchg
pop
les
push
test
stc
ljmp
jge
mov
in
aad
pusha
repz
popf
push
sbb
repnz
jo
dec
lods
pop
adc
sti
lret
sbb
jno
jno
in
leave
fisubrl
out
xchg
cld
cmp
divl
loop
mov
outsl
mov
mov
mov
and
xchg
insl
stos
ja
add
fs
sbb
movsb
ficompl
xchg
loopne
lock
mov
out
cmc
gs
adc
jb
cmp
rep
pushf
adcl
mov
jge
mov
mov
addr16
and
fstps
bound
xchg
aam
push
in
test
lods
cld
test
adc
mov
cli
aas
int
scas
ljmp
hlt
pop
push
add
dec
jmp
popa
jl
inc
dec
call
or
aas
cmp
stc
test
pop
dec
sbb
push
xchg
jecxz
pop
fcomp
hlt
jle
sbb
movsb
or
lods
pop
test
mov
push
sbb
xchg
pop
in
push
fbld
or
das
jns
jp
adc
fsubrp
xchg
sbb
xchg
fstps
movsl
sub
dec
cltd
mov
pushf
int3
lahf
loopne
xor
daa
xor
enter
adc
popf
call
cmp
mov
outsl
adc
push
and
imul
pop
sahf
cmpsb
pushf
dec
add
xor
or
mov
rcr
ja
fbld
aam
adc
pop
xor
in
shrb
stc
mov
cmp
ds
add
insl
push
mov
and
or
fiaddl
int3
xor
in
fldcw
pop
sbb
jno
mov
cmc
xor
aas
sbbb
movsb
iret
cmp
dec
cmovge
add
and
pop
sub
dec
mov
inc
aaa
mov
clc
pop
jae
sub
and
push
jnp
and
mov
mov
test
mov
push
sub
loop
xchg
dec
lock
mov
pushf
add
roll
nop
sub
dec
mov
or
or
sub
push
jg
leave
lret
in
pop
in
and
dec
movsb
sarl
push
pop
test
mov
xchg
xchg
sub
mov
dec
jbe
stc
pop
clc
hlt
ror
xor
sub
icebp
and
push
lret
popa
cmp
cmpsl
fs
insb
icebp
int
les
popa
dec
cmp
hlt
daa
mov
xor
call
ds
xchg
adc
int
mov
gs
cs
mov
and
into
sbb
mov
mov
sub
bound
lahf
int
cmp
and
stos
icebp
mov
popf
inc
cmp
lahf
lcall
into
pop
sahf
xlat
pop
mov
shlb
fidivrs
nop
jno
cmp
xor
pop
push
xor
mov
std
scas
xchg
jg
mov
mov
inc
es
dec
sbb
shll
add
dec
clc
popa
sub
inc
cwtl
jmp
aad
ds
cmc
inc
jle
xchg
out
cltd
xchg
cltd
mov
mov
outsb
pop
xlat
test
pop
xchg
std
or
mov
adcl
dec
jmp
arpl
loop
add
pop
jae
sbbb
push
stc
push
dec
xchg
test
jmp
testb
enter
inc
aam
stos
xor
imulb
lea
jo
push
std
pop
gs
ret
inc
aaa
mov
and
or
mov
cmc
mov
and
lea
dec
jnp
test
push
push
mov
and
xor
cmpsl
test
fbstp
cwtl
xchg
mov
orb
fwait
cmp
jle
fildll
inc
xor
push
mov
cwtl
mov
mov
repz
cmp
adc
lods
pop
fsubp
or
mov
sarb
jnp
push
xchg
mov
adc
sbb
aas
mov
pop
in
or
cltd
imul
lods
mov
pop
sarb
push
cmp
mov
pop
pop
rol
mov
fs
hlt
rol
stos
psrlw
test
xor
jecxz
stc
cwtl
mov
xor
and
mov
pause
hlt
outsb
push
mov
xor
mov
xor
arpl
push
or
pop
dec
dec
xor
leave
and
jno
cli
cmpl
dec
enter
push
and
or
and
sbb
loopne
sbb
inc
stos
fistps
into
pop
ret
or
or
popf
adc
scas
push
loopne
mov
cmp
bound
stos
ds
sbb
lock
sbb
shl
mov
rclb
sbb
inc
rcrl
pop
ds
pop
outsl
and
mov
inc
call
dec
imul
push
mov
int
jne
push
inc
jmp
cmp
mov
int
push
je
push
or
ljmp
dec
loope
mov
int3
jae
push
or
jns
cmp
out
leave
pop
or
cmpsb
loopne
lahf
fisttpl
mov
pop
jae
mov
stos
inc
or
loop
inc
jmp
xor
pop
add
mov
pusha
int3
arpl
push
lcall
in
mov
sub
xor
lods
scas
pop
pop
inc
in
subb
mov
adc
dec
fidivl
shrl
mov
jmp
pusha
lcall
inc
sub
jne
pop
in
in
stc
push
pop
and
test
std
and
stc
loopne
add
scas
dec
add
sub
sbb
pop
sbb
and
push
stos
das
dec
ficoml
inc
push
rolb
outsb
repz
sub
fsts
or
dec
mov
sub
sbb
adc
out
add
mov
repnz
adcb
mov
iret
mov
iret
lret
mov
call
sub
xchg
inc
inc
or
add
imul
imul
fildl
or
cmpsb
mov
pushf
pop
and
mov
cmp
pushf
sub
cli
imul
sti
xlat
in
sbb
pop
aam
in
shrl
cmp
add
lret
mov
clc
lcall
adc
pop
jbe
jmp
add
hlt
scas
leave
in
push
aam
lods
sbb
xchg
mov
mov
cmp
inc
jne
aad
xor
mov
add
jo
xchg
pop
sbb
push
lcall
mov
mov
ss
nop
adc
adc
push
jp
xorl
fs
jns
lock
inc
or
sub
mov
testl
xor
ss
cs
mov
pop
inc
or
roll
adc
cmpsb
inc
push
inc
dec
pop
jae
movsb
aaa
dec
pushl
int
push
test
call
dec
cmp
out
pop
mov
outsl
inc
xor
test
inc
sub
pop
cmp
mov
enter
mov
mov
popl
inc
cli
add
stos
adc
xor
xor
fdivrl
pop
out
pop
mov
aad
adc
xchg
scas
mov
inc
cmpsb
fidivrs
push
negb
aad
xor
or
int3
pop
adc
xor
ja
and
sbb
fcompl
jmp
sbb
lods
adc
aaa
mov
xor
lcall
sub
xchg
fdivrs
js
pop
fs
ret
jp
and
lea
mov
dec
out
sub
arpl
subl
jnp
fsts
adc
arpl
pop
shll
xchg
rclb
dec
repnz
mov
push
xor
dec
xchg
lods
dec
cmpsb
sbb
sbb
push
jg
and
lret
or
push
push
mov
add
and
lcall
lret
cmp
sub
push
xchg
jp
jl,pt
sub
inc
movsl
clc
out
gs
cmpsb
inc
repz
xor
xchg
dec
aad
stc
dec
jne
mov
pop
clc
add
icebp
pop
shll
stc
mov
mov
mov
insl
push
test
or
scas
ja
fists
xchg
cmp
or
dec
and
mov
mov
pop
pop
cld
fmull
sub
aam
push
mov
fcoms
call
mov
in
jmp
ljmp
nop
inc
dec
sbbb
icebp
in
sahf
push
lret
in
frstor
sbb
jns
xchg
adc
push
add
push
cs
ret
and
stos
orps
aad
mov
xor
jp,pn
jo
movl
mov
cmpsb
imul
filds
aaa
daa
dec
xchg
pusha
jl
xor
adc
movsl
jmp
dec
aad
in
int
xor
fwait
and
fcompl
mov
jns
lds
mov
pop
push
pop
divb
push
imul
dec
and
lcall
sbb
jge
fidivrl
rclb
cld
mov
orb
test
into
mov
rclb
mov
lods
std
push
mov
mov
mov
mov
lcall
out
sti
jb
imul
push
jo
sbb
mov
call
jnp
pop
jl
inc
shlb
adc
popf
adc
and
leave
cld
ficomps
and
shll
in
sub
scas
pop
sub
mov
into
hlt
sub
inc
mov
testl
std
pop
lds
sbb
push
dec
sbb
sti
and
call
push
loop
pop
inc
sbb
and
mov
mov
push
xor
fidivl
mov
inc
imul
sahf
icebp
push
mov
cmc
test
mov
mov
shr
push
cmp
mov
dec
scas
fwait
pop
add
sarl
subl
bound
jmp
add
jno
subb
push
arpl
lock
adc
pop
sbb
push
adc
jg
cmp
adc
cli
aaa
push
mov
clc
mov
out
scas
sbb
dec
add
mov
and
jnp
jo
aad
push
nop
mov
scas
pop
hlt
cmp
inc
loopne
mulb
mov
xlat
xlat
jno
mov
sbb
inc
inc
and
aas
jno
out
lods
push
inc
pop
inc
mov
cli
sub
popa
xor
stos
movsb
test
push
rorl
push
aam
cmp
insl
cmp
and
popf
je
jnp
les
pop
es
cmp
pop
jb
negl
hlt
insb
stos
fimull
gs
sbb
push
lfs
test
test
das
pop
fs
and
xchg
incb
mov
movsb
cmp
dec
enter
xchg
addr16
xor
xchg
inc
adc
adc
bnd
ds
push
addr16
xor
mov
lcall
push
test
xchg
cmpsb
inc
jno
jmp
fdiv
sbb
mov
pop
pop
mov
iret
clc
fnstcw
int
mov
jb
dec
imul
shlb
aaa
xchg
push
arpl
fdivl
cld
dec
scas
mov
cmp
or
out
pushf
sbb
roll
movsb
xchg
xchg
or
pop
clc
mov
cmp
test
test
xchg
mov
inc
leave
out
xor
dec
inc
pop
mov
cmp
aas
dec
lods
fmull
sub
xchg
sarb
jae
add
jae
inc
pop
call
mov
cmp
fimull
cmpsl
mov
dec
lock
pop
and
js
add
xchg
mov
add
sbb
add
dec
lock
xchg
inc
or
push
cltd
push
out
add
lahf
or
lcall
popf
pushl
aad
iret
jno
dec
lds
push
lods
addr16
ds
sti
test
jbe
pop
mov
fstpl
inc
loopne
test
mov
test
cmp
cmp
add
rcr
and
das
or
out
lea
je
mov
mov
faddl
adc
xor
sbb
leave
jo
and
in
fimuls
insl
or
call
mov
and
aaa
sbb
jae
xor
and
iret
bnd
pop
dec
push
iret
or
ja
out
or
mov
sbb
lods
push
ss
fcom
mov
mov
cmpsl
in
out
cmp
jle
add
in
xor
inc
and
je
sub
xchg
ror
and
and
push
pushf
cmpb
loope
test
and
notl
int
dec
sub
decb
inc
lods
fstpt
add
scas
ftst
lret
outsl
jmp
mov
fwait
dec
add
sbb
cmp
sub
nop
test
das
ljmp
mov
mov
loope
clc
dec
push
or
cmpsb
test
adc
sub
sub
nop
sub
inc
movsb
mov
ljmp
insb
sti
xchg
enter
lock
or
das
or
sti
xchg
mov
xor
dec
sarl
push
cmp
mov
ficomps
in
cwtl
in
scas
sbb
and
and
in
cmp
leave
sbb
and
arpl
call
scas
push
mov
aam
xor
push
add
aas
bound
cmpsl
inc
sbb
inc
out
mov
in
aas
push
clc
pop
outsl
popw
adc
jae
add
jge
xor
test
mov
push
jge
pop
int3
pop
incb
out
lock
pop
xchg
movsb
cmc
andl
push
inc
cmp
inc
mov
popa
stos
pop
aad
cli
sub
sub
jmp
test
popf
mov
xor
inc
jge
pop
mov
jp
push
xor
fisttps
cs
cmp
sub
clc
insl
scas
adc
cmp
sbb
jno
cmp
sbb
push
mov
scas
shlb
in
adc
push
inc
mov
mov
dec
mov
andb
push
stc
inc
and
sbb
bound
pop
leave
xchg
sub
jne
scas
mov
pop
lock
into
xor
adc
push
lret
xorb
cmp
sub
push
outsb
mov
andl
sub
cld
jae
mov
cld
cmp
out
mov
or
adc
cmc
cs
orb
xchg
mov
mov
bound
push
lea
jo
pusha
aaa
imul
and
mov
sbb
aad
repz
cs
out
adc
add
mov
loope
ds
mov
cmpsb
inc
push
ficoml
lcall
cli
ret
mov
push
insl
sti
and
cmp
inc
cmpsb
dec
mov
aam
adc
dec
push
adc
inc
sub
or
pop
lock
jmp
pop
es
insl
fisttps
jno
shr
xor
imul
lds
xchg
add
xor
out
or
daa
ret
arpl
stos
jo
jecxz
push
clc
dec
cwtl
nop
mov
adc
push
push
jnp
add
inc
add
mov
jle
sbb
xchg
cmpsb
inc
int3
mov
xor
lret
and
dec
das
mov
lret
das
push
loop
les
jne
out
movsb
xor
in
mov
mov
dec
cwtl
sti
stos
and
lea
dec
sub
mov
arpl
mov
inc
and
xor
pop
xlat
sub
mov
lods
xlat
mov
xorl
mov
sarb
mov
inc
out
in
sub
add
out
push
cmpsl
mov
hlt
and
addr16
push
sbb
js
mov
jp
in
jl
xor
or
daa
lret
sti
push
xchg
pushf
jne
jl
lahf
mov
pop
nop
cli
sub
sarl
dec
adc
lds
je
xor
push
push
mov
jecxz
ja
sbb
mov
xchg
dec
clc
into
lock
shll
test
jp
sbb
mov
cmp
jmp
stos
clc
mov
aam
rcll
loop
sahf
insb
ja
outsl
addb
push
mov
cwtl
fimull
rcr
xchg
nop
in
dec
clc
mov
flds
aas
fcmovnu
out
mov
sahf
lahf
repz
mov
std
xchg
mov
add
mov
cwtl
sbbl
popa
pop
lds
and
into
sbb
inc
in
mull
cltd
dec
xchg
adc
jp
push
sub
sub
loopne
je
ja
divl
lahf
sbb
sub
lods
cmpsb
aas
subb
data16
fsts
loope
addr16
fiadds
mov
icebp
scas
ss
clc
mov
adc
lds
aad
aaa
aas
add
roll
jge
push
xchg
in
gs
nop
cmc
test
rcll
sbb
jae
sbb
out
cmp
std
jo
xor
inc
arpl
push
jnp
stos
fsubr
bnd
pop
xchg
push
shl
aaa
ljmp
dec
shll
push
scas
enter
or
cmp
mov
call
stos
mov
cmp
push
mov
pop
xor
jne
pusha
je
jno
pusha
jle
fs
fmuls
movsb
sbb
enter
lahf
pusha
add
push
aas
out
test
cmp
lcall
testl
dec
or
xchg
push
lds
in
adcb
js
aas
push
out
lret
or
push
rolb
mov
and
mov
push
out
push
mov
sub
test
lahf
or
push
add
sub
in
shrd
dec
mov
mov
test
rcl
push
push
pop
outsb
out
pop
push
mov
lds
sahf
mov
test
adc
sbb
cmp
pop
xchg
sbb
adc
jg
popa
push
mov
xchg
cltd
int3
sbb
fimull
roll
mov
enter
outsb
jge
sub
xlat
mov
aaa
arpl
jl
push
movsb
xor
sub
lods
push
mov
aam
or
mov
pusha
mov
cmp
lcall
aaa
mov
or
sub
lods
mov
pop
or
mull
pop
shr
repz
out
hlt
pop
shll
icebp
test
and
les
fs
sbb
mov
add
cli
mov
jl
add
jp
stos
mov
int
scas
popf
dec
pusha
insb
sub
addr16
pop
insl
loopne
sti
into
mov
es
mov
pop
push
sahf
mov
ds
int3
push
cwtl
test
inc
fcmovnbe
pop
cmp
js
dec
inc
push
insl
xchg
dec
sub
into
pushf
shrb
stos
mov
repnz
mov
jecxz
and
leave
mov
fldenv
jnp
dec
push
mov
out
cmpsb
xor
jg
jle
ljmp
mov
shll
sbb
cmp
push
jle
enter
cwtl
movsb
jae
fidivs
adc
lea
orl
psrlw
mov
imul
pop
aad
push
push
or
cwtl
push
push
adc
lahf
inc
sahf
lock
adc
inc
and
or
jl
pop
push
popf
xor
mov
push
jmp
ret
sub
lret
pop
cmpsl
jge
or
call
movsl
or
jmp
fcom
shl
mov
add
xchg
inc
jo
out
out
add
mov
sub
inc
sahf
mov
test
stos
xor
jo
cmp
dec
in
jg
testl
pop
pop
cli
pop
test
push
jle
pop
lret
mov
in
jle
sbb
movsl
shrb
xchg
nop
add
push
cmc
jmp
sub
sti
sub
sub
xor
addr16
or
pop
xchg
loope
test
push
sbb
rclb
cmp
mulb
inc
push
pop
adc
add
sti
mov
mov
dec
jnp
insl
cmp
dec
add
dec
dec
inc
fldl
aas
jnp
arpl
mov
push
shl
stc
adc
repnz
pop
sahf
pop
jne
pop
inc
xchg
repz
xor
fwait
push
adc
fs
loop
cmpsb
pop
sbb
pop
mov
sbb
inc
idivb
inc
lods
dec
inc
jns
mov
aaa
adc
add
js
mov
sbb
fwait
add
xor
jg
xchg
popf
cmp
cmc
push
and
push
push
push
mov
cltd
add
call
sub
push
xchg
stos
inc
inc
jno
in
push
loop
sub
dec
mov
push
nop
ss
pop
rclb
sbb
and
pop
xchg
cmp
stos
xor
out
push
lock
xchg
leave
dec
add
int3
int
sti
lahf
sbbb
xor
push
sub
adc
arpl
push
leave
jno
pop
lahf
cmp
repnz
stc
push
mov
xorb
movsl
or
and
arpl
js
movsl
adcl
in
cli
ljmp
in
xor
fiaddl
in
sub
test
sbb
daa
aam
mov
sbb
ljmp
push
lret
loop
adc
popf
clc
lret
dec
mov
insb
push
out
jbe
and
cmp
pop
enter
bound
inc
pop
jo
inc
cmp
xchg
inc
pop
xchg
xchg
push
and
scas
test
mov
movsl
push
sub
cmpsb
xchg
push
push
scas
jbe
sbb
xchg
lahf
loop
inc
xor
jge
sbb
jo
in
xchg
cmp
stos
mov
aaa
testl
or
jno
xor
inc
pop
mov
pop
icebp
fadds
sti
test
or
out
push
adc
add
lahf
mov
mov
stos
mov
stos
jmp
insl
subl
int
add
mov
pop
and
test
xor
leave
in
pop
add
jl
push
sbb
xchg
gs
jnp
jmp
xor
mov
mov
xor
data16
test
add
or
loope
xchg
sbb
push
loopne
and
lahf
mov
in
fidivrs
out
testb
cli
pop
sti
cmp
xchg
icebp
cli
lret
leave
jp
aas
mov
insl
nop
cmp
ss
push
jl
enter
push
or
xchg
scas
inc
mov
jge
testb
sbb
rorl
jecxz
pushf
cmpsl
loopne
adc
fiaddl
xchg
in
xor
icebp
and
mov
dec
rorb
sbb
mov
adc
jbe
fiaddl
push
sbb
mov
cld
jp
and
and
xchg
adc
adc
xchg
sarl
mov
in
xchg
sarb
jmp
xchg
aaa
cmp
fildl
jo
cmp
scas
clc
jne
adc
jge
xchg
loope
inc
and
push
sbb
jnp
or
std
dec
imul
push
test
sub
sahf
out
sub
sub
pusha
jmp
push
xchg
insb
nop
xor
fsubs
roll
xchg
pop
fnstenv
mov
xor
xchg
daa
shll
xorb
stos
ret
jmp
push
or
fisubs
cs
out
inc
scas
lret
cmp
dec
xor
push
dec
sbb
add
xor
xor
jmp
scas
notl
cwtl
xchg
lds
aas
xchg
pop
jne
pop
ss
adc
cmp
mov
popf
int3
popf
and
decl
jg
add
inc
test
addr16
adc
sbb
dec
out
imul
mov
callw
mov
jle
push
data16
sub
sbb
clc
fistl
ret
outsl
or
xchg
mov
mov
fstpl
sbb
adc
mov
mov
cmp
pop
xchg
push
xchg
roll
push
aaa
sbb
outsb
test
mov
test
xor
jp
bound
dec
imul
inc
inc
mull
push
insl
cmp
mov
fmull
in
push
push
mov
test
mull
fidivl
dec
pop
sbb
ja
pop
gs
outsl
push
mov
mov
nop
lods
lahf
mov
sbb
fistl
movsl
into
add
mov
aam
xor
sbb
div
adcb
jns
and
sbb
out
add
mov
mov
daa
fwait
xchg
add
mov
stos
push
sbb
fs
xchg
addr16
daa
ret
inc
pop
mov
shll
mov
inc
out
cmp
in
hlt
test
adc
pop
xor
icebp
orl
jo
pop
jno
addr16
aaa
arpl
cmp
push
jno
and
jp
out
scas
dec
aam
lods
inc
mov
cli
or
lret
jle
and
nop
mov
jbe
fsubrs
mov
pop
xchg
jae
mov
fs
daa
jns
xor
mov
pop
xchg
xor
pop
inc
mov
out
lahf
dec
or
cmp
gs
rcrl
in
ljmp
aad
dec
orl
gs
or
inc
cmp
dec
jg
cmp
sbb
mov
fdivrs
or
call
xchg
popa
fstl
jo
pop
mov
stc
jecxz,pn
enter
les
xchg
add
test
mov
data16
sub
push
xchg
dec
add
data16
mov
fsubl
cmpsl
int3
jno
orb
std
sahf
xlat
int
and
sub
or
ja
shlb
mov
push
fisttps
jge
xlat
cmpsl
lea
loop
scas
in
data16
fidivrs
mov
push
cmp
cmp
movsb
or
adc
sub
mov
adc
outsw
xor
mov
or
mov
xchg
fcomps
rolb
dec
cmp
je
lret
clc
jbe
fisubrl
insb
add
push
ja
xor
or
ret
cld
test
das
jns
push
sti
jge
loop
push
test
jmp
mov
jmp
and
ljmp
jae
push
sbb
mov
push
mov
cmpl
push
xchg
test
cmpl
inc
mov
dec
out
insb
mov
enter
into
call
imul
pop
loop
cmpsb
sahf
aam
cs
jne
push
cmp
or
ljmp
cs
mov
inc
fisubs
in
xor
fildll
cltd
mov
ficomps
pop
cli
jb
cmpsl
adc
sub
stc
lea
inc
push
push
repz
out
jg
xchg
stos
out
test
fstps
mov
icebp
pop
push
jne
cli
ja
nop
sbb
add
xor
xchg
inc
aad
sub
pop
adc
fldcw
adcb
dec
vsqrtps
sqrtps
repz
mov
cwtl
xchg
inc
add
aas
mov
dec
mov
add
scas
lea
rcr
jb
mov
and
dec
imul
in
stos
std
scas
inc
outsl
add
xchg
nop
mov
adc
outsl
stc
rcr
jp
fsub
ret
test
xchg
jl
cmpsb
push
jge
rorl
fiadds
sbbl
add
lods
stc
ss
cs
jmp
lret
aaa
movsl
aas
fldenv
hlt
aam
or
and
sbb
add
xchg
push
push
inc
mov
and
mov
out
fcomi
in
or
imul
or
adc
jnp
andl
sub
sbb
stc
pusha
mov
cmp
dec
das
xlat
mov
mov
es
iret
test
pop
fidivl
rcll
cwtl
insb
lcall
outsl
imul
int
push
pop
or
xor
mov
xchg
test
arpl
shl
test
xorb
and
push
ss
fldt
test
in
xor
fldt
mov
loopne
jnp
or
cs
aad
cld
fcoms
popa
adc
add
xchg
bswap
cmp
xchg
inc
sbb
pop
add
xor
lret
add
out
andl
adc
nop
test
sub
movsl
das
shll
popf
sbbb
in
mov
mov
push
pop
jno
push
adc
div
adc
cmpsb
loope
pop
movsb
cld
jne
xchg
in
mov
adc
mov
ds
push
outsl
adc
xor
ret
sahf
and
push
stos
mov
outsb
pusha
ljmp
push
les
mov
orb
out
fists
js
push
mov
movsb
adc
fs
sbb
push
jge
aam
mov
sub
sbbb
mov
sbb
enter
mov
icebp
xchg
add
pop
jbe
insb
push
mov
in
out
dec
or
pop
imul
sti
push
aam
ss
fndisi(8087
outsl
sbb
jbe
cmpsl
movsb
pushf
dec
pop
loopne
cltd
fstpt
mov
gs
xor
xor
in
mov
and
dec
xchg
je
js
mov
mov
sub
scas
inc
or
pop
lods
sub
pop
mov
mov
sub
test
xlat
xchg
das
sbb
jo
xchg
bound
or
mov
or
jg
pop
test
add
mov
inc
sbb
sub
push
es
add
xor
roll
dec
idivl
lcall
ss
fwait
adc
icebp
jb
sub
inc
push
addb
mov
mov
dec
ret
inc
inc
int3
dec
mov
repz
and
inc
nop
xor
sbb
mov
cli
fstpl
jo
pop
dec
daa
mov
je
ja
enter
aaa
out
sbb
rorb
push
adc
sub
xchg
and
mov
adc
or
xchg
cmp
in
mov
pop
fbstp
imul
daa
cmpsl
or
leave
js
outsb
gs
cltd
pop
mov
add
and
in
add
cmp
fsubr
outsl
sub
test
xchg
mov
fnstsw
lahf
mov
fiaddl
sbb
insb
outsb
aaa
jge
jnp
sub
mov
lret
xchg
mov
xor
cltd
daa
sbb
mov
mov
fdivl
and
jne
test
bound
adcl
outsb
mov
loop
sub
int3
inc
sahf
sbb
roll
or
xor
push
icebp
jp
test
xchg
out
mov
pop
rcrb
mov
insb
clts
lods
jg
in
ret
cmp
inc
daa
out
or
scas
xlat
int
das
and
pop
outsb
popa
jmp
out
inc
cmp
movsb
adc
push
aad
and
xchg
push
mov
jno
adc
lods
scas
and
or
mov
loop
popa
xlat
push
xor
cmp
test
jbe
push
xor
mov
adcb
mov
push
andb
ljmp
cmp
test
mov
lea
fadd
decl
adc
imul
ljmp
mov
mov
pusha
enter
cmp
push
adc
out
xchg
sub
adc
cs
addr16
out
lods
pop
fprem
stos
sbb
sbb
push
dec
or
popf
push
mov
sbb
mov
fwait
mov
mov
push
rorb
lcall
std
in
xchg
std
scas
sub
jno
cmp
ficomps
cli
aaa
icebp
fwait
push
outsl
mov
adc
xor
pop
pop
jmp
jle
std
jecxz
adc
jmp
ljmp
inc
inc
test
jae
ds
test
daa
inc
sbb
sbb
pop
shlb
gs
push
jmp
xchg
sbb
lcall
popf
mov
loop
add
lods
insb
xor
push
xchg
outsl
je
in
cmp
repz
lods
cmpsl
imul
and
add
jnp
xor
push
imul
gs
adc
and
and
ficoms
roll
sub
fsubl
aad
negl
dec
sbb
xchg
leave
push
sbb
mov
gs
lcall
jge
jnp
pop
popa
add
imul
jmp
push
iret
lock
xchg
or
xlat
pop
aaa
add
mov
sub
lcall
imul
or
add
out
inc
lods
xlat
test
roll
stos
das
or
adc
fists
inc
dec
inc
sbb
adc
ret
nop
cmp
dec
push
pop
dec
dec
loop
fbstp
int3
mov
nop
das
dec
scas
xor
ljmp
xor
xchg
je
testl
mov
jge
dec
jne
mov
jns
mov
add
loop
inc
das
clc
cmp
std
dec
cltd
arpl
mov
pushf
push
call
in
loope
add
aas
dec
popf
inc
in
mov
std
leave
and
lret
mov
aam
mov
std
out
inc
pop
test
notb
scas
sahf
cmp
dec
push
aam
jns
dec
mov
ss
imulb
imul
xor
push
lret
in
mov
lods
or
shr
sbb
ja
das
fs
lret
popl
ret
mov
mov
push
lea
lcall
nop
jbe
outsb
imul
cwtl
xchg
xor
mov
pop
push
mov
scas
add
jg
aaa
ret
and
mov
lcall
outsl
dec
or
xor
and
out
adc
inc
inc
push
pushf
push
dec
test
mov
test
outsb
je
clc
fcomps
jmp
shrd
insl
cwtl
sbb
adc
ret
dec
xchg
jmp
jmp
mov
rcrl
das
cltd
jecxz
imul
js
cld
mov
arpl
idivl
xchg
hlt
jnp
adcb
or
mov
cmp
ficompl
roll
or
addl
into
loop
adc
sbb
sub
xchg
mov
ret
xor
outsb
cld
paddusw
fldl
xor
ret
sub
leave
popf
in
mov
sbb
mov
lods
cmc
cmp
cld
push
in
cld
jbe
loope
sti
call
mov
or
aad
std
xorb
sub
xchg
pop
pop
push
icebp
rcrl
icebp
cmp
mov
ret
jmp
lds
test
jl
cmp
inc
into
dec
es
or
jmp
push
mov
inc
popa
mov
lods
addr16
shll
nop
out
scas
insl
inc
imul
ret
xor
add
pop
xor
cs
xchg
test
bound
mov
and
xor
mov
push
out
adc
sub
pop
xor
daa
cmp
xor
sub
pop
add
aaa
xchg
mov
iret
loopne
outsb
testl
and
mov
cmc
sbbb
sbb
jae
lods
jp
sub
sub
xor
and
movsb
andb
aaa
add
mov
in
mov
cwtl
lahf
clc
pop
popl
shrb
addr16
int
and
or
mov
ljmp
mov
sub
es
xor
pop
ret
fildll
into
es
nop
lret
adc
aam
out
mov
lea
cmp
push
addr16
js
cltd
pop
dec
je
insb
ret
daa
jno
sub
push
xor
mov
fsubp
mov
or
or
pop
rcll
fadd
push
dec
pop
cltd
fwait
jp
jb
roll
cmp
gs
leave
in
dec
lock
stos
mov
nop
cmp
stc
cltd
mov
sarl
leave
or
test
into
cmp
ja
and
push
add
pop
stc
cmc
cmp
lds
fdivl
aam
dec
into
out
paddsb
sbb
shrl
jle
lds
orb
pop
jecxz
rcll
mov
xchg
notb
inc
fistpll
or
pop
fcoms
pop
inc
lret
sub
add
dec
sbb
jne
xorl
aaa
ficoml
das
push
inc
je
pushf
pushf
and
push
nop
add
sub
cs
dec
pop
les
jp
jp
test
cltd
pop
push
insb
divl
xor
adc
sti
fistpl
pushf
push
test
push
daa
hlt
int
mov
push
push
or
jle
sahf
xor
cmp
inc
mov
mov
in
repnz
jne
add
bound
pop
test
xchg
fnstsw
sub
idivb
shrb
in
inc
outsb
in
lcall
shll
lds
shr
pop
inc
enter
lahf
jecxz
fmul
inc
jecxz
add
inc
push
mov
vpunpckhbw
addr16
sbbl
scas
pop
push
adcl
fnstenv
enter
jge
ret
test
cmp
sbb
ja
mov
xlat
loope
mov
jmp
addb
sub
dec
in
push
xor
cmp
dec
xor
xor
mov
mov
dec
sti
es
mov
adc
dec
fistpll
lock
add
push
sub
roll
lcall
xchg
scas
xor
or
push
loope
jo
fdivrp
sti
cmp
daa
mov
inc
xchg
daa
movsb
push
stos
lret
sbb
fsubrl
jmp
lret
jg
lahf
cld
or
aam
gs
rcl
cmp
dec
das
add
aas
or
mov
xchg
cmp
in
dec
inc
stos
xchg
xor
mov
negl
mov
inc
dec
mov
iret
mov
jne
cmp
clc
mull
out
push
push
movsb
push
mov
jbe
mov
push
sbb
pop
push
add
push
rcl
mov
push
mov
or
dec
inc
inc
xlat
sbb
pop
adc
mov
push
addl
cmpl
mov
std
jo
stos
imul
cmc
push
and
mov
push
and
mov
add
push
stc
fdiv
lods
iret
mov
addl
adcb
fisttpll
fwait
add
xor
shl
stc
cli
and
add
nop
xchg
test
and
mov
fcoms
mov
loope
out
into
mov
lods
popf
fldenv
es
ds
pop
movsl
test
lock
lods
gs
mov
fidivl
dec
pusha
out
lods
mov
fs
in
fcomps
xchg
fdivl
out
shrl
mov
push
ja
je
dec
lds
dec
std
popf
sbb
sbb
jl
sbb
mov
push
jb
mov
cmpsb
jmp
outsb
adc
gs
inc
push
mov
loopne
jnp
cs
mov
bound
inc
mov
outsl
popf
and
mov
lds
cs
idivl
mov
aaa
add
clc
push
in
leave
jnp
sbb
insb
push
arpl
fs
sahf
pop
dec
mov
aaa
pop
imul
jg
add
mov
clc
push
push
imul
out
cmp
xchg
mov
int3
lds
xor
push
scas
shrb
xor
fs
dec
pusha
push
mov
cmp
push
dec
pop
xchg
add
shr
out
xor
pop
pop
iret
daa
imul
movsl
pushf
mov
push
aam
or
dec
push
sbb
mov
fs
repz
popf
add
cmp
inc
and
mov
or
push
testb
hlt
sub
addb
loope
cmc
fadds
mov
test
xchg
pushl
mov
lcall
and
dec
in
xor
test
xchg
in
mov
adc
pop
mov
xchg
loop
xor
stos
sub
sbb
sbb
addr16
aaa
push
daa
test
jg
aad
xor
mov
leave
mov
cmp
xor
xor
out
sub
mov
sbb
push
cmp
pop
dec
jns
dec
cmpsb
movsl
jg
mov
dec
addr16
je
pop
in
mov
loopne
sub
xchg
ficomps
out
cmpsl
mov
in
adc
shlb
xor
mov
ja
stos
in
push
or
sub
imul
insl
loope
sbb
flds
dec
rcll
imul
cmp
iret
jbe
in
push
adc
adc
pop
mov
dec
lock
cmpsb
pop
das
add
aas
outsb
jg
xor
jbe
mov
jp
jmp
push
rorb
cmp
repz
data16
and
test
lcall
pmulhw
pop
das
sbbl
mov
in
lods
jle
push
idivl
xchg
adc
into
push
daa
cs
fwait
mov
das
dec
stos
push
xor
xchg
mov
dec
mov
mov
push
call
mov
jb
jae
sbb
and
xchg
pop
sti
adc
insb
mov
out
outsb
pusha
lods
and
lods
inc
loop
fs
movsb
xor
inc
pop
lods
jnp
pop
adc
pop
ljmp
decb
sub
stos
xchg
push
dec
stos
inc
cld
gs
and
inc
loopne
add
leave
push
ror
mov
repz
cltd
aaa
pop
fnsave
mov
mov
cmp
mov
xchg
int
movsb
aam
mov
inc
repnz
dec
mov
sub
xchg
lahf
dec
int3
pop
lods
outsb
data16
jns
imul
lock
push
mov
xor
xor
test
xchg
xchg
idivl
mov
xor
and
jg
clc
stos
test
jp
insl
std
mov
mov
push
dec
hlt
sbb
sbb
jl
repz
inc
imul
mov
cmp
cltd
dec
rorb
in
cvtps2pd
mov
mov
cmpsl
xor
xchg
xchg
fwait
xchg
adc
inc
cmpsb
jmp
sar
or
negb
clc
pop
fxch
loop
mov
test
lret
adc
push
or
sarb
cmp
pop
jo
movsl
cltd
mov
and
cmp
imul
movsb
and
andb
xor
mov
xor
int3
xchg
cmpb
mov
adc
mov
mov
sahf
mov
mov
mov
test
mov
sbb
push
add
enter
repz
jbe
adc
repz
sub
inc
cmp
loopne
mov
sbb
jae
imull
push
pop
add
xchg
sub
ret
cltd
jmp
aad
ss
sti
sbb
insb
jge
mov
stos
xor
push
les
fstp
sbb
xchg
pop
mov
mov
lds
push
repz
cmp
mov
mov
aas
cmp
cmpsb
push
jb
lahf
test
adc
ret
push
out
jg
cmp
jbe
mov
cli
mull
pop
sbb
pop
imul
inc
or
insl
mov
sub
mov
nop
rorb
xchg
outsl
clc
icebp
sbb
jns
nop
xor
movsl
sbb
ret
mov
jle
add
hlt
sub
or
shlb
adc
add
add
mov
xor
sbb
test
ret
mov
loop
mov
fidivrl
adcl
call
ficomps
xor
mov
ja
ret
mov
mov
fistl
outsb
out
outsl
std
loopne
add
mov
pop
mov
dec
and
cmc
pop
pop
mov
test
jle
sub
dec
or
btr
sbb
lods
dec
xchg
rorl
stos
cwtl
idivb
pushf
mov
sbb
pusha
and
leave
mov
int
faddl
arpl
mov
mov
push
dec
cmc
add
into
pusha
dec
stc
adc
dec
out
jns
lahf
xorb
sti
ret
lods
lret
ja
or
push
and
pop
repnz
sbb
inc
sbb
inc
jp
es
add
test
gs
jmp
ret
pop
fcmovnbe
outsb
negl
xchg
clc
in
pop
testb
and
shlb
arpl
push
into
fmul
xchg
addr16
hlt
test
js
mov
xor
sbb
test
mov
xor
xchg
and
push
dec
sub
sub
adc
jo
std
sub
push
jmp
adc
lods
dec
lods
jp
push
aaa
mov
test
or
call
sbb
stos
sub
inc
leave
mov
loope
mov
xchg
outsb
out
push
add
call
xchg
mov
adc
idivl
nop
jne
in
je
mov
cwtl
lds
sub
dec
and
push
jmp
push
add
mov
mov
iret
push
bound
mov
dec
roll
dec
shlb
pop
adc
lea
jbe
pusha
xor
adc
pop
lret
jno
das
xlat
aas
sbb
loope
out
sbb
and
leave
dec
iret
xor
stos
mov
pusha
cld
dec
dec
fisubrl
popa
lods
loop
sbb
std
jge
inc
test
pop
mov
test
in
push
aas
jns
cwtl
insb
dec
xor
adc
pop
in
rcrl
pushf
mov
or
int3
out
popa
pusha
decb
fists
std
xchg
adc
sbb
inc
xor
shlb
inc
aam
jmp
mov
jnp
jecxz
lods
sub
mov
lahf
add
nop
fistl
add
loope
xchg
inc
stos
sbb
sbb
mov
fcoml
mov
jne
or
and
rcll
cmp
xchg
dec
pop
sub
je
inc
movsb
dec
or
or
sbbb
jp
add
jg
test
push
sahf
inc
lods
sahf
aam
pop
out
repz
dec
push
mov
daa
xchg
inc
inc
int
int3
lods
out
scas
cwtl
or
sti
and
insl
and
out
dec
test
outsb
loopne
scas
repnz
out
scas
sti
push
stos
and
jo
mov
cmpsb
push
jmp
push
pop
lods
or
in
ds
addr16
push
push
inc
xchg
sbb
int
jno
ja
dec
stos
test
iret
aaa
jae,pt
ret
mov
orb
je
jg
mov
inc
jl
pop
stos
enter
jl
inc
stc
rcrl
inc
dec
mov
adc
orb
js
cmp
pop
jmp
pop
mov
movsb
add
lods
inc
add
or
fisubs
xchg
mov
cmpsb
jecxz
push
aad
or
outsb
pop
add
jmp
test
test
addl
dec
repz
mov
push
inc
xor
adc
hlt
mov
setb
mov
roll
pop
cltd
test
and
sbb
rcrb
js
sbb
into
mov
or
adc
xchg
int3
movsb
rcrb
push
add
add
nop
jb
je
xorl
lock
sti
scas
mov
out
inc
cmp
mov
arpl
jnp
enter
xbegin
pusha
sub
rorb
dec
movsl
jnp
jae
jle
or
xchg
stos
cmp
je
in
add
jmp
icebp
addr16
out
shll
in
sbb
icebp
repz
cmp
cs
aaa
pop
sbb
jge
ret
jecxz
notw
jns
jno
xor
iret
mov
mov
mov
pop
push
cmc
ds
push
lods
push
out
pop
mov
pop
xor
jbe
xchg
int3
fidivs
jp
nop
faddl
int3
loop
xchg
pop
xlat
cmp
or
pop
mov
jne
mov
adc
mov
sub
cmpsl
pop
xor
jbe
xchg
mov
add
movsb
mov
test
movsb
leave
jb
cmpsb
and
xchg
lcall
or
push
push
mov
adc
int3
push
cld
push
rclb
jb
xchg
shlb
dec
shlb
jecxz
repnz
insb
ds
lock
idiv
inc
hlt
iret
jl
mov
jle
mull
scas
or
mul
or
test
mov
aad
mov
jl
mov
ss
xor
adc
lret
sub
sbb
in
addr16
xchg
mov
jl
mov
popf
in
sub
lcall
pop
cmp
sbb
fistps
enter
insl
lcall
bswap
mov
fnsave
xchg
iret
mov
scas
xchg
sub
or
jbe
mov
cmp
xchg
call
add
jne
sub
push
call
ja
ret
sub
adc
sbb
push
and
loope
push
cmpsl
pop
xor
mov
sub
xchg
or
fcmovu
subb
rclb
ficompl
add
cmpsb
fldenv
fimuls
rcll
mov
and
fwait
leave
xchg
lahf
sub
fwait
cmc
lahf
sub
and
out
sahf
repnz
pop
cmp
js
les
test
js
es
dec
dec
inc
sub
jge
push
sub
call
test
cmpsl
xchg
or
sub
out
and
add
adc
pop
mov
adc
and
jecxz
add
sub
out
fldt
fisttpll
and
daa
rcll
adc
daa
repz
jmp
outsl
stos
repz
daa
jne
pop
inc
sub
stc
cltd
xchg
jb
jp
sub
repnz
das
adc
lock
flds
push
or
adc
add
ljmp
test
pop
les
jg
rorb
jno
lock
fdivrp
lods
addr16
call
xlat
int3
or
into
popa
cmp
mov
fs
dec
inc
jns
push
mov
push
sbb
push
push
orb
repz
adc
movsl
mov
mov
movsb
lahf
add
xor
popa
in
movsb
outsb
jne
sub
cli
in
adc
xchg
dec
xor
jg
clc
xor
je
or
or
outsb
leave
sahf
repz
xor
cmc
fistpll
sahf
xchg
jecxz
test
outsb
int
mov
hlt
aaa
jg
push
mov
sub
and
es
inc
adc
dec
dec
jnp
xchg
shrl
xor
roll
fidivrl
std
aad
adc
cmp
lods
mov
push
imul
das
jmp
jbe
inc
inc
mov
call
and
imul
push
imul
js
cmpsl
dec
pop
lock
incl
jmp
out
and
in
jns
lods
xchg
or
dec
imul
cmp
scas
loope
add
sbb
sti
cmp
lret
push
mov
ds
ss
outsl
cmc
xlat
jge
in
and
sub
and
int3
fucom
call
shrl
or
adc
out
mov
aam
pushl
push
stos
scas
adc
mov
xor
jmp
stos
lock
fwait
clc
clc
mov
cmp
and
cmp
adc
pop
sbb
jno
cmc
test
or
xlat
push
aaa
sar
dec
mov
fsub
movsl
push
xchg
outsl
roll
das
notl
adcb
clc
and
sub
mov
push
mov
je
call
lret
mov
ljmp
and
xchg
pushf
or
flds
mov
jl
push
pushl
les
mov
or
pop
xor
cmp
jle,pt
pushf
js
leave
and
xor
sub
and
push
sbbl
mov
xchg
xchg
mov
xor
mov
das
fmuls
push
clc
fstps
stos
cltd
dec
push
xchg
fiaddl
xor
pop
test
insl
rcl
and
mov
popf
add
lds
call
push
scas
sub
pusha
rol
ret
adc
lahf
es
test
fs
out
mov
adc
int3
scas
add
ss
add
sub
pop
dec
in
aam
fidivrs
rcrb
bound
jmp
jg
pcmpgtw
insb
push
repnz
imul
ss
cltd
jns,pt
fstl
inc
adc
clc
add
mov
test
pop
cmpsb
lahf
sbb
mov
xlat
cmp
testl
add
xor
mov
leave
add
rcll
sub
jnp
mov
ret
xchg
or
test
movsl
lret
and
and
jns
mov
popf
fs
cmp
out
outsb
movl
cmp
mov
mov
pop
mov
sbb
shl
and
mov
or
lret
jns
push
push
push
lods
pop
add
sbb
xchg
shrb
hlt
push
cmp
inc
mov
into
aad
icebp
mov
pushf
jmp
fimuls
stos
into
sbb
mov
and
fwait
ds
cmpsl
adc
push
mov
cmp
add
into
test
ja
enter
sahf
lret
nop
jge
test
les
jno
outsb
ret
js
add
test
cltd
pushf
xchg
pop
push
add
fcmovb
mov
aaa
mov
and
push
dec
in
add
test
ja
jl
dec
loop
sahf
repnz
adc
fadd
aam
cld
in
test
gs
ja
push
push
push
dec
inc
cld
inc
mov
jnp
xchg
imul
repnz
xor
repz
mov
lret
xchg
loopne
mov
shll
add
add
push
jle
int
into
subb
out
push
lea
jle
push
dec
pop
jge
negl
cld
mov
sbb
sub
mov
into
mov
shl
icebp
cmpsb
mov
pop
lcall
mov
or
imul
cmpsl
xchg
push
fcomps
fimull
push
sub
iret
and
sbb
ss
jno
insb
xchg
cmpsl
or
jecxz
push
dec
outsb
pushf
pushf
cwtl
mov
lahf
leave
or
push
xor
inc
pop
adc
js
adc
push
xor
adc
fisttpll
mov
stos
ret
cmpsb
xor
xchg
pushl
mov
shrl
cmp
mov
out
mov
xlat
pop
sub
cmp
pop
call
jg
adc
mov
push
sub
and
mov
dec
fsubs
dec
cs
out
lock
call
loopne
pop
jns
adc
cli
push
mov
aas
imul
push
popa
xor
or
fisubl
lahf
mov
push
cltd
xor
and
lods
icebp
aam
sahf
sub
sub
xlat
mov
decl
pop
rcrl
test
pop
inc
ss
add
adc
rcrl
xor
sti
out
into
xchg
fbstp
into
mov
stc
arpl
xchg
jecxz
inc
or
xchg
add
xchg
fcomps
push
lods
insl
push
aam
cwtl
jb
aad
gs
fcmovbe
outsl
loopne
test
xchg
or
in
cmp
mov
rcll
mov
xchg
sbb
int
jnp
mov
push
add
rcrl
ja
or
iret
push
lds
fildll
dec
sub
fs
cs
ret
mov
adc
fwait
push
sarl
push
and
fs
in
or
and
dec
in
dec
xor
out
inc
xchg
inc
pop
mov
outsl
sub
dec
pop
mov
push
jne
adc
cwtl
push
imul
push
lahf
loopne
fdiv
ljmp
sub
inc
xchg
sbb
add
std
add
in
js
mov
rorl
hlt
ret
imul
xchg
push
cmp
xchg
notb
mov
jno
cmp
xchg
dec
and
dec
xor
jmp
movsb
fildll
mov
jge
aam
fs
adc
mov
and
sub
bound
lcall
lahf
lods
xchg
addl
pop
fstp
repz
shrl
adc
es
fisttpl
inc
ljmp
ret
test
and
addr16
shl
fcmovu
lds
ret
push
or
lcall
xchg
test
push
adc
pop
or
or
or
std
cltd
outsl
fcoms
clc
popf
sub
scas
mov
dec
test
ss
test
adc
push
movsb
ficomps
adc
outsb
popa
neg
movsl
rcrl
cmp
jg
cltd
mov
jb
stos
sub
enter
into
dec
lods
lret
lret
int
add
jmp
mov
dec
mov
call
or
loope
cmp
xor
inc
lock
nop
jecxz
outsb
js
adc
fstpt
pop
pop
dec
xchg
int
dec
jo
arpl
jno,pt
enter
ss
jp
cltd
inc
mov
jnp
lods
int3
dec
ds
sub
or
enter
pusha
sti
imul
mov
pop
fsts
fldl
jge
rol
call
outsl
mov
loopne
pop
dec
jno
stos
iret
inc
loopne
jne
ret
pop
mov
push
sbb
cmpsl
jle
mov
cmp
mov
in
pop
outsb
sub
fldl
mov
ret
sub
rcrb
mov
mov
mov
inc
sbbl
inc
pop
jb
adc
add
mov
std
or
fsub
in
mov
mov
xlat
cmp
orl
ds
pop
add
fs
push
clc
shlb
jl
add
cmpsb
pusha
mov
inc
loopne
add
adc
call
test
dec
lret
mov
icebp
repz
or
cltd
cmp
sub
cmp
sbb
mov
add
dec
pop
or
xchg
shrl
cltd
mov
cltd
jmp
pop
inc
and
movl
repz
and
cld
mov
xor
fnsave
lods
dec
ds
aad
jg
or
push
and
xor
iret
jne
les
movsl
mov
lea
mov
sbb
xor
stc
push
adc
cmp
and
xchg
mov
les
xor
out
mov
pop
in
push
jb
jl
popw
stc
sbb
xchg
ss
cld
cwtl
movsl
and
cld
out
adc
popa
mov
mov
adc
push
sarl
imul
sub
jg
test
lret
je
mov
and
push
lods
pop
lcall
in
test
lods
movsb
daa
mov
dec
mov
dec
leave
pop
pop
mov
cmp
outsl
cltd
add
mov
cmp
mov
gs
shr
xchg
inc
loopne
pop
leave
cmp
mov
es
mulb
or
nop
jno
cltd
cmpsl
push
xor
in
in
loope
sub
in
int
add
nop
add
lods
mov
inc
pop
mov
nop
jae
shrl
hlt
cltd
es
jae
cmpsb
add
mov
sbb
add
pop
mov
inc
lahf
movl
nop
test
insl
sbb
and
sub
cwtl
and
std
loope
sub
mov
pushf
jmp
xor
push
cmpsb
adc
jecxz
rcll
push
rcrb
xchg
aas
iret
jle
cmp
mov
outsb
imul
pop
push
inc
pop
stc
out
bound
ret
or
ljmp
nop
xchg
leavew
inc
stos
mov
mov
push
aaa
add
loope
arpl
adc
sub
stos
mov
mov
mov
pop
rcrl
adc
repnz
adc
sar
jns
jno
sbb
loopne
pop
sub
fldcw
push
sbb
stos
nop
sbb
cwtl
in
dec
lahf
xchg
jne
data16
in
lcall
imul
xchg
xlat
cmpsb
cwtl
repnz
lock
shrb
sarl
xlat
scas
jmp
mov
fucomip
inc
int
jne
aas
in
dec
inc
loopne
inc
add
mov
adc
loop
mov
leave
mov
das
repnz
pop
mov
mov
and
push
mov
lock
fwait
inc
jle
add
push
clc
lret
xchg
and
xlat
mov
adc
xor
dec
adc
aaa
outsl
dec
lahf
int3
xchg
lods
addl
scas
jp
pop
call
addr16
scas
lea
lds
push
in
fld
push
cld
loopne
lahf
push
pop
imul
xchg
xchg
mov
and
es
fidivs
xor
push
insl
rclb
out
pop
mov
or
test
push
scas
int
arpl
and
in
lods
pop
push
fcmove
pop
ret
movsb
push
mov
lret
inc
xor
pop
jge
out
repz
sbb
add
add
mov
sbb
addr16
lret
sarl
ljmp
call
push
in
sbb
sbb
in
pop
push
lret
shll
mov
lahf
pop
das
add
popf
mov
outsb
xchg
stos
cmp
jns
push
or
mov
push
mov
and
pushf
lock
inc
je
or
fdivs
dec
add
pop
cs
jecxz
mov
push
testl
popf
cmp
lods
test
push
leave
mov
dec
and
cmpsb
shl
xchg
or
sub
mov
push
pop
int
mov
jne
sbbl
addr16
pusha
mov
or
cld
push
stos
mov
lock
cmp
dec
int
sbb
adc
cmp
lret
fldt
int3
inc
jno
jp
or
sbb
pusha
mov
pop
iret
mov
and
sahf
push
sub
outsl
or
cltd
stos
sub
cmc
pop
ljmp
lock
add
mov
daa
call
mov
je
dec
push
imul
push
and
lds
aad
xorb
out
sahf
jb
sbb
cmpsb
add
mov
loop
or
add
cmp
fiadds
mov
jle
xchg
mov
lahf
adc
cmp
js
push
shr
lock
and
sub
std
dec
dec
fwait
aad
sbb
cld
in
push
xor
add
or
or
add
jmp
mov
addr16
call
push
sub
and
int3
in
xchg
jae
push
sti
popf
inc
cmc
enter
push
sti
lods
mov
mov
pop
fldl
data16
aas
std
addl
add
and
adc
mov
aad
and
mov
lahf
inc
pop
je
mov
shl
out
es
dec
test
lds
fmul
ret
xchg
xor
sub
sbb
pop
pop
pop
or
and
loope
add
cmc
jl
and
xchg
jns
sub
fs
cmp
inc
shl
jae
packsswb
xor
fidivrs
mov
mov
in
jbe
xlat
jge
enter
inc
popf
lret
rclb
mov
mov
addr16
fildl
into
mov
sarl
pop
repz
bound
jno
sub
and
sbbb
repnz
imul
aas
stc
jg
out
push
cs
sti
and
scas
mov
pushf
mov
enter
mov
imul
dec
add
inc
adc
rcll
out
ret
mov
pop
popf
je
push
aam
mov
and
movsb
fisttpll
lea
insb
cmpsb
sbb
mov
testb
mull
sti
mov
sub
mov
mov
xchg
aaa
jmp
pusha
pop
xchg
int
push
shrb
lahf
inc
mov
lds
cmpl
mov
push
mov
cmp
out
or
push
jbe
dec
xor
fs
push
pop
jbe
mull
xor
aas
test
rcrb
adc
jl
in
dec
aaa
fldcw
rcr
and
dec
inc
pop
push
adc
push
cmp
shrb
mov
mov
insl
fisttps
mov
imul
jle
js
insl
sbb
lahf
push
pop
jge
inc
adc
std
lret
and
or
subb
pop
jbe
jmp
repz
into
xor
dec
sbb
pushf
cli
sub
cs
cmpsl
cmc
fs
ja
filds
pop
cmovae
push
mov
sti
ds
and
or
sbb
cs
or
fiaddl
popf
aaa
sbb
gs
mov
inc
sub
jle
shll
ss
out
pop
jno
cs
inc
mov
in
mov
xchg
dec
call
dec
rorb
aas
loope
hlt
loope
test
lods
inc
fldenv
add
imul
shll
jbe
aaa
add
mov
inc
outsb
pop
movsb
rclb
dec
out
xchg
sti
mov
loop
out
mov
xchg
in
add
xor
arpl
mov
mov
mul
add
int3
push
pop
xchg
data16
insb
inc
xchg
push
in
sub
into
xchg
cs
je
mov
or
push
mov
mov
mov
inc
pop
and
std
inc
fstl
or
aad
lds
out
mov
mov
pop
les
ds
jp
xor
inc
pushf
inc
mov
cmc
and
pop
insl
ss
xlat
loope
mov
enter
mov
push
sbb
stos
addr16
mov
daa
sti
lahf
lods
push
fldlg2
jae
xchg
outsb
mov
pop
das
shrl
inc
inc
inc
push
mov
jl
pop
pop
int
jge
int
mov
icebp
sub
mov
cmp
sub
in
std
add
daa
in
outsb
testb
adc
lock
jo
jns
xchg
jo
out
mov
pop
pushf
cs
inc
lea
jmp
repnz
mov
ljmp
repnz
jmp
jne
add
movsb
std
inc
add
icebp
mov
push
stc
xor
vaddss
aaa
mov
subl
jecxz
sub
outsb
jns
pushf
fs
clc
xchg
movb
jp
or
sarl
call
roll
sub
inc
sub
xchg
push
in
in
incl
fisttpll
push
xorl
mov
loopne
mov
or
notb
or
xor
add
inc
jb
lahf
in
mov
int3
push
rcrb
sbb
sbb
jle
add
adc
sbb
sub
faddl
aad
lods
xchg
push
ret
xchg
aas
cmpsb
shll
mov
clc
ljmp
push
sbb
popf
push
xor
mov
xor
push
movsl
pop
scas
iretw
sub
mov
out
loopne
adc
mov
pop
xlat
mov
mov
pop
iret
jno
lock
push
ret
hlt
dec
push
enter
mov
push
inc
push
popf
mov
mov
lret
divl
or
add
xlat
inc
outsb
mov
lcall
cmc
shlb
push
lret
fnstsw
loope
outsl
fstps
imul
enter
adc
out
xchg
shufps
mov
inc
je
stos
or
mov
mov
inc
insb
push
mov
sbb
xor
fwait
xchg
pop
fiadds
imul
jbe
pop
inc
fstp
and
scas
push
sbb
mov
jmp
jp
call
xchg
in
sub
daa
nop
ja
jae
push
sub
iret
pop
add
or
mov
jg
push
cmp
or
jle
bound
popa
xlat
xchg
imul
inc
xor
fisubrs
outsl
aas
mov
repz
andb
mov
xchg
pop
push
repz
mov
ds
fwait
xor
test
shlb
mov
xor
and
stc
insb
cmp
cmc
pop
test
shl
popa
pop
sub
stc
pop
pop
loop
sti
cld
stos
mov
pop
subb
cmp
stos
rcll
mov
fistpll
sbb
xchg
inc
pop
jge
mov
in
iret
iret
dec
daa
mov
dec
inc
insl
cmp
movsl
dec
lods
xchg
loopne
popa
aaa
call
mov
cltd
mov
mov
xchg
pop
lods
push
adc
add
insb
popf
jl
xchg
stc
hlt
mov
xor
call
aad
icebp
js
cmp
pushf
insl
mov
fisubrl
fldcw
lock
test
out
ds
and
leave
pop
mov
clc
push
fsubrs
fcompl
imul
jge
pushf
dec
sub
jb
lods
stos
xchg
cmp
movl
call
mov
add
add
dec
push
adc
or
inc
pop
sahf
scas
mov
sub
or
push
or
lahf
shl
stos
jp
pop
mov
sub
push
imul
and
pop
mov
xchg
iret
leave
cmp
xchg
sti
adc
and
cmp
neg
sbb
das
push
roll
in
push
xchg
test
mov
int3
stos
jb
shl
mov
popf
cmp
push
lea
inc
movb
xchg
jb
xor
sbb
arpl
sub
xorl
dec
lds
mov
mov
icebp
xchg
pop
cltd
inc
insb
shl
adc
sub
add
mov
lea
hlt
dec
es
adc
dec
iret
movsb
push
push
scas
add
adc
xchg
lods
fs
jmp
subb
push
loop
arpl
insb
mov
std
sbb
aad
and
mov
and
sti
sbb
in
cmpsb
ss
mov
inc
dec
cmp
inc
mov
lret
pop
ja
dec
pminub
cmpsb
adc
fndisi(8087
xchg
pop
pop
xchg
in
fwait
ret
stos
and
jle
fwait
gs
loope
xchg
data16
mov
cmp
ret
shll
int
jb
jb
push
fldcw
and
cmpsb
rorb
push
int3
lret
sbb
fsubrl
lods
int3
push
sub
mov
cmp
pop
into
dec
mov
fsubrl
ss
jle
icebp
fistpl
add
push
jle
test
mov
testl
push
aad
cmp
shlb
pop
cmp
xorb
mov
dec
mov
aaa
mov
xor
pop
mov
xor
es
xor
fdivp
cltd
push
sub
sub
pop
in
push
pop
aam
fildll
push
mov
call
jno
inc
sbb
adc
int3
add
testl
lcall
lahf
mov
test
add
jge
fsubrs
js
outsl
adc
pop
dec
xchg
sti
cmp
pop
lods
jp
or
pop
inc
dec
adc
sahf
out
push
and
jp
cmpsl
test
dec
xchg
imulb
popa
pop
sbb
loope
pop
or
fmull
data16
xorl
mov
jae
push
shlb
test
adc
dec
push
xchg
xlat
daa
xchg
add
test
negb
push
fwait
xor
sub
mov
movaps
push
fs
xor
and
cmpsb
outsl
cmp
adcb
jae
in
jne
cmp
push
fcomip
pop
in
cs
push
aaa
pop
adc
pop
outsl
cld
dec
fisubrl
cmp
sarb
push
pop
movsb
and
mov
push
outsb
shr
daa
iret
add
inc
mov
insl
xchg
sub
mov
xchg
fcmovnu
jmp
popa
adcb
jecxz
lea
cmpsb
fstl
testb
sub
insl
push
inc
push
arpl
loope
pop
cld
mov
scas
sub
arpl
jmp
test
shll
mov
fsubs
je
dec
shlb
in
loop
movsb
inc
push
pusha
in
test
fsubl
add
mov
adc
xchg
xchg
das
aaa
jb
xchg
aam
stc
mov
and
sbb
sbb
mov
inc
jbe
adc
pop
mov
adc
subl
sbb
pop
call
fcoml
xor
addr16
dec
aas
jmp
shlb
loopne
push
mov
xchg
ds
inc
mulb
pop
test
jg
pop
cmp
pop
leave
insb
in
adc
or
push
xchg
addr16
daa
mov
stos
inc
sub
push
dec
or
jecxz
jecxz
mov
or
sbb
pop
push
and
cmp
xchg
fwait
call
scas
mov
clc
push
jo
orb
test
jmp
mov
cmp
cmp
jmp
enter
xchg
and
in
insb
cmp
idivb
push
outsl
popa
dec
adc
add
call
ja
out
and
adc
dec
jmp
cmc
popa
mov
pop
and
or
ja
aaa
cmpsl
lds
pop
mov
mov
loope
push
imul
jb
pusha
or
inc
rcr
enter
inc
pusha
push
or
and
shr
mul
sbb
sub
xor
mov
imul
jae
mov
pop
fwait
test
jmp
xchg
adc
mov
ret
fmulp
mov
inc
adc
inc
rcl
xchg
push
sarl
adc
jg
repz
pop
mov
jle,pn
pop
popf
cmc
lret
dec
test
mov
jb
adc
mov
cwtl
pop
imul
out
adc
inc
xor
scas
lcall
mov
lods
push
adc
pop
jae
mov
mov
in
pop
sub
lahf
pushf
jg
jae
jno
loop
and
pushf
adc
adc
sbb
adc
xorb
cmp
xor
jo
into
sub
mov
daa
adc
sub
cmp
push
mov
out
fsubl
rorb
cmc
pusha
ret
inc
xchg
inc
or
clc
mov
sub
sub
dec
push
jp
mov
movq
pop
ret
shlb
imul
adc
lea
sub
adc
jo
cs
mov
mov
call
in
scas
lret
lret
add
adc
in
xor
sub
int3
push
aam
xor
je
mov
sbb
push
pop
or
dec
push
lods
mov
sarl
popf
cmp
or
sahf
test
xor
nop
jae
lcall
adc
and
mov
add
dec
inc
jp
aam
cmpsb
jne
jle
sub
shlb
les
hlt
cltd
dec
shlb
cltd
fcmove
xchg
mov
inc
sbb
mov
incl
popf
push
sub
jp
test
cmp
es
jecxz
cmp
sbbl
mov
aas
ret
ret
adc
fmuls
sub
ret
cltd
mov
daa
fadd
pop
inc
adc
rolb
popa
adc
jecxz
jnp
hlt
mov
sahf
testl
out
out
outsl
aas
shl
push
sbb
pop
pop
sub
popa
jae
add
mov
idivl
mov
sbb
mov
and
out
xor
daa
or
adcb
scas
add
mov
loopne
pop
nop
repz
cmpsb
push
or
test
orb
mov
out
insb
stos
sti
cmp
in
push
mov
addr16
mov
sub
xchg
inc
mov
jnp
sbb
nop
iret
das
jp
sahf
arpl
push
pop
jne
jo
testb
fisttpl
popf
jle
cltd
stos
fisubrs
inc
pusha
add
pop
sbb
pop
and
outsb
mov
jle
pop
jne
cmp
push
jb
mov
sbb
inc
or
scas
ja
adc
sub
outsb
add
push
sub
fidivl
xor
dec
jg
and
icebp
xor
loope
xor
je
dec
mov
xorl
out
sbb
subb
stc
pop
aas
mov
mov
cmp
enter
frstor
rcrl
das
and
or
mov
ljmp
lods
dec
jnp
push
les
pushf
out
cmc
xchg
xor
cmc
ror
subb
mov
daa
mov
pop
jnp
adc
mov
lods
and
f2xm1
test
andb
arpl
scas
push
es
jmp
ja
cmpsl
call
adc
xchg
and
mov
cmp
and
or
pop
jmp
pop
popa
jae
movsb
cmc
je
ret
outsb
insl
test
enter
outsl
out
adc
jae
scas
aaa
testb
sub
jns
push
adc
mov
sbb
in
xchg
popf
sbb
sub
call
flds
jno
loopne
cmp
js
dec
dec
dec
add
dec
outsl
imul
add
mov
mov
mov
mov
and
adc
or
out
pop
sub
fnstsw
rcrl
xchg
and
mov
xor
lock
add
aad
add
mov
enter
cli
push
lods
pmaddwd
bnd
rorl
cmc
mov
jle
inc
jb
jno
pop
and
add
popf
inc
inc
xchg
push
repnz
push
fwait
addb
iret
pop
movsb
pusha
mov
xor
aaa
inc
sbb
insb
pop
dec
mov
imul
mov
xchg
sbb
xchg
push
push
loope
in
jno
ds
fidivrl
adc
aad
inc
pop
xor
stc
push
and
mov
mov
or
cmc
jp
clc
jno
cmc
jnp
pop
pop
bt
jle
mov
inc
or
mov
repnz
mov
mov
das
ja
jmp
loopne
dec
out
xchg
xchg
loop
stc
loop
sub
cmpsb
popf
pop
repnz
popf
jp
and
cld
mov
jg
cmp
je
lcall
dec
or
ja
or
add
adc
push
sub
xor
pop
sbb
mov
dec
push
inc
jne
cwtl
std
leave
xor
nop
jb
orl
jns
loop
sbb
into
sti
pop
and
int3
in
out
fcompl
ss
lds
mov
mov
jmp
imul
pop
inc
aam
aaa
adc
idivb
in
adc
cmp
sub
dec
shll
add
and
test
repnz
xorb
iret
ljmp
testl
sub
repnz
xchg
mull
dec
cld
popf
add
adc
sbb
inc
movsb
into
jmp
sbb
das
ds
call
and
icebp
jo
stc
jno
orl
fwait
sbb
arpl
xor
cmp
std
adc
fs
loop
out
cli
cmp
xchg
pop
ss
xor
out
mov
mov
xchg
clc
cmpsb
pop
inc
jp
testb
add
xchg
pushf
dec
lea
popa
jbe
jns
jp
lds
je
add
jae
or
sub
cmp
xor
jae
cmp
pop
jle
mov
mov
jns
mov
leave
mov
mov
cs
cltd
add
negb
aad
cmp
fldcw
add
jecxz
repz
mov
mov
mov
inc
mov
out
movsl
addr16
pop
leave
outsl
push
push
xchg
call
adc
fstl
ljmp
and
ds
fcompl
push
cmpsl
mov
repnz
jo
orl
fildll
loopne
in
sub
add
addr16
jle
pusha
fdivs
add
xchg
push
sub
pop
xlat
mov
out
aad
aad
sub
ja
mov
mov
pop
lds
sub
lea
pop
outsb
mov
inc
int3
fdivp
das
push
push
dec
pop
es
clc
addr16
int3
push
lahf
inc
adc
loope
pop
push
js
push
push
push
cwtl
pop
xor
sbb
cmpsl
mov
adc
pop
push
xor
aad
ja
sbb
ds
cmp
cmp
aad
mov
sbb
and
sbb
adc
sahf
imul
jno
mov
ror
jecxz
push
subl
mov
xchg
jo
push
adc
leave
dec
pop
push
pop
ret
or
lods
cmc
cmp
xchg
mov
rclb
push
adcl
popf
fucompp
sbb
in
stc
jne
cmp
out
bound
jbe
jmp
mov
cmc
mov
push
cmp
imul
mov
mov
mov
sti
fiadds
pushf
mov
jo
add
fwait
sbb
dec
shlb
cmp
lret
test
outsb
jmp
and
xchg
inc
mov
push
push
vmovshdup
lds
ljmp
lods
sub
lcall
mov
push
mov
lret
dec
stc
sub
adc
lods
add
xchg
cli
add
loop
cld
mov
cmp
negl
mov
aad
pop
insl
inc
mov
lret
sbb
xor
sub
cmp
dec
and
daa
in
add
fsubrs
arpl
mov
ja
pop
mov
push
fwait
rcrb
sub
pop
insb
arpl
lret
dec
pop
imul
inc
sahf
xor
fisttps
push
pop
insb
xor
push
jecxz
pop
xchg
pusha
cmpsb
in
lods
push
pop
out
insl
push
in
mov
pusha
lret
push
stc
jb
jbe
sbb
dec
enter
mov
addr16
dec
dec
pop
inc
je
imul
inc
cltd
ret
cli
mov
push
mov
or
jns
mov
sti
into
cmpsl
cmpsb
clc
arpl
popf
test
sbb
push
adc
scas
dec
mov
loopne
mov
or
mov
les
add
ja
jns
add
cmpsb
movsb
rorb
jae
std
dec
jmp
mov
int3
sbb
inc
into
jbe
sbb
pusha
push
sbb
push
xchg
data16
pop
movsl
jecxz
out
and
push
mov
jae
add
inc
test
or
das
add
imul
lret
jno
out
fiadds
icebp
addl
push
xor
xchg
insl
dec
push
test
ret
adc
mov
jae
xchg
cmp
cwtl
js
pop
movsb
cmp
stos
rcrb
popf
xchg
or
ja
mov
push
stos
xor
add
pop
inc
imul
cmp
popa
pop
scas
int
mov
inc
xor
in
sub
aad
mov
mulb
jnp
dec
pop
daa
cmpsb
repnz
xchg
sub
aas
cmpsl
cmp
cmp
push
es
mov
mov
fcompl
adc
xchg
inc
xchg
xchg
pop
push
int
lret
fs
sbb
gs
lea
test
mov
sbb
mov
sar
imul
push
and
dec
ss
xor
adc
xchg
cmpsb
xchg
mov
inc
push
dec
stc
xchg
jle
hlt
jno
mov
lock
rcl
pushf
xorl
dec
lret
stos
out
jne
sub
ret
pop
outsl
or
std
pop
into
hlt
enter
pop
and
push
xchg
cmc
outsl
clc
lret
loop
push
xor
test
adc
sub
out
cltd
cmp
jns
jl
sub
jns
xor
sbb
mov
mov
lea
mov
cwtl
lcall
out
xorb
or
jnp
and
xchg
aaa
int
test
sub
leave
dec
dec
pusha
and
cli
je
mov
inc
test
cmp
add
std
jecxz
dec
rcrl
dec
jno
imul
jl
jb
dec
cmp
dec
or
sti
popa
out
pop
add
imul
lret
sub
out
and
xlat
test
xor
add
xchg
or
mov
push
lcall
fdivrl
sbb
es
or
push
repnz
mov
out
xor
cmp
into
jns
jno
jmp
arpl
cmpsl
test
lods
mov
iret
mov
mov
int3
pop
sti
mov
add
add
clc
push
bound
jmp
xor
cmp
aam
jae
sbb
mov
jno
cs
sub
out
mov
outsl
in
push
push
es
aad
xchg
dec
pop
xor
test
push
cmpsb
scas
add
lahf
out
shrb
scas
mov
xor
jle
jae
mov
jno,pn
cmp
jo
pop
adc
icebp
fcompl
dec
mov
jle
decl
pop
jnp
xchg
cmpsl
mov
fsts
rcr
pop
xor
add
xor
mov
leave
out
xor
sub
dec
push
cmp
cmp
out
test
pop
in
aaa
mov
pop
leave
mov
push
popf
lcall
xor
cmp
push
or
sbb
shll
lods
add
insl
sahf
add
jle
js
decl
xorl
outsb
mov
mov
and
or
mov
and
push
das
add
mov
aas
or
jge
lcall
es
push
mul
in
and
pop
jp
mov
jo
rcrl
cmp
int
or
jle
ret
sub
mov
nop
xor
pop
lods
adc
inc
xchg
mov
out
in
enter
jb
lock
mov
xchg
shll
mov
or
sahf
mov
sti
inc
inc
sbb
mov
sub
adc
add
and
ffree
add
inc
fistpll
ret
or
cmp
xchg
lcall
jg
test
stc
mov
cmp
add
test
int
add
arpl
inc
adc
or
pop
out
or
xchg
mov
xchg
push
and
cmc
pop
pop
inc
ds
imul
xor
mov
nop
sbb
das
shlb
movl
ljmp
push
push
rcll
lret
movl
cli
mov
pusha
js
aam
or
ret
mov
inc
shll
divl
cmpsb
out
jnp
sbb
dec
fcmovne
mov
inc
dec
insb
or
jnp
lock
imul
jne
xlat
pop
faddl
imul
insb
hlt
fwait
mov
rorb
mov
sbbl
xchg
mov
cli
or
jmp
lcall
fisttpll
test
lret
out
ljmp
fucomi
test
jbe
sub
jns
jmp
sbb
cmp
and
xchg
xchg
mov
dec
xchg
test
push
mov
fisttpl
rcrl
and
mov
enter
or
das
dec
outsb
jnp
sub
int
cwtl
push
popf
push
push
mov
into
out
inc
cmc
mov
sbb
xor
mov
ss
sub
cmp
leave
stc
xchg
xchg
jg
sub
push
out
imul
mov
or
mov
cmpsl
ds
insl
cmp
add
loop
or
sbb
or
cmpsl
popa
cmpsb
cmpl
mov
adc
jo
inc
sub
imul
add
cld
pusha
xchg
sub
jecxz
repz
movsl
cmp
xlat
in
sbb
cmpsb
icebp
pop
or
mov
mov
push
lock
fldl
in
fcoms
dec
push
dec
add
dec
stos
dec
adc
in
push
repnz
ja
dec
int3
fld
add
je
and
cmp
xor
out
idivl
out
mov
arpl
jno
negb
fs
mov
push
in
ss
xchg
xchg
add
shl
sbb
rorb
jae
pop
mov
mov
push
rcrb
inc
push
push
push
outsl
cmp
push
roll
mov
pop
popf
mov
lret
or
fiadds
or
outsb
jge
imul
and
cmp
test
das
fistpll
in
movsl
mov
xchg
pop
or
ja
push
or
dec
out
jl
fistpll
pop
in
sahf
enter
pusha
test
mov
sbb
push
cmc
ss
mov
insb
lahf
push
pop
movsb
shrb
sub
sub
stos
enter
cmpsb
cmp
movsl
shlb
rcl
aas
js
movsb
int
xchg
jo
mov
sub
rolb
test
mov
sahf
aaa
cmp
push
dec
popf
cmp
dec
jne
cli
scas
jmp
sub
mov
pop
repz
xchg
lods
fsub
lock
outsl
aad
test
mov
mov
and
jae
pop
mov
sub
xchg
sbb
and
xor
pop
ljmp
dec
ret
jo
push
dec
movsl
push
lahf
jb
mov
ss
jge
repnz
bound
fidivrs
into
add
cmpsb
test
sub
loop
mov
push
aam
pop
mov
lahf
movsb
fstps
stos
sub
loope
pop
inc
inc
cmp
sub
dec
xor
bound
mov
jns
mov
lock
xor
or
inc
hlt
test
ret
mov
sbb
jb
loope
pop
pushf
mov
and
xchg
stos
mov
icebp
adc
divb
test
mov
ss
and
addr16
jne
es
pavgb
mov
sub
pusha
fisttps
dec
push
add
inc
push
daa
lcall
or
pop
insb
push
and
pop
test
adc
loope
mov
jge
daa
or
es
shll
inc
push
jmp
cmp
sbb
ds
mov
xchg
inc
and
mov
jge
pop
or
ret
ds
test
pop
repnz
es
mov
iret
lahf
movb
xchg
gs
add
bound
orb
jns
jnp
push
mov
int
cpuid
mov
nop
mov
shll
pop
repnz
sbb
test
and
push
xchg
jns
sub
mov
push
fwait
cmpsb
lock
dec
insl
jne
fwait
mov
inc
aas
fwait
js
push
mov
xlat
aad
adc
scas
stc
jl
and
cld
adc
cmc
jmp
mov
fistpll
sub
mov
and
incb
inc
testl
in
sub
das
mov
adc
mov
ret
push
sbb
push
add
pop
fs
in
push
add
lahf
mov
loope
ljmp
or
mov
das
sbb
test
mov
mov
cmp
mov
sbb
xor
xor
insb
push
push
mov
push
adc
push
push
ds
mov
xchg
or
shlb
insb
mov
jnp
sbbl
arpl
loope
and
pop
das
and
pop
and
pop
add
push
pop
or
adc
lods
push
nop
sbb
cld
sahf
stos
popa
cmp
adc
adc
cmp
xchg
mov
lods
cmp
std
nop
shr
add
mov
lods
add
xor
loopne
xchg
daa
jns
mov
dec
dec
inc
inc
jo
push
push
dec
push
and
ljmp
lcall
and
cld
cwtl
je
in
in
xchg
cmpsb
pop
push
push
in
stos
repnz
or
ja
orb
fiadds
lods
jl
test
rclb
push
adc
cmpsb
sti
adc
push
aas
lea
mov
fnstenv
test
js
cwtl
ficoms
push
sbb
lods
xor
repnz
push
fldenv
sub
cli
jno
lock
shll
jl
push
ficompl
xor
int
mov
jno
mov
int
mov
jb
pushf
loope
cltd
sarb
enter
mov
and
leave
out
scas
add
inc
aad
mov
sbb
sbb
cmp
jbe
xchg
inc
xor
es
push
cs
rol
mov
sbb
fstpt
mov
or
fldcw
add
clc
dec
cmp
sub
add
out
rcrl
loop
cmp
aas
cli
push
mov
movsb
out
pop
pop
das
cmp
jns
jecxz
enter
mov
loop
addb
cmp
pop
dec
push
dec
test
leave
jno
mov
sub
xor
ret
cld
dec
mov
shrb
cmp
outsl
push
int
or
mov
dec
push
scas
test
sub
enter
add
push
inc
cmc
aad
dec
mov
sub
mov
push
push
sub
xor
or
stos
jo
mov
xchg
inc
roll
leave
cltd
add
xchg
ret
clc
cmp
push
push
push
scas
mov
and
lods
cmp
fwait
ss
xor
popf
cs
sub
js
aas
aam
xor
mov
xchg
jns
cmp
push
test
pop
adc
xchg
inc
jbe
xchg
dec
and
sbb
inc
test
fbld
repnz
and
adc
dec
popf
fwait
pop
dec
out
in
mov
or
out
pop
scas
add
cmp
dec
sbb
pop
and
ret
push
dec
sub
pop
fists
push
nop
jecxz
dec
iret
jne
les
jno
sti
push
clc
sbb
and
std
lea
fldcw
dec
sti
mov
dec
mov
mov
mov
adc
push
test
jl
jo
jmp
add
lods
ret
mov
push
push
dec
outsb
outsl
mov
enter
das
xchg
fcmovu
dec
and
sub
and
xor
in
loopne
addr16
data16
jno
ss
jno
mov
gs
loop
cmp
pop
inc
cltd
dec
scas
popf
fistpl
push
push
push
cltd
loop
mov
jbe
flds
jecxz
sbb
pop
pop
mov
iret
aas
arpl
sub
fidivs
out
lock
int3
inc
pusha
dec
mov
mov
ret
pop
cmc
xor
or
jl
ss
cmp
xor
mov
arpl
cmpsl
popa
scas
aas
push
pop
out
fsubl
fucomip
and
imul
aam
hlt
or
repz
scas
or
enter
push
mov
mov
fwait
cmp
mov
in
mov
add
mull
cli
fwait
cli
sub
fcomps
lahf
xor
mov
sub
sub
sar
pusha
loop
inc
inc
in
fs
cmp
hlt
enter
inc
dec
sub
dec
std
sbb
int
fdivr
or
data16
and
out
inc
mov
sbb
pop
push
ret
ret
je
pop
sbb
insb
jae
ljmp
dec
aam
mov
push
or
out
or
movsb
test
pop
gs
push
leave
xchg
pop
sbb
addr16
addl
cmpsb
jne
add
mov
and
roll
sbb
ror
in
imull
repnz
push
inc
test
xor
inc
and
mov
dec
and
mov
push
push
cwtl
call
call
vxorps
mull
pop
sar
mov
dec
xlat
adc
sbb
jbe
ljmp
popa
xorb
dec
test
and
push
inc
pop
inc
fistpll
adc
jno
insb
xor
stos
aad
mov
aaa
pop
aam
xchg
into
cmp
pop
gs
fcomi
cmp
mov
jecxz
aam
mov
sub
jge
hlt
cmp
repz
sub
mov
dec
xor
adc
inc
aad
lods
pop
movsl
clc
out
movsl
clc
aaa
xchg
repnz
mov
leave
jo
xor
adc
out
dec
fimuls
dec
jae
fisubs
jne
sarl
mov
data16
push
mov
dec
xor
out
mov
stos
testl
push
mov
xchg
adc
or
and
jge
hlt
imul
mov
insb
das
mov
rcrl
loopne
lcall
jge
cmp
pop
movsb
cmc
push
add
bound
xchg
jecxz
xchg
inc
mov
pop
mov
mov
cli
pop
lret
or
pop
push
test
xor
mov
and
pop
loope
and
out
jg
jo
xchg
enter
imul
clc
iret
mov
repz
jo
call
sbb
repnz
pop
iret
cmpb
push
mov
loopne
fisubrl
lock
add
out
mov
int3
mov
and
jl
xchg
popa
lods
sub
ljmp
mov
loop
pop
jg
sbb
sahf
mov
push
push
scas
xlat
gs
add
movzwl
push
jge
cmp
adc
adc
mov
push
addl
bound
int
dec
cld
cltd
aas
or
mov
cltd
jge
test
adc
push
int
cltd
dec
nop
adc
lods
mov
inc
pop
stos
inc
js
xor
icebp
and
imul
jne
popf
or
testb
rorl
xor
daa
jno
push
scas
cwtl
stos
sub
in
xchg
jbe
pop
ljmp
ljmp
xchg
add
outsl
inc
fiaddl
mov
xor
cs
push
sub
iret
mov
fcompl
push
cmp
push
mov
subb
rorl
jle
jno
xchg
jae
rorb
orb
in
cmpsb
mov
sub
adc
fcmove
aad
inc
lret
sbb
paddsw
imul
push
pusha
sbb
cmp
sahf
testl
cmp
addr16
mov
and
push
xchg
mov
or
pusha
mov
or
ja
fistpll
out
mov
in
inc
outsl
add
sbbb
adc
inc
fwait
les
stc
lds
lds
fwait
mov
shr
popf
xorb
sbb
mov
sahf
enter
jle
aas
test
push
xchg
je,pt
in
mov
adc
and
loopne
cmp
mov
aad
lock
pop
aad
int
inc
and
mov
addl
ja
lods
leave
iret
cwtl
inc
mov
scas
imul
inc
add
fnstcw
fcmovnb
jbe
push
adc
lock
cmp
adc
cs
inc
clc
fs
cld
rcll
mov
ja
push
pop
rcrb
int3
loopne
jbe
into
cwtl
and
cli
jg
push
pop
pop
mov
jnp
push
ret
dec
adc
lret
inc
mov
mov
dec
fnstsw
sub
push
jle
lcall
sbb
mov
out
pop
mull
adc
jmp
popa
cmpsl
inc
jle
dec
pop
push
mov
adc
xchg
lret
mov
adc
sbbb
mov
mov
lds
jp
lret
mov
dec
out
mov
cltd
iret
sub
outsl
mov
and
xor
insl
pop
stos
daa
mov
out
mov
adc
jg
or
ljmp
std
in
cwtl
int3
in
cmp
aad
push
hlt
sbb
jle
adc
jecxz
xor
mov
scas
out
cmpsl
mov
aad
lahf
imul
test
enter
mov
xlat
and
cmp
inc
ljmp
xor
xor
cltd
pusha
inc
jp
mov
lret
inc
push
xchg
inc
neg
fiadds
push
or
rcrl
mov
sub
clc
lret
dec
xchg
push
lea
xlat
jae
in
roll
shrb
xchg
xor
sahf
sti
xlat
xchg
cmpsl
repnz
mov
pop
pop
add
es
adc
push
sub
clc
mov
movsb
push
adc
add
icebp
rcrl
push
imul
fwait
or
nop
iret
call
test
testl
and
pop
fmuls
sub
rclb
jp
cmc
jno
scas
sbb
push
sbb
xchg
loope
outsb
and
xor
jbe
aaa
xchg
sbb
repz
mov
and
arpl
xor
jb
and
sahf
fstl
flds
push
jle
add
jmp
aad
push
sub
lahf
insb
in
sbb
xchg
repz
jmp
adc
jecxz
in
imul
mov
icebp
mov
ds
mov
and
outsb
iret
add
xchg
rclb
jne
inc
xchg
or
jmp
sub
and
or
pop
mov
mov
add
pop
jns
lcall
add
lods
jecxz
and
rcr
or
lea
lods
test
xchg
mov
adc
outsl
clc
mov
cmp
fldt
fildl
mov
int3
sbb
dec
insl
jg
mov
push
pop
rcr
or
pop
sub
push
sub
xlat
dec
mov
sub
and
add
and
pop
rclb
xor
sub
adc
pop
shrb
xchg
subb
mov
cwtl
loopne
adc
add
fidivs
icebp
shrl
inc
ljmp
cs
mov
je
xor
jge
add
mov
outsb
adc
dec
sbb
xchg
stos
insb
lcall
push
mov
cmpsb
mov
in
dec
or
jecxz
lds
pop
mov
pop
aas
bound
repz
or
dec
bound
and
adc
sbb
int
xchg
adc
dec
xor
repnz
push
jns
add
dec
ja
imul
or
cmp
aaa
es
test
sar
mov
mov
int3
outsl
sub
sbb
ja
aam
mov
mov
into
loopne
mov
pushf
jge
ss
cli
adc
mov
dec
repnz
cmp
imul
pop
xor
push
or
movsl
dec
imul
and
popa
sbb
fidivrl
leave
mov
push
and
and
sti
push
sub
mov
insl
add
jno
stos
pop
jae
shll
xchg
xlat
dec
into
mull
and
lds
scas
jecxz
and
repnz
pop
js
pop
xor
dec
fsubrs
xor
inc
jae
test
adc
aad
mov
cmp
sbb
push
cmp
shll
dec
add
sbb
pop
mov
stos
cmpsl
sbb
adc
scas
enter
mov
jmp
pusha
mov
xchg
inc
dec
addps
sub
nop
sbb
and
inc
inc
ret
stc
adc
ds
cmp
and
jmp
push
push
cli
fsubrp
in
xor
out
inc
mov
adc
test
pop
dec
push
loop
pusha
or
aad
pop
xchg
ret
jle
repz
xchg
xchg
inc
xchg
inc
cmp
push
out
lcall
add
adc
loop
insl
sbb
xchg
sub
out
pop
rol
xor
mov
ljmp
loope
gs
fwait
adc
xor
jmp
xchg
adc
dec
push
jp
mov
pop
xor
lods
dec
insl
decl
adc
out
mov
ja
scas
in
hlt
shrb
int
data16
pop
xor
dec
mov
and
push
mov
fdivr
sub
inc
xor
dec
js
out
cltd
fs
inc
xor
stos
push
mov
and
sub
push
dec
fimuls
int3
mov
andl
adc
fcomps
ffree
pop
xor
int3
fnstenv
int
and
cmpsb
rorl
inc
dec
cmp
lret
pop
mov
bound
mov
rcll
rorb
dec
fiaddl
daa
cmp
jnp
jmp
adc
xor
or
inc
add
in
sub
aam
ret
mov
or
mov
outsl
mov
cmp
repnz
push
sbb
xor
inc
sub
inc
mov
inc
add
insb
push
outsl
sub
std
mov
fwait
test
in
or
mov
mov
les
jg
and
mov
popa
sbb
sub
jb
sbb
adc
or
cmovb
add
pop
inc
jg
inc
mov
mov
xbegin
xchg
and
hlt
inc
adc
clc
xor
sub
out
mov
jge
lods
fmul
fs
enter
push
mov
in
pop
mov
aaa
int3
bswap
in
cmpl
popa
pop
mov
sub
addr16
je
sbb
daa
adc
call
loop
cli
stos
dec
jecxz
xchg
xchg
adc
lret
fstpt
out
jge
jmp
xadd
xor
pop
arpl
pop
push
pop
pop
push
inc
push
cs
in
mov
push
pushf
repnz
divl
cmpsb
pop
xlat
std
shlb
mov
and
loope
addr16
mov
call
jne
cld
jp
or
out
clc
out
movb
cwtl
mov
das
movsb
lods
shll
test
out
lcall
icebp
arpl
out
jns
pop
push
hlt
xchg
addb
loope
ss
jbe
in
stos
push
mull
mov
enter
inc
das
fcoms
shl
movsb
dec
lock
adc
mov
les
or
mov
rcll
scas
sub
pop
xor
gs
mov
jmp
jno
xchg
mov
sbb
inc
insl
lods
mov
call
stc
outsl
mov
or
es
and
imul
dec
push
push
icebp
les
pop
pop
xchg
dec
pop
jns
sub
arpl
in
imul
mov
sub
xor
jns
jne
jbe
jge
icebp
insl
cmpsl
imul
sti
loopne
rolb
jl
add
lcall
in
lret
jae
mov
dec
push
push
and
dec
cmpsb
dec
orb
cmp
imul
popa
and
clc
xchg
cmc
jg
or
cld
mov
mov
scas
lock
mov
sub
add
inc
xlat
cli
xchg
mov
testl
out
aaa
add
jne
xchg
aas
xchg
scas
cmp
adc
inc
mov
jge
out
cs
dec
cmp
lds
movhlps
mov
or
lcall
fcompl
and
dec
or
dec
or
lcall
addl
mov
mov
pop
mov
push
xchg
and
push
jg
cltd
scas
cmp
cwtl
mov
je
icebp
pop
pop
lea
add
cmp
xchg
pop
mov
adc
fisubrs
or
mov
xchg
lea
xchg
and
outsl
adcl
addr16
xor
push
or
pop
dec
stos
cmp
xor
mov
jae
nop
add
dec
lock
cmpsl
pushf
pop
push
inc
dec
fcompl
inc
pop
loop
fidivs
pop
mov
xchg
arpl
fdivs
cmp
aad
mov
sub
lahf
sbb
ret
jns
inc
js
push
push
push
pop
lds
fcom
xchg
mov
mov
fistpl
jecxz
or
in
cmp
or
aaa
or
pop
add
mov
inc
mov
xor
push
xchg
shlb
jae
dec
nop
jp
jnp
push
cmp
push
repnz
pop
cli
imul
or
movsb
sbb
jb
sub
lret
inc
imul
jmp
or
pop
in
loopne
and
add
rcll
jae
cltd
add
mov
pop
dec
mov
xchg
push
mov
movsb
add
cmp
sub
repz
and
mov
adc
out
outsl
xlat
mov
jb
or
pop
mov
mov
data16
rcrl
dec
jnp
mov
loope
fadds
pop
rclb
cmp
arpl
xor
lahf
or
and
mov
loop
dec
push
loope
adc
xor
sbb
lea
pop
dec
insb
lret
addl
jecxz
test
andl
call
mov
loope
lret
xlat
data16
jns
fsubl
lods
lock
mov
push
jb
push
shrl
fstl
cmp
sub
sub
cvtps2pi
jmp
push
loop
dec
mov
jb
sti
fucomip
popf
imul
aad
aad
mov
pop
sbb
fistpl
push
sbbl
jg
push
lahf
out
inc
cwtl
xchg
les
xchg
mov
add
add
loop
je
filds
add
cmp
push
sarl
cmp
and
sbbb
sub
nop
movsb
mov
add
in
cld
std
aaa
lcall
inc
out
push
ret
xchg
xor
lods
pusha
mov
lcall
dec
test
repnz
inc
das
scas
push
push
pop
dec
xor
jbe
lret
inc
inc
jle
outsb
in
mov
enter
mov
mov
jne
mov
cmpb
lret
sub
jne
icebp
add
repnz
int
pop
xchg
js
mov
mov
js
cmpsl
mov
jmp
std
or
xchg
xor
dec
xchg
int
jge
xor
adc
push
ret
cmp
loop
lock
filds
lcall
mov
stos
insl
icebp
dec
dec
gs
popf
rclb
scas
sbb
gs
mov
mov
decb
in
mov
adc
outsb
into
dec
push
dec
lods
mov
loopne
jbe
cmp
insb
jb
enter
sub
ljmp
or
mov
outsl
shll
movsb
pop
testl
push
mov
repnz
in
imul
mov
and
cmpsl
pop
mov
sbbb
enter
inc
cs
popa
pop
hlt
xchg
jne
mov
into
jo
scas
mov
pop
pop
movswl
jo
mov
push
fldenv
ljmp
shlb
lahf
xor
outsb
lds
cmc
cltd
ds
ss
pop
mov
lea
jns
adc
jnp
movsb
movsb
pop
ror
cmp
push
cwtl
aam
jmp
popa
lea
cmpsl
jp
into
xchg
inc
or
push
pop
push
cmc
shrb
movsb
les
lods
mov
inc
sub
pop
fidivl
xchg
in
out
clc
mov
into
jno
and
fists
and
shr
push
xchg
inc
mov
add
fsubp
xlat
shrb
mov
fildll
pop
sub
call
fstps
addr16
mov
loope
lds
adc
pop
xchg
mov
cltd
push
xor
shl
mov
or
xor
pusha
xchg
ja
jmp
sub
pop
xor
fidivrl
je
inc
lcall
mov
jp
sub
add
push
jle
jb
add
outsl
subb
push
addb
mov
fimuls
mov
jnp
sub
aad
popl
out
repnz
mov
ljmp
leave
jnp
aam
jae
xchg
dec
jb
sbb
add
push
ds
or
mov
jle
xorb
das
push
push
cmc
mov
or
jmp
aaa
fiadds
std
jp
jle
dec
iret
movsl
je
arpl
ret
inc
orb
loop
rclb
sbb
in
in
xchg
adcl
dec
cmc
cltd
sti
sbb
add
xor
fstpt
mov
pop
sbb
hlt
cmp
inc
xchg
orb
push
add
dec
hlt
loopne
rcll
dec
mov
mov
sti
cltd
addr16
mov
inc
rcrl
in
test
stos
adc
inc
ds
jb
fsubrs
testl
aaa
cmp
bound
xchg
xchg
mov
aad
xchg
fiaddl
rcl
pop
stos
jmp
call
repnz
and
sub
xor
jb
insl
mov
fcomip
mov
test
insl
push
xchg
hlt
mov
jmp
adc
dec
cld
xchg
movsb
sbbb
add
xor
jbe
jo
sbb
nop
mulb
mov
inc
rcrb
pop
cmp
xchg
and
mov
xor
loopne
add
orl
jl
testl
sbb
xor
out
testb
int3
mov
sti
mov
sarl
xchg
pop
or
sbb
rol
pop
in
mov
cmp
je
shrl
imul
das
das
mov
test
daa
inc
aam
mov
outsb
roll
jns
pop
clc
fnstenv
jnp
xchg
mul
or
sbb
in
and
add
lahf
jp
rorl
push
je
mov
mov
cld
push
cli
aad
mov
push
and
dec
jno
inc
sbb
mov
jp
xlat
or
mov
enter
lods
dec
cmc
sbb
addr16
push
repnz
pop
ss
xchg
xchg
dec
cwtl
xor
sbb
inc
or
in
stc
mov
lea
jno
or
pop
mov
movsl
dec
sub
mov
dec
pop
xlat
in
cmp
xchg
push
cli
pusha
rcrl
fsubs
or
or
xor
int3
push
pusha
std
aas
inc
les
cld
xlat
fnstcw
shll
cmp
lret
ljmp
stos
aam
fisttps
and
sbb
dec
stc
shll
out
mov
and
aaa
jnp
and
lret
or
add
dec
dec
mov
bound
jne
nop
stos
cmc
mov
push
out
movsb
stc
jmp
negb
in
sbb
pop
jge
mov
or
jnp
mov
xchg
notb
arpl
stc
bound
cmp
push
mov
out
push
and
mov
data16
pop
inc
mov
sti
jle
je
loope
dec
leave
adc
jmp
in
lods
outsb
mul
add
prefetchwt1
cmpsb
add
push
shll
lret
shl
sti
or
push
cmp
shll
movsb
jg
push
icebp
lods
pop
mov
mov
in
dec
ficomps
rclb
push
mov
dec
jge
sbb
sti
mov
fsubrp
sbb
ret
or
pop
and
aad
inc
cmp
xchg
pop
dec
movhps
dec
or
out
lret
xor
adc
mov
lret
sub
popf
cmc
inc
stos
xlat
push
mov
jno
lea
sub
mov
dec
nop
dec
pusha
lds
and
into
out
ljmp
sub
jecxz
jmp
jmp
jne
mov
fistpll
aad
gs
lods
gs
nop
aad
sub
test
lret
stos
ds
mov
mov
inc
push
xlat
leave
jg
aaa
clc
pop
pop
testb
xchg
or
push
xchg
pop
cmp
ljmp
sub
call
in
mov
push
arpl
sbb
xor
dec
and
mov
test
mov
inc
repnz
sti
jge
in
cmpsl
lret
adc
mov
rcll
mov
incl
int
fs
bound
andl
sub
and
hlt
jno
repz
into
cltd
and
xchg
sahf
aaa
push
sbb
mov
xorb
setne
imul
inc
jbe
das
xor
pop
xchg
out
mov
loopne
es
mov
add
adc
ljmp
xor
mov
jl
dec
les
and
mov
fisttpl
xor
dec
push
sbb
inc
divb
push
mov
outsb
inc
outsb
loope
pop
ret
sbb
push
xchg
cmpsb
xlat
outsb
into
fdivl
stos
and
popf
xchg
icebp
mov
lret
jge
push
arpl
test
xor
sub
movsl
je
add
imul
mov
push
jnp
movhps
or
xorl
cmp
data16
aas
mov
mov
push
push
add
into
subb
out
pop
cmp
mov
add
adc
subl
xor
rcrl
fidivs
aaa
mov
jmp
hlt
mov
mov
mov
mov
dec
popf
xlat
cwtl
jne
stos
mov
adc
add
lods
inc
rcr
push
test
add
jnp
xchg
pop
xlat
fnstenv
xor
xchg
scas
cmp
jmp
mov
cmp
fisttps
cwtl
jne
xor
les
push
xchg
notl
cmp
jg
and
js
mov
jmp
nop
jecxz
cwtl
aas
add
std
mov
arpl
dec
sbb
sbb
xchg
cvttps2pi
mov
adc
lret
cltd
loop
pop
mov
in
mov
pop
je
jne
sbb
add
imul
push
adc
ss
lods
in
cs
out
push
xor
notl
or
push
mov
push
sbb
cmpsb
or
mov
gs
outsl
pop
mov
mov
jmp
lret
js
push
mov
nop
sub
dec
std
jge
mov
push
inc
cmp
jecxz
loopne
and
adc
int
mov
pop
mov
rol
dec
sub
xchg
add
inc
int
xchg
push
iret
xor
jle
gs
mov
push
sub
xchg
imull
sub
sub
insl
and
enter
pop
addb
cs
fdivl
xor
jl
jmp
stc
mov
sub
sub
xor
imul
xchg
adc
ret
add
push
cli
or
sbbl
je
out
jbe
jge
out
push
into
mov
xlat
push
cmp
xchg
jecxz
mov
dec
fstpl
mov
test
lcall
cmp
loop
push
cmpsb
sub
jo
ret
and
shl
lods
add
inc
popa
arpl
inc
pop
fdiv
mov
rcrl
repz
test
test
push
xchg
subb
enter
mov
loope
rcrl
xor
dec
lods
xchg
fstpt
xchg
cmp
sbb
dec
push
inc
mov
or
mov
xor
cltd
cld
testb
es
mov
push
fwait
pop
mov
cmc
cwtl
and
dec
adc
push
fmull
cmpb
test
in
js
dec
icebp
mov
mov
push
je
push
aas
and
jecxz
and
dec
dec
mov
lcall
mov
mov
fs
pusha
xchg
push
xor
adc
pop
mov
adc
mov
push
scas
mov
int
std
movsb
inc
dec
pop
cltd
xchg
scas
push
sub
inc
pushf
push
push
cmp
addr16
hlt
lods
inc
pop
mov
xlat
xchg
pop
cwtl
aas
mov
inc
test
mov
aaa
mov
int
imul
adc
mov
cmp
rcl
pop
lret
inc
andb
filds
jo
stos
jmp
dec
iret
push
jns
push
ror
cmp
shrl
add
cmp
fmuls
push
dec
and
or
fistps
or
repz
or
cli
mov
loope
sub
ja
mov
leave
inc
jecxz
mov
mov
cmc
inc
jg
fsubrs
push
add
into
sub
add
mov
adc
ja
nop
pop
hlt
cmc
aam
dec
cld
mov
jecxz
movsl
ss
imull
mov
test
daa
aad
xchg
mov
iret
clc
mov
xor
or
push
and
inc
dec
repz
aaa
mov
or
lahf
dec
mov
repz
cwtl
adc
pop
jnp
andb
push
adc
sarl
mov
jae
dec
dec
inc
data16
std
jmp
cs
fucom
xchg
inc
cmc
lock
fstps
adc
repnz
out
cltd
subb
mov
sbb
jmp
sbb
inc
sbb
or
mov
jl
or
lods
shlb
movsb
stos
in
xchg
fistps
sbb
mov
mov
mov
inc
xchg
divl
repnz
pop
and
dec
dec
mov
or
jmp
dec
xchg
mov
ja
shlb
jp
in
js,pt
das
and
dec
rcr
inc
mov
and
in
idivl
lods
sub
pop
aad
aad
and
lea
adc
sbb
out
mov
or
push
out
das
adc
lea
das
adc
fldl
dec
dec
out
xchg
dec
add
repz
jle
mov
dec
mov
gs
out
repnz
push
or
jne
paddusb
sub
adc
lods
sahf
cltd
out
out
js
mov
pop
sub
sub
pop
dec
test
sub
xchg
add
loopne
or
outsl
mov
aaa
xor
bound
lods
xor
aad
mov
test
sub
mov
or
jge
idiv
inc
pop
fbstp
fwait
scas
mov
sarb
push
lahf
insl
jecxz
aaa
cmp
sub
cltd
jae
mov
jp
dec
or
scas
cwtl
ret
jbe
pop
and
add
ljmp
ljmp
es
pop
inc
mov
pop
mov
mov
pop
mov
mov
outsl
push
insl
jecxz
cmp
aas
jp
out
pushf
jl
hlt
lret
aaa
and
arpl
stos
pop
or
sub
daa
popf
push
or
mov
imul
inc
adc
add
rcrl
cmpsb
lret
jg
cltd
push
xchg
pusha
jmp
jp
popa
jo
out
or
stc
jno
imul
test
sub
es
sbb
jge
scas
dec
call
pop
hlt
fwait
xchg
dec
dec
div
outsb
into
call
inc
jg
xchg
je
and
mov
sub
pusha
sbb
jne
adc
xchg
ds
cld
gs
mov
jns
jae
scas
fidivs
fdivrl
sbb
push
arpl
mov
cltd
out
adc
test
stos
into
dec
scas
jbe
cli
dec
int
cmp
aas
jb
gs
mov
imul
loope
cs
fs
hlt
jae
add
pop
pop
cmp
and
test
mov
xchg
jp
dec
test
xor
fs
sub
lret
dec
ret
sub
xor
out
pop
or
bound
dec
lock
push
pusha
jo
dec
out
sbb
jl
jp
lods
dec
and
imul
lcall
mov
repz
mov
sbb
xchg
xor
fstpl
fsubrl
popf
pop
das
js
aas
xchg
push
mov
mov
ja
stos
sub
add
movsl
and
jo
mov
push
test
cld
adc
mov
add
cmp
inc
cmp
loop
cmpsl
xchg
aas
int
mov
das
jnp
and
xchg
push
es
jl
leave
dec
lds
xor
inc
mov
movsl
xor
dec
inc
xlat
sub
insl
addl
lods
mov
jl
mov
and
pop
mov
popa
dec
and
pusha
test
mov
out
jns
mov
imul
pop
in
pop
idivl
hlt
jle
cmp
sub
addr16
jp
das
push
adc
imul
push
cmpsl
sub
sub
jecxz
pop
adc
fidivl
out
outsb
lds
jbe
les
dec
dec
jmp
push
pop
mov
rolb
int3
inc
mov
in
adc
shrl
fistl
mov
dec
fnop
out
or
pop
jb
mov
push
cld
push
and
sub
jmp
adc
aam
push
sahf
or
jle
leave
mov
pop
xchg
jns
pop
scas
mov
scas
sub
pop
sub
or
ljmp
cmp
cmp
nop
push
shll
shlb
xor
adc
sbb
xchg
jmp
in
lea
test
lds
pusha
push
push
sub
push
pop
divl
fwait
in
mov
sub
cmp
in
bound
leave
pop
jbe
mov
inc
lea
lods
mov
sub
push
cli
call
or
arpl
outsb
cmpsb
mov
aas
stc
jae
jno
inc
adc
mov
les
dec
sbb
add
push
add
lods
aas
pop
cwtl
hlt
jl
pop
rcrl
icebp
shrb
cld
sbb
xor
fbstp
clc
pop
loope
dec
xor
mov
xchg
push
xchg
push
ss
xlat
pop
pop
pop
push
sbb
mov
mov
push
cmp
sub
mov
mov
xchg
enter
ljmp
call
mov
notl
fcoms
nopl
pop
mov
and
cmpsl
cmpsl
cld
push
leave
roll
ret
les
push
jnp
test
int3
mov
mov
fnstsw
call
gs
xchg
cmp
testb
or
mov
xor
mov
push
cld
and
push
dec
mov
inc
daa
test
mov
mov
mov
roll
mov
push
xor
inc
psubw
test
stos
mov
jns
gs
sub
or
hlt
je
std
or
mov
push
mov
in
sub
sub
idiv
movsl
arpl
cmp
pop
repz
mov
add
movsb
push
cltd
mov
mov
inc
pop
adc
in
sub
sbb
mov
fcoms
sub
xor
push
pop
in
jmp
sarl
xor
push
popa
dec
sub
mov
insb
iret
push
mov
jmp
add
lds
add
adc
cli
shll
xchg
fiaddl
out
movsb
pop
add
mov
sbb
lods
push
mov
lods
stc
dec
inc
add
sub
xchg
push
ja
mov
jge
clc
mov
push
jno
rolb
push
insb
jp
xchg
pop
rorl
adc
adc
pop
mov
fnstenv
cli
pusha
icebp
push
rorl
repnz
xchg
dec
jo
dec
rcll
jo
pminsw
ds
lods
outsb
lahf
inc
sub
dec
sbb
bts
push
les
lods
sub
pop
mov
mov
loop
mov
mov
cld
pop
test
add
mov
xor
dec
addl
inc
dec
sti
mov
out
jns
mov
adc
mov
mov
xchg
mov
mov
insb
outsl
pop
ja
cltd
xchg
lds
cmp
mov
sub
cld
inc
ret
add
int
jmp
int
or
xchg
mov
sbb
das
and
mov
xor
sbb
xor
call
adc
sbb
mov
hlt
sub
inc
out
mov
scas
sbb
mov
xchg
std
movsl
aam
addr16
int3
xchg
lret
pop
pop
xor
je
pushf
and
jae
shl
fnstenv
and
rcrb
xchg
into
xchg
fs
aad
in
sub
in
mov
mov
jmp
push
jns
outsl
push
pop
push
rcll
pushf
dec
popa
cmp
mov
adc
cmp
jb
xor
mov
shrb
in
xchg
lods
cwtl
sahf
dec
scas
shll
scas
aaa
test
add
or
or
mov
and
xchg
movl
in
call
ds
cmc
mov
mov
mov
add
xchg
stos
stos
xchg
xor
fstpt
pop
addb
bt
cld
xlat
frstor
shr
das
inc
and
xor
and
sub
lahf
cmc
enter
add
and
fistpll
clc
pop
insl
and
arpl
sub
or
xor
into
xor
lret
adc
xchg
sbb
cmpsl
lahf
outsb
outsb
jp
ja
pop
imul
popa
lret
outsl
lock
push
test
mov
out
adc
xchg
fstl
sub
pop
hlt
sbb
xchg
je
cmp
sub
sbb
fs
call
mov
pop
xchg
fimuls
mov
stos
or
shll
or
pop
cmp
cld
daa
adc
jnp
adc
stc
cld
xor
cmp
int3
pop
sbb
test
pop
jecxz
js
dec
lods
mov
cmp
or
sahf
pop
int3
add
push
sub
cmc
mov
pusha
push
loopne
test
loopne
inc
xchg
shlb
imul
inc
out
sti
bound
xchg
jae
pop
jl
sub
insl
popa
pop
lods
addl
xor
leave
mov
jecxz
inc
scas
in
nop
imul
insl
out
mov
out
fnstcw
in
movb
xchg
cs
nop
lock
jle
scas
repnz
cli
fnsave
negb
cmpsb
dec
aam
repz
repnz
fidivl
ficompl
mov
jle
js
shrb
push
repz
je
rcrb
and
pushf
in
pusha
mov
mov
mov
and
add
mov
push
xor
mov
jmp
sbb
cmpsb
es
push
pop
push
ret
lds
pop
nop
or
mov
jnp
scas
lock
sub
lcall
or
mov
lcall
fildl
push
stos
dec
negb
pop
mov
or
cs
adc
or
mov
outsb
cmp
adc
std
dec
out
mov
push
in
jp
jge
add
push
lcall
or
inc
leave
mov
push
dec
aaa
loop
aam
dec
in
mov
loope
in
out
aam
sub
repz
xor
pavgw
movsl
repz
shll
inc
imul
or
jle
and
cmp
hlt
jnp
push
sub
bound
mov
sub
cmp
outsb
mov
mov
cs
sub
ds
push
shufps
or
push
addr16
pop
pop
inc
jg
rep
pop
mov
or
sub
or
pop
rorb
push
xchg
cmp
sbb
aam
shll
iret
mov
cmpsl
xchg
data16
xchg
adc
sbb
pop
loopne
mul
mov
mov
sub
cld
or
and
push
xorb
add
jp
mov
ficompl
push
rclb
mov
insl
test
movsb
scas
xor
pop
lcall
pop
movsl
subl
fcmovnu
leave
cs
sub
arpl
xor
mov
int
fisttpll
cmp
iret
sub
pop
insb
add
gs
sbb
aas
insb
lds
mov
mov
bound
lods
jecxz
mov
fs
enter
inc
adc
aam
es
stos
popf
in
mov
daa
add
loopne
inc
mov
lret
cmc
in
lcall
ds
fnstsw
xchg
fiaddl
in
jl
xchg
adcb
jne
jecxz
pushf
inc
inc
cmpsl
cmp
mov
adc
fs
aaa
fwait
shr
sbb
into
sbb
sub
jns
aas
fsubrp
mov
mov
mov
loopne,pt
lods
mov
out
push
mov
pop
stc
clc
push
repz
cmpsb
mov
inc
pop
andb
add
sbb
cs
dec
xor
gs
cmc
jno
shll
pop
loopne
dec
sub
je
cmp
and
cmpsb
mov
lret
push
pop
or
jns
xchg
xor
hlt
stc
aad
shl
jecxz
lods
cltd
lretw
and
lods
rolb
xor
pop
aas
fwait
js
out
dec
mov
pop
fucomi
scas
push
inc
insl
cmp
pop
std
cmp
mov
mov
sahf
insl
and
stos
push
sub
sbb
aaa
inc
sahf
sbb
jl
mov
stc
sub
nop
test
pop
mov
lcall
dec
loop
or
jmp
pop
notb
pop
shrb
aaa
ds
int3
fistps
movsl
pop
or
adc
pushf
leave
jo
fwait
cmp
loope
lcall
ss
adc
mov
dec
sbb
pop
jne
xchg
es
add
dec
mov
adc
adc
xor
jg
dec
push
pop
mov
lret
ret
aas
mov
rorb
push
pop
push
sub
cmpsl
ljmp
xor
cmp
nop
inc
sbb
fldt
mov
popa
jmp
adc
mov
imul
repnz
mov
add
stos
enter
ror
inc
sahf
cmc
and
mov
or
outsl
dec
jne
lret
xor
jmp
enter
mov
cmp
mov
stos
adc
xchg
cmpsb
addl
adc
loop
ja
enter
loope
adc
lahf
sbb
xchg
mov
ss
arpl
mov
inc
pop
lods
out
imul
sbb
lods
jge
adc
dec
jbe
imul
push
push
mov
or
or
cmp
dec
pop
xchg
cmp
das
jmp
orl
dec
mov
add
movb
lods
mov
aad
mov
sub
loopne
adc
sbb
sbb
imul
sub
jo
cmp
mov
lcall
mov
std
scas
iret
in
cltd
out
lock
push
mov
xorb
lret
in
call
nop
mov
xchg
out
arpl
out
loop
dec
mov
cmp
imul
and
push
dec
aaa
or
test
xor
repz
in
clc
sbb
mov
lret
cmp
andl
and
into
push
notb
mov
push
nop
push
scas
sbb
arpl
xchg
cmc
push
push
scas
fists
loopne
add
xor
repnz
loope
das
pusha
jecxz
mov
mov
iret
out
jg
fimull
mov
sbb
mov
sbb
cmp
fbld
stos
jb
mov
push
cmp
in
cmp
sub
rorl
pop
xchg
data16
jnp
pavgw
fnsave
mov
fisubrl
mov
ja
repnz
adc
stos
cs
cwtl
les
or
and
rclb
jle
sub
mov
inc
or
pop
xor
sub
mov
mov
mov
test
jb
mov
cmc
movb
insb
es
xor
adc
mov
cmpsb
pop
or
dec
xchg
sbb
fnstenv
out
mov
repnz
add
xchg
inc
cmp
addr16
test
xor
jmp
lahf
shrl
and
out
sub
inc
xchg
xor
xchg
push
in
mov
jl
dec
scas
pushf
je
lahf
sbb
push
push
int3
mov
add
cs
jp
insl
mov
push
pop
xchg
popa
cmp
or
pop
in
sub
addr16
inc
scas
scas
icebp
les
cmp
xchg
divb
dec
negb
jo
js
ret
dec
ljmp
nop
imul
mov
xor
xchg
lods
xchg
rorl
loopne
loope
scas
shr
arpl
lock
jecxz
mov
stos
iret
test
stos
aas
adc
push
xor
iret
jle
push
lock
jae
xor
sbb
mov
scas
mov
cmp
mov
lret
loop
mov
cmp
outsl
adc
cmc
out
or
enter
movq
adc
lret
mul
mov
rclb
cmpsl
fs
adc
pop
test
mov
jge
cs
out
mov
mov
test
or
cwtl
add
shll
iret
mov
sti
mov
mov
sbb
fwait
movsl
test
push
xor
bound
fistpll
pusha
sub
mov
or
adc
orb
sbb
popa
mov
shll
ucomiss
mov
std
iret
push
mov
xor
in
add
lahf
sbb
adc
pushf
js
xchg
decb
cmovne
mov
pop
mov
jae
pop
jecxz
dec
lcall
xlat
fcompl
mov
jl
xor
jp
push
push
cwtl
dec
jns
sbb
sbb
repnz
mov
mov
and
decl
sub
jae
sbb
xor
loopne
loope
pop
lods
add
sbb
sub
or
push
mov
mov
aam
cmc
jmp
sub
dec
pop
jne
cmp
jne
pop
sti
test
inc
bound
sbb
dec
in
cmp
dec
hlt
lret
rcll
and
push
int3
aaa
jno
out
aaa
mov
mov
test
movsb
jle
fdivrl
pop
dec
mov
call
jno
sahf
out
cmpsl
sbb
cmc
mov
sbb
in
or
mov
repnz
sub
xchg
ljmp
and
xor
mov
pop
xchg
mov
push
enter
lods
daa
aam
test
cmc
mov
jne
repz
mov
push
xchg
loop
add
pop
nop
loope
jns
inc
test
subb
call
inc
shll
mov
mov
adc
inc
pop
movsb
leave
cmp
mov
sti
sti
cmp
inc
sbb
in
cmpl
push
sbb
cwtl
xchg
mov
dec
jp
jecxz
cmp
push
loop
sub
push
test
icebp
std
dec
add
imul
inc
cmp
lods
pop
cltd
dec
and
ret
or
daa
jo
enter
sbb
jno
cmp
jno
and
and
fstpt
xorl
pusha
popf
pop
pop
lret
aam
dec
aaa
adc
and
test
mov
test
xchg
fidivl
sbb
sub
cmp
sarb
in
iret
sti
inc
mov
inc
mov
or
out
scas
mov
or
les
xor
mov
xchg
xor
push
adc
jb
or
test
add
sar
scas
dec
and
test
and
lods
cmp
adc
mov
stos
rclb
or
cmpsb
xchg
mov
xchg
ret
pusha
fcomip
or
mov
out
pop
xchg
das
xor
pop
adc
xor
sahf
jl
mov
mov
jnp
in
mov
aas
mov
cmp
pcmpeqb
or
xchg
stos
sarl
sbb
adc
repnz
cld
xor
mov
sar
or
mov
shl
mov
xchg
aam
ds
in
jb
jae
fcomps
cmp
cmpsb
push
push
dec
xchg
fildl
mov
popf
add
mov
fwait
jge
mov
mov
stos
mov
mov
out
xchg
xor
sub
test
pop
mov
stos
mov
orb
out
mov
cmp
add
test
mov
std
std
filds
or
mov
repnz
jns
ret
dec
and
jmp
pop
fwait
xchg
stc
sub
hlt
stc
inc
push
in
ss
leave
aaa
or
rcrl
repz
add
frstor
mov
iret
fs
and
jne
imul
ret
pop
fcomps
dec
jno
lcall
and
inc
test
ja
test
dec
xchg
push
adcb
mov
xchg
jl
sbb
and
jb
insl
xchg
mov
fsubl
cmc
push
sbb
push
dec
xchg
scas
call
aam
ret
daa
xchg
rcrb
inc
fwait
sub
adc
push
lret
inc
add
xchg
xor
mov
js
mov
leave
mov
push
push
or
push
outsb
sub
ljmp
adc
fdivs
popf
xchg
mov
int
das
mov
and
sub
enter
dec
adc
dec
out
pop
xchg
outsb
fmuls
jp
cli
dec
pop
xchg
mulb
nop
add
lahf
jo
pop
jmp
gs
jge
in
ficoms
rcrl
push
and
scas
and
imul
test
sub
aaa
pop
cmp
jns
cmpsl
out
in
loopne
xchg
cltd
mov
jne
xchg
mov
jge
call
pop
movsl
jmp
les
fs
jno
repnz
enter
push
mov
mov
fildl
or
add
cmpsl
xlat
mov
xor
repnz
inc
in
cli
andl
popf
mov
lods
xor
push
repz
jmp
add
cmp
mov
lcall
mov
jl
lods
std
daa
mov
sub
mov
cmp
inc
cltd
push
inc
fisttpl
mov
mov
inc
mov
cmp
int
addr16
movsl
add
out
xor
aaa
ret
stc
mov
push
nop
mov
or
xor
xchg
push
adc
shlb
imul
call
pop
movl
aaa
push
inc
push
mov
aaa
call
je
push
push
std
and
gs
pop
lcall
fistpll
xor
mov
pusha
adc
sti
fimull
sub
ret
dec
mov
push
ljmp
adc
pop
and
mov
outsb
hlt
lret
mov
add
push
movsb
xlat
xlat
dec
push
push
out
jg
testl
inc
pop
test
mov
lret
push
testl
addr16
sbb
mov
mov
pop
nop
jmp
push
jbe
pop
xor
cmpl
add
aad
aaa
dec
fcomps
push
mov
ss
mov
pusha
dec
ret
add
std
arpl
or
or
xor
pop
push
test
sbb
jg
in
scas
or
cmp
push
push
mov
loop
adc
cmp
mov
leave
inc
rep
shr
mov
cld
stc
and
dec
cs
leave
pop
or
fldt
push
movsb
adc
jnp
fistps
leave
mov
adc
js
in
fwait
mov
mov
mov
pop
jecxz
inc
test
arpl
xchg
add
cmp
mov
int3
xchg
clc
leave
ja
jae
fstp
insb
pop
in
stos
sti
test
inc
pop
notl
adc
daa
fdiv
jne
mov
cmp
bound
sub
pop
in
bound
jnp
mov
mov
icebp
cmp
sahf
jns
fists
inc
add
inc
addr16
xchg
push
xchg
mov
test
cmpsl
aad
and
or
add
rcll
inc
aad
xor
mov
lock
aas
les
sti
fstl
in
leave
dec
mov
xor
popa
xlat
loop
push
mov
dec
fisubrl
inc
stc
int3
lea
hlt
sub
out
sbb
jmp
fisubrl
out
bound
fs
test
dec
lods
pushf
popf
imul
add
inc
pushf
add
popa
sbb
lods
push
rcrl
add
lea
fcompl
push
iret
mov
mov
bound
scas
jno
cltd
xchg
les
xor
repnz
ret
inc
mov
ljmp
rcrl
pop
mul
or
cs
fs
sub
pop
int
jae
xor
test
loope
rorb
insl
sub
lods
add
xchg
movsl
xlat
rorl
cmp
add
shrl
clc
rolb
fistl
lds
mov
lock
arpl
jns
lahf
rcll
cmp
push
mov
cmpsb
imul
jns
push
imul
cli
jae
fidivs
xchg
and
dec
test
shl
lret
scas
cmp
push
dec
outsl
jl
ljmp
mov
stc
movsl
dec
mov
lock
push
es
xlat
adcl
or
jnp
mov
dec
fwait
sub
fstp
cmp
loope
jne
or
jmp
xchg
insl
push
pop
cmpsl
and
pusha
rcrb
and
mov
inc
dec
jns
out
aad
pop
in
test
std
rcrl
xchg
mov
stos
pushf
jae
lret
addr16
inc
xchg
inc
adc
xor
loope
mov
mulb
mov
lret
dec
mov
fists
mov
mov
lret
or
ja
push
and
push
and
mov
ret
cli
mov
mov
xlat
xor
adc
inc
insl
scas
jnp
push
es
cmpl
xor
loop
nop
pushf
ja
mov
sbb
and
imul
inc
ret
and
dec
idivl
jae
dec
loope
xchg
xor
xchg
mov
pop
xchg
xor
jne
adc
ljmp
stos
xchg
adcb
out
sti
dec
fnsaves
add
add
lds
jmp
jno
xchg
mov
jno
or
ret
fadd
inc
test
pop
inc
popl
pop
js
ds
lods
sahf
ret
or
fsubrl
jp
rcr
test
pop
inc
add
movsl
dec
cmp
arpl
mov
adc
dec
push
jp
out
add
add
xchg
test
adc
mov
decb
nop
or
fiadds
pop
scas
push
sub
sbb
int
jp
mov
fucom
test
xchg
cld
adc
xor
dec
push
cmp
sub
pop
out
push
out
lret
mov
lcall
rclb
mov
movsl
lea
or
dec
fcmovnbe
das
cmp
pop
adcb
loope
push
mov
lods
cmpsb
push
cwtl
pusha
push
or
lret
sub
outsb
dec
add
lods
xor
push
notl
popa
inc
inc
fiadds
adc
dec
mov
xor
cmc
adcl
xor
pop
sbb
mov
test
or
mov
jmp
mov
aas
mov
nop
ret
or
fwait
or
cmp
leave
sbb
push
and
cltd
jge
std
mov
push
xorl
fmuls
mov
iret
sub
and
sub
je
or
imulb
shll
mov
cmp
inc
jnp
int
adc
mov
cs
fwait
and
cmp
sbb
lea
jmp
dec
fwait
icebp
mov
scas
in
pop
push
and
mov
inc
push
mov
pop
and
mov
outsb
cli
cld
lds
push
inc
sysret
fwait
insl
lods
pop
fdiv
dec
inc
push
fcompl
movsl
xchg
adc
sbb
and
jle
or
mov
cli
jge
sbb
out
jnp
fwait
pop
sub
pop
xor
mov
push
sub
outsb
test
rorb
andb
cmp
mov
mov
pushf
imul
scas
mov
in
cmp
fistps
mov
loop
dec
ret
pop
pop
xchg
dec
sbb
or
addl
cld
lea
rcl
iret
pop
shll
sub
cmp
push
mov
jae
and
test
mov
and
xchg
push
mov
cs
mov
adc
fadd
mov
pop
adcb
xor
cmpsb
and
dec
js
pop
cs
inc
outsb
in
dec
lea
dec
out
push
arpl
pop
sub
das
pop
fnsave
mov
jnp
sbb
lods
jl
lods
out
cmp
test
dec
pop
xchg
les
test
mov
xchg
iret
lret
add
test
mov
leave
mov
int
ficompl
pop
outsl
dec
dec
out
xor
pop
jl
sbb
pop
push
sarb
js
iret
xor
push
jle
pop
lldt
std
fwait
into
pop
sti
jle
test
inc
test
pop
imulb
jo
add
shlb
test
dec
sub
jb
push
movsl
into
add
rorb
push
test
sub
jbe
sar
fnstsw
mov
bound
jbe
lock
cmp
push
xor
cmp
xchg
xchg
mov
fbstp
std
sub
sbb
das
inc
xchg
push
cltd
fcoml
bound
push
call
mov
push
inc
popf
mov
dec
cltd
or
aaa
sbb
add
pop
mov
and
pop
imul
or
pop
lods
push
xor
xor
dec
adc
loopne
sahf
or
aas
add
test
out
ss
lock
jnp
xor
test
es
sub
icebp
pop
icebp
mov
push
je
ljmp
imul
outsl
call
imull
ret
pop
inc
sub
rcl
cmp
and
mov
dec
loopne
push
repz
or
ret
sub
mov
pop
stos
in
dec
jmp
or
cs
arpl
lcall
add
gs
cmp
push
pop
pop
mov
stc
pushf
testl
daa
ret
xchg
in
notb
push
sbb
lret
mov
sbb
push
sbb
adc
add
lods
test
out
test
cld
xchg
lahf
jp
push
jns
rclb
sbb
xor
dec
cmp
dec
add
sbb
jl
fwait
test
icebp
adc
push
push
lods
push
and
mov
jmp
and
es
out
fcmovb
dec
add
jbe
ja
xorb
jge
jg
xor
adc
or
cltd
mov
adc
sub
fidivs
dec
mov
dec
jmp
into
popf
imul
es
clc
popa
push
mov
lds
mov
ficoms
ret
sti
push
xchg
aad
and
icebp
bound
mov
push
in
outsl
dec
nop
fcompl
lret
inc
jb
pusha
xor
shll
cs
adc
add
aaa
jo
mov
push
lret
imul
repnz
adc
shlb
leave
or
imul
mov
push
in
adc
dec
add
adc
xchg
std
mov
xchg
std
fs
sbb
cltd
ror
mov
adc
cmpsb
jnp
and
out
sahf
cmp
into
jmp
jle
mov
pop
push
pop
mov
xchg
inc
fs
test
sbb
arpl
and
das
mov
dec
mov
je
outsb
push
sbb
xchg
movb
jb
add
pop
jecxz
push
mov
pushf
out
mov
add
inc
fadds
sbb
push
push
adc
adc
mov
sub
or
xchg
mov
dec
fistps
xor
cmp
add
scas
test
loopne
inc
lcall
lcall
inc
xchg
out
xchg
jmp
daa
dec
lahf
lahf
cmp
pop
and
pop
mov
lock
push
xchg
cli
sbb
pop
cmp
xchg
fists
jp
fs
lods
inc
in
jne,pt
jb
and
into
sub
mov
adc
addr16
imul
dec
dec
fnstsw
mov
push
pushf
xchg
shll
ret
out
jp
xlat
push
icebp
fldl
sbb
lds
or
pop
lahf
jnp
mov
dec
cmp
arpl
cmp
xchg
sbb
inc
dec
jb
and
inc
adc
jne
test
xchg
call
jbe
pop
push
pop
and
jp
inc
ds
xor
lret
xor
or
jge
icebp
aam
jbe
cmp
daa
pop
jl
popf
les
inc
bound
push
sahf
gs
mov
test
lock
xchg
mov
clc
test
pop
in
in
cmpsb
cs
dec
out
jp
lock
scas
icebp
das
sub
push
lcall
mov
hlt
aad
jo
in
sbb
mov
aam
and
inc
daa
aaa
aad
stos
rcrb
cltd
pop
shrb
insl
sub
rcrl
test
push
pop
ljmp
andb
scas
mov
pop
lods
add
aad
in
imul
hlt
dec
clc
lods
aas
push
leave
pop
fidivrl
push
repnz
movsl
lret
mov
js
sub
pop
mov
push
sar
cmp
fstps
dec
pusha
cwtl
adc
sub
ror
pop
mov
pop
push
cs
enter
dec
pop
mov
fimuls
sbb
fstps
mov
jo
or
in
push
loop
mov
xor
inc
imul
fmuls
int3
inc
repnz
jne
pop
mov
xchg
jbe
add
or
lret
imul
fidivrs
in
mov
dec
aam
xor
and
shlb
jg
jnp
imul
stos
mov
aam
sbb
adc
jecxz
jb
cmp
cmp
xchg
into
sub
mov
jmp
jnp
iret
imul
scas
popl
pop
lcall
mov
in
cmp
add
inc
or
rorl
sbb
and
popf
data16
jb
dec
stc
lret
pop
aaa
and
and
lret
repnz
fstpl
xchg
pop
xchg
clc
mov
add
in
fdiv
jne
mov
sahf
bound
adc
mov
adcb
mov
jo
inc
mov
pop
cmp
pop
jb
push
loop
adc
xchg
add
push
lret
clc
fiaddl
bound
movl
in
lds
sbb
adc
ss
inc
inc
jns
lock
xchg
jb
lds
mov
or
and
sarl
and
jecxz
outsb
pop
inc
mov
lahf
loopne
out
idivl
div
orl
jb
xor
add
sbb
xchg
jle
push
dec
sti
fsubrs
mov
pop
sti
xchg
mov
fstl
xor
mov
dec
xchg
fsubl
ret
repz
repnz
xor
fidivl
fimull
test
mov
repz
mov
xor
iret
lea
fwait
scas
test
adc
pusha
xlat
loope
insb
out
rcl
xchg
sti
leave
pop
jle
add
adc
mov
in
subb
ljmp
sub
jns
add
cmp
xchg
enter
xor
js
sub
xor
nop
inc
jbe
push
or
mov
xor
repz
rorl
jge
in
cmp
adc
inc
xchg
xlat
push
fstps
lcall
inc
aas
cmpsb
loopne
xlat
popf
sub
sub
js
popa
rolb
and
mov
insl
dec
adc
lods
repnz
fcomps
rcl
jle
outsl
aas
sbb
dec
into
and
sub
pop
loope
aad
jb
and
popf
test
push
jo
inc
in
dec
mov
adc
mov
icebp
daa
pop
aam
cmp
adc
push
dec
dec
mov
jmp
pop
les
pop
lret
and
jmp
js
aaa
shl
es
ret
cmpsl
or
mov
out
outsb
mov
fdivrl
xor
aas
mov
lock
and
and
xor
shl
ljmp
loop
sbb
sub
je
add
repz
mov
dec
pop
xchg
data16
jl
fwait
shrl
jmp
jne
mov
ljmp
jmp
movsb
dec
int3
dec
repnz
sti
mov
pop
sub
mov
call
add
filds
fisttpl
repz
dec
mov
pushf
sbb
into
test
xor
lea
rcr
pop
pop
pop
xor
call
cld
in
repz
mov
mov
int
into
push
adc
mov
push
sbb
mov
and
lds
aad
xchg
sub
sub
test
add
aas
es
mov
popa
sub
cmp
push
call
enter
stc
sbb
shr
fiadds
and
push
jbe
imul
push
in
and
mov
fwait
adc
daa
cmovle
scas
aad
inc
mov
mov
stc
insl
ret
outsl
xchg
mov
push
aad
xchg
lods
xchg
sbb
movsb
daa
out
movsl
repnz
or
jg
ret
and
fcoms
push
dec
and
pop
push
insb
loop
adc
mov
adc
and
add
lods
push
test
test
sbb
pushf
or
fisttpl
lock
push
cmc
mov
dec
mov
out
sti
pop
and
test
in
stc
fldcw
mov
add
fistpl
mov
call
add
pop
pop
mov
mov
cmove
lahf
or
imulb
pop
adc
lret
add
or
push
mov
sub
dec
inc
pop
add
cmp
std
leave
cltd
and
sbb
jle
fs
cmp
sbb
dec
cmp
in
daa
xchg
add
inc
sbb
inc
gs
hlt
push
push
repnz
pop
xchg
pop
cwtl
mov
std
lds
mov
mov
leave
mov
xchg
lret
and
ret
sahf
pop
adc
mov
mov
test
cmpsb
sbb
sarl
scas
mov
mov
jge
test
loop
sti
jmp
pop
pop
or
sbb
xchg
aas
jle
das
clc
inc
push
sti
mov
lock
xor
les
xchg
xor
jne
jns
add
in
mov
jmp
add
pop
mov
jl
sub
xor
sub
cmp
lock
mov
dec
jmp
sub
sti
repz
push
xor
lcall
in
fists
in
jbe
push
jae
cld
psubq
call
aas
shll
imul
ds
dec
xchg
ja
xor
in
sbb
add
xchg
cmpsb
insb
js
rolb
loope
adcl
cmpsl
mov
popf
mov
mov
lods
testb
mov
or
pushf
dec
pop
out
mov
xchg
xchg
mov
subb
cli
push
pop
stos
adc
push
movsb
loopew
add
dec
lea
nop
fwait
movsl
lock
push
dec
movsb
loop
lcall
dec
repz
fidivrs
mov
mov
lahf
and
and
mov
mov
adc
and
inc
pop
sbb
adc
popa
dec
adc
xchg
lahf
lea
shrl
push
adc
jg
dec
test
or
and
and
fsubs
ret
jecxz
pop
scas
ljmp
stos
notb
mov
mov
push
andb
inc
mov
dec
mov
mov
dec
jge
hlt
pop
lds
or
arpl
inc
mov
cli
push
cmp
mov
mov
lahf
mov
lahf
or
mov
ret
scas
add
and
fistl
mov
pop
into
sub
or
insb
and
rorb
inc
ret
mov
adc
or
jne
mov
hlt
iret
in
imul
mov
ret
adc
jle
mov
fildll
push
mov
and
sbb
jecxz
mov
push
pusha
js
xchg
int
data16
push
push
sbb
sbb
lock
jb
or
cmp
adc
cmp
inc
cli
or
mov
xor
inc
dec
jp
testl
dec
shlb
and
mov
push
gs
ss
addr16
xor
jmp
fs
jmp
inc
lahf
ljmp
jae
cmpsb
xchg
xor
add
into
jns
xchg
aam
jle
mov
pusha
cmp
lea
pusha
and
or
cmp
pop
adc
xor
lods
popa
loope
dec
insb
mov
cwtl
stos
pop
adc
sbb
addr16
mov
and
in
pop
push
pop
aam
stc
or
lahf
pusha
and
mov
popf
out
insb
out
mov
xor
data16
xorb
mov
icebp
or
jge
cs
int3
jp
popf
push
dec
jae
mov
hlt
push
xorl
testb
rclb
mov
dec
jo
test
pop
bound
mov
loopne
decb
adc
jge
cwtl
shlb
pushf
iret
adcb
icebp
jge
inc
inc
cmp
mov
pop
mov
mov
cmp
dec
jae
mov
push
jns
xchg
sbb
adc
xchg
jg
cs
int3
pop
mov
cmp
out
and
lods
mov
ret
popa
int3
dec
jb
cmp
loope
cmp
repz
mov
outsl
notl
push
xchg
shlb
xor
lock
dec
rcll
data16
add
or
or
xor
and
sbb
aas
mov
sti
iret
xor
push
mov
and
xchg
jge
sti
inc
fcom
and
scas
xchg
cmp
push
lods
sbb
sbb
insl
nop
inc
addl
mov
cmpsb
xchg
loope
fs
jg
bound
les
hlt
test
fcmovu
jle
mov
inc
mov
out
sbb
mov
jne
push
adc
rcrb
mov
mov
sbb
pop
cmp
adc
aas
pop
push
jecxz
shll
std
cmc
repnz
xor
insb
xlat
popf
jecxz
into
adc
mov
xchg
testl
sub
push
ficompl
sub
dec
adc
jbe
mov
jnp
xor
sub
cmpsl
sub
pop
push
pop
lahf
or
das
or
and
jae
dec
loop
jle
inc
or
jp
subl
das
adc
jbe
xchg
push
outsb
inc
mov
hlt
mov
aaa
in
or
add
add
pop
je
xor
stc
ret
out
push
or
cs
mov
mov
fstps
xlat
push
lret
dec
mov
shrb
adc
adc
repnz
cmp
mov
lret
testl
or
jle
or
rorl
in
pop
lcall
int
mov
rcl
and
sbb
mov
loopne
push
add
mov
stc
es
aam
xchg
or
rclb
jl
dec
xchg
ljmp
nop
sub
add
scas
mov
shlb
sbb
xor
sbbl
push
lahf
xchg
mov
xor
adc
mov
pop
into
push
inc
test
je
sub
hlt
das
or
mov
int3
aad
mov
int3
lods
inc
fnstcw
add
dec
aad
xchg
adc
arpl
and
mov
xchg
mov
ja
fcoml
scas
sbb
int
mov
bswap
pop
inc
lea
std
jno
test
in
jge
std
push
gs
into
mov
xor
callw
hlt
sub
xchg
pop
cld
mov
aaa
lret
repnz
and
inc
jl
cs
cli
das
addr16
aas
adc
inc
pop
inc
pop
cmpsl
test
and
repz
mov
push
div
int3
or
ror
inc
pushf
push
imull
popa
xchg
sbb
inc
xor
and
push
xor
xorb
jne
jge
or
cmp
jb
cmp
push
int
cmp
xchg
add
aas
iret
dec
imul
add
imul
xchg
mov
pextrw
mov
xor
ficomps
inc
loopne
push
rorb
push
mov
cmp
jecxz
sarb
ror
jmp
mov
pop
cmp
adcl
or
and
lock
ljmp
mov
mov
pop
pop
stc
jmp
dec
jle
push
sbb
outsb
sub
mov
jno
fstpt
mov
outsb
shl
ja
fdivrl
push
outsb
dec
and
add
enter
mov
std
sbb
std
test
pusha
lea
sub
inc
outsb
or
gs
dec
mov
jo
push
xor
adc
ret
pushf
negl
adc
jae
aaa
jmp
es
in
dec
mov
sbb
mov
or
lods
enter
dec
pop
jns
pop
pop
stos
int
aaa
cltd
and
cmp
scas
ss
cmp
push
dec
out
test
cmp
lcall
add
int
sub
push
push
jns
call
push
testb
clc
popa
rcr
call
cmp
push
hlt
cmpsb
shl
es
in
mov
adc
int3
or
lds
inc
mov
mov
loop
xor
in
scas
push
pop
subl
xor
dec
fmulp
xchg
and
cmc
nop
push
xchg
pop
imul
mov
std
imul
scas
inc
push
cli
push
push
mov
jne
pusha
into
add
dec
pop
frstor
mov
icebp
roll
pop
mov
in
lods
mov
pushf
jne
outsl
lahf
les
push
fldt
hlt
popa
mov
lahf
xchg
mov
sbb
and
inc
popf
hlt
sub
cmp
and
mov
cmp
sahf
mov
arpl
and
cmp
and
or
pop
lods
std
fadd
pop
adc
gs
popf
xchg
test
divl
and
sbb
inc
popa
ret
pop
shl
jmp
loop
fs
xchg
xor
pop
mov
pushf
outsl
scas
xchg
sub
sbb
stos
into
popl
fistpll
je
lods
push
inc
loopne
or
or
add
in
loope
aas
insb
or
nop
sbb
pusha
cli
movsl
sub
ljmp
fwait
xor
push
hlt
mov
inc
shufps
lret
dec
rolb
sbb
jge
and
mov
xchg
xchg
and
add
xorb
bound
mov
insb
into
ljmp
test
addb
pusha
std
xchg
mov
sbb
and
dec
xor
negl
aam
sbb
shr
mov
jecxz
sbb
or
fbstp
pop
mov
xchg
mov
daa
and
xchg
loop
or
popw
pop
jp
stc
mov
in
xchg
fs
je
ret
sbb
into
pushf
sbb
adc
les
pop
js
imul
std
lret
add
popf
dec
pop
shll
rorl
sahf
pop
jge
pop
jecxz
shl
jecxz
les
stc
adc
in
or
shrb
mov
mov
sarl
out
nop
mov
shl
addr16
push
jb
cmpsl
and
jne
cld
jno
insb
cmpsl
push
pop
iret
arpl
push
add
notb
mov
cltd
jp
test
je
fsubl
cmp
sbb
sbb
cltd
sbb
cmpsb
je
cmc
jns
mov
or
sahf
and
xchg
pop
dec
pop
jmp
outsl
fistl
push
out
ja
inc
jo
pushf
scas
cmp
jo
sarl
mov
sbb
loope
mov
lar
fcmovb
jmp
mov
sub
lock
nop
rcrl
aaa
push
sbb
scas
jb
and
lret
mov
xor
outsb
xchg
cmp
mov
lods
dec
and
cmc
mov
pushl
and
inc
pusha
dec
std
in
xchg
fcompl
mov
aaa
jmp
dec
cs
inc
mov
push
outsl
mov
dec
dec
jmp
movsb
lcall
jne
mov
sahf
sub
sbb
cltd
adc
jns
pop
dec
test
jbe
xchg
push
sbb
ds
jle
cltd
xor
fucomip
popa
lds
jg
cld
push
shlb
and
ljmp
in
cwtl
push
notl
pusha
cmp
cmp
xchg
mov
xor
dec
dec
loope
out
js
xchg
pop
test
jg
and
mov
adc
push
rclb
nop
push
loope
jle
xor
mov
lret
mov
xchg
add
and
add
xchg
sti
push
mov
mov
leave
mov
and
mov
xor
xchg
mov
push
jecxz
iret
sti
dec
test
ss
adc
dec
mov
xchg
ficomps
mov
pop
inc
imul
mov
push
mov
cmpsb
sub
insb
add
sarb
and
adc
in
xchg
mov
xchg
movb
hlt
pop
fstpt
popf
in
add
inc
push
sub
dec
cmovno
subl
enter
sbb
sbb
addr16
add
or
or
loop
cwtl
pop
call
in
or
addr16
dec
notb
movl
scas
sbb
cmpsl
test
push
aaa
xchg
decb
push
xchg
pop
pop
fwait
popa
stos
lods
push
mov
adc
int
adc
and
cmp
fsubs
shl
je
add
dec
scas
out
jmp
mov
adc
ljmp
push
push
dec
jns
xchg
pusha
dec
test
repnz
ljmp
adc
or
or
cwtl
in
rorb
xor
rcll
mov
nop
icebp
in
fidivrl
in
mov
nop
pop
inc
ss
in
xchg
pop
out
ds
xlat
push
mov
daa
fcomp
xor
sub
fldt
xor
aam
lea
xchg
movsb
jp
xor
out
xor
test
in
push
lret
xchg
mov
push
xlat
jbe
negb
inc
mov
shlb
test
gs
mov
or
std
pop
mov
and
loopne
loope
mov
nop
mov
xor
loop
mov
and
mov
jl
div
dec
jge
sbbb
movb
mov
out
cmp
dec
ds
cld
jge
xchg
add
or
loopne
leave
sbb
inc
mov
sub
mov
sub
dec
inc
sbb
dec
fstl
nop
out
les
pop
aaa
xor
int
pop
mov
jp
fwait
sub
lods
cmp
jbe
mov
shl
or
in
pop
cmp
pop
pop
push
lds
rcr
dec
add
repnz
cmpsl
inc
popa
add
incl
adc
sbb
hlt
push
xor
dec
push
hlt
out
dec
cmp
ss
outsl
test
dec
test
xchg
mov
jle
pop
pop
adc
jns
bound
popw
out
jg
lock
aaa
xchg
add
out
sarl
sbb
orb
call
mov
dec
pop
pop
sub
add
dec
hlt
push
fwait
jmp
add
int
fistl
adc
and
push
insl
dec
fwait
iret
fs
cmpsl
outsl
sbb
loopne
pop
inc
dec
inc
leave
adc
pop
inc
mov
inc
mov
popf
je
mov
push
sbb
lret
subl
std
js
lcall
mov
cmp
imul
fistl
mov
push
enter
push
mov
inc
xor
test
mov
decb
push
or
std
adc
fstl
sbb
test
and
mov
pop
std
pusha
xor
test
lahf
leave
adc
pop
in
test
ljmp
lret
or
add
jge
push
aam
mul
out
cmp
lods
mov
sub
push
xchg
cmc
cmpsl
add
inc
sbb
sti
inc
push
fnstsw
push
jecxz
jecxz
negb
add
jecxz
xor
repz
hlt
mov
mov
push
into
jb
fldl
stos
test
xor
data16
dec
jnp
push
inc
sti
movsl
dec
sub
lahf
outsl
mov
inc
popa
test
mov
xor
add
hlt
push
sub
cmp
outsb
rcrl
into
lret
shlb
mov
sbb
das
mov
cmp
lods
lret
mov
repnz
push
iret
lret
int
xchg
scas
test
ljmp
jp
data16
mov
inc
push
jp
xor
repnz
pop
adc
cmp
push
adc
lods
adcb
xchg
and
je
jnp
jmp
mov
jecxz
test
iret
je
shlb
and
adc
pop
add
aas
daa
xlat
cmp
popf
test
cltd
or
inc
or
test
xlat
add
add
lahf
fstl
out
ljmp
lods
sub
sahf
fldenv
daa
loope
push
mov
sbb
arpl
mov
mov
mov
inc
cwtl
daa
fs
mov
pop
cmp
fildll
mov
int
out
nop
int3
add
nop
mov
lock
sub
fxtract
jg
push
repnz
add
sbb
ds
ficomps
mov
sbb
xor
shrl
adc
dec
xchg
fcoml
stos
xchg
jmp
test
add
int3
cltd
cmp
je
push
inc
add
xor
dec
jnp
negb
xchg
mov
xor
int
push
mov
mov
sub
jne
mov
mov
int
xchg
js
xor
pop
and
ret
rcll
imul
imul
cmp
roll
scas
je
cmpsb
mov
sti
outsl
or
cmp
out
sbb
mov
sub
or
fsubrp
je
mov
adc
xchg
fists
inc
aas
sub
test
outsb
into
mov
fdivr
jb
dec
push
sbb
mov
xor
scas
mov
jmp
jl
test
mov
punpckhdq
mov
jno
std
sub
test
push
xchg
loope
popa
sub
call
int
es
mov
and
cltd
inc
or
or
or
jle
cmp
lcall
fisubl
gs
imul
add
sti
pop
xchg
loop
rcrb
es
pop
inc
sub
test
cmpsl
dec
push
xchg
jns
push
out
inc
int3
in
cli
ficoms
cmp
orl
hlt
mov
dec
enter
adc
mov
mov
xlat
inc
cmp
fistpl
or
pop
out
xor
xlat
cld
stc
and
cmp
cmc
int
outsb
fadd
mov
icebp
outsb
in
scas
and
fsubs
jge
pop
loopne
dec
lods
and
popa
outsb
addl
ds
sbb
fsub
sub
sub
push
adcl
jl
xchg
jmp
cli
mov
clc
jo
xchg
scas
pop
sbb
mov
pop
jo
cmp
jmp
addl
je
incl
jns
inc
fucomp
xor
push
adc
mov
mov
or
ret
cmc
outsl
int
cmp
lret
mov
adc
push
lahf
idivl
mov
mov
gs
inc
mov
and
in
imul
popa
jl
xchg
dec
loopne
and
stos
sarl
adc
sahf
movsl
cld
pop
clc
pusha
addr16
fstp
por
shll
jne
mov
popf
cmp
sbb
daa
sbb
xchg
movsb
and
adc
push
call
mov
pop
mov
psrld
adc
xchg
mov
loopne
inc
or
adc
cmpsb
pop
pop
xchg
or
rcrl
sub
jg
inc
jecxz
shll
push
aam
or
ss
or
sbbb
insl
test
repz
sbb
popa
adc
cld
mov
dec
cmpsb
mov
nop
mov
mov
js
and
adc
rol
pusha
test
mov
int3
sub
mov
lret
inc
imul
imulb
shlb
test
and
pop
shrl
jp
mov
faddl
popf
xor
pop
sbb
bound
push
mov
loope
xor
xchg
pop
aaa
sti
in
jmp
rcpps
push
xchg
rclb
call
xlat
popf
mov
xchg
sub
inc
pop
fldcw
ss
call
jle
inc
pop
push
mov
out
in
pop
nop
mov
test
orb
inc
jbe
mov
ffree
push
mov
jnp
test
push
mov
lods
jmp
mov
dec
mov
ret
es
sbbl
jp
sbb
fldl
lea
sub
out
jne
dec
add
or
xor
in
dec
mov
ret
popa
leave
jmp
es
mov
out
daa
cmpsl
mov
add
lds
mov
jl
jge
push
loopne
jbe
ret
xor
imul
movsl
sub
mov
adc
xchg
or
pop
je
dec
js
or
lret
aaa
mov
sub
nop
leave
pop
mov
stc
sub
jp
sbb
cmpb
test
mov
aad
inc
mov
jmp
roll
outsl
cmp
lcall
test
outsb
ljmp
pop
jl
inc
mov
insb
xor
inc
lods
dec
imul
iret
std
cs
cmp
insb
fnstsw
les
fldt
or
adc
int3
nop
pop
das
pop
mov
aaa
inc
insl
mov
add
test
lods
jg
or
loope
sbb
iret
scas
inc
lret
adc
or
dec
out
dec
xor
xchg
pushf
into
mov
dec
notl
sub
sbb
or
sbb
pushf
mov
pop
inc
shl
lods
enter
stos
xor
and
lahf
je
aas
lcall
dec
xchg
pop
rcrb
pop
sbb
dec
stos
jo
call
rorb
sbb
stos
push
fwait
outsb
dec
icebp
cmp
xor
loope
out
cs
cs
test
jmp
mov
rol
dec
sahf
dec
call
sbb
and
clc
dec
and
incl
pop
cmp
nop
and
push
call
pop
cmp
mov
es
movsl
inc
aaa
push
jne
jns
jmp
xor
push
pop
les
inc
clc
pop
mov
lods
insl
pop
testb
leave
cmp
addl
in
inc
test
xor
dec
lods
mov
lret
fists
divb
out
push
jae
sbbb
cmpsl
pop
jno
push
mov
in
push
repnz
jbe
lret
jp
dec
test
int
nop
jle
sub
adc
and
push
test
in
nop
mov
xchg
adc
or
in
rorl
xchg
xchg
sub
mov
dec
jno
lds
push
add
sbb
add
aaa
sbb
lock
or
xor
and
cli
jmp
pop
test
push
popa
xchg
lods
imulb
push
sbb
jns
mov
mov
add
je
test
push
push
icebp
movsb
std
clc
dec
xchg
scas
push
pop
in
ror
aad
mull
push
data16
cmp
cmc
scas
test
into
xor
cmc
sbb
fcomps
sub
cwtl
jns
cmp
jb
mov
xchg
and
sbb
sbb
mov
sbb
mov
and
adc
cltd
cld
stc
lahf
loop
sbb
dec
stos
add
mov
adc
xchg
dec
movsl
mov
mov
pop
xchg
or
jmp
and
mulb
pop
jle
aas
fisttps
mov
fisubrs
sbbl
add
lcall
cmp
cmpl
jmp
out
sub
cmp
mov
cli
and
push
pushf
inc
add
dec
int3
ljmp
cmp
and
pop
sub
std
mov
push
sub
stos
ret
cs
mov
adc
imul
cmp
cld
pop
cmp
fucom
pop
jae
mov
xlat
xor
jns
pop
pop
xor
int3
dec
scas
inc
jecxz
xchg
test
lea
aaa
adc
fsubrp
imul
sbb
outsb
out
out
idivb
sub
sbb
pop
inc
nop
jns
jb
movsb
inc
cmp
and
xchg
and
or
sub
ljmp
or
popf
js
in
and
sbb
and
adc
adc
mov
rcrl
dec
xor
push
xlat
out
sbbb
negl
sbb
and
mov
pop
pop
popf
and
mov
ret
xchg
int
adc
inc
jge
and
sbb
ja
cmc
cmp
push
inc
orl
mov
movsl
ret
mov
gs
repnz
pop
xchg
sbb
mov
data16
ret
adc
sub
push
lock
xor
in
mov
js
jmp
lock
sub
fisubrl
mov
into
add
mov
pop
int
or
fyl2x
mov
adc
mov
imul
cmpsw
xchg
in
jle
push
xchg
mov
loopne
repz
inc
shlb
imul
cld
xchg
push
in
lock
sub
dec
and
pop
adc
xchg
rcrl
dec
popa
test
je
push
xor
shr
pop
pop
scas
dec
sub
dec
or
sbb
xor
jne
out
insb
mov
repnz
sbb
fbld
or
aad
sub
rcr
xor
stos
lret
rolb
adc
loopne
adc
jne
int
mov
repz
pop
stos
dec
mov
add
mov
ret
rorl
jae
repnz
and
dec
divl
or
rorl
cmp
loope
iret
cld
outsb
gs
ds
pusha
cli
push
xchg
cmp
ret
dec
jo
xor
fwait
push
jns
cmpsb
mov
sub
xor
and
popf
mov
xchg
adc
daa
lret
mov
imul
sbb
cmc
test
pop
lahf
int
imul
mov
stc
mov
aam
js
xor
mov
push
jl
movsb
and
mov
test
test
sbbl
jo
jb
scas
mov
or
adc
sbb
out
mov
das
add
push
or
sti
mov
push
mov
and
jmp
push
ret
mov
xor
xchg
stc
jecxz
jb
mov
push
je
and
inc
jne
outsb
scas
out
test
loopne
leave
je
ljmp
and
test
iret
jns
adc
pop
inc
cmp
in
lea
stc
jle
js
push
scas
adcb
pop
xlat
mov
jne
xchg
mov
and
adc
mov
fldl
jns
push
loopne
add
lods
inc
jo
scas
jae
xlat
inc
lcall
popa
push
test
ss
out
mov
inc
mov
dec
lret
loop
pop
fwait
push
pop
enter
lods
and
icebp
es
lods
xchg
movl
add
and
cmp
xor
clc
lahf
inc
mov
cmp
pop
xor
mov
dec
mov
mov
jle
out
sar
clc
xchg
cmp
cmpsl
inc
je
arpl
pop
sbb
dec
push
jae
jp
cmp
sbb
mov
aas
pop
dec
xchg
sub
leave
insb
fdivr
mov
fsubs
lcall
xchg
cmp
or
mov
mov
and
add
jge
inc
imul
je
mov
out
and
lods
and
mov
gs
cwtl
pop
std
out
stos
lcall
fnstenv
jbe
jbe
pop
rcr
inc
inc
add
pop
pop
sarb
test
sbb
cmp
mov
aaa
xor
push
movsb
inc
xor
imul
scas
pop
rolb
daa
ja
cmc
inc
add
pushf
out
or
inc
mov
cmp
shl
and
inc
or
add
aam
jnp
dec
xor
cmp
and
push
imul
dec
sbb
divb
ljmp
cli
insb
mov
mov
test
cmp
pop
arpl
or
push
int
add
xorb
mov
sbb
mov
addr16
fsubrs
inc
cmp
clc
dec
test
pop
in
add
in
inc
inc
ja
adc
dec
xchg
cmp
adc
dec
insb
pop
roll
nop
imul
or
adc
sbb
push
inc
xchg
sbb
sbb
dec
test
sbb
hlt
xor
xor
xchg
pop
push
mov
ss
xor
xor
loopne
or
inc
cmc
je
xlat
sbb
lock
ffreep
cmp
jns
or
cmc
les
adc
xchg
adc
icebp
lahf
mov
sti
pop
pop
scas
pop
mov
dec
repz
adc
icebp
inc
and
subw
ja
in
orl
lods
jle
dec
sub
mov
stc
mov
orb
inc
xor
jne
xchg
in
jne
int
ret
xlat
in
jp
negl
sahf
mov
jg
xor
nop
or
rclb
cltd
sahf
jle
daa
ja
xchg
jae
pop
lods
test
jle
and
push
dec
std
mov
fdiv
iret
fcoml
outsb
xchg
pop
xor
sub
adc
and
mov
mov
add
cli
lcall
pop
add
gs
mov
es
pop
lea
adc
jp
loope
pop
and
lret
push
dec
pop
push
pop
ja
clc
shlb
or
fsubrp
scas
into
lds
pop
mov
add
mov
int3
and
push
outsb
sub
bound
sarb
mov
popf
out
or
cmpsb
push
mov
jno
es
icebp
dec
or
mov
inc
mov
insl
mov
repz
cmovp
cmp
cmc
mov
mov
arpl
scas
jo
fucom
insl
shlb
mov
in
mov
cwtl
cmp
inc
jmp
repnz
add
pop
cmp
jmp
xor
fs
test
outsl
xchg
fcmovbe
dec
cmpsb
mov
loopne
int3
cwtl
cmpsl
inc
cmp
add
fnstenv
add
fimuls
jns
daa
aas
dec
fs
sub
add
mov
out
sbb
push
adc
sub
das
pop
jl
es
push
and
mov
cmpsb
push
stos
sbb
fwait
cmpsb
and
sub
cmp
daa
test
jl
dec
push
xor
xor
lock
fs
dec
adc
cmp
pop
out
je
decl
popa
push
and
dec
jle
and
mov
mov
jge
pop
stc
cwtl
xor
gs
jg
cmpsb
call
adc
pop
sbb
movsb
js
into
pop
test
dec
lahf
icebp
sub
js
pop
xchg
sbb
out
bound
adc
pop
rcrb
mul
push
lods
popf
mov
pop
pop
jp
inc
mov
vmwrite
outsb
mov
jp
add
jo
roll
es
sub
mov
push
cmp
xchg
inc
push
lret
gs
je
stc
inc
pop
shll
sbb
sub
div
and
dec
mov
bound
sahf
sub
cmp
adc
sub
dec
adc
in
dec
push
shll
scas
icebp
cmp
pop
add
out
stos
pop
repnz
mov
inc
mov
cs
fdivrs
data16
xchg
xchg
leave
or
sbb
jmp
rol
test
cmpsl
cwtl
call
jle
sbb
divl
push
mov
push
inc
xchg
inc
jnp
out
enter
cmp
mov
icebp
sbb
cltd
push
xor
ret
and
pop
or
push
pop
sbb
sub
push
fwait
ret
insl
aaa
push
adc
and
jns
lock
mov
fdivl
aas
push
add
and
ljmp
dec
fwait
add
cmc
cmpsl
outsb
mov
adc
enter
fisubrl
jmp
stc
adc
adc
dec
lods
in
jp
cmp
stc
arpl
or
cltd
loop
sub
cmp
aam
sbb
fsubr
dec
icebp
mov
nop
and
aad
push
adc
fisubrl
test
fidivrs
xchg
loopne
ss
dec
ss
ds
dec
out
dec
jp
sbb
mul
insl
or
xchg
sub
and
push
in
cmp
fs
add
out
mov
and
xchg
cmc
and
inc
negb
xlat
inc
aad
daa
mov
or
add
comiss
sti
cmpsb
mov
mov
fwait
mov
fdiv
mov
jb
sahf
cmpsb
fdiv
pop
push
fucomip
arpl
pop
les
outsb
push
jmp
jecxz
addr16
dec
sarl
cmc
pop
cwtl
push
pop
lret
in
jp
fucomi
clc
lret
out
cmp
mov
xor
push
xlat
xor
inc
not
mov
cmp
scas
adc
stos
outsl
jge,pt
sbb
mov
jmp
and
je
sub
addr16
ss
mov
sti
fbld
jmp
ret
stos
adc
movsb
jg
xchg
mov
mov
mov
jecxz
adc
aam
or
fisubrl
jae
pop
imul
sti
add
pusha
fwait
and
mov
out
push
or
js
sbb
mov
xchg
movsl
stc
stos
pop
cmp
dec
pop
out
jp
or
add
test
in
int
or
or
push
inc
ljmp
sub
mov
and
aaa
out
cmp
push
add
add
fcmovnu
mov
jno
inc
jmp
mov
jle
repnz
les
out
mov
scas
jne
out
test
pop
fidivrs
std
lds
dec
push
xorl
in
xchg
xchg
xor
mov
inc
sub
mov
jmp
loop
dec
or
dec
and
mov
lods
mov
or
pop
or
pop
nop
mov
lahf
add
mov
es
and
jg
jne,pn
sub
jp
hlt
aas
or
jge
xor
pusha
sub
and
dec
sub
add
jmp
jne
lret
mov
push
jnp
xchg
lock
fwait
lods
orl
pop
stos
mov
inc
sbb
rorb
clc
pop
add
iret
pop
repz
mov
sub
and
and
xchg
fidivl
lods
movsl
js
pop
inc
mov
jne
rcr
inc
in
cmpsb
jmp
insb
add
cmp
loopne
sbb
es
enter
add
mov
add
clc
jp
mov
mov
fistpll
xor
lock
icebp
push
mov
dec
aad
lods
mov
push
lea
es
aad
sub
push
xchg
mov
or
pop
dec
outsl
out
test
mov
jae
cmp
xor
xchg
add
or
out
mov
movsl
dec
mov
je
jmp
push
mov
daa
pop
sbb
dec
adc
hlt
sarb
push
inc
sub
cmp
fisubl
jns
mov
ljmp
jmp
adc
push
pop
fs
inc
push
add
dec
loopne
ret
aas
ret
pusha
cmp
insb
aad
std
jbe
cmp
pop
mov
daa
xchg
push
push
cltd
xlat
sarl
xchg
push
jmp
jne
mov
int
sbb
adc
jno
push
stos
mov
lret
scas
leave
push
push
movsb
mov
add
sete
lahf
or
out
and
dec
push
push
mov
add
push
xchg
cwtl
mov
pop
mov
iret
jb
xchg
lret
push
mov
sti
mov
in
das
jle
imul
mov
fprem
push
shl
cmpsl
nop
adc
sarl
repz
pop
mov
mov
pop
cltd
mov
mov
cmp
loopne
fchs
lcall
adc
je
into
sub
sbb
jae
call
push
sahf
sahf
sub
rclb
add
or
stc
insb
and
stos
adc
mov
mov
inc
std
push
pop
dec
fwait
test
adc
inc
ds
dec
adcl
pop
inc
icebp
mov
mov
in
repnz
adc
fs
xor
inc
loopne
cmpb
rcrl
roll
addb
and
aad
adc
lock
pop
lcall
pop
loopne
push
sub
nop
cmpsb
filds
adc
ret
lods
fwait
cmc
enter
arpl
xor
outsb
cwtl
ljmp
fcmovnu
push
int3
pop
pop
xchg
lock
mov
pop
xor
xor
clc
and
mov
xorl
aam
sahf
jp
cld
pop
fldcw
mov
dec
in
cltd
sti
mov
aas
shrl
cld
pusha
insl
jae
mov
insb
fwait
shl
imul
rcll
mov
push
mov
jnp
stos
xchg
scas
inc
repnz
leave
movsl
mov
push
mov
outsb
out
rclb
ret
xlat
pop
add
imul
lods
je
cmp
push
xchg
add
movsl
stc
out
aam
dec
sbb
mov
xor
insb
jno
enter
jg
ds
mov
lods
call
movsl
mov
jl
and
fs
jns
inc
mov
sbb
mov
inc
dec
or
push
mov
xchg
inc
sbb
xor
adc
in
sub
and
test
dec
mov
xorb
adc
mov
rcr
clc
fwait
xchg
ja
xor
arpl
push
inc
dec
xor
adc
stos
push
sbb
mov
stc
fdivl
les
dec
xor
mov
sbb
enter
sbb
aaa
clc
in
out
or
sbbl
shr
mov
in
daa
stc
shlb
mov
jp
or
std
shll
or
cmc
or
imul
js
inc
dec
or
dec
mov
add
xor
xor
or
lcall
and
dec
pop
mov
popf
add
xor
mov
xor
sahf
add
imul
cmp
repz
mov
pop
sbb
adc
mov
loopne
cmp
inc
pusha
mov
or
in
out
pop
xchg
lods
dec
mov
imul
and
cltd
dec
leave
cltd
sbb
in
aad
lock
arpl
mov
dec
jle
ret
xchg
bnd
imulb
adc
sub
mov
mov
adc
arpl
and
cmpsb
sbb
inc
ror
call
cwtl
mov
aaa
push
idiv
jmp
outsl
sbb
out
adc
push
repnz
daa
mov
pop
pop
testl
ljmp
jecxz
jle
pop
xchg
out
lock
dec
mov
and
or
sti
jle
repnz
push
aas
cli
xor
pop
mov
adc
in
sub
jns
ja
xor
mov
jmp
mov
fidivrs
mov
push
int
out
xor
pop
testb
mov
lods
mov
addr16
push
fbld
xchg
sbb
xchg
adc
mov
ljmp
bound
xchg
and
mov
pop
out
cli
mov
std
jb
add
jnp
jne
ret
sub
mov
jb
inc
loope
outsl
push
mov
cmp
pop
out
xor
cwtl
call
aaa
push
jns
fistpl
rclb
imul
fnstsw
add
jp
sub
out
sti
jns
dec
cmpsl
mov
pop
xchg
movsl
je
jle
int
xchg
test
push
faddl
sub
mov
and
and
jmp
mov
jmp
aad
pop
push
in
push
aam
sbb
pop
test
outsb
cld
cmp
and
cmp
push
pop
iret
pushf
push
add
aaa
and
sbb
push
jo
push
fistpll
mov
jno
or
pop
pop
stos
nop
dec
pop
add
dec
jmp
pop
les
jns
jmp
cld
pop
mov
cltd
ret
imul
out
or
sub
in
stos
jns
movsl
or
sbb
ret
adc
xor
sub
adc
pop
aad
inc
insb
and
mov
inc
fwait
in
out
sub
xor
push
andb
or
mov
lods
shll
orb
movsl
dec
inc
xor
jns
gs
cmp
xchg
add
pop
popw
outsb
mov
jmp
jg
test
mov
out
and
leave
jmp
int3
cwtl
movsl
dec
into
pop
fld
push
adc
pop
inc
fwait
bound
std
lods
and
jg
cmp
fucomip
jecxz
and
enter
rcll
lods
dec
dec
mov
sub
cmp
into
icebp
pop
and
bound
mov
jne
je
and
push
lock
popf
outsb
rcrb
mov
xor
loopne
lcall
xor
cwtl
mov
cld
fiaddl
and
loop
adc
shll
imul
or
inc
or
aad
mov
or
and
loope
jl
inc
push
sahf
cwtl
cmp
stos
arpl
sbb
flds
leave
sbb
xor
and
mov
popa
ret
jge
call
dec
daa
sub
cmpsl
push
mov
in
pop
jecxz
xchg
pop
xor
mov
mov
movsb
xchg
cmp
push
and
mov
cmp
js
push
jp
mov
xor
movsl
mov
shl
jge
lods
dec
bound
rcr
cmp
hlt
fwait
cli
xor
mov
inc
inc
cmp
mov
xchg
ja
push
stos
fs
loop
ret
daa
jb
cmp
out
mov
cmpsb
cwtl
cmp
test
add
pop
cmp
scas
and
outsl
repz
inc
in
fisubl
jne
jb
cld
insb
lock
cli
adc
loopne
push
aas
jns
fs
push
hlt
imul
mov
mov
add
push
insl
shlb
lock
mov
pop
fmull
orb
fwait
lds
clc
inc
negb
test
mov
push
sbb
ss
lahf
push
arpl
movl
inc
shll
pop
mov
sbb
push
scas
jmp
lock
pop
in
pushf
pop
icebp
mov
push
pop
mov
cltd
cmp
insb
andb
fldenv
mov
add
lret
mov
sbb
into
leave
cmp
lea
sbb
dec
in
call
xchg
xchg
mov
das
mov
testb
mov
lea
adc
or
cmp
ja
lcall
mov
das
push
adc
push
jae
std
insl
dec
xor
loop
in
inc
mov
xor
dec
push
or
dec
decl
add
sarb
inc
imul
mov
pop
xor
pop
ret
pop
jl
xor
pop
insl
lret
mov
sub
ljmp
mov
sbb
lods
std
addr16
clc
inc
sahf
sbb
jns
xor
pop
lock
sahf
loope
cmovnp
sub
cmc
lea
sbb
adc
cmovg
jecxz
mov
rcrl
push
jne
push
pop
jne
ljmpw
mov
push
call
scas
imul
fdivs
add
jns
xchg
rolb
clc
jmp
and
inc
and
outsl
loop
mov
inc
lret
cmp
es
mov
mov
lods
mov
icebp
nop
addl
jmp
ret
cmp
cld
scas
test
xor
addr16
insb
push
xchg
jns
sbb
jecxz
dec
jmp
std
adc
in
out
imul
sub
scas
int
adcl
ficoms
insb
or
es
ja
hlt
xor
sub
pop
stos
mov
mov
xchg
out
rcl
sbb
push
fs
lock
push
imul
jp
cmc
ja
add
ss
jl
add
dec
add
mov
lods
in
arpl
add
cmp
lock
hlt
push
push
vpsrad
or
dec
adc
jecxz
mov
pop
dec
push
test
mov
mov
cld
jb
or
mov
inc
mov
adc
and
mov
sub
adc
leave
and
lret
adc
sahf
xor
dec
dec
xor
hlt
xor
addr16
and
sbb
movsl
add
jp
add
inc
jl
push
stc
gs
sub
nop
rcll
pop
jae
cli
jp
pop
xor
jbe,pn
shl
mov
iret
in
push
xor
test
loope
jge
aas
jb
outsb
or
inc
mov
call
js
mov
push
sbb
adc
subl
idiv
mov
andl
int
or
cli
sbb
mov
iret
lret
cwtl
push
movsb
push
scas
push
inc
mov
rcll
and
fwait
scas
clc
mov
in
pop
jno
outsl
push
jae
jnp
mov
jb
add
xor
cmp
push
hlt
dec
js
jp
iret
mov
jb
outsl
dec
cmp
das
fstpt
fisubrs
arpl
cld
imul
cmpb
push
add
popf
cmpl
add
ss
and
push
pop
xor
inc
insb
pop
adc
ficomps
jmp
xchg
dec
mov
mov
lea
js
xchg
jbe
dec
or
push
sub
cmp
fcmove
subb
pop
pop
andb
pop
pusha
lods
aam
inc
ret
dec
jp
bound
inc
mov
repz
insl
ss
cmp
add
jp
insl
mov
lret
jecxz
cs
xor
pop
out
cmpsb
rol
shlb
scas
sub
loop
add
out
movsb
mov
pop
xor
fisubrs
xor
push
jo
jns
cmp
lds
jg
ret
insb
push
cmp
adc
inc
jbe
mov
inc
add
adc
rcl
pop
sub
xchg
sarb
mov
mov
adc
je
lea
pushf
inc
push
jp
dec
imul
fld
movsb
xor
xchg
mov
jle
push
mul
and
arpl
add
in
push
subl
ja
mov
rcll
repnz
imul
stos
or
xchg
out
mov
ljmp
arpl
mov
jb
or
pop
mov
push
push
mov
test
or
xchg
inc
jno
or
in
push
sbb
adc
cld
pop
push
adc
inc
les
mov
shl
pop
aaa
or
jns
test
fisubrs
popa
fcompl
xchg
mov
xlat
and
push
cs
sbb
cwtl
out
mov
cmc
add
sbb
repnz
sbb
lret
dec
daa
mov
xchg
cmp
xchg
push
fiaddl
adc
sbb
stos
in
pop
enter
ret
inc
dec
aas
daa
insb
adc
lds
and
dec
insb
push
pop
je
adc
push
add
outsl
cwtl
iret
out
and
iret
test
lret
shrb
je
test
and
adc
jne
inc
insl
jae
jae
sbb
and
push
sbb
std
ret
leave
adc
outsl
ret
jecxz
or
jmp
or
outsl
pop
sub
push
xchg
mov
outsl
ja
cwtl
rcrb
sbb
push
push
push
iret
jecxz
xchg
dec
shll
cmp
test
ret
femms
repnz
shl
xlat
loope
cmpsb
rolb
dec
pushf
stc
cmp
loope
sti
cld
mov
pop
push
into
dec
or
sbb
movsl
cmp
and
imul
movsb
dec
addr16
outsb
lds
xchg
mov
inc
mov
xor
popa
push
xchg
addr16
insb
push
or
movb
mov
sbb
out
jae
cmpsl
testl
xor
cli
add
lahf
loopne
jae
jle
xor
test
es
aaa
leave
out
mov
addr16
cmc
in
fstl
dec
adc
add
jle
sbb
sbbl
add
jmp
cmc
addl
cmp
inc
ret
mov
cmpsb
and
mov
and
xor
aas
mov
pop
jnp
xchg
bound
mov
data16
push
sub
push
dec
push
jmp
jo
mov
mov
add
mov
inc
fwait
lea
mulb
add
fcmovne
nop
movsl
mov
dec
or
push
mov
add
sub
mov
in
jnp
stc
xchg
fmull
les
bound
scas
cmp
subl
pop
inc
adc
ret
scas
out
adc
push
or
adc
icebp
sub
gs
cmpsb
mov
sbb
jl
mov
cmp
lea
sub
ret
enter
inc
xor
sahf
jno
xchg
mov
pushf
jg
sbb
pop
inc
pop
inc
xchg
add
jmp
push
jae
mov
test
out
lock
orb
adc
mov
sarl
cmc
push
cld
sub
icebp
xchg
std
inc
dec
xcrypt-ofb
cmpsl
sub
and
pop
inc
pop
jle
outsl
outsb
fmul
adc
ljmp
push
clc
cwtl
aam
and
dec
push
mov
push
cmp
xchg
jp
jb
mov
mov
add
inc
aas
loop
dec
jecxz
mov
dec
and
mov
xor
aad
xchg
jg
adc
cs
push
lods
sub
mov
jge
pop
subl
add
pop
aam
xchg
negl
shlb
sub
xor
inc
xor
jae
test
xchg
adc
lret
out
xor
adc
cli
mov
or
outsb
inc
imul
adc
aas
lds
inc
pop
push
mov
das
cmpb
sbb
mov
loope
mov
inc
cmp
sub
cld
add
sbb
loop
rolb
or
sub
notb
cmp
fsub
cli
movsl
int
and
cltd
mov
mov
rorl
xor
stos
and
or
jb
icebp
cmpb
adc
push
xchg
sbb
lea
imul
lahf
lret
jnp
mov
and
jb
dec
jl
cwtl
inc
push
inc
xlat
mov
mov
and
stc
or
fisttpl
loopne
or
jg
push
or
push
xchg
pop
loop
pop
cmpsb
dec
lock
je
mov
aad
dec
stc
pop
test
pop
add
push
icebp
adc
dec
jo
loope
popf
scas
repz
adc
xor
and
repz
pop
mov
or
jl
in
inc
dec
mov
xchg
pop
sub
push
fs
xchg
jecxz
mov
outsl
leave
sbb
sub
and
inc
push
mov
imul
fs
mov
xchg
sbb
popf
pushf
dec
adc
push
inc
xor
inc
xorl
stc
ret
xor
and
mov
jmp
xchg
add
or
sbbb
ds
out
jp
jmp
aaa
mov
cld
popa
mov
pop
inc
sub
mov
or
rcrl
fmul
call
mov
dec
pop
push
cld
sbb
pusha
ss
test
pushf
sbb
xchg
push
xor
in
lret
sarl
repnz
or
jb
ficompl
decl
gs
sbb
sbb
movsb
adc
fsubrs
fcoms
or
xor
or
out
jo
mov
inc
nop
popf
fwait
sbbb
jno
shll
xlat
and
and
das
outsl
aam
or
dec
pop
pop
in
lahf
pop
aas
pop
push
and
push
lock
out
es
mov
and
add
mov
stos
daa
sbb
mov
xor
mov
mov
fnstsw
add
and
insl
pop
punpckhwd
fldenv
mov
testl
adc
fadds
add
push
mov
mov
sbb
xor
mov
cmc
test
inc
stos
das
sub
cmp
inc
loope
jmp
and
pop
xchg
in
add
gs
mov
lods
test
movsb
xchg
add
pop
mov
or
mov
addb
xchg
in
mov
xor
jne
mov
das
shlb
mov
mov
test
sbb
inc
jle
in
fsubrl
imul
mov
sarl
adc
inc
ja
xchg
sti
movsbl
enter
sub
mov
sbb
aam
loope
mov
or
cli
jecxz
sbb
dec
push
div
in
call
out
cmc
push
loopne
aaa
jno
xor
mov
rclb
xor
sti
scas
repz
in
or
ud2
mov
dec
lret
pop
push
pushl
sar
loop
sbb
in
aam
les
mov
mov
imul
add
adc
int
dec
jmp
in
cmc
dec
pushf
aam
jge
imul
fwait
adc
lods
mov
xchg
in
shrd
hlt
dec
mov
sahf
mov
mov
sub
mov
mov
mulb
xchg
xchg
mov
mov
fldcw
mov
push
insb
jns
outsl
add
cmc
and
xor
mov
cmp
iret
test
xchg
mov
or
jge
mov
xchg
and
jle
sti
jecxz
adc
int
not
and
insl
dec
pop
jns
adcl
pop
sbb
sbb
jbe
test
adc
jmp
rcrb
dec
test
push
xchg
lods
mov
cmpl
pop
repz
jle
jns
and
pop
ret
mov
xor
notb
iret
mov
outsb
sub
lock
fldl
add
fmull
mov
inc
mov
cmp
dec
add
addb
rcrb
nop
push
pop
nop
repz
push
ljmp
cmc
lock
cmp
and
sbb
and
shll
mov
sbb
inc
test
push
icebp
sub
or
icebp
orl
xor
mov
xor
into
jb
dec
mov
jae
in
or
roll
ss
push
jge
daa
scas
pop
adc
and
mov
or
dec
pop
push
jns
mov
aam
clc
mov
push
jp
std
push
insb
lods
cmpsb
lret
pop
and
mov
or
ds
jp
push
mov
inc
test
cmp
loope
mov
into
or
mov
shrl
adc
cld
ja
push
lret
xchg
aad
pushf
dec
subps
not
cmpb
fwait
or
add
xor
imul
inc
mov
daa
notl
dec
and
push
loop
dec
dec
pop
sbb
or
lahf
frstor
mov
adc
inc
popf
jno
add
push
fildll
mov
icebp
push
inc
jp
int
jp
das
xor
jnp
ret
xor
pop
je
push
xchg
out
and
lock
shlb
dec
cli
xchg
hlt
nop
push
scas
outsl
push
mov
cmp
out
out
ret
mov
call
sahf
mov
cs
pop
xchg
data16
jns
cmp
mov
adc
loopne
cli
icebp
movsb
scas
or
dec
xlat
dec
sub
mov
add
das
adc
jb
adc
fiaddl
pop
mov
shll
jge
mov
mov
and
inc
es
pop
jb
mov
xor
mov
mov
out
ret
mov
mov
sahf
sti
lea
jp
adc
adc
cwtl
mov
push
out
mov
shlb
movsl
cmc
add
mov
xor
movsl
sti
push
jge
sub
fwait
or
xor
mov
pop
mov
mov
add
mov
mov
call
sbb
dec
and
repnz
fisubl
aas
inc
adc
mov
adc
adc
in
adc
inc
idivb
sbb
stos
test
mov
dec
xchg
je
clc
or
jmp
adc
es
popf
aad
mov
pop
movsl
rorl
movsb
pop
cmp
scas
dec
stc
std
mov
call
test
test
inc
and
in
imul
hlt
lret
add
push
rcll
mov
pop
lret
divb
xor
mov
cld
pop
pop
pop
xor
jge
insb
clc
mov
popf
stos
xchg
push
dec
shll
sahf
mov
fidivrs
xchg
or
fucom
mov
and
xor
pop
push
sbb
clc
mov
jb
in
fwait
outsl
cs
dec
sbb
jge
std
push
cmp
xchg
mov
rcrl
and
xor
aad
stc
test
mov
jae
cmp
movsb
test
rcr
cld
inc
je
sub
jecxz
mov
mov
push
out
push
or
fbstp
jns
out
imul
push
das
adc
xor
test
repnz
ret
and
or
jne
repz
push
push
and
ror
popf
movsb
xchg
adc
leave
xor
jae
insl
adc
pcmpeqw
mov
stc
mov
hlt
cmp
daa
lahf
fwait
js
lea
test
mov
mov
jno
test
jnp
cld
rol
out
or
inc
and
std
enter
pusha
cmp
shl
mov
mov
stc
nop
jb
lahf
movsb
jle
xchg
sub
addb
pop
add
jo
sbb
daa
loope
adc
nop
pusha
mov
popf
xchg
scas
adc
jmp
dec
dec
out
pop
out
dec
add
std
xor
xchg
jecxz
jns
dec
in
inc
lret
xor
mov
pushf
stos
cltd
insb
das
test
mov
ja
rol
je
repnz
pushl
push
shlb
pop
mov
fcomip
pop
inc
aaa
pop
fsubrs
cmp
jbe
or
dec
fisubrl
std
fadds
out
push
lods
and
ss
xchg
push
sub
xchg
pop
add
sbb
jl
inc
es
in
test
or
mov
out
xor
inc
and
lret
testb
shrb
xchg
and
icebp
shrl
add
les
dec
idivl
dec
enter
adc
jbe
xchg
xor
cmpsb
bound
cmp
add
and
es
inc
pop
jb
in
jp
xor
stos
dec
pusha
or
jo
neg
test
lcall
lods
out
bound
std
mov
ljmp
aas
fiadds
insb
or
xchg
fistps
cmpsl
stos
mov
stc
insl
jge
jno
clc
pop
bound
push
ficoml
pop
pushf
sbb
dec
pusha
stc
daa
in
imul
out
cli
jg
dec
mov
sbb
mov
andb
mov
aaa
daa
pop
stc
in
adc
adcl
int3
inc
mov
inc
xchg
pop
in
or
loopne
dec
inc
sub
xor
daa
xchg
outsl
das
loopne
fmull
icebp
cwtl
lret
xchg
xchg
out
cmp
mov
mov
add
cmp
sub
xor
and
xor
sub
sbbb
int
inc
cltd
push
push
pusha
ss
enter
mov
add
nop
push
mov
sbb
xchg
int3
push
aam
sub
std
into
mov
jp
fldt
and
mov
mov
mov
and
jg
inc
ja
push
in
xor
adc
cmp
jmp
inc
out
mov
fmulp
and
lods
xchg
test
push
sub
push
nop
mov
adc
fwait
bound
aaa
fldl
enter
cli
dec
add
and
and
sub
sbb
jne
cmp
adc
sub
pop
push
andl
cmp
sub
fs
sub
stos
aam
dec
into
test
int
dec
data16
and
sahf
loop
push
mov
add
bound
sub
xor
mov
iret
loope
xor
mov
mov
lods
or
or
xor
cmpsb
leave
int
out
add
sbb
arpl
inc
lods
add
subb
dec
jge
pop
push
or
and
es
call
pop
sbb
popf
les
test
xchg
outsl
pop
xchg
and
jb
daa
add
imul
inc
icebp
sbb
lahf
call
mov
in
shrb
testl
inc
inc
dec
into
test
js
ficompl
subb
pop
jns
ljmp
jns
and
or
repnz
out
incl
dec
out
push
push
lret
repz
je
mov
xchg
fisttpl
jg
jmp
shll
mov
int
fldl
sbb
inc
jg
in
cs
lds
dec
cmp
and
sub
and
js
insl
push
mov
xor
push
sahf
std
pop
insb
mov
or
test
sbbl
sbb
rorl
dec
sub
inc
icebp
pop
popf
popa
and
rcrb
xor
sti
mov
fs
into
inc
gs
cmpsb
sbb
test
sahf
inc
cmp
push
ficompl
inc
ret
mov
out
cmp
ds
push
mov
mov
int3
movsb
xchg
xor
lds
cmp
jns
xchg
aas
movsl
fwait
mov
cmpb
pop
xchg
jmp
mov
lea
arpl
aas
sbb
pusha
add
pushf
add
push
out
cmpb
subb
xor
mov
jo
jnp
push
pop
fiadds
mov
rol
jbe
fwait
xor
and
fldenv
jno
mov
call
bound
movsb
test
xor
das
cmp
test
dec
jmp
and
adc
frstor
cmp
pusha
js
xor
xchg
dec
addb
ss
inc
sbb
jne
or
cmp
je
jb
cmpsb
xor
add
hlt
adc
push
or
xchg
and
push
mov
mov
out
mov
lds
stc
add
mov
xor
dec
mov
jne
aad
sarl
add
lcall
lods
mov
push
mov
mov
adc
adc
dec
mov
mov
mov
sbb
lahf
loop
mov
dec
xchg
fcoml
stos
xchg
js
stc
adc
lahf
aam
xor
jns
xchg
cmp
stos
dec
ret
lret
jp
mov
scas
lret
xchg
xor
movb
push
xor
sbb
in
push
lods
add
fbld
repz
or
add
dec
add
push
cmp
lret
test
mov
negl
mov
pusha
sub
je
cmp
push
fisubl
xor
add
xor
xchg
pop
pop
sub
adc
pop
push
adc
xor
xchg
dec
inc
push
xchg
hlt
push
shl
in
jp,pn
cltd
dec
and
adc
add
mov
stc
jb
add
fsubrl
aam
and
mov
and
and
or
bound
into
idivl
outsl
and
jo
jp
mov
pusha
jae
dec
push
sti
lock
lcall
pop
mov
daa
ljmp
mov
ret
scas
mov
ss
gs
xchg
aaa
pop
sub
mov
rcl
fidivs
mov
adc
outsl
cltd
sbb
out
lds
and
cld
insl
stc
xchg
jb
gs
or
xchg
das
xchg
arpl
mov
orl
sahf
sbb
int
and
ret
cmp
mov
mov
in
loopne
mov
mov
add
push
push
shlb
pop
mov
cmpsl
cwtl
in
lahf
js
dec
bound
int3
mov
addr16
nop
cmp
sahf
stc
in
mov
roll
cltd
dec
mov
fsts
sbb
dec
mov
mov
stos
faddl
loope
xlat
push
sbb
push
jg
stc
das
sub
jmp
inc
rolb
jecxz
push
scas
mov
pop
icebp
or
jb
arpl
movsl
pop
jno
fists
jbe
sbb
scas
jb
outsl
cld
test
lret
xlat
sub
push
pop
xor
sbb
adc
xchg
push
push
mov
sbb
sub
sahf
je
add
sub
push
fidivrl
jae
repz
sub
xlat
aad
mov
pop
test
aad
xlat
js
push
pop
push
mov
and
jns
out
mov
shr
pshufw
cwtl
mov
adc
mov
push
das
sub
add
push
mov
push
or
and
enter
int3
and
out
push
icebp
insl
xchg
pop
jl
mov
je
and
fnstcw
fsts
es
push
ljmp
sub
mov
xchg
jecxz
hlt
aad
xor
push
push
rorl
cmp
mov
int3
inc
xor
ds
pop
jo
in
sbb
test
push
or
mov
adc
dec
add
and
pop
mov
subb
jne
cmp
lret
enter
dec
ds
push
lret
jmp
mov
sub
shlb
repnz
adc
cmp
repz
mov
in
and
shlb
imul
adc
jbe
push
lea
sub
repz
dec
adc
jp
inc
inc
inc
scas
test
jo
mov
push
xor
or
pop
out
sbb
sub
lds
or
ret
enter
int3
pop
xor
and
jns
push
mov
lods
mov
adc
jns
pop
out
cli
cld
and
into
push
xchg
jg,pn
xor
test
adc
jmp
pusha
pop
adc
mov
clc
xor
adc
xor
int3
add
xchg
incl
xor
outsl
js
sbb
in
and
loope
ljmp
subb
cmp
adc
das
out
or
pushf
sahf
mov
or
sub
fdiv
fcoml
lds
add
and
or
cmc
xor
or
sbb
dec
cs
lahf
push
push
sahf
jae
mov
leave
or
sub
add
jnp
inc
shlb
jmp
aaa
xchg
pushf
shll
divb
imull
jb
push
and
adc
push
data16
jb
shlb
test
dec
pushf
or
lock
loop
cmp
cmpsl
call
outsl
mov
mov
sub
or
push
adc
add
rcll
mov
mov
pop
jle
iret
xorl
negl
scas
mov
push
dec
sbb
mov
mov
ror
fimuls
out
in
xor
call
int
inc
lock
mov
cmc
mov
aad
orb
mov
mov
push
imul
sbb
cmp
or
aad
movsl
sarl
je
push
gs
inc
into
mov
sub
ja
push
sub
mov
inc
or
xor
dec
mov
dec
and
push
jns
cmpsl
pop
mov
lret
call
test
push
bnd
bound
dec
ljmp
pop
add
sbb
enter
popa
mov
jbe
or
ljmp
call
lret
jb
gs
xlat
pop
sbb
or
popf
jmp
jge
sbb
or
in
aaa
pushf
inc
push
pop
cltd
or
cmc
or
xlat
loope
mov
dec
sub
icebp
stos
mov
jo
sub
shrb
es
pusha
sub
add
ljmp
imul
add
insb
jp
sti
xor
push
inc
cld
cld
mov
jp
leave
sbb
sub
and
lock
add
les
jmp
mov
stc
dec
pop
jo
fsubrp
dec
add
scas
out
inc
lahf
xor
jp
push
ficoms
out
jb
int
mov
inc
outsl
push
pushf
stos
jl
out
and
cmp
ffree
push
out
xchg
push
sub
into
into
jl
push
std
sahf
in
cmp
or
or
lock
inc
mov
xor
out
iret
sub
jns
shll
fimull
jle
mov
popf
sub
pop
fistpl
scas
scas
inc
cli
or
push
adc
movsb
stc
pop
sub
rcrb
jae
sub
mov
out
fbld
pop
mov
mov
es
movsb
das
int
adc
push
pop
outsb
mov
add
lods
shrl
cmp
ds
or
addb
adcl
mov
imul
mov
icebp
shlb
dec
ficoms
leave
rcll
mov
push
inc
iret
adcl
mov
sbb
imul
or
or
push
incb
enter
adc
ja
stos
call
inc
cltd
test
mov
insl
mov
dec
daa
insl
cwtl
movsb
jae
pop
mov
fcoms
mov
dec
insl
hlt
dec
mov
jae
xchg
int3
push
mov
fisubrs
jl
xchg
mov
add
fnstenv
int3
mov
push
xlat
push
imul
mov
leave
mov
and
adc
sub
mov
cli
inc
and
adc
jno
cmp
daa
fisttpl
scas
rcrb
aad
cmp
sbb
fwait
loope
mov
and
loope
das
or
sbb
sub
push
inc
testb
in
mov
push
sub
lods
mov
push
adc
push
xlat
mov
or
xor
out
push
mov
outsl
out
push
repnz
out
mov
pop
dec
gs
push
test
ret
mov
mov
pop
push
xchg
push
cmpsl
out
mov
cld
shrl
push
gs
lcall
cmc
fisubrl
mov
mov
lcall
in
push
jle
cmp
fsubs
cmp
pop
dec
sbb
push
inc
cmp
clc
cmpsl
cmp
in
adc
xor
hlt
mov
lds
sub
pop
arpl
stos
pop
outsl
jmp
and
sarl
push
pop
int
jl
push
xlat
in
stos
outsb
stos
daa
dec
rclb
cmp
in
pop
invlpg
mov
out
jg
adc
popf
into
sbb
jne
pop
rolb
pop
xchg
test
test
std
outsl
mov
mov
es
sub
sub
jns
decl
insb
mov
fstpt
cmp
mov
sbb
int
xchg
cld
sbb
adc
dec
sbb
imul
js
add
out
jnp
les
test
pop
or
jb
inc
test
sub
lock
movsl
inc
lcall
test
xor
lock
shlb
cmpsb
or
cmp
jmp
lods
dec
sub
mov
adc
xchg
dec
pop
movsl
inc
mov
daa
outsl
push
rclb
jge
pop
pop
inc
adc
or
mov
dec
xchg
xchg
pop
cs
sbb
or
ss
and
cmp
mov
retw
lret
sti
mov
jg
loope
xchg
and
mov
pop
inc
adc
movsb
fs
xchg
out
andl
addr16
ss
xchg
es
ss
test
fisttpll
sbb
xchg
fcompl
dec
lods
xchg
push
fmulp
inc
faddl
int3
jle
popl
cmpsb
sbb
sarb
mov
fucom
subb
aad
fisttpll
rclb
jl
adc
nop
adc
mov
inc
inc
outsb
add
addr16
call
icebp
cmc
mov
cmpsl
xchg
cmpsl
mov
lret
or
test
in
lret
xor
inc
sub
daa
mov
mov
pop
inc
mov
cmp
push
inc
sub
pop
pop
repz
testb
pop
fsub
rolb
je
test
setnp
fisubrs
sbb
mov
pop
dec
fcomp
les
loop
push
dec
ja
mov
std
test
mov
imul
adc
lods
push
push
test
shrl
add
mov
jo
idivl
and
fdivr
fcompl
cwtl
fldt
cwtl
repnz
push
ss
sarb
leave
pop
jl
rcl
loop
clc
push
mov
ljmp
cli
movsl
mov
ffree
mov
jp
je
out
dec
lds
fists
and
stos
les
aam
das
inc
jne
mov
dec
sub
scas
jns
sub
jge
push
fmuls
ja
dec
js
xchg
jge
xchg
adc
sub
dec
sub
mov
lea
jmp
cmpsl
dec
scas
mov
jl
mov
add
hlt
enter
mov
ret
or
adc
in
mov
push
push
jb
mov
mov
jp
inc
pop
in
hlt
dec
int
add
lea
xor
ret
loope
inc
add
add
sub
mov
cmp
mov
or
scas
push
jns
xor
outsl
mov
aaa
fnstsw
xor
test
sti
sbb
mov
fisttpll
and
xor
lahf
in
sbb
or
dec
lcall
mov
hlt
test
jo
mov
or
mov
fsubrs
cmp
out
push
pop
push
cmpsb
icebp
push
ret
xchg
xor
cmp
dec
xchg
inc
data16
adc
jb
push
add
cld
iret
dec
ret
dec
or
int3
xor
xchg
rcrl
stos
add
xor
push
adc
jle
sahf
xor
jecxz
adc
and
and
mov
insl
mov
es
xlat
cmp
aas
sbb
daa
jle
cmp
push
push
dec
pop
mov
in
cmp
bound
adc
sahf
aaa
clc
xchg
and
test
sbb
inc
aad
mull
push
fucom
inc
adc
lock
outsb
pop
stos
icebp
lahf
andps
mov
jae
jmp
or
shll
sub
adc
aad
pop
mov
adc
xchg
mov
out
mov
xor
scas
in
call
jae
mulps
test
jle
jnp
cmpsl
inc
aaa
repz
pop
sub
sbb
mov
clc
mov
jne
fs
incb
xchg
and
ret
das
jne
arpl
pop
sbb
hlt
inc
popa
xor
mov
out
cwtl
sahf
pop
inc
dec
add
jge
adc
iret
lds
mov
in
mul
lea
push
icebp
push
cmc
adc
les
add
mov
sub
imul
or
ljmp
outsl
fsts
or
push
jg
inc
pop
jae
cwtl
in
aas
or
ficomps
mov
dec
sbb
outsb
push
push
cli
push
fdivp
jle
sub
sbb
mov
test
sbb
insb
cli
ljmp
sbb
aam
add
push
fs
jns
fisubrl
mov
add
pop
or
pop
or
cmp
test
sahf
xchg
or
fnsave
pop
push
add
in
clc
imul
pop
rcr
cs
into
mov
popf
xchg
or
andb
sbb
lcall
xor
lods
aad
sbb
arpl
add
stos
pusha
ret
jp
push
inc
test
mov
test
cmp
out
pop
cmp
outsb
mov
lret
jp
mov
mov
stc
dec
mov
or
test
sub
aad
ja
xor
lods
in
in
int3
stc
push
lea
pop
or
xor
dec
js
cld
subb
cwtl
lds
mov
mov
cli
add
scas
incb
dec
lret
imul
lret
xchg
add
fisubl
aam
fildll
rcrl
xor
or
lret
jae
pushf
add
rclb
pop
lods
xchg
lds
cs
mov
ss
pop
loop
xor
rol
mov
sub
ret
pop
iret
loope
mov
sbb
clc
push
cmp
mov
xchg
jle
mov
inc
lahf
rcr
cmpb
aad
call
dec
inc
jo
push
mov
jns
outsb
decl
ret
jne
test
adc
mov
pop
scas
push
pushl
lahf
je
cld
pop
leave
xor
cmp
aas
xchg
aam
inc
mov
mov
ret
fistpl
add
test
repnz
mov
icebp
mov
sbb
rorb
loop
add
movsb
lcall
ret
inc
fsubrl
cs
int
pop
fs
mov
mov
movsl
ss
test
pop
xor
lds
fwait
pop
lahf
xchg
faddl
loop
dec
movsl
aas
das
rcl
xchg
jmp
enter
enter
jp
ret
or
dec
sarb
push
mov
loope
pusha
jo
push
push
out
sbb
lcall
ljmp
flds
inc
lea
cli
inc
xchg
push
jae
inc
lea
dec
mov
into
test
and
mov
sbb
loopne
cs
ds
fadds
jnp
int3
cmpsb
dec
vmwrite
xchg
lods
pop
ror
into
js
popf
imul
insb
insl
loope
fimuls
std
mov
rcrl
pop
out
in
xor
cmpsb
xchg
cmp
jno
aam
push
sahf
setge
imul
mov
push
or
cmp
mov
jo
and
xchg
inc
jne
lret
jae
fcoml
mov
mov
adc
outsl
mov
inc
adc
xchg
jg
bound
and
pop
sbb
ss
and
sub
lcall
mov
or
inc
mov
int3
xor
dec
loope
std
or
mov
fists
movsb
lret
popf
repnz
js
cmp
or
iret
mov
int3
jmp
jno
push
xlat
jnp
jbe
mov
test
loope
adc
dec
andl
rcrl
mov
add
cld
scas
call
imul
or
and
mov
insb
sahf
push
mov
js
pop
jmp
cwtl
aam
lcall
add
lods
int3
imul
adc
fmull
push
shlb
sub
lahf
xchg
test
mov
push
loop
mov
and
mov
movl
inc
mov
and
icebp
add
daa
adc
call
lcall
inc
imul
call
jbe
ds
test
popa
push
dec
mov
jecxz
jmp
mov
pop
shll
sub
loope
xor
push
gs
inc
mov
mov
sub
int3
mov
cltd
mov
lock
int3
pop
lret
pop
cmpsb
dec
inc
mov
mov
adc
sbb
jl
sbb
add
jp
jb
mov
les
pushl
inc
in
xchg
or
jne
lds
leave
push
jne
push
lds
push
xchg
add
inc
mov
mov
jbe
jge
sub
rcrb
insl
popf
sub
fdivs
inc
inc
fninit
addr16
test
sub
out
scas
stos
je
daa
adc
jl
pop
pushf
mov
xor
clc
or
js
mov
movsb
mov
daa
daa
jge
sti
or
and
pop
cmp
jo
mov
jno
push
adc
and
and
mov
fcomps
dec
push
scas
cmpsb
xor
iret
test
push
lea
lds
mov
mov
add
or
xor
adc
bound
in
inc
or
rol
pop
rorl
mov
mov
in
pop
aaa
sbb
out
push
xchg
push
mov
fst
jp
xchg
lret
int
jg
xlat
fidivl
loopne
jp
loopne
mov
adc
stc
js
jl
or
gs
fistl
aaa
lea
out
sbb
mov
bound
sub
xor
lods
loope
das
lods
jo
xchg
lcall
roll
xorl
adc
jl
iret
push
stos
add
cmp
les
out
aaa
xchg
cwtl
ror
jge
subl
xor
outsl
mov
lods
mov
dec
mulps
dec
inc
inc
mov
les
push
or
in
stc
jo
mov
test
push
addr16
idivl
fidivl
xchg
das
shlb
mov
clc
rcrl
repz
imul
or
mov
adc
mov
mov
test
mov
fisttps
mov
mov
sbb
andb
hlt
hlt
ss
pop
clc
cli
lret
inc
in
inc
cs
out
push
shufps
fdivrs
js
orl
xor
idiv
popf
jg
add
stos
orl
pop
popf
cmc
pop
add
clc
mov
lret
or
ret
jl
or
push
or
xchg
std
ror
subb
cltd
mov
ja
mov
loopne
mov
xor
cmp
in
sbb
inc
jno
and
mov
popa
fs
mov
mov
mov
cmp
push
cmp
or
into
mov
xchg
arpl
xchg
cmp
and
sub
push
or
out
push
push
bound
push
or
push
ret
dec
fdiv
mov
jno
sub
push
mov
fnstcw
outsl
mov
ss
inc
lret
dec
jmp
dec
add
mov
movsb
jae
scas
adc
imul
inc
fldln2
mov
lahf
xor
mov
in
cmp
adc
sub
scas
and
jbe
jb
faddl
sub
jne
xor
mov
cmp
insl
and
rcl
inc
ja
in
fwait
clc
int
push
push
in
insb
les
lahf
subl
rolb
mov
ret
mov
push
push
xor
mov
arpl
push
data16
cmpsb
movsb
aad
cmp
jnp
pop
fdivrl
pop
sbb
push
sub
xor
xor
pop
cmovns
ret
sbb
pop
dec
rcrl
in
lret
shrl
rorb
xchg
xor
sub
daa
cmpsb
cld
fldt
lock
jne
mov
dec
push
pusha
sub
jnp
outsb
dec
shrb
lahf
fs
hlt
imul
push
mov
cmp
out
dec
fmull
sub
imul
mov
push
sbb
mov
mov
imul
pop
cmp
add
movsb
stc
push
nop
fsubrs
fbld
sub
daa
jp
jmp
sub
jge
add
cli
mov
fwait
out
sahf
iret
adc
adc
inc
add
popf
push
ljmp
imul
sbb
inc
pop
orl
insl
inc
add
aad
dec
out
mov
dec
mov
rorl
loopne
loop
outsl
mov
jnp
jmp
inc
fcompl
cltd
inc
and
push
fisubs
nop
pop
dec
push
dec
adc
jecxz
lret
pop
stos
sbb
shr
and
icebp
and
sbb
sbb
add
mov
push
imul
cli
aaa
aam
and
mov
sub
das
movsl
mov
in
push
add
mov
loopne
mov
pop
rcr
aam
mov
fwait
jg
ret
jo
ss
leave
incl
dec
xor
push
and
xchg
push
mov
scas
popf
repnz
gs
popa
repz
pop
pop
pop
inc
mov
push
or
sub
push
lods
sti
mov
cli
add
xor
push
dec
in
adc
out
scas
cmp
jecxz
push
pop
xchg
add
insl
dec
pushf
cmp
inc
clc
pusha
cmp
jp
dec
mov
cmp
pop
cwtl
jecxz
mov
adc
shll
lds
mov
test
cwtl
mov
mov
mov
jne
popf
leave
push
fcoml
sub
ljmp
pop
daa
out
leave
cmc
add
push
sahf
mov
xchg
aaa
or
pop
test
shrl
out
loop
jbe
xchg
loopne
pop
pop
ds
mov
or
xor
dec
push
movsb
jg
lods
and
das
mov
dec
sub
or
fisttpl
pushf
xor
add
jnp
insl
or
cmpsb
test
inc
pop
sahf
aam
in
cmp
inc
test
adc
jle
fwait
dec
pop
inc
xchg
mov
pop
dec
aam
hlt
movsb
mov
loop
jmp
ss
repz
decb
aaa
mov
scas
scas
int3
adc
mov
mov
lret
cmp
sarb
inc
mov
filds
jbe
fwait
insl
sbb
cmpsl
mulb
mov
inc
and
sub
add
add
and
mov
pop
notb
mov
out
lret
xchg
leave
clc
in
push
aas
sarl
test
jmp
popa
out
ret
xor
mov
stos
aas
mov
jp
mov
stos
and
movsb
cmp
bound
icebp
sub
pop
inc
and
xchg
dec
mov
fsts
lods
cmc
xchg
addr16
mov
ljmp
adc
subl
jb
flds
xlat
bound
in
xlat
dec
fistpll
mov
loope
push
push
scas
jae
adc
xchg
mov
pop
push
xor
cmc
andl
insb
test
lret
add
pop
shr
mov
lods
mov
ss
sub
outsb
popf
lods
shll
sub
lret
add
xor
sub
int
shrb
xchg
popa
pop
loop
push
add
lcall
fs
cli
jl
or
and
cmp
lret
inc
push
and
xor
shr
imul
mov
add
rolb
mov
dec
mov
shll
js
outsl
rorb
pop
sbb
inc
sub
cmp
scas
into
fxch
jle
add
jge
pop
out
push
cmpsb
inc
pop
sbb
mov
mov
jmp
push
add
dec
jecxz
std
push
es
mov
mov
push
iret
cli
jno
cmpsl
or
leave
xlat
cld
jle
push
lret
add
movsl
sub
imul
push
dec
and
mov
xchg
leave
xchg
in
outsl
xchg
dec
mov
push
dec
mov
icebp
push
xchg
pop
clc
icebp
scas
ror
test
sub
lods
fcomp
and
ja
sti
outsl
imul
or
fstps
lods
jb
inc
jb
inc
mov
paddd
or
sub
xchg
shll
mov
enter
adc
mov
cmc
stos
das
lret
ror
rcrb
lret
xchg
addr16
mov
mov
scas
adc
test
cmp
int3
mov
dec
int
cmc
sub
push
test
jae
adc
test
inc
cmpsb
pushf
jae
popa
push
or
hlt
add
xchg
and
jge
push
or
outsb
sub
cltd
mov
scas
add
xchg
icebp
dec
or
hlt
or
ss
pop
pop
dec
dec
sar
in
pop
push
cld
in
add
test
pop
adc
push
jp
imul
hlt
inc
sub
xchg
pop
pop
push
or
cmp
inc
incl
divl
pushf
jl
jne
pushf
sti
xchg
in
mov
inc
not
ficomps
scas
inc
sub
jp
sub
dec
ja
push
add
std
mov
fisubl
inc
push
bound
insl
leave
pop
out
pop
fdivl
sbb
add
fcoml
lods
push
insb
aad
or
nop
sbb
sar
mov
pop
cmpsb
xor
dec
in
hlt
mov
push
add
jno
xchg
cmpsb
add
shrl
jecxz
stos
jp
lret
jecxz
xchg
lods
xlat
xchg
adc
ret
pop
push
aaa
xchg
mov
scas
xchg
push
mov
dec
stos
mov
push
loop
cld
icebp
jge
popf
push
in
lcall
sub
rcrb
daa
cmpsb
cmpsb
stc
stos
mov
jge
add
mov
sbb
pop
push
jne
testb
popf
dec
inc
jns
sub
cmp
push
lods
sub
xchg
mov
mull
push
mov
sbb
sbb
cwtl
xor
dec
or
in
mov
sbbl
or
mov
add
adc
repz
stos
jnp
fisttpll
add
stos
jns
in
cmp
lods
lcall
addr16
je
fsts
lods
push
adc
mov
xor
push
adc
das
fidivrl
in
lret
mov
hlt
push
aas
inc
dec
jns
in
and
dec
cmpsl
sarl
enter
dec
rolb
mov
je
mov
jl
stc
jae
xchg
mov
mov
dec
rcll
imul
mov
and
mov
jge
mov
push
gs
outsb
int3
xor
add
mov
pop
lret
and
adc
aad
stc
cmp
dec
pop
stos
je
jb
in
inc
aas
pop
loopne
mov
xchg
sub
insl
insl
dec
lds
add
pop
mov
insb
xchg
sbb
test
sub
fwait
jg
cmp
out
xchg
or
icebp
dec
mov
sti
or
lret
jne
sub
mov
imul
push
adcl
std
repz
push
push
cmp
inc
arpl
imul
inc
and
jns
subb
std
lock
enter
sbb
push
lea
mov
fs
dec
mov
push
ljmp
inc
in
ret
popa
mov
inc
leave
pop
jbe
inc
cmpb
mov
arpl
dec
jge
shl
fs
xchg
stos
int3
add
sti
mov
jge
add
filds
les
aaa
sub
divl
add
pop
lcall
fstl
aam
lea
pop
negb
mov
fwait
mov
xor
shrl
inc
push
adc
jle
lret
pusha
stos
push
xor
imul
sbb
addb
add
or
lret
pop
loope
push
mov
xlat
mov
jns,pn
fcmovb
dec
stc
cmp
movsb
cmp
sbb
addr16
mov
or
cs
sbbl
repnz
test
imul
ret
jae
outsb
mov
stos
sbbb
js
aad
cmp
push
jns
stos
dec
pop
je
outsl
stos
daa
sub
mov
mov
mov
bound
loopne
or
dec
daa
add
daa
push
inc
stos
outsb
pop
mov
jmp
loope
push
pusha
stc
test
mov
pop
dec
push
clc
out
cld
add
call
sti
fdivrs
xchg
lcall
fstps
sbb
push
and
je
in
dec
adc
lcall
aas
cld
loop
cwtl
scas
or
sbb
and
out
movsl
imull
jp
adc
lcall
xchg
stos
jns
pop
xchg
test
jno
pushf
dec
popf
mov
std
sar
inc
mov
aas
icebp
push
mov
mov
lods
bound
or
adc
imul
sti
xor
pop
mov
add
addr16
push
mov
cltd
lods
mov
fldt
clc
add
sahf
insb
shlb
xor
test
adc
jge
xchg
cmc
imulb
xor
cwtl
sbb
stos
sub
sub
fiaddl
add
cmpsb
cmp
scas
xor
and
sub
push
cmp
lods
cmp
cmp
mov
push
sub
stc
cmp
addr16
push
out
loopne
fldcw
jmp
shlb
inc
data16
shll
mov
jne
push
lods
cmp
in
movsl
pop
test
dec
mov
enter
cmp
adc
inc
xor
decb
and
xlat
inc
ss
push
add
call
xor
or
and
or
sub
add
xchg
leave
adc
dec
add
rcr
sub
pop
in
hlt
call
aad
mov
call
repnz
loopne
xor
mov
or
cmp
fcompl
ret
and
js
cld
xchg
mov
shlb
into
jmp
mov
insl
inc
cmp
mov
mov
dec
call
loop
daa
scas
add
dec
xchg
aad
sbb
pushf
inc
popa
sub
in
and
or
jno
jecxz
cwtl
fwait
cmpsb
xchg
lcall
mov
pop
sbb
sub
dec
cmc
fisubrl
in
shll
cltd
jb
repz
pushf
in
imul
push
and
mov
xchg
cmp
adc
lahf
mov
push
or
test
add
adc
jl
xchg
test
xchg
sarb
lret
aam
test
dec
repz
push
push
push
inc
mov
sub
dec
or
adc
pop
or
enter
push
dec
and
adc
stos
hlt
fistps
push
or
adc
mov
cmpsb
inc
out
jg
mov
aad
jge
mov
adc
add
pop
jb
aaa
aam
in
in
sti
jnp
in
ljmp
xor
scas
push
push
clc
repnz
sahf
pusha
mov
or
or
sbbb
push
or
jo
gs
rcll
lret
inc
jle
and
cli
sub
je
and
dec
shll
or
xor
fldenv
gs
sub
and
mov
jmp
loop
cmp
sbb
add
cmpsb
or
loope
sbb
daa
or
scas
inc
in
stc
mov
stos
jb
in
push
adc
sub
sbb
fsubr
popf
dec
sbb
jmp
into
cmp
addr16
dec
mov
xchg
aam
leave
in
in
icebp
adc
out
and
sub
xchg
icebp
mov
jns
mov
stos
lea
inc
rolb
lret
fmulp
outsl
stc
out
bound
scas
or
pop
das
add
mov
sub
icebp
loope
pop
fs
clc
xor
stos
add
sub
imul
out
inc
out
test
dec
ret
imul
mov
mov
call
cmpsl
pop
sbb
outsb
movsb
lahf
fldenv
js
xchg
dec
stos
cmp
sub
lods
pop
cs
daa
std
bound
stc
ss
mov
popa
loope
inc
cmpsl
mov
pop
imul
jg
not
hlt
mov
jg
es
imul
and
outsb
jae
cmp
mov
xor
or
or
int3
adc
hlt
pushf
and
or
out
fsts
mov
ret
push
and
mov
ss
aaa
leave
or
aaa
jg
scas
fnstenv
sub
sub
push
cwtl
adc
pop
push
cmpsb
roll
push
xchg
fstpl
xor
hlt
pop
movsl
mov
lcall
adcb
leave
push
out
test
lret
add
insb
mov
les
or
imul
call
fisubrl
inc
dec
dec
mov
jmp
test
mov
dec
xchg
fsubl
jmp
daa
enter
adcb
add
outsl
xchg
sarl
imul
pop
repnz
add
mov
mov
insl
mov
mov
je
jmp
jnp
pushf
outsb
std
pop
andb
mov
cmp
lods
in
or
loop
and
nop
adcl
std
out
dec
xchg
cmp
sbb
lds
cmpsb
cmpb
mov
inc
sub
sbb
push
sub
fsub
cmp
sbb
add
mov
push
pop
loope
ss
addr16
sarb
inc
stc
iret
pushf
or
decb
ss
push
dec
hlt
mov
punpckhwd
icebp
outsb
mov
jb
inc
cli
lods
xchg
push
cwtl
add
or
or
xor
inc
enter
je
fnstsw
and
pop
pop
lcall
or
cli
sub
add
loope
ret
mov
and
sub
cmp
cmpsl
pusha
xor
fs
dec
or
sbb
mov
mov
idivb
mov
dec
inc
movsb
mov
xor
shll
ljmp
pop
mul
fcomip
push
ja
push
xor
jg
push
in
cs
push
xchg
push
jo,pn
adc
je
cmc
shrb
setno
js
fstpt
dec
loopne
imul
xchg
inc
pushf
and
cld
addb
fiadds
mov
cli
add
push
jnp
adc
in
leave
cmpl
sub
push
sbb
lret
mov
and
jp
icebp
aaa
or
dec
cwtl
xchg
mov
sti
sbb
pusha
rclb
sbbl
aaa
mov
inc
mov
in
je
dec
clc
cmp
iret
lret
pop
lret
aas
cmpsb
loope
aam
pop
xchg
and
das
jge
loop
cmpl
test
inc
fcomi
int3
ret
enter
popa
pop
int
stc
lahf
pop
ret
jns
ret
arpl
stos
inc
adc
enter
rcrb
popl
inc
test
xchg
sbb
pop
mov
mov
add
or
and
lahf
sarl
xchg
xor
and
les
call
lock
xchg
jp,pn
or
out
call
stos
cmp
adc
decl
pop
stos
cs
movsl
cs
jp
sti
mov
sbb
mov
sarb
dec
mov
jne
lret
dec
shrl
lock
mov
sti
shrl
fdivrl
popl
mov
fisubs
aam
clc
inc
hlt
scas
stc
mov
aad
xor
jmp
xchg
dec
cmp
mov
addl
fs
sti
dec
mov
nop
fwait
stos
cmp
aaa
das
cs
test
or
dec
xor
dec
jge
test
pushl
xlat
sub
test
mov
push
pop
cmp
and
mov
test
jmp
icebp
push
leave
jne
jmp
cmc
loopne
sub
test
xor
xchg
xor
mov
mov
xor
mov
loope
mov
jg
mov
in
adc
push
add
popf
push
dec
rorb
stc
lods
pop
lahf
jle
or
jle
into
stos
mov
dec
adc
outsl
mov
jo
xchg
sub
out
pushf
mov
add
mov
sub
push
lock
or
ljmp
adc
mov
dec
bnd
movsl
pusha
mov
and
div
gs
repnz
jne
out
imul
mov
dec
js
popa
sbb
popa
dec
mov
das
je
xor
xchg
or
sbb
inc
ret
je
mov
mov
xchg
xor
cmp
xchg
pop
repz
pop
cmp
movsb
outsl
mov
ds
or
leave
in
lea
xchg
pop
jl
enter
bound
lds
loop
xchg
sarb
test
gs
lret
xor
or
aam
cwtl
mov
test
jbe
push
fildll
jb
out
sub
push
jno
cmc
ljmp
aas
lds
xchg
scas
or
imul
loopne
inc
xchg
inc
dec
and
lods
add
cmc
mov
aaa
dec
mov
popa
mov
and
mov
cmpl
test
imul
add
push
inc
pop
nop
test
xchg
shr
fs
cli
xchg
push
push
inc
jns
mov
dec
nop
cltd
fldenv
subb
imul
xor
outsl
and
lds
adc
jne
jg,pn
mov
and
push
sar
iret
dec
pushf
push
bound
xor
in
data16
loope
lods
data16
add
pop
pop
insb
mov
push
fld1
mov
and
notb
mov
jnp
ret
popf
cs
lahf
or
push
and
shlb
add
loope
lcall
repnz
sbb
push
rcl
mov
test
outsb
cmp
mov
lods
out
mov
or
or
imul
mov
cmpsb
sub
jmp
mov
clc
add
push
push
in
test
dec
aaa
push
sub
jl
xlat
mov
push
adc
leave
mov
inc
jmp
loopne
popl
sbb
loope
dec
test
push
add
repnz
roll
mov
js
mov
jmp
cmp
or
imul
adc
pop
jne
add
cld
mov
test
nop
mov
pop
dec
cpuid
ljmp
pushl
andb
mov
pop
imul
ja
add
lods
sub
cltd
ftst
mov
faddp
out
push
jns
inc
xor
mov
data16
sbb
out
adc
fmul
mov
jmp
loopne
sub
mov
popa
add
push
outsb
push
jmp
push
stos
cmc
popa
cmp
add
cld
jmp
mov
adc
cli
outsb
jns
inc
inc
clc
jo
adc
jl
flds
cs
movsb
adc
out
sahf
sbb
repz
test
insl
es
sub
repnz
mov
xor
and
sub
fstpt
jecxz
imul
addr16
icebp
dec
mov
xchg
sbb
int3
and
jmp
ret
in
pop
jecxz
mov
xchg
adc
lock
sti
cmpsb
gs
decl
call
pop
loopne
pusha
inc
or
mov
in
loop
aad
adc
out
sti
and
inc
mov
inc
dec
or
into
movsb
jecxz
inc
push
insl
rcrb
sti
mov
mov
ja
mov
sbb
add
pop
fninit
add
sub
sub
add
mov
cmp
xchg
out
add
test
test
xor
push
arpl
cld
cs
shlb
jo
add
pop
rorb
xor
out
pushf
pop
cmpsl
jl
popa
inc
inc
ds
sbb
or
lcall
popf
dec
frstpm(287
lds
and
std
mull
outsl
add
inc
xor
imul
sbb
jg
xchg
in
cmp
sbb
es
pop
jne
outsb
or
cmp
inc
and
repz
inc
lds
int
cld
sti
out
mov
lret
xchg
dec
push
sub
dec
popf
aam
mov
js
adcl
cmpsl
shrl
in
mov
iret
cmp
cmp
mov
push
mov
jbe
inc
or
out
mov
gs
lods
xchg
and
enter
in
adc
or
fisubl
mov
cmp
loopne
dec
inc
frstor
aad
sub
fnstenv
gs
movsl
decl
sbb
bound
lret
dec
pop
inc
fwait
sbb
push
mov
lods
mov
and
je
push
aas
jb
aas
dec
pop
pop
push
mov
jg
ds
or
and
or
jo
icebp
lea
cmp
pop
fisubl
jns
xchg
filds
cld
sti
int
inc
aam
inc
push
jg
cmp
xor
mov
das
add
lea
sub
sbb
mov
in
push
ds
shlb
adc
push
cld
jo
pop
push
mov
adc
das
push
pop
outsb
pop
sarl
fstps
ljmp
pop
lods
ljmp
xor
dec
and
iret
dec
adc
lahf
pushf
leave
mov
xor
addr16
rcll
iret
push
aaa
xor
xchg
shrb
mov
inc
push
sub
mov
mov
xchg
add
or
push
pop
notl
imul
pop
pop
or
enter
mov
xchg
out
fcompl
mov
enter
rcrl
cmp
add
sbb
in
subl
mov
mov
in
cltd
cld
imul
mov
nop
ret
scas
or
sub
xorb
push
xchg
or
xchg
xchg
icebp
adc
inc
and
ljmp
xor
stos
cli
jle
dec
into
jb
fldl
and
cld
aam
mov
cmpb
int3
hlt
push
xlat
cwtl
imul
dec
xor
sub
pop
pop
popl
jb
push
in
push
dec
pop
in
mov
pushf
js
cmp
out
xchg
jbe
pop
inc
add
lods
fsubp
xor
addr16
jbe
mov
les
or
imul
xor
fimull
push
iret
xchg
scas
pop
movsb
lahf
cmp
cmpsb
lcall
push
xorl
arpl
or
enter
sub
scas
jo
dec
dec
fs
popa
fildll
insl
in
lcall
xor
cmc
xor
xlat
shlb
hlt
shl
rol
inc
lods
cli
xor
pop
bound
inc
mov
sub
lcall
fwait
addb
js
push
fs
sarl
push
inc
push
and
mov
mov
mov
std
dec
or
add
mov
in
mov
inc
repnz
xor
cmp
std
lret
cmp
movsl
jle
adc
jb
sub
movsl
movsl
mov
cmp
xchg
or
add
mov
scas
mov
jp
xor
test
mov
push
inc
std
pusha
lahf
cltd
stos
inc
push
pop
out
movsl
arpl
test
pop
inc
popf
lods
cmp
mov
clc
xor
cmpsl
push
push
lcall
sbb
xchg
rcl
rep
cmp
cs
out
mov
out
inc
pop
lock
xchg
or
inc
inc
lods
aad
ja
fwait
push
mov
mov
imul
faddl
aam
je
push
das
pop
inc
cmp
jmp
mov
mov
jno
lods
in
repz
cmpsl
addr16
cmpb
scas
dec
jle,pt
push
das
mov
sub
into
pop
js
cs
sar
mov
out
adc
push
repnz
fs
stos
test
movsl
xor
or
cld
mov
cltd
enter
clc
xor
pop
sbb
inc
call
das
pusha
js
cmp
cmp
xchg
dec
scas
dec
jo
mov
gs
xlat
hlt
sbb
sub
stc
loope
jns
es
dec
sahf
add
mov
dec
loope
push
lea
cld
ss
imul
jle
scas
xor
add
xor
cmp
add
lds
sti
mov
xchg
cli
lret
out
jnp
lea
loop
adc
mov
dec
adcl
adc
pop
mov
jl
in
mov
popa
and
or
mov
push
lahf
mov
push
ret
std
push
dec
imul
mov
repnz
dec
dec
dec
adc
ja
lock
cmp
rclb
inc
lock
inc
adc
scas
aam
pop
pushf
shlb
push
out
test
sub
dec
fsubl
call
pop
pushf
call
out
lods
sbb
pop
leave
pop
push
mov
xchg
int3
int3
jecxz
xor
shrb
test
aad
lea
mov
cmpsb
cmc
inc
sbb
sbb
insl
dec
iret
push
xchg
cmpsb
mov
lock
lret
rclb
mov
filds
outsl
mov
andl
nop
cli
jno
push
addb
pop
pop
sbbb
fcmovne
mov
fisubl
out
sub
data16
inc
rorb
or
mov
in
jo
push
inc
or
je
push
pop
mov
insl
pop
xchg
lret
mov
push
call
das
pushf
lods
mov
inc
jbe
mov
mov
and
testl
shrl
dec
dec
rclb
arpl
jecxz
clc
test
lret
cltd
xchg
push
mov
aad
mov
xlat
xchg
sbb
orb
xor
in
xchg
out
fimull
insl
js
inc
lods
lahf
shrl
xor
pop
test
adc
or
sub
out
fisttpl
fbld
add
sbb
bound
sub
push
jne
jno
jo
aaa
ja
addr16
imul
mov
ss
cmp
popf
cs
xchg
mov
mov
xchg
jne
xchg
jle
push
add
sbb
and
fnsave
sbb
jge
xchg
ficomps
movsl
pop
orl
shlb
push
mov
dec
into
ret
jbe
aam
dec
scas
sbb
in
stc
push
scas
mov
fistps
jb
xor
sub
flds
inc
call
stos
sbb
test
fdivl
into
sar
rorb
std
xor
sbb
cltd
lds
xchg
inc
clc
fdivrp
sbb
jne
fcoms
pop
fadds
pop
ljmp
fisubrl
ret
pop
mov
push
insb
test
ds
test
lcall
cs
loope
xchg
jg
jbe
movsb
ds
pop
shll
mov
cmova
xchg
xor
jne
cltd
hlt
xor
mov
int3
in
out
mov
adc
mov
push
mov
pushf
mov
xlat
test
sub
jge
mov
shlb
cmp
daa
lahf
mov
sbb
je
scas
sub
test
iret
jne
aas
insl
adc
jp
sti
adc
add
loope
adc
cli
insl
imul
add
mov
icebp
cmp
and
shlb
int3
pop
and
sbb
insb
mov
jmp
dec
mov
shll
mov
mov
loop
out
aas
cld
inc
sti
out
ror
aad
lea
mov
shl
cs
mov
xchg
cmp
inc
jp
adc
rcrb
stos
fucomi
xchg
or
jb
push
jnp
movsb
sub
mov
inc
sub
and
mov
out
js
cmpsl
cmp
xor
pusha
cli
pop
sbb
fstpl
out
jno,pn
pop
out
or
in
out
inc
mov
push
jmp
cmp
mov
ljmp
jno
dec
mov
ret
test
mov
push
inc
testl
xchg
sbb
pusha
push
fcomp
addl
dec
movsl
sarb
lea
dec
xchg
adc
and
pop
push
ret
hlt
or
dec
mov
loop
movsl
idivb
pusha
xor
push
leave
mov
mov
pop
mov
imul
sti
sbb
sahf
mov
pop
sbb
lret
mov
pop
mov
and
jo
and
leave
roll
les
int
mov
sbb
xorl
int3
dec
sub
and
call
mov
pop
and
or
and
std
jle
test
flds
cltd
inc
stos
clc
push
sbb
aad
bound
and
call
xor
std
and
and
fs
sbb
dec
adc
popa
in
cmp
xchg
sub
je
lcall
repz
shll
mov
out
cmp
inc
jne
cmp
gs
mov
xchg
aad
lea
loope
leave
xchg
jp
shlb
sbb
test
xchg
cwtl
bound
or
pop
inc
shrb
push
and
gs
clc
xor
loopne
inc
rorl
inc
xor
imull
hlt
out
es
outsb
stc
pop
repz
fcompl
icebp
mov
xor
jmp
ds
shrb
sbb
dec
std
ss
std
adc
cmp
mov
orl
fsubr
mov
int
jnp
movb
push
fisubrl
out
dec
jo
in
inc
jle
mov
push
mov
outsb
out
jmp
xor
jbe
cmp
outsb
rorl
notb
iret
outsb
cmp
ja
inc
xchg
data16
lock
sub
xchg
lahf
push
pusha
xor
loope
int
hlt
aam
sbb
xor
sub
inc
or
fildll
cwtl
mov
push
sbb
pop
imul
push
js
mov
jl
pop
ljmp
lahf
lcall
stc
into
jge
jmp
adc
andl
cmp
mov
cmp
sbb
insl
sbb
adc
mov
jno
cmpb
gs
mov
pushf
push
pop
popf
jp
inc
arpl
dec
imul
ret
repnz
cmp
cmc
add
dec
and
fwait
fdivrp
js
xchg
dec
sbb
push
mov
inc
enter
mov
sbb
in
repz
sbb
std
adc
repnz
xor
gs
adc
mov
add
and
popf
inc
es
add
fcmovnu
and
adc
push
das
pop
call
and
xor
bound
mov
lret
mov
gs
inc
sbb
mov
mov
lods
jb
xchg
mov
ds
outsl
sub
fsubrl
mov
sub
outsl
xchg
add
roll
inc
inc
ja
xor
sub
pop
mov
jp
push
mov
movb
dec
xchg
test
push
mov
sbb
jp
push
lock
sbb
and
loop
leave
lret
sub
cmp
addl
mov
xor
gs
or
insb
lret
push
push
lds
hlt
test
test
push
mov
icebp
pop
push
push
int
jmp
dec
dec
popa
in
fsts
jb
test
out
push
cwtl
pop
add
mov
xchg
movsb
sbb
or
inc
dec
cmpsb
adc
pop
dec
lcall
test
xor
add
adc
mov
imul
js
jge
lock
cmpsl
dec
cmp
test
jecxz
dec
xor
arpl
xor
push
fcmovbe
jns
in
das
stc
pop
dec
int3
mov
ret
lcall
lods
and
push
shlb
test
in
rol
mov
mov
inc
add
mov
adc
mov
nop
add
scas
add
mov
and
pop
or
jno
mov
push
jle
lret
les
push
sahf
jne
ret
sbb
push
scas
and
mov
add
xchg
jae
sbb
out
adc
fmul
loope
or
xchg
dec
pop
hlt
add
popa
pop
fmuls
pop
inc
sub
iret
pusha
push
add
cs
repz
dec
popa
jns
and
jbe
in
jbe
pop
jge
mov
iret
fwait
sti
mov
pop
mov
pop
stos
inc
push
add
aad
sub
xchg
mov
in
jp
das
cmp
popa
jge
orb
rol
stc
or
pop
and
jmp
xor
in
cmp
mov
cs
test
mov
roll
pop
daa
xchg
add
cltd
stc
pop
pop
jle
cmpl
cmp
push
mov
ds
mov
cltd
ret
mov
nop
cmp
cld
sub
stos
mov
cwtl
mov
loop
cmp
mov
pop
inc
jbe
add
mull
and
scas
jne
mov
out
inc
cmp
mov
inc
je
and
scas
xor
outsb
ret
loope
cld
push
sub
js
jmp
mov
xor
mov
sub
jmp
jnp
add
mov
int
inc
cmp
xor
dec
cs
mov
leave
cld
mov
add
les
jbe
jo
mov
test
lret
add
sub
ret
inc
sub
loope
orl
imul
enter
add
stos
xlat
pop
outsb
icebp
icebp
cmp
icebp
xchg
fwait
push
and
sbb
stos
loop
lahf
or
cltd
movsb
mov
and
sub
push
adc
shl
cmc
inc
sti
loope
rcl
xchg
sbb
xor
cmpsb
aam
int
jns
ds
push
and
je
sbb
cmp
inc
sbb
jae
negl
adc
shrl
je
and
ficomps
push
sbb
mov
int
arpl
jl
adc
sub
and
cld
mov
xchg
mov
ds
int3
jno
fstpl
cmp
ret
sbb
push
adc
test
mov
inc
mov
std
add
push
aas
loope
jo
call
sub
pop
xor
pusha
ret
inc
call
mov
shrb
sarb
dec
lret
cs
scas
push
push
leave
add
sbb
outsl
js
scas
jbe
add
lods
sbb
popf
push
add
movsb
les
push
int3
jne
add
adcl
jp
mov
mov
shl
in
js
or
movhps
iret
jno
cmpsb
xor
xchg
mov
ljmp
lods
out
and
sbb
bound
mov
call
mov
xchg
sar
cmp
fs
sbbb
shlb
shll
and
push
mov
loope
fdivrs
cltd
dec
je
stos
inc
pop
adc
lahf
in
mov
mov
shlb
xchg
mov
pop
repnz
mov
push
dec
mov
lahf
lcall
je
mov
les
xlat
and
loop
dec
jnp
enter
dec
loopne
movl
mov
addl
pop
bound
dec
aas
aam
xlat
push
adc
xchg
add
add
das
jge
movsb
loopne
outsl
sbb
lods
xchg
fstl
repz
jnp
out
mov
faddl
push
test
pop
pop
mov
not
dec
loope
xchg
int
out
in
cld
push
jbe
icebp
cmp
loopne
push
addb
xchg
mov
lds
xchg
xorb
insb
test
subb
repz
dec
xor
inc
cltd
iret
inc
test
jmp
dec
dec
das
pusha
mov
repz
cmpsl
or
dec
lods
insb
test
clc
sbb
jb
pop
roll
add
mov
xor
rcrb
mov
das
add
push
stos
loopne
push
or
mov
lahf
sbb
and
sub
pop
fsubr
das
and
mov
and
outsl
jno
stos
loopne
xchg
push
mov
out
out
aaa
mov
out
lea
out
mov
mov
arpl
xchg
cmp
cli
xor
into
paddq
jbe
cli
mov
int
cmpsl
mov
jge
xchg
loop
inc
dec
pop
adc
std
mov
xor
mov
and
mov
out
xchg
scas
jp,pt
dec
rorl
and
daa
pop
cltd
enter
std
push
fs
mov
call
xor
fiadds
mov
lock
xchg
push
adc
test
push
xor
sub
push
test
into
xchg
inc
push
loope
pop
leave
push
jb
pop
sub
fisubs
int3
int3
and
fwait
std
inc
hlt
pop
jae
mov
jp
inc
leave
inc
push
aad
icebp
or
and
xlat
mov
jbe
shlb
sbb
paddd
push
mov
xor
add
mov
out
push
jae
aas
sbb
shlb
aaa
in
inc
std
sbb
mulb
jl
out
es
pop
dec
push
in
push
daa
jbe
lcall
sub
inc
gs
in
dec
mov
sbb
xlat
sbb
jge
mov
cmpsb
cmp
xchg
daa
mov
lahf
xchg
ror
pop
sub
pop
cmp
mov
sub
scas
lret
ficompl
mov
or
loopne
out
mov
xor
mov
xor
int3
pop
movsb
sbb
adc
jge
into
push
push
daa
test
inc
mov
sub
repnz
xor
je
cmp
sbb
lcall
xchg
mov
movsl
dec
xchg
lret
pop
push
xchg
push
mov
cs
arpl
pop
js
add
fwait
xor
stos
in
sbb
xor
jge
sbb
mov
xchg
ds
repnz
xchg
mov
lcall
mov
pop
cld
xchg
fxam
add
mov
lcall
pop
ljmp
inc
kmovw
fists
cmpl
jno
add
aad
in
push
cmpsb
out
push
dec
sub
add
push
add
ret
fwait
xor
push
call
in
fbstp
out
pop
call
inc
mov
pop
jns
sbb
inc
add
aaa
ret
nop
cli
sbb
das
rclb
mov
imul
jno
cmpsl
scas
fidivs
sbb
adcb
add
gs
xchg
cld
sbb
iret
cltd
mov
das
xchg
ret
adc
fsub
mov
mov
mov
jmp
mov
xor
icebp
mov
jmp
jo
push
imul
insb
stos
inc
rcrb
out
aaa
or
xchg
aaa
pop
add
adcl
sub
rcl
push
jecxz
push
repz
ror
mov
insl
jge
cmp
push
push
adc
mov
mov
cld
sub
hlt
pop
push
pop
pop
xchg
fcomip
hlt
mov
inc
cmp
jecxz
and
pop
and
je
pop
loope
scas
cmpsb
mov
nop
xor
jne
cwtl
lds
incb
mov
sbb
test
lret
enter
inc
insl
fistpll
sbb
leave
in
mov
xchg
fwait
icebp
es
hlt
sbb
cmp
push
arpl
dec
test
cmpb
xor
mov
lret
mulb
gs
clc
rclb
mov
std
cs
sub
mull
int
dec
dec
roll
push
push
or
and
inc
or
xor
inc
cld
push
dec
popf
sbb
ljmp
stc
jo
xchg
inc
jge
je
xchg
into
loop
fildll
cltd
or
dec
mov
sub
outsb
xor
sbb
inc
lahf
std
push
jge
cmp
shll
loopne
aaa
dec
neg
or
mov
sbb
out
pop
pop
cmpsl
pop
ds
rcr
ja
cmpsl
cltd
add
and
mov
fdivrl
cs
push
dec
mov
incl
mov
pop
pop
shlb
aad
fcmove
vpcomub
pop
ret
jno
faddl
aam
mov
sub
xor
xlat
sbb
fcoml
in
popa
push
sub
mulb
out
mov
mov
call
mov
aad
and
mov
imull
pop
inc
sub
lock
cld
mov
gs
pxor
adcb
repz
lea
into
out
sub
pop
pop
inc
inc
jmp
add
adc
sbb
push
mov
jp
xchg
jl
mov
jp
pop
mov
call
or
hlt
lahf
scas
mov
imul
cmp
dec
sub
sub
mov
sub
xor
xchg
mov
jg
imul
fs
push
loope
movsl
lret
adc
cmp
lahf
cmp
sub
in
pop
push
pshufw
push
pop
imull
dec
imul
fisttpll
imul
cmpsb
out
mov
pushf
mulb
and
push
loop
hlt
sbb
mov
cmp
add
sub
mov
fnstsw
pop
loope
les
icebp
faddl
cmp
out
dec
fcmovbe
adc
lods
pusha
sub
stos
scas
les
leave
xchg
je
pusha
and
outsb
leave
inc
xchg
in
iret
push
je
sahf
mov
ja
fadds
fisttpll
jbe
lcall
dec
enter
pop
test
pop
cmp
sub
xor
pusha
xorb
jl
xor
enter
in
lods
mov
lahf
pushf
stos
mov
add
fisttpl
mov
sbbl
or
mov
into
jp
or
adcl
mov
push
pop
xchg
xchg
push
imul
fldcw
xor
stos
sbb
jbe
lods
lret
pop
rcr
mov
stc
mov
fidivrl
jae
jl
jae
lahf
adc
pop
gs
int3
dec
das
stc
mov
daa
dec
jl
loop
mov
pop
and
call
sub
adc
loop
mov
loopne
add
cltd
sub
push
out
pop
stc
pop
sbb
pop
cmp
push
shrl
xor
mov
mov
push
cmp
in
or
repnz
mov
dec
add
jecxz
sub
mov
leave
jg
fwait
lahf
aam
pavgw
cmpsb
push
or
inc
mov
in
xchg
cmc
adc
inc
ret
push
imul
mov
mov
add
int3
lods
ja
lcall
cmpsb
hlt
shrl
xor
loope
popa
clc
sbb
shufps
test
ds
mov
or
xor
into
lods
jp
lret
cmp
inc
sahf
xchg
add
gs
shll
les
adc
mov
ror
aas
gs
dec
adc
call
leave
test
xchg
nop
jp
lcall
clc
jo
fwait
or
mov
and
int3
je
popa
pop
jge
aad
in
movsb
inc
sub
add
jne
mov
dec
xor
lret
test
out
rcr
stos
and
and
ret
mov
sbbb
pop
in
pop
mov
ljmp
adc
mov
mov
icebp
inc
cwtl
dec
lcall
lahf
sbb
jo
push
xor
cltd
roll
es
inc
sbb
dec
pop
pop
cmpb
out
sbb
ja
filds
imul
mov
imul
cmpb
pop
push
or
inc
jmp
push
iret
pop
pop
daa
sahf
iret
push
xchg
jne
daa
fcomps
pop
iret
lods
mov
rcrl
xchg
xchg
sarb
xchg
push
stos
clc
xor
mov
test
cmpsl
into
xchg
and
leave
push
in
dec
inc
mov
ss
mov
bound
cld
pop
adc
js
shrb
mov
nop
xchg
xor
ror
mov
and
adc
dec
push
addl
push
mov
mov
cwtl
data16
mov
xchg
sub
loope
testl
jg
cvtps2pi
mov
xor
and
dec
lds
jae
out
mov
in
insb
inc
jp
fsubrl
sbb
push
in
movsb
pop
add
in
repnz
add
xor
dec
sbbl
or
jecxz
cmp
cs
sub
mov
test
test
jne
fidivrl
sub
inc
jp
call
xchg
sub
cwtl
rcrl
clc
push
cmpsl
das
in
mov
fldl2e
cmp
mov
rolb
xor
mov
jg
sar
arpl
mov
cmpsl
cmc
shlb
shr
mov
add
gs
pop
icebp
xor
and
dec
sbb
ds
add
mov
adc
ljmp
add
outsb
cld
jmp
xchg
into
bound
xchg
fisubl
sbb
aaa
les
push
icebp
mov
stos
mov
test
and
sub
mov
inc
sub
sub
imul
test
pop
in
repz
xchg
sub
or
inc
ret
fsub
mov
std
xor
shll
scas
xchg
in
or
or
bound
xchg
imulb
push
lock
fucomp
fs
cwtl
lcall
fldt
out
cmp
cmp
and
enter
push
add
ljmp
orb
mov
mov
negl
xchg
dec
jge
jg
stc
lret
mov
lods
into
cld
loopne
aaa
js
int3
movsb
jmp
std
xorb
insl
xor
cmp
insl
sarl
add
aam
mov
mov
jl
xchg
sarb
cmpsb
in
es
jmp
movsb
lcall
cwtl
aam
lret
xor
cmp
add
sbb
lods
pop
dec
adc
mull
fmull
lods
pop
mov
call
xor
mov
xor
test
pop
fcom
adc
shll
faddl
lds
dec
cmp
sub
andb
test
dec
cltd
mov
lds
out
mov
subb
call
scas
cmpsb
and
sahf
mov
ja
arpl
mov
sub
fcmovne
lahf
xchg
das
fidivrs
xchg
cmp
adc
repnz
xchg
or
enter
pop
pop
arpl
test
xchg
jge
and
xor
cmp
lea
xchg
cmp
add
xor
push
lods
test
cld
push
push
movsb
es
pop
sbb
in
fmul
inc
jnp
mov
mov
jns
jl
repnz
addr16
mov
gs
dec
jp
mov
rolb
aad
adc
dec
ljmp
sbb
jg
out
rcl
adc
mov
pushf
mov
sbb
gs
xchg
add
stos
daa
push
push
inc
shlb
push
sub
xor
push
aas
push
pop
add
inc
sbb
mov
and
jnp
pop
push
test
loopne
mov
cli
movsb
sahf
and
cmpsl
je
mov
rcl
push
ds
mov
ror
into
sbb
imul
dec
mov
rolb
testl
push
sub
test
loope
or
and
shl
pop
insl
popa
mov
cwtl
mov
test
lahf
jb
pop
test
out
sbb
add
sbb
and
xchg
hlt
fs
scas
sub
leave
mov
and
pushf
jo
lahf
pushl
sub
or
xchg
cmpsl
shlb
int
or
xor
lods
sub
mov
mov
dec
inc
push
lret
fmul
test
jo
negb
aam
mov
cltd
mov
scas
inc
shl
loop
mov
das
call
or
xchg
aas
xchg
incw
cmpsl
jo
adc
dec
jns
push
mov
notb
aaa
ljmp
mov
fistpll
fcmovu
push
xchg
mov
lret
add
outsl
xor
mov
jmp
adc
dec
mov
sub
xorb
jne
inc
call
fidivs
xchg
push
sahf
xchg
push
daa
pop
enter
push
cmp
leave
aaa
push
jb
repz
scas
fcoms
pavgw
mov
in
sbbb
retw
jb
jne
outsb
inc
test
leave
adc
lret
xchg
jnp
popa
in
push
mov
popf
sbb
jecxz
insb
sbb
or
mov
cmp
jl
sbb
sbbb
push
arpl
adc
js
push
js
std
add
arpl
lret
mov
dec
jg
test
subb
jmp
sti
lahf
jns
xchg
icebp
int3
jmp
aad
js
inc
push
cmc
add
push
movb
mov
mov
cmp
stos
pop
pop
mov
jb
inc
xor
lcall
clc
cmp
shr
mov
daa
inc
mov
jp
adc
mov
shl
mul
adc
pop
mov
jg
sub
pop
mov
mov
lret
jg
pop
fistl
int3
xor
dec
ret
adc
sbb
dec
cmp
dec
xor
dec
loop
jns
ror
xor
and
push
sub
mov
inc
xlat
and
js
pop
loop
xor
or
inc
or
xor
icebp
cmpsl
push
sub
xchg
mov
add
imul
xchg
movsl
movsl
lds
cmp
adc
adc
mov
aaa
insb
mov
loopne
lods
dec
sbb
cwtl
dec
ja
outsb
lea
loope
jg
int
das
mov
mov
js
out
push
pop
mov
dec
gs
jns
push
sub
xor
xchg
push
mov
lods
pop
xchg
sbb
sahf
or
pop
in
mov
adc
loopne
adc
stc
andl
push
js
cli
rorl
xor
test
into
xor
int3
mov
fidivrs
xor
mov
imul
stc
jb
lea
rol
push
pop
mov
push
test
mov
dec
sti
mov
push
fdivl
dec
clc
sub
insl
push
xor
mov
or
addr16
cs
mov
in
sbb
and
int
cmp
mov
movsb
out
sbb
dec
sbb
push
movsl
mov
and
jle
push
cltd
mov
cmp
push
in
lock
sub
push
sbb
xor
add
sbb
xor
and
shrl
and
inc
es
adc
push
mov
insb
int3
xorb
enter
cmp
repnz
or
rcrl
add
xchg
mov
mov
loopne
inc
jae
and
lods
mov
mov
fdivrs
mov
mov
dec
push
mov
fists
inc
xchg
andl
lds
or
mov
dec
cmpsl
test
add
pushf
ret
jbe
jnp
in
sub
pop
insl
xadd
jb
fisubl
xchg
insb
pushf
popf
mov
loop
or
fimuls
jmp
rolb
inc
or
ds
fisubs
or
sub
bound
cmp
add
lcall
push
pop
or
fidivs
ljmp
lods
sbbl
inc
decl
sbb
xchg
sbb
out
sbb
mov
push
mov
jo
push
aad
add
dec
ret
jb
push
pop
ss
mov
adcb
ljmp
in
orl
aad
pop
xchg
les
cwtl
jbe
xchg
out
jns
lret
pushf
call
mov
fsubp
icebp
cld
repnz
rcrl
and
pop
push
fimull
frstor
xor
dec
lret
xchg
xor
and
push
bound
std
jmp
push
movl
mov
subb
pop
sbb
hlt
xchg
in
sub
and
pop
jno
push
push
cld
add
aam
cmp
testl
push
movsb
add
iret
jmp
mov
xor
push
add
sarb
pop
andb
scas
xchg
aam
pushf
insl
daa
scas
mov
mov
push
mov
push
sti
gs
and
or
inc
test
ljmp
inc
outsl
pushf
jl
pop
or
popa
sarb
inc
jmp
inc
pop
jge
lret
iret
aas
cmovbe
dec
fcmove
loopne
mov
inc
sahf
pop
dec
xor
nop
shl
dec
or
xchg
xchg
mov
sub
cli
sub
adc
xchg
jne
ret
icebp
mov
imul
adc
shrl
icebp
fldl
loopne
mov
lock
sbb
out
and
mov
mov
test
pop
dec
lock
ficomps
stos
and
add
jmp
or
adc
ss
arpl
adc
incb
and
xor
shll
ljmp
scas
cmp
pop
loope
rolb
mov
push
sub
and
into
testb
xchg
adc
sahf
jns
sti
mov
add
arpl
add
dec
sbb
mov
cltd
addr16
sub
std
cmp
call
add
daa
cmp
xorl
xchg
jl
adc
aas
es
adc
sbb
sub
loopne
movsl
and
loopne
mov
out
inc
jp
xchg
push
sbb
push
sub
ss
xchg
out
cmp
pop
js
pop
orl
arpl
insl
jge
sahf
mov
cmp
imul
in
add
mov
cli
das
fstl
and
cmp
or
out
adc
or
cld
rolb
push
xchg
inc
cli
push
or
cmp
sub
loope
les
push
pop
add
das
and
rcll
lret
mov
andl
and
cmpsb
mov
je
push
leave
xchg
and
pop
stc
ficoml
or
and
ret
pop
xchg
mov
out
cmp
arpl
xchg
xchg
stos
xchg
outsb
ja
xchg
cmp
adc
add
jne
pop
push
adc
jmp
xchg
pushf
xchg
clc
cld
cmp
mov
jle
pop
pop
ds
insl
cmp
pop
addr16
cmp
insb
mov
roll
and
lds
mov
iret
sub
inc
stos
das
cmp
mov
decb
push
xchg
rcrb
sub
in
mov
js
mov
fucomip
mov
leave
mov
add
loop
test
or
rcll
std
xchg
pop
dec
lods
movsb
jnp
sti
inc
or
scas
out
insb
sbb
inc
outsb
sahf
imul
stos
add
cmp
ret
repnz
sub
inc
or
jo
test
xor
int
cmc
pop
xor
arpl
or
fs
subb
shlb
push
xor
test
js
and
popf
rcrl
rcl
adc
add
pusha
inc
stos
jne
arpl
lods
or
out
in
dec
dec
repz
pop
mov
bnd
mov
pop
sbb
push
and
xor
enter
mov
movsb
inc
std
xchg
lea
sahf
shr
int3
dec
mov
sarl
fnstenv
xlat
jbe
pop
and
int
ljmp
mov
gs
xchg
fs
imull
lea
sahf
out
and
fcmovne
pop
jb
mov
and
pop
fsubs
rcrl
insl
insl
push
pop
mov
or
push
dec
push
mov
lea
outsb
adc
jp
add
xor
rcl
ret
sti
in
popa
xchg
add
pop
xchg
aaa
jns
mov
int3
adc
xor
xor
add
sub
adc
mov
and
and
mul
fildll
mov
mov
scas
sub
mov
mov
pop
mov
sbb
add
jne
mov
xchg
pop
jl
inc
cmpl
push
sub
lock
inc
cld
jae
xor
push
js
adc
gs
aas
ja
and
es
in
into
shufps
les
pop
cmp
aam
fisubrl
aaa
push
and
bound
push
std
scas
fadds
hlt
dec
push
and
or
xor
or
mov
clc
sub
movsb
adc
call
mov
push
std
push
cmpsl
jg
rcll
sbb
cmp
gs
adc
and
data16
mov
and
xchg
and
aas
fsubs
fldenv
cmp
sbb
pushf
push
push
subb
add
shlb
push
pop
sbb
mov
push
ret
hlt
daa
or
sti
movsb
test
pop
repz
addr16
or
add
stc
jg
popa
stc
iret
cwtl
lretw
xchg
jmp
out
mov
mov
or
cs
test
loope
idivb
mov
inc
cmp
and
outsl
mov
divl
pop
mov
aaa
out
cld
lahf
xlat
sub
ds
enter
lcall
cwtl
jg
cmpsb
imul
mov
mov
push
xchg
das
adc
loopne
int3
jns
xchg
or
mov
popa
sub
pop
cwtl
out
push
rcrb
xor
lea
sub
push
cmp
insl
sti
clc
mov
or
and
pushf
or
lods
shlb
xor
fsubs
push
cwtl
jg
push
out
lods
jmp
mov
shlb
xor
ss
push
push
xor
adc
and
jmp
das
cmp
mov
add
xchg
int3
inc
jne
pushl
push
lret
mov
lock
cmp
add
jmp
sti
shll
pop
movb
pop
add
cmp
mov
adc
or
pop
std
push
dec
orb
call
dec
and
shll
mov
sti
cs
arpl
repz
in
xor
add
jbe
mov
xor
int
xor
cmp
mov
ss
sbb
adc
xchg
cmpsl
mov
popa
sbb
adc
mov
push
sub
in
or
cmp
mov
or
mov
mov
ficoml
mov
cmp
xlat
mov
mov
cmp
dec
outsl
mov
xchg
sub
cmc
lret
fimuls
or
cmp
dec
negl
and
mov
jae
aas
out
cmpsb
dec
insb
adcb
movsl
cmp
xchg
adc
cmp
pop
push
xor
xor
mov
daa
xchg
jne
ret
rcrl
aad
jns
push
cs
mov
test
loope
add
sti
push
pop
gs
lods
xlat
jg
pushf
data16
dec
pop
cmp
mov
mov
push
aad
out
dec
call
cmp
aaa
mov
lds
pop
sub
pop
mov
or
inc
lods
add
cmc
cmpsl
je
rcl
jp
sub
scas
pop
push
fldcw
clc
into
xchg
push
jnp
mov
dec
fwait
orb
popf
mov
push
scas
sub
pop
cmpsl
je
dec
dec
test
roll
mov
test
imul
icebp
sti
sahf
imull
stc
jbe
int
push
adcb
test
xor
inc
in
sub
imul
sub
imul
push
fdivs
mov
jmp
cmp
dec
aas
in
sub
in
mov
adc
cltd
add
push
gs
add
inc
data16
sahf
test
popa
mov
hlt
mov
and
loopne
or
cmp
inc
test
dec
shlb
push
push
xor
pop
xor
outsl
jg
xchg
pop
out
add
into
mov
inc
dec
cmp
inc
jnp
jg
pop
ds
xchg
xchg
outsb
pop
cmp
in
ffree
out
jne
jecxz
sbb
pop
cmp
cmp
add
in
pop
pop
roll
insb
scas
test
and
idiv
dec
mov
xor
or
adc
lock
mov
lds
pop
cld
push
into
sahf
and
xchg
ljmp
cmp
outsl
sahf
das
jle
xlat
pop
andb
mov
call
xchg
pop
ds
scas
jl
shlb
imul
mov
lret
rol
or
xlat
xchg
push
add
aas
mov
add
pop
mov
mov
mov
mov
xor
cmp
or
jo
and
ret
dec
lods
nop
mov
test
jl
jae
pusha
add
hlt
mulb
adc
xor
sbb
out
enter
mov
aad
fiadds
hlt
jne
push
add
pop
pop
rorb
pop
imul
stc
sub
inc
push
push
xor
mov
pop
pop
fnstsw
lods
xor
push
ffree
or
insb
faddl
xchg
pop
sub
scas
mov
pop
dec
dec
dec
int3
mov
in
pushf
pop
xchg
int
enter
adc
jo
data16
dec
mov
dec
mov
mov
scas
xor
mov
or
incl
gs
lds
popa
test
test
push
daa
js
stos
pop
sti
fnsave
push
cmc
outsl
adc
clc
int3
mov
fsubrl
enter
pop
mov
jmp
pop
in
into
shll
std
sbb
jno
mov
push
lcall
and
cmovb
and
mov
adc
shl
add
xorb
inc
cmp
adc
mov
fidivl
push
in
rcll
sbb
sbb
cmp
fbld
test
inc
sub
or
xchg
lods
cmp
mov
add
cmp
int3
mov
pop
push
xlat
scas
in
mov
add
sub
sub
sub
cmp
nop
push
idivb
not
test
lret
and
dec
xchg
imul
fidivs
push
push
outsb
test
jb
dec
decl
cmp
mov
and
je
adc
push
mov
inc
fistpl
jg
jle
outsl
or
lea
out
in
rol
mov
mov
mov
lahf
pop
sub
or
clc
mov
cmp
push
repz
cmp
shlb
push
and
sbb
dec
xor
pop
scas
cmp
push
std
xor
hlt
push
push
cs
xchg
xchg
xor
cmp
popa
scas
lcall
dec
call
xchg
shlb
push
xchg
in
xchg
mov
divb
pop
testl
push
inc
push
stos
mov
pop
adc
sbb
cmp
scas
mov
pop
loopne
fwait
sbbl
ds
insb
sbb
adc
mov
dec
hlt
mov
pop
mov
stos
dec
pop
mov
lock
mov
xor
scas
mov
xchg
add
push
xchg
mov
fs
popa
jl
jo
inc
mov
outsb
push
enter
or
mov
fwait
and
cltd
insb
aad
ud2
sub
sahf
adc
dec
lods
pop
push
outsb
clc
jne
push
jno
mov
in
mov
mov
push
jnp
mov
inc
jp
and
mov
test
fldl
pop
es
sub
mov
dec
fsts
shl
push
es
cltd
shll
gs
push
sahf
out
lods
loopne
dec
or
fisttpl
dec
and
loop
push
imul
repnz
dec
mov
shll
loopne,pt
fadds
out
inc
jbe
mov
ss
out
jbe
sub
js
test
fldt
mov
ret
cmp
jae
mov
scas
inc
inc
test
cmp
mov
or
pop
ja
lea
xchg
adc
jle
sahf
pop
pop
cld
sub
dec
add
mov
push
stc
sub
fisubrl
je
scas
and
jo
mov
sbb
mov
adc
cmpb
inc
pushf
cmp
mov
xor
or
dec
sbb
mov
pop
jmp
ret
mov
pop
pushf
lret
push
cmpl
pop
dec
push
hlt
cmp
sbb
jbe
out
pop
sbbl
push
add
xchg
xchg
dec
adcb
into
rorl
push
or
or
mov
cmp
mov
popf
rorl
inc
subb
push
inc
push
mov
and
test
test
ret
cmpsb
mov
ds
movsb
jne
push
test
mov
sahf
xchg
dec
xlat
mov
clc
leave
xor
cmp
ss
sbb
sbb
loope
sbb
add
mov
mov
inc
mov
inc
loope
mov
pushf
sub
mov
mov
push
out
mov
push
xor
bound
cmp
out
out
cld
vshufpd
testb
add
mov
cmp
out
sbb
les
adc
pop
in
fsubrs
dec
inc
cmpsl
pushf
xor
cmc
xlat
arpl
addl
mov
lea
stos
roll
push
lcall
mov
data16
xchg
outsb
jno
sahf
lock
sbb
inc
stos
roll
or
data16
jl
sub
dec
xor
jp
rolb
cmc
das
sbb
ja
inc
add
adc
pop
lahf
inc
aad
push
push
mov
in
dec
cmp
jl
pop
cmp
xchg
mov
cltd
mov
sbbb
clc
andl
sti
fwait
dec
push
or
pop
push
lods
mov
xor
leave
scas
pop
addr16
pop
filds
orl
cmc
sti
ds
mov
out
or
test
or
add
dec
pop
dec
pop
xchg
adc
cmp
stc
data16
insb
push
rclb
test
adc
mov
and
enter
adc
fildll
inc
enter
jne
imul
pop
hlt
adc
stos
push
test
divl
adc
aaa
addr16
xchg
push
in
adc
stos
mov
xor
fmull
xchg
scas
cmp
data16
repnz
dec
mov
lret
mov
loop
adc
stos
movb
je
mov
adc
ja
jge
cmp
sbb
cmpsb
sub
lahf
cmp
sub
in
stos
fistps
xchg
inc
add
in
pop
ficoml
sbb
cmp
lret
pop
jbe
sbb
inc
mov
xchg
mov
jl
cld
pop
gs
jp
rcr
cmpl
int3
xchg
xlat
subb
clc
std
arpl
das
adc
fistps
lcall
cmc
enter
arpl
mov
les
or
add
mov
sbb
sub
jnp
hlt
mov
jo
cmp
cld
fdivrl
pop
jae
gs
mov
stc
repz
inc
push
nop
mov
imul
ljmp
and
das
mov
mov
cltd
sub
or
xchg
pop
pusha
out
mov
loope
fs
andl
dec
mov
mov
jecxz
andl
into
ja
mov
mov
out
jno
loope
push
push
jg
pop
fcoms
sub
and
pop
mov
cltd
sub
cmp
sub
jg
mov
xchg
jecxz
push
mov
out
sbb
jae
mov
cwtl
lods
into
dec
pop
push
cmp
pop
mov
pop
mov
roll
lods
into
mov
shl
jmp
sysret
dec
dec
jae
push
adc
xchg
shr
mov
int
dec
mov
sub
mov
dec
aad
jbe
inc
cmpl
dec
jmp
xchg
dec
mov
inc
arpl
sub
dec
fnstenv
dec
pop
inc
ffreep
test
pop
inc
mov
dec
jno
inc
mov
icebp
aas
icebp
jae
orb
iret
xchg
jae
cmpsb
sbb
scas
orb
mov
int
jne
jecxz
fwait
in
push
popa
adc
lret
addb
das
inc
into
loop
aaa
in
insb
add
mov
cmp
xor
lds
cmp
fists
sarb
push
sbb
jb
sub
mov
push
xlat
xor
cs
popa
adc
inc
mov
mov
cmp
test
or
or
sbb
addl
jns
push
dec
mov
rcl
jp
bound
leave
in
add
sbb
adc
lret
sub
or
inc
mov
lret
add
push
cmpsl
ljmp
adc
inc
xchg
fdivr
fsubl
xchg
leave
loope
fistpll
lcall
loopne
mov
cmc
fidivl
stos
mov
fwait
inc
sbbb
jno
mov
jb
push
mov
lret
inc
xor
mov
repnz
push
add
lea
xchg
add
adc
das
sub
jae
pop
mov
fs
in
fisttpl
cmp
xorb
push
lods
dec
call
arpl
hlt
ja
push
jbe
mov
jecxz
in
int3
xchg
jbe
and
stc
outsb
push
or
ret
xorl
mov
dec
cltd
dec
dec
mov
adc
or
mov
stos
xchg
pop
shll
jp
stos
outsl
pop
jbe
and
cmp
inc
mov
lods
movb
pop
testb
cld
ljmp
popa
enter
jbe
sahf
mov
out
inc
mov
add
inc
sub
lcall
dec
xchg
push
stos
xor
push
mov
mov
push
dec
into
repz
fcoms
sbb
mov
push
test
xchg
xchg
loope
jno
mov
lahf
ret
out
into
movsb
lcall
nop
clc
les
ds
mov
in
xchg
icebp
dec
loope
fsubl
shlb
scas
xor
fidivrs
xlat
cmp
jnp
inc
inc
and
cmpsl
in
mov
dec
xor
in
test
xchg
lcall
and
js
xor
nop
insl
jo
mov
push
pop
orl
std
xor
ljmp
inc
cmp
xor
lock
cltd
movsb
mov
in
in
xlat
mov
jg
cli
mov
add
out
dec
cmp
aaa
push
test
jbe
dec
les
push
adc
scas
pop
lcall
aaa
cmpsl
jbe
jbe
mov
dec
cli
or
nop
test
imul
jmp
lea
and
push
mov
push
test
adc
xchg
pop
in
lea
sahf
movsb
ja
orl
pop
pusha
clc
insb
inc
mov
rol
imul
fs
mov
xchg
mov
sahf
jg
das
aas
rsqrtps
in
mov
outsl
or
mov
and
jno
mov
movsl
sub
mov
or
xchg
test
leave
cs
js
movsl
lods
das
mov
hlt
sbb
sub
push
add
jae
adc
nop
out
cmp
mov
sahf
xor
test
add
std
aam
lahf
cmpb
stos
sahf
push
xlat
aaa
xchg
movsl
mov
hlt
sahf
jle
loop
in
xchg
mov
pop
out
loop
sub
in
pop
dec
out
and
mov
push
stos
rclb
or
inc
and
sbb
xor
push
subl
arpl
inc
mov
cwtl
popf
test
mov
push
dec
push
add
mov
push
push
movsl
jo
add
shll
ficompl
jmp
dec
and
arpl
cmp
cmpsb
jb
and
ss
lock
leave
or
sbb
jp
push
jo
push
cmc
push
int3
sub
cmp
gs
rorl
mov
gs
inc
cmc
lcall
std
xor
sub
cmpsb
mov
xchg
sub
popa
mov
mov
xor
repz
add
push
sarl
pop
mov
decb
cmp
lds
stos
push
popf
dec
cmp
scas
subl
int
inc
inc
lret
push
sbb
lea
sbb
or
jns
cmp
js
add
in
pop
idivl
daa
inc
xchg
lea
sbb
out
xor
jbe
clc
sub
hlt
jp
mov
clc
mov
dec
fidivrs
push
lds
cmp
repnz
cmc
sbbl
inc
arpl
fnstenv
call
mov
test
fisubl
adc
sub
add
or
sub
pushf
sahf
cmp
jne
arpl
sub
mov
dec
add
xchg
sbb
sub
shl
ss
pop
lock
pop
shlb
nop
dec
addr16
daa
jno
cmpsb
call
push
and
ja
orb
stos
fnsave
xchg
pop
or
out
xor
ret
idiv
insb
cli
dec
xchg
lods
lcall
lock
pop
mov
pushf
in
test
pushf
in
sub
cmp
ljmp
shll
stos
mov
xchg
push
shld
outsb
mov
sub
xchg
dec
mov
test
inc
in
adc
sti
xor
mov
decb
xor
in
scas
xchg
mov
cld
inc
inc
addr16
sub
out
clc
or
pop
lods
dec
push
loop
stc
in
mov
sarl
ss
sub
pop
repnz
inc
frstor
or
add
in
ss
iret
insb
std
mov
push
into
lock
les
pop
mov
mov
cmp
and
ss
and
aad
ja
movnti
lods
cli
faddl
lods
adc
push
push
xchg
in
push
lods
ror
mov
dec
cmp
lods
dec
and
push
rol
aas
aas
xchg
push
and
xchg
xor
mov
shlb
cli
sub
mov
pop
pop
jmp
mov
mov
add
adc
mov
les
adc
movsl
shl
push
xchg
push
jp
push
lock
fcomi
xor
cmpsb
xchg
clc
in
in
popa
test
cmpsl
adc
repnz
lods
sar
enter
cmp
xchg
andb
out
int3
adc
mov
sti
mov
mov
add
lds
push
push
push
sarl
xchg
xor
bound
mov
shll
pop
fs
cld
or
and
ficomps
outsl
insb
mov
inc
and
push
inc
movsb
pop
cltd
mov
les
push
sti
cmc
push
ss
and
cli
mov
mov
pop
sbb
mov
pop
or
xor
ds
pusha
adc
mov
pusha
repnz
stos
inc
inc
jge
push
aam
add
mov
push
popa
sub
push
rolb
aad
xor
sahf
test
mov
aas
arpl
icebp
mov
test
inc
sbb
mov
ja
cmp
pop
test
ja
sarl
fldl
mov
mov
hlt
jmp
rcrl
insl
sub
pop
xlat
xchg
sbb
xor
mov
or
shrl
mov
out
lret
cmp
push
push
push
pop
adc
push
clc
xchg
jecxz
pop
cmpsb
mov
clc
sar
roll
xchg
push
mov
xlat
mov
ret
jnp
fld
jae
mov
sub
mov
jle
inc
pop
push
mov
mov
fmuls
dec
mov
fdivl
pop
mov
js
cmp
push
ret
lds
int3
ret
dec
pop
jle
daa
push
jle
loopne
gs
and
addr16
rcr
mov
bound
in
or
or
add
inc
adc
mov
pop
xor
adc
mov
cli
roll
shlb
push
add
sub
xchg
lea
push
test
cltd
stc
cmp
int
lds
mov
mov
jecxz
pop
xor
jnp
push
out
sub
out
pushf
mov
std
xorl
xchg
pop
test
pusha
mov
repnz
or
pushf
or
in
add
adc
stc
cli
mov
pop
cld
bound
and
cmc
mov
rep
xlat
ficompl
push
rcll
push
xchg
clc
push
jmp
std
stos
call
dec
aaa
aad
sub
enter
jmp
add
iret
cli
stos
leave
adc
into
jl
xor
fnstenv
push
or
ds
lods
insb
mov
andb
sub
outsb
or
mov
inc
push
clc
dec
xchg
mov
imul
inc
dec
sbb
hlt
add
repnz
gs
fidivrl
rol
lcall
shll
test
push
mov
mov
mov
xchg
repnz
push
and
mov
das
xlat
popf
mov
andb
lds
mulb
cmpsb
mov
push
nop
sahf
sbb
dec
cwtl
sbb
xchg
mov
adc
into
scas
rorb
jp
outsb
nop
dec
ret
sahf
mov
cmpsb
inc
out
clc
and
mov
sbb
dec
aas
xchg
ret
pusha
or
lret
es
fists
or
dec
add
punpckldq
hlt
leave
cwtl
xor
cmp
pop
rolb
pop
jnp
xor
stos
and
xor
xchg
mov
push
dec
out
xor
cmc
push
jecxz
hlt
or
xchg
sbbb
mov
mov
icebp
cs
jae
adc
xor
cmp
pop
xchg
jge
and
mov
iret
out
pop
popf
shr
ret
sahf
xor
mov
xchg
pop
mov
and
lahf
clc
leave
dec
sub
xor
aad
push
ljmp
mov
popa
aad
sbb
push
add
cmpl
mov
and
and
sbb
test
hlt
mov
clc
or
xor
loope
and
lcall
lods
icebp
out
in
and
mov
jne
cmp
test
jbe
fcomps
mov
lods
stc
mov
and
jmp
arpl
rcr
inc
test
push
pop
cmc
mov
addr16
inc
sub
stos
add
sbb
lods
push
and
fstpl
pop
fs
std
dec
into
jo
test
subb
and
outsb
cmpsb
cmc
add
or
mov
mov
adc
add
and
mov
xor
push
in
gs
xchg
xor
inc
lcall
jge
js
gs
xchg
les
sbb
xchg
mov
aaa
xchg
insl
lods
test
and
inc
rcrl
add
clc
cmp
push
xchg
push
rcrl
repnz
cwtl
std
lret
mov
out
ffree
add
xor
leave
mov
insl
inc
push
adc
mov
nop
popa
movsl
sub
scas
jae
ja
and
mov
push
pop
pop
pop
push
stc
mov
shrb
xlat
or
mov
xor
lods
inc
inc
adc
cwtl
sbb
ret
neg
mov
popa
sub
sbb
push
js
mov
dec
cmp
mov
mov
push
xchg
cmc
fstps
bound
mov
and
fdivl
in
loopne
cmpsb
jg
fildll
mov
pop
push
mov
inc
or
outsl
and
xchg
test
shlb
es
jns
cmp
call
clc
pop
subl
out
jnp
mov
pop
jne
adc
out
movsb
adc
sbb
adc
jnp
ret
pop
jne
mov
scas
dec
out
inc
lock
and
jg
jle
popa
adc
jo
lock
out
or
pushw
xchg
je
mov
adc
je
ja
iret
push
lods
shl
mov
out
add
int3
jle
mov
mov
and
xor
push
dec
push
inc
in
mov
push
stos
insb
add
cmpl
add
push
mov
insl
scas
mov
adc
lods
jecxz
mov
xor
xchg
fcoml
jl
push
out
ds
out
ja
sub
in
or
lds
pop
movsl
push
je
mov
idiv
mov
stc
stos
mov
xor
sub
insb
push
or
ja
jg
jl
mov
mov
xchg
leave
lods
xchg
fsubrs
dec
dec
and
xlat
ss
push
in
fwait
xchg
push
pop
shrl
cwtl
fimuls
dec
jae
stc
pusha
adcl
inc
jl
sbb
testl
or
jmp
loope
pop
cmp
mov
inc
popf
jge
aaa
enter
aam
in
xchg
jnp
jae
cwtl
mov
push
cltd
pop
and
or
xor
cmp
lock
cmp
mov
mov
sub
mov
outsl
xor
lods
and
cmp
shlb
aad
popa
push
cltd
in
das
mov
ja
out
imul
xor
imul
sub
arpl
lds
icebp
dec
in
aas
iret
jle
cmp
neg
dec
orl
ret
mov
sub
popa
sub
pushf
xlat
test
dec
mov
inc
sti
outsb
jae
or
hlt
dec
push
adc
and
in
lods
mov
jecxz
sbb
xor
ror
inc
inc
adc
mov
insb
mov
dec
call
mov
or
dec
int3
std
lods
dec
data16
pop
jmp
pop
inc
popa
push
jnp
repz
mov
outsl
imul
add
adc
lret
jo
xor
or
sbb
cmp
jp
and
add
or
xchg
cmp
cmc
stos
push
xor
movsb
cwtl
cltd
xor
or
cli
mov
adc
mov
xor
or
push
xchg
out
stc
inc
jp
dec
adc
imul
out
xor
data16
fsts
mov
sub
mov
pop
push
js
loope
xchg
fbstp
in
mov
and
scas
cwtl
push
adc
jl
xchg
pop
ja
cwtl
sti
and
sbb
pusha
out
cmp
cmp
out
pop
cs
fisttpl
xor
jmp
push
out
sbb
mov
out
push
adc
sbb
adc
pop
add
rolb
jg
cmc
or
lods
jle
aas
rcl
push
and
lcall
iret
movsl
cmp
jns
les
iret
pop
mov
xchg
dec
mov
xchg
imul
je
cmpsl
xor
xor
cmpsl
lea
pushw
jmp
leave
jp
sbb
stos
jecxz
or
lds
pusha
insl
cltd
and
mov
add
xchg
je
sub
mov
sar
mov
fdivrs
sbb
gs
or
mov
out
movsl
push
xchg
push
jg
jb
or
insb
mov
filds
dec
out
push
cmpsl
ret
jle
rcll
mov
cmpsb
mov
loope
arpl
xchg
inc
push
addl
jbe
mov
xchg
bound
push
xlat
xchg
lock
fxch
dec
cmpl
cmp
das
jbe
movsl
imul
into
cmp
neg
push
out
inc
mov
xchg
mov
sbb
std
fiadds
fsubr
aaa
xlat
push
inc
mov
xor
pop
mov
sbb
in
fstpl
shrb
cltd
mov
icebp
clc
ljmp
mov
add
mov
dec
push
imul
and
jg
xor
sbb
or
rclb
hlt
xchg
xchg
mov
mov
and
jp
mov
dec
bnd
je
adc
sbb
jne
test
rorb
mov
jmp
jae
adc
sub
sub
dec
inc
dec
test
xor
jl
jns
mov
dec
mov
repnz
jne
xor
mov
xchg
in
ss
pop
sub
sbb
into
jae
repz
sbb
sbb
push
cld
je
cmpsb
gs
lods
shlw
push
rorb
sbb
decl
xor
push
dec
outsl
pcmpgtw
or
shl
repz
cltd
pop
jge
xchg
neg
mov
inc
jl
jae
movsl
xchg
cld
pop
aas
jecxz
mov
stc
cmpsb
loope
scas
mov
lahf
ret
and
push
mov
dec
xchg
pop
movsb
outsl
lea
jl
push
pop
push
shll
mov
popa
xor
icebp
adc
pop
lods
mov
scas
mov
and
xchg
fistpl
push
loop
ja
xor
fs
dec
test
pusha
test
push
pusha
push
inc
scas
arpl
xor
inc
and
xchg
pop
scas
sbb
cmpsl
cmp
sahf
or
sbb
pop
aad
loopne
popf
popf
sub
je
data16
pop
mov
mov
pop
xor
inc
aas
aad
xor
and
stos
dec
or
out
adc
sbb
cmp
cmpsb
pop
insb
jle
jne
mov
cmp
aaa
cmp
repz
cmpsl
int
add
insb
es
xlat
add
add
es
data16
mov
repnz
fcompl
pop
add
pop
add
imul
loop
adc
adc
or
call
jne
ret
cmpsb
dec
lods
hlt
sub
xchg
or
dec
sub
repz
popa
sbb
stc
push
out
or
pop
cmc
jo
jp
aam
jno
mov
inc
pop
add
fisubrl
or
sti
insb
push
out
in
outsl
inc
lock
divl
test
mov
mov
int3
push
insb
ror
xchg
data16
dec
mov
ja
cmpxchg
push
or
and
sahf
dec
adc
inc
inc
movsl
into
sub
insb
lret
pop
add
stc
clc
xor
lahf
inc
mov
in
test
jns
andl
cmp
orb
dec
pop
pushl
sub
mov
imul
mov
mov
jmp
ret
scas
pushl
daa
lock
push
hlt
pop
dec
pop
lret
mov
pop
sti
sarb
ret
mov
push
pop
mov
pop
pop
mov
mov
out
mov
movsl
jne
pop
xor
cli
push
and
pushf
push
adc
and
pushf
cmpsb
ret
cli
call
fisttpll
dec
cld
or
mov
std
int
mov
xchg
shlb
xor
jl
pop
test
adc
jmp
scas
mov
mov
mov
push
in
mov
mov
cltd
lret
push
shlb
xchg
or
xor
sbb
rcpps
jle
push
lods
cmc
xchg
int3
dec
call
fnsave
rorl
andb
aad
mov
cmp
jle
adc
and
and
xor
xchg
add
xor
in
dec
popa
sub
adc
mov
add
inc
dec
ficoml
adc
sub
xor
and
add
pushw
or
xchg
push
push
xchg
pop
push
or
dec
fcmovb
cli
flds
or
test
jmp
push
sub
lea
push
inc
adc
daa
es
fidivrs
in
dec
jno
fisttpll
ljmp
sub
repnz
pop
test
mov
sar
mov
pop
cltd
xchg
xchg
mov
cld
jg
cmp
shrb
test
jp
pop
dec
in
sarb
sub
repz
push
push
xor
jmpw
xchg
lds
or
insb
loope
lods
push
out
ljmp
sub
ret
sub
sub
and
cwtl
jo
cwtl
or
dec
out
cmpsl
jbe
inc
pop
lock
pop
sbb
add
dec
mov
cmc
xlat
or
aaa
dec
mov
jle
and
jno
sahf
popf
hlt
xlat
add
pop
mov
sbb
rcrb
iret
hlt
mov
add
xor
cmp
hlt
sbb
add
or
xor
push
jmp
fmull
inc
stos
ljmp
xchg
imul
inc
sbb
dec
insb
sbb
mov
jnp
std
xchg
mov
out
outsb
mov
inc
daa
mov
sarl
pop
std
xchg
lret
rcl
cli
out
pop
arpl
test
in
and
mov
inc
loopne
inc
sub
mov
test
pushf
add
or
push
adc
cmp
rclb
push
subb
leave
push
adc
mov
pop
nop
fdivrs
add
jge
pop
push
jnp
lods
jmp
sbbl
push
shll
dec
xchg
add
jns
dec
mov
fbstp
mov
mov
add
and
outsl
xor
int3
inc
push
xchg
aas
dec
movl
or
lcall
push
gs
scas
or
ljmp
movsb
mov
test
mov
fildl
mov
lock
inc
add
push
out
and
mov
sbb
cs
or
test
push
sub
jg
stc
inc
mov
gs
scas
sbb
aas
add
xchg
inc
jmp
push
popa
nop
sbb
outsl
xchg
test
stc
dec
aaa
jns
push
jne
stos
inc
cmp
repz
insl
cmp
cmp
das
jg
or
rclb
and
inc
jbe
pop
and
ret
ret
sti
push
push
inc
sbb
out
push
pushf
sub
andb
or
inc
xor
addr16
mov
dec
lock
xchg
call
addr16
jno
hlt
movsb
leave
inc
ja
shll
outsb
pop
stos
fucomi
int
mov
mov
pop
pop
lods
add
rcll
ljmp
pop
lret
add
in
inc
cld
push
pop
popw
js
out
sub
sub
shrl
or
gs
fld
loope
mov
out
pusha
push
or
and
jg
bswap
movsb
hlt
xchg
mov
movsb
rol
call
leave
jmp
and
jp
cli
out
push
test
insb
push
xchg
jne
loope
daa
mov
ja
and
dec
cmpsl
js
xchg
aad
in
jno
dec
adc
cmp
insl
adc
push
idiv
mov
adc
and
mov
aad
lock
out
ljmp
shlb
cmp
cmp
mov
cltd
pop
shl
xlat
jecxz
and
sub
mov
and
das
pop
cmp
push
mov
mov
mov
addr16
adc
in
inc
outsb
or
mov
jb
jnp
outsl
scas
je
testl
dec
pop
lock
cli
push
pop
pushf
int3
mov
jno
mov
call
das
push
je
dec
jnp
iret
xchg
cmp
inc
popa
lods
mov
pop
pop
dec
and
aam
js
jnp
gs
icebp
je
hlt
sarb
mov
ret
leave
lock
in
sub
push
lcall
cli
pushf
adc
xchg
adc
and
lcall
cwtl
add
sub
sub
inc
adc
test
insl
push
or
sbb
jo
inc
std
daa
xor
mov
pop
mov
inc
mov
push
mul
mov
dec
xlat
aam
xchg
negb
mov
ret
dec
into
cmp
in
popa
jne
aad
lock
mov
adc
jecxz
sub
pop
inc
cs
pop
popa
clc
sub
scas
push
or
pop
std
mov
cmc
push
fisttps
or
mov
mov
adc
add
inc
xchg
gs
ret
pop
das
and
mov
test
push
pop
mov
jg
sbb
into
inc
cmp
fildl
pop
inc
ret
jns
bound
lods
scas
cmpsb
jg
xchg
sbb
jmp
mov
vmovaps
dec
outsl
push
xlat
jae
dec
dec
sbb
rcr
fldcw
xchg
inc
les
mov
in
out
xchg
sub
sub
js
std
pop
pop
test
mov
jp
aas
pop
pop
bound
lods
xor
scas
and
adc
and
gs
dec
cmp
fcoml
cmpsb
push
outsb
adc
pusha
cmp
jg
fstpl
cmpsl
pushf
adc
bound
xor
pop
dec
pop
fdivl
and
sbb
fadd
ss
jbe
pop
lahf
cmp
pusha
or
mov
pop
jg
xchg
jle
repnz
std
jp
popf
imul
lods
cmp
ficoml
push
shrb
lds
xchg
pop
lods
mov
loopne
pop
dec
cmpsb
xlat
out
int
jns
orl
xchg
sbb
dec
sbb
mov
mov
adc
cmpsl
roll
loope
stos
pop
or
fwait
out
mov
std
inc
jle
adc
lods
inc
movsb
sti
orb
mov
mov
es
popa
push
sbb
push
out
stos
dec
dec
jg
pop
movsl
das
lcall
ficoms
sbb
les
js
out
adcb
jae
loop
push
mov
push
sbb
insb
add
and
xchg
xchg
stc
mov
and
xor
dec
shl
bnd
or
and
sub
in
test
out
in
or
sub
mov
adc
pop
mov
orl
sub
movsl
sahf
jo
cld
dec
mov
shlb
mov
loope
subl
in
ret
outsl
hlt
inc
sbb
sbb
inc
adc
cli
icebp
sahf
inc
mov
loope
and
icebp
and
call
mov
fisubs
insb
arpl
call
and
or
mov
lea
mov
orb
pop
fstpl
lret
repz
jg
dec
jg
loop
mov
push
jne
jg
or
lcall
lock
rorl
hlt
sbbb
lods
push
rcrb
cwtl
mov
fstpt
arpl
loopne
in
repz
inc
adc
clc
push
sbb
xchg
scas
push
xor
out
clc
test
sbb
cli
sub
ds
int3
jbe
mov
out
popf
xor
or
pop
les
icebp
or
push
jo
jmp
dec
mov
and
xor
mov
pop
cmp
adc
out
pop
inc
repnz
lods
push
jmp
sbb
jns
dec
xchg
scas
push
mul
pusha
mov
fistps
dec
pop
fs
or
or
daa
jno
inc
mov
or
cmp
movsb
cmp
mov
jnp
arpl
sbb
into
insl
pusha
jmp
std
in
mov
xchg
mov
inc
lcall
adc
imul
decl
adc
adc
and
cmpb
dec
cmpsb
aas
lock
mov
das
arpl
arpl
decb
mov
sbb
mov
clc
into
and
xchg
mov
out
sbb
mov
pop
pusha
ret
pop
and
repz
fistps
push
pop
jle
out
nop
clc
mov
jp
je
mov
cmp
cmpw
cmc
adc
add
adc
mov
ja
movb
rcl
mov
lcall
andl
cli
shlb
movsb
incb
pop
sub
inc
ret
dec
cli
repz
or
shl
andb
out
jecxz
loop
cmp
sbb
insl
sbb
sub
call
pop
cltd
ljmp
mov
ja
fdivrs
test
sub
pop
inc
pushf
js
rsm
aaa
and
or
xchg
add
aad
in
filds
cmpsl
add
xchg
outsb
insl
and
inc
push
inc
and
hlt
mov
jl
negb
mov
mov
psubd
in
add
ds
adc
adc
decl
popf
push
lret
mov
inc
push
xor
cmp
sbb
cltd
addr16
pushf
movb
inc
std
mov
out
or
mov
add
xchg
rcll
clc
mov
mov
mov
push
adc
stos
das
mov
fwait
sub
lods
push
xchg
popa
xchg
mov
adc
sub
popf
pop
popa
cmp
repz
stos
add
sahf
push
cmp
pop
inc
sahf
mov
jne
push
test
adc
cli
jle
out
xchg
sub
fldl
jo
mov
xor
cli
inc
lret
fbstp
push
mov
sub
js
js
mov
cmc
cmpsl
nop
scas
and
lods
mov
ffree
cmpsl
sbb
push
lahf
add
pusha
mov
mov
inc
mov
pop
ficomps
mov
push
idivl
inc
cltd
pop
mov
mov
add
push
data16
mov
shlb
sahf
add
xchg
add
pop
mov
les
call
out
lahf
insb
pop
inc
push
jecxz
push
inc
test
cld
sbb
push
jnp
jmp
dec
and
out
cmp
ret
testl
test
push
push
insb
mov
sbb
scas
push
test
iret
dec
adc
mov
dec
adc
inc
sub
xor
cmpsl
clc
or
pop
insl
lret
in
jmp
xchg
stos
jecxz
push
xchg
inc
adc
add
insb
pop
faddl
dec
fildl
insl
cmp
cwtl
push
cmp
rcll
dec
nop
add
pop
inc
scas
xchg
outsl
aam
jle
popf
pop
push
cmp
mov
xchg
adc
adc
fiaddl
cmpsb
jg
aaa
dec
jno
mov
jle
lret
mov
fwait
jns
push
mov
ja
mov
movsl
sbb
leave
and
out
cmpsl
ficoms
inc
fmulp
inc
mov
jmp
mov
cmp
popf
jg
std
add
lea
push
xchg
shrb
sbb
mov
ja
scas
jno
and
push
cmpsb
fucomp
stc
ljmp
rcrb
or
or
sub
shl
xor
divb
test
lea
je
fisttpll
push
jle
ret
lock
jnp
sub
jnp
sbb
jno
mov
push
cwtl
add
mov
pusha
sbb
push
push
xchg
push
or
xorl
jmp
fxch
inc
dec
inc
cmp
js
jnp
adc
je
adc
jno
inc
and
int3
sti
lds
lods
adc
add
gs
push
sahf
mov
arpl
lock
mov
jle
mov
push
and
pop
cld
jnp
and
dec
cmp
xchg
sbb
cltd
movsb
lret
cmp
push
int3
or
clc
jae
jp
adc
scas
add
xor
into
ss
sti
xchg
push
pusha
xchg
xchg
jg
inc
sbb
jle
dec
jp
fisubrl
inc
push
lahf
xchg
pop
pop
sti
push
jno
mov
pop
mov
lock
jle
imul
mov
mov
test
mov
fdivl
stos
and
fildll
orl
pop
ja
leave
mov
or
cmc
mov
mov
xchg
cmp
jmp
mov
mov
loopne
xchg
adc
mov
pop
les
sbb
add
mov
enter
jb
test
fcmovu
inc
ss
fstpt
es
lahf
push
bound
imul
mov
push
cmpsl
mov
into
in
test
xor
loopne
xchg
out
rcrb
roll
dec
imul
in
mov
or
mov
push
adc
add
insb
inc
jo
shrl
movsb
adc
aas
rorb
and
nop
cli
cmp
mov
pop
fidivrl
das
push
mov
js
add
or
inc
pop
mov
test
jnp
in
mov
cmpsl
fdivrs
xchg
mov
xchg
jge
xorb
inc
rolb
cmp
in
push
and
je
or
imul
dec
xorb
xor
mov
aam
call
outsl
mov
lock
push
push
xor
mov
mov
cmpsl
jae
push
sub
dec
cmc
loop
fsubs
jns
aas
xor
imul
dec
inc
or
cmp
pop
mov
test
pop
mov
xchg
cmpsl
mov
mov
push
inc
inc
jp
mov
loop
jbe
mov
xor
leave
adc
xchg
xchg
imul
scas
push
int
aam
mov
inc
cmp
adc
or
xor
repnz
fwait
gs
dec
or
xor
in
lret
test
push
xchg
mov
repnz
stos
mov
mov
push
lea
test
inc
pop
mov
cmp
iret
ds
jg
xchg
jl
out
mov
mov
negb
dec
jae
roll
ret
sahf
dec
out
mov
mov
test
test
inc
iret
jecxz
sub
ss
jl
sbb
ljmp
ficoms
scas
dec
sahf
add
pop
pop
jb
les
rol
mov
xlat
inc
ljmp
and
iret
call
fsubs
insb
pop
mov
push
pop
in
jge
cli
cs
dec
mov
hlt
je
add
std
mov
loop
ret
sbb
mov
add
fsubrs
mov
sub
das
icebp
neg
fcmovnu
je
mov
loop
sub
xchg
stos
adc
mov
shlb
mov
push
les
imul
hlt
inc
outsb
cmc
and
push
inc
adc
icebp
call
mov
mov
les
addr16
mov
add
fsubl
and
xchg
inc
xchg
stc
sti
inc
in
andl
xorl
fnstcw
push
fcmovb
jo
inc
mov
test
mov
adc
adc
cmpsb
lcall
rcrl
lea
cmc
mov
les
add
cmc
inc
lods
fnstenv
mov
mov
xchg
push
mov
mov
or
pop
imul
inc
mov
push
mov
in
rorl
sub
pop
lods
js
int
int3
xor
ret
fisttps
inc
and
adc
jbe
inc
stos
gs
sub
shrb
roll
sub
aas
jl
testl
or
jnp
pop
or
cmp
mov
scas
mov
mov
pushw
cmp
data16
lret
push
rclb
lcall
cli
mov
inc
bound
int3
jge
cltd
cwtl
adc
mov
add
in
dec
jmp
sbb
addr16
popa
mov
pushf
mov
jnp
iret
pop
int3
mov
sbb
sub
ljmp
xchg
fsubl
mov
or
dec
mov
out
inc
jae
ljmp
mov
pop
jmp
adc
mov
sub
clc
mov
inc
dec
mov
fisttps
ss
jp
xchg
mov
mov
or
out
xor
and
push
gs
fs
xchg
sbb
xchg
fisubl
mov
sbb
out
cmp
ret
xchg
pop
jge
xchg
iret
shrl
fisubl
addr16
imul
xor
xchg
dec
pusha
movb
sub
sub
inc
jle
in
push
insb
push
lret
fsubrs
idiv
pop
imul
and
push
mov
hlt
xchg
sub
xchg
xchg
stos
inc
popf
jp
jb
mov
xor
inc
repnz
cmpsb
mov
sbb
sub
jle
dec
imul
rorl
in
jb
xor
and
xor
in
inc
repz
inc
dec
mov
leave
sub
call
insb
push
pop
xlat
ficomps
and
or
push
pop
pop
jge
dec
push
fdivrl
inc
sbb
or
mov
push
push
mov
jl
jb
push
out
mov
sub
test
mov
mulb
roll
or
push
out
sub
sub
movsl
mov
add
in
mov
outsl
add
or
mov
sub
ljmp
xchg
popf
imul
lods
sbb
andb
aad
sub
sahf
pop
int3
sti
push
int3
mov
cli
rorb
in
ror
lret
xor
aas
cmc
add
sar
mov
xor
mov
sub
mov
hlt
sbb
clc
add
js
mov
pusha
push
repz
shrl
shl
sbb
inc
inc
xor
xchg
idivb
sub
pop
ljmp
sarl
push
xchg
sbbl
stos
popa
push
rcrb
mov
popf
xchg
mov
movsb
in
dec
hlt
movsw
push
adc
ret
in
sub
mov
repz
test
iret
je
pop
loopne
hlt
cld
dec
fwait
mov
fdivrl
sar
repz
xor
testl
test
and
mov
in
fdiv
xor
pop
hlt
pop
aad
jns
add
pop
push
or
jp
sub
pop
pusha
aad
sbb
das
js
mov
roll
push
pop
jo
cltd
mov
dec
cmp
movsb
les
inc
jg
jp,pt
lds
dec
in
scas
mov
sarb
jecxz
sbb
loop
shll
fsubrl
adc
inc
adc
pop
fucomp
mov
ds
sbb
and
call
jns
movsb
pusha
clc
clc
jmp
hlt
mov
mov
fs
dec
jae
sbb
sub
addr16
enter
repz
aad
loopne
and
adc
loop
faddl
pop
dec
sub
or
out
inc
inc
mov
int
or
add
sahf
fucompp
or
in
add
jbe
dec
pop
fidivl
negb
popa
pop
dec
popf
xor
jg
cld
in
add
mov
mov
fdivp
stc
mov
loop
call
pop
jle
leave
and
lods
sub
pop
sub
arpl
rol
xor
sbb
add
and
lock
xchg
pusha
sbb
pop
cmp
mov
mov
or
dec
inc
fldenv
xlat
fwait
and
ja
into
clc
psraw
out
ljmp
shrb
sub
push
lock
adc
fldt
push
jp
pushl
rorb
jge
hlt
xchg
insb
cwtl
out
fcoms
adc
leave
cwtl
xlat
fidivrs
xor
xor
imul
test
and
mov
outsb
subl
repnz
push
xchg
stos
ret
out
xchg
xchg
loopne
lahf
or
imul
jle
push
lcall
mov
cmpsb
sub
mov
jge
mov
fcomip
mov
jp
and
testb
push
rol
and
xchg
enter
push
add
pop
jmp
add
fdivl
push
inc
popf
lret
fstl
lret
xchg
pop
mov
mov
pushf
repnz
fwait
or
xchg
icebp
in
repz
mov
imul
add
cmc
popf
mov
enter
pop
cmp
icebp
sub
pop
push
out
mov
stos
arpl
in
fs
pusha
imul
xor
adc
xchg
aas
cmp
add
sub
adc
or
rcrl
jg
fs
test
shl
push
adc
nop
pushl
adc
inc
stos
mov
fmull
int
pop
ficoml
push
xor
mov
enter
or
mov
inc
sbb
or
xor
nop
sbb
es
ss
fs
in
sti
adc
jne
mov
in
xor
inc
sbb
jnp
repnz
xor
insl
in
xchg
xchg
cld
test
dec
xchg
popa
xor
rcrl
mov
test
inc
and
push
mov
pop
mov
jbe
jmp
repnz
mov
push
out
call
incb
jns
mov
inc
daa
leave
adc
ja
mov
jg
stos
mov
add
inc
testl
adc
sbb
cmpsb
cmpsb
mov
cmp
cli
stc
mov
int3
inc
sahf
lods
sti
faddl
out
add
pop
xchg
shrl
popa
stos
add
jg
cmpsl
adc
inc
cli
mov
add
ja
pop
inc
xor
fcomp
movsl
sbb
sbb
sub
sub
cli
ljmp
rcrb
mov
fs
es
dec
in
aaa
and
ja
pop
fwait
test
pusha
cmpl
xchg
mov
out
outsl
in
outsb
sub
pop
cmp
mul
arpl
gs
jmp
loop
sbb
push
push
cmpsl
clc
lock
dec
imul
stc
jo
xor
mov
push
out
jecxz
pushf
sbb
mov
fisttpl
mov
incl
jmp
sbb
adc
dec
mov
mov
inc
aas
lret
sub
and
sbb
pop
lods
or
div
popa
dec
jecxz
cs
sub
add
adc
inc
fcmovnb
add
push
xchg
jne
add
fmulp
sbb
gs
push
and
xor
call
pop
leave
add
sarb
aad
ret
lret
arpl
sbb
push
pop
dec
xchg
pop
lahf
push
shlb
aaa
pushf
jae
jecxz
mov
push
jne
mov
pop
repz
lahf
dec
xor
dec
or
push
inc
xchg
cmpsl
cmpsl
or
insl
jno
add
loop
fsts
out
push
pop
xchg
adc
xor
jl
inc
push
lods
jo
pusha
stos
adc
outsb
notl
outsb
je
mov
push
jmp
sub
xchg
mov
inc
mov
sbb
pop
cld
jle
sub
inc
xor
mov
out
inc
stc
in
arpl
push
jmp
cs
outsl
rcll
cs
das
movsb
jp
xchg
sbb
xchg
adc
add
std
inc
lds
daa
bound
cmpsb
pusha
cmp
sub
fwait
xchg
jg
sarb
mov
clc
adc
xchg
and
lret
faddp
pop
jmp
sbb
je
scas
jg
pop
inc
push
test
xchg
sub
mov
mov
mov
dec
je
mov
inc
aaa
pop
mov
enter
cmp
dec
pushf
shlb
sbb
or
nop
lea
jge
dec
jmp
lods
jp
mov
xor
test
and
iret
lds
xchg
out
cmpsl
bound
jl
out
fimull
add
push
cmp
data16
leave
xchg
cmp
stos
jbe
pushl
cmp
push
xchg
mov
pop
aad
aad
clc
aad
add
jb
mov
pop
cltd
sub
imul
dec
adc
lcall
fsubl
jne
test
cwtl
add
cld
mov
mov
ljmp
mov
adc
adc
jle
movsb
out
cld
imul
xchg
mov
inc
aam
dec
inc
shrb
cmpsl
loope
or
imul
pop
mov
jp
xchg
scas
stos
jmp
dec
shll
fdivrl
nop
lock
das
jl
jecxz
outsl
dec
sahf
loop
push
repnz
or
into
mov
push
jnp
inc
add
add
pop
sbb
insl
lea
mov
fistl
pop
sar
jnp
sub
aas
xor
ljmp
cmp
mov
lahf
mov
cmp
mov
pop
mov
mov
jle
ret
stc
cmp
inc
jnp
sti
imul
or
mov
push
xchg
lods
xchg
rcll
outsl
dec
push
fs
add
cmp
sarl
xorl
ror
mov
xor
pop
hlt
or
adc
loopne
adc
dec
jmp
mov
cmp
sbb
fildl
jbe
push
icebp
mov
add
push
add
in
push
arpl
lret
iret
jbe
dec
insl
adc
stos
sti
mov
lcall
and
stos
xchg
and
insl
mov
jnp
and
jae
jge
fmull
cld
frstor
xchg
inc
loopne
pop
push
xor
push
inc
cli
enter
out
rorl
pop
sbb
mov
mov
pop
sub
in
adcb
or
rorl
out
xchg
jge
adc
mov
xor
pop
scas
lock
mov
jle
ss
dec
adc
mov
push
push
fmuls
repz
jno
andb
ss
mov
or
test
js
iret
cmpsl
rcr
aad
ret
cmp
nop
test
jl
aaa
cs
test
inc
mov
cmpxchg
or
lcall
addl
pop
addr16
mov
xor
outsb
sbb
dec
fnsave
shlb
adc
clc
bound
mov
mov
iret
xor
loop
pop
xlat
popa
fstpt
xchg
iret
imul
cmpsb
lcall
mov
pop
mov
sub
pop
xor
xor
xchg
jecxz
push
sbb
push
ficompl
dec
outsl
push
xor
mov
pop
out
xor
jb
insl
adc
pop
imul
or
enter
int
in
pop
fnsetpm(287
jno
js
mov
xchg
sbb
mov
mov
outsl
sbb
shr
sbb
hlt
or
clc
movsl
push
push
inc
pop
stc
push
or
shl
aad
push
or
movnti
sub
loope
frstor
addr16
lea
ficoml
insb
add
lea
repnz
cmp
mov
cs
pusha
pop
xor
lea
out
xchg
pop
popa
or
push
dec
mov
xchg
aas
mov
fcom
cwtl
pusha
add
inc
sahf
fidivrs
lds
scas
lods
mov
add
xchg
cmpsb
loop
mov
mov
lds
loopne
dec
nop
imulb
or
dec
sub
inc
push
xchg
lea
sub
mov
fs
lret
pop
pop
les
in
into
shrl
stos
add
fidivs
pop
lcall
lods
adc
fimuls
fs
popf
sbb
sub
fbld
dec
jae
fwait
insb
insl
rorl
int
stos
xor
mov
div
out
mov
xor
iret
pop
pop
icebp
mov
and
mov
jb,pn
pop
mov
jmp
push
push
subl
scas
push
pop
sub
pop
and
mov
test
xor
jg
mov
fidivl
and
insb
mov
mov
fsubrl
or
adc
imul
jl
push
pop
push
out
jae
cs
ds
frstor
mov
xor
test
enter
xor
mov
jne
mov
sarb
push
cltd
mov
clc
shlb
int
adc
jb
mov
mov
xor
mov
add
dec
sbb
cltd
in
daa
xchg
cltd
lret
out
push
scas
scas
addr16
in
call
enter
cmp
mov
mov
lret
cmpsb
out
lods
mov
movl
ret
icebp
lods
pop
movsl
test
xor
jne
pop
jge
and
psubusb
pop
jp
pusha
mov
call
cltd
testl
popa
fmull
fstpt
or
sbb
mov
inc
out
pop
and
mov
push
movsl
out
addl
rorb
jl
sbb
xchg
cld
loopne
jmp
pop
fwait
movsl
adc
sbb
loope
repz
mov
out
sbb
mov
ret
out
sub
jbe
aam
mov
bound
pextrw
push
shrb
loop
and
inc
in
sbb
lahf
xchg
xchg
ret
push
sti
push
call
inc
mov
adc
and
adc
sbb
repz
jg
xchg
aas
das
aaa
push
repz
mov
adc
imul
cld
cmpsb
and
xor
adc
xchg
sub
ss
jb
pop
and
jns
or
jle
in
pop
xor
xchg
push
pop
jae
cmpsb
xchg
addb
push
lods
sub
dec
stos
cmp
popf
in
in
push
iret
out
in
fiadds
add
add
mov
test
imulb
inc
sub
sub
bound
mov
shll
das
and
mov
jmp
je
pop
mov
push
jne
test
inc
iret
sub
xchg
rcll
addr16
mov
adc
add
dec
mov
loope
lret
popa
ret
out
pushf
inc
mov
xchg
sub
movsl
mov
loope
xchg
popf
fiaddl
fsub
pop
adc
inc
outsl
insl
lock
aaa
cvtdq2ps
dec
fmull
nop
test
in
and
jmp
adc
lods
ret
loop
dec
scas
fiadds
daa
hlt
add
mov
pushw
push
lock
leave
mov
loop
je
mov
sbb
scas
ss
lods
sub
pop
adc
pop
cmp
or
leave
bound
leave
and
call
push
push
clc
mov
dec
sti
xchg
cwtl
sub
arpl
cmc
cmp
fdivs
cwtl
repnz
imul
sub
dec
pop
pop
jae
inc
cltd
fldl
repz
pop
in
mov
gs
pop
or
lea
push
xlat
inc
xchg
xor
stos
jbe
popf
aaa
lret
int
and
popf
and
shlb
ret
mov
cmp
addb
cmp
push
movsl
push
divb
sub
xor
das
fsubrp
sub
xchg
jle
mov
out
mov
inc
lcall
bound
xchg
add
cltd
jns
or
cmp
xor
cld
push
ja
pop
pop
es
jle
mov
adc
sbb
or
scas
cmp
out
and
pop
inc
add
dec
jmp
mov
pop
cmpsb
repz
mov
xchg
loop
dec
and
aas
test
mov
adc
fisttpl
cli
cmp
repz
sarb
push
add
insb
or
lret
mov
shlb
pop
mov
test
cwtl
xchg
mov
pop
sbb
mov
pop
mov
hlt
cwtl
sbb
stos
or
out
mov
enter
pop
in
adc
cmpsb
out
lds
stos
shr
inc
sub
das
mov
cs
shll
lds
sarl
subb
daa
cmpsl
pop
mov
insb
ja
roll
mov
cmp
pop
loopne
enter
fsubrl
fs
mov
cmpsl
bound
inc
mov
sub
pusha
jp
loopne
sub
fadds
mov
lret
cld
cmpsl
cli
lock
jne
loop
mov
jnp
xchg
cltd
and
or
xor
sbb
lcall
mov
out
daa
outsl
xchg
repnz
inc
jno
mov
mov
loope
leave
mov
js
ljmp
addr16
jp
inc
fidivs
movsl
mov
out
inc
jbe
xchg
xor
xor
pop
sbb
in
xorl
xchg
inc
mov
mov
sub
jecxz
aad
inc
jb
lds
jne
push
and
or
sahf
cmpsb
subl
out
add
inc
sub
test
mov
push
sti
repz
loopne
lret
dec
fcmovnu
sub
push
in
xchg
lahf
push
inc
test
ror
push
and
aaa
xor
popa
ret
loope
jp
mov
pop
rclb
and
mov
adc
or
test
pop
mov
pop
sbb
jmp
mov
stc
imul
aas
cmp
sub
lods
enter
xor
ja
xchg
xor
mov
or
mov
xor
iret
pusha
jbe
sub
jne
push
push
xchg
out
insb
test
xlat
xchg
lret
push
movsl
push
rclb
popl
fdiv
cld
cmovnp
movsl
stos
aas
pop
mov
or
pop
jo
xor
cmp
js
insl
cltd
inc
xor
cmc
inc
clc
pop
sbb
push
stos
push
popa
ss
aam
cld
sub
bound
sbbl
push
mov
push
xchg
test
cld
ficomps
mov
aad
lock
sbb
jl
bound
add
leave
shll
and
xor
jns
xorl
shll
mov
push
cmp
cs
xchg
ret
jae
push
sub
std
push
mov
repz
add
in
fwait
aam
cmp
jae
cmp
dec
ljmp
mov
lcall
rcrl
inc
ljmp
mov
pop
lods
fs
inc
sbb
movsb
test
popa
jno
fistl
sarl
inc
out
push
outsb
ja
xor
and
add
push
mov
cli
xchg
xchg
out
mov
insl
lods
jno
dec
cltd
xor
jne
mov
cmp
and
push
cmp
sbb
inc
cmp
scas
sbb
jle
mov
or
je
andb
adc
aaa
insb
dec
insb
dec
xchg
sub
aam
cmp
inc
cld
cli
jbe
xchg
stc
mov
loope
dec
outsl
ficomps
insb
cltd
jmp
mov
cwtl
test
dec
mov
xchg
add
in
sub
scas
sub
testl
lods
mov
jne
scas
adc
sbb
mov
push
push
dec
in
pop
inc
jnp
in
addr16
adc
rolb
ret
mov
int3
sub
and
fstpl
repz
jo
add
lahf
imul
int
fstpt
xchg
fcmovu
loope
mov
loop
mov
sub
cmp
shll
jae
icebp
andb
jl
and
lea
aaa
std
mov
pop
jbe
pop
sbb
add
fisubl
push
js
sti
mov
arpl
and
jne
loopne
adc
xor
mov
or
lods
bound
lock
dec
andb
sbb
je
in
pop
sbb
aaa
rorb
sbb
xadd
mov
addr16
aam
adc
mov
out
aad
test
mov
push
addl
and
push
xchg
or
dec
dec
mov
mov
popa
pop
mov
mov
in
test
and
adc
xlat
jae
daa
lcall
add
xchg
jnp
add
daa
mov
jmp
dec
cmp
push
into
ds
push
dec
push
adc
fsubrl
adc
dec
in
je
out
stos
and
stos
mov
pop
pushf
jle
mov
fstl
mov
xor
jl
shll
mov
cwtl
push
mov
pushf
sbb
push
insl
xchg
xchg
jno
sar
scas
pop
mov
lods
int
pop
mov
jnp
data16
inc
pop
sti
and
out
jecxz
fwait
pop
push
sub
cwtl
aaa
repnz
fnsave
and
ljmp
negl
push
ror
dec
mov
xor
add
adc
sbb
cmpsl
jle
sub
loop,pt
jno
dec
mov
cmpsl
test
xor
stos
inc
repnz
in
js
fisttps
idiv
sbb
stos
cmp
xchg
movhps
xor
int3
into
mov
xor
lods
gs
test
jmp
inc
adc
mov
sub
and
dec
xchg
imul
sbb
sbb
xchg
lock
lods
dec
and
and
mov
mov
lods
cmp
rorb
roll
aam
inc
adc
xor
sbb
pmulhw
movsb
cmp
push
jns
or
sub
nop
mov
mov
lock
cmp
mov
jne
or
adc
mov
in
fisubl
dec
push
shl
push
test
push
fsubp
jmp
loop
sarl
mov
aaa
cmpsl
pop
popl
test
dec
xchg
pushf
add
jge
push
jne
pop
and
fildll
or
lock
sub
test
mov
add
jge
mov
das
add
lcall
in
push
mov
dec
repnz
dec
cmp
and
xchg
cmpsb
sbb
lcall
adc
pop
cmp
rcrb
pop
je
sti
out
jo
push
enter
loop
inc
push
add
lahf
push
mov
inc
add
stc
fdivrl
fdivrl
dec
cmp
lds
js
jns
or
loop
push
imul
movsb
insl
push
je
dec
xorb
push
add
in
push
dec
stc
add
jmp
mov
xchg
addr16
gs
int3
jnp
push
aad
xlat
jo
pop
out
pop
jmp
rcll
inc
adc
jmp
cwtl
mov
pop
shr
fisubs
sub
jecxz
inc
fldl
ja
ljmp
mov
xor
mov
pop
int3
add
pushf
inc
jns
cmp
jp
mov
push
imull
subb
push
jmp
inc
mov
pusha
lock
sub
sub
lds
ficoms
xor
add
cli
jmp
or
jmp
call
sbb
in
dec
pop
cmp
fwait
sbb
mov
pop
shlb
mov
or
push
pop
icebp
mov
gs
popa
pusha
hlt
xchg
pushf
and
adc
mov
lahf
add
sub
lahf
cli
sbb
adc
pop
dec
repz
cmp
xchg
je
jmp
adc
test
mov
mov
outsl
ja
shrb
aad
sub
mov
loopne
loop
test
sbb
ljmp
test
test
and
push
popa
sub
cmp
push
jno
cmp
ljmp
fildll
gs
push
scas
loop
jmp
imul
popa
jp
pop
icebp
je
cld
jg
neg
daa
pop
mov
mov
sti
pop
push
loop
aad
push
cwtl
mov
stc
imul
add
jl
cwtl
sbb
cld
cmpsb
sub
jecxz
jnp
movsb
lret
enter
jb
ret
mov
mov
jnp
repz
test
and
sbb
jns
mov
xchg
or
lods
mov
sub
jo
out
pop
call
or
cmp
jnp
outsl
jp
fisttpll
mov
xchg
dec
or
mov
mov
sbb
mov
stos
or
mov
insb
fwait
jg
ljmp
out
mov
insb
add
mov
pop
pop
imul
mov
mov
and
jae
shl
sub
add
mov
addb
imul
mov
xor
sbb
inc
jne
arpl
fs
inc
cmp
in
and
mov
cmp
movsb
adc
sub
int
push
jg
lahf
lock
dec
mov
xchg
pop
or
sbb
out
jae
sub
sarb
clc
dec
pop
out
cmpps
mov
test
add
push
movsb
in
mov
dec
xor
adc
pusha
sbb
sbb
fistl
xchg
int3
sbbb
rep
xchg
inc
arpl
cwtl
or
xor
cmpsb
test
sub
std
imul
lea
jno
adc
xchg
cmp
inc
cmc
jne
mov
add
push
adc
sub
mov
xchg
rorb
push
or
lea
inc
enter
dec
lock
sti
push
xor
lds
cmp
out
sbb
dec
je
xchg
ja
js
mov
fbld
loope
in
dec
int3
out
dec
jne
ja
pop
pop
and
push
or
jecxz
or
lods
testl
mov
ds
jno
icebp
ror
and
xchg
xor
test
push
mov
clc
xor
pusha
push
dec
or
das
das
loope
or
cmc
inc
push
dec
inc
das
aam
pop
mov
dec
pop
push
cmp
and
dec
outsb
cmp
sub
dec
je
mov
pushf
adc
hlt
push
xor
mov
sub
ljmp
mov
repnz
sbbb
mov
adc
pop
fadds
and
cld
mov
test
lock
xchg
xor
movsb
cmp
pavgb
push
and
and
mov
fstpt
movsb
mov
sbb
fscale
cmpsl
test
pop
fwait
imul
icebp
sub
add
adc
jne
test
xchg
bound
pop
jb
cmp
jne
js
pop
ror
imul
lea
or
loope
in
lea
into
cwtl
inc
aam
push
mov
pop
lcall
test
cltd
insl
addr16
mov
mov
shrl
adc
stc
movsb
sbb
rcl
jae
adc
push
popf
add
or
or
fldt
cmc
xor
pushf
sub
adc
mov
cmpl
in
lock
mov
repz
outsl
sbb
sbbl
adcb
and
in
subb
jnp
lods
sbb
aad
in
mov
mov
mov
push
shl
xor
je
data16
jmp
jb
cmp
sub
push
sysret
loop
sti
jecxz
iret
movsl
cmp
adc
push
jbe
dec
mov
cmpsl
dec
or
jns
xchg
xchg
add
mov
ret
jbe
sbbl
xchg
mov
push
and
popf
into
outsl
xlat
sbb
push
mov
add
pop
adc
mov
xchg
sbb
stos
mov
insb
int3
jecxz
in
pushf
or
dec
and
js
xlat
push
mov
inc
jb
cmpsb
fsubr
cli
outsb
outsl
mov
test
scas
push
dec
or
mov
mov
cmc
push
xchg
push
and
and
vunpckhpd
push
pop
not
xlat
push
sub
vmulpd
inc
test
ds
hlt
fsubr
push
pusha
int3
sub
stos
iret
mov
and
arpl
scas
repnz
xchg
mov
nop
insl
scas
jle
mov
lods
sbb
xor
aad
popf
stos
addr16
cs
ret
xchg
and
lods
dec
pop
xor
icebp
mov
lret
add
lahf
jg
mov
repnz
jbe
in
aad
icebp
mov
pop
dec
push
or
jg
iret
sbb
sub
lods
mov
and
inc
imul
cmpsb
push
cli
xchg
test
mov
jnp
jp
ja
mov
xchg
add
adc
dec
rcr
cmpsl
cltd
mov
sahf
sbb
inc
mov
inc
or
icebp
aam
lods
aas
push
dec
or
mov
jae
lods
mov
jge
pushf
xchg
test
jb
je
push
adcb
add
mov
cmpsl
jmp
out
add
cmp
fcompl
sub
lcall
movsb
inc
andl
jne
jae
pop
mov
rcrl
rclb
lock
into
cmp
xchg
test
xchg
adc
jg
lret
xor
lcall
xor
lea
dec
sbb
lock
divb
and
sbb
lret
into
mov
add
ja
jmp
cmpsb
movsb
stc
push
push
mov
adc
scas
push
xchg
fsubl
cmp
test
or
dec
mov
dec
and
lea
sbb
jmp
pop
mov
lods
jmp
pusha
mov
ja
inc
mov
mov
test
sub
adc
sub
add
xchg
dec
adc
cmp
mov
jbe
fildll
jle
test
push
sub
call
stc
mov
jge
out
mov
mov
data16
sahf
xchg
insb
scas
xchg
cld
adc
fldenv
push
fwait
ret
out
and
sbb
push
icebp
jle
dec
push
enter
sub
mov
out
push
js
jae
cltd
push
outsb
sub
mov
hlt
xchg
out
mov
inc
in
push
orl
sbb
adc
shl
aad
push
pop
inc
js
jl
inc
loop
cs
fs
and
imul
sub
xor
pop
lret
mov
aas
jns
push
stc
aad
lahf
cmp
or
add
nop
scas
sub
xchg
mov
or
je
lods
push
nop
inc
imul
bound
lret
push
inc
in
mov
dec
add
sub
jns
pop
repnz
js
imul
adc
mov
add
pushf
dec
aad
and
ja
ljmp
adc
adc
leave
and
int
cmp
dec
nop
movhps
sub
addr16
or
and
out
sub
push
jbe
adc
pop
das
stc
adc
lret
out
xor
fwait
icebp
mov
sbb
xor
fsubl
add
xor
dec
sub
outsl
addr16
or
xchg
popa
int3
imul
loope
adc
jnp
daa
inc
sar
nop
adc
push
pop
repz
aam
jp
add
inc
nop
cmp
icebp
test
repz
stc
fcoms
orl
jne
cmp
stos
call
sub
inc
addb
or
push
call
loop
popa
xlat
loop
pop
sub
ret
jbe
arpl
xchg
out
push
cli
mov
hlt
push
iret
mov
lods
cmp
mov
lahf
mov
mov
leave
dec
add
int
movsb
push
mov
jb
or
sbb
lds
mov
lahf
mov
cmpsl
fldl
sbb
stos
aad
mov
in
lea
pop
mov
cmp
push
into
sub
out
fs
sbb
mov
fs
mov
adc
pop
pop
rcl
cltd
inc
lds
sbb
std
repnz
inc
inc
rclb
lods
fistl
jae
cld
push
enter
mov
sub
cs
cli
lock
jg
mov
cmp
cmc
lea
stos
jnp
cs
je
sub
mov
lcall
sub
shlb
xor
xor
cmp
mov
jmp
shll
int3
add
sbb
xor
mov
add
mov
adc
adc
jo
jle
repz
ss
cmp
inc
sub
dec
or
fisubl
pop
jae
call
outsb
jecxz
jg
sub
das
out
sbb
cmc
inc
mov
jecxz
xchg
jbe
xor
pop
jle
inc
orb
adcb
pushf
cltd
int3
pop
lds
inc
clc
xor
sbb
testb
insl
xchg
adc
cmpsb
cwtl
push
xor
and
push
pop
insl
stc
stc
mov
mov
or
inc
rorb
ljmp
lret
lds
stos
and
clc
out
rdmsr
in
xchg
adc
sbb
test
adc
mov
jne
shll
mov
aam
xchg
cmc
xor
lea
shl
rcr
cld
or
orb
mov
add
outsb
push
xor
dec
and
inc
aam
subb
mov
in
push
pop
pop
gs
inc
test
rorb
icebp
imul
pop
inc
ret
pop
fcoml
mov
pop
cmp
cld
loope
cwtl
dec
pop
jne
daa
jle
fidivrl
repnz
repnz
sbb
lea
nop
clc
xor
xor
mov
pusha
ja
pop
inc
push
xchg
fxch
rcll
das
lahf
daa
mov
cmpsl
cmp
test
js
and
and
mov
xchg
pop
int3
lcall
or
push
scas
adcb
aam
lds
inc
dec
stos
lcall
push
lock
sbbb
popa
rcrl
adc
lods
sub
mov
jns
pop
dec
mov
push
les
pop
sahf
gs
mov
jb
fsubrl
jb
and
mov
addl
sahf
in
jb
test
testl
cmp
addr16
in
xchg
scas
push
das
xorb
loope
or
lods
loopne
and
jb
ret
jp
je
mov
sbb
mov
imul
aas
mov
and
mov
xor
xchg
mov
add
cmpsb
adc
pop
cmp
fwait
aam
test
mov
cmp
dec
adcb
sbb
mov
mov
adc
aaa
sbb
jmp
push
scas
in
fistps
lahf
push
cmp
push
rclb
in
pop
ss
inc
push
js
pop
in
fidivs
xchg
mov
loopne
mov
insl
cmp
mov
mov
inc
out
in
je
jae
sti
and
fs
leave
in
xor
or
int
add
mov
jp
xchg
mov
lock
cmp
jl
jnp
cmpsb
in
cmp
jne
pop
sbb
pop
pop
loope
movl
cltd
mov
cmpsl
sub
sbb
movsb
dec
pusha
add
pop
test
fists
repnz
bnd
or
lods
lods
fwait
lds
pop
lret
mov
stos
cld
adc
push
test
stc
dec
pop
mov
aam
sar
ret
shl
push
jmp
inc
push
jg
sti
jns
out
jmp
outsl
cmpb
into
push
mov
sub
stos
push
negl
xchg
call
push
sub
fldcw
jbe
mov
sub
inc
or
pop
loope
sub
mov
andl
xchg
mov
jnp
cwtl
cmpsb
xchg
imul
loopne
ror
dec
arpl
pop
movsb
hlt
ja
pop
rorl
lcall
sbb
imul
jb
xchg
mov
mov
popf
dec
arpl
xchg
push
mov
aad
jmp
jmp
in
mov
mov
and
cmp
push
and
loop
sbb
push
daa
pop
fcom
cmp
das
pushf
xchg
jbe
sub
mull
bound
jg
and
cli
mov
jle
mov
nop
insb
adc
testl
and
dec
mov
adc
mov
mov
mov
push
rol
mov
adc
adc
fdivs
loop
arpl
push
pop
xor
lea
sbb
inc
cmp
sahf
and
icebp
stc
jb
mov
or
fsts
in
hlt
add
or
mov
insl
sub
sbb
mov
imul
lea
notb
mov
sub
outsl
and
mov
jle
rol
push
xchg
and
xor
xchg
xchg
sbb
sub
or
mov
aad
jecxz
aas
cmp
mov
jle
sbb
dec
lret
cltd
nop
subb
lods
lret
sub
loop
sbb
lods
cmp
mov
in
xor
hlt
mov
sub
cmpsb
jmp
sub
dec
arpl
and
xchg
imul
mov
pop
into
pop
xchg
mov
mov
shl
add
pop
push
and
inc
inc
dec
jg
stc
push
sub
ficoml
ds
xchg
adc
sarb
mov
roll
jne
sub
sub
fs
add
pop
sbb
inc
add
ret
mov
pop
outsl
arpl
pop
mov
adc
inc
xchg
enter
mov
movsb
les
aam
dec
mov
mov
test
cltd
mov
or
and
jns
xchg
daa
xlat
sub
mov
daa
xor
jnp
push
inc
sub
pop
mov
mov
loop
scas
pop
movsb
lods
pop
pop
or
ja
rcrb
movsb
arpl
je
sbb
sbb
jnp
je
inc
fldenv
out
lods
jl
mov
add
loope
xor
repz
pop
pusha
negb
rolb
pop
out
push
call
lret
sbb
cmpsl
fimull
xchg
test
lea
in
inc
dec
jns
mov
aad
inc
sub
cwtl
in
cmp
and
pop
call
daa
add
push
in
adc
cwtl
push
dec
pop
cwtl
pop
rorb
aam
xchg
cli
sbb
mov
sub
mov
mov
jb
inc
leave
imul
inc
mov
movsb
sub
imul
xchg
jecxz
popf
cmpsl
mov
inc
dec
int
dec
aaa
jbe
ret
dec
or
shrb
xlat
or
shll
icebp
jae
dec
ret
je
push
ss
xor
popa
popa
cmp
data16
pop
dec
loop
aas
push
rolb
inc
mov
test
movsl
les
imul
imul
adcl
or
cs
loope
add
lret
xor
movl
int
shll
push
xchg
mov
jnp
inc
dec
jbe
pop
jno
das
and
mov
lea
jne
lret
xor
sub
lcall
in
sbb
ret
push
das
sub
cld
mov
dec
cwtl
pushf
call
xor
lods
loop,pt
push
sarb
xor
sub
nop
lods
push
bound
xor
shrd
pop
loope
pop
cmp
insb
in
stos
pusha
cltd
pop
addr16
add
das
add
mov
jge
dec
jecxz
out
mov
scas
hlt
cmpsl
xchg
sbb
push
or
lea
jmp
rcr
mov
stc
mov
dec
push
int3
movsb
mov
js
test
js
in
stos
mov
push
decl
aam
dec
push
dec
mov
xchg
enter
int
add
push
dec
mov
out
xchg
jne
xchg
dec
dec
pop
into
mov
add
rep
daa
xchg
pop
test
jmp
add
test
enter
pop
mulb
xor
scas
and
push
pop
adc
push
ficoml
and
clc
lahf
pop
push
push
shl
push
ret
sarb
cs
xchg
sub
shlb
mov
mov
sub
repnz
xchg
mov
mov
ljmp
dec
sbb
ds
mov
mov
fists
xlat
dec
dec
daa
sub
jbe
loop
adc
aam
ret
sub
mov
cmp
or
or
push
or
das
pushf
ret
push
imul
cmp
and
lock
mov
push
sbb
pop
hlt
jecxz
sbb
imul
xor
or
ret
mov
inc
in
push
or
lcall
adc
mov
das
mov
mov
negl
mov
cmp
stos
inc
pop
shll
jo
dec
std
rol
cmp
cwtl
loope
pop
dec
repz
in
sub
ss
push
adc
mov
popf
or
push
mov
adc
push
mov
xchg
stos
sbb
mov
and
mov
push
adc
shlb
in
or
movsl
mov
dec
and
daa
dec
pop
jle
xor
pop
and
sbb
into
and
notl
fstl
pop
test
gs
jns
std
cmpsl
mov
mov
jae
sub
or
jb
fcoml
dec
mov
ret
icebp
adc
and
scas
std
stc
lcall
sbb
out
push
outsb
push
jne
pushf
and
dec
add
jb
push
scas
dec
mov
inc
dec
lret
add
shll
sub
scas
pop
out
jne
adc
adc
ret
popaw
into
inc
cs
cmp
mov
pusha
mov
lods
inc
cli
push
lock
xchg
data16
push
lret
xor
mov
mov
fsubrl
bound
loope
adc
xchg
test
lahf
into
mov
and
adc
push
jo
jl
push
cmpsl
add
cld
xor
int
inc
jns
xor
leave
jae
daa
or
mov
dec
jl
iret
es
push
jmp
cmpsb
cmp
add
adc
lcall
cmp
in
cli
jg
cmc
lret
out
and
mov
adc
out
in
fiaddl
pushf
popa
cmp
add
adc
mov
mov
sbb
and
lret
scas
mov
in
jmp
inc
push
dec
sbb
mov
loopne
sbb
xchg
xchg
loopne
mov
hlt
loope
and
and
sub
pop
add
push
gs
es
loope
into
fldcw
cmpsb
push
ds
mov
popf
xchg
daa
dec
add
lods
xor
and
in
pop
pop
pop
imul
xor
inc
push
mov
mov
scas
dec
stos
outsb
push
imul
push
shr
and
and
out
pop
pop
jno
mov
nop
ds
test
xchg
xchg
sub
stc
sbb
push
xchg
cli
cmp
jecxz
xor
arpl
vcvttpd2dq
clc
pop
inc
fnstcw
xchg
push
mov
fnsave
adc
int
cmp
test
js
arpl
mov
fldt
cmp
test
les
push
mov
mov
arpl
xor
add
xchg
or
imul
adc
insb
xchg
fs
jb
xchg
shlb
cmpsb
xchg
push
adc
arpl
outsb
js
int3
mov
sti
repnz
cmp
and
xchg
dec
adc
popf
and
dec
push
fisubs
loopne
jnp
stos
les
testb
xor
inc
push
idivl
fstpt
dec
stos
push
sbb
enter
or
and
popf
icebp
jb
xchg
add
addl
es
pop
movsb
insb
adc
jne
sbb
mov
mov
cmp
jle
addr16
in
inc
pop
mov
push
popf
pop
fisubrs
xchg
outsl
dec
cmpsl
repnz
push
sbb
cmpsb
mov
adc
test
xor
divl
cmc
addr16
lret
mov
or
fmul
cld
mov
add
cltd
mov
lods
adcl
cld
paddb
cltd
push
push
xchg
pop
mov
stc
and
je
paddq
xchg
iret
test
fdivp
push
cmp
aam
cmp
fdivs
push
adc
mov
dec
adc
add
pop
push
repnz
push
lea
or
inc
push
xchg
jmp
push
pop
dec
lcall
push
std
push
mov
stos
out
push
leave
or
scas
ljmp
push
call
ss
xchg
sbb
cmpsb
call
push
cli
mov
mov
imul
add
dec
xchg
lret
cmp
clc
mov
outsl
push
test
scas
int3
iret
mov
negb
mov
cmp
mov
out
aaa
push
andl
dec
jmp
sbb
dec
in
pushf
fwait
js
stc
mov
test
and
rcll
ds
in
ficompl
pop
rcrb
fucom
sbb
or
mov
xor
push
and
pop
and
jmp
mul
push
mov
in
lahf
push
les
aad
test
sahf
arpl
popa
decb
xor
and
jno
fidivs
xchg
lds
push
mov
repnz
cwtl
arpl
sub
rorb
adc
sbb
mov
mov
mov
adc
push
add
std
aaa
mov
sub
push
add
enter
jno
arpl
es
fwait
add
mov
cmpl
rorb
sbb
aam
mov
addb
lds
jbe
out
mov
inc
sahf
rcl
xor
push
mov
mov
popa
into
outsb
out
dec
test
movsl
adc
mov
testb
lods
mov
lcall
jp
and
ror
insb
push
inc
in
mov
test
fmull
bound
clc
retw
test
out
pop
xchg
dec
sbb
out
cs
mov
sbb
cmp
push
cmpsb
fstp
cmpsb
fwait
fwait
jns
pop
lods
into
mov
dec
mov
out
adc
rorb
in
jns
inc
test
setnp
cld
xor
mov
ret
sbb
mov
jmp
adc
xlat
into
mov
push
push
jo
call
fsts
jl
xor
ja
mov
sar
cs
rcrl
ds
in
aad
pop
mov
in
jmp
hlt
cmp
push
mov
xchg
outsb
or
push
leave
cmp
pop
inc
pop
mov
clc
shll
mov
pop
ja
lret
sbb
mov
push
sub
jnp
lds
mov
and
les
sahf
popa
inc
pop
mov
je
xchg
mov
aas
xor
outsb
adc
insb
mov
rorl
sbb
mov
jl
mov
pushf
dec
mov
jg
or
fs
or
repnz
push
mov
fstpl
xor
stos
and
jecxz
jns
aam
in
je
push
roll
jl
cmp
scas
test
adc
mov
mov
mov
out
inc
fidivrl
xlat
or
jp
lods
out
pop
xor
mov
mov
shl
pop
insb
push
mov
mov
add
or
mov
adcb
jp
adc
xchg
call
mov
test
inc
imul
cmp
pusha
jg
cmp
mov
push
jecxz
stc
fsubl
mov
int
mov
adc
addr16
jg
pop
ret
push
cmp
adc
add
out
or
ret
pop
imul
jb
sbb
cs
js
subb
sahf
sar
jns
and
jb
xor
xchg
jl
sub
jmp
movsb
adc
xor
scas
cli
cld
sub
test
test
lret
maxps
or
clc
mov
mov
jp
dec
arpl
push
adc
repnz
xchg
inc
mov
inc
addr16
mov
xor
aam
jle
sarb
rorl
add
sub
test
push
in
mov
mov
inc
repnz
out
push
faddl
xchg
mov
cmp
loope
mov
jl
cmp
inc
nop
ror
pop
sbb
lods
cmp
or
lahf
stc
push
fwait
jb
cmpsb
jae
stos
scas
outsl
or
data16
pop
xchg
pop
sub
in
cld
jne
shr
in
mov
psrlw
out
add
dec
lods
fstps
inc
and
or
cmp
stos
cmp
shr
inc
pop
sub
fs
ds
pushl
pop
mov
ljmp
mov
sub
sub
push
test
stos
sbb
arpl
in
je
jmp
push
push
insl
lea
sarl
addb
mov
pop
lods
push
xchg
out
inc
imul
jnp
push
ret
and
pop
nopl
les
loop
jno
std
into
retw
in
nop
and
mov
jle
jmp
insb
xlat
or
je
sbb
js
int3
inc
dec
add
dec
lods
inc
sbb
mov
cwtl
jns
mov
pop
dec
pusha
aam
cmp
push
inc
dec
mov
popa
jns
push
xor
mov
mov
hlt
movsl
mov
cmp
xor
and
jle
add
push
shrb
or
fisttpll
pop
rcll
fstpt
in
dec
adc
inc
gs
fwait
push
out
or
push
jnp
fisttpll
push
push
pop
fstpl
dec
movsb
inc
iret
add
imul
ds
sbb
repnz
lea
jl
jge
dec
sbb
hlt
icebp
imul
fisubs
je
fistpll
push
push
lcall
out
scas
add
xorb
adc
mov
push
aaa
fists
push
dec
mov
xor
dec
test
or
scas
dec
repnz
push
and
and
ljmp
pop
sbb
leave
movsb
aam
or
sub
xor
pop
gs
pop
clc
int3
add
inc
ret
sbb
jecxz
inc
mov
getsec
lds
cmp
pop
fldcw
add
xchg
movlps
add
push
cmp
int3
push
xchg
push
dec
pop
hlt
sbb
lock
mov
hlt
add
jb
push
sub
cmp
mov
lea
fimuls
in
xchg
bound
aam
xchg
repz
or
fcomps
scas
sub
xchg
xchg
xor
bound
divl
xchg
repnz
inc
pop
dec
aam
sbb
cwtl
bound
push
icebp
mov
lds
xor
inc
push
xor
fs
imul
out
lods
fsub
cs
jle
enter
xchg
jbe
or
int
add
xor
int3
adc
inc
add
cwtl
sbb
arpl
test
lock
stos
lods
fnstenv
adc
in
push
and
or
data16
cld
imul
xor
sbb
xchg
js
mov
divl
out
clc
and
sub
dec
popf
or
inc
sbb
mov
std
fucomp
push
sub
or
adcb
lea
dec
mov
jge
push
out
loop
nop
stos
test
fcmovbe
movsl
and
leave
jo
cmpsl
sub
push
repnz
mov
adc
jne
bound
dec
pop
mov
lds
xlat
sub
sbb
out
sbb
mov
loope
in
add
out
and
cmp
jbe
dec
dec
fwait
sbb
xchg
xchg
hlt
jnp
adcl
lret
jae
xchg
mov
xchg
or
push
sub
in
leave
leave
push
push
mov
jnp
and
xchg
inc
dec
and
iret
mov
pop
mov
pop
jg
inc
dec
add
lcall
mov
cmc
loope
repnz
test
cmpsl
int
jo
dec
push
out
push
sar
xor
test
fimull
outsl
std
push
leave
sub
jo
mov
xchg
int
stos
jecxz
inc
test
push
xchg
cmc
mov
loope
sub
add
mov
xchg
pushf
sub
sbb
mov
jl
mov
in
out
jbe
aaa
push
rolb
cmc
mov
push
sbb
adcl
sti
sub
push
mov
ret
loop
add
pop
sub
sub
sub
cwtl
lea
and
sahf
xlat
in
add
push
stos
xchg
sub
xor
andl
adc
jns
pop
or
or
addr16
inc
insl
sbb
pop
insl
clc
mov
add
aaa
fdiv
outsb
xor
add
jmp
ret
out
in
or
pop
shlb
int3
adc
cmp
add
sub
and
lods
into
sub
mov
sub
xchg
fwait
cs
push
xor
ja
popa
pop
push
aaa
mov
test
cli
in
movl
mov
and
ljmp
xchg
push
out
movsl
inc
test
jns
xor
add
andl
sbb
sti
sbb
inc
inc
jne
jno
adc
arpl
dec
and
repnz
xchg
mov
dec
rorl
ds
mov
rcrb
mov
sbb
aaa
cmp
cmp
cli
es
mov
outsl
mov
cmc
arpl
xor
push
scas
push
jp
add
roll
subl
xor
jge
or
mov
sti
icebp
jb
mov
scas
xchg
imul
adc
cmpsl
stos
rcll
cmp
xor
movsb
adc
add
adc
stos
sub
add
and
test
push
and
xchg
mov
iret
mov
sub
punpckhwd
pop
inc
jne
add
cmp
aad
nop
fdiv
addr16
and
mov
fstpt
mov
mov
adc
cltd
cmp
mov
out
popf
js
stc
inc
stos
or
fstps
xchg
jge
bound
scas
push
je
lahf
aad
testb
test
push
shrb
pop
sub
aam
push
loope
jb
andb
or
pop
rol
out
mov
fsts
jl
cs
int
sbb
mov
adc
add
pop
lock
mov
dec
xchg
dec
push
and
stos
mov
cmp
add
loop
aaa
mov
dec
sbbb
cmp
mov
sub
cs
cmp
cld
sub
jno
inc
xor
rolb
ljmp
cmp
sub
jmp
outsb
jge
shrl
addl
incl
cmpsl
cli
cli
jno
cmpb
pusha
xor
or
loop
jecxz
rorl
xlat
outsb
lcall
mov
notb
jae
and
xor
mov
rcll
add
out
popf
outsl
jmp
rcll
sub
out
mov
jbe
dec
push
mov
cmpsl
xchg
adc
sub
mov
dec
adc
clc
pop
aas
jecxz
popa
ret
sti
jmp
loop
aaa
xchg
pusha
jns
dec
in
dec
and
ja
mov
in
in
sub
cli
pop
jae
mov
dec
mov
rclb
enter
lods
pusha
sbb
test
sub
jge
fnstenv
mov
lahf
in
xchg
cmpsl
insl
sub
ss
icebp
je
xchg
pop
push
push
aam
push
pushf
xchg
mov
imul
data16
inc
fisttps
into
cmp
cmp
inc
and
in
jle
lea
leave
lds
mov
cmp
mov
mov
xor
test
jl
dec
mov
cs
cmc
aas
mov
or
pop
push
cmp
xor
push
call
call
xlat
fucomi
addr16
add
stos
xchg
pop
fistl
sti
test
and
push
jns
loopne
and
in
mov
or
push
addb
jmp
loop
or
inc
lds
xchg
lret
adc
into
adc
push
pop
outsl
rcrb
xchg
and
xchg
xchg
fwait
mov
arpl
jno
dec
js
mov
mov
push
pop
leave
test
push
add
aad
fsubrl
ret
jb
rorb
inc
movsl
ret
add
push
mov
mov
vmovaps
mov
in
push
maskmovq
testl
xor
xchg
sbb
orl
mov
xor
jae
pop
aaa
fidivl
add
or
mov
fs
repz
inc
frstor
xor
fildll
and
stc
notl
xor
dec
mov
mov
loop
fcompl
adcb
stos
rcll
push
adc
repnz
in
imul
repnz
or
rolb
adc
mov
loopne
xor
movsl
xchg
pop
adc
stos
jbe
in
es
sub
insb
loopne
pop
iret
mov
jle
sbb
adc
out
jae
jb
test
out
iret
cmp
or
mov
mov
mov
in
adc
pop
cmp
cmp
scas
push
xlat
jns
add
or
aaa
pop
int3
hlt
sub
mov
cmp
xchg
mov
cld
add
fwait
ret
adc
aad
sbb
arpl
rcpps
shrl
pop
aam
or
in
hlt
ljmp
cmp
xor
dec
rorl
pop
jecxz
sub
mov
inc
lahf
mov
sub
ss
bound
jne
push
or
insb
sbb
cmpsb
mov
sub
mov
jne
push
jo
insb
dec
add
aas
sahf
jmp
or
fiaddl
xchg
arpl
aaa
add
add
pop
into
push
aaa
push
ret
notb
jge
data16
sub
and
or
pop
lret
inc
arpl
rcrl
sub
fnstsw
push
jae
pop
fwait
inc
add
out
ffree
ljmp
mov
stos
xchg
cmp
divb
inc
sub
lahf
or
cld
cli
call
push
inc
push
lods
push
pop
cltd
out
mov
xchg
je
fcmove
clc
jecxz
cmp
fmuls
jb
sub
icebp
xor
lret
orb
test
mov
adc
or
iret
mov
and
or
xor
outsl
outsl
outsb
stos
lahf
sub
outsb
out
stc
jnp
and
mov
add
add
lcall
sbb
xlat
sbbl
sub
std
leave
cmp
mov
sbb
mov
xchg
mov
jmp
adc
orl
xor
dec
daa
dec
or
aaa
push
lahf
aas
mov
add
fucomi
fimuls
lea
pop
mov
xchg
mov
test
push
mov
les
popa
out
enter
adc
inc
inc
inc
adc
adc
pop
fsub
jg
sub
add
xchg
mov
repz
pop
pop
push
sbb
insb
mov
repnz
aas
pusha
outsb
fldenv
pushf
jge
in
pop
out
pusha
cmp
pusha
cltd
sbb
cmpsb
cli
adc
inc
and
movsl
jmp
out
cmp
loopne
adc
and
les
gs
movsl
mov
shrb
ret
fbstp
out
sbb
test
push
in
sarl
mov
inc
std
stos
push
cltd
std
iret
aam
mov
xchg
xchg
sub
stc
adc
sub
cmp
push
scas
mov
mov
repz
cmp
add
adc
loope
mov
dec
sbb
xchg
push
arpl
lods
mov
pop
pusha
out
inc
sub
mov
push
scas
or
sbb
ss
cld
jno
inc
ljmp
loopne
mov
jg
push
pop
out
push
das
call
mov
imul
repz
sub
repz
mov
jle
push
sbb
sbb
cmp
pop
jle
sub
mov
testb
xchg
xlat
dec
dec
jbe
inc
fnstsw
adc
int3
das
nopl
adcl
rclb
clc
jnp
adc
cmp
xchg
stc
push
xchg
jge
dec
int
sub
xchg
xchg
xchg
fnstenv
fsubrl
pop
popf
outsl
xor
ret
jle
sti
lahf
push
adc
mov
and
test
insl
xchg
and
dec
fwait
and
mov
inc
stos
mov
les
iret
mov
ds
in
or
xchg
sbb
sub
sbb
out
mov
push
mov
add
jp
scas
in
push
mov
xor
in
in
xor
loopne
mov
cmp
xor
pop
outsb
add
mov
jge
jg
add
mov
out
xor
adcl
imul
xchg
jne
loope
xchg
repz
call
xor
ds
scas
movsb
out
add
test
add
jb
ss
in
jmp
inc
ds
out
in
sbb
or
shrl
mov
arpl
and
jns
jae
mov
and
test
push
loopne
mov
scas
jnp
push
ss
mov
hlt
movsl
adc
xchg
out
adcl
push
pop
adc
xchg
adc
pop
leave
lahf
inc
push
flds
sub
push
push
bound
push
mov
loopne
sbb
int
faddp
xor
aam
push
dec
leave
imul
mov
bound
sub
arpl
inc
mov
and
out
jl
test
dec
jle
cmp
jecxz
stc
lds
loope
std
mov
mov
cmpb
aas
fsincos
pop
or
dec
rol
xor
lret
mov
arpl
movsb
cmpb
add
cwtl
pop
mov
push
and
inc
pop
and
add
and
jle
sbb
aaa
fistpll
cmp
xchg
ret
mov
cmpsb
inc
movsl
mov
sbb
rol
ds
push
js
lret
repnz
inc
xor
inc
iret
sub
sub
jge
mov
add
xlat
and
fbld
lods
mov
add
jns
and
mov
inc
test
outsb
in
jle
jnp
or
jmp
adc
rol
add
mov
cwtl
rcrb
dec
stos
test
xchg
sbb
pop
jg
cmpsl
jmp
ja
pop
and
insl
ret
cmp
popa
xor
sub
insb
in
pop
pop
jne
xor
test
xchg
aaa
or
jmp
mov
mov
push
scas
into
movsl
mov
jns
pusha
sbb
mov
and
cmp
jb
sbb
pop
pusha
lret
cmc
sub
push
mov
adc
add
jl
mov
xor
iret
fsincos
clc
add
mov
mov
and
or
sbb
into
xchg
pop
inc
mov
xor
or
mov
imul
push
bound
test
adc
inc
aad
arpl
or
mov
xchg
aad
jge
dec
lret
int
aad
lea
jnp
out
sbb
or
jae
orb
and
les
mov
mov
mov
add
push
shlb
mov
jp
jb
data16
sbb
inc
insl
dec
or
mov
and
push
dec
popa
xchg
jnp
mov
in
sub
loope
jae
out
sub
jb
pop
clc
mov
enter
dec
xlat
clc
sbb
pushf
jo
clc
add
les
das
pushf
es
sbb
cmpsl
cmpsl
into
xchg
loop
sub
fsubr
pop
daa
inc
mov
fistl
and
mov
lock
jb
jb
sbb
cltd
out
fistpl
mov
test
cmp
ss
jno
adc
and
mov
push
ret
lcall
lcall
sub
outsb
lods
xor
sub
mov
out
data16
and
or
sbb
insl
adc
test
hlt
outsl
icebp
mov
xor
enter
out
inc
es
daa
xor
sub
pop
mov
imul
cwtl
jne
movsl
mov
sbb
in
dec
sbb
pop
and
jnp
push
inc
mov
daa
or
mov
fwait
pop
dec
mov
popf
mov
mov
push
inc
inc
and
mov
pop
imul
xchg
xchg
lret
rolb
std
std
mov
ja
mov
fistl
and
in
arpl
outsl
imul
or
scas
stc
jnp
lahf
adc
xchg
pop
or
jg
mov
or
movsl
dec
clc
xchg
pop
jle
cwtl
lret
sbb
mov
add
or
xor
jecxz
scas
add
add
push
sub
int3
lcall
add
cmpsl
mov
ds
jns
xchg
add
jl
dec
sbb
lods
add
imul
out
jbe
fbld
inc
pop
pusha
inc
jle
std
or
sbb
add
divb
stos
addr16
cwtd
scas
shll
cmp
jmp
adc
lret
dec
push
mov
lock
imul
xchg
jnp
mov
dec
daa
fldcw
sbb
out
add
adcl
xchg
loopne
push
mov
popa
mov
fiadds
pop
leave
loope
fsubs
mov
sbb
push
xchg
cmp
xor
sub
fdiv
stos
mov
xor
jl
inc
aam
adc
stos
jmp
mov
lret
fldcw
jne
out
mov
shll
lods
mov
nop
and
push
in
pop
cmpsb
decl
movsb
mov
mov
into
int3
cmp
rcll
and
sbb
mov
dec
xor
inc
pop
xor
and
sahf
jne
je
scas
pop
cmpsb
fisttpll
inc
push
sti
cli
adc
jo
aas
sub
lret
jns
mov
jns
stc
add
mov
xchg
sti
subb
inc
shl
sahf
or
sbb
cmp
push
loopne
jle
xchg
or
and
mov
movsb
jmp
adc
shrl
adcl
stos
push
mov
rcr
xchg
imul
dec
stc
sub
push
test
xor
ljmp
xchg
sbb
pop
adc
xchg
mov
mov
mov
add
mov
dec
dec
sti
test
cs
into
out
xchg
addr16
jle
sub
jae
aad
scas
loop
xor
movsb
outsl
cs
fsts
imul
aaa
jl
js
xor
data16
inc
pop
xchg
ficomps
movsl
out
mov
pop
jae
std
hlt
adc
std
fdiv
out
or
in
jbe
xor
xorb
out
dec
sbb
test
test
pop
inc
push
inc
repz
add
mov
into
adc
pop
movsb
jae
movsl
adc
push
imul
lods
sti
push
cli
xor
dec
mov
add
dec
xlat
inc
ljmp
aam
ja
pop
cmp
aam
add
bnd
dec
cs
mov
pop
lods
nop
add
daa
sub
lods
mov
push
shr
xchg
mov
push
cmc
imull
mov
daa
icebp
std
rcr
push
mov
aas
jnp
cld
scas
sahf
icebp
xorl
xchg
push
adc
or
push
out
xchg
mov
and
in
inc
test
icebp
xor
cltd
fs
insl
iret
sbb
cmp
sbb
cmpb
lahf
cmpl
and
add
out
inc
sub
daa
and
jecxz
iret
mov
out
das
inc
cmpsb
xor
arpl
ror
sti
addb
lahf
cmp
push
xchg
aas
cmp
add
cmpb
xor
ret
or
cmp
lret
pushf
and
jecxz
pop
and
sub
rclb
cmpsl
mov
jo
mov
xchg
xor
mov
out
jns
push
cmp
push
jne
scas
or
popf
jmp
inc
inc
sbb
or
fidivrl
lcall
gs
scas
cli
inc
roll
cmpsl
inc
movsl
push
sub
mov
je
cmp
mov
sub
pop
push
inc
movsb
and
outsl
push
dec
test
sub
dec
mov
xchg
pop
imul
pop
out
test
mov
int
repnz
nop
push
or
mov
cli
cmp
ljmp
cmp
dec
loop
inc
inc
imul
pushf
and
and
push
cmp
sbb
add
pop
outsb
xor
popa
add
ja
lcall
mov
out
cmpsb
sub
stc
jp
mov
popf
aad
push
pop
cmp
aam
xor
dec
ret
mov
sbb
stc
xor
sbb
mov
sbb
inc
out
add
daa
outsl
andl
je
loope
stos
cli
hlt
jne
push
cltd
mov
enter
icebp
add
push
jp
mov
je
mov
adc
aad
ret
shlb
sub
fsubs
inc
daa
jle
xor
pop
push
ja
or
arpl
iret
mov
int
push
fadd
lret
daa
mov
mov
mov
cmp
adc
ret
sbb
dec
arpl
cmp
mov
shrb
adc
outsl
aad
mov
add
mov
mov
dec
mov
cmp
jmp
mov
sahf
imul
xchg
cmp
cmp
push
insb
enter
and
in
ja
into
stos
sbb
mov
pop
decl
jbe
mov
test
subl
mov
dec
xchg
xor
cmpb
repz
shlb
rorb
add
push
push
jae
rcrb
adc
and
iret
mov
inc
fwait
mov
fadds
pop
jmp
pusha
das
int
jno
icebp
scas
sub
pushf
sbb
and
les
fs
aas
adc
sbbl
stos
xchg
inc
dec
sub
inc
adc
je
jno
push
jo
in
das
dec
movsl
jae
pop
in
jns
mov
inc
push
fs
enter
cmpsl
addr16
adc
xchg
mov
mov
fwait
mov
int3
add
push
adc
add
and
movsl
jo
sbb
cs
fmulp
jne
add
rorb
loope
and
mov
sbb
pop
jo
lods
xor
dec
fbstp
scas
mov
cld
sub
and
mov
fwait
stc
xlat
pop
jns
pushf
push
cwtl
frstor
push
stos
mov
cmpl
movd
or
or
jp
outsb
fucomp
rorl
adc
mov
ror
lahf
ficoml
push
mov
mov
incb
loop
in
pop
les
aaa
cwtl
sub
lret
outsb
loopne
iret
enter
lahf
jbe
subl
cmp
fstpl
cmp
xchg
xor
in
cmp
jnp
or
pop
insb
pop
flds
mov
push
inc
xchg
ret
sti
and
das
jl
mov
jb
sbb
cwtl
scas
mov
pushf
leave
fsubrl
mov
adc
cmpsb
imul
repnz
bound
stc
pop
rcr
in
inc
aam
dec
cld
push
stos
push
lret
xchg
lret
js
mov
dec
out
out
int3
sbb
mov
jo
mov
cmp
pushfw
loopne
jb
fs
incb
mov
inc
fimuls
bound
jl
push
pusha
icebp
cmp
in
out
push
cs
cli
and
in
push
lods
mov
xchg
cmp
call
xor
out
fcmovnbe
sub
mov
cmp
jge,pt
xchg
dec
jno
sub
xor
int
int3
xchg
cs
xchg
pop
mov
jo
push
lods
add
jmp
pushf
dec
dec
add
jbe
andb
push
scas
jmp
push
push
push
pop
imul
mov
jno
icebp
ja
adc
pop
dec
inc
lret
mov
mov
push
sbb
sbb
mov
and
sarb
xor
gs
inc
mov
xchg
mov
aas
xor
pop
mov
stc
mov
mov
inc
insl
mov
in
sub
std
fdivs
lods
xchg
sete
and
fisubl
stc
repnz
sub
outsb
mov
hlt
xor
pop
mov
test
mov
iret
sub
mov
pop
or
xor
xchg
mov
fwait
push
push
push
mov
cs
mov
loop
lods
or
xchg
faddl
or
or
lea
pop
lods
mov
lcall
int3
lcall
in
push
push
xor
insl
orl
inc
in
cmp
int3
leave
dec
or
call
inc
idivb
lods
adc
cmc
inc
out
sahf
pushl
je
lock
icebp
cmp
inc
push
gs
pusha
inc
into
lea
cmp
lds
jge
sbb
popl
loop
scas
xchg
push
jecxz
cmpsl
mov
push
mov
or
cwtl
in
add
pop
mov
lea
or
gs
lods
mov
push
stos
pop
mov
cmp
cld
aad
dec
data16
mov
pop
push
ret
lods
inc
fwait
dec
out
mov
mov
addl
jae
sub
andl
outsl
adc
sub
pusha
into
cmp
js
jmp
pop
or
push
sahf
cmpsb
adc
insl
mov
cld
scas
mov
sbb
jle
lea
in
orb
pop
sub
mov
out
sbb
std
cmp
enter
or
or
mov
in
cmp
flds
outsl
fldl
aaa
lret
sti
jb
int3
and
mov
and
xchg
cmp
outsb
dec
inc
nop
test
lock
push
popf
fstp
ret
inc
mov
push
mov
popa
jbe
sbb
adc
test
ds
outsb
outsb
push
stos
pushf
int
inc
cmp
xchg
out
daa
or
push
out
imul
movsl
pop
mov
jbe
loop
mov
scas
lahf
add
mov
hlt
dec
lahf
ret
xchg
sub
iret
dec
aam
jecxz
aaa
stc
sbb
mov
jno
pop
test
pop
xchg
xchg
push
ds
aam
inc
out
cwtl
out
clc
pop
imul
mov
cmp
stos
jbe
xchg
dec
inc
cmp
xchg
inc
mov
or
jo
lock
andb
adc
nop
sarb
rol
inc
inc
and
in
add
dec
add
lret
or
jae
mov
pop
mov
push
mov
ja
cltd
cmp
jb
lea
add
adc
mov
xor
jb
lods
cld
inc
lock
dec
popa
outsb
cmp
sub
sarb
iret
pop
imul
enter
mov
sbb
daa
dec
outsb
push
jle
das
xor
jae
roll
push
inc
push
mov
and
pop
fstp
roll
fwait
in
mov
pusha
mov
icebp
cmpsl
out
sub
add
sahf
int
in
fdivs
sbb
cmp
jo
mul
sarl
or
mov
cmp
test
or
lahf
adc
xor
cmpb
mov
jmp
sbb
dec
mov
adc
mov
adc
loop
adc
ret
mov
popf
add
loop
fimull
add
out
mov
mov
daa
dec
push
push
shlb
rcll
dec
in
adc
adc
and
sar
xor
pop
push
mov
lret
pop
call
popa
xor
push
mov
paddsw
or
jp
jns
cltd
cld
pop
xchg
leave
pusha
icebp
fistpl
and
lcall
bound
mov
pop
ds
push
jp
jbe
jge
insl
ja
test
clc
cli
xchg
arpl
cmc
cmp
imul
imul
pop
in
ret
adc
adc
in
push
icebp
mov
sbb
or
push
in
outsb
or
sub
mov
push
and
or
popf
xor
cmp
or
cmc
add
xor
ljmp
or
push
push
dec
sbb
lret
loop
fwait
xchg
dec
xchg
adc
fldcw
adc
lds
bound
jb
rcl
adc
jno
fstpt
fdivrp
xor
scas
addl
dec
loopne
dec
fdivrs
jle
into
push
push
jo
mov
sbb
inc
inc
push
mov
ret
dec
adc
lret
pop
xor
rclb
inc
pop
add
rolb
jmp
mov
mov
add
outsl
push
sub
test
std
repnz
das
dec
test
fnstcw
and
es
notl
mov
sbb
inc
adc
js
xchg
jb
xor
mov
dec
movsl
frstor
mov
in
xor
out
es
jg
jl
jg
add
sbb
dec
outsb
cli
lcall
xchg
mov
dec
inc
xchg
jle
sbb
pop
aaa
fstp
ljmp
flds
sti
sbb
sbb
push
std
lods
sbb
adc
jge
inc
sbb
lock
repz
and
cld
cld
mov
mov
out
xchg
mov
sbb
xor
push
rcrl
xchg
sub
xchg
shlb
sub
sub
arpl
data16
lods
lahf
loop
fdivrp
add
mov
adc
xlat
in
fnstenv
fidivrl
xchg
cmp
gs
ja
mov
cltd
jne
pop
outsl
nop
adc
sub
and
cmp
add
scas
scas
push
cmpl
inc
outsl
in
ss
lret
sbb
push
movsb
inc
popa
stos
cmpsb
insb
or
inc
ljmp
lea
xchg
sub
mov
in
ret
mov
pop
and
pop
jnp
mov
xchg
in
cmpsl
daa
sbb
xchg
ret
xor
add
jo
js
pop
pop
into
les
inc
lea
add
jb
cltd
or
xchg
cltd
xchg
cli
daa
inc
dec
into
out
cmpb
sbb
jbe
cmp
fstpt
mov
ljmp
xchg
jl
inc
or
inc
pop
jmp
loopne
jg
lcall
mov
or
iret
push
and
ss
adc
ss
pop
mov
imul
daa
in
cmp
sbb
je
rcll
inc
mov
push
cmc
jle
cmpsl
std
xor
mov
jl
sbb
inc
fcmovnb
jno
aas
push
lods
lret
into
pop
pushf
mov
xor
shlb
fiaddl
hlt
pop
or
in
cld
nop
push
stc
out
and
dec
cmp
in
dec
jnp
jbe
xchg
mov
jp
sub
les
and
sub
outsl
xor
jmp
jmp
ljmp
or
scas
inc
sbb
popl
ficoml
add
jns
mov
aam
lret
lods
insl
loop
mov
iret
add
add
test
pop
incl
push
mov
mov
lods
or
and
insb
dec
es
jge
jp
fmull
adc
nop
mov
aas
sub
fwait
test
add
cmp
mov
sbb
or
cmp
pusha
jmp
adc
ret
xor
cmp
jmp
cmp
sub
and
sbb
mov
push
lret
scas
pop
inc
sub
clc
insb
nop
in
fisubl
das
bound
pop
jp
add
lock
mov
mov
sub
and
xchg
and
mov
mov
mov
adc
mov
sbb
arpl
jmp
add
int3
inc
dec
outsl
dec
les
shll
bound
push
mov
lods
leave
and
sbb
mov
xchg
sub
test
sub
and
nop
sub
push
xchg
aas
add
bound
ss
sbb
mov
push
dec
sbb
clc
push
cmpb
push
mov
dec
in
fdivs
in
enter
pushf
xchg
push
cmpsl
clc
das
pop
xchg
stos
ficoml
aas
lcall
mov
dec
sub
andb
in
out
les
xchg
loop
or
jmp
test
lcall
adcb
cmp
je
cs
cwtl
rolb
test
push
iret
xchg
push
mov
mov
jg
jbe
iret
cmp
scas
fs
sahf
out
or
sub
xchg
cmp
push
movsb
mov
sub
daa
mov
jb
ret
sub
enter
cli
in
into
in
mov
outsb
push
test
push
push
adc
es
add
div
mov
inc
outsb
inc
mov
sub
sbb
adc
pop
sub
ja
jg
std
and
adc
lahf
adc
aas
sahf
lea
dec
lret
ficoms
dec
dec
stc
jnp
fldl
sbb
sub
insb
cmp
std
ds
pop
mov
in
mov
adc
ret
lcall
mov
outsb
in
add
push
ljmp
fildl
add
and
dec
mov
inc
fdivl
fcmovne
add
jnp
push
sub
cwtl
or
fidivl
xlat
scas
insb
and
in
fcmovbe
aad
sub
pop
add
and
shr
ss
mov
xchg
mov
insb
xor
xchg
insb
lea
aas
mov
mov
and
mov
pop
fsubr
sbb
mov
and
push
test
subb
das
add
loop
jnp
jecxz
jecxz
hlt
or
jnp
mov
arpl
test
lret
cmp
mov
rorl
movsb
dec
mov
cld
sbb
xor
test
out
sbb
movsl
jge
push
invd
or
and
insl
imul
cwtl
rorl
leave
in
and
add
adcb
int3
jno
lock
mov
xchg
or
loope
pop
mov
inc
jno
les
xchg
mov
sbb
add
insb
ljmp
loope
test
mov
jae
in
lahf
xchg
in
ret
jae
push
imul
shlb
and
popa
sbb
and
lret
jmp
dec
fs
mov
cli
dec
hlt
lods
push
scas
push
fldt
dec
sbb
ret
fstp
ja
mov
mov
mov
xchg
inc
jecxz
popf
cmp
iret
mov
insl
cmc
mov
ret
outsl
cmp
ja
dec
les
xchg
xchg
nop
jg
roll
scas
inc
push
inc
pusha
test
mov
sbb
mov
mov
mov
movl
test
xchg
or
xchg
jecxz
jecxz
leave
xor
push
or
popfw
in
xchg
xor
mov
cmp
xchg
push
xor
cmp
sub
cmp
inc
push
call
ja
or
jb
xchg
cmp
lods
and
xchg
in
aad
fistps
and
and
iret
xor
pop
xor
xlat
stc
xor
xchg
dec
shll
in
pushf
faddl
lea
pop
mov
jg
dec
mov
and
pop
test
xchg
mov
faddl
test
fcomp
lods
rorl
cs
fs
insb
jecxz
xor
js
orl
mov
add
out
xchg
fisubrl
and
pop
jg
mov
jnp,pn
imul
mov
cmp
aaa
ljmp
push
mov
outsb
stos
std
add
cmpsb
inc
aas
shll
aam
sub
jecxz
gs
aad
inc
cwtl
push
test
lea
jmp
xlat
or
cmpsb
pushf
mov
scas
int
mov
or
adc
xchg
inc
jp
int3
cmpsb
push
icebp
jno
stos
dec
cmp
mov
jmp
cmp
mov
mov
in
xchg
sub
icebp
mov
rorb
xchg
mov
pop
icebp
hlt
xchg
mov
cmpsl
dec
in
aaa
movsb
add
aaa
in
adc
data16
add
push
inc
and
jp
sarl
int
sets
jmp
out
int3
or
iret
jae
daa
mov
and
mov
sub
adc
and
int
mov
clc
stos
out
pushw
or
test
cmp
xchg
imul
mov
push
inc
or
lea
dec
adc
xchg
movsb
les
rcl
mov
mov
and
aad
aam
mov
enter
movsl
daa
sbb
imul
mov
scas
lods
or
dec
push
aam
push
aaa
pop
ret
push
dec
mov
sub
cmp
pusha
dec
mov
fwait
jne
shll
rcrl
outsl
repnz
push
sbb
ja
jb
stos
mov
cld
lcall
repz
and
add
mov
push
adc
xorb
fucomip
cmp
aam
test
mov
arpl
mov
das
jns
pop
aam
jns
or
mov
shr
rcrl
orb
ljmp
test
paddb
jg
mov
ds
xchg
movsl
dec
inc
pop
pop
mov
jle
cmp
roll
dec
addl
cmp
in
push
pop
ja
inc
inc
fdivr
jns
pop
jne
sbb
and
inc
dec
jmp
popf
jo
push
jnp
sti
adc
and
imul
jbe
jge
mov
out
adc
sbb
leave
mov
lret
popa
push
imul
icebp
mov
enter
loop
add
push
mov
mov
stos
pusha
sub
push
cmp
mov
inc
cmp
push
adc
adc
inc
inc
test
jl
sub
stos
lahf
lret
jecxz
or
dec
jbe
test
in
push
sbb
push
frstor
dec
dec
lret
xchg
jp
lds
iret
pop
cmpsb
jmp
mov
shll
mov
push
mov
in
pop
ret
adc
lahf
fcmovnu
xchg
adcb
mov
enter
dec
stos
stos
arpl
lds
hlt
xlat
out
xlat
insb
dec
add
and
xchg
fs
dec
xchg
popf
xchg
fwait
negb
stos
test
or
jp
in
out
xchg
dec
testb
jae
mov
sub
sbb
mov
test
mov
push
sbb
mov
outsb
std
bswap
add
ret
dec
mov
inc
mov
add
pop
mov
dec
jmp
jge
test
jns
int3
aas
jbe
mov
sbb
leave
std
jnp
mov
mov
push
sub
stc
testb
ret
jmp
mov
fs
int
mov
test
cmp
mov
sub
mov
icebp
lret
std
dec
rclb
sbb
lock
mov
fs
add
fdivrp
shr
mov
filds
dec
or
mov
les
aad
out
dec
hlt
push
push
in
mov
fdivp
mov
fidivs
out
push
cmpl
sbb
mov
mov
xchg
in
xor
inc
push
popf
fsubrl
push
mov
dec
xor
lret
cli
cs
pop
xchg
cmpsb
dec
jne
mov
or
lds
aas
push
and
pop
rorb
inc
cwtl
lods
shll
fadds
js
enter
inc
jnp
test
xor
aam
lods
wrmsr
add
fdivrp
mov
lret
pop
lea
imul
imul
jle
inc
aam
fildll
push
rcrl
pop
ficoms
cltd
add
xchg
es
cmpsb
and
mov
jae
cmc
lahf
mov
ret
and
jns
mov
outsb
fists
push
xchg
jb,pn
sbb
outsl
popa
inc
pop
and
ljmp
cmpsl
into
push
sbb
xchg
cmc
mov
fidivl
stos
rcrl
jae
xlat
xchg
inc
sub
cld
push
xorb
pusha
loopne
jecxz
dec
push
inc
and
dec
push
je
inc
mov
imul
pop
pushf
sbb
inc
inc
icebp
dec
scas
popa
testl
mov
idivl
jno
jb
bound
and
mov
das
jp
jl
xor
lds
outsb
push
clc
xchg
fs
jl
mov
les
icebp
mov
sbb
scas
inc
enter
and
jo
pop
dec
fldt
es
shr
repnz
jo
add
inc
gs
sti
add
mov
ja
sarl
adc
mov
enter
mov
leave
stos
push
lret
mov
pop
cmp
popa
jp
mov
rcl
push
add
lcall
push
xor
popa
aas
sub
jecxz
jle
lret
xlat
call
inc
ds
std
and
xchg
jge
jmp
imul
aas
pushf
add
sbb
test
sbb
ret
mov
test
jne
in
popa
sbb
push
in
xchg
and
adc
pushf
mov
push
add
negl
push
in
xor
inc
push
cwtl
push
and
push
sbb
call
xor
adc
ja
icebp
in
sbb
jge
mov
push
imul
das
pop
push
cmp
jnp
clc
adc
rorl
adc
or
insl
cmc
push
ljmp
xorb
fs
pop
adc
enter
movsl
sbb
pop
jb
xorl
mov
lods
jmp
sub
in
jp
cmc
dec
add
pop
lahf
loope
aad
les
xchg
inc
or
xor
fstpl
adc
imul
cmp
data16
popa
inc
jno
sbb
add
mov
repnz
fdivrl
aas
sbb
leave
sbb
xchg
or
xor
mov
mov
lea
xchg
vandnps
insb
rcl
adc
clc
sub
push
inc
lcall
mov
sub
loope
add
mov
int
outsl
hlt
loop
enter
shrl
sbb
stos
sbb
loope
sbb
ja
or
fstps
inc
repz
lret
cmpsl
call
dec
mov
fneni(8087
cmpsb
stos
mov
jo
andl
push
xor
mov
enter
int3
xchg
add
les
movsb
jecxz
out
dec
jno
sub
dec
lods
inc
adc
flds
aad
dec
sbb
xor
sbb
pop
sbb
in
pop
inc
xchg
scas
faddl
and
and
test
jnp
aaa
test
hlt
jbe
out
pop
mov
cmc
jl
dec
shlb
in
and
idivb
add
cmpsb
icebp
mov
or
testb
sbb
inc
cmpsb
insl
jnp
jnp
dec
cwtl
pop
dec
mov
sub
cmpsb
push
aas
sub
pop
jmp
mov
fildl
ret
data16
imul
aas
outsl
hlt
out
push
dec
cmp
insl
fimuls
mov
out
mov
insb
lahf
push
int3
shl
gs
or
push
std
xchg
inc
mov
je
jge
ret
aad
jle
push
inc
push
cmp
outsb
sub
cld
shll
daa
push
mov
mov
sbb
sub
std
popf
sub
push
das
cmp
in
outsl
pop
stos
pop
lret
sub
sub
xchg
adc
mov
sbb
dec
mov
dec
dec
sub
jmp
out
add
rcll
sbb
sub
daa
adc
mov
lds
or
imul
pop
cmpsl
arpl
in
les
loope
xor
dec
dec
mov
lods
pop
lret
and
cmp
jne
dec
dec
mov
xlat
jp
mov
sbb
fbstp
adc
stos
out
sbb
jg
xor
test
scas
cmc
out
push
idivb
data16
xor
movsl
dec
dec
mov
pop
jno
aaa
sub
mov
andl
js
adc
xchg
jns
lahf
xchg
stos
cmp
xchg
cmpsl
repz
stc
test
out
and
dec
lods
test
push
in
xchg
pop
dec
divb
sti
xchg
addr16
daa
and
stos
cmp
shr
movsb
shr
popa
xchg
xorl
js
dec
jl
pop
mov
fs
xchg
adc
xor
sbb
lock
cmp
stos
sbb
lret
pop
popl
daa
mov
mov
stc
push
mov
stos
lods
jl
ds
std
push
mov
jne
fistl
push
or
dec
lret
push
int
mov
cmp
mov
out
xchg
fbld
andl
mov
adc
cmc
push
ffree
push
or
leave
push
or
data16
push
push
push
sbb
jb
shlb
sbb
lods
pop
adc
faddl
cmp
xchg
sbb
ja
fwait
mov
adc
mov
icebp
sub
cwtl
mov
jo
movsb
pusha
cmc
pushf
bound
cmp
xorl
popa
insb
subb
or
clc
sahf
xchg
es
and
cltd
push
jge
xor
aad
mov
testl
fdivs
mov
jne
sbbb
xchg
scas
inc
inc
lahf
inc
dec
xchg
sahf
pop
sahf
xchg
aaa
add
lret
rcll
or
and
subb
xor
sbb
or
out
bound
mov
daa
out
pop
push
jecxz
xchg
mov
cmpb
gs
dec
clc
lea
sbb
arpl
insl
adc
add
outsl
pop
sbb
and
adc
adc
add
lods
ja
mov
sbb
outsl
in
push
pop
push
loop
lea
mov
add
dec
das
cmpsl
bound
cmc
aam
imul
jle
ret
xor
sarl
js
test
or
insb
jo
mov
movsb
es
cld
mov
clc
push
out
rcrl
jmp
xor
lods
mov
jmp
inc
sbb
das
fwait
stos
das
or
cmp
mov
dec
test
mov
or
cs
cmp
es
xor
mov
rcl
inc
test
cwtl
ret
adc
jge
mov
sahf
sbb
cli
inc
or
jns
add
add
fcmovnu
sahf
xor
mov
inc
cmp
cli
shlb
loope
mov
in
xchg
jno
adc
leave
pop
sub
jne
adc
cmpsb
rcrb
mov
enter
sbb
and
fidivs
push
stc
imul
push
xchg
sbb
stos
popa
subl
dec
add
jnp
cmpb
je
lock
movsl
in
cld
xchg
cmp
shl
push
loop
ljmp
nop
mov
std
sarb
sbb
inc
cmpsb
and
or
inc
sub
in
mov
dec
adcl
int3
push
cli
out
into
in
fcmovne
push
outsl
xor
cltd
js
loopne
and
pop
js
je
xchg
pushf
fmuls
jne
mov
pop
and
jl
inc
mov
lock
iret
push
shlb
mov
push
fs
add
imul
xor
and
push
loopne
or
inc
fwait
add
inc
mov
add
xchg
inc
xor
fstps
imul
inc
push
jnp
xchg
pop
rcrl
jmp
stc
inc
stc
sahf
mov
sbb
mov
push
sbb
xor
jns
mov
cmp
pop
pop
cli
aad
push
pop
into
dec
insb
mov
dec
dec
mov
lret
lods
fwait
xor
arpl
lahf
mov
sbb
jns
mov
insl
push
cmpsb
xchg
pop
inc
add
fucom
mov
xor
addr16
outsl
mov
or
cmpsb
cmp
or
out
adc
mov
movsb
jno
mov
inc
mov
ficompl
cmp
sub
jp
loope
sub
shlb
cmp
xchg
aas
xor
jno
daa
pop
sbb
xchg
mov
inc
arpl
fwait
jle
jg
push
jmp
hlt
push
or
ja
rcr
xor
jge
mov
iret
inc
dec
arpl
push
mov
fld
mov
das
test
cmpl
movsb
inc
mov
pop
inc
shlb
xor
into
clc
in
sub
mov
es
leave
push
push
sbb
int
ret
xor
mov
adc
rcrb
xchg
test
lea
sbb
push
lods
xor
pop
cmp
or
subl
jmp
and
or
mov
dec
push
ja
sti
mov
sbb
sahf
or
and
dec
fiaddl
lret
sbb
inc
xchg
jb
xorb
dec
sub
lock
cmp
addr16
push
stc
into
jbe
insb
bound
test
inc
jns
or
sbbl
sub
pop
lcall
inc
xchg
cs
push
outsl
sub
repnz
and
insb
add
bound
cmp
addr16
and
push
into
xchg
fildl
xchg
mov
imul
mov
add
pop
pop
mov
and
bnd
bound
pop
fstpt
sbb
xor
popf
lret
ficomps
int
lcall
ss
or
adc
aad
adc
mov
sbb
sti
mov
jno
and
sub
insl
sbb
dec
inc
hlt
mov
cli
pop
jge
les
jg
cmp
pop
jbe
xor
cltd
incl
and
xor
cld
xlat
sbb
ret
outsl
fisubrl
loopne
mov
mov
sbb
mov
sub
insb
bnd
outsb
cmpl
xchg
mov
adc
and
pop
pop
cmpsl
addr16
xor
xor
test
mov
in
leave
add
movsl
filds
push
pusha
inc
xor
mov
popa
add
jne
sbb
scas
pop
cmpsb
das
mov
pop
xchg
in
imul
mov
out
mov
sbb
fistl
jbe
cwtl
jecxz
cmc
js
flds
jl
js
mov
mov
push
inc
sbb
in
lods
add
aaa
sbb
add
adc
imul
outsl
xchg
cmc
xor
sub
pop
mov
xor
sbb
xchg
and
jmp
dec
les
push
fdivp
mov
out
push
jo
adc
stos
clc
mov
or
inc
xor
dec
fisttpl
rcrl
mov
cmpsl
sbb
xor
ljmp
xor
push
xor
or
pop
push
mov
xor
inc
pop
insb
subl
idivl
xchg
mov
rcll
nopl
jae
pop
outsb
lds
out
out
mov
cmpsb
jmp
xor
and
subb
jns
pop
pop
push
pop
lret
int
idivl
fidivrs
cmp
out
pop
mov
mov
das
cmp
cli
hlt
repnz
pop
xor
pop
lahf
mulb
stc
pusha
ljmp
lea
add
les
jns
mov
jmp
loopne
add
mov
mov
xorl
adc
jecxz
jge
in
dec
aam
push
in
imul
push
inc
cli
je
jo
cmpsb
ret
xchg
fiaddl
mov
out
mov
mov
mov
inc
pop
and
in
dec
mov
xor
push
pop
jecxz
lods
add
mov
subb
pop
or
mov
push
movsb
out
sti
jnp
mov
insl
jp
fs
mov
sbb
addb
pushf
imul
aas
jp
out
inc
dec
cltd
push
fcoms
jo
mov
int
xchg
pop
lcall
sbb
inc
mov
pop
int
nop
and
mov
outsb
pop
aaa
int3
popa
icebp
insl
icebp
jnp
xor
pop
push
aaa
in
xchg
loop
sbb
repz
adc
addr16
or
jle
inc
mov
xchg
outsb
xor
loop
or
sub
ds
pop
xchg
rcrb
pop
popa
push
sbb
fwait
movsl
or
faddl
inc
jo
lods
pcmpeqb
mov
movsb
jecxz
mov
nop
test
sub
xchg
test
xchg
ljmp
ret
mov
btr
xchg
or
sar
cmp
das
mov
sti
in
aas
stc
add
xchg
cmp
sub
lods
subb
inc
add
addl
push
add
je
cmp
pop
sti
dec
call
js
jmp
push
mov
je
and
mov
mov
cmp
mov
ret
adc
cld
pop
ja
rcl
xor
mov
movsb
js
movntq
out
pop
inc
dec
sbb
decl
mov
mov
mov
sbb
xchg
pop
xchg
loope
loope
push
lea
fdivrl
pop
sti
sti
sbb
mov
test
jno
sbb
sub
insb
rcll
scas
xchg
mov
icebp
add
data16
xchg
xchg
ss
sbb
cs
push
jg
adc
fidivs
inc
push
les
pop
add
dec
pop
push
adc
sarb
cwtl
jecxz
adc
test
cld
sbb
loope
push
fildl
push
or
gs
icebp
ss
into
jns
popa
jae
test
dec
adc
inc
sub
pusha
daa
xor
lcall
mov
inc
mov
sahf
loop
iret
xchg
dec
dec
jne,pn
mov
inc
mov
outsl
add
lods
inc
and
imul
mov
mov
lret
cmp
andl
xchg
jle
xchg
xor
rcrb
jno
cmp
ret
and
fsubs
in
arpl
test
jns
pop
sub
add
call
jle
mov
mov
adc
shlb
cmpb
mov
mov
mov
cmp
sarb
shlb
push
lock
push
mov
inc
jne
insb
cmpsb
xchg
lret
jl
inc
in
pop
jecxz
adc
xor
incb
jmp
or
loope
and
dec
out
or
cld
movsl
mov
mov
mov
dec
dec
add
cmp
xchg
xorl
popa
aaa
add
sbb
daa
jecxz
aaa
fistl
add
aam
je
js
pop
imul
pop
out
jne
popa
jbe
inc
mov
ljmp
mov
mov
mov
push
test
pop
sub
jne
dec
adc
jmp
adc
out
sub
sbb
push
dec
xor
in
mov
inc
mov
jns
xor
push
inc
mov
or
xor
test
lods
pop
pusha
mov
hlt
stos
mov
pop
imul
push
push
cltd
mov
xor
xchg
neg
mov
cmp
enter
cmc
dec
inc
pop
xlat
ds
les
mov
shrl
lock
cmp
sbb
rcrb
setge
sbb
jnp,pn
aas
dec
xchg
or
adcb
mov
sbb
int3
or
push
aas
mov
and
pop
fidivrl
xor
je
sub
dec
xchg
stos
in
xchg
movsl
outsb
mov
clc
sub
in
pop
jns
leave
and
mov
xchg
push
ss
sub
orl
add
in
sbb
pop
lahf
daa
sahf
ret
das
dec
mov
xor
sbb
sbb
pop
rolb
in
push
fwait
cmp
xor
pop
cmp
adc
cmp
jae
mov
sbb
test
fcomp
fildll
bound
mov
inc
and
nop
mov
mov
sti
sub
mov
lret
xor
sbb
jnp
or
push
popa
test
cmp
inc
hlt
adc
addr16
inc
scas
pop
jl
jmp
jmp
sbb
js
and
fildll
dec
xchg
aas
in
das
cmpsb
gs
call
mov
or
mov
nop
push
dec
or
arpl
push
arpl
scas
jb
shl
scas
or
mov
jg
push
lahf
hlt
inc
adc
jecxz
sbb
pop
xchg
sub
cmp
and
cltd
jp
jno
add
int3
loope
mov
fnstsw
mov
dec
xchg
call
fs
add
push
sub
rorl
and
mov
fs
mov
incl
int
fidivrs
push
dec
jb
xchg
sbb
push
or
dec
push
cld
fcmovne
mov
mov
sbb
lds
popf
orl
cltd
imul
adc
daa
sub
test
imul
mov
xor
fidivrs
mov
xor
mov
jbe
std
push
sbb
in
lods
mov
cli
leave
xor
iret
dec
xor
dec
test
mov
imul
xchg
cli
out
out
lea
pushf
andb
shrl
out
push
lock
cmpsb
out
mov
mov
movsb
cwtl
pop
jnp
dec
and
fsubrl
popf
fadds
cld
pop
int
es
inc
mov
cmp
push
mov
pushf
jecxz
pop
xlat
pop
clc
lods
dec
add
jnp
jmp
popa
push
cmp
lcall
scas
out
mov
jbe
call
mov
jle
pop
push
jns
jg
les
sub
in
aas
and
jg
mov
aad
pusha
inc
push
pusha
and
sub
and
clc
sub
push
or
jp
pop
movsb
and
push
and
and
or
dec
xchg
ficompl
dec
pop
push
xchg
sbb
inc
test
mov
mov
mov
pop
cmpb
test
popa
xchg
push
push
cld
push
mov
shl
or
adc
pusha
call
jns
mov
adc
int3
xor
jo
mov
outsl
inc
std
lods
std
in
jge
lret
mov
movsl
push
mov
inc
sbb
scas
nop
cmp
sub
mov
in
add
xchg
mov
pop
add
ja
ret
mov
pop
xchg
loopne
sub
fistpll
xchg
ljmp
mov
jo
push
clc
cmp
xor
sub
jmp
ret
lret
xor
adc
adc
aas
les
lret
les
adc
push
ljmp
push
call
loop
push
outsb
popa
mov
cmp
lcall
aad
push
test
loope
jge
sub
mov
outsl
insl
jmp
adc
rcrl
mov
cmpsl
shrl
xchg
push
or
shrb
jg
sar
inc
sub
leave
es
dec
jae
add
nop
cs
test
add
sbb
ret
dec
jno
inc
or
mov
in
movb
rolb
jp
cmpsb
inc
ja
in
sar
mov
add
or
sbb
fidivs
rcrl
jl
arpl
ds
into
jl
push
sbb
daa
pop
or
push
in
test
out
leave
push
xor
jmp
mov
jl
add
jp
movsb
daa
mov
imul
dec
sub
jp
mov
movsb
comiss
sbb
je
cs
js
in
mov
stos
test
xor
jae
mov
out
xchg
out
ja
test
xor
fildl
mov
iret
rcll
jo
pop
nop
pop
fsubrs
ret
pop
xchg
mov
arpl
cmp
dec
pop
inc
xor
xor
xchg
mov
inc
lahf
push
cmc
cmpsl
and
jg
add
xchg
jg
adc
push
push
and
test
lock
adc
mov
sbb
pop
stc
aad
enter
jmp
inc
cltd
mulps
sahf
pusha
ljmp
mov
xchg
jle
cmpsl
subb
popf
mov
test
adc
lcall
lahf
repnz
sub
jae
inc
mov
xchg
add
push
sbbl
mov
fimull
inc
fcoms
jae
xor
lds
xchg
xlat
mov
dec
ffreep
push
or
nop
xchg
push
jle
fmull
cmpsl
xlat
push
addr16
scas
xchg
mov
sub
sbb
cwtl
sbb
push
sub
mov
cmpsl
insb
pop
sbb
movsb
jge
pop
cmpsb
mov
movsb
incb
cmp
jmp
jno
inc
jbe
xor
mov
into
cli
das
cld
mov
cltd
bound
pop
mov
pusha
and
inc
js
and
pop
daa
loope
sahf
sub
stos
sub
aas
inc
std
cmp
pop
cmp
mov
pop
jo
xchg
xorl
add
fwait
jge
jl
add
jecxz
pop
sti
les
into
push
mov
into
dec
pop
pop
or
inc
inc
aas
loope
lods
leave
jmp
aam
stc
rcll
mov
jno
imul
cmpsb
mov
insb
sub
bound
adc
aam
cmp
inc
loope
arpl
js
pop
xchg
je
and
cmpb
int3
mov
adc
mov
fucomip
in
sbb
dec
push
fidivrl
or
scas
ljmp
jno
mov
aaa
adc
sub
jne
imul
sbb
outsb
es
adc
dec
dec
loop
inc
add
push
sub
mov
in
mov
add
mov
push
arpl
cmpsl
mov
leave
addr16
leave
xchg
rdtsc
bnd
mov
lret
ror
repz
xlat
out
inc
add
mov
xchg
inc
mov
popf
aad
cli
push
and
inc
cmp
lret
rcl
pusha
ror
mov
popa
imul
aaa
test
pop
stc
fldt
pop
and
call
xchg
dec
and
adc
push
aas
ror
cmp
popf
out
cmc
imul
dec
test
inc
int
jne
jmp
xor
gs
orl
lret
test
ds
sti
jl
push
stos
cmc
add
cmpsb
pop
mov
and
insb
popf
subl
and
xchg
mov
add
imul
or
mov
rolb
xchg
divl
mov
daa
rcrl
or
push
imul
mov
pop
enter
mov
dec
ret
xchg
jb
das
in
sahf
dec
mov
pushf
pusha
jbe
enter
outsl
pop
mov
rol
and
pop
enter
cmpl
fiadds
push
mov
adc
jae
push
pop
pminub
int3
sbb
pop
push
pop
and
sub
test
mov
add
push
xchg
mov
shll
sahf
mov
mov
lods
outsb
test
pop
insb
fisttpll
ja
cmp
mov
pop
jae
xchg
nop
pop
les
inc
xchg
inc
mov
mov
or
jae
mov
or
and
out
pop
repz
mov
pop
inc
xchg
sub
dec
in
loope
xchg
xor
lea
mov
jne
stos
xlat
loopne
push
fwait
imul
or
bound
xchg
dec
ja
shlb
int3
adc
cmp
pushf
cmp
jns
dec
or
pop
add
fstps
outsl
out
stos
push
cpuid
test
les
mov
mov
jle
xor
inc
es
xchg
out
push
adc
mov
bound
fimuls
mov
mov
gs
or
addr16
add
mov
test
imul
jg
pop
mov
mov
cs
or
movsl
inc
inc
inc
jl
xchg
push
fstl
jno
mov
daa
push
mov
andb
pop
bound
pop
xor
add
or
inc
shl
lea
jb
cmp
pop
cwtl
pop
lahf
jmp
sarl
add
mov
dec
xchg
mov
cmc
adc
push
pop
pop
push
xchg
scas
cmp
sti
rol
sub
push
push
sub
lods
leave
fcomip
lods
int3
mov
or
jne
mov
mov
jge
mov
cs
or
mov
xorl
mov
mov
xchg
int
iret
mov
add
add
sbb
push
cmp
jnp
lahf
rcll
movsl
sbb
lds
cs
add
or
xchg
add
xor
pushf
adcb
mov
nop
enter
mov
or
jmp
daa
push
add
cli
jae
sbb
icebp
out
and
cmp
or
rol
dec
test
xor
pop
repnz
xor
scas
or
repnz
inc
inc
mov
nop
sub
outsl
cs
mov
xchg
loope
mov
bnd
xchg
dec
das
insl
mov
sub
ret
in
sbb
or
stc
mov
fwait
gs
test
ja
jnp
xlat
cmp
mov
sti
fldcw
ja
lock
mov
dec
imul
clc
push
iret
dec
adc
mov
cmp
clc
hlt
push
daa
xchg
pop
fyl2x
push
outsl
mov
pop
pushf
bnd
cli
xchg
add
sbb
in
stos
pop
rolb
jno
mov
int3
and
add
jg
jge
testb
cmc
outsb
dec
dec
push
pop
or
sbb
sbb
inc
adc
les
mov
sarb
dec
cs
repz
add
lret
xor
mov
mov
movsl
push
cmp
arpl
jmp
pushf
je
fdivp
cwtl
daa
adc
sahf
adc
jg
jno
dec
mov
sbb
dec
enter
sbb
inc
cmc
dec
vpavgw
call
dec
cli
lcall
dec
outsb
cli
shrb
pusha
in
adc
cmp
xor
push
pop
mov
jle
xchg
imul
inc
shrb
add
inc
inc
insl
and
push
ret
stos
adc
mov
rcl
sub
cltd
xchg
lds
inc
xor
sti
mov
sbb
mov
push
sbbb
or
adc
call
test
je
inc
xchg
sub
test
sbb
dec
push
fsubrl
loope
data16
cmp
leave
insl
mov
mov
dec
fst
cwtl
pop
stc
sub
nop
cmpsl
leave
scas
or
movsb
dec
movsl
sub
clc
addb
add
dec
or
cmp
xlat
ja
dec
adc
shlb
add
mov
fidivl
push
sbb
inc
sbb
faddp
out
rol
stc
aas
mul
add
sbb
data16
mov
test
ja
cmp
cmc
lds
lea
lea
dec
adc
cmc
inc
mov
or
mov
push
jmp
aas
push
or
sbb
sub
jp
sahf
mov
pop
clc
pushf
aas
push
jbe
icebp
test
mov
sub
xchg
fnsave
data16
xor
pop
outsl
jle
sbb
or
pop
push
push
and
cmp
jl
mov
shr
movsb
cmp
out
mov
inc
sub
aaa
xchg
aad
jo
outsb
jle
mov
cmp
add
in
vpcmpgtw
push
fidivrl
mov
xchg
pop
inc
jecxz
jbe
lcall
jb
xor
lods
mov
enter
and
call
iret
jno
pop
cmpsl
xor
fcoms
dec
pusha
fldcw
fisttps
fstpt
aad
mov
or
rcl
xchg
xor
mov
pushf
repz
dec
loope
gs
in
repz
scas
subl
cmp
sub
mov
rcr
xor
in
add
xchg
mov
pop
lea
subl
add
js
jle
pop
aaa
mov
popf
popl
fdivl
loop
mov
pop
add
push
inc
or
and
push
in
adc
out
or
pusha
rorl
pop
arpl
mov
adc
popa
fists
cmc
iret
cmpsl
mov
imull
pop
add
loop
stos
xchg
add
xchg
pop
xchg
addb
dec
aaa
popf
repnz
push
lret
inc
sbb
aam
mov
les
or
jo
fucomp
mov
stc
and
lods
pop
push
cmp
or
fsubs
adc
mov
sbb
ja
test
inc
sub
call
jnp
cltd
ljmp
aam
and
mov
std
jle
or
add
cli
lret
fildll
or
loopne
cmp
in
int3
enter
cltd
jmp
xchg
pusha
dec
or
aad
sbb
jns
mov
xchg
push
inc
add
sarl
hlt
xor
dec
add
mov
mov
jne
add
pusha
cmp
inc
mov
jge
arpl
repnz
mov
dec
add
mov
mov
and
insl
fsts
mov
popa
sub
jae
push
push
popf
insb
lcall
jo
mov
inc
jno
push
mov
or
dec
pop
mov
gs
xchg
ret
fwait
repnz
push
cmpl
lcall
sub
hlt
add
mov
outsb
or
pop
sbb
jecxz
adc
pop
fldl2t
inc
fstps
push
cltd
mov
mov
sbb
pop
enter
scas
push
jno
mov
xor
data16
out
mov
outsb
fisubrl
or
sbbb
jg
and
mov
and
icebp
xchg
mov
pusha
test
das
ret
jl
inc
xchg
push
jmp
add
test
sbb
fwait
push
js
cmp
pop
xor
int3
or
cmp
test
sahf
clc
xchg
mov
sub
test
sub
ss
mov
inc
dec
push
dec
ret
sbb
and
or
xor
jbe
int3
mov
hlt
push
pop
cmp
in
scas
adc
pop
dec
out
add
mov
fsubr
std
jg
inc
xor
or
or
stos
adc
and
rcrl
cmp
cmp
lea
nop
pop
test
shl
dec
jg
insb
in
sar
cmp
leave
or
data16
xchg
popa
xor
cmpsb
movsb
inc
cld
jle
icebp
outsb
mov
inc
add
jge
or
inc
cmp
jle
insb
cmc
dec
repnz
cwtl
mov
xchg
idivl
or
or
shlb
mov
jl
pusha
in
cmp
xchg
or
leave
cs
ljmp
jnp
inc
ljmp
mov
mov
push
out
push
rcl
sti
cmp
xlat
dec
lret
pushf
dec
and
repz
mov
ficomps
cltd
daa
jns
jg
lods
aam
sub
pop
int3
cli
or
xor
scas
cmp
sbb
outsb
dec
mov
cmp
and
bound
xor
das
nop
stos
sub
inc
jbe
cmpl
test
cmpsl
leave
pop
cmp
add
or
leave
inc
mov
sbb
sub
xchg
ret
jbe
pop
jbe
in
mov
test
fstps
movsl
lea
adcl
imul
pop
ljmp
cs
imul
xchg
push
in
shl
push
and
sbb
inc
int3
clc
and
sbb
cmc
dec
fsubrs
gs
loopne
stc
fnstenv
addr16
enter
repz
dec
xchg
push
rcr
xor
or
in
les
shlb
adc
add
xor
sub
loop
xlat
add
and
pop
adc
out
hlt
scas
mov
insb
lret
imul
sub
outsb
fnstcw
mov
das
das
imul
neg
sbb
xor
inc
xchg
movsl
lcall
popf
movsb
xchg
imul
das
and
aad
xlat
and
inc
lds
ficomps
jno
aas
sub
sbb
xchg
xchg
daa
xchg
add
and
or
nop
push
xchg
fildl
popf
xchg
pop
dec
sbb
imul
ret
adc
adc
inc
cmpsb
es
nop
xlat
out
sbb
mov
pop
sub
xchg
pop
scas
jae
std
jecxz
lds
push
icebp
xor
sbb
push
cltd
mov
fcomp
pushf
mul
sbb
add
lcall
xor
push
mov
dec
mov
or
rorl
pop
adc
dec
or
mov
ljmp
insl
mov
jmp
dec
sbb
pop
mov
cltd
clc
faddp
xlat
xchg
push
ss
pop
js
out
sub
hlt
rcrl
jno
int
add
ret
sbbl
fwait
int3
and
call
cmp
out
push
stos
icebp
popa
xor
mov
jne
add
pop
cmp
push
xchg
sti
dec
in
cmp
and
or
xor
add
jecxz
or
and
mov
mov
xchg
data16
push
push
scas
cwtl
push
adc
adc
les
lea
aaa
and
xor
push
je
js
rol
mov
mov
outsb
mov
int
mov
in
mov
test
bound
add
ljmp
lret
mov
in
lods
bound
daa
lahf
jb
cld
cltd
pop
mov
xor
mov
or
enter
jecxz
das
mov
jmp
insl
cmc
cmpb
loope
cld
sbb
dec
stc
xchg
xchg
push
test
pop
inc
pop
push
cmpsl
fmull
xchg
cli
repz
ja
daa
jne
ljmp
and
and
xor
cmpsl
cwtl
mov
ffreep
filds
sub
xor
ja
inc
in
data16
jmp
ljmp
hlt
cwtl
sub
adc
jmp
clc
or
sahf
and
push
inc
add
cmp
pop
fstpl
adc
jb
pop
adc
and
sbb
int
push
incl
cmpsb
data16
lds
dec
cmp
loope
int3
cwtl
cmp
std
in
ret
push
ds
inc
and
stos
inc
mov
test
fdivs
dec
and
lods
imul
inc
aas
iret
test
add
mov
add
mov
rolb
enter
lret
es
add
mov
mov
cmpsb
scas
mov
sbb
mov
ss
test
and
inc
mov
cmpsb
pop
test
pushf
push
or
fisubs
ret
xchg
sbb
or
fbstp
pop
int3
sbb
cmpsb
sbb
mov
xchg
sub
or
add
sbb
scas
dec
xchg
test
insb
shr
rorb
aaa
inc
mov
ret
sbb
cld
iret
mov
mov
sbbb
adc
ljmp
add
mov
repz
pusha
xor
or
push
or
xchg
iret
lock
adc
aad
and
lret
les
lahf
and
sti
sbb
adc
adc
adc
std
data16
push
sbb
aam
repnz
fwait
and
fidivrs
shll
mov
inc
jle
cmpsb
jne
dec
aas
pop
out
inc
addr16
loope
push
or
sub
mov
cld
push
mov
push
mov
dec
mov
cmpsb
jecxz
cmpsl
pop
ss
pop
add
xor
stos
xor
stos
gs
add
call
pushl
dec
sub
cli
jge
popf
popf
loope
sub
dec
mov
orb
add
fiadds
andb
sub
std
mov
mov
fnsave
outsb
mov
and
cmpsb
aas
push
mov
rolb
dec
pop
sub
jbe
inc
jb
stc
aas
js
hlt
ja
flds
push
aaa
push
inc
and
leave
adc
xor
lret
enter
dec
repz
in
jmp
movsl
and
test
cltd
sti
jbe
sahf
mov
cwtl
push
sbb
movsb
xchg
xor
loop
lock
arpl
and
fs
and
popf
adc
or
aas
jo
or
cmpl
imul
mov
imul
repz
xchg
test
loop
cmc
ljmp
mov
push
cs
repz
push
ljmp
cmp
pop
jge
cmp
sub
xchg
repnz
push
cmp
sbb
daa
ret
es
mov
sub
test
push
es
and
pop
not
rorl
pop
mov
loop
iret
mov
jae
ja
mov
xor
push
cmc
push
pop
pop
push
lds
test
ss
punpcklbw
mov
in
adc
xor
mov
push
mov
sub
sbb
or
shl
and
lret
ljmp
fstpl
ds
sbb
sub
mov
inc
adcl
or
movsl
pop
or
xor
bound
gs
dec
adc
insb
aaa
cli
jecxz
in
mov
sti
ret
lret
loopne
jle
pop
mov
push
mov
cld
in
mov
shrb
rolb
pop
jl
inc
mov
fsubl
lret
cs
cwtl
mov
movsl
cltd
mov
mov
rorb
call
mov
push
xor
and
clc
push
cmp
mov
cld
fidivl
mov
jle
mov
adc
pop
jno
pop
cmp
ds
test
and
push
pop
mov
inc
stc
out
stos
sbb
scas
lock
dec
test
flds
and
sbbl
cli
test
xor
mov
jmp
inc
sahf
imul
mov
int
add
mov
sub
fwait
mov
or
aad
pop
in
adc
fptan
adc
mov
sbb
lea
xchg
sbb
adc
paddd
ret
scas
mov
and
in
lods
xor
xor
stc
pop
or
pop
rcll
ja
fcmovnbe
lret
std
cmp
sbb
push
mov
loopne
loop
cmpsb
out
add
clc
mov
push
lret
ret
clc
inc
lret
mov
out
in
and
shrl
insb
fnsave
icebp
insb
sarl
fsubs
push
and
sarl
jno
cmc
std
adc
push
dec
imul
daa
sbb
outsl
pop
dec
inc
xchg
sbb
ret
pop
out
pop
xor
dec
out
dec
cli
or
jg
aam
fidivs
xchg
push
cmp
sbb
inc
iret
jno
push
imul
xchg
mov
lcall
ret
jmp
push
movsb
arpl
mov
xchg
jmp
adc
sbb
xchg
out
das
cmp
iret
cld
ret
mov
cmp
les
cmpsb
adc
loope
mov
cmp
adc
mov
jae
xchg
or
iret
jl
or
jne
aas
push
pop
movsl
fadd
xlat
sbb
jmp
insb
imul
sbbl
hlt
jl
je
mov
cs
jg
insl
adc
pop
mov
push
pop
ja
dec
lock
out
mov
sbbb
sub
xchg
jnp
xor
pop
pop
sub
into
pop
push
pop
xchg
dec
jmp
sub
pop
pop
adc
pop
icebp
shll
or
mov
push
ficomps
aas
mov
sarb
arpl
and
push
movsb
xor
adc
push
sbbl
add
adc
decl
inc
xor
jbe
pushf
loope
popf
and
loope
pop
shrl
lods
sti
mov
test
push
call
jmp
pop
inc
scas
pop
pop
sbb
fucomi
fidivl
xlat
push
jmp
pop
int
mov
push
cmc
test
jo
push
movsb
mov
call
out
fwait
push
add
sbb
dec
cmpsl
aas
shlb
in
or
mov
bound
sub
stc
pusha
icebp
notl
xchg
cmp
ret
aas
pusha
out
int3
es
xchg
gs
xchg
cli
gs
dec
flds
xchg
jb
fs
add
jbe
or
data16
and
fisubrl
in
shll
jbe
fs
test
sbb
loope
mov
orl
xchg
arpl
test
repz
and
and
fisttpl
loop
jbe
push
idivb
repnz
sub
in
cmpsb
clc
fimull
jmp
xchg
mov
sub
fwait
aas
and
pop
xchg
mov
pop
shrb
jle
imul
bound
fsubr
int3
insl
adc
ja
xor
xchg
pusha
out
cmpsl
inc
in
je
and
out
out
ret
iret
push
push
xchg
fwait
cs
lds
mov
or
stos
test
into
mov
dec
push
lret
in
pop
insb
out
imul
daa
test
outsl
aas
pop
cmc
sbb
sbb
xchg
cli
sahf
jle
pop
push
cmp
divl
add
imul
cmp
and
sbb
ja
jne
mov
and
jno
sbbb
nop
jmp
ja
popf
add
cmp
cmpsl
jo
fsubs
in
dec
mov
idivl
fwait
pop
jo
xor
add
inc
cmc
daa
xchg
pcmpgtb
jg
mov
push
stos
push
xlat
xchg
nop
icebp
shll
and
out
ss
xchg
mov
shlb
sub
push
push
push
pop
rclb
push
rorl
mov
insl
xchg
mov
ds
xorb
fldt
inc
mov
addr16
jge
bound
rorl
sahf
and
pushf
add
xor
xor
push
cltd
jnp
aam
rclb
orb
mov
cld
lea
movsl
mov
sbb
jbe
xchg
add
and
jl
movq
mov
fdivr
in
nop
and
cltd
push
xorl
fcompl
cld
pop
les
test
andb
les
xor
add
scas
loop
mull
call
jg
sbb
push
xchg
cmc
and
lret
insb
sbb
push
mov
call
popa
xor
adc
je
lret
fcomps
rol
lret
adc
out
push
lahf
xchg
or
or
jo
jb
addl
mov
bswap
add
iret
fldcw
push
xor
push
sahf
or
andl
lods
cmp
pop
cld
sahf
lret
scas
jp
repz
ss
sub
push
lock
int3
push
cltd
push
hlt
mov
mov
das
into
in
mov
out
testl
fs
or
mov
and
repnz
or
xchg
xchg
inc
aam
adc
pop
mov
mov
push
jns
push
stos
jb
repnz
or
mov
sub
cld
mov
jno
jb
cltd
cltd
sub
adcb
sarl
test
push
lods
jno
adc
cmp
lds
or
dec
enter
popf
in
in
mov
sbb
xchg
dec
fcompl
in
imul
fs
xor
xchg
xor
push
and
lods
xchg
sahf
push
into
dec
pop
push
push
add
cmp
aas
sbb
ret
imul
hlt
or
dec
sti
std
lock
dec
pop
add
add
das
loop
std
adc
push
add
es
mov
mov
mov
aad
call
in
xchg
scas
push
sbbb
pop
xchg
lock
aas
icebp
pusha
adcl
ja
enter
gs
cld
sub
ljmp
fs
jl
cmpsb
mov
mov
mov
es
loop
xor
ret
sbb
xor
inc
fcomip
imul
jns
in
sub
cs
jle
ror
sbbl
sbb
repnz
leave
idivl
adcb
in
testl
fcmovu
xchg
leave
loop
fbstp
cld
jge
fbstp
adc
nop
lret
loopne
cmp
clc
push
mov
add
mov
bound
push
jle
movsl
cmp
mov
sbb
or
lret
lahf
add
js
int3
arpl
xchg
aad
fs
shr
insl
push
or
movsb
ret
jbe
jge
mov
loope
dec
mov
mov
mov
xchg
lahf
sbb
cmpsb
inc
and
pop
int3
addr16
jno
mov
dec
out
push
test
std
mov
movsb
mov
loope
adc
daa
fs
cmc
les
jnp
inc
sarb
popf
negb
pop
jbe
xchg
pusha
push
push
loopne
sarb
outsl
mov
adc
scas
test
fwait
xchg
adc
push
sbb
out
and
js
xchg
xchg
cmp
sub
pop
fstpl
sbbb
sbb
dec
divb
inc
cmpsl
jns
pop
rcr
scas
sub
xchg
add
lahf
sub
mov
mov
in
add
jbe
pop
adc
test
imul
aaa
pop
jbe
ret
mov
sub
dec
and
mov
dec
lcall
push
in
pop
lea
push
push
mov
dec
mov
jno
pop
mov
rcl
or
push
stos
repnz
jl
bound
sbb
or
mov
cltd
movsb
ret
sti
out
xor
xchg
pop
mov
push
and
pop
dec
sbb
dec
fsubrs
push
xchg
adc
pop
cmp
mov
and
loopne
and
lods
dec
lds
int
int3
xchg
mov
lret
mov
add
into
movsl
int
and
cmpsl
inc
add
decb
mov
mov
nop
loop
cmp
push
data16
adc
out
pusha
jbe
and
xchg
popl
faddp
lret
into
cld
dec
cmp
je
sahf
data16
out
fnsave
mov
dec
and
ss
mov
add
popf
inc
cmp
das
sbb
sub
aad
hlt
mov
sar
fdivrs
pop
in
scas
outsl
mov
inc
addr16
add
leave
sti
xor
xlat
js
lock
cmc
ja
hlt
pushf
pop
dec
jp
clc
cli
xor
dec
xchg
push
sbb
add
pusha
outsb
ss
or
jae
mov
push
pop
aam
mov
add
sbb
or
movsb
enter
xchg
mov
lea
std
jp
jge
int
outsl
enter
lret
and
popf
sub
mov
lock
adc
cmp
add
or
int
into
out
call
stc
stos
cmp
jl
push
outsl
mov
enter
or
sbb
mov
orb
scas
ljmp
jno
lea
outsl
cmc
stos
out
inc
outsl
pop
mov
and
cmp
jp
std
icebp
xor
jns
out
and
push
es
stos
add
addr16
popf
stc
mov
in
inc
xor
add
dec
xchg
cltd
mov
jbe
inc
testl
jl
ja
jb
fcoml
and
loope
push
sub
leave
mov
mov
stos
pop
push
sbbl
iret
or
rorb
adc
les
popl
into
pop
iret
add
mov
mov
mov
iret
and
adc
push
or
mov
xor
xchg
arpl
xchg
cmpl
sub
and
push
mov
jnp
out
gs
dec
mov
jnp
dec
cmp
and
rcrb
and
pop
sahf
dec
push
pop
mov
dec
aad
sbb
sti
sub
dec
mov
insb
pop
cmp
push
xchg
push
imul
ret
adc
imul
lods
inc
inc
xchg
add
push
inc
pop
inc
add
std
jle
mov
lods
mov
sarb
cwtl
mov
hlt
sbb
mov
fstl
mov
xchg
jmp
lock
inc
adc
aad
rcl
insb
inc
inc
mov
mov
xor
sbb
clc
insl
jo
aas
test
pusha
or
xor
mov
adcl
rcrb
xchg
imul
popl
inc
test
xchg
push
lock
mov
in
pop
mov
hlt
iret
push
nop
pop
sbb
xorl
jnp
pop
xchg
pop
adc
pop
cmp
push
pusha
imul
sub
cmp
xor
add
pop
and
xchg
mov
adc
clc
popf
addl
ss
and
loop
mov
dec
mov
in
mov
or
or
lahf
push
xor
dec
mov
aam
mov
test
and
adc
arpl
sub
ret
lea
scas
lds
dec
or
dec
adc
fsubr
ficoms
adc
xor
repnz
xor
push
js
dec
pop
mov
add
pop
sub
mov
in
push
test
pop
push
sub
push
mov
adc
xor
mov
adc
cwtl
or
in
mov
pushf
aad
mov
repz
add
scas
mov
sbb
jle
jge
push
jecxz
mov
aaa
sub
jmp
xchg
mov
push
fimull
je
add
cmpsl
lock
mov
sbb
mov
sub
popa
mov
and
loopne
testl
lret
add
dec
aad
cwtl
leave
or
cs
fwait
lock
sbb
lea
and
movsb
lret
hlt
pop
adc
sbb
sbb
mov
insl
test
rcrl
aad
sub
dec
sbb
add
mov
pop
fdivs
xchg
mov
lahf
sub
dec
sar
mov
std
fwait
loope
add
int3
sahf
in
jecxz
out
je
jne
sbb
loopne
repz
or
cmc
xor
add
bound
ficoml
mov
loopew
sub
push
dec
outsl
or
les
fidivs
pop
pop
aaa
mov
sti
cmc
aam
xchg
jns
adc
cmp
loopne
mov
stos
test
xchg
sbbl
sarl
xchg
sbb
in
push
in
jo
push
mov
arpl
in
inc
xchg
xor
cmp
enter
sbb
rcrb
cmpsl
lahf
or
pop
shlb
test
cmp
fstpt
insb
pop
std
cs
sbb
je
cltd
mov
icebp
adc
arpl
data16
ds
xorl
mov
jmpw
andl
loope
jp
dec
push
push
mov
movsl
cmpsl
push
decb
aaa
dec
in
jecxz
stc
or
and
mov
out
orb
shll
nopl
mov
movhps
mov
adc
and
dec
mov
sbb
insl
into
leave
pop
aad
add
mov
push
inc
cmp
xor
xor
testl
sti
inc
push
mov
jle
xlat
and
sti
je
push
imul
add
rorb
lea
cmp
push
in
cmpsb
arpl
fldl2e
mov
testl
mov
inc
dec
inc
mov
pop
js
dec
push
ret
aam
decb
cmp
mov
pop
or
scas
mov
lret
int
xchg
out
in
pop
or
push
ret
not
sub
xchg
popa
fsubr
lret
sub
aas
and
mov
sti
sbb
fsubrl
push
sub
add
aad
outsb
jp
dec
out
pop
enter
pop
or
stos
dec
xlat
adc
and
mov
push
sbb
xchg
adc
pop
shll
test
jae
jb
sbb
scas
mov
pop
loop
call
int3
pop
mov
and
mov
mov
mov
xchg
xor
dec
mov
dec
push
out
mov
lret
sub
push
jmp
pushf
repz
pop
fcmovb
cltd
adc
bound
fdivrs
xor
aam
mov
or
or
fistl
mov
push
dec
rorb
lock
insl
imul
inc
popa
int3
push
mov
mov
or
fmuls
cmpsb
int
cmpsb
push
imul
ss
je
inc
push
cmpsl
scas
dec
dec
jge
mov
fnstsw
iret
mov
and
jecxz
xchg
testl
fisubrs
jns
push
fists
lcall
cmp
xchg
xor
jne
aad
lock
nop
cmp
or
adc
test
cmp
sub
jmp
shrb
or
inc
movsl
test
ds
fbld
jg
jnp
mov
jmp
and
ficoms
insb
test
mov
jo
enter
push
sub
jp
inc
imul
push
jae
js
mov
mov
pusha
out
rcrb
andl
test
lret
out
sbb
pop
xchg
fwait
sar
cmpsl
stos
rorb
sti
mov
int
in
mov
cbtw
mov
fisubs
cmpsb
sub
inc
sbb
insb
inc
xchg
mov
or
aad
pop
pop
andl
sahf
mov
mov
push
and
loope
dec
fistpl
arpl
popf
inc
mov
inc
or
clc
idivb
pop
in
es
pop
loope
rcrl
jmp
sub
mov
pop
inc
fscale
pop
int
adc
push
lret
and
sub
mov
cli
and
push
mov
test
or
mov
pushf
inc
inc
lcall
aaa
dec
mov
fadds
and
mov
lock
clc
add
sub
xor
xlat
test
jle
out
jg
pop
xlat
or
cmp
jl
xchg
lahf
cld
lcall
mov
leave
test
lcall
jl
adc
dec
subl
bound
mov
sbb
test
arpl
xor
daa
repnz
xchg
dec
das
jle
sbb
outsb
nop
adc
xchg
pop
pop
jmp
stos
mov
or
orb
push
mov
push
jge
clc
mov
shll
mov
sub
pop
xchg
repz
mov
adc
jecxz
testb
mov
fwait
in
shl
jle
mov
popa
fdivr
pop
sub
hlt
cwtl
pop
cwtl
cwtl
cmc
stos
sub
dec
mov
les
fistl
inc
jmp
aam
push
insb
add
push
ret
jno
mov
jb
popa
lds
sub
movsl
cwtl
inc
movsb
out
daa
xchg
lret
mov
xchg
cmc
aas
insb
mov
pop
nop
xchg
aad
xchg
in
mov
rcrl
test
fld
inc
in
data16
ret
mov
ret
mov
fldt
test
insb
int3
mov
int
mov
or
xchg
cmpsl
mov
addr16
push
jl
xor
dec
jp
stos
adc
fwait
mov
dec
mov
inc
fldl
mov
mov
or
out
or
stos
sbb
std
jg
scas
sbb
and
dec
or
dec
cmp
je
gs
movsl
aaa
jae
jmp
into
push
sbb
hlt
sub
mov
daa
jae
and
mov
les
adc
ret
out
mov
cwtl
out
jne
movsl
pushf
test
sbb
std
fwait
adc
bound
xchg
push
out
imul
push
leave
imul
xor
addl
gs
jo
outsb
xor
mov
mov
sbb
fcomp
jecxz
adc
sbb
lds
mov
lods
adcb
bound
jne
leave
add
pop
cs
clc
call
nop
jmp
fisubs
cmp
cmpsl
test
fstl
subl
ret
mov
mov
fwait
into
ds
or
addr16
out
adc
daa
add
dec
loope
mov
sbb
clc
add
jae
or
xor
lea
leave
pop
rcrb
push
lret
or
cmp
icebp
inc
inc
add
cltd
push
dec
fwait
shl
out
aam
out
cs
js
call
insl
mov
lds
in
mov
scas
and
lret
mov
xlat
repnz
sahf
xchg
mov
xor
jecxz
andl
lock
and
into
and
xchg
fidivl
loopne
test
xchg
pop
mov
lods
inc
push
es
repnz
testl
das
jbe
leave
dec
cwtl
outsl
addr16
xor
pop
sub
push
es
das
mov
dec
or
mov
mov
lock
test
aaa
pop
mov
add
popf
rclb
arpl
xor
call
ret
xchg
push
add
loope
shlb
jle
rcrb
lcall
les
mov
sahf
sti
mov
xlat
xchg
lcall
jbe
inc
xor
mov
adc
lds
pop
popa
mov
jae
pop
push
fbld
xorl
int3
mov
cmp
in
test
mov
out
push
jecxz
mov
mov
das
popa
in
cli
adc
out
sub
mov
jle
lods
ja
push
add
aaa
inc
or
not
mov
pop
in
mov
popf
stc
aaa
cld
push
push
push
fldl
add
xchg
fcomi
jecxz
mov
es
lea
es
jnp
jmp
das
dec
or
mov
cmc
xor
movsb
fwait
out
push
mov
push
xor
aad
imul
or
pop
shl
pusha
sub
icebp
fbld
push
mov
shlb
sub
shl
icebp
pop
mov
out
adc
jp
jp
sub
pop
mov
movsb
inc
add
xor
dec
or
sub
push
fwait
xchg
popf
cli
add
sub
in
push
pop
fcompl
negl
incb
xor
cwtl
add
in
dec
outsl
add
and
imul
jmp
jo
pushf
or
pop
mov
pop
xor
hlt
mov
pusha
je
xor
dec
out
push
push
ret
mov
mov
xor
xor
add
push
add
int3
sti
xor
sub
js
adc
imul
jg
mov
addr16
push
xorb
push
fcomp
fistl
test
adc
pop
rorb
xchg
lret
ljmp
pushf
jle
scas
and
mov
stc
cmp
xor
fldl
mov
pop
add
lods
mov
push
dec
mov
and
andl
lcall
mov
popa
inc
je
ds
orb
stos
add
imul
hlt
sbb
rcr
or
inc
add
outsl
sbb
mov
adc
es
insl
pop
mov
sbb
rcrb
pop
jo
dec
dec
addr16
mov
push
jp
bound
fcompl
inc
inc
sub
sbb
mov
popa
add
lret
stc
cmp
sbbb
pop
mov
pop
clc
dec
xchg
ds
sti
pop
mov
xor
xchg
sbb
jns
je
popf
into
dec
out
icebp
xor
xchg
aas
ja
adc
lods
mov
mov
adc
jae
out
sub
xchg
mov
test
cmp
popf
pop
movb
daa
hlt
pop
jge
decl
orl
cmpsl
add
das
roll
frstor
xor
daa
ja
xlat
xor
mov
mov
or
shll
pushf
rcl
repz
sar
fstps
jne
add
inc
jb
adc
sbbb
xchg
jecxz
mov
insb
out
push
sbb
imul
sahf
xchg
pop
sub
mov
sub
push
and
movsb
cmpsl
xchg
pushf
iret
push
sahf
mov
xlat
in
cmp
cmpsb
jae
in
shlb
scas
into
test
out
inc
inc
icebp
cmp
jno
imul
push
jo
mov
adc
ret
or
test
jmp
cmp
fdivs
mov
push
add
mov
js
jmp
aam
xor
jl
mov
adc
fbld
push
add
popa
adc
bound
shll
movsb
mov
aam
or
sub
into
incl
ret
jle
shlb
sub
mov
mov
xchg
in
mov
jecxz
je
out
sti
out
lcall
rorl
test
idivl
add
mov
icebp
pop
sbb
jbe
int3
cmpsb
pop
cli
inc
cld
mov
out
fiaddl
fistl
int3
mull
mov
andb
and
sbb
sub
das
ret
fisubrs
jbe
ret
mov
out
mov
push
adc
stc
xor
or
jne
sub
lods
sahf
pop
inc
jg
decb
orl
xorl
shlb
cmp
mov
das
and
mov
repz
xchg
lret
pop
pop
sbb
pop
jbe
and
sti
xchg
je
pop
and
xchg
dec
scas
inc
jbe
je
fdivrs
jl
jmp
adc
add
arpl
insl
sbb
sbb
jno
pop
mov
insl
lods
mov
mov
mov
mov
in
or
icebp
sbb
std
dec
adcl
jmp
std
jb
cltd
pop
mov
sbb
xchg
ret
aaa
shld
sahf
loop
adc
or
push
xor
inc
adc
cmp
int
lea
push
jge
pop
aad
test
cs
aam
mov
mov
adc
insl
cwtl
negl
or
movsb
cmc
add
push
lods
jmp
call
in
push
or
ljmp
push
mov
add
iret
cld
push
das
xchg
push
adc
cld
jb,pt
test
jae
pop
xorl
push
jb
xchg
xchg
test
inc
div
in
in
das
fwait
push
mov
sar
jbe
rorb
jbe
scas
les
bound
inc
dec
clc
add
mov
fwait
je
loope
or
data16
sti
popa
icebp
imul
push
push
repnz
mov
mov
lcall
xor
xor
mov
jb
push
test
mov
push
insb
pop
mov
outsl
xchg
push
push
lret
test
or
movsb
lods
push
lea
sub
push
int3
ret
dec
idiv
test
dec
test
mov
mov
out
lea
icebp
inc
inc
adc
dec
adc
shlb
lea
fdivrs
sub
xor
repz
gs
push
cmp
push
test
jnp
xchg
xchg
xchg
cltd
pop
or
xchg
fists
pop
adc
out
imul
jge
add
mov
mov
data16
cmpsl
dec
call
mov
jne
sub
and
mov
cli
push
or
fsubrl
jo
push
aam
dec
add
arpl
test
lds
aaa
mov
dec
les
push
loop
lds
insb
mov
jne
shrb
gs
jmp
int3
mov
inc
jae
or
outsl
xor
xchg
out
fsubl
push
xor
xchg
out
xchg
adcb
xor
adc
push
orl
adc
jb
aaa
jno
cmp
test
mov
jmp
fadds
sub
sarl
dec
aaa
sbb
out
daa
push
jg
sbb
jne
or
mov
movsb
jnp
ret
cmpb
fsub
repz
sbb
sbb
les
sub
dec
cs
pop
pop
jmp
fwait
jae
and
idivl
test
sbb
pop
subl
mov
lcall
aad
fistl
xchg
arpl
inc
push
jbe
add
sbb
add
call
fldcw
jbe
frstor
jb
mov
lea
xor
dec
jnp
loope
hlt
jns
or
xor
jne
adc
jns
xchg
cli
or
mov
fwait
das
sub
out
arpl
divl
ds
push
int3
scas
xor
add
xchg
sub
ret
not
fimuls
dec
in
aas
mov
or
jne
loope
xchg
mov
cmpsl
ljmp
xor
fildll
repz
cmp
pop
cmc
cltd
inc
jl
lahf
dec
xor
scas
mov
cmp
cmp
push
sbb
stc
cmp
dec
jns
push
sbb
jb
sbb
loopne
adc
add
mov
arpl
jne
and
outsb
pushf
hlt
arpl
cmpsl
pop
ficompl
lahf
dec
lods
push
or
push
adc
push
enter
bound
ds
call
fimull
sub
mov
ds
adc
cmc
xor
lahf
jnp
das
push
leave
std
lcall
pop
aad
mov
ss
jns
rcl
dec
sbb
mov
lods
hlt
inc
pop
xchg
dec
mov
inc
loope
pop
inc
mov
dec
xchg
lret
xchg
cmp
mov
sbbb
add
sub
jge
mov
loopne
das
xor
ja
push
cli
or
jmp
mov
sbb
orl
jmp
daa
cs
jmp
pusha
nop
enter
dec
das
clc
insl
int
out
into
dec
lea
ret
arpl
lods
clc
dec
pop
and
nop
jp
push
add
adc
dec
out
xchg
imulb
mov
or
inc
add
dec
stc
xor
or
cmp
cmpb
adc
fnstenv
mov
adc
push
jb
divb
jmp
std
adc
fs
fwait
mov
hlt
pop
imul
cmpb
ret
inc
aad
push
xor
or
pop
leave
add
stc
cmpsl
bound
fdivrl
aaa
mov
xor
xor
ja
iret
xchg
pop
ds
shlb
xor
insl
push
mov
inc
push
and
decl
test
test
mov
ret
das
lods
pop
loopne
inc
fcmovbe
xor
and
mov
movsb
pop
test
xchg
jp
and
pushf
in
xlat
arpl
icebp
mov
hlt
dec
pop
cmpsl
jecxz
sbb
jle
xchg
mov
sub
xor
mov
xchg
xor
xchg
js
push
cwtl
pop
inc
lcall
outsl
pushf
pusha
repnz
cltd
call
mov
xor
and
cli
or
data16
lock
push
cs
fidivs
test
jecxz
sahf
inc
pop
xlat
push
aaa
lds
js
xchg
fstpl
rorb
pop
insb
mov
cmc
dec
int3
xchg
fwait
mov
xor
gs
xor
inc
hlt
insl
addr16
loopne
and
and
sub
or
stos
loope
ja
and
lods
shlb
repnz
push
loopne
outsl
jb
cmp
mov
cmpsb
sbb
pop
mov
push
sbb
add
repnz
xchg
out
cli
sub
sub
das
cmp
pop
outsb
jmp
in
jp
fdivp
in
adc
sub
jg
movsl
mov
inc
xor
int
add
sti
ret
mov
push
bound
mov
mov
movsl
rorl
ret
or
mov
lcall
cmpsb
int
sbb
jp
jl
movsb
inc
push
test
jge
loope
test
addr16
pop
cmp
pop
scas
lcall
nop
dec
push
push
and
jecxz
xchg
xorl
adc
addr16
into
out
mov
sti
outsl
pusha
ret
lret
repnz
jg
mov
mov
or
jns
or
or
or
sti
test
inc
xlat
mov
push
aaa
add
cmp
lret
jae
ds
clc
inc
jecxz
outsb
fildll
xchg
fldenv
xchg
imul
mov
popa
fsts
outsl
inc
xchg
bound
sbb
call
insb
inc
inc
jmp
mov
mov
or
js
mov
pop
ljmp
inc
push
sbbb
lock
jns
or
jecxz
sahf
stos
sub
jnp
movsl
add
movsl
jnp
inc
outsb
repnz
sub
loopne
movl
xchg
jne
jp
lea
jb
jp
add
imul
loopne
pop
xor
and
dec
fbld
push
dec
cmp
dec
stos
push
sbbl
push
aad
cmp
fmulp
mov
int
mov
fcomip
test
xor
je
push
popl
stc
sbb
xchg
lds
rcrl
add
adc
sub
mov
pop
xor
out
jp
xor
call
nop
sbb
sti
out
sbb
jnp
ret
rorl
sbb
inc
scas
ror
mov
repnz
in
out
pushf
mov
sub
movsl
andb
addr16
cmp
ja
outsb
arpl
les
out
mov
lods
add
cmpsl
lahf
enter
mov
dec
movl
aad
aas
daa
loop
adc
leave
pop
scas
add
and
pop
out
xchg
iret
sub
mov
dec
adc
clc
iret
xchg
call
sub
mov
mov
imul
out
into
mov
and
leave
sub
lods
jg
xchg
leave
call
shrl
popf
je
sub
aaa
jns
arpl
xor
cmpsl
cld
icebp
ss
pop
mov
ja
or
xlat
aas
dec
or
cmpsl
orb
repnz
cmpsl
ret
stc
jp
sahf
sbb
inc
cltd
int
pop
rcll
je
fs
mov
adc
adc
in
dec
dec
jb
xchg
push
add
test
jbe
mov
push
ja
xchg
or
fldl
sbb
pop
or
push
pop
mov
xchg
inc
das
outsl
adc
cmpsl
stc
sahf
cmp
inc
add
test
mov
test
call
sahf
popa
les
cmp
add
and
mov
sub
imull
outsl
pop
xor
xchg
mov
and
shr
sbb
loop
sbb
call
xchg
or
ret
push
es
sti
cmp
jno
data16
fisubrs
pop
stc
lods
into
mov
stc
add
adc
bound
insl
fcoms
or
imul
ror
sub
mov
scas
pop
int3
icebp
pop
mov
mov
orl
inc
sbb
es
push
cs
xchg
jo
es
out
pushf
ja
mov
fdivl
hlt
mov
ror
xorb
mov
jl
push
sub
add
fcomip
lds
ret
pop
sahf
test
stos
mov
cs
sahf
ret
xor
ljmp
scas
sub
cmp
mov
xchg
jno
adc
addb
lock
insl
xchg
stc
scas
adc
cmp
mov
pop
pop
or
stos
enter
sbb
inc
lock
add
pop
or
test
xlat
jb
test
dec
or
cwtl
in
add
test
xor
push
push
cmpsl
pushf
jns
js
sti
mov
imul
arpl
sub
or
sub
mov
xchg
jb
mov
loope
cmp
or
gs
outsl
cmc
in
add
adc
mov
mov
xchg
pop
iret
inc
jbe
ja
and
out
or
push
push
push
sbb
mov
iret
mov
cmp
jns
xor
cmc
js
xor
cmp
daa
xor
add
mov
int
dec
sti
add
shl
cmp
adc
imul
test
ret
push
hlt
xor
pusha
or
ds
and
sbbl
das
inc
push
clc
scas
imul
pop
fildl
and
mov
sub
mov
pop
lods
push
mov
and
cmc
int
in
imul
cmp
mov
insl
ljmp
mov
mov
push
js
aam
mov
lahf
xor
cmpsb
stos
and
out
mov
fisubrs
adc
dec
mov
loope
mov
xor
dec
or
es
or
mov
jo
inc
dec
push
daa
xlat
or
fildl
cmp
jg
inc
mov
dec
scas
or
lds
sbb
rcrb
lods
pop
or
lock
ss
sub
mul
inc
mov
fwait
pop
repz
test
lods
stos
mov
movsb
imul
adc
dec
pop
fstl
pop
int
adc
push
push
inc
push
scas
ja
sub
mov
int3
arpl
pop
xchg
push
or
cld
jb
iret
cli
add
mov
cmp
sub
mov
sbb
inc
cmp
sbb
mov
mov
push
nop
jecxz
aad
inc
xchg
and
sbb
movsb
jns
cld
fimuls
mov
insl
mov
fstpt
cmp
xchg
in
orb
push
test
mov
sub
ds
fidivrl
dec
xchg
cmp
lret
dec
add
cmp
adc
pop
popf
rcrb
mov
lock
and
mov
inc
daa
lods
imul
xchg
dec
adc
in
sahf
or
dec
jle
and
mov
aad
add
movsl
push
insl
bound
aas
shl
call
movb
add
add
jnp
outsb
cmp
sub
xor
lret
sti
mov
pop
stos
pop
in
cwtl
jp
scas
cmpsb
pop
dec
daa
lods
les
push
xor
mov
repz
fstps
xchg
push
pop
in
xchg
xor
mov
ss
jge
das
es
xchg
mov
mov
imul
in
mov
lea
dec
push
mov
aas
mov
out
pusha
icebp
mov
xchg
dec
outsl
xor
data16
sbb
cmpl
fisttpll
jbe
daa
inc
fsubp
loope
out
lcall
or
xlat
js
enter
inc
mov
dec
jbe
out
mov
sub
stos
stc
lret
outsl
xlat
outsl
and
adc
je
cmpsb
ret
jno
movsb
insl
inc
cmc
jge
or
pop
movsl
loope
pushf
inc
inc
push
add
sub
lods
pop
mov
jecxz
xlat
cmpsb
sar
lret
fsubs
jae
imul
inc
lods
mov
mov
rorb
in
push
ret
inc
hlt
and
push
jp
pop
dec
mov
adc
jae
sti
or
jp
cmovb
adcl
push
mov
cmp
sbb
cmp
mov
cmp
ljmp
adc
cld
jecxz
and
repnz
cmp
jne
pop
sub
jl
aam
mov
dec
int
inc
fucomp
pop
push
jl
ds
loop,pt
or
xor
insl
cmp
mov
pop
xchg
sub
or
cmp
inc
ret
outsl
mov
popf
xchg
or
cmp
sahf
jae
cmp
adc
mov
icebp
ja
outsb
push
clc
mov
movsl
lock
shl
xchg
push
cmp
jb
leave
jb
lock
inc
xorb
ret
xchg
inc
dec
inc
sub
jg
push
data16
jno
pop
insl
into
lret
sbb
and
sbb
pop
testl
and
and
sarb
sbb
push
int3
dec
inc
cli
mov
cwtl
lret
adc
mov
mov
iret
int3
inc
jno
pushf
jbe
outsb
mov
and
in
roll
jge
pop
sbb
cmp
sahf
leave
test
or
push
sub
call
daa
fwait
cs
popa
push
lcall
mov
pop
addb
fidivrl
or
popa
jge
cmc
std
ja
roll
mulb
inc
dec
dec
aaa
jno
je
push
dec
xor
pusha
enter
xor
mov
sbb
shrb
dec
cmp
cli
into
cwtl
das
mov
fs
inc
xchg
cmc
push
lahf
sbb
inc
inc
dec
or
xchg
cltd
int
cmpsb
xor
xchg
xchg
add
cmpsb
and
clc
shrb
xchg
je
xchg
dec
add
leave
mov
clc
and
or
jb
shlb
sbb
add
inc
and
mov
adc
xchg
cmp
cmc
sub
test
sbb
icebp
sbbb
ret
push
pop
sub
or
add
fptan
shl
ret
jmp
sahf
mov
cmc
rclb
cld
out
test
cli
cli
negb
sub
sub
mov
in
outsb
dec
mov
dec
or
mov
push
sar
ret
jp
testl
inc
and
pop
rorb
pop
xchg
add
jecxz
das
pop
xchg
scas
nop
ffreep
pushf
sar
daa
xor
xor
or
insertq
cmp
mull
cmpsl
nop
addr16
dec
xchg
dec
fcmove
pop
jle
mov
dec
mov
ljmp
mov
push
mull
inc
mov
outsb
push
movb
or
std
inc
mov
mov
repnz
jno
push
insl
mov
xor
mov
wrmsr
and
xchg
sahf
cmp
call
hlt
xchg
xchg
fdivl
sarl
add
xchg
xchg
jno
add
je
mov
test
cmp
repnz
and
push
push
jecxz
ret
push
mov
cld
xchg
push
in
stos
and
cmp
mov
adc
mov
pop
in
movsl
xchg
cmpsb
es
inc
into
test
xchg
add
std
ljmp
dec
add
push
xchg
pop
lds
mov
push
push
shlb
iret
jg
push
jbe
xlat
jnp
in
pusha
mov
adc
stos
jge
push
loope
and
mov
das
lret
fadds
push
loop
and
insb
mov
jne
adc
outsb
adc
lods
xor
aad
pop
mov
lds
into
mov
mov
mov
and
jmp
xor
mov
xor
adc
test
lea
rcr
sub
or
popf
add
aad
sub
jp
xlat
out
out
mov
or
pop
inc
inc
mov
fcompl
loop
int
ss
adc
nopl
aaa
jle
call
mov
popa
lods
jl
fistpl
push
das
out
jo
testl
mov
outsl
or
test
xchg
mov
add
inc
mov
insb
jb
pop
mov
adc
add
lcall
in
aas
je
xchg
test
mov
mov
insl
dec
daa
mov
clc
jle
inc
adc
adc
enter
cltd
adc
push
sbb
pusha
cwtd
in
sbbb
mov
cmove
das
dec
xchg
aam
lea
cmp
sti
jb
ljmp
leave
lret
stc
clc
ret
stos
fucomi
shll
into
push
adc
scas
sub
clc
icebp
pusha
fidivrs
stc
sbb
js
sub
nop
xlat
mov
mov
adc
xchg
or
ficoml
aas
xor
cwtl
or
stos
mov
stos
lahf
add
pusha
and
and
notl
push
scas
inc
mov
call
mov
xor
pop
in
mov
inc
xor
sub
inc
aad
sti
sub
inc
mov
mov
int3
sub
mov
aaa
into
sbb
jns
or
lods
cmpsl
js
rorb
leave
pusha
xchg
inc
push
fistpll
jo
mov
das
and
lahf
dec
push
pusha
mov
mov
popf
jbe
adc
call
out
pop
sub
outsl
adc
icebp
or
push
es
inc
in
jge
adc
ret
fidivl
inc
inc
stos
mov
cltd
ja
mov
or
xchg
enter
push
loopne
push
in
fmulp
das
or
dec
pop
jbe
mov
jb
fdivl
or
or
push
inc
push
jp
inc
movsl
and
aam
sti
or
leave
and
push
lods
cli
pop
add
leave
arpl
push
movsb
pop
adc
mov
xor
cmpsl
lret
cmovb
or
sbb
sti
lock
xchg
mov
movsl
popa
xchg
aad
pop
pop
pop
pusha
das
sarb
ds
dec
pop
in
fbstp
sahf
add
cld
adc
push
into
into
mul
push
pop
mov
and
mov
jmp
mov
xchg
dec
decb
mov
scas
int3
ret
pushl
incb
or
mov
stc
subb
enter
cmp
ret
mov
jl
mov
daa
scas
leave
add
or
into
ret
pop
jns
out
dec
pop
stc
out
mov
cmp
imul
pop
aaa
jbe
xor
xor
pop
dec
cmc
fisttps
mov
daa
push
fidivs
outsl
mov
mov
jne
push
sub
and
cmc
dec
in
adc
rorb
dec
pushf
ffree
fldt
or
ret
mov
inc
idivl
dec
mov
cmp
fsubr
das
adc
xchg
adc
xchg
push
iret
xor
cld
faddp
or
mov
in
fisttpl
mov
addr16
pop
nop
add
add
push
mov
sbb
push
cs
enter
pop
popfw
das
xlat
insl
mov
sbb
out
adc
insl
inc
imul
pop
mov
sar
add
fists
iret
cmp
mov
xlat
movsb
daa
inc
or
add
jp
leave
leave
int3
sub
pop
mov
inc
cmp
outsl
xchg
inc
js
outsb
pusha
push
pop
clc
push
mov
adcb
mov
mov
ss
test
mov
inc
xor
decl
dec
cmp
addr16
xor
sub
out
cwtl
scas
mov
test
call
clc
push
push
inc
pop
ret
xchg
xor
and
lea
clc
mov
xchg
cli
clc
in
fildll
call
pop
push
mov
and
and
xor
push
sbb
add
xchg
mov
and
lea
push
jnp
in
into
das
lret
sub
addb
rolb
sub
adc
inc
xchg
lods
bound
into
fwait
ljmp
adc
add
sbb
mov
into
push
in
testl
aam
pusha
fnstsw
mov
es
sbb
mov
pop
pop
mov
and
jg
test
push
rcrb
in
incb
jo
and
pop
mov
rcrl
stc
fwait
adc
jp
lods
fwait
scas
xor
cmp
mov
xchg
in
daa
js
loope
iret
cmp
xchg
sbb
jns
mov
lock
or
nop
jge
and
subl
rcrb
call
pusha
or
inc
jne
adc
add
int3
add
mov
mov
adc
jmp
aad
adc
xor
push
inc
stc
mov
cs
addr16
inc
push
sbb
loope
jecxz
dec
sub
outsb
lds
sti
repz
mov
jo
imul
or
jne
lods
pop
xor
push
sbb
ret
jae
pushf
cli
out
fwait
rolb
out
je
inc
test
sbb
insl
sbb
lock
xchg
mov
iret
nop
or
ljmp
pop
dec
push
lock
cmp
xor
push
scas
lret
inc
and
sbb
adc
jo
adc
xorb
push
std
push
cmp
sahf
lock
add
dec
cmpsb
push
cmpsl
mov
int
jle
in
cld
xor
lods
mov
dec
fadd
xchg
xchg
xchg
cmp
dec
into
test
xchg
xchg
lret
ror
push
movsl
lods
test
add
arpl
sahf
vmovapd
jmp
sub
enter
jo
popf
aad
sbb
dec
aam
idivb
cmp
test
add
push
stc
ljmp
jns
mov
jnp
fldenv
ret
cli
dec
fisubl
inc
cmp
xlat
mov
lods
add
xchg
mov
xor
cmp
repnz
push
insl
cs
jnp
jmp
repnz
push
insb
mov
sub
test
xor
xchg
add
and
aad
push
les
push
push
push
and
jbe
cmp
movsl
mov
adc
ss
in
xchg
lock
or
pop
orb
jno
mov
xor
adc
and
dec
in
xor
movsl
les
jge
stos
pop
call
incl
aam
insb
push
or
shll
adc
dec
sbb
sbb
aaa
adc
stc
mov
mov
add
dec
ret
aas
rorl
icebp
fiadds
dec
rolb
ret
in
pop
mov
or
sahf
out
roll
jmp
in
sub
add
loope
jae
out
nop
inc
pop
lcall
jns
rolb
dec
sub
pop
roll
or
mov
xor
cmpb
loopne
lahf
cmp
js
addr16
mov
jmp
enter
cmp
negl
stos
sbbl
mov
cmp
int
lock
jae
or
xor
orl
je
aam
xchg
jno
mov
or
mov
fwait
test
dec
outsl
cmpsl
in
lcall
mov
xorb
mov
movsb
cmp
and
shlb
movsb
or
call
or
cmp
aam
sbb
movsb
mov
cwtl
shrb
inc
sbb
jge
mov
sbb
mov
mov
inc
scas
pop
add
inc
mov
movsl
jle
or
push
out
and
push
ror
lock
lret
push
cli
orl
pop
rclb
out
cmp
adc
push
xor
stos
fwait
jnp
pop
jno
pop
ljmp
jp
push
jns
aaa
xor
pop
out
mov
mov
gs
mov
sub
sbb
inc
or
pop
repz
nop
xor
js
sbb
loopne
movsl
aad
lahf
rcrb
mov
test
pop
std
xorb
xchg
leave
push
addr16
roll
inc
pop
out
add
fwait
pop
stc
jbe
push
je
clc
dec
in
mov
xchg
pop
inc
cmp
xlat
adc
fs
out
lods
or
inc
inc
int
dec
ror
stos
cmp
out
dec
xchg
sbb
inc
and
mov
pop
ret
dec
pop
inc
cvtps2pd
dec
sbb
mov
and
fnstenv
imul
ljmp
pop
jge
cmc
stos
nop
gs
test
insb
and
out
jb
dec
lods
into
out
push
inc
out
faddl
jno
testb
and
add
push
push
sbb
mov
or
gs
outsl
mov
cwtl
sub
fcomps
js
adc
fstpt
xchg
outsb
decb
mov
pop
mov
or
cltd
push
fisttps
not
loope
inc
test
inc
mov
mov
sbb
dec
jle
cli
aad
dec
imul
repz
and
inc
out
sbb
jecxz
repz
mov
sbb
cmp
lea
out
ds
out
imul
sbb
arpl
pop
and
mov
pop
mov
mov
add
pop
push
aad
testl
lds
lods
mov
pushf
sub
in
xor
fdivs
push
pop
ficomps
and
shl
repz
mov
push
int
jns
loop
repz
jecxz
mov
into
ret
incb
iret
lods
imul
cmp
push
push
mov
jo
cmp
mov
mov
xchg
lea
stos
jb
jg
loopne
jmp
pop
sub
pop
hlt
xchg
addb
fnsave
sub
frstor
test
clc
cli
dec
mov
lds
mov
mov
aas
jb
fs
push
push
mov
nop
cmpsl
stc
xor
popa
loope
inc
mov
or
mov
mov
push
push
aam
cs
jb
sahf
push
inc
sbb
and
mov
aad
push
ret
xchg
or
pusha
lret
or
xor
cmp
imul
call
insb
mov
jno
loope
and
ficoms
mov
shlb
push
sbb
xchg
or
jne
add
sbb
mov
jecxz
jae
xchg
and
sub
pusha
xchg
lcall
xlat
loope
push
ds
lret
or
dec
add
jge
rep
pop
cmp
fistpll
xchg
ja
leave
push
shrb
xchg
dec
test
cmpsl
loope
xchg
pop
aaa
mov
jecxz
sub
cmpsl
sub
pop
cwtl
sbb
imul
movsl
gs
int
int3
in
add
mov
jmp
and
or
jg
cwtl
frstor
rcr
arpl
lahf
sbb
fistpll
push
clc
sub
mov
and
dec
cmp
sarb
pop
addr16
sahf
xor
dec
mov
cmpsl
mov
movsb
iret
lret
jo
insl
pop
sarb
dec
push
cli
cmp
outsb
push
outsl
and
ds
fldt
cmc
or
hlt
add
clc
jmp
loop
roll
xchg
push
dec
out
mov
xchg
push
popf
int3
sub
sub
mov
mov
jnp
lret
xchg
sbbb
dec
dec
xchg
dec
cs
test
outsl
addl
add
mov
cmpsl
ret
outsl
int3
popa
inc
lds
xor
jmp
xor
ret
outsb
sub
clc
push
mov
js
flds
sbb
adc
movsl
inc
jb
jnp
sbb
cli
pusha
fdivrl
lret
sbb
imul
daa
in
jbe
xchg
mov
mov
outsl
aaa
sbb
aaa
mov
test
std
mov
ljmp
and
fsubr
test
sbbb
jns
stc
mov
arpl
repz
out
push
inc
call
mov
jl
int3
jne
sbb
test
xor
std
movsb
ret
or
xchg
shl
or
add
pop
jmp
mov
vcmppd
xchg
es
xchg
jo
add
push
mov
loopne
test
mov
push
in
sub
shll
daa
pop
adc
loopne
adc
sub
adc
push
cmp
jge
adc
dec
lds
cmpsl
lahf
pop
in
popa
sbbl
mov
jmp
shrl
jecxz
dec
ja
in
jbe
push
imull
xor
push
bound
xchg
mov
mov
mov
sbb
xchg
inc
cmpsb
lret
stos
add
cmp
aam
xorb
daa
js
pop
dec
aam
ljmp
pop
mov
jno
adc
pop
fisubl
lods
mov
bswap
testl
enter
adc
dec
pop
sbb
mov
out
in
es
notl
mov
push
pushf
and
cmp
lock
push
int3
cmpb
aad
dec
sti
adc
adc
mov
xchg
push
lret
and
xchg
mov
xlat
fmuls
pop
xchg
pop
push
push
xchg
sbb
scas
lahf
add
inc
cmp
push
movsl
lods
sub
repz
push
mov
mov
sahf
and
cmp
ror
bound
xor
mov
sub
movsl
xchg
cmpsb
xchg
pop
ljmp
aas
jnp
pusha
cs
mov
loop
aam
sbb
lret
mov
outsl
dec
popa
test
cmp
icebp
dec
cmp
mov
outsb
int
rcr
icebp
out
scas
out
das
arpl
jmp
repz
outsb
mov
pop
sbb
sahf
jno
scas
xor
mov
cmc
xchg
mov
aaa
lods
cmpsb
in
jp
xchg
and
ds
push
sarb
orl
jbe
cmp
mov
sbb
mov
insb
das
jno
jbe
jge
out
add
imul
popf
add
sti
mov
cmpsb
lods
and
test
repnz
pop
jno
addps
push
add
or
push
addr16
jns
pop
add
cwtl
or
imul
add
add
sti
nop
stos
and
add
jae
mov
outsb
lcall
call
pop
push
enter
sub
out
add
lret
subb
mov
cwtl
ret
fsubs
fisttpll
lods
popa
rclb
inc
mov
xor
aam
push
daa
bound
mov
scas
jp
ds
inc
dec
popf
adc
add
loop
test
cmc
sbb
sbb
fisubl
jle
int
fsubl
mov
jg
cmp
shrb
sbb
push
popf
cs
sbb
adc
xchg
hlt
rcrb
inc
push
add
xchg
int3
add
sti
cltd
mov
call
mov
inc
dec
mov
adc
test
aam
cmp
lcall
mov
sub
xor
mov
mov
mov
fldenv
addr16
test
add
inc
mov
js
inc
test
xor
adc
dec
popf
cmp
mov
xchg
mov
sbb
std
push
testb
or
jns
sbb
push
data16
cmpsb
mov
add
sbb
lods
inc
enter
int
adc
imul
and
and
jns
mov
dec
jge
mov
and
jmp
jl
push
stc
fucomi
shlb
mov
sub
xchg
inc
shl
jp
and
jmp
fsubr
shl
pop
test
mov
cmp
add
mov
arpl
sbb
sub
jl
jb
lahf
push
fimull
es
lock
subl
outsb
shll
or
leave
popf
cmp
mov
or
int3
fldcw
xchg
mov
add
outsb
pop
ret
repnz
sub
loop
add
push
inc
xchg
adc
cmp
mov
pusha
movsl
popf
popf
cmpsl
xchg
sub
sub
jmp
adcb
ficompl
mov
dec
subl
daa
mov
inc
int
push
rcrl
cwtl
sub
stos
notb
movsb
pop
loop
push
shll
push
dec
pop
add
sahf
dec
popa
sti
jb
dec
outsl
popa
pop
test
shrl
pop
int3
mov
add
cmp
aad
fimuls
aam
adc
push
mov
pop
rcr
outsb
jg
ficoms
into
xor
dec
sbb
jge
fldcw
imul
sti
push
cmp
in
into
icebp
and
loope
or
sbb
cmp
jo
sub
and
out
or
testb
das
cmpsb
lahf
jo
in
cmp
out
xchg
push
pop
pop
push
fidivl
mov
outsb
sub
pmovmskb
test
stc
dec
les
pop
push
cmpsb
cmp
sbb
jb
mov
imul
dec
movsl
and
push
jmp
test
and
sub
cltd
movsb
inc
sub
mov
ss
cmp
mov
inc
jo
fcmovu
jne
sub
adc
lahf
insb
fsubrl
jecxz
dec
sub
notb
dec
mov
and
into
mov
mov
fdivs
jge
hlt
sbb
mov
inc
mov
add
cwtl
mov
sbb
pop
mov
jle
shll
and
jle
dec
sbb
int3
les
sub
pop
aaa
and
int3
xchg
sbb
dec
add
movsl
ficompl
inc
mov
or
xchg
adcl
mov
in
mov
xor
mov
movsb
out
push
adc
sbb
xor
in
in
insb
or
and
loop
mov
xorl
repnz
mov
rol
lahf
std
cli
test
mov
aam
xor
dec
mov
push
adc
push
adc
fwait
pushl
out
mov
rolb
mov
jnp
sbbb
adc
mov
pop
scas
sub
leave
mov
mov
xchg
bound
pop
jle
outsb
pop
push
dec
stc
jnp
aaa
add
mov
flds
mov
xor
lods
add
adc
mov
fdivp
cmpsb
fdiv
enter
pop
lcall
fdiv
xchg
in
stos
clc
movsl
fsubrl
fstl
fdivrl
mov
mov
pushf
shrl
sub
inc
iret
mov
push
mov
pop
mov
jl
inc
hlt
mov
je
push
push
xchg
sbb
xor
add
inc
mov
dec
xor
pusha
jae
scas
push
jno
and
mov
mov
in
or
aas
xor
aaa
popf
ja
pop
or
xor
adc
dec
xchg
jg
fistpl
orb
jbe
ss
xchg
aas
into
mov
and
pusha
lea
daa
lock
or
subps
stc
jp
into
and
popa
jns
aad
mov
dec
xor
rcrl
into
xor
popa
jo
mov
xor
mov
movsb
jmp
outsl
in
lock
sbb
fdivrs
cmpl
cmp
add
testl
adc
lret
adc
inc
and
mov
mov
pop
jns
adc
mov
outsb
popf
sub
movsb
adc
stos
push
mov
loopne
xchg
add
xorl
xchg
enter
shrl
push
xor
imul
sbb
and
mov
push
jno
pop
sub
mov
jp
jns
lcallw
movsl
xor
and
mov
cmp
push
mov
xchg
int
ljmp
xchg
jge
pop
test
call
movsl
mov
cmp
pusha
dec
mov
pop
test
movsb
loope
fwait
cld
jb
iret
sub
pop
ret
mov
sub
sub
dec
fldenv
div
aam
gs
andl
ljmp
xchg
arpl
adc
in
popf
push
testl
jo
loop
xchg
dec
add
add
sbb
gs
mov
cmp
enter
adc
cmp
jge
adc
rorb
sbb
push
cmc
cli
sti
arpl
lds
aas
popa
jg
rol
pop
in
shrb
and
rcll
pop
in
ds
cmp
mov
sub
sbb
add
inc
jle
mov
cmp
out
arpl
sub
sub
daa
data16
sub
push
pop
dec
mov
imul
jo
arpl
and
sar
jmp
adc
inc
pusha
cmpsl
imul
loopne
pushf
pop
xchg
and
mov
push
xchg
dec
fimull
inc
test
pop
fimuls
inc
cwtl
add
adc
aaa
sub
adc
mov
sbb
jo
hlt
pop
or
jne
iret
dec
jns
js
dec
pusha
mov
sbb
and
iret
push
add
sub
dec
scas
dec
lods
sub
andl
mull
ljmp
scas
lahf
push
xor
outsl
sbb
or
not
mov
cmpsl
adc
pop
outsb
jb
jecxz
push
pop
ss
sarl
mov
loopne
cltd
jae
out
out
js
adc
mov
xor
jno
jbe
inc
push
pop
popa
fistl
daa
enter
mov
out
mov
jbe
xchg
dec
jg
mov
pop
mov
mov
cltd
inc
or
cmp
inc
adc
pop
sbb
add
aaa
or
pop
mov
jmp
loop
loop
pop
lds
sbb
hlt
xchg
add
push
aad
lret
clc
lcall
cmpl
mov
dec
sbb
icebp
lret
xchg
mov
cmp
adc
xchg
jmp
decl
int3
fmull
outsl
xchg
cmp
xchg
lods
jbe
stos
cmpsb
jle
or
or
aad
adc
pop
repnz
mov
shll
inc
sti
push
loope
or
pop
mov
in
out
int3
fnstenv
lea
in
aam
negl
cmc
cli
jbe
std
adc
push
mov
ljmp
daa
push
imul
ret
mov
cmp
dec
pop
enter
sub
loopne
sets
or
sbb
sub
mov
int
int
aaa
jecxz
sub
in
lods
fwait
push
push
adc
xchg
inc
movsb
cmpsl
test
mov
mov
in
dec
cmp
aad
clc
stos
push
jno
xchg
adc
shlb
sbb
fidivrl
add
jbe
adc
sarl
pop
mov
iret
ret
aam
sti
les
sbb
jecxz
add
and
pushf
push
mov
sti
mov
xchg
cmc
popa
pop
scas
add
xchg
add
jae
inc
or
and
aam
out
push
leave
fidivrl
inc
fwait
dec
pop
cmp
sub
add
jmp
out
and
mov
cmc
jmp
jmp
fsubrl
jnp
es
imul
aad
push
shrl
fidivrs
outsb
cwtl
sub
dec
imul
xor
popa
lahf
cmp
and
jo
mov
cmp
roll
mov
xor
fnsave
outsl
lcall
jecxz
pusha
int
hlt
jbe
xchg
sub
arpl
jl
lcall
out
jnp
or
pop
xchg
xchg
mov
push
iret
jmp
xchg
push
cld
pop
rorb
lahf
xchg
mov
jmp
sub
mov
or
popa
out
mov
push
sahf
fstl
cmc
xor
or
mov
inc
fwait
xor
mov
xor
loop
jns
add
pop
nop
rcrb
ss
push
test
hlt
mov
adc
cmp
in
xchg
push
out
push
push
divl
ret
ja
adc
cs
lret
cmc
bound
and
xchg
repnz
cli
addr16
es
xchg
addr16
mov
push
add
add
adc
xlat
sti
das
fnstcw
sbb
push
mov
xor
mov
and
repnz
mov
iret
cmp
pop
dec
xor
in
lds
lcall
cld
mov
jp
cmp
push
mov
pushf
lahf
push
mov
sbb
out
aaa
mov
xor
stos
and
and
jecxz
mov
lret
fmuls
pop
fsubrs
and
and
mov
mov
icebp
push
adc
add
cwtl
lret
and
cwtl
lock
cmp
mov
shrb
mov
jge
push
or
icebp
addb
xorl
cs
adc
sub
xor
cmp
or
daa
cmc
in
dec
mov
adc
mov
inc
or
cmc
icebp
sub
pop
or
pop
xor
cmp
push
push
jae
xchg
cmp
sbb
sbb
mov
mov
adc
xor
jmp
lods
insb
cmp
mov
packsswb
sbb
call
loopne
xchg
lret
push
cmp
mov
sbb
cld
rol
outsl
scas
jnp
enter
fucom
hlt
jmp
inc
outsl
xchg
out
push
lods
or
fidivs
dec
popa
sarb
stc
xchg
push
lahf
dec
andb
push
lcall
or
neg
insl
push
stos
popf
repnz
and
cmp
lods
pop
fdivrs
fbld
jbe
inc
les
addl
data16
mov
out
sub
xor
and
insl
and
xchg
or
scas
nop
mov
fstpt
xchg
add
inc
mov
in
adc
sub
loope
lea
clc
jmp
testl
ret
repz
mov
xor
outsl
dec
push
pop
or
aas
pop
mov
popf
cli
gs
dec
pop
mov
test
andl
xlat
mov
pop
lret
in
push
sub
push
out
fisubrl
xchg
push
jae
imul
mov
or
xlat
add
and
cmp
or
and
test
fwait
cmpb
movntps
in
test
jp
push
lods
or
test
and
data16
adc
repnz
cmpsl
push
jmp
or
fdivrl
arpl
mov
dec
push
and
shlb
xor
inc
mov
add
orl
fcmovu
dec
xchg
jp
pusha
pop
ficoml
pop
xchg
adc
jbe
mov
shlb
pop
enter
jb
push
add
ljmp
dec
pop
jo
pushf
jnp
pop
sbb
xchg
stos
xchg
push
hlt
mov
repz
icebp
jmp
sbb
jns
mov
out
cmpsb
ds
and
loope
fwait
call
pop
fbstp
lea
jmp
adc
int3
xchg
ljmp
mov
sub
rcll
inc
lock
cmp
pop
adc
hlt
mov
mov
mov
mov
outsb
mov
outsl
aaa
flds
jne
or
lea
and
bound
repz
ss
cli
jp
xchg
dec
mov
add
jp
shl
jnp
pop
test
or
add
pop
cmp
cmp
repz
insb
insb
inc
cmp
popl
adc
jb
add
jb
aam
lea
data16
cmpsl
insl
sbb
int
mov
scas
pop
out
test
sbb
ds
fnstsw
inc
or
ret
push
inc
test
or
mov
xchg
mov
pop
push
outsb
cli
jecxz
insb
jecxz
imul
push
inc
add
scas
push
popl
out
rclb
sbb
out
js
mov
lret
imul
in
adc
inc
mov
add
cwtl
dec
dec
add
xchg
add
loop
out
mov
jg
mov
cs
jae
pop
fwait
cmp
inc
andb
lds
test
jb
testb
inc
test
mov
stos
or
into
push
cmp
ds
add
insl
nop
jae
push
outsl
and
testl
fsub
dec
inc
sbb
jmp
push
cmp
aam
les
hlt
jnp
jp
and
ja
cmc
inc
mov
rol
or
jb
sbb
jno
sbb
xlat
filds
push
imul
pop
dec
mov
push
sahf
push
push
stos
lcall
cmp
shll
testl
mov
roll
and
jne
cld
adc
add
mov
lcall
jmp
outsl
xor
mov
xlat
add
jp
out
movsl
ljmp
lahf
pop
movsl
and
inc
adc
pop
stos
jg
mov
mov
sbb
and
fidivrs
aam
sub
mov
xchg
loope
sbb
xchg
std
cmp
cld
adc
xchg
popf
inc
les
stos
int
pop
pop
dec
mov
mov
ja
ja
push
jo
inc
adc
pusha
outsl
stc
dec
jae
mov
lea
cmp
cmc
loope
xchg
aas
rorb
xchg
adc
mov
mov
notb
pop
xchg
sub
daa
out
cmp
out
xor
out
lods
rcr
add
adc
push
and
lods
jo
outsl
mov
repz
push
or
pop
add
sbb
mov
and
cwtl
das
inc
xchg
lods
push
inc
sbb
dec
jne
pop
rorl
lret
notb
dec
andl
mov
or
hlt
sbb
mov
fs
sub
sbb
into
sub
call
test
xchg
sbb
fcoml
mov
outsb
mov
mov
cmpsl
ret
sub
into
lods
dec
jmp
and
xor
add
ret
and
movsb
or
mov
leave
pop
fdivrs
jne
jl
xchg
jg
push
xor
shlb
les
jl
push
or
scas
add
ret
js
fwait
or
mov
add
scas
jmp
push
call
aaa
cmc
into
and
mov
push
fcomip
aas
fidivl
cmpsl
js
ret
dec
ficoms
sarb
push
daa
cmp
push
stc
rolb
rcrb
fidivl
push
out
xchg
mov
sub
repz
sub
aas
int
sbb
fnstenv
movsl
das
stc
adcl
jg
andb
pushf
mov
enter
xor
js
mov
outsl
mov
push
mov
xor
cmpsl
enter
push
cmp
aad
enter
flds
mov
outsl
mov
xchg
cltd
jmp
mov
cli
arpl
enterw
adcb
insl
call
lock
into
pop
sbbb
test
mov
jmp
xchg
aas
popa
lods
sbb
mov
or
cmp
fmull
shlb
mov
ret
and
insl
adc
dec
lods
mov
push
arpl
push
push
addr16
sbb
gs
arpl
mov
andb
in
or
bound
inc
xchg
test
aaa
rcrb
std
and
push
sahf
adc
or
lods
insb
push
jecxz
adc
or
dec
pop
lds
popa
jp
jl
fst
stos
std
xor
lea
pop
pop
daa
scas
push
sub
popa
sbb
ja
cmp
jg
adcb
cs
aas
sub
cmpsb
or
jle
cmp
dec
aas
mov
and
xlat
push
iret
and
scas
aad
std
test
daa
or
jle
aaa
mov
ds
inc
inc
pusha
dec
imul
and
dec
shl
xor
pop
adc
xchg
wrmsr
sbb
sub
ds
lcall
mov
mov
les
ss
dec
out
hlt
pop
xchg
loop
dec
jns
xor
shlb
out
fimuls
rolb
push
lahf
mov
and
in
sub
outsb
ja
xchg
fs
scas
fbld
cmp
scas
loope
cmp
cltd
pusha
sub
stc
insb
das
movsb
jnp
xchg
add
xor
jge
test
xor
rclb
rcrl
mov
dec
or
pop
cmp
aas
xchg
or
xor
lds
nop
cli
mov
lea
je
pop
fsubr
arpl
adc
and
andl
inc
inc
mov
jne
clc
lret
jbe
into
xor
mov
lret
dec
inc
jmp
loopne
arpl
inc
add
enter
mov
add
jae
mov
pop
add
int3
xchg
out
xor
mov
xor
push
add
test
mov
jne
inc
push
sbb
in
push
jb
int3
xorl
les
dec
enter
rcrb
inc
pop
jmp
mov
or
and
popa
mov
scas
jns
inc
sbb
dec
mov
jmp
lods
daa
sti
lods
inc
mov
cmpl
shr
aas
push
pop
adc
cmc
inc
xchg
cmp
cmp
lahf
or
lcall
icebp
inc
cmc
loope
sbb
sbb
clc
loop
jns
sub
xor
fbstp
fcomip
pop
mov
sub
cltd
xor
gs
mov
sbb
test
mov
clc
push
ja
sbb
movsl
jb
arpl
aam
sahf
shl
les
push
in
xor
iret
movsb
mov
in
daa
js
popa
fwait
imul
loopne
push
jns
int
ret
dec
and
mov
and
inc
outsl
and
scas
mov
xor
pushf
in
mov
aaa
negl
loop
sbbb
cmp
cli
xlat
xor
out
sub
adc
or
or
dec
neg
xchg
cmp
push
xor
push
mov
insb
lock
mov
test
fnop
test
orl
lcall
xor
nop
pop
add
xlat
inc
adc
push
push
push
jmp
hlt
mov
xchg
and
pop
lods
mov
popl
adc
leave
push
cmp
dec
mov
xchg
out
ret
dec
jne
bound
dec
pushf
and
mov
cltd
jp
lahf
pusha
adc
hlt
jge
repz
loop
or
out
fldl
inc
and
dec
mov
fnstcw
mov
push
pop
inc
sbb
xchg
sbb
nop
adc
adc
ljmp
scas
xchg
jo
inc
inc
or
dec
arpl
inc
loopne
jl
mov
jo
rorb
push
dec
insb
out
dec
dec
scas
pop
mov
inc
orl
or
xchg
pop
into
icebp
mov
sub
test
ss
mov
push
pop
cmp
push
and
cs
outsb
xchg
ss
pop
add
push
mov
mov
sub
cmp
sbb
pushf
jo
fisttpll
xor
jne
and
adc
pop
sahf
adc
xchg
les
pop
sub
pop
das
ret
rcll
push
lret
bound
mov
lds
and
out
mov
mov
xchg
jp
flds
cwtl
push
cwtl
inc
jmp
or
inc
cmp
add
out
ficomps
dec
call
cmp
ljmp
pusha
mov
mov
mov
mov
xor
and
xchg
jmp
aas
dec
sub
sahf
add
faddp
repz
repz
mov
out
imul
lret
mov
iret
sbb
cli
int
mov
add
cmp
pop
lock
lock
aas
jne
jns
cmpsb
push
mov
mov
jge
sub
add
and
fdivr
jp
in
divb
push
mov
ja
loopne
sbb
and
adc
cmp
iret
es
insb
stc
dec
lret
inc
push
add
dec
xchg
mov
mov
daa
imul
hlt
outsl
inc
pop
fisubrs
aad
add
fadds
push
ficoms
push
inc
fdivrp
mov
inc
mov
xchg
test
movsb
imul
lock
ljmp
jecxz
gs
mov
mov
mov
inc
push
add
dec
out
mov
pop
sub
lret
das
loopne
js
int3
adc
or
stos
xor
mov
shr
test
cmp
xchg
inc
adc
and
data16
sbb
dec
lahf
idivb
add
mov
in
jne
andb
lcall
sbb
pop
or
mov
sub
jl
jno
outsb
jns
pop
mov
mov
dec
jmp
rolb
dec
inc
pop
sub
and
pop
sbb
xchg
loop
adc
mov
push
lds
in
mov
loope
sti
iret
or
add
or
in
scas
push
inc
mov
mov
adc
add
mov
xor
insl
jmp
inc
hlt
xchg
jnp
xorl
push
mov
mov
movsl
lods
push
fcompl
sarb
sbb
cmp
stos
mov
push
pop
fldcw
sub
dec
and
or
push
xor
lock
addr16
and
and
mov
call
js
insl
das
in
mov
dec
cwtl
mov
ss
ss
pushf
ja
outsl
lods
ss
cwtl
inc
jo
sub
pop
call
das
pop
mov
pop
xorb
jg
fdivrp
test
xor
xchg
stos
pop
test
cmpsb
outsb
push
dec
push
leave
add
dec
sub
jmp
mov
push
push
lods
scas
jb
push
loopne
xchg
jecxz
loopne
shr
jg
insb
sub
and
test
in
mov
enter
ja
or
or
pop
ds
xor
push
and
cwtl
push
adc
mov
or
mov
sbb
mov
lcall
inc
pop
cmpsl
pop
jbe
aas
add
test
setg
mov
insb
cmp
sub
in
dec
mov
or
push
dec
lret
lea
hlt
mov
and
clc
daa
je
sbb
addr16
clc
xchg
ljmp
jb
into
imul
sbb
or
xchg
xchg
and
xchg
cmp
mov
cmpsb
or
sbb
test
outsb
mov
jmp
mov
icebp
ja
cmpsb
add
cmp
pop
loopne
int
or
fmuls
cmc
pop
dec
sbb
outsl
insb
mov
int
push
xchg
out
dec
pop
push
jns
cmp
xchg
adc
inc
lea
je
jge
mov
xor
jle
inc
jl
and
lds
or
inc
sahf
and
subb
and
icebp
jecxz
popa
popa
inc
sahf
hlt
test
in
dec
push
pop
out
imul
cmpsl
addb
cmp
fisttpll
pop
iret
popf
mov
imul
cmp
imulb
jl
mov
sbb
jae
pop
jle
dec
fcomps
push
xchg
in
or
imul
sbb
cmpsb
icebp
jae
dec
call
mov
adcb
mov
xchg
out
cmc
out
repnz
jno
or
lea
out
fwait
scas
adc
out
jns
call
rcll
das
in
cmpsb
push
fidivs
pop
pop
cli
or
orl
inc
sbb
aad
xor
stos
mov
xchg
loop
lahf
mov
fwait
call
and
rcrb
int3
fadd
cmpsl
std
fs
cwtl
sahf
mov
lods
int
inc
test
dec
push
xor
push
jle
mov
fdivl
mov
mov
insl
xchg
ffree
adc
outsl
cld
cmp
mov
sbb
loopne
mov
push
xchg
int
int
cwtl
ja
out
mov
mov
fists
repnz
in
mov
andb
leave
cld
icebp
je
pop
pushf
arpl
or
lock
in
arpl
mov
push
xor
rolb
repnz
out
aam
and
test
add
in
orb
imul
jle
cmp
mov
hlt
popa
push
adc
insb
outsl
lods
movzwl
push
gs
jo
mov
aad
cltd
scas
scas
cmp
sbb
je
arpl
cmc
adc
push
add
xchg
pop
inc
inc
cmpsb
cmp
sbb
inc
fcmovnb
mov
mov
test
jb
or
test
push
add
mov
xchg
dec
jle
mov
andl
and
aam
sub
aaa
push
pop
scas
cmpb
mov
mov
inc
ss
sti
add
cmpl
inc
inc
jnp
mov
gs
jns
cmpl
add
pop
pop
addr16
sbb
cli
std
movsl
or
movsl
filds
add
dec
pop
jecxz
std
int
jns
shlb
mov
adc
cli
adc
pop
or
leave
or
test
xchg
add
xor
jo
iret
cmp
aas
sbb
lods
mov
adc
pusha
test
push
xor
repnz
jns
push
mov
and
push
mov
loop
sahf
in
mov
rcl
es
adc
cwtl
pop
pop
cmp
xlat
lret
test
xchg
mov
push
mov
xchg
ss
mov
sahf
sbb
or
mov
mov
out
push
outsl
test
pop
ljmp
push
out
push
into
out
loope
pop
pop
lret
mov
dec
test
cmpsl
jns
jb
add
cmpb
dec
adc
repnz
mov
loope
and
outsb
mov
xor
loope
call
mov
inc
cmp
sahf
or
jg
fdivr
jecxz
movsl
pop
xchg
cmpsl
out
lock
jg
fisubrs
or
sbb
xchg
push
pop
push
jb
jb
mov
add
es
out
in
push
stos
ss
sbb
repnz
sysenter
std
in
fists
or
sahf
out
shll
out
lret
jno
out
std
scas
pop
pop
mov
pop
sarl
lret
xor
mov
pop
sbb
lret
aam
mov
clc
jmp
shlb
scas
int
inc
out
xchg
loopne
int3
mov
dec
mov
add
rorl
pop
in
add
or
mov
inc
xor
xchg
xchg
call
mov
adc
rcrl
mov
cmp
mov
pop
mov
dec
pop
lret
enter
test
mov
outsl
sub
imul
loopne
dec
push
mov
lock
push
mov
std
into
adc
xchg
leave
jg
lret
xchg
dec
push
sti
mov
in
inc
sbb
sbb
mov
iret
mov
adc
in
mov
jns
sti
inc
shrl
mov
imulb
scas
out
leave
mov
mov
int3
mov
and
dec
mov
mov
or
pop
sbb
test
inc
jbe
mov
jmp
rol
push
push
mov
pusha
xchg
cmp
divb
push
inc
and
pop
inc
adc
inc
sub
mov
stos
lahf
js
pop
cmp
out
enter
mov
jbe
cmp
aam
lods
lock
jle
xor
in
xor
jb
sbb
mov
jae
lds
test
scas
pop
xor
scas
pop
sti
stos
xchg
nop
in
out
stos
xchg
mov
adc
jp
pop
sub
stos
insl
xor
fs
xor
pop
add
mov
shll
out
push
jmp
loop
adc
pslld
mov
xchg
cmpl
push
xchg
and
fnstsw
fwait
sbb
lcall
jbe
and
loopne
lea
inc
sbb
mov
and
xchg
dec
pop
mov
xlat
push
dec
shlb
stc
mov
dec
mul
pop
mov
mov
fildl
outsb
popa
daa
inc
xchg
pop
sub
pop
fdivrs
xorl
imul
das
in
mov
mov
sbbb
in
mov
xor
das
push
scas
orl
ss
insl
stos
cmp
pop
or
test
mov
loopne
in
jne
mov
roll
inc
xor
test
pop
std
loopne
sbb
dec
push
movsl
or
shll
push
pop
and
lods
lds
das
inc
scas
pcmpgtb
insl
or
cld
sub
sub
add
xor
lret
pop
mov
pop
call
jb
pop
stc
mov
clc
jle
mov
sbb
rorb
arpl
je
mov
adc
addr16
adc
adc
ss
insl
dec
xor
dec
lret
out
rolb
or
or
mov
sbb
pop
enter
insb
sub
xchg
fiaddl
add
add
adc
xor
xor
or
cmp
jle
sbb
shl
stc
cmp
jnp
sub
mov
mov
xor
dec
sub
jae
mov
das
xchg
inc
xchg
mov
daa
cmp
es
xor
adc
pop
jmpw
inc
aaa
ret
pop
clc
sbb
cwtl
out
add
mov
pop
sub
shlb
pop
xchg
xchg
xor
loopne
and
std
dec
leave
sub
lds
xchg
mov
mov
xor
jmp
pop
aaa
int
mov
fstps
in
pop
sbb
mov
pop
mov
jb
sbb
jl
add
scas
jno
movsl
decl
lret
dec
stc
aas
pop
adc
mov
sub
add
xor
mov
jne
lahf
scas
out
sbb
icebp
xchg
mov
dec
sbb
add
mov
andb
repz
nop
repnz
and
lcall
orb
cmp
jbe
dec
push
sub
iret
jb
or
rorl
rcl
push
mov
pop
cmp
std
mov
loopne
es
rcll
dec
and
and
jo
test
and
push
mov
movsl
push
lods
test
aad
adc
xchg
dec
mov
xchg
mov
inc
add
jg
jg
sub
setle
xchg
add
push
dec
iret
jp
mov
push
ss
jl
mov
in
adc
inc
leave
inc
test
test
pop
mov
stc
rol
dec
repnz
jle
dec
dec
dec
fiadds
in
addr16
and
popf
jo
fisubrs
pop
pop
push
shrl
or
cltd
aas
dec
shl
loope
xlat
sub
mov
jg
and
mov
cmp
dec
ds
nop
sti
add
or
outsb
inc
cli
outsb
mov
scas
and
in
and
lods
inc
and
jecxz
dec
aad
fistps
and
mov
mov
hlt
dec
mov
ljmp
fistpl
inc
push
iret
or
lahf
pop
inc
call
in
rcrl
cmp
inc
push
or
dec
scas
xchg
pop
dec
xchg
test
mov
dec
jns
in
adc
mov
pop
into
rorb
add
push
pop
test
aaa
in
dec
xchg
push
sub
pop
mov
sbb
cmp
mov
outsl
cmp
call
pop
jnp
sub
pop
adc
mov
dec
icebp
mov
aad
addr16
dec
mov
xorb
adc
sub
lea
mov
fsub
xchg
out
xor
cld
notl
mov
movsl
popf
inc
into
mov
mov
push
and
xchg
pusha
and
inc
inc
pushf
loop
insl
int3
cltd
adc
or
push
mov
je
loopne
popa
nop
or
jne
sub
jl
int
loopne
ret
arpl
mov
ja
test
pop
test
popa
enter
pop
mov
mov
loopne
push
loope
scas
xchg
cmp
inc
fistps
pop
xor
xchg
mov
sbb
xchg
pop
jo
jbe
sub
testl
sub
push
into
test
shrl
push
jne
xchg
or
cmpsb
jmp
sarl
pop
push
dec
or
mov
nop
xchg
sbb
pop
test
decl
shrl
lods
sub
dec
test
xchg
mov
mov
inc
sbb
jae
cmp
and
mov
in
push
or
lods
test
inc
mulb
inc
cmp
adc
movsl
cwtl
sbb
dec
sbb
dec
sbb
add
pop
sbb
inc
dec
nop
inc
add
pop
mov
test
loopne
aas
inc
dec
and
imul
jb
adc
add
mov
lret
loopne
fsubrp
out
push
shr
int
inc
lret
imul
dec
inc
aad
test
pop
push
push
addr16
out
imul
repz
pop
lret
out
testl
lret
movsb
daa
xchg
mov
dec
xchg
shrb
addr16
xchg
data16
stos
pop
jo
cli
loop
aad
mov
jge
int
mov
jae
xchg
ret
pop
cmp
mov
outsb
mov
mov
cmp
mov
in
rorl
pextrw
jp
xor
sub
xchg
int
shrl
inc
push
lret
mov
sbb
iret
adc
pop
sub
dec
dec
dec
js
pop
stos
and
out
sub
xor
inc
xor
jne
pop
fwait
push
je
sub
add
loop
sub
pop
and
mov
lea
loope
pop
fwait
out
mov
or
mov
adc
shll
aam
insb
sub
mov
xchg
jecxz
push
adc
roll
push
jae
and
pushf
push
lret
jecxz
xchg
out
inc
das
fnstsw
push
icebp
add
dec
pop
or
aam
lcall
mov
mov
pushf
xor
xchg
jb
out
push
jle
pop
inc
repnz
in
lret
pop
mov
cltd
into
int
and
push
xchg
and
jne
jae
cmpsb
inc
cmp
xchg
ret
leave
jae
sti
fadd
dec
sbb
test
outsl
push
cltd
dec
iret
inc
push
in
cmp
loop
mov
push
iret
push
and
out
js
cld
mov
push
fcomip
xchg
orb
or
pmulhuw
sub
mov
cmpb
repz
push
mov
mov
div
add
sub
jge
push
sub
inc
cmp
fwait
mov
lock
sbb
push
push
gs
stos
out
ds
movsl
dec
imul
xor
inc
test
enter
adcb
pop
mov
push
add
lret
mov
jg
bound
cmpsl
fwait
jle
mov
mov
negl
lea
and
xchg
and
push
push
pop
ffreep
andl
add
sub
subb
adc
dec
or
lds
sub
sbb
dec
into
scas
or
gs
pusha
outsl
in
iret
pop
cmp
pop
mov
jle
pop
dec
jecxz
jle
ficoms
jge
mov
cmp
dec
das
xchg
xchg
les
daa
sbb
push
sbb
xchg
popl
lret
scas
cmp
lds
xchg
fildll
inc
lret
dec
out
nop
push
pop
loope
ret
sti
lcall
add
lock
inc
movb
adc
popa
sub
shl
call
push
enter
cmpsl
cmp
repnz
ss
lods
mov
mov
add
push
int3
mov
negl
jecxz
xchg
jp
jnp
or
jns
or
inc
mov
fisttpl
adc
push
pop
enter
mov
pop
inc
leave
fsubr
out
ja
enter
mov
fsts
xchg
lds
pop
out
dec
into
dec
ficoml
mov
bound
imul
stos
sti
cmpsl
mov
mov
fs
jnp
dec
jno
insb
mov
out
in
dec
cmpsb
lods
repnz
or
add
pop
cmpsl
xor
insl
mov
inc
jbe
adc
xchg
fcomi
pop
shll
mov
jo
mov
dec
scas
lds
test
das
and
bound
add
ret
adc
and
out
daa
out
sub
ljmp
sub
inc
fucom
or
fimuls
xor
leave
and
pop
out
loopne
xchg
aaa
cmpb
rcrl
cmpsl
fmul
in
imul
inc
hlt
shrl
cmp
add
rorl
icebp
es
jno
pop
aad
mov
sub
add
cmpsl
int
mov
movsl
popa
inc
mov
aad
mov
js
push
hlt
icebp
xlat
or
js
dec
stos
addl
mov
loope
fcmovnu
cmc
hlt
xor
or
cmc
loop
cwtl
out
xor
mov
in
xchg
pop
mov
jb
inc
repz
add
mov
mov
in
lahf
xor
pop
aas
adc
aam
pop
mov
jmp
cmc
adcb
iret
pusha
arpl
and
icebp
dec
lret
pusha
into
cmp
jmp
loop
insl
push
popa
fsubr
sahf
cld
cmp
dec
mov
aaa
lret
inc
pop
subb
cmp
xchg
add
lea
push
outsl
sbb
sbb
pusha
add
inc
jae
shll
insb
loop
lret
aad
dec
pusha
mov
mov
jp
loopne
fs
shl
push
inc
bound
shlb
inc
and
push
xchg
sti
mov
jecxz
subb
imul
push
add
std
ret
push
fwait
mov
and
fimull
jp
shll
addr16
mov
jae
outsl
repnz
aaa
out
and
lret
leave
mov
cmpsb
xor
sub
push
mov
arpl
imul
xor
mov
imulb
sbb
pop
imul
stos
add
arpl
push
mov
dec
out
mov
xor
push
mov
stc
cmpsb
imul
pop
fdivrl
mov
xlat
ret
add
outsb
lea
or
mov
fs
out
popf
cld
xchg
sbb
lret
mov
xor
xchg
inc
insb
outsb
xchg
add
sar
bound
adc
lods
lods
xchg
adc
and
add
jb
test
inc
es
popa
jnp
mov
cltd
mov
jl
lret
movlps
lcall
inc
rolb
push
jmp
xor
push
shlb
daa
or
inc
sbb
ja
mov
inc
mov
dec
js
pushf
mov
test
loopne
sub
into
xorps
dec
pop
fdivrs
cltd
mov
push
xorb
jbe
mov
nop
in
dec
or
adc
xchg
insl
test
insl
stc
xchg
push
addr16
jns
add
mov
aaa
mov
pop
enter
out
mov
dec
adc
sbb
repnz
mov
pop
sbb
pushf
fsts
addr16
mov
es
pushf
lock
lret
stos
xorl
add
stos
dec
add
jns
add
sbb
test
inc
sub
test
xchg
lods
hlt
test
outsl
add
inc
adc
lahf
jp
mov
sub
je
stc
scas
mov
out
fmulp
add
pop
add
mov
rolb
push
jnp
scas
inc
mov
mov
jae
stc
mov
mov
call
fistpll
mov
shl
add
dec
jg
cmp
insl
cmpsl
lret
cmpb
rcrl
in
mov
jne
mov
sbb
adc
fs
scas
sub
jns
mov
pop
and
test
xchg
cmp
dec
mov
and
xor
dec
cmp
mov
fmul
xabort
gs
xor
out
jl
sub
pop
stos
fimuls
cmp
mov
jae
pushf
jno
cmp
insb
cmpsb
xor
jb
xor
jmp
xchg
pop
xor
cmpsl
outsb
shl
push
pop
add
and
push
xchg
dec
lcall
jno
pop
xor
pop
movsl
aas
loopne
push
data16
je
inc
sub
aas
lahf
sbb
das
jno
popa
or
dec
ljmp
int3
mov
push
stos
inc
scas
stos
pop
sub
nop
je
pop
inc
sar
and
cmp
leave
or
xchg
push
pop
or
inc
into
cmp
adc
mov
xor
mov
inc
jge
out
add
mov
ror
or
je
lods
add
inc
or
cmp
out
out
sbb
mov
mov
dec
aam
dec
mov
outsl
popa
idiv
imul
mov
fnsave
fwait
dec
mov
addr16
or
inc
push
fldl
inc
xchg
sbb
pop
popa
nop
inc
add
cmp
mov
loope
xor
pop
add
mov
cmp
sbb
push
sbb
push
adc
imul
fcomps
lret
sub
sarl
xchg
into
and
lods
adc
out
das
push
pushf
xor
mov
mov
addb
and
adc
fbstp
ret
ds
inc
popa
cmpsl
in
xchg
push
adcl
test
dec
je,pn
adc
lock
out
jmp
or
ret
fildl
or
jg
jo
add
imul
pushf
cmp
stos
sahf
cmp
int
or
stos
dec
inc
cs
pop
xor
adc
int3
nop
repz
aas
add
mov
cmp
testb
inc
pop
fildl
in
pusha
in
cltd
mov
insb
lods
xchg
and
and
adc
inc
lock
cmp
cmp
adc
ret
pop
push
mov
dec
cmpb
mov
inc
test
pop
push
dec
mov
int
ds
test
adc
cmp
cmp
jg
mov
sub
rcr
es
xlat
mov
bswap
jle
repz
mov
mov
in
mov
jg
mov
test
dec
mov
push
dec
int3
pop
sub
rol
cs
sub
xor
cmp
inc
sbb
mov
or
js
pop
shlb
test
loop
lahf
mov
push
jl
std
ja
pusha
cwtl
stos
pushf
or
call
incl
jo
mov
sahf
inc
jo
test
xchg
arpl
rorb
xchg
and
sbb
xor
cltd
sub
sbb
add
cwtl
push
mov
cmp
pusha
shrb
data16
pusha
in
int3
sbb
dec
or
push
jecxz
dec
mov
adc
shll
jbe
sbb
movsb
add
jnp
clc
out
pop
jmp
jle
pop
inc
fwait
testb
aad
sbb
push
inc
aam
mov
add
in
ret
jae
ja
ljmp
and
and
pop
movsl
in
xchg
cli
outsl
in
dec
mov
jb
jmp
fistpl
mov
clc
dec
insb
and
icebp
adc
bound
and
imul
add
fmul
jmp
insb
rolb
push
mov
mov
mov
or
and
mov
pushf
pop
push
js
sub
xchg
lahf
pop
add
pusha
xor
outsl
movsl
adc
popa
mov
jne
test
push
stos
jns
sub
shlb
pop
pop
shll
mov
rolb
nop
mov
in
pushf
outsb
sbb
sub
or
jmp
dec
insl
pushf
or
sub
push
mov
push
adc
bound
sbb
movsb
and
inc
jne
cltd
and
mov
pop
mov
cmp
mov
jmp
xchg
loope
call
fists
pop
stc
push
lcall
icebp
push
call
idivb
cmp
mov
sub
xor
dec
dec
sbb
and
dec
aas
out
and
test
mov
pop
sbb
mov
push
shlb
imul
sbbl
daa
pop
aam
in
xchg
xorl
cmc
sub
das
outsb
jo
xchg
or
not
pop
insb
xchg
sub
lcall
pusha
movsl
mov
inc
and
ret
jns
loop
mov
mov
xchg
fwait
xlat
cmp
push
xor
out
int3
testb
hlt
mov
aad
int3
sbb
pand
cmp
pop
sub
je
pop
lret
insl
rcl
loope
bound
in
lret
leave
sbb
scas
jno
inc
enter
bndstx
jmp
mov
lahf
aaa
and
aad
das
in
jno
ja
inc
adc
push
xchg
push
fcompl
xchg
sub
test
and
add
pop
jmp
nop
dec
cmpsl
xor
popa
jl
jne
jge
mov
add
call
adc
dec
int
push
mov
mov
adc
xor
inc
sub
jmp
repnz
mov
mov
rcll
popf
mov
mov
fbstp
out
mulb
push
mov
mov
lods
dec
xchg
cmp
xor
movsb
fwait
mov
imul
shlb
dec
jno
jne
popa
jb
inc
xchg
or
enter
addr16
push
cmc
stos
lret
loop
adcl
add
mov
ja
ds
call
dec
jle
mov
mov
jge
lret
lahf
scas
push
cmp
sahf
adc
arpl
data16
cmp
lahf
adc
mov
sahf
loop
in
aad
leave
scas
stos
push
push
lahf
jne
addl
std
pop
xchg
test
loop
push
xchg
out
test
mov
addr16
cltd
xchg
or
lea
xor
sub
lahf
movsl
ja
add
rol
dec
test
fcompl
xor
pusha
sub
stc
adc
popa
leave
in
jns
jns
sub
ljmp
fs
loope
sbb
mov
xorb
cltd
xor
fmulp
fwait
jo
loopne
pop
andl
imul
add
sarb
out
pop
icebp
cmpsb
jno
lea
push
inc
ret
movsb
ljmp
js
mov
push
pop
fiaddl
cmc
jecxz
xchg
pop
add
repz
xchg
stc
pop
lds
jnp
xor
xchg
push
insl
add
frstor
leave
out
stos
decb
push
xchg
adcl
fwait
pop
pusha
dec
sbb
push
nop
insb
imul
inc
sbb
dec
sbb
test
in
and
inc
cli
xchg
iret
push
mov
jns
sub
test
scas
xor
in
sbb
sub
jle
mov
or
pop
xchg
xchg
xchg
push
pop
rorl
lcall
hlt
out
mov
sbb
cld
testl
fidivs
sbb
in
lret
sbb
loop
imul
xor
jbe
jge
ss
adc
in
xchg
test
dec
add
sbb
pop
hlt
ljmp
dec
testb
cmp
iret
imul
sbb
aad
sub
push
fwait
rorb
push
sbb
push
jmp
xchg
loope
adc
outsl
loope
loop
pop
sub
jmp
arpl
xchg
rclb
scas
shrl
and
fs
mov
cmpsb
aas
cmpsb
pop
clc
xchg
adc
dec
in
xor
sahf
cmp
pushf
int3
adc
jo
adc
addb
push
aaa
jno
incb
testl
inc
shll
jne
add
dec
mov
out
sub
and
popl
test
jg
lahf
xchg
push
xchg
add
sbb
nop
addr16
stos
inc
inc
jl
out
jnp
sbb
movsb
sbb
shrl
outsl
xchg
inc
push
clc
jg
push
lret
out
es
inc
sbb
add
std
push
inc
mov
sub
jmp
push
loope
mov
push
jno
or
pop
jnp
xor
mov
test
imul
lcall
xchg
push
ficomps
in
inc
or
inc
mov
or
pop
sub
in
ficomps
scas
subb
ds
daa
xchg
dec
addl
xor
jnp
mov
sub
pop
mov
pop
pop
lea
mov
in
ljmp
pusha
mov
jmp
cmp
adc
ja
add
push
lock
divl
pop
xchg
aam
insl
pop
mul
jnp
out
xchg
xor
xor
push
jmp
les
popa
cmp
loope
pop
push
cltd
mov
jge
dec
mov
xor
or
cs
push
push
pushf
mov
adc
stc
test
icebp
dec
and
lret
add
test
loope
pusha
xchg
ss
push
inc
imul
es
push
jae
scas
sub
jne
jl
test
fs
mov
jnp
enter
stos
mov
bound
cli
xchg
mov
jo
adc
xchg
insb
xchg
lcall
stos
lret
or
mov
gs
pop
pop
loopne
sub
adc
dec
pcmpeqw
fprem
jbe
jle
test
cmp
pop
jp
push
test
loopne
outsb
lahf
jmp
sub
imul
mov
mov
jb
aad
or
repz
cmp
jno
into
dec
mov
cmc
cmc
idivb
dec
adc
rorb
mov
popf
lea
pusha
push
js
pop
les
push
stos
test
imul
shl
sti
mov
cmpsl
sbb
insb
icebp
or
insb
jnp
pop
add
fiadds
rcrl
push
pop
imulb
ret
sub
push
ss
addr16
jno
test
push
jbe
fldcw
aam
mov
jb
xor
jle
mov
aad
out
ja
xchg
hlt
cld
rol
add
cmp
and
pop
dec
daa
sahf
cli
push
rorl
bound
call
in
mov
add
das
sahf
inc
cmp
adc
xor
xchg
sahf
or
sbb
sahf
cmp
aad
ficomps
xchg
cmp
dec
jo
shr
mov
sbb
sub
insb
lret
adc
lcall
das
test
movsb
inc
movsb
dec
clc
insl
movsb
pop
jnp
repnz
sahf
cmp
mov
lock
sub
jno
jne
push
enter
cltd
inc
les
je
in
xlat
das
out
sbb
je
lret
push
xchg
mov
mov
pop
cmp
sti
mov
mov
cltd
icebp
ljmp
jns
loopne
filds
inc
inc
jmp
loop
mov
lock
test
test
cmpsl
lcall
adc
pop
icebp
add
mov
jp
push
pop
popf
clc
dec
repz
ret
adc
lds
iret
dec
das
je
repnz
out
cmpl
call
cld
mov
push
pop
mov
imul
dec
cld
push
and
dec
add
mov
mov
pop
push
push
cmp
sbb
test
int3
cwtl
repz
xchg
adc
adc
cmp
push
pusha
push
push
xchg
add
in
scas
repz
notl
mov
mov
xchg
mov
ficoms
inc
sub
mov
pusha
inc
jge
frstor
push
sub
pop
pop
dec
sbb
stos
stos
mov
std
add
xchg
icebp
les
jmp
pop
inc
xchg
aaa
outsb
ljmp
scas
jae
xlat
ficoml
idivb
xlat
pop
xor
dec
scas
and
jb
data16
push
hlt
mov
andl
mov
filds
adc
push
dec
jecxz
or
mov
or
or
add
push
push
scas
scas
roll
loope
sub
sbb
inc
add
ljmp
ss
pop
cs
repz
aad
fs
xchg
adc
loope
lods
dec
add
pop
ds
and
pop
cltd
movsb
push
jnp
sbb
cmp
and
add
push
dec
or
adc
cs
jmp
pop
sub
test
sysexit
or
iret
xchg
push
cmp
mov
mov
ja
mov
icebp
cltd
fsts
add
push
mov
push
or
sbb
or
repnz
cmp
jg
sbb
in
push
sub
cmc
xchg
test
loopne
int3
or
cmpsb
push
loope
xor
and
fwait
lock
es
lods
pop
fcomps
adc
inc
loopne
in
sub
adc
aam
inc
insl
call
sbb
test
aad
std
xor
mov
mov
insl
in
and
cld
add
cld
add
fwait
and
std
cmp
pop
popf
iret
adc
pop
out
shr
mov
sbb
or
jmp
jl
imul
or
add
rcrl
xchg
dec
pushf
sbb
in
bound
push
inc
mov
mov
inc
mov
shll
or
or
inc
xor
repnz
dec
jo
daa
jb
inc
int
mov
cli
stos
mov
or
or
repnz
mov
gs
stos
pop
stos
pop
inc
pushf
mov
and
stc
mov
inc
mov
push
pop
or
or
int3
or
jp
mov
out
pushf
std
mov
shlb
test
arpl
xor
sub
add
and
mov
aas
adc
mov
inc
cmp
mov
stos
and
mov
xchg
inc
pop
inc
out
inc
popa
int
shll
ja
gs
inc
dec
les
mov
inc
push
ret
scas
lock
into
mov
sbb
clc
jl
xchg
and
mov
jns
jo
mov
das
mov
scas
int3
xor
das
and
sbb
in
je
adc
push
testl
or
fidivs
test
add
mov
shlb
call
mov
test
les
scas
mov
jmp
ss
fldl
xor
bound
pop
aaa
roll
jecxz
es
popf
shrl
inc
jnp
mov
sbb
pop
xchg
movsb
adc
pop
xchg
sti
add
cmovge
adc
jae
and
adc
out
xchg
push
push
sar
or
adc
into
jle
sbb
inc
ror
ljmp
out
das
xchg
and
scas
dec
into
jp
movsl
inc
nop
sbb
mov
bound
repz
xlat
addl
and
pop
insb
rcrl
std
and
daa
in
add
sbb
cltd
xchg
test
ss
add
imul
aad
fsubrs
mov
push
cmp
stc
xchg
jp
dec
loop
pop
lret
lret
aad
je
push
sbb
fidivrl
push
out
lods
lods
into
outsl
bound
mov
inc
aaa
pop
dec
in
dec
data16
std
xor
loopne
stos
repz
shlb
mov
cld
push
mov
adc
add
sbb
xchg
aad
jno
mov
mov
clc
test
cld
and
popf
xor
pop
or
lock
mov
or
jne
mov
jg
jnp
in
sbb
ss
push
out
lret
pop
in
xchg
mov
je
lods
lret
mov
lahf
jmp
out
mov
xchg
fmulp
jne
scas
cli
xor
inc
pop
inc
and
scas
cmp
xchg
inc
and
or
mov
cmpsb
pop
lret
mov
test
test
jns
cltd
inc
scas
and
shl
insl
shll
les
xor
outsl
inc
sub
popf
dec
xorl
int
negl
xchg
out
sbb
out
outsl
mov
cmp
leave
dec
pushf
add
dec
add
inc
mov
cmp
jge
cwtl
cld
dec
leave
xchg
cmpsl
cltd
out
jno
cs
inc
addr16
adc
pop
sbb
int3
cmp
lea
fucomip
mov
mov
jmp
sub
negb
out
sahf
dec
jns
xchg
inc
pop
xor
scas
jo
adc
fnstenv
sub
inc
rcrl
in
inc
gs
pop
arpl
cmpb
xchg
push
notb
lcall
cmp
sub
jnp
out
cmpsl
es
jmp
inc
sub
jle
add
or
shlb
mov
std
jg
dec
xor
mov
jbe
jnp
stos
pop
xor
mov
pop
out
sarb
mov
mov
popa
sub
ds
inc
xchg
mov
mov
loopne
mov
push
add
jp
jne
aad
in
jle
flds
aaa
inc
sbb
and
mov
push
sub
lds
xchg
mov
add
lahf
sbb
xorb
subl
fs
aad
ss
push
subl
and
movups
mov
xor
jmp
cmp
loop
scas
movsb
jns
daa
mov
es
sbb
xchg
jb
mov
or
popf
and
jmp
stos
sbb
mov
stos
adc
push
ja
mov
push
and
movsb
and
fwait
mov
jb
test
fwait
or
jl
adc
mov
pop
jne
ja
push
std
mov
aas
ja
out
mov
sarb
sahf
xor
cmpsb
mov
dec
scas
leave
push
sbb
lret
push
cmp
dec
cmpsl
xor
xchg
arpl
out
xor
inc
xor
or
xchg
push
push
mov
scas
mov
enter
adc
mov
mov
hlt
or
add
mov
xchg
ret
ja
jbe
jge
inc
iret
ret
movsb
and
out
iret
xchg
and
test
and
xchg
xor
dec
ss
push
repnz
cmp
dec
in
push
and
scas
imul
jne
push
inc
rorl
add
sbb
jae
sub
xchg
inc
mov
data16
je
jo
popf
rolb
ret
jecxz
lea
shll
mov
insw
sub
jge
cmpsl
and
push
int3
inc
repnz
out
cmpsl
mov
mov
loopne
sbb
stos
mov
out
cmp
mov
cs
or
pop
pusha
arpl
inc
out
rcl
sub
inc
jae
cmp
inc
sahf
ljmp
push
aas
addr16
xchg
cmc
pop
inc
cmp
lret
leave
cltd
or
in
cli
stc
aas
adcb
push
xchg
cmp
mov
and
push
scas
xor
inc
inc
aaa
cmpsb
inc
mov
sub
and
inc
cmp
add
cmpsb
into
imull
dec
call
cld
test
scas
lea
fwait
cmp
lods
mov
adc
and
jp
adc
inc
push
and
push
imul
cmp
jmp
fdivs
and
ja
or
hlt
add
in
jge
pop
fisttpl
data16
xor
adc
or
aam
pop
shl
adc
imulb
push
mov
xor
mov
lds
push
dec
cmp
cmp
insb
enter
cwtl
push
leave
or
xchg
cmp
fwait
popa
mov
or
fstl
jmp
je
pusha
fstps
add
sbb
cmpsl
mov
std
aad
push
data16
mov
cltd
notb
scas
adc
dec
push
pop
jp
mov
fcompl
push
fsubl
pop
mov
mov
aaa
mov
repnz
sarl
sti
pop
xchg
and
fwait
or
dec
inc
push
leave
sub
xchg
and
cmp
inc
inc
xchg
cmc
cmp
or
push
clc
mov
mov
cmpsl
lret
sbb
fistpl
sub
cli
push
cmpsb
and
movsb
ret
jle
push
mov
xchg
add
iret
or
mov
mov
ljmp
sbb
in
mov
pop
mov
xorb
leave
mov
jns
stos
xchg
fmulp
adc
push
dec
mov
add
xor
push
sbb
movsl
add
test
cmp
adc
test
cmp
insb
aas
inc
addl
add
repnz
jmp
mov
test
rcrl
div
repnz
xchg
pop
aam
jmp
cmp
and
and
xchg
dec
push
inc
pop
dec
pop
dec
and
xor
and
cmp
add
lcall
jae
mov
addr16
jmp
imul
sub
jmp
orl
adc
dec
add
or
sub
ret
pop
lret
gs
cmp
sbb
inc
xchg
addr16
scas
js
xchg
jl
mov
iret
lret
movsb
mov
repnz
lahf
idivb
adc
sbbb
jo
les
inc
mov
adc
dec
sbb
popl
xchg
idiv
call
pushf
imul
push
iret
insl
stos
adc
jo
loopne
imulb
xchg
jb
dec
inc
cwtl
mov
int3
xchg
imul
inc
add
jnp
cmp
push
call
sbb
stos
xor
mov
adc
fdivrl
lock
cld
cmp
fwait
int
iret
push
shll
insb
cmp
mov
shll
mov
sub
dec
xor
ret
pop
xor
cmp
rcrb
in
sti
adc
sti
sti
leave
or
mov
jb
cli
xchg
sarl
mov
sahf
fimull
mov
test
cs
push
pop
insb
aas
shl
pushf
mov
cmp
rcrb
cmc
push
add
lcall
push
test
mov
dec
xchg
mov
ljmp
mov
fildl
arpl
leave
enter
mov
push
roll
add
dec
and
fstpl
xor
call
xor
sahf
pusha
fcoml
push
ficomps
in
fsubs
ret
jnp
nop
pop
jecxz
adc
bound
sahf
xchg
xor
and
mov
inc
lcall
stc
pop
out
mov
push
fsubrl
add
add
andl
xor
mov
xchg
inc
enter
inc
inc
xchg
cmp
sub
mov
inc
lret
popf
loop
pop
dec
aad
dec
inc
loop
int
xchg
xor
jl
xchg
fwait
int3
sbb
aad
rolb
cmpsb
out
push
pop
mov
gs
aam
lods
or
inc
sti
adc
rclb
cmp
icebp
stos
and
cmp
imul
out
ja
shll
mov
push
mov
lret
mov
and
in
andl
mov
cmpsl
lret
es
je
sub
sti
dec
popa
xor
inc
sbb
lcall
test
xorb
jmp
cs
push
xor
inc
or
or
leave
push
sub
cli
cmpsl
shll
loop
loope
and
adc
adc
inc
inc
xchg
push
cli
inc
adc
nop
and
xchg
loop
jmp
pop
mull
in
into
sbb
xchg
bound
push
jbe
and
add
ja
imul
xchg
loopne
jns
lret
cmp
mov
jle
inc
repnz
sub
aaa
push
das
iret
js
cwtl
add
add
mov
sub
xor
and
adc
mov
lahf
adc
loopne
movsl
loopne
cmpsb
mov
rorb
xlat
pop
mov
xchg
mov
lds
test
test
shlb
div
fstp
test
push
rcr
and
inc
sahf
cmp
adc
imul
out
cmc
jo
rcrl
cmpsl
hlt
aad
sub
sub
js
in
in
leave
ror
lock
mov
or
lods
imul
add
out
jnp
fisttpll
movsl
mov
sbb
xchg
sbb
clc
inc
cld
jl
xchg
xor
enter
mov
loop
xchg
push
insl
xchg
call
jl
popf
or
jecxz
lcall
adc
je,pt
mov
pusha
mov
xchg
fstps
imul
sbb
js
daa
jle
jo
cwtl
cld
fcoms
lods
stos
jb
sbb
mov
icebp
in
or
out
mov
or
push
adc
inc
fistl
lods
pop
out
fcmovnbe
xchg
push
add
xlat
cmp
and
aaa
scas
test
and
xchg
sar
lock
dec
sbb
scas
pushf
and
icebp
adc
pop
out
and
or
pop
mov
adc
pop
mov
xor
pop
sub
in
add
test
xchg
sbb
insl
test
or
scas
orl
ds
or
mov
wbinvd
cwtl
in
dec
out
jo
mov
jns
and
pop
and
or
jecxz
sub
es
pop
daa
add
insl
lret
jge
xor
popf
push
jg
imul
xor
xchg
mov
mov
imul
loope
shll
cli
data16
aam
add
sbb
xor
je
icebp
sbb
mov
addb
mov
loope
inc
add
lcall
adc
sbb
cmp
les
imul
add
push
xor
mov
mov
bound
addr16
sahf
pop
xchg
jg
imul
adc
lock
mov
daa
aas
loope
cli
mov
lret
xchg
mov
jnp
jl
push
iret
adc
sbb
loop
mov
push
or
inc
inc
sahf
dec
les
jmp
push
shlb
xchg
push
movsb
inc
push
lock
inc
push
ror
adc
fimuls
movsb
cltd
adc
test
lods
and
jbe
jbe
jp
mov
xchg
out
mov
jl
loop
lds
rolb
in
loopne
jo
ljmp
rcrb
inc
xor
cmp
push
cmc
ss
add
dec
dec
icebp
les
and
outsl
sub
ret
cmpsb
sarb
out
hlt
jnp
dec
cli
ljmp
push
cltd
cld
movaps
stc
cmpsb
les
mov
sbb
jnp
nop
sbb
das
pop
gs
cltd
test
pusha
sti
jp
jnp
iret
sbb
test
mov
mov
sarb
cmp
mov
sbb
gs
je
out
in
xor
iret
mov
in
mov
aaa
imul
xor
out
cmp
shrl
inc
popa
popf
arpl
sub
xchg
cltd
addr16
daa
sub
js
test
mov
sbb
jno
lock
sbb
stos
sub
lea
adc
push
xor
int
gs
push
sub
push
out
fwait
mov
cmc
xor
je
in
test
mov
or
ljmp
lods
aas
sub
in
fcmovnb
mov
insl
test
test
push
mov
inc
loopne
xor
popa
and
scas
les
in
rolb
and
stos
inc
jmp
test
push
cmpsb
inc
shrb
es
dec
and
fsubr
pop
fdivs
fistpl
cmpsl
push
test
xchg
jmp
xlat
dec
outsb
lock
lahf
add
lret
pop
jb
pusha
bound
pop
xchg
mov
les
pusha
loopne
and
enter
leave
insb
mov
xchg
add
out
dec
cld
js
add
sbb
sub
xchg
sbb
loop
lods
outsl
xchg
add
es
int3
lea
and
pop
push
arpl
arpl
push
pop
jle
sbb
add
movsb
lock
jae
inc
dec
xchg
das
lea
mov
sub
popa
xor
xor
addl
sbb
int3
ja
out
or
inc
aaa
jno
push
or
popf
mov
lret
and
cmc
aad
and
lret
push
dec
addr16
adc
faddp
inc
xor
cs
push
mov
mov
in
push
xchg
ret
ljmp
pop
or
sbb
out
imulb
clc
sub
add
clc
or
shll
faddl
aas
or
ret
fxam
imul
add
inc
xchg
into
decb
jmp
imul
sbbb
sbb
pop
jle
inc
cmpsl
sti
ljmp
adc
inc
mov
sbb
cmp
mov
loop
insb
sahf
popa
sub
jb
mov
cmpsl
adc
lcall
fldl
ror
xlat
mov
cmp
loopne
inc
lret
cltd
aad
push
adc
insl
divl
mov
sbb
mov
fcoms
outsw
xchg
jnp
jb
push
sbb
sbb
test
pop
mov
cmp
xchg
sbb
in
mov
mov
in
fistps
enter
add
sti
sub
inc
test
addl
out
popa
lds
mov
and
xor
es
movl
xchg
mov
cmp
dec
adc
mov
lcall
addr16
ret
xor
push
inc
arpl
in
imul
jmp
fists
insb
cli
dec
orl
xchg
and
rcr
ret
out
push
jg
inc
sti
sub
mov
mov
adc
lret
mov
movsb
inc
xchg
inc
outsl
jo
test
xchg
call
push
dec
repz
ficompl
loope
lret
nop
das
int3
add
fwait
push
testb
out
mov
out
cmp
fisttpl
sbb
out
addr16
mov
jae
enter
jecxz
push
aas
leave
adc
lret
dec
jle
push
or
out
and
adc
bound
insl
inc
lea
int3
scas
mov
push
jns
sub
xchg
scas
aas
lds
cmc
shll
mov
cmc
sbbl
subb
jmp
jmp
mov
pushf
adc
in
push
pop
and
std
scas
mov
xchg
pop
sti
or
sbb
sti
sub
mov
fistpl
int3
push
push
lcall
lods
ret
fldcw
ljmp
bound
jp
add
ljmp
sub
je
daa
int3
push
cmp
and
mov
sub
add
imul
lret
fiadds
mov
mov
inc
add
scas
fwait
cld
dec
xor
xor
call
pop
fsubr
negb
sbb
xor
xlat
sub
or
cmp
int
add
ss
scas
test
into
mov
arpl
lret
mov
aas
add
iret
inc
mov
xchg
push
roll
xlat
xchg
rorb
adc
lods
jp
push
sub
into
xor
aam
and
adc
daa
add
xor
cmc
out
mov
push
cs
popf
mov
jle
push
jmp
bound
lock
hlt
jae
jnp
xor
mov
or
pop
aad
and
inc
inc
adc
sarl
pusha
int3
test
in
dec
sbb
dec
pop
in
dec
int
adc
jo
xor
fsub
fistpll
std
aam
xor
outsl
stc
adc
mulb
xor
or
sahf
xor
popf
xor
sub
cld
push
sti
xchg
loop
mov
movsb
push
dec
sbb
lea
or
daa
sub
sub
and
cwtl
outsb
cmpl
roll
cmpsb
jecxz
cmpsb
loope
loope
addr16
or
int3
push
lret
add
jae
mov
xchg
js
loop
or
jbe
out
inc
jmp
dec
idivb
ret
xchg
sub
fdivrl
jle
repnz
inc
orb
cmpsb
sub
sbb
jecxz
xor
mov
push
jecxz
std
lds
adc
jbe
push
pop
inc
gs
pop
mov
jae
stos
or
aad
mov
sti
add
jmp
mov
and
clc
push
mov
cmpsb
xchg
mov
iret
icebp
std
dec
xor
shl
mov
aad
aas
lcall
push
mov
cltd
fdivr
cli
sbb
or
adc
mov
lret
call
push
adc
dec
mov
xlat
and
inc
outsl
add
sub
xor
jecxz
shlb
jnp
push
pop
pop
iret
fadd
or
mov
mov
mov
mov
jnp
lahf
ljmp
les
ja
pop
dec
push
or
lcall
mov
loopne
sbb
stos
mov
mov
dec
cwtl
push
push
call
dec
push
xchg
mov
ss
sahf
fwait
rorb
fidivrl
cli
cmp
add
mov
test
mov
push
adc
sub
pop
ss
jecxz
push
stc
fcomi
mov
xor
ffree
pop
or
or
pop
jbe
mov
mov
add
mov
movsl
sub
ljmp
scas
js
je
pop
mov
insl
push
test
addr16
stc
push
pop
mov
rorb
cld
jecxz
xor
dec
lret
pusha
and
rclb
in
jns
ljmp
pop
add
push
mov
mov
fwait
insl
and
ja
clc
mov
ret
xchg
cmpsb
insl
jmp
xor
das
rep
mov
mov
push
jae
cmpsl
add
out
pop
mov
dec
dec
and
sbb
cmp
pop
cltd
mov
and
xor
xchg
and
test
insb
adc
xlat
inc
jmp
popf
pop
mov
mov
loope
fidivs
in
ficoml
and
insl
ljmp
repnz
mov
aam
int3
jge
faddl
scas
mov
adc
sub
jbe
mov
std
adc
mov
cli
pop
stos
xchg
and
test
lods
inc
xor
cmp
sub
xor
dec
cmp
out
lods
push
adc
sbb
nop
cmp
insb
pushf
jl
push
jno
dec
lods
lock
jle
scas
daa
adc
int3
and
test
pop
push
std
icebp
int3
jo
mov
roll
out
out
movsb
xor
or
in
mov
dec
sub
notl
movsl
pop
fimuls
ja
sub
or
push
in
jge
scas
sbb
popf
loopne
out
adc
nop
iret
movsb
fisttpll
adc
insl
xor
cli
cwtl
adc
pop
aas
adc
dec
sub
sub
cmp
test
lock
dec
jmp
pop
jmp
adc
fnsave
ja
lahf
dec
rclb
ja,pt
xlat
aad
mov
xor
xchg
cmp
add
push
xor
cli
mov
sbb
mov
cmp
lret
into
jecxz
push
lahf
push
add
push
lret
loope
iret
jo
lock
test
cmpsl
xchg
fdiv
mov
out
mov
inc
sahf
stos
adc
test
jecxz
cltd
xchg
add
add
cld
data16
out
xchg
shlb
adc
mov
fisubs
arpl
jmp
push
out
or
jge
test
imul
notw
xchg
and
push
mov
sbb
loopne
stos
lods
addl
jno
gs
dec
jno
sub
pop
int
mov
pop
outsl
dec
outsb
add
pushw
xlat
dec
push
xchg
shll
sub
pop
or
sbb
fsubl
hlt
cmp
and
adc
stos
aaa
mov
movsl
mov
xchg
lret
xor
cwtl
lods
imul
loopne
or
ds
mov
sbb
push
mov
in
cmpsb
nop
test
mov
sbb
jae
or
insl
imulb
mov
pop
les
cmpsb
jge
jne
push
xor
mov
in
dec
sahf
popf
out
mov
imul
pop
mov
mov
fs
int
xchg
sub
js
cmp
or
test
mov
xchg
push
mov
mov
push
xchg
gs
in
mov
insl
pop
mov
out
stos
hlt
mov
lock
dec
push
lock
rcrw
xchg
mov
sbb
call
xor
andb
int
or
nop
mov
lds
shrl
pop
movsl
int3
jo
cmp
or
cmp
out
mov
jle
inc
xchg
inc
vorps
dec
mov
outsb
jp
lret
sub
aaa
pop
add
xchg
jo
rorl
jg
push
push
orb
xchg
jecxz
nop
fsts
jp
nopl
int
shll
xor
leave
das
aas
mov
and
movhps
lret
and
mov
lods
or
dec
push
cltd
enter
js
dec
pushl
lds
popa
js
adc
xchg
in
je
mov
push
dec
mov
cltd
sub
fcomps
jb
dec
push
sbb
mov
jb
faddp
aaa
fistpll
andl
loop
adc
pop
mov
dec
mov
cmp
dec
mov
sahf
push
ja
repnz
push
adcb
ret
fmul
shll
inc
scas
lds
jno
push
test
dec
lods
cs
dec
lock
sti
inc
shl
inc
nop
xor
dec
sbb
inc
mov
or
mov
into
rolb
xchg
jle
jae
das
pop
cli
test
mov
test
xchg
mov
into
test
popa
out
orb
iret
fisubrs
inc
jmp
sbb
ja
jae
out
bound
jne
cld
lods
ret
out
sbb
repz
dec
mov
dec
inc
and
sub
into
push
sbb
jne
dec
push
js
inc
lret
pop
fwait
xchg
repnz
adc
mov
dec
pop
xor
clc
repz
push
imul
sbb
dec
push
jno
jno
insl
cli
or
in
pushf
dec
push
pop
mov
jb
jo
sbb
xor
adc
leave
sbb
gs
pop
addr16
pusha
sub
adc
inc
xlat
stos
and
nop
mov
xor
movsb
add
or
cmpsb
lret
cwtl
pop
fildl
insl
or
stc
add
ja
pop
mov
mov
pop
and
jmp
rorb
or
ret
scas
sub
pcmpeqb
fisubs
out
test
dec
pushfw
jle
aas
imul
loopne
push
ret
mov
dec
mov
inc
jmp
dec
jecxz
sbb
push
in
pusha
mov
mov
rcrb
js
incb
loope
loope
pop
mov
repz
or
pavgw
push
dec
adc
xchg
push
jecxz
pop
inc
xchg
mov
addr16
add
mov
cs
and
add
mov
dec
inc
xor
scas
inc
and
jns
cmp
mov
jns
add
imul
sbb
lock
jecxz
push
lock
mov
inc
push
mov
and
es
test
and
mov
aad
sbb
mov
test
sti
fdivr
imul
sub
and
leave
or
jl
int3
adc
mov
mov
jo
xorb
pop
lock
xchg
notb
popf
push
repz
adc
dec
subl
jno
cmp
and
mulb
fistl
lcall
fstl
push
xlat
imul
push
push
loopne
ja
bound
imull
les
out
xor
mov
cmp
in
outsl
scas
jae
adc
adc
test
add
daa
push
mov
movsl
mov
mov
add
inc
xor
movsl
cmpsb
cmp
cwtl
pop
scas
insl
xor
or
mov
or
cmp
js
cmp
sbbb
sbb
push
inc
cld
inc
inc
mov
fistl
push
popw
faddl
test
or
out
fstpt
loope
push
rorb
pop
cmp
jecxz
call
fnstsw
pop
mov
loope
or
in
xchg
mov
and
mov
mov
xchg
mov
subb
ret
cmp
and
dec
js
divl
dec
pusha
add
loope
mov
arpl
int
dec
dec
cmp
stos
add
fistpl
leave
mov
sbb
pop
outsl
into
imul
adc
cmpsl
mov
mov
cmp
or
mov
mov
test
cmp
stos
popf
push
outsl
idivb
loope
aas
inc
dec
mov
push
cmp
imul
sub
push
pop
scas
cltd
push
sub
rolb
inc
movsl
popa
clc
ficomps
dec
or
sub
push
jge
inc
data16
ror
push
inc
popf
fisttpl
pushl
xor
pop
gs
arpl
jae
and
inc
cltd
pinsrw
mov
clc
lret
pop
repz
mov
ds
cmp
in
push
cli
insb
mov
cmpsl
dec
cmp
mov
xchg
cli
add
jge
mov
mov
lea
add
loopne
fnsave
repnz
test
mov
mov
repz
movsl
sahf
fistps
sbb
mov
pop
imul
sub
jg
or
loope
cld
adc
sbb
mov
repnz
push
rcr
push
jmp
xchg
inc
mov
sub
das
add
cwtl
in
adc
iret
adc
out
sbb
scas
or
and
test
sbb
insl
xchg
xchg
es
mov
clc
call
arpl
mov
shl
mov
add
loope
or
lret
je
test
mov
adc
in
test
inc
push
adc
adc
out
shr
mov
pop
aad
cmp
ret
orb
aas
or
and
xchg
push
inc
sbb
inc
mov
jle
adc
daa
xor
das
imul
clc
pop
push
mov
addl
out
pop
and
pop
mov
ljmp
xor
xchg
popa
sub
inc
pop
fists
cmc
leave
arpl
cmp
pushl
popa
mov
pop
mov
bound
add
or
in
sub
repnz
jae
int
jae
mov
test
jecxz
or
sub
xchg
inc
jno
push
fcomi
sbb
fildl
jb
sarb
fadd
cmp
push
in
pushf
and
movsb
inc
mov
lret
scas
mov
pushf
mov
sbb
jns
fldenv
loop
dec
jns
add
test
cltd
xor
lds
out
add
out
js
xchg
call
mov
add
test
xchg
xchg
mov
or
mov
lds
or
aad
inc
push
dec
cmpsb
mov
call
shlb
test
jg
sub
cmp
inc
loop
inc
cwtl
add
insl
cmp
addr16
jp
cmp
push
cmpl
repz
xor
mov
cwtl
test
popf
imul
sub
subb
cmp
mov
lock
notl
fs
popf
je
inc
pop
arpl
lret
cmp
imul
sbb
cs
inc
stc
push
add
sub
cmp
xor
mov
out
xchg
jmp
test
clc
add
push
jp
dec
nop
jns
and
jo
std
test
xchg
in
push
xchg
inc
xor
loopne
loop
push
in
xchg
pop
test
out
clc
xor
fisubl
fucomi
in
mov
add
fstps
nop
enter
dec
inc
out
inc
sub
lcall
lods
sahf
rcrb
inc
clc
jp
leave
sahf
lahf
loop
pushf
and
xor
ficoms
andl
out
not
push
xchg
stos
push
scas
and
test
jmp
insb
push
mov
pop
mov
jnp
push
mov
popf
adc
mov
stc
xchg
test
adcb
ja
jg
jecxz
add
inc
out
dec
fdiv
add
pop
aaa
lret
pusha
sbb
inc
outsb
sbb
mov
jp
lahf
push
addr16
xchg
fsubs
or
xor
cmpb
sti
mov
sbbl
adc
es
jo
jb
scas
in
dec
icebp
lcall
jbe
mov
add
out
test
xchg
cs
mov
xacquire
mov
sub
shlb
add
sbb
enter
fstp
adc
pop
or
nop
jmp
cmp
add
icebp
jle
stos
lods
push
pusha
sub
jmp
jns
in
inc
or
cmp
xchg
cli
and
or
mov
leave
inc
cmp
enter
out
aas
pop
xor
adc
cmpb
lock
jmp
inc
hlt
mov
pop
mov
fldt
fadd
fsubrs
and
rorb
ss
push
xchg
in
jb
push
adc
jb
or
cmp
insl
sarb
xlat
lods
mov
lds
int
pop
jae
mov
shll
and
testl
cwtl
fdiv
iret
imul
xor
mov
adc
aaa
push
dec
stos
xchg
push
sbb
stos
fidivs
cwtl
push
push
xor
mov
dec
in
xchg
jmp
sbb
loop
movsb
mulb
enter
cmpsl
xchg
mov
jg
dec
mov
pop
pop
popf
jg
int3
out
lahf
ret
sbb
aam
mulb
sahf
sbb
push
and
out
and
push
jle
mov
loop
mov
mov
cmp
jnp
mov
xor
jo
pushf
push
cmpsl
inc
dec
pop
add
pop
call
push
cli
and
fstpt
or
ret
pop
sub
int3
movsl
rcrl
test
add
in
fcmovne
hlt
rorl
daa
cmp
mov
xor
adcb
cmpb
push
lods
int3
xlat
fcomip
and
dec
jae
jp
in
add
hlt
push
xor
mov
aaa
sub
sub
addr16
adc
pop
orl
pop
cmpsb
mov
xor
fsubr
xchg
mov
mov
rcll
je
fcoms
cmpsb
and
cmp
jb
fidivs
and
jle
in
fdivrs
adc
jns
stos
cld
nop
jl
sbb
cmpsl
and
cmp
int
jmp
jle
mov
push
lds
jo
test
fadd
pop
mov
leave
bound
jge
mov
inc
push
ret
loope
pusha
sub
imul
pop
repnz
fdivs
repnz
mov
jnp
cmpsb
sbb
mov
jp
hlt
ror
push
inc
mov
addr16
inc
xchg
loope
out
mov
push
sub
jl
mov
jmp
decl
xchg
out
stos
inc
mov
into
pop
das
nop
insl
lret
push
cmpsl
pop
stc
fnsave
add
shr
test
push
jb
mov
mov
in
shlb
out
and
pop
adc
rcrl
cmp
pop
rclb
adc
adc
jno
sbb
pop
jo
out
stc
or
insb
push
jbe
icebp
inc
lea
rorb
pop
in
mov
xor
dec
pop
cs
ss
mov
movsl
jbe
ds
lock
daa
jp
xorl
fcmovnu
pop
add
mov
lods
xlat
rcll
cmp
dec
jl
lds
shlb
into
add
cltd
andb
cmovge
int3
mov
shll
push
leave
or
xchg
cmpsl
jle
xor
or
das
ret
or
out
outsl
int3
imul
mov
xchg
push
mov
loopne
cli
shrl
je
or
or
add
mov
cmp
cmp
addr16
cmc
dec
adc
dec
jg
mov
pop
sub
push
inc
repnz
rcl
pusha
stos
pop
testl
mov
push
push
mov
sub
xchg
orb
dec
sub
sbb
cmpb
lock
pop
mov
lock
outsb
shrl
xlat
mov
mov
pop
lret
xchg
ror
sub
ljmp
push
fistpll
fisttpll
gs
sbb
adc
call
pusha
sti
mov
enter
pusha
adcb
lea
movsb
pop
xchg
jmp
mov
cmp
cmp
incb
pop
dec
xchg
lds
out
into
addl
xchg
mov
mov
xor
aam
mov
cmc
dec
push
inc
xchg
std
in
cmp
cli
imul
dec
jo
adc
ja
push
movsb
shrb
mov
imul
dec
and
dec
lea
les
inc
jb
push
cmp
pavgb
test
adc
ficomps
mov
inc
jp
inc
and
pop
jns
gs
popa
push
xor
pusha
cmp
in
mov
cmp
fcomi
mov
inc
sub
outsb
lahf
cli
arpl
xlat
cmp
adc
lcall
pop
dec
loope
add
enter
add
dec
into
imul
repnz
xchg
ds
inc
mov
stc
push
jmp
add
and
pop
mov
or
jo
cmp
jae
or
sub
cld
adc
add
mov
jmp
xor
mov
xor
mov
jg
aas
out
mov
xlat
fcmovnu
clc
out
cmc
sub
jne
push
push
lods
cwtl
inc
adc
negl
jne
js
mov
lahf
mov
sub
add
or
shll
mov
iret
imul
clc
sbb
sbb
push
or
and
and
movsl
pop
pusha
aam
icebp
inc
es
jge
pusha
or
xchg
pop
mov
mov
out
fdivrs
xor
dec
push
cmc
sbb
fwait
jmp
out
pop
jle
add
or
ljmp
sbb
adc
xor
mov
mov
jle
lret
xchg
mov
jg
xlat
arpl
leave
xorl
insl
dec
dec
leave
cmp
adc
cwtl
arpl
pop
push
xchg
adc
mov
xchg
mov
fwait
in
sbb
xlat
lds
shrl
sub
mov
add
gs
mov
mov
mov
leave
or
jp
movsb
leave
fldz
imul
imul
pop
lahf
cmp
mov
pop
pop
mov
add
xchg
sbb
inc
in
or
lock
adc
push
push
adc
pop
sbb
loopne
sahf
pop
fimull
push
inc
adc
jge,pn
faddl
push
andb
shll
out
cmpsb
shl
or
test
xor
addr16
lahf
dec
icebp
xchg
or
adc
loopne
sarb
cmpsb
std
lods
fbstp
ljmp
dec
nop
stos
popa
aad
add
lret
jge
sbb
sbb
jl
cmpsb
mov
out
jns
andb
adc
aam
outsb
push
adc
testl
mulb
or
inc
mov
and
or
push
cmpl
fwait
push
call
jecxz
aas
inc
cmp
mov
ja
mov
mov
mov
jmp
daa
mov
insb
js
xor
popf
fwait
add
ret
dec
test
cld
mov
xchg
sbb
in
mov
and
sub
xor
into
cmp
pop
mov
sub
loope
inc
mov
inc
jb
lock
std
leave
les
cmpb
jecxz
in
sub
fsts
and
js
pop
in
fwait
cmp
ret
xchg
stos
sbb
sbb
loop
add
shrl
jnp
inc
lods
ret
jle
in
mov
xorb
outsl
sahf
lcallw
sub
push
add
fld
scas
xchg
fdivrl
andb
fiaddl
xchg
lahf
mov
mov
adc
xchg
mov
push
sub
sti
mov
stc
inc
mov
and
and
jp
and
pushf
add
loope
pop
jle
cmp
or
cmp
sbb
xchg
jmp
ss
add
movsl
push
pop
int
call
mov
addr16
nop
test
xor
push
nop
fcmovnbe
mov
mov
pop
pop
cmp
lcall
or
movsb
ja
push
sbb
jge
xchg
dec
xlat
cltd
mov
mov
or
pop
mov
xchg
arpl
and
int
cmp
push
jl
jle
or
xor
sbb
xchg
shrb
jge
pop
jo
fs
test
xor
std
ja
lcall
dec
xchg
cmp
inc
sbb
pop
adc
andb
data16
jno
sbb
dec
dec
test
or
mov
das
test
incb
pop
rcll
outsl
dec
in
xorl
mov
shll
repnz
mov
cwtl
stos
adc
stos
lret
cmc
jle
mov
sbb
mov
xorb
repnz
ret
dec
dec
mov
mov
add
jge
mov
sbb
jg
ljmp
jae
mov
fsubrl
std
stos
roll
mov
inc
jo
sub
xor
lret
dec
inc
dec
inc
adc
sbb
cmp
lea
mov
or
fwait
in
mov
and
mov
jp
mov
sti
jl
enter
jb
push
xchg
shll
fiadds
pop
mov
jns
sbb
es
xchg
dec
mov
int3
cli
iret
outsl
repnz
jo
dec
jb
arpl
ret
push
test
call
sti
add
jo
mov
sbb
adc
sbb
jl
in
cld
jmp
or
aaa
aam
adc
cld
xchg
dec
push
shll
push
test
xchg
push
push
sub
sahf
int3
adcl
mov
cmpsb
jmp
aam
jb
out
sub
lods
push
or
andb
test
idivb
lcall
dec
mov
in
pushf
out
dec
xchg
dec
jle
fisubrs
push
pop
push
adc
mov
rorb
and
test
leave
sub
mov
mov
shrl
push
shlb
push
cwtl
push
and
gs
int3
push
aam
and
pop
mov
imul
loopne
mov
loopne
sub
hlt
add
lret
sarb
outsl
into
fs
in
push
stos
imul
jg
data16
daa
fwait
lock
add
push
push
xor
xlat
cmp
outsl
xchg
leave
nop
fidivrs
imul
push
aad
mov
mov
shlb
mov
frstor
andl
scas
mov
push
lret
fwait
test
test
mov
jne
in
inc
xchg
inc
pop
xor
loop
sub
lret
dec
ja
ss
cmp
mov
dec
dec
enter
pop
push
dec
clc
adc
xchg
cld
or
sti
mov
and
shll
mov
sbb
mov
sbb
xor
xchg
vmovaps
subl
or
scas
clc
jne
dec
clc
jae
xorb
stc
test
push
in
mov
xlat
ret
jne
nop
mov
movsl
nop
pmaddwd
aaa
or
loopne
sbb
leave
cs
adc
andl
js
push
mov
and
fs
jns
stos
and
loopne
and
mov
iret
pop
mov
jg
out
out
ds
jg
pusha
cmpsl
add
inc
mov
add
rolb
push
bnd
dec
mov
and
js
cmp
scas
xchg
pop
xor
gs
mov
cmp
in
insb
sub
mov
push
fwait
lret
dec
aaa
and
in
dec
jle
cmpl
jmp
xor
mov
mov
push
addl
pop
sbb
ds
dec
hlt
mov
ds
push
mov
lea
jns
xchg
pop
or
pop
dec
aaa
push
or
dec
clc
lahf
mov
lcall
in
add
je
dec
lds
fnstenv
or
jg
add
out
movsb
addr16
xor
out
fsubl
aas
loopne
std
outsb
loope
ficompl
and
add
pop
out
jbe
jbe
insl
and
dec
pop
mov
loop
mov
xchg
sub
xor
cmp
xor
mov
mov
jmp
popa
movsl
dec
and
movsl
cmp
push
bound
sbb
xor
lcallw
mov
ret
mov
sbb
pop
pop
inc
mov
cli
jae
mov
out
mov
movsb
inc
fimuls
ljmp
out
jle
fs
mov
jb
sub
cli
in
mov
push
sti
enter
loope
xchg
cmpsl
movsb
cmpsb
jg
arpl
test
std
bound
dec
std
les
xchg
outsb
cmc
gs
push
xchg
pop
lods
xor
add
adc
add
clc
nop
cmpsl
aas
fcoms
xor
mov
testb
xchg
out
loopne
jb
adc
jne
and
sbb
xchg
in
daa
fcmove
sahf
or
dec
push
dec
scas
cmp
add
daa
cmp
mov
xchg
mov
or
outsb
push
clc
imul
xor
lret
jae
mov
jno
mov
dec
outsb
xchg
ret
or
lcall
scas
jne
in
mov
sbb
insl
ret
pusha
push
pop
cmp
int
xchg
loope
cmp
and
lret
jne
mov
int3
jp
mov
mov
mov
sub
sub
ds
lock
and
jnp
ret
mov
out
xchg
sbb
cmp
mov
outsl
sahf
popf
out
xchg
das
test
mov
mov
fadds
popf
jmp
pop
push
xchg
adc
jg
jae,pn
jecxz
bound
xchg
lret
dec
inc
dec
mov
cmc
cmp
fwait
sti
inc
mov
pop
and
mov
add
enter
xchg
pop
mov
jnp
js
repnz
xchg
mov
adc
dec
push
dec
push
ljmp
mov
ds
cmc
mov
adc
ret
nop
movsl
std
arpl
popf
ss
mov
das
push
inc
jge
into
cli
dec
cmp
fwait
mov
pusha
cmpsb
lcall
lods
or
push
or
jmp
push
gs
mov
inc
loopne
nop
daa
fisubrs
imul
xchg
sar
ret
xchg
or
fbld
fidivl
fistpll
cmp
fmull
inc
shl
scas
je
inc
imul
dec
xchg
dec
dec
ljmp
rcrb
bnd
ljmp
xchg
xor
dec
movsb
sub
jl
sbb
sub
inc
mov
cwtl
jmp
in
mov
cmp
pushl
std
cmpsb
mov
add
test
in
aam
popl
scas
movsl
cmp
movsb
adc
cmp
mov
mov
lock
mov
shlb
dec
cs
sub
mov
rcrb
popa
jbe
push
imul
or
push
push
sub
in
pop
mov
dec
insl
jns
sub
prefetchw
xchg
adc
xchg
setae
fnstsw
adc
cmp
push
lock
lods
jae
dec
mov
and
cli
jge
ds
cmpsl
pop
push
xchg
pop
bound
popf
popa
int
and
lahf
mov
mov
cld
fs
leave
ja
add
inc
cmp
in
fldl2t
push
in
addb
les
fisttpl
cmp
int3
mov
sub
call
push
aas
push
call
mov
stos
cmp
add
inc
mov
jg
pop
sub
orb
sbb
popf
sub
jecxz
mov
movntps
pop
dec
xchg
popa
je
xor
mov
sbb
cmp
pop
sub
pop
jno
fbstp
xor
rcrb
sarb
jno
into
jb
cmp
cli
sub
ficoml
jae
aad
sbb
iret
and
scas
mov
aas
xlat
outsb
call
mov
lret
sbb
jp
push
lcall
lock
movsl
jnp
mov
jge
loop
scas
insb
test
lea
xor
jne
lods
pop
pop
xchg
push
movd
dec
sub
andl
dec
dec
das
pop
inc
sbb
mov
xor
xor
or
in
ljmp
mov
shl
jnp
in
shlb
lea
sub
mov
stc
push
mov
adc
addb
dec
in
leave
mov
cwtl
fcmovnu
mov
pop
xchg
fnstenv
mov
mov
dec
dec
dec
xlat
push
cmpsl
jbe
out
fldl
scas
jae
adc
xchg
jns
jo
daa
jbe
aaa
test
icebp
xor
mov
out
gs
enter
ds
repz
push
sbb
into
jmp
sub
cmc
testb
cmp
push
add
and
aam
rorl
pusha
mov
xchg
pop
movl
mov
pop
jno
push
in
inc
lds
dec
cmpl
bound
ljmp
je
gs
nop
jae
mov
jg
sbb
lods
adc
inc
mov
in
mov
xor
ljmp
mov
fidivs
cmpb
inc
cwtl
mov
and
cmp
loope
outsl
dec
xor
fs
out
popf
insb
test
mov
insl
add
fimuls
clc
mov
sbb
enter
mov
add
mov
sbb
xchg
loopne
test
cmp
imul
dec
imul
cmpsl
repz
lds
ljmp
push
and
in
cmp
add
and
mov
sub
mov
leave
test
subl
mov
movsl
or
lcall
movsl
adc
push
cmp
cld
push
sar
and
mov
mov
imul
ja
pusha
scas
jns
gs
sarl
adc
xorl
leave
push
imul
pusha
arpl
jecxz
ficomps
in
shll
out
mov
push
shrl
out
cltd
add
movsb
mov
inc
addr16
ja
mov
sub
mov
repnz
mov
arpl
les
sub
xchg
pop
mov
sub
and
mov
repnz
dec
outsb
or
mov
ja
sbb
popf
mov
inc
je
mov
icebp
lcall
ss
jne
lret
rcr
test
iret
rcrb
mov
xchg
hlt
jno
test
insl
lret
loope
mov
lahf
mov
jb
jg
and
sbb
into
adc
mov
test
add
push
push
adc
add
dec
sbb
jle
adc
push
jecxz
pop
sub
testb
std
fisttps
mov
ret
cmc
scas
mov
fists
mov
pushaw
xchg
pushf
sahf
inc
int3
xchg
in
and
cmp
add
add
std
cld
mov
dec
into
jl
rolb
imul
jne
lret
sub
outsb
sub
pop
sub
adc
leave
pusha
cwtl
push
push
imulb
divl
cltd
sbb
ja
lea
rcl
ljmp
pop
pop
sub
dec
arpl
mov
imul
insl
or
std
je
push
push
lods
sub
mov
sbb
xor
frstor
in
dec
mov
dec
bound
out
lar
push
sbb
jb
xor
xor
jmp
sbb
inc
cmpsb
push
loope
stos
mov
rorl
adc
dec
int
push
mov
test
cltd
dec
bound
lods
mov
mov
pop
sub
gs
push
aaa
lahf
stc
add
xchg
jnp
arpl
ja
jp
add
js
inc
jne
mov
push
lret
prefetcht0
lcall
inc
test
push
sub
test
adc
sbb
test
mov
ja
fildll
lock
lret
sbb
mov
out
cmp
pop
jns
scas
pop
dec
pop
decb
and
sbb
jmp
inc
mov
int
sub
and
lcall
or
push
inc
loope
and
inc
shlb
in
ja
popf
in
roll
pop
mov
ss
xor
add
mov
sub
adc
movsl
jge
outsb
out
testl
push
hlt
fcompl
jmp
mov
sub
rclb
add
stos
mov
and
cmp
ret
iret
in
hlt
fucomp
int
push
cld
pop
xor
mov
sbb
jmp
cmp
lds
sarb
ret
test
xchg
jne
pop
cmc
mov
shlb
jmp
rolb
lret
push
sbb
xchg
daa
jae
sub
jbe
mov
pop
sub
mov
mov
cltd
mov
sbb
pop
push
insb
xchg
iret
lcall
xor
jnp
mov
out
popa
in
scas
lods
jp
into
je
test
popf
mov
nop
sbb
push
rorb
imul
push
pop
lds
xchg
sbb
movsb
push
sarl
insl
rcrb
sbb
loopne
pop
insl
stos
fs
adc
xor
lea
mov
mov
mov
test
shlb
std
jle
mov
mov
pop
adc
js
and
xchg
repz
aam
push
cmp
int
and
cltd
lret
lods
pusha
in
mov
push
aas
jnp
out
aad
xor
stc
addr16
sbb
in
repnz
xchg
ja
cld
pop
les
pusha
lret
cmpsl
push
std
add
jae
dec
movsb
shll
xor
fiaddl
push
test
cmp
in
mov
lret
cmp
adc
insl
mov
xchg
les
fnstcw
les
stos
lret
outsl
and
sahf
push
and
mov
add
mov
loope
mov
repnz
push
out
js
and
adc
cs
mov
loop
clc
xor
push
loope
bound
cmc
dec
js
push
es
lcall
mov
mov
and
mov
cmpb
insb
adc
fs
mov
mov
or
jl
pop
int3
mov
jg
inc
divl
rcr
sub
call
fdiv
push
pop
xchg
pop
mov
push
jo
sbb
movsb
mov
enter
mov
jo
mov
mov
xor
pop
enter
pop
loope
adc
mov
iret
mov
cli
jne
xor
mov
fcoms
out
aam
mov
shrl
sbb
aas
add
xchg
mov
and
dec
sarb
aas
sbb
jae
ret
js
jns
adc
cltd
leave
addr16
mov
pop
mov
mov
adc
cmpsb
push
pop
mov
les
jns
leave
sbb
pop
inc
stos
or
psubusw
call
and
dec
dec
arpl
mov
jp
je
mov
push
in
xor
fnstenv
leave
mov
push
jecxz
pop
sarb
pop
push
adc
jge
jecxz
in
cmp
mov
std
mov
mov
dec
bound
xor
mov
push
sarl
rep
sub
and
sbb
lret
mov
in
movsb
jnp
cld
adc
dec
idivb
mov
jns
mov
ja
cli
imul
add
mov
ret
mov
imul
mov
xor
sub
or
lock
jl
popa
dec
lods
push
gs
add
xor
fadds
mov
mov
and
cmp
xor
fwait
jp
out
test
dec
pop
cld
sarl
lret
push
add
dec
mov
xchg
scas
add
cmp
subl
stos
mov
mov
enter
testl
aam
cltd
sbb
test
cltd
add
stos
movsl
repz
xor
mov
imul
cmp
add
inc
cmpl
outsb
mov
jns
mov
add
mov
jae
push
addps
sti
sub
in
sahf
gs
insb
mov
in
icebp
test
mov
pop
sub
fsubl
cmp
fbstp
ds
ret
push
and
or
mov
imul
in
sub
jmp
dec
add
sbb
loopne
lock
lock
sbbb
inc
push
push
ret
xchg
lret
and
pop
cld
push
pushl
in
inc
xor
stos
gs
inc
lods
sarl
push
xlat
pop
push
ds
inc
gs
jnp
push
out
lahf
jg
jb
cmp
outsb
in
leave
push
stc
mov
mov
in
and
pop
add
fs
xchg
sbb
jne
or
cmp
xor
inc
push
jge
fdivr
popa
lock
or
sbb
cmp
rcl
cs
add
add
push
xchg
push
fstpl
test
lahf
cmp
push
popa
mov
sub
addl
repnz
fadd
xchg
inc
jns
add
lods
push
adc
xor
fbld
mov
inc
out
es
or
mov
aam
rcr
popa
pop
lods
pop
sarl
stos
lods
mov
adc
pop
sbb
push
inc
sub
or
jmp
lcall
sarb
adc
fs
sub
fdivs
inc
dec
cld
xchg
pop
mov
sbb
sbb
ss
dec
mov
aaa
xor
imul
pop
jecxz
xor
pop
dec
xchg
jmp
cmp
leave
sub
dec
pop
movsl
cltd
loopne
cmp
arpl
cmpb
mov
loopne
loopne
insb
mov
dec
lods
pop
xor
inc
mov
mov
dec
int
jmp
shll
sti
mov
das
cmp
pop
mov
addl
xor
jbe
cmp
or
shr
dec
dec
push
mov
pop
loopne
leave
pop
orl
and
sub
mov
dec
mov
mov
push
sahf
mov
xor
xor
or
inc
aad
repnz
mov
addb
xchg
sbb
repnz
mov
cmp
jmp
leave
scas
ss
std
stos
sbb
aaa
xchg
cmp
clc
aaa
dec
subb
mov
pop
inc
xor
iret
adc
pushf
daa
jmp
and
in
mov
ffree
cli
into
and
scas
dec
xchg
push
xchg
out
dec
cmpsb
mov
add
and
fisttpl
ds
push
popa
pop
dec
jge
jb
out
pushf
mov
es
into
pop
dec
sub
lahf
mov
inc
lods
mov
jnp
cmpsb
iret
mov
mov
inc
pop
push
mov
dec
sbb
inc
mov
sbb
divl
lret
imul
sbb
add
cmp
jle
in
xchg
push
lea
outsb
jbe
cmpsb
push
ret
sbb
xchg
repz
pop
mov
xor
push
outsb
outsl
dec
mov
orb
dec
ja
push
mov
std
daa
or
lahf
xor
sub
dec
mov
push
scas
inc
lds
inc
pop
pusha
add
jge
push
ds
adc
daa
sub
arpl
mov
xor
cmpsb
jo
fimull
jns
xor
sbb
adc
bound
int3
adc
push
int3
insb
jl
pop
mov
stc
orb
cli
push
lahf
outsb
in
or
cmp
cwtl
fldl
sbb
mov
mov
repz
sub
or
cmp
mov
call
int3
push
scas
or
lea
mov
ja
shlb
inc
dec
enter
movsl
jmp
je
movsb
or
inc
cmp
in
or
add
mov
push
not
enter
push
and
bnd
insl
mov
cmc
andb
ljmp
mov
movsl
inc
mov
out
cmp
mov
xchg
mov
in
ss
lods
addr16
xor
sub
bound
sahf
popl
jno
xchg
cmovne
aam
push
push
mov
int
push
xor
repnz
or
and
adc
and
loopne
daa
out
sbb
xchg
add
mov
add
loop
or
iret
xor
addr16
js
sbb
pushf
orl
fisubrs
adcb
dec
xor
push
lret
pusha
adc
jl
xor
mov
sahf
inc
cmc
in
jmp
lods
mov
xor
icebp
xor
add
sbb
js
imul
cmp
cs
lret
cs
or
xor
xlat
inc
cs
mov
mov
mov
lds
jno
dec
addl
inc
cmp
sub
mov
aam
mov
lods
sbb
cld
xchg
mov
sbb
das
cmp
lret
clc
fidivl
popa
test
add
lret
add
dec
pop
sbb
sbb
loopne
mov
fstps
add
xchg
orl
les
sub
testb
mov
mov
sub
sbb
js
sti
jle
out
mov
lret
push
jne
push
fiaddl
adc
xchg
loop
aad
in
fstl
add
or
test
cmp
inc
pop
out
in
pop
fistps
fs
lea
mov
lret
sub
je
ret
das
push
xchg
push
lcall
xor
adc
stos
std
push
push
mov
and
testb
test
jae
nop
jno
out
or
pusha
push
jno
dec
mov
cmp
andl
arpl
insb
add
sbb
fimuls
sub
jns
push
inc
lahf
andl
xchg
xor
stc
in
mov
fldlg2
pop
into
xchg
add
jbe
inc
lret
sarb
mov
testb
lcall
outsb
ljmp
jbe
mov
outsb
sub
ret
ljmp
js
dec
std
dec
push
sub
xor
push
mov
scas
int
dec
cmpsl
xorb
xor
mov
outsl
push
pusha
sarl
jne
sub
cld
js
imul
out
jo
out
jno
repnz
cli
cld
pushf
hlt
pop
mov
xchg
push
aas
ja
outsl
xchg
in
les
inc
mov
fcmovb
add
push
inc
outsb
test
and
sbb
outsl
fisubrs
xor
lods
xchg
lret
gs
movsl
out
clc
mov
add
ret
ror
jmp
jg
out
out
arpl
sub
ret
xor
mov
enter
pop
sub
push
fwait
jne
pushf
mov
rcrl
pop
push
or
iret
shrb
or
mov
sbb
in
out
out
or
sarb
sub
and
pushf
push
xchg
call
std
mov
das
push
cld
nop
mov
lods
push
mov
or
lcall
add
ror
fsubrs
int
aam
sbb
pop
mov
cmp
gs
les
cli
call
xor
hlt
nop
push
add
mov
pop
mov
xchg
mov
mov
movsl
jbe
fisubrs
mov
mov
sahf
pop
pop
outsb
push
and
or
mov
pop
into
into
cld
xor
enter
and
fiadds
jecxz
add
pop
in
int3
test
iret
lock
jb
xlat
dec
enter
mov
jns
ss
call
sub
mov
pop
fcmove
xchg
cmpsb
out
aaa
and
bound
push
xchg
loopne
sub
fsubs
dec
xor
into
mov
xlat
and
rorb
jno
jns
rolb
pop
inc
std
mov
mov
popa
outsl
cmpsb
movsb
and
mov
inc
data16
jle
xor
and
add
stc
xor
dec
jns
scas
test
xlat
xchg
scas
rorb
cltd
daa
mov
mov
cli
sbb
lock
sar
rorb
pop
jne
stos
mov
aas
and
call
pop
rclb
loope
mov
push
mov
pop
aaa
adc
sbb
mov
imul
ja
lods
test
jb
mov
lret
jne
lahf
mov
mov
mov
daa
jnp
fsubs
test
mov
adcb
sub
or
fldl
jns
adc
jle
je
pop
pop
lods
pop
fcmovne
pop
rcrl
add
and
pop
pop
sub
adc
jmp
push
inc
and
xchg
icebp
mov
add
ret
imul
aam
xchg
pop
and
xchg
mov
jae
lods
xlat
imul
push
xchg
cmpb
fcom
jecxz
into
jmp
movsb
aas
lahf
popf
call
lods
push
outsl
push
push
mov
insl
jo
inc
mov
mov
movsl
dec
lods
and
js
pop
jmp
pop
inc
xchg
inc
mov
aas
mov
ret
inc
mov
movsb
xchg
fwait
xchg
pop
jbe
test
repz
outsb
add
std
mov
push
cltd
aad
cwtl
loope
and
mov
or
in
sbb
sti
inc
nop
mov
test
cmp
push
or
rclb
les
cs
dec
xchg
test
scas
ja
clc
add
mov
sbb
lcall
inc
ret
bound
cld
call
pop
or
shll
push
pop
or
scas
pextrw
adc
lods
mov
cmc
stc
leave
ret
stc
leave
and
test
xor
xchg
cmp
cmp
mov
fisubrs
xor
mov
icebp
pop
lds
add
loope
cmp
les
outsb
jl
add
cmc
fwait
addr16
mov
mov
call
and
sub
mov
cmp
mov
mov
sahf
addr16
mov
imul
inc
pop
cli
stc
ljmp
pop
leave
or
add
push
mov
sub
fistps
inc
cld
nop
testl
add
popf
and
jl
jecxz
or
cs
loope
sbb
lock
es
mov
xchg
in
ss
pop
ljmp
xchg
dec
imul
das
or
aad
push
imul
and
pop
fs
nop
int
cmp
push
adc
inc
rclb
pop
pop
fsubs
iret
pushf
jae
lret
mov
lret
stos
and
cmc
sub
out
and
mov
pop
addr16
jno
hlt
loop
jecxz
nop
jne
dec
rcr
loope
loop
js
inc
mov
int
inc
imul
cmpsl
sahf
mov
das
mov
outsl
daa
test
cmp
addr16
xchg
and
ret
lea
mov
xor
jae
xchg
bound
push
mov
pop
into
out
roll
xor
jne
mov
mov
or
cli
ja
cmp
orl
mov
jbe
nop
jge
fs
adc
add
sbb
or
or
xchg
push
ljmp
lahf
mov
fwait
idivb
loop
aas
mov
xchg
xchg
push
lret
jno
mov
insl
ret
cltd
into
pop
dec
adc
fidivl
popf
rcrl
inc
scas
repz
inc
jge
jl
sbb
jge
xor
jbe
sbb
gs
ljmp
scas
fldt
leave
inc
sbb
pushl
fisubrl
cltd
sarl
sbb
jb
test
sub
aas
mov
sbb
mov
xor
cmp
loopne
je
in
imul
cwtl
jae
mov
fsts
ficompl
leave
jmp
adc
sbb
aad
xor
xchg
icebp
mov
das
pop
or
mov
add
scas
mov
inc
movsl
and
and
and
stos
and
adc
andl
and
sub
jmp
mov
and
dec
nop
lods
adc
sbb
add
push
enter
ljmp
adc
cmp
add
dec
mov
push
cmc
imul
and
lret
test
out
je
je
xor
lods
xor
in
imul
push
imul
loop
push
cmp
dec
add
pop
repz
mov
ss
jle
scas
push
idiv
lods
jb
sbb
xor
out
dec
out
jns
mov
xchg
mov
push
jae
mov
cmpb
or
sub
das
adc
cs
mov
sub
sub
js
xchg
mov
push
add
rcll
bound
xlat
mov
sub
lret
fistpl
jae
mov
repnz
adc
imul
cmc
test
inc
mov
xchg
add
loope
xor
pop
push
sbb
das
or
sbb
lcall
xchg
push
out
jne
or
sub
leave
cmc
int
gs
aam
sbb
mov
or
or
rcrb
les
ljmp
sbbl
cmp
mov
adc
pop
sbb
es
push
adc
xor
pop
jns
mov
inc
xor
xlat
xchg
xlat
add
pop
test
adc
test
push
push
push
mov
leave
mov
lea
fists
inc
jl
mov
pminub
pop
push
push
cmp
and
icebp
sbb
repz
imul
xchg
add
and
lods
jae
aam
mov
jno
lret
jno
pop
push
je
mov
inc
in
mov
xor
mov
xlat
dec
mov
inc
fstpt
cltd
mov
mov
es
dec
inc
dec
in
xchg
sbb
lret
lahf
cwtl
in
into
sub
insl
cmpl
inc
adc
xchg
adc
scas
sahf
mov
lea
cmpsl
loope
jae
push
xchg
add
jb
inc
test
ja
lahf
insb
test
fldcw
es
rorb
jg
mov
out
leave
dec
xchg
nop
or
imul
xor
lds
pop
ss
cmp
out
aas
push
ja
sub
mov
lock
or
jp
sahf
in
xchg
loopne,pn
sbb
dec
jle
and
pop
add
sbb
or
dec
sub
lock
stos
cli
inc
out
mov
dec
add
hlt
add
les
ss
scas
pushf
adc
fists
and
ljmp
mov
xlat
out
in
and
mov
adc
inc
adc
outsb
mov
pushf
add
push
cmp
in
call
sub
addr16
sbb
lods
mov
inc
lcall
negb
fdivrl
jae
pop
push
pop
lahf
xchg
sti
push
cli
inc
pop
push
add
test
lods
scas
inc
lea
push
ret
or
lret
cmp
sbb
xchg
loop
daa
or
faddl
mov
push
leave
jl
jp
cmp
sub
fsts
fnsave
mov
in
popa
mov
mov
cli
roll
jp
xchg
mov
sub
add
mov
and
push
mov
inc
les
or
pusha
mov
iret
js
ljmp
es
and
push
pop
dec
mov
ss
mov
aas
dec
mov
das
mov
sti
pop
rorb
sub
test
ret
xlat
adc
insl
xor
jl
fiadds
mov
mov
push
repnz
push
mov
jae
mov
xor
fnstsw
dec
adc
fildl
add
movsl
negl
in
push
jae
push
test
pop
push
insb
insb
cmp
or
cmp
adc
fst
adcb
hlt
daa
xor
sti
je
mov
push
sahf
cwtl
std
scas
incl
fs
xor
xchg
addr16
stc
add
push
dec
push
jge
lcall
outsb
sbb
test
jl
xchg
mov
jo
mov
xchg
adc
jno
jnp
or
mov
adc
mov
call
out
stc
mov
dec
hlt
jle
mov
push
insb
iret
aas
inc
push
lods
push
mov
jle
pushf
xchg
mov
fdivs
add
in
xor
rcl
xlat
mov
cmp
js
insb
push
sub
fwait
jbe
add
lret
pushf
mov
push
push
ljmp
and
in
inc
mov
cli
jp
push
sbb
fsub
add
jns
fcomp
stos
jecxz
sti
pop
in
cmp
push
imull
adc
xor
bound
cmp
jge
aas
dec
je
push
dec
sbb
mov
and
fists
pop
lret
lock
pop
dec
sbb
push
adc
pop
xor
jg
dec
je
dec
fsts
mov
xchg
mov
dec
test
jecxz
inc
push
lahf
xchg
in
mov
int
stos
xchg
iret
jge
mov
add
cld
add
pushf
jno
pop
dec
cmp
lods
xchg
jge
xchg
lret
pop
pop
lods
sub
and
mov
mov
dec
jb
dec
scas
int
scas
add
xchg
or
cmpsb
jmp
adc
push
jo
rcll
jmp
stos
jl
cld
enter
mov
sub
or
repnz
push
push
xor
push
mov
mov
inc
jmp
inc
dec
int
in
cmc
pop
adcl
dec
out
push
pop
dec
lods
pusha
mov
push
jno
push
mov
pop
bound
pop
jg
jno
negb
xchg
and
add
jno
les
mov
dec
mov
test
pop
jp
out
jns
dec
dec
insb
push
and
sub
je
out
jne
pop
pusha
out
and
lods
sbb
cmp
adc
es
enter
pop
sbb
mov
xor
fidivl
daa
icebp
inc
aam
int3
shr
test
adc
add
lret
and
dec
and
fldcw
xchg
dec
es
lods
test
dec
aad
push
jl
insl
and
mov
in
data16
cltd
inc
jg
pop
cli
cmpsl
icebp
or
int
orb
ret
subl
push
cli
fstpt
adc
movsb
orl
pushf
xor
mov
mov
je
arpl
loop
xor
inc
or
cmp
push
pop
mov
pusha
sti
cli
bound
cli
idivl
and
jbe
jmp
mov
push
out
push
and
pusha
sbb
jns
push
lahf
jmp
add
imul
and
lret
jnp
dec
dec
push
ret
add
jp
enter
fsubp
sbb
sbb
leave
outsl
jne
shrb
imul
pop
jnp
pop
cmpl
xor
aam
and
inc
pop
out
mov
lret
dec
lods
fdivrl
mov
or
push
push
xor
pushf
mov
sti
xchg
daa
add
and
xor
mov
pop
aas
push
xor
adc
inc
sbb
lock
test
mov
cltd
test
jae
jb
dec
mov
push
cld
jae
sub
xchg
mov
pushf
or
imul
in
arpl
and
lahf
test
mov
imul
xor
mov
out
movsb
outsl
mov
std
cmc
push
or
imul
jp
cmp
and
dec
loopne
jecxz
ja
mov
mov
jmp
cmp
fsubl
pusha
add
pop
adc
add
insb
popf
flds
push
fiaddl
enter
sahf
mov
inc
xchg
push
xchg
repz
jne
or
lret
cmp
pop
adc
mov
mov
scas
subb
xchg
pop
push
outsl
icebp
sub
push
lds
fidivrl
mov
sub
cmp
cmp
or
movsl
inc
pop
mov
push
test
aad
mov
push
fucomi
or
clc
cltd
fiaddl
add
mov
jmp
test
mov
sbb
cld
inc
add
xchg
adc
mov
repz
ffreep
sub
std
xorl
out
push
adc
test
movsb
loope
jl
and
or
pop
add
jo
aaa
cld
inc
mov
or
pusha
push
fisubl
cmp
fisubrs
scas
leave
roll
fildl
jle
push
jg
sbbl
in
fs
mov
jae
loop
je
mov
lea
jp
clc
shr
scas
mov
pop
enter
in
inc
mov
sahf
mov
test
jl
sbb
mov
mov
std
loop
loop
stc
jns
xorl
push
ret
subb
add
fsubs
add
pop
inc
jp
inc
sahf
xchg
xor
daa
jg
push
jae
js
shl
subl
dec
in
fdivrl
jle
adc
or
adc
fwait
ret
mov
mov
das
cmc
dec
adc
psubw
jnp
and
add
mov
xor
mov
jecxz,pt
stos
imul
popa
and
fwait
sub
xchg
bound
mov
addb
shl
je
or
std
call
scas
loop
xor
fdecstp
inc
xchg
fwait
in
dec
data16
cs
jmp
inc
iret
cmp
jg
mov
and
loope
and
pop
or
lcall
lahf
or
mov
mov
push
testl
arpl
fs
sbb
mov
pop
bnd
lds
adc
out
mov
fidivrl
push
inc
ljmp
mov
or
lock
xor
push
aad
sbbl
cld
pop
fsubs
jns,pt
rorb
xchg
sub
mov
jbe
and
les
fcmovnu
sbb
xchg
movsl
adc
xor
xchg
inc
pop
das
nop
ret
jo
mov
mov
pop
out
data16
jo
loope
test
mov
repnz
adc
lods
ds
scas
lock
out
roll
rep
shll
inc
adc
xchg
imul
ljmp
in
test
mov
imul
rcrl
lea
mov
test
sbb
mov
mov
xlat
nop
jge
rcr
push
rcl
pop
sub
adc
cmp
addr16
mov
nop
sti
pop
jb
sub
jge
jp
push
jne
out
dec
xchg
inc
jecxz
xchg
les
sub
cmp
mov
xor
repz
testb
sbb
pop
bound
xor
push
cli
jl,pn
mov
xchg
pop
lret
mov
add
je
adc
pop
lock
out
loop
add
pop
pusha
das
jp
insl
repnz
sbb
or
sarl
xor
hlt
jle
push
push
hlt
addl
push
lret
sbb
sbb
push
sbb
jmp
jecxz
lahf
inc
push
mov
rcll
aam
jnp
jle
dec
xor
pop
add
call
and
inc
addr16
aas
adc
minps
sbb
scas
jp
sub
xchg
movl
int3
jmp
stc
jl
xor
pop
lock
adc
fcoms
int
add
aam
ret
dec
insb
mov
xor
es
fadds
xchg
and
and
push
fnstenv
jle
leave
lods
xor
out
lea
or
push
aaa
fsubr
cld
add
dec
jge
cmpsl
mov
lea
rorl
cmp
and
sub
stos
mov
hlt
lock
in
sti
adc
out
leave
cmpsl
adc
pop
mov
addr16
data16
pop
imul
xchg
outsb
pop
js
pusha
lods
out
clc
gs
aam
ds
lret
sbb
insb
inc
cltd
ljmp
dec
shl
adc
dec
je
loope,pn
add
pop
cmp
dec
sbb
xchg
lock
test
divl
addr16
push
sbb
je
lret
mov
add
vmovss
dec
pusha
sub
lods
or
pushf
scas
jae
and
dec
lds
pop
sahf
popa
bnd
push
enter
sbb
in
mov
xchg
lds
test
rorb
imul
addl
in
push
xchg
sbbb
fisttps
cmpsb
in
mov
jne
cmpsl
aam
cmpsl
cmp
pop
xchg
fst
jg
xchg
jns
out
in
dec
mov
adc
cmp
shl
std
dec
sahf
bound
xchg
jo
push
cmpsl
sahf
xchg
push
dec
jmp
adc
ss
int
sub
dec
movsb
inc
mov
lret
insl
js
bound
aas
pop
push
dec
nop
jl
xchg
jne
shrb
jbe
adc
pop
pop
es
mov
ja
and
loopne
mov
pop
add
lahf
pushf
ret
dec
jmp
push
jns
push
pop
cmc
sub
and
and
loopne
mov
xchg
int
xchg
mov
sahf
in
push
or
mov
inc
outsb
in
dec
pop
lods
mov
dec
pop
leave
rorl
icebp
mov
push
sti
sbb
ja
fsub
ja
mov
sti
fiadds
push
pop
mov
pop
and
test
jae
in
dec
popa
pop
jne
sub
mov
xchg
cmp
mov
pop
in
inc
dec
repnz
and
adc
dec
int3
cmpsb
add
bound
frstpm(287
rcll
ljmp
mov
add
mov
mov
je
add
in
jno
mov
lret
mov
add
pop
lods
out
aaa
mov
fisttpl
cmpsl
rcrb
out
inc
cld
out
xor
imul
scas
cmp
push
adc
mov
shlb
rolb
sbb
mov
adc
push
add
mov
movsl
rolb
sub
jae
mov
popf
cld
cmp
and
clc
pushf
out
icebp
lea
es
mov
mov
push
pop
mov
orl
repz
mov
push
inc
data16
pop
idivb
lods
push
aaa
jg
xlat
jecxz
cwtl
mov
shl
or
stos
cmp
inc
mov
fld
iret
push
ficomps
icebp
outsb
push
das
js
das
jl
push
and
lock
and
repz
sti
jl
xchg
mov
sub
call
sub
addb
orb
sbb
jg
inc
cmc
leave
dec
stos
loope
mov
dec
fstpt
test
jo
fsubl
pop
jmp
mov
cli
push
in
stc
or
mov
inc
adc
ja
mov
mov
fstps
cmpsl
sub
mov
dec
jne
movsb
in
fisubl
jbe
into
sahf
iret
dec
mov
insb
or
push
imul
fsubrp
into
pop
adc
aam
xchg
decl
test
stos
shll
or
movsl
pop
fbstp
push
int3
mov
mov
outsb
jl
xchg
mov
jp
or
adc
xor
lret
jle
add
mov
mov
lods
imul
js
add
jge
xchg
xchg
sbbl
pop
out
xchg
xchg
out
lret
pop
inc
pop
ss
fadd
jno
and
cmp
js
jnp
mov
adc
xlat
test
ret
mov
cmp
lret
or
enter
jp
sbb
xchg
jecxz
sub
in
pop
btc
jne
mov
fistpl
sbb
out
mov
jl
movsb
pop
push
mov
xor
mov
loop
cmp
adcb
pushf
sbb
jne
mov
int
add
xchg
sub
mov
jp
mov
addr16
and
push
das
pop
loopne
mov
pop
aas
loope
enter
jmp
sub
xor
push
sub
stc
lods
dec
mov
cmp
mov
movsl
cmp
mov
xchg
js
lahf
std
ror
and
hlt
cmp
jge
les
testb
aaa
cmp
xlat
ret
pop
movsb
fdivl
mov
mov
sub
jmp
jmp
aam
adc
icebp
cmpsl
mov
movl
clc
inc
xor
idivl
xchg
xchg
bound
xor
fnstcw
clc
into
dec
mov
hlt
movsb
ds
loop
sbb
into
sahf
repnz
fistpl
rol
dec
das
mov
test
jno
pop
bound
sbb
inc
addl
sbb
aad
scas
adc
cmpb
popf
xor
sub
sub
add
push
dec
mov
sbb
add
mov
dec
icebp
in
add
cmp
lahf
and
out
or
ljmp
test
faddl
loop
adcl
loop
mov
mov
pop
adc
sub
out
loope
mov
ja
cmp
sbb
fs
sahf
cmpsl
sub
add
adc
jno
xor
push
cmp
lcall
shl
aam
test
pushf
push
jp
in
test
fildl
test
lea
xchg
mov
in
insl
nop
lret
stc
clc
push
out
fists
pop
cltd
cld
out
popf
out
push
or
mov
jle
jmp
lret
fcoml
jns
lock
in
test
push
xchg
sahf
push
cmp
mov
loop
bound
fnsave
add
ds
xchg
add
sub
pop
adcb
cwtl
dec
or
rorb
lret
xor
dec
fst
sbb
rcll
mov
add
js
sbb
lods
enter
jp
mov
out
sbbl
insl
iret
bound
xor
fadds
mov
sub
cmpb
sbbl
scas
push
ror
sbb
or
pmullw
pop
xchg
iret
jb
repz
mov
cs
iret
repnz
adc
xchg
test
add
adc
cmpsl
ficoms
cs
cmc
aad
les
sahf
or
lods
pusha
xor
into
push
pop
out
mov
clc
mov
sbb
fiadds
lret
xchg
fiaddl
inc
jecxz
mov
xor
xor
mov
or
jno
inc
jnp
sbb
or
pop
imul
or
jp
lahf
dec
cmp
mov
adcb
dec
cmp
add
fisubs
sbb
aam
cmp
jg
test
int3
jne
mov
aas
daa
and
mov
adc
xor
add
ljmp
outsl
ljmp
repnz
in
repz
push
sub
mov
leave
jmp
add
jmp
das
xchg
andb
test
popa
das
and
jb
mov
push
out
fwait
loope
std
scas
ljmp
push
gs
inc
mov
mov
lods
iret
push
cmpsb
in
inc
inc
and
push
hlt
or
push
jle
sbb
cmp
inc
mov
add
jge
icebp
push
cmp
repz
pusha
std
adc
sbb
mov
addr16
aad
mov
jle
leave
lock
pop
cmpsl
fadds
ds
jo
sub
sbb
das
mov
std
into
mov
ljmp
push
xchg
bound
cmp
std
sti
enter
mov
jae
xor
jnp
jmp
xchg
sbb
inc
jbe
push
movsl
insb
add
subb
xor
addr16
addb
cld
dec
adc
mov
sbb
sbb
js
lea
or
or
out
stos
dec
sub
mov
popa
hlt
fmull
jnp
fptan
out
mov
sarl
js
ljmp
aad
in
incl
popf
sub
cmp
adc
pop
push
rolb
jbe
jns
std
xchg
mov
jl
fimull
hlt
inc
sarb
push
push
fsubrl
popa
je
subb
dec
inc
mov
rolb
lods
lret
dec
cld
mov
push
mov
pop
or
cld
fstl
shl
sub
sbb
cwtl
mov
lods
into
push
gs
mov
dec
mov
fwait
xchg
jmp
fnsave
adc
inc
cmpb
add
pop
push
cmpsb
js
in
fldln2
aam
inc
sub
xchg
jae
push
imul
push
jno
std
outsl
dec
fst
loope
test
loopne
roll
add
pop
gs
sub
pop
xchg
adc
sbb
adc
mov
inc
nop
or
mov
mov
dec
aam
int3
inc
sub
xor
adc
out
cltd
adc
adc
bnd
or
addr16
adc
mov
cmp
mov
sbb
add
imul
mov
mov
in
out
adc
or
mov
data16
sub
push
shll
cmpsl
fnstenv
push
cld
add
js
push
jmp
xchg
lock
stos
xor
sar
cwtl
xlat
mov
push
pop
das
mov
insb
movsb
mov
pushf
pop
mov
lock
aam
pop
mov
cmp
outsb
lods
mov
sbb
addr16
faddp
adc
push
call
fidivs
mov
mov
and
dec
lods
fstl
cli
xor
loope
inc
xlat
push
popa
in
lods
inc
lahf
movsb
sbb
aas
xlat
dec
scas
ror
outsb
xchg
cld
sahf
data16
mov
add
dec
popl
out
js
mov
sub
das
imul
insl
mov
push
mov
int3
mov
add
cmp
mov
pop
movsl
nop
clc
pop
or
jnp
cwtl
inc
lds
or
cmp
inc
sub
das
cmp
or
mov
push
mov
xchg
dec
mov
cmp
push
mov
pop
adc
fdivrl
into
lret
mov
push
lea
lret
pop
pop
mov
lcall
sub
add
cld
mov
shlb
sbb
pushl
xor
or
jp
inc
inc
stos
cmpsb
jnp
sbb
lds
test
out
adc
sar
aas
add
and
mov
out
jo
xchg
lret
pushf
xrelease
or
adc
bound
lret
adc
jle
test
add
ret
mov
aam
mov
ret
xor
inc
clc
adc
insl
and
sbb
xchg
sbb
iret
fst
inc
xchg
inc
xchg
xchg
push
test
lock
dec
xchg
outsb
jmp
mov
dec
in
xchg
bnd
xchg
cltd
cmc
sbb
and
xchg
mov
repz
cmp
pop
lods
in
pop
pop
hlt
lods
lret
mov
jle
mov
push
stos
cmp
jns
out
and
add
mov
push
inc
mov
repnz
adc
xchg
mov
adcl
iret
lods
pop
fdivs
popf
lret
cs
xchg
inc
test
cmp
lods
mov
xor
out
cmp
xchg
out
iret
and
out
xor
test
lock
mov
scas
fnstcw
sbb
mov
add
mov
ror
stos
data16
mov
std
push
mov
scas
bound
lea
jmp
data16
lods
jecxz
cmp
push
orl
add
icebp
test
add
xor
push
pop
mov
push
loop
sbb
jo
jo
in
push
cmc
push
mov
push
add
stc
push
stos
ljmp
mov
add
cs
in
arpl
jb
xchg
push
je
pushf
jnp
les
add
arpl
add
ljmp
xchg
push
fnstsw
push
popf
jl
push
xchg
aad
add
inc
fidivrl
mov
xor
dec
lock
fistl
enter
scas
aam
mov
and
sbb
aas
fnstenv
jno
stc
fs
test
mov
inc
ds
or
lcall
mov
scas
dec
push
adc
clc
sbb
je
scas
ja
mov
mov
out
jnp
dec
ljmp
add
lods
pop
lahf
mov
cwtl
ss
xchg
icebp
xchg
sub
out
sbb
and
dec
mov
pop
decl
adc
mov
fwait
cmpsb
cwtl
jns
push
mov
das
outsb
cmpsl
mulb
inc
lret
jmp
stos
jno
jecxz
je
mov
sub
adc
adc
sbbb
xor
pop
lret
fdivrl
mov
gs
pop
in
push
shrl
add
mov
mov
lahf
mov
es
cwtl
fisttpl
loope
ret
ret
mov
or
lret
sbb
mov
iret
lods
dec
add
dec
testb
dec
adc
es
popa
js
cld
mov
dec
sahf
in
dec
rolb
lods
push
jle
popf
jge
push
xchg
mov
stos
outsb
mov
sbb
inc
arpl
popa
dec
push
cmp
xchg
fwait
jge
sub
pop
scas
sub
fs
stos
mov
enter
ja
mov
insb
fisubrl
jb
and
test
adc
shll
push
mov
mov
fwait
pusha
jecxz
jbe
stos
neg
loopne
mov
pop
cltd
mov
call
jl
push
add
clc
fldenv
movsb
je
xchg
lcall
mov
xor
cmp
mov
mov
orl
popf
xchg
jp
jp
sbb
ret
sub
fcompl
scas
add
sub
addr16
test
sbb
mov
jo
lret
push
inc
and
sbb
loopne
or
jae
adc
icebp
dec
mov
mov
out
pop
mov
xor
cs
in
rorl
leave
dec
mov
add
cmp
cmp
jecxz
ret
ljmp
jo
hlt
jae
mov
fsubrl
mov
insb
inc
repz
adc
test
test
stos
xchg
mov
pop
cmp
adc
dec
cmp
inc
pusha
roll
stos
xor
push
jle
xlat
xor
in
xor
data16
xor
out
xchg
xchg
shll
loop
arpl
mov
test
pop
ror
mov
mov
loope
dec
jb
mov
cltd
lret
jl
cmpsb
fwait
mov
jno
outsl
popa
mov
jg,pn
jno
outsl
cli
mov
mov
inc
stos
jge
das
or
or
push
push
push
mov
dec
arpl
add
inc
adc
arpl
lret
lahf
dec
test
mov
dec
jmp
sbb
fwait
pop
mov
loope
stc
in
lret
in
dec
out
popa
adc
add
mov
test
xor
sbb
repnz
lcall
mov
sub
testb
mov
enter
cmp
cmp
adc
cmp
xchg
add
lea
sub
mov
inc
das
adc
ret
mov
mov
jp
int
outsl
sbb
dec
or
clc
inc
decl
sbb
test
push
inc
lock
push
mov
das
addr16
js
pop
xor
mov
mov
repnz
cmpsb
loopne
push
mov
in
call
cld
jecxz
dec
lock
or
int
stos
and
lods
aaa
push
pop
je
pop
jne
dec
decl
or
push
pop
ret
jo
mov
or
shrb
jne
mov
inc
test
jecxz
mov
out
push
add
pop
test
cwtl
inc
mov
dec
in
scas
add
adc
das
or
std
or
xchg
in
add
push
jmp
in
lods
push
mov
jbe
inc
movsl
add
jmp
jno
or
xchg
mov
mov
or
mov
sub
jecxz
jne
xchg
cmpl
cli
movsl
hlt
or
and
xor
sahf
loopne
scas
sub
enter
ficompl
push
setp
fs
cmpsl
cmp
movsl
inc
repnz
or
dec
dec
test
fs
sub
or
mov
bound
mov
pop
sbb
popa
adc
movsl
je
sub
popf
push
sub
neg
add
test
or
push
aam
fucomip
inc
ljmp
sbb
lahf
das
cmpsl
xor
daa
outsb
inc
ficoml
or
rcl
dec
push
scas
xchg
mov
push
mov
sub
shr
lahf
cmpsb
add
push
fcomip
lret
inc
jmp
scas
stos
sar
jecxz
lods
mov
cmpsl
lods
frstor
cli
into
or
movsb
sub
je
test
mov
faddp
push
cmp
push
and
das
in
jmp
lods
int
out
mov
add
adc
mov
mov
fistl
jae
xchg
into
xor
sub
pop
ret
xchg
jnp
fldcw
jge
rcrb
in
xchg
outsl
push
adcb
outsl
repnz
jbe
lahf
test
cmp
repnz
mov
mov
lcall
aad
jae
out
out
mov
add
pop
sahf
cmpsl
adc
adc
ret
movsb
test
push
pop
adc
xorb
cld
push
cmp
add
stc
jp
dec
mulb
mov
mov
scas
hlt
sbb
inc
fstpt
inc
gs
push
pusha
mov
xchg
pop
cpuid
jo
idiv
pusha
mov
aas
ljmp
pop
lods
insl
fdivr
iret
xchg
dec
jo
sbb
mov
lods
mov
pushf
popf
je
xlat
dec
dec
jp
paddsw
push
cmp
sar
adc
xchg
cmp
inc
mov
inc
test
pop
fs
push
and
and
xor
fdecstp
pop
sarb
insl
mov
bound
dec
out
cmp
leave
xchg
jp
pusha
lahf
lcall
dec
mov
sub
pop
jg
push
in
xchg
leave
mull
xchg
adc
jge
mov
or
in
jns
pusha
sub
cmpsl
xchg
xchg
add
adc
mov
mov
push
adc
jge
xchg
inc
mov
jecxz
ret
and
mov
pop
jnp
scas
fisubs
popa
jl
xchg
push
lock
sbb
pop
in
pushf
loope
cmp
out
adc
pop
xchg
adc
xchg
mov
push
sub
sub
mov
lcall
jge
ljmp
mov
mov
xchg
mov
imul
dec
lds
aam
sub
and
pop
jnp
shrl
mov
imul
int3
call
cmp
jbe
shll
stos
jne
mov
scas
popa
mov
push
mov
icebp
mov
mov
dec
jae
pushf
xor
popf
sahf
repnz
lea
adc
mov
or
jecxz
dec
mov
mov
orb
or
repz
ljmp
sbb
push
mov
jecxz
leave
dec
inc
negb
push
scas
xchg
stos
arpl
dec
sbb
adc
fs
pop
dec
xor
jp,pt
sahf
jno
add
mov
jge
gs
jmp
es
mov
ret
test
push
add
mov
add
cli
lods
leave
lock
xor
cmp
xchg
sbb
cmp
pop
jns
sbb
jo
incb
mov
in
jns
das
roll
je
insl
out
fsubrl
xchg
sbb
lcall
in
sbb
addr16
jne
jae
lahf
pop
dec
leave
add
pop
enter
mov
cmp
aaa
paddusw
dec
dec
gs
or
dec
xchg
add
scas
out
and
dec
sbb
outsl
sahf
xchg
mov
xor
jo
dec
cmp
jo
popa
stc
lret
js
lea
repz
pop
adc
lods
adc
aam
pop
pop
mov
xor
ds
iret
xchg
lock
add
mov
or
cmpsb
insl
rcrl
push
rolb
ss
adc
xchg
sub
dec
std
pop
mov
mov
or
loopne
shl
imul
test
jge
mov
ja
add
lods
fisttps
jnp
pop
jge
mov
pop
cli
mov
adc
jne
mul
xchg
movsb
pop
aam
mov
sub
adc
mov
dec
pop
dec
hlt
and
jnp
mov
sarl
adc
cmpsb
cwtl
bound
adc
mulb
imul
shlb
mov
adc
mov
mov
add
and
int
stos
cmpl
lret
mov
add
pushf
push
or
gs
ret
ds
rol
test
ret
dec
stc
iret
cmp
push
int
ret
pop
push
lret
outsl
in
int3
adc
aad
pop
sti
mov
dec
lahf
jmp
nop
inc
jecxz
cmc
arpl
push
insl
mov
loope
inc
stos
out
xchg
stos
int3
les
push
nop
and
call
es
pop
test
cli
add
int
test
sub
in
jo
fnsave
dec
je
icebp
and
into
mov
mov
inc
fmuls
sub
out
hlt
lds
dec
sbb
jns
outsb
mov
pop
pushf
xchg
xor
outsl
shlb
ja
fstpt
adc
and
mov
adc
mov
std
std
pop
cltd
dec
ljmp
movsl
dec
ret
cli
cmp
xchg
jnp
test
xchg
scas
ss
fmull
push
hlt
push
xchg
out
inc
jns
lods
pop
lock
fs
pmulhuw
cli
xor
ficoms
push
cmp
mov
aad
cmpsb
mov
imul
xchg
jecxz
sub
sub
dec
movl
sbb
cmp
xchg
jmp
and
mov
add
xchg
lea
push
dec
mov
jne
inc
sbb
cmpsl
adcl
cwtl
aaa
cltd
bound
cmp
pand
out
xor
pop
mov
jmp
movsl
inc
das
or
adc
and
cld
stos
cwtl
xor
loopne
xor
aad
scas
lea
outsl
fs
in
std
psrlq
cmp
add
mov
pop
lds
mov
sub
ljmp
lock
in
shll
push
shlb
js
mov
mov
aam
les
test
out
subl
mov
adc
adc
fisubs
add
pushf
push
pop
and
int
or
jl
and
ja
lret
push
push
outsl
inc
imul
mov
sbb
imul
pop
push
scas
mov
fldenv
out
jmp
jle
sub
xchg
cltd
cvtdq2ps
xchg
test
mov
test
adc
mov
lahf
cmp
push
loopne
jo
mov
dec
ss
repnz
test
scas
lahf
xor
scas
cmpsl
hlt
addr16
out
cli
mov
jge
mov
add
pop
gs
scas
ret
cmc
fwait
sbb
in
or
sti
dec
in
mov
aam
and
mov
out
jo
push
ss
xchg
pop
data16
mov
xchg
jp
nop
popf
push
jb
and
std
mov
push
jne
jb
aad
lret
shll
add
fcmovne
insb
mov
pop
jbe
inc
pop
negb
call
adc
cmp
les
xchg
fsin
and
imul
stos
sahf
into
sub
mov
xor
lods
jns
inc
test
push
jb
sbb
call
add
mov
sti
loop
xchg
xlat
out
lcall
xchg
fstpt
sbb
hlt
xor
jne
mov
ret
sti
xchg
mov
inc
mov
inc
mov
sbb
push
push
sbb
jb
mov
mov
stos
das
addr16
imul
and
sbb
xchg
xor
jle
jmp
dec
mov
jle
cltd
in
mov
ja
les
mov
xor
and
jmp
test
inc
dec
sti
loopne
lea
sub
jp
pop
or
cwtl
out
andb
pop
out
nop
xchg
push
dec
mov
mov
sti
sbb
and
sub
out
pop
orb
lock
xor
mov
cwtl
and
stos
enter
add
sbbl
or
xchg
leave
lods
out
imul
mov
or
bound
xchg
mov
mov
aaa
push
lods
nop
adc
pop
jo
sub
std
inc
pop
push
push
out
mov
les
or
push
add
jmp
rol
sub
and
xchg
pop
push
xor
addr16
jo
repnz
jne
jns
rcrb
std
aam
mov
pop
shll
es
ret
jo
cmpsb
sbbl
add
mov
and
jns
iret
fldl
arpl
mov
jo
movsb
in
push
loope
adc
adc
pop
xchg
in
scas
stc
jbe
or
int
loopne
jo
rcrb
lcall
lods
xor
repz
ds
loope
fadds
mov
pusha
pop
xchg
mov
sahf
inc
mov
inc
outsl
dec
mov
sbb
sahf
push
mov
bound
loope
movsl
and
pop
adc
or
insl
movsb
lea
mov
loop
cmp
add
sti
dec
call
xor
mov
jg
mov
mov
xchg
insl
jbe
test
insb
cltd
xor
inc
loope
xor
daa
pop
ds
xor
rcr
or
incb
fistl
imul
cmpsl
daa
and
lahf
fstpl
mov
inc
push
sbb
std
int
dec
adc
xchg
mov
fs
push
shrl
lret
fnstenv
pop
cmp
ja
aas
pop
ret
xchg
mov
adc
sbb
mov
pop
hlt
push
je
pop
loop
inc
test
lods
outsl
jmp
jae
add
jnp
in
test
pop
xchg
xchg
imul
xor
dec
test
jmp
and
loope
lds
aam
add
ss
mov
lock
loopne
andb
cmpl
add
loop
in
hlt
dec
scas
arpl
dec
inc
add
popa
cltd
lret
mov
addr16
add
inc
movb
lock
adc
xlat
mov
call
push
es
inc
mov
adc
cmp
js
adc
jecxz
push
inc
addr16
push
inc
jne
xor
push
sub
or
fwait
sbb
cmpsl
adc
leave
adc
push
daa
mov
bound
rolb
jecxz
inc
leave
xchg
sbbb
xchg
loope
jecxz
cmp
sbb
je
aam
inc
outsl
sbb
sub
jns
or
orl
scas
lret
je
outsl
test
push
rcr
faddl
rcrl
jno
mov
cs
into
popa
loop
je
xchg
pop
add
out
imul
rcrl
dec
insl
and
mov
out
xor
xchg
fdivr
les
jle
enter
mov
lea
enter
mov
add
push
jo
test
and
in
dec
bound
mov
pop
xchg
sub
stos
pop
dec
jbe
dec
and
ja
ljmp
scas
int
sbb
repnz
jmp
add
fsubs
push
xchg
jg
adc
push
divb
popf
cmp
outsl
mov
subb
sbb
mov
sub
mov
push
ret
or
mov
mov
sti
lret
jle
int3
push
push
jne
adcl
dec
push
outsl
inc
out
mov
inc
and
cmp
das
data16
lcall
mov
out
stos
xchg
fnstenv
mov
gs
dec
dec
mov
popa
ja
test
je
in
enter
and
fcmovb
pop
push
and
movsb
cmp
xchg
mov
or
pop
sub
sbb
sbb
andb
pushf
pushf
jl
aas
jg
loope
test
hlt
jo
cltd
mov
lods
pop
out
icebp
ja
adc
das
sbb
and
sbb
sbb
sub
cli
scas
jl
add
push
and
sti
insl
fidivrl
sub
lea
sbb
cmpb
lret
into
mov
mov
xchg
inc
xor
out
xchg
call
inc
fmul
inc
fstp
es
inc
scas
pop
aam
jb
andb
call
xor
fmul
mov
pop
scas
mov
fidivs
mov
jecxz
xchg
mov
clc
cmp
data16
mov
stc
aaa
rclb
cmpsb
or
add
pop
xor
pop
xchg
dec
cmp
inc
inc
jle
lods
pop
imul
aam
cs
popa
jmp
adcl
int
xor
lds
sbb
pop
mov
js
pop
sbb
pop
scas
aaa
adc
cwtl
sbb
lret
test
push
pushf
fimuls
nop
inc
sbb
jne
pop
cmp
stos
jmp
imul
insl
adc
lcall
sarb
jge
mov
fidivrl
jnp
jb
jge
add
clc
negl
lcall
int
jmp
cmp
mov
mov
add
push
pop
shl
out
sti
movsl
lret
fmuls
sub
jne
mov
cwtl
daa
outsb
dec
sub
or
jmp
vmovsd
pop
cmc
pop
or
xchg
ud0
loope
fildl
pop
xchg
cs
push
xor
xor
dec
push
add
xor
movsl
push
hlt
out
pop
in
repz
pop
pop
sub
int
popf
aaa
jge
insl
outsb
call
pop
sub
vcmppd
sbb
fnstenv
mov
mov
jecxz
dec
jns
push
adc
or
sbb
pusha
ficompl
xor
icebp
lret
cltd
push
cli
shlb
arpl
dec
int3
pop
or
in
out
push
not
hlt
popa
jecxz
das
icebp
test
sbb
xor
dec
es
inc
cmp
nop
inc
hlt
in
pop
jecxz
lret
mov
lahf
sbb
jns
xchg
into
mov
push
inc
mov
mov
xadd
std
andl
adc
fnsave
push
xchg
cli
pop
lods
sbb
loop
xlat
pop
out
lods
bound
push
pop
aaa
xchg
mov
xchg
repnz
or
adc
cs
xchg
and
rcrb
xchg
adc
sahf
shll
pop
lcall
test
jecxz
insb
icebp
xchg
jbe
sbb
into
imul
sbb
push
and
lret
test
enter
in
out
aad
in
cmp
push
mov
lods
rorl
pop
mov
int3
mov
jnp
int3
scas
and
stos
pop
xchg
mov
sbb
adc
dec
call
adc
lea
mov
mov
and
lcall
in
mov
mov
xlat
jmp
inc
lahf
inc
dec
or
push
sub
int3
ret
fwait
inc
xor
int3
lahf
fwait
test
cld
lods
out
inc
testl
jge
mov
fs
inc
icebp
out
mov
lods
js
xchg
int
fmul
rcr
cmp
xor
cmp
aad
fwait
xchg
mov
imul
loop
scas
mov
or
inc
push
sbb
dec
push
dec
xchg
mov
jno
xor
insl
pop
lds
pushf
jmp
ret
adc
sbbl
nop
xchg
jg
pop
xlat
call
sbb
fwait
into
or
das
into
jge
in
mov
xchg
xchg
inc
and
inc
cmp
movsb
pop
inc
jl
pop
ret
xor
or
sub
stc
into
adc
hlt
ljmp
pop
pop
jmp
push
lods
sub
mov
jbe
scas
shlb
jge
sbb
xchg
cmp
add
xchg
and
dec
pop
xlat
sub
mov
pop
push
rorl
mov
es
pop
jmp
and
xchg
frstor
add
xchg
mov
sbb
test
push
push
pop
pop
cltd
jmp
out
dec
sub
cltd
pusha
pop
sahf
fstpt
push
mov
mov
aam
xor
shrl
or
adc
fimuls
xchg
clc
cmp
cmp
and
add
inc
aaa
bound
cmp
inc
dec
out
je
insl
sub
notb
push
xchg
or
sub
ret
inc
cmp
or
je
jge
lsl
jmp
cwtl
mov
lods
cwtl
adc
pop
aad
test
push
std
sub
cmpsl
jae
int
adc
and
inc
mov
stc
ret
xor
jecxz
pop
lea
js
repz
nop
cmp
loopne
push
push
and
ja
and
pop
adc
pop
pop
pusha
fdiv
popf
movsb
xor
ss
cmp
popa
and
mov
inc
das
adc
int3
test
pop
cs
fsubrl
pop
cltd
cli
out
or
lods
jb
xchg
dec
mov
lahf
lods
mov
subl
pop
sub
lcall
fcoml
pop
loop
leave
test
push
dec
and
add
outsb
sbb
push
aas
shl
and
clc
pop
movsb
call
jmp
add
or
les
es
fstpl
add
mov
lcall
mov
pop
cmp
dec
fcompl
xor
xor
out
stc
push
lock
into
push
dec
cmp
test
pop
or
frstor
add
ret
out
repz
xchg
dec
les
mov
jl
or
stc
mov
mov
cmp
rcrl
fbstp
sub
gs
movsl
loopne
popf
ret
mov
enter
into
mov
call
jl
into
xchg
aas
scas
pop
lods
dec
das
inc
add
outsb
fcomps
aaa
cltd
adc
xor
sbb
inc
out
dec
decl
add
xchg
mov
xchg
clc
out
jbe
mov
imul
iret
mov
add
xchg
testl
add
js
dec
cmp
sub
jle
mov
dec
iret
jo
push
ss
mov
mov
divl
xor
adc
loop
cmp
add
in
mov
xchg
xchg
mov
scas
mov
sahf
pop
or
pop
and
aam
jp
and
sbb
push
ljmp
imul
iret
notb
cmp
cltd
cmp
imull
fidivrs
mov
enter
loope
or
dec
dec
js
out
iret
push
std
insb
outsl
out
repnz
mov
jbe
outsl
push
ret
lea
sub
add
inc
popa
push
inc
mov
xchg
xchg
hlt
fstl
xchg
nop
insb
lret
sub
add
or
sti
in
and
mov
aas
jae
fwait
or
cs
pop
loop
cmp
xor
jge
sbb
arpl
cs
std
daa
dec
nop
and
je
ss
fmul
in
pusha
das
in
mov
and
scas
push
jg
data16
pop
test
sbb
sub
enter
sbb
sub
jno
std
das
add
push
xchg
add
sbb
test
subl
lea
out
dec
ja
mov
ljmp
std
mov
jecxz
cmp
dec
mov
push
leave
imul
mov
lock
mov
xor
out
lods
push
cmpl
push
fwait
stos
andl
call
pop
mov
jmp
sbb
push
ret
ret
pop
jns
addb
lods
push
fisubrs
es
ret
mov
pop
jg
jbe
sbb
jle
cli
fcmovnu
sahf
pop
paddw
dec
jb
ficoml
psubd
out
iret
sub
or
xchg
or
clc
inc
leave
cmp
das
xchg
mov
sub
xor
xchg
je
rcll
mov
sbb
push
leave
sbb
push
adc
insl
cwtl
pop
scas
in
push
xor
shrb
insl
sub
scas
jno
std
data16
jle
mov
iret
mov
mov
pop
fwait
divl
or
sub
jbe
pop
das
cli
cli
es
stos
inc
mov
mov
call
jp
adc
or
mov
outsb
jp
push
fimull
adc
xorl
adc
mov
pop
mov
shll
pop
ja
filds
and
cmpsb
ljmp
fwait
xlat
adc
push
mov
mov
push
mov
lahf
xor
ret
cmpsb
lock
fisttpll
mov
mov
aas
pop
jns
outsb
fucomp
scas
stos
insb
test
or
or
je
mov
sub
cltd
xchg
mov
jb
pop
jp
cmp
or
inc
inc
rcl
lods
cmc
lahf
xor
dec
xchg
icebp
cmp
jmp
push
inc
lahf
scas
adc
sub
lret
xchg
push
test
pop
jmp
inc
mov
inc
dec
mov
xor
popa
das
push
xchg
sub
lea
shlb
vpsrld
or
add
mov
xor
push
mov
mov
add
dec
mov
daa
les
dec
pop
aas
and
adc
lds
into
inc
rep
imul
daa
mov
jae
push
mov
data16
xor
pop
mov
sahf
or
sub
xchg
jecxz
push
aas
lret
and
loop
out
loopne
jle
add
sub
stos
stos
push
and
nop
mov
int
cltd
jne
pop
ds
cmpsb
mov
push
out
sbb
sbb
dec
pusha
imul
mov
or
dec
out
or
cmp
add
outsb
push
sbb
insl
mov
in
xchg
je
shl
sub
in
jb
adc
jmp
adc
mov
sahf
iret
cltd
adc
and
in
hlt
rcr
jnp
jne
jg
int3
pusha
dec
imul
in
pusha
pop
test
popf
xor
adc
inc
js
int
push
js
sub
test
cli
mov
das
and
in
nop
jnp,pt
shll
or
jmp
inc
cmc
daa
hlt
push
xchg
fldenv
jnp
jle
cmp
pop
std
shll
in
cwtl
jmp
mov
lea
test
clc
int
sbb
adc
daa
pop
mov
mov
adc
jmp
lret
pop
jmp
inc
ja
ja
xor
incb
mov
jge
xchg
xor
test
aas
shll
push
stos
cmpsl
bound
ja
in
and
push
mov
mov
and
dec
add
push
jno
sbb
das
clc
mov
xor
sti
cmp
leave
jns
lock
push
call
push
in
out
jns
inc
outsl
cmp
rcrb
aaa
enter
add
push
iret
fdivrs
rcrl
lret
stc
add
pushf
sub
xchg
aad
fs
xchg
fwait
inc
or
adcb
mov
sub
jnp
orl
or
cltd
lods
cmpsb
push
je
shlb
sub
aaa
daa
aam
jecxz
jns,pt
mov
jp
faddl
popa
repnz
outsl
ljmp
daa
xorb
call
mov
push
gs
or
add
sbb
sbb
adc
push
pop
in
and
hlt
out
sub
fwait
inc
rolb
sahf
pop
hlt
sahf
sahf
mov
dec
jne
stos
dec
jnp
fdivs
jae
mov
out
adcb
lahf
xchg
insl
ljmp
std
or
bound
xorl
ret
adc
push
stos
mov
int3
dec
ds
outsl
and
fbstp
out
repz
movsb
sub
and
loopne
out
inc
jle
fimuls
adc
roll
dec
imul
add
scas
fmul
jno
aad
stos
into
and
js
subl
mov
push
mov
ljmp
mov
popl
adc
pop
sbb
jne
pop
cmp
dec
dec
sbb
icebp
jge,pn
int3
das
popa
jnp
xchg
pop
in
jecxz
and
xchg
or
jl
out
cmc
cmpsl
scas
mov
out
jmp
lock
xlat
xchg
or
push
cli
pop
icebp
push
dec
cmp
stos
je
push
sbb
sub
sub
cmpsb
test
les
pop
jbe
sub
dec
xchg
mov
lret
sbb
lcall
and
xadd
std
sti
fldt
andb
mov
pop
repnz
mov
fiadds
test
fisttps
add
pop
mov
out
pushf
fstl
in
cmc
jo
lcall
and
cmpsb
cltd
xchg
fisubl
ret
jl
psubusw
sbb
out
ret
and
mov
fimull
dec
lock
push
in
xor
test
faddl
add
mov
cltd
rcr
mov
aam
rorb
aas
repnz
scas
xchg
pushf
mov
inc
ret
sbb
adc
adc
test
add
data16
cs
mov
iret
aas
jbe
addr16
push
xor
negb
xor
cmpsl
fldenv
jne
push
mov
aad
add
inc
cmpsb
dec
inc
rolb
mov
mov
mov
iret
adc
mov
fdivrl
repnz
sbbl
in
xor
loopne
nop
popf
pop
inc
dec
sbb
in
jg
iret
loope
repnz
pop
popa
into
loope
cmc
es
ret
dec
mov
movsb
pop
arpl
cld
popa
cmp
shll
imul
rorl
adc
rorb
loope
out
mov
pop
outsl
cld
dec
pop
in
stc
aaa
in
sub
sub
lcall
dec
out
mov
sub
in
cmp
fsub
sub
or
pop
subl
stos
stos
adc
adc
popa
pop
sbb
push
or
mov
add
arpl
mov
xchg
fcomp
das
fldt
mov
stos
inc
lret
lcall
dec
idivl
dec
stc
push
jg
pop
fdivp
dec
sbb
sti
lods
fcomp
inc
insl
cs
std
dec
in
cmpsl
lret
push
lcall
adc
xchg
rorl
and
jmp
lods
ljmp
dec
fimull
movsl
loopne
inc
xchg
add
push
push
cmc
sub
pop
adc
pop
cmp
sub
movsl
mov
test
je
cmp
and
mov
les
jno
andb
ja
loope
push
cmc
int3
imul
sub
adc
dec
mov
popf
rcl
or
sub
fcmovb
les
cld
adc
sbb
aas
mov
das
ret
pop
leave
dec
jecxz
push
xlat
jb
popa
pop
gs
incl
shlb
arpl
xchg
inc
fs
push
pop
push
rorl
cs
les
mov
sbbl
mov
fs
sub
jbe
jnp
cmp
xchg
mov
mov
pop
cmp
jae
aam
mov
lret
lret
pop
ss
or
inc
je
mul
test
inc
lock
sub
xchg
mov
pop
int3
mov
and
lcall
adcl
jne
push
insl
mov
fstpt
int
sub
insl
dec
pop
xchg
scas
movsl
mov
test
mov
inc
sub
xchg
test
insl
out
std
adcl
push
nop
dec
xchg
and
rcrb
ret
pop
cwtl
shll
mov
je
test
aaa
mov
pop
jle
mov
mov
shll
push
push
dec
in
cld
cmp
rorl
enter
dec
in
xor
xor
add
mov
add
fldenv
mov
mov
pop
in
insb
inc
repnz
mov
in
mov
fcmovnu
adc
add
or
rcrl
std
mov
pop
mov
mov
adc
push
pop
mov
lret
cmp
sti
pop
sbb
pusha
sahf
cwtl
pop
xchg
imul
dec
fsub
dec
stos
pop
cld
xchg
outsb
imul
xchg
fmuls
lods
push
mov
mov
rorl
fcmovnu
in
dec
inc
repz
bound
cld
cs
popf
test
js
icebp
popf
dec
lahf
push
ret
mov
cmp
outsl
or
scas
test
cmpsl
pop
loopne
iret
loope
in
sub
xlat
adc
nop
std
pop
cltd
into
add
adc
pop
lock
push
gs
push
jge
popf
in
push
lret
push
mov
movsl
or
mov
test
mov
sarb
jp
iret
or
or
fwait
push
and
shlb
adcb
or
mov
out
out
fcomi
add
cmp
or
vpshaw
add
sbb
push
jnp
enter
ret
jmp
cmpb
lret
cmp
and
adc
das
mov
fldcw
xorl
push
adc
push
jns
mov
filds
pop
adc
std
adc
inc
gs
dec
add
loopne
and
lret
sub
outsl
xor
cmp
fstl
mov
mov
insl
push
rclb
cli
sarb
lahf
jb
jbe
dec
out
fldcw
lcall
cmp
inc
pop
xchg
jae
and
adc
imull
cli
hlt
mov
fwait
pop
push
out
inc
mov
rcrb
mov
jle
mov
push
lret
andb
into
cmp
xchg
push
stos
loopne
dec
dec
cmpl
test
adc
cld
popf
mov
jmp
dec
mov
xor
cwtl
adc
loopne
jmp
aaa
insl
jge
mov
xchg
mov
imulb
or
js
xlat
fldenv
dec
push
cltd
shrl
xorb
xchg
mov
sub
mov
cwtl
movsl
das
pop
push
rclb
cmp
xchg
push
arpl
lret
xchg
push
call
inc
xlat
out
mov
cld
inc
xor
xchg
pop
in
repz
mov
push
sahf
fbld
cmp
push
inc
sbb
sbb
inc
adc
cmp
test
lods
pop
cmp
dec
mov
les
adc
xor
in
sub
in
in
mov
dec
sub
mov
mov
movsb
dec
scas
inc
dec
jno
outsl
jl
insl
mov
sbbb
adc
movsb
jb
xor
fs
dec
dec
sub
push
dec
inc
mov
cld
sub
sub
push
xchg
shrl
and
rorl
sub
sarl
cmp
jo
lret
cld
cs
dec
adc
dec
fiaddl
mov
cwtl
or
ret
sti
jo
sbb
into
mov
mov
and
test
xchg
adc
xor
sub
mov
sbb
ret
nop
inc
imul
test
jbe
push
iret
mov
sub
mov
and
add
notb
and
jl
xchg
push
mulb
loopne
push
outsb
testl
cltd
enter
pop
jbe
pop
mov
pop
jae
mov
loope
adcb
cmc
sarl
jl
aaa
lret
filds
jbe
xchg
sub
push
xchg
pushf
push
lahf
cli
jno
jp
shl
leave
pop
adc
out
sub
mov
aam
xchg
xchg
dec
repnz
imul
xchg
xor
sbb
add
jg
xchg
movsl
adc
cwtl
sub
iret
pop
cli
jp
mov
sub
xor
mov
dec
push
jne
lods
mov
imul
fxch
in
dec
xor
scas
lds
test
inc
sti
decl
lods
inc
dec
inc
sub
push
cld
xchg
xor
lret
ljmp
dec
icebp
sbb
lcall
dec
mov
daa
out
stc
mov
adc
pop
in
lea
lea
movsb
cltd
push
fistpl
cmp
int3
std
xchg
and
jb
sti
fmuls
fwait
stos
insl
ljmp
popa
mov
xchg
lock
push
cmp
inc
inc
xor
sbb
mov
jnp
and
push
fs
adc
cmp
enter
xor
mov
flds
lret
mov
sub
jg
jo
pop
xchg
mov
and
clc
cmc
cld
hlt
or
fisttpl
sub
mov
arpl
imul
cmpsl
notb
jne
mov
mov
jecxz
lret
add
xchg
adcl
adc
push
loopne
xor
mov
pop
loope
cltd
mov
mov
add
pop
push
dec
inc
dec
outsb
sbb
push
inc
ljmp
dec
add
setle
mov
dec
fst
inc
pusha
push
sub
popa
xchg
test
xchg
aad
int
and
inc
gs
mov
repz
shlb
imul
push
mov
fcmovu
xor
cmp
push
jne
stos
pop
cmp
adc
into
or
cmp
add
add
ljmp
fs
shll
xchg
ss
aas
xchg
mov
xchg
in
rorb
ja
stos
pushf
cmc
push
mov
stos
test
dec
dec
and
and
jge
cli
jo
cmp
sti
std
loop
neg
imul
loopne
data16
sahf
sbb
es
sub
pop
adc
xchg
les
int3
cltd
pop
movsl
bound
mov
sub
lcall
lods
aad
push
jae
cmp
push
pop
scas
ror
int
jl
adc
gs
idivl
inc
iret
push
js
and
jne
int
or
jge
sti
inc
das
scas
in
cmp
adc
enter
jnp
push
pop
and
std
inc
sahf
mov
fdivr
or
xchg
repz
js
shlb
insl
je
lock
jmp
aam
scas
aad
loopne
test
cld
daa
leave
adcb
daa
mov
jno
jmp
cmp
stc
pusha
cmp
jae
fnstsw
add
cli
push
inc
mov
inc
test
pop
loope
cmpsl
sub
push
sbb
dec
lock
in
jo
jae
xchg
dec
push
movsl
pop
ret
std
daa
sub
xchg
ljmp
sbb
dec
gs
and
sub
popf
bnd
js
pop
mov
mov
dec
lods
mov
mov
sarb
arpl
es
fcompl
aaa
xchg
std
or
out
push
cmp
cmpsl
or
fsubrl
mov
out
jg
ficomps
arpl
mov
insl
xor
in
rorl
pop
pop
push
and
test
aad
bound
mov
push
cs
push
mov
ljmp
rol
fistpll
imul
dec
stos
shlb
das
cmpsb
mov
adc
sbb
in
pop
ror
bound
loop
pop
mov
rcl
std
adc
dec
sub
jecxz
inc
pushf
scas
pop
pop
push
add
sbb
dec
sbb
mov
jge
mov
cmp
fnstenv
xchg
fwait
cld
fisubrs
lret
xchg
xor
pop
pop
push
call
mov
out
stos
push
mov
and
in
xchg
mov
pop
inc
cwtl
xchg
cmp
cld
xchg
sub
adc
es
fdivl
dec
jl
fdivl
xorb
xchg
jge,pn
or
sbbb
aas
xchg
les
mov
push
hlt
test
push
mov
shrb
nop
add
sbb
sarl
cmc
lret
xchg
mov
mov
shll
movsb
mov
mov
mov
pusha
ljmp
mov
pop
inc
sbb
push
xchg
jg
mov
enter
jmp
movsl
cmp
lahf
and
xor
ret
in
repz
je
push
push
in
stos
lcall
inc
jg
cli
rclb
adc
cmpsb
jp
lock
push
add
add
sbb
push
aam
mov
sbb
aas
push
ret
loop
rclb
pop
ret
sub
mov
inc
or
adc
xor
xchg
test
addl
cmc
shll
jne
xlat
js
xchg
xchg
adc
jo
sbb
outsb
mov
lret
stos
inc
adc
mov
insb
in
test
add
and
shl
pop
cld
mov
fidivrl
cmp
add
rorl
add
push
lahf
lcall
cmp
mov
rcrb
jae
jg
in
pop
or
insl
cmpsb
gs
cmc
mov
jmp
lahf
into
adc
cmp
push
daa
xor
add
and
xchg
pop
or
push
inc
daa
fucomip
and
dec
daa
dec
dec
push
je
imul
add
or
fidivs
notl
int3
push
add
pop
jo
fimuls
mov
push
pop
ss
jo
jno
adcl
and
jmp
ret
hlt
popa
stos
mov
data16
and
or
dec
sbb
cmp
loop
xor
inc
mov
mov
adc
and
pop
mov
lret
jno
xchg
ds
ficomps
daa
cwtl
adc
insl
jb
cmpsb
adc
cs
pushf
pop
mov
mov
out
js
jle
jmp
mov
popf
or
cld
das
ret
lahf
push
test
orb
leave
ds
jnp
and
or
popf
fstps
aad
cmp
je
fisubl
mov
mov
cs
cwtl
sbb
bound
call
addr16
push
add
mov
in
pop
push
cwtl
stos
in
push
or
xchg
test
adc
push
sti
mov
xor
mov
pop
sub
inc
nop
jne
xor
out
fisttpll
outsb
jg
sub
mov
les
cmp
sbb
inc
mov
add
leave
inc
punpckhwd
inc
leave
enter
repnz
loop
pushf
push
ss
sbb
lret
xor
adc
jne
in
add
pushf
in
sub
mov
xchg
cld
dec
mov
sbb
lcall
aam
inc
pop
push
mov
hlt
clc
pop
xorb
pop
call
sbb
mov
arpl
and
cmp
hlt
dec
mov
adc
sbb
push
arpl
movsb
cmpsb
sbb
incl
adc
ss
aad
mov
cltd
cmpsl
mov
push
repnz
imul
pushf
sub
int3
push
add
into
mov
stos
add
call
lret
mov
leave
xor
mov
dec
jle
test
adc
mov
mov
adc
cli
and
rcll
out
lea
lret
push
mov
popf
imul
or
out
and
push
int3
cld
mov
or
cs
xor
mov
es
rcll
push
lret
cmp
jne
insb
lgdtl
jp
jmp
test
imul
cmp
mov
mov
cmp
cmp
in
and
xor
fiaddl
lcall
pop
mov
adc
in
lret
fistpll
and
repnz
scas
add
mov
call
add
xorb
pop
cmp
fucomp
in
dec
negl
fnsave
decb
arpl
mov
or
lea
sbb
jl
cs
inc
fwait
sub
inc
loope
movsb
mov
add
jnp
ficoml
test
mov
fildl
sbb
pcmpgtd
in
into
dec
pop
push
add
int
pop
stos
inc
push
icebp
test
gs
push
mov
mov
shlb
cmp
xor
add
jno
pop
lcall
movsl
insl
fimull
mov
lock
push
jecxz
mov
aad
fwait
les
aaa
lahf
sbb
sarb
arpl
scas
lea
xlat
mov
mov
jbe
xor
jbe
mov
sbb
xor
pop
ror
jecxz
pop
lret
repz
sbb
jo
push
and
sub
sub
sahf
and
or
xchg
jl
or
fisubl
andb
add
ljmp
pop
mov
sti
test
xor
adc
xchg
bound
add
fcoms
cmp
or
shlb
xor
mulb
or
gs
push
fisttpll
add
lret
push
mov
enter
orl
cwtl
je
xchg
in
clc
mov
xchg
dec
xor
cld
arpl
or
pop
sbb
xor
pop
add
and
cmp
out
sub
pop
ss
pop
or
cmpsb
pop
in
xor
sbb
incl
and
dec
ss
push
cmp
push
pusha
pop
cmpb
adc
jle
jo
mov
mov
test
arpl
fwait
inc
inc
xorl
mov
and
or
test
or
ja
insl
xlat
mov
sub
call
mov
xchg
push
xchg
xchg
inc
add
fldcw
rclb
rcrb
loopne
sbb
fdivl
repnz
xchg
xor
rcrl
sub
lock
jge
fdivl
shrb
add
add
sbbl
mov
out
dec
mov
jo
fldpi
mov
mov
imul
aas
fiaddl
xor
pop
xchg
mov
jecxz
out
lds
mov
push
clc
dec
push
pusha
nop
out
inc
sbb
out
cltd
shl
adc
iret
in
sbb
dec
ret
leave
lock
aas
je
xor
fiaddl
insb
sub
in
sbb
jge
mov
cmpsb
fnstsw
shrl
push
xchg
mov
push
xchg
pop
sbb
and
cmp
sub
outsl
mov
cltd
fdiv
movsl
add
fbld
lods
aas
xchg
stos
dec
dec
fmulp
dec
xchg
xchg
cmp
push
scas
adc
inc
jns
fsubrl
mov
mov
pop
jno
out
js
pop
inc
jo
popf
jno,pt
sbb
push
mov
mov
mov
lcall
xchg
in
insb
popa
leave
gs
test
lods
pop
and
inc
pop
xchg
xor
jae
jge
xchg
and
or
je
xchg
aad
cmc
cmp
negb
cld
loope
push
leave
inc
mov
mov
stos
mov
adc
sbb
add
xchg
and
popf
lods
dec
xor
outsl
xchg
cmp
xor
std
push
out
add
add
popa
mov
clc
push
xchg
loope
lds
dec
xor
jp
and
ds
sbb
imul
sbb
iret
pop
adc
mov
and
push
cmp
inc
pop
push
adc
xor
sub
fldl
loopne
std
fstpt
lret
sub
inc
push
mov
dec
push
mov
mov
pop
push
mov
scas
push
push
sarl
and
stc
xchg
xor
repnz
inc
jne
pop
mov
ljmp
xor
leave
shrb
inc
sti
push
jp
jge
pop
jle
mov
bound
pop
jae
cmp
lret
push
dec
xchg
loop
cwtl
mov
leave
mov
pop
jmp
cli
cmc
and
in
sti
mov
adc
jb
outsl
or
int
mov
fwait
mov
ljmp
cmp
inc
jae
ret
xchg
je
xor
add
mov
cmp
cmc
test
jg
imul
cmp
sahf
imul
popf
in
cmp
out
mov
sbb
aas
sar
imull
mov
lea
out
mov
test
xor
in
cmp
or
std
and
shrb
add
adc
and
bound
pushf
rorl
jbe
pop
cli
mov
cli
outsb
pop
xchg
jnp
push
lret
cwtl
dec
cmp
je
jp
add
adc
lcall
in
insl
jge
das
sbb
rcrb
pop
scas
imul
jmp
dec
lods
xor
jne
popa
addr16
test
push
ficoms
push
mov
fldl
fidivrs
leave
cmp
cltd
ja
and
push
stc
pop
aas
cmp
ljmp
je
lret
nop
in
mov
out
mov
sub
out
or
andl
repz
xor
cmpl
sub
or
das
adc
int3
inc
dec
and
popa
pop
loopne
test
js
mov
insl
mov
stos
ret
es
lcall
lret
sbb
cltd
xchg
sbb
lods
mov
push
fidivrl
arpl
push
aas
mov
adc
lahf
adc
xchg
rorl
cmpl
stc
or
daa
addr16
rcll
lret
jbe
cwtl
loopne
inc
test
fwait
mov
pop
mov
and
pushf
mov
into
jno
pop
cltd
jle
sahf
mov
bound
add
mov
rclb
fdivl
movsb
lret
push
mov
call
popa
push
pop
xchg
and
icebp
sarb
sbb
mov
insl
push
pop
imul
or
sbb
cmpsb
loop
lods
fidivs
pushl
addb
xor
pop
js
enter
push
sub
movsl
test
lods
xor
mov
pushf
sbb
add
cmp
mov
ret
adc
xor
popa
inc
mov
es
dec
jge
jecxz
imul
push
cld
repz
repnz
rcll
sbb
popa
jmp
adc
out
in
pop
fwait
adc
jle
adc
pop
and
pop
inc
xchg
loop
push
mov
xchg
add
mov
dec
loop
cmc
and
push
fldenv
test
jecxz
cmp
popa
je
and
ds
cmp
mov
mov
cltd
test
sub
mov
movsl
mov
insl
push
mov
mov
mov
mov
pop
pop
push
out
arpl
jg
popf
out
push
leave
mov
xor
fs
push
mov
mov
fs
or
loope
or
mov
adc
adc
in
push
ret
mov
repz
mov
jge
add
xchg
call
push
push
ja
test
adc
add
inc
daa
adc
fldl
mov
pusha
enter
push
jbe
mov
or
xorb
scas
xlat
bound
divl
fdivr
push
push
imul
rolb
mov
mov
inc
xlat
xlat
jle
nop
xchg
hlt
jmp
ja
xchg
mov
addr16
das
xor
iret
leave
cltd
dec
ret
aad
lret
sbb
jecxz
call
aas
mov
int3
sbb
pusha
call
pop
xchg
leave
clc
xchg
add
clc
mov
mov
pusha
imul
aas
sub
sub
mov
or
and
mov
push
mov
arpl
sbb
pop
in
mov
xor
fcomp
and
adc
daa
add
adc
daa
rolb
cmp
mov
insb
xor
dec
push
sbb
dec
xchg
mov
sbb
pop
lods
call
pop
xor
add
lcall
or
xchg
dec
sbb
scas
pusha
pop
hlt
jl
cmp
dec
jo
push
lock
pop
sub
into
js
add
jl
lcall
repnz
pop
rolb
iret
flds
dec
call
sbbb
mov
cmp
test
lcall
cs
sbb
add
cmc
xchg
or
xor
insb
mov
test
int3
or
xor
mov
adc
cmp
aam
repz
lret
xchg
mov
icebp
hlt
je
mov
lret
lock
jle
ds
out
mov
iret
or
ret
cs
push
in
roll
jae
sub
dec
or
dec
sbb
rclb
adc
inc
leave
sbbb
mov
jge
jle
jbe
add
lret
or
jns
add
insl
popf
fildl
roll
sub
daa
push
mov
jbe
jb
and
sbbl
mov
xchg
out
inc
movsb
roll
mov
xor
mov
bound
jno
shlb
pop
pop
scas
mov
cmp
mov
rol
stos
cmp
dec
andb
add
cmp
sbb
out
jge
pop
pop
cmp
and
sub
pusha
mov
dec
jecxz
fcmovnb
lret
sub
mov
add
js
pushl
add
jecxz
sbb
jbe
cmpl
add
jns
add
imul
or
lcall
jg
sbb
int3
cmp
in
push
sbbb
in
stos
sub
aam
push
fiaddl
mov
leave
mov
push
push
sbb
adc
inc
test
adc
es
adc
enter
mov
insl
xlat
test
mov
int
test
fdivrs
lds
int3
cwtl
pop
fs
mov
jae
xchg
subb
mov
xchg
and
insb
rorl
and
mov
mov
pusha
call
sbb
xchg
pop
push
subb
cli
xchg
xor
aaa
loope
mul
incb
sbb
scas
push
xchg
lcall
mov
notb
pop
xor
pop
adc
mov
insl
and
bound
jo
add
addr16
aam
xor
dec
mov
outsb
xor
add
dec
pop
icebp
push
in
inc
nop
fcmovu
stos
test
mov
gs
xor
and
repz
je
push
inc
rcll
leave
inc
mov
sbb
icebp
and
xchg
push
stc
hlt
xchg
sti
cli
or
pop
jne
or
or
punpckhdq
fs
push
into
outsl
push
pop
out
xchg
push
imulb
jle
cmpb
or
in
push
das
jecxz
jno
out
outsl
lret
pop
stos
xchg
arpl
sahf
xor
ds
jae
out
lret
int3
add
clc
bswap
inc
fmuls
orb
adc
inc
cltd
les
loopne
loop
lcall
add
ds
fbld
ss
adc
pop
cmp
and
add
imulb
insb
lret
mov
clc
je
add
inc
test
test
or
jecxz
jp
mov
dec
mov
jl
mov
mov
aad
pop
fwait
addr16
mov
fldt
ror
xchg
add
popf
or
popl
or
cmp
mov
shlb
icebp
ficomps
scas
inc
sbb
rcl
stos
les
push
inc
inc
cld
iret
or
dec
jle
mov
sbb
fbld
and
rolb
sub
jecxz
add
pop
dec
or
xchg
push
frstor
aad
mov
je
add
mov
and
add
movsb
sbb
pop
ljmp
mov
mov
mov
es
out
mov
pop
iret
and
std
int
aam
push
xchg
add
icebp
loop
das
insb
xchg
idivl
push
fs
inc
icebp
inc
push
jecxz
or
lods
xor
mov
mov
es
or
dec
and
push
sahf
or
xor
inc
add
xor
loope
jp
push
push
inc
call
cltd
ja
cmpsb
loope
loop
jno
mov
lock
pop
out
cmpsl
popf
rorb
or
cmp
add
add
dec
adc
pusha
mov
test
jnp
call
jne
fcomi
mov
fcoms
sbb
push
cmc
into
adc
insb
les
sub
call
sbb
pop
xchg
push
jecxz
or
in
push
lret
xchg
mov
xchg
adc
xor
mov
inc
scas
sbbb
jecxz
repnz
into
adc
jp
add
test
sbbb
push
xchg
xchg
sub
xchg
push
ss
sub
pop
inc
jg
sbb
stos
sti
xor
sti
xchg
hlt
pop
mov
ljmp
push
xchg
pop
aas
and
cmp
add
xlat
stc
cmp
lods
xor
and
iret
sub
adc
ljmp
adc
mov
inc
sub
xor
pop
data16
in
jns
push
push
sub
inc
ljmp
fisubrl
repz
mov
dec
iret
and
je
add
cmc
int
dec
mov
jae
push
in
imul
or
into
mov
aad
xchg
inc
test
dec
jl
add
pop
pop
sub
or
pop
rcll
iret
mov
aas
nop
xchg
pop
xchg
repnz
int3
pop
jno
xor
mov
fisubl
scas
shll
xor
hlt
jb
lcall
lret
stos
push
add
call
xchg
pop
ret
and
in
xchg
out
dec
rcrb
fcomps
js
jge
js
test
sahf
movsb
add
mov
rcrb
data16
jmp
pop
addl
xorl
test
and
mov
xchg
pushf
inc
aam
mov
cwtl
sbb
inc
inc
daa
call
in
cmp
cmp
shrb
or
fisubrs
in
stos
push
scas
nop
repnz
xchg
cmpsl
mov
push
aam
mov
inc
cld
dec
call
pop
push
lret
clc
sar
test
and
sarb
push
aam
or
pop
repz
nop
cli
xchg
mov
adc
xchg
clts
mov
mov
mov
jl
out
test
fs
or
jae
push
sbbl
mov
std
adc
ds
mov
mov
sti
or
adc
push
jae
repnz
pop
mov
xor
rcrl
fisubrs
or
mov
xor
movsl
fdivrp
push
test
enter
out
loop
add
mov
pop
xchg
dec
push
sbbb
cltd
xchg
scas
stos
pop
mov
pushf
lahf
fcmovbe
xchg
jo
xchg
and
add
stos
dec
sbbb
push
sub
pop
xor
mov
adc
dec
and
mov
xchg
cmp
and
xchg
lahf
iret
pop
cli
flds
out
sti
fldenv
inc
xor
inc
cs
mov
dec
nop
sub
xchg
dec
sbb
les
mov
stos
jo,pt
popa
jne
fisubrs
pop
pop
dec
je
jl
in
fdivrs
mov
out
fsubs
insb
mov
inc
mov
fmuls
ret
inc
movsl
lock
rorl
sahf
icebp
xor
mov
mov
sti
cmp
jno
mov
adc
inc
xchg
cmp
push
sub
xchg
movsl
jo
ja
cli
in
mov
xchg
sub
jecxz
test
cltd
jb
aam
inc
ds
or
mov
jmp
push
inc
dec
in
lock
mov
fwait
or
in
mov
test
jl
lods
pop
fcmovu
push
jg
mov
sub
xor
or
push
shrb
fdivl
mov
adcb
filds
iret
push
iret
adc
or
into
pusha
push
bound
inc
and
sbb
repz
mov
rol
jbe
xchg
xor
mov
mov
jb
push
imul
rcll
mov
cmp
xchg
fists
add
les
bswap
pop
loop
test
ss
test
xor
cld
scas
mov
sbb
xchg
and
ja
std
jp
enter
in
push
mov
mov
pop
mov
pop
out
imul
push
jns
popa
mov
inc
popa
idivl
iret
mov
lcall
daa
hlt
arpl
icebp
pusha
test
hlt
push
popf
clc
pushl
outsl
test
add
lcall
iret
cltd
shlb
push
mov
dec
lret
jb
mov
ljmp
sub
add
xor
mov
into
cmp
sbb
xchg
add
into
jae
fiadds
mov
sbb
loopne
out
or
cmp
pop
sbb
xlat
loopne
shl
jl
and
xchg
xor
andl
fistpll
push
cmp
dec
xlat
aas
cmc
pop
imul
push
xchg
sbb
push
sub
shlb
mov
in
into
mov
dec
movb
pop
rorl
cwtl
push
ja
mov
jne
movsb
or
mov
lods
popa
mov
fwait
lods
rolb
mov
fcomps
xor
push
daa
mov
das
and
push
aad
loopne
loop
and
test
cmp
push
inc
fld
aas
es
add
insb
adc
rcll
inc
sub
movsl
mov
push
loop
mov
mov
cmpsl
je
jp
insl
flds
lods
out
movsb
loope
jns
mov
pop
xchg
or
add
aaa
cli
jl
subb
adc
or
fcoml
movsl
jno
mov
xchg
sbb
xchg
incl
dec
sti
aad
pop
pop
jae
out
out
and
inc
mov
rolb
leave
sub
adc
adc
inc
add
loop
testb
fildl
push
das
js
pusha
js
subl
dec
in
jmp
pushf
sbb
dec
mov
cld
sbb
mov
lcall
sbb
daa
enter
pop
mov
pop
cmpsl
xchg
iret
jle
cmp
cwtl
xchg
movsl
pop
cmp
jle
ficoms
jnp
cltd
pushf
shll
imul
test
test
push
fadds
in
sub
shll
xchg
mov
pop
clc
and
xor
gs
push
lret
xor
or
and
sbb
adc
sbb
lret
int
int
out
mov
fs
adc
or
bound
cmpsl
sbb
stos
xchg
pop
lea
jo
xchg
pop
inc
aaa
jbe
fbstp
or
pushf
adc
sbb
jp
mov
fwait
out
mov
mov
ljmp
and
into
sbb
add
repnz
push
gs
sbb
rcrb
rcl
std
xor
adc
loope
scas
mov
or
pop
ja
pop
out
icebp
repz
mov
jmp
loopne
rcll
dec
xchg
sub
dec
and
and
nop
add
jmp
adc
repz
rolb
imul
mov
sub
inc
inc
push
pop
shlb
imul
cmp
cmpsb
out
mov
and
and
mov
movsl
inc
mov
in
push
mov
mov
pop
repz
cmpsb
sbb
or
sbb
push
pusha
jl
fcmovnu
adc
xorl
push
roll
push
inc
push
jnp
ret
ret
xor
shll
sahf
or
loopne
xchg
nop
movsb
leave
arpl
mov
gs
push
idivl
push
mov
sub
mov
jmp
lahf
or
popa
shlb
das
or
loopne
aas
jb
inc
push
js
stos
fsubrl
call
push
insl
mov
mov
imull
and
fnstsw
lea
jae
popa
pop
xchg
dec
shlb
addl
add
inc
push
inc
lods
fcomi
mov
add
xchg
dec
jae
mov
int
push
sti
lock
sub
loope
gs
push
xor
repnz
mov
clc
jg
adc
mov
andb
in
pop
or
fstpl
jl
inc
cmp
xchg
loop
xlat
cmp
lods
cld
jne
clc
xor
jmp
mov
or
xchg
pop
dec
push
fucomip
sbb
xchg
insb
xor
int
lret
mov
sbb
ret
jp
rcll
pop
mov
fwait
jp
nop
cmp
mov
stc
and
gs
push
inc
lock
leave
sbb
popa
inc
cmp
fwait
jns
mov
jbe
incl
mov
inc
mov
movsl
int3
lahf
cltd
shrb
jp
ljmp
mov
or
call
lock
fwait
push
nop
adc
sahf
andb
insb
loope
aas
push
dec
ljmp
fldl
mov
mov
xor
into
inc
mov
jg
hlt
xchg
sarb
pshufw
repnz
scas
pop
push
push
dec
sti
ds
repnz
sbb
sub
jb
lret
stos
mov
mov
and
push
pop
js
test
adc
pop
jle
sub
xlat
mov
fmulp
int
xchg
out
sbb
repnz
rcll
xchg
pop
cmc
test
xchg
push
aaa
cmp
mov
nop
add
data16
rorl
in
mov
dec
adc
cmp
ret
adc
movsb
push
push
push
cmp
in
xchg
inc
mov
cltd
es
je
xlat
jae
lret
mov
pop
adc
dec
int3
dec
push
xor
scas
bound
cltd
psrlq
adc
dec
cmp
cmp
je
popf
mov
jnp
sarb
sbb
adc
mov
sbb
mov
mov
mov
or
cmp
mov
xchg
fisttps
push
imul
dec
aam
xchg
lds
inc
mov
pop
pop
sbb
cmp
mov
int3
pop
movsl
jo
pushf
nop
je
mov
scas
fdivrs
stc
pop
xchg
fiadds
out
jns
test
xchg
and
push
sub
adc
sub
sbb
cmpsl
xchg
in
jns
jbe
outsb
sub
and
pop
aam
inc
sub
sbb
cmpsl
xor
rcll
imul
sub
ss
jmp
jae
leave
sbb
sbb
and
pop
mov
jnp
icebp
cs
or
xor
mov
in
sarb
out
fs
mov
rorl
nop
and
loop
mov
or
scas
jae
into
push
lea
sub
mov
daa
cmp
ljmp
mov
push
xor
push
sub
jle
insb
and
pop
jae
pop
pop
nop
cltd
and
loopne
icebp
idivb
adc
rcl
ret
cmp
icebp
or
movsl
push
cmpsb
push
dec
pop
or
push
cwtl
test
and
ljmp
and
fisubrs
imul
xchg
lcall
sarl
lods
and
inc
mov
dec
scas
pop
movb
movsb
mov
sbb
cltd
ret
repz
cmc
xor
leave
xor
push
sub
xchg
sbb
clts
mov
cmpsl
sbb
xor
inc
adc
cmp
pop
jle
int3
or
mov
popa
xchg
mov
push
das
jmp
pusha
js
sbb
call
in
add
and
pop
sub
or
mov
shrb
push
push
adc
inc
add
mov
push
push
cmpsb
dec
xor
adc
ljmp
xchg
pusha
mov
shrb
lret
test
sub
jns
mov
mov
std
cmc
dec
push
sbb
pop
adc
repz
adc
imul
jg
dec
ja
cmpsl
imul
sarl
jae
mov
xchg
in
mov
pop
pop
repnz
add
inc
and
push
and
add
add
or
cld
push
inc
mov
jo
subl
aaa
gs
call
cmpsl
dec
gs
cmp
cmp
mov
sbb
in
ja
or
in
pop
and
loope
sbb
and
imul
out
push
xchg
into
xchg
scas
ss
mov
jno
xchg
push
adc
mov
jg
pop
lods
movsl
xor
jmp
mov
xchg
push
in
or
xchg
dec
loop
xchg
push
xchg
jno
mov
add
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
jl
scas
lcall
ds
icebp
mov
pop
in
jno
sub
fdivl
lods
sub
incb
lea
inc
movsl
mov
add
sbb
sub
adcl
xchg
jnp
cmp
sbb
sahf
shll
sahf
inc
inc
adcl
repnz
orb
adc
pop
icebp
xor
xor
in
xchg
or
push
inc
dec
int3
xchg
dec
push
adc
sub
std
fldl
clc
jmp
and
mov
sbb
cmpsb
adc
frstor
jns
jae
xorl
mov
adc
loope
out
es
stc
mov
jmp
mov
sub
les
cld
jmp
add
cld
mov
adc
outsb
adcb
push
addl
inc
je
cli
inc
inc
mov
dec
pop
cli
pop
loop
xchg
xchg
fstpt
pop
jle
cli
int
push
xchg
push
xchg
jg
lret
rcr
js
jne
cmc
cmp
jbe
or
out
fwait
pop
xor
repz
sub
jno
push
add
fxch
out
stos
mov
sbb
push
sbb
ss
or
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
mov
add
