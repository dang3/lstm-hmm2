push
call
test
je
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
lea
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jl
xor
pop
inc
pop
pop
ret
push
mov
sub
movl
mov
xor
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
andl
pushl
pushl
pushl
pushl
call
add
cmp
jne
movl
jmp
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
sub
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
xor
push
pop
div
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
shl
mov
shr
or
mov
mov
mov
jmp
movl
call
xor
jmp
call
push
call
push
push
push
push
call
push
push
call
xor
inc
pop
pop
leave
ret
int3
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
jmp
lcall
mov
jne
popa
inc
push
arpl
mov
add
sbb
xchg
cs
sbb
jge
cmp
inc
xor
inc
std
dec
pop
push
imul
xorl
dec
and
fsubs
sub
lret
add
add
inc
jp
or
aas
jl
sub
rcrb
enter
mov
push
mov
sub
add
sbb
stos
lcall
in
test
or
jl
mov
loope
jb
mov
xchg
aad
inc
fdivs
and
push
mov
xchg
addl
push
and
in
dec
add
or
jl
add
in
jl
dec
pop
inc
sub
xchg
dec
or
les
jne
inc
ss
fcoms
push
je
dec
cld
insl
and
cltd
mov
hlt
hlt
sub
aas
rcll
adc
mov
and
sub
cmp
jg
fidivl
jle
sub
mov
jp
lret
movsl
imul
test
adc
or
push
mov
adc
or
mov
cmp
stos
mov
fadd
inc
jne
push
fdivp
sbb
pop
inc
cli
sbb
and
aam
add
out
iret
mov
daa
leave
insb
xchg
sahf
add
xor
das
sub
pop
push
fsub
push
fcmovu
pusha
bound
dec
lods
add
mov
inc
add
into
and
push
gs
jns
dec
push
loopne
cwtl
jmp
xor
push
inc
iret
xchg
cltd
in
mov
fdivs
sub
mov
orb
shl
cmpsb
flds
cli
mov
das
mov
hlt
pushf
out
xchg
mov
movsb
push
fs
outsb
addr16
inc
and
push
and
adc
inc
insb
or
pusha
adc
daa
jns
pop
aas
lea
or
dec
sub
mov
test
int
ds
pop
xchg
hlt
gs
dec
insb
cmc
jge
cmp
call
adc
cmp
roll
sbb
push
push
cmpsl
push
cmp
sahf
js
xchg
inc
sbb
cltd
mov
xlat
mov
add
add
push
and
mov
imul
dec
jno
xchg
mov
or
int3
push
jle
xlat
stc
lock
xchg
mov
xchg
jbe
push
add
add
push
add
lods
in
dec
and
jl
fs
imul
pop
cmc
stos
in
xorb
sub
xor
aam
scas
int
push
sbb
push
mov
mov
test
int
add
inc
mov
movsb
stc
sub
test
xor
mov
xchg
mov
add
push
push
fstpt
rcrb
add
cmp
fcmovnu
add
insb
test
test
sub
aad
pop
addr16
pop
loope
aam
fildll
pop
xchg
mov
int3
ja
jecxz
lret
mov
push
lret
out
jg
sbb
push
ret
dec
clc
lods
cmp
xchg
add
aaa
inc
push
fcoml
cmc
fwait
xor
in
inc
sub
add
das
pop
pop
flds
in
adc
scas
inc
dec
xor
imul
dec
cmp
lret
cmp
gs
test
cmpsb
loope
mov
je
sahf
sbb
loopne
mov
inc
xchg
mov
fsubr
pop
and
ss
aas
shlb
sti
pop
mov
inc
mov
sub
into
int3
mov
jnp
aas
pusha
sub
adc
leavew
push
out
shll
mov
data16
xlat
jo
lcall
out
dec
xchg
lret
ret
xchg
mov
pop
jne
mulb
incl
aam
mov
xchg
cs
mov
jbe
sub
sub
movsb
imul
popa
psraw
xor
push
dec
incb
subb
dec
xor
fistl
gs
sarb
push
push
mov
inc
dec
cmp
mov
cmp
pop
addl
cmpsb
adc
int
xchg
scas
jns
mov
xchg
imul
fs
push
scas
rorl
or
and
pop
je
addl
into
fs
jne
loop
mov
imul
adc
push
inc
or
xchg
pop
pop
adc
xchg
sbb
movsl
pop
cmp
jp
dec
ficomps
repnz
inc
or
aam
cmp
mov
pop
xchg
push
repnz
add
fisttpll
iret
lahf
sbb
mov
lea
cltd
push
mov
aas
adc
insb
fsubr
mov
cs
mov
in
cwtl
dec
xor
loopne
xlat
mov
adc
jbe
lock
ror
pop
add
mov
xchg
mov
rcll
repz
adc
cwtl
and
mov
rcl
cmp
pop
inc
shrb
or
inc
or
add
add
in
or
rclb
mov
xlat
sub
cmp
adc
out
in
shrb
sub
adc
aad
sub
in
jne
mov
sbb
das
notl
loopne
pusha
fbstp
add
mov
fistl
lahf
pop
and
mov
pop
mov
push
nop
add
ljmp
and
fmulp
dec
lds
orl
pop
out
dec
call
add
adc
jmp
cmp
cmpsb
jmp
jp
or
cmp
pop
aad
lret
mov
cmpsb
mov
je
pop
dec
pop
lods
enter
js
inc
cmp
pop
xor
inc
cmp
jns
push
mov
add
inc
aad
cmp
outsb
sahf
jbe
emms
lods
repnz
sbb
dec
xchg
rcrb
arpl
sbb
inc
pop
cli
out
adc
mov
fwait
cltd
dec
jbe
movsb
in
insb
lahf
dec
push
or
jb
xchg
xchg
inc
inc
push
sbb
push
cmp
pop
xchg
std
insl
mov
mov
mov
cmpsl
iret
rol
jp
jno
xor
push
loop
outsl
fsubrs
jo
insl
and
push
jp
out
scas
cmp
pop
das
es
and
jl
fldenv
or
sub
push
in
cmp
or
nop
fcomp
jecxz
add
adc
ftst
mov
mov
sub
xchg
bound
test
mov
insl
loopne
xchg
mov
test
jo
xor
jmp
ja
outsb
push
mov
hlt
jge
daa
outsl
repz
int3
pop
xor
dec
xor
mov
push
sbb
ficoml
pop
or
aad
imul
mov
sar
shlb
iret
movsb
out
and
mov
andl
cld
stc
push
mov
add
xchg
inc
cltd
pusha
cmpsl
xorb
aas
push
push
xchg
push
pop
jae
leave
xchg
xor
aam
pop
in
jp
loop
pop
stos
mov
mov
cli
fcoml
test
mov
subl
sub
pop
add
insl
sub
aas
pop
inc
imul
or
sbb
lods
add
pop
out
hlt
xor
aad
or
adc
in
lahf
and
ja
push
or
std
into
leave
dec
add
jnp
push
jns
rol
or
jl
in
js
test
adc
mov
popf
push
xchg
in
fstpl
cld
mov
rol
mov
mov
jne
mov
bound
insb
mov
adc
push
int3
out
jnp
xor
fbstp
incl
lret
inc
dec
jnp
shr
xchg
jnp
fistl
loope
clc
mov
mov
add
daa
scas
lods
lcall
cmp
mov
test
xchg
addr16
call
jp
lea
and
jecxz
inc
push
testb
inc
xor
test
mov
cwtl
cld
scas
mov
popf
xlat
loope
sbb
pop
sub
cwtl
int
test
fldz
adc
add
pop
fildl
adc
idivl
nop
xchg
mov
cmp
mov
jo
add
dec
icebp
cli
fwait
mov
add
xchg
int3
loop
stos
jne
fldl
xchg
pop
das
xlat
jl
mov
loopne
push
push
stc
adc
je
fnstenv
inc
dec
pusha
add
add
inc
int
and
sbb
lods
daa
add
mov
mov
sbb
adc
jnp
pop
add
or
jo
dec
cltd
shll
mov
movsb
cmp
mov
sub
ficompl
or
adc
cmp
sbb
in
dec
lahf
lock
dec
push
jg
movsl
negb
lods
js
ja
ret
inc
fs
nop
repnz
movsl
xchg
mov
xchg
lret
cmc
fdiv
inc
inc
push
and
les
mov
sbb
in
push
fiadds
push
fldcw
sub
mov
pop
ds
ret
mul
adc
mov
or
pop
xchg
or
inc
dec
ja
adc
adc
out
add
ret
cmp
mov
mov
lret
and
cmp
lret
inc
mov
mov
inc
sub
in
cld
je
in
pushf
incl
and
loope
cmp
pop
shlb
push
scas
and
aas
push
mov
push
out
fwait
lea
push
test
jl
mov
sbb
dec
and
dec
mov
add
adc
stc
movsb
sub
xor
pushf
outsb
rcrl
dec
out
mov
jmp
inc
mov
fildl
iret
rcrl
jae
leave
into
in
out
push
push
jp
lods
movsb
cmp
pop
push
popa
push
dec
mov
mov
dec
cmp
rcll
push
sub
andl
push
pop
dec
and
sub
xor
in
adc
in
ret
mov
push
pop
mov
push
inc
xchg
inc
add
inc
movsb
loope
cmpsl
clc
inc
insb
jl
les
pop
mov
inc
es
xchg
icebp
fs
cmp
bnd
cld
sbb
mov
ja
and
add
push
cmp
mov
push
xchg
dec
popa
mov
movsl
pop
xchg
int3
add
cmp
shr
into
add
outsl
dec
push
dec
push
xchg
cwtl
into
sti
in
mov
sub
lods
rorl
cmp
pop
mov
outsl
or
loopne
lret
mov
push
int
sbb
ljmp
adc
loope
ljmp
mov
jmp
js
push
js
int
mov
aaa
popf
ret
add
inc
arpl
outsl
sub
notb
loope
sub
das
mov
popa
mov
dec
loopne
outsb
dec
dec
imull
push
push
fldl
sbbl
xchg
cmp
and
xchg
icebp
aad
jae
movsb
cmp
or
dec
js
aas
lahf
pop
mov
arpl
or
fwait
sbb
xchg
xor
xor
jne
cltd
xor
mov
es
xchg
add
pop
shr
les
lret
push
les
pushl
rcrl
jnp
push
or
adc
mull
loope
cmp
scas
mov
pop
int
iret
jmp
adc
arpl
cmp
jb
dec
ficoms
push
mov
and
in
movsb
arpl
mov
es
jo
out
xor
test
pusha
in
outsl
or
fwait
out
repz
lock
movsb
mov
dec
test
movb
push
out
jno
fistl
cmp
cmpsl
mov
iret
inc
movnti
lret
lret
in
push
mov
xchg
inc
pop
scas
inc
cmpsl
leave
rol
nop
jno
push
sbb
imul
shlb
pop
test
jne
and
jmp
adc
and
inc
pushf
clc
push
ljmp
inc
lock
sub
inc
scas
and
mov
aad
clc
mov
dec
jmp
sbb
inc
pop
mov
sarl
aam
je
mov
fnstcw
in
enter
lcall
mov
xchg
dec
icebp
jne
mov
out
dec
insl
push
inc
into
jge
mov
movsl
lret
xlat
jmp
lods
push
sbb
mov
ja
sbb
dec
imul
mov
imul
mov
adc
cmp
jmp
lds
fs
call
sbb
mov
xor
jge
out
and
mov
test
push
xor
std
xorl
mov
addr16
hlt
nop
and
lods
dec
dec
addr16
mov
mov
jl
jp
pushf
loop
shll
imul
outsb
sub
outsl
inc
push
mov
jnp
adc
mov
jne
inc
inc
jmp
ret
sub
xor
jnp
or
sub
mov
jae
into
mov
rcll
sbb
jnp
mov
add
ret
pop
mov
scas
xchg
cwtl
icebp
iret
int
add
adc
out
ret
imul
pop
int
jae
fsin
inc
jmp
imul
test
pushf
cld
add
xchg
out
push
mov
push
mov
jmp
shr
subb
into
aaa
repz
add
cmp
pop
jg
fcomps
fwait
cld
and
xor
js
dec
rolb
xchg
sub
xor
mov
cmp
dec
rcrl
cmp
sub
jle
inc
or
clc
adc
or
mov
sub
jg
pop
mov
jo
pop
lock
les
or
adc
mov
pop
imul
dec
rorl
inc
mov
mov
nop
sub
ficomps
xchg
scas
or
int
imul
mov
mov
out
push
pop
jp
bound
or
push
data16
outsb
xor
mov
inc
fdivl
adc
mov
nop
cmp
fisubrs
test
inc
xor
bound
sarl
outsl
repnz
and
rol
lcall
jp
xchg
test
mov
testb
adc
lret
jecxz
andb
rcrl
repnz
push
cld
iret
lcall
movsl
pop
pop
push
popl
movsb
stos
imul
cmp
js
lahf
test
cwtl
mov
and
push
inc
jne
jnp
pop
add
aam
and
lret
stos
inc
jns
xchg
pop
cwtl
out
xor
std
push
xor
test
movsl
sti
sbb
xor
rcrl
jp
adc
sbb
fwait
sbb
adc
push
ljmp
arpl
add
jmp
push
shlb
push
inc
out
inc
jl
cmpsb
sbb
rcrl
xchg
xchg
ljmp
push
add
fadd
jns
insb
mov
mov
push
push
sub
gs
jmp
ljmp
insb
icebp
xchg
xlat
rcrl
xor
sbb
into
out
add
repnz
adc
shll
pushf
cmp
mov
pop
in
cmpl
sbb
js
add
add
fidivl
cli
jmp
sahf
cmp
push
mov
xchg
push
dec
and
jl
sub
xchg
pop
xlat
add
jg
movsl
jge
add
xlat
xchg
mov
pop
dec
arpl
mov
insl
push
add
dec
mov
adc
out
lods
and
inc
mov
xchg
or
nop
repz
mov
popa
cmp
jmp
out
lock
ljmp
jo
loope
pop
ds
mov
push
call
or
outsl
loop
loop
inc
ja
ret
frstor
jne
ds
cmpb
or
sbb
pushf
mov
popa
xchg
not
mov
ror
push
mov
lret
cmp
lret
js
test
push
sub
movsl
mov
imulb
scas
outsb
lahf
push
xor
ret
pop
dec
sbb
pop
lret
adc
and
repnz
jl
cwtl
xor
test
stos
push
fs
lahf
push
out
lcall
icebp
pop
imul
mov
daa
sbb
pop
arpl
pop
add
and
jp
pop
subl
fld
popa
outsb
call
in
rclb
outsb
mov
pusha
lahf
inc
mov
cwtl
mov
jno
sbb
ds
test
cmpsb
sti
int
in
push
ja
push
test
xchg
pushf
push
dec
xchg
sbb
lcall
sti
std
cmpsb
inc
lds
pop
mov
add
adc
arpl
mov
jp
add
iret
sahf
js
clc
jnp
sub
push
xlat
fimuls
sub
push
lods
addr16
jle
int
push
cmp
inc
mov
int3
mov
jne
aad
addr16
ss
mov
or
mov
mov
push
js
pop
cmc
inc
mov
and
shrl
cmpsl
dec
jle
scas
inc
mov
arpl
dec
cmp
mov
jmp
insl
sar
outsl
cld
iret
pop
fstl
mov
push
add
or
ljmp
mov
jmp
sarb
xorl
and
in
stos
rol
push
or
cwtl
jns
movsb
or
push
mov
jb
hlt
ja
jg
outsb
lret
daa
test
fsubl
sbb
stc
push
cmpsl
add
xchg
sbb
lds
xchg
ja
fs
sbb
stos
pop
or
add
mull
adc
xor
inc
in
jo
push
mov
ljmp
inc
cli
xor
out
adc
testb
xchg
or
sub
lcall
xchg
mov
mov
popa
loop
inc
inc
xchg
pop
mov
mov
lock
inc
xor
cmpsl
jb
push
mov
cmc
jle
mov
push
adc
pushf
fwait
inc
push
dec
pop
sbb
ja
xor
mov
insl
dec
loope
push
xchg
mov
popf
js
sbb
cwtl
arpl
push
push
add
mov
int
adc
mov
fs
mov
xchg
int
lods
pop
mov
mov
xchg
pop
inc
in
add
pop
pop
js
sub
aam
push
sti
jo
xor
clc
cmpsb
push
sbb
arpl
popa
repz
inc
or
sbb
sbb
orl
mov
add
sbb
cmpsb
sub
ss
lods
dec
mov
sbb
imul
shlb
jge
in
dec
inc
mov
sub
mov
pop
arpl
pop
adc
inc
inc
xor
inc
int3
xchg
sbb
sub
test
pop
idivl
cwtl
mov
adc
inc
enter
loopne
sbb
ret
and
ja
enter
outsb
jmp
sub
adc
andb
adc
jnp
lock
adc
add
pop
dec
in
lahf
adc
lock
test
movsl
cwtl
sub
test
loop
mov
int3
lcall
push
fcmovnb
push
test
rcrb
sbb
ficomps
mov
test
shrl
daa
pop
mov
sub
lods
sbb
xor
jg
sub
jne
push
add
cmpsl
mov
shrb
in
ficoml
stos
aad
out
mov
jbe
mov
inc
xor
add
jbe
jno
ljmp
mov
jnp
ret
push
lret
xchg
fbstp
test
or
rcrl
pop
inc
outsb
jne
inc
xor
ror
scas
lret
pop
dec
and
inc
cmp
int3
pop
adc
jnp
dec
jne
fists
sbb
xchg
jmp
lods
out
push
push
jo
aas
mov
movsl
xchg
add
enter
push
jne
sub
mov
push
mov
subl
xchg
mov
or
pusha
movsb
sbb
test
add
imul
sub
les
dec
jle
loopne
pop
rol
cwtl
or
inc
lcall
mov
xor
mov
rcrl
add
mov
adc
inc
enter
xor
add
je
dec
and
inc
negb
xor
mov
aaa
popf
mov
mov
jae
lea
and
jmp
or
jne
xor
iret
je
pusha
xor
mov
push
or
scas
divl
stos
lcall
xchg
mov
ret
mov
cmpsb
into
mov
jecxz
and
repnz
das
mov
mov
pop
cmp
dec
jl
mov
out
aam
les
push
inc
push
inc
movsb
sbb
jne
cs
cli
dec
ss
mov
popf
enter
pop
inc
outsb
push
lcall
mov
int3
pop
mov
iret
dec
ja
notb
and
mov
or
out
lret
push
jle
mov
loope
filds
shlb
or
xor
icebp
cmp
lea
xchg
daa
sub
push
and
movsl
jl
inc
jle
push
je
mov
out
in
sahf
test
xchg
sbb
jbe
call
mov
mov
loop
sub
aad
ret
cmpsl
mov
out
sahf
mov
mov
xor
mov
pop
daa
pop
incb
imul
movsb
or
mov
cwtl
in
not
mov
cmp
iret
xor
repnz
sbb
rorl
ljmp
inc
loopne
hlt
enter
sbb
popa
xchg
xchg
mov
jns
mov
lods
push
cmc
push
addl
mov
push
pop
dec
xchg
mov
outsb
sbb
xchg
mov
movsl
xor
mov
add
rorl
in
out
adc
mov
jecxz
scas
mov
cmp
sbb
mov
inc
in
shll
test
sub
sbb
iret
adc
jl
mov
sub
pushl
sahf
cld
add
mov
sub
mov
cld
mov
push
orl
xchg
mov
stos
mov
and
dec
jns
fidivrs
inc
adc
push
push
mov
xor
dec
fimull
or
rep
pop
rolb
repz
jne
mov
mov
and
mov
mov
adc
jmp
push
ret
adc
xchg
aaa
subl
loopne
jecxz
cltd
xor
scas
lahf
push
fsubp
inc
xor
pop
cmc
icebp
or
pop
out
pop
dec
lahf
sbb
mov
xor
pop
jl
sbb
mov
cmp
in
add
push
aas
lret
sti
mov
sub
inc
dec
iret
or
pushf
pop
je
pop
inc
and
repz
loopne
or
adc
or
add
cld
cmp
out
sbb
hlt
mov
adc
stc
or
cmc
fsub
mov
pop
adc
cmpsl
test
pop
or
mov
ss
arpl
es
xchg
add
xchg
mov
jl
loope
jnp
and
aam
pop
pop
leave
mov
dec
pop
aam
sub
xchg
mov
or
push
fidivs
cmpsb
pop
movsb
mov
rep
insl
lods
jnp
es
add
jge
xor
add
loopne
and
push
sbb
push
inc
pop
push
mov
pop
dec
mov
lahf
es
jb
sbb
mov
outsl
or
aam
inc
mov
and
sub
and
and
test
xor
lea
cmp
jno
xor
mov
insl
icebp
das
xor
in
sbb
das
lcall
lret
cmpl
sub
dec
bound
and
fbstp
aaa
mov
fs
insb
push
mulb
jne
aam
in
cmp
imul
jae
out
test
popa
mov
decb
or
lcall
push
pop
loop
imul
sbb
sbb
insb
and
or
or
cld
insb
out
stos
pop
push
push
divb
cmp
dec
cmpsb
hlt
inc
mov
mov
mov
in
mov
jmp
jge
repz
mov
mov
dec
add
mov
pop
cmc
or
or
inc
lock
adc
mov
inc
addr16
or
lahf
ds
ret
xchg
clc
lret
inc
pop
pop
mov
js
dec
xchg
icebp
sbb
xchg
addr16
clc
xor
cmp
fdivs
jbe
imul
jns
push
adc
and
ss
and
adc
lds
and
in
jns
icebp
je
lret
cs
repz
ds
sbb
aas
xchg
fidivrs
lahf
pop
adc
es
jle
fisttps
cmc
ja
lret
add
andl
jl
cwtl
dec
in
cmc
mov
jp
fdivrs
dec
or
mov
leave
mov
movsl
add
mov
push
sbb
push
dec
jo
pop
xchg
fisttpll
jp
stc
pop
or
mov
sbb
cmpsb
inc
in
sbb
lahf
lret
es
pusha
cltd
ret
fidivrl
xorb
fnstcw
popa
lods
bound
jmp
les
mov
js
iret
bound
repz
ss
loopne
cmpsl
inc
push
into
mov
dec
imul
cmp
sub
mov
stos
sbbb
icebp
mov
mov
xchg
insb
stos
or
dec
iret
ds
ret
fistpl
loop
outsl
in
loop
fsub
adc
add
outsl
jle
inc
outsb
sbb
cmp
jnp
in
xor
and
cmp
mov
xor
xchg
repz
mov
jno
int
add
inc
jecxz
xchg
lret
pop
nop
mov
insb
in
or
je
orl
imull
cmpsb
cs
stc
dec
adc
insl
inc
sti
cs
outsl
pop
lods
jns
xchg
xchg
adc
call
add
shl
mov
xlat
xchg
adc
push
or
mov
cmp
push
mov
popa
add
and
pop
cmp
pushf
push
mov
int3
xrelease
scas
sub
pushf
add
cmp
mov
or
dec
push
mov
mov
pop
add
xchg
jmp
repnz
sub
scas
push
imul
dec
mov
lds
mov
and
pop
or
lret
lret
dec
int
mov
loopne
push
pop
nop
je
xor
xchg
aas
ss
mov
dec
and
dec
xchg
adc
int
loop
gs
aas
push
mov
jg
jb
scas
test
out
add
mov
fwait
jg
int3
cltd
jl
fisttpll
ret
aaa
mov
out
std
leave
cltd
ja
mov
sub
and
iret
cmp
dec
cmc
sbb
adc
jnp
xchg
xor
xor
jmp
gs
sahf
or
ljmp
mov
add
xlat
ja
aad
mov
fidivrl
xor
and
rclb
ljmp
xchg
shlb
add
stc
loope
in
insl
mov
xchg
mov
rclb
test
mov
imul
jle
cmp
aam
in
pop
jle
scas
mov
clc
sti
arpl
pushf
xor
sarb
mov
mov
pop
call
or
ret
mov
dec
divl
xor
int
stos
inc
mov
lret
push
pop
mov
fldenv
pop
adc
sbb
lret
fstpl
stc
mov
sub
mov
ds
xchg
pop
ror
sub
xor
mov
jbe
cmp
pop
test
sub
icebp
adc
mov
mov
in
insb
jno
dec
cwtl
adc
mov
out
xor
shl
sarb
in
push
out
mov
sbb
mov
rolb
stos
pusha
scas
cs
jle
jecxz
xor
mov
cld
inc
push
lea
stos
mov
ja
arpl
dec
sarb
dec
sub
mov
mov
les
shl
adc
mov
in
add
mov
std
cld
arpl
mov
fcmovnb
lods
cli
adc
xchg
push
xchg
mov
notl
stos
icebp
outsb
mov
inc
call
into
mov
ror
jg
in
mov
cs
mov
mov
push
add
fdivp
cltd
add
movsb
pop
stos
xchg
and
loope
inc
xor
mov
ljmp
sub
xchg
lahf
and
mov
mov
bound
dec
add
movsb
addr16
imul
pop
sbb
ret
arpl
pusha
fcmovu
pop
subb
push
sub
jne
arpl
push
lods
or
lock
jno
and
inc
add
and
mov
js
jo
mov
movb
roll
and
inc
cli
and
and
imul
sbb
cmc
sub
mov
pop
adc
cmpsb
pop
and
int
mov
decl
or
push
inc
and
sahf
js
mov
out
mov
cmp
or
sbb
mov
clc
bound
cmp
je
and
or
hlt
rolb
and
jmp
jmp
out
ret
push
nop
cmp
stc
nop
ss
jae
or
jbe
adc
fcoml
xchg
lahf
insl
aad
leave
divb
jg
sbb
lcall
xchg
or
nop
jmp
push
in
inc
negl
mov
bound
mov
pop
mov
xchg
rcll
xor
loop
or
scas
sub
push
lods
shl
xchg
iret
in
adc
push
les
jmp
dec
int3
clc
bound
jle
mov
ds
rcrl
stos
mov
xchg
arpl
fsubrp
pop
push
enter
nop
ss
dec
mov
sub
insl
pushf
idiv
stos
adcb
dec
mov
dec
hlt
xorl
out
xor
cmp
dec
pop
fisttps
cltd
movsl
mov
mov
xor
les
or
push
or
and
push
in
xchg
mov
inc
push
xor
xchg
xor
add
cmp
imul
inc
ja
adc
inc
mov
pushf
pop
mov
scas
mov
ret
dec
movsl
and
and
shl
and
xchg
push
stos
test
sbb
jo
sti
arpl
cwtl
cmp
addr16
mov
xchg
pop
pop
xchg
add
and
and
loopne
cmc
cmp
sub
xchg
out
stos
inc
jl
jne
cmp
fisttps
fcmove
imul
jle
movsl
mov
mov
cmp
in
or
loope
stos
sub
jecxz
push
mov
or
cltd
popa
stc
imulb
cli
cld
sbb
rcr
mov
inc
lret
dec
xchg
iret
movsb
cmc
clc
jge
es
pop
jne
repnz
and
ja
dec
pop
sub
pusha
lods
jg
inc
in
cmp
mov
and
or
or
cmp
std
sub
ret
call
aad
push
xchg
ja
lahf
idiv
mov
popa
roll
cmp
jge
xor
sub
mov
or
xchg
mov
mov
xor
pushw
sti
xchg
arpl
xchg
add
inc
test
shrb
shrb
xor
add
jp
data16
shlb
stc
aaa
adc
shl
or
outsl
test
jb
jl
enter
and
rorb
jbe
mov
jle
push
jae
loop
mov
xchg
ss
shll
mov
jge
mov
xor
mov
scas
std
ljmp
and
data16
cmc
push
inc
mov
mov
sbb
adc
btr
fdivrl
sti
xor
push
insb
gs
fcos
xlat
xor
fistpll
insb
daa
in
in
loop
sbbl
cmp
aam
into
movsb
push
jg
std
inc
sub
cwtl
xor
pop
push
or
hlt
add
inc
push
hlt
mov
arpl
sarl
js
and
popa
or
cmp
ja
test
xchg
jno
push
adc
loop
push
mov
mov
push
xor
pushf
cmp
push
and
sahf
lcall
insb
out
jo
addr16
jg
mov
hlt
mov
fsubrl
xor
mov
xor
insl
clc
lods
shll
jecxz
in
xor
sbb
xor
lods
pop
icebp
aam
push
push
push
mulb
ljmp
inc
mov
adc
sbb
mov
cwtl
lods
inc
into
cwtl
out
lock
testl
ja
aas
addl
loope
notb
inc
jo
int3
leave
jo
arpl
mov
inc
and
pop
jnp
sub
inc
adc
cmp
mov
sbb
jbe
shrb
xchg
xchg
sbb
cmp
mov
mov
xchg
test
jmp
pop
and
mov
push
in
pop
and
xor
cmp
mov
movsl
and
fadd
mov
jno
mov
repz
mov
lods
sub
pushf
mov
add
sbb
push
sub
fmuls
inc
sub
jne
pop
mov
stc
lock
mov
sbb
push
rcl
mov
outsb
out
xor
test
fwait
mov
and
test
nop
dec
jecxz
outsl
inc
mov
xchg
pop
and
lds
lret
shl
sbb
lds
add
test
sahf
rcr
in
and
ret
cli
mov
and
mov
pop
pop
rol
incl
jbe
push
daa
sub
test
ljmp
xor
or
add
dec
jle
in
test
pop
das
pop
movsb
push
iret
mov
push
dec
push
cmpsb
and
aam
and
imul
arpl
pusha
mov
cwtl
shll
leave
xor
push
mov
and
repz
dec
mov
iret
push
ja
int3
repz
imul
je
mov
int3
aas
xchg
xorl
lock
fsts
inc
xchg
sub
or
test
in
movsl
pop
enter
push
xlat
dec
jmp
and
and
mov
je
jo
sbb
testb
flds
mov
into
sahf
sbb
sub
sub
adc
jae
jo
shll
rcrl
cltd
cmc
fs
je
or
insb
cld
repz
adcl
xor
xchg
mov
and
and
mov
pusha
xor
imul
mov
into
lods
cmpsl
sbb
push
mov
push
add
mov
xchg
jecxz
scas
pop
xor
mov
dec
mov
rcl
cs
pop
enter
stc
leave
sti
xchg
and
cmpl
pop
jo
rcll
cmp
daa
aad
and
pop
test
jnp
enter
xchg
adc
add
mov
cmp
sahf
fs
std
and
std
and
int3
jbe
add
sbb
dec
pop
ds
or
repz
dec
arpl
jle
lahf
int
push
inc
cli
mov
loopne
pop
lahf
mov
dec
jge
lret
aas
mov
add
pop
cmp
je
out
cmp
push
pusha
fisubs
jle
push
gs
sti
jb
xchg
fs
mov
insl
adc
fnclex
fs
sbb
add
rorl
int3
jg
test
xchg
and
test
sub
orb
push
movsb
testb
fildll
mov
dec
insl
push
push
mov
xor
mov
cmc
sub
lcall
xchg
fs
pusha
adc
arpl
cmc
rorb
sti
or
jb
imull
mov
jne
mov
or
in
jae
jge
or
inc
cmpsl
sub
adc
dec
subl
pusha
sub
cltd
jo
in
sbb
jb
cmpsl
aas
lock
jmp
pop
inc
add
cli
loopne
push
push
push
cmpsb
jno
jmp
in
jns
leave
or
cmpsb
jbe
jmp
arpl
ret
mov
mov
mov
and
div
lahf
cltd
sub
rcr
ljmp
aam
dec
fisubrs
cmpsb
push
dec
sbb
jl
mov
lcall
fs
das
or
mov
test
js
hlt
pop
cmp
scas
xor
and
push
dec
adc
pusha
mov
add
adc
push
in
dec
int
jge
xchg
jns
arpl
pop
add
xor
mov
outsb
xchg
aam
pusha
mov
sub
jno
xchg
bound
arpl
inc
inc
pop
mov
bound
cld
lock
inc
push
loop
ja
adc
add
imul
mov
xor
ds
in
xchg
cwtl
test
pop
rcrb
push
inc
xor
inc
int3
push
add
dec
lds
stc
or
pop
lods
or
push
jae
lret
mov
mov
pop
sub
sub
mov
sub
jns
and
aam
ficompl
data16
in
daa
test
or
sub
insl
stos
imul
jge
jae
bound
in
xchg
addb
insl
jge
cmp
pop
sbb
inc
mov
inc
lock
dec
test
test
and
clc
sti
dec
inc
pop
pop
adc
in
or
and
popa
movsl
aaa
xchg
std
or
mov
jmp
idivl
mull
pop
lahf
sbb
jmp
loop
ss
xchg
dec
adc
fldl
add
in
xchg
lret
inc
scas
mov
push
outsb
mov
inc
cwtl
add
nop
pusha
adc
rol
add
out
jnp
inc
inc
std
addr16
inc
sub
xor
das
nop
jg
dec
pop
cmp
int3
cld
fcoml
inc
shlb
cltd
js
mov
icebp
adc
stos
arpl
push
push
in
push
ficompl
dec
mov
inc
mov
xchg
push
push
in
scas
pop
into
out
mov
int3
push
and
rolb
xlat
sub
inc
push
fsubp
int3
aaa
int
cmpsl
cmp
mov
cmp
enter
std
inc
int
out
cmc
loopne
add
fisttps
sbb
in
jb
aam
xor
inc
ret
into
es
xor
bound
pop
cld
jp
je
out
add
gs
mov
mov
loope
and
mov
outsl
in
mov
cwtl
lcall
sub
inc
adc
pop
sbb
mov
out
cmp
push
cmp
sbb
lahf
cmpsl
cmp
sbb
pop
adc
ds
pop
cs
lods
insl
sub
mov
add
mov
and
lock
xor
stc
add
imul
loop
mov
adcb
js
sbb
and
dec
mov
push
psubd
adc
lds
lods
popf
fs
les
jno
mov
repnz
sti
pop
fsubr
xor
stos
ficoms
fbstp
adc
adc
xchg
loop
cmp
pop
add
dec
pop
mov
shrb
jmp
ljmp
xchg
lock
test
repz
pop
sub
add
repz
mov
xor
xchg
in
and
jl
inc
jnp
les
xor
in
nop
rcll
mov
cmc
out
mov
in
xchg
test
inc
vunpckhps
aas
lret
fldenv
mov
or
iret
dec
pop
xor
or
mov
xor
ja
add
pop
adc
dec
sbb
fldl
cmp
das
mov
pop
in
jmp
mov
mov
and
addr16
inc
inc
out
xor
xorb
adc
add
jp
and
push
dec
push
push
jb
jns
xor
pop
cmpl
xchg
jbe
cmp
outsl
push
cs
sbb
adc
push
mov
dec
aad
call
fstpt
pusha
orb
xchg
xlat
cmpsb
jmp
push
test
andb
sti
mov
add
or
jecxz
or
mov
mov
call
lea
es
jns
loope
and
xchg
ja
sub
mov
mov
pop
inc
out
daa
scas
loope
pop
xor
xchg
movsl
lret
testl
add
mov
pushf
popf
mov
in
mov
outsb
adcb
sbb
dec
pop
and
xchg
push
adcl
xlat
insb
test
repz
or
xlat
out
sti
dec
aas
outsb
add
xchg
adc
addr16
test
push
imul
data16
cld
int3
test
adc
in
in
or
cmpsb
inc
addb
std
leave
enter
ljmp
mov
outsl
pusha
pusha
mov
inc
adcb
repz
adc
push
daa
test
pushf
pushf
push
int3
arpl
sbb
cmp
cmp
or
adc
or
xor
cmp
test
or
mov
sbb
xchg
sub
sub
mov
lods
leave
mov
std
jne
xor
push
cli
jb
mov
push
lea
das
leave
sbb
sbb
or
movsl
leave
data16
push
scas
scas
mov
out
out
rcrb
pop
add
scas
or
adc
lea
scas
test
int3
jae
cmp
sub
jmp
xor
sbb
xchg
xor
sbb
mov
popa
out
fdivs
outsl
pushf
mov
pop
add
xor
negl
rcrl
xchg
out
adc
xchg
add
es
or
xlat
out
test
adc
stos
add
nop
mov
sub
sbb
sbb
jbe
cmpsl
pushf
cld
test
shll
push
jle
add
inc
xchg
pop
adc
sbb
pop
decb
jmp
dec
or
cmp
stc
divb
xchg
adc
mov
ljmp
xchg
js
pushf
lret
xor
and
xor
xchg
jmp
jp
mov
test
into
dec
iret
cmp
in
mov
test
jmp
or
outsb
push
xchg
jmp
jne
std
test
pop
push
cmp
aaa
add
cmp
int
sbb
or
loop
imul
test
dec
add
daa
faddl
push
mov
push
push
jge
jnp
cmp
inc
jg
std
shrb
movnti
jne
xor
pmulhw
int
sar
jno
orl
adc
lcall
mov
pusha
xchg
sub
mov
in
adc
cmp
js
mov
push
push
inc
add
push
cmp
int
insl
loopne
in
call
fwait
cld
pushf
scas
inc
les
fisttps
mov
jecxz
in
pop
mov
ljmp
cmp
out
mov
mov
mov
ljmp
out
pushf
mov
dec
data16
loopne
push
clc
andb
scas
iret
inc
xchg
scas
mov
outsl
cmp
pop
jns
mov
cmp
jl
outsl
sub
lret
data16
fistpl
add
fistpl
fiadds
jo
mov
mov
cmp
out
cmp
xlat
leave
dec
jns
pusha
or
hlt
mov
outsl
loop
lea
pop
adcl
aam
icebp
arpl
ja
xor
mov
lret
ds
mov
jno
jmp
call
aad
pop
mov
pusha
ret
loopne
pop
add
mov
xor
imul
dec
jg
add
out
das
daa
sub
ss
pop
out
pushf
icebp
push
jne
sti
cli
cltd
hlt
or
sbb
mov
movsb
test
xor
cmp
ds
jecxz
sub
sarb
push
clc
jecxz
cmp
int3
push
xchg
adc
mov
loope
rcll
jnp
push
jl
movsl
test
jg
dec
sbb
movsb
pusha
inc
mov
outsb
out
leave
stos
insb
pop
fsub
ror
adc
add
rcrl
insl
sub
sbb
sbb
push
sti
push
xorb
add
cld
movsb
adc
lods
sti
mov
sbb
cmp
fwait
mov
sbb
adc
mov
mov
mov
sarl
dec
mov
loope
stos
mov
add
je
and
inc
and
push
adc
popl
adc
adc
popa
sarb
xchg
dec
idiv
lcall
aas
inc
frstor
sub
mov
scas
sbb
lods
notl
int
inc
clc
sbb
popf
pop
xchg
ret
adcl
sub
mov
mov
ja
sub
pop
popl
jo
mov
jns
stc
or
add
insl
movsb
xchg
imul
push
js
lret
adc
ret
mov
daa
fstl
xor
xchg
sbb
cmp
add
mov
xor
push
mov
sub
or
aaa
imul
mov
adc
cmpl
push
outsb
lahf
or
iret
ja
pop
ja
out
movsl
cmpsb
aad
cmp
jae
jnp
int
and
insb
addb
sti
in
jnp
dec
xor
sub
sahf
test
mov
xor
mov
addb
sbb
jmp
shlb
lcall
pop
out
orl
and
dec
pop
xchg
cmpb
ret
pop
dec
add
add
dec
push
lods
mov
push
and
jb
hlt
test
cmp
pop
sub
jle
add
mov
dec
addr16
xchg
xor
add
scas
inc
cmp
pop
or
add
inc
ljmp
repz
push
in
std
das
ljmp
dec
xor
icebp
mov
sub
push
push
movsl
roll
xor
leave
push
and
mov
cmpsb
lahf
mov
xor
mov
gs
mov
adc
rcrl
and
xchg
int
das
cld
test
xor
inc
test
adc
dec
enter
sub
es
nop
cmp
cmp
hlt
mov
xchg
mov
mov
push
add
mov
mov
into
push
push
push
sbb
and
jno
mov
sar
sub
out
pop
test
xor
pop
ss
dec
test
cli
cwtl
and
mov
cmp
push
pop
push
push
inc
pop
fimuls
push
iretw
in
call
fnstsw
lock
jp
mov
out
jmp
aad
fstl
cld
mov
ror
dec
addb
xor
xchg
sub
and
mov
adc
sarl
test
ret
inc
cwtl
test
mov
jno
cmp
inc
sub
add
mov
in
test
imul
lds
adc
rorl
lock
adc
mov
ficoms
push
cld
lcall
in
fadd
jnp
in
xchg
mov
inc
fbld
xchg
or
jp
and
lods
int3
mov
jnp
movsl
jle
or
xchg
jge
sti
add
lahf
rcrb
inc
dec
pop
sub
lret
std
mov
lcall
xor
pushf
add
inc
xchg
into
enter
imul
loop
dec
das
adc
sbb
sub
and
or
int3
dec
fs
jmp
std
mov
push
xor
loope
dec
test
push
adc
int3
lret
push
sarl
jle
push
cmp
cmp
or
inc
xchg
or
xor
test
jae
fwait
push
xchg
ds
xor
aam
adc
mov
call
imul
push
and
mov
add
sub
lods
lcall
icebp
jae
int
mov
fprem
fdivl
ret
push
adc
xchg
pop
jl
push
push
sbb
pop
repnz
mov
dec
je
fs
xor
shll
or
inc
add
jbe
sbb
std
sbb
repz
jb
xchg
cltd
sub
pushf
cmp
faddl
add
gs
xchg
and
push
mov
xchg
push
sbb
fbld
aas
add
cwtl
lret
lods
cli
xchg
ja
das
rolb
les
lret
push
or
dec
add
ss
mov
cld
dec
cltd
sahf
jle
xor
fsubp
ror
dec
mov
aas
into
inc
lock
sbb
push
addr16
fldl
pushf
mov
dec
cmp
xchg
leave
push
enter
dec
gs
mov
jecxz
jo
sar
mov
lock
in
push
sub
push
sbb
lock
mov
aaa
imul
out
outsb
mov
mov
mov
fwait
xchg
and
add
clc
jmp
lret
and
je
xchg
push
xchg
mov
popf
and
enter
lcall
inc
out
adc
or
mov
sbb
es
pop
mov
dec
in
inc
jg
mov
mov
mov
mov
add
mov
or
cmp
cmp
rcrb
dec
jne
fidivrl
or
fsub
enter
out
faddl
sub
xchg
mov
cwtl
in
std
out
mov
xchg
inc
sbb
arpl
in
pop
pop
bound
and
sbb
mov
int3
sub
cmp
js
lret
mov
inc
sub
addr16
neg
imul
sbb
stos
dec
daa
mov
pusha
ss
xor
test
xor
xorl
mov
mov
fwait
clc
scas
mov
xchg
repz
into
lret
mov
orl
mov
jne
push
les
sbbl
rolb
xchg
jecxz
outsl
shll
dec
cltd
mov
xchg
insb
dec
rorl
mov
push
jno
push
mov
test
xlat
mov
cmp
and
ret
or
cmp
cmp
loop
or
or
jle
imul
fdivl
adc
xchg
pop
aam
lock
imul
pushf
insl
shll
push
stos
cmp
add
or
mov
inc
insl
inc
bound
mov
insb
mov
inc
out
adc
and
jae
adc
pushf
xchg
clc
mov
notb
hlt
push
insl
fisubrs
mov
sahf
dec
movsb
sarb
clc
std
sbb
or
lcall
add
pop
imul
ss
daa
in
and
push
sub
test
imul
xchg
xchg
icebp
adc
or
fs
sbb
and
mov
out
pop
xchg
xor
pop
flds
mov
pop
push
mov
sbb
sbb
xlat
or
mov
test
lock
ds
jp
mov
cmpl
mov
lahf
repnz
cmp
imul
rcrb
les
lds
int
push
das
fcmovnu
out
imul
cli
in
xchg
cltd
adc
outsl
in
rcrb
mov
and
mov
mov
fld
inc
sbb
enter
nop
xor
daa
enter
aam
lock
and
push
and
xchg
push
dec
inc
test
loopne
fadd
rorb
cmpl
sub
fsubrl
aaa
js
cmp
arpl
ds
adc
inc
add
shr
std
xor
inc
fisttps
stc
pop
xor
push
jbe
mov
addr16
nop
adc
jmp
adc
xor
xchg
call
sahf
cmp
add
adc
cmpsl
mov
data16
jne
or
add
popl
xor
push
push
push
popa
pop
add
sub
sub
push
jmp
scas
fisttps
push
pop
push
dec
or
pop
imul
out
push
inc
imul
icebp
in
roll
mov
enter
in
icebp
mov
xchg
jge
pop
jno
mov
add
jne
cs
lea
enter
xchg
fmull
add
xchg
mov
push
inc
pushf
shl
fucomip
stos
fstl
shl
pop
fprem1
adc
inc
fnsave
fsubs
test
adc
mov
inc
pop
pop
xchg
fndisi(8087
fiaddl
fisubrs
loopne
test
daa
lret
or
inc
clc
js
mov
movsl
cmc
jp
negb
in
cs
fcompl
jg
outsb
or
xchg
add
xchg
ljmp
xchg
cmp
incl
je
jb
jmp
jns
jo
adc
pop
push
mov
xorb
xor
mov
iret
and
cmp
mov
test
test
jl
stos
sub
inc
std
jp
imul
outsl
testb
js
pop
ret
xor
ss
add
inc
out
in
imul
movsl
gs
mov
and
jl
pop
mov
movl
add
fs
shll
imul
adcl
outsl
int
in
pop
gs
cmc
jb
das
cwtl
sbb
add
in
lods
in
ja
outsl
aas
mov
and
xchg
cld
cmp
xchg
xchg
int3
jg
in
or
sbb
fsubr
sub
cmpsl
shrl
mov
repnz
add
mov
iret
dec
adc
fs
pop
addr16
test
in
ret
ljmp
push
mov
lahf
pop
mov
test
loop
cmp
addr16
popa
imul
pop
call
leave
test
adc
mov
and
jb
sar
mov
addl
xor
pop
into
or
jno
and
push
ret
adc
mov
or
push
es
pop
xor
lods
ret
and
jno
inc
xchg
dec
fsubrl
push
ficompl
xor
cld
sub
mov
xchg
jb
mov
mov
lahf
ret
and
pop
scas
int3
ds
mov
fsts
arpl
cmp
lcall
push
lock
test
fdivs
jge
lods
aaa
fdivs
mov
lret
lods
sub
test
xor
sub
decb
add
ds
jb
add
and
cmp
out
lds
dec
xor
push
aad
test
adc
jmp
shlb
sub
ret
adc
and
gs
scas
mov
or
ljmp
sbb
xchg
push
in
jns
ds
and
jne
aas
jae
push
aad
hlt
mov
inc
xlat
push
iret
dec
jae
mov
xor
mov
inc
ja
mov
inc
jno
repz
in
xchg
cmp
xchg
fcmovbe
xchg
add
movntq
shrb
dec
jmp
pusha
in
in
jb
mov
repnz
aas
pop
sub
in
pushf
vorpd
clc
push
xchg
jae
cld
cltd
popa
fnstenv
adc
add
pushf
leave
stos
cmpsl
jge
leave
iret
mov
ret
mov
add
std
addl
mov
mov
xchg
shll
in
pop
dec
popa
dec
mov
fcoms
xchg
std
in
shlb
stc
mov
int
or
pop
int
mov
push
adc
adc
fucom
arpl
jmp
jmp
scas
cmpsl
and
cmp
sub
inc
pop
stos
sbb
pusha
push
mov
enter
mov
dec
pop
jmp
shrb
mov
add
or
shrl
mov
ficomps
cmp
cmp
rorb
cmc
icebp
mov
cmp
out
int3
out
ret
push
clts
scas
push
in
jg
pop
in
mov
rcl
add
ss
mov
adc
je
push
cmpsl
test
xor
cli
jge
sub
iret
rolb
pop
mov
rcll
nop
jge
pop
pop
insl
test
aaa
or
sbb
into
ss
mov
mov
repz
xchg
pop
lea
fs
push
pop
loopne
lcall
jae
xchg
insl
aaa
push
sbb
in
xchg
dec
imul
stos
sarb
pop
call
add
mov
mov
ss
pop
xor
dec
xchg
aas
ds
push
ja
roll
inc
stos
cmp
push
test
xlat
lock
inc
addr16
mov
mov
arpl
loop
xchg
rolb
xor
scas
cmp
mov
cld
stc
stc
sbb
lds
and
add
add
jl
popf
pushf
stc
sbbb
movsl
sbb
jnp
adc
js
inc
mov
cwtl
lret
fbstp
sub
std
fwait
lret
xchg
call
add
jnp
dec
push
xor
cmp
bnd
loope
ss
js
adc
aam
int3
xchg
lods
addr16
pop
dec
and
xchg
das
jb
and
cli
xchg
adc
das
cltd
outsl
xchg
out
mov
mov
mov
rorb
sahf
int3
inc
push
dec
inc
push
xor
ljmp
jo
aas
jb
add
pop
dec
repnz
call
jl
pop
pop
ljmp
imull
pop
fxch
aaa
shrb
loop
iret
jle
cmp
shll
fcomip
sti
mov
addr16
ljmp
push
in
sbb
xchg
cmp
mov
jl
push
sub
imul
outsl
pop
int3
les
mov
cmp
mov
push
enter
mov
das
sbb
out
enter
jo
cs
nop
pop
scas
adc
test
enter
sahf
xchg
std
mov
xor
insb
inc
js
dec
repnz
test
xorb
mov
mov
mov
mov
and
and
xchg
mov
loop
xchg
mov
rolb
aaa
lcall
fdivrl
or
pop
jle
mov
frstor
jp
fisttpl
inc
ljmp
dec
add
push
ja
out
or
dec
pop
cmp
cmp
out
sub
cli
xchg
lds
mov
jae
add
js
and
xlat
scas
shlb
mov
xchg
jmp
mov
lods
inc
jno
into
aas
jns
cwtl
stc
arpl
adc
icebp
mov
add
fdivs
inc
xorb
and
es
mov
shrl
xchg
push
xchg
mov
jecxz
mov
xchg
push
sbb
ficoml
xchg
sti
jno
fcompl
add
push
jp
stos
pop
stos
inc
cmp
ss
mov
xchg
call
lea
or
lea
sti
push
into
dec
add
pop
outsl
ljmp
repnz
lock
adc
pushf
mov
sbb
cmp
call
push
sub
out
sub
inc
push
sub
clc
std
pop
dec
dec
pop
dec
mul
pop
or
push
dec
push
pop
adc
out
and
mov
xor
push
andb
icebp
sar
enter
inc
pop
cs
mov
cmpsb
mov
xor
push
mov
dec
arpl
mov
pop
call
cmp
lret
imul
mov
ret
sarb
mov
sbb
push
push
add
push
dec
mov
dec
leave
js
movsb
shl
add
inc
mov
movb
xor
cmova
cmc
and
cs
dec
jb
dec
push
push
repz
icebp
mov
lahf
inc
push
out
lahf
sbb
lods
loop
mov
mov
adc
lret
daa
or
jnp
xchg
ror
rcr
ret
xor
loope
repnz
pop
movsb
mov
arpl
adc
jecxz
cmp
pop
insb
xchg
call
mov
out
push
sub
sub
das
add
cmp
sub
pop
lods
pop
dec
mov
add
jmp
dec
lahf
btr
jecxz
or
js
adc
and
push
lret
jl
mov
in
je
sub
lcall
cmp
scas
xchg
in
stos
aad
and
sahf
jae
xchg
push
sub
push
mov
push
inc
ffreep
mov
int
test
pop
adc
loope
or
roll
dec
fisubl
icebp
push
fnsave
cmp
jo
inc
xchg
in
or
shl
and
stos
mov
ret
sub
sub
or
inc
jle
std
dec
inc
dec
mov
mov
inc
shl
rorl
mov
inc
push
imul
repnz
sbb
imul
or
aad
jae
xchg
jecxz
in
xor
sbb
mov
fmuls
int
xor
jo
mov
pop
int3
jbe
mov
outsb
outsl
fidivl
add
fidivs
mov
test
test
or
dec
xchg
int
decl
movsl
jecxz
daa
mov
push
gs
fdivs
add
fsubrs
rol
jae
pop
out
daa
mov
xor
test
lods
push
adc
sarb
adc
cmpsb
adc
pop
es
cmpsb
xchg
push
repz
jp
xor
jbe
inc
add
arpl
outsl
mov
push
scas
fs
out
ds
outsl
int
incl
cmpsb
add
adc
call
cmc
push
mov
fiadds
and
or
jmp
pushf
jmp
mov
flds
mov
xor
dec
adc
jb
push
pop
es
jl
sbb
dec
aam
or
add
sub
cmp
in
or
mov
push
rclb
mov
jmp
mov
in
or
mov
or
and
fstps
inc
lods
test
les
push
jo
jae
dec
mov
fildl
pop
in
fwait
mov
rcr
adc
in
sahf
sbb
pop
and
sub
mov
jmp
sbb
scas
add
push
pushf
int3
or
fstl
pop
in
mov
cmp
idivb
roll
orb
pop
mov
or
and
jl
dec
mov
pop
xor
push
sbbl
stc
cli
xor
pop
cmpsl
in
jbe
cwtl
test
sbb
dec
and
and
js
mov
pushf
inc
pop
rcll
std
andb
push
icebp
cwtl
pop
inc
shll
aaa
add
add
dec
cmp
ds
sbb
jbe
pop
call
addr16
incl
mov
sub
adc
lea
int3
stc
addr16
jmp
inc
iret
sub
pop
test
xchg
stos
cmp
shll
aas
xor
adc
dec
dec
ja
fisubrs
fwait
jo
je
cld
es
push
jg
add
add
gs
insl
dec
and
dec
insb
cmc
stos
ss
clc
hlt
stc
jnp
and
addr16
or
xlat
mov
addr16
inc
adc
or
int
in
insl
fsubrs
lods
add
mov
jnp
mov
push
cmp
add
decb
xor
mov
movsl
mov
fstpl
sbb
or
ret
loop
jo
push
idivl
insb
sbb
and
sbb
or
hlt
negl
mov
into
sti
mov
insb
into
cwtl
cmp
add
xchg
fbld
scas
cwtl
dec
int
dec
lock
les
push
push
pop
ja
clc
lds
out
or
out
mov
es
sbb
add
fldcw
inc
mov
in
or
lahf
nop
std
jecxz
imul
bound
fsubrp
sub
mov
push
push
push
cmc
mov
and
into
mov
aas
subb
idiv
sbb
orl
add
cmp
mov
mov
push
push
sbb
adc
push
cmp
and
out
sbbb
dec
pop
mov
inc
popa
and
sahf
in
adc
in
ror
in
xor
ret
push
stos
push
test
jbe
out
mov
sub
cld
sub
lcall
ret
mov
lock
mov
gs
dec
adc
push
add
inc
rcrl
jo
popa
and
pop
xchg
cli
push
cmp
sbbb
enter
outsb
mov
cmpsl
ret
add
jne
or
pop
movsb
insl
and
push
push
mov
in
and
in
outsl
mov
jl
daa
push
sbb
outsb
inc
into
add
push
sbb
cmpsl
clc
adc
hlt
cs
and
adc
rep
stos
bound
lret
push
in
cmpl
cmp
push
rolb
dec
inc
testl
jbe
mov
addr16
push
andl
stc
arpl
sbb
jmp
jge
bound
nop
sub
fildll
adc
push
add
xor
mov
pop
lahf
add
les
cmp
gs
je
dec
dec
mov
push
add
fmuls
push
xchg
sub
add
sub
das
fmull
push
ja
daa
pop
das
push
rolb
icebp
hlt
js
pop
mov
into
lret
xor
cltd
mov
outsb
dec
dec
inc
ds
lret
push
inc
cli
fldl
push
jg
inc
xor
inc
lods
push
inc
inc
xor
fstpl
cwtl
es
sbb
fistpl
sub
fmul
xor
jp
add
pop
pop
cmp
xor
testl
xchg
imul
movsl
ds
adc
stc
aaa
data16
cs
ret
mov
cs
mov
mov
iret
cmp
inc
and
ret
adc
int3
aas
loopne
addb
adc
pop
inc
cmp
sar
inc
pop
adc
ficomps
jl
in
jnp
push
test
sarl
loopne
popf
je
out
cmpsl
iret
and
jmp
test
pop
movsl
mov
jns
mov
mov
dec
jle
xchg
xchg
stos
les
or
mov
ret
jg
adc
rolb
iret
add
mov
cs
cmpsl
mov
and
clc
mov
fdivs
dec
mov
push
popf
popl
das
popf
xorl
cwtl
test
xchg
add
mov
sub
pop
mov
sub
sub
mov
mov
pop
lret
rcrl
lea
xacquire
movsb
push
add
mov
add
push
fdiv
xchg
addr16
inc
adc
outsl
jle
cwtl
xor
iret
stos
aad
fst
outsb
cmp
ljmp
cwtl
arpl
cli
or
or
leave
neg
sti
xchg
and
ja
jecxz
cmpb
in
imul
xor
pop
xchg
add
pushf
rcrl
jb
loope
stos
jae
jl
add
adc
outsl
or
lcall
outsb
popa
ljmp
jb
cmp
jp
mov
pushf
add
push
fidivrs
pusha
and
sub
ja
lods
lret
and
ret
push
dec
sbb
dec
sbb
iret
movsl
imul
ss
or
mov
cmp
sbb
jns
or
pusha
pop
and
pop
imul
or
fiaddl
insl
fisubs
daa
jno
xlat
sti
or
dec
lods
int3
push
insb
mov
psubusb
lds
repnz
lea
movsl
jb
inc
sbb
xor
dec
mov
ret
push
psadbw
adc
clc
jecxz
fsts
xor
jecxz
adc
pushf
mov
mov
add
cmp
sbb
nop
adcl
push
add
into
xor
pop
lret
cmp
movsl
mov
inc
push
gs
push
xor
jl
lock
xchg
cmp
scas
or
jbe
cmp
or
sbb
cld
hlt
cmp
fldenv
add
jne,pt
xchg
outsl
xor
jnp
cwtl
cmpsl
add
push
xor
out
aas
jno
push
add
pushf
jmp
inc
inc
jno
add
repz
popa
push
xor
arpl
pop
out
mov
or
outsl
mov
sti
loopne
rol
pop
cld
out
adc
push
mov
into
or
and
pop
mov
cmc
jp
push
adc
fisttpll
pop
outsb
lret
pop
mov
loop
out
cmp
lods
jns
ss
mov
mov
std
mov
mov
jg
push
mov
nop
aas
repz
push
cmp
add
push
mov
les
cltd
mul
mov
jb
loopne
in
push
ret
pusha
lret
mov
addr16
repz
cmp
pop
les
movl
out
xchg
xor
or
pop
fidivl
or
sub
out
adc
pop
inc
icebp
dec
imul
jp
inc
negb
cmp
pop
inc
ljmp
leave
jmp
mov
dec
mov
sarl
xchg
adc
add
aam
dec
fmull
es
stc
push
xor
rorl
xchg
cld
out
jne
jnp
mov
bound
jne
pop
sbb
mov
arpl
push
daa
ljmp
fcmovne
repz
xorb
push
inc
and
pop
mov
push
mov
pop
movsl
add
sti
es
mov
shll
out
cmpsl
add
pop
mov
sub
sahf
push
jmp
rorl
popf
inc
repnz
test
ss
cmp
xor
and
ret
dec
bound
push
subb
mov
ja
cmpps
outsb
sbb
pop
ja
fnstcw
and
pop
mov
dec
or
xchg
mov
aas
loop
adc
cmpsb
jnp
pop
mov
rcl
int3
dec
cmp
cmpsb
adc
movsb
repz
inc
je
cmp
and
xchg
mov
sub
xchg
jge
cmpsb
xor
mov
pop
arpl
cli
sbb
mov
cmc
push
sbb
and
cmpsl
sahf
in
movl
scas
inc
std
pop
mov
adc
hlt
mov
notl
or
mov
sbb
mov
scas
adc
mov
int
mov
inc
pop
and
test
mov
ss
add
push
lret
sbb
pop
cld
lods
cmp
cli
push
add
scas
cmpsl
mov
dec
pop
movsb
repz
pop
pop
ja
loopne
das
cltd
cmpsl
or
inc
js
xlat
sti
push
dec
mov
jns
outsb
popf
cld
or
fdivrs
or
or
mov
mov
xor
xor
insl
js
ss
dec
sub
mov
cltd
pop
nop
das
xor
jp
flds
int3
cwtl
mov
out
xchg
xor
or
sbb
inc
fs
cmp
pop
outsb
mov
out
mov
mov
pop
fdivs
repz
sahf
cmp
xchg
cmp
stos
ficomps
xor
push
fisttpl
add
mov
mov
fisttps
cli
sbb
xchg
push
pop
insl
jo
or
sub
add
jb
push
jbe
cltd
cmpsb
xchg
push
icebp
int
mov
or
popa
iret
cmp
insl
cwtl
mov
cmpsb
popf
sub
fists
cmp
lea
imul
push
rorb
insb
ret
aam
and
loope
lret
sahf
je
fstpl
push
mov
push
loop
shlb
cli
loop
inc
mov
lcall
pushf
sub
xor
adc
push
xchg
xchg
imul
sbb
movsl
incb
add
push
aad
incb
sbb
push
testl
xchg
cld
dec
fcmovb
stos
mov
sbb
aad
dec
lock
pop
cwtl
dec
ror
data16
ja
das
inc
bound
mov
cmp
inc
xchg
mov
ficoms
dec
sbb
test
insb
mov
mov
dec
outsl
sahf
fdiv
loope
pushf
cmp
dec
loope
mov
int3
and
jns
iret
mov
sub
jb
ljmp
mov
and
mov
test
add
scas
cmp
push
jae
xchg
adc
mov
push
loop
mov
mov
sahf
mov
or
mov
xchg
nop
cmp
mov
cmp
bnd
adc
roll
pop
rorl
loope
fnsave
dec
inc
jns
jmp
scas
mov
fildll
fwait
add
push
cwtl
scas
push
mov
js
incl
sbb
enter
push
push
pop
mov
fwait
gs
rclb
push
and
push
xlat
and
adc
das
xchg
mov
fcomp
mov
or
jne
inc
sub
sahf
std
pop
push
pop
mov
add
mov
lret
push
das
out
in
pusha
mov
dec
push
std
popa
ljmp
push
pushf
lahf
cltd
xchg
addr16
movsl
arpl
jge
and
or
add
dec
jmp
hlt
cmp
leave
dec
addr16
in
jnp
or
cltd
sbb
xor
mov
cmc
and
shlb
stos
ficoms
arpl
dec
loope
inc
dec
mov
pop
vmwrite
jo
lret
jae
paddq
mov
dec
test
mov
sbb
lret
jo
jle
js
mov
lret
sub
inc
jge
mov
or
push
mov
aad
pop
int
pushf
ret
sbb
insb
pop
mov
mov
lret
fnstenv
outsl
dec
xchg
call
fsubrl
xlat
arpl
cmpsb
lret
loop
pop
test
mov
imul
xor
xchg
add
shll
push
jmp
pop
mov
push
hlt
push
cmpsl
ss
rcll
cld
adc
into
aam
hlt
fldt
insl
not
sub
stos
cmp
outsb
jecxz
mov
rolb
mov
dec
mov
ds
daa
addb
adc
pop
repnz
ljmp
pop
psrad
adc
jg
xchg
fsubrs
cmp
mov
adc
daa
js
inc
sub
jmp
jecxz
push
imul
cmp
movsb
div
fbld
adc
dec
cmpb
push
inc
xchg
aaa
or
out
inc
mov
fnstsw
jo
mov
notb
mov
mov
push
pushf
and
sub
rcrl
aad
rcll
stos
or
cs
jne
cmc
in
pop
push
stos
aad
test
pusha
and
mov
hlt
sahf
movsl
inc
mov
imul
add
mov
jmp
sbb
inc
je
pop
int3
insb
add
iret
cmp
pop
imul
nop
cmp
or
jl
vmovntdq
sub
mov
lea
inc
mov
pushf
ja
push
out
push
pop
mov
shr
add
adc
and
cwtl
movsl
std
nop
jno
outsl
sub
pop
loopne
mov
movswl
add
pop
lret
outsl
sub
ret
sarl
gs
jo
mov
sahf
mov
xchg
cwtl
pop
std
xor
out
mov
push
repz
mov
jle
cmp
shll
dec
mov
xor
xchg
cmp
imul
sarl
sub
and
shl
stc
jno
aas
push
jge
out
cld
not
pxor
hlt
or
dec
add
mov
loopne
cmp
or
shlb
inc
stos
jg
adc
iret
sbb
mov
ficompl
sbb
sub
test
pop
nop
dec
jg
in
pop
mov
adc
stc
dec
mov
xor
lret
mov
insb
sbb
test
ja
pop
jnp
mulb
clc
dec
iret
add
cmp
bound
sahf
sub
cmp
ficoml
mov
adcl
rcl
jmp
push
pop
xchg
and
sbb
pop
test
loopne
sbb
xor
stos
or
loop
popf
loop
fisubl
mov
mov
push
fsubrp
jmp
mov
xchg
jae
dec
and
aad
and
test
imul
les
push
in
mulb
mov
enter
ljmp
lods
data16
mov
icebp
insl
cli
imul
inc
aas
cmp
jmp
inc
aas
insl
push
icebp
adc
iret
jbe
imul
xchg
rsm
push
add
mov
mov
xchg
pusha
cmp
dec
inc
dec
test
or
ret
arpl
xchg
es
sub
hlt
xchg
fsubs
mov
je
mov
jno
rcll
sub
imul
loope
sbb
add
dec
es
inc
mov
in
or
cmp
rorl
imul
push
or
dec
out
jge
pop
cmp
loopne
mov
fs
aaa
push
repz
dec
add
cmp
shrb
mov
adcb
in
lods
and
mov
add
pop
hlt
xchg
xchg
push
inc
mov
or
add
andb
loopne
jp
push
dec
xor
int3
sbb
cmp
adc
mov
add
lock
fdivrl
cmp
pop
stc
sahf
jge
inc
mov
icebp
or
test
loopne
mov
test
adc
cmp
push
shl
pop
ss
ret
neg
xchg
lret
mov
daa
sub
and
sbb
xchg
fs
test
push
cli
es
fwait
jmp
test
in
mov
enter
scas
mov
adc
cld
mov
out
lea
pusha
js
fidivrs
inc
loop
adc
in
mov
dec
aam
cli
jno
jmp
mov
mov
into
mov
lahf
sub
aas
inc
xchg
fists
movsl
lods
dec
sub
sti
iret
sub
cld
jl
jmp
loope
mov
mov
notb
xchg
sbb
mov
rolb
ljmp
call
push
add
and
pop
ljmp
leave
xlat
adc
push
inc
cmp
loop
mov
mov
mov
outsb
in
inc
mov
sarl
scas
jmp
fdivs
adcl
mov
jmp
xchg
cli
pop
mov
pop
jp
xchg
nop
mov
clc
sbb
adc
cmc
cmp
sbb
adc
lahf
or
jnp
push
push
incb
insb
imul
sbb
test
mov
cli
inc
dec
or
outsb
aam
or
and
fs
mov
sbb
nop
add
push
mov
mov
lods
push
add
push
mov
lods
and
cmp
jg
adc
ja
mov
jp
inc
scas
les
xlat
jns
rolb
xchg
pop
out
imul
push
push
push
mov
push
pusha
out
les
xchg
test
mov
pop
ret
lret
pop
lods
iret
jo
mov
ja
mov
arpl
inc
je
mov
jb
or
les
popf
lahf
jmp
pop
jae
xor
sti
add
test
or
mov
xor
push
sub
movsb
add
mov
xor
jnp
lahf
scas
pop
shrb
cmpsb
repnz
scas
sbb
adc
iret
mov
clc
dec
mov
xor
mov
jecxz
inc
add
lret
das
sub
int
inc
ljmp
call
pop
lods
push
push
mov
orl
ret
push
js
cmp
mov
out
and
outsb
push
adc
pop
jg
andb
adc
jle
fcmovb
sbb
xchg
outsb
sbb
pushf
add
fiaddl
mov
hlt
into
outsb
xlat
xchg
outsl
cmpsl
add
adc
popf
pop
dec
lcall
clc
icebp
sub
data16
aas
mov
cmp
jae
js
or
jb
push
call
sub
aam
ficompl
jo
xchg
xchg
enter
std
and
and
or
sbb
andb
sub
int3
adc
loope
aaa
or
push
nop
push
xchg
out
ljmp
dec
jnp
mov
xchg
imulb
push
xchg
outsl
pop
aaa
aas
cmp
xorb
lods
cli
stos
pop
std
mov
sti
or
pop
mov
pusha
popf
iret
lret
fs
leave
std
shll
jecxz
repnz
xor
sub
xor
mov
les
loopne
dec
test
cmp
aaa
xchg
ss
dec
sbb
inc
rorl
xor
mov
jecxz
cwtl
pop
inc
mov
push
sbb
inc
inc
ja
jb
test
cmpsb
push
imul
in
les
sysexit
repz
out
cmp
mov
loop
xor
add
stos
or
dec
xor
test
mov
push
outsb
call
fwait
xor
pop
mov
xor
inc
std
dec
xlat
add
aas
cmp
in
or
movsl
adc
lods
jmp
jbe
push
mov
sub
sbb
fmull
xorl
lods
inc
xchg
inc
cmpsb
out
testb
pop
mov
cmp
inc
fstl
daa
xchg
xchg
inc
jg
das
push
push
mov
sbb
jns
pop
jl
lea
inc
push
jno
pop
or
mov
into
push
inc
cli
dec
fmull
xchg
xchg
js
sbb
dec
jl
and
stos
aaa
adc
fidivrs
sbb
into
fbstp
lret
in
cltd
cmp
mov
cmpsl
je
aam
addl
adc
pop
mov
paddsb
pop
mov
mov
add
out
and
xchg
fwait
dec
out
inc
jae
mov
push
adc
testl
dec
xchg
push
or
scas
out
mov
and
aas
mov
jge
je
das
dec
pop
mov
mov
rcr
fwait
out
mov
sahf
stos
and
lret
es
pop
test
paddd
pextrw
push
scas
mov
mov
aam
mov
imul
stos
sub
mov
lea
ret
mov
pusha
jne
xor
inc
inc
insl
adc
sub
imul
jae
inc
jnp
data16
out
aaa
jno
sbb
jp
adc
test
imul
sub
push
cmp
imul
stc
into
nop
test
in
leave
xor
mov
add
pop
inc
lds
subb
sbb
fwait
jo
lock
nop
std
jnp
aam
add
pop
scas
xchg
or
sub
movsl
jg
cmp
jb
xchg
mov
imul
std
cmpl
jne
mov
xchg
sbb
inc
scas
flds
cmc
push
lds
pushf
sbb
mov
adc
xorb
cmp
sub
sub
dec
push
pop
inc
sbb
push
aad
inc
imul
pushf
add
popa
pushf
push
sbb
push
int3
insb
push
divl
fstpl
and
dec
mov
aam
lcall
add
pop
insl
xchg
stc
mov
aam
inc
pop
add
in
pop
cltd
subb
enter
and
sahf
mov
xchg
push
dec
enter
jl
mov
mov
pop
jbe
mov
sub
test
jnp
hlt
pop
es
outsb
cld
dec
outsb
or
sbb
sub
sub
stos
pop
sti
pop
add
jnp
mov
lret
aad
sbb
data16
outsb
popa
ret
or
jle
mov
xchg
xor
das
std
pop
andl
jle
ret
test
dec
dec
out
xchg
inc
sub
pop
adc
sbb
dec
sub
out
lret
mov
cmpsl
ljmp
cmc
push
pop
or
mov
dec
add
test
pushf
loope
mov
movsl
outsb
or
cmp
lea
sbb
aad
adc
and
push
jnp
jb
jae
sbb
ret
mov
dec
xchg
div
outsl
ljmp
cmpsb
lods
fimuls
lret
and
xchg
mov
add
pop
mov
imulw
inc
popa
in
inc
cmpsl
mov
arpl
stc
adc
in
enter
mov
cmc
ret
jnp
jp
aas
sbb
jae
sub
fs
je
cmp
mov
decl
dec
popf
aas
mov
out
rcrl
push
imul
xchg
std
adc
or
aas
push
bound
dec
sub
js
add
lock
jp
outsl
pusha
xchg
in
jo
push
call
mov
xor
nop
push
in
repz
and
add
aam
dec
pop
pushl
cmp
clc
mov
push
sahf
sbb
fs
fdivl
add
pushf
xchg
push
stc
icebp
insb
pushl
xchg
pop
jmp
cltd
xor
sbb
fldenv
xor
sti
mov
mov
pop
or
enter
cmp
xchg
fsubrl
repnz
jle
push
outsl
jbe
cli
mov
fstpl
dec
add
les
mov
sbb
inc
loopne
in
cli
into
lea
icebp
sbb
insl
adc
mov
adc
fnstenv
add
pop
mov
shll
xchg
sub
and
sbb
in
jle
aas
lret
inc
ss
addr16
dec
cli
jge
adc
push
xchg
ret
pop
adc
adc
xor
add
add
lods
pop
sbb
fs
push
xlat
in
inc
out
xor
outsb
mov
push
mov
roll
cwtl
clc
out
mov
cmpsb
mov
xor
push
xchg
inc
mov
pop
std
das
lret
into
xor
inc
scas
lods
jge
test
pushf
inc
test
fistps
pop
dec
dec
jl
pop
jmp
fistl
rorl
sbb
jge
inc
movsl
xor
dec
rcr
sbb
cmpsl
jno
clc
push
loopne
lahf
jbe
jae
insb
push
cmp
aaa
jl
lcall
push
mov
pop
sub
loope
lret
xchg
push
jns
push
push
xchg
in
adc
das
xchg
xor
sbbl
bound
ds
stc
xor
shrl
mov
and
ljmpw
cmp
add
pusha
and
push
sbb
pop
mov
fldcw
loope
into
sbbl
push
xor
adc
testb
or
lods
push
arpl
inc
mov
sbb
out
es
out
orb
push
pusha
cmp
loopne
lret
sbb
pop
sbbb
loopne
in
sbb
int
incl
popa
adc
dec
fidivl
xchg
or
jge
insl
pop
aaa
and
int
pop
jns
jle
xorb
xchg
lea
into
cltd
pop
mov
lcall
fmull
xchg
subl
and
mov
fwait
push
add
add
push
adc
cmp
inc
inc
push
jnp
mov
scas
cli
lods
decb
mov
mov
rorb
mov
loopne
fdivs
out
cmp
leave
lret
add
scas
mov
xchg
add
ficompl
dec
xor
gs
aas
xor
xchg
mov
dec
and
andl
xor
sbb
adc
inc
cli
and
loope
adc
mov
ljmp
mov
loopne
mov
ret
arpl
std
test
pop
mov
pop
fdivs
push
adc
sbb
add
adc
adc
sahf
cmpsl
int3
addr16
pop
dec
test
adc
into
mov
sbb
adc
pushf
jne
ja
mov
aas
testl
inc
inc
enter
and
jae
imul
mov
je
xlat
lods
xor
aam
and
lods
dec
or
into
sub
or
or
fldcw
adc
nop
orb
dec
aam
lret
sbb
cwtl
rcll
lods
or
pop
popa
mov
lods
js
ss
aaa
cmp
inc
pop
in
enter
pop
pop
mov
xchg
imulb
cmovs
cltd
add
adc
out
pop
in
ret
mov
ficoml
mov
add
mov
sti
adc
adc
iret
lock
sbb
add
push
dec
call
mov
mov
xchg
cltd
jb
scas
xchg
cmp
imul
jae
sub
fwait
push
fwait
or
rorl
pop
out
testl
sub
es
inc
ffree
cmp
add
or
mov
inc
fisubs
out
aad
fidivrl
jle
adc
add
mov
repz
movlps
das
into
cmpsb
dec
xchg
xchg
out
test
push
cltd
fcomi
mov
popw
mov
leave
inc
push
adc
in
ja
int3
pop
ret
fstl
add
dec
pushf
fbld
stos
cld
xor
jmp
cld
push
push
and
in
jmp
push
lods
sahf
mov
push
dec
inc
mov
dec
cmc
out
scas
out
pop
or
test
fwait
ja
in
icebp
bound
push
sub
and
dec
inc
nop
popf
imul
mov
or
xor
das
pop
mov
mov
sarb
cmp
popf
dec
fidivs
popf
std
out
or
mov
pop
pop
in
in
add
add
pushf
mov
mov
fstps
sub
lock
add
xor
add
popf
call
dec
push
in
push
xchg
push
stos
push
scas
out
out
pop
lcall
out
push
cli
test
cwtl
insl
aas
pop
fadd
and
xchg
nop
push
jg
push
fstl
movsb
dec
loope
hlt
lods
out
imul
push
aad
sbbb
sbb
inc
add
lds
mov
leave
jb
inc
out
push
cmpl
pop
cltd
add
mov
sbbb
mov
mov
repz
xor
sub
dec
mov
jne
dec
scas
pop
jae
dec
add
sub
mov
pusha
je
mov
sarl
and
xlat
sar
test
pop
ljmp
fstp
xchg
js
inc
addb
dec
nop
mov
out
add
stos
sub
xor
adc
xor
adc
pop
sbb
and
dec
cmp
mov
addr16
cmp
xchg
insb
into
lahf
sub
add
sti
ficomps
inc
test
scas
stos
xorl
pop
mov
lret
adc
dec
cld
jmp
inc
stc
mov
pop
iret
and
mov
lcall
and
fnsave
popa
jp
xchg
jmp
lcall
and
out
pop
pop
rorl
inc
sub
pop
mov
xchg
shlb
inc
shll
mov
out
es
mov
sbb
push
cmp
adc
sbb
and
aas
push
mov
ja
dec
rcrl
test
daa
std
pop
mov
lds
and
sub
xchg
cmp
add
mov
jmp
roll
sub
data16
mov
dec
jg
leave
xchg
ret
push
xchg
ljmp
mov
movsl
push
sbb
in
dec
aam
dec
decl
xchg
test
and
pusha
in
icebp
icebp
hlt
dec
xor
dec
adc
and
adc
mov
enter
xchg
data16
mov
loope
bound
out
push
pop
shrl
dec
jbe
mov
rcrb
push
mov
cmpsl
cmp
or
xor
push
cli
popf
adc
out
into
inc
pop
or
mov
mov
mov
leave
icebp
push
int
fpatan
xor
fisttpll
rolb
cmpsl
ret
mov
lret
decl
cmp
pop
sub
mov
pop
fs
and
bound
pop
push
test
notl
xlat
outsb
add
jge
insl
popa
test
pop
cwtl
mov
insl
imul
les
aad
fwait
sarl
popa
dec
cmp
sarb
rclb
sub
addr16
popa
adcb
xor
cmp
xchg
mov
inc
or
adc
fildll
push
fcompl
call
add
add
data16
insl
aam
xor
xchg
lods
pushf
pop
jo
jecxz
mov
pop
fnstenv
sub
inc
cwtl
sub
insl
outsb
test
sub
mov
rolb
mov
cmp
mov
jp
cmp
push
or
push
xchg
push
pop
cli
cmpsb
cmp
push
jne
test
aad
cltd
roll
push
mov
lret
jb
add
mov
and
mov
outsl
fs
ret
ret
adc
dec
pop
iret
icebp
jle
addr16
mov
cmp
js
es
dec
push
cmpsl
orl
push
and
nop
xchg
in
jmp
push
sub
mov
add
mov
inc
sti
pusha
dec
adc
sub
loope
das
cmp
xorl
push
aas
mov
fidivl
lods
cwtd
daa
push
and
test
gs
xchg
inc
aam
sahf
xchg
aad
sbb
rolb
pop
stc
das
mov
insl
in
xlat
popf
push
cmp
dec
mov
inc
leave
outsl
sbb
lea
jae
and
mov
rclb
incl
fsubrl
xchg
push
add
and
mov
fsubrl
jb
jno
adc
cmp
and
stos
xor
aaa
mov
xchg
push
test
stos
xchg
or
shl
add
fdivl
notb
sub
push
aad
mov
cmp
gs
int3
adc
pop
mov
call
mov
out
xchg
pop
pop
or
bswap
imul
mov
sbb
add
dec
or
mov
cmp
push
push
sbb
ror
push
stos
xchg
mov
and
pop
in
test
or
xor
daa
test
bound
cmpl
pop
subl
fadds
and
sbb
out
adc
xor
sbb
mov
cs
add
cwtl
int3
xor
pop
std
imul
pop
or
arpl
xor
xchg
mov
mov
and
test
adc
dec
xor
clc
mov
out
leave
adc
mov
fs
das
adc
ljmp
sbb
je
lahf
ljmp
mov
inc
clc
arpl
dec
ds
popf
sbb
push
lock
mov
mov
sbb
fcmove
lods
and
arpl
bound
arpl
dec
or
jl
insb
push
adc
in
adc
pop
fisubl
cmp
cld
push
pusha
xchg
sar
sub
cmp
xchg
das
pop
imul
int3
inc
cmpsl
sub
ss
mov
mov
push
or
lea
nop
adcb
jg
addl
inc
jecxz
inc
xor
test
iret
cli
stc
sahf
lret
xor
sti
dec
cmp
arpl
or
mov
push
imul
xchg
rcrb
inc
fwait
jg
and
jne
push
aas
test
fs
or
cmp
pop
dec
mov
jmp
imul
or
lea
and
addb
imul
mov
int
dec
pop
sbb
stos
scas
mov
dec
aad
into
inc
enter
xor
cmpsb
mov
aaa
enter
xor
in
push
adc
pushl
cmp
inc
sub
out
pop
mov
mov
or
dec
loope
in
jle
loope
bound
xlat
xor
cmp
je
mov
repz
fstpt
push
jge
fcoml
dec
mov
sti
cmp
jmp
pop
into
arpl
mov
jmp
call
mov
lahf
cli
bswap
test
aad
repz
fimull
loop
outsl
xchg
test
je
mov
jo
daa
fwait
movsb
add
rclb
ds
shl
jbe
push
fidivs
aaa
pop
inc
mov
inc
inc
hlt
jnp
in
sarb
cmc
sub
dec
repz
mov
mov
adc
jle
mov
push
xchg
jae
xor
fsubrl
fwait
aad
into
lds
lret
mov
or
shll
shrl
add
jecxz
enter
cwtl
pop
sbb
jb
sbb
fisttps
sub
adc
mov
inc
test
mov
seto
pushf
pop
mov
sbb
js
test
nop
outsb
pushl
mov
ret
cmp
into
insl
mov
stos
dec
add
div
sub
hlt
outsb
mov
cltd
fs
dec
sbb
xor
jnp
test
hlt
inc
sbb
aaa
iret
lahf
pusha
lret
jo
sub
leave
dec
mov
jne
mov
push
fstpl
cli
cmpsb
ret
stos
lods
or
mov
hlt
mov
test
aas
mov
xor
insl
pop
jae
pop
jb
sub
ds
jg
or
loop
int3
push
and
inc
sub
ljmp
into
add
and
loope
test
and
inc
xchg
xchg
mov
sbbb
mov
in
pop
pop
cmp
pop
push
mov
add
mov
shrb
jle
jae
add
inc
cmpsb
sahf
nop
jae
and
jl
lcall
jmp
mov
or
pop
mov
data16
pop
mov
int3
in
mov
iret
xchg
dec
insb
clc
jb
addb
mov
cmp
cmp
pop
dec
jno
xchg
repz
loopne
add
cmp
mov
scas
dec
outsl
movsb
adc
add
in
xor
sbb
je
xchg
and
mov
mov
push
int3
or
ljmp
and
hlt
movsl
adc
cmp
push
or
call
daa
fwait
loopne
loopnew
jg
iret
ljmp
ret
aaa
rorl
adc
rorb
sbb
pop
mov
arpl
fcomps
jge
gs
outsl
xchg
imulb
push
stos
lret
sub
in
xchg
jp
or
outsb
sub
scas
sub
addr16
test
js
sub
sub
ret
xor
cmp
push
xchg
hlt
fcmovbe
test
stos
adc
sub
jg
cmp
adc
dec
repnz
mov
popa
inc
std
pusha
mov
cmpsb
xchg
pop
clc
out
test
stc
dec
ficoms
shll
add
lret
js
aaa
mov
stc
jae
movsl
lret
or
jae
pop
jl
xchg
sbb
lods
or
loop
cs
movsl
aaa
inc
xchg
pop
push
std
jo
fcoms
xchg
ret
scas
out
jo
out
pop
jl
mov
xchg
lods
adc
stc
les
cmpsb
cmp
mov
pushf
mov
sbb
shll
repnz
push
add
bound
xor
xchg
aam
xchg
xchg
push
scas
icebp
or
cs
push
sbb
dec
dec
xchg
int3
inc
imul
enter
lds
test
scas
or
fcoms
add
xor
push
mov
mov
in
sbb
imull
aad
sbb
xchg
outsl
jg
out
mov
shll
movhps
in
push
push
mov
xchg
jno
push
ret
push
jne
jns
inc
push
xchg
cmpsl
mov
mov
jno
into
dec
pusha
stos
cmp
adc
aas
inc
mov
xor
inc
mov
dec
call
add
xchg
inc
shlb
pusha
out
call
mov
sbb
adc
mov
jp
xor
adc
pop
je
nop
aam
cld
xor
fwait
std
pusha
inc
or
out
pop
out
fdivl
bound
add
mov
adc
lcall
xchg
pop
sub
inc
push
nop
jb
xor
stc
out
pusha
mov
mov
push
or
pushl
and
add
mov
jns
sub
ret
sub
or
sub
scas
cld
outsl
bound
adc
xor
imul
and
mov
fidivl
mov
xchg
mov
and
popa
data16
xchg
cs
aas
scas
and
lock
adc
mov
push
xlat
pop
jmp
mov
and
cmc
push
dec
mov
lcall
ds
xchg
stos
mov
ret
sbb
int
cmp
fstpt
mov
repnz
insl
test
and
xchg
mov
xchg
in
lea
nop
mov
shr
fiaddl
add
dec
inc
mov
push
movsl
stos
pop
mov
mov
and
out
js
mov
stos
push
add
mov
xor
mov
lea
inc
addl
not
out
addr16
dec
or
xchg
jnp
mov
icebp
mov
popf
dec
lret
in
jl
cmpsl
in
jno
loop
ja
fmulp
fistpl
jne
add
cmp
sub
adc
mov
push
sub
sti
mov
rorl
loope
arpl
decb
lods
and
idivl
pusha
and
ret
add
xchg
jae
lcall
outsl
push
dec
dec
insl
fisubl
push
aas
xor
shll
mov
repz
leave
call
insl
ljmp
pop
sub
test
test
lock
cmc
mov
pushf
dec
sbb
push
adc
out
sbb
jns
das
jne
dec
int
push
call
es
sub
pop
push
sbb
sbb
inc
das
and
je
sub
outsb
cmpsb
sub
lods
push
or
jl
adc
dec
stos
jo
sti
and
jge
xchg
movsl
imul
std
mov
les
add
add
inc
aas
jge
arpl
xor
fisttps
dec
sub
imul
fs
add
leave
andb
add
shl
cwtl
cs
outsb
mov
or
inc
in
dec
inc
and
adc
out
daa
mov
jo
test
rolb
shlb
stos
cmp
adc
lahf
out
adc
mov
mov
outsb
jno
sub
jb
insb
dec
and
sub
fs
lds
push
leave
push
push
add
mov
andb
dec
mov
cmp
call
pop
or
out
add
out
outsl
shrb
frstor
leave
push
loop
pusha
mov
shlb
lods
mov
and
repnz
inc
test
inc
push
movsb
mov
enter
sub
and
cs
add
dec
out
push
dec
test
cltd
or
sar
adc
sub
sti
repz
mov
enter
out
mov
pop
test
gs
ljmp
mov
out
mov
push
roll
pop
dec
xor
movsl
in
jl
jbe
sub
cmp
ret
ret
scas
ljmp
xchg
and
jecxz
mov
jecxz
mov
ret
cld
xchg
fidivrs
sbb
rorb
pushf
icebp
mov
pcmpgtd
in
xchg
push
lock
pushf
mov
enter
jp
cmpsb
orb
into
cmp
sub
dec
xchg
sub
mov
lea
mov
xchg
filds
cmp
loope
mov
inc
xchg
xor
and
xor
mov
mov
or
in
fidivrs
lds
adc
scas
aad
call
cli
pop
das
scas
cmpsl
ret
imul
xchg
inc
std
imul
mov
cltd
add
and
les
testl
dec
js
sbb
sbb
rorl
sti
cld
xchg
pop
or
jge
mov
and
loope
and
inc
hlt
arpl
andl
or
loop
dec
cli
xchg
stos
lea
and
pop
sbb
into
and
cmp
xor
fildl
xchg
cmpsl
mov
enter
call
fyl2x
adc
sbb
cmp
loopne
mov
push
mov
cmpsb
lahf
insb
arpl
cmp
push
dec
aam
and
adc
shlb
or
in
pusha
pop
adc
jb
pop
add
pop
lret
enter
sbb
data16
aam
pusha
dec
xchg
iret
inc
cmpsl
lods
daa
mov
lahf
push
xchg
clc
inc
loop
insb
sbb
sub
lock
push
xchg
push
jp
pusha
popf
aad
sbb
in
loopne
or
and
fcos
dec
sbb
je
das
subb
add
add
mov
data16
mov
adc
and
xor
mov
xchg
out
imul
dec
and
cmpsl
mov
jp
sbb
dec
fimull
imul
aad
sti
dec
imul
mov
xor
dec
dec
movsl
sub
mov
lret
xchg
je,pt
sbb
rcll
faddl
addl
repnz
popf
inc
pop
push
ret
pop
sarb
cltd
push
jecxz
or
sbb
add
aad
fwait
idiv
cmp
fldt
fwait
xchg
fwait
insl
cmp
iret
mov
xchg
out
repz
or
jns
cmc
bound
inc
shr
xchg
add
jmp
xchg
mov
idivb
cs
and
icebp
loop
addr16
testb
movsb
pop
addr16
xchg
adc
lahf
push
imul
andl
mov
popa
jecxz
inc
push
ret
loope
adc
je
arpl
mov
push
in
cmp
data16
push
in
dec
leave
fcomp
mov
in
inc
into
in
repnz
sbb
push
mov
outsl
push
stc
adc
dec
lea
fwait
stc
mov
stc
sbb
push
sub
mov
bound
xor
in
xor
test
pop
in
or
and
std
and
xchg
xchg
nop
out
add
icebp
lret
test
pop
fndisi(8087
xor
xchg
adc
fbld
test
xor
leave
pop
push
ret
xor
inc
imul
int3
add
ret
mov
insl
test
jb
mov
pop
mull
popa
sub
stos
fisttps
lahf
pop
sbb
lret
mov
cmp
pop
into
addl
xor
sarb
xchg
lds
or
mov
dec
pop
mov
adc
daa
repnz
pusha
cli
pop
out
popa
add
sub
mov
jg
jmp
inc
movsl
in
lock
fs
sti
mov
and
cmp
cmpsl
or
xchg
mov
xchg
daa
adc
addr16
cmp
inc
js
fiadds
sbb
leave
dec
call
add
push
mov
lret
add
or
mov
jl
jnp
add
and
pop
loope
test
mov
int
add
mov
add
mov
dec
jg
inc
adc
push
cmp
dec
push
aas
mov
lcall
psubd
scas
or
mov
push
or
rorl
push
jg
aam
repz
xchg
sbb
cmpsb
jmp
fucomi
dec
jns
and
xchg
popf
arpl
dec
and
and
sahf
xchg
mov
ret
jg
loop
adc
pusha
or
stos
jmp
cltd
addr16
jmp
fbstp
push
fcomps
fstpl
push
lcall
xchg
test
test
mov
add
sarb
mov
ret
rclb
xor
pop
inc
jp
jb
loope
xor
lret
mov
mov
push
mov
in
mov
and
test
dec
xchg
adc
out
dec
jle
sbb
push
jnp
outsb
xchg
push
jae
lret
sub
shlb
and
xchg
dec
lahf
pop
sub
fiadds
mov
xchg
cmp
pushf
pop
inc
out
mov
inc
adc
push
push
test
shr
cs
addr16
cmp
or
and
sarl
and
mov
incl
push
mov
xor
fistpl
out
xor
cltd
inc
fs
mov
pop
pop
push
xchg
jl
ja
cmp
sbb
call
pop
stos
adc
loope
out
stos
loop
xchg
adc
rcl
sbb
push
sbb
test
aaa
or
mov
or
in
lds
fdivr
imul
and
js
scas
sbb
fistpl
jl
jnp
and
ljmp
aad
jmp
test
adc
mov
aam
pop
push
xchg
mov
daa
ss
js
cmp
je
inc
enter
add
outsb
lcall
xchg
or
xlat
test
add
inc
jbe
pop
add
mov
add
cmp
shr
xor
mov
sub
adc
jle
cli
jno
outsb
andl
and
dec
or
fwait
xor
xor
xor
xchg
ss
es
bnd
inc
cmpsb
mov
scas
and
icebp
lods
test
subb
sbb
stos
xchg
or
jp
fcoms
push
ljmp
dec
add
inc
dec
repnz
add
jmp
and
in
mov
mov
aas
cmp
clc
sarb
jmp
sahf
jp
cltd
insl
jp
jno
xor
aad
cs
push
nop
jmp
jnp
jg
popa
fisttpl
cmp
mov
or
pop
cmpsb
jp
jle
jno
adc
ljmp
xor
scas
stos
sbb
xchg
test
jecxz
jl
mov
jge
int3
frstor
inc
arpl
ljmp
or
lret
push
stos
das
ret
aam
dec
test
fiaddl
fdivrl
rcrb
push
jp
imul
mov
xchg
mov
outsb
mov
insl
stos
repnz
sub
ficoml
clc
cmp
pop
clc
into
pop
xor
dec
xchg
jbe
and
mov
ret
inc
lods
out
cmc
shlb
jns
enter
mov
imul
mov
mov
out
xchg
inc
es
push
pusha
fdivp
cmc
sub
pop
jne
pop
add
and
iret
adc
addr16
lock
sub
outsl
mov
aas
sub
xchg
push
test
jp
cltd
mov
sbb
add
push
negl
pop
mov
jo
or
nop
pop
imul
mov
pop
xlat
shrl
repz
add
mov
add
xchg
pop
test
mov
lods
int
or
jae
add
xchg
movsb
pop
and
xchg
push
push
lcall
lcall
mov
fidivl
lahf
pop
pushw
ret
mov
icebp
leave
pusha
rclb
pop
inc
push
pushf
jno
fxam
jg
loope
or
dec
daa
jae
jo
cltd
cmpsl
pop
and
dec
je
aas
fimull
or
push
jb
jp
pop
inc
jge
mov
nop
add
mov
dec
mov
outsb
loop
lcall
out
mov
fisubrs
sub
push
push
bound
push
push
data16
dec
insb
push
in
sbb
rcll
push
jno
movsb
and
jnp
mov
jl
in
push
mov
imul
mov
clc
out
adc
shrl
inc
xchg
xchg
xchg
lret
mov
push
mov
dec
stc
inc
mov
dec
pop
test
mov
pop
loope
fstpl
xor
jnp
mov
mov
das
cmpl
imul
dec
test
jno
adc
or
fadd
fucomip
fiaddl
push
mov
dec
dec
mov
ljmp
jnp
je
mov
repz
pop
orb
int3
in
ja
xchg
out
inc
dec
jb
sahf
and
fists
movsl
repz
mov
inc
aam
xor
test
push
into
imul
movd
and
pop
cmpsl
mov
out
and
in
xchg
add
out
adc
xchg
pop
mov
inc
mov
ja
test
nop
out
sti
jp
pop
sbb
icebp
dec
jns
cmpsl
mov
mov
fadd
insb
rclb
repnz
cmp
add
xchg
or
add
das
shrl
out
inc
jno
dec
lret
inc
and
jo
add
and
inc
or
imul
fsts
adc
cmp
insl
xor
in
xor
adcl
pop
pop
cli
cltd
lcall
add
popa
push
aad
adc
mov
mov
pop
cld
in
scas
push
imul
mov
iret
fdivl
xchg
push
xor
xchg
adc
lea
popa
bound
cmp
add
jne
add
jb
add
push
imul
jg
ss
mov
pop
jle
gs
cmp
shlb
inc
mov
mov
cmp
lea
aam
xor
or
or
lock
mov
movsl
sbb
mov
sbb
iret
lcall
lret
xchg
loopne
lock
mov
and
mov
les
into
inc
jnp
shll
vpmadcswd
jns
pop
lock
xchg
and
xchg
mov
lods
int3
lea
jne
and
cmc
mov
cld
mov
inc
xchg
mov
rorl
mov
cs
or
daa
sub
sub
clc
lods
sahf
aas
sbb
iret
jl
in
push
rorb
inc
fisttpl
fdivrs
xor
sub
inc
test
adcl
fistl
imul
lea
addr16
popa
ljmp
jecxz
push
push
scas
inc
cmp
aad
sub
scas
xor
ficoml
sbbl
cmp
mov
sub
pop
repz
les
push
mov
pop
jo
inc
es
dec
jnp
cmpsb
scas
fiaddl
lock
xchg
outsl
pop
mov
mov
fwait
add
mov
or
push
repnz
push
inc
pop
ficomps
jne
pop
inc
push
jle
inc
xor
std
xchg
cmpsb
pop
scas
xchg
jne
sub
mov
cmp
add
movsl
and
sub
sahf
adc
lret
xchg
push
pop
pop
cmp
push
cmpb
fsubrl
jmp
mov
jg
or
cmp
daa
rcll
xor
or
sti
or
xor
enter
movsb
mov
push
adc
jb
cmpsl
cmp
jo
rcl
fmull
in
pop
into
cli
pop
fdivrl
ss
cmp
jmp
cli
out
xchg
push
xor
push
xlat
pop
lcall
iret
lcall
sbbb
xlat
xor
xor
cmpsl
push
cmc
jb
push
xchg
loopne
bound
adc
jno
push
xchg
arpl
fs
test
cmpsb
adc
sub
and
inc
aad
out
outsw
mov
loopne
testl
jae
pop
jecxz
and
sub
cli
xchg
jmp
pop
jl
movsl
mov
movsl
inc
mov
rcl
mov
ret
outsb
arpl
push
repz
mov
pop
ljmp
jp
lcall
les
negl
adc
pop
dec
xchg
ljmp
mov
arpl
arpl
cltd
xchg
push
inc
sub
cmp
outsl
fcoms
mov
or
jb
gs
inc
out
mov
mov
das
aad
xchg
icebp
imul
or
mov
out
pop
cmp
sti
fwait
dec
jecxz
sbb
sub
test
insb
imul
and
das
mov
stos
dec
aad
inc
dec
rorb
push
jmp
in
daa
mov
or
stos
sbbl
jecxz
mov
xadd
mov
jg
sub
xchg
sahf
gs
mov
pop
mov
add
sbb
shlb
hlt
mov
cmp
push
pop
scas
sbb
jg
das
jl
dec
mov
mov
ss
mov
cmp
test
outsl
aam
nop
mov
in
mov
sub
outsl
fmul
shl
aam
or
in
cmp
inc
movsl
lock
lea
mov
sar
leave
iret
popf
jb
cltd
add
add
mov
shlb
mov
imul
sub
mov
xor
outsb
loope
pop
xchg
jl
mov
test
or
lds
dec
mov
add
adc
jmp
xchg
scas
call
mov
cmc
cmp
mov
mov
addr16
cld
cmc
in
mov
pop
dec
data16
sahf
sbb
inc
jns
xor
mov
mov
and
cs
mov
outsl
data16
je
mov
stos
xlat
adc
addr16
pop
les
arpl
popa
or
xchg
sbb
inc
sub
sbb
imul
pop
ja
cmp
fbld
sub
pusha
leave
pop
es
mov
int
xchg
jno
and
ja
int3
and
mov
and
lret
cmp
icebp
xor
sahf
dec
je
push
adc
xchg
inc
loope
cli
xchg
insl
test
mov
pop
sbb
sub
add
fidivrl
dec
leave
stos
cmp
in
jne
cmc
das
js
insl
pop
and
and
cmp
jmp
out
cmp
gs
or
inc
xor
dec
aas
hlt
pop
dec
mov
sbb
stos
mov
shr
dec
inc
mov
cltd
xor
movlps
in
push
or
ficompl
seto
sbb
dec
imul
sub
insl
stos
aad
fcmovnb
mov
jmp
sub
cld
sbb
repnz
icebp
or
cmpb
inc
lret
mov
rorb
loop
in
pop
lcall
mov
pusha
insl
lret
test
ja
push
aaa
andl
orl
arpl
aaa
xchg
mov
iret
movsb
pushf
add
inc
pusha
iret
xlat
mov
cmp
ljmp
adc
jo
lea
mov
aad
xchg
sbb
clc
mov
jns
nop
xor
fwait
mov
pop
mov
jbe
push
mov
push
mov
push
or
movsb
insl
sub
stos
sbb
mov
mov
lods
inc
loope
dec
sub
mov
mov
jb
cmc
js
call
adc
in
flds
xor
mov
sbb
sbb
out
pop
cmp
fsubr
gs
loope
xchg
pcmpgtb
leave
outsl
in
add
adc
cwtl
push
cmp
fidivrs
sub
lcall
iret
leave
and
sbb
sahf
pop
mov
ljmp
dec
movsb
inc
push
xchg
cmp
les
arpl
ret
xor
add
mov
or
orb
push
popf
mov
rol
cltd
mov
push
aam
xchg
mov
xor
lret
push
jmp
and
loop
add
push
fisttpl
ds
cmc
inc
jl
movsl
nop
push
and
add
push
addr16
cwtl
out
rolb
imul
push
jbe
in
jecxz
rcll
mov
and
sub
add
repz
mov
pop
push
mov
xchg
popa
cmp
push
dec
jb
popf
int3
bound
xor
jo
add
mov
jl
and
sbb
cmp
inc
adc
enter
sbb
imul
sub
jno
push
push
mov
mov
ljmp
mov
mov
xchg
inc
adc
insl
mov
xor
test
les
jmp
fsts
xor
adc
jl
mov
daa
iret
push
push
aam
imul
imull
loopne
and
test
push
aas
mov
repnz
in
cmp
mov
enter
scas
pop
lea
adc
add
jns
cmpb
repz
ja
jl
cld
jmp
gs
or
mov
jmp
clc
out
loopne
push
insb
adc
scas
mov
xor
mov
pop
mov
xor
je
xchg
insb
ja
and
sbb
rcr
sbb
jo
test
bound
sbb
jb
jl
arpl
xor
push
imul
cld
inc
ret
ds
xchg
cmp
pop
ja
ja
mov
xor
push
jb
loop
add
leave
xor
inc
jbe
ret
loopne
fidivrs
jl
dec
inc
mov
iret
xor
xor
cmpsl
notl
push
pop
aaa
add
mov
mov
stos
lahf
pop
xchg
xchg
push
sahf
pop
aaa
rcrl
out
aaa
cmc
adc
xchg
stc
repz
jne
loop
inc
inc
sbb
into
pop
out
push
pop
inc
decb
nop
sbb
jb
pushf
jae
jne
pop
mov
cs
xor
cmp
cltd
insl
or
cmp
andb
cmc
iret
push
and
rolb
test
push
mov
dec
xchg
outsb
sub
imul
cmp
fnstcw
scas
leave
pusha
mov
mov
leave
fdivs
rorl
sub
daa
lahf
out
stc
jge
popa
test
sbb
outsl
sahf
pop
cmc
push
push
adc
cmc
and
sbb
and
xor
fwait
add
mov
jecxz
dec
push
jge
movsb
mov
das
sub
jmp
push
icebp
jmp
addl
jecxz
sub
loopne
xchg
pop
sbb
sbbb
xlat
mov
inc
fwait
xchg
xlat
push
test
pop
lea
test
pop
imul
xor
xchg
jae
call
xor
fwait
repnz
jne
stc
jo
xor
mov
push
out
inc
push
cwtl
adc
fnstenv
imul
mov
or
pushf
add
std
inc
lret
scas
mov
push
fwait
dec
xor
sahf
push
movsb
pop
push
and
dec
push
and
orl
mov
mov
mov
adc
pop
push
mov
adc
mov
add
sbb
ds
xchg
xor
adc
ss
inc
enter
lret
lcall
faddp
movups
lret
out
js
mov
lds
sub
bound
orb
mov
xor
jo
or
push
xorb
mov
test
ljmp
pop
add
nop
pushf
dec
pop
jae
sub
inc
ja
push
addr16
ds
pop
cmp
mov
call
and
movsl
cmpsl
inc
xchg
dec
call
adc
inc
popa
cmpsb
movsb
bound
mov
or
lock
sbb
push
aaa
imul
outsb
mov
adc
add
or
sarb
push
int
mov
jge
adc
push
icebp
dec
mov
stos
dec
cmc
mov
push
push
sbb
adc
nop
mov
cmp
push
ss
cmp
cld
lcall
aam
je
pop
ret
rorb
dec
inc
pusha
or
js
mov
cmp
fwait
mov
insb
dec
cmpsb
cld
or
pop
mov
jbe
or
dec
xor
movsl
adc
hlt
push
popf
xchg
lahf
enter
push
test
and
cmp
stos
arpl
outsl
jl
push
pop
and
sub
mov
sahf
out
adc
cltd
add
fadds
push
mov
test
in
dec
popf
dec
push
fistl
dec
std
xor
add
jp
xor
int3
notb
or
jmp
dec
js
pusha
test
mov
repz
sub
mov
or
jo
test
nop
pop
add
push
mov
jmp
push
cmp
and
cmp
sub
arpl
push
pop
lods
jmp
fmul
add
xor
es
xchg
mov
dec
jno
mov
xor
int3
jb,pt
int
lock
pop
fildl
test
repz
out
pusha
sub
addl
mull
add
ret
jecxz
loope
testl
cwtl
mov
fdivrs
jo
fcmovb
or
push
jae
hlt
xor
mov
sbb
mov
aad
rcrb
lods
outsl
jne
jbe
aas
fldz
and
pop
jbe
in
dec
and
sbb
add
push
hlt
ja
pop
movsl
pop
mov
in
add
jmp
xor
repnz
adc
in
push
notl
loope
xor
pop
fdivs
sti
push
stc
xchg
and
mov
and
leave
jae
in
inc
push
in
cmp
or
xchg
cmp
push
jno
inc
mov
adc
mov
mov
fidivrs
xor
and
push
push
cld
testl
lcall
xchg
addr16
cmp
xor
outsb
shl
sbbl
int
je
fsubrs
mov
mov
call
clc
lret
jo
lods
adc
xor
out
inc
movsb
int
mulb
and
xor
jl
pop
popa
pusha
fwait
push
lds
insb
dec
imul
inc
mov
arpl
decl
mov
icebp
mov
inc
imul
and
pop
sub
xor
mov
in
test
jno
or
int
mov
mov
dec
enter
test
mov
sbb
jg
loopne
dec
sbb
loope
repnz
mov
fcoms
enter
push
insb
push
bound
pushf
cmp
lcall
inc
mov
in
mov
xchg
adc
aam
cs
mov
insb
pop
jo
popa
dec
fs
cmp
orl
scas
cs
ja
jmp
add
adc
xchg
add
sub
xor
das
xor
aas
movsl
and
rclb
outsb
dec
pop
stos
jmp
les
dec
push
shll
cmp
dec
xchg
fdivs
pop
fildl
sbb
lret
pop
shrl
dec
cmc
sbb
outsb
mov
sub
and
or
push
lret
push
dec
push
fsubs
mov
dec
inc
stos
aad
inc
out
imul
jo
xor
jb
jo
je
shlb
jge
lret
sahf
lods
xlat
jp
or
rorl
push
and
out
cmpsl
adc
lea
dec
mov
mov
push
push
rolb
add
icebp
mov
adc
rcrb
jnp
push
fwait
arpl
int3
test
adc
pop
out
mov
lds
and
xlat
add
mov
test
lock
and
cmpsb
scas
add
ja
mov
into
xchg
pop
in
adc
lea
fstl
add
cltd
mov
dec
lret
lahf
fs
and
add
pop
xor
hlt
adc
sbb
add
adc
pushl
mov
pop
movsl
dec
cmc
cmp
and
es
arpl
ja
push
add
fdivrl
mov
pushf
mov
js
shrl
jmp
arpl
lock
mov
cmc
mov
push
pop
incb
shrb
sbb
pop
lret
outsb
pusha
insb
sub
loop
sbb
les
idiv
mov
movsl
pop
cmp
jge
aam
pusha
icebp
lock
cmp
insb
push
pop
clc
mov
jl
adc
daa
loop
hlt
lret
adc
adc
in
test
out
into
sbb
inc
std
and
fld
ja
push
xlat
dec
push
pop
mov
dec
outsl
mov
test
adc
outsb
ret
pop
mov
in
movsl
xchg
stc
jecxz
ds
lahf
leave
mov
pusha
inc
aam
cmp
mov
imul
mov
loopne
ja
scas
and
in
cmpl
mov
aam
pop
int
push
mov
push
iret
sub
clc
addb
jnp
jle
addr16
pop
fwait
xchg
add
dec
mov
push
xchg
cmc
pop
jnp
insl
jecxz
dec
jl
push
hlt
dec
lods
aas
ljmp
adc
and
in
stos
pop
sbb
xchg
pushf
fcmovu
adc
test
xchg
jmp
pop
or
fwait
int3
cmp
xchg
cmp
dec
jge
mov
nop
bnd
cmp
or
push
pop
jae
enter
movsb
imul
adc
adc
aas
mov
sbb
imul
js
rol
jg
inc
sahf
jo
shll
mov
fdivrl
sbb
fdivrl
test
bnd
and
xchg
push
mov
rcrb
mov
sarb
xor
sbb
xor
xchg
mov
fsubr
sbb
add
mov
lcall
fdivs
call
cmp
mov
pop
test
jg
sbbl
sub
idivl
insl
xchg
test
enter
dec
mov
push
out
sub
pop
cwtl
lea
pop
shll
cmpsl
xchg
add
loop
add
mov
lds
sbb
bound
jle
fincstp
aas
hlt
faddl
jle
dec
jg
cmp
out
jbe
mov
push
lods
sub
sub
sub
decl
testl
xchg
rclb
mov
xchg
jg
jmp
mov
inc
mov
cmc
inc
mov
dec
jmp
sub
xchg
rep
jle
inc
icebp
in
mov
sbb
push
jmp
sbb
in
jg
cmp
out
mov
roll
jmp
stc
cmp
cmc
and
xchg
jl
pop
popa
fdivr
test
cli
out
ret
stos
mov
ds
js
mov
imul
ss
sbb
sub
scas
xorl
imul
jb
into
sbb
dec
data16
xchg
les
sub
cli
test
jb
jge
adc
stos
sbb
mov
out
jmp
add
dec
aad
orl
adc
jp
out
sub
mov
mov
inc
scas
mov
fisubl
mov
jl
into
lret
xchg
jmp
lret
adc
push
mov
xchg
mov
scas
repz
inc
fstpl
fists
or
ds
fdivrp
sbb
popf
fiadds
adc
cmp
imul
cmp
push
xchg
cmp
xor
call
icebp
dec
fsub
add
jl
mov
lods
sub
mov
loopne
in
fwait
jb
loopne
repnz
in
pop
inc
fisubs
in
dec
cmp
xchg
fcomps
push
xor
mov
push
jecxz
shrl
sbb
sti
aas
jo
dec
xchg
addl
or
and
cwtl
ret
dec
xchg
sub
inc
mov
xchg
mov
jae
icebp
adc
mov
mov
jle
arpl
int
cmp
and
and
pop
push
or
adc
int3
sub
sub
imul
dec
mov
call
push
iret
mov
int
mov
or
sub
movsb
fisubs
mov
popa
and
xor
lret
test
inc
leave
incb
movsl
inc
mov
fs
push
or
or
pop
cmp
int3
inc
mov
fs
push
jne
je
xor
fsts
inc
lret
and
and
lds
dec
arpl
sti
ret
je
loop
xchg
ret
dec
ja
outsb
imul
push
and
sarl
ret
divb
cmp
mov
cmpsl
es
lea
mov
and
int
jns
push
insl
mov
mov
sbb
stos
out
pop
fcompl
es
dec
sahf
das
sarb
cld
fildll
mov
sub
mov
adc
daa
mov
test
xchg
shrb
jg
leave
ja
in
push
add
push
test
repz
xchg
lret
enter
adc
out
subb
ss
mov
cmp
mov
or
and
test
out
mov
cmp
inc
mov
loope
outsl
xor
xchg
dec
fcmovne
jl
sub
pop
add
rcl
adcl
jge
xchg
incl
and
adc
and
sub
dec
push
inc
and
fistl
std
xor
shll
jl
sbbl
imul
and
insb
jb
ret
outsl
ret
hlt
ds
jnp
push
mov
and
mov
lds
cmpsl
lods
lret
or
cmp
mov
cwtl
jmp
data16
ret
jns
mov
stos
fcomip
lods
push
jmp
outsl
cmpsb
pop
insl
and
dec
sbbb
cli
js
fisubs
adc
push
vpmaxub
push
stc
repz
leave
andl
mov
xchg
ds
mov
aam
cmp
sbb
push
hlt
es
dec
into
xor
xchg
xchg
jle
adc
pop
insb
jmp
das
test
push
rcl
jmp
xchg
dec
dec
mov
and
stc
sub
adc
into
mov
faddl
icebp
add
hlt
cmc
mov
shrb
lahf
outsb
xchg
fucomi
bound
fdiv
dec
dec
mov
push
jae
adc
imul
mov
sub
out
addr16
call
jecxz
movsb
rcrl
loope
cltd
out
outsb
rorb
scas
repnz
js
in
das
pop
cltd
in
add
pop
js
add
lock
mov
add
loopne
js
jb
mov
add
out
add
or
nop
xchg
jmp
cmp
jae
push
pop
fcmovb
hlt
jg
sbb
cmp
mov
pop
lods
mov
cli
sub
add
arpl
repz
xor
stc
jns
es
std
lret
xchg
mull
push
sbb
xor
loopne
jbe
pause
sub
fs
sub
movsb
std
shl
lds
xor
pop
or
les
mov
xchg
adcl
das
xlat
inc
mov
out
jg
and
add
xor
jo
mov
push
cli
or
xlat
mov
fistpll
push
xchg
cmp
sti
loopne
mov
aad
xchg
jg
movsl
pusha
clts
jbe
add
xchg
stos
mov
rcr
loope
push
cmp
push
pop
mov
leave
test
mov
icebp
std
push
ret
xchg
jno
inc
es
xor
hlt
and
lret
dec
sbb
push
test
adcl
pop
sti
and
cmpsb
sub
ret
sti
dec
aas
imul
out
xchg
adc
outsb
mov
enter
jl
mulb
or
xchg
xor
cld
orl
jl
xchg
cltd
mov
or
inc
jb
pop
xchg
xchg
and
ds
ret
dec
add
jge
xor
ret
ficoms
rorb
call
ds
sbb
lods
pop
adc
pop
push
inc
mov
inc
mov
xor
xchg
test
insb
fwait
std
add
jne
xchg
shl
or
cld
adcb
add
lods
pop
lret
ret
sbb
shll
fwait
and
enter
sbb
mov
fwait
cli
sub
jo,pn
cs
arpl
pop
fsubrp
jns
pop
mov
mov
es
cwtl
sbbb
dec
shl
xchg
inc
adc
je
sub
and
dec
push
stos
dec
shl
insl
pop
jp
dec
loop
push
icebp
aam
sub
rorw
mov
mov
push
inc
ss
sbb
mov
movsl
mov
adc
dec
xchg
int
arpl
lret
fcmovu
mov
pop
das
aaa
clc
sub
data16
sub
repz
lds
xchg
lahf
ret
jnp
jo
xchg
xor
sbb
jp
aas
int3
mov
sub
dec
mov
adc
fcmovnbe
add
cmpb
inc
shll
dec
pushf
aad
test
dec
out
push
imulb
sbb
test
icebp
das
adc
jle
pop
push
xor
jne
mov
popa
stc
loope
dec
push
aas
lret
push
dec
imul
in
scas
mov
jecxz
nop
mov
sbb
sbb
add
cmp
adc
mov
fmull
adc
ficoms
nop
lret
sbb
js
xor
cli
arpl
inc
or
cmp
mov
mov
add
push
adc
mov
add
test
and
add
leave
push
insl
mov
shll
and
cmp
add
jge
test
shlb
hlt
iret
sub
adc
lahf
mov
fs
xor
or
test
mull
mov
loopne
adc
insl
jg
lea
mov
imul
mov
out
pop
sub
cmp
fildll
popf
ds
or
push
mov
movsl
jb
fdivrl
fwait
dec
insb
xor
test
push
pop
xchg
ja
arpl
cmp
push
shll
xor
inc
imul
test
out
and
ret
incb
repz
lds
pusha
ret
fs
mov
mov
inc
std
jb
jl
ret
sbb
push
fmull
nop
push
xor
ret
inc
mov
mov
daa
clc
mov
adc
rclb
xor
jmp
and
sub
subb
xor
mov
into
or
data16
jl
mov
pop
mov
mov
mov
fwait
pushf
sub
or
or
inc
insb
repnz
pusha
cmp
dec
aaa
addb
fidivl
push
pop
mov
mov
loopne
push
or
sub
pop
fisubrl
mov
outsl
mov
add
push
mov
das
pusha
cld
xor
fnstsw
jo
int
clc
xchg
ds
jbe
inc
mov
mov
dec
mov
jmp
in
push
sbb
xor
lahf
mov
push
loopne
jae
or
mov
add
sub
shr
or
movsl
lret
lret
popa
lods
lods
iret
and
jnp
rcll
cmpl
lcall
sub
or
xchg
jmp
rcll
nop
add
addl
dec
aam
adc
rorl
xor
stos
sbb
cmpsb
cld
jmp
jmp
pop
push
shll
outsb
sbb
je
mov
push
loop
fldcw
dec
xchg
movsb
dec
clc
test
stos
lds
mov
test
pop
cli
loope
sbb
mov
mov
in
adc
mov
inc
mov
sub
inc
dec
dec
aam
jno
lret
dec
mov
adc
rorl
sub
or
imul
xchg
mov
out
mov
ljmp
test
imul
pusha
in
xchg
or
cwtl
aad
add
adc
mov
loop
mov
sbb
cmp
orl
loopne
or
imul
jmp
adc
cmp
lds
dec
xor
jns
mov
adc
xor
imul
cwtl
fists
test
movsl
add
dec
mov
cmp
cmpb
les
jge
scas
dec
cmp
stos
inc
fstpl
pop
dec
dec
insl
cltd
std
and
xor
scas
adc
rol
inc
xchg
mov
mov
lcall
test
leave
cmp
or
rcr
xchg
xchg
das
and
sahf
mov
lret
andl
dec
mov
inc
mov
pop
jg
and
daa
dec
faddl
mov
xchg
insb
cmp
mov
xorl
sbb
pop
dec
mov
repz
fimull
push
rcll
dec
leave
clc
repz
les
cmp
rclb
inc
stc
call
incl
mov
pop
mov
mov
lcall
cmp
out
mov
out
mov
out
mov
jge
fbld
adc
cmp
cmp
pop
pop
jge
cs
sbb
jl
inc
shlb
jecxz
or
addr16
cmp
jmp
pop
or
push
cs
negl
stc
or
push
mov
and
sbb
fwait
pop
jnp
daa
test
ds
sbb
lcall
aaa
into
cltd
scas
sbbl
mov
add
sub
fists
dec
nop
es
clc
inc
xchg
sub
and
dec
int
insb
jns
movsl
adc
ss
sub
sub
pushf
adcb
cli
lahf
jge
pop
ret
add
jmp
sub
daa
jmp
rol
adc
pop
popf
int
jmp
or
sub
xor
jne
les
int3
hlt
fidivrl
mov
inc
cmp
out
das
jecxz
xlat
sub
out
dec
clc
push
jno
insl
and
addr16
jp
jp
shll
lock
and
xlat
test
inc
stos
sub
lods
std
movl
stos
outsl
push
test
inc
inc
arpl
mov
xor
jne
and
mov
filds
or
outsl
cmp
xchg
rcr
and
mov
pop
push
popf
in
out
stc
jno
push
iret
sbb
xchg
xchg
mov
mov
shl
incb
das
push
cmp
jle
into
pop
mov
jno
mov
pop
aam
adc
add
jle
enter
aaa
add
lahf
insb
and
in
mov
movsl
shlb
lahf
cmc
jmp
mov
xor
fucom
out
ss
pop
lock
cmp
cli
mov
push
cmc
movsb
pop
dec
dec
push
rol
sub
imul
mov
das
fistpll
ljmp
int
push
jp
cmp
test
fwait
push
push
jnp
xchg
mov
dec
xchg
xchg
adc
inc
sti
das
lea
mov
dec
and
hlt
icebp
mov
lea
cmp
cli
test
or
cmp
pop
xor
sar
cmp
movsb
and
mov
adc
xlat
add
daa
jmp
mov
xchg
jbe
push
cmp
divb
adc
mov
mov
scas
movsb
imul
into
lret
dec
notl
ja
rcrb
cmc
xor
movsl
shrb
shrb
aaa
push
arpl
pop
cld
and
ds
loopne
fisubrs
mov
pop
loopne
adc
enter
outsb
sbb
pusha
outsb
or
add
repnz
jmp
int
stos
loopne
add
inc
mov
fistpll
lods
mov
push
mov
mov
mov
leave
xor
dec
loop
and
inc
jns
and
or
insb
add
or
mov
mov
lds
repz
xor
jb
push
mov
adc
lods
test
jg
inc
pop
fnstcw
jl
jno
xchg
mov
repz
filds
and
test
mov
mov
push
and
ljmp
push
cmpsb
aas
or
add
lods
test
pop
cmp
and
rclb
mov
fldenv
jb
dec
jmp
xor
rcrl
sub
xor
cmp
out
mov
or
jae
jb
sbb
orb
add
imul
in
xchg
out
jmp
add
cli
loopne
les
fst
das
test
pop
out
or
sub
lret
fimuls
popf
xor
cmpb
mov
jecxz
mov
lahf
add
pop
or
mov
mov
hlt
inc
mov
jb
mov
movsl
cmpsb
fisubrl
sub
xlat
jg
leave
mov
stc
add
lahf
adc
in
cmp
icebp
mov
push
jb
adcb
iret
and
or
push
xchg
adc
adc
push
subb
xchg
in
stos
pop
test
inc
fsubp
sbb
subl
sub
dec
xor
dec
mov
popf
push
inc
out
cltd
lea
movsb
ljmp
mov
es
ljmp
sarl
sar
inc
cmpsb
lret
mov
jne
nop
ror
cmp
call
inc
in
push
xor
jne
fwait
les
fdivp
mov
jp
xchg
add
rorl
loopne
or
and
and
outsb
add
lods
cmpsb
daa
or
insb
jmp
sub
lods
mov
pusha
test
push
xchg
and
jnp
imul
xchg
and
pop
lret
jg
mov
add
ja
inc
frstor
xor
in
ret
loope
pop
pop
xor
ljmp
in
cmpsl
jno
and
inc
lock
arpl
sbb
xchg
and
sbb
cmpsb
sub
das
scas
jmp
xor
adc
gs
ss
and
jl
xchg
arpl
sbb
roll
in
lods
mov
loopne
mov
xchg
xchg
imul
sbb
inc
clc
std
out
mov
inc
arpl
mov
popf
jnp
or
faddl
icebp
arpl
jb
mov
add
pop
enter
cli
pop
pop
xor
xor
out
pop
jg
test
push
add
xchg
test
adcb
cmc
dec
cs
mov
fisubs
int
aas
jb
xor
xchg
mov
inc
rorb
cs
xor
mov
hlt
jo
push
fs
fmull
sarl
cmc
push
cmc
push
clc
mov
adc
mov
jmp
mov
xchg
ljmp
sub
cmp
jns
fmull
pop
dec
dec
pop
pop
jl
xor
icebp
xor
mov
clc
ficoml
add
inc
push
fldenv
mov
add
add
cmp
and
push
mov
jb
dec
fsub
ficomps
mov
cwtl
in
pop
jl
psubw
sub
dec
dec
jge
sub
aam
jo
test
sahf
cs
imul
mov
ret
iret
sti
sub
fnstenv
mov
popf
dec
test
jns
sub
aaa
adc
loope
test
cmpsb
jmp
iret
outsl
insl
js
rolb
test
sub
push
pushf
pop
and
insl
pop
pushf
ja
aam
in
xchg
mov
mov
fidivl
add
adc
xor
stc
daa
shrb
idiv
stos
xor
mov
aaa
adc
lret
push
lods
dec
mov
lahf
add
sub
out
in
sub
mov
ljmp
nop
pop
mov
push
add
iret
push
negb
pop
sarl
lahf
sub
mov
xchg
jnp
inc
stc
ljmp
jo
jbe
int
hlt
lods
or
fdivrs
imul
adcl
fnsave
cmp
dec
pop
pushf
movsl
js
mov
popa
sbb
mov
out
push
pop
jmp
sti
or
mov
mov
shlb
imul
clc
jae
lea
in
fwait
pop
cltd
aaa
loopne
dec
aas
mov
add
push
jmp
push
mov
pushf
inc
cltd
roll
pop
xchg
sti
shufps
jecxz
pop
cwtl
push
das
lahf
jle
mov
rclb
sub
insl
xor
push
icebp
outsb
daa
dec
jge
mov
lods
sbbl
test
adc
rcrb
push
stos
cmp
and
dec
mov
movl
je
out
movsl
cmp
add
lds
push
pop
cli
or
ljmp
mov
ss
out
add
fisubs
sahf
loop
jge
xor
clc
sub
sub
pop
cmp
add
stos
scas
cmpsl
fstp
sbb
pop
xor
mov
test
xor
and
mov
stos
lret
pop
adcl
push
pop
les
sti
push
jbe
pop
ror
inc
add
ds
lret
pushf
stc
cmp
xorl
mov
icebp
inc
repnz
scas
mov
sbb
cmp
mov
pusha
hlt
jno
or
in
mov
add
loop
cmc
mov
outsl
shl
mov
test
xlat
mov
xor
rclb
pop
jbe
test
movsb
mov
test
jns
ficomps
xor
sbb
out
mov
fdiv
dec
shufps
dec
aam
push
or
cmp
cmp
pop
insl
rorb
mov
jo
fidivl
mov
arpl
nop
pop
ja
repz
mov
jl
gs
jae
jp
scas
lea
inc
push
std
scas
push
aaa
add
cs
push
cmp
mov
data16
and
mov
sahf
inc
into
ljmp
jl
and
push
push
inc
sbb
sub
test
test
rcrb
dec
xchg
sbb
negl
jl
roll
mov
pop
sbb
pop
add
push
andb
or
inc
dec
fdivrl
popf
sbb
clc
ljmp
mov
or
dec
jle
xchg
fidivrs
sub
pop
hlt
mov
out
adc
icebp
data16
idivb
repz
ds
mov
mov
fnsave
mov
ljmp
in
or
or
popf
push
add
pop
incl
add
testl
fs
fimull
mov
scas
cmp
lcall
mov
xchg
inc
arpl
push
push
adc
lods
mov
ss
repz
cmp
sub
jmp
cmp
mov
icebp
shl
repnz
popa
or
jbe
icebp
into
bound
adc
pop
inc
adc
dec
loopne
push
lcall
push
aam
jo
cltd
cs
or
mov
fbstp
aas
ja
mulb
sbb
adc
push
iret
dec
add
xchg
lock
test
mov
es
cmpsl
push
dec
mov
loopne
lret
stos
pop
dec
or
int
leave
and
enter
jne
xlat
sub
loop
pusha
shl
stos
pusha
cli
pop
xchg
jno
add
test
add
cmpsl
jmp
in
cli
push
or
outsb
test
pop
add
sub
or
mov
push
lret
in
mov
int3
enter
repnz
shlb
and
int
cltd
dec
xchg
sbb
sub
adc
pop
aaa
out
outsb
jne
or
xor
cmp
xor
in
mov
wrmsr
lcall
add
xor
pop
lahf
popa
jp
es
dec
mov
int3
or
rcl
addr16
or
iret
repz
jl
sbb
mov
cmp
mov
xor
push
sar
lods
dec
and
or
sbb
add
pusha
push
out
cs
lcall
add
inc
lods
mov
lods
std
xchg
lret
jge
inc
icebp
push
mov
fistps
add
in
xchg
mov
fldenv
jns
mov
xor
ljmp
jnp
xor
sbb
xor
out
push
addl
pop
xchg
and
and
pop
sub
imul
adcl
pop
movsb
cmp
in
leave
cld
adc
adc
out
das
xchg
sub
iret
adcl
sbb
fdivs
sbb
xchg
loop
ret
sbb
aas
arpl
and
negl
jge
int3
push
out
sub
icebp
lea
notb
cwtl
lcall
lea
or
cmpsl
aam
and
movsb
pop
mov
and
iret
cmc
ret
sub
mov
xchg
int
jg
ss
cli
loopne
push
mov
imul
out
inc
jnp
fsubrs
int3
in
fistpl
jnp
cli
mov
mov
div
test
rcll
les
aad
adc
cmp
dec
in
xor
cmc
fistps
sub
test
fcompl
sbb
addr16
int
xchg
and
cmp
push
cmpl
pusha
push
arpl
mov
pushf
mov
mov
or
dec
rcll
pop
cmp
push
and
mov
call
sbb
test
ds
mov
fstpt
pop
dec
aad
xor
mov
dec
popf
sub
loopne
fxam
ret
stos
out
js
test
add
sub
jnp
cmp
xchg
lea
inc
push
sbb
in
ja
leave
jle
into
arpl
test
xchg
mov
enter
mov
leave
movsl
lcall
xchg
rcll
add
push
sbb
data16
cld
in
mov
test
mov
pushf
fildl
lret
fxch
sub
out
mov
xor
xchg
add
call
xchg
inc
in
sub
cmp
in
push
mov
or
pushl
sub
pop
adc
lock
cmp
pop
mov
fldl
push
mov
add
rcll
fwait
loopne
jae
push
mov
jnp
push
xor
std
jl
mov
xor
insl
imul
movsb
pop
repnz
xchg
nop
aaa
mov
aaa
sub
pop
popa
gs
test
xchg
inc
lahf
cli
sbb
shrl
or
sub
aaa
push
sub
jno
cmp
or
fimuls
jle
ja
adc
scas
gs
mov
xchg
aam
test
aas
sub
mov
push
nop
in
and
add
insl
xor
adcl
test
adc
frstor
rcrl
mov
cmpsw
mov
push
mov
lds
iret
fs
inc
or
push
ret
aad
push
je
gs
je
mov
repnz
add
push
lods
fadds
addb
enter
sub
pop
sar
jle
jmp
adc
in
or
in
idiv
lret
daa
lret
pop
test
mov
pop
adc
xor
inc
mov
int3
repnz
jp
lock
pop
and
sub
in
insb
daa
pop
add
stos
lret
sbbb
test
scas
pop
sahf
into
pop
fcom
jge
jge
push
popa
sub
stos
dec
dec
push
ja
dec
mov
rcrl
popf
or
cmp
lock
and
addr16
cmp
cwtl
or
xchg
inc
mov
fstpt
and
jl
and
or
stos
hlt
sub
and
lahf
outsl
pop
test
lcall
insl
stos
dec
fdivrl
pop
icebp
sub
dec
adc
iret
fs
push
jle
jmp
inc
jge
add
xor
jmp
clc
mov
xor
dec
outsl
bound
or
inc
sbb
mov
loope
ljmp
js
pop
addr16
es
or
pop
mov
mov
das
lods
loop
dec
loope
fscale
mov
dec
push
fnsave
movsl
fcmovnb
aam
xchg
loop
and
xchg
push
pushf
aad
and
add
and
nop
or
scas
sbb
jmp
cmp
sub
sub
ret
push
sub
push
cmp
jg
lcall
adc
scas
sub
push
and
idivl
insl
inc
into
lods
loop
js
test
cs
bswap
dec
push
jns
cmc
jne
pslld
sbb
fnstenv
jg
mov
mov
mov
lcall
stos
push
and
fiaddl
sti
test
or
add
insl
clc
jns
fstpl
push
out
or
outsb
pop
jg
mov
mov
cwtl
outsb
daa
inc
add
jb
das
adc
cmp
sub
xor
lock
js
daa
sub
shll
imul
stos
jle
ja
mov
sahf
imulb
xchg
pushf
fwait
adc
cmpb
movb
add
or
mov
stc
pop
pop
xchg
cltd
jnp
sbbl
shll
jmp
cmp
out
mov
sbb
xchg
popa
sbb
xchg
sbb
fldt
in
popa
jb
fdivs
xchg
mov
mov
adc
and
fs
push
and
adc
xchg
inc
std
or
daa
cmp
pop
cmp
fs
nop
repz
leave
add
ja
pop
popa
adc
cs
jg
pop
and
jg
shr
xchg
roll
mov
fs
sahf
nop
jl
cmp
adc
and
xor
idivl
sbb
xchg
shrb
rorb
xlat
sti
imul
xchg
sub
and
outsl
adc
jb
sbb
jae
repnz
mov
mov
rclb
icebp
leave
rcrl
jns
push
test
mov
push
mov
insl
sub
jl
call
pop
clc
pushf
scas
mov
je
pop
jecxz
cmpsb
xor
arpl
clc
jnp
rcll
push
or
notl
push
in
mov
test
movl
fidivrs
jno
sbb
mov
add
cmp
cltd
xchg
mov
dec
mull
das
pushf
pop
pop
xor
xlat
aam
sbb
push
sbb
lret
rclb
bound
push
mov
or
lods
andb
pop
cmp
out
and
xchg
cmp
cmpsl
cmp
cld
add
cmpsb
jle
stc
test
mov
xchg
sub
shl
test
loope
jns
pop
mov
pop
mov
stos
adc
loop
ret
sub
fisubrs
ret
or
push
xor
lods
add
dec
jle
sbb
loope
ljmp
xor
sbb
cltd
mov
mov
pop
bound
mov
ljmp
mov
movsb
push
mov
sub
mov
insl
inc
addr16
imul
rolb
negl
dec
mov
arpl
mov
es
and
sahf
ret
inc
adc
pusha
clc
pop
sbb
sbb
in
ds
jge
add
and
cmpsb
movsl
les
stos
lea
dec
mov
push
or
push
flds
push
stos
push
add
and
fdivr
or
repz
or
mov
aas
imul
cli
loop
aas
in
cmp
shrb
add
outsl
jne
cld
cmp
gs
fwait
nop
push
jge
mov
xor
je
push
xor
xor
push
aas
inc
movsl
push
dec
xchg
test
push
inc
cmpsb
fisubs
sbb
lcall
cld
xlat
jns
lds
pushf
decb
and
cltd
cmp
popa
test
outsb
push
cli
lret
lret
cmpl
push
pop
and
xchg
sbb
jl
pop
jno
mov
cltd
mov
cwtl
das
rcrb
mov
test
js
lods
dec
test
mov
adc
xchg
or
jp
pushf
aas
and
mov
push
adcb
sbb
in
cmp
stc
sahf
sbb
push
jno
sub
movsb
popa
mov
cmpsl
push
xor
pop
movsb
arpl
nop
movsb
jp
dec
iret
icebp
mov
das
dec
mov
xchg
pop
or
addr16
lret
lock
mulb
adc
push
lods
movsb
dec
and
aam
es
lcall
inc
insb
in
pop
jle
ss
lock
jbe
aad
push
ret
test
dec
xor
xchg
int3
iret
xchg
add
in
add
adc
sbb
ret
add
pop
cmpsl
ja
ljmp
iret
cmp
mov
cmpsb
jmp
mov
xor
pusha
inc
jo
int
fsubrl
xor
rcrl
push
aam
jb
and
stc
cld
push
insl
leave
mov
lock
push
das
sti
outsb
movsl
and
jnp
je
jnp
sahf
pop
movsl
bound
popa
pop
stos
arpl
xchg
push
stc
je
sahf
xor
sbb
inc
pop
mov
pop
pop
add
push
dec
mov
out
jno
mov
mov
cmp
inc
pop
inc
jno
or
mov
lahf
stos
dec
pop
pop
dec
stos
lret
movsl
mov
push
jae
pop
insl
daa
xlat
bound
ss
lcall
cmp
sub
sbb
outsl
mov
inc
out
and
ret
ror
xchg
popf
pop
lods
inc
jl
pop
inc
inc
data16
xchg
je
subb
xchg
dec
gs
mov
xchg
dec
pop
push
pop
mov
adc
fstpt
shll
push
dec
pop
mov
lret
adc
daa
adc
in
jge
pusha
or
adc
outsl
addl
pushf
ret
push
add
icebp
fistps
sti
mov
inc
mov
cmp
xor
cmp
pusha
loope
or
sub
sub
sub
and
insb
aam
loop
mov
jl
test
jl
push
xchg
xchg
sub
pop
sbb
loopne
xor
mov
sbb
jne
xchg
jmp
push
push
mov
xchg
xor
sti
mov
or
enter
cmp
outsl
jns
je
jbe
pop
int3
sub
incl
cmpsb
test
adc
std
lahf
shlb
xchg
xor
add
push
in
pop
mov
aad
and
mov
shl
cmpsl
sbb
mov
adc
div
jl
mov
inc
adc
or
stos
mov
add
test
out
scas
inc
arpl
xor
xchg
lret
ret
in
xor
jle
shrb
mov
out
js
addr16
aam
dec
sbb
cltd
insl
js
arpl
xchg
nop
ljmp
inc
and
cld
push
cmc
xor
cmp
cmp
push
mov
repnz
lea
mov
je
xorl
repz
and
jecxz
pop
ss
dec
add
lret
add
js
push
push
mov
cmp
cmp
dec
push
aad
fsubr
insb
movsb
jle
inc
outsb
cmpsl
adc
adc
cmc
insl
dec
lea
daa
dec
mov
cwtl
jae
push
mov
imul
ljmp
fs
and
aam
cmp
cmp
xlat
cmp
or
das
lock
mov
jp
in
das
ljmp
adc
adc
fstp
mov
ja
in
jne
mov
and
sbb
xchg
movsl
or
mov
cli
stc
inc
ficoml
xor
dec
push
inc
mov
orb
push
pop
add
xchg
push
jmp
and
call
mov
frstor
insl
mov
add
and
daa
lcall
leave
jmp
stc
push
mov
dec
decb
cmpsl
pop
mov
loop
cmc
jb
or
out
inc
add
cs
sbb
xor
xor
stos
inc
sti
sti
das
push
aam
sbb
xor
ds
push
mov
stc
xlat
insb
xchg
adc
xor
out
cmpsl
sbb
in
mov
pop
fwait
cmpsb
loop
mov
sti
cmpsl
loop
test
and
pop
fwait
xor
sbb
lock
into
mov
fcoml
inc
push
test
mov
xchg
sub
mov
push
sub
bound
rcr
push
enter
jb
stc
inc
jle
and
lds
ss
xlat
out
cmpsb
cmp
cmc
test
movsb
mov
sbb
ja
dec
icebp
push
push
mov
mov
cltd
push
adc
and
dec
pop
sbb
cltd
jne
adc
fildll
insb
sub
push
push
test
and
cwtl
faddl
adc
adc
xchg
ljmp
mov
cmp
ja
repnz
movsb
inc
adc
aaa
jnp
scas
mov
lret
jae
adc
nop
adc
cmp
adc
jne
cltd
pop
inc
mov
xor
aam
arpl
out
jmp
cmp
mov
add
cli
or
stc
cld
and
cmpsl
and
insb
dec
int
mov
cs
xor
lds
lods
push
sub
lds
pop
movsb
int3
data16
arpl
jb
mov
dec
imul
js
pop
add
das
fistpll
dec
sti
jmp
mov
pop
popf
push
push
cmp
rcrl
popf
testb
ss
mov
or
movsl
jecxz
dec
outsb
push
jmp
sbb
mov
jl
call
xor
push
ja
dec
mov
je
mov
les
xor
test
cmc
or
cli
sbb
ljmp
fisubl
lcall
test
add
sub
mov
lods
aas
xor
sub
mov
sbb
or
rclb
aad
lds
mov
iret
fidivrs
inc
cmp
lods
inc
es
sarl
movsb
fldenv
scas
jne
ss
adcb
cmpsb
scas
dec
das
imul
jb
dec
enter
push
cmpsb
push
dec
cmp
test
mov
inc
lods
xchg
in
push
gs
sub
ficompl
adc
push
fistpll
ret
mov
dec
dec
std
push
das
arpl
rcr
call
test
and
cmpl
xchg
rcr
clc
outsl
aad
nop
inc
push
inc
adc
fnstsw
mov
ja
and
test
push
or
inc
adc
mov
mov
sbb
and
dec
decl
lods
fistpll
add
iret
add
xchg
jmp
cmp
sbb
and
test
enter
xor
sub
jecxz
test
cmp
add
pop
cmpsl
fsubs
mov
lods
in
pop
and
push
aad
xchg
mov
xchg
cli
cmp
fcmovu
lock
and
popa
cmp
hlt
int
xor
and
xor
jnp
call
ljmp
loopne
push
dec
inc
mov
lds
test
sbb
stc
sti
negb
mov
xchg
mov
cmp
and
fs
cmp
lds
mov
in
adc
inc
add
ficompl
sbb
mov
mov
imul
push
xorb
and
xchg
mov
subl
xchg
mov
inc
jge
mov
stc
lds
cmp
inc
xor
mov
stos
cmp
cmp
lock
test
lock
adc
dec
push
push
push
dec
adc
in
pop
push
push
imul
inc
test
arpl
mov
pop
pop
jne
sbb
xchg
add
ljmp
sbb
pop
hlt
scas
in
add
inc
inc
cs
jns
lds
lcall
add
imul
cli
pop
push
or
lret
decb
and
and
arpl
lahf
mov
sub
sub
push
mov
lds
loope
lret
sarb
pop
push
mov
sarl
adcl
or
pushl
jg
call
adc
ret
jle
fisubl
adc
dec
cltd
adc
or
sahf
pop
hlt
test
jge
adc
in
xor
cmp
incl
mov
pop
or
or
sub
sub
xchg
pop
xor
mov
stc
xchg
jne
in
nop
in
outsb
jle
outsb
jl
sub
popa
cwtl
ja
in
mov
add
call
out
ja
into
pop
mov
shlb
jb
lods
or
cltd
sbb
pop
sahf
adcb
std
xchg
adc
cmp
xlat
je
mov
mov
jo
out
movsl
in
popa
ficomps
and
inc
les
add
and
mov
dec
leave
lods
push
aaa
pop
stc
adc
mov
pop
jecxz
aaa
cwtl
cmp
sarb
fwait
popa
mov
mov
sub
mov
add
mov
add
cmp
aas
shrl
jb
lahf
rorb
ja
aas
dec
ja
ret
xor
inc
xor
movsb
fistps
icebp
dec
out
sbb
aas
clc
in
in
push
add
jb
pop
pusha
inc
enter
mov
repnz
mov
fcmovb
lea
pop
imul
inc
mov
xor
pop
gs
mull
ljmp
dec
arpl
or
sbb
push
push
fistpl
add
adc
xchg
sub
sub
cli
sub
inc
push
inc
ror
pop
lock
lds
lahf
push
fs
push
loop
lods
inc
test
enter
out
push
insb
jne
inc
adc
mov
cwtl
out
or
push
cwtl
add
push
push
test
pusha
loope
and
dec
repz
ljmp
pop
stos
rorl
mov
ljmp
enter
jne
cmp
or
shlb
adc
mov
push
mov
jmp
pop
jo
dec
incl
addr16
sbb
in
test
cmpb
dec
dec
leave
pop
xor
popa
into
xchg
adc
xlat
jmp
scas
outsb
and
movsb
add
xor
cmpsb
jbe
or
cmp
js
test
and
xor
add
push
and
sub
push
lcall
enter
incb
dec
negb
loopne
ja
sbb
push
push
rcrl
imul
jns
cwtl
push
sub
stos
cmpsb
ja
negl
lods
or
adc
imul
lds
je
movsl
add
mov
mov
push
or
mov
jns
adc
inc
mov
add
or
orb
mov
mov
add
cmp
lock
jne
ret
cld
sub
gs
out
imul
pop
lds
lret
loopne
push
push
data16
adc
arpl
nop
mov
jmp
mov
iret
test
pop
lods
test
lret
cmp
inc
mov
mov
je
jmp
and
js
jp
loop
unpckhps
fcoml
cwtl
imul
and
sub
movsl
and
mov
lock
xlat
stos
cmp
mov
push
jb
pop
dec
les
jle
out
repnz
arpl
mov
cwtl
add
xor
std
or
xchg
xchg
data16
lcall
push
jg
mov
and
xchg
jmp
inc
mov
addb
xor
mov
and
xor
add
xor
xor
popf
pop
fs
xchg
pop
out
adcl
push
out
ss
shlb
xchg
or
mov
push
sbb
push
push
sub
lcall
test
testb
ja
gs
jbe
cwtl
cmc
stos
inc
adc
stos
push
aad
fmuls
pop
xor
scas
pop
push
cmpsl
ss
inc
inc
jg
js
out
mov
inc
addr16
insl
xchg
mov
lds
insb
push
mov
pop
xchg
push
fsubs
jbe
add
adc
jnp
jmp
push
arpl
out
loop
mov
dec
lea
call
loop
push
daa
rcl
out
in
fs
mov
inc
test
push
dec
mov
mov
outsl
xchg
call
stos
lahf
cwtl
mov
mov
mov
lret
mov
jmp
ss
hlt
push
addr16
xchg
dec
insb
xor
sub
cmpsb
jb
insb
push
add
cmc
jl
out
hlt
stos
mov
js
pop
push
test
ret
sbb
movsb
mov
cs
jle
pop
ret
inc
addb
mov
xor
jecxz
call
notl
mov
rcrb
sbb
push
push
push
je
sbb
adcb
push
in
imul
dec
int
shlb
movsb
and
stos
xor
and
xor
jbe
push
mov
sbb
out
jbe
bound
stos
ss
mov
shrb
lcall
and
inc
pop
dec
stc
cmp
lods
shll
push
or
and
inc
ror
ss
inc
mov
add
lock
insl
test
xchg
imul
and
cmp
dec
lods
mov
out
adc
mov
negl
xchg
dec
out
lods
push
pop
flds
xor
jb
mov
and
pop
xchg
jmp
mov
std
pusha
dec
fxch
push
jp
push
es
mov
jb
and
mov
lock
cmc
xor
inc
dec
pop
jmp
mov
xlat
inc
cmp
pop
subb
sub
or
inc
movsb
aaa
pop
pop
add
mov
hlt
push
push
ss
jl
loopne
test
mov
test
mov
xchg
xor
cmpl
xorl
add
mov
push
mov
mov
loopne
inc
mov
int
mov
outsb
adc
lcall
add
call
xor
fdivl
jnp
cld
push
cmp
xchg
inc
jb
jnp
scas
adc
cmp
repz
testl
jbe
aad
mov
mov
aas
push
jl
cmp
pop
push
int3
pop
bound
nop
popl
in
and
push
jmp
das
mov
lds
push
imul
fildll
jne
or
push
mov
std
and
sub
add
xchg
xchg
fsubrs
rorb
roll
stos
fdivrs
test
jp
mov
mov
imul
dec
xorl
push
or
inc
push
xchg
ja
jb
and
jp
icebp
out
mov
out
test
cmpsb
movl
cmp
mov
xor
setl
aam
cmp
mov
push
xchg
stc
movsb
dec
adc
cmp
jno
add
fidivs
pushf
lods
pop
jmp
xchg
in
inc
les
push
pusha
cmp
adc
enter
jo
sbb
movsb
out
rcll
inc
pop
hlt
mov
mov
ja
arpl
add
xchg
loope
jp
xor
or
pop
imul
pop
add
mov
pop
mov
cmp
lock
xchg
push
push
and
dec
outsl
das
jae
cwtl
stos
mov
mov
xor
and
ss
mov
and
adc
popf
nop
xor
stos
into
pop
movsb
pop
or
int
cmp
daa
mov
data16
add
sbb
jmp
and
call
mov
stos
fsubrl
test
imul
add
mov
mov
xlat
jmp
out
stos
cld
lods
bound
mov
int3
pop
ja
mov
jmp
pop
mov
jb
mov
push
and
xor
movsl
or
insb
adc
cmp
testb
in
test
add
lock
cmp
and
mov
lods
gs
jmp
fbld
jmp
test
jb
add
pop
arpl
add
jb
cli
lret
jnp
ss
popf
pop
inc
add
lcall
inc
jo
decl
pop
add
test
push
shrb
out
push
mov
cmp
lret
add
xchg
lret
out
repnz
push
mov
push
lret
mov
bnd
out
lahf
mov
bound
sarl
fisttpl
rcr
mov
mov
rcrl
or
sub
push
push
sub
sub
nop
adc
sub
dec
adc
cmp
mov
jae
bnd
mov
std
loop
pop
bound
popf
ds
je
dec
mov
movsb
xchg
cmp
xor
and
dec
scas
es
fwait
enter
lds
aaa
push
mov
mov
sub
cli
les
sbb
add
sti
or
in
push
push
adc
stc
mov
mov
ljmp
sbb
outsb
into
push
pop
movsb
out
xor
push
pop
xchg
cwtl
sbb
xor
or
sarl
in
les
ret
pop
cs
jno
inc
cwtl
out
lret
cltd
ljmp
jg
negl
or
xor
lret
jb,pt
lock
lret
xor
mov
or
je
and
std
mov
sarb
push
emms
fistpl
mov
nop
sub
and
mov
lcall
in
aam
pop
jae
int3
loop
jo
pop
icebp
mov
mov
adc
stc
mov
sub
and
xchg
pop
xchg
add
es
cmp
sbb
xor
insl
xchg
out
xor
mov
mov
aad
les
hlt
lret
lock
sbb
mov
and
or
call
inc
lret
adc
mov
or
xchg
out
mov
cs
jg
jle
fidivrl
adc
jbe
xchg
loope
or
add
adc
imulb
sbb
fcmovu
xchg
shrl
aad
mov
jg
enter
in
dec
loope
cmp
out
jns
mov
add
cmp
fcomps
addr16
inc
mov
xor
lcall
ror
mov
dec
add
pmulhuw
data16
mov
and
or
stos
push
adc
cmc
add
sbb
daa
dec
add
enter
nop
dec
adc
test
stos
daa
into
jg
sub
outsb
lcall
fsubrl
imul
mov
addr16
hlt
pop
add
scas
mov
sub
push
fisubl
xchg
jg
shlb
movb
cwtl
jge
daa
popa
xor
in
lods
jnp
addb
rolb
adc
inc
clc
out
cld
xor
lret
lret
push
cmp
or
pop
icebp
faddl
loope
push
and
inc
sarl
fdivr
lcall
push
clc
cmp
cmp
cltd
jmp
and
aaa
sti
dec
fcmovbe
enter
push
sbb
xchg
jmp
sbb
mov
rcll
pop
int3
enter
aaa
push
inc
add
and
in
jne
or
enter
loopne
movsb
ret
shlb
test
xor
push
lods
push
mov
dec
lds
dec
fildll
lods
inc
pop
add
dec
inc
inc
xchg
xor
shlb
push
movsl
lret
xor
sub
push
call
jl
xchg
aas
lock
in
lahf
jb
and
mov
cltd
push
add
pop
pop
ljmp
shll
scas
xchg
mov
push
cmp
out
push
pop
stc
call
sub
inc
jge
lret
mulb
out
movaps
fwait
ja
out
jmp
and
lds
loopne
or
mov
adc
cmp
mov
repnz
fcoms
cli
fcompl
mov
mov
xchg
xchg
popa
and
mov
aad
jno
dec
xchg
fdivs
dec
cwtl
xchg
xchg
cmp
aad
cli
scas
std
add
scas
pop
cmp
inc
cwtl
pop
les
add
lock
xor
cmpsl
and
dec
jno
mov
cs
push
lds
cld
jno
xor
lods
dec
xor
and
xchg
inc
mov
movsl
cmp
xor
mov
sahf
inc
js
fxch
imul
xchg
add
gs
mov
inc
enter
imul
cmp
hlt
mov
mov
pop
adc
jns
in
inc
ret
movsb
dec
inc
cltd
xor
test
dec
inc
mull
push
aaa
mov
aaa
cmc
ficomps
dec
iret
pop
jnp
nop
add
movsl
fdivrs
jle
pusha
add
ljmp
mov
mov
xchg
push
mov
outsl
nop
cmp
add
cmp
pop
test
inc
or
mov
je
ret
mov
test
pop
add
movhps
push
test
rorl
push
mov
adcl
dec
and
inc
call
pop
outsl
in
out
adc
mov
int
and
adc
movsb
adc
pop
ja
add
cld
add
cmp
and
push
push
mov
adc
mov
mov
or
out
stos
loop
popf
ja
mov
hlt
xchg
into
jo
or
ss
jnp
in
lret
mov
adc
movb
pop
xor
fcompl
inc
mov
outsl
or
inc
add
mov
aam
inc
pop
fsts
nop
enter
adc
idiv
mov
cmpsl
in
mov
stos
jle
mov
dec
mov
add
clc
fldt
xchg
add
xor
xor
aas
ja
cmpsb
data16
mov
fstl
cld
das
insb
add
ljmp
push
or
test
jp
dec
xchg
fists
pusha
pop
das
dec
pop
lock
inc
stc
in
inc
icebp
imul
push
mov
mov
jae,pt
lret
cltd
movsl
adc
in
jmp
jb
mov
mov
in
in
inc
cmp
sbb
xchg
loopne
xchg
mov
sbb
scas
fsub
add
lods
ljmp
push
pop
xchg
gs
popa
in
add
pop
xchg
dec
push
test
pushf
push
or
push
sbb
add
call
popf
sub
xor
or
dec
into
loopne
das
add
aas
in
mov
std
jns
pop
xor
cmp
insb
xor
subl
mov
xchg
rorb
or
mov
hlt
jnp
and
fwait
dec
test
push
test
loop
ret
pushf
sti
jbe
push
mov
outsl
call
push
sbb
lds
pop
daa
enter
xor
inc
sub
mov
das
cli
push
mov
jmp
push
mov
push
into
rclb
mov
mov
add
test
test
cld
mov
stc
imul
aaa
subl
std
daa
sub
hlt
fmuls
xchg
pushw
dec
shl
in
shlb
xlat
icebp
add
fistps
mov
jns
inc
insl
orl
push
jmp
test
and
adc
push
jge
jecxz
cmp
cwtl
push
push
aad
insl
xlat
adc
lea
daa
inc
aad
in
mov
loopne
mov
mov
stos
fldenv
fwait
cmc
and
jbe
pop
push
cmp
notl
add
in
adc
mov
imul
out
out
test
jg
sahf
xorb
mov
hlt
fnstsw
jno
arpl
mov
add
inc
xlat
adc
mov
adc
pushf
add
mov
out
shlb
ja
or
adcl
fsts
sub
icebp
les
mov
iret
jmp
adc
ja
inc
lods
mov
sub
xor
jne
jl
jecxz
fmuls
enter
loopne
ret
or
mov
xor
sub
lds
pusha
clc
mov
or
pop
addb
pushf
test
dec
fcomps
push
loop
dec
xchg
int3
hlt
and
add
aas
cld
das
pop
dec
rol
cmp
jle
clc
jge
xchg
cmpsl
xlat
ljmp
aaa
loopne
and
dec
mov
push
fldt
in
imul
lahf
cmp
insb
aas
lock
cwtl
inc
inc
mov
jp
cmpsb
lcall
push
lea
mov
pop
jne
mov
pop
mov
xor
sub
idivb
roll
sub
orb
dec
iret
xchg
subb
decl
push
or
add
hlt
cmp
aam
fs
pop
in
loop
in
or
icebp
inc
aas
push
jbe
add
jne
mov
in
xor
sarb
or
call
cmpsl
and
xor
xchg
mov
push
adc
stos
loopne
in
test
fcompl
es
movsl
dec
pop
popf
lods
mov
dec
dec
dec
js
mov
adc
pop
insl
stos
loopne
sub
ds
clc
add
xchg
push
cmp
stos
andb
stc
mov
dec
and
adc
sub
xchg
icebp
mulb
add
jle
sbb
in
inc
neg
out
icebp
int
jl
es
out
pop
sbb
jbe
test
pop
cmpsl
js
or
clc
jne
xchg
push
jmp
adc
js
cmc
test
cmp
enter
push
jl
movsb
mov
jge
pop
or
sub
rol
js
dec
cmpsl
and
mov
popa
lea
or
mov
cmpsb
adc
adc
lock
push
insl
push
clc
pusha
jo
dec
filds
mov
pop
pop
rorb
push
int
sbb
mov
mov
fisubrl
insb
fistps
ret
ja
push
je
lock
call
das
call
add
jae
out
out
mov
xor
decl
es
cmp
lea
push
or
mov
pop
movsl
mov
adc
lea
ret
xlat
sbb
cmp
aas
cmp
sbb
test
xchg
push
out
push
mov
imull
cmp
lds
dec
jo
subb
xchg
mov
jb
push
jg
inc
sar
xor
add
xor
shl
lods
mov
movsl
lea
adc
and
sbb
jg
inc
xor
mov
call
inc
pop
add
sub
add
mov
xchg
xor
rcll
dec
dec
fcompl
stos
test
fs
shll
hlt
push
aaa
or
or
sti
jecxz
mov
adc
jecxz
add
daa
loope
sub
mov
mov
dec
or
es
mov
test
push
ja
scas
add
mov
sbb
shll
stos
mov
push
sbb
adc
sbb
lcall
out
out
mov
and
mov
and
cld
ja
out
xor
mov
out
jns
imul
and
notl
sub
sub
inc
orb
xchg
rolb
push
sarb
pop
aad
test
push
loopne
sti
sti
add
jl
push
test
dec
in
js
push
inc
aad
push
in
fadd
cs
pop
icebp
push
xchg
jo
out
cltd
jle
imul
test
push
xor
add
fimuls
test
mov
xchg
in
pusha
pop
sbb
jp
les
mov
cmpl
add
or
pop
sub
add
push
jmp
mov
jmp
pop
xor
xor
push
xor
test
mov
jb
repz
sti
push
jecxz
lahf
aas
stc
pop
out
pop
fiadds
jns
pop
insl
jns
push
xchg
cwtl
and
jno
fldenv
sub
lcall
mov
movsb
fsubs
and
adc
push
sar
loop
mov
add
add
mov
leave
rorb
repz
dec
lods
mov
xor
out
or
in
dec
or
mov
cmp
jne
fidivl
cltd
or
js
cmpsb
xor
gs
and
fisttpl
fimull
xor
mov
add
inc
int
dec
add
scas
pop
arpl
inc
fldenv
push
fdivrl
adc
mov
mov
cmpsb
mov
jge
int
imul
push
lods
popa
out
inc
out
sbb
in
add
sbb
push
push
test
sbb
sub
jg
mov
mov
rol
popl
vmovups
fnclex
hlt
in
sbb
js
xchg
aam
mov
mov
mov
fildll
jecxz
pop
inc
xor
lea
adc
shl
dec
mov
sub
int3
jge
scas
std
es
ss
lret
out
outsb
testb
aaa
xor
lret
loope
popa
jecxz
scas
andb
in
inc
jo
mov
test
filds
inc
mov
ret
push
stc
cmpsl
adc
sbb
xchg
hlt
ret
bound
out
lds
mov
xchg
mov
cltd
fldt
cmpb
scas
pop
push
sbb
inc
call
lock
out
push
adc
testb
add
sub
clc
or
pop
cwtl
je
mov
mov
mov
testb
push
fbstp
dec
movsl
push
cld
outsb
scas
jge
cmp
xchg
adc
mov
xor
mov
sub
cmp
inc
add
loop
hlt
pop
shll
pop
fwait
shl
mov
stc
fs
pushf
pop
and
les
or
sub
fists
mov
sub
adc
scas
jg
enter
push
je
xor
xlat
pop
xor
aas
cmpsb
sbb
in
shlb
iret
aam
fnstcw
jmp
push
aaa
xor
push
sub
sbb
and
and
mov
inc
mov
cmp
xor
aam
mov
adc
ficomps
mov
adcb
mov
pop
sub
inc
sub
jae
mov
lds
shrl
and
int
cld
xchg
inc
mov
jbe
sbb
fwait
jnp
xor
ja
pop
rcll
sub
and
jl
push
test
mov
mov
add
filds
xor
push
sarb
es
js
mov
shrb
testl
add
hlt
pop
mov
outsb
cmpsb
jb
pop
adc
xchg
jmp
jb
inc
js
jmp
pop
xchg
mov
sbb
stos
push
pusha
cmpsb
cld
inc
and
mov
cmp
adc
sub
push
push
es
mov
mov
loop
dec
test
mov
jne
pop
mov
loop
ja
decl
push
add
push
incl
incl
add
add
add
and
add
add
inc
in
add
cli
jecxz
xchg
dec
out
sbb
mov
outsl
push
push
mov
testl
mov
pop
and
push
sub
sub
sub
push
lods
push
pop
adc
aam
fwait
mov
movsl
repz
hlt
jp
and
jmp
mov
fsubrs
out
push
sbbb
mov
jge
mov
add
pop
shr
pop
add
xchg
push
adc
cwtl
lea
sub
stos
jne,pt
lret
pop
sbb
mov
push
push
jnp
jo
fdivrl
mov
inc
lret
dec
mov
inc
pop
mov
xchg
into
xor
ret
rolb
cli
add
or
pushf
sbb
or
push
jbe
xor
jae
pushf
or
mov
loop
push
pop
jbe
jnp
push
pop
in
push
lret
ror
cmpxchg
clc
out
sbb
and
lods
das
mov
push
mov
mov
mov
dec
or
stos
pop
mov
mov
pop
push
in
push
dec
jo
adc
nop
lods
stc
cmp
ret
jl
or
mov
sub
add
in
lret
loop
cmp
mov
mov
xchg
mov
jge
out
add
pop
inc
add
addl
add
int
sbb
aaa
cmc
and
xchg
and
xorl
mov
xor
data16
or
out
inc
popa
cmp
xchg
cmp
pop
scas
and
daa
mov
int3
lret
dec
popf
jb
cmp
jb
lcall
mov
daa
pusha
pop
aam
adc
adc
mov
push
sub
addr16
push
xchg
jo
lea
cmp
ss
add
xchg
jp,pt
sbb
aad
aad
xchg
mov
cmp
in
cmpsb
cmc
xchg
nop
lods
and
xchg
in
mov
in
dec
lcall
cltd
or
dec
dec
fwait
dec
cmp
lods
pop
dec
packsswb
jnp
ja
push
lret
add
mov
mov
jle
jnp
dec
sbb
cmp
jp
xchg
push
dec
adc
cmp
ja
ficoms
cmpsl
btcl
pop
dec
cmp
outsl
fdivrl
mov
jnp
cmp
cmp
push
lret
mov
pop
aaa
out
sbb
mov
or
cmc
leave
clc
sbb
repnz
js
dec
or
cli
popl
scas
fldcw
mov
lea
outsl
xchg
sahf
sti
xor
in
decl
lock
fildl
cld
call
dec
dec
lods
aam
inc
adcl
sub
add
loop
and
mov
and
cmp
imul
lods
inc
ja
pushf
dec
add
mov
outsb
jecxz
and
sbb
xchg
sbb
fcoms
addl
aad
mov
cwtl
ror
or
push
pusha
xor
stc
or
dec
aam
sub
cmp
mov
test
lods
arpl
add
shl
into
push
pop
add
loop
js
aaa
xchg
jp
fwait
dec
xchg
xchg
mov
pusha
dec
test
add
xchg
pop
jmp
mov
test
pop
stos
xor
in
mov
fcmovu
scas
jae
iret
lcall
aam
pusha
pop
or
aad
xchg
mov
pop
push
or
jnp
fisubl
mov
std
push
push
mov
jno
inc
add
xor
daa
mov
or
xchg
int3
ror
ja
jge
pop
push
sbb
test
push
popf
push
shl
mov
jno
arpl
iret
mov
xchg
hlt
and
rcrl
add
je
fildll
pop
add
ror
cmp
jbe
out
test
mov
int3
cmc
adc
xchg
mov
jle
jl
xchg
push
adc
loope
and
in
mov
mov
popa
sub
int3
xchg
test
cmp
jmp
pop
lock
inc
gs
mov
inc
jnp
nop
pop
mov
rolb
dec
sbb
add
lcall
mov
add
popf
jecxz
ficoms
pushf
insb
lds
mov
add
mov
sbbl
das
arpl
popa
fildl
int3
js
popa
mov
dec
ret
or
mov
jl
cmc
je
jg
cltd
push
lcall
xchg
jecxz
insb
sti
insb
pop
xor
mov
fiaddl
mov
push
fiaddl
fdivs
push
cmp
lds
nop
fcom
call
jbe
push
je
mov
dec
outsl
xlat
inc
je
xchg
push
mov
in
inc
xchg
addl
les
repz
jbe
insb
mov
or
xchg
mov
adc
popf
fcmove
call
test
and
add
adc
push
fstpl
cmp
scas
xor
loopne
jl,pt
xchg
test
adc
xlat
dec
or
nop
ret
dec
icebp
imul
mov
rorb
mov
jnp
out
ret
mov
dec
test
push
mov
leave
cmpsl
dec
aam
fistpll
call
jmp
push
lret
xchg
add
or
bound
pop
scas
imul
aad
insl
test
and
sahf
pop
push
cmpsl
and
mov
rcll
and
cmp
shlb
frstor
jmp
out
daa
icebp
push
pop
js
popf
jmp
movl
xchg
or
jge
ja
out
das
inc
scas
dec
add
popf
rcll
pop
insl
xchg
and
out
das
pop
js
push
daa
adc
dec
or
sbb
mov
das
adc
push
shrb
add
sbb
xchg
ret
icebp
enter
jl
andl
sahf
stos
dec
call
cltd
psrlq
ljmp
cmp
mov
push
and
dec
push
sbb
clc
pop
outsb
loopne
push
cltd
gs
mov
out
inc
cmp
mov
sbb
loop
dec
mov
xchg
jecxz
stos
sub
adc
stos
pop
mov
push
ja
and
push
inc
cmp
inc
mov
inc
unpckhps
data16
bound
testb
cmpb
outsl
or
sarb
fs
sbb
movsb
lds
push
mov
lea
pusha
jl
add
aaa
lods
aaa
xchg
adc
mov
mov
shll
sbb
sbb
xchg
lahf
lock
mov
fs
mov
dec
mov
push
sbb
xlat
jne
ss
cmp
loope
adc
shrl
mov
mov
pop
in
sbb
push
rcl
and
xchg
adc
dec
adc
xchg
imul
push
fsubrs
test
and
inc
addr16
in
add
mov
lods
and
push
in
jg
add
push
jb
pusha
sarl
cmpsb
test
and
push
testl
pop
and
jno
pop
fwait
out
jno
and
out
loop
pop
scas
vpcmpgtd
add
mov
imul
movsl
scas
or
rclb
add
bound
cli
xor
cmpsb
int
xchg
shlb
aam
xchg
inc
xchg
dec
test
sub
and
icebp
nop
rolb
sub
cmp
sub
jnp
or
int
sbb
cmpsb
xchg
push
idivl
mov
fimull
mov
pop
xor
call
sbb
mov
xchg
insl
bound
or
insb
rolb
dec
mov
xchg
in
or
out
ja
int3
mov
lret
xor
jns
xchg
insl
cld
jmp
or
and
mov
mov
mov
xor
jle
add
enter
repz
xorb
inc
xchg
cmp
sub
sahf
leave
mov
movsl
repnz
mov
dec
es
fdivl
lret
clc
push
pusha
icebp
push
ljmp
add
mov
data16
mov
lcall
jge
add
dec
dec
popf
nop
fiaddl
arpl
rcll
xchg
lods
adc
fwait
out
repnz
popa
mull
add
out
pop
jnp
mov
outsl
mov
push
mov
fldl
pop
sbb
sub
mov
sbb
stos
mov
bound
push
xchg
in
inc
cmp
xchg
loope
mov
pop
cwtl
jns
in
mov
mov
repnz
aas
lds
insl
stos
ljmp
pop
mov
pop
inc
aam
pusha
dec
xchg
push
in
pop
pusha
adc
mov
pop
addr16
daa
sahf
mov
mov
cmp
jbe
jle
cmp
jp
unpckhps
mov
out
shrl
in
cmc
cmpsl
jl
das
shlb
scas
adc
cld
fidivl
cmp
inc
dec
push
mov
adc
mov
jbe
mov
cmp
sub
push
or
cmpsb
in
sbb
xor
cmpsb
leave
stos
std
aas
rorl
ret
sub
pop
mov
push
mov
mov
lock
or
lods
xchg
fcom
repnz
adc
inc
push
orl
mov
and
or
xor
jg
mov
inc
inc
ljmp
imulb
mov
movsl
sbb
punpckhwd
shrb
out
inc
mov
daa
decl
decl
xor
jne
mov
in
add
fdivp
push
and
lret
repnz
cmc
pop
xlat
xchg
popf
fistpll
imul
add
add
out
rorb
inc
jl
cmp
xor
jno
cmc
sti
mov
ror
sbb
nop
insb
inc
push
cmp
sbb
add
orl
lods
inc
jns
sub
fs
popf
in
insb
fidivrs
test
push
sahf
in
jg
les
dec
inc
add
push
push
out
sub
inc
repz
or
sbb
movsb
mov
add
repz
sub
dec
or
xchg
xchg
inc
mov
nop
sub
push
or
inc
fidivrl
fwait
xor
daa
pop
ret
mov
cmp
cltd
sahf
lea
mov
scas
insl
lret
dec
rcrb
std
cli
int3
mov
lea
inc
add
and
repnz
add
fildl
aas
adc
loopne
imul
add
cmpsl
call
aaa
shlb
shlb
mov
inc
loop
gs
push
add
or
jne
movsl
lcall
out
and
mov
or
cmc
sbb
addr16
xchg
or
daa
js
jnp
xchg
mov
push
push
pop
cmp
fsub
lsl
stos
add
in
dec
adc
imul
jno
and
ds
repnz
cmp
test
push
bound
lods
jno
add
imul
sub
pop
sub
pop
jg
loop
adc
push
into
jecxz
ret
data16
xchg
rcll
xor
aaa
out
pop
add
mov
inc
sbb
dec
xor
negb
jl
or
leave
and
jecxz
mov
or
sub
push
inc
ja
push
popf
pop
stos
dec
inc
popa
data16
push
sahf
pop
bound
gs
xor
and
lcall
push
mov
mov
sub
outsl
adc
sub
mov
and
rolb
icebp
mov
mov
mov
or
pop
sbb
enter
jbe
mov
jl
out
push
pop
fsubs
jmp
scas
mov
loopne
pop
sub
push
inc
jo
enter
fmull
test
dec
push
ljmp
iret
shlb
push
dec
cli
iret
adc
scas
push
add
jge
call
fwait
sbb
dec
push
jp
inc
dec
addr16
fwait
aas
sbb
popa
jecxz
mov
jg
add
xchg
lods
inc
daa
lods
jg
xor
sahf
int
push
mov
cld
lods
push
adc
gs
xchg
fcomi
jge
push
std
mov
scas
and
cmp
scas
pop
ret
push
jns
jg
ficompl
mov
xorb
mov
setge
mov
negb
test
mov
fwait
ret
popa
jb
cmp
or
xchg
rcrl
and
in
nop
pop
faddp
cmp
shll
xchg
push
into
or
pop
cmp
bound
adc
cmpsl
pop
push
mov
jge
add
sub
sti
testl
mov
jb
jl
hlt
and
adc
pop
sbb
adc
mov
cld
adc
jl
imul
leave
jl
adc
loopne
test
jne
aam
jp
lds
sti
mov
mov
and
divl
iret
push
ds
jecxz
mov
mov
icebp
sub
outsl
adc
std
and
nop
nop
paddw
xor
into
cmp
fdivs
mov
or
lock
arpl
cmp
scas
outsb
sbb
outsb
fwait
adc
fsts
sub
in
movsb
jge
pushf
movsl
add
shll
add
dec
outsl
lds
mov
ss
inc
xchg
popf
out
hlt
cmp
loopne
and
sub
or
test
mov
sbb
dec
xor
sub
jp
mov
add
cwtl
out
scas
adc
sub
popa
mov
gs
movsb
test
aam
or
ret
in
sbb
push
cmpsl
mov
adc
outsl
push
jge
data16
or
pop
in
and
or
jb
jecxz
mov
into
mov
push
dec
cld
push
push
add
popa
cltd
leave
sbb
scas
cmp
add
insl
mov
das
mov
imul
cmp
xchg
mov
or
push
push
addr16
pop
jmp
data16
rol
stos
jp
sub
push
sarb
add
sub
cmp
addr16
adc
gs
push
and
popf
adc
pop
dec
jae
call
fs
pop
sub
cmc
add
adc
popf
movsb
dec
in
leave
pusha
fwait
cmc
sbb
dec
adc
addr16
xor
lret
insl
popa
in
nop
iret
divb
in
fs
mov
test
mov
sbb
popf
sub
cmp
stc
cmpb
jmp
shr
int3
xor
inc
in
push
stos
out
sbb
rolw
xor
and
add
jne,pt
pop
shrb
sti
insl
push
cld
adc
cli
inc
jae
push
inc
sub
push
sbb
das
adc
jbe
sub
or
aas
or
add
xchg
loopne
sbb
mov
divl
rcr
int3
mov
cmpsb
iret
mov
lret
into
sbb
xchg
das
xor
bound
sbbl
xor
jb
xchg
mov
repz
or
sbb
fldt
shld
dec
popf
adc
jge
rclb
aaa
dec
out
mov
and
sahf
fdivl
and
push
dec
call
inc
jmp
mov
bound
push
decl
adc
cmp
mov
nop
mov
push
sbb
mov
fstl
cmp
cmp
xlat
pushf
mov
dec
push
adc
clc
out
jecxz
cmp
add
lret
shl
orl
mov
es
pop
jle
jge
mov
scas
pushf
subb
negl
stos
add
push
je
int3
fiadds
jle
bound
in
dec
popa
mov
xchg
adcl
fucomi
callw
pop
mov
dec
std
xchg
inc
add
hlt
push
inc
jnp
pop
mov
sbb
xor
push
bound
ss
adc
sbb
rcrb
pop
jecxz
pop
push
cld
add
jmp
cmp
adc
addl
or
push
mov
shl
cmp
ficoml
fcomps
cmpsb
xchg
icebp
stc
cs
or
sbb
mov
stos
sub
lret
pop
notl
mov
testl
mov
lahf
mov
jge
mov
adc
push
dec
fucomip
in
fldpi
or
stos
js
xor
ja
cltd
clc
push
pushf
arpl
dec
cli
xor
lods
repnz
iret
popf
lret
ja
mov
adc
ja
mov
pop
adc
sub
xchg
lods
aas
shrl
loope
jns
lods
loop
xor
lahf
in
cmp
imul
xor
jecxz
outsl
aas
dec
sbb
neg
fcompl
push
add
sti
push
mov
hlt
mov
or
fwait
adc
jg
lret
in
inc
jae
push
movsl
aad
dec
rcrl
jle
roll
fisubrs
shlb
divb
cmpsl
mov
mov
jb
fldt
in
mov
fldl
in
xchg
and
sub
arpl
mov
enter
fnstsw
xchg
push
sub
lret
inc
dec
out
xchg
out
fsubs
roll
shrb
sub
imul
shll
into
add
rcr
inc
fwait
cmpsb
sub
push
mov
cvtps2pd
aam
pop
mov
pop
addr16
lods
flds
jbe
adc
cmp
or
mov
inc
cmovne
sti
aaa
jle
mov
dec
push
rolb
mov
dec
dec
aaa
xor
push
inc
jo
mov
cmp
inc
cmp
xchg
and
popl
add
cmp
jmp
packuswb
mov
mov
pop
push
cmp
outsb
or
mov
in
xchg
and
in
inc
shl
cli
js
ds
and
sub
cmp
lret
fstpl
mov
add
mov
in
pop
fisttpll
inc
xorl
insl
xchg
in
pop
fs
dec
shll
scas
fsubl
jle
push
cmp
cltd
jno
pusha
scas
jnp
jecxz
push
scas
or
mov
ljmp
xchg
mov
sub
lds
xor
add
les
in
mov
pop
mov
gs
stos
mov
xchg
push
fadd
jo
fs
mov
lods
shll
jle
and
inc
sbb
aas
imul
inc
iret
or
repnz
add
push
je
ljmp
add
scas
mov
jns
pushf
mov
or
movsb
sbb
aaa
aaa
dec
sbb
insl
xchg
xor
add
addb
xor
inc
cwtl
pushf
ds
lods
test
jo
mov
mov
add
adc
bound
lret
enter
add
xor
test
cmp
outsl
sbb
or
outsl
fists
push
scas
insb
fdivl
mov
andb
subb
add
mov
jne
adc
and
ljmp
mov
adc
sti
pushf
mov
testl
lret
and
fdivs
sub
mov
xchg
aad
int
ja
insl
sub
xor
add
sbb
nop
lods
test
imul
pop
js
fwait
subb
movsb
mov
fildll
mov
push
pop
fwait
clc
or
cwtl
into
cwtl
xlat
mov
in
sub
jle
fmuls
fsubrl
xchg
outsl
pop
sti
cmp
fsubrl
jmp
addb
lcall
cwtl
push
jmp
dec
jno
sbb
push
sub
lods
ja
out
lcall
add
adc
mov
lods
pusha
insl
addr16
addr16
lahf
cmp
sbb
rcl
push
rclb
jnp
cli
adc
stos
rep
push
cmc
pop
ret
cmpsl
movsl
dec
aas
push
cltd
out
push
inc
out
stos
sarb
in
xchg
mov
and
bound
dec
aas
adc
jl
call
outsl
sub
scas
adc
fcompl
dec
cmp
jl
out
xor
dec
sbb
cmp
pop
fists
cltd
scas
icebp
adc
sbb
stos
cs
push
mov
aaa
jl
mov
mov
and
mov
push
xchg
mov
outsb
push
fnsave
into
inc
mov
dec
pop
cmp
fsubr
sbb
adc
jae
jno
call
lahf
jno
lock
push
inc
or
mov
sbb
inc
leave
fnstcw
mov
xor
ja
and
sbbb
xchg
std
pop
rcrb
xor
jne
loope
add
jle
scas
push
sbb
hlt
minps
pushf
add
cmp
clc
fildl
adc
bound
pop
leave
or
aad
jl
movl
imul
mov
push
and
sub
test
xor
nop
sub
cmp
lret
inc
cmpsb
rolb
lods
cmpsl
jno
ret
push
push
mov
adc
pop
jl
lock
jb
push
and
fidivl
push
ljmp
cmc
enter
jle
addl
mov
or
xor
test
sbb
inc
pop
scas
fstl
xchg
and
inc
stos
test
fnsave
iret
xlat
mov
shl
sarl
cmp
out
scas
out
in
and
inc
xchg
imul
dec
jge
insl
xchg
mov
int3
adc
rcll
mov
xchg
push
fdivl
imul
std
mov
mov
addr16
stos
jne
rclb
mov
rorb
movsl
xor
xor
dec
test
cmpsl
mov
xor
hlt
lret
add
mov
rcrl
mov
mov
leave
and
inc
mov
mov
sbbl
aad
aad
jno
int3
ds
aaa
pop
sti
mov
mov
iret
xor
into
popa
imul
mov
cltd
aas
fwait
adc
fs
adc
lock
shrb
jo
mov
pop
jb
orl
sahf
mov
push
ret
es
push
mov
add
jbe
jbe
mov
aaa
lret
leave
ja
push
out
movsl
icebp
out
movsl
in
mov
or
mov
sbb
mov
ljmp
stos
lds
jae
das
jp
xchg
repz
mov
in
popa
out
addr16
lods
rclb
mov
lahf
sub
inc
pop
ljmp
stos
xor
insb
data16
xchg
icebp
push
push
push
mov
test
mov
or
sbb
roll
dec
pop
nop
fistpl
hlt
imul
stc
sti
mov
sbb
xchg
repnz
das
repz
cmp
jle
imul
mov
popf
inc
inc
add
lret
ret
insb
inc
sti
cli
cmp
test
adc
pop
and
adc
mov
pop
mov
ljmp
daa
int3
or
in
std
sbb
sub
mov
pop
and
movsb
push
sbb
test
mov
pop
and
sbb
into
gs
ffree
dec
add
mov
jmp
enter
sub
push
outsl
cmp
cmp
cmp
sbb
jle
mov
adc
sbb
jbe
cmp
dec
addr16
dec
imul
cli
bound
ret
or
jp
dec
mov
hlt
add
xchg
cmpb
fnsave
xchg
mov
xchg
ud2
cwtl
mov
sarb
repz
inc
ficompl
ds
mov
push
sbb
cwtl
shl
lcall
out
and
js
push
xchg
sbb
xchg
xchg
inc
enter
ljmp
jae
stos
mov
push
mov
inc
fstpl
push
pushf
push
mov
mov
pop
adc
gs
mov
lods
jge
lcall
mov
pop
aas
inc
sbb
or
jno
add
and
in
leave
inc
push
rcrl
mov
inc
daa
int
outsl
mov
dec
jae
scas
push
aam
ficoml
lret
mov
or
jae
aad
int3
std
pop
cmc
stc
inc
mov
mov
test
adc
inc
fstp
lods
out
mov
mov
in
pop
cmpb
mov
loope
div
sbb
mov
xchg
mov
inc
mov
or
das
inc
in
mov
ret
mov
mov
ret
das
out
iret
jne
xor
cmc
sbb
dec
in
inc
add
cltd
dec
mov
in
adc
orl
sub
pop
ret
lret
sbb
enter
and
or
pop
xor
inc
shr
sti
jge
and
pop
xchg
push
add
mov
jo
sbb
mov
fidivrl
daa
pusha
sub
inc
int3
xchg
shlb
push
cmp
mov
cs
and
fisttpll
loope
sbb
sub
sbb
in
inc
out
in
inc
inc
mov
mov
fcmovu
inc
jg
aas
int
sub
xchg
pop
lret
push
mov
sbb
mov
add
aas
int
std
enter
mov
jmp
and
int
sbb
and
sar
add
in
or
cmp
add
and
mov
aad
cmp
jl
mov
xor
jno
fsubrs
repz
inc
loope
adc
insb
outsb
dec
or
cmc
test
ret
cwtl
sarb
xlat
ljmp
pop
dec
imul
cmp
push
cmpsl
pop
xchg
call
imul
shlb
mov
or
inc
sbb
lods
ret
bound
dec
dec
je
insl
movups
mov
jb
fmuls
or
hlt
ret
cmp
movsl
add
jp
loop
push
mov
add
hlt
es
push
gs
in
xchg
ficomps
aaa
dec
divl
cltd
xchg
inc
cmp
mov
jle
hlt
or
dec
mov
sbb
in
popf
mulb
push
mov
mov
int
ds
dec
push
xlat
jecxz
sbb
loope
push
cmpsb
jmp
push
and
adc
xchg
and
inc
inc
pop
mov
xor
push
dec
mov
insb
or
jb
adc
subb
xlat
jecxz
jnp
inc
psubb
xor
jne
add
scas
outsb
int
jmp
stc
mov
mov
sub
test
daa
lods
push
push
dec
enter
sub
mov
sahf
mov
push
dec
adc
lock
mov
ja
xchg
push
cltd
sub
xchg
add
lock
hlt
insb
das
jg
dec
adc
movsb
ret
jmp
pop
outsl
into
movaps
jno
lock
flds
clc
out
pop
lret
adc
inc
aad
lods
add
jge
gs
sub
sub
push
pop
cwtl
nop
lahf
xlat
mov
les
jle
enter
cmpsl
lea
lods
adc
push
icebp
insl
std
cmc
out
sahf
jnp
add
pop
mov
cmc
shll
pop
xor
scas
pop
ljmp
push
mov
fildl
add
ja
mov
out
sbb
repz
outsl
add
xor
jnp
jp
jg
add
mov
inc
dec
or
pushf
mov
notl
jns
cmp
inc
aas
ds
dec
test
or
and
cmp
push
push
psrad
test
cltd
jle
and
jae
data16
das
cltd
cmp
pop
inc
cld
sbb
rorb
mov
test
in
cli
push
sbbl
dec
inc
cmp
adc
pop
int
shlb
clc
lret
pop
add
push
inc
push
xchg
int
aaa
in
mov
mov
mov
sub
mov
test
mov
jge
outsb
jbe
stc
sarl
faddl
pop
xchg
in
clc
sub
cmpsl
pop
xor
loope
xchg
jecxz
jecxz
mov
inc
sbb
rcll
sbb
rorl
repz
push
out
mov
dec
enter
cs
pop
inc
rclb
cmp
add
add
je
adc
pop
in
inc
and
popa
iret
jnp
test
test
xchg
mov
loopne
sti
jnp
xchg
pop
cmpsb
popf
cmc
iret
cmp
and
add
or
dec
push
add
dec
mov
pop
xchg
loop
or
jns
push
and
and
inc
and
les
shr
lahf
jp
js
sti
iret
ret
mov
jle
adc
sbb
and
jle
dec
mov
inc
adc
jbe
cld
fidivl
dec
ljmp
lfs
jne
loopew
xor
loope
pop
push
cli
add
jp
das
xor
sub
push
jmp
lds
mov
add
outsb
out
cmc
or
add
int
fidivrs
lret
lods
fs
xor
popf
fwait
nop
pop
shlb
lods
and
pushf
mov
adc
xor
mov
or
jnp
or
ret
je
loop
jecxz
aaa
sub
mov
sbb
and
fsubrs
dec
movsl
or
xor
aas
push
add
cli
sbb
mov
scas
xlat
nop
sarb
inc
pop
dec
add
pop
outsl
pop
sub
insb
iret
push
inc
repz
push
lods
ret
push
xchg
cmp
or
sbb
in
rcl
pop
add
test
push
addb
push
inc
ja
sbb
hlt
iret
jmp
jmp
sub
cmp
jge
lret
les
add
pop
fst
or
push
fnstsw
dec
xchg
mov
push
data16
ljmp
cli
cmp
dec
sbb
or
lds
cmp
shr
dec
adc
das
push
or
sub
sbb
sbb
cmp
inc
in
dec
sysexit
jecxz
add
arpl
les
mov
adc
popf
mov
imul
and
ds
fidivrs
jbe
jbe
adc
pop
adc
jmp
fsubrs
test
adc
repz
repnz
xchg
dec
ss
jle
add
pop
add
xchg
test
bound
add
je
pop
adc
mov
cmpsb
andl
xor
mov
xchg
dec
jg
xor
scas
xor
fwait
hlt
push
mov
dec
sub
cmp
mov
in
adc
das
negb
sbb
jle
lahf
inc
test
xchg
sti
subl
insb
add
xorl
fldt
jg
cltd
clc
pop
pop
mov
ret
dec
testb
sbb
sub
push
shr
and
lret
aaa
jecxz
out
movups
je
mov
imul
push
insl
sub
jmp
dec
dec
inc
mov
mov
ret
pop
push
pop
xchg
test
push
jmp
and
fsubl
or
js
and
pop
adc
lcall
dec
jnp
sbb
idivw
push
call
mov
sbb
divl
int
mov
lret
cmc
out
fcmovu
aam
xor
adc
xchg
mov
mov
test
insb
inc
das
and
cmp
mov
leave
dec
sbb
mov
jns
pop
lcall
adc
call
ljmp
jg
adc
push
jge
pushl
sbb
bound
mov
shr
pop
xor
pop
or
pop
int3
xor
je
aaa
cs
push
push
fisubl
mov
jl
ss
jns
mov
jnp
xchg
js
popa
insb
cli
ljmp
jmp
cld
lods
pop
pop
pushf
cli
fdivl
je
inc
enter
mov
jge
jns
sbb
aaa
add
pop
dec
adc
adc
fcoms
cmpsb
imul
sub
jno
pop
in
xchg
jb
dec
sbb
jge
out
aad
mov
arpl
or
mov
sbb
add
aas
stc
mov
lahf
sahf
jo
jb
mov
in
scas
jg
mov
mov
or
cmp
mov
sub
jne
push
shll
mov
mov
jno
xor
mov
nop
sub
pop
arpl
cmp
sbb
lcall
cmpsl
xchg
bound
loope
and
iret
adc
cli
mov
subb
dec
repnz
sub
xchg
mov
mov
enter
xchg
movsl
das
movsb
loopne
arpl
push
pop
clc
or
jg
jl
mov
fs
xchg
sub
or
in
dec
or
test
jle
dec
push
aad
inc
mov
mov
sub
test
mov
hlt
popa
jb
daa
cmpsl
xchg
repz
mov
adc
iret
push
jnp
sub
lahf
sbb
mov
jne
mov
or
mov
testb
mov
mov
insl
sub
ja
test
jl
mov
add
arpl
add
clc
mov
dec
lcall
mov
or
out
dec
popa
adc
xchg
xlat
cmpb
rol
mov
stos
in
xor
add
or
mov
mov
pop
dec
pop
outsb
push
pop
and
sbb
bound
cmc
lock
mov
inc
stos
sub
push
loope
test
repnz
fldenv
cltd
les
subl
popf
mov
stos
sub
divb
repz
xor
cmc
sub
mov
gs
pop
clc
loop
jmp
push
sub
ret
nop
xor
or
push
pop
and
subb
ficoms
mov
jecxz
hlt
fnstcw
shrb
in
mov
andb
data16
sti
rclb
xchg
or
xchg
scas
in
int3
jg
adc
popa
jno
push
mov
xlat
push
push
jp
xchg
outsb
sub
in
xchg
scas
add
stc
sti
das
mov
inc
movsl
gs
stos
push
cli
cwtl
xchg
cmpsl
mov
pop
cmc
lret
xchg
dec
inc
in
pop
sbb
lret
scas
jne
xor
xchg
das
mov
int
in
pop
inc
sbb
stos
fs
mov
dec
test
mov
inc
ljmp
sahf
adc
push
adc
sub
pop
aas
add
lds
xchg
aam
mov
testb
add
pop
dec
orl
sub
pop
into
sbb
add
test
mov
sti
sub
inc
push
loopne
jle
js
pushf
orb
leave
pusha
xor
fisttpl
and
out
adc
inc
mulb
jmp
pusha
adc
inc
mov
cs
lret
fwait
mov
outsl
mov
fiadds
in
aam
cmp
dec
xor
or
fwait
outsb
or
in
lea
sub
jbe
sub
mov
scas
call
jmp
shlb
js
pusha
ja
xor
stc
add
jno
mov
adc
shrb
imul
imul
cmp
add
sub
lcall
dec
iret
mov
or
les
cwtl
push
jg
lret
jno
cmp
xchg
jnp
sarb
adc
pop
ret
lret
cmpsl
imul
sbb
daa
mov
dec
cltd
imul
xchg
mov
sub
notl
jle
dec
fdivl
pop
jae
in
pop
push
int
hlt
dec
jo
push
decl
int3
rcrl
sti
clc
loope
sbbb
rclb
loopne
jmp
imul
sti
popa
fisubl
rolb
and
xchg
int
inc
pop
pop
movsb
ss
mov
sahf
push
jg
xchg
push
arpl
ss
jb
cmp
pop
and
sub
push
jnp
ss
inc
xor
xlat
bound
daa
cltd
iret
xor
rcrb
out
jecxz
mov
insl
push
loopne
xchg
and
mov
das
push
sbb
add
jne
jmp
jns
xchg
and
cli
push
ljmp
cmp
cli
add
loop
bound
and
fsubp
mov
loope
cmp
ud0
or
mov
mov
and
adc
mov
and
insl
in
sub
pop
mov
clc
push
pop
int
dec
mov
inc
xorb
jae
pop
add
sarl
gs
cmp
pop
mov
add
jg
fimull
add
xchg
add
adc
mov
or
test
mov
adc
cmp
call
mov
rcll
js
mov
push
icebp
jbe
mov
cmpsl
dec
mov
mov
xchg
push
xor
add
int
mov
idivl
dec
mov
rcrb
pushl
ret
add
leave
cltd
in
stos
inc
push
test
ja
and
aas
movsb
add
mov
mov
pop
imul
lahf
push
xchg
xor
test
imul
mov
aad
mov
mov
movsl
out
xchg
xchg
xor
dec
adcl
out
lods
int
loopne
dec
mov
or
fcomps
dec
mov
sbbl
dec
sarl
ss
into
cmpsb
aas
js
pop
sub
nop
int3
enter
out
loop
pop
lahf
fnclex
repz
fisttpll
and
xchg
stc
and
and
lods
sbb
aad
mov
lcall
arpl
pop
gs
cli
sbb
cli
mov
push
ret
subl
cmc
test
pop
das
in
jo
mov
sbb
pop
push
inc
in
push
sub
add
mov
or
fidivl
jnp
push
inc
sbb
mov
sbb
mov
jns
mov
idivb
jb
fstpt
lock
or
sub
repnz
loop
pop
repnz
aam
mov
xchg
pusha
xchg
xchg
shlb
lock
movsl
lcall
mov
xchg
dec
inc
stos
pop
mov
mov
and
dec
sbb
je
shl
xor
loopne
dec
jg
xchg
adc
mov
data16
popf
sti
std
cmpsl
addr16
jbe
sbb
pushf
outsl
jb
nop
xchg
cs
add
lods
pop
sti
inc
sbb
lret
and
or
inc
xchg
inc
lcall
cmp
fcmovne
xchg
gs
aas
dec
cmp
sahf
add
mov
aad
lcall
icebp
rorb
scas
mov
into
inc
dec
xor
lret
int3
adc
js
popa
cmp
cmc
cmc
and
imul
ret
dec
dec
inc
lcall
mov
repz
aad
pushf
push
xchg
xchg
jp
cld
call
push
aaa
cltd
adc
or
cmc
in
sbb
mov
loop
lds
push
sub
push
pop
ds
cmp
ret
push
mov
insb
les
mov
jle
cmpsb
pop
imul
cmp
add
and
cld
mov
ljmp
and
mov
adcb
mov
insb
inc
fld
ss
sub
jns
xchg
mov
and
in
adc
out
mov
or
sub
ja
repz
inc
rorb
sub
fadds
test
outsl
std
mov
dec
pusha
mov
jne
add
push
sti
dec
in
sahf
fnstcw
mov
sub
sub
or
fbld
mov
fisubrl
push
sbb
sahf
out
cwtl
mov
int
xchg
sbbb
push
notl
insb
in
inc
in
imul
push
mov
test
and
cli
aad
xchg
jne
xchg
inc
adc
fwait
xchg
cmp
mov
mov
loop
sub
ret
into
push
mov
pusha
lret
pop
xor
call
xlat
ret
icebp
push
inc
insb
pop
xor
or
rclb
jno
xchg
adc
sar
cmp
shrb
mov
jne
push
add
mov
mov
repnz
mov
pop
cltd
xlat
xchg
adc
pop
loopne
push
lea
mov
in
and
push
bound
gs
adc
cmovb
out
imul
int3
push
mov
cmpsb
dec
jle
xor
imul
in
push
leave
sbb
call
movsl
push
pop
sahf
or
push
push
leave
jb
aaa
xchg
stos
pop
mov
das
adc
scas
add
cmpsb
stos
mov
mov
push
or
or
mov
adc
pop
mov
stos
sbb
lods
ret
lret
sub
sahf
push
or
insb
popf
xlat
jnp
pop
jmp
daa
mov
adc
adc
mov
out
xchg
xor
dec
push
mov
enter
mov
imul
sarb
mov
ljmp
int
mov
stos
outsb
dec
sub
xor
ret
ficoms
out
mov
repz
sbb
sti
imul
and
inc
jmp
aad
cmp
jnp
xchg
or
into
jno
pop
push
sub
inc
mov
sub
mov
inc
xor
sarl
clc
in
add
mov
mov
add
clc
jg
stc
mov
mov
or
faddl
fdivrl
sbbl
xchg
leave
dec
sub
insl
mov
pop
add
lds
iret
xor
mov
test
push
mov
sbb
adc
lds
outsb
adc
in
loop
adc
arpl
mov
lea
xchg
inc
pop
mov
pop
sbb
stc
in
aaa
cli
sahf
cli
xor
aas
jno
or
fdivr
mov
mov
sbb
data16
cmp
push
mov
and
addl
sub
mov
xchg
inc
xor
addb
inc
repnz
push
mov
movsb
xor
enter
jle
sbb
out
mov
fidivs
testl
fs
paddb
fistl
pop
cmp
cld
ja
sub
rorl
push
mov
add
insb
xor
jmp
mov
xchg
ljmp
in
test
jo
push
xsha256
cmpsb
adc
fucomip
bnd
dec
mov
sbb
jbe
sub
clc
cs
jp
int3
int3
fwait
or
popf
fidivrs
repnz
mov
mov
jle
adc
inc
lahf
pop
adc
or
mov
sbb
popa
lahf
sbb
scas
je
out
mov
push
mov
adc
data16
loop
fistpl
xchg
cmp
cs
mov
sub
inc
mov
sbb
or
push
push
out
adc
xchg
aaa
test
mov
fidivrl
cli
imul
cmpl
xsha256
cmpsb
adc
mov
pop
mov
pop
daa
fildl
sub
lahf
mov
sub
out
add
dec
call
xor
rcll
imul
inc
mov
js
arpl
mov
xchg
ret
bnd
mov
jl
mov
and
fst
dec
push
sbb
jmp
jmp
fmuls
xorl
call
mov
call
dec
ds
js
into
cltd
aam
adc
in
mov
mov
mov
inc
mov
pop
push
or
xchg
outsb
mov
mov
push
cs
dec
and
mov
mov
inc
or
mov
pmaxsw
cld
xchg
orl
add
enter
inc
das
in
sub
pusha
pop
repz
mov
leave
repnz
and
das
sahf
push
inc
sbb
xchg
das
cmc
fldenv
out
mov
push
gs
iret
ret
nop
sub
sbb
insb
lret
jmp
pop
sahf
xor
test
add
jns
nop
loope
daa
arpl
cmc
sub
loop
rorl
test
mov
jae
fimuls
push
in
test
xchg
and
mov
addr16
or
mov
cmp
sahf
fiadds
mov
push
hlt
loopne
in
notb
fidivs
mulb
push
xchg
adc
and
mov
sahf
shrb
leave
pusha
lods
insb
jecxz
push
mov
adc
jle
popa
ds
xor
icebp
push
jl
bsr
inc
rcll
jo
clc
push
shl
xchg
daa
sub
jmp
arpl
sub
mov
sub
xchg
jge
loope
icebp
inc
xchg
mov
outsl
stos
nop
mov
loop
addr16
sbb
sbb
xlat
mov
sub
xor
mov
sbbl
nop
xchg
push
in
dec
sbb
push
xor
push
fistl
cmp
jae
loop
jg
pop
push
dec
sub
imul
sar
pop
sbb
insb
push
adc
pop
add
dec
jns
dec
jnp
fildl
arpl
imul
jg
or
repz
sbb
dec
daa
into
ds
arpl
or
add
xchg
mov
adc
fwait
pop
xchg
and
pop
ss
repnz
add
stc
mov
loopne
mov
add
fwait
xchg
or
cmp
pop
push
or
idivb
enter
loopne
repz
mov
jecxz
aas
add
stos
pop
fimuls
cld
ficomps
pop
lret
and
sbb
sbb
pop
addr16
rcll
in
outsl
xchg
mov
sbb
and
add
sbbl
mov
mov
rcr
fldcw
fmull
call
mov
mov
push
push
or
ljmp
sub
cmp
jae
aas
movb
dec
les
jne
hlt
xor
je
mov
out
testl
adc
lret
or
repnz
pop
jmp
mov
jnp
loopne
mov
imull
leave
push
xchg
mulb
es
adc
mov
inc
movsl
mov
ret
sahf
pushf
mov
xchg
lcall
jl
test
frstor
adc
xchg
in
dec
enter
mov
sbb
jne
push
dec
popf
push
pusha
ret
adc
lods
pop
mov
add
mov
ja
inc
cli
or
sub
aas
decl
outsb
sub
andl
add
add
jb
xchg
ss
dec
xor
movsb
fadd
adc
ljmp
lret
jge
sub
xor
dec
and
inc
jo
leave
jmp
xor
mov
jle
xchg
inc
adc
sub
sub
hlt
addr16
push
stos
push
sbb
add
loope
cmpsl
addr16
adc
jo
or
cmp
xchg
fisubrl
pusha
cli
cltd
icebp
add
fsts
sahf
scas
mov
bound
aad
adc
or
mov
scas
scas
jns
out
mov
jns,pt
add
hlt
pop
incl
lods
js
xchg
dec
adc
addb
into
jg
jbe
jmp
adc
movsb
xchg
adc
or
pop
mov
out
sbb
imul
movl
popa
mov
mov
mov
lahf
or
in
sub
push
sti
ret
sbb
jbe
add
fcmovbe
jmp
cli
jae
jg
cmp
clc
fstpt
je
mov
xchg
jb
xor
js
das
adc
fsts
cmp
or
stos
inc
outsl
ljmp
xchg
mov
adc
cltd
mov
lds
sub
and
sbb
xor
push
mov
adc
inc
mov
into
hlt
adc
or
out
jp
icebp
lds
mov
push
push
xchg
inc
jb
mov
push
pop
cwtl
mov
dec
sbb
mov
push
sub
mov
dec
add
sub
inc
outsl
dec
dec
ja
fwait
icebp
cld
mov
push
in
out
xchg
dec
cmpsb
aad
pop
aad
sub
mov
push
std
dec
inc
sbb
scas
popa
call
jl
jmp
divl
dec
jle
test
lods
pop
arpl
fs
and
mov
or
sub
mov
pusha
xchg
xchg
push
pop
dec
add
lods
lahf
dec
mov
push
pop
xchg
or
mov
scas
mov
pop
pop
mov
ss
addl
push
out
or
popf
repnz
xchg
cld
xor
pop
outsb
xor
lods
fbld
mov
push
add
sbb
mov
and
jmp
fmull
pop
jmp
and
cltd
ss
sbb
sti
add
aam
mov
inc
es
mov
mov
adc
in
add
cmpsb
inc
fnstenv
imul
sbb
aad
addr16
mov
mov
sub
dec
mov
push
out
adcl
push
add
bound
divl
sbb
es
out
insb
push
xor
sub
ror
outsl
xor
loop
mov
lahf
sub
in
dec
aam
xchg
add
aaa
inc
xchg
add
mulb
mov
or
sbb
and
dec
imul
mov
fisubs
outsb
shll
aas
lods
test
ja
push
or
jae
mov
aaa
push
xchg
push
aam
push
daa
cld
pop
std
mov
push
jno
jmp
jae
loop
mov
lods
adc
cmp
jle
mov
mov
insl
rcrb
ficompl
inc
jle
inc
dec
sbb
sbb
sbb
xor
mov
stos
pop
jecxz
xor
negl
insl
jb
mov
inc
and
add
push
jae
imul
mov
push
or
cmc
jg
pop
push
call
out
xchg
sbb
jp
mov
cmpsb
sti
push
pop
dec
loopne
dec
in
jb
andb
lcall
add
mov
push
xchg
je
shrl
pop
hlt
pushf
jg
mov
jg
cmp
stc
inc
push
push
out
int
notl
push
aas
pop
icebp
fidivl
mov
hlt
mov
pop
shl
add
call
lret
stos
lcall
pop
push
in
sahf
cmp
mov
fldcw
mov
push
test
dec
or
and
jmp
inc
into
sub
or
pop
xchg
adc
xor
aam
push
gs
in
std
mov
fidivl
pop
repnz
jg
ja
lahf
dec
or
push
xor
les
test
lcall
clc
js
jg
leave
iret
xchg
sub
push
jno
or
adc
inc
inc
repnz
mov
add
int
push
aaa
and
lods
inc
test
hlt
repnz
in
cwtl
mov
mov
cli
out
push
lods
jno
fstp
imulb
cmp
out
mov
jmp
fldl
dec
movsl
mov
xchg
sbb
dec
popa
dec
mov
cmp
push
js
movsb
inc
push
or
fsin
into
inc
out
pop
mov
sub
imul
mov
cmpsl
inc
jmp
pop
stos
decl
xor
mov
sbb
sti
mov
jle
int3
test
jge
cld
pop
xorl
pop
pop
xchg
outsb
mov
aas
inc
mov
movsb
dec
imul
xor
jmp
cmp
xchg
out
js
add
sahf
add
xor
cmc
sub
sbb
hlt
cmp
or
inc
lcall
movsb
mov
xchg
mov
or
sbb
icebp
jmp
sub
or
mov
inc
sub
jmp
sbb
ficoms
mov
xchg
adc
repz
jp
mov
aaa
fsubrs
adc
mov
add
adc
mov
push
outsb
mov
wbinvd
sub
les
in
insl
xchg
jl
push
fisttps
adc
movsl
push
mov
add
push
jge
call
jb
push
xchg
sbb
fdivs
add
fcoms
push
adc
adc
int3
push
push
movsb
movsl
xor
xor
pop
cmp
mov
xchg
hlt
scas
sti
sbb
mov
cld
push
scas
add
add
or
adc
cwtl
jo
loope
jl
sub
js
dec
mov
push
loope
in
and
mov
dec
les
cwtl
in
repz
sbb
out
xchg
sbb
in
ds
jne
ret
or
imul
ljmp
and
pop
shll
and
adc
jge
dec
jno
in
les
popa
into
xor
sub
adcb
mov
js
cmp
jge
test
push
movsl
lods
mov
push
add
adc
fsubr
leave
and
sub
jge
mov
mov
cmp
icebp
mov
or
addr16
mov
lods
dec
cmpsb
cmpsb
cmp
rol
jl
pop
cmp
out
mov
ret
outsl
loope
and
rorl
add
call
push
sub
mov
mov
push
aam
out
mov
dec
in
push
insl
pop
ret
jne
gs
test
push
sbb
inc
jge
cmp
pushw
mov
pop
xor
lds
mov
add
push
push
shrl
clc
jl
add
aas
and
hlt
in
mov
cmpsl
sub
adc
outsl
shlb
mov
insb
ss
and
cld
pop
dec
pusha
daa
bound
or
enter
in
xor
inc
in
sbb
test
xchg
icebp
push
sbb
cwtl
in
mov
pop
sqrtps
mov
lds
jno
gs
aas
jl
mov
jno
sbb
dec
push
mov
jnp
and
or
push
fldenv
mov
les
cmp
pop
dec
mov
mov
out
mov
lret
loope
ds
sub
push
mov
cs
push
add
arpl
xor
rep
adc
xor
arpl
cs
lds
testb
rol
mov
in
jbe
xchg
shr
fcmovnbe
scas
in
repnz
movsb
mov
mov
jno
mov
addb
xor
add
dec
cwtl
lahf
xchg
sbb
pop
lods
mov
mov
cmpsl
ror
xor
fwait
sbb
icebp
mov
and
das
out
movsl
ja
xor
cmpsl
push
nop
aam
xor
mov
imul
stos
or
lea
in
leave
stos
ljmp
pusha
out
and
cmp
in
shr
iret
call
subl
jo
rolb
push
jo
dec
jne
hlt
out
arpl
jg
fsubs
push
nop
orl
push
ds
lahf
and
mov
je
cmp
jnp
xchg
movsb
xchg
push
add
jmp
or
jbe
jne
xlat
out
dec
ljmp
bound
push
scas
add
push
sub
mov
pop
ljmp
scas
sbb
mov
xchg
inc
or
cmpl
mov
push
jmp
jmp
mov
sub
xchg
dec
aam
jmp
sbb
pop
jnp
xchg
xchg
lock
clc
out
pop
mov
mov
test
clc
push
adc
and
pusha
add
aam
jns
xchg
push
jecxz
add
jle
repnz
hlt
sbb
shl
hlt
imul
insb
mov
movsb
rcrb
lds
mov
xorb
std
rolb
insb
out
mov
jae
stos
jmp
aam
cltd
std
push
jle
mov
scas
add
dec
xor
es
sti
jne
test
cld
mov
cmp
dec
mov
aad
cli
scas
push
xchg
push
push
mov
xchg
xchg
jge
and
lahf
je
jp
add
fs
sub
sub
sbb
insb
in
call
push
pop
push
inc
xor
mov
sub
push
lods
sub
lret
je
es
outsl
sbb
movsl
mov
cwtl
int
mov
and
cld
xchg
inc
test
adcl
test
inc
and
cmpsb
adcl
adcl
adc
loopne
lahf
mov
loopne
jg
inc
in
out
push
rcl
pop
cltd
cmp
adc
add
nop
xor
xchg
mov
mov
jl
pop
ret
outsl
fwait
std
scas
and
pop
fsubrs
mov
mov
mov
jl
mov
jmp
sbb
int
pop
insl
insl
outsl
dec
or
mov
leave
pushf
stc
mov
jae
push
mov
jecxz
mov
inc
dec
mov
xor
pop
pop
push
out
or
dec
aad
add
pusha
test
jle
dec
notb
orb
ds
adc
pop
pop
stos
mov
adcb
lret
dec
xor
or
inc
jle
cmp
cli
cmpsl
mov
cltd
mov
pushf
inc
sbb
add
cmpsl
push
std
inc
push
movsb
xchg
add
cli
sub
add
add
mov
cmp
idiv
fs
icebp
sbb
popa
daa
stos
nop
cmp
push
jb
sbb
and
loopne
mov
test
cs
adc
mov
jno
mov
sbb
jl
fsub
push
ret
jno
scas
rcr
mov
roll
daa
sbb
dec
in
in
fs
xlat
inc
push
and
dec
or
jo
xchg
test
dec
jge
jnp
pop
in
mov
clc
int
pop
inc
pop
or
sbb
cmpb
out
ror
jnp
stc
inc
mov
mov
push
fs
je
decl
mov
jno
out
inc
mov
jp
aam
icebp
push
in
push
and
mov
call
sbbb
jge
into
test
jge
xchg
cli
jne
mov
push
push
outsb
jg
subl
xchg
jae
mov
out
mov
sub
and
xchg
test
and
dec
mov
jle
pop
push
push
cltd
pop
mov
ret
and
jecxz
dec
das
andb
popf
dec
mov
bound
popf
js
movsb
mov
int3
loop
xchg
add
das
clc
xor
in
xchg
xor
inc
stos
aaa
data16
lock
xchg
cmp
push
loopne
add
mov
jecxz
out
inc
push
aam
std
aas
push
in
imul
jnp
testb
sbb
xchg
or
mov
fstl
pop
inc
cmp
sub
pop
repnz
mov
xor
and
adc
adc
push
mov
push
sub
sbb
andl
cwtl
xor
push
cmp
stc
push
jbe
loope
mov
insb
sbb
popl
out
xchg
div
in
out
imul
sbb
push
xchg
or
pusha
mov
js
out
insb
shrb
push
je
iret
sub
cmp
add
lret
jecxz
or
add
decl
inc
inc
and
aas
out
push
cwtl
fisubl
dec
cs
sbbl
add
jl
sub
dec
scas
mov
movd
xor
sub
pop
or
dec
cld
stc
mov
cwtl
clc
inc
xorl
push
mov
ret
jnp
ret
mov
ja
mov
adc
sub
inc
sbb
fisubrl
fucomp
inc
jb
mov
cld
shr
xchg
cmp
or
xor
fisubs
push
dec
ret
addl
fdivr
add
pop
jge
fidivrs
jp
fldl
dec
xor
cmp
repz
add
mov
shl
fldt
add
dec
ret
xchg
pusha
xor
mov
jb
shlb
lock
loope
popa
and
hlt
bound
pusha
lcall
pop
push
pop
sahf
cmp
mov
or
xor
fimull
push
stos
push
xchg
adc
ret
mov
out
inc
push
inc
cmp
xor
push
test
jecxz
inc
jecxz
add
js
pushf
stos
sbb
push
sbb
add
jo
imul
pop
les
xchg
shrl
and
test
clc
mov
imul
jl
inc
lret
pop
inc
lret
and
mov
mov
jae
out
gs
or
pop
add
xor
fimuls
xor
test
fisubrs
lds
cmp
fistps
pop
sbb
and
inc
add
push
jb
xchg
and
dec
dec
mov
cs
ja
adc
jmp
push
xchg
mov
mov
mov
sub
test
sti
ret
scas
cmpsl
js
mov
push
popf
aam
das
lcall
inc
adc
or
rcl
subl
mov
test
pop
add
mov
mov
and
adc
mov
imul
mov
jne,pt
and
hlt
fcom
push
pop
loope
pop
pop
push
inc
stc
add
mov
stos
ret
and
mov
add
cwtl
addb
push
ljmp
xor
mov
out
dec
xlat
je
dec
rol
stc
mov
loope
lods
loop
or
imul
mov
lods
or
pop
pop
stos
inc
hlt
lock
mov
loop
lock
fwait
jns
jg
decl
xchg
inc
jbe
mov
gs
mov
pop
inc
cmp
cmp
repz
and
rcll
mull
filds
push
mov
pop
loop
enter
xchg
push
or
loope
inc
jbe
fsubl
int3
xchg
cld
add
out
mov
mov
mov
mov
xchg
outsl
dec
mov
roll
hlt
sbb
ds
dec
mov
pop
xchg
lods
xor
out
aam
stc
mov
dec
or
outsb
jle
push
mov
mov
out
nop
cltd
ret
push
loope
push
mov
xor
dec
ret
xchg
mov
popf
int3
cmp
pop
daa
and
test
test
int3
cmp
and
pop
push
cld
clc
mov
ljmp
cmp
lcall
outsb
push
xor
xor
mov
leave
xchg
test
xchg
fsubs
daa
scas
xchg
xchg
mov
xchg
pop
and
cli
fwait
sub
jle
test
xchg
popa
nop
or
sub
test
cltd
out
movsl
adc
les
sub
mov
mov
test
mov
testb
repz
mov
test
sub
cmp
es
mov
push
enter
sub
cmp
cmp
addr16
lods
xor
stos
push
cltd
in
pusha
cmpl
arpl
test
or
mov
clc
pop
out
mov
stc
hlt
add
nop
xor
xor
int
xchg
shlb
mov
mov
or
rcll
stc
ja
push
mov
fldt
sub
pop
pop
add
in
mov
ret
fistpll
mov
data16
aad
movb
andl
jge
je
sti
pop
mov
rclb
mov
out
push
dec
cld
fnsave
lods
jno
inc
jmp
enter
test
clc
js
push
adc
push
xlat
repnz
mov
add
sbb
xchg
rcl
icebp
daa
loopne
xor
jae
cli
ret
divb
mov
pop
or
leave
loopne
test
sbbl
xlat
mov
lea
movsl
xchg
mov
sub
and
add
push
testb
into
hlt
jae
mov
arpl
cmp
movsb
out
test
mov
cmc
lret
cmp
stc
ja
mov
inc
adc
das
push
leave
dec
jecxz
inc
mov
or
xor
lcall
dec
addb
in
lea
in
add
cmc
cmc
flds
lahf
in
jg
jle
jl
es
jg
out
mov
inc
push
idivl
test
xchg
mov
ret
mov
cmp
orl
lret
pop
dec
dec
push
outsl
shl
xor
mov
std
loope
pop
stos
iret
mov
mov
dec
sub
icebp
jbe
add
adc
adc
aas
lret
add
adc
sbb
jmp
or
out
pusha
xchg
addb
sub
out
lcall
inc
sbb
or
xchg
xlat
push
das
or
int3
xchg
mov
bnd
sahf
repz
xchg
dec
mov
dec
pusha
and
and
add
int
pop
movsl
stc
add
and
jae
xchg
rcr
sbb
pop
jnp
fs
loopne
mov
xlat
negl
mov
arpl
mov
push
outsl
dec
sti
or
inc
jge
add
aam
out
insb
test
lret
push
inc
xchg
sbbl
mov
fwait
cmp
pop
fisubrs
cmp
clc
cltd
nop
in
fs
dec
sti
push
shl
call
les
add
data16
inc
mov
repnz
mov
or
mov
jbe
jp
dec
push
data16
xor
sti
pop
popf
cld
movsl
les
iret
sbb
fstp
pop
xchg
adc
pushl
lcall
xor
mov
mov
outsl
rorb
pop
inc
insb
arpl
jmp
mov
out
add
ret
sahf
jb
or
add
mov
jnp
jno
add
stos
pop
dec
sub
jmp
adcl
add
enter
movb
sbb
xchg
and
or
imull
push
jb
ror
and
dec
jb
or
loope
in
daa
add
in
xchg
mov
pop
js
xlat
loope
mov
push
jp
xchg
pop
repz
mov
outsb
xor
jmp
mov
into
rcrl
std
mov
lods
add
xchg
out
pop
ljmp
xlat
scas
jne
lea
sbb
xor
rcrl
dec
jno
shrb
cmp
cltd
jbe
mov
loop
push
xor
jnp
dec
xor
sbb
aas
cld
rcll
jb
aaa
xchg
jne
jne
rcll
fiadds
xlat
cmpsl
popa
mov
cmp
xorl
sub
lods
cmpb
addb
sti
in
mov
rcl
sub
xlat
xchg
lahf
dec
or
lods
js
pop
jmp
and
cmpsl
loop
scas
in
mov
pop
pop
cmpsl
pushf
sbb
js
aam
call
dec
push
adc
jbe
out
adc
mov
mov
add
sub
test
les
jp
pop
or
cmp
xor
mov
ret
loop
adc
sub
or
aaa
int
dec
lock
jne
out
jo
jno
inc
and
mov
pop
or
jnp
add
sub
sub
divb
pop
jne
and
out
fldpi
xchg
notl
nop
outsb
pop
or
mov
popf
sub
sbb
and
xchg
clc
sbb
inc
cmp
dec
adc
jns
cli
xchg
jl
push
sbb
out
cmp
bnd
scas
aas
mov
push
pop
insb
adc
cmp
leave
or
popf
sbb
ret
pop
ja
xor
pop
dec
push
pop
xor
adc
inc
pop
jb
out
mov
adc
iret
and
push
mov
inc
addr16
call
adc
push
jl
mov
popl
xchg
sub
cmp
ret
mov
or
cwtl
push
mov
mov
fcompp
jno
add
cmp
adc
cwtl
xor
or
mov
idiv
dec
pop
rclb
les
loop
add
jecxz
gs
push
mov
mov
mov
add
insl
lock
dec
xchg
outsb
pop
sahf
xchg
rorl
jmp
je
ret
push
std
pop
mov
jmp
sarb
cltd
jle
fucomp
adc
mov
jge
test
mov
lret
je
xchg
neg
js
sub
inc
cmpsl
dec
mov
popa
iret
dec
sbb
or
aam
pop
sti
scas
test
hlt
or
pop
js
cmpsl
and
fxch
shrl
cmpsl
js
imul
xchg
cmp
jns
repnz
add
adc
dec
pusha
js
mov
xor
fs
mov
cwtl
sub
lahf
test
and
popa
clc
sbbb
xchg
cld
xor
cli
test
imul
js
xor
xchg
clc
or
push
push
cmp
mov
pop
jl
psubsb
stos
lea
add
jecxz
inc
xchg
fcmovnb
mov
arpl
pop
rcrb
cmp
adc
add
test
ljmp
and
out
or
and
rcl
imul
dec
sbb
pop
in
sub
cmp
push
pop
test
faddl
out
scas
push
jp
push
call
xchg
inc
add
fwait
addr16
js
dec
push
or
insl
enter
jne
add
testb
dec
outsl
mov
mov
es
xchg
jmp
pop
cmpsl
sahf
aad
dec
shl
mov
loop
into
fnstenv
imul
clc
bound
pop
inc
arpl
aad
push
pop
sub
jl
fstpl
sbb
in
or
cs
add
rcr
test
jne
out
fdiv
xchg
push
mov
mov
and
out
adc
stos
jnp
mov
mov
push
mov
mov
jae
ljmp
js
xchg
push
cmpl
mov
orb
xchg
fildl
pop
stos
pop
or
mov
jp
xchg
mov
inc
mov
ss
dec
fsubrp
jb
outsb
mov
out
int
adc
aaa
pop
push
push
das
out
mov
pop
or
mov
add
or
in
jne
push
ds
jge
scas
imul
shrb
mov
test
stos
jge
push
sbb
popf
jbe
mov
in
adc
es
mov
inc
pop
xchg
fcomps
adcl
dec
jo
nop
sub
mov
add
adc
mov
inc
add
pop
xchg
ret
mov
mov
inc
or
mov
fldcw
ret
adc
mov
rorb
mov
sti
sub
push
or
jmp
lea
leave
mov
rcrb
mov
mov
imulb
and
xchg
idivb
xor
jnp
es
daa
pop
sub
sbb
movsb
add
mov
ss
xor
sub
and
jns
fsubrs
mov
rcll
jno,pn
jo
neg
sbb
add
and
adc
pop
xor
xchg
cmpl
xchg
out
ljmp
ss
mov
add
test
test
adcb
imul
sub
jg
fst
push
imul
inc
movsl
add
jp
inc
xchg
and
out
mov
decl
xchg
jo
jmp
lret
jmp
and
mov
pop
lcall
xorb
and
das
movsl
push
cmpw
testb
in
test
jne
in
push
lret
gs
rorl
lahf
add
negl
dec
inc
pop
jns
lock
aam
pop
adc
cmp
mov
mov
addr16
inc
out
or
sbb
pop
addr16
fcoml
in
stc
std
and
scas
scas
add
jo
pop
popa
les
cwtl
or
outsl
xchg
push
insl
pop
add
popf
stc
xchg
sti
cmp
pop
cmpsl
mov
pop
into
push
out
sar
in
sbb
in
add
cltd
xchg
jne
call
xor
pushf
mov
js
int
leave
call
divps
fbld
mov
in
popa
shlb
mov
jnp
xor
sub
xchg
mov
rcll
or
shll
jae
loop
jmp
loop
in
mov
inc
pop
xor
pop
mov
sub
xor
lods
dec
mov
jnp
enter
inc
cmpsb
lock
and
sbb
imul
mov
inc
or
loop
dec
add
jp
imul
mov
and
dec
repz
jle
add
jnp
dec
ljmp
mull
jle
jo
das
mov
mov
pop
lret
adc
cli
mov
mov
aad
fbld
inc
inc
frstpm(287
xor
pop
test
aas
push
mov
outsl
mov
xor
int
ficompl
xchg
mov
in
or
pop
scas
xchg
test
adc
call
dec
jns
adc
outsb
push
sbb
int
les
add
mov
mov
lcall
dec
out
inc
sbb
int
adc
out
xor
mulb
gs
pop
insl
push
cmp
ret
ljmp
mov
mov
pop
cmp
mov
mov
imul
clc
ret
push
dec
lods
jmp
dec
leave
mov
ljmp
lock
xor
cmp
jns
push
push
ja
push
orl
inc
or
outsl
pop
and
clc
ja
sbb
push
xlat
and
push
jno
lock
push
lods
xor
popa
inc
je
xchg
jno
jge
or
stos
ljmp
ret
cmp
test
pop
or
jne
or
xchg
jecxz
jbe
hlt
mov
lcall
pop
rcll
jmp
cli
lods
addr16
sub
jb
xor
out
cmpb
insl
mov
outsb
mov
sbb
fdivs
stos
loopne
mov
or
mov
push
mov
pop
xor
gs
mov
ljmp
js
stos
or
cli
dec
ret
add
push
sub
in
mov
jp
mov
ja
hlt
dec
mov
jmp
mov
jno
mov
or
incl
mov
pop
adc
mov
ja
fwait
outsl
pushf
cld
andb
std
ret
fwait
pop
dec
cwtl
ljmp
clc
pushf
out
test
xor
and
jb
mov
sbb
xchg
out
jmp
stos
movsl
adc
cmpsl
cltd
mov
je
shrb
cmc
sub
js
cmp
mov
int3
and
xor
cmp
cmp
mov
sbb
push
push
and
cmc
dec
sbb
mov
das
fs
and
std
cld
cli
cmpsb
push
mov
stos
pop
pop
pop
test
mov
or
lret
fldl
push
repnz
xchg
jns
loopne
subl
pop
fcomi
push
fisubs
sub
adc
pop
movsl
push
std
movsb
enter
xchg
xchg
mov
adcl
sbb
inc
loop
push
mov
mov
sub
inc
adc
shll
add
push
shrl
pusha
pop
andb
pushf
jo
pop
mov
sbb
dec
mov
int
xchg
out
stos
hlt
add
xchg
in
pop
lcall
jae
cmc
and
dec
int
sahf
stc
adc
js
stos
int3
dec
adc
sbb
aas
stos
push
jp
inc
add
das
dec
fistl
cld
ja
jmp
jnp
out
adcb
fwait
je
mov
hlt
cltd
sub
add
pop
aad
repnz
cli
sti
fs
mov
shll
ficomps
aas
lods
push
stc
xchg
stos
adc
ss
pop
out
imul
aam
mov
jecxz
icebp
dec
test
mov
mov
and
fisubrl
xor
fsubs
inc
nop
sbb
pop
push
inc
sbb
adcl
out
mov
mov
sbbb
adc
mov
lock
xor
fwait
pop
jmp
and
sbb
les
mov
xchg
mov
jo
popa
mov
sbb
pusha
xor
int
mov
sbb
lcall
and
push
sub
sbb
ret
jmp
jo
dec
dec
mov
stos
lds
icebp
int3
lahf
cltd
int
sbb
push
scas
cli
sbb
sub
cmp
fwait
dec
xor
mov
cmp
rolb
cmp
iret
mov
add
in
addr16
mov
scas
ror
cwtl
dec
daa
xchg
dec
dec
dec
andl
sar
shrl
fsubrp
mov
pop
fstl
xor
push
popa
xor
inc
jns
pop
sbb
and
jg
je
nop
inc
jge
enter
test
xor
fwait
and
adc
mov
popf
les
sbb
repnz
into
mov
adcl
fnstenv
popa
out
or
enter
or
pusha
scas
mov
insb
add
in
cmp
mov
pop
inc
cltd
pop
sub
cld
sbb
cmp
popf
push
leave
or
sahf
mov
data16
push
imul
lret
lahf
ds
mov
mov
mov
in
fiadds
fs
and
sub
jg
nop
pop
adc
push
dec
aas
outsl
inc
sbb
mov
es
and
loopne
mov
les
ret
mov
mov
mov
dec
ficoml
nop
inc
outsb
and
jmp
fsubr
ljmp
push
subl
mov
in
jns
shlb
daa
xchg
js
dec
hlt
jo
xchg
mov
xchg
addr16
cltd
lods
enter
mov
jb
dec
cmp
sub
lds
xchg
aas
xlat
dec
xor
mov
mov
int3
cmp
xor
rolb
xchg
test
mov
xchg
inc
jge
std
sub
fisttpll
add
fisttpll
xchg
out
scas
int3
mov
outsb
jns
xchg
outsb
sbb
mov
pop
add
repz
fwait
cmp
dec
shrb
mov
mov
ds
jns
push
in
int3
xchg
cmp
aad
stos
shrl
sbb
mov
inc
xchg
xor
dec
sysexit
adc
shr
push
scas
lea
lock
out
je
jnp
iret
cmc
push
in
jb
std
insb
dec
push
mov
pop
inc
aas
pop
outsb
sub
xor
fcoms
outsl
add
adc
nop
xchg
xchg
xchg
fsts
cwtl
xchg
pop
aam
dec
pusha
out
std
jae
aaa
aaa
add
mov
call
shll
addr16
into
jbe
dec
cmp
jecxz
mov
mov
mov
out
dec
or
inc
xchg
add
mov
sbb
hlt
inc
ret
jo
jmp
adc
push
sbb
inc
jge
daa
jmp
je
ljmp
aaa
std
daa
lods
cmc
or
lods
cmpsl
push
mov
push
nop
xchg
popa
xchg
outsb
xor
es
adc
std
mov
shrl
cmp
sub
inc
shr
add
loop
fstps
adc
dec
andb
sbb
decl
mov
xchg
lahf
outsb
sub
mov
mov
adc
aam
add
dec
push
lret
push
fld
push
mov
scas
call
add
jg
or
cmp
xchg
fwait
daa
orb
pusha
stos
outsl
mov
fbstp
mov
cli
xchg
rclb
outsb
sahf
mov
and
cmp
dec
pop
dec
and
mov
adc
xchg
adc
inc
imul
loopne
icebp
inc
dec
jmp
inc
jno
cld
or
add
sub
mov
stc
movsb
sbb
mov
popf
dec
cmp
shr
dec
and
repz
lods
cwtl
cmp
lock
mov
mov
fimull
xlat
jge
adc
mov
sub
out
jae
mov
xchg
xorl
cltd
jno
push
xor
lods
lock
outsb
inc
jg
push
js
add
sub
mov
test
lea
insl
in
mov
jbe
movsl
mov
jno
xchg
mov
ret
imull
mov
insb
lret
xor
fcmovnb
loop
adc
inc
sbb
mull
das
ret
aam
dec
mov
sbb
stos
je
push
btr
das
jo
jne
and
and
push
sbb
dec
imul
lret
lds
mov
movsl
cmp
push
cmpsl
sbb
mov
cmp
sbb
mov
ds
ljmp
mov
mov
add
mov
iretw
cmc
xor
and
mov
cld
in
pop
add
testl
jne
cmp
imul
ret
push
lds
and
movsb
ja
cwtl
sub
inc
mov
ret
xchg
or
push
inc
fldcw
xlat
cmpb
data16
pop
push
or
inc
aad
cli
mov
lret
nop
adc
sbb
jp
insb
int3
inc
push
arpl
inc
cli
or
jo
iret
add
cltd
sbb
outsl
mov
fcoms
and
add
testl
jne
insl
repnz
mov
mov
imul
add
dec
lods
shlb
es
sti
jg
arpl
push
jg
int3
fs
fistpl
mov
movl
add
cmp
cmp
imul
sbb
xchg
mov
dec
cltd
outsb
adc
mov
fnstenv
test
push
jbe
sarl
jmp
js
in
inc
rorl
and
mov
test
jae
xchg
add
int3
xor
nop
cmc
cmp
inc
mov
test
sbb
mov
push
add
push
sub
add
inc
mov
inc
inc
and
addr16
xchg
inc
xchg
lahf
sub
stc
xor
daa
inc
data16
int3
outsl
inc
mov
imul
outsb
cmp
xor
lahf
lea
mov
xchg
popa
cmp
dec
push
movsl
push
subb
not
sub
xchg
dec
test
jnp
mov
push
and
fstpl
mov
xchg
cmp
inc
mov
add
add
mov
mov
idivb
flds
push
and
or
mov
xor
outsb
sub
push
insb
push
mov
cmpsb
mov
in
push
dec
cmp
repz
test
mov
push
push
lds
adcl
ret
cli
rcrb
popf
pop
popf
hlt
stc
jno
sbb
add
test
jne
xchg
mov
ja
push
lods
std
incl
imul
sbb
ficoml
out
rcrl
sahf
sub
jo
sub
enter
call
push
insl
pop
rorb
xor
xor
call
sub
jg
push
loope
and
xchg
call
inc
or
xchg
aad
in
mov
mov
stos
sti
mov
jno
push
mov
jne
std
movl
cmc
adc
cmp
mov
fidivrl
pop
shrl
mov
mov
lret
pop
add
inc
mov
sbb
dec
add
into
pop
scas
push
dec
or
jnp
xchg
daa
int3
test
cmp
lods
inc
cmp
icebp
push
cmpsl
pop
rcrl
push
pop
inc
icebp
pop
mov
xor
jge
jbe
inc
pop
lcall
pop
and
fcmove
mov
xor
inc
add
mov
mov
cbtw
repnz
jmp
js
adc
sub
bound
sbb
imul
dec
mov
aaa
js
mov
adc
and
enter
aam
pop
das
and
std
les
shrl
sub
call
mov
mov
fcomps
pop
pop
sub
jne
jmp
mov
mov
imul
hlt
cmpl
fs
xor
popa
jg
and
add
or
mov
adc
repnz
add
mov
inc
push
clc
ja
cs
xchg
mov
out
jg
jbe
jno
dec
addr16
adc
sbbb
call
daa
sub
push
sahf
cmp
arpl
inc
out
lret
and
jle
push
sahf
mov
mov
sub
lret
ds
sbb
push
vpmulhw
xor
shll
fnsave
or
cmp
aaa
pop
inc
stc
jne
femms
nop
pusha
xor
ds
push
ja
sbb
cltd
imul
push
adc
adc
cmc
mov
jbe
xchg
andl
adc
dec
xchg
lret
pusha
popf
push
or
out
sbb
arpl
pusha
stc
in
push
movsl
ret
rcr
enter
mov
aad
push
mov
loope
xchg
js
in
sarb
call
lock
or
mov
adc
ja
pmaxub
out
or
stc
mov
pushf
mov
inc
inc
loop
pop
add
mov
or
cmp
mov
out
or
mov
jmp
test
into
fdivs
xchg
mov
insl
dec
sbbb
cs
mov
mov
aad
ret
lret
push
icebp
mov
clc
aam
jg
das
mov
push
rcrl
mov
push
dec
insl
inc
mov
inc
or
sti
dec
jb
lcall
in
cld
cld
lahf
jbe
cmp
aam
jg
sub
fiadds
mov
repz
add
cmp
push
mov
mov
sbb
or
aas
jo
stos
or
dec
or
aaa
pop
inc
lcall
sbb
in
dec
adc
mov
jecxz
test
adc
mov
stc
lea
aas
push
pusha
insb
jmp
cmc
push
out
jg
call
mov
shlb
test
mov
scas
dec
sarb
jle
adc
gs
sbb
fildl
inc
dec
mov
dec
jbe
xchg
jae
lds
cmp
rcrl
mov
pop
jbe
pop
cld
cmpsb
ja
jne
lret
leave
addb
pop
mov
mov
clc
push
cmp
aam
cmpsb
call
fmuls
scas
xor
mov
fcoms
pushf
aas
dec
mov
lods
fisubs
roll
cmp
mov
jo
cmpsl
mulb
inc
jo
push
sbb
xchg
sahf
hlt
inc
pop
jnp
lahf
insl
gs
mov
cmp
pusha
push
ficomps
sub
stc
mov
mov
pushf
sbb
jns
dec
xchg
sbb
es
mov
std
cltd
sarb
push
les
push
pop
fsubs
pop
jb
loopne
loopne
pushf
mov
cmp
push
in
daa
pop
sbbb
pushf
in
in
fdivl
shll
sub
push
sahf
xchg
cwtl
inc
aad
sub
mov
sbb
adc
pop
push
sarl
dec
pop
pop
sub
and
stos
mov
jne
nop
subb
xchg
inc
lcall
mov
mov
lret
sbb
testb
mov
jo
xchg
pop
mov
pop
das
dec
or
ss
xchg
cmp
mov
sti
push
aam
xorb
push
sub
or
add
mov
fucomi
mov
jecxz
jmp
lds
xchg
push
bound
aaa
dec
subl
adc
hlt
or
dec
das
mov
push
daa
aaa
add
cltd
add
test
mov
xlat
pop
add
outsl
popf
push
mov
mov
push
or
sub
xchg
es
xchg
idiv
jnp
lea
adc
push
pop
adc
add
sub
arpl
xchg
sbb
mov
cltd
pop
mov
mov
sub
aas
and
pop
inc
sar
mov
dec
or
sbb
mov
cmp
mulb
xchg
stc
xor
or
xor
aaa
aas
push
mov
ja
fdivs
add
add
adc
mov
mov
xorl
shl
ljmp
inc
je
add
imul
xchg
inc
mov
jbe
add
ss
cmp
pop
aam
lahf
rcrl
cld
dec
fists
bswap
inc
push
pop
fstpl
adc
lahf
fsubl
or
jno
cld
and
sbb
sub
mov
lret
aad
pop
outsb
fcompl
aad
imul
xchg
data16
inc
pop
shrl
insl
lea
aad
stos
sbb
mov
ds
cmpsl
rorb
icebp
ficoms
mov
pop
add
movsb
mov
sub
enter
or
and
icebp
stos
out
push
ficoms
inc
clc
arpl
sarb
add
loopne
jne
in
mov
test
xor
shrb
sbb
mov
inc
in
ficomps
dec
push
data16
hlt
add
xor
jns
bndldx
dec
jb
sbb
push
mov
push
lods
or
lret
mov
outsl
fnsave
aad
and
xor
push
dec
gs
in
std
mov
inc
mov
mov
mov
sarl
xor
mov
stos
xchg
mov
lea
sbb
mov
ret
mov
dec
aad
mov
stc
jns
pop
outsl
dec
pop
push
into
mov
push
cld
inc
inc
jge
fwait
into
dec
and
pusha
ret
add
andl
lahf
push
loopne
dec
push
fcoml
fdivrs
addl
sub
icebp
xchg
je
pop
add
js
or
clc
mov
mov
inc
sbb
dec
dec
call
jp
stos
aam
jnp
dec
mov
iret
or
mov
cmp
jl
xor
test
leave
emms
pop
test
and
adc
or
adc
sub
out
sbb
and
jne
dec
cmpl
call
adc
rcr
std
loop
cmpsl
int
mov
sti
add
outsb
inc
jge
or
ficoms
fistpl
mov
push
imul
out
xchg
sahf
cmpsl
nop
daa
in
lret
outsb
cmpsb
aam
pop
push
inc
push
outsb
and
loopne
aaa
or
ret
jb
and
aaa
jb
fsubr
sbb
push
jo
in
icebp
xor
and
push
jae
mov
fstp
push
jl
inc
stos
add
lret
mov
cwtl
pop
in
jae
mov
int
out
pop
xchg
sbb
dec
pop
in
and
idivl
sbbl
mov
mov
adc
arpl
push
mov
es
push
test
fstps
jnp
loopne
nop
jge
add
je
rcrl
xor
stos
cmp
adc
dec
mov
lcall
pop
or
xchg
and
mov
sbb
lods
test
sub
adc
add
sub
mov
push
sbb
mov
imul
xor
cwtl
scas
stos
and
insb
inc
push
xchg
cmc
and
loopne
cmp
scas
pop
out
je
enter
icebp
push
stc
call
lahf
mov
mov
jle
jnp
arpl
fcmovb
inc
or
aam
ds
loopne
cmp
dec
push
iret
mov
mov
mov
xlat
sub
cmp
lsl
lock
pop
scas
xor
dec
inc
and
out
pop
xor
mov
lods
mov
inc
ret
sub
aaa
and
cmpsl
into
in
jo
dec
jns
sbb
sub
lahf
cmpsl
pop
stos
std
mov
adc
xchg
mov
icebp
test
mov
fcmovnb
js
jl
pop
bound
add
movntq
out
pop
outsb
stos
subl
jne
adc
pop
mov
idivb
daa
xor
sbb
jle
add
sti
mov
push
fisubs
lods
inc
cld
pop
sub
push
ljmp
mov
mov
dec
fsubp
fdivp
inc
adc
ja
push
dec
insl
ja
dec
mov
ret
adc
push
repnz
pop
scas
sarl
mov
push
movsl
inc
mov
mov
pusha
sbb
adc
jp
push
cmp
clc
pop
mov
insb
outsl
xor
data16
xacquire
shll
fwait
sub
sub
outsb
mov
lcall
cltd
adc
pop
mov
mov
jg
add
test
xchg
incl
inc
rcr
xor
mov
in
add
and
jnp
movsl
imul
mov
mov
push
push
push
dec
push
mov
mov
mov
gs
pcmpeqw
call
pusha
jb
xor
mov
rolb
sbb
sub
out
dec
jno
repnz
idiv
and
iret
jge
xchg
pusha
push
xchg
lods
inc
push
xchg
add
nop
xchg
pop
repz
mov
add
std
mov
sub
mov
cld
cmp
push
cs
add
or
mov
mov
xor
fs
mov
add
jge
xchg
mov
sbbb
sbb
clc
sub
cli
fstpt
aas
or
jno
pop
mov
push
sbb
iret
jb
cmp
int
push
dec
imulb
add
push
test
fistpll
imul
or
pop
cld
pop
pop
jle
divl
or
mov
lcall
mov
or
sbb
pop
xchg
mov
shlb
je
or
outsl
imul
inc
inc
mov
sub
and
mov
sbb
push
fwait
ret
in
mov
sti
inc
dec
je
sete
outsl
iret
rcrb
cld
sub
aas
les
mov
pushf
sbb
jge
pop
lds
gs
test
icebp
or
movsl
and
cmp
pop
mov
adc
ret
fnsetpm(287
sub
out
jge
mov
inc
mov
lcall
out
scas
mov
xor
jno
stos
push
bound
mov
and
ret
fisubrl
out
lods
or
or
pusha
orb
mov
adc
ffreep
jmp
rorl
ja
xor
push
cmpsb
and
and
fs
mov
cmpsl
mov
lds
lods
mov
pushl
bound
scas
jb
mov
pop
mov
adcb
fs
sub
push
dec
add
push
mov
sub
idiv
ret
push
test
mov
mov
out
shlb
or
pop
fisubrl
pop
jmp
test
push
adc
icebp
aam
xchg
xchg
sbb
cmc
popf
pop
jle
push
mov
pop
xor
sub
cli
mov
test
js
sti
pop
inc
fcmovnu
sub
mov
int3
test
rolb
into
mov
sbb
xchg
lret
adc
cltd
enter
std
std
adc
add
push
in
pop
fs
push
adc
push
aad
sub
call
inc
pop
xor
cltd
and
scas
mov
pop
fcoms
sbb
pop
lcall
inc
add
xor
aam
movsb
mov
fwait
or
aam
pop
jbe
lcall
ror
pop
inc
xor
pop
les
movsl
pop
fsubr
leave
or
adc
mov
int
mov
scas
mov
leave
push
popa
jmp
pop
push
test
popa
mov
sub
sti
xchg
mov
add
mov
cmp
pop
push
and
jns
test
adc
fisubs
cli
adc
fmuls
mov
clc
lods
in
out
fmull
insb
sti
insl
mov
pop
cmp
push
inc
das
clc
in
cmp
inc
mov
mov
and
dec
jb
stos
daa
cmp
xchg
push
dec
outsl
jecxz
lods
sbb
ror
add
push
dec
mov
mov
bound
insb
lods
cld
aaa
add
inc
cltd
pop
mov
sahf
call
inc
sub
mov
je
test
ret
or
sbb
test
push
daa
sub
std
sbb
gs
inc
mov
mov
mov
dec
mov
popa
lahf
push
ret
lcall
mov
sbb
cmc
sub
iret
pop
sbb
sbb
push
pop
mov
arpl
cmp
sbb
adc
fwait
aas
mov
incl
out
add
subb
dec
mov
mov
pushf
fs
add
movsl
ljmp
imul
xchg
mov
incl
pusha
push
jmp
cmp
push
jnp
dec
xchg
aas
lods
push
fs
pusha
cmp
cmpsb
loop
out
movsb
shll
subl
mov
fidivl
push
mov
cmp
add
and
divl
jmp
adc
ret
fstpl
and
push
iret
rorb
stc
mov
or
repz
sub
dec
cs
mov
sbb
into
les
lea
pop
push
cwtl
or
insl
adc
pushl
mov
jne
stos
cli
rcl
xor
jle
push
jbe
push
dec
mov
lahf
xor
sub
jne
test
aad
xchg
jle
jp
ja
pop
mulb
xchg
xor
fcom
xor
outsb
daa
jo
mov
nop
fistl
movsb
or
mov
mov
shrl
movsb
ss
ret
clc
fs
int3
ficoml
push
movsb
add
cs
fdivrs
cmpsb
adc
nop
comiss
cmp
in
in
inc
xchg
cmp
and
cld
xchg
add
out
add
fiadds
xor
lahf
and
loope
pop
adc
jg
int3
xchg
pop
and
jbe
int3
fs
add
sbb
and
dec
mov
inc
add
xor
out
fdivrl
mov
insb
xor
xor
xor
cwtl
das
mov
dec
add
mov
or
add
jo
testl
dec
in
lmsw
dec
mov
lret
cmpl
sub
loop
mov
negl
push
xor
mov
lcall
cmp
mov
cld
sub
mov
rcrl
xor
push
add
shll
mov
iret
sahf
sbb
in
fwait
push
scas
ljmp
mov
filds
sbb
lds
movsb
sbbb
lock
mov
out
adc
and
mov
sbb
xorb
jge
sub
push
fwait
into
mov
out
imul
das
or
std
out
mov
xchg
lcall
insb
jb
fimuls
je
xor
adc
pop
sbb
mov
jecxz
ljmp
sub
int3
xor
mov
cltd
test
dec
and
add
push
rolb
enter
sbb
and
sub
xchg
or
in
cs
sbb
aad
iret
cwtl
jge
sbbl
mul
test
scas
xor
out
add
push
lock
ljmp
push
insl
mov
xchg
push
imul
aaa
cmc
lods
iret
pop
mov
out
orl
jmp
add
test
sbb
into
jl
or
stos
mov
movsb
daa
push
add
insl
jo
ss
or
adc
mov
dec
pushf
xchg
cmpsl
mov
inc
rorl
mov
inc
adc
pop
add
push
insb
repnz
mov
stc
and
addr16
mov
repz
jns
clc
and
mov
lcall
mov
mov
mov
ret
movsl
adc
loope
mov
add
mov
mov
pop
pop
push
mov
ja
inc
lods
test
mov
cmp
mov
sub
pop
scas
pop
scas
aad
inc
cmc
bound
mov
stos
cmp
jg
or
test
ret
xchg
jo
dec
loop
sub
push
and
pop
imul
fbstp
shlb
ret
xchg
sbb
call
jg
cwtl
pop
xor
scas
dec
cmp
aas
sub
dec
enter
mov
xor
in
dec
aad
subl
mov
dec
and
testb
inc
ss
sub
outsb
cmpsl
fnstsw
lock
adc
aad
dec
leavew
inc
dec
scas
movsl
push
mov
addb
inc
jle
inc
mov
jmp
mov
inc
js
jl
mov
roll
sbb
add
fcomps
mov
jge
int
call
jge
daa
dec
ret
lea
sub
in
repz
jle
pusha
cli
mov
stos
daa
repnz
mov
jns
xchg
xchg
mov
dec
cli
mov
lods
sub
or
scas
mov
push
xchg
inc
dec
inc
pop
inc
jo
xor
xchg
jo
dec
sub
mov
call
adc
adc
loope
fbstp
gs
inc
loopne
mov
dec
imul
xor
repnz
or
inc
les
mov
xchg
inc
pop
fidivs
sahf
aaa
jge
sub
scas
dec
cmpsl
mov
inc
std
lock
jnp
loopne
cli
xchg
mov
xor
das
add
jnp
push
call
jo
and
jo
mov
popf
ja
lods
loopne
lret
add
cmp
mov
mov
iret
xor
mov
add
add
lods
ret
iret
ret
jg
out
imul
cmp
jnp
outsl
out
test
stos
imul
mov
inc
sti
pop
in
fsubrl
xchg
push
lret
push
sub
ljmp
rcrb
and
out
les
mov
xchg
cmc
or
pop
jle
loop
xchg
aaa
push
xor
int3
xchg
leave
fadds
xchg
aaa
sub
xchg
clc
loop
inc
push
cltd
into
cs
push
andb
sbb
nop
outsb
hlt
push
ljmp
nop
push
dec
mov
testb
sbb
mov
fwait
sbb
cltd
mov
lea
in
mov
loope
sbb
sbb
cmpsl
dec
or
loopne
aad
sub
lahf
sub
enter
xor
xor
loope
jge
outsb
jmp
ret
push
push
lret
or
inc
in
test
loopne
andl
loope
adc
and
xchg
dec
mov
pop
xchg
loope
fsubr
lods
inc
lea
mov
cmc
and
sub
mov
and
fdivr
xchg
jo
repnz
cwtl
popa
cltd
cli
popf
test
adc
out
ja
pop
sub
pop
fsts
test
or
lods
xor
bound
in
fistpll
push
push
in
popa
popa
in
sbb
pop
push
js
ds
out
repz
and
pop
or
mov
clc
fnstenv
fnstenv
jo
cld
mov
rol
call
fbstp
pushf
fwait
sahf
movsb
gs
int
pop
or
dec
imul
sub
jb
mov
negb
xor
add
mov
sub
add
jne
clc
nop
subb
imul
stos
xchg
fsubp
aam
mul
push
push
dec
fs
out
sbb
pop
jae
je
sbb
adcl
jmp
cmp
ds
jmp
int
dec
test
test
fwait
pop
sub
or
leave
nop
pop
loope
ds
sub
scas
adc
into
mov
sub
dec
divl
insb
and
ljmp
lock
cmp
jle
and
xchg
mov
pop
int3
enter
dec
pusha
sub
xchg
jle
mov
mov
lret
ror
or
push
or
inc
sub
add
lods
mov
cmc
cmc
sbb
push
mov
negb
leave
pusha
jo
cmp
lds
or
jb
lahf
mov
int3
xchg
cmp
mov
fidivl
ljmp
icebp
or
in
aam
pop
call
mov
pop
lods
mov
andb
jle
pminub
call
pop
jb
dec
mov
push
xor
mov
sbb
imul
add
jl
mov
adc
mov
gs
dec
pushf
and
stos
aas
fwait
xchg
xor
inc
sti
inc
sbb
inc
sbb
aad
sbb
jg
repz
inc
jae
sti
push
les
loope
sbb
xchg
sub
sbb
xchg
imul
call
push
push
cmp
outsb
jle
xchg
jnp
mov
insb
inc
aas
cs
enter
aad
cmp
lds
push
insb
sahf
popa
add
popf
popa
sti
testl
push
cld
sub
fwait
or
adc
xor
scas
push
mov
std
dec
xchg
xor
jle
adc
cltd
shrl
cmpsl
jp
repz
orb
cs
xlat
jo
cs
add
cmpl
cmpsl
push
sub
jl
jg
loope
std
add
in
fs
sub
mov
push
sbb
mov
cwtl
dec
cmp
pusha
sbb
dec
stos
adc
fldcw
mov
aad
std
cmpsb
adc
pop
push
sbbl
enter
xor
lea
pop
cmp
mov
push
stos
or
lods
jecxz
pop
popf
ja
inc
adc
es
pusha
dec
andb
cmc
adcb
sbb
mov
add
push
jecxz
cli
std
add
daa
aad
xchg
ljmp
cmp
out
decb
loop
pop
jmp
jl
fwait
mov
stos
adc
les
aaa
test
je
daa
imulb
inc
or
mov
in
pop
pop
scas
xchg
jmp
jnp
ja
mov
cmpsl
pop
icebp
leave
xlat
inc
outsl
push
enter
insb
push
cmc
int3
out
adc
add
outsb
sub
iret
sarb
jb
mov
ljmp
jbe
sub
call
cs
aas
pushf
pop
cmpsb
mov
jge
dec
pusha
xchg
xchg
out
dec
adc
mov
pop
cmp
pop
adc
sub
push
inc
ds
repz
adc
das
jnp
sbb
pop
mov
cld
in
xchg
movsb
mov
jo
add
or
ds
cmp
sbb
push
jge
scas
pop
lret
dec
adc
pop
sub
icebp
cmp
xchg
rcrb
stc
mov
movsl
push
sub
pop
cmp
testl
in
adc
in
rcll
add
inc
dec
dec
loopne
sbb
ffree
mov
scas
jg
xor
sti
out
movsb
roll
push
cmp
push
call
aas
cmp
loop
sub
adc
gs
mov
jo
xchg
push
adc
xor
push
adc
fcoml
jo
fs
dec
insl
or
shl
inc
mov
fbld
cmp
pop
pop
mov
jl
push
in
rolb
sub
lahf
mov
je
or
je
popf
dec
enter
mov
dec
mov
out
stos
xor
fisttps
sahf
call
push
mov
inc
mov
imul
mov
jbe
adc
imul
ds
loop
jmp
dec
push
mov
cwtl
jecxz
imul
je
push
adc
adc
adc
mov
xor
jp
fidivrl
xor
sbb
pop
xchg
subb
mov
lret
mov
push
xor
fcmovnb
lret
mov
push
dec
movsb
and
aaa
nop
and
cmpsb
neg
jo
xor
mov
mov
dec
xchg
movsb
flds
inc
lods
clc
jne
cld
xchg
cld
jnp
mov
cld
fldl
push
inc
stc
ret
add
ret
inc
mov
mov
bnd
adc
repz
xlat
hlt
stos
push
popa
rcl
scas
fsubp
mov
mov
arpl
lcall
mov
inc
icebp
jecxz
pop
mov
add
xchg
fdivs
les
adcb
xchg
daa
das
iret
mov
or
fists
jmp
stos
sbb
test
ss
push
stc
dec
and
jb
jecxz
lret
rorl
ja
cs
das
out
decb
mov
fst
jg
add
sbb
iret
or
imul
outsb
push
sub
pop
enter
stos
xor
add
push
test
xchg
xchg
aam
pop
mov
adc
cs
xor
dec
shll
cmp
mov
mov
repnz
dec
cmp
aam
orl
cmp
push
in
sbb
neg
sbb
add
sbbb
daa
adc
pop
in
mov
ret
push
dec
dec
rorb
add
mov
xchg
mov
es
inc
adc
loop
cmp
in
push
mov
and
pop
scas
xchg
jno
dec
xchg
mov
push
sahf
in
xchg
mov
rorb
add
outsl
popf
test
or
aas
stc
enter
mov
jmp
sarb
push
lods
push
jne
imul
push
sarb
adc
add
fdivl
test
mov
clc
addb
lods
push
rcrb
gs
pop
fwait
out
iret
mov
and
aaa
int
xchg
lahf
lods
push
movsb
pusha
push
dec
push
std
xchg
call
data16
aam
cmp
push
nop
addps
je
mov
adc
cmp
jg
mov
mov
in
insl
jns
adc
lea
int
fldenv
aas
push
jmp
jmp
enter
and
pop
or
lea
fdivl
xchg
repnz
cmpl
mov
pop
cs
stos
mov
lcall
int
push
push
inc
push
in
mov
and
push
aaa
fdiv
or
loopne
hlt
fs
fistl
push
iret
mov
in
out
inc
adc
loope
mov
pop
movsl
mov
ss
mov
ret
xchg
outsl
and
nop
insb
rcl
sbb
xchg
int3
fs
mov
fistl
mov
das
fstps
popa
xor
sub
mulb
mov
and
add
and
insb
dec
adc
gs
pop
ffree
jle
xor
add
pop
sub
adcl
and
test
add
mov
cmpsl
hlt
jb
inc
jo
scas
inc
push
cltd
adc
repz
xor
gs
ljmp
fstpt
cld
lret
cli
pop
mov
enter
or
mov
mov
in
in
cmc
mov
fdivrs
out
pop
and
aas
jg
xlat
jne
lea
pop
sub
push
fidivl
daa
fwait
xchg
sub
pop
scas
pushf
cmp
lods
push
add
jmp
daa
adc
loop
ja
jg
jns
xor
cmp
xchg
mov
pop
xchg
push
xchg
aas
imul
outsb
aad
divl
stc
mov
jnp
mov
fidivl
mov
enter
fbld
mov
cltd
jbe
fistps
xlat
mov
or
dec
cs
push
incl
mov
push
xor
es
pop
fnstcw
lret
sbb
cmp
bound
sub
cmp
movsl
inc
cmp
cld
jecxz
mov
dec
sbb
test
in
mov
scas
cltd
xchg
sbb
stc
imul
push
mov
pusha
enter
test
sbb
pop
addr16
mov
mov
fcom
adc
mov
pop
ds
sub
gs
dec
jmp
sub
xor
in
or
xor
sub
dec
or
jbe
pop
cltd
frstor
daa
int
pop
xor
scas
int3
movsb
sbb
aaa
lock
mov
pop
lret
pop
scas
xchg
push
xor
sahf
arpl
rcr
cwtl
fs
push
mov
sbb
sub
push
dec
popa
repz
xor
sahf
inc
jmp
and
and
jns
cmp
test
cmpsb
cmpsb
lock
mov
sub
fdivl
push
jbe
shlb
adc
insl
cmpb
lret
stos
or
pop
push
lds
add
push
jns
add
pusha
mov
jp
out
movsl
push
pop
jbe
cmpl
out
jle
push
xchg
scas
je
jl
push
jl
mov
mov
pop
shl
in
in
dec
lret
push
dec
fisttpl
in
inc
adc
sub
es
push
pusha
outsl
xchg
jnp
mov
lret
sub
push
sbb
outsl
in
in
sti
and
xor
pop
adc
enter
es
out
push
xor
rep
add
ret
ret
addl
pop
xchg
das
xchg
stos
insb
mov
adc
insb
mov
das
pop
addl
arpl
and
and
and
fwait
repnz
imul
dec
sbb
mov
jo
dec
fstpt
out
jmp
jmp
sbb
dec
pushf
and
mov
pop
sbb
adc
adc
cwtl
in
xlat
cli
mov
mov
lret
pop
mov
test
xlat
sarl
imul
fldl
xchg
pop
xlat
out
push
fsubs
xchg
loop
addl
jl
imul
xor
out
dec
xchg
outsl
int3
adc
xchg
xor
mov
mov
inc
mov
insl
movsl
cmpsb
or
andl
clc
in
repz
xlat
shrb
mov
test
stos
in
mov
jae
add
lea
stc
das
test
mov
add
sarb
or
pop
and
int3
inc
cli
sarw
mov
jge
rorb
popa
leave
ss
fnstsw
repz
pop
cld
cmc
jno
jbe
mov
stos
popf
cmpb
fcmove
divl
cmp
je
push
ja
call
mov
inc
cmp
add
pop
pusha
sti
lods
mov
mov
cmpsb
jnp
push
sub
mov
popa
or
emms
leave
add
jg
mov
mov
into
mov
mov
cmp
xchg
mov
pop
inc
add
dec
and
imul
jle
and
outsl
in
pusha
mov
push
shlb
push
xchg
or
out
neg
inc
fsubs
cmp
inc
jno
push
inc
in
scas
push
dec
xchg
and
or
dec
jns
js
inc
outsb
shl
test
dec
mov
mov
adc
int3
add
outsl
mov
cld
loope
dec
ficompl
jle
adc
jae
jl
xchg
and
in
sbb
push
or
xchg
pop
test
mov
mov
mov
cmp
fcmovbe
lahf
out
lcall
cmpsb
in
fdivl
sub
inc
xchg
mov
mov
push
mov
sub
into
lcall
jo
xchg
push
enter
cs
ds
mov
addr16
inc
push
scas
and
xchg
mov
mov
fisubrl
mov
mov
push
call
jmp
push
in
mov
loopne
mov
sub
pop
xlat
aam
and
mov
popa
not
andb
addr16
pushf
insb
xchg
dec
ds
es
sub
xlat
pavgw
dec
jle
out
es
add
adc
in
adc
cmp
call
cmc
cmp
xor
and
add
jl
fs
lret
in
mov
iret
xchg
xchg
out
push
jno
orl
mov
push
int
add
mov
pop
sbb
xchg
fwait
int
out
iret
adc
js
xor
fidivl
lcall
mov
inc
sub
fs
mov
inc
sub
push
dec
insb
dec
xlat
outsl
orl
mov
mov
jl
dec
and
arpl
ret
or
subb
cmp
jne
inc
stc
rcrb
mov
rcrl
sbb
popf
jecxz
std
ret
fdivl
bound
mov
mov
lahf
pop
aam
ja
arpl
sbb
in
sbb
jo
sub
pop
pop
adc
jo
or
outsb
sarb
dec
or
xchg
mov
mov
cmp
or
xchg
fnsetpm(287
cli
inc
push
out
xor
mov
lret
xchg
mov
data16
in
push
ficomps
and
dec
pop
push
enter
mov
pop
inc
subb
mov
fs
hlt
js
ja
and
mov
pop
sub
dec
out
sbbl
adc
sbb
inc
add
push
shr
sub
loopne
out
and
inc
pop
pop
jmp
leave
jecxz
fistpl
pusha
out
xor
outsl
dec
jnp
shl
adc
loop
xchg
push
inc
ds
pop
jmp
adcl
or
in
mov
add
std
sarb
mov
clc
outsl
push
rcr
adc
pop
pop
add
repz
fstpt
in
adc
sub
repz
mov
cs
mov
jmp
popf
pop
mov
movsb
push
repnz
out
sbb
jl
gs
fadds
hlt
inc
shll
int3
jns
add
idivl
or
mov
lcall
jae
cld
pusha
mov
mov
insb
dec
ret
mov
leave
jb
in
sti
data16
cmpsl
lfs
addr16
push
imul
xor
pusha
mov
test
in
loopne
rclb
jo
int3
cltd
sub
into
cmp
mov
xchg
stos
fsubl
mov
mov
ret
xor
cmp
xlat
pop
test
mov
sub
and
imul
push
lcall
and
dec
lds
mov
js
dec
fcmovb
ds
aaa
addb
mov
pop
cvttps2pi
mov
mov
pop
add
ret
jle
cs
hlt
es
fstl
mov
mov
popa
call
mov
sub
adc
shlb
test
jg
dec
mov
movsl
popa
sbb
popl
outsl
arpl
sbb
add
adc
mov
scas
popa
dec
loopne
add
cmpsb
and
or
mov
sbb
cmp
jge
repnz
daa
test
mov
inc
rolb
dec
jae,pt
inc
jns
jb
jmp
test
pop
adc
cmp
fnstsw
imul
add
mov
xchg
jg
adc
das
loope
lahf
popf
mov
add
sbb
adc
test
ds
xchg
scas
int3
mov
cmp
in
mov
mov
clc
popa
repnz
cmp
iret
inc
sub
or
std
aas
fmuls
out
out
sub
jae
int3
repz
movsl
pop
and
inc
jg
push
add
xor
push
lret
inc
pop
hlt
sbb
pop
pop
sub
aad
dec
gs
es
pop
lcall
fstsw
xor
testl
push
fldt
inc
mov
test
jo
jae
xchg
data16
mov
loope
mov
inc
test
les
push
jae
and
sbb
or
sarl
inc
lods
xchg
lods
and
jno
sbb
push
or
xchg
xlat
push
jmp
aaa
jle
mov
mov
stos
mov
repz
mov
mov
movl
cwtl
lret
adc
xchg
cmp
xchg
popf
outsl
scas
mov
push
stos
lahf
adc
aad
add
mov
int3
enter
les
cld
push
imul
xor
xchg
sete
xchg
lods
rcrl
mov
movsb
mov
or
push
mov
add
sbb
nop
mov
das
xor
pop
dec
push
cld
push
mov
icebp
lds
and
pop
test
in
push
mov
test
adc
mov
loope,pn
adc
arpl
adc
jae
push
popa
add
dec
push
movsb
cmp
dec
imul
fcoms
xchg
or
or
mov
inc
test
repz
adc
jecxz
adcb
lahf
ffreep
jle
fwait
xor
scas
pop
ljmp
out
push
push
outsl
ja
dec
bnd
pusha
push
xchg
stc
mov
xlat
cli
fnstcw
push
adc
fsub
cmp
fcmovu
inc
lret
xlat
enter
scas
aaa
out
lock
add
shl
mov
adcb
fdivrl
jge
cmp
inc
and
push
aas
into
mov
roll
mov
and
push
subl
xchg
jecxz
shrl
or
sub
movsl
jne
mov
inc
and
call
notl
jo
pop
fidivrl
xchg
push
jo
les
and
imul
mov
add
cmp
mov
dec
leave
sub
inc
test
leave
and
mov
pop
outsl
ret
pop
cmp
scas
loopne
outsl
dec
test
push
or
int
lock
add
std
add
stos
mov
mov
dec
call
dec
jmp
adc
loop
ss
lods
shlb
sbb
cs
mov
aad
and
out
hlt
movsl
test
cmp
aas
sub
adc
pop
xchg
repz
in
imul
int
xchg
movsl
xor
or
div
adc
mov
mov
repz
xor
jne
loope
xor
adc
cltd
add
test
adc
stos
out
and
cmpb
lret
add
push
sarb
call
stos
add
addr16
mov
dec
cmc
jno
pop
scas
mov
shr
and
loopne
repnz
mov
mov
mov
inc
popf
push
hlt
push
sbb
and
scas
mov
or
xchg
outsb
sbb
mov
add
imul
inc
jno
xchg
test
ret
aaa
mov
rol
stos
cltd
push
popf
or
sahf
lcall
add
mov
jl
imul
and
mov
testl
rcl
pusha
popf
mov
shr
aaa
xchg
inc
jnp
mov
and
out
insl
lock
cmpsb
dec
inc
mov
das
testl
mov
sub
xchg
sbb
inc
stc
popf
adc
pop
dec
in
xor
mov
bnd
test
add
and
cmpsl
adc
fstpt
xlat
andl
imulb
in
sbb
cmp
stos
lcall
adc
mov
jg
jmp
mov
leave
push
sar
fimuls
mov
mov
ds
scas
test
jecxz
rolb
xchg
push
ds
or
lret
pop
inc
inc
test
repnz
cld
mov
adc
jecxz
cmp
or
jp
lahf
aaa
sar
push
add
inc
pop
jecxz
dec
pop
lahf
cmp
outsb
iret
stc
test
fiadds
das
je
movsl
cwtl
mov
mov
lahf
jge
jae
inc
add
add
sub
mov
insb
inc
mov
ret
mov
std
sub
ja
loope
call
pop
mov
cli
fs
testl
pop
mov
push
aad
cli
das
cmpsb
cmp
or
dec
test
stos
jle
jae
dec
cmp
push
mov
imul
es
lods
jmp
dec
pop
jno
inc
dec
cmp
sahf
inc
dec
out
hlt
ljmp
sbb
mov
and
or
mov
mov
pop
dec
je
aas
lret
xchg
shrl
lret
push
or
jge
mov
cmp
lret
mov
gs
add
movsb
and
fucomip
dec
inc
addl
jp
out
pop
push
jmp
pop
jb
push
inc
pushf
add
mov
xor
lods
mov
leave
dec
ljmp
sahf
repz
adc
push
push
mov
or
inc
test
mov
mov
jb
ret
xchg
jb
into
or
aam
jo
cmp
out
sbb
test
movsb
repnz
pop
fucom
out
ss
loop
push
pop
jae
pop
mov
mov
testb
mov
pop
add
insb
xor
out
outsb
icebp
sbb
icebp
std
das
das
mov
add
insb
lds
icebp
jge
or
adc
gs
bound
dec
iret
stos
out
xlat
jmp
and
add
pop
pop
pop
in
cltd
jmp
fimull
mov
ror
sbb
mov
add
cmpsb
and
sub
jg
mov
jns
cmp
dec
out
mov
cmpsb
xor
or
fisubl
scas
ds
fnsave
scas
jmp
or
xor
add
and
mov
pop
push
push
adc
fs
and
push
pusha
imul
dec
mov
movsb
stos
test
lods
and
sub
stc
les
addr16
clc
in
dec
xor
mov
jo
mov
insl
mov
fistpll
decl
les
lods
inc
add
fiaddl
and
or
or
xor
adc
dec
fst
and
test
int3
mov
mov
movsl
movsl
in
inc
std
aad
cmp
cmp
sub
std
sub
lods
fstl
and
and
movsb
insb
incb
or
mov
andl
addl
jp
push
lret
mov
push
pop
mov
xor
xlat
hlt
shll
xchg
sti
add
bound
jg
cmp
push
out
std
ds
aad
push
push
pop
pusha
mov
or
xor
pop
xor
jge
push
push
repnz
scas
fildll
jle
imul
loopne
daa
mov
fbld
mul
xchg
jbe
and
imul
pop
arpl
arpl
loope
test
jge
mov
mov
xchg
xor
rcrb
jns
sahf
mov
ret
jmp
mov
add
and
push
mov
inc
cmp
in
int3
jl
test
push
push
xchg
mov
xadd
popa
test
fs
adc
push
xor
jns
data16
inc
or
mov
fiadds
cltd
in
fldl
not
sub
lret
imul
shrb
je
sbb
imul
sub
cltd
add
out
ret
mov
cmc
sbb
xchg
dec
pushf
jmp
ds
or
in
mov
mov
adc
repnz
jo
mov
inc
xchg
dec
ret
xchg
dec
lahf
dec
dec
das
hlt
push
out
mov
and
iret
xor
cltd
mov
pop
cmp
loopne
and
push
adc
inc
xor
cmp
fwait
scas
sbb
sahf
std
aam
push
mov
loope
icebp
dec
clc
inc
mov
into
out
push
mov
cmpsb
jle
xchg
or
pop
aad
out
int
jp
lods
insl
sbb
arpl
call
add
jno
sbb
sub
pop
iret
or
hlt
and
or
push
xchg
mov
in
pusha
sub
and
xchg
mov
scas
incl
push
xchg
mov
stos
or
adc
ja
test
hlt
jbe
daa
xchg
ss
ficompl
lahf
push
push
icebp
scas
sahf
pop
fmuls
out
lea
sub
popa
xchg
sbb
jmp
out
arpl
or
addr16
fcmovu
xor
mov
popfw
subb
add
andb
aam
sarl
jecxz
icebp
shll
in
out
add
add
rcrl
nop
ss
mov
cltd
sbbl
inc
jb
add
xor
xchg
jmp
rclb
sbb
scas
mov
mov
cmp
rcrb
jecxz
sub
sub
gs
push
xchg
push
mov
pop
js
jo
lea
scas
mov
stos
pushl
insb
mov
jmp
xchg
inc
cmp
mov
pushf
push
mov
roll
sub
xchg
jecxz
and
inc
iret
pop
and
cwtl
scas
movsl
fmul
push
adc
cli
pop
jo
mov
xchg
jnp
and
aaa
fnstsw
gs
or
jp
cwtl
push
cld
push
xchg
mov
jnp
add
xor
inc
outsl
out
xchg
movsb
pop
push
and
inc
testb
inc
pop
mov
pop
hlt
cs
jmp
adc
into
pop
data16
mov
ds
xchg
xchg
mov
ds
ret
mov
adc
dec
xorl
les
sarb
out
lret
loope
or
pop
mov
fnstcw
mov
js
rcrl
mov
or
dec
into
inc
inc
mov
addr16
test
stos
popa
sub
add
xchg
xchg
dec
sbb
sub
pop
mov
call
xor
push
das
pusha
repz
jno
lods
orb
sub
pop
out
add
faddl
iret
cmp
sbb
xlat
mov
shrl
sbb
jnp
inc
addl
in
inc
adc
imul
mov
in
popf
nop
js
lods
fmulp
das
xchg
push
cwtl
or
xchg
pop
xchg
test
popf
adc
cmpsl
shr
sbb
scas
leave
add
shrb
push
sub
xor
adc
cli
mov
xchg
adc
sub
inc
scas
mov
pop
outsl
adc
lea
dec
stc
jno
pop
inc
inc
mov
ret
outsl
inc
dec
add
std
mov
xor
inc
and
arpl
pop
nop
xchg
sti
paddsw
mov
cmp
dec
jle
gs
inc
xor
insb
gs
and
adc
jp
les
or
push
add
test
nop
mov
mov
or
dec
add
xor
push
test
nop
push
dec
ja,pt
and
inc
gs
mov
loope
mov
dec
shlb
and
mov
cli
idivl
orl
jecxz
into
lods
push
mov
adc
fisubrs
mov
push
outsb
lods
push
paddq
mov
cmpsl
popa
xchg
pcmpgtb
shlb
inc
sarl
roll
and
jbe
ja
ret
repnz
lods
mov
pop
dec
dec
daa
and
cmp
sti
inc
lds
jecxz
xchg
pop
jg
sbb
or
xchg
sub
lock
dec
adc
dec
inc
xchg
std
aaa
and
shll
add
jmp
pop
cmc
inc
add
mov
cli
rcrb
insb
add
jp
sbb
push
test
fidivrl
jo
or
sbb
mov
push
fsub
ja
es
cwtl
stos
outsb
push
cltd
movsb
test
dec
cltd
roll
mov
lock
jb
and
push
les
sbb
adc
ret
imul
pop
cmpsl
stc
xlat
daa
jmp
xor
mov
or
inc
dec
adc
loope
popa
pop
mov
aam
scas
insb
sub
cmovne
xchg
loope
push
add
sub
mov
sub
cmpsb
inc
fwait
rcrb
nop
xchg
xlat
xchg
idivl
sbb
add
stos
sub
mov
into
filds
js
mov
loop
pushf
inc
bound
jae
int
jns
mov
jle
ss
jno
rcrb
pop
frstor
imul
mov
stos
int
xorl
rolb
ljmp
std
mov
dec
push
push
dec
sub
out
or
inc
pop
sub
cltd
and
and
stos
inc
mov
in
mov
inc
dec
adc
pop
jb
loope
cli
sub
cmpl
and
bound
push
mov
out
das
sbb
aaa
push
out
mov
cmp
add
lcall
adc
dec
rcrl
jo
push
stos
add
jae
ljmp
pop
push
xor
loopne
inc
mov
fwait
das
mov
sti
jne
jl,pn
enter
cmp
icebp
icebp
xchg
mov
sahf
jecxz
and
mov
push
push
adc
mov
jp
leave
lret
and
in
les
and
adcb
cmp
pusha
jae
sub
hlt
sub
enter
inc
sub
dec
cmp
sbb
fnsave
push
jmp
pop
push
ja
and
sbb
pop
push
and
xchg
stc
movsl
mov
and
mov
movsb
mov
jb
push
push
mov
shlb
out
jg
jg
add
fisttps
sub
incb
or
sbb
adc
cwtl
gs
or
push
dec
or
mov
sub
push
pop
aad
cmpsb
sar
out
mov
mov
sahf
insb
iret
pop
insl
imul
pop
inc
and
push
ret
mov
add
rcrb
rorl
and
push
lds
call
mov
pop
outsl
lret
enter
adc
sbb
mov
popf
fxch
dec
mov
or
sahf
push
clc
nop
fmul
adc
mov
mov
cmc
pop
or
addr16
xchg
adc
lahf
leave
pusha
adc
cmp
jae
adc
clc
sbb
or
bound
push
pusha
adc
hlt
repnz
pop
fidivs
adcb
sub
xlat
mov
outsb
iret
rorb
pop
iret
popf
xchg
and
push
sub
adc
stos
inc
xchg
popa
pop
mov
dec
test
out
push
cmp
xchg
jae
mov
lcall
cmpsb
inc
or
mov
and
outsl
out
xlat
sbb
pop
adc
insl
jge
jp
cs
stc
cmp
aam
cmp
rclb
std
sub
loope
outsb
lahf
js
cmp
jne
and
in
or
xchg
daa
jmp
popa
mov
stos
push
testb
mov
jg
jmp
push
push
sbb
jle
or
dec
in
mov
push
aaa
cld
or
ja
mov
jmp
loopne
out
lcall
xchg
push
gs
popf
js
adc
lahf
cmp
fisttpl
fisubs
xchg
popf
addb
es
xor
jbe
mov
push
mov
jl
pop
nop
xor
dec
inc
stos
fstpt
mov
sbb
or
popa
sub
or
lods
add
inc
xchg
fcmove
xor
orl
mov
add
nop
add
or
je
adc
xchg
inc
sub
repz
xchg
lret
dec
add
or
cmp
xchg
add
mov
sti
xchg
push
jno
clc
xor
or
sbb
sub
mov
lea
mov
inc
dec
fiaddl
adc
mov
movsb
sub
add
nop
inc
inc
mov
or
lahf
jbe
xlat
lds
imul
xchg
cwtl
mov
inc
xor
xchg
pop
stc
ret
div
arpl
sarl
pop
out
cmc
cmp
das
sub
cmp
aaa
pop
int
repnz
mov
es
inc
or
imul
rcrl
xchg
js
subl
mov
jno
jae
imul
mov
mov
fwait
and
push
jns
data16
or
xchg
repz
mov
scas
loope
dec
rclb
mov
lcall
inc
scas
mov
push
add
cli
nop
scas
mov
outsl
push
push
shll
adcb
loop
daa
subl
aad
jg
cwtl
pop
cmpsb
jne
rorl
jae
sub
cmp
imul
cmp
iret
dec
aas
pop
cmp
leave
sub
or
adc
fisttps
jae
test
mov
push
icebp
lods
sub
aad
cmc
adc
sub
addl
xchg
sub
rcll
jge
ss
cmp
mov
std
lret
adc
xchg
mov
movsl
fucom
aas
or
into
les
cmpsb
ljmp
push
xchg
loop
fcomps
leave
cld
xor
cwtl
test
lahf
dec
pop
dec
lret
fsubrs
sbb
lret
cmp
and
pusha
inc
mov
lods
into
into
mov
mov
push
fisubs
xlat
arpl
in
enter
jne
add
mov
shll
push
mov
mov
out
pop
into
pop
into
sub
into
cltd
or
pushf
fcom
lds
loope,pn
adc
iret
mov
scas
insb
xor
incl
push
jns
bound
add
scas
mov
in
std
orb
sarl
lds
repz
push
mov
pusha
inc
xchg
sub
test
ja
test
dec
fs
cwtl
dec
jb
loope
push
inc
stos
adc
sub
push
xor
mov
pop
insl
pop
adc
popf
cmp
adc
test
or
test
mov
and
jbe
shrb
sub
ja
std
sub
addr16
fbld
xor
sub
push
mov
test
dec
xchg
inc
imul
out
pop
push
sti
sub
pop
lretw
mov
and
fildll
xor
mov
pop
push
mov
pop
ds
adc
mov
or
cmpsb
mov
sahf
mov
push
add
test
aas
aaa
mov
mov
push
sti
mov
stos
aad
decl
fbstp
xor
cmp
mov
loope
int
pop
mov
mov
sbb
inc
arpl
out
and
xor
leave
inc
jl
mov
adc
pop
outsl
iret
repz
cld
movsb
mov
jae
daa
jg
mov
cmp
stc
mov
fcom
dec
adc
xchg
fsubrl
movsb
adc
lret
inc
dec
jne
pop
and
mov
cltd
fisubrs
adc
add
mov
cmp
js
mov
rorb
jl
add
xor
mov
fs
and
sub
add
out
cltd
mov
jns
notl
adc
or
jnp
hlt
and
jecxz
xchg
cmp
cwtl
lock
push
and
fwait
sbb
rol
pop
loope
clc
loope
fsubs
push
jle
dec
aad
fidivl
cmp
cmp
xorl
push
xor
cwtl
repnz
xor
sub
sbb
mov
cmp
cmpsb
push
aas
xor
mov
inc
or
push
cmp
dec
fistpll
jae
xor
sbb
push
lods
inc
jecxz
jns
stos
jb
jb
pusha
in
mov
pop
push
je
imul
test
outsl
add
jle
pop
jno
mov
shl
cld
push
ss
mov
flds
cwtl
inc
notl
push
pop
push
inc
outsb
in
lds
in
add
mov
or
sti
cmp
out
ret
xchg
into
les
mov
aaa
nop
jmp
or
inc
ds
cld
adc
jmp
lahf
jp
fldl
inc
out
les
or
xchg
leave
lcall
push
testb
inc
add
mov
xor
loope
push
dec
stc
xchg
aaa
cmp
xchg
imul
add
fadds
lret
incl
ja
les
cmp
push
out
addb
into
mov
xchg
ja
mov
jo
neg
mov
sub
rcl
cli
icebp
stc
adc
clc
jb
lcall
adc
push
hlt
mov
lea
movsl
sbb
rcl
pop
cmpsb
sub
push
mov
jb
or
pop
jne
mov
adc
sub
cmp
mov
push
mov
pop
pop
in
fidivrs
jne
xchg
dec
lods
add
in
jmp
clc
js
mov
sub
jg
pop
sbb
mov
mov
mov
rclb
mov
int
orb
jge
and
hlt
sub
fcompl
lret
cld
xchg
mov
dec
cli
sbb
xchg
inc
push
adc
sbb
inc
or
dec
scas
bound
in
pop
or
lods
pop
sbb
ror
xor
xor
sbb
lea
stc
inc
mov
sbb
push
es
je
sub
repnz
imul
pop
pop
popl
push
xor
xlat
push
js
xor
in
dec
adc
dec
lods
xchg
or
inc
xchg
xchg
adc
mov
out
ucomiss
mov
out
inc
mov
scas
and
push
shll
jne
bound
xor
cmp
ret
adc
int
fisubl
cmpsb
in
and
push
out
mov
popa
mov
cltd
ret
and
add
jnp
pusha
clc
dec
mov
mov
les
test
jg
xor
popf
divb
push
stos
sub
cmpsb
xchg
push
xor
pusha
es
mov
mov
xchg
pop
add
cmpsl
inc
pop
jle
jb
inc
adc
fsubl
hlt
jnp
add
inc
or
mov
sahf
cmp
into
int3
ja
hlt
cmp
outsb
fs
push
dec
add
addr16
or
repnz
cmc
pop
xchg
mov
arpl
hlt
inc
fsubrl
adc
pop
cmc
push
dec
xor
mov
add
push
mov
or
imul
cmp
cmpsb
jle
imul
insb
dec
mov
es
inc
dec
add
loop
pop
ss
inc
lret
in
shll
pop
cmp
out
ja
dec
cltd
lret
jecxz
jl
iret
test
and
test
fcoms
sub
xor
inc
sbb
scas
sub
cli
add
cmp
scas
pop
cmp
add
sbb
test
dec
icebp
pop
rorb
push
push
mov
mov
jns
std
bound
fiadds
mull
pop
push
and
push
push
pop
in
in
mov
push
fidivs
jp
stos
xchg
movsl
inc
adc
pop
pop
pop
repnz
sub
subb
xchg
xchg
aas
rcrl
adc
mov
rcll
lock
mov
push
xor
cmc
ja
or
inc
xchg
adc
xchg
push
jbe
lret
test
gs
mov
or
push
add
mov
mov
xlat
cs
pushf
arpl
push
mov
mov
sbb
hlt
push
or
mov
roll
scas
mov
add
xchg
stc
jl
out
jl
xchg
sbb
push
leave
mov
vmwrite
mov
mov
mov
cmp
adc
ja
aam
xchg
mov
mov
fwait
cmpsl
popa
jg
data16
and
popl
or
xor
cmp
jmp
mov
jae
add
insb
sti
movsb
popf
inc
gs
pop
mov
mov
or
jecxz
sbb
in
test
xor
movsb
sbb
mov
push
dec
test
roll
push
int3
cltd
jge
and
das
mov
data16
inc
loop
roll
sub
adc
push
add
jle
sar
push
inc
dec
repz
cs
cmp
mov
inc
inc
lahf
jp
aad
arpl
popf
sub
sbb
rclb
out
sbb
mov
adc
cmp
and
test
test
push
rcr
mov
shr
fmul
out
insb
pop
int
movsl
adc
out
push
lahf
dec
dec
mov
lcall
in
mov
rcrl
jmp
push
fwait
rcrb
adc
dec
adc
into
loop
clc
pushf
in
lahf
sbb
inc
mov
fnstenv
bound
ljmp
mov
jns
adc
fwait
imul
rcll
leave
mov
aad
dec
aad
aam
jp
repnz
add
outsl
jb
sub
sbb
dec
repz
jb
addr16
dec
add
cmpsb
fistps
or
jl
push
dec
push
jl
mov
xchg
push
lcall
scas
iret
sub
sub
cld
repnz
xor
push
int
cmpsb
dec
enter
push
repz
daa
std
movsb
and
add
or
lods
inc
aam
sub
out
lahf
xorb
jg
lret
push
push
pushf
xor
bound
inc
mov
das
push
lahf
sbb
ss
add
mov
xor
sub
pop
scas
or
dec
adc
xor
mov
mov
dec
cwtl
out
cltd
mov
mov
mov
gs
out
sahf
jbe
pop
cmp
sbb
jg
mov
jge
adc
dec
sbb
and
and
dec
xchg
addr16
xchg
add
rorb
je
fisubs
pop
cmp
push
pop
inc
sbb
lds
movsl
mov
lret
fcomi
in
test
int
xchg
and
jmp
or
mov
out
inc
xchg
mov
divb
adc
dec
or
nop
nop
faddl
pop
push
mov
pop
push
out
rcr
dec
add
jno
addl
xchg
int
inc
les
and
roll
and
cld
inc
outsl
cmp
dec
sub
mov
fstps
add
and
sbb
popf
xor
bnd
push
scas
jbe
pop
push
push
cmpsb
xchg
scas
loopne
xchg
js
dec
cmp
mov
push
insb
mov
aaa
popf
repz
out
in
adcl
loop
sub
test
adc
cwtl
movsb
cmpsl
dec
xchg
adc
lea
clc
sti
testl
adc
fsubp
add
adc
notb
mov
inc
ficomps
adc
cmp
cmp
jbe
push
clc
cmp
andl
int
xchg
dec
pushf
jbe
xchg
mov
test
sub
popa
xchg
ja
movsb
and
xor
or
jnp
cmp
jae
pop
js
jae
lea
or
jmp
cld
fcomps
in
pop
aas
pushf
or
cmp
jae
adc
sbb
pop
adc
iret
pushf
aaa
imul
push
test
inc
out
cmpb
fs
cmp
pushf
js
sbb
add
sub
xor
mov
inc
leave
testb
adc
flds
xchg
push
ljmp
mov
scas
out
lods
mov
mov
dec
in
out
jp
lds
pop
add
mov
jnp
and
xchg
call
rclb
fwait
jle
test
mov
popf
ja
mov
xor
push
jle
pop
mov
in
mov
testl
inc
jo
lret
mov
lds
dec
sub
cmc
shrb
jecxz
sahf
xchg
and
mov
xchg
sub
imul
jp
lahf
push
pop
arpl
das
loope
rol
outsl
dec
push
stc
adc
dec
pop
out
gs
pop
fidivrl
mov
lods
in
jge
mov
aas
into
push
pop
cld
icebp
mov
lret
in
orb
sbbl
or
nop
mov
out
pushf
ljmp
push
mov
pop
int
sub
pop
jmp
nop
es
pop
and
mov
stos
data16
jge
sub
loop
addb
push
mov
mov
jbe
jmp
jbe
xor
pop
mov
in
das
dec
in
pusha
hlt
clc
pop
out
in
or
iret
ja
pop
xchg
mov
std
lcall
add
js
jns
jmp
mov
repnz
pushf
subl
jb
dec
addl
pop
push
mov
daa
sti
pop
add
adcl
daa
dec
jns
push
pusha
jbe
stos
add
lods
sub
pop
pusha
push
push
je
cmp
xchg
aad
pop
fmul
fisttpll
push
mov
add
adc
add
push
xchg
mov
push
in
xchg
stos
push
jns
cmp
outsl
scas
ret
sahf
mov
mov
dec
sbb
jae
out
stos
ror
and
in
ja
test
roll
insl
jecxz
jecxz
xchg
pop
sbb
ret
xchg
dec
jae
xchg
add
cmp
add
cmp
push
push
rcrl
pop
xchg
stc
jmp
xlat
xchg
out
inc
pop
out
sub
sahf
leave
xor
out
into
push
cli
es
notl
add
cli
les
mov
mov
pusha
jge
addr16
lds
mov
cmc
addl
daa
jecxz
mov
add
xchg
sbb
in
icebp
xchg
rclb
xchg
push
bound
dec
aaa
incl
xchg
push
xchg
dec
inc
pusha
mov
lret
mov
pop
icebp
loop
add
aam
addl
push
lock
mov
and
sub
iret
push
mov
dec
xchg
mov
insb
cmp
cwtl
inc
fwait
repnz
mov
or
mov
test
pop
fildll
push
cmp
sbb
shl
out
mov
or
push
xchg
js
sti
shl
mov
pop
pop
adc
dec
push
arpl
adc
nop
jne
lods
cs
inc
out
xlat
pusha
scas
push
das
sbb
pop
jns
mov
cmc
data16
in
pop
lahf
jno
lock
fiadds
mov
shrb
jnp
cltd
mov
mov
sti
leave
cmp
lahf
inc
push
jo
pop
xchg
mov
inc
add
repz
lock
ret
inc
call
xchg
popa
jbe
add
sarl
faddp
dec
add
loopne
pop
mov
adc
add
fwait
xor
pop
ret
sub
test
cld
out
test
mov
or
inc
popf
dec
and
cli
fld
test
sbbb
cld
or
push
repz
repz
jb
jp
inc
adc
cmp
xchg
or
cmp
jne
ss
jmp
xchg
jmp
pop
fnstenv
lods
mov
mov
xchg
jnp
shl
adc
cwtl
or
in
xchg
cmovl
xchg
dec
rcl
mov
shll
cmp
cmp
ret
xchg
cmpsl
sub
imul
in
call
dec
pop
fldenv
cmp
fs
fnstsw
or
xchg
sub
les
lods
addl
mov
cmp
adc
lods
loope
jg
loopne
cmc
push
xor
mov
stos
js
mov
cmp
xchg
mov
test
pop
or
addb
js
xchg
push
push
sbb
inc
outsb
jp
sub
adc
fdivl
stos
mov
fistpl
dec
loopw
mov
mov
sti
and
jne
arpl
mov
hlt
cmpsl
in
add
cmp
ljmp
pop
aad
jns
mov
or
add
cld
in
xchg
mov
loopne
or
mov
orb
repz
test
push
incl
and
and
mov
mov
ret
push
add
adc
out
xchg
jns
test
or
addr16
mov
stos
adc
xor
das
loop
imul
mov
fwait
aam
sub
push
and
out
mov
sahf
inc
fstp
cmp
lds
sub
dec
pop
ret
pushf
jg
divl
jle
mov
cmp
mov
in
inc
or
sbb
stos
mov
sbb
dec
mov
xchg
test
add
fcmovnbe
sbb
shrl
add
jns
or
dec
subl
jmp
fsub
cmpsl
inc
push
push
sar
xchg
and
aas
xor
popl
out
nop
cld
adc
add
fstl
fld
nop
pop
mov
jb
arpl
xor
fldt
and
cmpb
lahf
xchg
sbb
xor
fidivrl
push
xlat
pop
sbbl
cmp
pop
sahf
mov
mov
cli
mov
ljmp
lock
dec
stos
lea
lcall
ret
push
cmp
xor
add
xlat
push
push
jle
mov
jmp
pop
stos
xor
arpl
mov
pop
mov
dec
push
and
in
aaa
dec
and
xor
xlat
sbb
inc
sbb
stos
adc
mov
add
int
fnsave
push
arpl
and
insb
xor
insl
cmp
std
ljmp
dec
and
ss
loopne
loope
mov
movsb
sbb
es
mov
decb
into
rcll
mov
adc
push
adc
out
subb
sub
jne
jp
andl
popf
or
ds
sub
cwtl
pop
out
sahf
or
dec
ss
ja
into
dec
and
jno
or
inc
arpl
repz
sbb
cmpsl
cmp
mov
fdiv
dec
cmp
mov
push
insb
cwtl
aas
hlt
aad
jb
ljmp
and
lods
or
adc
push
mov
pop
add
inc
loop
adc
pop
xchg
es
cmpsl
mov
iret
mov
std
lret
outsl
and
lahf
lea
add
mov
ss
mov
sbb
stos
and
cmpsl
ja
lahf
jnp
scas
dec
cmpsl
mov
outsb
add
cmp
pop
dec
push
pop
mov
cmc
push
loopne
or
movsb
xor
in
ficoms
dec
loope
mov
sub
rorl
xor
mov
dec
sbb
test
or
jecxz
pop
sub
notl
lret
lea
adcl
add
arpl
testb
adc
jp
xor
adc
sub
push
push
lea
or
aad
or
push
rol
scas
cltd
aaa
jmp
dec
mov
loopne
sbb
xchg
aam
mov
push
iret
popa
jnp
int
add
sti
mov
push
and
rcrl
sbb
mov
or
stc
ffreep
out
and
notb
clc
das
and
push
shll
add
or
insb
fidivl
inc
sbb
les
or
sub
inc
jecxz
fisttps
mov
loopne
xchg
shll
mov
fstpl
sbb
adc
scas
jno
xlat
movsl
jne
mov
adc
les
faddl
sub
out
or
clc
outsl
or
xor
jb
sub
sbb
fsubs
dec
xor
xchg
repnz
xor
mov
push
jo
cli
jns
cld
pop
inc
mov
adc
aaa
push
pusha
into
popa
sbb
sbb
push
ret
inc
mov
xchg
and
daa
add
scas
sub
xchg
int
sbb
adc
jge
mov
sbb
cmp
mov
js
push
or
xchg
pop
pop
mov
pop
jnp
or
and
cmc
sub
jmp
rcl
rol
ret
sub
mov
sbb
or
pop
clc
les
inc
addr16
inc
addl
mov
aam
shlb
pusha
cmp
push
shlb
dec
es
and
cmp
mov
ret
icebp
push
loope
add
ljmp
mov
mov
cmpsl
sar
fnsave
aad
mov
xchg
test
dec
ja
enter
sbb
jne
and
stc
push
add
cmpsb
popa
cmpl
mov
sub
loope
xlat
aaa
xchg
adc
aam
out
jns
inc
pop
inc
mov
movsl
ljmp
int3
dec
loopne
cltd
ss
mov
pop
pop
stos
cmpsl
push
lods
pop
cmp
hlt
cmp
push
jbe
xchg
sub
inc
adc
repnz
in
stos
gs
iret
inc
jne
outsl
fimuls
jo
fnstsw
xchg
imul
lods
jno
mov
pop
testl
jnp
and
inc
pushaw
sbbl
sbb
add
add
js,pt
cmc
cmp
lahf
sbb
add
mov
and
push
sub
jns
out
dec
fidivl
ljmp
sub
cmp
imul
push
gs
push
adc
pop
std
mov
dec
xor
cmp
add
mov
push
add
in
cmp
push
cltd
in
inc
push
xchg
adc
cmp
out
add
sbb
das
add
test
lea
xchg
fmuls
push
mov
add
push
les
jo
fwait
sbb
mov
hlt
sbb
pop
std
cmc
fisubrl
sti
mov
adc
movsb
imul
push
sub
in
sub
jo
mov
in
repnz
pop
and
and
lds
mov
xlat
sahf
daa
xchg
ss
incl
das
insb
in
mov
test
jp
push
ficompl
lock
imul
pop
shlb
cltd
movsb
mov
scas
icebp
dec
xchg
dec
add
sub
inc
inc
pop
shlb
and
xchg
out
mov
movsl
inc
xlat
sbb
adc
lret
out
or
adc
ret
hlt
call
repz
lds
das
jecxz
daa
int3
jo
loope
sub
fsubr
push
into
mov
mov
push
add
and
in
jge
pop
lret
xor
nop
ss
cmp
mov
pop
push
inc
pusha
scas
outsb
pop
dec
scas
lods
cmpsb
pop
pop
lahf
mov
fs
out
jne
cmp
mov
mov
mov
mov
iret
mulb
pop
jl
pushf
xor
cwtl
lods
mov
ljmp
sbbl
pop
inc
or
into
ret
mov
int3
push
mov
imul
dec
jg
dec
jle
push
sbb
gs
in
das
ds
icebp
mov
aaa
sbb
loope
mov
mov
imul
inc
sahf
cmp
cmp
fnstenv
in
jmp
mov
ret
or
mov
mov
cltd
daa
lock
inc
xchg
mov
pop
pop
mov
add
mov
mov
lcall
repnz
lret
mov
das
jle
test
stos
mov
les
popf
mov
ret
test
std
movsl
jno
ss
jae
fldenv
lock
jle
mov
dec
je
cmp
pop
pop
pop
test
repz
enter
hlt
lahf
cwtl
int
add
dec
xor
and
mov
sub
mov
lods
das
aas
loopne
mov
jo
push
add
mov
and
push
pop
or
mov
xor
add
ss
nop
lcall
pop
gs
adc
or
jge
jp
xchg
xor
lret
in
and
orl
push
sub
outsb
jmp
data16
xchg
jmp
add
mov
dec
xor
fidivs
mov
sub
icebp
sub
mov
jbe
fcoms
push
mov
testb
stos
shll
imul
or
sub
jle
xor
push
add
cltd
lahf
jae
mov
bound
je
call
out
je
cwtl
and
jmp
notl
add
pop
pop
mov
rcrb
pop
adc
loop
cmc
fnstsw
jecxz
mov
sbb
xchg
push
mov
int3
fdivs
push
cli
push
mov
ljmp
or
fisttpl
rorb
adc
mov
pop
mov
cmpsl
sub
mov
rcrb
hlt
bound
je
in
dec
dec
outsb
and
xchg
out
sbb
sub
add
dec
inc
xchg
xchg
jnp
push
mov
shl
mov
or
sbb
jae
movsb
lea
int
lret
ret
xchg
xlat
scas
sbb
scas
pop
jo
shr
pop
cmpsb
dec
out
mov
jne
xchg
call
jmp
add
fldcw
add
sbb
imul
lret
into
lods
or
push
jne
setnp
insl
xor
ret
pop
popf
insl
pop
add
xlat
adc
pop
push
sub
rcll
bound
test
subb
stc
push
mov
sub
jecxz
xchg
dec
sub
push
add
dec
cmp
pop
push
jmp
rcrb
jno
sbb
lret
outsb
dec
sub
cmpsb
mov
cmp
add
adc
cmp
add
mov
adc
or
jp
mov
sbb
jne
or
je
mov
ljmp
fldln2
add
mov
xor
insl
outsl
mov
cld
sti
es
dec
aad
mov
mov
stc
xlat
mov
cmp
sbb
jge
mov
add
lods
jge
xor
popl
jmp
xor
mov
repz
pop
das
inc
xchg
lret
stos
repnz
jo
loopne
ljmp
mov
jge
fstl
test
cltd
and
dec
ljmp
or
loopne
insl
add
xor
mov
insl
movsl
push
cmp
dec
sahf
loop
pop
and
sub
ss
js
cmp
lcall
add
daa
into
cmc
dec
fwait
enter
test
sti
mov
push
in
pop
pop
pop
pushl
in
dec
pop
push
and
fnsetpm(287
inc
fcomi
dec
dec
jmp
loope
inc
mov
pop
xchg
into
jae
icebp
dec
cmc
bound
adcb
cmpsl
push
mov
test
data16
mov
inc
outsb
fwait
sub
sub
imul
add
add
mov
jnp
xchg
call
int
xchg
add
in
sub
fs
inc
push
lea
fildl
in
dec
icebp
fstpt
cmp
arpl
repz
sbb
ret
push
pop
outsb
fisubl
pop
mov
add
ljmp
jne
dec
das
jno
sahf
adc
lea
pop
test
push
or
pop
int
js
jae
inc
and
frstor
adc
jno
cld
clc
enter
inc
fs
xor
pop
test
lods
push
lcall
mov
repnz
cmp
and
mov
in
cwtl
ficoml
rclb
repnz
xchg
outsl
push
sub
leave
iret
inc
sbb
adc
adc
mov
mov
xchg
addr16
sub
out
dec
xchg
into
fbstp
jecxz
in
sbb
aam
xlat
sub
fs
jo
and
add
scas
cmpsb
aas
insl
xchg
std
push
push
jnp
icebp
add
sbb
mov
pushf
mov
in
cld
jbe
xchg
sbb
inc
ja
repnz
jg
ret
cmpsl
or
push
sub
adc
xlat
cltd
cmpsb
xor
cmp
jle
mov
mov
cmpsb
sarb
and
push
cmp
xorl
and
shlb
mov
cmp
repnz
outsl
lods
sarl
ret
jle
fistpll
call
mov
fisttpl
into
lods
mov
push
xchg
adc
adc
mov
loope
mov
adc
rolb
mov
inc
sar
imul
aam
push
fsubl
xchg
adc
lods
add
clc
dec
incl
shr
rorb
call
in
mov
adc
leave
repz
inc
imul
fistpl
ret
adc
and
dec
das
lret
scas
jl
jle
dec
bnd
jl
mov
jle
inc
mov
in
sub
mov
lds
push
call
pushf
sbb
cwtl
jns
dec
cmc
cmp
inc
cmp
mov
data16
mov
loop
inc
testl
in
cmpsb
divl
repz
mov
jo
popl
add
in
jb
xchg
rcrl
dec
push
mov
mov
add
cwtl
adc
jnp
push
adc
push
inc
into
xchg
movd
dec
sbb
je
mov
out
jae
xchg
mov
nop
dec
mov
es
dec
adc
sub
clc
jns
loopne
popa
lret
xchg
leave
nop
mov
outsb
push
fisubs
sub
push
jae
ss
jo
lahf
addl
sbb
dec
test
arpl
int
fs
mov
cltd
or
jne
movd
push
or
cmpsb
sub
pop
ret
push
outsl
faddl
mov
mov
lcall
in
cmp
nop
nop
in
mov
dec
lret
jp
and
sub
out
jecxz
mov
cmp
dec
test
nop
xchg
icebp
popf
jg
inc
xchg
shlb
xchg
adc
sbb
mov
pop
sbb
cmpl
out
dec
movsl
push
mov
cmpb
cmp
or
subl
inc
dec
cmp
pop
clc
rcrb
cmpsl
inc
cmc
fidivs
hlt
add
lds
jle
lcall
push
xor
mov
lods
sbb
xchg
das
mov
add
inc
cld
pop
or
mov
mov
cwtl
jae
jle
mov
dec
cltd
lods
clc
pop
xor
pop
into
mov
sub
jmp
sbb
add
cmp
and
std
dec
loope
stos
movsb
sbb
lret
xorb
sbb
ret
dec
dec
pop
repz
xor
fbld
daa
sbb
fadds
xor
inc
adc
push
or
mov
inc
hlt
or
add
xchg
adc
jno
xchg
repnz
loop
gs
inc
aaa
cmp
idiv
dec
daa
or
out
jecxz
add
cmp
jecxz
aaa
mov
imulb
lcall
arpl
mov
cli
pop
jle
add
push
mov
aad
mov
or
mov
sub
decb
loopne
mov
lret
fwait
sub
xor
out
pop
ja
pusha
outsl
sbb
push
sbb
dec
jnp
mov
or
xor
mov
arpl
leave
nop
aam
jle
push
inc
sbb
fimull
fcoml
xlat
pop
cmpsl
ficoml
test
test
inc
pop
sub
ja
fwait
mov
jb
pop
daa
loope
scas
lahf
iret
stos
and
pop
xchg
addr16
aad
xchg
insl
gs
fadds
and
jecxz
shll
ds
std
movsl
in
adc
adc
movsb
xchg
mov
hlt
repnz
aaa
dec
sub
inc
jle
inc
adc
scas
or
test
sbb
loopne
or
add
mov
xchg
jmp
xor
jae
add
test
inc
push
dec
stc
pop
sbb
test
fs
xchg
icebp
scas
dec
test
push
and
pop
dec
jecxz
lods
shl
add
inc
fnstsw
push
cmc
jg
test
lret
jg
push
iret
push
jns
insb
icebp
ljmp
idivl
sbbb
jge
hlt
scas
lahf
test
fisubrs
push
xor
jl
lret
insl
xchg
pop
pop
xchg
jle
dec
pusha
mov
movsb
loopne
adc
inc
or
mov
cmpsb
xor
aaa
inc
scas
mov
clc
xchg
ds
scas
xor
outsb
adc
or
mov
push
faddl
loopne
lods
insb
xor
push
bound
fiaddl
add
out
and
and
test
xorl
lret
cmp
cmp
test
icebp
push
int
xchg
roll
add
ret
cld
push
popf
inc
sbb
daa
loop
sub
mov
cmp
push
dec
scas
push
outsb
cmp
leave
int3
add
cmpsb
hlt
jne
cmpsl
aaa
push
imul
std
mov
mov
pop
cmc
sbb
sub
dec
mov
int3
mov
gs
jno
xchg
sahf
aas
addr16
popf
aaa
daa
jo
inc
sub
cmp
push
in
dec
repz
insb
xchg
dec
mov
bound
pop
outsl
mov
xchg
push
inc
jecxz
sub
testl
lret
scas
cmpsl
push
out
xor
aad
sub
xchg
mov
enter
inc
repnz
or
jle
sub
jmp
cmc
jecxz
sub
xchg
nop
mov
lds
and
jg
cld
mov
nop
cltd
jnp
dec
add
mov
gs
movsb
xchg
loope
push
inc
and
imul
das
outsl
divb
and
cmp
push
punpcklbw
and
inc
fldenv
jmp
aaa
cmc
movsl
imul
and
adcl
loope
sbb
xor
push
mov
or
mov
xor
jge
push
mov
in
mov
add
mov
cmc
jecxz
mov
aad
out
dec
mov
js
add
xchg
insb
mov
pushf
add
cmp
mov
pop
jg
loopne
push
xchg
and
outsb
sbb
pop
sbb
int
mov
div
pop
rcrb
mov
sub
dec
and
jg
fisubs
lock
enter
gs
pop
ret
sub
jmp
pop
pop
ficompl
dec
dec
xchg
cwtl
sbb
sahf
mov
push
xchg
scas
push
cwtl
jns
out
xor
aad
enter
outsb
popf
imul
icebp
dec
and
push
sub
frstor
xor
pop
call
adc
mov
fs
cmp
outsb
add
lret
sbb
and
jae
cmp
test
sbb
cmpl
cmpb
push
insl
inc
mov
roll
sub
pop
inc
add
outsl
pop
mov
mov
lea
adc
dec
out
adc
xchg
cmp
ds
decl
lods
lods
or
pop
and
jns
pusha
push
inc
ss
cmp
pop
xor
repnz
gs
mov
pop
lea
and
jg
adc
mov
cmp
xchg
xchg
mov
sbbb
xchg
sub
aaa
and
add
xchg
mov
jbe
mov
std
jae
rcrl
scas
cltd
clc
sti
data16
mov
js
pop
cmp
aaa
lds
xchg
cmpsb
fnsave
xlat
in
movsb
and
fnsave
into
enter
mov
sub
add
mov
rcrb
bound
lahf
jp
and
jno
jecxz
jmp
aam
popa
popa
pop
call
push
adc
sbb
pcmpeqb
div
js
or
xchg
cmp
mov
mov
or
cmp
cmp
mov
outsl
scas
mov
sub
jae
pop
cmp
pop
cmp
fucom
xchg
lods
jnp
sbb
mov
ret
pop
clc
push
les
mov
fldcw
mov
test
lock
fdivr
add
or
test
lds
pop
mov
arpl
es
sub
sbb
cmp
add
adc
add
aaa
popa
xchg
adcb
leave
loope
test
mov
sub
inc
lods
or
cmpb
sub
aas
pop
cmpsb
popa
xor
aad
xor
enter
pop
jae
mov
xchg
fidivrl
arpl
bswap
or
jne
cmp
stos
data16
sub
dec
aad
mov
outsl
pop
jbe
popf
call
outsb
cli
sub
cmp
icebp
fstpt
adc
sti
leave
out
xchg
push
sar
sbb
aad
inc
add
mov
aam
dec
mov
rcll
lret
rorl
frstor
jnp
xchg
insb
sub
mov
add
add
lcall
inc
ficomps
aaa
mov
loop
repnz
xchg
ret
adc
gs
xor
incl
fnstenv
mov
inc
mov
cmc
jo
xor
repnz
ret
test
dec
call
add
xchg
stos
jecxz
lret
xchg
stos
lret
dec
dec
test
sub
ret
mov
jbe
jge
cmp
and
inc
call
mov
adc
push
int
jle
mov
mov
icebp
imul
scas
jg
mov
lock
test
popf
stos
lret
cmp
mov
movsl
push
repz
sub
xchg
data16
inc
xor
fs
push
adc
popl
cwtl
es
js
jae
inc
or
xchg
sbb
imull
cmc
lods
inc
dec
pop
cmp
jbe
es
cmpsb
mov
sub
iret
lret
aam
xor
mov
sbb
jmp
or
and
dec
rol
add
jno
xor
cmpb
xchg
jne
bound
jae
add
sub
lods
movsl
jnp
push
mov
fucomi
lret
inc
cmp
lahf
lods
sbb
fisttpl
xchg
pop
rol
fiadds
add
shlb
mov
cmpsl
push
cmp
fwait
cmpsb
mov
mov
dec
outsl
es
xor
popa
xchg
gs
xchg
pop
and
jno
inc
xchg
test
fisttpll
xchg
mov
mov
js
nop
sbb
dec
mov
and
inc
push
jae
js
or
cmpsl
dec
xchg
popa
xchg
fisubs
jne
shl
outsl
enter
test
mov
push
cmp
push
mov
pop
lret
cmpsl
insb
rcll
lods
adc
add
and
cli
arpl
sbb
or
dec
ja
mov
add
loop
xchg
cwtl
cmp
pop
stos
xor
jns
bound
mov
xchg
aaa
stos
mov
push
sub
subb
loop
mov
mov
leave
lock
dec
sbb
lods
xlat
add
adc
push
jb
sahf
push
push
cwtl
cmp
jns
push
inc
lea
call
cmp
repnz
jns
leave
testl
lock
sti
enter
xor
cmp
push
mov
in
aas
xor
sub
push
ret
and
or
int
loopne
aaa
jb
movsl
jbe
icebp
or
push
dec
daa
rep
pop
bound
lods
push
xor
mov
movsb
scas
lcall
out
mov
pop
fmull
mov
adc
clc
sahf
jg
pop
int3
aam
mov
xchg
cltd
popf
adc
ret
cmp
test
popa
scas
inc
xor
hlt
ja
inc
cmp
sbb
popa
mov
push
and
mov
xor
lock
or
jb,pn
cli
rorl
ljmp
sbb
dec
loop
fs
cmp
popa
jns
dec
cmp
loop
je
push
jb
sbb
xor
loopne
popf
push
pop
pop
or
clc
stc
dec
stc
sbb
xor
fdivs
cs
rcr
out
adc
push
js
xchg
and
dec
sub
in
out
dec
sbb
in
mov
dec
mov
adc
xor
fwait
dec
push
jp
mov
test
sbb
jl
mov
push
mov
dec
mov
iret
mov
inc
or
push
mov
jns
or
inc
xchg
xor
sub
ljmp
hlt
stos
mov
add
adcb
popa
mov
pop
lahf
adc
xchg
mov
or
pop
mov
daa
outsb
stos
shl
mov
push
shrl
dec
xor
cmp
leave
mov
or
cmpsb
adc
insb
pop
call
mov
fisttps
shlb
fdivrs
adc
push
sbb
adcb
sbb
push
pop
int
xchg
stos
ficomps
test
cmp
and
les
dec
jecxz
mov
dec
adc
movsb
int
push
sub
cld
test
mov
rep
and
lahf
lods
loope
add
daa
add
pop
in
and
fisubl
imulb
inc
idivb
sbb
repz
fcoml
out
sub
int3
repz
jge
xchg
push
adc
pop
loope
mov
mov
mov
mov
add
mov
incl
and
dec
test
sbb
cltd
add
rcrl
out
into
cmp
sahf
rcrl
dec
inc
sahf
and
insl
ret
movsl
cmovg
iret
inc
adc
inc
out
mov
repnz
push
loopne
xor
frstor
cmp
aaa
jg
repnz
inc
jns
inc
xchg
xchg
ss
jecxz
add
iret
sbbl
sub
dec
cmp
xchg
push
imul
push
hlt
inc
outsb
in
xchg
push
mov
push
cmp
xchg
sbb
imul
cltd
nop
idivl
rcrb
inc
or
sbb
imulb
dec
sub
sbb
jmp
hlt
mov
and
lods
rorl
or
cs
sarb
fnstsw
hlt
fs
sub
inc
and
sub
sub
pop
lahf
dec
push
jle
mov
outsb
pop
push
mov
push
shll
pop
and
icebp
das
cmp
stos
or
fildll
fwait
cltd
xchg
lods
dec
add
and
sub
stos
cs
cld
data16
xchg
jl
or
fwait
cld
cmp
addb
je
or
pop
nop
xchg
maskmovq
cmc
sbb
jne
push
adc
shr
mov
fadds
fidivrs
mov
add
add
jmp
imul
xchg
fmul
mov
pushf
mov
sahf
out
xchg
shrb
mov
aas
dec
xchg
stos
ja
mov
push
jbe
dec
xchg
or
mov
icebp
mov
sub
repnz
test
lock
push
or
popa
mov
xchg
popf
fwait
hlt
cmp
xlat
idiv
fistl
jno
add
push
mov
int
test
fildll
cmp
push
cltd
cmp
jecxz
cmp
addb
lock
dec
jecxz
fwait
pusha
popa
xchg
fsubrl
sbb
cmp
sbb
sbb
lcall
mov
pop
fisttps
pop
inc
nop
addr16
sub
jp
mulb
jmp
jnp
sbb
add
mov
lea
adc
adc
inc
roll
mov
xchg
popl
insl
pusha
pop
fld
mov
outsl
pop
push
test
rcll
popa
inc
pop
xchg
int
loopne
xchg
add
decl
mov
adc
sbb
sub
stc
adc
push
test
push
movsb
je
push
mov
in
subl
push
sahf
inc
lret
lcall
xor
dec
test
xchg
shll
and
and
jg
cmp
movsb
pusha
mov
js
mov
nop
iret
xchg
aad
or
push
shl
daa
mov
loop
push
xor
fwait
jmp
icebp
fs
pushf
stos
fldenv
lahf
mov
lahf
sub
jne
outsb
iret
mov
dec
mov
mov
sbb
out
in
outsb
add
ds
test
mov
les
pop
xchg
inc
daa
loopne
or
jge
call
pop
hlt
lahf
dec
dec
pop
dec
fmuls
cmp
cmp
dec
jnp
sub
sub
push
pop
ds
es
test
push
loop
notl
popf
inc
adc
mov
xchg
gs
push
jg
cmpsb
aad
jle
cwtl
pushl
mov
decl
inc
push
or
popf
out
inc
test
mov
inc
jle
aam
and
notb
jl
push
ja
sub
sbbb
fisttps
mov
hlt
mov
aas
mov
dec
dec
nop
sbb
xchg
in
adc
in
in
xor
std
das
dec
out
xor
xor
dec
call
pop
dec
icebp
mov
jmp
hlt
stc
sub
sub
push
leave
pop
dec
pushf
mov
ss
cmpsb
mov
sub
ret
imul
mov
icebp
inc
mov
cmp
xchg
int3
insl
cwtl
cwtl
mov
xchg
fiadds
fld
lret
fwait
out
or
lret
jmp
je
cli
gs
aaa
dec
fucomi
in
push
mov
mov
xlat
mov
xchg
inc
inc
mov
xorl
pop
cmp
aaa
cmpsl
and
test
dec
mov
rorb
adc
outsl
inc
aam
aam
sbb
lock
daa
or
rcrb
push
std
and
add
cltd
push
lcall
fiadds
and
jne
mov
mov
mov
lock
mov
rcrb
or
inc
int3
enter
fsubrs
dec
sahf
xchg
or
cmp
lret
adc
or
and
ljmp
data16
sub
loop
ret
daa
bound
mov
cmp
mov
out
push
jae
and
or
movsb
lods
bound
rcrb
movq
sbb
into
dec
dec
mov
adc
mov
movsl
xchg
mov
imul
dec
popa
andl
popa
cmp
xor
cmpsl
mov
popf
insb
pop
fcomps
xor
and
jbe
sub
orb
repz
insl
add
sahf
dec
dec
mov
xlat
aaa
stos
push
lret
daa
adc
jnp
fbld
iret
cltd
aas
in
fldenv
pop
mov
inc
jb
pop
adc
int3
rclb
push
inc
leave
aad
mov
and
iret
cmp
xchg
pop
aaa
sbbb
cli
inc
out
mov
sub
mov
push
cmpl
sbb
or
push
xchg
add
subb
aas
sbb
ds
mov
jmp
sti
mulb
test
mov
lahf
adc
mov
gs
pop
cmpsb
lds
sti
pop
push
adc
nop
pop
push
xchg
dec
pop
mov
ficomps
gs
fs
inc
inc
aad
jno
jg
mov
xchg
jle
in
das
in
xchg
pop
jmp
es
sub
push
jne
loop
movsl
mov
add
cmp
roll
sub
pop
int3
sub
daa
sbb
std
pop
jmp
int3
mov
xchg
jbe
sarb
or
addb
nop
ds
or
and
mov
enter
call
cmp
movsb
xchg
push
xorb
das
sbb
adc
sbbl
in
mov
sub
and
jge
mov
sti
addb
ret
test
mov
data16
mov
jne
xchg
xor
add
mov
push
lea
in
sbb
mov
aas
inc
xchg
int3
test
or
sti
pop
cmp
mov
lock
sarl
mov
mov
jno
xchg
and
lret
push
loopne
mov
add
push
imul
dec
scas
mov
pop
mov
shrb
add
jge
stc
dec
cwtl
insl
js
repnz
mov
shr
adc
lods
dec
sbb
sbb
aas
adc
scas
dec
jb
leave
dec
ja
jns
jmp
jno
fcomp
inc
pop
data16
jl
bnd
sub
cld
inc
lret
or
mov
fimull
cmpsb
test
leave
cwtl
lcall
imul
xchg
dec
into
imul
xchg
outsl
ficoml
sar
test
push
lods
sub
jmp
jmp
jne
pop
imul
shll
cmovp
lret
arpl
js
cmp
ret
fpatan
push
mov
xlat
or
mov
into
and
inc
add
cmp
lock
xor
push
mov
test
gs
adc
push
cs
lcall
enter
ljmp
loope
fwait
cwtl
stos
pop
add
fstps
lahf
dec
push
xchg
notb
or
xor
sarb
sarl
cmp
cwtl
xor
xor
pop
cmc
lods
aas
xlat
push
jge
stos
pop
in
iret
xlat
and
ss
push
gs
out
cmp
push
lcall
std
dec
inc
ficoms
ret
mov
nop
loopne
cld
mov
push
fwait
cmp
in
je
shlb
mov
push
into
loopne
push
adc
xlat
xchg
add
rcrb
js
cmc
or
out
testb
adc
mov
out
nop
imul
xor
push
lahf
movsb
ds
imul
jge
insb
jl
sbb
push
and
aam
pop
jns
pop
sub
jecxz
lret
nop
leave
dec
into
stos
sahf
push
pop
scas
and
cmpsl
pop
lds
sub
pop
das
rcl
in
pop
ss
divl
jae
js
xchg
inc
mov
cltd
xor
jmp
popa
cmpsl
sbb
enter
adc
add
or
rcl
xchg
inc
scas
dec
mov
icebp
sub
fprem
jecxz
pushf
js
rol
inc
add
scas
pop
mov
adc
cmp
popf
mov
fnstenv
push
in
sbb
xchg
test
pop
mov
xor
and
nop
mov
mov
stos
jmp
pop
outsb
movntps
je
mov
fs
xor
and
xchg
loope
icebp
cmp
ja
loopne
dec
loope
push
mov
push
cli
push
xchg
ret
mov
push
pop
mov
add
inc
mov
adc
call
add
es
jns
aaa
loopne
jns
pop
jo
shlb
sbb
adc
xchg
mov
inc
jge
test
jmp
psllw
jl
lret
popa
push
cmc
inc
dec
xacquire
testb
jl
mov
pop
sub
push
mov
gs
ficoms
aad
lea
push
loope
adc
fistl
mov
dec
and
fnsave
jmp
inc
mov
scas
enter
inc
cmpps
mov
cwtl
dec
fmul
xchg
jmp
pop
sub
loopne
test
push
icebp
or
stos
inc
xchg
outsb
subl
add
or
adc
test
xchg
or
imul
cmp
inc
add
fadds
mov
sub
insl
jp
cmp
jnp
add
scas
dec
insb
jg
jo
push
fnstcw
mov
adc
sub
pop
clc
and
pop
rcrl
jmp
rol
hlt
je
icebp
add
cmp
cmpsb
adc
js
into
inc
jnp
add
mov
push
and
sbb
ljmp
mov
mov
adc
sahf
jg
jmp
int3
mov
mov
mov
add
xlat
rorl
push
lahf
dec
mov
stc
test
mov
sub
loopne
sahf
cli
or
adc
mov
inc
test
adc
push
aas
or
arpl
add
ja
jnp
addr16
pop
data16
mov
or
sub
jnp
cmp
clc
jns
cmpsl
fldl
stos
into
jge
ljmp
in
jnp
aas
mov
cwtl
push
xor
add
mov
or
xchg
daa
jb
testl
add
bound
sub
stc
imul
pop
scas
cltd
add
test
int
addl
adc
sbb
lcall
inc
or
sub
insl
movsb
loopne
sub
lods
in
bound
adc
mov
mov
test
enter
leave
mov
aas
fwait
pop
mov
xchg
inc
jns
hlt
xor
pop
push
jae
in
mov
pop
dec
call
cmp
jo
mov
push
pop
js
lds
aad
sbb
push
shr
lcall
subb
push
scas
or
lcall
clc
jg
dec
sbb
dec
clc
js
test
rcll
dec
out
xchg
fwait
shll
dec
push
inc
jne
mov
push
lcall
jb
mov
mov
cmc
add
jg
or
cmp
push
imul
nop
sahf
or
sbb
xor
cltd
add
pop
or
sub
pop
popf
cli
push
mov
sub
cltd
push
in
dec
mov
mov
jp,pn
repnz
orl
inc
pop
lods
mov
aaa
fiaddl
xor
cmpsb
js
in
into
pushf
cmp
fstpl
add
mov
mov
lcall
inc
out
enter
shrl
sbb
gs
insl
and
daa
out
mov
ja
sub
fdivs
cld
je
adc
test
das
mov
out
mov
mov
push
jae
mov
je
mov
push
pop
or
xor
aaa
push
and
push
sbb
gs
test
mov
imul
pop
pop
adc
out
push
shll
or
hlt
xchg
and
and
ja
adc
sbb
push
jae
dec
xchg
jbe
jecxz
push
loopne
inc
push
pop
fdivrl
out
pop
lds
test
lcall
jl
das
sarb
xchg
cmp
stos
shl
mov
dec
push
jne
mov
fidivs
dec
loopne
jg
xchg
mov
jno
out
ret
jns
cltd
imul
js
fwait
ss
int
cli
hlt
cmpsl
mov
pop
mov
addl
xor
or
mov
push
gs
cld
inc
addl
shll
ficoms
test
sub
enter
mov
mov
pop
mov
add
cmc
adc
in
cmp
xchg
xchg
xchg
std
xor
stos
jae
push
dec
sub
xchg
sub
ret
loopne
add
das
pop
pop
push
fsts
and
sahf
cmp
enter
and
mov
push
test
dec
cmp
jecxz
xchg
shld
mov
bndstx
clc
fdivrs
sbb
pop
sti
push
sbb
add
inc
fwait
inc
mov
cltd
pop
sbb
and
adc
out
push
lahf
jns
into
sbbl
and
cmpb
ds
lods
cmp
daa
xchg
repnz
enter
mov
mull
cs
lret
js
adc
test
ret
sbb
adc
in
adc
adc
sbbl
or
lds
and
sub
mov
cwtl
jae
sub
cwtl
mov
dec
lock
inc
xchg
pushf
mov
mov
incb
aas
xchg
sarb
jno
mov
negl
cmp
lods
icebp
lds
cli
xor
dec
inc
sbb
lods
lcall
mov
and
and
jle
xchg
push
aad
movsl
dec
insl
jnp
adc
std
mull
cmp
xchg
insl
or
pop
push
push
movsb
jecxz
mov
inc
or
cmp
mov
dec
orl
cmp
mov
cmpsl
lock
ja
push
aam
ljmp
orl
mul
loop
insb
jle
add
leave
inc
int3
mov
sub
adc
jmp
sahf
ret
xchg
aam
stc
jb
repz
mov
hlt
sbb
add
mov
lods
and
push
add
out
xchg
adc
cmpsl
push
cmp
push
push
in
jl
jo
out
jmp
test
inc
inc
inc
adc
xchg
and
or
je
pop
sub
mov
fstpl
loope
mov
mov
cltd
dec
cmp
mov
mov
inc
les
adcb
loop
mov
cmp
out
jecxz,pn
dec
cmp
sub
jmp
icebp
pop
inc
and
add
mov
lock
repz
insl
out
adc
cmpsb
push
cltd
shlb
faddp
xchg
lea
jb
lods
mov
imul
ds
cmp
mov
sahf
ret
out
push
and
repnz
sub
dec
in
xchg
xchg
lret
add
inc
repz
and
sub
mov
mov
in
add
jo
movsl
test
ud1
xchg
sbb
out
push
imul
cli
jne
mov
and
shrd
aas
jge
ud2
jae
ss
lock
rcll
iret
lods
cmp
lea
sti
mov
std
cmpsl
lcall
lea
jne
pop
xchg
js
jmp
pop
daa
leave
inc
jl
jns
pop
iret
outsb
jmp
jnp
inc
xor
aad
fsub
jae
push
add
pop
xchg
xchg
loope
push
icebp
cmp
dec
pop
imul
pop
addb
mov
fs
xchg
stc
xor
mull
xor
in
add
lock
outsb
es
jp
push
pop
mov
sbb
sbb
lcall
ret
cmc
ja
aam
mov
and
jmp
sub
fwait
mov
gs
jmp
sbb
cmpsl
mov
or
sbb
inc
std
xchg
scas
jmp
fadds
push
push
inc
mov
stos
dec
rcll
out
pop
insl
stc
or
xor
sbb
call
sbb
mov
inc
movsb
mov
mov
inc
test
pop
nop
cmpsl
or
sub
fidivs
std
loope
popf
sub
mov
push
sbb
out
cltd
imul
sub
mov
test
ror
pop
or
jb
mov
in
iret
sub
jo
inc
add
fcompl
rcrl
repnz
dec
xchg
jmp
cmp
pop
or
add
xchg
and
adc
loope
addb
pop
push
adc
loopne
clc
pop
in
scas
xor
mov
aas
xor
je
add
out
addr16
fs
out
push
pop
int3
cmp
arpl
xor
jb
stos
jnp
pop
loop
arpl
bnd
dec
cmpsl
adc
add
push
cmp
mov
into
cmc
mov
push
nop
mov
popa
xor
jns
jge
in
es
clc
and
or
lahf
or
aas
popf
sbb
imul
inc
in
jo
xor
xchg
push
adc
mov
lock
fcoms
sub
mov
jge
sbb
jg
stos
mov
pusha
push
jbe
jno
cmp
lcall
mov
stos
cmpsb
roll
iret
push
stos
pop
jp
xchg
clc
shl
je
jo
or
aas
call
out
clc
test
lds
xchg
xchg
or
cwtl
jp
mov
insl
jno
dec
mov
out
mov
or
int
xchg
aas
cmp
scas
add
add
out
lret
repz
mov
adc
cmp
pop
pop
pop
orb
xor
arpl
roll
adcb
mov
popa
loopne
fmull
cli
imul
addr16
pop
jae
cmp
mov
xchg
addr16
lock
cmp
loop
sub
jle
lock
fistl
in
sbb
mov
xchg
pop
add
jl
into
sbbl
hlt
push
psignw
cmpsb
lds
imul
mov
sbb
jo
jnp
repz
add
adc
pushf
mov
xchg
push
adc
rol
add
ss
imul
addr16
cmp
cs
and
cmp
loop
bound
jno
dec
xchg
mov
sbb
add
mov
pushf
sbb
enter
fwait
lods
call
jo
cmpsl
mov
in
cld
out
xchg
pushf
ljmp
aaa
jnp
mov
xor
and
mov
sbb
inc
daa
push
add
mov
sarb
or
or
sbb
xor
iret
mov
loope
shl
sbb
push
fs
mov
or
inc
push
std
jl
gs
ja
push
push
add
cld
lcall
xchg
mov
scas
int3
pop
iret
addr16
mov
mov
fisttpll
mov
daa
jmp
mov
dec
jecxz
mov
rsm
stos
outsb
loop
bnd
xlat
and
out
test
jmp
jle
rcll
adc
pop
sub
cmp
orl
test
call
cmp
loope
mov
movb
js
mov
pop
mov
loop
push
push
outsl
adc
push
insb
mov
add
pop
and
pop
notb
jmp
imul
sub
cmpsb
loopne
add
jmp
sub
in
sahf
cmpsl
lods
push
inc
push
inc
aas
lahf
jmp
pop
jmp
cmp
ja
cmc
pushf
push
inc
sbbb
loopne
push
stc
dec
insb
addr16
inc
cmp
ror
ss
arpl
negl
rcrl
xor
pushf
out
fwait
std
les
mov
xor
dec
pop
cld
cli
in
stos
shrb
inc
movsl
adc
mov
pop
jo
xlat
dec
mov
arpl
out
sub
or
shll
mov
ss
daa
sarl
es
ffree
mov
lret
ficoms
xchg
sbb
std
les
xor
sbb
je
dec
cli
daa
incl
in
ja
adc
inc
cmovne
mov
jg
adc
cmp
inc
jbe
add
fisubl
add
adc
push
xchg
push
bswap
aas
sub
jnp
cmpsb
flds
cmp
cmp
ds
aaa
jnp
cmp
arpl
arpl
sbb
mov
aad
adcl
or
ljmp
sub
loope
sub
inc
rcrl
mov
inc
and
js
imul
mov
and
and
or
pop
das
repnz
rolb
xchg
jae
sub
jecxz
mov
rol
xchg
fwait
sbb
mov
inc
pop
inc
mov
pusha
cmp
mov
mov
push
inc
pop
mov
dec
mov
shrl
shll
js
and
cmpl
cmp
pop
add
xchg
mov
call
mov
sarl
ds
cmp
push
cmp
dec
push
out
mov
mov
mov
mov
movsl
jl
add
ljmp
pop
jge
imul
into
cmp
aam
popf
pop
popa
adc
add
pop
and
mov
jo
imul
pop
mov
sbb
pop
neg
scas
and
rcrl
scas
js
jb
inc
je
cmp
sub
bound
pop
dec
jecxz
pop
mov
pop
cmp
in
outsb
in
sub
jo
mov
xor
out
xor
ljmp
add
add
mov
sbb
xchg
addr16
inc
sub
mov
xchg
and
adc
xor
cmpsb
jno
or
and
std
inc
dec
push
iret
xor
gs
stos
outsl
out
cmp
mov
pop
stos
frstor
and
nop
int3
push
dec
ds
cmpb
jmp
sub
test
mov
movsl
fnstcw
cltd
add
std
mov
das
movsl
mov
push
pushf
dec
pop
add
adc
ret
into
aaa
mov
cmpsb
mov
cld
inc
push
out
nop
lods
push
es
sub
adc
xor
pop
ret
fiadds
xchg
adc
int3
jmp
sbb
mov
test
mov
ja
fcmovbe
mov
jg
jno
outsb
push
mov
nop
in
cmp
mov
jg
push
push
push
aaa
and
mov
jb
adc
sub
xor
xchg
cmp
lock
aaa
jne
popf
lret
sbb
adc
clc
sub
jne
imul
cmp
and
stos
cs
outsl
ret
es
cld
scas
mov
cmpsl
mov
cmp
jo
movsl
or
mov
lds
push
rolb
lock
add
pop
les
flds
xchg
cwtl
mull
mov
daa
ja
xor
add
data16
lods
fcoms
or
nop
lret
daa
jg
xchg
mov
or
mov
rolb
enter
sarl
push
cmpsb
lret
cmp
shrb
xor
aam
add
imul
lahf
fsub
lods
jns
sti
aas
data16
adc
cs
mov
out
imul
pop
add
mov
imul
fldl
xchg
xchg
mov
idiv
mov
sbb
pop
in
insl
icebp
fsts
iret
or
cmc
inc
pop
loop
pop
mov
xchg
mov
or
cmp
or
mov
ja
add
push
xchg
stc
mov
dec
lock
cmp
xchg
cmp
hlt
mov
popf
inc
dec
push
mov
or
pop
repnz
sbb
mov
hlt
sbb
lock
lea
mov
mov
dec
cwtl
in
or
rolb
sbb
imulb
mov
sbb
repz
inc
call
jg
mov
adc
stos
pop
cmovns
enter
pop
push
scas
xor
push
das
adc
sti
ss
es
ds
sbb
jns
jp
inc
xchg
bnd
and
or
lods
incb
cli
cwtl
mov
mov
lret
jbe
scas
add
jp
pop
mov
sbb
pusha
or
ja
pop
aad
jb
xchg
sbb
gs
popa
sub
std
or
sti
fistpl
mov
cmp
in
aam
xchg
push
lock
in
adc
movsb
mov
fisttpl
dec
roll
jmp
or
or
or
fldt
dec
pop
or
mov
mov
cli
inc
outsl
mov
insb
xor
fisubrl
adc
sbb
sti
mov
loopne
icebp
dec
sbb
xchg
hlt
sbb
and
cmp
enter
inc
jno
inc
in
xlat
or
push
push
imulb
mov
mov
in
and
sbb
sbb
jns
adc
add
stc
ret
popf
pop
jecxz
mov
sub
jp
aas
divb
jo
into
mov
xchg
xor
iret
outsb
int
push
mov
out
mov
lods
in
sub
inc
dec
add
cs
jbe
shrl
push
addr16
outsl
pop
popf
jmp
gs
andl
mov
faddp
sbb
in
lahf
or
neg
sbb
rolb
lds
cmp
or
jecxz
fcmovnb
jecxz
test
idiv
shll
xlat
mov
hlt
jg
xchg
sub
xor
jl
or
js
mov
insl
fldpi
push
int3
dec
pop
std
enter
test
jmp
or
inc
push
and
xorl
adc
xchg
xchg
xchg
mov
jb
jmp
add
sti
test
mov
out
add
cmp
mov
or
mov
in
lods
sub
pop
mov
inc
sbb
sarb
sub
jmp
pop
ss
insb
push
shl
movl
andb
xchg
out
lret
pusha
test
fwait
cbtw
test
xor
cmp
inc
orl
xchg
xor
xchg
hlt
subb
mov
loop
sbb
pusha
cli
lods
dec
add
sbb
dec
mov
scas
cmp
inc
jmp
mov
test
lret
lods
jno
adc
cltd
mov
jno
ret
mov
dec
icebp
leave
ficomps
add
std
stos
and
mov
cltd
xor
cmp
xor
std
lods
dec
pop
push
add
mov
lcall
dec
sub
xchg
mov
sbb
or
xchg
xchg
loopne
pop
mov
pop
xchg
and
mov
std
addr16
sbb
sub
loop
mov
jle
mov
cmp
fdivrp
testl
sub
ss
arpl
inc
rcrb
cmp
xor
add
jnp
jecxz
cmpsb
jne
lods
insb
push
popf
pop
pop
mov
repnz
roll
out
cmpsb
mov
jge
popa
lods
adc
lods
pop
mov
pop
mov
lcall
jne
or
in
xchg
or
mov
shr
popa
out
sbb
xor
sahf
cmc
mov
or
rcrb
pop
stos
out
mov
push
loope
jg
std
lds
cmp
dec
adc
out
xlat
test
push
xor
roll
std
xor
xor
std
fwait
je
gs
pop
xchg
stos
add
call
and
fdivrl
and
orl
cmc
and
aaa
and
sarl
inc
add
add
gs
pop
inc
pop
and
imul
les
jle
pop
or
or
dec
pusha
push
fcoml
sub
lods
test
lahf
jge
lods
push
cmp
or
cmp
dec
cmp
aad
scas
pop
mov
int
dec
push
fdivl
add
xchg
icebp
xor
sti
sbb
lods
jmp
cmpsl
mov
fdivs
in
popa
add
enter
pop
xor
into
pushf
sub
push
push
fimull
imul
mov
jmp
idiv
loope
fcompl
scas
mov
cmpsl
sub
popf
and
mov
mov
sahf
ljmp
adc
inc
nop
push
cwtl
shl
add
cmp
push
inc
movsb
mov
dec
gs
addr16
pop
enter
push
repz
cmp
movsb
lock
mov
out
orb
std
adc
sbb
aad
incb
lock
je
add
in
fldt
lret
cmc
js
pinsrw
push
mov
pusha
movsb
shl
add
xchg
xchg
shrl
add
cmp
xchg
insb
fldl
sbb
mov
jmp
xor
jge
stos
jge
xchg
in
cltd
mov
jge
jmp
loop
adc
jnp
pop
dec
ret
inc
dec
sbb
cmp
hlt
stc
loope
pop
cmp
sbb
jb
sbb
lock
push
or
out
jne
xchg
inc
imul
jno
fstp
inc
mov
cmp
test
ljmp
or
pop
push
inc
cmp
orl
test
imul
mov
negl
xor
insb
ret
hlt
out
mov
call
xchg
cmpsb
sub
andl
mov
jg
inc
call
idivb
jo
out
repz
jnp
jl
sub
inc
sub
pop
mov
sub
sub
pusha
cwtl
push
inc
shll
push
jecxz
rolb
scas
mov
out
data16
adc
push
mov
int3
inc
andb
int3
xorb
fwait
sbb
sbb
dec
sbb
in
pop
cs
cmp
jae
shrb
push
bound
jecxz
in
cmp
cltd
mov
cs
xor
mov
inc
out
js,pt
dec
push
xchg
push
lret
arpl
adc
sub
push
dec
xchg
iret
dec
lds
imul
sti
stos
gs
aaa
lock
mov
test
testl
pushf
movsl
pop
fs
sbb
mov
xchg
pop
inc
push
lret
ljmp
je
test
pop
cmp
adc
adc
inc
inc
jmp
or
or
mov
addr16
in
sti
loope
fwait
imul
xchg
sbb
cmp
mov
pop
cltd
loope
mov
push
jmp
cmpsl
sar
repz
xor
pop
add
push
mov
adc
testb
mov
arpl
cli
mov
xorb
stos
repz
lahf
hlt
pop
hlt
jmp
push
rep
xorb
or
jl
inc
outsl
and
sbb
sbb
iret
cmp
jecxz
dec
popa
pop
psubd
lahf
and
sub
cmpsb
stos
xchg
and
fidivs
push
dec
leave
mov
nop
je
es
enter
dec
dec
cld
test
fisttpll
aas
pop
push
jb
mov
iret
movsb
mov
les
mov
aas
cld
sahf
call
fnstsw
dec
xor
sub
sbbl
sub
mov
jle
add
jp
les
leave
mov
fmulp
and
jbe
shll
sqrtps
ljmp
sbb
loopne
aam
aaa
mov
add
push
loop
nop
add
dec
int3
cld
dec
and
insb
mov
push
mov
sbbl
mov
adc
loope
stos
pop
loop
jp
add
imull
in
dec
dec
pop
push
push
jbe
jle
and
cmp
ss
cwtl
out
fiaddl
gs
sub
or
stos
add
dec
loop
mov
out
cmp
aad
and
add
fistps
mov
test
sub
sbb
add
xchg
and
mov
inc
cs
pop
xor
jecxz
cli
add
mov
addl
cli
shl
fs
cmpsl
mov
hlt
dec
sbb
or
pushl
adc
jle
dec
aaa
int
jbe
adc
test
out
mov
je
cmp
pop
add
add
rclb
push
add
inc
xlat
push
adc
sahf
fnstenv
sub
jmp
and
ss
cli
adc
xchg
aad
jp
or
push
les
pushf
divb
add
mov
xor
and
ret
dec
sbb
insl
lahf
xlat
mov
in
xchg
ljmp
aam
cbtw
pop
and
jb
inc
inc
hlt
dec
bound
push
jmp
add
push
mov
cmp
add
js
lea
mov
inc
pop
lods
popa
nop
mov
scas
lock
and
lods
xchg
loop
sub
dec
int3
aad
hlt
cmc
pop
mov
rorl
mov
sub
mov
ss
int3
pop
lret
shll
or
mov
jecxz,pt
cmp
test
dec
dec
rcrl
mov
and
cmp
pusha
sti
and
add
dec
repnz
das
jb
mov
mov
sbb
mov
mov
xchg
lods
mov
adc
adc
adc
out
pop
inc
and
adc
xchg
push
call
jl
jns
cs
mov
mov
xchg
in
dec
call
mov
jl
mov
mov
add
jp
jl,pt
pop
sub
push
pop
loop
jg
pop
jmp
leave
mov
in
incl
aas
adc
pop
cmc
pop
stc
stos
jle
cmp
div
xlat
xchg
jl
insb
mov
mov
add
pop
pop
aas
add
mov
cwtl
div
add
les
cwtl
mov
jecxz
cmp
test
sub
push
arpl
mov
push
mov
sub
test
push
cwtl
jne
lret
jbe
mov
mov
sbb
nop
jo
push
lcall
fsub
and
sbb
inc
push
mov
stos
repnz
adc
aam
jnp
stos
pop
mov
push
cmp
mov
sbb
into
pop
pop
sub
fwait
sub
movsl
cmp
sub
sbb
iret
inc
cmp
cmp
mov
call
and
or
loope
das
push
lds
loop
sbb
movsl
sbb
pop
sbbl
enter
xchg
xor
test
add
add
jg
mov
jbe
sub
sub
fsubr
call
and
ss
rcr
pop
cs
int
jbe
adc
data16
jecxz
jge
int
sub
jge,pn
inc
mov
lahf
xor
xlat
loope
das
or
dec
mov
pop
stos
adc
cli
sub
aaa
inc
jle
sub
jecxz
xchg
or
movsb
jnp
mulb
fists
loope
cmp
imul
sub
dec
adcb
pop
pop
push
or
jle
and
outsb
cmpsb
push
mov
or
jns
mov
push
inc
insl
dec
pop
xchg
repz
aad
adc
xchg
rcrl
ja
push
ja
cmp
fnop
jae
mov
fmuls
jl
pop
bound
cs
pop
cmp
adc
inc
and
sub
sbbl
jp
cmpsl
adc
out
cmp
rcl
push
or
sub
lods
adc
in
cmpsl
and
mov
mov
add
rcrl
or
xor
add
lods
jecxz
movsb
and
repnz
dec
daa
mov
jns
test
mov
push
fsubs
cmp
fs
cmp
into
fdivrl
fcmovnu
mov
mov
negb
mov
sahf
fwait
push
add
sbb
pop
push
sbbb
or
xchg
pop
sbb
cltd
mov
loop
add
lds
jbe
xchg
push
sub
xchg
cmp
mov
jbe
dec
popf
fwait
rorl
in
outsb
dec
je
pop
dec
pop
dec
loop
inc
jo
scas
sbb
das
adc
dec
fs
mov
dec
add
and
and
addr16
test
adc
stos
in
lea
dec
ds
mov
xor
push
and
lock
test
lea
in
mov
rorl
mov
push
pop
movsl
xor
add
imul
outsl
gs
outsl
or
mov
push
repz
and
stos
adc
push
stos
sti
mov
sbb
and
mov
cwtl
xor
mov
sub
in
sbb
lahf
inc
ret
insl
rcrb
push
and
mov
push
ja
lret
ds
mov
mov
sti
jbe
push
or
imul
push
inc
in
fwait
stos
xchg
leave
enter
cmpsl
sbb
cltd
mov
xorb
mov
pop
pop
cmp
dec
movsl
sbb
data16
push
out
cs
jo
movsl
mov
mov
dec
sbb
sbb
sbb
add
push
pusha
sbb
push
inc
push
arpl
push
push
or
scas
sub
iret
test
xor
sbb
mov
scas
cli
imul
sbb
das
push
das
sbb
std
aam
adcl
xchg
jb
mov
sub
test
jmp
ficoms
adc
roll
cwtl
pop
jne
add
or
call
cltd
aam
cwtl
repnz
sbb
loopne
cld
jnp
out
or
sub
sbb
aas
mov
xchg
imul
das
arpl
push
adc
sbb
push
and
js
fwait
jge
cmp
rcr
xor
pop
mov
mov
inc
pop
stos
mov
rorb
into
je
icebp
imul
mov
pop
ret
loopne
lds
in
flds
mov
cli
mov
popf
fcoml
out
pop
out
jmp
sbb
sbb
movsl
add
scas
xchg
mov
test
cmpsb
ss
xor
mov
adc
cmc
bound
aam
incb
mov
movsl
mov
lock
aas
mov
movsb
jns
out
test
dec
add
loop
movsb
mov
pop
dec
test
aas
push
stos
and
rorl
js
mov
mov
iret
cld
inc
jnp
fwait
lret
mov
cmp
lds
test
clc
dec
rorl
sub
mov
popf
adc
sbb
jae
fs
cwtl
or
or
sub
or
mov
pop
lock
insl
lea
repnz
sarb
addr16
ss
addr16
test
stc
cmp
mov
mov
jno
call
daa
neg
add
cltd
lahf
testl
xchg
inc
cmp
test
cltd
cltd
cmp
push
bound
into
inc
dec
in
data16
in
or
jb,pt
lahf
rcll
cs
cmc
out
sbb
aas
sub
cmp
iret
inc
xor
in
popa
mov
es
add
mov
lret
inc
std
sbb
andl
cmpsb
and
adc
aad
cwtl
push
sub
xchg
pop
lret
dec
hlt
xchg
out
rolb
xlat
ljmp
scas
cld
and
addr16
mov
xchg
mov
xor
and
pushf
leave
loopne
push
sub
or
orb
stc
adc
and
dec
cmpsb
test
pusha
es
pop
ds
jbe
cmp
in
pop
loop
sahf
push
xchg
ljmp
add
adc
dec
cmp
adc
in
add
xlat
push
adc
xor
into
rorl
mov
or
inc
jg
out
stos
ds
push
pop
lds
adcl
stos
push
xchg
inc
clc
xchg
xchg
cmp
adc
pusha
iret
scas
in
notb
mov
js
or
sar
stc
or
call
sbb
push
stos
mov
sbb
aam
loopne
pop
add
jnp
in
out
and
sti
pop
pop
xchg
or
ret
sub
push
inc
mov
dec
inc
cwtl
sub
fstl
inc
mov
imul
cmp
mov
out
daa
lods
out
ret
and
xchg
cltd
inc
addr16
fnstcw
adc
repz
xor
rcrb
insl
mov
xor
call
cmc
push
sub
icebp
popf
mov
pop
lods
inc
dec
addb
fsubrs
push
nop
sbb
ficoml
inc
mov
adc
inc
add
pop
insl
popa
pop
icebp
insl
mov
push
insb
inc
mov
inc
adc
dec
mov
pop
or
decb
mov
xchg
ret
mov
and
les
pop
xchg
dec
or
sub
mov
fs
ret
add
push
cwtl
call
jns
mov
dec
inc
xchg
jle
sbb
pmuludq
mov
aas
xchg
sbb
add
inc
js,pt
add
pop
adc
lods
pop
scas
in
mov
pushf
movsl
bound
dec
outsl
ss
mov
mov
jg
inc
std
mov
jg
xor
lods
in
int
outsl
adc
mov
mov
mov
pop
mov
and
jb
cmpsb
pop
fstps
shll
icebp
jmp
and
mov
sahf
js
jp
mov
cmpsl
or
incl
mov
jp
mov
mov
hlt
movsl
mov
ss
mov
loopne
mov
mov
inc
xor
aam
push
cmc
cmp
insb
je
dec
mov
pop
sbb
jno
sub
dec
shlb
nop
sbb
psubsw
dec
sarl
sbb
cs
dec
imul
jg
lcall
jmp
lods
movl
loope
cmpsb
and
js
inc
dec
mov
pop
leave
jo
push
nop
and
push
pop
adc
in
dec
fistl
or
push
cld
movsb
cld
or
push
lret
xchg
sahf
jno
sbb
enter
mov
call
mov
shl
jle
push
mov
lds
shrl
rclb
xor
nop
jae
addr16
dec
xor
mov
add
das
add
aas
arpl
xchg
xor
dec
aaa
adc
in
cmc
sub
cli
jp
jo
in
cmp
add
jg
xor
jne
and
js
outsl
jmp
mov
mov
xor
sbb
mov
shl
xchg
fsubl
mov
mov
rcrb
add
das
lea
enter
out
sub
cmpsb
outsl
xchg
shll
jmp
xchg
sbb
mov
jnp
jecxz
push
adc
cmp
dec
xchg
mov
icebp
mov
mov
jne
and
ficomps
andl
aad
pop
push
push
pop
and
sbb
mov
mov
aam
inc
out
sbb
xchg
mov
add
cmpsl
mov
jmp
gs
repnz
sti
popl
outsb
cld
pop
addr16
add
loopne
inc
stos
cmp
scas
sub
or
cmpsb
push
fbstp
mov
mov
test
jmp
sub
aas
mov
pop
dec
lock
xor
xorb
inc
scas
testb
jecxz
xchg
push
pop
test
or
mov
shll
mov
fcmove
xor
add
xor
inc
sti
mov
xchg
mov
cmpsb
cmpsb
mov
mov
jo
stos
adc
mov
push
inc
jno
mov
fcmovnb
add
fstl
add
fldt
adc
fimull
imull
stos
and
push
or
and
inc
outsb
adc
mov
xlat
push
dec
adc
inc
xchg
mov
add
inc
lods
jnp
xor
xchg
mov
sbb
dec
and
js
xor
lock
push
shlb
pushf
cmc
lret
fsubrs
or
dec
add
hlt
dec
out
lret
outsb
push
jb
movsl
xchg
out
jp
sti
add
pop
push
in
mov
jne
mov
mov
popa
dec
call
pushf
gs
fsts
imul
iret
cmp
out
fucom
sbb
in
cmp
push
jg
lret
ret
rorb
mov
xlat
mov
pmulhw
push
mov
mov
add
pushf
mov
dec
cld
in
scas
pusha
sbb
ficomps
push
and
scas
icebp
inc
in
mov
xor
ss
bound
testb
cmpsl
xor
pop
repz
lret
in
sbb
push
movsb
jne
testl
pop
cmp
jl
mov
mov
jp
push
aaa
xorl
and
fs
pop
mov
mov
pop
xchg
ds
adc
cwtl
sub
ljmp
pop
mov
pop
rcll
and
je
inc
clc
cwtl
mov
loop
dec
out
andl
mov
outsl
cmp
in
add
and
scas
xchg
mov
or
fsubrs
js
jo
es
fidivs
hlt
scas
push
psubq
pusha
in
iret
out
pop
jmp
out
push
ljmp
mov
push
xor
into
movsl
and
rcrl
sti
jecxz
or
inc
sub
pop
lods
lcall
data16
push
out
adc
shlb
dec
sbb
pusha
or
stos
lods
sub
jnp
pushf
fs
lods
sbb
dec
inc
into
add
in
fs
iret
mov
or
xchg
mov
mov
out
stos
sub
das
jl
xchg
dec
and
jg
xor
lcall
fiadds
fildl
xor
xchg
sub
cmp
xchg
sbb
pop
pop
mov
sbb
insb
or
fwait
inc
daa
push
repnz
jae
mov
jp
data16
aaa
fistl
pop
jbe
and
mov
jg
icebp
push
or
cmp
jbe
dec
pop
jp
jge
pop
or
push
mov
xlat
xor
and
push
fbstp
and
cmpb
imul
scas
mov
sbbb
add
xchg
jae
add
mov
pop
add
lds
test
dec
int
jecxz
lcall
lea
pop
xchg
xor
test
jae,pt
xor
pop
push
adc
sbb
lock
mov
adc
test
push
insl
ret
mov
inc
in
aas
pop
repnz
jle,pt
nop
pop
mov
jg
data16
enter
pavgw
retw
mov
adc
jb
jbe
xchg
fsubrl
xchg
in
movl
cmp
mov
push
inc
pop
sub
movsl
mov
cmp
fmull
lods
out
inc
pop
mov
test
add
push
push
mov
jno
roll
and
int3
push
shl
xchg
dec
mov
xor
int3
push
cmpsl
add
dec
dec
jns
mov
cmp
push
mov
add
mov
push
jne
push
and
mov
gs
mov
bound
push
in
xchg
pushf
shrb
stc
xlat
negb
push
pop
ss
sub
data16
adc
sub
mov
sub
inc
cmp
sbb
or
mov
mov
lea
cmp
xlat
sbb
mul
movsl
adc
in
sub
fwait
test
stos
aam
add
sbb
cmc
mov
add
cmp
pop
call
jb
mov
rorb
cltd
push
stos
pop
lods
jne
idiv
test
test
stos
shr
jo
and
pop
lretw
fisubl
mov
sbb
mov
testl
add
rorb
pop
clc
pop
dec
outsl
nop
xchg
fcoml
movsl
fstpl
xchg
ret
out
push
test
cli
stos
in
xor
mov
sbb
lret
out
out
xor
sub
cwtl
or
fnsave
xor
fcmovnu
inc
mov
insl
jg
and
fs
inc
sbb
js
mov
fwait
jge
pop
out
adc
repnz
rolb
mov
inc
daa
aaa
mov
stos
and
in
xchg
mov
mov
stc
mov
les
arpl
sbb
add
jne
xchg
js
push
push
aas
loope
sti
xorl
adc
imul
dec
pusha
sahf
shll
adc
jmp
push
mov
fimull
enter
jo
fmuls
pop
mov
hlt
adc
push
rclb
add
out
loopne
pop
shll
loopne
sub
popa
out
subb
cld
mov
and
mov
mov
cli
aas
cmp
inc
mov
cmc
in
add
dec
js
sbb
sbb
popf
insl
sub
dec
sbb
inc
add
lods
test
clc
cmp
lea
stc
adc
es
les
in
popa
sub
mov
bound
movsb
jle
icebp
mov
inc
popf
mov
ja
inc
dec
mov
and
xor
cmp
das
and
push
jl
cwtl
popf
cmp
fldenv
sahf
js
jno
mov
jb
jnp
loopne
mov
mulps
lret
loopne
outsb
xchg
inc
and
jbe
inc
pushf
sahf
fdivp
fcoms
pop
jecxz
cld
cli
cmp
mov
cmp
mov
jmp
push
cmpsb
dec
jb
push
xchg
test
inc
rclb
shl
outsl
xchg
popf
mov
add
push
addr16
fcomip
test
int
popf
pusha
les
shlb
pop
push
fs
std
pop
int
cmc
adc
cmc
nop
pop
jle
sbb
subl
enter
in
sub
lods
mov
cs
mov
jecxz
in
faddl
je
adc
mov
push
cmpsb
lods
pop
mov
dec
add
je
inc
cwtl
mov
in
je
or
push
mov
daa
std
or
leave
pop
lret
adc
mov
xor
call
testb
jg
xor
lcall
push
je
dec
mov
arpl
xor
test
pop
fmuls
xchg
sbb
inc
mov
xchg
lcall
pop
ds
xor
mov
iret
dec
mov
jo
mov
test
pop
push
test
rcl
in
push
mov
jmp
shrb
mov
lret
lds
mov
pushf
dec
fnstcw
clc
fs
sahf
mov
jbe
xchg
mov
sbb
mov
or
lods
bound
insb
mov
or
inc
stc
or
mov
push
push
push
jge
lods
mov
cmpsl
jecxz
test
xor
lods
cld
mov
lahf
std
out
add
inc
mov
sbb
adcl
xchg
cmp
and
into
std
insb
scas
sub
lret
dec
xchg
push
loopne
xchg
aam
push
add
out
mov
xor
out
in
mov
mov
and
mov
cmp
pop
mov
pop
popf
jno
adc
add
test
call
stos
xchg
idivl
xor
jo
add
mov
pusha
jg
aad
rol
andl
fsts
pop
cmp
add
rep
js
xchg
xchg
arpl
outsb
adc
push
aad
sbb
dec
mov
lahf
negl
out
xor
or
push
iret
adc
lret
lret
cmpsl
or
push
jbe
jp
xor
jl
gs
sahf
adc
adc
das
mov
mov
inc
fcmovu
jbe
mov
push
cmp
mov
pop
imul
pop
dec
inc
sbb
out
cwtl
stos
mov
enter
xchg
pusha
add
rcrl
les
mov
xorl
or
xchg
pop
shrb
dec
dec
push
sbb
fnstenv
lods
nop
mov
dec
into
test
test
icebp
mov
sub
mov
pop
call
adc
add
inc
popf
push
xchg
add
cmp
pop
mov
dec
pop
cmpsl
mov
repz
and
pop
push
mov
or
gs
mov
pop
imul
subl
sub
xchg
gs
gs
pop
xor
aad
nop
push
jge
jl
dec
ror
and
sbb
or
mov
mov
out
and
mov
cli
pop
movsb
xchg
out
pop
in
mov
movsl
jae
dec
popa
add
in
data16
repz
dec
test
cmp
jge
and
mov
pop
adc
jo
hlt
sti
mov
xchg
sahf
jl
jle
test
push
push
mov
test
lret
pop
mov
mov
scas
fsubrs
shll
aam
pushl
jne
imul
push
inc
jne
pusha
sahf
sbb
jge
mov
or
add
clc
flds
jb
in
fcmovb
rcll
test
cmp
lret
xchg
scas
hlt
or
or
repnz
pusha
lahf
ljmp
sbb
pop
loop
lds
jmp
mov
sub
clc
dec
mov
out
aas
inc
jp
repnz
sub
dec
jbe
fcmovbe
fistpl
and
push
cmpsl
out
addl
out
test
inc
mov
add
mov
add
jg
push
ljmp
xchg
lods
xabort
stos
sub
mov
or
pop
xchg
popf
std
repnz
mov
jo
push
cmp
sbb
mov
mov
cmp
mov
leave
mov
dec
repnz
adc
pop
sub
das
shrl
mov
push
outsb
mov
loop
pushf
sub
subl
jnp
mov
adc
inc
jns
inc
push
push
enter
fstps
das
push
and
outsb
push
nop
je
push
jnp
adc
outsb
add
mov
icebp
ja
cmp
cs
mov
xor
mov
scas
fdivs
sbb
in
pop
pop
jle
pop
pop
xchg
movsb
sub
sbb
cmc
mov
bnd
lods
mov
jmp
dec
mov
jno
dec
outsl
jl
cmp
dec
or
inc
xchg
and
sub
and
push
sub
add
mov
fsts
shrl
mov
adc
test
sbb
lock
je
pop
notl
int
insb
cltd
pop
jbe
or
mov
roll
in
xchg
cmpsl
mov
cmpsb
mov
jecxz
mov
add
adc
pop
in
ja
test
lcall
mov
dec
std
test
les
or
dec
mov
mov
sub
push
xchg
mov
add
sub
test
test
mov
xor
daa
bnd
jno
fists
test
add
inc
xchg
mov
mov
lods
push
rcrb
jp
cmp
out
xchg
mov
ljmp
jbe
jmp
fdivs
insl
addb
push
iret
add
push
mov
out
jae
iret
out
cld
pop
mov
dec
ljmp
arpl
pop
xor
xchg
xor
sahf
adc
jns
mov
ficoms
daa
sarl
test
sub
sub
adc
inc
mov
lcall
jmp
xlat
xchg
mov
mov
lea
negb
xchg
cmp
xor
add
movsb
aas
lcall
mov
loopne
daa
xor
bound
iret
imul
movsl
jge
cmpsl
mov
and
sbb
lret
repz
fsub
test
sbb
rcrl
mov
test
dec
aam
pusha
cmp
dec
ja
push
pop
or
sahf
mov
adc
sbb
repnz
gs
je
ds
sbb
aas
add
fbstp
in
xor
xlat
adc
sbb
ss
add
jle
nop
ds
mov
pop
or
xchg
in
inc
push
jmp
inc
mov
stos
dec
std
shlb
adc
cmp
cmpsl
mov
out
or
adc
xor
add
push
mov
in
mov
loope
push
xor
push
jne
sbb
add
rolb
fnstcw
loop
push
sub
mov
ret
sub
lock
push
hlt
jecxz
xchg
scas
mov
dec
jmp
push
mov
cmp
decl
xchg
add
xchg
js
jbe
sbb
xor
imul
maxps
cmp
rcll
jmp
lock
xchg
pop
loop
je
and
xchg
mov
repnz
jmp
loopne
dec
imul
sub
cs
iret
mov
jo
xchg
mov
leave
and
add
mov
in
jmp
test
daa
pop
ficomps
in
shrl
jne
les
jmp
sub
push
mov
hlt
ret
pop
pop
jg
xchg
xor
or
or
and
js
jle
leave
xlat
pop
divl
pop
cwtl
push
cltd
out
loope
and
popf
jle
lea
insb
mov
imul
jge
push
lods
sbb
pop
cwtl
mov
and
sub
adc
push
fistps
jo
add
and
and
add
mov
loopne
pop
cmp
ss
push
jmp
push
repz
ss
pop
and
push
dec
mov
adc
add
das
sub
jmp
daa
dec
shlb
dec
daa
mov
out
fs
push
jecxz
mov
sbb
fwait
addb
fmull
sbb
test
movsl
cmc
repz
ss
lea
ja
cld
cwtl
add
xor
pop
xor
push
aad
jo
jmp
mov
leave
sahf
mov
fisttpll
popf
jne
pop
shrl
sub
push
les
ficomps
loop
cmp
add
mov
loopne
inc
icebp
fists
stos
cmc
cmp
or
icebp
js
enter
je
aaa
jmp
jne
fisubl
jns
push
out
out
push
sbb
aad
insb
push
dec
sub
sbb
repnz
push
pop
sub
jle
cltd
dec
aam
sbbl
sbbl
pop
sbb
xor
addr16
mov
sub
sub
and
jg
and
or
cld
stos
dec
rclb
dec
add
pop
loopne
xor
mov
lahf
mov
cmp
fmulp
mov
jle
pop
lret
insl
das
xchg
xor
mov
mov
enter
fnstenv
xchg
sub
in
aam
mov
dec
mov
pop
or
or
imul
push
aam
mov
mov
sbb
sarl
pop
mov
clc
jmp
cmp
mov
dec
out
inc
das
sahf
dec
xor
sbb
clc
insl
jb,pn
dec
test
std
or
loopne
cmp
out
mov
cmp
or
and
adc
int
dec
adcl
dec
inc
aas
sbb
add
insb
fmulp
and
dec
icebp
xor
adc
jecxz
cltd
ss
and
stos
shlb
les
or
jae
or
mov
fistl
and
out
into
mov
xchg
xchg
jmp
dec
addr16
push
dec
movsl
nop
and
pop
jle
fldl
stc
ljmp
sub
pop
cld
lahf
mov
push
push
xchg
jp
dec
lret
mov
repz
mov
mov
roll
call
lods
mov
rcll
outsl
movl
mov
aas
add
jle
loop
je
cmpl
or
jmp
add
int3
aas
cmpsb
clc
test
mov
packssdw
out
jne
push
sub
int3
repnz
loope
add
clc
aaa
mov
xor
aaa
dec
mov
ja
sub
andb
imul
mov
int
dec
addr16
jle
jnp
invd
arpl
xchg
inc
fiaddl
movsb
or
mov
mov
ror
leave
movsl
iret
ret
xchg
mov
imul
xchg
lods
lods
jle
test
pop
push
jb
aas
cmp
jmp
scas
pop
xchg
imul
push
add
pop
in
fidivrl
mov
push
mov
add
aam
pop
sbb
cmp
xchg
popf
mov
push
inc
mov
adc
ss
sub
clc
scas
mov
jns
pop
push
pushf
inc
aad
lret
push
inc
dec
xchg
sbbb
mov
fstpl
dec
and
nop
inc
out
mov
insb
shrl
in
out
push
ja
mov
sahf
or
int
xchg
jns
scas
push
dec
push
scas
xor
xor
dec
mov
inc
mov
jnp
ss
nop
and
xor
and
pop
insl
pop
inc
pmullw
lret
mov
push
or
daa
out
iret
enter
mov
sub
cmp
fimull
scas
cmc
loop
and
push
jne
pop
aas
imul
pop
pop
insb
push
in
cmp
adc
add
sub
orb
sbb
cmp
stc
lds
mov
sub
sti
xchg
and
leave
or
subl
pop
dec
lcall
popa
pop
imul
mov
cmp
leave
repnz
mov
mov
ds
sbb
mov
adc
inc
ficomps
pop
inc
mov
dec
fldcw
jne
scas
mov
test
add
cltd
incb
add
mov
in
test
sub
jmp
addl
cmp
fwait
mov
mov
and
enter
pop
xchg
in
stos
adc
xchg
test
scas
mov
pop
les
add
mov
dec
adc
repz
pusha
mov
xchg
mov
imul
sbb
sbb
icebp
jns
jo
movsl
fcoml
cmp
jg
xchg
adc
inc
fdiv
mov
outsb
push
outsl
dec
pop
add
mov
sbb
fadds
int
mov
inc
inc
arpl
pop
js
std
dec
stos
inc
ret
jecxz
push
out
push
movsl
mov
xor
push
scas
rcll
mov
jp
stos
mov
add
xorl
xchg
inc
arpl
jno
imulb
test
add
js
orb
sar
outsb
arpl
and
fisubrl
iret
mov
sbb
or
rcll
cmp
call
mov
pop
jb
mov
in
cmp
cmpsl
jecxz
lds
xchg
rcl
or
mov
test
adc
inc
and
sub
mov
pop
lock
test
fcmovnbe
sub
imul
dec
aad
xor
ret
shll
test
out
insl
sub
aas
sub
clc
cli
lods
jnp
jmp
jno
xor
add
cwtl
push
jp
lods
movsb
inc
ret
pop
sahf
jo
pop
iret
xchg
jbe
sub
xchg
sbb
nop
adc
pop
fdivl
imul
cltd
test
out
inc
or
and
loope
jle
pop
and
mov
aas
jg
mov
addr16
jge
es
cli
movsl
test
mulb
subl
int3
and
mov
lods
aas
xlat
rcrb
mov
stos
sbb
aas
push
add
filds
arpl
imul
ja
cs
clc
add
and
repnz
push
mov
pop
fsubs
pop
cwtl
push
out
faddl
dec
call
mov
mov
fmull
adc
or
shr
das
loopne
jnp
cmp
ljmp
pop
inc
push
cld
decb
ficoms
inc
mov
imul
aad
aaa
add
dec
mov
mov
inc
dec
and
mov
and
lods
mov
dec
lods
mov
lds
enter
sbb
testb
mov
add
or
movsb
jbe
in
xchg
pop
mov
xchg
push
sahf
in
inc
popa
mov
je
mov
pop
adc
and
test
cmp
jp
cmp
sub
pop
mov
jle
push
sahf
insl
stos
mov
add
decl
cmp
push
mov
test
and
inc
repz
call
stos
cltd
push
xchg
mov
sbb
sbb
jmp
in
les
add
ret
mov
rcrl
leave
lcall
inc
xchg
mov
mov
call
and
sbb
in
shlb
outsb
scas
push
sub
inc
outsl
ss
or
aam
or
pop
mov
repz
cmp
test
sbb
jne
jg
jo
jb
cmp
or
bound
xchg
jge
mov
cmp
data16
jns
push
test
xchg
sbb
addb
jge
arpl
jb
jge
sub
xchg
test
mov
test
nop
adc
jb
cmpsb
add
mov
out
rcr
frstor
in
decl
and
decl
js
jmp
mov
push
and
es
or
jmp
cmp
scas
outsb
or
rorl
xchg
ret
int
jns
inc
push
xorl
push
shll
popa
inc
testb
sub
shll
and
loopne
push
push
ds
cmp
mov
jmp
lret
mov
pop
xor
shl
jge
cmc
ret
shl
jne
dec
lea
stc
loop
jl
and
insl
add
cmpsl
or
sbb
xchg
xlat
loopne
outsl
or
pandn
pop
add
jns
dec
pop
adc
add
aaa
cli
push
xchg
aad
rcr
fidivrs
cmp
cwtl
iret
int3
in
test
cmp
mov
cltd
xor
pop
adc
iret
cmp
jp
ljmp
ljmp
push
cwtl
and
in
pop
dec
sbb
pop
mov
jg
in
and
or
sub
fmull
add
cwtl
fsubrl
fiaddl
pop
jg
outsb
add
lods
lret
in
jp
movsb
xchg
push
xor
mov
push
jmp
push
ret
cmpsb
fsubl
repnz
mov
hlt
xchg
mov
push
lea
insl
mov
jbe
mov
mov
pop
outsl
sti
cmp
inc
lea
loopne
pop
jle
mov
stos
inc
sbb
mov
lret
in
jbe
sbbl
cmp
cwtl
mov
jp
dec
pop
in
mov
xchg
pop
push
jae
idivb
ret
outsl
stos
rcrl
cli
sub
cmpsl
scas
fistps
jb
je
sub
pop
pop
mov
aaa
ljmp
xchg
mov
cli
xor
loope
push
cmp
dec
aaa
mov
jmp
movsb
stos
mov
lods
inc
in
insl
or
or
fistpll
cwtl
sub
dec
pop
pop
sub
dec
xor
mov
sbb
jne
cld
push
push
pop
sbb
sti
bound
loop
push
xor
mov
outsb
loop
mov
pop
mov
mov
jg
pop
mov
outsb
cmp
sbb
cmp
lret
inc
rcrl
mov
add
adc
sarl
mov
lock
jmp
fidivs
mov
adc
repz
mov
push
int3
sahf
rclb
test
adc
notl
sti
inc
mov
addr16
dec
lock
and
call
sub
inc
xchg
pop
lahf
push
mov
jecxz
xchg
cmp
mov
repz
mov
nop
std
icebp
imul
or
sbb
insb
jns
out
in
imul
in
add
cmpsl
sbb
imul
cmp
cmp
enter
push
lcall
into
inc
xor
and
cmp
incl
lods
in
jae
mov
push
xchg
dec
and
cmc
cld
rclb
sub
or
cld
movsb
insl
mov
or
test
int3
sbb
pop
popf
std
cmpsl
dec
and
movsl
fistpl
pop
data16
xlat
cmp
and
leave
pop
call
dec
jecxz
push
ljmp
dec
add
add
dec
push
gs
es
out
repnz
push
pop
sub
fdivp
push
xchg
std
mov
in
clc
xchg
push
add
ljmp
jo
push
cmp
push
test
lret
inc
mov
push
and
sub
aas
jnp
stos
shl
adc
xchg
sub
shlb
ret
pop
hlt
mov
rcrb
and
add
arpl
fsts
repnz
int3
xchg
jns
cmp
scas
lods
cli
push
inc
cld
call
movsl
push
popa
fists
fwait
leave
mov
pop
cmpsb
cmpsl
inc
push
mov
xchg
add
jp
pop
jmp
cmp
pop
ds
cmpsb
fisttps
paddsw
mov
cwtl
jle
jmp
fwait
jge
jb
cmpsl
shll
rcrl
mov
sub
mov
inc
inc
or
mov
xchg
sub
icebp
hlt
inc
pop
popf
scas
rcll
cmp
or
fidivrs
pushf
xchg
xlat
and
fisttpl
bound
and
pop
cmpsb
loope
icebp
mov
insb
loopne
push
xchg
add
mov
jno
push
push
jnp
nop
mov
scas
aas
lcall
fstl
fildll
fisubrs
out
add
mov
stos
decl
add
stos
andb
sub
test
fsubrl
orb
arpl
clc
fsubl
dec
inc
or
jbe
jb
ret
nopl
lods
mov
mov
mov
mov
cwtl
leave
bound
and
cmpsl
fwait
hlt
xchg
lea
mov
in
xor
mov
lahf
jne
cmpsb
dec
pop
jnp
adc
rorl
hlt
je
fiaddl
cmp
jge
test
jne
repnz
pop
jnp
adc
popf
inc
dec
cmp
inc
or
jle
or
jl
cmpsl
cmp
fcoml
push
push
pop
es
mov
shl
and
push
pop
test
adc
cmpb
sub
add
subl
int3
hlt
and
dec
pop
call
repz
test
push
inc
dec
fadds
jg
fucom
in
loop
stc
dec
int3
gs
mov
add
push
jp
add
cmp
mov
add
lahf
xchg
int
jp
mov
imul
in
inc
loope
pop
shll
dec
in
gs
mov
out
adc
and
in
push
xor
adc
mov
std
add
push
jae
cli
into
bound
icebp
stc
add
cwtl
or
add
xor
test
push
add
and
mov
push
jle
push
fiadds
mov
add
icebp
jae
mov
into
je
test
or
xchg
mov
mov
and
sub
mov
mov
add
movsl
iret
xchg
xor
xor
ret
imul
mov
ret
xchg
not
push
dec
scas
sbb
fisttps
fptan
mov
es
fistl
cld
push
insb
xor
cmp
push
mov
movsl
jl
add
pop
outsb
sahf
xchg
mov
xchg
clc
xor
cmc
ljmp
int3
aad
mov
or
aad
xchg
xor
pop
pop
jmp
jp
xchg
iret
add
xlat
sub
mov
rcrb
cmp
leave
lods
icebp
or
sbb
negb
sti
mov
jns
pop
add
inc
and
push
mov
lea
in
pop
lods
cmp
dec
pushf
mov
push
daa
int
flds
fsub
movsb
adc
mov
nop
negb
ds
negl
cli
popa
fisttpl
mov
pop
mulb
ret
out
movsb
test
mov
xor
adc
xchg
adc
cs
jne
jge
cltd
outsl
notl
stc
test
movaps
imul
xor
hlt
lret
enter
push
xor
fsubrl
jo
cmp
gs
xor
add
sbb
xor
xchg
das
mov
aas
add
adc
cltd
loopne
movsl
mov
lea
sub
xor
xchg
xor
pop
inc
cs
sarl
jne
xchg
sbb
mov
jo
dec
loope
repz
xchg
pop
add
xchg
leave
test
inc
pop
stos
jecxz
mov
lods
sub
and
test
xor
ficoms
into
mov
xchg
mov
xor
add
adc
xchg
out
bound
or
or
mov
cltd
fstl
sbb
jg
xorb
dec
movsl
push
push
cmp
mov
jmp
or
mov
sub
popf
fstpl
iret
out
pop
outsl
mov
jno
int3
jbe
push
push
jg
popa
ljmp
jle
cmpsw
jae
rorb
cmp
repnz
sbb
push
sbb
xor
clc
lock
mov
push
shr
pop
cwtl
arpl
mov
jmp
dec
es
lcall
sbb
or
jmp
pop
lea
mov
mov
push
in
cmc
fs
jb
xor
ror
in
adcb
adc
mov
pop
out
clc
push
mov
xor
inc
push
lret
dec
xor
xchg
movsl
push
mov
out
jle
adc
sbb
xor
xlat
mov
xchg
sub
in
repz
fldl
add
loope
or
or
dec
cmc
inc
pop
out
insb
xor
or
add
popa
jo
imul
lcall
dec
in
lret
iret
jae
jg
xor
xchg
cmp
jne
stc
nop
mov
and
sbbl
mov
mov
out
xchg
sub
jl
inc
stos
pop
cli
mov
lds
mov
jl
sarl
enter
stos
xchg
icebp
scas
sub
and
dec
cmp
lea
test
push
lock
das
pop
jle
xchg
xchg
jbe
clc
jl
dec
ds
jns
mov
pop
inc
inc
xchg
cmp
push
pop
or
into
stos
lahf
or
mov
push
and
jno
or
xor
popa
jmp
mov
mov
arpl
xchg
loop,pt
inc
outsl
adc
jne
xor
sti
icebp
push
movsb
xchg
inc
add
or
cmp
xor
mov
pop
stc
push
lcall
ja
sub
test
push
fdiv
and
inc
and
stc
xchg
xchg
adc
shll
pop
fisubl
aas
sbb
popa
xor
in
insb
call
inc
and
pop
mov
ret
push
mov
mov
jns
inc
push
push
pop
inc
data16
ds
inc
xchg
outsl
mov
xchg
push
aas
xchg
xor
jp
cli
scas
movsb
jecxz
pop
loope
hlt
adc
imul
add
adc
sbb
push
xor
pop
bound
jno
or
pushf
mov
jl
adc
push
adc
jecxz
addr16
sbb
popl
push
mov
mov
xchg
popa
mov
mov
shr
bound
sbb
sub
mov
sub
cmp
xchg
lods
cld
push
inc
adc
and
lock
rcrl
xchg
outsl
lock
aam
into
or
fwait
movsb
push
push
repz
or
addr16
jecxz
sub
cmp
test
xlat
mov
sbb
lret
cmpsl
not
stos
pushf
mov
je
mov
adc
cmp
rclb
es
insb
lock
push
adcb
rolb
jmp
lcall
addr16
add
jb
shl
mov
pop
or
nop
aaa
movsb
and
jle
in
cltd
fs
fisttpl
sub
in
data16
rcrb
test
sbb
aam
iret
pop
push
sub
mov
into
pop
mov
jno
push
sbb
addr16
and
shll
nop
jecxz
mov
loopne
add
or
mov
enter
or
ror
dec
or
mov
out
xchg
add
mov
cmp
cmpsl
or
fnstsw
mov
das
dec
js
in
xlat
cwtl
dec
xchg
ljmp
mov
adc
jecxz
rcrb
push
test
mov
inc
nop
mull
aas
xlat
xor
out
lret
call
lret
icebp
sbb
sub
dec
fwait
or
icebp
inc
inc
ret
and
dec
dec
push
xor
scas
out
push
xlat
outsb
repnz
dec
inc
mov
adc
stos
xor
cld
or
and
jns
push
test
dec
stos
ficoms
mov
and
ret
pop
test
xlat
lods
pop
shrl
iret
push
jno
lret
jle
jnp
jne
jmp
sub
lods
dec
cltd
dec
xor
popf
pop
pushf
and
addl
icebp
jecxz
pop
mov
pop
sub
sub
cmp
in
pop
cmpsb
mov
pop
mov
pop
in
in
add
aam
mov
in
pop
cmp
xor
push
adc
pop
mov
icebp
std
mov
fsubl
iret
cmp
inc
std
aaa
sub
sbbl
mov
lret
insl
mov
jmp
pop
ljmp
and
mov
mov
cmp
ljmp
pop
call
lea
cmp
call
ret
ret
xchg
test
shlb
adc
mov
mov
inc
fistpl
inc
lret
mov
fdivl
dec
cld
sarb
insl
adc
shll
lcall
mov
stos
jmp
adc
cmp
pop
mov
ss
adc
in
mov
movsl
lret
pop
mov
sti
gs
sub
mov
inc
sbb
stc
cmp
data16
loop
pop
test
sbb
out
pop
stc
rolb
or
enter
in
outsb
nop
mov
je
stc
pop
aaa
aas
sub
cli
in
int
inc
mov
int
mov
movsb
fidivrs
pop
arpl
jg
in
outsb
int
aas
fcmovb
jmp
jg
outsb
cwtl
and
rcrb
mov
xlat
add
add
test
paddusb
int3
push
xchg
adc
push
and
mov
cmp
mov
cli
stos
std
cs
test
popf
inc
xchg
icebp
mov
mov
aas
das
or
fisubs
xchg
sub
adc
stos
popf
test
mov
push
and
aam
xor
or
push
ja
stos
enter
mov
cmpsl
js
lcall
mov
cmp
vpmacsdd
das
pop
sbb
mov
bound
cmp
es
xchg
cmp
adc
xor
xchg
cmc
iret
pslld
dec
add
sbb
or
mov
iret
int3
sbb
mov
dec
cmpsb
aaa
jne
push
inc
pop
sbb
xchg
adc
cmp
add
int
cmp
jp
xorb
pop
movsb
cmp
sbb
cmp
scas
jge
es
sub
outsl
shlb
or
xchg
push
fsubrs
pop
repz
dec
xor
jle
jg
xchg
jno
je
xchg
hlt
jp
aas
inc
ds
js
and
into
ret
adc
jecxz
dec
and
out
bnd
xlat
shl
and
jbe
adc
adc
fisubrl
shrl
xor
adcl
sbb
inc
jge
and
lret
sbb
lock
js
mov
adc
cwtl
dec
arpl
or
stos
push
je
bound
cli
xchg
pop
fldcw
sti
dec
sbb
enter
insb
xor
jmp
jecxz
lahf
pushf
out
pop
stos
test
sbb
add
jae
ja
mov
jnp
mov
or
mov
mulb
sub
jb
mull
or
loopne
dec
pop
popa
push
mov
hlt
adc
scas
pop
add
jecxz
adc
sbb
sub
adc
cmp
cwtl
pop
insl
sbb
xor
aas
push
cmpsl
xchg
lret
fisubrs
cmp
mov
movsl
jo
add
cli
stc
dec
xchg
cmp
jge
les
sub
and
ror
into
jge
add
jg
xor
inc
dec
mov
fs
inc
sbb
push
inc
add
mov
push
mov
or
push
sahf
or
pop
lcall
adc
imul
daa
sbbb
test
ja
jl
adc
jo
push
dec
adc
aas
int3
lea
es
in
jmp
lret
loop
push
mov
outsb
mov
rcl
or
int3
inc
or
ds
shlb
jno
jae
push
rcrb
mov
xchg
xchg
add
lods
pop
repz
xor
xchg
mov
roll
ds
clc
push
xchg
push
es
push
mov
cmp
cmp
dec
mov
sbb
add
out
orb
push
sahf
sub
outsb
mov
xchg
dec
dec
and
out
fsubl
ret
mov
daa
pop
imul
sub
add
int3
jle
popa
inc
pop
addr16
fstpt
mov
stos
aaa
xchg
push
mov
lds
mov
sub
mov
and
sub
sub
and
ret
inc
dec
cmp
adc
dec
movnti
std
lods
and
call
mov
fimuls
cmp
divl
jns
mov
in
inc
mov
mov
cmp
fwait
mov
lds
push
adc
orl
fisubs
jne
and
leave
jp
ja
mov
or
stos
insb
js
lret
cmp
xor
shlb
iret
sbb
in
push
lret
push
jge
mov
sti
out
das
add
outsb
xchg
cs
test
jns
je
imul
xlat
lea
roll
adc
sub
mov
daa
pop
mov
push
and
mov
xchg
in
hlt
out
ss
mov
xlat
mov
aaa
xlat
cmp
mov
or
sbb
loop
jmp
xor
mov
jle
sbb
dec
and
mov
dec
mov
or
push
adc
scas
and
and
lods
in
mov
add
pop
nop
insb
iret
icebp
and
sub
pop
push
in
stos
arpl
js
mov
cmpsb
gs
ljmp
rolb
pop
push
rcll
inc
inc
mov
and
cmp
sub
mov
fmulp
push
aad
mov
loope
in
mov
push
shrl
cs
jg
gs
sarb
rcrb
add
decl
mov
sti
test
pop
jo
out
call
ficoms
xchg
xchg
mov
popf
xor
subb
movsb
test
loope
ficoml
dec
lret
roll
sbb
cmpl
mov
rorl
xchg
xor
icebp
lds
je
push
or
cmp
push
and
rcll
xor
out
iret
mov
lahf
push
and
push
leave
andb
dec
add
add
call
jle
in
scas
and
int
adc
inc
jl
in
cmp
sub
add
test
adc
jmp
jmp
xorl
ljmp
xor
mov
or
cld
out
pop
fs
and
ret
int3
les
mov
mov
loope
ror
call
div
jmp
imul
pop
jno
add
or
push
jne
je
shr
inc
std
lods
push
aas
jne
aaa
inc
outsl
popf
fs
dec
mov
pop
jmp
push
adc
js
pop
or
and
lcall
lret
call
imul
cld
mov
insl
repz
test
sbb
jmp
sbb
fmull
mov
xchg
mov
mov
pop
mov
js
outsl
sar
stc
int
lcall
fdivr
xchg
fnstsw
mov
mov
sar
inc
jno
push
js
test
data16
and
imul
outsl
cmp
jge
sbb
pusha
ljmp
jbe
push
ljmp
lahf
test
or
inc
imul
shr
mov
sub
pop
lcall
loope
xchg
sbb
popa
and
stos
ja
out
mov
push
mov
mov
roll
ret
xchg
test
cli
mov
sbb
cmp
pop
lds
stc
cli
pop
push
or
pop
subb
pop
dec
fldcw
test
in
icebp
lock
subb
adc
and
andl
js
sbb
shll
jb
push
mov
js
push
das
mov
int3
sbb
pushf
push
in
dec
ss
push
lret
dec
mov
sti
inc
mov
mov
ja
test
das
int3
test
and
or
cmp
cmp
das
mov
add
lahf
pop
cli
cmpsl
mov
es
packuswb
add
pop
arpl
jnp
sbb
in
ja
mov
add
push
cmc
shrl
outsb
cs
fcomi
push
arpl
cmp
dec
xchg
sbb
cmc
jnp
orl
fcomi
lods
ds
popf
ss
push
loopne
mov
je
outsl
js
push
lock
and
pop
outsl
fs
into
gs
push
rcr
add
jbe
gs
inc
int
sti
xchg
js
nop
mov
xor
mov
int3
add
mov
add
and
jne
std
loop
fstps
inc
out
fmuls
jg
sub
xor
jecxz
sub
push
repnz
jnp
sub
pushf
call
lock
and
aas
push
lea
inc
add
je
cli
outsl
dec
iret
push
pop
add
pop
push
push
outsl
jno
push
xchg
push
imul
push
in
pmaxub
jb
pop
in
aaa
and
sub
cs
or
mov
cmp
out
insb
push
add
and
sbb
and
push
imul
in
add
add
orb
add
dec
pop
fwait
or
ja
jmp
and
fsts
pop
xor
imul
xchg
cld
int
pop
lahf
jmp
sahf
aas
push
icebp
cltd
adc
jne
lea
stos
lods
lahf
pusha
cmp
dec
xor
out
and
sub
xor
mov
mov
fwait
shlb
add
and
adc
or
adc
shr
aam
lock
movsb
movsb
loope
mov
lcall
add
xor
fdivs
adc
pushf
fiadds
mov
cwtl
or
test
inc
sbb
inc
leave
orb
add
jns
mov
cmp
ss
mov
cli
fildll
mov
push
and
ret
sbb
cmp
push
mov
inc
mov
dec
clc
outsb
add
test
push
push
cmpsl
pushf
shl
js
mov
mov
daa
repz
mov
pop
test
mov
ret
test
movb
rcrl
ss
jg
xorps
adc
mov
sub
mov
mov
lret
mov
andl
daa
and
xchg
add
rorl
jns
pop
and
sbb
lcall
xor
xchg
sbb
imul
jae
sub
leave
xchg
addr16
test
sarb
into
aaa
lea
sub
sar
xlat
jbe
ss
jae
insb
fidivrl
sbb
jno
mov
out
jmp
aaa
dec
jmp
inc
jmp
mov
add
pop
ss
mov
lahf
addr16
pop
jbe
je
in
ds
loopne
jnp
inc
scas
popw
inc
mov
jecxz
daa
js
lds
sub
jo
and
repz
stos
mov
sbb
orl
imul
sub
add
in
push
cld
push
es
outsb
jge
jle
pop
inc
dec
sbb
cltd
loope
mov
dec
call
test
add
iret
sbb
xor
mov
xchg
stos
lock
mov
ret
add
cmp
sub
xchg
stos
inc
xor
scas
outsb
xchg
int3
iret
xchg
outsb
pusha
mov
fwait
xor
push
xor
xchg
xor
xor
cmp
in
mov
aam
adc
scas
and
pop
ret
hlt
dec
push
enter
xchg
inc
mov
add
cli
sbb
jecxz
daa
push
mov
hlt
dec
jae
jmp
sbb
test
pop
and
pushl
fsubrs
mov
testl
sub
jg
pop
sub
ja
repz
jmp
in
stc
daa
iret
data16
push
xor
pop
mov
inc
xor
dec
sti
push
movsl
adc
ljmp
push
int
stc
sahf
stc
jo
jmp
aaa
insl
and
es
les
inc
jo
loope
jp
mov
in
sbb
dec
xor
test
push
push
and
addr16
sub
dec
xchg
cmp
adcl
pop
aam
cli
mov
sub
add
fucomi
mov
inc
mov
rorb
cmpsl
movsl
in
adc
stos
notb
and
scas
adc
and
jmp
int
repnz
sbb
vpcmpgtw
sub
in
pop
in
lods
popf
scas
or
or
movsl
stos
mov
int
sbb
mov
and
cld
rolb
push
ret
jbe
mov
lret
lret
lea
clc
ds
mov
push
scas
and
and
push
xor
xor
sbb
xor
decl
insb
or
lods
mov
in
cmp
mov
jg
xchg
jae
idivl
cmc
fildll
mov
jg
mov
xor
add
leave
aad
into
popl
and
das
cs
push
fisubrl
pop
mov
out
add
dec
fcompl
xchg
ljmp
lret
inc
in
mov
sub
lahf
mov
js
stc
adc
push
decb
dec
loopne
out
push
inc
sub
dec
push
ret
pop
jecxz
sub
jmp
cmp
das
adc
xor
pop
orb
jo
lds
scas
xchg
jns
icebp
jg
rolb
cmc
in
aaa
push
dec
ds
xchg
adc
insl
addr16
stos
xor
data16
test
cld
hlt
mov
jmp
enter
sbbb
cmp
aad
je
pop
shl
scas
in
out
sbb
adc
popf
add
pop
shr
xor
sub
push
push
jne
pop
lret
mov
pop
mov
xchg
dec
or
scas
jae
dec
xchg
outsl
push
icebp
cltd
lcall
int3
mull
filds
jp
pop
push
mov
scas
mov
rcrb
mov
fstps
sub
xor
inc
adc
sbb
data16
aad
xor
mov
loop
xchg
xor
mov
cmp
clc
pop
lret
jmp
shll
mov
jp
out
stos
lds
inc
loop
cs
ss
and
int3
cld
push
cmp
dec
ss
addr16
addr16
out
xchg
push
daa
ret
rcrl
cmp
inc
cltd
and
cli
mov
cld
dec
and
hlt
into
and
push
pop
ja
ljmp
or
in
adc
cs
pushf
xor
cwtl
gs
scas
mov
fdivs
sub
mov
sbb
fsts
gs
les
pop
lods
jno
inc
xchg
in
rcr
mov
fwait
sub
or
pop
adc
ljmp
dec
bound
mov
xchg
das
into
cmp
scas
movsl
movsb
cmpsb
enter
sbb
adc
cmp
mov
and
jmp
jl
call
inc
xchg
pop
fstpt
adc
jo
mov
out
cmp
shrb
imul
pop
sbb
aaa
jb
cmpsl
push
xlat
adc
ljmp
jp
pushw
add
jae
jge
test
pop
cmpsl
std
sub
test
data16
mov
ss
or
stc
xchg
xchg
cmp
mov
mov
ljmp
das
push
push
add
push
mov
dec
inc
lahf
fcmovbe
mov
pusha
outsl
out
xchg
out
pop
js
adc
fldt
xchg
les
in
xchg
rorl
popa
and
addr16
jecxz
decl
mov
loope
ret
pop
cs
inc
adc
adc
or
and
mov
arpl
and
movsl
cmpsb
xchg
xchg
xchg
mov
js
lcall
es
jmp
sbb
jnp
or
mov
mov
cmpsb
stc
out
movsl
inc
and
or
adc
adc
fdivrl
pop
add
repnz
cmp
fwait
add
jnp
mov
movsl
inc
out
fnsave
add
adc
lock
add
sub
into
test
lods
outsl
test
movl
dec
push
out
push
adc
iret
mov
push
orl
in
faddl
icebp
das
lahf
push
flds
mov
push
xor
sbb
test
in
lods
lods
ficoms
mov
loop
into
out
in
ds
inc
and
mov
mov
cld
insb
imul
movsl
outsb
test
in
jp
push
repnz
pop
mov
in
mull
sub
mov
mov
sub
decb
adc
push
leave
rolb
cwtl
rclb
cs
shlb
shrb
xor
jmp
fsubrs
mov
negb
stos
js
push
jne
bound
xchg
inc
add
lahf
and
lcall
out
popa
mov
inc
cli
xlat
cmovle
daa
repz
or
int
in
mov
jnp
and
pop
dec
gs
imul
xorl
jo
xchg
movl
push
mov
inc
lods
mov
cmp
push
sar
scas
push
pop
mov
fcomp
loop
and
aad
cmpsb
push
pop
std
lds
aad
push
addl
shl
hlt
outsb
mov
and
ds
mov
loope
pusha
add
cmpsl
push
inc
sub
loop
dec
sahf
xchg
cmp
jns
inc
in
setns
shll
stos
lods
sbb
xor
xchg
enter
xor
rcll
hlt
cmpsb
jo
rclb
pop
scas
cmc
rolb
in
fs
add
cld
icebp
aam
mov
jle
push
add
dec
inc
lock
mov
sti
dec
mov
cmpsl
inc
fiaddl
xchg
cli
mov
jge
lods
dec
daa
push
ja
sub
stc
outsb
call
or
lcall
jae
fcoms
push
mov
xor
repz
xchg
fstpt
lods
add
mov
in
mov
pop
rolb
loope
jae
pop
lock
adc
pop
ja
add
insl
repnz
es
rolb
xor
fdivr
sub
inc
int3
pop
push
lock
and
and
outsb
jns
mov
inc
adc
rcl
and
lret
ss
pushf
dec
int
mov
mov
add
cmp
or
add
gs
imul
mov
dec
outsb
jmp
xchg
cmpl
clc
call
jecxz
mov
xor
dec
pop
hlt
shll
inc
popa
popa
enter
dec
aaa
and
xchg
xchg
nop
out
cmp
mov
jbe
clc
loope
and
mov
jae
outsb
push
mov
es
scas
xor
adc
out
mov
xchg
adc
cld
nop
jae
inc
or
jo
imul
pop
add
add
data16
xor
ret
fcmovbe
in
add
bound
inc
sub
dec
pop
pop
fnstsw
jg
mov
pop
push
icebp
lock
add
jmp
mov
sub
or
sbb
shlb
inc
xchg
movsl
mov
pop
pop
sbb
cltd
ret
ja
lods
sti
add
add
movl
ret
jl
insb
cmp
add
fwait
xor
int
in
pop
pop
fsubrl
fisubs
pop
cmp
lret
js
mov
movzwl
sarb
rolb
insl
jmp
mov
bnd
mov
add
je
sbb
sub
loopne
jecxz
lea
pop
outsl
and
sbb
insb
stos
fwait
push
ret
mov
mov
add
aam
imul
out
add
pusha
out
jg
jno
push
loopne
or
outsb
mov
cmp
mov
lret
stos
pop
divl
xchg
dec
outsl
add
mov
scas
mov
dec
rcr
and
cli
lcall
ljmp
rol
test
pop
in
pop
dec
jg
dec
sbb
ds
sub
aad
out
and
sub
sahf
mulb
xchg
dec
lea
xchg
xchg
xchg
jmp
repnz
mov
xor
stc
or
jmp
loop
decb
push
push
ss
es
mov
std
inc
int
push
or
insb
pop
jno
adc
mov
sbb
and
ret
popa
fdivrs
and
mov
dec
push
inc
and
rol
dec
aad
pop
jg
out
lret
push
sbb
mov
lods
cld
add
push
cld
xor
mov
mov
pop
xchg
xchg
insl
and
divb
insb
out
cmp
dec
jp
pop
rol
aaa
sbb
into
pop
in
and
mov
and
adc
cmp
sub
ds
sub
inc
mov
or
inc
dec
psubw
cwtl
xorl
push
pop
mov
ret
mov
push
int
or
mov
fildll
cmp
sti
mov
jge
repz
dec
stos
add
std
scas
push
mov
fdivr
pop
sbb
outsb
mov
adc
pop
out
nop
inc
push
push
mov
mov
cmp
add
sti
das
lock
js
and
movlps
addr16
imul
cmp
popa
jmp
sbb
pusha
dec
or
mov
testl
andb
call
mov
inc
mov
xor
push
sub
jb
ljmp
ret
dec
insb
sub
dec
mov
xor
mov
ud2
lds
cmpsb
inc
xchg
mov
iret
add
in
hlt
push
and
aaa
jle
test
cwtl
mov
sub
xorb
add
push
jmp
push
repz
inc
in
mov
in
xor
sahf
sub
into
fcoms
stos
xor
jp
sub
adc
addr16
mov
xor
mov
sbb
popa
inc
cmpsl
xchg
pop
out
out
fmul
ljmp
cmpsb
sti
cmc
lret
mov
jne
mov
psraw
mov
adc
subb
inc
mov
ja
push
jecxz
outsb
repnz
inc
clc
mov
xchg
xor
mov
add
push
call
outsl
fisubl
je
xor
flds
aas
mov
and
in
lock
jg
lods
hlt
jae
sti
inc
push
mov
and
pop
jl
mov
xor
xchg
jb
mov
fwait
or
test
sbb
inc
fidivrl
fdivrp
ds
icebp
mov
out
mov
sbb
inc
lods
lcall
mov
mov
out
and
sub
add
mov
xor
xchg
jne
aad
fstl
fcoml
push
fcoml
addr16
icebp
imul
inc
or
and
xchg
mov
or
adcb
add
jmp
jns
insl
clc
xchg
mov
into
add
ret
mov
pusha
jp
cmp
sahf
loop
ret
cmc
out
rcll
push
or
xlat
cmp
ffreep
testl
add
push
sub
mov
test
jle
pop
add
jl
es
call
roll
mov
jmp
repnz
push
adc
orb
movsl
cmp
cmp
test
mov
mov
fimull
scas
and
or
push
or
inc
and
add
pop
out
adc
sbb
mov
cmp
insl
mov
movsl
mov
xchg
aas
cwtl
adc
mov
pop
rclb
dec
iret
test
jb
mov
add
jne
mov
mov
xchg
pop
cmc
mov
or
into
fwait
scas
mov
jecxz
dec
inc
sub
xchg
das
adc
aad
push
dec
inc
rolb
xor
sar
push
std
jbe
mov
xor
sub
out
int3
cmp
rcrb
inc
cwtl
jnp
cld
ficompl
jae
sbb
dec
clc
fistl
mov
cmpsb
jnp
movsl
test
dec
data16
jp
mov
cld
lahf
fucomip
jo
mov
inc
ss
sti
cmpl
jecxz
jp
fcmovne
pop
out
pop
dec
shll
cmp
shl
mov
adc
push
ljmp
xor
fisttpll
mov
jnp
xchg
xchg
mov
mov
dec
sbb
insl
inc
into
pop
mov
jl
adc
push
inc
sbb
and
cli
stos
sub
cli
mov
push
mov
test
stos
les
pushf
mov
cwtl
ds
sbb
mov
shrb
xlat
add
xchg
fisubrs
pop
cmc
inc
pop
cmp
idivl
sbb
loope
cld
imul
out
ds
out
test
mov
xlat
sbb
cmc
insl
sbb
mov
pop
and
orl
int
cli
or
push
movsl
inc
cmc
pop
aad
int3
xor
xor
cmp
iret
scas
lea
inc
pop
or
push
inc
daa
fldcw
add
shlb
dec
ret
jb
into
add
mov
or
ud0
inc
subb
mov
clc
mov
imul
mov
add
test
cmc
out
cmp
inc
sbb
je
mov
bound
sub
or
stos
mov
sbb
jle
xor
push
or
inc
push
test
ja
mov
ss
inc
sbb
scas
xlat
mov
fs
pop
mov
xlat
cs
out
xchg
insl
adc
imul
and
mov
lock
loope
pop
ja
iret
adc
inc
test
sbb
dec
jg
dec
test
pop
jne
cmp
ss
cmpsb
lret
sub
mov
xchg
cmp
sub
xchg
lahf
jmp
int
pop
flds
bound
mov
inc
sbb
xor
cmp
leave
int3
jl
sbb
pop
addb
and
push
mov
or
ret
pop
ret
mov
repnz
shlb
adc
or
xchg
inc
loopne
mov
inc
test
pop
push
out
or
idiv
jno
xchg
insb
popf
pop
mov
or
test
notb
in
or
mov
addl
inc
scas
mov
and
insb
daa
int
adc
jae
ret
ljmp
rol
cmp
bound
filds
push
and
hlt
mov
cltd
jbe
push
cmp
cmp
add
dec
cmp
ss
andl
lret
mov
xor
xor
lds
outsl
mov
cltd
sub
cmp
cltd
dec
test
cmp
lock
lods
lret
mov
xor
mov
mov
fsubs
add
cmp
mov
cmp
movsl
test
cmpsl
inc
and
mov
iret
push
ljmp
adc
mov
mov
inc
jg
push
mov
cmp
fidivrl
pop
pop
cmovbe
imul
mov
or
cmp
push
pop
repnz
ret
loope
pop
mov
sub
sub
cmp
inc
push
fdivrp
xchg
ss
sub
repz
test
insb
mov
pop
push
sahf
mov
pop
sub
ret
mov
add
sarl
xor
jp
je
jle
imul
pusha
push
add
enter
mov
cmp
and
dec
cmp
or
rcl
sub
subb
push
sbb
stos
in
adc
jbe
pop
mov
mov
int3
cli
mov
mov
xorb
cltd
fs
stos
cltd
popf
push
popa
or
fisttpl
enter
xchg
outsl
shll
mov
ret
loopne
mov
aaa
or
xlat
int3
shll
mov
and
fists
jecxz
jle
js
jb
xchg
or
xchg
aam
fcoml
cmp
ds
or
mov
xchg
jg
cmp
popf
jne
in
push
mov
sub
dec
sub
cli
pop
or
dec
xchg
push
mov
mov
dec
mov
xchg
jno
cli
aam
test
or
push
mov
dec
or
mov
sub
aaa
pop
test
sbb
sub
and
xchg
push
les
mov
xchg
jge
popw
movsb
rorl
dec
mov
push
test
jae
jg
xchg
repnz
cmpsb
mov
sbb
in
lods
mov
nop
cli
add
push
mov
pop
adc
push
adc
test
xchg
push
cwtl
lods
mov
mov
add
lods
fs
lret
inc
ficoms
rorl
sbb
lcall
stos
sub
push
in
jge
dec
inc
mov
mov
inc
and
push
movsb
fdivp
mov
sarb
sub
stos
insl
mov
mov
xor
cld
add
pop
movsb
aas
inc
fs
clc
xor
jbe
xchg
popa
inc
dec
jne
outsb
or
mov
in
or
cmpsb
ljmp
stos
int
dec
outsl
mov
fisubrs
jnp
loope
jle
in
and
xchg
sbb
sub
out
pop
pop
mov
fwait
int3
clc
lret
xchg
movsb
dec
push
movsb
xchg
add
and
or
movsl
imulb
jmp
jecxz
ds
xchg
adc
lock
xor
clc
dec
nop
push
mov
jns
imul
sahf
add
inc
mov
cmpsl
mov
cli
fimuls
jge
xchg
ret
shlb
xor
hlt
out
jg
ljmp
aas
stos
jae
sub
cmp
jne
cmp
sbb
jb
pushf
in
push
adc
mov
pop
out
es
pop
mov
push
xchg
in
dec
ja
lcall
adc
push
jp
inc
cwtl
pusha
data16
jb
xchg
dec
push
adc
in
add
js
push
jmp
inc
and
sbb
out
lods
in
fcmove
adc
and
andb
fwait
pusha
out
rolb
clc
xor
loopne
dec
xchg
call
jmp
jb
mov
dec
xchg
push
aad
lods
mov
inc
movsl
dec
ret
jno
xchg
cwtl
push
arpl
iret
sbb
xabort
pop
in
push
push
insb
out
test
mov
xchg
xchg
jno
fdivrl
jb
arpl
cmp
movsb
repnz
std
add
popa
ss
call
xor
jne
mov
mov
pop
adc
xor
sub
pop
mov
push
outsl
or
mov
push
inc
pop
cmp
and
adc
jae
iret
xor
or
mov
lahf
xchg
cld
js
jp
in
and
add
out
ds
add
pop
mov
movsl
push
dec
push
xchg
imul
sbb
sub
fildl
adc
inc
inc
or
mov
pop
cmp
mov
mov
int
add
dec
and
repnz
ret
jp
adc
sbb
fdivrs
iret
sbb
sub
leave
sub
mov
js
int
outsl
mov
shlb
jg
ret
mov
push
jl
and
sub
jo
dec
and
lock
in
push
gs
rolb
ret
push
in
mov
test
popa
adc
movhps
jnp
ss
pop
jl
push
mov
sbb
sub
sub
xchg
sub
xchg
test
fisubrl
mull
ds
jle
and
std
jno
jae
cmp
push
jle
cmpsb
enter
xor
adc
and
inc
sbb
mov
aaa
pop
add
scas
imul
xor
xor
ljmp
xchg
in
ficoml
jecxz
jb
sub
mov
cmp
push
rcl
js
std
adc
imul
sbb
or
nop
fildl
or
dec
xor
in
outsb
push
inc
mov
mov
mov
ficoml
shll
test
movsb
jl
clc
mov
mov
xor
insl
pushf
addb
sub
lea
cmp
lds
sub
shll
add
mov
xor
xor
mov
nop
pop
sub
jno
push
lea
loop
call
push
push
pop
fmull
inc
aas
pop
xchg
xchg
lcall
repnz
mov
imul
loopne
iret
add
dec
add
inc
sub
xchg
pop
jmp
push
jae
das
insb
loopne
xchg
shrl
jb
mov
bound
test
push
cmpsl
push
inc
ror
mov
aad
mov
add
sahf
inc
lret
or
pop
mov
fmull
test
sub
cmp
adc
or
nop
jle
sbb
icebp
push
aad
mov
cltd
sbb
jb
inc
cwtl
sub
repnz
adc
pushf
shll
popf
push
xor
pop
add
lods
andb
and
adc
mov
push
lods
pop
sbb
repz
xor
or
call
bound
push
lea
xchg
lods
fistl
or
loopne
loopne
ficomps
aaa
in
inc
xchg
sub
imul
movsl
and
xor
cmp
aam
dec
push
out
dec
lods
push
sub
rclb
xchg
xor
addr16
into
in
shll
mov
fistps
nop
jnp,pn
ja
jo
lret
pusha
stos
adc
cmpsb
test
stc
xchg
jg
dec
scas
ss
pop
jae
push
push
insl
ljmp
mov
cltd
adc
repnz
popa
xchg
imulb
mov
xchg
pop
adc
pop
add
sub
jno
test
aad
mov
adc
sbb
sbb
cmp
rorb
adc
rorb
pushw
hlt
in
adc
add
push
bound
jl
mov
pop
mov
sbb
or
fisubl
iret
mov
push
mov
call
adc
mov
sbb
fs
xor
cmp
divl
roll
in
repnz
sbb
xlat
lcall
bound
ss
pop
les
inc
pop
je
jle
add
test
adc
in
loope
iret
scas
sub
insb
cmc
icebp
xchg
fcmovnb
insb
popa
and
ja
scas
movsb
sbb
test
pop
jb
push
mov
fdivs
xchg
es
cmp
xor
push
outsl
insl
push
int
aas
sbb
xchg
and
mov
iret
mov
nop
add
test
pusha
xor
out
scas
mov
arpl
in
sub
xor
cmp
lret
cmc
xor
rcr
fstl
xchg
nop
xlat
cmc
mov
adc
sbb
mov
xchg
jnp
aam
push
xchg
leave
fistps
test
push
jmp
sub
rcll
enter
mov
popa
lods
sti
mov
cld
add
dec
or
das
jo
or
mov
mulb
aad
lods
lds
lahf
push
cli
jo
shlb
or
scas
clc
cmp
dec
pop
es
dec
lds
mov
pop
xor
ret
jge
scas
ret
fld
cmpsb
pop
clc
mov
fwait
and
gs
xchg
adc
sub
in
add
aad
jnp
ljmp
imul
and
or
mov
daa
cmp
sub
cmpsb
xchg
cmpsb
flds
dec
or
ljmp
and
adc
mov
mov
jp
lods
aas
xchg
cli
push
mov
pop
adc
add
jl
outsl
xchg
or
and
cs
mov
lret
sbb
cmp
add
popa
xchg
cs
add
cmpb
and
movsb
adc
popf
jl
add
sub
sbb
sbb
jecxz
fs
test
and
adc
mov
inc
movsb
repz
enter
aam
lahf
es
clc
push
mov
push
iret
xchg
push
imul
loopne
sub
add
sbb
fidivrl
call
imul
and
push
add
je
cmpsb
mov
mov
iret
push
pop
popa
add
gs
jge
iret
and
loopne
lods
jp
nop
pop
in
aad
out
pop
je
xchg
push
mov
xor
mov
xchg
test
cld
loop
cwtl
pusha
leave
sbb
nop
test
cmp
pop
add
bound
add
dec
gs
arpl
insb
outsl
xor
mov
idivl
push
sub
mov
aaa
mov
adc
into
ficomps
add
adc
xor
leave
push
insl
dec
pop
stc
lahf
cmc
addl
mov
sub
je
jo
ljmp
pop
jge
and
cmpsl
cld
xchg
jecxz,pt
xchg
push
loop
pop
dec
pusha
jb
imul
jecxz
push
sub
fcomp
cmp
outsb
test
je
icebp
xchg
outsl
xchg
ds
push
jnp
push
inc
jg
addr16
inc
mov
daa
push
mov
aam
repz
out
stc
push
in
and
out
ljmp
test
jno
push
in
faddl
lahf
call
sbbb
das
xor
cmpl
das
iret
shl
jno
adc
enter
and
insb
xchg
loopne
aam
pushf
in
lcall
test
xchg
or
rclb
and
int3
push
lcall
sub
icebp
rcrl
addb
pop
mov
adcb
pop
pop
lcall
and
lods
negl
pop
insb
push
and
pusha
add
into
jo
shl
or
adc
mov
jae
incl
and
cmc
ljmp
sti
xchg
cmp
push
in
mov
fimull
xor
mov
sub
out
push
test
in
fidivl
push
pop
and
ret
cmp
push
out
xchg
in
cmp
std
and
mov
fwait
je
and
push
pop
add
faddl
xlat
mov
test
inc
xor
mov
call
xor
xchg
jge
pop
mov
jge
cs
sub
inc
cmp
sahf
mov
out
xor
jbe
sbb
mov
dec
adc
sub
sub
push
cltd
sbb
aad
in
jecxz
cmp
pushl
dec
pop
lret
mov
jg
jo
ja
fwait
int3
inc
inc
jb
inc
add
xor
mov
sbb
push
call
fdecstp
das
mov
ret
add
in
mov
and
and
das
int3
or
icebp
ret
push
leave
sub
mov
arpl
setl
xchg
pusha
pop
mov
rcrl
mov
add
xor
stc
cmp
cmp
and
sbbl
loope
push
mov
ret
leave
iret
sbb
inc
pop
std
rorb
adc
lock
insl
xor
xor
jns
outsl
in
imul
out
outsl
sub
fs
cld
pop
push
mov
jno
test
rorb
loopne
cmp
inc
push
xchg
clc
je
adc
xchg
xor
ss
add
out
ds
inc
inc
pop
cmp
sbb
movsl
dec
test
add
pop
int
and
inc
dec
adc
sbb
jb
xor
jp
jb
add
xor
or
xor
into
xor
test
mov
xchg
pop
ret
adc
or
bound
outsl
pop
pop
or
daa
jo
and
data16
inc
fcmovb
out
and
or
in
xor
push
imulb
cltd
cmpsb
arpl
iret
cwtl
xchg
and
dec
pop
fldcw
dec
or
int
pop
cmp
data16
insl
pop
adc
inc
mov
stos
stc
add
sbb
xor
xchg
mov
lret
xchg
fnstsw
pop
cs
arpl
insb
ficomps
mov
adc
push
fistps
xchg
rolb
inc
push
loopne
dec
dec
icebp
mov
mov
repnz
mov
add
clc
jns
loopne
xchg
data16
movlps
into
lret
adc
repz
mov
cwtl
push
lret
mov
stos
test
adc
adc
bound
push
out
or
sbb
mul
and
leave
ret
fdivl
movsl
sbb
aas
inc
xchg
cmp
lock
push
add
cld
mov
mov
fiaddl
std
out
fstpt
sub
stos
add
and
ret
bndldx
fbld
sbb
xchg
pushf
out
mov
adc
addb
fcompl
icebp
sub
push
leave
mov
movsb
xor
fcmovb
push
xchg
scas
ficomps
lock
dec
lods
xor
xor
inc
sti
mov
cmp
ficoms
leave
pop
bndstx
pop
inc
ljmp
fmulp
mov
inc
mov
and
xor
xchg
cmp
fildl
push
sbb
lods
cmp
cmc
test
jae
add
dec
push
inc
aad
shlb
xchg
incl
adc
cmp
add
push
lcall
lret
loope,pn
jb
xchg
imul
daa
or
dec
jo
jae
or
xlat
fnstsw
in
nop
insl
or
cmpsl
aas
and
call
xchg
stos
pushf
mov
mov
and
fdivrs
push
leave
inc
mov
pop
mov
and
fisttps
mov
arpl
push
and
xchg
insb
or
xchg
push
neg
pop
mov
xchg
mov
scas
and
sbb
xor
imul
lea
cmp
adc
das
cmp
mov
dec
ljmp
int
mov
fcompl
js
mul
dec
mov
shrb
cmpsl
jmp
cmp
mov
stc
add
icebp
jge
jae
andb
les
into
sbb
cmp
out
and
pusha
inc
add
aas
pop
data16
lods
sub
divl
iret
xchg
ss
shrl
add
fmuls
dec
outsb
loop
aaa
pushf
shll
dec
pop
shll
lret
testl
stos
mov
cwtl
test
inc
lock
or
test
fcmovb
mov
test
and
cwtl
add
dec
cli
adc
fimuls
add
mov
stos
pop
mov
dec
mov
fildll
popf
popa
pop
push
je
out
inc
xor
dec
clc
insl
pop
sbb
stc
jns
aam
and
dec
scas
lea
in
mov
mov
ret
fs
push
jg
mov
mov
mov
add
inc
push
jge
and
xchg
mov
sbb
or
xchg
fsts
mov
xchg
or
imul
loope
gs
dec
loope
sbb
pop
clc
cmp
mov
cmp
pop
pop
cmp
shlb
aam
bound
stos
and
cmpsb
inc
and
or
sub
push
jg
mov
popa
push
mov
adc
and
dec
iret
testl
fxtract
iret
push
je
jecxz
in
stos
out
mov
insl
mov
out
jno
ret
jne
iret
lds
xor
js
repz
jmp
sbb
es
xchg
int3
out
daa
push
stos
cmp
jnp
push
add
dec
or
add
sbb
jnp
cmp
dec
mov
out
adc
add
orl
in
repnz
imul
sbb
xor
int3
mov
pop
andb
les
aad
xchg
ret
pop
push
or
xchg
jb
jae
cli
push
xchg
xchg
int
daa
mov
push
stc
scas
jae
outsb
adc
cmpsb
inc
hlt
inc
dec
inc
stos
testl
jbe
cmp
pushf
fwait
mov
cmpl
and
incl
ret
add
or
mov
xor
adc
out
andb
push
test
imul
mov
push
imul
cmp
popf
dec
add
imul
int3
popl
mov
jg
das
sub
rol
push
fisttpll
sub
test
mov
int3
mov
test
pusha
pop
rorl
movsl
lret
aad
mov
out
lock
inc
and
add
mov
repnz
cmp
out
sbb
mov
sbb
and
ds
icebp
and
ds
out
fisttps
jns
scas
mov
mov
ljmp
or
mov
jmp
ljmp
cs
add
cmp
in
mov
inc
idivb
mov
push
inc
add
repz
mov
push
outsb
push
pop
loop
mov
cmpsl
fsub
cmp
jge
cmp
add
mov
pop
jl
adc
add
jle
xchg
mov
test
pop
sbb
es
mov
mov
data16
repz
mov
popl
bswap
inc
getsec
mov
lea
add
scas
pop
fdivl
popf
cmpsb
inc
mov
inc
popa
xor
xor
mov
cmp
iret
xchg
int3
xchg
scas
xor
call
dec
dec
leave
test
ljmp
sbb
or
pushf
cld
sbb
enter
pusha
mov
dec
xchg
out
pop
leave
xor
fwait
aam
lcall
xchg
mov
adc
shlb
mov
int
xchg
lahf
outsb
cmc
outsb
push
mov
push
pop
fiaddl
nop
lds
push
jl
je
xchg
push
sbb
shl
stos
inc
fildl
xchg
mov
insl
cmp
rorb
imul
xor
ret
adc
scas
aas
add
icebp
mov
ljmp
in
inc
iret
incl
and
adc
mov
pop
sbb
jae
outsl
add
and
in
dec
mov
push
adc
pusha
imulb
jg
addb
icebp
mov
mov
pop
into
mov
movsl
outsl
daa
inc
loopne
or
xlat
nop
or
pusha
imul
inc
cmpsl
pop
jnp
sbb
adc
xor
mov
xchg
mov
mov
ds
loopne
out
and
iret
hlt
test
add
sbb
pop
cmpsl
adc
jl
mov
clc
das
lret
jecxz
sub
pushl
inc
bnd
test
sahf
dec
inc
cmp
and
pop
cld
sbb
cs
xor
or
lret
jae
icebp
das
dec
fdivrs
idivb
sbb
enter
roll
imul
push
push
mov
test
lock
lret
in
pop
fs
mov
and
fs
fdivrl
popa
fidivrl
test
sbb
xchg
leave
popf
sahf
mov
mov
sub
jne
out
jmp
mov
pop
jecxz
jp
xchg
bound
loopne
xor
scas
fcmovbe
mov
adc
ljmp
dec
test
in
pusha
subl
xchg
imul
ds
pop
adc
imul
sbb
icebp
mov
imul
dec
lcall
insl
mov
cld
arpl
cmp
shrl
std
imul
jnp
bound
sahf
jecxz
mov
adc
xchg
imul
out
or
fistps
aaa
lcall
aas
adc
sbb
stos
jle
lahf
popf
adc
sti
xor
rorb
xchg
fcmovnu
aam
jmp
mov
push
push
jae
or
push
jecxz
test
and
mov
shlb
insl
popa
stc
cmp
jmp
fcomip
xchg
xor
pop
outsl
loope
and
rorl
mov
jnp
and
adc
movb
lret
mov
cmp
sbbl
les
aam
add
mov
clc
in
sub
and
enter
or
fwait
cmp
outsb
mov
divb
inc
rclb
mov
push
test
scas
sarb
iret
repnz
mov
enter
and
pop
jbe
cmp
inc
shll
int3
xchg
imul
inc
stos
jp
js
mov
mov
mov
pop
xchg
aaa
rorb
adc
dec
lods
mov
inc
out
pop
pop
outsb
pop
mov
ss
push
sbb
decl
loop
imul
inc
or
mov
pushf
pop
adc
stos
add
test
mov
mov
arpl
adc
arpl
imul
sbb
dec
outsl
and
ror
cs
out
sbb
xor
pop
sbb
cmpl
xchg
add
ret
jne
lds
subb
scas
lods
leave
std
sub
or
sub
sub
loope
or
jo
or
and
cs
bound
sahf
pop
iret
sub
cmp
out
xor
push
gs
filds
add
js
and
loop
popf
or
gs
icebp
popf
xchg
or
pop
mov
shrb
lea
test
mov
and
int3
mov
xlat
push
xor
lea
xchg
les
nop
jbe
hlt
mov
adc
cltd
movsl
or
add
in
and
pop
mov
push
mov
push
pop
xor
cmp
arpl
pop
or
popf
fs
scas
in
inc
std
push
jb
sbb
rorl
in
sbb
js
hlt
jae
scas
imul
jmp
adc
jl
sbb
and
pop
inc
inc
cmp
sbb
arpl
sbb
jl
dec
scas
inc
xor
in
pop
ljmp
std
loop
sbb
pavgw
lcall
in
aam
or
div
mov
fcmovnu
popf
fdivrs
xor
repnz
xchg
xor
adc
adc
pop
or
inc
jbe
loop
xchg
shlb
stos
scas
dec
mov
out
fs
add
inc
pop
in
xchg
int
rolb
shl
mov
jg
xor
test
cmp
jae
dec
jp
and
xor
jbe
ret
or
into
mov
push
xor
mov
js
or
sti
mov
mov
adc
call
dec
fsubl
cmpsb
mov
cmp
or
add
mull
ljmp
sbb
jo
mov
sub
lcall
les
sbb
cmpsl
inc
jb
xchg
cmp
pop
in
and
mov
popa
jb
movd
clc
iret
sti
in
pop
mov
push
insb
js
mov
fcoms
test
adc
mov
push
cmp
jecxz
mov
fisubs
dec
lret
push
inc
xchg
ret
push
ffree
mov
test
aam
xchg
cmpsl
lock
test
aad
movsb
pop
inc
aas
mov
shrl
out
dec
dec
test
mov
dec
leave
jns
push
xlat
imul
xor
mov
jecxz
jg
push
loop
icebp
aaa
inc
idivl
add
nop
pop
push
lcall
incl
mov
pop
add
jmp
cmp
mov
and
push
add
int
imul
pop
xor
repnz
ret
and
nop
xor
lods
gs
add
mov
je
jbe,pn
enter
jb
mov
add
in
jo
and
arpl
jnp
jmp
push
sub
or
ss
xor
pop
fwait
cmp
jbe
add
mov
xor
cmp
icebp
mov
repnz
lahf
cli
cmc
fidivl
mov
add
xlat
sbb
lea
mov
aam
cmp
mov
iret
pop
add
mov
xchg
adcl
xchg
shr
mov
lds
and
pop
scas
loope
inc
lahf
inc
hlt
cmc
dec
stc
inc
fs
push
or
cmp
aaa
out
jg
daa
jbe
or
add
cmp
in
mov
xchg
push
cltd
loop
inc
fcom
pushl
add
xchg
adc
adc
xchg
push
push
xchg
rclb
jnp
lcall
iret
lods
dec
mov
fwait
pop
and
fcmovnbe
jl
xchg
test
mov
sub
call
mov
lret
imul
imul
movsb
sti
out
pop
popf
lock
dec
dec
lcall
stos
xor
dec
xor
jmp
gs
or
inc
std
sub
int
popf
mov
lods
add
or
int3
inc
std
mov
mov
dec
jnp
cmpsl
aam
xchg
addr16
cmpsl
mov
das
add
cltd
lahf
fs
andb
outsl
out
in
pmaxub
pusha
sub
mov
sub
out
sbb
pop
lods
push
fsubrs
dec
mov
pop
stc
out
mov
test
sbb
sub
cmp
dec
dec
jns
mov
adc
fstpt
pop
stc
test
iret
xlat
xchg
sub
xchg
xchg
lea
jnp
pop
add
xor
pop
sbb
mov
push
test
mov
pushf
lret
jns
inc
in
lcall
rcl
xor
mov
xchg
mov
into
int
cmc
mov
or
stc
and
adc
stc
mov
inc
mov
sahf
lahf
inc
gs
inc
decb
mov
push
sbb
xchg
clc
xor
roll
hlt
cmp
mov
xchg
jecxz
adc
movsb
adc
test
subl
sbb
pushf
out
dec
cwtl
div
cmp
pop
cmp
inc
xchg
jno
pusha
in
or
pop
daa
mov
mov
push
lcall
rorl
sub
xor
inc
mov
shl
jmp
pusha
repnz
sbb
leave
repz
inc
enter
repz
shl
dec
fwait
jl
inc
pop
ljmp
or
loop
pop
add
sub
and
xchg
std
es
inc
mov
jmp
mov
adc
nop
xchg
es
jnp
movsl
xchg
jbe
sub
lahf
rcll
imul
cltd
sti
hlt
lods
insl
push
inc
adc
mov
fwait
push
and
bound
cmp
mov
add
fstpt
fwait
out
jmp
pop
in
jl
into
sbb
push
xchg
dec
mov
lock
fnstsw
test
push
gs
out
shl
sub
cwtl
into
wrmsr
mov
ja
xor
stos
movsb
test
xchg
mov
sub
mov
jbe
cmc
mov
imul
sub
mov
mov
push
push
fst
cmpxchg
sbb
pop
push
cmpsl
lods
ss
into
ficompl
arpl
mov
sub
arpl
cli
cmp
jns
popa
push
fmul
mov
inc
leave
adc
add
cmp
scas
cmpsl
pop
rcr
dec
cmp
fidivrs
jns
xchg
jns
push
pop
ret
daa
adc
aas
sub
dec
inc
lcall
scas
jne
mov
jle
addr16
repnz
pop
cmp
icebp
int3
mov
jns
jnp
jg
dec
pop
out
jle
fidivl
cmp
iret
leave
mov
subl
pop
sub
inc
inc
mov
inc
pop
xor
test
popf
inc
test
mov
dec
cmp
push
push
mov
lcall
shlb
out
movsl
jae
les
sbb
mov
or
aad
cmpsb
or
mov
mov
jns
mov
add
xor
neg
jp
imul
push
test
mov
cmp
sub
push
add
sbb
loop
adc
push
jno
mov
dec
inc
jae
minps
roll
mov
sbb
xchg
sub
cmp
idivb
imulb
leave
test
xchg
mov
xcrypt-cfb
cmpsl
and
add
loopne
pop
arpl
jae
das
or
hlt
in
push
popa
aad
cmc
sub
inc
loopne
xchg
push
xchg
pop
jnp
nop
pop
cmpsl
andl
loope
roll
aad
pop
and
xchg
in
pop
cmp
sti
jmp
data16
xor
xchg
shl
jg
out
add
js
lods
adc
int3
cmp
movsb
jne
lret
cmp
cli
hlt
pop
mov
push
inc
sarb
inc
ret
inc
sti
xlat
les
adc
stos
jecxz
aad
xchg
mov
adc
jb
leave
fsubp
mov
roll
add
push
sbb
clc
lsl
adc
mov
mov
scas
cmpl
xchg
xchg
cltd
cmp
stc
inc
out
das
insl
push
lock
js
xchg
add
mov
adc
repnz
sub
test
mulb
shrb
xchg
sub
fidivs
out
and
fwait
jmp
and
pop
push
xor
and
pop
or
mov
pop
pop
mov
ror
imul
cmp
clc
sub
pop
add
leave
mov
and
orb
clc
ret
mov
ret
loop
sti
or
mov
ret
and
jl
cmp
jnp
push
mov
xchg
jl
push
xor
pop
mul
mov
push
push
orb
lahf
xor
ds
lods
sbb
mull
push
adc
jp
xorl
lahf
mov
std
adc
push
out
hlt
adc
inc
movsl
pop
nop
daa
fwait
test
pop
or
xchg
insl
mov
push
out
leave
and
icebp
xchg
inc
ret
call
fsubrp
out
adc
fcoml
push
pop
mov
cmp
or
mov
adc
gs
lods
enter
test
ljmp
stos
out
js
sub
sbb
sbb
dec
ret
in
icebp
cmpsb
mov
rcl
add
sbb
inc
aam
je
pushf
hlt
jecxz
mov
es
inc
jno
dec
mov
xor
sbbb
rclb
jmp
mov
clc
lods
sub
scas
adc
or
cmp
fldt
sbb
jbe
and
sub
nop
and
lods
mov
xlat
test
outsl
cmpl
push
or
cwtl
add
xchg
or
bound
jg
fldcw
sbb
xor
cli
ficomps
push
andl
add
js
or
pmulhw
add
or
xor
xor
xchg
adc
inc
push
add
ss
add
jle
mov
into
std
and
stc
add
insb
mov
gs
je
mov
dec
popf
cmp
xchg
adcb
lret
fucomip
in
mov
xor
fdivl
and
xchg
sub
sbb
mov
in
lcall
out
test
adc
mov
dec
orw
push
sub
fmull
mov
pop
pop
mov
dec
lret
dec
mov
fnstenv
mov
xchg
data16
mov
ja
cld
lock
cmpsl
in
or
movsb
data16
fiadds
stc
rorb
add
fmull
sbb
xor
les
daa
jns
dec
mov
js
sub
jmp
jp
imul
inc
dec
iret
jbe
jns
fmull
push
pop
jge
repz
pop
or
mov
jo
xchg
lods
sub
sbb
dec
cltd
mov
mov
imul
lahf
dec
and
sub
mov
add
adc
jmp
mov
sbb
insb
mov
in
mov
test
cld
stc
rcl
push
insb
sub
dec
mov
cmpb
jmp
popf
fmuls
xchg
jb
lods
repz
jecxz
cld
lret
sbb
xchg
push
xor
lds
les
out
loop
xchg
rolb
data16
inc
in
pusha
rcll
and
pop
push
test
test
push
fildll
cs
push
mov
adc
jbe
cmp
outsb
or
or
mov
dec
pop
cltd
adcb
push
jecxz
sbb
dec
jp
pop
insl
clc
push
nop
xchg
imul
xor
loop
adc
in
pop
mov
xor
adc
test
xlat
dec
pop
fimull
je
cmp
add
and
sti
arpl
iret
or
insb
xor
inc
dec
or
inc
aaa
mov
loopne
cmp
adc
hlt
xchg
ret
aas
add
dec
mov
orl
pop
jae
popa
sbb
lcall
cwtl
fwait
or
ret
and
lea
sahf
mov
jmp
leave
out
clc
cli
ljmp
mov
outsb
test
dec
call
dec
in
and
in
shrl
adc
or
mov
ss
add
pop
in
xor
in
and
out
add
jp
adc
call
out
xlat
push
ret
mov
out
xchg
addb
dec
mov
scas
or
insb
out
mov
ja
scas
xchg
xchg
inc
xlat
jge
stos
xchg
cmp
sar
inc
inc
inc
lret
sbb
mov
cli
scas
and
xchg
push
mov
mov
in
into
sti
data16
cmpsl
insb
inc
jns
ja
jno
lret
jle
jns
addr16
inc
xlat
scas
iret
nop
cld
cmc
cmp
lea
insb
mov
jne
mov
and
mov
arpl
rcrl
sahf
inc
push
loopne
jecxz
and
gs
leave
dec
jmp
bound
or
aaa
into
imul
dec
mov
mov
and
jb
ror
sti
xchg
pop
mov
pop
adc
js
xor
inc
mov
xchg
or
push
mov
mov
mov
mov
js
inc
inc
cmpsl
mov
ret
arpl
xchg
adc
adc
daa
repz
ljmp
mov
rolb
sub
loope
jae
add
fwait
fwait
fwait
out
inc
adc
andl
scas
mov
mov
mov
mov
test
int
adc
fcmovu
xor
cmp
fisubl
push
divb
daa
fisubrs
hlt
jmp
sarb
repnz
jns
adc
in
pop
int
xchg
repz
jne
mov
inc
in
jge
xchg
or
jnp
jae
aas
test
xchg
aaa
lds
jmp
je,pt
pop
pushf
push
or
cmp
dec
in
sbb
and
xchg
out
fwait
sbb
push
rorl
imul
icebp
pop
sbb
out
adcl
mov
jecxz
cltd
out
or
out
je
pop
mov
daa
pop
ss
mov
flds
rolb
mov
pop
push
jmp
int
leave
inc
xor
js
mov
out
adc
mov
aad
imull
test
lret
test
imul
cmpb
jmp
pand
enter
data16
test
mov
inc
sbb
popf
es
ja
adc
jl
dec
insl
adc
insb
or
dec
pop
mov
jne
adc
sub
aas
sub
mov
rorb
int3
jae
cwtl
dec
cmp
mov
add
push
aam
js
imul
or
sub
bound
stos
xchg
inc
cmpsb
hlt
mov
mov
roll
jnp
inc
lahf
lock
mov
and
mov
sbb
xor
scas
sub
mov
mov
fmuls
aaa
lods
push
cmp
xchg
flds
test
sar
pop
xchg
ret
mov
push
imul
fpatan
push
or
sbb
das
lret
lods
push
jo
push
wbinvd
push
or
notl
jne
cmp
aas
aad
sti
jg
in
push
mov
dec
fwait
in
dec
sbb
and
aam
push
mov
js
insl
sbb
mov
jo
or
push
sbb
mov
or
pushl
jle
cmp
push
inc
shrb
clc
or
xchg
cmp
mov
leave
or
xor
lea
enter
pop
aaa
mov
in
test
lods
inc
pop
cmp
test
repnz
pusha
movsl
cmp
dec
ret
cmp
imul
cmp
or
and
cmp
aam
xchg
test
fsubs
daa
andb
test
int3
sbb
in
jbe
dec
and
lret
sbb
xor
leave
into
add
adc
push
cltd
inc
ret
inc
mov
rorl
aas
arpl
add
outsl
stc
mov
push
and
sbb
imul
mov
arpl
xor
stc
push
stos
lea
gs
repz
loopne
ds
movb
shrl
repz
cltd
sub
loop
pushf
ljmp
cli
enter
pop
jnp
shll
inc
pop
xchg
add
adc
cmc
mov
cmp
shlb
outsb
adc
stos
inc
mov
push
dec
rsqrtps
sub
mov
aas
dec
pop
add
jmp
xor
mov
jb
fistps
aad
stos
add
aaa
test
dec
push
lahf
pop
lods
rolb
pop
rolb
dec
je
jno
pop
push
add
jecxz
dec
jg
inc
add
das
pop
xor
mov
ret
add
sub
xchg
sub
ljmp
mov
test
in
jnp,pt
pop
setl
test
rcr
lcall
in
fildll
call
out
aas
mov
or
jl
xchg
mov
popf
mov
adcb
adc
lea
lcall
mov
mov
dec
dec
cld
xchg
div
lods
es
xchg
stos
jg
mov
stos
mov
fistl
cmp
inc
aaa
pop
xor
cmpsb
xchg
in
stos
rolb
sahf
pop
repnz
mov
cltd
pop
dec
xchg
ds
xchg
pop
mov
insl
mov
xchg
out
loopne
mov
sti
sub
je
cmp
adc
jecxz
xor
and
jmp
dec
pop
push
ret
and
cmp
or
dec
int
xor
or
sbb
ss
lock
imul
daa
adc
movsb
or
jl
js
jge
jmp
sbb
test
mov
rol
ret
sar
push
ja
in
push
xlat
ret
dec
add
xchg
stos
xchg
fsub
lds
or
loopne
orb
daa
lock
sahf
cmpb
scas
in
js
push
ja
mov
pushf
mov
sbb
xchg
push
push
into
es
fstps
repnz
mov
jnp
mov
ds
loopne
mov
movzbl
mov
sub
jl
sarl
fnstenv
ja
pop
lds
sub
das
adc
jns
int
add
add
push
pop
test
aaa
clc
sarb
addr16
inc
and
fistps
aad
xchg
loop
mov
iret
mov
mov
xchg
jge
mov
jp
lret
mov
cmp
add
push
addr16
cltd
push
sbb
mov
lods
lret
and
add
push
push
pop
jp
das
cltd
push
pop
xor
es
lret
adc
jnp
sti
mov
in
push
inc
push
pop
xchg
and
xor
mov
mov
repz
inc
cmpsb
jle
add
sbb
call
mov
cmp
xchg
and
jno
cmpsb
pop
mov
test
and
mov
push
mov
sarb
gs
dec
push
into
inc
mov
sbb
xor
scas
into
aas
or
ret
mov
int3
movsb
jmp
fisubl
int
movsb
addr16
lcall
push
sar
fimull
and
leave
pcmpeqb
cmp
xlat
popf
inc
std
pushf
enter
pop
jge
and
insl
lods
mov
mov
fcmovnu
cmp
mov
pop
repz
daa
stos
in
push
sbb
popf
outsb
xchg
push
dec
leave
pushl
cmc
mov
aas
out
test
sub
pushf
dec
cmp
loop
arpl
movb
cmp
push
cmp
mov
adc
enter
clc
or
outsl
pop
repnz
jecxz
mov
mov
pop
lret
fmuls
mov
aad
jae
into
push
imul
pop
repz
xchg
cwtl
aas
sarl
inc
repnz
or
or
movsb
adc
cmpsl
dec
scas
mov
sbb
cmp
xchg
jg
hlt
jge
out
push
sub
mov
fs
in
inc
rorl
mov
movsb
adc
mov
shl
jecxz
popf
add
in
stos
xchg
jmp
scas
imul
jne
lret
lods
sub
cmp
jno
divb
out
mov
bound
std
push
sub
shlb
pop
xchg
pop
sbb
sbb
and
pop
sbb
and
pusha
jo
mov
pop
push
cld
and
idivl
cmp
arpl
dec
out
jmp
int
lret
in
mov
xchg
push
aad
pop
mov
cmp
jmp
psrld
push
popf
inc
int3
mov
rcrb
subb
sar
test
push
sbb
mov
stos
andb
pop
xchg
imul
fwait
push
fdivs
sbb
mov
push
out
add
sub
icebp
or
and
mov
inc
sahf
in
in
in
clc
xchg
or
loopne
ret
add
jno
lret
mov
hlt
mov
arpl
inc
pushf
jno
push
sti
push
mov
mov
int3
cmp
cmpsb
mov
push
push
rorb
fistl
jno
mov
dec
jne
nop
push
pop
movsl
sbb
loope
pop
jmp
jno
jl
adc
fldenv
push
sub
xor
sbb
push
or
push
xchg
sub
dec
orb
imul
and
jmp
cld
adc
icebp
loopne
int
add
aaa
das
pusha
cmp
jno
jmp
xchg
dec
push
fwait
stos
in
dec
fisubrl
iret
into
and
mov
je
adc
icebp
jb
mov
lcall
pop
xor
lock
cmp
push
decl
in
pop
in
int
aaa
pop
jge
cmc
ja
jns
pop
mov
cmp
mov
push
pop
std
mov
test
stc
pop
inc
lock
and
enter
stos
iret
cmp
pop
das
loop
in
jl
imul
test
iret
or
jno
push
inc
aad
and
push
leave
jmp
ficompl
mov
sub
loope
lea
ja
and
lahf
push
push
in
fidivrs
das
ss
mov
mov
inc
inc
dec
js
mov
pop
xor
add
xor
sbb
ljmp
imul
and
pop
nop
xor
or
adc
push
xor
jb
fs
icebp
leave
fdiv
pop
mov
gs
xor
and
fcoms
cmc
ret
or
inc
pop
push
push
mov
test
cmp
pop
pop
movsb
jnp
adc
int3
push
jb
mov
dec
mov
jo
insb
aad
and
xchg
xor
sti
stos
pop
mov
pop
mov
outsl
int
movb
repnz
and
popa
aam
and
cmpsb
push
iret
fsubl
in
ds
xor
cmp
pop
jns
cs
add
movsb
imul
xchg
cmp
pop
lret
lea
mov
cltd
xchg
add
push
add
add
fwait
cltd
mov
cmpsl
jmp
pop
cmp
push
xchg
xchg
inc
cmpsb
lahf
pushf
or
pusha
mov
mov
call
mov
movsb
dec
push
lds
imul
in
or
sahf
dec
test
inc
fbld
lds
dec
in
rclb
aam
mov
js
mov
aas
push
xorl
popa
jle
lds
test
icebp
jb,pt
adc
mov
sbb
push
fwait
clc
imul
or
fwait
sub
insb
sub
sub
stos
sub
jae
cmp
cmp
pop
insb
sub
xchg
mov
fbstp
xlat
sbb
inc
popa
ret
and
mov
push
outsl
outsb
mov
lahf
iret
mov
adc
push
mov
popa
rolb
sbbl
adc
pushf
cwtl
loopne
add
outsl
jle
mov
xchg
mov
xchg
xorl
leave
push
push
in
lret
xchg
loopne
xor
mov
fdivl
repnz
scas
rcl
inc
adc
out
xchg
shlb
inc
lock
mov
iret
test
jb,pn
imul
test
fdivrs
mov
inc
in
mov
mov
outsb
mov
sarl
jbe
and
mov
test
loope
cmp
mov
flds
out
enter
jno
idiv
pop
outsl
mov
stc
aaa
cmp
fnstcw
jmp
and
push
push
dec
outsb
inc
imul
in
scas
push
pop
fwait
sub
dec
fnstenv
jo
jo
inc
dec
in
nop
in
cmp
and
or
mov
sbb
jns
adc
or
out
outsb
icebp
sub
or
leave
frstor
dec
pop
jg
sub
gs
test
insl
cmc
mov
testl
mov
inc
push
punpcklbw
insb
xor
sub
sbb
mov
xor
jns
out
or
mov
lret
xor
test
mov
es
adc
inc
pushw
in
xor
xchg
ss
fwait
mov
push
mov
cmpsl
ret
push
jecxz
ss
mov
jnp
adc
int
mov
add
decb
adcb
inc
mov
dec
cmp
push
xchg
push
incb
add
sbb
add
or
fisubrl
inc
icebp
add
pop
push
nop
push
clc
and
pop
mov
sarb
jge
mov
mov
mov
push
bound
xlat
imul
inc
push
fnsave
enter
push
in
and
inc
shrl
adc
cmp
add
ror
cmc
in
cld
jns
adc
jbe
and
insl
test
lods
cltd
xchg
jae
daa
push
xorb
or
fstps
test
or
inc
xchg
lods
pop
sbb
aas
test
fwait
add
mov
sbb
or
fld
fstpt
ss
mov
mov
sub
xchg
or
fs
dec
dec
xchg
repz
cltd
xchg
pop
or
xor
sub
xor
scas
push
pop
lea
pop
lds
pop
push
push
sub
jae
test
movsl
lret
xlat
cmp
sbb
aad
fsubrl
xlat
mov
shlb
dec
sub
scas
ret
mov
in
adc
cwtl
sub
adc
dec
xor
out
in
std
xchg
pop
loopne
andl
cmp
call
xchg
in
xchg
push
add
sub
dec
roll
or
xor
pop
hlt
mov
lds
test
hlt
les
ljmp
mov
sub
jp
jne
ljmp
sub
imul
in
out
add
add
and
inc
xchg
add
stos
sub
xor
pushf
add
and
aas
cmp
push
mov
inc
push
les
add
clc
jle
leave
lds
sub
mov
hlt
lock
cli
fwait
pop
arpl
xor
ljmp
fdivr
dec
scas
mov
jp
loope
out
test
lods
cmp
sub
xchg
cs
scas
data16
sub
addr16
add
jno
mov
sub
add
int
jp
mov
add
push
ds
mov
pop
ss
xor
sbb
xor
ss
sbb
mov
jle
daa
jb
rcrl
sbb
sbb
stos
loop
cmp
jb
pusha
cwtl
pushf
stos
jmp
fbld
add
fistpll
enter
adc
fldenv
add
sub
ret
in
push
addr16
movl
add
outsl
cs
shrb
push
dec
in
xor
call
cmp
dec
fisubrl
repz
sbb
or
lock
shlb
cltd
mov
int
push
lods
lcall
jle
das
xchg
jle
test
clc
cld
hlt
mov
dec
cs
pop
pusha
loope
loop
dec
and
jmp
cmp
sbb
pop
mov
fiadds
cmp
jmp
xor
cwtl
lock
jae
dec
sub
mov
sbb
es
mov
mov
jle
inc
push
loop
push
sbbl
test
icebp
pop
lret
scas
jmp
inc
test
cmp
cmpsb
iret
mov
add
push
dec
gs
hlt
lret
and
lret
movl
fmul
xor
ds
and
add
out
jae
adc
add
es
mov
pminub
or
mov
cltd
enter
inc
out
loopne
or
cs
outsl
fs
mov
into
inc
sub
test
lods
jg
jmp
rcr
mov
jmp
mov
pop
cwtl
ds
inc
mov
ds
bound
xchg
inc
jle
ds
ja
int3
lea
sub
dec
xlat
cmp
xchg
push
xchg
leave
orl
cmp
sbb
sbb
gs
movsl
mov
mov
mov
lea
imul
sbb
nop
mov
ret
mov
cmp
mov
xchg
push
sbb
sbb
js
sub
inc
fsubs
pop
jle
sub
adc
mov
xor
push
inc
bound
jl
mov
and
sbb
jecxz
pop
cltd
jp
mov
mov
mov
arpl
arpl
push
out
or
pop
mov
mov
ja
sti
fildll
pusha
jo
and
fsubrp
jg
pop
cli
mov
add
sub
out
push
mov
xor
rcrb
push
mov
mov
sbb
push
fwait
mov
pusha
sub
fmull
data16
loopne
sahf
mov
incl
mov
xchg
repnz
xor
pop
add
xchg
fprem1
sbbb
mov
mov
faddl
and
test
push
stos
mov
and
adc
loope
push
pop
adc
push
imul
mov
hlt
decl
mov
and
push
ret
adc
adc
inc
mov
jecxz
lods
push
negb
test
sbb
push
repnz
rolb
mov
in
insb
and
imull
or
popf
stos
das
stos
inc
mov
push
pop
rdmsr
test
sub
sbb
dec
xchg
in
pop
scas
aad
add
add
sbb
ret
stos
rorl
xchg
xor
lcall
aad
es
insb
xor
lods
loope
push
stos
data16
jae
mov
add
xchg
xor
add
pushf
dec
dec
xchg
adc
inc
push
xor
push
mov
in
lret
or
add
jns
push
adc
mov
xorb
push
or
mov
sbb
cltd
pop
mov
call
icebp
pop
lock
push
cwtd
mov
xchg
pop
push
jb
and
leave
cld
inc
nop
insb
mov
jmp
or
mov
mov
lods
outsl
push
xor
addl
fwait
adc
jbe
mov
iret
mov
ds
cmpl
pusha
jg
pop
rclb
nop
rolb
mov
inc
cmpsb
lea
movsl
cli
cmc
jecxz
xor
les
push
inc
cmp
sbb
cmc
pop
xor
xorb
inc
repnz
aam
lods
push
jo
icebp
adc
and
movsb
ja
add
cmp
jmp
and
mov
shlb
mov
movsb
mov
outsb
jp
repnz
outsl
and
es
pop
lea
jae
push
out
data16
in
insb
or
add
cmp
inc
int
nop
ljmp
lret
into
ds
rcrl
es
push
gs
ja
shlb
mov
movsl
push
xchg
push
lahf
dec
mov
popf
sub
js
pop
pop
add
mov
and
pop
sub
pushl
xchg
out
daa
mov
xor
ss
mov
fidivs
pop
arpl
push
pop
adc
test
movhps
js
add
xchg
lock
adc
push
rcrl
pop
and
sub
insb
or
inc
test
adc
add
push
test
dec
sub
cltd
xor
mov
adc
mov
mov
mov
int3
test
jmp
pusha
iret
fcoms
es
pusha
mov
lahf
jae
jbe
mov
movsb
out
ret
or
and
push
sbb
movsl
adc
daa
pop
cld
xor
or
inc
xor
pushl
push
xchg
gs
xor
ret
ret
lahf
jbe
and
dec
jns
fists
outsb
daa
adc
sahf
mov
cmp
mov
push
mov
aas
in
xchg
adc
jmp
orl
test
cmp
int3
mov
rol
daa
addr16
jecxz
mov
pushf
pop
push
xchg
loopne
int3
and
xchg
scas
repnz
inc
push
gs
add
inc
test
mov
sbb
adc
mov
fmuls
mov
mov
sbb
inc
xlat
xor
or
cmpsb
ret
xor
pop
shlb
mov
inc
lret
or
sub
cmp
fwait
sarl
mov
orb
lcall
inc
cmp
repnz
in
mov
lods
mov
jge
repnz
sbbl
data16
imul
push
or
dec
out
jecxz
dec
dec
in
negl
jae
rcll
xchg
repnz
add
fldenv
scas
or
cli
cmp
lods
hlt
int3
pusha
insl
fwait
stc
mov
push
cmp
ljmpw
ret
cmp
out
and
dec
mov
pop
pusha
neg
add
jae
or
inc
aaa
and
movsl
cmp
xchg
add
in
dec
test
rorl
in
mov
cmp
rolb
out
cmp
scas
adc
in
mov
gs
jmp
xor
xchg
pop
xchg
sub
and
sub
push
xor
xchg
sub
data16
jae
lret
and
call
ljmp
push
mov
mov
ret
xchg
mov
mov
out
outsb
jp
outsl
mov
inc
inc
add
cmpsl
mov
outsb
lret
push
mov
adc
fwait
and
and
sti
jl
adc
pop
mov
mov
sbb
jg
add
jmp
mov
in
push
sbb
outsb
daa
cmp
sti
jg
ljmp
test
push
insl
repnz
and
testb
aaa
popa
ds
sub
loopne
int3
lea
mov
cmp
enter
push
and
rorl
fptan
xorb
daa
mov
bndstx
aad
add
bound
mov
sub
test
xchg
inc
adc
or
cld
shlb
xchg
or
addr16
or
lds
add
loop
popa
lods
mov
inc
cmp
into
xor
icebp
sub
stos
jg
les
xlat
arpl
mov
mov
mov
ljmp
leave
push
jp
push
out
push
ja
daa
bound
adcb
sbb
out
js
scas
dec
decl
or
arpl
mov
xlat
sub
mov
out
mov
push
cmpsl
xorb
insb
ret
lods
jne
mov
and
jg
cmp
pop
shrl
jle
incb
sub
arpl
mov
shlb
xchg
stos
and
dec
cs
fwait
lret
aas
mov
jo
lcall
mov
popf
sahf
arpl
mov
add
jnp
adc
iret
dec
mov
ss
loop
inc
mov
mov
or
push
lods
in
pop
xor
in
rcrl
imul
fcmovnu
xchg
mov
xor
test
or
sub
popf
sub
ffree
popa
pop
mov
insl
xchg
insl
sub
shll
cmpsb
add
sbb
pop
int
mov
repnz
mov
call
pop
clc
es
inc
push
jb
icebp
jmp
cmp
mov
xor
insl
xchg
jp
loope
dec
test
push
movsb
loopne
fsubs
loope
or
ret
or
push
adc
mov
pop
in
push
and
outsl
mov
hlt
jb
or
push
leave
fisubrl
stos
sub
rcrb
mov
leave
icebp
out
mov
outsb
mov
in
dec
sar
hlt
mov
loopne
neg
dec
or
mov
inc
lods
sbb
and
pop
xchg
lods
mov
add
test
test
xor
lods
mov
flds
mov
ss
hlt
dec
jnp
in
dec
lret
sub
xchg
sbb
and
dec
mov
loopne
mov
dec
xchg
xlat
push
in
aad
dec
icebp
cmp
shll
jp
jbe
cmp
cmpsl
pusha
insb
push
imul
ljmp
push
mov
push
push
pop
fiaddl
in
test
jge
jno
sti
push
fisttps
aaa
lock
lahf
mov
mov
stc
sbbb
cltd
je
dec
dec
adc
add
or
call
insb
pop
aad
lret
lds
cmp
pop
ret
outsl
daa
xchg
cmp
loop
xor
sbb
cli
test
dec
fdivs
mov
fstp
xor
sub
pop
push
fstpt
loope
lods
cmp
scas
adc
mov
stos
int3
movsl
fistps
out
cmpsl
dec
xor
mov
pusha
sub
fnstcw
mov
sbb
and
jg
inc
je
mov
sar
ret
xchg
dec
lret
pop
rolb
xchg
mov
xchg
mov
lods
cmpsb
and
popf
outsl
sub
jmp
sub
xchg
push
insl
or
xchg
cmp
scas
sahf
fwait
jb
movswl
xor
cs
mov
loopne
call
fs
mov
int
test
pop
cltd
out
sti
rcl
ret
mov
mov
scas
iret
sub
out
lods
and
ljmp
add
mov
js
out
aaa
into
loope
lock
lret
mov
cmp
arpl
pop
inc
lods
or
cmp
jge
xor
out
lods
or
pop
xchg
cwtl
ljmp
pushf
cmp
repz
stos
jmp
push
leave
cmpsl
mov
imul
sub
jmp
scas
out
xchg
shlb
cmc
into
fcmove
insl
aam
pop
sub
int
push
pop
shlb
xor
push
mov
loope
xchg
shll
pushf
cmp
push
fisubrl
fnstsw
cmpb
push
push
mov
cmpsb
fdivr
ljmp
subb
loope
sub
jae
fbld
movsl
cld
push
jg
mov
mov
lcall
movsl
or
inc
add
mov
ds
bound
sub
ret
into
sbb
sbbl
xor
sbb
or
out
pop
das
or
and
mov
pusha
inc
sahf
and
mov
push
lret
testb
add
mov
outsb
xchg
es
xchg
fsubp
popa
mov
in
push
std
dec
jl
jae
js
xchg
sub
outsb
and
or
add
cmp
movsb
add
pop
out
imul
push
popa
arpl
adc
cmpsb
inc
xchg
sbb
or
imul
cli
hlt
ds
iret
mov
cmp
arpl
mov
mov
cli
arpl
sarb
jnp
add
and
inc
rorb
mov
sub
cmp
jmp
add
adc
lea
cwtl
cld
push
jb
adc
bound
or
arpl
int
xchg
push
es
push
shr
shlb
andb
pop
mov
fs
je
jno
mov
cmpsb
int
xchg
mov
loopne
add
addr16
cmp
hlt
mov
mov
xchg
push
mov
insb
stos
xchg
shl
pop
daa
mov
add
cs
test
shl
mov
mov
sahf
xor
or
pushf
imul
pushl
imul
jnp
js
gs
bound
mov
adc
pop
jb
shlb
cltd
ljmp
xchg
inc
mov
mov
and
xor
sub
ret
pop
sbb
hlt
pushf
xchg
mov
sub
mov
orl
push
scas
dec
xchg
add
loop
jge
xor
data16
jno
mov
mov
sub
std
rolb
mov
iret
cltd
and
ss
pushf
mov
lea
cli
pushf
sub
leave
dec
insl
inc
leave
xchg
pop
add
fs
add
jns
jbe
fbld
dec
int
sbb
push
add
mov
in
fcmovne
add
pop
sbbb
or
out
mov
repnz
mov
pop
jno
aam
dec
rol
adc
pop
mov
mov
in
jge
stos
loopne
add
push
dec
mov
out
fildl
fisubrs
add
repz
xchg
or
xchg
aas
test
xchg
loope
cmp
std
dec
addr16
jmp
push
sub
xor
enter
or
fstpt
outsl
addl
xchg
lea
lret
cmp
add
daa
sub
mov
dec
lock
or
mov
aas
mov
clc
xlat
mov
aaa
sbb
push
cltd
jecxz
adc
xlat
push
dec
fcmovnu
mov
mov
or
mov
inc
pushf
and
add
int
add
adc
test
lahf
sub
jo
in
mov
imul
out
mov
jae
pop
inc
bound
fildll
in
inc
movsl
inc
add
pop
xchg
push
cmc
pushf
ficomps
in
or
add
xchg
xor
mov
and
rolb
lock
jmp
pop
repz
xor
arpl
scas
fisubrs
outsb
shrb
mov
mov
push
add
stos
in
outsl
sbb
call
dec
mov
xchg
adc
adc
inc
xchg
ljmp
mov
mov
shr
imul
ret
orb
gs
or
leave
lret
cmpb
out
gs
mov
add
test
mov
lahf
test
mov
push
arpl
and
dec
cmp
ficoms
fs
imul
jno
out
sub
call
sub
lea
nop
xchg
lcall
repz
push
aad
les
test
ret
sbbb
subl
push
jae
movsl
dec
xor
cmpsl
lds
in
xorb
or
cli
jecxz
jbe
push
leave
mov
jl
push
adc
push
sbb
into
add
push
xor
imulb
or
sbb
aam
jle
pop
jbe
mov
fwait
dec
mov
mov
fildl
mov
into
mov
test
lret
fld
pop
jl
pop
and
stos
xor
or
clc
inc
push
imul
bound
sbb
je
testl
pop
fs
cmp
test
fwait
mov
js
jo
dec
push
jmp
jb
not
jo
sub
fnsave
shll
imul
lods
in
icebp
sbb
mov
push
sti
arpl
dec
sub
int
and
stc
shrb
and
out
and
mov
mov
inc
arpl
lods
aas
ljmp
rcrb
cmp
incl
scas
repz
ret
mov
pop
addb
out
push
xorb
inc
ja
dec
imul
pop
scas
lea
sbb
test
or
mov
sbb
int3
ja
nop
sub
aad
lods
jno
add
imul
frndint
or
xchg
shl
pop
outsl
mov
dec
subb
test
cmp
das
xchg
xor
and
loopne
or
dec
mov
adc
add
xchg
test
out
mov
mov
imul
in
xchg
xchg
add
sbb
jg
jno
aaa
xchg
inc
cmp
lods
jae
push
fwait
dec
xor
loopne
out
jge
adc
fst
or
mov
adc
je
lret
cmp
sahf
and
test
mov
dec
ljmp
pushf
repnz
jmp
out
lea
sbb
pop
sbb
mov
adc
mov
xor
add
xlat
int3
movsb
add
cld
rcll
dec
std
out
jno
ljmp
fnstenv
jge
mov
add
dec
jecxz
cwtd
push
and
push
insb
push
pop
pop
push
mov
mov
divl
imul
or
insl
stc
and
nop
push
sub
jno
mov
cltd
mov
or
lock
mov
shlb
mov
xchg
arpl
jg
jne
fwait
or
test
xor
mov
mov
or
xchg
aam
scas
in
lock
mov
fcomps
xchg
push
cltd
sub
repz
nop
jecxz
push
xchg
jg
fldcw
mov
movq
inc
mov
mov
and
mov
fildll
xor
mov
lea
inc
xor
fdivr
jge
adc
cmova
rclb
pop
lods
pop
jle
rep
imul
insb
std
xor
int3
stos
dec
scas
clc
insb
shrl
outsb
cmp
pop
ds
fcoml
fxch
aad
jbe
push
mov
or
jmp
xchg
cli
popl
repz
inc
mov
mov
cmp
mov
cmp
test
lea
xor
loopne
and
jne
imul
stc
pop
rol
and
xor
ss
xchg
rcrb
cmpsb
faddl
fists
adc
popa
mov
add
dec
loop
cmp
sbb
out
cmc
push
xchg
popf
icebp
pop
cld
mov
lds
sbb
fistpl
add
dec
outsl
mov
jle
or
pusha
test
mov
jns
add
js
jp
movsb
xlat
icebp
pop
call
mov
dec
inc
int
add
sub
std
in
pop
aam
add
jno
pop
adc
test
add
sub
xchg
int3
add
sbb
jb
jns
fldcw
inc
arpl
push
and
mov
xor
xchg
jns
xor
xor
and
out
inc
rorl
sub
cmp
inc
jns
sbb
lods
jecxz
dec
ret
dec
in
cmp
enter
fildll
ljmp
fwait
add
ja
into
mov
sbb
fistl
addr16
pop
hlt
jae
dec
sub
ds
cmpsb
cmpsb
icebp
xchg
cwtl
mov
testl
mov
scas
and
xor
lods
pusha
inc
sub
out
sahf
popf
into
mov
popa
mov
jnp
cmp
adc
sbb
cli
or
into
imul
and
dec
push
insl
inc
jecxz
iret
add
nop
sbb
lcall
push
ljmp
movsl
adcl
addr16
enter
cmpsb
cmp
shll
sbb
aaa
mov
adc
sahf
iret
sbbl
lcall
stos
cmp
mov
in
jg
aam
es
dec
pop
xchg
pop
push
mov
int
sbb
aaa
in
out
mov
subb
ret
cmp
push
mov
faddl
pop
pop
test
lcall
gs
add
sbb
movsb
ljmp
xchg
pushfw
sahf
push
sub
add
adc
test
andb
pop
pop
movsl
loopne
lcall
pop
pop
jo
xchg
sti
addr16
push
lret
fwait
jne
jne
mov
loope
in
or
push
xlat
adc
or
inc
pop
loope
adc
cmp
pop
cs
cmp
lahf
jnp
fcom
insl
fnop
sbb
mov
jge
pop
or
je
xor
insl
int
push
push
test
outsb
arpl
jg
ja
jl
addb
jne
repz
inc
pop
mov
bound
mov
cmp
cld
cmpl
pop
ror
jecxz
mov
and
push
xbegin
mov
incb
jno
jmp
xchg
mov
out
mov
movsb
out
push
jne
test
sbb
xor
xorl
fadds
pusha
mov
mov
cmp
push
lret
jns
mov
cli
loope
dec
xchg
push
mov
inc
or
nop
lock
andl
xor
aam
je
mov
test
loopne
jae
aas
aaa
mov
mov
es
sub
out
dec
cmpsl
push
shrl
imul
and
ret
loop
mov
mov
add
xchg
push
adc
mov
into
adc
cmpsb
fsts
sub
imul
or
adc
fisubrl
aad
mov
push
mov
sub
sub
cmp
lods
jne
ljmp
idivl
xchg
mov
xor
sbb
fimull
add
repz
pmaxsw
push
add
test
sub
jnp
enter
hlt
and
pop
fisttpll
gs
lcall
or
xchg
pushf
pop
shll
or
xchg
jno
stos
mov
inc
mov
mov
cmp
popa
pop
fldcw
push
sbb
jbe
inc
sub
xor
into
les
cmp
sub
stos
not
sbb
cltd
rcrl
popa
ss
dec
adc
dec
cmp
clc
push
cmpsl
fisttpll
dec
jecxz
lods
not
and
prefetchwt1
jbe
repz
mov
jle
mov
cmp
les
sub
mov
out
mov
lea
mov
push
or
leave
fcmovnbe
dec
lea
insl
cltd
cltd
jle
int3
pop
push
test
jns
pop
sbb
call
aas
inc
or
jle
int3
lods
cltd
lahf
stos
test
sahf
pop
push
and
mov
loop
mov
jns
mov
fsubp
loop
xor
daa
addr16
out
pop
pusha
insl
movzwl
lret
sti
sbb
mov
jmp
inc
push
or
sub
aam
and
aaa
jns
pop
push
jae
outsl
cmp
push
mov
mov
repnz
insl
inc
inc
fisubl
imul
add
fisttpll
xlat
aad
ljmp
rcrb
mov
mov
adcl
jecxz
lds
dec
in
dec
mov
outsl
gs
test
mov
mov
fucomi
iret
xchg
cltd
push
push
arpl
nop
pop
lods
add
loop
lcall
xor
jp
cmp
fcomp
fistpl
xor
push
or
jo,pt
sti
shrb
or
add
inc
mov
flds
jmp
mov
stc
adc
add
mov
mov
add
mov
call
pop
inc
aas
repz
mov
sub
pop
xchg
xor
inc
adc
clc
mov
sahf
cmp
mov
jae
add
mov
or
push
xchg
pusha
xchg
stos
imulb
pop
int3
xchg
nop
mov
pop
gs
dec
jnp
sub
ds
jno
push
stos
ds
pop
mov
inc
sti
das
add
dec
bound
lea
sbb
add
ds
and
sbb
stos
mov
rcr
xchg
pusha
sbb
test
out
sub
jne
imul
aas
or
push
insl
pop
clc
and
aad
idiv
fcoml
fucomi
dec
sti
push
jp
mov
pop
mov
mov
enter
les
test
push
je
push
sbb
pmaxub
movsl
add
imul
lahf
push
cwtl
mov
xor
std
std
adc
pop
dec
mov
jno
xchg
into
sbb
xor
add
aam
push
mov
dec
icebp
mov
inc
xchg
cli
push
vmovmskps
mov
xor
ret
and
cltd
aam
push
in
xchg
loop
jb
hlt
push
out
lods
fstps
test
push
xlat
fdivrs
and
sbb
and
or
xor
jae
add
sbb
fistl
ret
lahf
pop
dec
mov
repnz
insl
into
pushf
push
cmp
lods
shrl
xor
sbb
les
sbb
sbb
mov
cmp
sbb
nop
out
scas
cs
orl
dec
pusha
push
mov
jns
out
lds
jns
adc
orl
les
inc
add
mov
movsb
nop
mov
ljmp
leave
shrb
sbb
pushf
out
and
fucom
dec
or
sbb
cmp
das
loope
in
clc
sub
sub
aad
xabort
roll
mov
or
loop
dec
xchg
mov
in
xor
cmpsl
pop
push
or
in
mov
mov
cwtl
xchg
sbb
pop
mov
xor
ret
pushf
lock
addr16
ss
xchg
les
cmpl
push
loop
out
xlat
jno
lock
cmp
pop
sbb
inc
fisubrs
cmp
cmp
rolb
rorl
psadbw
mov
stc
xor
mov
repz
mov
lock
je
outsb
or
cmp
mov
add
mov
fisttpll
stc
xor
dec
xchg
roll
add
sbb
imul
fdivrs
insb
mov
test
cs
incl
es
andb
lret
test
in
push
adc
ds
lret
negb
or
mov
sub
jno
movsb
xor
xchg
lods
jmp
sub
jno
inc
adc
xchg
pop
add
pop
es
pop
pop
mov
lods
pop
loopne
roll
xchg
adc
daa
testl
stc
mov
cmp
mov
subb
or
xlat
jno
mov
stc
xchg
scas
ja,pt
mov
aas
mov
outsl
in
sub
xchg
sarl
fisttps
loope
cmpsb
xor
out
pop
dec
and
jl
dec
sub
sarb
push
jne
test
add
jne
pop
in
push
scas
inc
cmp
out
dec
mov
lock
inc
loopne
rclb
inc
enter
in
movsl
adc
shlb
pop
in
cld
out
daa
stc
loopne
leave
mov
push
rcll
popa
mov
cmpb
test
push
xchg
adc
push
or
mov
sbbb
mov
pushf
shl
xchg
stos
xlat
mov
dec
or
insl
fxch
mov
out
jle
dec
fistps
cli
sahf
leave
inc
sbb
xchg
jnp
jl
pop
jle
fcmovnb
imul
loope
repnz
ss
push
pop
sbb
adc
xor
hlt
pushf
test
arpl
cmc
imul
xchg
xor
fdivrs
cmp
sti
fsubs
push
ficoms
jg
cmpsl
jbe
out
lods
dec
sbb
call
sbb
repnz
iret
jl
mov
insb
push
and
ret
and
push
aaa
addr16
mov
movl
mov
add
fs
aam
in
lock
pop
mov
cmpsb
aaa
jo
into
aas
movsl
add
pop
pop
ret
cmc
jmp
pop
rolb
push
out
aad
mov
xor
rol
adc
insb
or
mov
mov
inc
mov
push
jb
les
mov
bound
xor
inc
stos
pop
pop
pop
inc
or
xor
nop
or
dec
inc
adc
cltd
adc
and
jo
addr16
pop
cltd
cmp
repz
test
inc
sbb
mov
sub
jne
prefetch
lods
pop
fiaddl
aam
mov
pop
and
fcompl
rcll
xchg
push
and
outsl
scas
mov
cmp
shrb
mov
pop
mov
inc
pop
jns
cmp
mov
mov
sub
push
mov
adc
add
push
stos
adc
cld
jg
aaa
jg
cmpsl
arpl
push
andb
jg
mov
mov
jge
addl
leave
push
push
lods
push
dec
js
out
inc
pop
inc
mov
mov
mov
or
sbb
lcall
xor
roll
pushf
or
add
pop
int
fstpt
inc
addr16
cmp
cmp
test
rcll
ljmp
loop
push
cltd
xchg
fldt
jno
jmp
mov
xor
loope
sub
mov
pop
mov
out
sub
mov
lock
in
out
push
in
out
push
scas
jecxz
lea
jbe
mov
icebp
hlt
outsl
fnstsw
sub
rcll
das
sub
ja
rolb
movsl
in
pop
orb
lret
les
adc
sarb
adc
je
sarl
in
daa
jno
das
fdiv
jne
pop
out
ljmp
and
enter
imul
push
add
movsl
js
pop
sti
push
popf
add
pop
outsl
test
adc
cmpsb
andb
jle
ret
jl
in
push
and
shlb
mov
fnstenv
sub
out
enter
shrl
xor
jnp
pop
jno
test
xor
pop
scas
test
ljmp
rcrl
pop
adc
mov
dec
nop
fcomip
sub
clc
mov
push
dec
lret
aaa
sar
test
dec
loop
ljmp
add
dec
xor
cmc
outsl
in
in
repz
andnps
add
mov
sahf
jmp
cli
add
rcrb
xchg
sbb
loope
mov
in
jae
std
dec
add
loopne
xchg
inc
inc
dec
jno
inc
push
mov
xor
xchg
repnz
jno
push
out
out
dec
rolb
pusha
imul
dec
jns
sahf
ret
pop
loop
push
rol
push
insl
loop
dec
leave
subw
mov
incl
decl
xchg
sub
pop
enterw
sbb
icebp
xor
in
insl
insl
push
shrb
pop
hlt
lea
in
inc
aam
cli
and
decl
fisubrl
rolb
push
nop
and
cli
mov
xchg
into
adc
fsubrl
cli
daa
movsl
lds
push
mov
mov
dec
fldcw
push
daa
add
cmp
test
jp
jo
add
int3
mov
aam
pop
inc
cmpb
inc
xchg
js
inc
sub
imul
xor
stc
int3
adc
and
popa
popf
xor
fdivrs
out
inc
jecxz
inc
jo
mov
inc
pop
and
fcmovnu
rol
add
andps
mov
in
aaa
bound
ficoml
setge
mov
in
out
sar
xchg
nop
shr
mov
inc
mov
inc
lds
rcl
pop
jo
dec
outsl
fldt
cltd
and
mov
mov
stos
mov
in
addl
cmpsl
mov
ja
and
test
aas
xorl
outsl
xlat
iret
in
mov
and
loopne
add
pop
adc
mov
bound
add
outsl
das
or
cmp
loope
repz
jecxz
pop
scas
arpl
mov
movb
add
mov
dec
mov
mov
int3
dec
repz
cmp
lds
jo
loopne
lret
lcall
add
loop
mov
loope
adc
popf
fildl
mov
sbb
idivl
data16
int
call
jp
cmpsb
jns
cmc
add
mov
mov
negb
mov
push
icebp
add
pop
icebp
mov
test
sbb
test
and
mov
lret
sub
mov
popf
cli
mov
push
and
or
clc
hlt
push
popa
imul
or
aam
add
mov
stos
lock
xor
mov
insb
inc
push
xchg
mov
inc
in
les
pop
sbbb
out
lds
test
loope
mov
data16
subb
decb
xchg
aaa
and
dec
mov
push
stos
mov
pop
sti
mov
inc
jbe
or
outsl
pop
stos
mov
sbb
adc
shl
aam
lock
movsb
adc
cmp
repz
add
stos
jecxz
mov
jns
push
stos
jp
xor
adc
push
sub
stos
adc
int
xlat
shll
mov
mov
jg
sub
cmp
iret
fdivrs
cmc
stos
out
xchg
cmp
test
outsl
test
movsl
enter
fistpll
pop
addr16
inc
gs
jns
push
mov
outsl
pop
push
shll
test
mov
pop
sub
add
pop
in
xchg
stos
pop
fmuls
xor
mov
jp
mov
test
xchg
sub
stos
jecxz
les
int
aad
mov
js
insl
jne
xor
addr16
push
pop
or
xlat
sub
iret
icebp
mov
sub
dec
jge
in
out
imul
test
shr
loop
ss
lods
pop
push
cltd
iret
lret
test
in
lret
aas
dec
ss
mov
stos
and
cld
lcall
jae
lods
push
or
jnp
cli
lret
bound
and
shll
insl
sbb
push
jmp
adc
pop
xor
dec
inc
sub
inc
ss
jecxz
sti
enter
fmuls
fs
sbb
or
or
cmp
cs
cs
push
rolb
stos
loopne
fstpt
fxch
xor
sub
inc
int3
out
mov
lock
fs
add
fstp
add
push
fmull
clc
mov
add
xor
shll
pop
movsl
sub
popf
mov
and
mov
outsb
out
roll
cmp
xor
push
iret
jl
into
push
mov
push
mov
xor
pushf
cmpsl
add
xchg
xchg
mov
jno
rclb
mov
addb
mov
test
add
aam
push
adc
out
add
insl
addr16
add
mov
je
aas
sub
in
mov
jle
adc
ret
cmpsb
inc
out
mov
adc
cli
or
jp
icebp
push
mov
xor
inc
repnz
adc
stos
xor
inc
sbb
or
loop
push
cmp
jnp,pt
pop
dec
pop
sbb
jbe
gs
je
aaa
cli
lods
sti
pop
xchg
mov
push
adc
adc
lods
cmpl
je
mov
emms
sub
mov
and
mov
mov
or
int3
sub
inc
xchg
cmp
fisubrl
imul
popf
arpl
push
lds
lret
loopne
daa
mov
rsm
aam
int
out
pop
jle
add
or
mov
je
nop
pop
sub
cmp
and
lods
loope
cmpb
mov
addr16
test
arpl
mov
cld
push
pop
and
mov
sbb
mull
out
push
dec
add
and
jl
adc
push
shl
inc
pop
add
add
hlt
cli
adc
das
fmuls
push
mov
js
cld
repnz
in
je
adc
jmp
mov
rcll
fdivs
jge
inc
mov
imull
aaa
int3
cli
out
push
fcmove
or
fwait
clc
and
hlt
pop
pextrw
xchg
cwtl
out
shrl
cld
addl
inc
cmp
mov
loop
imul
push
int3
into
jns
pushf
je
aam
iret
pop
int3
pusha
adc
pop
stos
gs
mov
jno
icebp
inc
pop
dec
pop
roll
rcrb
and
jp
dec
fisubl
push
cwtl
lcall
cli
loop
es
dec
xor
push
fistpl
and
lret
sub
testl
add
xchg
inc
push
out
icebp
jle
cmp
jnp
stos
scas
sbb
lcall
cmp
inc
jae
call
sbb
cmpsb
ds
xor
jle
dec
data16
lods
jne
sbb
cld
mov
insl
outsb
jmp
jne
aam
and
lods
das
lahf
hlt
or
push
in
nop
lahf
fildl
pop
mov
shl
loope
shrb
add
imul
dec
call
inc
ffreep
leave
pop
lea
incb
loop
push
sbb
daa
sbb
loop
pop
sub
cli
xchg
lcall
mov
shll
dec
jae
es
jl
jbe
fcmovne
cmp
ret
adc
out
pop
sbb
es
add
sbb
mov
rcr
pop
jmp
dec
push
xor
xchg
mov
mov
je
aam
mov
adc
test
icebp
outsb
mov
cmpsb
test
cmp
push
or
sti
les
ljmp
cltd
push
rorb
imul
and
xchg
lock
ffreep
lret
sub
or
sub
sti
stc
pop
pop
xor
cmpsb
daa
xchg
ljmp
iret
loopne
xchg
daa
inc
or
sub
adc
and
out
lock
dec
jns
mov
xchg
fisubrs
js
pop
mov
add
push
xchg
pushf
pop
insl
je
rcll
rorb
cmp
pop
iret
xor
pusha
adcl
aam
std
or
pop
repnz
and
push
imul
add
in
cmp
mov
icebp
mov
xchg
xor
push
pop
xorl
adc
cmp
adc
insl
shl
push
out
sar
sarl
mov
adcb
adc
das
adc
inc
and
sarb
mov
dec
lods
xchg
sub
fidivrs
cmp
add
cld
mov
cld
fiaddl
dec
fcompl
jmp
stos
clc
dec
xor
or
andl
and
aad
std
cli
mov
xor
sbb
xor
add
mov
inc
stc
inc
mov
fs
je
sahf
lock
jno
mov
mov
jnp
jge
dec
cli
leave
std
out
sub
fdivrs
jmp
sbb
popf
mov
aaa
outsb
inc
jl
mov
nop
add
mov
aaa
dec
jg
or
fsubl
adc
dec
pop
jns
movsb
sbb
popa
or
fsubrs
xchg
sbb
xchg
dec
enter
jmp
and
data16
loop
xchg
mov
xor
adc
pop
jle
dec
mov
jp
and
xor
pusha
adc
gs
cmpsl
jne
xor
orl
pop
xchg
testl
push
or
lret
mov
adc
lret
or
fnsave
push
nop
dec
xor
jb
sahf
dec
cmpsl
lret
dec
mov
inc
sub
mov
stos
pop
insl
out
adc
or
pusha
mov
jbe
jns
jbe
pop
daa
addl
sub
cmp
fwait
or
add
out
imulb
imull
into
into
int3
rcll
sbb
xchg
loop
adc
xchg
push
or
mov
es
sbb
loopne
push
xor
mov
nop
inc
into
out
or
xor
fwait
fscale
jg
insl
imul
add
fldt
loope
jmp
mov
inc
ds
push
jp
pop
xchg
cmp
enter
xlat
jne
cs
loop
rcrl
addr16
jbe
cli
or
inc
and
cmp
fs
into
sbb
shrb
push
sub
inc
dec
mov
std
pop
ffree
cmpsl
insb
pop
mulb
fwait
push
enter
inc
xor
test
dec
aas
sub
loope
xor
sbb
rcrb
fs
int
out
mov
shr
cmp
inc
sbb
adc
sbb
sub
aaa
fs
xchg
mov
xor
mov
loop
sub
pop
xchg
mov
add
cmp
test
push
inc
insl
jne
int3
cmpsl
fcmovne
pop
fadds
fidivrs
xor
mov
sti
mov
js
jecxz
je
lds
sti
mov
shrd
stc
adc
fdiv
fwait
mov
cld
mov
aam
xor
jp
insl
xchg
adc
xor
lea
cmp
sub
cmpsl
mov
test
loopne,pn
test
xchg
inc
xchg
mov
inc
call
pop
mov
fdiv
rolb
imul
fsubl
inc
stos
mov
fcomip
push
ss
sub
cmp
dec
int3
pushf
fldenv
fisttpll
hlt
hlt
jbe
rcl
and
clc
aam
xchg
xchg
add
mov
push
cs
jns
negl
jle
fbstp
cmp
loope
pop
das
les
mov
sub
xchg
push
sbb
cmp
cmpsl
cs
mulb
jl
jae
insb
push
fstps
jne
add
shl
data16
mov
imulb
popl
cmp
dec
gs
inc
lods
pop
mov
jl
hlt
and
and
imul
addl
stc
mov
xor
fidivl
mov
pop
fidivrl
mov
mov
loope
pop
pushf
mov
imul
jne
subl
xor
push
mov
jo
mov
pop
outsb
insl
cld
dec
ficoms
sti
xchg
jbe
lods
inc
sbbl
inc
push
xchg
xor
cmp
test
lock
in
jo
test
dec
outsl
into
inc
mov
push
dec
jl
pop
fsubrs
sbb
inc
cld
mov
fs
mov
fsubrs
push
sub
xchg
in
ss
and
dec
mov
dec
sub
pop
push
jecxz
pop
repz
xchg
ret
inc
nop
es
fbstp
mov
mov
pop
out
xor
inc
stc
inc
dec
cltd
lds
push
mov
xchg
loope
xchg
data16
loopne
in
bound
sahf
dec
repz
dec
sbb
push
aam
sarb
cmp
cmc
pop
and
icebp
outsb
ss
cmp
dec
mov
pushf
pop
or
lods
jl
cs
pop
cmc
jb
loopne
inc
call
pushf
or
cmp
sbb
repnz
mov
adc
ss
pop
mov
cmp
repnz
loope
push
push
push
cmp
sti
test
jle
jg
movsb
andl
pop
sub
sti
mov
adc
cmovg
jo
inc
jae
shl
mov
testb
cltd
xchg
push
sub
inc
jmp
mov
mov
ret
mov
movb
insb
adc
mov
frstor
xchg
jbe
jo
mov
xchg
hlt
lock
inc
mov
in
mov
je
and
jno
mov
sbb
rcrb
ja
xlat
subb
jmp
add
repnz
int
add
lock
xchg
enter
add
in
ret
js
es
inc
loop
inc
inc
aad
cmc
dec
cld
push
out
cmc
mov
adc
jp
dec
sbb
lea
jne
in
clc
mov
push
inc
xchg
test
leave
push
rcr
and
rolb
jo
mov
ljmp
push
sbb
adc
out
lods
pop
mov
orb
cmpsl
cmp
bound
xor
mov
or
addr16
jge
sahf
adc
mov
in
jo
out
aam
sub
je
fdivp
cmpsb
inc
lcall
mov
mov
mov
and
fimuls
jecxz
je
push
pop
pop
push
lods
clc
or
push
jnp
or
mov
mov
and
sahf
or
nop
or
xor
or
repz
ja
xchg
repz
popa
pusha
cli
or
push
jnp
push
xchg
lcall
int3
gs
shrb
jmp
push
adc
arpl
js
popa
dec
mov
hlt
or
add
mov
push
adc
lret
push
xor
and
outsb
cmp
and
jge
inc
imulb
in
loope
jnp
cli
arpl
inc
loope
test
lret
jg
sub
outsb
add
add
xchg
in
xchg
cmpsb
aas
daa
shrb
in
jne
xchg
pop
pushf
mov
out
mov
sub
sahf
dec
mov
mov
and
dec
pop
lods
rclb
insl
ja
mov
push
and
fisttps
ret
jae
dec
add
scas
add
aas
pop
mov
sbb
mov
inc
mov
out
jns
mov
nop
xchg
mov
xchg
fcmovbe
imul
pop
jb
inc
dec
inc
mov
test
cltd
cli
jbe
adc
pop
hlt
jp
cld
add
mov
aam
les
xor
mov
repnz
mov
sahf
nop
sbb
ljmp
enter
add
ljmp
pop
push
pop
out
jl
push
cli
cmpsl
sub
fdivs
dec
pop
mov
mov
mov
movb
scas
sbb
fwait
add
lret
or
js
push
push
jb
mov
sahf
rcrl
add
mov
aad
jns
scas
lods
test
hlt
mov
and
aaa
ja
mov
xchg
fisttpll
push
mov
iret
xlat
fbstp
cmp
daa
test
test
into
push
repnz
dec
inc
mov
inc
mov
sub
sub
fadds
add
mov
loop
and
dec
mov
call
and
addr16
mov
cmpb
xchg
mov
pushf
and
xor
je
push
dec
daa
scas
jl
mov
pop
sub
push
and
push
jbe
inc
jno
decl
inc
es
lock
sbb
inc
mov
jnp
xor
mov
mov
inc
in
mov
loope
scas
inc
insb
gs
adc
nop
push
cld
pop
inc
popl
arpl
xlat
mov
mov
mov
pop
jmp
hlt
add
mov
data16
imul
lret
sbbb
mov
push
inc
xor
or
cmp
fnstcw
pop
addr16
cwtl
adc
cld
inc
xor
adc
push
dec
sub
jecxz
jmp
fisttpl
jo
mov
sub
push
daa
cltd
shlb
leave
je
neg
add
hlt
fsubs
scas
jge
dec
inc
pusha
mov
fistpll
ret
mov
xchg
inc
stc
enter
sub
mov
mov
lods
jbe
jo
mov
jno
lahf
add
jl
dec
cwtl
andl
push
pop
pop
xchg
stos
adc
sbb
ret
cmc
or
xor
out
and
pop
jecxz
ret
into
loope
add
jb
xor
xchg
or
fcoms
jge
repz
push
data16
push
stc
pop
divb
jmp
fdivrp
rcrb
test
cli
enter
outsb
push
enter
nop
push
jg
repnz
or
pop
jmp
and
inc
sub
cmp
fistps
pop
ret
je
es
push
jno
xchg
inc
pusha
or
jmp
dec
cmpsl
loop
dec
ljmp
push
movsl
and
outsl
fildll
in
jne
fmul
addr16
xor
cs
fs
xchg
dec
mov
cli
ret
fildll
es
and
into
jae
inc
cltd
xchg
jns
push
mov
out
iret
mov
outsl
push
push
mov
cmovnp
sti
xor
insb
xchg
subb
inc
fadds
int
dec
in
mov
pop
movsl
and
or
pop
lds
push
mov
lcall
or
cs
xor
xorl
outsl
cmp
es
std
or
aaa
dec
mov
loopne
cmp
int3
mov
cld
adc
xchg
fwait
sbbl
jo
pop
cmp
sub
arpl
fwait
xor
mov
adc
flds
mov
test
pop
add
mov
inc
and
loope
repz
lods
adc
adc
insl
jle
cs
push
pop
aad
add
and
mov
out
push
sub
ret
mov
jecxz
pop
jle
cmp
shlb
xchg
leave
mov
ret
ja
add
out
mov
adc
out
xchg
and
push
or
pop
gs
hlt
pop
jmp
outsl
leave
cmpsb
and
mov
xchg
popa
cmp
jecxz
adc
xor
cld
ja
and
js
out
test
sub
enter
xchg
inc
mov
jle
sti
int
add
lock
shlb
xchg
lcall
lret
mov
dec
mov
or
out
or
ss
adcb
hlt
add
rcll
sti
in
in
jbe
in
xor
xchg
ret
dec
rol
dec
mov
xchg
mov
mov
and
frstor
lret
sbb
mov
sbb
dec
xchg
cli
add
jle
xor
rcrb
enter
test
xor
jmp
scas
daa
and
imul
cmp
adc
shlb
ficoml
and
mov
sahf
mov
std
ja,pt
adc
js
test
and
outsl
mov
lds
std
mov
ret
add
mov
mov
mov
jle
cmp
cwtl
js
cmp
inc
ret
arpl
stos
test
mov
add
cmpsb
sbb
pop
lahf
xchg
jp
lcall
inc
iret
adc
xor
push
push
fildll
and
sbb
sub
ret
sbb
ss
sbb
imul
inc
xchg
xor
xchg
int3
sub
push
add
cwtl
mov
dec
mov
call
std
inc
rorb
mov
mov
pop
pop
and
xor
jg
xchg
and
add
insb
push
aas
arpl
xchg
or
mov
fwait
sub
test
dec
push
add
cmp
push
cmpb
aas
fildll
in
mov
cmp
into
insl
mov
dec
jnp
push
test
add
jecxz
pop
sub
and
loopne
adc
cmp
loopne
dec
scas
adc
cli
movsb
or
ret
repz
cwtl
push
lds
popf
mov
push
sub
mov
and
rcrb
jecxz
in
inc
lret
sahf
add
adc
xor
fldenv
mov
subl
rorl
sbb
sbb
xor
push
shlb
xchg
dec
adc
fisttpll
call
in
pop
int
in
sbb
push
pop
and
mov
adc
mov
lahf
and
lcall
adc
call
xchg
loop
xchg
jne
mov
inc
sbb
xor
mov
mov
jbe
fmull
cmpsb
and
jmp
mov
pop
mov
mov
xor
std
pop
mov
fldenv
jmp
int
adc
or
sbb
pop
mov
das
mov
fwait
ret
data16
and
fildl
inc
repz
arpl
dec
fdivp
add
or
push
mov
arpl
adc
in
add
out
aad
pop
jae
sub
mov
add
pop
adc
fbstp
ret
ret
insb
cmc
pushf
pusha
sub
test
cmp
fstpl
ret
mov
lods
scas
cmpsb
ret
dec
or
out
xor
push
shl
out
sahf
mov
jb
push
movsb
inc
adc
stos
rep
push
sub
push
ds
lock
push
fcom
and
lret
and
add
iret
and
rorl
push
add
mov
shlb
adc
aaa
sub
mov
sub
push
loope
imul
and
movsl
push
cmp
mov
hlt
pop
mov
in
mov
jo
shr
push
sbb
insl
xor
out
mov
loop
and
dec
xchg
das
into
mov
loope
ret
cwtl
add
pop
mov
sar
inc
shl
pop
das
cmpsl
mov
mov
out
ja
xchg
pop
outsb
pushf
adc
scas
pop
inc
cmpsb
mov
adc
testl
in
sub
loope
xor
add
lcall
pop
mov
cwtl
pop
inc
das
pop
and
test
mov
push
mov
shr
pop
leave
in
lock
decl
push
xor
adc
mov
lcall
rolb
shlb
inc
adc
rcpps
cmp
jno
cli
sbb
add
and
dec
pop
jmp
mov
lods
dec
int
fsubrp
cld
int
dec
mov
cmp
es
jo
add
mov
fs
or
aas
cld
decb
sbb
jnp
push
pusha
dec
aaa
pusha
sub
jbe,pt
rorl
sub
adc
sbb
push
cli
lods
push
lret
adc
jae
adc
fst
inc
dec
mov
pop
xor
sub
sti
dec
mov
jno
jnp
mov
rcr
cmp
sarb
adc
or
jne
negb
leave
ss
cmp
shlb
xchg
enter
push
add
and
mov
push
gs
fisubrs
adc
push
fmuls
scas
cmpsb
push
movsb
or
dec
mov
std
loopne
pop
cmpsl
lods
in
popa
dec
add
movsb
fidivl
jg
stos
mov
cld
cmpsl
cld
pop
push
je
push
aam
mov
test
arpl
popl
lods
scas
xor
popf
fs
or
lcall
mov
rcpps
sbb
pushf
dec
lcall
imul
xchg
and
and
sahf
pop
xor
mov
pop
add
inc
sbb
shlb
dec
lret
and
cmp
jmp
push
movsl
mov
and
xchg
loopne
dec
xchg
pop
lods
cmpsb
mov
inc
cmp
sbb
fnsave
mov
mov
jo
pop
push
sbb
aas
inc
hlt
inc
repnz
daa
mov
push
rclb
xchg
cmp
sbb
cmpsb
push
and
lods
negb
gs
mov
or
in
dec
push
dec
out
arpl
inc
push
ss
cli
and
jns
jg
mov
lret
jo
push
jns
push
ret
stc
dec
jp
int
jbe
xor
sbb
jns
shlb
inc
cmpb
jg
pop
cmpsl
into
mov
sbb
push
sub
jns
bnd
lcall
stc
and
movsb
dec
mov
pop
jge
cmp
inc
inc
mov
mov
idiv
rolb
repnz
dec
fwait
cli
fs
adc
push
pop
add
aad
scas
pushf
xchg
scas
cld
push
out
orl
xor
inc
dec
xor
dec
fadd
jo
ret
mov
jl
rcrl
addl
sub
cld
push
shll
roll
test
jne
cs
mov
jge
dec
lret
fimull
jmp
xchg
adc
jp
andl
mov
jmp
bound
pop
add
cmp
cmpsb
fldt
cmp
addr16
ret
test
cmp
sbb
lret
int
add
dec
inc
loope
push
push
loopne
test
mov
push
repz
push
popa
sub
push
xchg
sub
fstl
pop
xchg
loopne
inc
stos
ret
inc
ljmp
fsubrs
mov
test
mov
test
mov
add
cmp
ret
iret
int
dec
mov
push
js
call
fisttpl
or
sbb
subb
mov
ss
loop
dec
or
rorl
mov
test
inc
add
in
orb
movsb
clc
movsl
dec
ja
inc
addb
ss
insb
push
mov
cmp
lahf
movsb
push
cltd
cltd
inc
lods
xlat
pop
or
fcomps
pushf
pop
dec
pop
ret
pusha
mov
lds
sbb
shlb
mov
es
cmp
jb
lea
imul
xlat
test
sub
je
cmp
and
mov
jo
dec
sub
cmp
inc
jns
xor
fisubl
out
xchg
scas
or
mov
and
pop
stos
cs
leave
pop
ljmp
cmp
dec
adc
call
dec
aaa
imul
add
fs
and
das
fmuls
aaa
fdivp
lds
adc
out
shll
ret
pop
iret
sub
inc
sti
shll
xor
adc
mov
add
mov
mov
jno
lods
pop
fidivl
movsl
mov
jb
xchg
imul
mov
xlat
bound
and
pcmpgtb
fisttps
cmp
popa
xchg
dec
jmp
imul
pushf
sub
push
icebp
nop
xchg
dec
sahf
xchg
vpmadcswd
sub
push
mov
cmp
lea
fmuls
add
insb
lahf
js
or
aaa
inc
mov
pop
inc
mov
sbb
mov
jg
mov
mov
mov
test
dec
fistpll
test
shrb
and
mov
mov
aam
rcr
dec
out
mov
jecxz
add
or
cmc
call
test
sub
fsubs
pop
jg
xchg
pop
lret
xchg
lock
in
ds
stos
sbb
sbb
cmp
mov
test
fnstenv
mov
xor
inc
pop
cmpsl
cmc
icebp
mov
fabs
lods
adc
jbe
je
add
repz
dec
inc
insb
mov
pushf
sbb
xchg
pop
in
inc
mov
stos
pusha
xor
mov
pop
int3
push
bound
sti
sub
rorb
fwait
test
cmpsl
sti
out
ljmp
mov
add
in
jl
push
jmp
pop
and
iret
test
mov
push
in
leave
int3
clc
inc
fs
mov
aaa
add
add
lock
movsb
sbb
sub
mov
xor
mov
sub
fsts
inc
loop
insl
sbb
and
test
xchg
mov
pop
idiv
clc
outsl
fimuls
je
push
sti
dec
lret
lods
inc
pop
jp
stos
cmpl
mov
xor
inc
pushf
sbb
xchg
sbb
iret
dec
lock
ljmp
cmp
incb
add
jns
aaa
mov
xchg
jmp
loop
adc
mov
cmp
scas
push
movsl
fisttps
std
inc
imul
flds
arpl
push
xchg
dec
sti
cmp
in
sbb
js
rcrb
jge
jp
fwait
mov
movl
lea
das
pop
stc
or
insb
dec
imul
pop
mov
repz
ss
push
cli
ljmp
mov
push
push
sbb
jmp
jl
xchg
push
inc
mov
adc
fadds
imul
xor
out
inc
fsub
shlb
mov
push
notl
lcall
sub
into
xchg
sub
aaa
mov
mov
jns
mov
leave
add
jne
mov
outsb
fwait
jb
adc
mov
and
sbb
jmp
inc
aam
testl
xchg
xchg
fildl
je
jp
ds
roll
dec
push
mov
pop
add
outsl
mov
dec
jmp
fdivrl
lea
cld
sbb
nop
loope
test
xchg
push
cs
out
add
cmp
scas
bound
xchg
mov
mov
jg
fs
sbb
outsl
xor
add
ss
test
xchg
jp
incl
icebp
add
lds
stc
dec
xchg
cmp
inc
pop
dec
xor
repz
cmp
adc
outsl
jp
adc
loope
xchg
pop
mov
cmc
jmp
repnz
pop
test
pop
lock
xchg
adc
push
pop
in
sub
ret
cmp
lock
je
sub
inc
mov
leave
in
lods
pop
add
dec
mov
fcomps
push
mov
mov
pop
in
int3
pop
xor
gs
ljmp
mov
dec
dec
data16
cs
lret
ds
jecxz
adc
inc
push
test
shl
outsl
rorl
sbb
addr16
fbld
sub
cs
cmp
sbb
pop
movsl
out
negl
inc
jmp
cmp
pushf
lcall
inc
incb
adc
int
pop
push
repnz
scas
adc
daa
dec
xlat
inc
inc
mov
jne
cmp
xchg
push
cmp
mov
xor
add
gs
push
cli
ds
pushl
dec
push
push
mov
scas
arpl
sbb
sbb
sbb
cmpl
or
mov
xor
or
outsb
dec
stos
fisttpl
inc
imul
roll
popf
orl
mov
divb
inc
pop
xchg
fsubs
ret
sub
or
into
ds
or
ss
ss
rorl
push
data16
cltd
mov
shr
cmp
bound
das
mov
icebp
cmp
inc
leave
cmp
cmp
insl
pop
or
cmp
sub
mov
lods
jge
subb
xchg
pusha
aam
pop
aad
loop
or
mov
or
push
pop
cmp
enter
mov
and
fsubrl
imul
sbbl
xchg
mov
xor
cltd
jg
dec
nop
and
and
mov
cmp
cmp
loopne
daa
cs
pop
push
inc
mov
int
push
dec
and
test
dec
imul
push
cmp
dec
push
popl
aaa
pushf
imul
movsl
mov
mov
push
xchg
mov
stos
lret
arpl
xor
lret
mov
pushl
out
mov
cmp
mov
push
fidivrs
popf
jg
rcll
in
jae
sahf
xor
clc
push
lods
jb
nop
das
xchg
sbb
lret
cmpsb
test
xchg
xor
test
and
call
xor
jo
ret
dec
dec
xor
adcl
lret
add
mov
dec
hlt
arpl
cs
inc
in
call
lock
popa
shr
mov
filds
es
repz
fstpt
pop
fs
sti
pushf
lret
aaa
movsb
aas
sbb
dec
rcll
cmc
inc
sbb
mov
mov
shll
xor
out
mov
fs
daa
insl
xchg
into
mov
jecxz
mov
cmpb
lret
out
movsl
ud1
and
xchg
xchg
push
subl
iret
in
add
xor
mov
mov
out
and
jo
aad
xorb
js
roll
enter
mov
daa
test
rcll
mov
sbb
inc
pop
pop
std
sub
nop
fdivrp
fimuls
mov
out
icebp
and
fidivl
push
je
aas
out
pusha
sbb
mov
pop
rcrw
sub
sbbb
punpckhwd
sub
fists
add
cmp
or
movb
and
and
mov
push
mov
cmp
movsl
lds
jno
mov
in
shll
outsb
in
push
aam
cmpsb
and
lods
pop
call
sub
shrl
pop
xchg
jbe
cld
sahf
sti
iret
nop
pop
push
pop
leave
xchg
push
and
sbb
adc
mov
mov
stos
push
cmp
lcall
mov
lods
dec
aad
xor
xor
lock
jo
imul
subb
movsl
xor
jnp
adc
fisubrs
and
les
sub
mov
xchg
dec
call
jbe
in
fldl
imul
hlt
rcl
jns
push
mov
mov
lock
dec
mov
incb
lea
add
push
test
out
inc
mov
daa
addl
lahf
xchg
jp
mov
lcall
jo
xchg
xchg
add
or
adc
repnz
rorl
xchg
push
mov
xchg
das
lea
stos
scas
dec
cmp
cmc
andl
sub
in
out
or
or
ret
pop
popl
xchg
imul
cmpl
push
mov
das
mov
iret
icebp
lcall
inc
in
xor
inc
pop
mov
dec
add
ds
sbb
mov
mov
leave
aaa
mov
mov
neg
ljmp
bound
out
lret
mov
pop
mov
inc
dec
dec
cld
fnstcw
adc
out
inc
cmp
data16
jecxz
cmpsl
shll
mov
sti
fiaddl
xor
in
cs
divl
out
ror
and
pop
push
push
jb
jmp
jg
and
xchg
lahf
sbb
and
cmpsl
push
jnp
xchg
add
mov
call
repnz
ret
xor
mov
and
sarb
push
js
mov
je
add
xor
cli
xchg
xor
inc
pop
mov
mov
dec
xchg
out
mov
sbb
pushl
in
sbb
pop
xchg
xor
mov
das
rorl
sahf
comiss
xchg
inc
int3
mov
pushf
fistps
sbb
pop
mov
lret
dec
sub
or
and
xchg
adc
jl
xlat
pop
push
push
int3
dec
inc
cmp
inc
insb
sti
pop
fsubrs
ds
mov
add
sub
ucomiss
lret
mov
add
test
aaa
repnz
pop
jle
jb
sub
test
in
out
dec
push
shrl
mov
scas
imul
stc
mov
ficomps
push
insb
or
mov
dec
mov
mov
push
stos
adc
repz
dec
iret
test
jecxz
pop
out
outsb
movsb
imul
inc
push
sbbl
sub
fldenv
push
xor
xlat
push
rcrb
mov
in
adcb
inc
pop
arpl
subl
dec
arpl
ror
and
scas
popf
pop
lret
add
ret
xor
jno
mov
sarl
fisubrl
int3
mov
cld
aad
and
lahf
imul
add
xor
push
lahf
dec
and
add
incl
mov
and
pop
mov
mov
loope
mov
cmp
xor
and
outsb
and
and
imulb
sub
adc
adc
aaa
jp
inc
sub
pop
jecxz
add
sbb
push
adc
jecxz
fs
ja
ficoms
enter
test
pop
xchg
jo
or
xrelease
sbb
pop
add
jecxz
js
dec
mov
dec
or
arpl
jno
call
mov
pusha
cltd
add
cmpsb
mov
insb
shll
es
mov
or
out
mov
mov
pop
xor
pop
dec
out
in
jl
mov
mov
into
push
mov
dec
jl
in
scas
jbe
xor
mov
pop
ret
mov
fstpt
outsb
xor
cmpsb
pop
outsl
int
ds
rolb
inc
aaa
pop
ljmp
int3
scas
pusha
adc
movb
stos
jno
movsb
loopne
loopne
into
mov
sub
xchg
int
mov
lea
fcmovu
dec
shll
sbb
mov
int3
adc
fwait
push
xchg
int3
testl
dec
pop
jecxz
stos
addb
lods
jl
add
mov
mov
outsl
lret
mov
mulb
in
fnsetpm(287
cli
push
inc
jle
cs
pop
pop
push
mov
push
push
inc
mov
pop
inc
or
ret
push
xchg
dec
sbb
ljmp
mov
test
ljmp
pushf
sti
cmp
insb
push
icebp
cmp
das
mov
mov
es
and
jmp
addb
xor
fnstcw
pop
in
push
stos
ds
pop
aaa
scas
xchg
and
add
and
xor
sub
push
nop
gs
scas
xchg
mov
fs
stc
push
roll
shll
je
ror
mov
divl
xchg
cmp
popf
sbb
sub
scas
push
ror
fsubp
cmp
clc
jle
ja
xor
xchg
out
inc
and
das
outsb
and
sub
movsl
dec
mov
daa
add
mov
jne
pop
and
test
xchg
xchg
clc
in
inc
push
adc
mov
xchg
jne
sub
ret
mov
dec
add
push
movb
repnz
into
cs
outsb
inc
cli
adc
push
inc
hlt
arpl
push
cmp
repz
sub
cmpsb
lods
out
mov
pop
fcoms
inc
inc
pop
push
inc
adc
adc
sarl
jnp
mov
mov
jg
sbb
cmp
enter
xchg
cld
cmpsl
loopne
cmp
mov
jp
mov
xchg
lods
sub
hlt
movsl
pusha
push
inc
adc
aas
mov
xchg
sub
sbb
aaa
loop
in
loope
std
sarl
test
pop
rcr
fwait
iret
push
cmp
rcrl
or
sbb
push
xchg
mov
pop
xchg
add
fpatan
mov
dec
or
mov
aad
mov
scas
mov
stos
xchg
cmpsb
jle
fisubrl
dec
or
sub
adc
inc
roll
test
cmp
inc
in
incl
cld
int
out
lods
out
cmp
dec
inc
pop
jge
and
push
insb
aas
scas
xor
cli
test
punpckhdq
stos
or
sti
sub
sub
dec
gs
cmpsl
lret
enter
out
jg
shl
out
xchg
lock
pop
inc
jg
fucomi
push
insl
xor
mov
shll
nop
sbb
cmc
imul
mov
daa
cmpsb
outsl
test
aaa
cli
xchg
or
pop
outsl
out
repz
and
adc
add
or
mov
adc
fxch
or
jnp
inc
push
mov
lcall
xchg
jne
in
dec
inc
sbb
into
adc
jle
or
mov
sbb
ss
test
int
fcmove
mov
in
sbb
jns
dec
enter
sbb
lcall
into
mov
bound
decb
inc
jmp
aaa
cmpsl
std
lods
pop
and
lret
jecxz
sahf
jns
inc
add
dec
test
mov
mov
mov
fcoms
sbb
xchg
in
lret
outsb
repz
mov
lods
add
xorb
repnz
aam
cld
andb
in
or
jg
cmp
cmp
sbb
cvtdq2ps
scas
mov
mov
fiadds
mov
daa
push
pop
into
mov
orb
aas
dec
fcoms
call
repz
lock
inc
mov
jae
and
mov
xchg
ja
ds
in
jle
mov
or
inc
cld
iret
in
add
les
pop
sbb
inc
add
loopne
inc
jno
arpl
aam
test
repz
dec
int3
out
xchg
xchg
jge
fmulp
push
add
fiaddl
pop
adc
jnp
cmp
nop
jbe
mov
add
hlt
sbb
mov
dec
call
cmp
inc
jns
rorb
sub
lret
mov
cmp
stc
mov
aam
jae
dec
test
ret
pop
mov
outsl
xor
adc
cmp
jle
mov
push
mov
mov
pop
xchg
lods
outsb
fiaddl
inc
pop
mov
ret
or
testb
movsl
sahf
add
ja
mov
sbb
loope
shr
add
pop
xor
les
xor
pop
jae
xchg
mov
mov
divl
pop
loopne
mov
jge
push
dec
add
mov
add
sbb
sub
cli
lcall
decb
xchg
xorl
aad
dec
add
iret
cmpb
stos
pop
shll
xor
inc
push
sahf
cld
dec
sub
mov
or
movl
pop
and
pop
test
fnsave
sbb
mull
ret
mov
mov
jl
je
and
add
aam
mov
pop
pop
add
xchg
ja
jbe
add
pop
mov
insl
or
lret
ja
dec
push
push
cli
in
add
or
mov
in
imul
xchg
mov
cmp
xor
push
mov
stos
sub
sahf
movb
outsl
in
in
popf
pop
sti
in
xchg
out
mov
or
sarl
push
jno
filds
lret
cli
fstl
ljmp
lahf
std
add
adc
cwtl
cmp
pop
mov
call
daa
cmp
mov
sbb
inc
xchg
pop
dec
imul
imul
sar
adc
cmc
and
push
mov
pop
cwtl
jmp
neg
fwait
xor
in
cmp
fidivrs
adc
xchg
push
xchg
in
popl
ficoms
add
arpl
out
sub
cmp
mov
adc
jecxz
loopne
and
movsb
jl
jns
jno
push
cmp
mov
mov
adc
add
xchg
or
testl
push
jo
sbb
ja
mov
popf
add
cmp
ficomps
push
jg
and
lret
adc
push
and
pop
push
cmp
sbbb
jbe
push
push
ljmp
or
jb
or
stc
dec
push
cmp
mov
jecxz
add
sbb
enter
mov
bound
mov
cmp
and
mov
xchg
jb
push
pop
rcrl
dec
push
nop
add
rcl
sbb
jne
fcoms
adc
jne
jbe
dec
popf
jmp
scas
and
pop
js
jg
mov
dec
adc
pop
jb
cli
fldl
stos
ret
inc
in
and
out
cmp
jl
cmp
icebp
fdivrl
das
cli
cli
rcrl
aad
fs
or
xor
movsl
mov
jp
mov
imul
cli
mov
pushf
push
adc
add
xlat
rcrb
mov
adc
jbe
das
dec
mov
push
fistpl
paddw
sarb
push
or
movsb
insl
xor
push
xor
xchg
pusha
ds
inc
lock
imul
jecxz
xor
xchg
pop
mov
dec
dec
mov
inc
mov
sub
or
mov
sahf
push
test
mov
stos
jbe
mov
mov
push
mov
sub
stos
aas
lods
scas
scas
dec
sub
stc
arpl
mov
dec
push
stos
loop
mov
jbe
xchg
adc
xor
and
xchg
icebp
jae
hlt
add
xchg
push
cmpsl
aad
fcomp
add
lea
in
int3
in
mov
push
rcll
cld
mov
inc
push
cmp
outsl
out
movsb
sbb
jbe
xchg
xchg
xor
es
in
pushf
or
lods
adc
mov
jl
fdivs
cli
fs
sbb
inc
push
pop
or
imul
pop
mov
jl
fdivrs
adc
sete
cld
push
rsm
insl
adc
orl
sbb
mov
aas
addr16
pop
scas
xchg
cltd
jb
fdivrs
clc
jle
cmc
test
dec
or
inc
mov
xor
xchg
call
xchg
outsl
mov
test
push
cltd
sbb
and
cmp
in
mov
and
sbb
add
fisttpl
inc
push
push
ret
xchg
loopne
imul
xchg
movsb
repnz
cmp
dec
out
mov
inc
mov
xlat
xlat
inc
jnp
push
mov
pop
push
cmp
and
aam
fsubrs
sti
cmpsb
es
out
sahf
pop
imul
mov
leave
mov
into
sub
sub
jo
jbe
xchg
popf
jmp
sahf
dec
add
adc
gs
inc
xchg
out
sbb
and
pop
sarb
movsb
stos
jmp
test
jns
adc
mov
dec
js
pop
addb
dec
lock
mov
outsl
dec
inc
push
in
clc
dec
sbb
out
jg
jmp
mov
cmc
cmc
mov
xchg
imul
dec
xchg
mov
push
jae
jmp
mul
jle
sar
lock
mov
in
pop
inc
test
ficomps
sti
mov
or
inc
mov
es
sbb
fidivrl
popa
add
orl
jb
ljmp
cmp
jb
shlb
cmpsb
leave
int3
push
or
incl
into
bound
in
repz
jmp
inc
push
inc
inc
loope
xchg
shl
dec
adcl
iret
js
daa
mov
dec
adc
mov
test
dec
aad
fstl
call
shll
popa
xlat
and
adcb
out
outsb
adc
dec
cmpsb
aaa
clc
dec
cmp
pop
mov
lahf
push
push
outsb
or
fs
jnp
addr16
loope
sub
mov
subl
cmp
imull
mov
mov
xchg
mov
xor
gs
xchg
add
push
out
and
jmp
je
xchg
sbb
add
iret
cwtl
movsl
inc
fdivp
mov
pop
iret
sahf
test
jge
mov
cmp
mov
pop
xor
mov
xor
cmpsb
ret
es
inc
sub
dec
sbb
pop
mov
lds
incl
push
jno
sbb
add
outsl
iret
sbb
popf
adc
jbe
js
out
sbb
inc
outsb
loope
fildll
jp
xchg
inc
or
lea
mov
int
mov
jno
dec
nop
shrb
dec
dec
out
mov
dec
cmp
mov
les
jmp
mov
jg,pt
pop
mov
xchg
adc
adc
out
lcall
xchg
test
dec
mov
inc
insl
dec
pop
ss
or
jo
es
inc
jl
sub
fs
pop
stc
int
hlt
in
orl
insl
repz
jg
xchg
mov
add
or
jecxz
jno
inc
sarb
imul
pop
mov
inc
lods
call
mov
add
stc
test
testb
inc
push
popf
cmp
sub
sub
jmp
stos
repnz
sub
ds
popa
sbb
mov
mov
mov
js
jecxz
insl
push
jl
adc
dec
xor
out
dec
loopne
jecxz
daa
lock
lcall
loopne
mov
sub
xor
sub
jnp
clc
add
or
or
out
stos
fstpl
negl
int3
lock
xor
out
lods
jge
aas
cld
inc
testl
xorl
lret
ljmp
dec
adc
jg
mov
pop
rcr
mov
jo
push
int3
pop
xlat
xchg
call
aad
test
dec
repnz
repnz
or
pop
cmpsl
dec
loope
lcall
push
outsl
subl
or
jmp
pusha
mov
dec
ret
mov
iret
mov
xchg
push
ret
push
into
dec
mov
pop
cvtps2pi
repz
cs
mov
cld
mov
fmull
cmc
mov
mov
mov
add
rorl
inc
mov
and
xor
addr16
les
shrb
call
or
adc
es
hlt
hlt
and
imul
movsl
int3
push
loope
mov
jle
shlb
clc
or
movsb
mov
cmc
push
outsl
mov
ss
into
daa
jecxz
jge
test
mov
pusha
pop
jns
fwait
bound
and
pop
xchg
int
jg
push
mov
cmc
ja
popf
inc
inc
shrl
sbb
fsubrp
ret
roll
jg
xor
sub
mov
inc
sub
mov
sbb
cmp
xor
and
push
or
loopne
push
insb
dec
lret
clc
pop
add
lea
outsb
cmp
shrb
mov
nop
jp
vmread
inc
mov
sbb
mov
inc
out
inc
repnz
fwait
adc
divl
insl
cmc
push
jb
and
sub
adc
push
dec
inc
mov
mov
fcmovb
mov
ljmp
inc
push
js
pop
xchg
mov
mov
es
popa
daa
ss
sti
ss
std
mov
pop
push
test
in
arpl
or
jmp
mov
nop
or
movsb
jnp
sbb
fists
push
ds
cmp
dec
mov
xlat
xor
jl
xchg
ffreep
inc
loope
or
fwait
lock
orb
and
jp
fldl
hlt
popf
push
lock
push
popa
jecxz
test
pop
mov
pop
sub
mov
call
call
lret
and
pop
push
or
jl
sbb
jge
std
mov
gs
adc
mov
imul
push
ror
insb
mov
push
sbb
setg
scas
inc
rclb
push
lret
cmp
fists
xchg
xchg
mov
mov
jno
sbb
dec
aad
mov
add
lock
add
out
repnz
mov
insb
add
push
and
stc
lods
adc
lods
pop
add
pop
ss
fdivrs
push
xor
cmpsl
jbe
xchg
pop
adc
loop
mov
add
add
sub
lahf
add
andb
scas
fsubr
aam
mov
loop
movsb
dec
dec
push
push
mov
mov
lock
cmp
mov
popa
mov
jge
loop
or
lret
jne
lahf
pop
mov
popf
ret
xchg
dec
mov
enter
mov
lahf
add
inc
in
push
icebp
lock
les
mov
clc
sbb
ret
push
popf
xchg
mov
or
adc
add
icebp
aam
mov
scas
es
shrl
in
mov
enter
and
outsb
roll
jne
adc
mov
lcall
jecxz
xchg
push
mov
jl
push
mov
push
test
dec
push
in
pop
popf
pop
sub
jmp
lock
je
orb
lret
outsl
or
shlb
inc
std
add
sbb
test
jns
dec
mov
mov
sahf
lahf
xor
mov
xor
sbb
jbe
ljmp
mov
movsb
rcll
and
sbb
rolb
sbb
movsb
shrb
mov
popa
imul
bound
lea
loopne
les
inc
cmp
mov
mov
sti
dec
push
ficoml
addr16
adc
push
mov
jae
and
sub
sub
sbbb
push
imul
or
mov
mov
xor
loop
cmpsl
pop
adc
xor
fst
sub
mov
std
ja
lahf
pushl
jb
jae
lea
push
loopne
sarb
test
push
jnp
sarl
pop
add
stos
jmp
loope
pop
sbb
or
mov
lds
or
bts
pop
sarl
mov
neg
adc
dec
push
cmp
jmp
jg
dec
sbb
shlb
pop
cmp
lods
xor
add
icebp
dec
dec
pop
shlb
adc
stos
fcmovne
or
stos
je
dec
ljmp
adc
cwtl
pop
xor
cmp
mov
repnz
test
push
movsl
lea
jb
or
leave
xor
clc
leave
push
outsb
out
cmc
mov
div
mov
hlt
loope
dec
and
sarb
sbb
jg
push
cmpsb
or
pop
leave
cmp
es
sbb
xchg
insb
push
fs
dec
cmp
jle
in
enter
xchg
cmp
lahf
push
mov
add
lds
out
mov
jne
lods
push
add
sbbb
mov
in
mov
mov
lret
mov
imul
or
cmpsl
or
in
dec
hlt
jmp
dec
sarl
push
xor
iret
outsl
xor
push
jbe
push
sbb
ret
cwtl
adc
sbb
in
and
shlb
mov
sti
sub
adc
pusha
jb
data16
pop
leave
mov
fwait
clc
or
and
xor
pop
les
pop
xchg
aad
and
clc
mov
ds
mov
xor
sbb
call
cmp
sti
mov
mov
mov
push
cld
jno
test
sarb
add
in
in
rorl
xchg
mov
in
xor
mov
je
jmp
ljmp
add
pop
out
push
dec
jmp
sbb
pop
mov
data16
cli
inc
imulb
push
sub
cltd
ret
addr16
shl
pop
or
sub
mov
shl
fs
insb
sub
xor
and
sbb
and
sti
es
xorb
add
pusha
fcoml
jmp
xchg
push
jp
dec
fisubrl
jnp
mov
push
jns
xchg
xchg
in
aam
je
pop
clc
mov
sysret
and
push
inc
aaa
pusha
aas
pop
aaa
dec
js
rcll
daa
xor
dec
mov
ljmp
lahf
sbb
popf
adc
filds
mov
inc
add
in
xchg
cld
shrb
push
mov
inc
sbb
sbb
push
cld
lcall
add
jecxz
adc
mov
insb
lds
fldcw
scas
jecxz
in
gs
sub
mov
aad
mov
cmp
jnp
dec
dec
out
int
jns
dec
cs
lahf
fcmovu
lock
and
cli
fld
xor
jle
push
inc
hlt
mov
dec
movsl
jl
lds
inc
mov
call
loope
shrl
jb
adc
es
mov
das
and
jle
xchg
lods
addl
and
icebp
jp
cltd
inc
push
test
mov
sub
jmp
shr
dec
mov
lock
movsb
inc
mov
lret
cmp
roll
pop
lods
sahf
inc
mov
dec
in
shll
lods
jmp
pusha
xchg
jo
das
xchg
stos
mov
pop
imul
and
in
addr16
jmp
sub
xchg
mov
out
jp
jns
lds
lcall
test
in
fwait
xor
ja
imul
shrb
aas
sbb
dec
sahf
shll
inc
shll
push
adc
stc
inc
ljmp
cld
jle
rol
jg
addr16
es
in
and
mov
cmp
cwtl
cmp
ljmp
cwtl
sbb
mov
aas
and
inc
lret
dec
test
pop
cmp
insl
xacquire
xchg
mov
jno
movsb
sbb
adc
int3
push
cmp
dec
cltd
addr16
mov
adc
add
pop
add
pop
fldl
hlt
lret
dec
fstpl
mov
push
movsb
and
and
ret
cmp
int
mov
dec
stc
fs
add
std
into
int
mov
mov
xlat
scas
rolb
sahf
mov
xor
cmc
cmpsb
repz
jp
or
inc
push
loop
call
aas
pop
rcrl
mov
pop
cwtl
data16
scas
test
pushf
pop
icebp
icebp
mov
stos
mov
js
test
sub
pop
mov
test
and
dec
fdivrl
push
call
movsb
out
in
movsl
sbb
jl
cmpsl
or
mov
cli
pushf
loopne
test
push
arpl
push
mov
mov
in
roll
fsubs
loop
and
fwait
arpl
mov
xchg
lea
cmp
fwait
dec
xchg
cmpsb
andl
fdivl
pop
orb
pop
ret
movsb
mov
or
fs
inc
repnz
adc
test
inc
push
or
xchg
call
sbb
add
mov
xchg
pop
push
mov
rol
aas
loopw
jg
pop
lret
cmpsl
stc
jne
inc
jb
mov
mov
call
loope
in
les
or
lret
push
std
inc
and
pop
or
mov
sub
neg
pop
cli
mov
pop
xchg
fs
and
mov
inc
cmp
cmp
sub
fmull
cs
jl
jmp
jbe
push
sub
fsubrs
sbb
lods
or
das
ds
and
out
dec
sub
ss
xor
addr16
outsb
push
push
push
dec
addr16
enter
in
loop
sar
loope
int3
xor
or
dec
ja
add
pop
pusha
push
mov
inc
fmuls
mov
shr
jae
call
pop
fisttps
or
lock
fidivs
test
repnz
xor
aaa
dec
mov
insl
dec
jle
pop
andps
cmpsl
rorl
sub
into
xchg
mov
pop
popa
loop
xor
mov
mov
rcrb
and
mov
sub
fsubp
inc
scas
and
cmp
and
insb
mov
inc
es
push
and
inc
adc
cmp
pushf
sbb
lea
subl
int3
or
loop
add
ds
ja
test
mov
mov
cmc
lcall
xor
in
xchg
cmp
gs
arpl
pushf
jo
mov
fmul
loope
xchg
ret
adc
sahf
in
sbb
hlt
xchg
jg
cld
cli
je
js
sub
sub
and
cld
movsb
sti
sub
push
lods
push
movsl
mov
jle
cmp
jl
iret
ret
ss
jne
arpl
sbb
dec
mov
mov
daa
mov
mov
mov
xchg
jb
push
fwait
je
cld
test
test
add
lds
cmp
xchg
or
loope
ja
jmp
xchg
iret
out
inc
push
jg
inc
inc
mov
inc
mov
push
test
pop
out
icebp
out
test
push
mov
nop
stos
xchg
xor
or
sub
add
cs
push
lret
jns
mov
shrl
and
and
enter
mov
cmp
cli
pop
and
popa
in
mov
ljmp
imul
inc
mov
cli
cmp
pop
repnz
int
insl
int
mov
or
pop
aas
daa
ret
lds
mov
sub
repnz
in
movsb
pop
loop
jo
std
enter
mov
mov
mov
dec
or
jb
dec
cs
xor
dec
inc
pop
jno
dec
outsl
into
mov
pop
jg
and
sub
add
stc
fistpll
repz
cld
aaa
inc
enter
dec
lahf
test
pop
int
cmp
test
test
das
and
cmp
sbb
popa
test
adc
and
xor
add
dec
int
ret
orl
sbbb
icebp
aad
lcall
fsubrl
jne
cmp
mov
shll
jp
jl
popa
out
or
loopne
fdivrl
dec
enter
jnp
rorb
inc
push
loop
pop
mov
jecxz
pushf
push
ss
cli
inc
mov
movsl
xor
pop
imul
enter
out
les
cli
pop
js
dec
call
jle
adc
aas
xchg
sub
add
push
ret
or
outsb
fsubl
packssdw
sbb
out
imul
fcomip
mov
cld
loop
mov
lcall
cld
fistpll
out
cmpsl
sub
fwait
adc
push
add
cmp
scas
insl
push
imul
int3
mov
testb
mov
aam
bound
enter
ds
mov
pop
ret
mov
sti
pop
mov
adc
or
insl
pop
and
lahf
inc
inc
and
push
inc
or
les
inc
fildl
jns
repnz
fs
frstor
cmp
popa
dec
or
inc
xchg
fwait
xor
ds
sub
xor
pushf
mov
in
ror
shl
add
in
outsb
adc
imul
popf
mov
pop
test
xor
add
lret
xchg
or
mov
sbbl
andb
pop
inc
inc
out
mov
add
adc
mov
daa
push
lret
mov
jmp
cld
and
push
into
rclb
data16
icebp
xor
orb
inc
xchg
cld
push
je
fs
hlt
push
dec
clc
push
and
test
pop
cmp
pop
test
ficoml
xchg
or
adc
clc
fdivs
cmpsb
dec
sbb
roll
loopnew
cmp
or
insl
inc
loope
dec
scas
cmp
out
or
jmp
mov
rcrb
pop
mov
movsl
fdiv
xchg
mov
pop
cmp
push
sbb
loopne
jg
mov
inc
adc
mov
push
jmp
add
and
push
lock
sbb
xchg
inc
mov
inc
jbe
xchg
cmp
or
sbb
cmpsl
int3
movsl
and
fwait
call
ljmp
sub
lea
pop
cs
je
mov
add
adc
push
into
in
lods
dec
sbb
sub
fcoml
push
pop
cmp
in
and
in
nop
lods
xchg
out
jl
or
pop
aas
jo
push
pushf
and
fstpl
int
bound
iret
xchg
xlat
leave
les
loope
fistpll
mov
bound
or
pushf
gs
mov
mov
pop
lahf
dec
flds
cmp
cmp
push
daa
sti
dec
pusha
fdivrp
sub
into
loopne
ljmp
dec
push
fcomps
sahf
fistl
xor
add
pushf
loop
cmpsl
mov
mov
xor
adc
cmp
fsubs
mov
cwtl
lcall
push
jmp
mov
bound
dec
mov
or
fucom
rolb
pop
hlt
in
test
mov
imul
out
dec
push
sarl
xor
sub
mov
repz
xlat
jnp
pop
int3
fldt
inc
jle
mov
pop
and
fldenv
std
lock
jae
ret
push
sbb
xor
push
leave
int
mov
jg
mov
xchg
rcrb
jmp
loop
push
jns
clc
sbb
shrl
push
insl
mov
jmp
fsubrs
stos
xchg
pushf
mov
stos
dec
inc
add
jmp
bound
push
repnz
adc
add
mov
pop
test
std
sti
inc
scas
mov
fxam
or
jne
scas
jnp
lahf
movsb
loope
ds
xchg
xor
stos
ss
add
imul
sbb
cltd
and
xchg
dec
mov
nop
mov
aaa
pop
pop
call
inc
out
dec
mov
in
jbe
stc
rclb
pop
outsl
enter
mov
mov
inc
andl
sbb
testl
mov
mov
sahf
sbb
fimull
outsl
out
movsb
xchg
test
addr16
mov
shrl
mov
push
pop
ljmp
cmp
mov
cwtl
inc
inc
and
js
xchg
and
xchg
movsl
mov
lret
fisttpl
pop
jno
aas
add
stos
js
sbb
insb
pop
pushf
bound
and
imul
mov
pop
icebp
inc
or
lahf
mov
shr
ja
int3
dec
js
dec
scas
push
sbb
pop
mov
outsl
lods
dec
cwtl
dec
inc
pop
in
dec
mov
xor
add
cld
sti
call
fadds
pop
or
rcll
push
mov
pop
gs
sub
dec
addb
mov
ret
js
dec
sub
mov
lret
mov
push
dec
dec
orl
adc
rcll
rclb
fdivl
mov
mov
cmp
pushf
cli
insl
std
pop
outsl
jno
inc
dec
xchg
sbb
pop
push
mov
xchg
bound
sbb
loopne
loopne
mov
fists
sbb
les
cli
mov
mov
clc
loop
repnz
sbb
pop
stos
or
and
dec
iret
lock
and
imul
mov
cmp
mov
imul
stc
in
mov
jne
pop
inc
add
or
repz
adc
outsb
sub
sti
jge
iret
fs
andb
gs
mov
call
inc
fdivr
push
movsb
enter
imul
mov
cli
sbb
adc
mov
dec
push
cmpsb
pop
aad
sbb
or
mov
mov
and
stc
jg
stc
bound
or
sub
jno
xchg
mov
xor
lods
xchg
inc
loope
sar
mov
or
push
hlt
mov
sub
xchg
ss
ds
sbb
inc
movsb
mov
enter
push
sbb
inc
leave
repz
addb
mov
xchg
aad
push
pushf
push
lea
cwtl
adc
in
push
out
xor
fisubrs
add
sub
cmpl
pop
mov
lcall
shlb
pop
xchg
aam
mov
adcl
push
add
mov
push
imul
call
mov
cmpb
inc
or
add
stc
bound
in
and
and
fsubrp
pop
push
shrl
iret
push
mov
push
andb
add
xchg
ss
mov
dec
in
call
adc
std
add
ja
ret
pop
adcl
out
mov
dec
mov
icebp
in
adc
in
stos
ds
es
leave
dec
lcall
inc
add
fildll
xor
pop
jp
clc
ljmp
mov
gs
cvtps2pi
mov
jg
cmpsb
cld
xchg
sbb
mov
jmp
sahf
jle
xlat
or
jb
push
adc
dec
xchg
push
push
cmp
lock
or
mov
clc
cmc
pop
mov
pop
cwtl
stc
test
add
pop
pop
add
pop
fists
int3
push
lahf
lods
xor
mov
pop
les
lods
cmpsb
std
cmp
scas
xchg
insb
jo
inc
push
popf
sub
adc
jae
shrb
xchg
gs
cld
jge
cmp
aad
add
sub
out
sbb
adc
or
aas
sbb
mov
cmp
addr16
xchg
xchg
lcall
cmp
mov
sub
in
pushl
ss
popf
int3
imul
in
imulb
cltd
lods
push
decl
pusha
stc
and
push
push
pop
dec
lock
xor
jge
adc
fstl
push
aas
mov
mov
sub
jge
mov
sub
aam
and
and
incl
or
mov
and
das
add
in
jg
xor
push
jmp
jp
xor
fidivrl
dec
push
and
jmp
add
cld
adc
das
nop
call
test
data16
pop
or
dec
inc
or
jo
aam
repnz
mov
mov
cwtl
inc
dec
cmp
es
xchg
push
mov
xchg
mov
add
hlt
xor
popf
mov
fcmovnbe
inc
ss
xchg
cld
add
sahf
rcll
xchg
int3
pop
clc
nop
xchg
lods
lcall
xchg
push
cmpsb
and
mov
jmp
ds
out
movsb
cmpsl
test
rolb
jmp
jnp
pop
xchg
pop
or
test
lock
mov
cmpsb
orb
pop
std
lahf
xor
mov
pushf
sahf
jecxz
jae
rol
push
jp
jl
mov
pop
xor
push
cmpsl
mov
mov
mov
pop
scas
push
in
pop
cld
mov
xor
dec
jl
xchg
push
ret
sahf
inc
gs
mov
xchg
insl
cltd
dec
iret
add
jne
xchg
mov
pop
enter
fwait
popf
pop
jno
daa
xchg
fadds
sub
or
icebp
lahf
cmp
or
fs
orb
out
push
xor
nop
pusha
jp
xor
xchg
std
xor
pop
sahf
fcmovnb
pop
cld
daa
jb
lock
sbb
sbb
dec
push
or
pop
fmuls
std
into
cmp
mov
aad
mov
nop
jle
adc
pop
mov
arpl
es
in
mov
and
out
inc
aas
and
enter
out
jo
ret
lahf
lret
add
dec
jmp
mov
jns
jg
insl
pop
push
add
cmp
das
and
inc
repnz
adc
outsb
add
and
rcll
shlb
cld
mov
cmp
lret
arpl
bound
loop
pop
sbb
inc
inc
nop
mov
call
lods
stos
jmp
repnz
inc
dec
lcall
mov
sbb
and
jne
mov
out
cmc
pop
pop
dec
popa
inc
push
loop
aas
std
cmpsb
add
nop
and
push
dec
int3
and
ljmp
lahf
fnstcw
adcb
ret
enter
mov
and
jne
sbb
mov
fisubs
nop
push
imul
pop
push
mov
lock
push
xchg
mov
pop
outsl
sbb
loop
mov
pop
decl
repnz
mov
add
mov
mov
int3
jmp
mov
sbb
inc
out
mov
push
dec
push
mov
push
xchg
bound
loopne
ja
pop
add
shrb
cmp
mov
out
ja
pop
mov
or
or
je
pop
xchg
jbe
sbb
stos
push
js
nop
imul
jns
cmpsb
and
popa
stos
hlt
dec
cmp
imul
xchg
and
fsts
insl
jnp
into
push
and
rclb
mov
jne
inc
data16
filds
fstl
adc
clc
jmp
decb
mov
loop
push
xor
push
das
call
xor
sbb
gs
js
dec
mov
es
movsb
ss
xchg
mov
mov
jo
dec
fists
inc
mov
loope
cltd
aad
push
fiadds
ljmp
push
inc
xor
inc
mov
addl
sbb
push
ja
pop
xor
adc
sar
aas
inc
fisubrl
mov
add
shrl
jae
stc
pusha
test
aam
shl
mov
aam
sbb
dec
fsts
movd
cwtl
out
pop
ret
divb
jge
mov
daa
outsl
xor
xor
insb
ret
sub
loope
sub
aaa
cmp
or
shrb
test
pop
hlt
ret
pushl
sbb
mov
fbld
call
pop
xor
dec
xchg
mov
xlat
xchg
movsl
stos
jle
fidivl
add
add
les
repnz
pop
iret
roll
jp
and
sbb
test
movl
adc
and
pop
and
mov
shll
and
int
lret
daa
fldl
or
das
lods
js
inc
fld
push
outsl
pop
test
push
adc
pop
mov
add
pop
sbb
and
leave
sbb
or
arpl
fadds
pop
out
sbb
inc
fcmovbe
leave
xchg
lea
xor
insl
push
jp
test
jno
cltd
mov
jae
leave
sub
bnd
cmp
aad
je
bswap
icebp
fucomp
xchg
adc
lret
fwait
sub
cmp
pop
inc
rcl
dec
les
inc
push
push
xor
ret
in
out
mov
xchg
loop
jl
jnp
sub
nop
imull
mov
lret
adc
testb
push
nop
inc
addr16
lock
out
outsb
inc
hlt
sbb
popa
pop
lock
cltd
ret
pop
push
cs
push
icebp
das
shll
icebp
rolb
jne
adc
iret
push
lods
mov
shrl
pop
fwait
imul
sub
mov
xor
pop
xor
outsb
dec
movsb
scas
outsl
adcl
inc
cmp
enter
lcall
xor
and
pop
jl
subl
mov
cmp
scas
scas
ja
lret
stc
mov
in
lods
inc
ret
adc
xchg
data16
cmpsb
and
mov
pop
xchg
mov
data16
lea
sub
leave
add
scas
bound
hlt
or
push
pop
mov
hlt
int3
and
add
add
or
mov
ret
leave
pop
xchg
leavew
xlat
sbb
filds
inc
sbb
mov
insl
xor
adc
inc
loop
lcall
mov
sbb
add
jp
aad
ror
fstl
subb
jmp
mov
cmc
sub
add
cld
shll
fimull
lods
in
ficomps
xor
inc
mov
inc
fsts
xchg
sbb
mov
dec
je
bound
mov
dec
adc
imul
xor
mov
pop
in
jae
addr16
inc
push
and
lcall
push
cmp
mov
push
sbb
dec
push
or
cmp
mov
and
shrl
pop
or
mov
aaa
int3
loope
mov
cmp
in
nop
jp
or
pop
in
mov
sbbl
and
filds
inc
jo
inc
notb
daa
dec
repz
xor
push
push
jg
shll
in
paddb
dec
lock
les
cmp
fucom
xchg
push
pop
push
mov
jo
jecxz
out
je
leave
lds
mov
sbbb
mov
xor
push
adc
sbb
jo
push
jb
data16
mov
lods
xor
sub
repnz
push
insb
jb
imul
ret
mov
push
pop
xchg
ja
adc
aad
dec
inc
adc
cmp
mov
inc
push
repz
adc
sbb
stos
int3
pop
arpl
push
add
mov
pop
inc
inc
sbb
cwtl
repnz
inc
iret
call
repz
xor
xchg
test
cmp
jl
and
jle
mov
mov
push
sub
in
push
mov
mov
in
dec
xchg
cltd
add
lea
lret
pushl
dec
rolb
jl
push
push
mov
adc
dec
mov
sub
push
or
xor
ret
mov
xor
repnz
fisubl
cmpsb
xor
jl
ljmp
add
mov
test
ja
std
or
mov
aam
adc
fwait
mov
and
push
cli
mov
in
subb
popa
icebp
ret
mov
cmp
sbb
sub
and
pusha
enter
push
xchg
mov
subl
inc
dec
pop
sbb
xchg
add
pop
sbb
lods
xchg
mov
cmpsl
sub
adc
or
or
test
mov
scas
add
inc
jns
sub
jb
mov
ljmp
add
xchg
cmp
pop
sarb
int
aad
add
out
inc
sub
add
loopne
stos
cmp
bound
adc
fcmovb
jne
imulb
jno
dec
lret
cld
mov
test
xchg
add
jae
xchg
mov
mov
and
mov
ret
scas
fldcw
or
jge
push
mov
mov
xchg
dec
clc
outsb
rolb
sub
cmp
sbb
jle
cmpsb
xlat
jo
xor
stos
pop
hlt
lods
fidivs
icebp
fbstp
pop
icebp
test
stc
cs
push
faddp
dec
nop
add
mov
push
ss
xchg
imul
insb
sub
dec
out
xor
mov
or
mov
jnp
movsb
ret
fxch
icebp
divb
cmp
aam
and
repz
lret
add
sbb
iret
nop
lcall
leave
daa
std
sbb
mov
mov
mov
pop
arpl
stc
pop
push
iret
xor
dec
mov
test
sti
insl
push
xchg
lahf
pop
cs
test
adc
cmpsb
sub
inc
into
push
pop
cld
cmp
cltd
pop
inc
push
sbbb
xchg
pop
fnstenv
sbb
mov
adc
test
loopne
sbb
fimuls
iret
mov
pop
iret
data16
pop
cld
out
lahf
push
mov
xchg
jo
jge
add
lods
test
push
in
sub
mull
mov
ret
loop
jl
out
lret
daa
popf
jns
push
inc
test
and
add
fs
fwait
mov
leave
je
sub
inc
icebp
rol
sub
xor
int3
mulb
stos
popf
cmovl
inc
mov
sbb
mov
gs
shlb
lahf
inc
jecxz
and
lds
xor
pop
stc
add
jbe
call
pop
mov
mov
call
xor
push
xlat
test
mov
in
cmp
xchg
cmpsb
out
and
aad
in
jle
rolb
sbb
aam
pop
sbb
test
fdivs
jl
fdivr
call
adcb
aad
jbe
xor
inc
add
pop
pop
or
ss
jecxz
daa
fcoms
add
stc
push
pushf
mul
or
xor
pop
pusha
push
imul
rol
xchg
push
cmpsl
stos
and
cs
aad
popa
out
test
push
scas
sub
insb
lods
mov
js
xlat
xchg
shlb
repz
shl
cmp
mov
ret
lcall
sbb
cld
sub
push
insb
jb
clc
mov
xchg
rol
or
and
push
clc
cwtl
push
arpl
imul
repnz
adc
push
mov
test
cmpsl
test
inc
ja
lock
mov
sbb
mov
data16
lock
sbb
jp
test
mov
sub
mov
or
daa
mov
lcall
fsubrp
xchg
das
in
rol
adcb
sub
leave
movsl
xchg
dec
and
mov
fists
pop
push
cmp
popa
and
sahf
cmp
int3
scas
shlb
cmpsl
mov
rorb
js
push
inc
inc
pop
mov
jp
test
xor
cli
into
in
xor
push
std
cmp
out
mov
and
insl
dec
jg
pop
ret
xchg
mov
js
lock
stc
sub
clc
sub
xor
stos
mov
dec
jg
cmc
mov
je
or
daa
adc
pop
and
inc
push
xchg
jbe
test
fdivs
mov
xor
sbb
mov
cmc
lods
sub
jb
movsb
or
cmpsl
jmp
cld
and
aam
insw
pusha
jae
inc
and
mov
push
mov
les
out
dec
mov
and
xchg
subl
lods
sbb
loopne
pop
mov
sub
pop
pop
xlat
xchg
lcall
addr16
sarb
out
push
nop
pop
mov
imul
daa
shr
lcall
cmp
mov
pop
lahf
imul
or
sub
xor
fnstcw
div
mov
out
cmpsb
leave
dec
mov
add
inc
call
cli
fiaddl
push
xchg
mov
call
xlat
out
add
jnp
mov
xor
es
sbb
add
adc
cmc
pop
sbb
test
call
adc
jg
shlb
fisubl
xor
ljmp
cld
jg
js
inc
hlt
out
jle
in
and
iret
inc
xchg
jnp
jo
cmc
lds
xchg
and
pop
cmp
popa
jno
gs
enter
xor
mov
loope
psubusb
popf
into
mov
xor
sbb
push
imul
and
push
sub
dec
arpl
orb
jge
sbb
inc
test
cmpsl
out
movd
xor
sbb
xchg
testl
push
add
leave
xchg
inc
bound
jge
push
pusha
std
cli
sbb
mov
jecxz
pop
mov
sub
or
jmp
lret
lcall
pop
sti
movl
jmp
movsb
inc
aam
imul
mov
scas
dec
sbb
inc
imul
cmp
mov
or
mov
fcomip
pop
sub
fsubl
daa
ds
sahf
imul
hlt
imul
add
leave
call
in
stos
in
fwait
aad
push
subb
inc
sarl
adc
mov
dec
fistpll
mov
repz
mov
add
test
and
push
cmp
mov
nop
scas
inc
arpl
mov
push
jp
and
or
or
jecxz
inc
cli
or
lods
mov
fidivrl
inc
mov
adc
sbb
jmp
mov
inc
mov
pushw
add
adc
aas
daa
add
mov
or
jne
arpl
fisttpll
mov
lahf
dec
mov
int3
in
cwtl
xchg
xor
xor
dec
push
pop
stc
out
sahf
addb
fsubs
jno
add
ss
mov
fisttps
loope
or
aaa
mov
iret
jp
sub
les
aad
xor
fdivrs
jns
shlb
pusha
movsb
sub
sarl
loop
in
popa
pop
mov
push
push
push
imul
jecxz
sbb
outsl
adc
jecxz
push
aaa
push
xor
push
push
ja
add
aad
xchg
sub
stos
lods
add
push
lahf
loop
add
fistl
push
in
push
cli
out
inc
sub
popa
pop
sub
push
mov
insl
cmp
adc
addr16
sub
xor
adc
stos
add
push
andl
in
add
fdiv
lds
call
fisttps
fcmovne
fldt
xor
scas
aam
arpl
jle
xchg
jne
aas
je
jne
sti
add
cmp
dec
inc
lods
mov
aaa
mov
cs
in
sahf
inc
and
jecxz
lahf
mov
mov
pop
fimuls
scas
out
fnstenv
cli
push
test
in
enter
mov
jp
sub
xchg
mov
add
movsl
shrb
adc
shlb
test
cmp
lea
int3
repnz
je
clc
lret
pushf
pop
rclb
xchg
or
xorl
pop
bound
cmp
insb
lahf
xorl
mov
or
fildll
jne
insb
cmp
adc
or
mov
pop
stc
imul
in
mov
and
cmpsl
rcrl
jp
jne
adc
xchg
jle
scas
outsb
jno
and
jae
insb
cmpsl
sub
pop
dec
sbb
loopne
inc
dec
fiaddl
jle
or
sub
fwait
pop
adc
daa
inc
push
dec
push
mov
lret
pop
push
enter
repnz
pop
test
push
cmp
into
add
js
les
movsb
mov
enter
jmp
mov
sahf
int
sbb
rcrl
or
fldl
out
leave
mov
lods
xchg
cmp
inc
add
add
mov
cltd
ja
xchg
xchg
lods
jns
mov
stc
bound
pop
leave
aas
push
and
adc
rclb
mov
lods
mov
in
sahf
in
cmpsl
jge
fldl
dec
sbb
repz
mov
out
outsb
fdivs
jb
jp
adc
xlat
pop
cmp
cld
decl
int
int3
outsb
jno
mov
jno
aaa
in
and
ret
loope
popa
add
pop
ljmp
jg
mov
pop
mov
sbb
cltd
incb
cmp
repz
inc
stos
rorl
pop
scas
or
test
mov
sahf
jg
mov
es
popf
mov
mov
in
fwait
stc
sarl
scas
dec
xchg
sahf
mov
jmp
rcrl
lahf
xor
push
xchg
add
lods
push
lea
sbb
jo
fnstsw
jno
mov
inc
jl
mov
add
cltd
or
fildl
arpl
mov
jbe
leave
xchg
and
std
mov
xchg
addl
aaa
lock
xchg
imul
inc
lods
lahf
jo
je
pusha
int
test
push
testb
mov
xchg
mov
mov
mov
jmp
out
sub
pop
inc
or
mov
fs
adcl
lret
int3
xchg
and
add
xor
scas
outsb
data16
jae
or
outsl
js
dec
push
cmp
aas
cs
or
es
sbb
jmp
mov
lcall
hlt
stos
pop
test
xor
jns
lods
aaa
push
push
push
push
xchg
ret
push
popa
pop
push
addb
add
lods
adc
ret
dec
movsb
push
ljmp
mov
inc
mov
adcb
repz
stos
sub
inc
imul
fmulp
outsl
inc
and
cwtl
scas
xor
and
lret
faddl
cwtl
dec
mov
sub
fnstsw
aaa
push
xchg
scas
test
sub
push
cld
imul
push
in
inc
dec
mov
in
mov
cs
repnz
insl
jnp
or
ret
ja
les
push
mov
lret
lods
push
push
aaa
hlt
iret
test
lds
iret
enter
or
lock
shl
stos
or
pushl
mov
xor
mov
fistps
lahf
mov
jge
fisttpll
popw
ljmp
inc
xchg
mov
adc
cmp
clc
bound
stos
xchg
iret
pslld
xchg
pop
mov
add
xchg
jg
ljmp
inc
add
imul
push
rcrb
mov
pop
mov
mov
mov
es
jbe
sub
aam
lret
insb
subb
dec
loop
mov
xor
js
push
dec
mov
xor
cmpsb
inc
add
repnz
loope
xor
adc
incb
adc
ljmp
jmp
mov
movsb
cmp
insl
out
push
jecxz
ficomps
ljmp
jo
iret
pop
hlt
xor
test
mov
les
sbb
cmpsb
sub
aad
ret
movsl
and
fsubs
jne
testb
sbb
dec
mov
lock
adc
cli
mov
xchg
lock
xchg
dec
daa
ret
push
mov
gs
cmp
in
xor
outsb
add
pushf
lds
pop
mov
sbb
mov
adc
cmc
mov
test
mov
sub
xor
adc
mov
add
mov
mov
inc
xchg
mov
int3
popf
dec
push
vpaddsw
xlat
adc
xor
cmp
push
ret
aas
sub
and
imul
mov
xor
xchg
cmp
jae
loop
stos
xor
inc
mov
cltd
push
fs
push
xorl
test
enter
arpl
jmp
dec
add
add
pop
and
mov
frstor
scas
adc
lods
lods
jno
adc
test
cmc
imul
jns
xlat
lea
mulb
js
out
lds
in
cmc
je
aaa
std
orb
inc
lods
and
mov
cmc
mov
or
out
mov
mov
outsl
rcrb
enter
popa
pop
jmp
ret
stos
add
lret
fnstcw
push
in
in
push
jp
iret
sahf
inc
pop
cmp
mov
aaa
pushf
notb
inc
addb
push
cmp
iret
and
das
int
xor
subl
loopne
out
lods
lret
sbb
lock
mov
and
push
and
jae
mov
lds
loop
or
mov
pop
aas
or
push
mov
idiv
pop
push
lock
stc
les
jecxz
sub
mov
sbbl
push
cmp
dec
add
testb
loope
jmp
pop
dec
pop
movsb
loop
push
or
pop
xchg
leave
nop
outsl
sub
js
xor
push
pop
xchg
iret
pop
adc
fwait
ja
push
xchg
out
je
popa
leave
cmc
jne
mov
jbe
jae
push
mov
xchg
cmp
test
jecxz
xorb
shr
and
add
loope
out
lods
and
fistps
loopne
inc
addl
push
mov
aaa
sahf
mov
mov
pusha
or
add
push
testb
test
ja
jmp
mov
adc
jmp
push
call
sbb
rcrl
pop
daa
orl
sbb
in
adc
mov
and
mov
gs
sub
mov
adc
jae
push
jl
dec
jl
pop
or
pop
sub
mov
xchg
movsl
xor
or
repz
sub
mov
and
ja
enter
dec
xor
js
mulb
xorb
js
mov
mov
gs
mov
das
lcall
cmp
hlt
fisubs
movsb
adc
ljmp
pop
outsb
and
inc
imul
jb
mov
jle
and
inc
popf
jae
mov
mov
and
sub
or
pop
cmp
clc
xchg
sbb
jnp
push
or
mov
fisubrl
sbb
push
mov
mov
adc
movsl
out
adc
lcall
pcmpeqb
inc
repz
add
in
pop
mov
andl
jle
cmpsb
or
push
sbb
cmp
orl
inc
pop
movsl
cmp
push
xor
xchg
cmc
stos
sar
mov
aaa
in
mov
or
inc
cs
sbb
sysexit
pop
movsl
cs
jle
mov
ss
bound
sub
cltd
pop
divb
imul
inc
lret
mov
add
pushf
arpl
pop
decb
ja
ret
scas
dec
ret
ficomps
mov
in
int
or
inc
hlt
jle
sub
sbb
mov
xor
rcl
xchg
nop
leave
and
aas
or
iret
ljmp
add
daa
mov
mov
inc
mov
mov
rcr
mov
add
mov
ss
enter
faddp
mov
push
xchg
sbb
xchg
xor
enter
xor
inc
fcomps
or
aaa
xchg
dec
dec
fdivrl
adc
mov
pop
inc
jmp
data16
xchg
mov
mov
cmpb
adc
mov
pop
bound
cmpb
adc
xorb
pop
fstpt
dec
fnstcw
mov
xchg
xchg
adc
push
test
arpl
or
pop
les
loop
test
sbb
inc
push
jg
aas
and
jl
jle
sub
outsb
scas
aas
mov
sbb
mov
clc
into
js
fidivrs
fwait
jg
xchg
push
jns
popa
cmp
fisubrs
mov
aad
cld
inc
cmp
dec
pop
rclb
jo
ja
mov
adc
repnz
push
push
xchg
pusha
xor
cltd
les
jmp
jno
mov
dec
int3
in
nop
sub
movsb
aas
insl
dec
pop
hlt
dec
push
xchg
mov
and
sub
js
cmpsl
icebp
jecxz
inc
push
inc
cmp
test
orl
and
std
jae
sub
cmp
add
push
xorl
and
push
mov
vdivsd
nop
ja
inc
ret
mov
lcall
out
push
adc
ljmp
inc
lcall
jmp
mov
push
bound
mov
lea
clc
cmp
ret
js
adc
andb
nop
mov
ljmp
cmpsb
movsb
cs
lods
in
jle
int3
lds
jno
add
add
out
out
cli
inc
das
or
movsl
daa
adc
sbb
fadd
flds
jns
popf
fwait
cmpl
not
leave
ds
mov
out
add
lods
push
push
xor
lods
sbb
in
dec
in
mov
loop
sahf
xchg
or
out
test
xor
mov
sub
lods
xor
and
sub
sahf
out
xchg
cmp
cmp
je
loope
xchg
add
mov
cmp
insb
xor
or
or
add
pop
stos
pop
jns
andl
and
cmp
push
lahf
adc
mov
mov
mov
push
pop
filds
call
xorl
jecxz
jl
xor
dec
xorl
jmp
push
add
xchg
pop
into
insb
mov
mov
outsb
jle
and
sbb
sub
cwtl
mov
add
lahf
lods
mov
sub
dec
out
aad
sahf
mov
call
daa
std
mov
vpmovsxwd
shrl
cmp
lret
outsb
insl
movsb
fcom
mov
push
shrl
adc
xor
outsl
shrl
add
pusha
push
lcall
mov
fsubl
adc
popf
xor
scas
fwait
lods
addr16
dec
fnstsw
insl
orl
sbb
movsb
sbb
xor
sbb
jge
outsl
or
loopne
fiaddl
sarl
mov
xchg
pop
ret
rclb
cmp
lcall
mov
mov
sbb
int
dec
mov
sub
arpl
les
lock
cwtl
rcrb
cmp
or
imul
loop
aad
mov
and
inc
push
dec
adcl
adc
mov
daa
mov
arpl
jbe
ljmp
mov
xor
out
adc
mov
aam
push
inc
incb
pop
addr16
cmp
ret
mov
xor
mov
lret
mov
jns
cmp
push
jb
pop
cwtl
enter
out
adc
test
sti
test
out
sub
xchg
cwtl
inc
add
pop
pushf
shll
cld
sub
sbb
arpl
outsl
lcall
or
out
xchg
sub
mov
and
or
jnp
jmp
jae
jae
xor
ret
inc
aam
sub
pand
out
jnp
sbb
cmp
mov
scas
cld
decl
mov
scas
mov
loop
fildl
dec
push
mov
sbb
shrb
pushf
insl
daa
inc
inc
sbb
scas
pop
sub
xlat
jl
dec
add
faddp
and
ucomiss
push
sbb
mov
popa
push
xor
nop
call
pusha
loop
sti
pop
arpl
inc
rorb
mov
stc
or
lcall
sahf
inc
pop
jbe
movsb
shl
cltd
loop
dec
cmpsb
xchg
or
test
lea
inc
inc
mov
lcall
out
pop
stc
mov
aam
sbb
cmc
mov
jp
data16
inc
mov
dec
mov
int3
rcll
mov
mov
out
negl
rclb
aam
je
push
adc
mov
inc
lock
add
ret
fwait
mov
pop
add
jo
or
push
movsl
lret
lock
jae
cmpsb
sub
ret
int
push
ja
xchg
int
sub
add
xor
pushf
ror
ljmp
jo
test
rcrl
mov
lret
es
mov
or
dec
adc
jne
lret
sar
in
cld
das
and
jns
repz
pop
insl
inc
jne
sbb
mov
shl
gs
aad
inc
jo
xchg
pusha
stos
clc
aas
or
popf
add
pop
sbb
jp
add
popf
jle
jl
sub
movsl
int3
adc
jecxz
cmpsl
lret
out
leave
mov
fbstp
add
jno
mov
clc
lahf
scas
movsb
orl
movsl
inc
push
mov
lds
jl
adc
mov
sub
in
fidivrl
lock
mov
and
xor
in
fstl
fs
and
jle
outsb
pop
stos
dec
es
add
push
mov
mov
int
and
ret
sbb
add
dec
inc
xorl
pushf
inc
dec
aas
data16
pop
pop
xchg
or
dec
xchg
shrb
aad
jb
dec
rcrb
dec
sub
in
lods
nop
int3
cmp
xlat
and
jne
or
outsl
sub
sub
cmpsb
cmc
cmp
and
iret
sbb
mov
cli
fwait
xor
ljmp
ja
mov
mov
insb
inc
out
push
pop
negb
mov
jae
lea
or
pop
out
test
fs
rorl
cmp
ss
add
xor
cmp
jecxz
or
into
arpl
adc
fwait
mov
pop
lods
push
or
pop
imul
faddl
lea
test
aaa
rcr
mov
sub
nop
popa
aam
dec
cmp
mov
mov
jns
jp
insb
stos
mov
pop
out
mov
push
testl
jmp
out
adc
push
jg
nop
dec
jge
in
gs
test
inc
mov
xlat
push
xchg
dec
fmul
pop
mov
jmp
sbbl
ja
push
popf
mov
jp
pop
pop
out
xchg
jecxz
push
lahf
movb
popa
push
lds
std
add
sub
notl
out
clc
mov
push
hlt
jge
int3
jne
in
cmp
jl
add
test
rol
ljmp
loopne
es
cld
aad
lret
in
cmp
imul
xor
jne
lcall
push
es
inc
mov
mull
in
outsb
and
outsl
fdivrl
xor
mov
clc
mov
stc
dec
mov
stos
ljmp
jle
push
pop
jns
xor
sub
sbb
repz
sbb
jae
lcall
cmp
xchg
and
mov
cwtl
stos
mov
jecxz
jl
inc
inc
mov
sbb
sti
jns
aam
jo
lods
loop
add
jnp
int3
jecxz
cmpsl
mov
aad
enter
xchg
dec
test
xor
pusha
pusha
add
mov
xchg
sbb
mov
loope
xchg
mov
push
aad
push
cmpsl
xchg
adc
add
add
sbb
dec
mov
push
movzwl
adc
test
adc
xchg
mov
mov
scas
inc
jo
dec
mov
int3
imul
addr16
stos
test
inc
movsl
pop
push
xchg
add
mov
test
fwait
aas
negb
shlb
in
mov
adc
pop
mov
push
notl
je
jle
jle
inc
jg
ljmp
mov
jg
fcom
repnz
pop
lret
mov
rorl
fdivl
xchg
mov
icebp
xchg
stos
je
sti
lahf
xchg
mov
sbb
fimull
loop
idiv
and
push
adc
dec
ss
lock
aam
roll
jae
xchg
inc
std
int
xchg
jle
stos
sub
add
notb
push
lods
push
or
insb
xor
and
inc
mov
lea
insl
adc
push
dec
jns
fs
push
mov
xlat
or
frstor
decl
mov
push
lods
leave
xchg
or
adc
fmuls
pop
roll
out
add
in
dec
jb
add
adcl
repz
jo
jp
or
cmp
inc
xchg
call
andl
addr16
mov
cmp
iret
out
dec
or
pop
jmp
push
hlt
cmp
mov
inc
pop
lahf
adc
push
mov
insl
es
popf
dec
push
shll
adc
mov
sbb
mov
adc
popa
xor
popa
push
arpl
pop
cmpl
jecxz
cltd
mov
mov
mov
insl
lock
daa
ret
add
add
pop
sub
add
scas
push
repnz
pop
xchg
or
insb
mov
dec
nop
jbe
xlat
or
xchg
dec
sbb
xor
ret
xor
incl
or
push
test
mov
pop
icebp
loope
mov
xchg
iret
and
xor
adc
xchg
loopne
mov
je
in
xchg
cmp
fisubs
lret
adc
push
add
xor
call
xor
lret
xchg
jne
adc
mov
daa
mov
push
pusha
in
mov
aaa
mov
inc
inc
mov
xchg
adc
push
leave
jns
inc
out
cmp
or
addr16
les
bnd
mov
cmp
jno
mov
sbb
test
adc
adc
fmull
pop
push
adc
inc
cmpsl
push
inc
adc
ljmp
pop
cmp
pcmpgtb
insl
js
inc
adc
mov
add
lret
outsl
mov
mov
arpl
fwait
gs
scas
jecxz
dec
add
push
mov
sbb
popf
mov
pop
sti
fnstsw
jns
sbb
ret
nop
mov
hlt
mov
jmp
and
mov
xor
jmp
inc
fsubrl
inc
pop
test
inc
fwait
cmp
test
pop
fs
push
add
push
repnz
cmp
mov
fnstenv
mov
cmp
jl
nop
pusha
inc
test
jnp
subb
rcrb
xchg
adc
pusha
mov
fcmovu
jge
jmp
cmp
jns
inc
cmpsb
aaa
pop
sub
xchg
stos
fucomp
push
xchg
pop
or
mov
aaa
jne
fsubs
mov
or
arpl
and
aas
aas
add
mov
dec
add
sbb
push
imul
sub
and
lcall
pop
es
jo
inc
movl
mov
hlt
cmp
cmpb
push
mov
jg
ss
in
sub
pop
nop
push
jnp
lods
or
fs
scas
insb
in
scas
clc
mov
clc
nop
and
loop
test
insl
mov
xchg
lret
hlt
and
jge
test
mov
sub
outsl
mov
psubd
fdivs
jg
xlat
jecxz
out
loopne
in
xchg
cltd
out
lea
sub
cmp
clc
xor
sar
add
js
or
in
push
sahf
adc
imulb
pop
dec
sbb
arpl
fstpl
dec
loopne
test
add
gs
mov
mov
push
xchg
call
movsl
mov
addr16
sbb
mov
les
sub
jmp
ret
push
mov
jo
mov
std
adc
mov
jg
jmp
fnstcw
or
sahf
dec
iret
mov
dec
movsl
push
xchg
pusha
test
xchg
cmc
sub
push
sbb
inc
enter
idivl
xor
sbb
cmp
ret
imul
pop
fs
mov
push
mov
adc
shl
cli
push
in
add
push
push
mov
jne
mov
psllw
dec
mov
push
pop
ret
rcll
push
xchg
cmp
mov
enter
mov
mov
adc
lret
iret
and
test
dec
stos
pop
aas
sbb
add
mov
fiadds
push
movsl
andl
push
jmp
mov
je
xor
xor
pop
daa
jnp
loope
jns
test
out
sbb
mov
sub
jbe
popf
jo
sub
mov
jne
cmp
push
sub
push
and
fwait
mov
dec
aaa
daa
rolb
stos
in
dec
pushf
push
in
dec
adc
fbstp
mov
and
and
fbld
pop
sub
rcrb
mov
cmpsl
sahf
push
xor
pop
push
mov
cmp
push
xchg
xchg
out
aam
sub
mov
fstps
dec
mov
jno
hlt
repnz
ds
xor
mov
lcall
aaa
mov
sbb
lds
push
cmp
adc
pop
xor
jle
scas
xchg
jg
mov
and
pop
jns
mov
ljmp
imul
jl
andl
push
test
lods
insb
popa
aad
cld
lods
and
mov
adc
mov
es
fsubl
orl
in
add
mov
adc
or
enter
std
sarb
jbe
in
scas
sub
out
shrl
sub
and
jbe
int
test
add
xor
dec
mov
xchg
adc
adc
call
inc
add
call
outsb
cmp
mov
sbbl
xor
push
loop
mov
pop
outsl
fstl
jg
cmp
jge
inc
fsubl
out
mov
repz
iret
addr16
arpl
test
fsubl
scas
inc
imul
lret
push
jmp
ds
mov
shlb
jno
dec
mov
mov
lahf
pop
das
sbb
ffreep
test
iret
ret
mov
fisttpll
cs
aaa
std
pop
sti
bound
mov
sarl
movsb
sahf
std
mov
add
repnz
addr16
mov
orl
and
jae
bnd
daa
xchg
jnp
sbb
cli
mov
lcall
mov
adc
imull
add
adc
into
inc
std
sbb
mov
imul
incb
mov
mov
cli
pop
jne
in
xor
fwait
in
data16
lret
jo
jecxz
adc
adcl
lret
mov
xchg
flds
xor
and
add
sbb
pop
push
movsl
cmp
je
ret
icebp
mov
add
outsl
lods
into
mov
insb
jo
in
xchg
push
jp
adc
jmp
jns
fwait
push
aaa
bt
and
lcall
nop
or
ret
push
push
push
dec
fldenv
sbbb
sub
push
sbb
xchg
fiaddl
mov
add
decb
adc
mov
add
pop
mov
fwait
int3
shlb
push
fidivrl
pop
ret
loope
mov
jo
jae
inc
cs
in
mov
push
scas
mov
lea
leave
out
pop
or
xchg
xchg
mov
js
pop
stc
mov
ror
inc
into
pop
xor
xor
rolb
mov
mov
scas
movsl
maskmovq
divl
xchg
pop
in
ljmp
mov
lock
das
add
iret
scas
imul
cmp
pop
fld
mov
ljmp
lock
les
sub
pop
xchg
inc
int3
add
bound
mov
mov
lret
fldenv
xor
add
mov
inc
or
popa
dec
mov
mov
mov
inc
mov
in
mov
loop
add
aam
rolb
adc
test
loope
jecxz
inc
rclb
sahf
insb
mov
data16
add
test
adc
in
pop
fwait
mov
dec
cwtl
adc
js
les
or
push
mov
xor
xchg
and
out
add
add
addb
mov
xlat
xchg
test
mov
xchg
mov
iret
mov
mov
gs
cli
cmp
mov
lret
add
jge
pop
imul
adc
add
mov
lock
adc
sbb
mov
dec
sub
mov
push
jg
mov
pop
bswap
pop
das
push
lahf
in
faddl
pusha
cmp
jmp
aas
jg
rolb
mov
jno
dec
push
jno
jne
sarl
jns
ret
subl
out
and
sbb
int
xor
fs
push
adcl
test
aas
cli
xor
enter
and
mov
push
sti
lock
into
cmc
lcall
cld
lock
out
sbb
cld
lret
sbb
pusha
jb
ja
xor
pop
cwtl
movsl
psubq
icebp
xchg
dec
aam
mov
lahf
dec
outsb
jnp
pop
bound
cld
cmp
lods
xor
cmp
insb
aaa
sar
les
and
arpl
movsl
or
dec
cmp
mov
xchg
aas
add
push
jg
inc
jmp
jne
andb
in
nop
jl
mov
jle
or
push
pop
ds
clc
cltd
jecxz
mov
xchg
inc
pop
sbb
pushf
scas
divl
adc
push
lock
dec
push
pop
gs
mov
mov
cmc
ret
addr16
ret
mov
in
sbb
xchg
xchg
xor
aam
dec
leave
enter
ds
xor
lods
rcrb
inc
sbb
add
mov
cmpsl
enter
jecxz
mov
bound
cmp
lods
jo
idiv
adc
js
out
jmp
gs
dec
popl
xchg
pop
es
gs
xor
je
in
push
cs
dec
out
or
pushf
push
fs
add
pop
gs
loop
das
lea
ret
outsl
adc
mov
and
iret
sbb
jno
inc
fwait
and
sub
adc
sbb
and
inc
movsb
xchg
jns
stc
ret
insl
sub
pop
dec
add
cmp
mov
in
jne
push
jp
pop
pop
and
pop
rcrl
xchg
lahf
shrl
std
insb
add
mov
rcl
sbb
outsl
js
sarl
xchg
pop
ret
fldenv
sub
lcall
out
cmp
xchg
ljmp
jbe
int3
lock
push
sbb
stos
mov
sbb
xchg
imul
ss
frstor
cmc
fiadds
cltd
test
in
mov
fs
movsl
test
xorb
lods
mov
scas
int
sbb
push
out
xor
pop
cmp
cltd
dec
sti
stos
sub
iret
push
pop
pop
cltd
cmpsl
sub
xor
flds
mov
scas
cld
imul
fcomi
pop
icebp
xchg
mov
sbb
or
flds
pop
push
shlb
xchg
jb
dec
pop
pop
pop
push
pop
incl
fdivrl
sbb
js
xor
adc
rcrb
test
cmp
xlat
xor
dec
mov
ret
inc
mov
and
leave
pop
stos
punpcklwd
lcall
stc
mov
cmpsl
clc
jnp
loope
jns
arpl
mov
jnp
pop
daa
gs
ret
aad
das
push
sbb
rcr
ljmp
fmul
out
add
stos
xor
cmp
pop
or
pop
data16
pop
mov
in
fs
adc
xlat
mov
mov
pop
aad
jmp
mov
sub
xchg
inc
andb
or
sub
xchg
sub
dec
dec
xor
and
pop
mull
sub
mov
xor
add
adc
mov
mov
mov
push
inc
imul
dec
pop
mov
or
mov
or
lods
xchg
pushf
nop
nop
in
cmp
addr16
stos
repz
add
inc
or
in
mov
add
push
mov
mov
loope
fisubs
jne
mov
pop
int3
and
movsl
inc
filds
dec
in
mov
xor
push
push
inc
sub
lea
or
int
adc
cli
inc
jb
xchg
es
adc
or
fld
clc
and
jo
call
call
test
jecxz
push
inc
out
test
xchg
cli
jbe
adc
dec
xchg
cmp
sub
cltd
dec
fcomp
not
sahf
js
adc
ss
out
pusha
jle
in
cli
rcrl
fldcw
and
xlat
inc
les
ret
scas
add
xor
cmp
mov
scas
sbb
dec
dec
mov
cmpl
add
xchg
shrl
pusha
mov
in
cli
jecxz
leave
mov
xchg
out
enter
add
sub
lds
and
fsubrs
stos
jae
mov
mov
loop
push
xor
test
iret
push
adc
aad
adc
dec
ja
dec
pop
sbb
push
aad
push
loopne
leave
in
mov
leave
or
imul
ud0
mull
mov
push
aam
lods
hlt
and
aas
sbb
sbb
pmulhuw
lock
or
cmp
pop
stos
daa
xor
jb
or
sub
lea
out
out
filds
inc
mov
pop
mov
hlt
lds
mov
test
jge
push
mov
xor
in
lea
in
andl
or
popa
shll
sub
pop
test
and
cmpsb
cmp
add
lret
jae
enter
mov
mov
and
sub
fbld
cmpsl
push
es
sub
xor
push
cwtl
inc
rcrb
inc
inc
push
test
jl
fidivrs
cmp
rclb
inc
push
fistl
sbb
mov
mov
jae
mov
mov
or
xor
jne
xchg
fldenv
leave
sbb
dec
lea
cwtl
mov
cmp
pop
push
add
int
xchg
adc
cwtl
mov
sbb
fwait
shr
es
xlat
push
dec
add
jge
push
ja
popa
mov
cltd
stos
leave
adc
add
daa
ss
or
and
out
xor
add
jnp
or
xchg
loopne
cmp
mov
mov
into
mov
lock
in
lods
fistl
xor
push
mov
mov
sbb
push
shll
call
ja
adc
mull
adcl
or
sbb
xchg
mov
rorl
mov
popf
xchg
call
outsb
xor
xchg
push
into
mov
xbegin
push
ret
add
subl
pop
push
xchg
xchg
jns
test
jae
and
adcb
sbb
fs
out
mov
stc
sub
scas
xor
jbe
and
mov
jmp
adc
out
cmpsl
mov
push
daa
je
mov
shlb
ja
aaa
add
pusha
pop
adcl
insl
sbb
insl
cs
ds
sti
dec
pushf
jb
lahf
dec
pop
pushf
push
stos
stc
add
sub
mov
dec
sbb
pop
insb
test
cmc
dec
xchg
pop
inc
insl
sbbl
aaa
mov
imul
xlat
jecxz
add
add
stc
mov
and
insb
into
push
inc
aam
aad
mov
daa
lods
iret
sub
iret
jbe
mov
nop
sub
pop
dec
mov
mov
dec
lods
adc
repnz
fs
nop
div
ljmp
add
inc
jno
dec
xchg
pusha
mov
fnstsw
push
cmp
push
push
dec
xchg
jno
int3
push
sub
push
mov
mov
and
cmpl
xchg
enter
xchg
lret
in
and
ljmp
aam
scas
subl
fbld
inc
add
ret
adc
push
pop
imul
xor
and
dec
stos
ja
int
lock
push
adc
jo
pop
push
push
lcall
xor
push
xchg
iret
adc
or
call
mov
test
pop
xor
jmp
test
daa
cmc
cltd
xchg
mov
mov
sub
fisubl
jl
out
mov
mov
in
jo
pop
cli
jnp
outsl
add
leave
leave
js
pop
mov
ucomiss
jp
fmuls
mov
xchg
fists
insl
or
daa
mov
mov
sbb
cmp
stos
adc
imul
mov
mov
mov
pushf
stos
addr16
pop
imul
push
add
aad
jno
or
dec
push
enter
inc
mov
nop
xor
movsb
jmp
xlat
push
out
mov
sub
movsb
cmpxchg
pop
pop
cs
orb
jge
cltd
leave
arpl
jl
in
mov
dec
jmp
test
sub
push
sub
xor
hlt
push
cmc
xor
push
xchg
lcall
divb
xchg
lret
xchg
or
sbb
test
bound
jnp
inc
imul
lds
stc
mov
push
jo
mov
movsl
mov
out
add
scas
ja
sarb
lea
movsb
push
lcall
mov
mov
addr16
mov
lret
add
outsb
ds
lcall
shll
test
inc
cmp
pop
pusha
test
inc
lock
test
push
or
or
int3
fwait
lea
cld
lods
cmpsb
or
push
cmp
push
icebp
testb
mov
in
orl
add
sbb
fxam
lock
call
std
jno
mov
mov
popa
adc
pop
shll
mov
fwait
inc
sahf
or
in
mov
push
in
sub
pop
ss
fstp
orl
outsl
in
jg
shr
pusha
test
outsb
lahf
fistl
xchg
add
push
push
cmpsl
jmp
mov
arpl
xor
shr
sbb
ds
mov
rorl
add
negl
in
pop
pop
xor
xchg
pop
lds
pop
push
les
in
lock
mov
loop
cmpsb
je
push
mov
subl
int
sbb
movsb
lea
cmp
enter
cwtl
mov
and
mov
aam
data16
sub
in
mov
jo
mov
jg
es
shrb
sbb
sahf
push
adc
mov
mov
inc
shll
dec
push
daa
jne
xor
dec
or
pushfw
push
aaa
in
push
rcrl
mov
sub
loop
cmp
subb
aam
aaa
or
in
mulb
addr16
dec
shlb
fistl
jg
ret
or
rcrl
sub
pop
cmpsb
xor
iret
in
and
cs
sbb
jp
push
imul
push
jge
in
jg
aas
in
lods
mov
xchg
bound
clc
rcl
mov
dec
xchg
aad
test
call
cltd
cmpb
sbb
dec
jecxz
je
aad
mov
jae
or
mov
arpl
sahf
dec
adc
pop
stc
cmpsb
rolb
xchg
cwtl
inc
out
adc
pop
pop
cmp
int
fucomi
dec
das
or
xor
inc
out
jl
xchg
in
test
cmp
into
in
into
jno
mov
ss
loope
arpl
push
pop
jno
sub
fstpl
jns
dec
add
mov
fwait
adc
adc
cmp
lock
push
lods
mov
roll
sub
lret
incl
pop
test
cld
adc
add
cmp
push
js
das
jmp
mov
push
adc
add
cs
pop
enter
outsl
fcmovu
aaa
dec
and
adc
mov
xor
sbb
dec
test
sbb
jge
into
cs
dec
not
jmp
inc
sbb
sbb
and
inc
mov
icebp
dec
dec
dec
in
add
roll
aad
add
sub
daa
dec
pop
add
xchg
insl
sub
or
or
clc
call
in
and
addl
and
std
subb
test
inc
js
into
adc
pop
or
mov
sub
imull
ret
lahf
fnsave
pop
inc
mov
xchg
mov
call
mov
aaa
cltd
sbb
clc
mov
scas
jg
shlb
in
insl
ja
in
fst
dec
aaa
jl
inc
dec
add
in
mov
data16
cltd
scas
scas
xchg
pop
and
push
test
add
mov
dec
sahf
push
add
mov
mov
jbe
pop
cwtl
popf
push
inc
dec
or
mov
aaa
std
xchg
lcall
pop
push
push
pop
cmp
and
addb
mov
test
mov
and
les
add
shl
aas
rcrl
fstpt
lret
mov
lock
mov
dec
jg
jmp
dec
xor
add
inc
mov
cs
adc
loopne
jmp
inc
sti
lea
inc
rorl
nop
pusha
xchg
test
mov
and
mov
ret
mov
sahf
jb,pt
scas
mov
inc
test
xchg
fsubrl
loop
mull
enter
push
inc
aas
mov
cltd
cli
sub
cmpsl
cmp
adc
and
cmp
mov
pop
push
clc
lret
data16
stc
and
xchg
repz
mov
jg
repz
inc
test
nop
fistpl
sub
mov
push
mov
js
mov
movsl
pop
pop
xchg
sbb
mov
adc
inc
ds
push
imul
or
les
ret
lds
stos
sub
aad
in
jp
push
jg
cmp
dec
incb
dec
xchg
fadd
test
repz
rclb
es
mov
lret
jno
cmc
mov
adc
cli
fcompl
adc
sbb
dec
xor
push
inc
sub
push
push
xchg
addl
ret
add
adc
cmp
fcomps
jno
or
xchg
pop
pop
cld
divb
push
test
push
pop
add
xchg
mov
dec
push
mov
pop
mov
ret
push
cmp
sti
out
inc
sub
cmp
xchg
mov
and
into
out
adc
ret
xor
pop
and
push
mov
sbb
aad
adc
add
test
mov
dec
sbb
mov
leave
cld
shl
xor
stos
mov
mov
stos
lret
xchg
jmp
aas
xor
adc
fldt
xor
out
xchg
pop
nop
and
cmp
aas
aas
jo
enter
scas
cmp
xorb
jg
xchg
sub
mov
ja
lods
scas
push
incb
ss
repnz
repnz
mov
test
dec
inc
sub
xchg
push
lret
jl
xchg
add
sbb
mov
mov
inc
sbb
and
dec
out
fwait
adc
rorl
cltd
inc
push
lock
push
push
andb
ja
pop
je
xor
add
dec
lret
dec
cmp
lock
enter
lcall
jmp
cmpsl
xchg
sbb
addr16
les
lea
ss
mov
cmp
cmpsl
jmp
clc
add
repnz
or
mov
mov
dec
into
inc
adcb
dec
cmp
test
push
scas
aam
test
xchg
das
out
iret
addr16
into
add
add
jno
je
pop
xor
inc
sbb
pop
test
mov
setno
js
lcall
icebp
sub
sub
push
push
jmp
in
inc
out
mov
xor
cmp
dec
dec
xor
and
xor
and
pusha
lea
push
lods
and
pop
leave
inc
xor
sbb
fs
test
cmp
mov
jne
imul
jl
pop
sbb
idivl
sahf
rolb
shll
test
push
jmp
lock
sbb
push
jo
repnz
push
negl
out
rcll
pop
mov
push
call
jp
jo
jmp
es
and
scas
mov
xchg
and
call
xchg
mov
or
mov
fisubl
sti
sbbb
sbb
xor
mov
std
sbb
ret
div
idiv
mov
mov
testl
jecxz
jbe
es
sub
sub
lods
daa
jb,pt
mov
jl
int
cli
ror
lea
jbe
movsb
test
jns
iret
sbb
stos
jmp
dec
cmc
push
mov
inc
add
cmp
cmp
pushl
pusha
add
lcall
insb
idivb
addb
add
push
fnstsw
dec
sahf
shll
add
fs
cmp
ss
dec
pop
mov
xchg
pop
lock
in
xchg
hlt
std
xchg
cwtl
mov
dec
aaa
xchg
lock
test
popf
ljmp
enter
into
dec
dec
push
xchg
in
pop
cmpsb
xchg
cmpsb
inc
insl
cmp
push
jecxz
jg
xor
aas
fdivrl
cmpl
push
pushf
or
sbb
fs
xor
mov
bound
mov
add
pop
push
ret
repz
mov
jl
mov
pusha
mov
sbb
loop
into
jecxz
gs
mov
mov
dec
jl
pop
jno
pop
lret
and
dec
adc
gs
pop
or
addb
add
int3
xorl
subl
rsqrtps
pop
or
push
rorb
jle
add
add
rolb
rcll
movsl
in
xchg
and
scas
xor
scas
test
arpl
xor
mov
xor
out
cld
jae
rcl
or
test
rcrl
lods
add
ljmp
mull
cwtl
aam
sbb
pop
add
xchg
pop
jmp
xchg
rorl
cmp
pop
int3
pop
stos
jle
add
lock
adcl
hlt
push
in
jbe
fs
pop
lea
adc
or
xchg
pusha
mov
jno
mov
and
imul
inc
lcall
cmp
and
mov
inc
imul
add
outsb
mov
loop
lods
aaa
fidivrl
dec
mov
addb
in
add
jmp
mov
add
sub
mov
mov
loopne
add
pushf
cmpsl
or
shlb
daa
outsb
or
adc
bound
pop
inc
mov
mov
fwait
dec
lret
cwtl
push
in
arpl
or
lcall
test
cmc
and
push
hlt
xor
outsl
push
test
loope
call
arpl
lahf
fcompl
dec
xor
xor
int
addr16
sbbl
sbb
stos
jle
jnp
ja
xor
in
push
fcoms
push
or
addb
xchg
sbb
lds
jae
adc
jbe
xlat
mov
pop
divb
push
les
aad
inc
addb
inc
mov
add
sbb
lods
push
sub
js
pop
iret
add
div
rol
mov
add
shrb
aas
mov
xchg
add
cmp
inc
lods
jb
sti
fists
imul
push
cmpsb
dec
dec
add
loop
daa
lea
inc
int3
loope
lods
out
lahf
mov
push
mov
mov
inc
jo
or
movsl
fwait
insl
add
add
fldenv
or
and
mov
sti
clc
sbb
dec
push
mov
jno
enter
xchg
daa
insb
les
inc
inc
lods
gs
xchg
sahf
inc
jbe
in
add
xchg
cmc
mov
rcrb
out
inc
cmpsb
xor
fneni(8087
xchg
mov
sti
mov
cmp
out
add
int3
std
mov
adc
lods
popf
pop
mov
imul
xor
adc
adcb
push
in
shlb
mov
subl
xor
fisubrs
mov
mov
out
adc
mov
rcll
jge
jge
xor
enter
aad
aad
and
das
add
jbe
mov
xchg
jge
sti
mov
inc
in
add
outsl
lea
cli
sbbl
cmp
pop
pusha
nop
inc
inc
jecxz
sar
adc
mov
nop
jl
rorb
mov
pop
das
dec
js
and
jmp
rcrb
stos
lods
inc
test
movsb
push
mov
push
ja
xchg
or
pop
xor
mov
dec
pusha
bound
jnp
mov
or
daa
loope
mov
and
gs
movsb
aas
mov
test
test
dec
and
popa
jmp
inc
and
push
xchg
loop
mov
fs
out
sbb
out
mov
into
adc
clc
cmc
into
add
dec
fidivl
fidivrl
push
add
clc
or
std
or
xchg
sti
push
adc
rorl
sbb
inc
jmp
ret
mov
jns
aad
xchg
jno
sbb
pop
sub
pop
inc
call
je
adc
insb
pop
cmpsl
cmp
inc
aas
pop
dec
jns
popf
fdivrl
or
clc
lock
adc
aas
call
xchg
fbstp
hlt
int3
daa
scas
jno
adc
sbb
jg
cmpsl
xor
lods
dec
dec
dec
adc
popf
dec
dec
sarb
and
adc
imul
int3
rorb
mov
xor
fists
xor
fidivl
mov
jp
ret
or
push
lea
shlb
mov
mov
cmp
pop
mov
add
add
outsb
add
pop
shlb
mov
loope
jbe
scas
xor
pushf
in
adc
add
push
lahf
movsl
fnstcw
sbb
push
cmc
data16
das
jp
xor
xchg
cmp
icebp
dec
mov
or
push
imul
movsl
inc
inc
popf
mov
gs
cmpsl
stos
jg
cld
scas
pop
mov
lret
mov
cmp
loopne
enter
inc
fimuls
rcll
add
pop
jecxz
xor
jmp
int
pop
xor
imul
xchg
test
dec
sub
fdivp
clc
xchg
popa
rcll
inc
lret
jo
xchg
clc
add
mov
pushf
lahf
mov
xor
iret
imul
js
aam
jg
cmp
out
and
and
loope
shlb
out
orb
lea
aaa
sahf
add
movsb
xchg
in
cmp
dec
loop
mov
xor
sbb
add
jge
jmp
inc
pop
cmpsl
and
or
pop
push
js
pop
cli
jnp
popf
loopne
mov
insl
pop
sub
aad
loop
repz
call
int3
push
in
mov
mov
loop
xchg
add
sub
sarl
fnstenv
jne
pop
inc
mov
and
adc
sub
and
and
aas
mov
push
jns
jo
jne,pt
jb
scas
lret
xor
xchg
in
lret
stos
mov
push
or
in
jae
jp
scas
sbb
loop
in
dec
jne
pop
push
mov
add
test
mov
fldcw
dec
mov
ds
pop
in
popf
pmaxsw
adc
sub
daa
pop
push
outsb
fisttpll
ss
scas
or
pop
outsb
scas
mov
out
xchg
or
xchg
pop
cmc
clc
hlt
push
popf
in
scas
pop
sbbl
jmp
mov
cmp
and
inc
push
mov
jg
dec
push
repz
outsb
outsl
adc
mov
add
inc
mov
iret
lret
mov
test
cs
in
push
sbb
sbb
and
not
or
push
dec
pop
sub
out
jno
negb
lods
mov
xor
pusha
pop
push
pop
push
and
ljmp
outsb
das
pop
shll
data16
pop
pop
push
jl
cltd
cmp
mov
lods
inc
data16
push
push
outsl
dec
aas
sbb
inc
nop
add
mov
inc
mov
imul
fwait
int3
jg
mov
fists
sbb
jno
pop
xchg
add
sbbl
sahf
mov
lret
jle
mov
pop
fwait
push
lea
dec
popa
cmp
jg
jbe
pop
mov
inc
fdivs
xorl
and
loope
mov
clc
pop
or
cs
movsl
jmp
xlat
mov
or
pop
femms
pop
push
cmp
pop
dec
adc
test
or
dec
gs
adc
sub
sbb
xchg
bound
pop
xor
pop
mov
add
mov
mov
sbb
cmpsl
mov
xor
push
mov
mov
scas
fdiv
pop
fs
dec
jg
xchg
pop
insw
adc
sub
cli
dec
xchg
dec
out
cmpsb
loope
jns
sub
mov
pop
mov
js
sti
xor
mov
nop
out
out
loopne
add
dec
dec
pop
lahf
daa
daa
push
or
cmpsb
or
add
and
cld
in
or
sub
iret
sti
mov
into
pop
adc
sub
dec
mov
and
mov
das
xor
stc
inc
aaa
jns
dec
outsb
bound
push
ss
in
inc
mov
cmpl
out
out
ret
imul
fsubr
push
loop
inc
jmp
cmpsb
jbe
jbe
jle
push
ret
jl
xor
lahf
ret
ss
je
inc
mov
or
mov
cwtl
aad
inc
add
jg
or
dec
sbb
loope
mov
das
sbb
xchg
push
dec
dec
push
mov
jmp
pop
add
jb
pushf
lcall
xchg
pop
and
or
mov
mov
mov
fwait
cmc
pop
dec
sbb
cmp
dec
fcoml
inc
fildll
xor
addr16
out
push
pop
scas
ljmpw
cmp
lds
sbb
jne
loope
push
pop
mov
movsb
xor
adc
rol
insb
xor
enter
ret
inc
repnz
or
ret
lock
std
repz
incl
idivb
insl
xchg
and
add
or
mov
sbb
xchg
mov
out
rcrl
or
jp
mov
addr16
dec
das
jp
inc
or
pop
data16
or
mov
fucomi
push
fcomip
and
cmp
push
flds
fs
outsl
push
jge
pusha
das
sub
adc
inc
pop
enter
scas
scas
cmp
mov
aam
adc
insl
ljmp
data16
mov
movsl
lret
pop
stc
xor
xlat
pop
push
out
jo
jg
and
or
cmp
rolb
ljmp
mov
xchg
sbb
jo
repnz
shr
sub
sub
ret
jns
rcr
pushf
aaa
sbb
xchg
movsl
mov
cmp
xchg
orb
imul
mov
jbe
cmp
mov
xlat
push
hlt
pop
roll
mov
xor
cmp
sub
aaa
inc
pushf
jge
xchg
ret
pusha
fiaddl
inc
mov
push
jl
lods
rol
popa
bound
or
sub
aas
jo
sti
loop
sub
movsb
into
or
xchg
pop
adc
pop
dec
jge
mov
aam
push
pop
push
pop
pop
andb
test
clc
pop
adc
xchg
mov
sub
lods
sub
add
mov
test
push
inc
xchg
mov
test
xchg
dec
xlat
mov
and
je
aas
cwtl
fildl
adc
xchg
xchg
dec
pop
jg
lods
xchg
xchg
xlat
clc
or
rcrl
cmp
pushf
jae
dec
dec
mov
jb
andb
dec
ljmp
pop
mov
sub
pop
cltd
scas
int
mov
sbb
xor
les
int3
and
lcall
sub
adc
fdivrp
adc
fcomps
push
push
cs
inc
jno
in
pop
in
xor
andb
cmp
mov
loopne
push
cltd
das
sbb
xchg
push
jmp
cld
rcrl
xchg
push
sub
sbb
imul
mov
out
shlb
fdivrl
push
push
test
out
xchg
mov
dec
in
mov
dec
jno
test
mov
dec
js
mov
fisubs
cmp
or
xor
or
ds
push
and
mov
loop
mov
xchg
push
pop
clc
mov
icebp
sbb
movl
mov
addl
shrl
xchg
lock
add
pop
shlb
dec
xchg
int3
sbb
daa
lods
movhps
cmp
ret
jl
jns
out
mov
rorb
in
dec
popa
pop
xchg
pop
inc
add
add
mov
test
xchg
fwait
jnp
cwtl
in
stos
sub
xchg
sbbl
jbe
inc
or
xchg
and
mov
sbb
call
inc
mov
sub
into
fucomp
hlt
in
mov
or
push
inc
addl
jns
xchg
jnp
push
je
sub
repz
pop
inc
xchg
mov
les
outsl
inc
xor
cwtl
test
adc
test
mov
push
jno
xlat
or
jmp
xlat
sub
add
push
or
cmp
bound
js
sbb
or
in
out
adc
loope,pn
sub
ljmp
adc
mov
aad
and
popa
adc
dec
inc
hlt
imul
nop
lret
sub
push
test
lret
jmp
cmp
repz
xlat
inc
stos
das
jo
fadds
pop
cltd
stos
or
aam
sub
push
sub
in
lds
es
add
push
push
out
push
xor
aaa
cltd
out
inc
xlat
mov
lret
push
jbe
in
dec
xchg
push
dec
cmpsl
cmp
xor
pop
jmp
std
dec
out
out
sub
sub
sbb
jmp
xchg
lret
mov
sti
mov
jg
mov
mov
xchg
adc
test
jb,pn
pop
cmp
push
enter
fistl
cmpsl
and
jns
das
ret
pop
test
je
cmpsl
mov
mov
add
pop
xchg
ret
cmp
cmp
loop
lret
ja
cmpsl
movsb
iret
pop
stc
xchg
xchg
lods
imul
lret
pusha
adc
and
sbb
mov
outsb
mov
cmp
popa
xchg
inc
out
mov
scas
adc
sub
and
cmp
inc
jp
mov
rcrl
int3
lahf
inc
sbb
sub
shl
xor
mov
push
test
or
jmp
rsqrtps
add
cwtl
int
popa
push
leave
imul
es
aas
pop
add
enter
bound
sbb
or
or
lret
dec
mov
daa
pop
mov
imul
gs
cmp
sbb
in
testl
loopne
adc
lea
pop
or
popf
frstor
pop
or
pop
and
setp
mov
lcall
dec
push
outsl
push
pop
pushf
pop
test
ds
dec
mov
push
das
push
sub
adc
loop
sbb
aad
lods
outsb
mov
xlat
ja
insb
inc
xor
cmp
pop
add
shl
call
rcll
mov
pushf
mov
rcrb
enter
xor
pop
pop
aaa
mov
not
test
out
jge
ret
add
dec
out
out
pop
fcomps
sbb
jecxz
jo
stos
push
or
daa
fwait
arpl
jg
mov
push
into
jge
mov
cltd
cwtl
stos
decb
test
cmp
or
push
cmp
dec
std
add
cmp
pop
mov
lea
sbb
xchg
jae
js
or
inc
int3
pop
rep
push
test
pop
mov
xor
push
cld
adc
scas
or
out
pop
adc
xchg
loope
mov
ja
jnp
jmp
dec
jp
lods
lods
mov
mov
lret
add
mov
je
mov
fs
je
add
xlat
loop
pop
popf
lds
ret
add
sub
orb
mov
movsl
and
sbb
cmp
lcall
fsubrs
loope
mov
push
cmp
mov
push
jecxz
mov
loopne
push
or
mov
shlb
shl
xchg
mov
cwtl
scas
out
out
pop
int3
push
cwtl
push
faddl
ljmp
test
or
nop
cmp
in
movsl
pop
push
fldcw
sub
jle
pop
mov
push
xchg
insb
push
jg
push
dec
cwtl
outsl
xchg
adc
sub
lods
lahf
jbe
lret
pop
cli
aam
and
xchg
cmp
enter
in
mov
dec
movsb
ja
mov
fadds
rep
push
push
add
and
pop
adc
sub
mov
push
or
sahf
and
xchg
repz
sarl
mov
adc
lds
lds
dec
roll
popa
dec
inc
aaa
push
xchg
imul
mov
hlt
dec
icebp
xor
pop
push
cmp
and
outsb
or
inc
lret
fiadds
add
je
aas
lcall
adc
push
in
cmp
or
inc
in
in
stc
insb
rcrl
sub
xorb
mov
inc
sbb
leave
outsb
fisubs
pusha
cmpsl
loopne
lcall
js
add
cmpb
sbb
lret
mov
in
mov
mull
jge
xlat
aad
fimull
and
mov
lods
xchg
rorb
mov
jbe
call
sti
mov
cmc
stc
adc
jns
nop
es
shrl
jle
int3
inc
dec
jg
repz
shrl
push
lods
xor
fcomi
mov
adc
adc
mov
in
mov
lods
dec
pop
sub
cli
xor
out
or
or
in
stc
push
fistl
push
xor
add
gs
and
mov
cmp
stos
xor
xchg
loop
sbb
sbb
mov
fmuls
lcall
sbb
iret
in
out
pop
notl
mov
add
and
into
aam
sbb
movsl
cmp
xchg
or
jg
mov
add
out
and
jae
divb
incb
jecxz
jl
cmp
js
sbb
lods
and
adc
enter
mov
outsb
fldl
pop
movsl
pop
addb
pop
clc
push
ret
jne
ljmp
cmp
adc
lea
stc
and
push
test
xor
cld
shlb
daa
cmp
popf
sub
rcl
xchg
roll
jg
je
fs
aas
mov
push
dec
mov
adc
push
jo
or
jg
mov
pop
dec
addr16
cmc
mov
jae
loope
add
aas
mov
sub
shll
into
into
inc
xchg
pusha
pop
jg
mov
in
js
sarl
inc
stos
xchg
loopne
clc
cmp
or
je
scas
imul
pop
sub
push
dec
xor
cltd
or
cli
mov
pop
mov
xchg
mov
lcall
mov
inc
pop
push
xor
insb
mov
xchg
leave
in
mov
jns
addl
inc
je
adc
mov
test
sbb
cmp
ja
rorl
xchg
mov
cmpsl
jo
adc
movsl
cli
cmpl
and
mov
int
mov
sub
out
jo
adc
and
outsb
in
jmp
ja
jb
push
xor
outsb
xor
jns
xor
leave
movsl
xchg
mov
notl
jge
push
mov
and
or
gs
or
dec
repnz
ret
out
or
push
in
cld
aas
xor
shll
add
adc
push
and
adc
sub
in
jb
push
push
dec
sbb
rol
xor
push
mov
pop
hlt
adc
push
cltd
adc
rcl
push
dec
pop
dec
lods
fwait
pop
mov
jmp
jge
lds
lret
aas
adc
xchg
xchg
mov
mov
jmp
sbb
test
in
out
sbb
sbb
push
call
mov
lock
xchg
sti
mov
or
insl
fwait
inc
ret
xchg
flds
das
and
xchg
pop
int3
mov
repnz
mov
xor
orl
movsb
arpl
ficoms
and
in
notb
xchg
fcmovb
or
in
add
jecxz
sbb
rorl
out
xor
loop
fstl
pop
adc
lods
out
clc
mov
loope
je
test
cmp
aam
sahf
pop
sub
cli
xor
adc
pop
js
mov
inc
push
imul
into
fs
sbb
std
inc
popf
xor
or
mov
daa
das
lret
and
pop
xor
in
inc
lock
jle
pushl
jmp
mov
dec
jb
repnz
or
ljmp
int3
subl
std
mov
out
pop
pop
call
and
and
cmp
push
and
jae
movsl
ss
xor
push
imul
arpl
xor
sub
ret
jecxz
popf
adc
orl
int3
xor
jmp
jecxz
aas
and
lea
pushf
push
add
das
mov
sti
mov
push
fwait
nop
loop
push
and
call
dec
loop
cltd
movsb
inc
les
sub
push
dec
fisubs
mov
or
arpl
pop
jmp
adc
sub
sub
inc
push
mov
jle
push
rorb
push
cmpb
jle
dec
sub
insl
fdivrl
cmp
sub
jne
xchg
scas
mov
mov
les
mov
xorb
or
les
lea
mov
gs
mov
lds
iret
mov
cmp
push
cmp
adc
stos
xor
jae
fldenv
test
xchg
lds
std
xor
and
or
jecxz
and
adc
adc
repnz
sarb
inc
add
lahf
fidivrs
sbb
icebp
stos
daa
pop
fidivl
sub
or
push
add
inc
jb
mov
xchg
jne
jno
or
cltd
scas
sbb
mov
rcrl
xchg
int3
sub
ss
sbb
adc
pop
call
jne
xor
add
int
pop
push
ja
fdivl
cmp
sub
ljmp
sbb
adc
pop
dec
mov
xchg
push
dec
insb
sub
pop
in
add
aas
xchg
lcall
pop
divl
outsb
mov
das
frstor
push
xor
and
ds
xchg
mov
sbb
inc
xchg
mov
aam
pop
mov
cld
arpl
mov
jb
xchg
mov
jno
sub
inc
cmpsl
push
adc
pop
jns
in
mov
stos
cmpl
pop
insl
sbb
jmp
mov
dec
arpl
xor
movsb
jecxz
mov
aad
xchg
push
adc
imul
ret
inc
sub
push
imul
outsl
or
pop
mov
push
dec
cmp
push
pop
push
sbb
wrmsr
rolb
add
icebp
mov
mov
aaa
push
stos
sub
jne
cmpsl
push
fidivrl
in
ds
dec
fcompl
jnp
jmp
jecxz
add
mov
or
sub
loopne
andl
inc
inc
fsubl
sbb
jp
dec
adc
cld
jbe
imul
ja
dec
pushf
ss
aas
aad
mov
pop
into
aad
fnsave
out
in
xchg
leave
mov
adc
jne
dec
or
inc
fs
mov
xchg
imul
pop
mov
lods
sbb
push
xchg
fnsave
dec
cmpsb
sbb
mov
es
movsb
mov
daa
add
stos
mov
dec
or
push
mov
imul
in
or
sub
cmpl
mov
lahf
test
loope
outsl
popf
clc
sub
lahf
or
or
mov
cmpsl
sub
call
pushf
mov
lcall
jb
es
mov
cmp
add
and
into
movsb
fwait
pushf
sub
imul
inc
push
and
sbb
lahf
sub
sub
mov
orb
mov
mov
hlt
and
and
cmpsb
dec
mov
je
clc
int
pop
fs
or
inc
push
lds
fsubl
std
incb
jns
adc
push
push
adc
cmp
push
xchg
sub
pop
sub
mov
push
iret
and
sub
lret
push
dec
xor
stos
sarb
cmp
xchg
xchg
adc
nop
xchg
call
icebp
in
jl
sahf
xlat
vpandn
cmp
mov
or
ds
lahf
or
adc
lcall
jbe
outsl
mov
jns
in
xchg
fnstenv
fnsave
push
call
fisubs
cmp
mov
add
push
inc
xchg
or
psrlw
xchg
cmp
xor
into
mov
aas
out
rclb
in
push
pop
push
sbb
jg
fstp
aad
push
addl
xchg
aad
ret
lods
in
jb
mov
jbe
movsl
ficomps
not
aas
adc
jns
in
adc
ficomps
adc
cmp
out
sbb
lea
stos
icebp
xchg
xchg
dec
iret
cmp
add
mov
jg
call
and
loop
out
out
adc
inc
fstpl
inc
push
inc
push
cmc
rorl
rcrb
rcl
adc
pop
sar
arpl
addr16
sar
dec
pushf
lcall
popl
scas
fsubl
aaa
mov
bound
pop
pop
pop
or
fs
push
sti
aam
sbb
pop
mov
scas
gs
sub
cld
shrb
sub
repz
mov
mov
pop
pusha
dec
sti
daa
mov
dec
inc
pop
add
inc
and
fwait
jae
jg
int3
addr16
loope
xor
and
xor
mov
cmpsl
mull
scas
sbb
aad
pusha
mov
lock
enter
and
das
mov
cmp
fnstenv
in
in
lahf
mov
iret
sbb
cwtl
ds
mov
push
dec
inc
pop
daa
fnstcw
negl
sar
in
inc
cmp
ret
jmp
das
push
rcrb
sahf
inc
mov
sar
test
add
cmp
add
fcomps
jl
xor
pushf
mov
scas
pop
ret
cmp
mov
loop
fstpl
insl
das
fadds
ss
rorl
in
daa
fsts
mov
out
pop
xchg
aas
dec
sbb
mov
pop
lods
data16
sub
dec
repnz
sub
inc
shll
pop
inc
push
lods
cmp
repnz
and
add
xor
lahf
scas
xchg
xchg
cld
lcall
es
mov
dec
mov
inc
ret
aas
cmp
in
mov
fisttpl
sbb
aas
stc
dec
sarl
pop
mov
adc
sbb
ds
addb
xor
aad
stos
xchg
push
and
lods
mov
fs
incb
jnp
mov
or
shlb
leave
xor
cmp
jl
cmpsl
lods
ret
les
fsubs
pop
lods
dec
cmp
test
in
mov
sarl
out
insl
out
sbb
cmp
enter
fldenv
jle
dec
loope
and
loopne
pop
sahf
test
test
push
mov
xlat
jns
jl
stos
js
ss
ss
out
int
cmp
mov
add
dec
ljmp
xchg
insb
mov
test
inc
and
push
dec
dec
cmp
mov
or
mov
xchg
scas
xor
lock
dec
sti
inc
jecxz
addr16
fs
mov
mov
mov
ljmp
pop
out
inc
notb
mov
xlat
push
push
xchg
inc
jbe
jle
fdivrp
sub
mov
stos
ds
nop
daa
add
mov
test
inc
int
pop
loope
pop
repz
jns
sub
test
sbb
cmp
mov
out
rclb
aam
outsl
or
inc
movsl
cmp
movsb
cmp
cmp
stos
jl
xor
iret
pusha
adc
mov
enter
ret
mov
and
mov
jb
inc
jb
push
jne
pop
adc
in
aas
adc
or
mov
mov
push
sbb
lock
xor
dec
xor
pushf
test
mov
not
cmpsl
test
cwtl
cmp
shrl
into
mov
xor
dec
mov
jp
movsl
fadd
fstpl
push
mov
push
ja
jl
loop
mov
mov
mov
push
push
jge
cmp
jb
xchg
sahf
jne
inc
and
sbb
in
mov
sub
mov
out
push
fs
repnz
pop
mov
jb
jmp
das
adc
mov
std
iret
pop
cmp
mov
inc
inc
jmp
cmpl
or
add
push
movsl
dec
outsb
dec
mov
dec
add
or
or
cmc
xchg
mov
sbb
loopne
and
pop
cmp
cltd
jle
out
sahf
dec
xchg
inc
lret
mov
or
lea
mov
push
fchs
and
jns
aas
lea
jecxz
mov
sbbb
stc
mov
shll
mov
dec
paddw
stc
xchg
ret
or
push
push
and
test
xchg
sbb
scas
and
mov
ret
adc
scas
stos
add
ja
jnp
fs
push
inc
pop
std
mov
mov
stc
mov
fildll
in
xor
xlat
push
mov
shlb
clc
pop
nop
in
push
mov
mov
orl
negl
or
mov
into
pop
cmp
jno
add
rorb
adc
pusha
cmp
es
les
xlat
xor
sbb
gs
inc
fstl
lcall
daa
pop
cmc
lock
add
sub
sbb
mov
jne
roll
ret
pmullw
enter
cmp
pop
push
aam
mov
dec
cmp
das
in
push
idivl
adc
and
arpl
sbb
stos
das
cmpsb
fcmovnbe
dec
adc
mov
cmp
adc
scas
sbb
daa
inc
enter
test
push
adc
cmc
rolb
jb
outsb
leave
mov
test
icebp
xchg
test
sti
push
and
xlat
dec
dec
sub
fisubl
jl
mov
scas
adc
mov
stc
adc
out
push
mov
roll
push
and
fiaddl
cld
xor
imul
xchg
push
lea
sub
add
sbb
rol
or
mov
pushf
out
orb
call
xchg
add
in
pop
push
jno
std
test
push
hlt
hlt
jl
roll
and
and
push
push
sbb
add
nop
imul
inc
rcll
int3
xor
push
cmp
add
cltd
dec
out
out
mulb
adc
inc
into
iret
arpl
repz
sbbl
jge
mov
cmp
pop
mov
mov
xor
and
repz
dec
add
dec
mov
out
mov
lea
pop
bound
ret
cli
and
fisttps
sahf
add
test
fcoml
fsubs
js
imul
cld
xor
pushf
xchg
push
cmc
sti
popf
or
push
aad
inc
lods
push
into
aad
fstpt
sbb
xchg
shll
cmp
in
mov
outsb
mov
mov
mov
pop
test
inc
das
jge
out
rcr
scas
pop
add
sub
popf
stos
jecxz
mov
fdiv
or
in
jg
sub
mov
sbb
inc
cmp
lret
sub
mov
mov
and
loop
push
xchg
adc
fs
inc
mov
loop
inc
pop
add
sub
mov
pop
ret
mov
sarl
ja
dec
fiadds
out
lock
mov
or
jbe
inc
les
xor
lret
lods
cmpsl
lea
ja
xchg
xchg
pop
xchg
xchg
std
add
sbb
jmp
stc
xor
xchg
pop
pop
loopne
rcll
shll
push
popf
push
jno
lods
popa
in
sub
pop
in
sahf
jne
lret
jp,pt
stos
cltd
mov
cmp
ja
sub
sbb
add
xchg
jmp
mov
cs
test
add
lock
in
mov
lret
les
jge
out
push
mov
jge
dec
mov
addl
mov
enter
mov
popa
jae
and
and
lock
pusha
dec
cmp
add
mov
bswap
push
inc
ret
or
lock
adcl
outsl
mov
push
add
pop
jg
insl
sti
cmpsb
fldenv
jecxz,pn
and
add
fwait
lods
xchg
fdivrs
imul
leave
ja
mov
pop
fcompl
dec
fs
fwait
cmp
test
sub
scas
outsl
and
rclb
leave
xchg
add
push
jp
mov
and
cmpsl
divl
sbb
fcompl
jecxz
sbb
lock
sub
xchg
cmpsl
jns
aam
xor
sbb
imul
mov
out
xor
jmp
lods
push
sahf
mov
cmp
jmp
lcall
out
pop
xchg
shr
fs
aas
xor
cmp
xchg
cmp
lret
and
push
mov
push
add
push
mov
bound
mov
imul
push
aad
mov
mov
mov
push
xchg
mulb
aaa
loopne,pn
dec
cmp
jmp
lea
sub
pop
les
adc
inc
mov
mov
dec
fcmovb
xorb
cmc
or
dec
aas
mov
xchg
out
repz
cmp
or
mov
inc
adc
mov
outsb
mov
cmp
out
rcl
mov
cli
lea
cmc
cmp
push
push
aaa
out
jecxz
testl
or
xor
or
mov
push
lret
mov
stos
pushf
mov
cmp
push
jb
inc
jns
adc
js
sahf
mov
test
pusha
pushf
mov
push
lds
xlat
imul
int3
ljmp
ss
dec
fwait
push
dec
out
icebp
pop
shl
cmp
inc
ret
sbb
jbe
pop
fidivs
push
sub
lods
cmp
nop
cltd
insl
jns
in
pop
and
push
pop
rcr
dec
xchg
sbb
std
add
es
xchg
push
test
inc
roll
sub
scas
dec
xor
mov
add
add
mov
jo
sarb
pop
arpl
mov
sbb
mov
pop
jns
aad
inc
scas
cmc
jns
xchg
and
sbb
sub
daa
fmulp
xchg
inc
rolb
mov
movsl
call
fstpl
sub
push
push
add
call
mov
call
or
mov
push
test
xchg
ss
sub
mov
enter
push
push
and
ret
bound
rcr
fisubrl
mov
pop
pop
mov
out
fld
pop
clc
fsub
push
lock
ljmp
rorl
loopne
adc
sbb
jl
das
pop
lcall
movsl
push
inc
sub
jbe
test
nop
sbb
rorb
arpl
mov
cmpsl
in
or
cmp
jecxz
repnz
mov
mov
sbb
xchg
fadd
out
scas
cli
pop
and
inc
rcrl
push
stos
ret
and
mov
or
test
ds
aaa
mov
mov
mov
mov
rorb
mov
add
sbb
jmp
movsb
dec
pop
dec
daa
jne
cs
frstor
lcall
sar
jl
lock
cmp
inc
mov
in
adcb
push
push
add
xor
mov
stos
nop
mov
inc
ja
or
lcall
xor
mov
mov
xor
xor
jp
jge
jecxz
or
dec
push
add
cs
lock
pop
mov
and
adc
push
roll
es
sub
fisubs
mov
xchg
dec
dec
mov
test
adc
vpmacsdd
mov
bswap
fnstcw
xchg
int
dec
mov
nop
iret
cmp
adc
push
lock
lret
sti
xrelease
xchg
push
daa
mov
mov
xor
inc
mov
shrb
pop
jmp
push
andl
inc
jnp
fs
adcb
and
xchg
jne
pushf
sub
std
out
cmp
js
adc
adc
outsb
sub
lds
out
xchg
cld
movsb
cmp
mov
lret
dec
mov
lahf
sbbw
mov
or
decl
adc
jo
inc
adc
insl
cld
push
push
inc
out
xchg
je
add
loopne
sbb
in
xor
dec
mov
scas
leave
pop
fs
or
and
mov
lcall
lock
dec
jne
adc
sub
push
push
sbb
lea
mov
mov
push
in
xor
or
es
cmp
cmp
idivl
xchg
lcall
loopne
lret
insl
push
jnp
pop
stc
cli
imul
add
cli
mov
test
pop
mov
xor
pop
cmp
fmuls
mov
mov
dec
cltd
mov
stos
mov
rolb
add
andb
push
add
adc
movsb
jp
movsb
add
and
push
stc
arpl
insl
fxch
orl
ss
pusha
sbb
jo
shll
mov
adc
orl
hlt
jmp
cmp
jns
adc
mov
dec
pop
mov
push
pop
xor
fdivrl
add
push
js
or
xchg
xchg
and
inc
lods
fstpl
cmpsl
inc
sbb
js
call
repz
in
jns
je
cli
mov
ljmp
ret
cli
ljmp
inc
aam
mov
adcl
loope
bound
dec
mov
cmp
push
in
sbb
clc
movsl
int3
sub
lahf
cs
jge
adc
stc
cmpsb
test
ret
sub
push
mov
add
aad
je
in
xchg
std
sbb
dec
xor
or
xchg
ds
add
test
testb
add
add
nop
call
push
xchg
push
bnd
jg
push
es
mov
in
mov
pop
ljmp
mov
test
jno
mov
repz
add
icebp
adc
xchg
push
push
faddl
push
jmp
mov
in
dec
mov
out
sbb
xor
repz
push
xchg
inc
stos
ret
sti
int
les
popa
incb
inc
scas
testl
test
repnz
dec
inc
sub
add
mov
lcall
in
adc
lock
lea
movsb
ss
repnz
xor
ja
stos
jb
aas
xchg
ret
test
inc
xchg
add
cmp
mov
jecxz
fidivrs
adc
dec
inc
scas
mov
jo
dec
test
pop
scas
lods
ret
jl
shrb
jge
pop
fidivl
pushl
ljmp
pop
adc
enter
mov
aas
jne
sub
shlb
xor
mov
jecxz
push
mov
stos
outsb
xchg
sarb
jnp
movsb
push
push
aad
stos
inc
and
stc
ret
ljmp
jb
lcall
sub
lds
adc
sbb
movsb
fidivl
push
sbb
xchg
lret
pop
xor
pop
outsb
xchg
cmc
cli
arpl
and
dec
cli
inc
xlat
xchg
cmp
pminub
mov
push
and
push
pop
xlat
xlat
push
and
or
pop
sub
xchg
mov
lods
mov
push
jbe
sub
clc
jo
call
mov
push
les
jae
mov
addb
mov
dec
bound
repz
jno
push
jp
out
shlb
jecxz
adc
mov
test
inc
xor
aas
leave
ret
mov
xchg
sti
pushl
fldcw
or
add
mov
int3
mov
fisttps
jo
mov
mov
xchg
sub
popf
sti
mov
imul
aam
ljmp
cmc
rcl
dec
xor
mov
insb
gs
ficompl
icebp
aad
lds
mov
fs
push
xor
mov
notl
bound
loope
xchg
cmp
out
in
into
dec
test
in
out
cmp
iret
stos
mov
mov
pop
addr16
daa
push
dec
iret
in
daa
scas
or
loope
sbb
xchg
cmpsb
es
sub
add
sbb
jge
push
inc
dec
jmp
add
and
or
jmp
in
sub
xor
loope
lods
or
push
add
add
fmul
pop
or
mov
pop
scas
cmp
mov
mov
loop
mov
lret
lret
ja
xchg
xchg
insb
adc
mov
sbb
adc
cmp
icebp
in
loopne
or
stos
insl
icebp
and
shll
es
sub
sbb
and
ret
mov
dec
inc
int
xchg
and
out
xchg
jg
int3
sbb
mov
imul
cmpsb
xor
fsubr
vpperm
mov
cld
xchg
jp
fwait
dec
mov
sub
in
inc
push
xor
and
push
mov
pop
out
enter
sub
xchg
icebp
push
jmp
push
xchg
rcrl
cmc
pop
cmc
sahf
out
jge
in
mov
mov
xchg
loopne
and
jno
mov
xor
fisubl
fwait
pop
xor
cmp
rcl
flds
xchg
inc
xor
adc
sub
cmp
iret
fcoml
test
or
test
fstps
xlat
stc
scas
ss
dec
adc
inc
repnz
in
push
or
and
mul
add
scas
popf
andl
inc
mov
fcompl
fstpt
inc
repnz
into
jnp
jb
lahf
cmp
cmpsb
pop
loope
je
push
sbb
push
mov
subl
push
pop
mull
ret
outsl
mov
shll
shlb
enter
arpl
push
xchg
push
push
test
divb
lock
incl
adc
sbb
movsl
scas
and
xchg
nop
xchg
jne
cmp
lock
dec
fs
rclb
dec
xchg
sti
push
test
inc
shlb
movups
add
or
in
out
fsubrp
sbb
shlb
sbb
adcb
fmul
fcmove
push
mov
cltd
push
hlt
mov
nop/reserved
enter
jl
hlt
cld
por
add
int3
adc
outsb
mov
les
or
push
out
pushf
sbb
sub
std
add
mov
mov
sbb
push
push
add
dec
js
cmpsb
add
adc
es
setle
xchg
add
xchg
sbb
out
mov
insl
mov
dec
or
lcall
jle
adc
jnp
pop
or
test
mov
pop
mov
mov
popa
add
fs
xchg
and
add
jle
pushl
sbb
mov
shll
dec
pop
call
mov
mov
mov
or
in
dec
mov
or
dec
mov
out
xchg
popa
mov
pusha
push
icebp
test
mull
jecxz
hlt
aaa
sub
mov
inc
xchg
adc
pushf
and
aas
ja
ret
adc
jbe
push
stc
loopne
je
sub
fwait
add
fnstcw
arpl
sub
or
xchg
pop
or
sbb
lock
or
adc
lret
ljmp
inc
jne
cmpsl
mov
pop
imul
lea
mov
add
or
outsl
cmpsb
fstpl
test
or
shll
or
lods
lods
push
insb
cltd
in
cmc
add
mov
xchg
lock
ret
mov
scas
movsl
push
pop
adc
inc
mov
iret
loop
out
test
sbb
dec
push
stos
xchg
int
lret
call
mulb
cmp
push
jne
scas
test
in
loop
nop
jecxz
and
cwtl
stc
lret
aas
cmp
imul
les
mov
dec
push
mov
lret
daa
xchg
pop
add
xlat
lcall
leave
cmp
xor
lret
aas
cmc
mov
sbb
or
mov
lret
xchg
inc
iret
decl
repz
jl
outsl
mov
adc
imulb
aas
cmpsb
inc
and
mov
inc
jb
dec
movsl
fmull
jecxz
mov
test
test
mov
jae
pop
cmp
outsb
cmc
push
or
sbb
xchg
mov
jle
push
jge
imul
je
sahf
lcall
xor
sbb
sbb
mov
daa
int3
lahf
inc
jge
test
pop
fstps
mov
pop
hlt
mov
xchg
enter
push
ret
sub
idivb
icebp
cmp
popf
sub
mov
test
cmp
insl
sbb
fldl
mov
rcr
bound
outsl
add
adc
cmp
es
xchg
mov
dec
ret
hlt
push
add
inc
stos
std
sbb
mov
xchg
xor
daa
add
test
inc
mov
bound
sbb
divl
or
add
sub
cmc
lret
pop
outsb
mov
mov
mov
adc
test
outsb
cmc
add
jl
sub
inc
pop
jg
adc
cmp
cmc
fwait
into
fisttps
sarb
sub
aam
mov
sbb
fs
fisttpl
inc
nop
mov
adc
fwait
or
cmc
popf
int
pop
es
sbb
sub
xor
fdivrp
shlb
adc
jmp
sarb
mov
pop
mov
addr16
cmpsb
fistpll
pop
push
xor
test
or
adc
mov
jnp
hlt
push
cmpsb
es
jge
xor
sub
pop
sarl
out
adc
xchg
lret
xlat
push
lods
fbstp
xor
lds
mov
mov
out
insl
jno
add
sbb
xor
popw
call
cmp
or
loope
arpl
dec
xchg
cmp
je
sub
ja,pn
dec
pop
pushf
jmp
sbb
stos
and
and
daa
inc
aad
add
push
shl
inc
push
loopne
jnp
outsl
jo
xchg
cld
dec
outsl
cmp
in
testl
cmp
mov
adc
jae
lods
xchg
cmpl
xchg
sub
pop
push
cs
insb
leave
shrb
or
divl
leave
outsb
mov
mov
mov
popf
andb
aad
inc
cmp
jae
cmc
push
and
sub
pop
dec
push
clc
cmovs
push
or
dec
sahf
lock
bound
int
jnp
push
mov
stc
fwait
xchg
popl
mov
mov
or
mov
push
out
xchg
adc
mov
sti
xchg
inc
jno
lret
lods
dec
jl
in
inc
add
sbb
mov
xchg
repz
ret
lods
jo
sub
out
rclb
sbb
jnp
leave
daa
outsl
in
inc
add
sbb
add
or
lret
int
lds
add
sub
in
fistpll
mov
cltd
xchg
xchg
sub
divw
cs
insb
aas
into
stos
mov
sbb
lods
xchg
mov
call
fwait
pusha
or
push
dec
xchg
mov
test
out
rorb
sbb
mov
xor
inc
aaa
cmp
push
mov
popf
pop
push
fs
cmp
sbb
mov
pop
sub
scas
inc
adc
inc
xlat
push
mov
nop
sub
loopne
or
ret
mov
dec
ljmp
out
inc
push
sub
pusha
insb
lahf
pop
sbb
clc
mov
add
inc
pop
fdivrs
fldl
cmc
adc
jle
mov
in
jecxz
test
xchg
rcrb
testb
lea
jnp
cmpsb
dec
dec
push
sbb
jle
js,pn
xchg
push
inc
and
pop
jo
push
pop
das
jl
mull
mov
xchg
faddl
aaa
test
inc
jp
arpl
push
mov
xchg
fadds
imul
jno
pop
adc
lea
mov
push
jae
jne
stos
addb
fcomip
inc
int3
insl
sub
sub
inc
stos
and
push
sub
aad
push
and
mov
pop
xlat
insl
mov
nop
add
cli
fucom
clc
or
lock
and
pusha
pop
or
xor
mov
enter
sub
loopne
cli
ret
push
adc
iret
in
jae
add
jecxz
jbe
cmc
dec
movsl
pusha
push
dec
pop
insb
cmp
mov
cmpsl
inc
or
inc
push
adc
imul
lods
and
sub
jmp
pop
int3
pop
xchg
adc
or
sbb
aad
add
add
sbb
lods
lods
gs
jbe
test
js
mov
scas
cwtl
fistps
or
add
pop
fcmovbe
lcall
push
mov
adc
jo
popf
jle
inc
in
pop
xchg
fxam
xor
push
pop
mov
sbb
adc
int3
pop
rol
arpl
inc
ror
sub
fsubr
out
arpl
rcl
xchg
xchg
jg
repnz
inc
dec
shl
xor
cli
stc
inc
jo
jns
icebp
mov
shrb
mov
mov
mov
push
int
mov
xchg
xor
and
mov
xchg
dec
sbb
fcomip
sbb
leave
mov
dec
and
jne
shlb
mov
ret
loope
rclb
ljmp
cpuid
xchg
data16
cmp
int
cmpsb
or
mov
iret
add
cmovg
inc
daa
pop
mov
pop
dec
hlt
arpl
sbb
stc
push
push
cmp
cltd
push
xor
adcl
pop
adc
xchg
dec
rorb
cmpsb
mov
ffree
push
jnp
rorl
push
pop
sbbb
jne
js
jo
inc
pop
es
repz
push
or
divb
mov
imul
xchg
pop
mulb
pop
pop
push
inc
xchg
arpl
fwait
mov
xor
push
push
and
xchg
cmp
sub
push
push
jno
aaa
lods
xchg
shrl
insb
xor
std
inc
cmp
leave
jno
xchg
out
push
push
enter
and
mov
sbb
cs
fsubrs
in
mov
div
jmp
out
push
cli
cltd
iret
adc
scas
jae
push
cmp
mov
ja
cli
pop
mov
stc
shlb
lock
jg
sub
cmpsl
lods
gs
pop
adc
pop
cmc
cmp
adc
pushf
xor
dec
cmp
mov
dec
mov
lock
out
fidivrl
shrl
jb
mov
inc
aaa
and
sub
sub
sub
sub
mov
cmpsl
movsb
pop
sbb
lea
sbb
aas
cs
int
pop
fcoms
movsb
in
and
ret
fidivrs
cmpsl
mov
mov
sub
lods
push
push
push
inc
push
hlt
std
lcall
jae
sbb
repnz
sbb
in
cmp
dec
popa
ficoml
sbb
jecxz
mov
mov
jmp
adc
dec
jl
stos
mov
sbb
inc
pop
lret
bound
std
lret
sub
leave
jge
hlt
inc
mov
cmpsl
sbb
into
jg
dec
movsl
insl
in
lea
imul
in
insb
fwait
xor
pushf
cld
or
dec
outsb
bnd
rol
xor
jae
repnz
arpl
mov
mov
idivb
ss
cmp
shlb
or
or
pop
scas
lea
sub
inc
inc
sbb
lret
add
inc
pop
sub
xor
pop
fistl
add
loope
test
mov
push
mov
clc
pushf
mov
and
mov
dec
jno
lds
rorl
mov
add
dec
cltd
mov
xchg
adc
add
push
fadd
roll
dec
pop
adc
ljmp
jno
or
ret
loopne
imul
bound
lods
and
aad
std
pop
sbb
movsb
inc
enter
jmp
ficoms
mov
rolb
incl
pop
sub
lods
in
pop
push
call
sub
shlb
shl
aam
pop
push
xlat
jbe
int3
out
cmp
ret
jg
xchg
pop
dec
mov
jns
cmp
rolb
bound
jno
loop
mov
mov
inc
and
push
add
aas
mov
out
push
cmpsb
stos
inc
mov
in
xchg
arpl
jmp
cmp
pushf
icebp
shll
and
pop
cli
push
cli
mov
xor
lds
loope
sub
xchg
xchg
push
leave
jns
and
popa
or
mov
mov
mov
scas
jle
dec
test
aam
int3
dec
in
add
cmpsl
lahf
or
int
in
pop
adc
stc
out
stos
mov
xor
cmpsb
das
lds
add
sahf
gs
imul
jns
add
shl
inc
das
bound
insb
mov
mov
jge
mov
dec
test
mov
lods
add
out
xchg
insl
int
ret
push
jp
push
mov
les
xor
aas
fcoml
lds
subb
inc
adc
push
cld
sbb
or
aam
inc
push
imul
shll
xchg
arpl
pop
les
test
pop
sbb
leave
inc
icebp
adc
in
mov
fidivs
sbb
mov
xor
icebp
inc
enter
adc
jnp
inc
insl
gs
rcrl
xor
cwtl
mov
shl
dec
jae
sets
fisttps
cmpsl
iret
adc
scas
xchg
rolb
adcl
ficompl
mov
shll
loopne
aam
sub
xchg
imul
add
sub
add
dec
imul
pop
ja
xlat
mov
int
inc
inc
aaa
xchg
data16
adc
mov
xchg
sarl
call
push
or
add
jns
out
movsb
mov
and
out
sub
and
mov
push
push
or
insl
add
stc
outsl
and
push
js
test
jo
cmp
xor
shr
les
filds
lods
nop
mov
fcoms
lahf
stos
jbe
sbb
xor
loopne
pop
pop
aad
cmpsb
inc
dec
nop
aaa
bswap
xchg
cmc
jno
cmp
aaa
add
or
or
push
xor
cmpl
mov
mov
mov
inc
jbe
sbb
jne
or
sarb
jle
mov
enter
mov
mov
sub
mov
sbb
stos
xchg
fbld
or
push
shlb
cli
add
jno
push
lcall
lods
js
es
or
aad
test
add
and
rorb
inc
xchg
adc
cmc
xchg
aam
rcr
std
or
and
in
cmp
movsl
stos
fwait
sub
mov
push
dec
and
jg
mov
mov
sbb
mov
mov
insl
in
int3
jecxz
call
jecxz
lds
aad
in
sbb
mov
or
ja
cwtl
cltd
in
out
dec
xchg
xor
pop
or
sahf
nop
pusha
aad
pop
add
fldt
cmpsl
hlt
push
sbb
pusha
mov
or
leave
push
shrl
inc
and
inc
je
fnsave
sahf
fs
sbb
aam
or
cs
arpl
mov
sub
xchg
jle
push
add
in
adc
sti
sbb
loop
outsl
leave
mov
push
adcl
jg
push
stos
shll
jno
movsb
add
les
adc
mov
ljmp
mov
fnstcw
mov
xchg
rolb
inc
sbb
ljmp
mov
xlat
scas
inc
adc
push
lret
xchg
mov
sbb
jge
push
push
jns
or
subb
xor
test
push
vpunpckldq
cmp
mov
mul
out
aaa
xchg
imul
sbb
stos
ljmp
mov
dec
loope
fmull
loop
int3
xchg
and
pop
push
imul
mov
and
xor
ljmp
loop
lock
lcall
mov
mov
pop
xchg
push
jge
mov
pop
clc
addb
lcall
jo
rcrb
leave
add
cli
adc
das
repz
pop
fnstenv
fsubrs
lods
inc
sub
in
idivl
adc
inc
aad
pop
icebp
test
test
mov
sarl
pop
repnz
jle
add
jae
fcoms
add
cltd
sub
pushl
pop
pop
push
push
jmp
push
or
dec
cmp
popa
into
jmp
push
aad
mov
mov
xchg
mov
arpl
mov
inc
ret
pushf
xchg
btc
dec
mov
pop
popf
shl
ja
in
push
dec
inc
xor
sbbb
cmpsl
sti
rcr
push
scas
sub
xor
aas
jecxz
lea
mov
inc
sbb
mov
add
xchg
js
sbb
xor
popf
sub
lcall
aas
xor
add
mov
clc
mov
jnp
pand
dec
adc
shll
sarl
xlat
add
mov
fiaddl
in
mov
cmc
mov
fnstsw
mov
in
pop
mov
jno
mov
repnz
pop
and
lcall
cmpsb
pop
inc
daa
mov
dec
jns,pt
jp
int
inc
repnz
adc
nop
sbb
in
mov
xor
jl,pt
lea
inc
sbb
inc
sbb
jp
dec
jle
pushf
mov
flds
lcall
inc
or
mov
lock
insl
xchg
aad
sbb
test
rol
repz
insb
jmp
mov
sub
rcll
call
adc
fwait
lods
out
out
sbb
sub
adc
orl
iret
jnp
cld
stos
inc
repnz
pushf
and
add
xchg
mov
test
mov
dec
jne
sahf
and
ret
jbe
test
sub
loopne
xchg
mov
cmp
adc
mov
jnp
stc
ss
push
les
shrb
int
and
scas
gs
movsb
in
dec
dec
into
fcom
jno
mov
in
movsl
push
jnp
xchg
es
movsb
aaa
pop
test
xchg
xchg
rclb
fcom
push
dec
test
xchg
mov
dec
cmp
cmp
ret
mov
out
int3
mov
roll
jbe
in
and
jbe
push
insb
mov
test
or
add
nop
in
icebp
add
mov
adc
mov
mov
push
cmpsb
xchg
add
mov
or
scas
sarl
sub
and
mov
ljmp
mov
js
push
test
push
and
icebp
push
or
enter
xor
dec
test
data16
mov
cmp
cmp
inc
cmp
jno
adc
add
sub
data16
int
mov
inc
inc
dec
push
ja
cli
sbb
push
push
and
imul
andb
dec
je
sarl
ficoms
cmp
cld
test
inc
xor
lcall
add
movsl
or
add
sbb
in
clc
clc
mov
int
jge
mov
addl
andl
lret
fstpt
inc
addl
stos
sbb
mov
push
xchg
mov
cmp
pop
sub
cmp
sbb
iret
and
test
outsb
fdivs
rol
cmp
sbb
dec
add
cli
push
ret
dec
cmp
mov
fstl
pop
mov
sub
popa
mov
sbb
andl
cld
push
decl
bound
xchg
clc
pop
and
jl
mov
popf
insl
les
clc
push
ret
xor
cmp
outsl
cld
lods
mov
xchg
lock
jo
daa
ret
cwtl
loopne
fwait
popa
dec
daa
inc
sub
and
out
sbb
ja
jo
push
into
push
cmpsb
jg
sbb
mov
outsb
out
pushf
mov
inc
xor
add
mov
das
xor
dec
add
jmp
cmp
test
add
lods
sub
pop
lret
pop
test
test
lods
push
clc
test
add
adc
and
out
xor
adc
add
jnp
jge
push
mov
or
test
xrelease
mov
push
pop
leave
pop
lods
stc
repz
push
add
pop
popa
pop
or
fdivr
mov
sar
cmp
loope
or
jbe
sub
sahf
or
push
je
pushf
sub
jo
hlt
dec
mov
flds
scas
push
push
xchg
mov
mov
clc
lods
or
cmp
xchg
push
or
in
leave
add
mov
mov
jno
out
cmp
loop
sysret
xor
movsb
xchg
pusha
lss
push
pop
xchg
into
or
xor
or
movsl
sbb
xor
inc
xchg
mov
rcrl
inc
xchg
or
mov
daa
in
loope
mov
pop
push
or
push
sti
adc
inc
xor
mov
mov
mov
and
sti
ja
jbe
int
mov
inc
mov
fadd
mov
adc
test
sub
lret
mov
mov
push
push
push
imull
mov
aaa
pop
pop
push
pop
cmp
inc
test
cmc
or
cwtl
sti
mov
mov
dec
adc
test
mov
addr16
daa
ds
popa
les
mov
push
or
and
pop
outsl
pop
adc
bound
loope
or
mov
insb
lret
out
push
cmpsl
or
daa
pop
outsb
movsl
loopne
rcl
cwtl
dec
push
ret
jmp
or
icebp
movsb
pop
frstor
lret
cs
notb
js
jbe
enter
sub
xor
loopne
clc
push
out
imul
mov
and
imul
pop
sub
js
cs
inc
ret
dec
mov
dec
push
push
dec
xchg
add
pop
sbb
xchg
and
leave
fwait
inc
stc
out
fwait
out
insb
lret
cs
sbb
pop
mulb
cli
gs
imul
daa
stos
inc
andb
mov
mov
mov
fs
pop
push
mov
lock
sub
xchg
cmpsb
pushf
ret
dec
sbb
push
ja
ret
or
scas
push
fisttpll
ds
adc
jae
sub
cmpsb
loopne
clc
push
cmp
shrl
ret
pop
mov
jecxz
mov
jo
mov
ljmp
jo
es
mov
into
xor
mov
mov
jno
stos
sub
imul
jecxz
sarb
pop
sub
ret
js
push
push
roll
pop
lahf
test
iret
jae
push
cmp
mov
nop
mov
fisubs
mov
push
xor
add
mov
lret
push
mov
push
fisttps
jno
lcall
fldl
or
imul
and
and
push
je
sbb
sahf
stos
mov
roll
rcrl
xlat
mov
mov
dec
mov
add
jecxz
jmp
pop
fwait
add
inc
xchg
pop
xor
jbe
rolb
fisubs
xor
mov
out
clc
jne
lcall
cmpsb
mov
xor
fcmove
jecxz
inc
aas
fstpl
mov
cmp
jbe
sbb
jg
mov
push
cld
pop
or
inc
arpl
loope
push
lods
imul
cmp
push
cmp
je
xchg
enter
lds
mov
push
insl
cld
dec
int3
into
push
enter
mov
push
jnp
scas
loope
or
or
in
jp
pop
push
add
fstps
fsubrl
out
incl
sbb
fstl
enter
sub
jecxz
popf
test
imul
shlb
insb
movsl
adc
call
mov
shll
inc
jne
stc
pop
mov
jge
cmp
jge
adc
push
call
shll
add
sub
adc
push
jno
xchg
push
pop
enter
sbbb
gs
push
pushf
test
rcll
and
push
or
pushf
stos
notl
or
sbb
inc
shlb
and
or
add
dec
stos
mov
push
or
pushf
mov
jne
pushf
pop
push
inc
jl
in
xor
xor
xor
sarl
sbb
invd
je
int
inc
mov
pop
add
sub
mov
xchg
cmp
sub
es
in
mov
scas
xchg
int
push
aas
ja
pop
out
loop
cwtl
movb
rcr
mov
test
jae
inc
outsb
sbb
psrlq
push
lahf
jge
mov
cwtl
sub
addr16
mov
sub
xor
imul
pushf
gs
fidivl
dec
or
testl
mov
jb
cmpb
repz
inc
aad
push
mov
mov
lahf
out
imul
add
aam
je
dec
add
sarl
out
inc
or
test
xchg
xchg
pop
xchg
dec
sub
pusha
lcall
push
out
test
ret
rcll
mov
fists
mov
cltd
inc
cmp
push
mov
orl
out
mov
mov
insb
stc
push
push
cmc
mov
scas
mov
stos
hlt
rorb
cmc
sti
inc
test
push
cltd
sub
out
sbbl
icebp
mov
cwtl
icebp
push
daa
mov
arpl
cmp
icebp
ficompl
pop
pop
dec
inc
cmpsl
out
and
adc
cmp
mov
lea
mov
sbb
pop
pop
mov
xchg
dec
fidivrs
lret
stc
xchg
in
nop
js
gs
in
movb
add
cltd
xlat
imul
jle
ret
mov
push
sub
imul
mov
loope
fiadds
jmp
xor
adcl
add
mov
cmp
out
mov
xor
dec
xor
sub
dec
mov
inc
lret
testb
xchg
das
inc
pop
outsl
andb
imul
fwait
sbb
lret
and
rcrb
push
rcll
sahf
mov
cmp
pop
mov
int
mov
push
lcall
mov
or
jg
cmpsl
sbb
mov
enter
cmp
in
jb
sti
jb
fists
test
xchg
enter
mov
pop
fnstenv
fstp
les
in
pop
adcb
xchg
pusha
cmpb
out
aam
or
push
mov
addr16
arpl
xchg
adc
cmp
in
pop
jl
adc
mov
frstor
inc
es
mov
lret
mov
cmpl
push
mov
shr
jo
and
mov
add
cmc
inc
popf
sub
pop
mov
and
test
stos
dec
pushf
or
mov
sub
lret
aam
pop
je
aas
testb
xchg
xlat
dec
lea
popf
push
popa
add
rcl
cltd
jge
and
mov
push
cwtl
jg
stos
push
mov
jle
inc
mov
scas
xor
pop
push
repz
negl
xchg
in
mov
out
out
pop
ljmp
adc
std
stos
sti
lea
or
pop
daa
push
int3
dec
mov
pop
imul
fisubs
out
out
out
sarb
jp
insb
gs
lods
aad
sar
push
fucomp
jge
dec
and
mov
sahf
jl
movsl
pop
xor
aas
inc
xor
sub
adc
int
scas
lret
xchg
and
mov
mov
mov
cmp
add
mov
lods
in
xchg
inc
push
sti
sub
adc
mov
mov
mov
vpsubusw
mov
adc
push
xchg
or
cmp
cwtl
scas
jnp
jne
xchg
shrb
or
and
call
js
xor
int3
test
clc
lcall
push
mov
cmpsb
dec
lock
or
repz
insb
clc
ret
andl
in
sub
incb
fisttpll
xlat
jno
ret
aad
sbb
ret
movsl
xchg
adc
add
xor
xchg
add
scas
add
addr16
push
or
jmp
add
xor
arpl
xchg
addb
adc
mov
jne
mov
push
stos
ret
cmpsb
mulb
incl
sub
sub
loop
imul
pop
push
mov
jle
arpl
aas
testl
js
rolb
jae
mov
dec
and
test
popa
cs
sarb
dec
andnps
fwait
or
mov
sbb
and
dec
leave
pushf
stos
and
jo
push
inc
fstl
out
insb
jle
pop
dec
add
inc
mov
adc
mov
fnstenv
add
movsl
xor
cmp
pusha
push
sbb
subl
or
xchg
pushf
adc
jg
out
lret
dec
mov
scas
xor
sahf
mov
push
adc
les
js
ret
jmp
ror
fcoms
xchg
ret
pop
push
ljmp
xor
iret
sbb
fwait
mov
cs
imul
nop
outsl
adc
xor
addr16
add
scas
inc
push
leave
icebp
cmp
adc
and
in
jbe
adc
mov
aam
xor
dec
mov
fisttpl
cmc
push
popf
or
fs
and
add
fwait
or
sarl
xor
push
out
xchg
sahf
inc
add
stos
xchg
mov
sub
xchg
or
imul
dec
lcall
pop
adc
clc
jl
dec
adc
aam
call
push
sahf
or
or
cmp
repz
popa
jg
lahf
or
mov
popa
arpl
leave
lahf
fs
add
mov
sub
add
mov
xchg
push
lret
outsb
mov
in
movsb
aaa
aaa
sub
loop
dec
mov
clc
mov
fildl
sub
leave
loopne
and
cltd
lret
pop
xchg
jne
hlt
mov
dec
outsb
insb
dec
or
ja
or
push
or
ret
push
sbbl
xor
sti
imul
mov
stc
xor
sbb
ret
cld
inc
sub
aaa
enter
jle
jle
sub
mov
xor
fcmovne
jmp
adc
jp
cmp
mov
xor
dec
sbb
jbe
adc
out
push
mov
sbb
fstpl
mov
rcr
imulb
fnsetpm(287
adc
jnp
fwait
pop
shll
jg
js
adc
jno
lret
xor
sahf
pop
orl
out
inc
je
adc
outsl
lcall
cmp
test
mov
nop
add
mov
mov
push
call
je
adc
pop
sbb
sbb
sti
dec
and
imul
fs
inc
push
add
clc
out
and
mov
pop
imul
icebp
inc
sub
push
jnp
and
jp
cmc
adc
rclb
cltd
xchg
fistl
cmpsb
psubw
cwtl
xchg
xchg
sbb
cmpsl
bound
rol
sbb
or
int
leave
or
in
mov
cmp
jns
leave
cmp
daa
into
or
pusha
xchg
xchg
test
cmp
es
je
sahf
leave
dec
or
cmp
pop
push
mov
fcmovne
loop
jb
clts
jp
cmp
add
nop
fbstp
sub
aas
popf
dec
adc
sarl
and
addr16
and
dec
mov
xlat
je
rcll
add
andb
scas
imul
inc
daa
sub
or
cmp
push
inc
ret
add
aas
lods
mov
xor
jne
nop
add
dec
cld
out
or
adc
sub
fidivrs
jo
add
je
xchg
and
in
xchg
das
xchg
fcoms
clc
popf
outsl
scas
xchg
and
sub
es
ja
into
cmpsb
sbb
xor
cwtl
inc
mov
or
movsl
jbe
ja
jo
sbb
jmp
sbb
xor
lahf
and
push
mov
or
movsl
jp
shrb
mov
sbb
dec
or
pushf
dec
adc
dec
dec
adc
jb
or
mov
sub
out
daa
pusha
xchg
pop
ja
mov
ret
or
cmc
sbb
xor
repz
dec
rorb
xchg
or
outsb
add
inc
leave
shr
mov
in
movsl
movsl
dec
dec
mov
rcr
gs
dec
push
push
popa
or
dec
add
jb
sub
push
repnz
mov
loopne,pn
push
repz
shrl
pop
sub
cmp
stc
mov
and
mov
mov
jo
push
lock
adc
shll
add
mov
pop
jge
test
pop
xchg
fistps
ja
mov
jge
imul
mov
test
ds
daa
notb
sbb
cmpsb
cmp
inc
add
xor
jno
dec
push
int3
dec
scas
lret
mov
push
dec
imul
cmp
jmp
jl
test
add
sub
inc
sti
and
or
imul
xchg
sbb
lret
push
lea
in
xor
cwtl
cwtl
mov
das
cmc
outsl
imul
push
cmp
test
icebp
stos
cli
sarl
push
xchg
popf
jl
mov
xor
mov
mov
stos
mov
add
xor
xchg
mov
ret
cltd
cwtl
inc
adc
or
and
fcmovu
xchg
hlt
es
dec
out
add
lret
pushf
mov
or
inc
js
mov
sub
push
outsb
jb
iret
aam
loop
jp
es
xchg
adc
sub
lock
mov
xchg
pop
std
sbb
fwait
inc
stc
jb
sbb
sub
xchg
cmp
aaa
rcr
jmp
pop
ficoml
jno
call
rclb
icebp
lea
bound
pop
pop
das
mov
addl
adc
and
cmp
dec
dec
dec
push
or
sarb
popa
inc
jmp
jle
dec
sub
add
inc
and
test
jbe
push
push
jo
xchg
lds
push
inc
hlt
add
xor
stos
mov
mov
add
cmp
jle
iret
jmp
stos
sub
or
mov
adc
fnstcw
subb
inc
push
fcomps
les
jl
js
add
xchg
test
sbb
adc
aad
pop
pop
inc
xor
or
jnp
fsubrs
movb
aad
lfs
inc
push
dec
in
out
mov
pushl
pop
adc
cmp
xchg
push
mov
fisubrl
pop
test
add
mov
sti
cli
shl
mov
daa
push
inc
pop
call
test
jnp
dec
shrb
mov
enter
scas
push
clc
gs
call
mov
or
push
dec
cmp
mov
dec
push
jecxz
repnz
cmp
or
or
in
pop
out
sahf
int3
mov
sub
jg
add
clc
movb
adc
in
pop
jne
dec
cmpsl
lds
mov
add
in
outsl
loopne
jmp
mov
call
leave
fists
pushf
lods
fmul
rorl
daa
pushf
jno,pn
mov
push
jmp
pop
fildl
pop
mov
xchg
jge
fwait
adc
jae
leave
lret
pop
arpl
mov
mov
decb
pop
sub
lcall
imul
add
jge
in
sbb
rcll
filds
or
imul
push
fmull
mov
ret
lea
pop
flds
push
lea
push
or
jo
xor
xchg
mov
mov
dec
leave
add
lods
pop
lret
cmp
pop
adc
popa
push
mov
mov
inc
lahf
int3
out
mov
mov
loopne
xchg
sbbl
stos
into
add
pop
adc
cmc
js
clc
mov
lahf
xchg
dec
jmp
add
push
dec
sbb
sahf
rcl
mov
js
adc
dec
sbb
push
or
pcmpgtw
lea
sub
mov
cs
jge
icebp
add
mov
arpl
pop
inc
popf
inc
and
rcll
jl
jg
pop
fwait
and
mov
inc
sub
inc
cmp
xlat
add
inc
imul
in
or
push
dec
adc
cwtl
push
mov
xchg
dec
mov
imul
add
cmp
ljmp
add
pop
xchg
dec
xor
lret
mov
push
push
jo
or
and
je
add
push
and
jbe
cmpsl
push
mov
movsl
mov
xchg
insb
jne
add
lret
ficompl
shlb
mov
adc
jno,pn
sbb
imul
daa
data16
and
bound
mov
mov
std
mov
push
aad
adc
pop
cmp
jecxz
pop
mov
mov
push
jmp
xchg
push
decb
movsl
sbb
adc
push
sar
and
mov
inc
bound
sbb
int
mov
or
jmp
nop
mov
and
fidivrl
test
mov
xchg
arpl
jge
mov
out
pop
or
sbbl
addb
jns
dec
cli
cmp
in
dec
jl
xlat
mov
xchg
iret
call
call
jbe
jbe
mov
jb
push
das
sbb
ret
cmp
pop
imul
rcr
mov
add
pop
out
mov
push
jl
dec
mov
ficoms
movsl
movsb
pop
xchg
fisubrl
fnstsw
jo
fiadds
or
adc
jmp
shll
lods
aam
cmpsl
mov
sub
into
push
push
xchg
mov
movsl
mov
stos
stos
fmuls
jne
int3
rcrl
xchg
scas
pop
dec
and
lock
psadbw
mov
jae
jns
iret
and
arpl
pop
repz
loopne
push
push
jp
jmp
and
pop
fidivs
pushf
mov
jne
mov
mov
mov
mov
icebp
dec
push
scas
push
push
aam
jbe
lods
mov
sti
mov
adc
iret
adc
xor
rcrl
xchg
loope
mov
xor
fstpt
sarl
add
pop
push
xchg
in
add
add
lods
add
aam
pop
jp
movsl
lods
lret
ja
sub
out
stos
movsb
or
fstl
adc
add
lods
push
ss
inc
arpl
mov
adc
inc
sub
pop
sub
pushf
dec
inc
push
js
push
andl
cmp
fsubrp
pop
cmp
push
mov
add
jo
sbb
dec
imul
mov
cmp
in
pop
push
movsb
arpl
sbb
ficompl
pop
adc
inc
out
outsb
xor
lods
jmp
fsubp
lcall
dec
out
pop
data16
add
scas
jae
sbb
dec
mov
icebp
jge
or
fstl
add
and
ljmp
inc
or
and
cmp
mov
js
adc
shll
rcll
xchg
mov
nop
or
pusha
pop
adc
pusha
dec
movnti
ficompl
jae
dec
aam
add
packuswb
xor
mov
out
stos
pop
sub
cmc
sub
push
pop
fwait
nop
fwait
adc
in
mov
divl
push
in
xchg
mov
sub
xor
lods
pop
xchg
decl
mov
xor
xchg
insl
inc
sub
add
xchg
xor
leave
or
xchg
dec
ret
sub
mov
nop
pop
jae
mov
push
xchg
in
sub
inc
mov
cmpsb
xchg
sbb
jge
jle
dec
out
pop
jno
leave
sub
popf
pop
dec
push
loope
pusha
les
icebp
imul
sti
fwait
or
cmp
out
mov
inc
and
int
and
pop
out
das
notl
jmp
jbe
lods
rclb
add
dec
push
sub
mov
int3
jg
lds
addl
lret
lock
imul
mov
push
inc
mov
stos
insl
add
mov
push
test
inc
cwtl
mov
mov
test
cmp
out
hlt
data16
jo
in
push
xchg
jmp
int
xor
fsts
sub
cs
inc
cmc
dec
cmp
xor
sarl
loop
dec
pop
cli
movb
scas
and
cwtl
cld
fidivrs
cmp
outsb
loopne
lds
dec
sti
cwtl
enter
fnstenv
dec
dec
sub
or
lret
loopne
aaa
lods
cmp
push
ljmp
sbb
rclb
rcrl
mov
add
arpl
xchg
es
idivl
push
iret
int3
cmp
push
cmpsb
fistl
ss
sbb
aas
data16
add
and
mov
imul
dec
mov
lret
fdivs
jae
sub
fisubs
or
sub
lock
dec
fstps
sahf
ljmp
pop
or
push
xchg
cmpsb
popf
ljmp
shlb
mov
pushf
mov
push
sub
jle
sbb
jmp
sbb
pop
mov
inc
inc
lods
pushf
mov
sahf
add
sbb
push
call
rcrl
pusha
enter
imul
mov
or
jnp
push
mov
dec
loop
movsl
mov
and
cmp
mov
and
lret
xchg
in
mov
in
push
orb
test
js
push
mov
icebp
and
add
dec
in
mov
xor
or
dec
pop
out
fidivrs
daa
ljmp
mov
jnp
mul
mov
cmp
add
xor
lret
sbb
cmp
sbb
push
loopne
stos
stc
adc
idivb
fmuls
es
mov
jbe
jae
icebp
xchg
imul
dec
call
push
test
jns
fldl
rorl
mov
pusha
shl
dec
cwtl
rcrb
cwtl
mov
dec
fistpl
sbb
xor
push
arpl
lcall
push
ljmp
mov
out
jne
lds
shl
gs
sbbb
mov
xchg
dec
movsb
mov
sbb
jecxz
xchg
daa
gs
mov
popf
iret
jle
xor
xor
test
mov
outsl
or
xor
rol
dec
add
or
mov
aaa
cli
xlat
sub
push
jle
or
jle
inc
adc
cs
sub
inc
push
cwtl
push
lock
repz
pushf
nop
lods
jge
add
cmpb
je
mov
jg
add
mov
mov
xor
adc
xchg
xchg
loope
subl
ja
and
call
ret
std
add
into
xchg
mov
lret
jmp
dec
pop
scas
cltd
es
movl
and
inc
int3
repz
call
jle
dec
lock
push
lds
push
or
leave
test
add
and
jnp
add
jo
insb
cmp
sub
mov
iret
aaa
mov
mov
mov
push
inc
inc
mov
call
decl
sbb
fsubs
iret
sbb
dec
push
pop
xor
cmpsl
xchg
xor
pop
dec
out
lock
mov
sbb
scas
aaa
lock
adc
bound
andb
call
pop
test
pop
xor
add
lock
lock
jge
adc
test
mov
mov
push
inc
fs
dec
push
insl
insb
mov
sub
mov
rcr
lahf
lock
out
cli
rolb
or
addr16
sub
mov
insl
jmp
mov
dec
aas
sbb
or
in
sbb
push
adc
call
xor
sub
sub
pop
pop
sub
dec
push
divl
stc
add
sbb
imul
out
es
mov
rcrb
das
inc
add
sub
shlb
inc
push
jns
xchg
repz
in
mul
mov
jns
pushf
xorl
cmp
stos
outsl
stos
arpl
test
hlt
out
mov
cmp
dec
rorb
mov
je
sbb
jns
xor
mov
mov
xchg
call
sub
mov
mov
pop
cli
push
jb
mov
js
sahf
mov
aam
shl
mov
jnp
xor
shrb
js
mov
bound
lahf
or
sbb
jmp
adc
roll
sub
fidivrs
pop
mov
fs
fxch
flds
xchg
divb
pop
js
in
cmp
mov
fistpl
stos
jns
push
sub
adc
cmc
roll
mov
jne
fcoml
in
xchg
jp
adc
xorb
loop
scas
out
in
mov
repnz
and
test
cmp
sub
lcall
imul
arpl
js
mov
and
xchg
das
add
dec
decb
sub
sub
pop
aas
dec
jl
mov
sbb
mov
pop
and
and
push
xchg
cmp
pop
pop
and
aas
aas
fs
int3
out
inc
dec
fstl
sbb
aam
aam
andl
add
push
mov
push
xchg
sbb
and
push
jno
das
movsl
daa
test
lret
pusha
fidivrl
lret
push
cmpsb
mov
add
lcall
popa
in
adc
pop
les
sbb
aam
inc
rorl
pop
xchg
inc
xchg
push
xchg
std
mov
bound
iret
loope
popf
cmp
jge
cwtl
mov
xchg
push
xchg
dec
in
jecxz
adc
stc
ds
ljmp
mov
mov
leave
xor
xor
ficomps
aam
call
test
mov
mov
push
mov
jmp
lock
rclb
inc
int
and
inc
push
addr16
jno
cld
add
mov
push
ja
cld
das
cmpsb
fstpt
std
fldcw
pop
jno
int3
jp
jle
bound
jne
pop
pop
stc
xor
lret
aaa
mov
push
push
ror
push
pop
pop
mov
sbb
xor
and
mov
fldl
inc
and
push
dec
nop
aam
jp
fs
push
sub
data16
push
push
dec
add
xchg
jmp
mov
mov
and
sub
xchg
dec
popf
cmp
cld
lock
jne
adc
cmp
stc
adc
fstps
sbbb
dec
jnp
jno
and
icebp
mov
stos
pop
mov
sub
mov
jmp
dec
scas
push
decl
xlat
addr16
sahf
in
fwait
rolb
add
in
and
data16
cmpsl
inc
cltd
cmp
or
ret
mov
cmp
out
std
dec
scas
sbb
push
sbb
sbb
in
scas
mov
out
push
jo
addr16
mov
inc
mov
movsb
pop
fsubrl
add
pop
ret
lds
mov
sub
mov
movzbl
mov
shll
pushf
out
loopne
lahf
int3
sub
mov
cmp
mov
popf
popf
xchg
sar
shlb
out
mov
jnp
push
cli
sub
je
out
mov
jae
das
xchg
cmp
mov
movsb
pop
pop
mov
pop
add
cltd
jmp
xchg
sbb
fwait
sub
inc
sbb
loop
mov
push
inc
gs
cmp
flds
jb
ljmp
xor
push
icebp
fs
or
xchg
js
inc
out
cmp
mov
mov
inc
in
scas
lret
pop
xchg
jge
push
popa
push
sbb
pop
xor
or
or
dec
sbb
cmp
add
lahf
add
loopne
int3
jl
aas
pop
push
dec
jg
jle
dec
xchg
dec
ds
mov
add
cmpsb
insb
xor
xchg
cmpsb
jo
add
xor
pop
in
bound
and
movsb
popf
xor
repnz
bts
xchg
iret
stos
loop
mov
xor
jno,pn
add
subl
cmp
add
sub
pop
push
sarb
dec
xchg
cltd
fcmovne
mov
cltd
mov
xor
pop
mov
in
lock
loop
xor
fstp
adc
es
mov
push
cmp
xchg
leave
out
rcrb
test
cltd
mov
push
sub
mov
push
int3
mov
jno
lods
xchg
js
jg
aas
mov
mov
push
ljmp
inc
xor
mov
adc
jle
jnp
sub
repz
inc
inc
outsl
mov
xor
pusha
xor
mov
mov
sub
loopne
rclb
jb
add
pop
dec
xchg
hlt
sbb
in
jae
sub
dec
inc
ds
xor
arpl
jmp
in
sub
inc
mov
push
jge
aad
rcrl
fists
xchg
xchg
jno
pop
xor
mov
sub
inc
shr
arpl
xlat
movsl
icebp
test
xor
insl
sbb
pop
mov
std
cmp
jnp
jle
cmpsb
mov
lcall
sbb
and
xchg
pop
out
nop
pusha
sbb
mov
imul
xchg
fsubrs
mov
popf
mov
add
cltd
gs
dec
lds
dec
cltd
sbb
inc
jmp
jns
cmpsb
add
sub
and
ret
sbb
shll
fldt
in
add
push
fldenv
cmc
iret
sub
adc
inc
ret
cmpl
add
std
adc
mov
xchg
jo
ljmp
repnz
sub
jo
xor
adc
out
dec
mov
mov
dec
pushf
sbbl
mov
fs
cs
popf
mov
cwtl
popf
pushl
std
or
movsb
and
daa
das
fisttpll
sub
repnz
dec
lock
mov
mov
sbb
aam
jae
sbb
fistps
mov
pop
pop
ficoml
sub
add
inc
sbb
loopne
repnz
pop
sub
lret
loope
pop
mov
cmp
adc
cmpsb
int3
mov
push
cmp
mov
mov
out
push
adc
stc
mov
decb
lea
adc
cld
jge
inc
orb
andb
dec
jle
mov
xchg
xchg
mov
scas
fs
sarb
dec
mov
in
dec
mov
notb
loopne
cmp
addr16
or
sbb
sbb
add
inc
dec
xchg
and
mov
push
sbb
mov
mov
lcall
dec
aas
xor
ds
negl
fiadds
adc
insl
stos
ja
mov
in
nop
xchg
xchg
sub
sbb
dec
enter
movsb
loop
xchg
movsb
repz
jmp
xchg
inc
mov
pop
adc
push
jb
and
fisubl
pop
lods
jns
sub
ss
inc
xor
mov
sbb
rorb
sbb
int3
mov
xchg
pop
dec
mov
sub
jno
outsl
and
in
mov
out
inc
dec
popa
mov
adc
push
add
adc
cli
cmp
popa
stos
jbe
mov
and
aas
xchg
repnz
or
add
cld
push
fisubl
mov
gs
stos
pop
mov
repnz
and
lret
lcall
lods
push
push
pop
sub
cltd
fists
fmul
loopne
scas
mov
in
add
dec
into
pop
xchg
in
push
dec
in
cwtl
aas
jp
jb
in
push
pop
cmp
xchg
cmovbe
les
mov
shll
sub
cmp
adc
insb
sub
push
pop
ret
cmp
sub
stos
pop
daa
xor
jne
mov
or
jle
push
adc
add
lret
xor
stos
mov
push
aad
sub
rcl
divb
movsb
pop
mov
sub
aas
hlt
aam
pop
pop
adc
lahf
xchg
push
scas
hlt
popaw
mov
aaa
push
rorb
push
xor
push
aam
sahf
jge
push
das
jo
icebp
out
and
mov
gs
dec
fildll
push
jnp
mov
out
in
cmp
cmp
jnp
pop
mov
sbb
add
stos
xor
sbb
push
cs
and
iret
fisttpll
test
adc
mov
push
das
sbb
das
push
fadds
loop
lahf
mov
jmp
jl
pop
out
roll
mov
adc
adc
daa
rcrl
cmpb
shrb
shlb
xchg
jno
dec
in
test
sub
movq
and
jg
inc
xlat
push
out
int3
ds
adc
dec
push
sbb
push
mov
test
mov
push
into
adc
cmc
ror
cmp
xchg
hlt
test
cmp
jo
mov
sub
mov
mov
jmp
jecxz
test
and
in
jl
jle
lods
jmp
xchg
adc
add
insb
jmp
pop
and
dec
mov
mov
lcall
sbb
xchg
xchg
fcompl
test
stc
ss
loope
cs
out
ret
mov
aad
dec
dec
scas
push
xor
sahf
push
cmpsl
inc
push
jle
call
mov
cmpl
daa
popa
mov
push
loop
imul
rep
and
sub
ljmp
xor
imul
pop
roll
xorl
sbb
add
test
test
pop
add
mov
enter
aam
rolb
push
pushf
dec
ss
cmp
sbb
mov
out
icebp
ja
dec
jbe
data16
adc
mov
jg
pop
jne
popw
lret
sti
cmpsl
sti
pop
xchg
pop
in
mov
xchg
lret
adc
push
lods
jecxz
hlt
lcall
pop
xor
adc
mov
cli
sub
ss
stc
in
adc
cmc
ss
xor
clc
cmp
jns
dec
inc
pusha
jl
call
add
and
mov
mov
and
mov
loope
jns
mov
sub
cli
shll
stc
leave
sub
lods
lods
std
xor
xchg
sub
mov
push
es
xor
add
jg
adc
into
cmp
subb
cmc
insl
cli
sub
pop
fnstcw
cmp
mov
out
insb
leave
enter
xor
call
fcompl
mov
sub
imul
lcall
mov
movsl
aad
adc
xlat
add
mov
push
pop
xlat
outsb
fs
sub
adc
jg
mov
fwait
mov
stos
jo
rolb
orl
clc
aas
arpl
xchg
mov
pop
mov
movl
mov
push
in
jmp
lods
in
mov
or
stos
lea
xchg
shl
in
mov
shrb
inc
dec
mov
sub
aaa
or
mov
or
push
int3
imul
cwtl
shlb
lahf
in
dec
insb
ror
test
in
rolb
add
dec
mov
push
cld
movsl
in
imul
cmpsb
aad
push
inc
packssdw
fwait
popf
fld
mov
mov
cmp
push
int3
sub
aam
dec
movsb
out
xchg
push
inc
push
xor
dec
sub
jae
nop
lret
push
cltd
out
adc
lcall
iret
test
cmp
sub
xchg
xor
mulb
mov
jmp
fsubr
in
mov
lret
jne
out
xor
movsl
pop
mov
shrb
insb
fldcw
add
jle
pop
push
lods
push
aam
xor
mov
in
cmp
mov
jbe
mov
add
inc
inc
dec
mov
imulb
jns
jns
jg
outsl
xchg
inc
cs
dec
or
jns
xor
ret
int3
dec
inc
popa
cmp
pop
ss
shl
jo
sti
fwait
and
in
xchg
fstps
sub
icebp
pop
gs
loope
add
xor
adc
xorb
push
mov
lods
call
loop
rcl
sbb
jge
dec
outsb
popa
push
je
and
test
pop
pushf
and
mov
loop
out
ja
xchg
sbb
cli
ret
shll
pop
jo
sbb
stos
stos
dec
mov
popf
leave
cmpsb
enter
push
xchg
mov
dec
sti
push
dec
add
pusha
adc
lods
loopne
data16
mov
lods
xchg
push
pop
pop
xor
lret
mov
lods
xchg
and
sbb
jno
or
xchg
pop
adc
adc
mov
or
ljmp
shrl
push
das
out
cmp
insb
jge
inc
add
mov
xchg
xchg
cmp
data16
add
in
cwtl
sbb
xor
cld
lock
loopne
icebp
mov
and
xor
mov
xor
sub
jmp
xchg
out
pushf
add
enter
je
call
push
jle
hlt
leave
fs
sti
in
mov
cld
lret
adcb
jle
pxor
sub
std
fildl
lods
sbb
jl
loope
aam
shll
imul
pop
sub
iret
adc
out
mov
daa
loopne,pt
pusha
testl
mov
lods
add
and
iret
jnp
mov
pop
cltd
push
or
arpl
add
xor
lds
lds
cmp
arpl
xlat
or
imul
cmp
jl
testb
in
into
rclb
iret
cltd
lret
push
mov
fucomi
call
xor
in
ss
inc
lds
lret
ljmp
aam
icebp
cmp
mov
popa
js
mov
xlat
insl
sahf
or
mov
jno
inc
nop
test
shlb
or
push
or
fisubrs
dec
fwait
lret
test
lea
int3
jmp
sbb
mov
movsb
and
push
cmp
test
ja
mov
ss
sub
cmpsb
and
js
cmc
xchg
ss
inc
adc
xor
fsub
ja
icebp
popa
push
sbb
cmpsb
mov
fisubl
scas
dec
or
jp
sbb
xchg
gs
add
lahf
inc
subb
call
pop
sub
mov
jnp
inc
stos
out
aaa
push
and
fwait
repnz
out
mov
rclb
mov
loop
dec
mov
lret
out
jo
jb
push
imul
out
lret
dec
pop
cmpsb
out
jne
dec
les
pop
fwait
je
jns
mov
sub
ret
inc
dec
loop
pop
inc
rolb
and
nop
adc
lods
sub
fdivrs
push
pop
xor
push
mov
ror
push
inc
fistpll
stc
dec
aad
pop
mov
fld
sub
ficoml
imul
xchg
outsb
lods
push
scas
mov
jne
popa
jle
mov
dec
xor
xchg
fidivs
xchg
cmp
add
bound
xchg
add
sti
or
ljmp
jmp
in
sub
test
xchg
cmp
fcom
shl
mov
je
es
data16
adc
or
ss
or
add
lcall
movl
lods
data16
addl
mov
ret
push
or
rcl
leave
jg
mov
addr16
pop
std
adc
lock
pop
xor
aas
and
jge
and
in
stos
and
mov
daa
cmc
sub
sbb
sbb
std
stc
arpl
cli
xor
out
jmp
inc
icebp
jae
xchg
xchg
movsb
repz
insl
incb
jge
jnp
dec
sub
xchg
test
dec
fwait
sbb
push
popa
dec
jle
lret
push
add
and
xchg
push
push
dec
pop
jnp
jae
hlt
dec
inc
or
andb
pop
sub
lahf
mov
push
dec
pop
je
mov
dec
scas
push
cmp
stc
jge
fadd
movsl
cmp
or
sti
push
xchg
es
stos
cmp
jbe
push
test
test
sbb
pop
xchg
inc
and
xor
addr16
adc
imul
movsl
pop
xchg
call
mov
jecxz
out
jmp
push
inc
loop
rorl
ror
inc
insl
and
cmp
loope
mov
add
or
das
xchg
dec
or
lods
stos
and
cmp
in
jg
sbb
imul
pop
negb
push
in
xchg
ficomps
mov
jae
xor
loopne
lret
test
int3
aad
add
lods
inc
xchg
fcompp
xor
xorl
mov
mov
add
inc
xor
add
adc
insb
cwtl
ljmp
fdivp
xchg
jo
mov
loope
fidivl
jecxz
or
xchg
mov
or
jns
add
rcrl
push
shr
sub
mov
dec
sbb
fcoml
push
or
pusha
mov
aam
fnsave
in
fs
add
rolb
mov
sbbb
xchg
mov
cld
or
sub
in
gs
cmp
dec
pop
aas
leave
stc
dec
int3
imul
faddp
imul
and
and
push
push
sub
outsl
loop
and
mov
push
ficoml
xchg
pop
std
cmp
test
cmc
pop
xchg
push
outsl
xlat
popa
jne
lea
and
aas
mov
inc
pop
sub
movb
sbb
mov
mov
add
push
outsl
int
call
pushf
inc
fstpl
ret
bound
nop
sbb
add
fstps
in
lcall
xor
mov
cltd
inc
sub
jp
pop
aas
cmpsb
mov
mov
adc
rcrb
sbb
mov
push
sahf
push
nop
jae
in
aas
dec
ret
mov
mov
test
mov
xchg
sub
nop
mov
pushf
outsl
lods
stc
adc
int
jmp
mov
rcrb
xchg
ret
mov
jp
jp
inc
mov
xchg
add
std
add
imul
and
leave
cmc
insl
test
mov
and
ret
repnz
je
adc
arpl
pusha
lahf
xor
cs
aas
pop
inc
subb
dec
mov
jns
ss
mov
cwtl
sti
repz
pop
int3
sbb
lahf
mov
pushf
inc
test
dec
xchg
adc
inc
inc
mov
sbb
push
dec
and
xor
imull
in
inc
mov
ljmp
fldt
sahf
pop
add
ret
pop
jns
je
in
mov
cld
xlat
jne
into
stc
cmpsl
repz
dec
cmp
mov
stc
scas
lea
push
lods
lea
sub
add
fldcw
jl
xor
movsl
cmpsb
cwtl
push
xor
lahf
pop
pop
adc
push
bound
push
test
xor
lods
push
popa
out
scas
in
add
in
cmp
loope
loop
cmp
enter
mov
leave
mov
stc
dec
or
push
lcall
xchg
in
sub
enter
sub
movsl
scas
aaa
add
mov
lcall
jmp
loop
sbb
repz
movsb
dec
cmpsl
and
xlat
int
fstl
loope
lahf
negb
jns
adc
cmp
lods
imul
mov
ret
aaa
sub
scas
daa
xor
jmp
add
mov
push
lods
das
cmp
fmuls
aam
and
fcoml
push
mov
push
clc
addl
inc
push
jecxz
sti
outsl
daa
mov
and
loop
and
mov
adc
cld
das
push
cmp
mov
cmpsl
mov
lods
cmp
and
xchg
movsl
adc
jge
adc
insb
push
out
mov
test
aam
test
fbld
sub
popf
mov
fcmovu
xchg
mov
jge
cmp
movsb
pop
icebp
jmp
push
xor
mov
adc
decl
jmp
ss
rolb
sub
out
mov
sbb
fsubrl
cmpsb
cli
cmp
test
ret
xchg
jmp
mov
insl
xor
mov
sbb
movsb
int3
sbb
leave
jae
pop
aas
xlat
into
push
lods
jno
xchg
je
mov
mov
daa
mov
mov
lret
xchg
daa
ja
mov
iret
add
nop
scas
mov
push
cmp
dec
lret
mov
xchg
stos
jno
add
inc
flds
adc
inc
cmp
mov
cld
out
andl
push
dec
fstl
loopne
push
pop
fisttps
les
adc
int3
insl
ret
add
cmpsl
aaa
mov
outsb
daa
ja
inc
inc
sub
mov
mov
repnz
and
pop
ds
mov
out
cmp
loopne
notl
popa
push
cltd
or
stos
pop
mov
adc
jns
pop
or
popf
shrl
es
jmp
lret
pop
cld
pop
mov
cltd
dec
int3
nop
sub
ret
popa
mov
mov
ss
add
lock
sbb
mov
fsubl
std
mov
out
push
loop
out
mov
mov
sub
dec
sub
lahf
rol
fldt
dec
mov
cli
sub
adc
in
push
cmpsb
add
shr
ds
push
sbb
xlat
and
push
inc
pop
push
push
arpl
fcomip
inc
bound
sub
cmc
inc
stos
xchg
fimull
push
mov
mov
out
jge
outsl
xchg
test
xchg
cli
and
movsb
add
movsb
sub
cmpsl
pop
pop
arpl
and
inc
iret
xchg
testl
test
call
push
cli
add
xor
adc
dec
pop
aas
les
notb
sbb
mull
mov
sahf
jo
in
inc
xchg
adc
int
push
in
lea
mov
shll
xlat
movsl
out
ret
and
push
dec
jge
jns
and
pop
arpl
hlt
bound
ds
lahf
jge
push
movsb
subl
das
pop
cmp
push
xor
push
inc
jnp
inc
sbb
cltd
cmp
scas
outsb
cmc
sub
fdivl
call
push
cwtl
scas
push
pop
hlt
nop
inc
and
fsts
push
inc
or
frstor
arpl
mov
add
jmp
aaa
dec
sbb
movsb
jbe
inc
or
push
int
mov
test
inc
lods
cli
xchg
loop
cmpsl
jg
popf
movsl
je
aad
mov
jne
rcr
out
inc
ja
pop
nop
add
sahf
jns
inc
fisttpl
dec
mov
push
mov
out
or
inc
mov
fstpl
movsl
cli
inc
lahf
cmpsl
stc
xchg
nop
pop
inc
icebp
push
adc
lahf
inc
scas
or
aas
sbb
fimull
sbb
es
jbe
adc
xor
ja
loop
sub
jl
pushl
pop
repnz
adc
mov
sbb
daa
shlb
sub
addr16
in
jne
inc
int
divl
xor
xchg
mov
pop
into
sti
sbb
es
sub
outsl
imul
lds
pop
fists
cmp
std
add
mov
push
mov
je
add
les
xor
call
jg
mov
sub
lcall
std
dec
flds
insb
mulb
xchg
pop
mov
adc
lret
push
stos
fnstenv
mov
out
fsubrs
dec
in
cmp
dec
ja
arpl
pop
shr
jecxz
movlps
test
xchg
loop
adc
xchg
add
shlb
cmpsl
cmp
sti
cmpsb
pop
insb
ret
pushl
lods
iret
clc
aam
popa
lret
push
mov
mov
mov
lahf
fdivl
aam
mov
cmp
xor
mov
faddl
in
fwait
sub
push
mov
push
dec
mov
bnd
pop
jge
ds
mull
scas
pop
or
ror
adc
mov
xor
pop
ljmp
lods
lods
iret
cmp
into
loopne
xchg
push
pop
adc
scas
push
jecxz
setb
sub
sbb
insl
jno
pop
dec
add
ret
stos
outsb
adc
popf
inc
add
push
fldl
inc
pop
mov
cwtl
sbb
jecxz
or
dec
outsb
scas
loop
or
cmp
xchg
out
in
add
mov
xor
add
mov
out
sbb
outsb
test
scas
mov
call
pop
sahf
dec
adc
movsl
scas
inc
rol
rorb
push
rcrl
sarb
sbb
or
popa
sbb
lcall
stos
ja
das
out
jg
jp
pop
xchg
ret
push
pushf
and
mov
cli
lcall
scas
dec
neg
arpl
add
lret
mov
fldcw
mov
das
aad
inc
sub
adc
fldt
rcrl
imul
xchg
popa
xchg
and
ss
lret
push
mov
adc
mov
xacquire
inc
cltd
loopne
and
test
push
add
test
js
stos
andl
ljmp
mov
mov
pop
adc
xor
xchg
pushf
lcall
ds
aam
mov
insl
sbb
xchg
push
mov
mov
sub
jg
out
xlat
arpl
scas
dec
movsb
mov
dec
iret
xchg
mov
xor
sbb
insl
cmp
ss
mov
imul
fs
pop
divb
mov
out
aas
jge
sbb
cmp
out
cmp
outsb
pop
test
cmp
or
std
enter
mov
sahf
lock
or
repnz
or
je
xor
cmp
or
mov
fmuls
movsl
inc
inc
xor
xor
cmp
fdivr
rcll
popf
cmp
push
in
xchg
or
cwtl
pop
fiaddl
lea
mov
and
jp
aaa
inc
stos
pushf
xchg
push
pop
aas
push
jmp
insl
les
and
push
jmp
bnd
faddl
sahf
push
add
pop
dec
mov
mov
and
dec
test
mov
pushf
cld
lret
adc
in
adc
insl
adc
jmp
cwtl
dec
ss
fidivs
push
sub
andb
push
out
in
sub
add
xchg
orl
dec
sub
pop
mov
cmp
xor
xor
fidivs
xor
mov
mov
ficompl
jg
shl
xchg
mov
inc
or
popa
dec
iret
imul
movsl
pop
test
xor
fstps
pusha
push
mov
push
inc
pop
cmpsl
cld
add
inc
mov
gs
call
ds
xchg
cmpsb
mov
mov
xlat
adc
mov
aaa
in
push
adc
add
aas
pusha
sub
xchg
pop
cmc
xor
lods
jo
data16
push
mov
fldt
jmp
mov
ret
outsb
rcl
add
push
test
jl
fisubrl
dec
sbb
mov
mov
cli
leave
mov
jmp
test
dec
andb
lods
pop
cld
scas
iret
jg
sti
int
adc
sub
imul
cld
fstl
aam
shll
in
cmpsl
or
jno
jno
iret
mov
hlt
mov
add
mov
imul
stos
pop
sbb
jle
push
cmpsb
inc
je
lret
aam
les
sub
mov
test
fsubrl
divl
in
xor
data16
test
int3
es
mov
mov
cld
stos
add
iret
std
or
repnz
test
mov
or
movsb
test
sbb
lods
pop
hlt
les
ret
mov
fnstcw
mov
dec
movsb
pop
lods
rol
call
std
fcom
nop
lahf
subb
mov
sub
mov
push
add
lret
ds
add
or
mov
and
xchg
and
add
adc
mov
lea
push
fs
pushf
mov
add
xchg
mov
adcb
and
dec
mov
lods
pop
test
inc
movsb
push
and
xchg
adc
xchg
mov
or
pushf
xor
sbb
leave
dec
adc
pop
xchg
sub
mov
sti
mov
jns
fidivl
pop
ja
popf
stos
xchg
bound
sbb
out
pushf
dec
sbb
in
shlb
gs
movl
sti
sub
lcall
in
das
mov
aam
add
inc
test
out
mov
jo
lea
jns
mov
cld
cld
flds
add
pop
mov
fisttps
push
leave
xor
lcall
push
loopne
subl
cli
subl
cmp
iret
adc
xorl
fidivrs
cmc
adc
lcall
pop
sbb
into
or
aaa
sti
je
aad
lret
ljmp
xchg
andl
mov
and
stos
jb
mov
sbb
pop
out
test
add
jae
frstor
add
adc
dec
mov
idivl
add
pop
loopne
add
dec
jbe
std
in
iret
and
mov
arpl
cltd
les
add
xchg
xor
in
mov
adc
or
push
mov
shr
sbb
inc
jnp
lret
mov
mov
mov
mov
add
mov
pop
lahf
mov
pop
xchg
push
mov
ljmp
scas
jmp
repnz
and
sub
pop
adc
adc
adc
sub
jo
repz
jbe
push
loop
fwait
mov
sbb
mov
pop
pushf
pop
xchg
inc
outsb
fmuls
sub
lcall
lret
sub
movsl
add
pop
jo
mov
fmull
rsqrtps
cltd
punpckldq
push
imul
cld
add
pusha
jp
nop
cmp
push
loope
jnp
cmp
or
xchg
inc
mov
stc
or
in
repz
leave
xchg
mov
inc
push
fcmove
insl
mov
jle
jmp
inc
or
fs
stos
jecxz
jo
push
in
sbb
fisubrs
jae
lea
mov
insb
and
lods
loopne
push
cmc
lods
jmp
outsl
xchg
test
in
xchg
stc
mov
cmpsl
xchg
jb
xchg
mov
outsl
mov
xchg
hlt
cmp
ret
push
mov
cwtl
out
ljmp
stos
mov
push
mov
xchg
cmp
test
test
in
pushf
jne
cli
cwtl
lea
fcoml
sbb
fstps
or
aaa
cmp
aam
adc
in
sahf
lret
lahf
loopne
test
adcl
sub
push
cmpl
push
inc
repz
cmp
push
cs
mov
xor
pop
cltd
cli
mov
adc
fadds
inc
adc
jmp
aaa
incb
or
mov
cmpsl
call
sbb
pop
inc
test
cld
pop
mov
shlb
xchg
sub
cld
mov
sbb
pop
ss
jp
sub
cmp
lcall
cmpsb
stc
or
pop
repnz
pusha
mov
inc
pop
lods
cmpsb
bnd
push
ds
jb
adc
iret
add
cld
cmp
test
test
push
ret
push
sbb
ja
sub
lret
add
fadd
popa
movb
out
out
je
push
rcll
mov
mov
ds
mov
jbe
xor
sub
pop
cmp
call
dec
cmp
rorb
negl
xorb
mov
cmc
jle
cmp
rcrb
mov
mov
adc
call
sti
aaa
sub
add
sub
mov
dec
adc
jl
cmp
add
data16
lods
loop
test
lea
mov
pop
jl
sarl
cld
dec
lcall
std
fnstcw
adc
pushf
xchg
sti
mov
cmp
pushf
jb
pop
scas
and
pushf
sarb
add
movsb
insb
xor
and
dec
inc
cwtl
xchg
icebp
jnp
das
sub
dec
div
sub
outsb
pop
jno
repz
in
enter
inc
adc
stc
scas
inc
insl
sahf
add
cmpsb
cmp
cmp
or
xchg
and
shr
fstpt
sub
sti
pop
sbb
adc
sarl
sbb
xchg
aam
jg
movsl
into
lods
pusha
mov
aas
aad
cltd
jecxz
cmp
xor
inc
add
addb
mov
mov
pop
mov
repz
mov
fistpl
sub
pop
test
mov
adc
and
loope
fwait
push
enter
push
std
or
jmp
loopne
mov
xor
push
jbe
les
dec
rcll
jl
aas
int
sub
inc
arpl
jbe
ss
shlb
arpl
or
cmp
pop
mov
jp
pop
popa
hlt
fisubs
mov
sub
xchg
add
and
inc
std
push
push
mov
and
mov
into
lret
mov
imul
jno
and
subb
xchg
mov
xlat
sbb
call
fwait
stos
roll
push
scas
out
fwait
aam
mov
and
and
mov
call
sub
out
cmp
pop
loopne
push
mov
inc
mov
call
push
sarl
dec
repnz
es
subb
cmp
mov
test
dec
xor
dec
pushf
mov
in
mov
sbb
dec
sub
push
ljmp
pop
fidivs
mov
rolb
jne
out
jno
les
in
movsl
xor
pusha
or
or
jp
xor
in
mov
mov
inc
data16
cmpsb
xchg
or
iret
sbb
out
or
cmp
dec
ret
and
mov
fbstp
push
and
xchg
insl
mov
push
je
out
shrl
pop
or
push
mov
lock
sub
mov
xor
mov
mov
sbbb
dec
push
cmp
loop,pt
add
jnp
pop
mov
pop
ss
xchg
ja
inc
and
cs
out
cltd
test
ficompl
lds
push
into
jbe
jns
rcl
mov
sbb
pusha
adc
ja
jbe
sbbb
and
cmp
dec
jb
cs
cmp
test
jns
adc
sub
sti
jo
rcl
pop
and
or
mov
xor
add
mov
arpl
cmpsb
xor
fsubl
pop
mov
jle
fcom
xor
push
xor
cmp
push
xchg
cs
stos
scas
jnp
fwait
pop
out
inc
or
lret
cltd
or
and
loop
inc
fsubr
add
inc
or
xchg
jns
mov
jle
cli
cld
xchg
jge
add
jle
das
sahf
gs
mov
repz
pop
mov
mov
iret
mov
push
pop
imul
outsl
pop
cmp
push
leave
ljmp
std
jne
push
aas
out
or
leave
mov
jne
leave
mov
and
adc
add
mov
or
pop
ja
mov
lea
pop
dec
push
jbe
imul
outsb
push
or
test
dec
shll
or
shll
iret
lock
pushl
sbb
fs
les
lock
movsb
inc
hlt
das
fnstsw
push
out
mov
sbb
ljmp
imul
stc
cmp
mov
pop
movsl
fsubrp
lea
nop
or
movsb
call
nop
popf
pusha
imul
dec
mov
mov
push
mov
outsb
mov
push
lods
ss
mov
jo
jne
popa
sar
das
fwait
pop
scas
cltd
mov
insb
push
and
jecxz
and
or
or
push
inc
xchg
dec
push
cmpsl
push
cmpsb
pop
push
repz
lock
jmp
mov
ror
rol
movsb
call
sar
sub
lcall
add
push
sbb
sub
stc
sub
jne
lods
in
inc
popf
pop
jno
pop
cltd
adc
daa
lods
lock
push
ja
mov
sbb
and
mov
nop
imul
test
aaa
sub
iret
aad
sahf
lock
fldl
mov
push
insb
and
sub
mov
sbb
imull
pop
hlt
loopne
adc
sbb
push
sub
cmpsb
cmp
add
push
pop
std
imul
ret
sahf
jl
jl
aas
fldl
aaa
nop
mov
and
pushf
in
push
sbb
add
mov
dec
testb
rcrb
test
mov
inc
mov
fbstp
cltd
inc
push
sahf
mov
mov
clc
xchg
or
es
push
fidivs
adcl
mov
dec
stos
sbb
xor
pop
rolb
add
out
fbstp
scas
push
std
cmp
inc
or
lcall
mov
mov
push
leave
pop
push
cld
loope
mov
add
ret
and
movsl
adc
or
insl
out
in
sti
push
lret
push
pop
pop
push
pop
jp
leave
cwtl
mov
sub
pop
neg
out
pop
lds
fsubrl
push
mov
mov
call
jne
add
leave
mov
jle
xchg
in
je
pop
in
xchg
xchg
push
push
cmp
out
ljmp
xor
inc
mov
clc
insb
scas
mov
sub
fisubrl
jns
divb
fistl
inc
mov
testb
push
pushf
insb
inc
jmp
and
cmpb
pop
dec
jmp
lods
xor
frstor
cmpsl
dec
xor
test
adc
mov
mov
nop
leave
mov
jns
adc
and
adc
repnz
pop
xchg
and
lcall
imul
cmc
popa
add
js
or
xchg
das
push
push
jb
in
loop
push
dec
ficoml
cmp
adc
scas
xchg
or
mov
or
cmpsb
fidivl
jmp
test
stc
add
jp
and
jle
cmpsb
and
stos
mov
stc
cmp
gs
rolb
cli
mov
out
insb
mov
repz
dec
lret
jg
xchg
dec
lret
mov
mov
pop
sub
rcl
mov
sbb
lds
jecxz
stos
loope
mov
addr16
mov
nop
jmp
out
out
mov
sar
ja
lock
imul
or
mov
sbb
sti
lret
test
aam
adc
jl
movsb
fildll
or
stc
bound
and
aam
sbb
or
test
dec
daa
shlb
mov
jmp
pop
inc
sbb
aas
out
int3
cmpl
push
fs
add
das
dec
jg
imul
mov
pushf
jp
stos
add
jno
imul
jo
sub
jno
xchg
push
in
jmp
das
sbb
paddw
aam
push
das
jne
cs
jl
sbb
hlt
xlat
flds
mov
mov
pop
adc
mov
mov
push
paddw
imul
inc
pusha
into
jl
sbb
push
cltd
fcomi
xor
cmp
mov
cltd
in
aaa
stos
dec
add
inc
cmp
jmp
sbb
arpl
cmp
mov
call
jge
adc
mov
jp
outsl
sub
test
mov
and
fistpl
pop
xor
stos
mov
call
inc
notl
in
icebp
jp
pop
stos
pop
shlb
cltd
jo
inc
and
pop
jno
xchg
dec
cmp
dec
pop
loope
fdivp
jmp
sub
xchg
cmp
mov
mov
repnz
or
xchg
pop
or
jo
push
gs
mov
enter
sbb
or
sbb
mov
xor
xchg
mov
lahf
mov
jno
mov
scas
xchg
mov
sub
roll
adc
dec
pop
mov
sub
popf
pop
dec
int
popf
cmpsl
jae
sbb
pop
inc
adc
xchg
cltd
leave
fsubl
sarl
insb
neg
adc
arpl
cli
or
push
hlt
sbb
sbb
leave
sbb
bnd
jl
adc
fldl2e
mov
pushl
cmp
dec
push
les
mov
jne
hlt
mov
lock
iret
push
mov
lcall
ds
mov
mov
push
push
rolb
cmp
div
adc
add
sbb
push
movsb
mov
fiaddl
fisubrl
movsl
pop
push
outsl
shrb
lahf
mov
or
pop
mov
in
dec
sar
sbb
fdivr
scas
jmp
sahf
jnp
enter
loope
and
sbb
xchg
push
jg
movsl
repz
jne
repnz
and
inc
ficoms
rcrb
and
repz
bound
sub
jne
in
push
inc
mov
xchg
or
int3
out
xor
call
fidivrl
mov
sarl
dec
sbb
cmp
cli
out
mov
int
cmp
inc
jge
sub
xchg
pop
mov
daa
pop
in
arpl
xchg
andl
insb
loope
xor
jb
repz
push
push
pop
cmpsb
sbb
outsl
pop
sbb
stos
jb
mov
test
xchg
jmp
add
jnp
jl
cltd
mov
sbb
xchg
es
out
icebp
aam
jno
dec
out
and
add
sbb
sbb
or
movsl
mov
pop
scas
mov
mov
mov
decl
push
adc
stos
insb
and
sub
mov
dec
stc
outsl
dec
mov
cmpsb
jbe
repz
nop
push
in
mov
cmp
adc
add
insl
dec
inc
negb
sbb
jge
inc
xor
pop
lods
sub
scas
aam
ljmp
push
sti
cmpsl
iret
std
aam
rcrb
or
popa
js
or
loop
jl
and
stos
in
pop
add
out
jbe
repnz
into
pop
and
flds
adc
mov
enter
incb
dec
stc
push
outsl
xchg
subl
jbe
outsb
push
in
xchg
ss
inc
mov
aas
adc
mov
outsb
ja
lret
mov
shrl
mov
pop
inc
std
clc
mov
pop
bound
insb
fwait
lds
mov
pop
push
jge
nop
xor
or
mov
inc
lret
jge
sbb
popf
push
sarl
mov
xchg
aam
lods
mov
jbe
in
lods
dec
insb
jae
arpl
and
inc
xlat
jecxz
cmp
xchg
fs
mov
jmp
adc
sub
add
insl
sarl
sbb
xchg
sub
mov
push
adc
push
into
das
rcl
jecxz
out
adc
sub
sub
pusha
test
xchg
outsb
xor
mov
xchg
imul
insb
sub
sub
xor
mov
adc
mov
mov
out
popa
test
adc
mov
shlb
cwtl
xor
xor
adc
mov
jmp
inc
mov
cmpsb
outsb
nop
jecxz
out
es
xchg
xchg
mov
test
movd
into
inc
mov
jnp
test
mov
jmp
push
push
add
xorb
mov
add
mov
insl
mov
stc
mov
jo
repnz
ljmp
js
ja
in
jbe
gs
std
push
adc
int
cld
mov
or
jb
outsb
js
mov
sub
dec
repz
pop
mov
popl
fcom
sub
fwait
add
fcoms
test
movsl
add
cmp
fcoms
cltd
lods
lahf
cmpsb
popf
addl
jecxz
daa
and
cmp
push
mov
mov
ds
mov
mov
adc
add
mov
out
shl
call
cmp
ss
xor
push
or
push
and
sbb
lahf
fcomps
orl
stos
jnp
push
xlat
dec
lcall
inc
roll
pop
in
les
xor
aaa
mov
shlb
ret
stos
adc
subl
sub
add
and
pusha
jb
mov
je
jnp
pop
loopne
and
pop
rolb
aas
inc
mov
sub
dec
je
test
aad
cmp
dec
into
aaa
sbb
popf
mov
xor
ss
fcomps
ss
add
add
xor
stos
add
cmp
pop
inc
call
mov
mov
inc
shrl
mov
cmp
push
in
sub
addb
or
cmpl
mov
xchg
call
inc
adc
xor
lcall
test
sbb
or
mov
mov
imul
mov
add
or
mov
fistpl
test
or
inc
into
inc
pop
pop
shlb
adc
add
out
insl
roll
loopne
mov
cmp
outsl
xor
test
daa
test
stc
mov
imul
push
sbb
and
sbb
mov
cmp
test
int3
mov
lock
stc
xlat
dec
addr16
sti
stos
and
and
cmc
dec
add
sub
je
add
pushf
xor
xchg
ljmp
mov
mov
push
nop
mov
sub
pop
jae
ret
fdivrs
xor
xchg
push
adc
loop
mov
enter
scas
cmp
mov
out
sahf
outsb
and
mov
scas
pop
in
insb
movsl
addl
imul
movsb
inc
mov
testb
iret
loope
pop
je
push
nop
xchg
js
sbb
call
lds
or
mov
and
cmp
push
testb
and
adc
pop
sbb
xchg
pop
xor
mov
aaa
lock
and
xchg
or
push
xchg
dec
jo
xchg
sbb
aad
dec
pop
repnz
sbb
test
xchg
movsl
fstpt
inc
mov
lods
pop
std
pop
aam
pop
mov
repz
push
clc
fisubrl
xchg
sub
loopne
xor
test
ret
cmc
mov
jns
mov
cmp
leave
adc
int3
or
fisttpl
lock
mov
or
sbbb
jp
mov
andl
and
fsubrs
cwtl
andb
mov
mov
and
icebp
push
fucomp
push
add
stc
not
fs
jo,pt
test
dec
lock
pop
rolb
push
cmpsb
xsavec
dec
shr
xchg
dec
mov
push
push
cld
lret
es
ret
add
mov
sbb
shlb
lahf
inc
inc
mov
jmp
mov
lret
add
stos
sbb
in
push
xchg
mov
mov
lret
xor
ret
test
arpl
outsb
inc
outsb
ljmp
loop
sbb
pop
pop
cwtl
sub
pop
mov
mov
pop
xchg
push
pop
mov
adc
inc
sbb
pusha
xlat
sub
inc
xchg
std
xchg
and
ja
pop
pusha
js
dec
insl
add
mov
stc
and
das
in
in
clc
mov
xor
aaa
arpl
dec
std
jbe
pushf
pop
loope
xchg
leave
or
insl
mov
dec
mov
sub
add
mov
mov
dec
adc
fidivs
cld
push
xlat
add
add
or
mov
jae
cmp
gs
pushf
out
test
cmpl
or
dec
inc
into
out
jbe
pop
mov
inc
dec
clc
jmp
fwait
mov
gs
cmp
sbb
and
xor
mov
les
ret
lea
adc
les
inc
xchg
int
pop
imul
and
daa
sbb
out
insb
lods
lret
jl
cmpsb
icebp
lahf
inc
xor
mov
and
sahf
adc
fsubrs
sbb
push
lea
mov
mov
push
lcall
jno
out
xchg
int
loope
sub
xchg
mov
and
adc
ret
cmp
pusha
mov
cmp
mov
push
fstl
xorl
int3
orb
arpl
mov
push
je
jg
je
aad
jbe
ficompl
push
adc
mov
pop
addb
sbb
push
add
repz
push
lock
cmp
mulb
cmp
cmpsb
add
int3
jae
fwait
arpl
pop
sub
mov
outsb
mov
aad
fisttps
in
jl
inc
icebp
repz
or
test
inc
jae
sub
dec
mov
mov
xchg
sub
jge
dec
mov
ja
cs
leave
cmp
test
popf
test
ror
insl
popf
aam
stos
bound
pop
xlat
and
cmp
mov
scas
iret
ret
aad
lds
sahf
sbb
sbb
mov
and
jns
pop
jne
repnz
js
jne
repz
aam
negl
or
mov
and
push
fsubs
imul
xchg
or
sbb
je
adc
fistl
lret
sub
lods
and
xor
xor
loop
jo
jno
push
aaa
mov
and
dec
mov
xchg
sbb
or
cmc
fcomi
idivl
sti
or
hlt
adc
or
inc
ficoml
sbb
mov
add
push
fistpll
pop
inc
push
and
in
ret
dec
push
pop
xchg
mov
loope
hlt
bound
xchg
daa
adc
pop
mov
or
cli
or
sub
loop
mov
xchg
pop
sub
xor
loop
lret
push
mov
aas
and
mov
lret
mov
int
test
sub
cmc
xchg
pop
sbb
cmp
sbb
xor
lret
lret
ss
aad
sub
out
pop
lret
sub
and
stos
ret
mov
test
ja
aas
inc
subb
mov
fwait
clc
sahf
jp
jnp
mov
mov
das
jne
shr
repz
mov
jbe
adcl
xchg
aas
out
cmpsl
adc
leave
loope
xor
mov
adc
pop
gs
icebp
add
and
int3
push
dec
cwtl
bound
push
movhps
repnz
and
mov
push
mov
jns
add
loopne
cmp
insb
outsb
add
or
dec
and
push
or
cmp
out
mov
stos
aas
xchg
stc
out
jns
sbb
andb
out
push
out
push
jb
jg
xchg
scas
mov
jp
aad
cli
xchg
and
adc
jnp
orl
mov
lahf
inc
clc
ljmp
imul
xchg
lret
push
and
and
pop
xchg
lret
in
sub
dec
les
insl
and
out
add
or
imul
lret
mov
mov
pop
clc
cmpsl
pop
popf
dec
scas
sahf
scas
mov
mov
divl
or
inc
loop
pop
or
je
add
pop
sbb
xchg
iret
out
sub
xchg
lret
ficoms
ret
mov
sub
and
inc
stos
inc
stos
sbb
add
iret
out
jb
pop
push
ja
or
fnstsw
xchg
cld
pushf
repz
add
xor
push
pop
mov
dec
jne
jmp
loope
jo
cs
jns
outsl
lock
push
push
adc
nop
jnp
jg
adc
pop
hlt
add
mov
xor
in
rcrl
sbb
dec
add
and
cmpsl
testl
push
call
aad
std
iret
push
out
xor
dec
sub
iret
cwtl
cmp
lds
pop
rcrb
rcrb
add
stos
repz
sub
mov
sub
cmp
lock
je
lods
adc
sub
push
adc
imull
pushf
jecxz
cs
stc
pop
add
lods
fcomps
daa
push
out
iret
and
add
mov
das
sub
xchg
fidivrl
adc
pop
mov
and
adc
ljmp
nop
sbbl
pop
subb
sbb
mov
push
cmpsl
outsb
add
in
sub
in
adc
add
push
jnp
popf
jp
mov
cmp
stos
lds
int3
push
cmp
es
push
cs
cltd
lahf
jle
lret
sbb
sub
dec
mov
xor
pusha
mov
lahf
ret
cltd
fisubl
push
dec
sub
xchg
jp
jl
sbb
fsub
adc
xchg
test
repz
sti
nop
add
add
inc
fs
call
aam
adc
test
and
adc
aam
out
lods
xchg
jp
dec
and
xchg
jge
popa
jle
mov
icebp
jl
adc
mov
repnz
jge
cmp
cmp
mov
adc
fs
subl
leave
lea
xchg
mov
inc
and
sbb
jl
xchg
ret
xor
dec
mov
in
dec
ds
adc
add
lods
xorb
xchg
xor
les
in
dec
dec
ret
outsl
dec
jbe
xor
add
dec
mov
mov
loop
jp
enter
push
shrl
xchg
push
inc
std
out
imul
cmp
lret
inc
jno
sbb
mov
jle
adc
test
mov
stos
sbb
jecxz
not
adc
push
add
jns
pop
xor
push
mov
xor
imul
rcll
dec
fcoml
ss
fdivp
das
sbb
jmp
push
pop
xchg
aam
fwait
inc
mov
ja,pt
clc
shll
js
sbb
in
insl
xor
int3
jo
adc
dec
push
mov
xor
dec
es
add
addr16
cs
pop
aad
repz
fs
fisubrs
ret
dec
add
js
scas
mov
sbb
jne
cwtl
xchg
sbb
insb
icebp
sbb
out
fcomip
jae
xchg
pop
rcrb
arpl
and
cmc
dec
xor
dec
cmp
sub
sahf
addr16
sbb
fnstsw
inc
rcrb
jmp
jl
jno
out
pop
cmp
into
cmpsb
inc
add
in
push
mov
xchg
rclb
push
add
roll
cmp
fists
mov
xchg
aad
add
jge
mov
jae
sbb
call
ljmp
dec
adc
pop
insl
leave
ljmp
ret
pop
popa
jnp
jmp
push
outsl
push
js
fucom
cmpsl
sub
cmpxchg
push
rcrb
pop
add
jno
out
out
fimull
hlt
imul
xchg
pop
mov
fstps
adc
mov
mov
mov
add
pop
xchg
adc
xchg
mov
arpl
xchg
lahf
cmp
test
xor
popa
and
shrb
into
cli
orb
cld
es
pop
leave
rol
les
mov
and
aaa
jmp
fdivrl
out
imul
repnz
pop
pop
xor
ss
dec
push
add
inc
test
das
out
fdivl
xor
mov
mov
cmp
xchg
jg
idiv
dec
in
inc
xor
cmp
lods
in
cmp
popa
stos
scas
lahf
xchg
cmc
aas
and
jns
mov
mov
pusha
adc
movsl
sub
lcall
sub
xchg
outsb
loop
loop
or
pushf
cli
movsb
dec
sub
push
cmpsb
xor
cmpsl
enter
in
out
fisttpll
jg
pop
adc
xchg
inc
loopne
clc
jbe
negl
fsts
leave
fwait
out
add
loopne
stos
out
sbb
outsl
lahf
sti
jmp
jmp
aam
sub
mov
add
dec
lds
and
aaa
cld
xchg
out
add
pop
sub
popa
cmp
jb
mov
sti
testl
pop
jb
fistps
pusha
aam
int3
ss
jl
lock
or
lea
lret
ret
lds
pop
clc
int3
cmc
movsb
mov
xor
add
gs
dec
gs
js
xor
ret
jns
dec
test
push
jns
daa
add
jno
xchg
mov
sarl
cmp
popa
push
loop
out
push
imul
push
and
rcrl
lret
mov
shlb
mov
dec
push
in
stc
add
in
mov
or
mov
mov
xor
jo
aaa
inc
cmp
iret
cwtl
gs
or
mov
pop
cmp
ds
xor
and
pop
dec
mov
jl
jnp
add
lcall
bound
mov
cmpsb
mov
ja
pusha
cltd
pop
sub
mov
xchg
fmul
cmpsl
jae
leave
push
jnp
nop
jo
or
mov
xchg
lock
jb
push
inc
push
sahf
dec
loop
cltd
movsl
scas
push
inc
lret
xchg
mov
cmp
inc
cwtl
ljmp
mov
in
lock
lret
inc
mov
stos
loope
int3
js
icebp
and
jnp
sbb
sub
mov
and
add
xchg
nop
into
or
and
jp
imul
lea
arpl
or
xor
pop
mov
repnz
ss
es
mov
dec
out
outsb
push
push
out
mov
sub
lret
xchg
cli
addb
mov
cwtl
push
movsl
ss
sbb
mov
jae
push
mov
jno
daa
mov
mov
cmp
repnz
lcall
adc
pusha
out
fnstsw
mov
adc
and
push
dec
fildll
ds
lret
bound
cmp
and
jp
mov
inc
sbb
jge
call
bound
insl
adc
je
test
ret
cmp
or
mov
mov
pop
cmp
rorb
stos
fldcw
inc
cs
iret
int
adc
out
sbb
addr16
xchg
shlb
jbe
jecxz
push
in
xor
sub
fs
leave
fcom
addb
fcomp
fisttps
jae
cli
icebp
cltd
mov
xchg
sub
lret
adc
ret
xor
movsb
sub
pop
cmc
pop
test
dec
shlb
lcall
dec
mov
xchg
add
dec
xor
pop
stos
in
sbb
pop
jae
bound
xor
mov
cli
enter
mov
nop
aad
sub
ja
bound
shrl
mov
adc
popf
cmpsb
cmp
insb
cltd
sbb
cmp
repz
into
and
mov
jl
sbb
int3
lea
imul
sub
xlat
lret
rcrb
mov
mov
call
inc
mov
dec
out
mov
lods
lret
sbb
incb
sub
sbb
rcll
orb
pop
je
push
outsl
push
fnstcw
dec
sahf
test
mov
pop
sub
mov
mov
repz
lock
test
xor
mulb
movsb
loope
jl
inc
ret
jmp
cmp
ljmp
add
sarl
filds
or
push
inc
leave
std
xchg
xchg
and
sbb
add
mov
inc
lcall
sbb
lret
xchg
lock
mov
stos
xchg
sub
int3
sub
xchg
jae
scas
in
inc
das
loopne
addr16
cmp
inc
sarb
push
xlat
mov
jns
jmp
imul
push
mov
dec
pop
jp
sub
push
or
cmpsb
cwtl
mov
xor
xchg
sbb
mov
jne
das
shlb
pop
push
jnp
push
inc
mov
mov
dec
xchg
addr16
les
cmpsb
imul
ja
pop
jg
cmpsl
rcll
addl
pop
mov
mov
mov
call
lods
aas
iret
rcrl
pop
ss
sbb
fincstp
mov
jmp
mov
push
aad
pop
cs
cmp
xor
pop
dec
mov
outsl
jnp
inc
ds
sub
push
hlt
sub
or
call
mov
cmp
push
out
lods
ja
fmulp
popa
and
lea
push
push
mov
das
dec
out
jmp
lods
int
dec
jns
add
push
in
adc
test
dec
movsl
mov
daa
mov
or
das
je
gs
pop
fldenv
dec
shll
lock
mov
data16
push
imul
daa
push
or
mov
shl
sub
adc
jge
mov
insl
push
pop
or
and
jo
inc
fs
inc
cs
outsb
pop
dec
add
in
leave
xchg
or
lcall
sbb
inc
cmpsb
add
push
xor
inc
xchg
lock
ss
mov
lret
into
adc
sub
rcrl
insl
cs
cmp
stos
out
leave
cli
incl
sbb
les
push
adc
xor
je
popa
lock
inc
pop
aad
out
mov
jp
adc
hlt
lds
addr16
and
xchg
fld
push
push
daa
cld
cmpsl
push
jnp
addr16
push
out
stos
cmp
mov
enter
mov
int
int
push
in
inc
loop
jb
jns
imul
decl
xchg
push
decb
xlat
add
jne
add
hlt
cmpsb
ss
and
mov
xor
test
rclb
mov
leave
mov
imul
xchg
imul
daa
xchg
xchg
push
adc
push
ret
push
dec
push
jg
clc
xchg
jo
lock
push
jecxz
nop
and
enter
mov
int
xor
dec
lds
test
inc
scas
adc
mov
sbb
mov
mov
xchg
scas
pmuludq
mov
push
jne
imul
xlat
dec
roll
cwtl
sbb
add
pop
mov
in
pop
pop
je
xor
cmp
add
ss
jno
gs
lods
mov
pop
dec
test
sbb
jp
mov
int3
dec
mov
jnp
cmp
xchg
out
test
mov
pop
pusha
mov
aad
adc
jge
inc
insl
in
pop
call
push
mov
mov
cmp
add
pop
push
into
xor
addb
lds
andl
mov
das
gs
mov
sub
inc
std
cmc
and
stc
add
jns
addr16
xlat
popa
push
push
fstps
mov
dec
push
pop
cmp
mov
inc
lret
sub
mov
shll
inc
or
mov
pusha
fnstsw
push
push
push
push
push
mov
mov
mov
aas
dec
int3
jno
loop
or
inc
aas
icebp
push
cmp
pop
leave
mov
inc
sbb
jnp
out
adc
jmp
jo
mov
loope
push
stc
pop
ret
push
and
cmp
sbb
nop
mov
int3
iret
ljmp
xlat
bound
mul
stc
jno
std
arpl
dec
xchg
jne
idivb
pop
add
push
rorl
push
ss
adcb
pusha
loopne
into
cmp
or
in
lea
cmp
hlt
inc
loopne
inc
push
push
mov
push
xlat
loopne
jbe
in
clc
mov
mov
pop
cmc
mov
cmovne
cmc
gs
stos
and
add
mov
mov
sbb
inc
pop
pop
xchg
or
mov
out
mov
filds
stos
loope
loope
hlt
dec
and
jo
sub
push
mov
push
incb
cwtl
lahf
mov
sarb
mov
mov
sbb
ret
out
add
rcrl
icebp
dec
pop
mov
repz
in
enter
push
mov
and
push
mov
mov
mov
adc
mov
and
lcall
mov
sub
scas
int
cmpsb
stos
out
lods
push
or
cmp
jle
loope
enter
cmp
imul
insl
andl
nop
push
inc
push
cmp
sahf
push
je
mov
sahf
cmpsl
test
stos
cltd
sbb
inc
sub
jg
in
sub
shll
pop
jns
jmp
in
rcrb
rol
sub
in
mov
add
loop
pop
ss
pop
fsubrs
jmp
mov
lods
and
dec
cmc
inc
icebp
dec
nop
jmp
insl
jmp
mov
cs
out
inc
pop
outsb
or
adc
pop
mov
test
or
fistl
cmp
outsl
pop
mov
inc
jb
bound
ljmp
push
stos
inc
mov
loope
je
fisttps
inc
xor
dec
test
sub
ds
int3
jmp
in
cltd
les
lret
add
jmp
add
out
stos
ror
pop
sub
add
repnz
sub
mov
and
stmxcsr
jae
jo
ss
icebp
fidivrl
mov
negl
insl
adc
xchg
or
add
inc
cmp
iret
pushf
xchg
adc
popa
dec
mov
outsl
testb
movsb
sub
je
jb
ss
cld
mov
scas
popf
cmpsb
xor
repz
jnp
push
out
imul
scas
pop
or
arpl
sbb
mov
ret
push
or
cmp
lock
ds
xchg
lahf
fldt
push
push
sub
add
mov
sbb
dec
push
pusha
inc
rol
add
push
jmp
clc
in
inc
jmp
cld
ljmp
enter
das
movsb
push
xor
sbb
lods
gs
cmovne
sbbb
out
pop
faddl
push
pop
push
dec
stc
es
bound
inc
push
stos
lcall
jmp
cmp
cmc
inc
mov
dec
sbbb
sbb
push
mov
and
int
and
pop
ret
or
sub
icebp
or
push
add
inc
jl
adc
adc
sarb
mov
mov
jne
repnz
lods
inc
shl
pop
roll
insb
and
cmpl
out
push
push
das
jo
jbe
or
in
jae
rolb
fimull
jo
stos
mov
sbb
out
sub
inc
and
and
ret
add
adc
inc
insl
cmp
mov
rorl
rcrb
es
adc
mov
mov
scas
dec
mull
aas
pavgw
dec
fdivs
call
mov
sbb
out
sub
mov
es
cwtl
or
pop
xchg
leave
cld
mov
pop
adc
dec
sti
popf
xlat
sbb
xor
js
inc
rcrb
pop
sbb
xchg
xor
inc
sbb
jp
pop
adc
jno
push
xor
test
loopne
and
adc
dec
sub
jle,pt
mov
rol
pop
scas
daa
daa
or
addl
mov
xlat
mov
out
jle
mov
std
fs
cmc
dec
lahf
xchg
push
mov
xchg
dec
and
inc
leave
iret
and
push
les
fsubrs
sub
mov
mov
and
mov
aaa
mov
decl
cs
add
lcall
pop
lods
fadds
lret
pop
movsb
arpl
xchg
pop
adc
stos
test
loop
and
pusha
push
xor
int3
push
inc
movsl
push
xchg
cmpl
xchg
psubusw
xchg
in
xor
pop
xor
add
add
inc
cli
je
push
dec
scas
outsl
fnsave
jno
xor
sbb
add
insl
loop
sub
and
cltd
sub
adc
inc
sub
das
sbb
dec
sbb
lods
mov
stos
outsl
and
or
mov
adc
xchg
sub
ror
inc
sahf
push
jge
and
sub
sub
pop
cmp
icebp
jbe
cltd
pop
dec
jae
mov
pop
sbb
cwtl
mov
aas
jns
in
mov
hlt
cmc
sti
jg
std
mov
popa
pop
into
push
fsubp
pop
fildl
mov
add
add
mov
data16
xchg
mov
repnz
push
sub
bound
cmpsl
mov
pusha
or
jne
mov
cmp
cmp
xor
mov
inc
lahf
mov
shl
loopne
mov
pop
or
inc
mov
push
addl
mov
movsl
cmp
hlt
sbb
jne
cld
imul
sarb
insl
lcall
add
cmpsb
cwtl
sub
push
fistpll
cmp
cli
andl
in
loop
mov
addr16
xor
stos
mov
inc
fnstcw
daa
mov
mov
loop
xorl
dec
mov
negb
ret
pop
imulb
cmp
gs
into
pusha
jns
aad
cmp
and
or
push
xchg
adc
popa
sbb
cltd
xchg
bound
pop
pop
sbb
push
test
sbb
cmp
xchg
mov
and
lcall
mov
roll
test
cmpsl
je
push
push
loop
sub
sbb
cs
addr16
in
xor
dec
push
add
add
sar
or
cmpsb
cmc
ret
jp
jecxz
shlb
lods
push
inc
add
xor
xor
mov
xchg
jo
in
adc
mov
adc
sarb
clc
cltd
cmp
mov
fs
pop
mov
cmp
xchg
lret
mov
or
imul
out
cmp
mov
mov
lock
or
jno
cmpsb
cmpsl
cmp
pop
sub
repz
xor
push
mov
adc
outsl
adc
mov
dec
outsb
sub
jae
jl
push
icebp
sbb
cwtl
out
xchg
xchg
cmp
int
xchg
fiaddl
inc
jge
movsb
popa
icebp
lds
clc
cwtl
aas
or
test
and
xor
and
pop
shll
scas
pop
push
pushf
jb
inc
jo
xchg
mov
sbb
pop
inc
mov
pop
es
and
push
adc
mov
mov
mov
js
adc
je
stc
add
and
inc
rol
loope
push
mov
adc
push
jo
arpl
push
fbld
jmp
or
mov
pop
dec
mov
arpl
movsb
out
clc
scas
xchg
idivl
ds
pop
pop
xchg
into
flds
stos
popf
lods
nop
mov
mov
inc
adc
xchg
sub
fistl
mov
and
cmp
dec
and
loope
sub
or
pop
mov
adc
out
push
jle
aas
std
cmp
xchg
jge
cmp
sub
sahf
out
push
ljmp
sub
pop
mov
add
cmp
rcrl
pop
daa
mov
and
lcall
sub
cltd
xlat
mov
insb
repnz
test
add
mov
lods
sub
cs
pop
das
xchg
push
push
sbb
imul
mov
push
stc
fdivrs
cmpsb
es
pop
pop
push
hlt
and
xchg
sub
sbb
addr16
sbb
es
or
jecxz
xchg
sub
pushf
mov
cld
rcrl
jecxz
pushf
stos
mov
xor
insl
or
push
mov
sbb
int
mov
mov
push
fdivr
push
fmull
cmp
leave
mov
mov
arpl
adc
adcl
rol
mov
lahf
mov
rorl
repz
push
loopne
fistpl
cwtd
inc
scas
sbb
ja
bound
mov
scas
sbb
stos
xchg
into
jle
das
mov
out
daa
and
pop
mov
xor
ss
and
lods
add
outsb
int
fcmovnbe
ljmp
hlt
mov
mov
dec
aam
push
mov
lods
int3
add
inc
dec
adc
fimuls
sbb
std
lods
mov
adc
cltd
push
pop
cli
push
lds
sti
ds
xchg
inc
imul
dec
scas
dec
lea
das
and
or
sbb
inc
insl
fsub
arpl
cld
mov
scas
out
xchg
mov
xchg
adc
pushf
push
sub
push
sub
xlat
roll
inc
xlat
sub
mov
xchg
or
xor
add
push
push
test
mov
and
clc
fisubl
dec
aam
sti
cmc
or
scas
leave
push
adc
adc
out
jmp
inc
push
push
pop
xchg
and
aas
ret
inc
cld
cmpsl
hlt
or
test
sub
cmp
mov
xorb
cmp
popa
or
lret
mov
orb
dec
push
movsb
xor
nop
pavgb
scas
shll
dec
ret
xorl
jns
and
aas
andl
fs
enter
cmp
shl
inc
xchg
mov
xchg
bound
out
sbb
cmp
add
add
mov
ss
xchg
ficomps
dec
mov
movsl
mov
dec
cmpsl
push
rolb
xacquire
test
imul
dec
add
sub
xor
lret
popa
fwait
cltd
push
movsl
mov
or
push
dec
leave
mov
mull
push
pushf
movsb
xchg
int3
faddl
push
in
jge
addb
cmc
or
shlb
ja
mov
dec
cwtl
repz
and
imul
mov
mov
negl
test
adc
insb
aas
push
not
insl
cmp
or
or
pop
iret
push
or
cwtl
mov
fwait
in
popf
inc
loope
sbb
int
das
push
test
xchg
xlat
push
iret
shl
lock
lahf
nop
mov
dec
out
xchg
sbbb
cmpsl
adc
sarl
stc
or
jae
dec
rcll
cmp
cmc
nop
and
fistps
push
or
mov
sub
and
cld
scas
loope
rcrb
lock
inc
inc
and
jb
jnp
ja
ficomps
mov
int3
jne
movsl
subb
pop
add
mov
lcall
adc
sahf
xchg
insl
inc
sub
push
or
cmp
jne
and
push
arpl
add
nop
cmp
inc
cmp
xchg
or
jg
or
lea
outsl
sub
sbb
jo
add
xlat
mov
pop
lods
movsl
outsl
inc
jg
sbb
pop
pop
and
dec
leave
xchg
xchg
dec
out
dec
sub
loope
adc
insl
jge
addb
stos
popa
sti
mov
push
iret
mov
sar
cmp
call
jbe
mov
mov
out
clc
jmp
dec
adc
xor
and
sahf
fdiv
cmp
mov
mov
inc
or
unpcklps
dec
testl
jp
mov
negl
sub
push
fprem
inc
sub
push
add
and
pop
sub
loope
push
fildl
inc
add
jbe
sarl
orb
jl
mov
ret
pusha
insl
cmp
inc
mov
inc
bound
aas
in
je
call
xor
cli
mov
shlb
shrb
push
push
sub
cltd
sbb
shl
inc
arpl
out
arpl
rcrl
xor
xchg
jne
into
nop
clc
test
cld
xchg
or
push
dec
add
in
or
out
enter
or
cmp
push
mov
ds
test
mov
jnp
or
mov
xchg
sbb
int
fwait
clts
xlat
xor
push
popa
sbb
outsl
mov
pop
mov
jnp
inc
aaa
push
jae
pusha
or
loopne
or
rcrb
xor
push
mov
ret
and
xchg
add
aas
repz
jcxz
out
xchg
test
sbb
sub
in
ds
sahf
xor
xchg
scas
hlt
imul
and
push
call
jmp
pop
mov
ret
adc
gs
ljmp
or
outsl
test
fwait
lods
pop
mov
pop
add
mov
pop
xor
add
leave
mov
jbe
jle
test
jnp
jg
xchg
notl
push
cmp
xchg
inc
push
mov
mov
sahf
icebp
outsl
pop
imul
test
mov
aaa
mov
and
push
inc
mov
pop
insl
in
adc
lds
stos
xchg
sbb
shlb
ds
and
or
fcomps
aaa
jl
lcall
loop
push
xor
cs
imul
inc
and
mov
xchg
push
or
xchg
lahf
divb
adc
fisubrl
mulb
or
nop
repnz
js
mov
in
jp
xchg
cwtl
fmuls
std
and
mov
dec
cwtl
mov
jg
xlat
iret
mov
ja
adcl
xchg
rclb
testl
pop
lret
add
or
mov
jae
add
and
xchg
xchg
call
addr16
mov
icebp
adc
cmp
xor
into
mov
aaa
cmp
daa
test
aas
sbb
jb
gs
notb
jae
add
iret
arpl
into
xor
test
jb
iret
gs
jns
sub
adc
mov
mov
adcl
aas
cmp
xchg
xchg
divl
cmp
push
pop
inc
mov
daa
xchg
pop
jne
or
sbb
xor
ja
es
adc
pop
xor
lea
jo
xlat
in
adc
adc
mov
lock
cmp
jno
jb
insb
mov
cmp
push
or
mov
cmp
int
push
mov
leave
loop
jmp
pop
sti
movsb
mov
lret
xchg
push
mov
adc
inc
hlt
in
jns
fsubp
push
es
fwait
dec
inc
out
and
nop
into
leave
mov
inc
lret
mov
xor
mov
pop
cmpsl
arpl
xchg
lcall
ror
inc
out
mov
xchg
shll
int
jmp
jb
fsubrp
xchg
aam
xor
adc
add
test
and
jo
cmpsl
jmp
adc
div
mov
cs
jb
test
sti
shlb
jns
bound
lahf
scas
popa
sahf
push
outsl
mov
sub
lds
sub
xchg
mov
lret
rorb
xchg
adc
imul
sub
mov
dec
fucom
push
sti
lds
cs
mov
cmp
out
aam
cmp
mov
xchg
lret
mov
push
lret
shlb
mov
jl
jb
lods
lods
divl
xchg
arpl
ficomps
add
mov
jg
and
pop
stos
jnp
mov
insl
add
ret
mov
mov
pop
shll
inc
jb
jmp
inc
pop
cmp
into
popa
dec
insl
mov
aas
mov
pop
cmp
jmp
iret
pop
pop
inc
mov
shlb
cltd
jmp
xor
rol
test
arpl
adc
push
xchg
add
sarb
sarb
sbb
inc
repnz
xor
iret
fldenv
aas
pop
cld
push
aam
mov
popf
lcall
movsb
cmpsb
icebp
jle
mov
imul
jle
fidivl
popa
and
jae
repz
mov
xor
ljmp
fistl
add
inc
imul
out
cwtl
and
or
in
bound
sub
adc
int
fbstp
test
pop
jp
inc
ret
iret
test
js
sbb
int
push
push
aam
cwtl
xor
mov
mov
cmp
pop
cwtl
stos
dec
pop
jecxz
lret
mov
push
call
cmpsb
sub
add
xchg
mov
and
call
leave
add
int
and
addb
mov
gs
loopne
xchg
and
aas
in
mov
pop
cmp
jb
movsb
jno
leave
push
mov
inc
test
mov
leave
popf
fldenv
xchg
iret
adc
xchg
push
insl
je
adc
jl
or
mov
adc
outsb
xchg
xor
jp
outsb
or
inc
cmp
cmp
mov
in
xchg
inc
subl
dec
insb
mov
or
adc
dec
push
mov
jge
xor
movsl
loop
pushf
mov
fsubr
fcmovne
dec
stos
les
inc
fsub
pop
cmpsb
add
cli
pop
outsb
movsb
movsl
test
bound
imul
or
mov
aas
sub
icebp
aas
adc
and
mov
xchg
mov
std
in
mov
jnp
cwtl
ror
out
sbb
shr
pop
xchg
add
and
fsubrl
mov
in
cmp
outsl
xor
fdivs
lcall
add
scas
and
aam
dec
int
and
pushl
push
pop
popa
jns
imul
dec
sbb
arpl
adc
inc
out
in
icebp
or
push
xor
ljmp
inc
mov
xor
pop
cmp
mov
pushf
dec
dec
jne
into
inc
pop
adc
mov
mov
adc
add
cmp
jl
lret
dec
sti
dec
xor
inc
xchg
ja
leave
addr16
mov
cld
dec
ds
fwait
push
insb
xchg
ss
mov
mov
cmp
and
outsl
das
dec
mov
test
psubw
pop
leave
dec
imul
cltd
xor
flds
mov
xchg
mov
mov
mov
inc
popf
mov
mov
orl
pop
mov
cltd
icebp
hlt
mov
and
mov
fcomp
jo
push
sub
push
sbb
adcb
push
popf
pushf
mov
dec
mov
jl
cmp
add
mov
ss
in
ret
sub
outsb
scas
xchg
arpl
add
jle
add
or
sub
loopne
mov
and
and
lods
jge
fucomi
outsb
xchg
add
sahf
mov
jno
sbb
mov
cli
sub
adc
xchg
jge
imul
roll
cmp
and
rolb
or
dec
dec
xorl
pushf
sbb
aad
push
and
shrb
xor
pop
sarb
mov
cmp
pop
test
enter
imul
mov
ror
add
add
adc
fisttps
mov
imul
push
xchg
clc
xchg
push
lock
data16
push
xchg
push
xor
pushl
jbe
dec
add
js
add
outsl
out
mov
push
in
inc
mov
pop
add
scas
loop
xchg
push
std
inc
adc
sbb
imul
add
cmp
popl
aas
hlt
push
xlat
xor
add
fistpll
inc
lods
xchg
pop
je
inc
orb
add
nop
icebp
dec
add
jl
push
cmp
pop
inc
mov
mov
mov
adc
fimuls
sub
push
and
lock
sub
cli
xor
call
push
pop
out
xlat
xor
in
push
cmp
insb
inc
sub
ret
inc
inc
in
in
and
sub
jnp
xor
mov
fistl
js
aam
mov
les
lods
inc
push
dec
cmp
push
repz
push
mov
pop
sbb
jle
jl
sahf
int
cmp
mov
aas
fists
mov
push
les
push
or
xchg
cmp
mov
aam
adc
lods
movsl
sar
jb
call
fldt
bound
xor
lea
mov
loop
cmp
mov
aaa
inc
xor
xorps
or
mov
dec
add
jecxz
sub
leave
imul
sti
pop
test
and
daa
sub
fsts
jns
repnz
inc
adc
add
lret
mov
sub
push
hlt
ss
js
imul
xchg
ds
jo
adc
into
jo
icebp
cltd
andb
sub
push
xlat
fsts
fstps
sbb
add
shll
adc
arpl
or
arpl
xor
dec
jbe
cld
fmuls
mov
sahf
adc
pop
hlt
enter
jl
pop
outsl
jne
mov
cmpsb
xor
push
mov
les
stc
cld
push
sub
push
sbb
fsub
aam
pmulhuw
outsl
lds
xor
lods
and
ret
pop
nop
ds
jmp
mov
xor
dec
dec
jbe
and
das
sahf
aaa
testl
cmc
movsl
cmp
inc
sbb
mov
mov
hlt
imul
mov
dec
test
push
xor
sub
mov
cmc
cmp
xlat
jae
xchg
dec
pushf
jb
outsb
or
fisttpll
sbbb
jle
repnz
cltd
scas
sbb
scas
rclb
sub
lock
jb
imul
cltd
pop
lahf
jae
daa
inc
sbb
popf
fstpt
std
std
std
pop
rorb
sbb
test
sub
jp
push
cli
dec
dec
call
aaa
fwait
xor
ljmp
and
or
sbbb
iret
out
loope
rolb
dec
aam
fcmovne
add
fimull
pop
ljmp
or
mov
insl
dec
imul
cmp
pop
mov
jbe
and
mov
adc
scas
repz
adc
hlt
out
lret
dec
stos
and
mov
lret
sbb
cmpsb
cs
imul
dec
lahf
and
pop
pop
movb
lret
jbe
es
jle
push
jecxz
xchg
out
jno
sbb
push
test
pushf
sub
push
sbb
inc
cwtl
sbb
mov
out
push
sub
popl
inc
into
repnz
lods
movb
xchg
xor
mov
movsl
inc
in
cmpsb
jo
scas
xchg
push
sub
push
dec
cld
shrb
imul
rol
enter
clc
ffreep
stos
sar
xchg
or
andl
add
ret
jmp
out
cmp
and
xor
aad
hlt
fsubl
xchg
push
mov
ror
or
repz
cmpsl
jb
sub
inc
sub
push
iret
inc
pop
aas
xor
insb
pop
jno
sub
jmp
adc
lcall
mov
in
mov
int
fsubr
cwtl
dec
ljmp
fadd
leave
jns
xor
pop
pop
jmp
lea
xor
jp
rcll
testl
push
adc
push
insb
lods
popl
lock
add
andl
add
push
sbb
lods
int
cmp
dec
outsb
jl
iret
xchg
pop
test
push
mov
flds
mov
or
jle
pushf
jnp
push
dec
sub
push
inc
mov
repnz
pop
loop
xor
xor
jae
sub
stc
insl
fwait
scas
scas
mov
adc
aas
lds
nop
wrmsr
test
aad
scas
sub
add
test
and
in
xlat
push
pop
les
in
add
imul
adc
fwait
out
push
cmp
dec
aaa
push
inc
rol
test
out
or
aaa
xor
nop
adc
sbb
push
fidivrl
or
cwtl
inc
mov
loop
inc
dec
push
sbb
in
mov
pop
xlat
xchg
cmp
outsl
pushf
int3
pop
mov
jnp
daa
out
js,pt
jbe
jne
mov
test
popf
ds
or
test
mov
cmc
lret
or
mov
aaa
mov
or
inc
push
push
mov
cmp
dec
mov
stos
into
dec
sti
xchg
rolb
sahf
ja
add
sub
jg
add
and
pop
inc
test
and
addb
push
xor
or
pop
cmp
add
jno
xor
sbb
jmp
icebp
sbb
addl
cmp
sbb
sub
mov
xchg
dec
xchg
enter
lret
sti
adc
daa
lods
mov
cmp
dec
xchg
in
jmp
repz
test
popf
data16
xor
mov
out
and
dec
dec
ljmp
cwtl
ja
aam
mov
jbe
pop
shlb
mov
mov
mov
repnz
sahf
out
loop
cmpsl
outsb
cmp
add
add
add
fbstp
pop
ss
inc
adc
add
add
movsb
stos
adc
xchg
mov
add
bnd
inc
xor
xor
lahf
or
in
lret
push
ret
sbb
add
fisubs
ljmp
inc
sbb
enter
xchg
aaa
mov
inc
xor
mov
mov
inc
push
push
mov
pop
ljmp
pusha
pop
rolb
cwtl
pop
or
sbb
rorl
iret
mov
out
andl
lret
mov
xchg
or
xchg
xchg
xchg
scas
sbb
popf
inc
scas
inc
and
das
mov
push
daa
and
insb
test
xor
inc
cmc
xchg
cwtl
cmpsb
dec
jl
add
mov
mov
cmp
jge
cld
xor
stos
jg
add
xchg
mov
dec
or
mov
movsl
push
lods
push
jecxz
cmp
mov
call
sub
jo
shlb
popl
out
pop
or
or
sbb
or
les
mov
fistpl
pop
stos
bound
subb
xor
mov
pop
lcall
adc
imul
and
fsubr
cmp
sub
cmpsl
xchg
jbe
les
popf
or
xchg
adc
push
lods
mov
fmul
jecxz
jmp
sub
aam
lahf
mov
xchg
or
jl
lret
lahf
push
dec
jno
inc
addr16
jne
xchg
add
add
shll
pop
cmc
in
mov
xchg
add
pop
push
mov
push
pop
ficompl
and
fidivs
mov
and
xor
dec
loopne
add
gs
mov
push
and
add
sti
sbb
pop
mov
and
or
xor
les
mov
out
fidivrl
movsl
xchg
dec
jbe
mov
jns
push
pop
inc
push
xor
lahf
rclb
pushf
pop
and
sti
out
jno
mov
in
mov
push
js
and
push
fimuls
arpl
mov
imul
cmp
subb
inc
sub
sub
xor
sahf
push
lock
dec
call
fmul
ss
sbb
test
fsts
jne
xlat
cmp
cwtl
hlt
rcl
frstor
push
movsb
xchg
cmp
push
stc
mov
test
fistpl
shlb
lods
lret
negl
pop
push
test
sbb
adcb
sbb
shll
push
mov
ja
dec
mov
add
dec
dec
jne
cmp
push
jb
loopne
inc
and
fst
xchg
test
pop
mov
sub
jg
dec
push
mov
jo
arpl
or
jb
xor
daa
or
xlat
pusha
repz
adc
adc
sub
stos
ss
popf
sub
ja
adc
inc
sbb
sbb
pop
or
popa
lods
cmp
cmp
push
jo
cld
mov
cmp
cmp
pusha
lock
push
cmp
pop
jecxz
xor
fnstsw
subl
pop
scas
adc
jg
jmp
fldenv
mov
stc
ds
mov
js
insl
bound
inc
dec
xchg
cmovo
sbb
rcl
sub
mov
in
scas
xor
pushf
pusha
into
aad
iret
stos
mov
repnz
mov
mov
push
xchg
push
in
push
dec
nop
mov
sbb
push
fsubs
and
push
mov
xor
inc
imul
cmpsl
es
inc
add
pop
stos
pop
sahf
in
pop
fdivr
clc
dec
sbb
data16
aad
xchg
hlt
cwtl
test
test
aaa
push
popf
or
repz
pop
scas
inc
inc
fwait
imul
ja
adc
pushf
das
lock
lret
dec
sbb
stos
aaa
mov
imul
cmp
pop
insl
into
pusha
cmpb
test
push
mov
fstl
scas
das
pop
call
jecxz
xchg
xor
fildl
push
repnz
pushl
mov
xor
sub
stc
sti
lret
mov
and
iret
fisttpll
or
mov
xor
sub
and
mov
loope
jb
xchg
inc
jl
jae
andl
loopne
jno
dec
jne
mov
adc
push
into
divb
dec
pop
test
mov
out
in
cld
into
push
mov
xor
in
lods
subb
jp
lea
pop
aas
push
inc
arpl
jnp
roll
mov
mov
andl
hlt
ret
js
fmulp
out
jp
sti
hlt
pop
xor
insl
dec
test
and
mov
je
cmpsl
test
fneni(8087
cs
divl
push
and
sbb
and
repnz
ret
pop
xchg
and
inc
cmc
inc
je
or
and
call
adc
int
adcb
call
and
mov
jns
push
stc
lds
mov
mov
imul
inc
cmp
dec
or
mov
xchg
mov
jnp
rol
les
dec
inc
into
push
pop
adc
sbb
mov
fists
pop
inc
xchg
adc
adc
pusha
cmp
imul
icebp
jb
xor
xor
mov
pop
lock
dec
jnp
mov
popf
arpl
out
daa
jbe
out
inc
jnp
imul
out
out
add
cli
add
mov
pop
icebp
hlt
fldpi
cmp
scas
scas
aad
sahf
cmp
test
repz
xchg
divb
cmp
test
jp
test
xchg
xorb
jp
aaa
sti
lahf
push
lea
jnp
mov
int
aaa
xlat
jo
fidivl
divps
in
jne
mov
lahf
pusha
pop
fistpl
adc
out
lds
sub
adc
fstpl
add
adc
add
jp
test
pop
lss
pop
mov
leave
mov
sub
pop
jmp
and
push
mov
test
out
mov
jne
popf
dec
gs
or
imul
sub
cmp
aad
movsb
andl
je
dec
mov
inc
loope
xchg
and
pop
adcb
pop
cmp
imul
inc
cmpl
roll
add
jns
inc
in
out
sub
cwtl
aad
sbb
and
mov
insb
fs
pop
ds
sub
mov
cmp
pop
jmp
rcrb
sub
lods
push
loope
inc
jg
jbe
adc
jnp
pop
mov
push
push
dec
sub
aaa
lods
jecxz
push
imul
cmp
stos
mov
dec
mov
dec
sub
push
push
jmp
xchg
ja
fisubs
cs
jno
push
mov
mov
cwtl
pop
out
cmp
inc
inc
cwtl
adc
loop
shll
cld
arpl
repz
add
xor
iret
mov
inc
into
out
or
dec
outsl
inc
mov
dec
aaa
or
scas
dec
fiadds
mov
rclb
jns
mov
add
lcall
mov
push
sbb
or
sub
jb
xor
sbb
test
or
or
lods
dec
or
subb
add
push
stos
cmpsl
scas
xchg
stc
shl
pop
popa
pop
add
lret
sub
pop
test
jmp
aam
iret
jmp
cmpsl
xor
cmc
jbe
int
es
adc
stos
je
in
cmp
lcall
mov
mov
inc
imulb
or
inc
push
mov
sar
lret
or
bound
lods
inc
jle
imulb
push
seta
fs
ret
sub
pop
sub
push
in
movsb
cwtl
in
adc
nop
pop
js
inc
icebp
leave
fdivrp
inc
hlt
jns
out
ficoms
push
mov
call
incl
cli
les
inc
push
int3
dec
adc
out
je
cld
xor
in
inc
and
pop
xchg
push
jb
cmp
stos
mov
add
and
adc
sub
cld
xchg
ret
mov
jbe
stos
sbb
xor
mov
and
ss
push
insl
arpl
or
pusha
out
lods
mov
pop
test
gs
imul
sub
stos
gs
inc
inc
jmp
sbb
imul
stc
and
mov
mov
cwtl
xchg
dec
ss
sahf
jo
loope
jb
jns
cmp
xchg
xchg
js
cmp
pop
mov
inc
jo
or
int3
push
dec
xlat
leave
push
loope
inc
sbb
enter
aad
mov
repz
adc
dec
cmp
xor
in
fdivrs
addb
jmp
jbe
arpl
inc
stc
xchg
pop
jecxz
push
push
pop
leave
loop
fadds
dec
pop
sub
popa
mov
dec
pop
cbtw
dec
sub
nop
mov
cwtl
mov
pop
push
das
ljmp
out
xchg
xor
cmpsb
sbb
or
out
lcall
add
stos
xor
inc
shl
dec
fsubp
inc
xor
push
add
test
insb
lods
jb
xchg
jl
adcb
inc
lahf
dec
add
hlt
cmp
mov
loopne
or
jne
call
pop
jp
jno
lock
push
pop
xorl
mov
sub
enter
out
popf
dec
jne
adc
lds
add
mov
or
imul
imul
lahf
xlat
loopne
jns
ret
and
iret
pop
sbb
rol
test
sub
imul
cmpl
pop
andb
test
mov
push
pop
inc
adc
cmc
pop
lahf
xchg
test
stos
adcb
movsb
out
pop
and
sbb
call
loope
xor
push
jge
iret
or
adc
es
fcomps
push
fmul
mov
bound
xor
pop
jl
and
in
push
add
mov
xchg
aaa
lods
gs
inc
stos
jnp
inc
jb
sarl
jmp
dec
out
mov
jae
loopne
rolb
dec
cmpsb
add
jnp
sbb
inc
das
mov
pop
test
aas
jge
fsubrs
mov
loop
fnstenv
pop
sti
and
inc
xor
cmp
insl
xchg
rolb
and
fmul
mov
xchg
js
sbb
add
cmp
mov
fwait
jne
dec
adc
jae
xor
cmpsb
jo
dec
dec
iret
push
in
loop
cmp
cmp
fcomi
pop
cmp
mov
lods
loope
mov
mov
out
mov
push
or
add
add
add
cmpsl
lock
mov
scas
push
divb
hlt
add
sbb
cmc
add
and
loopne
push
mov
bound
fisttps
in
fidivrs
stos
sub
adcl
cwtl
push
and
jbe
mov
cli
xchg
push
cmpb
dec
push
das
filds
cmp
push
cmp
rolb
cmpsl
pop
xlat
pop
add
pop
pop
cli
push
mov
into
dec
pop
mov
mov
out
lahf
repnz
lahf
stc
or
cli
insb
mov
into
sub
pop
jl
fbstp
adc
sbb
xor
scas
xor
roll
add
mov
adc
dec
and
test
mov
add
adc
test
mov
jnp
and
xchg
jns
rcll
pushf
mov
orl
clc
fcomps
repnz
lods
pop
clc
fnstsw
incb
filds
xchg
enter
scas
mov
xchg
add
add
repnz
shlb
pusha
mov
push
lock
mov
dec
cli
loop
decl
ss
sub
cmp
clc
ljmp
adc
sbb
cmp
scas
iret
cmp
push
xchg
pop
xchg
loopne
mov
xchg
inc
pop
mov
mov
repz
adcl
test
mov
pop
add
adc
imulb
ljmp
arpl
or
jp
sbb
and
stc
js
or
mov
pusha
adc
dec
mov
and
mov
xchg
jecxz
jle
xor
clc
mov
adc
ret
sbb
cmp
dec
inc
aam
xchg
hlt
rcrb
jmp
xor
out
aam
mov
or
inc
into
add
push
xor
xor
dec
jge
mov
insb
xor
lret
push
add
rol
cltd
fldl
cmpsb
xchg
xchg
je
mov
orb
dec
pushw
rcr
push
mov
xor
inc
xor
pop
lret
dec
xchg
testb
mov
jne
movsl
and
cmpsl
sbb
lock
jg
insl
aas
push
adc
dec
aas
sbb
or
into
adc
and
into
cs
dec
call
popa
mov
in
and
test
sub
cmovae
add
xlat
leave
cmp
pop
sbb
inc
popf
mov
fadds
pusha
cwtl
cli
aaa
pop
adc
sub
cmpsl
sbb
jle
ficoml
inc
xchg
pop
cmpsl
les
fiadds
mov
iret
repnz
jge
loopne
add
sbb
into
mov
lret
mov
cmp
mov
adc
add
sub
inc
sbb
pop
sbbb
pop
sub
cmp
adc
pop
xorl
mov
or
cmp
and
cmp
add
push
test
lods
fistpll
xchg
cmpsb
test
shl
bound
or
mov
popl
inc
insb
pop
pusha
fwait
jae
mov
repz
sti
pop
mov
out
outsb
jecxz
inc
dec
mov
in
dec
ja
inc
jmp
inc
in
xorb
dec
sti
rcrb
sbb
rcr
xor
jbe
mov
cmpsb
add
insb
pop
in
cmp
dec
in
or
push
out
xlat
enter
cmpsl
pusha
mov
cmp
push
mov
jo
sub
test
negl
inc
bound
jo
jbe
pusha
lret
xchg
iret
xor
mov
jg
js
popf
jl
pop
sbb
jo
shrl
adc
cmp
test
ss
ret
fbstp
imul
movsb
and
mov
loopne
mov
stc
sbb
mov
sbb
jb
pusha
test
mov
cmp
jecxz
add
aaa
xchg
rcl
int
out
aas
lcall
fld
mov
repz
xor
clc
shll
stc
jne
dec
pop
fsubl
ffree
sahf
adc
jne
pop
repnz
or
inc
movsb
add
outsb
push
jecxz
mov
loope
arpl
dec
mov
imul
das
jne
sub
push
or
dec
or
xchg
mov
add
out
adc
push
cwtl
mov
or
sub
mov
ret
imul
je
mov
xchg
xorb
leave
mov
insb
sahf
out
pusha
mov
sub
fsub
rorl
mov
std
pop
rorl
sbb
xor
pop
pop
mov
cld
scas
cmp
mov
mov
insb
fsub
rdtsc
fisttps
xchg
mov
fnstcw
shl
in
sub
dec
push
fsubrs
pop
xchg
pop
stc
sbb
jo
adc
jnp
insb
data16
jo
or
stc
mov
loop
pop
jo
adc
jle
adc
jne
dec
and
mov
ret
mov
stos
dec
icebp
dec
mov
ds
cmp
mov
add
insl
and
pop
ja
pop
or
es
mov
les
sti
pop
xor
insb
cmp
sub
out
loopne
or
and
mov
xor
cld
int3
loope
mov
inc
push
jecxz
loope
push
dec
jle
cmp
dec
push
and
xor
push
xchg
inc
test
ret
jg
jb
insb
pop
push
mov
lahf
mov
lahf
mov
xchg
imul
mov
push
shll
shrb
sbb
dec
pop
fsub
icebp
pop
outsl
and
imul
mov
or
sbb
enter
dec
cmc
mov
mov
dec
pop
leave
ljmp
mov
testl
mov
inc
push
ret
loopne
mov
pop
and
mov
inc
push
add
and
inc
daa
push
pop
mov
sbb
enter
pop
pop
inc
mov
add
add
clc
pushl
xor
outsl
std
or
stos
out
or
shrl
or
les
addr16
sub
sbbl
ret
dec
sub
rolb
mull
nop
jmp
xchg
push
jecxz
test
push
xor
pusha
fcmovnbe
sub
push
xchg
divb
divb
xchg
add
dec
xor
icebp
dec
popf
scas
and
fnsave
lahf
adc
sub
popa
xor
push
loopne
xchg
xor
imul
stc
sbb
pop
addl
mov
inc
pop
add
fisttps
into
das
popa
lahf
dec
adc
les
addr16
xchg
pop
lds
enter
push
add
dec
dec
out
push
push
jp
rcr
sub
data16
xor
push
in
and
clc
test
out
js
xchg
push
lock
jecxz
pushf
pushl
jmp
xor
push
pop
fldt
dec
dec
rorl
data16
jge
es
jae
mov
insl
and
cmpsl
repnz
mov
add
cmp
mov
sub
pusha
jno
mov
lret
xor
repnz
movsb
jne
dec
outsl
cmp
sub
lcall
fwait
push
and
test
mov
dec
outsb
xor
lds
insb
shlb
incb
add
pusha
lret
mov
rclb
jo
fstpl
mov
cmp
shlb
ss
mov
push
mov
mov
test
push
out
xor
int3
sbb
mov
aad
cs
icebp
inc
out
jnp
add
xchg
loopne
jmp
jp
pop
adc
push
jb
pop
mov
xchg
fcmovnbe
inc
jecxz
movsb
pop
shlb
das
inc
bound
inc
mov
mov
sub
fldl
cli
xor
lods
fdivrs
xchg
decl
fsubp
jne
cmp
stos
insl
ss
sbb
loop
je
scas
sbb
fcomps
push
cmc
or
jns
movsl
fidivl
cmp
jns
in
sbb
and
movsl
scas
addr16
mov
sub
xchg
cmpsl
inc
imul
xor
jo
out
sub
cmp
jmp
daa
mov
xchg
xlat
pop
or
mov
xor
adc
or
jno
dec
push
push
fisttps
shll
js
stc
xlat
shrl
and
aaa
pop
sarl
pushf
or
inc
dec
cs
cmp
fnstcw
push
xor
dec
test
dec
sbb
cmp
push
push
pop
out
inc
js
mov
xor
mov
imul
sub
lods
adc
sbb
mov
sub
xlat
mov
adc
lods
stos
cmp
fcompl
mov
sbb
xor
ret
lods
push
push
das
lahf
fsubrl
xchg
movsb
movsl
push
inc
fsubl
mov
dec
mov
adc
addl
pop
pusha
adc
js
inc
mov
mov
ss
andb
or
stos
jae
xlat
xor
popa
insb
or
dec
cld
popa
hlt
cmp
std
outsb
dec
imul
or
es
invd
lret
nop
sbb
pop
mov
stos
dec
push
movsl
test
push
mov
inc
daa
push
and
xlat
jae
xchg
push
mov
loopne
rclb
push
cmp
push
mov
mov
push
sub
adc
cs
or
mov
data16
mov
jo
mov
mov
dec
orb
imul
fstps
adc
mov
aad
xchg
mov
movsl
xchg
jge
cmp
jno
aas
and
fbstp
cltd
les
popa
push
outsl
pop
fsubrl
ljmp
sub
ds
push
stos
jmp
iret
fsubr
int3
movsb
lods
xchg
insl
sbb
lea
and
pop
cmp
xchg
push
shr
popa
insb
shrl
push
sarl
daa
cmp
xchg
leave
inc
xor
pop
xchg
scas
or
jle
test
mov
or
stos
sbb
test
jle
stc
out
cmc
iret
mov
sar
cwtl
sbb
mov
imul
lea
mov
dec
jb
mov
jne
pop
add
roll
mov
jmp
mov
lea
mov
jp
or
add
nop
push
xor
xchg
hlt
dec
cltd
clc
sub
jns
jbe
xchg
jnp
fwait
mov
sbb
in
test
mov
out
jae
sbb
push
and
roll
scas
mov
stos
outsb
int3
sub
cld
xchg
sub
or
sub
out
push
test
jmp
adcb
sbb
mov
jns
or
mov
jecxz
xchg
inc
push
cmp
sbb
pusha
inc
aaa
and
add
shll
jmp
je
mov
add
mov
mov
popa
int3
push
jmp
sti
and
cmc
dec
cmp
and
add
fcomps
in
stos
cmp
neg
lret
or
adc
stos
popa
outsl
lock
test
or
cld
jecxz
push
test
inc
cwtl
xor
stc
jne
dec
and
and
loop
fistpl
push
sbb
pusha
push
mov
xor
push
inc
and
jl
idivb
negb
jg
add
jbe
dec
cmp
jb
sbb
pop
ds
add
xchg
daa
and
xchg
xor
jae
sbb
dec
in
fs
xor
xchg
addr16
repnz
pop
test
mov
and
popf
out
enter
pop
sub
sub
jg
xchg
mov
mov
popa
inc
mov
dec
jne
ljmp
xor
push
subl
mov
xlat
rorl
pop
adc
cmp
movsb
in
xchg
jbe
jmp
xadd
sbb
call
enter
xor
xor
add
cmpsl
test
je
cmpsb
lods
clc
inc
adc
pop
adc
pop
cmpsb
adc
ja
fisubl
outsl
pop
ds
rorl
mov
mov
fmuls
pop
aam
jns
fchs
arpl
cmp
inc
incl
push
ret
jp
cmpsl
xchg
push
in
jno
xchg
push
orb
fmulp
adcb
jne
addr16
xchg
in
int3
mov
inc
pusha
sti
sbb
shlb
pop
mov
repz
lahf
and
xchg
jne
shrl
push
loope
fxch
add
data16
sub
jnp
scas
add
cmp
sub
loop
add
and
mov
stos
inc
or
dec
test
jne
fdivs
leave
fbld
adc
xchg
jmp
ss
les
mov
and
adc
fdiv
fisubrs
push
repz
into
movsb
shlb
mov
adc
hlt
mov
cmpl
mov
aaa
int
xchg
xorl
into
mov
test
add
lods
dec
inc
push
call
data16
sbb
inc
mov
adc
mov
sbb
sahf
sbb
add
stos
push
idivb
lods
mov
rcrl
test
loop
xor
push
clc
arpl
jns
movsb
scas
jne
jg
dec
stos
out
jne
inc
pop
lcall
dec
push
sbb
hlt
ret
aas
add
push
stos
mov
hlt
or
sti
in
lret
stos
lret
clc
popf
fisubrl
fisubl
mov
aad
in
mov
imul
cmp
popa
test
scas
and
inc
sub
inc
cmc
or
loop
mov
loopne
or
scas
rclb
push
int
cwtl
xlat
jae
lods
lahf
pop
pop
sarl
pop
call
fsub
xchg
pop
and
rorl
pop
push
jbe
dec
xor
ja
cmpsl
inc
mov
xor
add
push
and
scas
insl
outsb
pop
test
daa
addr16
cmc
sarl
pop
fstpl
addb
out
xchg
lcall
mov
mov
xor
push
or
inc
ret
jmp
and
sbb
xor
gs
dec
pop
mov
push
push
jge
cmp
dec
mov
pushf
popf
fisubl
rorb
out
push
xchg
sti
jns
xor
or
into
inc
jle
mov
fmull
popa
cmovnp
popa
and
push
mov
dec
ret
outsl
push
outsb
sbb
pushf
mov
outsl
test
mov
int
sbb
pop
not
lea
es
sub
lcall
xorl
push
cmc
jns
xchg
test
jecxz
dec
leave
add
popa
out
inc
xlat
jne
pop
pop
fwait
push
mov
add
inc
sub
in
int3
or
and
js
dec
dec
inc
mov
test
xor
xor
daa
loop
fistl
push
repnz
or
leave
fs
and
aad
mov
lret
mov
cmc
mov
or
dec
scas
mov
repnz
js
pusha
xchg
adc
popa
jno
sbb
lcall
clc
test
dec
mov
icebp
sub
in
sbbb
loope
sbb
lret
and
stc
sub
sub
pop
popf
and
pop
test
int3
popa
fisttps
jge
leave
inc
out
arpl
mov
repz
jmp
sarb
add
xbegin
ret
mov
inc
push
mov
aam
leave
outsb
lcall
out
mov
mov
push
push
sbb
add
mov
fcmovne
adc
cmpsb
popa
pop
incb
shlb
push
roll
loop
jg
lods
cmp
es
xor
adc
adc
jbe
test
cld
imul
popf
push
sti
stos
adc
jge
and
jnp
andl
into
jnp
cld
add
sub
adc
push
sarb
mov
nop
mov
sar
lods
or
push
repz
movsl
ficomps
mov
fwait
pushf
fcmovb
pusha
faddl
ljmp
xorl
add
mov
hlt
pushw
inc
push
ja
dec
pop
aaa
sti
aas
mov
pop
ja
ret
mov
lods
cli
and
shlb
gs
dec
fsubrp
in
mov
shrb
popa
pop
xor
out
push
sub
push
popa
pop
insb
pop
jns
lods
xchg
clc
in
outsl
leave
xchg
mov
or
nop
lock
dec
imul
mov
and
pop
lods
push
adc
adc
out
push
mov
or
setge
daa
idivb
call
push
mov
das
stos
sbb
dec
ret
inc
mov
test
adc
cmp
loop
mov
mov
mov
xchg
mov
jb
je
add
xchg
xchg
std
cmp
lock
inc
dec
pop
pop
jge
push
pop
fidivs
and
sahf
xchg
inc
jmp
aad
imul
sbb
jle
lods
lret
nop
push
mov
lods
clc
pop
ret
ss
push
pop
sbbl
add
jnp
cmp
push
mov
cmp
fwait
and
aaa
mov
int
clc
jns
add
aas
jecxz
dec
aam
push
inc
push
dec
js
mov
push
sbb
out
adc
dec
and
mov
push
jbe
dec
popa
push
in
mov
rolb
add
push
iret
ljmp
xor
lcall
or
pop
mov
cltd
cmp
cli
or
gs
or
rorb
push
icebp
lret
push
mov
jb
mov
jle
mov
enter
outsl
xor
outsb
dec
lods
pop
push
push
lea
sbb
lcall
mov
or
into
loop
jmp
push
cltd
pop
cs
or
mov
pop
mov
or
aam
adc
add
sarl
pop
add
lret
xor
into
dec
push
xchg
cld
loopne
rorb
and
or
stos
in
dec
jmp
xchg
fimuls
nop
push
sub
pop
pop
xor
into
ljmp
fmul
jle
popf
jns
or
pop
lcall
mov
mov
add
and
cmp
in
movsl
xor
stos
xorb
fildll
sbb
push
xor
pop
lods
and
movsb
mov
adc
fadds
test
data16
mov
push
jge
dec
insl
mov
add
addl
adc
jbe
std
inc
pop
inc
repnz
and
mov
jne
filds
fwait
jg
lea
fsubs
fsts
int3
fisttps
push
rcl
repnz
mov
pop
cmp
add
ret
cmp
filds
fs
dec
rclb
mov
out
add
sbb
lcall
insl
jno
loopne
in
stos
std
mov
sbb
push
push
cmpsl
cld
add
push
fnsave
fs
shll
sti
jno
rcrl
dec
into
push
cvtps2pi
inc
les
mov
sub
xor
call
sti
jns
push
sbb
cmp
sbbl
lret
cmc
setnp
adc
mov
xchg
sarl
mov
push
cmpsl
stos
xor
jg
es
ljmp
push
push
add
inc
inc
mov
dec
dec
add
scas
add
add
out
cli
pop
pop
add
mov
ja
cmp
fs
test
outsl
mov
cli
adc
imulb
pushf
nop
in
adc
push
push
shlb
mov
cmpsb
outsb
xor
add
pop
jbe
imul
inc
sbb
and
cmpsb
dec
inc
js
in
hlt
dec
scas
jl
jae
rcrl
push
lea
mov
push
push
sub
cld
cld
xchg
add
adc
mov
adc
ror
xchg
jmp
imul
and
pop
filds
sbb
cld
bound
rcll
pop
sti
add
loopne
inc
cmp
cmpsl
sbb
jle
lea
jb
jns
jno
aaa
outsl
pop
xchg
lea
jp
insb
dec
mov
std
jnp
jne
loope
insb
int
sahf
test
nop
xchg
outsl
aaa
cmp
adc
ljmp
cltd
sahf
in
or
jnp
out
out
shll
sti
or
mov
das
dec
jecxz
xchg
push
popf
insl
loopne
mov
xchg
jl
and
push
pop
aad
push
jno
cld
cmp
and
mov
in
adc
outsl
imul
mov
jmp
aas
enter
scas
inc
nop
or
xchg
lret
inc
out
sti
call
ljmp
and
fdivr
or
mov
jle
pop
dec
cmp
std
cmp
mov
or
fcomps
inc
inc
fisubrs
xor
sahf
push
cmpsb
mov
les
icebp
jb
insb
cmp
lcall
clc
insb
adc
mov
ret
push
push
dec
inc
sbb
jge
mov
cmp
cmp
popf
aaa
pusha
mov
mov
jo
mov
scas
mov
cwtl
inc
mov
cmp
xor
push
sbb
cwtl
mov
and
mov
pop
sbb
psrlq
scas
push
fstpl
sbb
jge
in
inc
fnstenv
mov
mov
inc
cwtl
mov
hlt
xor
sub
cmpb
or
in
dec
fs
pop
ror
sbbl
adc
mov
call
lds
jo
jmp
pop
stc
shlb
mov
popa
and
pop
sbb
xor
sidtl
sub
or
sti
add
mov
inc
pop
cmp
call
sbb
cmpsl
xor
aad
cmpsl
iret
inc
xchg
cld
sub
gs
jnp
jg
add
or
adc
int3
aam
fwait
enter
aad
cmp
inc
lcall
or
adc
rcrb
push
lods
leave
push
pushl
int
or
out
inc
lods
popf
fidivl
sahf
push
add
pop
iret
fwait
or
out
sbb
lods
lds
xor
mov
mov
pop
fcompl
mov
movl
ret
out
mov
mov
mov
pushf
aas
mov
mov
punpckhwd
pop
mov
sub
push
sub
popf
xchg
mov
and
push
mov
test
in
ret
int
iret
data16
xor
repz
std
xchg
jmp
jno
insl
mov
or
mov
fsubr
insl
adc
sbb
inc
pop
outsl
es
push
xchg
dec
sbb
push
or
lea
cmp
rolb
mov
mov
mov
imulb
sub
mov
and
sub
pop
scas
pop
cli
aad
jl
mov
cmp
cmp
stc
xchg
repz
mov
ret
mov
sub
into
inc
cmp
mov
negl
inc
push
adc
movsl
pop
xchg
out
je
and
mov
cmp
xor
loope
bound
pop
clc
jnp
fmul
inc
pop
inc
cmpb
jno
call
sbb
inc
sub
xchg
cmp
xchg
pushf
pop
push
in
push
sub
mov
test
into
addr16
les
push
xor
cmp
es
addb
inc
or
sbb
aas
inc
or
lock
ret
nop
lods
data16
dec
pop
mov
test
inc
dec
add
adc
xchg
push
jl
ds
popa
dec
outsl
outsl
add
cmp
pop
stc
add
and
sub
outsb
add
lret
fwait
sbb
xor
sbb
xchg
loopne
sub
in
jp
addr16
jl
adc
je
pop
and
cmpsl
test
call
inc
xchg
inc
adc
out
xchg
fisubl
test
imul
xchg
mov
ret
cmpb
sub
jns
sahf
and
jge
cld
sub
stos
ljmp
jbe
and
dec
insl
sbb
shlb
cmc
inc
addl
lahf
xor
mov
rorb
fs
sub
inc
and
mov
das
int
cwtd
mov
adc
fidivrs
dec
xor
pop
pushf
test
mov
lcall
mov
mov
or
mov
sbb
mov
imull
xchg
rol
mov
push
lea
mov
stc
testl
imul
push
push
sbb
addr16
movl
xor
shll
and
dec
call
xor
pop
pop
jno
dec
mov
xchg
cmp
test
stos
mov
pop
jmp
cli
stos
repnz
lret
or
outsb
andb
jmp
pop
sbb
lods
test
sub
ss
ljmp
das
push
xchg
iret
mov
dec
xorl
mov
test
daa
push
adc
mov
sbb
jne
xor
and
lahf
movsl
dec
testl
stos
adc
xchg
pop
fmull
cli
and
shr
and
arpl
cs
pop
push
add
das
cmp
mov
pop
mov
xchg
js
xor
xchg
mov
icebp
add
push
ss
dec
fbstp
in
cmp
dec
inc
dec
mov
jns
fiaddl
scas
cs
les
cmpl
cli
push
ljmp
xor
fwait
icebp
pop
sbb
cmp
icebp
test
pop
sbb
and
push
clc
mov
cld
cmp
test
fcmovbe
adc
sbb
push
xchg
and
sbb
jns
neg
mov
pop
xchg
xchg
jg
dec
sbb
ss
aad
mov
mov
add
xchg
jne
sti
mov
repnz
xchg
mov
outsb
outsb
dec
in
shll
frstors
mov
adc
xor
adc
lea
sbbl
sub
xchg
in
stos
stos
pop
mov
jecxz
les
ds
and
cmp
clc
mov
adc
imul
jp
filds
dec
mov
scas
xchg
mov
test
mov
lock
and
stos
fisubl
outsl
push
push
inc
dec
sub
arpl
fcmovnu
jno
mov
sub
lahf
inc
push
lcall
mov
test
mov
pop
in
test
lds
sub
scas
xchg
push
mov
and
push
stos
mov
xchg
add
mov
push
sbb
xchg
popa
pop
push
mov
xor
fsubs
lock
ljmp
rcrb
cmp
sbb
add
pop
sub
scas
dec
jbe
in
mov
or
sub
mov
lret
sub
xor
sub
fcompl
fs
pop
sbb
loop
scas
and
ss
sub
sar
out
sbbb
push
or
rorb
mov
shrb
loop
arpl
lods
adc
scas
mov
jl
scas
mov
cmpsb
sbb
fbld
add
in
pop
fwait
cmp
dec
pushf
adc
xlat
out
add
rclb
loope,pn
inc
outsb
mov
mov
xor
stc
sar
test
in
enter
int3
into
and
fisubrs
stc
mov
add
pop
out
adc
push
mov
mov
jne
fdivs
add
pop
fdivp
pusha
outsl
sub
jne
sub
xchg
adc
setge
jo
fwait
or
ss
jmp
sub
negl
inc
aaa
cmp
loope
adcl
add
repnz
call
ja
outsb
adc
pushf
jno
jne
lea
cmp
into
mov
inc
test
pop
test
cltd
fadds
out
push
cmp
inc
adc
inc
fidivrs
adc
xchg
sbb
jl
and
ficoml
rolb
lock
xor
jmp
xchg
popf
sbb
pop
aas
pop
test
mov
loope
int
lods
jo
push
jo
and
stos
pusha
add
pop
or
jecxz
iret
fdivp
popa
lea
pop
pop
fsubs
push
push
jbe
pushf
sahf
jb
cli
cmpb
outsl
das
call
add
mov
add
jge
insb
bound
mov
out
rcr
xchg
push
aas
xor
mov
push
cli
in
mov
push
in
decb
bound
repz
mov
ljmp
sbb
dec
or
cmp
pop
sub
or
inc
xchg
stc
ror
mov
lahf
cmp
push
jb
inc
movsb
jle
out
ret
add
arpl
fistps
out
outsb
sub
es
repnz
bound
out
lock
subl
and
jo
and
add
add
hlt
mov
jge
sbb
sbb
call
xchg
mov
push
sbb
mov
les
jp
jo
imul
aaa
mov
sub
leave
xchg
mov
pop
push
pop
mov
cld
pushf
rep
push
xor
and
sub
mul
pop
xchg
xor
cs
sbb
or
out
xor
pop
testl
and
ret
mov
scas
cmpsb
stc
in
inc
nop
leave
and
movsb
jge
shll
pop
mov
scas
pop
and
dec
paddw
push
pop
jle
and
push
pop
mov
mov
pusha
adc
lahf
gs
and
dec
and
push
test
sbb
mov
subb
out
xchg
adc
sarb
pop
pop
ret
and
int
cmp
outsl
stc
insl
fsubl
out
jmp
js
xor
mov
jne
mov
jne
aam
scas
sbb
and
dec
lret
inc
xor
push
vpmacswd
xor
loope
insl
lcall
mov
cmp
mov
jnp
jo
jbe
cwtl
mov
mov
stos
sbb
jmp
pop
add
es
call
mulb
xlat
insl
int3
nop
sub
fdivl
push
je
jae
mov
or
xor
loop
mov
push
loop
call
negl
xor
ja
pushf
imul
jnp
add
jmp
and
and
push
pop
sbbl
into
loope
add
inc
scas
and
mov
int3
popf
push
pushf
fstpl
cmpsl
push
clc
lds
jbe
jae
enter
cmp
stos
imul
ret
jnp
out
sbb
in
sub
mov
ret
mov
ret
mov
stc
xor
loope
inc
repnz
xchg
stos
scas
repnz
dec
ljmp
and
or
push
mov
pop
sbb
push
imul
inc
xor
xor
nop
jns
jae
lock
xor
mov
repnz
xor
xchg
adc
and
in
jne
movsb
test
jo
push
insl
ret
sub
repz
loopne
mov
mov
popa
jmp
inc
outsb
inc
jae
xchg
adc
nop
adc
jle
adc
cltd
nop
cli
cmp
sti
sti
cmpsl
cmc
repnz
inc
out
sbb
jno
sbb
jmp
mov
es
mov
lcall
jo
imul
mov
insl
sbb
dec
and
shrl
sub
xchg
xchg
fidivrs
shll
push
sub
hlt
int
inc
lahf
mov
xchg
je
mov
out
fisubl
lea
call
aam
cmp
lret
jg
inc
jmp
mov
bound
dec
jne
aam
or
outsl
pop
mov
leave
mov
test
cmc
cltd
repnz
xchg
les
dec
or
inc
cmp
cmc
mov
inc
rcrl
xchg
arpl
sub
xchg
outsl
adc
cmp
and
and
shr
daa
fwait
lret
and
mov
adc
mov
bound
pop
and
pop
adc
push
enter
pushf
in
mov
lret
inc
mov
loopne
hlt
les
xchg
cmpsl
insl
push
fchs
push
xor
aaa
mov
enter
dec
test
shl
dec
outsb
andb
adc
gs
mov
clc
dec
insl
in
xor
jnp
cmp
aas
mov
or
imul
xlat
jo
out
or
popa
fwait
popa
repnz
mov
cltd
roll
mov
decl
fcompl
or
mov
pop
push
aam
icebp
lret
jg
test
daa
xchg
mov
repnz
ja
insl
loopne
pop
push
jg
shlb
arpl
test
or
lcall
xor
and
ds
and
scas
jmp
or
xchg
inc
sbb
sub
cmp
lods
sbb
cmp
push
jg
std
or
js
xor
call
outsb
add
cmp
pop
ss
ror
hlt
mov
adc
not
or
pop
or
in
loopne
pop
jge
cmc
pop
mov
stos
test
mov
mov
jl
outsb
sarl
mov
push
sub
fistps
mov
fcompl
jl
cmp
cmp
mov
movsl
jl
jne
out
clc
jmp
mov
call
repz
ljmp
into
addr16
or
or
cmp
and
nop
cmp
ret
icebp
mov
adc
dec
jns
test
mov
leave
test
xor
jl
testb
xchg
rorb
add
out
aam
cmp
xchg
sar
mov
xchg
cmc
xchg
or
fstpl
aaa
dec
pop
cmp
int
jmp
and
inc
mov
add
les
fadds
xor
imul
call
or
fwait
mov
push
ds
leave
and
inc
mov
lea
pop
sbbb
mov
xor
sub
xor
call
sub
imull
cmp
mov
out
rolb
gs
lods
mov
or
adc
mov
sahf
or
insl
cmp
jmp
mov
fistpll
or
mov
jmp
jmp
mov
fstpl
jp
pop
mov
daa
cmpsb
xchg
ljmp
dec
adc
pop
xchg
adc
scas
stos
cmp
and
fwait
clc
push
adc
sub
pop
pop
cmpsb
xor
nop
inc
outsl
lods
pmulhuw
cmc
xlat
mov
outsb
stos
xorb
cmp
pop
cmp
call
sbb
iret
scas
mov
fldenv
outsb
xchg
sub
pop
jle
dec
int3
clc
rorl
mov
mov
adc
dec
icebp
sbbb
sub
cltd
inc
bound
scas
xor
sbb
mov
pop
fwait
cld
ficoml
pop
cmpsl
push
push
pop
imul
pusha
jnp
out
mov
fstl
xchg
clc
and
push
lret
sub
inc
aas
sub
aad
jo
push
leave
test
mov
leave
pop
call
mov
pop
jmp
outsb
mov
add
jnp
scas
inc
pop
inc
inc
mov
xchg
lea
pushf
adc
call
das
dec
mov
cmpsl
lcall
and
repnz
aas
sub
xchg
inc
jne
mov
icebp
mov
hlt
sub
add
push
add
cwtl
insb
inc
es
into
scas
or
mov
mov
sti
ds
inc
rcrl
mov
inc
pop
insb
sub
les
sub
fdivrl
jae
mov
mov
xor
fistpll
leave
jle
push
in
cmp
outsl
inc
add
cmpsb
insb
push
jl
out
mov
lcall
add
loopne
jbe
in
mov
cmp
or
mov
xchg
cmpl
fiaddl
inc
xchg
orb
fcoms
push
aaa
or
inc
data16
xor
in
dec
loope
mov
sub
ret
and
mov
call
popf
pop
in
xor
imul
jmp
into
pop
push
pop
jmp
jg
outsl
outsb
cmp
pop
mov
getsec
shll
mov
sbb
and
xchg
pushf
ja
inc
lods
roll
loopne
hlt
cmp
mov
and
ss
enter
mov
loop
mov
or
xchg
lds
push
push
xor
movb
sbb
jl
dec
mov
push
jle
inc
daa
jge
cmpsb
adc
or
dec
or
inc
stc
rolb
cmpsb
movups
jne
inc
cmpsb
mov
jp
std
push
mov
out
rcrb
add
dec
sarl
push
lahf
test
xor
lods
stos
add
push
sbb
pop
cmpsb
push
dec
dec
xor
xor
mov
sub
lock
pop
sbb
call
mov
xchg
jo
sbb
cmp
jns
dec
sbb
mov
inc
cmp
push
fstpt
sbb
sbb
sub
clc
in
sbb
xchg
adc
js
push
scas
mov
les
push
xor
adc
notb
mov
outsl
add
mulb
aas
inc
lock
jbe
jp
mov
push
sub
xchg
es
mov
les
inc
jbe
das
test
xchg
fdivl
ljmp
and
jmp
jl
jmp
cmp
in
sbb
sub
imul
inc
arpl
mov
fiaddl
and
fsubs
das
xchg
popf
stos
pop
jae
stos
dec
mov
xchg
cmp
jbe
out
xor
das
or
inc
sub
cmp
push
aad
mov
pop
outsb
push
add
fcmovnb
and
and
xchg
lret
ja
sbb
jo
mov
loope
pushf
aam
mov
mov
xor
orb
push
roll
scas
adc
mov
and
sub
call
jb
aad
pop
xchg
aaa
cmp
jo
inc
call
pushf
sub
mov
dec
ljmp
or
scas
insl
xor
push
xchg
add
mov
pop
out
fs
dec
ds
mov
cmpsl
mov
fidivs
mov
mov
pop
mov
fdivrs
push
lods
and
jmp
or
pop
sbb
sbb
mov
stos
rol
xchg
xlat
cmpsl
adc
nop
aas
add
adc
and
leave
push
aad
mov
sub
inc
add
call
add
sub
push
dec
pop
mov
pop
cmp
mov
imul
arpl
iret
xchg
cmpsb
popl
cmp
xchg
xlat
sbb
clc
jae
jl
sbb
jmp
dec
fs
cmp
popw
repnz
pop
fsts
add
push
adc
imulb
dec
out
cmpl
mov
ret
mov
jne
cmp
bound
jg
nop
pop
in
xchg
sti
test
dec
cmp
mov
inc
ljmp
lret
cmp
stos
dec
inc
lock
test
inc
mov
sbb
icebp
dec
push
push
cmp
mov
sahf
mov
cmp
in
lahf
fsts
testb
shl
ljmp
cmp
push
pop
add
les
push
sub
pop
pop
in
add
faddp
cmp
jmp
or
sbb
add
xor
std
fsubs
aad
test
adc
lock
push
add
xchg
aam
jmp
insb
xor
dec
pop
inc
lods
je
pushf
shrl
addl
loopne
cmp
pop
and
aaa
mov
inc
fmul
xlat
sub
loopnew
adc
movsl
das
xchg
push
mov
push
mov
sbb
loopne
lods
fs
cs
in
mov
or
cld
mov
mov
inc
es
push
or
jg
xchg
lea
dec
xchg
adc
pop
in
shrb
sbb
je
loop
lea
movsl
cmp
imul
in
rorl
jp
sbbb
add
dec
mov
add
cmovne
jle
in
iret
cmp
mov
xchg
push
add
push
flds
mov
insl
push
xchg
dec
adc
add
inc
sarl
fcoms
mov
mov
inc
push
ds
jnp
movsl
sub
out
jns
jno
mov
or
and
inc
bnd
js
add
std
jg
movsb
cmp
mov
pop
mov
jmp
ficoml
stos
sub
test
out
fisubl
xor
xorb
mov
cmp
dec
shrb
pop
pushf
enter
inc
cmc
out
jmp
cmp
inc
sbb
and
ret
sbb
repz
push
or
push
mov
into
push
dec
adc
cmp
inc
xchg
mov
inc
jbe
into
jmp
mov
mov
inc
sub
clc
push
jns
dec
mov
jbe
rcl
xor
pushf
jle
ja
test
lret
shrb
mov
scas
dec
jo
and
or
or
mov
jmp
icebp
push
pop
addb
cvtps2pi
cmc
pop
outsl
lahf
fisubl
ret
lret
and
mov
xlat
jae
inc
sahf
add
jne
jo
loop
leave
dec
fnstsw
jne
dec
adc
xlat
mov
cwtl
cmp
jecxz
push
jmp
js
pop
shll
insl
lret
cmp
sbb
insb
shrb
or
test
jnp
adc
or
or
jp
inc
enter
stc
sub
cmp
push
nop
test
push
cmpsl
clc
loop
ds
jns
xchg
adcb
jo
pop
repz
stc
inc
xchg
mov
out
jecxz
cld
movsb
sbb
jmp
dec
fs
mov
pop
cmp
ret
xchg
sbb
stos
and
cmp
mov
and
and
das
mov
cmp
mov
or
mov
addr16
mov
fdivrs
push
das
rcrl
xchg
stc
mov
jne
lods
gs
push
dec
mov
je
cmc
out
jo
mov
fists
xchg
in
and
add
dec
inc
cmp
in
sub
jo
ja
inc
or
jge
out
test
ds
fidivrs
mov
xchg
mov
sub
mov
xchg
cmp
lcall
push
push
or
vunpckhpd
add
mov
xchg
dec
sub
adc
lea
iret
or
lds
cmpsw
lea
ljmp
cmc
mov
push
sub
arpl
fdivrs
repz
mov
aas
ljmp
into
mov
adc
xchg
pop
and
mov
pusha
inc
lods
or
sbb
mov
insl
mov
push
mov
mov
and
ret
xor
ffreep
insl
pushf
subl
push
sbb
mov
fwait
pop
pusha
test
in
out
adc
xchg
mov
sbb
mov
out
push
push
in
aaa
fiadds
jmp
xor
pop
shll
leave
pop
loopne
jns
xor
stc
out
les
jbe
lahf
repnz
inc
pop
pop
sub
inc
sub
adc
in
sbb
jg
ljmp
lret
mov
sbb
cli
mov
dec
clc
push
adc
icebp
cmp
mov
lock
lock
pop
insl
sub
aas
mov
shrl
push
mov
xchg
pop
pop
cld
mov
push
xlat
inc
in
pusha
pop
mov
ficompl
push
add
mov
jno
sbb
mov
imul
out
jg
into
out
push
adc
call
or
rcrl
and
outsb
dec
aaa
fistl
fsubp
enter
loop
mov
add
jnp
lret
inc
mov
enter
sbb
rcrb
inc
jae
out
lahf
sbb
inc
lsl
jl
dec
sbbb
inc
pushf
sub
mov
and
add
add
inc
pop
std
data16
sub
cmp
push
divl
add
in
popf
mov
add
out
cmp
lahf
hlt
mov
xchg
jmp
nop
jp
std
mov
cli
fsubs
mov
push
rorl
icebp
or
or
enter
dec
xchg
jmp
sarb
loope
cmp
les
out
repz
lahf
gs
adc
and
xchg
and
aas
mov
pushf
enter
cmpsb
or
pop
inc
rcll
arpl
lret
sbb
push
pop
lods
in
sub
insb
clc
int
and
mov
in
or
ja
pop
mov
cmpps
aam
test
jmp
pmullw
jle
jnp
and
icebp
andl
pop
mov
lods
nop
inc
xchg
mov
push
jmp
dec
addr16
push
xchg
jnp
push
mov
loopne
fstl
add
jecxz
mov
cmp
sbb
lds
jl
and
pop
scas
in
mov
lods
clc
push
pop
lahf
call
fsubs
jle
pop
enter
loop
jae
cmc
imul
out
sbb
lret
push
shrl
insl
mov
xchg
ljmp
aam
loop
shll
mov
outsl
and
xor
adc
jno
pop
jno
inc
xlat
mov
xchg
mov
sarb
popf
aad
xchg
fisttps
mov
dec
pop
aad
mov
mov
loop
sub
sub
mov
fs
stos
lcall
imul
inc
cltd
cmp
and
ljmp
mov
ret
ret
fcomp
mov
pusha
mov
mov
xor
jb
xchg
inc
mov
add
arpl
sub
mov
jo
push
dec
ja
fmuls
ret
ljmp
in
mov
in
subl
pop
adc
xchg
ljmp
out
out
or
repnz
jge
add
ror
std
jo
push
cmp
out
pop
dec
outsb
in
ljmp
test
mov
icebp
xor
imull
inc
pop
std
into
inc
push
fsubrl
and
lahf
inc
cmp
std
xchg
jns
shlb
sbb
xor
lods
adc
pop
js
add
mov
cmp
dec
inc
add
bound
adc
imul
mov
in
jg
pop
mov
xor
cld
out
jl
mov
cmpsb
mov
arpl
repnz
cmpsb
jns
outsl
push
scas
mov
outsl
push
test
mov
dec
jae
mov
inc
outsb
add
hlt
lds
mov
pop
mov
das
pop
ret
clc
lea
fcmovne
push
je
in
fnstsw
adc
outsl
arpl
push
jle
fists
popf
mov
jp
bound
loope
and
fisubrs
and
outsl
add
pop
xchg
clc
sub
adc
and
ja
push
inc
fs
cmp
gs
rorl
cld
shl
mov
adc
cli
pop
cmpsl
sbb
cmpsl
test
lea
add
cvtdq2ps
sbb
dec
inc
lret
ss
inc
cmp
scas
cld
je
shrb
add
pop
or
push
mov
jmp
sub
movsl
inc
pop
push
sarl
adc
inc
jae
imul
mov
and
adc
jmp
push
sbb
xchg
jbe
outsl
imul
aam
push
lods
and
mov
mov
aas
jge
pushf
dec
mov
sub
sub
jmp
mov
or
mov
ror
sub
jg
push
dec
popa
push
int3
xchg
loopne,pn
out
fs
or
fs
inc
inc
pop
fistpll
push
movsb
push
in
in
mov
jnp
subb
ja
ficompl
outsl
lock
or
cltd
sahf
dec
cmp
xchg
jnp
ss
js
cmpsl
loope
dec
pop
mov
aam
jge
xor
xchg
lcall
add
xchg
cmpsb
out
xor
mov
jecxz
mov
mov
push
push
or
xor
imul
mov
mov
mov
negl
pop
fld1
lea
jl
pop
pop
repz
mov
xchg
lret
xor
inc
inc
pop
pop
mov
sbb
and
subb
cmp
and
xor
pop
sbb
arpl
add
add
daa
push
cmpsb
dec
ljmp
and
dec
push
inc
ficomps
sub
jb
repz
adc
jo
test
and
in
pop
adc
stos
or
aam
mov
imul
sbb
aad
or
imul
fmul
in
into
mov
fldt
hlt
or
inc
cmp
sub
jns
out
or
sub
jmp
xor
mov
push
push
test
fmull
add
mov
xor
dec
sub
cmc
jae
xchg
fwait
mov
jecxz
insl
data16
mov
imul
adc
push
pushl
jns
arpl
inc
pushf
filds
outsb
mov
push
mov
outsb
lret
xchg
loop
sub
push
jge
mov
jae
adc
push
inc
mov
mov
lcall
pop
lods
mov
movlps
push
jge
clc
xchg
out
pop
repnz
and
mov
les
jo
je
mov
in
stos
fstl
xlat
ss
mov
fwait
call
push
sub
fbld
adc
test
push
dec
test
sub
subb
stos
mov
out
and
icebp
outsb
rorb
out
pop
ret
sarl
mov
sbb
adc
std
insb
pop
shl
out
push
push
sub
lods
mov
push
jmp
pop
bound
test
and
inc
jo
and
int
bound
addr16
push
stos
ret
jge
cmpsb
orl
cwtl
shlb
xchg
and
sahf
push
fcompl
or
stc
out
into
jnp
lock
push
call
sub
pop
jo
dec
mov
xchg
and
cwtl
add
sti
jne,pn
mov
loopne
xchg
jno
pop
pop
or
loope
filds
loop
jo
mov
call
xor
fs
jle
mov
jo
sahf
mov
pushl
mov
andl
mov
push
mov
push
aad
xchg
jmp
cmc
mov
add
or
fdivrp
or
pusha
aam
arpl
cmpl
add
push
jo
sbb
xor
roll
ror
inc
and
daa
int3
ret
popa
int3
xchg
enter
pop
ds
or
pop
test
cmp
mov
lret
push
out
mov
imul
sbb
icebp
in
insb
shr
leave
arpl
jb
lods
mov
jns
fbstp
jle
stos
cmp
xchg
xor
pop
incl
or
push
ja
mov
aaa
movsb
cmp
testb
es
pusha
fcmove
scas
and
out
push
fimull
lea
cmp
xchg
ljmp
test
sbb
movsl
ds
jl
and
mov
pop
shlb
sahf
cmpsl
or
mov
fmuls
out
pop
xchg
jns
mov
push
xor
sbb
xor
dec
dec
enter
mov
sbb
xor
adc
mov
push
mov
cltd
hlt
fs
pop
sbb
mov
loopne
mov
mov
aaa
adc
mov
lcall
jmp
icebp
push
imull
push
fs
inc
cmc
cs
pushl
mov
sbb
jle
mov
xchg
aad
js
xor
push
sbb
inc
lods
clc
insl
pop
cmpsl
push
testb
mov
sbb
orl
sub
dec
clc
push
adc
xchg
push
push
test
fidivs
jg
popa
aaa
and
xor
and
imul
clc
lea
inc
pusha
sub
cmpsb
jge
clc
mov
sub
into
sti
pop
enter
or
addl
mov
lret
add
sub
cmpsb
pop
lret
and
adc
and
inc
jmp
stos
mov
jb
mov
mov
les
ja
mov
sbb
leave
push
lods
and
and
push
inc
loop
or
push
loop
out
divb
hlt
inc
fs
adc
mov
aad
jge
xchg
mov
pop
push
mov
clc
mov
xorps
shlb
jo
mov
out
lods
daa
cli
inc
aam
inc
lret
xchg
outsb
push
sub
aam
gs
loopne
ret
sbb
cmp
cmp
aam
push
cmp
mov
hlt
push
and
ret
or
xchg
mov
clc
xchg
push
inc
and
sbb
xchg
addr16
and
push
inc
faddl
inc
or
pop
sti
iret
bswap
mov
or
cmpsb
pop
mov
adc
fs
sub
loopne
inc
out
pop
or
sti
xchg
pop
cmpsl
jae
cmp
mov
dec
in
jmp
xchg
xor
pop
mov
xor
jl
es
add
mov
cmp
lret
fsubrl
stos
or
int
test
fchs
push
bound
aaa
dec
sub
sub
lcall
ret
sub
in
add
jnp
push
sub
jno
cltd
in
pop
je
cli
cmp
push
dec
xor
int
adc
imul
jbe
icebp
sbb
leave
adc
addr16
mov
shlb
cmpl
cmpsb
add
sbb
aam
pop
push
dec
stos
enter
out
int3
stos
xchg
popf
addr16
idivl
push
rol
iret
dec
add
inc
pop
inc
push
sub
sbb
call
mov
negb
push
mov
or
js
add
adc
add
dec
cli
dec
test
into
cwtl
ss
jnp
aas
scas
jb
inc
push
xchg
cld
xor
aaa
pop
push
mov
push
sbbl
jbe
dec
mov
aam
fidivs
and
les
inc
rorl
inc
dec
xchg
cmp
inc
pop
lea
pop
outsb
pop
mov
clc
dec
sbb
adc
std
jp
xor
mov
mov
sbbb
fcoms
outsw
xor
xchg
adc
inc
out
addl
ds
mov
push
dec
lahf
and
fmuls
ret
mov
xchg
push
adc
insl
leave
pop
fwait
add
sbb
lds
ds
ja
leave
in
repz
mov
push
xor
ss
and
aam
incl
std
pop
rorl
fcmove
and
lret
test
sbb
icebp
inc
loop
add
rcll
ficompl
mov
push
mov
ljmp
xor
icebp
dec
jb
dec
cltd
xchg
and
dec
outsb
aaa
pop
in
loope
xchg
inc
mov
lods
imul
out
adc
stc
inc
pop
in
pop
ljmp
arpl
int
push
inc
jg,pt
push
mov
or
dec
stos
push
loop
inc
push
adcb
xchg
stc
inc
fstpt
gs
jns
fcoml
and
push
insl
loope
mov
pop
push
insl
mov
add
cmp
jnp
or
clc
subb
add
nop
dec
aad
dec
mov
xor
pop
sbb
leave
js
xor
xor
jp
sbb
push
inc
dec
xchg
outsb
fiadds
ret
inc
push
lret
add
push
xor
cmpsl
cmp
mov
xor
jne
sbbb
fistpll
pop
inc
jp
sarl
clc
inc
fists
les
mov
push
mov
mov
das
es
jmp
in
ficompl
js
pop
xor
or
popa
xchg
adc
fcomps
test
sbb
unpcklps
mov
xor
lret
cmp
and
int
jnp
jle
push
pop
cli
adc
mov
xchg
ss
pop
pop
dec
dec
cld
jp
loopne
push
ret
call
sub
add
mov
mov
es
in
std
adc
pop
call
sub
or
fisttpll
lds
inc
ds
rcrl
vaddpd
out
mov
sbb
int
out
lods
or
or
sbb
cmovs
dec
push
shl
repnz
test
iret
adc
cwtl
les
iret
sbb
mov
push
add
lcall
or
mov
mov
dec
fsubrl
ljmp
adc
cmpsb
idivb
mov
bound
das
je
pop
sbb
push
add
aad
and
mov
lds
stos
sbb
jmp
or
sub
sbb
in
push
inc
dec
dec
sarb
mov
add
das
xor
aaa
inc
mov
mov
inc
sbb
std
sbb
outsb
lods
cmp
pop
cmpsb
cwtl
into
mov
jno
mov
push
mov
test
jbe
aam
adc
lea
inc
cli
stos
ljmp
dec
jo
insb
xchg
jno
mov
xchg
pop
sbb
or
or
lea
and
mov
pop
push
pop
icebp
mov
imul
rolb
sbb
int3
cs
inc
insb
sub
aas
or
and
add
lods
ret
pop
ljmp
rorb
int
or
jp
ljmp
dec
fldl
and
and
repnz
and
lcall
cwtl
cmp
pusha
mov
shll
movsb
repz
or
shlb
xchg
xchg
pop
lods
lcall
add
nop
dec
sub
pusha
push
test
pop
leave
or
sbb
mov
xlat
or
jo
dec
dec
xchg
popf
or
mov
cmpb
out
add
push
je
push
adc
xor
xor
mov
enter
push
in
call
popa
xchg
cmpsl
imul
mov
mov
repz
cs
jno
jg
or
lods
and
mov
and
dec
bound
popa
rclb
xchg
mov
lods
in
not
repz
inc
lahf
dec
fisubrl
es
add
mov
pusha
loope
or
mov
repnz
in
ja
pushf
negb
sbb
cmpsl
sub
xchg
mov
popa
mov
insl
roll
push
push
mov
sub
push
faddl
jmp
sahf
mov
or
sub
dec
in
or
dec
pop
mov
fcmove
lcall
popa
jle
daa
int
popf
enter
mov
xlat
in
mov
addr16
movb
mov
jle
jge
push
lods
pop
mov
cmp
pop
enter
lea
add
mov
daa
sub
jmp
jp
test
or
adc
or
xor
ret
pop
out
aad
or
adc
pusha
pop
pop
stos
cmp
lret
das
adc
add
fs
dec
xchg
out
pushf
jne
mov
iret
sti
ljmp
lock
adc
pop
dec
insb
and
and
or
movl
cmp
stos
mov
mov
ret
adc
and
in
ss
scas
out
or
flds
test
dec
sti
sbb
dec
inc
insl
call
or
clc
out
xchg
and
push
cli
cli
sbb
iret
out
sbb
mov
xchg
xchg
pop
or
mov
sbb
add
dec
adc
fdivrs
cs
pop
jmp
jg
jge
and
rorl
movsb
and
and
shl
dec
xor
sbb
cmpsb
adc
mov
clc
dec
push
mov
inc
mov
mov
fistpll
repz
add
xchg
sub
dec
iret
mov
pop
in
sbb
enter
mov
pop
push
repnz
push
adc
adc
das
ret
push
adc
sbb
sbb
in
mov
xchg
fnstsw
cwtl
and
adc
pop
mov
out
imul
pop
adc
push
xor
incl
lahf
sub
jg
imul
fists
cmp
sbb
adc
sub
or
xorl
and
cwtl
push
add
into
jmp
int3
inc
mov
imul
das
adc
cmpsl
mov
and
mov
loop
lahf
jo
adc
sti
mov
mov
xchg
push
jge
fstpt
test
insb
cmp
mov
imulb
int3
les
repz
pop
jge
or
daa
xchg
cltd
xchg
scas
push
inc
mov
and
pop
stc
sbb
add
adc
mov
cltd
and
pop
lcall
jecxz
cs
or
adc
sub
sbb
cld
in
add
add
jnp
pop
ss
adc
dec
pop
aam
mov
sub
mov
push
jnp
fsubrl
xor
add
xchg
lea
iret
jge
std
add
inc
and
pop
int
ret
pop
jge
pop
ja
lcall
cli
fldt
fbld
push
aas
push
adcb
inc
movsl
rcrb
lock
sub
mov
mov
faddl
fnsetpm(287
fsts
jne
inc
hlt
test
in
ja
pop
int3
dec
xchg
jecxz
shll
pop
lret
dec
mov
jo
jl
cs
cmp
cmpsb
cmp
add
popa
addr16
and
xchg
cmp
mov
jl
jl
rcrl
scas
in
mov
push
rorb
push
push
xorl
push
orb
incb
push
mov
ljmp
xor
fisttps
aam
lret
cmp
int
mov
cmpsl
dec
pop
icebp
xchg
inc
or
jne
or
xchg
cmp
pushf
add
dec
xor
push
pop
sub
sbb
jb
rcll
dec
inc
insl
fdivl
xor
xor
cmp
xchg
xor
punpckhdq
testb
lret
mov
sar
and
test
xor
ret
dec
push
cs
mov
aas
cmp
mov
jecxz
push
outsl
sbb
ljmp
pop
xor
cltd
xchg
mov
jnp
pusha
lea
mov
mov
push
aad
bound
push
mov
loopne
nop
lods
xorl
enter
scas
mov
push
cmp
jl
push
popf
push
sahf
or
add
inc
test
adc
out
push
mov
xchg
or
mov
mov
jb
jl
ret
mov
clc
add
inc
ret
clc
mov
mov
xchg
mov
cmp
inc
addb
xor
fsubl
xchg
and
mov
cs
in
cmc
fisttpll
sub
test
sbb
call
xor
and
lcall
into
cs
mov
rcr
dec
adc
fldl
xor
rcrb
stos
jnp
add
pop
in
dec
int
subb
mov
fistps
and
mov
call
fcoml
mov
jnp
fs
fmulp
adc
xor
mov
das
cmpsb
int3
mov
imul
xchg
test
or
incl
xchg
and
fstl
inc
xchg
dec
pop
out
pop
in
or
loopne
mov
movsb
jp
aad
hlt
xor
mov
aad
icebp
mul
mov
shrl
ficoms
ret
cli
rcrl
inc
mov
sbb
shlb
test
scas
rorb
push
jp
ss
pop
lock
data16
xchg
loop
push
jbe
enter
lret
lret
xor
scas
call
xchg
into
aaa
mov
cmpsb
jge
popf
into
jnp
inc
push
mov
insb
addr16
or
dec
cmp
jno
popf
in
imul
mov
orl
outsb
cmp
repz
ja
fnstcw
add
add
out
int3
sbb
call
xor
sbbb
cld
jno
inc
outsl
outsl
jns
mov
mov
aaa
jmp
xor
pop
pop
push
test
les
daa
in
loope
jecxz
fsts
push
add
dec
movsl
cmpsl
dec
add
lock
or
cmpsl
xlat
mov
test
sbb
ljmp
in
add
cs
mov
xor
sbb
cld
sub
call
nop
in
xlat
pop
arpl
push
pop
push
xor
call
ret
or
jb
xchg
test
int3
xor
movsb
mov
pop
sub
xor
pop
lds
ss
std
test
lret
pop
leave
stos
adc
adc
popf
loop
test
cmp
inc
push
popf
clc
dec
jge
push
push
dec
ljmp
sbb
and
inc
imul
mov
inc
cmpsl
add
rcrl
repnz
out
js
arpl
add
nop
push
lds
mov
aas
sbb
insl
int3
sub
xchg
insl
test
xor
adc
orb
cmpsl
and
and
or
fdivrl
fnstenv
adc
mov
pop
stc
mov
and
fldcw
jne
lods
outsb
mov
ret
icebp
xchg
and
xor
jp
in
add
xor
and
push
adc
sub
push
adc
mov
jmp
inc
fs
push
test
and
rcr
lea
sbb
adcb
hlt
and
pop
imul
cmp
stos
sub
pop
mov
or
sub
punpckldq
leave
roll
jge
jmp
push
fsubr
andl
call
rol
sub
inc
imul
push
jno
add
insb
cli
in
sub
lahf
xor
cmp
and
lods
pushf
das
scas
pop
or
pop
mov
push
aad
inc
out
in
shr
lret
dec
ljmp
lcallw
pop
shl
ret
mov
cmc
add
lds
cli
daa
and
and
or
loope
lea
mov
stc
push
jno
adc
mov
xchg
fidivrl
adc
repz
push
repz
xchg
out
les
dec
adc
mov
iret
pop
mov
in
add
in
dec
push
sti
push
outsl
inc
mov
pop
mov
jnp
jb
ret
rol
sub
daa
xchg
ret
and
push
cmc
mov
jb
push
sahf
hlt
ret
aaa
dec
pushl
ja
outsb
je
push
enter
mov
dec
aam
fadds
notb
xchg
inc
sbb
push
xor
insb
cmp
sub
inc
dec
jne
fbstp
lods
shrl
mov
scas
mov
imul
icebp
test
cmpsb
inc
pop
cmpsb
mov
sahf
mov
lock
cmp
bound
mov
in
mov
pop
pop
sbb
and
ret
push
lahf
cs
mov
std
mov
or
scas
xor
sub
dec
scas
pop
adc
dec
sub
push
dec
cmp
scas
lcall
movsl
push
rcrb
jg
xchg
les
cmc
mov
lods
mov
pusha
jmp
bound
sbb
sbb
jbe
outsb
iret
movsb
iret
pusha
xchg
push
cmpsb
add
iret
imul
cld
jbe
add
fidivrs
rorb
jge
add
mov
mov
nop
lret
enter
sahf
int
hlt
jle
sbb
or
adc
sub
push
mov
dec
push
repz
mov
sub
sarl
stos
mov
push
sbb
out
xchg
xchg
adc
ret
adc
leave
xchg
lea
dec
push
and
push
mov
call
shrb
in
imul
pushf
out
xor
pop
fwait
pop
mov
insb
and
js
test
shr
mov
out
mov
sbbb
or
js
sahf
dec
mov
scas
cmpsb
mov
dec
out
push
dec
out
sub
aas
jge
fcmovnu
hlt
push
out
or
repnz
fcmovbe
subl
outsl
ffreep
fstps
mov
sbb
adcl
mov
pop
loop
lds
push
and
push
push
int3
dec
mov
add
cmp
test
lds
jmp
dec
push
adc
aaa
in
ja
mov
sub
sahf
fnstenv
or
push
ffreep
dec
jne
shl
jmp
rclb
dec
repz
xchg
adc
out
leave
repnz
cmp
xchg
push
mov
int
push
pshufw
andb
xchg
and
xchg
add
mov
adc
mov
and
dec
pop
dec
inc
in
adc
mov
fdivrl
adc
jl
dec
pop
inc
jmp
or
cmc
xor
lcall
inc
jbe
scas
jecxz
inc
jbe
mov
inc
pusha
sbb
andl
fcompl
in
mov
fisubrs
lret
cli
pop
xchg
inc
lea
mov
adc
sbb
mov
ljmp
jnp
out
movsl
sbb
fs
cmp
push
fs
and
iret
and
mov
dec
lret
mov
loope
mov
fistps
jecxz
arpl
add
mov
jge
mov
rcl
test
ficoms
lods
xchg
jle
lahf
pushf
mov
xchg
mov
loop
mov
ja
xchg
adc
push
scas
push
out
push
ret
mov
fldt
cli
cmp
dec
adc
test
in
push
stos
lods
push
lea
sub
in
xor
and
dec
aad
in
fildl
in
mov
into
mov
xchg
movsl
call
ret
call
pop
dec
xchg
adc
sbbb
cmp
ds
das
or
gs
negb
mov
shrb
leave
cs
das
xchg
add
in
test
adc
cmp
sti
or
imul
xchg
cmp
aam
mov
stos
pop
sbb
jl
push
dec
mov
fcmovnbe
mov
in
jle
inc
or
cmp
popf
ss
popf
pop
jp
cwtl
shl
pop
push
jecxz
scas
dec
outsb
push
mov
or
add
into
sub
es
movsl
or
cli
push
or
lea
inc
sub
sub
mov
iret
xor
loope
cli
negl
faddl
pop
cmpsl
pop
xor
pop
jno
jb
adc
aas
outsl
popa
fistpl
outsl
lock
dec
pop
shll
std
cltd
mov
adc
pop
shl
cltd
inc
into
adc
push
mov
inc
sub
fiadds
cmp
cs
push
xchg
fcmovne
sub
ja
scas
mov
mov
dec
xor
stos
ja,pn
ss
out
fmul
push
in
jns
add
sbb
movsb
fsts
mov
data16
push
fdivl
add
notb
rol
xchg
push
mov
dec
hlt
lahf
jle
cmp
xchg
sub
or
mov
repnz
jg
test
test
sahf
inc
rol
rcrb
fistps
xchg
jae
cli
in
push
mov
cwtl
nop
outsb
push
aam
subl
dec
popf
rcl
add
mov
lock
dec
inc
mov
mov
inc
je
and
int3
add
fdivs
sub
cwtl
jo
pop
sti
inc
stc
push
lds
nop
mov
and
cwtl
pop
jno
mov
push
stos
mov
mov
test
movnti
daa
mov
lcall
outsb
pop
movsl
or
add
push
jb
cmc
push
xor
popf
int3
mov
pop
pop
and
ljmp
sbb
xor
orl
inc
pop
fwait
das
sbb
pop
mov
sbb
sub
mov
jecxz
pop
xchg
cltd
outsb
jp
jne
push
mov
and
pop
jl
mov
or
jge
jns
or
jp
push
mov
sub
mov
lahf
arpl
je
imul
mov
jl
cmpsl
jnp
roll
clc
sub
xlat
cmc
scas
sbb
mov
inc
xor
adc
mov
push
pop
xor
pop
popf
pop
or
stos
mov
cmp
out
jl
add
xor
or
lea
jecxz
sbb
aaa
dec
xchg
jmp
cs
push
push
repnz
add
insl
pop
sarb
or
in
scas
clc
jmp
cmp
xor
mov
jne
leave
pop
gs
inc
stos
mov
scas
push
clc
lods
stc
mov
and
xor
jl
inc
sub
std
inc
cmp
xchg
jbe
mov
push
aaa
es
mov
xchg
movq
test
xor
sbb
xor
sbb
rorl
popf
pop
cs
and
sub
push
add
popf
push
fldcw
add
sub
imul
cmpsl
adc
pushf
mov
iret
mov
cmp
adc
out
es
idivl
mov
jg
mov
outsl
mov
xchg
xchg
popa
js
sub
rorb
lods
cld
jg
xor
add
sbb
popa
xchg
and
inc
in
fsubr
xor
ss
ja
cmp
inc
es
dec
in
fisubl
mov
movsb
xchg
cmp
ss
and
sbb
xor
xor
inc
lods
pop
pop
jge
adc
nop
fisttpll
push
pop
fxch
gs
mov
daa
lahf
push
rolb
lahf
pop
cmp
fadds
arpl
fildll
and
in
pop
jo
adc
push
sbbl
mull
add
pop
xchg
in
mov
add
iret
loope
cmp
push
pop
stc
loop
out
xchg
les
add
push
pop
push
sub
in
jp
push
inc
lahf
insl
ror
sbb
divb
imul
cwtl
sahf
push
outsb
adc
mov
mov
das
out
dec
hlt
and
push
ja
fs
xchg
sbb
dec
xchg
or
sbb
cmp
ja
les
xor
stos
hlt
movsb
jo
addr16
jb
hlt
enter
and
cmp
shl
into
jp
add
adcb
mov
enter
mov
mov
out
movsl
sub
mov
jb
cmp
sub
es
xchg
bound
popf
dec
lcall
pop
dec
popf
inc
iret
insl
mov
add
incl
jnp
xor
sbb
mov
or
shr
dec
xor
jge
test
mov
popf
dec
pop
inc
in
cmpsb
push
sbbl
daa
mov
and
aas
sub
cmp
push
lds
es
mov
dec
ljmp
gs
stos
fmul
inc
loope
std
lods
add
mov
ja
mov
mov
mov
flds
stos
enter
mov
mov
and
insb
and
xchg
cltd
xchg
cmpb
sub
mov
xor
fs
jne
ds
rclb
or
pop
ret
ds
mov
mulb
lret
pop
cltd
int
sahf
xchg
dec
push
jg
dec
out
movsl
xchg
dec
pop
data16
inc
rclb
mov
repz
mov
lock
mov
sub
cmp
into
and
fistpll
aad
sarb
inc
mov
pop
movsl
das
arpl
ja
xchg
cltd
dec
fidivrl
xor
adc
jp
xchg
and
stos
add
xchg
test
mov
ds
xchg
sbb
push
or
push
sahf
and
sub
clc
fdivr
into
mov
push
xor
lods
imul
in
test
jmp
sub
nop
mov
mov
orb
mov
or
adc
cmp
jnp
test
cmp
lea
arpl
std
imul
push
pop
sub
gs
mov
mov
fsubrp
or
sub
xchg
lahf
cmp
push
cmpsb
and
fdivrl
aad
sub
push
pop
test
add
and
lods
loope
add
stos
out
pop
scas
movsb
inc
gs
adcb
mov
push
in
jo
sub
scas
jnp
cmp
out
push
decb
loopne
push
pcmpgtd
std
sub
jns
or
xlat
lds
jmp
test
cs
pop
push
or
adc
frstor
jp
inc
dec
cmp
mov
or
and
jmp
xchg
dec
stc
stos
test
push
movb
and
and
notl
loop
negl
dec
insb
mov
into
push
pusha
repz
push
dec
inc
and
jo
jp
cltd
add
daa
mov
dec
sub
sbb
and
jne
add
shll
jns
pop
bound
call
xchg
or
mov
loopne,pt
mov
repnz
imul
pop
xor
fcoml
lds
lcall
add
cmc
push
jnp,pn
sub
push
mov
mov
aaa
xchg
xor
das
inc
hlt
xor
mov
out
imul
jge
mov
ret
jp
les
jge
add
cli
clc
mov
lahf
mov
or
xchg
pop
adc
js
mov
jmp
add
cmp
add
lods
ljmp
mov
mov
mov
mov
add
inc
in
mov
fisubrs
mov
popa
adc
scas
xchg
jo
cmp
push
xchg
or
xorl
loop
sbb
fdivs
inc
insl
or
sbb
js
dec
test
xchg
and
mov
adc
aad
add
xor
xor
jecxz
or
inc
or
mov
lods
cmp
outsb
enter
test
movsl
mov
ja
test
in
xor
jle
sbb
pop
out
movsb
lea
cld
push
insb
jns
mov
popa
mov
jmp
daa
inc
int
xlat
sub
push
jbe
test
jno
xchg
in
dec
mov
inc
add
arpl
xchg
jecxz
lods
push
mov
jle
cmpsb
sub
dec
mov
mov
aas
push
ss
iret
mov
push
sbb
adc
mov
stos
lods
in
sub
roll
fnstsw
inc
xor
jp
add
repz
repz
mov
push
les
aas
stc
inc
xor
scas
add
popa
orl
arpl
cmpsl
xchg
dec
inc
xchg
inc
arpl
popa
hlt
in
inc
pop
add
sbb
xchg
bound
insb
xchg
es
xchg
iret
rolb
rclb
clc
pop
add
stos
js
jns
stos
scas
decl
fistl
sub
rcrb
and
inc
fdivrp
stos
negb
ljmp
xlat
sti
jecxz
and
jl
imul
mov
es
leave
push
jb
enter
lock
repnz
movsb
pusha
ret
shll
fucomi
addr16
mov
sbb
std
clc
lds
ficoml
fstpl
fs
pop
mov
and
test
imul
aam
sub
loope
mov
daa
mov
popa
sbb
aaa
jo
sub
out
inc
stos
sub
rclb
stos
fcomip
mov
imul
das
inc
les
jo
and
xchg
push
stos
push
mov
movsb
rolb
push
sub
push
sbb
mov
std
clc
inc
xor
xlat
loopne
jb
pop
into
dec
sub
xchg
imul
push
mov
iret
lea
cmpsb
adc
and
mov
dec
daa
pop
jne
sti
rcrl
lds
cwtl
mov
inc
repz
popf
pop
or
in
jp
scas
rcrb
dec
add
inc
inc
addr16
std
mov
dec
mov
push
rolb
hlt
pop
jge
push
in
mov
push
push
std
adc
mov
xchg
mov
xor
repz
adc
stos
xor
mov
icebp
mov
pop
cwtl
xor
dec
mov
in
out
pop
in
adc
sbb
and
pop
sbb
xchg
inc
stos
aaa
push
push
dec
pop
gs
into
cmpsl
inc
outsb
mov
aad
pop
scas
stos
mov
xchg
push
arpl
push
es
add
sti
adc
cmp
adc
data16
test
test
rolb
out
add
imul
icebp
nopl
mov
test
leave
shlb
subl
dec
sbb
mov
sbb
ljmp
pushf
mov
mov
sahf
xchg
mov
sub
or
out
rolb
jbe
sub
mov
or
daa
jo
mov
adc
lahf
push
shlb
iret
mov
imull
dec
pop
movsb
push
int
test
pop
pop
push
mov
into
add
cmp
sub
jp
in
add
pushf
scas
adc
sbb
imul
pop
mov
into
pop
adc
jl
jge
or
cltd
add
mov
jb
and
pop
mov
xor
iret
jp
movsl
mov
xchg
ja
fcmovnbe
jge
jns
dec
inc
aaa
repnz
and
imul
mov
mov
xchg
push
sbb
inc
or
push
clc
pushf
shl
mull
mov
xor
dec
sbb
fistps
mov
ja
mov
mov
addr16
or
shl
mov
js
fcomi
sar
outsb
fucomi
pop
roll
jnp
rcr
pop
fdivl
js
or
mov
add
outsl
sub
mov
dec
xchg
mov
daa
fwait
ss
aaa
and
dec
push
dec
scas
fisubrl
adc
mov
ja
orb
into
adc
dec
dec
ja
int
and
stos
and
lahf
mov
mov
repnz
lcall
outsb
xchg
xchg
xchg
pop
test
dec
repz
cld
adc
ljmp
push
or
cmc
mov
cld
adc
clc
sbb
and
mov
outsb
or
scas
mov
stc
jge
ss
pop
sub
jno
das
mov
pop
pop
popa
rcrl
mov
push
loopne
leave
xchg
shl
clc
mov
pop
int3
mov
repz
in
cs
pop
inc
addr16
mov
push
mov
xor
pop
popa
add
and
push
and
enter
repnz
sbb
arpl
insb
add
adc
push
xor
and
test
out
add
scas
push
sbb
mov
loop
loop
cld
cmp
dec
out
out
inc
ret
cmp
push
cmp
push
notl
hlt
rcrb
popa
mov
lods
mov
dec
cmp
outsl
sbbb
out
gs
add
movsl
mov
xchg
add
rcll
into
sbb
ret
sub
loop
leave
lea
mov
sub
lock
jo
inc
adc
mov
cwtl
fdivrl
jne
mov
out
or
iret
in
mov
and
xorb
arpl
cltd
jge
sbb
ja
rolb
scas
out
cmp
adc
xor
popa
push
pop
and
div
shll
movsl
xchg
push
push
and
pop
fwait
xchg
in
mov
outsb
mov
movsb
rol
dec
add
ds
inc
and
cmp
xor
jp
inc
xchg
je
cmp
out
or
jns
fimuls
inc
jle
push
xor
push
sbb
pusha
hlt
sarb
lods
movsb
fnstsw
movsl
nop
cmp
rcll
add
pop
dec
lds
repnz
cmp
mov
add
mov
test
add
adc
or
fdiv
lock
jns
test
xlat
cli
sbb
rcr
xor
incl
and
jmp
adc
xor
fwait
sub
repz
xor
sbb
inc
out
inc
or
xchg
imul
sub
out
das
nop
adc
in
add
dec
jb
sub
in
ficompl
or
aaa
lods
pop
push
and
jmp
lahf
in
es
mov
push
or
negl
pop
jecxz
dec
roll
cmp
jns,pn
or
jmp
jne
xor
add
and
fidivl
pop
int3
jle
es
push
push
dec
mov
sahf
sbb
cs
push
test
dec
aaa
jmp
cmp
and
clc
xor
mov
sub
das
mov
sbb
jbe
inc
or
cmp
sbb
and
addl
mov
jo
std
cmp
jl
repz
mov
jnp
ret
adc
mov
lea
push
fsubrs
lods
jle
leave
mov
dec
jnp
pop
lcall
jae
adc
cmp
push
cld
or
adc
gs
mov
pop
dec
popf
jecxz
xor
cmovns
inc
cmp
mov
inc
pop
sbb
push
xchg
mov
mov
jb
push
sahf
pop
or
pop
aas
pop
dec
cmp
fisubs
incb
pop
scas
push
inc
enter
push
jmp
movsl
pop
pop
ja
sti
cs
lret
adc
mov
push
cmpsb
jnp
sub
in
fstl
sbb
mov
cmp
adcl
push
mov
and
jmp
sub
pop
test
mov
add
mov
jne
or
pop
loope
xor
in
push
and
and
subb
xor
xchg
cmp
mov
fs
mov
sbb
fimull
js
pushf
cltd
stos
add
fs
jns
sbb
aad
shr
mov
test
add
adc
push
lret
fnsave
or
pop
mov
xchg
pop
push
jne
aas
lds
inc
out
mov
pop
inc
cmp
out
fld
cmp
subb
push
out
stc
xchg
push
fs
dec
mov
push
mov
ljmp
sub
ss
sub
mov
js
pop
fisttpll
jl
lods
neg
cmp
push
push
movsb
jbe
add
popf
or
cwtl
jmp
jb
mov
les
pushf
lods
jns
push
hlt
jb
jae
xchg
or
ret
mov
es
mov
out
pop
and
pop
stos
mov
jb
sbb
mov
cmp
into
in
mov
out
xchg
insb
push
dec
mov
jb
pusha
sbb
dec
arpl
shrl
ja
add
xchg
aaa
cmp
lods
pop
scas
sbb
jb
mov
inc
out
lret
scas
jecxz
mov
jmp
or
mov
ficoms
test
fwait
jl
cli
inc
mov
mov
jg
sub
out
mov
push
sbb
mov
pop
cmp
xchg
lcall
in
mov
test
inc
inc
scas
xlat
dec
ja
jmp
sbb
jnp
inc
mull
dec
xchg
addr16
aad
sti
xlat
sbb
fsts
jnp
ljmp
jl
push
je
leave
dec
pop
add
in
cltd
xchg
outsl
stos
mov
and
nop
pop
cmp
dec
push
in
xor
fbld
and
divb
les
pop
pop
xchg
test
icebp
mov
xor
jle
push
xchg
sbbl
or
mov
rcr
xor
sbb
loope
dec
in
push
scas
call
loop
mov
es
push
test
inc
lahf
test
fxam
xor
loope
pop
popf
adc
movsb
and
andb
pop
rcl
loop
int3
mov
sbb
xor
xchg
movsl
jge
std
mov
fmul
dec
dec
shlb
lock
shl
lods
test
shll
data16
sub
daa
jo
mov
aad
loopne
aaa
arpl
stos
clc
test
pop
loopne
pop
sbbb
fsts
test
sbb
les
cmp
jne
jp
lret
xor
or
cmpb
leave
ss
xor
loop
shll
shl
mov
jno
cmp
mov
push
push
mov
add
sahf
lds
sti
sbb
dec
pop
cmpsb
aam
add
test
inc
out
hlt
and
mov
in
pop
jmp
or
loop
and
jge
outsb
mov
pop
xchg
xor
insl
aad
adcl
xor
or
dec
xchg
pop
or
scas
icebp
fsubs
push
add
or
push
or
push
add
dec
leave
movsb
pop
mov
dec
test
bound
hlt
and
fidivl
mov
mov
test
or
xchg
xchg
lahf
xchg
push
scas
jbe
int
repnz
lods
inc
inc
xor
ret
jb
idivb
and
sub
add
in
scas
mov
lods
lods
inc
jo
push
mov
call
scas
mov
mov
inc
imul
cmpb
dec
notb
fs
dec
cmp
sahf
sbbl
stc
out
mov
sub
push
push
arpl
or
imul
repnz
or
fwait
test
xchg
lds
popa
fimuls
ss
xor
sti
jb
test
subb
int3
jg
dec
dec
iret
or
cwtl
sub
mov
repnz
lea
scas
xor
and
mov
in
add
push
jecxz
sbb
je
mov
xchg
and
adc
cmp
movsb
dec
daa
sub
fs
out
stc
cmp
inc
mov
mov
cli
rcll
sbb
fs
cmp
int
fdivrs
mov
jo
notb
lods
xorb
xor
jge
cli
fcoms
xchg
loop
out
cs
into
cmpsl
cli
in
xchg
sub
sub
add
mov
in
fsubl
dec
xor
test
push
iret
or
ficomps
cmp
mov
sbb
pop
inc
and
push
out
aad
fistpll
lret
insb
inc
add
xchg
dec
mov
sub
int3
jle
in
mov
mov
or
test
and
inc
push
pusha
fdivrl
mov
stos
mov
cmpsl
pop
lret
jmp
pop
insb
jp
xchg
and
in
popa
inc
lahf
xchg
pushf
rcr
pop
std
insl
push
dec
in
jl
aam
inc
jecxz
xchg
add
mov
leave
ljmp
and
cmpsb
test
iret
enter
mov
xchg
and
sbb
sub
dec
adc
in
test
pop
loopne
add
xchg
pop
sub
das
cwtl
jbe
and
outsl
xorl
or
outsb
faddl
out
adc
adc
mov
sbb
divb
xor
mov
gs
fsts
inc
jb
das
jns
jne
fisubl
sub
xchg
pop
enter
cmp
mov
loop
imul
jne
jp
daa
outsl
jo
mov
clc
in
add
out
jo
push
sub
in
cwtl
addl
dec
int3
jmp
push
push
xor
mov
pop
mov
push
add
js
movsb
xlat
ja
pop
xor
dec
enter
mov
fmull
hlt
pop
test
cwtl
add
adcb
icebp
call
ret
lods
jmp
loopne
lret
or
hlt
icebp
push
inc
xorb
xchg
popa
test
popa
sub
xor
xor
xor
ret
add
test
mov
xchg
loopne
mov
sbb
sahf
fstps
mov
rol
out
int3
xchg
jns
xchg
mov
push
test
icebp
es
les
pop
movsl
pop
sti
test
pop
clc
adc
and
fbstp
adc
das
repnz
repnz
add
cmpb
xchg
popf
jle
adc
mov
mov
or
adc
cltd
loope
pop
ficoms
or
mov
outsl
aad
int
fstps
and
sbb
adc
sbb
inc
mov
jbe
push
cmc
in
xchg
jl
jmp
pop
sbb
lods
arpl
cmp
into
sub
dec
roll
gs
push
ficomps
cmp
rorl
add
mov
call
mov
jae
stc
cmp
fistpll
pop
test
cld
jp
pop
je
into
cmp
shl
inc
and
das
inc
lea
push
cmpxchg8b
cld
push
push
xchg
fmuls
adc
stos
mov
cmc
mov
mov
xchg
aam
mov
inc
es
dec
popa
outsb
sbb
outsl
mov
cld
repnz
es
fildl
fiadds
test
lahf
push
pop
mov
cld
jmp
jae
das
es
pop
and
inc
imul
add
push
sarl
rclb
shrb
cli
out
mov
sarb
push
lcall
int3
jle
repnz
or
dec
mov
mov
push
jns
xor
mov
daa
rcl
push
sub
adc
add
jle
mov
push
lea
push
ret
popf
pop
cmp
push
fsubs
or
xchg
adc
jl
outsb
divl
std
sbb
aas
hlt
and
in
xor
pop
xor
push
inc
in
rcll
pop
out
into
xor
pop
jae
add
dec
pop
gs
out
jae
ret
je
jnp
xor
sub
mov
mov
mov
out
mov
xor
or
les
out
div
mov
jp
mov
pop
rol
mov
cli
mov
cltd
pop
pop
adc
pop
mov
fisttpll
out
jle
inc
pop
ljmp
aam
dec
loopne
lock
imul
fs
add
jmp
mov
test
loope
pusha
inc
adc
movsl
add
aam
add
andb
lcall
arpl
fmull
xchg
lcall
mov
aas
xchg
lock
lcall
pusha
push
jg
incb
testl
ret
inc
push
incb
push
in
enter
cmpl
mov
into
je
push
pop
pop
gs
sti
inc
push
mov
jno
add
aaa
xor
call
scas
or
adc
std
test
adc
sbb
in
fcompl
mov
or
sbb
sub
and
enter
sub
push
in
add
icebp
lock
mov
jp
hlt
mov
les
xchg
xchg
mov
cs
je
and
mov
mov
dec
dec
and
cltd
subb
out
pop
sub
or
push
jecxz
cmp
push
faddl
test
scas
aad
and
adc
aaa
sbb
fcmovbe
push
in
xor
adc
sbb
or
mov
xor
cwtl
push
ret
mov
sub
jle
in
mov
lret
fldcw
pop
xor
add
push
jnp
xchg
dec
xchg
sub
mov
iret
dec
mov
jmp
mov
sbb
pop
stos
lret
test
scas
imul
or
addb
push
insl
xor
or
cmpsb
jmp
pop
jge
push
aaa
mov
or
insb
out
xchg
inc
adc
div
je
popa
fdivrl
pop
dec
dec
pop
mov
sbb
loop
xor
pop
aas
cmp
add
mov
fcoms
cltd
out
sub
sub
pop
inc
movl
bnd
xchg
sbb
imul
aaa
xor
movb
das
out
jae
jle
bound
leave
cli
js
cld
iret
or
dec
ret
adc
ret
pop
pusha
std
push
jns
insb
pop
adc
cmp
fistpll
xchg
jg
les
mov
addr16
pop
and
loopne
bound
loopne
pop
outsl
xor
or
adc
pop
es
loop
push
dec
testb
dec
sar
jmp
jg
stc
push
pop
stos
pushf
jmp
fcmove
dec
lret
and
cld
mov
xor
push
test
inc
daa
jns
mov
ret
outsb
adc
test
daa
xlat
pop
sbb
mov
lods
paddusb
xchg
ds
lret
push
add
sub
pusha
arpl
and
inc
jnp
push
xlat
daa
into
sub
in
std
mov
incl
adc
rcl
adc
data16
dec
aad
mov
dec
xchg
int
dec
insb
clc
js
and
jb
mov
lret
mov
mov
or
sbb
push
mov
jnp
and
xor
lret
push
int
hlt
add
push
dec
and
jle
movsb
fmul
pop
pop
movsl
outsb
mov
js
cmpsl
mov
mov
arpl
sbb
sub
sarb
mov
cmpsl
out
std
push
and
cwtl
pop
das
sti
and
inc
add
add
fisubl
jb
fs
pop
jecxz
out
fwait
out
in
or
mov
and
cmp
divb
mov
cmpsl
data16
mov
ret
ss
mov
fsubr
dec
iret
lret
movsb
lock
lret
pop
arpl
xor
loope
push
adc
rclb
rolb
or
aam
and
hlt
ss
cld
sahf
scas
push
xchg
push
fistps
lret
sub
out
and
mov
aad
neg
cmp
dec
push
cwtl
sti
or
imul
pop
push
sbb
sub
arpl
scas
leave
into
inc
mov
imul
scas
push
sub
call
andb
lock
in
ficoml
fld
stos
pop
es
mov
or
xlat
pusha
aad
sbb
into
repz
test
fsubrs
lret
into
test
jns
or
inc
or
aad
js
fdivrl
jmp
dec
push
rcrb
in
xor
adc
sub
pop
sub
in
lea
xlat
add
cmp
es
cmp
jmp
pop
mov
xchg
mov
add
pop
in
rcll
mov
testb
mov
aam
adc
xor
inc
xchg
out
dec
push
xor
repz
xor
sub
and
in
ffreep
jl
or
lahf
push
cld
aad
and
jne
pop
and
push
pop
shlb
int
cmc
sarb
adc
je
iret
mov
pop
stos
ficomps
dec
mov
mov
das
inc
cmp
cld
xor
scas
sub
and
cmp
ror
dec
shufps
jnp
in
mov
xchg
pminsw
cmpsl
or
add
xor
mov
in
adc
rcl
es
loop
cltd
addr16
sub
testl
dec
mov
outsb
pop
rclb
aad
cmp
arpl
cmp
pushf
lret
outsl
mov
jb
je
stos
nop
filds
jg
jecxz
push
and
jle,pt
pop
mov
insb
rcrb
pop
jg
cmp
mov
sahf
pop
fdivs
mov
add
stos
jecxz
sbbl
rcrb
imul
pop
dec
lcall
xchg
repnz
imul
arpl
negb
sub
xchg
jl
dec
mov
or
push
pop
sub
sbb
fcoms
pop
in
mov
ficompl
add
in
mov
rolb
icebp
sbb
jbe
repz
es
fcmovne
jbe
hlt
inc
push
pop
mov
sub
sahf
into
stos
push
insl
xor
test
inc
or
pop
movsl
pop
mov
mov
int3
jne
incb
dec
movsb
mov
pusha
push
int
mov
mov
fidivl
lret
jmp
sub
mov
xchg
out
or
xor
mov
cmp
fadd
xchg
fmull
jns
ja
addr16
std
jne
into
push
mov
loopne
dec
mov
inc
xchg
mov
adc
pop
mov
loopne
and
push
mov
ja
popf
mov
stos
adc
jmp
ja
incb
or
adc
call
cltd
rcrb
or
fcomps
shl
sbb
lock
fstp
stc
lret
repz
push
fidivl
or
mov
icebp
repnz
mov
shll
cli
adc
mov
cmp
pop
push
jmp
int
movsb
and
rorl
and
les
out
jp
inc
imul
and
in
out
mov
les
fildl
cmp
xchg
mov
icebp
dec
push
orb
fnstenv
push
sbb
mov
stc
dec
cmpsb
movsl
es
mov
push
mov
lods
push
sub
dec
and
jbe
mov
jne
and
xlat
adc
sbb
test
lret
push
inc
out
in
and
jb
add
ds
addr16
rol
cmp
cwtl
mov
inc
in
and
aad
mov
jmp
mov
pop
jle
lcall
test
outsb
pop
iret
stos
mov
cld
cld
inc
jmp
add
and
add
ss
jge
cwtl
add
mov
dec
xchg
testl
push
pop
adc
sbbb
mov
movsb
cs
nop
lahf
shrl
sbb
add
shlb
jnp
jns
or
mov
aad
mov
sahf
ljmp
out
in
xchg
adc
aaa
std
jne
sbb
dec
fsubrs
and
in
lret
pop
xor
insb
inc
jno
jnp
mov
dec
pop
fisubs
sub
imul
push
mov
sbb
insl
add
mov
scas
scas
stc
fdivs
repnz
sub
or
dec
push
push
in
jo
adc
fcmovnbe
les
adc
ljmp
loop
dec
xchg
xor
xchg
cmp
aas
cmp
mov
adcb
ret
and
pusha
xor
inc
hlt
push
dec
lahf
je
dec
mov
lods
dec
jmp
insl
cli
sub
add
mov
cmovs
xchg
shll
cwtl
pushf
cmp
ljmp
mov
leave
push
fabs
push
xchg
lea
or
xchg
xlat
jns
jne
cmp
stos
xchg
daa
mov
jecxz
lods
sbb
lret
call
xchg
sbb
and
cmp
mov
sub
scas
sub
pop
fcmovnbe
fnstcw
inc
pop
lret
sub
jle
lahf
xor
push
mov
add
dec
lds
mov
push
jg
addr16
adc
xor
push
andl
dec
mov
faddl
shl
mov
sbb
aam
addr16
arpl
sti
mov
add
loope
insb
cli
push
std
nop
pop
xchg
ds
mov
lahf
inc
and
popf
xchg
dec
bound
roll
iret
into
test
outsb
cmp
lock
cmp
jmp
out
pop
inc
flds
mov
or
push
aad
and
sarl
test
icebp
dec
leave
idivb
sub
sub
pop
push
leave
mov
push
rolb
mov
cmpsl
sub
adc
lods
jb
mull
scas
loop
pop
pusha
pop
out
push
daa
sbb
inc
cmp
jns
sbb
lock
leave
or
mov
std
iret
loopne
xor
add
lods
xchg
pop
cmp
pop
and
insb
pop
xchg
nop
sub
idivb
push
xchg
div
iret
gs
adc
fdivrs
mov
push
repz
jge
push
repnz
xchg
cmpsb
pop
fsubrl
div
dec
cmp
inc
nop
and
fldcw
jbe
mov
push
push
cmp
sbb
mov
add
ret
shrb
sbb
sub
std
rolb
rorl
roll
push
sbb
jmp
lds
cmp
mov
xchg
subb
lea
mov
fwait
roll
fs
lret
jae
leave
cmp
xorb
les
pop
insb
inc
imul
pop
mov
mov
jne
das
int3
stc
cmp
push
or
xlat
out
jp
push
jb
test
xchg
mul
inc
rclb
jns
andb
clc
jb
fimuls
or
and
fwait
mov
mov
data16
data16
rorl
loop
movsl
lret
adc
mov
or
and
imul
aas
mov
loop
fucomi
dec
fidivrl
enter
fwait
add
ret
sub
inc
pop
mov
xor
mov
sub
mov
jmp
xor
movsl
fldenv
jge
test
mov
mov
out
push
ret
inc
adc
inc
sub
and
subl
sub
add
cltd
mov
shlb
mov
xchg
daa
fisubl
test
xor
popa
dec
lret
cmpb
mov
xor
sub
pop
adc
je
divb
shl
push
sbb
into
xor
add
jno
cmc
ljmp
mov
and
out
xor
mov
push
push
lock
out
sbb
sbb
mov
stos
cmpsl
mov
frstor
in
outsb
xchg
jge
out
jmp
pop
mov
mov
mov
cwtl
movsl
xchg
test
add
test
mov
mov
inc
jmp
xchg
mov
rclb
xchg
outsb
enter
nop
into
pop
mov
sbb
xchg
movsb
sbb
cld
mov
std
test
test
adc
rcll
sub
dec
call
sti
mov
sub
out
scas
cli
push
sbb
jae
mov
fcomps
cmp
ljmp
xchg
jle
inc
sub
mov
stc
ss
pop
filds
shl
scas
aad
stc
pop
jne
mov
test
add
push
ret
fisubs
call
push
aas
push
repz
jae
ss
cmpsl
push
cmpsb
test
pop
sahf
loop
jnp
add
sub
das
cmp
bound
jns
jbe
lock
in
das
lahf
mov
dec
out
mov
mov
loope
fidivl
cwtl
sbb
sbb
inc
in
mov
and
addl
mov
gs
adc
data16
inc
xor
xchg
pop
xchg
outsl
xor
mov
xor
jg
iret
push
sbb
in
ja
mov
pusha
pushf
dec
mov
push
sbb
cmp
outsl
cmp
and
or
mov
lock
push
icebp
fistpll
orb
cmc
adc
dec
lods
adcl
sbb
and
sbb
inc
xor
jp
push
push
cs
xor
insl
pusha
inc
sbb
stos
sub
inc
mov
fcompl
push
cmp
leave
decb
sub
sahf
jae
dec
gs
addl
test
aam
mov
dec
xchg
dec
out
push
inc
repz
and
rorl
jl
cmc
test
pushf
xor
sbb
negb
adc
add
sarl
ds
mov
cmp
cmp
cmp
outsl
inc
and
cmpsb
rolb
leave
std
nop
add
mov
push
movsl
arpl
fsubr
scas
pop
sbb
pop
lds
add
push
pop
push
or
fnsave
cmp
testl
fnsave
mov
jae
addr16
adc
pop
mov
pop
movsl
call
dec
inc
stc
adc
aaa
jg
imul
out
out
int
push
pop
mov
rcrl
cmp
out
cmp
loop
sbb
or
mov
push
into
jo
rolb
iret
mov
inc
sahf
add
pop
int
mov
add
mov
xchg
lretw
xchg
in
inc
inc
addb
push
in
fsubp
mov
add
xchg
stos
and
icebp
push
push
sub
or
ret
cld
push
cmp
jnp
dec
add
jp
push
lea
movsb
adcb
inc
mov
inc
dec
test
popa
ljmp
sub
sub
rorb
cli
jecxz
adc
ficompl
pop
push
push
mov
inc
dec
inc
sbb
imul
mov
xchg
mov
bound
sbb
lea
push
sub
push
lahf
in
sbb
cs
cmc
mov
add
fnstenv
out
jnp
movsb
xlat
imul
add
sbb
mov
sbb
pop
jns
xorb
outsb
mov
lret
pop
icebp
out
dec
bound
movsb
fmull
movaps
cli
outsb
push
xlat
push
js
adc
mov
or
and
stc
sbb
ficomps
xchg
aad
jmp
and
and
cmc
and
mov
stc
inc
ds
lea
rclb
dec
jbe
xor
inc
popa
mulb
notb
mov
cmp
cs
xor
sbb
mov
pop
inc
xor
insb
clc
out
or
pop
mov
mov
lock
cmp
and
cmc
sbb
je
mov
pusha
mov
sarl
and
stos
cli
dec
int
rcl
dec
shlb
push
imul
dec
sbb
add
sbb
jmp
sbb
scas
inc
adc
pop
mov
add
xchg
mov
dec
sub
sub
hlt
xchg
jno
mov
mov
mov
test
jnp
ret
mov
out
dec
inc
adc
push
jnp
filds
mov
data16
push
xor
imul
pushf
sub
bound
add
xor
jae
pop
cltd
pop
dec
insb
cmp
sbb
adc
pop
xchg
clc
xacquire
testl
ljmp
sub
add
cmpsb
or
mov
sbb
jo
icebp
lds
fldcw
mov
dec
frstor
loopne
cmp
fldt
mov
mov
push
subb
int
jle
push
mov
data16
mov
insl
or
ja
sbb
test
mov
mov
push
jo
aad
adc
xor
mov
shlb
aas
push
ja
dec
adc
add
cmpsb
fimull
mov
test
xchg
pop
mov
icebp
es
sub
shl
sbb
push
cmpsb
nop
dec
dec
jg
mov
stos
stc
mov
mov
dec
and
sbb
leave
cmpsb
push
scas
sahf
repnz
xorb
jle
dec
loope
xchg
fs
jmp
scas
repnz
mov
inc
cmp
cli
das
cmc
mov
aaa
cmp
jnp
dec
cltd
popf
je
mov
jo
cmc
loop
jmp
lods
xor
pop
pop
into
leave
mull
mov
jno
pushf
mov
lea
popf
nop
loop
mov
xchg
icebp
mov
test
ret
xchg
pop
rcr
lods
or
std
popf
mov
aad
mov
scas
gs
stos
push
aas
jne
outsb
mov
mov
cmp
decl
dec
and
pop
push
or
lods
movl
xchg
add
hlt
andl
mov
push
jmp
adc
push
xchg
pop
popa
mov
xor
insb
or
scas
mov
mov
cmp
movsb
cmp
leave
pop
jecxz
cwtl
and
shr
stos
jg
lds
inc
ljmp
or
jg
jb
jp
out
andnps
and
test
je
xchg
sbb
rclb
mov
fisubl
sar
fimuls
mov
inc
inc
push
pop
inc
push
inc
js
aas
adc
xchg
xchg
jns
popf
xchg
jecxz
or
fs
call
add
xor
inc
clc
into
stc
cmpsl
cltd
ljmp
pop
sbb
pop
xchg
dec
mov
adc
jae
leave
dec
outsb
mov
dec
mov
xchg
das
cmp
pusha
shll
fstps
out
jb
push
test
pop
and
cmp
adc
filds
xor
repz
jge
push
or
push
xchg
dec
jns
fwait
out
push
imul
fldl
mov
cli
inc
sbb
dec
mov
and
and
movsb
inc
arpl
pop
loop
je
mov
cmp
enter
sbb
stos
test
jb
stos
jmp
nop
mov
movsl
aaa
jl
outsb
lret
adc
or
xchg
arpl
lods
je
fs
cwtl
xlat
pop
cmp
sub
popfw
mov
pop
movsb
dec
xor
stos
jp
xor
js
inc
inc
pop
divb
jp
xchg
sbb
sub
sub
test
inc
orl
pop
iret
imul
xor
jmp
add
test
dec
leave
insb
testl
add
xchg
movsl
adc
lahf
push
out
in
inc
div
mov
mov
in
cmp
sub
mov
iret
hlt
push
pop
mov
icebp
fs
xor
lods
loopne
sbb
and
mov
xchg
mov
push
adc
in
jle
ja
adc
adc
gs
je
fstpt
sbb
inc
inc
lret
shlb
push
mov
sahf
inc
jmp
loopne
in
call
imul
lret
cmp
test
loop
ja
mov
pop
leave
js
cmp
clts
call
dec
test
add
inc
fmulp
dec
mov
jbe
mov
jnp
inc
xor
dec
pusha
pop
adc
loop
push
cmpsl
scas
push
lock
push
mov
add
xor
icebp
shll
xor
sti
mov
leave
xchg
sbb
push
imul
out
lds
ja
xor
sahf
sbb
insl
test
stos
out
xchg
pop
cmc
loop
jbe
lods
mov
sbb
mov
outsl
repz
test
sub
add
cmp
movsl
push
ftst
xchg
addr16
xchg
test
push
mov
rcll
jge
idivl
sbb
mov
or
in
cmp
or
outsl
mov
iret
sbb
in
push
mov
pop
gs
push
je
or
cmp
outsb
sub
pop
pushf
jno
sbb
insb
ret
xchg
loop
pop
xor
and
fs
jmp
lds
adc
add
insb
out
add
in
dec
adc
setns
inc
cmpb
or
mov
mov
or
ds
popa
cmpsb
xchg
out
mov
xchg
xor
jae
and
repnz
sbb
jae
pop
ljmp
jp
fisubrs
or
icebp
lds
in
or
fsts
ja
je
pop
cmpsl
sub
out
dec
xchg
sti
add
shll
sub
leave
xor
xor
insl
jmp
mov
movsl
sbb
andl
push
leave
fnsetpm(287
insb
fs
pop
fisubrs
scas
cmpsb
dec
jp
ror
jo
cmp
dec
jg
sbb
sahf
repnz
insl
jmp
fwait
stos
insb
adc
in
movsb
lret
out
insb
test
or
add
ja
dec
xor
or
mov
push
jnp
jecxz
ljmp
push
sbb
mov
xchg
out
push
popf
and
lahf
or
mov
insb
clc
xchg
xchg
insl
nop
sub
or
push
push
xor
or
popf
stc
lcall
call
popf
pop
or
popf
in
in
testb
inc
fidivrs
xor
inc
sbb
xor
test
imul
jne
mov
xchg
jmp
jg
xchg
inc
mov
lahf
es
dec
mov
stc
popf
cmp
mov
xor
cmpl
jno
xor
pusha
jmp
mov
xor
fcmove
xor
and
adc
lahf
sub
add
mov
adc
cmp
pop
aas
xchg
les
rol
pop
test
pop
jp
and
and
lret
adc
aaa
jnp
adcl
subb
sub
in
or
cs
mov
add
rorb
jl
shrb
sbb
bound
mov
repnz
cmp
inc
mov
pusha
adc
and
xor
ja
and
into
aam
xor
xor
iret
cmp
in
jnp
pop
sub
mov
adc
ljmp
iret
pop
loope
aas
dec
ja
stos
lret
in
xchg
inc
sub
pop
pop
pop
insb
sub
cmc
pop
insl
jns
movl
jo
stos
iret
xchg
loop
mov
popl
xchg
std
and
jp
add
popf
and
mov
push
pop
in
test
adc
pusha
sbb
aam
mov
inc
fldt
dec
nop
adc
shrb
out
loope
mov
xlat
ror
das
in
add
sbb
sbb
outsb
xor
addr16
mov
pusha
push
fistps
cmp
cmpb
sahf
inc
in
stos
sbb
imulb
push
lods
sti
mov
xor
jecxz
lds
mov
push
aam
adc
cwtl
repnz
add
bound
sbb
adc
xor
jb
out
sub
mov
insl
mov
lcall
jo
add
sub
mov
adc
push
loopne
pop
imul
mov
std
leave
data16
je
sub
sub
sbbl
mov
xchg
popa
mov
rolb
out
in
inc
adc
hlt
and
lock
mov
cld
mov
shll
push
adc
sbbb
push
mov
pop
xor
push
xchg
sbbb
inc
lods
outsb
out
adc
xor
adc
test
shll
fistl
fcmovnbe
pop
mov
or
lods
push
jecxz
stos
sbb
xlat
jmp
cmp
data16
iret
outsb
cmp
sbb
jns
jmp
roll
frstor
sbb
jge
jecxz
aad
or
inc
lea
push
dec
sub
mov
inc
lret
scas
les
sti
and
scas
mov
mov
push
icebp
inc
mov
pop
out
jge
push
test
mov
cmp
loop
sub
cltd
fistl
movsl
repz
xor
stc
xchg
pusha
imul
fcompl
adc
push
pusha
and
out
lods
fwait
icebp
pushl
loope
testl
sbb
mov
lret
enter
rolb
fdivl
xor
popa
inc
je
pushf
and
mov
mov
addb
insl
jl
iret
lret
inc
jb
popf
sahf
movsl
daa
adc
fimull
call
call
xchg
pop
cmc
popf
gs
mov
sub
je
dec
rclb
push
or
movsb
movsb
lods
sbb
fwait
xor
xor
leave
mov
jge
out
dec
mov
lret
jmp
data16
xchg
fld
mov
or
pop
insl
movsl
lret
pop
add
cld
dec
std
xchg
push
clc
enter
sub
fs
fisttpll
movsl
xor
mov
push
ficomps
dec
mov
inc
sub
jl
insl
scas
int3
cwtl
roll
xchg
shrl
xor
lret
repz
hlt
jbe
mov
push
insb
mov
adcl
jmp
call
cli
mov
out
mov
arpl
mov
cli
pop
mov
xor
inc
jo
jmp
lea
lea
inc
sti
movsb
out
dec
test
iret
push
push
mov
repnz
mov
ja
xchg
push
clc
mov
imul
xchg
loop
add
cwtl
mov
into
or
jp
lcall
push
or
ljmp
jl
jb
adc
fsubr
inc
and
out
cli
pop
shll
movsb
mov
mov
repnz
push
ljmp
push
xor
out
cwtl
aas
jb
mov
mov
add
loope
jge
add
inc
out
cmpsl
jbe
rorl
xor
sbb
inc
call
std
dec
push
xor
xchg
lret
jge
popa
out
pop
ss
xchg
cmpsl
test
jo
mov
out
pop
cmpsl
cmp
aam
mov
sti
into
adc
or
add
call
jno
mov
inc
pop
sub
scas
daa
pop
aam
sub
mov
and
inc
mov
aaa
push
cmp
pop
in
add
js
pushf
dec
mov
jne
sub
xchg
and
jmp
dec
and
add
insl
jp
in
shl
pop
xor
mov
dec
vandps
aas
jae
pop
cmp
iret
dec
fcmovnbe
insb
rolb
lock
adc
cltd
jno
jo
pminsw
push
push
sbb
pop
shl
pop
ss
aad
lock
out
mov
fldcw
insl
push
enter
jo
aaa
test
imulb
pop
jb
or
gs
inc
gs
jae
imul
adc
push
cltd
out
sub
movb
ljmp
icebp
test
or
lods
xlat
cmc
or
ss
mov
add
dec
shlb
inc
js
outsl
and
push
aas
insl
clc
mov
int
adc
test
arpl
jge
lods
fildll
clc
ljmp
inc
fildll
notb
std
xchg
mov
out
mov
xchg
cmc
adc
adc
and
pop
out
cmp
aad
add
dec
mov
les
jge
fmuls
or
loope
test
cld
push
shll
fwait
stos
lods
jno
mov
in
push
sub
test
aas
and
cwtl
xchg
cmp
xor
inc
add
fmull
cmp
cmp
dec
movb
lds
outsb
cmpsl
xchg
add
sahf
inc
scas
jae
outsb
divl
test
mov
dec
mov
movsl
or
or
lahf
push
sub
clc
mov
lods
jle
lds
clc
push
dec
mov
dec
pushf
mov
cltd
insl
int3
mov
inc
outsb
mov
xor
repz
ss
das
fstpt
mov
or
adc
add
dec
xor
mov
out
in
xchg
stos
shrb
add
adc
mov
add
adc
pusha
mov
sbb
jmp
fwait
imul
popf
or
xor
push
mov
in
and
cmpsb
lea
add
mov
pop
outsb
in
cmp
add
add
lret
movsl
dec
fsubr
fs
mov
jns
sub
sbb
sahf
xlat
add
imul
ljmp
and
mov
sub
add
mov
mov
outsb
add
aaa
lret
mov
js
sbb
shlb
or
cwtl
inc
mov
adc
sub
fstps
mov
mov
in
in
add
int3
fidivrs
inc
insb
mov
ja
mov
pop
xor
mov
add
add
out
mov
mov
jp
test
fmull
adc
dec
arpl
shr
lods
jo
jle
add
hlt
mov
lds
adc
nop
test
dec
test
push
mov
inc
sbb
push
push
push
loope
ficomps
cld
push
mov
call
imul
call
out
lds
and
xchg
test
fcomps
int3
pop
xchg
dec
mov
xchg
das
mov
ret
jne
loope
ljmp
push
dec
xchg
and
jb
mov
je
das
pop
outsl
jle
ret
movsl
pop
lahf
rol
push
push
rolb
fs
xchg
mov
xor
fistpll
or
andl
hlt
ret
nop
dec
mov
stc
iretw
add
xchg
stc
out
adc
inc
bound
mov
dec
out
lahf
lds
sub
imul
xchg
push
fistl
sti
jae
pop
lret
cmp
mov
stos
cmc
je
xchg
adc
lock
dec
dec
sub
mov
push
test
in
mov
aad
mov
mov
mov
mov
add
leave
stos
mov
mov
dec
cmp
not
mov
and
int
xchg
xchg
xchg
dec
xchg
jmp
inc
cmp
cwtl
cmc
and
popf
xchg
or
inc
dec
js
lds
push
mov
mov
mov
dec
into
loop
push
mov
shlb
jmp
push
and
mov
mov
aaa
inc
jle
or
aad
sbb
daa
and
add
outsl
ds
fst
inc
nop
fcoml
dec
sub
adc
ds
fucomip
mov
pushl
fldcw
popf
rorl
cwtl
lahf
cmp
inc
inc
mov
fidivrs
aas
or
pop
push
data16
jae
stos
ret
xor
and
std
in
arpl
int3
push
test
mov
mov
pop
sub
and
xor
jae
mov
and
gs
pop
scas
mov
fwait
test
inc
sub
fcmovbe
stos
repz
xor
fbld
adc
popf
int
adc
dec
add
add
daa
dec
movsl
dec
push
push
shlb
pusha
and
or
inc
out
sub
arpl
sbb
jno
push
dec
xchg
insb
call
fwait
or
add
xchg
mov
and
push
sbb
add
rcrl
aam
xchg
xor
je
fadds
scas
jns
jmp
or
out
sarl
data16
repnz
movsb
jne
js
shlb
int
adc
sub
cmp
das
sarb
gs
jo
push
dec
add
and
pop
gs
je
dec
stos
hlt
sbb
fadd
loop
xchg
inc
cli
xchg
sarb
mov
lcall
pop
xchg
int
ja
divl
andb
pop
xor
pop
aad
pusha
clc
jno
fstl
rcl
add
push
xchg
call
jno
ss
push
xlat
shll
xchg
mov
and
mov
out
cli
mov
data16
or
dec
std
inc
jecxz
inc
pop
loopne
adc
push
lds
and
or
cltd
xchg
fistpll
std
jnp
add
mov
fmul
sti
enter
insb
add
add
fmull
das
aas
jg
sub
xor
dec
jle
and
cld
adc
mov
call
xchg
sub
clc
call
dec
pop
imul
das
jb
or
shl
cld
xor
xlat
add
jno
adc
aas
imul
inc
push
and
mul
or
pop
cmp
mov
test
cs
dec
outsb
or
sti
je
xchg
lret
xchg
and
adc
int
ljmp
test
out
adc
stos
pop
fmul
xchg
push
cwtl
leave
sti
adc
ret
or
mov
cmc
dec
xchg
repnz
fneni(8087
js
fisubrl
lods
ffree
btcl
xchg
ud0
push
aaa
push
sub
inc
lcall
cwtl
or
fmuls
or
icebp
pop
loope
lret
mov
fisubrl
daa
pop
enter
popa
xor
pop
repz
outsl
pop
add
xchg
mov
and
aas
mov
or
pop
jb
stos
test
add
sarb
mov
test
jmp
mov
movsb
cmp
and
imul
test
jecxz
or
and
lcall
mov
fcompl
cltd
mov
mov
int3
repz
mov
mull
mov
pop
jp
mov
testb
lods
jnp
in
add
sti
dec
mov
cld
mov
xlat
mov
lods
dec
and
repnz
fiaddl
lret
testb
xor
lock
adc
movsl
mov
jle
aas
test
add
dec
movq
daa
insl
int
push
add
out
cld
cmp
pushf
es
aam
ret
popa
lret
aam
cwtl
cmp
lock
lods
leave
insl
push
jns
addr16
cwtl
jno
jmp
fdivs
dec
repz
mov
outsl
pushf
mov
sub
and
cmc
dec
movsl
imul
aas
mov
shll
lahf
inc
mov
push
adc
pushf
add
aas
add
inc
rclb
xor
xchg
cwtl
jge
lds
fcom
and
xor
push
mov
jge
add
das
in
jge
mov
xchg
xor
pop
int
das
push
inc
push
jo
xor
sub
push
jp
push
dec
daa
lcall
addl
push
out
pop
pop
lea
inc
lock
xchg
mov
nop
dec
and
aam
mov
mov
sbb
inc
xchg
lock
test
cmp
shrl
push
jb
mov
push
ja
push
sbb
sar
xchg
in
roll
out
cwtl
xchg
push
adc
decb
ss
push
jno
sbb
insl
mov
xchg
and
loopne
nop
dec
sbb
push
pusha
cmpsb
sbb
pop
into
cli
cmpsl
orl
out
jne
inc
lods
cmc
xchg
add
addb
das
adc
imul
rolb
push
out
push
shlb
push
inc
mov
rcl
push
dec
cmpsl
sahf
loopne
movsb
mov
inc
sbb
and
sbb
bnd
sub
dec
sar
je
fmull
cwtl
ja
mov
icebp
outsl
fcomps
dec
xor
cmp
lcall
aad
cs
sbb
jns
into
insl
test
test
aad
es
add
sbb
dec
hlt
push
hlt
movsb
xchg
ficomps
mov
fisttpl
nop
mov
mov
jge
test
xchg
xchg
push
fcomps
in
rorb
jo
or
inc
scas
lods
into
out
popa
scas
loopne
pop
aas
mov
push
in
sbb
rcr
jae
xor
imul
inc
mov
and
or
and
sbb
lahf
les
mov
or
xchg
stos
out
pop
inc
xchg
jne
fwait
inc
xchg
mov
inc
push
jmp
imul
iret
aaa
sbb
push
xchg
xchg
addr16
mov
mov
aad
mov
cmc
aas
pop
es
fndisi(8087
mov
out
cmp
std
sub
gs
clc
mov
push
fstpl
add
adc
loope
fbstp
movsl
test
scas
and
or
mov
fnstenv
ljmp
repnz
idivb
aas
jb
popa
mov
pushf
or
fs
xchg
sub
lahf
and
xchg
push
sub
stc
cmpsl
sbb
and
mov
popa
dec
lret
xor
lods
push
jmp
out
jmp
cwtl
push
lods
xchg
ds
sahf
sbb
jae
ljmp
sub
test
inc
les
ret
pop
inc
or
push
mov
push
fwait
push
repz
cmc
aad
mov
out
cmp
dec
addl
push
test
loope
push
mov
mov
add
or
mov
inc
dec
dec
hlt
adc
leave
mov
popa
int3
sarb
sbb
sbb
les
sahf
jl
mov
sbb
pop
pop
ret
popa
cld
xchg
sub
add
ljmp
xor
jmp
sub
pop
icebp
and
dec
jle
in
push
push
sbb
lods
cmp
jl
sbbb
stc
push
or
fmuls
fdivs
scas
aas
sub
cmp
or
fldt
pop
popa
test
cmpsl
scas
jno
stos
lods
adc
data16
les
adc
xchg
arpl
iret
inc
pop
mov
jae
inc
repz
push
adc
xchg
repnz
fcmovnu
call
dec
icebp
and
push
bound
insl
add
push
mov
nop
jb
insl
out
shrl
iret
int
xchg
dec
mov
mov
mov
dec
sub
int
jbe
mov
notl
daa
and
pop
push
push
sahf
scas
sbb
sub
lds
mov
push
jl
add
sbb
jns
add
cmpl
jae
arpl
sbb
andl
adc
dec
jbe
int
inc
mov
or
outsl
adc
pushf
jbe
faddl
test
repz
fnstcw
sbb
out
sbb
pop
fcomps
jae
sub
insb
and
fs
xchg
and
lods
push
popa
out
fadds
add
mov
add
fwait
mov
rorb
and
sub
testl
enter
loopne
inc
sbb
aad
pop
mov
pop
leave
jb
subl
xor
sbb
mov
lcall
arpl
cmp
inc
repz
js
add
mov
and
add
int
push
ds
pop
loopne
pusha
mov
pushf
xchg
mov
adc
ret
or
stos
iret
sub
into
add
gs
psrad
data16
fs
loope
mov
xor
adc
icebp
cmp
jb
add
rcll
orl
sub
jecxz
xchg
xor
std
push
movsb
fsts
adcl
inc
js
jl
stos
fcmovnb
ljmp
cltd
sbb
or
and
in
push
sbb
and
dec
xchg
push
xchg
lea
cli
movsb
ljmp
push
cmpsb
in
xor
mov
popa
jnp
movsl
inc
or
jle
and
and
aam
add
ja
xor
aaa
sub
mov
push
out
test
andl
ljmp
loopne
inc
pusha
dec
sbb
popa
push
fs
lds
pusha
scas
jae
imul
jo
popf
es
push
aas
jae
pop
xchg
sbb
sarb
fs
and
or
and
mov
push
cmp
adc
ret
out
adc
repnz
and
pop
shlb
scas
rorb
dec
or
jno
nop
cmp
xchg
sub
push
xchg
add
jmp
adc
mov
dec
shr
inc
ret
ret
fldcw
mov
push
stc
outsb
xchg
adc
jmp
lahf
insb
pop
out
jno
rcll
lock
nop
shll
popf
mov
jp,pt
add
aas
dec
out
mov
std
jle
sarl
sub
mov
push
repz
cmp
repz
aaa
fmuls
pop
mov
stc
in
lahf
lcall
jb
xor
cmc
mov
xor
mov
xchg
out
xchg
xor
push
pop
fwait
leave
cmc
and
addb
js
mov
out
push
mov
shrb
push
fidivrs
mov
sub
xchg
or
rorb
lahf
mov
sbb
pop
jmp
xchg
in
test
call
scas
je
fwait
mov
cmc
ret
popa
pop
and
xor
gs
iret
call
cmpsb
ficoms
jmp
popl
cmp
imul
loopne
cmp
loope
int3
repz
dec
jns
push
mov
xchg
push
shlb
addr16
lahf
cld
dec
stos
lahf
mov
mov
push
in
cmpsl
in
es
xor
add
or
inc
sub
and
mov
mov
mov
xor
jp
jne
popf
xchg
pop
scas
fstpl
xchg
add
xchg
nop
fimuls
sarl
sarb
jmp
jno
leave
sub
out
mov
jmp
js
in
insl
xchg
pop
jno
jns
outsb
dec
xor
out
leave
add
adc
or
inc
mov
xor
jecxz
stos
outsb
sahf
cmpb
lods
mov
mov
test
loopne
cmp
sbbb
clc
mov
popa
gs
dec
and
and
js
push
dec
jbe
loop
movsl
insb
xchg
sbb
movsl
movq
lret
sub
out
xchg
jb
out
clc
jg
mov
adc
jge
repnz
dec
insb
pop
push
jnp
inc
mov
je
pop
pusha
sahf
shl
ljmp
add
and
pop
pushf
inc
xor
push
cmpl
cmp
cmp
adc
mov
sbb
xchg
fcomps
push
jnp
pop
outsl
or
mov
movsl
cwtl
sbb
dec
mov
shlb
cmp
das
inc
adc
mov
sub
add
test
mov
repnz
jge
call
inc
sbb
xor
xchg
mov
shrb
mov
adc
mov
adc
addb
idivb
into
dec
jno
cmp
lock
fs
jo
lea
scas
xchg
fisubs
pop
inc
mov
sbb
push
ficompl
mov
loop
xchg
leave
add
mov
lahf
lds
icebp
pop
and
lods
push
testb
cmp
pop
xor
push
cltd
or
push
and
jl
and
sub
jge
outsb
subl
cmpsl
pop
lret
jmp
lods
sahf
add
shrb
add
lcall
int
push
dec
inc
sub
in
repz
xchg
adc
popa
cltd
scas
stos
xchg
inc
cmp
xchg
int
mov
clc
popa
bound
and
adc
pop
sbb
fistl
xchg
daa
icebp
xor
dec
shlb
sbb
pop
mov
pop
repz
cld
and
and
xchg
fs
add
pop
dec
out
clc
fisttps
inc
in
js
xor
dec
push
inc
push
sub
icebp
pop
cmpsb
arpl
addr16
loopne
xchg
push
aam
in
jge
mov
ficompl
roll
movsl
dec
mov
jae
pop
and
scas
sbb
int3
dec
test
aas
inc
movsl
push
sbb
mov
dec
stc
daa
and
sbb
stc
mov
mov
mov
movsl
inc
mov
popa
pop
push
dec
inc
cltd
inc
lock
arpl
xchg
jbe
add
cmpsb
mov
into
inc
loopne
repz
pop
jge
sub
imul
addr16
sti
sahf
mov
ja
dec
push
test
in
jnp
add
cmp
add
sti
inc
jmp
std
outsl
xor
cwtl
std
mov
cmp
inc
mov
inc
loop
repnz
add
lret
mov
decl
js
push
fiadds
cli
pop
xor
ret
cmpsl
js
push
inc
pop
test
inc
out
inc
lret
lcall
aaa
mov
and
mov
cld
adc
frstor
mov
push
xor
fstpl
and
repnz
lods
out
sti
outsl
ret
repz
fidivrs
daa
and
pop
push
pusha
cli
sbb
imul
pop
imul
fidivs
push
pop
adc
and
mov
pop
and
push
pop
out
sarl
adc
jmp
mov
stos
fidivrl
loope
sbb
and
mov
sbb
and
lcall
rorb
ret
mov
int3
fistpl
dec
jmp
lods
test
outsb
xchg
sti
xlat
mov
shll
cmpsb
fbstp
dec
rol
inc
es
repz
jecxz
cmp
int
xor
dec
mov
lret
sub
jge
push
insb
push
mov
push
adc
sub
cmc
loope
cmc
inc
or
push
mov
xor
xor
ret
leave
mov
xor
cmp
sbb
pop
mov
icebp
fnstenv
xor
mov
pop
aas
and
pushf
cs
pop
inc
ja
jmp
notl
stc
xor
cltd
mov
iret
int3
gs
pop
xchg
icebp
sbb
mov
dec
pusha
jg
test
and
fsubrp
and
cs
sbb
mov
fwait
and
and
mov
xor
sub
test
cli
gs
and
fs
adc
sti
cmpsb
loop
adc
insb
push
popf
or
add
movntq
fcomip
dec
sbb
push
data16
inc
roll
and
xlat
jnp
adc
das
push
sub
movsl
jle
jmp
cwtl
addr16
xor
mov
cwtl
push
imul
adc
movsl
cwtl
mov
sbb
inc
push
pop
xor
movb
stos
nop
push
fcoms
push
sbb
sbb
scas
fsubl
sub
or
sbb
mov
mov
mov
cld
fwait
xor
mov
push
or
pop
push
cmp
faddl
dec
sbb
ret
imul
mov
das
cmp
lds
sti
loopne
addb
dec
repz
dec
pop
testl
mov
sub
sar
add
out
xlat
sub
cmp
mov
jmp
scas
sub
mov
or
cmp
nop
or
test
xchg
xlat
repz
xchg
pop
leave
xorb
or
cmpsb
cmc
dec
divl
mov
addr16
fidivl
pop
imul
cmpsl
fistpl
push
mov
out
sub
insb
aaa
jbe
ret
inc
sarl
fcomps
push
sahf
mov
je
test
sub
mov
inc
push
lcall
andb
push
aad
add
add
cld
outsl
fstp
cmpsb
sub
jne
pop
addl
lds
mov
int3
scas
in
lods
sbb
dec
arpl
xlat
lret
adc
mov
repnz
or
mov
js
adc
loop,pt
mov
cmp
mov
sbbb
insl
sbb
out
ret
and
jbe
lcall
push
addr16
out
in
adc
pop
sub
jmp
xor
jns
aad
stos
mov
inc
adc
sub
jge
cmp
sub
pop
xor
lret
inc
mov
imul
dec
mov
adc
andl
pop
dec
out
dec
sbb
outsl
fsubl
int
fnstcw
push
test
xchg
mov
jo
je
mov
das
cmpsl
dec
sub
pop
xchg
push
xor
sub
dec
clc
push
stos
decb
mov
int
lds
dec
add
adc
iret
cmp
pop
sbb
add
lret
or
jl
add
cld
cmpsl
sbbl
arpl
inc
xchg
aam
mov
test
jne
not
or
xchg
in
rolb
inc
je
shrl
test
xlat
cmpsl
fs
mov
lea
sub
jae
pop
imul
ljmp
add
inc
divb
outsb
pop
fs
and
sbb
mov
or
or
mov
jg
mov
fdivl
jbe
inc
cmp
sbb
and
sbb
cmpsl
jno
sbb
in
arpl
insb
mov
push
mov
sti
xchg
lret
imul
or
or
mov
xor
fcmovnu
scas
push
cltd
add
mov
les
je
mov
pop
out
addr16
inc
sarl
ds
cmpsl
shlb
adcb
repnz
mov
cmp
add
inc
pop
ficompl
push
dec
pop
je
cwtl
push
das
mov
xchg
das
xor
or
sub
fucom
popa
jle
push
mov
loop
mov
lcall
dec
push
push
sbbb
outsl
cld
and
stos
xchg
sbb
and
xchg
xor
cld
push
pop
or
out
pop
outsb
shrb
in
nopl
sbb
pop
pmaxsw
fadds
stc
push
cli
add
pop
mov
add
jmp
popl
std
fiaddl
stc
pop
icebp
jecxz
or
das
popa
mov
pop
in
and
jp
sarb
mov
xor
or
inc
mov
int
mov
cli
orl
xchg
or
imul
pop
out
fs
and
sti
xchg
add
div
and
icebp
sbb
cmp
es
and
add
or
mov
imul
dec
rolb
sub
and
jecxz
addl
dec
or
sti
and
dec
pop
ds
incb
lods
xchg
mov
jns
test
mov
cmc
push
jp
push
push
xor
mov
pop
repnz
sub
lcall
adc
inc
out
pushf
in
repz
mov
shrl
mov
fcoms
div
das
insb
dec
mov
mov
out
inc
xor
lods
adc
sarb
in
mov
jmp
pop
sub
jne
das
mov
push
jmp
push
pop
xor
jnp
test
xchg
xchg
sub
push
sarb
push
pop
clc
push
mov
add
ja
xor
sub
add
adc
mov
inc
out
fcomi
push
clc
push
add
and
int
fsubs
jg
dec
shl
fadd
shlb
jnp
addr16
lds
or
ret
mov
pop
aad
jg
in
jne
imul
icebp
push
sub
cld
les
mov
push
mov
addr16
bnd
mov
fistpll
adc
inc
push
jae
cmp
push
jne
testb
mov
inc
outsb
call
sub
std
aad
adc
push
in
push
push
mov
adc
sahf
dec
in
mov
ljmp
sub
push
hlt
pop
dec
lret
pop
add
push
outsl
ret
pop
pop
and
outsl
or
push
sub
sub
int
inc
adc
jo
ret
sbb
cmp
mov
jmp
jne
adc
std
mov
movsl
out
cmp
sub
jb
lret
mov
push
xchg
mov
mov
or
cmc
cwtl
mov
push
mov
hlt
lock
push
ss
clc
pop
shl
jle
js
jno
js
mov
add
movsl
and
pop
pop
pop
jnp
mov
or
cmp
xchg
cmp
push
in
stos
xor
neg
in
arpl
daa
jne
adc
dec
xchg
add
lret
xlat
sbb
cli
and
cld
repnz
cmp
mov
shl
pusha
dec
adc
or
xor
push
leave
aad
bound
mov
pop
test
repnz
in
in
mov
imul
or
mov
imul
and
push
cmpsb
jbe
add
loop
xchg
shl
mov
pop
cmp
mov
pushf
adc
mov
sbb
pop
scas
ljmp
jb
push
cmp
mov
fcompl
sbb
mov
aad
jmp
ja
lea
sarl
fdivp
mov
addr16
add
in
scas
or
fistl
movsb
adc
std
pop
fcomi
sbb
mov
add
pop
mov
cltd
test
push
sub
js
outsb
inc
leave
and
testl
sbb
loop
sub
aam
dec
in
fsqrt
mov
movsb
sbb
push
lahf
adc
mov
fstpl
or
pop
fwait
mov
ret
in
pop
flds
ljmp
mov
jne
jmp
daa
sub
xor
stc
cmp
in
pop
and
and
stc
push
sbb
xchg
addr16
lods
mov
and
or
jge
mul
es
loop
cwtl
addb
ret
adc
jne
test
pushf
xlat
sbb
xchg
enter
mov
outsb
imul
inc
add
sub
das
scas
mov
outsl
inc
and
push
jb
cmp
mov
push
fbld
adc
lcall
das
mov
jne
push
stos
pop
inc
inc
xchg
xor
rclb
stc
dec
pop
loopne
jg
push
call
and
enter
loopne
daa
in
xlat
jl
or
sbb
xor
mov
mov
mov
adc
stos
cmpl
push
cmp
sti
loopne
addl
sub
xchg
mov
test
xchg
pop
sub
leave
add
lahf
std
mov
mov
out
mov
sbb
inc
outsl
rcrl
xchg
rcrl
test
mov
test
pop
jmp
pop
pushl
std
pop
mov
add
scas
pushf
fmul
jae
movsl
pop
fcoms
dec
les
sbb
stos
jecxz
push
jno
jecxz
inc
dec
ficoms
push
adc
shll
sub
mov
mov
sub
dec
sbbl
sbbl
sarb
mov
fldenv
dec
dec
or
dec
fadds
mov
xchg
push
adc
pop
cmp
jecxz
lods
jno
xor
xorb
outsl
in
pop
outsl
xchg
mov
cmp
shrb
xchg
mov
ss
fldl
les
mov
add
pop
cmp
setb
jl
add
add
pusha
pop
imul
popl
add
mov
push
sub
sub
cmpl
lcall
out
fiaddl
rorb
cli
lds
decb
test
and
jae
xchg
pop
ds
cmp
nop
jne
mov
div
adc
ret
ret
or
inc
inc
cmp
inc
xchg
into
mov
out
mov
and
dec
pop
fsubrl
pop
cmpsl
mov
xchg
inc
mov
push
push
push
xchg
push
jmp
jns
scas
movsb
aad
movsl
mov
xchg
xchg
jb
push
insb
xchg
aad
fwait
jb
insb
fstpt
add
or
mov
pop
jo
cmpl
daa
dec
inc
fcmovu
inc
dec
cmp
shlb
or
mov
ljmp
mov
lret
daa
leave
mov
cld
mov
cmp
xchg
test
clc
mov
gs
testl
in
cmp
mov
mov
push
aaa
jae
fstps
int3
enter
clc
lahf
and
lahf
xchg
lock
xor
dec
cs
out
mov
fmulp
stc
lret
cmc
push
pop
out
das
or
mov
adc
or
mov
jge
lea
pop
psubq
jb
push
shlb
stos
out
jno
mov
push
std
sbb
arpl
add
cwtl
mov
mov
out
pushf
int
rep
in
push
call
dec
pop
sub
inc
mov
syscall
cmpsl
lcall
fstp
jo
push
xor
icebp
cmp
and
xchg
sbb
icebp
jle
jae
movsl
std
std
mov
call
es
out
inc
shl
adc
ficompl
dec
cmp
and
int
lret
pop
sti
inc
ljmp
jecxz
idiv
mov
out
cmp
cwtl
outsb
popf
push
imulb
mov
outsb
jle
out
addr16
xchg
push
arpl
rcll
es
mov
jmp
sbb
pop
in
scas
mov
pusha
sbb
xchg
inc
js
dec
ret
scas
roll
and
aad
out
sbb
xchg
xor
adc
ds
mov
mov
cmp
movsl
push
call
xchg
into
xor
test
inc
cmp
in
mov
pop
or
sbb
or
in
cmp
dec
sbb
mov
add
lea
xchg
dec
jo
push
adcl
fmull
repnz
mov
jae
jnp
es
adc
adc
insl
push
push
push
subb
jg
fcoms
jmp
movsb
jmp
push
mov
jb
sub
addr16
js
dec
in
mov
fs
sub
add
cmp
lods
xchg
loope
repnz
cltd
popa
inc
dec
lods
adc
daa
xchg
pop
enter
ret
aad
add
xchg
jmp
mov
cwtl
js
inc
fistpll
test
mov
mov
mov
cmp
cmp
sbb
pop
mov
cmp
jmp
popa
inc
push
sahf
daa
dec
dec
sahf
into
into
push
or
push
dec
out
cwtl
push
leave
adc
fucompp
push
xor
mov
xchg
adc
shlb
mov
inc
xor
inc
add
lahf
mov
cmp
sbb
push
jmp
xor
stc
jmp
aam
subb
sub
inc
sub
sar
ja
jecxz
dec
rclb
xchg
je
loop
pop
mov
rcrb
and
iret
outsl
xor
adc
xchg
xchg
mov
inc
lods
adc
fwait
ss
and
inc
mov
cmp
std
push
sub
cli
mov
xchg
cmp
neg
cwtl
notb
out
iret
movsb
cmp
cmpl
mov
jo
push
adc
fwait
cmpl
and
jmp
cmp
call
daa
std
loopne
jns
pop
sbb
js
jae
aaa
sti
stos
push
add
xchg
pop
mov
popa
pushf
cmp
xor
mov
dec
test
adc
adc
into
flds
push
cli
ret
xchg
add
ret
xchg
inc
in
mov
or
jmp
sbb
arpl
and
dec
shlb
push
mov
sub
and
mov
call
mov
int
mov
rcll
lcall
insl
jne
xchg
jmp
adc
xchg
push
incl
xchg
push
or
inc
jo
hlt
dec
test
in
ret
fcmovu
xchg
or
adc
lcall
dec
loop
dec
aas
into
icebp
or
lods
outsb
pop
mov
mov
sub
xchg
testb
popa
xorl
xchg
xchg
mov
mov
cmpb
ret
cld
addb
or
ret
jae
outsb
jno
hlt
sub
xchg
mov
push
movsb
xchg
mov
ret
mov
jb
call
pop
icebp
push
test
push
add
enter
es
in
ja
cli
push
mov
int3
lret
or
xchg
iret
rolb
scas
loop
sbbb
lds
outsb
cmpl
into
push
fildll
rcrb
repnz
das
add
inc
mov
mov
mov
mov
mov
xchg
adc
jno
sub
push
push
xchg
fs
cwtl
mov
push
mov
cmp
or
cmpsb
dec
pop
mov
pop
fiadds
mov
das
lahf
adc
fbstp
gs
mov
xchg
xchg
outsl
pushl
adc
dec
cmp
mov
push
and
jne
pop
roll
inc
xchg
jne
outsb
out
jg
aad
adc
inc
clc
sti
jp
enter
movsl
sub
add
iret
lcall
adc
cs
sbb
push
sub
jp
push
js
push
pop
and
in
das
cmp
call
loope
das
pop
add
fcom
std
mov
jg
xor
js
mov
cmp
pushf
and
add
push
aaa
pushf
in
sarb
test
mov
mov
inc
sub
inc
fdivrl
and
nop
xchg
fwait
inc
dec
dec
pop
sti
pushf
xor
lret
inc
sti
aad
mov
xchg
xchg
popa
cmpsl
mov
into
add
cmpsl
lds
xchg
inc
insb
popa
xchg
ss
int3
push
das
add
jbe
add
inc
xchg
mov
jnp
xor
aaa
sbb
scas
pop
or
stos
pop
mov
pop
inc
mov
mov
rclb
jg
and
xor
mov
sub
fucomi
dec
stc
subl
dec
xor
insl
pop
lahf
lods
in
shl
push
sbb
or
dec
mov
adc
lret
cs
sti
repz
sub
daa
jecxz
aas
adc
pop
push
pop
push
adc
int
clc
jl
sub
jns
out
les
loope
ret
adc
insb
icebp
lret
and
dec
lods
jmp
outsb
ret
sub
xchg
dec
mov
add
stos
dec
push
sarl
enter
jbe
mov
stos
jmp
out
adc
pop
lock
pop
pop
das
repnz
xchg
faddl
pusha
pop
xor
push
js
out
inc
es
loop
ficoml
scas
xchg
js
and
adc
inc
pop
cltd
icebp
dec
push
xchg
inc
cmpsb
adc
mov
std
mov
in
jns
and
xchg
cmp
faddl
and
add
jb
ret
in
cmp
icebp
fs
mov
call
dec
mov
and
or
mov
and
loopw
test
adc
sub
pop
test
adc
push
lds
jnp
test
adc
stos
mov
fcompl
pop
insl
xchg
subl
push
push
fs
jbe
or
in
dec
leave
cwtl
hlt
push
mov
xchg
dec
lahf
push
mov
lea
rcll
out
mov
or
pusha
out
add
sbb
out
lret
rcrl
pop
clc
movsb
jne
sub
dec
mov
scas
or
sub
and
pop
aam
xorb
xor
mul
push
push
jae
dec
jne
mov
mov
cmp
adc
nop
push
push
fstpt
std
outsb
fmull
add
pusha
add
leave
jb
loop
pop
mov
and
pushf
adc
push
add
sub
mov
sub
xor
dec
ljmp
push
push
and
fs
xor
stc
leave
jne
cmp
jo
pop
sub
mov
fisttpll
mov
das
xchg
ss
sub
mov
jne
aam
pop
out
xlat
pop
subl
inc
leave
push
addb
arpl
hlt
lock
and
je
pop
fbld
dec
test
mov
pop
mov
clc
ljmp
jg
pop
jb
push
imul
fstl
add
cwtl
jg
push
pop
scas
push
cld
adc
imul
imul
out
push
mov
popf
imul
jnp
add
mov
cmp
orl
mov
jb
xor
rcrb
xchg
mov
jle
sahf
push
push
inc
cmpsl
sbb
loopne
inc
or
sub
xchg
fsubr
xchg
mov
and
mov
mov
sbb
jge
fsubl
int3
loope
mov
add
ret
xor
int3
xor
push
push
jo
mov
pop
test
dec
mov
dec
inc
daa
xor
arpl
stc
int
pop
sbb
push
imul
adc
pop
dec
enter
mov
ficompl
add
xor
jp
xchg
ljmp
lea
sbbb
pop
outsl
ret
les
mov
sarb
mov
adc
nop
stos
hlt
mov
xlat
sahf
sub
imul
add
cmp
loope
push
cmp
iret
jns
mov
mov
xchg
rolb
sahf
or
stos
push
add
adc
pop
rcl
mov
dec
sbb
mov
not
pushf
and
jo
cmpsl
push
in
mov
jl
jle
pop
and
stc
sub
jbe
or
orb
xchg
sbb
inc
xor
mov
sbb
sub
ja
lret
adc
ret
loope
and
aaa
in
rcrb
sbb
dec
mov
push
fiaddl
mov
mov
jge
mov
icebp
xchg
push
push
inc
dec
gs
cwtl
push
out
xchg
xchg
inc
cmp
inc
dec
sbb
inc
or
out
and
and
cmp
out
jmp
jae
mov
mov
icebp
mov
push
std
cmp
rcrb
push
fidivl
xchg
stos
pusha
mov
enter
add
cmpsl
sti
sub
jl
cmpb
mov
jecxz
jne
mov
mov
xchg
cltd
pop
int
dec
xlat
popa
call
cltd
push
shlb
mov
xor
cwtl
add
xchg
and
or
inc
aaa
test
push
dec
shrl
int
int3
inc
mov
lock
lea
mov
fidivs
xor
xchg
and
dec
loopne
loopne
outsl
test
jae
jb
add
jae
sub
gs
inc
movsl
add
out
sub
jno
test
jno
xchg
add
inc
xlat
adc
fildll
sub
mov
fiaddl
cmpsb
adc
shrb
push
enter
sbb
jg
test
push
fnsave
popa
jnp
pop
mov
mov
popf
std
lods
icebp
incb
stos
cmp
sub
in
mov
dec
fisubrl
sbb
mov
lret
and
lret
sbb
jns
shll
out
xchg
or
ret
das
xor
call
pushf
iret
in
testl
adc
in
or
inc
pop
adc
sub
arpl
movsl
mov
js
jge
cmpsb
xor
jo
fs
lock
xchg
int3
bound
push
fcomps
mov
cmp
sub
jo
shrb
mov
jnp
cmp
sti
push
sbb
lods
and
pop
xchg
xchg
cmc
xchg
push
mov
sahf
sub
push
lcall
repz
clc
or
roll
dec
arpl
jnp
scas
imul
rcll
fdivrs
jl
mov
filds
xchg
ret
add
mov
js
xchg
jmp
and
imul
les
dec
imul
mov
sbb
in
push
dec
aad
or
and
mov
adc
pop
cld
pusha
mov
inc
dec
jl
shll
aas
and
das
push
adc
dec
in
push
paddb
test
inc
pop
daa
bound
cld
or
dec
mov
adc
fwait
xlat
xlat
out
push
mov
mov
movb
mov
les
icebp
lds
push
jmp
daa
sub
xchg
sbb
jg
push
es
lds
jg
sbb
mov
stos
lret
arpl
rcrb
cmc
out
mov
push
mov
pop
adc
jb
xchg
aaa
repz
mov
mov
sbb
mov
jmp
sub
adc
mov
dec
mov
fistps
sbb
cmp
dec
in
xchg
xor
adc
sbb
push
lret
enter
negb
xchg
xor
lahf
sbb
in
adc
fisttpl
icebp
and
xor
dec
xchg
test
push
dec
jb
out
scas
xlat
insb
fimuls
jmp
xor
repnz
dec
lods
mov
pop
nop
je
mov
stc
cmpsl
aas
popl
xchg
ret
iret
loope
xor
dec
pop
mov
sub
add
mov
daa
pushf
lcall
mov
test
cld
push
outsb
pop
mov
les
xchg
jmp
pop
pop
das
jmp
pop
mov
sbb
sbb
scas
repnz
call
add
mov
je
jbe
adc
mov
xor
mov
xor
dec
imul
outsl
ja
lahf
xchg
int3
or
test
popf
push
jnp
popf
popf
pop
jae
out
andb
cmp
cmpb
or
test
shlb
add
stos
cld
push
jp
fdivrl
es
repnz
outsb
cmp
dec
mov
and
xor
mov
loop
mov
js
pop
movsl
and
push
lods
xor
push
jl
pop
shl
push
mov
mov
shlb
xor
push
sti
push
adc
sbb
cs
push
bound
test
mov
xor
test
or
data16
cmp
xchg
cmp
and
lods
popa
roll
inc
jecxz
jmp
add
stos
push
jns
sub
test
jbe
movsb
mov
push
sbb
xchg
inc
xor
or
scas
or
ja
out
mov
out
xchg
fcomip
loopne
inc
loopne
movb
leave
lret
jmp
inc
lret
inc
mov
sarl
mov
mov
inc
inc
pop
inc
and
xorb
dec
cmp
popl
inc
lds
lock
andl
push
loopne
mov
push
pop
dec
cmp
ficompl
mov
xlat
gs
divl
mov
inc
jo
in
mov
into
xchg
xchg
fstpt
rorb
and
rcl
xor
add
out
mov
and
or
mov
inc
stos
int
popa
insl
xchg
xor
outsb
cwtl
and
lret
pushf
sahf
scas
in
out
pop
or
shrb
cmc
in
xlat
and
xor
pop
mov
popa
mov
test
sub
and
sbb
sub
in
daa
jns
rcll
xor
scas
mov
sub
cmp
mov
pusha
inc
cmp
dec
or
fldt
dec
in
xchg
shlb
stc
cmpsl
pop
out
xchg
mov
adc
or
sbb
inc
adc
inc
mov
aad
add
aam
arpl
mov
lret
loop,pn
or
jbe
push
dec
xchg
in
in
push
sbb
test
test
sbb
mov
testl
jns
out
pusha
xor
jmp
mov
mov
fsubr
inc
rclb
xchg
xor
jae
pop
je
das
imull
and
pop
imul
adc
inc
add
sub
mov
stc
mov
dec
scas
popa
lock
dec
jg
xchg
jno
pushf
lods
push
adc
pop
or
bound
fwait
cmpb
xor
cmpsl
ljmp
jmp
lods
ret
inc
sub
scas
lcall
cmp
xchg
test
repz
movsl
push
cmp
jns
jp
dec
fisubs
dec
mov
mov
xchg
lret
jmp
adcb
xchg
pop
push
in
inc
subb
cmp
sub
movsb
popa
in
xchg
add
jo
mov
dec
test
dec
popf
aam
add
ret
and
leave
pop
mov
inc
insb
in
gs
and
fs
loope
fcomp
inc
push
or
clc
pop
sub
mov
jo
inc
inc
jno
in
push
lret
ret
and
dec
imul
cwtl
adc
jns
add
add
dec
lods
xor
movsb
xor
dec
and
cwtl
hlt
jne
add
dec
sub
cmpsb
and
xor
push
xchg
jb
mov
aaa
fmull
and
out
mov
xor
ret
jo
push
xor
loope
out
lods
cmp
jns
aas
test
outsb
repz
push
ficoml
fwait
jnp
cmp
jne
imul
popf
sbb
mov
inc
es
pop
push
mov
out
or
push
fwait
dec
loope
xchg
jmp
loop
xchg
inc
xchg
in
mov
jbe
icebp
push
roll
sbb
mov
push
insl
sar
mov
int
lock
add
sbb
divb
shl
nop
inc
push
rclb
mov
lahf
sbb
iret
ds
and
sbb
imulb
mov
mov
sub
jmp
sti
and
aas
rol
into
out
pop
push
aad
jp
aad
jge
lcall
lret
add
popa
jnp
fiaddl
sahf
bound
adc
mov
shll
xor
jnp
mov
adc
flds
loop
pop
insb
and
flds
adc
push
jg
cltd
pop
into
xchg
dec
jb
rol
jnp
je
mov
dec
cmp
mov
and
dec
xor
sub
dec
test
sub
adc
adc
mov
xchg
push
nop
lock
adc
pop
fidivrl
test
out
fcompl
ret
les
jb
cmp
mov
xor
ss
xor
les
jns
sbb
push
flds
fmuls
mov
popf
dec
or
popa
push
lods
add
push
xchg
rcll
dec
push
mov
mov
push
inc
xchg
xlat
dec
jl
int
xor
scas
inc
fsubs
loopne
push
cmpsb
lods
or
adcb
mov
ret
scas
fldt
mov
mov
mov
xchg
lods
ret
mov
mov
and
xor
std
add
rcl
es
adc
cmp
fcomi
jg
dec
mov
xchg
sub
dec
dec
cmpsb
in
push
pop
outsl
and
push
dec
inc
push
jo
outsb
bnd
mov
mov
xchg
nop
or
out
jo
sub
mov
stos
clc
mov
lret
pop
das
mov
mov
mov
scas
iret
jecxz
add
dec
add
aaa
arpl
jmp
filds
fmull
mov
out
xchg
ret
mov
pop
mov
fiaddl
or
xorb
adc
cmpsb
addl
dec
sahf
add
xchg
imul
jne
cli
into
pop
in
sti
into
es
inc
xchg
cmp
outsb
jae
imul
cmp
cld
imul
repnz
lret
ret
cmp
and
mov
or
stc
push
cld
jl
add
mov
mov
pop
pushl
call
xor
outsl
jle
rsm
dec
lahf
call
inc
aas
ds
sub
test
or
add
frstor
mov
mov
insl
lea
cli
sbb
cld
add
push
ret
lret
scas
pop
sti
adcb
mov
test
or
mulb
into
in
adc
push
ficompl
ja
mov
aam
sbb
sub
sbbl
jb
mov
icebp
jmp
lret
or
pop
mov
mov
jb
sub
push
dec
jns
dec
push
nop
nop
loop
sub
testb
ljmp
adc
call
das
and
mov
lds
cmpsl
sub
addr16
repnz
sub
dec
sbb
fiadds
xchg
stos
lea
jb
mov
inc
shll
cmc
mov
inc
adc
pusha
loop
fsubrl
pushf
jle
aas
bound
movsb
test
test
pop
sbb
inc
pop
mov
insl
and
xor
jb,pn
sub
sbb
ds
pop
xlat
push
push
stc
xchg
imul
pop
ja
call
push
sub
or
cmp
cmp
ds
fistpl
test
jmp
cmpsl
sbb
inc
rcr
arpl
dec
push
cmp
xor
ret
ret
or
popa
mov
cmp
pusha
ds
outsl
mov
adc
gs
jle
scas
and
inc
jnp
ret
fldt
xchg
icebp
mov
sarl
cmp
lahf
sbb
dec
jmp
fcomp
aaa
dec
out
int3
push
push
rclb
push
leave
xchg
jae
jecxz
fsubr
insb
push
mov
jg
or
jg
push
data16
int
jle
inc
pop
ret
dec
mov
mov
test
and
jle
mov
cli
fimull
cmp
adc
and
xor
insl
in
das
icebp
nop
sub
out
inc
and
pop
mov
xchg
subl
inc
jb
sbb
pop
iret
jle
add
mov
add
repnz
jg
mov
rcrl
mov
xchg
xchg
push
das
sbb
pusha
jle
int
sub
fists
mov
or
aas
inc
and
cmp
subl
adc
dec
rolb
stc
aas
cmp
pushf
cmp
mov
data16
in
sbb
lods
sub
and
nop
adc
ret
int3
mov
cmc
sbb
int
inc
push
push
sub
pusha
jmp
lods
jmp
jae
inc
cmp
adc
loop
and
cwtl
fcompl
scas
mov
pop
fsubrl
add
sbbl
sbb
stos
enter
mov
and
lea
lahf
inc
or
sub
sbb
arpl
push
xchg
sbb
jns
ds
adc
pop
cmp
pop
negb
jle
subb
jns
movsl
pop
ja
jns
sbb
es
add
jl
fsincos
mov
lcall
fisubs
xchg
dec
xor
push
dec
pop
popf
pop
push
dec
dec
sub
call
xchg
bound
pop
push
sbb
aaa
cmp
and
jo
mov
xor
adc
mov
mov
cld
pop
fidivs
call
jb
mov
push
dec
pop
add
cmp
mov
jl
clc
push
xchg
and
icebp
sub
filds
popf
or
das
lcall
lret
sti
push
fxam
lea
mov
push
sbb
pop
out
mov
mov
push
sarb
sti
imul
testb
mov
nop
iret
xlat
sub
fwait
scas
in
aas
in
ljmp
xor
adc
es
imul
cli
mov
jns
ds
jmp
imul
jns
scas
dec
and
add
aas
mov
mov
mov
imul
cmpb
insb
test
cmp
xor
hlt
andb
in
xchg
jge
pop
lret
pop
imul
cwtl
sbb
cltd
outsb
inc
jno
clc
shl
outsb
jae
jge
inc
ja,pt
test
sbb
scas
cmp
incb
outsl
lock
into
mov
sub
inc
outsb
jmp
jmp
cmp
cwtl
fidivrs
lret
mov
or
inc
jae
dec
aad
push
push
xchg
stos
pop
jmp
jle
add
push
and
cmpl
je
cwtl
fstpt
adc
push
in
mov
insl
jl
popa
cmp
sbb
int
push
pop
pop
sub
xor
xor
lds
jno
clc
les
in
arpl
pusha
lock
and
jmp
xorl
lahf
imul
loope
and
sbb
in
sub
test
jl
pusha
cmp
test
hlt
push
sar
pop
fisttpll
sub
mov
fs
xchg
scas
inc
orb
adc
mov
sbbb
sub
mov
ja
outsb
sbb
pusha
test
sub
adc
lds
test
imul
lahf
add
sbb
inc
sub
add
popf
push
nop
xor
pop
in
pushf
push
outsb
cmpsl
aam
sahf
in
ljmp
scas
loopne
scas
sbb
cmp
sbb
push
inc
fmull
aad
cmpsb
insb
xlat
fdivrp
mov
inc
lea
data16
sbb
adc
iret
lahf
jge
lea
push
pop
sbb
xchg
dec
xlat
push
dec
jo
loopne
cli
test
lds
fistl
xchg
sub
scas
dec
cmp
push
xor
pop
push
mov
sti
xor
mov
clc
xchg
xchg
movsl
pop
sub
insb
add
out
mov
cmpsl
push
stc
daa
loopne
sbb
pop
xchg
pop
subb
pop
loope
stos
stos
cmp
lds
push
outsl
jecxz
push
scas
andl
cltd
push
add
cs
ret
mov
das
mov
jb
mov
adc
test
insb
add
ja
mov
subb
add
add
daa
sub
gs
lret
rclb
jmp
sti
push
mov
and
imul
mov
push
push
sar
in
dec
xchg
push
xchg
pushl
push
repz
int
subl
inc
sarl
push
sbb
outsl
bound
lcall
jne
dec
pop
in
pop
ret
mov
and
idivb
shll
jge
out
sub
lret
cmp
mov
daa
iret
or
lcall
dec
or
jge
mov
jle
mov
pop
rep
push
jle
push
jmp
cmp
int
push
xor
inc
sbb
insl
dec
mov
xor
fcomps
test
fadds
subl
gs
inc
pop
or
sub
mov
gs
test
lcall
push
sbb
insb
cmp
in
jb
aas
sub
mov
ljmp
lods
mov
pop
in
aaa
jne
dec
mov
ds
pop
fldt
insl
xlat
ret
pusha
jge
mov
inc
and
inc
and
repnz
pop
in
sarl
xchg
push
into
pop
dec
arpl
cmp
push
lcall
popa
das
cltd
push
scas
into
push
in
mov
lock
sbb
and
dec
sbb
rclb
lret
aad
pop
lcall
stc
adc
mov
adc
lret
aad
xchg
xchg
clc
pop
imul
fstpl
andl
dec
cmpsl
sahf
fistl
push
ja
push
mov
out
nop
jge
das
mov
mov
shlb
add
pop
push
inc
sbb
hlt
push
repnz
stos
ret
popa
mov
in
pop
mov
test
stos
fisubs
aam
ror
mov
sbb
jns
andl
divb
jno
add
push
das
lea
xchg
lods
aas
mov
mov
jmp
dec
lahf
add
fdivr
lret
xor
mov
adc
rorl
in
sub
mov
sbb
stos
inc
xchg
dec
push
pushf
aam
das
pop
std
js
std
push
lea
mov
movsl
cld
mov
jmp
sub
mov
jnp
insb
cwtl
dec
scas
or
iret
ficompl
lea
pop
fnstcw
cmp
jge
pushf
or
data16
test
xchg
jae
fistps
icebp
scas
add
repnz
insb
outsl
rclb
jo
pop
dec
arpl
or
mov
jns
xchg
loopne
enter
push
dec
fwait
popa
pop
pusha
gs
repz
loop
insb
jg
cmp
xchg
imul
and
jns
insl
xchg
xchg
jp
loopnew
push
mov
sub
sbb
push
repz
adc
mov
les
sub
les
mov
pop
push
movsb
jecxz
fcomip
mov
js
jne
cmpsl
into
pop
sbb
cmp
test
cli
rcll
gs
imul
sbb
call
subb
inc
jbe
stos
insl
sub
inc
lahf
ret
dec
fldt
enter
mov
lret
jno
test
in
push
lea
or
dec
mov
out
subb
lahf
cmp
xchg
sbb
jo
ds
sar
jmp
add
cwtl
je
pop
out
test
cmpsl
xchg
mov
mov
xor
inc
test
or
mov
outsl
cmpsl
daa
icebp
imul
adcl
dec
adc
fiadds
cs
std
pop
ss
xor
mov
add
jne
cwtl
or
aad
sub
inc
out
sti
push
mov
xlat
filds
addl
js
out
cmpsb
xor
adc
or
push
into
mov
add
sub
shrb
jmp
in
inc
jne
out
pop
imul
xchg
and
cmp
lods
sub
sbb
push
cmp
lds
and
mov
sub
nop
inc
mov
cmpsl
out
lcall
push
jb
mov
mov
add
lds
das
dec
add
mov
mov
repz
cwtl
test
orb
ret
push
jl
jbe
cmp
mov
pusha
scas
in
mov
jns
mov
test
aam
and
loop,pt
fisttpl
int
outsl
rolb
sbb
and
sbb
or
adc
orl
popf
xor
test
pop
push
push
push
mov
jno
inc
pop
fildll
mov
loopne
out
cwtl
mov
imul
dec
movsb
mov
mov
arpl
jb
inc
sahf
dec
xor
jle
leave
mov
mov
sti
cmp
stos
sub
adc
cmp
cmc
pushl
mov
jo
inc
mov
pop
xchg
out
dec
movsb
dec
xor
dec
in
push
lahf
negb
sbb
push
sbb
cmp
insb
nop
sbb
xchg
ds
shll
inc
pop
mov
or
into
movl
adc
mov
in
in
add
gs
les
mov
rol
inc
mov
fidivl
adcb
mov
dec
mov
inc
scas
outsl
dec
rcrb
or
roll
rcl
out
mov
shlb
push
rcrb
mov
or
mov
mov
add
adc
and
icebp
imul
mov
bound
pop
sub
jle
aam
mov
movsb
hlt
loope
adc
jge
aad
jb
jmp
loop
dec
cmp
mov
jmp
adc
inc
add
cmpsb
lds
xchg
jbe
add
pushf
pop
int
xchg
dec
dec
add
js
xchg
xor
jmp
push
dec
test
mov
and
jl
and
cmpsl
adc
loopne
stc
fcmovnb
fstpl
mov
addr16
push
push
sbb
icebp
fstps
mov
xchg
mov
addl
mov
push
das
insl
in
xorb
push
and
xor
xor
cwtl
mov
hlt
aas
imul
repz
or
mov
mov
xchg
pop
lea
mov
cld
cmpsb
test
xchg
in
cmpsl
stc
inc
xchg
jmp
clc
pop
imul
sub
mov
iret
cmpsb
inc
orl
sbb
pop
jp,pn
movsl
adc
push
pop
mull
call
out
insl
rcrb
daa
ljmp
mov
mov
dec
shll
inc
inc
hlt
pusha
jae
xor
call
fstl
int3
jg
pop
mull
clc
andl
aaa
adc
ds
out
leave
dec
pop
scas
jno
xor
mov
jbe
cld
inc
jle
pop
cld
adc
inc
lcall
cmp
aas
aad
hlt
push
adc
negb
out
or
xor
sub
adc
int3
xor
push
push
push
enter
add
cmp
scas
mov
adc
js
arpl
pop
clc
imul
adc
mov
imul
mov
pop
or
mov
ja
sub
movsb
pop
dec
mov
imul
dec
sbb
enter
test
dec
xor
mov
es
push
adc
mov
or
adc
sbb
mov
cmp
jcxz
sbb
push
insl
pop
jle
in
or
push
mov
inc
loopne
dec
int
imul
mov
inc
adc
cmp
icebp
mov
subl
sahf
cld
pusha
mov
shr
stos
popa
lahf
mov
les
jb
jns
aas
repnz
outsl
xchg
ja
push
lea
xor
rcrl
int
in
sbb
pop
rcll
imul
mov
xchg
push
mov
out
dec
in
xlat
mov
fidivrs
pop
xchg
dec
dec
popa
and
imul
xor
adc
inc
pushf
cmp
xchg
xchg
sti
sbb
sbb
fidivrs
int3
test
cmc
add
mov
sbb
lret
in
xchg
xchg
lea
sbbl
or
pop
add
fisttpll
out
je
mov
jno
adc
sub
cmpsl
insl
repz
push
dec
ret
xchg
clc
pop
jno
mov
lods
pop
dec
stc
mov
rorl
pop
cmp
in
lock
or
sub
shrl
jl
daa
in
push
cmp
mov
pusha
mov
jnp
xchg
xchg
cmc
cmp
lret
xchg
push
fidivs
fcmovne
dec
jns
dec
xor
decl
lret
imul
loop
roll
mov
aaa
sbb
push
enter
leave
hlt
push
cmc
stos
out
sbb
pop
inc
lods
push
iret
jne
pop
add
lahf
dec
lahf
inc
sub
pushw
mov
xor
cmp
mov
mov
add
dec
lods
inc
jne
push
mov
scas
inc
and
dec
cwtl
and
pusha
out
sbb
sub
aam
rcrb
aas
out
sbbb
pop
scas
pushf
xor
cltd
notl
cmc
jb
popa
jecxz
in
xchg
fidivs
sbb
loope
or
push
inc
bound
add
test
mov
cmpsb
or
inc
je
add
not
mov
test
sub
jnp
in
jecxz
xchg
loopne
bound
push
lods
jge
aad
nop
and
lds
pop
sub
lods
test
pop
xchg
mov
pop
pop
push
pop
push
push
fidivrl
jne
pusha
inc
int3
rcrl
in
sub
jo
outsb
std
sub
adc
outsb
shll
push
int
out
rcl
int3
outsb
clc
cltd
adc
pop
in
jge
add
xor
dec
aam
sub
lock
xlat
loop
push
or
dec
pop
popf
aaa
bound
stos
and
xor
sahf
pop
aaa
xchg
enter
adc
stc
test
imul
add
lcall
insl
push
xchg
js
popa
notl
hlt
data16
cli
lods
inc
fdivrl
nop
cwtl
nop
mov
movsb
push
out
inc
and
inc
in
icebp
leave
fsubs
dec
das
or
cmp
push
fildll
xchg
mov
sbb
pop
mov
in
and
test
add
inc
xchg
jp
pop
sub
jl
cmp
fisttpll
fldl
insl
jb
jae
dec
mov
out
cltd
shr
lods
inc
fldt
inc
jecxz
push
cmpsl
lcall
jno
das
arpl
jl
adc
shll
lock
movnti
lock
cmp
leave
and
pop
jo
push
jge
in
mov
dec
pop
inc
cmp
jp
xchg
hlt
inc
lock
xchg
outsb
leave
cmp
out
test
xorl
push
mov
lods
popf
xchg
leave
xor
dec
add
ret
xor
jae
addl
sub
adc
mov
push
pop
aaa
icebp
jns
ss
add
enter
in
test
xchg
adc
xor
pop
aas
xor
cmp
out
repz
int
inc
xor
pop
jae
xor
loopne
dec
adc
push
cmpsb
or
xchg
sbb
test
adc
inc
adc
dec
mov
stos
cmc
lret
loop
in
cmp
and
js
sahf
lods
out
jb
mov
pushf
xchg
ret
dec
in
js
mov
sbb
movb
lds
insb
fisttpll
and
loopne
mov
movsl
sub
mov
or
adc
sti
jne
xlat
xor
cld
movsb
or
cwtl
addl
ja
lods
cmp
loop
fidivrl
add
inc
test
mov
mov
xchg
add
iret
jno
ret
push
jp
in
ret
and
dec
icebp
lcall
jbe
sbb
xor
cmp
dec
lods
or
sbb
test
xor
xor
sub
push
in
pop
imul
pop
in
in
dec
lds
fiadds
jge
popl
clc
xchg
mov
test
cmpb
push
cli
cmpsl
sbbl
filds
and
gs
mov
xor
ret
cmc
mov
mov
stos
daa
cmpsl
popa
stos
adc
and
lret
mov
inc
loopne
inc
cmp
cmp
scas
rclb
ret
loopne
subl
pop
in
cmc
mov
mov
push
mov
mov
or
bound
imul
jb
cld
cmp
cs
xchg
mov
mov
daa
insl
and
or
cld
arpl
outsl
test
sarl
mov
sar
jnp
inc
and
cmp
test
imul
movsb
cli
iret
in
adc
mov
inc
aad
lahf
sub
push
sbb
adc
loop
mov
rclb
dec
mov
adc
pop
imul
push
aad
pop
inc
jnp
out
jl
mov
mov
xor
lds
in
jno
fcmovnbe
into
or
or
ljmp
pop
push
shll
mov
add
fiadds
mov
jne
hlt
mov
gs
loopne
enter
ss
aaa
xchg
dec
loopne
dec
mov
xchg
mov
xchg
pop
rorb
imul
xchg
imul
movsl
fucomip
and
add
test
test
loope
int
push
adc
fwait
xchg
data16
test
je
adc
or
xchg
sti
fs
adcl
outsl
jno
mov
sti
jnp
icebp
ret
sub
test
sbb
inc
cmp
jbe
push
lret
fwait
jmp
sub
dec
push
sub
sbb
add
fs
iret
or
faddp
mov
xor
loope
lahf
test
mov
cmpsb
dec
mov
dec
outsl
data16
dec
lret
pop
push
out
push
mov
test
fdivrl
aam
lods
push
xchg
push
scas
repz
push
loope
hlt
jns
and
xchg
dec
jno
mov
cmp
jg
jno
aaa
pusha
lea
mov
leave
test
mov
push
test
je
fstpt
mov
test
mov
ja
hlt
out
inc
inc
mov
pusha
xchg
xor
out
mov
dec
mov
xlat
ret
insb
bound
jl
push
mov
roll
stc
and
cmpb
inc
addr16
mov
xlat
lds
add
scas
add
jne
imul
xchg
idivl
xlat
jb
inc
aaa
add
sbb
sub
ja
mov
adc
or
xchg
fmull
inc
decb
and
add
lea
loopne
jae
xor
aaa
popa
repnz
jp
push
das
add
cld
add
test
fiadds
cmpsb
push
sub
clc
stos
mov
movsl
pop
lahf
push
sub
pop
xor
imul
mulb
les
jno
cmp
repz
jno
push
les
sbb
push
fiadds
stc
jp
push
fs
add
jno
clc
aas
sbb
pop
jl
push
push
lods
pop
inc
test
sahf
and
mov
mov
enter
add
jl
popf
xchg
dec
std
arpl
int3
cmp
push
movsl
je
js
xchg
loop
ja
xchg
outsb
data16
in
inc
ret
ja
scas
sub
dec
sub
push
mov
mov
fistpl
sbbb
mov
pop
xchg
push
mov
jge
sub
xchg
cmp
loop
test
xor
cltd
jg
mov
stos
test
scas
scas
sar
add
stos
adc
xor
inc
fistpll
or
shrl
jmp
push
cmp
cltd
out
jns
leave
pop
mov
jb
ja
pop
fsts
popf
mov
sbb
xor
add
cmp
daa
rclb
mov
sarb
lahf
fldl
jg
add
mov
lds
mov
pop
xchg
mov
dec
xlat
pop
adc
cmp
jmp
fisttps
fdiv
sti
xchg
in
mov
test
outsl
inc
pop
scas
jecxz
loopne
push
mov
dec
sub
call
push
add
add
cli
xchg
ret
add
mov
enter
clc
xor
push
mov
mov
mov
jns
mov
xor
mov
add
std
inc
adc
add
push
mov
add
and
fldcw
mov
jmp
sub
fs
shrb
test
insb
push
inc
ja
and
dec
test
jno
fxch
daa
push
repnz
cmc
pop
adc
pop
mov
pop
jne
fidivl
cmp
push
dec
xlat
xchg
ret
and
mov
leave
pop
mov
mov
adc
fwait
and
sti
loope
enter
mov
mov
sub
cmpsl
push
xchg
xchg
push
icebp
mov
scas
int3
sahf
sub
push
xor
inc
mov
repnz
insb
adc
leave
insb
aaa
jle
pushf
push
hlt
jo
mov
sbb
lea
cmc
jns
mov
push
ret
xchg
call
daa
bound
inc
xor
xor
jo
cmp
cli
cmp
icebp
cmpsb
jle
shll
cmpsl
ja
aad
pop
inc
test
adc
js
jae
fisubrl
leave
push
out
and
and
inc
repz
inc
sub
ret
jecxz
mov
out
mov
pop
pop
ror
addr16
pusha
push
mul
adcb
fisttpll
fsubs
shll
adc
cli
push
or
je
icebp
xorl
ret
test
and
and
fdivrl
push
popa
or
xorb
xor
shrl
ret
hlt
ja
pop
adc
imul
int
or
imul
inc
daa
mov
jnp
or
lds
pop
std
inc
sti
icebp
pop
sub
jnp
dec
or
jmp
call
or
out
lock
cmc
xchg
gs
enter
cld
sub
xor
push
inc
in
and
icebp
xchg
cwtl
xor
mov
mov
sub
imul
dec
sbb
shl
xchg
ss
pop
mov
push
or
jp
push
dec
outsb
jnp
jmp
loopne
out
jb
dec
icebp
inc
cmp
jno
inc
jb
mov
jnp
xor
loope
adc
arpl
dec
jae
xchg
jmp
mov
out
inc
inc
xlat
jg
mov
jae
lret
xor
shlb
icebp
fldl
mov
test
cmp
test
jnp
jge
push
decl
jmp
mov
jae
jb
and
jno
ljmp
dec
jp
dec
adc
rolb
dec
mov
mov
mov
cmp
jb
jnp
xor
mov
shrl
daa
lea
mov
xor
mov
pop
jecxz
push
pop
int
inc
jo
pop
xlat
and
cmp
leave
pop
test
mov
xchg
enter
call
adc
sbb
out
test
push
dec
push
or
xchg
mov
push
xor
push
xor
sbb
es
outsb
mov
lds
loopne
jo
add
sti
add
mov
sarb
push
xor
stos
test
mull
xor
scas
jmp
dec
pop
pop
mov
xchg
sub
imul
mov
jge
lock
xchg
lds
and
es
push
int
shrb
dec
xchg
cmp
xchg
mov
mov
xor
ljmp
push
aas
call
add
add
jge
std
pop
push
loop
push
sub
push
nop
adc
mov
mov
push
sbb
aam
test
pop
lahf
jmp
sahf
jb
shl
push
fiadds
mov
add
into
pop
sbb
sbb
jb
pop
aad
sbb
sbb
xchg
pop
cwtl
repz
push
rclb
fdiv
add
pop
out
add
dec
test
hlt
lea
adc
add
xchg
fs
push
xor
cmp
sub
mov
ds
pushf
sbbl
stc
imul
jnp
cltd
aaa
mov
call
adc
imul
and
das
mov
in
mov
outsb
cmc
pop
jle
mov
fsubp
or
adc
lret
or
aad
fstl
or
movsl
js
je
fidivrs
js
jecxz
cmp
dec
cmpsl
lods
lds
inc
sbb
sbb
pop
adc
test
adc
add
mov
pop
pop
jno
les
imull
dec
hlt
sbb
xchg
cmc
rcrb
push
dec
sbb
repz
and
xor
sub
sbb
mov
imul
pop
push
cmp
test
aam
aas
scas
sarl
lods
shrl
repz
rclb
outsb
jl
int
movsl
dec
fmul
inc
ljmp
mov
push
sub
outsl
aad
add
cmpsl
outsl
mov
into
ret
and
test
lock
cmp
dec
jmp
xor
idivb
inc
cmp
enter
fstpt
xor
and
sub
xchg
add
sub
in
fidivrl
shrb
andb
call
cmp
or
dec
je
divl
bound
xor
mov
dec
or
cmp
xor
jnp
mov
in
ja
or
jmp
rcl
mov
lock
or
jecxz
clc
sbb
adc
pop
sbb
hlt
add
xchg
cmpsl
into
or
nop
fdivs
pop
jge
pop
push
xchg
mov
scas
orl
and
pop
or
add
mov
or
add
inc
icebp
mov
sub
xor
loopne
in
adc
mov
sahf
pcmpeqd
mov
mov
mov
sub
jnp
xchg
sbb
pop
rcll
test
test
fnstsw
mov
push
dec
cmc
mov
lods
or
adc
pop
xchg
sub
or
cmovl
cmc
and
arpl
aas
push
inc
imul
sbb
mov
xchg
outsl
aaa
adc
and
addr16
cwtl
jae
mov
jb
push
mov
or
inc
dec
push
xor
xor
rcrb
ss
leave
insb
int
sbb
subl
xchg
popf
mov
jp
mov
mov
repnz
jl
cmp
sbb
mov
lret
mov
in
negb
pop
jo
mov
mov
leave
enter
adc
or
add
in
pop
push
icebp
ljmp
and
stos
in
cs
loopne
cmp
push
lahf
data16
subb
adc
jns
fwait
inc
xor
aam
sti
push
icebp
sbb
add
xor
lret
incl
mov
and
jle
pop
fisttpl
rolb
xlat
stc
ja
hlt
aad
cli
data16
pop
adc
inc
js
fcos
jp
jmp
lods
pop
mov
int3
add
leave
ljmp
shrb
mov
enter
jno
xor
pop
loop
mov
pop
push
aad
push
insl
bndldx
mov
adc
fsubl
outsb
repz
sub
ja
lods
xlat
push
and
and
std
pop
ljmp
jne
out
testb
and
inc
add
mov
mov
adc
mov
clc
mov
orl
clc
jg
mov
mov
push
mov
dec
add
popa
leave
sbb
pop
push
clc
ljmp
mov
test
and
ljmp
push
jnp
push
adc
mov
fisubrs
sbb
mov
xchg
ja
and
dec
inc
push
cld
cmp
lcall
xor
adc
gs
dec
xchg
sub
jle
inc
lahf
arpl
xchg
pop
jbe
ss
addb
stc
jg
sahf
inc
ja
stos
pop
or
lahf
arpl
pop
testl
and
add
inc
rcrb
mov
imul
sub
inc
shll
inc
loope
aas
js
mov
ficoms
int
push
lret
cmpsl
lcall
push
sbb
je
cmpsl
adc
ds
mov
imul
arpl
mov
loop
cmp
jmp
xchg
outsl
sbb
loope
adc
add
xchg
pop
jbe
loopne
imul
lods
lds
adc
sub
jp
push
icebp
scas
push
mov
or
sti
jecxz
push
ds
mov
daa
popf
out
jno
call
fistps
push
sarb
scas
jmp
fisttps
icebp
jo
pop
clc
cmp
into
mov
sbb
mov
faddl
dec
mov
scas
pop
cmp
pusha
pop
push
push
cwtl
push
mov
das
imul
and
aaa
call
or
movsl
aad
dec
outsb
leave
pop
mov
arpl
xchg
push
cmp
fmull
movsb
fcomps
js
mov
push
mov
sbb
pop
insl
decl
in
arpl
push
adc
xchg
lock
mov
xlat
pop
jge
dec
fxch
mov
aas
xchg
aas
inc
cltd
repz
stos
sbb
sbb
push
xchg
into
mov
xor
xchg
adc
mov
inc
jno
pop
ret
inc
sbb
insl
and
in
mov
inc
lea
jl
cmp
daa
aad
cmc
jmp
xor
pop
adc
mov
xorb
aam
push
mov
cwtl
sbb
xchg
jnp
inc
adc
in
xchg
inc
aas
fiadds
cmp
mov
in
cmpl
ljmp
inc
cli
fcoms
fstl
push
cmpsb
add
jl
scas
lds
mov
inc
sbbl
sub
mov
mov
xor
test
out
frstor
jne
xor
mov
cmpsb
xlat
cmp
arpl
add
inc
cli
jge
adc
xor
or
scas
pusha
rcrl
jbe
add
shrb
xchg
add
testb
jecxz
xor
mov
xchg
mov
lcall
xchg
gs
cmp
clc
test
sub
loope
jmp
into
lock
push
ljmp
mov
out
clc
aad
push
lock
pop
shrl
loopne
inc
add
lcall
gs
jl
icebp
leave
scas
ja
rorl
mov
lahf
xor
mov
xor
mov
push
icebp
mov
push
lea
dec
or
pop
fidivl
mov
sub
fxch
adc
or
jnp
scas
xchg
ljmp
xor
cs
xor
push
divb
pushf
insb
push
in
and
arpl
insl
xchg
stos
cmc
in
enter
popa
imul
repz
xchg
and
jb
in
cmp
add
rolb
xor
out
pop
dec
mov
bound
test
pop
sbbl
pop
mov
xorb
orb
in
insb
mov
mov
psubq
xor
imul
or
icebp
jecxz
stc
adc
popf
repnz
adc
je
arpl
cmp
push
mov
jge
out
outsb
jg
cs
lcall
jae
add
lock
cltd
adc
fnstcw
xor
sbb
outsl
leave
sub
push
jp
fdiv
dec
arpl
mov
mov
mov
pop
fcmovnu
sti
push
push
aas
dec
dec
je
add
bound
cmp
dec
addr16
repz
fistpl
jmp
cmp
movsl
daa
outsb
sub
mov
shrl
xor
inc
ret
call
gs
and
mov
movsb
sbb
pusha
cs
adc
call
and
and
xor
cmp
stos
outsb
pop
xchg
dec
adc
rorl
sbb
pushf
sbb
popl
or
cltd
inc
jp
inc
dec
dec
or
sub
cltd
mov
mov
jle
mov
popf
mov
pop
and
cs
pusha
xchg
jle
movsl
std
enter
ret
push
cs
and
push
add
loop
push
and
leave
cmp
pop
in
mov
popa
mov
ljmp
rorb
jns
lret
imul
sti
push
ss
decl
bound
and
and
call
xor
adc
lret
and
outsl
xchg
cmp
hlt
lret
xchg
push
xor
inc
jno
xchg
cwtl
jl
add
dec
negb
add
shlb
and
pcmpgtw
dec
fs
xchg
or
shll
cs
mov
pop
dec
jne
ljmp
jge
sbb
andl
dec
xor
pop
jo
dec
xchg
and
int3
addr16
stc
das
mov
jne
push
fdivs
ds
imul
arpl
cwtl
add
dec
push
enter
icebp
bound
dec
push
xor
test
add
dec
add
ficoml
jnp
dec
loop
mov
xor
popf
cmp
or
sbbl
or
sbb
jecxz
rcll
xchg
add
shl
fs
out
sbb
and
inc
fcomps
pop
xor
mov
movsb
pop
inc
mov
xchg
int
push
and
xorb
or
adc
mov
hlt
cwtl
cmp
mov
add
sub
xchg
mov
adcl
leave
add
jg
inc
std
fnstcw
xchg
lcall
and
out
lret
fildll
cmp
and
inc
adc
outsb
lods
mov
sub
pop
mov
lret
push
xor
ret
and
fsubl
es
or
add
mov
mov
xor
lds
jmp
jle
out
and
nop
pop
jecxz
cmpsb
dec
test
cmpsl
dec
cli
xor
jnp
scas
aaa
lods
in
sub
pop
iret
mov
stos
ds
repz
push
cwtl
inc
inc
dec
dec
mov
or
xchg
outsl
cmp
pop
xor
sbb
scas
pop
xchg
into
mov
movsl
popf
rcl
and
lea
jnp
mov
nop
scas
shll
jo
add
gs
dec
andl
and
mov
add
mov
lret
mov
sub
and
mov
ds
stos
fwait
sbb
xchg
dec
jmp
into
stc
cmp
add
addr16
mov
fistl
lret
leave
lea
inc
or
push
les
and
int3
add
cmp
nop
mov
jl
inc
dec
jno
adc
push
dec
lock
clc
aas
lahf
imul
shlb
sub
lods
sahf
sub
mov
fcomi
xor
xchg
dec
ucomiss
hlt
fisubl
dec
lcall
scas
insb
xor
unpckhps
inc
jo
inc
icebp
out
fdiv
push
loopne
lods
int
and
es
pop
mov
sahf
popf
sahf
call
rolb
mov
jbe
jmp
out
xor
movsl
sbb
and
and
pop
stos
andb
mov
lret
stos
xchg
inc
js
lock
or
fdivl
mov
cld
push
mov
ret
add
cwtl
and
jae
test
repz
jo
rcr
prefetcht2
mov
sub
pop
repz
sti
stos
push
mov
xor
mov
xchg
nop
and
data16
inc
popa
stos
cmp
ja
mov
inc
jle
dec
rcrb
out
and
mov
lahf
jge
mov
mov
ds
push
int
test
dec
popl
push
or
sub
push
jno
cmp
repz
out
fs
dec
addb
jp
inc
ds
jmp
inc
int3
clc
rorl
stos
xor
mov
leave
jge
add
push
sbb
cld
push
scas
icebp
cmp
pop
adc
pop
xor
pop
push
icebp
sub
sarb
adc
out
sbb
cmpsb
lahf
adc
pop
ret
add
ljmp
push
adc
adc
leave
lea
lea
insl
sbb
pushf
mov
mov
shrb
xor
ja
pop
jge
scas
adcb
mov
pusha
mov
mov
adc
mov
xchg
sbb
mov
sbb
insl
jns
xchg
dec
mov
stos
xor
scas
push
fidivl
and
sbb
inc
cltd
popf
cmpsb
sbb
leave
mov
jl
push
cmp
cli
std
movl
inc
or
fists
sbb
push
adc
jecxz
mov
xor
cmc
and
sbb
or
sbb
movl
fstps
aas
shl
adc
dec
shrl
inc
mov
adc
mov
ja
or
sahf
inc
jae
hlt
aad
out
cs
mov
jno
xor
jecxz
shrl
mov
cli
stc
ret
les
push
pop
pusha
cwtl
jnp
xor
sbb
jne
repnz
xchg
sub
sarl
inc
and
fwait
arpl
cli
and
lock
jnp
or
mov
push
movsl
mov
pop
mov
int
lds
push
and
sub
mov
or
popa
fcomps
push
jge
aad
int3
inc
dec
notb
test
adc
mov
lock
loopne
or
or
rcr
ss
mov
frstor
mov
stc
xchg
in
pop
jl
push
mov
in
in
out
enter
rclb
sbb
scas
out
push
stc
popf
cltd
dec
inc
mov
fistpl
jecxz
call
push
or
jge
inc
out
mov
mov
pop
lods
jmp
mov
dec
pop
xor
or
ret
push
lahf
xchg
pop
and
mov
das
nop
adc
ficoms
cmc
dec
mov
cmpsl
mov
dec
xchg
pop
test
xchg
cld
ss
cmp
jae
pop
sahf
clc
pop
loope
and
out
cwtl
incb
in
fmuls
repz
sub
loope
es
call
jns
and
lea
sbb
sahf
pop
pop
lods
adc
mov
xor
addb
sub
lret
add
fwait
imul
add
and
add
mov
xchg
mov
sub
addb
pop
sbb
dec
shlb
leave
mov
int
or
pop
in
pop
fs
fbld
push
cld
mov
ss
pop
leave
sub
or
inc
cmp
sarb
adc
xor
pop
adc
xorb
adc
push
jne
pushf
addr16
pop
jge
lret
insl
cmovp
mov
int
rcl
leave
stos
sub
inc
popf
pushf
push
js
xor
mov
stos
cwtl
sbbb
out
fildll
mov
mov
imul
nop
stc
mov
sub
dec
fs
aas
xlat
sbb
test
int
out
bound
in
inc
repz
mov
jno
jl
lcall
addl
mov
ret
lret
add
out
imul
cmpsl
pushf
stos
in
loope
cmp
shll
sub
fldl
inc
xlat
sub
or
ret
xchg
push
add
popa
fldcw
cmpsb
pusha
shll
test
insb
lea
pop
xchg
data16
push
in
or
std
adc
dec
insl
lds
movsb
test
pop
lret
fs
pop
enter
int
mov
repnz
ret
lret
adc
or
test
into
out
fldl
or
es
lds
cmovle
clc
xlat
stc
imul
icebp
add
fisubl
les
stos
shrl
cld
inc
xchg
imul
fidivs
cmpsb
ds
sbb
fdivrs
xchg
xlat
mov
dec
lock
cltd
dec
lea
les
adc
xchg
pop
add
mov
loopne
jbe
mov
fcomps
and
mov
pop
xor
and
push
pusha
sbb
adc
mov
negb
push
scas
cmp
push
pop
xor
push
mov
add
icebp
and
scas
inc
mov
sarb
push
push
and
movsb
in
popa
popa
mov
fnstcw
movb
add
inc
mov
repnz
and
lret
imul
fidivrs
cld
dec
jl
fdivp
in
fwait
mov
or
fsubrs
in
jns
push
jmp
icebp
shrb
push
dec
test
xlat
outsb
dec
inc
dec
out
cmpb
test
pop
mov
mov
popf
sbb
addb
cmpb
pushf
push
gs
call
push
sub
sub
pop
enter
out
jae
push
and
decb
jne
pop
jle
out
scas
xchg
mov
cld
jo
push
aad
cmp
sub
push
jns
int3
int
test
jnp
fcompl
and
in
arpl
jle
sub
dec
cmp
mov
cmc
inc
xchg
mov
lock
sbb
or
leave
xor
repnz
mov
mov
mov
dec
fwait
and
xchg
stos
jle
outsl
mov
jge
call
cmpsb
jg
addb
inc
leave
or
cmp
hlt
and
xchg
jle
or
mov
imul
xor
mov
mov
pop
gs
int3
movsb
jns
mov
xor
lea
lock
pop
mov
or
dec
mov
mov
and
sub
mov
mov
popf
sub
mov
inc
xor
in
add
packuswb
mov
inc
pop
cli
lea
push
std
mov
int
enter
es
mov
bound
xor
dec
xor
test
outsl
add
scas
sub
mov
sub
mov
movsb
fldl
out
pushf
mov
ret
fldl
shrb
mov
jo
ljmp
ret
and
xor
imul
adc
inc
dec
lds
mov
je
setb
test
popf
nop
ret
pop
daa
inc
sbb
push
push
out
dec
rclb
scas
push
dec
pop
pop
xchg
or
inc
adc
scas
cmp
ds
or
push
pop
hlt
or
cmp
test
jbe
push
sub
mov
or
or
mov
mov
js
dec
jae
or
xor
cs
lcall
lret
mov
mov
scas
adc
or
mov
lret
mov
cmp
scas
neg
pop
outsl
shl
aad
ror
xor
and
push
int3
jae
int
gs
iret
sti
mov
xlat
dec
add
pop
inc
cmp
inc
mov
add
js
lods
fidivrl
ficoml
and
or
push
je
push
mov
xor
shl
dec
ljmpw
inc
jp
fbstp
cwtl
sub
pop
cmp
ds
mov
push
and
lea
and
mov
and
loope
pop
loop
lret
add
xlat
push
inc
mov
movsb
inc
mov
xor
ds
fnsave
imul
jg
cmp
leave
ljmp
cmp
cmpsb
mov
mov
inc
jne
mov
xchg
or
cmp
or
jbe
adcb
ret
in
pop
cmp
lods
xchg
daa
jg
gs
cwtl
sub
hlt
pusha
ds
sub
push
dec
and
aas
fs
push
cmpb
int
repz
aam
bound
imul
test
xor
jae
iret
das
nop
sub
loope
enter
in
dec
repz
dec
pop
movsl
jno
lea
insb
xor
sub
les
clc
mov
popf
jmp
xchg
mov
xor
push
cli
add
arpl
lret
add
sub
mov
sbb
push
rdmsr
inc
push
jb
add
cs
lret
fcmovne
adc
clc
pop
and
scas
pusha
push
cmp
xor
and
and
jno
pop
xchg
cmp
addr16
test
gs
adc
pop
sarb
imul
mov
inc
jae
inc
shlb
sub
sbb
cwtl
mov
pop
into
sub
imulb
pusha
cld
push
scas
xchg
adc
loopne
sbb
ret
cs
mov
add
fstpl
leave
daa
push
jle
adc
or
xor
cmp
into
inc
stos
push
add
pop
cli
sbb
add
jmp
adc
or
mov
pop
sbb
arpl
mov
sbb
jge
lret
cwtl
xor
and
popf
inc
pushl
hlt
pop
test
jg
andl
mov
jecxz
sub
add
xor
bound
pop
jae
xor
inc
xchg
xor
hlt
inc
fsubr
pop
xor
lret
mov
xor
lods
fldcw
test
jmp
mov
test
les
je
enter
pop
stos
mov
outsb
dec
out
or
mov
js
lods
loope
pop
pop
popa
outsl
xchg
lret
sbb
push
dec
sbb
or
mov
inc
cmp
jmp
call
sub
inc
push
fstpl
adcl
test
popa
sbb
lcall
out
shr
mov
jne
adc
jo
and
inc
adc
pop
cld
and
add
adc
outsb
fcmovnu
cs
jne
adc
lret
cmp
sbb
xor
iret
lahf
xor
inc
and
cltd
sub
push
cmpsb
jl
jmp
sahf
mov
imull
adc
je
out
fs
cltd
pop
roll
xchg
pop
adc
hlt
clc
xchg
loope
imul
aad
sbb
push
popa
inc
fadds
testl
xchg
arpl
arpl
cli
jo
sbb
lret
divb
in
movsb
lahf
mov
mov
lret
icebp
xor
daa
icebp
fcmovbe
jecxz
mov
adc
loopne
push
adc
or
fcmovnb
pop
xchg
cmpsl
enter
addb
push
das
and
addl
repz
push
add
fdivrs
mov
push
adc
gs
adc
shl
ss
xor
push
xchg
xor
mov
xchg
je
fstpl
call
dec
ss
jnp
push
jnp
sbb
addl
pop
pmovmskb
outsl
or
xchg
cmc
bound
popf
xor
adc
je
adc
cmpsl
testb
ja
dec
cld
jo
orl
inc
push
mov
imul
jns
lret
lahf
mov
fdivr
xchg
ljmp
and
and
inc
sub
out
mov
cmp
pop
subl
imul
cli
sub
movsb
lcall
fidivs
shll
mov
subb
shl
xor
ljmp
adc
das
loopne
daa
in
lea
mov
fimull
mov
push
jns
mov
test
enter
or
xor
cmpsb
push
xchg
outsb
add
and
cmc
out
add
notl
stc
sti
jg
not
stos
push
sub
inc
jl
xchg
push
outsl
addr16
popa
rol
jle
outsl
in
mov
pop
push
jbe
inc
push
pop
and
shl
insb
shlb
mov
push
mov
jne
mov
mov
into
and
add
xor
sbb
insb
popf
fisttps
lahf
mov
sbb
jle
dec
test
push
cmp
pushf
test
add
dec
mov
xor
sbb
pop
lea
fildll
cmp
aam
stc
or
pop
ret
insb
ljmp
adc
jl
add
fwait
adc
add
scas
xchg
mov
pop
test
xor
push
cmp
icebp
add
push
push
mov
adc
sbb
ja
mul
jae
push
stos
sti
sbb
enter
jmp
in
mov
mov
pop
sub
jbe
dec
nop
or
ljmp
pop
cltd
test
outsl
aas
icebp
sbb
popa
ljmp
bound
push
addb
mov
cmp
call
xchg
sbb
fisttps
mov
hlt
fsubl
in
adc
mov
push
aad
lock
adc
ds
jno
int
adc
in
jle
push
lret
pop
fdivp
fsin
xchg
pop
sbbb
ss
ffreep
lahf
jp
insl
and
es
mov
push
dec
in
daa
je
dec
std
call
sbb
cld
idivl
jo
fwait
dec
jp
cs
shl
jl
add
xchg
gs
xlat
ljmp
xchg
test
daa
sbb
inc
jbe
hlt
ss
and
xchg
aam
int3
push
inc
adc
mov
pop
and
rorl
bnd
adc
shlb
mov
mov
sbb
daa
sub
mov
mov
adc
or
jbe
gs
cmp
nop
sbb
xorb
sub
pop
jl
jle
dec
fsubrl
aas
mov
cwtl
inc
bound
je
xor
daa
or
cld
stos
mov
mov
mov
mov
js
or
fwait
jg
sub
cmp
andb
pop
cmp
test
mov
faddl
xchg
and
or
adcb
nop
repz
xor
fimull
jmp
sbb
pop
ret
inc
and
shll
mov
adc
mov
mov
repnz
adc
out
mov
shlb
mov
int
sbbl
sub
push
cwtl
jmp
xor
jno
fcomps
or
stc
cmpsb
xor
incb
cmp
push
repnz
pop
test
dec
pop
and
notl
shl
add
ret
mov
addr16
inc
ja
outsl
pop
les
incb
jns
fidivrl
enter
pop
cmp
pop
gs
ljmp
push
clc
adc
stos
pop
dec
lret
xchg
insl
mov
mov
jmp
jb
inc
repz
iret
sub
out
mov
push
jnp
loop
sub
ret
gs
cwtl
cmp
mov
sbb
leave
clc
mov
out
stos
cli
bound
jle
mov
add
ja
jb
mov
imul
push
mov
into
data16
movb
mov
mov
mov
sbb
lds
rcl
and
dec
and
push
movsb
fimull
bound
mov
int3
lock
lea
int3
or
shlb
imul
pop
jp
add
mov
dec
stos
decb
sti
jg
jbe
cld
pop
clc
imul
add
loop
push
push
sub
jb
sbb
sbb
cmp
xchg
mov
rcr
imul
pop
pop
sub
jbe
xchg
insl
cmp
pop
je
scas
stos
dec
es
std
sbb
les
popa
pop
mov
mov
subb
dec
lods
xor
mov
std
lret
nop
in
jae
jl
popf
sub
lahf
scas
mov
rorl
cmp
xlat
xchg
jl
scas
scas
lahf
lahf
in
dec
mov
outsb
mov
xlat
aad
popa
add
mov
mov
add
frstor
add
fucomip
xchg
and
add
repz
or
neg
aam
xchg
sbb
adc
mov
dec
push
or
mov
pop
jbe
das
xchg
mov
inc
sub
cmpsl
dec
das
lret
movsb
repz
stos
dec
or
daa
mov
stc
add
out
les
popf
mov
xor
sub
js
bound
mov
bound
jae
mov
mov
out
sbb
inc
ljmp
xor
cmp
xchg
cmp
lds
pop
rcll
iret
rclb
inc
mov
jno
fwait
js
push
mov
jl
inc
adc
aas
inc
sarl
out
scas
frstor
fstpt
insb
popa
das
arpl
mov
xor
jo
xor
add
push
add
loope
lods
lcall
insl
insb
mov
mov
lock
js
popf
adc
pusha
and
jne
dec
xorb
cld
mov
insb
fstl
xchg
add
test
and
adc
add
into
jo
sbb
xchg
push
jmp
ss
sub
push
sub
cmpl
fldenv
fucomp
mov
popa
pop
icebp
mov
cwtl
test
push
sahf
scas
lds
stc
inc
loopw
pop
dec
in
push
mov
mov
mov
or
loope,pn
jl
mov
push
rorl
add
mov
and
loopne
scas
aam
mov
dec
fadds
cmp
inc
lods
inc
lahf
adc
mov
or
fistpll
add
mov
and
or
repz
pushl
and
test
mov
add
pop
sub
cwtl
insl
out
cmp
jl
mulb
in
adc
lret
out
imul
add
cmp
imulb
xor
lock
insb
jg
push
push
inc
xor
push
popa
outsl
inc
sub
daa
jns
push
fsubrs
sti
ret
es
js
cmpsb
pop
mov
sbb
and
cld
xchg
sbb
jecxz
jle
iret
aaa
rorb
mov
mov
dec
pop
sub
add
call
sbb
mov
pop
out
mov
cmp
es
or
or
lcall
jl
add
cmp
outsb
xor
fdivp
adc
and
aaa
sbb
stc
inc
jno
loope
loop
mov
mov
mov
or
orb
and
lea
shl
sti
xchg
jns
js
push
je
jp
push
out
je
out
xor
cmpsb
cmp
push
inc
sbb
jb
imul
shl
sti
ja
dec
andb
mov
stc
mov
call
mov
xor
arpl
xchg
add
or
fs
xchg
xor
in
lret
jae
mov
jo
outsb
inc
adc
add
mov
ss
pop
jecxz
mov
add
or
push
daa
mull
stos
pop
push
jmp
push
mov
jnp
cmp
jne
inc
cmp
mov
aaa
pushf
fnsetpm(287
ljmp
adc
ja
jl
iret
aas
jb
mov
push
inc
push
sti
pop
sbb
mov
es
adc
mov
es
xchg
not
xchg
lods
stc
push
xchg
divl
xchg
in
xchg
iret
sbb
movsb
arpl
mov
std
aas
mov
mov
incl
lret
dec
xor
xchg
out
lea
lds
lcall
out
add
cwtl
scas
loope
negb
inc
movsb
addr16
inc
popa
xchg
jo
mov
jp
rolb
mov
rcrb
inc
rcr
inc
in
into
push
mov
idiv
pop
sub
sbb
pusha
int3
les
call
outsb
lods
ficomps
inc
cmc
scas
push
add
or
jo
fs
dec
fistps
xchg
or
jmp
mov
imul
xchg
push
xchg
cmp
outsb
test
repz
cmpsb
push
add
pusha
cmpsb
sub
xchg
ret
cmp
daa
lahf
or
inc
bound
lret
std
cld
mov
lret
xor
mov
sub
xchg
xchg
push
or
or
scas
repz
fisubs
daa
std
pmullw
xchg
xor
lds
inc
ljmp
mov
dec
inc
imul
pushl
xor
jbe
lret
mov
mov
sbb
aam
xchg
popa
push
mov
cmpsb
inc
ret
movsb
jno
insl
cmp
dec
push
rcrb
mov
inc
dec
loop
or
xacquire
or
test
daa
lods
mov
test
dec
mov
aas
fimuls
sarb
add
into
adc
xor
xchg
and
ret
pusha
inc
leave
rorb
sub
jle
push
xlat
xor
shlb
mov
sub
inc
mov
cmpsb
inc
cmp
or
lock
sti
subl
xchg
adc
mov
gs
xchg
and
inc
xor
mov
sbb
inc
sub
xchg
divl
fbld
cmp
add
push
mov
pop
ret
dec
mov
stc
in
and
push
lods
dec
in
repz
xchg
mov
mov
add
mov
cmovae
mov
sub
or
icebp
pop
adc
aam
es
adc
je
dec
cli
aaa
in
jb
popl
push
sub
outsl
int
dec
mov
rclb
cmp
inc
inc
repnz
bound
add
addr16
sti
xchg
bound
sbb
adc
daa
cmp
mov
and
adc
push
push
mov
out
cmpb
cmpsl
scas
push
insb
cs
cmp
les
xor
fcoms
adc
repz
add
shll
gs
pop
aaa
jmp
adc
sub
movsb
ret
jno
adc
jno
pop
mov
cmp
rcrb
out
or
dec
fldenv
aam
add
pop
sbb
aas
sub
es
call
mov
xor
pushf
xchg
xor
push
or
xchg
add
addr16
fistps
mov
mov
cld
popf
decl
lea
push
sbb
jp
sub
popa
inc
pop
xchg
fidivrl
lahf
mov
mov
jo
mov
repnz
sub
dec
xor
xor
push
loop
sbb
push
icebp
int
ss
fnstsw
mov
xor
push
fmulp
in
repnz
int
in
nop
int3
loopne
inc
mov
mov
and
push
dec
push
testb
daa
jl
xor
sub
out
jge
dec
and
inc
lcall
add
xchg
jne
sbbl
mov
stc
icebp
fcomi
frstor
xor
sbb
fstps
mov
pop
jl
sbb
xor
sub
sbb
mov
dec
aam
jnp
shl
aam
popf
xchg
shr
gs
dec
fxch
mov
mov
out
pop
push
hlt
mov
out
mov
xchg
dec
jnp,pt
add
and
cmp
lahf
lods
jno
stos
xor
or
adc
shlb
push
cwtl
sub
inc
xchg
sti
ss
pop
xchg
dec
js
setnp
nop
inc
popf
cmp
or
jae
push
out
and
mov
mov
pop
mov
in
popl
cmp
je
cmp
testb
std
cld
aad
mov
in
dec
jecxz
loopne
addr16
jo
ficompl
jg
xchg
inc
sbb
jbe
leave
dec
out
pop
pop
pop
jmp
mov
mov
cmpl
lcall
mov
cmp
jns
cltd
inc
sbb
adc
pop
jmp
mov
cltd
inc
sbb
push
xchg
xchg
mov
and
push
mov
sub
or
inc
scas
pop
pusha
sbb
xchg
jno
add
sbb
sbb
add
xor
xchg
arpl
shlb
icebp
out
fs
cmp
js
add
dec
xlat
es
sbb
addr16
xchg
add
leave
push
or
shr
lahf
mov
int3
or
jecxz
shrb
call
jbe
dec
out
hlt
out
push
fdivs
push
into
les
push
sti
mov
repz
push
test
fcomip
fwait
in
and
in
ljmp
in
arpl
daa
sbb
sub
push
cs
add
aad
loop
je
xchg
dec
subl
pop
js
dec
stos
mov
mov
add
leave
xlat
movsb
sti
jp
out
mov
sub
js
fs
icebp
mov
rclb
rclb
ret
push
in
fbstp
cli
add
sbb
mov
test
into
sub
mov
nop
xor
into
cli
inc
mov
fyl2xp1
subb
pop
jbe
sbbb
mov
cld
pusha
repz
inc
jmp
xchg
jbe
sub
pop
scas
in
cmc
sub
or
cmp
cmp
cmp
sub
cs
mov
out
in
icebp
inc
call
lret
xchg
aas
aam
fwait
stc
cmp
dec
out
mov
cltd
fldt
andb
mov
sub
push
shll
pop
aaa
int3
dec
das
insl
cli
jbe
mov
xchg
mov
sub
mov
lods
push
pop
add
aad
dec
int
and
dec
mov
outsl
dec
add
mov
pop
and
imul
jge
lods
jge
popl
rorl
pop
mov
js
jbe
mov
jae
mov
cmpsl
add
push
outsl
shl
xchg
and
fstps
add
sub
ret
jno
and
mov
mov
cmp
pop
out
or
shrl
mov
popa
adc
nop
xor
gs
xor
cmp
enter
sub
jo
aam
repnz
insl
pusha
cmp
inc
jns
inc
bound
enter
ror
shlb
int3
pop
in
inc
loop
pusha
enter
xchg
xchg
xchg
inc
adc
dec
out
pop
out
mov
jl
jmp
loop
sub
and
inc
out
push
jmp
std
lcall
mov
cwtl
scas
fsubrp
sub
and
xchg
test
sub
pushf
pop
mov
push
filds
aaa
popa
inc
sub
jo
aas
xor
mov
loopne
mov
dec
std
and
pusha
pop
sbb
or
mov
push
jno
xchg
in
clc
pop
push
scas
clc
std
inc
negb
cmp
dec
add
mov
ficomps
jae
push
mov
adc
adc
inc
mov
sbb
mov
repz
out
outsl
jg
fldt
jp
pop
xchg
mov
cmp
fmuls
dec
push
inc
pop
push
mov
nop
fldcw
mov
dec
adc
push
cmp
test
or
dec
data16
sti
jmp
mov
mov
jg
mov
int3
out
scas
adcb
add
xor
inc
cs
pop
in
aam
mov
data16
push
adc
scas
fsubrl
sbb
xchg
lret
dec
in
test
mov
push
add
stos
push
mov
or
out
mov
push
sbbb
adc
sub
mov
push
mov
and
dec
xlat
aad
xor
aas
xor
xchg
and
frstor
add
push
dec
aas
mov
test
ljmp
test
xchg
movsb
pop
pushf
inc
mov
scas
push
loopne
repz
adc
push
mov
jg
jle
into
inc
mov
xchg
insb
jle
mov
cmpsb
cwtl
bswap
mov
fmuls
nop
pop
enter
sti
fcmovu
daa
shrl
mov
push
mov
jecxz
call
insb
dec
sub
cmpsl
add
loopne
jge
out
mov
mov
repz
leave
cmp
jb
aas
js
cmp
sub
rcrl
xchg
cli
add
sub
or
xor
stos
leave
mov
dec
nop
cwtl
scas
dec
push
xor
mov
jnp
cmp
je
fisubrs
daa
mov
fwait
add
xor
xor
jno
mov
mov
sub
psrlq
daa
dec
mov
les
aam
aaa
pop
mull
jae
and
jp
push
fiaddl
cld
imul
jnp
fwait
imul
mov
fiaddl
and
fucomp
shl
xor
pop
push
jbe
sahf
aad
cmpsl
fidivl
xchg
repz
jno
mov
stos
dec
leave
loope
loope
pop
jns
jp
pusha
cli
ds
sub
or
and
jnp
pusha
inc
loop
dec
mov
popf
loope
aad
enter
pop
jb
imul
mov
mov
pop
fiadds
or
das
lea
cmp
fmull
in
mov
xchg
xlat
push
test
loope
cmc
push
popf
ficoml
xchg
icebp
xchg
je
je
push
aad
insb
adc
int3
sub
add
xor
aaa
add
scas
inc
push
add
jnp
insl
pusha
adc
loope
test
dec
mov
inc
outsl
adc
lods
mov
imul
lcall
les
insb
xchg
stos
lods
setnp
push
mov
pop
in
lea
icebp
add
mov
into
fldt
loop
push
repnz
insb
repnz
rorb
mov
jne
jle
clc
ret
loope
stos
add
jmp
pop
jle
hlt
xor
or
jge
orl
or
mov
xchg
jnp
dec
scas
mov
mov
stos
mov
jns
and
andl
stos
xor
pop
rcrb
lods
in
mov
mov
cmp
or
sti
xchg
adc
into
test
xchg
inc
dec
sub
mov
jnp
push
repz
inc
add
xor
in
push
cli
lods
cmp
lahf
push
xor
aam
xor
and
es
test
cmp
fisubrl
sbb
inc
sbb
xchg
in
into
fldl
cmp
pushf
dec
jbe
adc
dec
popa
mov
add
inc
dec
jge
lcall
stos
outsl
pop
or
mov
stc
dec
loop
add
mov
shlb
ds
cmc
lahf
and
mov
rcrl
sub
pop
mov
cltd
and
dec
sub
insl
je
movsb
sbb
pop
fcompl
jnp
out
or
mov
jge
pop
insb
in
enter
jg
mov
cs
xchg
mov
hlt
cwtl
stos
hlt
inc
push
int
popf
lock
pop
movsl
fs
dec
mov
mov
cmp
push
sub
fwait
sub
int
cli
jl
ja
mov
dec
stc
fisubrl
shlb
jb
int
orb
ljmp
jo
lea
sub
xchg
in
arpl
xor
shr
push
mov
rcll
icebp
inc
push
out
mov
out
pop
jmp
xorb
pop
clc
and
sbb
lds
sbb
out
std
and
dec
insl
dec
pushf
out
sub
pop
pop
in
xor
fwait
int
xchg
int
fldt
repnz
mov
push
push
or
pop
icebp
and
xchg
pusha
inc
insl
add
xor
aas
idivl
sbb
jecxz
and
adc
sub
pushl
sub
subb
push
dec
lret
or
mov
out
sub
pop
enter
mov
jecxz
mov
cmp
xor
stos
push
cmp
imul
cli
fstl
stc
mov
imulb
cmp
sub
push
cli
sti
or
inc
push
mov
xchg
scas
xor
pop
and
sbb
test
loopne
jmp
out
pop
ret
scas
xchg
fidivrs
mov
subl
ret
lret
shl
or
mov
call
mov
test
jp
fcomps
and
rcrb
jp
inc
insb
fcomi
fbstp
lcall
push
lods
ret
lcall
xchg
add
lret
add
or
pop
lret
jae
mov
sub
std
jmp
call
stc
movsb
push
test
pop
mov
sbb
dec
cmp
fldenv
xor
cmp
loop
test
pop
int
cltd
xor
test
cmpsl
add
pop
add
push
mov
in
xchg
cmp
test
cmp
pop
lret
dec
dec
jge
int
mov
mov
mov
push
push
shrb
pop
scas
jge
or
adc
xchg
add
sbb
mov
push
dec
call
xor
push
xlat
mov
pop
pop
out
mov
rorl
outsb
lea
and
ja
lret
mov
arpl
mov
push
lcall
andl
scas
call
push
or
mov
iret
loope
daa
lds
mov
jg
icebp
notb
add
stos
cmp
push
push
adc
repnz
jae
xor
cld
inc
fists
iret
mov
xor
pop
dec
jo
push
adc
lods
mov
dec
lds
mov
xchg
push
test
ljmp
data16
add
cltd
dec
dec
bound
mov
and
push
xchg
cmp
lcall
xor
pop
mov
mov
lcall
loopne
jns
push
dec
fldt
jnp
mov
push
mov
sti
xchg
in
aaa
push
in
push
xor
sub
xchg
cmp
mov
xchg
stc
jne
lret
sbb
mov
neg
xchg
fildll
xor
sbb
in
pushf
and
sub
scas
mov
dec
imul
pop
or
add
out
cmp
push
arpl
push
push
test
test
and
fdivs
xor
jns
into
pop
int
call
jb
xor
ret
hlt
jnp
xor
pop
inc
mov
xor
add
add
loope
xlat
aad
inc
jns
push
xorl
lock
dec
into
jmp
push
cmp
lds
jne
sbb
push
dec
outsl
mov
mov
out
fs
adc
dec
push
push
addr16
insb
int
adc
xor
iret
add
cmp
mov
and
std
cmpsb
sbb
lret
scas
inc
dec
fs
popf
mov
or
mov
cli
mov
adc
lret
sti
loop
cmp
pushf
xchg
add
and
aam
mov
xchg
inc
iret
imul
popa
daa
adc
in
fcom
mov
inc
and
mov
push
jae
push
mov
push
hlt
push
lods
push
mov
fisubl
mov
imull
fnstsw
jmp
int3
xchg
pusha
in
cmpsb
xor
clc
orb
mov
fwait
and
outsl
aad
rorb
sbb
fildll
xor
fs
pop
pop
addr16
xchg
adc
and
mov
adc
shrb
mov
dec
mov
lods
jnp
pop
repz
or
stos
sub
jnp
inc
dec
mov
test
adc
inc
mov
fldenv
lret
sbb
sub
into
fmull
inc
pop
scas
fiaddl
xchg
mov
adc
fs
xchg
lret
stc
ljmp
scas
jno
dec
jge
arpl
adc
cmc
out
push
in
add
enter
push
push
fs
cmp
sub
fistpll
lea
jb
xchg
pop
subb
mov
pop
mov
arpl
xchg
pop
jnp
out
jp
arpl
ret
jnp
or
cmpl
in
movsb
mov
fs
xor
sbb
aad
add
xor
jg
xor
mov
sbb
add
scas
in
stc
out
sbb
xchg
lock
aad
and
jnp
loopne
imul
sbb
iret
js
insb
lahf
push
cmc
stos
test
pusha
call
inc
out
scas
or
fwait
cmp
fsubrl
dec
jae
or
pop
daa
in
cmp
test
inc
xchg
bound
loopne
pop
daa
cs
push
mov
lds
call
into
mov
xchg
xchg
and
jnp
aaa
adc
or
jbe
lahf
xchg
lret
paddusb
mov
xchg
sahf
jne
cmp
add
sarb
mov
aad
push
mov
mov
fidivrl
loopne
sti
iret
xor
sbb
dec
xchg
adc
mov
add
mov
cmc
mov
es
add
lcall
mov
mov
dec
xchg
sbb
mov
and
adc
in
jne
pop
mov
or
add
faddl
sahf
subl
add
jno
dec
jmp
jbe
popf
ret
jecxz
mov
loop
out
jno
mov
in
test
lock
aas
out
stos
cmp
iret
rolb
ficompl
adc
popa
mov
cmpsb
lods
and
pop
insb
pop
movsl
lods
les
or
in
aad
or
scas
cmpsb
push
jnp
and
je
xor
or
lods
inc
xchg
lahf
xor
and
out
pop
daa
out
pop
mov
ficompl
xchg
inc
sub
xchg
mov
das
and
inc
sub
sbb
xor
mov
mov
push
stc
sbb
fucomip
mov
das
push
push
sti
inc
shrl
cmp
and
xlat
mov
movsb
jb
pop
adc
cli
loope
jecxz
nop
outsl
das
adc
dec
loop
mov
out
jns
pop
pusha
xchg
and
inc
nop
ret
loopne
or
loope
push
jb
inc
push
scas
ldmxcsr
ja
je
outsb
xchg
out
test
mov
addr16
loope
lds
orl
pop
mov
clc
and
dec
and
push
orb
push
sub
or
lahf
and
in
xchg
pop
mov
xor
or
dec
xchg
dec
add
jae
leave
xchg
push
fs
out
cli
mov
pop
or
inc
push
and
jne
xchg
add
les
testl
aad
aas
dec
lret
sqrtps
jg
nop
push
mov
movsb
or
jae
xchg
or
xor
fwait
or
cmpsb
cmpb
pop
push
dec
idivl
mov
lds
xchg
inc
mov
dec
inc
fisttpll
mov
js
and
sub
xor
pushf
or
out
sub
pop
jbe
decl
jo
push
xlat
clc
adc
mov
xchg
add
mov
sti
mov
movsl
mov
mov
push
add
test
imul
sbb
out
jg
push
cmp
pop
movsl
add
pushl
jp
pop
adc
iret
cltd
sub
jns
add
xchg
sbb
call
sub
lds
dec
xor
and
mov
inc
jo
pop
dec
xchg
xorl
lret
add
adc
adc
das
mov
jg
test
lcall
jl
sti
mov
je
cli
xor
pop
sub
lods
sar
dec
mov
fstpt
push
outsb
mov
add
xor
jne
inc
jne
fldt
sub
mov
xchg
pop
lods
push
mov
xchg
jp
repnz
andnps
push
lock
and
outsb
pusha
xchg
dec
inc
mov
fwait
test
sub
dec
xchg
adc
jge
pop
cld
mov
or
jg
jne
mov
sub
cmp
adc
addr16
xor
mov
bound
xchg
stc
lcall
push
ficomps
jmp
inc
ret
std
lea
pop
in
sbb
pop
cmpl
sar
mov
cmp
jmp
mov
push
sub
xchg
and
push
jno
dec
pop
mov
out
lahf
out
pop
push
sti
sbb
add
aam
push
das
xchg
push
pop
fs
and
xor
ljmp
fcoml
push
ja
sahf
or
jle
out
mov
mov
insl
les
cmpsb
xchg
xor
ret
push
mov
add
mov
loope
imul
dec
jg
xor
cmp
mov
lods
push
mov
ja
mov
inc
xor
repz
xchg
out
jo
mov
inc
ljmp
mov
mov
xchg
int3
scas
rcrl
jecxz
cmp
push
dec
loope
sbb
jo
loopne
mov
lock
sahf
xchg
aas
sbb
bound
mov
pop
faddl
pop
inc
xchg
daa
push
les
push
cs
sub
jge
jmp
sub
pop
pusha
fiadds
out
or
push
xchg
jmp
test
pop
std
sarb
mov
pusha
orb
cmpb
mov
pop
int3
fbld
mov
pop
addb
les
arpl
scas
ss
movsb
sub
pop
inc
cli
frstor
and
cs
adc
push
js
dec
xor
out
jns
cmp
inc
pop
dec
mov
sahf
les
nop
stos
fwait
lea
sarb
mov
addr16
xchg
jecxz
icebp
or
les
movsb
ja
dec
jbe
lea
xchg
xchg
test
push
loopne
mov
sbb
xor
mov
cs
in
out
adc
push
xor
scas
roll
adc
xlat
out
lcall
les
lahf
xchg
jge
lea
or
mov
push
stos
mov
push
jle
push
icebp
sti
inc
dec
out
xchg
push
out
mov
push
or
hlt
leave
outsl
push
add
pop
jle
dec
sar
jb
xor
lar
sti
in
pop
and
pushf
out
cli
das
addr16
sub
stc
filds
sbb
sub
add
in
sarl
inc
jns
fdivr
lds
loope
fbld
sbb
fisubs
lahf
mov
iret
nop
or
iret
aam
jae
add
fisttpll
adc
in
scas
pop
pop
pop
test
push
xchg
aaa
pop
lret
cmpsb
jns
in
jo
outsl
stos
xor
outsb
testb
add
xlat
mov
inc
jg
in
pusha
xchg
mov
pop
lock
mov
sbb
jecxz
jle
push
xor
and
push
jmp
out
mov
xor
nop
xchg
lret
fldl
scas
cmpsl
outsb
lds
push
rcrl
xorl
int
enter
jno
add
jbe
inc
inc
ljmp
mov
jnp
out
mov
push
xchg
or
and
push
arpl
outsb
mov
lcall
pop
jbe
push
fnsave
pop
dec
sbb
cld
pushf
fistpl
jnp
mov
add
loope
mov
dec
frstor
rorb
jge
aam
int3
lock
loop
es
sbb
xchg
jl
pop
mov
out
mov
sbb
loop
sbb
aaa
pop
cmc
mov
lea
pop
pop
repz
push
mov
inc
out
adc
mov
insl
sbb
add
add
and
xor
cmp
mov
push
cmp
mov
push
sbb
dec
int3
clc
push
adc
mov
int
xchg
xchg
cmp
fidivl
int3
clc
dec
sti
js
ret
lods
push
inc
mov
fs
pop
mov
je
ret
push
push
leave
call
cmc
mov
adc
int
ds
mov
sbb
jle
push
faddl
mul
les
xchg
ficoms
pop
aad
stc
cmpb
shlb
nop
std
xor
cmp
sbb
outsl
inc
mov
xchg
lds
inc
inc
xchg
jmp
add
jp
fnsave
jp
imul
sahf
cmc
test
sub
aad
xorl
cli
jp
push
hlt
mov
xor
lock
cmp
mov
ret
pop
xchg
data16
aaa
and
pop
testl
adc
cmp
jno
xchg
add
out
loopne
mov
mov
push
mov
arpl
add
sarb
push
cltd
loop
jg
xchg
in
cmc
push
fidivrl
mov
in
push
stc
jne
fistl
mov
into
mov
jecxz
and
xchg
add
bound
jp
ss
sub
hlt
scas
jp
push
xchg
test
cmp
dec
xor
sbb
inc
and
cmc
repnz
shl
adc
inc
or
jb
inc
add
mov
xchg
pop
mov
xchg
scas
int3
lret
aam
aaa
mov
jp
jmp
loopne
pusha
stos
sub
addl
daa
mov
xor
cld
outsb
ret
pop
push
mov
jp
or
sbb
ja
call
pusha
push
inc
or
mov
orl
int3
nop
lcall
fxch
xchg
inc
jmpw
push
sbb
push
jmp
add
aaa
pop
push
pop
popa
lods
sub
mov
in
pusha
dec
jle
and
push
xchg
cvtps2pd
xchg
test
jne
jne
mov
jmp
and
xor
loope
aaa
jne
outsl
lock
push
mov
incl
cmpsb
sub
test
dec
int
movb
and
ljmp
xchg
xchg
lock
fisubs
add
les
mov
lea
ds
add
test
jo
jno
mov
add
xchg
inc
pop
jnp
push
jge
aad
push
ja
xor
sub
cld
arpl
aaa
mov
xchg
push
jge
and
in
mov
gs
jne
mov
xchg
repz
imul
mov
test
ljmp
sar
clc
jmp
sbbl
cmc
mov
into
xchg
das
hlt
jne
adc
adc
test
scas
imul
jg
loopne
or
addb
push
push
add
inc
mov
push
pop
xchg
dec
mov
idiv
jns
push
divl
cli
shl
cmp
or
mov
add
lock
les
add
in
es
push
dec
mov
sub
dec
mov
xchg
dec
out
sbb
out
out
insl
arpl
fsubp
sysenter
dec
out
mov
out
sbb
data16
xchg
cmp
add
adcl
cmp
xchg
xchg
leave
in
add
jg
or
loop
jge
jmp
xchg
push
push
movsl
mov
out
pop
cmp
push
out
and
sub
pop
inc
adc
or
insb
test
mov
shrl
sbb
imul
cltd
gs
shlb
adc
out
sbb
mov
add
cmpsb
push
mov
or
xchg
xorl
pop
pushl
movsb
rorl
mov
into
in
jno
sbb
xchg
aam
jg
mov
ljmp
dec
dec
add
xchg
movsb
xor
lock
or
pop
push
cwtl
jnp
xor
ljmp
adc
insb
mov
imul
sbb
push
sahf
sub
ja
pushf
leave
leave
lcall
pop
out
dec
in
ss
clc
ljmp
sbb
clc
stos
sbb
xor
xlat
fs
std
cmp
add
mov
fs
arpl
int
int
push
mov
push
inc
or
xchg
mov
aaa
cmc
push
push
scas
ja
mov
loop
pop
or
stc
mov
cwtl
movsl
aaa
inc
mov
js
daa
pop
icebp
test
xor
imulb
in
lcall
ret
or
adc
js
mov
xchg
insl
sub
lret
inc
adc
call
mov
lret
pop
mov
scas
pushf
js
out
jecxz
aad
jb
sub
mov
adc
sub
adc
add
stc
repnz
ret
loop
mov
punpcklwd
xchg
daa
add
popa
scas
and
jno
lcall
ret
pop
imulb
add
out
jae
loope
push
and
ljmp
jmp
xlat
jb
push
ja
lock
or
dec
rorl
jo
out
xchg
adc
mov
push
lods
js
inc
fists
add
insb
sub
sbb
xor
call
sti
cmp
jl
stc
rcrb
and
mov
cld
add
nop
je
mov
int3
test
fdiv
popa
movsb
stos
and
out
pusha
mov
loopne
pop
dec
adc
xchg
mov
aas
push
xor
es
sbb
xor
lcall
dec
mov
loop
pushf
dec
add
fisttps
lret
fdivrs
xchg
mov
xlat
jo
out
pop
and
imul
mov
cmpsl
sarl
push
xchg
mull
les
test
mov
mov
xor
inc
inc
mov
or
sar
sbb
loope
repz
lret
ja
std
xchg
iret
push
shlb
inc
shrl
outsl
xchg
insb
sarb
aam
pop
fcoml
out
out
sarb
sbb
dec
sub
push
mov
mov
std
xchg
gs
cld
subl
mov
ja
inc
je
xlat
add
xchg
mov
lcall
xchg
inc
dec
or
mov
test
testl
fisttps
cltd
addr16
xorb
xor
out
aaa
fcompl
pop
loope
jmp
dec
cmpsl
push
push
pushf
fbstp
sub
and
lret
inc
jle
or
xchg
inc
add
int3
and
xchg
bound
push
jle
ret
dec
arpl
repnz
out
mov
ds
inc
sbb
cmp
js
jno
jmp
pop
mov
pop
stc
lds
adc
fadds
pusha
scas
xchg
or
js
jg
insb
sbb
mov
lods
test
jmp
mov
sub
and
sub
cmp
mov
scas
cli
xchg
jmp
xor
iret
shl
add
adc
mov
cs
pushf
out
or
in
inc
cltd
sub
nop
and
mov
fstpl
mov
push
je
add
sbb
andl
pop
out
xchg
xlat
fists
aad
xorb
mov
es
cmp
jns
imul
and
test
imulb
sub
lods
into
mov
xor
popf
je
push
dec
xlat
jae
imul
and
sbb
dec
mov
add
insb
popa
inc
cltd
xor
xor
xchg
mov
add
add
jp,pn
int
enter
mov
cs
push
stos
pushf
inc
xchg
mov
shll
sub
sub
xchg
stos
xor
stc
fiadds
xchg
mov
sub
dec
lea
mull
call
add
test
aaa
jmp
or
jo
outsl
adc
mov
or
xchg
cmc
mov
xchg
sti
daa
fiaddl
jg
mov
mov
mov
mov
lahf
mov
fwait
inc
sarb
aad
or
jg
lcall
sub
in
lret
jecxz
addl
arpl
push
jo
xchg
pop
mov
dec
pop
cmp
mov
mov
lock
hlt
xor
mov
test
and
inc
outsl
out
dec
int
add
cli
mov
imul
test
pop
out
mov
mov
dec
or
dec
adc
jb
xchg
or
cltd
xlat
sarl
insl
jns
subl
aad
out
movsl
xchg
mov
sub
push
out
dec
outsl
pop
xor
adc
push
ja
insl
push
cli
sub
jno
inc
adc
rorl
push
and
or
push
imul
leave
jmp
loop
mov
inc
push
subb
leave
stc
mov
and
add
add
pop
cmpb
loope
pop
call
dec
push
xor
xor
test
repnz
mov
movsl
mov
push
mov
and
ret
int3
push
xlat
pop
xor
imul
mov
jge
jo
xor
inc
jnp
jae
cltd
fdiv
xchg
xchg
enter
sub
aas
xchg
add
daa
push
jb
test
jne
int3
xor
pusha
pop
adc
jns
movsb
lods
inc
pop
stc
outsb
push
repz
mov
das
clc
xlat
daa
pop
xor
in
ja
pop
dec
addr16
or
add
mov
add
sub
fadd
test
add
adc
sbb
xor
popf
sbb
add
ret
sub
popf
xchg
lock
jp
loop
in
add
ret
cmp
or
rolb
mov
sub
popf
sbb
vmovsldup
mov
inc
repnz
jne
mov
and
roll
jnp
addl
lea
int3
shrb
add
mov
shrb
add
loopne
sbb
fistpl
and
js
and
movsb
fisubs
jmp
add
stos
inc
cwtl
mov
aas
jmp
jge
xchg
cwtl
ja
les
outsl
mov
out
dec
loopne
imul
cs
daa
test
negl
mov
loop
js
stc
mov
xchg
ret
mov
stc
add
scas
cmpsl
popf
jne
hlt
es
pop
adc
sarl
hlt
stos
popf
loopne
push
imul
or
xor
aas
inc
and
inc
clc
loopw
lahf
fucomp
or
adc
test
ja
aaa
iret
sub
xchg
push
clc
fs
inc
loop
jnp
lret
pop
cmp
adc
mov
imul
dec
sti
dec
mov
imul
mov
adc
mov
jns
loop
sub
enter
cmp
stos
in
clc
and
shrb
repnz
cmp
and
in
je
sub
mov
xchg
nop
rcll
mov
mov
dec
iret
inc
sub
mov
mov
rcl
pop
add
sub
add
andb
adc
push
sbb
jbe
sbb
mov
xor
sub
cli
and
dec
ja
test
add
or
lods
jmp
fs
mov
data16
mov
mov
cmp
xor
int3
lea
push
xchg
sbb
xor
dec
repz
leave
insl
pop
dec
gs
mov
adc
repz
pop
nop
cmp
inc
xchg
xor
jecxz
xor
loop
in
sub
inc
test
stc
inc
cmpsb
push
movsb
nop
xor
inc
add
popf
adc
fwait
lahf
ds
clc
test
mov
add
cli
out
mov
jne
mov
push
add
push
inc
repnz
cmp
sub
leave
push
jle
popa
pop
out
or
inc
or
cmp
icebp
repz
popf
aas
inc
data16
cmp
popf
aad
xor
xchg
inc
inc
hlt
rcll
mov
subl
jno
adc
repnz
xor
mov
scas
jb
cld
jl
sbb
mov
or
cmpl
pushf
leave
sbb
mov
pop
jle
jp
fadds
dec
mov
add
dec
and
push
andb
addr16
lret
std
roll
rorl
subb
bound
ja
xor
ficomps
and
pop
leave
filds
loope
adc
sbb
mov
or
pop
jno
mov
sub
fnstsw
jg
mov
and
pushf
mov
mov
shll
scas
lods
mov
lods
sub
jne
mov
shlb
out
jmp
hlt
call
cmpsl
je
test
testb
sbb
cwtl
outsb
xor
mov
es
push
push
stos
mov
push
add
cmp
and
push
xchg
gs
loopne
mov
cmp
push
stc
add
lods
adcl
outsl
xchg
mov
fldcw
loopne
mov
ret
das
dec
or
outsb
arpl
mov
push
mov
inc
push
test
adc
xchg
into
lcall
sbb
nop
insl
test
push
push
popa
mov
fimull
jge
imul
popf
adc
scas
mov
icebp
lret
pop
loope
xor
test
and
and
pop
mov
dec
mov
cld
mov
mov
mov
fbld
xchg
int
jp
ret
cmp
shrl
das
imul
popa
xchg
jo
cmpsl
in
out
cmpsb
mov
sbb
mov
pop
jb
jne
xchg
int
jle
or
pop
ror
jbe
test
in
adc
enter
cmp
fnstcw
mov
cmp
mov
sbb
push
cmp
call
and
insl
jns
xchg
pop
add
test
pop
lods
in
or
push
jp
cld
xchg
adc
loope
les
jbe
or
out
or
xor
xchg
cmpsb
in
adc
adc
push
sbb
mov
xor
and
das
mov
fmulp
jge
fsubrl
rorl
push
aam
insl
cmp
ret
stc
pop
pop
out
das
shll
mov
outsl
shrl
dec
xlat
push
bound
push
fwait
jp
cmp
push
xor
dec
jecxz
adc
int
nop
lods
jge
xor
ljmp
shll
mov
pop
cmpsl
pop
mov
sbb
movsb
aaa
pop
jo
push
push
dec
cmp
out
xor
loop
push
add
jnp
push
push
aad
popf
jnp
adc
xchg
add
jbe
dec
out
insl
outsl
aad
add
lcall
jg
mov
fstps
fdivl
iret
sbb
adc
lds
sarl
fcmovnbe
sbb
mov
movsl
shl
fcmovnb
and
mov
xor
mov
fbld
lods
lret
mov
jecxz
mov
push
repz
jo
xor
or
add
cmp
push
adc
dec
rcrb
jmp
movsb
adc
sbb
mov
inc
jmp
pop
xor
sub
dec
mov
xchg
ror
leave
out
xor
cs
xor
mov
push
push
fstl
xor
je
mov
fnstcw
ja
jbe
jbe
cwtl
mov
and
mov
mov
in
jo
arpl
loop
cmp
lds
je
data16
dec
mov
inc
jmp
pop
adc
sub
stc
fildl
in
sub
or
sbb
js
loop
xor
cmp
mov
xchg
imul
shr
inc
loopne
pop
pop
call
std
shll
imul
cli
cmc
jae
dec
shll
jmp
daa
out
mov
pop
ljmp
testb
shl
icebp
cwtl
adc
insl
push
lea
mov
mov
xor
out
shrl
aas
lds
inc
out
add
or
in
adc
pop
inc
aam
xor
cmc
out
imul
out
lret
ds
inc
adc
jnp
sub
lock
imul
jno
xor
mov
fstpt
push
jmp
adc
fisttps
xchg
dec
test
pop
push
rclb
mov
pusha
sbb
daa
les
les
xchg
xchg
xor
push
and
shr
cmp
push
add
cmp
std
fiaddl
ss
addl
pop
mov
inc
jne
outsl
xor
pop
jne
stos
and
add
push
nop
mov
ror
pop
and
pop
jne
or
pop
cmp
add
mov
mov
outsb
sbb
andl
dec
adc
js
push
adc
adc
ljmp
sub
mov
mov
cld
in
and
sti
and
out
out
negb
xchg
adc
jne
ljmp
xchg
push
aas
jno
sub
mov
test
pusha
adc
mov
cwtl
and
repz
bound
leave
js
adc
test
lcall
cmp
pop
mov
dec
xor
out
gs
xchg
sarb
andb
out
mov
mov
dec
pop
xchg
pop
dec
xchg
in
jle
ret
int3
push
sub
nop
int3
int3
ja
jmp
adc
loopne
test
cmc
addr16
fldl
ja
mov
dec
pop
int3
push
jp
mov
cltd
cltd
les
xchg
dec
jb
rorb
dec
push
adc
pop
mov
inc
rclb
fidivrl
iret
lret
xlat
and
sbb
jb
lods
push
pop
cmp
pop
cmp
stos
dec
in
pop
lods
fsubs
fimull
xor
fcompl
sahf
jbe,pt
sbb
icebp
mov
iret
sbbb
push
scas
add
jmp
dec
xchg
scas
rol
scas
icebp
in
sbb
lahf
push
daa
dec
sti
sub
or
icebp
jns
adc
lahf
stos
shll
iret
add
movsl
jge
ret
lahf
adc
ljmp
insb
lods
je
xchg
addb
push
cmc
popf
stos
or
mov
pop
jb
mov
insl
cli
pop
mov
aam
mov
mov
lret
imul
dec
inc
dec
fst
scas
orl
test
jno
lock
int3
popf
mov
mov
xchg
enter
sbb
cmp
jo
cmp
xchg
call
std
mov
movl
icebp
cltd
and
shr
mov
dec
mov
sarl
les
nop
pushf
lret
scas
and
aad
mov
clc
and
in
lret
jp
pop
cmp
pusha
jnp
pop
repnz
mov
sub
fbstp
insb
adc
push
ljmp
fwait
scas
out
push
dec
ficompl
data16
push
mov
je
cs
mov
adc
test
push
push
adc
cmc
cs
and
or
add
repnz
mov
mov
call
pop
dec
roll
fistpll
je
fcmovnbe
push
adc
bound
je
jo
ret
mov
adc
shrb
leave
push
push
out
es
gs
inc
sbb
lahf
sub
cld
jne
enter
pusha
push
mov
popf
fildl
ret
inc
push
dec
add
mov
aas
lahf
movsl
lods
mov
and
in
data16
jmp
mov
lds
scas
sub
shl
and
cltd
mov
sub
pop
xchg
imul
sub
into
xchg
pop
and
mov
xor
jne
cmpb
mov
jge
mov
jle
loopne
push
std
gs
sub
outsb
arpl
adc
add
adc
push
cmc
cld
stc
cld
icebp
sub
lock
test
cmp
cmp
shl
mov
mov
mov
mov
daa
dec
adc
push
pop
sub
std
mov
test
cmpsl
subl
int
mov
je
push
cmp
es
sbb
je
xchg
jg
orl
adc
stos
dec
stos
push
fisubrl
or
int3
and
arpl
jge
clc
iret
fildl
mov
incl
push
loope
xchg
push
cli
jl
mov
call
xor
xchg
push
insl
gs
sbb
jmp
pop
add
hlt
cmp
sti
int
loope
inc
pop
inc
add
mov
push
test
or
scas
faddl
fsubp
lret
mov
pushf
sbb
jecxz
fdivl
pop
bt
outsl
cmc
sub
lcall
cmpsl
fnsave
and
xchg
movsb
jno
outsl
mov
sub
test
pop
add
push
insl
ja
and
xor
shll
outsb
fildll
popa
sbb
pavgw
aad
icebp
mov
scas
or
cld
mov
icebp
repnz
fs
inc
adc
mov
enter
pop
xchg
xchg
xor
popf
sub
fdivr
pop
sbb
push
fadd
push
jns
jmp
call
cwtl
cmp
push
jno
jnp
test
ja
adc
adc
dec
and
out
or
fldl
cmc
inc
lods
out
orb
cmp
daa
shrb
xchg
jb
shr
xchg
adc
ljmp
xchg
sarb
xchg
cmp
out
jp
outsl
das
sub
addr16
or
lea
pusha
adc
inc
pop
jge
ret
xor
inc
cmpsb
js
xchg
sbb
xor
out
dec
xchg
xchg
lods
repnz
aaa
xor
out
fstps
mov
rcr
xchg
mov
mov
cwtl
sub
scas
loop
loop
scas
xor
sbbb
popa
adc
pushf
mov
lret
cld
add
mov
mov
and
test
jg
ftst
enter
aaa
cmp
mov
out
jp
mov
pop
dec
lods
mov
xchg
lret
mov
hlt
call
cs
or
jbe
push
in
xlat
daa
dec
cld
mov
and
int3
icebp
sub
inc
enter
addb
cmpsl
mov
mov
cmp
shl
das
mov
icebp
popf
inc
cmp
repz
stos
dec
jecxz
shll
jl
xchg
push
aaa
std
cwtl
mov
sbb
pop
imul
and
out
xorb
and
jno
and
mov
mov
das
mov
mov
xchg
pop
sbb
negb
daa
inc
into
cli
loopne
dec
xchg
fmull
xchg
aaa
xchg
cmp
pop
ret
mov
pop
cld
fstpl
push
xchg
andl
add
and
daa
and
call
and
sbb
dec
cli
nop
mov
fsts
ret
ja
sbb
mov
inc
cmp
scas
lods
jne
in
jecxz
mov
nop
inc
or
add
cmp
add
stos
mov
loope
xor
imul
mov
ret
adc
scas
loopew
insl
jno
inc
mov
jg
shrb
mov
inc
cmc
adc
popf
sbb
movsl
jns
ja
movsb
add
sbb
mov
inc
out
pop
inc
js
mov
and
rcrb
sbb
daa
and
xor
mov
scas
out
in
pop
ss
dec
int
das
pop
pop
add
rorb
out
xor
test
mov
out
push
mov
pop
push
ret
dec
push
sbb
cmp
imul
xchg
mov
mov
adc
inc
pusha
mov
cwtl
pop
lea
mov
lds
mov
cld
iret
pop
jl
cmp
int3
cmp
lock
je
fidivs
rorl
arpl
add
inc
ja
aad
fsubs
or
dec
cmc
and
popf
in
leave
scas
pusha
scas
push
xor
xchg
rcl
xchg
imul
add
xchg
fiaddl
pushf
xchg
fimull
jbe
add
test
lods
inc
push
loop
or
cmp
sarb
mov
test
pop
mov
mov
cmpsl
mov
push
test
subb
adc
xor
adc
pop
sub
aaa
loope
mov
fsqrt
push
push
stos
push
mov
outsb
lcall
popa
sbb
jp
hlt
xor
shrl
leave
cmp
fucomip
xlat
leave
ljmp
xchg
arpl
ret
xor
cwtl
pop
add
jmp
cmp
js
pop
push
add
lcall
in
cmp
pop
pop
or
mov
mov
push
sub
dec
lock
jno
out
push
xlat
cmp
inc
cmc
xchg
addb
or
leave
xchg
xchg
out
mov
int3
lock
icebp
adc
fwait
popf
jle
sbb
test
inc
add
inc
inc
and
fldcw
int3
xchg
cmp
outsb
je
xor
loop
sbb
das
push
and
lret
lea
and
and
imul
jg
and
cmpsl
out
pop
cmp
sbbb
rcrl
sbb
and
jbe
xchg
add
add
xor
dec
adc
ss
leave
cs
sbb
adc
scas
mov
iret
mov
inc
out
or
daa
je
mov
mov
pusha
js
lahf
aas
outsb
and
mov
sarl
in
sahf
mov
stos
and
pop
es
sbb
adc
loop
nop
test
adc
xchg
or
cmp
lret
dec
adc
mov
fsub
scas
jp
std
mov
push
cmpsl
and
pop
pop
pop
lea
lahf
sahf
int
fiaddl
xchg
pop
pop
xor
mov
jecxz
and
in
data16
cmpsb
jnp
adc
rcrl
xor
or
push
clc
shrl
out
inc
dec
push
push
inc
das
mov
fucom
mov
mov
push
add
repz
xor
and
or
xchg
in
sti
fdivr
jns
testl
js
mov
sahf
xor
mov
addb
mov
mov
sarb
xchg
popf
rcrb
xor
push
jg
or
mov
rorl
add
fnsave
je
or
lea
mov
pop
inc
mov
outsb
mov
jmp
push
push
jne
jge
idivl
jno
cmp
pop
and
xchg
repnz
xchg
or
or
xor
cmp
ret
cmp
mov
sub
jg
outsl
or
je
pusha
aad
pop
dec
pop
sub
cmp
shrb
inc
jnp
push
jp
inc
cmp
movsb
mov
hlt
jg
lods
arpl
inc
scas
call
mov
test
or
jbe
adc
loopne
mov
xor
mov
xchg
pop
daa
xchg
test
lods
adc
add
xor
xlat
push
dec
das
int3
insl
nop
out
mov
cmp
pop
sbb
adc
mov
iret
pop
or
imul
adc
mov
ret
xchg
std
push
shlb
mov
add
ret
and
cmpsl
popa
jl
lds
xchg
adc
in
add
stos
add
daa
ret
scas
dec
test
cmp
mov
and
insl
push
dec
mov
jb
ljmp
shl
arpl
adc
repz
push
aam
into
mov
pop
mov
xlat
ret
add
stos
inc
insb
cltd
mov
fcompl
push
and
roll
in
dec
nop
sbb
dec
int
test
cmp
popf
pushf
inc
addr16
mov
push
push
lea
push
or
push
das
sti
lret
insb
dec
stos
outsl
sub
pop
loopne
inc
insl
mov
mov
sarb
mov
mov
das
push
pushf
cmp
or
ja
and
cs
add
adc
inc
push
shlb
mov
arpl
xor
bound
ret
push
aas
out
push
and
faddl
dec
stc
inc
pusha
into
das
cld
cmp
std
fdivl
iret
in
sbb
rolb
mov
push
aam
xchg
fstl
adc
sub
xchg
int
and
jg
lcall
ds
xchg
mov
shlb
adc
jl
sti
or
or
adc
sbb
popa
rolb
mov
pushf
push
adc
sub
loopne
je
movb
rcrl
sub
in
repnz
xchg
cmp
lods
loop
add
adc
fsubp
test
mov
sbb
jns
sbb
sub
push
clc
sbb
ja
movsb
inc
push
pop
or
daa
lret
jns
cmp
adc
jp
mov
pop
push
inc
sub
pop
in
cld
xchg
and
push
and
repz
out
or
fsubp
inc
iret
out
lods
sbb
pusha
xor
fs
nop
dec
fdivr
pop
add
mov
add
push
cs
outsb
push
outsl
std
pop
addr16
and
popa
jno
in
cli
out
pop
divb
cmp
shlb
test
add
ljmp
add
iret
shlb
fwait
jmp
inc
and
movsl
adc
jmp
sti
sahf
jg
fsubrl
lret
mull
mov
clc
jge
aaa
inc
xchg
push
std
insl
pop
mov
push
stos
xor
pushl
push
adc
pop
imul
or
xor
sub
inc
mov
out
cli
sbb
test
mov
push
cltd
pop
in
or
cmp
mov
mov
popf
leave
add
mov
hlt
stc
jbe
bound
push
adcb
test
stc
push
data16
and
xor
xor
sbb
jp
jbe
mov
inc
xchg
mov
es
xor
add
cmpsb
or
fsubrl
int
imul
inc
icebp
rcl
cmp
push
mov
or
fbstp
inc
jns
push
or
sbbb
pusha
jne
add
jmp
lds
cmp
out
mov
out
fnsave
pop
cltd
mov
shl
sbb
out
mov
cltd
sahf
dec
cli
lods
dec
cmc
push
filds
stos
lods
xor
decb
jbe
shl
inc
out
mov
lret
movsb
fcom
shlb
xor
adc
sbb
cltd
dec
push
cs
pop
xchg
mov
arpl
cmpsl
scas
and
test
push
sbbl
fiadds
inc
mov
xor
test
les
push
and
dec
daa
pop
addb
fisubl
jg
fimull
cmp
imul
loop
pop
sub
lods
negl
pusha
repz
jg
or
cwtl
data16
lds
imul
addb
and
add
nop
mov
mov
cmp
cltd
fisttpl
rcl
insb
and
jl
imul
fisubs
xor
loope
push
das
pusha
jmp
push
mov
or
ret
mov
mov
push
push
and
xchg
lcall
and
std
sbb
jno
mov
mov
or
negb
xchg
pop
nop
adc
pusha
pushf
ret
adc
cwtl
vpmaddwd
shll
dec
fsave
xchg
cmpsb
inc
leave
sub
mov
fbld
out
ds
dec
dec
out
xchg
push
pop
push
loope
xchg
std
loopne
or
sub
in
out
scas
lret
scas
orl
hlt
or
jp
jecxz
clc
cmpsl
mov
cmpsl
aaa
fsubp
inc
pop
sub
std
enter
aaa
add
data16
scas
or
mov
pop
and
push
push
andl
lds
ds
ret
xchg
insb
rclb
cli
xor
cld
pusha
in
stos
cmpsb
push
sbb
sbb
mov
jp
xchg
int
jb
dec
cmpsl
test
xchg
in
mov
add
les
mov
push
out
test
cmpsb
pop
lock
popa
in
int
xor
push
push
jmp
sbb
imul
and
jb
push
mov
sbb
scas
xlat
sti
ret
rorl
enter
pop
daa
out
mov
dec
cmp
cmp
dec
sub
movsl
movsl
xchg
ss
cmp
xchg
cmp
sbb
mov
outsl
iret
fstps
cli
add
cmp
xchg
pop
xor
cmp
or
inc
loope
stos
int3
mov
xor
pop
data16
sbb
xlat
xchg
sahf
mov
cmc
test
sub
and
xor
jp
push
sub
dec
pop
adc
sti
sbb
insl
xor
fdivrp
sbb
push
pop
cmp
pop
add
scas
imul
sub
mov
sarl
pop
cmpsb
push
addb
stos
test
or
stos
mov
sbb
pop
xor
mov
sbb
dec
popa
mov
sbb
jle
mov
loop
jnp
mov
inc
pop
jns
movsl
pop
mov
mov
nop
leave
mov
cld
push
insb
fisubl
inc
dec
aam
loope
xchg
not
je
sub
pop
xor
arpl
adc
and
cmp
and
sub
or
sbb
inc
mov
rcll
sub
sbb
mov
setl
int
pushl
dec
scas
or
lods
hlt
fstp
in
add
and
mov
dec
daa
cmovb
dec
pushf
jle
mov
and
dec
lret
mov
pop
subb
adc
mov
add
fucomp
movsl
and
aaa
and
cld
xor
cmpb
js
push
into
arpl
sub
dec
shll
mov
jle
xor
in
jno
xor
xor
sahf
mov
mov
out
mov
lea
ds
dec
xchg
jbe
mov
insl
xor
std
jb
push
add
ret
inc
xlat
and
int
dec
and
fildll
scas
mov
xchg
adc
pop
clc
cmp
ret
jne
stos
sub
or
jne
ljmp
nop
cmp
enter
scas
into
inc
int3
int3
es
sti
stos
xchg
pushf
rcll
outsb
addb
cmp
enter
push
scas
dec
jns
mov
add
loop
xchg
jns
mov
xchg
sub
jns
mov
dec
add
out
and
cli
movsl
iret
mov
icebp
push
movsl
sarb
adcb
jae
push
jno
dec
pop
mov
jae
mov
rorl
mov
es
ds
push
cld
pop
dec
orb
scas
dec
adc
mov
out
inc
test
jbe
sbb
add
and
lods
imul
cltd
xchg
in
mov
mov
loop
fwait
push
add
push
push
and
dec
nop
jno
push
mov
pop
in
mov
jnp
mov
scas
dec
shll
sti
enter
leave
cmp
imul
in
push
inc
sbb
orl
add
iret
or
xor
cwtl
pop
aaa
jb
and
xlat
and
loop
jge
ja
cltd
cmpsb
adc
and
pop
aad
js
scas
cs
or
sbb
push
pop
add
jle
pop
addb
sbb
cmp
fcmove
ljmp
pop
insl
fs
and
mov
scas
mov
mov
xchg
mov
fnstsw
jmp
repnz
sub
imul
xchg
push
jmp
push
and
xchg
sti
push
lock
add
std
bsf
mov
mov
dec
mov
inc
mull
xor
rol
test
fidivrs
mov
sub
outsl
dec
mov
pop
mov
xchg
xchg
mov
int
jge
jl
test
ljmp
and
xor
mov
cmpsb
arpl
dec
das
or
fdivl
out
stos
sub
dec
push
or
jge
test
push
mov
cmp
adc
out
mov
sbb
enter
scas
aaa
xor
dec
into
lea
fs
je
int3
pop
cmpsb
movsb
and
push
stc
push
sbb
mov
mov
add
ljmp
ret
inc
scas
sarl
ds
mov
ljmp
dec
dec
mov
push
pop
pop
shlb
aam
repz
xor
je
movsl
das
mov
push
bound
in
out
inc
inc
inc
sahf
sbb
ffree
sbb
sub
pop
pop
jb
cltd
dec
or
or
mov
adc
lods
hlt
test
sub
popf
sbb
dec
push
cmp
xchg
sarb
stos
repz
pop
aam
sbb
out
xchg
dec
inc
add
hlt
mov
jb
cmp
int
push
shll
lea
pushf
adc
mov
aas
cli
mov
shl
test
dec
sbb
cwtl
shll
lret
jns
sbb
loopne
cltd
popl
push
push
jae
xlat
xchg
leave
and
fistl
cmp
rclb
xor
mov
dec
mov
loop
mov
cld
mov
int3
popa
fsubrp
cmc
lret
adc
insb
and
pop
popa
cmpsb
rcll
mov
hlt
mov
inc
test
xchg
iret
fistpl
and
outsl
mov
fwait
dec
cld
push
pusha
and
and
loopne
stc
movsl
cmp
fldenv
aam
loope
lcall
push
das
prefetch
or
jmp
push
xor
scas
loope
bound
fmuls
and
mov
xchg
aad
adc
in
adc
stc
push
mov
xchg
repnz
pop
jns
push
sub
test
enter
aam
inc
xor
lahf
out
push
scas
fistl
ret
pop
sub
pop
cmp
popa
pop
insb
andb
outsb
cmpsl
out
ret
jl
rorl
or
dec
fs
ror
movl
outsb
mov
jns
sub
add
dec
lods
fistpl
shlb
or
xor
xchg
jno
or
outsl
push
cmp
fwait
ljmp
in
cmpsb
and
movsl
or
mov
rorl
xor
push
xor
lods
cld
xchg
mov
jmp
outsl
xor
lea
jg
mov
loopne
andb
loope
lods
sub
enter
sub
mov
std
daa
cmpsb
adc
or
fldcw
scas
inc
addb
lret
dec
adc
jb
mov
or
inc
xor
fyl2xp1
xchg
cmpsb
leave
lods
sti
cmp
xchg
rol
xor
sbb
std
inc
clc
arpl
mov
ret
add
and
adc
stc
xor
ficoml
ljmp
inc
aas
outsl
inc
das
push
inc
cmp
les
sbb
lods
xchg
or
or
inc
out
mov
fst
stc
mov
push
xor
ljmp
ficomps
mov
idivl
mov
cwtl
cwtl
add
sbb
mov
enter
mov
dec
mov
pop
add
stos
rol
pop
sub
stos
inc
stos
das
sbbb
lds
aas
xor
test
pushf
add
lods
xchg
movsb
cmp
in
lret
pop
jmp
insb
dec
push
mov
and
iret
cmp
shll
aam
notl
arpl
arpl
in
xor
inc
testb
cmp
jne
mov
xorb
pop
mov
fnstenv
adc
fnstcw
pushf
fcmovbe
leave
and
jo
cmc
scas
inc
repnz
push
dec
icebp
and
xlat
and
sub
push
jo
outsb
or
xlat
int3
andb
xchg
dec
ja
pop
sbb
cmc
mov
mov
push
pop
jno
cmpsl
fldt
pop
icebp
dec
test
repz
sub
and
add
mov
pop
aas
push
scas
push
cmp
mov
dec
dec
or
cmp
popa
add
pop
pushf
arpl
xor
cmp
fmuls
das
test
xchg
cmp
xorl
adc
sahf
mov
lahf
mov
pop
dec
bound
insb
add
fsubrs
mov
daa
cs
dec
mov
adc
mov
jg
pop
pop
cmp
sub
xor
adc
ljmp
add
rcll
roll
into
cmp
xor
push
js
xchg
scas
aas
sub
push
aaa
or
flds
cwtl
dec
shl
sarb
int
jmp
popf
stc
dec
mov
inc
cld
jnp
pop
jne
mov
xchg
xor
mov
push
adc
pop
out
popf
push
push
or
xor
in
xor
xor
es
cwtl
andl
mov
xor
xchg
sub
icebp
popf
push
add
movsb
push
imul
shr
bound
int3
dec
unpcklps
inc
and
stos
mov
and
add
add
sbb
push
das
mov
stos
adc
leave
fcoml
jge
push
and
pop
inc
jne
in
inc
jb
int3
imulb
in
adc
cmp
mov
jmp
mov
outsb
inc
in
sub
inc
rol
call
iret
nop
andb
xchg
insb
fcomps
push
idivb
je
outsl
or
test
dec
add
mov
movsb
adc
dec
push
mov
xchg
test
sub
roll
mov
decl
adc
test
fldcw
dec
cwtl
mov
xchg
fnstcw
pop
ja
mov
or
sub
jge
lds
sbb
or
outsb
sub
push
pop
cs
iret
or
push
or
xor
jge
stos
mov
and
and
pop
test
nop
mov
fistpll
xchg
mov
push
cmp
jb
jg
popf
adc
dec
fisubs
fwait
or
jmp
pop
addr16
js
dec
mov
adc
pop
cmp
xlat
cmp
pushf
dec
add
lock
lods
ljmp
psubw
shll
imul
add
lea
sub
jl
test
push
dec
bound
in
mov
popa
sar
mov
pushf
imul
fimull
stc
mov
fistpll
popf
fldenv
mov
enter
ljmp
sbb
cmp
xor
xor
stc
mov
rcrb
push
repz
mov
mov
adc
sbb
or
mov
lret
cmp
add
mov
fnsave
push
lret
jno
imull
in
inc
and
push
sub
xor
clc
outsl
adc
aas
mov
push
nop
mov
push
adc
fdivrl
aad
sub
mov
aam
adc
sbb
stos
sub
test
inc
sub
cs
mov
je
shll
xchg
jl
jbe
mov
sub
mov
js
dec
aam
stos
mov
lods
xchg
int
push
dec
mov
add
adc
xor
pop
jo
or
xor
xchg
scas
cmpsb
fcmovnbe
lods
pop
xor
vmovaps
add
daa
test
sbb
cmpsl
popa
loop
mov
shl
cmp
test
mov
aas
std
fistpl
pop
popf
jmp
cmp
cmp
add
lods
pushf
mov
ds
lahf
out
sub
ja
cld
stos
mov
and
add
sbb
jo
jp
sub
jno
and
call
xchg
push
scas
fidivrl
ja
pop
pop
xchg
push
add
mov
push
sbb
ja
mov
dec
negl
lds
inc
mov
pop
nop
mov
dec
xchg
ret
cmpsl
roll
fistpll
cmpsb
mov
in
mov
push
adc
sbb
std
stc
push
iret
xchg
popa
lcall
xor
ja
inc
adc
cmp
outsl
push
mov
and
outsl
inc
lret
or
push
loopne
mov
test
and
dec
jp
lcall
fdivrs
dec
xchg
xchg
push
mov
jns
mov
pop
les
aad
out
push
mov
rcrb
and
inc
pop
icebp
ja
jae
icebp
or
cmp
nop
sub
sbb
jb
aad
ljmp
and
mov
insl
pop
pusha
adc
adc
xchg
test
jp
cmp
xor
repz
push
or
popf
call
pop
movsl
jmp
int
lds
loop
in
adc
and
clc
loopne
inc
in
loopne
xchg
push
in
fldenv
sub
dec
mov
push
cmovle
ss
push
jge
xchg
repnz
cmpsb
mov
dec
sti
and
cmp
stos
adc
pop
dec
out
pop
es
in
cltd
pop
shrb
in
jge
and
and
ds
cmp
and
add
inc
lock
sbb
inc
push
negl
sub
movsl
xlat
jno
jbe
jp
aam
cmp
inc
addb
rolb
or
fistps
and
add
pop
int
cmp
lcall
mov
and
mov
mov
inc
sbb
sub
imul
xor
fisttpll
xchg
xor
mov
mov
xchg
test
test
arpl
rolb
xchg
cmpsl
add
push
push
in
aam
mov
or
xchg
pop
out
into
es
pop
imul
and
adc
or
roll
inc
aas
mov
jmp
cs
jne
lret
and
mov
int3
and
lcall
xchg
movhlps
daa
mov
jbe
jecxz
imul
jl
scas
dec
mov
popa
inc
push
xchg
popa
jo
lds
clc
insl
pop
xor
mov
pop
add
jne
sbb
inc
sbbb
and
inc
clc
sahf
adc
incl
or
pop
in
push
push
shrl
imul
pop
and
outsb
test
mov
add
xchg
movsb
pop
sbb
mov
fwait
pop
and
sub
adc
bound
je
jno
inc
dec
mov
lods
imul
ffreep
inc
sbb
stos
in
pusha
jno
jecxz
jbe
scas
push
scas
es
repz
xchg
test
sti
int3
jno
mov
mov
cli
in
aad
xchg
xor
adc
or
mov
jne
inc
dec
mov
test
xchg
shrl
mov
repz
into
fisubs
outsl
nop
lahf
mov
movsb
insb
adcl
insl
bnd
mov
das
imul
mov
clc
ss
dec
mov
xchg
inc
pop
jl
mov
dec
jmp
xchg
sub
adc
mov
lcall
push
xorl
cmp
add
lret
enter
insl
icebp
in
dec
les
jmp
mov
dec
dec
test
in
out
mov
das
fbstp
pextrw
inc
or
movsb
in
shll
test
mov
es
push
and
and
cmpsl
dec
xchg
dec
inc
sub
cltd
mov
cmp
out
imul
xchg
and
mov
add
inc
in
pop
bound
mov
cmpsl
repz
out
mov
mov
aaa
ficoml
xchg
rcrb
dec
push
sub
push
iret
pop
xor
mov
dec
jae
mov
xchg
pop
repz
mov
inc
pop
out
pop
jmp
in
or
sub
add
rcll
xor
inc
add
fwait
mov
jb
mov
and
aas
movb
cmp
cmp
sbb
push
in
imul
mov
lock
or
mov
test
mov
addl
xchg
xor
jge
jg
fcomps
fsubp
mov
call
jp
fmull
int3
xchg
cld
or
mov
pop
jecxz
repz
notb
in
cmc
rclb
nop
clc
pop
inc
rclb
sub
xchg
push
add
push
icebp
cli
lcall
pop
add
test
mov
arpl
aaa
pop
add
lret
arpl
jge
push
push
sti
int
ds
mov
push
jl
xchg
aad
inc
xchg
subb
sbb
xchg
fsubl
xor
lret
push
push
add
stc
xchg
mov
jl
xlat
inc
pop
mov
xor
dec
and
sub
fs
outsl
mov
out
xchg
lret
dec
popf
arpl
aas
xchg
mov
dec
ds
add
orb
and
mov
mov
xchg
or
pushf
loopne
fisubrl
dec
stc
cmc
or
push
add
daa
inc
or
aaa
popf
fsubp
xchg
or
clc
jno
popa
imul
std
leave
mov
mov
mov
mov
orl
mov
in
pusha
cmpsl
mov
das
lods
mov
sub
dec
fucom
inc
clc
mov
pop
jecxz
jg
movsl
xchg
cmpsl
jo
call
jne
add
jl
cmp
cld
mov
pop
call
stos
xchg
mov
mov
jae
sbb
and
repz
add
inc
in
cmp
xor
mov
mov
outsl
lret
lea
test
push
ret
sbb
in
jns
and
in
xlat
inc
lahf
stc
mov
push
mov
cmp
int
aas
jp
push
addr16
push
fwait
cmp
pop
fucomp
and
dec
fcoml
lods
pop
xor
mov
scas
fnstenv
and
fwait
mov
jae
nop
mov
lcall
mov
xchg
dec
sti
mov
rorb
int3
cmpsl
out
and
bound
push
fwait
cmp
imul
int
imul
fisttpll
mov
or
pushl
ds
xor
jl
and
pop
or
push
xchg
adc
int3
fisubl
xchg
icebp
mov
xchg
std
mov
jl
leave
sbb
xchg
dec
xchg
rorl
into
scas
or
lock
jecxz
sbb
jle
adc
les
inc
in
push
into
mov
idivb
mov
mov
loop
sbb
push
push
pop
jns
outsb
mov
xor
std
cmpsl
sbb
mov
cmc
nop
cmp
test
jg,pt
repz
adc
sub
sarb
scas
rol
or
cmp
aaa
or
jae
lods
mov
in
shlb
adc
and
mov
pop
mov
subb
or
mov
dec
jp
inc
sub
sbb
mov
cwtl
cwtl
call
xor
repz
int
imul
negl
xlat
pop
roll
pop
pop
ljmp
ret
into
bound
popa
pushf
adc
jge
push
inc
xorb
adc
xchg
jno
inc
mov
cmp
lahf
cmp
dec
and
jno
insl
inc
xor
push
icebp
push
sub
pop
scas
xchg
add
sub
jb
cwtl
pushf
inc
dec
lock
and
adc
hlt
and
divl
call
lods
imul
or
adc
lods
pop
adc
imul
imul
lcall
dec
int
out
outsb
enter
movsl
dec
push
in
push
inc
jmp
xchg
gs
sbb
or
into
xchg
mov
inc
jl
shl
add
fdivp
fstpl
nop
jmp
jnp
imul
sub
xchg
xchg
insb
scas
add
jge
gs
jp
lahf
pop
fdiv
dec
xor
sub
lods
test
adc
mov
bound
lods
dec
pop
push
or
pusha
leave
fcomi
jbe
jno
mov
xor
dec
sbb
aaa
jecxz
movsl
add
or
les
xchg
gs
cld
test
and
insb
xor
scas
iret
imul
sbb
cmpsl
out
mov
mov
call
push
inc
or
push
cmp
outsb
jle
mov
add
inc
loope
cmp
stos
cltd
mov
and
stos
jne
jle
inc
ds
iret
jo
jno
test
dec
inc
mov
int3
adc
mov
inc
subl
push
addr16
xchg
xor
mov
mov
sbb
pop
ljmp
or
outsl
insb
hlt
cmpsl
loop
pop
xchg
test
fwait
aad
push
mov
mov
mov
lock
inc
fisubs
fucomp
test
mov
inc
aas
dec
cmpsl
pop
push
mov
aas
ss
mov
sbb
in
push
jnp
mov
xlat
or
ret
aad
inc
test
push
dec
je
push
in
lock
popa
pushf
and
mov
loopne
cmp
xor
pop
int
inc
mov
push
roll
add
out
dec
jp
sti
xlat
fidivl
or
cmp
lcall
cmp
jns
pop
cli
push
mov
addl
adc
ds
mov
mov
jl
pop
scas
or
ds
pop
ja
into
out
into
ret
xlat
gs
jbe
pop
add
mov
and
xchg
ja
push
in
add
mov
fbld
das
xchg
sub
icebp
lock
in
mov
sahf
fs
cmp
pop
test
inc
hlt
mov
lds
dec
push
push
xchg
in
mov
add
addr16
adc
pop
cmp
mov
call
mov
fdivrs
outsl
inc
mov
test
add
leave
adc
enter
leave
adc
push
push
test
xchg
stc
push
pushf
jne
pop
iret
sub
and
int
rcrl
mov
cmp
aas
test
lock
xor
mov
int3
push
stc
push
push
mov
lds
add
add
jle
icebp
into
push
mov
cltd
ljmp
xor
sbbl
cltd
mov
je
add
popl
push
push
call
clc
in
insb
sub
je
ja
xor
test
cmp
imul
cmp
mov
jmp
and
sub
sub
push
sub
xchg
test
in
add
xor
sub
jg
loop
aas
ja
rcl
inc
cltd
or
repz
pushf
and
out
adc
xor
icebp
js
adc
adc
mov
dec
ljmp
ds
push
push
arpl
push
imul
pop
and
loope
inc
xor
adc
push
mov
les
cmp
push
cltd
aam
mov
sti
call
dec
sbb
and
addr16
jbe
mov
out
std
inc
repnz
add
out
sar
jle
das
xor
mov
cmp
sbb
in
leave
cmp
dec
push
imul
jns
insl
mov
dec
aad
mov
cli
pop
sub
icebp
or
mov
and
aas
cmpsb
leave
ja
in
jl
in
mov
in
dec
cli
bound
hlt
mov
bound
shlb
xchg
pop
mov
push
inc
aam
mov
nop
ja
push
ret
or
and
jmp
cmp
aaa
adc
add
imul
std
stc
out
loope
mov
mov
shl
or
mov
rcll
and
in
sub
push
sbb
pop
or
mov
in
inc
mov
iret
mov
stc
push
add
pusha
jg
adc
hlt
call
and
fidivrl
fnsave
mov
sahf
test
leave
outsl
pop
iret
add
shrb
mov
jmp
fbstp
push
lahf
sub
sub
mov
fwait
sub
sub
cltd
cld
adc
pop
add
or
pop
adc
add
jge
pop
ror
aad
dec
cmp
sub
int3
xor
and
out
cmpsl
sbb
inc
hlt
sub
add
and
cmp
mov
arpl
adc
lods
mov
xchg
fisubl
inc
mov
stc
push
mov
notl
xchg
arpl
call
in
lock
xchg
lahf
fcoml
js
lret
out
mov
inc
fistpl
adc
adc
add
lea
xchg
add
sbbb
or
add
jle
aad
icebp
and
push
in
jle
mov
mov
fadd
repz
jmp
push
adc
stos
insl
xor
or
sub
jbe
sub
cmpsb
mov
fcmovne
inc
xchg
imul
and
dec
fwait
addr16
pop
jge
or
incb
sti
dec
js
xchg
jns
pushaw
in
pop
pusha
and
pop
push
cltd
call
dec
mov
aad
pop
sbb
stc
sub
div
mov
mov
pop
nop
mov
cmpsb
les
out
dec
out
mov
xrelease
ficomps
rcll
cmpsb
lods
inc
and
in
outsb
mov
add
sbb
xor
and
fmuls
adc
mov
data16
push
adc
stc
inc
adcb
mov
jbe
cmp
sahf
sub
int
sbbl
jae
xor
xchg
sti
lea
ss
movl
push
std
adc
mov
jmp
push
test
cmpsb
jo
es
in
add
push
pop
shl
adc
pop
sub
imul
int3
aas
pop
xchg
mov
out
jg
jp
add
add
mov
jno
in
inc
dec
subl
mov
or
rcrl
loop
cmpsl
in
xor
push
sub
ljmp
cmp
pop
pop
cs
ss
fcomps
adc
repz
or
addr16
mov
lea
add
add
mov
out
pop
sbb
repz
outsb
push
out
jno
leave
cmp
pop
aad
mov
shl
mov
lods
sbb
xchg
popf
jg
lret
xor
repz
push
in
push
jo
lret
daa
ja
xor
imul
mov
jbe
jae
xchg
repnz
fstpt
xchg
andl
mov
test
fdiv
out
inc
push
push
xchg
std
fidivrs
xor
stos
mov
lahf
pop
lock
push
xor
and
inc
stc
mov
in
inc
sti
mov
add
imul
adc
imul
int3
or
not
iret
aam
and
mov
push
std
pop
sub
and
or
enter
xchg
imul
dec
add
js
scas
pop
sahf
add
ds
sbb
lret
xchg
stos
mov
inc
imul
loopne
inc
and
or
hlt
aad
xor
int
pop
repnz
dec
add
push
outsl
insb
mov
je
and
jnp
cmp
mov
icebp
loopne
pop
enter
pop
imulb
enter
loope
pop
xorb
cmp
pop
iret
or
cmp
les
or
test
movsb
mov
in
sub
shl
icebp
imul
cwtl
test
sub
push
mov
dec
xchg
rol
and
jo
in
sub
mov
cmp
lods
lcall
mov
andl
push
in
inc
gs
jns
sbb
pop
jle
xchg
cli
lret
addb
lret
xchg
sbb
js
mov
cs
cmc
or
leave
stos
in
fcoms
fdivrs
loopne
cld
push
adc
out
jle
bswap
iret
pop
enter
pop
inc
pop
or
cmp
aaa
xchg
movsb
lock
xor
jns
bound
mov
jbe
fs
cwtl
dec
pushf
sub
sub
jae
xchg
fs
in
mov
jne
ds
jnp
pop
fcmovnbe
push
sbb
xor
leave
adc
jp
cmp
call
jne
arpl
xchg
or
push
mov
leave
stc
inc
or
add
push
adc
pop
loopne
scas
mov
dec
adc
lds
in
mov
mov
out
cmp
cmp
imul
loope
sbb
movsb
cmp
stc
dec
rolb
dec
rcr
lcall
mov
cwtl
cmp
loope
rcll
call
sarl
push
rorb
pushf
adc
lods
testl
inc
pop
jnp
push
pop
jmp
mov
xor
lea
fdivrs
or
or
push
scas
xor
sbb
inc
into
out
andb
pop
gs
pop
leave
push
stc
ret
cmp
push
jl
jg
add
mov
decb
out
lret
ss
pop
push
lret
loope
push
pop
add
mov
aaa
mov
int
loope
aad
shlb
mov
xchg
arpl
xor
push
mov
or
lock
cmp
xchg
lahf
inc
imul
lods
dec
imul
popw
scas
gs
jns
leave
jno
adc
push
xor
test
gs
add
test
add
cmc
pusha
aad
xchg
data16
ljmp
loope
dec
push
fs
popa
lcall
sbb
arpl
or
rcl
mov
dec
push
push
test
and
sub
and
lcall
rorb
adc
pop
pushf
adc
or
or
int3
aas
cli
or
nop
enter
jne
lcall
or
cmpsl
xchg
and
xchg
sub
dec
lock
insb
mov
cmpsb
inc
out
mov
dec
lret
pop
xchg
ret
imul
cmp
sub
jmp
push
ffree
fidivl
in
mov
xchg
and
mov
ret
int
imul
lahf
push
shlb
mov
inc
adc
xor
inc
sub
pop
enter
sbb
adc
sar
sahf
loopne
mov
std
jmp
pop
std
pop
fstpl
inc
xor
sub
jge
shlb
sbb
sarl
push
jmp
cli
push
notl
xor
add
pop
addr16
mov
add
inc
xchg
sub
popf
jp
outsb
into
cltd
shrb
cli
ljmp
jae
push
out
add
fbstp
addl
sub
cs
rolb
pushl
dec
sti
mov
pop
jp
cli
js
mov
insb
jge
mov
pop
iret
in
lcall
test
sbb
dec
shl
orb
es
fcomps
aad
lgs
xchg
xchg
ret
out
shlb
add
inc
mov
mov
and
sbb
shlb
xrelease
pop
push
ret
shr
insb
cmpsl
xchg
hlt
push
push
fbld
and
test
das
test
sub
jb
fsubs
inc
pusha
pop
mov
iret
inc
imul
jg
movsb
imul
pop
and
rolb
sti
add
jnp
push
pusha
lods
push
lret
add
add
test
xchg
xchg
xor
inc
cmp
or
dec
ds
call
lret
jbe
xchg
shll
mov
xchg
scas
xor
fisubs
fstpt
pop
incb
ja
adc
scas
mov
js
push
mov
xor
sbb
leave
jl
inc
adc
dec
xor
push
cmpsb
aas
ja
or
fwait
cmp
mov
mov
dec
iret
and
negb
push
xchg
and
mov
dec
leave
mov
xchg
test
fdivrp
add
jecxz
push
jl
pop
mov
xchg
jmp
and
xlat
into
push
and
call
inc
mov
jb
in
dec
cmp
sub
test
shll
pop
ret
lret
dec
insl
or
adc
pop
cmp
pop
js
test
popf
fsts
std
and
mov
and
scas
cmpsb
int3
sub
daa
and
mov
jge
cmp
ficompl
push
std
mov
repz
mov
sbb
lea
jo
lret
fidivs
cltd
scas
push
mov
xor
es
sub
cmp
add
pop
pop
lahf
lret
or
xlat
mov
lods
setae
out
shrl
sbb
pop
pusha
mov
or
loopne
in
insl
insb
lea
pushf
bound
xchg
jg
adc
cmpb
mov
jbe
fcoms
test
cmp
mov
into
inc
add
cmp
cmp
outsl
xchg
xor
shlb
gs
add
idivl
mov
or
lea
data16
fmull
fisubrs
mov
lahf
mov
aaa
leave
or
pop
jb
fcompl
adc
cmp
add
insl
into
jl
inc
dec
cld
ret
fwait
jo
mov
nop
cmpsb
sub
icebp
add
xor
add
mov
push
pusha
dec
test
adc
cmp
inc
nop
cmp
sbb
sub
mov
faddp
js
clc
lahf
outsb
loopne
dec
out
push
ret
lret
push
int3
fstpt
mov
outsb
adc
lcall
sub
cmpsb
scas
and
decl
nop
cmp
repnz
clc
flds
jge
pop
jmp
mov
cmp
xor
imul
pop
bound
das
ret
xor
pop
in
fisttpl
inc
dec
mov
ljmp
insl
es
push
in
mov
push
and
mov
outsl
out
add
inc
adc
xchg
sbb
pop
lock
mov
in
sub
pop
sub
or
inc
clc
mov
fbstp
ja
dec
pop
popa
pop
xchg
bound
xor
nop
adc
insb
adc
fwait
out
addr16
inc
fcmovne
lcall
and
jno
les
js
jbe
xor
xor
xor
mov
or
push
push
lret
add
mov
xchg
mov
push
mov
lcall
jnp
cmpsb
ljmp
jns
mov
fisttps
inc
popa
inc
ds
and
add
pop
mov
dec
lcall
outsl
outsl
sti
mov
jns
icebp
inc
xorl
push
push
icebp
jo
mov
loopne
in
lret
add
das
and
mov
sbb
xor
push
mov
xchg
mov
sbb
mov
sbb
add
or
es
sbb
mov
sbb
ret
cmp
mov
jge
pop
fldenv
insb
mov
outsb
push
jns
test
push
push
pop
push
sbb
add
mov
in
pop
xchg
xlat
xchg
push
in
mov
int3
xchg
sbb
xchg
fadd
mov
iret
sarl
in
push
cmp
ret
out
in
out
or
inc
arpl
rcr
les
fstps
adc
mov
jl
or
mov
and
lock
fbld
xchg
clc
add
push
call
mov
mov
sbb
cmc
mov
rcll
dec
xchg
cmpsl
pop
js
sub
mov
mov
or
sub
mov
movsb
pop
aaa
or
icebp
or
sbb
ja
add
add
mov
lret
mov
jo
imul
aam
dec
or
xchg
ss
scas
loope
cwtl
das
stos
fisubrs
mov
lea
mov
pop
mov
dec
push
push
js
into
and
cwtl
push
aad
jg
add
and
dec
mov
js
mov
test
jae
xchg
arpl
scas
inc
sub
sbb
out
pop
jmp
push
ret
daa
xchg
in
xlat
int3
push
mov
outsl
xor
and
stc
sub
ret
ret
fidivrl
cmc
aad
frstpm(287
mov
mov
fwait
adc
movsl
push
jge
jg
lock
mov
xchg
dec
movsl
rorb
andb
adc
push
jg
insl
test
cmp
stos
int3
cmpb
sar
negl
mov
pop
adc
pop
into
adc
jmp
adc
sbb
mov
push
stc
popf
scas
inc
pop
stos
mov
das
leave
jbe
jmp
xor
outsl
aas
insb
fs
fsubs
mov
sbb
push
xchg
dec
mov
inc
clc
repnz
pop
inc
pop
mov
dec
je
repnz
mov
repnz
and
jge
dec
lea
fcmovb
jo
and
out
rolb
push
jp
push
icebp
inc
adc
ja
repz
inc
mov
and
rclb
insl
xchg
mov
pushl
xchg
sub
push
and
filds
notb
inc
ds
jmp
sbb
ret
mov
mov
sub
pusha
mov
je
xor
popa
push
movsl
inc
fwait
ja
cli
mov
push
dec
adc
pushf
add
cmp
icebp
fimull
lods
push
lahf
jge
cmp
mov
dec
pop
jl
inc
sub
pushf
sbb
push
sarb
leave
fwait
and
adc
jbe
std
push
loopne
mov
pop
test
mov
pop
pusha
mov
out
imul
dec
xor
and
std
fstpt
in
mov
dec
rcrl
repz
xor
sub
jecxz
mov
jmp
mov
push
cltd
jg
jns
xchg
push
insb
in
push
xchg
stos
sbbl
adcl
inc
adc
orb
fs
popa
jl
popf
dec
lods
cmc
add
sub
lcall
ficoms
jle
fwait
or
sbb
daa
jecxz
sti
adc
adc
movsl
ljmp
pop
push
div
cwtl
jmp
cld
xor
xchg
sub
cmpsl
ja
inc
or
out
xchg
imul
sub
loope
pop
pop
shrl
cmpsl
ret
push
xlat
into
test
jns
cs
xor
and
jp
scas
mov
mov
pop
push
scas
fs
inc
push
push
mov
adc
mov
pop
add
mov
ljmp
pop
shlb
cmp
inc
out
lods
cmpsl
add
repz
add
inc
inc
mov
xchg
pop
das
mov
push
cmova
jno
cmp
decb
scas
mov
test
and
rcl
ffree
bound
xor
stc
mov
ret
pop
and
cltd
cmp
and
xor
cmp
aam
js
cmp
cmpb
ds
sbbb
arpl
and
or
mov
cmpsl
mov
mov
leave
add
xchg
cld
add
cmpsl
nop
jl
les
fsubrl
push
fcomps
popf
gs
movsb
mov
call
call
aaa
xor
and
insl
leave
adc
xor
jo
lods
into
mov
jns
dec
or
ja
lock
popf
std
pop
dec
testl
lock
lret
sub
test
out
pop
arpl
mov
popa
int3
fists
jg
fcmovu
dec
jne
call
lock
mov
lret
or
movl
xchg
inc
flds
xchg
ret
push
daa
repnz
pusha
dec
jl
pop
jne
jecxz
mov
decb
adc
leave
mov
inc
inc
mov
mov
pop
xorb
push
xchg
add
push
jae
adc
mov
inc
xchg
test
or
pop
jl
jg
aaa
in
mov
mov
lea
jp
sbb
push
fistps
cs
fwait
jg
mov
in
dec
xchg
jno
xchg
adc
cmp
jns
or
add
vshufps
in
adc
dec
int3
mov
mov
aaa
lds
push
test
nop
push
or
ret
movsl
xlat
fwait
sbb
push
cmpsb
mov
push
addr16
mov
inc
fstpl
pop
icebp
in
loopne
add
cmp
lahf
shll
jo
cli
sbb
loope
adc
rcr
and
call
lods
mov
inc
test
out
test
lahf
push
in
mov
sbb
ret
clc
xchg
xor
xchg
aam
sahf
xchg
repnz
fnstcw
repnz
inc
sarl
sub
sbb
adc
mov
bound
loopne
mov
jle
mov
mull
shr
mov
jge
and
int
pop
dec
jno
inc
jno
add
rcll
mov
loope
lock
sbb
sbb
cwtl
sbb
inc
ficomps
fstpl
jnp
cwtl
or
lahf
movsb
push
loopne
sub
inc
mov
xchg
and
xchg
jo
leave
xor
pusha
cmpsb
cmp
lret
lock
mov
jo
out
int3
cmp
cmpsl
enter
inc
and
repnz
push
addr16
push
outsb
jne
mov
jmp
in
pop
pop
mov
lea
pusha
jne
and
mov
fwait
sbbb
leave
mov
jle
rolb
mov
inc
sub
push
out
mov
fs
mov
ds
je
sub
sbb
xchg
xchg
sub
nop
sub
jns
push
add
sar
in
pop
popa
ret
iret
pop
mov
movsb
in
lret
ret
sbb
adc
out
dec
push
test
xchg
jns
leave
xor
rcrb
adc
add
jns
inc
cmp
inc
sbb
daa
pop
fs
push
sub
rep
or
and
test
or
ja
and
out
push
xchg
daa
mov
mov
div
je
sbb
iret
fs
xchg
loop
or
iret
dec
push
xor
xchg
cmp
movsl
dec
sbb
add
pop
sahf
cli
add
pop
sbb
clc
xor
pusha
push
test
xchg
pop
in
stc
test
xorb
jne
lds
inc
pop
addl
nop
das
in
cmp
jbe
imul
pop
cmp
inc
outsb
jmp
cli
push
push
push
lods
ror
inc
aaa
fadds
test
mov
popa
push
nop
out
xor
unpckhps
notb
punpckhwd
icebp
and
add
call
pop
mov
enter
mov
idivl
std
push
shlb
jle
testl
cld
stos
pushf
cmp
jge
dec
aam
sub
push
hlt
mov
or
jp
mov
add
movsl
push
dec
jge
inc
push
mov
sti
and
cmc
aas
push
pop
aad
ror
xor
xchg
xor
pop
push
leave
dec
scas
adc
mov
mov
sbb
loop
dec
mov
push
addl
pop
xchg
adc
adc
add
inc
imul
mov
inc
pop
inc
ror
dec
xchg
dec
lds
std
or
mov
add
mov
sub
into
in
cld
mov
cmc
jne
rcrb
js
adc
popa
add
and
xchg
shlb
mov
mov
or
cmp
fstl
add
fcomip
mov
sub
outsl
cmp
adc
add
push
add
mov
mov
movsl
mov
push
inc
scas
test
jp
sahf
or
inc
xor
aam
pop
xchg
mov
xor
sbb
lods
fwait
mov
clc
inc
gs
xor
imul
mov
bound
movsl
ficomps
outsb
mov
aas
xor
pop
in
add
push
jle
adc
add
faddl
xchg
cwtl
mov
mov
lock
in
mov
push
inc
mov
movsb
popf
or
movsl
popl
push
repz
test
sbb
in
adc
xlat
outsl
add
icebp
dec
or
push
adc
mov
imul
mov
hlt
shrl
mov
adc
cmp
dec
lea
inc
add
leave
or
jae
jecxz
dec
adc
jne
addr16
loopne
rclb
pushf
add
insb
mov
jl
in
pop
sub
push
iret
lds
jb
jmp
fnstsw
pushl
fwait
jns
pop
add
test
mov
std
sbb
add
pop
sbb
or
push
xor
int3
rcll
movsl
mov
pop
movsb
push
sarl
jbe
and
outsl
gs
lds
jne
divl
push
sub
mov
inc
imul
jmp
rcl
or
mov
scas
pop
xchg
mov
dec
or
cmp
fcompl
fdivs
pop
push
adc
fcompl
lds
data16
leave
lahf
insb
fwait
scas
jbe
out
shll
mov
in
sbb
jp
dec
pop
sbb
jmp
cmp
insb
mov
or
mov
cmpsl
push
inc
leave
test
adc
mov
cmpl
push
pop
call
inc
in
js
subb
daa
ja
mov
push
adc
bound
test
mov
sub
lock
xor
scas
pop
sub
mov
jbe
adc
enter
pop
or
repnz
dec
out
inc
lcall
stos
and
stos
cmp
hlt
stos
sbb
int3
cmp
jo
jo
insl
mov
mov
mov
xchg
nop
outsb
mov
das
je
or
add
loop
imulb
clc
out
call
inc
fbstp
xor
xchg
pop
arpl
data16
push
sti
adc
mov
cmc
cmc
push
push
into
addb
aas
or
dec
into
pop
adc
xor
pushf
stos
mov
bnd
mov
ret
pop
subl
adc
hlt
and
sbb
sbb
mov
push
adc
movsb
jo
and
testl
add
or
sub
pop
daa
and
jae
mov
jae
cwtl
inc
jecxz
xchg
int3
xchg
jmp
push
cmp
add
jg
dec
cmp
jp
leave
pop
movsl
aam
or
dec
imul
xor
stos
mov
cli
adc
push
cli
inc
subl
mov
filds
and
pop
leave
jbe
xchg
lock
je
jle
inc
add
sub
adc
call
sahf
mov
mov
sub
and
mov
pop
fcomip
pop
test
lahf
or
fldcw
cmp
hlt
lea
shr
pop
sbb
addr16
nop
lds
testl
dec
mov
pop
dec
clc
mov
popf
pop
insl
mov
aaa
lock
pop
movsl
addr16
repz
stc
mov
movsb
shll
rorb
ss
insb
out
sbb
std
jg
pop
add
push
loope
adc
in
jmp
iret
add
inc
xchg
in
data16
jl
ss
pop
mov
or
les
repz
sub
enter
xchg
notl
xchg
and
das
movsl
pop
repz
mov
mov
mov
fwait
jmp
ljmp
ror
mov
cwtl
out
mov
cltd
adc
sub
mov
and
rorl
or
adc
and
cmpsb
cltd
addb
imull
cmpb
or
int
bound
sub
add
cwtl
les
jl
pop
aas
repnz
dec
xchg
idivl
sarb
pop
add
daa
push
add
push
testl
fimull
push
jle
imull
jae
movsb
test
gs
shlb
rcrb
add
jae
movl
pop
lock
or
inc
cmp
ret
fistpll
and
dec
jmp
mov
mov
subb
sbb
scas
cmc
xor
les
xchg
mov
jae
fwait
dec
out
jle
inc
xchg
bound
repnz
xor
cmp
cmpsl
adc
loopne
and
dec
add
inc
mov
xlat
inc
fs
adc
aam
imul
movsl
into
xlat
xor
enter
ret
lret
std
out
in
icebp
lds
fiaddl
xchg
mov
arpl
call
sbbl
imul
mov
stc
ss
stos
lret
mov
push
repz
jbe
cwtl
cmpsl
lea
int
ljmp
inc
inc
or
jns
or
and
popa
inc
subb
orb
icebp
shrl
enter
and
cwtl
iret
insb
addr16
stc
shl
jae
outsl
mov
outsb
mov
dec
jae
je,pt
xor
pusha
or
call
roll
jge
adc
outsl
insl
xor
stos
and
pop
mov
sarb
mov
repz
mov
iret
addr16
push
mov
mov
add
sub
rolb
popf
and
mov
repz
cmp
popf
sub
sbb
incl
rcr
pop
out
sbb
sbb
in
or
pop
dec
cmp
adc
xchg
add
sbb
mov
test
clc
psubb
paddq
fadd
sub
mov
test
mov
sbb
imul
inc
bound
loopne
dec
adc
outsl
sbb
mov
sti
outsb
jno
aaa
pop
adc
mov
in
insl
sbb
dec
int3
mov
addb
jb
pop
outsl
sbb
xor
fwait
adc
loop
icebp
mov
mov
mov
subl
lret
cmp
fmull
pushf
scas
cmp
mov
mov
aam
pusha
or
xor
cltd
imul
repnz
sub
push
jb,pn
jp
xlat
push
pop
xchg
inc
fs
jnp
sub
xor
shll
insb
or
in
and
add
jmp
dec
xor
repz
adc
stos
mov
cld
scas
lods
movsl
mov
inc
bound
cmc
lods
jp
mov
jmp
sbb
test
popf
outsl
mov
lcall
dec
fildl
shlb
xchg
adc
pop
mov
insb
lods
jl
add
lea
adc
mov
pop
cmp
jae
dec
xchg
ss
les
push
aaa
dec
mov
in
mov
mov
icebp
cmpsl
push
add
mov
icebp
push
clc
dec
fnsave
arpl
psubq
mov
push
jnp
cmp
cwtl
int3
xchg
or
mov
jno
fdivrs
inc
cmp
popa
inc
gs
int
imull
lods
cmpl
ret
inc
add
sarb
std
mov
popa
fcompl
dec
jns
or
adc
ss
xchg
pop
adc
or
sub
ljmp
sub
cmp
sbb
xchg
enter
nop
or
or
and
push
cmp
mov
inc
inc
nop
popf
dec
outsl
cltd
jb
mov
and
int
add
mov
adc
dec
lahf
ds
scas
test
hlt
orl
add
mov
lds
lret
xchg
into
mov
cld
pop
addr16
jnp
sub
in
pusha
jmp
dec
out
mov
sub
push
rolb
ud0
orl
dec
xchg
stos
cs
sub
in
xor
inc
xor
dec
les
pop
sbb
les
iret
sbb
test
pop
mov
stos
repnz
mov
cwtl
cmp
dec
xchg
push
inc
adc
xlat
call
mull
add
nop
hlt
sbbl
pop
fsubl
fisubl
sub
arpl
gs
xor
jge
push
lods
jne
loop
pushf
sub
lods
xchg
fisubrs
xlat
dec
mov
in
xlat
das
sub
out
aaa
pop
cmc
popa
or
repnz
sub
mov
jo
jns
es
or
sub
dec
lock
sbb
cld
orb
pusha
ret
jmp
fucomip
pop
mov
inc
into
in
mov
sbb
mov
mull
xchg
lret
dec
insl
dec
pop
mov
and
movlps
adc
mov
fwait
mov
fwait
fs
xor
cli
mov
xor
mov
stos
push
mov
xchg
pop
push
cmp
ret
push
xchg
shll
fs
fstp
mov
and
rcll
push
test
fsts
sbb
cmp
push
scas
jae
push
adc
insb
sbb
movsb
in
xor
xchg
icebp
adc
std
inc
movsb
adc
dec
test
ss
add
add
lcall
outsl
aas
and
or
test
pop
inc
pop
fdivrs
js
dec
loop
inc
sub
xchg
sti
arpl
inc
jo
and
lods
fists
bound
icebp
xor
test
pop
mov
fnstcw
in
push
inc
cmp
push
add
enter
out
fisubrl
fs
inc
xor
pop
mov
pop
ret
mov
ss
mov
jo
popf
mov
addr16
dec
out
ja
xchg
andl
rcll
je
cli
movsb
aam
aam
mov
push
push
jge
pop
bnd
movsb
pop
dec
loopne
sti
mov
pop
inc
dec
mov
arpl
inc
push
cwtl
outsl
shll
jp
xchg
sbb
notb
cmpb
popa
data16
out
pushf
loopne
into
data16
sbb
ljmp
pop
mov
adc
inc
xchg
jmp
repz
sbb
add
fsts
add
sahf
sbb
mov
cmpsl
sbb
dec
jnp
lea
rol
je
dec
sbb
test
dec
cmp
jae
lods
or
int3
test
push
or
fsubr
mov
sbb
mov
out
mov
daa
pusha
fnstsw
stos
sahf
ss
gs
jno
sahf
mov
inc
mov
in
sbb
sub
or
insl
fistl
adc
popa
adc
loopne
ret
and
fwait
test
sahf
in
andl
movsl
add
mov
cmpb
fadd
insl
lds
lcall
mov
fldl
aam
mov
movsb
dec
cltd
into
addr16
jns
jbe
movsl
vrsqrtss
push
out
or
arpl
and
jne
mov
mov
mov
andb
mov
mov
js
popa
sub
andl
iret
or
push
outsl
inc
daa
leave
adc
in
push
adc
mov
jb
adcb
sub
adc
mov
sahf
inc
std
ljmp
rcll
or
jl
inc
aad
inc
lock
in
test
jb
dec
push
in
pop
stc
add
lea
xchg
stos
jns
mov
aam
push
dec
push
inc
and
pop
call
out
jb
pop
sub
out
add
jns
mov
cmp
dec
aam
dec
lret
movsl
mov
lods
xchg
xor
sbb
push
fcoml
scas
mov
mov
and
jno
dec
sbb
cmp
xor
or
xor
mov
push
push
push
and
je
loope
mov
ret
ja
dec
aaa
fisttpl
out
fistpll
mov
bound
or
adc
fisubs
daa
je
addb
fwait
adc
mov
sub
shl
add
sbb
adc
and
das
cmp
aam
jmp
dec
add
sbb
mov
fldcw
sbb
adc
and
inc
rcrb
rclb
xor
je
test
add
es
call
mov
inc
rol
jecxz
cltd
clc
rcrb
xor
pop
mov
jle
mov
jb
aad
inc
in
js
push
leave
sarb
and
push
enter
inc
add
inc
popf
jg
xchg
lds
or
pop
repz
adc
xchg
aas
mov
popf
mov
loop
flds
push
jb
les
or
cli
add
push
inc
and
outsb
adc
cli
in
and
insl
or
rcll
movsb
or
dec
push
int
jmp
ret
inc
mov
loope
call
fs
lock
jbe
movsb
fimuls
inc
xchg
push
xor
imul
xchg
lock
outsb
jle
dec
aas
sbb
push
pop
and
add
add
bound
jns
mov
out
stos
add
jb
xchg
popa
jnp
and
cld
lods
or
pop
inc
xor
mov
xor
push
fwait
xchg
cmp
dec
inc
xor
std
fs
shrb
mov
inc
xor
mov
insb
dec
dec
mov
mov
mov
call
or
or
cltd
icebp
sbb
or
push
bound
sub
push
inc
mov
or
arpl
adc
aad
mov
roll
push
mov
hlt
xor
out
fsubr
fsubrl
inc
enter
sub
fdivp
ss
rorl
js
loope
pop
aad
ds
mov
push
mov
mov
sbb
lahf
mov
out
cmpsl
pop
ret
sub
scas
shl
adc
push
mov
cmpsb
cmp
fwait
adc
in
adc
call
xor
mov
rcl
add
jmp
push
out
push
outsb
mov
mov
movsb
dec
adcb
pusha
xor
push
push
data16
push
and
and
xor
jecxz
lahf
pop
jae
push
xor
adc
add
fidivl
xchg
andb
xor
sbb
mov
or
aad
xor
push
pop
dec
dec
inc
pop
adcl
pop
loope
mov
lret
xlat
enter
cmp
outsl
xor
cmp
les
test
aam
lret
lock
cmpsl
cmp
xor
stos
pop
mov
inc
inc
clc
or
mov
aaa
call
sub
xchg
pop
loopne
sbb
test
in
jbe
inc
mov
xchg
ret
test
test
push
xorl
jge
test
sbb
push
js
mov
sbb
or
mov
or
rcrl
sahf
cmp
and
xchg
test
sahf
mov
sahf
and
push
xor
iret
cmpsl
jmp
out
gs
cmpsb
sbb
inc
jnp
cmc
add
je
mov
and
mov
scas
sti
nop
push
and
inc
pop
mov
sarl
int3
mov
ds
mov
sbbl
ret
mov
jb
dec
dec
int3
sbb
cmp
aad
or
add
sbb
addr16
push
push
ficompl
cmp
dec
sub
jmp
or
cmp
outsb
js
and
add
fwait
add
ljmp
sub
data16
pop
mov
push
jne
jg
fbstp
lock
mov
cmp
sbb
xchg
or
aas
cmc
leave
xchg
gs
jge
adc
add
das
and
and
aad
ret
and
sub
clc
cwtl
fisttpl
pop
push
lret
jmp
popa
inc
testl
lcall
cmp
stos
jl
aas
popa
pusha
mov
loope
xor
insb
or
push
cli
xchg
inc
jl
icebp
pusha
pop
dec
or
ljmp
or
and
jp
in
add
imul
sbb
in
push
push
into
mov
cmp
sbb
imul
lret
maskmovq
imull
pop
or
test
sti
mov
stos
inc
inc
jbe
pop
or
jb
sbb
repnz
insl
popf
scas
cmp
das
sarl
jge
aam
aas
dec
sti
mov
dec
imul
sbb
sub
and
nop
pop
pop
jge
mov
clc
jl
fmul
cmp
nop
push
rcll
add
test
int3
movl
jbe
aaa
sub
sahf
pop
xor
sub
shr
and
loopne
pop
jl
sbb
icebp
outsl
xchg
insl
sub
sbb
inc
inc
push
shrl
out
pop
dec
cmc
dec
lahf
sbb
dec
jl
test
jb
test
push
imul
adc
or
lods
aaa
mov
mov
pop
cmp
iret
mov
lahf
fcmovne
mov
fbld
mov
lods
sbb
adc
nop
xchg
into
popf
stc
notb
ljmp
xchg
repz
daa
jo
dec
cmp
add
and
push
in
sbb
ret
xor
add
notb
dec
dec
jmp
add
sbb
jns
adc
icebp
mov
fists
jno
fnstenv
int3
repz
in
lds
sbb
jle
xchg
faddl
push
lods
push
rcrb
xchg
mov
lods
fs
repz
arpl
rcl
mov
aaa
dec
fcoms
or
dec
add
xor
jnp
pusha
das
push
cmp
xchg
adcb
mov
jae
lret
sbb
and
das
cmpsl
add
subb
cvttps2pi
add
jge
pop
rcrl
jl
add
fbstp
daa
sub
mov
mov
idivl
xchg
mov
sahf
dec
testb
sahf
inc
cmp
xor
mov
iret
das
xlat
lods
mov
cmp
in
inc
dec
subb
dec
fdivrl
jbe
adc
cmpsb
push
pop
gs
mov
sti
data16
ret
lret
adc
push
int
subb
sbbb
sbbb
hlt
std
jl
inc
adc
out
xchg
mulb
ss
scas
das
cmpsb
pop
sub
jecxz
inc
jb
add
mov
cmpsl
fisubrs
cmp
aaa
add
or
call
sbb
mov
cmpsb
subl
std
pop
arpl
insl
sbb
pop
sbb
mov
push
mov
dec
popa
aad
cs
jl
into
out
jmp
mov
test
arpl
jg
ffreep
sbbl
and
xchg
divl
mov
incl
cmp
mov
lds
cmpl
lock
pop
lret
fwait
scas
dec
mov
dec
pop
lea
fwait
shlb
mov
repz
ss
int3
in
pusha
push
cmp
push
jb
insl
outsb
cmc
sub
add
insb
and
test
pop
adc
pop
cmp
push
xchg
mov
pop
or
xchg
jg
sbb
sub
xor
mov
xlat
sub
push
and
cltd
pop
stc
sub
sub
and
movb
mov
idivb
add
int3
and
aas
pop
mov
andl
push
je
popf
push
adc
xchg
or
bound
ss
sub
cld
jle
lock
sub
in
xor
sbb
cmp
jo
push
daa
push
add
add
cmpl
sbb
mov
push
jae,pt
movsb
arpl
shrl
stos
sub
cmp
jle
fadds
aas
and
loope
dec
popa
and
jmp
mov
popf
imul
out
mov
inc
imul
pop
div
jl
adc
mov
idivb
call
xchg
or
cli
cmpsb
arpl
dec
subl
push
push
iret
cli
mov
outsb
into
aaa
lds
jge
mov
negb
cltd
cli
aaa
cmc
and
mov
xorl
push
inc
or
scas
cmpl
idiv
jge
sub
orb
xor
jae
sbb
ficoml
popa
mov
push
push
mov
out
stc
ljmp
je
shll
les
or
pop
in
mov
mov
gs
inc
jge
push
inc
xlat
jg
lcall
mov
xchg
fdiv
dec
dec
js
ret
stos
dec
mov
dec
cltd
fsubl
decb
in
sbb
pop
bound
and
push
mov
cmpb
xor
push
jmp
popa
mov
out
scas
fldl
xor
mov
mov
pop
push
cmpl
mov
dec
lahf
mov
sub
subb
xchg
cs
pop
dec
jno
into
cmpsl
inc
loope
decb
push
pop
out
out
stos
mov
cmp
mov
and
cmp
dec
add
roll
pop
in
clc
dec
lret
xor
mov
sub
popa
lcall
int3
test
test
push
cmc
pop
sub
pop
add
xor
dec
subl
lods
rorb
adc
aas
or
sub
inc
jb
shll
pop
pop
xor
cmpsl
aam
pop
cmp
repz
fstps
xchg
adc
jmp
cmpsl
scas
dec
pushf
mov
mov
int
mov
mov
imul
decl
lods
fwait
scas
mov
pop
gs
in
stos
pop
or
in
fnstcw
mov
sahf
scas
call
mov
and
xchg
cwtl
insl
dec
jae
pop
aam
and
push
outsl
int
xchg
and
inc
pop
mov
stc
rorl
fildl
daa
and
imul
jmp
pop
dec
in
clc
cmp
lds
mov
int
dec
cmc
in
mul
sub
iret
or
insl
mov
out
jp
push
pop
lods
jne
cmp
rcrl
hlt
and
mov
subl
sahf
lea
or
lea
fwait
jno
ss
fildll
pusha
push
mov
xlat
aaa
addl
xor
xchg
xchg
mov
rcr
ficoml
jge
cmp
sub
nop
adc
lock
pop
out
and
push
xlat
addr16
fs
sub
xor
aad
movsb
sub
sub
enter
rorb
ja
fwait
sbb
inc
or
ds
dec
sbb
pop
js
insb
fimuls
or
cltd
fdivrl
inc
roll
jle
outsb
ja
dec
add
js
or
jg
and
jno
lret
fidivrs
and
lds
pop
dec
jmp
mov
aaa
in
push
test
iret
jne
push
ss
pop
faddl
cld
mov
rorb
pop
flds
fwait
into
bound
into
pop
js
test
lods
dec
xchg
jle
mov
mov
in
xchg
sarl
gs
outsl
or
jb
jp
jle
mov
cmp
push
pop
out
insb
sub
xchg
xor
pop
pop
push
adc
shll
push
lret
rep
jecxz
lods
add
repz
testb
inc
pop
cmp
rcr
ret
or
push
mov
mov
sbb
ds
mov
ret
push
dec
stos
push
jne
xor
inc
gs
fnstcw
lds
mov
enter
dec
or
call
jg
jp
das
cld
push
js
cltd
and
sub
dec
and
aaa
xchg
fdivrs
nop
je
idivb
jge
mov
lds
or
daa
rorl
insl
xchg
mov
adc
lock
or
or
data16
loopne
dec
cmp
add
outsb
test
call
das
push
mov
cmpsl
cld
xchg
mov
mov
mov
jle
mov
and
vcmpss
mov
je
inc
lahf
leave
inc
sub
stos
mov
in
mov
adc
shll
fisubs
mov
lock
jo
cmp
lds
and
add
mov
dec
aas
mov
sub
repz
jb
mov
int3
mov
or
dec
mov
test
jge
loope
mov
testb
pop
cmpsl
out
adc
in
dec
daa
mov
jae
or
data16
dec
outsl
in
push
outsb
shlb
hlt
push
mov
loope
add
push
xor
in
movl
clc
inc
js
xchg
dec
lea
lods
lea
sbb
inc
xor
int
ds
mov
xlat
lret
pusha
pop
inc
xor
inc
cltd
les
push
int3
das
add
push
aas
inc
iret
arpl
and
loope
scas
lahf
jge
mov
jmp
daa
adc
xchg
and
call
jle
mov
fisttps
pop
sbb
fnop
push
mov
stos
jne
and
fadd
xchg
pop
cmp
mov
leave
inc
mov
pop
aam
lahf
sub
jb
test
add
adc
push
popa
pop
inc
lcall
je
addr16
pop
xor
cmc
jae
repnz
negl
inc
sbb
or
or
mov
aad
jl
xor
or
add
pop
lods
hlt
into
inc
inc
jnp
sub
and
adc
xchg
mov
add
stos
jmp
pop
test
nop
call
push
lret
pop
pop
sbb
and
mov
in
and
data16
xor
rclb
decb
push
in
xorl
imul
aas
adc
popf
cwtl
pushf
inc
jnp
je
in
scas
push
adc
and
push
cmp
mov
adc
bound
mov
out
outsl
test
pop
xchg
push
sub
cmp
aaa
jg
dec
std
add
aas
clc
clc
sub
lods
inc
inc
cltd
or
lock
dec
ret
sbb
inc
xchg
pop
xchg
rolb
push
mov
es
out
mov
fsubl
add
loopne
cmp
add
jo
pop
mov
xchg
je
mov
cltd
cmp
jmp
adc
aam
dec
dec
movsl
std
push
loopne
cmpsb
pop
or
jnp
or
jae
iret
lret
popf
fidivrs
test
adc
cmpsl
sbb
popf
add
pop
mov
xor
shrb
inc
lods
ljmp
sub
add
test
daa
je
cmp
popf
lret
sbb
leave
push
jne
xor
push
xor
loope
loope
mov
jmp
cmp
jno
xchg
mov
repnz
loop
mov
push
mov
mov
popa
cli
lods
imul
mov
push
jne
lea
sahf
cld
aas
sub
inc
mov
or
lret
mov
rcll
xchg
sbb
addb
lret
mov
mov
lea
adc
mov
daa
pop
les
in
pop
fmull
push
leave
adc
aam
mov
push
sti
jge
and
and
cmp
xorl
push
add
addl
xchg
int3
or
clc
xchg
pop
daa
jno
jp
data16
fldt
jb
iret
roll
int3
cmpsb
sub
mov
jno
or
sbb
pop
pop
pop
mov
insb
ficomps
bound
insl
pusha
cmp
adc
xchg
pop
js
scas
dec
inc
sub
ror
mov
notl
sub
sub
sub
xchg
popf
clc
and
shr
hlt
and
mov
and
cli
jae
jmp
ljmp
stos
and
rorb
mov
lods
orb
inc
sbb
lret
dec
insl
cwtl
leave
dec
div
mov
xor
test
adcl
call
xchg
js
push
mov
loop
jnp
mov
je
jnp
xchg
adc
test
aaa
call
lahf
call
je
idivl
ja
sahf
lock
push
ss
test
xorl
outsb
jb
adc
insb
mov
add
mov
adc
or
iret
loope
enter
mov
dec
fiadds
stos
sbb
scas
cmovbe
in
mov
nop
adc
and
push
and
sbb
add
jns
loopne
rorl
sub
jbe
dec
pop
mov
lds
hlt
sar
add
test
int
pop
inc
sub
sub
insl
xor
sbb
sbb
es
sub
roll
int
cmc
out
rcrb
addb
or
pop
mov
inc
pop
mov
or
sbb
das
loopne
and
out
and
sbb
jno
cmp
out
xchg
into
iret
inc
cs
mov
cmp
push
insb
cmp
fisubl
mov
ficoml
sub
es
jae
jge
fwait
dec
pop
push
inc
fstps
jb
jne
sub
ret
scas
inc
pop
rcrl
pop
pop
pushf
pop
lahf
cmp
aas
sahf
sbb
mov
add
jmp
add
xor
pop
dec
push
xor
cmpsb
xor
push
test
jno
or
mov
xchg
jecxz
xchg
sub
or
or
or
inc
sbb
add
xchg
cmc
arpl
xor
sub
popa
stos
pop
fldl2e
dec
mov
mov
daa
mov
cmpsl
hlt
dec
push
push
test
sub
out
enter
pop
fwait
mov
and
mov
inc
aam
icebp
pop
adc
ljmp
adc
ja
add
add
popa
add
xchg
test
add
and
insl
cmpsl
cmp
jb
add
add
cmc
shl
sahf
mov
fbld
movsl
push
outsb
sbb
jle
ds
dec
mov
aas
dec
mov
sbb
in
adc
xchg
pop
vmovntps
jl
iret
add
sar
hlt
push
sbb
mov
inc
mov
or
add
xchg
jo
mulb
sbbl
outsl
in
mov
testl
xor
xchg
lret
cmpb
inc
out
popa
fwait
mov
imul
fdivl
in
adc
pop
xchg
sub
outsb
sbb
xchg
popa
sbb
fsubrp
pop
jg
mov
xchg
mov
scas
mov
sub
dec
test
cmp
jae
mov
jge
je
stos
cli
inc
mov
pop
mov
stc
cmp
xchg
rcrb
shlb
les
dec
xchg
mov
ja
lret
sbb
or
sub
pop
fnsave
sbb
test
dec
lret
arpl
pop
and
mov
dec
xlat
lcall
inc
imul
push
stos
scas
outsl
push
hlt
pusha
rorb
xchg
fwait
push
add
mov
pop
push
jle
push
daa
je
xchg
jno
inc
cmpsl
in
lds
out
loop
ffreep
test
mov
cli
xor
mov
and
add
xchg
sti
out
mov
jecxz
push
sub
cmp
aaa
pusha
data16
xchg
pop
mov
mov
fbstp
xor
sub
pop
add
dec
push
fs
sbb
adc
and
aas
nop
mov
std
mov
inc
scas
inc
test
cs
stos
pop
add
xchg
xor
mov
adc
xlat
add
addl
inc
adc
aad
int3
xorl
test
jl
sahf
push
sub
jb
push
xor
push
lcall
cmp
xchg
scas
movsl
clc
or
lahf
addw
and
andl
rorb
cld
orl
int
xchg
sbb
insl
ja
and
testl
test
insl
pop
into
and
js
enter
fcmovnu
ja
outsl
addr16
add
loope
pop
push
outsb
add
addr16
add
arpl
mov
add
mov
pop
repnz
cmp
sbb
lds
xchg
mov
std
mov
add
int3
sbb
mov
jle
icebp
imul
jne
pop
sahf
mov
cmp
push
fisubrs
test
out
xchg
adc
fisttpll
add
scas
out
lret
orl
cmp
sar
pop
addr16
push
out
out
js
shlb
sbb
sub
jle
decl
fs
inc
loope
adcl
lahf
jg
sarl
nop
push
cli
and
fs
sub
shll
daa
mov
shrb
sbb
cmp
inc
lods
ss
cmpl
popf
or
roll
and
dec
add
adc
scas
cmp
imul
mov
testl
cmp
neg
and
popa
jmp
stc
das
push
cld
pop
cmc
repnz
add
and
jnp
push
cmp
sbb
cmp
shrl
mov
iret
sbb
jne
fdivrp
add
inc
addl
mov
mov
pop
pop
shll
andl
in
into
lahf
lea
or
pop
dec
inc
sub
mov
mov
ret
cwtl
sbb
or
out
test
add
ljmp
pop
push
jecxz
inc
into
popa
lcall
or
hlt
les
xor
mov
jmp
mov
mov
std
jmp
jno
in
pop
popf
or
cs
push
cltd
or
xlat
in
lods
push
inc
clc
push
fisubl
cmpl
jae
popf
stos
insb
sahf
icebp
xchg
insb
sub
je
cwtl
repnz
lock
dec
es
in
repnz
cwtl
xor
jbe
and
sub
stos
test
or
cmp
iret
testl
fidivrl
and
pop
rcrb
cmp
lea
addr16
icebp
or
ss
movsb
cmpb
xor
fcompl
push
adc
cmpsl
popa
sbb
jl
push
jecxz
push
movsb
inc
scas
sbb
les
adc
jo
lahf
pop
mov
in
dec
pop
mov
pop
mov
ret
xor
adc
xor
mov
shrl
jecxz
inc
cltd
cmp
xchg
into
xchg
in
es
pop
shll
xor
cmp
lea
test
cmpl
inc
or
jno
adc
sub
xchg
mov
push
nop
pusha
ror
mov
lcall
jae
pop
sbb
in
outsl
xor
sub
pusha
cld
pushl
idivl
in
mov
sti
pushl
mov
aaa
popa
je
add
jge
loopne
xchg
and
pop
imul
xor
in
lock
pop
repnz
mov
leave
loopne
push
leave
or
es
inc
mov
inc
cld
sbb
arpl
sub
dec
cwtl
or
shrl
pop
mov
sbb
and
arpl
or
imul
push
or
mov
sbb
or
dec
dec
aad
dec
xchg
flds
xor
ret
icebp
or
ret
aas
loope
rcrl
test
sbbb
cmp
fsubrs
xchg
mov
adc
pop
cmp
mov
xchg
jl
loopne
push
push
sarl
mov
adc
mov
sbb
jno
popa
jo
fdivrl
test
inc
pop
outsl
cmp
xor
pusha
and
cmpsl
adc
lds
jle
cmpl
movsb
pop
stos
sbb
cmp
shlb
xchg
stos
mov
mov
mov
pop
adcl
add
call
pop
sahf
sbb
loop
aas
arpl
stos
cmp
mov
cmp
cli
sbb
loopne
sahf
adc
loope
mov
pop
lds
or
sbb
xchg
ficompl
xchg
jae
arpl
mov
xchg
sub
pop
jae
mov
testl
lret
sub
mov
pop
lock
jo
ja
loopne
jmp
push
jo
xlat
inc
push
insb
andb
sub
lret
xchg
test
addl
jg
mov
cmpsb
cmp
pop
aas
stos
inc
nop
xchg
lods
ds
push
mov
into
arpl
mov
push
inc
and
adc
adc
fmull
cltd
sbb
sbb
mov
mov
jmp
jl
rcr
jmp
mov
push
sub
jo
sub
jge
icebp
mov
push
jge
fnstcw
in
mov
add
sub
xor
xchg
les
dec
pop
dec
adcb
ja
outsl
push
ret
jns
adc
icebp
pop
enter
lret
adc
bound
int
add
push
mov
aaa
cmp
adc
ja
icebp
ss
lahf
add
test
ror
xor
pushf
xor
mov
imulb
push
xorb
sub
inc
aad
out
stc
rcrb
stos
sbb
aaa
jnp
sub
into
repz
mov
pop
mov
je
lcall
jo
inc
mov
xchg
push
ret
js
bt
mov
push
mov
cmc
and
mov
sub
mov
mov
jbe
cltd
mov
adc
adc
mov
adc
push
lahf
cmpl
cmp
ret
loopne,pt
mov
pop
jge
add
mov
jle
pop
cmp
mov
push
loopne
lds
inc
cmp
add
mov
aaa
mov
xchg
xchg
jmp
aad
ret
fsubs
sub
daa
pop
rcrl
xor
add
mov
and
mov
fldl
outsl
fs
rcrl
aam
xchg
les
xor
push
call
addr16
adc
jo
outsl
aad
jl
adcb
push
sub
pop
jge
roll
add
fwait
xor
xor
out
movsb
jg
xchg
push
pop
sub
push
mov
jo
mov
mov
mov
insb
clc
sbb
scas
aaa
int
das
sub
mov
pop
mov
shr
std
add
testb
ljmp
adc
sbb
cwtl
or
mov
shrb
rclb
sub
jg
jbe
pop
jecxz
push
jmp
cltd
pop
movb
loop
push
movsl
jge
fneni(8087
pop
add
mov
scas
imul
mov
addl
hlt
cmp
sub
push
and
push
jecxz
nop
dec
dec
stos
inc
sub
xchg
movsl
fs
xor
scas
das
enter
inc
addb
sbb
mov
and
out
adc
shrb
fcmovu
iret
pop
lea
test
push
loop
mov
imul
mov
repz
mov
data16
out
or
dec
cmp
call
pop
sub
test
std
inc
pusha
cs
mov
xchg
and
fcoms
cmp
decl
push
pop
aaa
imul
jle
cmp
enter
inc
fwait
movsl
ret
cmp
dec
call
mul
jp
andb
loopne
es
stc
and
dec
xchg
mov
fldl
cmpsb
mov
mov
lcall
ja
sbbb
push
inc
ret
mov
repz
or
fs
add
orb
repnz
and
jle
outsl
int3
cmpsl
mov
push
and
xchg
call
mov
sarl
dec
imul
xchg
in
inc
repnz
lcall
enter
mov
inc
nop
inc
iret
arpl
mov
movsl
gs
in
aad
push
add
fildl
mov
sub
dec
mov
inc
out
jb
nop
xlat
push
in
fidivrs
inc
into
lock
and
mov
cmp
cmp
push
cmpsl
roll
fidivl
pop
jb
mov
or
lcall
scas
cmp
mov
fwait
scas
shrl
push
lret
rcll
pop
aas
add
pop
pop
lret
lock
in
fdivl
lcall
mov
sub
pop
jnp
sbb
jb
cmc
in
sub
mov
addr16
test
sbbl
cwtl
jbe
arpl
popa
jae
test
inc
lret
push
js
cmp
dec
jecxz
sub
pop
xor
mov
cmp
mov
cmp
xchg
shl
shl
call
mov
inc
stos
jbe
aam
cmp
or
and
adc
cmp
movsl
std
and
ret
push
and
or
pop
test
clc
int3
cmp
pop
cmp
xchg
test
imul
push
adc
sbb
gs
das
xchg
xor
xchg
and
or
sub
lea
or
iret
pop
xlat
aas
xor
sbb
cld
js
cld
ja
and
add
outsb
int
xor
dec
adc
xchg
xchg
xchg
call
push
jp
pop
mov
sub
mov
cmp
mov
fdivrl
or
stos
adc
inc
mov
jge
dec
sbb
movsb
xor
sbb
cld
movsl
leave
push
inc
dec
lock
inc
or
sarl
pop
repnz
fadd
cltd
fistps
das
lods
mov
test
push
je
roll
pop
jecxz,pn
in
or
push
loope
xchg
das
push
pushf
or
mov
cmp
jl
ds
jo
shlb
pop
mov
jns
lods
loope
ja
outsb
jg
repz
cli
and
add
loope
sub
push
sub
mov
cmpsl
pop
loopne
jl
aas
push
scas
pop
add
xchg
movsl
inc
cmp
inc
xor
push
adc
shll
daa
jmp
js
xchg
rcrb
adc
adc
jl
or
pop
cwtl
lods
shlb
or
cld
out
or
stc
lds
or
loopne
pop
test
and
xchg
jmp
mov
popa
stos
mov
rcrl
sti
shrl
dec
jp
shlb
jp
sbb
jmp
adc
push
and
adc
hlt
scas
xchg
sti
mov
popa
cmp
cmpsb
fnstsw
shll
mov
xchg
jbe
movsb
xchg
jg
hlt
nop
pop
mov
sbb
adc
mul
lret
andb
dec
pusha
scas
push
icebp
sbb
or
push
addr16
sub
mov
dec
add
in
adc
out
outsl
cmp
sbb
into
mov
popa
aas
push
add
jae
lock
pop
inc
push
and
fdivrl
cwtl
mov
test
stos
sbb
jmp
sbb
mov
jno
jg
rclb
xchg
push
dec
or
xor
rcrb
aam
sarl
mov
sarb
sahf
dec
cmp
adc
mov
or
sub
dec
dec
rcrl
mov
fwait
add
pop
add
cltd
nop
les
jp
pop
xlat
mov
cmp
mov
loopne,pt
mov
and
movsl
insl
jl
push
lea
push
lcall
fadd
mov
push
sahf
push
enter
repnz
dec
aas
not
or
adc
mov
testl
cmp
sub
popf
inc
cmc
int3
imul
scas
dec
dec
call
or
xor
lea
or
fimuls
sbb
sbb
mov
pop
mov
je
dec
in
mov
fsubp
mov
mov
shlb
push
hlt
sbb
add
data16
ret
lods
pop
jno
pop
shll
add
fsub
mov
jno
add
or
in
dec
jmp
pushf
sub
andl
into
aas
mov
loope
mov
mov
jmp
das
push
sbb
adcl
dec
repnz
mov
jb
sub
hlt
jle
mov
ret
icebp
mov
loopne
push
fmuls
jns
test
pop
jl
scas
daa
add
sub
mov
mov
fldcw
jbe
inc
sbbl
ss
pop
subb
or
dec
inc
pop
addr16
das
mov
push
sbb
xor
push
adc
push
bound
sub
scas
mov
lock
stos
pop
addl
xor
test
dec
push
sub
aas
jecxz,pn
xchg
xchg
out
dec
xor
jmp
mov
push
in
in
inc
in
test
out
cmp
and
leave
insb
inc
and
jl
sbb
xchg
cwtl
sbb
in
mov
dec
pop
or
pop
mov
gs
cmp
xor
ja
adc
cs
or
movsl
pop
imul
in
stos
dec
enter
arpl
mov
adc
push
loopne
outsl
lahf
outsl
push
les
cltd
add
std
ds
inc
pop
xchg
and
push
into
jne
jecxz
loope
xchg
fiadds
or
loopne
cmc
push
xor
mov
rol
inc
inc
sub
sub
cmc
mov
jno
das
push
push
cmp
shl
je
push
mov
mov
mov
dec
fldenv
mov
mov
mov
xor
inc
bound
int
mov
test
mov
mov
mov
mov
jno
lret
in
fidivrl
lret
mov
pop
lret
xchg
enter
or
lahf
loopne
je
into
and
jecxz
pusha
push
push
push
dec
or
inc
jmp
dec
mov
jae
rcrl
mov
fisubrl
push
fisubrl
and
or
add
mov
add
xchg
pop
lcall
in
sarb
cmp
push
shrl
pop
or
ret
mov
pop
outsb
sbb
hlt
adc
adc
out
xor
outsl
daa
je
cmpsl
icebp
mov
cmp
fdivl
mov
inc
cwtl
adc
sbb
jno
out
lock
adc
imul
addb
dec
es
dec
clc
movsb
scas
sub
sub
xlat
fwait
shlb
call
testl
sbb
jno
jbe
xor
fwait
lahf
cmp
stos
cmpsb
dec
insb
loope
daa
mov
mov
mov
jp
dec
or
leave
jge
mov
pop
mov
into
cltd
sub
test
xchg
scas
cmp
dec
out
jl
movsl
rcl
push
into
shll
mov
sahf
cwtl
and
jmp
push
add
jne
xor
sub
outsb
or
cmpsb
mov
sbb
cmpsl
sbb
add
fwait
push
xchg
cld
xchg
xor
sahf
push
fs
enter
pusha
dec
sbb
xorl
loop
cld
sbb
lcall
adc
mov
mov
ror
gs
cmp
out
or
in
aam
dec
stos
pop
addl
std
inc
or
mov
push
leave
cltd
sbb
mov
mov
in
rorl
push
cmpsb
mov
mov
js
pop
dec
mov
inc
xchg
mov
xchg
aad
inc
arpl
or
sub
pop
stos
ja
mov
mov
out
xchg
push
push
jl
and
scas
mov
mov
lock
adc
inc
ja
or
in
lods
inc
inc
cmp
mov
xor
xchg
push
popa
add
out
jl
arpl
in
cwtl
jb
cmp
leave
xchg
repz
iret
xor
mov
rclb
shrl
incl
push
sub
add
iret
and
dec
in
cmp
shll
bound
ja
push
std
movsb
test
xchg
movsb
enter
sbb
dec
mov
mov
das
outsb
push
cs
mov
mov
jg
in
iret
sarb
int3
cli
pop
loop
arpl
add
push
dec
lds
mov
pop
mov
out
out
sete
xor
or
shr
cmp
imul
rcl
aam
cwtl
push
and
add
jnp
xchg
add
jge
in
pop
mov
mov
push
in
pop
xor
aam
push
or
lods
push
ficoms
fwait
aad
mov
adc
imul
sbb
repz
push
arpl
nop
pop
iret
ljmp
xchg
movsl
out
sbb
push
add
push
sub
mov
jge
adc
out
aas
iret
and
fnstenv
pop
hlt
test
loopne
xchg
pop
addr16
jae
repz
in
push
adc
jne
jae
repnz
add
hlt
int
cmp
fiaddl
dec
fisubrs
vxorps
addr16
outsl
sub
push
in
arpl
sti
pop
mov
and
int
sahf
mov
push
das
andl
mov
push
sbb
dec
jg
mov
mov
aas
pusha
push
je
sub
je
mov
inc
mov
mov
dec
sbb
std
jge
dec
out
mov
fidivrs
inc
jmp
rorb
adc
or
and
ljmp
cli
stos
xor
push
fdivr
and
mov
inc
push
push
push
repz
sbb
sub
inc
sub
push
fxam
mov
cmp
mull
notb
ljmp
movsl
dec
dec
or
xorl
adc
mov
jbe
xchg
mul
xchg
fs
inc
icebp
incb
mov
xchg
sub
cld
xchg
outsl
or
or
push
int3
pop
mov
les
or
mov
jp
sub
push
jbe
or
dec
ret
add
dec
popf
sbb
sub
jg
in
mov
out
out
mov
adc
adcb
push
rorb
sbb
insb
ja
mov
sub
jnp
clc
dec
cwtl
sub
and
in
cmp
or
jne
and
daa
fnsave
or
lret
xchg
jb
ja
je
jne
out
shlb
mov
mov
cmc
int
jno
popa
xor
dec
popf
sub
lods
dec
cld
jmp
push
bound
mov
test
push
dec
insb
popf
and
add
test
dec
outsb
leave
mov
lods
or
rorl
cmp
cmp
adc
je
cld
loope
test
imul
or
push
dec
dec
sub
mov
dec
test
shrl
mov
xchg
adc
inc
inc
stc
outsl
loope
dec
divl
jnp
fdivl
and
aad
mov
mov
pop
adc
gs
xorl
int
movsb
mov
mov
test
push
test
test
jno
outsl
insb
mov
rcrb
pop
mov
inc
dec
js
pop
sub
sbb
jo
es
fbstp
and
pop
js
add
fisubrs
fs
xchg
sbb
leave
pop
jbe
inc
lcall
mov
add
aad
sub
dec
jecxz
or
mov
or
xchg
daa
xchg
adc
add
push
pminsw
nop/reserved
mov
cltd
shrl
mov
add
push
in
stc
divl
nop
out
add
idivl
mov
outsb
mov
add
xchg
xor
mov
mov
xlat
fcomps
jne
inc
lea
jmp
xchg
fdiv
or
mov
test
mov
mov
movsb
sub
ret
jne
pop
xchg
iret
fmull
cld
push
cli
push
jbe
mov
and
push
mov
repnz
outsb
jae
or
loop
sbb
das
cli
cmp
lods
movsb
jns
outsb
lods
dec
roll
or
add
cs
cmp
clc
lret
test
jl
idivl
mov
jne
divb
out
out
nop
xorb
or
out
loopne
sub
outsb
adc
stos
scas
push
xchg
cmp
sbb
in
adc
sub
mov
cmp
dec
and
int
xchg
jge
mov
dec
push
js
stc
lcall
into
test
rdmsr
inc
adc
loop
ja
and
xor
mov
loopne
xlat
iret
scas
pusha
xor
mov
jmp
jns
jne
cltd
cmp
std
push
dec
adc
cltd
add
cmp
dec
push
sub
pop
rol
ret
inc
push
arpl
and
dec
test
leave
lea
shlb
fcomps
stos
jl
mov
pop
into
mov
xchg
and
add
add
push
dec
inc
cmpsl
jle
incb
cli
shlb
dec
popa
stc
pop
or
mov
inc
cmp
into
ljmp
mov
adc
xchg
ljmp
pop
adc
mov
adc
inc
pop
jp
test
add
inc
add
jle
bound
mov
push
popa
dec
push
pop
cmp
xchg
push
pop
stos
lods
imul
xchg
and
shll
rclb
cmp
cmp
cmp
sar
pushf
mov
xor
push
and
enter
loope
mov
out
out
insl
sbb
fsubr
and
jae
pop
jb
mov
lcall
inc
push
fnstenv
and
out
lret
mov
out
ja
push
push
adc
data16
push
adc
sub
jno
dec
cmp
shll
push
cmp
fidivs
dec
dec
arpl
inc
jmp
jne
adc
mov
pop
movsb
ret
loopne
and
daa
xorl
cmp
mov
lahf
push
xchg
in
mov
repz
hlt
push
filds
shrl
pop
jno
imul
mov
into
testb
into
sbb
mov
sub
movsl
xor
xchg
iret
clc
and
outsl
mov
das
xchg
adc
pop
fldl
dec
fcoms
adc
adc
rol
lds
call
fadd
shll
jg
es
in
mov
mov
pop
sbb
shll
mov
fs
push
push
sahf
dec
dec
xchg
lock
jne
jmp
dec
loope
movl
xor
cld
mov
push
pusha
push
jb
fwait
pop
mov
popa
test
test
cwtl
pop
loop
out
repnz
jp
insl
and
ret
push
cmp
aam
pop
movsl
in
movsb
adc
lahf
or
mov
pusha
test
out
mov
and
outsb
mov
pop
sbb
pop
sbb
ds
in
cltd
test
push
dec
sbb
rcl
inc
cmp
dec
fidivs
aas
std
int
aaa
addb
xlat
ja
xchg
or
pop
testl
repnz
jb
push
pop
leave
lods
rolb
test
pop
and
mov
lahf
mov
mov
xchg
jecxz
rorb
push
stos
insl
sbb
xchg
add
lock
ret
aas
fs
lahf
pop
sahf
loopne
cmpsl
mov
mov
push
loop
cmp
outsb
out
jo
mull
pop
mov
mov
imul
imul
sub
jno
pop
mov
pop
add
imul
mov
roll
mov
orl
or
icebp
ret
and
mov
dec
popa
in
mov
cmovno
pop
bound
xchg
aaa
insl
jns
sbb
stos
and
sbb
push
jne
mov
mov
call
xor
cmp
mov
iret
call
fucomi
sub
jl
clc
and
insl
lret
add
fxch
sub
cmp
xchg
or
pop
popf
pushf
ss
adc
xor
fs
mov
mov
jno
sti
xlat
fs
pop
xor
jnp
icebp
addr16
jbe
inc
int3
cmc
pusha
sbb
add
notl
shlb
xor
loope
rcll
outsb
imulb
dec
test
mov
pop
cmp
add
movsb
pop
xor
cmp
sbb
push
fwait
addl
ljmp
xchg
mov
sbb
repnz
xchg
pop
mov
push
into
push
cmp
test
sbb
push
pop
cmp
ret
rol
jns
call
pop
rclb
pop
rcll
jae
xor
iret
pushf
mov
sub
pop
xchg
pop
out
fidivl
cmp
movsb
dec
mov
xchg
jnp
jg
mov
mov
inc
xchg
fstl
dec
andl
lcall
sub
mov
gs
mov
dec
jbe
pop
in
pop
ret
push
adc
cmp
mov
data16
and
mov
sub
test
popf
aam
dec
cmovne
pop
sbb
out
pop
pop
or
add
enter
arpl
mov
mov
cli
outsl
test
ja
xor
pop
inc
jns
lock
rcrl
add
jnp
faddl
aam
cmp
jbe
push
jle
or
xor
fdivrl
ljmp
lods
mov
add
sub
lea
pop
and
fistps
and
cmp
jp
push
in
jne
xchg
icebp
inc
sub
pop
xchg
sti
popa
aas
add
add
addr16
test
fucomi
jp
clc
and
icebp
or
out
stos
pop
aas
shlb
outsl
jns
addl
stos
sbb
mov
subl
cmp
insb
adc
pop
mov
dec
pop
out
test
mov
xchg
cmc
pushf
lcall
jnp
lods
xchg
mov
jae
iret
mov
adc
add
mov
out
jg
les
mov
sbb
sub
cmpsl
and
xchg
stos
repz
xor
mov
xchg
daa
out
imul
mov
inc
inc
sbb
rcll
mov
loop
fists
sbb
push
push
jmp
mov
adc
lock
and
loope
xchg
mov
pop
in
clc
jno
jge
or
enter
adc
mov
inc
xor
mov
push
cmpl
divb
xchg
cmp
push
push
aam
stc
xor
fcmovu
dec
movsl
fwait
sub
mov
int
or
mov
sar
in
setp
xlat
test
in
sbb
or
inc
sub
push
mov
lret
push
inc
xchg
repnz
mov
push
stc
cmc
sbb
ljmp
cltd
fwait
jle
sub
sbb
adc
sbb
out
sbb
mov
pop
jo
loopne
xchg
sarb
ljmp
mov
push
xchg
mov
sub
xor
es
dec
and
enter
mov
push
inc
cli
sub
mov
daa
test
call
lret
pushf
sub
xlat
mov
adc
mov
add
cmp
and
stos
call
sahf
xor
sub
mov
mov
lcall
lock
cld
mov
mov
pusha
adc
pop
mov
fs
add
push
insl
jge
or
les
out
inc
and
repnz
jno
cmp
fldenv
and
test
repz
std
push
sbb
xchg
jo
mov
test
jge
push
js
dec
push
ja
xor
daa
cltd
jl
into
ja
and
mov
sbb
arpl
hlt
add
mov
pop
dec
rcrl
pop
outsl
sbb
cld
nop
push
push
jp
mov
les
xlat
call
mov
add
adc
subb
xor
addb
insb
lods
call
addr16
scas
lahf
inc
sub
jl
cwtl
xor
cmp
rclb
adc
lcall
pop
cmp
leave
stos
mov
or
inc
xlat
cmp
aaa
add
xchg
scas
scas
mov
lret
pop
and
xchg
pop
pushf
out
mov
pop
cwtl
stos
movsl
fwait
and
repz
xchg
mov
cmp
xchg
xchg
aam
fnstsw
push
xchg
push
fs
enter
cmp
xor
add
xor
movl
mov
out
pop
and
add
dec
data16
iret
icebp
test
ret
repnz
ret
or
das
pop
jmp
aam
loopne
or
or
ficompl
fcomps
lcall
mov
xchg
cmpsb
lret
mov
mov
jae
sub
addl
mov
mov
jno
loop
add
loopne
ss
fmuls
ficoms
dec
je
sbb
lret
mov
leave
fwait
out
xchg
add
cs
popa
ret
lret
lcall
outsb
add
mov
sarb
cwtl
push
out
insl
imul
push
cmc
lea
insl
fidivrl
pop
imul
cmp
lahf
dec
mov
pop
lea
lret
data16
in
sbb
daa
inc
test
js
sub
sub
mov
ds
cmpsl
mov
and
ss
push
pusha
xchg
loope
cmc
mov
ds
xchg
hlt
test
jae
inc
mov
gs
icebp
dec
xchg
insl
and
jae
int
push
mov
dec
dec
and
cmpsb
jns
push
leave
cltd
js
add
jns
aad
rcrb
add
es
lock
fcmovnu
roll
sbb
push
mov
pop
sub
adc
in
cld
out
xchg
and
push
push
mov
ja
scas
mov
jno
xchg
mov
js
push
jnp
aaa
sbb
lea
ljmp
push
jae,pt
mov
dec
sbb
or
mov
imul
adc
mov
pop
cwtl
cmpsb
js
mull
mov
sub
call
jns
adc
cmpsl
xchg
arpl
loope
add
lcall
les
movsb
adc
xor
cmp
divl
pop
mov
jg
mov
aad
mov
dec
fiadds
jl
inc
sbb
ja
cld
popa
out
dec
push
mov
xchg
jno
out
mov
das
ret
cli
adc
dec
adc
add
pmuludq
ds
adc
cs
es
push
cmc
lock
mov
inc
and
data16
fistpl
fadds
pop
mov
xor
enter
or
sub
mov
ret
loope
out
sub
movsl
push
ret
adc
sub
cmpl
add
shrl
lcall
scas
je
or
push
enter
cmp
enter
or
xchg
xor
jmp
and
or
or
in
cltd
cwtl
shll
inc
outsl
add
sbb
aad
daa
loope
scas
push
cmpsl
test
add
sbb
ret
xchg
in
pop
jnp
xchg
in
jl
mov
shll
ret
into
pushf
and
out
pushl
aad
jl
popa
and
jl
ja
jbe
sbb
arpl
mov
jl
bt
lret
sahf
pop
dec
jle
std
cld
mov
or
cmp
in
scas
pop
sbb
shlb
stos
daa
cmp
push
ss
mov
testl
inc
dec
add
and
or
pop
mov
adc
ret
cmp
push
sarb
jnp
xchg
lea
inc
enter
jecxz
lods
push
pop
cli
ljmp
je
mov
xor
or
xchg
les
dec
inc
jb
jle
mov
and
mov
lcall
push
xchg
xor
mov
nop
mov
cmp
stos
idivb
pxor
hlt
sbb
push
or
sbb
cmp
fiaddl
jge
add
and
hlt
sahf
shlb
push
lcall
addr16
ror
lea
stc
push
and
aaa
sbb
out
sbb
fwait
scas
xor
mov
scas
sub
in
sbb
dec
lods
cltd
mov
and
in
loope
out
sub
repnz
ficoml
xchg
and
subb
inc
push
sub
sbb
fucomip
lcall
insb
mov
jae
or
adc
push
fnstsw
test
sub
xor
and
jp
jmp
inc
insb
sbb
sbb
mov
inc
imul
divb
sbb
sti
jecxz
cmpl
adc
rorb
jmp
add
enter
or
mov
mov
pop
pop
pop
or
fcom
xchg
mov
push
push
fcompl
leave
xor
outsl
dec
jmp
jbe
dec
inc
loopne
cmpsb
imul
mov
sarl
or
or
lret
ja
adc
inc
and
mov
sub
jo
divb
and
in
cltd
jp
ds
mov
sbb
or
or
mov
mov
jbe
mov
mov
outsl
inc
movsb
inc
xchg
movsl
bound
ret
out
lock
jnp
punpckldq
nop
adc
out
xor
inc
test
fists
cld
adc
insb
lcall
test
cmp
mov
and
xchg
test
imul
push
push
fcmovne
pop
add
lock
xlat
imulb
xor
into
sub
sub
inc
add
push
movsb
push
cmp
push
jne
arpl
js
inc
fwait
or
xchg
dec
jbe
and
cmpsl
inc
mov
sbb
jl
adc
mov
sub
out
mov
mov
test
lds
push
lahf
movsl
int3
adc
in
push
xchg
push
aas
push
sub
lods
test
and
sbb
and
mov
sahf
scas
das
and
push
enter
sub
sub
loop
in
fwait
mov
xchg
or
xchg
aam
mov
jno
fdivl
or
cmp
pop
jle
adc
dec
xor
jnp
mov
int3
stos
ss
mov
arpl
mov
js
mov
enter
call
xchg
lods
roll
or
popf
xchg
in
push
out
jle
and
sub
add
cmpsl
outsl
in
fmull
fs
mov
sbb
add
movsb
xorb
out
pop
inc
pop
inc
into
push
push
xchg
adc
inc
int3
je
xchg
int
sti
pop
cltd
push
inc
hlt
jo
push
dec
push
out
mov
inc
add
icebp
sub
mov
push
sub
icebp
leave
pop
cwtl
push
xor
pop
mov
dec
inc
dec
mull
decl
jns
mov
and
int3
out
adc
pusha
xlat
xchg
cmp
mov
cmc
sbb
sub
pop
cmpsb
enter
mov
pushf
cmc
ds
aam
daa
rol
out
icebp
dec
out
lcall
and
add
mov
fldt
or
ljmp
adc
jne
jne
pop
in
inc
sbb
mov
mov
mov
fs
push
sbb
and
pop
dec
or
cmp
xchg
jmp
xor
jne
ret
addl
push
push
sahf
sbb
lods
mov
mov
test
dec
jne
and
mov
xor
dec
int3
jo
aam
cmp
out
ja
push
jns
mov
lods
sub
jbe
xchg
pusha
push
mov
insb
call
call
ficoml
pop
cmp
mov
xlat
push
adc
jp
sahf
ja
test
push
inc
ficoms
mov
aaa
lcall
popa
add
fbld
adc
push
xor
dec
test
pusha
stc
pop
iret
push
pop
scas
or
insl
mov
mov
mov
test
pusha
mov
test
ficomps
ljmp
lret
or
popl
sti
je
int3
push
rorb
add
hlt
js
mulb
mov
mov
mov
arpl
sarb
mov
cmc
icebp
aam
mov
push
ja
daa
lea
push
lds
push
add
mov
es
pop
lahf
jnp
movb
and
pushf
aam
push
enter
and
adcl
dec
bound
nop
or
inc
push
lcall
push
sbb
in
les
pusha
dec
outsl
jp
and
dec
cmpsb
mov
xor
add
xor
loopne
in
outsl
lahf
mov
mov
test
xchg
call
nop
xchg
push
cmp
and
arpl
out
into
pop
mov
aad
xor
mov
mov
or
cwtl
jp
sub
ss
sub
xlat
mov
push
jnp
add
lds
pop
push
loop
sbbl
pop
push
xchg
out
ret
bswap
test
inc
scas
test
add
dec
stos
and
or
push
sub
movsl
dec
push
ds
repz
sbb
add
add
mov
divb
inc
mov
mov
add
mov
or
push
std
inc
pop
outsl
pop
and
xchg
stos
dec
fcoms
ret
mov
fmull
into
xchg
movsb
push
sbb
xlat
xchg
daa
push
mov
nop
rolb
addb
jno
sbb
sub
lods
or
fisttps
sub
add
cmpsb
out
inc
and
test
xor
lds
mov
jno
inc
sbb
or
shrl
inc
inc
or
pop
outsb
out
or
dec
mov
jae
iret
out
or
jbe
popa
arpl
imul
loop
and
mov
ss
push
fprem1
aad
pop
rcrl
xchg
ss
pop
js
popl
jno
into
xchg
stos
push
and
mov
imul
imul
sbb
jne
xchg
out
xchg
sahf
sbb
inc
movsb
inc
fcmovnb
or
xlat
int
add
mov
imul
hlt
lock
int3
sub
pop
inc
nop
in
pop
mov
sbb
gs
or
pop
sarl
shlb
out
or
and
mov
lock
lahf
enter
xchg
hlt
movnti
adc
mov
inc
insb
out
xor
and
imul
push
or
lods
mov
dec
arpl
adc
jecxz
pop
data16
loop
sbb
xchg
aas
shrl
pop
sbb
js
fcompl
nop
fyl2x
outsb
xchg
push
popa
std
add
and
xor
imul
jnp
xchg
sbb
cmc
or
aad
mov
jge
jp
cli
insb
shr
and
dec
mov
inc
fidivs
push
push
out
mov
mov
das
imul
xchg
sub
sub
mov
shlb
jle
in
in
prefetch
or
push
jnp
jae
xor
cmc
insl
adc
data16
cld
mov
fdivs
push
push
dec
xchg
jl
shrb
jnp
sahf
jge
cli
cmp
xchg
and
aaa
jns
sbb
faddl
mov
mov
dec
ljmp
inc
je
stos
mov
sbb
add
out
bound
add
adc
mov
outsb
mov
je
dec
pop
movsl
mov
ret
sbb
and
hlt
jl
pop
outsl
les
insb
imul
iret
and
test
enter
mov
sub
xchg
scas
test
in
fbld
mov
jg
dec
mov
push
mov
inc
movsl
stos
movsb
inc
rcrb
jmp
pop
cmpsb
sti
mov
and
push
push
xor
or
push
mov
pop
repz
mov
push
cmc
xchg
aam
pop
sub
and
lcall
cmp
call
jl
pop
xchg
jo
sti
addr16
iret
push
out
xor
jmp
mov
mov
fstps
ror
pop
sbb
push
nop
pop
pop
cmp
and
push
cwtl
in
or
mov
mov
mov
data16
int3
aas
sbb
cwtl
in
cmpl
dec
or
and
aam
push
daa
int
ja
pop
js
testb
sbb
mov
push
inc
pusha
adc
imul
mov
out
cmp
sbb
pusha
pusha
push
sub
adc
mov
filds
leave
popa
pushf
cmp
cld
les
call
add
mov
orl
repz
test
xor
jo
mov
mov
outsl
pop
gs
xor
lcall
and
sbb
dec
and
sbb
dec
xor
jge
ds
repnz
sbb
cmp
xor
jae
or
push
sub
dec
andl
xchg
sub
movsl
aas
orl
jb
cmp
cld
fstps
ret
fisubs
push
sysenter
fnstcw
mov
hlt
stos
sub
sbb
js
inc
mov
pop
imul
pop
insl
sbb
aas
and
or
pop
jle
sti
cmpsb
xor
dec
bound
adc
pop
jmp
in
sbb
xlat
xchg
dec
adc
andl
ret
add
in
dec
scas
icebp
mov
fwait
or
push
mov
dec
sub
adc
push
mov
dec
lods
bswap
test
movsl
push
loopne
sbb
jne
jno
adc
inc
test
push
test
xchg
pop
jo
call
jle
fsubl
pop
cmp
xchg
xor
enter
mov
inc
inc
push
jp
imul
mov
push
loopne
or
xor
movsb
sti
cmpsl
mov
adc
jbe
mov
jle
test
mov
mov
and
jl
add
fnstcw
addb
pop
pop
add
fistpl
imul
pop
xchg
pop
lret
jmp
flds
sub
sbb
pop
sub
in
dec
push
jl
jae
out
rcrl
imul
jmp
jp
and
sub
cs
pop
push
test
pusha
shl
fs
dec
push
jmp
popa
ret
cltd
cs
call
filds
mov
fsts
iret
cmpsb
push
and
sahf
or
xchg
stc
ret
sbb
jo
bound
fs
dec
push
gs
xchg
aas
hlt
mov
adc
pop
pop
sbb
push
and
cmp
xlat
jo
inc
cmp
mov
xor
mov
add
fldt
mov
fsts
jno
aad
test
mov
adc
adc
test
mov
push
es
idivl
push
xchg
xchg
orb
subl
or
decb
rclb
mov
xor
or
inc
lahf
mov
jg
mov
xlat
mov
inc
sbbl
clc
xor
int3
mov
rcrl
cmc
add
sahf
pop
andl
xor
imul
sbb
lods
inc
sub
cmpsl
cmp
or
loope
cmpsl
in
jns
mov
pop
xchg
scas
inc
call
sub
cmp
movsl
sub
xchg
xchg
and
add
cmp
pop
or
mov
sub
test
mov
enter
mov
cwtl
cmp
pop
in
fs
pusha
or
ja
mov
mov
adc
push
daa
mov
sub
inc
bound
nop
bound
pop
add
clc
leave
aaa
jno
sarb
fdivr
and
jo
iret
push
mov
xor
insl
xchg
jl
out
add
push
flds
mov
loopne
jns
adc
push
cmpl
subb
sbb
inc
jo
jge
or
pop
insb
sub
sbb
stc
inc
dec
hlt
cs
mov
loope
jno
daa
clc
xchg
in
cmp
leave
aad
lcall
scas
js
test
popa
dec
mov
mov
mov
test
inc
aad
or
outsb
mov
sub
and
lds
arpl
mov
cmp
add
add
loop
das
in
xor
es
and
and
xchg
push
adcb
adc
pop
mov
rcll
pop
xchg
sbb
push
hlt
mov
or
adc
clc
jno
movsb
adc
je,pt
sub
xor
mov
inc
inc
push
sub
mov
xchg
scas
in
sti
xchg
add
pop
adc
jae
cld
loop
cmpsl
std
rcl
inc
cmc
cmp
inc
sub
jbe
fstpl
ret
and
ret
mov
sbb
repnz
jg
in
push
mov
xchg
inc
pop
dec
shr
nop
jo
cmp
sbb
ja
mov
fisubrs
clc
xchg
mov
loopne
sbb
jmp
cmp
add
sub
pop
adc
mov
cltd
int
inc
jle
or
cld
sbb
jne
out
fldl
icebp
push
pushl
dec
xor
push
inc
xchg
call
mov
stos
adc
mov
xor
rol
or
cmc
fidivs
cmp
push
ss
mov
and
sub
imul
mov
sbb
bound
loope
push
dec
pop
xor
imul
mov
rolb
ljmp
in
mov
pop
imul
jnp
or
nop
lcall
xor
stos
mov
cmpps
aad
lret
insl
lock
xlat
pop
ret
inc
xor
push
sti
insl
cmp
rol
leave
rcrb
rorl
inc
insb
jecxz
cmp
loop
xchg
or
add
pop
add
gs
xchg
and
dec
daa
push
cmp
out
pop
jmp
add
out
loop
mov
outsb
jle
addr16
lahf
inc
inc
ror
mov
stc
test
jg
or
outsb
jbe
pop
cld
mov
adc
shll
add
sarl
data16
ss
aam
subl
and
test
mov
stc
mov
add
jne
xor
pushf
mov
xchg
cmp
xor
pop
pop
cmp
push
cltd
pop
push
mov
xor
cmp
push
pop
jl
fadds
push
and
push
addl
arpl
roll
or
test
push
adc
sbb
mov
pop
ret
fdivrl
nop
addb
mov
popa
mull
mov
adc
outsb
jne
dec
xor
add
lea
je
xchg
data16
add
imul
stos
subb
in
int3
jmp
popf
out
mov
cmpsl
jo
xor
xchg
cmp
jbe
dec
jbe
decl
mov
inc
mov
stc
in
add
or
mov
push
call
cltd
sbb
ja
lods
jg
cmp
sub
clc
and
lock
or
sub
and
sbb
movsl
lods
xchg
out
jmp
in
push
cld
repz
xor
aas
cs
mov
ret
sub
add
cli
dec
xchg
js
adc
jne
mov
dec
es
jnp
fwait
jle
mov
mov
xchg
sbb
divl
jb
jg
incb
test
aam
inc
dec
or
stc
sub
pop
aad
xchg
into
rolb
inc
pop
insl
jmp
ljmp
rclb
cmpsb
xlat
lcall
dec
mov
roll
xor
mov
mov
testb
into
hlt
jg
mov
sahf
dec
dec
clc
adc
push
popa
cmpsb
adc
popa
and
mov
fcompl
mov
aam
mov
jg
mov
pop
es
inc
out
add
adc
pop
ret
xchg
sti
sub
mov
in
and
orb
and
sarl
mov
and
outsb
fwait
inc
stos
cwtl
jb
add
xchg
sub
mov
shlb
mov
add
xor
xchg
xchg
dec
imul
loope
popa
addr16
add
add
dec
aam
mov
cmp
inc
enter
push
pop
or
pop
and
mov
ljmp
loope
mov
pop
mov
dec
jae
ljmp
faddl
fdivl
push
cltd
xor
sbb
jae
sbb
aam
pop
mov
xchg
add
imul
pop
push
jl
cmp
or
cmc
dec
addr16
and
cld
xorl
pop
xchg
sahf
test
mov
add
jae
and
cwtl
xor
cld
enter
mov
stos
dec
popf
iret
cmp
bound
pop
lock
pop
dec
clc
or
push
mov
mov
add
scas
into
mov
jb
rorl
in
mov
and
lods
sub
inc
mov
sub
xchg
cli
arpl
je
lea
repz
enter
fdivp
ds
or
js
cmp
cmp
pop
outsl
and
loope
adc
loopne
gs
je
repnz
mul
fwait
mov
test
das
test
nop
loop
fwait
and
mov
pop
xor
adcl
ss
inc
addr16
in
pop
cmc
lret
mov
push
fiadds
repnz
sbb
les
test
iret
repnz
mov
jae
addl
push
test
pop
mov
test
fisttpl
xchg
or
sub
xchg
mov
aam
inc
gs
gs
sahf
add
clc
loop
inc
add
pop
sbb
mov
mov
xor
rolb
or
cmp
and
pmaxub
push
or
das
cltd
cmpsl
rolb
nop
movsl
stos
adc
mov
ret
icebp
push
add
push
pusha
sbb
fisubrs
or
sub
xor
mov
shr
xchg
cmp
sub
jno
sub
nop
pop
cli
call
test
inc
dec
ljmp
inc
arpl
outsl
fsubrs
aas
shrl
cmp
rcrl
sub
mov
loopne
popf
shlb
nop
pop
push
add
mov
test
subl
mov
movsb
cmp
xchg
adc
dec
and
xor
pop
lret
nop
inc
jno
jecxz
push
cwtl
mov
shrb
or
aaa
loopne
es
mov
mov
in
push
sahf
loop
es
test
jnp
add
or
stos
out
sub
repz
mov
mov
sub
cmp
scas
dec
xchg
push
sbb
aam
rclb
shlb
insl
out
aas
inc
sbb
into
push
adc
pop
cmpsl
sti
mov
sub
arpl
sbb
repnz
jmp
sub
jo
push
sbb
lods
mov
inc
ficoml
lret
or
imul
sbb
int3
jge
daa
rorw
or
leave
fstpl
int
push
mov
sub
in
fstpt
push
xor
btc
ret
mov
jecxz
rclb
inc
xor
jle
mov
mov
xor
xlat
test
jle
stos
scas
loop
mov
mov
pop
jb
jmp
out
adc
dec
fiaddl
out
xchg
dec
jne
fldenv
mov
fdivrl
adc
xchg
jb
insb
sub
dec
int3
adc
popa
mov
push
cwtl
clc
add
xlat
addl
repz
scas
icebp
dec
push
mov
pop
lcall
cmc
ljmp
scas
mov
cs
out
inc
scas
outsl
fdivrl
ss
jmp
dec
ficoms
mov
js
pop
outsl
rorb
cmpsb
test
aaa
int
pusha
fisttpll
or
aaa
fiaddl
and
inc
das
mov
movsl
rcrl
jno
pop
imul
stc
stos
test
iret
pop
call
jg
loope
push
pop
cmpl
sahf
popf
bound
js
imul
fisttpl
je,pt
loope
cmp
stos
aaa
adc
adc
in
iret
jge
repnz
fsub
xchg
out
and
inc
ffree
cmpsl
scas
hlt
cmp
cmc
mov
adc
data16
and
shlb
xchg
adc
sub
insb
repnz
into
adc
jo
push
adc
dec
xchg
movsl
cwtl
or
dec
jb
xchg
cmp
mov
in
pop
leave
lcall
mov
daa
push
jmp
xchg
scas
rorl
jb
xor
ret
fidivrs
popf
and
imul
cmpsl
or
mov
dec
fbld
push
xchg
dec
jno
sar
xchg
adc
sbb
jl
inc
adc
outsl
ret
bound
js
xchg
pusha
mov
outsl
sbb
and
testl
xor
mov
movsl
cmpsb
sub
or
scas
mov
dec
jnp,pn
pop
sbb
mov
sbbl
push
push
enter
sub
sbbl
idivl
mov
cwtl
ja
fdivp
pushf
dec
jns
xchg
loop
fxtract
dec
xchg
repnz
je
daa
rol
lods
mov
mov
fiaddl
imul
flds
sahf
jg
jbe
xchg
mov
sbb
pushf
test
xor
pop
or
ret
js
in
test
testb
or
mov
outsb
lds
and
dec
cwtl
jle
gs
fnstenv
adc
in
jb
add
je
outsl
ret
out
mov
mov
ljmp
push
dec
rorb
add
jp,pt
cld
cwtl
into
fcoml
je
adc
adc
xor
cli
or
in
or
add
xor
cmpsl
in
lcall
jb
jnp
mov
mov
mov
fldenv
xchg
cs
jns
aas
sub
adc
outsb
jnp
jmp
and
jns
rcr
and
pusha
ret
adc
pushf
adc
movsl
dec
jbe
movsb
aad
push
pusha
popf
dec
sbb
popf
popf
mov
rclb
xor
push
or
inc
fcmovb
mov
xorl
adc
imul
sub
neg
test
xchg
add
push
mov
pop
jle
xchg
sbb
scas
outsb
push
cmp
fidivrs
dec
fimuls
movd
cld
sub
xchg
adc
or
mov
outsb
pop
mov
pop
mov
xchg
sub
push
sti
pop
dec
and
xlat
add
dec
idivb
movsb
sti
xchg
sub
test
jmp
sub
mov
inc
sub
pushl
xchg
daa
ret
xor
aad
cwtl
or
adc
popf
inc
fs
hlt
fcomps
adc
mov
ret
sub
mov
mov
add
pop
mov
psrlq
jmp
inc
dec
pop
or
loopne
dec
cmpl
adc
movsb
call
clc
dec
movsl
mov
addb
add
daa
sub
out
call
pop
imulb
mov
test
outsb
and
std
lods
xor
outsb
add
xor
addr16
adc
jo
or
das
in
add
inc
mov
call
or
cmc
out
and
mov
sbb
jbe
test
mov
in
dec
pushf
int
filds
js
add
popf
leave
and
jo
sub
pop
adc
dec
mov
and
pushf
xor
sub
push
loope
mov
pop
and
out
push
dec
dec
xchg
push
dec
mov
cmp
sub
push
clc
pop
xchg
in
std
sub
pop
mov
fcoml
pop
pushf
mov
jp
fbstp
pop
cmpsb
pop
stos
mov
std
lret
mov
push
or
adc
mov
dec
js
pop
mov
orl
out
jno
test
cmc
jne
ret
pop
inc
stos
cmp
lret
push
push
dec
adc
fucomp
adc
call
xchg
mov
les
es
xchg
cmp
sbb
lcall
lret
inc
add
sub
movl
fnsave
mov
clc
dec
popf
xchg
mov
jbe
sahf
lret
mov
mov
aam
mov
dec
pop
popf
or
in
dec
sbbb
ss
sbb
jp
adc
mov
adcl
in
push
shll
push
out
popf
test
dec
push
sbb
add
sbb
clc
out
popa
out
je
negb
push
ret
lahf
cmp
loop
sbbb
je
subl
out
cwtl
out
pushf
dec
sub
lret
jmp
in
sbb
mov
add
mov
xor
pop
sub
shl
dec
into
cwtl
push
cltd
add
sarb
jl
add
xchg
js
pushf
inc
xchg
pop
fs
incl
lods
int
rcrb
test
ret
in
and
lahf
hlt
inc
add
xor
test
xor
add
sbb
ljmp
dec
jns
xor
dec
jge
push
pop
push
imul
fsubr
insl
lock
out
movsb
mov
gs
ds
mov
test
and
iret
addl
cld
jle
dec
mov
xchg
hlt
push
or
shrb
dec
outsb
out
inc
mov
jno
test
inc
gs
and
add
mov
sub
jbe
nop
repz
loopne
add
pop
cpuid
mov
cmpsl
and
in
shlb
and
cmpsl
sub
mov
popl
mov
jle
jl
dec
test
xchg
mov
test
xorb
mov
adc
repz
enter
fiadds
push
stos
xor
inc
flds
mov
and
aam
mov
jb
movsb
fnstsw
nop
testb
leave
aaa
cli
ss
repnz
xchg
addr16
adc
sarb
cmp
pop
xor
into
jbe
add
shl
jbe
je
outsb
xor
xchg
fldl
mov
dec
and
aas
dec
sahf
movsl
push
scas
loop
adc
stc
xchg
cs
sbb
rclb
popa
inc
sbb
bound
pusha
dec
mov
cwtl
mov
cmp
push
ficompl
lret
cmc
loop
aad
cmp
addl
imul
pushf
adc
orb
inc
imul
xor
loope
dec
cmpb
cmp
push
adc
test
inc
lret
int
mov
mov
push
out
xor
adc
decl
repnz
cmp
adc
push
push
pop
inc
rcll
inc
or
test
adc
cmpsb
dec
push
cmp
mov
iret
popf
pop
jle
inc
lods
cld
outsb
cmp
mov
test
or
jno
data16
add
popf
fmuls
and
xchg
pop
push
mov
das
je
lods
loopne
mov
fildll
enter
lahf
fwait
test
in
je
mov
cmc
pop
pop
mov
psrlw
ja
jnp
decb
mov
popl
icebp
sbb
iret
mov
pop
xchg
adc
sub
and
mov
sub
call
aad
xor
inc
pop
loop
not
jecxz
xor
rol
lahf
cld
xor
mov
pop
dec
sbb
aam
or
jne
aad
in
popa
leave
mov
test
mov
push
cmpsb
addr16
aas
xor
gs
cmp
int
btl
jo
inc
mov
sbb
popa
jb
push
je
mov
stos
test
jnp
sbb
sub
sub
in
jns
out
sbb
cli
test
fidivl
mov
scas
inc
mov
mov
adc
cli
xchg
in
call
pop
cmpsl
cltd
or
lds
cmp
push
iretw
in
lret
out
jne
mov
andb
ret
xor
dec
xchg
add
lds
mov
jbe
mov
stos
and
push
outsb
arpl
add
dec
sub
jle
sub
dec
cmp
add
test
pop
xchg
mov
int
insb
iret
sub
sbb
gs
or
bound
nop
mov
shrb
shll
cmc
push
cmc
xchg
sub
xchg
inc
jno
out
cli
xor
addl
jmp
in
mov
mov
push
jno
mov
xor
and
pop
aad
or
or
out
jecxz
adc
adc
cld
jnp
repz
gs
jbe
cmpsb
dec
push
xlat
mov
jl
xsha1
cmpsb
mov
add
or
ljmp
test
jge
subb
cmpsl
jb
push
pop
out
rcrb
cmp
cwtl
add
pushf
push
test
rcll
pop
mov
out
jg
faddl
or
or
popa
lahf
stc
adc
mov
ret
mov
imul
add
xor
push
sub
adc
faddl
rcr
or
mov
pusha
mov
xchg
sub
adc
xchg
pusha
sbb
sub
test
pop
push
mov
push
jns
popf
push
out
push
mov
mov
mov
mov
sbb
hlt
inc
fmul
add
sub
dec
fisubrs
bound
iret
push
cmpsw
cld
sub
pop
arpl
leave
test
ds
jb
mov
ja
pop
xchg
pop
push
push
xchg
mov
mul
dec
repz
iret
mov
and
push
fmul
test
cmp
dec
and
es
test
cmp
cmp
adc
xor
ds
jb
mov
push
inc
inc
clc
lcall
jns
sar
xchg
popf
stos
pushf
pop
xor
sbb
and
iret
cs
cmc
cmpsb
add
fstps
jmp
mov
fucomip
test
in
in
mov
sub
dec
or
add
jmp
outsb
inc
mov
movsl
xlat
ret
sub
inc
add
test
test
sub
jnp
sarb
cs
call
icebp
in
pusha
jns
jl
bound
sti
lret
in
mov
clc
loopne
mov
loope
out
mov
sbb
xchg
sahf
fst
stos
das
add
add
adc
dec
aam
inc
lods
push
or
add
and
cld
jl
adc
cmp
fnstenv
push
enter
call
ret
js
mov
sub
xchg
iret
adc
pushf
add
fcmovbe
pushf
jg
push
xchg
jns
pop
pop
xlat
jb
scas
cld
int3
or
mov
xor
popf
push
pop
ss
ret
mov
mull
enter
push
cmpl
fcoms
lahf
push
shl
mov
and
clc
aam
mov
scas
xor
xor
xchg
lret
scas
fldcw
push
jae
dec
adc
dec
addr16
jp
push
aad
push
jecxz
sbb
push
jbe
mov
aad
adc
inc
mov
int3
lret
jo
or
jmp
push
xor
mov
lods
or
push
arpl
adc
stc
pop
lods
dec
xor
lea
notl
inc
in
mov
push
mov
out
pop
sbb
dec
push
xchg
mov
inc
add
xor
repz
hlt
and
addr16
shr
bnd
cmpl
test
loop
jb
call
sub
rclb
mov
inc
repz
add
enter
dec
std
xchg
cwtl
imul
mov
inc
pop
cmpsb
jle
pop
cmp
sub
insl
jmp
sbb
das
add
jo
add
push
lret
adc
mov
fmul
xor
adc
popf
pop
mov
jge
call
inc
xor
insb
std
xorps
push
inc
and
lret
js
mov
loope
xchg
mov
in
xchg
shlb
mov
stos
xchg
dec
outsl
mov
setg
jg
xchg
inc
pusha
mov
std
fs
dec
repnz
pop
cld
push
mov
xchg
divb
cwtl
adc
and
xorl
push
stos
pop
jbe
pop
js
mov
inc
mov
gs
cwtl
hlt
pop
or
movsb
sub
mov
or
sbb
add
and
cmpsb
jl
cmp
shll
ret
xchg
in
push
shll
dec
std
jbe
inc
into
shll
and
jge
int
pushf
dec
cmc
pop
fstps
je
fwait
push
fidivrl
sti
push
and
mov
sti
mov
std
jnp
pop
sub
call
aaa
iret
insb
adc
jno
push
jno
mov
mov
mov
pop
push
cs
mov
dec
ror
es
inc
testb
cmp
cmpsb
jecxz
ficompl
mulb
je
jnp
dec
jle
and
sbbl
pop
out
cmp
imul
fisttps
movsb
xlat
rcr
inc
jl
loop
push
lods
sbb
ret
sti
inc
sub
cmp
imul
and
imul
lds
or
bound
jnp
mov
lret
jae
add
mov
out
sbb
test
lret
cmc
xor
push
ja
in
divb
xchg
inc
sub
push
fsubs
add
inc
xor
pop
into
push
loopne
pop
jne
outsb
subl
cmpsl
push
mov
pop
or
jne
xchg
jo
add
addr16
movsb
or
pop
jl
mov
lcall
add
inc
dec
int
fdivrl
or
pop
and
inc
add
clc
mov
or
jle
dec
mov
push
das
cld
inc
adc
pop
dec
iret
in
mov
test
pop
push
add
mov
dec
and
sahf
pop
mov
mov
loop
jo
xchg
mov
jb
push
and
adc
adc
stc
movups
jl
xor
push
mov
je
sbb
inc
and
inc
les
nop
ss
add
js
int
inc
int
jle
arpl
lods
push
pushf
cmp
jmp
jecxz
stc
popf
int3
push
out
mov
inc
ja
out
pop
mov
call
aaa
pop
in
mov
jb
sub
add
mov
xchg
mov
sbb
mov
sbb
outsb
cs
in
mov
xchg
dec
cwtl
push
aad
dec
clc
sbb
icebp
rorb
sub
inc
hlt
mov
add
sahf
lea
mov
cwtl
fnsave
fistpll
adcl
pop
enter
pusha
fildll
sub
pop
nop
xor
lahf
sbb
lcall
jne
mov
and
xchg
ret
ror
or
clc
int3
pusha
cmp
imul
ja
xchg
nop
sub
inc
aas
mov
inc
sahf
lea
xlat
ds
cwtl
orb
push
test
xor
fdivs
add
or
jbe
jbe
insl
push
mov
xchg
cmpsb
imul
in
clc
loop
pop
cmc
pop
stos
sbb
sbbl
movsl
fadd
or
push
xor
leave
mull
mov
xchg
fwait
out
lds
out
insb
pop
jb
mov
stos
mov
pop
mov
xor
aam
sbb
jecxz
or
hlt
je
leave
es
icebp
mov
sbb
inc
lret
loop
mov
fdivl
es
mov
fwait
ds
testb
hlt
mov
dec
loopne
inc
pusha
sub
cmp
and
xchg
sbb
sub
pusha
xchg
repz
xchg
or
push
mov
clc
repz
inc
mov
pushl
xchg
pop
sti
loope
inc
push
fsubl
mov
jmp
mov
pop
fsts
push
mov
xchg
pop
leave
ss
jb
jns
add
lret
cmp
pushf
cli
cwtl
mov
lret
cltd
in
loopne
filds
mov
les
cmp
jmp
rcll
jecxz
fistpll
scas
fsubp
mov
sbb
fists
js
mov
out
adc
jmp
mov
loope
jb
lahf
xchg
in
sti
in
pusha
sbb
adc
sub
dec
inc
cmp
in
rol
out
fldl2t
add
pop
mov
push
dec
mov
add
push
les
icebp
cmpb
test
sbb
lcall
daa
jae
add
movsl
iret
sti
mov
jle
imul
fdivrp
pop
sbb
lcall
xchg
cmp
shlb
je
fdivrl
push
mov
pop
cmp
pop
cmp
movsb
ljmp
xchg
mov
xchg
xor
mov
in
fsts
adcb
pusha
add
mov
sbb
mov
add
aas
cmp
push
lret
fildl
movsb
jb
push
ret
enter
jge
sbb
mov
decb
jb
xchg
push
jnp
fisttpll
ret
mov
mov
mov
repz
rclb
or
je
clc
push
std
dec
loopne
bound
cmpsl
or
xchg
mov
js
insb
nop
andb
xor
jecxz
loop
inc
or
mov
enter
adc
stc
out
ret
cmp
mov
out
cmp
inc
and
inc
add
stos
mov
bound
pop
pop
or
dec
imul
shlb
ret
arpl
repz
cmpsb
nop
xor
loope
je
cwtl
jae
cmp
ficoml
add
loope
cltd
mov
xchg
outsl
sbb
sbb
flds
fldcw
push
out
sub
inc
ss
lahf
push
dec
imul
mov
mov
inc
mov
pop
test
add
frstor
into
lret
adc
xor
jns
and
mov
call
jmp
rolb
ja
mov
ja
jmp
and
jb
repz
ljmp
mov
in
jo
and
stos
stos
leave
mov
stc
mov
out
loopne
cmp
test
xor
or
pusha
cmpb
pop
arpl
jbe
xor
mov
mov
mov
repnz
mov
sbb
lea
xorb
rep
or
mov
in
jg
push
mov
adc
jae
loope
mov
jg
inc
mov
cs
sub
cmp
sbb
andb
mov
mov
add
insl
fs
mov
jmp
mov
push
mov
lret
fwait
mov
ss
sub
inc
out
in
push
movsl
sti
addr16
cmp
add
scas
jle
xchg
imul
cs
in
inc
push
and
adc
aaa
mov
mov
xchg
js
movsl
sub
inc
mov
out
cwtl
insb
out
dec
lcall
int
mov
jg
outsb
sar
bound
sti
leave
fdivl
sub
pusha
lcall
test
scas
mov
adc
nop
ja
push
xchg
cmp
lock
mov
and
mov
pop
jns
iret
test
movsl
sub
pusha
add
into
pop
inc
add
or
push
sub
pop
fistps
sub
cmp
mov
sbb
mov
xchg
sete
lds
in
xchg
in
es
inc
cmp
pop
xchg
cld
inc
repnz
push
adc
pusha
orb
arpl
dec
sbb
notl
xor
lods
dec
sbb
sbb
mov
and
out
ffree
scas
or
leave
insb
dec
or
sub
mov
dec
xchg
inc
in
mov
adc
sbb
lahf
mov
dec
test
inc
adc
orb
mov
das
sbb
movsb
in
xor
outsl
sbb
rorb
pop
jecxz
pop
pop
leave
mov
inc
fwait
lahf
fnstenv
push
pop
mov
xchg
xchg
pop
inc
mov
xor
xor
cwtl
xorb
mov
mov
ret
push
jmp
lock
rcrl
lods
out
and
mov
bound
gs
inc
mov
inc
inc
hlt
jle
pop
mov
xor
adcl
push
std
popf
pop
es
aad
push
jne
jnp
enter
pop
push
sub
push
jg
inc
mov
mov
outsb
push
xor
movsb
sub
pushf
jle
sbb
cmp
jl
push
test
pop
lds
ret
in
std
push
lods
js,pn
pop
ud2
cmp
dec
ret
lods
aam
xlat
shrl
lahf
push
jg
xchg
fmul
out
insb
xor
inc
loop
gs
inc
test
pop
xor
push
jp
xchg
adc
push
cld
sbb
cmp
sub
fisubs
call
dec
aaa
jns
jo
xchg
dec
push
sbb
out
jae
add
ret
push
rcrl
into
mov
add
push
enter
shrl
push
arpl
dec
repz
jnp
jmp
addl
ljmp
out
xchg
mov
inc
clc
or
and
jp
push
popf
cwtl
cs
aas
repz
sbb
mov
fldcw
addl
xchg
rolb
mov
test
xor
xchg
and
push
sbb
cmp
loop
les
cmpsb
in
repz
cltd
pop
jne
jb
mov
rcrl
sbb
les
arpl
aaa
xchg
sub
das
inc
loopne
adc
dec
mov
jne
ret
push
pop
outsb
adc
outsb
sbb
pushf
into
add
pop
add
adc
xor
sbb
or
sbb
lock
cs
adc
ss
dec
loop
daa
ds
add
jp
fdivrs
jecxz
dec
ds
adc
dec
into
or
pop
cld
jecxz
jno
fldl
cwtl
es
shrl
xchg
out
inc
adc
xchg
call
and
nop
jle
and
std
cmpl
inc
and
and
outsl
mov
test
in
pop
mov
test
add
cmpsb
sbb
cli
out
fdivrl
jge
adc
dec
dec
das
incb
mov
mov
mov
lret
xchg
xchg
sti
inc
dec
std
pop
sub
sub
cmpb
pop
into
adc
mov
stc
mov
or
shlb
out
test
push
ror
xlat
and
and
cmp
jmp
scas
popa
jl
xchg
hlt
inc
insl
dec
push
lcall
jbe
jmp
loope
push
in
mov
mov
mov
fistl
popa
nop
rorl
mov
mov
mov
in
push
and
fs
cltd
gs
cld
dec
push
add
mov
jbe
sbb
push
adc
scas
fnsave
adc
popa
and
test
mov
and
pop
cmp
mov
jne,pn
and
out
cmp
in
test
aam
ljmp
sub
mov
mov
addl
pop
andl
inc
jnp
loop
fisubs
xchg
mov
mov
sbb
loope
xchg
ss
adc
insb
leave
dec
and
stos
hlt
jbe
imul
cmp
push
jmp
pushf
cmp
out
insl
adc
add
mov
loopne
int3
rcl
lods
mov
jno
fdivs
pop
jmp
stos
das
mov
mov
xchg
or
pop
rol
inc
pop
jns
pop
sarl
fidivrs
and
or
xchg
mov
sub
xor
fs
sbb
or
imul
cmpsl
mov
pop
dec
push
xor
out
cmpsl
mov
dec
inc
jmp
mov
push
jnp
sbb
fmuls
out
xor
push
je
test
mov
inc
shlb
push
lahf
mov
inc
mov
subb
jne
cmp
inc
mov
mov
xor
and
push
mov
ret
insl
mov
loopne
cs
popf
mov
iret
add
sub
fs
test
in
dec
push
inc
cwtl
jg
clc
loopne
fnstsw
test
rolb
lods
aad
fildll
shlb
and
mov
jp
sbb
inc
xchg
mov
pop
rorl
mov
cli
into
sbb
lea
sbb
mov
nop
es
out
cmp
clc
add
addr16
mov
js
and
mov
fmuls
aad
lock
pop
adc
or
bnd
ds
dec
or
lods
xor
bswap
rcll
ficoml
clc
inc
sti
sbb
xchg
cmp
fistpll
sub
xor
inc
inc
repz
xor
xor
es
push
hlt
inc
out
int
jle
js
in
push
mov
add
or
add
out
xlat
pop
mov
jg
lcall
and
dec
mov
mov
add
flds
push
test
mov
in
testb
sub
dec
roll
mov
xchg
mov
stos
mov
add
and
mov
pop
fwait
xlat
pop
pop
add
push
or
mov
fstps
sbb
mov
and
sbb
lods
jno
addr16
xor
mov
or
dec
pop
dec
mov
sbb
subl
fisttps
daa
mov
fnstcw
inc
fcomps
mov
mov
call
andb
stc
sbb
orb
enter
sbb
jp
ss
loop
jnp
xchg
sti
shll
cmp
or
and
rcr
addb
clc
mov
insl
es
xchg
gs
iret
daa
xlat
mov
jp
nop
aam
pop
push
inc
add
sbb
jp
jne
cmpsl
rclb
out
add
adc
and
es
adc
add
add
sub
jmp
jbe
adc
cmp
push
xchg
mov
je
jp
add
ror
in
jnp
sub
mov
sub
cmp
out
out
cmp
addr16
int
cmp
shrl
or
lods
add
xchg
fwait
iret
push
xorb
cmp
lcall
mov
inc
xchg
push
sub
and
repnz
das
fadd
lock
xorb
scas
cli
pop
push
jne
and
and
and
divl
sbb
sbb
ds
sbb
mov
mov
stos
ret
sbb
pop
jle
dec
add
mov
xchg
push
pop
popf
mov
aas
push
fwait
arpl
jp
insl
ljmp
out
decb
mov
add
jnp
mov
cmp
je
ds
adc
popa
fucom
lock
rcl
add
mov
inc
loope
push
in
and
pushf
sbb
aad
fs
jae
sub
into
pop
movsl
and
loop
cs
xchg
sbbl
mov
lret
sub
cmp
inc
sbb
push
xchg
arpl
or
iret
and
inc
jo
stos
shl
test
lahf
jne
inc
mov
mov
mov
mov
push
into
sbb
fstps
hlt
mov
fcmovb
loopne
loop
cmp
push
loop
adc
sahf
inc
fcmovnbe
pop
cmp
fimuls
inc
push
sub
call
sbb
ds
pop
scas
addr16
je
or
popf
ljmp
mov
add
fisttpll
mov
adc
out
jl
dec
imul
insb
loop,pt
iret
xor
fcmovb
mov
inc
xchg
dec
pop
adc
and
pusha
aaa
insb
xor
jg
xor
mov
adc
push
fistl
inc
leave
rorb
or
mov
jecxz
sub
mov
and
cs
xchg
xor
sub
sbb
jo
cmp
popl
clc
loop
push
push
dec
lds
popl
jge
movsl
sbb
pop
dec
pop
jns
inc
push
ss
xor
xchg
adc
or
das
sub
inc
cmp
aam
or
pushf
jmp
and
push
into
lods
lods
pop
and
shll
push
push
movsl
loopne
mov
and
leave
dec
insl
pop
add
add
mov
push
hlt
stos
pushf
and
dec
push
pop
lds
nop
aam
out
negl
sub
in
dec
push
pop
pop
dec
es
xorb
add
mov
inc
sub
lret
in
or
push
test
mov
test
lock
ja
out
ljmp
data16
cmp
jge
insb
js
and
sbb
mov
pop
xchg
mov
cmp
bound
mov
imul
in
ljmp
push
add
adc
push
rcrb
fsubr
test
ja
add
mov
fidivrs
enter
icebp
dec
add
pop
rorb
data16
fcoml
movswl
in
mov
call
xchg
jg
push
inc
inc
jnp
pop
jbe
repz
das
nop
aam
mov
cmp
pop
mov
mov
dec
fst
dec
je
imul
ss
mov
cltd
cmp
mov
cwtl
fcmovnu
cmc
fists
jge
dec
arpl
es
mov
fisttpl
and
mov
sub
leave
lea
sbb
das
or
or
adc
add
ja
and
adc
fcompp
sub
in
pop
push
stc
loop
fistl
out
int
pop
sub
add
inc
jmp
and
mov
mov
push
leave
pop
xchg
jl
stc
data16
aaa
shlb
popf
add
or
pop
inc
clc
loop
sub
out
pop
or
cmp
repz
mov
dec
dec
lret
adc
inc
cmp
pop
jne
mov
pop
cmp
push
mov
add
aad
push
pop
push
movsw
cmpsb
arpl
stos
jmp
std
jne
push
iret
repnz
mov
repz
inc
or
lret
jae
xor
jnp
pop
add
adc
add
rcll
dec
dec
shll
mov
push
je
or
ss
out
icebp
imul
sbb
insb
pop
test
movsl
ficoml
test
pop
add
pop
lcall
dec
fsubr
inc
in
roll
xor
js
nop
jecxz
dec
fcomps
mov
lcall
push
xor
daa
mov
outsl
push
scas
xchg
popa
dec
jge
mov
cmc
dec
inc
sub
mov
lcall
imul
push
lds
dec
ss
clc
add
andb
ret
jb
lret
and
xchg
mov
sarb
or
scas
sbb
push
add
mov
sti
inc
fs
test
and
mov
sbb
gs
or
jp
pushf
cmp
inc
dec
inc
das
jbe
adc
bound
movsl
in
je
cmp
repz
push
or
call
clc
aad
mov
je
jge
jbe
std
add
mov
mov
mov
xor
sbb
ds
test
lds
fiaddl
and
or
mov
jbe
xor
out
push
lea
pop
ret
xorl
adc
jo
mov
cmp
jle
sbb
push
test
mov
adc
data16
jle
ljmp
lret
cmp
lds
push
icebp
and
push
outsl
in
dec
incl
dec
aam
lret
xor
stc
adc
out
ficoms
sbb
mov
leave
jp
stos
rcrb
cmp
nop
jb
xchg
jmp
sub
xor
loop
loope
xor
cltd
je
dec
fisubl
push
push
mov
out
lods
lea
push
mov
sti
setle
pop
mov
cltd
sbb
sbb
loop
loopne
loopne
ljmp
push
arpl
sarl
sub
mov
pusha
push
xor
imul
test
fs
lret
pop
lods
push
mov
cmpsb
clc
nop
push
jo
fstpt
insl
mov
and
dec
ja
lock
hlt
pop
lcall
sub
add
movsb
mov
in
jns
ss
mov
stos
and
lcall
inc
cmpsl
mov
loopne
popa
clc
cmp
scas
mull
loope
sbb
das
mov
loop
orl
xor
push
xchg
xchg
dec
push
push
xlat
cmpsl
add
js
push
sbb
sbb
jae
cwtl
rclb
addr16
mov
test
stc
movsb
mov
popf
inc
fisttps
fdivl
dec
out
sub
js
stos
inc
lret
fiadds
xchg
jl
in
jnp
dec
lret
xchg
pop
and
jno
scas
ret
jne
lds
es
out
iret
out
mov
hlt
dec
shll
jne
cmp
subl
inc
imul
mov
adc
mov
jb
fsubs
rorl
loop,pn
cmp
ljmp
add
adc
mov
sbb
shrl
daa
mov
push
pop
or
or
into
push
and
xchg
shrb
mov
dec
imul
stc
decb
fistpll
cmp
jne
mov
ror
loop
xor
js
or
cli
inc
ret
mov
mov
push
pushf
sbb
inc
daa
lret
pop
repz
or
insl
lret
out
jno
mov
push
lock
and
enter
and
sahf
sahf
fnsave
mov
scas
mov
sub
adc
aam
lods
lret
movsb
ret
idivb
fcoml
or
push
call
mov
data16
cmp
cld
inc
dec
cmp
pop
rolb
xchg
inc
fnstsw
adc
loopne
out
cwtl
lods
cwtl
inc
push
push
mov
in
sbbl
cli
pop
adc
fdivs
dec
fsubs
pop
fwait
ds
inc
call
inc
inc
xor
test
aaa
sbb
inc
push
in
push
inc
jp
xchg
mov
rcr
add
adc
in
pop
cmp
inc
and
dec
pushf
fcomps
add
lahf
mov
ffreep
push
jb
mov
mov
xchg
pop
and
aam
lock
mov
mov
pop
lods
cwtl
in
test
dec
jecxz
cmp
test
inc
lds
adc
sarb
pop
xchg
pop
mov
xchg
push
mov
sub
adc
push
pop
imul
xor
ljmp
mov
out
stc
incl
stc
jae
mov
popa
fadd
push
aad
lahf
sbb
mov
jmp
mov
ficomps
loope
jb
pop
test
test
outsb
mov
or
int
pop
adc
push
rcll
mov
pop
rclb
inc
imul
mov
dec
and
fs
jmp
xor
dec
sub
fidivl
add
mov
mov
dec
inc
sub
aad
in
add
lea
andb
bound
jecxz
aas
push
fcomps
inc
pop
out
lcall
and
lret
push
rsqrtps
fs
repnz
daa
xor
fs
inc
jo
inc
pusha
scas
int
jns
or
insb
testl
scas
add
jbe
mov
nop
sub
ss
les
scas
xchg
mov
add
mov
inc
push
jb,pt
test
and
inc
push
into
popa
daa
in
add
lcall
gs
pop
sbb
mov
pop
imulb
jbe
mov
fbld
add
inc
or
add
sub
fsubl
repnz
movsl
sub
in
imul
push
lret
imul
and
xchg
inc
in
lock
sahf
repz
push
xchg
lahf
shll
dec
ljmp
outsl
xchg
inc
push
mov
cmc
inc
pop
cmp
pop
dec
bound
clc
movsb
mov
push
int
inc
mov
leave
repz
out
mov
in
into
push
push
xlat
mov
ljmp
jae
loop
gs
pop
pushf
mov
sti
sbb
add
cpuid
mov
dec
jbe
push
sysenter
int
cwtl
shll
cmp
out
xchg
pop
ret
add
push
clc
loop
je
das
add
aaa
in
lret
sub
cli
lahf
or
mov
sti
rorl
pop
insb
push
and
incb
arpl
xor
cs
lret
outsb
popa
adc
pushfw
and
xor
dec
sbb
mov
jge
lcall
mov
aaa
pop
lods
push
in
and
pop
xchg
xor
push
pop
mov
mov
adcb
test
jo
loope
mov
fisttpl
adc
sub
or
mov
inc
xchg
mov
iret
daa
sbb
in
adc
es
pop
dec
or
ljmp
in
push
inc
sub
mov
sarl
jge
daa
cmpb
or
mov
mov
or
mov
cmp
fadds
push
adc
and
ss
add
fistps
sbb
dec
leave
daa
sbb
cmpl
ret
aas
ret
add
lret
cmp
gs
arpl
mov
in
jge
pusha
sbb
pusha
inc
dec
or
jne
inc
xchg
mov
xor
shr
std
fsubp
lock
cltd
inc
sar
sub
lret
test
pop
mov
mov
fldl
outsb
mov
inc
pop
adc
add
rolb
adc
ss
lods
push
mov
sub
ja
das
push
icebp
mov
sti
push
mov
cmpsb
pop
ss
sbb
sahf
xchg
mov
lea
pusha
out
push
dec
xchg
sub
jno
pop
shll
sub
scas
dec
in
jns
mov
jmp
rcr
aad
idivl
mov
popf
sarl
or
jl
cmpsb
int
mov
jmp
dec
pop
cs
adcl
notb
cli
dec
in
rorb
loope
pop
aam
inc
rep
fsubrs
hlt
lret
add
ret
push
mov
push
lods
stos
xor
pop
sbb
sub
and
push
inc
jns
mov
fwait
cmp
and
cmpsl
xchg
inc
pop
dec
addb
push
or
sub
jne
mov
sahf
inc
testb
mov
sub
dec
push
cmp
andl
inc
or
and
pop
push
push
sub
add
loop
push
into
adc
scas
arpl
out
sub
sbb
scas
sbb
inc
jno
mov
mov
mov
push
cmp
outsb
inc
mov
stos
out
jns
push
lea
outsb
dec
mov
or
gs
sub
dec
repnz
adc
push
cltd
test
les
or
shlb
sahf
jmp
sarl
scas
out
mov
andl
imul
sub
stos
inc
pusha
loopne
lret
push
out
inc
jmp
imul
popf
fnstenv
lahf
ljmp
insb
push
loope
imul
xchg
inc
cmp
data16
cwtl
or
sub
add
mov
pop
jbe
nop
xchg
mov
fists
or
ficoml
fs
mov
pop
jns
movsb
add
mov
movl
xor
clc
in
shl
add
cmpb
in
mov
scas
push
dec
js
fs
leave
out
mov
in
clc
aam
cmp
popa
pop
adc
and
cmp
inc
sub
inc
in
mov
daa
pop
adc
jecxz
pop
call
gs
fwait
and
add
push
cmp
sbb
cmp
dec
scas
test
mov
pop
mov
mov
movsl
and
xor
sti
movsb
stos
popf
pop
jge
sti
out
cmp
pextrw
orb
sbb
push
add
lods
pop
arpl
xor
lcall
cli
xchg
fadd
jno
loope
pop
jmp
jg
test
mov
push
decl
cs
jl
out
cmp
add
shl
pop
adc
push
shlb
pop
andl
rolb
mov
dec
pop
or
test
cmp
stos
jb
mov
std
aam
je
leave
scas
aad
lret
mov
push
sub
test
out
aaa
lret
pop
out
or
cli
or
sbb
stos
lods
xor
or
pop
mov
mov
pop
std
push
pop
mov
dec
push
or
push
cmp
lock
or
mull
xor
cmp
movsl
sub
push
push
mov
add
cmp
jmp
mov
and
push
pop
xchg
hlt
ja
xor
dec
ljmp
inc
sahf
add
mov
sarl
sar
jne
pop
incl
sahf
pop
inc
in
inc
std
scas
and
test
adc
scas
mov
mov
roll
cmp
sub
jb
jnp
outsb
pop
add
mov
add
mov
and
mov
sub
inc
dec
inc
jmp
test
and
xchg
mov
fs
mov
in
mov
clc
ja
xor
jns
pop
and
or
cltd
mov
cli
ret
orl
add
inc
add
enter
in
pop
sahf
iret
pop
aad
cmpsl
out
jns
das
or
mov
jae
cmp
leave
and
cmpl
lds
cmc
insb
pop
out
xchg
sbb
daa
mov
xchg
mov
lods
mov
movsb
add
lods
pop
add
sub
adc
xchg
out
cmpsl
xor
pop
gs
int
into
les
fadd
outsl
notb
and
sbb
cmp
outsl
int3
xchg
icebp
enter
rorb
sbb
divb
mov
lret
out
cmp
cmc
xchg
xchg
js
fistpll
or
arpl
mov
xchg
stos
mov
roll
in
inc
fstps
jb
mov
adc
mov
sti
adc
cmp
and
add
jns
and
sldt
or
shlb
sbb
js
push
cmpsl
cmp
adc
in
mov
jne
cld
sbb
inc
clc
aas
adc
in
sub
jg
jb
icebp
lods
shl
inc
andl
fimull
shlb
adc
jecxz
jae
cltd
aam
gs
jb
aas
pusha
mov
cmp
sarl
push
pop
cmp
cmpsb
cmp
pushf
fmuls
xchg
jmp
sti
jne
pop
add
sti
cwtl
jae
mov
xor
mov
xor
sbb
push
adc
pop
mov
sahf
lock
hlt
and
lods
insb
adc
mov
fnsave
add
sarl
inc
xchg
or
fld
jno
cmc
ret
sahf
jmp
sub
movsl
lods
nop
sahf
mov
fst
pop
or
xor
push
sub
nop
std
ror
jbe
xor
inc
xor
or
add
ret
push
hlt
or
aas
addr16
mov
mov
scas
mov
popf
dec
push
cltd
lds
pop
loopne
and
out
mov
in
jno
scas
jl
pushl
fmull
das
ror
hlt
movsb
ja
ret
pop
mov
lds
test
inc
popa
or
mov
mov
push
bound
adc
xchg
jecxz
cltd
add
xchg
pop
sarb
pop
jae
aas
xchg
adc
xor
cli
dec
ret
dec
jo
adc
aad
int3
arpl
pusha
dec
lds
fldenv
sarl
jg
clc
fisubl
mov
add
fdecstp
jge
movsl
mov
mov
aas
pusha
adcb
add
dec
mov
inc
jbe
inc
jle
jne
addr16
lock
lock
fidivs
push
pop
mov
fisubrs
in
aas
out
pop
in
movsl
inc
in
xor
push
loop
pop
push
gs
ror
pop
xchg
mov
pusha
fsubr
daa
les
add
jns
mov
sbb
ja
sbb
loopne,pt
pop
pushf
or
icebp
cli
mov
pop
push
arpl
mov
dec
and
lods
mov
lcall
nop
adc
jbe
jae
rcr
dec
mov
in
add
scas
push
xlat
push
lods
rcll
and
in
es
in
mov
cmc
test
popa
add
hlt
jle
push
loop
mov
mov
scas
xchg
xor
hlt
inc
sti
xchg
pop
lret
call
push
bound
filds
jo
push
cs
test
les
cs
into
lret
xchg
mov
popa
rorl
xor
sub
jb
pop
sbb
xchg
push
in
sti
insb
push
arpl
mov
mov
xchg
xchg
int3
ja
jmp
cmc
shlb
cltd
ljmp
rcrb
xchg
mov
dec
ja
pop
stos
dec
in
loop
ljmp
push
dec
mov
lds
les
dec
xchg
push
dec
movsl
sub
and
mov
scas
cmpsl
push
scas
lods
inc
push
add
xor
movl
push
pop
jo
and
inc
icebp
push
test
push
hlt
mov
cmpsb
add
adc
mov
pushf
repnz
sbb
movsl
xchg
mov
repnz
nop
and
test
loopne
inc
xor
xchg
pop
sub
fwait
xlat
sub
pandn
cli
and
test
mov
int3
outsb
push
adc
push
bnd
inc
sub
loopne
sbb
mov
add
mov
popf
mov
fldenv
lea
mov
xor
shrl
xchg
mov
out
cmp
fdivp
cmpxchg
mov
fimull
das
int
out
add
inc
and
mov
pop
in
cmp
sbb
push
push
fcoms
hlt
std
mov
int
les
loop
mov
jb
jl
adc
mov
enter
orl
arpl
jp
push
mov
cmpsl
push
test
pop
inc
mov
call
dec
jb
les
aad
in
pop
popf
movsl
jl
or
fwait
andl
add
int
pop
int3
stos
lret
movsb
icebp
scas
add
push
push
push
dec
pop
jne
stos
das
sbb
sub
cmc
push
test
xchg
mov
lret
shrl
stos
fnstsw
daa
sbb
xlat
jne
mov
xlat
jb
push
loope
movsb
xor
rcll
xor
jge
ja
or
mov
mov
xor
xchg
ret
cmp
push
lock
jae
idiv
push
dec
fwait
add
pop
inc
repz
outsl
dec
inc
test
testl
les
aam
insb
xchg
scas
pusha
mov
and
add
mov
scas
or
mov
inc
mov
add
mov
ss
pop
xchg
sbb
add
int3
pushw
pop
and
popf
jmp
mov
and
lret
mov
insb
adc
aas
fisttps
in
fdivrs
fimuls
shrl
adc
jno
arpl
aad
sbb
add
daa
in
or
test
or
fwait
push
es
sub
fwait
jo
adc
dec
inc
jl
jmp
mov
movsb
jmp
fldt
push
jb
inc
insl
pushf
lret
stos
fcmovnu
jae
sti
cmp
test
xchg
and
cmc
xchg
testl
pop
addr16
scas
fcoms
adc
test
jp
push
and
jne
mov
daa
xchg
jl
and
and
pop
lods
les
mov
cmp
orl
iret
inc
or
push
or
daa
jbe
mov
cmp
pop
imul
lods
sbb
inc
out
sub
add
cltd
mov
push
add
jo
aas
jmp
adc
sarl
das
idivb
int3
jnp
pop
or
daa
enter
mov
mov
and
dec
adc
scas
ret
sub
pusha
mov
xchg
xchg
das
jnp
scas
nop
adc
mov
shll
jge
push
mov
sub
xor
aas
lods
fsubs
repnz
in
shlb
adc
or
jno
or
in
shrb
jbe
jle
mov
mov
std
jae
inc
push
enter
push
jle
lods
in
sub
enter
push
mov
inc
in
std
int
stc
sbb
roll
imul
mov
xchg
fldl
push
jl
push
and
repz
adc
sbb
jge
inc
and
pop
pop
cmp
loope
mov
jns
insl
sbb
mov
es
mov
sbb
js
lcall
adc
icebp
cmpsb
fcoms
fisubrl
shrb
lahf
jnp
xchg
sti
shlb
je
in
call
sbb
adc
sarb
sub
add
out
xor
push
cmp
stc
gs
add
xor
rcrb
sbb
xchg
in
mov
sbb
popf
movsl
loopne
lret
add
les
lds
mov
imul
jo
adc
popf
mov
in
loopne
jmp
push
push
js
adc
adc
stc
adc
icebp
xchg
sti
pop
and
push
out
icebp
ret
adc
loopne
sub
outsl
cmp
mov
repz
add
sub
jo
jnp
adc
or
xchg
or
cltd
mov
pop
movsl
repnz
cltd
movsb
div
jne
sbb
xchg
nop
mov
xor
into
and
mov
in
inc
or
cmp
movsb
outsb
aad
lret
adc
jp
push
xchg
xchg
add
adcb
cmp
pop
test
dec
adc
test
pop
mov
xchg
inc
sub
sbb
lcall
mov
jns
xchg
mov
hlt
movsl
pop
ja
adc
mov
pop
imul
add
add
and
int3
out
loop
imul
hlt
jne
icebp
xor
mov
xor
jmp
and
xchg
hlt
jecxz
sbb
out
pusha
sub
or
xchg
dec
adc
cltd
or
push
sbb
and
ret
jp
rcrl
jle
push
or
lahf
sub
int
xor
adc
sbb
sub
jnp
pop
sbb
add
or
test
jne
arpl
cltd
or
push
adc
in
fnstenv
mov
mov
je
and
mov
jmp
stos
mov
xchg
aam
mov
out
and
cmp
pop
inc
into
xchg
push
sbb
pushf
js
aad
outsl
mov
test
xchg
xchg
dec
clc
popa
mov
add
loop
xchg
inc
je
lret
dec
fistpl
imul
push
outsb
mov
imul
or
xorl
add
jnp
scas
push
mov
aad
loop
xchg
xchg
les
icebp
dec
clc
icebp
mov
dec
or
push
dec
and
sub
lret
nop
incb
ljmp
adc
int
outsb
cmovl
popa
aam
sub
adc
leave
arpl
out
sub
and
ss
add
insb
ljmp
icebp
mov
push
adc
fisttpl
push
lahf
pop
xor
sti
add
add
pop
lds
cltd
lcall
stc
stos
mov
dec
addl
lret
cmpsl
dec
inc
decb
icebp
insb
cmp
iret
lea
dec
lcall
out
out
adc
xchg
mov
push
inc
pop
adc
enter
mov
out
adc
mov
rcrb
cli
clc
in
outsb
mov
in
mov
push
lock
popa
lods
sbb
mov
pop
orb
adc
sub
push
push
icebp
xlat
jl
pop
aam
add
and
idivb
lock
inc
push
fildll
adcl
fsts
imul
mov
jp
inc
cli
in
in
insb
push
cld
add
lods
stos
jecxz
mov
jbe
mov
or
in
hlt
cmp
mov
mov
sub
in
sbb
sub
loop
icebp
push
mov
mov
xor
ja
aam
cmc
xor
mov
inc
xchg
mov
mov
push
xor
dec
add
mov
pop
mov
mov
divl
push
cwtl
js
lock
push
mov
mov
inc
pop
aad
ror
inc
mov
push
popf
inc
cmpsb
loope
lock
aaa
mov
add
fdiv
push
out
xchg
jle
pop
jb
fisubrs
adc
sbb
dec
ret
jp
imul
movsl
call
ljmpw
sbb
ret
pop
pop
jg
rol
adc
fadd
sbb
mov
xchg
out
and
dec
shr
xchg
xchg
pusha
mov
test
fwait
add
cli
xchg
push
test
jns
jns
out
add
mov
xor
xchg
pop
rcrl
push
xchg
rorb
inc
lods
ret
lods
jge
mov
ljmp
shld
add
sub
add
mov
inc
test
ja
xor
and
iret
imul
rorl
add
outsl
movsl
cwtl
cli
xchg
add
jb
out
stos
mov
mov
mov
mov
repnz
add
stos
dec
push
into
es
jle
sub
sub
xchg
jnp
pop
push
xor
iret
jno
out
je
mov
mov
mov
insb
rcrl
ja
fwait
jo
jl
dec
and
mov
outsl
push
push
cmp
add
aam
push
adc
int3
ret
icebp
cmpsl
stos
ss
out
pop
sbbl
sbb
sub
daa
push
or
loop
insl
lods
stos
pop
xchg
push
jle
popa
dec
mov
pop
sub
xchg
aam
outsl
and
xchg
rorl
dec
repz
sbb
cmp
push
xor
dec
mov
das
and
xchg
pop
inc
fucomi
mov
xchg
add
lock
loop
outsl
pop
cmpsb
jbe
and
shrl
pop
call
in
iret
jbe
push
sub
mov
inc
mov
mov
loop
add
enter
adc
shlb
pop
cmc
out
cmp
inc
fwait
pop
fdivl
popa
aaa
cmove
jmp
mov
mov
mov
xlat
sbb
jecxz
into
cltd
fs
mov
pop
shlb
pop
lds
jo
scas
pop
mov
out
ljmp
push
imul
push
pop
filds
mov
in
pop
cs
mov
rclb
dec
pop
sbb
xor
scas
or
add
and
pop
xor
popa
sub
adc
jmp
xchg
jnp
lea
or
ja
xchg
jmp
and
stos
sub
inc
shrl
rclb
mov
lcall
lods
lods
lds
aad
testl
test
lcall
loope
mov
or
sub
fadds
aad
int
jns
push
fstpt
add
stos
into
sbb
push
jl
test
sub
stos
je
int
in
outsl
hlt
lock
sbb
outsb
adc
pop
jne
rcr
ret
fcoml
jmp
mov
cmp
mov
std
rclb
xchg
and
in
out
cltd
test
add
mov
insl
mov
push
js
xchg
jle
filds
dec
pop
testl
sbb
and
mov
cmp
scas
pushl
or
js
jns
mov
movsl
adc
iret
mov
loopew
lcall
aaa
gs
pop
mov
add
pop
xor
dec
incb
out
sub
xchg
test
push
int
out
fs
insb
jl
mov
cmp
adc
daa
sbb
push
add
push
lods
das
mov
nop
fwait
dec
cli
mov
xchg
push
xchg
int
imul
sub
out
sbb
sub
add
sbb
adc
sahf
int3
arpl
inc
out
gs
test
nop
add
pop
xor
loopne
mov
shlb
xor
dec
lods
in
xor
fcoml
lcall
sti
gs
lods
add
pop
mov
and
cs
add
int3
cld
cltd
pop
inc
mov
cli
cltd
fnstsw
inc
mov
fadds
stos
jmp
hlt
stos
xchg
das
sub
scas
sbb
and
mov
iret
mov
xor
jb
out
jb
xor
aaa
ljmp
loope
ret
mov
push
add
inc
hlt
push
add
xchg
out
out
or
sub
add
leave
mov
orb
sub
dec
out
mov
mov
or
mov
in
insb
sub
xor
cli
iret
xor
mov
pop
cmp
andb
mov
int
jmp
in
adc
inc
adc
vmaxpd
jmp
sub
in
outsl
mov
jle
jae
and
and
aas
adc
repz
or
add
mov
arpl
or
or
aam
mov
pop
push
std
stos
push
add
jge
ja
aad
sub
inc
jns
test
pushaw
stc
mov
lcall
mov
dec
mov
ret
mov
xchg
adc
dec
lods
mov
cmp
mov
stc
stos
aaa
mov
dec
push
fnstenv
out
cltd
xor
mov
pop
inc
xchg
mov
jne
sbb
xchg
inc
xchg
pusha
push
call
xchg
inc
sub
push
jns
movsb
ret
xor
add
popa
arpl
xchg
aad
js
pop
lcall
lds
mov
mov
sbb
aaa
ret
out
xor
loop
ret
outsl
int3
ds
inc
ja
shr
sbb
jl
scas
mov
lea
push
mov
dec
pop
jmp
push
dec
cltd
iret
rcll
mov
pop
add
push
fstpl
arpl
jmp
ljmp
arpl
jg
iret
fnstenv
out
icebp
rcrb
sub
or
jle
mov
and
flds
push
sti
negl
mov
enter
jno
mov
xor
cmp
fdivs
movsl
cmp
addb
jb
addr16
push
and
addr16
lret
jns
adcl
push
or
aam
cmpsl
add
push
jnp
xchg
nop
pop
sub
fldenv
add
scas
ret
fbld
int
jle
lods
lock
pushl
cmp
aam
pop
sub
fs
mov
insb
push
test
and
push
leave
enter
inc
xlat
jnp
mov
js
lcall
fisubrs
sub
aam
add
cmp
jb
fstpl
add
cmp
ss
cld
xor
aas
dec
ds
mov
incl
loop
nop
adc
cmpsb
dec
fldcw
pushf
sbb
sub
sbbl
sub
cli
push
loope
fcmovb
mov
mov
dec
insl
xchg
xorl
imul
into
clc
rorb
lea
jmp
push
jae
aad
sbb
mov
fwait
xor
daa
adc
out
cmp
fisubs
xor
dec
push
inc
push
inc
push
sbb
movsb
sub
int
dec
jg
xorb
hlt
aas
xchg
jno
xchg
jo
and
insb
or
in
push
mov
pop
lahf
sbb
rol
mov
add
mov
lods
imul
addr16
sub
adcb
cmp
fisttpl
lds
sbb
sub
pop
mov
and
shr
add
and
dec
adc
jo
xchg
xor
sub
and
cli
pop
adc
push
inc
cmp
dec
cmpsb
lds
xchg
mov
lahf
cltd
pop
and
mov
add
pcmpgtw
sbb
pop
push
sbb
icebp
jmp
push
fs
jle
add
inc
adc
adc
movsb
dec
xor
loop
cmpsl
sub
add
sarb
aad
and
icebp
add
loopne
pop
loop
jmp
ret
daa
pop
jle
adc
or
ja
cli
and
imul
mov
xorb
nop
xchg
mov
rcl
imul
mov
adc
xchg
add
xchg
push
cmc
xchg
xchg
das
or
scas
js
clc
loop
add
cmc
jbe
cli
enter
and
mov
fs
pop
pop
movsb
mov
and
and
pop
push
lds
jmp
pusha
ja
int
outsl
repnz
rcll
cmpl
pop
cs
fldenv
push
popf
mov
stc
notl
mov
nop
in
sarb
cmp
addr16
wrmsr
mov
test
popf
test
adc
pop
pop
xchg
enter
jecxz
scas
mov
xor
push
push
sbb
mov
lret
mov
mov
xchg
scas
sub
lahf
xchg
add
ds
cs
add
test
cmpsl
std
test
shr
sub
xchg
mov
dec
nop
leave
pushf
aaa
xor
add
dec
dec
loopne
dec
jg
sarl
pop
fdiv
push
dec
add
push
aam
xchg
push
mov
cmc
dec
xlat
sbb
lods
pop
lods
dec
imul
push
cmc
add
pop
xor
insl
daa
cltd
cmp
imul
xchg
adc
les
insb
jbe
cmpsl
imul
jbe
mov
pop
popf
sahf
adc
lahf
in
call
movsb
loop
enter
cmp
push
mov
jge
sub
jbe
jne
sbb
push
sub
sbb
ret
push
dec
add
pop
xchg
ss
imul
stc
pop
cmp
push
cmpsb
loope
jle
arpl
arpl
cmp
nop
lds
pop
out
outsl
leave
shl
dec
frstor
pushf
dec
in
dec
out
fcomps
imul
mov
lods
sbb
es
jecxz
lods
add
cmp
and
lea
xchg
jl
stos
fildl
xor
icebp
jp
xchg
inc
addb
sbb
sbb
cmp
push
mov
add
sbb
adc
hlt
in
mov
imul
sti
out
out
cmp
sbb
xor
inc
xor
dec
int
pushf
push
jae
xchg
pop
fidivl
sbb
cli
inc
dec
xchg
lcall
push
icebp
incb
popa
std
and
das
das
add
nop
adc
mov
pop
dec
xchg
mov
dec
mov
cmp
xchg
mov
stos
xchg
fsub
mov
jo
mov
in
loopne
pop
cmp
in
les
test
push
cmpsb
in
or
sahf
pop
push
shrl
dec
add
jle
pop
jmp
jecxz
and
das
xchg
lcall
cmp
fnstcw
jo
jne
rol
and
push
pop
sbb
shll
hlt
imul
add
notl
mov
cmc
and
or
mov
call
jmp
push
clc
inc
test
adc
xchg
jge
pop
hlt
xchg
sub
mov
pop
or
pop
in
je
imul
je
lock
jl
dec
xchg
cmp
shrb
dec
add
jle
out
sbb
adc
mov
ret
dec
cld
push
mov
leave
pop
aam
push
popf
dec
js
xchg
data16
std
xor
mov
push
ret
mov
in
or
addl
push
xchg
cmc
add
push
pop
jg
dec
out
xchg
and
push
inc
cmp
sub
mov
push
imul
shlb
out
xchg
scas
movl
mov
jns
orb
outsl
xlat
mov
iret
cmp
addb
fistpl
daa
push
pop
mov
pusha
test
xchg
lahf
addr16
rcl
pushf
sbb
pop
ret
sbb
add
mov
inc
in
insb
addl
jp
ds
sub
ja
pop
popf
adc
xchg
inc
xchg
stos
fsts
inc
ss
inc
enter
push
ss
jae
pop
add
insb
adc
mov
into
out
push
sbb
btr
xorb
jmp
inc
pop
and
pop
pusha
insl
aam
xor
add
jl
push
in
jle
addr16
dec
xor
fnclex
ja
cltd
call
push
mov
pop
loopne
ss
dec
pop
jbe
fidivs
and
in
ljmp
xor
ja
orl
imul
lock
popa
ret
idivb
xor
cmpsl
imul
cmc
and
imul
push
and
cmc
mov
and
lret
mov
outsb
iret
cs
mov
clc
jle
rclb
stos
stc
popa
test
and
dec
xlat
xor
jnp
out
pop
cmc
mov
and
adc
insb
icebp
jg
sbb
arpl
test
mov
shl
mov
sub
push
paddw
sbb
xchg
mov
out
scas
mov
pop
xchg
push
sub
test
aaa
push
push
ljmp
xchg
iret
es
adc
xchg
aas
movsb
cmp
lds
lret
jge
mov
or
push
pop
pop
or
ds
cltd
out
mov
mov
cmpsl
loopne,pt
add
fbld
jmp
dec
movsl
dec
mov
addb
repz
fadds
sub
inc
xchg
iret
sub
aaa
frstor
mov
ficompl
mov
or
nop
xchg
inc
lea
mov
adc
lods
int3
pop
in
and
mov
je
and
scas
lds
xchg
push
je
inc
or
xor
loopne
add
repz
push
lret
push
dec
or
dec
mov
or
lods
cmpsl
xchg
in
aas
lret
jb
js
adc
int
ret
in
out
inc
inc
lock
ss
jbe
sbb
push
lods
jecxz
add
int
nop
fldl
mov
mov
js
inc
ja
hlt
and
fisubl
adc
push
mov
lret
mov
jno
mov
mov
fisubl
and
push
and
mov
testl
nop
sbb
lahf
orb
adc
inc
repnz
dec
xor
aaa
push
nop
sahf
cmp
rcll
fs
mov
inc
pop
sbb
test
sbb
pusha
dec
pop
cmp
iret
inc
pushf
dec
cmp
pop
jbe
mov
int3
mov
jb
iret
add
sahf
ret
push
orps
movsb
clc
loopne
pop
clc
mov
dec
aam
mov
mov
push
cmovle
mov
dec
pop
cld
mov
ss
xor
sub
rcl
cld
mov
xchg
pop
icebp
outsl
mov
pop
xor
data16
sti
jns
mov
push
sbb
ror
push
movsb
and
lods
popa
push
testb
mov
lea
lods
push
in
add
int
fisubs
mov
xor
and
repz
inc
or
das
xor
sub
push
imul
cld
data16
or
bswap
and
push
xchg
mov
adc
fnstenv
xor
jle
xor
subb
repz
xchg
push
add
add
lock
inc
arpl
inc
nop
lea
xchg
push
lret
inc
mov
jg
lea
notl
and
mov
push
adc
mov
fistl
test
outsl
add
movsl
mov
cwtl
ljmp
fisubrs
xchg
test
das
add
sub
jmp
jbe
or
dec
sbb
cwtl
repnz
jmp
roll
out
int3
loop
add
pop
out
sbb
loope
stos
cli
xchg
jns
sub
xor
or
cmp
mov
mov
push
popa
out
orl
stos
and
and
lods
jg
sbb
inc
xchg
push
inc
mov
test
lods
add
sahf
sti
xor
mov
or
dec
cmpl
mov
sar
cmp
lds
cmp
push
lock
cmp
scas
popa
cltd
sub
push
xlat
data16
jmp
mov
subl
jl
xchg
adc
sub
dec
push
mov
testl
mov
sbb
inc
ret
iret
push
push
mov
sub
dec
cld
cmp
lret
scas
rcll
rcrl
insb
in
out
stos
sbb
mov
fcomps
and
movsb
pop
cwtl
cwtl
xor
ficoml
sbb
adcl
cmp
in
xchg
pop
mov
push
leave
adc
inc
in
inc
test
dec
xor
push
cwtl
cs
repnz
sbb
xlat
test
xchg
inc
outsl
mov
mov
sub
xchg
xlat
jl
jns
stos
or
mov
dec
pop
rclb
cwtl
jg
repz
cmp
lahf
rol
dec
adc
sti
cmc
aaa
aaa
and
jge
sbb
out
fbstp
inc
add
sbb
out
clc
fs
rclb
and
ds
ret
je
mov
fwait
inc
test
cmc
fldenv
addb
or
clc
lret
insl
ja
adc
in
xor
or
les
lea
jb
jb
xor
sbb
lock
lahf
es
scas
push
dec
xchg
mov
xor
insb
ret
movsl
sbbb
scas
and
inc
xchg
lods
push
out
mov
jns
cmp
mov
mov
ljmp
sub
sbbl
in
out
std
hlt
ja
xor
addb
ljmp
lds
or
scas
cli
sarl
in
sbb
cld
sub
sub
mov
and
pop
andl
js
xor
outsl
mov
xor
push
add
stc
dec
and
leave
xor
push
cmp
and
push
pop
fstpl
roll
xchg
test
lock
add
jmp
inc
rcrl
test
js
nop
pop
test
and
ljmp
push
sarb
je
inc
jae
jecxz
fisubs
int3
lret
cltd
cmp
pop
pop
cmpsl
mov
dec
mov
daa
sub
mov
xor
jle
hlt
mov
cmp
testb
sub
movsb
scas
test
or
ss
mov
fwait
imul
inc
out
lods
push
mov
stos
inc
sbb
or
inc
shll
mov
pop
hlt
mov
adc
bnd
daa
out
pusha
mov
icebp
scas
or
mov
sti
mov
mov
ret
push
aad
fcoml
jl
addr16
mov
jbe
jb
xor
dec
fisttps
aad
xorl
lret
jno
out
pop
cmc
mov
shrl
xor
mov
push
scas
rolb
ss
adc
jbe
je
imul
xchg
add
das
popa
pop
test
popa
adc
or
shll
lret
int3
fisubl
mov
shrb
xor
out
gs
rcrb
jae
loop
arpl
add
sub
push
mov
lcall
xchg
sbb
mov
push
xor
cwtl
cmp
pop
fimuls
mov
cltd
cmp
lcall
into
xchg
stos
shrl
popa
flds
xchg
shll
shrb
clc
incb
test
jae
mov
shrl
and
stos
jl
sub
enter
movsl
pop
xor
jns
ret
iret
iret
mov
adc
mov
lret
mov
jp
loope
jle
lret
adcb
out
sahf
lcall
in
jbe
pop
mov
dec
cli
test
lods
dec
out
inc
mov
xlat
mov
jno
xchg
sub
push
shlb
push
adc
mov
mov
push
push
and
adc
sbb
jle
mov
mov
pop
popf
jne
js
fistpl
pop
pop
adc
lret
mov
movsb
mov
or
dec
pop
mov
inc
jo
dec
pop
stos
fidivl
mov
jl
repz
out
pop
dec
jo
lock
sbb
and
sbb
adc
xchg
pusha
xchg
add
cmp
xor
ret
dec
lret
sbb
shl
pop
inc
inc
movsb
sub
jne
adc
lock
icebp
mov
jle
and
fchs
stc
xchg
and
sahf
ljmp
aaa
aaa
test
orl
push
dec
mov
outsl
mov
clc
lcall
mov
dec
int
push
out
jp
int
pop
jo
mov
js
jmp
cmp
dec
js
mov
push
mov
mov
sti
in
pop
lds
addl
daa
ret
nop
cmp
pusha
add
cmpsb
shr
add
fs
push
lea
int3
push
xor
sbb
sarb
sahf
adc
pop
mov
scas
lret
call
xchg
ret
xchg
inc
daa
outsb
sub
int3
sbb
xor
je
sub
das
lods
subl
fdivrl
mov
dec
sbb
adc
cmp
jmp
pop
bound
dec
xchg
jecxz
into
aad
mov
jp
fidivrl
mov
xchg
imul
pop
mov
data16
in
or
adc
rclb
arpl
sub
xchg
hlt
add
pop
repnz
lea
outsb
inc
and
sbb
negl
xchg
adc
sub
push
sbb
cmpsb
fs
popl
icebp
enter
out
mov
fldcw
sub
negb
movsb
and
ljmp
push
add
adc
add
sub
push
sahf
in
pop
add
fistl
loopne
mov
sbb
ret
xor
jle
rcll
imul
mov
dec
inc
mov
xchg
sub
outsb
jl
andl
cmp
dec
ret
sbb
out
testl
inc
pop
sbb
out
out
pop
and
imul
aas
hlt
sarb
icebp
out
xchg
lds
negl
gs
mov
jno
mov
pop
mov
mov
into
inc
jle
pop
mov
int3
jne
jne
mov
xorl
jbe
stc
cmp
push
je
and
int3
outsb
imul
push
xor
jg
jbe
mov
push
mov
mov
inc
jecxz
lods
mov
adc
add
popa
or
das
add
out
out
lds
xchg
dec
or
push
mov
stc
inc
ret
imul
push
mov
js
sbb
mov
mov
fxch
mov
dec
int3
mov
lret
fwait
pusha
pop
xchg
cld
loope
dec
xchg
insl
mov
mov
push
jbe
jmp
xchg
cltd
ja
sahf
mov
fs
sbb
sbb
jmp
nop
or
mov
sub
or
cmp
mov
cmpsl
mov
test
lods
out
in
mov
jg
js
repnz
int3
ret
movsb
cli
xlat
je
fwait
jnp
js
gs
adc
popl
mov
or
int3
mov
repz
dec
mov
push
imulb
inc
jb
mov
xchg
dec
xchg
inc
repz
inc
andb
idiv
fs
in
add
ds
daa
pop
data16
pop
addl
or
xchg
repz
gs
in
insl
sahf
xor
mov
cmp
lock
jb
xchg
pusha
cmp
roll
xor
gs
jmp
ja
bound
mov
add
daa
in
dec
add
mov
push
dec
out
gs
adc
movsb
push
and
mov
andl
add
push
sub
sbb
push
js
dec
sbb
in
test
stc
stos
and
sahf
movsl
sub
ds
test
test
stos
mov
add
stc
push
pop
das
mov
push
dec
dec
adc
cld
add
lds
xchg
addr16
out
fwait
cmpsl
stc
mov
xor
xchg
mov
leave
mov
dec
xchg
cmc
jle
shr
or
iret
dec
loopne
mov
add
scas
mov
dec
ret
aam
popa
arpl
inc
inc
shrd
add
mov
daa
cmp
sbb
fdivrp
mov
les
add
lret
jmp
cmpl
and
imulb
insl
xchg
lcall
and
aam
pop
shr
mov
jl
push
jb
jb
or
stc
ror
pop
add
push
psubsb
stc
add
xor
push
add
mov
xchg
push
pop
adc
jo
xlat
push
adc
sbb
push
xor
enter
mov
inc
rolb
add
pop
clc
and
les
sub
mov
push
dec
sub
xor
subb
mov
outsl
pop
pop
pusha
jnp
adc
sarl
dec
icebp
daa
jno
loop
lods
pop
xchg
mov
jp
cwtl
test
das
fstp
inc
aas
xor
sbb
push
std
aas
in
pop
daa
inc
data16
stc
mov
or
sbb
dec
lea
sub
rolb
and
outsb
scas
and
ja
ss
inc
pop
jmp
add
add
lds
lret
dec
push
adc
cld
loop
lret
mov
and
mov
sbb
xchg
adc
icebp
mov
idivb
addr16
cs
mov
mov
fstps
xor
xchg
mov
cmp
enter
add
loope
bound
add
push
cs
out
mov
lret
cmp
push
imull
push
ja
out
fdiv
mov
out
call
lret
add
fwait
cmp
icebp
les
sub
sbb
jnp
fisubl
inc
mov
sbb
jmp
ljmp
xor
jg
cmp
pop
inc
inc
jmp
sub
scas
mov
pop
cld
adc
push
xchg
or
int
rcr
pop
imul
jb
lds
movsl
lods
aaa
data16
xchg
rolb
out
adc
loope
lret
aam
sub
push
pop
and
lock
insb
or
aad
repnz
subb
loope
in
vmwrite
jecxz
gs
sub
in
pop
imul
jge
lds
insl
shll
cmp
add
inc
and
inc
cli
pop
aad
xchg
int3
or
sbb
outsl
pusha
pop
push
xor
mov
leave
inc
stos
dec
jmp
sbb
fdivs
daa
aas
mov
sub
dec
lock
sbb
test
mov
pop
push
imul
dec
jb
jle
jle
add
sbb
cmp
push
jo
gs
out
push
inc
cli
arpl
cmpsb
mov
sub
enter
test
insl
imul
lods
std
or
call
in
mov
pop
xchg
cmp
mov
mov
push
movsb
das
arpl
pusha
les
add
enter
inc
jl
movsb
lods
cmp
es
mov
mov
fsubrs
std
push
mov
or
xchg
in
jge
xchg
xor
sub
mov
ret
cmp
bound
je
movsl
out
sbb
sub
xor
daa
stc
outsb
insl
lahf
mov
push
cmc
orb
jb
cmp
lds
mov
sub
pop
mov
push
fimuls
xchg
sti
imul
mov
inc
cmp
sub
and
mov
in
lock
repnz
mov
rcll
daa
lret
lea
xchg
jle
je
mov
dec
cmp
pop
xlat
enter
das
pop
add
mov
add
ljmp
mov
mov
cmp
or
cmp
push
cld
outsl
mov
adc
mov
out
rorl
pop
or
cmpsb
jne
pop
sar
test
inc
sbb
dec
xor
push
test
fsubs
lods
inc
lods
adcl
pop
cmp
push
mov
pop
push
mov
test
jne
adc
pop
mov
pop
popf
insb
imul
mov
push
repz
pop
adc
popf
mov
mov
dec
adc
stc
mov
xchg
jnp
pushf
mov
scas
mov
and
cmpsb
adc
xor
stos
loope
bound
fistl
sti
aas
enter
addr16
mov
push
xlat
xor
xchg
jmp
jne
pop
cmp
das
lahf
mov
into
cmp
mov
leave
iretw
jb
loope
in
mov
test
add
mov
lock
neg
sbb
mov
mov
cmc
pusha
cmp
nop
sbb
aaa
icebp
inc
or
dec
mov
pop
xor
xchg
sub
fiadds
cmpsl
frstor
outsb
cwtl
mov
pop
std
fstps
daa
adc
mov
adc
and
shll
xchg
add
testb
aad
or
add
or
ret
pop
push
jge
sub
lock
xor
dec
inc
or
idivb
inc
cli
mov
xchg
mov
fists
jo
push
jno
mov
fstpt
fists
add
aaa
xchg
mov
pop
arpl
cmpsb
movsl
test
mov
leave
aam
push
dec
out
jmp
mov
leave
orl
push
fstpl
xchg
mov
das
sti
scas
ds
int
and
out
inc
outsl
or
int
jmp
scas
pop
aaa
movsl
clc
lahf
shll
mov
push
sbb
or
pop
sub
mov
adc
mov
jge
mov
outsl
fcompl
cmp
ficoms
into
loope
mov
pop
ja
mov
xor
ret
sub
ss
mov
inc
dec
shrb
sbb
xchg
sbb
xchg
jno
push
cmc
ffree
imul
lret
loope
jbe
xchg
scas
movsl
push
daa
inc
or
test
divb
mov
int3
fucomi
xchg
pop
mov
pop
dec
shrb
cmc
cltd
cmp
push
jecxz
test
in
out
sbb
inc
mov
pop
and
pop
out
mov
loope
jmp
push
cmp
or
call
addr16
rcrb
bound
cwtl
cmp
inc
and
cwtl
adc
loopne
cld
mov
bound
rcr
lret
leave
adc
sbb
jge
mov
aaa
push
pop
push
cmpl
inc
ficoms
lret
adc
dec
inc
cmp
aad
js
pop
test
stos
mov
jg
adc
nop
int3
inc
scas
ret
nop
add
nop
popw
add
lret
subb
rol
jl
ret
int3
sub
xchg
adc
cmp
js
mulb
push
je
mov
add
jae
pop
jl
adc
inc
dec
andl
dec
test
out
mov
inc
add
lock
mov
xchg
pusha
fwait
add
jb
sub
faddl
sbb
xchg
mov
fcomip
int
cld
leave
push
lock
fcmovnu
lahf
dec
aaa
xor
jnp
pusha
pop
jmp
mov
add
fcomps
or
sbb
pop
lock
adc
inc
xchg
shll
aas
mov
loop
cmp
cmpl
loope
pop
jle
xchg
xlat
cmpsl
sbb
dec
into
inc
or
or
lds
pop
icebp
inc
sub
ljmp
push
enter
inc
lret
mov
xor
cli
fiaddl
pop
push
jl,pt
sbb
mov
pop
aaa
cwtl
mov
repnz
add
pop
leave
xchg
mov
push
adc
enter
mov
out
fwait
int3
bound
cmp
xchg
cmp
mov
pop
cli
outsl
dec
jmp
mov
rcll
mov
inc
bound
test
sub
xchg
lea
lret
push
add
adc
aas
jge
sbb
adc
popf
add
inc
xcrypt-ctr
or
lock
cmpsl
mov
mov
push
and
mov
push
sbb
xor
rcrb
jg
xor
mov
inc
aas
repz
pushf
gs
xchg
inc
insl
rcrl
mov
mov
xchg
add
sbb
in
bnd
adc
jecxz
nop
cmpsb
inc
cld
jnp
mov
push
xchg
nop
loope
orb
fldenv
and
sub
jae
lret
cmpsb
clc
js
xlat
movl
hlt
xchg
adcb
adc
xchg
or
rorb
and
enter
push
jge
push
sub
push
add
psubsw
mov
sbb
sbb
js
jnp
pushf
ficompl
scas
sbbb
inc
jne
mov
outsl
jbe
test
jns
daa
pushf
inc
push
bound
addl
pushf
cltd
ja
loopne
cmp
adc
xchg
enter
push
jnp
cmp
push
jecxz
cmp
push
jmp
jle
add
push
and
jo
xchg
push
lock
sub
mov
loope
adc
sub
dec
mov
ss
push
repnz
jb
addr16
or
push
xchg
movsb
xor
clc
mov
cmp
jle
js
mov
aas
adc
sub
aaa
gs
iret
push
mov
push
xor
pushf
xor
mov
in
push
lock
insb
sub
sarl
cmp
cmc
cmpsb
mov
push
pop
notl
lods
sub
ret
xchg
xor
mov
js
fidivrl
inc
dec
sbb
icebp
dec
or
in
clc
cmp
ror
mov
ds
pop
or
add
cmp
in
cmc
pop
jg
push
xlat
sbb
add
hlt
pushf
icebp
in
js
push
or
fsubs
xchg
adc
in
and
enter
mov
sbb
lcall
xor
lods
pop
mov
jg
out
cmc
sbb
jmp
push
add
dec
mov
mov
ja,pn
cltd
out
mov
mov
xchg
pop
cmpsl
adc
jp
jno
or
cltd
xchg
iret
inc
adc
lahf
sub
xchg
cmp
jp
cmp
cmp
pcmpgtb
iret
jl
mov
cld
fnstcw
cmpsb
xchg
inc
push
push
inc
fnsave
insb
xchg
adc
sub
test
aad
cmpl
xchg
ss
sub
mov
scas
inc
les
adc
jle
cmp
add
stos
sub
mov
sub
mov
xorl
or
fmuls
stos
push
push
inc
cmpb
rcll
jae
cmp
rcll
push
xor
daa
sbb
loop
dec
mov
adc
repnz
es
aad
xor
hlt
nop
insl
icebp
xchg
idivb
in
stos
or
inc
test
loopne
xchg
addr16
cs
or
mov
dec
mov
jg
cmp
inc
cmpsb
dec
mov
push
fildl
scas
mov
ljmp
andb
pop
add
jnp
xor
cmpsl
repz
jo
subb
sbbb
pusha
pushl
in
mov
mov
xchg
mov
sub
xlat
inc
lret
push
mov
and
scas
pop
fidivrl
sahf
pop
xor
jo
or
aad
in
loopne
movsl
loopne
and
inc
aaa
gs
faddl
fmul
inc
cmp
clc
jl
add
or
lods
ret
sar
leave
scas
and
cmpsb
mov
sbb
movsl
dec
cwtl
stos
or
repnz
mov
sbb
dec
and
cmp
aad
stc
cld
xchg
je
in
pop
addl
jmp
cmp
lahf
push
mov
xchg
mov
cmpsb
fmull
inc
daa
in
sahf
sbb
loop
push
dec
or
add
cmpss
push
adc
cld
lahf
ja
fs
xchg
jne
dec
xchg
loopne
outsb
pusha
jns
xor
xchg
inc
sub
repz
shr
jp
or
test
fcoml
dec
xchg
int
add
out
jnp
push
stc
xlat
sbb
mov
pop
push
inc
push
inc
mov
movsb
cmovnp
vpslld
rcrl
out
lret
icebp
and
push
jae
imulb
lea
data16
xor
mov
dec
add
loope
cmp
cwtl
pop
mov
test
out
fnstsw
push
xor
imul
jnp
or
stc
xor
das
mov
in
adc
jno
jle
test
out
adc
push
lods
incl
repnz
mov
adc
mov
dec
jle
pusha
mov
subl
or
or
sub
cmpsb
enter
adc
pcmpgtd
into
mov
cmp
call
cmpsl
sub
sbb
movsb
loope
pop
fmuls
movsl
jle
je
adc
cmc
ja
ficomps
pop
or
xorb
fcomip
notl
inc
sbb
mov
sbb
ret
jnp
mov
push
ret
add
push
or
or
call
jle
std
jp
cmpsl
xchg
nop
push
xchg
not
insb
pushf
negb
in
fwait
push
outsb
mov
inc
repnz
ror
lahf
repz
dec
loop
mov
jl
std
xor
rep
pop
test
push
dec
andb
cwtl
cmp
out
ljmp
dec
jle
cwtl
stc
out
mov
pop
jae
or
lods
inc
mov
pop
push
cmp
xchg
sti
sbb
mov
pop
jle
dec
iret
and
mov
sbb
lahf
push
mov
cli
sbbl
mov
mulps
mov
leave
mov
mov
lods
test
mov
xor
ret
jae
mov
dec
in
imul
std
ror
movsb
sub
cs
mov
jo
in
stos
out
xor
xor
and
add
add
js
jno
mov
lock
mov
mov
pop
push
lahf
inc
je
gs
mov
mov
pop
loop
popa
mov
cmp
xchg
addr16
mov
popa
and
cltd
into
sarb
and
add
ror
cli
inc
outsl
fs
out
movsl
xchg
testb
cmp
pop
dec
in
scas
push
shrb
fst
sbbl
out
mov
aaa
fisttpll
cmp
or
mov
push
cld
aaa
test
inc
mov
jne
je
lea
jecxz
inc
dec
sbb
xchg
out
loop
test
ja
inc
inc
mov
jle
stos
xchg
imul
xchg
sbb
mov
add
dec
outsl
jmp
iret
xchg
mov
dec
mov
ret
lret
sub
jbe
or
pop
mov
inc
push
ret
mov
jl
xchg
loope
mov
dec
lods
adc
jno
rcrl
stos
and
xor
push
inc
inc
das
adc
xor
or
orb
pop
push
mov
mov
addr16
cmp
bnd
xchg
rclb
cmpsb
xchg
xlat
clc
push
pop
add
cmpsb
sbb
add
in
sub
jns
mov
dec
fwait
dec
test
jae
mov
or
inc
or
sub
mov
mov
addl
andb
push
or
jns
xchg
jnp
fcmove
loop
out
popa
outsb
call
add
and
outsl
cli
xor
inc
and
add
mov
fmul
fisubrl
ds
mov
popf
lcall
pop
cld
cmp
movsb
xchg
jp
dec
or
jo
xchg
add
jg
frstor
fdivs
rclb
xchg
pusha
and
cli
int
out
mov
mov
inc
sbb
test
popf
push
hlt
sbb
fists
inc
rol
mov
daa
fcom
xor
dec
xchg
sub
and
ret
in
jne
ja
mov
cli
mov
jnp
lahf
das
xlat
lahf
jecxz
mov
leave
popa
or
jo
jp
sbb
ss
xchg
or
jbe
out
lret
movsb
mov
jmp
mov
pop
outsl
les
and
add
mov
fisttpll
push
pop
in
cmpsb
dec
push
xchg
scas
pop
cmp
fiadds
lods
dec
in
inc
fidivrs
mulb
mov
stc
push
scas
dec
lret
popa
mov
sub
loop
leave
adc
xor
mov
jne
sub
dec
push
xlat
and
imul
sbb
int3
shr
ds
xchg
pop
out
push
outsb
jbe
fidivrs
sti
dec
aas
nop
ss
pop
imul
hlt
fwait
and
jbe
jb
xor
imul
inc
movsb
adc
fsubrp
insl
adcl
sbb
sub
push
sub
aad
sti
cwtl
mov
mov
outsl
jns
mov
inc
pop
gs
stos
fsubs
or
mov
inc
jmp
iret
popa
adc
nop
mov
sub
adc
ret
push
sub
icebp
fiaddl
mov
push
cmp
add
xlat
jge
nop
mov
sub
jle
cmp
mov
mov
add
rolb
adc
lds
in
mov
int3
xchg
clc
jns
mov
sbb
mov
mov
scas
sub
int3
xchg
or
push
mov
jg
mov
cli
in
repz
std
inc
fldcw
jnp
adc
pop
xor
std
test
out
popa
cmp
mov
lahf
lods
xor
jns
sub
mov
aaa
icebp
jmp
inc
scas
pop
loop
aas
add
lea
sbb
shl
jl
rcrb
cmpsb
push
jl
shl
sub
inc
loop
es
gs
mul
xchg
sub
hlt
mov
inc
jbe
ret
lea
std
pushf
adc
cmp
jecxz
inc
bound
mov
cmp
ret
neg
sbb
pushf
jb
enter
dec
push
mov
mov
stos
arpl
sub
or
mov
pop
jecxz
mov
inc
fadds
push
rolb
pop
adc
pop
xchg
dec
adc
cli
xchg
jg
xor
adc
daa
add
das
push
or
and
repnz
push
js
jmp
addr16
lock
adc
out
arpl
pop
mov
add
iret
push
adc
ret
jle
xor
or
add
cmp
add
sbb
add
mov
nop
lret
jne
xchg
fs
ss
in
loope
scas
daa
je
and
aad
sub
add
mov
gs
andl
pop
mov
mov
push
loope
iret
jne
inc
orl
xchg
jge
jl,pt
ds
adc
dec
inc
lds
inc
pusha
add
scas
subl
lret
mov
xchg
fistps
movb
mov
cmp
sub
cltd
mov
xchg
fdivrs
push
xchg
test
stos
mov
or
aaa
hlt
enter
add
outsl
daa
and
mov
add
into
cmpsb
clc
lds
outsb
sub
push
or
push
sub
adc
mov
pop
dec
in
xchg
xchg
stc
subl
jmp
sub
add
mov
mov
cmp
jmp
dec
cld
std
repz
sbb
and
cld
shlb
inc
mov
jl
xor
outsb
jg
and
dec
jl
push
jle
ds
pop
mov
idiv
dec
cmp
inc
fisubl
mov
adc
jle
push
dec
sarb
test
xchg
mov
out
stos
cmp
jae
jb
movsb
out
ror
push
mov
cmp
cmp
fisubl
loopne
or
ja
repnz
into
xchg
outsb
dec
xor
xchg
sub
pop
xchg
jne
push
scas
lret
hlt
xchg
sub
jmp
dec
inc
mov
adc
push
sub
aaa
or
mov
inc
mov
int
jg
loop
movsb
sbbl
lret
mov
pop
mov
str
pop
adc
mov
and
shr
add
cmc
push
fistpl
inc
cmp
scas
inc
sbb
cmp
test
inc
outsb
mov
add
jle
fistpl
xchg
je
and
xchg
sub
es
cmp
bound
dec
xchg
ret
clc
xchg
repnz
leave
repnz
lods
and
and
push
fwait
inc
push
dec
sbb
fucom
shlb
lret
mov
sub
mov
mov
arpl
icebp
ret
cmpl
test
aam
pop
sbb
mov
inc
addl
jle
insl
jle
sub
imull
sahf
imul
lods
ds
push
and
hlt
inc
mov
pop
roll
mov
inc
and
test
lahf
mov
push
sti
shll
add
in
dec
mov
sub
adc
xchg
xor
insl
mov
add
add
je
jle
mov
pop
les
imul
mov
adc
ret
sub
pop
sbb
mov
mov
inc
cwtl
aam
xor
sub
mov
adc
test
mov
push
icebp
pusha
sbb
data16
jle
das
lcall
push
pop
add
push
adc
push
cmpsl
outsb
cmc
push
mov
sub
lcall
dec
popf
insb
add
cmpsl
or
test
hlt
cmpsl
push
sub
into
sbb
dec
mov
pop
idivb
pop
std
aaa
je
inc
jo
add
cltd
mov
addr16
cli
les
repnz
add
pop
in
push
inc
sbb
je
adc
mul
dec
lcall
pop
fistl
ljmp
mov
cmc
xor
mov
pop
lcall
xor
mov
push
rclb
jnp
rcrl
cli
sahf
or
xchg
aad
jb
inc
shl
lret
jge
mov
sbb
in
repnz
push
jmp
jl
push
out
stc
roll
popf
push
mov
sti
stos
push
jb
push
or
lea
pushf
fs
xchg
cmp
xlat
xchg
xor
dec
out
test
mov
das
xor
jns
jmp
add
pop
pusha
popf
cmp
scas
xchg
push
jae
ret
pop
xchg
mov
mov
sub
nop
lods
nop
xor
fsubs
hlt
nop
xor
sub
fcmovb
fstl
xchg
or
xchg
adcb
jne
shrb
mov
pop
cmp
pop
push
inc
inc
loope
inc
fnsave
les
rol
cmp
push
insl
mov
std
xchg
lret
fidivs
mov
fimull
stos
jecxz
mov
mov
sahf
jno
repnz
and
adcl
fcmovne
fldenv
mov
imul
pop
jge
push
or
mov
sub
lods
mov
or
and
negb
outsb
mov
mov
jp
stc
iret
lods
sub
sub
push
sbbb
dec
je
xchg
pop
lods
pop
leave
fsubrs
iret
and
popf
adc
std
pop
push
lret
pop
cld
imul
ret
push
sbb
jno
enter
and
paddusw
test
sti
repnz
movsb
sbb
push
mull
loop
stos
outsb
dec
mov
dec
js
or
jbe
lcall
xchg
ds
data16
fildll
pop
fdivl
sub
xchg
push
mov
loopne
fs
pop
xchg
bound
ljmp
pop
mov
and
movsb
sbb
cmovp
in
add
mov
add
pop
and
insl
pop
lret
rcrb
notb
scas
sbb
xor
lock
and
add
push
incl
jecxz
bound
inc
cli
inc
mov
sarb
pop
fxch
inc
in
test
test
and
ss
jp
sbb
sub
push
dec
xchg
sbb
pop
mov
cmp
sti
sub
inc
pop
and
fisubs
and
xchg
mov
cltd
and
fldcw
xchg
push
lods
adc
mov
loop
stos
adc
dec
add
jno
js
add
and
shlb
or
cmpsl
xchg
les
xchg
pop
mov
ret
stos
pop
xchg
mov
add
in
nop
ja
fadds
scas
aaa
in
pop
pop
xchg
xor
inc
push
shll
test
lea
mov
cmp
inc
adc
test
mov
xor
pop
mov
pop
popf
push
lods
push
mov
in
in
fcmovnbe
cmp
idivl
adc
clc
cli
rcrb
rorl
push
pop
test
rol
std
mov
lret
sbb
sbb
or
andb
push
into
dec
add
and
sbb
inc
call
loope
add
xchg
pop
enter
jb
sbb
pop
add
xchg
test
add
imull
jmp
pop
inc
jo
jmp
xchg
inc
and
cmp
cmp
out
loopne
movsb
jns
and
or
mov
mov
mov
es
stos
jbe
iret
es
rcrb
xchg
loop
sti
imul
push
dec
pop
ss
dec
adc
push
sub
mov
jns
xor
loopne
add
adcb
sarb
cmpb
jecxz
dec
and
xchg
pop
add
into
call
mov
add
out
mov
cltd
jecxz
lods
lret
add
rcl
sbb
pop
mov
xor
clc
inc
xchg
cs
xchg
push
icebp
jmp
adc
and
push
fistpll
scas
sbb
add
push
sbb
sbb
stos
pop
jle
fdivl
in
push
inc
pusha
stos
mov
mov
mov
imul
cmpsb
push
add
dec
xchg
ja
and
mov
xchg
mov
iret
cli
and
lret
test
js
pop
rcrl
fs
into
call
pushf
sub
outsl
mov
cmp
sub
ret
fucomi
fld
sbb
std
inc
icebp
rorl
int
outsl
mov
nop
push
imul
iret
icebp
sbb
cmp
aad
jbe
fimull
pop
dec
movsl
in
in
jecxz
push
cmpl
jne
push
aad
movaps
popf
popf
pop
or
push
rol
xchg
sbb
sahf
sbb
dec
sahf
test
adc
jns
inc
int3
lahf
rcll
inc
push
inc
lret
andb
fdivp
sarb
lock
clc
jo
mov
repz
das
inc
xlat
faddl
iret
push
xchg
in
jmp
add
notl
shlb
imul
ret
jge
iret
jle
push
cmp
ret
xchg
aas
jge
lea
mov
jmp
mov
mov
mov
sbb
push
sahf
fildll
ljmp
mov
int
cmp
push
enter
jae
out
outsl
nop
repz
xchg
push
or
mov
pop
sub
cs
test
nop
jnp
push
sbb
and
rcrl
sub
mov
test
jns
cmc
xchg
and
cmpsb
or
fmuls
into
in
ljmp
inc
push
push
repnz
cmp
ret
lahf
fadd
fwait
imul
jmp
cld
jnp
jle
call
or
jge
pushf
rcl
mov
mov
and
cltd
dec
imul
scas
ficompl
out
dec
xchg
cmpb
and
cmp
bound
inc
mov
mov
jns
mov
popf
aam
jg
jg
fldcw
dec
pop
int
daa
gs
or
aas
xor
xlat
dec
cltd
arpl
pop
cwtl
jmp
mov
push
xchg
dec
add
adc
mov
stos
shlb
mov
push
pop
ret
mov
data16
inc
shll
jae
pushf
idivb
mov
push
pop
fwait
jecxz
lret
sub
jp
xor
pop
jne
mov
call
push
jns
mov
mov
daa
cmpsl
adc
sbb
and
pop
movsl
roll
jp
fistl
push
inc
jb
sahf
in
sub
lea
mov
cltd
ror
dec
ret
lods
sub
cmc
jo
pop
rcll
call
and
mov
rcrl
aad
lea
popf
or
in
jno
scas
xchg
xor
xor
or
dec
xchg
sti
xchg
outsl
imul
inc
lahf
sarb
or
sub
out
pop
lret
insl
aaa
dec
int
sbb
inc
xor
das
cmpsb
add
fistps
std
sbb
dec
scas
arpl
movsl
inc
in
imul
adc
xor
decl
movsb
xchg
xor
cwtl
dec
pop
and
xchg
aas
aad
int
fdivs
jb
in
mov
adcb
adc
cmp
cltd
or
test
ret
cli
repz
testb
mov
mov
sar
pop
jge
movsb
int
in
clc
mov
lods
aaa
rcrb
inc
into
jo
cs
or
lahf
iret
sub
jge
nop
cltd
mov
dec
sub
das
adc
jle
lret
or
int3
inc
outsb
mov
jno
lahf
loop
dec
std
or
flds
js
jmp
andl
addr16
lret
inc
loope
mov
sbb
mov
mov
lcall
cmp
and
pop
lcall
or
pop
dec
push
gs
sub
in
enter
lret
xchg
insb
jns
loop
jae
adc
ret
int
sub
mov
push
push
pop
sbb
fsubl
cmp
testl
xchg
mov
jnp
mov
push
jns
or
scas
gs
jb
push
mov
or
lods
xchg
inc
call
xchg
in
popf
pop
and
sbb
ret
idivl
push
insb
cmpsl
popf
test
mov
xor
imul
mov
mov
das
sbb
testl
dec
inc
or
inc
mov
fs
jecxz
cmpsl
mov
cli
sub
out
mov
sbb
clc
cmpsb
sarb
push
dec
out
rclb
data16
addr16
add
mov
jg
pop
out
imul
inc
push
hlt
xchg
inc
fcoml
js
jbe
sahf
xor
rcrb
call
jge
aam
in
int3
cld
jmp
lods
cli
add
cwtl
loopne
adc
sub
lods
fldt
mov
mov
cli
movsb
xchg
fldl
repnz
repnz
sbb
add
icebp
ss
add
int
jle
movsb
mov
divb
movsb
or
data16
mov
repnz
jbe
sub
das
push
and
and
mov
add
sub
fmulp
outsb
test
add
in
cmp
sub
out
xor
add
hlt
dec
rcrb
imul
push
jb
stos
mov
push
ja
mov
xor
es
xchg
lahf
push
mov
into
addb
adc
mov
jecxz
adc
pop
loopne
add
xchg
fisubs
xchg
adc
loopne
push
inc
outsl
sub
ds
mov
sbb
pop
or
int
dec
pop
push
popa
arpl
mull
jbe
sar
adc
dec
les
jle
and
push
fs
jl
mov
mov
nop
fwait
out
and
pop
xchg
add
lods
mov
mov
fldenv
mov
jb
push
loopne
xor
fadd
inc
add
ret
sbb
cltd
jmp
or
movsb
mov
xlat
or
out
sti
les
shrb
insl
iret
dec
iret
fsubr
test
inc
mov
or
jle
sbb
push
andl
leave
dec
push
sahf
cltd
inc
aam
stos
jnp
scas
fstpl
daa
mov
mov
leave
pop
stos
adc
aad
xor
loope
aaa
sbb
es
bnd
scas
xor
inc
bswap
nop
sbb
mov
adc
sbbb
pop
or
pop
adc
mov
scas
lock
test
loopne
lret
dec
movsb
shll
xchg
jl
add
xchg
dec
cld
jnp
add
je
push
inc
xor
movsl
add
gs
or
add
int3
lcall
mov
and
dec
sub
enter
jo
ja
jb
mov
and
aaa
dec
mov
cld
sbb
call
scas
or
and
adc
rolb
loopne
jo
jle
cli
and
popf
call
sti
mov
enter
jecxz
data16
and
push
dec
xchg
ss
and
xor
fsubrl
push
rcrl
dec
into
movsb
in
jo
or
push
adc
loop
mov
pop
xchg
push
add
aas
jne
lods
pop
adc
add
dec
iret
out
movntq
test
jle
push
ret
inc
test
clc
sub
fwait
add
xchg
sbbb
fwait
push
xor
jno
or
jns
adc
jns
mov
push
je
in
pusha
dec
dec
mov
mov
fdivs
aad
out
in
mov
mov
adc
add
hlt
pop
cmp
rol
pop
adc
xchg
popa
fsubl
mov
loopne
xor
mov
sbb
pop
lods
icebp
repz
aad
jl
lcall
aad
clc
sbb
mov
sbb
cmp
je
cmp
cltd
sbb
loope
into
jns
loopne
push
aam
pop
or
add
into
mov
mov
xchg
inc
js
fcoml
xchg
and
js
sub
scas
stos
or
hlt
mov
adc
push
out
js
xchg
mov
jmp
and
aam
mov
dec
shrl
jle
inc
in
std
arpl
dec
sub
add
lret
stc
out
lea
insb
addb
sub
popf
aad
or
jbe
test
inc
jae
cwtl
iret
cld
jg
sbb
inc
mov
jecxz
push
sbb
jb
sbb
std
push
xor
mov
adc
cltd
movsl
cmp
pop
jbe
mov
mov
sbb
outsl
xchg
cld
jnp
mov
cmp
sti
into
shlb
inc
test
jns
jl
bound
out
dec
pop
mov
jno
cmp
lcall
loope
push
xchg
js
sub
add
xlat
mov
hlt
fbstp
xchg
test
mov
pop
sahf
jp
adc
mov
xchg
into
ss
cmc
cmp
js
mov
lock
stc
mov
call
leave
xabort
jmp
ljmp
cmpl
pop
or
in
pop
mov
lcall
cwtl
cmpsb
push
lock
adc
out
es
mov
loope
mov
fidivs
mov
mov
fsubp
lret
mov
bnd
mov
dec
ja
mov
cli
mov
ss
pushf
data16
scas
jo
or
or
sub
fwait
inc
rcll
xchg
stos
adc
insl
push
out
mov
mov
scas
icebp
xor
ja
xlat
nop
fistps
xor
sub
xor
mov
mov
sub
jae
dec
out
sbb
sahf
jo
cli
aam
and
pushf
lds
pop
jg
cltd
jno
test
jo
addb
repz
sbb
insb
ss
push
gs
aaa
loop
push
shrl
stos
xchg
add
aas
pop
mov
push
inc
or
fmull
cmp
sub
dec
out
mov
and
inc
mov
mov
fisubs
mov
out
adc
lretw
sub
cmp
lahf
jns
jo
dec
pop
fldenv
add
loopne
ja
and
cwtl
rcl
hlt
mov
test
mov
inc
or
in
mov
xchg
adc
xor
fnsetpm(287
lods
xchg
stos
addr16
decl
idivb
adc
inc
iret
or
in
mov
mov
fiadds
push
cwtl
jnp
inc
xchg
inc
cmc
sub
rol
and
pop
dec
inc
scas
dec
loop
xlat
icebp
mov
fisubrl
mov
sub
loopne
jle
pop
lods
outsl
add
fwait
and
sbb
or
int
push
mov
ret
fwait
movl
or
aaa
ficompl
jbe
xchg
push
adc
addr16
or
push
fistpll
push
lret
pop
inc
sbb
aam
es
push
cmp
out
lret
mov
pop
in
out
outsl
or
fiaddl
sbb
icebp
les
cs
in
pop
lcall
xor
scas
cmp
or
movsb
stos
test
mov
aas
cld
testb
mov
jo
iret
pop
mov
in
jle
int3
cmovbe
inc
pusha
insl
cmp
ss
sub
mov
cmp
mov
push
daa
jmp
test
fs
mov
push
add
sub
pop
mov
mov
inc
psraw
ret
cmp
pop
dec
push
sbbl
add
cmp
int3
ja
add
jp
mov
inc
ret
jmp
aaa
out
aas
or
add
xor
mov
mov
sub
or
jmp
xlat
xchg
rcll
jae
jb
cmc
paddsw
xchg
inc
mov
loop
push
outsb
fimull
cmp
cmp
mov
pop
jae
push
or
inc
cmp
push
and
rorb
mov
push
xchg
jb
sub
ss
lcall
dec
int3
fildll
add
mov
xor
cmc
cmp
pop
jnp
stos
dec
dec
repnz
sub
mov
adc
dec
mov
and
add
sub
xchg
lock
add
xor
mov
js
or
lahf
nop
or
les
daa
mov
and
push
clc
aas
out
add
and
cmp
jo
sbb
pop
ja
cmp
adc
adc
je
mov
ret
shrb
cmp
in
vmread
or
js
dec
call
jne
mov
push
add
jo
xlat
mov
mov
jge
add
pop
out
jbe
out
cmp
adc
mov
in
mov
push
loopne
or
add
add
mov
call
push
inc
call
test
adc
inc
pop
inc
in
sbb
xor
in
cmp
dec
aad
fisttpl
or
push
cmc
adc
mov
outsl
lret
test
jne
sub
sbb
mov
sub
dec
std
shl
enter
in
inc
es
push
jg
mov
jns
adc
mov
js
into
sbb
xchg
xor
push
cmp
add
mov
cmpsb
sbb
js
ds
lods
ja
or
and
pop
pop
sbb
push
ljmp
dec
out
sub
jne
cmp
push
int
dec
sbb
or
lcall
push
addb
out
arpl
jmp
add
and
in
xchg
orl
pop
sarb
lcall
dec
cwtl
sub
xor
or
pop
dec
pop
iret
push
pop
and
bswap
outsl
lds
inc
sbb
stos
or
sub
ja
lahf
fmulp
imul
dec
xor
mov
mov
pop
cld
push
enter
xchg
or
adc
dec
pop
in
inc
jno
into
cli
in
lcall
or
pop
adc
xor
xchg
jb
out
push
testl
cmp
divb
js
lcall
fcmovnu
nop
sub
mov
cmp
push
and
xrstor
jb
lock
mov
and
arpl
outsb
and
pop
add
or
jnp
ljmp
xchg
push
dec
fdivl
loope
ficomps
movsb
loopne
out
popl
daa
imul
lock
adc
movsl
dec
dec
shlb
dec
push
cmp
xor
cmp
ret
mov
addl
jmp
loopne
jo
cmpsl
and
shlb
mov
push
fcoms
lods
lahf
inc
sarb
mov
or
leave
push
fdivp
rorb
mov
xor
popw
mov
sbb
push
aam
or
ret
repz
push
in
jmp
mov
enter
or
adc
rcrl
pushl
push
mov
jo
jp
pop
pop
in
xor
jb
daa
sahf
andb
pop
shll
cmp
add
jnp
and
test
xchg
js
lcall
xlat
mov
imul
pop
sub
jae
pushf
jbe
mov
std
notl
jnp
pop
add
data16
cmp
mov
jnp
pop
aad
and
xor
mov
cwtl
outsb
stc
or
cs
push
sub
cmpsb
push
out
mov
jnp
mov
addr16
in
lock
scas
stos
ret
ss
stos
pop
inc
adc
adc
cmp
sub
add
jg
test
shll
mov
pop
ljmp
cmc
jnp
xchg
test
iret
xor
aaa
or
push
push
inc
mov
aas
xor
lock
xor
out
sbb
ljmp
mov
sub
xlat
shll
pop
mov
xor
cli
cmp
cld
ficoms
xchg
aad
fbld
dec
push
or
add
pop
mov
inc
jl
in
cmp
divl
mov
xor
insl
aam
scas
mov
aas
sbb
js
sbb
mov
test
rclb
xchg
pop
scas
lods
insb
lods
add
push
out
mov
push
fcomps
in
push
and
dec
add
xchg
adc
imul
movsl
mov
cmp
xchg
and
and
push
mov
jge
push
and
xlat
adc
mov
clc
dec
inc
pop
sarl
pop
adc
iret
pushf
fistpll
ret
jbe
aas
cmp
add
inc
xor
je
sbb
into
int
cs
xor
data16
in
add
out
push
jns
addb
outsb
adc
sarl
fimuls
add
fcmovu
push
fdivl
push
stc
js
jmp
xchg
movsl
push
jae
sbb
sbb
and
cmp
in
cmc
mov
ret
ret
mov
mov
cmp
imul
movsb
mov
ret
push
and
or
bnd
negb
inc
pop
dec
and
mov
mov
sub
inc
cmp
push
pop
insl
aas
add
jbe
repz
les
mov
out
out
jno
lock
xchg
imul
add
and
leave
sbb
cmp
or
cmp
dec
lea
daa
ds
pop
inc
adc
pop
imul
insb
stos
or
xchg
jg
or
xchg
and
test
incl
andb
jl
adc
repz
nop
cmp
pop
xchg
ja
jns
sbb
mov
mov
dec
push
lock
dec
movsl
pop
stos
push
xchg
mov
lds
dec
mov
push
pop
scas
and
cmp
aam
pop
nop
jl
mov
nop
inc
pop
addr16
mov
jp
pop
mov
scas
stc
inc
push
or
pop
lahf
cltd
push
loop
jg
test
les
pop
mov
je
cmp
ss
and
aaa
lret
mov
and
jp
add
rol
imul
loop
lock
ss
lods
push
or
insb
mull
push
xchg
jnp
xchg
movl
lea
dec
push
and
pop
xor
decl
add
add
jmp
mov
divl
pusha
cli
test
pop
aaa
cmp
pop
popf
sbb
dec
les
sahf
iret
inc
add
inc
popf
stos
sub
popf
push
fst
or
rolb
fisubrl
cmc
out
adc
pushf
hlt
sbb
and
addb
sti
fistpll
lahf
xchg
jnp
cmp
or
xor
aaa
cwtl
in
lock
inc
insb
pusha
icebp
std
xor
into
lcall
jmp
push
xor
lret
cwtl
pop
push
ds
adc
icebp
subl
mov
sahf
jmp
ror
std
or
fcompl
rcrl
leave
cld
lret
mov
push
shll
mov
mov
sbb
mov
stos
mov
das
cmpsl
test
dec
push
test
clc
lret
dec
loop
adc
imul
mov
or
test
ret
cmpsl
in
sbb
ja
in
mov
filds
mov
push
scas
xor
jl
and
lret
imulb
adc
sub
pop
adc
pop
bound
dec
xchg
insl
mov
mov
rorb
xor
dec
scas
jnp
sbb
xchg
pop
out
cld
insb
mov
jmp
xchg
push
sub
mov
or
sahf
enter
or
adc
outsl
adc
shl
in
les
cmp
pop
outsb
iret
cmpsb
pusha
mov
lahf
xor
popa
add
mov
sbb
ffreep
test
push
xchg
loop
je
mov
ret
pop
clc
mov
popf
pushf
scas
lret
add
gs
mov
leave
xlat
cmc
scas
mov
shrl
dec
imul
sbb
xor
lret
jl
fwait
add
jmp
lea
imul
pop
cmp
lock
aad
push
sbb
jo
cwtl
sar
lahf
xor
cli
mov
fistpll
movsl
roll
xchg
xchg
pop
push
pop
cltd
addr16
xor
sub
sub
sti
das
test
jg
or
add
push
or
or
jg
add
xchg
test
test
sub
adcl
test
mov
cmpsl
mov
inc
xor
mov
popf
mov
popfw
pusha
cld
sbb
gs
fwait
push
call
xchg
int3
clc
mov
sti
adc
sbb
aas
pop
jmp
aas
adc
xor
les
add
ud0
shrb
push
push
aam
jae
xor
lock
sub
jge
cwtl
cmp
fimull
push
ljmp
lock
addl
scas
cli
insl
push
push
adc
xchg
xor
movsl
stos
and
pop
out
imul
insb
in
loopne
ja
cmp
outsl
push
je
sub
cwtl
mov
inc
clc
cwtl
lods
in
jb
jno
div
fidivrs
cmc
decb
mov
out
sbb
mov
lea
inc
mov
sbb
popf
sahf
push
pop
xor
or
ret
cmpb
xchg
mov
cmp
lret
addr16
jmp
and
and
js
mov
shrb
xchg
jmp
adc
cmp
add
pop
out
repz
adc
mov
cmp
fnsave
cmc
adc
enter
scas
xchg
jp
pop
imul
fsincos
push
inc
js
int
fstps
add
push
xchg
fsubs
and
mov
mov
loope
int3
std
xor
mov
add
push
jp
mov
lock
adc
mov
mov
xchg
rcr
in
addl
in
push
dec
into
das
loop
push
imul
xchg
fisubrs
les
stos
sbb
cmpsb
adc
fldcw
lds
push
cmp
inc
add
addl
xor
inc
stos
test
jecxz
push
add
dec
push
and
repnz
cs
adc
stc
inc
pop
addr16
or
shll
mov
ret
mov
mov
sub
flds
pop
jbe
roll
je
fcompl
movsb
mov
adc
rorl
mov
xchg
mov
imulb
cmp
hlt
mov
sub
bound
push
xchg
ja
xor
cs
out
daa
in
into
pop
sti
sahf
cmpsb
in
mov
sbbb
rcr
lret
outsl
rol
mov
nop
sub
push
xor
mov
xor
adc
jbe
out
add
out
fucomp
outsb
mov
cmpsb
inc
daa
cmp
pop
lret
inc
mov
jp
fldt
pusha
ljmp
js
xchg
jbe
pop
fwait
sub
xor
repz
mov
es
inc
push
pop
jp
lods
dec
dec
push
imul
rcl
mov
daa
aaa
mov
cmp
test
push
inc
aaa
imul
ja
mov
imul
and
bound
enter
mov
mov
movsb
lret
inc
aam
xchg
dec
ss
xchg
and
cli
into
or
xchg
ror
fidivl
sub
mov
mov
jl
pop
inc
add
xchg
pushf
loop
repz
sub
xorb
xorl
shll
xchg
and
aaa
ficoml
push
dec
and
sbb
aad
adc
out
call
and
aam
inc
jbe
jp
cltd
or
xor
add
stos
push
addr16
scas
pop
shrb
repnz
into
sbb
bnd
inc
fnsave
push
cmp
iret
aas
in
fstl
sub
push
movsl
pop
lock
mov
inc
outsl
push
mov
add
lahf
movl
imul
xchg
jp
jg
push
pop
sti
jne
jns
pop
mov
sbb
out
sbbl
das
lods
decb
and
shll
and
mov
ficoms
int
stc
push
mov
add
xchg
lods
or
clc
cmp
mov
push
daa
mov
inc
push
aas
lds
fnstenv
loope
pop
jl
neg
test
sub
loop
mov
jnp
lds
dec
push
jno
fwait
jae
sub
ljmp
scas
insb
jae
dec
data16
cltd
notl
hlt
fdivrp
cmp
mov
push
into
sub
lds
out
xor
rcrl
scas
pop
push
ds
cmp
cmp
jbe
xchg
cmpsb
dec
inc
xchg
pushf
sbb
sub
inc
and
stc
cmp
sub
les
and
cwtl
cmpsl
sbb
das
push
repnz
inc
out
fstpl
pop
scas
into
test
xchg
fld
or
mov
enter
inc
shll
add
fistl
div
push
sahf
xor
ret
movups
or
mov
js
out
wbinvd
shlb
lods
add
iret
xlat
sbb
push
shll
in
lret
ljmp
mov
scas
cltd
push
xchg
aad
mov
jno
dec
and
jmp
sub
push
jecxz
jg
mov
cld
and
loopne
push
inc
cmp
std
jge
mull
int
test
stc
roll
xchg
rorl
pushf
pop
pop
xchg
mov
scas
dec
sti
xor
shlb
jb
nop
dec
pop
mov
es
fsub
jp
jae
lcall
mov
sub
rcrl
addr16
cmp
inc
bound
xchg
push
mov
xchg
mov
int3
mov
mov
fldenv
sbb
movsl
xchg
sub
loopne
enter
push
sti
dec
fidivrl
pop
hlt
add
xchg
popf
push
inc
push
push
mov
xchg
repz
ljmp
lods
sub
cmpb
xor
arpl
stc
in
xor
add
int3
mov
outsb
xchg
push
out
fidivrs
popf
sbb
inc
mov
pop
stos
cmp
stc
fdivs
notb
adc
movsl
dec
lret
dec
lods
add
jae
mov
mov
cmp
lods
adc
mov
mov
je
in
gs
movsl
idivl
mov
cmpsl
push
xor
call
inc
enter
or
jle
mov
outsb
fistps
movb
or
rorb
jbe
cmpb
outsl
mov
sub
mov
loopne
andb
adc
mov
daa
pushf
ror
xchg
out
cmc
xor
or
repz
adc
leave
jecxz
int3
xor
les
lahf
sti
push
sub
es
adc
mov
cwtl
stos
and
cmp
adc
xchg
jno
xor
movsb
adc
jmp
ss
ret
and
dec
mov
xor
sub
adc
aas
push
dec
leave
pop
sub
enter
lods
xchg
inc
rorb
adc
mov
adc
push
jmp
lret
mov
unpckhps
jno
inc
dec
fcomip
fisubl
add
pop
jp
dec
insb
addr16
pop
push
movl
or
mov
mov
xor
jmp
mov
popf
scas
jge
rcr
or
out
dec
lods
add
stc
gs
pop
xor
aaa
pop
test
ss
mov
push
aas
xchg
sbb
dec
mov
xlat
push
jno
cmpsl
jp
leave
sti
iret
test
decl
jge
mov
mov
idivb
adc
ret
mov
insb
imull
dec
or
mov
addr16
mov
lret
dec
pop
ja
xchg
xor
add
inc
js
xor
ds
dec
push
mov
and
dec
mov
mov
rorb
mov
or
mov
xlat
push
lahf
dec
in
js
adc
adc
jb
fstl
xor
int
imull
mov
lods
sub
sbb
lods
xor
pop
xchg
mov
jmp
sbb
insb
movsb
aad
and
sub
gs
ret
adcb
mov
pop
xchg
fimuls
popl
jp
push
negb
push
xor
shrl
and
lahf
cmpsb
pop
adc
fwait
mov
enter
mov
insl
sub
shrb
mov
outsb
push
std
push
inc
gs
lcall
fsubrl
stos
pop
push
cwtl
inc
jle
repz
ret
add
jae
ds
or
cmp
out
fisubl
sahf
shlb
jns
dec
iret
jle
sgdtl
mov
pop
movsb
or
imul
jne
test
pop
inc
cmpsb
test
mov
mov
aam
cltd
mov
mov
repz
or
xor
je
imul
jmp
movsb
mov
xor
mov
push
add
mov
lea
lcall
scas
cmp
addr16
iret
xchg
daa
cmovs
mov
jge
pop
dec
sbb
mov
mov
js
push
inc
in
xchg
xchg
and
scas
mov
jb
inc
scas
push
mov
add
movsl
bound
mov
clc
test
sbb
lret
lahf
int3
mov
inc
shl
fsubs
jno
pop
and
cmpsl
lret
shrb
adc
sub
mov
sbb
sti
lcall
call
testl
and
adc
push
sbb
gs
adc
push
push
lods
aas
sbb
aaa
jg
in
scas
fs
les
testb
xor
jns
leave
mov
adc
mov
jbe
ret
ret
stos
sahf
pop
imulb
push
mov
mov
xor
or
rcll
adc
popa
inc
repz
xchg
or
xor
and
ja
xchg
dec
daa
les
scas
popf
xor
push
addb
pop
out
mov
js
imul
movsb
or
outsl
and
sbb
sbb
leavew
fdivrp
clc
lret
jno
popa
sahf
stc
and
lea
pop
inc
sarl
push
sbb
jo
xchg
inc
xor
loope
jg
je
pop
mov
mov
cmp
imul
pop
mov
outsl
inc
loopne
cwtl
dec
int3
sti
dec
push
pop
cli
inc
arpl
testb
jnp
pop
les
shrb
adc
imul
out
mov
sub
cmc
insl
jp
fimuls
jmp
cmpsb
mov
subl
shlb
pop
icebp
rolb
xchg
sar
shll
pop
ret
push
pushf
and
fisttpl
xchg
loop
lods
test
in
add
xchg
jbe
lods
and
nop
pop
pop
add
enter
fildl
or
push
rcrl
sbb
lcall
popl
ss
dec
mov
push
mov
xchg
dec
dec
push
jbe
xor
fwait
outsb
in
enter
orl
icebp
es
sbb
lea
cld
push
cwtl
stos
in
push
or
push
mov
stc
cmpsb
add
push
ljmp
cmp
nop
insb
dec
int3
fisubrs
xor
scas
push
cs
cmc
idivl
adc
shlb
inc
fldenv
sub
mov
and
xor
lock
sarb
mov
mov
popf
fcom
cmpl
mov
add
pop
jecxz
ficomps
popa
movsl
mov
push
out
insl
jbe
push
sbb
xchg
jmp
add
push
sar
mov
je
jo
fimuls
stc
mov
xor
in
invd
sbb
add
pop
into
xchg
decl
xchg
pop
mov
xor
fnstsw
test
or
leave
repz
js
aad
fwait
enter
inc
je
mov
mov
add
std
xor
mov
dec
out
js
nop
xor
into
push
les
lods
mov
dec
repz
fisubrs
stos
ja
hlt
ja
loope
sub
or
inc
dec
jmp
jl
mov
adc
xchg
cmpsb
ljmp
mov
test
sbb
mov
aaa
das
inc
lcall
fadds
push
in
fisubrs
push
rol
lret
mov
push
or
jno
stos
jo
mov
clc
push
addr16
stos
cmc
nop
adc
lods
mov
out
test
scas
pop
in
push
in
fsts
push
ret
repnz
inc
push
jnp
int
dec
or
lret
jmp
insl
add
pop
out
popa
subb
pop
xor
insl
cs
push
pop
and
int3
mov
xchg
movsl
mov
imul
ret
fs
mov
movsb
jmp
xor
pop
jmp
mov
icebp
mov
xchg
data16
call
sarl
popa
or
fimuls
nop
jmp
pop
sub
scas
or
jb
jno
das
out
imul
fcmovbe
jnp
and
movsl
insb
push
cmp
daa
scas
xchg
loopne
sti
xor
mov
inc
nop
pop
pop
ror
add
test
test
and
fdivs
lret
add
in
xor
cmp
mov
outsl
mov
push
movsb
in
mov
loopne
test
testb
enter
xchg
lahf
mov
js
cmp
sahf
daa
jb
std
inc
sarb
xor
sbb
add
sahf
lret
push
popa
xchg
mov
jmp
push
cmp
popa
mov
daa
in
jb
and
add
lcall
leave
add
movsl
daa
add
outsl
andl
cmpl
repnz
gs
mov
arpl
aam
in
adc
mov
gs
cmp
es
int
scas
or
sub
or
les
or
and
or
pop
mov
push
jge
cmp
cmc
jns,pt
push
into
push
adc
imul
jle
push
xchg
sbb
jno
sbb
aas
stos
mov
movsb
dec
xor
jbe
cli
or
in
fcoms
in
and
es
xchg
insl
xchg
test
das
push
ds
mov
ljmp
cmc
fdivr
xor
or
pop
xor
lahf
sahf
xchg
pushl
shr
test
and
mov
lret
scas
rol
test
orb
scas
mov
pop
jb
cwtl
cwtl
notl
dec
mov
fistpll
mov
xor
push
jge
testl
mov
xor
adc
push
movsb
and
dec
lcall
stos
or
push
push
pop
adc
xchg
jae
jbe
pop
pop
les
setae
cmp
mov
mov
negb
mov
mov
pop
les
cs
xor
xlat
sbb
sub
pop
outsb
popf
inc
setp
jecxz
rcl
pop
cmpsl
pushf
in
sti
xor
jns
jmp
dec
dec
sbb
jg
inc
add
mov
xlat
mov
addr16
negb
ficompl
and
xor
cs
xchg
les
mov
std
and
jns
leave
fsubs
adc
inc
adc
bound
aas
mov
data16
xor
xor
and
shrl
lcall
daa
xchg
lret
jne
test
mov
mov
fdivrs
loope
popl
inc
xor
fsubs
imul
mov
xorb
jo
stos
adc
add
xchg
mov
mov
shlb
xor
mov
or
ficoms
sbb
mov
mov
xor
push
loop
mov
and
and
xchg
imul
mov
dec
fs
loopne
divl
push
lcall
fidivl
ljmp
pusha
out
add
hlt
or
repnz
xlat
gs
adc
xstore-rng
cmpsl
aam
xchg
mov
fistpll
add
neg
push
push
sbb
insb
mov
cwtl
shlb
roll
pop
push
mov
mov
cmpl
sbb
mov
mov
push
jb
aam
or
push
subb
popa
push
xchg
pop
cli
push
test
dec
in
nop
leave
inc
push
mov
fs
adc
in
mov
adc
add
push
ficompl
or
mov
stos
push
iret
ror
gs
xor
mov
arpl
jle
shrb
aaa
xor
pop
cmp
mov
outsl
cmp
clc
and
push
bound
dec
pop
adc
jbe
je
mov
pop
jo
dec
xlat
aas
sti
inc
add
xlat
cmpsl
mov
and
out
dec
dec
jo
shrd
add
adc
leave
jne
xchg
out
test
xor
lea
int3
sub
sbb
out
iret
cmpsl
adc
push
sbbl
ss
xchg
not
gs
sub
ds
test
xchg
cmp
test
enter
xchg
fisubs
pop
arpl
xor
pop
ror
xor
arpl
push
cs
add
inc
faddl
popf
jl
cmpsb
xlat
jge
pop
lret
or
lcall
idiv
xchg
sub
lahf
adc
les
cmc
xorb
jb
inc
in
push
dec
push
adc
loope
rcrb
cld
inc
aad
lret
lods
jae,pt
push
push
vpmuludq
ljmp
jle
xchg
and
shll
push
in
sub
scas
pop
inc
js
out
cmp
lods
sub
jmp
add
je
fucom
aaa
mov
inc
subb
mov
pushf
xor
mov
cld
cmp
mov
pop
jne
ficoml
or
je
mov
and
mov
xchg
sahf
dec
out
push
clc
repz
into
lret
adc
loope
test
jb
ret
push
outsb
rclb
pop
sub
sbb
scas
and
inc
mov
stos
push
pushf
aaa
dec
lods
dec
cmpsl
push
sub
gs
jo,pn
and
fldl
fmuls
xchg
out
xchg
fsubrl
or
popa
mov
out
inc
mov
icebp
das
inc
jl
ficompl
adc
sbb
repz
jecxz
inc
mov
pop
out
or
pop
dec
xchg
cmpsl
jge
xorb
mov
out
mov
sub
daa
mov
cltd
mov
leave
cmp
int3
test
lds
mov
or
jg
mov
cmpsl
sbb
jl
imul
and
sub
sti
int
lret
outsl
aaa
cmpsb
mov
fcom
xchg
and
scas
xchg
mov
or
imul
stc
ret
jecxz
pop
aaa
andl
jb
mov
bound
adc
int3
loope
icebp
int3
dec
xchg
inc
adcl
add
cmc
jg
lods
fwait
inc
push
xchg
mov
or
or
test
cltd
or
movsb
sub
andl
pop
push
pop
dec
fsubrs
adc
adc
mov
push
rolb
sbb
popa
test
or
cmp
fcmovb
es
xchg
cmc
aas
scas
jae
in
inc
sbb
mul
or
negl
pop
stos
out
mov
fisttpll
cmpsb
cmp
call
je
adc
insl
cmp
std
ds
call
lods
jmp
dec
fcmove
aas
pop
add
inc
testw
and
aas
cmp
lods
lret
ret
aam
cli
jbe
pusha
jno
mov
stos
mov
adcl
mov
mov
testb
mov
mov
mov
aas
movsb
mov
rclb
xchg
stos
jb
in
push
pop
sahf
std
mov
loopne
stc
xchg
adc
push
push
aas
ds
dec
bound
sbb
fwait
sub
jbe
test
jl
xchg
pushf
push
repz
lcall
xor
mov
xchg
sub
jmp
inc
lret
jp
fcomp
cld
sbb
mov
cli
out
pushf
cs
in
mov
daa
jno
insl
iret
rolb
arpl
sub
test
cs
inc
arpl
push
repz
loop
mov
inc
lcall
xor
cmpsb
subl
mov
add
cltd
leave
cltd
jnp
inc
pop
mov
mov
mov
mov
sub
fdivrs
mov
loopne
cld
dec
adc
cs
xor
mov
dec
add
int
lods
or
mov
xor
fs
icebp
push
into
and
add
hlt
inc
inc
jo
sar
popf
imul
adc
mov
sub
andb
sub
bound
xor
aas
lds
shll
mov
leave
push
cmp
xor
insb
iret
adc
sub
and
sbb
inc
sbb
jo
pop
add
in
mov
shl
inc
inc
in
add
ss
jp
nop
push
dec
sarl
cmp
imul
pop
div
stc
jp
sarl
mov
sahf
push
adcl
push
add
iret
add
inc
gs
and
popa
adcl
out
sbb
push
add
mov
fs
lahf
mov
xor
adc
and
push
dec
mov
fnsave
ret
js
jle
gs
mov
jbe
mov
dec
mov
pusha
adc
cmc
mov
sub
mov
test
xor
adc
jge
dec
mov
jmp
adc
sbb
enter
mov
enter
std
mov
jae
push
idivl
push
mov
lods
push
dec
int
adc
outsb
pop
and
mov
dec
aad
mov
mov
xchg
rorb
mov
test
sub
push
mov
adc
mov
and
arpl
sti
adc
mov
pushf
movsb
dec
loopne
idivl
push
sub
loope
add
cmpl
cltd
inc
rcrl
sbb
dec
xor
xlat
mov
test
or
cmp
lock
imul
mov
lret
add
idiv
js
mov
and
and
nop
sbb
cmp
fcomip
loopne
push
push
mov
mov
sbb
mov
aam
pushf
lock
jge
push
pop
out
out
and
jle
shl
popa
dec
popa
mov
jbe
sti
mov
and
leave
fnstenv
popf
dec
fsubl
or
xchg
dec
test
shrb
jl
in
add
pop
add
xor
pop
mov
mov
loop
jae
pop
iret
in
push
stos
lock
sarb
gs
xor
mov
adc
adc
and
mov
mov
outsb
push
cltd
xor
imul
jb
inc
sti
push
mov
push
enter
pushf
cmpl
cmp
dec
out
adc
cwtl
int3
sbb
insb
push
loopne
mov
into
enter
testl
jmp
mov
dec
add
and
cmpsb
jmp
aad
daa
dec
es
loop
xchg
mov
idiv
pop
mov
push
or
xchg
cmp
popa
push
loop
jne
pop
call
mov
pop
test
mov
dec
lahf
xchg
dec
int
adc
pop
aaa
xor
push
daa
and
aas
enter
jge
scas
or
imul
hlt
outsb
and
push
xchg
cs
shlb
aaa
fidivrl
cmp
into
xorb
inc
mov
cmp
js
jecxz
or
adc
mov
lahf
lds
push
in
and
dec
fsts
push
or
pusha
lcall
xor
mov
fdivrl
rcrb
push
sub
xor
cmp
pop
lods
mov
adc
jp
mov
push
fistl
or
dec
pop
jnp
sti
dec
testb
repz
xorl
aam
mov
lahf
jns
pop
fsubs
or
push
aam
sahf
dec
jle
std
fdivrl
or
inc
mov
mov
xchg
cli
push
adc
cmp
mov
loopne
or
ds
push
lcall
rclb
loopne
std
ljmp
and
scas
movsb
fwait
iret
jle
jne
ljmp
test
xchg
sbbl
pushf
cld
or
jne
pusha
mov
xlat
jns
loopne
cwtl
aad
stos
mov
iret
adc
orb
cltd
leave
xor
rcr
jge
gs
inc
test
in
sbb
sbb
shr
or
and
xchg
xchg
fldl
scas
insl
ljmp
cli
ds
out
xchg
sbb
sbb
imul
and
jg,pn
cld
mov
mov
test
xchg
inc
adc
out
and
inc
push
mov
jno
xchg
scas
cwtl
movsl
repz
aaa
sub
mov
or
sahf
jp
mov
xchg
loop
imul
push
and
rcll
aaa
aam
std
dec
outsb
orb
movsl
jmp
or
lods
insl
iret
popa
gs
js,pn
push
mov
add
push
sbb
push
inc
dec
mov
adc
push
and
les
sub
and
rolb
mov
ds
pushf
negb
aaa
andb
aad
aam
mov
push
movb
and
mov
aas
enter
add
sbb
mov
pop
notb
xchg
sahf
scas
ja
cld
lock
insl
imull
rcrl
sub
jae
daa
les
jb
or
loopne
xor
jae
dec
push
or
xchg
aas
loope
mov
inc
cmp
imul
test
add
jne
push
mov
xor
enter
xchg
hlt
mov
mov
push
dec
push
jnp
xor
out
js,pt
imul
sbb
jbe
pushf
xchg
in
jbe
add
mov
jmp
fidivrl
ret
mov
push
movsl
mov
push
int
in
push
test
mov
fwait
into
sub
mov
jb
repnz
icebp
jnp
paddsw
mov
cmp
push
lock
and
add
push
subb
nop
repnz
xor
and
xlat
stc
mov
cli
xchg
jo
je
in
popa
les
insb
daa
inc
jl
sarb
in
fs
addr16
hlt
xor
sbb
or
mov
or
xor
or
in
loop
mov
cs
dec
or
aad
cmp
call
repnz
out
incl
mov
cmp
jne
jnp
scas
sbb
dec
jl
into
mov
cli
ljmp
jne
mov
mov
add
dec
adc
xchg
jno
test
dec
or
pop
rcl
jg
repz
jp
fdivs
jg
test
test
dec
cli
jnp
jmp
push
int3
cmc
dec
adcl
jle
stos
loop
and
loope
jne
cmp
xchg
movb
sub
in
nop
fisubrs
add
out
sarb
ret
mov
lods
xchg
inc
mov
mov
xchg
dec
idivb
fsubrl
push
popf
cmp
push
fbstp
add
sahf
and
cmp
bound
mov
es
jp
inc
stos
push
mov
pop
sub
sub
xlat
xor
hlt
add
and
push
mov
add
aad
stc
imul
fdivr
dec
movsb
cmc
push
inc
addr16
repz
filds
push
stos
hlt
inc
pusha
pop
jmp
out
dec
lcall
lret
mov
jp
incb
enter
cmp
push
hlt
aam
dec
push
and
xchg
xlat
sbb
fcompl
and
or
pop
sub
in
or
lcall
push
or
mulb
lods
and
bsr
out
stos
loop
outsb
rclb
insb
mov
out
mov
mov
ds
lock
mov
fistpl
adcl
inc
adc
cmc
test
fidivrs
loope
sub
inc
pop
nop
insl
jp
cmp
sub
out
icebp
hlt
sub
aaa
add
pop
push
cmp
shrb
jp
addr16
jp
dec
cmp
xor
inc
clc
xor
cli
loope
repnz
repnz
out
sbb
sbb
mov
test
jmp
test
lods
and
dec
add
jge
orl
das
movsb
test
add
adc
imul
sub
scas
fnstenv
adc
xchg
test
sbb
mov
sbb
or
adc
lea
in
outsb
pop
xchg
pop
sbb
int3
loope
arpl
pop
stos
or
pop
cmpl
xor
mov
xchg
sub
ss
leave
aam
stos
inc
inc
cltd
into
and
loope
xor
adc
xor
pop
div
add
int
cmp
mov
lock
dec
insb
orl
bound
lods
xor
mov
insl
fs
add
xlat
mov
rcrb
outsl
es
jno
add
mov
pop
int3
or
test
pop
xor
sub
andl
pop
sbb
and
cmp
inc
js
pop
ja
ret
pop
mov
add
add
movsb
ss
in
mov
jge
xor
sbb
pop
adc
movsb
mov
cmp
shlb
ljmp
clc
lock
or
xchg
and
add
add
sbb
xor
push
adc
and
bound
and
std
sub
loope
and
and
pop
xrelease
popf
test
add
daa
aad
jl
mov
stc
pop
sub
sarb
sahf
fiaddl
push
push
xchg
push
ss
scas
xor
inc
adc
push
cs
jae
pop
aam
repnz
xchg
loope
pop
mov
or
pushf
xor
fwait
mov
adc
pop
jae
leave
inc
ret
push
mov
out
repnz
sti
mov
push
notb
cmc
popa
sub
mov
sub
iret
sub
cmp
push
inc
cmp
notl
ftst
mov
dec
push
sbb
mov
imul
enter
jno
and
push
mov
jb
pushf
hlt
dec
push
ja
cmp
out
aas
loop
xor
xor
xlat
fisubs
mov
inc
in
repnz
mov
je
sbb
cmp
or
rcrb
add
cmp
pop
test
push
fs
push
hlt
or
cmp
hlt
mov
arpl
cwtl
push
mov
xchg
les
xchg
mov
data16
xchg
xor
xchg
ds
xchg
gs
int3
gs
jno
lds
and
fcmovbe
dec
ds
movl
aam
idivb
pop
xlat
adc
pop
cmp
cmp
fidivl
dec
lods
add
scas
adc
outsb
clc
lock
mov
data16
incb
pop
mov
inc
fisubrs
lods
mov
xchg
sub
cmc
mov
bound
mov
inc
mov
jne,pt
icebp
packuswb
jge
sbb
mov
out
or
push
sub
sub
ljmp
ja
stos
dec
clc
push
into
call
push
cld
adc
cld
negl
ds
loope
xlat
xchg
adc
cmp
in
inc
cld
pop
out
mov
lods
cld
cmpsb
in
pushf
cs
push
sub
out
notb
mov
lcall
data16
dec
lds
jge
jle
mov
inc
mov
jmp
out
mov
inc
or
add
fnstsw
inc
in
mov
imul
push
rolb
sub
loopne
or
stc
push
sub
xchg
nop
imul
mov
data16
mov
outsl
jmp
inc
add
xor
ljmp
cmp
pop
dec
jae
imul
scas
out
scas
and
pop
adc
mov
jo
cmpsl
xlat
popa
pop
jmp
in
lods
loopne
es
dec
sub
sti
and
pop
mov
mov
bound
imul
and
xor
inc
stc
dec
movsl
cmp
pop
mov
std
addr16
ljmp
and
mov
js
pop
inc
push
aaa
add
mov
xor
or
sbb
adc
lret
cmp
adc
hlt
js
and
add
xchg
ja
shlb
fists
mov
cmp
ss
push
scas
rorb
nop
jno
jmp
aaa
test
or
xor
scas
inc
ret
cmpsl
mov
loope
pop
movsl
jbe
mov
dec
int3
inc
mov
negb
lds
mov
aaa
icebp
popa
and
xchg
in
xlat
loope
jo
sar
cmc
iret
cltd
cld
ret
pop
loop
adc
out
fsubrl
test
adc
nop
shlb
movsl
fists
adc
les
fcoml
cwtl
in
xchg
add
cmpsb
pop
imul
jns
inc
fidivl
lds
mov
insl
cmp
push
mov
or
stos
ja
loope
das
adc
xor
jns
mov
jbe
movntps
sbb
mov
clc
jg
aam
or
add
adc
mov
push
dec
lds
pushf
mov
aaa
repnz
pop
insl
popf
int3
push
hlt
mov
xlat
and
fdivrl
inc
fld1
cmp
fadds
mov
rcrl
jmp
fdivrs
aas
pusha
cld
insb
inc
xor
xchg
adc
xchg
test
add
xor
jns
sub
sub
jle
pushl
out
inc
int
push
mov
rclb
test
adc
mov
leave
push
jno
mov
mov
push
bound
cmp
mov
insb
sub
fistpll
push
ja
fdivr
call
jge
mov
insb
test
pop
jne
sahf
xchg
imul
shlb
cli
xor
sbb
xor
and
fiaddl
cmp
lea
clc
xchg
xchg
pop
xor
xchg
js
outsl
repnz
push
push
sarb
in
icebp
mov
dec
shlb
mov
xchg
add
sub
out
mov
or
pop
pushf
test
pop
je
cmpsl
mov
and
inc
pusha
dec
aad
cmovne
push
fisubs
xchg
inc
fbld
cmp
stc
pop
pop
inc
mov
js
mov
jns
lods
out
add
enter
mov
mov
stos
xchg
sub
rcll
add
and
push
jno
pop
sub
push
cli
out
mov
pop
pop
ret
loope
rcrb
jo
jo
inc
sub
sub
std
dec
adc
sub
int3
pop
pushf
or
sbb
push
incl
cmpsb
mov
pop
sbb
pop
addb
gs
fildll
cltd
add
add
lahf
sub
lods
push
mov
push
and
jl
lock
lock
jne,pn
loopne
cmp
outsb
out
fcmovnbe
andl
inc
cmpsb
xor
sub
sub
out
xor
sbb
prefetchw
cmp
dec
inc
jge
sub
lods
add
stos
xor
enter
jg,pn
mov
cmpsl
add
cmp
or
lods
push
popa
cmpsl
fildll
outsb
imul
ret
mov
xchg
ds
stos
push
mov
or
and
or
shl
pop
daa
fwait
aad
push
adc
pop
xchg
mov
arpl
mov
xchg
sbb
ret
jmp
jge
dec
pop
enter
lea
add
inc
cmp
sub
add
pop
std
sub
or
add
cmp
inc
lret
ja
xchg
mov
cmpsl
lea
in
push
sbb
pop
sbb
in
fldcw
add
insb
rclb
rorl
and
fninit
xor
xor
dec
inc
and
pop
stos
pushf
cmpsb
mov
mov
push
testl
mov
add
and
xor
xor
jo
loope
push
addb
xchg
adc
xor
dec
rclb
jne
inc
loopne
xor
pusha
push
testb
mov
icebp
out
add
cltd
out
inc
mov
add
adc
mov
mov
mov
adc
mov
cmp
or
pop
sub
pop
dec
mov
arpl
gs
popl
jae
das
pusha
pop
xchg
arpl
repz
push
imul
lock
add
lds
mov
test
mov
fwait
and
imulb
sub
and
xchg
in
sbb
fwait
repz
adc
add
adc
popa
aam
lods
add
js
dec
xchg
int
std
pop
ja
mov
adcl
push
cmp
mov
scas
adc
icebp
xstore-rng
cmpsl
lds
insl
stos
and
fsts
arpl
aam
jbe
lret
push
xor
sbb
pop
or
jecxz
std
clc
gs
mov
jecxz
imul
or
fstpt
in
jle
pop
adcb
fstps
add
loop
bound
lret
pop
fsubrs
adc
xorb
sbb
push
invd
fstpl
cld
sub
cmp
cwtl
dec
cmpsl
arpl
inc
fiaddl
xor
jmp
push
mov
pushf
mov
pop
inc
out
movsl
jp
pop
mov
out
repnz
imul
add
cli
ret
or
and
add
sbb
pop
xchg
xchg
or
mov
sub
jae
adc
lahf
cwtd
sarl
add
addr16
lahf
sbb
inc
xchg
xchg
or
inc
push
add
mov
outsl
jp
fadds
fisttpl
cmp
mov
xchg
adc
rsqrtps
mov
mov
pop
sub
ljmp
and
push
insb
cmc
rclb
cwtl
xchg
push
ficompl
stos
enter
hlt
sub
hlt
inc
sbb
push
rorb
jae
out
mov
repnz
rolb
dec
sti
push
and
pusha
or
jmp
pop
pop
or
adc
dec
push
cmp
and
addr16
rcl
mov
mov
adc
out
add
jmp
loope
mov
add
xchg
inc
fsub
mov
dec
jl
pop
out
fwait
mov
jbe
movsb
addr16
or
push
xchg
and
or
jle
cmc
dec
mov
mov
popf
xor
mov
jne
xchg
lret
loopne
or
sahf
xchg
adc
xchg
or
bound
push
xor
inc
repz
xchg
sub
mov
test
loop
push
pop
int
in
or
insb
ds
out
dec
xchg
cmp
xchg
scas
adc
fdiv
push
lret
testl
stc
fisttpl
imul
add
fcompl
pop
push
adc
cltd
cld
enter
pop
cwtl
xor
and
test
loop
sub
inc
inc
pushl
je
lcall
test
ret
lret
das
in
shlb
push
xor
dec
scas
xchg
dec
adc
or
iret
xchg
test
hlt
mov
mov
addr16
js
leave
push
mov
xchg
jmp
movsb
mov
lret
mov
lds
sbb
mov
jge
sub
sbb
icebp
mov
mov
dec
cmp
cmp
jecxz
and
in
cltd
popa
mov
int3
dec
call
mov
cwtl
add
scas
pusha
mov
sub
in
mov
pop
xchg
les
mov
in
mov
cmp
inc
xchg
shll
push
sbb
nop
pop
in
sub
in
loope
pop
cmc
enter
mov
fcomps
movb
mov
jle
jno
cmp
lds
movsl
adc
ret
jno
inc
fwait
mov
fistpll
xlat
lods
xchg
pop
add
fsubs
paddq
dec
bound
ss
mov
jmp
aam
add
cmpl
sub
scas
js
dec
arpl
push
mov
mov
inc
lret
test
inc
stos
rolb
jle
bound
or
xor
sbb
xchg
push
popf
jl
lret
shll
dec
leave
push
jbe
xor
inc
xchg
loop
and
mov
fwait
jecxz
das
jg
pop
mov
rol
je
and
and
les
push
movsl
mov
enter
cltd
add
rcr
cmc
dec
sub
in
pop
mov
mov
nop
pop
and
imul
fsubs
xchg
sub
inc
mov
mov
pushf
bound
add
mov
sub
fwait
sahf
pop
cmc
inc
push
push
loope
adc
mov
xor
cli
movsl
lret
mov
push
cmp
into
fstp
push
add
and
push
cli
mov
mov
fmull
test
xchg
or
xlat
les
flds
lods
mov
pop
mov
push
mov
jle
inc
jmp
xor
adc
sti
icebp
das
xor
pop
sbb
jns
das
into
jl
jne
mov
pop
in
push
nop
sbb
enter
les
push
ljmp
mov
xchg
dec
sarl
mov
inc
clc
fstpt
cmpsl
or
cmp
int
lahf
push
sqrtps
inc
sbb
out
faddp
leave
or
mov
add
sub
cmp
cmpsb
dec
xchg
xor
and
aad
je
mov
push
adc
cmp
xchg
pop
and
pushf
pop
pop
loope
dec
fsubr
aas
out
jns
outsl
decl
xor
ds
cmp
stos
pusha
and
sbb
sti
dec
movsl
dec
push
not
cmpsb
inc
cmc
ds
popf
sbbl
nop
pop
popa
or
sub
loop
pop
dec
mov
jae
sbb
pop
orb
xor
js
mov
inc
and
out
adc
fdivl
in
cltd
jmp
pop
insb
mov
inc
div
outsl
imul
inc
fadds
and
mov
cmpl
or
xlat
lret
add
add
cmpsb
adc
mov
das
adc
jle
inc
out
mov
push
jnp
out
add
cmp
fmull
push
xor
jge
pop
data16
mov
dec
or
clc
xchg
mov
xor
into
push
pop
add
pop
mov
add
les
xchg
mov
movsb
and
mov
xor
mov
mov
mov
pop
cmp
es
sarl
in
push
jae
fdivrs
push
test
mov
in
mov
arpl
xor
sbb
sahf
test
add
pop
mov
or
arpl
jae
cld
push
push
rclb
dec
adc
dec
xchg
nop
cmp
test
stos
dec
xor
push
pop
psraw
inc
repz
lea
xorb
imul
cmc
adc
insb
in
push
inc
insl
iret
and
mov
and
pop
dec
sub
dec
inc
outsl
mov
dec
mov
pop
mov
stos
mov
fcoms
cmpsb
xchg
sub
xlat
ds
stos
mov
std
xor
mov
mov
ljmp
out
out
stc
dec
lahf
inc
notb
dec
insl
push
cmp
xor
or
sbb
push
inc
pop
push
pop
or
sbbl
inc
inc
dec
notl
shlb
dec
iret
jmp
mov
inc
push
dec
into
jecxz
aas
scas
test
xlat
ret
outsb
shufps
inc
out
repnz
and
xchg
push
rcrb
pop
rcll
lcall
sbb
pop
xchg
pop
mov
rcll
pop
lcall
add
ret
mov
mov
push
loopne
xchg
shll
inc
int
mov
es
push
fcomip
jecxz
inc
in
adc
jg
js
es
xor
pop
jl
adcl
adc
sbb
dec
adc
bound
sbbb
in
mov
xor
lods
test
mov
lret
ficoml
dec
mov
pop
sub
mov
push
sbb
repz
icebp
sahf
jnp
or
gs
out
jns
mov
push
and
movb
jb
popa
rcll
push
push
xor
hlt
mov
or
jnp
lea
in
clc
pop
jne
inc
into
loop
mov
subb
mov
cltd
rol
sbb
jnp
or
xchg
jp
les
in
xchg
mov
xlat
in
pusha
mov
xor
rclb
and
inc
jp
pop
dec
inc
mov
push
jo
shll
rclb
or
push
xlat
and
int
fs
pcmpgtd
scas
cmp
popa
and
adc
push
flds
jo
test
mov
call
lods
decl
mov
push
aas
jmp
leave
mov
addr16
push
cmp
aaa
dec
mov
adc
push
pop
jns
outsb
repz
mov
adc
xchg
iret
push
movsb
and
adc
add
push
push
outsb
jae
int3
cltd
enter
jae
sub
jge
movsb
add
jno
js
mov
fnstcw
sbb
movsl
aad
dec
inc
mov
ror
roll
add
fsubs
in
in
add
mov
mov
sub
xor
sbbb
mov
jge
add
iret
xchg
mov
jo
push
jg
cmpsl
loope
loop
int
xchg
cs
jae
fnsave
in
jl
mov
xor
shrl
xchg
mov
pop
out
ret
ret
cmp
pop
cld
sbb
add
mov
imul
in
cmc
repz
push
pop
lcall
push
mov
lds
adc
push
ret
sahf
push
outsb
inc
mov
mov
inc
mov
adc
int
xor
sub
adc
mov
test
hlt
aas
aaa
xchg
cs
adc
inc
or
inc
or
std
mov
lods
cmc
jle
es
lods
and
out
cmpsb
cltd
outsb
sbb
cmp
inc
sub
xchg
push
mov
outsl
sbb
lret
push
aam
gs
int
dec
mov
push
dec
add
fstps
xchg
cmp
sub
nop
inc
pop
dec
rcrl
cmp
mov
push
or
jns
cmp
lea
andb
sbb
mov
sbb
out
mov
bound
lods
mov
xchg
xchg
imul
mov
sub
add
int
pop
dec
dec
sahf
shlb
dec
addr16
fcomps
jns
fistps
xchg
lea
pop
dec
and
pop
add
xor
and
cmp
and
xor
bound
outsl
add
xorl
push
push
mov
sbb
cmpsl
push
jg
xchg
push
movsl
repz
and
mov
jno
push
arpl
lcall
cmp
xchg
inc
stc
jecxz
xchg
mov
les
mov
imull
sub
loopne
inc
call
repnz
pop
add
test
xchg
rolb
addr16
jns
ret
sbb
push
pop
test
rclb
test
sub
and
enter
stos
enter
mov
hlt
or
xchg
je
cmp
sub
dec
sub
movsl
jl
jmp
xchg
cld
aad
push
and
scas
or
lret
sbb
fwait
outsl
or
sbb
and
shl
test
sbb
clc
sbb
stos
mov
std
sbbb
sar
inc
adc
mov
lock
lret
and
cmp
call
jle
cmp
pop
inc
je
cmp
stos
adc
jmp
jg
inc
std
movsl
test
xor
sub
outsl
shlb
sbb
sub
jg
and
rol
into
out
into
loope
or
out
and
and
iretw
add
leave
add
sbbl
int3
push
es
xchg
shlb
and
adc
sub
lds
mov
mov
scas
adc
fs
scas
pop
movl
cmpsb
shlb
add
int3
in
sub
in
push
movsl
cmp
and
jns
aaa
mov
dec
out
xchg
daa
xor
or
mov
push
imul
and
imul
mov
stos
std
scas
pop
sub
mov
not
xor
xor
addr16
jo
jl
pop
sbb
ds
pop
mov
ja
in
sub
mov
jp
xchg
sub
sbb
fisttps
data16
test
pop
pushf
pop
push
mov
inc
cli
rorb
xchg
popa
movsl
ja
sti
mov
push
mov
xchg
or
fbstp
pushf
mov
inc
call
dec
mov
mov
nop
push
jne
repnz
out
cmp
cltd
fimull
xorb
dec
add
jmp
scas
xor
push
out
push
jl
lock
sub
nop/reserved
popa
mov
aam
xor
ficoms
push
xlat
cwtl
mov
rcrl
popf
mov
inc
lods
pop
cs
xor
sbb
pop
out
mov
aad
and
or
dec
mov
jge
push
inc
lret
sub
mov
mov
pop
cmp
imul
insl
cmpsl
mov
insl
sub
jo
xor
cmp
jno
mov
lods
cmp
jmp
daa
add
mov
push
add
je
or
adc
push
jecxz
icebp
inc
stc
mov
sub
push
fildl
lods
sbb
aam
xchg
sub
lock
imul
adcl
in
jl
leave
pop
gs
sub
cs
sub
push
add
scas
mov
pop
cltd
xchg
sub
mov
loopne
int3
mov
lods
nop
xor
test
icebp
xor
pop
dec
push
dec
lods
into
les
mov
pop
sbb
insb
int
add
outsb
stos
insl
loope
push
mov
insb
cltd
cltd
or
add
popa
xchg
push
push
cmp
sbb
int
andl
stc
dec
repnz
and
add
add
xorl
cwtl
push
xchg
iret
icebp
test
push
dec
jae
push
cmp
mov
enter
jg
sbb
mov
loope
loope
adc
repnz
lahf
mov
xor
inc
out
mov
cli
popf
cmp
cmpb
mov
jmp
sbb
xor
inc
subl
inc
pop
test
ljmp
es
test
sbb
out
aad
sub
push
push
loope
mov
inc
sbb
adc
imul
inc
xor
mov
in
int
or
test
or
subl
xchg
mov
or
outsl
fisubrl
int3
scas
dec
xor
sub
mov
lcall
jecxz
loope
pop
cmp
sub
cmp
popa
nop
clc
xchg
in
outsb
mov
into
dec
negl
jae
mov
daa
jmp
in
sub
mov
popf
xchg
cmc
leave
sbb
dec
mov
push
data16
lea
idiv
xchg
mov
loop
scas
fisubs
xor
imul
pushf
jae
mov
call
cli
xor
sbb
lret
mov
inc
adc
adc
xchg
cmpb
or
fsubr
les
xor
lods
pop
enter
rcr
push
ret
das
adc
ljmp
in
in
lret
sub
xlat
ret
lods
jp
fdivl
pop
sti
sbb
imul
jno
addl
leave
jl
xchg
mov
adc
jns
or
push
cmp
cmp
ja
mov
data16
mov
xchg
pop
mov
ret
cmp
mov
jnp
test
inc
dec
inc
sub
xchg
das
pop
cmp
cmp
fs
jg
or
aam
loope
int
inc
shlb
in
test
xchg
mov
sbb
movsl
jp
push
push
jae
push
and
push
mov
aad
mov
add
icebp
cmp
mov
cmp
pop
mov
fnsave
push
add
mov
xlat
aas
int3
pop
inc
loope
push
adc
sarb
aad
push
cs
imull
inc
in
paddusb
fwait
mov
add
addr16
dec
mov
adc
mov
xor
movsb
pop
jo
insb
mov
xchg
lock
jle
mov
shrl
pop
add
mov
sbb
mov
sarb
leave
lds
hlt
push
dec
rcrb
cmp
gs
fistpll
pushf
lea
mov
lea
mov
cs
sbb
loopne
xchg
push
mov
loop
add
xorl
cmc
pop
dec
iret
mov
pop
cmc
dec
jmp
and
ja
sub
je
pop
sub
pop
das
into
inc
gs
push
adc
dec
or
jp
jle
sbb
test
mov
dec
sub
in
sub
xlat
ret
stos
addr16
in
call
adc
fidivrl
jne
push
aaa
or
push
xor
cmpsl
ljmp
sub
lret
movsb
sbb
or
sbb
movsl
mov
jecxz
add
repz
push
dec
xor
lods
pop
sub
pop
cmp
out
fldl
jle
insb
jmp
lret
jg
mov
cmc
popa
fcoms
test
enter
imul
in
inc
aaa
xchg
or
adc
fbstp
fcoml
ret
add
jmp
mov
dec
rclb
fcomi
xchg
lret
mov
jb
fwait
or
dec
or
add
bound
mov
gs
shll
mov
xor
leave
dec
arpl
bnd
dec
pop
sti
insb
fimuls
push
fs
cmpsl
adc
adc
test
lret
inc
adc
or
lahf
sbb
lds
cmp
mov
sbb
or
es
xchg
insb
xor
pushf
loope
iret
mov
xorb
icebp
xor
pop
adc
aaa
scas
mov
add
mov
mov
and
je
pop
sub
add
push
xrelease
jae
imul
and
pusha
pop
sbb
jae
mov
test
aaa
add
ret
push
jns
add
xor
sub
adc
ret
xchg
jb
add
push
clc
jl
xor
pushl
test
mov
sub
and
fldl
mov
sub
dec
testl
test
mov
lea
mov
cmp
pop
jbe
repnz
ret
lock
sbb
jge
aaa
shlb
into
cltd
pop
xor
shlb
jne
mov
jg
or
movsl
push
mov
mov
lea
xor
rcll
repz
xchg
jo
inc
cmp
data16
sbb
xor
scas
mov
popa
ret
adc
or
sub
add
bound
push
push
push
jg
scas
cmpsl
btl
jo
dec
ds
sub
adc
imulb
push
adc
sub
pushl
mov
sti
call
in
fildl
shll
cmp
dec
in
xor
xchg
leave
lret
lds
jb
inc
mov
fst
pusha
enter
jge
sarb
inc
mov
jo
pop
cmp
pop
push
push
sbb
sbb
inc
rsm
imul
mov
cmpl
cmp
adc
pusha
notb
and
pop
xor
mov
test
rcl
icebp
lods
scas
jl
les
icebp
pop
dec
ret
fisubl
fwait
bound
jmp
jno
or
fisttps
rol
imul
cmpsb
jo
mov
xchg
sbb
add
xchg
add
or
mov
inc
fbld
loope
or
add
cmp
in
pop
sahf
insl
mov
inc
push
jo
mov
leave
inc
xor
mov
mov
mov
and
leave
mov
aas
push
insl
jle
rclb
mov
mov
jno
mov
sub
xchg
int
mov
loope
sbb
enter
daa
lods
jns
clc
pop
and
adc
in
mov
sub
jnp
cmc
xor
dec
test
xor
out
stos
fcmovne
and
nop
les
pop
jl
pop
jmp
scas
ret
or
lcall
pop
xchg
pushf
nop
fwait
jmp
nop
jmp
jae
mov
loop
add
fiaddl
pop
testl
mov
and
cmp
cli
and
out
pushf
arpl
sahf
dec
dec
std
arpl
or
sbb
stos
dec
movsl
push
add
faddp
adc
hlt
push
cwtl
push
negb
push
cmpsl
jae
int
ljmp
dec
mov
inc
adc
call
pop
fiaddl
add
bound
pushf
and
pop
jnp
or
push
mov
push
mov
in
pop
jno
sbb
and
push
addr16
dec
bound
aad
jb
dec
insb
loop
sbb
inc
or
jb
cmp
push
rcrb
cmp
push
shl
bound
mov
mov
cs
mov
lcall
add
cmc
mov
add
fidivs
and
stc
cwtl
aad
imul
jne
idiv
and
mov
push
shrb
push
mov
inc
repnz
das
insb
incl
jmp
outsl
andl
imul
sbb
cld
cmpsb
xchg
and
int
out
and
inc
fdivrs
shl
aas
aad
mov
int3
mov
lods
insl
fcomi
mov
sahf
out
lcall
leave
or
or
in
mov
push
cs
xchg
push
mov
adc
test
jnp
push
mov
aad
hlt
xor
das
inc
and
inc
xchg
push
and
dec
test
pop
or
cmp
into
mov
outsb
push
testl
pop
adc
add
ljmp
sbb
sub
dec
mov
jbe
cmp
fildll
xchg
push
or
push
lahf
cs
ja
add
imul
popa
and
cmp
mov
bound
fmul
or
or
adc
push
fcoms
rol
les
push
mov
out
sbbb
cltd
pop
sbb
inc
ficoml
ja
mov
es
ljmp
adc
push
out
jb
enter
popa
and
pop
adcl
push
jns
or
add
add
inc
ret
push
xchg
mov
cmp
sub
push
or
or
nop
push
sub
xor
test
imul
jg
mov
hlt
cmp
and
and
add
mov
int3
xor
dec
fstl
mov
mov
jne
into
dec
add
stc
xchg
or
and
insb
popa
lret
xchg
jg
addb
aaa
icebp
stc
inc
ja
push
fildll
int
sub
movsb
dec
repz
xor
mov
push
mov
and
xchg
sbb
mov
mov
or
sarl
rcrl
mov
ret
leave
mov
addr16
test
aad
xor
mov
imul
fs
dec
call
inc
xchg
jmp
cmc
icebp
inc
xchg
jle
cmp
xor
mov
in
data16
inc
sub
nop
outsl
cmp
mov
cwtl
shl
roll
in
mov
iret
fisttps
xchg
or
jno
dec
jns
loop
out
pop
add
dec
adcl
inc
pop
dec
mov
xchg
mov
and
mov
dec
outsb
push
aam
jl
dec
in
mov
push
mov
shrb
mov
or
inc
xor
mov
xchg
mov
loope
enter
out
push
jge
icebp
dec
dec
dec
or
pop
push
sbb
cli
repz
call
jg
lods
mov
shl
leave
mov
lcall
outsl
cmpsb
rcrl
aas
lock
pop
mov
dec
ja
dec
jae
xchg
mov
and
jns
test
xchg
mov
in
inc
into
pop
sbb
push
adc
mov
arpl
pop
push
xchg
mov
jl
mulb
cltd
movsb
push
adc
mov
stos
ljmp
lods
mulb
sbb
arpl
and
mov
sbb
iret
mull
mov
dec
xchg
push
in
rclb
lds
pusha
std
adc
sti
hlt
ljmp
mov
mov
mov
push
int3
sbb
mov
jnp
adc
mov
inc
call
pop
stc
aad
call
xor
cld
cmpsb
jl
dec
mov
mov
add
sbbb
sub
in
gs
and
iret
or
push
jae
xor
dec
pop
mov
sub
and
loopne
cmp
push
mov
inc
loopne
mov
sub
push
sub
sub
jp
aas
mov
ss
add
test
jno
mov
mov
sbb
add
mov
test
add
mov
mov
mov
pop
sbb
jle
sbbb
pop
push
xor
mov
leave
lock
jne
or
shll
pop
xchg
fisubrl
push
adc
or
bound
xor
pop
out
imul
cmp
or
xchg
test
add
jp
enter
call
mov
mov
insl
out
sbb
scas
addr16
mov
inc
mov
sbb
xorb
xorb
jae
aam
es
subl
and
dec
xor
repz
mov
out
fmuls
or
xor
mov
scas
sub
mov
xchg
or
mov
pop
in
shll
sbb
mov
jo
inc
into
push
cmp
cld
sbb
aad
mov
push
push
call
cltd
mov
and
sbb
push
out
cmpsb
cmp
jge
sub
test
push
cltd
mov
jge
mov
int3
push
mov
pop
xlat
mov
sarl
sub
test
lea
mov
lcall
sub
int3
xchg
push
adc
iret
pop
lret
test
jmp
js
or
stc
adc
jb
push
mov
fs
jb
push
in
or
sbb
cmp
push
dec
jp
jne
ror
dec
sbb
call
add
fldt
xchg
adc
push
jne
ret
stos
xor
pop
mov
cmc
leave
jge
mov
xor
in
in
pop
test
inc
push
jl
sbb
aas
sbb
ja
lret
into
lds
lds
notb
call
enter
dec
out
test
add
decb
repnz
lds
ds
jg
or
mov
add
enter
sahf
pop
mov
ds
lcall
bnd
jp
jno
icebp
dec
out
into
out
pop
push
daa
mov
cmp
mov
mov
les
bnd
fwait
cmp
cmp
dec
pop
pop
loop
lcall
jno
sbb
sbb
loop
inc
hlt
dec
mov
jl
sbb
sub
sahf
idivb
mov
dec
sbb
in
lahf
andl
add
imul
daa
mov
mov
jl
inc
xchg
mov
iret
jb
mov
cmpsb
sub
scas
xchg
or
dec
xchg
lea
or
ror
cltd
lret
aaa
sbb
out
inc
adc
xchg
gs
ficomps
test
cmpsl
dec
in
rcrl
arpl
and
or
dec
xor
sbb
and
loopne
repnz
pop
pop
push
sub
push
mov
adc
test
mov
outsl
testb
push
jb
outsl
addr16
sub
in
inc
jns
or
fldt
xor
out
je
scas
cmpsl
fcoms
popf
test
ds
adc
imul
dec
in
add
add
mov
or
insb
pop
xchg
push
mov
jno
jmp
in
lret
dec
outsl
and
sub
loopne
orl
push
les
push
xchg
xchg
mov
xlat
sub
into
in
xor
js
lods
mov
adc
sub
lahf
inc
push
es
push
adcl
fcompl
add
push
enter
andb
dec
dec
xor
dec
mov
call
add
push
in
cmp
fisubrs
popf
and
out
and
call
cmp
jo
aas
sti
clc
mov
pop
push
xor
out
push
pop
inc
jbe
shr
push
mov
loopne
stc
nop
cmc
add
push
ss
dec
pop
popa
sbb
mov
xor
std
jns
test
pop
or
sbbl
or
into
loope
daa
jne
mov
push
clc
ficomps
add
add
and
sbb
loope
stos
adc
xchg
popf
pop
pop
inc
xor
push
imul
loope
ret
ficomps
bound
jle
pop
arpl
lret
aam
ja
sbb
divb
jae
xor
int3
pop
dec
pop
icebp
sarl
cmp
mov
repnz
cmp
mov
inc
icebp
mov
jo
mov
rorl
pop
div
test
into
cmp
popa
inc
js
decl
and
and
inc
xor
inc
dec
jecxz
sbb
in
test
add
sub
mov
add
nop
xchg
mov
or
std
cmp
cld
jg
nop
push
pop
sub
pop
das
push
push
into
xor
mov
jne
add
aas
movsl
mov
sbb
sub
in
push
loope
or
adc
mov
fs
cmp
pop
xor
les
loope
ss
sub
fs
repz
sbb
mov
cmp
insb
xchg
jp
sub
cmpsl
jnp
call
lea
xchg
movsl
push
xchg
sarb
jp
sbb
sbb
popf
lods
push
add
loopne
push
movsb
fldenv
mov
xor
movsl
pushf
inc
repz
jle
gs
sbb
or
mov
push
mov
cmp
sbb
lret
cmp
cmpsb
jp
dec
push
cltd
test
dec
sarl
add
in
movl
stc
stos
inc
flds
mov
jno
sub
leave
scas
mov
pop
rorb
jae
clc
pop
push
mov
movsb
push
sbb
push
adc
nop
lret
out
iret
xor
bound
stos
mov
pop
adc
cwtl
sub
xchg
or
xorl
xchg
jbe
arpl
jle
push
loopne
jecxz
or
lahf
jo
hlt
jae
or
mov
es
mov
push
push
outsl
cmp
xor
xchg
pop
add
jg
sub
nop
sbb
xor
push
jmp
push
fiaddl
lret
cs
rcll
xor
test
pop
mov
rclb
jmp
ficoml
or
add
dec
push
cmp
push
sub
mov
pop
ds
pop
lods
pop
js
cmp
mov
in
sub
or
add
ds
insl
pop
je
sub
mov
cli
lods
push
jecxz
fcoms
cli
insb
fwait
rorl
cmpsb
sar
dec
mov
pop
jle
pusha
stos
outsl
scas
or
adc
aam
fimuls
test
inc
xor
jl
in
mov
jae
arpl
dec
divl
and
jle
add
or
aaa
inc
mov
icebp
icebp
jmp
cld
jbe
pop
push
jecxz
insl
jbe
in
mov
aas
rorb
mov
xchg
add
cmp
jmp
xorb
or
sub
push
rcll
pop
cmp
pop
not
rol
das
test
outsb
add
test
cld
insl
sbb
jecxz
lods
jns
aam
daa
sub
subb
js
aam
push
mov
push
stc
ljmp
subl
adc
in
test
mov
add
lds
into
pop
cmp
and
mov
rcrb
add
lods
test
aas
loop
pmulhw
cmp
pop
mov
jle
dec
sbb
and
jle
jmp
cmp
loop
pop
jne
ss
cld
sbb
fcmovbe
cmp
test
mov
fdivrs
jno
sub
mov
xchg
shlb
or
pop
divl
scas
and
fildl
mov
movb
mov
sbb
leave
inc
push
push
pop
lret
dec
cli
adc
mov
lret
ja
cmp
mov
sub
iret
push
js
push
sti
lock
adc
cs
fmull
add
ljmp
cmc
pop
ret
xor
push
mov
gs
lret
fadd
lcall
jp
mov
in
dec
loopne
popf
pop
dec
movl
or
imull
hlt
jecxz
stos
pusha
jb
xchg
inc
jne
addl
jecxz
add
sub
xchg
cmpsb
adc
idivl
mov
mov
cwtl
push
mov
xchg
push
pop
xlat
lock
jp
push
xlat
out
mov
mov
xor
xchg
jle
sub
mov
das
decb
lahf
or
test
cmpsl
jo
negl
xor
aad
mov
cmpsb
lahf
xchg
cmpsl
insb
cli
push
cmp
jg
or
lea
pop
xchg
fbstp
push
repnz
das
in
cmc
addr16
or
or
or
loopne
dec
jne
pop
lahf
popa
and
outsb
adc
aaa
add
mov
mov
cwtl
cmpsb
roll
pop
jb
leave
cmpsb
adc
lcall
test
divb
outsb
test
adc
sub
movl
and
aad
jp
xor
into
xor
loopne
inc
or
clc
push
andl
mov
or
mov
cld
jecxz
shlb
xchg
addr16
sbb
dec
ret
jne
roll
data16
ss
cmpsl
aam
cmp
cltd
std
out
fwait
xchg
out
pop
adc
mov
cmp
push
sbb
push
adc
or
cmp
adc
sub
imul
mov
and
imul
pop
test
sbb
push
xlat
adc
les
fbld
rcrl
xchg
add
in
std
bound
add
sub
sub
or
js
mov
loopne
cli
mov
or
cmp
cwtl
mov
pop
cmpb
or
shlb
imul
add
push
mov
insb
add
popf
pop
out
stc
sarb
cmp
outsl
add
insl
sub
mov
inc
andps
test
daa
push
mov
aam
pop
pop
and
inc
stos
xchg
or
es
xchg
xor
pop
pop
ret
adc
jae
dec
xor
popa
aas
dec
lods
pop
nop
mov
fldcw
jnp
mov
sbb
mov
jae
nop
fsubp
xor
adc
mov
mov
movsl
sbb
push
loopne
loop
test
jbe
mov
push
lods
ljmp
sub
sub
jne
lret
imul
lds
loopne
stc
dec
outsb
fstpt
lods
pop
or
ret
int3
insl
ds
cmc
xchg
pushf
imul
xorl
jae
xor
jge
jmp
and
negl
int
and
adcb
cld
xor
xchg
jne
xchg
sub
mov
sub
fcoml
cmp
rclb
outsl
sub
dec
cmpsl
test
inc
inc
div
popa
sti
push
test
push
fmuls
fistl
xchg
adc
cltd
inc
js
adc
and
mov
adc
fisubrl
rol
push
add
movsl
movsb
mov
mov
jo
adc
mov
dec
dec
jns
test
cli
mov
mov
jno
mov
stos
sbb
cmc
test
sub
addps
xchg
pop
sarl
idiv
cmpsl
xchg
ljmp
jno
add
cmp
pop
mov
insl
jns
xchg
test
cmp
mov
out
lret
xchg
push
sub
sahf
iret
das
mov
sub
or
insl
ja
inc
loope
sub
divb
jne
jg
push
cmc
fdivl
popa
mov
mov
out
and
push
mov
ss
icebp
mov
lahf
adc
out
and
leave
inc
cs
jnp
or
enter
cmpsb
push
repnz
or
push
iret
aaa
lcall
add
ljmp
aad
test
sbb
mov
sahf
daa
mov
or
es
mov
shrl
in
and
xor
mov
es
scas
aam
sbb
mov
cltd
ss
mov
jmp
iret
xchg
cmp
cltd
and
dec
jge
inc
jbe
mov
xchg
mov
jo
dec
mov
popa
cmp
push
push
mov
jbe
inc
xchg
loop
cmp
aas
xor
gs
cltd
ds
outsl
push
stos
shll
push
ja
les
ljmp
mov
xor
movsl
fstl
inc
out
jmp
dec
jl
add
sub
pop
jl
dec
mov
xor
dec
sbb
fstpt
jns
push
fistpll
in
adc
sti
loope
mov
dec
jecxz
jbe
fildll
mov
scas
xchg
data16
clc
adc
push
pop
insb
mov
cmpsl
add
jb
add
cld
rclb
out
pop
mov
cmp
pop
and
and
insl
cmp
adc
fisubs
push
mov
sbb
xor
xor
mov
movsl
ja
addr16
adc
or
pop
scas
out
cmp
cmp
rcrl
adc
fwait
movsb
daa
push
cli
hlt
dec
jae
sub
bound
fsubrs
movsl
call
dec
fs
fwait
rcll
scas
mov
xlat
idiv
movsl
jge
dec
fsubs
push
mov
pop
push
push
fwait
add
pop
and
data16
out
lret
mov
jb
das
push
out
pop
mov
loope
fiaddl
mov
test
iret
pop
xor
inc
popa
xor
and
stos
xchg
or
imulb
es
xchg
jmp
cmp
push
dec
incl
shr
fmull
jl
jo
sbb
fbld
hlt
fcmovnu
pop
repnz
inc
imul
push
mov
or
mov
pushf
sub
stos
int
mov
mov
mov
outsb
mov
cmp
rcr
rcll
aaa
pop
xchg
fstpt
push
jns
cmpsl
push
movsl
and
pop
xchg
clc
filds
rcrl
shlb
repz
cwtl
jne
mov
test
sbb
insb
inc
pop
and
or
movsl
mov
dec
out
mov
loop
fstpl
faddp
daa
mov
mov
mov
xorb
cld
neg
inc
in
inc
data16
aam
inc
cmp
subb
push
dec
divb
push
mov
lret
add
mov
xchg
cmp
ret
inc
mov
push
adc
test
test
in
jle
lcall
lods
dec
das
iret
bound
rcll
fistpl
sub
pop
jmp
mov
xor
in
push
mov
aam
dec
inc
rol
aas
mov
and
sahf
sbb
dec
pop
bound
or
sub
repz
or
in
les
mov
mov
int3
out
fbld
adc
aaa
int
cmp
or
jp
xchg
mov
cld
andl
sbb
rcr
ret
dec
loop
outsb
lock
rcl
data16
test
popf
push
push
push
or
dec
jns
mov
push
push
xchg
mov
xlat
pop
and
mov
or
cmpsb
fs
sarb
lea
push
les
adc
test
fcomi
adc
and
cmpsl
xlat
repz
or
inc
stos
xlat
repnz
pop
pop
fisubrs
add
cld
imul
xor
xor
ds
lret
inc
and
sub
push
xor
push
lahf
sbb
mov
dec
imul
inc
jb
int3
cmpsl
xor
clc
xchg
or
mov
mov
das
jnp
mov
mov
add
imul
jle
aad
popf
jg
movsb
aaa
pusha
or
cli
sub
push
xchg
mov
ret
js
cld
cwtl
stos
sub
call
adc
and
add
mov
or
pop
adcb
add
pushf
xchg
cmp
jecxz
mov
or
jle
add
mov
fwait
addb
loopne
aas
dec
lods
sbb
test
in
hlt
jns
inc
xor
adc
sbb
int
jl
rcl
loope
in
mov
pop
xlat
mov
stos
sub
call
loope
loopne
test
insb
movsb
xchg
inc
stos
ret
lods
mov
lea
mov
mov
inc
mov
mov
sbb
xchg
push
xor
inc
cmp
mov
mov
xchg
adc
mov
push
xchg
jae
mov
mov
iret
adc
call
mov
xor
in
jno
adc
add
xchg
bound
mov
scas
push
pop
jno
mov
xor
inc
arpl
lcall
sub
inc
repz
gs
mov
inc
dec
repz
dec
lods
ja
pop
adc
je
cs
jo
sbb
insl
or
jp
xchg
sahf
loop
pop
aaa
mov
pop
aam
mov
adc
icebp
push
lock
cmp
pop
adc
dec
jmp
inc
loop
mov
call
mov
cmp
lods
xlat
shlb
or
push
add
test
xchg
adc
cltd
or
in
insb
dec
and
xor
lods
shrl
sbb
outsl
pop
daa
push
sub
dec
imul
dec
inc
fnstcw
out
cmp
js
bnd
shlb
stos
ds
fcomps
inc
inc
into
test
pop
rcl
pop
pusha
mov
outsb
lcall
lds
xchg
movsb
fdivrl
push
insb
push
jge
sbb
mov
mov
rcll
adc
add
arpl
enter
stos
mov
add
and
mov
ljmp
push
jmp
in
ret
xor
fxch
sti
xchg
repz
out
inc
sbb
imul
mov
sbbl
sarl
xchg
movsb
dec
xchg
leave
and
pop
mov
adc
xchg
jecxz
out
adc
pusha
nop
cs
lahf
stos
push
cld
fs
and
pushf
or
xchg
ficoms
push
ljmp
shr
test
push
sahf
iret
push
fisttpl
out
out
insl
shlb
rolb
imul
sub
sub
outsb
mov
loop
rcll
adc
xchg
dec
into
push
pop
jmp
outsb
pop
aaa
push
pop
push
test
xchg
xor
testb
stos
hlt
xchg
pop
fisttpl
shll
xor
sub
push
lahf
xor
mulb
mov
jg
mov
mov
adc
mov
sbb
mov
mov
setne
daa
mov
sub
pop
cli
jp
xchg
sub
and
xchg
imul
ficompl
out
push
andb
jg
jnp
push
out
lahf
enter
push
push
shll
mov
mov
sti
outsb
xor
mov
scas
aas
jle
jae
rcr
aas
push
out
dec
or
popa
arpl
rcl
mov
fildl
setne
sub
dec
outsl
push
daa
mov
test
xchg
in
cwtl
sbb
inc
xor
mov
lods
pusha
xor
inc
shl
or
inc
jno
xlat
shrb
hlt
movsl
movsb
sub
push
arpl
jl
mov
inc
inc
idiv
push
inc
or
sbb
dec
xchg
adc
dec
fcmovnu
rcl
cmpsb
push
fcomps
insl
test
shlb
test
mov
outsl
das
dec
outsb
popf
cs
xchg
loopne
incb
fdivr
clc
xchg
arpl
cld
rorl
mov
movsb
dec
lea
push
xchg
adcl
in
rcrb
out
mov
sub
lds
neg
pop
add
pusha
inc
xor
icebp
dec
mov
je
data16
push
bound
xor
push
xchg
sub
lods
js
xor
inc
mov
in
mov
jg
dec
add
loope
mov
jg
popa
mov
mov
sub
aas
push
jmp
mov
lcall
imul
xor
insl
add
push
push
and
sub
jp
mov
adc
mov
stc
push
push
inc
jp
push
or
jae
out
jae
push
pop
subb
pop
mov
ror
repnz
or
cmp
mov
sarb
mov
jp
cwtl
mov
movsl
or
divb
dec
imul
lea
xchg
pop
outsb
xchg
sbb
pushf
mov
test
scas
and
decb
rcr
sub
imul
dec
in
inc
or
fnsave
sbb
sub
adc
mov
out
inc
jae
mov
or
and
mov
adc
jo
test
fnstsw
sarb
xor
xor
rcrb
das
xorl
dec
or
fucomip
jg
shlb
out
mov
je
mov
das
cmp
jbe
mov
rolb
add
fiadds
stc
arpl
and
dec
scas
aaa
mov
shrb
fdiv
mov
mov
sub
jmp
roll
pop
jle
scas
sbb
lret
inc
arpl
add
fimuls
pushf
outsb
push
mov
inc
test
subb
faddl
fistpl
cmp
push
jp
scas
lahf
mov
sub
pop
mov
jb
dec
xor
adc
ret
sti
pop
out
imul
je
cli
sub
push
mov
pop
inc
cwtl
xchg
inc
lret
add
pop
inc
push
add
add
adc
or
push
loope
jne
dec
repz
inc
cwtl
mov
mov
adc
pop
add
sbb
jp
fdivr
and
cmp
add
ds
sarb
push
inc
xchg
push
fldt
fisubrs
lock
cli
les
sub
pushf
adc
sti
dec
outsl
adc
lods
fidivrs
inc
sub
rcr
ss
sbb
pop
pop
ficomps
mov
sbb
repz
popf
add
and
roll
push
mov
or
lahf
sahf
loope
mov
push
jmp
in
jae
btl
cmp
cmp
adc
jno
rcr
pop
out
or
cs
mov
xchg
adc
add
inc
xor
pushf
mov
lea
iret
sbb
push
xor
call
shrb
inc
repnz
add
xor
andb
mov
lea
xchg
enter
mov
mov
mov
push
cmpsl
idivl
jmp
dec
mov
daa
sbb
inc
push
fmuls
cmpsb
out
jmp
cli
sub
outsb
push
push
dec
out
f2xm1
push
mov
bound
aam
loopne
push
lahf
outsl
inc
or
mov
inc
and
loop
cmp
rclb
or
push
fcompl
in
jbe
ds
mov
inc
dec
mov
mov
scas
popa
adc
pop
dec
dec
and
imul
in
xchg
push
adc
addr16
inc
pop
jae
bound
cmp
sub
mov
das
cwtl
jb
push
lcall
mov
testb
jb
cmp
rcl
in
and
daa
jns
sub
and
je
pop
lock
outsb
rcrl
ror
and
pop
jp
mov
mov
push
fisubrs
jns
out
cltd
in
sbb
in
cmpb
push
rcll
fadds
inc
test
jge
mov
lds
test
neg
jmp
sbb
and
in
sub
ds
inc
ja
sahf
das
mov
sbb
loopne
pop
je
iret
add
out
mov
shrb
mov
cs
mov
outsb
loope
push
mov
test
cmp
insl
inc
pusha
add
dec
add
xor
sub
sub
mov
loopne
adcb
dec
in
stos
fimuls
mov
cltd
cmp
mov
test
lret
dec
push
jb
lret
shlb
mov
jbe
adc
imul
jbe
inc
dec
xchg
mov
add
mov
pop
push
pop
bound
jg
fcmovu
daa
imul
leave
sub
push
mov
icebp
and
sbb
aam
adc
arpl
cwtl
xlat
mov
adc
ror
inc
scas
insl
mov
dec
int
add
push
aas
add
mov
push
push
fdiv
pop
outsb
ficoml
xchg
das
gs
call
inc
sbb
sti
xchg
test
cmp
pop
jle
jae
xor
shll
in
repz
pop
mov
mov
add
xchg
aas
inc
push
push
xchg
mov
sbb
adc
sub
shl
repnz
jo
lods
ja
cmp
sub
dec
inc
imul
in
lret
stc
inc
sub
mov
ja
fisubs
pushf
insb
fwait
ret
rclb
repnz
les
jmp
cmp
add
pop
jmp
pop
inc
sti
pop
inc
cmp
xlat
popa
iret
cmc
adc
adc
in
rorb
test
xchg
shrb
roll
jbe
mov
in
fistpll
or
mov
enter
notl
adc
sbb
sub
adc
push
inc
jo
test
imul
and
push
nop
cmpsl
les
sub
sub
xchg
xor
dec
out
jbe
repnz
icebp
jo
dec
test
stos
inc
jmp
fucomip
in
xchg
loope
pop
lds
push
test
jmp
jno
sub
xor
mov
sub
addr16
in
pop
mov
jb
adc
dec
lods
add
cmpsl
pusha
daa
ljmp
pop
sbb
clc
cmpl
loop
cmp
dec
mov
loopne
mov
daa
lcall
or
add
shlb
popa
mov
mov
push
icebp
xchg
inc
scas
and
stc
loop
rolb
shrb
shll
add
push
loope
add
xchg
iret
repnz
jmp
call
dec
xor
andb
loopne
aas
outsb
adc
inc
fisubrs
jl
xor
push
pop
mov
xor
cmpsl
jecxz
lret
cmp
in
into
cmc
sub
adc
pop
xchg
jge
jl
dec
fmull
or
jae
lds
mov
inc
cld
mov
push
add
aas
adc
push
xor
fistpll
or
les
jl
dec
in
push
scas
xchg
inc
lahf
daa
xor
enter
dec
pop
sub
and
loope
rcll
stos
xor
push
gs
cwtl
cmp
sbb
movl
jae
int3
ljmp
inc
sub
lret
fldenv
xor
jmp
hlt
dec
push
sub
lods
test
sub
xor
insb
pop
repnz
add
scas
fs
fistps
cmp
test
inc
inc
pop
jb
loop
or
ja
push
pop
cli
stos
cmp
cs
cmp
aas
cmp
ss
fcompl
jl
sub
pushf
test
test
push
cmp
mov
insb
cmp
aad
cmc
mov
repnz
sub
sub
push
aad
inc
push
movswl
dec
cmp
xchg
scas
xor
int3
cli
mov
fimull
add
cwtl
cld
xchg
add
sbb
ret
cmp
subb
shlb
pop
push
or
aas
dec
inc
loop
jns
test
lock
dec
in
fidivrs
inc
das
cmp
int3
or
insl
push
rolb
mov
idiv
xor
fistl
outsb
loop
dec
xlat
add
push
pop
pop
adc
and
pop
jns
enter
out
mov
mov
and
adc
ljmp
xchg
dec
jnp
cmp
cld
xor
jp,pn
sahf
mov
sub
int
jp
pop
or
jmp
into
xchg
push
cmp
push
aaa
mov
jp
mov
inc
pusha
repnz
jo
in
adc
cmc
lock
daa
jno
or
pop
add
enter
mov
sbb
in
cmc
xlat
iret
mov
gs
inc
mov
nop
xchg
lods
sbb
xchg
push
jbe
ja
jne,pt
jns
mov
cmp
out
mov
cmp
es
and
xchg
sbb
cmp
xor
inc
xor
fsubrs
and
jp
mov
out
add
orb
rorb
repz
push
in
xor
aas
pop
aam
ds
cs
pop
pop
jo
mov
out
pop
fwait
cltd
jnp
push
in
repnz
pusha
inc
sbb
xor
mov
lret
push
jnp
lods
aaa
push
shrb
sti
lods
aaa
movsl
shr
mov
aad
pop
jecxz
mov
cltd
call
gs
outsb
jge
jns
out
fadd
jle
fnstsw
imul
ja
movsb
mov
orb
mov
and
ret
scas
out
repnz
mov
roll
stc
pop
testb
out
cld
xchg
minps
dec
mov
das
stos
ret
out
std
repz
and
loopne
and
mov
test
adc
sub
add
mov
loop
xchg
daa
sbb
mov
sub
fnstcw
lods
inc
and
fidivrs
clc
adc
sbb
fcoms
add
dec
idivl
xchg
ret
add
loop
dec
mov
push
mov
xchg
ljmp
jl
jmp
add
or
xchg
inc
and
or
adc
lret
jno
pop
mov
ja
add
cmp
adcl
mov
pusha
jnp
push
mov
or
movsb
pop
push
bound
shrb
inc
cmpsb
cmc
inc
pop
mov
and
mov
inc
mov
lock
adc
fisubs
cmp
and
movsl
in
cs
sbb
xor
pop
mov
sub
cld
loope
jl
and
aam
fnsave
mov
jg
add
mov
inc
push
out
jo
bound
rcl
faddl
mov
or
sub
addr16
inc
sub
adc
in
mov
movsb
lret
in
testl
or
das
push
xchg
xchg
mov
and
in
loopne
jno
dec
and
mov
jmp
xor
push
in
loop
outsl
mov
jp
pop
cwtl
jmpw
pop
adc
dec
sub
jmp
or
scas
ljmp
jbe
push
ret
ffreep
pop
adc
int3
mov
mov
and
or
dec
mov
mov
sub
stos
xor
stos
int
xchg
test
sub
jo
std
xchg
xchg
mov
cwtl
dec
popa
loope
and
ja
cmp
push
xchg
inc
sub
inc
mov
pop
dec
push
stc
cltd
sahf
mov
cmp
sub
in
scas
mov
mov
shll
adc
lods
sub
pushf
jle
fsubs
jbe
mov
in
pop
fcomp
push
and
pop
mov
fsubrs
or
es
pop
out
mov
dec
cmp
addr16
lcall
sarl
stc
lods
ret
inc
pop
repz
sbbb
mov
adc
mov
insl
out
fildll
dec
inc
test
adc
xchg
cmp
mov
xchg
jnp
jmp
add
sbb
sub
ret
inc
mov
cwtl
fsubs
dec
push
stc
jge
dec
mov
les
mov
fadds
dec
and
push
loop
arpl
aas
sub
dec
inc
xorb
testl
clc
jle
mov
repz
jbe
inc
dec
aad
fwait
jmp
sbb
call
mov
pop
or
aam
dec
fbld
push
fcmovnbe
scas
mov
out
sub
jb
sahf
mov
out
push
adc
sub
stc
adc
dec
mov
sub
sub
jle
adc
lcall
sub
leave
daa
mov
leave
dec
add
mov
dec
outsb
test
dec
scas
sbb
cmp
add
fstpl
lret
push
mov
xchg
lods
push
mov
test
mov
arpl
lods
xchg
mov
adc
in
cmp
lahf
mov
dec
inc
ficoml
or
inc
ret
jb
out
push
add
ss
adc
jle
in
inc
mov
sub
adc
xchg
mov
mov
sbb
stos
push
ret
dec
jno
scas
sub
test
movsl
ljmp
pop
pop
add
jnp
fs
aad
sbb
mov
mov
mov
xor
idivb
loopne,pt
mov
push
and
ret
scas
dec
inc
inc
ret
notb
inc
std
sbbb
lea
jmp
adc
mov
push
jns
imul
movsb
std
popl
imul
fsts
in
in
test
cmp
sarb
lods
enter
mov
enter
mov
test
in
pop
lret
jge
int3
imul
inc
ljmp
lds
stos
and
jbe
add
xchg
and
shll
sbb
jno
jmp
add
jne
call
sbb
jbe
inc
fstl
pop
aad
setb
dec
jo
loop
scas
xchg
incl
popf
mov
adc
bnd
popa
or
cmp
popa
fstpl
js
mov
lds
jns
mov
mov
pusha
adcb
dec
add
adc
shrb
outsb
xlat
dec
fsubr
pop
std
icebp
adcb
jle
jno
jnp
std
lcall
cmpsb
jns
jae
push
mov
dec
cld
pop
ss
mov
cmpb
mov
inc
js
daa
iret
and
int
hlt
mov
lret
xor
sub
dec
std
stos
cs
sbb
jo
pop
jg
arpl
lahf
mov
negl
mov
xchg
xchg
or
out
sub
lds
mov
in
dec
iret
roll
mov
out
arpl
push
loope
or
js
cmp
cld
jbe
lcall
cwtl
cmpsl
mov
jo
jmp
xchg
ss
mov
cmpsb
das
mov
jp
sub
or
jge
or
and
test
nop
or
jl
imul
mov
add
pop
fldcw
sti
cmp
inc
enter
dec
sub
lret
lods
nop
mov
std
mov
cld
rol
xor
and
fisttpll
sbb
dec
xchg
popa
sti
sub
add
fsubl
punpcklbw
push
lret
push
test
int3
xchg
ret
je
movsb
xchg
mov
and
jl
push
fdivrl
and
dec
cmpsl
or
int
mov
mov
add
mov
out
adcl
dec
clc
adc
fbstp
imul
rcrb
jecxz
and
cltd
mov
xchg
pop
push
and
xchg
or
pop
iret
das
sbb
pusha
dec
out
fldenv
or
fst
repz
and
out
aaa
pop
into
push
lock
cmpsb
jl
cmp
out
xor
outsb
push
jns
mov
inc
fsubrs
lret
insl
jmp
movlps
lods
push
mov
xor
mov
unpcklps
inc
or
xchg
pop
dec
push
jg
xchg
jns
aas
fistps
xchg
add
jnp
outsb
es
mov
jae
fisubs
ret
cmpsl
les
fwait
loop
bound
repnz
bound
mov
xor
xor
dec
lret
repz
adc
ss
scas
mov
pushf
xchg
cmp
adc
adc
jg
dec
shl
and
ficompl
push
and
and
cmp
outsb
nop
jecxz
andb
stc
lret
lret
jae
pop
xchg
jbe
aaa
and
push
jnp
cmp
imul
push
test
mov
push
jg
mov
push
cltd
mov
lock
push
add
add
jbe
sbb
push
jge
out
insb
xor
pop
outsb
call
mov
mov
decl
test
adc
dec
push
iret
imul
fisubl
mov
mov
mov
mov
jle
mov
imul
add
fmull
orl
inc
das
daa
scas
and
movsl
mov
fldz
fadd
lcall
jmp
test
xchg
int
inc
rcrl
aas
imul
cwtl
sbb
pop
cmp
sub
and
jbe
ja
pop
les
popa
mov
pop
jl
or
jbe
sub
sbb
test
xchg
lret
insl
and
mov
pop
lret
jb
gs
sub
std
push
or
sbb
pop
lods
call
mov
cld
popf
jno
fcompl
dec
xor
in
mov
xchg
sbb
imul
sbbl
push
ss
jl
xor
mov
pop
xor
enter
fisubrl
mov
cmp
or
jl
testb
fiadds
adc
xchg
mov
mov
aas
and
ret
incb
xor
and
jno
pop
addr16
call
imul
call
mov
pop
jge
sbb
pop
popf
cld
test
push
jae
dec
mov
in
xor
lea
jmp
mov
rcll
test
or
in
cmp
mov
inc
dec
adcb
pushf
jnp
pushl
add
adc
cwtl
or
fcmovu
cmp
dec
js
jnp
insl
test
ljmp
mov
cltd
pop
jp
or
push
loopne
lcall
subb
push
jecxz
sub
rcrb
imul
mov
mov
leave
sbb
pop
sub
ss
cwtl
sti
stos
xor
in
bound
insb
incl
mov
outsb
loop
movsl
push
aad
xor
lret
add
pusha
or
dec
mov
loope
pushf
into
fnstsw
add
vlddqu
jmp
pop
xor
out
outsb
pop
mov
loopne
fbld
adc
push
movsb
in
jg
andl
and
push
movsb
xor
or
mov
xchg
mov
lret
mov
outsl
lea
sub
divb
test
xchg
xchg
mov
mov
jl
jns
and
fidivl
or
adc
mov
adc
xor
in
ss
sarl
mov
imul
push
ss
inc
xchg
jecxz
mov
mov
inc
clc
lods
push
adc
push
pushf
push
gs
call
loope
cltd
movsl
or
aam
pop
pop
push
test
pop
cs
outsl
xchg
pop
aas
aaa
cmp
ss
mov
popa
mov
mov
pop
sahf
add
mov
xor
mov
scas
mov
mov
out
mov
arpl
shlb
test
inc
push
mov
push
cmp
xchg
push
push
dec
into
lods
in
popf
pushl
aad
stc
cmp
ljmp
jns
lret
ss
push
jbe
sbb
icebp
faddp
or
gs
push
fidivl
add
inc
inc
mov
lcall
sbb
jge
sbb
into
gs
add
fwait
idivl
loope
ret
insl
ss
sarl
aaa
in
jmp
outsb
dec
fs
inc
jle
xchg
inc
mov
fstps
stos
lahf
add
pop
pop
cmp
test
fbstp
jbe
push
mov
lds
push
ja
pop
aad
push
test
daa
std
xchg
or
cmpsb
xchg
iret
dec
aaa
enter
adc
inc
mov
std
out
dec
out
pop
fisttpl
sbb
call
cmp
xchg
fstpt
shrb
mov
pop
add
aam
xchg
or
fisttpll
jle
sbb
jmp
test
rol
push
popf
inc
fwait
or
test
mov
ret
sub
jle
std
scas
adc
jle
add
bound
and
inc
mov
or
jns
sub
mov
xor
lea
mov
pop
mov
int3
pop
test
fidivs
cwtl
or
mov
int3
ret
xchg
cld
inc
loopne
adc
cmc
lret
jb
cmp
ret
cmp
pop
fs
push
mov
push
stos
pop
inc
or
pushf
cmpsb
xchg
cmp
xchg
imull
not
mov
in
mov
mov
mov
js
icebp
gs
mov
in
sub
pop
fldcw
cli
arpl
mov
shll
fs
fimuls
dec
cmpsb
jb
jnp
daa
push
bound
hlt
xchg
mov
xor
sti
repnz
or
push
mov
outsb
xor
clc
jno
push
push
sub
xor
sbb
inc
iret
xchg
inc
and
lret
jne
jp
mov
mov
jmp
sbb
mov
cmpsb
pop
fs
xor
mov
push
bound
stc
test
push
fimull
cli
add
gs
mov
xchg
loop
mov
pop
sbb
mov
lds
and
dec
stos
hlt
daa
push
jbe
mov
cs
pop
loop
lahf
xchg
push
lcall
repnz
push
mov
inc
jae
mov
jg
lret
ds
adc
repnz
popf
gs
pusha
jbe
data16
push
fcomip
cltd
lahf
adc
lahf
leave
out
dec
out
int
les
inc
bound
addr16
jmp
inc
insl
or
test
leave
xchg
dec
inc
dec
das
sbb
sbb
pop
test
mov
je
addr16
mov
sub
sub
or
mov
jno
xchg
enter
inc
push
arpl
addr16
loope
dec
clc
and
xchg
icebp
andl
movsl
iret
sub
push
add
and
add
sahf
or
repz
sub
inc
xlat
sbb
outsl
cmp
mov
js
jmp
fildl
pop
sbb
push
pop
scas
inc
inc
mov
mov
xor
xchg
aas
mov
call
mov
add
loop
add
jbe
sbb
xor
cld
dec
out
and
adc
cmp
jl
mov
cmpl
ja
and
add
sbb
mov
mov
lret
jae
jl
and
pushf
lods
in
pop
idiv
fldt
xor
inc
daa
pop
sarl
cmp
fistl
or
dec
fmull
roll
testl
cld
enter
cmpsb
sbb
pop
lods
es
pop
inc
outsb
int3
aas
leave
shlb
in
es
mov
xchg
shr
call
adc
sbb
push
mov
gs
jo
mov
inc
aad
flds
pop
inc
mov
das
pop
insl
xchg
xchg
pushf
or
insb
or
imul
jg
sub
mov
scas
pop
mov
jg
cmp
xchg
push
jne
jo
sar
aas
shrb
mul
jecxz
lret
add
inc
in
push
fists
lahf
inc
or
hlt
cmp
mov
jo
lods
std
push
mov
xlat
mov
or
leave
sbb
in
divb
cld
add
ja
stc
clc
push
jmp
test
push
aaa
push
shlb
ljmp
xchg
xchg
xor
jne
jno
fisttpll
lock
sarb
push
cli
add
loope
clc
xchg
sbb
push
jo
pop
sbb
jno
js,pt
sbb
test
fwait
inc
dec
pushf
xor
pop
and
cmp
cwtl
add
arpl
mov
cmc
loope
les
jne
outsl
mov
loope
shrb
ret
dec
lods
aas
dec
ljmp
push
push
imul
insb
rolb
mov
aam
sub
add
jae
push
push
stos
cs
push
sub
repz
repnz
and
pop
or
push
inc
imul
xchg
sbb
lret
ds
sarb
xchg
test
adc
int3
push
hlt
and
pop
ret
cmp
fisubl
cmp
mov
mov
cmp
in
inc
les
cs
mov
inc
rcrb
push
adc
jmp
add
dec
mov
push
mov
iret
cmpsl
mov
push
mov
or
repnz
ljmp
push
mov
sbb
lret
push
sahf
les
dec
pop
in
les
mov
out
icebp
sbb
or
inc
xchg
jecxz
jle
and
sub
int
ljmp
mov
lock
dec
aam
push
rcrl
sub
cmc
data16
cli
mov
adc
mov
test
stos
ljmp
push
cmp
add
mov
addr16
ljmp
mov
push
mov
cld
int
mov
xor
mov
or
jne
or
mov
xchg
out
lret
add
test
mov
loope
push
mov
mov
or
push
xor
mov
xor
in
sub
mov
outsb
mov
mov
imul
pop
cmpsb
jns
jg
lcall
fistpl
bound
fisttpl
or
mov
jp
mov
mov
pop
and
sbb
pop
inc
pop
fidivl
daa
lods
stos
adc
faddl
sbb
ss
sahf
and
xor
or
jb
idivb
push
arpl
jbe
js
mov
into
loope
inc
leave
xor
call
or
sub
dec
bound
fimuls
outsb
flds
das
sbb
pop
pop
add
ret
jbe
addr16
fldln2
popa
stos
jae
push
jne
cmpsl
jb
dec
out
hlt
mov
push
and
inc
mov
mov
inc
stos
test
cmp
in
mov
ja
push
mov
sbb
xor
insb
and
psubd
jmp
cmp
push
loopne
test
fistpll
lods
fdivrl
mov
inc
in
dec
rcll
stos
sbb
sub
dec
dec
and
into
xorl
dec
sbb
mov
out
jne
jge
lods
pop
fistps
scas
fcmovnu
aas
xorl
sub
das
out
stos
ja
pop
scas
pop
dec
xchg
and
das
jno
ror
xor
pop
rol
cmpsb
sbb
and
insb
cmp
out
xor
imul
mov
jb
scas
mov
push
xchg
insb
add
filds
iret
rolb
cmp
out
inc
movsb
inc
std
or
xchg
jbe
fs
test
pop
push
fistps
lahf
push
andb
inc
jmp
fldenv
rolb
sub
add
lods
jnp
gs
push
addb
lret
mov
scas
pusha
ss
in
xchg
call
lret
dec
imul
addr16
jmp
ss
xchg
adc
sub
movsb
fsubl
cmp
lret
or
add
les
cmp
lds
and
mov
xlat
cmc
sub
jge
out
data16
ds
jmp
xchg
mov
enter
pop
inc
scas
fcoms
bound
cld
fs
gs
mov
lret
xchg
out
pushf
rcrl
sub
pop
das
mov
cld
mov
jns
pop
das
mov
gs
add
sub
outsb
insb
dec
jae
lret
fildl
xchg
sbb
leave
jno
sbb
sti
adc
ss
aas
mov
and
jmp
inc
pop
push
inc
add
repnz
add
mov
int3
arpl
pop
loope
or
adc
dec
lret
cmp
ss
sti
sbb
lds
sub
pop
mov
mov
scas
inc
test
xor
arpl
cmpsb
inc
fwait
insl
inc
and
mov
add
add
pop
repz
jmp
pushf
into
xor
je
popa
or
pop
je
dec
xchg
loopne
cltd
cs
inc
and
idivl
stc
cmpsl
ds
icebp
sbb
stos
fldenv
xor
mov
mov
iret
mov
mov
mov
pop
xchg
shlb
pusha
cld
repnz
aad
leave
mov
mov
dec
and
pop
outsb
popf
test
and
xchg
pop
adc
jle
fadds
aaa
push
cmp
cmp
jmp
test
shl
jl
inc
mov
mov
jno
mov
aas
rep
dec
push
fldenv
orb
insl
push
das
mov
mov
mov
popf
icebp
sub
clc
sub
and
mov
push
stc
inc
pop
stc
inc
bound
inc
nop
jo
xchg
and
sub
sti
fwait
out
ficoms
lcall
icebp
pop
lahf
jae
jnp
mov
sbb
or
mov
shlb
xchg
mov
cltd
rcrb
lahf
pop
imul
sbb
sbb
in
cmp
sub
jns
loopne
int
insl
lods
aam
dec
add
inc
ret
imul
sbb
sbb
in
lret
push
sub
mov
sub
lret
jecxz
or
mov
pop
lret
dec
adc
mov
pop
outsl
stos
out
clc
xor
vpmacsswd
push
frstor
pop
inc
fnstenv
dec
and
int3
fildll
lods
adc
aam
or
lea
mov
and
mov
mov
xchg
popa
and
add
pop
inc
int
mov
jne
repnz
in
lods
or
or
test
fwait
jmp
testl
push
adc
js
or
xchg
ds
ret
cli
mov
faddl
popf
xor
ret
inc
outsb
fcmove
cmc
test
add
pop
test
sub
fnstenv
inc
lds
movsb
outsl
sub
jbe
rcrb
ljmp
hlt
pop
pop
pop
insb
sub
call
ret
jmp
inc
xor
mov
add
mov
mov
stos
scas
outsl
push
cmp
mov
pop
push
add
pushf
sbb
mov
xchg
xlat
scas
xchg
adc
mov
test
mov
mov
lret
loope
mov
outsl
mov
jmp
sub
jnp
into
xchg
sbb
xchg
sub
add
call
jo
xchg
inc
inc
test
inc
aas
clc
xchg
inc
orl
cld
inc
aaa
in
sbb
aaa
lods
mov
notl
jg
inc
ficoms
ds
push
inc
lods
shll
jecxz
int
add
test
or
adc
xorl
das
fwait
cwtl
stos
mov
mov
jbe
mov
cmpsb
jge
aam
or
adc
push
stos
int3
scas
jno
aas
mov
imul
loope
dec
xchg
mov
fsts
push
daa
cmp
pusha
push
pop
enter
or
scas
out
pushl
jnp
lods
pop
sbb
ret
pop
data16
mov
mov
inc
jle
add
and
fs
cmp
icebp
push
xchg
outsb
or
fistl
hlt
or
iret
int3
imul
lock
shrb
mov
out
ja
xchg
xor
ret
insb
xchg
jmp
mov
inc
ja
pop
mov
insb
je
int3
movsb
mov
pop
fisttps
mov
add
mov
test
or
cmp
rorl
inc
jns
xor
lods
ret
dec
jns
in
fadds
js
jno
jge
out
outsb
sbb
xor
mov
repz
nop
mov
and
jp
loope
xchg
fidivrs
jb
mov
inc
mov
or
ljmp
add
mov
xchg
addr16
inc
or
cmpsl
cld
dec
rclb
cltd
stos
scas
into
inc
push
and
push
or
stc
cmp
mov
inc
and
inc
les
inc
dec
pop
add
lock
enter
xor
or
adc
lret
sbb
dec
xchg
sbb
mov
push
mov
jl
cmp
mov
push
mov
add
add
mov
popf
and
ret
jnp
mov
gs
leave
add
ds
dec
mov
xor
mov
mov
jmp
subl
jo
out
aam
jge
inc
imul
jmp
push
je
hlt
sub
iret
pop
jl
rol
xchg
imul
ret
aad
mov
lcall
mov
push
or
cmp
and
push
insb
jmp
sbb
mov
in
enter
cmp
or
or
mov
xchg
test
js
xorl
mov
aam
icebp
mov
into
mov
ret
pop
mov
ficomps
jae
out
iret
dec
in
pop
pop
sub
les
popf
int3
jp
gs
add
or
lock
cmp
xor
add
sub
mov
mov
int
xchg
insb
adc
ret
dec
js
jb
cs
xor
sbb
dec
out
or
enter
in
adc
shlb
roll
sub
aad
xor
test
cmpsl
jl
call
daa
adc
in
jo
cmp
in
std
cmp
xchg
xor
xor
cli
test
push
jecxz
add
outsl
pushf
ficoml
ret
inc
pop
stos
adc
pop
fsub
mov
inc
inc
xor
and
inc
aas
loopne
cld
sahf
ret
xor
cmpsl
push
or
sbb
pop
outsb
jmp
jmp
or
ss
pushf
aad
adcb
movsl
cmp
loope
mov
xchg
roll
cmp
iret
inc
and
ljmp
mov
test
arpl
or
and
pop
jno
test
mov
lods
mov
jmp
andl
loop
jmp
cmp
insl
rol
pop
lret
adc
or
and
cmp
aaa
cmp
xor
mov
xchg
test
cmpb
inc
ss
push
mov
or
fimull
jno
in
les
adc
nop
es
in
ret
popa
addr16
xor
movsl
and
shl
mov
xor
mov
push
push
dec
or
xchg
out
ljmp
mov
ror
int
int3
and
or
mov
push
insb
mov
cmpsb
ficoms
and
and
enter
paddusw
xor
lods
aaa
adcl
test
repz
scas
ret
mov
lock
clc
inc
inc
add
sbb
aad
mov
fwait
aaa
push
leave
dec
outsb
push
lds
imul
push
mov
push
push
lods
adc
dec
movsl
lahf
rol
idivb
push
aam
sbb
push
mov
mov
addb
int
sbb
dec
leave
out
adc
jmp
ljmp
or
cmp
in
in
or
dec
xchg
dec
lret
popa
pop
mov
jle
cs
dec
add
sti
aam
xchg
push
push
mov
push
nop
xchg
mov
test
cmp
pop
outsb
flds
inc
fmulp
or
add
and
xlat
mov
stc
cmc
int3
movsb
adcl
in
popl
aam
add
jnp
or
fcompl
push
push
inc
mov
divl
outsl
fidivrs
pop
icebp
inc
scas
test
push
adc
or
add
cmpsb
add
mov
mov
aaa
das
fimull
inc
push
dec
and
xor
inc
jnp
test
add
xlat
test
into
loope
les
lods
dec
out
mov
inc
scas
and
scas
xchg
sub
adc
cmp
or
out
lcall
int3
xlat
inc
mov
cmp
cwtl
movsl
sarl
inc
xchg
inc
inc
jle
ret
ss
addb
inc
mov
pop
mov
mov
mov
aam
lahf
jmp
mov
xchg
pop
add
aas
xchg
mov
in
dec
mov
int3
std
addr16
or
jle
je
push
fsubrs
pop
xor
cmp
rcll
mov
data16
pop
dec
sub
xchg
pop
in
mov
dec
shll
inc
fildll
mov
mov
adc
cltd
std
cs
mov
aas
inc
cmpl
out
add
push
push
adc
add
mov
fbstp
pushf
into
xor
add
add
outsb
cmp
cmp
sub
xchg
and
jge
int
jmp
mov
mov
fidivs
pop
xchg
sbb
sbb
push
xchg
mov
mov
xor
pop
out
jmp
dec
sub
dec
mov
fs
in
mov
add
xor
add
xchg
xchg
mov
pusha
inc
inc
xor
push
pop
push
fiaddl
push
and
sarb
mov
loop
mov
rolb
lret
pop
rcr
push
popf
jbe
add
mov
lods
pop
icebp
cmp
push
push
jne
mov
add
pushl
in
in
scas
inc
fistps
dec
mov
adc
lret
cltd
popf
imul
aas
mov
jp
in
push
or
mov
and
inc
insl
mov
mov
or
cmp
mov
mov
or
mov
out
out
in
mov
sub
pop
xor
sub
dec
scas
jno
xchg
or
mov
cs
ffree
push
shlb
adc
sub
pop
fcmovb
ja
xchg
fidivs
gs
mov
das
xlat
add
inc
rolb
pop
leave
and
iret
fstpl
inc
sbb
rcrl
mov
push
xor
or
or
mov
in
bnd
in
pop
pop
and
mov
adc
cmp
lock
mov
xor
jnp
cvttps2pi
pop
enter
add
push
push
dec
add
cmpsl
mov
xchg
or
pop
push
sub
adc
shl
sub
in
clc
dec
loop
pop
add
sahf
mov
lock
ds
cmpsl
jno
cld
pop
or
sbb
push
arpl
push
roll
shrb
lods
jae
ret
aam
xlat
or
fwait
in
inc
add
orb
fmuls
xchg
push
mov
jp
and
dec
pushf
xor
rolb
cmp
cwtl
ret
cld
cmp
pminsw
mov
scas
stos
inc
in
repz
jns
mov
xchg
lock
lods
pop
sbb
daa
fistl
pop
sub
cmp
dec
sbb
imul
loopne
mov
inc
and
inc
addl
mov
fnstenv
jbe
lods
inc
cmp
popf
and
cmp
negl
mov
pop
cmp
icebp
icebp
ret
adc
and
jnp
or
out
scas
in
mov
sub
lea
fimull
xorl
pop
inc
ret
movl
cli
sub
or
mov
out
gs
add
popf
adc
cmpsb
pop
push
lods
sbb
xor
dec
sub
jl
cwtl
movsl
enter
mov
or
jl
stos
fldt
jmp
mov
int3
lcall
jecxz
push
cltd
add
andb
push
out
in
ljmp
mov
fldl
lock
je
test
xor
data16
jmp
js
push
jg
outsl
mov
mov
jmp
stos
pop
mov
and
ljmp
jle
sub
lret
dec
shlb
call
in
in
inc
shl
or
dec
addr16
fs
jnp
push
fidivs
cmp
cmp
addb
add
nop
jns
jle
mov
shl
pop
jg
outsb
fdivs
mov
and
data16
sahf
int
fs
xchg
imulb
mov
add
push
ror
add
fnstcw
xchg
mov
rcrb
cmpsl
scas
mov
decb
lods
test
dec
sub
xchg
mov
xor
xchg
mov
cs
cs
push
push
addr16
cltd
enter
mov
incl
pop
jle
inc
addb
cld
test
sbb
scas
xchg
popa
cmc
cmp
test
call
stc
add
push
adc
pop
inc
repnz
mov
push
inc
pop
xor
and
mov
mov
push
push
jne
in
clc
test
adc
lds
mov
sub
mov
inc
cmpsl
shrl
dec
in
in
stos
dec
add
add
push
icebp
aam
inc
in
pop
add
je
js
push
scas
adc
mov
mov
test
pop
sahf
and
je
stos
xchg
push
and
inc
push
push
hlt
inc
rolb
iret
mov
mov
push
xor
mov
mov
mov
sbb
ss
jecxz
xlat
add
dec
add
xor
test
add
push
loop
jl
mov
cmp
leave
xchg
pop
adc
pop
shrl
outsb
sbb
loop
add
lock
pop
jne
cld
cwtl
sbb
daa
mul
popf
mov
push
xchg
push
scas
pop
or
iret
cmc
stc
sbb
lds
repz
movsl
pop
fs
scas
int3
pop
fwait
mov
jae
mov
leave
cld
call
mov
scas
mov
or
decl
leave
dec
or
ret
add
jecxz
shlb
jb
fs
add
or
or
ret
ja
mov
jle
cmpb
incl
rcl
pushf
pop
cmc
out
sub
dec
push
and
movsb
jb
pop
ljmp
jp
dec
data16
js
mov
jle
push
mov
inc
sub
ret
movsl
add
and
sub
scas
roll
mov
fdivr
shll
je
add
icebp
mov
add
mov
add
adc
aam
aam
ja
push
pop
rclb
mov
fsubs
xor
bnd
lret
fsubr
dec
bound
out
xor
pushf
xchg
mov
movsb
or
xchg
out
mov
mov
das
and
jnp
outsb
xchg
nop
stos
int
out
cmp
pop
in
pop
xchg
cmp
testl
mov
loopne
xchg
in
pop
shrl
inc
leave
lea
jne
inc
lds
mov
inc
in
mov
into
iret
cmpsb
lock
and
xchg
aam
ret
xchg
ret
shlb
iret
adc
cmp
pop
adc
mov
sub
add
sbb
jl
mov
jmp
aaa
inc
pushf
mov
pop
pop
sbbb
out
dec
mov
and
jmp
push
dec
sub
jle
inc
mov
xchg
in
pop
cmpsl
imul
int3
lods
add
enter
stos
lcall
gs
and
and
mov
pop
mov
and
cmc
lods
fdivrs
into
loopne
jo
pop
int
jb
xchg
mov
sub
and
or
aaa
mov
pop
mov
dec
mov
add
jle
push
sbb
dec
mov
sbb
gs
pop
leave
sub
iret
lds
fsubrs
jecxz
xor
mov
jp
stc
cwtl
and
mov
push
add
lahf
int
ficompl
xlat
bound
in
shlb
jns
je
sahf
cwtl
and
ss
pop
inc
cmpsl
sub
scas
push
pop
add
or
mov
sub
mov
and
inc
pop
loope
popf
xchg
fs
stos
mov
inc
mov
jg
test
aaa
sti
pushf
mov
repz
inc
inc
xor
divb
fstpl
mov
xchg
nop
cltd
and
cmp
pop
cmp
flds
js
mov
inc
or
push
out
xchg
fisubs
sahf
pop
mov
add
divl
out
jb
cmp
shrl
adc
repnz
sbb
cmp
cs
or
cmc
mov
in
ret
test
call
push
cmp
lods
sub
fs
pop
pop
mov
decl
push
inc
mov
jl
orb
jg
mov
test
fcmovne
xchg
add
les
aas
jne
iret
bound
sub
pop
mov
ss
cmp
sbb
pop
lahf
xchg
inc
bound
inc
and
lods
or
jle
and
mov
testb
jmp
stos
je
mov
call
xchg
fmuls
dec
xchg
or
inc
cmp
mov
add
in
aad
jno
das
pushf
xor
cmp
pop
mov
dec
or
ja
mov
sarl
sub
mov
js
scas
repnz
jb
fsubl
mov
or
xchg
pop
xor
sub
sahf
jmp
cmpsl
outsl
ds
out
mov
shlb
or
xor
and
sbb
or
vmwrite
dec
sahf
ljmp
out
imul
cmp
idivb
inc
imul
aad
into
mov
mov
xor
pushfw
or
fadds
and
mov
mov
nop
xor
jl
cmp
and
push
test
mov
lock
xchg
shll
data16
xlat
sti
jmp
cltd
jae
and
les
sahf
aaa
pop
adc
andl
add
in
mov
push
fidivl
shlb
fs
push
das
stos
push
test
push
add
subb
mov
inc
fstpl
cltd
mov
bound
and
xor
cli
out
icebp
fcos
ja
xor
jecxz
sbb
daa
ret
jge
xor
test
test
adc
mov
adc
inc
xchg
ljmp
loopne
insl
sbb
jle
mov
add
imul
jecxz
lds
nop
adc
xor
movsl
pop
iret
dec
sbb
xchg
pusha
sub
and
pop
jp
or
mov
outsl
jecxz
lods
jb
adc
roll
dec
addr16
and
iret
das
mov
mov
pop
aad
sub
mov
mov
insb
mov
sarl
mov
push
cmpsb
arpl
inc
lahf
pusha
mov
mov
mov
shlb
mov
and
inc
add
icebp
cltd
pushf
dec
cmp
jno
int
lock
push
and
jmp
or
fistpll
inc
inc
xlat
int3
ret
clc
lahf
stos
imul
or
pop
lds
sub
xchg
sarb
cmp
lock
push
lret
fwait
shrl
push
cs
repnz
mov
mov
lods
jle
out
add
js
sti
adc
rolb
sub
call
mov
sbb
lock
mov
int3
push
movsl
imul
dec
arpl
movb
int3
jno
roll
mov
add
insb
pop
push
push
hlt
test
xchg
or
inc
jl
push
shll
lcall
loop
xor
mov
lret
jge
mov
ret
inc
mov
ret
lods
xor
arpl
xchg
push
fstpt
iret
gs
gs
aaa
and
sub
mov
outsl
jo
stos
and
sti
and
loop
add
lods
adc
cli
inc
lcall
mov
in
stos
and
cmpsb
pusha
out
cwtl
in
outsb
mov
inc
in
jb
add
adc
add
rol
inc
pushf
pop
jl
mov
sbb
mov
fs
push
sarl
test
xor
inc
bound
mov
test
lods
sbb
loope
push
mov
jp
loope
loopne
push
sub
dec
jge
fildll
pop
sbb
test
or
push
sub
adc
inc
icebp
or
arpl
jb
shrb
loope
xor
xchg
adc
iret
movsb
test
int
pop
pop
cmp
ret
popf
fstpt
mov
fwait
je
sbb
cmp
iret
inc
cvtdq2ps
in
ret
test
cs
inc
xchg
pushf
cmc
mov
iret
shlb
lcall
jg
dec
pop
jo
jg
hlt
lds
add
clc
adc
sbb
mov
test
fidivrl
aam
mov
push
int3
inc
pop
stc
insl
jno
lcall
jnp
pop
mov
jbe
xchg
nop
or
dec
fcmovnbe
inc
xchg
cmp
pop
fnstcw
jge
cmp
jmp
pop
insl
lret
movsb
push
cmpsl
ret
jecxz
jnp
pop
hlt
pushf
into
cmpsb
addr16
sub
add
sbb
jae
outsl
cmp
and
data16
sub
sbb
in
push
sbb
les
clc
in
fadds
ud0
sbb
mov
iret
out
arpl
stos
sbbb
mov
sarl
cmp
push
js
and
cmpsb
push
xchg
leave
sub
or
inc
imull
fcompl
sbb
inc
jmp
popf
dec
inc
in
sub
int3
cwtl
out
out
in
dec
sbbl
divb
cmpl
push
popa
push
cld
push
or
xor
stos
test
sbb
popl
xor
mov
ss
jnp
xor
or
iret
and
jb
push
jp
and
stc
scas
cmpb
arpl
mov
sbb
daa
xor
push
jmp
and
jnp
cmp
mov
dec
mov
mov
mov
ficompl
rcrb
iret
enter
add
sbb
jle
pop
popa
lahf
inc
cmp
cmp
pusha
xchg
inc
xchg
insl
xchg
test
jl
sub
stc
pop
or
test
and
test
jbe
jg
mov
iret
jbe
push
lods
lret
mov
fdivs
imul
and
pusha
fiadds
jmp
and
pop
jns
add
or
and
cmpsb
mov
adc
outsb
dec
xchg
enter
inc
fwait
cmp
and
dec
mov
pop
pop
sub
flds
lcall
ds
cmp
mov
pop
pop
cmp
push
lret
sbb
decl
inc
xor
fcmovu
push
dec
pop
mov
movhps
scas
or
dec
mov
lds
mov
pop
sbb
xor
push
dec
cwtl
insb
add
xchg
cmp
push
xlat
int
ja
mov
xor
cmpsl
dec
repnz
fdivs
lret
fsts
mov
icebp
icebp
push
daa
clc
dec
dec
jae
pop
ljmp
orl
add
int
lret
xlat
jp
push
nop
push
jp
pop
notb
and
jb
dec
or
mov
gs
pop
movsl
jnp
data16
sbb
arpl
xor
stc
xorl
addr16
mov
jnp
and
jbe
je
std
or
mov
imul
sbb
cld
adc
jae
daa
lods
and
jl
imul
adc
sub
inc
repnz
pushf
jnp
sahf
or
add
sub
cmp
ss
call
adc
cmp
addr16
pusha
xor
push
std
imul
and
in
inc
aam
or
xchg
imul
ja
xlat
loop
call
dec
icebp
addr16
stc
pop
xor
lods
mov
aas
aam
push
or
xchg
fmuls
mov
jne
and
jp
mov
out
je
lahf
es
and
xchg
sbb
push
out
mov
dec
dec
sbb
xchg
inc
orb
sbb
cmc
lods
sbb
mov
in
pop
arpl
xchg
test
jg
rcrl
sar
out
mov
pop
adc
inc
push
add
dec
lods
out
inc
push
outsb
inc
adcb
inc
pop
pop
xchg
xor
jno
pop
jecxz
push
fisttpl
out
das
out
jp
jo
inc
fcompl
das
push
cmp
pop
sahf
decl
xchg
loopne
and
addb
inc
push
jp
bound
gs
arpl
and
cld
adc
ds
lds
lea
mov
push
mov
pop
sbb
xchg
push
dec
add
dec
aad
mov
cld
arpl
rorb
xor
lea
mov
lea
xlat
dec
jle
stos
sbbb
aad
cmp
je
lock
jns
insb
call
and
mov
orl
and
sahf
in
fsts
cmp
xor
notl
daa
dec
pop
xchg
pop
add
ficompl
int
push
cmp
adc
mov
cld
aam
fwait
xchg
adc
pop
pop
pushf
stos
fwait
pop
xchg
and
outsb
scas
xlat
sbb
fisubl
iret
cmp
and
mov
adc
jle
sub
pop
sbb
push
mov
test
movsl
sbb
cmp
jle
xchg
fnstsw
pop
dec
in
push
shrb
inc
rcll
cmp
sti
mov
or
fstpl
jns
cmp
mov
test
dec
loope
sub
call
bound
lahf
push
orl
mov
push
xchg
hlt
aad
or
sbb
popa
cld
movl
iret
sarl
shll
call
and
add
jnp
sbb
xchg
push
xor
aas
sub
aad
imulb
jp
push
cwtl
shrb
mov
cmp
fdivl
adc
insb
pop
ds
push
jb
icebp
jae
fs
cmp
inc
inc
jle
add
push
pop
nop
out
rclb
cwtl
and
int3
nop
jo
inc
ja
sbb
test
rcr
mov
call
outsl
jae
sub
jbe
stos
loopne
ror
rolb
or
in
outsb
fistpll
ljmp
cmpsl
out
and
sub
dec
inc
call
fidivl
test
add
push
repz
aaa
mov
inc
es
push
and
jmp
dec
fsubrl
mov
cmp
xchg
inc
push
sub
mov
lods
jp
lock
push
jle
fldenv
std
xorl
adc
mov
push
push
test
push
add
je
jo
xor
cwtl
mov
dec
inc
test
mov
push
bound
xchg
dec
in
xchg
add
inc
mov
popa
ss
xor
sbb
pusha
jbe
push
or
insl
jg
mov
or
and
insb
jle
rolb
ss
push
xchg
mov
xchg
pop
jbe
xlat
cmpsl
add
inc
movsb
sbb
test
mov
cmp
mov
clc
dec
jnp
dec
cmp
and
jmp
addr16
mov
sub
dec
pop
sub
callw
cmp
mov
test
jecxz
add
jg
jmp
sbb
mov
outsb
idivb
es
testl
inc
xchg
lret
push
or
clc
sub
push
aas
pop
addr16
push
loop
adc
push
jge
ret
cmp
ljmp
inc
aad
fsubrs
mov
popf
sub
pop
and
pop
out
mov
in
cmpl
xor
test
xchg
sub
adc
push
mov
or
popa
sub
or
jno
sbb
xchg
sahf
pusha
mov
jecxz
bnd
cmp
pop
int3
sbb
xor
lret
fstpt
or
cmpsb
repz
ds
int3
sub
das
fwait
mov
pop
daa
mov
ja
inc
inc
jl
aam
fldl2t
pop
mov
inc
lock
idiv
mov
cwtl
orl
cs
sbb
mov
jae
xor
rcr
aad
jl
in
shrl
mov
pop
sub
je
sbb
xor
orps
xchg
pushl
fmull
add
push
adc
push
das
xlat
add
iret
pop
rcr
and
pop
sti
pushf
pop
shlb
add
subb
cli
fnstsw
stc
add
sbb
nop
popa
jae
int3
mov
pop
fs
test
repz
xor
stos
mov
cmpsl
jbe
mov
cmpsb
lea
loopne
scas
movsb
jbe
push
sbb
aas
adc
add
and
push
xchg
shrb
and
stos
sbb
dec
insl
and
fisttps
cltd
xor
cli
imul
mov
mov
mov
add
mov
je
addr16
xchg
repz
sarb
dec
enter
in
inc
leave
popa
into
cltd
or
mov
repnz
push
push
xchg
pop
pop
hlt
inc
out
aas
inc
jmp
lea
pop
jl
xor
bound
mov
xchg
into
mov
and
rclb
adc
fdivrs
ja
mov
xor
inc
fisttps
cmpsb
mov
rolb
jnp
adc
cmp
push
sbb
outsb
mov
adc
out
out
inc
or
add
std
sbb
adc
push
ret
mov
cwtl
mov
ljmp
sahf
pop
mov
mov
mov
push
lods
mov
std
repnz
aad
jnp
leave
or
in
push
mov
and
outsb
std
cmp
sub
pop
pushf
xchg
fisttps
aad
andl
negb
sbb
jp
mov
icebp
icebp
ret
ret
test
aam
outsb
lret
mov
ret
cmp
test
push
inc
mov
rol
dec
js
jmp
insb
je
sbb
jo
pop
into
shr
loop
mov
fbstp
into
jo
inc
dec
add
enter
das
sbb
pop
loopne
cwtl
jb
repnz
ret
and
int3
lds
loop
fidivrl
repz
mov
push
popa
aad
addb
jecxz
popf
ja
or
not
icebp
push
sub
pop
sbb
pop
rcrl
mov
imull
push
and
rclb
ljmp
xor
out
cmp
icebp
add
sbb
or
adc
pop
ficomps
inc
andl
jnp
faddl
push
push
dec
sbb
out
mov
or
movsb
out
mov
je
shl
jmp
jle
scas
das
pop
mov
mov
push
fcomp
cmp
nop
jg
inc
repnz
and
pushf
ljmp
ljmp
lock
iret
inc
addr16
xchg
and
rorl
imul
xchg
mov
mov
push
lods
movsb
adc
cld
test
mov
nop
sti
mov
pop
jmp
xchg
jno
xchg
jecxz
sbb
mov
in
push
xchg
dec
jns
vminsd
push
stos
adc
stos
rol
sbb
xor
aas
inc
lcall
mov
add
and
or
add
stc
out
or
lahf
mov
push
sbb
aad
and
aaa
push
mov
fwait
xor
call
and
adc
addl
dec
repz
loopne
dec
ss
pop
imul
in
lahf
lahf
mov
push
rorb
out
adc
sub
aad
fcompl
rclb
dec
dec
xchg
lcall
daa
repnz
pushf
push
xor
fsubp
sbb
mov
repnz
add
cli
bound
dec
mov
mov
gs
gs
jae
das
pop
jle
ret
mov
in
lock
mov
stos
iretw
sbb
addr16
xchg
sbb
stc
fnsave
insb
cmp
stos
mov
test
push
scas
dec
pop
clc
bound
cmp
mov
lods
aas
sub
lds
push
nop
adc
xchg
popf
dec
rcrb
add
xchg
out
mov
jno
adc
stos
xor
outsb
outsl
xchg
aam
jno
icebp
outsb
xchg
outsl
adc
mov
sub
add
mov
hlt
xor
fbld
or
test
lcall
aaa
push
imul
aas
jnp
scas
dec
xchg
frstor
sbb
in
mov
jle
xchg
xor
pop
movsl
insl
mov
push
incl
adc
inc
inc
adc
sbb
pop
xchg
xchg
hlt
insl
or
and
std
test
sub
aas
daa
mov
mov
stc
mov
and
or
lcall
dec
clc
add
xchg
pop
mov
adc
lods
lret
mov
sbb
repnz
jg
lods
xor
pusha
dec
sub
mov
ficompl
test
cmpsb
ror
iret
sarl
movsl
repz
mov
cs
push
push
jecxz
pop
cmpb
ficoms
add
sbb
add
adc
cmp
sbb
push
sbb
mov
push
inc
jo
in
lods
imul
cld
shlb
xor
loopne
mov
mov
dec
negl
pop
aad
lret
sbb
adc
nop
xchg
aam
ror
cld
sbb
inc
nop
movsb
fs
test
mov
fcoms
test
add
push
cmpsl
cmp
xor
add
jmp
aas
jne
in
push
or
wrmsr
testl
fwait
pavgw
and
jo
fcompl
je
jnp
aam
cmp
out
sub
repz
fildll
aaa
mov
sub
cmp
ja
pop
push
add
sbb
dec
mov
xor
cmp
push
loopne
jecxz
or
int3
mov
lds
push
out
pusha
shrl
xchg
mov
or
fwait
test
or
or
pusha
or
fstps
mov
mov
xchg
aam
andl
ret
scas
lea
scas
push
add
jno
ret
pop
lahf
and
divb
ja
enter
jle
cmp
or
dec
fld
sub
mov
ror
icebp
or
movsl
and
push
mov
ja
or
lds
sbb
int3
inc
hlt
jl
jge
adc
frstor
mov
sub
sub
pushf
push
out
arpl
mov
int3
cmc
mov
xchg
push
or
pushf
xor
sub
adc
or
dec
sbb
xchg
stos
fidivrl
cmp
call
push
rclb
or
add
into
push
mov
cltd
aad
lds
mov
lcall
jnp
add
mov
jl
and
sbb
mov
xchg
mov
popf
sbb
and
data16
lret
pop
lock
jnp
cmp
clc
mov
aas
adc
pop
cmp
js
xchg
enter
cltd
xchg
or
mov
xorb
dec
pop
out
cmp
push
push
movl
inc
xor
loopne
cmpsl
sub
jb
pop
push
mov
sub
lock
rclb
lods
xor
outsb
sub
jge
lret
adc
mov
fnstsw
mov
int3
xchg
ljmp
icebp
sub
insb
xorl
sahf
fcoml
xchg
push
idivb
jno
xchg
cwtl
lret
pop
pop
rolb
and
cmp
mov
ror
iret
aas
jmp
jne
push
inc
ljmp
cmpsb
mov
lods
jae
mov
add
popa
cld
loopne
lahf
cwtl
pop
pop
and
mov
add
xchg
jl
into
out
scas
test
push
loopne
add
fildll
imul
or
xchg
mov
cmp
out
lea
adc
stc
dec
add
shlb
testl
int3
and
or
clc
adc
push
add
in
data16
mov
sbb
push
cli
adc
push
ret
mov
test
adc
sbb
push
pop
sbb
xor
mov
push
out
ret
fadd
pop
push
mov
rcl
adc
pop
sbb
add
sbbb
adc
hlt
les
fidivrl
add
inc
pop
test
mov
push
dec
pop
inc
push
and
stc
dec
and
repz
pop
xchg
out
mov
push
test
into
lcall
push
jge
or
rcl
jae
cltd
mov
jmp
or
lock
je
test
sti
add
xchg
mov
stos
insb
push
push
aas
cs
mov
mov
movsl
std
sub
push
adc
add
stos
add
test
sub
cmp
push
ret
cmp
jecxz
call
adc
mov
inc
or
mov
sub
jnp
mov
call
jg
jge
daa
mov
jle
cmc
mov
pop
scas
push
inc
jbe
lods
dec
stc
shl
pop
sub
pop
xchg
roll
adcb
mov
in
daa
add
and
andb
pop
int
adc
sub
loope,pn
fwait
movsl
inc
ret
iret
fsubrl
enter
and
fcoml
jecxz
cmp
lret
mov
outsl
xchg
xchg
sbb
jg
cltd
inc
jbe
mov
inc
sbb
pop
pop
mov
mov
out
cmpsb
out
adc
shrb
push
add
daa
arpl
hlt
jp
sbb
decl
into
stos
sahf
inc
arpl
imul
push
call
push
xchg
and
jns
add
scas
push
hlt
lds
bnd
mov
out
pop
cmp
mov
hlt
cmp
xor
out
push
dec
cld
push
adc
jge
je
shlb
jae
cmp
imull
cmpsl
xor
cmpsl
lods
es
mov
mov
insl
les
aas
cwtl
jmp
loopne
xchg
int3
jmp
decb
mov
xchg
arpl
loopne
loope
jns
xchg
or
push
pop
push
push
xchg
xor
adc
inc
test
ret
testl
push
jl
insb
testl
into
fiadds
cmp
in
fildl
sahf
enter
fldl2e
pop
lds
cmp
sbb
out
adcb
add
fwait
popf
fstl
mov
std
aaa
in
cmp
fisubl
push
mov
dec
in
cmpsl
and
push
pop
cmp
or
mov
aad
xor
fsts
cmp
mov
fs
inc
insl
loopne
sti
and
cmp
xchg
shlb
xor
jb
pop
or
fcomps
rcrl
mov
cs
out
dec
jg
addl
movsl
cmp
je
cmpsl
mov
jne
jne
adcl
jne
sbb
nop
mov
neg
xor
mov
stos
aam
fdivrl
add
ror
dec
adc
ret
jns
fwait
inc
pop
popf
in
jle
jb
jbe
and
into
ficoml
icebp
and
movsl
xchg
les
lods
jne
xchg
clc
jmp
push
cmp
insb
jnp
adc
or
add
aam
adc
and
jb
divl
ror
filds
xor
aaa
out
test
sbb
gs
inc
jle
push
adc
scas
cmp
add
jb
xchg
or
mov
or
inc
adc
mov
or
cmp
icebp
insb
mov
es
lahf
inc
jge
push
or
les
sub
std
aaa
sahf
cmpsb
arpl
fwait
dec
mov
les
stos
lods
add
dec
jb
dec
loopne
mov
mov
add
repnz
and
lret
sub
xchg
imulb
mov
cld
out
jnp
out
and
sbbl
mov
mov
lret
ffree
mov
mov
dec
sbb
jb
lea
cs
pop
jae
mov
daa
in
aaa
inc
fisubrs
pusha
into
mov
out
add
cltd
cmp
mov
cmp
loopne
sub
jnp
les
je
xor
repz
adc
sbb
cli
mov
loopne
pop
pusha
push
inc
xchg
cmp
xchg
inc
push
jbe
lea
jo
xor
sub
add
cs
jno
testl
cli
sbb
lods
daa
sbbb
jl
push
repz
cld
dec
cmp
sub
pushf
mov
popa
fdivp
stos
push
fldenv
adc
pop
das
ss
inc
xor
jns
push
jbe
jl
out
negb
pop
mov
add
pushf
out
mov
insb
jo
add
push
push
inc
push
push
pop
push
stc
or
mov
lea
jno
insl
aam
scas
movsb
add
les
cmpb
jo
fisubl
and
mov
int
movsb
inc
push
insl
mov
cmpsb
add
das
int3
add
loope
movsl
xchg
adc
jle
mov
xchg
and
push
jmp
jnp
cmpsb
pop
cld
fistps
jmp
or
sub
imul
pop
sbb
loop
or
or
xor
xchg
daa
ja
jmp
in
jne
xor
lcall
mov
int3
push
dec
addr16
std
and
lret
out
push
lods
dec
ss
in
int
pop
test
jbe
jle
mov
popl
imul
xchg
mov
mov
adc
sti
inc
push
adc
and
or
dec
push
adc
jl
xchg
inc
xlat
sbb
hlt
mov
mov
outsl
lock
lods
or
out
je
jb
and
dec
adc
in
loopne
jecxz
out
sub
daa
lret
cmpsb
xor
lock
gs
sbb
inc
stc
xchg
ret
loop
xchg
push
push
inc
xchg
xor
lahf
stos
into
adc
aad
cli
iret
or
sub
mov
imulb
jge
insb
dec
in
or
fisubrs
cs
xor
mov
out
imul
mov
push
adc
lea
mov
mov
lahf
test
outsl
inc
xchg
jmp
enter
rol
jmp
scas
pop
lods
inc
jmp
inc
dec
cmp
cli
mov
mov
movsb
dec
fcmovne
xor
es
pop
jbe
js
mov
inc
xor
out
sbb
add
and
jae
sbb
adcb
xor
subl
icebp
out
adc
andl
fcomps
insb
imul
dec
scas
in
inc
rorb
mov
cmpsl
mov
lds
insb
enter
adc
aas
jo
lea
jmp
ja
int
lea
lock
test
outsl
nop
cltd
adc
fsubs
lahf
or
jp
aaa
add
pusha
xchg
add
pop
das
mov
and
pop
add
mov
or
lock
inc
push
lret
js
inc
add
cmpsl
ja
jae
subb
pop
sub
mov
adc
jp
loop
xchg
push
rcr
xchg
mov
mov
cmpsb
and
adc
adc
lcall
cmp
in
sbb
bound
xchg
or
adc
mov
push
adc
pop
aaa
xor
jg
mov
mul
enter
xor
sbb
adc
mov
repnz
cmp
in
inc
jbe
adc
int
mov
pop
test
xchg
fst
mov
mov
fyl2x
xor
xchg
pop
outsb
cli
mov
dec
gs
mov
sbb
pop
orl
xor
xor
jnp
xor
dec
sbb
cmc
jb
aad
sahf
cmpsl
mov
adcb
sbb
or
push
xor
mov
orl
sbb
cmc
data16
inc
fcompp
xchg
popf
add
xor
cld
mov
iret
cmpl
add
std
jae
push
push
add
mov
jne
jae
mov
sbbl
in
stc
ret
mov
jns
cmp
jp,pn
lcall
rcrb
sarb
add
push
repnz
sarl
imul
xchg
scas
pop
daa
pop
add
push
insb
add
or
lods
orl
xchg
mov
gs
or
sbb
int3
or
aas
es
xor
mov
imul
jbe
cmp
ret
pop
pop
push
sub
sbb
out
mov
xchg
push
or
int3
inc
mov
bound
clc
in
mov
inc
sarl
js
addr16
mov
js
rcll
divb
int
lock
rorl
insl
or
lcall
mov
and
int
aad
mov
jbe
pop
xor
out
inc
xchg
les
pusha
xchg
push
loop
add
icebp
mov
mov
imul
inc
std
push
push
and
outsb
xor
dec
or
xlat
clc
pushf
scas
inc
insb
pop
fstpt
cmp
mov
cmp
mov
stos
adc
call
stos
ficoml
les
dec
test
addr16
mov
push
jecxz
inc
inc
jg
and
or
out
inc
jg
shll
std
or
stos
adc
popf
pushf
loope
stos
insl
shlb
movsl
mov
ret
and
adc
adcb
jns
add
mov
aaa
sub
mov
inc
mov
or
pop
ret
inc
sbb
add
push
std
push
sti
in
xchg
inc
xchg
call
scas
out
decb
mov
adcb
ror
bound
inc
pop
mov
dec
inc
out
iret
cmp
cmp
scas
pop
cmpsl
jmp
lret
outsl
dec
sub
rorb
test
push
test
pop
cmp
push
int3
add
outsb
call
and
xor
scas
push
in
mov
pop
xor
lods
and
xchg
mov
lea
outsb
inc
jo
mov
mov
es
movsb
add
out
pop
mov
sar
fistpl
out
adc
jbe
in
jne
lds
loop
and
inc
xchg
es
push
dec
adc
xchg
imul
mov
inc
fsts
jo
ret
jle
xor
or
test
push
stos
mov
pop
insb
scas
pop
push
xchg
jae
add
sub
cmpl
loope
mov
xchg
lret
xor
sbbb
loop
xchg
fildll
in
mov
or
push
pop
lea
imul
test
pusha
sbb
ss
and
cli
push
jbe
inc
xor
jg
sbb
jns
fildl
dec
stc
icebp
adc
fidivrl
enter
iret
xor
ss
testb
dec
xchg
mov
gs
shrb
mov
and
push
jecxz
mov
mov
push
sbb
cmpsb
push
cmp
stos
enter
jecxz
jge
popf
cltd
and
dec
cltd
lea
pop
mov
cld
sbb
gs
mov
jmp
scas
xchg
inc
arpl
adc
inc
push
xorl
mov
mov
jmp
jp
sbb
jb
pushf
dec
in
lds
sbb
adc
iret
adc
xchg
add
lret
dec
faddl
lret
adc
mov
pop
test
fucomp
push
lods
sub
loopne
je
cmp
mov
push
add
xor
fs
loop
or
cmpsl
sti
adc
test
inc
roll
mov
aaa
das
aam
jmp
inc
add
inc
xchg
sub
dec
pusha
pusha
mov
loop
dec
shrl
fldenv
icebp
cld
push
dec
imul
jge
mov
and
sub
rcl
jp
lods
sub
pop
aas
jmp
dec
dec
sub
push
stos
jge
cs
test
xchg
outsb
test
test
inc
sub
jnp
iret
scas
out
push
jp
int3
ret
mov
outsb
xchg
push
ret
xchg
add
push
sbb
pop
sbb
pop
aaa
add
ret
xor
mov
rcr
mov
add
sbb
dec
leave
shrl
scas
or
dec
push
pop
cmp
sti
dec
mov
xlat
mov
inc
jl
xor
and
icebp
mov
js
shll
out
lret
mov
sbb
stos
dec
mov
sbb
xor
sbb
jecxz
addr16
iret
or
mov
inc
adc
cmp
enter
sbb
inc
push
cmp
lret
in
or
stc
push
daa
fwait
stos
scas
xchg
and
jl
addr16
sbb
cmp
nop
pop
sub
add
or
mov
fwait
or
dec
popa
pop
stc
cwtl
mov
test
clc
mov
insb
mov
cli
jne
xchg
rcll
push
scas
mov
jne
pop
aaa
movsl
push
adc
in
sti
shlb
packsswb
leave
sub
push
cwtl
mov
mov
jnp
mov
jb
sarl
mov
gs
aam
lret
sub
sti
mov
push
ret
mov
jp
jl
hlt
cmpsl
inc
jmp
jge
dec
sbb
frstor
adc
cmp
rclb
xor
loope
aas
mulb
cmpl
push
adc
and
sub
xchg
es
push
rcl
add
push
jnp
negb
in
push
and
movsl
es
jnp
adc
xchg
cmp
push
inc
mov
pop
lcall
pop
push
int
push
push
movsl
or
call
pop
mov
xor
movsb
add
push
dec
adc
repnz
jns
jae
push
lret
scas
jb,pt
or
pop
mov
icebp
sarl
mov
mov
fstps
inc
in
or
cli
mov
xor
add
bound
test
pop
pop
xor
sub
mov
mov
rolb
insl
push
in
data16
push
sub
outsl
aas
shlb
rorb
loope
ljmp
adc
mov
jae
stos
sub
jae
lds
movsl
push
lods
or
xchg
sarb
fsubrs
cld
cwtl
inc
mov
rol
fcompl
stc
js
push
sbb
imul
pop
rolb
nop
mov
mov
dec
dec
aad
mov
repnz
fistl
movsb
xchg
and
shrb
adc
stos
in
jnp
mov
push
push
out
cli
xor
push
dec
insl
daa
pop
jo
ror
pushl
inc
fldl
cmpsl
push
and
inc
aaa
fsts
fmulp
mov
in
hlt
stos
inc
push
push
in
jns
out
xchg
pop
loope
adc
sti
cmp
push
movl
mov
inc
push
imul
out
lods
mov
ret
lods
and
push
cmp
mov
push
pop
mov
stos
pop
jbe
inc
jne
xchg
cmp
and
shlb
xchg
pushf
fsubr
xchg
cmp
scas
push
push
mov
outsb
adc
jns
lahf
mov
jle
xchg
mov
or
sub
or
add
add
mov
mov
xchg
pop
stos
popa
adc
or
mov
sbb
stos
aas
inc
mov
pop
and
xchg
add
or
ljmp
cmpsl
jle
ljmp
ret
andb
pop
push
sarb
rcrb
pop
loop
fisubs
push
jnp
addr16
push
dec
cmp
add
xor
stos
test
mov
xchg
mov
and
xchg
das
cs
call
in
sub
mov
xor
aam
jmp
es
lods
ss
xlat
mov
in
shlb
sub
jns
inc
pop
loop
pusha
pop
xchg
addb
stos
lods
rcrl
les
cmp
and
lds
int3
add
mov
lea
call
add
int3
bound
mov
dec
pushf
mov
test
sarl
rorb
test
mov
push
lcall
or
sbb
js
cmp
adc
gs
ss
addr16
leave
and
stc
jo
cmc
outsb
lret
cmpb
pop
pop
xor
dec
and
mov
inc
inc
cmp
or
ljmp
dec
pop
jge
scas
lret
xor
sarb
out
push
mov
pop
pop
loop
jle
cmp
xor
loop
xchg
jns
add
mov
loopne
out
mov
cwtl
test
paddw
cwtl
or
dec
xchg
push
daa
push
mov
inc
jl
sub
xchg
and
pop
test
mov
dec
jbe
mov
jmp
pop
jmp
inc
adc
inc
or
fs
mov
jb
arpl
cld
inc
fsubr
jecxz
movsb
lock
mov
mov
scas
out
sub
pop
cmpsb
test
pop
push
bound
cs
sub
cmp
pop
mov
shll
arpl
sbb
mov
xor
insl
fs
and
scas
push
pop
pusha
push
pushf
or
outsl
hlt
scas
loop
mov
mov
xlat
pusha
pop
pop
and
push
jecxz
movsl
sub
push
shrl
mov
out
stos
std
or
pop
in
push
and
and
mov
or
xchg
outsb
push
push
movsl
ja
or
fnsave
ret
enter
shl
aas
pop
mov
fsubp
xor
xorb
movl
shll
mov
rolb
arpl
popf
sbb
mov
in
es
fsts
pop
cmp
sbb
or
cwtl
lods
push
cmpsl
adc
add
ret
mov
inc
out
or
enter
mov
sbbl
jecxz
cmp
inc
and
jae
jmp
into
mov
dec
adc
mov
shlb
xchg
stc
arpl
or
xchg
sbb
mov
icebp
out
addl
sti
xchg
xchg
and
adc
lds
jno
xchg
inc
movsl
or
pusha
cmp
lret
adc
fwait
or
adc
inc
cmp
scas
popf
dec
js
repnz
lahf
js
arpl
in
daa
lcall
cmp
mov
xor
cmpsb
cmp
fwait
push
jge
sub
push
sbbb
pop
mov
fs
clc
push
cmp
repnz
cmp
or
movsb
cmpsb
data16
dec
sbb
ljmp
into
pop
fs
sub
lods
mov
mov
sbb
push
xchg
cmp
xchg
or
cmp
movsb
dec
xorl
mov
mov
sub
bound
lret
jb
stc
repnz
pop
ret
scas
ljmp
or
sahf
mov
cmp
cmpsb
adc
adc
sbb
pushf
push
ja
inc
into
inc
xchg
cli
and
das
cmp
adc
mov
mov
fidivs
in
aad
push
push
inc
add
lock
imul
or
test
and
jb
xor
push
mov
enter
test
out
mov
dec
lret
cld
push
cmp
xchg
shrl
inc
pop
dec
push
rorl
test
fildll
mov
arpl
cmp
push
test
in
ss
add
sarl
loop
pushf
dec
mov
adc
popa
movsl
nop
outsl
push
jbe
lds
pop
jno
push
in
dec
xor
int
mov
mov
icebp
dec
pusha
js
or
mov
lods
hlt
aad
push
imul
pop
inc
scas
inc
sbbb
lahf
test
sub
jp
push
fmull
int
push
test
test
int
sub
inc
cmpsb
les
gs
rclb
mov
adc
test
jo
insb
xchg
addr16
outsb
cmp
or
mov
xchg
mov
cli
sub
pop
pushf
add
das
pushf
scas
test
fs
stc
mov
push
and
test
cmp
inc
lcall
test
cwtl
mov
shl
or
push
or
xor
dec
negl
xor
sub
and
ret
clc
cld
pop
inc
lret
pop
pop
clc
enter
out
push
mov
xchg
lahf
ret
imul
adc
mov
sub
mov
sub
jnp
add
leave
sbb
enter
ret
jecxz
xchg
leave
mov
jns
stc
adc
test
add
pop
cli
sarb
jns
jne
cmovo
arpl
adc
pop
test
jge
gs
loope
orl
jb
jecxz
popa
jp
lret
shr
mov
push
adc
dec
loopne
fstpl
ret
cmp
addb
cltd
cmp
repnz
dec
ljmp
fimuls
adc
insb
jae
adc
rcrl
bound
lods
call
cmp
pop
shlb
add
mov
lret
sbb
pop
mov
nop
popf
sbb
daa
icebp
mov
xchg
loopne
and
lds
fwait
cs
pop
push
sub
inc
and
xor
popf
testl
adc
add
mov
mov
in
rcrb
ljmp
sbb
aad
pop
inc
lahf
dec
lods
xchg
pop
lea
aam
ljmp
pushf
cmp
add
mov
jl
idivl
cwtl
xorb
mov
cmp
push
pop
dec
mov
cmovg
out
icebp
std
orl
or
push
imul
lods
inc
xor
imul
jg
leave
xchg
mov
fucomp
les
rcrl
addr16
push
jp
pop
pop
jmp
mov
scas
out
aam
ljmp
pusha
jb
jo
mov
addr16
and
or
fimuls
cld
test
sbb
cmp
dec
jnp
and
je
fcoms
outsb
jne
gs
jecxz
fstps
and
stos
jmp
cmpsl
xchg
incb
mov
xor
outsb
xor
lock
pop
mov
aas
cli
scas
ffreep
pusha
and
stc
and
jl
in
aaa
ljmp
mov
imul
and
fsubrs
lret
stos
hlt
jbe
rolb
pushf
jmp
fists
lods
lock
shl
daa
dec
xor
push
cmp
mov
sarb
inc
and
mov
cmpsb
fnstsw
inc
rclb
test
fcompl
scas
add
scas
out
mov
mov
push
mov
mulb
in
mov
push
lods
cld
cltd
add
mov
or
fildl
das
faddl
or
or
adc
xor
jl
add
je
fcmovb
inc
add
jbe
std
jl
cld
stc
rol
add
pusha
lds
test
xchg
rolb
cwtl
leave
sbb
ret
inc
or
addr16
out
icebp
test
pop
test
push
rol
inc
lea
cmp
mov
pop
sub
clc
repnz
clc
and
outsl
cmp
es
fcmovne
jo
ljmp
data16
mov
inc
jno
int
mov
jb
pop
sub
cmp
inc
pop
popa
dec
imul
cltd
dec
or
bound
repnz
inc
and
mov
leave
push
inc
add
mov
pcmpgtw
or
clc
cli
lock
dec
pop
or
jg
cmp
ret
in
arpl
mov
outsb
and
jb
mov
cmp
dec
jmp
jbe
ret
jmp
dec
arpl
mov
mov
push
or
popa
lock
inc
sbbb
xchg
in
push
lret
mov
out
aad
jo
cmp
inc
mov
xchg
cs
mov
add
js
jo
pusha
mov
sub
movsb
add
cmp
shrb
or
sbb
or
in
mov
test
les
enter
jle
jnp
jmp
test
cltd
bswap
push
sub
out
xchg
xor
pop
dec
dec
lock
rol
mov
aam
call
inc
sbb
int3
jg,pn
push
add
out
pop
add
dec
adc
aam
test
fdivl
cmpsl
push
test
fs
insb
cmp
inc
cli
lret
idivl
les
int3
das
add
xchg
xor
pop
loop
pop
mulps
mov
sub
jecxz
js
jmp
cwtl
js
mov
xlat
movsl
push
push
adc
pop
sbb
enter
push
cmpsl
daa
or
pop
outsl
inc
sbb
aas
sbb
dec
lahf
xchg
clc
jge
sti
inc
jl
in
shrl
xchg
out
and
inc
and
and
sub
adc
jbe
and
ret
dec
call
pop
divb
adc
outsb
mov
ljmp
icebp
sbb
jle
pop
clc
jne
jae
push
jp
adcb
add
sbb
aas
and
shrb
and
cwtl
dec
cltd
jge
jecxz
stos
loopne
idivl
out
nop
cmp
xlat
ljmp
lret
lret
or
lods
sub
dec
push
pop
lahf
sub
cmp
fucomip
jb
jb
lret
fadds
arpl
or
push
test
sbb
fsubs
mov
sub
cmp
and
test
fidivrs
cmpb
clc
int
ds
xor
cmp
dec
lods
sbb
lcall
test
fnsave
mov
fdivrs
mov
fsubl
outsl
cmp
not
movsl
arpl
xlat
call
call
sub
mov
and
sub
arpl
popa
pop
outsb
popa
mov
insl
sbb
scas
data16
push
je
sub
cmp
sahf
pop
frstor
lea
adc
push
xchg
cmpsb
pop
dec
mov
jl
filds
sbb
lret
pop
repnz
ja
jbe
lods
jp
cs
mov
mov
adcb
mov
push
mov
jae
mov
or
xchg
loope
cmp
inc
cmp
pop
dec
jno
cmp
cs
cmp
lret
insl
cs
int
mov
lods
mov
addb
cwtl
outsb
jle
hlt
mov
sbb
cld
mov
push
pushf
orb
lcall
fistl
dec
stc
jbe
mov
jns
sbb
inc
outsb
lret
arpl
pushf
or
add
or
or
cli
and
addr16
mov
and
xchg
xlat
iret
sub
fildl
dec
sarb
mov
xor
jne
daa
cltd
cmc
jl
cmp
scas
jnp
push
test
pop
cmp
pop
mov
mov
jb
outsl
lret
repnz
inc
mov
loope
lcall
add
xchg
stos
in
out
es
and
shr
fists
insl
mov
adc
mov
push
cs
cltd
imul
dec
adc
mov
stos
jmp
sub
add
sub
inc
cmpsb
mov
dec
push
je
mov
movsb
je
loop
ret
inc
mov
notb
hlt
mov
add
cwtl
ret
bound
pop
push
mov
add
xchg
out
test
aam
push
and
xlat
loopne
mov
sbb
pushf
mov
out
das
lret
xchg
adc
mov
cmp
inc
mov
push
enter
jecxz
out
inc
xor
test
jns
pop
add
daa
scas
rolb
cmp
or
sarb
mov
pop
iret
call
andb
fsubrs
imul
lock
pop
sahf
jns
and
mov
pop
add
pop
sub
push
testb
out
jp
jle
xchg
cmpsb
outsl
sbb
shll
out
cli
mov
movsl
divl
xchg
cmp
cmp
adc
rorb
add
dec
mov
mov
int3
jo
enter
adc
je
mov
cltd
mov
enter
rcrb
cmp
inc
mov
add
dec
pop
gs
sub
add
fistps
or
mov
and
pop
add
es
adc
sub
jne
mov
adc
lcall
jle
outsl
clc
clc
repz
sub
sbb
mov
loope
test
adc
mov
jmp
lea
ret
mov
xor
je
sbb
std
scas
pop
pusha
or
je
xor
in
pop
jp
pop
mov
cmp
lret
adc
lret
fsub
mov
and
mov
jnp
xor
xchg
shlb
out
mov
dec
fstl
enter
popf
es
jae
outsl
inc
stos
js
fcmovnb
cli
mov
jne
sbb
cs
and
cld
fucomip
push
mov
imul
sbb
les
push
pop
xchg
ficompl
dec
xlat
and
mull
mov
pop
pop
aaa
adc
xor
adc
movsb
push
fdivs
cmp
mov
xor
andb
dec
and
shlb
sbb
add
pop
mov
arpl
cmpsb
sarb
in
stos
int
scas
cmp
mov
xor
inc
jo
add
mov
sub
xchg
adc
repz
sbb
cmp
or
jmp
call
out
jae
dec
sbb
popf
inc
add
aad
pop
adc
inc
and
clc
call
and
scas
scas
int3
pop
sbb
in
aad
push
jbe
cmc
xchg
lock
std
in
pop
jmp
and
mov
out
fdivrp
je
dec
test
lcall
loopne
jae
aas
or
pusha
mov
in
icebp
xchg
sub
dec
adc
jge
orl
js
mov
pop
add
mov
sbb
mov
jo
jp
push
cmp
mov
fsubrl
and
sub
inc
or
loop
cmp
ret
dec
add
mov
lds
shr
xor
cli
cli
and
xchg
add
les
shl
pop
sub
arpl
out
sbb
ds
add
add
ret
lahf
enter
outsl
pop
xlat
cwtl
insl
call
mov
add
push
xchg
lea
mov
aad
push
xor
ja
lods
cmpsl
stc
jge
adc
pop
dec
push
rcrl
inc
xorb
decb
jns
pop
add
xor
mov
xchg
xor
sbb
fwait
dec
imulb
mov
loopne
sub
movsb
icebp
cmp
sub
lods
dec
pop
pop
and
icebp
add
ret
arpl
pop
movsl
int3
fsubr
xchg
jo
rcl
push
jge
lret
mov
push
sarb
adc
icebp
insb
push
out
test
repz
push
push
hlt
enter
outsl
mov
add
push
and
pop
nop
dec
adc
inc
roll
bound
out
add
into
outsl
adc
dec
hlt
daa
testb
xor
movzbl
popf
dec
pop
sub
repnz
mov
dec
pop
pop
mov
cmpsl
lods
lret
pop
add
sbb
lock
or
fstpl
imull
xor
adc
xor
mov
imul
stc
lret
mov
dec
movsl
and
adc
pop
lahf
mov
mov
mov
xchg
dec
in
cmp
push
mov
fdivrs
or
adc
adc
movsb
incb
es
mov
stc
fildl
sbb
out
mov
and
and
push
iret
lcall
pop
fmull
xchg
xor
dec
dec
pop
mov
aaa
jp
insl
jmp
sbb
mov
adc
inc
inc
push
imul
scas
test
push
int
and
jecxz
ffree
add
mov
and
je
pop
shlb
mov
pop
lcall
or
adcb
pushl
jl
cld
dec
xchg
xor
jecxz
mov
out
sub
sbb
stos
aam
pop
add
dec
aad
adc
insl
sub
jne
sbb
sti
loopne
movsb
shll
xrelease
orb
enter
lods
inc
fwait
jle
fsubl
push
mov
subl
cmp
jp
cmp
scas
out
push
jns
imul
shlb
sbb
ljmp
jns
jno
lidtl
xor
outsl
jo
repnz
sbb
xor
jg
mov
adc
adc
imul
sub
pop
shlb
sbb
xor
adc
cmp
lea
ret
mov
in
nop
add
lahf
push
popf
xchg
push
xchg
push
and
jecxz
out
push
and
and
fcoms
mov
adcb
ret
shlb
bound
xchg
cltd
cmc
inc
fbstp
lahf
inc
xchg
clc
mov
push
xchg
add
jmp
and
popa
mov
ljmp
mov
daa
jno
and
pop
sub
test
test
gs
movsb
push
mov
sbb
push
mov
ds
scas
and
and
add
push
push
test
mov
cld
xorb
adc
ror
lods
in
add
sub
cli
adc
test
test
sub
lcall
adc
xor
xor
adc
andb
cmp
xor
lods
shrb
enter
daa
inc
mov
loope
mov
imul
add
pusha
mov
jae
dec
xchg
and
div
jne,pt
xor
pop
push
and
pop
jg
cmc
pop
notl
xor
popf
loop
and
jbe
mov
mov
les
push
inc
mov
into
std
dec
xchg
jb
stc
pop
pop
mov
in
movb
lds
jge
jns
popf
iret
mov
sbb
data16
sub
fucom
dec
ret
ds
loop
insb
fdivrs
outsb
in
fldenv
rcr
jle
xor
leave
lods
enter
and
jge
add
clc
call
dec
and
pop
sub
sbb
pop
xchg
sbb
push
mov
test
ljmp
lods
icebp
sbb
push
test
outsb
pusha
add
test
jno
scas
xlat
out
insl
ficoms
mov
or
hlt
les
push
dec
add
adc
and
cmc
sarb
mov
in
jmp
mov
push
iret
mov
dec
jns
push
mov
in
cld
sarl
dec
cmp
mov
jecxz
jp
fnstcw
mov
out
push
and
sub
mov
mov
sti
lods
rclb
rcr
dec
xchg
mov
popa
in
addl
in
test
push
mov
lcall
jmp
mov
incl
inc
adc
es
jb
movsl
ficompl
into
jp
mov
sbb
jns
push
push
mov
push
test
xor
roll
icebp
stos
sbb
loop
inc
xchg
sub
xor
mov
add
psubusb
and
dec
add
leave
xchg
lahf
push
pop
dec
mov
mov
mov
cwtl
icebp
ja
into
outsb
and
lock
ss
sub
or
and
cmp
or
imul
stos
cmpsl
stos
das
adc
fldlg2
in
shrb
sbb
sbb
or
loope
clc
sti
jns
mov
inc
mov
xchg
and
dec
jne
sarb
sbb
add
js
push
notb
sub
mov
fst
ret
mov
lock
xchg
mov
cmp
jae
pop
cmp
push
dec
aam
jo
sbb
jecxz
inc
and
aas
dec
test
inc
jo
cmp
inc
or
lods
test
sub
mov
fwait
push
outsb
xchg
and
inc
mov
mov
mov
pop
call
js
dec
jmp
xchg
jns
adcl
hlt
or
inc
es
stos
add
and
xor
lea
adc
or
xchg
std
push
fmuls
adc
inc
dec
insl
cmp
andb
das
popa
xchg
fucom
out
fiaddl
cmp
mov
ss
sahf
repz
enter
xchg
pop
fldl
dec
jl
add
xor
jge
sbb
add
cmp
hlt
iret
loope
dec
mov
jbe
push
xchg
stc
sbb
ret
int
aaa
rorb
icebp
pop
rclb
sbb
xor
lock
ret
xor
add
lods
sbb
jbe
mov
ficomps
in
cs
adc
shrb
xchg
test
cmp
clc
mov
mov
xchg
or
push
fildl
loop
xorl
stc
imul
repz
inc
test
dec
and
or
movsl
repz
push
es
dec
scas
ljmp
sbb
dec
mov
push
jo
lahf
mul
lods
jecxz
repz
sub
push
mov
jne
fdivrl
arpl
sbb
popf
popa
inc
mov
mov
or
out
push
xor
cmpsb
mov
in
cmpsl
pusha
lods
arpl
mov
push
xchg
jge
adc
jno
jle
xor
sti
mov
push
test
jmp
push
cltd
inc
fidivl
pop
sub
cmp
push
mov
loope
jge
adc
lods
loopne
scas
cld
sub
fscale
inc
jmp
xor
scas
setp
jns
out
jae
sahf
lret
adc
mov
pop
cltd
adc
into
scas
and
adc
dec
lock
int3
enter
fwait
inc
jne
jmp
dec
jle
dec
xchg
mov
daa
lods
lock
shrb
jae
sub
jecxz
test
popa
mov
cmp
movsb
fsubrs
adc
daa
lcall
mov
jae
or
mov
subb
push
jne
sbb
add
and
out
jne
lods
movsb
inc
sub
das
add
or
or
pop
test
sbb
pushf
lea
idivl
inc
or
mov
hlt
andb
orb
pop
hlt
mov
dec
dec
sahf
cwtl
xor
push
mov
adc
es
out
repnz
popf
jns
inc
cmp
in
fdiv
insl
xor
clc
pushl
or
jns
call
dec
in
dec
es
adc
inc
daa
into
push
adc
sti
adc
ds
mov
insl
inc
inc
jo
or
pop
je
mov
mov
ss
jmp
lods
xor
jge
xchg
test
jo
mov
mov
pop
inc
pop
mov
in
lahf
or
out
or
incl
fnstsw
pop
push
cmp
or
pop
push
das
cld
xchg
icebp
aam
xor
sbb
dec
cltd
repz
cmpsb
arpl
pushf
jmp
int
jle
add
xor
mov
xchg
setae
ret
sub
jns
rcrl
push
xor
leave
fistl
outsb
pop
cmp
outsb
mov
in
fdivrs
pop
and
sbb
sahf
aas
jo
shrl
in
mov
mov
adc
mov
jp
cmp
add
out
icebp
pop
push
dec
cld
add
adc
ss
rorl
dec
adc
loopne
subl
lds
adc
lret
push
jne
xor
adcb
jnp
dec
rcr
sub
xchg
xchg
out
loope
les
nop
dec
fistpll
xor
xchg
adc
imul
or
or
adc
mov
adc
ja
adc
jnp
rcl
and
push
jne
and
movsl
fistps
addr16
jmp
rorb
out
add
mov
shrl
iret
add
pushf
mov
rolb
sbb
sbb
dec
mov
jmp
or
cltd
leave
sahf
loop
xor
gs
cmpsb
addr16
push
enter
clc
and
fcomps
xor
lods
push
xlat
aad
adc
int3
fiaddl
cmp
stos
jns
cmc
push
fwait
mov
shrl
push
jne
pop
or
clc
pop
in
or
sbb
mov
repnz
cwtl
sbb
sub
cld
add
jno
sti
enter
mov
add
mov
mov
cmc
inc
ja
outsb
cmp
ja
stc
xchg
loop
mov
std
fs
push
add
pop
mov
enter
push
sub
inc
xchg
popf
leave
push
dec
push
jo
xor
xchg
cmp
fsubrp
push
sub
add
mov
ljmp
sub
xchg
jno
or
pop
add
pop
and
jo
xor
push
out
fwait
inc
mov
mulb
ss
sub
xor
xchg
xor
out
push
mov
add
cmpb
inc
dec
cmpsl
xchg
xchg
cmp
mov
aam
push
fwait
pop
arpl
dec
addr16
mov
lret
sbb
inc
call
imul
loope
jae
jno
loope
fdiv
dec
ss
sub
into
sbb
jecxz
push
pinsrw
inc
in
or
fdivrs
hlt
outsb
mulb
pop
repnz
adc
pop
jmp
cld
gs
faddl
or
fwait
sti
fimull
xchg
xor
loope
pop
mov
and
push
lds
xchg
jnp
fldt
and
aaa
test
inc
dec
dec
fsubl
or
les
mov
rorb
jmp
xchg
aaa
sub
scas
ds
sub
xor
sbb
out
cmp
add
pop
jle
jns
packsswb
or
add
adc
sub
mov
mov
loopne
pop
or
ret
cld
mov
cmp
pop
mov
push
mov
push
jns
test
sbb
mov
mov
xlat
xchg
fnsave
xor
fnsave
aam
daa
fiadds
add
mov
pop
pop
lahf
add
inc
in
aaa
cmp
sbb
inc
pop
imulb
data16
mov
addr16
jb
mov
mov
cmp
dec
sub
jp
push
mov
cltd
pop
push
sub
fwait
ret
jo
cmp
jg
jle
inc
shrb
sub
sti
orb
inc
push
mov
xchg
xchg
pop
pop
mov
fcmovb
pop
mov
in
xlat
xor
js
push
inc
add
mov
push
fstl
or
addb
sbb
iret
sbb
xchg
hlt
sub
mov
adc
stos
loopne
ret
outsb
stos
frstor
int3
addr16
fidivs
or
jge
adc
cmpsl
test
and
lret
fnsave
xor
inc
pusha
dec
cmp
out
addr16
mov
scas
xchg
rcl
adc
int
lahf
iret
sub
sbb
push
shrb
ror
rcll
xor
inc
jle
mov
sbb
dec
xchg
add
outsl
add
sbb
dec
lahf
aaa
push
scas
in
subl
ljmp
xchg
lret
fstl
outsb
mov
or
cmc
mov
and
divl
lods
aam
sahf
fdivrl
insb
lret
and
and
sub
cmp
mov
adc
in
mov
js
push
mov
mov
xor
xorl
mov
push
jg
pop
es
pushf
subb
dec
ljmp
or
hlt
and
pusha
sub
xlat
xlat
lock
cli
push
das
or
xchg
push
bnd
sarb
mov
mov
sbb
sahf
add
xor
aad
repnz
fisttpll
es
sub
or
adc
scas
inc
outsl
dec
mov
orl
mov
repz
aad
mov
push
orb
or
hlt
inc
inc
xchg
repz
cmpsb
out
aad
lock
sub
lea
mov
je
movsb
jle
bound
add
popf
cmc
pop
fmull
outsl
and
mov
loope
mov
fisubrl
mov
roll
pop
lea
fildll
not
adc
iret
loopne
mov
xchg
push
push
cmp
inc
push
lcall
cs
int
sub
and
clc
ja
or
lret
out
outsb
and
mov
mov
int
in
jbe
jo
xor
push
lds
add
imul
sahf
test
dec
mov
jnp
pop
or
lods
add
imul
scas
cmp
shrl
sbb
bound
lods
notl
xchg
call
xchg
xor
clc
sbb
pop
stos
ds
popf
inc
insl
pusha
push
push
pusha
aad
je
repnz
sbb
test
leave
lcall
test
adc
sbb
lahf
dec
fisttpl
and
pop
cmp
insb
xchg
jb
adc
dec
inc
scas
std
std
lret
inc
int3
dec
lock
push
rolb
js
xchg
push
xor
hlt
lds
lcall
adc
push
jecxz
xchg
xor
and
dec
iret
mov
sti
incb
call
and
les
xor
gs
aas
jnp
out
ja
cmp
orb
cmp
jbe
std
dec
sar
pop
lahf
sub
and
mov
inc
or
arpl
sub
mov
add
cmpsl
cmpb
push
xchg
in
jle
pop
push
jmp
and
or
sub
ror
add
cmp
or
mov
dec
bound
inc
in
das
inc
psubb
sub
jmp
sub
push
xor
or
rcl
mov
sahf
pop
lock
sub
jb
cmpsl
mov
push
push
dec
imul
ret
lret
push
sub
mov
mov
and
xchg
test
and
jns
addb
push
stos
sahf
and
push
scas
dec
jb
jge
fisubrl
repz
sti
push
sub
int
pop
mov
lods
cmpsl
stc
mov
or
or
pop
imul
inc
xchg
adcb
sbb
mov
je
movsb
arpl
call
bound
clc
pop
fbld
mov
inc
sub
sub
cmp
outsl
pop
pop
xor
adc
pusha
lock
xchg
divl
sub
dec
lods
cwtl
push
add
or
lcall
testb
fmull
sbb
adc
cmp
mov
or
ret
xor
punpckhdq
pop
rolb
shl
pop
fmull
lds
mov
cmc
fs
push
cmp
pop
lret
lock
xchg
pusha
add
cmpsb
sbb
aas
loope
add
dec
fdivrl
jle
rorb
incb
adc
pusha
aam
outsb
and
pushf
push
outsl
adc
pop
les
push
out
lods
pop
std
mov
sub
cs
les
add
jle
sahf
add
in
jns
je
mov
int
xor
jmp
xchg
loope
xor
loopne
das
clc
cwtl
sbb
mov
sbb
fists
mov
mov
push
movsb
js
mov
inc
lret
out
clc
andb
mov
repnz
mov
dec
js
xchg
jp
push
push
gs
adc
sti
cmpsl
scas
vmovups
push
in
scas
mov
sbb
jle
fcoms
aam
out
push
or
xor
xchg
popf
cmp
xor
xor
gs
pushl
fucomi
xchg
mov
mov
dec
inc
ljmp
scas
daa
mov
pop
dec
jle
mov
fucomi
and
subl
js
mov
out
inc
sub
imul
pop
fbld
xchg
jmp
push
popa
leave
mov
lea
push
iret
sti
pop
cld
mov
outsl
xchg
iret
loop
xchg
mov
sbb
or
push
xor
ret
xor
push
mov
mov
or
lret
or
ja
lods
add
in
push
stos
jae
addr16
loope
in
or
inc
and
into
sub
lret
mov
mov
mov
pop
cmp
mov
inc
add
pop
jns
xor
and
data16
jle
addr16
pushf
add
fwait
or
jb
dec
lret
add
add
jge
inc
fcomps
sbb
ljmp
scas
or
orl
push
sbb
push
push
negb
orl
fchs
and
and
icebp
shll
push
sub
mov
sbb
cmpl
ljmp
in
inc
dec
test
adc
and
adc
ds
les
push
cmc
mov
dec
popf
xor
popf
cmpsb
lcall
xchg
lea
pop
adc
sub
cmp
stos
fsubr
xchg
mov
stos
mov
push
cmpsl
pop
mov
insb
mov
sub
pop
xor
in
in
inc
jns
add
push
push
cwtl
push
jl
mov
nop
or
mov
xchg
adc
mov
int3
scas
and
or
push
jle
stos
popa
popf
mov
lahf
insb
leave
jno
pop
stos
in
and
mov
add
ret
add
mov
and
mov
adc
mov
mov
jae
pop
and
pop
xchg
inc
pop
inc
jb
adc
loopne
push
insb
or
fs
in
pop
cs
or
xchg
mov
testb
cmp
shll
adc
sub
mov
mov
jmp
adc
jno
inc
add
lcall
lea
sub
fisttps
cmpsl
jecxz
dec
fwait
in
sbb
loop
push
pusha
jnp
test
popa
gs
pop
xchg
lret
rcr
or
movsb
rorl
push
mov
mov
nop
adc
mov
bound
adc
jecxz
mov
out
imul
mov
insl
or
pusha
loopne
dec
push
mov
mov
mov
les
out
negl
lods
fimull
ss
data16
xchg
aad
mov
sbb
add
cmp
mov
mov
test
fsubrp
push
into
inc
jge
cmc
je
xor
leave
imul
push
andl
lods
pop
adc
cmc
nop
mov
icebp
repnz
push
bound
test
lds
pop
sub
xchg
jge
push
lcall
int
ds
push
xlat
cmc
icebp
push
movsb
mov
xchg
mov
xchg
add
add
cwtl
ljmp
mov
lods
out
jns
dec
int
divl
mov
mov
repnz
push
bound
push
ret
push
aaa
mov
xor
xchg
stos
push
sbb
out
rcr
ret
xchg
out
shlb
adc
shrl
lret
sbb
cmp
dec
fnstsw
sub
lock
daa
and
push
mov
sub
mov
js
leave
jae
movsb
jmp
dec
add
inc
rcrb
stos
clc
pop
adc
movsl
ss
push
jp
pop
sbb
fs
dec
dec
mov
fldl
stos
adc
mov
es
push
add
hlt
jg
jg
jg
jbe
cmp
push
ret
pop
jecxz
mov
mov
mov
ss
lock
les
mov
pop
lock
mov
ret
push
push
pop
push
jo
push
nop
imul
arpl
cli
and
xchg
jmp
repz
xchg
xchg
cmp
popf
xchg
add
lock
lods
lret
lahf
push
and
aas
xor
push
movsb
adc
addr16
mov
shlb
mov
xor
inc
fimull
aaa
std
cmp
sbb
outsb
mov
xor
lret
int
sti
mov
loope
and
fildl
xchg
ja
mov
outsl
test
aad
sarb
icebp
mov
or
pop
push
inc
and
push
add
or
std
ret
movsb
inc
dec
or
insb
cmp
ljmp
mov
fs
addr16
cmp
orl
adc
push
shl
xor
aad
mov
pop
add
int3
inc
xchg
dec
xchg
push
addr16
into
repz
adc
jle
inc
dec
jp
and
cltd
fdivrl
roll
in
mov
mov
mov
push
adc
inc
pop
sarl
push
cmpsb
cld
cwtl
shl
pop
cmp
cmpxchg
enter
sarb
cli
out
fcmovu
jbe
insb
adc
or
fildll
xor
or
sti
sub
adc
dec
mov
mov
fisubrs
invd
cmpsl
icebp
std
cld
mov
pusha
icebp
mov
ljmp
andl
adc
push
test
push
in
mov
movsl
mov
or
xor
jo
push
add
add
xchg
call
in
popf
add
lds
push
movsl
out
fcomip
sub
add
movsl
movsl
cltd
bound
lret
push
sti
xor
movsl
les
dec
pusha
adc
sbb
sahf
or
sahf
mov
stos
lock
xchg
ss
ds
mov
push
add
out
add
cmp
mov
dec
cs
dec
div
cmp
subl
pop
cli
cmp
addr16
nop
scas
sbb
int3
xchg
ds
mov
aad
out
push
aad
push
inc
push
dec
aad
xchg
scas
aad
cs
jl
inc
dec
cmp
inc
imul
adc
div
adc
mov
jno
xchg
nop
lods
jae
pushf
in
jb
test
bound
dec
push
hlt
cwtl
adc
cmp
mov
repnz
pop
or
mov
cmp
push
mov
enter
mov
cmp
sbb
leave
loopne
xor
push
add
pop
adc
push
bound
divl
pop
adc
fimull
aas
push
popf
jp
mov
ret
mov
frstor
mull
jl
inc
or
sub
sti
dec
inc
mov
add
out
mov
insl
sub
insl
test
mov
fwait
cli
into
mov
inc
pop
inc
insb
dec
pop
sub
aaa
sub
dec
or
pop
mov
leave
loope
insb
add
sti
lds
jp
lds
test
and
mov
daa
ljmp
mov
push
ljmp
ss
sbb
mov
and
dec
mov
adc
out
arpl
lods
cwtl
jp
je
int
xchg
pop
ja
dec
inc
dec
sbb
xchg
stos
gs
roll
testb
jnp
mov
pushf
outsb
push
mov
cmpsb
xchg
xor
sbb
sub
mov
mov
add
mov
add
fcoml
test
out
rolb
cmp
jae
xor
rorl
xor
out
push
hlt
and
and
dec
ja
pop
jle
inc
leave
hlt
push
push
ret
and
nop
sub
mov
movsl
loop
jnp
in
push
adc
cltd
pop
repnz
cmp
mov
pop
push
cmc
lods
dec
mov
in
or
iret
sub
cmp
sub
pop
dec
test
jno
xorb
add
inc
jb
push
mov
fisttpll
add
and
arpl
jns
ret
sub
shll
adc
and
adc
mov
iret
dec
cmp
iret
pop
loope
cmpsb
in
push
xchg
add
loopne
int
fnsetpm(287
mov
sbb
inc
repz
push
aaa
pushf
popa
xchg
fdivrl
pop
and
mov
scas
iret
rol
stc
jge
xchg
jle
fcoms
mov
mov
jp
gs
mov
loopne
leave
sub
and
mov
and
push
push
popf
and
xchg
xor
inc
xchg
mov
mov
lods
and
or
push
sbb
xor
arpl
push
add
rcll
push
sbb
std
inc
inc
dec
std
mov
xchg
inc
pop
cli
rcl
mov
jmp
push
jle
aas
loope
loopne
dec
xor
inc
dec
fwait
push
hlt
ja
lea
jbe
dec
in
fistpl
cmpsb
ret
ficompl
pop
xor
sub
aam
pop
or
outsl
insl
pop
xor
lea
shl
scas
mov
hlt
mov
cltd
xchg
std
sub
xchg
xchg
shrb
and
inc
mov
push
shrb
out
movsb
decl
lods
mov
jne
aam
leave
cmpsb
cmp
sahf
es
push
xchg
hlt
in
mov
mov
xor
dec
lret
ret
stc
lods
xchg
inc
xchg
cmp
ficomps
test
mov
lods
daa
testl
adc
sub
or
mov
scas
pop
aaa
and
sbb
cmp
xchg
cmp
aad
sub
sub
mov
ret
pop
setne
cmp
sbb
mov
jb
sub
add
clc
sqrtps
mov
or
imul
loope
push
repz
jns
or
lret
cmp
sub
cmp
inc
mov
call
insb
adc
dec
xchg
xor
pop
or
cmpsb
hlt
push
xor
mov
insl
push
insb
mov
les
add
sbbl
lahf
insl
sti
loopne
adc
cmp
pop
jb
and
add
hlt
outsl
add
mov
mov
js
sti
and
push
in
mov
mov
mov
pusha
mov
fsubr
ss
fsubrl
jmp
push
cmp
sub
mov
add
fistpll
dec
imul
fwait
in
sbb
fisubl
pop
and
aas
aaa
daa
mov
daa
sub
sbb
out
xchg
fcomps
jne
ret
xor
add
dec
ss
adc
addl
arpl
popf
ret
cld
dec
sub
fidivl
or
mov
rcl
lcall
mov
insl
mov
fimuls
or
sub
mov
dec
mov
repnz
fcoms
cwtl
sub
fiaddl
push
arpl
mov
mov
aaa
push
mov
dec
aaa
xchg
pop
xor
mov
je
call
lods
xchg
stos
daa
movsb
push
ret
mov
mov
push
stc
xchg
lahf
mov
jb
xchg
rorb
lahf
pop
lds
int3
insb
cmp
push
push
push
imul
mov
ds
ror
fcomps
es
mov
xor
pop
jecxz
adc
gs
dec
cmp
push
cmp
xor
xor
xchg
mov
add
and
mov
pop
clts
incl
mov
lods
pop
sbb
test
loope
mov
ret
push
mov
sub
mov
mov
arpl
jle
in
mov
cmpsl
outsb
adc
adc
jle
gs
and
dec
aaa
sti
fs
or
mov
dec
xchg
sarb
jno
xchg
mov
xor
xor
cltd
mov
leave
fisubs
add
ret
pop
dec
pop
cltd
fdiv
and
mov
cltd
mov
fisubrl
insl
dec
repnz
mov
pop
pop
sub
fs
jns
adc
ja
ds
and
shl
stos
adcb
push
hlt
cmp
enter
adc
ret
out
mull
adc
add
mov
gs
cltd
pop
xor
lock
movsl
add
fdivrl
fcoms
sub
jp
decl
push
enter
xor
addr16
mov
cmpsb
out
add
ret
inc
inc
stos
xchg
mov
sub
jb
or
mov
insb
or
iret
add
loopne
int3
dec
pop
cmpsb
adc
jle
into
cmpb
cmp
cmpsb
rcl
xor
push
mov
xor
outsl
push
jb
cmp
add
or
mov
cmpsb
es
and
mov
push
sarl
dec
and
cs
sub
in
loopne
xor
stos
lods
ficompl
out
xor
pusha
dec
outsl
xchg
daa
dec
fsts
sbb
xchg
xor
or
test
popa
mov
cld
dec
clc
mov
cmp
mov
in
lock
push
dec
sbb
sub
pop
mov
mov
mov
add
adc
add
or
fistpll
jecxz
ret
jns
xlat
mov
or
push
dec
stos
incl
jae
pop
stos
xchg
inc
adc
lock
jne
mov
int3
cmp
std
mov
pop
mov
shll
mov
xlat
sub
mov
cwtl
xor
enter
mov
adc
loop
sbb
or
sub
lock
mov
clc
ss
loope
inc
sti
loope
cltd
ljmp
jb
dec
push
inc
lods
lods
adc
rcrb
clc
stos
ret
and
loope
push
mov
daa
mov
lahf
mov
mov
add
pop
mov
aad
adc
es
and
inc
jne
pop
repz
test
cmp
ret
jle
xor
pop
outsb
ljmp
test
and
push
imul
xchg
mov
push
jge
dec
xchg
cmpsl
iret
in
in
popf
stos
in
add
sub
dec
ja
push
mov
xorl
enter
cmpb
scas
pop
insb
std
inc
cmp
inc
jp
pop
dec
pop
cmp
pop
out
cmp
sub
or
jnp
rorl
push
pop
jno
cmp
or
dec
and
andl
imul
push
iret
mov
cli
mov
testl
push
push
cmp
rolb
jmp
in
ret
xchg
test
iret
mov
adc
andb
lock
jl
in
mov
in
jp
adcl
jmp
out
enter
and
push
xchg
xchg
and
insb
push
jp
ja
jle
movsb
inc
jmp
test
movb
xchg
xor
lahf
scas
mov
cld
cmp
add
sarb
sbb
jae
filds
inc
xchg
cli
dec
push
into
push
mov
popf
and
xchg
loope
jle
mov
gs
subl
xor
and
push
push
inc
push
sub
fwait
mov
pop
out
push
stos
and
test
cld
mov
and
pop
dec
mulb
leave
call
and
fisttpl
and
aad
test
cmc
dec
or
cmp
loope
gs
sub
fisttpll
jg
stos
xor
inc
rol
es
pop
xor
je
and
push
cmp
sbb
enter
ret
imul
jl
xchg
test
stos
insl
push
push
mov
cmpsb
adc
mov
ds
mov
fs
xchg
ljmp
in
lcall
test
push
ss
and
sarl
fimuls
cli
in
outsb
sbb
or
aad
push
cmpsb
and
scas
fsubrl
pop
add
pop
in
pop
dec
dec
sahf
in
mov
xor
mov
je
jp
sub
jl
fsubrs
sub
cmp
ret
les
push
mov
pop
rcrl
mov
xchg
repnz
jp
adc
mov
cmp
ja
js
inc
clc
mov
pop
mov
pop
and
xor
clc
mov
out
add
fdivl
pop
mov
mov
scas
sbb
shll
adc
lods
jge
out
jp
int
sub
fsubl
jnp,pn
xchg
xlat
loop
dec
repz
mov
push
mov
sub
test
cli
adc
fstps
into
out
xorb
fs
int3
repz
out
jnp
fisubl
xchg
lret
jb
les
das
lock
test
add
mov
xor
push
sti
call
and
xor
or
mov
push
push
ljmp
xor
repnz
jp
add
and
lods
clc
cmp
hlt
sti
cwtl
mov
lcall
mov
shr
cmp
lods
mov
sub
or
push
mov
jnp
sbb
subb
mov
dec
jmp
lock
inc
xchg
push
scas
adc
add
cs
cmpsb
mov
rolb
out
mov
cmp
adc
lock
lods
mov
pop
adc
lcall
push
fdiv
cli
mov
inc
cmpl
negl
adc
cmp
adc
es
cwtl
and
and
inc
ds
leave
ljmp
dec
jge
and
push
movsl
enter
sti
aas
mov
shr
inc
jae
mov
dec
dec
push
dec
out
jecxz
cmp
mov
add
adc
or
outsl
cmpsb
fnclex
stos
mov
push
popa
fldenv
out
das
cmp
mov
or
and
xor
orl
movsb
js
jle
mov
push
pop
push
cmc
mov
pop
sub
cmp
or
add
nop
sbb
or
movsb
adcb
xchg
mov
pusha
adc
ljmp
xchg
jmp
and
jmp
lds
or
movsl
add
push
sbb
push
outsb
adc
sbb
ds
push
sbb
push
adc
inc
or
inc
shll
cmpsl
or
jmp
mov
test
aad
mov
int
push
rclb
push
movb
inc
inc
mov
call
movsl
sahf
mov
push
xor
enter
test
adc
ss
pop
xchg
stos
iret
xchg
cmc
rcrb
test
jp
mov
cmp
inc
sub
push
lahf
inc
xchg
push
sub
cmpsl
push
negl
cmc
cmp
imul
cmpsl
push
jae
faddl
movsl
fisubrl
pop
xor
mov
mov
dec
sbbb
fsubrs
scas
dec
ja
div
and
add
and
aad
daa
xchg
cld
jmp
jo
ror
ret
andb
loope
mov
mov
add
inc
ja
into
xor
fsts
sub
push
out
adc
movsl
sub
cmp
sbb
mov
fmul
insl
jb
and
iret
or
or
mov
pop
rolb
mov
inc
and
imul
das
cmp
mov
cltd
ss
lds
inc
loope
jb
paddusw
xchg
mov
loope
push
jno
jmp
mov
xchg
xchg
mov
jecxz
mov
inc
ds
shr
sub
push
das
pop
rcrl
sbb
lcall
mov
mov
jecxz
inc
jp
add
lods
addr16
mov
mov
mov
data16
adc
push
rorl
jp
dec
repnz
inc
mov
js
sub
ror
xchg
clc
rorl
push
outsb
push
sub
cmpsb
enter
pusha
pop
xor
ret
inc
mov
or
inc
daa
cmc
out
jmp
mov
mov
mov
add
add
test
cmp
push
mov
jle
add
mov
adc
call
mov
add
sbb
test
jmp
into
je
fisttpl
daa
imul
xchg
hlt
xor
outsl
pop
fstpl
fidivl
pop
cmp
pop
mov
jmp
pusha
or
jecxz
idivb
icebp
sbb
or
sahf
sbb
cmp
push
cmc
xor
bound
and
fadd
push
mov
mov
pop
in
add
dec
mov
add
popa
out
inc
and
sub
fistpl
cltd
loope,pt
cmc
mov
mov
mov
xchg
data16
fadds
dec
mov
sbb
cltd
addl
cli
iret
add
repz
xchg
xor
and
lcall
cld
fsubs
sahf
cs
and
inc
mov
xlat
mov
cld
and
mov
ficoms
out
leave
jmp
mov
arpl
repz
pop
into
sbb
mov
dec
aaa
movsb
mov
outsb
lods
into
popf
stc
mov
sbb
sbb
addr16
push
and
cltd
mov
stc
ja
mov
clc
pop
cs
lock
insb
cmpsl
cld
popa
jmp
bound
nop
sbb
loope
push
jo
iret
arpl
xor
clc
mov
in
pop
inc
sbb
rcr
test
mov
scas
js
cmp
jle
leave
fidivrs
enter
adc
sbb
int
bound
int3
in
iret
cmpsb
lods
mov
or
adc
ds
mov
cwtl
xchg
pop
and
incb
mov
xchg
jb
xchg
or
jp
loop
push
dec
ss
movsl
hlt
inc
mov
enter
test
xor
inc
and
mov
fwait
xor
pop
add
adc
clc
mov
das
subb
pushf
out
test
sbb
jmp
jae
push
lret
mov
sahf
push
add
add
xchg
aam
push
add
jle
add
inc
ds
vunpcklps
mov
xchg
fcmove
sbb
fisubl
mov
cltd
mov
mov
lods
lahf
cmc
fimuls
lock
lea
sti
cmp
lods
aam
inc
pop
and
shlb
lar
pop
jp
pop
jmp
xor
mov
mov
inc
push
in
xchg
and
xchg
mov
push
or
sarb
pop
mov
inc
hlt
imull
fnstsw
inc
lds
mov
outsb
call
mov
cli
add
into
push
fnstenv
aaa
dec
jecxz
lahf
stos
mov
std
jno
mov
xorb
lahf
cli
fildll
test
loope
cwtl
add
imul
lds
lcall
mov
dec
jns
aad
pop
or
dec
cmp
add
test
mov
mov
dec
addr16
outsl
repnz
mov
jae
sub
sbb
imul
mov
mov
mov
lret
dec
xor
subl
loopne
push
fwait
push
sahf
loop
mov
movsb
and
testl
test
cwtl
pop
push
sarb
pop
xchg
pop
mov
outsb
int
shll
jecxz
cld
jg
cmp
jnp
lods
sbb
sub
add
test
in
dec
lcall
mov
gs
popa
outsl
cmp
sahf
fs
cmc
jb
adc
mov
or
push
cmp
xor
vpsubusb
sub
cld
push
xchg
ja
ds
mov
dec
xor
lcall
dec
pushl
std
sbbl
decl
push
popf
testl
in
mov
lock
dec
test
mov
cmpsb
insb
insb
jle
ret
sbb
mov
push
fildll
loopne
aad
mov
pushf
xchg
ret
pop
cwtl
es
inc
mov
cmpsb
cmp
and
push
jg
mov
mov
out
iret
adc
pusha
ss
stos
pop
jae
push
mov
outsl
cmpsl
push
dec
jp
pop
jne
cltd
je
cmp
fmuls
ret
cmp
insb
inc
pusha
int
xor
dec
cmp
and
movsl
out
test
inc
lret
pusha
add
pop
add
xchg
sub
ret
sub
addb
push
sub
lea
push
js
inc
pop
iret
daa
add
aaa
cmpsl
lock
or
ljmp
repz
filds
sub
mov
push
and
loope
jne
jp
and
arpl
mov
fnstsw
repz
pop
xchg
lret
dec
jne
cmpsb
adc
pop
cmp
iret
sub
push
aad
jmp
mov
cltd
xor
fdivrl
pop
cld
cld
dec
or
in
lock
push
sti
ficoms
les
inc
in
xchg
cmc
xchg
dec
mov
insl
popf
or
and
cmp
push
sub
sub
cmc
push
popa
sbb
jecxz
rcr
adc
int
inc
cmp
nop
shlb
cmp
lds
lds
adc
daa
jmp
push
xor
mov
sub
adc
xchg
in
mov
jecxz
push
mov
push
fisubs
hlt
push
adc
push
int3
dec
scas
cmp
adc
scas
xchg
test
into
jmp
test
mov
shl
or
fisubl
jl
and
sahf
jnp
bnd
in
mov
adc
adc
sbb
ror
sub
pushf
imul
sbb
rol
out
aaa
arpl
sub
inc
sub
addb
pop
bound
add
sub
cmp
sbb
or
mov
add
cwtl
mov
or
mov
imul
lahf
cmc
stos
pop
ficoms
in
not
jmp
mov
fisubrs
jb
push
dec
subl
adc
push
repz
mov
jnp
sahf
aas
outsl
xor
mov
push
lret
jno
out
lods
sub
aam
mov
ljmp
mov
sbb
adc
pop
fistps
push
push
xor
ljmp
add
bound
movl
mov
adc
fstpt
loop
or
jne
imul
in
ljmp
icebp
add
mov
cmp
call
movsl
mov
shrl
xor
lods
sub
mov
roll
int
ds
std
mov
jb
inc
inc
idivb
mov
jmp
loop
icebp
and
xor
scas
sub
addr16
or
and
push
es
mov
repz
xchg
pop
ret
mov
push
push
pop
rclb
insb
dec
mov
mov
and
mov
inc
call
push
cmp
cmp
jmp
es
fisttpl
jecxz
pop
xchg
xchg
popa
add
mov
and
inc
push
dec
dec
aas
jmp
cmpl
add
xor
imul
icebp
cmp
iret
mov
mov
js
or
mov
xor
jg
xor
rolb
pop
repnz
sub
adc
repnz
pop
negb
lock
std
sub
ljmp
out
jns
rcr
mov
test
movsb
jmp
dec
xor
adc
or
movsl
into
and
push
adc
lret
fcomps
sbb
movsl
push
cmp
sbb
movsl
std
cli
lret
sbb
dec
dec
lock
imul
outsl
cmc
add
inc
lock
loope
mov
push
cmpsl
dec
rcrl
and
clc
imul
sub
cmp
sbb
xchg
insb
push
jl
jge
dec
mov
ret
mov
test
arpl
adc
and
out
shlb
sbb
jecxz
mov
mov
dec
cmp
jecxz
mov
testb
sub
inc
mov
test
cmp
adc
shr
sub
or
mov
call
filds
add
shll
cld
cmp
cmp
pop
dec
push
pushf
mov
loopne
addr16
inc
lods
iret
fisubl
dec
xor
repnz
ret
inc
or
int3
std
shlb
imul
lods
les
inc
pop
sahf
js
lret
cmp
sub
es
pushf
pop
sub
and
arpl
popa
cmp
scas
ficomps
insb
shlb
scas
test
mov
inc
pop
clc
aas
es
mov
cld
cmp
mov
les
cmpsl
jge
call
cmc
inc
fwait
mov
lahf
leave
subb
fistl
push
cmc
xor
nop
test
inc
mov
adc
arpl
or
movsb
bound
int3
shll
mov
mov
mov
dec
notb
adc
mov
jne
sbb
sti
aam
std
xor
out
clc
mov
mov
adc
das
test
leave
enter
mov
adc
mov
inc
dec
pop
push
inc
in
adc
cli
xchg
int
mov
mov
mov
xchg
pop
mov
fadd
pop
out
cmp
cmp
cmp
cmp
int3
mov
pop
cmp
cmp
nop
xor
sbbb
mov
inc
push
jle
sub
scas
jge
or
lock
xchg
cmc
xor
fcomps
or
dec
lods
sahf
clc
aam
xchg
iret
insb
fisubl
cmpsl
xchg
mov
add
dec
jo
sub
jl
out
cltd
inc
dec
and
adc
mov
xor
push
push
mov
es
dec
jle
mov
icebp
outsb
mov
pop
mov
adc
pop
sbb
mov
cmp
mov
dec
and
nop
or
daa
xlat
push
movsb
shll
mov
add
jl
inc
mov
dec
pop
out
push
jg
jno
loope
test
rcrb
fisttpl
mov
stos
mov
bound
or
and
icebp
pop
xor
loopne
mov
cld
popf
in
in
clc
mov
daa
cmpsl
adc
push
sbb
lods
mov
lock
cmp
shr
lcall
fwait
sub
push
std
dec
mov
mov
pushf
jo
dec
int3
fld
mov
pop
testb
adc
fildl
fstpt
lea
push
adc
cmp
leave
sti
cltd
sub
ret
aam
imul
push
or
lock
sub
push
scas
outsb
loopne
ret
jg
and
stc
negb
mov
pavgb
call
fcmovne
inc
bound
xor
enter
out
jcxz
in
push
add
mulb
push
loopne
jbe
mov
test
int3
mov
cmp
jno
push
pop
movsl
mov
rolb
xor
xchg
xchg
and
mov
ljmp
adc
mov
pop
pop
roll
fbld
cmp
lock
es
pop
stos
cld
jmp
xchg
iret
xor
in
pop
int3
je
mov
pushl
adc
stos
inc
and
lret
adc
mov
les
pop
pop
adc
jmp
add
repz
insb
and
jmp
addr16
aaa
aam
inc
sahf
fbstp
std
mov
pop
dec
dec
fmul
shll
xor
adcl
lret
dec
int3
jae
and
sbb
int3
dec
imul
adc
xchg
cmc
adc
add
cli
xchg
mov
push
xchg
aaa
lret
xor
push
sti
and
mov
fwait
jle
cmp
sub
aaa
scas
repnz
ret
outsb
pop
test
jns
push
sub
push
cmp
add
xchg
fdiv
push
lock
orl
xlat
xchg
ficoml
inc
xor
in
and
cmp
pop
xchg
mov
push
sbb
pop
shll
and
mov
pop
loopne
cmpsb
orl
in
pop
daa
mov
je
ljmp
pop
pop
xor
jl
ja
loop
int
insl
nop
call
aas
movsl
adc
inc
test
inc
sbb
cmp
add
scas
loope
xor
stos
sub
mov
pop
clc
mov
push
inc
adc
sub
mov
insl
and
loop
mov
out
out
into
ret
ja
out
popf
sbb
or
shrb
push
loope
and
mov
cmpsl
lahf
ret
mov
loop
or
sub
or
add
or
push
cmpsl
dec
aaa
mov
bound
jnp
xor
push
mov
sub
or
push
sub
push
cltd
and
mov
por
ficoms
scas
aad
inc
fwait
mov
shll
lods
into
repnz
cli
fs
push
sti
lea
mov
enter
rcll
xchg
cltd
lods
add
sarl
and
pusha
push
mov
inc
jle
cmc
pop
or
pop
call
mov
psubq
jg
mov
xchg
popf
mov
lahf
cmp
inc
cli
xor
pop
jnp
test
cld
xchg
enter
aad
adc
xor
jno
push
add
pop
cmp
mov
sbb
out
add
lock
pop
cmp
push
fwait
mov
adc
jno
push
lcall
pop
xchg
xchg
push
shl
insl
push
mov
popf
add
aaa
jb
ror
sub
xor
mov
sbbl
loopne
mov
and
dec
sbb
sub
mov
in
or
dec
iret
jne
das
sbb
and
adc
fsubs
daa
in
xor
mov
fiadds
push
add
add
loope
fmul
rcrl
xor
fisubrs
push
outsb
fwait
and
pop
test
add
sbb
div
inc
push
scas
rcrb
xor
inc
mov
mov
mov
push
cmp
cmp
cltd
add
fidivrs
fsubrl
inc
mov
lds
jge
xor
into
lcall
fcmovnb
pop
out
gs
xlat
pop
loopne
dec
mov
dec
outsl
mov
jmp
dec
ja
notl
ja
and
fs
or
dec
add
jae
mov
adc
add
stos
cmp
mov
daa
sbb
es
xchg
or
cmp
pop
add
pushf
pusha
in
sub
push
daa
add
lods
dec
lret
movsb
pop
lods
pop
sub
in
mov
add
lret
movl
mov
mov
sbb
jne
jo
xchg
xlat
jne,pn
push
cli
repnz
mov
push
xchg
imul
sub
icebp
rorb
mov
fs
lcall
dec
xor
outsb
addr16
sub
jle
fwait
jle
adc
mov
mov
lock
xor
jnp
xchg
mov
mov
scas
fiadds
pop
dec
sub
rclb
jo
repz
jo
push
mov
sbb
push
int3
mov
or
mov
xor
and
xor
not
sbb
into
push
fdivrl
data16
movl
inc
jns
inc
adc
dec
jecxz
sarl
loop
popa
cmpsl
pop
push
mov
inc
or
xor
mov
js
ss
aad
int3
sub
pop
jl
pop
pop
inc
arpl
in
jnp
mov
push
push
sahf
stos
into
clc
in
addl
xchg
dec
jb
pop
mov
shll
mov
xor
aas
dec
mov
adc
fdivs
rcrl
inc
adc
cmpsb
sbb
fldlg2
jmp
lods
rol
test
and
adcb
add
xor
lods
and
pop
les
out
shrb
add
or
push
out
adc
lret
jnp
push
shll
repz
cmp
push
pop
dec
into
add
arpl
outsb
inc
sub
movsl
push
pop
and
fs
dec
repnz
nop
imul
mov
mov
cs
adc
dec
push
fld
stc
xchg
imul
mov
dec
xor
mov
xlat
xchg
push
add
xchg
fbld
mov
inc
mov
movsb
rorl
push
bound
or
sbb
mov
test
mov
push
ror
xor
leave
icebp
inc
lret
int
or
cmp
std
sbbb
movb
push
xchg
sahf
aaa
test
and
cs
mov
mov
repnz
test
psllw
cmp
pop
cmpsl
add
cmpsb
std
outsl
push
cld
sbb
add
jmp
add
sbb
outsl
je
outsl
pop
insb
sbb
imul
rcrl
int3
or
int3
mov
mov
inc
inc
test
mov
push
pop
pop
test
dec
scas
cmp
or
push
xchg
sti
pusha
not
test
push
mov
fiaddl
cmp
mov
jo
mov
sub
mov
aad
mov
mov
stc
dec
sbb
leave
lret
and
xor
jl
mov
push
paddq
imul
imul
push
mov
icebp
fadd
jmp
nop
and
clc
jle
lds
or
push
mov
jno
pusha
xor
mov
cwtl
popf
jmp
dec
sbb
cmp
dec
jle
mov
xchg
lods
leave
cmp
rorb
mov
mov
push
lahf
jns
ljmp
sub
push
lret
fsubp
loope
loopne
aaa
pop
cmpsb
sbb
or
mov
mov
jle
mov
sub
mov
and
les
xor
jb
popa
iret
loope
mov
adc
movb
mov
push
cli
mov
daa
or
jbe
cmp
aad
xchg
xorl
movsl
bndldx
add
xchg
outsl
daa
insl
and
loopne
jns
mov
fmul
enter
call
mov
cmp
clc
mov
add
insl
dec
imul
inc
dec
xor
xor
push
push
xor
xor
and
frstor
out
mov
mov
pop
out
pop
dec
test
adc
sbb
adc
fnstsw
repnz
and
push
mov
sbb
shr
xchg
sbb
mov
fisttps
or
mov
outsl
leave
adc
dec
ds
aaa
popa
inc
xor
push
mov
adc
xchg
lds
pop
dec
mov
lea
inc
pop
sub
jle
dec
mov
push
inc
ret
ret
scas
add
je
mov
cmp
std
pop
lods
mov
out
add
or
incb
inc
int
sti
xchg
loop
xor
xchg
movsb
cld
pop
subb
icebp
ljmp
test
cltd
repz
push
repz
into
js
int
add
mov
enter
scas
cmpsl
lret
add
dec
mov
jge
adc
sarl
repz
in
mov
in
fs
lcall
test
jecxz
adc
adc
int
clc
add
pop
aas
inc
or
cmp
jge
es
inc
xlat
fcoml
jge
inc
mov
imul
mov
outsl
mov
arpl
xor
scas
mulb
in
cmp
mov
inc
sbb
push
and
sahf
sub
mov
mov
mov
jl
cmpsl
mov
or
outsb
mov
pop
sub
inc
mov
inc
xor
inc
lret
icebp
in
out
aaa
loop
fnstcw
inc
scas
jno
gs
add
sub
movsl
or
mov
mov
jle
mov
ja
sub
inc
fsts
jnp
test
in
xlat
fwait
mov
jb
xchg
out
jp
fs
lods
xchg
outsl
adc
push
add
iret
mov
ret
stc
or
push
cli
inc
inc
mov
loope
sub
xor
or
mov
cmp
cltd
pusha
out
int3
mov
mov
xchg
push
out
cmpsl
in
in
inc
arpl
sub
and
xor
xchg
in
and
xor
add
sbb
pop
ss
out
pop
jecxz
aam
adc
testl
into
mov
add
icebp
push
inc
and
mov
cmpsl
adc
lahf
rolb
pop
xchg
jecxz
insb
mov
cli
fsubrl
xchg
ret
and
or
stc
or
pop
dec
ljmp
ds
inc
ret
adc
xor
xlat
lret
sub
aad
push
daa
xchg
or
mov
adcb
cmpsl
ljmp
std
push
scas
in
lret
daa
adc
mov
sub
sub
lret
xor
dec
daa
xor
arpl
or
iret
out
add
std
enter
xor
addr16
cmpsl
mov
fdivp
imul
add
jbe
xchg
sbb
std
mov
mov
pop
sahf
or
loope
add
pop
push
aas
pop
jmp
jecxz
mov
mov
rclb
movsl
gs
mov
ss
hlt
xchg
jecxz
push
pop
adc
adc
lahf
mov
mov
push
cmp
sahf
mov
adc
push
adc
lret
xchg
mov
sti
mov
push
or
xor
icebp
pop
mov
dec
xchg
add
int3
pusha
shrb
mov
in
xor
clc
mov
mov
jecxz
push
ret
ret
cmpb
mov
out
lcall
lret
sbb
adc
test
mov
int3
pop
push
and
insb
pop
addr16
stos
cwtl
or
adc
cltd
call
mov
lret
jge
or
lret
mov
xchg
fcmovu
mov
inc
mov
nop
shl
popl
aad
mov
lcall
adc
nop
pop
adc
sub
std
in
jno
outsl
inc
cmp
jae
push
push
xor
or
repnz
aaa
add
pushf
mov
pop
sub
jb
lods
insl
pop
sbb
adc
pop
xchg
fwait
cmp
or
cld
sbb
inc
minps
fdiv
mov
int3
nop
and
jg
pop
insl
enter
in
add
subl
push
andb
push
inc
and
cmpsb
dec
jo
or
jns
push
dec
movsl
out
adc
idivb
es
sbb
and
mov
arpl
pop
dec
test
sbb
fimull
aaa
pop
ror
icebp
push
or
mov
test
push
cmp
pushf
insl
ret
aad
inc
insl
adc
jb
pop
mov
pop
popa
mov
iret
push
mov
adcb
lcall
xchg
fists
sbb
jle
ljmp
lret
lret
pop
in
mov
repz
loopne
sarb
jb
int3
call
lods
inc
xchg
cmp
inc
sbb
nop
and
adcb
add
mov
lods
fsubl
mov
sti
pushf
pop
lcall
jb
push
sub
or
sub
lret
sahf
jge
out
inc
mov
sub
loopne
out
xor
jg
xchg
mov
hlt
push
test
pusha
in
mov
dec
adc
fcmovne
or
push
push
ror
adc
scas
out
in
stc
mov
mov
jnp
xlat
rclb
push
and
mov
stos
loop
aad
sbb
mov
in
test
cmc
in
loope
pop
test
jmp
inc
andps
sbb
mov
daa
imull
xchg
loop
mov
rolb
shlb
cwtl
nop
xchg
pop
dec
shrb
xchg
jnp
push
xchg
lods
lcall
test
mov
pushf
dec
cmp
test
push
popf
push
mov
or
mov
jns
pop
jp
sub
popl
push
pop
push
stos
shr
je
add
push
mov
push
pop
cmc
icebp
ds
inc
movsb
mov
clc
pusha
leave
std
push
mov
push
dec
std
add
push
mov
ret
dec
mov
call
xchg
int3
inc
sub
xor
mov
imull
mov
rorl
jns
mov
rcll
cli
push
cltd
sbb
inc
jle
scas
fistpl
into
xchg
or
xchg
xor
movsb
data16
push
jae
pop
rcr
mov
sub
pop
loopne
les
xor
rcr
pop
mov
inc
fs
add
xchg
jecxz
mov
push
and
adc
fnstcw
xor
jae
in
ret
xor
jmp
int3
out
add
xchg
lods
jmp
jecxz
xor
xchg
xor
jecxz
lods
sbb
push
inc
cld
or
sar
jp
repnz
sub
jo
paddsw
cmp
iret
in
push
ja
or
ds
inc
xor
add
idivb
xchg
push
xlat
adc
rol
out
mov
cld
sbb
popa
xor
or
mov
cmpl
enter
xor
repnz
and
sub
movsl
test
in
mov
repnz
mov
cwtl
int
cld
clc
add
ljmp
pushl
test
out
shlb
es
mov
xchg
shlb
enter
dec
jo
shlb
int
push
adc
outsl
cmp
pusha
lock
repnz
shl
xchg
inc
test
loop
scas
cltd
scas
notb
mov
push
fcoms
pop
push
sub
pop
ljmp
int3
jge
sub
and
call
or
dec
push
add
cmpsb
mov
call
imul
sbbl
lret
add
pop
sarb
sahf
dec
add
jb
lods
stos
dec
mov
adc
xchg
add
mov
pusha
mov
scas
fildll
loopne
jno
cmp
lea
adc
push
adc
imul
repz
enter
mov
pushf
jp
dec
cltd
mov
pop
jecxz
pop
test
sub
cmp
and
negl
jge
lret
mov
les
das
jne
fstpl
push
addr16
test
pop
cmp
add
jmp
xchg
gs
cmp
mov
repnz
jae
cmp
cmp
xchg
jp
jecxz
scas
lods
fisttpl
pop
or
xchg
dec
rep
cmpl
std
pop
and
adc
ret
lods
mov
add
mov
je
mov
push
add
test
in
pop
cmp
into
xchg
outsb
fcmovnbe
cmp
inc
movsb
aas
leave
pop
test
dec
cli
fisubrl
mov
shll
push
popa
loop
cwtl
jge
inc
cmp
sub
lods
dec
ss
xor
fldcw
frstor
inc
jo
inc
test
xlat
jl
cmc
pop
sub
mov
ss
mov
sahf
shll
stos
mov
inc
fs
mov
ja
pop
push
adc
iret
mov
adc
scas
cmc
test
stc
add
add
lods
jg
pusha
cmpsb
mov
pminsw
dec
in
xor
addb
and
adc
ss
push
lods
es
mov
lret
cmp
stos
sbb
out
jl
push
xchg
pop
and
and
push
add
cltd
ljmp
les
xchg
adc
leave
mov
sti
xchg
addl
mov
mov
mov
xchg
cmp
ficoms
mov
dec
fsub
xchg
dec
aam
xchg
fimull
jecxz
es
pushf
js
movsl
lds
mov
jno
lret
or
sarl
jmp
dec
mov
stc
sub
icebp
xor
xchg
cmp
testb
pop
bound
xor
mov
addr16
insb
rolb
je
jge
cld
das
shl
repnz
push
sbb
imul
cmp
sub
ds
dec
jg
push
fisubs
fcoms
sahf
icebp
add
xchg
les
and
dec
lret
inc
aam
lcall
xlat
lods
jmp
shll
and
loope
fs
sahf
stc
mov
test
mov
sbb
push
sub
bound
mov
lahf
movsb
or
fs
push
movnti
fs
inc
das
mov
pop
inc
paddusw
cmp
mov
pop
mov
repnz
sub
fnstsw
lcall
mov
fisttpll
xor
jo
dec
sbb
pop
paddd
std
fstps
inc
push
jne
aam
mov
fistpll
push
std
rcll
jbe
push
call
mov
xchg
mov
movb
cmpsb
in
sbb
jge
inc
mov
mov
cmpsb
daa
outsb
jns
cmp
in
sbb
inc
bound
popf
cwtl
and
scas
jae
and
insl
lret
clc
pop
sbb
inc
sbb
fnstsw
push
cmp
test
dec
lahf
jle,pt
ss
jge
pop
xor
and
xor
push
xchg
inc
in
push
mov
stos
or
dec
mov
mov
test
aaa
std
push
lock
push
cli
sbbw
pop
clc
cld
loope
mov
xor
cmp
in
test
jl
sub
adc
pop
dec
hlt
adc
mov
scas
shll
push
jle
repnz
lret
or
js
in
xchg
fimuls
jne
sbb
fsubs
push
out
popa
test
and
push
sub
enter
xchg
out
xor
sub
jp
or
sahf
xchg
scas
mov
dec
adc
je
js
in
jl
pop
push
fsts
pop
addl
sbb
xchg
mov
shrl
jp
pop
jecxz
je
jge
fists
lret
xchg
add
mov
sbb
ffreep
repnz
cmpsb
mov
mov
cwtl
inc
movsb
je,pt
lods
out
mov
inc
scas
pop
mov
mov
push
dec
mov
push
les
pop
shl
dec
mov
jp
das
mov
jne
test
and
push
inc
cmp
and
fcoml
sti
addl
push
sbb
sti
xor
and
subb
adc
stos
pop
xor
and
aad
ficoms
daa
cld
cs
int3
pop
adc
lcall
mov
andb
cli
xchg
jb
jle
addr16
insb
ss
rcll
dec
mov
test
adcb
or
jae
outsl
sarb
lods
stos
flds
loopne
jg
in
jle
sub
or
mov
jg
andb
outsl
aad
clc
outsl
iret
nop
push
lods
lods
loop
xor
fidivrs
dec
push
xchg
pop
lretw
mov
hlt
and
and
iret
pop
enter
je
mov
push
adc
inc
movsb
inc
fisubrs
fwait
add
hlt
jne
imul
jge
inc
mov
mov
leave
add
cmp
popf
cmp
pop
out
jne
adc
lods
scas
mov
mov
loope
cmp
xchg
cmc
push
insb
in
inc
mov
push
aas
rcll
mov
std
scas
lock
mov
inc
ret
pushf
call
icebp
mov
dec
xor
mov
inc
mov
lea
bound
std
ficompl
fdivl
hlt
jl
pop
stc
sub
ret
out
rep
or
add
pop
lock
fs
xor
xchg
push
shll
ss
scas
dec
scas
test
jg
in
aad
cltd
popa
sub
movsb
inc
xorb
in
xchg
in
push
inc
scas
ljmp
ja
add
andb
pop
in
jle
mov
jge
movsb
add
or
std
xchg
push
ljmp
push
sbb
bound
cmpsb
popf
lock
dec
mov
inc
out
lea
mov
imul
fisubl
inc
jno
adc
pop
fcmovu
pop
cmpsl
push
movsl
mov
lods
cwtl
inc
fwait
stc
jns
xor
shl
xchg
and
or
cltd
jbe
dec
mov
into
adc
or
xorl
out
mov
inc
jne
dec
xchg
fmulp
sub
les
rcrb
dec
lds
ja
arpl
fsub
sub
loope
inc
pop
aas
mov
mul
mov
stos
nop
add
pop
fcoml
xor
pushf
cmpsl
hlt
and
wbinvd
pop
push
pop
out
flds
sti
shl
push
xchg
fstpl
inc
jge
cltd
push
aad
adc
sahf
push
adc
outsl
pop
inc
dec
jae
mov
cmpsb
or
push
hlt
inc
loopne
cmpsl
pushf
jp
mov
fsub
xor
dec
mov
jo
sub
sub
xchg
hlt
jg
aaa
xchg
loopne
fcomp
es
pop
mov
test
cs
inc
adc
lcall
add
cwtl
push
mov
adc
repz
cmc
icebp
adcl
adc
dec
push
mov
lods
stos
inc
or
or
dec
aas
jmp
mov
ja
sub
sbb
pop
add
inc
push
enter
loopne
or
ret
cmp
fbstp
jo
mov
fcmovb
es
mov
test
pushf
mov
inc
add
add
or
cmp
jl
mov
pop
sub
clc
ss
push
mov
fidivrl
inc
inc
ret
test
xor
jmp
mov
mov
sbb
aad
jp
sbb
loopne
out
add
inc
sbb
cwtl
xor
mov
outsl
mov
cmp
jnp
imul
lret
jecxz
sti
mov
jle
jl
les
aas
mov
add
aaa
pop
add
gs
xchg
idivl
out
or
cmp
stos
mov
in
hlt
push
push
mov
popa
mov
jns
mov
xchg
pop
mov
aad
fcompp
xchg
add
xchg
push
mov
cmpsb
repnz
or
jo
add
aad
ja
stos
inc
sub
mov
cmp
in
out
sar
dec
incl
push
in
cmc
mov
arpl
mov
sbb
ljmp
arpl
and
loopne
aam
xchg
aas
inc
ljmp
int
insb
or
cli
ret
scas
call
ljmp
and
movsb
pop
pop
jp
dec
loopne
push
mov
pop
test
outsl
in
lods
gs
or
stc
lds
push
pop
arpl
in
or
shl
imul
popa
jns
jg
xchg
push
iret
pop
stos
inc
inc
add
mov
sbb
inc
movsb
scas
sub
mov
dec
fnstcw
mov
out
or
sub
hlt
filds
xor
push
lcall
cli
add
jmp
call
xor
xor
cs
insl
testb
pusha
out
data16
das
out
cmp
fiaddl
pop
out
cltd
pop
lret
mov
fimuls
xchg
sbbb
fs
lock
pushf
jge
jmp
mov
cltd
in
cmp
mov
pop
out
popa
hlt
push
repz
movsb
mov
movsb
push
movsl
fs
out
sbb
int
jnp
out
adc
xchg
cmp
fsub
push
xor
inc
jbe
pusha
lds
xchg
xchg
push
int3
jae
lcall
pop
fistl
es
push
add
movsb
mov
sub
xchg
sti
add
stc
xor
mov
dec
push
imul
sahf
sti
cs
into
movsb
jns
push
sti
testb
dec
mov
lds
push
xchg
popa
pop
xchg
repz
pop
xor
push
xorb
dec
aas
add
mov
imul
jge
lods
push
mov
nop
dec
jl
lds
jg
sbb
stc
add
fisubs
arpl
mov
ret
adc
sbb
pop
shll
push
aaa
out
test
sub
in
mov
decl
mov
lods
lcall
cmp
pop
stc
ret
ss
xchg
pop
push
je
xor
cmp
sti
in
enter
and
out
dec
fadds
ljmp
test
or
push
mov
daa
sub
lret
adcl
cmp
push
add
stos
sbb
xchg
out
jle
scas
adc
add
and
mov
pop
pop
roll
pushf
sbb
xlat
and
es
les
pop
mov
cmp
out
pop
xchg
ret
mov
cmpsb
lea
arpl
mov
xchg
push
inc
aam
rcrl
cwtl
mov
add
rol
sbb
sbb
jnp
insb
add
mov
in
push
pop
mov
jo
push
sahf
cmpsb
outsb
jns
sbb
add
push
nop
sbb
mov
mov
mov
pop
inc
adc
jp
sub
mov
faddl
std
xchg
jecxz
ds
mov
dec
pushl
lahf
clc
outsb
in
sahf
movntq
es
shlb
push
cmp
pop
aas
push
lods
in
jle
test
xchg
sarl
mov
das
cmp
das
sti
cmp
cmp
cmpsl
lods
cmp
mov
sbb
adc
sub
mov
fs
inc
cmp
pop
adc
loope
nop
push
loop
addr16
dec
and
cmp
jnp
mov
lods
cmc
arpl
adc
adc
shll
cltd
fdivrs
insl
pusha
push
out
adc
or
cs
mov
jmp
sub
xchg
jne
sbbl
add
les
sbb
ss
adc
sub
mov
stos
mov
inc
mov
xchg
daa
jmp
lds
ds
rolb
gs
dec
in
lods
test
and
add
loop
mov
cltd
repnz
imul
cltd
dec
frstor
outsl
sub
sub
cmp
or
xchg
notl
outsl
inc
push
cmpsl
adc
lret
cmpsb
fistl
adc
jae
adcb
std
jmp
cmp
xchg
jne
insb
mov
xor
test
mov
ss
jno
adc
jae
and
addl
lock
mov
push
inc
test
test
fdivl
adc
aam
insl
jmp
out
inc
sbbb
push
cld
repnz
mov
fidivrs
movsl
das
push
int
sahf
mov
cmc
loope
or
sbb
push
je
and
jmp
std
sub
adc
cli
ret
xchg
sbb
out
aam
call
add
cwtl
adc
mov
add
rclb
pop
sti
pop
ljmp
fsubrl
rorb
dec
orl
inc
movsl
sub
sbb
mov
mov
jmp
repz
add
sub
les
push
push
inc
pop
push
and
jmp
jnp
test
xadd
add
dec
dec
push
je
icebp
inc
add
dec
pop
push
and
pop
repnz
jo
jle
mov
and
mov
or
pop
movsb
in
sbbb
ljmp
cmp
push
push
loope
jp
adc
test
popf
rolb
fadd
divb
xor
mov
mov
flds
imul
xchg
jge
push
push
js
test
xlat
push
cmp
add
push
daa
inc
imull
ljmp
dec
dec
ret
popa
lea
jp
mov
push
icebp
test
xchg
xchg
lea
push
xchg
loope
icebp
mov
push
int3
push
fcompl
pop
pop
sar
add
cmpsb
jecxz
jecxz
icebp
iret
rcrb
mov
xchg
je
lds
sbb
and
push
pop
fwait
daa
dec
or
xorl
out
aaa
add
into
fprem
lock
out
and
test
adc
neg
dec
sbb
sub
aas
mov
or
xor
mov
xor
pop
and
movsl
push
cmpsl
icebp
mov
push
lods
xor
out
and
cmp
adc
cmp
inc
stos
add
iret
shlb
bound
add
cmpsl
stos
push
add
add
push
in
or
bound
negl
xor
mov
bound
sbb
jns
push
addl
outsl
and
push
data16
xor
fbld
push
mov
pop
addr16
pop
push
push
orb
dec
fbld
aam
cmpsl
adc
ficomps
fsubs
pop
stos
pop
in
popf
dec
fdivrs
and
pushf
xor
psubw
mov
call
mov
fwait
pushf
lea
cltd
and
sahf
imul
and
sti
clc
js
and
clc
int3
xchg
or
mov
jne
inc
sub
sbb
dec
hlt
push
push
lcall
out
or
lds
mov
push
jge
in
jle
lea
aad
aam
mov
pop
xor
ror
fisttpl
aas
insl
stos
xchg
push
ja
fs
push
movsl
arpl
inc
jnp
lods
bound
mov
ljmp
sbb
call
stos
adc
and
rcr
adc
xor
dec
std
mov
into
fdivrl
inc
ret
loopne
sbb
leave
out
or
sub
mov
dec
lea
out
mov
shrl
xlat
js
jns
inc
cli
dec
imull
fwait
out
dec
mov
add
adc
jg
pusha
or
fwait
aad
lock
frstor
push
loopne
lret
xor
pop
pop
push
aam
inc
lahf
add
nop
sub
enter
sti
sbb
pop
aaa
pop
ja
sbb
test
inc
and
xor
ja
test
xchg
fs
out
enter
pop
inc
cli
cmpsl
pop
pop
xchg
xchg
mov
mov
scas
repnz
fildl
and
loop
jge
rol
cltd
les
aas
shrl
scas
nop
rorb
jl
sub
push
out
ja
and
mov
cmp
adc
fdivl
stc
lea
and
shll
push
mov
xor
cmpsb
pop
xlat
cmpsl
lds
lahf
rorl
sbb
pop
add
push
fwait
loope
mov
add
push
sbb
xchg
dec
divl
pop
cmp
mov
add
test
mov
dec
pop
mov
mov
icebp
mov
leave
jb
sub
xor
ret
xlat
jl
pop
mov
or
ljmp
dec
mov
subl
stc
jl
push
sarb
and
mov
pop
es
and
xor
rolb
xchg
adc
mov
fistl
or
lret
mov
sbb
mov
mull
cwtl
ret
mov
and
or
add
out
cwtl
fdivrs
inc
cmp
or
mov
fiaddl
mov
add
test
cmpsb
push
xchg
nop
mov
cli
push
sub
enter
fnsetpm(287
sub
rcrl
cld
or
cs
cmpsl
aaa
push
push
sbb
pslld
pop
mov
cmp
aam
in
pop
add
and
fwait
xchg
fs
mov
push
sub
rolb
push
push
arpl
xchg
mov
push
insl
mov
js
mov
loop
mov
mov
pop
jb
xor
mov
imul
enter
sub
roll
adc
pop
mov
pop
daa
add
xchg
repnz
inc
negb
dec
lahf
sbbb
mov
shlb
test
or
push
sahf
mov
cmp
sbb
cwtl
into
pop
rcrl
sahf
mov
mov
mov
push
jl
fs
out
pusha
mov
loopne
mov
adc
ss
dec
mov
loopne
dec
or
movsb
and
cmpsl
movl
inc
dec
xchg
lea
jmp
sbb
inc
dec
fbstp
sbb
jb
in
or
sub
push
push
and
aaa
pop
loope
mov
mov
ljmp
inc
push
or
pop
test
fsubrs
loop
shrb
fs
push
cmp
or
imul
xchg
mov
sbb
mov
addb
xor
xchg
mov
imul
adc
mov
mov
fidivl
pushw
jo
test
in
fbstp
das
xor
fisubrs
adc
jle
and
std
and
stos
sub
mov
lahf
pop
push
sbb
dec
xchg
mov
hlt
xor
mov
and
or
xor
out
jne
test
ja
mov
xor
into
push
scas
ret
in
sbb
in
jno
jg
xor
gs
push
cmp
fwait
lret
sbb
int
stos
ljmp
std
out
add
dec
xchg
jle
mov
test
stc
jns
fldt
mov
sbb
jmp
fisubrs
mov
mov
push
xor
dec
pop
pop
inc
pop
outsb
or
lds
mov
fistpl
into
add
xchg
sub
or
xor
cmpsl
clc
test
or
dec
ja
xlat
sbb
push
movsl
add
mov
pop
mov
mov
adc
mov
hlt
sub
cmp
ds
ja
mov
rclb
mov
and
mov
das
je
lea
sahf
out
dec
mov
fucom
mov
int
cmpl
cli
hlt
mov
out
sbb
adc
scas
lahf
xchg
adc
or
out
or
inc
fincstp
jg
or
push
das
and
lcall
ljmp
mov
add
pusha
xchg
sbb
out
test
mov
cmp
xchg
iret
mov
pop
xchg
jno
pop
cmp
movsl
jno
inc
or
insb
movsl
test
pop
jae
aam
mov
in
addl
inc
orl
mov
sub
push
dec
imul
sub
jae
mov
and
mov
in
shl
sar
xor
jbe
aad
mov
enter
dec
dec
xor
mov
add
sbbl
inc
cmc
push
pop
dec
int
arpl
sbb
out
jae
and
lods
loopne
jp
add
stc
xchg
xor
loop
pop
jg
mov
push
push
rcll
adc
pop
in
mov
fcomp
sub
lahf
jle
pop
cmp
out
sti
jo
sbb
cltd
loopne
inc
or
push
cs
push
cmpsb
ljmp
popa
inc
or
rcll
das
adc
mov
rorl
pop
ret
adc
out
mov
lahf
std
test
xchg
leave
jmp
sub
pop
leave
xchg
sbb
and
and
pushf
popl
inc
iret
mov
sub
movsl
inc
sbbl
sahf
xor
jle
jl
dec
adc
sub
push
jbe
cltd
add
sbb
inc
mov
cmp
std
xor
cmp
iret
jecxz
xchg
mov
and
and
jge
test
cmp
mov
mov
mov
cmp
test
xor
rcrb
push
push
leave
and
sub
leave
jbe
dec
or
pop
add
nop
xor
dec
push
push
rorb
jecxz
cld
addb
ja
add
fs
lock
adc
in
push
dec
aaa
sub
push
pop
lea
mov
mov
loopne
test
ret
sbb
addb
push
ja
movsb
sub
and
sbb
jb
repz
addr16
mov
mov
add
cmp
mov
cli
std
aam
pushf
or
fistpll
and
push
push
imul
scas
outsl
lods
and
subb
cmpsl
jge
lock
cmp
pusha
lcall
sbb
out
cs
in
mov
cmp
ljmp
sub
adc
jno
movsb
repnz
loope
sub
cmp
cmp
sbb
add
push
scas
insb
or
xchg
mov
mov
jae
jbe
inc
je
icebp
cmpb
jne
cmpsl
pushl
and
mov
sbb
mov
in
js
mov
mov
pop
pushf
pushf
jb
in
sbb
nop
mov
in
inc
popf
into
lahf
imulb
into
pop
inc
add
in
fcoms
stos
aad
push
and
add
hlt
popf
pop
and
loopne
clc
sub
rclb
or
ficoms
pusha
test
lock
popf
inc
push
jb
cmp
cmp
inc
sub
je
xor
loop
cltd
jns
arpl
sti
lods
adc
aaa
mov
fwait
or
push
lds
mov
popa
adc
pop
add
xchg
stos
mov
pop
pop
xor
cmp
lea
xchg
sub
nop
outsl
les
sub
aaa
inc
std
xchg
pushf
shrl
aad
xor
xlat
div
adc
dec
andl
aad
in
int3
lock
inc
mov
bound
test
jbe
jmp
jp
sbb
add
cmp
js
mov
es
sub
cwtl
add
adc
fsubr
in
insb
inc
cld
hlt
nop
sbb
push
jnp
cmp
dec
std
ret
dec
addr16
mov
roll
dec
outsb
xor
fwait
and
or
mov
jp
shll
gs
push
pop
loop
cmp
ds
sbb
pop
inc
mov
faddl
push
xchg
out
movsb
lcall
xchg
out
outsl
outsl
push
outsl
rcrl
ss
mov
inc
ret
call
fbld
push
sub
sbb
pop
imul
jmp
and
jo
pop
divb
xchg
xor
fwait
or
in
mull
mov
popa
call
icebp
push
and
clc
cs
cmp
jae
and
sbb
shlb
adc
lret
xchg
inc
and
xor
or
jmp
das
sbb
xor
test
xchg
in
xchg
and
movsb
cmovle
rorl
push
mov
jg
inc
dec
iret
mov
sbb
in
test
jno
es
pushf
sahf
js
mov
xlat
daa
mov
cmpsb
and
push
movsb
ja
sbb
jecxz
sub
jne
out
add
xchg
or
daa
inc
mov
dec
out
push
std
aas
aam
or
jne
adc
push
jno
mov
lahf
mov
jb
std
or
lahf
insb
loop
sub
stos
jno
dec
pushl
ret
xchg
ss
movsb
xor
xor
pop
jp
test
popf
sub
mov
mov
mov
aad
push
outsl
jg
test
push
sbb
in
out
pop
dec
sub
xchg
not
adc
nop
or
aaa
idivl
adc
adcb
xchg
mov
rol
orl
rcrb
jns
inc
xor
mov
mov
sbb
sub
add
xlat
mov
fidivs
xchg
movsl
fmul
shlb
or
add
imul
push
sub
jecxz
or
adc
shrl
cltd
add
lds
pop
fcmovbe
mov
mov
shll
lret
jle
mov
out
movsb
loopne
cwtl
add
jo
loop
push
adc
mov
sub
fildl
xchg
es
jp
cmc
inc
pop
lock
and
cmp
mov
cmc
imulb
push
mov
dec
fwait
gs
xchg
pop
aas
insl
and
cmp
jmp
cmp
aas
xchg
jno
pop
xor
mov
bsr
cs
orl
xchg
out
mov
dec
push
mov
pop
out
and
sub
push
sub
mov
aam
xor
pop
ficoms
jne
stos
pushf
add
cmp
lcallw
mov
add
pop
adc
add
push
ja
mov
add
xor
inc
add
subb
push
cmp
shll
ret
jns
aas
aaa
js
sbb
and
add
mov
or
pop
xchg
mov
lahf
mov
sbb
fstpl
pop
ficompl
mov
mov
add
int3
inc
xchg
jno
in
loopne
xor
clc
out
xchg
fstpt
cmp
imul
inc
movl
or
fdivr
add
mov
lcall
push
into
into
mov
notb
rcrl
data16
shll
in
and
mov
mov
cmc
mov
in
pop
adcb
andl
in
mov
sub
push
cli
mov
out
fstps
cld
pop
lret
loop
jp
js
push
jp
dec
inc
pop
lds
push
push
or
mov
push
and
in
movsb
jns
mov
scas
ss
lret
inc
dec
into
hlt
xor
mov
sub
pop
inc
addr16
lods
cs
cltd
mov
adc
inc
inc
test
in
jmp
jae
push
jmp
mov
sti
mov
pop
jnp
movsl
add
pop
es
pop
test
pop
test
lcall
xchg
idivb
mov
ds
pop
sbb
mov
das
inc
sbb
mov
xchg
aam
jnp
aaa
fisubrs
jnp
rcrb
sub
out
push
pop
inc
aaa
dec
movb
fnstcw
sti
push
mov
aas
repz
iret
aad
sbb
aas
mov
iret
xchg
imul
scas
rclb
add
push
or
push
mov
call
cwtl
push
scas
enter
sar
repz
lret
hlt
and
xlat
push
and
lahf
jp
fadds
cmpb
mov
cli
push
pop
mov
cltd
cmp
cmp
mov
loopne
outsl
jne
pop
mov
mov
push
fistps
cmp
pop
mov
dec
mov
cmpsb
cmpsb
mov
mov
jle
addl
mov
std
mov
fcmovu
enter
pop
scas
aam
sbb
mov
sarl
adc
ljmp
push
clc
inc
add
mov
icebp
adc
mov
cld
add
mov
mov
fsub
xor
sub
pusha
nop
sub
and
push
std
popf
scas
xchg
xchg
mov
std
stos
push
pop
popf
mov
mov
es
add
rcrl
data16
adc
mov
test
push
jecxz
movsb
insl
sbb
add
popf
pop
lock
jmp
push
mov
mov
add
sbb
sahf
mov
fwait
cmpsl
out
inc
jae
ret
inc
sahf
mov
cmc
jp
sub
sub
ja
test
dec
sbb
sub
in
cmp
xorps
push
mov
lcall
or
call
or
hlt
insb
or
and
push
mov
mov
hlt
pop
hlt
jl
add
push
js
out
mov
adc
add
orb
fsub
xchg
inc
xchg
jne
add
inc
sub
xor
xor
dec
and
jecxz
push
orl
add
mov
hlt
lea
add
pop
xchg
ret
stos
je
int
inc
frstor
xchg
shll
rol
jp
in
sbb
lods
or
mov
sub
cli
push
push
in
xor
cmp
stc
fdivrs
mov
dec
xchg
xlat
and
jle
into
xor
adc
in
or
mov
gs
add
cmc
pop
xchg
sbb
not
cltd
adc
lds
dec
mov
call
gs
inc
jns
sti
stos
fbstp
lds
push
pop
dec
xchg
and
push
repz
mov
jb
dec
je
call
ja
aas
icebp
mov
pushf
lcall
jbe
rcrl
xchg
adcl
adc
or
in
sub
jecxz
lret
cltd
xor
push
roll
or
mov
mov
imul
arpl
scas
push
sbb
into
inc
insl
dec
ds
push
lock
push
or
push
mov
jl
jnp
or
stos
xchg
fistpll
std
xor
aaa
cmp
out
sbb
lds
pop
rcll
fs
mov
imul
inc
out
dec
mov
cmp
stos
mov
dec
stos
and
lret
jecxz
mov
add
pop
adc
pop
aam
shrl
push
inc
pushf
xchg
fldenv
push
xchg
cmc
add
lods
lret
fadds
pop
adc
xchg
xchg
out
ljmp
ret
orl
adc
mov
div
jb
mov
jecxz
mov
mov
push
es
negl
pop
or
faddl
adc
inc
mov
xchg
xor
cmp
bound
pop
cld
aad
scas
mov
fwait
cwtl
and
outsl
xchg
cmpb
mov
sbb
es
fsubrs
inc
mov
cmp
clc
jnp
mov
test
sbb
mov
or
mov
jl
sub
pop
xchg
les
movsb
rorl
inc
ret
je
xchg
outsl
cmpsl
sarb
sub
mov
jp
mov
insl
aad
mov
dec
inc
imul
je
dec
pop
lahf
xchg
mov
xchg
sbb
xor
push
mov
pop
movsb
dec
jns
subb
ds
sub
leave
pusha
aam
jl
cmp
scas
shlb
je
sub
mov
fistps
addr16
adc
fwait
add
insl
mov
xchg
xor
je
pop
repz
push
inc
mov
nop
stos
test
xchg
pop
cld
into
pusha
aaa
mov
lock
xchg
insl
daa
xchg
push
jnp
xchg
xor
rcr
add
adc
nop
pop
xlat
sarl
push
or
stos
rcrl
cs
iret
stos
and
popf
pop
cmpsb
ret
sbbl
out
test
test
jle
subl
xchg
es
movsb
push
insl
mov
mov
inc
addr16
filds
call
lret
pop
pop
hlt
add
push
push
outsb
sbb
xor
fs
dec
jmp
mov
pop
mov
mov
cmp
inc
insb
inc
mov
inc
je
or
arpl
fcoml
cld
pop
mov
cmp
data16
loop
push
mov
jp
pop
loope
mov
mov
mov
jle
aaa
adc
and
imul
push
sub
ss
ss
xchg
fwait
arpl
out
popa
call
jbe
and
jmp
mov
out
stos
mov
pop
inc
into
repnz
and
lret
mulb
or
cs
inc
iret
and
das
mov
mov
std
mov
sub
pushf
and
popf
ret
scas
dec
outsb
lcall
mov
imul
sbb
cmpsl
cmp
push
mov
in
lret
mov
jp
sub
and
mov
into
in
shll
jns
loopne
push
stos
pushf
fisubl
loopne
push
fnclex
adc
insb
or
mov
notb
cmp
flds
sub
xchg
add
in
sbbb
xchg
push
lahf
jb
jnp
int
pop
push
xor
cmp
imull
or
xchg
cmp
jns
insb
push
call
in
push
xor
cmp
and
in
je
push
jl
les
pop
add
fisttpl
xchg
cmp
mov
jp
push
outsb
push
pop
cs
loopne
cwtl
sub
push
fdivrl
cli
sti
xlat
js
xchg
jmp
addr16
mov
jg
xchg
sbb
stos
movsb
ja
fildl
inc
shrl
pop
add
pushf
sub
xchg
out
push
pop
outsb
push
push
outsb
sbb
cmp
push
imulb
jle
sbbl
adc
scas
mov
mov
imul
setne
push
xorl
iret
lret
mov
mov
arpl
popf
aad
cmpl
lods
movsl
xor
fs
dec
mov
push
lods
movsb
cld
jns
push
inc
cmpsb
dec
mov
das
orl
cwtl
and
or
or
xor
sub
out
push
and
jge
cmp
call
loopne
imul
dec
inc
sahf
pop
mov
iret
push
jg
xchg
sub
popa
cmc
imul
jno
insb
ficompl
cmpsb
sub
sub
cwtl
nop
add
cmc
adc
mov
fisubrs
jne
popa
sub
pop
sbb
xchg
in
push
inc
push
jge
push
ud1
imul
pop
sub
out
out
mov
mov
bound
dec
mov
int
arpl
jecxz
push
pop
fs
insb
data16
jb
add
incb
push
mov
xchg
loopne
adc
clc
stos
adc
jns
mul
sti
pusha
and
lret
pop
mov
fidivrl
insl
xchg
push
out
movsb
mov
adc
add
fsts
lahf
and
pop
sub
hlt
xor
out
adc
aam
fwait
nop
inc
jns
stc
in
sbb
arpl
lcall
pop
cld
jae
lret
stc
cmp
or
xchg
sub
and
or
cmp
mov
pop
lret
ljmp
lods
das
or
adc
jecxz
mov
sbb
cmp
cs
push
xor
lea
xchg
mov
xchg
mov
mov
ja
stc
repz
push
in
dec
jl
in
sbb
sahf
jge
xlat
mov
jns
int3
pusha
sub
mov
ret
lods
inc
mov
mov
push
push
mov
cmp
loop
sbb
sahf
ljmp
addr16
add
push
or
out
sbb
or
xor
imul
sarb
ljmp
jno
sub
mov
ljmp
inc
movsb
mov
loope
xlat
mov
jp
xor
pushf
inc
mov
sub
sub
mov
scas
inc
in
fwait
pop
lds
or
jbe
jns
lret
out
outsl
ljmp
push
add
fldenv
xchg
adc
pop
inc
mov
aaa
adc
sbb
shll
inc
xor
enter
mov
dec
in
shr
mov
fisttpll
mov
arpl
xchg
sub
negl
es
dec
mov
push
inc
push
cmpb
push
clc
cs
popa
sarl
bound
xor
cltd
adc
mov
xor
rcl
dec
push
fsubrl
lock
mov
jne
sub
outsl
out
adc
cmp
xchg
daa
push
loope
movsb
nop
cld
test
add
shrb
adc
pushl
or
mov
ret
rcrl
inc
out
dec
xchg
ret
cmpsl
pusha
sub
push
cmp
cmpsl
push
test
ljmp
mov
and
movl
sbb
mov
insb
insl
rolb
xchg
xor
scas
jmp
aad
and
cmp
dec
dec
insb
int3
das
dec
jne
cmp
test
xchg
push
xchg
sbb
rcl
insl
inc
shrl
inc
push
push
pop
inc
fidivrl
push
cld
xor
adc
stc
xlat
sub
call
and
stos
xor
nop
out
xchg
mov
ret
sahf
jle
jno
mov
fbstp
inc
movsb
cmp
repz
mov
add
scas
inc
cmpsl
mov
sub
xchg
inc
push
and
add
les
out
je
in
push
mov
ds
sub
fcoml
mov
and
scas
mov
cld
jno
push
inc
pop
ds
jae
cmp
lret
pop
insb
lods
dec
shl
xchg
mov
inc
add
jbe
mov
xchg
or
or
in
push
sbbl
das
jae
xchg
fcomps
mov
int3
je
ljmp
and
mov
and
jp
push
adc
fistpl
pop
in
fdivs
cmp
jg
sub
and
cmpsb
adc
dec
paddw
mov
out
fildl
jmp
iret
lcall
data16
enter
mov
or
pop
cmp
inc
and
clc
push
stos
insb
repnz
jns
cmc
adc
in
ds
xor
decl
cmp
popa
mov
sub
les
lret
aas
and
xchg
enter
mov
sub
xchg
jnp
mov
movsl
xchg
gs
pop
push
adc
fwait
jl
js
and
or
out
aad
add
std
sbb
out
aam
xor
aam
and
dec
popf
mov
popf
push
dec
and
xchg
cmp
xor
mov
sub
call
nop
pop
jp
aad
js
lret
cmp
shrb
cli
outsb
sbb
xor
push
pop
ret
test
xchg
in
add
shll
mov
repnz
dec
subl
sub
cmp
and
inc
or
popa
mov
push
adc
ret
in
cli
or
scas
mov
mov
adc
fwait
pop
movsb
mov
sub
mov
adc
or
mov
jg
aam
mov
and
pop
sbb
push
push
sub
push
lds
ja
sar
add
mov
jg
push
ss
out
std
sbb
jmp
xor
cmpsb
sub
push
jae
xchg
insb
sbb
leave
std
push
cltd
jg
inc
and
inc
shll
jo
mov
mov
addb
mov
movsl
scas
movsl
scas
sbb
stos
fidivrs
mov
in
icebp
add
ret
push
out
push
mov
sbb
lea
sub
sub
dec
fs
gs
test
mov
inc
jbe
sbb
stos
ss
lahf
push
lret
sahf
arpl
aam
sbb
xchg
xchg
push
mov
pop
loopne
mov
dec
cmpsb
out
mov
mov
mov
lods
lods
repnz
xchg
push
aam
cld
roll
nop
jae
mov
mov
pusha
addl
and
and
xor
add
rolb
xchg
push
add
lcall
and
and
pcmpeqb
pusha
or
push
lret
movsl
mov
clc
loope
popf
jo
lds
sub
daa
ds
or
push
sub
pop
and
sub
pushl
subl
rclb
add
jae
sub
scas
fstps
push
push
mov
stc
and
fwait
pop
cmp
add
dec
xchg
notl
shll
mov
icebp
push
loop
mov
shl
and
call
jnp
in
daa
mov
out
pop
or
cmp
dec
inc
dec
aad
cmc
inc
lret
jb
arpl
xor
es
cmpsb
cmc
adc
pop
repz
pop
cli
incb
dec
inc
repz
xor
xchg
je
push
aaa
xor
leave
ljmp
roll
stc
out
imul
in
es
cmp
push
cmp
clc
cmp
insl
aaa
lods
pop
jne
jp
sub
pop
push
jmp
inc
sub
push
mull
xchg
sbb
lods
sti
pop
jbe
mov
xchg
xor
xor
jecxz
sbb
stos
fldcw
and
cmove
hlt
mov
sti
mov
cmp
pusha
xor
rclb
and
icebp
ss
cmp
rcll
and
cwtl
insl
ret
sar
cli
loop
ja
xor
xor
lcall
lock
popf
mov
stc
imul
mov
icebp
and
out
pushf
aam
adc
into
mov
neg
ret
scas
cmp
fmul
icebp
shlb
ljmp
stos
add
bound
lods
xor
xlat
xor
int3
pop
in
jmp
xor
aam
mov
lock
push
and
stc
mov
out
inc
push
dec
in
imul
movsl
and
xor
ds
stos
aaa
js
ret
mov
mov
mov
lcall
jp
xchg
push
push
mov
std
push
mov
pop
jno
adc
dec
test
hlt
aas
jp
ss
std
xchg
popa
xchg
out
pop
int
scas
icebp
les
cmp
mov
cs
add
push
jne
and
dec
mov
mov
pop
mov
inc
xor
cmpsb
pop
add
int3
xor
repnz
or
pop
fcoms
dec
test
push
or
or
and
and
enter
inc
clc
mov
dec
hlt
jbe
andl
ret
incl
stos
sarb
into
mov
movsl
adc
mov
enter
leave
jmp
fidivrl
imul
pop
cwtl
dec
insl
loop
and
cwtl
and
add
lret
mov
mov
push
lock
loopne
in
enter
movsb
mov
mov
mov
mov
aam
adc
pop
inc
push
xchg
push
arpl
mov
shll
mov
sar
sub
mov
fnstsw
push
cmp
push
adc
movsl
and
loopne
mov
add
cmp
pop
sbb
mov
xchg
shlb
pop
ror
mov
loop
cmc
jmp
jl
xchg
sbb
fstpl
push
outsb
xchg
fwait
and
jno
sub
js
xor
cmp
dec
add
pop
sbb
pop
mov
sbb
xchg
lods
sub
cmp
jns
faddl
and
xchg
mov
shll
push
jno
cli
pop
and
ret
rcrb
iret
mov
pop
dec
sti
fwait
pop
jmp
mov
mov
fadds
fsubrl
lret
stos
scas
pusha
rolb
in
inc
or
xchg
jge
pop
pushf
push
aaa
out
mov
aaa
push
int
shlb
xchg
shlb
sub
mov
xor
or
mov
and
mov
inc
shlb
aas
mov
sarl
mov
bound
arpl
mov
sbb
mov
popf
pop
sahf
enter
lcall
mov
add
bound
adc
sbb
inc
dec
push
cmp
test
leave
xchg
xchg
jbe
xchg
or
push
arpl
movsb
jmp
cmpsl
stc
lock
lods
sub
sub
mov
add
fimull
or
cmc
insb
lds
in
dec
push
mov
iret
sbb
xchg
mov
mov
mov
xchg
aas
jno
xchg
xchg
outsl
xlat
in
sbb
iret
sub
push
cs
orl
scas
sbb
shr
sbbl
fwait
inc
leave
shll
imul
or
mov
insl
mov
mov
dec
jae
mov
sub
sarb
cld
flds
push
es
loop
ret
bound
jae
pop
filds
fidivs
out
push
mov
nop
lcall
and
mov
push
lods
in
xchg
and
push
xor
pop
push
movsb
ret
insb
adc
dec
lcall
enter
mov
cmp
test
cmpsb
push
cld
sub
adc
inc
jbe
int3
sub
mov
mov
adc
sbb
pop
inc
sti
inc
inc
popf
xchg
mov
inc
ficoml
pop
jo
and
ret
outsl
imul
mov
arpl
fdivs
pop
mov
or
insb
mov
test
fisttpl
sbb
ret
xchg
nop
add
call
inc
test
inc
inc
loopne
adc
fcompl
arpl
icebp
call
test
mov
cltd
pusha
rolb
add
ret
test
bnd
inc
lret
mov
sbb
fmuls
pushf
jmp
ficoml
push
lea
mov
add
mov
into
xchg
jae
or
sub
xchg
mov
icebp
test
aad
popf
cmpsl
fisubl
out
lret
sub
fidivs
and
mov
sahf
pop
rcll
inc
addr16
fnsave
aad
or
jno,pt
outsb
stos
cld
dec
orl
jns
stos
jge
mov
jg
adc
adc
stos
add
xchg
popa
das
mov
popf
inc
nop
mov
jns
into
cmp
jecxz,pt
jg
mov
adc
lea
pop
stos
into
sbb
jb
inc
inc
cs
addl
add
hlt
sub
push
loopne
addr16
std
ss
push
mov
and
repnz
lds
repz
mov
loopne
xchg
adc
daa
aaa
repz
addr16
out
and
pop
pop
fistpll
mov
daa
aam
adc
pop
outsl
les
int
cltd
jae
aas
xor
dec
loopne
mov
lods
cs
pop
push
mov
adcb
add
mov
shlb
dec
arpl
icebp
lret
cltd
testb
lods
int
jb
mov
xor
xchg
or
lret
in
xchg
addr16
push
jo
in
push
popa
lcall
pop
cs
mov
or
cs
fadds
lea
mov
icebp
incb
adc
mov
shl
out
aas
jmp
pusha
add
push
sbb
fildl
jae
test
inc
pop
sti
insb
pop
inc
leave
mov
and
mov
ret
inc
jno
shlb
xchg
inc
jecxz
andnps
aam
hlt
xchg
jmp
or
jl
xor
mov
mov
ja
pushfw
loop
or
movsl
xor
inc
sub
mov
jnp
pop
loopne
cld
loope
xchg
out
mov
mov
push
ficoml
mov
xor
fisttps
pop
frstor
outsl
pop
in
sub
icebp
adc
in
iret
xchg
push
inc
loop
dec
xchg
push
mov
adc
mov
ds
cs
mull
leave
divl
cmc
gs
push
and
movsl
jl
xlat
cmpsl
adc
push
hlt
jmp
fnsave
fs
xor
mov
cmp
clc
sub
jmp
sub
loopne
and
popa
pop
vsqrtsd
push
xor
outsl
test
cmp
cltd
and
mov
xchg
push
push
jb
xchg
loop
idivb
out
jl
xchg
inc
loop
clc
mov
jne
ds
lret
arpl
mov
leave
ljmp
dec
lock
sbb
inc
dec
fs
rclb
adc
xor
adc
sbb
xor
mov
sbb
inc
xchg
mov
inc
and
sbb
jns
cld
mov
movb
xchg
mov
test
inc
pop
lret
pusha
dec
fcoms
stos
sti
push
loope
dec
add
mov
loop
or
fildll
push
clc
inc
scas
jecxz
adc
xor
jno
mov
dec
insb
add
out
jmp
fwait
mov
inc
pmuludq
dec
cmpsb
fdivl
xchg
rcrb
sbb
and
mov
adc
cmc
mov
fldt
xlat
inc
jbe
adc
xor
enter
mov
inc
pushf
mov
xor
repnz
push
push
cltd
shll
pop
lahf
sti
insl
sbb
inc
mov
adc
pop
sarl
add
ljmp
fisttpl
push
mov
jbe
mov
or
loop
fdivrs
les
sub
pop
jle
adc
jp
xor
test
lret
aam
add
inc
shll
pusha
inc
in
aam
xor
jmp
ret
decl
ja
adc
aas
mov
sbb
sarl
popf
in
adc
ficompl
fstps
jp
jl
sub
ret
decb
pusha
dec
popa
test
dec
mov
in
jge
in
mov
in
out
scas
dec
mov
fdivrs
out
int3
mov
xchg
jne
lea
ljmp
into
cmp
cmpsb
out
sbb
adc
pop
sub
dec
jl
aas
push
push
nop
cmp
xchg
gs
in
clc
in
mov
xor
pop
dec
nop
cmp
adc
xchg
push
jp
repnz
hlt
push
cmpl
pushf
shlb
add
mov
ja
aad
jbe
xchg
sub
pushf
lds
push
pusha
add
call
test
add
divb
jmp
imul
cltd
mov
adc
leave
daa
jmp
rorb
mov
dec
push
inc
popf
mov
jge
std
sarl
movsb
xchg
mov
jbe
fisubrl
dec
jo
push
mov
pop
or
sbb
rorb
sub
insl
cs
push
sub
mov
mov
loope
mov
repnz
sti
pusha
jo
push
rol
insb
mov
cmp
jo
push
das
sub
pop
lcall
xchg
dec
add
xor
fadds
xor
xchg
sbb
lods
insb
push
imul
push
adc
cmp
out
inc
mov
stos
clc
ja
movsb
xor
jge
fildl
add
idiv
sub
ret
rorl
jae
cmpsb
out
in
std
jae
orb
ror
xchg
jp
popa
xchg
ret
mov
cmp
jae
dec
add
shl
push
jae
mov
popa
fwait
imul
mov
arpl
scas
aaa
int
dec
inc
icebp
adc
nop
sbb
stc
inc
lahf
jmp
in
jno
ds
in
lods
arpl
add
out
lock
data16
cmp
call
dec
and
outsw
jle
imul
adc
push
repnz
es
test
jb
ret
and
rclb
pop
jmp
and
sbb
push
push
cltd
add
or
pop
or
sub
push
sub
mov
push
adc
mov
cmp
or
mov
push
sbb
push
inc
loop
cmp
fcoms
pop
add
sbbb
inc
shrl
das
aam
dec
sbb
out
add
mov
call
mov
fisttps
sub
bound
push
call
mov
nop
fwait
add
outsb
mov
pop
lahf
mov
ret
adc
cmp
je
daa
dec
and
cmp
ret
sti
lods
aad
dec
daa
outsb
mov
sub
and
mov
and
out
sti
cmpb
in
xchg
mov
int3
push
loopne
xchg
push
adc
lcall
outsl
xchg
in
jle
jne
sub
mov
and
add
sti
and
sbb
pop
push
push
inc
pop
popf
lcall
es
lds
mov
sbb
mov
arpl
mov
jge
sbb
pop
inc
jbe
and
mov
xchg
jle
mov
xchg
jae
xor
fsubl
mov
movsb
lret
cmpsb
subb
xchg
or
xchg
std
add
cmp
sti
add
int
out
jl
xchg
ret
negb
sub
inc
jmp
stos
out
xorb
cmpsb
and
jno
loopne
mov
subb
lahf
push
push
xchg
mov
xchg
xor
mov
sbb
xor
and
or
rcl
movsl
jno
idivb
and
and
push
jl
mov
into
and
adc
dec
ja
lock
in
popa
mov
add
mov
mov
inc
mov
cs
sbb
push
repz
lahf
rol
ja
std
xor
ljmp
xchg
cltd
movsb
cltd
cmpsb
mov
int3
test
shl
or
out
push
icebp
jnp
add
cmc
ret
lret
iret
js
out
ret
popa
lret
xchg
cmp
xchg
xchg
into
cmpsl
mov
fcompl
xchg
push
negb
add
cmc
cli
ret
sub
xor
mov
cmp
sub
push
jmp
sahf
out
dec
dec
inc
movsl
outsl
xchg
cwtl
mov
pop
call
addr16
cmp
fstpl
mov
jecxz
loop
cmp
sbb
imul
mov
add
lret
push
jbe
jno
sbb
shrl
push
gs
shll
leave
jno
xorb
cli
xor
les
nop
mov
sbb
lea
fisttpll
cmpsb
stc
or
hlt
jns
lret
cmc
or
pusha
lea
jne
push
repnz
jbe
xchg
data16
jb
leave
xchg
inc
or
mov
mov
lods
clc
inc
push
lods
jp
or
pop
or
or
imul
add
arpl
sbb
call
dec
idiv
pop
xor
pusha
cwtl
mov
test
sub
ficomps
inc
fstps
aas
jecxz
sti
shl
jnp
push
pop
mov
mull
pop
xchg
loopne
fsubrl
inc
push
xchg
and
xor
or
inc
into
fimull
test
mov
sub
out
adc
sbb
inc
lret
cmpsb
in
push
lock
inc
or
and
inc
cli
and
jno
test
pop
jne
xorl
imul
cwtl
mov
sahf
mov
xchg
mov
adc
add
cmp
pop
cmp
jecxz
inc
cltd
stos
jp
dec
aad
xor
mov
pop
adc
stc
xor
mov
popf
out
aad
mov
into
sbb
or
sub
pop
xchg
sub
scas
aad
in
mov
mov
cmpsl
sub
arpl
jae
jne
mov
inc
mov
pop
inc
mov
dec
int3
mov
mov
jae
repnz
enter
iret
pcmpgtb
sbb
fucomip
data16
dec
mov
scas
mov
lret
xlat
and
or
imul
fldenv
out
cmp
rcr
mov
pop
jle
movsl
xor
inc
xchg
test
push
mov
cmp
cld
enter
push
mov
sti
fmull
ss
stc
xchg
xorb
out
mov
mov
xor
pusha
lds
sbb
ds
mov
in
data16
mov
mov
iret
mov
push
jle
cs
inc
mov
loope
add
jmp
imul
push
mov
js
lea
fcoml
or
and
cmp
iret
popf
rcrb
movsl
mov
cmp
imul
lea
mov
sahf
in
dec
jns
xlat
loop
rclb
es
insb
aaa
xor
push
rol
or
push
sbb
sahf
movsb
outsb
jno
mov
mov
rolb
xor
xchg
adc
dec
xor
cmp
push
xchg
jge
out
out
lock
inc
sbb
loope
sub
ja
shlb
sub
andl
les
jmp
xchg
xor
push
sbb
jo
ss
test
lret
dec
inc
sbbb
jae
pop
ds
pushf
gs
mov
mov
loop
rorl
addr16
dec
cmp
inc
push
mov
test
mov
aad
in
or
add
aam
popa
push
mov
sahf
fs
pop
mov
fimull
aad
jle
ja
sbb
jmp
fistps
xchg
push
jle
and
and
jo
jno
addr16
repz
push
lret
add
jg
lcall
cli
fs
adc
nop
outsl
pop
lcall
xor
lret
add
xchg
or
mov
push
arpl
sub
fidivrs
es
mov
dec
add
shll
jo
inc
push
pusha
xchg
aam
or
cmp
loopne
push
cwtl
scas
push
xchg
sbb
sub
xchg
out
jns
ds
mov
xrelease
xchg
ljmp
or
lods
mov
push
and
push
dec
leave
pop
pop
sarl
scas
imul
sbb
add
cs
xchg
jg
or
fcmovnb
sub
ds
out
cmp
sbb
lds
lds
mov
pop
xor
xchg
int3
pop
dec
aad
mov
incb
fisubs
adc
test
push
sub
outsb
inc
cmp
loope
push
pop
icebp
or
mov
and
stos
imul
mov
aas
int
mov
scas
add
pop
xchg
fimuls
xchg
jl
xorb
sbb
cmp
pop
jnp,pn
in
shr
es
stos
add
sub
stos
fisttpl
add
ficoms
jb
in
dec
testb
data16
mov
mov
cmp
divb
les
lods
sbb
lahf
cs
sti
inc
xor
mov
jo
mov
call
je
stc
sub
movsl
test
cwtl
xchg
mov
xor
and
aas
rcrl
jnp
mov
jmp
jl
pop
add
cmp
fisttpll
dec
imul
sub
fidivrs
mov
in
pushf
mov
cmpsb
xchg
or
mov
cwtl
inc
js
idiv
pushf
or
push
adc
pop
lods
leave
cmp
jnp
out
inc
mov
inc
aaa
cmp
jmp
sbb
popa
lock
mov
push
adc
lcall
xor
and
xchg
jne
dec
or
push
or
mov
stc
insb
les
mov
pop
shlb
mov
sub
pushf
faddl
inc
cmp
cld
mov
or
mov
lods
adc
inc
outsl
bound
xchg
dec
pop
das
pop
cli
mov
pop
inc
push
pushf
push
xlat
inc
xchg
lods
adc
xor
test
xchg
push
arpl
push
mov
lcall
jge
cltd
inc
xor
xor
xchg
pusha
push
mov
ljmp
out
mov
and
fimull
cld
popf
jbe
lret
add
sub
call
inc
movsb
add
sbb
in
push
repz
dec
push
xchg
ljmp
jle
inc
xor
das
ret
add
cs
mov
mov
leave
repz
ds
jb
mov
andl
mov
push
cwtl
mov
sub
clc
mov
sub
push
clc
jmp
mov
push
shlb
ss
jl
xchg
inc
ja
inc
into
cmp
jo
sub
sbb
pop
inc
jb
decb
xchg
inc
fbld
lcall
es
fiaddl
inc
shll
push
mov
scas
addr16
mov
mov
int
icebp
dec
mov
add
adc
call
fadds
xor
push
jecxz
pop
lret
outsb
add
push
sub
push
lds
cmc
out
lds
xchg
test
and
bound
bound
fs
jmp
push
pop
lret
xchg
aad
in
in
outsl
inc
inc
lahf
xlat
dec
cli
cmp
sbb
or
shlb
sub
add
dec
push
mov
out
pushf
insb
in
adc
sbb
push
add
pop
std
sub
mov
adc
or
xor
push
out
int
pushf
push
push
popf
icebp
pop
fwait
push
add
mov
push
or
jmp
pop
es
rcrb
pop
pop
mov
xchg
movsl
dec
add
push
push
add
pop
jo
cli
xor
bound
mov
mov
data16
and
sub
sub
jecxz
inc
add
movsl
movsb
filds
inc
xor
push
push
xor
mov
and
cmp
xchg
stos
and
add
out
cld
add
pop
scas
push
cmc
mov
xchg
ficompl
sbbb
dec
xor
pusha
or
mov
js
sub
jecxz
std
xrelease
lcall
inc
iret
in
xor
imul
mov
stos
gs
mov
cmpsb
and
adc
add
push
scas
fisubl
idivl
push
inc
repz
jo
or
mov
mov
or
xlat
inc
test
ja
dec
aad
mov
lods
inc
test
sbb
push
fildll
mov
mov
push
fldcw
icebp
jp
mov
dec
cmpsb
xchg
out
xor
add
or
rolb
clc
iret
xor
cwtl
mov
ror
jns
cs
add
int3
jo
jl
push
fsubl
push
cmc
push
das
dec
adc
negb
in
and
mov
xlat
mov
pop
cmp
and
inc
mov
push
test
sbb
inc
add
repz
gs
lds
flds
or
pop
push
fstpl
xchg
out
cld
dec
push
push
insl
or
adc
shr
xchg
adc
clc
ljmp
clc
adc
inc
cli
pop
inc
test
inc
push
vmovdqu
adc
mov
pop
push
stos
cmp
add
insb
sub
sbb
cmpsl
mov
add
fimuls
in
jno
xor
mov
pusha
mov
out
out
pop
rcrl
adc
xor
pusha
jle
xlat
leave
push
mov
mov
movsb
mov
inc
dec
in
sahf
repz
xor
mov
mov
je
mov
les
push
es
or
inc
add
mov
pop
xchg
mov
cwtl
es
pop
jae
dec
daa
ret
pop
lods
clc
fsts
fisubs
sbb
cmp
cmpsl
out
outsl
fisttpl
adc
adc
sub
loopne
les
jecxz
out
in
insb
loope
and
mov
lret
cmpsl
test
pop
mov
lret
xor
and
outsb
ret
mov
jbe
add
bound
dec
cld
inc
js
cwtl
pop
test
xchg
shll
out
pusha
and
negb
add
dec
push
test
cmp
out
adc
adc
lods
outsl
mov
jle
or
xchg
xor
out
popf
mov
jns
sahf
cmp
ret
dec
mov
lock
scas
push
add
dec
pop
movsb
or
push
pop
xor
sub
mov
fimull
aaa
inc
add
and
pusha
ret
adc
add
pop
push
std
or
arpl
inc
std
xchg
mov
dec
in
cli
dec
xlat
test
mov
jae
fstpl
fsubr
out
adc
fwait
outsl
int3
stc
daa
addr16
lret
or
mov
aam
add
data16
and
je
test
inc
mov
dec
adc
sbb
cli
xchg
jb
imul
jmp
sub
pop
loope
push
xchg
stos
push
push
push
int
pop
push
loopne
pop
arpl
cmp
xadd
jns
popa
add
sbb
idivl
repnz
xchg
mov
addr16
mov
cmc
fs
das
dec
ja
cmp
subb
jno
jmp
push
out
push
jp
dec
xlat
leave
shlb
xchg
sti
cmp
or
xor
sbb
in
mov
rorb
jecxz
adc
mov
pop
cwtl
popa
and
test
lods
cmovge
nop
and
mov
mov
test
pop
pop
outsl
bound
mov
iret
bnd
cli
into
jecxz
mov
in
test
je
addr16
sbb
fcmovbe
xorl
mov
mov
mov
movsl
rclb
cltd
cli
adc
call
sub
xor
sbb
fisubrl
es
and
xlat
fcmovne
sbb
xchg
aas
dec
in
cmp
outsb
xchg
nop
aaa
inc
mov
cmp
pop
pop
roll
int
stos
cmp
outsl
enter
lret
cmp
mov
out
stos
add
lret
xor
je
loopne
int3
sub
pop
mov
sbb
xor
repnz
push
js
sub
lahf
adc
sub
adcb
cmp
js
mov
inc
or
xor
int3
ss
int3
into
mov
sbb
pop
shl
push
sub
inc
in
inc
and
aad
jecxz
jnp
xchg
add
sub
push
sti
das
loopne
sub
icebp
xor
lret
lea
std
mov
mov
mov
xor
sub
sbb
stos
test
es
add
push
repnz
inc
test
lcall
es
inc
pop
loop
mov
adc
lea
sbb
adc
shlb
lahf
test
pop
fldl
mov
sti
xor
insl
das
push
imul
jo
sbb
ret
sub
jp
pop
outsb
push
mov
inc
mov
sbb
imul
out
sbb
xor
push
int3
mov
sbbb
xchg
push
and
fcompl
mov
outsl
lret
inc
adc
xor
fstpt
sub
or
dec
jle
in
popf
rcrb
mov
leave
sbb
dec
add
je
inc
movsb
pop
mov
fnstenv
or
pop
mov
pop
rcll
addl
ja
loop
into
mov
icebp
jmp
mov
push
inc
push
cli
dec
arpl
mov
pop
xor
mov
fnstcw
or
aad
mov
cmovp
add
xor
inc
ss
push
adc
sbb
xchg
adc
mull
cwtl
test
and
mov
adc
inc
jnp
fld
sub
sbb
push
inc
dec
dec
and
push
test
sbb
push
lret
fstpl
imul
adcb
movsl
adc
scas
mov
outsl
and
cld
inc
scas
rcrb
loope
ss
and
test
lds
enter
adc
mov
add
lods
cmp
jle
and
push
sti
xor
pop
aaa
shrl
clc
xchg
jbe
adc
push
fsubrs
or
xor
xchg
in
and
cmp
cld
or
mov
icebp
mov
jmp
inc
int
das
sbb
in
pusha
mov
push
imul
mov
out
int3
int3
pushf
call
mov
add
nop
xchg
adc
aam
fstpl
adc
lea
mov
push
jp
and
mov
mov
ret
xchg
mov
xchg
or
mov
add
lret
imul
xchg
xchg
adc
ficompl
mov
sub
cmpsl
and
test
inc
add
lahf
clc
imul
decb
inc
lods
in
add
rcrl
and
insb
fistps
popa
pop
or
or
and
mov
xchg
aaa
jns
jnp
insl
scas
push
pop
mov
mov
fstl
mov
mov
mov
push
icebp
adc
adcb
nop
lahf
icebp
mov
jmp
xchg
mov
adc
loop
sarl
mov
shr
dec
stc
pop
xor
outsb
inc
aas
outsl
ljmp
xor
pop
mul
pushf
in
lahf
mov
or
sub
cwtl
or
loopne
push
lea
dec
sub
xor
or
fcomps
mov
or
js
pop
fcoml
or
lds
dec
ja
inc
clc
fiaddl
adc
pop
in
out
sbb
adc
add
std
in
sbb
mov
or
mov
add
xor
xor
iret
orl
scas
mov
or
les
aad
addb
cltd
pushf
movsl
mov
jl
sub
add
negb
add
fdivrs
pop
fldenv
leave
and
daa
mov
mov
dec
fyl2x
inc
mov
mov
push
inc
je
cmp
jecxz
addr16
rorl
and
add
data16
adc
mov
outsl
mov
mov
push
scas
or
ja
js
or
enter
jbe
jns
jnp
dec
nop
mov
ret
dec
sarb
push
mov
mov
movsl
stos
pop
pop
or
nop
imul
or
pop
xchg
frstor
adc
or
stos
adc
fcoms
or
icebp
xor
scas
or
test
pop
popa
dec
cld
xchg
sahf
shrb
mov
bnd
arpl
mov
mov
das
cltd
outsl
rcr
mov
pop
lods
cmp
mov
xchg
dec
adc
call
jns
cli
xchg
stos
dec
ss
mov
aaa
out
int3
jle
imul
inc
add
jg
into
cmp
inc
lret
pusha
out
pop
in
mov
call
dec
sarb
pop
xchg
cli
adc
shll
adc
adc
jnp
stos
jno
ret
icebp
fidivrs
gs
enter
popf
daa
enter
pop
popa
movsl
scas
and
sbb
popl
inc
outsb
dec
loopne
jns
stos
lret
in
test
jmp
sti
sahf
dec
and
cmc
jmp
inc
jmp
mov
lcall
mov
insb
pop
sbb
or
loopne
inc
fadds
and
xchg
daa
in
int
xchg
mov
mov
jmp
add
in
das
or
inc
insb
stos
test
xchg
push
xlat
add
cmp
sbb
xchg
inc
cli
push
push
add
xchg
jecxz
adc
call
or
inc
cmpb
or
mov
mov
mull
dec
xor
mov
addb
shrb
push
push
and
sbb
push
or
sbb
jbe
iret
cmp
pop
aaa
pop
scas
mov
fcomps
flds
shll
inc
repz
xlat
aam
in
fwait
xor
mov
repz
or
pop
mov
push
or
cmc
xlat
aaa
les
jp
mull
out
inc
rcrl
insl
cmc
sbb
add
adc
pop
push
lods
stos
ljmp
rorb
mov
xor
sbb
gs
xor
jae
adcb
mov
pushf
pop
stos
mov
xor
inc
jp
rcrl
cmp
xchg
adc
add
xchg
pop
arpl
lret
jns
mov
push
mov
mov
dec
jle
sbb
inc
pop
je
xor
ljmp
mov
and
lods
adc
mov
rcll
gs
int3
out
ret
jmp
cmp
nop
inc
or
and
add
mov
mov
or
clc
ljmp
sarb
dec
xchg
decb
push
mull
or
shlb
xlat
ficomps
push
dec
pop
and
jnp
testl
add
mov
add
mov
sbb
rorl
jnp
mov
xchg
jo
lret
aas
mov
add
sub
push
xchg
daa
adc
out
ljmp
pop
push
imul
inc
inc
adc
cmc
les
lds
jle
mov
push
push
mull
and
dec
pop
pop
cmpsl
ja
ds
and
and
mov
sbb
or
nop
xor
test
cmp
iret
hlt
push
or
bound
inc
sub
cmp
add
pop
adc
lock
or
ds
inc
pop
sub
outsb
cltd
adc
es
pop
dec
mov
fdivr
sub
push
je
decl
mov
or
mov
outsb
repz
inc
popa
mov
inc
cs
test
cmp
nop
pop
ljmp
insb
pop
pop
mov
outsb
or
add
ret
jbe
fwait
jno
dec
sub
mov
stos
sub
sbb
cmp
test
mov
daa
popa
sbb
mov
mov
jo
movsb
mov
inc
push
cmp
aad
je
scas
cmpl
push
sahf
add
das
sbbl
jne
jae
arpl
iret
cs
dec
xchg
mov
loope
or
or
add
aaa
mov
ja
cltd
push
inc
ror
fs
cltd
repz
ds
out
out
mov
xchg
adc
enter
xchg
lret
hlt
and
jns
pushf
ret
repz
add
xor
or
lret
es
cwtl
pop
or
jb
daa
cmp
cld
andb
mov
push
or
scas
in
ds
or
push
aad
push
or
mov
cmp
mov
push
and
mov
jmp
sub
shrb
in
test
add
adc
and
push
add
aad
adc
inc
cmpsl
sub
test
negb
hlt
cmp
iret
add
ret
in
and
push
repnz
pushw
daa
push
sub
inc
sbb
int
add
shlb
mov
xchg
lock
stos
pop
inc
lods
js
push
insl
pop
pop
faddp
fiaddl
scas
xchg
push
push
stos
push
cltd
push
fdivrp
push
fistpl
jb
mov
icebp
fldenv
divb
fistps
pop
divb
subps
out
jmp
or
lret
fmulp
mov
movsl
ret
lcall
dec
push
int
movb
outsl
sub
lods
sbb
mov
sbb
lcall
xor
sbb
pusha
xor
call
mov
outsb
sbb
int
and
lret
sub
jb
sub
test
push
and
ret
es
jmp
icebp
mov
jge
pop
sahf
leave
jge
dec
test
or
scas
pusha
inc
lahf
jp
cmp
add
test
stos
jnp
or
movsl
mov
sbb
out
xlat
cs
dec
or
mov
out
fs
into
js
mov
inc
push
sti
int3
iret
repz
mov
fwait
imul
push
fcompl
test
inc
push
shlb
in
push
inc
pop
xchg
fistps
xor
xor
rclb
fwait
mov
js
in
out
fwait
cs
outsl
push
sbb
popf
cmp
jae
shrb
loopne
xchg
push
movsb
mov
push
cmpsl
mov
adc
insb
sbb
cwtl
add
cmpsl
sub
je
repz
add
mov
pop
outsl
xor
jo
sbb
lods
pop
xchg
test
je
leave
sbb
dec
fstpt
mov
push
mov
mov
cltd
sti
adc
scas
push
mov
les
mov
enter
or
dec
jg
aam
cs
xorb
fsubs
and
cmp
or
sbb
xor
pop
aad
fldenv
loopne
fisubrl
icebp
mov
mov
add
dec
mov
jnp
pop
mov
jne
jecxz
arpl
aam
cwtl
jnp
insb
dec
test
loope
pop
xlat
or
adcl
inc
sbb
das
inc
pop
pop
je
dec
lret
xor
adc
dec
cltd
sbb
outsb
mov
dec
or
test
xor
push
add
mov
and
or
sub
js
cmpsl
scas
js
cmp
fidivrl
push
mov
pop
mov
push
leave
ds
dec
xlat
out
idivl
add
sub
mov
push
xor
je
push
sub
mov
rcrb
push
loope
out
inc
test
cmc
ljmp
int3
aas
cltd
push
loop
or
xor
fldpi
or
mov
push
aas
adc
dec
xchg
pop
and
sahf
fs
jnp
xor
test
push
add
pop
jl
jb
out
and
outsb
movsb
cwtl
jg
lods
xchg
cmp
imul
sbbl
stos
or
test
out
jmp
xor
push
push
mov
sbb
adc
mov
fstpl
popf
add
fcomp
dec
sub
lods
push
test
fstps
jmp
xchg
dec
mov
iret
pushl
fcmovnbe
inc
adc
pop
das
and
add
inc
add
fstpl
xchg
into
aam
stos
outsb
jg
out
outsl
lea
mov
shlb
cmp
rcrl
shll
dec
mov
stc
xlat
mov
rolb
adcb
sub
std
into
rcll
xor
aad
adc
mov
aas
jns
or
xor
pop
push
jge
pop
jl
test
gs
dec
shll
sub
mov
test
mov
popa
pop
test
cmpsl
mov
enter
fisubrs
lahf
imul
push
aas
push
sti
js
push
iret
loop
xor
hlt
jl
sbb
pop
cmp
shrl
sub
outsb
pop
adc
add
pop
movsl
iret
mov
fdivl
and
imul
mov
xor
lahf
stos
push
stos
fsubs
outsb
inc
in
or
lds
sbb
aas
fmuls
dec
cmp
aam
push
lods
test
jb
xorb
fistpl
jge
jmp
aam
daa
cmp
dec
clc
leave
cmp
sub
or
pop
cmpsb
inc
jns
push
sbb
loopne
adc
outsb
sbb
ret
scas
insl
jmp
iret
mov
pop
and
push
hlt
sbb
xchg
and
xchg
dec
push
leave
mov
lret
or
call
fstps
cmp
cmpsb
sub
sub
fmuls
sub
lahf
cmc
fiadds
cmpsw
lret
dec
xchg
and
lcall
mov
mov
push
nop
inc
gs
clc
cli
mov
jbe
test
xor
rorl
push
push
sub
cmove
sbb
cmp
sbb
pop
cmp
or
pop
lods
cmpsl
and
mov
shlb
jge
add
or
shlb
sbb
mov
push
mov
out
adc
mov
sub
stc
mov
cmp
cmc
nop
jl
push
aad
pop
insb
daa
aas
outsb
cmp
xchg
and
cld
push
push
leave
jl
push
popf
cs
cs
rolb
xchg
mov
push
in
inc
clc
call
cmc
mov
mov
aas
xchg
imul
sub
fimull
ret
dec
sbb
cmp
mov
in
ret
sbb
sub
lahf
cld
repz
xor
lret
movups
pop
push
pop
add
jae
pop
les
rclb
cmc
mov
xchg
push
mov
jmp
in
jge
mov
add
dec
adc
jns
or
mov
inc
lcallw
popa
mov
adc
fsubr
cmpl
hlt
lods
jno
dec
or
imul
popf
jp
mov
xor
add
mov
xor
sbb
sbb
cli
or
cmp
mov
sub
int3
js
dec
ljmp
sbb
cmp
mov
pop
dec
push
add
add
xor
inc
jge
ret
add
stos
cmp
jns
cld
and
dec
scas
mov
pop
inc
int3
mov
pop
jne
test
mov
sbbl
push
dec
and
js
or
sahf
add
int3
pusha
data16
mov
ret
dec
jmp
jmp
cmp
jnp
imul
movl
shll
aad
addr16
nop
dec
rcll
mov
xchg
mov
roll
cs
mov
lods
cmpsb
fs
cmp
dec
cmp
xor
fnstenv
xor
pop
mov
addl
sarl
sbb
mov
push
daa
xlat
mov
push
gs
lcall
sbbl
fidivl
out
mov
ja
cli
movl
cmp
and
frstor
ss
inc
inc
add
rolb
mov
cmc
mov
daa
inc
xchg
in
mov
pushl
lret
add
pop
out
hlt
movsl
bound
rcr
in
fsubp
or
out
stc
pop
jae
inc
inc
and
sbb
dec
lods
fldenv
and
aam
mov
mov
lods
mov
jns
push
rcll
or
inc
in
jae
mov
push
movsb
add
imul
xlat
lea
imul
mov
test
in
pop
adc
push
sub
subb
das
das
inc
pop
mov
push
mov
aaa
push
je
push
fucomp
cwtl
push
pop
leave
inc
xlat
loopne
xlat
pop
push
pop
sbb
push
add
add
sahf
push
cmp
and
fwait
popf
std
mov
pop
pop
jno
aaa
pop
mov
fs
mov
jle
mov
pop
and
out
push
push
push
or
shll
leave
dec
pop
and
xor
mov
mov
rorb
adc
int
movsl
sbb
mov
jle
cmpl
in
out
xor
lahf
cli
icebp
xchg
cmp
scas
jecxz
add
call
mov
ret
push
jb
fs
test
dec
scas
fwait
ss
stos
nop
call
imul
or
xor
jecxz
sbb
das
and
and
out
loope
pushf
loopne
pop
pushf
mov
gs
sbb
cli
push
mov
add
cmpsl
movsl
push
cmc
fldenv
lock
into
and
test
xchg
iret
shl
mov
xor
push
arpl
adc
cmp
int
adc
inc
dec
inc
push
sub
jb
cmp
bound
pop
dec
ficomps
popa
aam
and
clc
outsl
stos
mov
out
enter
ret
cmp
xchg
lock
mov
stc
orl
xor
and
sub
lods
or
xor
test
mov
loop
mov
pop
cmp
es
enter
maxps
pop
or
leave
fcompl
shrl
or
add
dec
mov
push
fcoml
and
punpckhdq
and
xchg
xchg
jecxz
push
adc
cmp
fcoml
sub
mov
or
cmp
pop
in
inc
mov
popl
push
test
fnstsw
inc
or
push
ljmp
scas
mov
in
add
dec
dec
into
jnp
and
repz
dec
xor
cmpsb
stos
push
std
or
sub
xchg
aaa
dec
dec
inc
mov
and
test
int
shl
pop
test
shld
inc
insb
sbbl
sub
cmpsb
or
jle
test
sbb
sarb
sub
imul
sbb
lret
xorl
sub
xchg
dec
add
or
push
cmp
cwtl
outsl
push
cmpsl
adc
outsl
sub
rorb
cmpsb
jo
cs
ret
out
out
outsl
mov
mov
addr16
orl
frstor
sub
shl
cli
mov
mov
notb
push
and
mov
mov
int3
pop
and
and
dec
jl
repz
je
stos
sbb
push
inc
inc
iret
nop
push
shl
daa
jge
xor
push
cltd
icebp
lea
add
sahf
xor
hlt
inc
int
push
pop
lods
jmp
mov
push
lret
pop
or
push
out
imul
cwtl
das
imul
adc
call
or
xlat
sbb
inc
jecxz
in
mov
add
imul
push
dec
mov
push
fs
pusha
stc
icebp
xor
mov
sti
xor
cmp
xlat
cmpsb
mov
pop
pop
push
mov
stos
jg
mov
fildl
or
in
pop
xlat
cmp
js
les
jae
aam
ror
lock
adc
outsb
jae
pusha
cwtl
out
mov
test
xchg
pop
xchg
insb
punpcklbw
adc
aam
xor
or
cmp
sbb
or
call
inc
int3
inc
jno
movsb
pop
xlat
loope
repnz
fisubrl
int
popf
adc
std
push
cltd
inc
fisubrl
bound
push
out
aas
pushf
shl
mov
lea
xor
fildl
or
call
leave
ret
out
out
add
xor
mov
push
push
cld
mov
bound
mov
push
mov
js
or
xchg
add
lret
leave
mov
frstor
jp
mov
pop
bound
in
scas
add
ss
out
dec
ficoms
add
ret
adc
leave
movsb
out
cmpsl
in
aas
loop
lock
insb
in
inc
xchg
adc
inc
int
jecxz
xchg
das
in
call
sub
jno
in
nop
push
cmp
aad
je
clc
sahf
mull
dec
fimull
jae
dec
int3
inc
lea
fiadds
add
push
sub
push
mov
and
lock
mov
cmp
hlt
xchg
scas
and
je
mov
arpl
sbb
psubusb
push
insb
mov
je
test
adc
stos
xlat
ret
dec
jl
clc
ds
and
sub
movsl
lock
sub
inc
sub
fidivrl
enter
inc
adc
addr16
hlt
sar
leave
mov
ficomps
or
nop
outsl
push
out
aam
adc
xor
aas
jne
cmpsb
gs
aam
test
sarl
loop
imul
mov
test
xchg
iret
adc
mov
imul
bound
std
xchg
dec
mov
jo
sub
sbb
xchg
push
outsl
add
mov
sub
xchg
call
loop
je
jmp
fnsave
push
and
imull
lret
sub
adc
nop
adc
pop
adc
xchg
lahf
adc
out
ret
pop
icebp
add
jne
lds
out
out
mov
out
jae
and
add
mov
mov
xor
lods
sub
stos
lret
cmpsl
dec
cmp
add
xchg
cld
sbb
dec
add
es
jno
pop
vmread
aaa
sbb
cmp
loopne
xor
jg
and
mov
adc
clc
mov
pop
mov
test
add
outsb
cmp
adc
stc
popf
jl
scas
repz
add
jle
in
add
into
adc
scas
and
sbb
loopne
cltd
xchg
and
add
ljmp
lea
rorb
push
addr16
ds
mov
mov
loop
or
shr
ja
lret
inc
xor
adc
es
cmp
push
out
lret
in
push
push
scas
xor
scas
addr16
mov
arpl
test
cmpsb
push
mov
push
push
dec
gs
jnp
pop
imul
out
jbe
fadds
dec
mov
test
add
push
sub
sbb
pop
jb
shll
pop
mov
jle
mov
out
decl
insb
movsl
adc
dec
mov
inc
add
insb
jne
pop
mov
stc
xchg
push
xchg
gs
dec
lock
loopne
xchg
imul
xor
fnstcw
scas
xchg
mov
pop
movsb
aaa
push
sub
orb
mov
aaa
ret
sub
adc
notb
ss
dec
lahf
xchg
idivb
cmp
fcmovnu
or
scas
fnstsw
cli
in
fwait
idivb
gs
loope
bound
nop
xchg
fwait
sub
or
pusha
lock
repz
xor
pop
pop
sahf
aam
dec
in
push
mov
and
pusha
cld
sbb
push
or
push
pushf
sbbb
int3
ficoms
insl
pop
daa
in
fcom
lods
out
cmc
leave
in
jp
push
aam
data16
push
cmpsl
or
cmp
cmp
enter
mov
das
lahf
cmp
fcomps
roll
xchg
push
mov
push
sbb
in
mov
test
mov
adc
push
xchg
jge
orb
out
xor
push
xor
shll
push
lods
arpl
jne
add
addr16
sbb
cltd
ds
xchg
add
pushf
mov
mov
mov
addl
add
push
lock
call
loope
inc
pop
adc
enter
sahf
adc
in
iret
pop
movsl
clc
sbb
inc
roll
lods
mov
jnp
stos
pusha
fimull
inc
scas
mov
outsl
pop
pusha
lock
inc
cmc
mov
scas
in
fadds
movsl
cmc
cld
jl
rorl
clc
push
or
stos
mov
out
mov
pop
lock
push
lahf
inc
mov
push
ss
divl
cs
inc
and
jae
mov
xor
mov
dec
push
mov
clc
sar
adc
xor
add
cmp
es
sub
push
mov
fmull
pop
aas
neg
int
fdivl
outsl
addr16
sbb
pop
jne
cmc
lods
push
fcompl
sahf
or
xor
cmp
dec
jno
dec
mov
insl
ror
out
idivb
aaa
fwait
aaa
idivb
dec
icebp
inc
cs
daa
jnp
cmp
xchg
mov
test
dec
aas
jno
jecxz
int
fwait
adc
mov
mov
mov
xchg
sub
push
pop
nop
je
sub
imul
adc
mov
mov
add
not
dec
mov
adc
add
dec
jmp
fwait
pop
bsf
mov
addb
and
dec
rclb
fnsetpm(287
dec
pop
sub
cmp
mov
sub
jbe
test
add
lds
mov
sahf
and
cld
adcl
std
dec
sub
fsubs
inc
call
adc
xchg
fstpl
jns
mov
stc
out
cltd
pop
sub
jns
jmp
adc
mov
xchg
mov
jno
lods
push
sahf
loope
icebp
fadd
xor
add
xor
in
push
lea
xchg
jo
ljmp
and
nop
sbb
int3
lret
fldl
imul
push
xchg
mov
insl
mov
jmp
stos
ror
movsb
xchg
jp
stos
test
lahf
xor
adc
jno
divl
inc
xchg
xchg
pusha
cmpsb
sub
dec
cmp
jae
loop
fisttpl
sbb
add
andb
sbb
stc
cwtl
add
out
add
adc
pushf
es
push
mov
push
iret
adc
push
mov
push
sahf
hlt
les
lcall
xlat
mov
dec
cmpsb
stos
sbb
movsb
into
pop
jno
ds
lahf
push
stc
lahf
scas
mov
pop
shrl
jbe
add
mov
in
mov
into
dec
lahf
adc
and
pop
daa
stos
add
add
imul
adc
dec
subb
stc
jle
lahf
cmc
into
push
sbb
test
icebp
xor
mov
mov
sbb
pop
inc
xchg
lock
sbb
xchg
and
movsb
xor
aaa
mov
ljmp
push
mov
loopne
dec
lahf
jmp
cmp
mov
and
xorb
divl
lahf
dec
xchg
lcall
or
fldt
add
cmpb
je
scas
cmc
cwtl
cmp
mov
sbb
jmp
lcall
mov
sti
jbe
lods
pusha
ja
movsb
insl
push
inc
mov
mov
loop
outsb
daa
ss
mov
test
jl
ret
mov
arpl
xor
push
lds
int3
je
xchg
stos
jnp
outsl
mov
fs
xchg
push
mov
mov
jnp
daa
pop
add
fdivp
fcmovnb
inc
ds
scas
push
clc
xor
xchg
add
cmpsl
hlt
or
xor
push
fdivrl
lock
test
or
add
push
add
pop
mov
test
pop
cld
das
add
leave
in
xor
cmp
or
out
inc
pop
data16
loopne
aad
push
sub
and
in
aaa
mov
sub
sti
jne
mov
mov
add
loop
xchg
out
or
dec
lds
add
insl
cli
xchg
int
mov
lret
inc
mov
mov
add
mov
pop
dec
bound
lcall
cmc
pusha
outsl
int
sub
mov
hlt
loopne
jmp
stc
jno
daa
push
lea
jl
arpl
xor
or
push
int
out
sub
aad
add
add
lretw
xor
push
inc
jns
or
or
push
pushf
xchg
stc
addr16
pop
loop
rcrl
mov
cld
mov
mov
rorb
ror
ret
cmp
add
push
push
mov
leave
lock
mov
adc
stc
insb
repnz
rcll
scas
mov
dec
mov
mov
pop
insb
ja,pt
sub
arpl
mov
sub
cmp
ja
dec
rolb
mov
cmpsl
mov
xchg
hlt
mov
jmp
mov
loope
pop
sbb
mov
repz
aad
sub
icebp
push
in
xchg
test
add
int3
daa
jnp
test
xor
push
mov
iret
or
clc
test
lock
adc
pusha
aam
add
fucomi
or
pop
jb
das
sahf
call
or
ljmp
mov
pop
xor
jne
aad
insl
push
insl
mov
pop
lahf
cmc
jmp
nop
lret
mov
xor
cmp
pusha
sbb
arpl
add
mov
inc
push
loope
fimull
leave
repz
daa
sahf
xchg
lods
in
push
lcall
xchg
cmp
out
sbb
add
addr16
pop
dec
in
inc
and
inc
fisubs
pop
dec
xlat
or
inc
ja
push
cmp
or
data16
hlt
int
out
push
inc
je
testl
mov
rcrb
test
cwtl
jbe
pop
adc
insb
sub
sub
push
pop
jle
push
int
cmp
cs
cmp
lret
lret
cmp
dec
add
cmpsb
xchg
pop
lds
and
fsqrt
add
daa
movsb
ss
pop
jg
pop
pusha
push
aas
or
out
jae
dec
adc
out
mov
sub
jge
or
hlt
xchg
shrl
rol
sbb
push
mov
adc
dec
ret
icebp
outsb
rorl
mov
jno
lret
or
andl
or
testl
sbb
data16
or
jnp
mov
es
sahf
xor
lcall
inc
cwtl
sub
fisubrl
cli
mov
jecxz
add
loope
repz
les
xor
and
repz
mov
mov
add
xchg
ljmp
jle
ja
sti
mov
or
xor
adc
pop
loope
mov
fnstcw
jge
nop
mov
out
je
pop
int3
fbld
loope
loop
mov
adc
mov
test
sbb
mov
stc
or
adc
push
ljmp
cli
inc
mov
and
xor
ja
mov
sub
pop
lods
cwtl
mov
mov
push
sub
mov
and
in
mov
cli
scas
mov
lods
xchg
ss
sti
xchg
inc
loopne
popa
xor
stos
jno
jg
cwtl
cs
mov
pop
inc
xlat
cs
movsb
int3
sub
jp
inc
and
mov
mov
jno
nop
mov
adc
data16
jne
js
xor
out
clc
mov
sbb
sahf
ret
outsl
sbb
dec
je
ljmp
dec
lret
mov
push
loop
mov
shll
nop
xor
pop
test
imul
enter
cmp
pushf
and
cmp
stos
mov
inc
lock
gs
lods
testb
lds
mov
popf
out
jb
call
dec
rcrb
jo
pop
dec
adc
ffreep
pop
test
mov
xor
imul
sbb
dec
shll
clc
inc
arpl
dec
sarl
fdivl
jl
cmpsb
xchg
sahf
mov
add
imul
mov
cmc
mov
inc
push
lea
push
mov
add
leave
dec
sub
pusha
jno
push
movsb
cmp
cmp
out
or
into
mov
int3
test
jmp
sbb
inc
mov
jl
loopne
and
hlt
xchg
mov
lret
faddl
loope
pusha
pop
ficompl
insb
mov
mov
add
xor
scas
xor
push
aas
lret
xchg
lods
cmpsb
sub
shlb
ja
test
mov
mov
xor
loope
xchg
aas
lods
push
lods
dec
dec
int3
mov
movsb
insb
jb
add
sbb
mov
data16
adc
push
xor
xor
in
mov
mov
xor
push
xchg
stos
cmp
jb
xor
jmp
cmpsl
sbb
xchg
fstpt
fistpll
sti
ljmp
inc
mov
imul
push
xor
sub
std
test
cmp
jns
repnz
add
inc
and
test
test
mov
popa
popf
inc
and
out
mov
enter
xor
or
nop
movsb
out
aad
in
into
cmp
pop
out
cmpb
jmp
xchg
pop
inc
pusha
or
dec
pop
aas
and
insb
sbb
mov
add
xchg
fdivrp
push
ja
cmpsb
add
adc
popf
add
lcall
adc
fcoms
outsl
add
sahf
mov
mov
aaa
out
outsb
mov
and
sbb
cmp
sub
mov
push
and
shrl
or
mov
push
mov
imul
pop
ljmp
dec
out
outsl
cmpsl
push
xor
adc
shlb
std
fwait
in
xor
push
sub
notb
adc
xchg
sbb
mov
cs
cs
loope
xor
mov
sbb
xchg
jo
pushf
push
into
sub
gs
adc
pusha
ss
dec
jg
jae
mov
jne
push
cwtl
pusha
mov
cmc
cld
sti
add
sub
push
jle
jmp
cmp
inc
mov
loop
fildll
mov
sbb
sahf
outsl
sub
mov
popf
xor
pop
and
hlt
fxtract
or
fsubr
js
orl
and
push
mov
dec
and
fsub
stc
or
pop
adc
cmpsl
int
mov
add
xchg
xchg
push
popf
pop
cld
sbb
adc
daa
das
jno
push
andb
jne
xor
inc
sub
mov
outsl
pop
stc
int
insb
cmc
mov
pop
adc
pop
ds
sahf
xchg
hlt
pop
hlt
mov
adc
rcrl
jae
mov
adc
into
add
loopne
ret
or
or
loop
dec
mov
cwtl
or
xor
aad
repz
pop
jg
shlb
rcrb
in
cmpsl
rclb
xor
pushl
push
enter
es
fstl
push
rorb
push
pop
inc
xor
adc
stc
sub
out
xor
loope
cmp
leave
hlt
mov
es
in
pop
mov
leave
adc
mov
inc
push
into
jecxz
cmp
inc
push
pop
push
lahf
push
jl
into
pop
cltd
mov
push
inc
iret
mov
aas
xchg
mov
ja
jno
das
shll
shrb
push
cwtl
shrl
mov
outsb
xlat
testb
adc
ror
lock
sub
jne
jle
mov
popf
pop
jo
sbb
push
cmc
movsb
idivb
adc
xlat
sub
xor
arpl
or
shl
inc
fsubl
cmp
xor
into
out
xchg
mov
sbb
mov
and
xor
mov
cmp
push
sbb
push
ficomps
pop
hlt
inc
pusha
add
fst
aas
jb
mov
ss
push
movsl
insb
jmp
inc
mov
in
push
call
or
pop
xchg
out
xchg
ds
add
out
sub
push
lds
clc
push
pop
lcall
insb
pop
stos
or
cltd
popf
icebp
mov
loope
enter
mov
insl
stc
pop
or
rorb
aaa
nop
or
pop
cmpsl
icebp
mov
mov
iret
lcall
sub
ljmp
xchg
popa
test
inc
js
inc
int
mov
in
in
jl
mov
and
sub
push
hlt
push
mov
movsb
adc
std
shlb
int3
lods
mov
sub
out
add
xor
cs
popf
insl
daa
out
test
and
lock
int
jmp
and
add
fisubrs
xchg
inc
mov
test
lea
sbb
lods
push
mov
pop
mov
pop
jne
hlt
cmc
lea
testl
fsubrl
je
dec
nop
push
lea
mov
mov
push
outsb
jmp
sub
dec
cmp
xor
xchg
outsb
icebp
jl
mov
dec
pop
fildll
xchg
insb
add
dec
mov
cli
sbb
fwait
je
cmp
and
sarb
testl
rcrb
rorb
pop
dec
es
xor
xchg
cmp
pop
loop
mov
lahf
inc
pusha
xchg
xchg
sbb
mov
and
lcall
lahf
mov
cmp
pop
push
mov
cmc
or
loopne
mov
mov
lods
xor
pop
mov
jmp
add
push
popa
push
rcr
sbb
adc
popa
push
orb
loop
mov
sbb
mov
sahf
xor
mov
mov
cwtl
test
aad
xor
dec
lret
pop
lea
jne
mov
das
ja
pop
jne
mov
sarl
jno
divb
imul
mov
lods
les
inc
jns
jno
mov
sub
push
push
rep
inc
ljmp
mov
push
lret
ret
sub
pop
cmp
sbb
adc
xchg
inc
jnp
pop
cmpsb
mov
adc
sbb
push
push
dec
xor
dec
test
mov
dec
jmp
add
das
lahf
dec
add
js
testb
or
jb
lea
and
inc
imul
in
adc
dec
jns
add
enter
add
out
lea
push
push
fdivl
data16
scas
adc
jo
push
sub
in
out
das
leave
add
push
inc
rcrl
std
movsl
dec
out
adc
fcmovnu
push
add
add
popa
ss
shr
popf
pusha
inc
sahf
sbb
aaa
adc
or
int
pushf
sahf
jl
sub
mov
jge
cmp
in
jle
loope
lahf
dec
cmpsl
adc
pop
clc
fcoms
and
push
sarb
int
add
cmp
daa
mov
xlat
jae
inc
sti
push
cs
cld
out
clc
jne
push
fs
xchg
es
cmpsb
mov
cltd
add
int3
and
rorb
shrb
cmp
mov
sbb
add
xor
or
cwtl
pop
lods
jne
mov
mov
cli
jl
pop
inc
enter
loopne
test
subb
aaa
arpl
xor
pop
cmp
pop
imul
adc
clc
stos
dec
aaa
jbe
pop
sub
outsl
bound
push
sbb
flds
ja
mov
call
sbb
inc
inc
outsl
cltd
fcoml
jge
pusha
push
shlb
mov
ficompl
dec
or
mov
popa
fwait
lods
shl
mov
rcl
subb
out
in
mov
das
pusha
std
mov
jbe
adc
fs
pop
int
or
xor
clc
test
xor
xchg
and
cmc
rcrl
nop
cwtl
ljmp
mov
dec
cmpsl
mov
fdivr
leave
lods
pop
dec
push
pop
sbb
adc
out
adc
pusha
outsb
repz
call
fwait
push
mov
dec
jnp
fcomps
push
push
stc
in
mov
pop
sub
pop
std
pop
insb
add
mov
push
jne
mov
invd
and
shl
jge
push
ds
test
and
mov
ja
out
cmp
inc
into
adc
sub
add
jecxz
jns
insl
jmp
dec
jmp
mov
clc
push
jmp
cmpsl
in
rcll
shll
ret
push
pop
adc
or
fiadds
addb
pop
push
xchg
jmp
xlat
loope
ss
adc
lds
lock
inc
out
push
or
stc
sbb
dec
or
loopne
es
mov
inc
push
or
mov
push
sar
outsl
jo
ja
push
int3
jmp
mov
cmp
mov
add
pop
xor
xchg
mov
mov
push
mov
cmc
pop
dec
loopne
test
shll
sub
inc
sub
cmp
ss
mov
cmpsl
cmp
aad
mov
dec
popf
fldcw
shlb
in
iret
and
cltd
xlat
lahf
mov
mov
enter
and
out
push
imul
gs
popa
and
sub
mov
jb
or
mov
lea
imul
dec
inc
and
cmovg
data16
cmp
adc
bound
loopne
movsb
mov
xor
test
add
lret
pushf
call
inc
pop
iret
imul
je
fincstp
loop
sub
arpl
arpl
xchg
mov
fst
mov
lods
adc
cmpsb
mov
dec
lahf
lods
sarb
dec
mov
nop
je
dec
jae
xchg
lds
and
aaa
push
iret
cmp
jno
in
loope
push
scas
adc
inc
cltd
and
mov
pop
lret
xor
mov
adc
aad
ret
test
mov
push
pop
mov
adc
outsl
jecxz
std
loopne
add
lcall
add
inc
mov
pmaxsw
cmpb
push
daa
imul
test
jae
jp
stos
outsb
fadds
scas
sbb
inc
push
arpl
sahf
or
dec
cmpsb
fisubrl
inc
fisttpll
outsb
lret
xchg
sub
push
mov
int3
lcall
fiaddl
out
aaa
pop
enter
sub
jno
clc
movsb
imul
gs
in
out
in
stc
movsb
pop
ljmp
in
lret
inc
and
mov
inc
add
or
add
iret
out
mov
cs
mov
mov
mov
shrl
les
or
adc
jnp
pop
test
sahf
cmp
jne
mov
lds
lds
mov
sbb
bound
adc
or
scas
sti
pop
ss
and
and
pop
das
push
int3
imul
movsl
push
cli
mov
in
push
iret
out
pusha
sbb
jg
dec
pop
mulb
xchg
sbb
push
lods
lods
addr16
mov
imul
mov
data16
xchg
mov
lret
jnp
mov
jecxz
aam
push
je
mov
mov
push
add
adc
add
shll
subb
je
xlat
shll
inc
dec
jle
ja
jg
jne
mov
daa
jmp
inc
mov
jo
dec
pusha
push
leave
shlb
mov
jne
testl
mov
jnp
fsubrl
aam
and
jecxz
or
pushw
add
sbb
jae
mov
in
insb
cs
mov
mov
aas
test
insl
cltd
mov
out
and
ds
cmp
aad
or
push
push
xlat
dec
movsl
and
cs
enter
mov
fcoml
int
push
push
lods
push
push
push
jo
or
mov
adc
xor
mov
cmp
adc
adc
cmp
cmp
dec
dec
jno
push
icebp
pop
pop
outsl
scas
dec
outsl
jno
sub
cld
hlt
mov
jp
push
shrl
adc
jmp
xchg
jl
pushf
sbb
jge
mov
in
sbb
and
aaa
cmp
das
lahf
pushf
ficoms
add
mov
icebp
add
js
lea
cltd
dec
jnp
push
daa
sub
mov
nop
sub
pop
inc
sub
push
xchg
cmp
imull
pop
cld
jnp
add
mov
js
fidivl
cs
fsubs
xor
pushf
mov
pop
shll
ret
outsb
mov
mov
pop
adc
xchg
pop
jg
loop
iret
in
pop
add
push
inc
in
fldt
dec
iret
popa
and
fldenv
aam
xor
cmp
pusha
xchg
xchg
ss
mov
ret
imul
adc
popa
insl
mov
mov
lock
cmp
or
jnp
fldt
icebp
sbb
xchg
out
je
sbb
cmp
pushf
jae
mov
xchg
xchg
shrl
inc
and
call
sub
lret
mov
dec
mov
ss
mov
scas
cld
popf
out
mov
lret
lods
pop
xchg
insl
sbb
sub
sub
dec
in
jp
test
aad
mov
daa
jl
xor
cltd
adc
aam
in
push
mov
push
xor
push
cltd
inc
iret
imul
xchg
int3
call
push
adc
xor
jnp
lods
dec
lods
xlat
adcb
pop
push
dec
push
fwait
jmp
pop
mov
movsl
push
jp
lods
add
sub
ljmp
in
jge
jmp
dec
lock
ficoms
pop
out
repnz
pop
fidivl
pop
cltd
mov
es
pop
xchg
jo
push
add
iret
sarl
push
jmp
push
mov
cmpsl
add
adc
enter
push
sar
cltd
and
inc
mov
or
loop
sbb
dec
data16
fidivrs
lods
cmc
aas
or
xchg
xchg
xor
push
out
pop
xor
sar
xor
pop
loopne
xor
push
mov
fs
movsl
mov
pusha
jne
inc
jecxz
cmpsb
adc
icebp
sti
mov
xor
popf
fwait
addr16
subb
and
xchg
xor
dec
mov
jmp
mov
ss
repz
pop
ss
jg
ja
pushf
or
add
daa
add
cmc
popa
leave
ret
cmp
jns
xlat
icebp
xor
arpl
stos
js
or
cmp
pop
mov
jae
imul
lods
and
test
incl
push
sbb
lea
mov
mov
pop
jns
js
push
mov
mov
rclb
addb
mov
cmp
je
aam
or
bound
or
add
jmp
xchg
fists
out
dec
sbb
dec
cmp
mov
sbb
sub
les
test
pop
sbb
dec
push
pop
in
sbb
push
inc
sarl
pop
std
jecxz
or
nop/reserved
pop
hlt
iret
jp
dec
imul
add
mov
and
xchg
sub
dec
dec
inc
scas
aaa
push
dec
cli
insb
lea
dec
sarl
pop
ss
jne
rcll
stos
ret
cld
mov
addr16
flds
add
aam
and
out
inc
lcall
in
mov
or
xor
push
test
ret
add
and
ss
pop
daa
jns
xchg
pop
flds
insb
xorl
fisttpll
cmp
mov
fcmovbe
add
jns
ss
jb
mov
andl
mov
mov
lea
scas
sti
stos
mov
fldl
pop
jnp
shrl
xor
jb
mov
jp
sti
int3
or
inc
data16
xchg
insb
sbb
cmp
cmp
or
jmp
fldl
xchg
fs
jge
int
mov
push
cmp
cmp
dec
jecxz
sbb
and
sbb
data16
pusha
ss
dec
sub
pop
sub
in
movsb
lcall
or
cltd
lods
mov
dec
push
mov
and
nop
pop
adc
xor
push
mov
cld
into
jo
mov
ret
mov
jecxz
out
outsl
xorl
sub
je
adc
and
push
jp
icebp
js
jbe
mov
data16
adcl
jae
outsl
inc
jo
dec
sti
lock
bound
push
cmpb
lcall
pushf
leave
mov
iret
cmpsl
jne
adc
and
add
leave
push
aaa
xor
outsb
dec
stos
lcall
xchg
xor
xor
dec
push
xor
mov
or
fcmovb
insl
ror
xor
push
sbb
adc
mov
and
or
xchg
jg
into
pop
inc
stc
jnp
ret
ds
pop
into
ret
sbb
inc
mov
flds
sub
ficoms
jno
fs
rcrb
orb
xor
cmp
dec
movl
pop
ja
cmpsb
mov
data16
dec
push
loop
shll
xchg
mov
stos
aam
shlb
fs
cmp
xchg
mov
inc
pop
test
push
mov
int3
fstpl
add
gs
inc
jae
and
syscall
mov
adc
adc
popf
pop
add
mov
dec
xor
push
shrb
jg
dec
popf
sub
push
js
add
repnz
lock
pop
mov
fsubrs
add
jno
inc
xchg
sbb
mov
jg
mov
int3
in
mov
js
mov
sbb
cmp
push
mov
outsb
and
icebp
mov
add
shrl
jmp
lret
addr16
das
lods
sub
and
shr
jmp
jg
rcrl
hlt
pop
out
cmp
inc
push
jge
pop
xor
sub
mov
es
mov
js
es
sbb
dec
jno
in
outsb
adc
push
mov
ret
mov
sub
mov
mov
jbe
add
xor
les
imul
outsl
sub
movsb
xor
out
push
push
sahf
or
inc
xchg
mov
orb
dec
sub
popa
mov
or
cmpsb
jnp
and
test
test
in
sbb
imul
dec
sub
int
repnz
and
mov
fdivp
lret
jge
push
jnp
push
mov
imulb
add
out
nop
lcall
pop
fildl
clc
es
cs
pushf
cmp
adc
lea
add
sub
mov
lcall
out
cmp
sub
mov
jle
push
insb
cmc
and
negb
add
xchg
inc
addr16
xchg
ret
xor
scas
out
int3
outsb
and
jg
mov
pop
test
xchg
mov
pusha
dec
cmc
push
jnp
sub
into
cmp
daa
push
mov
sbb
mov
dec
loopne
push
fs
pushf
cs
mov
in
aam
mov
push
cwtl
push
xchg
into
mov
out
inc
fisttpl
add
test
and
push
mov
arpl
sub
jp
jne
mov
sbb
scas
mov
stos
pushf
roll
push
sub
gs
fists
sub
aas
mov
mov
repnz
or
ficoms
jne
mov
fistps
xlat
mov
outsb
sbb
sub
call
call
mov
jle
lods
mov
pop
scas
shrl
stos
roll
add
push
xorl
mov
pop
pushf
icebp
pop
add
adc
push
loope
fidivl
std
outsl
aas
mov
or
les
jne
add
xchg
addr16
sbb
fstps
or
add
push
pop
popa
dec
mov
cmpsl
mov
adc
loopne
push
push
mov
add
jle
out
leave
das
je
jp
aaa
fs
push
or
pop
dec
into
mov
inc
mov
rcrb
repz
ret
pop
adc
pop
pushw
xchg
mov
outsb
movsb
or
mov
addl
add
loopne
loop
dec
lds
scas
ror
scas
jno
lods
and
ja
mov
aaa
fsubrp
and
in
pop
mov
mov
sub
mov
push
inc
test
pop
add
loopne
lret
sub
into
xchg
ret
repz
call
adc
add
push
or
sbb
shll
push
std
cli
fisttpl
cs
or
push
jmp
lcall
mov
lods
sub
jno
aaa
pop
mov
sti
mov
in
call
push
rcr
mov
scas
sbb
iret
pushf
push
adcl
mov
stos
add
mov
pushf
mov
add
mov
mov
lock
add
xchg
xor
das
pop
aad
jns
pop
dec
lds
sub
int3
dec
xchg
pop
lods
rorl
sub
mov
decl
hlt
mov
cs
nop
and
lock
xchg
push
cmp
fsubrl
add
ja
cs
mov
mov
inc
mov
add
pop
sbb
lret
mov
in
xchg
jecxz
sbb
pop
and
mov
out
adc
xor
adc
xor
ljmp
mov
clc
pop
jle
rorl
sub
stos
pushf
ljmp
fstpl
testb
les
pop
rcrb
cmp
out
icebp
call
push
out
jg
ret
in
xchg
hlt
ja
xor
add
push
add
mov
popa
loop
pop
in
push
xor
jl
dec
pusha
push
lret
aas
jno
sbb
mov
adc
sub
flds
xorl
cwtl
dec
xor
in
into
mov
insl
xchg
pop
pop
dec
mov
mov
pop
mov
sbb
inc
pop
nop
filds
cltd
test
sub
std
je
push
inc
sti
enter
ret
xor
and
lock
loop
into
sahf
imul
in
in
push
add
fbstp
or
arpl
mov
sahf
sarl
add
sub
nop
mul
push
mov
bound
mov
popl
pop
addr16
ljmp
lret
hlt
sbb
push
push
jo
or
adc
inc
mov
rcll
mov
jae
cmp
mov
sbb
fisubl
in
mov
ret
fwait
sub
sub
fidivs
stos
lea
movsb
stos
adc
fidivrl
mov
gs
imul
push
mov
push
pop
push
lahf
nop
aad
and
dec
sbb
movsb
lods
test
jno
push
pop
bound
add
pop
push
lret
add
out
and
js
xor
out
dec
lahf
push
pop
incb
push
mov
adc
sbb
ror
mov
leave
mov
jne
ja
dec
lret
movsl
add
rcr
sbb
fucomip
adc
mov
fwait
xor
insl
sbb
inc
and
mov
fildll
bound
or
cltd
add
test
push
jae
hlt
sarb
ret
jb
adc
loope
lcall
sahf
dec
shll
mov
cmc
jge
std
and
sbb
add
or
mov
xlat
adc
dec
repnz
xor
mov
insl
add
jno
sbb
sub
xchg
unpcklps
fwait
sub
adc
cmp
adc
lret
out
push
shrl
sbb
sbb
out
mov
div
rcr
sub
mov
mov
adc
xchg
movsb
xchg
test
mov
cmp
adc
add
ficoml
xor
scas
and
jmp
pop
lahf
and
adc
jp
aad
dec
adc
lretw
xchg
lock
push
push
lret
jge
and
popa
mov
dec
into
loopne
fwait
add
mov
loopne
and
mov
sbb
mov
cmpsl
cmp
adc
out
fmulp
adc
ja
rolb
aaa
jb
das
divb
rorl
lret
daa
jle
es
xchg
inc
aam
sarl
adc
xchg
ljmp
nop
repz
push
addl
pop
and
add
push
push
bswap
stos
lock
jmp
leave
push
xchg
mov
or
jo
mov
pop
test
dec
mov
xchg
pop
jbe
or
pop
inc
xlat
ja
sub
adc
fwait
inc
push
adc
sub
xchg
cmp
xchg
or
andl
mov
movsb
and
push
imul
les
jb
push
xchg
inc
aam
fldt
mov
push
pop
lahf
xor
mov
rcl
pop
xor
jb
inc
ljmp
pop
pop
gs
clc
faddl
imul
sbb
sarl
inc
rcrl
arpl
popa
call
js
arpl
mov
adc
cmpsb
scas
in
mov
xchg
push
ljmp
negb
jo
shl
loope
jg
sub
jl
pop
add
pop
and
mov
add
aas
test
sbb
fs
mov
mov
mov
mov
scas
jl
push
add
mov
ss
aas
cld
loopne
ljmp
adcl
dec
fstp
mov
sub
pushf
push
rep
sbb
cmp
jno
cltd
push
or
adc
xlat
push
orl
jle
mov
inc
dec
mov
sbb
dec
mov
aas
dec
insl
add
adc
cmc
ja
fisubl
arpl
xchg
jae
inc
sbb
dec
pop
gs
aad
mov
ja
fildl
inc
sub
jns
pop
movsb
ret
inc
pop
xor
or
mov
daa
stos
leave
mov
pop
pusha
loopne
add
loop
ret
mov
popa
loop
dec
scas
lcall
test
aad
inc
or
xchg
sbb
push
repz
pushf
mov
mov
dec
jle
cmp
add
cltd
push
sub
stos
js
xchg
add
jb
repnz
cmpsb
mov
push
icebp
aam
jne
or
mov
and
popf
inc
imul
xor
xchg
iret
and
mov
cmp
mov
xchg
xchg
sbb
pop
ja
iret
inc
sub
cmp
call
fwait
ret
mov
std
mov
js
cwtl
inc
imul
sbb
dec
aas
mov
lods
inc
cmp
pop
cmp
pop
sbbl
imul
ss
mov
lret
mov
ds
lahf
stos
sub
mov
jmp
mov
pop
popf
nop
push
jmp
inc
xchg
xchg
pop
xor
xchg
fsts
push
lcall
mov
xchg
popa
cmp
cli
cwtl
add
sub
pop
popa
loope
cmpb
popf
in
mov
cs
mov
add
inc
inc
nop
push
aas
xchg
push
add
stos
xchg
ret
push
scas
aad
fs
adcb
fisubs
dec
ret
pop
mov
mov
int
dec
aas
push
and
fidivl
pop
sbb
cmp
cmp
push
dec
sbb
loop
mov
mov
jp
jg
popa
loope
jle
rcrl
insb
push
repnz
push
ds
bound
xor
jbe
fstp
and
loopne
add
scas
xor
popa
lret
xor
bound
scas
lcall
stos
fwait
mov
and
xchg
fmuls
lea
leave
movsb
sbb
add
andb
shlb
and
xor
add
inc
lods
mov
xchg
xchg
popf
xchg
out
test
icebp
or
mov
stc
push
pop
xchg
mov
push
dec
fwait
pop
int
and
push
sub
xchg
adc
xor
mov
cmpl
int
out
jg
shr
inc
pop
pop
and
push
jnp
mov
rcll
sub
popa
gs
adc
loop
sub
cmp
lret
dec
imul
fdivrs
hlt
jno
mov
mov
lcall
cltd
stos
dec
push
push
cmp
lret
aam
dec
xor
xchg
add
adc
std
out
push
push
daa
inc
inc
jns
ljmp
inc
adc
subl
fpatan
jae
mov
mov
loopne
xchg
jecxz
ljmp
jge
jae
add
xchg
popf
xchg
clc
cmpsl
xlat
sbb
add
mov
test
inc
pop
sbb
inc
clc
mov
inc
test
dec
hlt
push
inc
pop
sub
add
pusha
xsaves
adc
xchg
cwtl
sbb
push
negb
cld
and
inc
lods
mov
call
fsub
push
sub
mov
cld
xor
repz
dec
scas
ret
incl
mov
loope
repnz
ja
ja
aam
aaa
xchg
mov
leave
repz
nop
xchg
add
xchg
sahf
jno
xor
ljmp
pop
nopl
jecxz
in
nop
and
xchg
sbb
sbb
mov
add
push
jp
jl
mov
mov
lea
stos
inc
js
xchg
loope
pop
pop
out
lock
or
push
xchg
sbb
mov
cmp
adc
or
cs
pop
push
es
xor
pushf
test
push
shl
enter
mov
int3
outsb
pop
mov
mov
jns
loopne
lret
jecxz
cmp
mov
das
cmc
shlb
movsl
push
call
lret
shll
mov
outsb
clc
fs
pop
dec
dec
or
fstpt
sbb
je
jge
sub
in
gs
dec
mov
add
xchg
movsb
add
rol
cmpsb
cltd
pushf
lret
cmp
inc
mov
shlb
ror
xor
js
xchg
stos
imulb
inc
shr
cmp
add
aam
lret
aam
mov
in
lds
add
mov
jo
sahf
shll
fwait
dec
aad
call
out
xchg
fildll
movsb
ja
mov
cmp
ljmp
mov
repz
out
xchg
mov
shll
out
pushf
add
or
lret
das
mov
stos
lcall
xor
mov
inc
or
cld
insb
mov
loop
aam
pop
cwtl
xchg
loop
fcmovb
sbb
outsl
inc
loopne
loopne
sbb
dec
add
dec
in
je
inc
in
pop
push
or
aam
jno
iret
add
jb
call
mov
icebp
mov
inc
mov
push
int3
and
repnz
adc
in
cwtl
sub
jecxz
dec
and
cmpsl
lods
mul
iret
jle
rclb
dec
pushl
ja
inc
imul
add
sahf
xchg
cmp
ljmp
xchg
cmpsl
ljmp
aaa
push
aad
jge
push
sbb
mov
pop
lcall
sbb
fdivrp
outsb
xchg
xor
xchg
xlat
jp
loop
push
cli
in
pop
loopne
jp
add
push
adc
cld
adc
imull
mov
push
xor
push
or
sub
icebp
outsl
ja
fidivs
sub
cs
and
pushf
adc
cs
sbb
in
mov
je
jl
push
jbe
xchg
outsb
mov
lea
adc
mov
mov
jo
je
and
insb
xchg
sahf
and
sbb
rcll
cmp
sahf
cmp
pop
jbe
sub
mov
outsl
jae
lock
sbb
mov
jl
fsubrs
inc
mov
sub
jecxz
push
cmpsl
inc
repnz
pop
cltd
aam
adc
pop
cld
ja
xchg
pop
dec
push
pushf
cmp
into
cld
lds
out
sti
repz
call
jo
insl
and
test
pushf
or
test
cmp
cmc
aad
adc
push
mov
mov
inc
lahf
sbb
movsl
mov
xchg
int3
pop
sarl
inc
jmp
sbb
fbld
rorl
push
dec
das
sub
fstpt
cs
test
pop
pop
insb
fildl
xchg
xlat
adc
jle
sbb
jge
iret
aas
shrb
push
int
cltd
mov
cli
mov
add
cld
mov
jno
sub
mov
push
enter
cmp
dec
or
and
imul
push
insl
push
push
mov
add
scas
pop
cmp
nop
xor
push
mov
stos
jns,pn
sub
repnz
bound
gs
stos
add
sub
inc
push
test
mov
cs
in
push
mov
push
shlb
jns
ds
iret
jle
pop
subl
sub
sbb
xchg
shlb
inc
mov
stos
push
out
xlat
xor
ror
jmp
aad
mov
das
push
sbb
jae
mov
ss
lcall
pop
push
adc
xchg
mov
rorb
aam
cmpsb
dec
test
fidivrs
push
movsb
pop
xor
icebp
repz
pusha
sbb
pop
mov
xchg
mov
out
and
pop
mov
out
sub
cmp
or
mov
sbbb
aad
add
xor
movsl
inc
pop
dec
mov
cmp
xchg
cmc
xchg
leave
daa
adc
jno
sub
fsubrl
xchg
filds
shrl
xor
test
aam
sbb
insl
lds
inc
sub
xchg
xchg
xchg
pop
es
cld
pop
mov
mov
jb
stos
and
and
sub
add
inc
or
mov
add
inc
add
pop
sbb
inc
jb
sbb
int3
and
lock
cmp
shll
jns
inc
lock
fidivrs
rorl
aaa
aad
or
mov
xor
mov
add
lahf
xor
std
inc
call
dec
xchg
mov
adc
sarb
aaa
mov
mov
insl
mov
cld
cmc
addb
call
push
pop
cmp
repz
int
xchg
pop
icebp
clc
pop
pop
adc
fidivrs
test
push
sub
int3
sub
je
inc
push
push
mov
lret
ret
cmpsb
lea
aam
ret
dec
mov
xchg
jbe
inc
cmp
adc
es
jae
aam
inc
and
sub
je
arpl
mov
push
mov
sbb
test
cmpl
and
mov
ret
mov
das
push
xor
cmp
mov
cmp
and
cli
insl
cmpsb
es
sub
and
mov
es
lds
cmp
jnp
add
jbe,pt
addl
sub
popf
movsb
xor
int3
daa
add
repz
movsb
loope
fdivrs
add
sbb
jle
mov
sub
cmp
push
pop
cmp
sbb
inc
icebp
mov
aam
adc
pushf
call
or
xchg
imul
push
pop
mov
or
add
out
mov
pop
mov
stos
mov
cwtl
sti
outsl
mov
jle
xchg
xchg
inc
loop
fildll
cmc
lret
add
adc
clc
add
push
fdiv
jle
mov
xchg
testb
pop
add
dec
cmp
xchg
xchg
push
add
fidivl
fwait
mov
pop
sbb
push
inc
xchg
inc
out
fsubl
push
push
adc
jecxz
cmp
jo
inc
pop
gs
fnstenv
or
mov
add
mov
mov
dec
mov
inc
outsb
dec
pop
fnstsw
jbe
jge
test
sub
add
mov
data16
mov
jnp
in
push
lds
hlt
std
or
adc
mov
or
push
into
ja
mov
imul
dec
enter
inc
aam
push
adc
shlb
mov
inc
repz
adc
cwtl
aam
add
mov
add
mov
adc
mov
int
inc
inc
mov
xchg
movsl
aam
out
push
fisubrs
mov
dec
xor
mov
outsb
mov
xchg
push
mov
or
pop
sub
xchg
dec
jb
push
sbb
outsl
xor
adc
xor
mov
enter
mov
fdiv
add
mov
cltd
adc
xor
sub
push
cmp
sub
xor
lret
fisubs
or
fisubl
out
mov
aas
aaa
ja
push
xchg
or
xchg
fwait
sub
xor
push
mov
call
lahf
aas
ffree
out
scas
sub
mov
xor
xor
stc
es
push
mulb
ja,pn
int
jge
jno
sarl
inc
mov
jmp
or
dec
ds
lret
sbb
jmp
outsb
lret
adc
xchg
and
imull
cmpsb
cld
test
ret
bnd
mov
ficoml
lods
loop
dec
data16
pop
into
in
pushf
mov
xor
mov
es
repnz
mov
in
lock
and
loopne
insb
out
mov
sbb
sbb
or
xor
and
cmp
push
addr16
lcall
insb
mov
mov
inc
int
mov
adc
xlat
mov
or
gs
push
add
shrb
mov
gs
movsl
dec
mov
add
jle
add
add
xchg
xchg
push
daa
xchg
gs
cmp
or
movsb
ljmp
insl
repz
dec
popf
shrb
pushf
fstl
cmc
mov
mov
adc
xor
sbb
cli
pop
mov
std
jg
add
andl
fistpll
sub
add
sbb
inc
pop
inc
loopne
jle
leave
decl
xchg
inc
cltd
xchg
cmp
inc
shl
es
xchg
and
inc
in
scas
or
bound
sub
adc
and
mov
xor
int3
in
push
negl
rcrl
enter
popa
sbb
add
testb
jae
pop
arpl
out
hlt
das
out
leave
icebp
orl
sahf
aaa
adc
enter
jno
push
push
cmp
js
add
into
jmp
dec
push
xor
loop
lret
in
popf
int
aad
pop
fldenv
sbb
cmp
sbb
pop
into
sub
sbb
movsl
or
xchg
hlt
and
rclb
aas
xor
mov
mov
xor
cwtl
sub
push
fbstp
lret
jo
mov
das
xchg
and
scas
call
cmp
addb
outsl
insl
rorl
push
xchg
sub
int3
bnd
mull
stos
mov
pop
iret
sbb
sbb
lahf
aas
add
push
pop
addr16
adc
gs
and
mov
jp
je
pop
xchg
jl
rorl
jl
sbb
add
or
loope
ror
push
and
sub
pusha
jbe
pushl
or
and
pusha
cltd
scas
sbb
mov
inc
mov
jmp
imul
jl
inc
jnp
add
jno
mov
loopne
mov
and
dec
arpl
mov
out
fnsave
dec
sbb
inc
lods
fidivl
xor
and
ja
test
sarb
mov
in
sbb
inc
in
inc
arpl
in
dec
roll
ficomps
pusha
xor
movsb
dec
shr
sub
fisttpl
xchg
mov
call
mov
ds
popa
cs
cmpsb
push
outsb
jp
cmpl
jo
push
inc
inc
fstpl
in
cmpsl
xchg
aad
push
in
mov
shlb
sbb
xchg
scas
ficompl
push
roll
sub
push
xchg
adc
cmp
ret
jecxz
cli
outsl
lods
fsubr
int
mov
aas
adc
dec
mov
pop
sbb
jne
cmp
adc
xchg
repz
sub
add
sub
inc
pusha
add
cmpsb
and
dec
mov
adc
in
test
loopne
fadds
mov
and
mov
sti
sub
pop
add
mov
int
jb
fisubl
das
mov
dec
inc
mov
mov
inc
cli
das
jg
outsb
test
and
aam
popa
push
mov
test
bnd
pop
mov
ss
aaa
pop
add
sbb
and
push
xor
test
push
cmp
push
std
cs
sbb
push
jae
pop
or
sbb
xchg
flds
nop
jne
jbe
je
xchg
or
jg
outsb
rorb
outsb
jae
adc
fwait
pop
daa
jp
sbb
inc
mov
lods
inc
stc
popa
aas
mov
adc
in
push
sub
jns
int3
fnsetpm(287
jnp
inc
sbb
cmp
mov
sbb
lcall
adc
insw
push
divl
movsl
cmp
cli
mov
gs
stos
cmpb
mov
shll
pushf
inc
xor
inc
pop
cltd
mov
out
or
push
cli
jge
mov
xorl
mov
scas
or
lcall
mov
pop
mov
sub
pop
dec
jl
xor
pop
mov
fwait
inc
dec
dec
sub
gs
sub
cltd
fdivrl
pop
sbb
xorl
loop
inc
fldenv
out
fwait
mov
adc
scas
and
cmp
mov
clc
cmp
ds
push
ret
out
xlat
inc
imul
das
aam
fwait
ja
ss
ret
movsb
jo
cmp
movsl
decl
mov
in
sbb
or
int
jp
mov
cld
jno
push
stc
rcrb
enter
jne
lret
imul
jb
cmpsb
inc
imul
mov
sbb
dec
sub
jg
inc
adc
bound
popf
add
inc
mov
mov
fwait
push
data16
push
jo
add
aad
addr16
popf
fsubs
xchg
pop
aad
mulps
pusha
push
popf
cmp
adc
dec
dec
jmp
or
or
inc
js
inc
in
out
or
push
pop
out
repz
dec
loope
cmp
ds
xor
lcall
jbe
mov
shl
hlt
scas
test
sub
push
aad
movsl
in
add
cli
xor
adc
cmpsl
mov
cltd
pusha
je
jb
push
ljmp
rolb
cld
mov
push
jb
jmp
enter
imul
mov
push
lods
jno
repz
sbbl
mov
out
inc
loop
mov
lock
orl
dec
ljmp
push
stc
shll
in
fsubs
push
xor
repnz
xchg
es
in
adc
dec
pop
add
rolb
mov
adc
insb
push
in
inc
enter
jl
addb
mov
adc
jo
ret
xchg
les
popf
outsl
xchg
jp
mov
xchg
mov
xchg
dec
push
cmp
jno
popf
jne
out
mov
mov
sqrtps
nop
and
int
mov
jbe
sbb
sbb
in
in
mov
rdmsr
mov
cmp
add
mov
mov
xchg
imul
mov
or
pop
enter
lcall
sub
xchg
stc
add
inc
push
jge
mov
add
mov
jne
outsb
cmp
ljmp
fists
mov
sbb
xchg
les
lock
mov
stc
inc
xchg
out
xchg
sbb
inc
in
ror
fyl2xp1
out
add
loopne
sub
add
push
sahf
fistl
scas
mov
lods
cs
popf
repz
push
iret
cmpsb
in
fs
leave
inc
pop
adc
les
fdivl
fstpt
cmp
mov
mov
popl
cwtl
add
lock
dec
pop
scas
stos
out
lret
imull
das
sbb
mov
mov
aas
sbb
push
lods
jp
cli
lock
push
and
jmp
push
and
jbe
xchg
mov
iret
push
push
jb
ret
int3
sub
adc
dec
stos
ret
jne
ljmp
or
fdivr
cmc
call
push
movsb
push
mov
rolb
jno
cmp
jb
aad
inc
or
push
fiaddl
gs
iret
loopne
out
pusha
sub
xor
cmpsb
and
cmp
xor
push
outsl
pusha
pop
or
cmp
ficoml
pop
imull
loop
push
or
iret
test
mov
rcrb
xor
mov
pop
imul
cltd
ss
pop
sub
fdivl
jl
pushf
pop
sub
rorb
in
inc
mov
mov
xchg
and
lret
clc
icebp
dec
test
inc
sub
or
push
push
sub
mov
dec
jnp
mov
pop
mov
cmp
mov
in
push
cmc
pop
mov
lods
loopne
incb
mov
enter
inc
loope
test
cmp
inc
insb
or
arpl
mov
lods
lea
and
pop
aad
add
lds
bnd
ss
arpl
and
push
jmp
push
xor
pop
popf
insl
dec
add
push
aas
jg
adc
mov
and
jno
jns
push
sti
mov
shll
fs
adc
std
shrl
mov
adcb
popa
sbb
fidivrs
jp
shrl
in
mov
mov
jg
lock
pop
xchg
xchg
daa
cli
in
sbb
jno
jg
adc
loop
faddl
pop
ret
cwtl
repz
fwait
jp
movsl
sub
movsb
negb
std
test
js
jo
aam
add
fldcw
es
in
pop
pop
xchg
ret
push
leave
push
shlb
lret
repz
test
aas
lret
loopne
fcoml
out
mov
flds
mov
sub
xor
pushf
xorl
sahf
inc
inc
dec
xor
or
push
inc
or
icebp
cmp
xor
rclb
inc
push
mov
jle
mov
bnd
scas
jmp
mov
jae
cmp
xchg
pushl
inc
mov
push
shll
xchg
adc
sbb
push
pop
cmp
loopne
fbstp
fnstsw
das
xchg
out
push
dec
xchg
ja
stos
insl
xor
rcrb
cmp
mov
push
add
call
push
jo
cmp
xor
xchg
adc
jge
bound
int
mov
dec
sahf
jo
sub
cmp
daa
push
mov
test
lods
mov
pop
jecxz
mov
mov
int
jecxz
cli
pop
mov
idivl
aas
es
push
notb
pop
dec
sub
jle
push
in
out
sub
xchg
cmp
lods
sub
daa
xor
loop
cmpsl
ja
test
repz
and
mov
jae
fidivrs
pusha
lock
sbb
fwait
imulb
repnz
cmc
xor
mov
jge
push
test
or
imul
adc
xchg
cmp
ror
push
fdivs
inc
arpl
pop
fldcw
aam
lret
pop
sbb
jnp
inc
and
push
mov
subl
icebp
xor
test
inc
pop
or
rcll
push
mov
mov
lds
test
insl
pop
int3
or
loopew
xchg
pop
fistl
add
ficoml
and
dec
out
leave
mov
jns
inc
inc
jg
imul
jb
dec
int3
or
rcr
sbb
inc
xchg
push
lds
pushf
data16
leave
jne
hlt
cmc
xchg
fwait
cmpb
adc
jl
mov
loop
sbb
rclb
ss
sub
push
movsb
jne
repz
addr16
push
xchg
mov
jne,pn
loopne
jmp
sub
lods
add
add
mov
mov
push
pop
pop
or
fs
es
aaa
sbb
fistpll
fistps
fadds
mov
or
andb
arpl
les
xchg
cmpsl
fisttpll
and
or
mov
push
outsl
je
dec
add
cs
pop
sbb
fs
lcall
add
mov
test
jns
mov
loope
lahf
popa
cmp
fwait
out
and
popf
xor
and
add
into
inc
mov
mov
sti
pushf
and
js
fxch
push
sar
cmpsb
push
pop
inc
mov
mov
add
adc
test
in
add
xchg
enter
outsl
nop
lock
mov
and
mov
sbb
mov
xor
inc
xchg
add
push
sbb
je
cld
xchg
dec
ror
dec
or
pop
test
xabort
push
or
je
pop
mov
pop
ds
das
lahf
adc
jg
xchg
scas
stos
repnz
das
pop
jp
jl
into
adc
fimull
es
scas
mov
sub
sbb
mul
lods
cld
sbb
jo
or
inc
pop
mov
pushf
jno,pt
out
xchg
in
fmull
mov
out
daa
out
mov
enter
mov
and
mov
xor
pop
mull
sub
mov
xchg
das
call
cmpl
mov
lock
mov
mov
xor
test
lds
aam
sub
inc
inc
je
sub
and
and
xor
lods
sub
repnz
in
sbbb
cmp
stos
bound
mov
test
sbb
mov
mov
and
das
call
sub
adc
aas
aas
add
test
inc
iret
add
jns
in
arpl
into
push
bswap
inc
fstpl
test
jmp
mov
jecxz
rorl
mov
scas
adc
leave
mov
pushf
push
ss
idiv
pop
add
fiadds
test
lods
xor
sub
insl
lret
pushf
xor
into
enter
adc
rolb
aaa
inc
and
mov
mov
push
jae
mov
xor
sarl
pop
pop
xchg
mov
adc
dec
add
mov
pop
dec
jb
inc
push
cmp
cmp
dec
mull
push
sbbl
icebp
mov
frstor
add
adc
int3
lret
xor
lds
add
pushf
sarb
aas
popf
fisubs
in
repz
mov
mov
jbe
pop
pop
ret
fs
fwait
std
out
sbbb
notl
repz
in
xor
ffreep
loopne
xchg
repnz
add
mov
divl
out
sbb
dec
xchg
cmp
fsubrl
jne
bound
and
inc
movsb
or
and
and
pop
xchg
add
and
js
cmp
int
mov
jbe
pop
fidivrs
int3
mov
rcl
pop
scas
in
pop
mov
out
sub
test
scas
int3
insb
cmp
jnp
sub
std
sbb
jle
dec
mov
push
dec
and
xlat
loope
mov
jle
rcrb
adc
les
and
xlat
pop
leave
out
movsb
jb
xor
inc
lret
test
dec
decb
nop
and
mov
push
sbb
rcr
cmpsb
int
pop
std
scas
inc
push
cmp
sub
adc
icebp
fwait
inc
and
jns
adc
mov
push
fs
in
push
call
sahf
fimuls
inc
xchg
mov
add
shrb
push
stos
or
jg
es
sub
mov
test
fadd
dec
sarl
and
and
mov
ljmp
jns
mov
adc
outsl
sub
add
mov
add
mov
mov
insb
jne
lcall
add
mov
ret
push
insl
cltd
xchg
mov
xchg
dec
jo
push
and
jge
jae
mov
cli
inc
pop
adc
add
adc
repnz
ret
add
ret
ja
test
bnd
or
lret
mov
fadds
mov
insb
xchg
cmp
xor
add
test
xlat
xlat
outsl
or
cmp
add
dec
stos
inc
mov
mov
cmp
push
fwait
mov
jg
push
fdiv
and
sahf
inc
mov
dec
xchg
loope
enter
mov
mov
jecxz
xchg
mov
or
push
cltd
aam
mov
add
fwait
mov
and
mov
ljmp
jecxz
xlat
and
or
mov
lahf
test
arpl
inc
cmpsb
lods
sahf
fldcw
dec
or
mov
jno
insl
test
rcrl
jmp
mov
cmp
rolb
pop
xor
xchg
notb
pop
iret
ret
pop
out
pop
jno
icebp
xor
pop
jne
ss
push
into
push
xchg
cmp
call
xchg
in
mov
cmp
cltd
add
mov
mov
adc
dec
xrelease
lods
xchg
pushf
push
inc
mov
adc
mov
xchg
push
inc
and
int
rcl
cmove
cmp
cmc
pop
jne
adc
jb
inc
call
dec
pop
push
cmp
dec
xchg
xor
fildll
out
fnstcw
sub
dec
mov
std
iret
xor
mov
in
call
mov
sub
int3
popl
jg
xchg
push
enter
inc
lods
lahf
or
or
inc
repnz
pop
jb
push
jno
and
jle
pop
push
push
dec
and
inc
leave
xor
jns
or
adc
imul
pop
sbb
inc
jmp
and
shl
ret
call
lret
in
daa
clc
pop
out
xor
mov
add
pushl
popa
test
mov
mov
lcall
fisubrl
cmc
adc
add
ret
shlb
dec
sbb
sbb
pop
rep
jge
cld
adc
dec
jge
dec
cmp
rcrl
inc
fnstcw
fisttpll
xchg
jmp
or
mov
aad
pusha
pop
es
iret
fstpt
inc
stos
dec
inc
pushf
enter
add
popf
add
xchg
pop
mov
pop
xchg
pop
mov
leave
mov
idivl
lods
sbb
lret
aam
sbbb
das
mov
mov
pop
loope
jbe
xor
xchg
orl
xchg
and
cmp
lcall
insl
cltd
mov
mov
mov
scas
lock
call
imul
iret
imul
pop
mov
or
out
ror
lret
or
ror
orb
and
push
movsl
testb
and
shrl
or
dec
xor
dec
jne
pop
mov
push
es
scas
ss
fidivs
stos
xlat
and
popa
jle
cltd
cmpsl
mov
dec
in
ror
das
sub
sti
fs
xchg
mov
js
outsl
pop
push
push
adc
lods
and
jg
mov
cmp
xchg
push
mov
and
shll
addb
dec
sbb
loope
xchg
mov
roll
cmc
add
clc
scas
push
mov
fistps
push
push
add
or
and
bound
push
jmp
push
fstl
xchg
pop
push
ljmp
clc
adc
movsb
sti
popf
xor
inc
cmpsb
insl
adc
mov
xchg
in
xor
sbb
mov
int3
and
cltd
test
adc
inc
adc
mov
push
out
adc
mov
ret
pop
repz
pop
cmp
lret
inc
shr
jmp
jg
add
pop
bound
or
push
xor
or
shlb
repz
lock
mov
jno
bound
repz
xchg
aad
and
mov
movups
xchg
in
dec
mov
shll
xor
pop
push
cli
cmp
imul
shll
sahf
dec
dec
popa
jle
mov
inc
inc
add
push
lcall
les
pop
adc
mov
push
clc
call
xchg
push
add
lock
pusha
mov
inc
lods
loopne
gs
lea
jmp
sub
sub
sub
adc
jg
mov
dec
shlb
and
pop
lods
loopne
lods
loopne
inc
lea
stos
jp
jbe
in
in
negb
xor
pop
add
inc
pushf
push
add
cmpsb
jmp
mov
pop
lea
mov
adcb
inc
xchg
or
dec
mov
ss
stc
push
jmp
lret
pop
addb
mov
leave
outsb
sub
mov
push
shll
and
orb
jmp
xor
pushf
jne
ficomps
cmpsl
dec
lret
and
jmp
push
jmp
xchg
mov
sub
test
lds
mov
cwtl
lock
adc
dec
jns
ret
pop
dec
shl
jle
sub
in
add
mov
cmpsb
jno
dec
pop
addr16
adc
sbb
aas
imul
pop
hlt
cwtl
stos
ljmp
jmp
imul
out
lahf
push
ds
mov
cmp
adc
imul
inc
mov
stos
call
inc
add
in
sub
push
jecxz
pusha
jl
daa
add
add
push
jnp
adc
adc
test
ja
mov
cmp
add
mov
jne
aaa
jl
pop
jle
jle
fidivrs
aas
pop
add
add
xchg
mov
lret
mov
inc
mov
xchg
push
xchg
and
mov
and
scas
fcmovu
mov
repz
cwtl
dec
dec
clc
cmp
mov
lcall
lds
lods
mov
icebp
mov
add
dec
add
push
stos
repz
sbb
xcrypt-ofb
cmpsl
lods
cltd
lret
inc
pusha
dec
xor
enter
push
ss
dec
and
mov
cwtl
pop
ficompl
jmp
push
clc
push
daa
imul
lahf
in
cwtl
out
sub
nop
and
jmp
push
and
xchg
mov
sbb
and
int
add
nop
lret
mov
mov
negb
cmp
adc
cs
xor
rorl
sbb
cmp
cmp
cmc
sar
fidivl
mov
push
inc
mov
pop
sub
andb
aaa
test
out
cltd
ljmp
fwait
mov
ret
ret
pop
scas
arpl
cmp
pop
fwait
dec
aam
adc
pop
test
mov
lcall
push
fs
andb
cmp
loope
fs
rep
daa
mov
mov
fcmovnbe
dec
mov
xchg
xor
xor
mov
push
loope
jns
mov
xchg
add
imul
mov
shll
mov
test
lods
xor
lods
xchg
xchg
jb
mov
inc
xor
xchg
inc
sbb
loopne
scas
mov
xlat
mov
aas
ljmp
or
popf
and
adc
aaa
xor
jbe
xor
fmull
std
xchg
adc
push
in
xor
dec
mov
ret
push
sub
adc
lds
aaa
nop
lods
jae
imul
push
daa
fs
in
jb
data16
xchg
rcrb
jmp
cmp
cmp
out
dec
mov
adcb
sbb
and
pop
inc
push
xor
mov
fisttpll
mov
mov
and
insl
out
push
push
insb
xchg
les
inc
pop
sub
mov
or
cmp
push
mov
jnp
inc
aam
lods
jae
loopne
push
xor
ja
loop
jne
sbb
xchg
mov
daa
cmp
ljmp
testb
push
jecxz
test
push
stc
xchg
mov
scas
push
out
pop
enter
jle
ficomps
cmp
add
xchg
sbb
mov
rcrl
lock
scas
sbb
jne
push
cmp
pop
cli
xchg
call
cwtl
and
push
xor
dec
fwait
iret
add
adc
and
pushl
push
les
int3
popa
sub
sub
sarl
in
cmpsb
sub
jp
jmp
hlt
aam
dec
sub
xchg
cmp
pop
in
arpl
push
addb
adc
leave
xor
push
pop
ljmp
pushf
lock
lods
pop
xchg
pop
sbb
jne
xchg
hlt
decb
fimuls
mov
mov
inc
jae
lahf
mov
in
dec
ljmp
and
mov
pop
cmpl
sbb
mov
push
popf
call
xchg
mov
push
lret
pop
mov
insl
movsb
xor
add
fsts
lcall
rcrb
or
popf
mov
pop
ret
mov
pop
sub
shll
ret
xor
lea
xchg
inc
pop
mov
cmp
out
adc
movsb
mov
dec
aas
jo
ja
nop
mov
jle
mov
pusha
sbb
out
mov
push
jl
aas
and
push
push
lret
in
test
add
call
jb
adc
push
mov
mov
push
mov
mov
in
adc
jmp
mov
adc
inc
out
inc
push
fistpll
jne
mov
cli
fnsave
push
fcomip
inc
mov
sbb
lock
push
pop
rcll
cmp
sbb
or
push
and
push
push
cmp
mov
xchg
movsb
push
mov
mov
int3
jnp
dec
jle
test
xor
mov
out
or
push
add
mov
cld
cltd
leave
iret
push
add
movsb
or
stos
mov
js
outsb
push
or
mov
push
dec
jp
std
xchg
mov
push
rcr
push
jns
scas
mov
fisttps
or
xchg
cltd
incb
in
pop
bound
lcall
fsubrs
mov
stos
test
call
test
lea
call
ds
and
xor
scas
push
and
addr16
mov
movsl
add
sbb
cli
inc
pop
mov
push
pop
enter
es
and
pop
and
xchg
repz
pop
imul
pushf
addl
mov
mov
je
sbb
mov
and
pop
push
inc
out
cmpsl
push
in
xchg
lea
ds
arpl
rorb
fmull
shlb
or
inc
int
pop
mov
mov
xchg
adc
or
je
and
or
jl
ljmp
jnp
mov
aas
pusha
push
ljmp
shr
xor
test
call
push
dec
adc
repnz
into
cmp
xor
mov
int
in
sub
jns
loop
dec
mov
sbb
fwait
in
xchg
cmp
push
test
les
mov
cli
addr16
or
inc
lret
dec
mov
repnz
sub
lret
dec
jle
jl
fdiv
jp
jg
mov
rcrl
sbb
fisubl
mov
cmp
jmp
aad
lret
aaa
xchg
mov
ret
add
movsb
adc
jge
pop
pusha
mov
add
nop
mov
fists
mov
fbld
xchg
decl
das
lods
dec
xchg
es
hlt
push
push
stos
adc
adc
inc
sti
xor
mov
push
xor
adc
rcl
mov
rolb
jg
and
test
and
cmpsl
adc
add
test
orl
inc
lret
adc
pop
or
rol
dec
add
pop
push
lods
dec
lock
jne
or
aad
test
push
popa
dec
lock
xor
and
inc
lods
sarb
pushf
pop
cmp
dec
sub
adc
inc
pop
dec
jns
icebp
and
test
xchg
out
faddl
test
aas
fcompl
mov
aad
sbb
push
sbb
sub
dec
mov
xchg
loop
push
push
mov
push
pop
inc
stos
dec
xlat
movsl
ret
test
shrd
mov
sbb
into
xlat
loopne
xlat
adc
pusha
xchg
das
les
jnp
push
insl
inc
shll
cmp
push
mov
mov
shll
mov
add
pop
xor
lods
ret
decb
repz
xchg
mov
std
jmp
dec
push
popf
orl
stos
lret
out
mov
jb
xor
fbstp
outsl
addl
popa
xchg
dec
cmp
and
pop
iret
and
or
roll
test
shrb
out
pop
outsl
inc
daa
popa
fs
bound
sub
mov
inc
mov
fiadds
rorb
lods
in
test
mov
in
cmp
jb
add
jo
adc
pushf
xor
xchg
jge
mov
cmp
jo
inc
arpl
fbstp
or
push
cmp
in
leave
test
sbbb
xchg
incl
stos
aad
add
push
dec
jge
rorl
push
cmpsb
int3
int3
or
ljmp
adc
xchg
subl
ja
out
add
test
sub
addl
jp
xor
repz
push
test
addl
push
pop
cs
icebp
jnp
jae
icebp
ja
lea
addr16
lock
push
sti
sbb
add
call
cmp
fcoml
cmp
mov
lods
iret
mov
nop
fsts
jecxz
test
sbb
push
pop
add
fildl
mov
bound
in
test
push
xchg
jle
cmpsl
and
dec
mov
mov
rcll
outsb
je
sahf
adc
or
incb
repz
jne
pop
sub
inc
fsubrl
repnz
in
dec
push
add
or
mov
lds
cmp
jo
roll
outsb
jb
js
or
dec
outsl
xor
mov
adc
push
dec
loop
add
jbe
imul
mov
sbb
cli
stos
cwtl
inc
xor
fsts
filds
fiadds
jg
jp
inc
mov
in
dec
xor
jnp
sti
addr16
les
mov
test
push
cltd
repz
addb
mov
and
aaa
movsb
and
cmp
scas
lock
call
out
jmp
inc
lret
push
sub
mov
fs
mov
lea
jp
sar
jecxz
inc
mov
jb
xchg
in
sub
xchg
push
mov
sbb
ja
pop
mov
mov
jp
jae
repz
sar
sbb
mov
lret
leave
jp
xchg
test
flds
jle
and
push
adc
mov
dec
adc
adc
nop
mov
xchg
ja
movsl
int3
jp
stc
xchg
sti
lea
aas
mov
sbb
cmp
sbb
stos
movq
imul
lcall
add
aas
test
jo
fcmovnu
hlt
mov
stc
or
push
pop
cs
sbb
inc
jae
mov
insb
call
or
mov
mov
jp
stos
cmp
ret
xor
or
aam
dec
dec
loop
outsb
insb
adc
loop
cld
adc
xchg
fdivrl
into
xor
pop
stc
movsl
fsubrl
lea
std
outsb
sbb
ljmp
xchg
js
inc
sti
rcll
jo
mov
sti
or
jbe
sub
xchg
inc
sbb
sub
inc
ss
addr16
add
and
shrb
sbb
mov
sbb
cli
jl
sbbl
xchg
xor
aaa
sub
mov
call
repz
and
and
fnstcw
daa
xchg
negb
push
jp
nop
sbb
test
test
aad
jmp
dec
fnstenv
fxch
mov
repz
push
fcomps
pop
inc
int
or
jae
mov
sub
dec
mov
jne
pop
xorl
mov
or
push
cmp
scas
popa
cmpsl
out
mov
imul
and
jae
cs
adc
pop
loope
in
jg
lcall
out
dec
jns
mov
add
shrb
pusha
cmc
mov
fildl
cli
cmp
mov
cmpsl
mov
dec
lea
out
adc
ret
call
ret
fwait
nop
mov
movsb
rolb
fs
ret
lret
in
mov
cltd
rorl
mov
fnsave
lock
adc
sbb
xchg
mov
ds
aad
push
jge
out
push
into
inc
cmc
mov
inc
fst
cs
cld
or
mov
popa
ss
and
fisubl
push
cmp
mov
xchg
test
inc
adc
int
pusha
ret
add
and
call
aaa
cwtl
pop
sub
mov
jl
mov
bound
notb
pop
inc
dec
andl
out
jb
jb
movb
mov
jg
sahf
mov
add
add
dec
das
add
cmp
sub
lret
stos
mov
mov
mov
test
mov
popf
ficoms
enter
push
mov
mov
sbb
in
enter
sbb
shr
jl
ret
or
mov
add
repz
repz
push
push
inc
leave
mov
xchg
inc
push
or
mov
js
int
es
stos
les
daa
mov
push
xchg
push
gs
enter
clc
inc
lahf
test
jle
xchg
roll
mov
out
fildl
fmulp
push
out
pushf
fcmovu
dec
adc
cmp
daa
mov
ret
adc
ret
and
adc
lret
mov
nop
cli
push
fwait
outsb
sub
sbb
xchg
aam
in
imul
movsl
or
je
or
call
jp
push
mov
and
popl
mov
lea
or
out
lret
movl
testl
iret
sbb
mov
pop
mov
or
rcr
jl
xchg
outsb
ror
mov
pusha
xor
mov
lock
ds
daa
cltd
xchg
inc
dec
and
push
xchg
mov
push
frstor
ror
sub
xchg
andl
or
xchg
pop
roll
jp
pop
loopne
dec
inc
jae
test
aaa
in
cs
dec
sbb
fnstsw
jge
adc
sti
outsb
xchg
test
dec
scas
push
cmp
jmp
loope
push
iret
cmp
js
mov
fwait
aas
cmc
lret
out
mov
add
and
mov
and
popf
jo
das
add
dec
dec
data16
pop
aam
jp
das
add
xor
in
mov
dec
or
mov
or
inc
pop
out
insb
adc
inc
leave
and
stos
sub
aam
or
andnps
lock
lds
pop
mov
add
or
mov
add
int3
mov
jae
cmp
ret
sub
jge
xchg
cmp
ja
cmp
push
mov
cmp
dec
call
jmp
sbb
sbb
int3
cmp
jg
fs
fs
xor
fimull
push
xor
orb
fmuls
cmc
dec
pop
sub
roll
not
test
cmp
icebp
jmp
xor
pop
stos
xchg
stc
cwtl
loop
adc
cmpsl
push
cmpsb
movsbl
mov
mov
iret
lock
inc
xchg
add
scas
dec
fimull
addr16
insl
lds
filds
dec
lea
pushf
mov
cld
cwtl
shll
leave
fnsave
add
imul
jmp
push
cmovs
lods
lea
lds
lds
dec
in
mov
lock
test
mov
push
xor
xchg
les
and
push
adc
xchg
shll
inc
dec
mov
icebp
es
aam
cli
pop
pop
in
idivb
scas
cmp
mov
mov
add
inc
mov
push
call
into
push
movsl
add
cmp
cltd
or
pop
gs
mov
xor
ljmp
jg
pop
fimull
pop
aaa
cld
sbb
dec
adc
push
jg
shll
inc
adc
idiv
push
sub
pushf
repnz
fsub
lds
daa
scas
push
pop
jp
movsb
mov
mov
cmp
pop
mov
ret
sbb
or
or
cmpsb
test
jnp
sar
sub
dec
rcll
repnz
int
popl
sbb
mov
mov
add
add
mov
sbb
push
call
inc
sbb
dec
jmp
jecxz
add
pop
stc
jo
cmc
es
jecxz
push
movsb
mov
leave
push
daa
sbb
push
mov
dec
rcrl
loop
ficompl
push
mov
js
in
test
sub
js
rclb
push
xor
loop
insb
mov
jo
xchg
adc
enter
and
int
imul
push
mov
xchg
dec
pop
insl
arpl
mov
inc
ja
inc
shll
sbb
shll
xor
or
adc
and
cwtl
je
mov
insl
movsb
lock
xor
test
cmpsb
stos
in
sub
push
adc
or
in
or
or
insb
gs
push
aam
test
push
dec
dec
outsb
mov
loop
sbb
push
adc
repnz
push
pop
ss
mov
or
xchg
push
mov
pop
pop
insl
int3
add
pusha
or
popf
je
xor
sub
pop
xchg
xchg
lcall
fimull
cltd
xor
jo
mov
cmp
sbb
and
cltd
push
sub
mov
rorl
out
xor
push
fs
inc
inc
js
xchg
call
adc
jno
mov
and
push
mull
dec
and
jge
stos
mov
pushf
fistpll
push
add
add
xor
hlt
add
jae
fwait
repz
push
or
add
xor
fimull
push
push
adc
testb
imul
in
mov
test
test
mov
sub
add
aam
loopne
nop
and
cltd
and
push
ret
outsb
ss
test
add
test
xor
dec
jne
jge
out
and
jbe
push
adc
icebp
lret
or
orb
popf
mov
pop
insl
movsb
das
fdivrl
cwtl
gs
add
fs
mov
inc
xor
int3
jo
mov
les
imulb
stos
jns
pop
rorl
in
std
in
negb
jns
jo
aad
lahf
xchg
cli
adc
xor
ss
outsb
jae
test
ss
es
imul
push
mov
aaa
fucomi
mov
fistl
rorb
hlt
jle
jne
inc
jmp
sbb
or
and
pop
sub
fisttpl
jno
rorb
xchg
shlb
sub
inc
sbb
sub
scas
aad
pushl
sub
scas
xor
sbb
jae
rorb
hlt
mov
test
sti
int
leave
int3
scas
cli
out
out
out
fsubs
mov
and
mov
sbb
aaa
stc
sub
dec
lcall
daa
jbe
add
push
push
jmp
xchg
mov
orl
sbb
std
iret
out
inc
fsubrl
popa
adc
lods
xor
fs
movsb
roll
out
jae
dec
xor
add
cmp
jg
adc
enter
add
jno
pop
jnp
xchg
push
sub
pop
and
adc
push
pop
test
andb
pop
mov
outsl
mov
cltd
jmp
cmp
dec
xchg
xchg
dec
gs
nop
cmp
repz
pop
lods
int
pop
loopne
pop
mov
pop
sbb
les
test
call
iret
xchg
mov
or
aam
aaa
mov
xchg
add
outsl
mov
inc
rorl
and
ficompl
mov
mov
add
scas
or
jecxz
xor
jmp
flds
and
ja
mov
mov
sbb
and
fwait
cmp
sarb
add
and
or
xlat
lods
dec
jns
and
push
stos
aaa
xorb
xchg
int3
push
fldcw
lods
andb
dec
add
sbb
shll
les
and
aad
repz
lods
mov
sub
ret
movsl
push
aaa
cmp
mov
jne
add
aam
int3
shr
cwtl
cmp
pusha
mov
out
mov
mov
or
daa
int
cwtl
loop
call
sti
lret
sbb
dec
int3
mov
push
push
jmp
ret
popf
sub
loop
adc
adc
rorb
push
orl
mov
pusha
mov
jg
mov
test
dec
mov
pop
idivl
pop
adc
insb
pop
incb
add
dec
push
push
push
sub
rdpmc
test
popf
fbstp
adc
or
or
int
dec
jb
cmp
and
pop
pop
xchg
adc
add
inc
insb
aad
iret
xchg
pushf
insb
movsb
add
mov
sahf
jp
and
adc
ret
into
repnz
add
les
sub
pop
pop
pusha
je
adc
and
cmp
call
jbe
nop
loope
int3
xor
push
jge
inc
inc
arpl
shll
fildll
adc
mov
rolb
xlat
cmpsl
in
je
fucomi
jns
sbb
fisubrl
int
push
and
call
dec
lahf
aaa
fisttpl
in
fildll
push
sarl
lods
sbb
mov
lea
mov
inc
add
mov
sbb
cmp
or
xchg
and
in
mov
mull
popf
push
inc
ss
mov
xor
xchg
pop
push
mov
sbb
pop
outsb
sub
lods
test
lret
push
pushl
mov
call
adc
push
mov
mov
sbb
inc
es
and
std
xor
cmp
cld
cmp
test
jbe
inc
cli
sti
std
mov
popa
jns
jge
jno
push
nop
stc
mov
mov
xlat
or
lret
cwtl
mov
mov
sbb
ss
and
in
aad
xor
cmp
xor
jnp
dec
xor
mov
xchg
std
rcrb
or
xor
mov
xor
pop
xor
xor
cmp
lret
ja
rcl
cmpsb
xor
call
or
sbb
rcrl
dec
int3
xor
daa
xchg
add
aad
pop
ret
mov
xchg
in
mov
add
xor
mov
loop
adc
enter
inc
ret
out
data16
popf
dec
push
mov
mov
jno
movb
fistl
iret
iret
push
add
jo
out
xor
daa
jbe
mov
pusha
push
dec
adc
inc
fcompl
inc
lods
xchg
sbbb
repnz
jnp
xchg
scas
add
pop
pushf
clc
xchg
clc
inc
js
push
cltd
adc
pusha
fstl
xchg
jecxz
adc
adc
xchg
in
fs
mov
rolb
popf
push
xchg
push
fldcw
pop
ds
adc
mov
sub
push
fdivs
imul
icebp
cmp
sub
add
jp
mov
push
adc
adc
mov
pop
mov
cli
subl
xchg
adc
lret
and
lods
test
inc
lods
jno
int3
sbb
mov
cmpsb
xchg
lds
int3
lock
lods
jo
cmp
sub
dec
fwait
dec
outsb
mov
xor
stos
sti
mov
push
dec
loop
int
lret
out
cltd
jecxz
call
dec
dec
ljmp
imul
gs
fbld
bound
jns
fwait
iret
mov
add
pusha
mov
xchg
test
aam
loop
daa
cltd
sbb
pop
and
xor
sbb
in
inc
std
dec
ret
cmp
push
pop
or
inc
shrb
je
sub
cs
shrl
mov
in
test
ja
out
cmp
push
sti
test
incb
lret
cmpsb
cltd
lret
adc
mov
lock
daa
cmpsb
or
xchg
das
and
mov
xor
ficoms
cmp
mov
adc
scas
inc
or
cmp
addr16
mov
fcoms
pusha
ljmp
sub
jmp
in
popa
repnz
dec
iret
adc
dec
dec
in
dec
sub
xor
jge
push
sub
dec
pop
cmpsl
popa
outsb
inc
mov
out
lahf
inc
mov
cmp
xorl
ja
out
repz
or
es
lahf
rcl
rorl
cmp
imulb
push
shll
arpl
out
cmp
sti
pop
test
scas
sbb
pop
cmc
and
pusha
in
jno
jle
popf
scas
call
bound
insb
jmp
mull
sbb
sub
sub
inc
mov
sub
or
in
push
sbb
outsb
push
sub
fincstp
xor
jl
mov
jns
jne
push
mov
mov
repnz
dec
push
stos
or
sar
mov
in
leave
mov
jae
leave
mov
and
lods
jp
subb
pop
cmp
out
or
xchg
or
sbb
stc
pop
ret
or
dec
fs
sbb
xlat
or
mov
js
ret
sahf
aaa
cmpsb
es
jo
dec
push
and
fdivrs
fbstp
inc
mov
lock
mov
mov
cmp
mov
data16
cli
leave
lods
mov
out
daa
push
clc
ret
xchg
and
cmp
ss
jmp
call
mov
add
arpl
insl
inc
shrb
push
adc
js
filds
ficomps
mov
out
leave
add
cmp
push
loop
add
test
pop
shl
ds
push
fst
adc
xchg
mov
mov
dec
mov
inc
sub
cmpsb
fisubrs
subb
add
add
pop
ds
push
mov
test
pushw
int3
xor
lods
and
mull
gs
mov
mov
push
dec
jns
cltd
subl
or
jno
pop
cmp
jg
int
outsl
into
cmpsl
testb
sti
cmp
pop
ljmp
scas
mov
movb
and
push
sahf
icebp
stos
or
sar
cmpsb
jno
flds
decb
shll
aad
ret
mov
stc
mov
mov
xchg
xchg
xchg
fs
int
jo
add
jle
sarb
xchg
imul
cmp
push
loope
jo
insl
adc
mov
lahf
mov
push
into
lcall
rol
lea
in
or
inc
mov
addr16
xchg
out
sbb
ror
aam
adc
insl
xchg
adc
sub
fbld
mov
pushf
ss
and
lock
xchg
addl
jnp
jae
scas
je
inc
testl
out
sub
int
xor
insl
notb
dec
outsl
fdivr
sub
movsl
jb
sub
or
inc
repnz
int
test
jmp
loopne
adc
data16
jmp
inc
fs
icebp
shll
pop
outsl
in
add
movsl
dec
dec
fsubs
jno
movl
adc
cs
outsb
and
outsl
xor
aas
pop
mov
daa
mov
push
pop
ljmp
ds
sub
cwtl
cmpl
and
mov
mov
cmovl
jg
xchg
pop
pop
ds
mov
cmp
fidivrl
push
mov
nop
sub
sbb
lock
std
mov
add
test
adcb
test
loop
stos
lret
mov
mov
jg
sub
faddl
jb
jle
ss
cmp
and
add
rclb
in
loope
push
nop
add
fabs
cmp
inc
add
sbb
cmp
jp
jne
inc
push
and
adc
pop
sub
push
lret
nop
cmp
inc
or
inc
or
pop
ja
push
jle
inc
mov
sub
lcall
or
call
mov
dec
adc
push
lea
sbb
inc
cltd
jbe
add
mov
test
fiaddl
js
inc
ja
jg
outsl
idiv
int3
mov
mov
mov
cmc
push
push
add
lahf
adc
test
es
push
sahf
fimuls
fcompl
hlt
sbb
lea
sbb
std
pop
jns
mov
mov
es
sbbb
pop
inc
nop
mov
stc
push
into
jg
fadds
out
xor
jae
movups
cmpb
mov
sub
cs
dec
and
jp
or
pop
pop
mov
add
out
sahf
or
lret
push
cmp
lock
mov
shll
mov
cwtl
stc
xor
mov
rcrl
loopne
sarb
repnz
jmp
inc
outsb
in
out
inc
sub
repnz
xor
pop
push
mov
add
jb
data16
aad
jg
in
cld
sbb
adc
aam
cmp
pop
sbb
leave
adc
inc
pop
xchg
jg
xchg
push
mov
or
jge
shlb
loop
mov
scas
sbb
pop
into
lret
lock
push
jnp
std
xchg
lcall
inc
fidivl
pop
out
mov
lcall
sbb
sbb
add
int3
push
mov
shl
push
push
inc
mov
mov
arpl
sub
mov
outsl
ja
scas
inc
cmp
push
daa
mov
mov
shl
adc
xchg
xchg
scas
fcmovbe
subb
arpl
stos
insl
mov
les
lock
inc
cmpb
add
mov
popf
ficoms
cmc
adc
fs
adc
je
mov
jno
xchg
daa
addr16
shr
xlat
jae
rcrb
mov
or
es
ljmp
aas
sbb
sbb
aad
dec
es
and
dec
jno
mov
das
lock
and
test
push
mov
xchg
icebp
or
inc
insb
mov
jne,pn
xor
js
xor
rorb
mov
icebp
stos
cwtl
fs
jb
sbb
loopne
dec
jnp
out
ja
in
test
in
jb
sbb
sbb
test
rcl
repz
popf
and
call
adc
mov
mul
bound
imul
mov
xor
sbb
xchg
pop
and
dec
lahf
push
adc
xlat
xor
lret
int3
mov
mov
lcall
cld
mov
out
push
mov
shlb
or
pop
or
scas
dec
repnz
jae
in
int3
xchg
jbe
add
xor
cmc
pusha
stos
jge
add
jecxz
pop
lods
cmp
dec
inc
rcll
outsb
push
clc
or
into
lods
and
pop
enter
add
arpl
rcrl
xor
xchg
push
jp
jb
push
jg
aas
lods
addr16
xchg
pop
mov
mov
andb
cmp
movsb
xchg
inc
push
add
cmp
pop
loope
mov
outsb
adc
jecxz
sub
adcb
out
enter
add
incl
adc
push
xor
int3
push
das
lds
jl
aaa
mov
es
sti
sarb
aam
sub
sbb
and
out
imul
mov
arpl
jl
and
xchg
mov
arpl
or
lcall
in
outsb
sahf
xchg
xor
jnp
adc
in
xor
fldenv
cmp
andl
cmp
xchg
push
scas
test
pop
inc
cmp
ret
sbb
xchg
add
fadds
scas
std
mov
jb
rcll
insb
addr16
mov
pop
stos
push
repz
mov
adcl
sbb
adc
dec
lret
daa
dec
and
lcall
icebp
stos
sbb
dec
repz
push
pop
jae
ret
int
jbe
jl
loope
sbb
jle
sub
repz
dec
jo
call
outsb
sbb
or
mov
ja
xorb
in
rorb
inc
xor
and
pop
cmp
xlat
shlb
fnstsw
out
fists
xlat
xorl
fstl
aam
jnp
add
sahf
or
ret
cmp
push
cmp
dec
sbb
cli
sub
ja
pop
mov
jle
cmpl
repz
js
dec
inc
out
jbe
inc
adc
fisubl
adc
gs
sub
lds
mov
aas
decb
xlat
pop
shlb
movsl
mov
insl
inc
dec
out
add
jne
rcl
js
jg
pop
pop
pop
push
push
jo
mov
fnstcw
loope
push
cmp
aaa
stc
subl
inc
nop
add
fildll
lea
or
mov
fdivrl
push
pop
pop
xor
and
cwtl
hlt
rcl
fs
mov
js
push
shlb
sub
lret
mov
das
sbb
sub
cmpsl
sub
mov
cwtl
daa
sbb
aaa
mov
je
dec
jnp
adc
daa
xlat
mov
stos
outsl
or
push
pop
pop
les
mov
dec
mov
cltd
xchg
cltd
mov
and
lahf
in
out
or
mov
jbe
outsb
pop
dec
dec
push
cmpb
pop
dec
mov
mov
mov
cwtl
mov
sbb
sarl
xlat
std
or
std
push
xor
call
add
rolb
jnp
add
xchg
lea
mov
jecxz
or
mov
iret
cltd
loop
call
xchg
decb
fsts
add
pop
pop
mov
es
xchg
xchg
inc
jb
pusha
pop
inc
adc
jl
rcrb
leave
dec
bound
ret
push
dec
mov
cmp
jle
push
xchg
in
jecxz
adc
iret
xorb
fdivl
loopne
xor
hlt
pop
into
sbb
mov
das
inc
int
adc
iret
mov
daa
pop
in
lret
jnp
sbb
daa
out
push
cmp
pop
pop
dec
ficompl
aas
xor
js
mov
movsb
adcl
lds
or
movb
mov
mov
pushf
xchg
mov
addb
push
jne
cmp
xchg
xchg
mov
cmp
push
pop
pop
sbb
or
and
shl
pop
or
bound
add
add
lahf
scas
out
aas
gs
mov
lock
fisubl
jecxz
mov
mov
mov
sbb
push
adcb
pop
pop
sbb
fnsave
and
inc
clc
cmp
jecxz
push
xchg
add
imul
notb
mov
mov
push
fstpt
subb
cmpsb
aam
dec
andl
cltd
xor
inc
inc
or
cld
sub
sub
push
ljmp
pop
loopne
and
add
xchg
mov
pop
leave
cli
dec
ja
xor
jnp
sahf
mov
xlat
mov
adc
outsb
add
sub
pushf
cltd
adc
lock
add
jge
xor
lret
clc
push
push
add
and
inc
ljmp
xchg
push
push
add
out
and
pop
imul
pop
fiaddl
js
sbb
imul
adc
push
mov
in
lahf
xchg
inc
fstl
sbb
lods
lods
insl
pop
and
or
xchg
int3
dec
sbb
push
xlat
loopne
shrl
mov
cmp
push
add
out
lods
je
inc
mov
jl
ds
clc
xor
jl
and
ds
xchg
pop
out
xchg
inc
pop
cld
dec
stos
adc
jmp
mov
pusha
mov
inc
enter
scas
mov
lds
inc
repnz
cwtl
aas
adc
push
mov
fwait
adc
and
mov
xchg
xchg
call
add
repz
scas
aam
mov
out
add
clc
cli
lret
cmp
and
xor
sbb
sub
sbb
and
cli
add
out
stos
outsb
movb
xchg
pop
sbb
mov
pop
inc
dec
cld
adc
fstpt
xchg
mov
shl
pop
test
sbb
sbb
scas
push
xchg
leave
sbb
xor
mov
mov
aaa
ds
imul
sub
dec
icebp
push
ret
aad
aam
adc
dec
sahf
dec
daa
pop
mov
mov
stc
xor
cli
xor
fs
or
and
pop
jno
push
lock
and
outsb
pop
push
ds
jne
push
adc
hlt
js
lcall
jmp
jle
xlat
movsb
mov
icebp
mov
imul
sbb
push
orl
jo
and
add
cld
ja
hlt
out
adc
dec
cld
fdivl
into
sub
xchg
es
xchg
aad
icebp
and
imulb
rorl
lods
repz
lods
xchg
jmp
test
cs
cld
cmc
cmp
les
inc
repnz
push
hlt
mov
mov
adc
mov
inc
iret
lret
jnp
outsb
incb
ret
aam
push
dec
int3
out
push
jnp
or
shlb
cwtl
jge
mov
jl
fstl
jl
push
aad
push
out
mov
scas
adc
call
roll
aaa
and
xor
jbe
pop
arpl
xchg
cs
jp
icebp
push
adc
test
xor
out
add
aad
bound
test
sar
insl
scas
push
jnp
rcrl
lock
adc
xchg
rcr
aas
je
jb
scas
inc
push
xor
xchg
out
mov
push
aam
jp
push
inc
lea
cli
in
lret
les
mov
ja
cmpsb
sbbl
mov
cltd
xchg
ror
dec
lea
ret
jmp
sbb
scas
js
sub
inc
pop
cmc
lock
int
mov
add
call
xchg
ja
ret
dec
push
mov
shl
dec
cmp
loop
scas
in
lds
add
pop
nop
xchg
in
mov
frstor
fucom
jmpw
push
stc
repz
das
jo
outsl
ds
inc
inc
cwtl
push
fstps
xchg
fs
xchg
mul
daa
xchg
stc
push
lcall
dec
daa
ret
xchg
call
mov
mov
inc
mov
scas
xor
pusha
les
xchg
xchg
inc
hlt
add
fsub
outsl
jmp
js
in
pop
sti
push
cwtl
ss
les
clc
cwtl
inc
fbstp
xor
xor
shll
int
int3
pop
cli
outsb
lea
push
jp
imul
testl
push
push
xchg
adc
sbb
roll
fsubs
lock
cwtl
jae
jbe
dec
pop
xchg
in
das
add
and
ss
mov
mov
sbb
ljmp
inc
repz
mov
or
fists
mov
and
fidivs
je
out
push
adc
and
xchg
and
notb
in
jae
mov
or
xchg
ficoms
in
mov
mov
mov
inc
sbb
inc
pop
fistl
dec
sar
negl
push
sub
aam
jg
rcll
sahf
mov
sub
jmp
lahf
jg
push
mov
in
sub
sbb
dec
xchg
mov
shll
xor
dec
xchg
pop
fisubrl
movl
insl
shrb
sub
cmp
pop
out
lods
fs
dec
jl
aam
pop
push
movsb
add
cltd
lahf
stos
jnp
push
sbb
ret
mov
or
and
sub
cmp
push
bound
jg
xor
fwait
lock
mov
test
jne
pop
call
fnsave
push
sub
mov
pop
nop
std
shl
int3
cmp
sbb
xor
or
stc
fwait
push
repnz
ret
popf
cli
or
push
data16
fwait
insb
mov
fiadds
sub
cld
in
lcall
loopne
xchg
std
dec
testb
sbb
jb
mov
push
adc
lea
iret
adc
mov
outsl
in
test
or
cmp
sbb
stos
mov
hlt
daa
xchg
push
jmp
push
and
and
mov
inc
mov
pop
daa
ficompl
pop
cmovbe
loope
push
movsl
out
clc
inc
les
icebp
mov
in
cmp
dec
mov
sbb
dec
imul
inc
out
jns
add
push
inc
das
pop
add
repz
inc
xor
and
in
pop
mov
dec
fisubrl
jle
daa
les
insl
mov
fimull
sbb
mov
adc
push
push
lret
push
into
jmp
dec
pusha
gs
imul
iret
mov
mov
mov
mov
fcmovnb
xor
mov
pop
lret
cwtl
jl
pop
dec
dec
inc
or
or
repz
movsb
lret
pop
cmp
push
mov
fs
andb
popf
jae
shlb
mov
xchg
andl
jne
jae
adc
test
or
fildll
or
shll
push
adc
leave
sbb
jbe
test
ss
and
push
orb
adc
inc
das
mov
push
mov
mov
fs
int3
outsb
aam
cmpsl
ljmp
mov
fbld
jnp
ret
sub
mov
jl
push
out
nop
adc
je
aam
fnstcw
rclb
int
imul
mov
and
cs
cmpsb
ds
sub
imul
sub
push
jg
bound
xchg
xchg
mov
inc
pop
in
call
jmp
ret
roll
jo
les
dec
imul
test
adc
rclb
andb
test
xchg
rcll
roll
xor
xor
scas
jge
push
mov
cld
adc
or
pop
lcall
mov
mov
push
mov
push
cmp
mov
and
jo
push
sbb
lds
jmp
in
sub
pop
ljmp
scas
andb
arpl
pop
repnz
xor
jmp
fisubrs
imul
sti
dec
dec
fwait
loopew
jnp
mov
stc
dec
mov
cltd
or
lods
adc
mov
xsha1
cmpsb
iret
cmp
sbb
xchg
cmc
mov
mov
fdivrl
icebp
mov
aaa
mov
movsl
mov
inc
hlt
jae
imul
out
jp
iret
hlt
or
js
mov
or
push
add
fists
push
ret
loop
mov
dec
jl
sar
pushl
xchg
add
inc
test
jns
les
jl
xor
inc
sbb
aaa
shll
sub
je
daa
or
inc
out
xlat
enter
and
lods
out
adc
or
or
mov
push
push
outsb
mov
pop
andl
jno
sub
sahf
add
repnz
adc
mov
cltd
sarl
lock
pushf
and
mov
fildll
mov
ret
aam
cmp
and
fldl
jl
inc
pusha
lret
ss
and
int3
or
jno
adc
inc
inc
inc
pop
dec
call
dec
cmp
pusha
jge
xor
push
gs
inc
jns
jae
or
jecxz
push
div
or
pop
adcb
push
fdivs
arpl
ficoms
inc
pop
add
lcall
pusha
cld
test
mov
popa
pop
cmp
mov
cli
jnp
test
sti
rorb
push
and
ds
xchg
sti
fsubrl
out
mov
mov
pop
stc
orl
ja
stc
lret
lds
cmpsl
and
lock
ja
insl
outsb
sbb
push
pop
adc
push
cmpsl
ret
inc
test
cmp
push
movaps
imul
xor
sbb
sti
je
mov
cmpsl
gs
or
xchg
test
inc
dec
repnz
mov
fistl
dec
lret
or
fists
and
lea
lods
js
in
mov
mov
hlt
js
sub
out
sbb
mov
adc
jae
fdivrl
jb
pcmpgtd
fwait
dec
push
push
jmp
sbb
shlb
popa
sbb
cmp
stos
xor
rcl
xor
inc
repnz
loopne
lret
int3
sahf
mov
add
pop
mov
push
pusha
outsb
in
es
enter
popf
jns
and
adc
int3
xchg
dec
sbb
add
sub
clc
dec
xlat
out
das
sub
or
cmpb
out
out
sbb
not
mov
xor
shl
cmpsl
aas
cmpsl
sbb
cmpsl
push
and
sbb
adc
xlat
insl
lock
cld
ljmp
lret
xor
cmp
nop
sarb
leave
pop
xchg
add
clc
test
imull
pop
xchg
daa
xchg
pop
cmp
arpl
aad
jno
cvtps2pi
or
or
inc
and
and
rcrb
repz
lods
and
or
mul
sub
clc
adc
notl
jl
pop
daa
add
or
mov
in
mov
inc
push
mov
cmp
test
fildl
mov
lret
push
push
dec
fimuls
adc
shll
pop
sbb
mov
pop
push
pop
mulb
enter
addr16
mov
scas
sbb
in
lods
mov
push
push
das
lret
mov
jns
jecxz
shlb
sbb
jmp
pop
push
mov
mov
popa
mov
sub
push
add
jp
or
add
pop
in
xor
lahf
test
lods
or
test
shr
ret
aad
call
mov
pop
data16
lcall
cwtl
xchg
dec
and
add
pop
mov
mov
or
sub
sub
push
push
rcrl
add
fstpl
jnp
faddp
shrl
dec
lcall
adc
lea
stc
jl
test
clc
push
popa
xor
xor
jp
in
mov
out
xchg
test
nop
mov
int
test
lret
leave
iret
loope
loope
mov
inc
push
mov
or
sbbb
js
adc
adc
add
pop
rorl
out
add
in
push
xchg
dec
daa
testl
lcall
stos
and
xchg
je
mov
sbb
imul
inc
mov
push
leave
mov
sbb
fld1
pop
and
cmpsb
insb
push
jmp
sahf
xor
inc
add
bound
xor
mov
sub
push
adc
sar
lock
bswap
ficoms
hlt
paddusw
pop
fstpt
in
pop
fcompl
xchg
es
sub
loopne
xchg
rclb
inc
out
sub
lock
mov
out
mov
std
scas
fcomps
mov
popa
push
scas
fsubrl
cmc
xor
test
cmp
push
daa
es
dec
mov
inc
fbld
iret
adc
push
fcoms
jbe
js
lods
incl
frstor
jl
sahf
test
sbb
dec
out
shrl
ss
lret
repnz
add
lock
or
iret
sti
jae
push
jl
mov
pusha
xchg
mov
dec
jo
mov
movsb
je
fdivs
push
mov
cli
sbb
or
fwait
mov
ret
in
ss
mov
shlb
or
sub
dec
adc
das
jnp
sub
inc
fcmove
sti
xor
in
adc
fldenv
mov
inc
faddl
iret
adc
out
loop
and
sti
test
scas
out
stc
mov
mov
lret
jge
mov
and
shr
inc
cli
dec
and
and
test
movsl
sbb
test
fbstp
mov
pop
xor
sti
repz
andb
int3
cli
mov
jmp
sti
lea
push
adc
into
ret
cli
dec
inc
retw
cmp
push
xor
fadds
roll
inc
nop
stos
fdivs
iret
mov
sbb
sub
out
push
xchg
cwtl
xchg
mov
out
pushf
add
scas
imul
cld
fistpll
in
fldenv
sub
lret
ss
xor
dec
mov
sbb
testb
pop
scas
adc
iret
repz
mov
or
add
dec
dec
icebp
cmpsb
mov
test
mov
adc
ds
cmp
inc
out
jo
ja
loope
and
sub
sub
ficomps
daa
or
jle
out
imul
sti
clc
mov
clc
imul
cmp
cmpsb
js
iret
sbb
call
addr16
jl
cmp
add
push
pop
cmp
mov
mov
std
loope
call
cmp
es
shll
imul
xchg
daa
es
push
test
xchg
movsb
rorb
outsb
std
mov
std
mov
inc
push
adc
adc
mov
mov
jns
mov
jecxz
out
sbb
fmul
mov
mov
cwtl
popf
or
fimuls
rcl
incl
pop
lea
cmpsb
xchg
mov
iret
notl
xor
ljmp
arpl
mov
pop
sbb
xor
mov
pop
cmp
push
in
mov
push
jb
push
scas
add
jnp
int3
pop
inc
add
add
sub
mov
jb
inc
bound
shlb
das
sub
movsb
pusha
popf
or
pop
ret
mov
dec
push
mov
lea
jb
jmp
or
fsubrl
ss
loopne
jmp
fdivrl
cmp
pop
xchg
adc
xchg
cli
sub
jo
xchg
inc
push
jge
adc
icebp
inc
xlat
sub
inc
pusha
mov
dec
pop
clc
jo
repz
mov
push
arpl
mov
aas
daa
jmp
mov
push
pop
push
add
mov
les
jl
pop
fabs
push
test
lret
lods
aam
stos
mov
mov
std
or
xchg
out
int
in
in
addr16
movsb
loope
out
lods
and
lret
cmp
ret
fucomip
jnp
pop
outsl
imul
xchg
mov
int
sub
aaa
mov
or
gs
sahf
mov
ret
pop
push
xchg
outsb
ret
mov
jnp
sub
push
mov
push
adcb
jbe
or
pop
or
push
or
mov
add
popa
cld
test
sbb
add
ja
ret
mov
mov
daa
movsl
sub
dec
xchg
test
sbb
add
and
gs
in
divb
sub
icebp
fidivrs
lock
xchg
push
stc
add
jo
sbb
lock
mov
inc
cld
xchg
jo
push
lret
xlat
inc
out
push
mov
gs
mov
mov
cmc
aad
dec
jne
dec
xchg
adc
push
loop
aad
insb
or
xchg
daa
imull
insl
int3
into
fmull
cld
sub
and
jecxz
divb
sub
loope
jmp
in
fsubr
je
jns
cmp
icebp
pop
or
dec
push
mov
xchg
dec
or
add
add
mov
cli
cwtl
test
ja
dec
mov
cld
xor
orl
aad
cli
lret
sti
cmp
out
pop
fbstp
pop
sub
mov
pop
sub
jp
dec
das
or
movsb
pop
daa
mov
test
mov
mov
jbe
cs
push
inc
imul
add
movsb
ds
imul
sar
fmull
mov
or
jecxz
insb
and
repnz
add
in
inc
fildl
xor
mov
mov
loopne
clc
movsb
inc
sbb
sbb
jle
test
sub
inc
into
rcrb
movsb
cmovp
outsb
mov
xchg
mov
test
addr16
sbb
push
daa
cmp
pushf
cmp
bound
or
mov
sarb
add
nop
dec
lea
insb
xchg
scas
push
bound
push
inc
out
lret
incl
add
popa
pop
or
fsubrl
mov
mov
jns
adc
mov
out
imul
addb
adc
xchg
push
call
insb
push
cmpsb
js
testl
icebp
push
lods
mov
xchg
outsb
in
scas
or
fisttpl
jmp
scas
inc
faddl
inc
loop
js
inc
sbb
and
andl
inc
jbe
mov
das
inc
enter
iret
push
clc
pmuludq
pop
mov
and
sarb
jb
adc
sbb
scas
inc
pushf
adc
cld
and
add
push
mov
cmp
xor
leave
mov
adc
rorl
fmull
mov
call
ss
and
mov
jb
cmp
lds
adc
ret
jl
jl
iret
pop
popa
mov
mov
jmp
mov
xchg
sbb
dec
xchg
add
sub
mov
jae
push
push
outsl
jns
mov
icebp
cmp
lahf
inc
out
adc
jl
gs
rclb
xchg
mov
sub
fisubs
jo
add
and
scas
add
mov
mov
pop
push
ret
pop
sqrtps
imul
pop
inc
in
cltd
add
cmp
dec
int3
xor
mov
sub
add
push
inc
and
addr16
jne
sub
pop
add
rol
push
insb
and
fbld
xchg
dec
test
test
pop
in
xor
pop
xor
xlat
pop
cmp
push
repnz
cmp
cli
inc
pusha
call
adc
jb
pop
fldz
test
sbb
aad
push
adc
sub
inc
mov
movsl
push
pop
dec
lahf
cmc
mov
mov
ds
scas
in
xchg
pop
imul
loop
add
shrl
lods
mov
cmp
dec
jp
lret
lds
xor
jp
xchg
jecxz
dec
xchg
cwtl
add
xchg
sbb
push
push
int
or
lods
test
ret
pop
cmpsl
das
inc
and
mov
int
addr16
insl
stos
mov
sub
repnz
cmp
xor
push
jne
stos
add
cld
lods
adc
cmpsb
sub
movb
dec
adc
mull
jnp
mov
pop
mov
pop
pop
pop
mov
mov
mov
mov
mov
push
cmp
and
out
cmpsl
cli
lret
dec
push
pop
stos
pop
outsb
xor
lea
fcom
add
cmp
loopne
and
fs
push
fwait
stos
dec
loopne
nop
mov
mov
sarb
cmpsl
sbb
loopne
lea
push
mov
cmpsb
xor
xlat
test
inc
dec
jecxz
subb
or
cmp
fwait
jp
movb
jae
cmpsb
jge
fcmovnb
xor
mov
test
mov
push
sub
adc
mov
les
sub
cmp
xorb
inc
sub
into
jmp
popa
cmp
ror
jbe
test
sti
pop
pop
pop
pop
into
push
mov
gs
out
loope
jbe
mov
test
or
xor
mov
xor
cli
lods
inc
movntps
out
dec
mov
jp
pop
cmp
push
ja
mov
loop
adc
lock
push
fisubrs
sbb
pop
aaa
jnp
dec
pop
pop
mov
insl
leave
ret
jb
cmp
adc
in
pusha
iret
mov
ror
test
data16
movsb
add
popa
mov
xor
mov
pushf
mov
imul
or
add
mov
scas
out
lret
sbb
cmpsb
hlt
scas
cltd
mov
cmp
test
cmp
adc
test
fmul
inc
jae
pop
pop
sbb
dec
jmp
mov
fistps
stos
insl
repz
jg
jb
sarb
repnz
mov
aaa
iret
xchg
stos
orb
movsl
push
aad
adc
pop
daa
adc
jl
bnd
pop
jmp
dec
lcall
sub
roll
cmp
inc
data16
push
mov
int
cmc
frstor
lea
dec
or
mov
add
pop
sbb
lods
jae
sub
fmul
or
mov
lods
cmpsl
stos
mov
imul
sbb
dec
aas
cmp
sbb
push
xchg
sbb
jle
out
lret
dec
lret
enter
or
or
or
in
fisubs
call
ret
rcll
pop
test
push
inc
call
ds
pop
nop
add
shlb
pop
psubusw
adc
fidivl
xor
xlat
je
hlt
jl
jae
mov
lret
push
std
xor
xchg
sbb
imul
jle
lret
push
inc
mov
push
out
sub
je
xor
or
inc
pop
scas
jnp
mov
jo
pop
mov
cltd
out
shll
mov
or
pop
test
jge
cmpsb
clc
cmp
std
jb
add
cmp
lods
pop
pop
jmp
jnp
adc
insl
movsb
lods
aas
sbb
mov
inc
push
fnstenv
arpl
loopne
pop
mov
cmp
cs
out
add
ss
jae
inc
lcall
dec
xchg
push
jmp
aaa
hlt
out
sbb
jne
gs
sub
pusha
movsl
or
xchg
jae
sbb
sahf
in
lret
iret
inc
loop
js
repz
rcll
fsubrs
cmpsb
enter
inc
sub
push
cld
mov
dec
push
push
inc
push
aas
lods
adc
hlt
mov
into
lock
test
and
nop
in
xchg
xchg
or
pop
loope
push
mov
cmp
fsubl
sub
mov
out
and
mov
mov
add
mov
pop
cmp
inc
sahf
lds
ljmp
je
cmp
pusha
rep
shll
aaa
add
push
jg
sbb
and
repnz
and
mov
ja
imull
sahf
add
ret
mov
adc
sub
cs
aam
test
adc
mov
add
rcrl
xor
mov
rorl
iret
dec
jns
or
lcall
movsb
fnop
xlat
pop
pop
cltd
sub
mov
aad
inc
ljmp
cwtl
popa
leave
push
ds
pop
test
push
lea
xorl
in
jne
clc
ret
lcall
xchg
push
push
push
jl
jnp
popf
mov
sbb
imul
add
and
cmp
push
gs
push
inc
inc
hlt
adc
dec
ficompl
cltd
les
pop
xor
mov
out
fmull
add
aam
sub
in
sti
fidivrl
notb
mov
mov
mov
aam
pop
or
out
add
sbb
addr16
rcrb
cmp
scas
pop
adc
mov
xor
ds
bndldx
fwait
mov
ljmp
repz
pop
sbb
jg
mov
std
je
mov
adc
mov
cs
add
lret
ss
cwtl
cmp
and
mov
pop
sbb
sub
fwait
insl
xchg
movsb
mov
and
aad
adc
dec
imul
adc
push
insb
mulb
jne
mov
data16
jl
sub
mov
in
cltd
add
rolb
pop
fadds
push
fisttpll
xor
jl
in
fdiv
faddl
cmpsl
movsb
xor
fdivrs
movl
stos
lea
xchg
mov
pop
sub
testl
mov
jle
or
mov
fidivrs
repz
shrb
rcrb
mov
in
mov
cmp
xchg
insb
daa
lea
xor
rcl
jbe
popa
push
cmp
cmp
xorb
cmpsl
bound
stos
rolb
popl
dec
or
mov
sub
dec
cmp
lcall
or
or
scas
xchg
sbb
shl
lock
jl
adc
pop
jb
into
fsubl
adc
xor
inc
mov
sub
mov
cmp
mov
sbb
cwtl
icebp
sbb
scas
jp
adc
clc
inc
add
push
btr
fidivl
in
dec
repnz
cmp
inc
push
daa
jge
sbb
les
push
cmpsl
sbb
dec
je
out
insb
cwtl
xor
sub
dec
pop
xor
sbb
jle
inc
aam
push
mov
cmp
lret
aaa
adc
adc
jae
xchg
push
xchg
add
dec
ljmp
enter
fwait
jge
add
cli
push
sbb
sahf
add
dec
call
pop
sbb
cmp
pop
adc
sub
addr16
das
sub
jae
xor
dec
in
push
jno
icebp
sbb
subb
jle
mov
mov
push
lea
jo
pop
adc
cltd
mov
xor
loope
fdivr
xor
cmp
addb
add
scas
cmp
sub
loope
adc
mov
xor
dec
dec
fs
fs
ret
mov
js
fcompl
pop
add
push
fwait
jb
bound
push
addr16
stos
push
sub
pop
aas
mov
aad
adc
dec
pop
sub
out
inc
shll
xorl
jl
and
inc
loopew
movsl
ss
dec
ljmp
xor
dec
xor
and
mov
mov
dec
xchg
inc
aad
cld
stc
pop
pop
icebp
dec
pop
sahf
div
mov
hlt
cmovo
arpl
and
ja
imul
in
test
imul
or
inc
adc
adc
les
inc
inc
or
jge
std
sub
loop
bound
adc
pop
fcomps
xchg
in
pop
jns
mov
or
imul
rclb
jl
adc
rcrl
pmulhuw
dec
push
or
leave
pop
in
ja
pop
test
shlb
xchg
fnstsw
xor
insb
jl
mov
or
mov
idiv
or
xchg
adc
xor
push
or
ljmp
jecxz
arpl
in
rcll
lret
cmp
hlt
inc
inc
xor
mov
jne
and
dec
sub
lods
or
sbb
sub
movsb
cwtl
mov
into
sub
push
xor
arpl
in
or
lret
xor
call
ret
pcmpeqd
inc
lods
xchg
popa
push
mov
test
pop
out
push
dec
lahf
mov
sbb
nop
and
iret
iret
loopne
cmp
fwait
add
fdivs
ja
notl
add
cmp
pop
adcb
xor
jge
js
cwtl
mov
shll
call
sbb
fsubrs
mov
arpl
hlt
sub
add
std
mov
dec
mov
xchg
dec
sub
cmpxchg
inc
fnstsw
rcrl
push
mov
loop
add
les
lds
cmp
lds
mov
fs
or
imul
xor
gs
mov
in
aad
xchg
or
out
bound
mov
xchg
sbb
popa
adc
sub
loope
cwtl
bound
push
mov
adc
test
inc
inc
popa
sbb
sub
rolb
shll
add
insl
daa
movsb
cli
out
sbb
xchg
outsl
addr16
in
into
inc
jle
mov
xor
mov
adcb
aam
inc
sbb
out
js
sub
push
inc
loop
xchg
js
jmp
inc
cmpl
popa
cli
pusha
mov
scas
mov
mov
mov
add
das
push
cmpsb
xor
pop
inc
into
jns
fldl
or
divb
out
ljmp
mov
das
add
ficoml
popf
push
and
aad
pop
iret
fcoml
imul
lret
in
ds
dec
jb
and
rcrl
imul
xor
icebp
iret
js
push
andl
movsb
push
add
mov
cmp
mov
push
mov
ss
scas
testb
xchg
xchg
fistps
mov
sbb
mov
test
sbb
mov
scas
insl
jno
rcll
sbb
int
add
dec
cmp
loope
imul
fcmovu
fsubl
stos
dec
mull
iret
jl
mov
rorb
bound
loop
pop
icebp
mov
cmp
jge
cmp
pop
and
faddl
pop
push
push
dec
jb
popf
pop
addr16
in
add
verw
adc
or
or
add
add
daa
mov
add
and
add
add
add
jmp
mov
inc
add
pop
add
add
add
dec
add
xlat
add
mov
inc
add
xlat
add
add
add
add
adc
rep
hlt
mov
inc
fdivrl
cmp
push
fdivrl
inc
mov
ret
cmp
iret
hlt
insl
push
pop
insl
mov
shrb
std
sbb
repz
imul
mov
adc
stos
rcr
mov
adc
sahf
call
lea
testl
cld
lods
imul
out
jge
pusha
adc
pop
int3
push
jb
jne
push
xor
adc
push
fs
pop
sbb
or
das
and
mov
mov
xor
sbb
mov
push
movsb
jg
pop
push
icebp
lahf
stc
insb
or
xlat
ss
and
adc
and
cmpsl
in
enter
add
add
adc
inc
arpl
icebp
imul
pop
ss
jmp
stos
push
or
jae
daa
ret
pop
jb
and
xchg
mov
shl
dec
bswap
lahf
mov
jno
fsubrs
in
fs
test
mov
sub
pushf
ret
ljmp
sbbb
inc
test
test
pop
jecxz
jl
push
fwait
bound
and
adc
in
shll
jb
enter
add
in
sbb
push
into
xchg
mov
ss
idivl
mov
data16
sub
pop
fsubs
rdtsc
insl
mov
mov
xchg
and
popfw
jbe
scas
out
sbb
or
lods
pusha
scas
mov
sbb
testb
jg
push
mov
popf
nop
pusha
mov
mov
enter
sbb
rolb
insb
mov
lret
sbb
shrb
int
inc
add
inc
jo
sbb
jp
les
mov
push
popa
cltd
and
and
add
dec
je
mov
sub
xor
fcomps
int3
loope
pop
lods
dec
pusha
cmp
mov
cmp
mov
adc
rcll
pusha
setns
and
shl
mov
jbe
xchg
ljmp
push
fistps
jnp
push
mov
out
mov
in
clc
and
imul
ficomps
dec
movsb
lcall
test
adc
mov
pop
xor
mov
and
imul
nop
lods
orl
fldt
outsb
and
fs
push
shll
in
mov
add
lret
ljmp
popa
les
pop
fists
mov
add
xor
outsb
ret
leave
add
pop
dec
ds
add
or
cmp
fidivl
fisubrl
stos
and
xor
fisubrs
adc
pop
fwait
bound
lahf
icebp
push
xor
adc
xor
mov
rclb
mov
into
cmpsl
inc
sub
sub
and
movsl
fcmovbe
sbb
pop
pop
cmp
shll
lea
sbb
into
inc
je
mov
mov
pop
sub
push
and
cmp
movsb
repnz
or
adc
cmp
cli
pop
xor
mov
mov
call
rorb
or
adc
mov
adc
fisttpl
pop
clc
inc
push
sub
pop
std
adc
pop
lahf
jle
test
sub
inc
pusha
sub
pusha
lret
ja
lock
xchg
imul
cld
mov
mov
xchg
test
jbe
fisubl
sub
jl
rolb
and
push
adc
xchg
aaa
outsl
jmp
fmulp
ss
mov
loopne
inc
push
jns
in
int3
aam
sbb
popl
mov
cld
in
pop
adc
or
dec
in
inc
lret
ret
rolb
icebp
or
and
xchg
sbb
xor
mull
in
lret
arpl
imul
fisttps
push
pop
fucomp
pop
jns
das
fwait
rorb
mov
or
inc
shrb
and
sub
xor
test
cld
fucomip
pusha
loop
outsl
inc
cmp
jmp
push
imul
cmc
pop
fs
mov
or
fbld
arpl
mov
or
jle
je
mov
aam
arpl
xchg
xor
pop
out
mov
cmp
sbb
lret
mov
into
icebp
push
stos
or
jl
jns
incl
mov
mov
movsb
enter
push
xor
shll
shrb
jns
sti
dec
stc
pop
push
xchg
in
xchg
push
mov
test
andl
mov
iret
add
dec
jbe
mov
cmp
mov
addr16
xchg
testl
dec
test
nop
inc
add
fcompl
inc
dec
shr
aas
sti
pop
mov
shl
sub
sub
push
dec
pop
iret
arpl
inc
xchg
jo
jno
pop
mov
orb
dec
and
loopne
out
das
sbb
js
adc
test
inc
or
or
and
inc
cli
add
int
mov
and
repnz
out
cmp
pusha
test
test
dec
dec
in
mov
stc
adc
jecxz
xchg
jl
dec
sbb
jno
gs
pop
push
mov
jo
jne
sbb
sbb
iret
insl
mov
leave
callw
ss
xchg
lahf
jno
popa
pop
idiv
ficoms
es
mov
sub
cmpsl
push
add
fiadds
or
mov
and
or
and
clc
jmp
inc
cwtl
int3
aad
outsb
or
xlat
aas
in
cmp
or
data16
js
pop
aam
pop
and
out
int
push
xor
adc
sbb
movl
das
inc
jecxz
push
push
push
adcl
mov
loop
cmc
sbb
push
gs
mov
inc
cmp
push
test
lret
push
push
movsb
ss
adc
or
inc
pop
stc
adc
rclb
test
pushf
jle
xchg
bound
mov
popa
in
aad
pop
dec
pop
test
cmp
cmp
sarb
test
incb
mov
cmpb
and
and
mov
add
and
inc
loop
mov
insl
call
fstpt
shll
in
mov
enter
inc
jl
out
outsb
mov
jp
mov
adc
push
movsb
test
mov
inc
mov
sub
add
xor
push
dec
inc
fbstp
xlat
jecxz
lods
dec
xor
gs
lods
lahf
movsb
mov
out
cmc
cmp
add
call
jne
outsl
mov
xchg
adc
fnsave
dec
inc
or
jbe
call
inc
loop
jb
pop
jns
jns
sbb
iret
mov
loop
fnstsw
call
sbb
and
rcrl
push
xor
push
xchg
dec
jl
les
add
shrb
mov
dec
dec
xor
mov
push
loop
gs
leave
loop
inc
lret
dec
sti
or
cwtl
inc
stos
pop
in
fwait
pop
cmpl
push
xor
stos
outsl
cli
push
or
andl
rcll
cmc
xor
mov
aaa
repz
cld
in
mov
ja
cli
dec
jo
xor
and
mov
jle
xchg
aad
pop
xor
and
jae
sbb
cli
sbb
insl
imul
popa
dec
out
int3
sub
insl
push
lock
lahf
stos
insb
int
pusha
xor
nop
sahf
xchg
lcall
pop
out
outsl
xor
icebp
fstpl
pop
add
iret
notb
dec
sub
pop
mov
jnp
ret
mov
sub
imul
and
decl
das
pop
lea
stc
dec
inc
xchg
rcll
dec
shrl
rcrl
in
test
pop
add
add
fldenv
jl
cmc
mov
sbb
inc
pop
xor
sub
and
inc
xchg
popw
dec
in
xor
mov
in
imul
jmp
mov
mov
cmp
je
jbe
push
dec
mov
inc
pop
pop
fcomps
fstpl
inc
cmp
aaa
pop
js
jl
inc
sbb
inc
add
pop
push
xchg
cwtl
push
ja
push
mov
pop
cmpsl
dec
xor
into
ficoms
add
outsl
out
push
xor
cmp
mov
loope
imul
repz
and
adc
fistl
std
adcb
jb
lret
icebp
ret
icebp
aaa
mov
and
fs
mov
jl
adc
cld
lea
pushf
add
pop
jg
mov
push
lahf
mov
jmp
lret
rol
inc
xor
inc
out
insl
insl
repnz
fwait
mov
sub
fidivrl
out
mov
bound
leave
fisttpll
jmp
int
ds
test
jecxz
ja
adc
xchg
rcl
nop
rcl
push
aas
mov
das
lock
in
mov
jbe
or
jmp
rcll
fsubs
adc
imul
aas
bound
or
jle
ret
xchg
cmp
mov
ss
xor
nop
mov
loopne
mov
xor
xchg
gs
push
xchg
lret
mov
rorl
mov
adc
jecxz
sub
cld
sahf
push
mov
pushf
jge
scas
cwtl
movsb
cmc
mov
mov
pop
sub
ret
inc
dec
and
pop
fmuls
andb
mov
dec
adc
jnp
and
xchg
pop
mov
loopne
dec
sbb
movsl
xchg
xchg
dec
inc
pop
jne
mov
fs
sbb
fidivs
stos
leave
into
mov
pop
cmp
scas
jle
jb
repnz
cmp
and
mov
mov
lds
mov
pop
pop
bound
ja
mov
ficoms
jle
push
mov
jp
cwtl
sbb
test
out
pop
inc
addr16
xor
jbe
and
pop
decb
daa
std
sub
aad
sbb
xor
clc
fs
push
inc
add
loop
cwtl
cli
nop
cmp
daa
push
fstps
push
or
xorl
stc
xor
arpl
adc
pop
decb
stos
in
dec
xor
imul
xchg
sahf
xchg
in
lcall
and
stos
int
lcall
mov
adc
mov
push
ds
into
jg
js
sti
sarb
jnp
outsb
push
into
rclb
enter
sbb
adcb
imull
inc
jb
int3
out
xlat
xchg
sti
and
inc
mov
sbb
sbb
lods
mov
dec
xchg
dec
or
xor
lret
sub
pop
sbb
cwtl
xchg
fisubs
xor
por
cwtl
mov
test
mov
test
xchg
fisttps
push
ds
mov
mov
ljmp
mov
lea
xor
xchg
push
in
push
test
cmpl
adc
pop
mov
mov
loop
nop
ds
lahf
fwait
pop
xchg
jno
jb
fwait
xor
jnp
adc
inc
loope
stc
dec
xor
pop
lcall
add
sbb
lds
and
stc
hlt
fs
fstps
inc
or
lea
addl
fbstp
cmp
outsl
aad
and
mov
aam
adc
jge
pop
fnclex
sub
pop
lcall
popf
sarl
push
int3
and
jl
inc
es
pop
inc
mov
xchg
jecxz
movsb
cld
popa
aaa
in
pushf
popa
dec
jg
cmp
jb
or
dec
cmpsb
or
daa
data16
sub
dec
je
xchg
xor
mov
push
int3
mov
outsb
std
loopne
sbb
sbb
repz
nop
dec
aam
sbb
xor
xchg
pop
add
out
rolb
and
fstps
or
movsb
loopne
scas
mov
out
dec
mov
mov
and
xor
add
and
mov
mov
sarb
add
je
lds
add
jmp
push
jp
dec
test
rcrb
xor
cmp
shll
lock
sbb
mov
ror
je
ss
push
adc
xor
jb
pusha
mov
cs
and
cmovno
xor
imul
inc
lds
mov
inc
mov
add
sarl
into
outsl
imulb
bound
nop
push
jle
rorl
cmpb
and
cmpsb
ret
adc
and
push
enter
push
sub
push
sub
js
xchg
xor
dec
mov
adcb
cltd
psubusw
cmpsl
inc
sbb
std
push
outsb
inc
daa
add
and
outsb
decl
pop
out
loopne
ficomps
xor
dec
push
popf
pushf
repz
shrl
pop
in
adcb
cmp
nop
frstor
cli
shrl
pop
iret
rorb
out
fwait
lahf
jmp
mov
cmp
fisttpll
xchg
insl
mov
dec
sbb
mov
pop
pop
mov
mov
jbe
cmp
mov
outsb
inc
lcall
repnz
sbb
stos
addb
mov
ret
push
sub
loope
xchg
push
int
fisttpll
aas
and
lock
mov
add
cmpsb
mov
jl
cmp
add
jns
jo
dec
fldt
add
fildl
cwtl
cmc
cmp
ljmp
and
pop
jbe,pn
adc
mov
push
mov
pop
fisubs
cmp
xor
popf
daa
data16
out
jns
cmp
cmpsl
dec
decl
cmp
adc
sub
dec
jo
sub
mov
lods
jmp
xor
out
mov
push
sub
shll
dec
sub
jo
push
push
adc
cmpsl
add
pop
mov
aaa
cli
insb
jb
mov
mov
pushf
mov
mov
jne
aas
xor
jmp
pusha
and
std
add
lahf
and
loopne
dec
clc
aas
cwtl
push
idiv
enter
test
mov
in
adc
mov
incl
scas
xlat
inc
jecxz
lods
aam
cld
popa
jle
cmp
dec
mov
and
fwait
add
cmp
out
sbb
mov
ret
push
pop
push
add
xchg
pusha
in
dec
pop
scas
int3
sub
or
loopne
inc
mov
or
je
adc
int
or
ss
test
jae
adc
shrl
stos
in
xchg
ljmp
xlat
fistps
enter
inc
and
sahf
mov
or
dec
mov
movsb
adc
notb
clc
imul
lret
testb
push
jnp
or
inc
data16
outsb
mov
push
add
mov
stc
cmp
xchg
ss
push
call
dec
jmp
ja
jns
dec
pop
mov
or
push
dec
push
or
lock
dec
shr
addr16
and
int3
jne
xchg
arpl
lds
setne
xor
dec
cli
mov
sub
dec
aad
imul
testl
and
pusha
nop
push
sub
fdivs
inc
cmp
cli
in
hlt
xchg
movsl
mov
pop
dec
les
rolb
mov
mov
push
xchg
notl
cmp
jno
cltd
mov
jb
sbb
cmc
pop
imul
js
xchg
cmpsb
es
xchg
test
mov
inc
xchg
mov
mov
flds
or
mov
dec
mov
mov
pop
mov
call
mov
cmpl
fisubs
iret
sar
mov
clc
mov
mov
in
push
push
jb
shlb
dec
mov
mov
cmp
nop
daa
push
mov
sub
push
sbb
cmp
add
sub
adcb
std
push
cld
sbb
and
xchg
inc
xchg
add
enter
cwtl
add
imul
dec
mov
js
shll
or
mov
push
mov
mov
or
outsl
addr16
cmpsl
ret
and
test
mov
mov
lds
ficomps
lock
cmp
add
or
mov
mov
cmp
dec
cltd
in
jmp
hlt
movsl
es
loope
aam
adc
scas
jecxz
aad
pop
sbb
jb
ret
ret
inc
shlb
lock
movsb
pop
ja
sub
shl
xchg
mov
fisubs
das
fsubrl
and
es
pop
pop
sub
jb
mov
add
pop
sub
cmp
adc
call
mov
cmp
add
xchg
push
arpl
xor
mov
inc
add
sub
dec
into
lret
in
jno
push
mov
push
xchg
mov
xchg
push
xor
lods
fstpl
mov
ds
mov
ret
push
sub
lods
mov
mov
outsl
mov
inc
mov
push
inc
data16
ret
jg
cmpsb
xor
jl
pop
stos
scas
pop
nop
test
jnp
push
aaa
sbb
hlt
insb
stos
es
sbb
sub
inc
mov
sbb
dec
fidivl
dec
mov
mov
xor
movl
or
fmull
scas
adc
add
or
cmp
xchg
xchg
mov
mov
mov
jb
dec
or
stc
mov
and
iret
push
cwtl
sbb
lods
stos
hlt
mov
loope
jns
jno
cmpsb
stos
push
or
xchg
jecxz
xchg
loop
adc
les
mov
je
ljmp
jo
inc
and
cld
xor
push
jo
mov
add
xor
or
int3
add
cmp
and
pop
pop
shrl
mov
inc
xchg
jg
mov
out
jmp
cmp
cmp
sub
into
fwait
xor
sbb
adc
inc
jbe
imul
fwait
cmp
lret
mov
sub
fistl
bound
adc
popf
jmp
add
mov
lea
mov
or
fs
xor
subb
divl
rcr
and
xor
cwtl
popa
cwtl
cli
push
and
mov
push
cs
lods
jp
pop
pop
lods
and
pop
ret
out
xchg
jmp
add
aaa
gs
daa
or
sbb
jns
int
mov
repnz
cwtl
repz
inc
pop
sbb
lock
outsl
rorb
pop
imul
xchg
sub
mov
call
or
push
adc
addr16
bound
je
or
clc
sub
add
or
mov
push
mov
icebp
push
imulb
sbb
adc
data16
sub
mov
repnz
adc
gs
insb
cmp
das
cltd
inc
in
xchg
ret
pop
dec
push
icebp
mov
cli
jb
or
mov
xor
out
in
int3
xor
adc
push
cmpsb
dec
push
fcomi
xchg
pop
mov
xchg
mov
add
mov
inc
mov
insb
lock
cmpsb
sub
rcrl
aaa
cwtl
sbb
nop
andl
int
and
ljmp
repz
xor
push
jns
or
mov
and
mov
mov
or
adc
popf
addr16
fdivr
or
mov
add
pop
psubsb
cmpsl
xor
mov
or
int3
bound
popf
testb
data16
dec
fbstp
pop
and
push
insb
pop
mov
dec
pop
test
xor
pop
inc
mov
imull
jp
mov
insl
mov
test
fistps
das
pusha
cmpsb
jae
mov
pop
and
pop
in
or
adc
push
imulb
mov
jae
xchg
cs
mov
clc
inc
or
mov
push
insb
xor
movsl
mov
ds
cmp
fwait
int
lods
outsl
ret
xlat
or
mov
orl
int3
sbb
cmpb
shll
insb
pop
lds
adc
sub
test
fwait
push
mov
sbb
sub
inc
xchg
cli
notb
stc
pop
sbb
cmpsl
arpl
sub
push
jno
xlat
push
push
lock
inc
test
icebp
mov
add
lret
loopne
mov
iret
fisttpll
enter
insb
fwait
in
gs
xor
inc
in
inc
fmulp
ficompl
mov
and
lahf
xchg
mov
cmp
sub
fldl
pop
repnz
push
add
jge
cltd
sub
out
mov
dec
or
cmp
movl
gs
jl
mov
xor
bound
push
pop
sub
insl
jecxz
jmp
fisubs
jl
in
ja
add
sarl
mov
jb
xchg
sbb
lret
inc
cltd
int3
insb
mov
pop
imul
dec
fbld
mov
push
xchg
adc
adc
lods
mov
data16
scas
mov
and
adc
xchg
pop
cmc
cltd
into
xchg
push
pop
pop
jmp
adc
repnz
mov
imul
xorb
ficoms
sub
inc
pop
lret
jb
push
pusha
and
and
mov
adc
test
or
inc
sub
es
inc
push
xor
cmp
mov
aaa
iret
adc
insb
ja
sub
pushl
mov
and
shl
mov
js
sti
mov
cmpsb
repz
and
cmpl
inc
inc
cmp
pop
pop
jns
mov
negb
adc
add
out
cli
xor
test
ss
cmp
test
insl
lods
lahf
test
mov
aas
jno
cmovns
fsubrs
xchg
and
sti
imul
subl
push
push
mov
xchg
mov
dec
adc
xor
nop
cmp
pop
je
adc
and
add
xor
dec
push
adc
and
push
pop
int3
xchg
add
pop
in
jae
and
and
mov
cmp
jae
das
mov
and
pushf
push
dec
ljmp
je
inc
cwtl
xchg
jle
and
mov
dec
fbstp
and
outsl
inc
cs
adc
sub
jl
outsl
stos
inc
jge
push
sub
inc
mov
lcall
push
fiaddl
ja
sub
mov
mov
addr16
or
cmpsb
sbb
imul
cmp
jl
in
xchg
mov
push
push
inc
mov
lret
pop
pop
aam
leave
pop
or
enter
ss
leave
dec
cld
add
adc
push
rorb
loop
mov
push
sub
lss
pop
mov
jge,pn
push
and
aaa
and
mov
enter
push
inc
mov
mov
xor
add
push
popf
dec
cmp
int3
pop
mov
popf
imul
imul
jnp
loope
in
sbb
outsb
jl
jns
push
jp
gs
push
jbe
insb
lds
movsl
mov
fcom
cmp
cmpsl
mov
xor
and
mov
ret
jg
cmc
push
cli
cld
and
mov
fiaddl
add
mov
lods
enter
cmp
out
xor
pop
ret
repz
ljmp
xorl
dec
jno
add
jbe
js
leave
test
aam
cmpsl
in
sbb
cs
cli
ret
inc
scas
fwait
sbbb
push
sbb
in
pop
jle
test
pop
dec
mov
or
sti
push
ss
adc
or
pop
push
mov
jecxz
push
push
add
xchg
and
pop
lods
dec
mov
adc
shr
ret
adc
outsb
out
inc
inc
or
ljmp
dec
xchg
pop
mov
out
cs
aaa
outsb
cmpb
jns
mov
sbb
and
in
dec
add
dec
movsl
sub
jnp
push
jne
sbb
push
sbb
xor
idivb
xchg
mov
cmp
js
loope
xchg
cmp
dec
pop
push
ud2
adc
cmc
movsl
inc
jle
xchg
pusha
dec
loopne
ret
aad
jg
xor
add
jmp
pop
in
add
pop
aam
fstl
sbb
mov
sub
jne
lahf
adc
outsl
pushf
shll
pop
hlt
push
insb
addr16
ret
push
cld
jp
inc
add
add
roll
pop
and
pop
aam
jl
xor
dec
mov
repnz
inc
dec
es
ljmp
pop
stos
jo
imul
cmp
lock
test
inc
pushf
adc
push
por
cwtl
mov
mov
movsb
lcall
cmpb
mov
jo
and
mov
in
adc
cli
out
rorb
jne
xor
outsb
stos
sbb
xchg
or
mov
sbbb
mov
adc
sub
fidivrs
aad
cmp
mov
jo
xor
fdivrl
mov
sub
mov
sarl
in
fiaddl
lea
fnstcw
rcll
int
in
cltd
xchg
sbb
outsb
adcl
cltd
sbbl
pop
sahf
xchg
xchg
xchg
dec
and
in
push
test
shrb
imul
outsb
sub
incl
adc
test
pop
shlb
js
fwait
xor
ds
push
cltd
jle
adc
call
xchg
cwtl
fstl
push
xorl
xchg
dec
mov
dec
xor
push
adc
ss
arpl
int3
xor
and
mov
or
inc
iret
icebp
or
fwait
and
cmp
outsb
int
push
mov
sub
xchg
jns
or
add
cmp
rclb
sub
mov
adc
jno
je,pn
mov
add
xchg
inc
push
ret
jae
add
add
sub
xor
out
xchg
xor
ror
cs
mov
ss
push
mov
mov
frstor
jmp
cmp
xor
out
cmpsl
and
popf
lods
fnsave
push
hlt
inc
aaa
loopne
cmpsb
mov
inc
push
mov
sti
adc
pop
dec
loop
xor
outsb
je
adcb
fidivrl
pop
insl
rcll
jo
rcrl
pop
shl
movsb
push
xor
sbb
cmpsl
or
scas
pop
adc
jp
filds
mov
iret
flds
xchg
mov
pusha
pop
addl
cmp
sbb
mov
sub
mov
mov
pop
pushf
lret
cmp
arpl
fs
and
push
mov
out
push
scas
sbb
stos
bound
in
inc
loop,pt
cli
dec
ss
adc
push
sbb
pop
fisubs
into
into
clc
and
or
pop
loop
pop
andl
mov
mov
and
mov
push
xor
ss
xchg
mov
fdivrs
scas
lea
mov
fadds
je
or
lods
cwtl
cmp
mov
cmp
dec
mov
shrb
pop
mov
sbb
cmpsb
cmp
ja
cmpsl
gs
mov
push
sti
and
popl
xchg
ret
sub
je
push
add
lock
arpl
xchg
out
stc
rorb
jg
icebp
and
mov
mov
pop
jl
test
adcl
aam
adc
adc
dec
out
aaa
push
mov
lock
mov
dec
pusha
cmp
and
mov
sub
mov
adc
test
and
das
data16
cmc
adc
inc
xlat
leave
mov
fsubs
push
jl
or
and
mov
jle
pusha
mov
out
movsb
stc
sub
popf
add
add
shrb
mov
sar
push
push
dec
out
dec
jmp
int
push
out
jl
push
cmp
js
add
arpl
outsb
jnp
cmp
rcr
xor
loop
repnz
jp
sbb
pop
mov
jb
adc
mov
pop
jae
lods
jno
sti
dec
outsl
jle
lods
popa
adc
subb
cmp
push
dec
mov
dec
add
int3
in
aaa
dec
add
xchg
cmp
adc
or
int
xor
adc
pop
jmp
mov
aas
loopne
push
ror
inc
xchg
push
mov
flds
loope
mov
ret
jo
jbe
out
fidivl
mov
sarb
test
cmp
movsl
cmp
add
add
sub
jo
int3
fildl
rcr
or
xchg
scas
int3
mov
imul
adc
imul
cs
inc
push
inc
jle
test
mov
xor
pop
lret
cmp
inc
inc
cld
mov
imul
movsl
ljmp
stos
mov
arpl
lods
popa
adc
outsb
push
ja
mov
outsl
adc
into
lea
cmp
out
add
inc
sub
and
stc
jle
cmc
jnp
into
out
out
cld
jge
in
dec
outsb
jmp
and
nop
std
mov
ret
adc
adc
dec
pop
sbb
mov
lret
outsb
adc
jno
clc
rclb
repnz
dec
add
cmp
push
and
sbb
leave
cmc
incl
push
jnp
andl
push
inc
mov
cmp
in
inc
and
xor
mov
add
shlb
sysexit
xor
roll
leave
or
push
je
imul
scas
mov
sti
mov
push
inc
lock
mov
dec
push
insl
test
mov
mov
mov
xchg
jmp
mov
sbb
adc
bound
shlb
mov
adc
aad
andl
enter
pop
imul
testb
ljmp
mov
or
and
cwtl
pop
sub
fs
dec
xchg
mov
inc
mov
and
sahf
arpl
sbb
shll
jnp
xchg
lods
xorl
push
stos
jbe
pop
inc
fistpl
sbb
add
lahf
in
int
out
add
jl
shl
jbe
fnsave
cmp
clc
nop
ror
push
adc
ss
adc
push
data16
cmp
mov
adc
sbb
and
add
add
inc
lds
pop
jo
adc
loope
adc
cmp
push
loope
data16
push
ds
daa
xchg
fwait
testl
dec
sbb
sub
jnp
and
mov
mov
xchg
push
mov
push
iret
xchg
insb
mov
jecxz
or
xlat
push
stos
loope
std
loop
lea
fisubrl
xor
sbb
or
cmp
xor
dec
cmpsl
test
aad
mov
lods
cli
xchg
sarb
ja
dec
adc
loope
jp
insb
test
insl
xor
pop
fmull
repz
cmp
adc
imul
inc
push
out
inc
sbb
je
movsb
sub
lea
adc
mov
add
jbe
jnp
lds
enter
and
lds
sub
and
sbb
push
int3
insl
pop
xchg
push
mov
push
jne
mov
out
cli
sub
lret
lret
mov
enter
mov
jmp
push
adc
rorl
push
add
xor
popa
nop
xor
dec
cmp
mov
push
sbb
aaa
mov
add
mov
jecxz
push
or
add
mov
inc
mov
movsb
inc
adc
test
mov
lret
shrl
jne
add
inc
inc
mov
js
cmp
fistpl
mov
sarl
out
movsb
xor
xchg
mov
incl
xorl
pop
cmp
mov
mov
mov
and
cltd
or
xlat
jns
dec
mov
xor
sbb
imul
cmp
lock
dec
gs
sbb
cwtl
mov
pop
andb
fidivl
in
jle
mov
push
aas
lods
xor
aad
xchg
sti
sub
out
inc
scas
xchg
cmc
shr
add
repz
mov
jae
jge
cli
and
out
in
xchg
imul
pop
je
and
sub
mov
notb
and
push
mov
pop
sbb
inc
cmp
pusha
cmp
push
ficomps
mull
sbb
pop
clc
push
mov
aam
add
or
pushl
out
inc
mov
jmp
cmp
cmpsl
mov
xchg
pop
pop
jno
xchg
or
bound
xchg
push
pushf
add
popa
and
mov
arpl
in
jecxz
mov
popa
shrb
mov
repz
cmp
sub
dec
xchg
out
inc
jae
push
xchg
push
in
out
les
push
int3
ljmp
fstsw
sub
in
inc
and
mov
mov
jnp
xor
cmpsb
and
push
and
dec
pop
out
test
adc
jp
pop
aaa
xchg
lahf
imul
rorl
into
pop
outsl
sahf
test
sub
inc
psrlw
push
js
and
mov
sub
leave
ret
adc
adc
std
insb
arpl
add
das
jl
inc
push
cmp
jno
movsl
mov
dec
vlddqu
clc
aam
jns
sahf
jnp
rolb
std
or
adc
push
mov
negb
push
mov
ja
ret
movsb
inc
adc
in
adc
jno
out
repz
pushf
xor
int
rol
lret
inc
xchg
mov
in
pop
stos
pop
xor
lods
inc
pop
mov
mov
mov
xchg
mov
outsl
ficomps
movsb
lods
sti
add
imul
out
cltd
insl
and
cmpsb
into
cmp
fcmovnu
inc
call
daa
xchg
setno
xor
cltd
mov
mov
lret
pushl
pop
js
or
or
pusha
adc
jmp
sbb
or
cld
pop
movsl
mov
mov
mov
popf
xchg
and
out
or
clc
pop
inc
dec
mov
fldl
leave
dec
cmc
lock
cmpsb
or
and
xchg
testl
mov
out
sub
push
sysenter
insb
add
mov
repz
int
lods
testb
dec
push
mov
mov
test
clc
int3
cmp
rcl
sahf
add
movsb
mov
xchg
adc
pop
jns
mov
mov
psrlw
std
add
or
clc
inc
and
aas
lret
fwait
cmp
dec
imul
jbe
jno
mov
arpl
pop
pusha
ret
fxch
pop
lahf
push
push
mov
add
test
nop
dec
mov
cmp
enter
arpl
inc
push
es
inc
jb
pop
xor
incb
sub
mov
ljmp
inc
mulb
mov
mov
pop
popf
test
push
call
fidivrl
xchg
pop
sbb
sub
mov
cs
and
in
adc
push
mov
in
pushf
add
enter
pop
xchg
scas
mov
iret
into
scas
mov
out
inc
test
inc
sub
or
data16
movsl
mov
fcmovne
mov
movsb
pop
scas
movsl
das
movb
mov
mov
xchg
add
insl
pop
cmp
sbb
jbe
nop
mov
adc
je
pop
stc
and
pop
movsl
in
xchg
fadds
hlt
repz
xchg
ret
pop
lods
test
les
add
int
loope
pop
push
push
sbb
outsb
push
add
test
vphsubdq
dec
sbb
sub
enter
aas
cltd
jge
or
adc
jae
mov
add
or
int3
bound
cwtl
jns
loope
les
imul
mov
arpl
jns
jecxz
cwtl
call
mul
mov
xchg
mov
mov
or
mov
es
aaa
and
push
adc
shlb
je
add
cmp
inc
aad
pop
mov
imul
sbb
lret
add
fstl
in
int
and
repnz
jge
int
sbb
jmp
outsb
sbb
fbld
pushf
nop
push
mov
stos
lcall
push
ljmp
inc
push
mov
outsb
into
and
stos
aad
int3
xlat
jnp
dec
sbb
cltd
mov
arpl
dec
ficomps
popfw
int3
aas
das
lcall
jns
add
cmp
outsb
hlt
testl
aaa
xor
test
cmpsl
stos
mov
loopne
inc
jo
sti
pop
mov
aaa
testl
cmpsl
hlt
std
sub
jmp
mov
jl
clc
pusha
daa
in
cmp
fwait
sbb
or
aad
mov
pop
pushf
sbb
popa
push
jg
faddl
jecxz
jns
insl
lods
inc
dec
and
push
pushf
pop
stos
mov
xchg
into
pop
clc
mov
lods
jae
aaa
xchg
test
fidivrl
fstpt
dec
dec
push
in
xchg
jg
enter
les
mov
div
out
lretw
dec
adc
ret
daa
sub
cmpsl
mov
push
xor
nop
fnstsw
or
shlb
hlt
shrb
clc
add
cli
adc
fnstenv
jns
xor
sbb
cmp
and
cmpsl
pop
jbe
push
or
pop
in
pop
sub
popf
mov
in
push
aam
xor
jb
jge
in
cmpsb
or
in
add
xchg
in
xchg
lea
pop
shlb
pop
ds
sbb
xor
dec
dec
hlt
rorb
addr16
cmp
xchg
and
int
pusha
mov
mov
xor
cld
dec
cmp
test
pusha
icebp
lods
cmpsb
inc
out
scas
jge
lcall
sbb
sbb
dec
push
mov
mov
or
inc
adcl
cwtl
out
popa
cli
xor
mov
push
addb
fstps
insb
popa
out
cmpsl
mov
bound
dec
sbb
push
add
orl
insb
inc
stos
fnstenv
mov
ret
jmp
xor
std
dec
inc
cltd
mov
pop
ds
push
dec
sbb
add
sbb
sub
rcr
mov
xor
xchg
shr
pop
add
out
jo
sub
pop
roll
mov
nop
inc
sahf
sub
dec
push
stc
ja
out
or
mov
push
cld
mov
jbe
in
cmp
out
ds
dec
daa
pop
scas
cltd
orb
adc
ror
xor
movsb
cmpb
rclb
sti
xchg
dec
aam
pop
xchg
push
xchg
test
inc
movntq
out
add
jb
enter
cmc
cmc
in
aas
les
insl
mov
mov
fsubs
cmc
and
xchg
clc
jne
imul
ror
mov
or
pop
ds
daa
ljmp
leave
xchg
in
out
loopne
in
adc
fwait
inc
add
mov
inc
rcr
jne
mov
imul
dec
pop
mov
xorl
pop
xor
cmp
push
mov
fildll
out
cmp
mov
adcl
out
cld
mov
mov
pop
add
cwtl
jo
dec
scas
decl
jno
idivb
leave
repz
insl
loop
xchg
jmp
fsub
xor
push
mov
mov
fdiv
hlt
test
gs
fucomip
mov
mov
jns
push
adc
shll
add
repz
cmp
mov
and
aam
pop
icebp
lret
pop
push
mov
inc
xchg
adcl
cmp
ret
aad
mov
lock
xor
inc
mov
or
pop
lds
movsb
dec
cs
pop
push
push
loopne
movsl
fdiv
in
sahf
out
cld
sbb
jmp
and
push
into
lcall
fdivr
daa
mov
js
insb
push
xchg
popa
adc
or
filds
pop
mov
sub
jle
pushf
xor
cwtl
adc
or
mov
sbb
aas
mov
loop
ljmp
xor
pop
outsb
push
call
cmp
bound
lahf
sbb
sub
rorl
int3
inc
xchg
iret
adc
xchg
inc
push
pop
andb
sbb
repz
lea
push
or
inc
adc
pop
push
insb
pop
sbb
pop
pop
or
adc
insb
mov
lahf
ret
gs
test
icebp
dec
rcrl
repz
pop
sub
hlt
cwtl
ss
in
fistl
daa
add
fnstsw
cwtl
cmp
pop
inc
aad
add
mov
dec
mov
arpl
lret
insb
ret
scas
and
xchg
or
inc
dec
push
cli
shl
sahf
mov
inc
clc
inc
and
and
jmp
aas
loope
outsl
jo
and
sbbb
jnp
es
stos
into
clc
cmp
sbb
sub
inc
scas
imul
rdmsr
mov
addb
jg
cs
cmp
xchg
aas
mov
xchg
aas
mov
insb
pop
mov
inc
nop
mov
sbbl
dec
jne
nop
movsl
mov
inc
and
xorb
adc
adc
mov
xchg
mov
mov
xchg
sub
in
push
push
ret
enter
jle
push
cmp
add
mov
push
push
mov
dec
and
ror
cmp
clc
xchg
and
and
pop
push
es
rcrb
mov
jae
jg
add
lret
imul
scas
push
xor
in
movsb
int
pop
mov
or
xchg
lret
popf
mov
mov
loope
inc
adc
sub
loopne
mov
test
arpl
inc
sahf
pop
add
test
cmp
fs
mov
addr16
adc
push
mov
pop
add
push
fwait
test
jp
inc
push
sahf
scas
mov
cmp
mov
cmp
xor
mov
fisttpl
mov
xor
mov
lods
pop
xchg
cmp
sbbb
stos
pop
fs
push
or
rcrl
pop
test
negl
leave
scas
lcall
ret
or
dec
adc
jmp
xorl
insl
adc
movsl
in
xor
mov
xchg
in
xlat
dec
lods
cmp
mov
int
jmp
push
pop
inc
mov
pop
sahf
fdivr
xchg
xor
sub
mov
push
pop
test
push
clc
outsb
scas
pop
and
and
xchg
sti
or
pop
test
cs
mov
test
cmp
mov
mov
subl
jne
aam
xor
mov
aas
add
mov
in
mov
mov
adc
sbb
jl
sub
add
add
cmp
lods
stos
mov
jno
push
ss
stc
mov
sbb
mov
scas
xor
dec
xchg
mov
mov
mov
push
addr16
arpl
out
mov
subl
xchg
cmpb
test
push
dec
add
jne
je
sbb
imul
inc
arpl
xor
inc
jae
jmp
jecxz
fistpl
or
pop
xchg
outsl
nop
adc
clc
les
add
std
aaa
aas
jp
leave
inc
xchg
data16
dec
mov
push
mov
push
xor
and
jnp
idivl
in
or
movsl
ffreep
out
mov
scas
push
push
inc
enter
mov
fiadds
sbb
xchg
dec
cmc
jno
stos
push
rcrb
sub
or
imulb
xor
hlt
ds
insl
and
fistps
rclb
sahf
mov
fidivrs
adc
push
mov
dec
loope
ficoms
rcll
mov
inc
dec
pop
mov
ja
mov
les
in
fucomp
cmp
xor
jne
lahf
inc
xchg
or
cmpsl
hlt
inc
and
and
dec
push
shlb
nop
loopne
rorl
aas
daa
shl
bound
repnz
cmpl
sub
repz
stos
popa
into
lret
sbb
out
call
sub
mov
jmp
mov
cmc
cmc
test
dec
push
lds
cmc
movsb
repnz
pop
mov
jb
lds
mov
mov
mov
jnp
js
and
lods
ljmp
inc
push
int
mov
icebp
cmp
icebp
cmp
cmp
jo
rorl
outsb
fbstp
adc
pushf
dec
pop
jge
jl
cmc
mov
lds
inc
dec
movsl
and
stos
aad
cltd
orl
clc
and
cs
adcl
pop
dec
js
mov
adc
cmpsl
inc
push
andl
sbb
or
sbb
in
mov
adc
arpl
sbb
fstl
pop
push
add
ret
sub
mov
push
hlt
ret
aam
cmp
rcr
in
ja
fistl
aam
push
push
es
aad
sub
stos
sbbb
rolb
stc
test
dec
mov
lods
test
push
or
out
addl
divb
pop
sti
jae
mov
sbb
pusha
inc
in
dec
adc
adc
push
jo
xchg
sbbl
jecxz
lret
rol
push
outsl
add
int
mov
mov
addr16
ja
test
pop
js
insl
pop
inc
add
mov
out
icebp
inc
pop
pop
mov
fldt
adc
fdivl
mov
test
adc
sbb
dec
mov
jl
and
or
mov
jg
dec
jne
cld
repz
cmp
les
mov
mov
hlt
repz
cli
call
and
adc
cmp
int3
sub
and
jl
rorb
cmp
imul
pop
or
add
lret
mov
repz
adc
pusha
jge
outsb
mov
es
imulb
mov
mov
shrl
hlt
dec
pop
aas
push
cmp
dec
or
push
mov
xlat
cmc
xor
lods
repnz
xchg
add
push
repz
icebp
lcall
jg
sub
mov
jl
xchg
or
aaa
dec
je
push
pop
cltd
lds
data16
mov
fs
xchg
ret
insb
call
popa
push
jp
cmp
cmp
repnz
insb
je
out
enter
fisubs
test
loope
movsl
xchg
pop
xchg
enter
cli
sub
xchg
or
mov
cs
repnz
pop
pop
jno
pop
loopne,pn
out
push
int3
clc
int3
cmpsb
push
adc
and
sub
pop
test
hlt
push
push
mov
lock
sbb
scas
push
arpl
fldcw
shlb
sahf
jno
xchg
fisubrs
mov
dec
in
aaa
stos
mov
jge
repz
fbstp
push
aaa
mov
nop
sbb
and
cmpsl
sbb
jge
xchg
into
inc
cmp
push
mov
sub
xchg
add
dec
adc
pop
fsubr
mov
push
cmp
lods
cltd
cmc
xor
jl
xor
ss
push
mov
repz
mov
stos
jmp
or
mov
movsb
xor
cmp
xor
mov
fadds
faddl
test
movsl
es
adc
loop
jno
push
sbb
sarb
mulb
sub
pop
daa
hlt
push
sbb
or
add
ljmp
mov
sbbl
popf
mov
jecxz
cmp
push
fnstenv
ljmp
push
loop
popf
xchg
arpl
outsl
xorl
cmp
xor
adc
inc
pop
cli
bound
pop
dec
cli
cmpsb
pop
push
push
aam
rcrb
jbe
insb
mov
fnstcw
subb
push
push
pop
je
std
mov
in
jbe
icebp
mov
addr16
inc
sub
mov
adc
pop
stc
adc
pop
inc
jne
fwait
inc
pop
sub
clc
sub
movsl
mov
jg
test
sub
mov
xchg
ljmp
adc
jb
in
push
stc
sub
out
js
mov
add
movsw
pop
pusha
mov
lods
mov
lcall
mov
movsb
jne
push
shlb
in
xchg
iret
pop
or
stc
push
jae
dec
push
mov
aad
add
pusha
sub
jp
xchg
lock
pop
out
inc
xchg
int
sbb
xorl
into
sbb
pusha
xchg
mov
lret
xchg
cmp
rorl
out
lahf
push
inc
dec
jb
lods
dec
mov
sti
repz
mov
dec
loopne
pusha
scas
test
add
xor
sub
call
enter
xchg
add
bound
mov
jb
loope
imulb
add
scas
and
xchg
xchg
cltd
sti
adc
int3
xor
mov
imulb
mov
stc
out
mov
adc
jge
mov
jo
inc
rcr
dec
outsb
add
sub
inc
pop
imul
push
adc
add
fldl
sbb
stos
push
loope
mov
stos
jnp
orb
imulb
popf
dec
mov
lods
jo
add
enter
test
test
mov
in
cmp
lods
cmc
dec
or
push
je
rclb
inc
icebp
mov
sti
mov
add
xchg
add
sub
fwait
adc
or
sti
cmp
fisubs
xor
xchg
cmp
mov
lret
stos
in
roll
out
push
sub
xchg
sbbb
mov
mov
push
jno
ds
mov
int
jp
fdiv
xor
pushl
orb
repnz
pop
test
repnz
mov
pop
fcoml
pop
sub
out
inc
fistps
sbb
insl
push
jns
dec
mov
add
dec
pop
mulb
loope
jge
fidivs
adc
ret
xchg
fistpl
jp
fwait
dec
pop
mov
mov
out
jmp
push
sub
mov
mov
icebp
das
out
sub
leave
mov
stos
and
aas
sub
fsts
mov
xor
imul
push
notl
adc
mov
cmp
mov
pushf
and
lock
add
xor
mov
add
cmp
sbb
lahf
dec
popf
jp
jle
lret
mov
out
mov
insl
cltd
and
pop
lret
and
and
aam
adc
sti
lods
ret
mov
mov
inc
scas
cmc
ljmp
scas
gs
inc
lcall
sbb
cli
ss
mov
xor
mov
rcll
cmp
sti
decb
mov
xchg
aad
enter
movsl
mov
push
mov
out
jns
sbb
push
jne
mov
lock
xor
inc
aam
test
sbb
call
test
mov
mov
push
unpckhps
ds
add
out
or
orl
loop
inc
push
jp
test
scas
push
jb
cmp
fwait
loop
or
inc
jg
stos
sub
xor
or
test
mov
sub
mov
nop
movsl
push
sti
js
sub
adc
enter
call
imul
je
inc
inc
sahf
mov
pop
arpl
popf
add
sub
jnp
shll
cmp
push
mov
add
les
sbb
jg
pop
lds
lds
aas
cmp
and
or
aaa
out
jle
xchg
xchg
mov
inc
xor
ja
sahf
dec
mov
or
sahf
aam
movsb
inc
mov
and
cs
insb
add
ss
mov
out
mov
out
jg
or
loop
out
mov
xchg
and
ret
lret
cmp
fnstsw
or
mov
lock
stc
in
aas
in
mov
jg
pop
sbb
imul
hlt
xor
jp
sub
in
mov
insl
pop
jae
add
testl
das
sbb
and
aas
mov
rcll
cmp
inc
out
sub
mov
lcall
adc
mov
pop
sbb
out
pop
sbb
ja
dec
out
push
pop
das
lea
insl
push
dec
and
lock
cwtl
addr16
leave
mov
mov
scas
mov
in
push
dec
adc
pop
sbb
dec
pop
and
cmpsb
lret
add
sbb
jb
xchg
sahf
mov
inc
mov
jae
test
addr16
xor
hlt
pop
pop
clc
adc
dec
mov
push
arpl
ret
call
dec
or
mov
adc
js
inc
es
cwtl
hlt
stos
sbb
into
imul
pushf
mov
gs
jb
stos
adc
push
lods
aaa
fwait
pop
fcmovb
in
je
mov
repz
adc
into
sub
dec
or
and
sub
das
ret
les
xor
add
pop
daa
ror
std
out
mov
das
add
jge
insb
lock
or
stos
and
cmp
stc
loope
aam
dec
lret
clc
ds
pop
add
cmp
and
pop
pop
dec
dec
pop
push
xchg
cltd
xchg
insl
mov
dec
jae
hlt
rolb
enter
aam
push
cmp
mov
lcall
mov
fnsave
add
stos
fmuls
push
sarl
adc
add
xchg
xor
dec
xchg
xchg
arpl
es
add
mov
outsb
cmp
xchg
fists
jp
sbb
ds
movsb
xor
push
add
xor
es
push
ss
xor
jge
fwait
mov
xlat
xlat
lods
mov
cmpl
popa
push
rol
dec
cld
clc
sbb
into
imul
mov
dec
and
cmc
mov
mov
xor
cwtl
mov
jnp
insb
sub
or
pop
insl
aas
lea
loop
mov
mov
jne
pop
xchg
xchg
loopne
cmpsb
or
adc
fistl
dec
xor
jb
cwtl
xchg
jns
xlat
pop
xor
mov
xor
mov
ljmp
ds
insb
and
xor
out
lahf
int
add
int3
js
cmp
dec
nop
jae
les
adc
js
data16
cmp
leave
pushf
pop
test
aam
inc
add
out
lret
xchg
int
xchg
xchg
out
shr
sbb
repnz
push
lock
imul
pop
fstps
scas
lock
mov
out
out
shlb
mov
pop
cmp
jmp
mov
lock
pop
in
out
and
push
jp
mov
cs
imul
push
inc
in
and
ds
icebp
add
cld
cmpsb
jp
rsm
bound
pop
xchg
cmp
testl
mov
and
inc
mov
sbb
test
decl
les
mov
mov
testl
shrb
and
ficoml
daa
xchg
lods
cmp
lock
test
push
pushf
fmulp
jl
les
sbb
and
enter
or
cmp
mov
jecxz
cmp
cmpsb
push
fiaddl
mov
mov
aas
or
notl
cmp
js
subb
hlt
add
inc
inc
inc
repnz
mov
jp
sbb
cs
js
xorb
mov
mov
aas
push
and
outsl
jmp
pop
xor
jl
outsb
fisubrs
xchg
popa
mov
cli
cmp
pop
inc
sbbl
cmp
dec
inc
fidivrs
or
dec
inc
sub
outsl
jp
xor
xlat
mov
ja
leave
inc
xor
cwtl
inc
fs
mov
jnp
outsl
mov
div
mov
gs
xchg
inc
jb
in
push
mov
lret
cmp
add
cmpsb
test
mov
lret
mov
sub
sbb
cmp
fdivl
ljmp
lcall
dec
pop
lcall
ja
cmc
cltd
aas
outsb
test
stos
xchg
add
jae
and
pop
jecxz
popf
dec
test
cmp
xchg
jne
jo
lret
dec
cwtl
xor
lds
repz
cmpsb
int3
xor
stos
fbld
dec
or
pop
mov
dec
and
sub
mov
xchg
and
and
inc
add
pushf
pop
popf
in
ffree
inc
sub
dec
inc
jae
or
mov
gs
sbb
icebp
mov
push
add
or
mov
mov
jb
movsb
mov
into
push
xchg
inc
sbb
pop
push
jg
fsubl
jge
dec
xor
mov
inc
and
into
jmp
pop
ret
pop
mov
test
dec
es
ss
sub
insl
es
stos
adc
sti
lds
push
aas
popf
push
inc
je
adc
mov
imul
mov
nop
fabs
push
xor
rorb
mov
imul
jmp
ret
nop
and
sub
sbb
shrb
sbb
jmp
mov
mov
or
jbe
sbb
shll
ds
stc
sub
pop
sbb
or
and
pop
jmp
pusha
sbb
pop
movsl
mov
cltd
sbb
mov
mov
or
and
aaa
push
mov
inc
fldcw
cli
loop
lret
sbb
and
test
pop
mov
jns
iret
xor
fmuls
push
test
ss
les
scas
xor
and
fcom
xor
adc
xchg
add
outsb
mov
gs
int3
popf
es
mov
enter
lcall
xor
mov
sahf
clc
repnz
fs
arpl
sub
lahf
in
pop
stos
ljmp
ja
push
mov
ror
and
inc
dec
xor
dec
cld
adc
jae
ja
push
mov
fildl
add
mov
test
mov
push
dec
jle
leave
rcll
push
cmc
aaa
lret
inc
sti
inc
adc
lods
loope
cwtl
add
or
pop
in
push
mov
jnp
frstor
leave
jp
ja
dec
aas
inc
jne
xchg
pop
loope
movsl
inc
mov
xchg
hlt
push
push
xor
pusha
test
imul
ret
jp
mov
mov
and
cmpsl
pop
dec
pushf
ret
movsb
icebp
xchg
mov
push
out
loope
repz
lea
test
or
aad
sti
mov
shrl
fsubp
fisubrl
shl
in
lret
mov
js
nop
test
inc
ja
and
and
scas
addb
rcrl
xchg
and
fwait
ljmp
mov
sti
addl
ret
roll
xchg
dec
pop
cmp
bound
into
fists
test
insb
inc
mov
adc
in
pop
out
outsb
add
int
ret
dec
xor
std
dec
mov
arpl
dec
jecxz
mov
pop
pop
pop
sub
rol
dec
sub
and
out
je
push
imul
cmp
add
data16
sbb
inc
imul
call
call
shll
mov
or
jnp
mov
adc
jnp
roll
push
data16
xor
fsubr
inc
jb
xor
cmp
sub
jbe
dec
adc
shrl
mov
loopne
test
rorl
imul
mov
das
es
sbb
and
test
loopne
movsl
imulb
lds
jo
loop
imul
and
cmpsl
sbb
mov
data16
add
sbb
stc
pusha
nop
push
orl
sub
mov
xor
fcomps
jo
push
fistps
cltd
lahf
inc
dec
js
enter
subb
mov
movsl
sub
jg
out
mov
ds
pushf
incb
ds
out
dec
ljmp
adc
sub
cwtl
adc
mov
mov
mov
push
call
nop
push
dec
lods
orl
jecxz
add
push
sub
test
scas
or
mov
adc
sbb
push
outsl
sti
xor
nop
pop
fidivl
xor
mov
movsl
mov
popa
popa
xchg
iret
lock
outsb
push
pop
sar
jecxz
ja
pushf
rclb
fimull
loope
call
xor
jl
add
dec
xchg
push
mov
das
push
push
adc
xor
outsb
adc
sub
in
gs
mov
push
jecxz
inc
push
imul
fimull
sbb
dec
jnp
es
mov
inc
in
sub
mov
imul
jp
pop
dec
stc
mov
cmpsb
push
rolb
add
jg
mov
sbb
outsl
test
xor
sub
cs
xchg
mov
mov
dec
lds
jp
dec
mov
and
cli
sub
mov
shl
dec
mov
mov
sbb
pop
fwait
call
inc
repnz
mov
aam
arpl
leave
jp
cmp
fwait
cmp
pop
add
pop
xchg
mov
test
sbb
add
sahf
jo
mov
data16
push
inc
pop
and
inc
push
sub
inc
pop
mov
jmp
jge
adc
ret
fstpt
mov
inc
add
fstpt
lret
test
std
mov
push
add
mov
insl
mov
mov
mov
or
cmpl
sbb
and
lods
aaa
mov
fwait
sub
xchg
pop
add
call
add
movsl
push
xor
push
fmull
mov
cwtl
pop
xor
push
divb
pushf
dec
test
jnp
jle
in
push
dec
add
push
mov
sub
negb
xchg
rcrb
fcmove
imul
adc
popa
xlat
shlb
dec
mov
or
cmp
stc
sahf
pop
into
mov
cmp
ret
mov
dec
dec
jae
cld
xor
pop
xor
push
sub
push
rcrl
sub
fs
inc
jp
sbbl
jmp
lret
mov
and
and
ret
push
movsl
sbb
and
jns
les
inc
mov
and
or
incl
imulb
popf
hlt
imul
push
std
cli
stos
mov
mov
sub
xchg
packsswb
repnz
in
repz
das
pushf
xor
jnp
out
mov
or
dec
in
mov
add
inc
push
mov
flds
xorl
mov
test
nop
aam
aam
add
and
xchg
mov
jne
sbb
lods
pop
mov
inc
mov
or
fwait
stos
jns
mov
lock
pushl
das
dec
pop
jns
stos
ds
fdivrs
outsb
outsb
out
andb
orb
out
or
leave
loopne
add
cltd
xor
popl
negl
sbb
ljmp
ror
cs
mov
mov
adc
push
push
mov
dec
ja
clc
xchg
mov
xchg
dec
push
push
ret
dec
and
or
in
add
in
ret
jmp
in
jmp
cli
ret
cmp
inc
arpl
pop
cmp
mov
mov
aam
in
inc
and
add
fs
pop
push
dec
mov
and
dec
xchg
dec
adcl
dec
push
stc
xchg
sub
insl
jae
movsb
pop
mov
add
sub
cmp
movb
mov
lock
or
arpl
jno
je
cmpsb
cmp
sti
in
aad
icebp
in
movsb
cmp
mov
or
lret
aaa
sbb
vmovdqu
clc
inc
push
shlb
repz
movsl
mov
mov
ss
in
rcrb
data16
mov
xor
test
clc
shrb
int
movsl
push
cmp
arpl
clc
sub
push
aam
mov
push
lahf
mov
dec
add
push
xor
pop
mulps
jg
mov
or
aaa
outsb
leave
arpl
mov
cltd
mov
hlt
lahf
imul
lods
mov
int3
adc
repnz
jmp
push
sub
fisubs
addb
test
dec
addr16
pusha
test
ljmp
jno
out
and
out
dec
push
and
push
ret
fadds
fisubrs
aaa
aam
pop
sar
cmp
pushl
ja
or
std
jnp
aam
sbb
stos
mov
mov
popf
xchg
cmpsl
or
fisubs
mov
mov
cmpsl
and
xchg
imul
cmpl
adc
add
loope
outsb
in
nop
call
add
add
lods
sub
sbb
push
jmp
mov
rcrl
pop
call
xor
xor
in
xor
aam
and
das
pop
sti
fmul
andl
in
cmp
shll
mov
inc
xchg
adc
lock
push
sbb
mov
jnp
outsl
mov
dec
mov
cltd
cld
ja
fdivl
xchg
scas
outsl
lcall
mov
sub
pop
dec
push
and
or
mov
daa
or
cmp
or
movsb
scas
imull
fisubl
inc
adc
enter
jo
push
inc
push
clc
xor
jb
mov
mov
int3
cmovge
movsl
dec
xchg
sbb
mov
lahf
and
dec
mov
sbb
xor
mov
add
icebp
clc
in
cmp
push
outsb
mov
add
cld
iret
in
lahf
push
lds
out
in
imul
sub
out
loopne
adc
sbb
mov
add
cmpsb
or
mov
adc
cs
push
pushf
or
idivb
shll
push
notl
push
add
icebp
mov
mov
jne
sub
sbb
fmuls
mov
faddp
imulb
add
ljmp
lds
rorb
pop
xor
divl
mov
out
xor
enter
inc
mov
inc
jle
add
mov
jbe
ja
push
lret
mov
shrb
movsb
xchg
in
push
add
dec
cli
pop
jns
rorl
shrl
mov
mov
gs
or
repz
push
rorl
sbb
push
outsb
out
pop
into
cmpsl
aad
mov
loop
adc
bound
aam
and
bound
pushf
aam
cmpsb
mov
pop
cltd
mov
imul
pop
add
fisubrl
and
aaa
test
add
adc
lods
ds
adc
rcrb
pop
and
push
adc
cmp
icebp
arpl
xchg
test
and
scas
insl
xchg
repnz
lods
xor
je
leave
fisttpll
jge,pn
jns
movsb
test
pop
out
jecxz
xchg
pop
stos
adc
mov
je
stos
aam
adc
out
fs
or
jge
lods
dec
sbb
push
add
das
es
or
ljmp
je
adc
jno
adc
mov
cmc
idivl
rol
push
mov
or
or
xchg
cmp
inc
repnz
jae
lds
test
xor
dec
inc
pusha
sbb
test
inc
pop
lods
mov
adc
push
cmp
ljmp
insl
sbb
rclb
jb
pop
pusha
pop
es
int
out
fmul
out
repz
mov
jae,pn
xchg
lods
les
out
mov
pop
lret
inc
jno
jmp
lret
cmc
add
movsl
arpl
and
push
inc
jns
or
xchg
mov
cs
pop
or
repz
fs
mov
nop
addl
ss
test
mov
fcoms
cmp
cltd
into
mov
xor
call
mov
xlat
jg
es
mov
jne,pt
cmp
push
add
loopne
out
repnz
loop
mov
adc
push
add
ror
cmp
imulb
mov
scas
pop
xor
notl
test
bound
popa
mov
mov
push
jp
mov
mov
imul
adc
cwtl
mov
pop
aas
cmp
rolb
push
shl
dec
dec
inc
mov
add
push
in
dec
aas
jge
xchg
es
jmp
mov
xor
test
fmulp
stos
or
xlat
dec
mov
mov
pop
jne,pt
push
testb
cmp
fadds
xchg
lea
mov
fildl
cmp
repnz
call
xor
push
inc
mov
sub
mov
sbbb
ret
and
jecxz
dec
push
rolb
mov
inc
jmp
lret
imul
popa
aas
jl
ds
inc
fcomps
mov
push
ret
gs
dec
inc
lahf
mov
push
pop
test
cmc
sub
or
cltd
incl
mov
jbe
add
mov
pop
arpl
stos
push
mov
push
fucomip
gs
daa
sbb
add
jae
fwait
jp
subl
popf
jge
shrl
je
cmp
insb
inc
es
out
movsl
cmc
lock
into
ret
mov
pop
test
push
leave
pop
add
fisubrs
test
xchg
dec
xchg
rdmsr
cmp
test
jae
mov
xchg
mov
movsb
pop
mov
out
push
mov
xchg
pop
outsb
addr16
sub
cwtl
shrl
fwait
sub
leave
mov
adc
mulps
push
pushl
test
dec
adc
fildl
mov
mov
inc
mov
sub
or
fimull
adc
in
jne
lret
call
call
push
jmp
sub
or
adc
push
lcall
fnstsw
sbb
dec
sti
pop
push
and
and
fidivrs
dec
add
add
cmp
popa
add
test
dec
cli
push
or
xchg
push
in
sbb
jp
jmp
pop
mov
fnstsw
jo
and
sub
sbbl
int3
jo
or
sub
dec
xor
aaa
pushf
inc
or
bound
lahf
xchg
mov
mov
decb
cmp
inc
rcll
fidivl
push
cmpsb
ficompl
pop
sbb
je
and
and
xor
andl
js
jmp
gs
ds
clc
pop
adc
mov
dec
mov
pop
aaa
xchg
imul
pop
pop
add
mov
push
pop
xor
shlb
push
jns
jae
sbb
cs
clc
fcomi
pop
fildl
shll
jle
and
add
pop
lahf
cmp
lods
cmpsb
sub
cld
cs
add
rcrb
sub
repnz
jmp
inc
data16
xchg
add
fisubrl
push
popf
loopne
or
stos
push
sti
inc
sub
add
and
mov
lret
pop
mov
cltd
mov
sbb
ficompl
in
sbb
out
lock
cs
xor
mov
dec
mov
push
sub
je
inc
sbb
scas
shrb
pop
and
mov
sub
dec
xor
insl
je
push
fimull
jae
dec
xchg
addr16
jmp
pop
in
in
stos
pop
loopne
in
nop
popa
push
outsl
pop
mov
imul
mov
rcl
out
leave
inc
inc
or
sub
nop
arpl
sahf
cmc
sub
mov
clc
push
jae
adc
lret
out
adc
shrl
adc
imul
pop
cmpb
pop
mov
and
xchg
add
xor
bound
sahf
in
adc
fcompl
mov
add
mov
push
push
enter
cltd
pop
sub
pop
enter
xor
sbb
push
shlb
lret
orb
mov
mov
test
imul
incl
cmp
add
sbb
outsl
popf
xchg
pop
leave
in
imul
popa
mov
xchg
push
jmp
fs
stos
cmp
sub
cmp
cmpsl
cltd
jg
and
std
cmp
movsl
decl
fstp
gs
faddp
stc
mov
mov
js
in
in
mov
js
pop
jno
repnz
xor
leave
inc
dec
adc
out
cmpsl
jno
sub
outsb
or
xor
pop
mov
cmpb
enter
and
xchg
jnp
pop
push
sbb
cmpsb
stos
push
ss
mov
lea
xor
adc
xchg
add
sub
imul
or
mov
push
jl
xchg
cltd
insl
inc
mov
xchg
lea
jl
test
sub
fistpll
loopne
xor
cwtl
jb
enter
cmpsb
push
mov
mov
add
dec
mov
mov
inc
out
fsqrt
sbb
pop
xchg
jmp
dec
sbb
mov
add
idiv
jnp
mov
xor
mov
outsb
dec
jnp
out
adc
jo
or
mov
into
cmc
jnp
mov
les
mov
jp
sti
dec
mov
xorb
ja
aam
sub
mov
xchg
insb
scas
cli
fs
inc
push
pop
add
cmc
dec
popa
in
mov
push
test
xor
sbb
movsb
test
and
lcall
sub
ljmp
and
push
negl
jae
jno
pop
push
cmp
jle,pt
stos
rcr
jle
dec
js
xchg
sbb
mov
inc
test
mov
add
jle
in
loope
es
aaa
mov
pop
lret
pop
outsb
mov
mov
pushf
sub
stos
outsl
push
iret
test
sub
rcll
dec
mov
out
repnz
out
adc
hlt
iret
cmc
mov
mov
jle
mov
inc
pop
aaa
add
dec
in
cmpsb
jne
adc
cltd
dec
pop
imul
add
loope
aad
push
dec
dec
push
lds
adc
xor
out
clc
adc
cld
movsb
and
mov
inc
out
hlt
jb
mov
cmp
imul
cmpsl
mov
je
xchg
stc
sbb
and
popf
or
int3
popa
lods
ret
ja
dec
adc
mov
mov
jg
test
aaa
int3
xchg
movsb
mov
call
daa
adc
jmp
and
sbb
in
data16
std
adc
cmp
adc
mov
adc
int3
fwait
cmp
test
lods
pop
stos
inc
mov
stos
out
ficoms
or
cltd
dec
push
cmp
fdivrs
or
int
pop
push
sub
mov
leave
push
mov
dec
loop
inc
mov
pop
jne
add
pop
sub
icebp
and
xchg
dec
cmpsb
sub
hlt
test
xor
xor
inc
std
add
xlat
pop
cmc
adc
and
int
add
pop
ja
mov
fwait
mov
jnp
pop
jge
and
push
iret
pop
push
ds
xor
rcll
jge
xchg
xor
test
in
and
insl
cli
cmpsl
daa
cmp
and
mov
mov
mov
mov
xlat
and
test
ficoms
fistpl
cmpsl
nop
adc
adc
xor
divl
out
lea
push
add
dec
ror
dec
xor
sub
push
loop
test
lret
mov
adcl
movsl
mov
sub
push
aas
subb
push
push
inc
push
inc
fwait
sub
icebp
mov
mov
imul
lock
cmp
pop
mov
and
in
aas
jmp
mov
mov
mov
insl
fcompl
jle
push
xchg
push
push
movsl
jns
ja
jo
xlat
xor
imul
aas
mov
popa
loope
adc
aad
outsl
pop
dec
xor
dec
mov
adc
mov
dec
repnz
cmp
inc
mov
dec
and
andb
sbb
aam
xchg
test
mov
movsb
jg
mov
jnp
pop
outsb
scas
movsb
mov
xchg
hlt
jae
cmp
test
sub
dec
test
push
enter
mov
insl
pop
mov
jmp
lods
push
jb
pop
call
inc
mov
xchg
push
push
or
adc
subb
pop
push
xor
repz
cwtl
xchg
pop
imul
jbe
xor
add
lcall
out
or
adc
jb
in
scas
push
rcll
add
xor
in
cmpsb
xchg
lret
cmc
sbb
nop
js
pushf
fs
jle
sub
add
fldl
mov
ss
pop
insb
testb
fcompl
sub
rcrb
inc
mov
jg
test
and
ljmp
in
outsb
je
sub
das
notl
sbbl
cmc
gs
data16
out
pop
add
xchg
in
cmc
test
shrb
addr16
in
lock
fldcw
pop
inc
lret
je
in
sahf
stos
mov
fwait
and
mov
shl
inc
lret
xchg
push
inc
lods
xor
sahf
in
in
mov
mov
stos
std
push
pop
les
lods
cwtl
cli
jae
pop
out
or
mov
fiaddl
popa
push
mov
shlb
lcall
add
and
mov
lea
rorb
outsb
xchg
mov
jmp
cmpsl
leave
stc
cld
outsb
test
mov
out
inc
cmp
xchg
pusha
dec
and
imul
inc
test
shll
dec
push
xchg
jnp
xchg
pop
ja
xor
or
and
lahf
jecxz
and
pop
test
pop
sbb
inc
fisttpl
jb
rcr
shrl
adc
insb
ret
dec
xchg
add
push
test
jmp
pop
vcvttsd2si
mov
mov
mov
negb
push
jg
fwait
xchg
xchg
fcmove
cmp
shrl
in
push
jae
mov
je
jnp
aas
dec
mull
insl
test
sub
push
pop
in
dec
sub
ret
je
mov
arpl
xlat
imul
ds
idiv
ret
dec
lret
movsb
xor
dec
iret
aad
popl
jb
cmp
int3
in
cmpsl
push
ds
xchg
icebp
mov
cmp
test
sbb
ljmp
pop
cltd
pop
jg
sti
adc
lret
or
out
xchg
sbb
mov
aas
pop
cmp
cltd
adcl
lret
xlat
loopne
loopne
test
stos
sub
xchg
dec
push
pop
or
jg
push
jl
inc
or
add
add
dec
outsl
xor
repz
movsb
dec
sbb
sbbb
das
adc
or
cmpsl
mov
popf
fwait
das
clc
mov
out
cmpsb
sbb
call
shlb
lret
xor
cmp
pop
xor
sbb
pop
data16
sub
mov
xchg
cmpsb
std
or
and
ja
stos
repnz
cli
pop
cmp
call
fbstp
push
jbe
out
jns
pop
dec
inc
sub
xchg
pcmpeqb
inc
leave
fwait
push
shlb
pop
mov
cmp
mov
pop
popf
or
rclb
cmpsl
sub
and
push
sub
bound
fnstsw
xchg
sbb
loop
outsl
subl
inc
xlat
shlb
cmpsb
cwtl
stc
sub
cmp
xor
mov
shlb
out
sar
or
out
inc
rcrl
fsubrs
xor
dec
ret
pusha
lea
mov
out
iret
mov
enter
jl
mov
lahf
xchg
or
dec
sub
es
xchg
sbb
fldt
jns
sbb
shlb
adc
jns
repnz
jbe
push
mov
and
cli
jne
pop
pop
icebp
int3
test
mov
mov
sbb
mov
dec
mov
mov
and
in
push
cmp
fcomp
and
jg
into
aam
sbbl
mov
adc
mov
or
inc
movsl
jle
dec
adc
pop
sarb
pushf
scas
adc
scas
jbe
mov
jae
pop
mov
jge
pop
jmp
out
mov
out
mov
out
and
in
mov
in
xchg
sub
loop
ds
sbbl
fmuls
push
out
orb
pop
out
xchg
xchg
in
pop
dec
mov
adc
daa
addr16
mov
in
pushf
scas
orl
int3
mov
mov
xchg
mov
adc
mov
mov
lods
sbb
cmp
mov
sub
inc
into
scas
outsb
adc
mov
pop
outsl
aam
xchg
cli
mov
aad
std
idivb
outsl
inc
and
sbb
push
add
sbb
fisubs
les
and
aaa
pushf
cmp
call
push
mov
sub
cli
aam
ret
add
es
jnp
je
loop
dec
jmp
dec
cmp
lret
call
jne
fldt
xchg
cmc
pusha
es
and
or
and
pop
mov
dec
xlat
test
gs
mov
sbb
leave
dec
jo
int3
dec
fisttps
dec
fs
fisubrl
fildl
xor
cmp
pop
sbb
cmp
jno
les
insb
inc
pushf
mov
or
push
test
mov
jb
mov
cmc
xchg
bound
mov
shlb
mov
inc
data16
mov
shrb
sbb
dec
pop
inc
mov
xor
push
pusha
insl
mov
icebp
jbe
dec
push
adcl
dec
stos
pop
popf
in
aad
rcrl
loopne
enter
shl
xor
mov
movsb
jmp
lods
lock
rcrb
add
icebp
mov
push
fs
pop
jge
mov
push
fs
out
mov
jnp
out
xor
xchg
or
jecxz
ja
sahf
push
dec
shlb
in
les
int
scas
push
cmp
xchg
inc
ss
jb
pop
jbe
pop
jge
inc
sub
test
pop
aad
out
push
test
ret
aas
call
sbb
fs
jmp
fldt
int3
xor
clc
outsb
dec
push
icebp
jo
pusha
push
mov
cmp
loop
mov
inc
mov
or
jge
int3
les
pop
inc
mov
test
adc
outsb
sub
loope
sub
cmpsl
clc
imul
std
push
js
jmp
and
mov
daa
or
sarl
inc
and
arpl
dec
mov
sti
mov
sbb
inc
in
out
xchg
nop
jne
inc
mov
adc
ret
sub
popa
test
shrb
dec
lcall
pop
scas
into
or
jge
int3
aam
push
insl
and
mov
fmull
xlat
mov
dec
test
sarl
fxch
scas
stos
inc
push
fldl
sbb
jae
clc
imul
xchg
js
aam
subb
mov
and
fwait
ds
add
mov
call
mov
push
xor
push
sub
and
or
xor
xlat
adc
lods
mov
xor
sub
push
push
cmc
jge
mov
inc
or
movsl
cltd
test
test
mov
addr16
jge
aam
push
cmp
jae
lret
test
jg
mov
adc
sub
inc
repz
test
pop
mov
js
adc
test
sub
dec
push
out
xor
test
or
push
inc
add
push
sub
movsl
loop
push
loope
in
sarb
xchg
repz
repz
hlt
push
mov
sub
testb
rclb
cli
jge
or
cmp
sahf
out
insb
scas
test
pop
push
loope
mov
out
test
fisubrs
in
fdivl
sbb
pop
daa
loop
scas
push
sub
loop
pusha
xchg
pop
push
ss
nop
loopne
jle
shl
ljmp
sub
jg
xchg
dec
scas
fsts
xchg
cmp
push
lods
add
out
rolb
cmp
inc
sahf
sbb
jp
subb
add
sub
xchg
sub
icebp
outsl
idivl
adc
ret
xlat
aaa
divb
jne
adc
scas
xor
movsb
add
insl
xor
push
aas
clc
loope
xchg
sahf
addr16
lret
sbb
data16
testb
in
fsubl
orl
xchg
push
mov
in
mov
insl
pop
add
lds
sbbl
movsb
popa
int3
xor
mov
cli
mov
sbb
loopne
mov
fnsave
insl
mov
rclb
enter
lods
mov
mov
lea
mov
scas
jl,pt
cli
cmp
mov
outsl
idivb
mov
mov
sub
push
mov
daa
je
test
mov
insb
and
add
sbb
and
out
popf
mov
and
ret
gs
sub
mov
xchg
xlat
daa
add
pop
shrl
mov
pop
push
pop
jge
aaa
sub
ficoms
in
jns
sub
imul
scas
in
rorl
stos
pop
push
mov
sti
arpl
sbb
inc
add
stc
insl
in
jnp
xor
mov
subl
pusha
mov
insl
jns
jecxz
in
out
mov
shlb
lods
test
xor
in
std
sbb
jmp
add
imul
cmp
out
mov
int
sbb
test
stos
sub
dec
dec
mov
out
mov
int3
imul
xchg
lahf
mov
or
inc
insb
arpl
mov
insb
fninit
dec
mov
pop
and
xor
movl
shrl
ret
pop
sub
jl
orb
imul
mov
sbb
xchg
cmc
je
cmp
mov
inc
sub
lahf
cwtl
xchg
sbb
mov
adc
add
loope
sahf
decl
push
popf
js
int3
stc
shll
mov
decb
cmp
xchg
lods
mov
es
addr16
bound
ljmp
decl
ds
and
loop
push
bound
adc
sbb
or
xchg
add
add
cmp
xchg
rorb
mov
mov
and
push
pop
xchg
je
push
das
and
decl
add
mov
cltd
mov
int
xor
pushf
popf
xchg
in
mov
dec
cwtl
and
leave
sub
cwtl
in
loopne
xchg
add
push
mov
xchg
das
orl
jno
jecxz
sub
cmp
xor
push
xor
outsl
mov
or
jmp
dec
mov
mov
mov
fstpl
inc
out
stos
jnp
fnsave
sub
jbe
push
andl
jae
jg
es
lahf
test
mov
jne
popa
sub
xor
cs
cmp
mov
or
add
xor
hlt
add
daa
xlat
xlat
sbb
lcall
std
aad
xchg
mov
mov
pop
outsb
cmp
inc
push
cltd
enter
mov
int
inc
ud1
popf
add
ss
cld
aas
sarb
lods
je
sti
repz
sbb
stc
jp
push
xor
mov
jle
or
aad
dec
es
mov
ret
out
ret
insl
lcall
pop
mov
mov
nop
add
repz
inc
adc
mov
mov
cmpsb
mov
fucom
or
cmpsb
pop
and
adc
cmpb
push
sbb
mov
fwait
add
xor
xchg
and
ja
shlb
ret
and
ret
push
rcrl
pushl
lret
int
xor
imul
sar
mov
pop
inc
call
cltd
test
mov
popa
aaa
pop
push
or
imulb
pop
or
cmp
mov
mov
adc
mov
push
mov
sub
jle
outsb
ret
inc
mov
inc
xor
mov
lea
jp
push
pop
stc
sub
fldenv
xchg
stos
out
sbb
jno
mov
test
lret
das
mov
jne
mov
pop
cmpsl
outsl
xlat
or
xorl
and
lea
push
adc
jno
cmpsb
add
xor
pop
jo
sbb
cwtl
pop
pop
cmp
ss
dec
dec
xchg
out
into
sub
adc
push
pop
push
imul
loop
cmp
loop
repnz
push
ljmp
mov
rcll
aaa
ljmp
xor
push
push
out
cmp
mov
iret
call
mov
add
rorl
dec
cmpsl
cs
cli
adc
out
xchg
clc
add
popa
sub
sbb
pop
or
and
nop
enter
xlat
sti
xor
jl
ljmp
int3
add
inc
ret
cmp
ss
and
sub
push
push
inc
xchg
lods
mov
fsub
mov
mov
repnz
sti
or
mov
jb
and
pop
ret
xchg
dec
loope
jg
mov
stos
ret
cmp
inc
test
mov
xorb
mov
jo
fld
jbe
pop
insl
and
jp
imul
push
inc
pop
aaa
fldl
mov
dec
cmc
mov
mov
or
jno
jo
mov
shll
in
xor
adc
aad
or
rcrb
or
jmp
cs
sahf
mov
sbb
aaa
call
xchg
mov
pop
aam
and
shrl
sbb
push
mov
and
push
insl
std
loop
push
jle
ja
or
mov
or
xchg
cmp
movsl
lcall
push
pop
nop
inc
pop
les
pop
sub
dec
and
cmp
lcall
sbb
ljmp
imul
xlat
arpl
scas
inc
mov
ret
pop
fnstsw
sbb
arpl
mov
jp
sti
faddl
fdivrs
rcl
lret
outsb
xlat
divb
mov
mov
mov
add
jge
xchg
test
mov
mov
mov
lds
je
push
insb
mov
jge
cli
fadds
dec
jp
or
mov
lock
movsb
mul
jb
hlt
jns
mov
xor
sub
negb
mov
enter
js
mov
mov
das
hlt
cmp
in
sub
in
xor
fyl2xp1
test
mov
sti
gs
push
mov
pop
lods
or
lcall
out
pop
sub
jo
sbb
nop
ja
das
push
jnp
jo
mov
sub
and
sbb
in
jb
pushf
add
xor
mov
aas
fdivr
lcall
cli
or
imulb
mov
sbb
js
pop
pop
es
fnsave
add
and
test
jmp
sbb
lahf
mov
mov
xchg
push
jp
test
das
scas
mov
leave
push
cmc
sub
xchg
sbb
filds
xor
lds
jp
push
notl
jb
in
sub
dec
mov
sub
push
loope
insl
pop
inc
mov
adcl
pop
xlat
adc
adc
lds
sub
dec
jnp
aam
cmpl
ret
mov
mov
xor
or
cld
xorl
mov
ss
sub
cmpsl
aas
pop
sub
out
mov
jg
sbbl
pop
in
imul
inc
mov
out
mov
fs
sub
and
cmp
lcall
jmp
scas
inc
cld
fstl
xchg
dec
les
jecxz
sbb
sti
push
push
stos
pushf
aam
imul
add
aam
mov
incl
inc
aas
xlat
and
cmp
mov
cmp
adc
lret
sub
mov
adc
mov
fcoml
or
mov
mov
test
dec
cmp
dec
push
pop
mov
cmp
mov
mov
xorb
push
mov
pop
test
shll
rcl
adc
push
or
lock
push
hlt
fdivrl
mov
xor
outsl
movsb
mov
jge
call
decl
loop
sbb
jo
stos
in
and
stos
sbb
ss
xchg
cmp
push
cli
jmp
rcrl
pop
sub
xchg
or
xorb
adc
vpsubsw
pushf
scas
sub
pop
cmp
addr16
mov
jo
jns
aaa
pusha
and
dec
dec
imul
adc
xchg
aas
add
orl
push
mov
int
rclb
mov
ds
adc
sbb
movsb
idivl
push
out
jmp
iret
xor
dec
pop
adcl
aaa
aam
imulb
xchg
xchg
in
scas
ffreep
in
insb
cmp
out
and
std
adc
mov
push
xchg
pushaw
test
cmp
sub
idivl
sub
sbb
xchg
mov
aaa
das
sub
mov
add
mov
push
xchg
mov
call
popf
or
jne
fstpl
lcall
jne
push
jo
mov
push
je
in
cmpsb
test
in
push
sti
fcmovnb
int
xor
shrb
mov
loopne
jno
jp
out
cmp
sub
scas
leave
jne
jb
cmp
cmp
test
ja
insl
mov
adc
enter
in
mov
or
or
pop
push
jmp
cmpsl
testb
cmc
jne
add
jg
aad
fmul
movsb
and
push
or
jmp
mov
sti
jne
xlat
mov
push
push
or
insl
cmp
push
adc
pop
mov
jle
jb
imul
je
sub
mov
hlt
addr16
cmp
out
cmc
cwtl
dec
test
mov
cld
movsb
aaa
and
das
adc
and
xchg
push
popa
scas
shlb
clc
clc
lahf
lods
add
imul
mov
cli
sti
je
mov
mov
jmp
xor
adc
fs
stos
movsl
inc
mov
jnp
inc
sbbl
and
xor
xchg
fldt
inc
iret
pushf
pop
and
sti
inc
pop
push
movb
dec
dec
daa
mov
or
mul
sub
test
xor
insl
je
call
mov
mov
std
pop
clc
lds
fld
mov
int
push
cmp
dec
scas
pop
cwtl
cmp
test
adcl
inc
adc
add
add
loop
es
sub
int3
cwtl
jne
dec
cmp
xor
mov
sti
sbb
jle
ljmp
in
sbb
mov
es
cwtl
mov
ret
int3
and
push
sbb
xchg
mov
sbb
cmp
fbld
adc
clc
pop
pop
jmp
iret
jmp
xchg
dec
test
or
mov
mov
xchg
jo
loop
test
ret
xchg
divl
or
out
pop
add
xor
sarl
jge
inc
jnp
lock
add
imul
xor
add
and
iret
es
shrl
adc
pop
imul
mov
push
xor
js
dec
cwtl
daa
mov
stos
pop
ficompl
aas
andb
xlat
sarl
jb
out
cmp
mov
loopne
push
sbb
mov
cmpl
aam
bound
lcall
or
arpl
xchg
aaa
rclb
add
fcomps
and
xchg
stos
mov
insl
push
ja
and
lret
out
xor
or
cld
test
pop
je
jno
inc
popf
xchg
inc
cmp
jbe
lods
jns
jg
mov
and
scas
push
push
cmc
shlb
inc
cmp
jmp
mov
add
xchg
cmp
xchg
lock
pushf
lods
test
adc
in
add
inc
mov
and
xchg
fstpt
shrb
aas
push
mov
inc
and
pop
loop
sarl
popa
xchg
mov
das
add
test
lds
push
mov
dec
mov
rcll
jmp
mov
mov
mov
testb
adc
dec
add
outsb
out
stos
clc
mov
adc
inc
jne
aas
mov
fs
add
in
mov
xor
ret
jmp
sub
sahf
scas
imul
imul
jp
adc
jg
mov
inc
pop
cld
and
push
stos
mov
mov
push
das
leave
daa
in
scas
ret
inc
fdivl
loopne
icebp
adc
mov
lahf
add
push
adc
sub
cmp
sbb
mov
xor
xorb
lods
test
inc
pop
cmp
mov
mov
loopne
push
push
mov
test
cmpsl
sbb
mov
mov
xchg
inc
jmp
push
dec
inc
popf
cmp
cwtl
repz
mov
jns
loope
push
stos
rorb
mov
xlat
mov
inc
dec
fs
testl
or
mov
jmp
shlb
rol
jg
cmpsl
cmp
cwtl
dec
mov
sarl
push
enter
lods
sbb
jbe
mov
cmp
mov
das
test
loopne
jl
push
mov
jns
loopne
cmp
mov
push
imul
push
jmp
repnz
add
push
stos
jnp
xor
imul
jle
test
movsl
or
mov
sub
inc
popf
daa
neg
adc
and
call
and
std
pop
push
ret
cmpsl
addr16
lret
in
push
in
xchg
out
gs
lcall
or
xor
adc
or
xor
inc
mul
iret
ss
xchg
jbe
loop
sbb
lea
mov
add
mov
lods
push
test
add
jae
aaa
cmp
mov
icebp
loop
xchg
pop
jecxz
jbe
pop
jns
pop
jge
test
dec
inc
or
xor
insb
mov
fs
andl
mov
push
jno
nop
cmpsb
sub
mov
xor
nop
mov
mov
pop
sub
into
xlat
xor
sahf
into
sub
jmp
loop
sarb
icebp
and
cli
icebp
push
or
jge
pushf
sub
push
out
cltd
ret
lcall
sar
stos
and
xchg
int3
lock
mov
fidivrl
dec
test
stc
cmc
insb
cwtl
movsl
push
fwait
cs
mov
in
cmp
imul
cltd
hlt
and
sbb
stos
cmp
jecxz
mov
cwtl
and
sti
mov
addl
mov
sub
addr16
sub
ss
jno
xor
pusha
cmp
adcl
sbb
ficompl
adc
mov
pandn
mul
or
sbb
shl
add
loope
push
ds
aad
mov
je
imul
daa
jmp
jp
lea
xlat
clc
inc
push
sub
add
xchg
jle
mov
or
fisttps
aaa
sub
xchg
jmp
adc
mov
and
xchg
jnp
cmpsl
lcall
addr16
lods
test
jl
jl
addr16
xor
push
pushl
test
sub
push
in
dec
sbb
fcoml
add
clc
cli
add
pop
movsb
test
xor
xchg
leave
mov
pop
into
pop
adc
cmp
and
lods
popf
sbb
jbe
pop
out
leave
cwtl
and
mov
xchg
xchg
sub
stos
push
lds
jge
stc
nop
xlat
push
jno
or
jmp
push
mov
pop
inc
fstl
aad
inc
jne
xchg
xchg
cmp
cltd
mov
test
sub
pop
ds
sarb
mov
ljmp
loope
pop
xchg
insb
jg
imul
push
add
mov
pop
xchg
je
mov
mov
add
sub
scas
inc
pushf
mov
mov
pop
shrb
xchg
add
loop
mov
outsb
fdivrs
xor
push
into
push
dec
adc
shlb
dec
mov
mov
lea
mov
movsb
xchg
popf
sbb
push
scas
idivl
out
insb
stos
scas
sbb
sub
lds
push
lret
pop
out
xor
fwait
pusha
jo
mov
sbb
stos
lret
lds
and
out
mov
jo
mov
fsubl
jns
xlat
sti
clc
aad
repz
add
adc
cmp
sbb
xchg
outsb
add
repnz
push
xor
icebp
pop
popa
cmpsb
jno
cmp
cmp
cwtl
sub
das
ljmp
mov
ffree
test
rcrb
xchg
fisubrl
fs
adc
jns
rorl
xchg
adc
xor
cmp
adc
movsl
call
jnp
pop
pop
sti
iret
mov
pop
mov
roll
dec
loope
lds
inc
and
and
jp
sbb
push
jnp
xlat
outsb
or
ret
dec
mov
push
popa
jmp
popa
stos
adc
fcomps
leave
push
rolb
sub
and
stos
lcall
movsl
xchg
xor
jecxz
mov
int3
cwtl
inc
mov
mov
mov
hlt
out
pop
push
push
mov
pop
int3
test
mov
dec
mov
inc
sub
pop
and
mov
adc
clc
and
mov
mov
inc
mov
mov
mov
jl
lret
and
mov
xchg
xor
mov
rolb
test
cmpl
adc
nop
pop
scas
and
xor
pushf
push
ds
mov
dec
lds
jg
std
add
test
dec
xchg
aam
push
bound
call
sub
lahf
stos
and
mov
inc
and
jae
loopne
test
fmuls
adc
cmpsl
or
int
mov
popa
out
sub
pusha
jo
add
mov
jmp
jb
ds
xchg
cli
repnz
xchg
js
shlb
mov
or
pop
test
shrb
sti
inc
aad
ss
cmp
mov
add
mov
icebp
in
inc
shlb
call
push
cmp
or
xchg
adc
jae
cmove
icebp
mov
cs
mov
fsubp
cwtl
addr16
rcrb
xchg
jae
in
addb
adc
es
cmp
dec
lock
mov
fstps
fdivs
aam
pop
hlt
icebp
jp
mov
inc
xor
sub
outsb
bound
inc
aaa
insb
jbe
sbbl
scas
sti
inc
pushf
sbb
out
pushf
imulb
or
test
ds
adc
pop
add
cmc
mov
or
in
lock
sub
inc
or
jmp
and
jl
sub
xchg
popl
adc
mov
and
in
in
ljmp
lock
xor
dec
shll
pop
mov
mov
inc
xchg
sbb
xchg
push
xchg
mov
dec
push
dec
mov
fisubs
movsl
jl
fucom
in
fiadds
mov
sbb
insl
sbb
jne
jae
lds
mov
cmp
negl
mov
jmp
and
push
dec
cmpsb
and
repnz
addr16
insb
mov
and
mov
pop
lret
add
push
repz
cmp
inc
add
jge
sti
jl
ret
fdivs
pop
ds
lock
ds
out
and
and
jmp
push
daa
lret
lahf
jbe
hlt
dec
int3
mov
jle
aaa
adc
mov
xchg
cltd
js
push
leave
out
pusha
or
cmpb
mov
jne
icebp
decl
out
pop
add
std
and
fdivp
call
mov
mov
mov
shlb
fildll
lds
sub
mov
cltd
fwait
xor
dec
inc
andl
pop
sbb
fcmovnbe
and
inc
jo
mov
or
outsl
xchg
jno
jns
cmp
lcall
pop
icebp
and
xchg
lods
scas
inc
push
popa
and
dec
loope
or
int3
and
ficoms
and
cmpsb
xchg
clc
int
pop
inc
sbb
dec
clc
fildl
mov
xchg
fsubl
lods
das
dec
sub
jne
add
inc
jno
jnp
ljmp
push
inc
jp
in
arpl
sbb
fwait
imul
mov
ja
arpl
loopne
cmp
adc
push
mov
outsb
add
je
jno
jge
and
inc
or
xchg
dec
fiaddl
xchg
mov
cmpsl
push
stos
xchg
jl
call
js
push
inc
test
cmp
push
cmpsb
dec
xchg
js
popa
movsl
lock
xchg
mov
mov
pop
xor
jne
lcall
icebp
xchg
xor
sbb
arpl
insb
leave
js
adc
xchg
adc
je
sarb
filds
push
sub
mov
pop
in
ffreep
mov
adc
shlb
insb
sbb
fisubrs
jbe
sbb
stos
add
xlat
lcall
mov
dec
int
xchg
inc
mov
out
sarl
idivb
clc
lods
cmp
lcall
add
xor
jle
cmp
ss
lret
adc
mov
int
repz
ficoml
pop
arpl
mov
sbb
jg
lret
aaa
pop
push
xchg
rorl
xor
pop
mov
clc
popf
popf
cmp
jg
into
add
inc
shl
es
or
jo
mov
cli
xchg
scas
jnp
jb
ss
sbb
sbb
sub
mov
loopne
loop
shll
stos
adc
xchg
subl
jne
mov
inc
iret
subl
lods
sbb
es
cmp
sub
sahf
negl
sub
leave
or
shll
je
dec
pop
lahf
sub
cmc
testb
and
pop
mov
mov
andb
push
xchg
imul
fiadds
adc
jle
xchg
adc
inc
mov
jo
out
cltd
testb
xor
hlt
out
daa
cmp
mov
add
shlb
mov
push
dec
cld
xchg
jae
test
je
xor
sti
xchg
shrb
outsl
xchg
jl
or
enter
gs
outsl
jp
popa
pop
sbb
out
call
adc
lcall
out
mov
ja
in
bound
insb
jle
divb
cli
mov
in
pop
pop
mov
xchg
decl
pop
ret
mov
iret
push
mov
test
push
dec
pop
jb
push
int3
push
aaa
mov
mov
outsl
stos
imul
xchg
in
jns
mov
or
mov
loop
incb
mov
jo
call
sbb
jne
pop
arpl
and
ja
imul
test
lcall
aas
dec
test
jmp
push
cmc
clc
cmp
mov
cwtl
jo
pop
xchg
sub
fcoms
mov
shrl
sbb
lods
xchg
mov
mov
in
fwait
stos
pop
daa
push
movsl
lods
in
pushf
dec
imul
stos
inc
mov
sbb
jge
adc
insl
xchg
lcall
pop
rcrb
test
mov
insl
mov
mov
fists
aaa
mov
lahf
cmp
test
ljmp
mov
call
mov
sbb
add
icebp
add
scas
mov
mov
fidivrs
mov
repnz
or
popa
xchg
mov
xchg
ljmp
mov
jecxz
daa
push
stos
jb
sbb
clc
mov
sub
cli
dec
jne
pop
fld
in
inc
sub
cmp
inc
sub
adc
ljmp
lods
pop
add
shll
popa
iret
lods
testb
aad
fidivl
aam
fimull
adc
outsl
sub
ljmp
das
les
mov
jmp
gs
call
lcall
mov
xchg
ljmp
dec
push
and
lods
aam
mov
or
sub
inc
stos
push
ror
jmp
xor
sahf
ds
lcall
outsb
xor
jne
sub
popa
cmc
icebp
xor
push
fcomi
mov
jno
sub
lahf
mov
ljmp
cwtl
lods
mov
outsb
leave
insl
and
cmp
imul
aad
pop
jmp
xchg
cmp
adc
add
push
movl
ja
cld
mov
xchg
add
pop
push
bound
xchg
mov
subl
fistl
orb
stos
push
pop
test
int3
xor
mov
xchg
popf
push
and
aas
ljmp
or
push
fdivp
popa
or
in
xchg
xor
mov
jb
test
ljmp
cmc
ja
dec
push
mov
dec
out
sarb
frstor
les
inc
sub
adc
sbb
in
dec
and
mov
push
inc
push
fucomp
xchg
popa
dec
sbb
add
inc
flds
jge
aas
test
sti
xor
dec
ja,pt
push
sub
sub
js
cmpsb
sbb
sub
push
jl
in
cli
and
rcl
cmc
push
mov
test
cmpsl
cmp
cmp
sarl
aas
shll
push
mov
pop
mov
lea
stos
adc
dec
mov
enter
inc
mov
jb
pop
popa
cli
in
ds
rorl
push
xor
insb
inc
insb
lds
bound
in
mov
inc
xor
clc
cmp
pop
sbb
aas
mov
arpl
outsl
jle
jns
je
mov
cmp
stc
xchg
xor
bound
out
nop
bound
fwait
jae
loopne
cmp
and
mov
mov
cmp
lea
ds
jmp
cmp
mov
mov
xchg
lock
mov
pop
aaa
jp
jbe
cwtl
ret
aam
jge
and
inc
mov
out
incl
mov
mov
and
xchg
jle
push
pop
or
adc
js
jg
mov
pop
mov
pop
iret
in
jge
roll
lahf
or
repz
mov
xor
and
es
stos
pop
lret
pop
sbb
shrb
cs
push
pop
int
into
fdivrl
stos
mov
stos
sub
xor
mov
push
outsb
inc
loop
mov
push
cld
adc
xlat
ror
lret
stos
add
stos
decl
inc
xchg
cwtl
pop
fadd
mov
mov
inc
es
mov
out
xor
loope
movsl
mov
imul
mov
mov
je
repnz
repz
popa
cmpl
add
sub
xor
vpunpckldq
out
fsubrp
out
test
jnp
std
sub
cli
jnp
jl
add
adc
stc
fnstcw
lahf
push
jmp
sub
insl
inc
mov
sti
js
and
mov
mov
scas
movsl
imul
pop
mov
outsb
lret
cmp
add
pop
adc
daa
loop
inc
push
cmc
pop
cmp
jmp
jne
cmp
pop
pop
and
adc
ds
nop
push
clc
inc
sub
adc
pop
nop
lods
mov
subl
in
xchg
inc
out
xchg
inc
into
xchg
add
scas
mov
nop
mov
movsl
xchg
test
lds
pop
les
add
and
mov
mov
jb
mov
adc
sub
push
lods
fs
or
ljmp
stos
popa
or
sbb
or
sbb
inc
and
push
popf
xor
xchg
and
std
inc
jae
sbb
lea
mov
and
inc
loop
lods
push
test
pop
dec
lock
mov
shll
adc
xor
test
jp
clc
fcmovu
adc
test
cmp
jge
sahf
popa
mov
fimull
lret
movsb
cmp
xor
sbb
jno
mov
mov
fldl2t
xorb
mov
adc
addr16
rclb
jns
jl
cwtl
es
jb
adcl
cmp
jge
add
les
out
mov
aad
dec
mov
pop
jge
leave
icebp
xor
dec
dec
lock
mov
dec
push
jmp
dec
xor
pop
inc
nop
lods
mov
call
cmp
cmp
repz
out
push
in
repnz
mov
push
std
pusha
xchg
dec
sbb
dec
fcmovbe
addr16
cmpsb
inc
add
andb
push
adc
xchg
add
xor
push
push
mov
inc
or
fwait
je
lret
jne
sub
mov
mov
mov
in
scas
jne
xchg
xchg
pop
mull
ffreep
hlt
ss
xchg
pop
gs
or
mov
fnsave
lahf
pop
test
jmp
jg
lcall
movsl
sbb
and
mov
lret
mov
xchg
imul
repnz
add
add
push
xchg
mov
dec
jl
insl
inc
jae
push
fistpl
xor
lock
mov
mov
or
repnz
popf
cmc
push
sbb
mov
in
jne
adc
iret
or
push
repz
sub
and
cli
xchg
pop
cmp
pop
xchg
repz
xor
in
ljmp
loope
jl
mov
repz
push
in
pop
xchg
outsb
push
lea
mov
mov
shrb
iret
daa
or
xchg
scas
sbb
xlat
outsb
jg
pop
and
sbb
and
mov
xor
push
stos
xor
movsb
ret
xchg
push
xchg
test
pop
lcall
add
mov
jecxz
sub
mov
xchg
test
ret
movsb
cwtl
cs
adc
mov
and
pop
push
sti
cmp
iret
jne
popa
xorl
loop
mov
jle
stos
push
fnsave
mov
pop
jno
cmp
pushf
sbb
sub
mov
jle
xor
or
pop
xor
xor
ffreep
aas
fldenvs
loop
pushf
pop
cmc
icebp
mov
dec
mov
adc
fadds
pop
divl
cmp
jb
add
hlt
lcall
or
rclb
dec
nop
mov
xchg
adc
enter
cmp
in
cmpsb
mov
mov
popf
mov
adc
lock
aas
xor
adc
fcoml
add
ss
push
out
cmovb
mov
ds
dec
xchg
cmp
push
out
push
jmp
add
test
sahf
jecxz
sub
inc
test
sub
xchg
xlat
and
mov
sbb
ja
movsb
rorb
rcll
mov
outsb
mov
xchg
js
xor
inc
cltd
and
dec
cli
cmpsb
mov
fisubs
cmp
mov
fdivrl
imul
out
xchg
sbb
mov
sub
xchg
add
cmp
cwtl
shlb
mov
push
test
or
mov
mov
mov
addr16
in
mov
loope
pop
cli
shll
pop
aad
outsl
mov
dec
fdivl
out
add
sub
mov
pop
fdecstp
pushf
mov
or
lods
push
std
icebp
add
insb
add
and
lcall
sub
xchg
mov
aas
sbb
add
cmp
mov
jns
push
icebp
addl
out
adc
lock
xor
sbb
into
add
lahf
push
rcll
mov
sbb
out
pusha
ljmp
dec
imul
test
stc
in
xor
adc
xchg
xchg
jmp
neg
xchg
jae
imull
or
movsl
rcrb
out
mov
jb
add
mov
jo
lahf
mov
sub
cltd
cld
out
add
or
add
mov
adc
mov
xor
pusha
popf
mov
xor
stos
pop
repnz
pop
mov
xchg
mov
and
and
lret
mov
push
out
xchg
shlb
adc
repz
fnsave
cmpsl
sub
mov
in
add
shl
bound
loope
jo
add
in
mov
xor
sub
add
mov
jns
jne
loopne
mov
sub
cmpb
and
sbb
add
push
add
mov
pop
mov
icebp
cmc
ret
test
call
add
addr16
jns
push
test
mov
inc
cwtl
pop
sub
cwtl
out
inc
mov
dec
jp
and
lock
or
outsl
jg
outsb
xor
testl
pop
adc
into
dec
hlt
cld
xchg
stos
and
mov
sbb
pop
pop
pop
or
es
addl
stos
push
andl
push
arpl
add
outsb
jbe
ja
imul
cmp
es
push
cltd
leave
mov
jmp
aas
add
fdivrl
aaa
adc
xchg
stos
int3
mov
and
incb
idivb
jo
adc
jae
push
ljmp
aas
mov
pushf
mov
scas
or
pop
mov
sub
mov
mov
sub
xchg
or
xor
mov
sub
add
ror
or
aam
arpl
or
jbe
lods
fistl
sbb
sbb
daa
sub
sub
cwtl
push
insb
jo
pusha
xor
inc
xchg
mov
xchg
stos
jge
cmpsl
jecxz
pop
mov
insb
pushf
nop
movsl
pop
xchg
inc
in
rorb
push
andb
xor
imul
xor
or
xchg
mov
cmc
nop
test
jbe
repnz
lahf
or
and
adc
dec
jle
cmp
inc
sbb
pusha
pop
repz
adc
ficoms
scas
cld
cld
push
popf
add
mov
add
scas
jmp
mov
out
add
mov
sbb
shlb
in
imul
dec
rcrl
xor
data16
pusha
pop
or
push
xchg
insb
push
out
inc
sbb
sarb
pop
or
mov
arpl
sahf
and
fimuls
or
in
sbbb
loop
and
mov
popa
test
inc
ds
decl
pop
adc
mov
xor
adc
shlb
jo
in
scas
loopne
xor
mov
sub
nop
pop
sbb
clc
sbb
and
sub
inc
xor
xchg
jns
adc
es
sbb
inc
pop
stc
enter
mov
fildll
aaa
push
xchg
shll
and
daa
push
jg
add
lret
shrl
sub
sahf
sub
xchg
mov
jo
adc
imul
mov
sub
dec
pop
stos
add
inc
sarb
call
test
jg
add
mov
jle
call
outsb
in
xor
shr
cmp
xchg
inc
daa
cltd
mov
out
std
push
jno
data16
pop
xchg
lcall
stos
idivb
adc
sahf
add
test
xchg
popa
pop
xor
sub
push
data16
or
imul
add
xor
add
jne
enter
mov
mov
stos
mov
jle
mov
insb
cld
push
dec
jbe
and
xchg
int3
loopne
xchg
ds
inc
mov
mov
pop
pushf
sub
out
es
push
andb
mov
cmpsl
int3
ret
jge
adc
testl
xor
push
fistl
rcrl
lret
out
jns
pop
addb
call
daa
push
movsl
iret
xor
sarb
add
xchg
fnsave
hlt
lods
xchg
or
std
mov
rcrb
sub
add
or
xchg
mov
es
push
mov
add
dec
fmulp
sub
std
xor
dec
call
dec
inc
rcll
cld
ret
pop
rorb
push
push
cwtl
cmp
cmp
jbe
in
xchg
js
sbb
pop
call
fisubs
pop
stc
mov
arpl
jae
and
cmp
jge
add
fildl
ljmp
pop
cmpsl
jmp
loopne
roll
pop
out
and
cmp
test
sahf
mov
adc
loop
int
loope
inc
push
xor
daa
dec
inc
cmpsb
int
mov
pop
jecxz
fstpl
push
sbb
je
aam
rcrb
mov
adc
rcrb
data16
fs
shl
loopne
mov
jl
das
ds
aam
sub
jno
dec
jmp
sub
inc
int3
jbe
loopne
fsubs
and
je
testb
mov
lods
mov
mov
sub
ficoms
ss
push
push
dec
inc
repz
xor
pushl
mov
movsb
sti
mov
hlt
addr16
mov
mov
sbb
das
push
aam
jl
js
add
fdiv
pop
in
inc
jbe
addr16
sub
aad
enter
gs
lods
fnsave
je
sbb
lret
mov
push
test
mov
add
stos
decb
dec
xchg
inc
push
inc
mov
gs
inc
xchg
sub
xchg
mov
ret
lahf
pop
sub
scas
mov
xor
adc
xchg
enter
lods
repnz
loopne
xor
int3
and
add
imul
mov
lea
fsub
or
outsb
mov
je
in
jp
xor
dec
inc
xchg
mov
cmp
mov
xchg
mov
push
testl
rcrb
jge
aas
xchg
pop
pop
cs
dec
jae
lret
and
mov
out
jbe
pusha
add
loop
jb
mov
adc
or
pop
jns
inc
cmp
mov
push
jbe
xchg
xor
mov
push
xchg
mov
stc
les
mov
xor
xor
inc
pop
cltd
pop
and
push
inc
or
jecxz
int
loop
scas
sbb
dec
xchg
mov
jne
mov
and
popf
pop
mov
pop
stos
rcr
cmpsb
xchg
sti
ljmp
jp
sbb
rolb
clc
mov
jb,pt
incl
push
ja
imul
pop
inc
inc
test
rorl
andb
lcall
mov
jge
push
sub
lcall
cli
push
inc
and
rcrb
mov
mov
sub
int
or
and
jbe
ss
add
icebp
lods
xchg
mov
xor
cli
inc
xor
push
je
push
pop
addr16
mov
ds
add
xchg
ret
jno
add
stc
cmc
fildl
dec
mov
cld
sub
push
push
addb
cwtl
sbb
push
sbbb
mov
out
xor
aas
dec
sub
das
mov
xchg
das
xor
sahf
cli
jno
and
cmp
pop
subb
outsb
and
scas
mov
in
push
or
xchg
adc
mov
shll
jne
xchg
cmp
mov
das
in
mov
pop
mov
scas
add
jecxz
ret
in
dec
ds
push
repnz
xor
or
mov
and
popa
lds
aas
test
pusha
push
pop
inc
pop
andb
inc
lahf
mov
add
out
or
outsl
addr16
jg
pop
lods
jge
xchg
push
aas
jno
shlb
les
jle
jno
xchg
aas
push
stos
sub
mov
mov
mov
stc
sahf
add
push
xchg
adc
scas
cmpsb
xor
ret
push
xchg
repz
dec
xor
mov
sbb
fdivrl
dec
into
pusha
mov
jno
test
cmp
xor
or
mov
xor
lret
jg
stos
and
fistl
dec
pusha
xor
enter
add
insb
ja
ret
sub
push
loop
in
or
xor
aaa
inc
out
jae
and
or
cmp
sub
lcall
loop
lcall
sbb
push
mov
push
adc
cmp
push
cs
xor
jmp
xor
es
add
mov
push
aam
scas
aad
xchg
sbb
jb
or
cmp
xor
dec
ljmp
mov
cltd
dec
mull
popf
pop
lret
pop
outsl
add
push
mov
adc
adc
mov
mov
add
lea
arpl
lahf
int3
push
sub
push
push
sbb
push
mov
mov
xchg
sbb
leave
out
sub
pop
fwait
xchg
outsb
in
cmp
shr
test
add
add
cmp
cld
lods
sub
repnz
add
and
in
shll
aam
or
sti
es
mov
sbb
inc
xorb
in
and
dec
in
pop
mov
pop
aaa
mov
scas
ss
mov
rolb
fistpll
into
mov
pop
add
jmp
xor
dec
inc
xorl
lods
sbb
test
push
inc
xlat
mov
adc
or
lahf
into
insl
mov
push
sub
lahf
pop
cmp
leavew
xchg
sahf
sub
subb
add
lret
xlat
and
mov
mov
sub
sub
or
mov
adc
dec
sub
cmp
repnz
jmp
xor
lods
in
shlb
pop
aad
cmpsb
push
and
icebp
les
lcall
jo
cmc
sub
idivl
das
andb
push
mov
mov
mov
lret
je
js
ss
jg
adc
or
fmul
cli
and
cmpsl
xor
mov
loop
xchg
cmpsl
hlt
enter
xchg
inc
les
sbb
in
shl
adc
mov
cmp
ret
rcrl
sbbl
lret
mov
push
dec
pop
or
add
cld
incb
shr
mov
inc
push
cmp
jg
inc
dec
cs
das
data16
mov
mov
stc
in
cli
jecxz
pop
pop
pushf
pop
int
sbb
cmpsl
sahf
outsb
test
test
xlat
push
push
push
daa
xor
ljmp
cmp
jecxz
sub
loopne
cli
je
sub
xchg
ljmp
int
movsl
jge
scas
subb
cmpsb
mov
add
es
dec
xchg
pop
call
lods
into
lahf
and
push
fildl
rolb
je
jecxz
jb
adc
aad
mov
push
or
lock
cmp
xor
subb
jecxz
dec
push
and
cltd
mov
jno
mov
jle
xor
out
xor
pop
sub
mov
je
add
lret
loope
mov
mov
mov
clc
lea
lcall
outsb
sbb
jmp
add
cmp
and
jmp
repnz
in
pushf
or
cld
mov
lea
push
cvtpi2ps
mov
iret
vminpd
cmpsl
sbb
cmpsb
movsb
dec
clc
sub
jae
icebp
sub
aad
aad
pop
clc
outsl
push
adc
xchg
mov
mov
aaa
and
jo
insl
sub
mov
insl
adc
dec
cli
sbb
or
cmpl
icebp
or
psrlw
stos
in
push
int
pusha
mov
ret
fistpl
fmull
jb
push
xor
jbe
nop
jbe
sub
inc
test
sbb
and
or
jl
jge
dec
pop
divl
lods
or
scas
daa
imul
or
int
stc
jecxz
popf
pop
pop
sbb
and
xlat
shl
mov
xor
jbe
test
rcpps
ja
pop
mov
pop
sbb
fistps
lcall
loop
shr
jl
stos
and
cmp
mov
and
flds
faddl
jecxz
popa
push
inc
in
and
cld
sub
ds
adc
shl
loopne
mov
or
xor
repnz
push
cwtl
imul
ret
mov
xchg
cs
icebp
mov
xchg
les
push
and
sbb
test
and
mov
mov
inc
rcll
movsb
push
sbb
inc
aam
divb
lret
jg
mov
fcmovnbe
mov
push
ret
es
add
xchg
ret
cli
arpl
mov
into
lret
lods
arpl
mov
out
lea
push
das
adc
sbb
loopne
dec
popa
idiv
and
nop
insb
sbb
mov
shrb
sub
fisttpl
inc
aaa
sub
insl
shrb
push
push
daa
add
jge
push
push
jnp
pop
inc
dec
stos
lods
add
and
es
mov
dec
mov
sbb
adcl
mov
add
mov
test
jle
pop
ja
inc
pop
fmuls
mov
lea
push
mov
in
outsb
cmp
jl
or
or
mov
jle
addr16
pop
fs
pop
pop
ljmp
cmp
mov
sbb
pop
xor
in
int3
repnz
stos
loopne
xchg
fsubr
adc
dec
jle
inc
xor
aas
pushf
cmp
jge
pusha
fcmovbe
cli
xor
or
or
icebp
icebp
ja
xchg
jmp
jae
dec
push
ficomps
cmc
scas
xorl
mov
movsb
data16
fabs
loopne
fcomps
stos
jmp
push
inc
pop
mov
push
data16
add
bound
int3
cmpsl
arpl
pop
cmp
pusha
dec
add
aad
stos
sub
jp
xor
lea
int
fldl
push
jg
mov
test
test
cmp
sbb
lret
push
dec
loop
pusha
imul
or
sub
in
inc
andl
data16
nop
ss
and
add
inc
jge
inc
repnz
idiv
inc
push
xchg
in
mov
jle
sub
andl
pop
add
pop
add
or
mov
int
pusha
in
xchg
xchg
jns
pushf
pop
roll
add
jmp
or
lcall
scas
pop
mov
adc
push
icebp
mov
add
jnp
lcall
mov
das
mov
jmp
lahf
dec
ret
jo
push
jle
andl
data16
ja
adc
xor
add
rol
shlb
xchg
push
mul
push
leave
and
imul
add
popa
fnstenv
sarl
lahf
adc
test
add
mov
dec
adc
fisubl
in
pop
cmp
movb
stc
ds
out
in
xchg
dec
xor
scas
add
leave
cmpsb
sub
aam
jo
mov
rolb
dec
mov
call
lds
ret
or
cmp
fisubrl
lods
repz
or
jl
mov
hlt
add
roll
mov
incl
outsb
mov
xor
aas
inc
outsb
jo
cld
mov
insb
mov
imul
subl
cmp
sbbl
lds
jb
in
push
push
xor
or
dec
dec
pop
dec
push
xor
cmpsl
push
dec
push
orl
movsl
xchg
iret
fs
lods
push
movsl
mov
mov
cld
mov
jne
mov
add
add
add
outsb
shrl
sbb
add
and
cli
push
popf
push
daa
pop
jns
test
mov
and
cmp
in
div
pop
push
mov
push
lcall
pop
push
scas
xor
int
loop
pop
std
cs
pusha
push
xor
or
aaa
cmp
jmp
pop
or
or
in
mov
jp
add
test
mov
imul
jge
out
push
sbb
sbb
jo
sub
out
jo
xchg
movsb
fists
xor
dec
jns
ljmp
and
inc
test
add
sbb
and
pusha
jge
out
add
jb
xchg
repz
dec
mov
xchg
push
sbb
in
push
mov
mov
xor
mov
sbb
bound
mov
in
dec
xchg
ret
adc
push
adc
inc
jg
pop
pop
sub
or
sahf
shrb
sub
cmp
mov
call
es
lahf
xchg
or
jb
and
mov
js
or
loope
adc
mov
mov
leave
xor
add
adcl
pushl
add
mov
scas
cmp
xchg
jbe
pop
push
cmp
in
mov
add
push
mov
loope
inc
pop
mov
movsl
mov
cmp
iret
push
fstl
jne
das
loope
dec
xorb
loopne
sub
aas
sbb
or
xor
mov
aas
negl
stos
das
sahf
jb
sub
pop
xchg
addl
adc
data16
stos
jns
mov
addb
pop
test
jmp
mov
push
and
incb
jmp
movsl
arpl
push
jbe
or
imul
imul
cmpsb
outsl
inc
push
out
inc
decl
mov
or
das
or
stos
cwtl
xchg
lret
pop
sub
xchg
sti
rorb
nop
and
mov
xchg
clc
jne
dec
pop
mov
das
or
mov
add
and
hlt
stos
push
sub
incb
xor
add
fsts
dec
sbb
inc
jmp
jno
mov
mov
outsb
mov
add
fisubl
jns
cmp
orb
das
push
repnz
in
cmp
dec
and
cmp
dec
inc
das
mov
aad
fsub
pusha
xchg
xor
mov
sbb
mov
in
out
sbb
test
pop
idivl
jmp
in
outsl
mov
cld
movsb
mov
in
pushf
xchg
fistl
inc
movsb
inc
add
pop
jo
jg
fdivs
into
idivl
test
mov
jns
faddl
leave
sbb
clc
add
lret
divb
cmp
mov
cld
cmp
out
stos
ret
stc
mov
pop
movsl
push
pop
shlb
pop
test
insb
pop
mov
add
jno
imul
inc
sbb
loopne
gs
xchg
cs
rorb
stos
mov
aam
fbstp
out
dec
xor
sub
fwait
sbb
jo
int
adc
xorb
ret
cmp
pop
mov
ret
sbb
in
sbb
dec
outsl
dec
push
leave
clc
xchg
aam
adc
sbb
lock
daa
es
aas
sbb
pop
dec
in
pop
popf
lret
mov
mov
push
shrb
mov
sub
mov
push
mov
sub
cmp
sub
cs
test
arpl
jle
jb
std
into
pop
mov
xchg
adc
sbb
in
fnstenv
xchg
lahf
sbbb
adc
mov
pop
roll
scas
daa
jae
rcll
mov
leave
addl
cmp
mov
fstps
clc
inc
pushf
mov
ds
sahf
sbb
iret
jne
filds
mov
adc
fdivrl
xchg
sub
outsb
clc
shl
iret
xor
fbstp
pushl
pop
and
jo
pop
xlat
cwtl
dec
jmp
and
inc
xchg
push
into
testb
insl
sub
loop
in
leave
iret
adc
xor
jmp
jb
ss
push
dec
orl
inc
in
dec
ret
sbb
stos
popa
inc
fistps
xchg
imul
or
xchg
mov
push
ficoml
sarl
fs
shlb
add
mov
test
fldt
scas
mov
fsubrs
loopne
fidivrl
push
outsb
shl
cmp
pop
hlt
les
repz
sub
rol
xor
or
xchg
in
ds
xlat
insb
aam
lock
jae
mov
adc
cwtl
push
aaa
adc
dec
test
icebp
lahf
dec
mov
loop
das
mov
or
loope
loopne
fisubl
gs
mov
lods
and
pop
fidivrl
mov
andnps
daa
repz
mov
sbb
mov
in
repnz
adc
fidivrl
ds
or
rcr
je
andl
xchg
sarb
sub
movsl
pop
mov
hlt
add
das
jle
aas
rorb
lret
mov
xchg
sbb
xchg
mov
mov
sub
not
mov
pop
out
test
out
push
dec
sbb
in
or
xor
mov
leave
lret
fbstp
jnp
bound
push
and
js
inc
inc
rcrb
ja
or
xor
ret
cmpsl
cmpsl
jb
repnz
dec
jg
call
pop
or
push
mov
shlb
cmp
cmpsl
pop
hlt
insb
ljmp
adc
pop
lret
or
cmp
adc
inc
xor
in
clc
stc
jbe
and
std
es
jmp
dec
adc
int3
cld
dec
loopne
inc
mov
sar
add
mov
xchg
pop
les
mov
inc
xchg
add
rcrb
mov
cltd
mov
nop
sti
add
fs
leave
std
lock
imul
xchg
imul
cltd
cmp
mov
mov
push
inc
pusha
movsl
jmp
lods
jl
stc
sub
cmp
sahf
les
mov
mov
add
push
and
mov
outsl
out
in
imull
icebp
cmp
sbb
and
fcoml
test
insb
sbb
loop
stos
int
int
xor
rorl
hlt
fucom
jle
scas
idivl
into
cli
popf
insb
shll
js
rcrl
cli
daa
call
mov
xchg
mov
dec
clc
adc
adc
and
mov
push
sub
dec
in
add
cmp
inc
fs
or
mov
ljmp
sti
dec
adc
or
and
sbb
sub
ja
lcall
ret
mov
rcl
test
popf
jmp
inc
xchg
out
xchg
dec
jno
add
xchg
dec
rclb
cmpsb
inc
mull
mov
push
test
cmc
xor
push
sub
mov
popa
cli
push
icebp
mov
dec
and
mov
fistl
inc
outsl
cwtl
push
movsl
xchg
mov
or
in
ja
inc
mov
icebp
dec
jae
or
sub
inc
jmp
movsb
inc
loope
idiv
and
pop
stos
adc
ficomps
dec
ror
stos
dec
mov
aaa
fs
popa
dec
in
and
or
outsb
mov
xchg
push
add
jns
andb
dec
dec
lock
xor
fimull
and
out
scas
loop
mov
aaa
mov
out
or
test
sbb
sbb
lock
in
dec
xchg
scas
aad
sub
jge
enter
mov
adc
leave
push
mov
push
sbb
xor
outsb
adc
in
les
inc
mov
add
imul
xor
je
inc
push
stc
xchg
add
pop
push
xchg
fildll
gs
dec
sub
aam
fucomi
scas
or
add
setge
add
test
sti
pop
les
add
fs
add
xchg
sub
mov
inc
cmp
loopne
and
test
mov
and
out
fistpl
lods
dec
out
lret
addb
inc
mov
sub
inc
pop
int3
cmp
popa
xchg
in
mov
cmc
pushl
cmp
stos
pop
mov
dec
adc
fimull
dec
or
into
je
cmpsb
and
mov
pusha
das
jecxz
adc
repz
cld
sub
test
ret
xchg
mov
sub
pop
pop
push
or
out
rolb
jp
int3
cmp
push
mov
popa
loope
push
add
imul
sahf
xchg
pop
mov
fstpl
inc
cmp
xor
add
hlt
jp
fldcw
cs
mov
das
lret
fldt
movsb
sbb
cmp
ss
sahf
or
mov
popa
popa
test
addr16
pusha
inc
pop
xor
cmp
cwtl
mov
push
test
aaa
dec
icebp
add
xchg
add
and
lock
inc
in
adcl
pusha
nop
cmp
sub
loopne
out
xor
sbb
push
add
dec
int
cmp
adc
andb
add
jp
adc
out
mov
les
jmp
pop
loopne
mov
push
or
mov
shrb
inc
mov
in
cmp
xor
mov
fdivs
mov
cs
mov
mov
add
jmp
inc
jle
ja
cmpsl
lahf
inc
pop
mov
fs
pop
pop
xchg
xorb
mov
je
xchg
push
inc
push
inc
mov
inc
mov
pushf
inc
js
cmp
push
subl
ret
fcmove
cmpsl
or
jg
pop
jb
jmp
into
sahf
and
mov
inc
mov
pop
push
ret
loope
cmp
lds
inc
dec
test
or
xchg
test
ss
mov
push
mov
push
dec
or
pop
pusha
mov
jle
mov
push
lds
out
sub
mov
sti
jns
inc
rcr
add
cmp
mov
cmpsl
cli
js
mov
insb
xor
mov
mov
mov
les
rclb
out
int
popa
jbe
pop
nop
lods
sub
loopne
pushf
and
scas
dec
cld
dec
repnz
test
push
xor
pop
sub
inc
sub
mov
jge
pushf
bound
inc
jae
wrmsr
in
pop
and
adc
jno
mov
out
inc
lret
xor
gs
mov
xlat
adc
movsb
sti
mov
jge
and
lods
push
push
repnz
and
xchg
add
lret
int
mov
sahf
lds
jle
loope
loope
or
sub
jmp
adc
push
xchg
cmp
cmp
mov
pop
add
pop
sub
movsb
out
lahf
aad
pop
inc
ds
add
daa
mov
push
lret
mov
push
popf
ds
loopne
into
xchg
xlat
ret
add
push
rcl
pop
cmp
mov
icebp
insb
cwtl
lea
dec
andl
push
mov
pop
mov
pop
inc
adc
jbe
push
std
loope
add
inc
and
dec
dec
subl
lods
push
and
mov
aam
ljmp
adc
imul
rcl
movl
popf
popf
pop
sahf
cmc
test
shrl
negl
mov
xchg
lock
pop
push
inc
inc
cmp
mov
push
enter
cmp
xor
movsb
mov
fs
std
xor
out
ret
repnz
les
lea
imull
ret
mov
xchg
add
nop
or
orl
mov
fdivrp
or
popa
jo
xchg
cmpsb
test
pop
out
mov
sahf
ret
xchg
or
inc
cmp
sti
mov
xor
sahf
jne
in
out
aam
dec
mov
icebp
or
lret
pop
sti
outsb
push
jnp
jle
test
dec
lods
les
sbb
test
xchg
insl
add
js
mov
cmpb
pop
jge
aas
lds
lahf
sbb
add
sub
cmpsl
adcl
adc
dec
lret
mov
int3
test
or
ljmp
jmp
push
adc
cmp
cmp
push
mov
xor
mov
jne
ljmp
inc
add
loopne
add
mov
lea
fwait
lds
les
sti
sahf
fsubs
sub
mov
cmp
or
jge
lods
xor
test
aaa
lcall
jp
insl
mov
fmull
mov
and
add
jp
or
jo
xchg
mov
sbb
fisubrs
inc
in
xchg
sti
pusha
iret
cmp
jge
lea
dec
adc
jno
enter
pop
push
inc
adc
jg
ret
mov
insb
adc
arpl
sahf
std
xor
es
and
inc
pop
sub
sbb
testb
adc
popa
outsb
cld
int
add
pop
insb
xchg
mov
icebp
or
inc
in
mul
jle
ror
sarb
pushf
adc
test
xchg
test
xchg
push
dec
rep
ret
pop
mov
lods
pop
push
sub
scas
lea
or
or
mov
xchg
loopne,pn
dec
lret
sub
add
sbb
push
rolb
mov
adc
mov
xor
test
xchg
mov
cltd
fwait
test
and
ret
pop
mov
jb
pop
jne
call
push
push
inc
shrl
jmp
jns
lret
jp
shlb
cmp
xor
cmpl
stc
sub
pop
add
out
test
mov
lock
dec
jnp
jno
push
loop
ja
movsl
loop
icebp
stc
xchg
aaa
leave
adc
arpl
inc
or
add
fxch
movsl
fadd
popa
fimuls
sub
pop
push
bound
call
rolb
aaa
test
mov
int3
xlat
mov
mov
hlt
xor
mov
test
addr16
popf
ret
inc
and
mov
push
scas
sub
and
es
jecxz
push
add
mov
stc
scas
into
lods
xchg
das
sbb
lret
or
mov
sub
cmp
jmp
mov
mov
ret
jae
add
add
stc
arpl
subb
cmp
testl
ljmp
scas
loope
ret
daa
mov
pop
mov
js
lret
xor
in
mov
fpatan
pop
sbb
lahf
test
pushf
popa
loop
addr16
mov
cli
pop
cli
mov
clc
cmp
inc
pop
insb
cmp
jnp
ds
ss
mov
mov
add
mov
adc
cmp
push
not
xchg
sub
mov
pop
inc
xchg
cli
sbb
adc
or
inc
mov
pop
je
int3
hlt
mov
xchg
movl
push
ds
sahf
sub
fucom
xlat
int
mov
cmp
fs
push
fs
sahf
loop
scas
sarl
enter
push
mov
ss
or
mov
out
js
cwtl
dec
jl
mov
in
sbb
mov
push
pushf
sbbb
lea
fnstenv
pop
test
in
xchg
jno
pop
dec
outsl
aas
add
jbe
arpl
xchg
and
lcall
ljmp
imul
scas
scas
add
xchg
in
data16
mov
dec
ss
or
addr16
mov
cmc
add
andl
gs
jbe
mov
outsb
movsl
fiadds
dec
inc
testb
jl
adc
xchg
aaa
mov
inc
push
sbb
mov
mov
sarl
mov
cwtl
rorb
push
test
cmp
mov
shll
icebp
repnz
sahf
cmp
test
push
clc
xchg
pushf
adc
popa
xor
cmc
adc
inc
dec
adc
or
out
sbb
mov
sbb
jno
and
mov
adc
les
pop
xchg
jnp
loopne
scas
rep
loop
add
ficompl
pop
xor
mov
push
cmp
in
out
and
xlat
xor
jmp
aad
test
dec
loopne
rcr
adc
fildl
in
fwait
rcrb
shrb
jmp
push
lods
jb
adc
jno
add
fidivrl
jecxz
xchg
lret
xchg
pop
xor
dec
inc
push
jae
mov
dec
push
aas
aad
sub
add
xor
dec
xchg
sbbl
inc
pop
call
inc
loop
jg
cmp
cld
aas
fsubrl
lods
cmp
imul
icebp
ficomps
jmp
out
shrl
push
jl
sti
sahf
mov
ja
enter
ljmp
mov
push
dec
cld
mov
push
insl
jge
xchg
mull
decb
sbbl
pop
aad
lahf
lret
jb
pop
pop
std
loopne
mov
in
inc
out
pop
ss
in
fsubl
push
stos
mov
inc
sub
test
shrl
mov
dec
push
mov
iret
insl
aad
push
and
stc
adc
pop
in
adc
cld
sub
pop
jo
push
mov
lds
push
sub
xchg
cmp
neg
jmp
shrb
outsl
pop
ret
adc
ljmp
mov
mov
stos
cmp
aas
xchg
adc
loopne
sti
test
mov
mov
and
push
inc
loop
and
shlb
dec
add
addr16
repz
add
outsl
dec
xchg
push
add
movsl
fiaddl
mov
pop
std
dec
outsl
pop
out
xchg
out
xlat
inc
pop
popf
popa
mov
jge
mov
add
adc
rcr
sbb
add
scas
sbb
sbbl
xchg
arpl
push
outsb
scas
jb
xor
call
fmuls
out
shrl
pop
imul
div
or
rol
xchg
or
jbe
jae
out
ds
mov
loope
or
mov
dec
lahf
mov
push
or
outsb
test
add
pop
adc
dec
loop
pop
jmp
cmpsb
test
ss
lds
insb
add
gs
aaa
repnz
cli
pop
int
fwait
mov
leave
sub
pop
ja
adc
negl
sub
xor
imul
jge
inc
lods
add
popa
clc
mov
test
and
dec
jnp
jge
add
mov
mov
cmp
adc
dec
ret
xor
sbb
pop
lods
cs
inc
xchg
xor
addl
mov
imul
dec
sbb
lods
cmp
and
adc
mov
cmp
inc
mov
cmpsl
push
int3
inc
adc
sub
movsb
cmc
pop
fidivl
loope
popf
add
sub
xchg
inc
sbb
fimull
lret
adc
xchg
mov
sbb
movsb
sbb
fsubp
aam
push
jns
push
or
lods
cmpsb
mov
imul
pop
loop
add
cmpsb
xor
mov
and
stos
lret
clc
xor
push
sbb
or
jle
aas
mov
movsl
mov
popa
outsl
mov
out
add
push
ret
idivl
les
enter
inc
gs
int3
hlt
test
sub
ljmp
mov
fcmove
xor
loope
adcl
or
cld
lret
mov
lods
xor
std
xchg
fldl
lret
cmp
repnz
fstpt
jg
out
test
fistpl
and
or
lcall
int
incb
fs
xchg
push
xchg
repz
jl
adc
es
jg
sbb
clc
scas
mov
stos
hlt
int3
scas
push
ss
leave
sub
and
ret
aaa
pop
push
cli
inc
fistpll
fists
repnz
gs
pushf
or
push
ja
fsubrs
pop
mov
pop
fs
xlat
and
mov
jne
addr16
xchg
aas
adc
mov
insl
dec
xlat
iret
inc
in
xor
push
xor
inc
aad
mov
xchg
add
stos
jno
cmp
inc
jl
cmp
sub
iret
repnz
fisttps
pop
js
adcb
xlat
cmp
sub
xlat
mov
js
lea
lods
lock
mov
jae
add
pop
ror
iret
and
ret
loop
lahf
scas
cmpsb
outsb
insb
insb
mov
xor
or
mov
inc
and
mov
jg
pop
mov
movsb
loopne
decl
clc
xor
rcll
sub
and
lods
dec
enter
mov
push
imul
xchg
out
je
xchg
or
xor
inc
push
movsl
lahf
push
clc
jle
inc
push
dec
push
mov
subb
hlt
pop
jo
stos
jae,pt
scas
inc
jl
fsubs
lret
inc
loopne
mov
mov
imul
nop
jbe
js
aam
arpl
adc
je
adc
jns
dec
loopne
arpl
and
hlt
gs
roll
outsl
mov
mov
mov
pop
cmp
pop
adc
jge
dec
jno
les
cmc
rorb
push
jb
jnp,pn
xchg
mov
cmp
call
fnstcw
mov
dec
fldl
cli
jl
xor
ficoml
out
test
push
sbb
xchg
adc
pop
in
mov
icebp
sbb
cli
mov
cmpsl
add
test
fldenv
sbb
test
inc
inc
adc
es
cs
xchg
in
jle
pop
xchg
es
sub
mov
jl
mov
loop
sti
dec
jb
call
les
adc
aas
mov
arpl
sub
push
and
cmpsb
wrmsr
push
add
pop
imul
lock
pop
mov
hlt
out
mov
scas
int3
outsb
cmpsl
hlt
or
adc
ret
data16
sarl
sub
ds
pop
push
clc
push
lds
inc
scas
sbb
fcos
add
xchg
aam
adc
jl
mov
mov
leave
cmp
push
dec
out
mov
and
cwtl
xchg
sbb
xlat
inc
cmc
ja
sub
mov
push
dec
imul
inc
push
fcmovbe
lods
js
loopne
fstpl
mov
sub
pop
adc
push
ds
sbb
sbb
shll
cmp
inc
mov
out
ret
jmp
mov
push
sarl
xchg
ffreep
pop
xchg
dec
sahf
jecxz
jno
mov
adc
enter
sub
and
jno
mov
or
pop
pop
jnp
outsl
add
scas
sahf
cmp
mov
hlt
in
frstor
ljmp
add
stos
jp
mov
add
lret
sub
xchg
call
test
lahf
adc
dec
mov
sti
test
les
inc
jecxz
inc
into
xchg
pushf
and
mov
mov
xor
mov
push
xor
and
adc
push
jnp
repz
pop
mov
adc
das
hlt
cmp
xor
mov
test
loopne
sbb
dec
mov
loop
ficomps
call
sbb
loope
xchg
mov
push
mov
cltd
pushf
ret
adc
rcl
lods
fsubl
movsb
or
in
ss
sahf
cmc
and
mov
insb
out
mov
cs
jae
aad
pop
adc
pop
xchg
jno
shll
inc
loope
jb
xchg
lcall
xor
sbb
loope
loopne
iret
out
jbe
add
pusha
mov
mov
jae
sarb
mov
sbbl
dec
mov
mov
sbb
jp
bound
aas
mov
fdivrp
or
inc
mov
dec
pop
cmpxchg
jae
pop
pop
xchg
dec
daa
sbb
or
jmp
sbb
iret
js
cli
fdivr
sahf
out
sbb
leave
andl
push
mov
daa
jbe
clc
and
shlb
enter
sti
int3
popa
xor
dec
cmc
adc
jl
or
sbb
cmpsl
push
lret
stc
adc
cmp
cli
sti
adc
or
xchg
ljmp
mov
or
ret
rcrb
inc
xlat
fiadds
mov
dec
sahf
shll
push
adc
add
stos
popf
js
xchg
mov
cmp
in
loope
js
dec
cmp
pop
cmc
fsubrs
push
fsubr
sub
test
stos
ds
push
and
rclb
nop
cmpsl
shlb
sbb
filds
xchg
adc
push
xchg
stc
mov
test
push
xor
pushf
imul
scas
mov
jns
pop
cmp
shl
cmp
aam
push
in
rorl
das
add
xor
scas
sahf
mov
and
xchg
push
in
mov
or
pop
in
add
xchg
pop
add
pop
cmpl
out
dec
inc
ffreep
mov
jg
clc
clc
test
mov
mov
nop
mov
shrl
pop
daa
adc
inc
imul
mov
enter
jp
sub
andl
popf
divl
in
movsb
mov
adc
out
je
imul
dec
mov
addb
enter
dec
enter
das
jl
int
and
fisubs
in
cmpl
mov
inc
add
ds
or
push
jo
addr16
fisubl
jmp
pushf
xor
stos
or
mov
call
mov
js
xchg
or
sarb
sub
scas
cmpb
add
push
xor
pop
sub
xchg
inc
push
xchg
jmp
insb
cli
scas
bound
add
repnz
add
and
scas
pop
mov
gs
pop
jne
mov
push
adc
pop
popf
xchg
or
inc
lret
ficomps
cmpb
ljmp
neg
insb
jbe
jmp
inc
and
mov
jmp
imul
pop
in
mov
shl
stos
int
jo
imul
daa
in
push
movaps
subl
mov
faddl
inc
in
cwtl
call
mov
sub
adc
mov
mov
mov
test
lea
cmp
mov
xchg
lds
push
cwtl
jg
cmp
xor
stc
push
cmp
xor
push
pop
lock
lcall
inc
cld
pop
cli
fnstsw
push
shrl
fisttps
ret
and
out
loopne
mov
lods
test
cmp
mov
cld
je
fs
and
fistps
sbb
idivl
inc
or
imul
sbb
popa
stos
adc
inc
inc
fs
adc
out
sub
movsl
jb
xchg
mov
fbstp
xlat
jmp
inc
add
movsb
sub
push
cmpsl
and
sbb
insl
test
and
dec
fcmovnb
bound
jge
gs
out
pop
ljmp
mov
push
and
xchg
mov
dec
out
xchg
int3
dec
jecxz
ja
dec
in
fstl
add
cmpsl
movsb
roll
sbb
sbb
sbb
arpl
adc
bnd
movsl
push
mul
sahf
inc
add
and
xchg
xchg
jae
mov
adc
addr16
and
inc
cld
loop
xchg
mov
fbld
js
iret
call
xor
mov
das
faddp
std
js
fs
iret
sub
adc
cmp
mov
addps
in
push
stos
mov
sub
out
cld
push
xor
xchg
mov
mov
adcb
jo
rcll
roll
or
sub
xorl
push
nop
mov
popf
call
mov
sbb
cltd
repz
jae
adc
jnp
daa
loop
sub
ss
int
outsb
and
sbb
and
mov
xorb
push
jnp
mov
sub
pusha
inc
xor
nop
push
loopne
mov
cmc
sti
and
push
into
xorl
mov
push
jmp
lock
cmp
mov
in
or
test
in
and
xchg
cmpsl
dec
push
adc
jl
mov
jge
sbb
mov
out
loopne
mov
je
mov
mov
xor
andb
pop
int3
mov
subb
leave
imul
popf
cwtl
xor
dec
lcall
pop
cmp
test
inc
add
xor
mov
imul
stos
mov
or
enter
out
sbb
jle
mov
shrl
pop
jbe
es
add
ffree
repz
test
or
add
in
mov
call
sbb
jle
mov
aaa
xorb
repz
aas
movsl
clc
push
xchg
ret
scas
pop
repz
notb
xchg
cltd
pop
bound
cmp
imul
dec
jno
sub
popl
loope
mov
xchg
sub
int3
sbb
stos
mov
call
and
cmpb
xorb
and
insb
lods
and
leave
push
mov
test
sub
inc
inc
sub
cli
push
cmpsb
pop
imul
pop
and
jne
lcall
sahf
aam
lret
add
push
movsb
mov
cmpl
or
or
pushf
lock
cwtl
or
mov
pop
test
ret
mov
shr
jge
jge
push
cltd
int
xor
sub
mov
enter
inc
test
mov
int
adc
dec
and
mov
jle
arpl
cmp
lods
pop
andl
in
or
jmp
or
jns
icebp
lds
sbb
inc
xchg
xchg
sub
dec
cmc
xor
cmc
ds
jns
xor
ljmp
mov
inc
popf
jge
enter
js
pop
cmpsb
rcl
fs
mov
inc
cmp
jb
icebp
xchg
sub
cli
insl
or
int3
mov
and
jl
jecxz
pop
inc
rclb
lods
ficoml
fdivrs
rcl
scas
xchg
out
rolb
rolb
loop
and
int3
and
push
xor
mov
add
mov
ss
and
ror
xchg
fs
mov
jle
sar
loopne
push
or
cmp
pop
les
dec
dec
mov
ficompl
ljmp
scas
sbb
xchg
or
xchg
les
negl
ss
push
aas
sub
add
lret
fdivs
loope
cmp
dec
jns
popf
mov
lods
scas
jae
sbb
js
cmp
and
ret
or
and
add
mov
sub
jbe,pn
add
cwtl
insl
in
test
in
sbb
pop
hlt
test
mov
mov
xchg
jnp
mov
outsb
push
std
xchg
into
das
xor
lods
mov
or
lock
orb
pop
faddl
jo
rolb
mov
rcrl
cs
inc
cmp
and
adc
xor
aam
insb
mov
fstps
xchg
cmp
xchg
mov
out
xchg
jmp
sub
cmpsb
push
and
lahf
xor
mov
out
jnp
nop
mov
sub
sub
test
data16
popf
jl
sub
lock
inc
cmp
cwtl
push
pop
ss
mov
xchg
call
jns
fsubrl
xchg
lcall
inc
aam
fmuls
or
inc
push
xchg
jl
ljmp
testl
mov
jl
cmpsb
inc
push
sub
aad
rol
jp
cmpsb
mov
mov
xchg
cli
xlat
inc
popa
cli
push
les
xchg
mov
cltd
pop
push
dec
xor
ja
push
mov
rcll
test
cmc
subl
out
xchg
xor
out
dec
sbb
jno
and
je
test
push
xor
dec
orl
push
loope
and
dec
fdiv
xor
push
push
jle,pn
push
and
xchg
int3
dec
aad
rolb
pop
adc
cmp
scas
xor
mov
sub
xchg
sbb
push
sti
les
sub
cmc
scas
xor
mov
xchg
lock
scas
fidivs
lods
mov
les
ja
jge
fldenv
addr16
push
inc
push
and
xor
pop
mov
int
cmp
into
pusha
js
iret
pop
daa
xchg
jnp
test
inc
out
mov
lret
inc
cli
test
mov
pop
sub
or
cmp
and
add
jno
cmovge
fadd
outsb
fsubs
mov
lock
ret
enter
xchg
add
movsl
xor
add
sarb
mov
add
loopne
sbb
inc
and
sub
pop
int
fisttpll
cmp
cmp
and
sbb
push
xor
inc
lcall
xchg
loop
int
test
sbb
mov
call
mov
test
stos
and
push
or
dec
sahf
sub
sbb
movsb
faddl
cmp
in
in
cs
push
dec
jmp
jno
inc
mov
test
ret
aas
push
popf
insb
pop
mov
movzbl
mov
mov
aas
add
mov
mov
push
cltd
push
and
cmc
push
sbb
orb
insl
mov
add
loopne
ficoms
jo
stos
add
into
in
std
and
push
in
testb
or
push
mov
je
pop
stos
aam
rorl
mov
mov
test
popf
push
dec
sub
and
arpl
or
mov
add
inc
pop
inc
xchg
push
icebp
xchg
fs
and
mov
pushf
pop
pop
jl
or
sbb
jge
xchg
or
jl
lock
and
cltd
adc
sub
sbb
adc
shll
or
test
js
jg
xchg
xor
out
out
cmp
jmp
mov
fmuls
or
test
into
cmp
repz
in
js
dec
sbb
call
decl
dec
and
dec
stc
inc
shr
movsb
fadds
push
repnz
mov
je
dec
push
stc
adc
aaa
xlat
push
xor
mov
cmp
stos
inc
mov
dec
jne
xchg
repnz
xchg
fwait
mov
lock
or
jns
cltd
sbb
push
pushf
mov
adc
orl
inc
pop
lret
cmpb
test
mov
lret
inc
sbb
sub
out
or
inc
sub
mov
jb
mov
data16
imul
inc
mov
jo
aam
push
mov
and
xor
cmc
fwait
dec
outsl
pop
popf
repnz
dec
push
leave
test
lock
xchg
inc
fsubrl
daa
add
jne
movsb
fs
pop
ja
mov
push
and
dec
adc
aaa
out
xchg
mov
clc
loop
adc
mov
scas
sbb
arpl
pusha
out
out
sub
in
negb
or
addl
ss
test
sub
and
xor
or
idivl
mov
mov
mov
xchg
ret
mov
or
sub
lret
int
jl
and
mov
push
mov
lds
sarl
lock
lret
test
pop
inc
hlt
add
outsl
outsl
inc
cmpsl
add
es
testl
out
push
movsl
push
add
aad
sub
mov
pop
fdivrs
fsubs
mov
outsl
push
mov
popa
notb
dec
pop
inc
mov
sbb
cmp
mull
adcb
test
sub
dec
pop
adc
loop
lahf
inc
pop
testb
mov
mov
dec
jecxz
inc
mov
mov
or
lret
jb
or
out
nop
rorb
push
and
cmp
adc
arpl
outsb
mov
mov
inc
push
sbb
arpl
jp
add
sarb
cmpsb
enter
mov
insl
inc
mov
jl
cmp
les
fidivl
or
aaa
xchg
mov
inc
jno
mov
xor
insb
daa
jle
stc
dec
lods
xchg
and
fs
pusha
lods
push
in
jle
adc
push
scas
out
ja
arpl
sub
pop
add
cmpl
orl
dec
mov
mov
push
mov
push
push
test
push
xor
int
enter
sbb
cmp
add
in
mov
es
pop
mov
jns
jmp
mov
jg
and
jno
mov
jle
inc
shl
stc
xchg
mov
repz
cli
jge
cmpsb
fmul
or
mov
out
lock
test
add
inc
mov
add
ficomps
pop
lret
ja
icebp
mul
icebp
xchg
mov
int
out
xchg
mov
jmp
mov
and
dec
xchg
mov
push
sbb
stc
js
push
sbb
fucom
cmc
or
repz
push
leave
xor
shl
adc
dec
sar
imul
stc
or
shrb
adc
inc
lock
scas
adc
jns
add
jnp
pop
push
jb
ss
sbb
dec
repnz
js
cmp
pop
mov
mov
add
push
sbb
das
inc
jl
mov
add
dec
sub
out
dec
pop
add
ja
test
and
cmpsb
leave
lcall
sar
xor
adc
je
inc
pop
popa
sbb
cmp
jecxz
roll
add
sahf
mov
push
push
icebp
in
int
outsb
hlt
pop
push
push
pop
mov
shll
adc
cwtl
fistps
negl
mov
es
push
loope
fnstsw
call
pop
ror
nop
pop
mov
fwait
or
lret
pop
lea
jecxz
leave
pop
push
mov
aad
cltd
sub
pushf
push
push
xchg
insl
fdivl
add
mov
cltd
pushf
test
mov
mov
lods
adc
shll
jns
xchg
hlt
push
dec
mov
sbb
mov
lea
sahf
cli
bound
and
stos
push
pop
and
sbb
aaa
xor
mov
add
jo
subl
inc
cmp
lock
test
pop
js
fisubrl
call
loop
imul
data16
outsb
sub
imul
in
jmp
jle
add
cmp
lret
adc
mov
aas
cltd
and
xchg
mov
in
mov
inc
loop
shll
pop
push
xchg
subw
ljmp
dec
inc
and
add
lret
adc
sub
insl
addr16
jmp
mov
sbb
pop
int3
mov
inc
xchg
xor
mov
mov
gs
cld
sbb
mov
lods
test
ficompl
mov
jmp
sub
call
test
inc
or
aas
dec
lds
pushf
jle
xchg
pusha
sbb
mov
jge
imul
sahf
pop
sbb
addb
xchg
push
mov
and
sub
cmp
enter
and
dec
xchg
in
outsl
fadd
jp
shll
popf
or
add
and
enter
cmp
mov
testl
mov
leave
cmpsl
lcall
shrb
xchg
jmp
lods
cmp
xchg
jbe
stc
mov
jp
jl
js
xor
push
mov
jg
jbe
sbb
cmpsl
mov
mov
icebp
xor
scas
repz
xor
adc
ret
sub
adc
and
adcb
adc
add
jbe
and
cmp
mov
in
arpl
ss
push
xchg
add
call
inc
inc
mov
jmp
test
aam
xchg
mov
mov
xor
je
inc
push
or
cld
sbb
jb
push
or
dec
inc
js
in
gs
in
negl
pop
sub
or
rcr
mov
xchg
dec
loop
stos
and
fidivl
and
jne
sbb
sbb
mov
test
mov
leave
stos
add
or
dec
pop
shll
cli
jle
cmp
sti
sbb
inc
je
inc
mov
inc
scas
popa
daa
sti
fistl
sbb
mov
adc
cmc
fcomps
or
stos
jno
sbb
cltd
ja
push
test
inc
sbb
push
jbe
movsb
cmp
popf
inc
xorb
xchg
leave
sbb
std
mov
stos
xchg
push
not
pop
push
out
xchg
testb
pop
pop
xor
pop
mov
and
ja
mov
invd
xchg
les
sub
insl
jno
add
sbb
icebp
xor
loop
and
xor
cld
fnstsw
push
lret
clc
mov
cwtl
js
mov
adc
int3
sbb
mov
lcall
pop
cld
push
sub
ficoms
adc
mov
cmp
aad
nop
inc
sbb
lods
in
fbld
sbb
arpl
lock
jle
xchg
jg
jae
mov
leave
fsubl
push
xchg
aad
ss
jl
pop
pop
movhps
loopne
add
fsubs
xchg
repz
lods
mov
cmpxchg
cmp
pop
aaa
rorl
sbb
mov
push
inc
into
pushf
adc
mov
pop
mov
jne
repnz
mov
inc
inc
adc
ret
clc
add
jae
shll
add
xchg
gs
mov
cs
stos
inc
adc
lock
sbb
sbb
jnp
pop
adc
xchg
daa
xchg
iret
dec
pushf
push
push
mov
add
add
mov
and
mov
xlat
push
mov
int3
push
out
mov
sub
add
add
mov
ljmp
fdivl
sbb
int
mov
xchg
xchg
jns
mov
xchg
sub
or
pop
ret
jecxz
std
mov
push
pushf
sahf
pop
dec
cld
adc
mov
pop
nop
mov
cmpsb
hlt
loope
hlt
clc
out
inc
add
lret
fidivl
outsb
inc
inc
pop
mov
fs
lret
mov
ja
xor
push
inc
inc
pop
pop
test
into
or
or
pop
fildl
sub
jae
or
lods
adcb
fnsave
xor
negb
jb
pusha
dec
leave
pusha
add
cli
mov
cmp
inc
sub
inc
testb
dec
stos
pop
je
pusha
pushf
sbb
mov
sarl
lods
jnp
mov
movsb
stos
mov
add
push
incl
movsl
xlat
addr16
pop
sub
jns
roll
ret
pop
mov
outsb
jns
adc
xchg
inc
push
push
xchg
fidivrl
xchg
in
lahf
lret
dec
jg
mov
cmp
out
in
lock
imul
roll
je
adc
pusha
adc
cmp
mov
lock
mov
arpl
mov
ret
push
xor
fsubl
sahf
jl
ljmp
shrb
cmp
dec
mov
push
cmp
int
nop
test
dec
idiv
push
inc
js
ror
jns
dec
into
pop
or
sub
dec
add
push
or
icebp
sbb
ficoms
adcl
stc
mov
in
mov
mov
jb
sub
jp
mov
hlt
rcrb
add
rcll
div
mov
mov
sub
jns
fcoms
out
inc
dec
jnp
dec
pop
jnp
in
adc
stc
shl
xorb
pop
nop
push
mov
shlb
pop
aam
mov
daa
popf
mov
push
fs
adc
add
mov
push
sub
xchg
out
in
mov
test
out
mov
jnp
mov
scas
lds
pop
mov
and
mov
dec
mov
cmp
xchg
sub
in
push
cmpl
pop
jecxz
sbb
ret
ss
and
add
jp
loope
in
cmc
jo
pushf
inc
mov
not
test
xor
xchg
xor
cmp
jno
mov
pop
jne
pop
push
lods
lds
into
mov
test
mov
dec
mov
cltd
mov
enter
add
dec
shll
push
ds
cmp
jle
pop
dec
or
jae
ret
sbb
dec
cmp
and
jg
ljmp
and
pop
cmpsl
inc
xlat
mov
mov
mov
xlat
popf
xor
jne
dec
dec
mov
mov
sub
pop
xchg
cli
mov
mov
and
jns
mov
call
lahf
addl
jnp
adc
jno
lahf
mov
dec
outsb
les
insb
dec
mov
xchg
cmp
pop
in
and
sub
pop
int3
jg
sub
jb
xchg
out
cmp
mov
pop
inc
pop
push
je
xchg
jg
mov
mov
loope
fadds
loop
mov
xchg
add
imul
mov
in
pop
sub
jae
sbbl
push
mov
jl
jo
lods
lret
push
mov
cmp
or
xchg
aam
pop
inc
push
lods
imul
add
shr
cltd
inc
or
inc
imul
dec
lcall
subb
cmp
pop
jns
mov
sub
popf
pusha
push
pop
adc
push
pop
jge
pop
mov
sub
sbb
push
out
hlt
adc
lcall
pushf
mulb
jle
dec
xchg
mov
push
xlat
xor
xchg
aam
push
push
push
dec
sarb
test
mov
insb
fsub
popa
ret
jg
dec
aaa
jle
push
scas
daa
push
jle
push
jg
pop
adc
add
mov
xlat
sub
cmp
shrl
mov
cmp
mov
jb
scas
sub
mov
dec
aad
add
jbe
adc
movsl
dec
pop
imul
push
clc
pop
in
lret
jge
inc
mov
cli
xor
pusha
loop
sub
ret
mov
mov
pop
push
sbb
arpl
fbld
mov
cwtl
mov
ja
add
jle
cmc
xchg
push
sbb
arpl
dec
fwait
repz
sub
jecxz
or
cmp
popa
or
inc
push
mov
adc
mov
xchg
icebp
pusha
cmp
imul
test
cli
popa
mov
xchg
adc
mov
push
jae
jmp
cli
stc
dec
arpl
jge
dec
or
push
lods
add
xchg
js
mov
sbb
push
fildl
sbbb
push
push
and
sbb
into
pushl
into
add
cwtl
sub
mov
cld
enter
push
cmpsb
daa
mulb
outsl
push
fsubrs
lahf
mov
fnstenv
dec
ja
adc
jae
fadd
dec
pushf
xchg
popf
adc
fstpl
out
mov
jnp
nop
adc
sbbl
add
cmc
lock
mov
dec
shlb
inc
in
mov
jno
arpl
add
xchg
mov
push
sub
add
xlat
push
cmp
ret
mov
ds
repnz
jne
push
mov
dec
push
enter
mov
pop
xlat
shl
pop
jecxz
nop
dec
shll
xchg
mov
int
shrb
mov
sahf
das
mov
adc
fcmovnu
lret
xchg
jnp
xchg
inc
push
mov
call
fnstsw
sbb
out
dec
push
outsb
into
mov
enter
mov
push
ljmp
lods
add
mov
xor
jne
lahf
mov
xchg
repnz
out
xor
insl
cmp
cltd
lret
inc
js
jp
cwtl
fstpl
popf
dec
xor
pop
pop
mov
pusha
loope
jl
test
inc
adc
cmp
mov
mov
scas
mov
jg
out
mov
sub
cld
push
add
test
jno
sub
inc
sub
sub
dec
dec
adc
push
xor
hlt
jae
outsl
mov
fcompl
jle
sti
jno
subb
fmul
jno
xor
lcall
shll
jae
sbb
cmpsl
xchg
notl
dec
mov
sub
roll
int3
pop
add
cmpsb
lcall
push
mov
pop
fwait
push
in
int
pop
out
mov
xchg
pusha
test
out
bound
xchg
adc
pop
jmp
cmc
xor
mov
push
and
xor
fimull
mov
repnz
push
pop
lods
inc
icebp
ss
cmpsl
mov
inc
mov
mov
mov
ljmp
sub
mov
negb
sahf
mov
pop
mov
jge
xor
fs
xchg
xchg
dec
adc
in
cmpsb
inc
pop
jb
inc
push
mov
push
xchg
dec
lcall
push
ljmp
push
jnp
jno
lea
mov
repnz
in
adc
jbe
xchg
push
or
dec
xor
add
xchg
sub
cmp
cmpsb
mov
into
adc
dec
test
loopne
fstps
sub
jne
sbb
pushf
out
shll
in
sub
mov
adc
xor
and
xchg
mov
xor
psllq
icebp
lcall
jmp
popa
xorl
lret
mov
fwait
out
rcll
inc
add
addr16
cwtl
dec
sbb
int
pop
push
adc
data16
mov
push
xlat
scas
adc
sub
sub
mov
arpl
inc
sarb
pusha
popf
xchg
jns
cmp
xor
xchg
adc
xor
insb
sub
shll
cmpsb
adc
push
clc
cmp
and
je
jnp
iret
mov
arpl
lds
js
fwait
sub
dec
mov
add
cmp
pop
pop
cmp
jecxz
lret
adc
pushf
loopne
adcl
in
push
arpl
das
sti
jbe
insl
xor
test
push
hlt
jbe
add
ret
adc
aad
jne
sub
mov
jae
dec
push
mov
sub
jb
or
popf
je
cmp
push
push
lcall
inc
sbb
loopne
divb
test
aam
decl
jne
mov
inc
rcrb
sti
xchg
fisubrl
cmpsb
int
loop
pop
out
ret
int3
out
jne
dec
xchg
orb
mov
insb
sbb
xor
loop
inc
mov
push
mov
dec
push
or
aas
push
popa
pop
neg
arpl
ds
repz
add
push
lea
jp
mov
or
mov
adc
arpl
addr16
stos
or
pop
sub
in
lods
dec
leave
dec
mov
mov
add
or
mov
ret
and
jno
in
and
or
repnz
pop
lcall
fisttpl
es
int3
mov
daa
stc
jne
add
cwtl
add
loope
push
or
lods
iret
dec
sbb
or
arpl
cmp
mov
loopne
pop
dec
jb
mov
mov
mov
lock
mov
nop
jns
sti
hlt
movsb
mov
jge
inc
cmp
sub
sti
rclb
sub
and
mov
mov
cwtl
jg
push
mov
movsb
mov
imul
jns
sbb
pushf
in
mov
push
or
cmpsb
pop
je,pn
pop
fsubr
mov
add
xor
add
push
or
test
ss
sbb
pop
xor
jle
fdivrl
les
jecxz
lds
mov
sbb
add
test
aas
testb
addr16
lds
inc
dec
outsb
aam
daa
jmp
or
and
sbb
ja
insb
push
sub
je
decl
pop
movsb
add
insb
sub
sub
or
ss
sbb
stos
out
std
lods
in
sarb
movsb
add
pop
xchg
lret
imul
xchg
jo
fistl
test
cmp
jle
repz
repnz
mov
xor
push
push
cmp
leave
pop
add
lea
movsb
xchg
dec
stc
xlat
in
test
jno
sub
les
add
sub
enter
bound
lret
scas
jg
sub
das
ret
sub
mov
sbb
inc
sbb
mov
loope
aas
sahf
test
cli
in
xchg
xchg
imull
aad
fsts
inc
mov
pop
dec
pop
enter
lahf
mov
std
dec
test
mov
fwait
sti
cmp
in
aas
ja
mov
push
adc
jae
mov
stos
aaa
dec
mov
out
call
add
xlat
les
aaa
addl
dec
loopne
sahf
pop
pusha
push
mov
push
mov
and
test
lock
pusha
int3
push
sahf
rcrb
inc
loope
jb
and
push
arpl
dec
rcrl
xchg
ds
popf
and
mov
mov
repnz
inc
push
jg
push
adc
mov
into
and
jecxz
xor
sbb
xor
cmp
loop
mov
in
rol
add
out
sbb
mov
or
jo
inc
mov
movsb
push
das
lea
mov
add
jecxz
xor
sub
scas
cmp
cmp
lods
jns
mov
inc
test
popa
push
aas
adc
dec
sarb
xchg
inc
xor
inc
lds
stos
lret
cld
imul
cld
sbb
xchg
ja,pn
stc
pop
sub
in
dec
imul
insl
adc
rclb
and
push
xor
lcall
dec
add
test
aas
push
push
inc
testl
enter
mov
shll
mov
ljmp
push
sbbl
int3
ds
xchg
daa
sub
inc
cs
dec
test
push
stos
sar
mov
xor
sub
mov
push
decl
add
aam
out
cli
pop
lcall
repnz
sbb
pop
call
add
or
push
lcall
dec
enter
or
inc
jmp
pop
and
xchg
pop
mov
sbb
cltd
add
pop
inc
add
and
js
addr16
jecxz
adc
fistl
fsubp
mov
or
or
push
lret
cltd
jns
xchg
sbb
or
mov
jo
push
aad
les
sbb
inc
inc
mov
jo
push
cmpl
pop
fdivl
mov
mov
xchg
movsl
pop
in
into
jb
sarl
mov
fmull
xchg
mov
xchg
lods
xchg
hlt
and
sub
mov
adc
test
ficoml
scas
std
lret
negb
push
out
leave
mov
das
lahf
jo
pop
mov
lcall
mov
mov
orb
push
xchg
gs
out
stos
mov
pminub
out
pop
jge
sbb
xchg
cmc
femms
add
push
test
shll
sbb
outsl
aaa
shl
push
or
dec
lock
mov
and
test
push
push
cli
mov
cwtl
into
out
popf
cmp
push
mov
out
push
mov
mov
xor
movsb
hlt
mov
lret
jae
push
sub
mul
mov
xchg
aaa
fldl
jnp
std
dec
jle
in
ret
pop
aas
add
xchg
pop
and
inc
js
dec
cmp
icebp
out
mov
iret
mov
jnp
pop
add
ret
xor
enter
pop
mov
dec
mov
jmp
xchg
nop
jecxz
int
ret
pop
xchg
dec
jne
test
lret
jl
lret
rcll
sbbb
xorl
mov
mov
push
xor
mov
xchg
into
jecxz
pop
push
icebp
adc
inc
cld
stc
into
rorl
pop
mov
mov
inc
mov
loope
imul
mov
sbb
jae
push
inc
shr
insl
add
push
icebp
push
cmc
aaa
mov
pop
lcall
daa
cli
pop
add
repnz
fsubrl
mov
xchg
xchg
dec
sar
subb
test
pop
push
mov
ss
jle
sbb
pusha
xor
insb
pop
je
into
imul
repnz
sub
icebp
int
pop
or
xor
sub
adcb
outsl
inc
xchg
xor
and
sub
add
or
stos
xchg
push
lcall
aas
add
imul
inc
sbb
pusha
sbb
dec
or
repz
xlat
inc
in
outsl
js
in
dec
sub
pusha
sarb
mov
dec
fcompl
lods
lods
dec
push
add
and
inc
inc
test
push
ja
lcall
jno
add
sub
rorl
jne
or
push
lret
aas
inc
pop
adc
gs
and
fmuls
repnz
push
ret
pop
mulb
test
push
pop
mov
das
and
sub
lahf
add
jmp
dec
dec
and
repz
push
inc
in
add
push
push
mov
cwtl
adc
push
paddw
push
xchg
lahf
mov
imulb
fcmovnu
lret
lcall
enter
sbb
adc
push
xchg
xchg
pop
xlat
push
out
mov
div
xchg
loop
pop
mov
stos
ds
movsb
mov
fcompl
jp
sbb
sbb
mov
mov
cmp
test
rcr
loopne
mov
popa
lahf
push
sbb
xchg
xchg
out
xor
sub
js
int3
add
fwait
xlat
pop
rcll
data16
popf
mov
outsb
xor
aaa
mov
jnp
pop
dec
add
mov
and
std
add
add
add
add
add
mov
inc
mov
lret
or
inc
inc
mov
lea
dec
mov
negl
imul
xchg
lret
insb
cld
dec
shll
iret
les
cmpsl
addr16
scas
lea
inc
int
das
or
or
cltd
aas
fisubl
das
jb
fbstp
ss
xchg
sti
into
or
hlt
jmp
test
push
lcall
jns
ret
bound
rolb
in
lea
outsb
dec
lcall
ss
movsb
adc
iret
jbe
push
jb
jecxz
cmp
mov
adc
sbb
loop
pop
cmpsb
sti
jbe
mov
dec
mov
push
and
cltd
lret
mov
scas
iret
sti
stc
stos
das
jmp
and
lahf
imul
and
fbld
mov
or
inc
mov
orl
dec
mov
jae
pop
jns
js
xchg
ds
adc
loopne
add
inc
cmc
sbb
add
movsl
stos
notb
push
jne
outsl
jo
sbb
jns
jmp
push
fiaddl
xor
push
jmp
dec
mov
outsl
shll
loop
mov
mov
movsl
cmp
pop
mov
lock
jno
xchg
sub
mov
xor
sub
aas
out
fisubrl
and
lret
xchg
jbe
jmp
adc
push
or
hlt
ret
adc
and
dec
xor
movl
movsb
shrl
hlt
cltd
test
sub
je
sbb
fidivs
inc
mov
std
loop
cli
add
je
cmpsl
xchg
shl
jo
jmp
insl
dec
mov
mov
sbb
out
in
mov
testb
adc
iret
jb
pop
mov
popf
jle
shlb
sub
mov
faddp
cltd
aas
out
push
pop
or
je
dec
sti
adc
aad
xchg
jmp
jnp
adc
push
jne
mov
ja
out
shll
scas
mov
mov
cltd
mov
sub
push
cmp
xchg
hlt
shlb
int3
add
jae
push
dec
mov
adc
in
ljmp
push
cld
data16
cmpsb
and
cwtl
jg
ljmp
data16
cmp
push
mov
mov
mov
ficompl
aad
jo
aas
mov
in
dec
mov
push
cmp
inc
test
addr16
xor
push
mov
std
cmpsb
xor
call
and
ret
jae
enter
add
je
outsl
sub
iret
dec
adc
lods
jne
out
push
cmpsb
push
repz
add
mov
std
addl
mov
xchg
addb
inc
negl
rol
cli
jne
in
mov
dec
es
lret
mov
jb
lods
loope
cli
pop
mov
cli
dec
out
lods
and
sahf
pop
lods
mov
mov
xor
and
jno
inc
mov
dec
fnsave
cmpb
iret
hlt
mov
ret
pop
andb
add
je
mov
or
pushf
inc
loope
mov
clc
jnp
adc
inc
inc
xchg
mov
mov
mov
sbb
rclb
loope
push
or
daa
js
pop
std
and
jg
xor
adc
cli
xor
mov
enter
stc
std
push
cmp
pop
adc
dec
mov
das
shll
jnp
sbb
and
cmpsb
mov
bound
stc
mov
subb
les
jge
cmp
int3
jo
cld
aaa
mov
repnz
mov
shlb
push
jno
mov
ret
paddb
xor
fildl
mov
cmp
pop
sti
data16
jnp
adc
xor
fimuls
jb
pop
clc
push
cmp
pop
adc
adc
mov
jbe
ja
mov
xchg
adc
xor
lea
add
movsl
xchg
jne
pop
je
addr16
roll
xchg
push
mov
fwait
jo
and
out
ss
cmp
sti
insb
lods
shrb
divb
or
ss
push
adc
test
or
mov
repnz
scas
xor
pop
test
andl
scas
in
add
jl
pop
adcl
mov
push
movsl
adc
rep
jns
je
imul
lds
addr16
data16
pusha
xor
ss
or
test
jl
negl
mov
shll
scas
punpckhbw
sub
mov
adc
out
pop
std
cmpsb
dec
jo
lret
je
pop
jle
mov
mov
cltd
mov
ds
repz
mov
push
hlt
jle
cmp
aaa
loope
repz
clc
mov
sbb
cmp
mov
jg
dec
adc
add
sub
jl
scas
jae
mov
jno
or
cltd
xchg
gs
jle
mov
jns
mov
sub
mov
inc
aas
xor
push
pop
or
xor
jmp
adc
mov
icebp
fucomp
test
in
inc
mov
pop
rcr
jo
sub
pop
xchg
aad
mov
out
cli
push
aam
movl
push
aam
mov
mov
adc
adc
mov
lcall
icebp
adc
xchg
cmpsl
repz
push
jmp
add
dec
push
adc
rcrb
stc
jle
mov
xorb
push
je
mov
jmp
fnsave
push
or
xlat
lods
mov
dec
mov
es
inc
jl
fadd
stos
and
dec
mov
cmc
cwtl
inc
dec
cmpsl
mov
fs
arpl
xor
inc
push
inc
cli
mov
daa
popf
and
xchg
cmc
rcrl
test
into
jnp
mov
and
pop
mov
inc
leave
fxtract
dec
dec
sar
hlt
aaa
xchg
xor
ret
stos
ds
pop
jno
mov
sub
mov
cmpsb
je
fcomi
push
cmpsl
ja
imul
out
pushf
lods
call
out
xor
outsb
push
pop
stos
lock
in
ss
loopne
sbb
imull
sti
jbe
movsl
jbe
std
lods
ss
int
xlat
adc
leave
jg
jecxz
test
pop
sahf
lcall
int3
sub
jns
pusha
loop
pushf
adc
jne
mov
iret
lret
jbe
add
mov
insb
adc
jmp
and
adc
out
fcmovbe
jb
inc
mov
addb
dec
cmc
es
xor
mov
add
scas
push
idivl
cltd
ret
fidivrl
and
fidivrs
push
fdivr
fs
xchg
sahf
popf
cmpsl
out
ljmp
and
dec
dec
xchg
dec
xchg
mov
ds
mov
jb
xchg
jmp
sub
xor
inc
div
insl
scas
sub
add
xchg
andl
lock
add
lret
mov
clc
mov
test
movsl
pushf
movsb
jle
pop
jle
dec
lret
aam
pop
cmp
test
cmc
xor
adc
arpl
mov
icebp
shrl
hlt
test
cmpsb
xor
test
pop
inc
xor
aas
mov
lods
shrl
mov
test
xor
xor
in
repnz
jne
in
out
jae
clc
xchg
loop
pop
cmp
adc
stos
mull
jb
mov
cli
dec
cmc
idivl
in
loopne
xor
cmp
ficompl
into
iret
jnp
xlat
xchg
jmp
dec
mov
cmp
adc
push
mov
cltd
aas
mov
lahf
add
fcmovne
push
ror
inc
mov
pushf
lods
shr
orb
or
out
out
mov
cmpsb
iret
sti
iret
in
mov
add
ret
enter
aaa
ljmp
add
out
push
lahf
mov
insb
sub
fs
xor
lods
leave
sbb
imulb
icebp
or
jnp
adc
into
in
inc
das
mov
xchg
and
adc
mov
mov
pop
mov
mov
bound
enter
jbe
aaa
aas
pop
jne
jnp
out
stc
in
scas
xorb
stos
les
mov
mov
inc
or
pop
jnp
mov
push
fisubrs
inc
gs
mov
enter
mov
dec
pop
add
add
add
cmp
and
incb
jnp
mov
enter
aas
popf
push
xchg
jle
cmp
leave
mov
jp
scas
adc
das
inc
mov
sbb
jge
pop
and
outsl
sub
sub
mov
loop
dec
and
mov
sbbl
sti
jbe
stc
ds
rclb
scas
jle
scas
ds
notb
rorb
mov
cli
mov
std
jmp
mov
out
scas
decb
lods
xor
movb
cld
pop
xor
in
andl
shl
pusha
sub
popa
std
mov
mov
xchg
lret
jne
adc
add
ja
jmp
into
mov
mov
cmpsb
inc
incl
cmp
arpl
nop
dec
dec
jle
jmp
adc
sbb
hlt
cltd
jb
push
jl
xchg
lret
jne
or
xor
ret
lods
add
fwait
je
stc
decb
pop
jns
inc
jge
fdivrp
jmp
or
scas
jne
in
mov
int
fcompl
ja
enter
push
cmp
fnstsw
or
jg
sbb
jne
cmpsb
pop
mov
lea
rorb
aaa
pop
push
sbb
or
cmp
loop
or
out
cld
xor
mov
test
pop
xlat
jmp
mov
in
out
pop
jbe
jmp
mulb
dec
scas
inc
stos
sahf
pop
scas
in
cs
adc
ror
fs
ljmp
jns
movsl
mov
divb
jns
jle
mov
stos
push
shr
lods
xchg
xor
mov
ds
mov
and
scas
test
adc
movsb
jmp
lcall
jecxz
mov
and
in
call
aam
ds
std
mov
test
lcall
scas
int3
add
push
jmp
scas
rclb
cmp
test
dec
shlb
test
mov
sbb
mov
fstpl
xchg
cltd
stos
out
mov
sti
fcmovnbe
xchg
jmp
in
cli
sub
shll
mov
stos
out
mov
sub
xchg
jmp
stos
jno
cli
mov
jbe
imulb
lock
cmp
incl
xlat
adc
xchg
fstp
mov
cli
rorb
out
loop
pop
mov
stc
outsl
inc
mov
mov
loope
outsl
mov
je
cmp
cwtl
mov
sti
outsb
push
decl
xchg
mov
xchg
gs
cmpsb
iret
sti
into
cli
int3
in
jle
clc
jae
adc
loope
pushl
imul
xor
mov
pop
std
cmpsb
xchg
jmp
add
test
and
lods
and
jae
add
pop
adc
sti
xor
mov
cli
or
sbb
mov
out
cli
mov
ficompl
cmpsb
out
sti
adc
adc
jno
mov
negb
lds
popf
cmp
stos
les
enter
push
add
out
mov
xlat
imul
mov
pop
scas
sub
sub
jb
aaa
cli
cwtl
jbe
xor
sub
les
and
adc
gs
add
sbb
lret
cmp
or
push
js
ja
and
test
loopne
push
orb
dec
jbe,pn
movsl
in
push
aam
or
imul
jb
lock
or
or
cwtl
adc
cwtl
lods
int3
cs
push
jle
cmc
dec
cmp
xlat
inc
adc
xchg
or
add
into
xchg
push
jecxz
xchg
repz
in
insl
popf
mov
lahf
cmc
loopne
scas
ljmp
mov
out
leave
clc
fsub
jne
in
inc
mov
test
jecxz
dec
stos
fildl
jge
sti
ds
inc
jmp
mov
sbb
into
js
mov
xor
jl
cmp
cmp
int3
inc
inc
push
or
imul
add
sarl
cld
lock
cmpb
and
dec
xor
inc
test
mov
call
mov
hlt
xchg
lds
dec
pop
push
fcos
rcl
sub
fisubl
fsub
hlt
pop
inc
mov
or
ja
jge
js
xchg
and
xor
and
call
mov
arpl
cltd
cmp
sbbl
dec
fs
and
notb
jg
packuswb
sub
aam
sub
repnz
cmc
push
inc
les
arpl
orl
xchg
cmp
pop
icebp
or
hlt
mov
dec
pop
lcall
xor
std
sub
ds
mov
xlat
lods
mov
inc
popf
adc
push
outsb
lock
add
push
mov
pop
push
adcb
aam
mov
mov
cmpsb
mov
mov
jnp
push
scas
pop
mov
jmp
xor
mov
subl
std
pop
pop
dec
push
push
in
ljmp
movsl
inc
icebp
mov
add
cltd
pop
sub
mov
fisubrl
adc
mov
or
les
pop
pop
jecxz
push
popf
divl
testl
add
jb
mov
les
xor
popl
xchg
sbb
addr16
sub
adc
sbbl
ds
lcall
lret
and
in
stc
push
xchg
filds
xchg
jne
mov
jae
add
int
mov
jae
jbe
aas
inc
adc
scas
gs
sbb
sbb
xchg
push
sarb
int
js
inc
data16
adc
and
sbb
and
dec
outsb
sti
sub
xor
push
call
mov
push
out
pop
sub
and
pop
mov
rcrb
insb
call
fstpt
inc
sub
imul
mov
addb
sarl
xor
in
je
push
inc
mov
mov
xchg
dec
inc
cmp
dec
xchg
lret
push
outsl
bnd
mov
push
sti
loop
mov
xchg
cwtl
js
or
jecxz
addb
sub
and
xchg
jl
push
mov
mov
sub
adc
inc
mov
mov
shlb
fs
sub
mov
jle
mov
pop
mov
jnp
adc
jmp
adc
dec
add
push
loopne
cmpsb
jecxz
sti
lahf
fsubl
clc
jg
dec
aaa
inc
in
lods
test
inc
sub
mov
mov
or
cs
dec
movsl
rol
add
gs
lcall
xchg
popa
inc
adc
xchg
adc
out
mov
inc
clc
pusha
jbe
adc
imul
loope
imul
mov
bound
mov
cltd
push
or
adc
lahf
cmp
fidivl
cs
sbb
cli
lods
and
dec
roll
or
icebp
in
xlat
inc
and
xchg
hlt
movsl
ret
pushf
pmullw
imul
lret
fstl
ret
sbb
pusha
in
mov
push
xor
das
adc
xchg
int3
pop
in
lds
or
in
icebp
mov
mov
rcr
dec
je
lods
movsb
adc
imul
dec
pushw
dec
dec
enter
cmp
fsubrs
inc
mov
jbe
into
ret
sub
dec
jg
push
cli
sub
nop
sti
mov
jge
mov
or
int3
cld
dec
or
pop
cmp
pushf
std
out
jle
cmp
mov
fisttpl
imul
hlt
decl
pop
add
adc
aam
mov
adc
bnd
loope
mov
pushl
mov
jb
mov
shrl
xor
mov
add
movsb
rorb
test
lcall
inc
jnp
jne
add
fwait
jge
cli
js
out
mov
push
das
jle
or
dec
pushf
cmp
lock
lods
inc
clc
je
rolb
pop
aad
cmp
sarl
push
mov
inc
push
pop
add
out
mov
pop
jo
push
fistpl
mov
ret
mov
and
scas
aas
pop
rclb
lahf
cltd
mov
fcmovne
adcb
nop
rol
mov
cli
push
mov
sbb
add
jns
push
ljmp
cmp
inc
aas
adc
mov
cmpsl
inc
nop
xor
push
and
fdivrs
cwtl
stos
push
xor
push
xchg
and
scas
sbb
aam
adc
fcmovb
adc
insl
mov
jno
jl
test
push
addr16
or
jne
xor
rorb
iret
fnstsw
mov
adcl
gs
js
imul
test
jge
movsl
add
inc
bnd
fisubs
ss
mov
pop
mov
outsb
and
xor
xor
xor
dec
and
inc
lahf
cmp
dec
adc
xchg
fst
lret
sub
xor
push
divb
movsb
fs
leave
sub
mov
jge
inc
in
and
lcall
stos
xlat
andb
xchg
repz
add
dec
jmp
into
xlat
pop
jg
sarl
aaa
xlat
lock
dec
into
push
lahf
xchg
daa
lds
lods
mulb
dec
nop
adc
pop
fidivs
sarb
adc
pop
mov
adc
ret
shll
iret
push
push
mov
jge
cld
xchg
xchg
cltd
insl
sbb
xchg
lcall
lcall
cmpsl
push
pop
test
shr
js
out
xchg
fnstcw
cwtl
jl
ret
mov
sub
scas
je
and
iret
mov
outsb
push
sbb
pop
sahf
inc
mov
fldl
subb
in
xor
add
or
insb
pop
in
fpatan
adc
insb
push
jg
test
std
push
jmp
and
sub
and
xchg
add
aam
int
mulb
daa
adc
mov
jl
fistpl
pop
mov
cmp
xor
or
inc
adc
push
push
lea
xchg
sub
cmp
movsb
inc
iret
pop
aas
leave
pop
push
gs
dec
cmc
stos
push
adc
outsl
aaa
mov
iret
add
sbb
out
ljmp
pop
aam
repz
dec
mov
fdivs
inc
cmp
fisttps
pusha
movsb
mov
clc
popa
inc
xor
lahf
push
call
lods
sbb
cmp
iret
or
stc
aad
scas
fsubr
jae
imul
push
xor
mov
xor
mov
movsb
push
sbb
and
push
or
xorw
inc
daa
xor
in
xchg
cmp
or
call
outsl
sub
mov
xorb
addl
lods
adc
sbb
mov
imul
inc
xlat
pusha
divl
fstpt
loopne
testb
sbb
out
jne
lcall
adc
add
jae
int
inc
add
push
add
leave
lcall
in
cmp
lret
insl
sbb
cmp
push
mov
cmc
pop
dec
call
aaa
in
push
and
fwait
xor
mov
call
push
inc
daa
aaa
insb
sbb
sub
sbb
nop
adc
lods
cli
not
sub
inc
outsb
or
mov
dec
mov
mov
repz
ud2
les
jae
push
out
and
dec
cmp
sub
mov
push
call
adc
int3
add
nop
pusha
sbb
ljmp
lock
adc
lcall
push
mov
ss
fmuls
dec
sub
cld
cmp
enter
call
sub
pop
mov
sub
sti
faddp
out
dec
dec
adc
movsl
cmp
inc
mov
xchg
test
loop
add
xor
lcall
push
cltd
out
shrl
inc
add
push
sbb
jnp
cs
rorb
notl
xor
adc
mov
cmp
xor
test
pop
mov
addr16
and
not
mov
lgs
sbb
xchg
pop
loopne
cld
fwait
pop
dec
test
sbb
outsl
xor
mov
cmpps
in
lret
sub
or
cmp
decb
repz
dec
xchg
orl
xchg
sbbb
daa
sub
dec
add
mov
and
jno
shl
sbb
mov
mov
xchg
or
outsl
gs
push
lahf
cmp
dec
clc
popa
xchg
scas
jb
imul
push
test
in
mov
test
inc
or
jbe
fs
rolb
mov
push
add
mov
mov
cmp
out
xchg
int3
mov
mov
in
jno
mov
sbb
sahf
pop
repz
jo
call
lahf
or
stos
pop
push
rolb
pushf
add
jle
xchg
ljmp
xchg
inc
dec
outsl
pop
pop
or
xor
inc
jecxz
lret
cld
xor
pop
jg
out
movsl
jecxz
lods
inc
mov
push
xchg
sub
xor
cli
or
stc
or
ret
ds
cmp
cmp
insb
mov
jnp
fs
push
xor
pop
lods
inc
jl
repnz
repz
fdivrs
dec
jp
pop
mov
arpl
add
mov
or
mov
subb
jge
add
lret
ljmp
rorl
pop
push
pop
lcall
ja
jmp
je
in
adc
push
add
cld
rorb
inc
mov
lds
cmpsb
in
stc
repnz
lods
mov
lods
lock
iret
or
pop
xchg
cltd
push
daa
xor
dec
scas
rorb
lds
int
mov
xchg
push
inc
add
pop
ds
outsl
xchg
and
mov
or
iret
nop
lcall
jae
call
cmp
jl
jl
mov
in
dec
push
outsb
pop
lods
jp
xchg
jle
adc
test
shl
aam
movsb
jl
push
xor
xorl
jecxz
flds
mov
aas
cli
cld
dec
add
xor
xchg
sub
mov
movsb
lcall
clc
xchg
clc
mov
js
mov
cmp
in
jo
inc
lods
movsl
dec
js
xor
xor
fnstsw
aam
xchg
cwtl
sbb
arpl
mov
xor
jle
and
jle
nop
or
dec
out
pop
dec
inc
mov
es
mov
es
in
rcl
inc
mov
adc
pop
jo
sbb
cwtl
cmp
decb
inc
bound
cmpb
in
pop
jo
popf
mov
sti
mov
jge
xchg
sbb
push
cmc
adc
test
jmp
jp
inc
mov
movsl
mov
je
loop
stos
xlat
dec
out
outsb
repnz
int
sarb
sarb
mov
adc
push
add
pop
add
sbb
xor
jnp
dec
mov
setae
mov
or
mov
fdivs
stc
sbb
mov
adc
sub
sbb
dec
pop
dec
mov
add
mov
xlat
jae
jns
pop
xchg
xlat
jl
pop
cli
pusha
out
xor
test
out
pop
adc
push
sbb
add
fnsave
scas
xlat
incl
rorl
push
mov
lods
mov
or
inc
jae
jnp
lea
out
mov
or
mov
xchg
jecxz
shll
and
cmp
repnz
mov
stos
xchg
fdivr
dec
dec
jbe
cltd
movsb
subb
repz
adc
fldenv
mov
push
cltd
pop
popa
popf
inc
ljmp
int3
lock
test
adc
aam
cmp
jmp
stos
es
dec
mov
inc
sbb
pop
lcall
mov
in
dec
or
movsl
fcom
mov
into
aas
test
stc
fcom
int3
das
xchg
popf
dec
popa
shlb
xchg
jmp
ds
push
mov
clc
sbb
jo
cwtl
xchg
ret
test
inc
loopne
mov
mov
cmp
bound
pop
mov
mov
push
addr16
and
and
lret
jecxz
loope
push
mov
cmpsb
inc
mov
ret
xchg
push
stc
push
mov
pop
or
imul
aam
leave
or
mov
arpl
push
sub
sbb
adc
push
roll
and
or
add
lods
mov
pop
add
push
lds
xchg
rcl
push
add
cli
add
out
xor
cmp
pusha
pop
sub
or
in
bound
push
mov
push
jecxz
xor
jmp
or
fbld
push
or
cmp
sarl
daa
in
push
add
push
or
fstl
jbe
xor
lret
add
xor
add
adc
cmp
dec
push
insb
mov
lcall
xchg
fcmovnu
dec
lret
add
sub
lds
cmpl
int
cmp
dec
jbe
pop
loope
pop
jl
ja
sub
push
movsl
xor
js
movsl
inc
xchg
dec
and
mov
outsl
mov
fisubl
inc
xor
push
aam
push
cmp
in
out
popa
das
lret
int
outsl
mov
lahf
cmpsl
insb
fs
xor
rcl
push
scas
loop
popa
test
aas
pop
fwait
push
add
jne
fcmovnu
popa
pop
arpl
dec
xor
add
loopne,pn
sbb
or
out
and
sbb
ss
mov
sbb
mov
js
stos
into
call
popa
repnz
cwtl
and
xor
aam
je
lret
or
mov
jb
jp
cs
out
in
sub
inc
call
cmpsb
sub
jecxz
dec
das
jne
lds
or
xor
lahf
or
or
fbstp
jbe
dec
fs
push
push
out
maxps
mov
jp
jmp
pop
imul
add
scas
sub
jns
add
iret
loope
jecxz
sbb
mov
mov
jle
daa
arpl
or
mov
mov
test
enter
jg
xchg
lret
push
jno
orl
incb
sbb
sbb
inc
pusha
jo
jp
movsb
mov
sub
outsl
pop
shll
push
push
sbb
loope
mov
not
int
jmp
mov
and
outsb
pop
mov
xchg
dec
adc
dec
xor
sbb
mov
dec
test
stos
jecxz
cmp
push
mov
add
and
dec
dec
test
jnp
mov
imul
pop
sbb
sub
cmp
mov
jo
jo
cmp
orb
std
xchg
dec
into
or
scas
dec
dec
out
adc
cmp
inc
or
int
mov
xor
pop
cld
xor
sbb
jg
mov
insb
pop
jp
bound
in
xchg
lods
and
sbb
das
in
shll
hlt
push
sub
cmp
mov
stos
cli
insb
jae
push
gs
int3
adc
insl
add
fwait
hlt
out
imul
mov
jl
jle
rcrb
lock
outsl
adc
push
popa
xchg
adc
daa
cmp
xchg
inc
xor
mov
dec
ja
decb
sahf
in
cmc
mov
push
test
pushf
add
jno
das
stos
es
sub
loop
dec
or
xor
lret
aam
fs
repnz
fldcw
cld
lahf
daa
push
sub
push
mov
dec
orb
addr16
pop
push
add
add
scas
cld
pusha
jmp
mov
les
or
fiaddl
out
push
movsl
or
or
mov
aas
shlb
fstpl
cmc
jmp
enter
jmp
in
and
setge
xchg
lahf
pop
xor
sahf
push
adc
mov
cmpsb
adc
iret
pop
lret
cmp
in
xchg
iret
scas
mov
push
or
aad
int3
icebp
sbb
or
or
stos
popa
pop
pop
jae
and
jno
sbb
mov
ja
fbld
or
adc
push
adc
inc
fdivrs
test
cmc
push
sbb
xchg
xchg
in
sbb
sub
adcb
fidivrs
sub
jo
push
cltd
int
and
jnp
int3
lcall
out
vcvtss2si
or
aam
aam
sbb
jns
repnz
sbb
add
popf
ds
sbb
mov
add
fistl
popl
sub
cmp
sub
ror
xor
das
xor
fidivs
imul
lcallw
roll
adc
sub
pop
cltd
gs
gs
dec
xchg
jmp
jo
out
gs
add
and
icebp
cmc
xlat
imul
sbb
jge
mov
scas
test
xchg
push
idivl
jmp
lods
stos
js
push
xor
pushf
std
nop
sti
lret
jno
gs
mov
xor
pusha
call
mov
inc
xor
push
or
cmp
sbb
cltd
loope
jl
mov
push
xor
mov
jecxz
dec
mov
into
push
pop
rcl
inc
xchg
inc
cwtl
mov
cmp
mov
push
cmc
fsts
inc
jl
into
ljmp
mov
dec
out
popa
out
imul
cmpsl
inc
pop
js
pop
push
daa
sbb
fdiv
dec
bound
dec
lcall
popa
ja
sti
out
aas
and
sti
dec
inc
les
mov
mov
sti
push
xor
mov
cmp
dec
jbe
cmpsl
jecxz
cmp
clc
cmp
imul
fisttpl
cwtl
sbb
addr16
fisttpl
js
and
cwtl
orb
mov
inc
push
lcall
subb
int
xor
inc
push
outsb
out
mov
pop
add
lods
jl
jne
adc
lods
or
fists
mov
dec
mov
push
mov
inc
enter
xlat
aas
inc
in
cmp
pop
cmpsb
mov
outsb
add
add
pop
jne
out
sub
shll
dec
xor
pmaddwd
push
das
xchg
mov
fsubl
cmpsb
inc
lods
xchg
add
addb
dec
ss
adc
in
xor
sbb
aad
or
es
loopne
rorl
pushf
sub
mov
dec
jg
pusha
cmpl
rcl
imul
mov
rorb
loop
out
imul
fcompl
dec
push
rorl
adc
sbb
jecxz
and
jb
or
aaa
out
stc
inc
cwtl
std
cmc
mov
cwtl
test
jecxz
into
adc
add
xchg
mov
xor
es
mov
sbb
lret
xor
inc
jp
sbb
ret
pop
adc
lds
mov
call
fisttpl
repz
sub
insb
cmp
nop
es
and
cmp
dec
jnp
popa
loopne
mov
push
in
ja
push
mov
rorb
sar
add
subl
and
aaa
and
outsl
mov
in
xor
xor
imul
repnz
and
lea
push
loope
aas
inc
pop
mov
pop
rcl
xor
dec
pop
fists
mov
xchg
pop
add
loopne
push
add
fidivrl
lret
inc
xor
mov
out
gs
fimuls
push
test
clc
testb
pop
ret
and
mov
adc
pop
mov
shrd
pushf
and
sbb
pop
popf
jmp
nop
ds
jno
and
ja
pusha
xor
scas
aaa
lret
add
sub
cmpsl
iret
je
mov
popf
lcall
punpcklwd
ja
pop
push
dec
mov
add
fcoms
jne
mov
sub
dec
pushf
jb
mov
inc
ds
iret
test
mov
loopne
push
insl
test
xlat
jecxz
int
imul
jecxz
cmp
pop
sub
push
dec
sub
mov
lods
insl
daa
out
aad
insb
test
outsb
jae
in
in
and
icebp
add
shr
addl
and
pop
dec
sub
cld
pop
mov
decb
enter
mov
dec
jecxz
fldenv
sahf
test
fnstsw
lea
adc
mov
cld
sti
mov
mov
in
fisttpl
add
out
shrb
icebp
adc
jb
daa
pop
outsb
lret
nop
mov
clc
testl
test
icebp
adc
arpl
lret
out
scas
sub
xchg
test
std
or
push
sbb
out
jne
pop
bound
roll
dec
dec
loopne
out
repz
enter
xor
sub
add
sub
push
xor
and
jecxz
push
js
sbb
test
js
adcb
xchg
call
cmpl
movsl
inc
sbb
xchg
fstpt
add
mov
mov
lahf
sbb
pop
ljmp
xchg
mov
sbb
fs
pop
push
ljmp
xor
shll
mov
dec
jnp
stc
sbb
mov
loope
push
ffreep
int3
or
aas
pop
ret
in
nop
out
roll
push
clc
lds
test
ret
cmpsl
out
dec
cmp
add
addr16
into
mov
or
push
out
jecxz
shrl
test
bound
popf
jl
in
imul
js
lret
xchg
loope
js
push
enter
lahf
sarb
das
lds
pop
jae
dec
xchg
je
jge
out
or
adc
xchg
xlat
pop
push
push
jnp
xchg
negb
add
in
orl
pop
cmp
adc
mov
xor
jb
jg
xchg
dec
stos
push
xlat
fisubrl
test
and
fistpll
sbb
xchg
xchg
sbb
aad
add
sarl
rcll
bound
lret
mov
adc
leave
xor
mov
cwtl
and
lods
movntq
out
xchg
mov
shl
and
adc
jb
adc
push
jnp
cmp
rclb
pop
ljmp
mov
add
adc
mov
je
leave
pop
adc
add
roll
cltd
cmp
push
push
lock
push
dec
or
mov
adc
insb
sbb
jno
out
and
movsl
jb
cmp
in
push
les
dec
js
hlt
fsubl
xchg
js
and
scas
ret
ss
push
mov
mov
cltd
gs
or
fs
and
jmp
sbb
jle
out
daa
pusha
adc
data16
xchg
ljmp
popa
push
outsb
sahf
push
mov
les
lahf
test
in
jo
gs
dec
movsb
sbb
mov
paddw
sub
sbb
sub
fidivs
loop
lahf
sbb
jp
xchg
inc
in
inc
rcr
pop
push
xchg
jne
push
dec
cmpsb
sbb
jb
pushf
mov
inc
sbb
fucomi
insb
imul
pop
rclb
sub
sbb
add
sbbb
sbb
jo
pop
or
dec
pop
pushf
dec
push
popf
fldl
test
testb
jbe
scas
movb
pop
dec
xorb
in
out
pop
in
sbb
arpl
leave
sub
sbb
hlt
cmp
mov
in
mov
mov
jnp
gs
or
add
push
cmpxchg
or
dec
xchg
jb
int
imul
movsl
lret
jnp
out
frstor
scas
scas
mov
mov
cmpsb
mov
jno
xchg
or
nop
into
clc
mov
cmp
push
push
add
add
dec
ja
jmp
icebp
mov
push
clc
inc
sbb
push
cs
fisubs
in
sbb
out
fsubs
mov
test
xor
jge
repz
mov
das
dec
xor
inc
mov
jno
mov
jmp
call
fmull
scas
xor
push
mov
ljmp
inc
pop
jp
cmp
xor
pop
stos
push
mov
jecxz
pop
dec
dec
pop
rep
fimull
mov
or
iret
jg
ret
out
xchg
push
xchg
push
xchg
lds
pop
add
lcall
xchg
mov
loopne
add
jo
add
mov
arpl
scas
cltd
aam
gs
add
cmpsb
lds
inc
dec
sbb
adcl
test
pavgw
sbb
jne
adc
dec
lcall
inc
stos
inc
sub
arpl
push
pop
fidivl
jb
fwait
imul
jecxz
or
push
outsl
jl
arpl
or
add
mov
flds
and
dec
in
out
sub
push
mov
push
jae
mov
sbb
jno
add
sub
mov
fimuls
jae
mov
out
repnz
sbb
sub
inc
test
repz
mov
xor
adc
jb
dec
repz
out
push
out
and
mov
xlat
lds
adc
mov
mov
mov
in
push
sub
repnz
enter
cmp
add
ss
push
je
movaps
dec
clc
lret
insl
iret
add
mov
loopne
xchg
scas
jp
push
xor
xchg
xchg
adc
outsb
cld
outsl
roll
add
xor
cld
xor
pop
pop
dec
pop
pushf
daa
cmpb
mov
jmp
push
xchg
mov
in
or
cld
add
and
cmp
mov
daa
and
mov
adc
lcall
insl
daa
ljmp
cmp
int
jns
cmp
xchg
sahf
call
cmpsl
call
lods
int3
ret
sub
stos
les
sub
popa
jge
scas
imul
decl
ljmp
mov
mov
and
repnz
jns
push
and
and
lcall
add
daa
mov
jle
push
test
or
daa
rcll
sbb
add
out
jb
enter
popw
mov
gs
imul
cli
dec
jmp
pop
stc
push
sbb
in
xchg
orb
into
lods
fwait
or
inc
pop
popa
mov
repnz
jmp
ret
repnz
mov
dec
loope
pop
lock
aad
sub
sbb
jle
rcrb
inc
mov
xor
outsl
cmp
mov
rcr
or
test
inc
shlb
inc
das
aaa
mov
jo
outsb
sbb
jne
xchg
outsb
sbb
add
rorl
inc
mov
xor
xchg
or
push
xchg
sub
sub
dec
push
jno
out
loopne
push
scas
mov
jecxz
mov
dec
mov
or
adc
call
pop
repnz
pop
stc
popf
jg
lock
or
sub
stc
leave
mov
sub
fninit
bound
mov
adc
into
push
pop
mov
test
inc
lcall
lea
xchg
pop
adc
inc
inc
das
mov
sahf
push
icebp
jmp
stos
sbb
sub
enter
test
sbb
js
add
hlt
clc
add
inc
mov
push
mov
pop
or
fstpl
daa
insl
out
js,pn
sbb
outsb
push
repnz
mov
ds
cltd
xchg
adc
in
pushf
rcrb
pop
cli
rorb
arpl
mov
mov
jnp
aaa
lret
inc
out
lret
mov
mov
mov
fwait
push
adc
shrl
push
cmp
movsl
pop
sbb
data16
dec
ret
sub
mov
and
jl
and
into
or
pop
push
adc
add
repz
dec
fwait
xor
xchg
sahf
xor
aaa
cmp
mov
stos
xchg
fnstcw
sub
mov
mov
push
pop
inc
rclb
push
shlb
jge
dec
dec
loop
std
push
cmp
ljmp
pushf
mov
test
adc
lcall
mov
fucom
inc
adc
pop
stos
and
test
cwtd
dec
and
arpl
cmp
sbb
adc
je
adc
cltd
cmp
mov
lods
je
mov
hlt
inc
fldl2t
xchg
jno
out
xchg
rorb
pop
aas
rcr
dec
stos
and
and
test
shr
stos
mov
fisttpll
cmp
in
mov
jno
out
jmp
scas
push
push
imul
mov
nop
dec
add
scas
cmp
sub
ss
loop
mov
and
sbb
ret
insb
sbb
hlt
mov
arpl
pop
push
inc
popf
insb
dec
pop
stos
pop
imul
and
adc
mov
out
lahf
dec
mov
jnp
sbb
lret
lret
dec
rol
push
leave
stos
vxorps
ss
or
and
scas
sbbb
mov
cmp
mov
loop
sub
dec
pop
dec
xchg
inc
sbb
sbbl
mov
pop
xlat
cmp
sub
stc
and
inc
mov
clc
mov
adc
sbb
xor
jmp
stos
lock
call
mov
mov
jae
std
clc
cmp
cmp
cmp
adc
push
or
lods
ficoml
mov
fimull
movl
sub
adc
adc
es
std
xor
add
add
bound
mov
dec
mov
aam
pusha
sub
dec
mov
mov
mov
nop
xor
sub
ret
icebp
fcompl
stos
push
mov
pop
idivl
stos
stc
mov
dec
pop
pop
icebp
pop
inc
stc
sub
push
js
cs
xor
pop
dec
inc
push
mov
and
bound
push
int3
add
jnp
lcall
inc
test
or
iret
fs
adc
xchg
or
or
data16
ljmp
mov
mov
and
aam
xchg
push
jbe
cmp
in
pop
pop
mov
aad
mov
mov
push
sahf
ror
gs
mov
cmpsb
lods
mov
incb
pop
test
mov
hlt
adc
sub
inc
jg
sbb
out
adc
das
adc
in
int3
or
mov
cmc
arpl
lods
divb
mov
ror
mov
lods
jl
loope
testl
imul
push
push
clc
mov
mov
or
xlat
and
push
cmp
push
fldenv
dec
sub
les
movb
test
jmp
and
sub
adc
xchg
leave
jb
mov
mov
jecxz
out
loope
adc
outsb
inc
or
push
leave
imul
push
scas
or
pop
add
sub
xchg
add
mov
test
sub
add
gs
seto
adcl
sti
ret
mov
test
dec
adc
inc
insb
flds
xchg
dec
es
add
xchg
xchg
pop
out
ds
jl
dec
ret
xchg
shll
sbb
or
lds
enter
in
or
inc
mov
popa
pop
sbb
popa
lret
cli
mov
aaa
xchg
sbb
and
call
idivb
lahf
fs
lods
xor
aaa
dec
push
shlb
or
or
popf
lret
xor
xchg
pop
insb
push
xlat
icebp
xor
sub
das
int3
scas
adc
add
repnz
rorb
mov
pop
or
rclb
sub
jmp
in
push
mov
push
sbb
idivb
mov
call
pop
popf
cltd
out
fs
or
cmpb
adc
movlps
les
in
push
iret
addl
pop
inc
ss
icebp
stc
ja
aam
pop
jns
mov
je
into
xor
movsl
add
imull
sub
insl
inc
sbb
and
xchg
jmp
sub
cmc
jae
adcb
pop
inc
andb
movsb
in
pop
jns
outsl
rolb
cli
popa
into
daa
popf
mov
sbb
xchg
sub
into
inc
jb
xor
insl
adc
hlt
fcomi
jne
test
test
frstor
pop
idivb
adc
pop
popa
lahf
inc
insl
inc
fwait
data16
pop
push
out
stos
clc
jp
loop
lea
popa
mov
mov
xor
xor
hlt
pop
jmp
sub
fidivrs
lea
pop
xchg
sbbl
das
insb
add
pop
mov
mov
add
addb
int3
test
xorb
popa
jg
add
pop
add
add
nop
mov
pop
xchg
sub
push
cltd
bound
jbe,pn
jns
cmp
mov
ret
sub
icebp
das
pop
mov
jb
inc
ret
gs
mov
bound
xchg
ja
pushf
test
repz
jmp
lds
adc
shld
push
mov
jecxz
popf
xchg
test
popa
lret
loopne
jg
adc
test
inc
cmp
pop
inc
loopne
movsl
cwtl
loope
push
mov
ret
ljmp
jbe
clc
stos
es
lods
lret
aam
jp
loopne
dec
mov
push
das
fildl
xor
ds
ja
sahf
stos
les
cmp
adc
into
popa
icebp
xor
mov
mov
xchg
leave
test
mov
sbb
in
addr16
sub
mov
fldenv
push
in
jge
aam
sub
mov
jo
repz
loop
aas
or
mov
stos
mov
aas
xor
adc
push
and
sti
popf
repz
std
sub
mov
lret
pop
fistps
fists
clc
shl
outsb
shlb
shll
subl
jmp
cmpsb
daa
jg
test
inc
or
push
cmp
int
sbb
or
dec
dec
lods
or
popf
ja
jb,pn
cmp
dec
xchg
push
add
xor
fsubr
or
jns
and
imul
pop
stos
adc
add
iret
shll
ret
pushf
cld
scas
test
shlb
aaa
pop
xchg
data16
imul
sub
add
jmp
adc
test
pop
xchg
icebp
aaa
lds
push
cwtl
cmpsl
push
test
mov
fldl2t
cmp
xor
leavew
movsb
inc
test
push
push
ret
sub
add
dec
xchg
mov
cs
scas
push
dec
sbb
mov
jnp
icebp
sbb
mov
jno
stc
lods
fsubp
and
in
mov
mov
add
and
adc
xlat
test
in
mov
mov
xchg
sub
fldt
sbb
lahf
fdivl
test
inc
pop
jns
cmp
add
sbbb
movsl
cli
fs
enter
sub
xchg
ds
sti
fiaddl
jno
pop
add
and
inc
int3
hlt
test
sub
mov
arpl
sbb
mov
dec
scas
sub
xchg
and
and
xor
xacquire
xlat
jmp
sti
xor
mov
sar
mov
insb
pop
sub
ds
add
cmp
push
cwtl
cmp
xchg
xor
inc
popa
mov
and
jg
repnz
repnz
sub
out
iret
dec
lret
es
rorb
jmp
lds
loop
aaa
cwtl
lds
pop
adc
sub
cmp
nop
sahf
mov
inc
nop
and
test
shl
jmp
sbb
inc
jo
mov
dec
mov
lret
std
add
out
pop
xor
jp
xorb
xor
hlt
lret
xchg
mull
sub
mov
movsb
cmp
xchg
lret
les
rolb
out
and
add
loop
sub
xchg
push
pop
jnp
daa
cmp
sbb
and
jne
nop
loopne
mov
cmpsl
scas
and
xor
arpl
mov
pop
clc
ja
pop
or
xchg
sbb
popf
pop
int
mov
mov
push
inc
inc
inc
fidivrs
mov
fadds
inc
pusha
push
sbb
mov
shll
mov
or
xchg
mov
lret
jb
sub
lods
jmp
xchg
xchg
rorl
add
daa
fists
into
mov
loopne
sbb
or
lds
lret
mov
xchg
push
mov
sbb
adc
sbb
mov
xchg
pop
mov
mov
xlat
cmp
popa
dec
and
imul
cmp
push
fsts
fildll
mov
jecxz
ret
or
fs
xchg
sti
dec
sub
test
ds
dec
popa
jns
aas
or
movsl
cmpsb
pop
mov
aas
pop
bound
jnp
loopne
jne
lcall
sarl
jne
push
mov
jmp
ss
push
xor
mov
das
dec
cld
scas
or
add
jmp
cmp
cli
mov
push
in
cmc
cmp
loop
sti
push
shll
and
push
xchg
imul
add
sbb
push
mov
xchg
in
dec
dec
pop
fstp
sti
and
test
test
stos
std
arpl
test
jnp
xchg
add
jmp
loope
icebp
push
loope
insl
js
negb
lods
subl
cmp
mov
dec
adc
mov
mov
nop
out
sbb
pop
mov
dec
stos
loop
push
stos
fsubrp
xchg
push
xor
fisubs
call
push
push
xlat
fstp
mov
sbb
stc
jae
add
scas
add
or
xchg
int
stos
xchg
leave
sub
lret
mov
jp
cli
shrl
sbb
inc
dec
fadds
or
pop
push
adc
adc
sbb
mov
cmpsl
cmp
mov
bound
cmp
loope
scas
cld
movsb
in
fisubl
movsb
jbe
mov
out
xorl
mov
lds
lcall
pop
call
pop
dec
inc
mov
pop
cwtl
call
insb
mov
cs
sar
jae
mov
shld
push
popa
sub
push
cltd
insb
cmp
je
daa
sub
mov
xchg
xor
or
jno
movsb
movsb
andl
and
lahf
push
and
aaa
test
inc
jmp
cld
movsb
xchg
adc
cwtl
out
test
sbb
loope
adc
shl
ret
pushf
and
cmp
mov
cmpsl
mov
mov
adc
add
sbb
push
clc
cs
pop
pusha
sbb
push
push
data16
insb
mov
cmpsl
or
cmp
test
sti
push
mull
add
pop
ds
cmp
pop
lods
sbb
loop
xchg
inc
and
in
jae
lock
sti
inc
inc
popl
leave
and
pop
dec
sbb
adc
lods
adcb
fwait
and
xchg
xchg
push
push
xchg
xchg
icebp
daa
cmp
jnp
mov
icebp
shll
pop
mov
cmpsb
push
mov
xchg
sbb
and
loop
mov
lods
or
aad
or
mov
imul
dec
jp
das
icebp
lods
pop
sbb
mov
mov
and
mov
sub
lods
loop
out
ss
repnz
int
lcall
pushf
mov
inc
and
pusha
jns
adc
fs
fwait
leave
push
xchg
sbb
pop
push
mov
pop
ss
das
mov
ficoml
sahf
push
cmp
out
push
arpl
pop
mov
push
xrelease
test
fiadds
stos
add
add
out
jmp
imul
jno
fidivrl
sub
mov
dec
stc
mov
dec
shlb
xchg
inc
arpl
mov
fistpl
jle
mov
pop
shr
loope
test
test
mov
dec
jb
addb
in
sbb
sbb
xchg
mov
enter
jno
and
xor
enter
fiadds
cmpsl
mov
enter
mov
inc
and
mov
add
pop
fwait
lods
sub
inc
hlt
mov
leave
pop
insb
sub
out
insl
fs
pop
xchg
push
xor
xor
fbld
jmp
shlb
cmp
int3
jae
pop
jns
imul
cmp
lds
mov
js
or
sbb
movsb
jge
out
mov
sub
or
mov
adc
push
pop
sub
mov
out
mov
negl
add
and
cli
fsubrl
rcll
sub
lods
nop
test
test
int3
mov
int3
mov
ss
stos
jns
push
call
jp
jb
adc
inc
fmull
in
dec
mov
cmpsb
or
dec
fdivrs
xchg
mov
mov
test
push
sub
jnp
pop
call
fimuls
mov
fs
test
jns
add
push
jecxz
pop
and
push
inc
or
xchg
repnz
data16
insl
xchg
add
dec
fdivp
push
daa
adcb
pop
push
sub
push
jnp
lock
insb
lea
cld
inc
lds
xor
add
and
mov
push
lods
jns
add
mov
inc
into
push
push
mov
add
mov
push
js
xlat
and
add
ret
xchg
mov
push
outsl
lods
movsl
test
push
and
pop
ret
stc
mov
xchg
out
mov
cmp
add
stc
sbb
subl
pop
sbb
jbe
cltd
jmp
inc
sbb
pop
push
mov
sub
cwtl
fdivrl
sbb
fcom
mov
cmpsb
loop
mov
ljmp
xchg
rorl
js
insb
fidivs
mov
cli
ss
out
outsl
dec
ljmp
and
jns
aad
mov
cltd
push
jb
cmc
mov
jmp
inc
mov
stos
inc
cmpsl
dec
aas
pusha
mov
sbb
scas
loop
push
push
xor
and
fidivrs
cmpb
test
jnp
mov
and
les
les
out
jle
shll
cwtl
addr16
adc
xlat
mov
addr16
cmp
or
pop
sub
shll
fwait
xchg
push
scas
pushf
or
rclb
jl
inc
or
push
je
out
mov
scas
movsb
lahf
test
inc
add
mov
ja
pop
jg
bound
push
jns
inc
in
lret
push
or
cltd
lea
and
dec
ja
movsl
push
xchg
mov
pop
jg
test
sbb
ljmp
push
push
fisubrs
dec
jmp
fsubrl
push
mov
push
inc
ret
mov
lds
out
rolb
fstpl
xlat
mov
mov
repnz
cmp
mov
lcall
sub
arpl
or
inc
cmp
mov
iret
out
mov
mov
inc
jp
out
mov
pop
stc
in
and
adc
dec
jbe
push
lds
add
mov
movsb
sub
outsb
lret
sub
sub
loope
movsb
je
and
xchg
dec
mov
xchg
addr16
sbb
xlat
addb
cmc
fnstenv
mov
lahf
push
xchg
mov
cmpsb
fcmovnbe
int
jns
pop
in
aas
adc
cmp
stc
mov
push
iret
pop
xor
lcall
inc
sbb
mov
xchg
loopne
jne
jp
adc
xor
and
and
push
mov
std
lret
rolb
jnp
cwtl
pop
mov
xchg
dec
sub
fimuls
xor
rclb
subl
xor
sbb
add
or
sbb
add
dec
aad
adc
dec
adc
jno
inc
inc
inc
push
inc
xchg
xchg
test
gs
xchg
test
lahf
cli
movsl
jg
data16
das
fnstsw
or
pop
or
sub
movsb
jnp
sub
fists
and
bound
and
sub
mov
mov
cwtl
push
dec
test
mov
push
lods
lods
outsb
jle
mov
dec
adc
shrl
int3
or
ja
mov
inc
xchg
stos
fsts
in
cwtl
xchg
subb
mulb
pop
aad
xchg
add
fs
inc
ss
stc
cmp
mov
subb
mov
jne
pop
jno
sbb
push
or
inc
lds
fwait
cmpsb
fwait
dec
fidivrs
jmp
add
xchg
mov
cmpsl
sub
daa
xchg
or
out
lret
cmc
je
repz
adc
ja
aad
and
lods
lcall
popa
mov
js
push
mov
jae
push
aas
insb
jge
and
cmpsb
ret
insb
pusha
mov
xchg
pop
inc
and
add
sub
or
and
mov
or
lret
mov
sarb
ss
xor
outsb
sbb
aas
outsb
add
test
repnz
push
into
repnz
jmp
movsb
mov
cmc
jns
mov
not
or
add
ficoml
aas
sub
mov
out
mov
jl
and
xlat
fcmovbe
cmp
sub
fldl
push
dec
pop
sbbl
push
mov
in
xlat
cmp
mov
loop
mov
add
outsb
test
and
add
popa
insl
jbe
imul
stos
xchg
fcmovbe
std
adc
outsb
dec
mov
sbb
cmp
adc
mov
pop
sub
add
jmp
test
out
sub
lret
cmp
add
mov
xchg
mov
jl
cmp
sahf
inc
xor
ljmp
cmpsb
int
xchg
push
mov
stos
movsb
pushf
addr16
sahf
mull
out
fstpt
add
sbb
jl
xchg
xorl
jnp
cli
test
add
cmpsb
and
neg
pushf
adc
and
mov
dec
mov
push
adc
sbb
push
jle
aaa
hlt
add
add
add
xchg
sub
push
push
cmpsb
pushf
xor
popa
mov
push
mov
gs
dec
imul
lea
insb
add
cltd
sbb
rcrl
test
sub
jge
aam
loopne
addr16
and
xchg
push
std
mov
adc
pop
lds
adc
loope
and
insb
stc
testb
dec
or
imul
cmp
xchg
jp
mov
sahf
push
jbe
lcall
outsb
adc
repz
loopne
aaa
add
sbb
mov
shlb
mov
lods
out
add
and
sbb
xchg
imulb
das
sbb
mov
add
call
stc
inc
stc
jg
sbb
loop
insb
imul
push
repz
sbbl
jmp
xor
test
call
mov
out
bound
mov
sub
and
jmp
and
ljmp
scas
push
pop
in
pop
ds
and
jb
cmp
xor
mov
ss
mov
lret
cmc
insl
insl
or
leave
jecxz
jbe
mov
inc
jp
dec
int3
lods
jnp
mov
arpl
inc
dec
es
rclb
mov
adcl
je
pusha
push
inc
mov
jbe
cltd
mov
or
adc
ret
out
fbld
sub
repz
sahf
jp
jb
fnstcw
sbb
pushw
out
in
xor
loop
or
fwait
notb
jb
in
rcrl
or
std
in
xchg
aas
int3
xor
pop
mov
mov
cli
lock
repz
pop
push
cmc
pop
ss
and
mov
sbb
sub
or
iret
js
imul
addr16
insl
sarl
push
ret
dec
mov
pop
cmpsb
adc
cmp
add
shrb
iret
push
out
lret
jnp
adc
sub
push
insl
inc
imul
fwait
into
inc
scas
das
daa
movsl
push
dec
fwait
dec
xor
adc
idiv
cmpsl
div
stos
cmp
sub
sub
ja
jp
adc
fs
scas
pushf
mov
xor
jmp
cmpb
push
dec
leave
mov
icebp
outsl
lock
ret
arpl
sub
std
loopne
cltd
lcall
cmpsb
movsb
out
add
je
js
popf
inc
mov
loop
bswap
or
add
mov
imul
inc
dec
add
mov
lods
fimuls
rcrl
xchg
incb
je
cli
dec
fisubrl
nop
mov
jb
jl
subb
push
dec
mov
mov
pop
nop
add
nop
push
call
lock
sbb
pop
push
gs
test
je
inc
sub
aam
lret
loope
fsubs
jne
fdivl
idivl
and
scas
sub
adc
jge
test
jle
dec
add
shll
jne
andb
dec
xor
and
push
aad
sbb
inc
aad
mov
add
and
clc
cld
cmpsl
xchg
or
cmpsl
adc
adc
sbb
push
adc
add
cmp
push
mov
cmp
sub
mov
lea
jecxz
sub
xchg
cmpsb
sub
mov
cmpsb
je
add
inc
les
aam
push
push
lds
std
mov
mov
pop
sbb
and
push
scas
jbe
fstps
int3
shll
push
fldt
mov
loop
test
icebp
mov
testl
dec
or
xchg
lcall
mov
ja
jmp
bound
or
xlat
fadd
popa
cmp
xor
and
je
dec
pop
xor
inc
int
and
pop
fisttpl
push
jl
sub
roll
fstpt
lcall
jl
add
lods
loopne
imull
inc
xor
insl
cwtl
fs
mov
add
sbb
popf
adcb
lods
insl
dec
xchg
imul
arpl
xor
or
popf
fwait
ljmp
mov
mov
or
inc
dec
test
cmp
xor
cltd
push
cmp
aaa
push
lret
mov
pusha
mov
leave
fldcw
mov
int3
nop
push
mov
js
loopne
repz
pop
mov
js
push
inc
pusha
dec
ds
subl
rol
cmpsl
adc
pop
mov
add
xchg
push
lds
xor
pushf
not
insl
shrl
mov
adc
add
adc
jg
rorl
test
push
into
jg
push
imull
dec
pop
pop
xchg
xchg
in
jl
push
lret
add
xor
or
push
pop
ds
dec
scas
lods
lods
mov
or
jmp
cmp
jge
jo
cmpl
sbb
rcll
push
xor
mov
negl
iret
sub
lret
lods
cmpsb
xchg
nop
cli
movsb
add
mov
pop
in
jnp
ror
enter
mov
in
cmp
out
pusha
repnz
lahf
mov
outsl
cmp
stos
pop
cmpsb
sbb
inc
cmpsl
nop
adc
rclb
dec
mov
mov
ja
cmp
outsb
push
aad
cltd
out
fldenv
mov
push
daa
rorl
xchg
inc
sub
fsubrp
mov
pop
cmpsl
and
call
lea
sbb
push
rorb
cmpsb
add
sbb
add
lock
ficomps
or
ret
pop
jle
cmc
in
loop
or
ret
in
fxch
shlb
sub
mov
daa
popf
idivb
fdivp
popf
repz
sahf
pusha
push
mov
rorl
mov
sbb
js
xchg
add
pop
insl
fs
push
call
pop
mov
ret
iret
mov
imul
jno
mov
or
mov
adc
or
aam
mov
pop
dec
fistpl
neg
pop
js
mov
pop
sub
bound
cmp
push
lods
ss
add
rorl
push
je
and
ret
xchg
or
fsubrs
jno
and
and
and
sbb
adc
into
adc
test
sub
sbb
sub
lret
sbb
inc
lods
das
in
jns
or
shlb
xlat
cmp
xor
dec
push
mov
jne
testb
fisttpll
out
rorb
mov
pop
pop
das
fisttpll
push
jbe
repz
notb
js
lea
push
inc
js
sub
ss
js
in
lret
or
mov
jns
ss
dec
lds
xchg
xchg
adc
push
bound
adc
negl
cmpsb
shlb
inc
loope
bound
shlb
adc
mov
add
hlt
aaa
repz
push
xor
scas
ja
mov
pop
mov
dec
sbb
and
inc
and
bound
sub
mov
xor
push
mov
mov
dec
scas
or
push
and
icebp
ret
jno
cmp
mov
mov
mov
clc
std
inc
pop
aam
lock
cld
and
and
shrl
dec
mov
push
xor
lret
rcr
clc
push
inc
repz
adc
mov
aaa
stc
cwtl
jecxz
cmp
ret
lcall
aaa
pop
jo
add
repnz
mov
mov
mov
push
cmp
cmp
mov
mov
cmp
adc
addb
andb
xchg
and
imul
push
fnsave
and
jmp
xor
and
std
iret
pop
scas
int3
push
pop
nop
lods
data16
jns
push
pop
xchg
lock
dec
and
ja
xchg
aad
stc
xor
dec
adc
mov
pop
adc
cwtl
lahf
sbb
pop
adc
or
push
dec
xchg
out
jmp
jo
sbb
sbb
fstl
push
nop
bound
xchg
mov
sub
fimull
scas
xchg
lret
pop
jecxz
and
mov
cmp
fmull
jmp
in
inc
aam
sbb
btr
xchg
push
fwait
sahf
pop
fdivl
pop
enter
cmpsb
sub
lods
adc
divl
je
int
push
mov
xchg
mov
mov
sub
jbe
mov
jns
lret
dec
outsb
repnz
cmp
leave
popa
scas
enter
xorb
ja
clc
mov
daa
cmpsb
jmp
add
jg
mov
ss
aas
bound
cmp
bound
jbe
shlb
fmul
fcoms
xor
incb
dec
addr16
cmpsl
xchg
cmpsb
sub
cmp
inc
scas
aas
pop
call
mov
cmpsl
push
loope
loope
stc
out
es
pop
movsl
push
inc
adc
cmp
andb
xchg
int
mov
out
sbb
enter
jnp
sbb
sbb
pop
pop
sbb
push
cmp
cmp
pop
fdivl
ljmp
ja
lea
mov
mov
cmp
jns
ret
cwtl
cmp
ficomps
add
mov
loope
xor
les
mov
mull
adc
data16
push
orb
sub
cmpsl
mov
ret
add
xchg
fstps
push
mov
adc
jbe
sbb
repz
sti
add
and
leave
adc
and
fiaddl
mov
jl
push
pushf
mov
push
fdivl
adc
mov
cmpsb
adc
scas
push
jbe
shll
aas
imul
jge
aas
and
adc
adc
mov
fwait
movsb
adc
xchg
jmp
push
loope
jae
into
xor
test
cmp
xor
fcoms
inc
loop
shlb
repnz
jl
cmp
cltd
sbb
in
sti
fnstenv
mov
int3
lret
jb
lcall
pop
movsl
lret
daa
stos
jne
iret
repnz
mov
jno
mov
sbb
jne
jne
arpl
jb
sti
js
movsb
dec
out
pop
fdivp
lret
das
cmp
inc
jle
mov
imul
push
inc
xchg
cmp
inc
stos
dec
mov
xchg
imul
jnp
sbb
icebp
or
pop
fidivs
sub
mov
loopew
pop
lods
cs
lea
and
mov
stos
rolb
push
inc
pop
dec
pop
movsl
jo
pop
imul
in
movsl
xchg
pop
xchg
push
mov
loop
push
int3
in
jp
sti
jno
mov
je
xor
cmp
test
pop
xchg
in
add
sub
inc
stos
mov
dec
push
dec
movsl
sub
dec
enter
scas
out
out
and
and
test
xchg
test
pop
fnstsw
cmp
push
imul
adc
ror
pop
dec
loope
mov
in
cmp
lcall
repnz
pop
shrl
outsl
mov
xchg
cmp
inc
inc
jmp
popa
icebp
or
test
fistps
xchg
mov
enter
cmp
imul
dec
push
int3
je
test
stos
std
mov
cmpsl
push
fidivl
fcmovnbe
and
fnstenv
sbb
sub
mov
jae
arpl
out
pop
fmuls
inc
or
or
std
add
add
es
ret
lret
or
push
xchg
mov
dec
cwtl
xchg
in
mov
popa
push
jns
fcoml
xchg
int3
nop
push
lahf
push
mov
mov
adc
mov
mov
fwait
rorl
lret
cmp
cmp
enter
icebp
test
mov
stos
addr16
cmp
or
xlat
jo
mov
sti
mov
js
adc
int
xchg
test
xchg
mov
imul
repnz
les
push
lahf
repnz
mov
or
and
push
adc
add
push
sbb
mov
aas
pop
fucom
xor
push
mov
xor
xor
inc
into
jo
xchg
push
ljmpw
xchg
enter
dec
subb
mov
jg
pushf
xchg
in
lar
xchg
sbb
cli
xor
pop
xchg
mov
ret
mov
inc
add
xor
push
int3
and
add
arpl
pushf
js
push
or
jmp
mov
inc
pop
xor
pop
dec
and
or
aam
mov
jo
adc
js
addr16
ret
dec
add
lcall
insl
xor
orl
cld
fwait
in
add
dec
mov
dec
and
push
inc
xor
mov
adc
dec
mov
lock
ret
adc
fildl
aam
adc
aaa
movaps
mov
mov
shlb
movsl
ret
aaa
xor
into
mov
and
fwait
lret
xchg
jp
inc
sahf
int
add
fcompl
andl
adc
jl
outsb
push
outsl
add
mov
frstor
cmpsl
insl
xchg
out
and
cmp
jle
lret
daa
pusha
pop
xor
scas
pop
sahf
ret
fisubl
pop
shlb
add
arpl
mov
shl
int3
jb
push
push
pop
ficoml
jmp
fmuls
push
out
loope
add
sub
add
jg
mov
sahf
dec
lods
orb
and
popf
fsubr
lret
cmp
sub
call
mov
fcmovne
lret
out
fcomps
jp
mov
data16
jge
jae
mov
push
es
xor
and
dec
mov
push
cwtl
adc
cld
inc
inc
test
push
pop
cmp
jne
mov
out
gs
es
outsb
stos
jbe
lcall
sbb
jo
gs
adc
lahf
inc
sub
aas
decb
jnp
pop
lret
jnp
push
or
mov
jecxz
adc
push
loop
inc
pushw
inc
pushf
mov
adc
adcl
jp
xchg
fucomi
mov
mov
bound
or
lods
test
xchg
lret
repnz
aad
outsl
push
out
or
mov
xchg
or
ffree
or
add
pop
in
in
repz
stc
stos
lret
orl
xchg
pop
fadds
addl
jbe
mov
and
dec
mov
adcb
jle
testl
inc
clc
pusha
or
mov
jns
inc
or
lods
xchg
in
cmp
mov
cmp
cmp
sbb
sbb
fsubs
pop
cmc
push
jmp
ficomps
inc
mov
into
dec
push
test
cmp
cli
mov
xor
cmp
xchg
mov
inc
mov
incl
mov
hlt
mov
or
jg
xor
xchg
push
test
and
jae
pop
add
xor
movsl
scas
push
movsl
pop
sub
pop
jl
jecxz
sti
mov
pushf
add
rorb
ret
and
push
ljmp
test
xor
and
push
loop
and
das
push
sbb
fnstcw
fldt
mov
dec
stc
jg
push
mov
sub
jmp
insl
and
mov
mov
xchg
in
imul
adcb
or
ds
decl
int
lahf
push
shrl
lods
inc
leave
sub
mov
and
or
push
dec
jl
mov
fiadds
xor
out
cltd
cmp
inc
push
fs
add
sub
sbb
sbb
jp
fcomps
mov
xor
xchg
xchg
in
pushf
outsb
mov
mov
cltd
mov
xorb
jne
pop
push
xchg
mov
inc
test
int
adc
cmpsl
inc
cltd
filds
xchg
fisubs
push
or
loopne
fisttpl
mov
xor
lret
popa
xor
sbb
push
pop
int3
push
sbb
push
sub
jns
mov
push
cld
push
xor
add
add
call
das
rcrl
fs
push
mov
repz
mov
xor
inc
outsb
dec
mov
daa
inc
add
hlt
mov
sbb
je
mov
leave
ret
mov
test
pop
push
mov
shr
or
sbb
dec
cmpsl
jmp
in
jae
xor
and
out
cmp
mov
jge
inc
inc
lock
push
std
dec
cmp
jecxz
cmp
xor
fsubl
pop
jmp
out
cmpsl
xor
pop
fs
aas
xor
push
mov
cmp
xor
push
inc
lock
ss
insl
mov
mov
jge
fwait
push
fwait
xorb
adc
inc
lods
outsb
or
repnz
in
xchg
mov
fistl
out
fs
stc
cmp
mov
sbb
adc
aaa
ja
xor
test
xor
movsl
in
daa
test
loope
jl
negb
mov
cmc
xor
mov
cmp
int3
push
test
mov
mov
arpl
mov
loopne
add
xchg
nop
int
out
mov
jmp
xor
mov
enter
mov
cmp
movsb
jno
sub
dec
mov
fildll
ljmp
sub
or
cmc
icebp
jnp
cld
fistps
mov
ss
push
push
notb
movl
aaa
cmp
mov
addb
mov
cltd
je
in
push
add
pushf
dec
inc
dec
xchg
ds
adcb
dec
push
mov
shll
lret
adc
push
dec
or
sub
or
lods
loope
and
push
inc
sbb
push
xchg
push
and
sbb
ds
into
cmp
xor
je
xlat
imul
lret
lcall
shrl
aad
xchg
pop
pop
sbb
std
cmc
mov
fistl
fcoms
push
sbb
aas
mov
adcb
adc
xor
mov
enter
mov
jp
fwait
je
jnp
into
and
jmp
and
pop
aaa
aam
cmp
movsb
cmp
xchg
repz
and
sbb
mov
cmp
imull
or
lock
lcall
lea
or
insl
cmp
jecxz
push
es
jg
jmp
sbb
pop
movsl
fstl
or
pop
in
test
dec
sti
popf
sbb
and
pop
push
js
enter
arpl
aad
andl
push
mov
mov
jb
push
mov
jle
cmp
aaa
jecxz
rcrl
ljmp
and
xor
push
mov
cmp
bound
xor
adc
cmp
or
lea
adc
lock
aam
cmp
imul
add
push
rcrl
ljmp
or
xor
rcrl
push
int
hlt
subb
jae
xchg
pop
gs
pop
out
dec
in
xor
cmp
hlt
pop
add
mov
ret
mov
cld
push
out
jp
lcall
inc
fdivs
add
xchg
mov
mov
mov
lods
hlt
int3
adc
gs
mov
jae
xchg
gs
fiaddl
pusha
push
mov
rolb
bound
add
aad
icebp
in
cmpsb
sbb
pop
mov
cwtl
jp
push
mov
imul
pop
lds
adc
or
clc
push
mov
repnz
xlat
xchg
pop
int
insl
adc
pop
inc
xor
adc
fimull
dec
enter
and
test
mov
les
in
mov
out
movsb
mov
gs
mov
inc
aaa
cwtl
xchg
sub
pop
pop
jle
int3
inc
inc
pop
or
repz
arpl
add
jbe
mov
mull
test
addl
jl
sub
mov
push
idiv
add
or
mov
call
cs
jp
iret
mov
fmul
jae
mov
call
dec
cmp
pop
lret
or
xchg
or
inc
cmc
lret
pusha
mov
daa
mov
push
dec
inc
jns
gs
fidivl
adc
xor
test
mov
or
lods
and
and
repz
push
leave
jne
and
mov
in
fldt
hlt
xchg
ror
jle
loope
cmp
cmpsl
inc
mov
das
fwait
and
jl
icebp
test
sbb
mov
repnz
addr16
idivb
cld
out
in
lods
inc
jp
cmpsl
js
std
insb
fiaddl
test
cmp
outsl
shr
pop
stc
mov
mov
sub
lods
dec
jns
out
outsb
into
mov
fnstcw
xchg
scas
scas
mov
and
push
mov
mov
ss
mov
int
nop
clc
xor
push
pop
inc
aam
mov
sub
mov
dec
cli
cmp
add
and
incl
rclb
mov
shr
and
fs
cmp
popa
enter
cmp
push
xchg
push
sub
std
and
pushf
add
xor
dec
movsl
xsha256
cmpsb
rorl
ja
inc
aaa
inc
push
mov
movsb
xlat
sub
repnz
outsb
fsubrl
adc
adc
or
xlat
inc
inc
push
cli
outsb
in
imulb
test
bound
pop
mov
push
movsb
insb
pop
jb
aad
push
mov
pop
loop
pop
ljmp
xor
test
mov
lret
insb
scas
imul
push
push
inc
js
test
mov
jne
cmpsb
sub
mov
mov
daa
fldcw
stos
adcb
and
xchg
sbb
repz
inc
mov
fwait
and
mov
mov
adc
outsb
cmp
mov
xchg
inc
push
aas
bound
push
int3
in
push
adc
pop
shll
bswap
hlt
loop
adc
mov
inc
loope
adc
addr16
pusha
fs
sub
das
rclb
repnz
inc
pop
enter
jle
fdivr
pop
daa
aad
ret
xchg
pop
sub
mov
xchg
xor
cli
dec
fld
jle
imul
sub
call
jb
sbbl
mov
pop
test
mov
cmpsb
lea
mov
test
dec
pop
dec
xor
icebp
and
inc
ffree
mov
add
daa
lods
pop
mov
xchg
in
push
cld
iret
jae
xlat
leave
xchg
adc
adc
cmc
or
iret
jmp
adc
rolb
cld
lods
xor
mov
mov
or
pop
cwtl
mov
enterw
imul
pusha
add
scas
loope
pop
jo
add
imul
xchg
inc
std
out
jno
sbb
adcl
adc
scas
sbb
or
inc
push
push
push
icebp
push
lea
or
mov
mov
out
mov
sti
jle
pusha
mov
push
xchg
sbb
call
stos
into
ljmp
pusha
ljmp
xchg
dec
popf
repz
xchg
ja
add
ret
loope
popa
jne
ljmp
testl
inc
icebp
xchg
fs
add
scas
mov
pop
mov
hlt
enter
popa
mov
xchg
scas
add
lods
push
lods
adc
push
je
call
repz
into
inc
push
inc
pop
add
insb
inc
inc
pushf
sub
jnp
stc
lods
cli
ror
inc
push
adc
sbb
inc
pop
stos
movsb
cmpb
loopne
push
xchg
mov
ret
mov
xchg
mov
add
into
das
repnz
mov
sbb
jns
add
mov
in
jae
mov
jp
inc
stc
shlb
mov
filds
and
xor
mov
bound
xor
cli
cmp
pushf
xchg
dec
mov
bound
xor
movsl
rorl
pop
aad
lds
xchg
mov
push
jle
je
iret
mov
lods
push
push
lea
int
out
cld
mov
pop
add
or
fdivs
int
cmp
es
inc
jne
jb
loope
cltd
lock
les
ret
fmul
add
in
lock
mov
insb
cmp
int3
and
addl
or
dec
mov
adc
shrl
cli
pushf
mov
jg
pop
adc
je
ljmp
loopne
and
pop
inc
jns
sarb
or
sti
cmpsl
mov
pop
cmp
mov
inc
sub
aad
imul
ljmp
sbb
arpl
pop
lret
aad
pop
mov
aaa
cmp
mov
pop
and
pop
cmpb
push
mov
out
ljmp
pop
pop
jno
sub
fidivs
dec
scas
stc
lcall
sub
jle
add
pop
pop
mov
xor
push
insl
loopne
add
xor
outsb
jb
outsl
mov
push
xor
or
add
dec
in
fs
rcll
lods
xchg
add
mov
cmp
test
lret
pop
push
in
addr16
fcompl
push
mov
in
mov
loope
popa
stc
sub
push
xlat
xchg
sub
test
insb
cmp
pop
pop
xchg
cmp
jecxz
jmp
push
pop
sti
sbb
out
int3
je
stos
daa
add
xor
mov
and
xchg
insb
push
imul
mov
sub
adc
in
ss
mov
cmp
popf
lods
pop
sbb
test
clc
sub
out
add
scas
jl
sub
pop
jge
lock
jo
or
or
jmp
xchg
mov
inc
jecxz
cmp
pop
lahf
sbb
sbb
fisttpll
andl
jae
pop
and
mov
cmp
mov
je
fdivrl
inc
scas
push
out
inc
xor
nop
lcall
sbb
mov
enter
mov
mov
orb
lods
inc
jge
std
aaa
mov
or
in
pop
mov
cmp
mov
mov
mov
sub
lcall
sbb
movsl
lret
add
mov
inc
mov
mov
mov
movsl
jb
fsubrp
mov
sub
jbe
fnstenv
add
rcrl
ret
fs
add
inc
xor
out
aaa
scas
xchg
test
stos
test
adc
iret
imul
repnz
and
shrb
cli
pop
and
xor
push
pop
pop
imulb
shll
mov
cmp
pop
push
sbb
xor
xor
in
lcall
bound
mov
mov
adc
inc
mov
pop
jnp
cmp
adc
xlat
xchg
mov
mov
hlt
negl
jb
push
hlt
jae
enter
subl
data16
dec
push
add
andb
rcll
insl
mov
mov
sbb
cli
mov
xor
aad
and
dec
push
pusha
sub
dec
inc
mov
xchg
aam
pop
addb
out
and
mov
push
and
pop
and
aam
mov
daa
cli
mov
icebp
jo
aad
sbb
sbb
pop
outsl
or
sbb
imul
and
ret
incl
mov
jno
imulb
jge
stc
pusha
inc
add
enter
xchg
push
fnsave
in
mov
xor
jmp
pop
or
sbb
xor
fcoml
inc
add
jp
icebp
int3
lret
sbb
pop
push
les
outsl
stos
pop
mov
aam
sti
in
lods
inc
aam
imul
mov
mov
enter
movsl
push
hlt
and
ds
mov
mov
and
rcll
mov
pop
adc
pop
push
cmpsl
mov
xchg
aas
hlt
xchg
mov
sub
test
pop
push
movsb
sub
sbb
rclb
xchg
cmpsb
pop
lret
lock
rcll
stos
in
fwait
xor
es
scas
push
add
add
cmpsb
fs
jne
pop
mov
cmp
sbb
int3
jecxz
add
add
lods
ret
out
pop
mov
push
xchg
mov
push
stos
mov
and
pop
into
jo
dec
call
das
xor
lahf
aaa
cmp
mov
scas
sub
add
flds
jne
fwait
push
imul
cmp
mov
imul
shlb
jle
lea
xlat
add
addb
push
sub
std
add
cmp
xor
in
outsb
xchg
xchg
fildll
stc
enter
xchg
add
inc
mov
pop
push
or
dec
cmp
add
fcoms
in
popf
addr16
aaa
sbb
mov
sub
jge
pop
push
int3
std
inc
jne
push
daa
sti
pop
push
fisttpll
mov
mov
or
stos
inc
lods
add
insb
sahf
lea
inc
jb
pop
mov
dec
in
inc
or
xchg
xor
es
test
add
lods
aas
pop
rcrb
inc
fstl
test
idivb
inc
call
mov
inc
inc
test
xchg
pop
pop
jl
adc
movhps
fiaddl
fbld
sub
inc
xchg
push
add
mov
aas
jo
sahf
cmpl
pop
sbb
dec
cmp
push
push
lods
std
inc
sub
jno
cmp
rcrl
stos
mov
js
sub
fistps
int
into
or
cmp
es
jmp
push
addl
fwait
add
pop
add
bound
and
jb
jg
imul
xor
adc
rorb
and
pushf
data16
sbb
pop
or
es
cmp
mov
sbb
loope
xlat
dec
les
pop
or
push
leave
sbb
adc
imul
fiaddl
arpl
lods
fcoms
push
mov
out
sub
cmc
in
mov
adc
xor
add
adc
add
push
pop
loop
iret
lret
popa
scas
movsb
pushf
call
push
ror
cmpsl
dec
rcr
insb
add
cs
mov
pop
push
mov
push
outsl
je
xor
hlt
cmp
push
push
or
jns
mov
mov
xchg
sub
outsb
push
mov
rclb
enter
popa
mov
push
fisubrl
mov
pop
or
enter
fiaddl
xor
sahf
shrb
stos
test
mov
and
push
push
add
mov
mov
clc
rcrb
repz
sar
jle
out
mov
in
push
cmc
int
mov
inc
push
adc
bound
in
lds
nop
mov
pop
mov
addr16
sub
insb
ljmp
rcr
cmp
lcall
hlt
jo
xor
sahf
jmp
leave
mov
sti
aaa
push
rclb
loopne
imul
push
fisubrl
adcl
mov
xor
test
sti
ss
rorl
lods
jmp
xor
in
sbb
dec
movsb
xor
shrb
add
cmpsl
mov
das
and
incl
or
jmp
sub
cwtl
xor
cmc
pop
adc
clc
ret
jecxz
jle
aad
mov
stc
inc
dec
daa
mov
test
mov
sbb
das
and
arpl
fcompl
dec
scas
add
out
shrl
into
pushf
js
mov
mov
xchg
mov
pop
add
roll
pusha
push
iret
rclb
fbstp
idivl
hlt
xchg
addr16
mov
out
bound
iret
mov
mov
pushf
inc
and
stos
testl
scas
push
or
cmpsl
jnp
into
fnsave
shll
push
loop
xor
jge
xchg
stos
std
xor
pmuludq
xor
or
pop
in
gs
xchg
push
rol
popa
jae
aad
ljmp
sub
push
aas
punpckhbw
data16
jge
out
jle
mov
push
movsl
aad
sub
ja
es
mov
js
aas
dec
lods
pop
jecxz
std
daa
test
gs
sub
mov
dec
sub
sbb
test
push
mov
orb
test
ja
test
stc
cs
xchg
sbb
leave
rcrb
outsb
adc
push
inc
and
jg
ret
leave
fdivl
and
pop
out
xor
mov
xchg
cmp
orl
push
mov
je
in
push
jl
and
shll
popf
bound
mov
fs
mov
pop
pop
sub
outsb
dec
adc
and
add
lea
sbb
push
dec
pop
mov
aaa
loopne
or
mov
jmp
pop
and
daa
xor
outsb
call
pop
fistps
inc
pop
leave
ret
js
add
or
call
inc
loopne
jp
jns
and
or
shl
mov
push
xchg
xor
and
pop
xlat
stos
addr16
xchg
cmp
push
add
cwtl
xor
jb
adc
xor
fwait
or
dec
xchg
cmp
adc
cwtl
jmp
in
aad
fstl
mov
mov
pop
jb
loope
imull
fcoml
mov
jne
lods
xor
dec
inc
push
in
jmp
inc
inc
pusha
xor
dec
mov
sbb
adcl
loop
mov
inc
mov
mov
dec
push
orl
cmp
mov
dec
pop
and
mov
add
jmp
test
ret
outsl
and
incl
cli
push
cmp
cmp
pop
or
pop
pop
mov
and
xor
test
sub
jns
shll
fdivrl
mov
jb
lds
ljmp
jno
cmpsb
cmpsb
stos
and
ficompl
jl
dec
inc
inc
in
in
mov
adc
mov
mov
dec
jmp
sub
in
lcall
ret
ja
cmpb
fisttpll
pop
push
jmp
popa
repz
clc
rcrb
jb
mov
das
xor
fs
dec
sbbl
mov
xchg
mov
or
loopne
and
ljmp
inc
push
xchg
xchg
dec
push
mov
mov
sbb
mov
out
loope
dec
xchg
test
cs
jecxz
jno
add
sub
add
cs
repnz
mov
call
lea
inc
dec
inc
pop
or
cmpsb
sub
repz
pop
ja
dec
gs
pop
mov
mov
pop
pop
mov
and
ret
xchg
mov
mov
jae
and
repnz
ret
and
stos
adc
and
jae
sub
shrb
mov
mov
cmpsl
or
dec
push
dec
sub
scas
das
icebp
call
inc
push
dec
cmpsl
lods
lret
aaa
ja
mov
jbe
ss
mov
cs
jb
fmul
jae
repnz
and
adc
jmp
or
repz
mov
sub
sbb
pop
adc
cmpsl
mov
add
and
ljmp
lods
xchg
mov
push
outsb
rcrl
inc
and
rclb
mov
orl
sbbb
and
sarl
rorb
xchg
inc
loop
sbb
jbe
int3
and
pusha
jno
mov
jecxz
mov
mov
rolb
je
fstpl
bnd
and
stos
jo
stc
xchg
cmpsl
dec
daa
out
sub
and
insl
aad
pop
cmpsb
inc
imul
out
jne
fdivl
adc
loopne
pusha
xchg
mov
test
sbb
mov
mov
ja
ficomps
adc
outsb
loopne
sarl
clc
mov
imul
push
mov
iret
mov
inc
loope
adc
in
inc
push
out
sbb
fsubr
lods
stc
or
imul
lcall
mov
sub
fadds
lcall
stos
jo
loop
gs
faddp
outsb
mov
iret
dec
inc
mov
mov
rcrb
fwait
lods
push
imul
xor
outsb
adc
test
fwait
and
mov
and
cmp
or
inc
pushf
cwtl
mov
xchg
lcall
stc
dec
fst
iret
pop
pop
pop
xchg
cli
test
xlat
cmp
aam
mov
and
cmc
inc
int3
in
push
rorb
mov
mov
stos
movsl
es
adc
pop
popa
test
cmpsl
mov
push
mov
mov
int
cltd
call
xchg
xchg
jne
pusha
cwtl
push
shll
clc
lahf
inc
sub
xchg
adc
icebp
imul
dec
movsb
mov
adc
stos
enter
cmpsl
std
aam
psubusb
adcl
sbb
mov
inc
pushf
sbb
dec
fsubl
pop
clc
call
test
add
adc
cwtl
inc
lods
jle
mov
pop
cltd
rcrb
mov
out
adc
adc
pop
or
cmp
js
jae
pop
adc
or
push
ror
xor
dec
lods
push
xlat
and
jbe
inc
jge
inc
ret
pusha
xor
in
jp
push
cltd
idivl
fsubrs
mov
mov
in
cmp
dec
mov
fwait
cmp
xchg
shr
jae
add
and
inc
stos
mov
jmp
outsl
jecxz
mov
mov
into
and
imul
pop
jmp
imul
mov
jp
mov
movsb
adc
das
data16
mov
lea
sbb
fimuls
mov
adc
push
das
call
jg
sub
loop
lods
flds
mov
out
fcomps
push
gs
lret
mov
loop
pop
jmp
mov
jbe
cmp
dec
cltd
jmp
add
push
and
call
push
sar
mov
fbstp
adc
out
or
or
push
dec
or
data16
mov
fistpl
sub
jns
out
popa
adc
loope
fisttpl
or
out
jl
push
or
pop
int3
jmp
pusha
or
lds
out
lods
in
scas
jmp
int
gs
add
cmpsb
mov
std
xchg
icebp
adc
cltd
cmp
jl
clc
in
cwtl
cmp
fistpll
dec
xor
adc
call
loopne
jno
mov
gs
std
int3
sahf
xor
scas
mov
nop
inc
mov
adc
pop
test
fwait
rolb
mov
xor
dec
or
pop
stos
ficoml
dec
outsb
mov
cmp
lret
xchg
into
cmc
push
and
aam
fwait
mov
dec
mov
testb
or
aam
ds
mov
push
sub
sub
push
lods
push
gs
fcomps
sbb
je
ret
or
adc
cld
stos
inc
mov
stos
das
sahf
push
aaa
pop
mov
insl
pop
cmp
jle
cli
lret
mov
sbb
jmp
adc
xchg
sub
js
jle
xchg
push
jl
test
test
aaa
jno
jns
call
inc
push
mov
pop
sti
jecxz
js
cmpsb
lods
cmp
push
and
test
jge
dec
fs
adc
push
fisubs
jg
leave
dec
jl
and
jg
or
push
into
pop
out
test
sti
or
arpl
mov
nop
jl
dec
xchg
lock
cmp
adc
push
call
jo
push
cmp
push
sahf
push
xchg
add
sbb
sbb
mov
cmpb
into
in
pop
repnz
jle,pt
jg
push
and
mov
xor
inc
movsb
cmpsl
test
jg
int
test
xor
sbb
mov
mov
sbb
cmp
iret
push
inc
xchg
jb
outsb
les
cmp
push
adc
in
dec
shl
mov
pop
adc
add
cld
xchg
lods
jns
or
mov
scas
mov
push
daa
fdivl
rcr
xchg
pop
push
imul
or
mov
and
loop
sbb
int3
jmp
jg
or
cmovnp
in
cli
popf
adc
das
dec
dec
jae
push
in
rcrl
aaa
and
outsb
testb
mov
lcall
mov
add
dec
sub
push
cmp
pop
mov
inc
int
dec
dec
mov
dec
and
imul
fidivs
into
clc
stc
mov
push
decl
inc
cmpsl
mov
adc
dec
sub
adc
sub
gs
mov
fmulp
mov
jl
mov
ficoml
mov
pop
sbb
rolb
xchg
adc
pushf
aam
pop
andl
dec
rcrl
jne
js
mov
insb
sbbb
js
dec
test
inc
addr16
std
push
je
dec
xchg
dec
push
or
push
dec
ret
cmc
hlt
dec
cmp
sbb
mov
out
add
fsubrl
hlt
jb
jle
imul
stos
test
fisttps
pop
xchg
mov
enter
sub
cmp
sbb
inc
pop
jnp
js
mov
addl
push
mov
jge
inc
xchg
adc
pop
inc
push
mov
jo
mov
push
jg
fsubs
dec
push
lcall
aam
mov
call
lods
sub
test
mov
sarb
inc
lods
xor
int
mov
test
jl
mov
cs
arpl
mov
negb
outsl
stos
xchg
outsl
cmp
test
test
xchg
fnsave
test
or
outsl
mov
xchg
lods
adc
dec
jns
insb
in
or
out
pop
es
mov
xchg
xchg
pop
les
mov
outsb
test
push
push
add
or
inc
fstpl
lods
cmc
jae
jecxz
aam
jo
and
mov
test
mov
lret
icebp
xchg
sbb
xor
push
mov
and
xchg
dec
cld
icebp
inc
cmp
pop
adcl
ja
fidivrl
cld
lret
inc
sti
or
ficoml
or
dec
mov
sbb
xchg
xchg
jb
mov
xor
xor
mov
loope
insl
mov
pop
push
mov
in
push
fcmovne
cmc
sbb
cs
aas
and
cmp
inc
es
pop
inc
ret
pop
jae
push
fistps
mov
xchg
pop
jge
stos
inc
xchg
ss
jg
adc
addr16
push
mov
jne
mov
scas
inc
scas
cmp
rorl
popf
dec
sub
jge
cmp
pop
call
mov
xchg
stos
xchg
enter
and
imul
xchg
arpl
xor
push
xchg
and
test
insl
xor
or
cltd
pop
pop
divb
dec
xor
sub
imul
xor
stc
ljmp
in
cmp
fcmovnu
fwait
sti
adc
pop
xchg
addb
jl
lods
mov
rorl
xchg
mov
inc
repz
jae
add
iret
push
dec
pop
mov
std
mov
sub
xchg
in
cmp
pop
sub
cmp
sub
sarl
cmpsb
add
ja
sbb
adc
add
cmp
jnp
fldt
call
and
mov
shrl
hlt
lock
out
repnz
call
sar
dec
fmull
and
popf
in
hlt
push
mov
ret
sbb
or
lahf
jecxz
push
mov
xchg
dec
scas
push
lods
lods
insb
xor
dec
jbe
sub
loope
sbb
sub
sub
lods
fisubs
push
out
fbld
xchg
jmp
mov
fadds
repnz
clc
mov
mov
test
icebp
sbb
nop
pop
or
push
fcmovne
andl
pusha
outsb
es
pop
fucom
adc
popa
stos
lret
adc
out
dec
and
fnsave
jp
cmp
mov
mov
js
mov
aaa
xchg
fwait
movsl
jmp
cmp
push
inc
cltd
loope
cmc
int
dec
pop
add
jns
mov
call
int3
and
fnstenv
add
xor
jbe
push
or
xchg
ja
pop
loop
mov
xchg
sub
sub
jb
mov
imul
lds
ljmp
out
mov
add
cmp
pusha
xor
ss
lret
or
dec
add
xchg
cmp
xlat
and
push
dec
pop
mov
jle
jmp
xchg
or
push
scas
push
sarb
cmpsl
arpl
cli
pop
xchg
mov
inc
push
in
dec
out
xor
jae
out
cld
and
sbb
jl
push
insl
rorl
sub
pop
cltd
push
mov
daa
frstpm(287
push
cltd
jnp
mov
movsb
out
pop
insb
test
pop
push
scas
mov
jb
iret
pop
and
dec
sbb
and
sub
repz
enter
pop
inc
dec
xor
outsb
jmp
ror
jnp
in
imul
fsubrl
cwtl
popl
movsb
xchg
xchg
mov
push
leave
fs
inc
mov
out
sar
repnz
jb
movsl
jb
xor
js
mov
mov
nop
mov
cmpsl
mov
fcmovnbe
int3
cmp
inc
insl
loope
mov
in
mov
inc
pusha
lret
mov
mulb
cs
imul
in
ret
mov
inc
outsb
fnstcw
add
test
fcoml
das
adc
jne
mov
add
pop
inc
es
ret
jns
fidivl
sub
adc
cmc
xchg
sub
mov
and
pop
in
lds
sahf
out
and
jp
xchg
and
stos
jne
test
les
xchg
dec
xchg
lret
or
mov
je
pop
xor
inc
dec
dec
and
loopne
mov
mov
xchg
mov
cld
xchg
nop
lods
inc
out
push
fisttpl
addr16
fwait
xor
mov
mov
xor
sbb
imul
jmp
pusha
push
push
xchg
mov
or
dec
xor
dec
jnp
orb
dec
lea
inc
aad
mov
nop
push
mov
mov
xchg
add
enter
dec
push
cmpsb
loope
sub
add
out
or
and
xchg
adc
pop
pop
repz
xchg
xchg
mov
sbb
adc
add
fisubrl
push
fmull
pop
aas
rorl
addr16
std
into
cmp
sti
out
pop
mov
sub
adc
sub
xor
add
into
stc
repz
repz
mov
cs
into
aaa
addr16
sbb
mov
loope
mov
dec
and
pushf
inc
pop
fimull
mov
dec
aad
jmp
pushf
loop
cltd
xchg
mov
sti
mov
push
jp
stc
pushf
mov
push
sti
jp
into
je
xchg
mov
shr
int3
lahf
lret
inc
add
je
leave
xchg
xlat
adc
xchg
mov
add
orb
lahf
jb
xor
ja
jle
out
mov
fmuls
je
add
jbe
pop
das
xchg
sub
add
mov
push
push
fcmovnb
jns
sbb
xchg
add
jbe
leave
ds
in
fwait
push
adc
aad
lock
jmp
jl
xor
lret
add
add
lcall
mulb
sub
in
mov
lret
std
mov
push
repz
inc
push
and
shrd
xchg
hlt
out
gs
jns
inc
add
cmp
fisttpll
ret
and
dec
das
inc
push
cmpsl
mov
jb
aad
jns
stos
cmp
mov
aad
cltd
mov
fildll
mov
or
mov
loopne
int3
lock
pop
or
hlt
mov
sarl
iret
push
pop
ljmp
dec
push
ds
outsl
xchg
or
lret
jae
cld
mov
sbb
xor
inc
mov
xor
insb
out
aaa
js
or
repz
mov
movsl
and
push
xchg
sbb
jne
mov
add
xchg
ja
ds
in
mov
sbb
pop
inc
jge
mov
and
loop
add
dec
xchg
and
shlb
push
push
dec
push
pop
ljmpw
jmp
addr16
dec
pusha
jbe
xchg
xor
push
cmp
data16
sbb
inc
jg
popa
mov
fs
mov
dec
not
mov
ret
jmp
xchg
jl
inc
sub
pop
lods
cmc
mov
mov
dec
std
imul
and
sbb
std
jl
out
cs
fcompl
add
dec
add
inc
fidivl
addr16
pop
sti
jp
movl
daa
insb
pushf
jns
ror
pop
iret
mov
and
scas
stc
jmp
daa
test
mov
xchg
jo
dec
js
jno
cmp
add
xchg
mov
ficoms
pop
insb
push
mov
cltd
lods
sub
add
lcall
ss
push
loope
cmp
jb
scas
imul
mov
imul
adc
xor
cld
sbb
cwtl
dec
and
cmpsb
test
les
rsqrtps
pushw
dec
ds
lods
push
mov
mov
sub
ds
into
adc
jecxz,pt
mov
ror
add
xchg
jnp
push
into
xlat
scas
dec
or
mov
enter
test
ss
xor
outsl
dec
stos
xchg
push
push
bound
push
xchg
fdivl
inc
inc
call
sbb
pop
cs
inc
pop
xchg
or
mov
or
sbb
adc
pop
jge
into
cmp
daa
hlt
mov
int3
ret
int3
mov
rcl
push
push
xchg
gs
jecxz
inc
cmc
jmp
dec
js
inc
subl
inc
cmc
xchg
mov
fildll
jmp
stos
sub
out
pop
loop
inc
mov
rep
and
pop
ret
imul
mov
add
adc
std
int
call
inc
inc
xchg
mov
pusha
aas
loope
or
inc
inc
mov
js
lock
stos
leave
in
out
and
outsl
mov
adc
mov
sbb
insl
inc
roll
psubd
jbe
je
push
scas
pop
out
pop
scas
add
mov
jle
cwtl
pop
sbb
fcompl
xlat
and
aaa
jmp
addr16
push
dec
xor
aaa
lret
sub
int
cld
mov
imul
popa
mov
pop
mov
cmc
dec
xor
xchg
adc
repnz
sub
sbb
cmp
mov
popa
inc
or
xor
repnz
adc
loopne
lret
hlt
std
mov
mov
arpl
jbe
repnz
rorb
subb
xor
mov
mov
clc
sti
add
push
mov
or
data16
jnp
inc
sub
add
popf
mov
out
and
insb
xchg
lret
ss
add
mov
ds
loopne
mov
sbb
xchg
mov
shll
xchg
pushf
das
pop
clc
mov
inc
fsubrl
inc
mov
cs
lret
repnz
shll
sub
inc
push
stos
lahf
cmc
andl
js
xlat
pop
std
arpl
arpl
xchg
jae
outsb
sbb
in
sbb
and
push
and
adc
movsl
test
mov
adc
imul
lahf
mov
inc
push
fcomi
jb
mov
pop
ret
adc
icebp
xchg
dec
xchg
pop
icebp
faddl
insl
int
pop
fdivrs
adc
mov
push
mov
xchg
aaa
fstp
cld
popa
jno
lds
fsubr
gs
xchg
fidivl
fisubrl
int
cmp
sub
scas
fidivl
cmp
cli
jge
push
loop
xorb
jecxz
cmp
adc
inc
lret
cmp
into
push
data16
jmp
ret
xchg
add
push
xlat
loopne
or
and
pushf
mov
jno
stos
dec
fstpl
idivl
in
loope
mov
js
jg
sar
sahf
dec
xchg
add
dec
es
adc
sub
iret
aam
jo
cmp
and
lea
add
dec
sbb
sub
int3
aam
data16
and
push
xchg
mov
roll
loopne
or
xor
icebp
les
mov
mov
movsl
and
mov
cwtl
pop
pop
adc
subb
stc
loopne
push
das
jae
idiv
imul
push
cmp
push
cmc
mov
addr16
fdivrl
inc
or
inc
outsb
iret
xchg
mov
lds
test
sub
adc
aas
xchg
mov
clc
andb
mov
sbb
and
cmp
out
or
test
fs
pop
lods
or
cmp
lods
das
xor
out
enter
mov
xchg
ljmp
jno
mov
push
shrl
je
andl
mov
jl
sub
or
mov
mov
jmp
rcll
mov
mov
mov
push
hlt
sub
cltd
push
out
test
pop
stc
addr16
js
or
add
or
pushf
xor
xor
jl
xchg
stos
ss
pop
movsl
sti
rcrl
orl
icebp
mov
push
int
jecxz
test
xlat
xchg
jp
jle
adc
loope
or
cmc
loop
push
mov
leave
orl
data16
daa
ljmp
or
cld
adc
fildl
ja
sbb
fucomi
gs
push
fdivrs
xor
cmp
inc
and
outsl
outsl
and
lret
ja
sbb
daa
adc
aad
or
nop
dec
loopne
push
pop
mov
loopne
cmpsb
xchg
dec
sub
aaa
sti
xchg
fs
jp
or
jno
add
push
test
xchg
fimull
enter
and
aad
xchg
sti
clc
in
fists
leave
cs
cmp
jg
cmp
data16
cltd
cwtl
pop
xchg
dec
negl
in
jp
fsubs
out
adc
lahf
nop
out
cmc
in
pop
sub
mov
inc
scas
cmp
push
adc
je
or
icebp
pop
or
lret
out
pusha
aas
add
inc
and
fs
jne
adc
or
add
fs
into
push
jno
push
jae
stos
xor
push
je
or
dec
ret
mov
sbb
cmp
or
fs
and
or
jae
jge
lods
sub
add
sbb
mov
incl
xor
mov
sub
cmp
dec
fs
cmpsl
repz
shr
repnz
lret
dec
leave
mov
inc
inc
in
fidivl
movsb
xchg
and
mov
lods
sbb
stos
dec
push
jge
pop
loope
sbb
cmpsb
inc
leave
aad
dec
aad
cmc
fnsave
adc
cltd
mov
xchg
adc
test
push
data16
and
int3
inc
in
sub
push
arpl
cmp
xchg
imul
xchg
rorb
xchg
and
addr16
leave
pusha
gs
stos
dec
in
mov
in
cld
mov
inc
into
mov
les
rcll
mov
rolb
add
sbb
push
lock
xchg
scas
dec
and
push
out
pop
fstps
jecxz
jno
or
loop
test
inc
jg
mov
push
xchg
inc
ja
jmp
lahf
push
jmp
xor
adc
lds
mov
push
fimuls
inc
fwait
pop
cltd
add
pop
rcr
or
add
stos
dec
inc
leave
or
mov
push
push
jecxz
pop
xor
jns
add
bnd
outsb
cmp
cmc
rorl
xchg
insl
cld
pop
jp
mull
jmp
adc
xchg
roll
mov
mov
je
imul
add
lcall
pop
dec
add
mov
mov
xor
dec
pop
cwtl
jno
jle
jns
mov
cli
mov
test
cmc
rep
js
out
sahf
mov
jne
aas
andl
mov
out
and
push
xor
lcall
loopne
sub
stos
xchg
into
jg
mov
shlb
xchg
sub
sub
add
xor
subl
jne
cs
outsb
iret
xor
js
xorl
outsb
dec
xchg
mov
fisttps
or
scas
xchg
loop
js
mov
ret
or
repnz
sbb
push
pop
mov
mov
push
arpl
pop
sahf
pop
inc
lret
pop
mov
pop
call
lea
mov
cltd
fs
jge
sub
jecxz
daa
or
insb
sbb
adc
outsb
stos
sar
jg
or
repz
jp
push
mov
lds
cmc
cmpsl
and
negl
push
addr16
sti
add
sbbl
or
push
push
aas
lret
sbbb
arpl
insb
jnp
push
dec
frstor
add
add
sti
rcll
push
std
je
pop
pop
and
shr
and
pushf
xchg
mov
imul
lds
cmp
js
or
push
and
push
sbb
ficoml
jnp
pop
pop
ja
fisubrl
scas
ffree
ret
repz
lods
push
movsl
jle
push
mov
sbb
adc
lea
stc
mov
mov
bound
mov
adc
sbb
push
orl
out
ja
stos
data16
sbb
pop
mov
push
in
push
jmp
mov
sti
js
dec
sbb
pushl
jbe
rclb
aam
into
pop
test
jge
cli
roll
pop
sbb
pop
scas
pop
lock
jl
cwtl
push
or
scas
dec
sbb
cld
loopne
inc
shlb
inc
aad
call
mov
mov
xor
cmpsb
xlat
aas
dec
xchg
pop
stc
mov
iret
clc
cli
test
lahf
cmpsb
lret
cmp
push
or
pop
call
xchg
adc
cmpsl
mov
jle
dec
xchg
test
out
outsb
bound
jecxz
sub
add
and
ljmp
dec
jb
add
ret
cmp
popf
add
cwtl
push
fsubp
push
jae
mov
andb
aaa
mov
movsl
jle
push
cmp
add
and
xchg
lea
repnz
jge
inc
xor
jmp
dec
ja
sbb
inc
cmc
repnz
dec
jmp
mov
mov
sub
jns
xchg
and
stos
mov
int
adc
daa
mov
pop
push
jno
xchg
inc
sub
jg
pop
repnz
pop
pop
mov
nop
mov
push
decb
call
jp
loope
hlt
adc
idivl
daa
pop
mov
lret
orb
lods
sub
cmp
fidivl
pusha
mov
adc
fisubrs
das
popf
add
arpl
add
addb
jg
addl
in
xchg
bound
xor
ljmp
mov
inc
xchg
dec
sub
std
js
sub
loope
cmp
xchg
push
pusha
pop
mov
cmp
sub
jl
pop
dec
mov
push
push
sbb
imul
movsl
jae
rcr
or
sub
sub
aas
iret
stc
pop
fwait
loopne
test
dec
loope
int
push
std
not
mov
insb
cmpsb
insb
in
je
push
in
xor
ret
push
dec
clc
lret
adc
lret
and
xchg
shlb
scas
dec
mov
jle
inc
insb
sbb
push
mov
push
xor
inc
jmp
cmp
jecxz
or
out
rolb
cmp
sub
xchg
fs
into
dec
push
sbb
cmpl
ds
push
xchg
jno
cmpsl
in
and
xchg
jns
pushf
xor
xchg
sarl
push
addl
mov
popf
sbb
xchg
pop
sub
aam
pop
gs
aaa
fdivrl
into
jnp
jmp
add
cmp
push
add
enter
fcompl
add
ja
mov
mov
mov
adc
nop
out
pop
or
add
fldcw
pop
inc
leave
fcoms
out
mov
cmp
addr16
movsl
mov
add
cmpsl
and
adc
data16
outsb
lods
sub
and
xor
adc
push
fwait
cmp
xlat
xor
fcmovnu
andl
leave
pop
mov
loopne
imulb
pop
mov
jg
push
mov
popl
mov
or
sahf
cli
pop
lahf
les
push
sahf
popf
xchg
fsub
add
ret
push
aaa
cmp
or
fwait
insb
adc
inc
mov
dec
xor
aaa
mov
mov
js
mov
jbe
adc
push
inc
scas
jbe
sub
dec
into
fstpl
std
dec
popw
pop
push
test
xchg
dec
dec
push
pop
xchg
xor
cmp
or
lock
xchg
inc
sti
out
push
ret
lock
sub
inc
mov
cmp
fyl2x
add
push
push
mulb
aas
xlat
clc
rcrb
sub
fisubs
popf
insb
xchg
lcall
cmpsb
call
adc
fdivrs
lods
mov
mov
daa
adc
stos
mov
or
xor
fwait
addr16
xor
call
dec
cmp
stos
call
jp
dec
mov
popa
out
xchg
ds
lock
aad
stos
cmp
pop
sbbb
push
int3
mov
jbe
ds
pop
pop
jge
js
pushl
add
adc
xchg
mov
pop
cli
mov
add
mov
mov
mov
inc
mov
mov
lods
add
push
dec
fldt
rol
mov
stos
repnz
in
mov
nop
push
mov
mov
jae
popa
lea
sbb
and
adc
jb
stos
sti
push
adc
xchg
fnstenv
mov
popa
push
push
in
test
insl
pop
lret
fwait
movsb
add
popf
jo
or
jno
push
or
iret
dec
int3
test
push
movsb
mov
orb
fisttpl
and
inc
sub
cmp
inc
lret
adc
test
mov
cmp
call
sbb
mov
and
lds
pop
jg
push
es
mov
jns
bound
and
mov
enter
mov
jb
mov
add
sbb
sub
inc
jo
insl
inc
jne
cmc
cmp
fstpl
pushf
and
add
into
addb
divl
mov
scas
scas
into
jp
loope
bound
mov
imul
jb
push
into
add
cmpsb
jecxz
pop
jle
xchg
xor
pop
xchg
and
adc
sub
movsb
push
and
add
inc
or
and
xor
dec
lret
rcll
data16
mov
fldl
test
sub
sbb
xchg
cmp
subl
jmp
or
lahf
sbb
cld
xchg
inc
fbstp
addr16
dec
dec
mov
ja
in
addr16
mov
fisubs
ret
add
mov
mov
out
or
jnp
dec
cmp
test
in
aas
mov
cmc
jno
lock
mov
iret
hlt
dec
lods
cmp
fcoml
add
cli
inc
xchg
sub
mov
bound
push
adc
arpl
dec
and
add
mov
mov
and
movsl
pop
dec
sbb
jne
iret
mov
cmc
call
decl
pop
ljmp
adc
mov
xchg
xchg
mov
mov
xor
cmp
or
movsb
lods
pushf
test
push
aad
fstl
in
lea
clc
daa
adc
fiadds
mov
loope
mov
out
mov
cmpsl
shlb
outsb
shlb
mov
scas
pushl
sub
ljmp
push
sub
iret
mov
pop
fwait
test
pop
dec
cli
and
mov
loop
das
mov
mov
pop
mov
dec
add
lea
insb
les
je
push
inc
fcoml
xchg
xor
jmp
in
inc
test
push
pop
pop
clc
xor
hlt
cmp
push
movsl
or
lret
add
test
mov
push
data16
lods
and
mov
pop
sub
flds
mov
lret
mov
lret
in
bound
loop
mov
mov
cld
dec
enter
stos
inc
push
gs
les
or
and
jne
sahf
jmp
pop
out
scas
outsl
adc
jl
stc
rclb
xchg
xchg
out
push
pop
inc
push
mov
lds
adc
stos
orb
movsl
jl
jns
or
push
pop
cmp
js
stc
repnz
pop
fnstcw
jnp
pop
imul
ljmp
adc
sub
mov
popf
xchg
xor
adc
and
sbb
xor
jnp
out
fsubs
push
cmc
pop
out
or
fbstp
push
or
mov
lret
mov
in
mov
xchg
xchg
repnz
sub
test
sbb
mov
imul
mov
dec
inc
hlt
lods
xchg
add
add
sti
popf
jle
and
and
mov
sbb
push
int
and
xor
popf
add
and
fstl
jl
outsb
fs
push
xchg
sbb
sarb
sarb
inc
pop
inc
lds
push
mov
pop
mov
jge
or
inc
insl
icebp
push
lret
inc
mov
ret
lock
cmp
popa
popl
out
loopne
sub
jle
filds
mov
push
xchg
sub
repnz
cmpsb
mov
cli
cmp
adc
dec
fnsave
push
mov
sarb
sahf
lret
into
jp
icebp
inc
addr16
aam
pop
ja
and
push
dec
addr16
scas
xor
fisttpll
sub
movsb
repz
out
mov
mov
popf
push
icebp
pop
mov
pop
jmp
arpl
cmpsl
fiadds
call
sbb
das
push
push
pop
das
sbb
repnz
jbe
sbb
jp
mov
and
insl
sbb
pop
sub
fcoml
in
jne
ss
push
imul
fildl
outsb
xchg
push
arpl
dec
sbb
enter
repnz
pop
fnstsw
out
or
leave
mov
jl
add
in
xchg
push
mov
sbbl
roll
test
cs
sub
out
mov
lods
jns
movsb
or
fists
push
inc
adc
test
xor
ficoms
aam
sti
dec
int
fidivs
pushf
xchg
xchg
mov
mov
push
adc
push
jmp
mov
mov
cmp
lea
add
das
jle
jl
lcall
imul
loope
rorb
les
inc
jp
loop
adc
mov
jge
movsb
inc
dec
xchg
inc
pushl
push
add
mov
sbb
fmul
pop
pusha
or
jnp
adc
dec
sti
add
mov
or
jg
pop
push
sub
xchg
jg
jmp
cmp
xchg
xchg
or
hlt
add
adc
jge
mov
cltd
nop
aas
in
roll
lret
and
or
jle
sub
jo
subb
sub
imul
inc
cli
or
xchg
ret
cmc
js
test
iret
jno
idivl
and
pushf
faddl
push
inc
add
aaa
and
jmp
ficoms
out
cmp
mov
adc
ret
inc
mov
mov
dec
arpl
inc
lcall
stos
stos
dec
or
add
cmp
mov
in
inc
push
repz
xor
pushf
jb
iret
xor
jne
xchg
push
xchg
aas
mov
psrld
insb
push
out
xchg
jmp
xchg
sbb
or
mov
jl
mov
and
mov
mov
ja
int
out
enter
sbb
addl
stos
rclb
addb
jge
cmp
mov
mov
mov
scas
adc
fs
add
scas
add
lods
imul
movsl
out
push
sbb
lcall
xchg
test
sub
loopne
xchg
jae
cmp
dec
lods
xchg
lret
add
fisttpl
mov
jae
cmpb
insb
nop
or
dec
and
push
and
mov
add
aas
cmpsb
cld
inc
ret
mov
stos
dec
jnp
sbb
or
sub
icebp
sbb
sti
xlat
push
cmp
jne
sbb
and
test
rcrl
dec
jno
xor
pop
or
outsl
cmp
sbb
mov
sbb
lcall
mov
out
adc
pop
mov
jg
movsb
mov
pusha
xchg
imul
mov
pop
sub
sbb
mov
ss
push
movsb
out
dec
ja
loopne
sbb
push
ret
adc
inc
jp
and
and
xchg
add
imul
in
mov
bound
dec
cmp
inc
mov
in
jecxz
xorl
or
mov
lods
ja
cmp
js,pt
movb
in
adc
xchg
sarl
dec
inc
dec
add
loopne
outsl
sti
call
jno
or
ljmp
push
xchg
aas
lret
in
enter
pop
xor
out
and
sub
cltd
inc
movsl
adc
subl
in
jp
dec
pop
movsl
mov
xor
jl
imul
mov
icebp
lods
jbe
dec
dec
push
addr16
std
xor
aas
mov
dec
insl
cltd
adc
fisttps
mov
mov
add
mov
jno
and
je
pop
lret
or
and
mov
sub
mov
mov
push
inc
pop
movsb
lcall
fiadds
jg
push
stc
pop
ljmp
leave
sarl
jg
xor
andl
add
inc
sub
mov
mov
outsb
cmp
inc
jp
lcall
lret
stos
push
scas
or
or
add
cwtl
dec
and
popf
cmp
cmp
inc
movsl
repnz
out
stos
xchg
or
gs
sti
orl
rcrb
arpl
jmp
loope
mov
lret
fs
sub
jno
push
fcoms
xchg
jne
loope
push
adc
mov
add
xchg
out
outsb
adc
ds
ss
mov
jg
aam
fldl
mov
sbb
push
icebp
sbb
mov
je
dec
sbb
mov
test
fs
or
xchg
push
fstpl
lret
mov
into
cmp
sub
dec
popa
loopne
dec
mov
scas
cmpsl
ss
or
xchg
jmp
dec
ss
jmp
sub
mov
lock
and
adc
sbb
pop
pop
jne
xchg
sbb
into
lret
dec
cmpsl
mov
or
xchg
push
push
push
push
mov
mov
pop
jne
mov
out
das
lds
or
jb
sbb
mov
stos
out
pop
insl
fs
ja
gs
dec
xor
repnz
into
frstor
test
pop
rcrl
cmpsb
mov
es
orb
popa
fcoml
idiv
and
xor
iret
jnp
rep
xchg
sahf
rcrb
xlat
adc
ret
imul
push
outsw
mov
cld
xchg
insb
cmp
dec
pushf
xor
lods
mov
aas
frstor
mov
or
mov
push
cmpl
xchg
and
ficomps
hlt
fisubrl
add
jns
in
mulb
adc
lods
jo
dec
adc
xor
lods
enter
out
sub
mov
mov
push
test
out
jb
in
inc
mov
mov
sarl
stos
push
imul
mov
aad
xchg
jne
imul
shr
cs
pop
repnz
cmp
aam
adc
inc
test
aad
add
push
in
jge
in
add
and
cmp
stos
adc
cmp
push
cmc
push
mov
cs
push
xchg
dec
inc
pop
and
cmpsb
les
cmp
in
sbb
test
jmp
shll
adc
mov
cmp
dec
clc
ja
adc
cld
fidivrs
out
je
jmp
pop
and
arpl
xchg
xchg
xor
add
out
jle
nop
scas
pop
xchg
dec
mov
iret
sub
ljmp
sub
push
incl
lcall
push
and
lahf
outsl
sbb
in
das
xchg
fdivl
mov
mov
mov
je
add
aam
xchg
adc
add
mov
test
into
lods
mov
inc
popf
mov
in
xchg
add
outsl
push
gs
push
lods
aad
jge
fcompl
push
lcall
inc
dec
sarb
pushf
push
fisttpl
in
jb
and
cmpsb
jp
out
loopne
add
sbb
sbb
xchg
stos
and
dec
loope
rclb
decb
jmp
jge
sbb
sub
out
int3
pop
xchg
sub
and
push
fsts
push
or
mov
rol
xor
jp
pop
std
adc
hlt
xchg
stc
loop
xchg
mov
jecxz
aaa
push
push
mov
cmp
ja
aaa
push
and
or
cmp
sti
sti
das
out
outsb
xor
in
cld
es
std
cltd
lods
sub
inc
cld
loope
mov
mov
in
add
xchg
fists
adc
inc
adc
insl
xchg
je
jb
les
sub
sbb
out
mov
mov
iret
push
or
out
std
xchg
les
test
xchg
cmp
sbb
lods
lods
pop
std
movsb
lea
js
sti
dec
out
push
mov
push
xor
cli
inc
int3
shlb
jge,pn
adc
push
lret
xchg
lea
test
call
lret
push
in
cmp
pop
test
mov
into
jb
into
cmc
call
jmp
imul
shll
test
mov
add
cwtl
adc
into
jnp
or
cmp
clc
pop
int
push
mov
mov
jmp
pop
and
test
loopne
add
push
and
stos
pop
mov
pop
sub
cmpl
out
xchg
popf
jg
sbb
jecxz
and
out
cld
out
sbb
pop
ret
adc
test
scas
mov
adc
arpl
sarb
pop
in
sub
ficompl
lret
pop
daa
pop
or
push
icebp
out
lods
retw
daa
sti
jno
xchg
xor
insl
subl
insb
outsl
mov
into
or
sub
jg
adc
push
nop
aaa
sub
jl
jge
jmp
sub
gs
add
adc
and
jmp
nop
push
loope
push
dec
ja
adc
faddl
fidivl
es
mov
push
sub
out
sahf
pop
jp
xchg
sub
aad
aad
aaa
sbb
outsl
push
or
dec
or
or
jns
jno
jmp
test
aas
daa
out
sub
adc
repz
xchg
fisubrl
rcrb
cltd
mov
sub
lcall
pop
sub
popf
and
jb
mov
arpl
inc
iret
xchg
sub
pop
cwtl
adc
inc
lcall
loopne
or
sti
les
mov
dec
pop
mov
push
popa
sbb
mov
sbb
adc
insl
jae
cld
ret
push
stos
mov
xchg
pop
mov
xchg
lods
push
in
push
sbb
sub
stos
push
sub
mov
loope
ja
or
jo
xor
popf
pushf
cmp
scas
mov
test
leave
shll
pop
popa
pop
jg
leave
mov
lret
lahf
sbbl
cmc
jecxz
rcrl
sub
aam
jno
pusha
mov
out
scas
jb
sub
push
mov
mov
jne
jge
sahf
shlb
pop
pop
in
scas
or
adc
push
dec
inc
ret
pop
add
mov
cmp
popa
icebp
mov
outsb
lods
fcoms
es
mov
shlb
faddl
loopne
jle
jp
mov
iret
jle
aas
call
mov
adc
imulb
mov
inc
andl
pop
cmp
orl
outsl
jno
cli
jg
ret
inc
ret
xchg
or
into
and
stos
jg
insb
mov
mov
ret
add
ds
sub
jo
in
mov
dec
and
out
add
mov
aad
add
xchg
divb
pushf
stc
add
btr
push
imul
push
or
clc
xchg
orb
and
into
movsb
or
cs
mov
mov
es
jae
cmpsb
loopne
adc
pop
iret
or
repnz
and
int
pop
lods
pop
inc
hlt
fucomip
js
fwait
inc
lret
enter
add
xchg
push
jl
stc
add
enter
dec
adc
ss
jle
push
out
mov
dec
or
add
stos
xor
cmpsb
pop
scas
mov
sahf
mov
cmp
lock
sub
aad
es
xor
loope
or
bnd
movsl
add
adc
jae
and
or
outsl
neg
pop
pop
push
sbb
or
mov
dec
scas
cwtl
pushf
sub
ljmp
xor
adc
rclb
xchg
adc
fnstsw
sub
fs
sub
iret
rcll
leave
out
and
aam
xchg
push
push
lahf
aam
out
aad
popf
inc
push
adc
jge
insl
int
aam
dec
and
jno
add
mov
cmp
sub
xchg
enter
mov
divl
jge
in
out
stos
outsb
cmp
or
test
sbb
fwait
mov
enter
add
add
xchg
inc
mov
repz
shll
mov
jae
dec
adc
hlt
stos
xchg
xchg
test
imul
inc
mov
xchg
xchg
stos
dec
add
call
xor
andl
xlat
xor
sub
test
cmc
pushf
mov
lahf
jne
xchg
cmp
add
iret
push
xor
movsb
pop
cmp
daa
adc
ss
sar
mov
pusha
lcall
lock
stos
cmp
jl
mov
dec
push
pop
mov
jmp
cmpb
dec
or
sub
jp
push
or
ljmp
iret
adc
cmp
inc
pop
jge
ror
shlb
and
in
push
hlt
das
dec
aam
pop
in
sub
jae
clc
sub
cmpsl
jg
out
clc
shl
fnstenv
or
test
dec
mov
mov
push
nop
stc
stos
lock
rcll
push
imulb
je
mov
cmp
mov
mov
pusha
scas
sbb
adc
loopne
jno
mov
movsl
sub
push
jns
in
idiv
es
and
mov
xlat
lret
sub
cmp
out
jb
popf
adc
mov
jecxz
inc
cmc
xchg
cmp
jno
xchg
mov
sub
mov
sub
lret
imul
or
shlb
popa
xchg
sbb
mov
or
stc
sub
push
es
sub
sub
out
cmpsb
iret
mov
push
adc
les
mov
inc
or
mov
push
jbe
pusha
mov
loop
icebp
sbb
jne
mov
daa
sbb
add
mov
mov
fistpll
cli
mov
mov
loope
mov
cmc
push
cld
pop
add
popf
dec
xor
push
cmp
clc
inc
jle
test
sbb
mov
sbb
out
int3
fbstp
jge
or
popa
adc
orl
jmp
mul
test
fwait
xor
mov
jb
movsl
arpl
jge
push
aas
daa
mov
pop
outsb
inc
mov
or
ljmp
ret
sbb
cmc
ss
ss
push
inc
mov
add
stos
fcomps
iret
imul
fld
shr
add
add
adc
mov
aad
ja
pop
dec
testb
stos
adc
scas
dec
cmpsb
in
and
xchg
and
icebp
in
or
dec
push
jmp
daa
out
das
jne
in
out
lock
scas
out
dec
xor
sbb
aas
ljmp
sarb
mov
shll
stos
pushf
into
popa
sub
or
jb
ja
dec
sbb
dec
movsb
and
jno
les
adc
push
or
pop
repnz
push
push
mov
aam
int3
shl
cmp
cmp
lret
pop
add
bnd
sahf
jbe
pop
insb
and
mov
fnsave
in
push
sub
push
mov
add
dec
cwtl
jl
pop
out
lret
lea
ds
test
ror
clc
lds
dec
and
lds
sub
mov
repnz
lea
inc
movhps
add
popa
and
add
aaa
inc
out
movsl
dec
ss
jno
rolb
ds
ja
ret
sti
int
ror
popa
test
leave
das
iret
adc
sbb
xchg
in
jmp
js
mov
dec
ljmp
ja
and
test
fsubp
xchg
adc
xchg
cmp
test
jmp
jle
stos
xor
or
adc
std
sbb
test
adc
or
in
xchg
loopne
lcall
std
arpl
pushf
dec
fs
int
into
ret
daa
dec
xchg
inc
pop
mov
enter
mov
add
mov
lds
add
push
rcrb
add
sahf
jnp
add
and
fcmovnbe
sub
pusha
and
jp
push
sbb
jge
jno
fcomip
rorb
scas
push
dec
sti
test
repz
jbe
xchg
or
mov
std
add
inc
mov
bound
xchg
cmp
rcll
fstl
or
xchg
jb
fmull
add
lods
adc
add
jb
shrl
dec
icebp
fpatan
loope
add
mov
repz
out
xchg
in
clc
aaa
inc
xchg
lahf
mov
mov
mov
loop
lods
jb
test
cmp
je
jg
in
add
and
fwait
jge
test
loop
xchg
mov
dec
mov
jno
pop
subb
out
sub
pop
pop
aad
movsl
in
pop
mov
push
dec
adc
cld
vmwrite
cltd
fs
jbe
mov
enter
stos
arpl
call
and
insb
inc
xchg
mov
ja
addr16
icebp
pop
popw
ficoml
pop
jnp
in
repz
fnstenv
dec
mov
stos
and
xor
int
push
mov
push
mov
dec
fcomps
cmpsl
incl
jmp
mov
daa
std
add
pop
mov
arpl
sbb
aas
js
lock
loop
jle
repz
mov
enter
jbe
daa
mov
sub
in
in
scas
inc
jae
mov
or
popa
push
lret
or
fisttps
mov
das
and
push
movsb
bound
sub
push
std
xor
pop
xchg
fwait
inc
dec
sbb
ficoms
pop
mov
ljmp
cltd
dec
repz
mov
sbb
push
jmp
popl
or
and
pusha
sbb
testb
std
and
clc
sti
inc
push
shlb
stos
mov
shrl
in
dec
xor
lret
mov
adc
add
sbbl
mov
pushw
ss
fmuls
adc
jne
xchg
fs
and
ljmp
movsl
enter
mov
dec
outsl
dec
inc
fdivl
mov
mov
cmpsb
cmpsb
call
sub
mov
adc
xor
sbb
mov
rclb
cmp
ret
dec
test
loop
xor
sub
push
push
aas
dec
loopne
cmpsb
jmp
lahf
sub
mov
xchg
subb
sbb
sbb
shrl
dec
in
jp
pusha
sub
push
add
imul
add
and
out
popl
lcall
push
xchg
cmp
xchg
mov
lods
in
ja
loope
roll
stos
dec
jmp
jecxz
inc
adc
mov
jnp
and
xor
and
xchg
ss
jo,pn
mov
add
jle
inc
mov
pop
jmp
xchg
jnp
repz
mov
add
lret
outsb
inc
mov
mov
jle
push
pop
fstl
std
shrd
push
mov
push
push
scas
xchg
repz
pop
mov
popf
sbb
out
test
fwait
push
dec
jge
fs
int3
mov
xchg
rclb
out
pop
cs
sbb
cld
faddl
xor
shrb
repz
fwait
fwait
enter
and
push
xchg
fs
and
pop
mov
adc
and
pop
mov
lods
outsb
sbb
cli
inc
pop
or
inc
repnz
aas
daa
aas
outsb
mov
mov
mov
push
push
mov
daa
mov
ja
lret
push
ret
pop
inc
inc
scas
dec
out
subl
ja
in
add
mov
sub
dec
inc
in
add
xor
mov
in
imul
mov
rcll
in
and
sub
mov
popl
mov
sub
rcl
inc
dec
into
pop
pushf
dec
shr
loopne
fs
dec
sbbb
imul
maxps
fsubs
or
inc
scas
gs
lret
fidivrs
mov
stos
out
gs
lahf
daa
xchg
jle
dec
sbb
outsb
sbb
rcr
std
sub
insl
pop
fistl
cmp
jae
scas
lret
adc
mov
mov
adcl
xor
inc
pushf
mov
jno
dec
and
out
lcall
adc
es
out
lahf
xor
push
xorl
sub
jmp
push
sahf
adcb
ffree
mov
sub
adcl
aas
in
mov
hlt
mov
adc
inc
vpackuswb
aaa
rcrb
push
pop
lret
mov
std
mov
out
push
push
inc
loopne
mov
xchg
fsubrl
adcb
push
mov
in
inc
mov
lahf
sahf
push
int
dec
jmp
es
ljmp
mov
loopne
mov
pop
daa
pop
pop
aas
nop
jne
aaa
and
fistpll
int
push
loop
and
cmp
adcb
lods
jge
and
ja
mov
dec
fnsave
cmovne
ljmp
push
xchg
into
mov
add
add
cli
pop
xor
pop
xchg
push
sub
push
addr16
gs
out
jle
les
add
movsl
shrl
rorb
or
inc
shll
jl
add
fcomip
pop
test
add
subl
cmp
xchg
out
cmp
add
lds
or
rcrb
sbbb
fs
jp
leave
stos
sbb
rcll
enter
out
stos
xor
xchg
data16
fwait
in
inc
mov
mov
or
sub
loopne
outsl
icebp
addr16
notb
cs
roll
push
mov
vpmacsww
xchg
in
mov
scas
lret
nop
ja
xor
jo
hlt
aam
push
xchg
pop
and
fnstenv
adc
aaa
rorb
adc
and
dec
mov
add
ss
push
popf
addr16
mov
sbb
sbb
cli
ja
cmpsl
pop
add
push
cmpsl
xchg
daa
sti
mov
bound
xor
fnsave
fsubs
pop
push
scas
lcall
fwait
sbb
stos
ljmp
cmpb
and
sbb
aaa
xchg
lcall
xchg
xor
das
scas
imul
into
into
mov
xchg
mov
mov
push
add
mov
shll
xchg
mov
loope
std
inc
enter
popf
cld
sarb
jae
mov
jbe
push
test
jmp
pop
rcrb
xor
inc
ret
insb
icebp
insb
testl
jae
aas
sub
and
into
bound
lock
repnz
ss
mov
enter
mov
dec
or
adc
and
sbb
dec
adc
arpl
mov
dec
aas
icebp
bound
loop
test
sub
xchg
imul
cltd
out
add
jge
data16
cmp
xchg
pop
mov
cs
pop
mov
add
mov
stc
add
add
cmp
enter
shrl
je
pop
arpl
pop
jmp
or
mov
gs
jge
lea
mov
push
es
or
iret
push
shl
xchg
addr16
cli
lahf
in
inc
jmp
popa
push
mov
cmpsl
jl,pt
call
out
gs
dec
outsl
sahf
test
jmp
and
mov
ficompl
fldenv
xor
xor
xchg
addl
in
adc
lcall
add
cmpsl
push
std
xchg
inc
and
cmp
xor
ret
push
push
fs
nop
mov
sbb
shl
arpl
addr16
jge
fwait
adc
or
rclb
push
add
fnstsw
cwtl
hlt
gs
out
sahf
inc
pop
jmp
mov
nop
adc
xchg
and
imul
xchg
jnp
add
stos
xor
sub
push
addr16
das
aaa
mov
fs
jp
jle
sbb
out
movsl
push
popa
sahf
add
test
sub
in
scas
cmp
adc
mov
ds
jne
loopne
jle
jbe
js
or
jl
les
dec
loop
jge
fbstp
pop
scas
mov
scas
mov
adc
dec
add
insl
ljmp
cli
outsl
sub
test
sbbb
mov
pop
sub
and
aaa
and
insb
dec
xchg
xor
aam
loope
in
dec
sar
andb
jo
cmp
out
test
adc
sbb
mov
movsb
lods
dec
adc
push
jle
sarb
cwtl
insl
fcomip
sub
xchg
adc
test
mov
fldt
sub
adc
adc
push
push
cmpsb
sub
sub
adc
aaa
inc
add
lcall
sub
dec
mov
inc
cmp
xor
sbbl
sti
jmp
lock
rcrl
sti
sub
and
test
sbb
dec
dec
push
or
test
pop
push
and
jae
cmpsb
lahf
aad
iret
dec
scas
xchg
push
inc
jbe
shlb
adc
mov
mov
cmp
add
repnz
in
hlt
mov
xor
stos
loope
sbb
sub
xchg
stos
mov
fdivl
or
mov
iret
sbb
xchg
mov
sbb
mov
test
sbb
frstor
clc
xor
xor
jo
bound
mov
js
inc
lods
inc
hlt
mov
bound
call
inc
mov
or
pop
mov
jecxz
aas
insw
or
andb
mov
hlt
int3
mov
push
pop
lahf
lea
vmovntdq
push
pop
mov
aam
lcall
pop
aam
rol
or
sbb
in
adc
pop
pop
insl
sbb
or
out
aad
das
push
jbe
xor
arpl
sub
or
repnz
lahf
iret
std
pop
aaa
xor
and
popa
jns
lret
and
adc
fs
mov
push
cmp
dec
mov
jg
repz
sub
cld
push
push
daa
shl
mov
xor
push
dec
lcall
lods
fiadds
inc
repz
jmp
ja
jae
jb
xor
adc
outsb
inc
xchg
int
mov
lea
mov
sub
lea
repnz
xor
aad
xlat
add
sbb
sub
aas
adcl
mov
out
push
sbb
jae
movl
xor
push
or
cli
mov
cmp
push
mov
adc
jne
cwtl
nop
mov
mov
pushl
test
rcrb
enter
sahf
mov
fbstp
jb
inc
shlb
mov
jo
mov
roll
mov
std
push
aad
bound
adc
or
in
les
and
adc
sbb
xchg
dec
mov
push
push
rorb
sti
sbb
xchg
mov
pop
js
jo
test
inc
adc
push
enter
push
and
mov
add
mov
pop
clc
add
xchg
rcll
mov
es
enter
inc
push
out
dec
ret
test
mov
in
mov
push
dec
push
xchg
sarb
cmpsl
push
jmp
sbb
push
inc
adc
ret
das
jp
pushf
inc
push
dec
lock
shrl
arpl
dec
fcomps
test
push
sbb
xlat
xor
jmp
bound
loopne
pop
cs
insl
fisubrs
std
xor
pop
jecxz
dec
pusha
mov
push
loope
mov
jg
fcmovnu
divb
cltd
add
stos
notb
out
loope
jecxz
adc
or
daa
dec
xor
push
repz
int3
mov
mov
fadd
or
adc
mov
add
add
cmp
cmp
into
ror
mov
aam
cmp
xlat
xor
stc
pop
xchg
xlat
int3
outsb
in
pop
bound
sbb
jecxz
mov
cmp
fcom
add
and
out
mov
cmp
pop
ret
bound
divl
lock
cmp
iret
mov
jl
mov
sbb
inc
dec
in
xor
lods
out
loop
fnstcw
push
cld
inc
pop
lods
jecxz
xchg
int3
shl
xchg
out
insb
cmp
pop
subb
push
and
sahf
mov
movsb
into
insl
lahf
test
sbb
loop
dec
push
adc
rolb
repnz
mov
inc
mov
pop
mov
mov
lret
push
jo
push
dec
xchg
clc
pop
lret
xchg
shll
stos
lret
mov
pmaxsw
jl
xchg
push
or
pop
pop
adc
pushf
mov
lds
push
pop
jae
jp
xor
sbb
xchg
test
outsl
sub
push
cmpsb
stc
push
sub
jbe
ficomps
leave
andl
xchg
mov
fmuls
popa
arpl
push
std
xlat
mov
xorl
in
rcll
loopne
or
mov
sbb
imul
andb
outsl
adc
jle
jmp
mov
dec
popf
je
jle
inc
add
lods
or
addb
sub
mov
addl
pop
sub
sbb
mov
testb
stos
xchg
pop
ja
hlt
cmp
cmp
push
aas
or
outsb
stos
incl
int3
pop
pop
orl
loop
fcmovnb
add
sbb
sub
push
mov
mov
les
rcr
pop
icebp
jp
dec
fidivl
dec
test
push
mov
adc
inc
cld
lock
inc
jns
xor
or
dec
repz
push
insb
fdivrl
and
popf
sbb
inc
lods
movsb
repz
cld
arpl
test
hlt
or
fnstsw
mov
cmpl
punpckhbw
testb
jge
and
inc
rcll
cmp
gs
lds
xor
frstor
sbb
insl
jbe
xchg
xchg
and
lcall
inc
inc
pop
cs
inc
xor
cwtl
adc
gs
inc
and
mov
popf
pop
sbb
ja
icebp
cmp
adc
ds
sub
push
cmc
scas
cwtl
push
jns
dec
dec
test
mov
jns
mov
je
lcall
das
out
adc
sub
rcr
cmp
push
out
outsl
sub
out
sbb
add
adc
fmull
jg
mul
arpl
out
mov
add
arpl
push
cmp
js
mov
dec
or
xor
sbb
pop
mov
sarb
xchg
fiadds
add
jp
xorl
xchg
sahf
or
std
sbb
cld
pop
pushl
inc
mov
pop
jmp
xlat
test
out
dec
add
cs
mov
test
test
and
stos
inc
sub
mov
mov
fstp
mov
aas
or
pop
sub
icebp
in
push
mov
orl
push
mov
aam
lock
push
sbb
flds
or
inc
add
frstor
lods
jmp
mov
mov
cmpsl
mov
test
inc
and
fadd
stos
lret
xlat
mov
pop
adcb
mov
mov
cmp
jno
jb
imul
cld
jno
or
inc
loopne
adc
add
sarb
ljmp
mov
gs
jmp
lcall
or
repz
loop
lock
or
mov
push
push
pop
cmp
rcrl
push
sub
cld
mov
mov
sbb
push
neg
jmp
mov
or
iret
ja
mov
scas
scas
and
call
inc
mov
cmpsl
stos
sbb
rcll
lret
leave
pop
sarl
push
cmpsl
and
fdivs
mov
sti
sarb
test
bound
push
dec
dec
or
es
pop
imulb
popf
imul
push
addl
imul
bnd
xchg
in
fldcw
sbb
flds
xchg
adc
xor
or
scas
push
in
mov
cmp
mov
mov
out
sar
fcoms
xchg
sbb
in
inc
in
jae
mov
mov
dec
lahf
lds
inc
rolb
jecxz
cmp
sub
int
add
loop
std
int3
stos
pop
movb
sbb
fsubrs
adc
jbe
ss
sub
stos
jecxz
cmp
jnp
mov
cmp
or
loop
dec
push
ret
call
ficomps
movsl
insb
mov
mov
mov
sbb
mov
push
or
or
mov
fsub
and
mov
xchg
addr16
dec
idiv
jle
scas
mov
mov
aad
notrack
outsl
movsb
push
mov
shrb
out
mov
mov
test
xchg
shl
inc
je
push
cmp
shlb
shrb
por
ret
jl
cmp
leave
mov
or
iret
pop
mov
dec
or
aam
lret
cli
fbstp
into
bound
repz
call
add
jbe
lods
dec
jp
pusha
pushf
nop
inc
ljmp
pop
add
jne
fnsaves
cmp
jmp
mov
pusha
xor
xor
sub
scas
mov
aam
cmpsb
fdivr
inc
lds
int3
xor
inc
gs
int
jg
push
in
jle
data16
lea
dec
pop
mov
jmp
lock
jle
dec
das
pop
push
inc
nop
xor
pop
movsl
daa
std
xor
jp
insl
loope
dec
fs
shrl
dec
cld
pop
adc
cmpsl
fs
repnz
xor
sub
jl
and
fs
aam
mov
push
push
push
fwait
std
pushw
ljmp
adc
lea
lret
cmpsl
int3
aam
pop
movsl
xor
xchg
cmp
aam
and
test
lds
dec
dec
sub
inc
in
xchg
pop
cmpsb
adc
xchg
pop
dec
fimuls
add
aaa
int3
and
ja
push
xchg
fisubl
cld
adc
fcmove
shl
lea
sub
dec
test
add
sbb
lret
mov
dec
mov
test
pop
xor
in
or
or
mov
or
hlt
cli
xlat
lret
cli
in
pop
or
sub
es
mov
ss
cld
flds
loopne
xlat
jecxz
xchg
outsb
sbb
or
cmc
fdivs
add
or
pusha
adc
es
ds
das
fstpl
js
call
test
cwtl
sbb
pop
sbb
scas
pop
sbb
lods
cmp
test
xchg
sti
sbb
push
mov
mov
aad
daa
jge
mov
xor
and
xchg
dec
fistpl
dec
mov
and
insb
sub
add
sbbb
fcmovbe
xchg
sub
in
mov
xchg
add
pop
xor
int
push
push
shll
push
int3
fwait
cmc
inc
and
xchg
or
xchg
jl
leave
stc
in
xchg
and
xlat
int3
xor
push
push
jb
imul
mov
scas
nop
popf
int3
push
mov
add
inc
and
sbb
sub
into
fwait
dec
jmp
imull
adc
pop
push
cmp
js
xor
cmpsb
sbb
inc
cwtl
cli
sub
adc
pop
xlat
repz
sub
test
ja
xchg
ret
mov
mov
je
sub
ss
adc
dec
or
data16
and
out
cmp
fstpt
inc
sub
mov
dec
mov
xchg
mov
mov
outsl
pop
into
pop
and
cmp
jg
pusha
das
sub
popa
in
in
dec
out
imul
mov
into
pushf
sbb
pop
sub
push
addl
sahf
xchg
arpl
fmuls
xchg
inc
pop
and
inc
outsl
and
adc
pop
sbb
imul
aam
bound
ret
cmp
sbb
inc
mov
adc
adc
js
pop
bound
mov
xor
push
lods
bswap
data16
jmp
movsl
xchg
cmp
pop
xchg
ss
mov
adc
aaa
sbb
loop
bound
jle
out
fistpl
popa
and
xchg
mov
dec
lahf
xlat
je
lea
push
lret
add
push
xchg
sub
loop
dec
scas
fiaddl
outsl
dec
adc
or
xchg
dec
xorb
adc
jle
out
test
nop
sarl
jg
mov
push
push
pop
ret
popa
dec
xor
sbb
loope
pop
ficoms
mov
repnz
testl
les
mov
or
sbb
pop
jbe
stc
jl
ret
jne
xchg
addl
xor
mov
aam
clc
cmp
icebp
or
sar
andl
dec
cld
sbb
cwtl
es
fwait
sub
cmpsl
mov
leave
sbb
push
std
es
push
lret
stos
pop
loop
xor
mov
test
xchg
mov
mov
lret
xorl
popa
enter
mov
sbb
out
in
int
jp
push
bound
loope
dec
fidivl
jecxz
lcall
jne,pn
scas
hlt
jb
test
shll
rorb
into
inc
push
bound
rcrl
shrl
lea
imul
popf
js
jle
mov
sub
aam
pop
loope
mov
fwait
push
mov
in
inc
and
pop
insl
push
and
mov
cmc
int
or
fistl
jg
xchg
or
out
orl
ja
and
addl
scas
dec
jo
xchg
mov
std
sub
cmp
pop
mov
inc
sbb
loop
repz
mov
mov
xchg
outsb
sub
bound
in
jne
bound
rolb
or
pop
and
and
cmpsl
imul
xchg
and
inc
icebp
or
cmp
pop
fld
fs
mov
cld
sbb
scas
inc
sbb
adc
push
or
cmpl
jns
lcall
insl
mov
daa
inc
cmc
mov
bound
mov
or
push
push
and
call
mov
jp
jl
jl
aaa
aaa
in
and
pop
xlat
shl
in
dec
jp
inc
pop
cmc
push
and
enter
sti
add
sbb
loope
pop
fwait
lcall
sbb
jo
jne
dec
or
xchg
xchg
les
dec
je
rolb
and
add
sbb
mov
sarb
push
pop
push
insb
aaa
testl
insl
popf
lret
daa
aaa
cwtl
xchg
fadds
cld
nop
add
jp
pop
js
push
lock
add
add
mov
gs
and
pop
jns
fiadds
into
cmp
ret
pusha
sbb
leave
jl
push
sub
aas
pop
jp
fcomi
sbb
adc
mov
sub
das
sbbb
xor
jmp
add
pop
mov
movsb
push
cli
sbb
add
inc
jo,pn
out
ret
das
es
sbb
cmp
int3
jle
xchg
inc
dec
sarb
cmpsb
jmp
sub
imul
mov
popf
xchg
ret
push
xchg
fcompl
add
sub
add
xchg
jge
loopne
orl
inc
nop
fnstenv
jmp
xchg
aaa
cltd
insb
xchg
xchg
aad
aad
cmpsl
or
mov
cmp
xor
jg
add
jle
adcb
fstps
das
dec
sub
inc
test
add
dec
dec
fs
or
arpl
cs
inc
gs
pop
sub
mov
mov
dec
fldenv
cltd
negl
orl
es
fsubr
pop
or
loope
fldenv
insb
xor
xor
movsl
inc
push
pushf
test
sub
fcmovu
push
sbb
push
in
jl
or
daa
repnz
sub
adc
cmpsl
mov
into
mov
js
sbb
push
xor
xor
lcall
js
test
or
xor
sbb
push
push
mov
sbb
mov
popa
and
js
jg
and
mov
dec
pop
ja
out
lret
ljmp
adc
pop
xchg
fdivrl
cmp
cs
jb
fstl
rcll
inc
lahf
mov
pop
ret
mov
mov
jp
push
push
xor
in
nop
cs
test
add
cmp
sti
into
jecxz
cltd
mov
mov
jecxz
cmp
mov
jg
stc
movsb
sub
mov
jle
xor
push
add
jg
pop
dec
gs
mov
adc
xchg
jmp
push
cmpsl
cltd
popf
or
or
inc
mov
lea
fs
lock
pop
jl,pt
cmp
push
jp
leave
pushf
push
push
loope
push
xchg
ljmp
fadds
shlb
xchg
jle
pop
xor
sbb
in
mov
mov
jae
or
xor
mov
popa
cmp
aam
push
cld
cwtl
imul
pop
mov
pop
push
or
sbb
mov
jae
int3
cmp
or
xchg
cmc
fsubl
idivl
loope
aaa
or
or
jne
mov
mov
andb
mov
iret
ffree
test
in
jo
pushf
add
sub
mov
ja
pop
mov
or
in
xchg
push
and
xor
and
pop
inc
cs
bound
mov
lret
test
pop
lock
inc
xor
popa
cmp
inc
repz
pop
rorb
ss
add
push
adc
cwtl
xchg
mov
scas
push
push
add
sbb
dec
mov
dec
addr16
pop
xor
pop
out
out
pop
cmp
clc
test
cmc
test
lea
pusha
jae
push
xor
pop
jns
mov
fisttpll
call
sbb
stos
pop
rorb
int
insl
add
lods
mov
outsl
push
stc
xchg
repz
inc
imul
cwtl
mov
adc
ljmp
jae
or
pop
fildl
or
test
push
loope
imul
mov
mov
pop
out
stc
mov
shl
subl
nop
jb
xchg
cmc
clc
fnstenv
fwait
lea
jle
test
mov
sbb
in
roll
rcll
pop
xchg
mov
or
xchg
out
mov
xchg
mov
mov
in
loopne
test
mov
push
dec
inc
sbb
aaa
or
movsl
pop
std
jge
fwait
imul
mov
and
xlat
push
add
lcall
rclb
fcmovne
in
ds
push
dec
add
jno
iret
arpl
sbbl
sbb
lods
loope
mov
push
xchg
pop
inc
sbb
jg
stc
jnp
lahf
mov
iret
jg
roll
cmc
jge
leave
or
adc
jo
sbb
mov
push
cmp
bound
adc
and
loop
push
mov
lcall
mov
bound
cld
jno
cmp
pop
icebp
jae
sbb
adc
mov
out
cli
and
xor
movsb
test
outsl
cmp
inc
jno
jle
shll
jae
push
shl
gs
dec
push
out
or
orb
cwtl
pusha
sub
mov
sub
stc
shrl
add
je
cmp
les
cmp
addr16
xor
jns
fsubs
jno
and
mov
insb
jl
sbb
jle
xchg
xchg
xchg
xchg
sbb
mov
jecxz
insl
ja
mov
mov
fistps
nop
in
mov
call
test
inc
sbb
cmp
sub
xchg
and
lret
cwtl
cmp
mov
pop
mov
or
lods
pop
fistl
mov
je
icebp
cmp
daa
add
inc
and
in
das
mov
into
pop
je
dec
xor
sub
mov
or
and
mov
cmp
sub
inc
xor
dec
add
inc
push
hlt
jb
pop
call
push
imul
push
jecxz
sub
mov
or
repnz
jmp
pop
cmp
mov
dec
faddl
pop
lahf
int3
test
cmp
mov
sbb
inc
js
and
cmp
call
and
test
adc
jg
jo
cwtl
push
mov
push
jne
vpunpcklbw
cmp
jmp
inc
adc
pop
inc
sub
icebp
and
int3
jnp
mov
xor
aam
cli
pop
test
cmp
mov
mov
jg
test
repnz
sbb
repnz
rcrl
push
add
es
stc
popa
mov
mov
loope
insb
into
mov
mov
jle
and
xchg
xor
call
sub
sbb
lahf
lods
adc
push
cli
jnp
jmp
xchg
push
popa
jbe
in
mov
jmp
hlt
inc
dec
mov
mov
mov
fistpll
fwait
nop
jno
data16
dec
scas
mov
dec
sahf
sti
push
mov
mov
rcll
add
enter
btl
mov
out
push
leave
pop
mov
jo
imul
jecxz
inc
jae
dec
cmpsb
push
mov
adc
xchg
lea
loop
dec
cmpsb
pop
ss
xchg
pop
inc
imul
pusha
mov
rol
pusha
js
dec
lods
imul
adc
xor
xchg
sub
push
pop
xchg
pop
idivb
dec
ret
mov
in
cwtl
subb
push
movsl
fidivs
pop
mov
dec
dec
es
inc
lret
mov
pop
mov
inc
pusha
jecxz
and
pop
call
aam
push
aad
lret
in
pusha
mov
out
mov
sbb
jle
lahf
pop
or
fucomi
mov
mov
in
insb
lahf
jbe
or
jg
jl
movsb
xor
fs
pop
xchg
push
into
sbb
mov
popa
cmp
daa
xlat
adc
gs
add
hlt
mov
push
rcll
insb
push
lds
jl
pop
mov
ja
sub
call
iret
sub
cmp
out
js
mov
mov
out
pushl
test
mov
shl
jmp
xchg
cmpl
fwait
testb
mull
pop
jns
test
pop
jle
push
ror
test
jne
out
pusha
mov
push
es
jmp
sbb
jge
add
ret
sahf
clc
add
lahf
jne
stos
mov
test
pop
push
pushl
int
mov
test
lahf
add
cltd
aam
iret
cli
push
loope
push
testl
jns
xor
dec
push
jne
hlt
inc
mov
jl
xchg
outsl
fisubs
add
jg
jle
out
cmpsb
mov
in
push
idiv
and
sbb
mov
mov
faddl
and
leave
fisttps
xor
das
jno
sbb
loope
movsl
aas
in
ret
out
cmp
sbb
jne
dec
xor
decb
cltd
jmp
shlb
inc
fs
add
iret
xor
inc
push
mov
add
sahf
and
add
cli
push
ficomps
arpl
sbb
or
test
mov
push
loop
or
jne
xor
jecxz
hlt
cmp
imul
aaa
test
pop
addr16
std
jge
inc
test
aaa
xchg
push
lret
jne
sub
mov
std
dec
dec
jb
cmpsb
push
mov
push
pop
movsl
jmp
icebp
ficompl
lret
int
mov
mov
jae
lcall
add
cwtl
xor
mov
mov
jge
popa
pushf
mov
dec
push
adc
scas
popf
ljmp
or
das
inc
data16
addb
adc
push
inc
push
fldl
ja
test
bnd
or
xor
inc
les
fisubrl
or
insl
frstor
js
dec
mov
xchg
iret
mov
inc
push
mov
jmp
push
test
test
dec
shr
xor
or
cmpsb
sbb
scas
loop
hlt
mov
sub
adc
and
leave
les
sub
sub
rol
fisttpll
mov
hlt
jg
insb
xor
adc
mov
cltd
push
pop
or
testb
mov
add
cs
cltd
dec
test
ret
lods
mov
pop
cmp
lret
dec
adc
fnstenv
popf
bound
cmp
sub
mul
lock
fs
mov
sbb
xor
fistps
jge
stos
xor
ljmp
pop
shlb
xchg
lahf
and
sub
add
add
mov
sbb
mov
loop
jp
cld
or
test
dec
sub
push
add
int
mov
mov
notb
arpl
mov
mov
pop
pusha
fnsave
inc
jb
bound
aam
push
inc
xor
xchg
dec
roll
out
xor
das
xchg
push
fldcw
dec
lds
mov
adc
push
daa
sbb
lods
bound
insl
inc
mov
inc
jp
lea
dec
jmp
orb
mov
aaa
sbb
test
cmp
ja
mov
out
mov
inc
cld
pop
nop
pop
pop
sub
push
dec
push
cmpsb
mov
push
addr16
adc
inc
xor
inc
xchg
or
pop
aam
or
loop
mov
xchg
divl
mov
insb
mov
out
dec
inc
nop
dec
loop
inc
pop
xor
loopne
mov
fcompl
mov
rorb
cmp
out
add
mov
sbb
adcl
mov
lcall
clc
rcll
push
mov
sbb
out
push
and
mov
jl
loope
insl
subb
push
sub
xchg
out
sbb
ljmp
fdivr
in
pop
and
mov
data16
sub
jle
jnp
aaa
js
mov
popf
sbb
ret
cli
dec
or
xlat
cmp
sbb
mov
xor
mov
roll
mov
call
jmp
xlat
xor
or
cltd
lds
push
mov
cmp
sub
lahf
dec
in
pop
in
jbe
insb
das
in
add
fnstcw
fisubl
roll
daa
cmp
outsl
inc
mov
mov
lcall
jae
out
or
add
mov
xchg
mov
popa
mov
fisubrs
jge
sbb
inc
mov
push
push
in
push
mov
jle
inc
and
stos
mov
test
dec
dec
popa
push
push
sarb
stos
jl
adc
stos
fwait
jns
je
adc
sub
psubusw
cmp
dec
leave
lahf
iret
push
push
fidivl
adc
andl
dec
add
aam
cmp
xchg
shlb
repnz
adc
push
mov
test
and
sub
sbb
test
adc
fnstenv
loope
lret
jl
or
cmp
sub
and
adc
clc
adcl
inc
fwait
adc
lds
orb
xchg
insb
rorb
mov
mov
mov
shr
and
jecxz
lret
in
push
jge
cmc
sbb
push
mov
fdiv
loope
jae
inc
mov
push
inc
mov
xlat
mov
fildl
lods
or
sarb
decb
xchg
push
clc
pop
sbb
lret
sub
mulb
or
ret
or
movsb
inc
test
out
or
in
fwait
clc
add
ret
dec
mov
mov
xchg
call
idivb
bound
movsb
test
sbb
xor
jle
in
inc
mov
out
or
pop
cld
idivb
and
shr
lock
call
test
jg
cli
imul
bound
and
jo
xchg
jno
out
popl
sti
shl
jns
stos
cli
mov
lods
lock
lret
xchg
notb
xchg
leave
mov
pushf
mov
mov
cmp
jp
out
or
cmp
sbbl
daa
outsb
and
shl
sbb
roll
std
rol
in
nop
repnz
sbb
js
dec
jae
push
adc
in
sbb
fsubr
push
nop
hlt
ss
inc
pushf
insl
loopne
or
out
sti
test
loopne
leave
int3
test
or
mov
pushf
ficoml
dec
dec
or
mov
mov
fcmovu
and
test
rcr
int3
xchg
dec
in
in
mov
jno
fdivs
adc
roll
aas
xadd
xchg
call
movl
sahf
inc
dec
popa
js
sbb
xchg
cmp
shl
push
push
mov
mov
mov
insl
mov
ljmp
les
xor
cli
ljmp
xchg
jo
ss
adc
dec
cld
pop
out
adc
and
dec
mov
je
sub
in
std
lret
aam
jae
mov
popf
loopne
pop
push
cli
test
and
in
cwtl
push
mov
repz
outsl
jbe
aam
mov
pop
loop
cltd
sbb
pushf
cli
jns
mov
imul
nop
and
or
pop
jns
lea
add
out
sbb
ret
fmuls
adc
scas
jno
call
ret
scas
inc
push
mov
ffree
cmc
adc
jnp
out
inc
orl
sbbl
mov
dec
fs
inc
nop
testl
dec
sub
leave
nop
ljmp
popa
sbb
and
dec
or
mov
lret
xchg
mov
pop
dec
outsl
xorl
inc
xchg
push
mull
sbb
mov
data16
in
imul
mov
or
insl
push
push
enter
lcall
push
stc
jo
mov
dec
inc
das
jnp
int
scas
jmp
mov
sbb
xchg
sub
xchg
das
sti
dec
mov
negb
jecxz
cmpsb
mov
cmp
mov
rcrb
int
dec
enter
aad
jb
popf
jmp
leave
sub
mov
cmp
xchg
addl
mov
pusha
adc
je
notb
imul
mov
sub
or
xchg
mov
lock
dec
clc
es
int3
pop
push
pop
lods
mov
and
mov
out
xchg
sub
push
dec
addr16
outsb
adc
push
push
cmp
les
cwtl
std
clc
pop
mov
xor
insl
enter
sahf
loop
int3
sub
jno
or
hlt
adc
sub
loopne
push
push
ja
push
rcll
movsb
xchg
xchg
out
lret
mov
out
push
mov
jbe
xchg
mov
movsb
mov
sbb
mov
push
mov
lret
es
mov
daa
nop
in
sbb
out
push
in
inc
sti
addl
push
jmp
loop
fimuls
mov
cs
sar
aas
push
or
jl
dec
mov
pushf
scas
mov
cmp
cli
addr16
pop
fwait
pop
or
mov
mov
pop
dec
add
xor
das
sti
push
sbb
push
aaa
jle
fldcw
imull
sarl
sbb
jae
mov
or
mov
xor
jmp
std
gs
cwtl
cmp
xchg
repz
fdivs
inc
mov
fisubrs
push
std
mov
es
pop
dec
rclb
cmp
pop
jne
out
sub
divl
mov
mov
push
add
dec
fiadds
mulb
push
cmp
test
rclb
mov
inc
stos
lcall
push
push
jns
mov
notl
mov
shr
and
jns
xchg
add
pop
dec
and
das
jmp
or
mov
push
add
and
add
or
rcll
xchg
addl
sub
pusha
push
outsl
scas
xchg
inc
adc
dec
push
mov
xor
repz
out
mov
stos
out
shlb
lods
sahf
mov
add
lcall
mov
ds
jge
aaa
gs
vphaddubq
mov
movsb
lret
add
xchg
dec
insl
sbb
imul
mov
fistpl
fnstenv
in
rol
and
mov
push
call
inc
jle
dec
jbe
cld
mov
out
push
shl
mov
push
sbb
push
mov
xchg
jae
repnz
loope
ss
cld
hlt
insb
out
xchg
push
sbb
in
push
or
dec
stc
idiv
lock
or
add
fisttpl
out
mov
cmp
inc
adc
inc
or
xchg
sub
mov
jno
push
nop
sbb
ss
outsb
sbb
sub
jnp
add
mov
aas
jmp
jle
lea
jecxz
orb
out
and
xchg
jg
repz
rorb
dec
stos
in
pop
pop
lock
adc
fmul
test
sahf
jmp
mov
mov
subb
loopne
xorl
push
mov
xchg
lds
dec
mov
ficompl
loope
xor
push
pop
fisubrs
pop
sub
ficoms
jmp
insb
jae
sub
jl
mov
out
xor
int3
out
dec
adc
sahf
out
aas
pop
leave
lods
cmp
dec
ja
in
jno
jmp
sbb
push
sub
test
leave
and
sub
notl
inc
sbbb
jge
push
movb
push
daa
cld
lock
stos
inc
inc
pop
sbb
or
mov
repz
mov
lret
fwait
xchg
lret
push
push
inc
clc
scas
inc
fwait
pop
inc
adc
pop
fbld
test
adc
movsl
mov
push
mov
loop
dec
mov
mov
fisttpl
dec
cwtl
lds
sub
div
mov
mov
pop
scas
in
shrb
fld
movsl
mov
test
push
pop
jge
aas
test
iret
ficompl
inc
cmp
out
call
fldt
mov
cld
test
inc
add
mov
push
and
jnp
mov
or
and
int
jmp
aas
cmpsb
push
pop
out
dec
arpl
adc
jl
jo
pop
iret
mov
dec
sub
and
xor
mov
arpl
pop
mov
cmpsl
adc
ds
or
mov
xor
pop
int
pop
sub
cmp
lods
xor
jp
inc
xor
test
and
push
dec
in
lods
xor
hlt
add
rcl
cmpsb
xor
cmpsl
insb
sbb
das
mov
xchg
mov
loop
out
dec
jbe
ljmp
aam
jbe
pop
cmp
jmp
fwait
xchg
mov
int
lock
cs
cmp
xor
sbb
cmp
inc
mov
inc
mov
mov
jmp
subl
jo
dec
add
popf
lcall
xor
pop
loopne
ss
jle
loop
and
cmp
and
xchg
xchg
je
add
std
inc
xor
push
add
jg
int
loope
dec
jle
cmp
test
mov
dec
xchg
loope
cwtl
aaa
cltd
dec
mov
ja
lret
ret
ds
movl
add
inc
movsb
dec
pop
pop
aam
and
loop
out
jb
insl
stc
lea
lock
push
lock
jg
jne
rcr
lods
or
mov
call
xor
mov
sbb
dec
add
into
pop
setns
into
sub
movsb
add
pop
stc
push
jecxz
daa
mov
xchg
hlt
sbb
or
fs
adc
loop
filds
mov
pop
cmp
add
cwtl
loope
je
mov
mov
push
movq
rcrl
mov
adc
add
cmp
pop
scas
and
pushf
in
pop
adc
jnp
repnz
jb
jle
mov
lods
cmpsl
sub
dec
testl
mov
xchg
ds
jbe
adc
adc
mov
add
icebp
mov
mov
push
add
push
lret
cmpsb
idiv
inc
in
test
sti
mov
rclb
pop
cmpsl
cmp
sub
aaa
xlat
lods
idivl
cs
hlt
push
pop
int
jge
loope
push
mov
xchg
pop
push
rolb
test
add
fisttps
std
mov
push
push
loop
addb
aas
lcall
sub
push
test
cld
aad
ja
inc
out
mov
jl
xorb
mov
notb
jle
xchg
xor
rcll
inc
cmpsl
testb
pop
addr16
movsl
aas
push
and
pop
dec
rclb
cld
es
push
xchg
out
push
insb
stc
ds
xchg
insl
mov
adc
xor
adc
jg
xchg
loopne
add
push
fs
movb
cld
inc
loop
mov
xchg
lahf
lock
add
movsb
nopl
push
ja
callw
adc
das
enter
or
hlt
cmp
scas
inc
pop
mov
loop
cmpsb
addl
test
out
daa
cmc
data16
test
dec
shll
sbb
push
jl
daa
lea
stc
sbb
push
sub
jne
popa
add
imul
xor
xlat
push
adc
cmp
outsl
aas
and
ret
add
cmp
push
std
and
mov
stc
dec
pusha
out
xchg
stos
bound
subb
stos
sub
cltd
dec
push
add
mov
or
lret
inc
ja
mov
and
sbb
add
jne
addb
aad
popa
insl
in
sub
push
imul
and
cmp
test
out
in
jo
addb
pop
fstpl
lock
pop
sbb
shll
lock
mov
adc
cs
xor
arpl
cmp
inc
inc
hlt
das
pusha
popf
push
addr16
sub
or
xlat
add
lret
sti
mov
loope
inc
mov
add
mov
mov
add
lods
inc
jmp
push
fdivrs
dec
dec
cli
xchg
cmpsl
stc
dec
jp
sub
fs
in
pop
gs
repnz
stos
sub
sbb
xor
lods
and
std
and
mov
lahf
ret
pop
insb
dec
dec
mov
mov
jnp
call
ret
sahf
fldl
pop
jns
mov
xchg
mov
mov
cmovbe
xchg
dec
ficomps
add
stos
cli
cmpsb
dec
sbb
inc
cltd
jg
xor
inc
and
mov
push
and
and
scas
pop
negl
jge
add
roll
ja
sbb
mov
mov
cmp
pop
leave
jno
sub
bound
or
or
cmp
and
les
mov
add
mov
lret
scas
scas
pop
out
pushf
clc
jle
add
add
daa
jb
xor
lods
mov
test
jo
pop
cmp
scas
mov
push
mov
pusha
call
push
stos
sbb
mov
das
inc
roll
cld
pop
cmc
push
arpl
xchg
cli
adc
lahf
cli
popa
outsl
and
add
jmp
xchg
int
mov
mov
sub
idivl
in
movl
adc
xor
jno
into
or
mov
aaa
and
xor
popf
mov
repz
or
shr
xchg
pop
push
xchg
int3
or
mov
jl
push
mov
mov
and
xchg
lods
adc
into
xor
imul
xor
lret
test
lea
mov
add
shll
fdivl
lea
and
call
pop
mov
insb
in
or
aas
adc
jle
cmc
cld
fcoml
in
xor
jnp
popf
mov
jle
mov
mov
fs
clc
cmp
jle
fsubs
sub
test
mov
pusha
in
aaa
insb
sbb
adc
test
jmp
les
fildll
adc
xor
sbb
push
mov
pusha
pusha
jb
enter
fstps
jno
in
ja
jae
je
dec
mov
aad
jp
push
lret
fnstcw
jnp
icebp
jne
adc
push
push
in
xchg
cmp
addr16
sub
movsl
inc
aam
movsl
adc
push
jo
add
sub
xor
nop
inc
mov
inc
adc
fstpt
cmpl
or
or
filds
sbb
std
adc
sub
push
sub
mov
out
insb
pop
mov
in
xor
jb
test
push
shl
lcall
ret
call
xchg
loop
cmp
shrd
push
stos
mov
loop
lahf
push
mov
out
nop
mov
mov
xor
movsl
cs
jle
nop
add
xor
test
inc
fs
lret
sub
lret
sbb
mov
mov
js
mov
pop
negl
push
inc
jo
idivl
sahf
sbb
cmpsb
pop
aas
and
fisttps
sub
scas
out
ljmp
jecxz
xchg
mov
sbb
mov
sti
lds
scas
push
shrb
scas
sub
add
outsl
test
int3
decb
popf
insl
mov
mov
xchg
lret
cmpsb
addr16
mov
xchg
mov
in
fwait
push
adc
out
xor
mov
les
pop
cmp
decb
pop
jmp
shl
add
dec
mov
adc
jns
pop
inc
fsub
stos
xor
ja
int3
mov
cmc
fwait
jecxz
leave
movsl
test
add
mov
pop
adc
add
aas
gs
add
pop
scas
sub
andb
jns
cmc
cltd
mov
jecxz
or
into
in
out
or
mov
xchg
inc
push
inc
cwtl
rclb
test
and
or
add
xchg
jb
adcl
pop
das
push
in
test
pop
movsl
fcomp
dec
jecxz
js
ficompl
sbb
cmc
mov
jle
out
jge
fucomp
fldcw
lods
jge
fadd
adc
sub
movsl
pushl
mov
hlt
arpl
ja
dec
out
out
push
nop
mov
jecxz
lods
lea
push
stos
push
in
fucom
les
dec
mov
push
jg
add
adc
mov
ja
test
xchg
out
sub
in
jmp
orl
mov
out
pop
rcll
cmp
and
sahf
ds
jmp
imul
inc
inc
stos
jne
mov
mov
xor
xchg
pop
es
ja
inc
push
pop
mov
cwtl
ret
es
mov
xor
cmp
fmulp
js
pop
inc
mov
push
mov
or
out
out
insl
cwtl
fsts
pop
xchg
jo
inc
push
subb
subb
mov
and
and
sbb
jns
sbb
aad
addr16
fsubs
mov
lcall
scas
inc
xor
dec
clc
dec
js
cmp
fstpl
xor
add
aas
pusha
mov
jno
push
cld
mov
adc
add
adc
inc
xchg
mov
push
aam
test
sbb
sahf
orl
jae
fcomps
mov
jmp
fldt
or
jmp
pop
ror
loopne
mov
aaa
ficompl
push
push
loop
or
out
or
mull
pcmpgtw
add
movsb
int
addr16
nop
xlat
and
xchg
insl
leave
jb
test
sti
rolb
ficoms
inc
fists
scas
sbb
mov
xor
subb
insb
and
mov
mov
incb
jmp
sub
out
cmpl
xlat
stos
test
adc
fimuls
leave
int3
xchg
dec
cmpb
mov
andl
push
out
cmp
cmpsb
pop
xor
fdivrl
hlt
and
cmp
lds
xchg
push
inc
lods
mov
inc
xchg
outsb
mov
jns
and
loope
adc
icebp
jne
xor
imul
adc
pop
aam
arpl
mov
leave
push
jns
cmpsb
inc
inc
inc
sbbl
popa
push
jp
pop
jg
sub
imul
sahf
push
test
bound
mov
int3
in
fwait
sub
lods
mov
sahf
sub
daa
mov
fbld
mov
ss
or
push
pop
adc
mov
mov
xchg
in
push
sub
out
dec
cmp
out
and
push
adc
xchg
out
add
pop
push
pop
loopne
scas
pop
out
jl
xchg
push
arpl
mov
push
xchg
dec
jecxz
incl
mov
incb
dec
hlt
ret
movsb
mov
aam
push
fiadds
xlat
negl
in
gs
jg
add
pop
inc
ficompl
and
incl
push
add
jo
cmp
push
scas
imul
insl
fsubs
push
mov
rcll
mov
pop
mov
sbb
jbe
ljmp
rcrl
fucom
push
xor
xor
dec
and
addb
lds
xchg
out
mov
fistps
loopne
clc
cmp
lret
fst
cmpl
jmp
sub
pusha
sbb
inc
xchg
rorl
ret
arpl
sub
js
jbe
or
sub
int3
or
jnp
mov
lahf
fcoms
in
mov
dec
inc
sti
adc
pusha
add
xor
or
dec
sub
mov
adcb
mov
mov
cmp
mov
pop
add
xchg
jle
int3
mov
push
sbb
mov
loopne
ret
ds
mov
or
mov
push
sub
jle
pop
mov
add
scas
loopne
out
mov
mov
addb
xor
loope
imul
xor
jecxz
div
lds
pop
push
arpl
sbb
xsha256
cmpsb
xchg
push
loopne
out
jne
loop
jnp
sub
enter
xchg
fstpl
shl
dec
loope
scas
enter
call
lret
pop
rorl
pop
lahf
call
and
xchg
sub
pop
shl
jmp
mov
cmc
inc
out
daa
push
jnp
pop
pop
mov
inc
sbb
sub
add
popf
adc
inc
loope
stos
stos
or
pop
int3
mov
int3
lods
jmp
loop
jnp
cltd
and
adc
pop
shr
xor
inc
push
in
pop
add
dec
jae
push
adc
insb
fildl
ret
mov
aas
push
jmp
addr16
rcl
imul
dec
mov
cmp
jnp
repz
xchg
or
lcall
mov
dec
xchg
add
mov
sbb
icebp
lods
cmp
cmp
shlb
add
sub
mov
icebp
jle
aam
cmpb
jge
fs
mov
mov
les
lods
repz
pop
mov
pop
addr16
ret
jmp
mov
push
inc
jne
or
cmpsl
loopne
data16
mull
popf
fisttpl
cmp
mov
loop
ss
pop
mov
aaa
or
stos
inc
lcall
add
pop
or
pop
fidivrs
cmp
hlt
sahf
pushf
xor
je
sahf
inc
and
push
dec
cmpsl
ror
cmc
movsb
xor
mov
cmpsl
mov
push
mov
pop
bound
mov
mov
push
or
lret
dec
fbstp
jmp
mov
int3
test
or
arpl
into
cs
in
cmp
fcmovne
pusha
dec
mov
fistpl
jns
inc
jge
xchg
pop
daa
xchg
xor
cmpsb
aam
div
stos
mov
arpl
sbb
vpand
dec
jg
xor
add
push
mov
xor
or
pop
mov
stos
shrl
inc
xor
dec
pop
push
jns
das
in
mov
mov
mov
jmp
sub
sahf
add
mov
in
xchg
stc
fimull
fucomp
add
lahf
fmul
icebp
roll
shrb
push
dec
dec
jmp
and
std
xchg
adcb
in
repz
add
sbb
cmp
mov
jns
xchg
test
xor
cli
xor
mov
ds
xor
jne
xchg
cmc
lcall
outsl
push
cltd
mov
push
lds
das
mov
jae
adc
fildl
and
jno
adc
xchg
popa
mov
mov
dec
pop
dec
sbb
cmp
shlb
mov
dec
xor
xor
jl
push
ffree
cmp
std
sub
cmp
add
mov
sub
shll
or
pop
dec
and
js
shlb
jecxz
pop
and
in
aaa
mov
sbb
jo
xor
imull
xor
sub
mov
sahf
pop
push
sub
shlb
and
lahf
push
lea
incb
or
test
xchg
out
enter
rcll
ljmp
sub
ret
incl
into
movsb
inc
stc
std
adc
fsub
mov
loopne
sbb
andl
repz
adc
rcrl
mov
popa
inc
cs
push
pop
ljmp
xor
pop
call
and
push
ss
mov
enter
movl
and
outsb
xor
adc
pop
movsl
sub
and
and
mov
fbstp
and
mov
stos
clc
in
inc
xlat
push
xor
xor
add
in
mov
dec
out
pop
xchg
add
loope
add
lahf
push
dec
repz
jmp
and
add
jle
int3
xor
sub
popa
adc
pop
push
push
scas
or
clc
adc
out
aam
cmp
and
or
fiaddl
out
inc
jns
mov
insb
pushf
mov
fld
mov
js
sbb
mov
inc
xchg
ljmp
in
xchg
sbb
mov
mov
lahf
pop
cmp
xor
pop
push
sbb
loope
and
shrl
lds
sub
mov
cld
loopne
jnp
cmpsl
cli
pushf
or
aaa
iret
push
inc
sub
dec
shr
fdivrs
add
pop
jmp
xor
movsb
std
mov
pop
inc
mov
addr16
rdpmc
mov
out
push
sbb
je
iret
pop
cmp
out
jge
inc
push
ds
mov
aas
sub
shr
rclb
dec
adc
mov
sbb
sahf
inc
jge
stos
jge
imul
negb
lret
cmp
scas
xor
enter
inc
pop
ret
mov
lds
adc
andb
mov
mov
enter
add
call
insl
inc
addl
aas
or
shl
mov
mov
shlb
push
lods
test
xlat
fdivs
cmp
jl
cmpsl
pusha
xchg
push
mov
out
fdivs
lahf
xor
int
jbe
push
in
lahf
in
xor
mov
fsubr
adc
mov
mov
outsb
int
or
adc
gs
jb
mov
push
lds
lret
dec
rorl
lret
jmp
mov
sbb
mov
or
scas
lock
sbb
xchg
push
out
dec
fcmove
cltd
enter
mov
fsubl
inc
loope
and
pusha
movsl
sub
fwait
xchg
insl
pop
lock
adc
int
adc
adc
push
in
dec
xor
fsts
aad
test
jg
fildl
adc
jb
mov
lcall
ret
jecxz
frstor
rorb
cli
movsb
jp
into
push
call
aad
jg
xorl
shrb
adc
push
pop
mov
ret
cld
xchg
int
pop
adc
repz
jbe
mov
push
mov
jnp
out
leave
out
mov
push
shl
outsl
fcmovb
sub
pop
push
call
add
jl
gs
cli
push
xchg
mov
je
in
jbe
push
pop
sub
sub
fnstcw
dec
ja
stc
lcall
sbb
jo
jg
cmc
lods
jmp
popf
mov
cli
mov
ljmp
cmp
je
negl
mov
jge
xchg
jns
mov
mov
popl
aas
mov
xchg
add
or
lahf
cmp
and
pop
insb
and
jae
mov
je
xor
xchg
dec
xlat
in
pop
xchg
sub
sub
mov
aam
xchg
mov
pop
mov
mov
dec
fldl
roll
pop
sbbb
jg
adc
xchg
mov
test
int3
pop
test
add
or
mov
int
dec
daa
mov
jbe
and
dec
clc
or
imul
subl
arpl
rcl
repnz
pop
xchg
movsb
ret
sarb
xchg
outsl
jno
andb
dec
mov
insl
gs
jmp
xor
out
adc
repnz
ret
rcr
sti
add
test
iret
cmp
sbb
dec
dec
xchg
nop
fwait
pushf
sbb
int3
mov
jge
cmp
fildl
cmp
jno
pop
test
xor
sub
fwait
dec
je
in
ds
push
out
and
int
shl
pop
mov
mov
cltd
sti
mov
pop
and
sub
adc
insb
fisttpl
and
out
mov
dec
add
lahf
push
rcl
cmp
iret
sub
jne,pn
push
mov
xor
jg
shll
fildl
mov
mov
lcall
insl
inc
push
mov
jl
rcl
ret
je
pminsw
test
repnz
mov
pop
cmp
push
aam
sahf
add
xchg
gs
call
xor
push
int3
fnstenv
dec
inc
pop
je
mov
mov
jo
dec
loope
movsb
inc
rcrl
test
sub
pushf
xor
pusha
cwtl
lret
shlb
push
xor
arpl
neg
aas
add
mov
inc
shll
xchg
push
das
sbb
and
jecxz
or
jnp
daa
mov
mov
mov
inc
fsubp
pop
mov
dec
cli
outsb
icebp
mulb
push
push
pop
and
mov
and
fwait
dec
sarb
jo
imulb
push
mov
mov
stos
pop
popa
sti
int
aaa
xchg
adcl
cmpb
bound
mov
aad
enter
sbb
lret
xchg
sahf
rorl
push
inc
scas
lea
pop
pop
xchg
pop
adc
pusha
mov
das
xor
jb
out
leave
sti
ror
sub
inc
xchg
push
daa
mov
inc
fdivrs
pop
xchg
movsl
dec
fidivl
mov
and
jnp
jbe
pop
shlb
sub
rcll
mov
xor
push
push
jge
decl
fsub
outsl
fdivl
cmc
mov
add
lock
pop
fdivr
jnp
and
iret
mov
cmp
xchg
mov
or
insl
lods
xchg
cmp
roll
out
mov
add
xor
ret
mov
movsl
xor
jae
xor
lock
sbb
sbb
mov
xor
shr
sbb
scas
dec
mov
add
push
push
clc
test
mov
pop
ffree
jbe
or
lods
sub
lret
enter
push
test
add
fidivl
sbb
ret
fldl
sub
lcall
jae
sbb
addr16
pop
mov
sbb
push
fcmove
repz
mulb
shrl
lea
idivb
outsl
push
loope
mov
fs
ret
add
dec
xchg
mov
add
sbb
lahf
test
inc
lcall
xchg
add
sub
mov
or
push
lods
adc
cli
or
sub
or
inc
xor
sub
jge
movsl
je
addr16
mov
movsb
lea
pop
divl
out
pop
adc
imul
adc
aas
jbe
adcl
push
add
pop
sti
repnz
loope
popl
loop
jecxz
sub
or
xor
fisubrl
mov
insl
lret
dec
pop
sbb
and
loop
std
lcall
mov
xor
mov
out
nop
pop
es
xchg
imul
fidivrs
push
cld
inc
lret
fdivs
mov
ljmp
in
cmp
jle
pop
jo
addb
or
shll
loop
push
push
xchg
addl
gs
iret
sub
sub
add
xor
bound
rclb
mov
and
stc
xlat
mov
xchg
pop
add
mov
adc
push
popa
pop
fists
pop
inc
add
inc
in
lds
ficomps
cmp
add
inc
push
sub
push
push
mov
add
jno
hlt
cmc
jo
lea
mov
pop
lret
jo
push
push
out
or
aas
dec
lods
inc
push
jae
xor
mov
enter
mov
lods
idiv
xchg
sti
mov
and
sub
sahf
dec
push
inc
rolb
cwtl
ljmp
pushf
lods
cli
lret
add
fldl
push
pusha
pop
fnsave
movsl
dec
xor
clc
cmpsl
sarb
xchg
and
xor
pop
sub
jmp
fcomps
sbb
xchg
mov
dec
out
adc
xor
stos
mov
sub
sti
leave
pop
test
icebp
shll
arpl
std
mov
lcallw
ret
sbb
mov
cs
sbb
je
cs
int3
pop
jge
and
lahf
sub
sbb
pop
fmul
push
icebp
scas
jecxz
xchg
push
xor
jbe
scas
cmp
test
xchg
ljmp
xchg
inc
mov
mov
mov
dec
mov
dec
lahf
sub
int
mov
mov
jge
fcoms
stos
sub
sti
sub
sbb
cmp
aaa
bound
rorl
fidivl
fptan
xchg
dec
js
bnd
mov
icebp
xor
jne
loope
aaa
xor
out
mov
aaa
in
sub
add
mov
xor
ljmp
out
push
mov
and
cmp
ret
insb
cmpb
or
mov
and
cmpb
push
out
or
xchg
adc
pop
loope
xor
push
mov
sbb
ret
lret
into
rcrb
imul
sbb
popa
pop
xchg
push
jo
ret
jg
rolb
mov
sbb
test
sub
mov
pushf
push
rorb
jo
mov
jecxz
mov
or
lret
aam
sbb
std
and
ret
lock
or
shlb
sub
insl
pop
lds
sahf
jmp
loopne
add
cmp
mov
dec
out
xor
sub
popa
jl
mov
outsl
adc
fistpl
xor
insl
js
mov
xchg
dec
pusha
icebp
mov
mov
icebp
sahf
in
pop
stos
push
ljmp
dec
and
or
pop
xor
mov
push
push
stos
in
mov
dec
scas
xor
jle
out
push
sarl
out
mov
std
mov
push
imul
pop
dec
cmpb
fstpt
and
jmp
jo
mov
inc
jb
push
sbb
mov
leave
jge
shlb
push
jns
lret
push
in
adc
cmpsb
out
es
ss
sbb
leave
in
imul
add
mov
jae
adc
sub
pop
sub
mov
or
push
dec
mov
ljmp
jge
repz
je
scas
aas
pop
sub
dec
call
pop
add
mov
jb
pop
pushf
mov
push
sbb
and
inc
xlat
ret
jg
mov
push
orb
das
nop
sti
sahf
lods
inc
cmp
lret
and
subb
fs
dec
fisubrs
xor
popa
mov
pushf
mov
sub
movsb
loope
lret
pushf
idiv
cmp
ja
jge
push
push
in
es
xchg
mov
lahf
adc
inc
outsb
or
push
or
cld
fildl
shrb
cmpsb
pop
dec
inc
pop
pop
rcll
popa
xchg
push
sbb
lods
xor
sbb
flds
dec
adc
cmpsb
test
mov
inc
mov
lock
sbb
jl
mov
loop
movsb
and
jno
fisttpl
cwtl
mov
fs
or
and
mov
out
jbe
jb
or
icebp
in
cmp
cltd
xchg
xchg
flds
scas
pop
fimull
push
adc
mov
push
mov
or
push
cmp
into
das
imul
dec
imul
into
cmp
negb
lea
hlt
mov
and
dec
ljmp
xchg
add
mov
div
cli
jp
out
jl
adc
dec
pop
cmp
inc
ret
ficomps
aad
dec
jmp
jl
je
jne
in
cli
cmp
rorl
dec
ret
les
lods
out
jns
sub
repnz
jne
sub
inc
ret
imul
aas
stos
lds
ret
inc
mov
shll
mulb
fwait
mov
mov
dec
adc
mov
sub
mov
sub
dec
cmp
mov
ss
nop
sub
loopne
cs
xchg
jne
imul
mov
pop
out
pop
repnz
pop
jl
aas
cmc
mov
rcrb
add
xchg
inc
mov
cmp
add
jge
mov
cmp
scas
shlb
mov
pop
fsubp
andl
push
adc
scas
int3
decl
inc
sbb
nop
jl
add
nop
cli
jp
sbb
lods
xchg
fbstp
test
or
scas
lahf
mov
clc
ret
dec
and
inc
fsubs
adc
stos
fcompl
xchg
movsb
shlb
sbbb
lock
cmpsb
or
scas
int3
jp
stc
es
mov
jp
push
jge
ficomps
rorl
cmp
lahf
sarb
addr16
out
push
fnstsw
fists
cmc
mov
mov
rolb
cli
int
dec
cmpsb
push
testb
das
cltd
pop
cmp
inc
mov
cld
stc
insl
jno
xchg
and
movsb
fisttps
rclb
jo
fcmovne
dec
pop
dec
mov
pop
std
mov
jbe
cltd
mov
lock
push
fs
dec
pop
push
xchg
xlat
lods
adc
xor
push
cmp
push
cli
jmp
inc
jb
mov
push
jbe
sbb
test
sbb
out
in
pop
inc
jmp
rol
jp
daa
adc
and
xchg
jo
mov
je
loope
mov
roll
sbb
adc
lret
pop
pushf
jp
mov
xorl
bound
not
jmp
lock
in
pusha
mov
push
ja
and
in
sbb
cmp
out
sbb
fisttpll
jp
cs
cmp
enter
mov
fcmovne
into
jb
je
add
insb
push
pop
jmp
lods
in
loop
mov
push
cmp
sbb
adc
dec
roll
sub
mov
std
pop
sub
lret
addr16
fistl
rcrl
ja
adc
mov
popf
inc
lret
cwtl
or
add
and
mov
jmp
adc
enter
stos
mov
mov
dec
in
jp
pop
fdiv
add
and
insl
lods
xor
and
test
pop
int3
insl
bound
sub
leave
push
fidivs
pop
lcall
add
add
int3
jo
nop
es
lret
call
inc
jb
cli
push
inc
sbb
jle
addr16
cmc
dec
sbb
push
bound
push
dec
mov
daa
or
jne
movsb
add
cld
js
pop
lcall
imul
cmp
mov
insb
lock
sub
sbb
mov
notl
rcr
adc
ret
fadds
jmp
pop
jge
or
mov
push
dec
xor
lahf
loop
icebp
push
out
lahf
pop
pop
and
jne
clc
fldl2t
movsl
std
push
cmp
push
xchg
adc
and
ss
push
mov
jb
add
inc
push
sahf
movsl
push
mov
movsb
jnp
subl
pop
fbld
sbb
add
dec
mov
jmp
sub
cmp
inc
inc
jbe
out
mov
push
and
or
jae
shrb
ds
insb
inc
jecxz
in
fxch
cs
mov
in
or
loope
lret
dec
scas
or
xchg
jmp
xchg
scas
push
testl
inc
xchg
icebp
fmull
mov
je
or
repnz
in
mov
jg
xchg
stc
push
cmp
lea
loope
das
jmp
fidivs
subl
fcomps
lret
jb
jmp
cltd
out
lret
icebp
lea
jecxz
test
dec
adc
sahf
aas
stc
repnz
pusha
stc
pop
xchg
mov
inc
lret
jle
iret
and
clc
pop
cs
and
notl
fsubrl
add
xor
movsl
push
jb
mov
mov
movsl
jecxz
rorb
and
mov
xlat
sahf
jbe
inc
add
out
call
popf
leave
mov
xchg
mov
add
pop
or
int
cld
imul
and
xchg
xor
cwtl
mov
cmp
sarb
mov
ja
mov
push
jns
jl
fstl
jbe
add
je
and
xchg
shlb
sbb
jb
or
mov
dec
repnz
cmp
icebp
mov
fistps
ret
imul
leave
and
inc
jg
les
pop
lods
xor
xorl
fs
xor
adc
aas
add
pop
or
mov
callw
adc
mov
loopne
adc
out
jp
adc
cmpsb
jne
arpl
and
inc
fwait
test
inc
stos
sbb
std
jle
adc
ja
cld
js
adc
inc
jl
xor
cmpsb
xchg
cld
test
and
int3
pop
sbb
jae
stos
int
push
test
iret
cmp
ljmp
fmull
adc
inc
xor
fdivr
push
iret
mov
inc
mov
jnp
popa
mov
call
call
mov
in
xor
cs
jne
pop
inc
mov
out
mov
cmp
or
rcl
incb
fxch
add
mov
arpl
xor
nop
and
or
xor
adc
sbb
js
pop
inc
sahf
push
xor
xchg
and
add
cmp
arpl
cwtl
sub
inc
int3
js
lcall
cs
push
adc
flds
dec
bndldx
or
dec
std
sti
push
notl
test
test
push
sub
mov
sbb
adc
imul
nop
sbb
addb
repnz
sub
jnp
insb
rcrl
sbb
repnz
push
dec
sahf
arpl
sbb
xor
lods
jp
data16
loopne
jo
mov
into
cmp
adc
lcall
hlt
cli
ja
mov
pop
cwtl
or
inc
shll
ljmp
sti
cmp
fwait
ret
push
mov
mov
movsl
sub
adc
jno
push
ret
insb
push
addr16
sar
mov
test
mov
lcall
cld
xchg
lock
nop
mov
pop
sbb
xorb
enter
pushf
sar
xor
pop
repnz
jp
lock
jno
popf
and
xor
fistpll
and
jo
add
lahf
or
fcmovne
add
ljmp
push
push
imul
fs
in
sti
push
mov
repz
cmpsl
xchg
clc
mov
and
clc
subb
push
jae
test
ja
popf
add
adc
addr16
add
xor
mov
sti
xchg
rolb
dec
sub
or
adc
xchg
or
or
inc
add
sbb
jmp
fldt
or
xchg
xchg
pop
aaa
inc
in
adc
js
pop
dec
aam
test
ficoms
iret
push
add
cmp
test
shl
sbb
outsb
push
hlt
fidivl
test
cmp
and
mov
xlat
add
test
xor
cmc
cwtl
mov
lcall
js
rcll
sbb
cmp
mov
add
in
js
cmp
shlb
or
inc
iret
sub
mov
rcrl
cli
mov
fistl
fsts
mov
sbb
jmp
jl
add
inc
dec
lcall
sti
cmp
cmp
cmp
sub
dec
sbb
lcall
xor
mov
notl
add
dec
int
mov
mov
out
cmp
push
cmp
loop
imul
les
ss
fprem1
or
sub
andb
sbb
xchg
lds
mov
stos
add
js
adc
popf
icebp
cmpsl
hlt
mov
ds
mov
or
dec
jl
loopne
subl
adc
out
pop
int3
call
mov
push
mov
lret
stc
aas
ror
dec
test
mov
outsl
xchg
stos
xchg
aam
test
loopne
pushf
or
mov
pop
push
mov
stc
ja
mov
iret
mov
loopne
cmp
imul
stos
sub
mov
adc
jb
pop
mov
ljmp
mov
mov
inc
dec
and
sbb
push
imul
data16
jp
inc
pop
ja
cmp
sub
imul
pop
imul
jo
or
mov
or
adc
movsb
jle
std
in
jecxz
fmull
popa
jo
mov
and
jb
inc
cmp
jmp
inc
dec
in
adc
dec
pop
pusha
add
and
jno
jmp
lea
dec
test
das
nop
mov
and
enter
clc
push
lahf
dec
pusha
or
mov
pop
mov
dec
in
outsb
mov
cmp
stos
mov
fldenv
sub
cmpsb
push
jb
mov
inc
lods
pop
sub
sub
and
ud1
popf
dec
call
cmpsb
pop
je
add
in
jp
xor
pop
jno
dec
pop
lea
fistl
mov
pop
ja
mov
fucomip
inc
sbb
sub
stc
mov
push
pusha
mov
in
fisttpll
mov
out
pop
mov
dec
ja
jg
dec
push
mov
out
and
leave
loopne
fmuls
cld
and
cld
test
mov
repz
jnp
and
cmp
subl
sub
mov
and
adc
int3
jl
stc
cmpsl
ficoms
insl
sbb
xor
lods
xchg
adc
adc
mov
addl
sub
cmp
pop
ficoml
insb
inc
add
dec
mov
mov
notl
xchg
cs
xlat
sti
mov
xor
jo
pop
ja
jae
sbb
push
fcompl
std
and
pop
mov
inc
inc
and
shlb
pop
or
inc
push
add
inc
push
or
cmp
addr16
es
loopne
aas
stos
js
int
and
ds
mov
aas
pop
cmpsl
shrb
or
cld
push
inc
xchg
mov
pop
movsb
lods
sahf
into
mov
mov
cmp
mov
cmpsl
jge
dec
mov
sar
sbb
subb
aad
jne
loope
sbb
leave
jp
daa
push
mov
adc
or
sar
sub
fs
int3
je
scas
lret
xchg
xchg
push
icebp
jnp
xor
leave
leave
mov
jg
xlat
jb
ret
in
adcl
push
pop
dec
popa
call
out
push
cmpsb
mov
fistpll
das
and
mov
inc
and
mov
dec
jo
cmp
xchg
imulb
pop
ret
pusha
hlt
lods
aam
xchg
lods
push
jecxz
shl
jmp
jb
push
pop
andb
pop
lcall
cmp
shll
cmpsb
xorl
cli
mov
push
xlat
mov
loope
lcall
dec
mov
add
arpl
add
pop
in
scas
int
addr16
sub
popf
sub
std
ljmp
jbe
mov
mov
sbb
pop
arpl
fcoms
add
jno
lret
mov
jbe
cmpsl
fildl
sete
mov
add
mov
jne
dec
sbbl
jno
inc
cmpsb
cmp
lret
out
xchg
dec
lahf
ds
in
leave
dec
sub
test
xchg
out
pop
xchg
jl
out
or
cwtl
jno
shr
pop
aas
arpl
cmp
decb
or
sub
fbstp
insb
pop
test
sub
push
adc
test
in
mov
loopne
out
sbbb
jno
sbb
iret
xor
mov
push
dec
push
xchg
xchg
mov
roll
loopne
ja
fwait
cmc
dec
mov
inc
mov
sub
icebp
test
pop
dec
pop
arpl
push
clc
jae
mov
stc
bound
lock
loop
int
ret
xchg
aas
ja
adc
clc
dec
in
faddl
mov
mov
out
and
ret
hlt
xchg
xor
cmpsl
adc
movsl
mov
adc
jns
sub
or
popf
or
mov
sub
ds
mov
cmp
cmpsl
xchg
jp
pop
daa
mov
pop
dec
ret
add
mov
push
aam
subl
testb
out
and
ja
cltd
stc
sti
hlt
inc
mov
lods
vmovss
jge
cmpsl
jmp
stc
imul
dec
std
mov
mov
sti
push
mov
fdivrl
sbb
inc
pop
pusha
lods
stos
shrb
je
cmp
popa
inc
scas
fcmovu
outsl
loop
aam
clc
cmpsb
pop
mov
and
fmulp
lds
jnp
std
fst
mov
and
pushf
fdivrs
pusha
popa
inc
adc
mov
cmp
mov
cmpsb
into
lock
mov
testb
ss
mov
dec
jno
stos
mov
lcall
cmpsb
out
dec
cmp
cmpsl
aam
fdivl
sbb
pusha
inc
push
les
lods
ds
loop
mov
jae
mov
push
ds
sbb
mov
push
les
sub
sbb
out
insl
xor
jae
fidivrs
pop
iret
push
dec
push
jg
out
pop
pmulhuw
mov
xor
pop
jp
sub
mov
jl
neg
loop
aaa
ss
or
dec
xor
dec
mov
push
ret
int3
dec
out
push
push
addr16
mov
out
lds
sbb
rorb
push
jmp
xchg
ret
or
aas
test
lods
adc
xlat
scas
xchg
mov
in
aad
lods
lds
popa
lret
jmp
add
arpl
mov
lods
push
es
dec
out
insb
fsubs
testl
dec
je
iret
adc
and
test
cmp
sub
aad
and
lods
std
pusha
lods
mov
adcl
cmp
ret
je
sub
enter
pushf
pop
xchg
ror
lret
mov
adc
icebp
sahf
xchg
xchg
dec
mov
mov
push
jg
int3
xchg
push
push
lcall
xchg
js
push
lods
jle
notl
popa
js
pmuludq
mov
rcrb
mov
mov
xchg
fucomp
and
add
aam
test
mov
cltd
sub
push
outsl
or
jge
fcomp
js
jg
push
xchg
popa
xchg
fs
cld
dec
daa
dec
test
dec
out
inc
adc
pop
sbb
push
or
xor
cmpl
jp
mov
xchg
fcomip
popf
cmp
cmp
jge
mov
into
test
sub
stos
mov
cltd
and
mov
cmpsb
int3
jns
daa
iret
pop
mov
sarb
xor
pop
not
pushf
lcall
ja
mov
add
push
xor
and
mov
sarl
pusha
jecxz
cmp
jge
lds
lahf
outsb
insl
xor
hlt
adc
xor
data16
inc
and
fwait
adc
movsl
stc
sbb
xor
sbb
jne
cmp
loop
push
jmp
jle
loopne
dec
roll
fwait
outsl
adcl
mov
add
in
or
pop
inc
outsl
cmp
imul
adc
dec
mov
daa
inc
inc
mov
hlt
mov
xchg
and
dec
fcmove
push
jno
inc
aam
jge
xchg
push
mov
pushf
mov
jo
dec
jae
movsl
imull
jb
push
mov
stc
sbb
outsl
push
push
lcall
inc
sub
cmp
pop
cmp
inc
cld
fisttpl
fcomps
or
jne
outsl
push
arpl
dec
and
mov
cmp
cmp
gs
sub
movsb
into
shll
stos
pop
jmp
popa
adcb
mov
jle
or
fistps
rorb
and
test
ret
js
push
out
rcll
xchg
fidivrs
jg
into
xchg
popa
inc
push
jge
dec
testl
pusha
jne
xacquire
adc
fisttpll
mov
add
jmp
rol
scas
stc
dec
sbb
push
pop
lds
jge
push
out
imul
xor
mov
pushf
mov
cwtl
push
pop
xchg
negl
add
xor
sbb
jmp
sbb
in
int3
aam
es
out
js
inc
insb
jmp
sti
dec
xor
pop
addl
mov
mov
mov
add
sub
xor
jge
cli
add
mov
stos
xchg
pop
icebp
adc
xor
push
mov
fcomps
in
xor
cmp
aas
pushf
lret
jecxz
sub
dec
jg
aad
mov
test
ja
or
pop
rdpmc
test
out
push
adc
jno
mov
sub
lods
xor
popf
and
movsb
or
ja
ss
sub
stc
inc
lahf
sub
loope
mulb
pop
or
cmpsl
scas
add
dec
bnd
out
mov
cmp
fs
sub
push
das
fnstsw
sub
shlb
and
lods
or
fistl
push
inc
jne
xchg
or
xor
imul
je
jns
mov
push
sub
push
cwtl
test
popf
inc
or
mov
mov
push
adc
movsb
add
inc
loope
jns
rcll
flds
scas
pop
xor
ret
jbe
lods
orl
out
sbb
test
and
leave
and
xchg
push
sbb
insl
jp
jns
mov
mov
inc
mov
fwait
scas
insl
shlb
add
fmuls
fwait
jb
loop
daa
outsl
dec
mov
sub
gs
sbb
jns
dec
adc
or
cmp
sub
test
cwtl
je
dec
push
movsb
je
pushf
mov
lret
mov
ja
lcall
aaa
adc
add
repz
push
ljmp
mov
or
imul
mov
inc
or
mov
mov
mull
cmp
imul
loope
sub
or
dec
cmc
sub
adc
xchg
jmp
xor
sub
sti
daa
mov
and
cmovb
mov
xchg
movsb
inc
sub
mov
push
and
sti
addl
repnz
sarl
mov
ficompl
outsb
mov
push
addr16
addb
jg
sbb
cmp
mov
into
pop
push
pop
xlat
jle
add
scas
sti
push
hlt
stos
push
icebp
in
into
inc
cwtl
in
push
aad
or
pusha
mov
les
hlt
mov
cli
out
call
adc
cmp
pusha
cld
lods
aas
cld
rol
out
cmp
mov
or
dec
imul
lret
cmp
adc
or
cmpb
shlb
cwtl
mov
sub
add
dec
pop
std
test
hlt
mov
push
test
dec
sbb
outsl
mov
nop
out
pop
dec
push
add
icebp
sarb
pop
add
pop
pop
test
jge
and
dec
mov
imul
test
inc
rol
lahf
mov
std
outsb
jo
add
loopne
mov
leave
dec
jbe
lock
jle
in
hlt
daa
jl
sub
mov
or
pop
aas
sbb
scas
and
add
repnz
testb
and
sbb
or
lds
sub
mov
xchg
lea
xor
fcoml
mov
lret
pushf
xor
xchg
push
sub
or
sbb
jns
je
popf
test
int3
push
dec
rcrb
mov
jbe
dec
mov
adcl
adc
or
std
mov
rorb
in
xor
int
xor
cmp
movsb
pop
fstl
leave
push
jecxz
inc
jae
loope
push
jl
test
out
call
sub
lea
push
outsb
sub
cmp
aam
or
xchg
insb
int3
xchg
sbb
pop
adc
xlat
xchg
rcl
cmp
or
jo
arpl
sub
mov
mov
xor
mov
cmc
mov
mov
pop
test
cmp
into
add
sbb
xor
fcom
lcall
xchg
int
mov
mov
loope
out
fisubs
or
pop
out
loop
mov
ds
mov
lahf
mov
sti
sbb
mov
ljmp
loopne
into
sarl
dec
push
rclb
cld
sub
test
pop
nop
int3
adc
aaa
shrb
mov
mov
shr
fcmovnb
movsl
and
fsubl
jae
adc
mov
lcall
bound
sti
or
out
es
mov
xchg
js
sahf
int
aam
xor
adc
ja
add
negl
loop
xchg
shll
push
mov
add
dec
jge
adc
mov
fwait
xchg
shrb
dec
mov
aaa
sbbl
xchg
ljmp
cmp
mov
adc
sbb
ja
hlt
ficompl
dec
into
xor
leave
cmp
ljmp
xor
xor
fwait
movsl
pop
out
mov
out
mov
repnz
out
sbb
jl
shlb
gs
mov
mov
ja
inc
mov
add
call
jb
fldenv
addl
jl
add
jae
adcb
push
mov
sub
cltd
dec
sub
jp
cmpsl
mov
iret
dec
jo
in
shrb
sub
sub
cmp
jmp
inc
ret
pusha
pop
pop
jo
pop
pop
loope
jae
cmp
jno
mov
sbb
mov
adc
rorl
dec
xchg
enter
xor
fs
fisubrl
hlt
mov
xchg
mov
mov
pand
out
daa
dec
loope
fimull
sub
shlb
shl
orb
pushf
cltd
mov
in
fnstsw
sbb
lods
icebp
push
cmp
push
lds
mov
dec
std
addr16
movlhps
fstps
sti
rcr
out
pusha
lea
push
loop
ret
repnz
shl
out
sub
fnstenv
jmp
pop
bound
test
inc
sahf
inc
add
enter
das
push
stc
or
movsl
xchg
push
jo
fcmovb
lret
arpl
xor
sbb
add
leave
mov
hlt
or
mov
sbb
mov
das
insl
jb
mov
imul
aas
std
pusha
mov
repz
outsl
insb
dec
sub
cmp
mov
lods
xchg
cmp
hlt
adc
cmp
inc
sub
mov
sbb
mov
daa
mov
sub
scas
pop
lret
movsl
pusha
xchg
push
lret
add
xchg
push
in
iret
mov
ja
sti
pushl
cmp
ret
pop
cmp
sub
and
xor
test
jg
mov
sub
in
pop
dec
add
ret
jns
shr
repnz
loop
fidivs
sbb
mov
daa
and
mov
add
lea
out
in
mov
das
push
adc
inc
into
xor
outsl
adc
lods
or
lret
rcrl
add
je
jl
scas
push
fldl
es
outsb
and
jnp
js
divl
test
push
push
dec
push
jnp
cmpsl
push
lahf
inc
mov
pop
mov
pop
mov
xchg
sbb
pop
xchg
int3
iret
dec
popa
sahf
pop
cmp
dec
ljmp
movsb
sub
inc
mov
mov
movl
addr16
push
test
jns
dec
mov
and
data16
sbb
dec
dec
sahf
in
pop
rclb
fstps
lahf
pop
lcall
dec
inc
aam
divl
in
sub
sub
mov
scas
into
jecxz
dec
in
stc
push
jae
mov
ret
fmull
or
sub
sbb
push
xchg
mov
mov
mov
mov
sub
dec
inc
and
test
adc
sub
xor
aaa
dec
adc
insb
mov
movsl
mov
mov
loopne
sbb
ds
pop
cmovae
add
ja
mov
mov
cmp
ljmp
js
xor
adc
sub
sbb
mov
jge
cmp
sbb
inc
inc
jae
popf
and
shlb
leave
dec
icebp
movsl
and
push
or
jl
out
clc
cmpsl
jbe
mov
lahf
jae
cli
xchg
in
mov
xor
lods
mov
jne
dec
push
cli
push
cld
push
nop
pushl
aam
flds
pushf
daa
cmp
sarb
pop
xor
fidivrl
inc
mov
ljmp
sahf
stos
stc
sbb
xor
ja
and
rorl
sti
mov
xor
in
outsl
xchg
mov
lock
cltd
mov
aad
sbbl
cwtd
aas
xchg
je
push
cmp
or
inc
inc
loop
mov
and
dec
icebp
mov
jmp
enter
imul
jge
cld
sbb
incb
fwait
push
mov
cmp
adc
sarb
cwtl
dec
inc
sbb
and
sub
add
hlt
push
stos
ret
fldl
jmp
adc
sub
push
add
outsb
prefetcht1
rcrl
pusha
std
mov
das
jnp
add
and
push
cwtl
inc
mov
xor
ret
idiv
test
xchg
add
push
xchg
ror
dec
cs
mov
adc
add
scas
ja
idivl
ror
cltd
mov
xchg
adc
into
sub
xor
test
sbb
mov
and
mov
add
xor
js
ficoml
mov
popa
jmp
out
lods
fnsave
insl
xor
jnp
or
push
pop
insb
mov
iret
jp
js
popf
jo
clc
cmp
iret
outsl
adc
leave
int
xor
and
add
push
icebp
or
outsb
insl
dec
pop
scas
jns
repz
in
mov
int
rcll
xchg
push
sbb
cmpsl
ror
data16
or
mov
out
aam
lods
lods
sub
pusha
jp
add
mov
push
cld
inc
in
jne
mov
add
jnp
fdivrp
pop
sahf
or
add
bound
mov
xchg
mov
push
daa
das
adc
xor
mov
dec
jo
jge
lock
xor
xchg
rcr
xchg
in
push
sub
scas
push
xchg
mov
cmp
gs
pop
shlb
jl
mov
daa
pop
jne
cmpsb
push
cmpsb
cmp
or
mov
dec
xchg
call
cmc
cmp
push
shl
mov
out
xchg
in
sub
xchg
jb
jbe
xor
es
imul
fmull
xchg
mov
inc
pop
push
hlt
jmp
push
dec
xchg
jmp
pusha
cmp
xchg
mov
xchg
adc
rep
jnp
cmp
rol
cmp
out
sbb
mov
adc
cmc
aaa
repnz
gs
les
clc
sub
add
xchg
inc
sbb
and
mov
push
inc
cmpb
cmpsl
cmp
fistpl
inc
inc
inc
pop
mov
mov
insl
xchg
push
push
sbb
pop
mov
mov
push
movsl
push
imul
fcom
aad
scas
stc
inc
fucomip
sbb
jbe
pop
xchg
bound
ret
dec
push
mov
sub
adc
mov
jl
gs
cmp
rcrb
cltd
cmp
inc
pop
push
mov
fcoms
pop
mov
gs
mov
mov
fisttpll
movsl
or
aas
mov
test
je
push
addr16
int3
mov
inc
dec
jg
dec
fs
mov
addr16
outsl
sub
dec
jo,pn
mov
cmp
in
fcom
inc
push
sub
inc
aas
push
add
ljmp
xchg
sbb
orb
loope
movsb
inc
mov
mov
outsb
push
ret
xor
test
push
cltd
adc
std
dec
into
add
ss
rcr
jo
dec
cmp
shlb
dec
inc
adc
mov
and
and
add
popf
sti
or
push
sub
jnp
inc
or
sbb
sbb
and
pop
shrl
and
mov
sub
xchg
ret
bound
sub
xchg
inc
mov
cmp
cmp
pop
jo
sub
mov
and
xchg
out
enter
push
in
sbb
pop
repnz
adc
mov
sbb
jmp
pop
sub
mov
incl
push
ret
sti
push
dec
or
faddp
pop
popf
jg
or
push
sbb
or
inc
outsb
lahf
aaa
and
nop
jae
ror
std
jbe
je
inc
movsb
popf
cli
xor
inc
cmpsb
dec
cli
cmp
adc
imul
or
pop
push
pop
ds
outsb
jno
sub
pop
jg
int3
in
mov
pop
imul
sbb
gs
in
add
mov
ret
loope
pop
std
inc
in
imul
xor
or
adc
test
jl
mov
sar
sbb
dec
mov
dec
or
and
add
adc
arpl
in
int
fistpll
lret
xchg
mov
bound
mov
push
mov
mov
xchg
das
call
xorb
in
leave
test
inc
pop
jbe
pusha
repz
or
cmpsb
jne
shll
les
adc
out
clc
sbb
add
sbb
leave
jmpw
rolb
fidivrl
mov
stos
xor
inc
insb
imul
jle
test
out
iret
adc
add
jae
cmp
add
outsl
js
ljmp
mov
adc
cmp
mov
sub
push
jmp
xchg
shl
out
inc
imul
mov
jo
adc
in
aad
inc
mov
je
add
stc
inc
push
clc
call
jmp
std
mov
lcall
stos
jb
and
inc
repnz
adc
jle
lock
inc
les
flds
jae
cmc
adc
sub
xchg
fisubrl
loop
jge
push
jae
fbstp
fwait
out
test
add
dec
push
or
xchg
cmp
sub
fcomi
or
cld
cli
inc
jb
pop
mov
icebp
mov
js
mov
cmpsl
bound
mov
cld
mov
mov
pop
pop
shl
lret
mov
outsl
adc
pop
inc
xor
dec
cmp
jb
pop
aad
dec
sub
inc
or
pop
mov
mov
popa
pop
mov
pop
cmp
cmpb
sub
and
shrl
lds
mov
pushf
scas
rol
inc
stos
loope
xchg
testl
sbb
repz
cmpsb
xchg
out
sbbb
xchg
push
dec
rcrb
into
shll
jo
and
dec
sbb
xchg
dec
sub
sbb
xchg
dec
inc
jbe
sbbb
and
add
jns
out
pop
addb
cmp
jns
pop
in
mov
adc
and
aad
jne
jecxz
repz
adcb
stos
push
push
cwtl
in
inc
jl
or
jnp
adc
popa
adc
imul
push
or
aas
add
shl
xor
or
jno
cmp
push
or
pop
inc
xlat
stc
pcmpeqd
das
in
cmp
mov
je
inc
inc
ljmp
fld
movsl
inc
inc
adc
roll
jo
popa
push
push
or
cld
nop
mov
fyl2x
ss
mov
xor
sub
pop
les
in
mov
mov
fsub
nop
mov
xor
stos
test
shr
enter
add
or
adc
es
xchg
mov
sbb
fdivr
xchg
jno
test
xor
xchg
cmp
mov
mov
push
pusha
mov
je
into
into
pop
jo
rcll
aaa
sub
inc
dec
pop
idivl
test
mov
cmp
les
xchg
mov
mov
je
insl
or
aad
mov
sbb
sbb
pop
enter
inc
mov
fld
jb
add
aad
outsb
call
cmpb
sbb
mov
cltd
lds
jb
fstp
fwait
dec
rorb
cmpsb
fmul
xchg
ret
fimull
lods
pop
repz
sarl
mov
jne
ret
repnz
fcmove
dec
pop
cld
fsub
insl
pop
icebp
sbb
cmpb
and
pop
cld
insl
add
sbb
mov
or
cmp
lret
mov
lods
popa
inc
sbb
add
sub
andb
lds
xor
incb
push
mov
mov
mov
enter
jo
jg
jbe
loope
clc
push
fisttps
mov
or
jg
sub
cmpsb
cld
ret
mov
xchg
insb
stos
xor
xor
jb
mov
add
push
sti
clc
or
pop
pop
inc
sbbl
cmp
inc
bound
push
aam
lcall
pop
dec
sbb
fwait
pop
rclb
jle
sbb
out
sbb
push
dec
mov
mov
dec
mov
popa
jmp
fs
jg
mov
in
cmp
xor
es
mov
push
mov
lods
jno
cmp
push
call
jo
into
scas
sub
faddl
pop
jl
jmp
lods
inc
mov
jp
jbe
mov
cmpsb
pop
push
and
cmpsb
lcall
nop
das
in
jmp
xor
push
in
ret
les
mov
sub
jns
addb
daa
lcall
rolb
push
inc
sar
mov
lods
xchg
dec
and
mov
ret
popa
fidivrs
mov
lods
mov
or
movsl
inc
daa
ds
aad
and
lcall
movsl
mov
fcoml
sbb
xor
mov
hlt
pushf
adc
fwait
jecxz
outsl
imul
cmp
fsubrs
mov
and
xor
stos
jnp
cmpsb
xor
data16
mov
push
inc
and
sbb
mov
and
fwait
and
and
adc
or
dec
sti
aaa
mov
push
iret
push
js
dec
push
pop
cmp
inc
insb
lods
mov
js
loopne
js
fimuls
ret
adc
cltd
pop
lret
fnstsw
int
nop
data16
or
lret
incl
push
xor
out
jb
out
ja
loopne
lret
cmp
cmpsb
mov
fs
fldcw
add
stos
enter
imul
add
mov
cs
or
mov
fildll
mov
inc
jge
xor
xchg
outsl
pusha
cmpl
addl
or
lock
mov
add
jne
ss
mov
lods
cmp
add
stc
in
jo
mov
into
push
jmp
cli
mov
imul
bound
fcomi
lahf
pop
adc
scas
bound
cmp
push
add
cli
inc
fs
mov
and
test
and
xchg
pushf
push
cmc
imul
lret
or
sub
js
jg
xor
mov
inc
add
sbb
mov
push
fisttpll
js
mov
stos
pop
jo
mov
fcompl
mov
sarl
dec
incl
and
xor
mov
pop
arpl
loopne
inc
mov
cmp
decl
mov
cmp
xor
test
int3
sub
shlb
dec
arpl
add
mov
movups
ja
jns
dec
popl
loopne
add
enter
push
cli
jns
jg
mov
in
outsb
ss
ret
or
mov
jae
cmp
xor
iret
lcall
dec
xchg
dec
and
push
shrl
cli
push
stc
xchg
pushf
cmpsl
mov
ret
xchg
fs
in
dec
loopne
cmp
inc
pop
sbb
lret
push
jbe
dec
or
pusha
out
push
testl
vmovntps
xchg
cs
pop
test
sbb
mov
jb
cli
inc
popf
xlat
nop
sbb
ss
hlt
add
sbb
push
xchg
add
testb
pushf
pop
aam
dec
pop
das
cmp
loope
jg
adc
ret
add
jg
stc
cmp
daa
dec
das
mov
or
les
jp
lret
notl
das
add
mov
fiadds
or
mov
jno
mov
add
adc
pop
test
negb
cmp
fwait
sbb
jae
pushf
jno
shlb
xchg
mov
fnstenvs
pop
mul
cmp
lods
mov
xchg
mov
dec
mov
jmp
add
cltd
lods
fcomps
jle
cmp
adc
fwait
fwait
in
push
jmp
imul
mov
xor
fdivrl
push
pop
xor
adc
sbb
xchg
enter
iret
into
gs
mov
and
xor
hlt
mov
xor
mov
pop
pop
loop
pop
popa
adc
fwait
lea
xchg
xchg
movsl
cwtl
jo
shrl
xchg
sti
cmp
sub
mov
lea
mov
jno
pushf
fwait
int
fucom
movsl
jmp
lahf
xor
sub
mov
or
mov
pop
outsb
pop
imul
decl
lcall
popf
mov
loope
mov
xor
mov
test
leave
test
jg
mov
or
sbb
push
adc
mov
pop
rorl
loope
stos
pop
push
out
dec
sbb
pop
hlt
push
outsl
mov
mov
jge
cmp
dec
sahf
mov
lcall
das
dec
sub
mov
jl
jbe
lods
xor
sahf
sub
lock
mov
xor
aas
daa
test
push
sbb
push
iret
inc
lea
push
shl
mov
es
inc
dec
mov
sub
dec
xor
mov
arpl
or
mov
cli
mov
scas
mov
sub
xchg
mov
repz
sub
push
adc
test
test
cmp
fs
mov
rol
daa
adc
stos
punpckhdq
mulb
xor
imul
sbb
nop
xor
clc
scas
pop
sbb
popa
rcr
mov
inc
cmp
test
mov
dec
sbb
aam
cmp
xor
xchg
push
inc
xor
out
inc
mov
ret
inc
mov
cmp
pop
adc
ret
push
mov
mov
mov
cwtl
xchg
cmpsb
push
ret
dec
cmp
lods
negl
dec
cmp
std
xchg
pop
pusha
cmp
xor
rorl
test
sahf
ds
and
outsb
mov
shrb
das
adc
ret
cmp
insb
addl
inc
xchg
insb
pop
pop
pop
pop
and
push
adc
sub
test
dec
loopne
pop
fdivrp
xor
push
mov
push
or
in
cmpsb
sub
push
mov
and
mov
push
ret
cli
mov
pop
dec
mov
mov
or
cmp
std
nop
add
ror
inc
idivl
add
loop
pop
mov
stos
push
jbe
jp
repnz
lods
inc
pop
jg
mov
xchg
xchg
mov
pushf
adc
dec
rcr
xchg
sti
lcall
push
mov
mulb
decl
or
popl
lret
sub
ss
call
int3
and
xchg
inc
jp
shrl
ficoml
mov
jae
push
imulb
dec
pushf
call
xor
stc
mov
cli
idivl
int
mov
cli
inc
mov
mov
xchg
add
out
adc
or
cltd
sub
pop
and
mov
rclb
push
std
xor
push
adc
lcall
mov
loope
push
push
mov
sarl
test
dec
jae
fimuls
imul
sarb
sbb
mov
test
mov
das
xor
pop
push
sbb
cmpb
das
sbb
xor
jp
mov
or
push
inc
or
add
popa
and
call
sub
xor
xor
fiaddl
cmp
or
xor
rolb
cli
out
pop
mov
movsb
mov
inc
jp
mov
mov
addl
xchg
in
adc
xorb
lcall
mov
xor
mov
add
insl
cwtl
sbb
xchg
jle
sti
xchg
pop
jbe
cmovbe
pushf
mov
pop
xor
repz
out
mov
and
movsb
outsb
mov
push
add
adc
cmp
adc
rorl
xchg
es
mov
adc
sub
or
xchg
dec
and
cltd
out
out
sub
mov
xchg
int3
xchg
aas
pop
mov
push
inc
push
adc
or
arpl
pop
sbb
xlat
xchg
lock
iret
cmp
pop
jg
sbbl
pop
xor
add
into
inc
out
outsb
inc
ret
daa
mov
inc
mov
pop
iret
dec
test
mov
pop
call
xchg
iret
inc
mov
leave
ljmp
adc
das
cmp
mov
cs
imul
mov
add
test
pushw
inc
push
xchg
filds
rep
inc
dec
cmp
xchg
out
in
js
inc
sbb
xlat
mov
mov
push
dec
ljmp
out
or
mov
je
sub
mov
lods
push
movsl
xor
sbbl
incb
enter
in
testb
jg
lret
lret
in
outsb
sub
xor
push
shl
in
mov
mov
sti
lret
imul
xor
push
inc
jmp
cltd
out
mov
push
popf
iret
int
test
cmpsl
mov
stos
push
adc
fistpl
add
fmuls
ljmp
dec
xchg
inc
arpl
mov
mov
jno
cmpsl
mov
orl
out
insl
hlt
subb
fnstsw
aaa
arpl
jnp
xchg
mov
pop
xchg
xchg
icebp
xlat
int3
mov
fstpt
cwtl
fildll
push
add
enter
pop
add
lret
push
inc
imul
push
push
xor
adc
popf
add
sti
mov
xchg
hlt
ret
gs
sub
inc
ja
das
insl
xchg
dec
mov
cmp
dec
mov
loop
repnz
lcall
scas
pop
test
sarl
mov
andl
cltd
je
push
xchg
lods
stos
daa
push
icebp
mov
jns
dec
pop
add
mov
push
push
jns
inc
imul
inc
imul
xchg
push
adc
aam
push
fdivrs
popf
pop
out
inc
ret
lahf
jle
stos
outsb
fs
sbb
cmpsb
mov
adc
in
dec
and
lcall
add
push
inc
gs
push
push
ja
sbb
push
fs
pop
imul
idiv
les
mov
inc
jge
frstor
movsl
cmp
xchg
andl
ja
in
idivl
std
or
mov
sbb
xchg
pop
add
pop
sub
mov
dec
cmc
cmp
pop
gs
arpl
mov
loopne
outsl
and
fisttpll
adc
loope
xchg
jmp
outsl
pop
xchg
inc
cmp
xchg
cwtl
cmp
nop
gs
outsl
mov
pop
lods
icebp
nop
addl
or
int3
pop
ja
mov
mov
fnstenv
inc
and
shrb
or
mov
sarb
sbb
leave
cwtl
fs
aaa
xchg
loopne
jmp
fs
cmpsb
mov
stos
mov
and
jp
adc
push
cmpb
xor
rclb
xchg
adc
push
or
mov
sub
ret
scas
icebp
jl
xchg
hlt
clc
dec
xchg
xor
xchg
out
mov
xlat
es
add
jle
push
icebp
or
call
test
inc
push
jmp
dec
pushf
inc
addr16
test
jnp
add
inc
push
pop
movb
rcr
push
negb
mov
mov
decl
dec
dec
jno
mov
scas
jl
inc
push
dec
fwait
dec
push
and
flds
notb
mov
je
insl
mov
cli
outsl
decl
jns
inc
repnz
sbb
sub
movq
add
xchg
xor
sub
cld
dec
mov
shlb
and
jno
jecxz
jmp
popa
mov
idivl
mov
jmp
or
mov
add
add
test
insl
lret
aad
icebp
mov
push
push
fsubs
aas
jae
or
cltd
or
jg
mov
outsl
imul
push
fsubp
bound
inc
and
pop
loop
or
xor
sahf
aas
repnz
jmp
cmp
pop
or
test
jns
js
sub
cmp
xchg
mov
loope
insb
xchg
pop
push
addr16
cmc
xor
clc
xlat
dec
xchg
inc
xchg
dec
inc
ljmp
mov
mov
inc
cmp
scas
movsl
push
mov
cmpsl
movzbl
test
or
xchg
or
leave
ja
insl
ds
aad
sti
mov
cmc
lea
test
push
add
adc
and
lods
xchg
dec
mov
stos
aas
gs
das
lock
xsha1
cmpsb
dec
add
mov
es
shrb
sbb
daa
push
shll
sbb
cwtl
loope
cmp
shl
lock
js
pop
mov
stos
xchg
mov
jo
adc
pusha
loop
enter
adc
push
jo
or
sti
mov
push
jge
pusha
lcall
popf
cmp
cmp
mov
insb
decl
mov
inc
mov
or
or
mov
imul
das
and
ljmp
ficoml
push
lahf
jae
sub
and
mov
lock
dec
xchg
stc
mov
lret
lret
add
push
mov
xchg
xchg
xor
clc
cld
in
mov
pop
icebp
int
lods
and
ss
in
cld
lret
xchg
hlt
sarb
repz
jecxz
les
mov
jge
xor
sbb
rolb
repz
idivb
inc
adc
inc
push
int
mov
outsb
ret
jo
call
bound
outsb
lret
out
loop
ja
fucom
push
inc
inc
xchg
inc
sti
insl
test
sbb
push
push
in
arpl
sub
adc
call
xor
test
jecxz
into
pop
mov
push
iret
jg
push
cmp
arpl
stos
mov
pusha
lods
popa
push
ja
ret
ret
xor
push
inc
xchg
dec
push
or
repnz
cli
adc
cmpsl
insb
in
lahf
clc
scas
pop
jnp
inc
fisubs
push
jecxz
aam
lcall
mov
lock
add
mov
fisttps
sub
add
xchg
dec
sbb
sbb
xchg
aaa
dec
leave
jg
dec
lds
shrb
pushf
mov
stos
mov
mov
pop
sbb
cltd
in
fstl
mov
adc
lret
push
fidivs
lret
add
je
dec
push
sbb
out
lods
add
adc
ss
pop
xor
aaa
cmpsb
sbb
add
mov
xchg
xchg
mov
popl
sbb
xor
pusha
cli
mov
repnz
sub
aad
popa
cmp
test
imul
fwait
mov
and
pop
popa
jg
dec
aam
jmp
arpl
mov
lahf
mov
xlat
shlb
mov
xchg
sub
loope
int
mov
add
fs
pop
sti
push
cmc
push
push
sub
cmp
jle
mov
mov
test
aad
ja
xlat
ljmp
pusha
repz
adc
mov
lods
hlt
test
aas
into
sub
lcall
mov
or
pop
jmp
inc
xchg
in
shlb
mov
sub
ret
sbb
pop
arpl
enter
sub
jl
cli
cwtl
pop
adc
je
xchg
rcrl
add
jg
cmp
jne
cmp
cmp
lahf
orb
in
mov
cmp
shlb
adc
lods
sub
movups
push
scas
add
adc
jno
hlt
repz
cmp
adc
insl
mov
jns
and
adc
push
sti
jno
popf
ret
cmp
xor
and
xchg
push
mov
test
fldt
inc
jl
hlt
scas
subl
pop
push
fldcw
and
xlat
nop
daa
adc
scas
pop
and
jl
dec
outsl
enter
mov
xchg
std
movsb
scas
sub
sbb
jmp
lahf
jp
xor
pop
mov
enter
sbb
bound
fcoms
sbb
jb
push
push
pop
nop
in
lods
push
or
dec
rcll
leave
or
dec
movsl
push
mov
mov
add
fs
fcmovne
sti
inc
jmp
cltd
dec
pop
faddp
in
pushf
push
adc
je
push
popf
scas
je
xor
xor
jmp
sub
inc
out
sbb
dec
loopne
in
leave
ja
inc
sub
xorl
pop
and
dec
insb
jne
pushf
or
mov
call
out
and
dec
dec
stos
sub
cli
xor
xor
and
inc
lret
sti
xor
xchg
jbe
loop
jle
js
outsl
pushf
cmpsl
and
insb
mov
xchg
add
out
mov
fwait
popf
or
shlb
data16
lods
lds
pop
or
popa
leave
pop
adc
pop
mov
mov
mov
leave
shrl
jne
jecxz
and
inc
mov
cmp
mov
or
push
xchg
cmpsb
mov
jg
cmc
or
aas
add
add
inc
inc
int
ror
ret
jmp
int
test
xchg
xchg
loope
test
mov
jle
xor
inc
xor
jle
xorl
xchg
ret
leave
decb
inc
push
js
mov
scas
pop
mov
push
cli
lret
sarl
aas
mov
fidivrl
mov
push
out
xchg
shr
inc
aas
jg
dec
mov
or
inc
adc
add
xchg
xchg
loopne
push
jmp
xchg
movsl
insl
dec
xchg
xor
dec
or
xchg
add
ds
lock
jns
jmp
into
test
xchg
add
inc
mov
pop
and
cwtl
mov
and
ja
fbstp
fnstcw
xchg
pop
cmpb
lods
movsl
push
inc
clc
mov
cmp
jmp
loop
xchg
outsb
pusha
mov
pop
test
jns
dec
imul
fisubrl
dec
xchg
leave
mov
push
ficomps
mov
mov
fidivl
mov
cmp
pop
iret
dec
ficompl
mov
jnp
cli
sbb
inc
fcompl
xchg
xchg
push
jg
add
out
xor
sahf
ret
aad
das
inc
and
cmp
jge
stos
or
or
hlt
adc
inc
xchg
outsb
cmp
mov
and
mov
test
sti
shl
mov
push
shrb
push
je
adc
loopne
mov
mov
clc
test
mov
sbb
mov
mov
bound
mov
mov
out
cli
in
push
inc
sti
xor
pop
lcall
ja
push
in
rcll
xor
sbb
gs
pop
inc
cmpb
bound
push
pop
in
mov
push
and
adc
push
pop
adc
jne
xorl
inc
mov
mov
lea
xchg
cmp
adc
xchg
adc
out
mov
and
roll
or
mov
pop
sbb
inc
movl
jle
push
in
int
fdiv
leave
xchg
nop/reserved
cld
popa
adc
and
fs
xchg
pop
lea
dec
dec
dec
out
xorl
ds
ljmp
push
push
and
mov
inc
inc
mov
repz
scas
mov
fmull
test
call
add
mov
mov
adc
fisubrs
lods
adc
mov
xor
daa
stc
pop
xor
imul
jmp
mov
xor
stos
pop
fwait
icebp
push
or
mov
push
push
fsubrp
mov
in
or
and
lahf
sbb
xchg
push
xlat
daa
pop
push
outsb
xacquire
and
out
call
adc
xchg
ffreep
push
stos
sahf
xchg
adcl
hlt
sbbb
mov
pop
xor
push
xchg
aad
ret
xor
int
imul
movl
xchg
adc
pop
mov
sar
scas
add
gs
xor
sti
dec
mov
inc
aas
aas
imul
stos
mov
jno
sub
xor
or
and
jno
gs
pop
or
inc
cli
jp
mov
int3
je
mov
xor
cmpsl
test
leave
andl
jl
cs
test
or
jge
icebp
std
stos
lods
test
mov
nop
cmp
mov
push
mov
cld
int3
add
cli
aam
mov
mov
fdiv
aaa
movl
and
adc
xlat
ret
fucomip
jecxz
enter
shlb
mov
and
pop
enter
bound
lret
and
add
jbe
dec
sub
repnz
push
xchg
adc
adc
fildll
in
aad
jo
in
cmp
pop
hlt
test
lds
test
pop
cs
in
dec
add
dec
sbbl
idivl
and
jmp
adc
icebp
fnsetpm(287
push
mov
push
pop
xchg
ss
daa
loopne
lcall
in
sub
stc
xchg
dec
data16
mov
pop
xor
scas
int3
jnp
push
cmpsb
testb
popf
dec
sbbl
and
mov
lret
flds
sub
decb
shlb
jmp
adc
push
cltd
stc
fdivrs
lcall
push
mov
adc
xor
sbb
add
test
pop
xchg
xor
push
rolb
out
adc
lods
ret
les
lods
mov
daa
mov
into
jns
pop
add
adc
xor
lock
inc
xor
fs
outsl
addb
dec
test
and
pop
pusha
sub
sub
nop
push
push
scas
fldt
fdiv
lods
adcb
sbb
fnstcw
mov
cmp
push
test
aaa
lods
into
sbbb
rcll
rclb
inc
jmp
pop
in
call
inc
ss
scas
cmp
inc
pop
adc
mov
sbb
sub
pop
cwtl
arpl
cmp
adc
mov
sbb
iret
std
incl
ja
loope
repz
jb
xor
jmp
pusha
sub
sbb
pop
or
adc
mov
mov
mov
in
push
jl
cmc
jns
mov
mov
pop
clc
xlat
outsl
aam
jle
cmpsb
add
mov
fidivrl
cmp
outsl
stc
fstps
bound
adc
push
inc
push
dec
and
lds
cltd
insl
in
and
cmpsb
andl
mov
fldt
cmp
mov
add
fcmovne
movsb
mul
mov
xor
repnz
ficoms
sbb
inc
dec
sbb
pop
inc
pop
test
mov
jb
dec
pushf
xor
mov
sbb
rolb
inc
or
adc
scas
pop
add
adcb
scas
out
mov
sub
xchg
data16
int
jmp
push
mov
push
adc
adc
inc
fwait
inc
push
adc
mov
inc
dec
sahf
lock
outsl
sarb
pushf
xlat
mov
stos
ror
jo
rcr
inc
sbb
popa
aaa
shr
adc
push
cltd
jg
mov
adc
sub
jo
jge
or
imul
mov
mov
fsubs
xchg
icebp
clc
jmp
cs
lock
test
out
sbb
add
xchg
test
adc
mov
iret
or
test
mov
arpl
lret
loopne
repnz
arpl
es
sub
ss
inc
insl
popf
xorb
xor
addr16
cmc
adc
cltd
push
arpl
pop
dec
insl
pop
std
outsl
inc
xlat
jne
jns
cwtl
and
and
dec
jae
inc
xchg
daa
or
rolb
shrl
inc
or
repnz
push
mov
lds
or
in
pop
lret
cli
and
dec
add
push
dec
inc
pushl
arpl
ror
and
dec
icebp
aaa
pop
push
pop
mov
es
fistps
lds
fisubl
add
push
mov
ret
add
rcll
cmpsb
cmp
adc
mov
das
lret
add
dec
inc
jo
lcall
rclb
mov
mov
loopne
add
inc
mov
aam
add
es
lea
xorb
test
out
out
mov
ficoml
rol
repz
lds
mov
popf
std
sub
push
sahf
aas
pusha
pop
push
push
adc
ret
stc
ja
push
or
inc
outsl
mov
test
pinsrw
push
sub
loopne
leave
es
dec
sbb
mov
mov
jnp
jmp
fwait
xchg
sub
push
into
mov
mov
dec
xchg
lcall
jl
xchg
mov
add
fisubrs
jb
movsl
push
fs
loope
ss
push
add
dec
out
and
int3
mov
stos
pusha
sar
lock
mov
stc
xor
je
imul
aam
stc
jg
pop
rolb
pop
out
imul
lahf
and
and
xor
call
pop
arpl
push
rorl
dec
mov
stos
pop
adc
test
push
push
dec
push
push
or
mov
ljmp
dec
pop
mov
cmp
sub
and
sub
mov
xor
lea
movsb
jp
inc
mov
pop
add
sub
inc
ret
dec
lods
sub
mov
mov
test
fcomi
push
repz
std
cmpsb
cli
ss
xor
cmpb
outsb
outsb
mov
xor
push
mov
mov
mov
std
hlt
mov
dec
cmp
inc
ja
pop
int
pop
fbstp
push
imul
cltd
pushf
aas
sbb
je
out
xchg
mov
cli
push
inc
inc
cmpsl
ret
ret
jge
inc
xchg
or
push
cmp
ljmp
cmp
add
repnz
aam
sbb
jno
inc
sti
fldt
cmc
add
loope
or
test
fsub
mov
repz
pop
or
outsl
sub
lea
jnp
lcall
dec
adc
mov
jns
aaa
aas
cmp
push
pop
dec
xor
addb
or
sub
fisubl
pushf
pop
push
ja
add
and
out
loopne
or
iret
add
fstps
iret
push
fwait
stos
jmp
fnstcw
insl
dec
lods
andb
sub
dec
jne
mov
adc
sbb
jecxz
fcomi
lahf
pop
cmp
dec
ret
pop
ss
stos
mov
int3
jmp
pushf
dec
sub
sub
mov
vorps
das
add
outsb
push
dec
repz
jno
inc
les
jl
call
jg
xor
mov
hlt
inc
or
mov
sbb
xchg
insl
addr16
mov
outsl
ror
lods
aas
sub
mov
xor
jecxz
dec
jge
sbb
into
jl
cmp
outsb
adc
xchg
fisttps
aaa
stos
jbe
icebp
sub
mov
sub
outsb
es
jmp
cld
adcb
stc
push
movsl
mov
xchg
pop
ret
ljmp
es
int
inc
xor
mov
mov
xor
and
std
pop
xlat
push
push
add
leave
adc
adc
imul
inc
loope
jg
adc
cmp
loope
jp
or
adc
mov
pop
inc
ja
scas
popf
sti
lds
jmp
mov
cli
or
fisubs
adc
loopne
mov
pop
aaa
std
roll
pop
push
das
lret
mov
mov
cmp
push
fmulp
sbb
les
outsb
out
sbb
jge
adc
mov
lahf
div
loopne
mov
std
mov
and
pop
hlt
shlb
mov
outsb
mov
in
jecxz
hlt
mulb
scas
sbb
add
adc
cld
pop
das
cmp
jmp
lret
push
pop
and
and
fistl
inc
jl
xchg
sar
jb
rclb
sub
xor
cltd
push
mov
lcall
lahf
test
sub
fsubrl
dec
and
jmp
inc
cltd
mov
imul
cwtl
sti
jge
leave
imul
mov
in
into
jg
dec
dec
mov
lret
js
xlat
mov
testl
gs
ret
xchg
fisubs
and
shll
pop
sti
xor
cs
adc
ficompl
imul
and
push
mov
jnp
mov
push
jl
aaa
mov
jle
arpl
popf
mov
in
or
movsl
repz
divl
xchg
mov
xchg
xor
xlat
push
jl
xchg
xor
jae
test
sub
and
mov
jne
pop
das
hlt
arpl
stos
iret
lcall
frstor
adc
xchg
fidivrs
jno
pop
iret
stc
jae
lret
pusha
outsl
es
cltd
sbb
cs
sbb
dec
aad
xor
add
lcall
outsl
aad
stc
xchg
nop
insb
xchg
push
or
bswap
or
pop
pop
ljmp
mov
mov
inc
out
xchg
pop
jmp
mov
xchg
xchg
daa
addr16
cmc
jnp
das
jmp
out
mov
cwtl
jle
dec
pop
sti
pushf
lods
stos
and
int3
sbb
add
into
or
push
xchg
fistpl
imul
or
push
and
mov
enter
out
or
test
sbb
movb
jmp
ja
std
mov
cmp
pop
push
pop
std
leave
daa
pop
nop
inc
test
jp
sub
pop
pop
shlb
movsb
xor
pop
fidivrs
adc
push
pop
fsubs
fisubrl
mov
fwait
das
stos
int3
sub
stos
mov
cmp
out
dec
push
gs
mov
in
test
scas
les
es
xchg
push
js
adc
push
stos
mov
xchg
adc
movsb
loopne
aaa
sbb
cmp
lods
sub
cmp
dec
or
adc
or
cs
movsl
cli
das
nop
popf
push
push
int3
nop
ret
imul
cltd
rorb
subb
or
sbb
mov
ljmp
pop
jle
ds
add
cmpsl
mov
test
add
jmp
ds
leavew
and
or
mov
sbb
mov
les
adc
cs
frstor
aad
xchg
fsub
push
pop
and
mov
mov
xlat
inc
cmp
decb
xor
cmpsb
lret
in
inc
outsl
out
and
test
add
orb
xchg
xlat
repz
fstpt
sbb
dec
sub
clc
fldenv
adc
sub
hlt
mov
fs
jns
mov
lret
mov
popa
adc
les
adc
xor
aas
jo
dec
gs
aaa
dec
cli
pusha
add
imul
or
call
inc
jmp
dec
scas
mov
mov
test
out
or
movsl
popa
push
sarb
adc
out
jle
roll
jecxz
xor
mov
in
in
imul
bound
pusha
mov
jp
xchg
movsl
movsb
ja
fstpt
rclb
adc
xor
jp
sub
aam
cmp
pusha
icebp
icebp
and
inc
xchg
mov
xlat
push
std
cmc
enter
fidivrl
cmp
sahf
lahf
shll
and
xchg
xchg
push
loop
bound
je
xchg
xor
pop
lock
in
xor
mov
scas
or
in
adc
fildl
push
push
fdivs
jb
das
fcoms
pop
or
mov
jp
call
sti
mov
in
add
sbb
outsb
sbb
call
insb
js
fwait
inc
push
jbe
mov
cmp
mov
xchg
pop
add
fldenv
jg
push
popa
cmpsl
gs
mov
incl
sub
test
mul
dec
lods
mov
testl
jns
je
cmp
xchg
inc
pop
lret
fdivrl
mov
decb
int3
cli
ss
push
fs
leave
das
gs
inc
xchg
in
xchg
xor
test
in
aas
loop
xchg
les
add
sbb
push
lret
in
fstps
out
addr16
fwait
std
and
cmp
dec
not
mov
xor
adc
cwtl
loope
push
push
rcrb
lods
ret
int
jmp
adc
out
add
inc
and
xor
add
addr16
adc
inc
mov
icebp
mov
dec
imull
xchg
in
popf
pop
inc
push
es
xchg
enter
decb
mov
cs
divb
xor
dec
jg
mov
xchg
ds
jns
gs
cmp
loope
jle
cltd
xlat
je
cmp
xchg
jge
movsb
pop
aaa
aaa
fisttps
add
push
stos
in
in
push
push
sbb
iret
repz
pop
test
sbb
bound
out
pop
jo
inc
adcl
xchg
mov
inc
mov
jmp
push
lock
nop
popf
lret
aaa
and
lea
les
cs
add
clc
test
cwtl
or
mov
mov
mov
dec
jb
fwait
sub
xchg
xchg
jge
pop
sbb
add
mov
insb
push
lret
inc
fmull
leave
out
cmpb
daa
test
insl
adc
test
xchg
mov
pop
arpl
jl
nop
ds
fidivrl
mov
push
xor
sub
orb
orl
mov
sbb
or
pop
adc
sbb
sub
push
cmpsb
repnz
xchg
inc
aas
iret
and
test
fists
outsb
shrl
xchg
fwait
add
sub
pop
out
imul
xchg
sbb
mov
push
imul
jle
stos
and
rcll
or
dec
push
cmp
jb
out
fwait
lds
add
fcmovbe
dec
pop
add
and
mov
push
ret
xlat
jbe
aaa
popf
movsl
pop
and
mov
icebp
mov
and
stos
jae
lock
adc
pusha
mov
mov
inc
dec
shll
add
cmp
or
sbb
sub
dec
pop
out
mov
aaa
xor
mulb
jnp
loope
jns
jne
mov
ret
dec
dec
mov
fmuls
push
cmpsb
adc
pop
adc
es
and
lea
imull
xor
addr16
xchg
dec
rorl
push
popf
pop
leave
mov
in
call
push
mov
push
and
lahf
mov
pop
les
xchg
in
sub
xchg
push
pop
fadd
fwait
sbbb
fwait
js
leave
xchg
out
add
xchg
and
movsl
popf
jecxz
xchg
repz
out
fldenv
push
pop
mov
stos
divl
imul
lods
ficomps
dec
in
pop
in
or
aas
sbb
iret
mov
or
mov
rcrb
xchg
adc
movsl
adc
ds
sti
sbb
test
clc
xor
pop
roll
push
xlat
xchg
aas
pop
call
add
mov
lret
push
ret
dec
jb
mov
ja
xor
scas
xchg
das
fiaddl
lods
mov
sti
mov
ds
dec
dec
call
testb
and
lahf
or
pop
sub
and
shlb
cli
pop
dec
movsl
mov
add
in
loop
mov
jle
xchg
jne
jo
jnp
jnp
shll
les
dec
and
fistps
xor
xor
fistpl
push
mov
xlat
adc
je
push
push
adc
into
in
sbb
pop
jg
mov
or
mov
subl
dec
scas
mov
jb
sbb
pop
add
adc
adc
out
cli
mov
adc
xchg
mov
cltd
or
xlat
and
lcall
xor
stos
test
js
mov
mov
mov
jp
or
inc
aam
dec
cmp
mov
push
sub
js
sub
in
jmp
cmp
fcmovnu
or
mov
xchg
pop
adc
mov
dec
sbbb
test
lods
mov
jg
loop
std
add
mov
imul
mov
mov
add
mov
jmp
xchg
insl
insb
sbb
cmp
sub
pop
dec
xchg
xchg
pushf
fildll
cs
push
inc
gs
lea
xchg
cmp
mov
mov
orb
shll
sbb
imul
mov
out
sbb
and
xchg
out
cli
int
add
push
in
push
cmp
fbld
cmp
repz
dec
add
arpl
and
and
xlat
out
mov
call
cli
mov
aaa
int
xchg
sbb
daa
jbe
jnp
xor
fsts
ljmp
push
push
int
dec
pop
filds
push
lahf
pop
dec
decl
and
popa
fwait
leave
pop
xchg
lret
pop
dec
pop
mov
jmp
jno
dec
jle
leave
mov
sub
inc
adc
sub
ljmp
and
push
cs
cltd
rclb
in
psadbw
mov
stc
icebp
xor
loop
test
mov
adc
arpl
mov
test
int
sbb
mov
or
jb
fistl
push
mov
mov
lret
pushl
dec
mov
add
std
cmpsl
cltd
subl
add
dec
arpl
xchg
and
leave
adc
ret
mov
fisubs
mov
xchg
jb
rcll
and
adc
fcompl
call
enter
xchg
jne
mov
movb
fidivs
fucomp
add
mov
outsb
inc
repnz
dec
movsl
ficomps
xor
jecxz
mov
in
cltd
cmp
mov
adc
popf
cmp
cmpsl
xchg
hlt
imul
push
xor
add
jle
ljmp
jns
push
sub
mov
mov
test
mov
in
adc
jmp
adc
push
mov
dec
fimuls
xchg
inc
pop
cmpsb
adc
inc
jno
cwtl
mov
mov
cmovo
pop
mov
add
popf
rcrb
push
inc
mov
push
leave
inc
cmc
icebp
mov
mov
or
xor
fldt
mov
mov
add
mov
pop
mov
push
outsb
fstpl
mov
rcl
inc
insl
ror
dec
push
and
lods
jg
dec
hlt
stc
mov
je
loop
ss
cmpsl
je
add
add
fdivs
addl
pop
add
inc
cmpsl
aad
or
stos
outsb
sbb
ret
dec
sbb
push
cs
dec
pushf
cmpsb
mov
pop
xlat
mov
push
mov
xchg
pop
push
andl
fwait
mov
out
push
dec
repz
testl
xor
loope
or
out
icebp
push
pop
inc
sbb
and
pop
mov
pop
ret
or
xchg
aam
pop
mov
jnp
in
pop
je
inc
lds
fwait
xchg
sbb
cmp
jp
sbb
fbstp
inc
fisubrl
sub
testl
in
lods
adc
adc
pop
sbb
add
dec
cmpl
xchg
jns
je
lcall
push
dec
jnp
das
cmc
adc
enter
dec
xchg
cmpsl
cmp
jmp
popf
push
or
aas
pop
roll
pop
sti
pmovmskb
pop
gs
popf
adc
fildl
lret
fwait
cli
sub
je
out
pop
pushl
aas
fsts
lcall
cmpsb
mov
jmp
dec
mov
dec
cmp
and
mov
mov
das
xor
sar
or
pop
push
or
push
adc
addr16
xor
mov
cmpsl
cmpsl
push
cmp
mov
inc
aas
and
shr
lcall
out
popf
sub
scas
inc
fs
xor
dec
xor
sub
pushf
and
mov
int
stos
sar
sub
adc
cwtl
and
fwait
jae
pop
xor
inc
pop
loop
sarb
pop
adc
jo
and
sub
add
stc
out
inc
mov
pop
and
mov
int
stos
ret
jns
sub
movsb
dec
lods
int
add
sbb
hlt
popa
mov
sub
cmpsl
add
dec
outsb
adc
xor
sbb
popa
leave
pop
lods
lods
lret
add
mov
movsl
lcall
xchg
cs
bound
sbb
stc
push
sbb
mov
mov
cs
iret
es
push
dec
stos
rorl
jns
cmp
push
aaa
cmc
jns
sub
mov
xchg
xchg
push
enter
fdivrs
inc
mov
sub
inc
loopne
loopne
push
int3
mul
fsubs
mov
pop
pop
js
addr16
fbstp
or
adc
xor
shrl
xchg
ffreep
jns
add
into
loop
dec
data16
es
cmc
pop
inc
hlt
sbb
dec
aas
push
movsl
imul
ret
xchg
gs
cmp
mov
push
jge
pop
int3
push
or
jmp
push
sti
out
ficoml
mov
mov
jg
or
pop
xlat
jae
push
jge
jnp
cmp
gs
andl
hlt
cld
xor
enter
scas
aad
mov
sub
jns
lret
insb
iret
mov
mov
sbb
cmp
lret
int3
mov
sub
jmp
mov
aam
int
or
inc
pop
cmp
pop
adc
cld
push
scas
sub
popa
xor
pop
loop
mov
jl
push
pop
xchg
call
jns
add
push
frstor
shrl
in
adc
add
into
inc
jo
mov
mov
jmp
cmc
daa
cmc
push
add
mov
mov
mov
add
push
push
into
sti
xchg
cmp
dec
pop
xor
cmpsb
xchg
add
repnz
in
clc
mov
fcompp
cmp
mov
rcrb
filds
sub
jne
jge
movsl
jbe
lods
xor
cmpsb
stos
imul
jbe
pop
lods
psubd
outsl
cmpsl
out
xchg
mov
bound
pop
cltd
not
dec
in
popl
push
sub
rolb
filds
push
cmp
sub
cld
sub
stos
jl
pop
inc
fists
push
cmpsb
cmp
inc
in
push
addb
lea
jne
inc
lret
in
pop
bound
outsl
nop
leave
mov
adc
hlt
add
sbb
adcl
sbb
add
mov
std
popf
add
cmp
push
mov
std
pop
lea
xchg
jmp
xchg
push
add
sbb
out
or
loope
pop
or
lock
and
sbb
lods
and
inc
jl
push
out
push
jns
loope
dec
test
jge
pusha
js
mov
mov
push
adc
and
push
inc
jno
pop
inc
xor
pop
scas
sub
lret
lret
gs
or
aad
test
shll
lea
aaa
and
xchg
aaa
popa
dec
bound
adc
jle
mov
cmp
xchg
push
push
dec
or
cs
js
xor
out
mov
push
stc
mov
mov
adc
pop
imul
xchg
push
push
dec
jmp
xor
int3
fists
xchg
dec
leave
popf
and
push
sub
sbb
sub
cltd
in
jg
dec
aad
int
jne
ss
out
je
test
and
inc
jl
idivb
or
or
lret
rcl
mov
xchg
lahf
cmp
rolb
movsb
rcrl
testb
outsb
mov
fs
lret
faddl
or
jg
shll
fldln2
dec
jle
je
js
mov
hlt
stc
add
push
shll
pop
pop
ljmp
inc
shrl
xchg
mov
cwtl
scas
push
push
test
cmp
ljmp
fwait
or
inc
mov
xchg
aam
fmul
out
icebp
mov
adc
pop
in
inc
fistps
aad
loope
testb
jo
xor
push
fnsetpm(287
movsl
rcr
rcll
mov
aaa
inc
push
mov
mov
sarl
xchg
cmc
flds
push
fistps
pusha
fwait
ja
movb
mov
mov
mov
sub
mov
mov
aas
sbb
mov
je
dec
popf
orb
inc
xchg
jl
cmp
cli
in
lret
out
pusha
lods
push
fsubp
adc
inc
pushf
es
xchg
dec
out
sbb
inc
imul
pop
cmp
outsl
bnd
rcrl
lret
push
add
and
ds
loop
push
mov
movsb
fsts
out
push
int
adc
fcoms
sbb
mov
push
cwtl
pop
push
psubq
lahf
sub
mov
aad
pop
in
push
cmp
mov
adc
aam
insb
or
mov
mov
cmp
in
rcl
clc
push
mov
adc
cmc
push
mov
pop
mov
loop
roll
mov
xor
dec
ljmp
aaa
jo
push
jecxz
and
pop
in
mov
push
push
cmp
mov
add
lea
out
or
pop
dec
movsl
iret
jmp
es
gs
ss
pop
xor
outsb
movb
or
push
cmp
call
cmp
dec
imul
lods
jno
mov
mov
mov
push
les
lods
test
je
dec
cmp
out
int3
mov
rcl
icebp
inc
cmp
lock
adc
clc
aas
icebp
inc
xchg
dec
pop
mov
test
xchg
jl
in
jle
jbe
iret
jle
fidivs
jno
fwait
push
pop
mov
popf
sbb
mov
js
jp
ds
scas
out
cld
and
fs
lods
mov
cs
pop
inc
test
mov
or
cmpsb
jle
mov
in
jnp
jns
outsb
mov
lahf
jge
add
ret
ret
jle
loop
pop
lds
or
cmp
cld
mov
movsb
xchg
lods
lret
push
lods
int3
pmaxub
fnop
movsl
adc
mov
fildl
fldcw
dec
lcall
sub
test
add
dec
or
cmp
mov
mov
xchg
push
sarb
adc
xor
add
pop
push
out
loope
jo
inc
sub
cmpsb
fistpl
push
sbb
clc
adc
mov
fadd
xchg
daa
or
into
and
mov
cs
or
cmp
stc
loop
mov
or
inc
push
push
mov
ja
lds
mov
cmp
in
mov
inc
mov
int3
jmp
mov
enter
repnz
mov
jo
mov
bound
mov
xor
insb
mov
cmp
outsb
jae
rorl
xrstors
mov
rol
cmpsb
inc
enter
adc
outsb
out
jns
pop
lods
add
cmpsb
not
cmp
xchg
sarl
test
add
out
fiadds
aaa
lock
dec
xor
xorl
mov
hlt
decb
data16
test
sub
jp
mov
call
pop
sub
mov
out
jno
mov
lods
mov
jo
aam
push
outsb
add
mov
andb
dec
push
mov
push
pop
call
inc
movsb
mov
xchg
mov
inc
cmp
pop
mov
inc
mov
mov
xchg
push
cli
in
mov
leave
fldcw
jae
insb
mov
test
push
jnp
or
and
out
jmp
inc
xor
pop
xor
jo
out
inc
xor
ja
lea
add
mov
out
scas
js
cs
dec
test
fwait
lahf
sahf
cs
jle
mov
insl
jmp
shll
or
pop
pop
dec
push
mov
dec
jae
jns
hlt
jecxz
add
and
loop
mov
push
cmp
outsb
mov
sbb
jne
mov
jmp
pop
or
push
lods
repnz
mulb
mov
xchg
adc
or
shll
add
repnz
test
xor
daa
sub
gs
nop
das
aas
sub
rolb
rcrb
arpl
push
clc
dec
fnstenv
in
push
xchg
gs
pop
push
in
adc
sub
xor
jns
jne
stc
jmp
push
lock
and
iret
dec
ds
fldenv
inc
and
dec
ds
mov
ret
cmpsl
and
rol
das
iret
movsb
and
outsl
jle
loopne
mov
cltd
cmovne
pop
xor
ljmp
iret
adc
daa
xor
lcall
in
int
mov
push
jns
aas
xchg
mov
jae
push
xchg
jb
fstps
or
iret
nop
and
or
sbb
xor
les
cmp
mov
lea
pop
insl
mov
xchg
dec
xchg
fs
dec
sbb
iret
orb
push
add
fcompl
adc
scas
dec
xor
ret
or
dec
xor
and
adc
push
arpl
adc
dec
out
lock
in
pop
pop
xchg
cmpsb
mov
cwtl
push
mov
int3
add
add
add
add
xlat
nop
seta
jmp
push
dec
mov
out
push
rolb
gs
sbb
cmpsl
inc
push
mov
pop
shlb
cmc
fwait
dec
pop
insl
notl
cmp
aas
cmp
out
mov
mov
sub
insl
mov
cmp
inc
rolb
push
jl
cmp
inc
addr16
addr16
mov
in
ret
enter
jb
aad
aam
lcall
push
call
sbb
lret
iret
xor
int
jge
dec
shrb
stos
mov
popa
je
cli
xchg
mov
add
into
xlat
sub
sub
mov
lock
divb
imul
subb
push
gs
mov
add
mov
into
call
aad
jo
dec
push
and
mov
mov
mov
inc
hlt
add
aas
das
pop
or
push
ret
je
incl
repz
cmp
je
dec
dec
test
push
inc
pop
jecxz
jle
pusha
pop
in
leave
xchg
es
push
or
cwtl
ljmp
fisubrs
in
and
sub
push
in
jo
xor
dec
dec
dec
cmp
sub
jecxz
cmp
mov
dec
dec
pop
pop
mov
iret
xor
push
and
js
cs
fwait
cmovle
push
in
call
sti
push
inc
mov
ficoml
xchg
jmp
jecxz
inc
inc
daa
hlt
enter
jg
xor
xchg
adcl
cmpsb
cltd
xchg
xchg
jb
inc
push
or
rorl
sarb
into
loop
icebp
out
aam
mov
mov
int
lods
stos
lret
arpl
outsb
stos
and
insb
repnz
adc
and
fdivrp
xor
mov
add
repnz
jae
xchg
shll
mov
adc
mov
cmp
scas
fdivrl
loop
repz
jle
push
lods
popf
call
cmp
mov
outsl
std
pop
cmp
mov
cmc
movsl
add
inc
mov
mov
xchg
ds
jl
movsb
xchg
mov
sti
and
mov
sbb
push
inc
fs
pushf
jae
cmp
in
lods
mov
mov
pushf
out
call
test
cmp
jne
adc
cmp
inc
pop
dec
fdiv
push
repnz
jge
imul
les
or
stos
movsl
inc
and
inc
inc
inc
inc
shll
adc
aas
cwtl
pop
lret
bound
sub
jecxz
jnp,pt
xor
pop
xor
mov
int3
aas
std
aam
jb
fwait
jae
cmp
cmp
mov
fs
and
sbbl
je
jno
jbe
sti
in
pushf
jmp
imul
sbb
mov
mov
pop
movsb
push
inc
fs
xor
test
inc
lret
jecxz
and
xchg
test
and
inc
rorb
in
cld
xchg
and
jl
scas
add
mov
test
cmp
fsubp
add
mov
inc
pop
pop
add
aam
cmpsb
cmp
loopne
fsubrs
sbb
mov
sub
push
clc
das
imul
lret
dec
sbb
in
or
inc
insb
rcll
or
lret
add
xorb
scas
push
sbbl
loop
test
cmp
jns
cwtl
scas
mov
xchg
pop
sub
jae
outsb
push
rcrl
push
mov
das
dec
loopne
mov
sub
out
test
xor
es
inc
sti
sti
cmp
scas
jbe
mov
loop
mov
arpl
push
lcall
repz
movsb
rol
mov
xor
movsl
out
scas
xor
cmp
adc
sub
cli
pop
cmp
js
xchg
sbb
lcall
test
dec
sbb
jg
jbe
mov
aaa
fstpt
jns
sub
cmp
lret
add
mov
ret
arpl
scas
out
xor
lock
lods
shl
cli
negl
mov
xchg
pop
addb
lahf
and
sti
mov
js
int3
paddb
fadds
jne
push
fwait
mov
pop
dec
cmp
out
and
out
mov
cmpsb
add
loope
pop
adc
xlat
mov
xchg
dec
adc
insl
add
stos
pop
sub
pop
les
pop
aas
shll
cmpl
adc
sub
jae
aad
mov
imul
loope
mov
in
rcll
mov
mov
cs
and
dec
mov
dec
enter
es
inc
mov
mov
ffree
mov
cs
xchg
pop
lock
mov
rclb
and
push
out
sbb
add
iret
and
repnz
mov
add
mov
sub
rorl
cmp
adc
lods
enter
jbe
mov
lock
xchg
repnz
jecxz
jmp
push
adc
fmul
cmp
adc
pop
ret
popf
movsb
movsl
push
dec
mov
jns
loope
outsl
out
inc
jge
in
mov
pushf
gs
loope
or
popa
and
mov
jne
xchg
out
inc
pop
mov
jmp
lahf
cmpsb
scas
jnp
outsb
addr16
sbb
push
add
hlt
fs
ret
lcall
xchg
insb
cmp
mov
cmp
loopne
rol
inc
mov
mov
out
aas
test
fildll
loopne
lret
push
aaa
push
cmp
jb
lock
js
fcoms
push
adc
imulb
jge
imul
mov
cltd
inc
lcall
mov
or
bound
xchg
xchg
imul
add
pop
rcrb
rcl
mov
push
ljmp
xor
push
and
mov
push
xchg
xor
or
cld
dec
mov
addr16
cmc
daa
cmp
out
xor
nop
nop
pop
mov
jae
iret
les
subl
popf
iret
xchg
cwtl
xlat
cmc
aaa
xor
mov
push
inc
js
xchg
pop
mov
sub
call
or
mov
mov
jo
lock
ret
add
stos
je
xor
in
hlt
std
mov
stos
fs
mov
mov
xor
xlat
mov
fisubs
popa
and
sub
push
sub
inc
and
pop
adc
popf
push
into
pop
jae
inc
cmovno
pop
clc
in
aas
sahf
out
push
push
enter
pop
shll
popa
mov
insb
iret
test
sbb
jecxz
pop
mov
xor
jne
add
push
in
pop
cmpsb
ss
enter
lock
and
addr16
cld
in
sar
xchg
loopne
xchg
fcmovu
out
xlat
or
lahf
mov
push
xchg
xchg
movsl
in
sub
out
jb
jnp
movq
jecxz
test
data16
fisttpl
cld
push
inc
sub
xchg
cs
jecxz
std
xor
cmpsb
sarb
imul
ret
adc
mov
mov
out
test
out
rolb
and
add
adc
sub
push
loop
das
test
cmp
out
loop
mov
ljmp
xor
insb
sbb
mov
and
mov
push
inc
inc
dec
or
pop
xchg
jno
mov
adc
ret
scas
ja
lods
xchg
jecxz
sub
lock
repz
jne
add
mov
sbb
das
mov
jl
lods
ljmp
sub
push
loop
inc
cmp
movsl
sub
mov
cmp
lock
stc
test
in
jge
sahf
mov
push
xor
daa
dec
das
ja
cld
faddl
popf
fiadds
aad
out
pop
data16
aas
add
pop
loop
sub
sbb
stos
pop
and
dec
push
stos
inc
cltd
mov
pop
das
fimuls
and
aad
jecxz
push
ficoms
push
lock
lcall
outsl
dec
xlat
sbb
add
and
mov
movb
xchg
incl
xchg
adc
cmp
cmpl
push
sti
add
cmp
mov
inc
xchg
stc
cmpsb
lcall
adc
adc
mov
popf
xchg
xchg
iret
ret
aas
mov
jg
pop
mov
jg
fwait
mov
loope
lcall
adc
mov
mov
push
mov
cmpl
js
mov
sbb
ret
test
cmp
stos
out
mov
mov
inc
loopne
out
clc
pop
ss
ja
cmpsb
mov
lret
add
out
cld
ret
cmpl
and
pop
inc
and
adc
outsl
pop
pop
xchg
fdivs
das
jno
shlb
out
xchg
subl
or
xchg
cmc
push
ljmp
adc
jl
inc
mov
mov
xchg
cli
sub
push
inc
mov
pushl
cltd
sub
inc
int
adc
xor
cmpsl
mov
push
fsubrl
pop
repnz
mov
outsb
outsb
cs
jb
xor
xlat
jecxz
mov
notb
sub
xor
adcl
jnp
or
stc
mov
cmp
jge
loopne
repnz
shrl
push
pop
test
push
or
test
mov
pop
in
push
outsb
xor
in
fiadds
inc
jns
pop
scas
xchg
aam
inc
jo
push
dec
push
adc
pop
or
ret
ret
jnp
jl
mov
insl
in
test
xor
xor
adc
sbbl
outsl
ret
pop
loopne
pushf
scas
dec
inc
inc
insb
jmp
or
aad
call
mov
leave
or
cmp
call
push
fisttpll
cmpsb
mov
test
loopne
lcall
out
fdivl
cmc
fsubr
xor
inc
mov
inc
add
cs
dec
inc
inc
adc
lahf
arpl
popf
stc
jo,pt
ja
xor
and
mov
cmc
or
jecxz
adc
fstps
dec
mov
push
inc
xchg
icebp
mov
int
cmp
insl
movl
fdivs
sub
cmpsb
jg
inc
stc
pop
jle
fwait
inc
pop
add
lea
loop
mov
sub
xchg
or
jle
repnz
cli
pop
dec
jnp
push
xor
cmp
mov
jno
push
bt
and
das
mov
xor
out
fidivrl
out
shr
rcl
add
cs
enter
inc
xor
ja
xchg
iret
cmp
clc
add
orb
push
scas
pop
mov
int
add
lret
sbb
stc
dec
lds
sbb
xchg
jle
sbb
mov
dec
insl
rcrl
cmpl
data16
dec
jge
cmpb
fidivrl
or
mov
adc
mov
mov
jl
das
mov
fistpll
or
inc
inc
fdiv
es
out
pop
inc
mov
adc
cmpsb
pop
aaa
xor
fdiv
in
subl
cwtl
jb
add
mov
xor
loop
pop
mov
sbb
cwtl
cmp
adc
test
divb
adc
sbb
jne
and
in
rcll
je
movsl
lahf
xchg
cmpsl
daa
add
sub
ljmp
or
aam
push
mov
mov
add
cmpsl
and
inc
fs
pop
mov
leave
ret
test
cmp
fstpt
fnsave
scas
cld
es
outsb
or
roll
adc
ret
cmp
out
dec
orb
cmp
sbb
mov
or
pop
pop
lock
shrl
pop
dec
pop
cmp
xor
popf
mov
xchg
inc
mov
ss
dec
mov
test
pop
lods
gs
pop
neg
jae
aaa
adc
inc
inc
ret
ret
push
sub
jmp
xchg
mov
loopne
xor
mov
and
dec
sbb
push
ret
hlt
stos
xchg
pop
xlat
push
sbb
push
jnp
aam
push
xlat
ficoms
push
pop
push
aam
lret
cmp
pminub
and
enter
xchg
cmpsb
fisttps
xchg
loope
ret
leave
dec
cld
pushf
mov
sub
loope
xor
pop
inc
jb
jp
xchg
lock
test
fcom
popf
pop
or
imul
jge
jge
clc
dec
inc
movsl
dec
ss
push
filds
fistpl
ja
push
aam
dec
int3
lahf
hlt
dec
jp
sbb
lret
or
rclb
push
mov
dec
scas
or
fdivrs
inc
lcall
push
into
and
dec
cmc
icebp
and
sbb
pusha
mov
fs
divl
dec
jb
cmp
jmp
rolb
jns
int
jns
repz
mov
test
test
cwtl
mov
dec
outsl
cmp
adc
in
adc
or
pop
xchg
test
and
sbb
outsl
addr16
sbb
pop
roll
xchg
cmp
cld
mov
movsb
stc
inc
push
add
xchg
or
cmp
aas
xor
pop
and
pusha
or
daa
pusha
lock
shrl
repnz
pop
jmp
xchg
sbb
loopne
sbbl
xor
inc
xor
jns
mov
push
sub
jge
stos
loopne
dec
in
adcb
lods
jge
xor
mov
shrl
fnstcw
push
jae
mov
mov
mov
xor
mov
inc
jb
xchg
mov
push
push
pop
or
outsl
push
jle
jne
jecxz
gs
mov
ds
notb
sarb
inc
mov
nop
cmp
pop
ss
mov
jae
push
pushw
xchg
mull
inc
js
inc
adc
cwtl
stos
push
pop
mov
addr16
inc
fidivrs
dec
and
fst
fcoml
mov
dec
rolb
or
dec
mov
bound
adc
mov
add
aad
push
cmp
push
jmp
es
sti
ljmp
cwtl
fcomp
movsl
lods
divb
scas
dec
sbb
insl
iret
lods
enter
xor
pusha
mov
push
cmp
jle
jno
ds
aas
outsl
hlt
into
jnp
pop
xchg
xor
ljmp
fsubs
pop
and
or
mov
mov
es
add
das
lret
cmp
outsb
imul
mov
les
jge
dec
xor
aad
fcoms
add
es
mov
pop
mov
and
sub
fiaddl
and
pop
fists
adc
call
xor
into
fnstsw
stos
lcall
getsec
rcrb
loopne
push
dec
fld
in
gs
pop
lahf
xor
inc
lcall
push
dec
mov
popf
dec
sbb
lock
int3
shrl
inc
dec
divb
lret
call
jb
jb
dec
outsb
cmp
movsl
dec
mov
data16
hlt
sub
jmp
xor
into
and
xor
sub
aaa
cmp
or
testb
sub
in
cmp
add
test
fidivrs
jle
vmwrite
insl
xor
push
divl
rolb
fidivrs
cmpsb
push
inc
jg
mov
insl
push
jno
daa
hlt
ds
mov
fistl
mul
lret
push
sub
xchg
lods
adcb
mov
pop
inc
mov
shrb
add
jno
jmp
push
repnz
lret
pushf
xchg
repz
pop
ds
repz
cmpsb
add
pop
dec
mov
ret
mov
inc
lret
fs
scas
pop
pushf
fcoms
mov
jp
loop
push
adc
imul
repz
sbb
or
incb
push
xor
cltd
mov
rol
fbstp
movsl
jbe
adc
xor
adc
sbb
xchg
imul
push
mov
loop
cmc
movsb
sbb
dec
sub
add
mov
test
and
in
aas
sub
push
mov
push
insl
inc
outsb
cmp
les
or
orb
scas
jo
movsb
xor
cli
sbb
xchg
and
jp
cmp
sahf
ja
pop
movsw
or
aam
jecxz
lcall
lahf
add
imul
adc
mov
mov
cmpsb
ljmp
ja
outsl
xchg
orl
addr16
add
in
das
jbe
test
hlt
mov
loopne
sub
add
xchg
ljmp
jecxz
gs
fdecstp
pop
mov
pop
test
aas
jmp
shll
es
add
fcomps
cs
std
inc
ss
movsb
inc
push
dec
fcoml
aam
pop
repnz
pop
and
cltd
lods
pop
cwtl
in
or
or
sub
jns
pop
aaa
adc
pop
sbb
xchg
mov
les
and
push
xchg
stos
adc
inc
pushf
jbe
sub
arpl
divb
xlat
adc
sbb
inc
fcomp
xchg
mov
insl
fmuls
adc
or
call
lcall
pop
dec
pop
jne
add
mov
pop
das
clc
addl
inc
lret
repz
and
inc
or
icebp
push
test
outsl
push
testl
push
lods
xor
xlat
fdivrl
jl
xchg
aaa
mov
push
sbb
insl
fmull
in
xchg
jae
hlt
cs
adc
mulb
pop
dec
jbe
pop
xor
mov
xchg
leave
ret
mov
sahf
adc
aam
leave
adc
add
or
fstpl
out
dec
mov
hlt
xor
or
mov
mov
ror
pusha
xchg
sbb
mov
sub
jbe
inc
mov
fisubrl
add
int
inc
arpl
aad
add
leave
inc
enter
sub
or
or
mov
das
xchg
scas
adc
arpl
ja
add
clc
andb
xor
add
adc
cmpsl
repz
mov
loop
or
inc
or
icebp
xchg
arpl
dec
xor
mov
sti
stos
call
adc
xlat
cmp
into
xchg
in
mov
les
jg
dec
pop
or
and
mov
rolb
hlt
xchg
lcall
aaa
daa
adc
xor
xor
or
dec
xchg
and
xor
sub
xchg
fisttpl
mov
add
int3
mov
bnd
sub
dec
test
stos
xchg
divl
dec
es
andb
push
mov
outsl
into
xor
popf
addl
push
mov
icebp
mov
mov
ficomps
jno
xlat
in
test
mov
popa
rol
fisubrs
dec
mov
push
inc
icebp
cmp
inc
mov
dec
ret
lea
lock
xor
arpl
mov
cs
mov
jns
add
sub
adc
mov
sub
xor
pop
insl
jg
xlat
enter
cwtl
add
pop
push
inc
jecxz
push
sbb
xchg
jnp
movsl
jl
addr16
mov
sahf
push
insl
dec
inc
lcall
in
cltd
xchg
xor
insb
in
and
mov
pop
movsl
rcrb
jo
and
test
lods
ss
movsb
add
jmp
pop
push
or
mov
mov
shll
push
testb
pushf
out
mov
or
jne
or
pop
dec
or
fldenv
es
cmp
lock
call
out
iret
into
lods
lock
je
lahf
jo
insl
xchg
mov
shr
push
imul
shll
xchg
xlat
jmp
lods
xor
jg
dec
mov
movl
in
xchg
das
test
xchg
cmpb
test
in
orl
mov
mov
call
imull
or
femms
subb
cs
daa
push
stos
mov
xchg
pop
dec
dec
mov
jp
mov
lcall
outsl
push
ljmp
jmp
lret
call
inc
push
pop
mov
mov
push
jno
inc
popa
mov
hlt
adc
jle
aad
arpl
int
mov
sbb
into
movsb
jle
add
fmulp
push
cli
cmp
dec
mov
sub
or
pop
add
in
mov
das
shlb
pop
imul
leave
mov
xchg
jae
dec
mov
insl
mov
incb
push
or
js
clc
add
mov
cmp
pushf
cmp
mov
daa
ret
mov
das
push
mov
cmp
mov
sti
dec
loope
shrb
loop
sbbl
cwtl
stc
mov
outsb
mov
mov
adc
xchg
sub
xorl
pop
repnz
fcmovne
mov
mov
in
inc
xor
mov
ficomps
xchg
adc
shlb
xchg
mov
fists
out
inc
pop
movsb
adc
int
or
adc
mov
pop
sub
sub
das
outsb
inc
insl
data16
sub
sbb
mov
jne
lds
mov
shll
daa
push
pop
sub
cmp
aam
mov
inc
pop
pop
push
mov
and
and
bound
pop
mov
sbb
sbbb
mov
fists
fwait
inc
sbb
mov
enter
lret
adc
movsl
push
cltd
pop
pop
cmp
jg
xchg
les
pop
mov
pop
loop
cmpb
mov
pop
cmpsb
push
push
lret
push
lods
dec
data16
subb
lret
leave
pusha
sub
fwait
fwait
imul
mov
xor
loopne
mov
adc
jns
mov
mov
sub
cmc
scas
sbb
mov
inc
push
pop
and
xorb
fs
test
mov
and
ljmp
push
mov
lret
jb
aaa
js
lea
or
pop
mov
cli
in
add
jo
fucom
add
cmp
sbb
adc
sbb
sti
jle
mov
or
jge
mov
stc
and
loop
jg
mov
push
adc
dec
idivl
adc
test
inc
mov
sarb
adc
loop
or
sub
repnz
repz
ficompl
xchg
ss
push
and
int
out
xor
movsl
sub
outsb
and
or
sbb
xchg
jne
jecxz
mov
roll
repz
out
mov
mov
jno
dec
or
jecxz
mov
jae
cli
or
push
aad
xlat
jno
maskmovq
testl
clc
out
mov
xor
push
dec
inc
dec
orl
sub
subl
xchg
stos
push
in
icebp
dec
rcrb
clc
fsubp
adc
inc
fs
or
sbb
inc
jo
pop
jbe
out
jo
ja
roll
xchg
repz
cmpsl
outsb
fstpt
mov
fldcw
fistl
xchg
cltd
lcall
sub
mov
pop
sbb
or
fmulp
push
arpl
fstps
pop
inc
or
out
fists
dec
adc
pop
insl
dec
mov
fcoml
mov
mov
test
xor
mov
enter
cmp
pop
popl
pop
and
xor
fstl
cmp
enter
lahf
jnp
cli
test
cmp
gs
push
in
test
or
push
out
inc
dec
dec
sbb
cmc
inc
pop
fs
fs
dec
pop
xor
cwtl
jle
pop
pop
das
lret
dec
loope
mov
pop
sub
jle
mov
dec
outsb
mov
pop
decl
pop
mov
test
adc
mov
xor
push
in
mov
cmp
int
outsb
daa
repnz
sub
push
mov
popa
and
scas
adc
icebp
pushf
fcmove
pop
xchg
notb
add
aas
pop
mov
pop
mov
mov
test
pusha
xchg
and
jbe
cmp
mov
sbb
aaa
adc
xlat
mov
stos
dec
imul
jo
loopne
cmp
bound
xor
cmp
xor
pusha
jecxz
mov
sub
push
das
push
jl
inc
jns
mov
xor
testl
sub
cmp
outsb
test
aaa
orb
add
dec
inc
lahf
sub
cmpsl
cltd
lock
shrb
or
xchg
cmp
call
scas
aaa
mov
jl
mov
cmpsl
mov
outsl
and
insl
sub
xor
shll
dec
jmp
dec
lds
test
jb
add
pop
pushf
mov
xor
pop
cmp
jno
mov
dec
inc
pop
mov
push
daa
out
mov
aam
pop
and
mov
or
jle
mov
imul
jecxz
dec
lret
rcrb
and
add
mov
cld
sbb
xchg
les
pushf
jle
fcmovbe
ljmp
push
adcb
dec
mov
pop
jg
pop
jmp
mov
mov
outsb
pop
jno
fdivl
popa
sub
fisubl
xchg
adc
sbb
ss
jo
push
loop
pop
push
xchg
insb
sbb
push
adc
jmp
hlt
mov
mov
out
add
aam
insb
out
iret
jl
sahf
mov
popf
xlat
jp
bt
scas
out
and
std
popa
shrl
daa
cmc
sub
test
pop
gs
and
sub
xlat
mov
bound
dec
in
lods
and
lret
iret
out
mov
cmp
mov
cmp
aas
and
mov
outsb
in
xlat
cmp
xchg
es
bound
enter
mov
fldenv
mov
mov
adc
loopne
loop
fs
xchg
push
fbld
or
sti
test
icebp
jecxz
adc
roll
mov
dec
sub
in
or
cs
mov
cltd
test
nop
sti
xchg
jl
imul
call
sub
lret
mov
ljmp
pop
scas
adcl
pop
pop
arpl
fbstp
mov
shlb
icebp
into
jge
cmp
loopne
pop
pusha
popf
int
mov
hlt
cmpsl
sar
xor
daa
out
les
sbb
add
add
imulb
sub
movsb
outsb
xchg
imul
pushf
mov
cmp
fcomps
push
inc
mov
sub
mov
push
mov
ss
out
jae
jnp
and
pusha
imul
jg
imul
idivl
jl
mov
aam
jl
mov
lods
sub
mov
ret
mov
xorb
movsl
sub
hlt
lea
push
dec
ffreep
mov
pushf
clc
xchg
sbb
int
dec
pop
in
pop
sbb
jecxz
fisubrl
call
mov
scas
pop
arpl
push
stos
ret
scas
and
cmp
inc
ficompl
xchg
mov
movsl
inc
outsb
outsb
stc
jmp
xchg
pop
imul
jp
iret
inc
mov
sub
push
pop
movsl
pop
or
int
sub
mov
jp
mov
aaa
add
dec
xchg
ss
outsl
data16
cmp
into
sub
xchg
rcll
push
gs
ljmp
sub
add
xor
cmp
or
shl
add
lret
adc
test
mov
mov
mov
shl
rorl
pushf
fwait
and
xor
inc
mov
pop
xor
inc
out
std
inc
lods
out
mov
mov
imul
jno
daa
inc
mov
push
cs
jb
push
jge
mov
daa
adcb
shr
adc
cmp
sub
jl
mov
inc
jle
cs
inc
icebp
xor
mov
or
mov
pop
inc
adc
mov
aad
lds
popa
out
push
inc
lret
movsl
dec
sbb
pusha
lods
lock
jmp
add
dec
sbb
and
mov
xor
push
or
sahf
test
sbb
aas
xor
lret
ss
pop
lock
lret
sbb
call
sub
jae
dec
pop
push
jne
xlat
push
gs
and
xor
inc
mov
dec
mov
jae
add
push
shl
inc
lahf
push
mov
xchg
jns
pop
fsubs
sbb
sub
lahf
das
lods
ds
or
stos
jl
pop
stos
mov
fcoms
push
iret
ret
dec
cmp
cmp
out
mov
pop
pop
fidivrs
jb
jb
test
mov
pop
cltd
imul
test
adc
incb
sarb
push
leave
rcr
add
rorb
test
test
shrl
ljmp
add
or
fwait
inc
lahf
mov
ds
sub
inc
iret
out
in
ret
xchg
imul
push
jge
mov
in
xorb
or
lret
cmpb
mov
pushf
negl
xchg
ret
stos
int
xlat
rol
sbb
adc
nop
push
sub
roll
fwait
and
inc
insb
and
ret
mov
jb
and
or
pop
ja,pn
inc
adc
cs
movsb
syscall
sbb
imul
mov
sub
xor
je
and
insb
adc
aad
mov
mov
jo
xchg
int
notb
mov
or
lret
xchg
adc
call
cmpsl
mov
cwtl
pop
out
nop
imul
cli
lock
stc
sbb
aad
mov
insb
add
movsb
mov
mov
addb
daa
daa
pop
adcb
cmpsl
cld
test
test
xchg
out
push
addr16
cmc
sarb
int
rol
flds
mov
in
or
mov
icebp
or
mov
ret
mov
cmp
std
fiadds
scas
xlat
in
cmp
mov
jnp
hlt
mov
jmp
in
scas
ja
sub
push
jg
mov
repnz
sub
daa
mov
popf
jp
mov
sub
cmpsb
jns
jmp
sarl
jle
add
pusha
repnz
in
mov
and
jb
inc
inc
add
jne
inc
sbb
mov
push
sub
dec
stc
push
pop
nop
nop
loopne
push
jle
cmc
cmp
or
in
jecxz
push
xchg
sub
xor
sbb
mov
int
hlt
insl
dec
adc
dec
mov
xchg
xchg
or
lods
sbbl
cmp
push
sbb
outsl
xor
sbb
dec
daa
aad
cmp
es
data16
scas
mov
xchg
mov
push
add
add
and
and
and
mov
notb
and
aad
lds
lock
and
sbb
jecxz
jo
mov
dec
xchg
mov
clc
adc
pop
aaa
gs
out
cmpsl
or
xor
into
push
inc
in
cmp
ret
cwtl
or
push
mov
outsb
movl
push
fucomp
leave
sti
inc
loop
in
mov
adc
rcrl
fisubl
push
push
mov
xor
adc
test
pshufw
xchg
rorb
lods
push
cmp
xchg
mov
insb
aas
in
arpl
in
xchg
xlat
out
push
inc
pop
jnp
stos
test
or
xchg
pop
xchg
in
shlb
xchg
push
lret
cmp
scas
rcr
inc
sarb
dec
pop
mov
sub
pop
mov
sbb
add
mov
bound
or
and
and
jno
mov
sub
lds
sub
adc
mov
sbb
fsubp
mov
cmp
fsts
mov
mov
inc
movsb
fists
int3
popa
jo
xor
xor
sbb
pop
lcall
lds
das
repz
xor
fwait
dec
mov
jecxz
jg
cmpsb
jnp
push
sub
loopne
pop
ja
push
imul
lods
add
xchg
out
loopne
xchg
or
in
ja
jo
mov
cmp
jnp
mov
out
cltd
xchg
jbe
inc
jl
outsl
pop
cmp
ja
mov
mov
cld
inc
mov
ret
popf
cmp
jp
sub
add
pop
mov
ljmp
dec
subb
add
std
and
or
sub
in
inc
or
stos
ja
lods
xlat
lret
ljmp
adc
shrb
and
mov
dec
shrl
rcrl
and
add
fimull
sarb
or
addr16
and
mov
das
or
shr
pop
cli
mov
inc
push
test
div
jle
xchg
mov
dec
dec
xor
aaa
fwait
test
xchg
xor
push
xchg
test
and
fstp
sbb
fldt
lea
sbb
loope
mov
subb
sub
cmc
jb
push
shlb
call
dec
push
pop
insl
mov
fs
add
xor
mov
or
sbb
dec
inc
inc
fsubrs
rclb
mov
cs
shl
adc
mov
ds
xor
xor
sbb
jae
test
pop
adc
call
clc
je
sbb
inc
adc
or
fidivl
aas
dec
pop
into
les
leave
jle
movsb
test
add
add
mov
cli
mov
and
call
sub
mov
sahf
jns
xchg
push
sbb
stos
and
pop
and
xchg
pusha
adc
and
cld
mov
lret
or
add
fneni(8087
add
mov
sub
pop
jmp
pop
lret
xchg
filds
shlb
xchg
negl
fcomi
adc
iret
cwtl
and
cmp
push
xchg
inc
sbb
adc
sbb
ja
push
fisubrl
mov
cmp
add
leave
std
mov
dec
jmp
add
hlt
jle
pop
fcomi
popa
call
in
xchg
sub
fsubrs
jge
inc
inc
mov
mov
aaa
outsb
push
fnsave
mov
dec
fldt
xor
outsl
test
dec
and
repnz
dec
fs
inc
jns
or
xchg
fstl
rcrl
jg
jle
lret
xor
leave
pop
mov
pushf
fwait
into
dec
sub
xor
or
data16
mov
xor
add
fwait
movsb
fdivs
leave
scas
mov
out
xlat
jecxz
push
fcoms
das
lahf
repz
repnz
push
pop
bsr
sub
lret
cmp
cltd
es
mov
pop
aas
inc
shlb
sahf
mov
pushf
insb
adc
js
out
pusha
xlat
aad
cmp
inc
scas
dec
mov
ret
out
sbb
lret
sub
repnz
mov
jno
xchg
or
je
rcrb
loope
xorl
aas
sbb
add
dec
pop
mov
cwtl
aad
mov
cmp
mov
xor
jnp
mov
mov
sbb
lock
inc
lret
fisubs
mov
jmp
stos
sahf
repnz
inc
cmp
jno
nop
cmpsl
adc
adc
jnp
ret
push
mov
inc
or
fistpll
xor
les
push
sub
push
cld
shrb
sti
dec
gs
out
adc
pushf
dec
mov
test
or
mov
adc
mov
mov
push
cmp
insl
test
push
in
xor
cs
faddp
xchg
leave
inc
mov
sbb
cmc
and
dec
test
pop
iret
jnp
and
mov
push
cmp
orl
adc
adc
xchg
jecxz
jg
sub
cmpsl
xor
daa
xchg
or
int3
xchg
outsl
pop
pop
pop
lahf
push
mov
cmp
sub
or
pushf
mov
sub
jmp
fdivrl
outsb
js
dec
ss
enter
inc
imul
adc
pop
cmp
iret
into
sbb
inc
iret
aas
xor
icebp
mov
or
shrl
and
sbb
pop
add
pop
sub
mov
push
ret
add
fmull
cltd
jge
bnd
add
add
xchg
push
imul
movsb
mov
or
in
sti
jnp
cmp
adc
lock
mov
or
popa
adc
and
negb
inc
std
scas
xchg
push
cli
pop
sbb
inc
add
sbb
and
es
cmp
test
jnp
xchg
mov
mov
in
mov
mov
mov
fwait
push
cs
fnstsw
leave
or
jo
sub
push
jae
mov
sub
add
call
push
xorb
data16
push
or
push
nop
imul
popa
jnp
scas
ja
and
lea
fisubrl
mov
popa
dec
jmp
add
arpl
enter
sar
fisttpl
clc
cmpsb
subl
aaa
popa
pop
mov
in
inc
xchg
xchg
mov
jbe
sub
xor
ret
popa
cld
jno
out
sbb
inc
inc
add
cmp
ds
out
push
jns
imul
adc
in
lock
sbb
popa
push
xchg
movsl
cmp
pop
sbb
gs
push
inc
inc
lods
or
mov
movsb
adc
inc
or
mov
dec
xchg
fsubr
adc
and
movsl
adc
hlt
gs
dec
and
and
mov
outsl
xor
push
dec
cltd
sub
jno
jl
mov
add
cmp
aad
cli
es
mov
repz
into
fwait
aas
outsb
sbb
sub
fs
repnz
ljmp
mov
into
stc
outsb
xlat
fsubrl
flds
dec
fcmovne
xorb
and
xor
cltd
and
xchg
sbbb
push
sahf
hlt
xchg
adc
addr16
add
cli
jecxz
jae
adc
lahf
push
fs
loopne
fbld
mov
shll
and
xchg
xor
jecxz
movb
cmp
fcmovnb
add
into
nop
lods
sbb
fstpt
mov
dec
mov
jl
sbb
jns
lret
sbb
xorb
push
inc
out
dec
cmpsl
pusha
icebp
mov
add
cli
psadbw
movsb
xchg
cmc
xor
or
lret
inc
cmp
adc
push
mov
mov
inc
sub
lds
mov
mov
sub
rcl
adc
hlt
jmp
cli
sub
gs
sub
jbe
out
xchg
in
cmp
ja
push
adc
xor
mov
mov
push
das
mov
cmp
ds
adc
bnd
pop
sbb
in
lods
xlat
push
jns
int
xchg
mov
ja
in
nop
inc
std
inc
mov
add
dec
adc
pop
fisttpl
push
xor
and
cmp
pop
sti
push
aam
sbb
repz
add
or
sahf
test
pop
pop
les
and
inc
loop
xor
xor
jae
mov
loop
fmull
lds
es
ljmp
lock
scas
sahf
ss
xchg
and
add
mov
lock
push
loopne
push
lret
push
aad
and
mov
xchg
out
stc
or
pop
xor
xchg
stos
sbb
xor
add
cmpsl
test
xchg
arpl
lock
push
sub
jns
xorl
das
popa
pop
pop
cmp
adc
mov
jae
shll
sub
mov
or
sub
sbb
idivb
je
out
xchg
cmp
scas
add
jnp
lea
push
fwait
add
add
imul
mov
aas
cld
jae
inc
xor
sub
jge
mov
mov
push
add
insb
shll
inc
sub
das
pop
aam
inc
mov
not
xor
xchg
popa
call
das
jb
into
mov
mov
cmp
nop
push
in
subb
scas
dec
pop
out
push
incb
sub
ret
shlb
cmp
cmp
lds
mov
cmpsb
xchg
testb
out
adc
cmp
inc
outsl
xlat
sbb
insb
out
push
data16
xchg
shll
cmpsb
cmp
mov
mov
stos
out
ds
les
fisubl
push
in
mov
mov
dec
xchg
fiadds
push
jne
xchg
cmp
aas
enter
ror
lret
jecxz
xchg
fistl
add
push
inc
pop
mov
push
js
lahf
hlt
aad
lea
push
add
pop
xchg
add
xchg
je
sarb
outsb
imul
dec
pop
jmp
mov
push
addl
xor
push
test
push
test
add
je
shl
xor
add
test
mov
mov
icebp
xor
loopne
jle
hlt
fnstenv
or
scas
fisubl
pop
fnstenv
xchg
pushl
sahf
cmp
pop
xor
fnstenv
popf
aas
xchg
xchg
sub
cld
mov
pop
cmpb
xor
lea
add
cmp
out
push
pop
imull
or
js
mov
dec
js
sub
popa
and
sbb
out
leave
push
xchg
loope
lret
sbb
or
aad
fisttpll
mov
enter
std
dec
cwtl
dec
cmp
ss
push
hlt
fldcw
sbbb
xor
imul
jne
in
add
int3
lahf
lds
enter
out
lock
data16
cmpsb
ja
or
aaa
icebp
mov
and
scas
lret
cmp
push
cld
jp
mov
mov
jb
pop
sbb
rol
iret
dec
push
in
jg
mov
fists
cmp
cmp
nop
ret
add
icebp
pop
loop
ss
push
pop
pop
mov
outsl
mov
in
lret
int
negl
push
mov
jle
mov
mov
xchg
std
movsb
in
xchg
jnp
pop
scas
loop
inc
cmp
xchg
or
stc
fst
js
push
jl
loopne
xlat
push
mov
or
sub
xor
inc
popf
in
xchg
cmpsl
pop
and
imul
push
int3
sbb
inc
mov
shrb
lcall
js
or
pop
cmp
sub
adc
adc
rcrl
es
outsb
add
add
push
cmp
lds
ja
call
xchg
int3
pop
adc
jecxz
mov
lock
int
adc
sub
in
jmp
pandn
xchg
loop
outsb
mov
pop
jno
xchg
fdivp
or
aaa
jp
fisttps
inc
and
lds
jnp
pushf
pusha
sbbb
das
add
das
push
cli
fisubl
dec
addr16
push
fs
call
cmc
loopne
and
bound
std
pop
fucompp
mov
mov
mov
and
add
xchg
sub
lret
xor
push
bound
jge,pt
test
add
xor
fiaddl
cs
dec
imul
and
test
xchg
test
push
loopne
icebp
in
in
push
push
xchg
xchg
cmpsb
pop
popa
and
inc
xchg
call
mov
mov
cmp
scas
ss
dec
enter
xor
or
jp
mov
cmp
jo
jb
std
lods
dec
push
out
mov
mov
loopne
imul
jne
mov
lcall
adc
out
test
xor
aas
dec
ret
inc
jle
out
and
int3
inc
sbb
sbb
inc
mov
aaa
jns
scas
int3
push
fidivrs
sub
mov
fidivl
les
cmp
daa
lret
bound
test
mov
and
mov
and
xor
cmp
fnstenv
lea
push
and
cmp
mov
cmp
jns
hlt
and
add
mov
inc
pusha
xchg
pop
mov
adc
cmp
in
or
inc
shrl
shl
orl
mov
cltd
push
sub
imul
xchg
fcmove
xchg
sub
jbe
dec
in
sub
push
mov
sbbl
insb
add
fs
les
push
add
cs
enter
pushf
loope
out
stos
push
fistps
sbb
shlb
xchg
insl
mov
dec
xchg
lahf
xchg
xchg
jb
and
add
adc
movsb
std
push
in
outsl
rcr
or
into
sar
loope
cmp
adcb
cmp
inc
xlat
mov
sub
mov
int
fsubrs
testb
inc
rcr
test
pop
das
mov
aad
ja
pushf
bound
add
insb
test
push
mov
je
js
sub
cmpsl
insb
add
lock
repz
push
fcmovbe
mov
bound
dec
dec
mov
lds
jle
scas
shll
adc
mov
js
fstl
pop
icebp
shlb
cmp
pop
or
pop
push
inc
dec
sub
or
aad
mov
lsl
lods
xlat
adc
mov
jns
jne
xlat
jno
add
aad
push
or
jno
mov
insl
xchg
les
mov
and
jg
fdivrs
call
push
xor
aam
inc
push
mov
je
aad
dec
cmp
and
jno
syscall
mov
pop
lods
ja
jns
cwtl
add
js
dec
mov
xor
out
jbe
or
in
pop
test
pop
loop
stos
sbb
cmc
test
ljmp
xor
fdivrs
out
pop
daa
nop
ds
push
pop
inc
adcb
shl
loope
adc
out
sbb
push
ds
aad
push
test
cmp
iret
jnp
pop
cmp
shll
fstpt
xor
cmpsl
dec
cli
lcall
mov
dec
adc
mov
pop
mov
out
pop
xlat
setbe
mov
fcomps
ja
adc
leave
mov
xor
mov
aaa
xchg
pop
aas
fsubl
jle
and
push
cmp
mov
aas
and
cmpsb
cmp
or
push
cmp
mov
xchg
test
xlat
lods
dec
xchg
bound
ljmp
ss
push
lock
mov
mov
jns
test
fldcw
push
or
pop
mov
in
inc
dec
les
and
int3
ds
mov
pushf
jb
mov
negb
les
dec
sbb
pop
pop
jno
pop
adcl
push
int3
mov
jmp
repz
call
adc
push
in
pcmpgtb
sub
sbb
pop
sbb
mov
movb
cld
jle
jnp
or
cwtl
les
jecxz
xchg
push
mov
andb
sbb
ljmp
mov
xchg
imul
popf
jb
fwait
rolb
inc
gs
push
xchg
cmpsl
cmpb
mov
adc
xchg
lods
in
imul
dec
jp
jmp
loop
push
pop
outsl
out
inc
call
jle
jno
pop
ds
add
test
sub
push
in
mov
sub
and
add
ja
addb
adc
or
div
outsb
dec
int3
shl
sbb
out
arpl
jb
std
adc
subb
loope
inc
adc
xor
popa
in
mov
je
jmp
push
push
lcall
xor
cmpsl
aam
shrl
sub
or
jl
dec
mov
push
jge
js
or
jne
sub
mov
mov
les
push
dec
push
inc
cwtl
push
push
xor
push
stc
add
into
nop
adc
lahf
xor
and
sub
sub
push
aas
bound
lods
pop
fprem
sub
mov
lods
outsl
jmp
push
push
icebp
leave
in
pop
sub
mull
dec
popa
mov
sbb
rolb
push
stc
ret
or
mov
int3
bound
stos
idiv
pop
xor
stos
push
sub
sbb
ret
clc
mov
repnz
lock
sub
leave
jnp
jbe
add
jmp
dec
stos
ret
inc
cs
jmp
mov
fwait
in
mov
jb
fnstenv
loope
and
dec
in
call
sub
loopne
sub
inc
xor
add
xchg
add
lcall
xchg
fimull
out
cmpb
jmp
jns
pop
movsb
lds
jae
pop
ja
loopne
sbb
fdivs
inc
lods
in
arpl
addr16
push
push
fs
aaa
pop
out
fnsave
mov
jge
cmp
bound
jb
add
sub
jbe
pop
test
aaa
ds
inc
std
sbb
sbb
loope
ftst
pusha
test
sub
push
sub
mov
imul
cmc
clc
xor
icebp
adc
cmp
mov
cmpl
jbe
add
lds
push
ja
stos
bound
mov
inc
sahf
jecxz
dec
insb
jae
adc
push
jmp
jo
mov
jno
icebp
fdivr
pop
aas
mov
mov
lds
fidivrs
sbb
std
sbb
push
iret
and
jge
adc
xor
stc
test
stc
sub
sbbl
xor
push
sub
outsl
jecxz
jmp
into
std
push
cmp
aad
mov
scas
loop
mov
jno
cmpsb
and
jecxz
xlat
add
cwtl
or
cmpsl
pop
nop
mov
jecxz
xchg
mov
xorl
mov
ds
dec
js
cmp
push
adc
jbe
sub
and
sub
jecxz
fistl
leave
call
push
inc
cmp
clc
lock
mov
enter
jae
imull
mov
outsb
mov
mov
sarb
jns
jno
pop
shrb
leave
inc
inc
bound
cli
lcall
push
pop
push
stos
or
sbb
scas
scas
adc
adc
cmpsl
push
mov
or
push
sub
jbe
mov
or
sub
mov
outsl
mov
or
push
ljmp
lret
cmpsb
mov
or
cmpsb
int
cmovge
sbb
sbb
ret
adc
addr16
enter
xor
sbb
push
and
fistpll
add
xor
and
jns
int3
mov
call
test
inc
cltd
mov
scas
test
and
cmp
stc
shufps
je
negb
sbb
mov
mov
je
out
int
aad
dec
or
cli
pop
shrb
aam
mov
or
out
add
test
pavgb
sbb
sahf
int3
xchg
std
in
or
cltd
inc
xor
sti
or
cmp
adc
or
outsb
and
and
or
test
int3
cmpsb
sbb
cmp
setne
out
push
xchg
lea
add
subl
mov
mov
rcl
dec
push
xor
jno
push
mov
fs
rcrl
and
shrb
cwtl
jne
xrelease
js
sub
adc
mov
mov
mov
ja
mov
test
pop
cs
loope
xchg
lods
mov
insl
popf
inc
cmpsb
pop
and
inc
smsw
icebp
jae
xchg
mov
imul
je
fdivl
cltd
loop
pop
adc
cltd
popf
fldcw
add
mov
dec
adc
aam
nop
jmp
fwait
iret
fldl
imul
jmp
and
fstpl
lods
imul
mov
scas
call
add
les
adc
pop
roll
xchg
lcall
adc
jo
mov
dec
lret
lods
aam
shr
fsubr
enter
xchg
ds
lea
pop
out
mov
repz
push
xor
es
dec
in
cmp
push
pop
push
out
aas
xor
dec
es
in
in
andl
ljmp
jl
out
loope
cmp
cmp
inc
adc
xchg
and
mov
sbb
push
fs
cmpsl
cmp
lret
pop
inc
pop
fwait
or
cmp
xchg
out
and
add
adc
insl
jnp
inc
sub
fcoms
sbb
inc
fcoms
mov
cs
sti
es
xchg
rolb
inc
leave
jno
mov
mov
jb
repz
stc
rcrb
aaa
cmp
in
push
fs
dec
sbb
out
outsl
mov
mov
imul
or
loop
das
jb
test
ret
rcr
mov
pop
jl
dec
icebp
inc
or
inc
shlb
mov
les
pop
scas
addb
xchg
mov
and
fnsave
mov
shll
xchg
shl
shll
ljmp
and
lahf
insl
cmp
mov
mov
push
insb
or
push
mov
xchg
inc
inc
inc
inc
repnz
push
jg
xor
sti
mov
shl
jmp
dec
and
gs
inc
mov
scas
and
jo
xchg
int3
shrb
adc
imul
cmp
sbb
jne
adc
inc
popf
add
dec
inc
testl
fisttpl
sub
out
dec
ss
int
clc
insb
mov
xor
add
sub
adc
mov
lahf
add
dec
call
lcall
mov
in
pop
xor
js
inc
mov
fbld
enter
clc
and
shrl
and
mov
dec
daa
cmp
adc
lods
out
ja
outsl
dec
fwait
xchg
adc
pop
mov
rcrb
xor
lret
jecxz
orl
sub
pop
or
mov
push
stc
insl
push
stc
cmpsb
inc
mov
ret
mov
ret
jbe
stos
cmp
adc
xchg
lea
xchg
jne
sbb
out
adc
sub
sub
addr16
cmp
xor
adc
inc
sti
pop
popf
inc
mov
inc
or
aad
adc
xchg
xchg
repnz
pusha
int
repz
add
pop
das
mov
dec
lds
push
je
arpl
dec
xor
aaa
mov
daa
dec
outsb
test
xchg
mov
imul
mov
sahf
cmpsb
enter
mulb
ljmp
lret
mov
in
pop
mov
adc
xbegin
jbe
mov
cmp
sbb
jp
test
xor
or
adc
add
movsl
push
in
lret
leave
mov
daa
aas
call
or
aad
insl
cmp
and
bound
and
dec
notb
jecxz
sub
xor
sbb
int3
xchg
jno
mov
int3
jbe
inc
out
decl
inc
mov
ljmp
dec
test
les
fs
push
inc
arpl
cmp
je
pushf
sub
iret
jno
out
adc
lods
cmp
pushf
lock
mov
sub
or
popa
inc
push
int
and
cmpsl
pusha
stos
outsb
aaa
iret
push
icebp
add
pusha
jl
ja
add
or
cltd
mov
jae
mov
lret
adc
imul
push
out
jo
inc
lcall
push
mov
sar
mov
std
add
push
inc
sbb
leave
push
mov
jmp
sub
fwait
adc
jmp
sub
add
outsb
mov
aas
sbb
andl
arpl
sbb
cmp
orb
jbe
xchg
jmp
fsts
xchg
add
aas
lcall
mov
pusha
adc
sub
xchg
xorl
cmp
or
shlb
push
mov
adc
push
add
pusha
js
add
imul
movups
jb
xor
or
cmpsb
enter
ds
sbb
add
ret
push
lret
popa
add
pusha
mov
aad
pop
repnz
leave
push
rorb
dec
repz
insb
push
ja
cmpb
clc
jmp
int3
inc
ret
adc
ljmp
shll
insb
inc
mov
cmp
push
jge
jnp
xlat
push
and
or
mov
clc
mov
xchg
sbbb
xchg
ret
ficomps
dec
pop
add
push
scas
and
pop
scas
movsb
mov
and
and
es
out
dec
in
dec
pusha
data16
negl
mov
fldcw
data16
outsl
and
jae
xlat
pop
jnp
jae
leave
adc
sti
lret
xchg
and
aas
pop
mov
inc
lock
mov
leave
add
ficomps
fimuls
lret
test
cmp
stc
movsb
movsb
mov
iret
adc
xor
popf
or
xchg
pop
out
mov
push
cmp
xchg
xor
and
xor
sub
rcrb
jge
push
sbb
pop
fneni(8087
push
pop
sbb
aad
mov
and
inc
xchg
inc
push
or
stos
xchg
in
xlat
popf
cmp
mov
adc
mov
jg
sub
add
sub
js
mov
je
mov
ljmp
lret
or
pop
mov
push
mov
cltd
cld
jl
cwtl
test
lock
jp
push
clc
test
out
pop
inc
movsb
jle
fisubs
xchg
mov
jbe
push
jns
push
rclb
mov
fwait
cltd
push
inc
int3
push
mov
repnz
out
xchg
rcll
ss
mov
lahf
inc
test
adc
addr16
mov
fnstenv
repz
mov
out
hlt
and
add
fs
xchg
xor
addr16
sub
into
loopne
inc
mov
loopne
or
cmp
in
aaa
sbbb
addr16
lock
stos
add
das
inc
scas
mov
pop
cli
mov
sbb
cltd
push
addb
mov
mov
dec
lcall
and
xor
sub
pop
dec
mov
add
dec
call
ljmp
jmp
jmp
stc
xchg
outsl
movsb
int
test
cmp
leave
rcrb
xor
daa
popa
outsb
mov
sub
mov
mov
dec
cli
imull
lods
daa
subb
and
shrb
xchg
mov
lods
orl
stc
push
and
add
cmp
jbe
into
add
in
mov
mov
sbb
dec
loopne
pop
lcall
fucomp
xor
pop
fidivrl
xchg
push
aam
mov
add
mov
pop
test
daa
aaa
call
and
jbe
andb
imul
stos
mov
shll
sub
cmp
adc
imul
loop
popa
adcb
sbb
push
popf
lret
add
rcrl
mov
lcall
mov
loopne
dec
push
pop
roll
out
pop
jmp
jl
pop
aad
idiv
pop
bound
ja
hlt
add
jecxz
icebp
loopne
cli
bound
aad
cwtl
cmpsb
fmuls
jno
in
int3
push
jge
mov
xlat
rorb
xchg
sahf
js
push
test
pop
or
lds
rdmsr
jle
outsl
mov
inc
adc
or
jge
xor
cmp
and
frstor
adc
data16
push
cmp
dec
push
scas
aas
jne
fnstsw
mov
mov
pop
add
add
scas
add
xchg
jg
scas
mov
rcl
sbb
xchg
inc
shll
lret
mov
push
push
dec
pop
xor
mov
scas
mov
mulb
sub
push
pop
test
aam
pop
andl
clc
ja
adc
pop
lret
dec
adcb
sti
out
fs
stos
lret
mov
dec
sbb
sub
pop
jno
addr16
fidivl
jae
mov
fidivrs
jnp
adc
jo
shrb
int
shll
hlt
insl
or
sub
test
pop
loope
mov
mov
push
push
push
dec
push
mov
fisubl
in
add
mov
flds
rorl
jecxz
jmp
dec
loope
into
xchg
mov
out
xor
cld
pusha
int
lods
xlat
dec
cmp
push
mov
xchg
mov
fs
xchg
fcomps
push
gs
add
adc
cmp
in
cmpsb
mov
sti
pop
add
pop
adc
jne
sti
or
sub
jb
sbb
cmp
ja,pt
pop
push
mov
je
ret
outsl
push
dec
rorl
add
aad
push
pop
stc
jge
in
pop
sbb
dec
in
addr16
sub
cli
add
fists
cmc
test
jnp
push
mov
xchg
xchg
add
add
mov
lds
stos
inc
aaa
test
add
call
ja
data16
xchg
lods
in
adc
into
jbe,pt
inc
insl
sub
jbe
inc
pop
cmp
xorb
cmp
je
out
mov
cmp
fidivl
lods
movsb
je
fndisi(8087
rorb
fwait
mov
mov
hlt
cmp
cmp
inc
push
xor
or
gs
sbb
cmp
ret
sbb
out
lods
mov
xchg
xchg
out
inc
jno
das
jl
sub
mov
inc
dec
gs
stos
sbb
arpl
pusha
shll
jb
jp
lds
dec
pusha
or
enter
insb
lret
mov
test
mov
mulb
stc
into
mov
in
sbb
adc
in
xchg
scas
sbb
mov
mov
xchg
mov
cmp
mov
add
xchg
stos
enter
bound
jae
dec
popa
out
xor
iret
and
pop
lret
mov
jge
jb
push
pusha
pusha
xor
mov
jp
jl
fwait
mov
scas
dec
dec
outsl
fsubl
push
jmp
jb
add
data16
test
imul
sbb
mov
and
cmp
or
pop
loope
mov
in
shlb
push
ret
xchg
dec
loope
imul
sarl
stc
pop
push
ss
loop
mov
jl
icebp
jo
add
xchg
push
roll
push
jb
inc
xchg
lea
pop
push
out
adc
sbb
rorl
out
repnz
push
aad
stos
inc
loop
xor
out
dec
xchg
imul
ljmp
or
push
adc
ret
mov
ret
aam
sti
fidivl
test
aad
xor
sub
push
popa
inc
sbb
ret
cmp
pop
sysret
dec
push
pop
jne
loope
int
test
nop
pcmpeqb
cmpsl
mov
test
adc
mov
imul
repz
pop
sub
cli
jns
mov
or
ret
cltd
pop
sbbb
lea
sbb
je
mov
cld
roll
cli
daa
lds
imul
lods
mul
mov
vpand
adc
push
sti
iret
test
cmp
mov
push
or
sbbl
cmpsl
cmp
roll
inc
jge
add
addr16
sub
lea
mov
lock
xchg
sbb
fwait
adc
ljmp
mov
les
mov
pushl
fwait
jne
inc
cmp
leave
cltd
cmpsb
pop
or
iret
jns
push
and
xchg
aad
mov
test
mov
sbb
sbb
mov
in
fs
dec
dec
sbb
aas
addb
xor
jns
fnstenv
push
pop
mov
adc
dec
sub
push
mov
sbb
in
xchg
sbb
cmp
imulb
ret
frstor
pop
or
insl
mov
push
jae
push
daa
pop
jge
cmp
add
push
add
jns
xor
push
dec
jmp
jo
mov
loope
mov
xor
dec
push
shr
pop
jp
lods
in
xchg
push
xchg
cltd
es
popa
faddl
out
sbb
or
mov
add
or
add
notl
cmpsb
sbb
enter
pop
sbb
pop
dec
jg
aad
addr16
call
int
xchg
inc
cli
int
mov
mov
add
jle
xor
int3
push
cmp
xchg
into
into
push
mov
std
cmpsb
push
add
leave
adc
inc
mov
movb
mov
or
xor
xchg
into
aam
push
pop
mov
adc
cld
lcall
lea
outsb
push
xchg
ret
sbb
ret
int3
rolb
fstl
andb
fdivrl
loope
push
out
cltd
inc
jb
divl
lock
fildll
test
out
add
push
adc
pop
push
sbb
dec
jb
repnz
pop
push
loopne
es
xchg
addr16
add
xchg
andl
or
and
gs
clc
push
in
xchg
push
inc
push
int3
pop
sbb
call
ret
sub
jge
mov
out
pop
ljmp
push
or
out
aad
push
sbb
jae
dec
rcrl
xchg
in
sub
adc
out
jp
add
rclb
pop
stos
sub
es
add
adc
xor
sub
inc
pop
sub
call
mov
mov
test
mov
hlt
mov
jg
shll
add
pusha
and
pushl
xor
lods
mov
mov
push
adc
pop
les
icebp
and
outsb
aad
mov
stc
jbe
data16
iret
arpl
inc
or
push
xchg
fwait
inc
andb
sbb
enter
xchg
inc
and
leave
mov
cmp
pop
lods
jle
jle
xor
pop
xchg
cmp
pop
push
xor
cltd
mov
leave
and
xchg
push
xchg
fnstsw
mov
jnp
pop
test
xchg
cmp
adc
jae
sbb
xchg
or
sti
xor
dec
aaa
mov
mov
aad
fstl
scas
call
jge
xlat
push
adc
aas
rcrb
leave
push
push
adc
mov
add
rclb
pop
xchg
ds
pop
mov
mov
jo
jns
push
or
and
jns
pop
xlat
inc
stos
cmc
xor
jecxz
int
pop
call
jo
cs
ds
test
xor
int3
cld
cwtl
inc
sub
cs
movsl
addr16
sahf
pop
mov
daa
decl
and
loop
cmp
ret
pop
in
andl
cmp
shll
enter
sbb
mov
xor
jnp
in
cmp
in
scas
xor
mov
fidivl
leave
lret
test
shrb
dec
adc
mov
xchg
dec
sahf
imul
out
movsl
and
push
jae
xor
inc
ss
mov
insb
cmp
lret
pop
int3
mov
js
mov
cmp
adc
jae
pop
out
jae
ja
adc
das
sbb
push
push
sbb
leave
mov
fs
rcll
xor
shll
adc
sbb
hlt
sub
daa
mov
inc
add
stos
jge
and
jp
movsl
arpl
mov
aaa
test
aas
mov
add
enter
push
push
cmp
xor
adc
adc
add
inc
push
xchg
sub
adc
fcmovu
shrl
js
cmc
lret
int3
loop
push
cltd
jge
aam
mov
xor
sub
cmp
std
js
fiaddl
xor
jl
shll
adc
or
ljmp
pop
int
sub
adc
xor
add
mov
adc
sub
dec
in
sahf
push
mov
test
sbb
and
movsl
insb
insb
aam
cltd
data16
sbb
sub
or
jno
or
out
xchg
cmp
or
scas
pop
lea
fs
xchg
push
or
jo
lcall
cmp
push
pop
mov
lds
cmp
aaa
pusha
std
adc
push
lds
xchg
jp
idivb
xchg
mov
call
roll
pop
outsb
sub
or
rcll
xchg
push
mull
ss
enter
cmc
xchg
add
outsl
bound
dec
test
shrl
stos
dec
and
sub
imul
out
je
dec
add
add
pushf
das
lret
out
sub
and
or
stc
cli
jo
imul
jns
aad
es
jnp
dec
cmc
cmp
adc
sahf
popa
fiadds
popa
push
and
cld
es
add
sbb
inc
xchg
jle
add
and
rorb
sub
jbe
lods
or
das
jbe
jmp
xchg
jae
cmp
xor
mov
jge
lods
push
shlb
push
ss
shl
sahf
xchg
int3
cmp
inc
jg
aaa
stos
mov
outsl
je
and
addl
test
insb
mov
mov
mov
jo
imul
lods
jmp
lds
mov
sbb
and
arpl
fistpl
mov
cli
icebp
call
push
push
mov
test
les
sub
push
icebp
lods
or
std
fsubrs
mov
nop
movsb
loop
push
addr16
pop
sahf
cltd
xchg
inc
hlt
cmp
sbb
in
popf
sbb
nop
in
jae
dec
mov
and
ror
or
insb
inc
adc
ret
lds
add
and
popf
ljmp
fadds
repz
pop
sbb
int3
in
mull
rolb
pop
add
and
out
dec
ror
jno
fwait
cmpsl
jns
jg
jno
fs
adc
inc
pop
or
dec
mov
and
cmp
shll
lea
sbb
jp
cwtl
fsts
xchg
xchg
adc
adc
dec
push
arpl
jle
sub
mov
out
popf
jge
shlb
pushf
addr16
call
or
pushl
cmpsl
fdivrs
cs
xor
lods
jae
imul
sbb
or
or
test
cwtl
mov
loope
fistps
mov
in
js
push
cld
cli
repz
stc
jge
pop
mov
mov
xor
adc
shrl
repz
imul
inc
fs
iret
fstpt
adc
xchg
mov
inc
lret
adc
aad
fiaddl
dec
mov
shlb
loope
addr16
and
jae
orb
popf
and
dec
or
mov
xchg
lods
xchg
jae
cmp
jmp
in
sahf
enter
out
mov
mov
out
inc
pop
dec
cmp
lds
jns
into
out
daa
ljmp
sbb
push
add
push
dec
jecxz
cmpsl
push
mov
dec
inc
dec
push
fisttpll
icebp
add
inc
scas
cmpsb
stos
add
clc
jne
push
nop
idiv
scas
gs
pop
jno
mov
repnz
adc
call
les
add
aaa
ss
inc
and
mov
mov
inc
xlat
ret
iret
ss
call
xchg
orl
mov
mov
jo
popf
and
push
push
inc
into
or
imul
push
rolb
stos
adc
in
cld
outsb
data16
in
cmpsb
scas
iret
pop
pop
stos
mov
ljmp
add
push
jno
pushf
cmp
mov
jp
jmp
jnp
sbb
test
cltd
xchg
leave
inc
decb
xchg
mov
jnp
insb
jp
mov
jb
lret
pop
xchg
cmp
test
sub
jecxz
fs
adc
xor
mov
cwtl
jg
push
mov
leave
movsl
or
test
pusha
xchg
mov
pop
int3
fsubl
xor
or
mov
add
dec
jb
add
sub
ja
sub
xor
scas
xchg
sub
mov
fs
mov
xor
test
xlat
mov
inc
and
fdivrl
xor
xchg
outsl
inc
pop
mov
push
sub
xor
mov
mov
in
ret
dec
test
mov
movsl
pusha
jecxz
repz
xor
cmp
mov
mov
fs
and
popf
mov
mov
or
cs
stc
fidivl
aaa
pop
mov
jnp
xor
clc
push
out
cmp
test
and
mov
cld
aaa
pop
xor
divl
jbe
scas
sub
clc
daa
sub
inc
mov
jl
sbb
jmp
in
push
dec
jmp
push
ja
mov
add
outsl
idivb
idivb
repnz
in
push
inc
jge
clc
cmp
pop
inc
inc
mov
sbb
mov
imul
repz
jo
sbb
dec
inc
cmp
pop
cmp
mov
ljmp
xlat
pop
popf
jnp
sub
and
inc
test
cli
adcb
sbb
xor
adc
sahf
jp
xchg
sub
mov
add
adc
or
xor
imul
insb
pop
inc
out
mov
imul
inc
xchg
fwait
cmpl
sub
stc
cltd
js
inc
subb
pop
push
mov
out
shrl
push
xchg
xchg
lret
ret
inc
mov
fwait
push
aad
movsb
ss
mov
jge,pt
pusha
roll
clc
aas
mov
pop
icebp
mov
mov
push
dec
std
mov
shrl
mov
ret
cmp
das
lods
push
in
xchg
pop
inc
jg
stos
pushl
decb
pop
add
adc
push
jnp
mov
xchg
add
inc
xchg
jnp
cmp
andb
mov
sub
cltd
aaa
pop
adc
mov
shl
in
mov
pop
movsb
or
rcrl
xor
mov
adc
popa
imulb
ds
scas
push
std
ret
sbb
rorb
dec
cmp
outsb
xchg
rcll
push
lret
xor
je
roll
daa
xchg
nop
addb
fwait
jnp
mov
and
ficoml
outsb
icebp
jo
and
pop
mov
pop
mov
adc
fcoms
adc
add
test
mov
mov
xor
jg
in
sbb
js
add
add
lahf
sbb
and
loopne
je
sbb
call
push
add
fidivrs
push
aaa
or
or
cltd
xor
adc
rol
mov
jmp
cs
or
xor
ret
mov
pop
es
push
mov
stc
inc
inc
mov
mov
out
add
insl
jge
imul
gs
cmp
add
inc
xchg
jecxz
push
sbb
in
dec
jo
add
inc
enter
aad
jne
sti
ficomps
stos
push
insl
mov
mov
add
xchg
xchg
or
xchg
les
aas
pop
mov
aad
push
push
inc
mov
pop
fidivrl
pop
das
and
mov
adc
loope
xor
mov
insl
fldcw
shrl
out
nop
push
pop
pusha
jo
sub
test
out
sbb
lcall
ss
leave
or
sti
cltd
movaps
sub
inc
sub
iret
and
push
test
lcall
mov
je
xor
leave
cmp
xor
lret
jae
add
mov
lock
pop
lods
cmpsl
jnp
mov
adc
fstpl
jo
sbb
repz
out
xchg
sub
xlat
xchg
insl
jnp
sbb
push
adc
ret
xchg
pushf
add
shlb
xchg
jecxz
das
testl
repnz
push
lods
sbb
fwait
xor
xacquire
icebp
mov
mov
ret
inc
in
and
sarl
fs
push
adc
in
pop
rcll
test
mov
pop
push
subb
jg
mov
inc
test
lods
cmpsl
push
insl
mov
cmp
sbb
stc
mov
fnstsw
cld
add
inc
xlat
pop
aas
adc
pop
and
jp
pop
cs
jg
add
lock
test
js
stos
or
dec
mov
mov
mov
mov
into
mov
loopne
cwtl
jne
pop
push
cmpsl
test
fmuls
daa
mov
fcompl
shll
aad
test
mov
xchg
sbb
in
xchg
mov
sbb
fbld
ret
movsl
push
dec
and
jmp
xchg
xor
push
xor
lret
cltd
cwtl
lock
xor
push
xchg
fsubl
enter
lret
push
add
incb
or
outsb
lahf
mov
jns
mov
iret
fbld
adc
and
repnz
das
dec
fists
js
ss
and
inc
jnp
pushf
sub
cmc
in
cmpsb
roll
repnz
fld
sub
xchg
push
cmc
iret
adc
push
jb
xchg
adc
mov
insl
dec
add
jle
xlat
insb
xor
xchg
jp
and
mov
or
lcall
cwtl
in
jl
cmp
addr16
mov
push
mov
adc
daa
icebp
sub
lret
push
mov
cmp
pop
mov
xor
lret
dec
xor
sbb
outsb
pop
mov
jae
xchg
xchg
in
sahf
int
out
add
pop
mov
and
push
inc
mov
hlt
pmulhuw
xor
in
or
push
pop
xor
mov
popf
xchg
sbb
imul
mov
fs
dec
inc
lret
in
movsb
adc
pop
xor
mov
jb
cmpsb
mov
sbb
addb
add
jo
scas
fiadds
cmpsb
inc
adc
test
or
sbb
adc
cmp
dec
imul
andb
ret
inc
push
xchg
stos
arpl
mov
mov
sbb
loop
call
and
imul
mov
dec
sub
push
push
or
mov
ss
fwait
popf
lret
fbstp
iret
cmp
cmp
lea
in
cld
xchg
mov
int3
mov
fildl
adc
insl
pop
push
pop
mov
jle
sub
aas
std
stos
flds
pushf
insl
jl
out
pop
or
hlt
dec
sub
push
xor
fwait
pop
xchg
pop
mov
xchg
mov
mov
fcoml
roll
pop
insb
mov
bound
pop
inc
divl
cmp
add
cld
cwtl
mov
inc
imul
popa
xor
popa
adc
pop
sarl
mov
aad
xor
fcoms
cmp
jo
jne
pop
and
mov
ds
xchg
cmp
pop
jle
fs
push
fsts
or
das
add
out
sub
hlt
inc
sbb
sbb
fsin
adc
xor
outsl
lods
ds
and
jns
and
add
mov
shll
add
ja
es
pop
push
adc
pushf
test
push
add
mov
pop
ljmp
popf
andl
and
cmpsb
pop
aaa
and
lahf
insb
sbb
in
insl
cmp
popf
cmc
fpatan
lret
dec
xor
inc
lds
cmc
jle
push
jns
frstor
out
mov
notl
je
adc
add
sahf
aaa
jg
xlat
pop
aam
add
cmpsb
or
push
jb
popa
mov
pop
jnp
xchg
mov
push
adc
mov
xchg
nop
in
xor
sub
insb
mull
push
sub
dec
fisubrl
or
test
bts
adc
lock
ljmp
cwtl
mov
icebp
cli
cmpsb
jmp
jae
icebp
mov
insl
je
and
pushf
jl
mov
lods
cmp
cmc
push
jnp
stos
mov
sbb
mov
pop
ret
jecxz
mov
sbb
add
and
sub
sahf
test
inc
or
in
arpl
mov
leave
lods
scas
mov
cwtl
mov
jp
sarb
into
mov
call
pop
push
add
rcll
mov
jle
dec
lods
jns
ss
xor
push
fucom
fdivp
xor
mov
adc
sbb
aas
jg
push
outsl
pop
or
pop
in
repz
pop
aas
and
clc
loope
insb
mov
pop
inc
sbb
mov
imul
lods
cmp
jne
adc
xchg
shrl
sbb
dec
bound
sbb
lea
xor
int
in
dec
jne
clc
pop
push
mov
inc
out
jp
dec
imul
repz
dec
cmp
loopne
js
sti
sub
jb
pop
xchg
add
mov
repz
iret
sub
jb
xchg
push
inc
sahf
mov
push
hlt
jmp
sbb
jmp
cmpsb
es
cmp
fsubl
cmpsb
xchg
xchg
cmp
fcomps
and
into
xor
jle
pop
scas
cmpl
testb
int
lcall
dec
pop
bound
test
fidivrs
aam
mov
cmp
jg
sbb
dec
xchg
add
addr16
inc
fwait
push
inc
loopne
bsr
rclb
cmp
scas
xchg
rcll
in
inc
mov
pop
or
enter
mov
icebp
shrl
leave
cmp
int3
shr
imul
mov
mov
jnp
inc
rclb
sbb
push
sbb
repz
ds
pop
enter
fnsave
stos
add
sub
cmp
pop
jno
cmpsb
into
add
jl
ljmp
popa
xchg
sub
rcrl
loop
xorl
stos
ficoms
mov
pushf
aad
mov
mov
out
sbb
insb
xchg
in
imul
mov
stc
adc
pop
hlt
test
int3
push
out
fnstsw
xchg
mov
push
cmpsl
push
jg
lcall
and
xchg
cltd
mov
dec
xor
int3
mov
icebp
loopne
rorl
cmc
arpl
pop
adc
or
jge
mov
rclb
scas
adc
sbb
aam
cmp
dec
jae
jne
lret
clc
xchg
int3
pop
jno
cmp
pop
std
inc
cmp
aas
xchg
pusha
lea
ret
push
test
push
lds
out
insl
in
and
xchg
pop
dec
fists
iret
std
lret
mov
fsubrl
xchg
cld
add
rcl
lret
cmc
hlt
xchg
or
mov
pop
sbbb
push
dec
test
testb
pop
dec
in
jecxz
inc
xchg
lret
pop
cmpsl
fcmovb
dec
xchg
sub
outsl
scas
xchg
shll
jo
ljmp
shll
repnz
jne
mov
mov
xor
imul
xchg
outsl
sbb
mov
mov
xchg
push
jbe
lahf
mov
jle
inc
or
fcmovbe
test
shll
movsb
jecxz
gs
outsb
mov
sub
add
movsl
jl
sbb
scas
imul
and
mov
arpl
xchg
test
mov
lret
lret
mov
movsl
cld
and
or
xchg
addb
xor
xchg
lcall
ljmp
xor
mov
push
xchg
mov
xchg
jle
rcrl
cmp
rcl
loop
pop
je
sbb
imul
and
outsl
outsl
jp
jp
xlat
movsb
jecxz
add
orl
outsl
cmc
addr16
dec
add
imul
fdivr
dec
push
xchg
push
jecxz
sbbl
jno
in
xlat
jb
sbb
jno
mov
mov
cli
mov
ds
movsl
nop
lret
pop
sbb
jae
push
lods
cmp
pusha
faddp
test
cmp
shlb
push
daa
and
ret
ljmp
arpl
divb
aas
pusha
aaa
push
xor
add
pushf
test
dec
add
adc
dec
xchg
sbb
sahf
sbb
bound
pop
sub
addr16
cmpsb
lahf
cmp
add
mov
dec
je
or
lret
adc
or
inc
shlb
jne
sahf
jnp
or
imul
sbb
push
push
shrl
outsl
movsl
push
add
mov
or
cli
sbb
test
fs
popf
mov
test
in
mov
and
stos
jns
pusha
lret
jp
insl
sbb
data16
in
shrb
cld
bound
pop
xchg
mov
aas
sub
pushl
jge
mov
imulb
xchg
cltd
inc
xor
pop
lahf
inc
shrb
lds
in
cmp
inc
out
in
xor
mov
pop
jl
adcb
imul
cltd
test
and
int3
sbb
out
xchg
inc
lock
sbb
shrb
xchg
aam
pop
orl
repnz
call
cmpsl
test
ss
jns
lea
jp
sarl
xchg
and
cmp
flds
pusha
and
rcr
sbb
fchs
andl
das
pop
shl
and
mov
outsl
leave
test
decl
mov
lods
xor
mov
sub
mov
mov
fsub
movsl
daa
test
addb
lea
pop
lea
lods
sarb
call
mov
dec
std
pop
jae
xor
pop
out
inc
lds
lahf
add
arpl
lret
mov
mov
test
sub
mov
mov
or
sar
es
jbe
mov
push
movsb
in
push
xchg
data16
mov
stos
add
cmp
xor
inc
cmp
or
cld
cs
jo
in
inc
fidivrs
xlat
sbbb
cmc
cmpsb
sbb
adc
sbb
das
imul
jb
mov
dec
cs
les
add
sti
dec
scas
cmpsb
outsl
sbb
sbb
movl
in
insb
sti
inc
cmpsb
test
adc
push
mov
fidivrs
push
out
sbb
repnz
jp
aam
addb
cmpsl
jg
dec
icebp
insb
jge
inc
pop
mov
xchg
daa
dec
mov
cld
mov
pshufw
imul
cli
insl
push
mov
dec
ljmp
adc
push
sub
in
popf
test
add
fldl2e
add
aad
inc
popf
js
cmpsb
sarl
and
jecxz
loope
data16
pop
xor
cmpsb
inc
outsl
push
mov
mov
and
mov
sbb
pop
pop
push
into
fcmovbe
imul
sbb
xchg
inc
pop
mov
dec
ret
push
mov
adc
push
pop
sbb
or
mov
pushf
jmp
inc
mov
sub
mov
add
mov
and
loope
popa
enter
jg
adc
mov
stos
sub
aas
xchg
stos
rolb
call
enter
sub
fdivs
fcom
pop
scas
fdivrs
mov
push
mov
aas
popa
inc
bound
jb
insb
sbb
loope
cmp
add
pushl
cmpsl
jecxz
in
fnstenv
sub
sub
xchg
mov
pushf
imul
or
ret
jp
adc
cmp
mov
in
js
insl
add
and
mov
dec
loop
or
loopne
jecxz
icebp
rep
cli
cmp
scas
jecxz
jno
decl
mov
lret
inc
aad
pop
sub
outsb
inc
add
xchg
sti
lret
jnp
xor
add
cmp
aam
dec
jno
mov
mov
pushw
add
cs
fwait
ja
push
mov
lods
notl
sti
mov
test
mov
xchg
push
arpl
xor
pop
into
cli
test
out
int3
dec
add
gs
sarl
idiv
mov
mov
aas
add
fs
xchg
add
pop
jecxz
xor
or
lods
outsb
jb
jb
mov
imul
mov
mov
fst
lea
cmc
sbb
dec
sbb
sub
subb
sbb
mov
add
imul
mov
adc
pop
or
fucomi
pop
xor
mov
pop
js
xchg
adc
pop
mov
popf
jne
sub
and
ret
push
call
je
dec
mov
dec
or
xchg
fildl
cmpl
push
pop
addr16
jmp
add
adc
mov
push
inc
mov
cmp
xchg
inc
sub
lea
jbe
push
xor
pop
xor
mov
push
ss
pop
ds
cmp
arpl
testl
inc
hlt
xchg
adc
add
mov
or
xorb
add
add
outsb
lcall
ljmp
push
cwtl
jno
adc
std
jno
dec
pop
mov
jmp
jp
rol
test
les
adc
mov
xor
aas
cmpsb
dec
cmp
xchg
lods
cmc
fdiv
aaa
lods
clc
cmpb
in
mov
repnz
jae
scas
jbe
xor
pop
xchg
jnp
sahf
adc
push
jl
adc
inc
pop
mov
call
xchg
pop
outsl
adc
push
add
jge
dec
inc
or
or
cld
sub
cmp
aad
test
cwtl
add
insl
fcmove
xchg
fidivl
imul
lcall
scas
mov
or
in
push
and
aad
loop
lock
mov
inc
adc
in
lods
sahf
jnp
dec
mov
outsb
test
out
shl
daa
or
cld
stos
push
push
mov
or
and
fisttpl
mov
jp
imul
mov
sbb
xchg
pop
dec
cli
lods
xchg
out
fisubs
mov
pop
mov
pop
and
sub
outsb
cmpsb
dec
nop
cmp
pop
jb
pop
out
push
jns
lea
dec
push
cmp
popa
lods
fsubrs
or
imul
in
cmp
in
or
pushf
lahf
sbb
cld
cltd
sarl
pusha
jae
enter
jne
int
in
cmpl
pop
jmp
jp
mov
mov
sti
dec
ret
inc
inc
es
dec
inc
sahf
or
test
add
popa
fwait
daa
mov
jle
xchg
jb
mov
in
and
or
fsubrs
and
push
out
lahf
nop
pop
xchg
int3
dec
stos
push
jbe
sbb
lcall
clc
fwait
cmp
cld
stos
sub
mov
xor
outsb
lret
xor
push
int
pop
mov
fstpl
imul
mov
vprotd
sti
xchg
inc
inc
in
dec
enter
fmul
stos
sub
imul
icebp
xchg
xchg
jb
mov
pop
mov
mov
imul
rcrl
in
leave
sbb
jle
pop
loope
rolb
pop
sub
jge
push
jne
xor
mov
lds
sbbb
xchg
cld
pop
lock
sbb
ret
fwait
dec
aaa
in
mov
ljmp
mov
push
stos
test
xlat
mov
mov
inc
rcll
test
xchg
and
mov
dec
popa
adc
inc
es
vcmppd
jne
adc
daa
mov
dec
jle
loop
and
sti
mov
cmp
mov
cmp
in
inc
or
je
push
jmp
aaa
pop
sub
cld
jnp
push
imul
loopne
cmp
xchg
sarb
adc
or
inc
sbbl
jl
imul
inc
sbb
xor
inc
mov
mov
sbb
in
pop
les
push
fildl
dec
movsb
mov
cmpsb
or
lods
mov
int3
lret
jo
call
add
add
mov
subb
clc
orb
es
cmp
xchg
aam
fnstsw
inc
roll
dec
addr16
imul
push
fucomp
xlat
into
mov
pop
aad
ds
push
xchg
or
shll
arpl
dec
pop
lods
lcall
cmpl
jl
pop
lcall
shrl
xchg
push
outsb
fwait
cmp
roll
adc
cltd
jmp
mov
pop
push
add
mov
decb
xchg
popa
sub
and
push
incb
add
pop
xor
lret
imul
aam
stos
cmp
dec
sbbl
aam
mov
lcall
push
jo
cmp
leave
movsl
inc
es
je
dec
mov
jg
cli
out
loop
push
ss
mov
aad
cmp
movsl
loop
movsb
cmpsl
xchg
fists
and
and
lcall
fnstsw
jb
inc
loope
push
jp
sarl
adc
pop
xor
push
jp
adc
sub
lods
xchg
cmp
xchg
xor
xchg
cli
in
inc
xor
inc
int3
adc
or
or
mov
jmp
outsl
mov
sub
and
push
push
mov
sbb
cmp
lcall
aam
repnz
icebp
mov
cmp
dec
js
mov
cmpsb
lret
std
dec
mov
loopne
and
rcrl
xchg
xor
fldl
std
fs
out
enter
add
jp
inc
daa
mov
and
jno
daa
popf
pop
cmp
in
jno
fnstcw
xchg
rorb
mov
add
add
xchg
mov
nop
jbe
outsb
in
fwait
decl
xchg
sti
jb
popa
adc
pusha
shrb
test
jae
inc
mov
add
hlt
std
pop
repnz
jb
mov
xlat
push
jno
push
pop
loopne
fsubrs
mov
rol
push
es
ljmp
mov
rolb
lret
lds
repnz
adcb
mov
mov
cmpsb
jmp
pop
test
call
outsb
xor
adc
adc
lahf
in
in
sub
or
scas
xor
je
xchg
gs
inc
imul
xor
aaa
pop
je
idivb
xor
pop
xchg
xchg
or
xlat
dec
or
pop
add
test
inc
ds
subb
jge
sti
lock
outsl
push
fwait
shll
jg
cmp
repz
roll
inc
fnsave
fcoml
arpl
in
xchg
dec
dec
andl
adc
pop
and
pop
pop
cmp
jl
mov
lods
push
sbb
or
mov
xchg
push
cmp
pop
sbb
ret
fsubs
cmpsl
repz
mov
int3
fcoms
add
adc
push
bnd
pop
pop
andb
and
xchg
mov
xorl
push
cld
or
stc
jns
lds
adc
cltd
dec
je
cmpsl
inc
inc
outsb
inc
inc
xchg
xchg
das
adc
js
rorl
cmp
sub
dec
jle
mov
push
xchg
sbb
push
lahf
inc
cmp
mov
mov
pop
aas
incl
out
jo
das
arpl
ret
sbb
ror
iret
cmpl
pop
sbb
pop
pop
xlat
cmp
pop
xlat
ds
or
jb
push
push
sub
dec
jo
add
bound
mov
sahf
test
lock
push
cmp
push
jo
cli
inc
movsb
das
repz
add
movsb
divb
xchg
int
mov
cmp
mov
inc
inc
cmp
jmp
xchg
leave
test
inc
inc
jno
pop
lea
movsl
clc
jl
aam
shrl
dec
add
popf
bound
push
xchg
push
mov
inc
scas
or
lret
sub
outsl
jnp
pop
ret
sub
pop
aas
fimuls
add
jno
mov
test
out
xchg
scas
push
in
xchg
gs
ljmp
adc
iret
fistps
push
xor
jno
add
jp
dec
mov
pop
dec
sub
inc
loope
push
push
aam
dec
lods
push
jmp
xchg
push
call
test
outsl
jno
mov
test
js
pusha
cltd
stos
mov
or
jne
sti
or
call
popf
dec
dec
fistpl
cmp
int
and
ja
jbe
rolb
jl
fiaddl
mov
call
xor
fbstp
test
mov
mov
pushf
cwtl
lret
popa
sbb
shll
fisttps
adc
int3
or
pop
enter
push
push
inc
out
add
fcmovbe
int
push
xor
cmpsb
sbb
and
mov
repz
std
mov
push
mov
in
pop
neg
dec
je
jb
push
lret
or
into
push
fidivl
test
pop
aad
sbb
jl
jl
rorl
ds
popl
mov
jp
movsl
mov
xchg
push
fstl
add
pop
das
fbld
leave
fildl
ret
sti
enter
notl
mov
lods
cmpsl
test
daa
lcall
xorl
mov
ss
adc
shl
add
lcall
insb
add
jae
aad
sub
imul
into
push
iret
jno
test
test
cmp
nop
fisubrs
mov
aam
pop
mov
aas
push
or
ds
adc
inc
push
push
test
cld
push
rolb
adcb
push
xor
adc
das
dec
in
jmp
jb
sbb
in
in
pop
cmp
lea
aad
dec
pushf
push
inc
mov
pop
xchg
adc
loope
adc
mov
jnp
scas
stos
scas
in
js
mov
arpl
dec
push
fstl
xor
lock
cmp
jmp
stos
jno
push
in
inc
xchg
mov
sub
out
test
pusha
push
ret
xchg
xchg
or
shrb
cmp
mov
adc
sub
inc
outsl
ret
js
test
sbb
or
lret
addr16
cmp
nop
loop
add
jo
movsl
xchg
xchg
outsb
cmc
sub
lcall
and
fildll
rclb
xchg
cltd
mov
dec
add
addb
mov
adc
repz
pop
inc
jg
lret
fcmovu
jns
pop
int3
and
imul
aaa
dec
out
cld
test
sahf
xor
test
mov
loope
push
cs
sub
arpl
dec
xor
frstor
leave
dec
mov
sub
outsb
arpl
imul
cmp
xchg
mov
orl
mov
loopne
push
or
cltd
pop
dec
mov
dec
test
insb
in
push
mov
sbb
fisubrl
iret
inc
cmpsb
push
adcb
xchg
sbb
insb
imul
mov
xorb
jl
out
js
outsb
fnsave
jmp
sub
add
mov
out
les
xor
jmp
xor
fidivrl
or
leave
les
push
pop
add
out
jb
xor
pop
ds
mov
out
adc
mov
mov
sub
dec
aad
dec
aas
dec
dec
add
jae
or
mov
lcall
lret
mov
out
xor
aad
xor
repnz
or
outsl
fucomp
jns
pop
int
sbb
adc
cs
mov
sub
loopne
dec
jmp
dec
and
cmpsl
inc
and
js
mov
xchg
fldl2e
add
ja
mov
and
subb
dec
imul
mov
pop
inc
mov
sub
das
mov
or
mov
aad
push
xchg
adc
pop
jae
std
adc
mov
mov
sbb
pop
out
dec
add
and
popa
mov
stos
in
adc
xchg
lcall
or
jo
xor
mov
fnstsw
jl
mov
nop
setb
fists
xor
or
mov
and
lea
mov
inc
daa
jmp
je
mov
push
out
push
stc
push
rorb
pop
test
and
dec
xor
shll
jbe
push
pop
mov
xlat
sub
xor
sahf
dec
xor
jns
and
in
push
je
cmp
aad
rcll
mov
dec
rclb
inc
out
adc
mov
rcrl
stos
popa
mov
add
dec
stc
scas
dec
xchg
xchg
cld
sbb
and
dec
push
push
inc
pop
pusha
stc
jns
dec
dec
xor
rcl
popa
sbb
inc
sub
ret
adc
add
adc
pop
jae
sbb
popa
or
sar
push
mov
in
xchg
xlat
pusha
fiaddl
jo
mov
dec
add
add
arpl
mov
xchg
pop
call
inc
int
dec
stos
jo
xchg
pusha
jae
or
aam
jle
enter
add
mov
push
test
repnz
pop
adc
push
sbb
into
cwtl
cmc
in
sub
imul
repnz
ds
xchg
ret
aam
in
repnz
out
shll
aad
enter
sbb
dec
inc
imul
xchg
mov
aas
shll
cmp
imul
mov
dec
mov
push
push
popa
inc
cld
repnz
push
ljmp
pusha
in
add
in
push
xchg
xchg
inc
push
inc
clc
call
xor
dec
mov
mov
mov
and
in
stos
or
cmpsb
mov
and
aam
aaa
sub
xor
das
add
mov
inc
test
in
test
insl
les
lret
cmc
mov
push
cmp
test
and
sbb
mov
shlb
or
push
pop
lret
shll
pop
add
lahf
pop
stos
fs
sbb
fmuls
xchg
pop
jb
lret
mov
leave
cmp
mov
xor
andl
inc
xor
jg
mov
mov
push
out
xorb
jl
dec
or
xchg
dec
aad
int
pop
fdivl
sub
mov
mov
jge
xchg
pop
mov
rcrl
push
inc
mov
sbb
dec
fsubrs
push
mov
insl
mov
pop
mov
pop
addr16
bound
cwtl
dec
lock
loopne
jne
push
sub
mov
out
sbb
pop
nop
pop
pop
jne
fcmovbe
data16
scas
int3
mov
fs
ja
fcomps
xor
fdiv
cld
dec
arpl
push
dec
popa
sahf
insb
jns
iret
and
xchg
mov
jnp
ret
mov
mov
mov
pop
or
movsb
lcall
int
dec
nop
test
sbb
ja
rclb
jg
pop
rorl
push
mov
outsb
lock
dec
push
cli
outsl
or
push
test
add
inc
add
test
das
xchg
and
xsaves
roll
daa
je
xchg
lcall
sahf
les
xlat
push
loopne
cmc
lods
stos
add
mov
ficoml
cwtl
outsb
rcrl
fs
or
sarl
dec
icebp
repnz
idivb
outsl
aaa
in
insb
pop
ja
lods
add
xor
jg
pop
mov
shlb
xchg
loopne
push
bnd
push
repz
std
xor
push
sbb
push
push
sbb
mov
jno
insb
in
roll
xsave
mov
cmp
cltd
pop
xchg
loop
lea
sub
repnz
and
push
add
push
push
pop
cmpsb
xchg
sbb
and
sbb
test
ljmp
shl
xchg
mov
cmp
xchg
pop
test
pop
jo
mov
fs
aad
ljmp
push
sub
stc
mov
test
ret
cmpsb
repz
xchg
and
sbb
insl
out
loop
pushf
mov
unpcklps
sub
inc
jp
cmp
shr
cld
pop
ret
mov
cmp
inc
cmc
pop
cltd
adc
rclb
sahf
add
adc
xchg
jne
in
jp
lcall
ss
les
and
mov
push
ja
mov
cmp
inc
push
je
insl
pop
sbb
sub
das
lret
sub
pop
jecxz
sahf
push
fnstenv
fisttps
push
mov
stos
arpl
adc
shll
fisubrl
subb
enter
aaa
mov
push
inc
xchg
testl
ds
xchg
jl
jnp
shlb
mov
inc
xchg
and
dec
lahf
scas
in
int
and
adc
jg
xor
mov
sbb
sbb
mov
mov
std
or
arpl
das
dec
xor
scas
sbb
fsubl
xchg
out
xor
jnp
loop
test
sub
jmp
jnp
scas
fsubl
js
pushf
fstl
pop
mov
outsb
cmp
add
aad
daa
pusha
daa
aad
lcall
and
fs
pop
test
pop
mov
sbb
ror
pop
pop
and
dec
push
dec
in
hlt
dec
sbb
push
loopne
stc
pop
leave
leave
adc
pop
lcall
cmp
stc
add
xor
add
lods
and
mov
daa
dec
pop
mov
bound
andl
ret
sbb
push
aad
out
stos
cmp
lahf
mov
jp
jge
lea
dec
push
testb
pusha
scas
addl
or
push
in
inc
xchg
jp
roll
mov
mov
das
adc
add
cmp
mov
inc
or
in
add
sahf
mov
mov
and
mov
mov
sbb
add
subl
push
inc
fdivrs
or
cmpsb
jno
pop
jl
scas
in
pushl
insb
push
cld
das
cmp
dec
ret
repnz
fwait
adc
lahf
jp
jo
pop
aaa
add
adcl
push
jo
mov
sti
mov
and
ret
jbe
push
lods
pop
insb
dec
mov
sar
popa
fsubp
xor
decb
in
daa
cmovo
mov
push
sub
leave
xlat
jge
std
not
iret
or
jb
cs
jecxz
sub
stc
or
rclb
sbb
xor
pop
fldenv
adc
lds
out
je
inc
addl
fs
sub
adc
hlt
sbb
je
xchg
pop
cmp
std
cmpsl
daa
pusha
enter
xchg
loopne
and
aas
dec
jno
xbegin
inc
inc
sbb
rol
fcomps
dec
lods
xor
sub
push
xor
mov
inc
pop
and
sbb
mov
push
mov
test
cmp
adc
or
repz
add
enter
leave
push
mov
ss
lret
jb
std
dec
push
nop
test
aam
cs
sub
mov
ficoml
ljmp
cs
mov
mov
dec
pop
ret
dec
mov
insb
into
cmpsl
push
mov
cmp
cmp
aad
mov
pop
loope
xchg
jne
lods
sbb
pop
inc
fisubs
sbb
mov
divb
sub
fwait
popf
mov
and
cmp
fldt
pop
in
adc
out
xor
jno
jmp
add
xchg
push
cld
pop
inc
or
inc
lea
xor
mov
daa
cmpsl
cltd
xchg
add
jle
inc
gs
push
int3
jmp
push
inc
mov
out
jb
fcmovne
stos
pop
lret
dec
lods
insb
xchg
or
inc
lahf
mov
push
cmp
out
pop
adc
outsl
and
repz
stos
and
nop
or
xchg
aam
and
in
test
arpl
jg
testb
sbb
or
mov
mov
adc
lds
int
pop
inc
bound
call
insb
inc
inc
fwait
dec
testb
test
icebp
inc
mov
in
scas
mov
je
mov
xlat
aas
clc
pop
mov
clc
adcb
mov
pop
lcall
insl
and
into
mov
enter
push
sti
mov
push
mov
sbb
inc
fdivrl
stc
push
fsubrl
cmp
push
sti
loop
les
add
push
ficoml
or
sub
jbe
add
das
xor
add
movsb
lcall
incb
cli
aas
jbe
repz
push
cmp
movsl
rcrb
enter
data16
fwait
dec
test
pop
mov
sahf
out
cmp
push
xor
inc
mov
stos
sbb
repz
mov
sti
jle
sahf
push
inc
adcb
hlt
andb
sbb
jmp
mov
insb
lahf
cmp
add
and
mov
notb
in
outsl
inc
dec
ret
jle
pop
dec
mov
mov
int3
hlt
mov
iret
fdivr
das
nop
inc
out
jmp
jle
push
ret
ds
cmp
dec
cmpsl
daa
idivl
out
jle
and
lret
and
dec
cmp
push
stc
pop
pop
popa
jmp
enter
in
test
xchg
je
add
fbld
add
fdivl
in
inc
and
not
fbld
jb
jne
dec
mov
subl
or
add
cwtl
pop
in
add
scas
xor
repz
add
lock
sub
xchg
cmovb
push
sbb
cltd
jb
mov
std
jge
imul
cmp
fistl
adcl
shlb
jp
and
and
ret
mov
nop
or
pop
addr16
jbe
test
movsl
jae
loopne
add
sarl
xor
mov
pop
pop
call
pop
xor
mov
hlt
pop
or
xchg
int
or
pop
pop
addr16
push
out
or
mov
inc
adc
xchg
push
mov
inc
pop
call
test
mov
repnz
push
mov
push
ror
and
jae
mov
imul
fnstenv
filds
mov
js
or
test
bnd
jbe
jg
jl
mov
cmc
pop
xchg
sub
push
in
adc
jo
jp
movsl
jmp
mov
sbb
insb
pop
jae
pushf
dec
str
cmp
into
sbb
and
roll
clc
sbb
pop
mov
adc
mov
mov
xchg
aas
sahf
out
or
push
and
dec
scas
repnz
cwtl
scas
mov
adc
int
cmp
push
xchg
push
add
pop
stos
in
orl
cmp
xchg
call
popf
int3
xchg
xchg
lcall
xchg
rclb
in
cmpb
mov
add
cmpb
xchg
dec
mov
cmpsb
outsl
lea
sub
sahf
aaa
dec
mov
aas
scas
aad
cmp
ss
in
add
adc
adc
jb
pop
and
lcall
dec
dec
mov
pop
push
rcll
pop
and
pop
les
rcrb
fdivl
hlt
andl
ret
shl
cmp
pop
clc
daa
std
out
add
mov
mov
out
repnz
mov
mov
jb
jno
addb
fidivl
sub
notb
inc
sahf
gs
rcrb
jno
pop
jne
testb
sub
and
ret
sub
daa
inc
xchg
punpckhbw
inc
xor
xchg
mulb
shl
pmullw
cmpsb
mov
stos
xchg
fwait
enter
scas
inc
mov
pop
std
testl
fwait
fwait
pop
mov
stos
xchg
cmpsb
je
call
cmpsl
push
mov
daa
xchg
cli
push
add
test
xchg
jge
hlt
push
cmp
lock
aaa
mov
jg
mov
jnp
adc
repz
and
mov
jae
xchg
aas
gs
or
push
push
add
inc
and
add
pushf
hlt
push
sti
fdivs
pop
xlat
in
dec
test
or
or
fidivl
sub
lret
outsb
mov
sub
cmc
sbb
frstor
pop
rcl
stos
fs
xchg
mov
rcrb
iret
mov
xor
adc
rolb
mov
jne
adc
dec
push
mov
adc
mov
das
insl
std
lahf
xor
test
rorl
fsubrs
xor
call
aaa
aaa
movsb
addr16
mov
pop
clc
xor
div
and
and
stc
ljmp
iret
jbe
inc
mov
xor
push
jo
add
test
je
sub
int3
push
mov
mov
outsb
cmp
lock
nop
fstpt
in
mov
xchg
dec
adc
bound
outsb
xchg
std
adc
orb
das
das
or
fadds
dec
xor
cmpsl
mov
es
js
js
pushf
jno
push
dec
call
lock
sub
mov
mov
into
fwait
clc
loopne
icebp
inc
mov
in
adc
xor
lods
fidivrl
call
and
pop
push
fdivs
mov
push
out
push
jl
and
cmp
push
fcomi
mov
mov
cmp
es
in
sarl
stos
mov
xchg
loopne
add
jge
xchg
mov
pop
test
push
push
cmpsl
dec
xchg
ja
shlb
out
roll
push
inc
sbb
lods
and
jmp
inc
xchg
pop
insl
mov
into
orb
test
cmp
mov
rcrb
fmull
xor
sbb
inc
cmp
dec
aaa
ljmp
loope
push
xor
scas
push
xchg
pop
mov
mov
add
lret
mov
cltd
jb
dec
rep
mov
stos
ja
jg
and
shrb
add
lcall
in
loop
rorl
mov
pop
mov
and
jmp
insl
adcb
xlat
adc
sub
incb
pusha
push
clc
cmp
and
adc
imul
aaa
and
mov
ljmp
fsubrp
mov
sub
mov
lea
inc
sub
sbb
int3
test
sub
cltd
adc
lret
adc
xchg
xchg
inc
xchg
sarl
shrb
stos
jl
dec
call
push
lea
out
dec
add
mov
push
push
push
and
mov
lret
mov
add
xor
lcall
xor
lds
scas
test
pop
sub
mov
decl
inc
leave
fmulp
data16
lods
mov
sub
xor
push
or
dec
cmp
push
xchg
test
daa
or
popa
adc
inc
cmc
insb
or
mov
in
pop
or
push
and
adc
mov
xchg
cmp
adc
pusha
lock
inc
pop
jo
push
inc
es
sti
xchg
mov
jns
pop
test
xchg
pusha
sbb
cli
jl
aaa
mov
lcall
test
outsl
xchg
test
cmp
loopne
lret
push
je
ss
xlat
ljmp
mov
dec
xor
jmp
out
mov
and
repnz
rcrl
incb
ds
jb
rorb
mov
scas
popa
mov
lcall
xor
lcall
mov
nop
mov
jae
ret
fisttps
cmp
mul
xchg
repz
jmp
dec
lret
sahf
inc
xchg
out
sbb
ficompl
lret
mov
sbb
out
cwtl
add
fisubs
mov
stos
xchg
adc
ss
shlb
jl
insb
and
sub
push
pop
lods
inc
jbe
sahf
mov
sbb
mov
xor
pop
xchg
adc
pusha
xchg
pop
stos
adc
mov
mov
mov
pusha
sahf
fadds
mov
push
xchg
popf
add
mov
aam
or
lret
and
sar
cmp
aam
jl
push
sbb
add
jnp
insl
rcrl
mov
cmp
jns
lods
mov
mov
cmp
lcall
mov
inc
loop
outsl
enter
pushf
loope
testl
lcall
fbld
bound
jp
aas
aad
and
nop
pusha
shr
lcall
adc
xchg
xchg
ja
std
cld
add
sar
jp
out
xor
shl
adc
cmpsl
sbb
jbe
mov
mov
js
cmp
dec
popf
inc
push
test
xor
fs
ss
dec
popf
lret
add
cmp
mov
lahf
sub
push
mov
das
inc
lock
jb,pt
and
cs
add
and
call
shrl
cmpsl
push
in
adc
mov
pop
inc
push
cmpsl
stos
pop
add
or
lods
fcompl
repz
jb
inc
push
repz
out
lods
lock
das
jle
pop
lret
jge
pushf
xor
mov
xor
jmp
add
test
adc
or
sbb
loope
stos
movsl
add
push
push
jbe
pop
std
arpl
aaa
sbb
repnz
and
lock
imul
push
or
and
leave
sbb
xchg
mov
fildll
jg
xor
bound
mov
aad
clc
fdivs
outsb
call
or
nop
fisubrs
push
mov
jo
jg
mov
addl
lods
test
dec
cltd
xchg
xchg
cwtl
imul
push
sub
and
arpl
enter
outsb
pop
xchg
mov
ss
and
into
inc
or
mov
scas
test
jbe
test
or
cltd
and
mov
negl
dec
and
xchg
aaa
cmp
xor
std
lock
add
repnz
jb
add
add
ret
pop
cmc
inc
cmc
push
and
lds
es
repz
movsb
dec
das
icebp
mov
lahf
fidivrl
js
fucom
popa
hlt
mov
pop
cmpsb
adc
inc
inc
mov
out
mov
imul
sub
push
mov
jl
mov
dec
popa
out
jmp
sar
push
sbb
sub
mov
xchg
push
xor
jne
mov
adc
stos
mov
and
hlt
push
jnp
dec
push
notb
gs
push
sbb
adc
dec
or
scas
cmp
orl
sbb
xchg
xlat
cmp
jae
jmp
ja
clc
cmp
push
mov
mov
iret
ret
inc
push
sbb
mov
push
jns
cmpsl
jecxz
adc
out
repz
mov
jae
mov
pop
cmp
cmp
mov
jge
push
fs
adc
xor
inc
aam
imul
jbe
mov
aam
push
cwtl
xchg
shl
mov
sub
lods
jg
fsubs
test
dec
jp
icebp
fsubrl
mov
pop
add
int
jne
sub
mov
ja
mov
lcall
inc
addb
int3
cmp
mov
lcall
inc
push
mov
jne
cmpsl
jmp
inc
pop
cltd
pusha
mov
fimuls
fldcw
lods
js
pop
out
les
shll
sbb
scas
iret
adc
jne
lds
pop
stos
jle
popa
fs
xor
cmp
and
pop
xchg
ret
sbb
lahf
adc
inc
insl
push
imul
orb
sbb
sub
mov
sub
mov
pop
push
mov
push
sub
mov
and
out
xchg
cmp
adc
jo
cltd
shll
push
das
fisubs
out
xchg
adc
pop
xor
lods
loopne
add
mov
into
push
mov
inc
mov
mov
jp
mov
pop
xor
hlt
es
and
or
jmp
push
jbe
int
out
enter
jmp
ret
mov
xchg
ror
notl
insb
jnp
das
test
outsl
or
fisubrs
lret
cmpsb
testl
dec
int3
out
gs
call
xor
std
js
jp
sar
sbb
dec
jnp
das
mov
mov
fs
mov
cs
pop
clc
jb
pop
add
jge
mov
iret
cmp
sub
fstpl
mov
push
fstl
inc
mov
lahf
dec
lahf
fwait
sbb
push
pop
jbe
jl
jb
xchg
push
jmp
je
iret
mov
mov
mov
jo
mov
adc
adc
es
cmp
xchg
rcll
shll
mov
ss
dec
ja
pop
hlt
add
pop
aaa
jp
inc
testb
push
mov
mov
xchg
and
xchg
ret
and
cmp
jge,pn
ds
in
mov
test
test
xor
pop
jo
add
arpl
adc
ja
loopne
sub
stc
jmp
ret
fnsave
dec
test
pusha
test
int3
out
push
dec
out
bound
negl
fstpl
mov
push
push
mov
jecxz
mov
imul
aas
int3
push
out
mov
sub
loop
add
jbe
divb
jae
add
jbe
call
pushf
ds
stos
lds
in
mul
push
int
gs
xor
mov
shl
and
adc
into
bound
mov
push
bound
cltd
fucom
and
pop
push
mov
inc
stos
sub
popa
scas
nop
lea
mov
xor
add
sub
gs
xchg
and
xchg
sbb
leave
sarl
mov
imul
jne
or
sub
stc
mov
call
push
in
test
call
mov
add
aas
adc
add
cwtl
push
add
push
push
add
sbb
mov
xchg
insb
xor
sahf
arpl
adc
loopne
mov
jmp
xor
aad
dec
sbb
lahf
fs
mov
xlat
cltd
data16
test
xchg
mov
inc
adc
sub
jecxz
fcmovne
call
lret
jle
cmp
mov
cmp
push
into
fxch
mov
xor
jo
ss
ret
loope
mov
lret
js
aas
jp
jp
ss
push
pop
jb
fstpl
stc
lock
adcl
addl
mov
mov
lret
cmc
mov
sbb
insb
cmc
inc
loopne
cmp
fstps
jae
dec
add
loopne
jb
push
int3
xchg
pop
dec
shrl
or
sahf
out
out
fiaddl
add
jno
lret
insb
jg
in
xchg
adc
jo
xchg
adc
jmp
push
jl
pusha
in
pop
add
fiaddl
jmp
ss
rep
fistl
add
popf
xor
cs
jo
push
jae
sahf
jge
mov
outsl
mov
mov
je
rcll
adcl
push
push
mov
div
push
xor
fwait
lods
repnz
sub
addr16
fs
aam
mov
mov
insb
dec
addb
pop
data16
neg
sub
jb
cmc
or
nop
enter
aas
out
cmp
xchg
outsb
xchg
sub
ss
mov
movsl
mov
lea
xchg
jae
repnz
stos
mov
dec
xor
xor
mov
mov
push
leave
inc
test
ret
adc
mov
pop
pop
int
lock
cmp
repz
loopne
in
jmp
icebp
jecxz
in
sub
addl
repz
xor
dec
jnp
aaa
mov
push
arpl
xchg
popl
or
arpl
add
sub
je
ss
cmp
je
add
ljmp
aad
sbb
jge
mov
cltd
ret
notb
adcb
add
jb
push
xchg
dec
test
pop
or
push
sbb
jp
or
and
jp
das
icebp
push
shrb
fwait
xchg
scas
jnp
movsb
fisttpl
divb
shll
mov
cmp
add
cld
adc
incl
gs
stc
rcll
dec
cmp
icebp
sbb
xor
int3
ffreep
pop
ds
hlt
dec
dec
mov
outsl
mov
scas
popa
shll
shrl
sub
pop
push
mov
adc
pop
fisttps
repz
pop
inc
outsl
outsb
xchg
pop
dec
inc
pusha
mov
dec
and
add
loop
jp
loope
fnstenv
adc
cmpb
clc
imul
in
dec
inc
imul
fstpt
mov
stc
xor
dec
mov
in
xchg
jmp
es
ror
and
sub
mov
jmp
fdivp
jns
sub
js
rorl
rcll
and
jns
cmp
jne
imulb
fstpt
inc
sbb
push
mov
mov
iret
dec
in
dec
jp
mov
cli
addr16
jae
popf
ljmp
mov
mov
sub
in
dec
fsqrt
jae,pn
sub
mov
mov
popf
loopne
addb
sub
enter
push
aam
pop
sbb
into
push
addr16
xchg
add
dec
andb
mov
icebp
notb
add
mov
icebp
and
test
fsubr
out
jo
scas
jle
cmpsb
pop
mov
lret
and
dec
xchg
shll
shl
lret
in
test
sbb
xchg
sbb
popf
mov
or
add
fcompl
sbb
scas
sbb
into
xor
inc
jmp
enter
cltd
sub
in
adc
xor
pusha
or
mov
or
inc
mov
jne
dec
xor
xor
jbe
jb
addr16
dec
push
jge
ret
int
adc
sahf
mov
clc
neg
lods
loope
inc
in
mov
jge
repz
sub
lods
push
dec
cmp
inc
scas
mov
cltd
mov
and
mov
insb
out
push
mov
dec
rolb
mov
cmp
mov
andb
jne
dec
lods
in
and
pop
bound
xchg
out
mulb
aaa
xor
loop
dec
jbe
popa
push
dec
push
out
sbbb
sbb
lods
icebp
mov
mov
lret
xor
push
pop
and
fwait
dec
push
cmc
shlb
mov
push
pop
cs
or
test
cmp
lahf
fbld
divb
mov
inc
fcmovbe
in
pusha
insl
das
xor
lret
push
repnz
roll
sub
out
cmp
out
inc
ret
test
repz
gs
pusha
je
jo
add
ljmp
into
ja
push
push
mov
or
lods
enter
and
pop
adc
jp
and
idiv
andl
daa
pop
fldenv
mov
call
jle
push
ljmp
sub
pop
pop
mov
aas
sbb
lods
rolb
fmuls
mov
daa
inc
imul
push
lock
lret
loopne
mov
sub
add
xchg
lret
gs
dec
sub
and
rcrb
repz
sub
pop
inc
ret
fwait
data16
popa
xor
fwait
jnp
subl
fwait
popa
push
jp
dec
push
inc
pop
pop
push
lea
in
adc
out
bound
out
jns
pushf
imull
pusha
dec
xchg
push
mov
imul
outsb
in
movsb
jle
shlb
addr16
cmpsl
cmp
int3
test
cmpsb
cmpsb
call
mov
lret
add
push
out
je
cmp
push
push
pop
inc
sti
fstl
xor
dec
xchg
das
call
mov
adc
mov
xchg
inc
aas
adc
bound
ficompl
pop
add
add
ret
fiadds
shrl
adc
lds
in
sahf
jnp
std
inc
mov
cmp
push
pop
pop
data16
and
stos
test
dec
push
mov
loop
ret
mov
out
and
in
and
cmp
adc
shll
cs
mov
enter
jno
pushf
imul
mov
inc
sti
fwait
or
jle
cmp
mov
xlat
adc
cli
fnsave
jp
jne
int
xor
cmp
jne
cmp
pusha
jbe
or
add
mov
cmp
test
lcall
xchg
sahf
fistl
mov
shlb
adc
adc
xchg
inc
pop
inc
cmp
fbstp
mov
push
cmp
scas
inc
insl
push
xchg
and
in
jne
xor
pop
cmp
std
sbb
sbb
mov
dec
stos
ja
ja
daa
imulb
adc
sub
push
int
mov
test
xchg
mov
xchg
pop
push
inc
mov
jno
insb
out
dec
mov
scas
cwtl
sbb
js
cmp
fcoml
mov
cltd
sub
inc
out
push
vcvttps2dq
sbb
add
sub
mov
jnp
imul
and
sub
repnz
fisubrl
lret
mov
cmp
jecxz
clc
mov
out
mov
pop
sbb
push
xchg
cmp
cmp
scas
and
dec
pop
push
in
inc
int
repz
or
sub
ret
push
jecxz
mov
pop
xchg
insl
sti
mov
mov
cmp
xor
xor
lret
mov
int
je
pop
cmp
outsb
push
test
repz
mov
add
xlat
dec
sbb
imul
or
cwtl
aaa
jo,pt
sbb
rcr
pusha
fwait
mov
js
add
inc
pushl
xchg
cli
add
jp
ss
xchg
cmpb
cmp
test
clc
mov
mov
in
ffree
cmp
test
fwait
xchg
adc
outsl
mov
or
ljmp
add
xbegin
insl
push
mov
jb
push
pop
pop
lea
arpl
lock
rcrl
xchg
imul
popf
mov
xchg
sbb
push
pop
insb
rolb
sti
sarb
adc
sarb
cmpsl
lea
push
xchg
mov
jmp
dec
mov
mov
ret
sbb
mov
mov
mov
add
push
pusha
pop
jl
jge
push
mov
inc
pop
in
mov
dec
in
inc
call
sub
stos
jno
fcmove
call
push
push
int3
mov
aad
roll
jmp
iret
inc
xlat
popa
inc
mov
mov
imul
loope
xchg
cmp
cli
cwtl
in
pop
cld
fstpt
paddusb
lret
dec
sahf
xchg
inc
int
sar
dec
mov
mov
cmpsl
xchg
les
out
pop
adc
inc
in
cltd
leave
sbb
adc
test
test
or
and
shlb
shrl
xlat
outsb
mov
pop
add
mov
in
stc
insb
add
xchg
mov
push
scas
mov
lds
xchg
stos
xchg
push
cltd
mov
xor
adc
repz
inc
mov
jbe
and
add
loopne
jecxz
int3
test
add
fisubs
mov
xor
adc
jae
dec
add
in
in
add
inc
jo
xchg
adc
push
das
lds
sarb
into
insl
pop
push
xchg
xchg
add
loopne
pop
fidivs
divl
les
pop
adc
xchg
xchg
mov
mov
flds
data16
in
aas
jbe
and
add
lds
xor
inc
aam
mov
adc
dec
test
or
test
jae
ret
inc
push
mov
fsub
ret
cmp
dec
call
incb
jmp
mov
cmpsl
inc
xor
fbld
or
sub
mov
xchg
js
or
xor
adc
imul
cltd
pop
call
add
addr16
movsb
je
pop
push
push
test
fistl
mov
pop
lods
mov
aad
xor
inc
and
add
hlt
sub
push
add
fmull
dec
insl
adc
jno
sahf
aam
adc
pop
or
jb
adc
ljmp
add
jmp
sub
cmp
add
push
andb
push
pop
icebp
nop
cmp
add
push
rolb
fnstenv
cs
cmp
mov
jecxz
dec
adc
aam
pop
nop
cmp
ja
sahf
xchg
int
inc
hlt
js
pop
in
and
clc
loope
ss
sbb
pop
data16
outsb
dec
stos
shl
rcrl
sub
mov
repnz
cmp
pop
imul
sub
mov
lret
mov
add
clc
movsb
pop
imul
or
std
mov
mov
adc
in
sbbb
cmc
jle
arpl
add
sbbl
inc
rorb
cli
jecxz
push
cmp
jae
inc
lret
cmpsb
and
negl
cs
lcall
push
loope
mov
push
js
icebp
jae
fstps
ja
sub
inc
dec
mov
fiaddl
or
mov
sub
stos
jae
or
fnsave
sbb
mov
mov
push
pop
lds
ja
add
fidivl
and
fisubrl
cli
pop
js
dec
cmpsb
sbb
pushf
mov
fdivrs
outsb
xor
sub
imul
dec
push
sbb
pop
mov
pop
mov
mov
popa
and
add
jg
les
push
xchg
mov
sub
ljmp
mov
imul
idivb
stc
push
and
jmp
pop
cmpsb
call
popa
push
dec
pop
in
or
push
bound
repz
mov
dec
xchg
push
out
mov
add
push
lret
mov
push
and
xor
inc
inc
jbe
cmpsb
cmc
fmul
mov
shrb
cld
sub
pop
je
pop
pop
add
mov
jnp
ljmp
mov
xchg
push
ret
outsl
cmpsb
test
pop
icebp
outsb
pushf
inc
jmp
jecxz
enter
in
cmp
jne
jno
in
cli
jle
sub
decb
mov
mov
or
xlat
mov
push
lahf
xchg
lock
pushf
mov
pop
out
pushf
jns
fbld
inc
push
or
imul
or
aam
out
popa
test
cmp
lcall
xor
inc
in
pusha
xor
jle
jmp
jnp
cli
rcrb
movsb
and
inc
mov
and
jl
popf
in
sub
pushf
sahf
jle
pop
sar
in
popl
movsb
cmp
cmp
fisubrl
lea
push
inc
movsl
or
sti
pop
repnz
cmpsb
iret
push
cmp
inc
cmpsl
sub
xor
pop
lods
xchg
pop
imul
jno
mov
insl
mov
mov
outsl
add
cwtl
pop
sub
or
repz
repz
out
stc
call
mov
push
xchg
sbb
pushf
mov
lret
or
incl
pop
dec
rolb
das
sbbb
cli
shll
lods
push
aam
sbb
out
inc
aam
sub
mov
pushf
xor
push
mov
adc
daa
add
lods
xor
data16
jbe
dec
push
inc
test
pop
or
push
mov
cltd
rorl
in
fisttpl
dec
adc
inc
push
xor
inc
sbb
ret
or
aaa
mov
sub
pop
outsb
or
out
andl
pop
test
dec
loop
fucom
cltd
xor
out
xor
lcall
ss
rcrb
stos
ret
inc
dec
add
shr
and
fsubrs
adc
test
sub
mov
push
mov
mov
arpl
or
cs
out
dec
pop
jns
roll
stc
sub
adc
cs
xchg
add
and
insl
in
push
xchg
arpl
fdivrl
lds
add
fwait
push
ficoml
ss
xor
cmp
lds
xchg
mov
mov
push
mov
mov
scas
mov
es
xchg
mov
frstor
mov
rcll
mov
jnp
dec
inc
add
sbbb
pop
xor
lcall
mov
jbe
push
out
pop
and
adc
cmp
mov
pop
mov
mov
add
sbb
xchg
loop
leave
and
ljmp
aam
sub
or
and
xchg
or
outsl
ja
popf
push
pop
push
cmp
lcall
adc
in
sub
inc
scas
mov
fiadds
out
jecxz
jmp
cwtl
movsb
xchg
jecxz
unpckhps
mov
fsts
call
adc
sbb
dec
scas
pop
or
aas
scas
test
les
ja
inc
aas
lcall
bound
mov
push
lock
das
aad
movsb
xchg
and
pop
enter
cmp
aad
enter
push
cmpsl
jnp
lods
inc
icebp
cmp
je
push
pop
lcall
std
pop
int3
fwait
mov
jno
cmc
test
movsb
int3
pop
repz
out
jmp
dec
ss
test
sub
add
lea
sbb
add
mov
and
adc
jp
call
mov
sub
cltd
ds
mov
pop
cmp
pop
ss
stos
jbe
adc
or
das
pop
fdiv
imul
xor
adc
sbb
je
sbb
push
ds
cmpsb
movsl
xor
std
int3
mov
std
inc
loope
add
jg
sahf
mov
in
daa
sbb
shlb
lock
add
or
mov
xchg
ljmp
in
mov
imul
cmpsl
negl
stc
jb
sbb
cmp
or
add
adcl
cmp
loopne
dec
dec
push
pusha
mov
leave
cmp
pop
push
mov
mov
sub
clc
fsubs
lds
loope
popl
sti
add
aad
and
mov
dec
int
cmp
test
int
int
cs
xchg
std
jecxz
out
inc
out
gs
mov
sahf
ret
or
pop
jp
hlt
imul
rcll
xchg
or
jo
push
pop
mov
sbb
cmp
je
jg
rorl
repz
mov
adc
lret
out
cltd
pop
add
inc
push
iret
pop
or
aam
mov
lahf
adc
mov
enter
sbb
or
mov
iret
call
dec
lods
loope
sarl
mov
jo
or
fisubrs
addl
in
test
daa
nop
mov
movsb
mov
push
fcmovnbe
imul
mov
fcoms
sahf
xchg
cld
mov
test
mov
sub
and
decb
mov
mov
push
xor
out
repz
sbb
xor
gs
mov
sub
jp
mov
test
movsl
mov
out
insb
xor
pop
push
ss
pop
cmp
clc
aas
adc
push
or
push
mov
pop
sub
adc
lcall
js
inc
lret
shr
enter
pushf
outsb
xor
xor
inc
addb
fdivr
lock
outsb
scas
mov
jbe
cmpsl
xchg
stc
inc
stos
icebp
fiadds
mov
jne
push
add
ja
push
mov
popf
stos
dec
popa
cmp
push
dec
push
outsl
jb
add
cmpsl
and
cltd
adc
stos
aaa
adc
add
cmp
loop
and
dec
jns
repz
jnp
mov
mov
mov
leave
shll
test
ljmp
xorb
xchg
pusha
popf
out
pop
push
loopne
cmp
popf
dec
and
sub
mov
push
sub
fisubs
jle
std
sbb
xchg
clc
ljmp
test
pushf
aas
mov
push
push
sub
mov
int3
aaa
sbb
mov
mov
or
mov
popf
pop
xor
and
ja
sbb
arpl
std
pop
aaa
add
std
arpl
icebp
insb
mov
jne
dec
je
in
add
adc
orb
dec
sbb
jne
adc
in
adc
incl
push
pop
push
mov
imul
xor
or
cmp
xchg
shlb
and
idivb
lcall
sbb
jmp
loopne
cmpb
pop
xorl
mov
xchg
and
ljmp
pusha
rolb
push
cmp
out
mov
xchg
sub
dec
jns
mov
sbb
decl
sbb
jne
popf
mov
push
inc
fnstcw
inc
ret
mov
cmp
xchg
jae
xor
or
mov
inc
fsqrt
dec
mov
lds
lock
add
xchg
stos
inc
and
push
ds
imul
movsl
test
or
fs
lods
and
mov
xorb
push
stos
dec
mov
fnstcw
mov
dec
jne
mov
add
and
call
aaa
mov
mov
jae
adc
out
in
mov
pop
xchg
lods
sub
jecxz
and
loopne
xlat
jg
test
sbb
lds
jmp
cmove
dec
xchg
dec
push
out
cli
cmp
movsb
cli
pop
arpl
mov
sti
mov
push
rclb
mov
andl
das
sbbw
lret
out
call
push
or
into
out
push
mov
pop
cmovp
int3
scas
cli
rclb
imul
adc
sbb
jnp
fcomip
push
sub
mov
in
jle
pop
std
sahf
test
test
dec
jae
out
in
mov
daa
xchg
pop
mov
mov
rolb
in
xor
mov
iret
add
sbb
add
repnz
pop
cli
in
dec
push
dec
and
dec
jg
inc
insl
lahf
jne
push
adc
or
insb
orl
movsl
lods
xor
inc
adc
scas
mov
cli
in
pop
push
dec
pop
adc
orl
stos
push
or
push
dec
xorb
cmp
shlb
mov
int3
js
pop
nop
lock
fcoms
cwtl
inc
mov
inc
cmc
shll
and
insl
mov
mov
shrb
push
cli
loope
jno
orl
adc
mov
jmp
or
pusha
jl
in
subb
test
pop
jge
jg
sub
pop
arpl
jg
push
adcl
shll
xchg
jg
push
movsl
xor
mov
push
sti
jle
mov
sub
out
shlb
and
jnp
pop
decb
ret
pop
cmpsb
pusha
in
jmp
rcrb
adcl
aas
les
fisttps
imul
std
lret
xchg
push
push
dec
cmp
jl
mov
or
add
leave
adc
aaa
into
xchg
out
shlb
push
add
xchg
mov
push
sub
in
arpl
add
sub
or
mov
test
inc
jle
bound
jge
add
mov
clc
ret
jmp
sbb
sub
jecxz
mov
sahf
mov
push
pop
lea
sbb
add
jo
mov
inc
inc
test
roll
jbe
inc
ja
push
jle
adc
adc
in
lea
orb
jmp
jno
ret
repz
or
into
cmp
inc
mov
add
aad
ret
and
sti
lea
test
push
imul
test
mov
iret
sbb
and
mov
call
mov
jg
mov
popf
leave
mov
int3
mov
xchg
sbb
mov
shl
leave
jle
fsubrp
xchg
inc
add
xor
ljmp
loope
mov
imul
mov
inc
insb
or
movsb
lret
xor
pop
jg
lcall
bound
shr
sub
aaa
js
aas
add
fcmovnb
dec
sti
jno
subb
mov
ret
add
lcall
cmp
mov
mov
lahf
xlat
pop
dec
jmp
fmuls
ja
jno
push
jle
jnp
mov
das
add
ja
push
sbb
faddl
data16
mov
jo
lods
test
sti
and
xor
loopne
pop
aam
lahf
pusha
fucomp
mov
std
add
in
dec
mov
add
movsb
sub
gs
shr
clc
inc
sbb
aad
fmul
test
in
call
sub
lods
and
fsub
fisubl
jg
into
loop
lods
fstpl
pop
mov
arpl
adc
imul
inc
or
icebp
out
or
ljmp
insb
jge
or
cld
cmpsl
xor
jle
sahf
jge
dec
dec
push
outsb
pusha
out
dec
jmp
mov
stos
mov
es
add
clc
fsubr
movsl
pusha
inc
popf
scas
and
jne
insl
cwtl
xchg
push
out
sbb
pop
in
push
sub
mov
mov
push
int
jp
push
dec
scas
xor
lds
mov
in
xlat
inc
fisubrl
push
pop
mov
or
clc
loope
test
insb
rorb
pop
jno
lcall
xchg
or
dec
mov
call
das
add
push
xchg
sub
lret
les
dec
and
stos
cmp
pop
xor
mov
adc
insl
sub
add
outsl
xchg
sbb
add
ret
jge
fiadds
cmp
orl
mov
add
out
xor
mov
fdivp
adc
cs
es
sbbl
pop
ljmp
mov
out
in
pop
bound
mov
subb
test
push
incb
jg
scas
adc
mov
jae
mov
cmp
dec
pop
rolb
nop
arpl
jmp
sub
jns
jp
es
xchg
inc
movsl
jo
bound
inc
mov
loope
adc
xor
fcmove
jbe
pop
pop
or
or
push
in
test
and
outsl
sub
das
adc
inc
mov
call
sbb
mov
push
aam
push
in
mov
pushf
roll
sbb
add
jns
xor
add
and
push
pushf
or
lcall
jle
es
pop
gs
xor
xor
ljmp
inc
mov
mov
lea
pusha
mov
adcb
adc
push
mov
lds
mov
adcl
js
sbb
das
cmpsb
mov
popl
dec
rcrb
and
fdivs
cmpsb
adc
faddl
pop
xchg
push
loop
cld
pop
nop
je
push
add
jg
jmp
bnd
imul
mov
jecxz
data16
hlt
cmpsl
xchg
adc
addr16
mov
cld
std
cmpsb
pop
and
aam
in
cmp
mov
add
loop
notb
cmpsl
add
pop
push
add
mov
popa
mov
inc
inc
xlat
cld
or
cld
insl
or
icebp
orl
cmp
int
dec
xchg
adc
jmp
mov
in
lds
push
mov
cmp
xor
push
mov
cmp
jns
sbb
cmp
jae
push
mov
jo
pop
pop
aad
or
lock
lcall
sub
mov
andb
mov
mov
aam
mov
xor
test
sbb
lods
pop
pop
push
sub
outsb
and
mov
and
jecxz
icebp
dec
dec
push
std
jl
sahf
fmul
mov
fsubrp
nop
xchg
push
mov
pusha
ja
sub
clc
fisubrs
mov
dec
stc
push
and
fstl
aaa
dec
add
inc
sbb
inc
imul
enter
inc
enter
push
inc
inc
push
sbb
loope
pop
adcb
ret
and
les
or
add
sub
lahf
roll
lea
dec
nop
inc
incb
insl
dec
pop
jae
cmp
rcrb
loop
insb
cmp
rcll
jg
mov
mov
das
mov
pop
lods
in
je
rcl
lahf
cmp
dec
ret
mov
xchg
fnsave
mov
andl
fists
shrb
and
jecxz
sbb
mov
push
gs
call
fimull
das
stc
add
mov
add
out
test
stos
add
dec
sub
stos
mov
pop
pop
insb
sbb
test
bound
mov
xchg
rclb
pushf
mov
add
inc
push
loopne
in
mov
shrl
lock
enter
adc
pop
ret
sarb
mov
call
mov
orl
je
jo
mov
mov
adc
and
add
mov
pop
in
jo
and
jl
int
rcl
bound
ljmp
sub
lods
icebp
arpl
pop
pop
xorb
bound
dec
mov
push
or
add
popa
int3
das
inc
dec
ror
push
jg
aad
xor
pop
cmc
sti
jecxz
fimuls
movsb
cld
push
cmp
jae
aas
mov
jne
lahf
into
lret
shl
add
adc
xchg
rcl
mov
inc
shll
jmp
movl
push
stos
push
jae
lcall
leave
das
imul
dec
sub
ret
cmp
fscale
iret
dec
frstor
dec
inc
cmp
mov
popa
fsubrs
inc
pop
jge
pop
cmp
sbb
repz
es
rolb
pop
shrb
xchg
sbb
imul
xor
sahf
jle
inc
outsb
cmp
js
mov
xor
add
mov
iret
push
mov
xchg
cmp
cmp
or
push
jmp
aaa
clc
incb
mov
mov
insl
push
pushf
add
dec
mov
dec
mov
pop
and
push
jns
inc
and
dec
or
and
mov
insb
and
xor
inc
test
repnz
shlb
dec
stc
mov
cwtl
mov
xchg
nop
xchg
adc
testl
pushf
lea
lcall
sub
rorl
push
pusha
loopne
fistps
adc
stos
out
popa
lret
push
pop
dec
ljmp
xchg
adc
xchg
incb
adc
add
loope
movsl
sar
or
mov
cltd
aaa
jno
mov
jne
pushf
lahf
loope
mov
xchg
divb
lea
bound
mov
add
lods
adc
sbb
pop
call
imul
xchg
mov
jns
pop
pop
ss
jge
cmpl
mov
lods
pop
in
cmp
adc
les
roll
mov
xor
jmp
xor
das
ja
js
dec
out
add
inc
sahf
xchg
pop
add
imul
xchg
or
or
add
inc
sbb
mov
mov
sti
xor
hlt
fcomps
ficomps
pop
adc
or
add
pop
lcall
pop
inc
adc
popa
repz
xor
call
sbb
push
fwait
ss
fidivrs
cli
inc
pop
arpl
pop
sub
xchg
push
insb
push
dec
inc
inc
mov
pop
scas
shlb
xlat
push
cli
adc
icebp
pop
test
jbe
sbb
inc
ljmp
insb
lods
stos
enter
dec
pop
fidivrl
xor
dec
aas
mov
mov
sub
mov
pop
cmp
push
xchg
ss
clc
fwait
jns
cld
bnd
xchg
mov
xor
pop
mov
pop
sbb
hlt
fmull
and
nop
cmp
pop
mov
outsb
ss
xor
or
mov
clc
push
rcrl
mov
cmp
adc
mov
jbe
out
in
clc
in
divb
mov
jecxz
imul
daa
push
or
ljmp
rcr
xchg
jmp
xchg
dec
popa
rorl
ljmp
aaa
lcall
push
insb
jns
cwtl
adc
data16
adcb
stc
jge
addr16
pop
adc
insb
and
sahf
mov
loopne
movsb
ret
sub
pop
or
lahf
ja
pop
or
cmp
aas
insl
inc
mov
xor
add
fwait
leave
inc
out
inc
fimuls
lock
sbb
pushf
imul
lds
orb
cvtps2pi
or
out
movsb
xor
bsf
js
daa
adc
shl
sub
mov
or
outsl
or
out
fs
jmp
cmpb
xchg
xchg
scas
orl
cmpsl
hlt
mov
push
aam
adc
jbe
popl
insl
stos
pop
out
cmpsl
out
je
and
icebp
xor
shlb
mov
aaa
push
test
sbb
jp
ja
and
dec
js
shr
jmp
and
test
imul
sub
mov
leave
sbb
out
daa
and
cmp
mov
add
xor
insl
insl
dec
xchg
push
int
rolb
dec
inc
ss
mov
inc
xchg
js
pop
pop
ds
adc
pop
pop
sarl
sub
pop
insb
mov
xor
inc
push
adc
cmp
dec
mov
pop
sbb
mov
add
mov
push
jg
std
lods
dec
xchg
xchg
pop
push
sub
xchg
jb
ss
ljmp
add
imul
loop
test
add
testl
push
jge
test
int
or
sub
fcmovu
in
sar
jg
negb
xor
pushf
push
mov
rol
sahf
in
dec
pop
inc
or
cmp
testl
aad
enter
cwtl
imul
mov
pop
fwait
loopne
ljmp
cwtl
in
pop
scas
test
loope
cmp
lcall
int3
lret
bound
enter
not
and
pushf
pop
or
ret
jg
cmp
mov
xor
je
pop
sarl
fidivl
iret
les
bound
test
pop
out
push
sti
aad
pop
int
sar
mov
add
dec
fwait
lds
ljmp
mov
aad
test
aad
aas
jno
aad
ret
mov
xchg
sbb
add
ss
pusha
aas
xchg
pmaxsw
jae
hlt
push
nop
bound
xor
jb
xchg
add
or
cmpsl
repz
in
lea
sub
xor
in
pop
xchg
mov
addr16
sub
mov
dec
stos
stos
mov
int
in
mov
mov
mov
xchg
mov
arpl
and
push
jns
mov
or
clc
xor
shll
xchg
test
dec
mov
decl
dec
dec
scas
push
xchg
and
popa
mov
aad
pop
cmpsl
into
xor
imulb
clc
test
insl
mov
jae
scas
decb
sbb
or
nop
aad
cli
xchg
or
xchg
fdivl
adc
mov
and
adc
xor
push
pop
iret
mov
sbb
sbb
push
jmp
add
mov
mov
notl
jl
xor
shlb
cmp
negb
xor
or
out
enter
loope
mov
cmp
shll
mov
leave
fiaddl
sarl
and
das
mov
cmp
fisubrs
imul
adc
pop
enter
out
or
movsb
push
xor
ret
and
cltd
jo
xchg
fwait
out
es
cmp
roll
fs
out
xchg
xor
mov
mov
mov
cmp
scas
add
push
push
push
push
xlat
gs
fildl
sub
mov
mov
pop
jnp
loop
dec
mov
insl
inc
decb
fs
add
cmp
int3
inc
daa
daa
sub
mov
dec
sysexit
sub
add
cmc
mov
mov
popf
jge
int
in
xchg
cmp
cmpsl
mov
mov
js
mov
pop
cmp
cmp
ja
faddp
mov
adc
cmpsl
xor
jnp
mov
negb
popf
rclb
add
rcrl
jmp
push
pop
xchg
insl
bound
fbld
adc
inc
jo
add
mov
shr
subl
enter
jns
pop
or
jecxz
mov
push
cmp
inc
add
jns
add
das
cmpsb
enter
and
rcrb
stos
add
pushf
mov
or
out
pushl
fwait
mov
in
mov
movsb
sbb
xchg
imul
mov
sub
pop
push
add
loopne
add
mov
lea
inc
adcb
push
pop
out
xchg
mov
int3
mov
push
mov
outsb
and
pop
std
mov
sub
pop
fimull
mov
rolb
jle
add
sub
mov
stos
lods
in
xchg
dec
lock
push
inc
pop
lret
push
push
adc
add
testb
mov
divb
js
js
jno
push
outsb
sbb
out
mov
ja
mov
mov
sub
xor
into
ljmp
adc
popa
xchg
jo
insl
adc
push
aad
adc
mov
dec
xor
add
inc
push
pop
adc
push
icebp
inc
push
fisubl
sub
xchg
and
in
std
rorl
andl
js
cmp
subb
xor
pusha
ds
outsl
decl
pop
enter
enter
mov
mov
cs
adc
out
mov
push
xchg
dec
negb
and
stos
inc
inc
jp
push
mov
lahf
aaa
push
repnz
jae
mov
ret
mov
fldl
xlat
jmp
push
mov
cmp
mov
mov
mov
or
mov
push
fisubl
fistps
pop
mov
bound
mov
fistl
sarl
int
adc
outsl
xlat
mov
xor
clc
mov
arpl
fcom
nop
test
mov
pusha
ja
lret
add
sahf
gs
test
lret
pop
cmp
adc
inc
inc
inc
mov
adc
jp
insl
or
mov
fsubl
or
lahf
cmp
outsl
xor
or
rcll
lret
push
or
and
sbb
inc
add
test
aam
push
push
mov
movb
mov
add
xor
push
sbb
sbb
lcall
lcall
lret
dec
ret
mov
in
mov
repz
push
cltd
mov
mov
ljmp
in
andb
js
imul
jge
sub
xchg
loope
cmpsb
sbb
add
icebp
test
sbb
mov
fisubs
loopne
mov
mov
rolb
mov
xchg
lods
cwtl
push
mov
sbb
inc
push
sub
ffree
mov
lea
jp
mov
sbb
push
jne
xchg
xor
push
and
stos
mov
sti
fildl
or
enter
or
push
inc
add
shl
xchg
mov
popa
test
in
shr
aaa
shll
sub
push
push
addr16
inc
fldt
mov
mov
dec
outsb
fs
xchg
or
xchg
or
dec
mov
ljmp
xor
sub
mov
cmp
dec
dec
dec
cmovg
addr16
adc
fstl
imul
xchg
jecxz
arpl
ds
pop
dec
sub
jae
rcr
test
hlt
mov
imul
inc
or
loope
aad
cli
fwait
adc
xor
push
jb
std
jecxz
sti
xchg
adc
aad
fnstenv
mul
or
xlat
sbb
mov
inc
loopne
into
mov
jnp
neg
nop
mov
cmp
pop
cmp
pop
fdivrl
sub
push
adc
or
scas
incl
dec
jnp
dec
cli
fisubrs
pop
enter
scas
sub
loop
das
xchg
ds
lea
pusha
jno
dec
sarl
insb
and
test
push
inc
sti
outsb
stos
aad
jo
and
mulb
in
pop
mov
clc
das
push
outsb
imul
adc
stc
mov
lea
js
std
pop
icebp
fdivrp
shlb
sub
popa
out
or
and
int
add
pop
mov
rcr
jmp
adc
xor
and
jo
data16
nop
les
cs
or
sbb
inc
lcall
mov
cwtl
sbb
aam
sbb
sti
jnp
lret
adc
aam
xor
and
fstpl
adc
xor
clc
std
xchg
stc
ljmp
fildll
mov
popf
in
mov
add
ljmp
dec
scas
repnz
fsubs
xor
adcb
fldl
mov
sub
stos
enter
cmp
add
int
inc
mov
inc
scas
sub
mov
pop
inc
pop
pop
shlb
enter
add
mov
pusha
inc
aas
cmp
jb
sub
cmpsl
push
or
divb
ss
hlt
lahf
fadds
lods
xor
ret
cmp
popl
add
movsl
jns
dec
jle
push
pop
pop
xchg
push
mov
mov
arpl
sbb
pop
imul
aam
mov
subl
int
mov
mov
and
sub
int3
mov
sbb
xor
inc
jno
push
add
xlat
xchg
adc
sbb
scas
sub
fidivl
xchg
mov
and
mov
test
add
in
adc
inc
in
sahf
jb
adc
insl
sub
pop
add
mov
inc
dec
stos
dec
jbe
imul
pop
sti
inc
sbb
adc
mov
pop
inc
mov
out
popf
push
push
and
fadds
enter
aad
xor
xchg
cmp
inc
jle
cmp
lds
or
insb
loopne
xor
add
mov
ljmp
xchg
nop
and
ret
jg
pop
xor
lcall
mov
fcoms
sbb
xor
mov
hlt
cmpb
inc
xchg
hlt
cli
pop
xchg
add
loopne
mov
sti
adc
add
lea
mov
adc
xor
leave
mov
loopne
jnp
xor
fisubl
fldt
in
jne
movsb
lods
ss
sbb
inc
mov
mov
mov
ss
jmp
and
xor
outsl
xchg
mov
out
sub
jo
mov
int
repnz
push
cltd
sbb
mov
jb
dec
mov
aaa
fninit
jbe
cmpsb
loopne
dec
mulb
sbb
fwait
test
xchg
ret
in
cwtl
test
enter
leave
mov
cmp
insb
lods
stos
mov
lahf
js
pop
mov
cmp
loopne
or
dec
sahf
mov
sbbb
xchg
lods
jno
imul
sbb
les
push
jbe
shll
cli
adc
push
pushf
push
mov
inc
int3
inc
nop
add
scas
cli
jg
sbb
loopne
jnp
lods
call
xor
dec
push
add
pushf
imulb
inc
inc
cmpsb
jbe
or
js
cmc
out
or
pushf
insl
jecxz
test
pushl
xchg
aad
lock
mov
xor
pusha
pop
icebp
rcr
jno
cwtl
pop
adc
loope
jns
popa
nop
or
iret
xor
orb
mov
inc
mov
lods
jmp
ljmp
push
mov
inc
int
mov
lods
movsb
mov
cmpsb
jns
dec
add
pop
mov
into
mul
xor
push
inc
jno
aam
push
jbe
add
cmpsb
sbb
push
mov
shll
push
pop
sbb
test
scas
andl
mov
fldt
push
sub
dec
hlt
fildll
lahf
push
and
mov
mov
inc
loopne
aas
loopne
aad
xchg
addb
adc
sbb
fiaddl
mov
dec
fwait
insb
and
adc
addr16
and
or
mov
movsl
dec
mov
fsubp
add
dec
or
xor
aam
push
xchg
add
call
jle
dec
jb
sbb
pop
mov
popa
sbb
mov
popf
dec
cmp
into
xlat
add
jl
or
gs
test
mov
or
stos
and
cmp
sar
mov
shlb
dec
pop
or
xor
fs
jns
outsb
jecxz
cwtl
mov
aad
jecxz
mov
ret
incb
lods
lods
inc
loopne
mov
sbb
mov
fdivs
into
scas
pop
mov
jg
sbb
fiaddl
addr16
call
in
sbb
xchg
inc
inc
mov
pop
inc
sub
xor
add
jp
js
xchg
ret
lret
ja
int
repnz
dec
jne
int
ficompl
xchg
lahf
fmuls
and
iret
sbb
mov
xor
xor
push
xchg
cmpsl
mov
pop
out
pushf
pop
jno
shrl
inc
xchg
or
push
mov
sbb
incl
andl
pop
mov
or
xor
dec
or
cmp
xor
and
cmp
inc
bound
jb
enter
push
mov
loop
cmpsl
inc
lret
pop
jl
and
or
ds
add
testb
sbb
xchg
repz
add
xchg
outsl
cmpsl
cmp
loop
jno
icebp
mov
int
jecxz,pn
mov
or
repz
add
imul
mull
sbb
mov
or
inc
sbb
cmp
je
pop
mov
arpl
das
fwait
jg
data16
sbb
sub
push
cmp
movsl
scas
imul
push
xchg
lods
aam
int3
inc
xchg
dec
lret
rcr
scas
divb
inc
pop
test
js
cmp
sbb
pop
idivl
mov
cmp
mov
dec
aam
and
gs
push
jb
lcall
jmp
jg
sub
mov
call
add
cmp
adc
std
std
repz
insl
cs
xor
popa
dec
add
sub
pop
sbb
sub
push
pop
outsb
add
sub
xchg
xlat
jecxz
inc
stc
stos
loop
fmuls
fdiv
ret
popf
scas
mov
sbb
xchg
mov
arpl
pop
loopne
sub
push
mov
jb
adcl
sbb
inc
mov
and
cs
sbb
cltd
dec
popa
insb
mov
mov
pop
cli
jecxz
sti
sbb
mov
adc
movaps
xchg
or
mov
fs
lods
daa
inc
and
jbe
pushf
out
or
dec
fwait
and
push
and
andl
pushf
addr16
orl
lods
jno
cmpsb
cmpsb
push
and
pop
add
ds
incb
test
lret
ret
adc
jp
adc
test
js
je
jecxz
in
cmp
cld
xchg
pop
cmc
push
scas
jb
mov
js
dec
das
sbb
insb
xor
ja
data16
xchg
aaa
sahf
repnz
mov
and
je
ljmp
jb
pop
ljmp
out
xor
pop
leave
sub
es
lret
adc
lods
adc
enter
mov
popf
aad
xor
sbb
jbe
xchg
shll
mov
in
test
rcrl
mov
out
xor
jmp
inc
fdivrl
inc
fwait
mov
mov
sub
stc
jb
cmpsl
shll
js
es
jle
add
cbtw
pop
sbb
mov
inc
stos
xlat
divb
push
dec
cmpsl
sbb
xor
and
pushf
gs
add
fstps
ja
pop
bound
pop
movsb
das
inc
pop
mov
lock
cwtl
mov
pop
pop
insb
mov
jg
icebp
push
out
test
cld
sub
lret
xor
stos
sbb
xchg
loopne
jno
pop
xchg
imul
add
into
dec
sahf
jns
mov
jmp
add
mov
test
sbb
mov
pop
push
iret
cmpsl
cs
in
push
cltd
lret
push
push
aaa
xor
jb
scas
js
shr
jecxz
in
inc
xchg
push
fld
cmp
cmpsb
popa
xor
aad
xchg
mov
cmovno
std
add
test
inc
push
xchg
cmp
xchg
jecxz
fdivrl
cmp
adc
xor
xor
add
fistpll
lock
sbb
push
jl
pop
xchg
add
scas
and
push
pop
push
mov
in
int
add
fsubrl
cmpl
dec
test
js
push
xor
dec
aam
lods
cmpb
adc
jl
mov
push
xchg
pop
aad
push
in
insl
inc
pop
fisttpl
cld
mov
jg
mov
test
or
inc
jg
mov
insb
test
push
xor
push
push
outsl
subl
push
push
imul
sti
js
inc
push
js
es
repz
pop
dec
rcl
push
mov
fisttpl
add
jns
or
jo
jp
inc
mov
fbld
mov
les
enter
pop
pop
data16
pop
out
les
lret
movsb
cmc
aad
out
fs
loope
add
xchg
or
mov
xchg
jbe
inc
mull
xlat
rclb
cmp
arpl
push
inc
data16
scas
push
push
shrl
xchg
mov
es
mov
and
pop
daa
pop
fs
incb
dec
and
mov
inc
or
sahf
xlat
rorl
incb
clc
add
mov
frstor
jge
movsl
enter
sbb
daa
inc
dec
pop
mov
clc
cmpsl
mov
stc
pop
and
mov
scas
lcall
sub
push
loopne
in
lds
xor
adc
push
add
stc
cmpsl
je
aam
sub
fcompl
je
mov
sbb
insl
push
dec
mov
push
pop
jns
jle
pop
rolb
jge
jg
add
and
xor
mov
sub
icebp
push
call
xlat
sub
or
cwtl
scas
adc
sarl
dec
push
dec
les
push
jnp
sbb
push
or
mov
in
or
xchg
mov
pop
mov
jne
mov
inc
xor
addr16
std
hlt
sti
pop
or
lods
mov
daa
mov
lahf
jnp
and
mov
xchg
push
dec
lods
loopne
cmc
call
mov
les
xor
in
inc
add
add
jl
sub
push
data16
mov
jmp
pop
pshufw
jl
sbb
push
ret
sahf
nop
mov
outsb
movsl
dec
arpl
sub
dec
mov
adcb
adc
les
lret
adc
push
cmp
scas
cwtl
jbe
pop
jae
dec
adc
pop
das
insl
fcompl
ret
dec
clts
mov
das
sarl
mov
insb
adc
out
sbbl
mov
insb
push
jno
test
xchg
addr16
add
dec
add
jmp
mov
and
repz
mov
jbe
add
mov
or
fdivrp
or
lods
push
or
push
push
mov
popa
loop
pop
mov
jg
mov
and
jne
ficoml
pop
imul
mov
pop
mov
add
test
insb
mov
and
mov
xor
mov
inc
mov
add
and
jmp
xchg
push
testb
lcall
mov
pop
jb
call
fdivrs
ret
jnp
insl
sbb
subl
mov
jmp
cmp
inc
push
push
outsb
jb
inc
sbb
mov
loope
lea
pop
repz
aaa
sbb
add
and
insb
ret
lock
std
dec
pop
icebp
and
test
mov
lcall
lods
mov
out
rcr
mov
cmp
or
dec
out
xchg
mov
ret
inc
out
mov
cmp
cmp
jae
rcrb
pop
add
ret
pop
repnz
lods
mov
sbb
jbe
movsb
mulps
xchg
jbe
mov
push
scas
pop
xchg
pop
add
mov
rorb
dec
push
add
jmp
cld
pop
mov
decl
or
dec
aaa
mov
imull
lcall
lahf
imul
jns
cs
idivb
subl
mov
cli
xor
test
inc
fcompl
fwait
mov
lcall
or
shll
test
leave
jb
jne
fisttps
or
movsl
inc
add
sub
int
fiadds
out
cmp
pop
sbb
jge
xor
adc
or
mov
xchg
stos
pop
sahf
mov
mov
adc
jecxz
or
inc
ljmp
mov
add
and
leave
xchg
pop
scas
jns
sbb
sub
in
nop
leave
outsb
cld
sub
outsl
in
imul
sub
cmp
adc
cmovbe
adc
xchg
add
dec
and
jl
jne
cmpsl
cli
or
jp
xchg
dec
sbb
pop
loop
or
sbb
dec
fst
mov
mov
daa
xchg
mov
bound
jp
stc
ljmp
jne
ret
sbb
iret
pop
xchg
sbb
clc
xchg
push
inc
mov
cmp
lret
gs
jle
dec
mov
ss
fstp
dec
inc
mov
test
inc
fisttpll
std
jge
dec
xchg
jle
cmpb
mov
mov
inc
push
pusha
sub
mov
leave
cwtl
jp
lds
inc
jnp
out
dec
dec
mov
addr16
leave
aaa
xchg
xchg
inc
insl
pop
mov
add
xchg
stc
sub
out
clc
cli
mov
xchg
inc
nop
sub
push
andl
xchg
xor
jo
data16
js
testl
xchg
outsl
popf
push
cmc
mov
in
xchg
ds
loop
sub
outsb
cmpsl
in
imul
push
sub
ror
sub
inc
ret
pushf
sbb
rolb
add
out
adc
xchg
mov
pop
sti
jg
scas
and
push
out
notb
jp
cmpsl
pop
mull
iret
lret
cmp
rol
inc
imul
pusha
cmp
mov
rorb
incl
idivb
ror
add
or
mov
enter
std
sahf
iret
decl
outsb
xchg
mov
popa
inc
dec
imul
cli
out
and
and
icebp
pusha
cmc
xchg
xchg
call
ja
cmp
sub
push
dec
xchg
lock
and
cmp
mov
cltd
mov
mov
test
add
sbb
sbb
inc
mov
outsb
les
pop
sub
xchg
dec
lahf
cmpsb
xchg
call
mov
mov
cmpsl
popl
push
lods
dec
insb
stos
lahf
daa
out
inc
xor
aad
out
cmp
enter
clc
push
pop
aad
fwait
std
clc
add
pop
push
lret
pop
inc
icebp
lock
popf
iret
sarb
outsl
xor
xor
fmuls
jne
ret
pusha
sub
dec
cmpsl
ss
dec
das
inc
sub
and
add
add
xor
cmp
xor
pop
adcb
xchg
sub
mov
je
mov
sub
js
int
fildl
push
xchg
sbb
fiadds
call
stos
lret
or
mov
setns
into
cmp
js
sub
nopl
xchg
and
bndldx
xacquire
scas
mov
andl
arpl
adc
fincstp
aam
xchg
pop
cmp
imul
jmp
sub
arpl
sbb
xor
dec
js
dec
add
lret
int3
bound
out
das
pop
test
insl
imul
and
out
push
std
mov
popa
dec
imul
or
out
push
jp
pusha
aad
sub
jno
dec
inc
jb
and
repnz
int
test
popa
test
push
into
mov
xchg
and
lds
ljmp
adc
inc
jl
jecxz
fisttpll
cmp
lret
rclb
loope
xchg
add
pushf
repnz
lret
inc
hlt
lahf
dec
sahf
sti
std
scas
push
aaa
ljmp
push
lea
and
jmp
sub
lcall
dec
inc
ficoml
mov
xchg
pop
cmpsl
in
xorl
add
sti
rcll
fimull
pop
and
add
adc
pusha
jo
mov
mov
mov
push
jecxz
or
sbb
fildll
pop
lahf
aas
movsl
sti
pop
and
pop
pop
inc
ds
pop
mov
addr16
sti
pop
pop
dec
scas
fstl
ret
pop
lahf
lea
into
mov
mov
rcrl
adc
out
sahf
add
pop
or
mov
arpl
sub
scas
cmpsb
and
jg
mov
push
jge
ja
stos
xchg
sti
mov
cmc
les
add
cwtl
test
push
test
jnp
shl
pop
cmp
sub
mov
negb
ret
xchg
or
cmp
test
jge
push
push
out
ja
xor
xor
shl
subl
xchg
dec
xor
xchg
mov
xor
loop
add
add
js
lds
jo
in
je
xchg
wrmsr
js
add
xchg
arpl
xchg
sub
jp
gs
popa
jecxz
lret
inc
xchg
mov
sub
xlat
sahf
jmp
add
cs
inc
sbb
out
cmp
adc
testb
mov
lods
pop
pop
aas
inc
daa
push
add
clc
and
xchg
fmull
sar
pop
daa
test
jne
dec
sbb
mov
andl
loopne
clc
pop
jns
and
mov
rcrb
xor
mov
repnz
sbb
ds
inc
add
nop
mov
add
popl
mov
fdivr
xor
and
mov
sbb
ss
pop
cltd
movsb
xchg
hlt
and
into
and
fdiv
repz
ljmp
cmp
pop
mov
iret
push
jno
pop
into
jle
dec
sbb
enter
xchg
mov
xor
adc
adcl
pop
mov
sbb
rclb
fstpl
std
sbb
xchg
rol
ret
fisttpl
mov
or
lcall
aas
mov
ficompl
xor
mov
shl
mov
or
jns
negb
or
in
or
inc
jmp
dec
mov
int3
jmp
add
or
inc
add
call
sbb
mov
addr16
fmul
inc
jnp
pop
cmpsl
cmpsb
dec
cmc
iret
and
cmp
mov
mov
mov
push
push
dec
mov
iret
cmp
mov
xor
pushf
xor
imul
xor
movsl
pop
sub
je
bound
sub
hlt
les
test
push
hlt
cmp
push
jp
and
sahf
movsl
into
pop
cmc
popa
rcrb
ds
and
lahf
cltd
inc
mov
scas
cmp
mov
push
pop
jl
testl
aam
mov
call
xchg
test
push
mov
icebp
push
gs
sbb
es
jle
imul
push
xchg
jno
mov
cmp
das
ret
test
inc
push
call
movsl
pusha
into
pop
leave
pop
jecxz
ja
add
gs
pop
add
cmovns
nop
jnp
daa
into
rcr
jge
inc
enter
jbe
xor
pushf
mov
shll
sbb
addr16
cwtl
xchg
imul
fucomi
rorl
cmp
idivl
pop
mov
xchg
jb
xchg
jbe
shlb
shrb
mov
loope
and
test
test
loope
or
xchg
stos
enter
or
lret
cmp
xor
and
in
push
jne
mov
sub
pop
push
popf
aas
pop
cmp
mov
adc
or
add
mov
xchg
in
xchg
mov
roll
xchg
or
js
decb
add
push
adc
fists
ficoms
scas
insl
and
cld
dec
sbb
cmp
repnz
push
mov
ss
xor
pop
loope
mov
push
paddq
xor
mov
xchg
test
movsb
in
push
mov
add
xchg
add
fsts
shll
xchg
sub
lret
push
jb
loopne
cmp
inc
aam
cmp
adc
sbb
insl
out
jns
pop
add
call
in
jb
leave
enter
stc
out
mov
add
inc
int
icebp
sbb
and
shrl
inc
repz
jo
xor
mov
sbb
lahf
adc
std
iret
popf
jecxz
pop
or
cmp
loop
arpl
dec
lea
dec
inc
push
sub
inc
jnp
xor
sub
ret
repz
fs
ss
std
lahf
or
mov
push
mov
or
sbb
stos
mov
sbb
jp
rclb
xor
stos
out
cmpsb
ljmp
xor
jne
aad
out
sub
addl
test
psadbw
inc
mov
loopne
rorb
lods
dec
insl
or
mov
sub
mulb
cmp
lret
mov
fiaddl
ja
rclb
fidivrs
leave
fcoms
nop
imul
loop
add
shl
cltd
outsl
repz
iret
push
pop
aaa
into
push
sub
lods
mov
inc
lret
sbb
mov
xlat
fwait
iret
mov
sub
add
mov
test
adc
repz
xchg
pop
std
setbe
ss
je
xlat
mov
insl
adc
xchg
loope
sbb
sub
fisttps
and
lea
aam
jmp
nop
xor
mov
loope
out
adc
aas
mov
aaa
test
mov
add
pushf
push
push
lds
imul
cmp
mov
mov
mov
nop
gs
lret
das
pop
cs
dec
xchg
nop
and
inc
mov
mov
sarl
pop
sahf
add
jo
mov
xlat
movsb
dec
pop
adc
mov
and
in
add
add
mov
cmp
xchg
test
dec
clc
push
push
andb
fcmovnbe
pop
fists
out
fs
sahf
dec
push
xlat
or
cmp
loopne
add
mov
dec
imul
mov
push
pop
fistps
pop
test
push
sti
movsb
fs
lock
inc
imull
scas
dec
add
dec
movsb
in
pop
mov
into
sub
jp
popa
hlt
pop
cmovbe
adc
call
push
inc
imul
ljmp
iret
jmp
jns
add
imull
jecxz
xor
in
bound
and
sbb
mov
out
mov
inc
jne
sbb
jbe
and
cmp
ror
mov
or
insl
in
mov
mov
out
jg
dec
cltd
aas
rorb
pop
aas
xor
and
cmc
sbb
rclb
cld
scas
scas
jmp
in
pop
jns
js
push
push
cmp
cmp
jge
ja
sbb
popf
xor
outsb
push
mov
clc
pushf
adc
pop
add
popa
push
je
mov
add
pop
inc
int
xchg
cmpsb
scas
inc
sbb
popa
cmc
rclb
cltd
mov
and
movsb
cmp
xchg
fwait
sarb
loop
stos
ficoms
sub
mov
inc
dec
mov
jg
mov
outsl
ljmp
sub
push
sub
ret
dec
mov
push
cmp
lea
jle
xor
push
sub
lds
sub
es
pop
aas
xchg
cmp
sbb
jmp
jle
or
dec
sti
add
mov
call
in
cs
sbb
xor
je
aas
scas
andb
cltd
jge
mov
out
repz
adc
mov
lods
pop
lcall
mov
sbb
in
lds
pushf
lret
fxtract
sbb
ljmp
jp
sbb
inc
imulb
adc
add
mov
mov
sub
add
fisubrl
cltd
inc
or
pop
cmp
inc
out
or
xchg
jg
or
pop
jge
add
arpl
or
sub
xchg
fs
mov
cmpb
dec
icebp
mov
lods
divl
push
push
add
out
sti
and
mov
clc
in
add
aaa
pusha
insb
inc
negb
cmp
mov
mov
movsl
pop
clc
out
jb
pop
ja
cmp
hlt
sub
rorl
fcmovnu
inc
mov
add
bound
fdivl
pop
and
push
or
out
mov
mov
cs
movsb
sub
or
leave
insb
jns
sbb
xorl
mov
push
mov
xor
jmp
inc
sbb
lods
lods
jmp
lods
fstl
jo
movsb
cmpl
js
and
gs
pop
int
imul
ja
ds
adc
jl
cs
sub
pop
push
psraw
inc
cmp
jne
addr16
jnp
cmpsl
jne
push
cmpsl
sub
notb
inc
mov
push
add
push
clc
cld
je
xor
arpl
fisubrl
xor
add
push
sub
or
dec
jne
add
icebp
xchg
fwait
adc
fstpt
adc
in
mov
inc
push
jo
nop
mov
lea
popa
insb
and
test
pop
jp
sbb
sahf
or
loope
jne
jb
popa
ret
push
mov
mov
out
adc
pop
pmulhw
fucom
or
inc
lcall
xlat
mov
cmpsb
cmp
adc
mov
lds
ss
popa
jmp
out
dec
xor
loope
outsl
mov
push
push
and
test
stos
jmp
stos
and
cld
adc
or
in
arpl
hlt
add
inc
enter
adc
lahf
jo
mov
push
adc
iret
loop
mov
sbb
lods
in
fmul
mov
sbb
call
sub
aas
dec
loopne
clc
fs
xorl
stos
inc
outsb
jns
sub
daa
and
rol
stos
push
cmp
sbb
mov
aad
dec
imul
jnp
or
sarb
xlat
pop
sbb
popf
insl
stc
hlt
clc
int
or
xchg
je
mov
xor
add
imul
hlt
or
clc
jb
stc
xchg
or
jnp
sbb
int
mov
add
jge
cmp
dec
cmpsl
sbb
daa
mov
jg
sbb
pop
in
inc
flds
test
das
xlat
das
lods
sub
test
inc
shrb
jecxz
mov
subb
data16
jle
stos
inc
repz
inc
lods
adc
out
mov
pop
cwtl
pushf
sub
inc
xor
pop
popa
dec
push
insb
mov
insb
jle
mov
xchg
dec
push
mov
sbb
test
fisubrl
outsl
pop
rcr
adc
int3
test
inc
jae
scas
andb
push
not
or
pop
add
in
sbb
fs
testb
lods
xchg
or
repnz
push
push
aaa
or
mov
inc
mov
mov
ret
mov
imul
movsl
pop
adc
sbb
lods
cwtl
adc
shlb
or
pop
roll
push
stc
ret
in
jb
adc
or
out
cli
nop
sbb
jne
sahf
stc
adc
add
add
mov
push
mov
rcll
jmp
stos
xchg
add
sbb
inc
cmpsb
pop
push
inc
hlt
aam
xchg
enter
lcall
mov
insb
mov
in
imul
call
gs
or
lea
xor
clc
jg
sub
adc
testl
push
into
dec
movsb
mov
pop
jge
out
aaa
out
test
daa
repnz
leave
and
insl
inc
dec
add
es
mov
mov
jnp
add
popa
mov
cli
fucomi
cmpl
out
lods
lea
dec
les
shl
aam
jb
icebp
dec
mov
xchg
test
ja
xor
call
adc
pusha
js
pop
shll
mov
dec
adc
and
shll
inc
roll
in
mov
adc
push
in
repnz
xchg
mov
pop
addr16
jnp
fidivs
push
hlt
xor
in
xlat
jle
and
or
hlt
jmp
sbb
jp
add
adc
sub
jmp
shll
dec
add
inc
mov
stos
shlb
jns
scas
shrb
sbb
mov
popa
andl
je
subb
or
jae
and
xchg
test
lahf
loop
pop
mov
imul
cmp
shlb
cmp
repz
mov
test
or
mov
pushl
mov
xor
out
mov
bound
out
cmp
mov
loope
cmpsl
popf
or
insl
inc
xor
lcall
xchg
sub
pop
add
push
int3
pop
sub
mov
sub
or
sub
push
aas
mov
xor
xor
jmp
push
mov
lods
jge
mov
popf
mov
cmp
add
sbb
cmp
lret
or
push
arpl
mov
sub
adc
mov
mull
or
cmpsb
ds
aas
jmp
push
lret
sbb
add
cwtl
xchg
repz
insb
adc
pop
xor
adc
in
aas
mov
pusha
or
xor
push
das
jl
sti
sbb
adc
adc
ret
ja
or
out
scas
inc
mov
les
sbb
ret
pop
insl
xor
pop
stc
loop
and
and
fnstenv
mov
loop
and
clc
pop
jae
cwtl
aad
lock
mov
mov
add
cmpsb
pop
and
xor
or
hlt
leave
or
in
or
enter
roll
dec
cmp
sub
pop
adc
mov
sbb
mov
sbbb
mov
shlb
aam
cmp
fstpl
jge
leave
or
sub
or
adc
jae
xchg
pop
adc
mov
movsb
fnstenv
mov
push
ja
ljmp
arpl
mov
mov
addr16
je
mov
stos
pop
sbb
push
push
in
pop
adc
pop
lret
dec
int
lods
xor
fldt
lds
xchg
rorb
sbb
push
adc
insb
ljmp
ds
xor
fcmovnb
mov
shrl
mov
push
push
mov
xchg
dec
inc
loop
lds
mov
or
sti
testb
cmp
or
es
add
out
cmp
mov
cltd
lret
je
mov
daa
xor
shrl
pop
push
mov
or
push
fisubs
pop
mov
ljmp
popa
in
lods
xor
leave
xor
andb
add
fiadds
jmp
fcoml
out
jmp
popa
data16
scas
sarl
leave
hlt
stc
jle
loope
add
pop
add
add
popf
outsl
jbe
ss
mov
js
or
dec
lods
mov
mov
minps
mov
enter
add
cmc
rcrb
ret
shll
inc
test
xchg
push
jl
cmp
pop
xchg
xor
dec
cmp
pushf
xchg
into
aaa
insb
or
in
dec
and
dec
mov
push
inc
push
and
jne
in
int
stc
adc
imul
mov
iret
mov
hlt
inc
cmp
int
test
leave
or
sub
push
jns
xchg
or
xlat
ljmp
dec
jg
xchg
scas
out
loop
add
sub
cmpb
js
cmp
xchg
mov
or
jne
jno
add
call
dec
js
mov
pmulhw
out
cmpb
mov
in
pop
push
negl
mov
daa
push
pop
or
pop
in
pusha
adc
sbb
iret
fcomi
adc
add
xor
dec
loope
ss
nop
aad
mov
repz
pop
sub
and
jae,pt
cmp
es
jmp
xchg
pop
push
dec
and
clc
orb
or
adc
daa
in
rcl
aad
fiaddl
fiadds
ret
in
sbb
cltd
cmpsb
push
mov
push
mov
mov
xor
dec
int3
cwtl
sub
jo
or
mull
push
xchg
xor
lret
mov
sbb
push
mov
aad
inc
add
shrl
lods
std
xor
mov
pop
outsl
je
fisttpl
push
xlat
insb
inc
ret
sbb
sti
or
adc
push
mov
inc
jnp
push
add
add
mov
in
mov
jns
mov
sbb
nop
mov
push
les
mov
mov
js
div
adc
std
iret
decb
cwtl
test
test
mov
aaa
lret
clc
push
loopne
mov
dec
mov
pop
scas
and
push
push
sub
adc
jb
inc
mov
filds
sbb
call
insl
add
fucom
jne
push
mov
fidivl
push
andb
jo
or
mov
xlat
pop
and
jg
mov
call
xor
rol
and
hlt
adc
rcll
jne
pop
inc
lods
aam
mov
ffree
loop
xor
sbb
and
dec
push
ljmp
jecxz
jmp
sbb
cmc
incl
xor
out
xor
xor
jecxz
xor
sbb
and
fldt
cmp
and
mov
fimuls
out
push
sub
or
mov
lds
or
cmp
xchg
imul
xor
out
dec
cld
xchg
sbb
das
mov
lods
jo
pushf
xorl
adc
mov
icebp
xchg
mov
inc
adc
or
fs
push
adc
mov
cltd
xchg
push
test
adc
pushf
add
shrb
pop
in
dec
roll
sub
mov
mov
out
mov
xor
out
fwait
xchg
or
and
jbe
mov
fisttpll
mov
mov
aaa
addl
push
fwait
mov
xor
mov
mov
mov
movsl
xchg
enter
cltd
push
sahf
mov
fisubl
cwtl
mov
rol
push
add
ds
stos
mov
pusha
pop
ss
call
mov
and
out
dec
cmp
and
cmp
push
out
adc
in
sbb
dec
add
imul
xor
mov
rcrb
sahf
roll
push
je
push
xchg
cmpsl
lock
adc
dec
and
das
loop
pop
lahf
pop
jb
jne
pop
mov
lahf
pop
xchg
jae
cmpsb
pop
das
jge
sbb
fcomp
sub
mov
js
jecxz
jecxz
or
xor
add
mov
test
sbb
icebp
pop
mov
dec
les
popa
mov
movsl
setns
loopne
frstor
adc
clc
in
std
jmp
cmp
je
cld
outsb
xor
fdivs
icebp
push
adc
jbe
pusha
jp
jb
in
lods
daa
pop
xchg
pop
mov
dec
test
fs
testl
sbbl
and
jnp
add
cmp
mov
pop
sahf
mov
sti
ss
outsb
dec
dec
stos
fistpl
in
arpl
pop
adc
sub
cmpsl
xchg
js
mov
xchg
aad
push
jge
loop
jle
push
je
mov
inc
push
xor
cmpsl
stos
mov
lcall
rol
push
pushf
xchg
dec
popf
cwtl
adc
hlt
and
mov
int
jmp
push
adc
rcrb
or
stos
fs
iret
std
push
cld
mov
cmpsb
mov
cli
js
in
cmp
test
xor
shlb
movsl
cli
push
sbb
mov
push
add
stos
xchg
sub
sub
jnp
inc
andl
into
bound
mov
rclb
dec
xor
popf
sub
inc
stc
lock
incb
pop
or
xchg
dec
jnp
dec
lds
dec
pop
mov
test
pusha
mov
push
pop
aaa
adc
pop
lock
imul
xchg
into
push
and
shlb
and
jne
mov
popa
mov
aas
push
aam
outsb
jp
push
icebp
push
dec
les
sbb
mov
xchg
adc
ljmp
loope
xor
test
sbb
movsb
int3
sub
stc
lahf
sbb
es
jecxz
fnsave
inc
xor
test
aad
lods
add
and
scas
adc
fdiv
scas
and
xchg
stos
sbb
xchg
mov
imul
aam
adc
in
push
sarl
adc
xor
or
repnz
insl
pop
push
xor
mov
inc
lret
mov
dec
sub
test
nop
mov
jns
dec
rcr
test
and
xor
mov
or
fisubrl
shlb
add
pop
es
push
pop
cmpsb
mov
loopne
lcall
xchg
lret
stos
out
inc
roll
mov
imul
lret
addr16
mov
fildll
inc
dec
incl
jbe
mov
arpl
xor
pusha
xor
jecxz
cmc
shll
and
outsl
std
loopne
pop
jecxz
push
int
out
outsb
jo
movsb
lods
in
inc
pop
lds
lds
pop
sbb
inc
sub
imul
sbb
outsl
push
inc
add
mov
jle
pop
or
test
loop
xchg
jmp
sub
jmp
dec
in
mov
and
sbbl
aam
clc
iret
jge
jne
or
fildll
or
xor
dec
xlat
dec
xchg
pop
cmp
mov
leave
loope
dec
cld
mov
outsl
loop
mov
pop
push
cmp
inc
shlb
pop
pusha
ficompl
jb
cmpsb
fildl
push
shl
mov
and
shrl
pop
sbb
dec
adc
mov
std
inc
pusha
pop
pop
jns
insb
je,pt
mov
scas
jl
shr
sub
mov
popf
pop
lods
popa
pop
and
mov
xor
or
adc
cmp
mov
pushaw
lret
stos
xor
outsb
pcmpeqb
int3
mov
mov
inc
xor
cld
pop
shlb
or
mov
sti
cmp
rcrb
sub
adc
out
lret
rcll
hlt
jecxz
lods
inc
mov
adc
test
les
sub
rorb
sub
cli
iret
cmp
xor
xor
mov
fwait
and
lock
shl
mov
mov
ss
repz
test
jge
sbb
ret
adc
or
mov
in
shll
dec
and
ret
mov
sti
outsl
sahf
movsb
cmpsb
arpl
aam
or
out
mov
fadd
or
test
mov
and
fisubl
lds
cmpb
pusha
aas
dec
jl
loop
pop
jg
fldl
xorb
lock
push
test
mov
mov
cmp
enter
bound
arpl
adc
stos
jne
clc
sbb
jns
add
imul
adc
in
dec
call
mov
mov
jo
notb
push
jecxz
das
out
push
movsl
lret
mov
sbb
addr16
and
lret
loopne
mov
xchg
pop
cli
stos
cld
xchg
inc
push
jne
xchg
lds
outsl
and
add
inc
movsl
cwtl
cmp
dec
decl
or
jnp
push
ret
adc
adc
dec
inc
add
nop
aam
inc
cmpsl
dec
mov
inc
divb
out
push
add
imul
ljmp
mov
jge
add
inc
sbb
cwtl
cmp
jl
outsl
jge
repnz
adc
stos
clc
addl
dec
cwtl
stos
dec
aaa
divb
mov
cmp
jge
lods
push
aaa
mov
dec
jbe
int3
jns
xchg
xchg
leave
ja
xchg
lcall
into
pop
pop
addl
or
add
jmp
ret
or
fucomp
fstl
test
mov
xor
dec
mov
clc
mov
mov
std
and
decb
jno
repz
aas
mov
inc
mov
in
ret
ljmp
shll
idivb
inc
es
outsb
xchg
push
xchg
adc
xchg
mov
xchg
or
jb
mov
addr16
sub
lea
mov
lds
inc
je
mov
rorl
jno
mov
xor
jp
dec
xlat
mov
jg
mov
ljmp
lods
mov
ja
inc
popf
push
xchg
mov
jg
sbb
ffree
insl
mov
add
cwtl
and
popl
mov
sbb
cmpsb
add
add
stc
das
xchg
xchg
pop
sbb
movsl
jp
sbb
fisubrl
insb
pop
movsl
push
and
inc
xchg
push
inc
add
mov
out
sbb
pop
aad
stos
lods
xchg
mov
subb
lea
jecxz
roll
xchg
stos
inc
data16
inc
loop
fwait
xchg
cmpsl
sub
jnp
push
add
cltd
daa
dec
sub
dec
push
cmp
dec
add
shll
aaa
sub
ja
repz
xchg
mov
adc
xchg
lea
pushf
je
push
xor
test
sahf
inc
les
pop
mov
arpl
lds
adc
dec
lock
loop
or
aaa
clc
xchg
clc
lret
push
add
xor
adc
es
insb
lret
roll
stos
xchg
add
leave
mov
aas
lods
mov
hlt
cmpsl
ljmp
mov
mov
jp
mov
loopne
sub
dec
pop
sti
loopne
fadd
std
mov
push
pop
shll
pop
xor
pop
cmpsl
fstps
add
stos
sarb
rol
and
mov
add
mov
sbb
push
inc
jle
fisubl
pop
daa
mov
ds
into
add
out
dec
pop
fisttpll
outsl
push
or
ja
dec
loope
mov
shrl
loop
lock
out
cmpsb
xor
mov
jl
sbb
shl
sub
cmp
inc
stos
mov
inc
loopne
push
int3
and
sub
xchg
sub
add
and
mov
fdivr
ret
push
insb
aas
cs
mov
inc
aaa
mov
je
negb
cmc
pusha
or
sbb
mov
cs
pop
lret
lcall
cwtl
cmp
clc
inc
aam
lock
pop
rcl
pop
lret
xchg
jl
loope
fdivp
cld
push
cld
psrlq
fsts
call
js
sub
adc
std
cmp
pop
sbb
add
push
xchg
lahf
addb
sbb
mov
aam
mov
test
push
mov
mov
aam
sub
dec
arpl
xchg
data16
popf
cwtl
arpl
outsb
mov
lea
and
ss
sbb
jecxz
in
dec
and
sbb
std
cltd
jmp
sbb
sti
daa
mov
xor
push
adc
xchg
inc
sbbb
lea
lock
ljmp
push
fcomi
xlat
mov
or
cmp
pusha
jnp
xor
inc
aam
sub
jg
pushf
js
es
mov
bound
in
mov
pusha
lds
scas
push
movsl
dec
jo
lods
push
dec
dec
fisttps
mov
sub
push
lods
loope
sahf
rolb
add
scas
sbb
jmp
sub
lods
xchg
loope
fists
adcb
aaa
push
sbb
mov
sub
pop
shlb
lock
sbb
mov
addl
test
xchg
cmp
mov
popf
mov
out
push
dec
mov
sub
pop
or
dec
repz
daa
rol
mov
mov
jp
cltd
dec
jo
lea
cs
or
add
lods
fxch
jns
add
cmpsb
rcll
or
or
jo
adc
pushf
jbe
mov
hlt
lahf
stos
mov
js
orl
push
mov
mov
mov
adc
out
sub
push
jp
cmp
imul
or
sbb
xchg
jae
movsl
adc
push
inc
adc
mov
dec
ljmp
std
and
fcompl
dec
jo
jle
add
cmpsb
mov
int3
fsubrp
cld
nop
lds
repnz
inc
cmpl
xor
ds
icebp
push
sbb
pop
mov
dec
jle
dec
xorb
add
adc
push
jno
adc
inc
adc
push
iret
fsubrl
cmp
xor
sahf
rorl
mov
es
adc
push
decl
mov
loop
in
out
jmp
cli
iret
dec
xor
add
mov
or
mov
out
in
jle
sbb
mov
lock
or
fistps
mov
pop
xor
adc
add
jl
sbb
push
jo
cmp
repz
adc
xchg
mov
push
in
add
pop
stos
lcall
les
mov
in
jl
or
std
mov
jb
mov
int3
aas
mov
popa
std
cmp
subb
dec
out
push
xchg
mov
inc
pop
cmp
lods
call
push
outsl
pop
cwtl
add
xor
jne
es
xchg
mov
and
push
or
mov
ficoml
xchg
sbb
adc
mov
inc
lods
fwait
out
outsb
sub
fisubs
add
outsb
fwait
leave
push
jg
fmul
pusha
xor
dec
stos
xor
or
dec
popf
lret
cld
cmpsl
popa
mov
outsl
ficoml
and
xor
int
xchg
cli
outsb
jnp
add
jbe
cli
push
cwtl
stc
and
fiaddl
adc
inc
dec
scas
sti
mov
loope
fsts
popa
icebp
movb
lods
popf
cmp
lods
fistpll
or
stc
jmp
scas
mov
push
lods
adc
out
add
fdivrl
mov
adc
nop
push
push
or
xchg
cmp
icebp
cmp
push
jp,pn
leave
pop
jbe
or
add
roll
mov
cmpsl
pop
inc
int3
aad
lcall
inc
xchg
aam
testb
mov
cmp
mov
xchg
test
sbb
inc
ljmp
xchg
xchg
dec
lret
mov
clc
xchg
mov
mov
ds
push
insl
or
fsubl
push
jns
rclb
out
xor
ljmp
das
inc
or
sbb
jp
mov
push
ss
cmc
rol
ret
jmp
xor
adc
mov
sbb
adc
aaa
mov
sbb
scas
shrb
clc
cli
and
movb
add
dec
mov
cs
pop
adc
fiaddl
mov
or
inc
mov
movsl
xor
xchg
push
popf
testl
fisttpl
xor
or
xchg
lods
fiadds
aad
xchg
jnp
es
mov
sbb
mov
lds
sarb
je
pop
dec
mov
test
test
push
mov
shll
dec
dec
cltd
adc
jg
imul
out
xor
mov
out
mov
sub
pop
ror
out
pop
sbb
addb
je
xchg
rolb
pop
rcr
inc
jb
xchg
dec
bound
sbb
mov
dec
xchg
lods
cmp
add
sbb
or
in
and
jg
repz
lods
jp
mov
sysexit
pop
xor
outsb
jnp
push
add
addr16
xor
test
pushf
mov
or
push
test
sbb
sub
cmp
lcall
adc
dec
and
hlt
sub
push
push
jmp
sbb
inc
in
adc
mov
mov
and
xchg
call
or
jp
das
sbb
fyl2x
int
mov
pop
aaa
mov
push
xor
imul
test
in
fwait
add
lret
push
mov
cmp
dec
jmp
push
xlat
xor
xchg
inc
jmp
add
pop
dec
mov
rorl
sahf
lahf
fwait
dec
cld
lahf
mov
cmp
jle
add
add
loop
pusha
pop
jg
stos
nop
sbb
sbb
push
popa
xorb
and
in
stc
call
lret
xchg
mov
bound
mov
add
sarb
ja
cmpsb
call
add
ret
ficoms
dec
adc
repnz
shll
gs
stc
dec
and
mov
into
mov
scas
into
in
dec
adc
rcrb
inc
in
add
test
mov
ret
adc
out
movsb
push
lods
pop
pop
mov
mov
mov
mov
push
xchg
inc
mov
fs
cld
and
adc
pop
dec
lea
cmpsl
in
jo
push
ja
or
xor
mulb
adc
decl
js
push
mov
xchg
or
or
jecxz
adc
ds
aad
popf
into
cmpsb
xchg
repnz
fidivl
sub
ja
push
clc
sbb
and
aam
pop
push
jae
add
mov
pop
mov
sub
add
imulb
popf
frstor
sub
das
aad
pop
sti
cmp
push
add
xor
je
push
and
mov
sbb
int3
sub
in
lock
adc
cmpsl
push
fldl2e
lret
push
inc
movsl
scas
loopne
add
pop
xchg
jns
rcrl
sbb
popf
cmp
insl
mov
sbb
mov
addr16
inc
fwait
xor
xchg
loop
into
xchg
jge
and
jne
mov
jno
pop
iret
cmp
xor
mov
js
aas
outsl
fadds
dec
or
jno
cmpb
fcomip
inc
popa
aad
lock
adc
call
fisttps
hlt
or
adc
insb
nop
xchg
push
inc
xlat
inc
mov
insl
movsl
arpl
cmp
movsl
sbb
add
push
clc
cs
insl
push
ljmp
mov
adc
and
inc
loop
add
js
inc
cmp
pop
push
jge
cmpsb
outsb
mov
mov
xor
xor
fabs
mov
jp
es
mov
or
add
adc
jo
mov
mov
pop
push
mov
xchg
int
or
test
and
mov
adc
add
daa
mov
cs
cmp
cmp
in
outsb
dec
scas
pop
nop
popf
push
cmpsl
hlt
lcallw
jne
shrl
pop
pop
or
push
mov
ror
jmp
ficoms
jo
push
mov
xchg
cmp
jle
jae
adc
and
inc
adcl
push
aas
mov
pop
add
cmp
nop
pop
inc
roll
mov
pop
pop
sarl
sbb
push
cmp
sub
mov
test
push
sbb
int3
pop
hlt
lcall
xchg
mov
mov
hlt
dec
ret
adc
ds
lods
movsl
iret
imul
push
int
pop
sub
popa
inc
sbb
imul
and
and
cmp
and
in
sbb
push
xor
sbb
jl
jae
push
pop
ss
inc
lahf
pop
cltd
cmp
shll
repnz
out
push
xchg
lds
sub
xchg
jmp
inc
into
cwtl
lcall
mov
bound
or
stos
jbe
dec
clc
stc
mov
jmp
lret
gs
bound
dec
mov
cmp
pop
ljmp
test
dec
inc
adc
clc
add
loope
or
dec
mov
mov
sub
sub
adc
jmp
mov
enter
pmaxsw
mov
rcrl
inc
enter
or
lods
unpckhps
sub
adc
icebp
dec
pusha
cmc
xor
add
hlt
add
aam
loope
in
mov
add
icebp
jno
lock
xchg
and
shll
pop
mov
stos
sub
dec
xchg
dec
sbb
sub
jl
xchg
sbb
std
movsb
dec
punpckhdq
push
dec
mov
xor
inc
xor
addl
cmp
and
add
cmp
mov
imul
cli
jb
inc
jns
lea
xchg
es
add
jp
sbb
adc
cld
and
jo
sbb
push
cli
and
or
and
aas
movsl
sub
cmp
mov
ja
pop
mov
mov
jo
inc
scas
sbb
mov
sub
flds
cltd
rcrb
dec
dec
fldl
fcomps
ficomps
inc
std
add
negb
sub
push
xlat
xchg
dec
mov
rorb
mov
adc
pop
ljmp
cmc
orl
jmp
pop
pop
negl
data16
cli
pop
add
lods
pop
das
fwait
es
addl
push
and
mov
cmp
mov
and
mov
mov
js
hlt
movsl
inc
xchg
les
lock
test
pavgb
cltd
jns
sbbb
ret
test
xor
add
mov
psrlq
sar
sti
push
cmp
jp
and
mov
dec
mov
add
pop
loope
jbe
xor
push
xor
das
xor
sbb
cmp
inc
and
ljmp
adc
lds
pop
hlt
scas
adc
mov
sub
jnp
stos
sub
das
dec
dec
pusha
inc
inc
rol
inc
insb
add
cmc
jno
testl
cmc
inc
or
cld
mov
dec
add
push
and
imul
mov
push
adc
cmc
movsb
stos
and
mov
ja
push
call
mov
std
bound
mov
iret
push
cmp
sti
mov
dec
sbb
adc
mov
sbb
dec
stos
jge
es
jmp
jg
nop
jge
imul
aam
add
sahf
jecxz
jmp
pushf
lret
dec
or
rcrb
je
cmpsl
mov
int
clc
push
mov
sbb
es
je
inc
test
shr
cmpsb
jne
cld
iret
dec
push
sbb
jbe
addr16
sbb
cmp
inc
cmpsb
mov
xchg
push
push
sub
int
dec
dec
push
rcrl
jae
cmp
push
outsl
push
or
pop
mov
scas
mov
lret
xor
clc
and
stos
rorb
push
test
and
mov
mov
frstor
dec
jno
pusha
or
pop
xchg
cmc
jne
inc
dec
xchg
stos
mov
out
xchg
popf
fs
divb
shll
sub
test
or
shl
iret
push
ja
mov
xor
mov
fdivrl
mov
inc
push
idivl
jg
les
rorb
je
or
mov
popf
sbb
xor
pop
pop
int
jnp
pop
out
mov
daa
adc
std
ret
out
add
repnz
popf
xor
dec
inc
cmp
push
jae
jae
sbb
inc
test
int
jb
sahf
sbb
xchg
push
cmp
mov
mov
xchg
cmpsb
sbb
add
in
arpl
fisttpl
stos
push
add
cs
nop
test
cwtl
add
loopne
dec
push
sub
add
shr
in
cmp
xchg
add
pop
pop
fcomps
call
pop
mov
rcrb
ficomps
add
mov
add
cld
mov
icebp
outsl
repnz
cmp
movsl
outsl
mov
roll
bswap
push
in
pop
and
jl
dec
or
lock
cmp
mov
test
jg
jo
das
push
jno
sbb
dec
and
xor
sbb
cmp
movsl
adc
mov
daa
aad
aas
mov
xchg
and
nop
stos
jecxz
jb
testb
js
xchg
scas
xchg
pop
aas
jecxz
cltd
lcall
cmp
test
adc
xchg
pop
test
orb
cmp
and
cld
and
push
push
mov
xchg
ds
add
jb
cmc
fildl
test
push
mov
fbstp
ret
dec
pusha
jge
es
mov
push
push
ret
lds
xor
dec
pop
adc
mull
mov
or
push
fdivrs
nop
inc
mov
pusha
add
jno
fnstcw
pop
sbb
sbb
jns
outsb
sbb
fsts
int
shll
je
mov
push
sahf
iret
jecxz
fnsave
xor
aaa
add
jmp
fmull
aad
or
les
inc
or
mov
rcrl
add
pop
in
ds
data16
imul
fdivl
popa
aaa
nop
xor
pop
pop
pop
mov
or
bound
and
andl
or
sti
pop
cmpsb
ficomps
push
out
push
push
lret
outsb
mov
mov
lea
dec
lcall
repz
sahf
aam
ds
inc
rcr
sub
data16
xchg
mov
sbb
push
sbb
sbb
or
inc
push
xchg
add
sbb
lcall
ficomps
test
adc
xor
stos
fists
and
pop
lret
cld
scas
movsl
sbb
mov
sbb
shll
in
sub
xlat
cltd
bsr
fldenv
lods
push
fmull
test
fisttps
cmpsb
in
sbb
daa
clc
or
pop
fnstsw
ds
mov
pop
mov
pusha
sub
mov
adc
dec
lods
test
xchg
lds
mov
hlt
in
xor
add
scas
and
into
sti
test
add
jp
push
test
scas
movsl
aam
or
cmpsb
jb
lcall
push
add
fmull
pop
push
adc
jnp
pop
mov
hlt
add
rorl
xchg
sbb
cmp
and
dec
sbb
enter
popf
lods
adc
pop
dec
and
mov
push
adc
add
push
outsl
fdivrl
sbb
in
lods
outsl
shll
mov
or
sub
fcomps
mov
aam
addr16
pop
mov
pop
inc
lret
clc
in
leave
xor
test
data16
inc
xchg
push
addr16
insb
pop
mov
dec
leave
add
inc
stos
ds
or
cld
stos
pushf
cmp
pop
ds
out
sahf
mov
dec
xchg
adc
jg
test
lock
ret
out
fs
cmp
mov
pop
int3
imul
popf
cltd
orb
adc
int3
ficoml
or
dec
idiv
or
xor
ficompl
pop
and
mov
in
pusha
jmp
int
pop
adc
xor
cli
int
sub
xor
inc
sbb
cltd
pop
repnz
mov
clc
in
test
push
rorb
push
fwait
xchg
mov
fwait
in
insl
gs
xchg
fimull
cmc
jmp
inc
rcr
out
dec
push
std
sbb
push
mov
push
adc
movsl
daa
stos
cmpsl
jle
lds
cmp
jp
loope
or
jne
add
adc
jne
ret
xor
push
stc
lock
lcall
mov
push
dec
add
dec
mov
faddl
lret
das
mov
mov
and
insb
icebp
adc
xlat
xchg
mov
and
into
pop
add
push
lods
fidivs
cli
push
pushf
insb
dec
push
lret
arpl
xchg
lods
mov
xchg
imul
das
mul
xchg
sbb
mov
inc
mov
rcrl
imul
mov
in
pmulhw
into
add
mov
icebp
and
incb
inc
xor
sbb
call
add
daa
or
lds
pop
iret
jg
jle
xlat
lods
in
dec
fildl
mov
mov
xor
mov
lods
nop
push
mov
xor
in
fistl
sahf
sub
sub
data16
sub
push
or
mov
shlb
data16
and
mov
cmpsb
out
xlat
cmp
nop
mov
leave
inc
push
adc
add
mov
push
das
push
outsb
test
jmp
mov
scas
aad
mov
sub
mov
cmp
arpl
cwtl
mov
clc
repnz
je
jne
mov
iret
call
xlat
pop
lret
push
adc
cmpsl
insl
iret
int3
mov
and
lret
aas
add
stc
xchg
dec
dec
call
adc
or
sbb
push
push
ds
mov
out
aaa
popa
or
lods
xor
loope
icebp
xor
repnz
sahf
int3
sbb
xor
addb
out
mov
insl
subl
fisttpl
push
sub
or
sub
mov
rcrl
subl
pop
push
es
adc
insl
fimull
push
and
sbb
mov
rclb
lret
mov
adc
sub
aam
mov
mov
dec
and
inc
sbbl
gs
in
add
mov
fbld
add
adc
pusha
cmp
loope
fiadds
int3
mov
mov
pop
scas
xor
sub
push
xchg
jae
fdivl
push
cmp
cwtl
arpl
xchg
and
fprem
scas
mov
pop
push
int
testb
lods
pop
jnp
adc
mov
in
in
lea
mov
and
xor
mov
cld
cli
call
ds
loop
std
hlt
andb
xor
and
mov
push
pop
outsl
dec
xor
das
pop
or
pop
aaa
fwait
mov
sub
add
and
push
mov
test
mov
jmp
sub
sbb
sub
movsl
in
lret
cmc
cmp
mov
inc
cmp
push
push
lahf
lods
stc
daa
rcrb
dec
lret
dec
jecxz
inc
data16
cmp
dec
jmp
test
jae
fmul
xchg
cli
lods
gs
xor
jge
mov
fisttps
out
lahf
adc
xor
cltd
cmpsl
pop
mov
adc
or
jmp
xchg
adc
rcll
mov
inc
test
pop
out
rorl
icebp
add
cmp
inc
lret
push
imul
cmpsl
test
int3
or
push
inc
fdivs
sti
rorl
arpl
add
aaa
xor
pop
jecxz
push
stos
call
cmpl
mov
inc
dec
and
mov
xor
xchg
pop
xchg
decb
xchg
sbb
bound
and
cmpsl
mov
int
sbb
mov
dec
scas
loopne
insl
lret
mov
rorl
js
add
arpl
mov
xor
inc
ficomps
cli
lret
jo
inc
enter
pop
add
xor
insb
shll
jae
sti
xor
in
ret
push
jle
jae
pop
lods
cmp
pop
data16
xor
sub
jo
outsl
sub
rcll
aad
ja
pusha
insl
mov
ret
jg
pop
xchg
and
outsl
fisubl
stos
jb
dec
je
fnstcw
popl
and
icebp
std
iret
scas
imul
aad
mov
or
sbb
sbbb
pop
rcrb
jge
sti
pop
ja
push
mov
arpl
cltd
jbe
pusha
add
loopne
add
mov
xchg
std
aad
hlt
and
mov
insl
aas
dec
notb
dec
add
lret
pop
jae
test
inc
sbb
rorl
add
adc
adc
jmp
js
cltd
xor
cmpb
or
mov
sbb
jns
into
or
in
loop
stos
adc
out
nop
test
incl
fisubrs
les
pop
add
sub
adc
int3
push
daa
mov
pusha
clc
out
sarl
lds
cli
jno
dec
xchg
mov
mov
xchg
jl
xchg
std
mov
xor
xchg
xlat
mov
insb
stos
mov
or
aad
xchg
outsl
xor
pop
andb
cmp
out
cmp
inc
push
inc
das
cmc
sub
push
add
call
sbb
adc
fstp
and
lcall
outsl
mov
push
ss
roll
add
out
insb
sbb
pop
jg
subl
dec
fisubrs
cltd
and
push
scas
stos
cmp
or
push
mov
daa
xchg
cmpsl
push
mov
jbe
out
inc
bound
pop
fucom
out
sbb
aaa
mov
push
xchg
subl
pushf
fmul
mov
xor
addr16
inc
cld
sub
dec
leave
inc
xor
loop
and
imul
mov
in
mov
push
std
sbb
arpl
inc
jle
push
xchg
sar
ret
xchg
mov
cmpsl
sub
sub
mov
mov
ret
mov
xchg
dec
adc
addr16
movl
in
addr16
pop
int
bound
sti
pop
insb
and
ja
jecxz
ffree
fnstsw
and
imul
xchg
mov
pop
fsubrl
sub
fisttpll
mov
loopne
cmp
pop
imul
and
and
hlt
inc
aad
shlb
test
adc
lahf
loopne
pop
popa
loop
fldt
test
out
inc
in
movsb
icebp
mov
sbb
push
xchg
pop
mov
lret
in
loop
pop
mov
xchg
es
xor
push
push
addl
lea
pop
leave
ret
or
neg
sub
pop
aaa
adc
ret
sbb
add
mov
dec
jmp
fs
lods
cmp
xor
lcall
sahf
mov
shl
lock
jge
sub
push
push
adc
xor
jb
scas
iret
push
rolb
pop
mul
sbb
sbb
inc
addr16
mov
std
or
xor
icebp
imul
jp
fwait
jmp
pop
mov
fxch
cwtl
rcrb
cwtl
push
mov
and
and
add
dec
loope
or
stc
dec
dec
lods
sub
leave
mov
out
mov
jmp
jmp
pop
sub
cpuid
aaa
sbbl
in
jo
pop
fisubrs
repz
es
ljmp
pop
pop
and
mov
push
into
sub
or
imul
push
or
add
push
xchg
out
outsb
pop
test
push
xchg
out
xchg
hlt
fcomi
loope
lods
jmp
and
mov
ss
mov
sub
dec
hlt
pushf
xchg
xchg
popf
pop
xor
inc
mov
dec
jg
push
out
pop
je
cmpb
test
mov
xor
dec
and
jcxz
jle
mov
sbb
xchg
mov
imul
dec
jne
mov
xchg
rcrb
jg
adc
imulb
xchg
dec
and
xlat
das
lret
es
loope
pop
pop
inc
inc
push
daa
mov
cs
sbb
sahf
out
std
adc
adcb
ljmp
enter
std
jno
vmovlps
adc
jne
test
ret
je
push
or
in
std
in
rcll
je
aaa
push
adc
int
aam
dec
xor
jecxz
pusha
loopne
and
xchg
pop
jle
push
inc
pop
pop
mov
ljmp
scas
les
into
cmpsl
test
ret
decb
cmp
test
mov
mov
movsl
repz
jbe
addl
enter
loope
pushf
mov
shlb
add
pop
add
jl
xchg
sti
sub
xlat
repnz
inc
scas
leave
push
cli
adc
int3
pop
movsl
lahf
pop
pop
adc
out
mov
movsb
loopne
mov
and
push
adc
jl
jnp
cmc
lock
repnz
adc
mov
out
mov
sub
sbb
data16
xchg
push
icebp
or
pop
bound
scas
xchg
nop
or
movsb
adc
test
jo
ja
test
cmpsb
cmp
or
imul
test
dec
cmp
sbb
sbb
mov
push
push
jmp
scas
nop
jae
or
push
aad
mov
cmpsb
mov
inc
and
jo
cmp
add
mov
xor
scas
jns
shlb
mov
and
and
xor
idiv
push
cmp
std
repnz
sti
jo
mov
repz
jb
sti
inc
scas
dec
xlat
add
cmpsb
jnp
xchg
hlt
adc
xor
sbb
add
mov
sub
sub
xchg
or
imul
pop
enter
bound
sbb
pop
cmp
add
icebp
shlb
jno
imul
lret
scas
cltd
stos
pop
mov
push
adc
cmpsb
sub
scas
mov
lods
push
in
sahf
pusha
or
add
add
xchg
push
test
mov
and
bt
cmp
into
sahf
into
adc
xor
mov
leave
xor
dec
push
fdiv
adc
outsb
enter
cwtl
sbb
jno
adc
mov
nop
cli
arpl
dec
icebp
sar
das
push
icebp
add
fs
lds
fnsave
cmp
enter
sub
inc
xor
sbb
cmc
fcoms
add
fisubs
js
repz
insl
jo
xor
lret
clc
sbb
mov
jp
test
xchg
js
je
addb
mov
or
mov
leave
stc
sbb
or
dec
daa
mov
fidivl
lret
adc
push
add
and
mov
cmp
repz
insb
sub
lret
addb
pop
add
jl
add
jo
pop
xor
xchg
mov
mov
rcrb
lcall
inc
push
out
lret
and
or
sbb
inc
xchg
cmpsl
inc
push
sub
mov
push
adc
sub
xchg
out
jmp
dec
into
xchg
xor
ljmp
int3
push
jno
leave
jne
out
and
clc
cmp
lods
ja
nopl
movsl
cli
sbb
dec
insl
pop
add
inc
leave
addb
fsub
aam
cmp
dec
std
pop
push
inc
or
or
jmp
lods
or
add
xchg
mov
fdivl
aad
push
xchg
and
mov
jle
jo
mov
push
scas
fimull
mov
test
xor
jno
test
add
lock
in
mov
cli
int3
popf
cld
mov
scas
xchg
and
nop
push
das
ret
and
fwait
rcrb
push
dec
or
inc
dec
sbb
test
hlt
lods
clc
add
mov
xchg
add
nop
xor
inc
add
pop
xor
shll
out
fldl2e
lret
pusha
lea
push
dec
fnstcw
decl
inc
pop
push
dec
mov
or
mov
push
ljmp
push
insb
xchg
mov
mov
inc
lds
inc
xchg
cmp
addr16
js
ss
add
dec
and
xor
push
imul
out
cltd
shrl
pop
xor
push
gs
jb
shll
xchg
out
or
mov
testl
arpl
push
push
aas
mov
mov
int
into
xor
push
lcall
insl
pop
popl
mov
or
sbb
adc
fidivrs
insl
mov
int
inc
rolb
add
push
icebp
cmp
faddl
leave
xchg
mov
mov
repnz
sbb
dec
dec
in
addl
adc
or
out
repnz
cmpsl
pop
mov
inc
pop
mov
inc
lea
sbb
mov
jbe
lock
push
xor
imul
loopne
movsl
movsl
push
mov
push
mov
shlb
pushf
ja
jp
inc
cs
jg
test
xchg
and
add
mov
sub
popf
test
dec
rcrb
std
imul
mov
jp
inc
adc
cld
mov
and
es
cld
jb
test
jns
add
mov
sbb
add
ret
mov
fmull
iret
or
pop
inc
sbb
pusha
xor
shlb
das
and
je,pt
xor
push
sub
push
xor
nop
sets
cmpsl
inc
imull
data16
imul
xchg
dec
or
inc
popf
add
in
lret
mov
cmpsl
cli
and
pop
shll
mov
cmc
and
push
sbbb
jecxz
add
aam
lock
sbb
pop
xor
push
jns
inc
cmp
out
jmp
pop
xchg
pushf
sub
mov
rolb
mov
mov
fstpt
push
and
and
lcall
cs
jnp
xchg
cmpl
push
push
lods
stos
and
out
dec
bnd
cmpsl
sbb
into
rcrb
sti
daa
jp
dec
ljmp
fcmovnb
push
pop
push
xchg
bound
or
lods
out
sarl
cld
and
ret
arpl
inc
or
add
insl
test
dec
insl
sub
mov
js
push
inc
mov
lock
ficoml
rcll
inc
mov
sub
inc
dec
mov
sub
call
cltd
mov
lret
bound
inc
jle
lcall
xchg
xor
inc
fidivrl
push
ja
movsb
mov
hlt
mov
xchg
cli
jge
jg
xor
mov
ret
xor
sbbl
jb
push
push
and
mov
add
xlat
out
jae
push
stos
xor
push
mov
or
clc
push
out
ret
gs
mov
and
dec
stos
pop
loopne
movsl
dec
xchg
popa
out
repz
mov
cmpsb
je
xchg
out
mov
cmc
test
add
jmp
out
mov
arpl
cwtl
push
xor
xlat
dec
push
xchg
or
rcll
pusha
push
sbb
das
test
mov
data16
lcall
stos
je
and
pop
xchg
cmp
xchg
loope
jg
push
add
mov
pop
addr16
inc
xchg
cmp
xor
call
cmpsb
cmp
jp
dec
xor
fwait
inc
ss
idiv
out
stos
cwtl
pop
scas
addr16
sbb
cmp
sbb
cmpl
dec
cmc
xor
adc
inc
cmp
sbb
mov
push
push
rcll
lretw
int
out
pop
push
jl
sbb
aad
and
mov
add
dec
push
xchg
adc
mov
lods
aad
roll
int
sub
xlat
add
or
xchg
jecxz
and
inc
in
notb
out
imul
ljmp
mov
daa
xchg
jmpw
push
in
mov
pop
mov
push
int3
jecxz
or
pop
xlat
call
adc
add
lret
scas
mov
arpl
cmc
stos
in
js
into
hlt
dec
call
jno
fiadds
cmp
out
and
mov
ljmp
dec
cmp
addl
movsl
lock
inc
mov
cmp
jmp
or
inc
sub
daa
in
lcall
mov
jo
loopne
mov
push
jl
mov
push
dec
lret
loopne
scas
mov
fwait
mov
mov
push
sub
push
outsb
stos
fsubrl
negl
jns
mov
jno
out
test
push
sub
pop
or
mov
and
mov
jns
inc
mov
fdivrs
push
incb
push
inc
out
hlt
mulb
add
jmp
push
fcompp
inc
dec
aaa
sub
push
sub
fldpi
fwait
mov
js
push
mov
pushl
push
and
sub
sbbb
mov
loope
mov
popf
fbld
scas
int
in
inc
mov
loop
jle
jl
jmp
ficompl
xchg
cmp
push
fcmovbe
jbe,pt
orb
outsl
cmp
stc
imul
mov
and
and
nop
sahf
adc
xor
xor
mov
xor
lahf
jecxz
add
cmovae
push
andb
cmp
daa
std
inc
adc
repnz
and
or
mov
cld
and
inc
pushf
test
lods
add
gs
fs
call
dec
adc
sub
sahf
or
xchg
aaa
push
movsl
pushf
int
aaa
pop
lret
int3
xor
insl
pop
outsb
lret
pushf
jno
into
fcoml
aam
add
pop
push
or
rcl
lret
cmpb
add
popf
mov
and
push
into
jle
ret
sub
push
adc
shl
xchg
int
xchg
dec
cmp
add
icebp
lds
test
jne
sub
or
pop
sti
mov
mov
push
test
jbe
shl
insb
sbb
push
mov
cmp
xchg
movsl
fwait
mov
fstpt
fucomp
mov
dec
lea
fdivl
test
fsubp
mov
add
outsl
xchg
add
inc
dec
loop
fsubrs
mov
sbb
fcompp
mov
loopne
lahf
sbb
mov
jns
dec
std
inc
push
enter
sbb
in
cltd
mov
lret
ja
adc
jno
incl
lret
push
dec
pop
aas
pop
in
xor
imul
adcl
pop
pop
in
inc
ret
mov
pop
xor
jo
or
inc
mulb
cs
fldenv
fnstsw
jmp
pop
lcall
jp
shlb
adc
in
pop
xorl
mov
push
mov
sub
xchg
out
mov
mov
inc
cmp
adc
insl
scas
adc
jg
cmpsl
scas
xchg
mov
pushf
es
int
lcall
mov
jns
dec
out
loopne
out
xor
lcall
lret
and
mov
lods
sub
movsb
enter
insl
mov
cmp
xchg
aad
sub
call
and
ss
addb
jmp
insb
pop
xor
cltd
cmp
es
jno
call
clc
repz
fnstsw
lahf
fists
insl
leave
dec
add
subl
aas
mov
xchg
mov
fwait
add
iret
xchg
xchg
test
sti
mov
sbb
popa
lds
pushf
clc
or
pushf
int
adc
sbb
mov
xor
out
mov
xchg
imul
sbb
loopne
push
inc
jns
lret
cmp
cmpsl
xor
shll
dec
dec
test
pop
pop
nop
cmp
xor
push
mov
adc
daa
mov
xchg
sahf
add
inc
lcall
mov
adc
mov
xchg
push
pusha
mov
jecxz
pop
aad
clc
xchg
jae
fmull
cwtl
lock
jmp
lods
or
push
push
mov
inc
adc
pop
pop
push
aad
aad
rcr
aam
or
hlt
ljmp
popa
inc
push
mov
out
aad
and
add
scas
test
jns
add
in
mov
sti
xchg
int
sbb
hlt
push
cmp
cmpsl
xchg
cmpsb
lcall
je
adc
ljmp
test
push
js
mov
jecxz
scas
mov
cmp
xlat
insl
popa
outsb
pop
fidivrl
xchg
jecxz
dec
dec
or
lret
scas
icebp
inc
push
insl
or
pushl
in
lea
test
in
stos
xchg
dec
or
outsb
xor
push
mov
es
xchg
lods
ficomps
ret
shll
pop
xchg
outsl
jno
mov
jae
xchg
fmul
jge
and
bound
outsb
dec
cltd
cmp
out
imul
adc
lods
mov
sti
aaa
adc
lret
out
jmp
ds
in
ret
cmp
leave
int
pop
gs
jp
push
lds
inc
je
jmp
cmpsl
pop
sub
loopne
jmp
mov
lods
jno
cmpsl
xchg
sbb
pop
cmp
dec
and
sbb
dec
or
enter
out
pop
pop
pandn
sarb
lret
inc
cld
imul
push
add
add
sub
pop
rorb
fildll
cmp
cmpsl
xchg
push
loop
aas
out
aam
jl
in
les
mov
lds
cmp
ret
lods
mov
das
or
xchg
mov
insb
test
arpl
or
ss
mov
data16
inc
add
mov
scas
dec
and
jb
xor
pop
test
jbe
out
add
jl
fstps
sbb
dec
outsb
loopne
movsl
enter
clc
mov
sti
popf
mov
add
sub
pop
jae
xor
mov
jne
adcb
fcomps
imul
pop
rclb
roll
push
cmpsl
cli
out
in
sbb
mov
pop
add
int
cld
lahf
jl
add
sbb
xor
andl
outsb
mov
mov
ja
or
push
aas
mov
fwait
or
jbe
test
test
sbb
lcall
push
mov
xchg
nop
cmpsl
mov
xchg
or
das
lock
and
sub
jno
xor
xor
push
xchg
cmp
xor
dec
push
mov
or
cmp
fdivrs
data16
jbe
xchg
ss
dec
jo
pop
push
fdivs
mov
movsb
aaa
push
sub
xor
sbb
sbb
push
mov
fildl
mov
pop
mov
xchg
sub
sbb
jno
sub
push
pop
inc
clc
jmp
sub
dec
mov
push
pop
rol
or
jge
daa
ds
mov
pop
xor
repnz
pop
mov
pop
jnp
jle
cs
dec
out
scas
cmp
dec
loopne
and
or
in
out
loopne
jno
adc
jp
lock
test
fwait
dec
mulb
pushf
std
mov
fwait
or
setbe
icebp
fwait
mov
mov
loop
mov
push
daa
xlat
jae
call
sub
jmp
mov
mov
mov
inc
fidivs
push
and
notl
out
ret
sbb
pusha
sbb
and
cmp
push
mov
inc
and
xor
shll
repz
xor
mov
xchg
sbbb
ljmp
and
add
mov
je
push
mov
xor
mov
stos
fmull
mov
decb
insb
insb
in
pop
mulb
push
je
js
or
sbb
das
cs
imul
fwait
push
add
es
xchg
mov
incb
aad
pop
ja
popa
mov
push
pop
cmp
lcall
inc
repz
popa
sbb
lods
sbb
push
mov
pusha
push
and
incl
lea
add
imul
lret
xor
cld
sbb
push
push
dec
add
mov
lret
mov
js
clc
shr
out
lcall
sbb
outsl
xchg
or
test
mov
sahf
mov
nop
movsl
imul
mov
xor
and
mov
movsl
jecxz
test
pop
movsl
cmc
rol
cmp
mov
jne
adc
adc
fsub
dec
shlb
mov
gs
jp
out
lods
push
dec
cltd
jp
push
inc
pop
dec
mov
pusha
sbb
movb
xchg
out
ret
cli
scas
stos
mov
fcomps
movsb
fldenv
clc
jno
pusha
dec
roll
in
fnstsw
cmp
pop
mov
dec
repnz
jnp
pop
ret
mov
fistpll
xchg
and
ss
mov
push
pop
jnp
sub
push
mov
inc
popa
out
cmp
pusha
gs
mov
nop
in
lods
cmp
ret
push
lea
movsb
ljmp
xchg
push
pop
out
stos
clc
std
or
dec
shlb
dec
repz
lahf
inc
sti
pop
imul
loop
les
mov
in
aam
and
ljmp
lret
or
sbb
xchg
subb
call
divb
mov
adc
dec
movsl
fs
jne
mul
addr16
shll
sahf
xor
push
add
push
push
mov
pop
jb
mov
push
xchg
call
sbb
unpckhps
jle
push
jne
sub
xchg
sbb
sbb
imul
xor
pop
lock
popf
insb
cmp
aam
xor
loopne
mov
jmp
pop
mov
fs
frstor
lock
stc
loope
pop
ret
ds
cmpl
sbb
in
or
xorb
nop
xor
scas
pop
scas
cmp
pop
adc
loope
leave
fucom
jle
mov
xlat
mov
in
jne
lret
push
lahf
dec
out
add
stos
pushf
inc
test
jae
mov
shr
call
mov
pop
idiv
and
aad
inc
bound
ficompl
test
into
lahf
add
dec
leave
rclb
lahf
push
add
xchg
cmp
rcr
or
add
imul
sub
pop
and
sbb
push
std
ds
push
dec
movsl
je
mov
orb
loope
and
pop
movsl
mov
jne
xor
scas
jge
inc
fwait
jnp
clc
movsb
push
ret
mov
mov
les
cmp
out
mov
fiadds
push
test
xor
mov
lret
out
mov
jp
lahf
mov
rcrb
nop
outsl
sbb
jns
jne
dec
cmc
xlat
cmovb
jecxz
outsl
cltd
add
cmc
jmp
outsb
arpl
and
ret
in
push
push
daa
dec
pop
pop
inc
cltd
int
cli
insb
imul
jmp
ret
push
inc
and
and
pop
or
into
inc
and
insb
jle
lret
jno
mov
inc
mov
dec
daa
sub
ljmp
dec
ss
aas
xchg
icebp
push
movsl
inc
mov
add
ret
cld
popf
bound
sarb
cmp
aad
in
push
xchg
idiv
fmull
lock
fnstenv
mov
dec
shll
call
jmp
lock
je
mov
jmp
jno
xchg
add
repz
ljmp
orb
lds
mov
je
call
xlat
fstps
jns
mov
add
cmp
dec
sti
lahf
test
pop
je
xchg
scas
mov
fs
call
pop
rorl
into
leave
xorl
repz
fldenv
jnp
icebp
icebp
and
or
ret
jmp
stc
adc
adc
shl
add
cmc
scas
sbb
sub
mov
pop
xor
int3
cmp
pop
adc
out
enter
mov
inc
push
test
cmpsl
rolb
gs
mov
ret
das
adc
sub
orl
leave
ljmp
xor
cmp
add
jmp
mov
jns
cmp
cmp
mov
inc
and
add
out
lock
mov
outsl
mov
sub
xchg
pop
push
mov
aaa
popf
adc
xor
mov
es
jecxz
add
sub
btc
cmovnp
movsl
scas
jmp
pop
idiv
cmc
mov
cmp
icebp
fdivs
ljmp
repnz
arpl
add
fcmovnb
ret
add
or
jmp
rcrl
aad
add
ja
fmull
fstpt
fcoml
cmp
out
or
pop
inc
fcmovu
mov
fisttps
inc
sub
scas
fsubr
adc
imul
xor
add
rcrb
push
incl
push
daa
cmc
incb
mov
sub
pop
add
imul
fstp
mov
leave
loope
mov
rorl
movsl
jno
and
cld
or
andl
sub
push
mov
add
xchg
rclb
lcall
in
or
ret
inc
rcl
xchg
mov
rolb
in
dec
jae
and
ror
in
lods
dec
pop
sbb
sbb
mov
fidivs
aam
push
mov
push
lret
sub
sahf
cmp
sbb
cmpsb
aad
fnstsw
testl
pop
add
aaa
lret
lds
data16
xor
push
test
push
jb
std
mov
mov
mov
jb
jmp
in
aaa
mov
xor
outsb
aaa
jb
adc
xor
cmp
pop
movsb
jge
sub
mov
mov
jns
push
aaa
cli
sarb
arpl
in
shll
sub
pusha
dec
push
aaa
addr16
pop
testl
mov
in
fs
mov
fcmove
loopne
pop
adc
xor
out
stos
sbb
mov
xor
out
inc
enter
push
enter
cwtl
out
sub
jno
push
sar
and
cmp
test
mov
cli
inc
mov
mov
divb
mov
aas
scas
cmpsl
mov
nop
lds
mov
mov
xchg
xchg
notb
inc
fisttps
scas
and
imul
push
call
lock
sbb
out
loop
push
xchg
ror
xchg
xchg
fnstcw
iret
fisubl
ficoml
jno
lock
cwtl
loopne
or
inc
jae
push
mov
scas
mov
ror
jmp
dec
iret
sbb
xchg
ret
cmp
ret
flds
mov
and
push
pushf
add
jno
loopne
xor
mov
aaa
andl
xor
mov
dec
mov
xor
cli
pop
aaa
leave
addr16
icebp
push
xor
fsubs
cld
dec
scas
jp
jno
adc
leave
cmpl
dec
cmpsl
inc
nop
mov
mov
sub
jg
and
jecxz
hlt
int
sahf
fbld
sbb
test
pop
cmc
and
mov
addr16
cli
jmp
sbb
add
adc
mov
dec
mov
data16
divl
aad
pop
push
ds
insl
or
mov
mov
sbb
divl
fists
inc
jg
fsubs
mov
and
sbb
sti
repnz
and
cmp
movsb
xchg
cwtl
pusha
das
pushf
sahf
cmc
into
mov
mov
pop
xor
out
cmp
xor
pop
dec
sbb
andb
cmp
lahf
fucomi
dec
dec
repz
mov
in
lea
mov
pop
cli
add
inc
js
and
cmc
mov
sahf
sahf
dec
inc
push
and
js
cmp
mov
inc
pop
cmc
mov
dec
shl
mov
cmc
or
push
js
in
add
std
mov
out
lahf
inc
fdiv
mov
mov
mov
loope
xchg
xorl
aas
xchg
xor
loopne
push
sbb
addr16
and
into
push
pusha
out
movsb
mov
sbb
mov
mov
mov
sub
jnp
les
add
cmp
aaa
sahf
outsb
inc
sbb
cmp
adc
aad
ss
testl
and
xor
adc
rorb
aaa
push
es
in
movsl
ret
pop
mov
in
mov
repz
ljmp
cltd
or
pop
pop
aas
stc
mov
hlt
or
and
lock
inc
ljmp
or
loope
jg
repnz
outsl
pop
enter
stos
rcr
inc
imul
scas
aas
js
pop
add
sub
mov
subl
mov
negl
push
lcall
add
push
push
roll
dec
xor
mov
test
into
in
push
push
fcmove
scas
addr16
sbb
push
incl
stos
sbb
gs
jo
imull
ljmp
jmp
pop
jl
mov
push
ret
pop
fnstenv
or
pop
cmp
in
shll
in
hlt
inc
outsl
mov
fiaddl
push
repz
pop
inc
mov
dec
xchg
outsb
mov
jae
sub
pop
test
sti
push
hlt
nop
pop
ljmp
idiv
sub
dec
fwait
pop
add
or
subl
xor
fistpll
xchg
mov
add
xchg
ljmp
pop
fistps
mov
sbb
addl
outsl
gs
sarb
jecxz
add
mov
das
nop
jae
repz
pop
imul
jge
and
stos
inc
out
add
scas
dec
xor
mov
popa
mov
int3
gs
js
test
popf
test
test
stos
test
jb
repz
das
jae
jecxz
movsb
xchg
push
xchg
cmpsb
icebp
lods
jl
inc
mov
jno
mov
fbstp
cmp
mov
push
js
or
loope
add
aas
sbb
shlb
adc
mov
jge
test
dec
pop
mov
mov
xor
push
lds
dec
push
cwtl
jle
add
enter
cld
cli
mov
dec
imul
jo
loope
jns
sahf
das
mov
movsl
movsb
mov
xchg
sub
pop
or
adc
dec
dec
cmp
hlt
icebp
loop
daa
out
jno
cltd
push
pop
or
popf
pop
aaa
movsl
xchg
sub
pop
mov
push
sub
int
cmp
call
iret
js
adc
dec
cmp
outsb
call
sub
jle
pop
xor
cmc
dec
test
out
sti
out
xor
imul
lret
sub
vmovd
or
jne
xlat
mov
mov
inc
pop
scas
mov
std
test
mov
stos
and
lock
imul
je
loop
or
cwtl
sbb
mov
incl
js
xlat
add
movsb
pop
push
push
pop
pusha
cmp
pusha
lods
mov
in
adc
es
test
dec
mov
pop
aas
push
xor
scas
fcoms
and
int
andl
sbb
mov
mov
mov
adc
cld
shll
xchg
daa
lret
push
aas
push
add
dec
sbb
or
sbb
push
mov
push
mov
das
add
pop
shrb
scas
out
es
adcl
xchg
xchg
cs
or
push
mov
fucom
mov
jecxz
daa
and
pop
scas
arpl
sbbl
frstor
pushf
push
lret
pop
sub
mov
hlt
imul
daa
hlt
les
outsl
lods
subl
in
adcb
fisubrl
add
inc
cld
loope
xchg
ljmp
lret
and
lea
mov
popa
cli
sub
lock
shll
push
sub
pushf
rolb
pop
mov
lods
cltd
mov
mov
dec
data16
adc
mov
or
js
js
cmp
pushf
mov
roll
fiadds
push
in
adc
fcmovb
cmp
adc
push
iret
imul
mov
jns
out
jne
cli
inc
xchg
push
and
xchg
outsl
mov
int
add
cltd
xchg
rcll
dec
pop
xchg
xor
and
loope
lret
mov
fiadds
dec
xor
mov
in
mov
xchg
shr
xchg
pop
call
pop
dec
cli
xchg
push
xlat
pop
aas
mov
add
repz
xchg
mov
insl
neg
mov
jne
ficomps
sbb
js
jo
or
inc
cmpsb
dec
inc
sub
ret
dec
out
mov
mov
ja
lret
pop
loope
jmp
inc
xlat
pushf
ja
scas
sub
mov
ja
int3
mov
cs
movsb
fdivrp
jmp
inc
cmp
and
ljmp
out
imul
jg
add
mov
pop
test
cld
les
movsl
out
mov
jnp
sbb
mov
test
jle
jecxz
movsl
cmpsb
jbe
push
dec
je
iret
call
adc
test
movb
test
sbb
mov
mov
test
imul
xchg
das
mov
xor
or
sti
sub
dec
pop
jl
in
popf
out
fiadds
mov
dec
pop
adc
mov
cmp
push
or
lods
add
ja
fdivrl
jecxz
jp
in
jbe
xchg
sub
dec
or
jmp
ja
and
add
or
xor
sub
or
or
stos
push
cmp
push
adc
push
push
lods
jnp
and
in
adc
cmpsb
xchg
mov
xor
in
cmp
push
fsubrs
sub
sbb
jg
stc
stos
sub
jbe
jecxz
sti
test
mov
pop
inc
ja
mov
pop
divl
fildl
cmp
jb
aam
ret
scas
imul
jb
jmp
sub
sub
adc
daa
push
and
pop
add
leave
leave
mov
ret
xchg
les
mov
sub
cmp
inc
jp
in
ljmp
lock
into
pop
xchg
inc
cmp
and
sbb
mov
cmpsl
in
addb
xor
and
xchg
rolb
or
insl
testl
inc
nop
out
lods
pop
out
rorl
test
loop
fmull
add
orb
xchg
lods
cmp
jge
fs
test
popf
dec
test
or
mov
pop
dec
movsl
in
dec
or
add
mov
xor
jo
or
sub
shlb
icebp
and
push
ficoml
and
sbb
jo
fisubl
mov
jg
outsl
je
es
pop
dec
add
scas
add
cmp
and
mov
push
mov
xchg
dec
mov
sti
xchg
push
cs
push
outsb
stc
xchg
dec
stos
aas
cmp
imul
lcall
push
out
std
mov
jecxz
rcrl
and
ljmp
xchg
add
in
lret
mov
or
aaa
push
int3
pop
jno
fs
mov
dec
vcvtdq2ps
jne
or
iret
mov
notl
or
movsl
aam
sub
dec
lcall
adc
mov
setg
adc
sub
aas
ds
test
imul
imul
mov
cmp
adc
push
push
jo
shll
js
pop
stos
sbb
ljmp
outsb
push
mov
xor
push
ror
ss
mov
adc
dec
add
sub
popa
mov
or
sub
jb
sbb
mov
andl
add
imul
orl
scas
movsb
mov
mov
jg
mov
test
mov
mov
cmp
dec
in
sbb
add
xlat
stos
mov
push
ljmp
sti
dec
int
cmpsb
sbb
sub
mov
xchg
aaa
aam
stos
call
sub
imul
jb
imul
imul
xchg
lock
cmp
pushf
rol
cli
out
cwtl
cmp
dec
pop
repz
int
mov
inc
add
in
stos
aas
fs
insb
mov
outsl
int3
lcall
xor
push
xchg
xchg
movsl
ljmp
mov
dec
push
mov
xlat
inc
adc
stos
pop
jp
je
push
imul
mov
mov
mov
mov
fsubr
add
repz
sarb
mov
sahf
xchg
add
dec
je
imul
sbb
and
cld
xchg
call
xor
add
adc
into
push
push
cld
and
scas
adc
sbb
out
sbb
pop
xchg
cmp
ret
push
loop
dec
sub
je
in
sbb
cmpl
cmp
pop
adcl
dec
scas
push
dec
mov
sahf
mov
cmp
orb
add
jp
popf
cmp
or
dec
dec
mov
std
jo
dec
cwtl
cmp
notb
xlat
icebp
xor
in
adc
popa
jnp
outsb
adc
inc
mov
nop
ljmp
roll
aam
lock
mov
loopne
add
dec
add
mov
int3
fwait
stos
cmpsb
testb
xchg
pop
scas
jno
sub
mov
xor
mov
mov
inc
mov
push
arpl
cwtl
add
ds
push
in
repz
push
imul
jge
sub
mov
cmpsl
clc
add
mov
pop
or
mov
or
pop
add
mov
test
aaa
adcl
lahf
mov
lock
mov
or
mov
popf
cltd
imul
and
ss
jecxz
mov
into
icebp
xchg
movsl
add
lods
xchg
xor
mov
push
mov
add
inc
jo
add
inc
fidivrs
jmp
pop
push
outsb
inc
push
inc
cwtl
adc
adc
or
cmp
rcrl
hlt
xor
xchg
mov
add
xchg
xor
xchg
inc
xchg
or
scas
dec
in
xchg
xchg
das
mov
test
inc
fdivrl
aad
cmp
enter
arpl
out
dec
rolb
sbb
xchg
std
test
fwait
cmp
outsl
sub
js
adc
jmp
push
mov
inc
aad
xor
ret
inc
adcb
sbbb
cld
jle
push
or
inc
in
fists
je
sub
cmp
nop
outsb
jmp
in
inc
cmc
je
inc
popf
add
xchg
push
icebp
and
mov
add
adc
mov
in
jb
xchg
or
xor
pop
mov
pushl
cmp
out
pop
and
inc
ss
sub
fisttpll
nop
xor
decb
mov
mov
mov
in
push
sub
lret
dec
hlt
insb
add
xchg
rol
jns
sbb
xor
xchg
outsb
leave
dec
inc
popf
call
sbb
ljmp
ljmp
sbb
sub
ret
pop
fdivrl
enter
pushl
stos
mov
xchg
adc
xor
mov
cmpsl
jne
jle
repz
subb
mov
and
jbe
push
fsubr
and
add
pop
testb
sarl
inc
rcl
or
lods
cmpsb
cmc
pop
ror
incb
scas
jp
loope
mov
adc
dec
jae
movsb
jae
sbb
cmpsb
jmp
mov
clc
add
xchg
scas
fs
testb
sahf
je
mov
pop
or
and
xchg
movsl
sbb
call
shrb
shll
in
dec
mov
dec
js
out
mov
push
pop
out
push
ss
jl
stc
push
pop
jmp
adcb
scas
add
repnz
cmovle
addr16
and
vmovapd
mov
data16
mov
insl
jbe
in
xor
inc
aad
sub
pop
or
xor
mov
push
mov
jmp
vcvttpd2dqx
pop
or
stc
fidivrs
dec
xchg
hlt
and
outsl
clc
jbe
ret
test
in
xchg
mov
int3
cmp
xchg
jmp
push
jge
mov
xor
push
push
dec
subb
add
dec
decb
push
cltd
call
sbb
dec
pop
jle
xchg
jnp
sbb
mov
mov
ds
pop
pop
adc
jae
cmc
gs
sbb
or
cmp
lea
xlat
pop
mov
rcll
cltd
push
lods
mov
push
enter
push
clc
test
jl
dec
lods
cld
sbbb
or
xor
xchg
and
cli
xchg
inc
push
lods
mov
cli
push
and
sbb
cmp
dec
mov
cmp
jp
pop
cmp
push
cltd
lods
lds
pop
lea
popa
xchg
adc
cli
aam
mov
in
adc
and
imul
cmp
test
dec
or
lcall
popa
fwait
and
loopne
cmp
jno
xchg
dec
lret
dec
or
mov
gs
mov
mov
push
pop
test
sub
adc
int
lret
lahf
adcb
aas
add
testb
xchg
lahf
push
test
inc
mov
in
cs
cmc
mov
in
cmp
pop
ret
daa
pop
adcb
lea
inc
jbe
add
scas
or
orl
cmp
mov
loopne
mov
mov
stc
int
add
stc
dec
rcrb
sub
pop
nop
cli
adc
repz
jo
adc
lahf
jbe
into
jae
clc
insl
aad
jnp
cmc
dec
jmp
cld
mov
repz
mov
or
mov
call
xchg
lea
outsb
loop
sbb
int
ljmp
dec
adc
xchg
fmulp
jg
add
xchg
divb
or
sub
add
mov
push
inc
adc
std
popf
add
adcl
in
xor
or
movq
jns
pop
sub
sub
jne
addl
loop
inc
popf
cmp
inc
inc
xlat
cmpsb
pop
add
mov
and
test
sub
or
mov
dec
lret
jg
mov
cltd
pop
mov
aam
or
inc
sahf
jbe
mov
in
int
sbbb
lcall
inc
dec
insb
xor
sahf
icebp
and
add
ret
jmp
shrb
cmp
enter
push
xor
sbb
mov
cmp
das
fst
faddl
aaa
add
or
push
insb
xor
adc
inc
push
repnz
inc
flds
xor
call
jmp
ljmp
push
inc
sbb
xchg
xchg
adcl
je
into
ljmp
in
call
repz
loop
adc
jno
sub
xor
push
movsl
xchg
pop
call
inc
mov
stos
pop
add
jl
leave
or
icebp
cmc
es
insl
rol
sahf
mov
push
daa
add
das
cmp
outsb
lahf
lods
sub
stos
out
inc
add
cmpsl
fisttps
push
pushf
cs
in
subl
xor
incl
lret
inc
cli
add
jno
ds
dec
cli
pop
enter
pushf
mov
subl
mov
add
imul
ret
cmc
stc
dec
jo
sbb
mov
or
test
ss
sti
repz
push
mov
rclb
rclb
ss
lock
or
je
and
pusha
popf
imul
imul
jl
insl
out
add
jp
push
jno
xorb
stos
dec
mov
inc
push
cmc
or
push
sub
mov
mov
scas
mov
sub
push
es
mov
pop
stos
fisubs
inc
inc
mov
ret
adc
cmp
pushf
data16
lods
fnstcw
jns
out
xor
aad
pusha
fidivrs
cld
push
mov
xchg
adc
dec
xchg
push
mov
rcll
outsb
adc
push
mov
inc
inc
in
je
and
mov
push
jle
lret
sbb
notb
xor
pop
dec
push
shr
dec
push
or
mov
in
and
aam
mov
sub
pop
xor
pop
cltd
fisttps
xchg
roll
xor
push
xchg
mov
jbe
or
das
ss
adc
dec
fwait
jl
xor
mov
xor
pop
ja
adc
jbe
pop
mov
add
mov
jbe
iret
lcall
jp
rclb
inc
push
jle
lahf
enter
mov
adc
jns
sub
mov
and
cmp
mov
ss
pop
pop
sub
in
loope
test
mov
inc
mul
clc
repnz
sub
mov
cmp
jne
aad
push
dec
flds
insl
into
mov
mov
es
adc
mov
adc
mov
shrb
and
or
jl
aaa
es
inc
xchg
fmuls
xchg
movb
jnp
and
rol
push
or
into
cwtl
mov
jle
fidivrl
jnp
mov
add
sbb
sbb
aas
sahf
jg
ror
jge
int3
mov
jns
and
out
pop
lds
mov
sbb
xchg
jmp
push
and
push
je
jne
aam
ret
xor
scas
imul
jb
xor
scas
push
cmp
scas
xor
daa
adc
push
and
sub
inc
cs
mov
enter
test
icebp
xchg
ss
mov
cmp
sbbl
pop
orl
mov
jnp
mov
sub
jo
aam
jecxz
scas
push
inc
xor
scas
mov
cli
adc
inc
dec
push
or
inc
inc
mov
mov
or
mov
movsb
pop
mov
into
insb
mov
xor
sarb
push
mov
and
cmp
bound
mov
jno
push
jne
push
jl
into
mov
jl
mov
sbb
pop
test
or
ss
jmp
or
pop
insl
fisttpll
jg
lea
into
rorl
xor
and
sub
cmp
adc
popf
pop
or
outsb
lcall
outsb
mov
add
lahf
mov
js
mov
pop
xlat
inc
pop
repnz
mov
push
and
xor
mov
test
stos
jnp
je
orl
mov
cmp
xchg
jb
mov
dec
add
xchg
cmp
sbb
push
lahf
imul
mov
fwait
bound
inc
push
fiaddl
xchg
test
xor
push
push
inc
or
adc
loope
and
addr16
mov
mov
clc
jnp
ret
and
cs
pop
xor
cmpsb
loop
outsb
pop
mov
bound
inc
xor
push
sub
fs
lcall
sahf
ret
lret
iret
mov
pop
sbb
push
jns
scas
je
sbb
pop
nop
mov
xchg
es
xor
lds
js
add
xor
sbb
or
in
mov
ffree
mov
and
sub
sub
inc
dec
push
fwait
inc
mov
push
xchg
into
aam
sbb
in
pop
out
push
popa
mov
sbbb
dec
push
dec
adc
fistpll
adc
mov
andb
inc
pop
jae
rclb
mov
mov
adc
push
pusha
iret
and
fiadds
hlt
fs
mov
stos
lahf
ljmp
jbe
sub
outsb
mov
or
fstps
adc
mov
add
pushf
pop
out
ret
lds
cli
nop
das
test
dec
pushf
mov
and
ds
aaa
scas
cld
dec
sub
div
ret
sub
xlat
inc
fmuls
push
pop
inc
outsl
out
dec
add
mov
stos
pop
fcmove
loopne
mov
cmp
cld
test
jbe
xor
test
adc
out
mov
mov
ret
jp
add
mov
mov
jnp
xchg
sbbl
lea
xchg
mov
aas
repnz
dec
iret
test
jmp
mov
xor
sbbl
jp
aam
enter
sar
or
inc
dec
in
mov
xchg
sbb
adc
adc
inc
mov
dec
jb
sub
jns
loop
pop
hlt
and
sbb
mov
xlat
imul
es
ret
out
insb
imul
ss
xchg
inc
mov
and
and
std
inc
nopl
sub
jnp
enter
rorl
icebp
jb
pop
cmpsb
popf
and
xchg
popa
inc
data16
push
loop
cmc
sub
arpl
rorb
lret
andl
int
push
ret
add
into
push
js
ds
js
mov
daa
call
sbb
inc
pop
add
bound
scas
mov
ds
cli
outsl
ret
and
mov
cs
fmuls
mov
ret
push
mov
dec
cmp
pushf
mov
bswap
pop
fidivl
clc
mov
cmc
sbb
inc
testl
in
pop
sub
xchg
add
insl
jge
cwtl
pusha
mov
add
jne
es
int
les
xchg
movsb
mov
mov
push
leave
int
stc
push
add
push
inc
xorl
mov
cmp
rorl
mov
dec
xchg
xchg
ja
mov
jb
cltd
and
scas
jl
and
aam
sub
sub
adc
pusha
xchg
fnsave
mov
xor
std
ret
mov
sub
jnp
or
push
pop
addr16
sub
jecxz
ja
sbb
fsubr
push
mov
mov
mov
dec
sbb
cli
loop
add
fidivrl
mov
cmc
shll
pusha
iret
add
and
dec
dec
adc
inc
out
inc
sahf
inc
int3
out
mov
xor
pop
xlat
scas
sti
imul
test
jae
mov
mov
jle
hlt
adc
jmp
imul
push
jo
add
xor
out
lret
adc
iret
push
cmp
and
test
mov
imul
push
add
add
addb
test
and
mov
in
loopne
movsb
and
adc
dec
enter
cmc
or
mov
lock
lods
enter
push
lea
lret
mov
sbb
mov
cli
xchg
mov
call
xchg
or
pusha
sbb
jno
lret
cmp
in
jbe
add
cmp
xor
mov
jl
das
lock
inc
js
dec
test
dec
orb
dec
sub
jo
mov
add
ljmp
cld
push
sbb
cltd
rcll
bound
mov
push
or
into
packssdw
into
ret
mov
ret
pop
xor
sarb
testl
adc
push
addr16
stc
fnstenv
sub
jmp
rclb
mov
cmpsl
lea
bound
aaa
jbe
arpl
fmull
in
and
sbb
add
dec
mov
f2xm1
cmp
js
inc
xor
xchg
leave
lret
cltd
or
xchg
cmc
mov
fcompl
push
fwait
push
test
sbbl
cmp
inc
push
adc
movsl
dec
ds
inc
pushf
mov
mov
add
cmpsl
mov
push
lcall
push
imul
pop
sahf
inc
jnp
icebp
pop
mov
imul
cmp
imul
inc
bound
dec
loope
fsubrs
data16
in
and
mov
repnz
add
je
xor
sahf
lret
add
aad
cmp
fstpl
test
imul
and
sub
jns
test
sub
xor
mov
cmpsl
sub
sbb
mov
inc
mov
sbb
pop
sti
inc
cld
dec
push
mov
dec
push
pop
cli
fs
bound
dec
jmp
sub
adcl
out
popa
les
js
test
mov
pop
jmp
shrb
dec
sbb
and
sbb
movsl
jp
pop
pop
and
cmp
push
mov
rorl
mov
and
in
mov
mov
mov
inc
mov
xchg
pop
hlt
sbb
adc
dec
sub
xchg
loope
jle
call
add
imul
xorl
ljmp
out
lods
push
pop
inc
jmp
add
scas
and
daa
inc
push
popf
sbb
push
sub
and
cmp
and
pop
dec
xlat
ja
repnz
sbb
out
mov
ficoms
mov
adc
sub
sbb
addl
push
sbb
jbe
and
mov
xor
xor
or
popa
xor
cmp
daa
lods
fimuls
sub
gs
ret
lret
inc
pcmpeqd
sub
scas
and
mov
xchg
ret
jns
ror
mov
cltd
leave
fildll
inc
mov
jg
push
setb
cltd
cmpsb
adc
imul
pop
mov
mov
xor
sbb
mov
or
rorl
and
and
pop
insl
sbb
mov
or
pop
out
mov
cld
push
sbb
sarb
push
dec
xchg
xchg
test
pop
mov
movsb
fisttpll
clc
stos
shlb
push
les
ret
lret
jmp
lds
fistpl
lret
pop
cmc
push
fildl
sub
jmp
mov
imul
push
xlat
push
imul
in
xor
push
and
and
fsub
jo
cmp
bound
sub
out
sub
dec
inc
rcrb
fs
push
mov
push
inc
and
fldenv
dec
stos
lcall
sbb
mov
jge
mov
jle
mov
test
fiadds
xchg
mov
sbb
enter
xchg
sbb
rolb
jle
push
push
cmp
add
add
hlt
push
cmp
sbb
xchg
mov
test
adc
or
jno
in
cmp
push
push
dec
or
mov
popa
push
or
jo
out
mov
in
sub
hlt
cmpsl
lcall
lret
cmpsb
je
mov
mov
jge
scas
pop
xchg
jp
dec
add
std
mov
xchg
xor
mov
and
xor
mov
xchg
mov
add
sub
add
pop
orl
mov
mov
mov
cmovae
jecxz
insb
add
add
stc
jns
xor
test
insb
and
aaa
adc
pop
and
push
xchg
movsb
test
push
lcall
inc
les
or
jl
push
and
test
sbb
les
jp
cmp
insl
and
cmp
mov
lock
mov
xchg
flds
pop
sub
mov
add
out
inc
inc
cli
mov
repnz
or
pop
lock
stc
lea
popf
add
push
div
inc
pop
mov
pop
stos
mov
shll
enter
pop
out
xchg
and
dec
xor
iret
cmp
adc
mov
aas
mov
mov
cwtl
and
pop
clc
cli
dec
sbb
adc
push
xchg
cld
sub
movsl
or
negl
pop
add
push
inc
in
out
movsl
xor
dec
pop
stos
enter
jae
ret
scas
test
or
imul
inc
pop
sub
dec
out
je
sub
in
aam
rcrb
scas
test
aad
jne
shlb
inc
push
popl
loop
adc
arpl
cmp
roll
inc
xor
mov
dec
cs
push
loop
adc
pop
push
movsl
lea
mov
dec
push
mov
cs
sub
jae
gs
outsl
aaa
inc
xor
out
leave
rep
bound
inc
in
mov
xchg
dec
mov
shrb
cmpsb
mov
fisttpll
cli
add
imul
lock
adc
sub
xchg
test
in
sbb
adc
xor
mov
iret
dec
dec
bound
movsb
ljmp
mov
pop
sbb
out
std
lret
jb
xor
pop
mov
push
mov
mov
xchg
inc
clc
dec
lahf
mov
mov
add
mov
lods
call
xor
inc
std
ja
ret
pop
hlt
xchg
sub
inc
pop
push
mov
mov
mov
sbb
jge
xchg
pop
test
aam
pop
loop
jg
ss
pop
or
adc
add
jne
es
andb
mov
notw
lret
xchg
pop
test
mov
stos
inc
mov
sub
sar
sub
in
repnz
add
xor
scas
jo
bound
jge
or
dec
push
in
sbb
outsb
inc
push
psubd
icebp
roll
stos
add
ljmp
faddl
xor
cmpsb
test
icebp
test
mov
pushf
pop
jecxz
mov
fnstenv
and
add
or
out
pusha
dec
adc
inc
cmpsl
lahf
into
and
add
lcall
enter
fidivrs
and
fprem1
inc
xchg
mov
push
pop
inc
subb
fsubrs
cmpsb
fs
rsm
cwtl
jnp
add
inc
jo
and
inc
xor
or
in
sbb
mov
ret
jg
outsl
cmpsb
or
pop
mov
and
seto
dec
lds
fs
xlat
pop
ss
or
add
fildl
shrb
loop
and
dec
jge
xchg
or
test
mov
test
js
or
mov
xchg
xchg
cli
ret
mov
fs
xlat
fildll
jbe
imul
push
push
cmp
sub
push
cmp
inc
mov
fs
dec
sarb
xchg
mov
sahf
mov
gs
lret
inc
in
add
mov
add
bound
mov
scas
mov
push
aad
or
jnp
mov
mov
mov
icebp
push
lret
bound
inc
mov
rcrl
push
inc
mov
mov
mov
loopne
testb
rclb
popa
loope
pop
jl
and
out
shlb
xorl
lea
arpl
push
add
mov
dec
jb
shrl
cltd
dec
mov
ds
dec
das
push
jbe
fstps
in
rolb
pop
pop
cwtl
int
jae
mov
or
inc
enter
sbb
inc
imul
ret
mov
das
orb
icebp
test
sub
outsl
push
jne
aas
fwait
ss
sub
aaa
adc
mov
ds
inc
cmp
gs
int3
sbb
into
jmp
lret
jne
lock
pusha
and
add
syscall
pop
push
mov
adc
aas
mov
dec
cmc
insl
rcrl
and
lock
rcl
fdivrs
or
and
test
in
sub
push
cli
xor
inc
or
bound
jo
pushf
cs
lret
push
xor
jns
pop
test
jl
ret
call
mov
sub
iret
sar
std
inc
cmp
mov
pop
sbb
mov
out
cmp
jae
loope
dec
fdivr
adc
inc
cwtl
ja
ret
cmp
xchg
test
lods
mov
fisubrl
mov
adc
rolb
out
sbb
and
lcall
mov
pushf
lea
cmp
jbe
movsl
sub
imulb
int
mov
mov
cld
push
in
pop
add
mov
aas
add
push
pop
xor
cmp
addr16
dec
xchg
fdivrs
mov
or
adc
test
into
mov
imul
mov
fcoml
scas
repz
lods
insb
test
rolb
push
and
out
mov
call
pop
push
jle
fcomps
mov
mov
popa
stos
test
dec
ss
mov
fidivrs
loope
jle
lds
pop
fistpl
arpl
pushl
mov
xchg
inc
cli
pop
call
cld
test
orl
pop
sub
inc
cmpsb
adc
imul
pop
stc
idiv
mov
call
in
lock
test
aaa
loope
lea
pop
mull
lahf
inc
lcall
push
mov
insl
test
and
test
cmpsb
pop
sbb
xorl
fwait
cmp
arpl
pop
push
mov
xor
xor
push
jne
and
ret
push
sbb
sbb
cmp
fimuls
mov
outsl
sub
push
mov
xchg
insl
and
xor
sub
xor
in
fisubl
test
cmp
pop
inc
rolb
jp
push
mov
inc
cmp
dec
xchg
push
cmp
aam
pop
lcall
popl
mov
lods
pusha
stos
or
iret
adc
push
out
inc
je
test
repnz
pushf
push
pop
stos
lcall
or
sbb
repnz
jo
loop
aam
xchg
adc
stos
in
pop
ja
cwtl
cltd
clc
cmp
or
sbb
mov
sub
jecxz
ljmp
mov
testl
jge
sbb
in
std
xchg
push
add
adc
outsb
imul
fisttps
mov
adc
push
xchg
in
fsubrp
addr16
mov
inc
mov
cltd
roll
lea
aam
sub
lds
leave
lret
mov
inc
push
imul
scas
jmp
repz
mov
inc
daa
shlb
jge
inc
and
lahf
fdivs
in
inc
adc
out
cld
outsl
and
popl
add
int3
sub
dec
insl
lds
es
inc
rclb
sub
repnz
in
loop
fcmovnb
push
ljmp
cmp
aam
mov
js
in
xchg
aas
mov
movsb
repnz
call
push
cmc
add
mov
xor
jno
or
or
jno
adc
adc
sti
mov
pusha
scas
sbb
xor
xor
inc
xor
mov
loop
andb
cmp
mov
lret
and
adc
fneni(8087
add
aaa
cmc
movb
jecxz
jl
ljmp
mov
fnsave
xchg
lea
jle
rclb
repnz
xchg
push
sbb
clc
ja
mov
xor
in
or
in
js
cltd
and
stc
ja
gs
insb
js
xorl
insl
lods
sbb
mov
sbb
jae
daa
push
pushf
aad
aad
movsl
std
xchg
mov
inc
pusha
pop
cmp
call
imul
pop
push
dec
inc
push
inc
lds
inc
inc
test
test
or
iret
lahf
dec
out
cmc
cmp
outsb
jbe
mov
insl
dec
xchg
jno
or
sub
test
lret
cmc
inc
out
lret
adc
jno
cmp
sub
or
cmp
pop
and
xchg
fcomip
cmp
mov
add
fninit
push
push
dec
or
xchg
psubsb
mov
iret
lock
out
push
lock
dec
pusha
push
leave
cmpsl
in
in
in
fs
stc
enter
sub
pop
cmp
inc
imul
scas
mov
mov
fwait
mov
inc
daa
mov
sbb
xchg
jb
out
aam
inc
and
mov
stc
enter
inc
aaa
mov
cmp
call
cmc
xorb
out
pop
cmp
xor
cld
stc
mov
sub
jg
ficoms
roll
stc
mov
jg
test
jae
insl
dec
or
pop
ficoml
cmp
cmp
clc
shlb
pop
sbb
mov
fs
aaa
inc
test
mov
jns
and
cs
mov
insl
js
cli
aam
jnp
out
and
pop
cltd
shl
pop
sbb
popf
mov
psraw
inc
sbb
push
fimull
repnz
into
and
dec
imul
dec
rclb
inc
inc
cltd
mov
in
stos
ret
sbb
movsl
scas
cmp
lahf
push
repz
ds
mov
das
test
arpl
out
xlat
out
ret
outsl
xchg
out
outsl
jp
daa
and
push
enter
add
pop
mov
fsubrl
or
ret
sbb
movsl
dec
dec
sahf
sub
jnp
cmp
mov
test
push
popf
mov
test
cli
push
sub
jl
jb
cltd
mov
loopne
pop
in
xchg
aaa
ja
popf
repz
add
cmp
adc
or
sub
adc
insl
fucom
filds
add
ror
ret
ret
push
test
pop
mov
add
pop
cmp
and
push
stos
aaa
fs
add
add
and
aaa
lcall
mov
arpl
test
shrb
push
add
inc
jge
mov
dec
sbbb
idivl
imul
in
aas
lock
lahf
pop
out
mov
xor
xchg
or
mov
pop
cltd
mov
in
pushf
push
int3
jl
bound
in
push
push
cltd
jp
mov
and
or
outsb
jp
jne
lret
xchg
scas
fwait
jne
push
pop
adc
cmp
sbb
adc
sub
ret
lahf
cmp
ret
stos
sub
test
outsb
jmp
add
sub
pmulhw
inc
dec
pop
loope
cmp
push
xor
gs
ds
jno
iret
push
icebp
mov
push
sbb
add
mov
cmp
and
fistps
std
orb
lret
or
lods
cmpsl
sbb
cwtl
push
fxch
dec
mov
dec
or
sbb
adc
bnd
imul
sbb
enter
push
gs
add
push
out
into
mov
dec
push
pop
imul
xor
lret
xor
mov
sbb
testl
cli
mov
out
jnp
mov
int3
sbb
fstl
inc
xchg
pop
cmp
xor
fnstenv
rorb
cmp
mov
xchg
inc
int3
pop
mov
idivl
test
out
jp
sahf
rcl
mov
and
jmp
sarl
addr16
dec
sbb
and
inc
fstpl
xchg
add
out
fdivs
push
sub
scas
daa
int
fldl
enter
fxch
jp
xor
pop
cli
loope
xor
cmpsl
mov
fwait
subl
fcompl
push
rcl
scas
add
aam
push
sar
mov
loope
push
push
int
cld
jg
fmul
add
mov
mov
push
jns
inc
pop
lods
jb
out
mov
mov
cmc
in
lds
in
cmpsl
pop
mov
test
xlat
in
inc
rcr
jg
or
xchg
mov
cld
sbb
fldcw
sub
test
test
shr
xorl
pop
cmp
rcr
add
pusha
imul
icebp
in
sbb
xchg
sbb
aaa
popf
lods
in
insb
cmp
pop
dec
or
mov
inc
mov
scas
mov
jnp
mov
pusha
mov
decl
ret
inc
lcall
ljmp
mov
fstpt
nop
or
inc
mov
adcl
xor
pop
pop
push
push
dec
sub
sub
sbb
jge
shlb
out
dec
push
jp
and
out
test
int
loopne
adc
aad
jg
xchg
int3
and
ror
push
fs
repz
outsb
xorb
sbb
jb
sbb
inc
js
outsl
femms
test
sti
adc
mov
sbb
js
fcmove
pop
js
sbb
cmp
inc
cs
scas
mov
inc
or
xchg
jb
jo
jecxz
sub
test
dec
aas
test
mov
xchg
jne
loopne
mov
int3
jbe
in
jno
sub
mov
add
sbb
sbb
dec
cmp
pop
aad
std
adc
in
sbb
ret
addb
aas
aas
inc
hlt
cltd
pop
mov
mov
adc
sahf
mov
bound
orb
adc
pop
leave
scas
cld
shl
xchg
cmp
cs
out
ftst
pushf
mov
xchg
inc
lods
sbb
stc
lret
lcall
enter
cltd
cmpsb
rclb
jns
sbb
repnz
dec
mov
lcall
mov
pop
int
flds
and
test
sahf
add
std
xor
das
lcall
cmp
addb
jecxz
data16
test
in
dec
mov
push
in
mov
cwtl
cltd
pop
dec
test
out
stc
xchg
mov
mov
adc
dec
test
sbb
jecxz
pop
sbb
cmpsb
jp
lock
push
jle
outsb
sarl
mov
iret
xchg
jp
gs
push
adcl
sbb
push
rorb
sbb
dec
out
xchg
outsb
or
outsb
in
imul
mov
mov
popa
xchg
incl
in
sbb
inc
idivb
or
dec
sbb
out
inc
pop
in
jb
push
push
or
cld
pop
fistps
inc
fbstp
or
stc
and
or
test
ljmp
or
ss
pop
xchg
sbb
cmp
xorb
add
fistpl
lret
add
jns
in
cmpsb
and
xchg
leave
lea
inc
ss
push
arpl
addr16
dec
cwtl
insb
push
ret
jae
idivb
andb
in
int
aad
xlat
movsb
mov
lret
cmp
mov
mov
les
popf
cmp
sbb
and
lods
mov
scas
std
sub
out
jmp
stos
pop
sbb
fmull
out
out
xchg
mov
cltd
jmp
movsb
orb
jns
push
shl
xor
lea
xlat
push
ret
es
push
dec
sbb
addb
enter
sub
inc
ss
repnz
sub
push
mov
lcall
add
outsb
cmp
rcrl
mov
pop
pop
sbb
mov
xor
lcall
add
scas
je
or
jbe
stos
movsl
sub
aad
repz
fnstcw
sub
out
inc
pop
jle
sbb
iret
xor
repz
jne
sub
adc
fndisi(8087
test
sbb
dec
sbb
lea
aaa
sub
mov
fdiv
jns
push
in
or
mov
dec
out
movsl
mov
lret
pop
sbb
dec
in
cwtl
and
jne
iret
imul
loop
ret
int
mov
outsb
sub
lea
jae
pop
repnz
xchg
icebp
add
mov
push
cmp
add
add
add
adcl
push
mov
pop
add
dec
xor
sbb
cmp
cmp
cmp
pop
stos
aad
mov
pop
mov
ljmp
add
test
sub
add
sahf
xchg
out
out
mov
mov
fisubl
jp
xchg
mov
mov
outsb
nop
mov
arpl
mov
outsl
movsb
fsubs
movsl
dec
test
xchg
daa
sahf
adc
jmp
add
test
in
fbstp
mov
out
xchg
mov
mov
aas
js
addr16
outsl
adcb
stos
add
mov
je
inc
inc
mov
jp
inc
sbb
xchg
adc
mov
fistpl
out
insb
adc
cmp
loopne
mov
incb
jge
lcall
lret
test
pushf
stos
loop
adc
pop
push
fucom
jae
clc
cwtl
in
arpl
inc
mov
lds
andb
loop
mov
movsb
cmp
cmp
push
bnd
and
rcl
aad
fbstp
cltd
shll
mov
ljmp
js
mov
or
and
mov
stc
dec
jl
lock
xor
jmp
stos
notb
leave
mov
repz
add
out
sbbb
mov
sbbl
mov
sbb
cwtl
out
nop
dec
loopne
inc
mov
scas
inc
sbb
loop
lds
cmp
xchg
std
inc
in
lret
and
dec
xor
dec
and
pop
shrl
in
and
subb
repnz
xlat
mov
xchg
fsubrp
push
push
das
out
imul
movsb
adc
dec
inc
lret
pushf
add
push
pop
pop
lods
xlat
les
cli
mov
repz
lahf
push
pop
add
push
add
rclb
jmp
cltd
pop
cmpsl
mov
fmull
jae
stc
ds
test
mov
test
fwait
pop
cmpb
out
movsl
add
push
testl
lcall
addb
out
lods
xchg
mov
mov
pop
ret
jae
popa
test
cs
test
jg
jbe
call
sub
jmp
xchg
std
pop
jo
stos
jbe
fnstcw
sbb
sub
jmp
testb
push
cwtl
ss
insb
xchg
mov
aad
outsl
lods
aas
mov
sub
dec
mov
movsl
enter
jbe
pop
ficoml
iret
lret
mov
ja
and
popf
in
je
loopne
outsl
mov
jne
mov
insb
or
push
and
xor
dec
cmp
pop
shlb
pop
mov
adc
cmp
call
sub
ficomps
dec
xor
test
scas
ljmpw
aas
bound
mov
push
lock
pushf
mov
hlt
in
sbb
int3
jl
icebp
leave
popf
ja
mov
push
test
gs
stc
enter
inc
mov
sub
push
adc
arpl
pop
or
mov
out
daa
xchg
pop
pop
sub
stos
jle
sbb
adc
pop
cmp
inc
data16
xchg
sub
xor
test
dec
sbb
or
insb
push
xor
icebp
and
mov
in
cld
jb
out
cmpsl
cmp
stos
pushf
fists
aam
shrb
inc
lcall
dec
push
aas
outsb
mov
adc
dec
xchg
push
sbb
adc
adc
xchg
movsb
loop
jmp
inc
sbb
mov
inc
xchg
test
stc
mov
jle
push
xlat
xor
cmp
push
jbe
insb
adc
pop
xor
mov
push
in
js
jbe
push
pop
mov
jno
xlat
or
ja
fistpll
pop
andb
inc
out
ja
shll
lea
neg
sbb
mov
mov
ja
mov
add
movsb
cli
adc
inc
js
xor
push
sbb
jae
inc
xchg
jl
arpl
std
pop
mov
xor
inc
cli
mov
push
sub
clc
sbb
push
cmpsl
jns
dec
xor
sbb
test
jp
dec
stos
and
ss
sbb
imul
mov
aaa
clc
jno
mov
or
inc
cmp
fldenv
mov
sub
mov
data16
jge
xchg
orl
adc
stc
push
mov
lahf
filds
or
inc
jno
insb
hlt
pushf
cmp
xchg
jmp
and
out
jp
aas
cmpsl
xor
sub
xchg
inc
add
or
mov
jmp
sar
movsb
aaa
fisttpl
loopne
cmp
inc
mov
hlt
adc
into
lods
pop
shl
mov
cmp
jbe
popf
pusha
movsl
lods
lret
mov
pop
lcall
stos
adc
cmp
rcll
in
sar
mov
std
fidivrl
inc
mov
adc
pop
pop
test
mov
lahf
add
outsb
adc
insl
xor
mov
mov
push
sbb
sbb
xchg
mov
shlb
jae
jge
sbb
xor
xor
shlb
stc
andl
pop
xchg
push
mov
popf
stc
sub
cli
cmp
mov
test
jae
mov
pop
fstp
fcomp
sub
lret
movsb
add
pop
movsb
fs
pop
enter
fs
imul
mov
jns
add
bound
fdivl
ret
or
movsb
sbb
dec
dec
notl
dec
lret
jo
add
mov
inc
imul
lock
inc
dec
addr16
xchg
or
push
int3
imul
popf
mov
rorb
mov
mov
ret
dec
sub
ficompl
std
repz
and
adc
es
mov
repz
js
mov
jns
imul
call
lods
dec
call
pop
test
sbb
xor
xorl
and
xchg
xchg
jg
xor
sti
xchg
ljmp
pop
mov
xchg
out
test
jne
mov
dec
mov
and
arpl
repz
data16
mov
popa
push
gs
pop
dec
rcrl
mov
out
adc
pop
push
push
ret
push
aaa
push
and
push
jmp
das
mov
jae
push
popf
movsl
movb
out
mov
leave
dec
andl
lret
movsl
mov
lods
in
push
ss
jnp
test
xchg
add
sbb
loop
in
add
jl
xchg
int3
popa
add
nop
repz
or
popa
sbb
sbb
xchg
test
lret
addr16
sbb
adc
out
lcall
xchg
xchg
adc
xorl
inc
popf
xor
mov
jo
stos
sub
xor
inc
adc
mov
push
inc
icebp
shr
and
mov
movsb
lcall
inc
scas
ds
push
cwtl
jo
addr16
jns
and
dec
sbb
dec
cmp
mov
leave
mov
or
insl
bsr
aaa
sbb
fsubrl
dec
clc
mov
out
sti
xor
ds
es
push
test
std
and
mov
xor
mov
jne
xchg
and
into
fs
pop
pop
mov
lret
or
ja
mov
xchg
mov
inc
jge
cmp
mulb
adc
sub
lds
or
jp
inc
repz
movsb
and
mov
sbb
out
push
negl
enter
lcall
fbld
insb
mov
dec
push
lea
enter
aad
test
sbb
cld
les
out
sub
cmp
rcrb
ja
mov
xor
imul
mov
ljmp
scas
cmp
push
mov
fdiv
inc
mov
and
insl
sub
push
cmp
outsl
inc
inc
xchg
roll
je
loopne
mov
pusha
mov
xchg
sub
push
pop
popaw
test
std
das
xor
xchg
dec
pusha
cwtl
in
push
out
negb
sub
push
push
scas
cmp
fidivs
lret
out
outsl
movaps
push
pusha
movsb
fcmove
adc
xchg
push
jle
pushf
adc
sbb
pop
xchg
add
sub
mov
dec
dec
cmp
cmpsl
xchg
or
insb
fmuls
test
std
pop
inc
lods
cltd
repnz
cmp
int3
cltd
mov
stos
mov
add
mov
inc
cmp
outsb
aam
jns
dec
or
cmp
mov
scas
jecxz
dec
pop
push
sub
fld
xchg
and
pop
mov
cmpsb
data16
cli
iret
and
cld
mov
out
push
fpatan
pushaw
sahf
sbb
test
push
ret
add
test
jecxz
stc
adc
pop
es
popf
stos
inc
lahf
lods
adcb
es
out
or
fcmovb
fbld
lods
mov
sbb
dec
pop
mov
test
or
pop
cmp
fcomp
xchg
scas
in
shrb
xor
cmp
rcr
xchg
mov
mov
ja
xor
inc
daa
fisttpll
shrb
cltd
xor
ror
loopne
loop
les
push
test
pop
pop
ds
push
push
test
cwtl
movsl
cwtl
fwait
dec
sbb
lds
inc
outsb
push
pop
mov
popl
insb
leave
pop
push
sahf
adc
sbb
pop
sldt
mov
cld
dec
mov
cmp
fsubr
cmp
jns
in
popf
les
sti
inc
mov
and
xor
fsin
adc
leave
dec
sub
add
jo
addb
mov
add
cmpsb
jp
clc
pop
enter
add
add
addb
int
mov
jl
ljmp
aam
out
xchg
insl
movsl
push
in
pushf
inc
dec
mov
sahf
or
shrb
pop
fldcw
jecxz
les
xor
int
repnz
lea
fbstp
mov
cmp
and
adc
xor
cmp
cltd
fucomp
test
sahf
aam
mov
inc
xor
jl
in
pop
je
sub
out
dec
inc
push
dec
add
stc
ret
loope
aas
jae
inc
and
hlt
cmp
outsl
repz
out
push
inc
stos
pop
fs
les
into
mov
data16
push
xor
scas
fistpll
xchg
jb
add
sti
push
in
repz
out
repz
es
pop
push
mov
ret
mov
inc
jp
cmp
mov
bound
in
mov
das
fstps
pushf
aad
pop
in
movsl
insb
mov
sub
iret
not
sbb
cmc
jns
xchg
mov
inc
jns
and
int
test
out
popa
adc
insb
push
sahf
and
mov
orl
ss
inc
dec
addl
outsl
jnp
and
out
out
lret
push
shl
push
or
sub
mov
cltd
loope
mov
popa
aad
insl
scas
jle
push
loop
mov
test
sbb
add
xorl
scas
jne
loop
fdivp
sub
mov
or
sub
cld
mov
push
dec
mov
clc
mov
dec
xor
es
mov
ds
mov
dec
jp
repnz
arpl
xor
jo
or
mov
add
xchg
test
bound
mov
xor
not
gs
in
lods
xor
pop
jp
xchg
ja
jo
sbb
roll
pop
into
pop
sti
fmul
mov
rolb
pusha
xchg
mov
lcall
lret
and
in
movb
and
cltd
repnz
out
push
loop
enter
cld
les
jae
inc
jne
out
lea
call
cwtl
push
push
jno
fisubl
mov
ljmp
cmp
sbb
lods
sbb
call
call
mov
xor
mov
add
fsubl
in
and
jo
push
push
stc
mov
jno
fstpt
test
dec
daa
shlb
mov
outsb
mov
xchg
mov
mov
push
rorb
stos
fstpl
sub
push
and
aaa
dec
xor
mov
hlt
lds
cmp
in
push
push
outsl
xchg
gs
mov
dec
repz
mov
sarl
pop
repnz
sub
xchg
pop
movsl
aad
repz
xor
test
xor
mov
xorb
sub
popf
mov
fistpl
pop
cmp
stos
jbe
mov
push
outsb
mov
fistps
jmp
inc
test
lcall
into
int3
pop
xchg
inc
cmpsb
xchg
mov
sahf
cltd
xor
loope
add
lahf
fstps
cmp
xchg
test
fdivrs
adc
fistps
ss
mov
fldenv
jecxz
and
stos
jge
lea
sbb
in
call
not
fwait
adc
pop
rorl
inc
jnp
xchg
adc
in
push
jle
push
lret
mov
add
and
out
mov
adc
mov
or
movsb
subb
sub
leave
cmpsb
jecxz
loope
jl
mov
jne
das
xchg
xchg
jge
xor
xlat
xchg
data16
imul
xor
cmp
push
xor
fsubrs
iret
mov
nop
xchg
sbb
xchg
shr
mov
xlat
xchg
test
mov
lods
adc
sbb
cs
push
push
sbb
testb
hlt
int
mov
je
dec
inc
mov
mov
std
mov
stos
inc
push
lock
gs
fs
leave
pop
sbb
jp
cmp
test
sbb
outsb
int
mov
mov
cs
mov
sahf
lcall
dec
test
add
rcll
in
inc
push
mov
fsubl
sbb
or
mov
arpl
rcl
repz
int
cmp
adc
add
stos
pop
insl
pop
sub
mov
outsl
mov
sub
fldl
das
pop
jg
push
pop
xor
popa
mov
cmp
loopne
inc
sbb
jns
or
xor
or
mov
leave
int
push
push
push
std
jne
ret
sbb
and
lods
rcr
decl
push
das
adc
ffree
stos
popa
cli
mov
mov
fiadds
inc
shrb
inc
mov
sbb
out
xchg
xchg
push
jns
mov
jl
insb
and
jno
lret
xchg
orw
xor
dec
cmc
mov
es
loop
jbe
jb
fsubs
mov
mov
das
orb
sub
push
mov
jl
popa
enter
arpl
adc
cld
fs
xor
outsl
outsl
stos
das
and
xchg
cmpsl
fbld
in
gs
clc
sahf
icebp
pop
ret
jle
ret
movsb
mov
dec
dec
cwtl
adc
jp
mov
outsl
mov
push
fistpl
pop
push
mov
dec
mov
adc
push
test
dec
cs
xor
push
push
outsl
xlat
cmp
lcall
fwait
pop
dec
in
push
xor
stos
mov
push
mov
mov
jle
lahf
inc
into
cmpsb
xchg
je
pop
popa
les
dec
mov
mov
pushf
jmp
push
clc
scas
adc
and
scas
sub
pop
sysret
mov
push
sub
pop
out
std
std
das
mov
dec
test
mov
pop
jmp
push
aaa
push
dec
push
out
pusha
or
mov
sbb
sti
pop
pop
mov
out
shll
mov
jle
xchg
pinsrw
xchg
and
std
adc
add
jb
jnp
sub
push
jo
bound
lcall
inc
jg
mov
jbe
lret
jo
jle
cmpsl
sub
lods
in
in
lret
stc
inc
inc
pop
aad
mov
imul
pop
dec
adcl
and
add
out
mov
je
adc
aam
push
push
sbb
shl
jle
cs
mov
mov
arpl
dec
adc
pushf
das
es
ficomps
mov
shll
in
out
push
icebp
and
sti
or
fcompl
inc
cmp
and
dec
lock
mov
xchg
jbe
int
add
or
and
push
cmp
add
aam
popa
sbbl
dec
push
cmpsb
pop
xchg
xchg
cli
lds
je
loopne
push
sub
test
adc
mov
data16
jg
mov
mov
add
das
push
aaa
imul
out
andl
mov
aad
mov
lds
pusha
push
cld
or
int3
or
dec
into
or
xor
stos
ljmp
inc
mov
addl
xor
movsl
repnz
dec
lea
adc
in
jb
pop
adc
sub
push
mov
and
popf
sbb
mov
jecxz
add
xchg
psraw
sub
mull
out
bound
mov
pushf
into
xchg
outsl
aad
stos
pop
icebp
xchg
add
movl
loopne
mov
stos
call
pop
xchg
mov
add
int
push
sahf
or
mov
pop
sub
sbb
adc
popf
andb
lret
xlat
cmp
dec
pop
test
push
mov
push
mov
cmp
clc
pop
mov
xor
lods
sub
scas
mov
push
stos
cmp
test
stc
jae
js
outsl
dec
andl
push
insl
pushf
call
popa
xlat
pusha
dec
push
mov
mov
adc
pop
fisttpl
and
hlt
adc
jge
fisttpll
mov
pop
out
cmp
jl
push
sub
shrb
scas
rcrl
aaa
jmp
aaa
addr16
aam
and
sbb
adc
inc
insb
mov
xor
imul
sub
scas
dec
xchg
add
pop
andl
push
adc
xchg
mov
inc
sbb
test
jmp
and
inc
fs
cwtl
repz
dec
sarl
test
add
sbb
xchg
lahf
fiadds
js
sub
cmp
stos
ret
inc
cmp
sub
sarb
mov
test
lcall
repnz
xchg
pop
rolb
call
inc
xchg
mov
les
out
data16
pop
popa
inc
dec
sbb
xchg
lea
int3
imul
jo
add
pop
test
clc
mov
decl
shlb
inc
shl
inc
enter
pop
xor
ja
xchg
xchg
jnp
mov
leave
mov
cwtl
inc
popa
adc
pop
aad
inc
stos
mov
stos
sub
adc
adc
ja
sbb
popf
repz
out
mov
das
leave
mov
subb
ror
das
pop
jno
push
or
shlb
iret
jbe
pop
add
sub
sti
pop
mov
fstl
pop
ljmp
jns
xchg
stc
std
nop
aas
cmpsb
push
mov
mov
sbb
add
lret
test
sub
or
fildl
dec
mov
scas
cmp
xchg
mov
popf
adc
xor
mov
lds
xchg
mov
ja
sbb
loopne
lcall
jmp
das
pop
pop
sarb
or
mov
xchg
dec
adc
pop
lahf
ss
or
inc
jae
xlat
jnp
jo
ficompl
scas
loop
xchg
movl
pop
loopne
inc
add
aad
or
lock
mov
xchg
inc
or
cmp
insl
scas
scas
sub
sti
add
shlb
aam
pop
loope
dec
daa
cmp
bound
pop
or
test
repz
inc
mov
inc
js
repnz
cld
lret
fstps
xor
clc
cmp
adc
xor
pop
adc
out
xchg
or
xor
xor
add
cli
movsl
xor
mov
je
addb
shll
das
lahf
mov
inc
cwtl
js
pop
inc
pcmpgtw
bound
xchg
sar
cld
es
lods
mov
ss
push
xchg
mov
call
jl
jg
jmp
mov
mov
xchg
shll
scas
and
jmp
mov
out
pop
out
je
int
rcll
add
mov
arpl
lods
daa
mov
rorb
xor
popa
inc
push
xchg
add
repz
insl
scas
dec
loope
ljmp
cmp
testl
into
or
inc
xchg
in
loope
fs
lds
imul
and
pop
push
subb
lahf
out
pusha
out
push
inc
iret
xor
adc
dec
rorl
repnz
loopne
dec
inc
cmp
or
arpl
and
xor
pop
pop
hlt
cs
les
movsb
inc
mov
clc
fnstenv
push
jns
rcll
fimull
xor
sbb
fwait
or
mov
pop
fidivs
add
or
inc
lds
es
pop
testb
scas
sbb
ret
scas
adc
mov
jge
leave
enter
dec
lahf
out
cmp
addr16
add
scas
paddusw
inc
clc
sub
cmpsl
jmp
in
jbe
add
jb
shll
dec
mov
inc
fsubs
xchg
jnp
cmp
test
xor
add
mov
shlb
and
loopne
mov
sub
enter
les
jmp
mov
es
xchg
inc
cmp
xchg
adc
mov
scas
sub
rol
fwait
jp
out
pop
int3
cmp
jne
cli
sub
jp
scas
and
bndstx
xchg
mov
enter
aaa
aam
outsl
fbstp
mov
xchg
leave
jmp
inc
sbb
cmp
ret
and
pop
in
mov
add
lock
iret
nop
in
ljmp
mov
push
and
cmpl
mov
out
dec
jo
push
popf
push
shll
icebp
les
xchg
cmp
fisttps
bound
mov
sub
ljmp
aaa
in
mov
ret
xor
dec
lret
fnstcw
push
push
xchg
dec
mov
push
out
cwtl
xchg
int3
in
sub
notl
out
imul
push
test
lock
nop
push
xchg
xor
push
pusha
add
push
sahf
push
das
pop
into
mov
lcall
add
mov
mov
cltd
cmp
xchg
sbb
jno
fisubrl
push
pop
and
dec
pop
arpl
cli
loopne,pn
test
mov
push
mov
mov
dec
push
jno
out
mov
jl
pop
push
dec
push
mov
adc
fcoml
ljmp
scas
sub
pop
fdivrs
pop
xchg
icebp
xchg
lret
xchg
push
push
push
sub
xor
dec
mov
int
test
std
jecxz
sbb
mov
push
daa
insl
gs
mov
inc
mov
mov
popf
int
jl
add
or
inc
and
imul
jecxz
push
or
pop
icebp
aas
lds
xchg
imul
cltd
into
inc
push
out
jno
in
and
sbbb
fs
inc
test
adc
inc
jge
rcrb
lahf
sub
imul
incb
pop
lock
int3
mov
jns
fs
test
iret
jg
adc
das
dec
push
inc
gs
pop
xor
push
mov
cli
stos
or
flds
or
or
test
and
jo
mov
mov
jb
lock
lea
in
xchg
addr16
lods
push
cmp
jle
mov
cmp
fwait
dec
cmp
gs
scas
cmp
cld
jnp
mov
adc
mov
add
int
popf
cld
testb
fcompl
hlt
mov
dec
sahf
out
jne
fwait
shr
gs
and
mov
push
push
sbb
inc
in
test
or
xchg
mov
movsl
ret
test
mov
xchg
gs
sbb
mov
push
cmc
gs
or
jmp
data16
mov
js
pop
pop
jle
pop
hlt
pusha
cltd
shl
cltd
pop
sub
enter
cmp
sub
pop
dec
in
fnstsw
mov
lcall
stc
xchg
outsl
dec
and
push
clc
pop
les
testl
xchg
bound
in
sbb
xor
fs
adc
lret
lahf
cmp
lods
add
dec
jns
pop
std
fwait
addl
pop
inc
clc
xchg
jmp
dec
mov
xor
push
punpcklwd
inc
inc
add
dec
xchg
xlat
loopne
inc
popl
out
or
mov
pop
in
iret
aad
or
in
rolb
cli
add
in
and
sbb
xchg
aas
stos
jmp
aam
lock
out
add
mov
mov
push
dec
lret
incb
inc
mov
and
sub
add
adc
pop
xor
repnz
std
xchg
xchg
fmull
dec
mov
sbb
cwtl
cs
movsb
mov
scas
fldcw
dec
xchg
mov
int3
repnz
push
cmp
call
push
push
xor
loop
pop
push
insb
add
inc
sub
or
stos
insl
movsb
ret
cmc
ds
cmp
xchg
icebp
xor
jnp
and
test
ret
notb
push
pop
xchg
sub
icebp
movsl
mov
ret
in
pop
fisttpl
cmc
inc
mov
xor
shrl
inc
inc
movsl
pop
int3
fdivs
ret
leave
jg
fnstenv
add
fdivrs
scas
les
xchg
mov
mov
test
inc
xchg
mov
jp
inc
call
push
cmpsb
sub
push
gs
out
fstl
mov
test
daa
pop
jecxz
pop
leave
out
rolb
jecxz
mov
fstps
dec
out
stos
xchg
pop
in
add
lahf
cld
mov
and
adc
cmp
dec
or
arpl
pop
ds
loope
pop
lods
lcall
es
mov
cmp
jp
aas
mov
popa
sub
xor
mov
mov
jno
jmp
inc
movsl
mov
sub
pusha
lock
and
dec
sarb
nop
sti
sti
out
sub
sarl
movsb
aad
in
or
and
test
scas
inc
sbb
iret
int3
cmpsb
lea
in
or
sub
outsl
inc
mov
nop
in
sbb
sarl
scas
imul
lea
lds
cmpsl
imul
xchg
sarb
add
pop
jbe
stc
sub
add
test
into
rolb
sub
pushf
and
loop
ds
push
loopne
enter
push
fisubl
shll
in
sub
es
test
sub
mov
in
jge
sbb
or
and
or
add
sub
jl
xor
call
stc
daa
inc
call
inc
mov
sahf
addl
imull
lock
imul
cmp
jmp
jbe
jbe
jp
add
in
dec
adc
xchg
jmp
aaa
fiadds
pop
add
test
push
test
je
pop
mov
pushf
sub
clc
sub
sti
aaa
or
pushf
or
sub
add
fcmovnbe
adc
ja
xchg
jno
inc
popf
nop
pop
jg
ret
movl
adc
scas
sbb
mov
sbb
cmp
or
cmp
les
mov
in
or
jno
icebp
xchg
dec
bndstx
std
xchg
or
push
xor
xchg
test
jl
or
jae
fimuls
leave
mov
add
mov
mov
adc
insb
mov
mov
sub
cmp
mov
xchg
ds
movb
outsl
and
xchg
mov
stos
mov
lcall
loop
push
mov
sub
clc
and
xchg
int3
pusha
pop
add
pop
int
sbb
mov
lds
out
pop
xchg
and
shrl
sub
pop
out
mov
jecxz
repz
xchg
xlat
iret
jge
add
add
add
jbe
rorl
jg
mov
mov
jmp
insl
push
mov
jo
mov
neg
mov
sbb
andl
adc
out
cmp
sbb
pop
and
add
cmp
subl
lods
stos
sbb
mov
xlat
sbb
push
mov
mov
ret
add
mov
es
out
push
xchg
mov
lret
adc
mov
mov
push
test
adc
and
movsb
add
neg
sub
nop
popa
rcll
inc
fs
sbb
das
jle
mov
dec
out
pop
push
stos
stc
call
dec
add
inc
jno
popa
push
rcrl
stos
mov
fildll
mov
xor
fistl
cmp
cmp
cmp
push
mov
jns
pop
xchg
addb
out
outsl
daa
lods
lods
notl
test
pop
inc
adc
add
push
and
xor
sbb
mov
push
loopne
add
mov
dec
cld
cmp
insl
jbe
push
xlat
push
inc
inc
xlat
push
leave
xchg
sbb
sub
test
lret
les
mov
notl
xchg
dec
xchg
xor
jnp
popa
xor
and
jecxz
mov
or
ret
stos
or
xchg
inc
test
mov
repnz
cltd
std
arpl
les
out
add
fsubs
bound
fs
push
add
dec
inc
shll
popa
jns
jmp
lret
mov
jns
jno
call
pcmpgtb
adc
pop
xor
mov
adc
pop
inc
cmp
aad
and
and
adc
mov
orl
cli
cmp
xor
add
cwtl
popa
mov
xchg
out
adc
fadd
rcll
xchg
dec
fiaddl
ficoms
xchg
xor
jmp
and
sti
cmp
sbb
scas
jmp
cwtl
cmp
incb
aam
inc
cmp
mov
stc
pop
popf
rcl
ficoml
dec
aam
out
lods
sbb
mov
xchg
pop
sbb
pop
lcall
xchg
cli
mov
pop
push
jb
mov
ret
xor
jmp
mov
fs
inc
mov
mov
test
add
popa
cmp
fwait
push
mov
ret
or
mov
lds
inc
test
jl
push
dec
jge
lcall
dec
fistpl
cltd
push
dec
movsl
or
fs
andb
test
mov
shll
sub
push
jecxz
ret
jnp
lods
xchg
arpl
fwait
mov
pop
cmp
cmp
xchg
sbb
aaa
inc
inc
mov
pusha
xor
inc
xchg
sub
clc
fidivrl
xor
sahf
add
lret
inc
push
lret
jl
mov
xor
les
movsl
push
in
inc
pop
jecxz
dec
xor
mov
sbbl
cli
add
sub
leave
adc
add
rolb
out
aam
cwtl
adc
xchg
test
je
sbb
jecxz
pop
lret
xchg
inc
out
fimull
out
push
cs
mov
and
aaa
dec
cmpsb
dec
icebp
xor
xchg
lahf
mov
mov
mov
test
mov
sbb
xlat
inc
jnp
mov
lods
mov
and
jne
jo
shlb
lret
fstpl
and
fdivs
dec
jno
cltd
jl
mov
ret
int3
sub
or
fists
test
sarb
enter
add
aam
add
les
sbb
js
jns
jno
xor
mov
mov
add
es
dec
divb
lret
lock
andl
fsubrs
sub
scas
cmp
test
adc
les
rcl
shlb
lahf
xchg
mov
jne
je
sub
cli
cmpsb
mov
and
lahf
lds
pop
cmp
rcll
aas
clc
pusha
pushf
or
dec
ss
pop
adc
mov
mov
adc
mov
sub
outsb
lahf
outsl
dec
cld
jo
sub
sbb
dec
mov
movsl
fcompl
repnz
xor
sub
push
mov
popa
flds
decb
mov
xor
movsl
pop
push
out
sub
jne
pusha
pop
movsb
xchg
push
icebp
or
dec
or
dec
mov
add
out
pop
add
sbb
adc
sbbl
sti
and
mov
mov
adc
or
mov
aaa
clc
adc
shll
repz
inc
jbe
gs
mov
cs
add
mov
enter
push
xchg
lock
clc
ret
xor
into
push
hlt
cmpsl
data16
out
subb
mov
sbb
xor
bound
mulps
cli
mov
xchg
rorb
xchg
xchg
rorb
jnp
jl
sbb
fbld
jbe
jae
push
dec
lea
pop
repnz
das
xchg
pusha
call
mov
and
test
dec
imul
daa
fidivrs
sbb
jecxz
scas
daa
pusha
sub
jl
and
jno
jbe
mov
cwtl
or
jns
fists
mov
in
andb
dec
add
data16
xchg
icebp
mov
ss
or
ret
dec
lods
movsl
adc
lcall
cwtl
inc
mov
mulb
mov
gs
jmp
push
scas
xchg
or
adc
mov
test
jge
push
repz
mov
dec
cmp
ret
jne
or
setns
aaa
push
push
mov
test
int
add
imul
or
imul
subb
iret
repz
xor
arpl
ret
xchg
cmp
push
ret
jmp
cmp
mov
arpl
sub
xchg
cmp
pusha
cwtl
pushf
out
mov
adcb
mov
xchg
or
mov
stos
xor
hlt
out
sub
cld
jb
sub
fidivrl
jle
and
sub
test
leave
add
or
cmp
xchg
sbb
mov
jp
repz
cmpsb
and
jo
data16
xor
call
mov
scas
imul
stos
inc
cmp
jg
push
test
das
xchg
pop
jne
out
int3
cwtl
lock
out
xor
inc
or
lret
jge
or
inc
push
inc
cmpsb
lds
into
aam
cmp
push
daa
lret
call
pusha
pusha
jl
xchg
dec
adc
mov
scas
scas
ja
fnsave
jle
icebp
shrb
cmpsb
in
inc
aaa
cmc
arpl
xchg
enter
add
push
movsb
dec
cmp
sbb
pop
or
rorb
stc
mov
stos
push
xor
push
jge
lock
addb
test
mov
or
lahf
rcl
inc
das
cltd
push
xchg
enter
enter
js
sbb
cltd
incl
adc
adc
int3
xor
fnsave
pop
imul
aaa
adc
lahf
popa
fiadds
sub
push
repnz
mov
repnz
jecxz
mov
dec
lcall
hlt
mov
fstpt
fldz
clc
dec
ret
fs
fbstp
adc
cmp
aad
mov
jmp
jp
dec
dec
fisubrl
pop
cmpsl
cmp
aad
test
cmpsb
out
fsubl
shrb
ja
jge
adc
jg
sbb
leave
out
inc
aaa
lea
lock
mov
mov
fnstenv
jle
dec
adc
sbb
inc
rolb
fiadds
sbb
push
push
jp
pusha
pusha
lret
scas
xchg
in
adc
insl
aad
sbbb
and
sub
xchg
in
add
add
dec
inc
int
repnz
dec
pop
push
pushf
idivb
movsl
inc
adc
xchg
inc
mov
inc
mov
out
pop
jne
xchg
outsl
add
addl
adc
sbb
adc
daa
mov
pusha
clc
jno
add
call
sahf
call
jb
lds
jmp
jmp
testl
xlat
cmpsb
stos
lret
pusha
add
js
test
lock
xor
lahf
pop
xchg
inc
in
das
cwtl
adc
lret
jae
pop
lcall
cmpsb
xchg
mov
xchg
pop
mulb
fcomps
sbb
or
jp
jge
jne
cmp
fs
mov
fmull
stos
push
adc
sub
sub
addl
jb
adc
das
popf
adc
pop
les
xor
mov
shrb
stos
sbb
fdivrl
push
iret
inc
sub
cltd
sub
call
sbb
dec
rcll
clc
push
adcb
push
inc
imul
lcall
es
stos
jl
pop
outsb
out
xchg
fwait
stos
jg
lock
ret
adc
sahf
mov
dec
xchg
or
sarb
jb
xchg
enter
mov
pop
dec
dec
push
inc
mov
lock
push
mov
sarl
ficompl
xchg
and
add
fnsave
sub
sbb
mov
arpl
push
dec
out
repz
inc
pop
jle
jne
mov
mov
lea
shll
inc
xchg
clc
inc
xor
adc
adc
enter
daa
sbb
idivl
pop
jmp
pop
mov
int
adc
cmp
add
mov
mov
jnp
adc
mov
cwtl
adc
jns
cmp
mov
lcall
pop
adc
decb
dec
push
and
and
daa
mov
jnp
test
lods
and
cmpl
inc
pextrw
sbb
mov
iret
lods
cmpsb
ljmp
fistps
daa
add
arpl
out
jnp
or
lret
pop
out
mov
dec
mov
dec
jl
pop
les
in
setl
ljmp
xor
sub
jo
jnp
stc
scas
fmull
lods
int3
leave
pop
xor
cltd
mov
loopne
outsl
mov
test
outsb
inc
xchg
int3
subps
pop
rcrb
mov
out
into
xchg
add
push
cwtl
xchg
add
mov
mov
pop
cmpb
lea
push
movsl
xchg
mov
inc
xor
cmp
mov
lahf
ljmp
test
pusha
imul
into
cmp
cltd
loopne
jne
push
sahf
cmp
call
add
divl
jp
ret
addr16
jae
adc
xchg
flds
daa
movsb
shlb
adc
popf
daa
or
mov
or
sub
cmp
pop
add
test
xlat
mov
pop
sub
aad
pop
outsl
std
filds
insb
mov
cltd
test
arpl
jae
cs
cmpsl
xor
adc
nop
iret
leave
xchg
add
leave
sbb
dec
inc
inc
sub
sbb
aaa
xchg
out
aaa
ja
int
icebp
lods
jbe
xchg
sub
dec
push
xchg
ret
xor
sub
insb
pop
pop
jmp
fstpl
adc
rcll
sbb
jl
jp
insb
les
movsb
lock
cmpsl
rcll
push
outsb
push
aas
jbe
mov
mov
fsts
cmp
mov
arpl
jmp
push
lock
movb
arpl
lock
out
sahf
cmp
ror
mov
lcall
adc
ret
xchg
jg
fwait
nop
jbe
cmp
test
inc
inc
sbb
pop
and
xchg
loope
jp
xchg
aas
in
cmc
cmpsb
jle
imul
jle
sub
adc
dec
mov
nop
and
cmpsl
sub
insl
outsl
mov
pop
xchg
dec
cmp
subl
adcl
call
rolb
pop
mov
bound
xorb
adc
xchg
pop
test
pop
sub
sub
add
call
xchg
repz
addr16
in
ljmp
pop
ss
adc
push
sbb
jb
xlat
bound
stos
lcall
stc
fwait
mov
xchg
mov
test
sbb
es
into
loop
sub
dec
jmp
insb
sbb
add
push
jb
leave
adc
dec
stc
push
inc
es
ja
sbb
cmpsl
mov
pop
add
inc
out
data16
fisubl
mov
lds
mov
inc
add
xchg
add
xchg
inc
mov
outsl
cmp
cli
or
sbb
fiadds
and
push
add
das
push
out
sbb
or
cwtl
sbb
mov
sbb
sub
out
mov
xor
push
jg
add
sbb
iret
fidivl
rorb
ds
js
sbb
jno
add
nop
mov
pop
push
fcmovbe
nop
fidivrl
mov
sub
lods
nop
sub
adc
inc
jge
shl
xchg
xchg
adc
pop
and
cld
xor
pop
scas
xor
mov
inc
insb
jbe
inc
and
stc
out
or
cmc
pop
push
add
icebp
shrb
pop
outsl
pop
and
popa
sbb
push
leave
dec
imul
iret
sub
das
sbb
sbb
adc
jg
popf
mov
pop
sbb
ret
dec
add
lods
leave
iret
mov
movsb
inc
scas
mov
sarb
sub
inc
xor
and
sub
mov
scas
cmpsb
adc
add
mov
mov
repz
popa
dec
adc
add
pop
inc
sub
cmp
in
mov
jg
and
xchg
push
jmp
dec
jns
and
add
inc
mov
pop
add
ds
xlat
jecxz
daa
mov
testl
xlat
inc
sbb
lods
sub
ret
jbe
arpl
scas
pop
add
ljmp
add
out
adc
cmpsl
ljmp
lea
shrb
test
mov
hlt
adc
data16
push
sub
inc
lahf
pcmpeqw
nop
cs
push
dec
and
movsb
jne
ret
add
mov
imul
mov
sbb
inc
out
inc
jb
mov
movsl
lock
ret
loopne
xor
stc
clc
cmp
cmpsl
cs
loopne
sub
fnstcw
ror
ret
jo
xor
adcb
ja
popf
pushf
mov
mov
test
bound
shll
and
out
mov
dec
iret
jnp
sahf
jo
into
std
mov
push
xor
mov
in
add
xchg
adc
sbb
cwtl
loopne
clc
xor
mov
fisttpll
arpl
mov
lods
or
sarb
enter
adc
mov
xchg
in
gs
add
loop
cmp
ljmp
loope
int
dec
bound
pop
repnz
call
cmp
cli
test
das
push
sahf
cmc
repz
aas
rcr
and
mov
push
adc
push
and
dec
add
jae
and
push
cmp
cmp
fistpl
or
push
inc
and
insb
push
and
fucomi
mov
mov
fstpl
out
mov
mov
adc
add
push
mov
ss
jp
and
pop
add
pop
adc
rcrb
dec
inc
jge
or
fstpt
or
or
and
test
mov
ss
or
mov
lret
aas
mov
pop
xor
fwait
fs
fucomi
sbb
push
hlt
int
cli
dec
fisubs
jae
xchg
jmp
push
fucomi
fwait
cltd
ret
add
mov
sbb
mov
addps
pop
mov
cmp
pop
xchg
add
stos
leave
dec
mov
inc
jle
inc
ss
repnz
stos
pop
dec
popf
cmp
nop
fdivrs
sbb
add
pop
xchg
ja
adc
adc
xchg
call
push
in
enter
push
test
add
ds
outsb
inc
lds
loope
cmp
dec
push
xor
adc
adc
fnstsw
loop
icebp
mov
sub
addr16
mov
mov
push
sub
fnstcw
push
add
les
xor
mov
ljmp
test
or
iret
pop
jmp
fwait
aam
orl
mov
icebp
sbb
mov
xchg
mov
outsl
shll
mov
or
js
daa
mov
sti
mov
rolb
arpl
test
outsb
popf
mov
cmpsl
or
in
fmul
out
ja
in
mov
sbb
mov
arpl
xchg
xchg
loopne
ret
negb
xor
jnp
arpl
test
out
je
mov
dec
mov
xchg
je
cmp
movsb
lret
push
mov
push
ret
or
inc
pop
outsl
cmp
fdivp
mov
insb
push
push
add
fisubs
shrl
push
insb
pusha
adc
call
mov
sub
add
pop
outsb
nop
and
or
cmovp
stc
push
mov
sbb
sub
cmp
dec
lcall
dec
inc
mov
aad
inc
orl
mov
mov
lods
ds
cwtl
jnp
das
stos
dec
pop
adc
hlt
mov
ja
xor
lods
sarl
mov
and
fimull
lahf
fisubs
sub
and
dec
sub
mov
lock
xor
push
mov
push
xchg
pop
sbb
sbbb
nop
jb
movsl
mov
add
and
mov
leavew
fildll
push
lods
xor
sub
xor
call
adc
jnp
lcall
adc
cmp
aam
mov
clc
and
icebp
mov
and
pop
push
mov
pop
ret
fstpl
stc
fwait
xchg
test
jo
je
mov
inc
andb
mov
test
loope
shlb
dec
ja
sub
push
xchg
cmp
dec
rclb
fidivrs
or
xchg
or
call
mov
adc
cld
push
and
test
inc
sbb
call
fstpl
in
add
inc
pusha
shlb
dec
sub
call
pop
movsl
in
lods
jge
sbb
ficoms
loopne
rcr
stc
std
adcb
call
hlt
push
mulb
sti
pushf
push
xlat
out
popa
fucom
es
add
xor
fdivrl
push
and
jl
xchg
iret
gs
addr16
sbb
aaa
test
out
insb
ja
in
stos
mov
dec
scas
adcl
xchg
lods
test
jg
subb
test
pusha
negb
add
iret
xchg
cmp
and
into
dec
loop
adc
xor
cli
xor
sub
sub
xor
dec
popa
mul
add
cmpsl
scas
aam
adc
xchg
or
addr16
lock
mov
stos
aad
addb
out
sbb
faddl
add
sub
shrd
shlb
pop
popf
addr16
mov
xchg
cmpsl
dec
fcomip
popf
cmp
cld
js
and
push
jge
push
jl
push
push
cmp
jecxz
adc
imul
fbld
repnz
inc
stc
out
inc
sbb
sub
shrb
iret
and
xlat
pop
pop
cmc
rorb
sbbb
rcr
or
pop
add
push
mov
inc
imul
adc
push
jno
bound
adc
add
inc
in
inc
push
imul
lea
mov
mov
cmpsl
dec
xchg
mov
fcomps
xor
mov
addl
xor
leavew
ret
push
test
nop
bound
inc
leave
push
ds
testl
xlat
or
xor
sub
push
testl
pusha
pop
sbb
xor
dec
lods
aaa
cmp
mov
push
cwtl
and
dec
and
mov
aas
dec
and
nop
stc
or
andl
test
mov
dec
adcb
mov
sub
mov
xor
divl
ja
and
add
jp
mov
inc
dec
hlt
enter
sbb
fidivl
test
movsb
jo
pop
shll
ds
cs
data16
sbb
cmc
adc
pushf
xor
adc
cmp
cmp
inc
nop
inc
dec
shrb
push
push
push
jle
or
cmp
dec
mov
and
jecxz
or
daa
movsb
fcmovnb
inc
add
cmp
lods
fs
mov
mov
sub
int3
xchg
pop
jecxz
inc
mov
jle
jg
sarl
mov
mov
cmpsb
movsb
shlb
sbb
push
cld
int3
push
js
fisubl
nop
mov
inc
pop
outsb
js
dec
sahf
int3
and
aad
jle
xor
push
fcomps
std
movsl
fcoml
in
fisubs
pop
cld
mov
loopne
jbe
clc
aam
xchg
cmp
dec
popa
bound
xchg
mov
xor
pop
inc
iret
lret
jae
out
xchg
push
jo
mov
xchg
outsl
leave
adc
add
sbb
int3
jg
jns
decl
mov
cltd
sbb
pop
mov
sbb
adc
sub
cmpsl
lcall
pusha
cs
mov
adc
sub
es
adc
or
imul
xchg
add
push
scas
jb
jns
lea
pop
jecxz
fisttps
popf
mov
xchg
sbb
jge
popa
out
mov
and
mov
mov
lds
add
cmp
and
xchg
loopne
aas
sub
mov
pop
pop
fstps
cmpsl
jmp
stc
xor
testb
movsb
aad
push
pushl
jmp
xchg
inc
inc
loop
pop
test
scas
adc
mov
xor
sbb
inc
jbe
push
insb
xchg
frstor
enter
int
xchg
xchg
in
divl
xchg
pop
inc
and
xor
sub
adcl
mov
xchg
mov
xor
pushf
cmp
outsl
popf
mov
js
sbb
icebp
icebp
adcb
arpl
test
push
cmp
mov
in
mov
lds
push
inc
adcl
les
mov
add
add
mov
and
repz
mov
sbb
lods
push
adc
ja
adc
pop
inc
out
pop
inc
or
insl
pop
cmpsl
add
lcall
cmpl
pop
sti
add
sub
and
pop
push
fs
je
sti
cmpsl
mov
jle
sub
and
insl
shrb
enter
xor
xor
add
test
inc
adc
lock
push
out
outsl
je
pop
stos
pop
inc
jnp
mov
fsubl
mov
stc
cmp
cmp
imul
je
les
out
mov
push
xchg
popa
dec
add
sub
xchg
les
mov
fsts
addr16
add
test
xor
jge
int3
push
in
out
mov
cmp
fucom
pop
cli
sbb
leave
icebp
fistl
mov
jno
lret
rolb
xchg
sub
dec
adc
push
lahf
add
cmp
mov
movsb
mov
movsb
mov
lods
stos
pop
aaa
dec
icebp
mov
xor
sbb
jmp
in
hlt
dec
or
sti
repnz
pop
inc
pop
shlb
cmpsb
push
es
into
cmp
leave
in
adc
xlat
insb
push
int3
out
add
cs
enter
pop
lcall
lcall
add
jg
jbe
mov
fcmove
xor
add
outsb
cmp
cmp
test
push
pop
push
scas
inc
xchg
add
fucomip
dec
hlt
lea
mov
xchg
adc
push
mov
cltd
scas
outsb
jmp
xorl
inc
stc
or
mov
xor
je
jae
pop
ficoms
cmp
push
stos
ljmp
loop
sub
dec
mov
mov
jbe
addl
xchg
in
inc
ds
addl
cwtl
mov
and
mov
mov
in
pop
fbstp
popa
mov
in
pop
xlat
int
push
inc
and
sti
mov
fs
cs
popa
aam
and
imull
das
scas
clc
hlt
test
push
fdivrl
cwtl
jo
std
xchg
roll
cmp
mov
pop
iret
mov
push
jecxz
pop
pop
ret
addr16
ret
addr16
mov
inc
pop
push
and
dec
mov
mov
lds
add
sub
pop
lods
mov
seta
stos
add
pushl
and
insb
ret
imulb
cmp
sahf
out
data16
test
jmp
xchg
shlb
lret
gs
dec
imul
pop
lods
repz
shrl
icebp
nop
xchg
pop
mov
jae
nop
fldl
push
push
push
add
stos
xchg
rclb
idiv
pop
ficompl
xchg
push
mov
iret
cltd
cmp
ds
nop
push
xchg
sti
stos
ret
inc
mov
sub
jl
pop
lahf
sub
mov
in
pop
lahf
andl
scas
inc
jl
popf
push
and
cmp
andnps
rcrl
xchg
xchg
mov
aam
add
jg
nop
cld
or
mov
sbb
pop
adc
sti
loop
mov
sbb
mov
cwtl
test
test
jnp
xor
loope
xchg
xorb
sub
repz
mov
cmp
js
cs
int
incl
pop
lods
sbbl
mov
xchg
fcmovbe
dec
mov
and
fs
mov
stos
loop
sarb
adc
pop
and
xchg
add
cld
xor
mov
jl
sub
adc
inc
add
popf
sti
add
stos
pusha
mov
mov
mov
sub
sahf
repnz
negl
inc
or
lret
in
dec
call
and
mov
mov
pop
sbb
lcall
aaa
add
stos
add
dec
in
inc
fwait
push
shll
daa
pop
mov
clc
rorb
pop
call
mov
mov
jmp
lahf
nop
lds
mov
imul
lret
fsubl
push
push
addr16
decl
push
mov
and
add
nop
dec
dec
inc
dec
test
andb
popa
sub
std
jge
dec
xchg
aam
sbb
inc
repnz
mov
adc
scas
notb
sti
adc
cmp
fildll
mov
hlt
xchg
stc
dec
ljmp
scas
sub
cmp
jp
dec
bound
pop
je
jecxz
popa
mov
loope
addl
or
add
push
xor
sub
sub
dec
jecxz
lods
push
mov
mov
and
lret
flds
jne
and
xchg
hlt
sbb
and
faddl
dec
dec
mov
and
pop
leave
jp
inc
adc
mov
sub
int3
push
xchg
subl
adc
sub
add
hlt
hlt
sub
mov
lods
push
aad
pshufw
jne
jno
dec
sub
insl
lcall
jmp
std
sbb
outsb
popa
out
mov
mov
push
xchg
lods
push
imul
sub
pop
jbe
nop
pop
leave
inc
sahf
ljmp
dec
jg
bsf
sbb
scas
fistpl
imul
jae
adc
dec
sbbl
das
scas
jnp
push
mov
icebp
xchg
xchg
or
xchg
add
imulb
insl
ds
into
jno
movsl
sub
pop
jne
jae
push
popa
sbb
xor
xchg
mov
test
add
push
xor
mov
movsl
cld
adc
xchg
inc
loop
ss
imul
scas
adc
inc
sbb
push
fwait
mov
sub
sub
xlat
fsts
mov
inc
test
fdivrl
fisttpll
xor
mov
pop
mov
fldlg2
bound
sbb
sahf
call
adc
fdivl
bound
pushf
adc
fmull
nop
inc
adc
xchg
lret
jl
pushf
mov
dec
sub
push
jb
jb
jnp
push
ja
and
loop
adc
add
iret
insb
or
jae
movsl
pusha
jo
inc
push
mov
rcl
mov
cmpsl
incb
and
in
dec
hlt
mov
int3
or
movsw
decl
and
fldl
xchg
pushf
mov
hlt
scas
popf
mov
imul
hlt
lods
xchg
ss
je
aam
test
addr16
mov
xor
cmp
fs
inc
inc
int3
cmpb
mov
out
ret
les
es
ret
subb
test
mov
add
mov
push
loop
in
ss
cld
mov
fs
cwtl
xchg
mov
jle
test
xchg
neg
inc
push
lret
fcoms
shll
imul
es
xor
jb
xchg
xor
cmp
cmp
fcmovu
push
fldenv
adc
popa
mov
xchg
fldcw
jo
mov
add
cmp
xchg
mov
dec
idivl
add
addr16
push
cmp
sbb
test
mov
inc
sbb
push
out
rorl
cmp
insl
fwait
ljmp
push
mov
es
addb
stos
jp
lock
push
jo
mov
enter
push
movsb
mov
push
push
xor
arpl
push
jb
dec
fs
mov
jns
lea
sub
adc
mov
mov
scas
test
adc
cmpb
add
jne
outsb
pop
and
scas
mov
ret
jnp
mov
and
cli
pop
mov
lods
push
pop
mov
push
fldcw
xchg
dec
fdivs
es
iret
out
sub
lods
loopne
rolb
xor
cmp
and
add
sub
cmp
in
stos
fiadds
fs
jg
mov
cmp
push
fsubrs
xor
add
into
mov
lea
shlb
inc
cld
mov
or
xchg
and
inc
jg
sbb
pop
pop
and
out
cltd
loopne
mov
cltd
adc
jp
mov
mov
jnp
adc
movsb
add
pop
cmp
or
sbb
add
mov
sub
dec
sub
dec
jl
enter
lods
xchg
sub
ja
ljmp
pop
add
hlt
adc
add
mov
hlt
int
ficoml
pop
pop
push
mov
std
xor
rcl
scas
xor
lock
std
inc
sahf
and
push
inc
cmp
add
adc
cwtl
cltd
leave
bound
add
adc
mov
or
fsubl
adc
imul
push
xor
int
sbb
out
sbb
lahf
adc
inc
xchg
loop
cwtl
pop
xchg
jle
out
mov
mov
lock
sub
pop
mov
aad
cmp
inc
sub
adc
jbe
mov
pop
sbb
fsubrs
sbb
out
divb
ss
out
cmp
add
mov
sahf
ficomps
mov
sbb
nop
stc
cld
jb
ljmp
out
inc
sub
sbb
add
lods
loop
sub
fldl
adc
push
adcl
ds
cld
pop
sub
mov
cmp
push
scas
xchg
subb
sti
mov
mov
test
sub
test
imul
push
xchg
bnd
mov
sbb
fwait
rclb
mov
outsb
add
and
fs
imul
cld
mov
test
mov
cmp
lahf
lcall
mov
ja
repnz
xor
xchg
mov
scas
aam
adc
lret
fidivrs
call
lcall
or
xlat
test
aaa
jns
sub
popf
xor
xor
and
aaa
stc
bound
pop
shrl
sub
push
add
dec
les
in
xchg
pop
and
pushf
adc
iret
loop
in
jno
ljmp
push
or
and
arpl
pop
or
xchg
ret
pop
sbb
or
adc
lahf
loopne
call
shrb
or
movlhps
mov
adc
add
ljmp
or
mov
or
pusha
adc
lea
jl
mov
lahf
aas
dec
or
stc
int
add
sbb
adc
cwtd
lcall
cmp
cltd
fnstcw
mov
imul
and
lea
sbb
mov
lods
adc
mov
fidivs
lds
dec
hlt
sbb
push
push
out
loop
xchg
lods
and
adc
cmp
sbb
ret
dec
lea
in
jo
lret
movsb
xchg
mov
rol
scas
mov
push
adcb
adc
fldl
xchg
cmp
leave
je
cld
nop
pop
ffree
jae
cwtl
call
sub
inc
arpl
fisttpll
lea
ret
jo
mov
jns
lret
mov
cmp
adc
and
loopne
aaa
or
pushf
xor
add
mov
out
push
leave
jecxz
pop
push
cli
cmp
movsl
stos
inc
jb
es
dec
jp
cmp
aad
cmp
fwait
cmpsb
push
pushf
jbe
js
push
push
adc
push
xchg
or
and
push
repz
sahf
shl
and
aam
sbb
inc
int
ret
add
push
loop
add
int3
pusha
aam
xchg
push
in
jb
adc
stc
cmp
fs
jg
mov
psubsb
dec
push
mov
jg
out
ror
fisubl
nop
stos
sahf
mov
dec
cmp
xor
jg
sbb
jbe
lods
inc
or
fnstenv
sti
jb
bound
push
or
lahf
xlat
mov
push
loope
jne
inc
repnz
and
jbe
sbb
fbld
shrl
sbb
xchg
mov
mov
jmp
call
pusha
or
dec
mov
nop
das
cmp
cmpsl
test
adc
add
adc
pop
icebp
pushf
pop
mov
and
mov
mov
sti
mov
loopne
imul
arpl
movb
jne
mov
xchg
das
push
cwtl
or
push
cs
push
and
aaa
cld
sbb
incl
stos
push
push
sahf
mov
nop
stc
aas
les
dec
adc
mov
xchg
mov
cmpsl
inc
or
out
jns
stc
pop
pop
mov
pusha
mov
jno
adc
mov
inc
int
push
push
imul
dec
out
and
test
jnp
setne
idivb
pop
xorb
outsl
sbb
pushf
cmpsl
shll
movsb
fs
adc
xor
mov
cli
push
movsb
mov
sbb
cmp
stc
test
or
jnp
pop
cmp
xor
push
push
cld
mov
int
push
adc
stos
pop
clc
les
ja
pop
mov
sbb
mov
xchg
ret
repnz
pop
xchg
sbb
cmp
inc
push
mov
adc
pop
mov
adc
add
pop
pop
sbb
je
cmpsb
mov
outsl
out
jno
pop
mov
hlt
push
nop
test
loope
icebp
and
jmp
sub
mov
fiaddl
inc
sbb
inc
cld
jne
sub
jmp
mov
out
pop
sub
push
push
push
jns
mov
dec
mov
aaa
jno
jp
cmp
testl
mov
sti
pop
xchg
lea
inc
stc
or
pop
insl
jecxz
cmp
out
test
jecxz
xchg
cmp
data16
ljmp
or
cmp
push
sar
mov
int
fbstp
test
pusha
mov
icebp
pushf
inc
imull
mov
push
ja
add
jmp
movsl
add
jg
out
and
stc
jmp
cmp
add
push
data16
jge
daa
cmp
and
pop
lret
xor
xor
ror
das
xlat
int
adc
insb
pop
mov
push
jmp
daa
js
ret
sbb
pop
lods
and
pop
outsb
sub
cld
or
xchg
fwait
jmp
add
inc
mov
pop
add
xlat
mov
fistpll
popa
jbe
stos
inc
dec
inc
mov
in
or
fbstp
push
sbb
ror
out
scas
cmp
dec
cli
in
xchg
flds
adc
and
add
stos
in
xorl
adc
repz
or
fistpll
dec
jno
int3
dec
fistpl
clc
mov
xchg
js
pop
fwait
cmpsb
ljmp
dec
mov
stos
addb
xlat
test
out
add
jbe
mov
and
hlt
sbb
aam
mov
pop
idiv
pop
xor
push
adc
cmp
xchg
jb
fs
sbb
jo
test
cli
ds
xlat
je
push
jb
in
or
outsl
loope
loopne
xacquire
out
mov
ret
loopne
enter
mov
and
movsb
mov
in
movsb
movsl
les
je
into
loopne
arpl
inc
popa
gs
xor
add
movb
xor
push
mov
xchg
popa
jnp
jns
mov
adc
dec
dec
aaa
adc
sti
and
jo
sar
lea
stc
addb
push
stos
lods
nop
inc
adc
ljmp
add
mov
adc
push
ss
pop
mov
in
and
sbb
mov
jmp
ret
xchg
mov
stc
mov
rcrl
sets
sub
jno
mov
ret
fcmovnb
movsb
and
adc
push
or
xor
outsl
add
les
sti
sbb
lods
sbb
in
pop
mov
ljmp
xor
jne
pop
dec
mov
mov
push
lea
pop
mov
pop
jns
lock
out
or
js
mov
negb
fcomps
movsl
xor
mov
loopne
pop
hlt
and
out
cli
push
cltd
loope
push
mov
add
inc
mov
dec
in
cwtl
push
addr16
lcall
aam
add
cmp
ret
add
ficoms
mov
dec
pop
nop
xchg
mov
repz
jecxz
bound
lods
imul
xlat
mov
dec
and
jecxz
push
or
pushf
stc
push
or
and
les
cmpsb
pop
and
mov
jo
negb
inc
bound
jecxz
cmp
loopne
xor
push
pusha
mov
jmp
call
or
pop
cmp
lcall
and
xor
div
call
stc
in
subl
mov
lods
jmp
fwait
sarl
inc
sub
orl
push
mov
mov
test
push
or
popf
js
push
insl
cmp
xchg
add
dec
dec
mov
pop
inc
mov
xor
dec
les
cmpsl
fwait
loope
or
inc
inc
es
sbb
pop
sub
jp
adc
push
imul
or
sbb
sbbl
lea
sbb
lock
jl
icebp
mov
push
hlt
daa
mov
lret
out
insl
cmp
stc
add
cli
jno
push
sbb
mov
jb
mov
loop
jbe
mov
scas
inc
or
stc
inc
add
cmovns
xor
roll
imul
and
push
cmpsl
xor
and
jmp
adc
dec
adc
shlb
jl
leave
pop
adc
pop
scas
sbb
sahf
push
and
pop
mov
cld
pop
mov
stos
dec
imul
cmc
repz
data16
mov
xor
popa
mov
imul
cltd
mov
adc
sbb
andl
or
mov
insb
add
das
rorb
int3
xchg
rorb
in
add
jo
xchg
fsubrp
xchg
hlt
imul
adc
sub
sar
mov
fwait
sar
icebp
lcall
nop
mov
fistps
push
outsb
xor
push
out
mov
cmp
popa
adc
pop
dec
adc
insl
out
into
dec
mov
setle
jle
addr16
xor
fistl
dec
xchg
in
test
mov
sub
and
incl
push
adc
add
sbb
ja
xchg
rolb
dec
xlat
pop
push
std
loopne
inc
sbb
dec
mov
cmpsl
mov
inc
into
mov
sub
fs
mov
xor
sub
sbb
shr
sbb
divb
sti
mov
ret
mov
adc
js
mov
das
in
cmp
movsb
xor
rorb
mov
leave
addr16
hlt
cld
adc
sub
and
repz
or
daa
dec
mov
pop
outsl
push
or
lret
jp
inc
pop
test
xor
testb
jg
and
test
dec
fs
mov
gs
stos
scas
les
or
xchg
mov
or
push
lret
mov
dec
push
cwtl
xchg
add
scas
or
lods
addr16
adc
bound
cs
ss
mov
sub
stc
mov
lret
ja
shrl
lds
push
faddl
fs
cltd
mov
or
js
pop
dec
mov
jne
add
dec
mov
aaa
add
popa
inc
or
and
cmpps
stos
rep
inc
inc
push
aam
push
mov
js
mov
inc
jne
lock
cmp
mov
or
mov
pop
subl
test
sub
xorb
cmpsl
push
xor
sbb
int3
ss
adc
dec
ret
push
hlt
icebp
cltd
xchg
scas
mov
jne
push
mov
nop
adc
dec
mov
jg
jp
cmp
pusha
push
imul
ror
fmuls
pushf
dec
imul
cmpsb
fdivrs
lds
xor
xor
inc
insb
test
mov
mov
add
xchg
dec
cmp
sbb
add
in
mov
mov
cli
ljmp
clc
mov
jge
inc
icebp
test
ret
mov
push
sub
adc
jle
and
imul
nop
imul
inc
xchg
sbb
xor
dec
imul
pop
fdivrp
mov
sbb
mov
cld
jo
movsb
sbb
mov
pop
outsl
mov
jbe
hlt
test
sbbl
addr16
cli
cld
imul
and
jns,pt
subb
test
loopne
jg
sbb
jecxz
mov
mov
xchg
mov
sbb
dec
xor
cli
loopne
cltd
add
jne
cmp
fstpt
sub
add
dec
jns
shlb
subl
cmp
sub
mov
adc
aas
gs
repz
or
addr16
push
scas
mov
cmp
in
cwtl
mov
sbb
outsb
mov
mov
pusha
inc
push
fdivs
and
clc
xor
pop
cltd
nop
sub
sbb
pop
mov
movsl
xchg
xchg
pop
lcall
adc
call
aad
stos
adc
sbb
mov
push
mov
cmpsb
and
jl
push
insl
add
scas
loop
fwait
push
cltd
mov
loopne
sbb
fisttpll
mov
cmp
scas
mov
and
call
sub
mov
push
clc
aam
push
mov
inc
pop
int
out
ljmp
or
push
pop
lea
daa
pop
and
xchg
mov
aad
sbbl
nop
ljmp
out
mov
gs
inc
sub
sbb
pop
dec
add
pop
cmp
stos
push
pushf
ficoml
sahf
sbb
insl
add
negl
inc
adc
push
lds
nop
add
or
pop
pushf
lock
and
and
test
adc
imul
push
mov
nop
fbld
lret
and
nop
xor
into
adc
add
pushf
jg
insl
lods
sbb
sbb
lret
push
in
int3
xchg
insb
dec
mov
dec
push
mov
in
movsl
push
dec
roll
jbe
test
pushf
mov
test
xor
and
xor
push
or
aad
xor
jle
mov
inc
popf
int
ss
sbb
xchg
inc
push
sbb
fdivrs
ja
scas
cld
shlb
popl
push
adc
fwait
pop
mov
aad
push
mov
dec
sbb
or
cmp
mov
push
dec
inc
out
or
push
int3
loopne
je
cmpsw
and
mov
or
out
push
push
and
mov
cli
popf
add
imul
pop
mov
xchg
xor
adcl
adc
adc
fcomip
mov
gs
push
pusha
mov
lahf
sbb
jmp
push
sub
shll
clc
or
dec
sbb
test
flds
sub
and
stos
mov
sbb
pop
mov
popa
bound
sahf
ljmp
mov
push
xchg
outsb
ljmp
jnp
ret
jnp
into
or
or
gs
in
push
mov
jnp
lds
int3
jb,pt
jl
sbb
xchg
cmp
adc
xchg
dec
shl
pop
push
mov
jmp
jle
adc
shl
jg
orl
xchg
mov
sarl
inc
aaa
decb
sub
push
andb
cmp
insb
test
xchg
lret
loopne
icebp
jo
pop
inc
cs
sbb
sti
les
and
xchg
lods
fnstenv
aaa
xor
loopne
ret
pop
xchg
mov
jl
push
enter
dec
notl
mov
shll
rol
mov
xchg
add
mov
cmpsl
add
pop
adc
popa
addr16
xchg
cwtl
pop
addr16
add
xchg
dec
aad
sbb
add
xor
and
dec
lcall
sub
cmp
stc
dec
push
pop
ss
inc
inc
jb
repz
fs
daa
jno
xlat
add
sbb
lea
sub
pop
mov
insl
mov
sbb
adc
lea
sbb
xchg
jmp
xor
pop
nop
dec
iret
push
lret
sub
jb
into
sbb
sbb
push
mov
lahf
jmp
mov
cld
or
mov
outsb
adc
push
pop
lahf
rcrl
or
cmp
cmp
mov
or
jge
insb
das
adc
std
dec
in
sbb
mov
fldl
sub
jb
inc
xchg
cs
add
mov
lahf
out
adc
xchg
daa
imul
arpl
mov
mov
sbbl
loop
push
dec
push
mov
cld
xor
scas
and
xor
xchg
xchg
push
jp
adc
xchg
sub
mov
xorl
insl
jae
cwtl
mov
inc
mov
je
outsb
mov
push
mov
dec
daa
negl
sbb
repnz
and
lds
insb
add
aam
std
mov
xchg
sub
pop
pusha
pop
push
jle
mov
inc
jno
std
outsb
mov
dec
int3
xor
inc
aas
push
inc
movsl
iret
mov
filds
sub
hlt
cmpsl
or
adc
arpl
mov
pop
sub
rol
sarb
jb
jne
jle
in
or
push
push
rcl
int
xchg
add
scas
mov
test
arpl
cmp
add
and
fcomi
xchg
inc
mov
ljmp
dec
sbb
mov
shlb
inc
adc
lret
cld
dec
pop
int3
pop
add
push
bound
sub
mov
daa
jle
xor
stc
pop
in
test
xchg
mov
xchg
push
add
loopne
mov
ja,pn
cmpsb
mov
jbe
rcrl
repnz
in
outsl
sbb
sub
in
je
sub
push
les
mov
xchg
jp
and
loopne
imul
push
cli
jge
enter
bound
pop
xchg
loop
lahf
arpl
sti
jecxz
dec
inc
jne
gs
clc
mov
outsb
mov
mov
sbb
int
mov
and
dec
leave
cwtl
les
cmpl
jmp
xchg
push
js
sbb
mov
scas
fs
bound
cmp
ret
or
fs
icebp
sub
iret
mov
sbb
mov
or
add
or
add
ss
cmpsb
push
cs
or
add
out
jp
inc
or
mov
leave
repz
xchg
sbb
mov
aaa
mov
ds
aas
cmp
scas
scas
fsubr
nop
inc
or
mov
and
into
lret
cmp
jecxz
mov
push
movsb
xchg
sub
arpl
mov
add
shlb
push
push
int
sbbl
repnz
mov
sub
xchg
adc
enter
xchg
out
cmp
mov
int3
fdivp
xchg
daa
ja
jp
jne
mov
dec
pop
cmp
inc
cmpsl
insb
adc
ret
jecxz
subb
jecxz
fildll
out
enter
push
push
and
dec
mov
jle
imul
in
mov
icebp
out
int3
clc
rcll
xchg
xorl
fadds
ficoml
mov
push
inc
xchg
in
jno
push
add
cli
fwait
test
sub
jns
insl
das
cmp
add
sub
iret
or
pop
inc
repnz
clc
lea
mov
xchg
lret
cmpsl
xchg
push
jns
outsb
mov
xor
mov
and
das
xlat
out
xchg
jp
push
xchg
decl
addr16
pop
jne
xlat
bound
pop
andl
jmp
xchg
push
jecxz
lods
inc
adc
fst
aas
into
xchg
pushf
inc
stos
insb
xchg
bound
cmpl
cli
test
cltd
mov
sub
jmp
mov
inc
xor
cld
insl
enter
and
insl
and
add
jmp
push
xchg
lea
pop
push
cld
cltd
push
outsb
xorl
and
imul
mov
lcall
int
outsb
fnstcw
and
rolb
icebp
jne
sbb
jnp
add
xor
outsb
scas
push
sbb
ja
cmc
push
outsb
fstpt
pop
jg
cmpsb
and
out
insl
push
xchg
dec
push
inc
sbb
mov
add
sub
je
movsl
sbb
subl
mov
out
mov
or
mov
adc
stc
mov
popa
repnz
push
or
jns
xchg
push
or
pusha
gs
adc
fistl
cmp
hlt
pop
pop
hlt
xor
enter
mov
jecxz
sbb
cmpsb
jne
es
cld
lret
pop
lods
sub
fisttpll
push
sub
jge
push
mov
sub
popf
shrl
fdivs
dec
add
mov
outsb
out
push
jo
insb
inc
lods
cld
and
and
mov
pop
xchg
paddb
xchg
stc
leave
mov
aas
or
insb
fists
sbb
int3
or
fldt
std
dec
jecxz
loope
mov
call
cmp
jg
hlt
dec
dec
ljmp
mov
lock
pop
inc
xchg
in
jnp
xorb
lcall
mov
or
inc
sbb
adc
push
frstor
cmpl
add
arpl
lcall
mov
fs
in
sbb
add
fs
or
lcall
data16
sbb
and
movsl
cmp
std
jmp
repz
xor
scas
pop
jae
addr16
xchg
xlat
xchg
push
jno
xor
adc
xchg
out
test
das
mov
mov
push
adc
dec
mov
into
inc
shl
push
adc
pop
sahf
lods
sbbl
sarl
inc
mov
jae
inc
pushf
lret
ja
or
add
and
sub
push
lea
shll
jne
hlt
inc
dec
jle
lods
int3
cmp
sub
es
push
jmp
fstpl
dec
and
clc
out
or
xchg
adc
pushf
pop
imul
push
insb
jno
and
xchg
mov
inc
data16
call
or
pushf
idivb
cli
sahf
and
push
sbb
jge
cwtl
push
mov
push
insb
or
push
lea
mov
mov
xchg
adc
mov
mov
loop
aaa
jp
jl
mov
fisubrl
leave
cmp
or
xchg
inc
repnz
pop
fmull
testl
mov
js
outsl
pop
mov
xchg
fidivrs
xchg
cmp
sub
gs
mov
pusha
das
cs
imul
xor
aam
unpcklps
arpl
in
jle
mov
add
sbb
inc
fwait
adc
sbb
jp
push
ljmp
dec
mov
cmp
push
fldcw
out
in
push
mov
pop
mov
popf
clc
je
loop
mov
test
mov
shll
loope
adc
adc
loope
push
pusha
push
adc
and
push
and
jecxz
rorl
cs
add
push
imul
or
outsl
popf
sub
clc
adc
cmp
cmp
sub
loopne
mov
aam
sbbb
adc
dec
cld
sub
mulb
in
xor
fimull
adc
shl
mov
or
loope
mov
aas
dec
and
jns
cmc
jl
and
into
dec
rcll
cli
jmp
data16
jns
mov
dec
mov
xchg
mov
or
bound
inc
shll
jle
mov
test
jbe
lcall
stos
push
arpl
and
cmp
in
iret
in
add
hlt
clc
cmp
mov
mov
test
lods
mov
pop
mov
ljmp
in
xchg
std
add
sbb
ja
addl
sbb
push
and
push
int3
sbb
push
scas
dec
mov
fwait
int
es
sub
inc
loopne
daa
or
lret
dec
push
icebp
xor
pop
shl
pusha
push
data16
lds
sbb
int3
pop
cmp
scas
push
nop
inc
inc
icebp
push
repnz
xchg
sub
cmpsb
ss
outsb
jmp
aam
push
mov
xlat
lahf
or
jl
loop
in
ljmp
out
gs
mov
loopne
jnp
insb
or
imul
push
push
sbb
fdivrs
pop
mov
adc
sub
or
sar
out
roll
andl
sarb
lret
xor
add
lock
jl
lcall
push
sbb
fdivrl
sbb
hlt
cli
stos
add
inc
shrb
sub
jbe
sbbl
xlat
mov
mov
in
xchg
jp
rcrl
std
mov
push
xor
mov
popl
les
dec
fisubrl
push
jp
xor
inc
loopne
cmp
pop
mov
push
lods
push
aas
loopne
and
mov
add
lcall
data16
inc
das
adc
inc
jle
push
popa
bound
aad
icebp
outsl
lahf
jp
iret
jle
pop
test
cmp
mov
cwtl
inc
jge
int
sub
mov
out
mov
mov
notb
dec
aam
mov
lcall
testb
jmp
fs
sub
mov
mov
bound
scas
lods
mov
loope
ljmp
divb
mov
dec
pop
les
xchg
push
clc
mov
loopne
aad
mov
ret
xchg
sti
subl
adc
push
sub
imul
pushw
sub
mov
xchg
jns
inc
or
sahf
mov
div
xchg
jbe
outsl
fs
ror
mov
cmp
cli
ret
inc
fildll
mov
leave
ret
and
push
fisubrl
jb
aad
cmp
mov
lea
xchg
xchg
in
test
stos
scas
leave
movsb
je
test
addr16
mov
fdivs
repz
cli
inc
test
aad
into
iret
lods
jl
addr16
dec
xchg
add
popf
mov
lcall
popa
and
or
mov
les
mov
mov
mov
out
int3
and
inc
fnsave
jmp
add
cmp
in
pop
mov
mov
sub
hlt
mov
or
enter
jnp
pop
xchg
inc
lds
jmp
jns
pop
in
or
das
mov
ss
sahf
mov
cmp
push
push
push
pop
xor
xor
ds
jb
push
ljmp
jg
cwtl
jb
fmuls
jne
sbb
fildl
pop
and
push
and
fistpl
sahf
out
mov
mov
inc
mov
adc
int3
nop
repnz
xchg
rol
mov
ret
mov
lret
data16
inc
or
scas
inc
std
sub
adc
xchg
sub
lahf
mov
test
xor
mov
rorl
jbe
mov
add
inc
fildll
outsb
pop
dec
inc
cmp
andb
push
scas
and
pop
pop
clc
cld
cmp
sbb
cld
pop
jne
pushw
sub
call
and
dec
xchg
testb
mov
ret
cltd
loop
sub
cld
jmp
int
inc
fistpl
imul
inc
dec
cli
adc
push
in
ja
cmpl
leave
inc
push
xchg
int
sbb
dec
jp
mov
adc
imul
inc
push
add
jl
add
mov
and
xchg
icebp
movzwl
popl
pop
sbb
and
jnp
mov
xchg
icebp
sub
xlat
stc
inc
fmull
jecxz
scas
fidivrl
add
cs
xchg
xor
mov
aam
or
jecxz
or
outsl
fwait
sbbl
shl
sub
pop
push
and
pop
js
fs
dec
inc
test
fwait
pop
adc
inc
shld
jbe
fisubl
sbb
fwait
test
popa
aad
push
xchg
mov
inc
int
jns
ljmp
stc
mov
shll
pop
mov
aas
test
sahf
popa
xlat
nop
or
sub
jne
jmp
js
scas
push
xlat
aad
insl
mov
lock
test
lea
xorb
inc
jp
imul
inc
dec
in
sbb
mov
imul
testb
out
pop
mov
out
in
xchg
sub
push
sbb
stc
push
and
aas
mov
sub
mov
jne
shlb
adc
aad
insb
pop
pop
sbb
icebp
stos
pop
jb
jne
and
popf
cs
icebp
mov
pop
fidivrs
xor
repz
jle
fs
jge
inc
rcr
pop
or
add
stos
dec
cmp
sbb
mov
pop
mov
hlt
pop
mov
adc
mov
dec
mov
push
gs
push
mov
pop
cli
pop
or
xchg
pop
adc
adc
and
mov
fimuls
inc
aaa
xchg
aaa
test
fsub
xor
insb
stos
push
and
les
mov
sub
rolb
aam
aad
add
insl
lods
cs
mov
cmp
sbb
inc
dec
pushf
mov
dec
jl
out
mov
decb
out
and
addr16
cli
popa
shr
mov
mov
cmpsb
push
jp
push
sub
mov
call
test
inc
and
in
andl
ds
lret
cmp
js
nop
xor
cltd
pop
je
pop
adc
lods
lahf
mov
jbe
shlb
adc
xchg
test
cmp
jmp
ficomps
mov
outsb
aaa
inc
push
js
aad
hlt
out
or
scas
xor
jnp
imul
push
bound
inc
sti
or
inc
xchg
push
add
dec
bound
test
rclb
loopne
ret
add
std
test
mov
mov
push
test
jno
cmp
fwait
cmp
insl
sti
imul
shr
pop
in
adc
lock
aam
cli
cwtl
push
push
rcrl
aas
stos
dec
fnsave
addr16
xchg
dec
inc
and
mov
loopne
push
and
jb
mov
cltd
mov
mov
in
push
arpl
test
cmp
std
into
xchg
ret
fimuls
xor
jecxz
jo
push
lcall
arpl
loope
cwtl
jl
je,pn
push
add
adcl
mov
nop
add
testb
or
xor
pop
call
into
sarl
xchg
mov
shr
ss
cltd
sbb
sahf
push
pop
jle
adc
cwtd
inc
test
xchg
pop
mov
nop
add
and
sub
leave
mov
imul
stc
xchg
shrl
and
das
out
or
js
clc
rorl
pushf
xchg
imul
popa
push
lds
and
ret
out
lea
scas
outsl
dec
mov
aaa
pop
pop
xchg
xchg
popa
and
das
inc
pop
mov
outsl
mov
inc
inc
or
lea
sub
icebp
arpl
in
cmp
push
inc
mov
xchg
xchg
or
mov
xchg
xchg
cs
dec
xchg
xchg
xor
pusha
insb
cmpsb
pop
cld
iret
mov
cld
adc
sub
in
xor
push
dec
jne
and
rcr
imul
and
pop
outsb
scas
jmp
orb
pop
gs
ret
push
stos
add
insb
sbb
adc
outsl
and
insl
lods
hlt
inc
ljmp
les
jbe
bnd
arpl
push
sub
or
xor
or
int
scas
loopne
mov
inc
add
jnp
cmp
xor
lret
mov
out
std
pop
outsb
outsl
sbb
mov
nop
pop
cld
dec
sbb
xor
push
test
pop
mov
stc
inc
xor
pushf
adc
sbb
mov
and
enter
mov
ret
test
aaa
repz
cmc
cmp
cmp
push
js
mov
imul
and
dec
jnp
jo
insb
js
lds
inc
adc
cmpb
loop
sub
dec
adc
test
lahf
outsb
cmpb
insb
xor
xor
dec
bound
mov
adc
ds
stc
pushf
or
in
push
lock
mov
lcall
arpl
add
or
sbb
mov
push
ja
jg
int
fildl
stos
xchg
fwait
mov
das
cmp
enter
rol
pop
cmp
xchg
in
loope
jo
cmp
shlb
xchg
jns
popa
clc
pop
mov
fwait
popf
test
pop
icebp
jno
popa
les
jp
or
pop
xchg
xchg
popa
mov
adc
xor
mov
sarl
add
mov
xchg
and
imul
out
pop
push
dec
mov
xor
jno
xor
sar
or
or
loope
push
jle
push
fisubs
lahf
mov
pop
mov
out
jo
scas
fucomp
flds
pushf
xor
mov
jns
sarb
jl
cltd
mov
push
andb
mov
loop
leave
xchg
pop
rcr
loopne
push
popa
xorb
push
jmp
sub
sbb
scas
dec
hlt
in
xchg
xchg
andl
shll
or
xor
sub
mov
push
dec
pop
mov
pop
adc
jnp
cmp
cmp
int
cltd
mov
inc
sbb
pop
popl
cli
push
cmp
lcall
or
nop
add
lahf
gs
mov
xlat
mov
cmpsl
dec
jmp
outsb
or
cmpsb
mov
mov
aad
pop
adc
out
mov
add
jge
xchg
ret
add
pop
mov
mov
jmp
pop
pop
xor
sbb
cltd
push
std
mov
cli
ljmp
pop
xor
push
ja
xchg
popa
jmp
mov
fstps
stc
push
test
gs
jle
ror
mov
or
insb
add
sub
pop
jae
stos
incb
mov
out
test
dec
enter
sub
sbb
jp
out
pop
insb
fs
les
aaa
std
rcll
fadd
push
jmp
mov
lods
imul
fs
sbb
add
sbb
xor
loop
dec
or
pop
pop
arpl
mov
jb
xchg
ds
inc
ljmp
xor
dec
or
push
ss
mov
in
dec
rol
jmp
inc
roll
xchg
sub
push
in
sub
insb
xchg
popf
adc
popa
out
lcall
push
bound
mov
inc
add
addb
out
add
mov
pop
out
cmp
cmp
and
stos
mov
and
xchg
fnstsw
shll
mov
aas
popf
jne
test
fisubrl
lahf
shlb
push
add
repnz
popl
xlat
push
fstps
pushf
sub
mov
popa
xchg
mov
pop
sbb
lds
fcomip
inc
leave
xor
addb
adc
add
lahf
rcrl
add
inc
movsb
roll
push
mov
sub
xlat
or
into
jno
and
sbb
ret
test
into
inc
movsl
xchg
add
loopne
aaa
in
mov
daa
sbb
ljmp
sbb
loopne
clc
aaa
sbb
xor
movsl
xlat
mulb
inc
jge
negb
or
and
stos
ret
and
xchg
cmc
repnz
mov
mov
cmp
lahf
idiv
or
lret
push
lea
in
push
cmpsl
sbb
push
mov
push
jno
lcall
icebp
ret
pusha
loope
mov
movsl
rcll
fbstp
xor
and
stos
pop
sub
or
mov
sti
repnz
mov
ret
xor
mov
idivb
mov
jmp
dec
add
add
add
cmpsl
mov
inc
lahf
vpperm
push
adc
lahf
es
push
lea
sub
mov
andps
dec
dec
mov
pop
es
push
sbb
cmp
ja
jmp
cmp
add
ja
xor
and
cwtl
jns
mov
lret
aam
sbb
int
adc
je
jle
mov
add
fildl
sub
adc
movsl
movb
ja
arpl
mov
or
inc
mov
leave
mov
mov
lcall
fildl
pusha
jle
daa
stos
test
stos
aam
imul
xlat
cld
hlt
imul
or
das
cmpl
or
shlb
fs
out
lock
mov
gs
scas
mov
int3
cli
sbb
add
add
dec
rcll
adc
popa
lcall
test
xchg
sbb
pop
in
mov
push
int
gs
pop
and
lock
push
cmc
jg
mov
ljmp
ljmp
aad
dec
ret
loopne
sbb
es
shlb
dec
idivl
sub
or
stos
enter
xlat
out
jecxz
dec
sbbb
xor
jmp
add
pop
push
and
fildl
in
jns
lea
pop
movsl
sub
and
daa
push
nop
jl
jmp
out
imul
mov
arpl
jecxz
mov
pop
xor
mov
mov
loop
ljmp
int
push
inc
sub
xor
in
xchg
xlat
imul
jge
cmpl
mov
das
ss
xlat
clc
roll
imul
sub
fwait
pop
pop
cmp
cmp
je
imul
movsl
or
push
mov
sub
es
xchg
add
jmp
adc
cmp
adc
addb
adc
cmpb
cwtl
push
mov
mov
jne
lahf
pop
adc
jne
inc
xorl
ret
gs
push
ss
push
xchg
push
gs
mov
in
xor
jb
fildl
push
pusha
add
and
pop
xor
add
mov
and
popf
mov
mov
mov
and
xorb
and
ficomps
fucomp
mov
add
ss
pop
xchg
gs
out
loope
clc
popf
rolb
cli
cltd
iret
lret
scas
adc
filds
scas
push
mov
out
lock
ja
add
popa
out
les
jbe
cmpsl
in
fldenv
xor
subl
sub
aam
inc
inc
popf
mov
or
dec
and
push
cld
repz
mov
shll
fidivl
or
stos
out
imul
cmp
inc
xor
xor
jne
mov
jb
dec
push
ret
mov
mov
or
inc
in
push
push
add
addr16
xor
jmp
jno
pusha
fisttpl
outsl
dec
xchg
sub
frstor
hlt
popa
inc
nop
pop
movd
mov
cmp
xor
mov
mov
jecxz
sbb
push
test
fisubs
mov
test
jmp
js
inc
cmpsl
dec
shlb
fmuls
pop
xchg
gs
stc
test
test
sub
std
aas
fs
aas
xchg
movsl
outsl
dec
xchg
lds
dec
data16
divb
dec
sbb
add
dec
fsubrl
pop
popa
push
das
add
icebp
ds
dec
adc
aaa
mov
and
sbb
andl
mov
mov
into
idivl
mov
popf
fcoms
addl
repz
jl
movsl
pop
mov
adc
test
push
jne
and
mov
adc
ret
adc
imul
sarl
cwtl
and
or
mov
ja
push
add
ljmp
and
cmp
jo
add
cmpsb
mov
pop
push
sub
xchg
mov
xchg
jg
sub
xlat
inc
fwait
mov
or
pop
cwtl
icebp
dec
jo
lret
ja
icebp
mov
or
sbb
fs
xor
fbld
or
and
mov
das
jmp
sub
xor
pop
adc
mov
or
addr16
fildll
insb
rclb
enter
and
mov
aas
jo
jne
cmp
mov
xchg
stos
cli
jge
aam
mov
and
and
inc
jne
add
or
add
add
add
add
add
add
add
es
lock
mov
and
add
add
add
or
add
pop
add
jmp
add
inc
call
add
and
add
or
pop
add
add
add
out
std
or
adc
daa
pop
add
daa
and
add
mov
add
std
add
add
adc
add
add
add
and
and
or
add
and
add
add
add
add
and
add
add
add
add
add
add
or
add
and
add
or
or
add
and
add
mov
and
add
add
adc
add
and
add
add
add
add
